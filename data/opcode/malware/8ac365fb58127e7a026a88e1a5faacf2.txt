call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
jmp
xor
loop
sub
inc
xor
and
and
sub
add
shr
fs
ins
enter
pop
inc
mov
pop
cmp
push
aas
fwait
xchg
adc
pop
xor
jl
(bad)
lock
cmp
push
cs
(bad)
jnp
ret
and
xchg
jo
mov
jne
mov
stos
(bad)
mov
cli
addr16
scas
mov
movs
nop
in
sbb
popa
cmp
stc
push
inc
sahf
mov
shr
pop
aaa
mov
adc
test
int3
sub
shr
jbe
jle
(bad)
and
imul
mov
mov
gs
lods
cdq
cmc
and
push
mov
cli
(bad)
add
cmps
xchg
out
fstp
fs
lods
mov
sar
jmp
cmps
sub
aaa
adc
xchg
iret
sub
je
mov
jns
rcr
mov
(bad)
sub
jae
mov
push
in
ins
dec
mov
std
fld
dec
stos
xchg
repnz
daa
sub
mov
fdiv
icebp
int
push
sbb
shr
sbb
mov
jl
les
pop
mov
jbe
mov
sub
lahf
sti
out
xor
and
loope
sub
inc
pop
mov
scas
fstp
and
ins
enter
sbb
icebp
push
jp
ret
not
pop
(bad)
mov
pusha
mov
cmp
push
cs
(bad)
jnp
add
dec
sub
sub
in
inc
xor
inc
das
mov
mov
ins
fdiv
int
push
add
data16
imul
cmp
sub
push
jmp
adc
sbb
test
data16
lea
neg
fstp
lahf
fstp
retf
cmp
ror
fld
push
in
fst
(bad)
fbld
fwait
das
jo
jns
imul
jmp
pop
and
pop
cmps
jno
ror
sub
dec
sbb
dec
jl
cmc
mov
mov
sbb
shl
popf
rol
pop
pop
shl
icebp
cmps
fwait
cmc
sub
mov
icebp
clc
cwde
and
pop
rcr
sbb
shl
and
xor
lods
test
and
dec
fldenv
sub
imul
push
push
cmc
and
mov
sbb
ret
inc
sahf
push
and
sub
in
ss
addr16
xchg
dec
mov
gs
and
cmp
dec
or
xchg
cdq
xor
movs
pop
and
pop
adc
rep
sub
int3
jecxz
cmps
cld
icebp
retf
ins
adc
popf
shl
ret
cdq
sbb
cmps
ja
sub
hlt
pop
ds
mov
fstp
sbb
imul
out
dec
fwait
das
dec
jnp
neg
dec
call
push
iret
jmp
push
repnz
inc
pop
repnz
jmp
call
bnd
jmp
pop
sbb
dec
pop
repnz
jb
jmp
(bad)
jmp
push
repnz
or
push
push
repnz
jb
jmp
or
push
movhps
push
push
repnz
jmp
push
repnz
xor
repnz
cmps
dec
hlt
dec
dec
xchg
iret
test
repnz
cmp
jno
xchg
mov
dec
(bad)
stc
in
mov
adc
push
movhps
es
shl
or
push
push
repnz
test
dec
push
movhps
(bad)
lss
and
dec
dec
shl
ja
push
repnz
push
loopne
inc
jle
test
dec
idiv
into
jmp
out
dec
cmp
mov
cmp
icebp
std
aam
push
fucomp
push
adc
int3
inc
je
xchg
je
cld
or
xlat
sbb
jmp
jb
retf
xchg
dec
cmp
dec
adc
fnstsw
dec
xchg
in
dec
mov
data16
sti
and
retf
into
jmp
pop
and
stos
push
das
cmps
xchg
fst
dec
fwait
das
and
xor
loopne
in
and
cmp
add
pop
push
rcl
sbb
shl
fldlg2
aam
enter
icebp
mov
sub
data16
mov
and
xor
shl
push
push
dec
sbb
cmp
cdq
sbb
hlt
fisubr
add
movs
repnz
push
movs
shl
pop
pop
(bad)
in
sub
les
sub
icebp
pop
imul
sbb
imul
fst
movs
adc
dec
icebp
rcl
push
ss
add
imul
sbb
pop
mov
cmp
lds
sbb
aam
sub
mov
fadd
pop
(bad)
sar
mov
ror
nop
pop
lods
ss
jl
dec
sbb
and
cmp
and
mov
sbb
call
call
sti
cdq
and
inc
lahf
jmp
mov
movs
mov
in
sub
mov
xchg
mov
adc
ror
call
adc
push
mov
gs
pop
push
mov
scas
movs
xor
pop
and
call
scas
sbb
mov
inc
(bad)
rcr
popa
adc
dec
xor
pop
adc
(bad)
inc
repnz
outs
ins
fcom
sbb
inc
repnz
aaa
iret
sbb
fisttp
repnz
cmc
arpl
sbb
lock
and
fstp
imul
dec
outs
(bad)
push
jb
icebp
xchg
dec
sbb
xlat
dec
xchg
call
push
mov
sbb
repnz
lea
shl
jl
out
add
sbb
ror
cs
into
fcomp
ror
out
sbb
dec
fld
sub
sbb
cmp
pop
out
imul
dec
outs
fiadd
or
ss
sbb
ror
mov
dec
cmp
sbb
mov
fst
dec
push
fst
dec
and
ror
xor
and
enter
sbb
push
xor
jae
xor
not
add
xchg
jnp
fnstsw
gs
ror
xor
add
stos
jns
dec
jno
inc
mov
sub
push
mov
retf
shr
jns
shr
or
mov
scas
sbb
out
test
jb
shl
movs
ins
or
js
mov
jbe
outs
(bad)
out
in
xor
call
movs
add
(bad)
adc
adc
scas
pop
fcomp
aam
dec
adc
out
cwde
in
jno
xor
or
adc
ins
movaps
mov
and
mov
push
adc
fsub
idiv
and
jb
shl
jo
or
cli
adc
lea
jnp
push
imul
pushf
push
imul
jno
lock
fld
adc
mov
cld
call
out
sub
scas
push
xchg
stos
jle
mov
repz
fmulp
ins
and
mov
pop
xchg
adc
mov
mov
dec
nop
cmp
or
ins
pop
mov
and
sbb
cwde
int3
or
retf
scas
cld
adc
jmp
fwait
xor
jnp
jb
std
je
outs
cld
sbb
lahf
push
jno
scas
in
mov
scas
in
je
mov
sahf
retf
in
je
mov
movs
and
xor
jo
xor
in
imul
jmp
xchg
in
out
aad
out
pop
in
out
aad
out
pop
in
out
aad
out
pop
in
out
aad
out
pop
in
out
aad
out
pop
in
out
aad
out
pop
in
out
mov
push
lds
(bad)
push
lds
fisub
js
add
call
das
js
into
xchg
cmp
(bad)
mov
mov
cmc
(bad)
and
cmc
(bad)
jecxz
(bad)
shr
pop
inc
add
inc
in
mov
mov
cli
dec
stc
mov
adc
mov
and
sti
(bad)
in
stc
or
int
(bad)
lds
mov
jp
stc
mov
and
adc
sti
(bad)
out
stc
or
int
(bad)
lds
mov
jp
cmp
cmp
sti
or
add
nop
mov
pop
cmp
vpaddsw
clc
xchg
out
cmp
shl
xchg
cmps
and
xor
gs
out
pop
in
out
(bad)
fucomi
pop
sub
inc
push
ins
and
sbb
xlat
mov
ins
sbb
sti
(bad)
in
jns
(bad)
or
lahf
(bad)
shr
pop
movs
push
es
icebp
(bad)
mov
mov
call
adc
adc
push
add
inc
popa
es
and
test
shl
out
sbb
out
xchg
dec
in
or
test
int
xchg
fisub
mov
cmps
mov
cwde
xchg
(bad)
hlt
push
popf
cdq
(bad)
shr
pop
movs
push
cmps
cmp
repnz
and
not
daa
push
movs
mov
(bad)
fucomp
pop
xchg
(bad)
hlt
push
(bad)
stos
and
cmps
std
push
frstor
cdq
test
cmps
(bad)
fisub
retf
es
mov
pushf
loope
in
dec
mov
(bad)
jmp
adc
mov
repz
shl
xor
xchg
loopne
movs
test
lods
shl
iret
das
jno
nop
adc
xchg
ins
je
aad
mov
in
fdivr
cmc
std
pushf
test
das
ins
icebp
pop
nop
adc
(bad)
push
mov
xor
adc
mov
jecxz
mov
call
and
or
popf
not
xor
(bad)
aad
out
jno
mov
retf
ins
sub
or
movs
adc
mov
in
dec
xchg
jb
xor
pushf
gs
icebp
sbb
sbb
adc
shr
jne
inc
sahf
or
jns
xor
dec
or
jl
jb
shl
fmul
and
bound
inc
(bad)
in
icebp
fstp
mov
cld
je
outs
in
movs
int3
mov
jne
and
mov
jno
lea
lods
in
lea
or
scas
bound
dec
popa
xchg
add
mov
mov
mov
sub
and
movs
mov
jle
dec
push
das
test
lea
in
jmp
nop
push
sub
test
add
das
lods
in
mov
cmc
shr
mov
add
retf
xchg
sub
retf
outs
out
outs
sbb
gs
sbb
fcom
sbb
lock
mov
icebp
mov
sub
push
loopne
adc
imul
scas
cld
stos
lds
push
add
imul
fld
fisub
push
scas
pushf
mov
leave
outs
sbb
xor
mov
lahf
movs
ds
cmps
add
adc
push
loope
sbb
inc
lds
inc
ss
dec
mov
loopne
clc
mov
daa
arpl
fld
add
jg
add
jg
mov
in
fmulp
pop
les
lds
fistp
pop
mul
sbb
ds
gs
xor
push
fadd
scas
sbb
pusha
cmps
loop
jno
cmp
push
dec
dec
int3
sbb
stc
pop
push
fs
or
ror
adc
arpl
fldcw
popf
je
xor
sbb
push
sbb
push
pop
sub
and
jne
push
pop
pop
mov
pop
inc
sar
gs
jne
adc
jo
sbb
lock
fcom
or
fdiv
pop
push
sub
push
sbb
push
sbb
sub
xor
jne
and
call
sbb
stc
in
je
hlt
idiv
adc
mov
out
adc
push
adc
nop
adc
push
jg
push
adc
mov
movs
fs
stc
jbe
cmp
pop
mov
cld
in
dec
mov
aad
repnz
mov
sbb
mov
out
or
push
push
push
scas
in
hlt
dec
cmps
adc
sbb
push
pop
repz
call
in
inc
or
(bad)
shr
fwait
dec
mov
ss
mov
adc
in
inc
ds
enter
mov
sub
fdivr
outs
xor
sub
int
inc
nop
lods
in
call
adc
ds
or
test
shl
fnstenv
jge
jp
xchg
gs
mov
fbstp
xor
std
mov
xchg
mov
jne
jmp
and
cmp
fs
fwait
ins
jno
scas
in
je
lods
call
dec
xor
lds
cmp
jbe
shl
jle
ror
adc
in
(bad)
leave
cmc
mov
sub
mov
scas
cmc
dec
enter
mov
adc
pusha
shl
cld
dec
(bad)
hlt
mov
mov
cld
out
mov
jmp
push
call
and
fadd
adc
aad
call
in
mov
xchg
xor
lock
xor
mov
dec
sti
jb
aaa
push
scas
dec
out
pushf
jmp
in
call
out
pushf
jmp
in
call
stos
pop
jecxz
lods
fdiv
add
outs
or
fdiv
dec
fnstenv
dec
out
push
scas
enter
dec
out
jb
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
mov
mov
out
fidivr
shr
pop
sub
push
mov
mov
leave
mov
adc
int
loop
pop
out
add
pop
stos
sbb
add
ror
add
mov
leave
mov
adc
int
loop
pop
jmp
lods
sbb
add
ror
add
or
leave
mov
adc
int
loop
pop
jmp
add
fist
push
into
(bad)
loop
mov
mov
call
jb
neg
adc
test
adc
shl
push
shl
push
cli
lock
aaa
popa
adc
shl
in
shr
cli
hlt
je
mov
mov
push
cli
lock
aaa
popa
adc
int3
xchg
mov
sbb
shl
sbb
ja
mov
data16
push
cmp
mov
or
pushf
adc
shl
(bad)
aad
push
call
jb
lea
pop
call
xor
mov
test
adc
jo
push
outs
jo
adc
jb
xlat
shl
in
shr
cmp
(bad)
(bad)
ror
loop
xlat
cli
mov
test
loope
sar
jp
rol
aaa
cmp
mov
ret
push
neg
xor
out
call
(bad)
(bad)
loop
das
popa
adc
into
xor
adc
jmp
sbb
inc
call
add
adc
loop
out
pop
test
sub
mov
xor
mov
mov
cmp
shl
enter
xor
jp
aaa
loope
adc
sbb
xchg
in
inc
test
in
inc
test
in
shr
mov
mov
sbb
add
push
call
xchg
repz
loop
mov
cmp
or
jmp
dec
cmp
outs
add
lock
test
push
nop
adc
push
hlt
sar
mov
dec
pop
div
call
shl
aaa
jo
mov
xchg
ins
lahf
enter
ja
sub
not
(bad)
aam
pop
adc
enter
je
push
jmp
ror
adc
xchg
mov
cld
push
test
in
xor
shl
lods
cwde
add
or
add
out
push
mov
mov
test
shl
cmp
pusha
sahf
in
xor
push
mov
cld
xchg
test
in
jno
mov
cmp
hlt
leave
in
mov
pushf
shl
dec
fidiv
mov
and
sar
sub
mov
in
test
or
mov
pop
mov
clc
jmp
adc
jbe
push
je
das
mov
mov
loop
fsubr
cwde
call
adc
cmp
das
sub
mov
mov
and
or
je
cmp
in
jmp
nop
int
mov
in
je
mov
test
lea
lods
and
fmul
add
or
scas
hlt
add
ins
adc
test
xor
dec
frstor
dec
sbb
mov
stc
stos
xor
mov
mov
out
cmc
jb
aas
test
jnp
ja
xor
outs
inc
mov
push
jnp
aaa
inc
out
mov
sub
mov
adc
jb
adc
cld
enter
in
mov
sub
mov
popa
mov
gs
iret
dec
jle
dec
lods
jnp
pop
enter
mov
pop
shr
pop
lods
add
outs
nop
nop
inc
jb
mov
sti
stos
mov
push
sbb
pop
xchg
stos
pop
mov
lods
int3
add
mov
mov
gs
js
fwait
shl
push
sub
jge
pop
mov
pop
and
jae
popa
pop
(bad)
dec
cwde
jg
test
ins
mov
or
mov
push
test
mov
(bad)
nop
add
ja
adc
addr16
mov
mov
std
gs
dec
mov
cmp
sar
fs
daa
ja
ffreep
movs
cdq
sbb
push
popf
cmp
push
xor
xchg
push
push
xchg
or
clc
xchg
mov
inc
enter
(bad)
jg
mul
test
fwait
or
(bad)
outs
retf
movs
(bad)
int
add
cmp
std
mov
cmps
call
xor
mov
ins
mov
xor
dec
iret
stc
test
add
inc
pop
movs
dec
mov
dec
movs
push
scas
in
imul
dec
mov
lods
in
rcr
xchg
mov
push
cvtpi2ps
scas
pop
movs
push
sbb
sub
dec
xchg
in
imul
in
rcr
xchg
mov
push
cvtpi2ps
aaa
jne
push
fwait
pop
movs
pop
scas
dec
sub
mov
test
push
mov
iret
dec
movs
push
lods
dec
movs
dec
mov
inc
dec
sub
xor
mov
xchg
mov
in
lods
push
mov
in
cmp
ficom
inc
je
pop
mov
push
inc
and
mov
push
test
pop
fs
add
in
bound
div
in
and
jnp
cwde
push
jecxz
mov
xor
mov
loop
fwait
pop
add
sub
stos
dec
call
jg
xchg
rol
(bad)
not
mov
cmp
adc
inc
lea
fiadd
jne
or
mov
push
mov
dec
sar
pop
gs
dec
mov
jecxz
mov
jg
sbb
dec
cld
sub
pop
imul
mov
or
mov
mov
call
ins
test
mov
(bad)
popa
stos
lods
mov
push
out
mov
mov
push
push
ror
jge
pop
mov
jns
adc
mov
adc
leave
cmp
push
xchg
jno
hlt
aas
fs
mov
inc
xchg
mov
js
sub
sbb
test
xchg
je
jo
das
pop
fs
add
pop
addr16
xchg
(bad)
loope
daa
cmp
in
fwait
or
(bad)
dec
add
mov
xchg
stos
call
or
mov
cmps
cwde
sbb
pop
push
mov
ret
movs
cdq
test
or
fstp
xor
mov
iret
mov
popa
mov
inc
mov
mov
sahf
in
lods
push
adc
(bad)
jo
bnd
fnsetpm(287
sbb
in
addr16
in
jo
repnz
dec
fnsetpm(287
sbb
in
jnp
neg
inc
xlat
stc
mov
shl
mov
dec
pop
jo
in
jo
in
jo
in
jo
in
push
pop
push
mov
xchg
jo
sbb
in
push
ja
mov
shl
sbb
mov
jo
gs
fs
sub
into
jo
in
loopne
jae
jo
in
cmps
jno
sbb
jbe
rol
aam
mov
(bad)
inc
shl
jo
in
loop
lds
jo
jmp
cmpxchg
sbb
sbb
jmp
jo
test
shl
sbb
mov
dec
popa
add
jno
inc
inc
retf
mov
lock
and
js
out
jo
sub
push
loop
jae
in
cmp
push
lods
xlat
in
jge
lds
shl
gs
call
mov
pushf
mov
rcr
dec
pshufw
jb
inc
xor
in
mov
out
jo
adc
adc
in
movs
inc
inc
add
aam
mov
ror
mov
bound
mov
fsub
in
jo
mov
sbb
push
fcomp
jo
pop
int
ror
aaa
lds
shr
inc
popa
pop
mov
movs
aad
mov
int
cmp
shl
movs
inc
stc
shld
sbb
dec
and
rcl
mov
out
xor
mov
jno
mov
lods
xlat
in
and
jno
mov
fisub
sbb
icebp
scas
out
shl
fs
mov
(bad)
ds
in
shl
daa
cmp
pop
jmp
pop
add
jmp
pop
test
pop
pop
jmp
pop
lods
jg
pop
pop
jmp
pop
test
pop
pop
jmp
pop
test
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
addr16
jbe
js
adc
jg
xor
lds
jmp
pop
mov
outs
pop
jno
mov
jns
cmps
fisubr
in
jl
pop
mov
sbb
xchg
nop
xchg
add
and
fisubr
cmc
fwait
adc
jg
mov
nop
inc
mov
cmp
pop
xchg
addr16
and
push
jle
mov
aas
dec
mov
mov
shl
retf
mov
mov
jecxz
enter
retf
add
pop
retf
aam
cdq
lods
js
xchg
jg
sbb
popf
leave
mov
retf
enter
hlt
jmp
mov
movs
scas
and
jns
and
mov
mov
ja
lock
cmp
je
jo
cwde
fwait
or
pop
gs
dec
hlt
xor
jae
mov
sbb
jne
aad
hlt
pop
popa
movs
adc
jg
xor
mov
dec
movs
enter
data16
neg
dec
movs
fwait
sbb
inc
push
cld
fiadd
dec
movs
cwde
js
mov
dec
jmp
fwait
pop
cmc
(bad)
or
dec
loopne
and
(bad)
(bad)
les
ds
push
pop
or
push
add
loopne
xor
lods
and
js
mov
adc
mov
or
sub
xchg
dec
dec
addr16
add
pop
sub
sbb
cmp
push
xor
cwde
or
or
lea
adc
cmp
ds
(bad)
loopne
xor
push
out
and
ss
(bad)
loopne
xor
push
out
and
aaa
out
xchg
(bad)
sub
out
and
mov
out
xchg
(bad)
loopne
xor
push
out
and
ss
xchg
(bad)
loopne
xor
push
out
and
loope
repz
int
add
lds
sub
cmp
rcr
les
inc
push
inc
repz
and
(bad)
loope
mov
loop
cmp
pop
and
les
and
loop
ins
sbb
shr
mov
iret
(bad)
xor
pop
and
mov
pop
and
enter
adc
into
aas
push
in
add
adc
cmp
in
ret
xchg
pop
and
(bad)
(bad)
loope
mov
les
out
loope
cdq
pop
and
cmp
popa
retf
ja
out
test
cmp
mov
mov
iret
mov
pop
gs
dec
loope
jmp
xor
pop
in
pmaxub
stos
sub
js
test
mov
sti
mov
mov
pusha
mov
inc
inc
popf
pop
stc
and
fwait
(bad)
mov
nop
sub
clc
dec
pop
imul
cwde
sbb
mov
pop
data16
test
jg
mov
arpl
pop
shl
dec
push
xchg
sbb
pushf
sbb
data16
dec
movs
cwde
sbb
inc
hlt
inc
xchg
mov
std
mov
inc
pushf
jg
xor
xchg
xchg
sbb
imul
mov
enter
loop
dec
inc
jo
cvtdq2ps
push
addr16
dec
cmp
test
jge
push
and
mov
stos
mov
mov
add
mov
inc
stos
ins
push
cmp
retf
mov
cmps
jmp
mov
push
push
xchg
sbb
imul
mov
push
test
retf
jl
inc
cmps
jg
mov
sbb
movs
fwait
xchg
mov
mov
bswap
mov
jge
push
cwde
add
jl
or
pop
cdq
push
inc
push
ret
movs
fwait
jo
dec
bound
pop
cmp
repz
pop
scas
in
pop
xchg
aam
mov
mov
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
and
loopne
jl
js
ins
sbb
adc
xor
mov
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
push
xor
adc
or
ins
test
sub
push
test
xor
test
or
ins
test
sub
je
gs
mov
test
adc
xor
and
cmp
xor
mov
test
or
ins
test
sub
push
test
xor
test
cmp
hlt
test
gs
mov
test
xor
sbb
jge
xor
sub
xor
jo
adc
hlt
test
gs
mov
test
popa
xor
hlt
test
sbb
xor
xor
jns
push
test
xor
test
jns
push
test
sub
xor
jo
sub
xor
lods
xor
test
xor
adc
sub
je
gs
mov
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
cmp
shl
add
popa
xor
sbb
gs
je
adc
xor
pusha
test
lods
xor
test
xor
sbb
and
sub
lods
xor
test
loope
test
xchg
lea
xor
pop
mov
dec
fs
sbb
lods
sub
jl
xor
mov
cwde
fs
xor
je
xor
lods
scas
xor
test
je
mov
in
popf
movs
add
and
mov
or
data16
xchg
sub
(bad)
jmp
(bad)
mov
test
xchg
movs
outs
scas
xor
mov
mov
xchg
and
mov
mov
enter
and
test
scas
pushf
mov
mov
lods
xor
mov
or
and
test
scas
pushf
mov
mov
lods
xor
mov
or
and
test
scas
pushf
mov
mov
lods
xor
mov
test
and
outs
lods
xor
xchg
mov
in
xchg
cmc
outs
lods
xor
mov
test
enter
xor
push
js
data16
pushf
mov
mov
imul
mov
pusha
addr16
xor
test
add
call
scas
enter
xor
or
repz
outs
lods
xor
mov
call
xor
out
popf
lods
push
js
addr16
pushf
mov
mov
mov
je
movs
push
jecxz
outs
lods
xor
xor
mov
repz
je
xor
mov
je
xor
mov
jbe
xor
mov
jbe
xor
mov
or
and
test
scas
xor
mov
test
mov
test
scas
xor
ins
test
je
push
cdq
and
lods
xor
or
mov
or
pop
cwde
ins
test
xor
mov
and
ins
mov
mov
imul
mov
pusha
addr16
xor
test
add
call
scas
enter
xor
or
repz
outs
lods
xor
pop
call
mov
pop
dec
push
mov
fsubr
mov
test
movs
cwde
jmp
test
xor
mov
mov
push
clc
mov
dec
loop
lods
xor
fs
std
movs
push
mov
loopne
test
and
and
push
scas
loopne
scas
push
lds
jl
hlt
je
pop
sbb
imul
pop
cmp
lods
shl
cmp
pop
lods
xor
mov
sub
mov
push
lods
loopne
sub
xor
(bad)
mov
test
mov
daa
mov
into
mov
mov
mov
movs
inc
cwde
cwde
ins
test
or
push
jecxz
lods
xor
mov
sub
pop
cmps
push
xor
mov
into
pop
push
push
jecxz
outs
lods
xor
mov
push
jecxz
outs
lods
xor
mov
push
arpl
pusha
xor
call
mov
xor
or
mov
test
mov
loop
fs
xor
push
test
xor
fs
xor
js
mov
test
clc
xor
scas
mov
mov
xor
inc
clc
mov
jg
clc
mov
dec
mov
xor
and
stc
mov
lods
xor
push
push
sar
mov
lods
xor
mov
jle
stc
mov
gs
xor
mov
push
test
xor
xchg
stc
mov
test
pushf
mov
test
pushf
mov
mov
lods
xor
mov
test
je
xchg
pusha
xor
or
stc
mov
test
enter
xor
add
and
jl
mov
lods
xor
mov
test
dec
arpl
imul
mov
call
mov
aam
xor
call
lods
xor
mov
mov
lods
xor
test
js
ins
test
enter
and
lods
xor
mov
test
clc
xor
ret
scas
xor
lods
push
scas
loopne
push
sbb
mov
test
clc
xor
mov
retf
lods
mov
lods
xor
mov
test
push
mov
imul
mov
push
mov
aam
xor
call
lods
xor
mov
mov
popa
xor
lods
lods
xor
or
imul
lods
xor
jg
stc
mov
dec
shl
gs
xor
add
sar
test
lods
enter
xor
add
and
test
sbb
push
xor
int
popf
movs
or
cmp
add
and
test
pop
test
and
mov
mov
repnz
or
pop
pop
test
lock
adc
ins
mov
xchg
dec
jb
retf
das
push
adc
or
dec
movs
and
mov
jmp
cmp
xor
addr16
mov
shl
pop
stos
pushf
sahf
movs
pushf
js
cmp
shr
xchg
fdiv
jg
xchg
mov
rcr
in
ins
retf
jge
jmp
xchg
aaa
popf
xor
data16
retf
ror
push
imul
push
sub
push
jl
pop
enter
imul
push
add
fs
aad
ins
xchg
lods
dec
mov
sub
pop
rcr
xchg
mov
rcl
pop
gs
pop
fs
sbb
mov
popf
jb
pop
nop
es
xor
cmp
int
mov
cmc
pop
sbb
ret
mov
stos
mov
xor
test
inc
xchg
mov
repz
jle
ins
hlt
mov
pop
dec
hlt
shl
nop
(bad)
pop
ins
(bad)
xchg
dec
cld
mov
pop
gs
mov
sbb
dec
movs
cwde
xchg
adc
lods
ret
jg
pop
push
cmp
push
mov
lock
fwait
or
add
gs
lds
mov
stos
mov
fcomp
ret
movs
cdq
jo
dec
ret
movs
cdq
jo
dec
mov
pop
rol
mov
test
scas
clc
sbb
xchg
js
lock
dec
mov
pop
mov
fstp
add
pop
sub
dec
mov
stc
dec
adc
adc
aas
adc
ds
(bad)
inc
xchg
sbb
adc
xchg
loop
add
adc
xchg
repnz
adc
fiadd
xchg
scas
cmps
out
test
out
(bad)
dec
aam
fimul
ds
iret
(bad)
iret
mov
scas
adc
shl
or
sbb
(bad)
fcmovu
adc
into
xchg
ds
out
adc
mov
xchg
fild
adc
(bad)
iret
stc
ds
pop
jno
(bad)
sbb
(bad)
xchg
int3
fcomip
dec
aam
ficomp
adc
fimul
loop
add
adc
test
cmps
fbstp
mov
xchg
mov
adc
xchg
repnz
adc
xchg
xchg
loop
add
(bad)
shl
or
test
neg
scas
xlat
dec
mov
stos
fwait
test
adc
icebp
ds
fbld
ds
fbld
sti
fiadd
adc
xchg
fldcw
xchg
div
xchg
scas
fcmovne
lea
fild
(bad)
adc
lods
add
xchg
mov
out
fist
xchg
hlt
out
xchg
hlt
cmps
lahf
fucomp
xchg
repz
cmps
out
popf
sahf
xchg
fbld
scas
scas
xchg
adc
mov
fnstcw
(bad)
mov
sti
(bad)
mov
not
mov
ds
repz
(bad)
mov
ds
(bad)
fiadd
adc
xchg
jmp
shl
xchg
xchg
repz
fistp
mov
cmps
iret
fnstsw
ret
mov
scas
ret
test
ret
dec
fadd
adc
lds
ret
call
repnz
call
lods
mov
fcomip
ds
lods
test
fist
mov
iret
dec
movs
call
adc
mov
(bad)
xchg
ds
xchg
sahf
scas
sti
test
retf
ficom
mov
ds
fwait
xchg
adc
fisttp
jmp
xchg
cli
adc
lods
repnz
xchg
cmps
iret
lea
ret
iret
(bad)
xchg
sbb
fsubrp
mov
loop
sti
mov
scas
xchg
sti
mov
mov
fisttp
neg
mov
repnz
fstp
retf
out
xchg
adc
adc
movs
mov
scas
adc
mov
test
xchg
add
xchg
cmc
ds
out
popf
and
test
mov
fisttp
stos
xchg
fwait
mov
fisttp
mov
adc
fnstcw
sahf
neg
out
fwait
shr
neg
mov
adc
stos
dec
aam
(bad)
mov
mov
dec
movs
mov
iret
dec
aam
(bad)
adc
adc
lods
mov
jmp
stos
(bad)
adc
stos
dec
pushf
sahf
xchg
(bad)
ret
xor
lahf
jmp
test
lods
xchg
sti
lods
loop
ret
xor
ds
xchg
repnz
fst
iret
ret
lods
ficom
(bad)
xchg
mov
repz
iret
shl
stos
adc
stos
dec
mov
scas
xchg
test
scas
lahf
adc
test
not
loop
mov
xchg
not
sti
test
faddp
lods
add
fnstcw
shr
lods
stos
stos
out
icebp
ds
iret
xchg
mov
mov
test
fisttp
sbb
xchg
xchg
mov
stos
adc
mov
mov
iret
leave
stos
fucomi
popf
xchg
adc
lods
cmp
fnsave
mov
aam
adc
sar
imul
sbb
cmc
ds
movs
mov
adc
test
adc
test
fisttp
sbb
rcr
scas
mov
ds
loop
iret
shr
mov
stos
test
mov
mov
(bad)
lods
loop
div
repnz
xchg
mov
sahf
jmp
mov
fild
xchg
adc
mov
(bad)
repz
leave
mov
dec
ror
adc
test
ds
fdecstp
xchg
xor
mov
adc
scas
add
fild
movs
call
neg
or
mov
lahf
jmp
xchg
scas
jmp
xchg
dec
cwde
jmp
lock
stos
icebp
ficom
loop
mov
iret
cmc
stos
fisttp
mov
(bad)
int3
(bad)
(bad)
dec
int3
call
popf
sub
xchg
mul
lahf
test
call
sar
out
lea
cmps
out
mov
mov
ret
xchg
test
mov
repz
xchg
xchg
stos
fisttp
mov
adc
fnstcw
cmps
out
mov
not
dec
test
cmps
(bad)
mov
fild
mov
adc
test
scas
xchg
test
mov
mov
cdq
mov
out
fnstsw
call
out
mov
test
adc
xchg
div
iret
test
ds
jmp
mov
xlat
lods
ds
test
ds
out
test
mov
xlat
rcr
sub
iret
iret
fldcw
sbb
repnz
cwde
mov
adc
cmc
ds
mov
xlat
cmp
fcomip
test
bnd
(bad)
mov
repz
(bad)
jmp
ds
fstp
call
call
mov
ds
test
repnz
dec
aam
(bad)
mov
sti
(bad)
mov
not
dec
fsubr
adc
icebp
ds
sti
(bad)
xchg
ds
xchg
xchg
jmp
not
(bad)
xchg
mul
dec
clc
ficomp
dec
lods
mov
into
fptan
xchg
xchg
mov
(bad)
lods
out
mov
fnstcw
retf
out
scas
xor
into
xchg
int3
loop
into
test
xchg
xchg
xchg
stos
fisttp
mov
into
out
test
mov
scas
fucomp
xchg
sti
adc
stos
dec
cwde
jmp
adc
mov
mov
(bad)
dec
mov
xchg
repz
loop
mov
dec
fcomp
stos
dec
movs
jmp
test
rol
adc
scas
repz
adc
xchg
scas
mov
lods
xchg
xchg
mov
fcomip
test
(bad)
scas
xchg
sahf
scas
test
loop
sti
mov
out
xchg
add
xchg
adc
mov
adc
(bad)
dec
mov
xchg
fwait
test
adc
lods
or
lea
scas
sti
mov
mov
repz
scas
(bad)
mov
call
rcr
fiadd
mov
mov
or
fnstcw
mov
fldcw
mov
mov
stos
adc
lds
ret
out
mov
mov
mov
mov
fcmovnu
xchg
mov
fnstsw
ret
add
adc
adc
xchg
ds
out
test
ds
mov
fist
mov
fisttp
mov
fisttp
stos
iret
scas
lods
idiv
fbld
repnz
fnstcw
call
sti
fiadd
lods
out
sbb
fmulp
test
jmp
movs
add
sar
not
stos
fisttp
div
call
mov
mov
cmps
mov
adc
scas
idiv
jmp
icebp
loop
sti
mov
jmp
mov
ds
mov
out
sar
iret
rol
sahf
sar
mov
mov
fiadd
adc
mov
rcr
iret
(bad)
jmp
adc
scas
repz
xchg
dec
mov
xchg
adc
(bad)
dec
mov
ror
shl
(bad)
test
mov
dec
pushf
mov
adc
int3
ds
icebp
fdivp
stos
icebp
ficom
repnz
out
mov
test
out
scas
adc
mov
iret
adc
repnz
lock
stos
lock
out
popf
sahf
scas
sti
xchg
repnz
lds
xchg
sti
mov
imul
dec
add
call
ficomp
fnstsw
ficomp
adc
xchg
sbb
scas
adc
xchg
popf
lahf
xchg
mov
xchg
mov
pop
(bad)
out
neg
lea
sbb
ds
mov
fwait
test
(bad)
mov
test
xchg
stos
int3
out
call
test
repnz
fnstcw
sahf
neg
sti
fimul
not
adc
scas
(bad)
xchg
mov
sti
xchg
ds
leave
fwait
xchg
rcr
xchg
adc
rcl
cdq
stos
fisttp
mov
adc
lods
aas
into
xchg
int3
loop
xchg
ds
sti
test
adc
mov
xchg
(bad)
scas
sti
mov
bnd
(bad)
ds
iret
mov
mov
iret
leave
call
lea
ret
(bad)
ds
fld
stos
repz
adc
aam
fimul
mov
adc
scas
dec
cwde
stos
xchg
mov
xchg
dec
fcom
adc
cmc
ds
lods
out
ret
dec
fsubr
adc
adc
fcmovne
leave
call
lods
xchg
xchg
mov
xchg
xchg
test
adc
xchg
mov
iret
(bad)
adc
mov
ds
(bad)
sti
mov
fdiv
fiadd
test
xchg
mov
adc
scas
repz
xchg
test
scas
xlat
lea
(bad)
fild
(bad)
adc
xchg
repz
mov
ret
mov
repz
adc
mov
lahf
jmp
repnz
mov
sub
aas
(bad)
sahf
(bad)
jmp
sahf
adc
xchg
cmp
rcl
lds
retf
fild
cmps
xchg
xchg
inc
out
movs
mov
fiadd
cdq
xor
shr
call
fisttp
mov
fucomi
leave
mov
scas
(bad)
call
test
loop
sti
mov
mov
iret
popf
xchg
adc
lods
mov
ficom
sbb
(bad)
dec
fdivr
sahf
imul
fwait
xchg
repz
mov
lahf
movs
ds
ret
stos
(bad)
lods
mov
sar
xchg
cmp
retf
xchg
fnstcw
sahf
not
inc
sti
mov
mov
jmp
out
adc
xchg
test
int3
call
lds
ret
fwait
mov
test
fnstcw
fdivrp
(bad)
into
mov
aas
retf
fcmovne
scas
enter
mov
ret
fild
scas
xchg
repz
adc
adc
xlat
dec
xchg
mov
dec
fcomp
adc
adc
xchg
add
test
mov
fdiv
fiadd
test
test
lahf
mov
adc
test
ds
ficomp
adc
stos
dec
hlt
fcomi
scas
hlt
ficom
into
mov
fwait
neg
xchg
lahf
fld
shr
xchg
xchg
dec
movs
mov
adc
xchg
mov
out
lods
xchg
into
sbb
ret
dec
mov
aas
(bad)
xchg
repnz
icebp
(bad)
mov
dec
int3
mov
adc
test
sahf
jmp
call
test
fisttp
stos
stos
jecxz
mov
sti
mov
ficom
rcr
dec
mov
sub
cwde
imul
repz
xchg
cmp
(bad)
adc
xchg
fld
lahf
out
test
faddp
(bad)
mov
cmc
ds
test
stos
xchg
fnstsw
add
test
fnstsw
ror
test
cmps
out
popf
sahf
mov
xchg
xchg
(bad)
xchg
mov
stos
test
aas
repnz
enter
fdivr
adc
rcr
fisubr
ds
call
fldz
cmps
iret
test
(bad)
mov
xchg
repnz
jmp
adc
fiadd
fdivr
xchg
sbb
mov
mov
out
ret
scas
adc
mov
rcr
(bad)
sti
test
mov
dec
test
mov
adc
stos
dec
test
fist
enter
mov
xchg
mov
dec
lock
stos
adc
(bad)
call
xchg
mov
adc
xchg
stos
fistp
fadd
mov
and
lahf
not
repnz
mov
mov
fld
xchg
fwait
mov
mov
test
mov
(bad)
xchg
repnz
test
cmps
iret
fnstenv
mov
fdecstp
test
lahf
xchg
dec
lock
stos
lock
xchg
ds
jmp
xchg
fld
stos
(bad)
call
xchg
xchg
fild
and
mov
not
xchg
mov
xlat
popf
sbb
movs
stos
stos
dec
mov
mov
mov
test
out
mov
fdiv
fiadd
cdq
stos
(bad)
cmc
aas
(bad)
mov
jecxz
ficom
stos
lahf
sti
mov
(bad)
adc
xchg
lds
xchg
repz
and
test
ds
iret
xchg
mov
mov
adc
adc
test
adc
xchg
imul
dec
pushf
test
adc
xlat
dec
pushf
and
adc
test
mov
xchg
imul
(bad)
lods
sbb
lods
out
ret
scas
adc
mov
jmp
mov
adc
xchg
loop
out
mov
ficomp
test
xrelease
test
rcr
fnstsw
or
xchg
stos
(bad)
repz
rcr
dec
cwde
sub
xchg
repnz
lahf
mov
inc
jmp
xchg
xchg
repnz
jmp
xchg
xchg
jmp
scas
lahf
lea
sti
(bad)
out
test
mov
jmp
test
repz
xlat
dec
mov
stos
adc
test
scas
div
ds
movs
jmp
adc
ret
out
ret
mov
fist
stos
fistp
sub
xchg
out
out
xchg
mov
movs
stos
mov
dec
fdivr
xchg
dec
xchg
repnz
xchg
xchg
repnz
ret
fild
or
fldcw
xchg
cmp
adc
test
stos
test
not
neg
not
stos
icebp
fcomip
stos
adc
xchg
sar
mov
cli
ror
add
lea
xchg
test
mov
fldcw
lahf
fild
repz
ror
iret
popf
imul
xchg
sub
xchg
out
xchg
xchg
repz
fisttp
mov
(bad)
adc
xchg
repz
shl
lods
(bad)
adc
fnstcw
mov
test
(bad)
mov
mov
cmps
idiv
mov
shr
shl
neg
mov
fild
xchg
lods
jmp
test
scas
out
stos
adc
lods
xchg
ret
xchg
not
call
mov
cmc
ds
fptan
xchg
not
fisubr
ds
sti
mov
ds
mov
xchg
int
(bad)
sar
mov
dec
(bad)
jmp
sahf
les
sbb
sub
mov
scas
mul
stos
mov
sbb
xchg
sti
mov
cmps
fcmovnu
cmc
ds
mov
ficom
(bad)
xchg
imul
dec
mov
xchg
repz
mov
test
call
mov
stos
adc
lods
(bad)
mov
mov
pop
lahf
fldz
stos
fcomip
ds
repz
adc
scas
(bad)
mov
scas
sub
repnz
test
ficomp
adc
cmps
dec
sar
stos
dec
mov
cmps
inc
scas
mov
fnstsw
cli
iret
popf
sahf
xchg
xor
mov
test
fcmovu
lea
mov
into
mov
repnz
shl
scas
repz
mov
sar
mov
adc
ret
out
into
dec
rol
out
fnstcw
xchg
shr
mov
test
adc
movs
ds
(bad)
ds
iret
sar
fwait
mov
mov
(bad)
xchg
out
mov
sar
into
iret
test
mov
ret
cmc
mov
call
loop
repz
ret
dec
sar
xchg
dec
mov
mov
vmovlps
test
adc
lods
xchg
jmp
cmps
scas
add
xchg
movs
ds
test
cmps
iret
(bad)
(bad)
adc
(bad)
dec
mov
cmps
iret
icebp
call
cdq
mov
dec
test
ror
fnstcw
adc
test
stos
cmps
imul
stos
cmps
iret
test
mov
out
lods
xchg
xchg
mov
iret
fldcw
mov
test
out
xchg
adc
adc
mov
xchg
ret
(bad)
out
test
xchg
mov
jmp
mov
ds
sti
xchg
jmp
movs
add
cmc
cmps
iret
fstp
(bad)
popf
jmp
mov
ret
scas
adc
fisttp
call
adc
mov
sar
mov
fldcw
xchg
xchg
mov
adc
fiadd
popf
scas
xchg
lea
mov
lods
xchg
add
adc
fldcw
scas
sti
leave
stos
fucomi
test
stos
cmps
ret
test
adc
fnstcw
adc
(bad)
out
popf
stos
adc
lods
mov
(bad)
fimul
adc
or
(bad)
mov
adc
mov
stos
stos
xchg
test
adc
test
lahf
lahf
(bad)
adc
add
ret
scas
out
ds
ror
xchg
div
xchg
out
scas
repz
cmps
out
fucomp
fcmovnu
(bad)
adc
cdq
mov
ret
cdq
ds
iret
mov
stos
xchg
xchg
mov
not
mov
(bad)
ds
(bad)
dec
fdivr
adc
mov
call
lea
scas
repz
xchg
repz
ds
mul
repnz
out
movs
mov
lahf
mov
mov
(bad)
xchg
test
ret
scas
aad
faddp
lods
out
mov
ret
xchg
test
sub
cwde
test
lods
cmp
test
jmp
fsub
scas
add
(bad)
repz
mov
mov
mov
adc
mov
(bad)
dec
lock
stos
adc
xchg
(bad)
fucomp
stos
xlat
adc
xchg
dec
cwde
jmp
mov
(bad)
out
test
sahf
scas
add
fcmovne
mov
repnz
fldz
adc
xchg
mov
xchg
dec
test
scas
fwait
mov
adc
mov
xchg
fstp
adc
test
mov
int
scas
add
fsubp
mov
rcr
fnstcw
sahf
jmp
fistp
mov
ds
mov
adc
xchg
mov
call
scas
call
stos
xchg
xchg
mov
call
repnz
mov
mov
mov
ds
(bad)
popf
sbb
adc
mov
lods
imul
repz
ds
call
jmp
sar
out
leave
stos
fisttp
movs
add
test
ror
adc
xchg
test
retf
(bad)
out
scas
repz
xchg
repnz
test
adc
xchg
mov
out
test
ret
imul
out
sti
mov
xchg
out
xchg
mov
(bad)
lods
xchg
iret
ror
out
stos
adc
cmp
mov
lea
cmps
out
shl
cli
mov
lahf
mul
xchg
add
fimul
movs
mov
fucomi
lods
out
fisttp
sbb
test
mov
fnstsw
xchg
adc
xchg
mov
xchg
sti
adc
adc
(bad)
fcomi
lea
xchg
xlat
(bad)
ficom
mov
stos
fisttp
add
shl
mov
mov
mov
ds
shl
iret
iret
fnstsw
mov
sar
xchg
movs
stos
fisttp
sub
lods
xchg
xchg
test
stos
ffreep
mov
stos
dec
mov
mov
call
repnz
iret
mov
stos
stos
dec
test
lahf
(bad)
int3
call
ficom
cli
xlat
(bad)
aad
xlat
dec
xchg
call
adc
xchg
mov
mov
ficomp
sar
lahf
cdq
mov
lahf
lea
mov
dec
fdivr
faddp
xchg
test
mov
stos
ret
dec
aam
ficom
fldl2e
lahf
out
mov
repz
stos
adc
xchg
mov
dec
shr
ret
dec
fsubr
or
xchg
adc
xchg
scas
movs
sub
cdq
mov
test
aad
fdivp
lods
loop
iret
test
mov
xchg
loop
test
repnz
leave
stos
or
rcr
hlt
out
dec
mov
xchg
repz
stos
adc
fnstcw
scas
test
mov
adc
adc
repnz
shr
dec
mov
stos
stos
dec
fdivr
scas
add
adc
test
fld
popf
call
fld
scas
idiv
div
iret
test
sub
lea
xchg
xor
xchg
jmp
sahf
xchg
dec
sar
or
mov
lods
xchg
mov
out
adc
adc
rol
fdiv
mov
mov
xchg
xchg
xacquire
adc
mov
repnz
iret
fnstcw
call
ds
dec
pushf
mov
adc
test
ficomp
mov
cmps
iret
popf
ds
lods
test
shr
xchg
fwait
rol
fwait
cmc
ds
mov
mov
xchg
ds
test
sti
leave
stos
fisttp
mov
fild
fstp
lahf
iret
sar
sti
lods
loop
sbb
sahf
jmp
fisttp
mov
xchg
mov
mov
ret
lods
ficom
ret
mov
fwait
mov
mov
xor
fild
xchg
div
dec
mov
adc
lods
xchg
(bad)
out
ret
(bad)
out
adc
xchg
out
lahf
jmp
not
xchg
lods
mov
dec
movs
mov
adc
xchg
repnz
call
adc
adc
mov
(bad)
(bad)
ds
mul
jmp
xchg
(bad)
repnz
mov
ds
adc
fnstcw
mov
xchg
scas
adc
xchg
loop
fcomip
stos
adc
fldcw
ror
mov
xchg
fisubr
repnz
mov
adc
xchg
mov
out
test
mov
ret
xchg
xchg
lods
out
xchg
sub
sar
sbb
mov
out
test
(bad)
fucomip
adc
scas
sti
adc
mov
fstp
fiadd
lock
dec
adc
into
xchg
(bad)
repnz
int3
repnz
rcr
mov
stos
fistp
adc
xchg
or
adc
(bad)
mov
out
test
fisttp
loop
add
(bad)
out
lods
(bad)
adc
fsqrt
adc
xchg
xchg
mov
cli
adc
xchg
mov
lahf
jmp
xlat
xchg
aad
adc
icebp
sti
fiadd
enter
fdivr
adc
mov
cmps
out
mov
sahf
xchg
mov
ds
xchg
test
fiadd
sar
adc
int
fisttp
neg
call
xchg
xchg
sti
fiadd
xchg
ds
xchg
out
adc
xchg
ds
(bad)
int3
test
fstp
adc
lods
or
mov
scas
xchg
shl
xchg
popf
ficom
xchg
call
adc
mov
mov
aas
(bad)
sbb
(bad)
sbb
adc
lock
cli
(bad)
iret
stc
(bad)
xchg
fnstcw
ror
(bad)
iret
neg
scas
xlat
sbb
(bad)
sbb
mov
sti
fiadd
xchg
xchg
call
sti
(bad)
mov
sti
(bad)
mov
cli
(bad)
dec
pushf
sahf
scas
(bad)
lods
mov
iret
stc
loop
stos
test
mov
movs
and
aad
ficomp
leave
stos
(bad)
dec
aam
(bad)
xchg
xchg
repz
stos
adc
fimul
out
mov
shr
or
fild
adc
xchg
mov
neg
dec
xchg
mov
(bad)
ds
xchg
out
out
fwait
iret
mov
mov
xchg
mov
ficomp
movs
stos
ret
iret
mov
aas
(bad)
sbb
fiadd
cwde
call
lock
sahf
shl
mov
out
iret
out
mov
ds
(bad)
fnstsw
adc
xchg
xlat
(bad)
adc
scas
dec
cwde
mov
adc
cmc
sti
fiadd
fsub
scas
add
(bad)
(bad)
int3
test
(bad)
neg
dec
mov
xchg
fldcw
iret
fist
mov
adc
cdq
mov
fisttp
scas
(bad)
jecxz
inc
xchg
adc
xchg
mov
cmps
iret
test
out
xchg
shl
ror
jmp
mov
call
out
movs
mov
adc
xchg
repnz
lods
xchg
cli
xchg
mov
(bad)
out
xchg
cdq
stos
fisttp
jmp
xchg
loop
ret
mov
mov
neg
mov
stos
xchg
xchg
fwait
xchg
(bad)
fdiv
adc
enter
fucomp
xlat
sbb
adc
fdiv
(bad)
dec
mov
mov
(bad)
cmc
mov
mov
repz
jecxz
scas
adc
ret
(bad)
ds
jmp
dec
fsubr
ficomp
adc
mov
sti
mov
test
xchg
inc
adc
(bad)
jmp
mov
mov
repz
stos
aam
fimul
mov
ret
out
xchg
xchg
xchg
test
xlat
dec
aam
xchg
(bad)
(bad)
adc
(bad)
adc
adc
cdq
mov
dec
fsub
xchg
rcr
ret
sub
aas
(bad)
call
test
fiadd
test
mov
sbb
xchg
call
mov
call
mov
jecxz
mov
jmp
scas
enter
lods
out
scas
lods
jmp
fnstenv
xchg
(bad)
repnz
xchg
mov
(bad)
cwde
neg
(bad)
mov
fcomi
fld
xchg
out
cdq
mov
xchg
lahf
(bad)
cmp
xlat
sbb
into
stos
hlt
out
(bad)
xchg
aam
fimul
stos
mov
fwait
rcr
jmp
adc
test
stos
fisttp
mov
fwait
cdq
mov
lahf
aam
adc
xchg
mov
fist
cli
iret
(bad)
cli
iret
(bad)
not
mov
jecxz
sahf
lock
fstp
xchg
(bad)
mov
stos
dec
(bad)
fcmovbe
sti
leave
fwait
rcl
xchg
out
xchg
aam
into
xchg
xchg
ret
popf
sti
fiadd
xchg
loop
xchg
mov
fwait
mov
xchg
ret
mov
fucomip
test
imul
adc
mov
mov
fistp
aam
xchg
test
rol
mov
bnd
adc
(bad)
xchg
test
sahf
iret
mov
xchg
(bad)
loop
dec
xchg
scas
fucomi
xchg
xchg
ret
mov
test
fisttp
neg
xchg
(bad)
out
into
stos
hlt
ds
ret
popf
sti
fiadd
xchg
repnz
adc
mov
sar
ror
adc
xchg
xchg
bnd
out
xchg
xchg
mov
stos
lahf
out
lods
jmp
dec
aam
ficomp
hlt
cli
adc
test
scas
repz
xchg
dec
cwde
mov
xchg
repnz
xrelease
adc
xchg
xchg
fucomip
movs
call
lods
test
mov
mov
xlat
sbb
call
test
icebp
mov
dec
fdivr
adc
add
mov
test
mov
iret
cdq
mov
push
not
(bad)
mov
mov
mov
sbb
mov
not
xor
mov
xchg
mov
sti
mov
neg
dec
clc
mov
adc
lods
xchg
sbb
shr
lods
(bad)
adc
lea
fiadd
adc
(bad)
mov
mov
mov
(bad)
adc
test
mov
lods
mov
dec
aam
into
stos
(bad)
not
mov
neg
xchg
out
ret
cmps
out
popf
lahf
xchg
sti
adc
mov
aad
sahf
imul
stos
adc
aad
ficomp
mov
sti
fiadd
test
test
sahf
adc
lods
sahf
stos
mov
stos
fisttp
sahf
scas
mov
fwait
stos
xlat
adc
xchg
dec
fsubr
stos
repz
cmps
scas
sar
fcmovnu
adc
xchg
adc
or
aas
ror
(bad)
mov
scas
adc
xchg
mov
fistp
mov
adc
mov
stos
xlat
adc
(bad)
xchg
int3
fdivp
dec
cwde
mov
adc
xchg
scas
scas
repz
sub
adc
xchg
sbb
sbb
ds
sti
fimul
cmc
mov
mov
fdecstp
test
popf
xchg
xchg
cmp
(bad)
iret
stc
(bad)
xchg
adc
ret
repnz
jmp
adc
scas
sti
leave
stos
fucomi
test
mov
(bad)
dec
mov
sub
xchg
mov
lahf
adc
(bad)
xlat
adc
(bad)
mov
sti
(bad)
mov
call
mov
(bad)
fimul
imul
scas
adc
or
(bad)
sbb
adc
lds
fisttp
add
test
adc
xchg
out
mov
fstp
fimul
test
mov
mov
mov
mov
sbb
mov
jmp
xchg
xchg
adc
adc
mov
ds
(bad)
cwde
neg
sti
and
mov
imul
ds
mov
cli
adc
fldcw
mov
adc
cmps
fist
neg
sbb
fiadd
sub
xchg
sbb
adc
test
out
sbb
into
stos
enter
int3
fmulp
dec
mov
mov
xchg
ds
sbb
fimul
lods
scas
mov
(bad)
test
sar
fcmovnu
adc
iret
(bad)
mov
mov
mov
adc
test
sahf
xchg
repz
xchg
mov
call
xchg
not
fild
cli
xchg
mov
fsubr
ret
scas
adc
mov
xchg
ds
leave
mov
adc
fldcw
xlat
dec
fsub
ficomp
xchg
call
pushf
jmp
adc
mov
shl
out
cli
xlat
xchg
int
(bad)
sbb
xchg
pop
mov
adc
test
adc
lock
into
sahf
enter
xchg
out
xchg
adc
mov
lea
adc
enter
aam
adc
xchg
mov
jmp
mov
xchg
ds
repz
fisub
stos
mov
(bad)
mov
adc
test
xor
xchg
mov
test
fist
sub
shr
(bad)
ds
(bad)
xchg
cli
adc
cmc
jmp
mov
stos
dec
movs
sub
adc
fwait
div
repz
test
dec
mov
neg
dec
aam
fiadd
adc
iret
fild
test
xchg
mov
sti
out
ds
(bad)
int3
test
adc
xchg
xchg
mov
dec
lods
xchg
dec
movs
fisubr
xchg
test
sahf
adc
fisttp
mov
iret
(bad)
adc
fwait
out
test
adc
xchg
xchg
iret
fnstenv
adc
int3
jecxz
dec
hlt
fcomi
scas
hlt
fcomi
scas
adc
mov
dec
aam
ret
fist
sbb
adc
(bad)
adc
fld
xchg
mov
fwait
stos
iret
adc
mov
test
adc
mov
scas
fcmovne
adc
xchg
jmp
mov
stos
iret
sar
iret
fst
(bad)
dec
cmp
xchg
(bad)
repz
fsubr
(bad)
xchg
int3
mov
xchg
fldcw
test
mov
xchg
ret
test
xchg
test
(bad)
xchg
test
ret
scas
aad
ficomp
rcr
sti
test
adc
(bad)
cmps
repz
out
stos
stc
ds
xchg
mov
xor
adc
fdivr
cmps
fistp
mov
sti
adc
fucomi
test
cli
adc
movs
mov
mov
movs
sub
fstp
mov
fnstcw
fdivp
rcr
xchg
lods
(bad)
xchg
xchg
inc
xchg
loop
add
mov
lea
xchg
xchg
ds
(bad)
mov
xchg
test
adc
mov
xchg
xchg
(bad)
mov
mov
not
dec
pushf
jmp
test
ret
dec
sar
adc
adc
stos
ret
xchg
mov
scas
test
scas
xchg
test
sahf
jmp
mov
out
adc
(bad)
sbb
(bad)
xchg
adc
scas
out
sar
sahf
fsubr
(bad)
xchg
adc
iret
(bad)
out
xlat
sbb
(bad)
add
into
stos
adc
sti
dec
aam
fiadd
test
xchg
les
(bad)
mov
mov
xchg
lods
add
test
fiadd
stc
cli
(bad)
iret
stc
(bad)
fisttp
mov
retf
cmps
mov
aad
not
int3
out
(bad)
dec
pushf
mov
adc
enter
popf
inc
xlat
test
cmps
ret
test
xlat
dec
shr
xchg
repz
stos
out
leave
stos
fild
shr
(bad)
xchg
out
adc
mov
mov
stos
into
and
mov
sar
xchg
dec
int3
call
lods
jmp
mov
stos
lahf
adc
xchg
cmp
adc
shr
dec
mov
stos
dec
cwde
stos
xchg
lahf
rcr
loop
lahf
stos
xchg
out
cli
lods
mov
repz
(bad)
call
fsubr
(bad)
fild
neg
call
adc
les
mov
out
test
div
iret
adc
fcmovnu
xchg
mov
mov
mov
adc
cdq
sahf
mov
xchg
out
fisubr
sub
test
xchg
movs
stos
(bad)
iret
movs
mov
scas
xchg
test
scas
scas
lods
fisubr
(bad)
adc
fild
fstp
adc
fnstcw
add
ds
sub
(bad)
fbld
(bad)
mov
movs
stos
mov
lahf
fnstcw
xchg
adc
fcmovnu
lods
cmps
iret
sub
stos
dec
mov
adc
cwde
call
adc
fcmovnb
(bad)
(bad)
lods
scas
mov
rcr
add
mov
adc
scas
(bad)
mov
mov
out
movs
mov
xchg
xchg
neg
imul
mov
fcmovnu
adc
stos
dec
mov
xchg
cdq
call
movs
mov
out
repnz
test
mov
xchg
call
mov
ret
neg
ds
xchg
mov
dec
mov
sti
fiadd
mov
ret
call
call
xchg
test
fptan
xlat
dec
xchg
neg
dec
rcr
fisttp
(bad)
xchg
(bad)
out
fiadd
fldcw
mov
popf
stos
fwait
imul
mov
xchg
sti
mov
xchg
jmp
xchg
(bad)
mov
stos
out
test
xchg
rcr
into
test
stos
or
mov
push
jmp
fnstcw
xlat
dec
aam
ficomp
popf
ds
iret
shr
repz
stos
fcomip
ds
lods
out
scas
lods
jmp
aad
ficomp
lock
sahf
shl
dec
movs
call
test
adc
test
cmps
iret
test
sti
ror
hlt
fcomi
scas
hlt
(bad)
dec
pushf
sahf
xchg
mov
ret
xor
fmulp
test
ds
lods
out
adc
fdiv
adc
aad
fimul
stos
sub
out
adc
lods
mov
or
xrelease
scas
fwait
movs
stos
adc
aam
fdivp
fdiv
(bad)
dec
aam
fimul
popf
ds
out
fnsave
fistp
fdivr
(bad)
sbb
retf
out
xchg
rol
repnz
aam
ficomp
lods
out
fcomi
lods
out
adc
xchg
xchg
sbb
(bad)
stos
lock
(bad)
sbb
iret
(bad)
neg
dec
movs
sub
int3
fcomip
xchg
lock
shl
mov
xchg
jmp
fdiv
xchg
dec
popf
ds
mov
ret
(bad)
fdiv
xchg
dec
popf
aas
retf
repz
adc
cmp
xchg
(bad)
fdiv
adc
or
fcmovne
popf
mov
dec
aad
fimul
fcmovu
fwait
test
scas
test
imul
(bad)
jle
xchg
loop
add
(bad)
repz
and
test
loop
mov
xchg
(bad)
mov
(bad)
fdiv
ret
scas
cmps
out
test
ds
dec
xchg
cli
call
jmp
int
repz
pushf
call
adc
(bad)
sar
lahf
cdq
(bad)
mov
adc
fimul
fild
aad
(bad)
lods
out
xchg
dec
xchg
scas
cmps
out
test
ds
dec
fadd
fild
stc
xrelease
test
fist
frstor
add
xchg
adc
fiadd
aad
fmulp
adc
push
sbb
xchg
repz
fimul
neg
mov
stos
fisttp
jmp
xchg
mov
out
add
neg
xchg
sti
xchg
mov
xchg
ds
dec
lock
adc
cmps
out
test
jmp
test
(bad)
sbb
adc
adc
xchg
fsubr
into
mov
ficom
or
repz
adc
repz
leave
mov
call
inc
mov
repz
mov
add
scas
lahf
dec
aam
fisttp
int3
sti
retf
scas
xchg
xchg
jmp
fwait
adc
mov
lods
(bad)
mov
icebp
not
mov
fucom
fisttp
jnp
and
sti
xchg
mov
cmc
add
mov
xchg
dec
fcomp
sahf
mul
imul
iret
aad
fist
mov
adc
adc
fist
fdiv
ret
xchg
xlat
sti
adc
iret
xchg
test
mov
call
mov
dec
pop
jno
mov
adc
xlat
stos
fnstenv
(bad)
mov
jecxz
faddp
test
loop
xchg
xchg
dec
popf
scas
xchg
mov
xchg
(bad)
repz
loop
mov
sub
test
jmp
sub
mov
inc
repz
xchg
mov
jmp
iret
pushf
stos
mov
ds
(bad)
fcmovu
adc
scas
test
cli
(bad)
iret
stc
repnz
popf
ds
(bad)
mov
fisubr
adc
pop
bound
dec
adc
lahf
(bad)
fdiv
adc
int
fisttp
clc
sahf
xchg
repz
mov
dec
xchg
scas
cmps
out
test
neg
xchg
ds
jmp
xchg
(bad)
xchg
sub
adc
scas
out
(bad)
dec
adc
push
dec
(bad)
iret
mov
scas
fisttp
sub
(bad)
out
stos
hlt
ds
(bad)
out
fcmovne
rol
xlat
cmc
xchg
mov
inc
ds
lods
out
xlat
sbb
(bad)
dec
add
out
push
xlat
lahf
test
neg
test
dec
fsubr
xchg
add
fiadd
sar
ret
popf
sti
fiadd
xchg
scas
cmps
out
test
jmp
test
mov
dec
adc
adc
repz
xchg
hlt
mov
sub
(bad)
sbb
(bad)
xchg
xchg
scas
cmps
mov
test
scas
xchg
mov
xchg
ret
popf
scas
adc
test
neg
dec
fadd
lahf
ficom
(bad)
xchg
(bad)
icebp
repnz
mov
call
mov
repz
dec
popf
sti
iret
fist
(bad)
xchg
xchg
loop
add
(bad)
lods
out
xlat
sbb
adc
mov
stos
xlat
test
adc
mov
(bad)
sbb
xchg
ret
popf
ds
adc
xchg
mov
scas
xchg
mov
push
ret
popf
scas
xlat
sbb
adc
xchg
mov
push
dec
(bad)
iret
mov
scas
xchg
dec
popf
scas
adc
or
(bad)
iret
int
mov
aad
fimul
out
repz
ds
iret
movs
scas
adc
push
mov
dec
in
scas
mov
adc
cmp
xchg
push
ds
mov
aas
adc
enter
(bad)
iret
mov
scas
xlat
dec
xchg
scas
cmps
out
test
jmp
xchg
lock
mov
push
adc
retf
loop
not
sahf
xchg
repz
fiadd
(bad)
repnz
cmps
adc
adc
mov
(bad)
repz
mov
retf
ds
(bad)
iret
neg
scas
fild
test
mov
(bad)
xchg
adc
xchg
xchg
adc
xchg
fadd
ficomp
adc
xchg
xchg
aas
lahf
fiadd
fistp
cmc
ds
(bad)
aad
fiadd
mov
xlat
sbb
adc
sar
fisubr
mov
adc
or
mov
mov
fcmovnu
aad
adc
fdiv
ret
loop
out
xchg
into
or
sahf
dec
aam
sti
xchg
fstp
xchg
popf
sti
fiadd
fucom
scas
add
fiadd
xchg
aas
lahf
fiadd
ficomp
hlt
xchg
iret
(bad)
iret
neg
scas
xlat
sbb
adc
mov
stos
iret
mov
lahf
iret
adc
adc
add
pop
dec
aam
xchg
fdivr
lahf
mov
ficomp
fdivr
adc
hlt
test
fiadd
scas
out
xchg
adc
fdiv
adc
xor
lahf
out
mov
xchg
dec
popf
sti
fiadd
test
xchg
dec
popf
scas
xchg
mov
sti
xchg
fstp
xlat
adc
xchg
test
repnz
enter
xchg
aas
lahf
fiadd
stos
(bad)
fdiv
sbb
ds
mov
jecxz
fiadd
fimul
xchg
jmp
int
fcmovu
aad
fimul
ficomp
xchg
test
mov
ret
adc
adc
rcr
sti
cmc
outs
adc
fdivr
ret
cli
(bad)
dec
adc
adc
mov
(bad)
iret
stc
sti
fiadd
test
mov
ficomp
shr
xchg
stos
stos
(bad)
mov
into
add
xchg
adc
(bad)
iret
stc
repnz
popf
jmp
or
fimul
mov
xchg
dec
aam
xchg
mov
adc
rep
lock
(bad)
iret
neg
scas
ror
push
cmp
dec
jb
mov
mov
lods
mov
iret
lea
adc
aam
adc
test
(bad)
sbb
xchg
mov
(bad)
sbb
fcomi
lods
out
adc
mov
stos
iret
aad
fimul
scas
cmps
out
test
jmp
xchg
lock
(bad)
lods
xchg
iret
popf
out
adc
test
stos
ret
fwait
test
mov
fldcw
adc
sub
fcmovnbe
neg
call
iret
neg
scas
stos
mov
repnz
fdivr
jp
push
cli
jb
dec
not
mov
stos
xlat
sbb
(bad)
xchg
adc
xchg
dec
popf
cmps
iret
fstp
fimul
adc
fiadd
mov
sub
int
stos
mov
repnz
mov
into
adc
xchg
xchg
loop
add
ret
mov
cli
into
dec
aam
xchg
sub
xchg
test
mov
fcmovnu
sar
xchg
dec
fcomp
adc
sar
iret
aad
fist
mov
fwait
xlat
rol
dec
xchg
mov
fcmovnbe
neg
call
lahf
mul
mov
fiadd
aam
fimul
adc
stos
call
(bad)
xchg
xchg
loop
add
retf
ficom
sub
adc
int
sbb
out
into
add
fimul
sti
fiadd
adc
xchg
(bad)
aad
fmulp
adc
(bad)
(bad)
fdiv
adc
lods
xchg
mov
sti
(bad)
dec
xchg
ds
mov
stos
xchg
xchg
scas
xchg
mov
iret
xchg
sti
fiadd
pushf
aas
lahf
rol
xchg
repz
(bad)
cmc
scas
adc
adc
(bad)
xchg
shl
or
stos
fwait
mov
cmps
dec
lock
adc
fdivr
stos
out
movs
scas
xchg
dec
fcomp
test
ds
xchg
test
xlat
sbb
xchg
dec
popf
scas
adc
fldcw
ficomp
adc
xchg
mov
fdiv
xchg
dec
popf
ds
mov
pop
(bad)
xor
fiadd
fcos
(bad)
mov
cli
fiadd
adc
ror
(bad)
iret
fist
sti
fiadd
test
scas
call
cli
iret
(bad)
out
xchg
dec
popf
scas
xchg
neg
call
lahf
ficom
call
fdiv
retf
aas
(bad)
sbb
(bad)
sbb
xchg
iret
xchg
sti
fiadd
fdiv
ret
ds
dec
pop
jb
ja
adc
test
ficomp
(bad)
fidiv
dec
push
bound
add
adc
xchg
repnz
popf
ds
xchg
xchg
iret
xchg
aas
(bad)
scas
lock
shr
fucomp
xchg
aam
fdivp
shr
dec
aam
ficomp
aam
xchg
sar
xor
xchg
xchg
loop
add
retf
imul
dec
xchg
aas
lahf
fiadd
adc
hlt
fimul
test
stos
(bad)
lods
mov
into
adc
fisttp
or
mov
fcmovnu
aad
ficomp
adc
repz
shr
retf
dec
sar
xchg
dec
popf
aas
ror
enter
movs
ds
(bad)
iret
neg
scas
rep
lock
(bad)
mov
sti
fimul
sar
fcmovnu
adc
adc
hlt
ds
iret
(bad)
iret
mov
scas
xlat
sbb
adc
fnstcw
fiadd
aam
test
repz
loop
scas
xchg
ds
mov
cli
(bad)
or
xchg
cmp
ret
lds
(bad)
mov
not
dec
fadd
fmulp
adc
xchg
mov
fdiv
ret
aas
(bad)
mov
not
mov
not
xchg
(bad)
shl
(bad)
adc
xchg
mov
xchg
aad
fimul
inc
jmp
xchg
dec
xchg
cli
xchg
mov
adc
(bad)
or
xchg
hlt
loop
stos
mov
xchg
ret
popf
scas
xlat
sbb
(bad)
dec
int3
out
call
cmps
out
test
mov
push
inc
sbb
mov
fcomi
lods
out
adc
(bad)
cli
push
adc
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
aas
adc
cmp
pop
icebp
cmp
dec
adc
les
xor
call
mov
std
(bad)
stos
adc
sbb
(bad)
cmc
dec
(bad)
jmp
in
jmp
jmp
xor
adc
lock
les
push
pop
xor
jbe
sbb
cmp
xchg
(bad)
jmp
aad
push
jg
iret
dec
jecxz
xchg
sbb
mov
adc
mov
dec
adc
lds
push
scas
push
aas
push
test
call
mov
adc
adc
imul
aas
mov
push
in
dec
les
push
movs
adc
xor
daa
dec
adc
aas
(bad)
imul
pop
mov
sbb
and
inc
sbb
inc
fwait
(bad)
jno
(bad)
jmp
in
jmp
jmp
xor
adc
lock
les
push
pop
xor
jbe
xchg
mov
les
add
jo
shr
xor
inc
jnp
dec
rcr
cmp
ror
xor
inc
push
xor
push
shr
or
adc
sbb
adc
or
adc
in
shl
xor
movs
adc
xlat
jge
iret
dec
jecxz
xchg
sbb
cld
adc
add
add
sbb
adc
pop
mov
fist
adc
femms
sub
dec
adc
adc
out
dec
adc
(bad)
mov
cli
dec
adc
push
mov
aas
adc
adc
lock
adc
add
movs
mov
inc
jg
jbe
jo
test
mov
addr16
out
arpl
dec
mov
mov
retf
ins
mov
stos
jge
or
test
aad
mov
mov
test
mov
mov
shl
lahf
mov
es
mov
mov
sti
mov
sub
movs
cdq
fcom
pop
data16
mov
data16
push
lea
xor
rol
dec
cmp
mov
jmp
mov
sar
jmp
mov
mov
pop
in
shl
pop
retf
std
ja
imul
sbb
dec
enter
mov
mov
cmp
(bad)
xchg
shr
ins
pop
add
call
cmp
push
mov
mov
jmp
push
cld
fstp
movs
cwde
nop
and
mov
jl
mov
cld
push
mov
add
aad
mov
leave
inc
lods
dec
and
mov
cmps
cwde
adc
or
pop
jns
sbb
fiadd
push
push
fwait
mov
into
pop
ret
movs
call
xchg
call
ficomp
or
pop
je
add
jne
repz
inc
call
and
fmul
je
pop
int3
xchg
and
arpl
adc
ds
and
in
push
test
repnz
and
adc
pop
pop
jb
add
inc
test
sahf
mov
idiv
arpl
adc
jne
pop
cmp
imul
aas
sbb
mov
add
mov
idiv
mov
(bad)
push
iret
popa
add
mov
aas
or
and
pop
nop
pop
push
pop
gs
ja
fs
mov
div
add
addr16
inc
arpl
jmp
mov
add
bound
mov
scas
and
adc
push
xchg
js
add
lds
pop
imul
fwait
adc
jg
mov
scas
mov
int
mov
pop
xchg
out
dec
push
mov
mov
nop
mov
and
mov
or
pusha
pop
data16
inc
jne
adc
jmp
rcr
mov
push
hlt
outs
sar
push
ret
mov
pop
fs
mov
dec
pop
(bad)
jle
mov
retf
add
mov
xchg
stc
inc
and
pop
mov
push
addr16
in
retf
mov
xchg
movs
cdq
xchg
cmp
add
mov
cmp
sbb
outs
inc
hlt
cmp
pop
pop
dec
test
lea
sub
stos
(bad)
out
or
pop
adc
mov
mov
mov
fnstcw
cmp
xor
movs
cdq
xchg
and
jle
push
xchg
js
fdivr
inc
pop
stos
je
dec
nop
or
sbb
test
not
xchg
popf
pop
in
add
test
mov
lods
jae
adc
mov
or
push
push
fld
sub
js
mov
rcl
pop
mov
add
xchg
inc
fcom
mov
xor
push
test
movs
xchg
and
outs
nop
or
icebp
daa
jmp
shr
call
test
cdq
mov
or
xchg
cdq
fldcw
adc
cmc
jb
or
mov
jmp
sbb
jno
jbe
js
sub
mov
nop
pop
pop
pop
fs
and
push
bound
div
or
test
shr
dec
pop
stos
xor
pop
data16
xchg
sub
aas
mov
nop
dec
cld
mov
mov
out
scas
mov
push
pop
aaa
fs
cmps
jne
or
jg
dec
aam
movs
fwait
or
mov
leave
jl
inc
imul
and
jb
mov
xchg
mov
pop
movs
inc
cld
inc
jge
pop
mov
lea
pop
sub
dec
hlt
dec
xchg
or
jno
lods
dec
inc
nop
mov
icebp
mov
push
jbe
fdivr
mov
sbb
test
lock
pushf
jg
js
sub
retf
std
jne
push
dec
nop
cs
push
(bad)
lds
mov
aaa
sbb
data16
cmps
fwait
sbb
lods
push
hlt
push
jae
dec
mov
leave
mov
dec
retf
mov
call
mov
call
dec
retf
fs
scas
pushf
pop
inc
pop
gs
mov
push
sbb
cmp
stos
add
lea
mov
in
les
ins
and
addr16
add
add
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
pop
or
pushf
dec
or
popf
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
pop
or
pushf
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
dec
jge
inc
or
dec
jge
dec
fnstsw
jl
(bad)
(bad)
jl
pop
ret
add
push
add
sbb
cli
and
dec
mov
dec
or
in
imul
hlt
push
mov
or
(bad)
cmp
adc
push
or
pushf
repz
pop
popf
das
lea
fiadd
xchg
addr16
xchg
imul
test
or
bound
es
neg
jge
enter
or
arpl
jl
cdq
idiv
or
ins
mov
and
(bad)
imul
outs
pushf
dec
fstp
imul
cmp
pop
jl
jmp
mov
test
repz
mov
add
hlt
xchg
jo
(bad)
faddp
push
loop
cmc
popf
repz
outs
add
(bad)
clc
xchg
add
jl
jne
jge
xor
and
imul
hlt
sbb
or
pushf
push
enter
hlt
and
aad
pop
jmp
mov
dec
frstor
pop
cwde
mov
adc
mov
dec
pop
jl
cmp
imul
dec
imul
jo
xchg
pushf
(bad)
stos
inc
inc
movs
fwait
cmp
jne
or
jmp
gs
lods
mov
int
mov
pop
gs
dec
loope
ja
lea
jge
sti
push
mov
repnz
mov
push
sbb
mov
xchg
jle
pop
mov
adc
fwait
nop
stc
mov
scas
dec
and
and
call
jb
out
movs
fwait
shl
shr
retf
dec
mov
mov
fdiv
movs
addr16
and
pop
push
hlt
leave
jb
pop
mov
pop
add
popf
jae
jno
leave
inc
pushf
jg
mov
jle
mov
imul
adc
addr16
push
shr
sub
fstp
pop
les
cwde
stc
pop
gs
pop
pushf
movs
mov
rcl
mov
loope
adc
mov
xchg
icebp
xchg
pop
pop
gs
stos
push
xchg
xor
jl
jno
or
xchg
rcr
cdq
push
push
xchg
jg
cld
push
cmp
jmp
add
cmp
ins
inc
xor
pop
mov
xor
data16
sbb
jne
mov
call
push
fwait
or
push
mov
call
mov
call
(bad)
in
icebp
mov
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
adc
pusha
mov
mov
movs
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
ja
aas
pop
iret
movs
aas
pop
ja
cmp
movs
mov
movs
xchg
movs
repz
cmps
movs
neg
movs
out
pop
retf
movs
neg
movs
aas
pop
ja
cmp
movs
mov
movs
xchg
movs
repz
cmps
movs
neg
movs
out
pop
jecxz
jmp
mov
movs
aas
pop
jae
scas
pop
ret
movs
fwait
pop
iret
movs
fwait
pop
mov
movs
mov
pop
mov
movs
aas
pop
ja
cmp
movs
mov
movs
xchg
movs
repz
cmps
movs
neg
movs
scas
pop
retf
movs
neg
movs
aas
pop
ja
jg
retf
movs
jecxz
jecxz
neg
movs
imul
stos
pop
mov
movs
aas
pop
ja
aas
pop
xlat
js
pop
jbe
or
cmps
lahf
dec
aam
rol
ret
movs
cmp
lods
mov
sbb
mov
sbb
popa
cmps
or
mov
jle
cmps
or
lea
pop
push
jne
adc
adc
xor
jbe
xor
fisub
sub
stos
and
movs
ja
sub
lods
xchg
cmp
mov
ficom
movs
ret
or
inc
sub
movs
das
pop
ja
mov
jbe
movs
push
jne
lahf
pop
movs
aas
div
push
rcr
lods
cmp
pop
ja
mov
jbe
test
pop
movs
aas
div
push
rcr
cmp
pop
ja
mov
jbe
add
pop
movs
aas
div
push
ror
mov
push
jne
aas
dec
ja
and
lods
cmp
pop
inc
mov
push
jne
jg
cs
cmp
push
jne
lahf
push
jl
mov
jbe
call
div
push
div
sub
inc
mov
push
jne
jg
mov
ds
fisubr
cmp
or
sar
push
jne
xor
jne
aas
push
and
dec
mov
aas
pop
pop
jno
push
jne
repz
mov
ds
movs
aas
inc
pusha
cld
xor
jbe
das
pop
ja
sub
jl
ds
(bad)
cld
xor
jbe
call
(bad)
ds
cmp
push
jne
ret
test
movs
ret
or
sub
es
(bad)
jl
mov
xchg
mov
jae
sub
pop
jbe
lds
ret
mov
adc
fwait
mov
adc
shr
lds
dec
cmp
mov
outs
scas
pop
jno
push
jne
adc
xchg
movs
das
pop
ja
lods
mov
jbe
push
fstp
or
call
dec
adc
jno
push
jne
cmps
push
lea
add
mov
lds
cwde
sub
jae
aas
(bad)
jp
cs
dec
mov
pop
ja
cmps
push
lea
cmp
cmp
movs
push
fild
dec
mov
and
push
jne
fild
in
adc
pop
push
stos
push
jne
fistp
cmps
aas
xchg
in
leave
retf
jge
ds
push
call
mov
cmps
inc
push
mov
mov
rcl
lods
cmp
pop
jbe
call
movs
aas
mov
jbe
mov
jbe
test
xchg
jl
ds
lods
cmp
pop
jbe
mov
jbe
mov
jbe
xchg
push
jne
mov
jl
ds
lods
cmp
pop
jbe
mov
jbe
mov
jbe
sub
ja
aas
dec
lods
cmp
pop
jbe
(bad)
push
ja
ret
mov
lods
cmp
or
inc
sub
mov
push
jne
ret
mov
jl
call
inc
xor
pop
call
div
push
inc
pusha
dec
cmp
jbe
aaa
fwait
jbe
sti
fwait
arpl
pop
jbe
sub
jg
ds
arpl
cmp
pop
shl
jae
ds
mov
or
and
push
gs
pop
gs
pop
gs
pop
gs
pop
xor
push
aad
mov
or
pop
sbb
outs
lds
jg
dec
(bad)
arpl
pop
pop
das
pop
pop
mov
cld
arpl
mov
adc
mov
sub
mov
mov
push
push
lods
dec
gs
lahf
pop
imul
adc
jg
push
ret
jmp
jns
mov
rol
addr16
stc
mov
je
lea
or
stos
test
mov
xchg
lds
ja
mov
mov
leave
xchg
test
or
xlat
add
rcr
mov
ds
jg
js
xchg
xor
movs
imul
mov
loop
movs
retf
xchg
xchg
mov
sbb
test
push
jae
mov
(bad)
inc
cdq
mov
mov
sti
cld
mov
fs
in
fstp
mov
mov
mov
inc
lea
imul
or
mov
ja
pushf
dec
movs
cdq
sbb
push
hlt
cmp
sbb
xchg
fadd
fwait
cmp
nop
dec
movs
cdq
jo
pop
mov
pop
mov
leave
aam
in
movs
neg
jecxz
push
cmp
mov
loop
sub
cdq
js
fsub
push
mov
xchg
lea
test
js
shl
pop
fdivr
jbe
jg
xlat
jo
in
ja
jl
and
movs
mov
jne
xlat
lods
(bad)
jo
lods
ja
jg
aaa
jno
lods
mov
retf
ja
jo
inc
imul
jbe
jg
ja
fild
jbe
sub
lods
addr16
mov
lods
inc
cmps
add
ja
mov
hlt
inc
mov
scas
arpl
ja
daa
icebp
fidiv
mov
aaa
mov
or
imul
jp
pop
test
xchg
push
shr
adc
ins
jg
mov
push
push
jae
push
jbe
push
push
jae
or
lea
scas
jbe
adc
int
jb
jbe
jo
dec
arpl
jae
stos
jl
dec
popf
jnp
pop
retf
ins
xlat
mov
jge
adc
add
cmp
push
cmp
mov
add
cmp
mov
cmp
bsf
hlt
aaa
(bad)
mov
arpl
inc
xor
imul
inc
mov
stc
lock
sbb
mov
(bad)
stc
cdq
cwde
or
jg
in
xchg
or
jge
pop
imul
pushf
fstp
push
cmp
enter
mov
jo
test
mov
xchg
sub
mov
cdq
xchg
xchg
leave
mov
addr16
mov
in
xlat
mov
push
or
mov
push
xchg
pop
sub
sbb
push
rcl
mov
mov
pop
push
shl
mov
and
leave
push
lods
dec
popa
pop
mov
movs
(bad)
jl
(bad)
sahf
shl
movs
leave
jl
mov
mov
xchg
addr16
loope
cld
xchg
push
or
mov
pop
jo
dec
mov
inc
jno
jle
in
add
pop
out
(bad)
pop
frstor
add
pusha
mov
stc
(bad)
fisubr
pop
cmc
fidivr
mov
or
mov
repnz
sub
int3
stc
(bad)
(bad)
retf
movs
fiadd
add
std
mov
test
xchg
or
call
(bad)
jmp
cld
(bad)
fwait
and
std
call
mov
pop
mov
lahf
add
lea
fisttp
dec
jno
shr
or
push
lea
mov
or
scas
fld
fdiv
push
fcmovne
(bad)
mov
into
sub
scas
fld
pop
push
cld
or
or
leave
fwait
xor
dec
jmp
out
aad
pusha
dec
addr16
jbe
xchg
scas
pop
addr16
je
pop
push
inc
mov
scas
inc
jne
mov
arpl
pop
jns
sbb
mov
jge
mov
fs
inc
xor
arpl
not
test
lock
jge
(bad)
jo
adc
ins
mov
dec
int
xor
jg
fisttp
outs
inc
data16
jg
imul
pop
fs
inc
inc
jg
pop
arpl
pop
jns
mov
data16
inc
es
mov
mov
xor
lods
outs
mov
adc
pop
xor
clc
sub
push
cmps
jns
mov
inc
push
movs
jp
addr16
dec
push
jge
pop
out
cmps
imul
mov
gs
xchg
int
jg
pop
imul
mov
int3
jle
inc
inc
aas
dec
or
movs
movs
pop
jecxz
and
pushf
outs
mov
inc
inc
aas
dec
or
movs
movs
pop
jecxz
hlt
push
pushf
outs
mov
inc
inc
aas
adc
loopne
mov
enter
neg
data16
mov
gs
dec
loopne
cwde
retf
pop
imul
dec
gs
pop
jns
xchg
pop
data16
inc
jge
mov
gs
inc
gs
pop
push
cdq
mov
arpl
dec
push
or
jo
data16
push
ja
out
aad
lock
fs
fcmovb
inc
xchg
out
dec
mov
mov
cmc
pop
and
cmps
mov
sbb
jp
or
mov
mov
inc
xlat
mov
fwait
sub
test
pop
sbb
in
and
inc
movs
pop
addr16
push
jbe
aaa
test
dec
gs
pop
push
cmp
dec
sub
fcmovnb
jb
pop
gs
dec
mov
mov
cmc
pop
and
cmps
xor
movs
stos
lds
movs
mov
(bad)
test
test
clc
or
inc
clc
mov
mov
mov
jge
xchg
inc
jo
pop
mov
lahf
dec
xchg
pop
test
inc
jne
mov
fs
inc
inc
push
movs
push
xor
xchg
inc
and
gs
push
jae
cmp
push
lock
jge
pop
mov
gs
sbb
in
and
inc
movs
pop
addr16
push
jbe
aaa
test
dec
gs
pop
imul
icebp
or
jmp
mov
(bad)
push
push
jg
test
fistp
jle
lea
pop
mov
jg
push
movs
push
mov
inc
inc
push
movs
sbb
xor
jae
sbb
push
pop
fs
pop
clc
adc
mov
ins
dec
mov
dec
int
in
jg
fistp
jle
sub
jns
mov
inc
cwde
stos
(bad)
in
fwait
retf
jp
or
pop
arpl
pop
jns
sbb
mov
jge
mov
rol
cmp
pop
cmp
lds
mov
jmp
dec
and
jg
push
pop
test
inc
jne
movs
push
gs
ja
ds
inc
push
rol
pop
cmp
lds
mov
jmp
pop
jp
pop
out
in
mov
pop
lahf
lea
pop
push
inc
mov
push
and
cs
pop
xchg
dec
xchg
push
test
inc
jge
mov
fs
inc
inc
jg
pop
arpl
pop
jns
mov
gs
push
popa
cdq
mov
bound
push
loope
sbb
lahf
dec
xchg
push
lds
ja
out
aad
add
sub
jo
xchg
dec
xchg
fcomp
je
xchg
dec
test
lock
addr16
jbe
xchg
scas
pop
addr16
je
mov
inc
lahf
sub
dec
or
push
arpl
addr16
fisub
data16
int
jbe
pop
xor
push
xlat
ins
xor
add
pop
gs
mov
pop
addr16
out
test
sbb
jle
push
pusha
jg
pop
movs
stos
gs
pop
enter
xchg
js
pop
gs
push
jl
gs
pop
push
clc
sahf
dec
xchg
push
and
cmovns
test
test
pop
pop
fisttp
repz
xor
push
jl
gs
pop
push
or
mov
(bad)
nop
pop
movs
fwait
cmp
call
(bad)
dec
pop
movs
call
dec
addr16
outs
mov
scas
pop
gs
mov
gs
inc
jb
fs
jb
outs
mov
scas
pop
gs
mov
gs
inc
loope
mov
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
xor
push
aam
xchg
cmp
pop
int3
jle
push
shr
data16
mov
xor
ins
dec
addr16
mov
jo
icebp
pop
gs
pop
addr16
ja
or
pop
gs
mov
mov
fwait
sub
test
mov
pop
gs
mov
mov
fwait
sub
test
mov
pop
gs
mov
mov
fwait
sub
test
mov
mov
(bad)
mov
ins
mov
dec
int
jmp
and
jg
ja
pop
aas
cmp
nop
pop
mov
das
and
jg
test
inc
addr16
push
nop
ds
dec
push
movs
push
stc
repnz
rcr
pop
xlat
mov
sbb
jmp
movs
or
fptan
pop
gs
movs
cmp
leave
repnz
fs
movs
(bad)
jge
sbb
jle
or
fwait
movs
pop
test
pop
fs
and
cmovp
mov
stos
gs
pop
dec
imul
pop
pop
movs
stos
lds
pop
xlat
mov
xlat
mov
push
test
fwait
or
mov
pop
data16
mov
nop
ja
pop
gs
(bad)
mov
jle
(bad)
in
adc
sbb
jle
pop
int
adc
call
movs
jns
inc
inc
data16
not
pushf
push
test
mov
mov
mov
jg
pop
and
(bad)
adc
push
xlat
mov
data16
cmps
sti
or
movs
call
pop
leave
sub
adc
mov
push
test
inc
dec
jmp
sbb
jle
pop
int3
jle
mov
sbb
push
add
icebp
pop
gs
push
test
sbb
dec
or
movs
movs
pop
imul
mov
mov
data16
mov
mov
sbb
mov
movs
fwait
jo
push
and
dec
dec
mov
mov
fwait
sub
xor
jbe
jo
js
ss
pop
addr16
movs
ja
push
sbb
jle
sbb
test
fwait
sub
jb
repz
push
or
jg
jp
jg
repz
xlat
mov
data16
mov
movs
int
sbb
jp
pop
fwait
sub
test
aas
inc
daa
jge
push
test
fwait
sub
jb
repz
or
les
jg
cli
push
xlat
mov
data16
mov
movs
lds
pop
xlat
mov
rep
fist
xchg
or
mov
cmps
xor
adc
dec
je
or
repz
mov
data16
mov
movs
int
dec
mov
mov
fwait
sub
test
sbb
lock
movs
cwde
push
and
cmovns
mov
push
push
lds
mov
push
adc
pop
gs
pop
xor
push
aad
(bad)
lahf
inc
imul
data16
xchg
loope
pop
gs
ja
outs
mov
mov
jg
pop
mov
push
cdq
rcr
imul
data16
bound
les
push
mov
fs
or
int
jmp
jo
pushf
lea
dec
pop
mov
xchg
inc
pop
mov
pop
dec
data16
xchg
push
cmp
jno
push
inc
mov
pushf
int
jbe
pop
xor
je
pop
scas
pop
gs
pop
adc
pop
xor
je
pop
scas
pop
gs
pop
adc
pop
xor
push
aam
scas
dec
test
addr16
ja
jo
pushf
lea
pop
popa
cdq
mov
gs
call
test
xchg
sub
jg
xchg
dec
test
lahf
jno
test
inc
pushf
mov
data16
int
jbe
pop
(bad)
pop
gs
mov
sahf
mov
inc
push
and
pop
gs
pop
je
mov
dec
int
jmp
mov
mov
mov
jo
lods
dec
mov
mov
fistp
sbb
test
push
pop
addr16
ja
or
jp
pop
push
pop
addr16
inc
jl
mov
ret
mov
mov
mov
outs
(bad)
pop
gs
mov
xlat
jp
xor
dec
sar
jo
pushf
lea
movs
stos
jp
jg
popa
jb
sbb
push
movs
stos
and
test
pop
fs
and
cmovp
mov
mov
jo
push
cmp
jno
arpl
test
addr16
pushf
lea
mov
gs
inc
dec
jmp
out
aad
add
mov
in
dec
test
arpl
movs
dec
mov
cmp
pop
gs
pop
mov
dec
mov
jl
pop
gs
pop
mov
dec
mov
fs
mov
push
pop
mov
dec
mov
cld
mov
gs
pop
mov
dec
mov
cmp
pop
gs
pop
mov
push
pop
addr16
ja
or
jmp
mov
push
pop
fs
das
outs
pop
mov
mov
lahf
dec
push
pop
test
pop
data16
xchg
dec
push
mov
je
pop
lahf
dec
push
fwait
stos
mov
mov
data16
push
inc
jg
lea
test
addr16
mov
adc
pop
xor
je
pop
scas
inc
gs
pop
adc
pop
xor
push
aad
mov
fldenv
mov
inc
mov
pop
pop
outs
jne
gs
dec
in
adc
mov
xor
(bad)
mov
repnz
mov
mov
loopne
mov
mov
test
nop
ins
inc
dec
jle
pop
and
mov
call
scas
mov
aad
or
fldenv
mov
dec
lods
test
mov
pop
xchg
gs
cli
cdq
push
adc
mov
cld
bound
stos
sbb
mov
add
stos
lds
leave
mov
pushf
add
test
mov
push
dec
xchg
fidivr
xchg
adc
mov
and
dec
mov
jno
mov
cmp
inc
cs
fdivr
leave
xor
mov
test
mov
pop
mov
dec
movs
inc
xchg
add
nop
pushf
dec
call
out
out
lahf
push
movs
call
(bad)
repnz
mov
addr16
jmp
std
je
pop
(bad)
enter
cwde
or
mov
sbb
adc
cli
mov
xor
sub
push
lahf
js
mov
call
sub
and
pop
jle
mov
jl
or
pop
jae
out
jp
and
fdivr
mov
sub
jmp
ror
or
mov
clc
mov
imul
not
(bad)
imul
dec
fwait
jecxz
rcr
adc
fwait
jecxz
rcr
je
movs
or
add
jmp
aaa
or
and
pop
gs
pop
fs
cmovp
mov
mov
jns
bound
jg
push
nop
mov
addr16
jns
push
dec
fs
repz
(bad)
cmp
call
nop
(bad)
pop
cmps
into
out
gs
mov
div
in
data16
sar
cmps
mov
popf
fsubr
sbb
mov
mov
gs
adc
in
dec
scas
or
dec
cmp
lods
add
pop
data16
mov
data16
(bad)
jge
mov
push
mov
dec
push
xchg
mov
pusha
jge
aam
data16
mov
data16
imul
test
not
push
and
jg
imul
jb
dec
xchg
outs
pop
jns
ins
dec
hlt
xor
sti
add
mov
sbb
mov
ss
mov
leave
and
add
mov
(bad)
adc
xchg
nop
push
mov
or
pop
sub
aad
inc
push
hlt
push
xchg
je
retf
add
mov
gs
std
dec
sti
xchg
sbb
imul
mov
mov
rol
xchg
shr
cwde
jl
loope
test
dec
jl
fnop
dec
xchg
fsub
call
mov
cs
xchg
pop
xor
bound
mov
retf
push
inc
arpl
movs
retf
or
retf
movs
mov
in
retf
std
mov
adc
in
inc
(bad)
out
push
movs
movs
retf
sub
popf
inc
cmp
stos
add
imul
sbb
adc
and
retf
jne
or
mul
retf
mov
retf
fwait
mov
leave
aas
and
das
and
fidiv
cmps
retf
mov
push
test
in
pop
mov
inc
call
mov
mov
or
cdq
mov
shl
pop
stos
lods
mov
xchg
xchg
ins
mov
stc
cs
mov
and
jg
xchg
pop
jbe
mov
std
loop
fwait
xchg
dec
add
jbe
lods
popa
out
or
sub
rcl
mov
mov
enter
mov
xor
imul
mov
jle
mov
push
shr
jge
div
lahf
dec
movs
cdq
cmp
and
xchg
ror
push
cmp
leave
cmp
or
jle
push
jmp
lea
push
jo
and
sub
jg
inc
addr16
mov
sub
mov
ret
inc
jo
fistp
jecxz
cwde
xchg
aad
add
pop
or
in
xchg
mov
stc
sar
je
or
cdq
mov
not
xor
or
mov
mov
jne
(bad)
fwait
adc
mov
jb
or
ret
movs
cdq
jo
dec
mov
or
xchg
push
dec
push
stos
inc
mov
add
mov
imul
nop
pop
sahf
add
dec
mov
ror
aad
and
fnstcw
(bad)
adc
fstp
retf
mov
push
sub
dec
stos
push
sub
mov
retf
cmp
or
inc
mov
retf
cmp
test
sub
in
repz
rol
scas
out
movs
fwait
cmp
push
test
dec
jmp
xchg
inc
test
fcomp
mov
shl
mov
div
mov
push
sub
pop
jge
test
pop
test
mov
pop
fs
and
pop
mov
cmp
pusha
mov
ret
inc
push
stc
sar
data16
inc
cmps
cdq
fsubr
fs
adc
shr
es
hlt
xor
push
pop
jns
stos
dec
hlt
mov
ret
pop
hlt
pop
xchg
mov
shl
shl
mov
dec
mov
jnp
retf
mov
mov
mov
mov
not
fmul
mov
enter
mov
in
xchg
jl
pop
vhsubps
ret
ins
pop
jl
dec
rcr
lea
cdq
mov
not
adc
call
jnp
pusha
movs
jmp
jge
xchg
push
hlt
mov
dec
or
dec
movs
fwait
fs
adc
clc
push
movs
fwait
or
pop
mov
addr16
and
adc
xchg
fimul
stos
lds
cmp
pop
shl
cmp
dec
jecxz
push
loopne
add
iret
pop
cs
add
sub
imul
add
hlt
dec
mov
lods
xchg
pop
shr
loope
stc
xchg
pop
loop
xor
inc
cmps
fwait
cmp
jne
mov
cdq
push
mov
xchg
push
rcr
fbstp
call
pop
xor
push
aad
mov
sub
mov
test
pop
pop
outs
inc
pop
gs
dec
jno
pop
pop
mov
jne
xor
mov
dec
pushf
adc
mov
out
cmp
aaa
test
pop
shr
push
dec
lods
test
pop
imul
sbb
dec
enter
movs
nop
in
pop
pop
mov
cdq
mov
push
and
outs
dec
test
push
xchg
xchg
daa
fsub
push
pop
mov
push
sbb
mov
jg
cwde
mov
outs
pop
test
or
pop
addr16
hlt
data16
test
cmps
pop
(bad)
ja
mul
sbb
sub
mov
test
pop
(bad)
fldenv
cdq
fdivr
pop
data16
adc
mov
leave
xchg
ss
hlt
push
jo
dec
(bad)
sbb
adc
mov
rcl
popf
cwde
sbb
or
lea
cmps
addr16
cdq
mov
dec
inc
retf
std
je
jns
push
adc
or
in
xchg
shl
ret
movs
call
cdq
pop
jge
mov
test
movs
retf
test
aaa
stos
outs
mov
xchg
mov
mov
nop
or
test
cmps
push
std
push
je
cs
popf
stos
inc
push
inc
icebp
inc
pop
push
ins
sahf
je
adc
loope
sub
inc
scas
popa
out
xchg
dec
aaa
add
push
push
dec
repz
inc
dec
out
push
push
push
lock
dec
out
push
pop
push
fcomp
jp
mov
dec
out
push
test
inc
jno
retf
jl
inc
add
pop
dec
push
push
dec
retf
and
je
push
enter
retf
jne
ss
retf
jne
rcr
mov
jecxz
inc
inc
icebp
sar
add
mov
pop
pop
push
push
dec
out
mov
stos
xor
jl
push
je
pop
ja
xchg
ja
xchg
inc
push
push
jp
mov
dec
out
push
test
mov
je
sbb
dec
pop
jecxz
rol
test
ret
test
test
ret
ror
lea
ret
ror
lea
aam
dec
jns
push
arpl
nop
push
dec
out
xchg
int
push
arpl
pusha
push
lods
sub
push
dec
rol
mov
lods
dec
pop
mov
dec
mov
pop
sub
push
dec
sub
xor
push
xchg
pop
shr
push
dec
dec
push
test
adc
dec
cmp
gs
movs
es
mov
pop
xor
pop
aad
mov
xlat
mov
popa
dec
movs
xlat
in
mov
(bad)
pushf
add
les
mov
fisub
cmc
pop
jle
dec
stc
jp
pop
retf
ins
cmps
call
mov
jbe
lea
fcomp
cdq
mov
cdq
aad
pop
lds
addr16
test
xchg
pop
test
test
cmp
mov
mov
mov
xchg
pop
mov
mov
cmps
xchg
mov
jge
pop
pushf
xchg
xor
ins
jo
pop
je
sbb
pop
data16
jmp
inc
aam
data16
xor
adc
js
mov
sub
lock
fs
push
scas
mov
mov
push
mov
dec
xchg
into
pop
add
int
and
repnz
xor
jae
dec
mov
shl
movs
addr16
adc
jbe
inc
leave
and
inc
mov
enter
pop
pop
mov
movs
movntq
xchg
inc
mov
outs
pop
idiv
or
scas
retf
mov
call
fbld
pop
movs
mov
dec
mov
mov
imul
add
test
push
mov
cmp
xchg
push
(bad)
jbe
sbb
retf
ins
pop
cmps
mov
jp
das
mov
data16
cmps
cdq
adc
fwait
or
fdivr
loop
lea
stos
call
bound
pop
movs
lahf
inc
pop
cmp
(bad)
popf
cdq
std
addr16
mov
inc
mov
das
or
(bad)
xor
cmp
mov
sub
ror
(bad)
cmp
adc
fs
sub
into
je
cdq
cwde
fsub
mov
cwde
jle
pushf
xchg
outs
push
inc
mov
pusha
jae
cdq
jno
and
mov
or
(bad)
cdq
push
and
outs
ret
lea
adc
cwde
xchg
mov
jo
jo
(bad)
cdq
outs
ret
mov
mov
xor
jo
jo
(bad)
cdq
outs
ret
mov
mov
ja
(bad)
cmp
ret
mov
jo
fs
movs
lods
retf
scas
fstp
iret
cmp
enter
and
dec
lds
jo
daa
cwde
(bad)
jae
xchg
jbe
xor
sub
ja
(bad)
cmp
ret
or
enter
(bad)
aam
cwde
arpl
(bad)
cmps
(bad)
jb
mov
fcomp
scas
ret
mov
lea
call
jb
(bad)
cli
stc
dec
adc
mov
add
jo
mov
ret
std
mov
int3
lods
addr16
jb
mov
lea
xchg
ret
mov
mov
iret
fwait
jno
iret
xor
mov
cmp
sub
adc
xchg
xor
inc
fmulp
ror
cdq
jo
sbb
sbb
aad
sti
push
xlat
(bad)
cdq
ror
cdq
jae
adc
mov
mov
cwde
jle
pushf
mov
in
push
cmp
jno
jb
call
dec
and
sub
push
jb
(bad)
repnz
cwde
jge
mov
and
call
push
jb
(bad)
ficom
cdq
jae
sbb
addr16
data16
(bad)
lea
jo
fcmovb
mov
xor
fnstcw
je
mov
aad
outs
xor
jo
pop
call
aam
pop
jo
xor
jb
mov
data16
jno
wrmsr
jno
mov
jno
cdq
retf
lea
jo
rol
sbb
dec
pusha
mov
mov
data16
jb
mov
xor
fnstcw
je
mov
xor
jo
pop
call
call
jo
cmp
fnstcw
je
test
mov
data16
lods
lea
jo
fs
call
jo
mov
shr
jb
(bad)
lods
daa
xchg
jb
mov
lods
mov
jo
arpl
jo
inc
sub
add
fisttp
shr
jno
(bad)
sbb
aam
cwde
fcmovbe
mov
xor
pop
mov
cmps
(bad)
jb
lea
jne
aad
xor
cdq
stos
lea
jo
pop
lods
mov
jo
arpl
jo
shl
jns
mov
jo
cmps
ins
cs
aad
cmp
jle
pop
ret
popf
lea
mov
dec
ror
inc
cmp
inc
jl
shr
(bad)
push
xchg
ficom
(bad)
jb
mov
lea
jb
in
mov
add
mov
xchg
mov
pushf
jo
mov
mov
cli
dec
jle
aam
cdq
mov
aad
cmp
ret
outs
fcmovbe
dec
lods
cdq
jae
add
xor
aad
lea
xlat
(bad)
cdq
jb
aam
loope
scas
or
cdq
jae
or
aad
xor
jo
(bad)
cdq
jle
sbb
inc
int
fwait
jno
cs
sub
sar
add
mov
push
aam
aam
fwait
jae
mov
(bad)
jb
(bad)
stos
ret
mov
xor
jmp
jb
(bad)
jbe
cmp
lea
dec
adc
lock
lea
jo
dec
lea
lea
mov
sbb
das
dec
or
fimul
(bad)
adc
fist
les
sbb
jle
inc
pop
mov
arpl
jge
pop
inc
enter
ins
mov
shl
pop
lods
loopne
ds
nop
popa
mov
xchg
push
inc
clc
std
jge
pop
arpl
pop
jne
adc
lods
je
mov
and
jmp
fwait
adc
jg
push
sub
js
xchg
popf
push
pushf
adc
addr16
mov
mov
aad
xchg
pushf
dec
movs
call
hlt
lods
pop
pop
or
lahf
push
push
cmp
adc
xchg
push
pushf
jle
mov
imul
fld
xchg
pop
push
mov
cmp
(bad)
in
adc
sub
rcr
push
sub
sti
jge
mov
dec
jle
retf
hlt
push
jb
dec
enter
addr16
mov
fld
dec
pop
out
pop
cmp
mov
cld
mov
bound
ja
in
ds
jge
leave
cmp
adc
jg
not
test
push
imul
mov
inc
scas
mov
out
jge
mov
mov
push
fwait
mov
js
dec
mov
dec
movs
push
sbb
xchg
push
repz
mov
push
dec
mov
fs
mov
test
or
jp
pop
aad
sbb
int3
dec
fnstcw
jle
pop
pop
aad
sbb
int3
dec
fst
enter
aad
sbb
int3
dec
sub
enter
pop
pop
and
lea
(bad)
aam
stc
dec
retf
aad
dec
or
xlat
les
(bad)
retf
enter
retf
xlat
les
aas
out
dec
adc
mov
aam
popf
xchg
aas
retf
aad
pop
leave
ror
dec
and
and
adc
xlat
leave
movs
adc
enter
cmp
lahf
push
dec
and
ds
gs
aas
mov
mov
cli
ds
gs
aas
mov
mov
inc
fisttp
ret
and
mov
(bad)
in
pop
shl
xlat
or
xor
ret
and
push
(bad)
fisttp
or
mov
pop
gs
mov
outs
mov
adc
pop
gs
mov
gs
mov
fs
rol
jge
push
ins
aaa
mov
jne
mov
shl
mov
push
mov
leave
addr16
or
and
inc
lds
addr16
mov
dec
push
xchg
mov
cmc
add
les
leave
or
push
sub
jge
pop
imul
mov
dec
retf
inc
jne
lds
fwait
sbb
pushf
sbb
pop
gs
xchg
push
out
push
movs
fwait
or
push
test
adc
(bad)
push
inc
jo
adc
jae
adc
and
data16
add
sbb
dec
xchg
ret
cmps
push
outs
hlt
push
fwait
and
jg
test
fldenv
pop
mov
pop
cmp
fcomp
fidivr
inc
(bad)
gs
aam
stos
idiv
mov
pop
mov
fcom
jl
ret
movs
fwait
jo
pop
shl
hlt
in
push
pop
xchg
es
inc
shr
sub
pop
imul
mov
or
xchg
mov
and
pop
out
cmp
push
fwait
nop
inc
fist
icebp
call
push
mov
pop
ds
or
or
int3
aas
js
sahf
or
pop
lock
mov
mov
lods
push
add
jmp
stos
lods
push
cli
sbb
movs
cmp
push
lods
lods
push
lahf
sti
push
clc
ret
movs
aas
or
push
xchg
in
aad
add
push
imul
dec
movs
jmp
scas
pop
jne
mov
arpl
pop
jns
sbb
mov
jb
dec
movs
cdq
sbb
int
sbb
sub
mov
fwait
lods
idiv
mov
call
dec
fs
dec
fsub
scas
dec
aam
mov
es
movs
jmp
daa
mov
fwait
lods
ss
mov
jo
lock
lahf
out
pop
call
dec
data16
movs
mov
pop
add
mov
mov
dec
mov
jg
or
fwait
or
mov
jmp
fs
dec
push
arpl
clc
mov
mov
mov
xchg
test
jg
pop
dec
imul
movs
cdq
js
push
inc
ins
adc
movs
jb
dec
movs
call
pop
data16
inc
jb
dec
movs
cdq
jl
pop
dec
movs
mov
sbb
imul
fs
sub
test
pop
dec
shl
mov
ds
push
push
mov
addr16
dec
(bad)
test
fimul
je
sahf
dec
inc
push
mov
fwait
sub
mov
(bad)
test
stos
sahf
sti
mov
mov
fwait
sub
lods
(bad)
test
xchg
jae
lahf
sub
inc
sbb
add
dec
movs
cwde
push
and
cmovp
mov
xor
imul
mov
jg
dec
cmps
test
push
mov
fs
dec
inc
push
mov
push
test
jecxz
xchg
dec
ret
movs
call
inc
jb
dec
movs
cdq
jl
pop
data16
addr16
outs
jb
dec
movs
cdq
cmp
pop
iret
jle
dec
xchg
test
(bad)
mov
xor
push
movs
mov
adc
lea
div
dec
movs
cdq
nop
cmps
sbb
test
jg
pop
push
imul
cli
cwde
out
pop
dec
imul
pop
push
add
dec
fbld
gs
or
mov
add
push
xor
cwde
aam
repz
fs
imul
pop
push
rcl
call
push
push
jg
jbe
js
cmp
mov
jb
dec
movs
cdq
jl
pop
fs
mov
jg
dec
xchg
push
inc
push
dec
bnd
int
movs
cdq
fsubr
gs
dec
lea
div
pop
dec
ss
(bad)
mov
jb
dec
movs
cdq
jl
pop
gs
movs
jp
jge
pop
dec
dec
push
mov
ins
pop
mov
movs
call
dec
cmps
test
jg
pop
jp
popa
mov
addr16
dec
cmps
test
(bad)
mov
dec
movs
mov
int
dec
or
call
jne
mov
data16
addr16
outs
jb
dec
movs
cwde
cmp
cmps
jmp
jbe
pop
lahf
pop
and
in
sub
gs
pop
push
adc
jbe
movs
jmp
jb
dec
movs
call
mov
imul
repnz
int
movs
cwde
aam
pop
dec
imul
dec
inc
push
mov
fwait
sub
mov
jb
dec
movs
call
cmps
xor
dec
addr16
sahf
ins
(bad)
test
dec
repnz
jns
movs
cdq
push
movs
cmp
mov
gs
jl
imul
movs
cwde
push
and
cmovns
sbb
test
cmps
mov
lahf
dec
inc
push
mov
fwait
sub
mov
fwait
lods
sahf
ja
cs
pop
popa
jg
pop
enter
arpl
sub
cmp
cmovns
sbb
test
cmps
xor
fs
sub
jb
(bad)
push
ja
out
aad
add
int3
xchg
cmp
or
mov
inc
sbb
mov
jae
lock
jb
lock
mov
dec
or
cdq
movs
pop
dec
imul
dec
jmp
out
aad
add
gs
mov
jmp
fs
xlat
xchg
jle
dec
mov
mov
leave
ins
inc
jnp
jg
xchg
jmp
mov
jle
xchg
retf
scas
popa
mov
out
sahf
adc
addr16
pop
stos
loopne
inc
xchg
js
sar
pop
mov
xor
cmps
arpl
inc
fistp
mov
mov
mov
mov
movs
mov
jge
cdq
cwde
cmc
pop
fs
pop
push
pop
add
sbb
cmp
retf
inc
jne
stc
shl
test
mov
outs
mov
jge
pop
retf
mov
cmps
les
mov
gs
dec
xchg
jb
sub
cmp
dec
retf
std
jbe
sbb
or
out
scas
ror
ret
mov
xchg
clc
push
mov
mov
push
lock
int3
cmc
cmc
rol
cdq
jl
pop
jge
push
div
stos
mov
sti
xlat
xchg
mov
lods
retf
movs
call
cmps
call
jl
shl
mov
push
sub
addr16
mov
mov
mov
xchg
ds
jle
pusha
mov
stos
icebp
mov
jl
pop
lods
mov
setp
jp
dec
cwde
dec
movs
adc
push
ret
inc
mov
jp
push
cmp
ja
inc
test
repz
sub
mov
arpl
(bad)
fst
cs
out
mov
popa
fidivr
stc
out
arpl
les
popf
sub
mov
popa
push
jns
mov
xchg
test
jp
jle
popf
aad
cli
ins
into
ja
aad
bound
dec
mov
ja
rcl
bound
js
fdivrp
ins
push
ja
(bad)
shl
jnp
pushf
add
ins
jb
test
cmp
dec
lock
mov
mov
dec
or
cdq
movs
pop
inc
imul
jle
push
mov
ror
sbb
and
inc
movs
call
add
sbb
test
movs
xor
ficomp
jle
push
int
adc
jg
repz
xlat
mov
xor
push
or
(bad)
xchg
cmps
mov
dec
or
mov
(bad)
sbb
ror
sub
adc
jle
mov
and
sbb
sub
test
mov
dec
retf
movs
int3
jbe
mov
and
sub
mov
dec
or
call
jne
mov
addr16
jbe
aam
sti
jno
mov
(bad)
aam
movs
cdq
jo
pop
mov
dec
mov
mov
int
sbb
sub
test
mov
repz
dec
or
mov
cmps
cwde
gs
pop
fs
dec
and
add
and
mov
hlt
pop
pop
outs
mov
gs
dec
and
mov
sub
mov
adc
and
test
loopne
data16
xchg
(bad)
and
scas
popa
mov
cli
aaa
sbb
mov
lahf
jl
imul
sbb
je
pop
ror
jle
xchg
inc
mov
data16
inc
jne
xchg
pop
addr16
mov
lock
cmps
addr16
aam
jg
push
retf
cld
pop
jge
pop
jnp
aas
lahf
data16
out
and
inc
dec
push
push
clc
lea
pop
lea
je
sub
sbb
test
mov
cmp
mov
test
dec
shr
rcr
mov
addr16
mov
pusha
sbb
(bad)
rol
cmp
rcr
xchg
ins
xchg
adc
fwait
or
pop
and
jno
adc
mov
xchg
push
cwde
test
sub
in
jp
mov
retf
sbb
mov
retf
pushf
sbb
mov
fsub
lea
or
fmul
cwde
xchg
stc
inc
or
xchg
outs
mov
test
mov
mov
mov
xlat
jb
mov
lahf
mov
cs
ins
movs
xchg
bound
jmp
js
xor
inc
scas
in
inc
mov
out
popf
es
pop
(bad)
fcmovnb
xchg
cmps
(bad)
jb
cmps
sbb
stos
test
xchg
ret
push
xchg
es
or
dec
xchg
jbe
dec
add
push
xchg
retf
xchg
mov
xchg
and
push
xchg
dec
aad
push
mov
xchg
adc
push
xchg
sub
test
jne
ins
push
mov
repz
fwait
xor
les
pop
data16
call
jbe
xor
push
dec
imul
inc
jp
mov
jp
xchg
inc
jp
outs
cmp
mov
push
dec
sub
sbb
dec
sbb
mov
adc
sbb
addr16
jnp
jae
pop
push
lods
pop
retf
in
push
test
jnp
jae
pop
mov
fisubr
ins
pop
mov
dec
int
push
test
pushf
lea
xchg
xchg
sub
test
adc
outs
adc
pushf
jmp
dec
cmp
addr16
mov
and
or
jmp
gs
sbb
jle
dec
mov
mov
leave
ins
retf
inc
ss
xchg
jb
ss
sahf
nop
dec
in
cdq
adc
addr16
pop
stos
je
mov
js
inc
addr16
push
mov
sub
mov
(bad)
jp
mov
add
(bad)
dec
scas
out
dec
movs
rcr
xchg
cmc
sti
jne
sbb
jg
mov
retf
lods
pop
inc
pop
cs
hlt
sahf
pop
mov
test
and
pop
cmp
fwait
push
cdq
mov
call
xchg
movs
push
cmp
sub
pop
imul
mov
test
mov
mov
adc
mov
outs
popf
sbb
mov
xchg
aad
jns
sbb
imul
mov
cmp
mov
(bad)
(bad)
mov
push
jl
pop
adc
mov
jge
(bad)
daa
mov
or
ror
push
dec
movs
cwde
xchg
xchg
loopne
popf
mov
scas
cmp
push
sub
mov
outs
or
mov
mov
ins
pop
sbb
fstp
cmps
cwde
sbb
mov
cs
cmp
mov
iret
push
fsubp
jmp
retf
test
call
imul
or
jge
fdivr
push
or
(bad)
das
push
push
dec
lods
mov
(bad)
stos
xor
or
mov
repz
mov
jge
mov
jne
mov
shl
pop
test
nop
in
push
dec
mov
fidivr
js
clc
add
clc
inc
jle
pop
mov
jns
xrelease
outs
mov
mov
jp
mov
push
(bad)
jb
xchg
pop
test
mov
or
push
aam
jg
push
jle
pop
js
jg
push
shr
xchg
push
xchg
pop
mov
sub
enter
mov
retf
clc
mov
test
addr16
mov
dec
fs
lock
xchg
mov
pop
jmp
sub
jg
js
popf
and
mov
nop
push
mov
loopne
jge
or
sti
cdq
sbb
mov
movs
repz
mov
jg
mov
push
sub
mov
sub
enter
sub
pop
push
cmp
mov
outs
xor
or
xchg
mov
or
scas
stos
xchg
adc
inc
xchg
fwait
or
mov
mov
inc
rep
ret
movs
call
push
ret
ins
pop
in
addr16
sar
push
jle
pop
add
or
stos
call
dec
movs
mov
adc
xchg
es
nop
mov
mov
test
call
imul
cmp
jle
mov
hlt
xchg
push
ins
adc
cmp
ins
inc
fimul
fdiv
dec
mov
test
xor
ins
dec
sahf
pop
cwde
lock
enter
cmc
xlat
add
add
mov
add
or
inc
je
xchg
popf
cmc
lahf
add
or
adc
adc
leave
mov
sbb
mov
cmp
movs
fdiv
push
aam
call
in
mov
ins
pop
out
inc
lods
hlt
(bad)
adc
cmp
adc
mov
mov
test
mov
pushf
imul
int3
or
inc
je
xchg
popf
cmc
lahf
add
or
adc
sub
jle
and
fstp
add
cmc
sub
or
mov
int3
cmp
movs
fdiv
push
aam
call
in
mov
ins
or
adc
cmp
rcr
xlat
add
lods
fdivr
rcr
enter
mov
xchg
add
fldenv
add
add
pop
jmp
repz
sbb
(bad)
dec
push
js
sbb
push
and
xchg
or
pop
or
xchg
mov
or
test
(bad)
retf
nop
mov
pop
rcl
dec
retf
nop
adc
jbe
jnp
(bad)
mov
mov
or
mov
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
arpl
jecxz
daa
jl
dec
leave
jp
pop
retf
mov
dec
push
push
mov
mov
mov
(bad)
fsub
pop
data16
xchg
(bad)
gs
out
mov
push
mov
rcr
test
or
mov
imul
mov
or
addr16
xor
fistp
in
xchg
xchg
(bad)
movs
push
xchg
xor
mov
push
push
cld
push
jl
pop
pushf
push
pop
pop
shr
add
mul
mov
pop
test
adc
jge
cmp
addr16
mov
js
loope
mov
retf
mov
xor
pop
pop
sbb
pop
pushf
jg
push
jne
sbb
nop
xchg
loop
fwait
sbb
imul
imul
mov
movs
fwait
sbb
pop
xchg
jg
sbb
mov
sbb
jge
aad
xacquire
enter
fcomip
ins
mov
mov
xchg
push
xchg
fmul
xchg
or
sti
push
pop
data16
int
fild
fisub
hlt
pop
xchg
adc
adc
push
loop
pop
imul
mov
pop
cld
mov
call
dec
pop
dec
and
or
dec
cld
mov
xchg
mov
push
pop
(bad)
mov
es
mov
in
mov
cmp
sahf
scas
cmc
icebp
pushf
cmp
test
pushf
scas
cmc
dec
pushf
scas
cmc
dec
pushf
push
cmc
sbb
scas
cmc
dec
pushf
scas
cmc
icebp
pushf
inc
hlt
in
popf
outs
hlt
dec
pushf
scas
cmc
dec
pushf
scas
cmc
dec
pushf
mov
cmc
dec
pushf
jle
mov
outs
shl
adc
pushf
and
int
push
hlt
lds
scas
cmc
dec
pushf
scas
cmc
dec
pushf
scas
cmc
dec
pushf
scas
cmc
dec
pushf
cmp
leave
or
fst
popa
cdq
sbb
and
or
fld
popa
test
pushf
scas
cmc
dec
pushf
scas
cmc
dec
pushf
scas
cmc
dec
pushf
scas
cmc
jmp
test
fldcw
mov
scas
stc
mov
cwde
jp
jmp
or
jae
dec
nop
add
cmc
dec
cmp
test
sbb
pop
popf
and
dec
cmp
push
hlt
inc
pushf
scas
pop
dec
pusha
stc
inc
xchg
mov
hlt
loope
pmuludq
xchg
scas
cmc
loope
push
mov
(bad)
repnz
test
scas
cmc
jmp
xor
or
jne
dec
adc
pop
dec
popf
push
hlt
jmp
cmp
dec
push
hlt
mov
sbb
pop
popf
and
sahf
scas
push
dec
sahf
scas
cmc
int3
rol
fcom
or
stos
js
jno
scas
stc
pushf
mov
cmc
dec
nop
mov
addr16
pop
dec
popf
add
jmp
add
sub
dec
pushf
scas
cmc
mov
jle
inc
and
jmp
sahf
scas
cmc
dec
test
leave
mov
fstp
add
sbb
out
jl
inc
test
scas
icebp
dec
pushf
scas
pop
jns
mov
loope
sahf
scas
and
push
inc
stos
js
test
scas
lods
loop
out
push
icebp
bsr
jmp
ins
and
addr16
adc
inc
pushf
scas
cmp
mov
dec
test
clc
dec
test
call
and
sar
movs
icebp
inc
jp
and
pushf
ss
rol
ss
push
or
dec
cmp
test
cmps
gs
popf
out
pop
inc
cmp
cmc
dec
pushf
add
push
popa
stc
jno
mov
inc
mov
cmp
adc
sbb
jne
dec
pusha
stc
push
xchg
mov
test
scas
cmc
mov
jmp
jbe
hlt
addr16
pop
dec
popf
ss
push
xchg
ss
test
xchg
dec
cld
fmul
ins
inc
jle
adc
test
cmp
add
pushf
scas
jmp
dec
add
out
rcr
fwait
mov
mov
push
xchg
mov
(bad)
rcl
ss
push
xchg
ss
stos
pushf
jp
jecxz
push
hlt
dec
pushf
scas
pop
inc
test
std
fmul
push
hlt
dec
pushf
scas
fidivr
push
mov
les
inc
test
lods
hlt
mov
(bad)
xchg
dec
popf
call
dec
mov
out
push
jp
sub
popa
xchg
mov
test
scas
push
int
scas
cmc
mov
mov
test
bound
push
pop
dec
popf
mov
hlt
rol
mov
adc
movs
mov
inc
dec
mov
out
push
cwde
mov
pushf
scas
cmp
loop
pop
dec
cmp
test
cmps
gs
popf
out
pop
inc
cmp
cmc
dec
pushf
add
push
popa
stc
jno
mov
hlt
loopne
push
inc
mov
int3
int
dec
test
cmp
pushf
mov
cmc
dec
nop
mov
inc
dec
out
xchg
dec
popf
div
popf
push
and
jne
hlt
mov
or
pop
popf
sub
mov
add
jmp
push
mov
xor
xchg
inc
neg
add
stos
inc
and
push
nop
inc
neg
xchg
and
sbb
pop
dec
popf
out
push
dec
xchg
scas
cmc
mov
call
sahf
scas
push
push
jge
hlt
int3
loop
test
scas
cmc
imul
pop
xchg
ds
fcomp
hlt
or
lock
dec
popf
out
jo
jl
hlt
or
jno
mov
icebp
xchg
mov
test
scas
jmp
dec
pop
dec
xor
push
pop
adc
test
scas
xor
test
and
stos
sahf
scas
push
dec
cmp
cmp
dec
pop
addr16
xchg
out
fs
mov
div
(bad)
clc
data16
test
icebp
inc
mov
push
jmp
ret
cmp
jg
pop
scas
mov
jge
or
ds
mov
cmps
lds
or
mov
imul
mov
xchg
mov
addr16
sbb
fwait
test
fild
cmp
pop
imul
shr
fs
hlt
jne
sbb
pop
popa
mov
hlt
or
pop
xchg
cmp
mov
hlt
rol
pop
adc
adc
mov
pusha
mov
gs
pop
data16
movs
fwait
or
pop
cmps
test
pop
inc
hlt
fnstenv
dec
xchg
retf
mov
pop
push
retf
jl
mov
mov
pop
mov
aas
add
mov
outs
fwait
shl
pop
leave
jl
inc
(bad)
loope
(bad)
mov
std
ja
call
mov
ret
jl
or
lahf
fwait
xchg
mov
mov
mov
cdq
xchg
pop
fstp
inc
cmps
mov
and
ds
cdq
nop
inc
scas
adc
test
pop
ret
movs
cwde
xchg
sub
movs
addr16
mov
cmp
ret
movs
cdq
js
xor
mov
cmp
(bad)
mov
mov
push
ins
ins
or
inc
pop
inc
or
aad
or
xor
test
dec
fcomp
inc
cmp
frstor
je
neg
dec
xor
xor
and
les
rol
pop
mov
pop
cdq
cmp
add
inc
cmp
cdq
sbb
sbb
nop
add
mov
mov
adc
int3
xchg
and
es
mov
leave
mov
or
or
cmps
or
or
add
adc
call
mov
mov
pop
or
div
mov
dec
or
dec
or
or
pop
pop
cmp
mov
add
arpl
test
jno
ins
or
test
jbe
or
mov
jp
inc
or
or
mov
or
or
jno
ins
or
sub
test
add
enter
mov
xchg
mov
xchg
xchg
adc
mov
adc
mov
invd
sub
movs
or
aaa
sbb
sub
cmps
or
cmps
push
jno
and
call
mov
mov
bswap
sub
div
(bad)
fistp
jo
(bad)
fld
push
leave
(bad)
xchg
pop
das
or
pop
das
or
lds
lea
mov
adc
ficomp
xchg
xchg
pop
das
or
pop
daa
or
or
pop
aam
or
scas
or
cmps
dec
jno
xor
call
jne
sbb
or
or
add
xor
sbb
or
or
or
das
or
jmp
cmps
or
aas
sub
pop
mov
xchg
xor
mov
(bad)
mov
cmps
movs
retf
push
push
jmp
pop
sub
add
mov
and
aas
add
or
cmp
or
xchg
mov
pop
xchg
stos
pop
xchg
cmps
test
sub
inc
or
or
mov
mov
invd
mov
or
cmp
add
sbb
(bad)
or
or
aam
or
pop
pop
sub
mov
nop
sbb
repnz
pop
jle
or
or
cmc
movs
or
adc
(bad)
jg
pop
xchg
mul
dec
movs
daa
cmp
mov
and
loope
jg
div
popa
or
pop
sub
shl
adc
clc
stc
jle
pop
mov
xchg
cwde
adc
cmp
push
lods
adc
lock
imul
fwait
adc
jg
mov
or
pop
lds
dec
hlt
sub
jg
and
add
add
movs
data16
jmp
cdq
mov
jno
mov
data16
test
lods
inc
cld
std
jge
pop
rcr
pop
shl
pop
iret
test
movs
mov
xchg
pop
out
mov
mov
fnsave
xchg
shl
push
jg
pop
push
addr16
mov
pop
mul
lahf
dec
pop
push
jl
pop
shl
hlt
push
xchg
dec
addr16
rol
mov
retf
sbb
push
xchg
sub
cld
ret
movs
imul
cmp
mov
pop
(bad)
lods
jp
arpl
jle
add
jl
ins
push
cmc
pop
clc
xchg
or
dec
movs
cdq
jo
dec
lea
fs
retf
leave
fdiv
retf
std
jne
mov
cwde
imul
mov
jne
xchg
sub
ins
cwde
or
sub
adc
fwait
or
dec
xor
xor
sbb
xchg
and
bound
fldcw
into
add
retf
and
sbb
je
ret
adc
out
inc
ret
(bad)
or
enterw
into
or
fstp
add
retf
outs
fisttp
fisub
fcmovne
or
sbb
and
fcmovne
ins
inc
and
int3
or
or
jl
std
jle
pop
data16
cmps
cwde
or
mov
repz
dec
movs
push
jo
mov
(bad)
or
movs
call
movs
bound
(bad)
jl
jle
dec
cmp
pop
enter
xor
cdq
fwait
repz
mov
dec
jp
pusha
mov
in
out
sahf
adc
addr16
pop
test
stos
and
js
lock
aad
xchg
fistp
repz
cmps
lds
or
push
pop
mov
pop
jge
aaa
inc
push
mov
jl
shl
inc
gs
xchg
push
mov
fucomip
(bad)
jo
jle
xor
xchg
jle
pop
mov
mov
fs
jl
imul
test
rcl
mov
mov
nop
push
sub
(bad)
and
jg
rcr
push
cmp
mov
inc
jle
shl
mov
sub
ja
fs
jl
jle
les
sbb
mov
jg
div
test
mov
mov
cmp
sub
mov
mov
fst
mov
jne
jl
dec
imul
jne
int
push
mov
in
pop
jnp
pop
test
inc
and
and
pop
xchg
cwde
inc
pop
mov
nop
cld
xchg
sbb
jl
mov
cmp
int
aad
mov
sub
mov
push
mov
mov
pusha
cmp
jns
or
push
push
mov
pusha
cmp
push
mov
mov
push
mov
inc
arpl
and
std
mov
and
std
mov
and
retf
and
cld
xchg
push
icebp
out
or
jmp
and
out
or
jmp
xor
stc
adc
or
retf
(bad)
xchg
neg
jle
add
mov
and
std
mov
and
dec
test
fldcw
xchg
sub
or
or
and
ror
clc
fiadd
jbe
adc
mov
and
jne
test
js
(bad)
jbe
sub
jnp
repnz
std
mov
cmp
icebp
xor
mov
and
sbb
fldcw
jp
jb
ins
pop
and
imul
and
in
mov
cmp
pop
or
xchg
adc
cld
xchg
sbb
mov
cmp
and
sub
mov
or
pop
sbb
pop
ss
ret
hlt
xchg
lea
test
and
jmp
cmc
xor
call
sub
nop
or
mov
or
mov
test
sub
and
dec
push
pop
and
lahf
call
fldcw
push
test
mov
fldcw
push
pop
and
lahf
or
jmp
and
sub
fbld
mov
adc
or
repnz
icebp
enter
std
mov
and
pop
add
rcl
or
dec
push
icebp
enter
std
mov
and
retf
add
ror
or
dec
jo
mov
pop
shl
or
jmp
and
lock
push
icebp
pushf
or
shr
xchg
or
pop
inc
cmp
out
or
push
mov
or
add
sbb
cmp
jmp
and
or
es
sbb
loope
int
dec
movs
div
jle
dec
push
loope
mov
in
dec
inc
out
or
cmp
or
cmp
or
leave
cld
clc
push
push
cdq
fiadd
arpl
and
rcr
cwde
add
std
mov
sub
fwait
(bad)
int3
sti
mov
and
jmp
or
leave
mov
dec
test
popf
neg
shr
es
add
xchg
jle
es
mov
(bad)
cld
je
les
fsubrp
(bad)
jmp
cmc
repnz
repnz
cmp
enter
or
sub
push
in
mov
and
xchg
dec
and
mov
add
fisttp
and
std
mov
cmp
dec
sbb
cld
aaa
das
jo
mov
loope
out
es
dec
sbb
loope
aas
adc
cld
sub
add
jmp
or
sbb
aad
sti
push
ins
dec
movs
(bad)
pop
data16
jg
and
sub
add
jg
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
data16
movs
cdq
xor
gs
pop
gs
pop
gs
pop
gs
pop
data16
movs
cdq
xor
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
frstpm(287
push
frstpm(287
push
frstpm(287
push
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
data16
lock
mov
gs
pop
gs
pop
gs
pop
gs
pop
popa
jg
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
xor
push
aad
mov
mov
and
pop
pop
outs
add
jg
dec
in
xchg
addps
xchg
imul
lds
mov
jge
dec
ret
mov
mov
in
mov
test
gs
lahf
cmps
cwde
shr
mov
sbb
idiv
cdq
movs
scas
stos
shl
dec
jge
pop
imul
out
iret
mov
mov
ins
(bad)
xchg
dec
inc
jo
sbb
in
xor
inc
pop
fs
fcomp
mov
pop
mov
add
mov
in
mov
mov
dec
mov
js
xchg
sub
js
mov
xchg
shr
call
enter
jnp
jo
pop
mov
pop
or
jae
dec
xchg
out
hlt
cld
jae
cmc
jb
inc
cld
mov
pop
in
scas
in
hlt
sbb
icebp
movs
jno
cwde
jg
loope
inc
jle
js
or
mov
push
mov
movs
sbb
mov
rcr
pushf
sbb
movs
xchg
xchg
sbb
arpl
mov
stos
xchg
js
pusha
mov
pop
pop
jge
push
fstp
and
popf
or
arpl
inc
dec
in
and
loop
sub
pushf
or
lea
or
bound
cmps
inc
call
mov
pushf
xor
pop
mov
repz
pusha
sahf
xor
cmp
retf
lods
xchg
dec
movs
es
mov
pop
nop
out
mov
jnp
frstor
mov
div
ret
out
xchg
mov
leave
stos
fldcw
es
dec
cmps
(bad)
pop
gs
shr
sbb
std
push
pop
test
push
jb
js
add
add
sub
ins
inc
cmps
cmc
inc
or
or
addr16
aad
cmp
pop
jge
pop
mov
daa
add
fs
jge
jl
mov
retf
cmp
mov
xor
jg
inc
push
mov
cmp
bts
imul
ficom
cmps
retf
std
jne
cmp
call
outs
or
retf
add
push
cli
sub
jo
mov
jnp
frstor
adc
je
jg
mul
or
nop
jns
sub
inc
mov
mov
sub
sar
push
cmp
xor
lds
xor
movs
cdq
jo
pop
mov
pop
add
inc
push
hlt
addr16
ins
xchg
inc
xchg
fwait
or
mov
icebp
call
mov
jle
cld
cmps
call
mov
sahf
mov
xchg
enter
inc
sbb
dec
mov
ins
aam
pop
dec
loop
(bad)
ret
pop
cmp
mov
inc
cdq
imul
cmp
lds
fisubr
jbe
xor
xchg
jns
aam
cmp
or
pop
xchg
push
push
dec
inc
outs
loop
bound
fstp
dec
scas
es
sub
xchg
js
in
cld
pop
sti
jbe
adc
push
cmps
cmp
inc
pop
sti
jbe
ja
dec
ins
bound
les
jbe
and
mov
bound
xchg
mov
jmp
bound
addr16
repz
dec
mov
pop
leave
ins
xchg
in
pop
mov
cmps
mov
mov
mov
sbb
sbb
pop
clc
jne
mov
pusha
mov
in
mov
sti
mov
xchg
xchg
mov
add
inc
cmps
inc
jp
dec
hlt
inc
lahf
dec
movs
cdq
sbb
pusha
movs
pop
and
jmp
jge
pop
mov
and
pop
cmp
mov
pop
(bad)
data16
std
jbe
push
(bad)
jp
mov
mov
fsubrp
mov
xor
jle
mov
pop
mov
pop
lock
sub
in
xchg
cmc
pop
xchg
ins
sub
mov
imul
mov
xchg
bound
pop
test
jne
xchg
pop
leave
jl
inc
jle
or
inc
jno
adc
dec
stc
lods
stos
sub
loope
jmp
pop
mov
mov
jae
(bad)
mov
std
jp
retf
pushf
xchg
mov
xor
rol
hlt
sbb
jle
pop
lea
inc
push
addr16
lods
add
cld
sbb
(bad)
mov
cmc
scas
or
fwait
retf
sar
js
sar
xchg
sti
stos
stos
push
shl
iret
nop
push
push
mov
call
popa
push
cld
adc
lods
test
in
cld
and
mov
push
add
fs
sub
es
movs
fwait
xor
loop
movs
stos
dec
sub
icebp
or
jmp
nop
scas
sti
pop
addr16
cmc
and
inc
mov
div
or
gs
ins
pop
and
mov
fistp
sbb
mov
stos
sub
xor
xchg
mov
bound
mov
arpl
mov
out
sahf
mov
pop
inc
cmps
add
dec
jae
dec
mov
dec
ja
rcr
jo
sti
pop
addr16
cmc
and
xchg
stc
cmp
sbb
mov
jmp
mov
mov
retf
mov
retf
std
jne
push
dec
xchg
call
inc
pop
push
jbe
push
hlt
(bad)
xchg
mov
mov
mov
cwde
mov
daa
or
ror
sbb
adc
xchg
in
push
mov
stc
jmp
adc
mov
pop
mov
jmp
ret
movs
call
inc
ret
movs
fwait
rol
mov
imul
mov
movs
mov
retf
push
dec
push
cs
(bad)
jmp
push
mov
ror
jns
jnp
inc
pop
test
mov
mov
out
xchg
stos
inc
call
in
inc
inc
daa
inc
sbb
add
in
push
inc
cs
loop
lds
or
cmp
add
pop
test
jnp
adc
xchg
addr16
xchg
push
sub
(bad)
and
je
js
inc
std
icebp
sub
pop
(bad)
xchg
cmp
inc
xchg
jb
add
es
sahf
(bad)
xor
mov
xor
test
test
xor
test
xor
fs
nop
sbb
inc
(bad)
cmp
outs
imul
cs
aas
fistp
pop
mov
add
push
lahf
cmp
mov
sti
sub
jmp
mov
cmp
jne
mov
fs
push
mov
sbb
dec
xchg
mov
addr16
mov
xor
push
aad
mov
fldcw
mov
sub
outs
aad
gs
dec
or
pop
mov
fisttp
nop
mov
push
popf
mov
jbe
ret
mov
fs
ins
and
test
psrlw
stos
in
sub
nop
add
stos
stc
xor
gs
mov
pop
addr16
inc
addr16
mov
imul
retf
mov
repnz
pop
gs
pop
aad
imul
and
mul
jge
pop
imul
ret
imul
jge
pop
(bad)
cwde
dec
movs
cdq
xchg
adc
data16
test
pop
hlt
icebp
xchg
xor
lds
mov
or
loopne
retf
std
jbe
and
and
cdq
mov
push
xchg
in
push
xor
pop
dec
lea
inc
bnd
jae
(bad)
mov
sub
push
popf
nop
in
fxch
xchg
sbb
pushf
add
pop
addr16
stc
cmp
push
sti
(bad)
push
jg
sub
xchg
or
push
push
sub
add
add
mov
or
pop
in
call
movs
imul
shr
mov
mov
cld
and
test
test
pusha
mov
leave
mov
push
push
clc
sti
xor
repz
or
mov
sub
mov
sub
js
sub
(bad)
out
rcr
stc
int
dec
and
shr
xchg
adc
pop
sbb
sub
mov
loope
sbb
cmp
add
xor
mov
xchg
adc
(bad)
cmc
fidivr
cmp
retf
xor
mov
pop
adc
push
add
fs
cli
xor
sbb
push
movs
mov
les
jg
jbe
js
repz
push
mov
jne
mov
shl
mov
mov
pop
mov
sbb
ret
xchg
(bad)
cli
and
add
adc
jg
mov
mov
or
xor
inc
inc
mov
mov
test
mov
dec
push
jns
movs
retf
std
jbe
cmp
lods
cmp
in
jb
dec
shl
pop
arpl
add
sti
icebp
jle
pop
mov
sub
data16
mov
mov
push
mov
jne
push
xchg
jg
sbb
push
and
pop
xchg
(bad)
std
mov
fst
jo
pop
mov
pop
shl
pop
hlt
jmp
add
loopne
div
retf
pop
xchg
mov
pop
mov
ret
ins
pop
shr
inc
inc
adc
aad
mov
clc
dec
movs
cdq
jo
pop
xchg
ficomp
mov
push
mov
cmp
movs
retf
inc
ja
jno
hlt
mov
dec
push
sub
or
sbb
imul
pop
jns
(bad)
div
or
inc
pop
pop
push
jle
inc
hlt
xchg
xchg
icebp
jg
mov
jg
jmp
or
in
and
dec
mov
mov
test
adc
inc
or
out
out
lock
pushf
mov
lods
(bad)
mov
sbb
adc
dec
(bad)
daa
pop
sahf
fbld
pop
fisub
dec
xchg
cld
daa
pop
and
loopne
repnz
daa
pop
inc
clc
fisub
in
in
cmps
xchg
dec
movs
es
(bad)
push
inc
jg
jbe
jo
js
push
mov
stc
aad
pop
(bad)
loopne
movs
cdq
js
mov
sub
mov
jne
mov
shl
pop
test
xchg
xchg
xchg
popf
pop
mov
jmp
mov
retf
pop
cmp
mov
mov
loopne
mov
or
data16
dec
cmps
fwait
shl
cmp
pop
mov
arpl
jg
mov
outs
out
inc
mov
xchg
fadd
pop
data16
not
jmp
adc
std
jbe
jns
gs
mov
push
jae
pop
nop
es
xchg
mov
pop
hlt
mov
sbb
rcr
cmps
addr16
mov
dec
cmp
dec
push
fnstcw
mov
mov
les
je
mov
jge
fwait
shr
push
jge
pop
inc
pop
cmc
pop
hlt
push
cdq
loop
dec
hlt
jle
fnstsw
addr16
xchg
outs
dec
pop
hlt
fnsave
cmp
ret
xor
sar
ins
pop
ins
jmp
push
push
sub
cmp
(bad)
cmc
mov
mov
dec
mov
mov
stos
idiv
rol
call
or
adc
lea
bound
pop
mov
or
jmp
ins
pushf
fistp
gs
pop
inc
push
daa
out
mov
push
pop
sbb
cs
cdq
add
inc
imul
loopne
or
dec
mov
sub
jne
or
or
out
es
out
mov
ror
call
clc
inc
gs
or
xchg
cmp
pop
push
inc
mov
sub
add
inc
aam
mov
inc
mov
in
cdq
add
inc
push
out
mov
test
sub
lds
cmovb
out
mov
or
inc
inc
sbb
in
xchg
imul
test
iret
cmp
imul
imul
sti
inc
retf
mov
push
pop
and
(bad)
icebp
addr16
sbb
mov
addr16
jbe
js
push
xlat
mov
jo
ficomp
aas
adc
nop
mov
arpl
mov
dec
clc
dec
mov
popf
mov
sti
into
lods
dec
movs
(bad)
mov
mov
xor
ins
dec
fs
and
push
test
(bad)
pop
addr16
mov
push
sub
mov
fistp
cmp
jo
pop
mov
movs
cdq
push
repz
xor
dec
addr16
pop
nop
jg
pop
addr16
stos
fs
mov
div
mov
xchg
fld
xor
pop
ror
mov
leave
in
cmp
mov
xchg
mov
outs
pop
gs
mov
lods
or
adc
cmp
pop
inc
cmps
fwait
ror
dec
lds
pop
retf
add
sub
adc
jb
pop
pop
dec
stc
pop
gs
aam
mov
push
cmp
xchg
mov
mov
mov
fwait
int
shl
jge
pop
push
mov
pop
or
xchg
mov
mov
addr16
mov
xlat
ins
pop
cmp
sbb
push
xchg
push
sahf
jnp
mov
mov
jl
movs
fwait
or
sub
lea
stos
idiv
adc
cmp
ss
add
or
stos
(bad)
push
or
test
mov
dec
shr
jg
push
shr
mov
dec
movs
push
loope
data16
xor
loope
in
xlat
xchg
pop
fst
iret
inc
mov
int3
or
cdq
mov
aam
cs
add
mov
ret
js
pop
mov
stos
dec
dec
(bad)
mov
movs
(bad)
inc
inc
in
dec
mov
ds
xor
add
fwait
emms
repz
push
retf
xchg
loope
add
int
sbb
cld
dec
retf
mov
sbb
int
dec
sbb
xchg
in
pop
retf
(bad)
in
retf
mov
pop
retf
cli
int
pop
xchg
xchg
pop
pop
xor
addr16
sbb
retf
or
mov
daa
jae
pop
stos
dec
adc
ret
js
dec
mov
stos
dec
dec
(bad)
mov
movs
(bad)
jmp
push
push
outs
into
add
in
dec
mov
add
fadd
cmp
fadd
test
pop
andnps
aad
or
fdiv
ret
lods
iret
shl
mov
xchg
outs
and
rol
fstp
xchg
cwde
mov
iret
pusha
mov
cli
loop
in
aam
cwde
fild
adc
stc
inc
jmp
sub
jo
mov
ins
loop
mov
loopne
(bad)
and
add
iret
add
pop
fnstcw
mov
jle
mov
(bad)
pop
push
mov
dec
jbe
scas
and
dec
daa
std
(bad)
pop
mov
dec
adc
retf
fwait
xor
push
popa
cmps
cwde
xor
jg
fdiv
jo
pop
and
imul
sub
jle
pop
mov
(bad)
dec
dec
jp
pop
retf
ins
repz
jle
xchg
cmps
(bad)
push
mov
mov
movs
dec
mov
pop
pop
scas
ins
mov
xchg
in
addr16
pop
lods
sbb
mov
mov
pop
scas
ror
sahf
mov
fdivp
pop
lea
xchg
dec
movs
leave
cld
jae
jl
pop
jne
jle
mov
pop
data16
retf
mov
jmp
dec
and
mov
sub
pop
or
mov
pushf
pop
addr16
or
jge
pop
push
jg
loope
jle
cld
cmp
rcl
mov
jo
dec
mov
mov
stos
leave
hlt
dec
lea
jl
mov
jmp
cmps
xchg
mov
shr
sbb
push
sub
jge
sub
addr16
(bad)
fwait
rcl
scas
aam
mov
or
cdq
jo
dec
mov
ret
add
xchg
push
pop
sub
addr16
jl
or
movs
ret
std
mov
mov
imul
sub
lods
pop
mov
push
mov
retf
std
jbe
lods
loopne
popf
dec
xor
jl
dec
or
lock
xchg
mov
inc
or
out
aad
and
loope
aam
inc
imul
sbb
xor
push
clc
xchg
xchg
sbb
xchg
add
call
xchg
add
in
lds
xchg
add
movs
fst
add
jmp
sbb
xchg
add
call
test
out
movs
std
xor
adc
movs
add
xchg
mov
(bad)
(bad)
xchg
pop
cmc
adc
add
in
xchg
add
adc
and
(bad)
std
sub
jmp
and
cmc
jmp
xchg
and
shr
xchg
mov
out
push
popa
xor
jmp
adc
call
movs
add
je
mov
push
popa
xor
jmp
inc
test
push
popa
xor
jmp
arpl
shr
xchg
leave
loope
xchg
rcl
in
arpl
shr
xchg
fucom
call
and
call
test
ins
dec
movs
add
hlt
sub
jmp
add
call
cwde
add
imul
cmps
cmps
add
int3
xor
in
imul
mov
add
int3
and
(bad)
movs
mov
out
add
jmp
sub
out
xchg
inc
inc
adc
loopne
xchg
mul
add
jmp
add
movs
mov
ficom
add
(bad)
adc
jecxz
pop
lods
mov
jmp
and
call
add
call
test
dec
xchg
xor
test
add
xchg
or
loop
test
add
in
add
popa
xchg
jno
or
xchg
mov
gs
xchg
add
mov
mov
add
jmp
xchg
mov
dec
jmp
add
mul
xlat
or
add
push
mov
loopne
jno
jecxz
xchg
int
dec
xchg
adc
call
xchg
or
cld
imul
imul
gs
hlt
xchg
jmp
cmp
ss
or
add
call
xor
and
xchg
mov
dec
jmp
add
(bad)
cmps
add
dec
xchg
adc
call
xchg
add
push
add
adc
aad
(bad)
xchg
icebp
iret
push
mov
add
call
pop
and
jno
jecxz
xchg
int
test
jecxz
xchg
sbb
loopne
xchg
add
in
mov
clc
xchg
add
dec
imul
push
mov
imul
inc
push
mov
mov
(bad)
xchg
test
mov
(bad)
xchg
sbb
loope
mov
mov
xchg
add
hlt
and
test
cld
jmp
add
call
xchg
add
call
xchg
add
inc
jecxz
aaa
push
arpl
inc
mov
xor
xchg
add
imul
daa
xchg
sar
mov
pop
mov
(bad)
xchg
lea
add
(bad)
push
push
hlt
cmp
push
add
add
dec
xchg
std
loopne
cmp
loope
jmp
xor
call
imul
mov
jne
jecxz
xor
mov
cmp
stos
jecxz
xchg
std
xor
inc
xchg
test
loopne
mov
add
jmp
inc
dec
jmp
add
(bad)
mov
scas
lock
xchg
add
push
mov
loopne
xchg
cmp
loopne
arpl
shr
xchg
shl
call
adc
iret
jmp
mov
out
push
popa
xor
jmp
int3
mov
jmp
xchg
mov
inc
push
adc
cs
xor
push
adc
xor
add
cmp
mov
inc
mov
(bad)
int3
pop
pop
ss
xchg
mov
inc
out
pop
(bad)
sbb
arpl
shr
xchg
leave
loope
xchg
aad
dec
mov
push
iret
jmp
mov
inc
imul
cs
xor
push
adc
shr
add
push
popa
xor
jmp
xchg
add
in
cmc
shr
xchg
(bad)
fdivr
and
adc
xchg
add
test
adc
add
adc
popa
xor
jmp
xchg
add
in
cmc
shr
xchg
cmc
fdivr
jae
loopne
cdq
not
xchg
add
aad
mov
call
movs
add
fsubr
add
push
popa
xor
jmp
xchg
add
in
cmc
shr
xchg
jns
clc
add
call
xchg
add
test
loop
xchg
or
loop
test
dec
jmp
loopne
test
xchg
xchg
add
in
cmc
shr
xchg
(bad)
clc
rol
loopne
xchg
not
xchg
add
jmp
loopne
xchg
not
xchg
add
jmp
adc
xchg
add
nop
not
xchg
add
add
popf
nop
not
xchg
add
jmp
adc
xchg
add
mov
adc
in
xchg
add
cmp
sbb
add
enter
cmp
sbb
add
aam
add
cmp
loopne
xchg
add
cmp
add
loopne
xchg
add
cmp
loopne
xchg
add
cmp
mov
inc
mov
inc
(bad)
sbb
call
cmp
test
inc
lods
mov
(bad)
push
pop
xor
out
xchg
or
loopne
inc
push
inc
sbb
shr
loope
xor
cmps
ins
in
xchg
add
push
popa
xor
jmp
nop
add
in
cmc
shr
xchg
push
fdivr
jg
loopne
cdq
not
xchg
add
mov
call
movs
add
pop
test
pusha
in
xchg
add
push
popa
xor
jmp
xchg
add
in
cmc
shr
xchg
sub
loopne
cdq
not
xchg
add
aam
out
call
movs
add
lock
push
jmp
add
push
popa
xor
jmp
xchg
add
in
cmc
shr
xchg
push
fdivr
fild
loopne
cdq
not
xchg
add
call
movs
add
pusha
test
add
xchg
add
push
popa
xor
jmp
xchg
add
in
cmc
shr
xchg
adc
clc
out
add
call
xchg
add
aad
inc
loop
xchg
add
loopne
xchg
add
aam
pop
loop
xchg
add
loopne
xchg
add
cmp
adc
movs
xchg
add
cmp
add
sbb
add
fs
add
cmp
add
sbb
add
sub
or
sbb
add
jl
and
push
popa
xor
jmp
inc
lock
popa
xor
jmp
inc
shl
popa
xor
jmp
inc
nop
out
popa
xor
jmp
inc
pusha
out
popa
xor
jmp
inc
xor
push
popa
xor
jmp
inc
cmp
movs
lea
jecxz
shr
loopne
xor
push
adc
je
adc
inc
sbb
shr
jmp
push
fs
add
mov
mov
mov
(bad)
xchg
add
sub
sbb
call
xchg
inc
leave
icebp
mov
loopne
xchg
add
jecxz
imul
jne
inc
xchg
jno
dec
movs
xor
sbb
mov
cdq
add
loopne
or
in
in
or
hlt
cld
test
hlt
ror
rcr
mov
cmp
sar
inc
lods
mov
test
popa
test
rcl
xchg
or
hlt
clc
and
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
sahf
add
nop
cdq
add
in
rol
loopne
xchg
add
in
add
loopne
xchg
add
call
test
mul
imul
loopne
add
loopne
xchg
add
in
adc
sbb
xchg
xor
in
xchg
or
in
test
sahf
stos
push
push
mov
(bad)
jbe
sbb
add
call
stc
rcl
std
popa
push
cmp
push
ret
rcr
mov
push
stc
sub
mov
xchg
add
les
jecxz
test
xchg
(bad)
jmp
push
mov
in
neg
jmp
adc
mov
mov
xchg
mov
sar
aaa
push
xor
in
mov
dec
hlt
mov
das
inc
cwde
inc
das
add
in
sub
ss
fisubr
add
inc
jecxz
int
jle
mov
(bad)
std
mov
dec
call
mov
int3
push
cdq
sbb
mov
cs
(bad)
sbb
ret
adc
mov
faddp
sbb
adc
scas
popa
call
dec
imul
adc
mov
push
fwait
sbb
mov
mov
leave
cs
mov
pop
or
js
sbb
jmp
test
lea
push
adc
inc
xor
(bad)
xor
mov
les
fcom
ret
repz
or
div
mov
push
xchg
sbb
outs
jl
cmp
jmp
jl
call
enter
test
cmp
and
xchg
add
mov
rcr
fdivr
cmps
into
sub
sub
pop
mov
inc
movaps
fisttp
test
leave
mov
dec
aaa
inc
jmp
jbe
int3
dec
adc
mov
ss
mov
dec
ins
imul
cmp
inc
cmp
pop
test
sahf
addr16
pop
mov
mov
add
test
pop
jnp
sbb
bswap
daa
ficomp
add
dec
pop
hlt
adc
call
push
jne
inc
int3
inc
mov
dec
push
push
outs
into
das
push
js
inc
xor
sub
add
sub
shl
cmp
cmp
(bad)
cdq
push
lods
sub
aaa
mov
imul
jnp
test
mov
arpl
mov
push
cdq
or
mov
js
mov
mov
scas
shr
test
(bad)
dec
mov
add
dec
xchg
xor
xchg
sbb
mov
lods
mov
mov
push
sub
mov
sbb
dec
inc
xor
rol
jl
push
pop
stos
retf
data16
jns
or
test
xchg
js
mov
mov
pop
das
cmp
sti
(bad)
fstp
(bad)
sahf
adc
test
mov
repnz
shl
inc
mov
repz
idiv
ja
pop
xchg
test
xor
lods
mov
mov
xchg
hlt
inc
mov
adc
ret
inc
jns
inc
cmps
shl
mov
pop
lahf
or
inc
xor
scas
(bad)
lds
fistp
rcl
popf
rol
mov
jl
call
int
call
nop
popf
movs
ja
test
jg
pop
jno
call
adc
cmp
jle
jne
xchg
in
mov
push
mov
mov
fisttp
xchg
and
call
pop
into
enter
xlat
dec
test
sbb
pop
jae
sub
icebp
adc
and
std
push
repz
jbe
fdiv
pop
mov
out
fnstenv
dec
jbe
loop
mov
fsub
(bad)
sub
ss
call
mov
cmp
inc
xor
pop
shr
xchg
cmp
scas
mov
or
dec
xor
cmp
scas
das
cmp
jo
popa
aad
sub
mov
retf
retf
shr
sub
jae
data16
aas
push
add
enter
je
outs
adc
jmp
ja
mov
test
in
mov
jge
jno
daa
das
(bad)
call
test
and
dec
pop
iret
xor
stos
push
inc
xor
unpckhps
add
inc
in
ins
jge
int3
ins
(bad)
xor
loopne
popf
imul
les
mov
shl
(bad)
jbe
jp
pop
add
enter
inc
xchg
add
ins
and
ins
scas
mov
lods
rcl
rol
add
lods
test
sub
loopne
xchg
add
test
xor
mov
push
adc
std
lock
inc
loopne
popf
adc
clc
popf
or
loopne
xchg
add
in
add
cld
push
(bad)
mov
imul
in
or
cs
jmp
into
cld
xchg
addr16
fild
dec
dec
data16
outs
icebp
rcl
ror
dec
stos
push
(bad)
cmp
sbb
fcom
inc
clc
adc
cmp
mov
or
mov
fsub
mov
xor
div
adc
pop
jmp
cmp
cmps
iret
xor
movs
test
xor
fldcw
gs
jbe
push
jnp
sti
sub
push
or
jns
pop
aad
repnz
mov
dec
rol
leave
jle
and
das
mov
push
sbb
ret
out
mov
shl
test
xor
call
or
jns
sub
adc
inc
or
and
mov
mov
sub
aad
scas
lock
repz
aam
jg
mov
mov
test
sti
out
sub
dec
div
imul
push
xchg
jb
xor
dec
xor
aad
xor
aam
outs
adc
movs
sbb
out
jmp
push
fild
jle
cld
adc
mov
inc
int
sub
shl
jbe
push
xor
inc
inc
movlps
xchg
xchg
pop
adc
int
lds
mov
mul
loope
retf
push
mov
xor
loop
repnz
fcmove
push
xchg
jge
jb
push
aam
jb
mov
fmul
inc
scas
and
jns
(bad)
push
imul
mov
call
xchg
xchg
shl
fwait
mov
ret
repnz
adc
inc
push
arpl
and
jecxz
int
(bad)
bound
jge
repz
jmp
sub
call
mov
call
jge
push
jmp
lock
mov
mov
and
add
mov
or
add
fwait
sbb
mov
mov
xchg
pushf
add
or
mov
xor
push
fist
ficomp
adc
adc
sbb
add
loopne
adc
cld
call
xchg
add
hlt
lock
sub
fld
in
lds
out
adc
adc
and
mov
xchg
and
in
add
sti
xchg
fadd
xor
pop
lock
jmp
pop
push
xor
jb
or
xor
or
dec
(bad)
jle
std
pop
mov
mov
jbe
pminsw
ds
cdq
sub
and
loope
dec
xchg
loop
mov
xor
lock
mov
cmp
sar
pop
popf
jo
jnp
push
or
repnz
fild
dec
and
jns
clc
push
inc
mov
maxps
out
cmps
inc
cmp
aam
jg
cs
leave
pop
and
xor
addps
push
das
jb
aas
sbb
loop
and
call
xor
mov
(bad)
int
pop
scas
pushf
(bad)
movs
cld
into
hlt
dec
adc
gs
jge
les
cmp
enter
fwait
daa
mov
cmps
cmps
dec
mov
push
add
repz
adc
inc
sbb
sahf
jecxz
push
xchg
mov
jb
jbe
ret
cmp
sub
xor
scas
dec
jl
stos
mov
cmp
cmp
sbb
cmp
sbb
mov
rol
outs
shl
dec
jmp
fs
imul
push
adc
cs
xchg
jno
pop
jg
jle
arpl
cmp
jge
or
cmp
add
dec
repz
cmp
or
push
cmp
repnz
xchg
and
push
add
call
xor
or
xchg
inc
push
push
or
cli
not
add
xchg
mov
push
inc
push
jl
call
(bad)
xchg
cdq
jb
pop
fcmovnb
(bad)
(bad)
pop
mov
push
and
xchg
push
test
jo
scas
adc
popf
data16
dec
imul
daa
inc
pop
sar
aam
sbb
sub
(bad)
retf
jo
mov
jns
mov
fdiv
psubsw
jle
jo
cs
hlt
sub
jns
or
mov
cmps
xor
and
jno
(bad)
cmps
pop
jb
call
adc
jne
sub
pop
fcomp
cmp
mov
push
cmp
(bad)
xchg
mov
test
movq
mov
retf
ja
cwde
inc
fild
jno
jl
xchg
loopne
sbb
lock
jo
js
(bad)
repnz
and
and
pop
sbb
dec
mov
adc
fisubr
inc
inc
mov
push
mov
and
or
inc
mov
out
jo
xchg
mov
retf
xchg
or
por
ds
jne
pop
fs
inc
push
hlt
data16
(bad)
fild
(bad)
dec
retf
add
pop
jb
(bad)
das
xor
fisub
mov
pop
jo
mov
dec
ins
xchg
adc
mov
sub
(bad)
xchg
lods
push
cmp
out
mov
sbb
dec
push
ds
push
inc
push
adc
stos
sub
cli
mov
dec
sub
sbb
sub
pop
jge
or
sti
ret
cdq
jb
popf
or
push
push
(bad)
repnz
sub
jbe
mov
mov
pop
mov
mov
aaa
and
mov
add
outs
ret
bound
je
aaa
stc
mov
mov
push
cmp
mov
jmp
inc
loopne
popf
adc
loopne
add
loopne
xchg
add
loopne
add
lods
push
inc
test
push
leave
sub
adc
sbb
xchg
and
loopne
add
outs
inc
mov
jmp
push
enter
mov
or
and
ins
scas
sbb
gs
xlat
mov
or
int3
pop
push
push
mov
cmp
add
xor
pushf
(bad)
ins
popa
rcr
pusha
retf
arpl
daa
imul
xor
dec
call
inc
bound
ja
push
test
jno
pop
hlt
mov
movs
popf
mov
cmps
xor
arpl
xchg
repz
hlt
mov
movs
sub
call
sti
dec
inc
push
ss
or
pop
sub
xchg
iret
retf
cld
xchg
js
fmul
push
sti
push
pop
out
adc
test
push
scas
xchg
mov
fild
sbb
mov
jo
xchg
cli
gs
xchg
cmp
sbb
jno
fs
(bad)
and
or
das
ins
loopne
dec
push
out
add
jge
pop
xor
jp
adc
cdq
lea
daa
fld
or
das
das
inc
arpl
je
jo
inc
cmp
jb
icebp
xchg
cmp
push
jmp
retf
sbb
add
mov
add
sub
data16
cmp
mov
mov
pop
xor
cmps
test
les
retf
adc
jp
ins
and
sbb
mov
mov
xchg
bnd
pop
mov
mov
scas
adc
retf
dec
popf
test
xchg
jmp
dec
sbb
pop
and
adc
in
fs
js
cmp
bnd
cmc
mov
sbb
fcmovnb
xor
(bad)
lds
jne
xlat
mov
imul
das
das
push
das
into
test
pop
leave
jg
xchg
mov
std
lock
inc
loopne
popf
or
ror
loopne
xchg
add
in
cdq
add
lods
fld
and
in
mov
ins
push
add
mov
adc
mov
popf
or
movs
sbb
and
inc
dec
sbb
xchg
and
in
xchg
sbb
loopne
pop
xchg
xlat
sub
into
push
mov
jb
repnz
jg
mov
dec
xor
dec
or
out
jge
adc
push
add
outs
rol
stos
shl
inc
aam
sbb
in
or
idiv
jmp
fs
fcom
sahf
stos
mov
jle
popa
jmp
aaa
push
and
pop
(bad)
lods
jmp
out
fbstp
xor
pop
leave
sahf
lahf
pop
fwait
lea
repz
inc
sbb
fstp
in
cmp
pop
add
sub
mov
sbb
jp
das
jno
mov
stos
add
imul
mov
and
push
add
ss
lock
je
shl
pop
sbb
or
cmp
aaa
retf
inc
test
out
lods
xor
jecxz
mov
jge
mov
imul
daa
out
retf
add
mov
jge
push
sub
mov
bound
retf
and
nop
inc
xchg
mov
mov
and
mov
mov
lds
sub
xchg
dec
lock
dec
jae
inc
mov
lods
jle
pop
ret
leave
and
in
cmps
inc
or
and
call
mov
sub
frstor
push
cld
retf
das
pop
sbb
(bad)
aaa
leave
(bad)
xchg
mov
xchg
es
xchg
icebp
dec
pop
dec
je
push
fdivr
push
fidiv
and
scas
in
jg
sub
sahf
iret
add
cmp
adc
adc
daa
out
popa
setne
ss
jb
add
inc
jb
ins
cmps
ins
mov
mov
cmps
inc
mov
fisub
lock
inc
adc
retf
sbb
push
call
lds
jecxz
lods
movs
sbb
pop
das
adc
test
pop
je
out
adc
or
mov
xor
(bad)
sbb
push
lahf
mov
mov
cmps
popf
sub
cmps
cmps
std
cmp
fcomp
int
loopne
pop
sub
popf
inc
jo
pop
std
cld
xor
out
xor
or
test
cli
fwait
or
enter
inc
js
xor
or
ret
rcl
jb
lock
scas
mov
into
sbb
jg
dec
mov
ja
dec
imul
mov
sub
xor
iret
ret
pop
mov
hlt
dec
pop
ret
push
lock
fisttp
mov
fsubr
(bad)
xor
rol
push
push
push
or
mov
and
add
or
test
enter
pop
adc
mov
xchg
and
and
dec
cmps
ja
mov
cld
arpl
fcomp
jno
mov
mov
test
shl
es
repz
call
loop
sahf
daa
push
jae
or
popf
xlat
pop
add
repz
jle
in
fs
dec
mov
sbb
lahf
xchg
push
sub
je
pop
sub
shr
sub
or
sbb
lock
inc
in
xchg
or
in
add
in
xchg
add
call
xchg
test
sub
inc
and
rol
addr16
push
loopne
xchg
add
pop
outs
dec
cld
jecxz
xchg
jg
cld
es
pop
in
out
mov
jg
lds
and
imul
cwde
jae
sbb
(bad)
scas
mov
cmp
sbb
addr16
push
call
jle
int
push
lock
mov
pop
xor
cmp
pop
or
lods
test
dec
push
les
test
je
cli
retf
cmp
hlt
(bad)
fidiv
sub
jle
xor
pop
push
inc
in
retf
xor
add
push
call
clc
pop
leave
fbstp
nop
inc
leave
imul
jmp
cli
fwait
jnp
add
in
sub
jg
inc
dec
inc
push
sti
sub
repnz
stos
mov
add
je
rcl
jg
add
mov
adc
(bad)
test
pop
(bad)
inc
add
sub
into
jno
pop
gs
retf
dec
and
rol
aaa
inc
fdivr
xchg
cmp
cmp
ds
int3
sbb
jo
and
iret
xor
enter
cld
xor
dec
xchg
in
stos
iret
imul
bound
and
es
cmps
test
fwait
test
inc
cmp
mov
cmps
shl
cli
or
outs
loop
repz
movs
shr
int
ror
aad
xor
adc
test
dec
aaa
stos
iret
lods
cmp
jmp
xchg
test
jae
enter
inc
cmp
mov
test
fcom
ficom
inc
adc
mov
rcl
rol
push
dec
fdivr
call
sbb
cmp
fidivr
push
mov
or
adc
mov
and
sahf
(bad)
movs
dec
xlat
popf
dec
call
rcr
pop
mov
push
test
loope
mov
repnz
jns
iret
movs
out
push
popf
std
and
je
xchg
shl
and
xor
(bad)
mov
or
fist
pusha
ins
dec
adc
imul
popa
lahf
mov
xchg
inc
cmps
out
cmps
aam
in
pop
test
movs
pop
stos
fidivr
push
out
lahf
daa
pop
push
retf
jmp
es
mov
loopne
lods
xchg
lds
sub
and
xor
cwde
add
jl
lahf
mov
push
mov
sbb
pop
sub
pop
push
sub
push
jecxz
je
ja
mul
or
mov
clc
mov
sub
and
mov
and
dec
and
repnz
movs
or
in
call
xor
loopne
xchg
add
call
jge
mov
xchg
add
call
ja
jo
adc
jecxz
gs
call
stos
push
loope
cdq
lods
cwde
call
mov
add
loop
or
jbe
add
mov
xchg
xchg
test
arpl
mov
push
mov
add
lock
aas
mov
push
jle
stos
add
test
jae
gs
mov
stc
mov
lods
mov
clc
jb
cmp
adc
jns
cmps
call
adc
xor
retf
push
cmc
xor
lods
adc
cwde
out
lea
ss
xor
in
dec
push
icebp
inc
pushf
xchg
inc
int
out
in
lea
lods
rol
lock
mov
add
mov
lds
jae
jecxz
cdq
imul
cmp
sub
add
jl
and
push
push
add
call
sbb
pop
loopne
xchg
and
dec
mov
add
xor
add
push
or
jb
shl
call
(bad)
icebp
add
push
loopne
rol
clc
in
or
loopne
xchg
add
in
adc
and
rol
in
xchg
add
mov
(bad)
mov
add
xor
jp
cwde
fstp
movs
push
add
fistp
push
mov
addr16
cdq
bnd
std
pop
and
mov
cmp
jmp
xor
fisttp
push
movs
iret
loopne
add
into
sahf
adc
sub
shr
mov
test
shl
rol
inc
xor
push
jl
push
cmp
mov
pop
or
push
aas
mov
sub
add
outs
jle
dec
fld
out
jl
mov
sahf
dec
inc
cmp
jmp
mov
test
mov
ja
imul
in
sub
jnp
stos
mov
sub
adc
test
ins
push
addr16
mov
cmc
adc
fs
pop
dec
mov
push
jmp
sbb
pop
xchg
call
lea
or
shr
into
repnz
mov
push
jmp
in
ret
dec
(bad)
fst
imul
xchg
(bad)
sbb
fs
enter
int
xchg
push
xchg
test
rcl
pop
enter
ficomp
mov
cmp
jg
sbb
jns
imul
mov
dec
movs
mov
lea
xchg
int3
jp
jae
sbb
stos
add
lods
push
ss
addr16
repz
xchg
sub
ret
movs
stc
mov
mul
lahf
jmp
cmp
fsub
xchg
test
popa
sbb
test
fisubr
sbb
add
loope
cmps
xchg
mov
jmp
jo
ret
inc
fiadd
inc
jle
push
clc
shr
loop
cmp
jmp
dec
fwait
push
pop
aas
aas
xor
xchg
add
xchg
or
call
cmp
fsub
scas
hlt
mov
cmp
jp
xchg
lock
daa
dec
inc
xchg
adc
cs
dec
cmps
outs
retf
fs
call
cwde
loope
es
mov
dec
sub
movs
int3
lock
mov
dec
jmp
mov
sbb
dec
fmul
and
mov
jg
xchg
dec
out
pop
push
out
inc
daa
sahf
or
sub
sahf
retf
ss
sub
push
mov
popa
rcl
sbb
push
jl
retf
sub
jecxz
sbb
jbe
pop
fwait
outs
cmps
cs
push
mov
xchg
es
out
push
cmp
data16
inc
fsubrp
mov
sbb
inc
cmp
cmps
xchg
push
jo
jno
push
mov
rcl
retf
adc
fld
in
mov
mov
fild
ins
fist
in
push
mov
mov
hlt
clc
and
cs
out
aaa
push
dec
and
aaa
jns
jmp
js
lods
jle
xlat
loop
xor
cmp
push
mov
movs
movs
in
xchg
add
call
call
xchg
inc
es
push
test
ins
nop
(bad)
cmps
jmp
inc
sub
mov
mov
call
je
cli
pop
mov
(bad)
std
mov
mov
adc
call
pop
je
imul
add
test
loop
xchg
push
xchg
pop
sar
call
add
inc
push
mov
adc
rcl
in
xchg
fild
idiv
mov
jmp
pop
pop
mov
sbb
mov
(bad)
and
ror
aad
lods
xor
push
mov
push
pusha
fadd
(bad)
cwde
or
sbb
cdq
bound
(bad)
push
stos
fld
push
aas
xchg
xor
or
push
mov
xchg
nop
retf
xchg
inc
pop
(bad)
sbb
rol
rcl
and
inc
pushf
push
and
pop
fistp
push
xchg
or
mov
movs
aaa
cmp
add
(bad)
xlat
ror
aas
iret
aaa
out
push
test
test
out
fcomp
push
retf
and
data16
xor
adc
add
mov
movs
pop
rcr
aam
rcl
xor
push
imul
cli
jg
pusha
jmp
sbb
inc
mov
cmc
je
test
fild
call
fadd
stos
test
movs
pop
lahf
push
iret
dec
push
aad
jmp
ror
mov
adc
pusha
outs
xor
adc
lahf
bound
mov
push
mov
mov
jb
adc
jmp
xor
popa
adc
jp
jge
jno
div
jle
popa
pop
into
mov
lea
cdq
(bad)
jle
outs
sub
outs
mov
xchg
fisubr
xor
fcmovb
mov
imul
xor
sbb
or
daa
xchg
mov
loopne
cmp
and
adc
add
xchg
add
in
test
call
call
xchg
add
adc
sub
loop
push
xchg
pop
inc
shr
add
adc
inc
icebp
outs
mov
cmp
call
in
jl
mov
aad
adc
aaa
or
sbb
mov
lds
dec
enter
sub
ins
(bad)
mov
enter
outs
mov
add
loop
mov
into
or
xchg
or
pop
adc
scas
push
loopne
sbb
xchg
or
xor
mov
retf
fcomp
je
xor
xchg
ret
test
add
xchg
mov
ret
pop
jo
mov
(bad)
cli
out
cdq
mov
ss
pop
rcl
inc
mov
aas
mov
and
xchg
or
inc
cld
mov
hlt
or
test
cs
enter
fisttp
xor
cli
pop
add
pushf
or
xor
cdq
push
daa
imul
xchg
aas
push
arpl
pop
pop
fild
sbb
lds
loop
lock
loope
fwait
xchg
cmp
repnz
and
or
pop
jl
out
fld
sub
mov
test
sub
jmp
repz
sbb
sti
fcomp
div
mov
inc
stos
sub
inc
icebp
cmp
add
retf
data16
cmp
sub
jne
retf
popf
int
sti
sbb
arpl
add
into
scas
dec
int3
das
or
cwde
scas
push
and
ins
test
ret
fsub
pop
push
mov
adc
pop
aad
xor
jnp
ins
fs
sub
aas
aam
sub
adc
jecxz
push
adc
lock
and
jecxz
dec
jl
xchg
dec
js
in
mov
test
ret
sub
adc
pop
jnp
xor
push
jae
cmp
imul
test
sub
xchg
cmp
daa
push
sbb
fs
sbb
(bad)
xchg
fs
lock
movs
jmp
je
test
imul
dec
pushf
sbb
in
push
push
data16
in
jecxz
sahf
xchg
imul
mov
dec
sub
add
cmp
push
in
mov
mov
(bad)
lock
test
adc
mov
in
retf
sub
adc
lds
ret
adc
mov
mov
in
jge
mov
ins
inc
test
aam
inc
pop
and
sbb
mov
jnp
ds
popf
inc
clc
cli
adc
iret
in
inc
neg
jmp
icebp
inc
mov
cmps
lods
icebp
addr16
and
push
popf
mov
shl
adc
ins
cmp
out
lea
in
jle
ja
dec
rcl
adc
mov
scas
cmps
mov
xlat
aad
xchg
xchg
je
pop
cld
pop
push
sub
fadd
rol
pop
cmps
or
mov
popf
iret
sub
out
or
cmps
inc
sub
aam
icebp
push
cmc
mov
rcr
cwde
cmps
push
and
imul
loope
mov
inc
iret
mov
cwde
js
test
mov
xchg
dec
(bad)
ret
(bad)
dec
ja
cld
int3
(bad)
loopne
in
cwde
xrelease
test
lds
cmp
sub
arpl
pushf
inc
and
adc
ds
pusha
xchg
shr
shr
repz
cdq
punpcklbw
fcom
hlt
daa
sbb
push
mov
ins
(bad)
repnz
loopne
popf
pop
enter
xlat
call
jmp
xchg
and
pop
cmp
jns
cmp
jne
iret
pop
aam
add
mov
xor
(bad)
fistp
dec
arpl
dec
and
add
inc
fist
pop
jg
xor
add
out
loope
dec
aaa
push
gs
and
pop
shl
push
(bad)
rep
mov
inc
mov
xchg
jnp
pop
adc
(bad)
scas
add
xchg
or
loopne
lds
inc
js
ins
ins
sbb
popf
fbld
jmp
pop
dec
push
(bad)
inc
lock
in
push
jle
repz
std
inc
and
mov
mov
pop
fnsave
mov
pop
imul
loop
and
test
mov
cmp
xor
inc
jmp
sub
int
add
in
xchg
add
jmp
cli
add
jmp
popf
or
in
or
hlt
enter
clc
sub
rol
movs
xor
sar
aam
sar
int3
(bad)
aad
mov
mov
cmc
pop
mov
fst
mov
nop
or
hlt
int3
adc
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
shl
loop
xchg
movs
in
in
rol
call
in
imul
call
call
xchg
add
call
test
sbb
xchg
ins
in
popf
or
loopne
xchg
add
call
or
shl
xchg
add
test
inc
jecxz
xchg
test
in
xchg
or
push
mov
shr
jnp
cmp
(bad)
pop
jmp
mov
jmp
psraw
lods
fcom
cs
bound
add
sbb
fisubr
dec
shl
dec
cmp
push
add
hlt
xchg
jmp
mov
fdiv
repz
cdq
xchg
add
rcr
(bad)
test
adc
(bad)
and
sub
mov
arpl
cld
int
pop
mov
popf
enter
inc
mov
in
inc
sahf
cdq
mov
pop
xlat
push
cmps
sti
push
xchg
das
or
adc
sub
push
pop
lods
fstp
in
cmc
mov
push
ret
out
pop
pop
mov
loope
pop
dec
popa
fwait
mov
sar
data16
and
daa
sti
and
retf
adc
js
mov
test
sub
sbb
mov
mov
(bad)
in
test
sub
test
adc
jge
mov
mov
jp
push
fild
addr16
or
mov
out
fwait
inc
rcl
iret
sbb
div
sbb
or
jmp
jb
jg
dec
scas
fld
sahf
dec
aad
cli
and
mov
cmps
cmp
jmp
out
out
inc
add
sbb
cs
jnp
mov
mov
aas
jne
jae
out
inc
pop
rcl
sbb
dec
dec
mov
pop
and
pusha
xlat
sbb
pop
mov
adc
jmp
out
add
mov
add
pop
lds
or
sbb
cmp
xchg
test
(bad)
mov
adc
enter
sbb
jbe
addr16
sbb
mov
cmp
je
loopne
ins
setns
iret
scas
mov
xchg
jge
sbb
pop
pop
pop
call
xchg
xor
adc
add
lds
ins
in
ret
adc
dec
or
fdiv
xor
sub
push
pop
fstp
mov
xchg
inc
sub
addr16
sub
pop
mov
movs
dec
push
(bad)
ja
or
jmp
sbb
pop
inc
pop
jg
stc
nop
lock
mov
data16
shl
mov
popa
push
fimul
int3
test
frstor
sub
jmp
(bad)
sbb
(bad)
lods
neg
push
outs
mov
mov
sbb
std
in
add
mov
repnz
popf
jmp
in
loopne
mov
xlat
in
test
nop
pop
je
(bad)
jmp
outs
inc
test
or
movs
js
popf
lods
outs
data16
add
adc
push
mov
xchg
mov
ror
ror
inc
pop
outs
adc
xchg
aas
(bad)
and
idiv
jb
add
nop
outs
adc
out
xchg
das
(bad)
aam
ja
mov
lods
je
mov
inc
jno
sub
(bad)
test
pusha
sar
dec
or
sub
div
mov
out
arpl
mov
(bad)
sbb
push
in
xchg
and
xor
scas
ret
jne
es
mov
inc
ss
dec
add
jg
ins
ins
fmul
cmp
jb
lods
mov
mov
aaa
jl
xchg
mov
cmp
pop
int3
outs
(bad)
(bad)
cmc
xchg
fwait
cmp
gs
js
or
test
movs
inc
or
xchg
out
xor
jb
fstp
call
sub
add
loopne
les
rcl
stos
pop
imul
xor
or
in
pushf
push
(bad)
xchg
shl
test
dec
imul
and
dec
popa
xor
lock
repz
jnp
lock
or
xlat
or
push
adc
add
into
test
test
ins
sub
push
shl
jo
pop
(bad)
xor
pop
mov
jmp
popa
mov
xchg
mov
cld
lods
sub
xchg
mov
jns
and
shl
ds
sbb
lock
loopne
lahf
adc
test
in
ret
out
in
fnstsw
mov
and
adc
lock
adc
xchg
or
loopne
or
in
xchg
add
call
xchg
sbb
lods
fst
movs
rol
jge
push
enter
in
or
xchg
pushf
ds
xor
jnp
pusha
xor
lods
cs
daa
jp
mov
stos
xchg
or
psadbw
push
sub
cmp
pop
push
mov
inc
mov
daa
mov
dec
mov
fbld
add
imul
xor
pusha
(bad)
movs
mov
lods
ja
xchg
xor
stos
xchg
mov
and
or
lds
int3
add
(bad)
pop
repz
shl
and
and
pop
bound
into
test
adc
xor
pop
(bad)
pop
repnz
inc
sar
jb
jl
adc
push
inc
xchg
das
div
push
xor
and
iret
dec
dec
movs
mov
leave
call
push
fwait
jmp
div
dec
inc
sar
pop
cli
cdq
les
int3
push
inc
mov
jb
adc
mov
stc
mov
inc
push
test
std
ds
mov
mov
push
test
test
hlt
sub
lock
xchg
jnp
dec
dec
and
and
mov
or
adc
mov
cmp
push
repnz
iret
xchg
(bad)
jnp
inc
and
pop
mov
cmc
leave
fs
retf
std
mov
aas
das
arpl
in
adc
lea
or
pop
ins
jge
dec
movs
mov
jp
cmp
mov
mov
and
leave
es
fnsave
js
xchg
jp
aam
je
add
cmp
mov
push
adc
pop
cdq
setp
cwde
sti
pop
push
data16
arpl
or
push
pop
cmp
jl
xor
jno
mov
sbb
int
ret
sbb
sub
and
inc
xchg
inc
jns
in
inc
mov
jmp
sar
into
mov
xchg
cmp
sub
push
(bad)
cmp
out
rcl
and
es
aam
into
sbb
rcl
mov
das
mov
popf
fcom
ja
nop
mov
lods
arpl
shl
outs
xchg
dec
add
add
ins
ja
cmc
mov
test
(bad)
in
bound
push
fnsave
stos
leave
cli
mov
popf
popa
das
out
xor
push
sub
cmp
aas
aam
dec
mov
mov
xchg
jp
xor
pusha
fsub
pop
movs
fild
(bad)
jmp
inc
sahf
mov
outs
push
xor
pop
mov
mov
fs
inc
push
push
mov
xlat
push
push
cwde
mov
or
jns
cdq
mov
in
xchg
into
or
ret
sub
sbb
lahf
mov
pop
sahf
dec
push
jecxz
dec
inc
mov
cmp
or
and
pop
pop
ja
aaa
iret
nop
sub
(bad)
repz
cmp
stos
cmp
xchg
mov
fstp
repz
mov
xlat
cli
and
adc
add
jmp
push
cmp
aaa
das
cmp
and
jns
and
add
dec
mov
inc
sub
inc
cmc
mov
push
(bad)
or
cmp
jmp
fs
xchg
cmp
scas
mov
and
adc
inc
mov
push
push
xchg
lds
je
cdq
out
mov
ret
sub
or
sbb
stos
mov
movs
push
or
out
retf
rcr
jae
xchg
mov
mov
cmps
out
cli
lea
dec
adc
mov
jle
sbb
gs
cmp
xchg
fld
scas
cmps
cmp
in
dec
dec
mov
fwait
out
mov
mov
sub
pop
shl
and
mov
loope
or
adc
fcom
mov
inc
adc
inc
scas
cmps
sahf
push
mov
push
push
shl
inc
jno
lahf
mov
movs
lea
cmp
and
and
mov
gs
rol
cmc
jo
push
push
pop
outs
and
or
adc
inc
outs
inc
int3
lods
jno
push
push
jmp
lock
fadd
pop
ret
pop
xor
lods
and
icebp
push
sar
out
push
jnp
fld
pop
scas
pop
adc
cli
pop
and
imul
mov
fisttp
jl
push
pusha
sbb
jne
push
test
out
cmp
fnstenv
fsubr
xchg
repz
jae
dec
lahf
div
sti
cmp
adc
jbe
pop
pop
or
cmp
push
lods
mov
xchg
push
or
adc
cdq
ret
das
xor
xor
test
aaa
sbb
nop
pop
call
push
jp
lods
push
and
(bad)
mov
lods
inc
and
add
rcr
and
rcr
int3
data16
sbb
nop
pusha
sub
xchg
fdivr
nop
fdiv
out
mov
stos
gs
gs
and
adc
adc
imul
or
(bad)
loopne
retf
cmp
mov
mov
and
hlt
or
mov
dec
lds
fwait
mov
aas
popa
cmps
aad
shr
xor
out
mov
lahf
lock
std
cld
pop
xchg
and
xchg
or
in
cdq
or
cld
test
loopne
xchg
or
in
adc
test
add
fs
int
sub
inc
sbb
xchg
and
in
add
push
add
mov
jl
loop
cmp
ja
cmp
xor
popf
movs
mov
aaa
clc
xchg
pop
push
loop
rol
mov
push
(bad)
adc
mov
xor
xor
jg
pop
or
arpl
rcr
inc
mov
jge
leave
mov
mov
cmp
pop
test
pop
inc
mov
push
push
dec
mov
addr16
sbb
sti
sub
jo
pop
js
popf
movs
xor
icebp
xchg
fimul
pop
mov
adc
lods
pop
lock
lock
in
push
xor
mov
and
mov
xor
dec
cmp
sahf
dec
or
mov
ss
xor
dec
cmc
mov
or
inc
mov
stos
mov
push
mov
dec
mov
pusha
enter
fsubrp
and
mov
sar
pop
sbb
jb
inc
jmp
push
fs
mov
nop
inc
test
lods
jnp
push
mov
sub
mov
and
inc
jge
(bad)
jle
xor
inc
cmp
arpl
cdq
fwait
or
out
cli
push
fistp
stos
pushf
imul
mov
call
inc
lods
shl
pop
stos
pop
popf
xchg
in
inc
fstp
js
xchg
clc
test
xchg
cdq
push
stos
or
stos
mov
cmp
lods
ss
call
xchg
aas
ret
fwait
xor
sub
imul
sub
cmp
dec
dec
arpl
cmps
(bad)
cmp
dec
jl
pop
pop
adc
adc
mov
retf
mov
(bad)
bound
(bad)
lahf
sbb
adc
adc
fisttp
pusha
out
jbe
ret
mov
jp
sub
mov
scas
(bad)
pop
lods
mov
adc
(bad)
shl
sbb
test
and
cmc
and
adc
mov
or
stc
(bad)
(bad)
pushf
mov
int
icebp
in
jg
pop
sub
fistp
inc
push
stos
push
nop
repz
pop
dec
and
or
cdq
mov
cmp
mov
lods
push
lock
scas
or
sbb
dec
cmps
xor
sbb
inc
outs
cmps
inc
bound
adc
hlt
pop
pusha
test
mov
rcr
push
push
sub
lods
xchg
mov
sbb
inc
xchg
pop
das
lods
rcr
mov
xor
aam
jle
sub
dec
imul
or
cli
clc
adc
les
xchg
cmp
jo
les
out
je
ret
xor
jp
mov
into
mov
mov
outs
push
push
aas
fidivr
or
aaa
add
imul
and
test
lock
and
xor
fisubr
jge
pop
fiadd
fnstcw
push
mov
out
inc
mov
and
ror
cmps
aad
and
dec
jl
xor
or
std
or
and
aad
inc
mov
push
ret
mov
sti
invd
or
jmp
dec
sbb
cli
pop
js
adc
push
push
mov
sub
mov
movs
in
lods
sbb
dec
push
push
mov
fisttp
pop
xchg
xlat
mov
lods
(bad)
pushf
inc
ins
dec
outs
or
leave
xor
rol
add
jae
out
mov
loope
sub
enter
adc
adc
sbb
cmc
push
inc
and
imul
xchg
(bad)
mov
cmp
test
push
pop
paddsw
(bad)
(bad)
xchg
js
js
mov
(bad)
jmp
mov
inc
mov
cmp
cmp
dec
call
and
in
cmp
nop
pop
je
push
js
mov
addr16
dec
std
mov
leave
dec
fisub
ror
inc
cwde
and
dec
mov
(bad)
movs
ds
inc
sbb
dec
movs
cmp
add
es
fidiv
lahf
adc
out
loop
mov
cmps
and
sbb
stos
sub
sahf
jp
addr16
inc
fdiv
int3
xor
arpl
lds
cdq
add
xlat
dec
xor
ja
not
lods
lea
sub
inc
cli
bound
dec
imul
sbb
mov
call
sub
sbb
sub
mov
(bad)
shr
cli
xchg
retf
xor
jae
jl
xchg
cwde
mov
aaa
aad
or
neg
(bad)
pop
(bad)
dec
lods
clc
xlat
test
push
leave
pusha
push
aas
adc
nop
(bad)
xor
xor
std
sub
push
fidivr
xchg
mov
push
or
gs
bnd
adc
or
cmp
mov
call
add
inc
arpl
cmp
(bad)
ss
popa
(bad)
dec
vphaddbd
cmp
pop
jmp
adc
cmp
add
clc
xchg
or
in
cld
xchg
add
call
cdq
adc
aad
sub
les
and
nop
push
jo
pop
shl
mov
xchg
and
loopne
add
sub
cmp
cmp
sar
mov
fwait
adc
jle
jns
jp
retf
adc
movs
mov
test
sbb
mov
pop
lea
xchg
jb
mov
les
jb
cmp
xchg
xchg
sbb
and
push
shr
cmps
sub
dec
sbb
mov
cmp
mov
jbe
xor
shr
rol
lahf
dec
xor
mov
xor
push
shl
push
and
xchg
pop
call
xor
lahf
call
mov
sub
sar
lahf
rcl
push
jp
cmps
arpl
push
mov
fist
lods
js
fsubr
test
and
add
add
mov
push
inc
dec
(bad)
test
data16
fsubr
test
movs
out
movs
(bad)
dec
push
push
enter
cmp
imul
xlat
cs
aaa
or
test
into
inc
fwait
add
pop
hlt
(bad)
into
test
shl
popa
push
pop
or
in
jae
test
dec
pop
dec
stc
or
sub
mov
add
mov
xchg
mov
cwde
call
adc
sbb
jno
push
mov
mov
repnz
or
inc
aad
sahf
or
jo
cdq
push
leave
not
adc
dec
sub
lock
push
mov
mov
jmp
int3
push
cmp
js
fisttp
pop
test
out
outs
push
mov
sbb
inc
test
push
mov
add
dec
(bad)
jae
xchg
push
je
(bad)
(bad)
sub
int3
fldenv
add
cmp
mov
adc
adc
sti
jno
xor
sahf
test
dec
daa
dec
call
call
movs
add
fstp
popa
ins
in
fbstp
arpl
sbb
in
movs
scas
or
scas
mov
jecxz
dec
das
popf
movs
xchg
mov
out
push
lds
lea
sub
sbb
fistp
(bad)
sahf
push
(bad)
sub
lods
and
ins
out
call
nop
cmp
sar
rol
fbstp
in
es
xchg
mov
pop
lahf
xor
push
xchg
mov
call
xchg
ins
xchg
retf
add
inc
mov
into
mov
movs
cli
dec
or
jmp
repnz
popf
add
bound
pop
ret
dec
mov
repnz
push
pusha
mov
sub
pop
xor
add
dec
mov
mov
cmp
dec
xchg
dec
(bad)
pop
ret
test
adc
and
shr
xchg
loopne
ja
mov
and
shl
mov
lds
fs
popf
out
stos
cwde
mov
xchg
mov
gs
fsub
jo
jge
push
cmp
lock
int3
push
dec
nop
add
repz
mov
mov
stos
add
bound
cmp
addr16
aad
adc
xchg
inc
lods
test
popf
retf
mov
xchg
xor
dec
jbe
mov
imul
cvtdq2ps
pop
inc
add
dec
sahf
inc
mov
pop
lods
sub
je
mov
dec
dec
mov
mov
add
cmps
pop
lahf
bound
dec
push
jp
add
dec
pop
jmp
icebp
add
outs
daa
sbb
jne
or
inc
sub
cmp
mov
aad
mov
mov
sbb
sub
in
in
and
push
stc
inc
jae
nop
clc
sbb
lahf
ficomp
inc
fild
inc
jb
dec
mov
pop
clc
ret
cmovle
push
popf
push
jle
push
data16
inc
pop
or
jbe
ja
jmp
sahf
push
cmp
sub
jno
sub
stc
test
ins
fs
test
jne
mov
sbb
mov
aas
sahf
lods
data16
addr16
inc
adc
sbb
or
push
pusha
ret
out
hlt
sahf
adc
cmp
xchg
jle
in
fwait
mov
fild
push
mov
pop
(bad)
mov
push
xchg
mov
lods
dec
mov
push
push
sbb
pop
mov
enter
mov
lds
jbe
ins
mov
not
sbb
imul
and
adc
cs
ja
adc
pop
pop
mov
push
and
rcl
call
sub
xchg
push
adc
idiv
dec
mov
mov
xchg
sti
jecxz
sub
test
add
jl
data16
fsubr
adc
mov
mov
retf
xor
xchg
mov
and
aas
fdivr
(bad)
fucom
jo
and
ins
jnp
xor
push
aaa
sub
das
cmp
mov
shr
mov
cdq
cmp
fcomp
mov
addr16
mov
xchg
dec
push
cmp
and
mov
xor
inc
cli
push
fmulp
cmp
addr16
les
cmp
stos
test
retf
cmp
test
and
or
dec
sub
xchg
outs
aad
icebp
jp
push
xchg
fbstp
jbe
bound
xor
aam
push
pop
js
movs
jecxz
fidivr
shl
pop
in
and
fadd
popf
jge
jmp
add
dec
cmp
pop
mov
pop
dec
xchg
and
rcl
adc
fdiv
fadd
and
jae
scas
sbb
lods
pop
xchg
(bad)
pop
and
(bad)
cmp
mov
imul
sub
add
sub
test
mov
ret
sbb
mov
nop
jge
pop
sbb
cmps
inc
jecxz
loop
test
xchg
cmps
(bad)
iret
mov
sbb
dec
jle
shl
sub
cmp
es
sub
jo
push
lahf
lock
jnp
jge
pop
jp
sti
ror
clc
mov
call
or
push
hlt
mov
and
leave
ins
cmps
pop
shl
adc
jg
xor
lds
dec
repz
pop
hlt
mov
inc
add
idiv
xchg
aaa
jmp
push
xor
jno
cwde
mov
push
sub
pop
mov
(bad)
cmp
fld
cli
bound
push
outs
(bad)
jbe
js
ss
psrlw
fcmovu
test
jo
xchg
fbld
pushf
mov
jne
pop
sahf
(bad)
xchg
je
ftst
jge
cmps
sub
leave
mov
fld
cli
fsubr
test
outs
jp
jo
push
out
xor
rol
dec
mov
adc
fimul
enter
aam
sbb
sti
sbb
bound
or
fwait
or
mov
sahf
add
cdq
inc
loopne
xchg
or
cld
lock
in
cdq
add
lods
fst
imul
sbb
and
rcl
mov
push
xchg
and
sbb
xor
aad
cmp
xchg
xchg
and
in
xchg
sbb
loopne
mov
sar
mov
jp
jne
fcomp
ins
outs
jae
fistp
mov
in
cwde
xchg
cs
or
and
fcmovnb
mov
movs
cmps
add
mov
jg
loope
cmps
call
push
stos
das
icebp
dec
movs
add
mov
or
add
test
out
sbb
xor
fidivr
sub
icebp
xlat
cmc
sub
add
rcr
ror
inc
dec
shl
sar
sbb
jmp
ret
(bad)
push
mov
xor
out
pop
cmp
(bad)
into
pop
daa
loope
retf
daa
popa
shl
(bad)
fsubr
pop
ins
pusha
push
cmp
je
and
and
mov
pusha
mov
mov
jl
cs
pop
sbb
in
mov
push
sbb
push
stos
je
stos
mov
add
call
and
clc
pop
jbe
dec
pop
or
inc
xchg
jp
inc
mov
jae
jmp
aaa
xor
in
popa
lods
sti
pop
cli
pop
repnz
dec
movs
or
sbb
push
pop
inc
mov
retf
scas
xchg
data16
das
inc
mov
adc
xor
and
movs
dec
loopne
sub
ret
fs
dec
xchg
xor
push
fild
xchg
(bad)
dec
push
dec
and
nop
call
jae
bound
(bad)
pop
inc
jge
stc
sbb
pop
dec
dec
push
xor
and
jae
sub
scas
imul
jle
sbb
dec
push
lahf
out
sub
data16
cmp
retf
out
jp
inc
push
pop
retf
cwde
(bad)
arpl
jns
xor
and
popf
outs
mov
push
addr16
add
pop
push
inc
into
pushf
fdivr
jle
dec
je
push
pop
das
dec
fwait
shr
(bad)
sbb
in
add
in
out
adc
mov
and
into
push
xchg
movs
test
(bad)
pop
inc
iret
sub
popf
xor
mov
cmp
lahf
gs
inc
or
aam
push
and
and
sti
pmaxsw
daa
dec
rcl
ins
int3
ffreep
cmp
adc
fadd
shr
or
ja
seta
lods
push
test
pop
inc
xor
iret
aas
lds
cdq
inc
jge
push
fcomip
sar
dec
test
adc
ror
fidivr
inc
push
(bad)
xor
iret
jae
jne
ret
cmc
lds
adc
xor
mov
jnp
std
push
xchg
lea
icebp
or
sub
das
sbb
cmps
(bad)
dec
mov
(bad)
xlat
sti
pop
aam
mov
dec
pop
or
inc
nop
xor
jo
xchg
aas
fidivr
js
fnsave
xor
stc
push
fxch
mov
ss
inc
lods
cld
adc
pop
mov
ret
arpl
jno
sbb
or
dec
in
in
xchg
add
ds
jno
and
sbb
movs
iret
fmul
sub
xor
cmp
push
mov
test
dec
bound
inc
dec
inc
js
inc
and
cmps
stos
jge
sub
(bad)
or
inc
mov
and
lods
mov
mov
imul
or
mov
les
jg
outs
sub
xchg
stos
mov
or
scas
push
mov
shl
and
push
fbld
addr16
popa
in
pop
inc
mov
pop
retf
pushf
push
cmp
lahf
jb
stos
xor
clc
mov
ficom
mov
outs
lea
loopne
jp
pop
fstp
dec
inc
xor
pop
or
jp
jmp
xchg
fiadd
adc
das
inc
push
js
outs
or
xor
cmps
jae
mov
hlt
cmovo
sub
out
inc
pop
outs
mov
jnp
add
xor
push
push
mov
ds
ds
pop
cmp
rep
sbb
sahf
sbb
bound
jb
sar
sub
mov
cmps
frstor
mov
and
sub
outs
fimul
fidivr
lahf
mov
mov
scas
loopne
mov
sti
or
enter
imul
mov
sub
cmp
clc
add
cmp
fdecstp
leave
push
adc
jecxz
sub
mov
in
xchg
test
into
push
rcr
ror
fsubr
xchg
mov
push
test
xchg
mov
push
mov
mov
sbb
bnd
ficom
jge
push
into
inc
(bad)
pop
push
ins
std
loop
rol
test
stc
sbb
adc
scas
ja
out
lock
mov
cmps
mov
inc
xchg
cld
sbb
xchg
pop
adc
outs
or
lods
jp
mov
or
ja
fs
cmp
sti
aaa
and
xchg
inc
sar
ins
hlt
fdivr
add
ret
fcom
xor
xor
outs
and
dec
in
mov
stos
and
clc
fdivr
aas
scas
lea
lods
mov
mov
and
push
lahf
inc
add
movs
jnp
ret
addr16
out
aas
jno
pop
lahf
fidiv
mov
or
dec
mov
xor
rdtsc
jns
inc
sbb
jecxz
cmp
cld
xor
sbb
mov
fadd
lods
retf
xor
add
sub
mov
sar
pop
pushf
jg
je
fadd
jecxz
(bad)
scas
(bad)
cmc
jno
sbb
xor
outs
jmp
mov
jp
movs
sub
ret
cmp
add
jp
mov
mov
js
repz
(bad)
cmp
ja
lods
dec
mov
stos
jmp
clc
mov
fnsave
scas
pop
adc
add
leave
cmp
(bad)
mov
add
and
retf
jae
icebp
sbb
mov
daa
js
loopne
or
or
lods
stc
clc
div
loop
pop
cmp
xor
push
out
cmp
mov
das
test
sbb
(bad)
xor
adc
js
test
jne
add
hlt
mov
adc
lea
test
stos
and
mov
push
sar
mov
jmp
out
sub
cli
mov
popf
adc
push
(bad)
mov
pop
jb
(bad)
lods
sbb
bound
ins
or
hlt
movs
(bad)
adc
jbe
ret
div
(bad)
leave
pop
lods
xchg
xchg
retf
jbe
cli
and
movs
outs
add
shl
sub
cmp
push
inc
jne
ja
adc
push
add
inc
mov
cwde
ss
push
hlt
and
mov
pop
dec
xchg
rcl
jo
mov
popf
jmp
ret
xchg
mov
pop
out
stos
xor
jae
sub
fnstcw
mov
mov
test
xchg
popf
cmp
pop
or
cmp
(bad)
and
mov
es
dec
or
sbb
je
mov
in
push
stos
mov
rcl
cdq
push
bound
daa
dec
push
and
sub
sti
sbb
dec
xor
cmp
push
fs
call
sbb
jl
cmp
mov
ss
sub
nop
sub
repnz
mov
cli
in
std
jne
rcr
adc
xchg
lea
sub
(bad)
fstp
ds
ds
pop
inc
icebp
jbe
aad
jl
(bad)
inc
add
add
fisttp
rol
lock
les
sbb
mov
mov
icebp
cdq
mov
aad
ins
stc
xor
leave
int3
xor
push
int
bound
js
jns
mov
mov
adc
jno
pop
std
cmc
pop
(bad)
pop
(bad)
and
jne
push
dec
xchg
cmps
sub
xor
fstp
fisub
push
fbld
imul
jecxz
add
sbb
int3
sbb
dec
push
jno
and
sar
ins
test
addr16
add
xor
(bad)
outs
aaa
outs
mov
xchg
sub
imul
sti
xor
(bad)
(bad)
mov
imul
and
jno
fwait
pop
mov
sbb
jo
daa
pmaxub
push
dec
lock
xchg
mov
pop
mov
(bad)
pop
in
mov
adc
ja
scas
sbb
(bad)
ja
pop
(bad)
rol
push
push
ss
test
cli
ja
pop
mov
mov
add
sahf
(bad)
mov
jnp
push
dec
xchg
add
test
icebp
nop
call
test
out
ret
int3
and
inc
cmc
pop
inc
pop
and
cli
xor
cs
push
ret
test
(bad)
xchg
loopne
test
fisubr
lods
aad
pop
xchg
xchg
dec
and
sbb
rcl
ins
xchg
imul
imul
jle
push
add
cld
jmp
xchg
out
iret
jmp
aas
call
jmp
sub
sub
mov
cmps
loop
add
fwait
jb
and
into
rcr
lods
cmp
xor
std
mov
cmp
arpl
cmps
je
and
inc
mov
lahf
pop
add
jmp
push
imul
movs
jnp
loop
xlat
jmp
daa
(bad)
lahf
scas
jne
mov
and
pop
call
(bad)
xor
mov
cdq
mov
inc
inc
mov
mov
cld
cli
jecxz
push
inc
sub
sti
dec
jge
scas
and
adc
popf
(bad)
pop
cwde
push
cmp
dec
or
in
sar
or
popf
retf
fnstcw
icebp
push
fnsave
or
pop
jl
hlt
fsub
rol
mov
dec
das
xchg
(bad)
jns
mov
(bad)
or
call
dec
jae
or
inc
mov
pop
inc
adc
push
push
adc
push
clc
cdq
mov
aam
imul
in
mov
mov
sbb
neg
and
push
ret
mov
mov
int
mov
dec
or
add
add
or
adc
xchg
in
idiv
cmp
pop
sbb
js
and
sbb
xchg
jmp
fdiv
xlat
lock
or
cmp
inc
jecxz
sub
(bad)
jne
daa
and
sar
xchg
xchg
mov
fnstsw
movs
push
jno
cwde
je
mov
xchg
mov
scas
outs
or
mov
sub
mov
cdq
(bad)
(bad)
movs
mov
jno
rcl
js
gs
inc
inc
cli
lds
fldenv
sbb
mov
test
jno
cmp
and
retf
pmullw
xchg
pop
inc
out
xchg
fdiv
sub
jmp
jo
and
aam
push
xchg
retf
ja
pop
cmp
xor
mov
repnz
add
or
test
mov
mov
dec
sahf
(bad)
clc
repnz
or
je
test
loope
or
xor
fs
push
into
jg
push
inc
loopne
sbb
cld
test
out
cmps
push
sub
lock
mov
dec
push
sub
bound
loopne
sbb
jecxz
pop
ds
mov
jno
rcl
(bad)
int
sbb
xlat
push
fnsave
push
pop
pop
mov
into
out
call
fs
(bad)
(bad)
push
loop
or
dec
jbe
push
add
outs
sub
xchg
stos
int3
sub
add
adc
pop
jmp
into
add
cmp
repz
jecxz
jo
jb
jnp
ins
adc
jo
pslld
xor
ja
mov
cdq
jbe
ret
jle
jle
and
movs
jge
push
out
aad
add
jmp
inc
ret
shr
pop
not
retf
mov
jns
adc
mov
(bad)
out
test
push
mov
in
dec
push
and
add
stos
inc
push
in
xchg
outs
out
sbb
inc
retf
adc
fwait
lahf
jmp
stc
cmp
and
and
push
mov
movs
fs
xchg
(bad)
into
into
fdivr
inc
inc
cmps
mov
inc
or
repnz
sbb
push
(bad)
inc
in
fwait
arpl
in
sti
(bad)
sbb
enter
fs
test
push
jno
inc
add
ss
jae
imul
and
pop
pop
inc
scas
inc
jecxz
cwde
cmp
clc
and
jo
jg
ins
sbb
xchg
imul
(bad)
mov
frstor
cmp
popf
ret
retf
jne
dec
ret
push
je
cli
cmp
(bad)
jb
pushf
mov
or
scas
xchg
or
js
dec
sbb
nop
xor
not
and
pop
dec
xchg
sub
sar
call
mov
inc
adc
and
pop
mov
imul
mov
pushf
jge
push
jl
aaa
jns
imul
test
jl
loop
push
push
lahf
push
xchg
jo
cmp
cmp
les
cmp
call
pop
js
dec
push
inc
daa
xor
pextrw
mov
jecxz
test
mov
jae
inc
fisubr
push
pop
lods
xor
add
pop
(bad)
push
lods
pop
lock
cmp
mov
and
inc
adc
cmp
icebp
dec
jmp
movs
ret
hlt
cli
stos
loop
inc
aad
int3
inc
sub
adc
loop
outs
xchg
cmp
sub
jbe
out
xchg
popf
add
test
data16
bound
aad
(bad)
sbb
pop
sub
xor
js
add
(bad)
enter
cmp
ds
jp
sub
and
cmp
jo
push
cmps
pushf
xchg
pop
sbb
enter
mov
pop
mov
mov
inc
mov
mov
inc
ss
stos
inc
jns
or
jg
add
fwait
mov
arpl
push
cmp
mov
(bad)
push
cmp
data16
lds
push
xor
lahf
icebp
dec
icebp
push
(bad)
scas
sbb
mov
sbb
lock
mov
pop
cmp
mov
jnp
or
push
dec
xchg
stc
mov
test
add
clc
xchg
or
loopne
xchg
add
call
push
add
mov
out
push
inc
addr16
push
std
mov
mov
in
xchg
std
data16
or
push
sar
jae
or
mov
mov
xchg
xchg
or
inc
mov
adc
adc
sbb
adc
mov
inc
hlt
xchg
rcl
cmp
aad
sar
dec
sbb
addr16
mov
test
pushf
xlat
popa
cld
pop
and
sub
mov
mov
lods
call
(bad)
jmp
cmp
mov
int
cwde
mov
shl
and
cdq
push
call
(bad)
(bad)
int
inc
clc
add
jmp
es
sbb
repnz
adc
stc
or
add
jae
xchg
movs
dec
ret
scas
cli
xlat
xchg
mov
in
cmp
and
inc
xchg
mov
xlat
mov
mov
vpaddusw
push
or
icebp
xchg
or
cdq
cmp
xor
push
(bad)
sub
sbb
cdq
mov
aad
daa
push
stos
pop
sbb
pop
fsub
frstor
cli
hlt
sub
out
pop
and
or
sahf
test
lods
dec
lea
into
cmp
lods
or
xchg
clc
sub
inc
into
xor
or
pop
stos
xchg
mov
cmp
and
cmp
inc
sbb
xchg
push
fnstsw
xor
enter
int3
pop
out
data16
push
push
aam
(bad)
push
jno
into
jno
or
mov
pop
retf
add
int3
(bad)
cmp
xchg
xchg
cs
fxch
sub
pop
mov
sub
cmps
pop
fldenv
inc
into
sub
push
dec
ficomp
arpl
adc
ss
jb
bound
cmps
add
iret
sub
das
loope
(bad)
mov
rcr
lahf
test
push
fsub
xchg
fbld
xchg
push
imul
mov
push
and
das
sbb
jp
test
iret
sbb
loopne
gs
xor
mov
inc
in
and
jp
inc
add
xchg
push
cmp
cmp
pop
cmc
js
sub
cmp
cmp
sti
jns
inc
fdiv
mov
inc
push
dec
pushf
outs
stos
inc
in
repnz
cdq
cmp
push
mov
pop
lea
adc
retf
mov
call
int3
scas
mov
ins
loope
jmp
shr
add
test
out
adc
mov
mov
inc
and
sub
sub
xlat
dec
imul
xor
jno
mov
mov
xor
jecxz
leave
xor
push
add
mov
(bad)
aam
test
out
and
cld
sbb
pop
imul
aaa
imul
nop
ficom
cli
lods
retf
xacquire
or
inc
(bad)
fidiv
cmp
(bad)
jmp
es
push
shl
or
adc
inc
ret
int3
jmp
jno
jp
daa
test
push
int3
pop
inc
das
inc
div
sub
and
add
mov
repnz
int
fstp
std
cmp
inc
inc
retf
mov
mov
cmps
in
jmp
call
mov
out
in
stos
repnz
pop
dec
add
dec
stc
push
xchg
int3
xor
xor
fnclex
mov
ins
in
and
aad
aaa
add
call
sbb
add
add
gs
pusha
cld
inc
sar
lods
fst
cmp
arpl
dec
arpl
mov
pop
test
cmp
ret
outs
fisubr
jmp
xor
jb
push
sar
xchg
jmp
lods
jecxz
add
test
push
add
stc
cmp
stos
addr16
adc
dec
pushf
push
cmp
xor
leave
div
xchg
adc
dec
add
add
(bad)
jmp
dec
cmp
scas
nop
ss
(bad)
sbb
cmp
add
pop
enter
movs
(bad)
popa
lahf
push
pop
jg
inc
ret
movs
in
movs
jle
cli
mov
jecxz
mov
fbld
sub
xor
and
push
lea
(bad)
xlat
test
xor
push
leave
sbb
clc
xchg
fisttp
push
sub
sbb
mov
dec
add
fcom
and
shl
arpl
ret
test
xchg
retf
jno
xchg
pop
shr
pop
jmp
sbb
cmp
sar
pop
cmp
outs
add
mov
sti
cmps
(bad)
jmp
call
sbb
push
pushf
stos
or
cmp
(bad)
jmp
ret
mov
jg
push
aas
ins
(bad)
jmp
out
mov
pusha
jo
jnp
xor
and
dec
pop
mov
cmp
sbb
movs
loopne
pop
fadd
mov
add
add
or
retf
daa
ret
popa
hlt
xor
mov
repz
(bad)
mov
pop
xchg
xor
inc
test
cmp
xchg
ds
fsub
aaa
cld
in
mov
fsubr
pusha
mov
popf
pop
or
aaa
and
movs
sub
push
cmp
fist
xor
jo
add
xchg
or
jnp
and
mov
cmp
sbb
inc
sub
mov
push
or
and
push
pop
iret
mov
pop
fcmovu
lahf
lods
push
xor
in
or
mov
dec
sub
fistp
mov
jbe
into
test
and
out
mov
cmc
dec
cmp
fdiv
call
inc
loop
adc
xchg
(bad)
and
and
retf
add
inc
cdq
jae
inc
call
mov
mov
mov
inc
mov
std
bound
push
stos
pop
in
repnz
jg
mov
and
test
push
xor
jg
xchg
adc
fld
mov
pop
xchg
leave
pop
dec
jae
inc
int
sar
push
and
sbb
iret
or
inc
sub
push
es
inc
or
jecxz
cmc
cli
ss
shl
sti
inc
mov
push
ret
sub
fs
push
sbb
(bad)
repz
mov
push
out
stos
enter
push
cmps
add
mov
pop
fxch
xor
jmp
jbe
inc
out
int
mov
inc
sub
shl
fs
sub
arpl
push
ja
pop
adc
call
adc
std
push
push
sbb
aaa
scas
pop
mov
dec
stc
popf
out
ret
mov
xchg
popa
mov
pop
test
pop
test
gs
in
aam
ror
pop
sub
jno
pusha
cmp
or
sbb
loopne
or
adc
pop
addr16
das
xchg
iret
arpl
stos
jae
sbb
cmp
cmp
dec
xchg
ret
push
xor
cmp
hlt
ins
push
aam
rol
mov
(bad)
xchg
(bad)
adc
push
cmps
dec
pop
jne
aaa
mov
jno
inc
mov
je
icebp
pop
cmp
mov
es
xor
jle
cld
mov
xor
pop
fstp
sub
mov
xor
pop
adc
jl
push
loope
and
out
jne
rol
adc
mov
cmc
and
or
rol
sub
push
sub
mov
mov
js
jns
leave
mov
mov
scas
inc
adc
push
adc
test
mov
int3
retf
imul
nop
imul
int
mov
fisttp
cwde
mov
loop
fs
in
add
pop
pop
fucomp
mov
movzx
lds
jb
push
test
hlt
shr
ret
push
dec
dec
sbb
xor
mov
into
aaa
rcl
xor
jp
inc
push
sti
cmc
add
push
xchg
stc
push
cld
loopne
bound
or
jnp
es
rcl
mov
adc
pop
mov
adc
bound
push
call
imul
jmp
stos
cmp
cmp
repz
push
push
xchg
ss
add
adc
add
cld
mov
ja
and
push
or
stc
outs
cwde
inc
or
lods
xchg
push
add
aas
enter
sahf
pop
ins
mov
mov
mov
ror
aad
mov
cmp
push
stos
cmc
(bad)
mov
xchg
xor
lahf
nop
inc
xor
test
xchg
not
mov
mov
sbb
and
xlat
jecxz
and
rcl
jb
in
xor
jbe
out
cdq
jns
leave
mov
je
dec
sbb
mov
fucomip
push
fisub
cli
sti
dec
test
imul
sub
mov
dec
sbb
test
cld
cmps
arpl
push
mov
(bad)
js
pop
js
cdq
push
adc
in
test
xor
ror
fidiv
mov
lock
fdivr
dec
push
xchg
out
loop
mov
mov
sti
jbe
mov
test
es
shl
gs
dec
adc
repz
dec
scas
cdq
ds
dec
or
arpl
and
movs
hlt
movs
enter
int
jne
fisttp
cld
mov
movs
or
in
call
mov
(bad)
rol
dec
(bad)
ret
cmp
popf
lods
mov
mov
jnp
or
and
xchg
pusha
sbb
scas
lds
pop
sub
ja
sti
retf
pop
pop
inc
mov
(bad)
push
and
xor
idiv
rol
adc
pusha
inc
int3
mov
sti
jg
cli
and
mov
fisubr
(bad)
rcl
inc
and
jmp
lea
fucom
push
enter
mov
out
xor
(bad)
mov
mov
int
ret
cmp
pop
pop
lods
int
mov
and
jp
js
daa
jne
push
adc
add
(bad)
jns
lds
mov
xchg
popf
movs
in
xchg
or
in
cdq
adc
loopne
add
call
xchg
inc
fs
inc
movs
ins
adc
es
rol
and
inc
shr
add
sahf
bound
xchg
ja
add
mov
xchg
add
adc
icebp
aas
test
call
mov
xchg
or
cmps
fld
leave
idiv
popf
sbb
(bad)
xor
jno
sub
cmps
sub
push
test
jp
mov
daa
push
out
out
in
sar
out
into
push
push
xchg
and
out
pushf
add
int
pop
sbb
xlat
pop
and
stos
inc
cs
lahf
and
ficom
xor
jmp
popa
mov
imul
repz
mov
sbb
cmp
pop
pop
outs
push
sub
add
xchg
(bad)
or
pop
jnp
mov
inc
lods
movs
mov
jb
inc
dec
out
into
sbb
or
clc
cmps
ins
sbb
cmp
out
and
pop
shr
cwde
out
sub
ss
mov
pop
or
nop
std
and
and
dec
ins
sbb
lahf
lods
imul
jae
mov
xchg
lds
leave
xor
les
shl
rol
imul
inc
jo
shl
enter
ret
loopne
xor
push
and
(bad)
or
mov
mov
test
fiadd
shl
jl
js
sub
std
or
mov
pop
mov
push
lahf
sti
sbb
push
xchg
cmps
pop
mov
ret
xor
jne
das
dec
pusha
loop
inc
fisubr
push
(bad)
loope
jle
push
mov
mov
shr
sbb
cmps
jecxz
pusha
out
arpl
data16
addr16
cli
jmp
scas
in
add
cmp
daa
daa
mov
lods
iret
sub
gs
cwde
mov
jl
iret
repnz
jae
jns
cdq
inc
les
jae
mov
repz
fist
jmp
test
sub
mov
add
test
and
sub
dec
cdq
movups
sub
sub
jmp
mov
popa
js
imul
sahf
jno
and
jg
scas
pushf
sub
fmul
adc
test
ins
xor
pop
xchg
sub
sbb
iret
push
cli
inc
outs
imul
jmp
jmp
jb
mul
inc
out
jmp
pushf
scas
test
or
sbb
cmp
(bad)
adc
push
pop
aas
in
mov
fdiv
out
adc
out
xor
and
int
inc
das
outs
xchg
loope
in
mov
xchg
in
enter
xchg
jnp
movs
clc
(bad)
fisttp
in
int
add
cmp
sub
data16
or
and
adc
cwde
shl
ja
mov
test
repz
mov
hlt
inc
loopne
and
inc
arpl
or
out
sub
jns
popa
lock
in
in
mov
(bad)
mov
(bad)
xchg
mov
push
dec
fnstcw
pop
cmp
xchg
adc
call
and
(bad)
loop
je
test
cmp
mov
sbb
inc
lock
rcr
dec
xchg
cmp
(bad)
mov
mov
(bad)
inc
lods
ins
mov
pop
xor
popa
xchg
or
push
push
cld
and
xchg
cld
or
ins
arpl
push
add
and
int
mov
adc
mov
cwde
outs
mov
dec
in
cwde
add
call
fsubr
cmp
aad
test
pop
inc
je
sbb
xchg
inc
lods
xchg
add
loopne
or
loopne
xchg
add
call
push
add
and
inc
fs
ret
adc
mov
mov
call
or
xchg
int
das
jno
mov
test
mov
clc
stos
lea
dec
adc
jno
and
data16
rcl
dec
sbb
imul
pushf
sbb
jmp
rcl
fxch
loopne
push
call
pop
cmc
xor
jbe
push
cmc
(bad)
fsubr
dec
inc
push
and
in
shl
mov
mov
loope
pop
xchg
sbb
and
dec
jge
lea
add
or
(bad)
sub
lahf
mov
shr
shl
stos
jmp
pop
(bad)
pop
pop
into
icebp
fild
imul
and
mov
jno
add
outs
(bad)
out
cmps
add
gs
sub
jmp
jne
mov
mov
pmaxub
call
dec
mov
sub
in
dec
arpl
pop
leave
cmp
std
pop
je
and
outs
sub
(bad)
jnp
add
push
mov
pop
push
and
stc
mov
in
inc
test
bnd
xlat
adc
sbb
cmc
sub
dec
lds
test
stos
retf
pop
pop
fbld
ins
fldenv
dec
or
lods
dec
stos
int
jmp
iret
inc
pop
cld
pop
pop
ins
movs
stos
ret
imul
push
mov
push
fsub
or
dec
in
fisttp
clc
push
push
or
adc
mov
jb
dec
iret
mov
test
aam
push
jne
ja
or
into
int
dec
fidiv
sbb
add
or
dec
push
repnz
scas
nop
and
arpl
iret
aad
out
push
add
push
cmc
sbb
adc
and
rcl
mov
xor
sbb
adc
dec
jecxz
sub
(bad)
(bad)
pop
sub
cdq
shr
and
test
ficomp
lea
sub
ret
jns
outs
ret
inc
mov
cmp
outs
inc
dec
shr
jns
call
mov
test
push
push
xor
dec
pop
sbb
fmulp
mov
movs
adc
cmp
rol
push
lds
fucomip
xchg
xor
mov
aad
mov
stos
jb
sbb
xor
push
add
sub
mov
popf
rcl
and
sbb
addr16
ja
add
mov
push
out
pop
pop
loop
mov
mov
lods
push
sbb
adc
push
jle
sbb
ins
pop
push
pop
imul
xchg
cdq
test
push
mov
cmp
xor
pop
test
repz
mov
inc
shl
dec
dec
xchg
(bad)
push
adc
retf
sti
push
add
push
retf
sbb
rcl
push
jb
add
aad
dec
mov
retf
adc
outs
clc
popa
lds
sti
xor
cdq
push
mov
xchg
push
jmp
jge
ins
or
sbb
xor
push
shr
inc
dec
mov
xchg
lock
test
add
retf
pop
and
sbb
imul
rol
mov
mov
add
popa
inc
mov
cdq
enter
push
loop
mov
xor
fst
inc
jp
or
adc
(bad)
imul
das
lds
stos
inc
in
mov
mov
mov
mov
jmp
fsubr
add
adc
sub
mov
xchg
xchg
retf
out
and
or
inc
sub
jg
fdiv
push
stos
mov
dec
data16
fstp
std
or
das
call
xor
jo
sbb
add
iret
and
inc
xchg
arpl
es
ss
mov
mov
shl
sti
inc
adc
les
outs
call
mov
adc
dec
test
int
adc
inc
retf
in
(bad)
jge
outs
xchg
fild
xchg
sbb
ja
sbb
mov
xlat
fcom
dec
pushf
pop
(bad)
dec
movs
iret
fidivr
adc
pushf
and
mov
shl
scas
mov
lods
mov
aad
pop
lods
call
ins
jg
or
inc
les
bound
sbb
pop
cmp
jne
(bad)
cmp
sub
jp
aad
mov
mov
fwait
jl
icebp
lds
and
ror
enter
jmp
jns
cmp
(bad)
fs
pop
mov
inc
js
sub
sbb
push
popa
loop
jg
mov
sub
popa
xchg
test
lock
inc
in
xchg
or
in
popf
or
in
xchg
test
in
xlat
and
inc
shr
add
adc
mov
je
les
jecxz
jns
sbb
test
das
popa
xchg
mov
mov
xchg
repnz
popa
loopne
in
les
mov
jge
stos
inc
push
or
mov
xchg
repnz
int3
mov
pop
sub
sbb
loopne
pop
rcl
jecxz
pop
pop
cmps
cmp
lods
mov
mov
lds
aas
imul
cmp
loop
mov
pop
ficomp
repnz
loope
arpl
mov
pushf
or
shl
lea
jg
mov
fiadd
out
in
in
ret
clc
sub
jb
popf
movs
loopne
rcr
inc
(bad)
les
mov
jo
out
ins
mov
or
sbb
js
sbb
dec
out
inc
arpl
stos
dec
dec
xchg
aam
or
push
imul
icebp
sbb
call
ins
pop
mov
scas
inc
pop
add
mov
mov
icebp
out
in
xchg
xor
sbb
in
jno
shr
cmp
gs
loopne
movs
or
xor
sbb
cmc
mov
in
(bad)
call
ret
cmp
mov
cmp
shl
jmp
mov
je
icebp
pop
add
mov
iret
mov
jns
pop
mov
popf
fnstsw
in
xchg
add
scas
pop
xor
sbb
adc
and
jecxz
sub
out
fnstenv
push
(bad)
cs
cmc
mov
mov
das
jno
movs
imul
jmp
out
test
dec
mov
ins
imul
sub
add
add
jb
pop
jno
inc
or
or
inc
stc
fld
dec
and
call
fld
push
cdq
je
ret
sub
inc
jg
pop
adc
les
xor
jae
xchg
inc
pop
and
lahf
movs
xor
jl
mov
retf
stos
mov
test
or
or
xchg
std
pop
bound
lock
mov
aaa
or
xor
ins
push
xchg
mov
adc
push
mov
test
sti
and
or
push
rcr
xchg
mov
hlt
call
mov
movs
rol
inc
jp
data16
fadd
repnz
push
xor
ss
jns
push
push
bound
xchg
test
jbe
mov
sbb
mov
jge
xchg
pop
mov
xchg
sbb
dec
cmp
retf
push
inc
cdq
dec
test
(bad)
fadd
les
test
sub
inc
mov
pop
iret
idiv
pop
lahf
push
cdq
xor
(bad)
sti
pop
(bad)
addr16
add
jne
push
clc
inc
mov
lods
mov
dec
retf
mov
(bad)
loopne
ins
adc
push
into
inc
adc
sub
push
scas
cmps
adc
or
adc
shr
loope
cmps
pop
adc
jmp
retf
repnz
jbe
and
sbb
pop
aad
les
mov
ret
out
add
jp
push
cmp
or
loope
rol
aam
(bad)
xchg
and
(bad)
(bad)
ss
mov
jmp
mov
mov
loope
add
aas
(bad)
(bad)
sub
jp
gs
nop
in
loopne
xchg
xchg
pop
and
femms
cs
mov
adc
mov
rcl
enter
xchg
gs
mov
movs
sub
mov
jecxz
(bad)
fsub
sub
adc
scas
or
add
and
pop
not
rcl
call
push
pop
xchg
xor
adc
jl
and
lahf
jo
cld
push
xchg
test
inc
push
jmp
retf
xchg
fwait
jl
shl
jmp
sub
mov
or
cli
pop
movs
repnz
pop
jmp
adc
popf
ror
fs
aam
add
xor
aas
xchg
push
scas
fs
push
mov
in
out
dec
out
jmp
lods
push
aam
inc
mov
mov
jbe
jo
cmps
push
rcl
pop
call
gs
rcr
sbb
imul
adc
sub
add
jae
repnz
xchg
or
push
out
cs
call
icebp
or
sbb
shr
sub
fwait
and
adc
cmp
mov
lahf
and
mov
ins
adc
repz
xchg
addr16
mov
pop
neg
test
pop
push
clc
xor
stos
and
push
mov
cmp
mov
pop
jb
mov
mov
xchg
push
cld
mov
mov
cmps
sbb
fldenv
gs
inc
pop
push
mov
(bad)
add
addr16
fwait
shl
sti
pop
sub
and
ror
and
mov
pusha
loop
push
xchg
inc
int
push
or
sbb
jmp
adc
lods
ror
mov
jle
fisubr
xor
xchg
adc
add
cdq
mov
and
test
pop
lods
repz
inc
mov
imul
scas
shl
push
outs
push
jmp
push
push
push
out
pop
popa
lock
push
adc
shr
push
mov
stos
and
jnp
retf
jp
xlat
loopne
jl
or
test
sbb
xor
cmps
test
and
xchg
imul
ds
push
sbb
xchg
ins
cdq
xor
fld
mov
add
sbb
in
je
jecxz
mov
scas
push
add
jg
or
xchg
pushf
push
adc
pop
outs
push
pop
cmps
mov
jno
clc
(bad)
leave
jae
cmp
add
sbb
imul
inc
test
jns
add
(bad)
stos
iret
xchg
mov
je
imul
push
ja
pop
sbb
sub
loope
ret
pop
mov
cmp
out
out
xchg
mov
ret
(bad)
dec
pop
popf
test
ficom
iret
out
adc
ret
cmps
sub
pop
jnp
mov
pop
lahf
or
addr16
xor
push
adc
lods
mov
sbb
jge
jmp
or
cmp
aaa
jp
les
outs
mov
call
out
pop
or
loopne
mov
pusha
pop
mov
sub
push
scas
in
pop
rcl
out
xor
push
aad
push
movs
test
jge
ja
dec
scas
stos
cld
std
test
jmp
inc
leave
(bad)
or
enter
test
sar
popf
push
push
stos
dec
mov
hlt
jo
pop
adc
in
(bad)
call
push
ins
adc
cmp
sahf
adc
jno
mov
loopne
jmp
out
in
je
fcmovu
ror
pop
push
jmp
fcom
movs
test
or
xchg
dec
ficomp
(bad)
sti
inc
mov
pop
mov
or
or
dec
sub
and
mov
stos
std
inc
cdq
cld
or
(bad)
sbb
clc
repnz
clc
push
ret
inc
je
pop
hlt
dec
push
jo
sbb
and
lods
ret
ss
fisub
add
retf
stc
in
push
or
cmc
cdq
popa
mov
add
nop
jge
add
call
ja
jno
arpl
xchg
cmp
cmp
enter
jb
rcr
jmp
jns
adc
mov
sti
cmps
push
in
popa
pushf
adc
cmp
push
mov
cmp
aad
add
cmps
add
inc
or
fucom
dec
sub
test
pop
test
dec
sar
std
add
push
sub
sbb
cmc
mov
mov
stos
(bad)
jmp
inc
fmul
fs
fs
mov
sbb
xlat
pop
pop
imul
mov
retf
sub
dec
lods
mov
jl
out
sti
jno
xor
pop
cmp
outs
stc
or
out
sti
ja
out
and
and
mov
sar
ja
mov
pop
repz
daa
rcl
pop
out
cld
sbb
test
push
fist
clc
je
mov
(bad)
mov
out
mov
imul
mov
(bad)
sub
inc
cmp
sub
lods
in
push
div
call
cmps
inc
push
popf
sbb
inc
pop
in
ins
inc
jmp
add
and
pmulhw
les
mov
not
xor
sbb
sub
adc
ret
inc
mov
sbb
pop
pop
lahf
jmp
xchg
sub
inc
cli
mov
out
sub
cmp
sbb
inc
test
sub
add
je
js
add
ss
jmp
mov
outs
(bad)
pop
mov
sbb
addr16
pop
data16
(bad)
jno
xchg
xchg
jl
inc
inc
out
mov
lock
push
push
xchg
mov
(bad)
mov
adc
in
dec
xor
sub
pop
aam
jp
pop
in
sbb
(bad)
fst
sahf
pushf
lock
pop
xor
popa
push
aaa
hlt
jmp
mov
fwait
and
add
call
cmp
inc
jecxz
xchg
adc
call
mov
loop
or
popa
jle
lds
xchg
aaa
clc
aas
ins
mov
mov
mov
movs
sub
sbb
cmp
pop
stos
or
push
nop
ret
xchg
cmp
stos
jecxz
fild
je
mov
ins
xchg
cdq
fistp
xchg
into
xor
aad
add
das
mov
pop
mov
pusha
or
xchg
or
dec
inc
aas
out
mov
(bad)
stos
dec
dec
jle
inc
push
mov
icebp
or
mov
cmp
jmp
cmp
pop
sub
call
cmp
push
aam
shl
(bad)
jae
sbb
cli
jmp
mov
xor
ins
dec
into
jnp
push
scas
mov
call
retf
push
test
xor
push
movs
enter
xchg
fdivr
pushf
mov
jecxz
mov
xchg
sub
sbb
pop
pop
mov
push
inc
or
sub
(bad)
outs
fwait
pop
sub
sbb
push
arpl
rol
(bad)
sar
imul
pop
and
out
jne
inc
cmps
out
ja
lds
pop
mov
sbb
xchg
dec
push
fmul
or
pop
and
cmps
mov
fidivr
mov
inc
xchg
dec
xor
add
adc
fimul
inc
mov
sub
in
int3
or
imul
ret
inc
stos
push
jp
jno
xchg
mov
in
retf
adc
retf
xor
cld
bound
fmul
lods
jmp
jmp
add
pop
xchg
add
pop
jmp
mov
inc
add
stos
xor
dec
jae
scas
push
cmp
mov
js
cdq
inc
mov
frstor
xor
ins
xchg
mov
sbb
inc
rcr
pop
jp
fwait
adc
enter
sbb
shl
inc
(bad)
sbb
mov
xchg
jmp
sbb
repnz
inc
sub
pop
sbb
ins
mov
mov
inc
or
(bad)
adc
mov
cmps
pushf
push
xchg
dec
aaa
add
icebp
les
add
inc
jge
push
jb
sahf
jp
imul
into
and
xor
scas
jecxz
xchg
add
xchg
jns
fdiv
fnstsw
jle
popa
sub
test
push
test
test
xor
pop
scas
mov
iret
in
pop
aaa
xlat
push
push
iret
cs
push
icebp
dec
fcomp
into
cmp
xchg
fcom
in
dec
fwait
inc
xchg
popf
in
xchg
stos
adc
test
push
int
mov
sbb
ja
mov
clc
shl
add
fdivrp
fild
pusha
sar
gs
and
or
mov
ss
out
xor
loopne
inc
jge
pop
inc
pushf
ror
(bad)
call
cmps
jae
(bad)
sbb
xchg
dec
sub
out
mov
in
sahf
xor
shl
popa
dec
pusha
aad
mov
jl
aas
jle
xchg
push
jecxz
cli
or
add
int3
sbb
popa
cli
(bad)
stos
pusha
xchg
stos
mov
mov
and
sub
pop
dec
outs
push
cli
out
ins
pop
xor
std
sbb
adc
push
lods
sbb
(bad)
fimul
retf
dec
or
mov
lea
mov
fidiv
iret
cwde
xor
rol
loop
icebp
popf
jge
mov
fistp
adc
idiv
popa
jmp
sub
int
add
in
xchg
add
jmp
cli
add
jmp
popf
or
in
or
hlt
enter
clc
sub
rol
movs
xor
sar
aam
sar
int3
(bad)
aad
mov
mov
cmc
pop
mov
fst
mov
nop
or
hlt
int3
adc
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
shl
loop
xchg
lods
in
in
rol
call
in
imul
in
xchg
add
loopne
xchg
add
call
sbb
mov
xchg
or
in
xchg
add
loopne
xchg
add
call
test
loopne
cdq
add
mov
mov
fwait
test
inc
lods
pop
xor
std
call
jecxz
inc
stos
adc
and
mov
pop
adc
and
in
push
xor
xor
sub
and
mov
pop
test
je
stos
in
push
sbb
pop
in
dec
int
fld
out
push
call
sbb
jmp
pop
rcl
sub
rol
push
ret
mov
pop
lds
hlt
or
dec
sbb
dec
call
cld
xchg
and
test
sbb
daa
dec
mov
push
sbb
mov
shl
int3
sub
fidivr
(bad)
fisubr
rcl
mov
sbb
xor
int3
push
ror
mov
dec
xor
ja
cmp
outs
lods
inc
mov
mov
call
sub
(bad)
jecxz
dec
and
xchg
fidivr
std
aaa
add
and
jmp
(bad)
ins
in
xchg
xor
repnz
jb
sbb
mov
movs
sti
nop
inc
fwait
pop
rol
out
out
add
cmp
test
cdq
ret
sub
mov
aas
jae
push
push
inc
xor
ret
leave
repnz
popf
jmp
jbe
xchg
stc
sar
add
aas
dec
fadd
adc
popa
mov
movs
loope
mov
push
fisub
mov
test
jmp
leave
xchg
das
sub
std
arpl
adc
xor
js
arpl
mov
and
call
les
inc
out
aas
dec
xchg
or
and
shl
pop
fistp
adc
adc
movs
push
or
xor
lds
aaa
sub
pop
aaa
sub
xor
jp
adc
inc
dec
sub
or
mov
in
out
pop
into
add
adc
in
fcmovnbe
loop
add
cmps
pop
jle
and
mov
clc
dec
lahf
outs
stc
cmc
mov
jmp
ret
enter
in
shr
icebp
outs
xor
mov
mov
dec
pop
push
stos
test
sub
mov
mov
inc
adc
shl
jge
lock
or
pushf
addr16
adc
push
push
ret
(bad)
jmp
jae
cmps
je
push
or
and
lahf
mov
sub
les
jmp
das
(bad)
pop
inc
xor
outs
lahf
les
mov
scas
jb
inc
xor
movs
push
push
popf
stos
mov
bound
addr16
mov
pop
push
mov
mov
push
sbb
fptan
mov
push
not
and
xchg
lahf
jmp
(bad)
ss
push
or
push
out
cmps
ficom
popf
pop
sub
jb
lahf
out
(bad)
mov
jbe
add
mov
push
jle
and
pop
push
addr16
imul
dec
stos
xchg
pop
sbb
popf
pusha
cli
dec
and
push
cmp
fdivr
push
stos
push
pop
mov
in
push
sub
mov
call
fdivr
jp
bound
js
int3
repnz
dec
lods
mov
imul
test
shr
xchg
stos
scas
fmul
js
das
add
dec
lock
stc
pop
shl
ror
push
cwde
add
dec
fs
and
inc
mov
lds
mov
mov
pop
mov
or
es
sahf
inc
imul
adc
lods
call
mov
cdq
aam
loop
mov
(bad)
xchg
add
clc
mov
shl
retf
and
das
sbb
mov
clc
jmp
inc
loopne
popf
or
clc
popf
or
in
xchg
add
call
popf
adc
movs
movs
lds
push
add
and
in
xchg
add
loope
mov
xchg
pop
mov
pusha
retf
ret
xor
mov
mov
test
lock
or
imul
iret
cmp
push
xor
xor
cs
xor
mov
mov
ret
push
sbb
jmp
mov
add
(bad)
lea
push
jmp
mov
mov
int
outs
(bad)
sahf
lea
(bad)
or
lods
sub
shl
mov
int3
retf
int
mov
fcmovnu
add
test
dec
mov
sbb
mov
push
xor
mov
push
test
add
push
sbb
jmp
stc
mov
jl
jns
push
inc
ret
sub
lods
test
and
ja
dec
xor
add
aaa
js
and
pushf
je
imul
cmp
cmps
pop
cs
dec
cdq
aam
sbb
das
int3
xchg
jo
mul
push
daa
shl
inc
loope
inc
and
mov
push
cs
mov
aas
jmp
arpl
push
sub
retf
cmp
mov
lea
mov
sbb
mov
xchg
mov
sbb
jmp
mov
sbb
push
(bad)
cmp
(bad)
mov
dec
daa
(bad)
push
push
push
mov
sbb
jle
mov
addr16
ret
dec
fbstp
out
ret
push
mov
jno
dec
mov
gs
(bad)
push
sar
add
cld
jae
adc
xchg
ror
sahf
sbb
scas
cli
mov
out
xchg
aam
pop
imul
push
les
aaa
sub
rol
sub
dec
test
add
mov
daa
mov
sbb
es
push
out
out
leave
test
repz
pop
repz
dec
repz
arpl
cmc
push
pop
xchg
dec
(bad)
fisubr
int3
jae
in
sbb
inc
pop
test
xchg
push
mov
cmp
xor
dec
xor
cmp
loop
and
adc
pop
cmp
mov
sar
(bad)
enter
dec
push
sahf
xchg
cwde
push
call
inc
repz
lea
mov
movs
mov
xor
call
inc
dec
pusha
sti
idiv
or
sub
icebp
fs
pop
lock
add
mov
iret
add
(bad)
sub
jae
xor
jle
push
pop
lods
out
push
loop
stos
sub
daa
loop
xor
lods
add
fs
sub
(bad)
mov
mov
push
xchg
mov
mov
jl
pop
test
adc
inc
pop
mov
dec
xor
lods
(bad)
fstp
ins
ret
scas
mov
(bad)
add
mov
arpl
popf
fisubr
inc
fld
inc
and
jmp
idiv
xchg
jne
or
or
test
mov
stos
inc
push
mov
inc
ja
mov
scas
or
scas
mov
loopne
rol
das
fucom
out
(bad)
stc
sar
xor
ret
addr16
mov
pop
mov
sub
repnz
icebp
std
mov
fsqrt
ins
or
sar
xchg
out
fisub
adc
int3
add
pop
mov
pop
push
(bad)
fmul
aaa
dec
cwde
cmp
shl
cmc
mov
xchg
das
cmps
ins
pusha
sbb
add
sbb
mov
xchg
pop
and
dec
ror
pushf
jp
push
pop
cmps
out
pop
div
cmp
jnp
(bad)
push
cli
jno
pop
push
frstor
ss
and
pushf
mov
dec
ja
and
pushf
add
clc
scas
dec
mov
aad
aam
je
inc
ds
ins
ss
adc
mov
cli
xchg
mov
and
rcl
cli
sahf
mov
xchg
ins
(bad)
aad
outs
adc
jb
jbe
adc
daa
add
loopne
cmp
push
(bad)
push
sbb
dec
mov
das
arpl
mov
aam
js
push
mov
inc
in
push
fnstcw
clc
movs
and
add
mov
inc
mov
cdq
push
jno
lock
push
lock
das
mov
ror
cmp
mov
xor
outs
popa
inc
sbb
jmp
xlat
aas
pop
imul
test
dec
dec
add
cld
add
pusha
int3
fs
into
xor
ret
loopne
jecxz
mov
loop
fs
push
xchg
test
lahf
add
dec
fwait
cmp
lahf
and
ficom
rcl
(bad)
scas
push
adc
mov
sub
push
aas
pop
sahf
xlat
mov
push
addr16
jge
push
jo
mov
or
dec
fadd
pop
mov
hlt
scas
ror
add
dec
pushf
clc
dec
std
pushf
push
les
cmp
mov
mov
ds
adc
iret
inc
xor
and
shr
xchg
neg
xor
in
adc
jmp
pushf
cli
data16
aam
pop
mov
pop
aam
sti
jns
int3
push
and
push
into
sub
cmp
movs
pop
fmul
test
outs
je
adc
pop
cmp
or
popf
jmp
cs
adc
push
stc
popa
mov
add
adc
lea
push
in
ins
cld
ins
cwde
add
or
hlt
inc
(bad)
loopne
xchg
and
or
loopne
or
call
xchg
or
in
test
mov
fld
mov
popf
dec
fs
push
dec
in
xchg
std
in
sbb
cli
repz
push
cld
mov
enter
dec
gs
dec
vgf2p8affineinvqb
pop
sub
stc
xor
mov
push
jb
xor
push
aam
or
xor
fidivr
test
das
xor
repz
popa
push
call
cmp
outs
adc
out
pop
(bad)
mov
outs
or
mov
aad
jno
out
nop
push
ret
in
pop
and
sti
add
out
mov
pop
ffree
repnz
loop
dec
dec
push
pop
mov
jno
adc
pusha
daa
loopne
ins
(bad)
enter
pop
data16
xchg
cmps
mov
pop
fs
add
sbb
out
xor
mov
fs
pop
cmp
popa
in
sar
(bad)
fidiv
repz
mov
cmp
xor
clc
cdq
(bad)
mov
lock
fcomp
pusha
std
sti
xor
pusha
mov
inc
lea
dec
popa
sbb
push
jecxz
push
mov
mov
addr16
cmps
mov
mov
ss
lds
jo
imul
clc
out
xor
lods
adc
mov
push
repnz
or
inc
stos
mov
fxch
inc
or
inc
lahf
hlt
mov
add
in
aaa
mov
les
leave
shl
mov
(bad)
xchg
sub
inc
dec
or
or
aam
iret
movs
test
adc
popf
movs
outs
(bad)
cdq
ins
(bad)
js
call
push
cmp
xchg
fld
stos
rcr
or
cmp
rol
mov
mov
cmp
dec
sbb
xchg
cmps
into
mov
mov
inc
std
(bad)
popa
arpl
outs
pop
xchg
fistp
cdq
arpl
inc
pusha
mov
cmp
ins
jmpw
cmp
push
adc
xchg
push
xor
xor
jno
push
aas
stos
add
pop
or
push
and
icebp
ret
repnz
sbb
pop
das
and
add
push
neg
int3
rcl
popf
sub
pop
xchg
push
fbld
pusha
pop
ins
jo
ins
mov
cld
icebp
push
aam
stos
cmp
inc
fmul
int3
das
push
je
mov
mul
jb
stos
mov
push
mov
and
inc
xchg
sbb
sbb
dec
sub
ins
cmp
add
sti
clc
nop
test
js
aaa
fmul
jg
mov
cdq
inc
sbb
loopne
inc
jmp
stos
push
xor
popa
stc
add
dec
xor
push
inc
fst
or
aaa
mov
outs
call
sub
nop
jmp
push
mov
hlt
iret
xor
ficomp
jne
mov
js
(bad)
jns
inc
sahf
fmul
inc
xchg
fdivr
stos
adc
es
xchg
mov
addr16
out
ja
retf
xor
pop
push
aas
jge
sbb
or
cmp
dec
mul
(bad)
retf
cld
jmp
out
pop
mov
mov
dec
fsub
inc
test
pop
add
xor
dec
jnp
ss
mov
pusha
xlat
xchg
ss
aam
lds
adc
lods
enter
fwait
int3
mov
and
or
xor
bound
ja
mov
fiadd
jmp
out
cmps
pop
add
(bad)
movs
and
dec
mov
test
mov
test
sbb
dec
mov
jae
and
mov
in
jnp
repnz
and
ins
jno
enter
and
adc
outs
cmp
cmp
in
gs
xor
jno
das
lds
or
out
push
push
push
sub
or
call
je
lods
fld
test
mov
call
lods
in
scas
in
sbb
jp
gs
sub
out
ja
rcr
fisttp
xlat
push
loope
call
arpl
sti
cmp
jno
cli
sbb
cwde
scas
movs
sbb
adc
jns
cdq
fild
ins
xor
call
ss
(bad)
sbb
xchg
shl
adc
cld
add
in
lods
fld
lods
push
adc
fs
lds
mov
imul
xchg
or
in
imul
fs
ret
pushf
mov
lea
pop
movs
mov
mov
pop
bound
addr16
or
push
ja
push
xor
inc
inc
cdq
mov
sbb
cmp
pop
jp
jne
cmps
popf
or
mov
out
xchg
push
and
jb
mov
push
out
(bad)
repnz
sbb
mov
or
cmp
inc
xchg
(bad)
mov
add
aam
dec
sti
ds
dec
cmp
push
shl
mov
jmp
mov
pop
or
mov
cli
popf
into
test
jg
mov
sar
push
nop
mov
xlat
in
sbb
ret
mov
push
nop
inc
adc
repnz
sub
inc
push
sub
inc
and
xchg
push
mov
mov
(bad)
jae
adc
xor
movs
cli
xor
mov
cmp
mov
lahf
push
call
repnz
jns
outs
inc
fadd
inc
iret
jp
sbb
inc
cwde
into
mov
push
inc
movs
scas
pop
push
sar
xor
and
mov
ja
jmp
push
ror
pop
arpl
inc
lds
int
test
cwde
push
dec
push
pop
jbe
outs
rol
adc
shr
das
inc
mov
icebp
pop
pop
or
jmp
jo
dec
adc
adc
and
push
xor
lock
adc
movs
adc
mov
movs
(bad)
out
sub
pmaxub
jne
(bad)
int
add
mov
xchg
mov
mov
jge
ins
movs
xchg
dec
jmp
pop
ds
mov
jle
adc
add
adc
ins
sub
imul
or
adc
add
mov
xor
mov
inc
mov
xchg
in
jmp
xchg
mov
sbb
dec
addr16
adc
movs
adc
test
retf
enter
stos
in
cmp
xchg
ficomp
add
mov
aaa
mov
mov
jmp
leave
mov
add
xchg
ds
inc
ret
jne
popa
std
cmps
xor
loopne
adc
rcl
add
add
imul
lds
jge
jp
aam
cmp
arpl
xchg
(bad)
cli
dec
in
adc
shl
sub
sub
push
cs
jp
ins
shl
dec
push
sbb
fisttp
rcl
fs
or
call
or
jmp
ins
sbb
(bad)
mov
loopne
and
jmp
add
jg
jae
cmps
shl
out
mov
sbb
cmp
jo
pop
adc
sub
stos
shr
cmps
shl
outs
or
loopne
mov
pop
or
jno
cdq
es
mov
xor
(bad)
inc
retf
pop
aaa
outs
pop
sar
(bad)
call
iret
fcom
bound
inc
mov
pusha
outs
mov
div
jne
call
add
cdq
push
and
(bad)
push
sbb
popa
inc
in
out
mov
in
mov
cld
sbb
pop
mov
inc
shl
movs
add
mov
cmp
sub
push
pop
pop
push
xor
das
add
out
pop
dec
fldcw
pop
jmp
adc
xor
sub
or
xor
inc
and
test
add
add
mov
lock
std
and
push
jg
mov
bnd
sahf
or
and
sbb
ret
xor
test
inc
cmp
xchg
push
mov
jo
loopne
pop
add
jge
aam
pop
push
stos
cmc
test
and
or
rol
pop
sbb
pop
popf
add
ja
add
and
xor
imul
push
shl
idiv
(bad)
sub
repz
loop
cmp
push
div
aam
jecxz
rcl
jae
dec
jl
inc
jo
adc
xor
push
pop
outs
(bad)
sub
push
ficom
ja
mov
adc
in
loopne
dec
pop
das
mov
frstor
sahf
cmp
es
inc
mov
adc
sub
push
fnstenv
xchg
dec
movs
push
or
repz
cmp
aam
adc
sub
idiv
xchg
in
xchg
or
in
sbb
clc
sub
in
call
fld
fs
xlat
int
mov
push
mov
ins
push
pop
movs
sub
lods
ins
ficom
sbb
xchg
and
in
xchg
sbb
loopne
mov
(bad)
sbb
mov
ss
call
and
or
aam
fst
pop
(bad)
(bad)
es
inc
jb
sbb
ins
mov
dec
mov
dec
sbb
add
or
jo
out
das
push
nop
in
xchg
je
not
and
mov
inc
stc
js
jge
inc
xlat
lea
cmp
mov
xchg
outs
push
push
sub
dec
sbb
addr16
es
jmp
scas
add
std
test
push
cwde
fisub
xchg
and
fbstp
xchg
jae
mov
inc
sbb
mov
in
in
cs
mov
lods
(bad)
repz
cmc
ficom
repz
lea
fs
dec
pusha
daa
push
sub
cmp
inc
xlat
js
das
add
xor
lea
sar
or
sahf
cmp
fs
push
lahf
sbb
inc
inc
shl
add
lea
xor
jge
repnz
adc
cs
adc
push
mov
and
xchg
fwait
loop
(bad)
fist
lods
pop
mov
(bad)
retf
in
jmp
into
stos
and
cmp
mov
movs
leave
dec
arpl
add
push
xchg
stos
push
push
push
dec
(bad)
pop
add
jl
das
fidiv
adc
lea
stc
rol
nop
xor
xchg
pop
cmp
jl
jle
mov
mov
rcl
sub
test
push
jmp
lahf
test
jmp
sub
push
push
test
loop
sbb
mov
out
jno
shr
call
mov
push
sbb
das
ins
sub
mov
fwait
aad
or
or
mov
mov
fnstcw
mov
cmp
add
(bad)
cmc
call
test
shr
int3
push
push
push
mov
std
mov
pop
shl
add
cmp
push
xchg
jne
in
dec
adc
add
iret
lock
push
enter
ret
jle
outs
call
sbb
mov
fild
push
ins
mov
xchg
jae
sbb
add
retf
and
mov
push
ja
(bad)
pop
(bad)
les
push
ror
dec
xchg
ins
and
sub
inc
ins
aad
loopne
mov
and
outs
repz
fidivr
dec
out
psubsw
pop
or
dec
jmp
sbb
jns
out
mov
sahf
aam
mov
jno
mov
xchg
and
call
pop
xlat
and
jmp
mov
mov
rcl
jbe
mov
js
xchg
loope
add
sbb
retf
int
xor
sbb
pop
dec
mov
pop
mov
xor
aam
bound
leave
js
mov
sti
mov
or
or
out
xchg
pushf
and
cmp
jbe
scas
sub
fstp
mov
(bad)
daa
mov
aas
sbb
sbb
push
std
addr16
test
test
loope
sub
ins
popa
lea
clc
jl
add
addr16
int
ds
iret
pusha
mov
cmp
pop
popa
sub
xor
cmp
out
dec
lods
push
sub
out
pop
xchg
mov
inc
or
or
cmps
xchg
stos
mov
lods
scas
in
xor
mov
fstp
test
mov
adc
gs
add
test
xor
loopne
fwait
imul
stos
sbb
mov
in
inc
mov
movs
xchg
popf
sbb
xchg
xchg
adc
push
fsub
sub
aas
inc
outs
xchg
lods
jl
aam
jl
in
sbb
xchg
mov
xor
out
mov
imul
xchg
inc
cmp
(bad)
inc
jecxz
(bad)
sar
cmps
out
adc
cld
or
test
xor
dec
fnstsw
or
xor
sbb
push
sbb
aas
mov
or
dec
mov
cmp
mov
jle
pop
fild
push
cs
mov
adc
sbb
dec
push
lds
dec
fldenv
and
xor
jne
dec
into
push
daa
test
int3
ds
xlat
pop
cmp
in
pop
lahf
pop
(bad)
sahf
(bad)
jle
imul
jbe
sbb
cmp
test
addr16
mov
and
rcl
mov
mov
or
(bad)
push
jne
or
jge
xor
imul
cmps
sub
aad
daa
outs
xor
bound
inc
test
es
ror
cmps
int3
pop
loope
xchg
lahf
adc
call
sbb
(bad)
jmp
add
sub
sbb
mov
(bad)
arpl
nop
and
pop
test
pop
push
retf
adc
movs
jbe
xchg
sbb
das
cmp
dec
dec
add
(bad)
hlt
out
inc
push
push
or
mov
ja
imul
enter
(bad)
jmp
int
mov
fld
repz
xchg
add
int3
stc
or
stos
sbb
adc
inc
mov
jg
loopne
ror
pop
mov
inc
push
pop
fnstcw
(bad)
popf
sets
loopne
and
movs
pop
add
jle
adc
mov
ins
jmp
cli
ror
mov
pop
mov
jns
xchg
dec
loope
inc
lods
xchg
cmc
push
fadd
fnstsw
xchg
(bad)
lds
or
mov
mul
xor
(bad)
jle
adc
mov
xchg
jle
xchg
adc
call
mov
scas
imul
jae
sub
push
aam
xchg
inc
daa
pop
nop
mov
sub
adc
stc
xor
scas
pop
sub
fld
cmc
lock
mov
sub
dec
dec
leave
sub
cli
jno
add
jecxz
sub
or
fs
fld
adc
mov
cmp
frstor
or
jg
fmul
pop
sub
(bad)
mov
cld
adc
xchg
sahf
shl
aas
popa
aam
into
inc
imul
leave
stos
call
or
popf
clc
and
fsub
fisttp
dec
outs
int
dec
jmp
jb
movs
test
out
shr
popf
push
xchg
cli
push
ins
jns
push
(bad)
jns
cmp
call
dec
xor
jo
push
repnz
aas
retf
fucomip
xor
xor
cdq
ret
and
push
ret
ret
daa
add
and
xchg
inc
jno
cmp
jmp
xlat
sub
lea
pop
sub
stc
inc
(bad)
movs
push
leave
popaw
pop
dec
ret
fs
loop
push
scas
add
out
out
sbb
stc
loope
ds
jnp
sti
inc
rcr
addr16
movs
shl
xlat
inc
sbb
arpl
add
loop
pop
mov
jp
jle
inc
xor
xchg
pop
int
xchg
ret
ja
test
aaa
ins
das
sbb
push
mov
push
fcomp
add
lds
or
push
push
imul
jmp
jae
retf
arpl
in
xchg
add
test
add
pop
loopne
sbb
add
mov
mov
lds
cli
dec
movs
jbe
sbb
in
sti
sbb
pmaxub
pop
mov
bound
fistp
push
adc
bound
mov
pminub
icebp
popf
ds
pop
sbb
mov
adc
or
push
jmp
cmc
or
cmp
inc
repz
push
sahf
push
gs
pop
mov
pop
shl
dec
or
push
pop
stos
xchg
and
jmp
out
shl
xchg
pop
adc
ds
jns
popf
jmp
xor
dec
out
fs
mov
sub
addr16
add
inc
and
xchg
loope
cmps
clc
fs
(bad)
loop
(bad)
loope
aas
jns
add
inc
popf
jle
mov
ror
movs
and
sbb
jnp
sti
pop
dec
iret
out
hlt
data16
xor
pop
idiv
popf
mov
dec
inc
scas
inc
stos
ret
mov
sbb
and
ins
adc
fs
sbb
lods
std
das
cs
retf
(bad)
or
jo
xchg
out
cwde
into
jle
or
loope
fld
les
loopne
lods
stos
out
sahf
jne
sub
xchg
mov
mov
or
shl
pop
sub
mov
fisub
call
sahf
scas
popf
pop
mov
call
(bad)
adc
pop
fs
je
mov
out
jle
ret
push
cmp
adc
xchg
cmp
ss
mov
daa
dec
lds
lods
inc
mov
dec
scas
repz
test
retf
jo
add
fwait
inc
loop
dec
or
sbb
dec
xchg
pop
mov
sub
adc
sub
scas
add
mov
adc
or
mov
ror
cld
jne
sbb
mov
mov
repnz
push
outs
jge
jmp
mov
jle
hlt
loop
faddp
dec
repz
je
aad
movs
jmp
push
xor
rol
xor
and
and
outs
lea
inc
dec
icebp
fdiv
ja
loope
push
stos
jo
nop
xchg
dec
test
aam
inc
lock
std
cmp
or
pop
or
push
inc
outs
aaa
imul
pop
add
jecxz
(bad)
es
adc
ds
ror
in
lahf
pop
jle
sar
add
cmc
lock
ficom
inc
cmp
cmp
or
cmp
in
mov
mov
scas
jmp
inc
test
inc
movs
ja
int
aas
sub
sar
adc
fsub
dec
mov
xor
imul
inc
js
ss
adc
sahf
cli
call
dec
ins
inc
xor
call
ficom
push
into
fnstcw
adc
nop
dec
adc
lea
push
out
lods
test
aaa
jae
dec
push
xor
stos
mov
cli
adc
jb
jecxz
push
je
ja
pushf
lahf
mov
out
popa
xor
cmp
ficom
fdiv
movs
jno
jb
push
cmp
loope
xor
or
jo
jg
or
(bad)
sub
and
nop
push
jmp
mov
push
jge
ret
(bad)
mov
jecxz
sbb
outs
sbb
test
ja
xchg
and
fidiv
test
cmc
icebp
dec
icebp
and
mov
pop
inc
sub
sub
popf
mov
stos
jno
push
add
(bad)
(bad)
sub
sub
push
rol
in
pop
out
inc
in
mov
dec
dec
enter
jecxz
and
sbb
sahf
ja
mov
jae
mov
push
or
movs
mov
cmp
jnp
lock
retf
sbb
fisubr
and
cmp
shr
push
retf
and
inc
lods
pushf
shr
arpl
sbb
enter
fnstcw
loope
clc
pop
stos
mov
fyl2x
arpl
ins
in
add
sti
pushf
in
mov
xor
pop
and
cld
fcmovnb
enter
dec
test
jnp
mov
mov
mov
push
dec
ins
fldenv
adc
mov
(bad)
or
rol
dec
in
sbb
push
cld
inc
mov
push
add
and
cmp
lods
inc
scas
in
cmp
ret
inc
scas
push
push
xchg
mov
test
out
in
cmc
ror
jae
sbb
mov
mov
popf
add
int3
or
call
xlat
cli
fiadd
jge
in
sub
dec
adc
cmp
mov
push
jno
imul
sub
adc
or
cwde
popf
sbb
repnz
push
add
iret
adc
adc
stos
pop
lock
jne
mov
fild
cmp
sub
cmp
repz
aaa
push
sub
mov
stc
xchg
ficomp
ins
jo
popa
lahf
ja
push
aam
mov
sub
or
inc
iret
nop
into
jmp
outs
sahf
stos
jne
xchg
outs
movs
jmp
xor
ret
sbb
mov
sbb
sbb
mov
or
add
mov
pop
pushf
test
outs
push
pop
mov
push
(bad)
cmc
rcl
push
xchg
ins
pop
ds
mov
lahf
daa
push
out
or
jp
aad
pop
cli
ja
cmp
int
out
cmp
shl
aas
adc
sub
clc
bound
xor
sub
or
mov
into
push
in
leave
outs
cmp
or
xor
sub
into
mov
push
mov
(bad)
dec
js
call
dec
pop
and
push
call
cmp
jmp
(bad)
loopne
imul
jle
data16
rcr
ret
sbb
outs
jg
and
dec
mov
(bad)
jg
push
mov
rcl
stc
ins
xlat
mov
(bad)
fwait
nop
add
rol
sbb
movs
push
call
push
pop
ja
loop
add
jl
or
imul
mov
or
mov
xchg
xchg
push
stos
neg
push
jl
pop
lods
iret
sub
mov
cmp
pop
cdq
hlt
aam
(bad)
(bad)
(bad)
data16
pop
inc
fidivr
test
add
rcl
in
retf
mov
aaa
push
sub
cli
xchg
or
mov
retf
sti
loop
jg
pop
pop
and
jno
loop
xor
retf
rcl
dec
pop
dec
sti
in
adc
mov
mov
dec
test
jo
aad
push
sbb
push
adc
pop
pop
outs
test
add
add
std
push
pop
scas
dec
add
push
imul
stos
das
ja
pop
loop
movs
out
nop
out
ror
lahf
lahf
stos
in
(bad)
ffree
dec
mov
or
jl
pusha
test
adc
xor
lahf
aas
pop
mov
xor
lea
ins
dec
fnstcw
cld
add
xlat
jo
movs
mov
cmp
xor
(bad)
cmp
cmc
adc
xchg
sbb
imul
imul
mov
or
bound
cmp
lock
inc
in
xchg
or
in
in
xchg
add
call
xchg
test
in
rol
and
test
inc
shr
add
adc
stc
shl
clc
dec
lahf
mov
or
push
jge
add
mov
cmp
push
pop
add
mov
or
mov
xor
cli
and
sbb
fiadd
movs
inc
jo
jge
cmp
out
test
in
outs
or
fistp
std
push
push
shr
add
fstp
sbb
popa
js
les
pop
es
test
add
mov
xor
stos
inc
pop
push
stc
popf
ds
lods
js
aad
(bad)
mov
mov
mov
xchg
out
les
ja
xor
cdq
xor
test
xor
es
xor
inc
dec
inc
call
ret
call
cmp
mov
or
stos
sbb
xor
clc
movs
xor
push
(bad)
lea
std
jmp
fld
ds
mov
int3
push
xor
das
xor
cmps
loope
enter
rol
jo
sub
sbb
and
ror
inc
mov
in
(bad)
nop
dec
inc
int
popa
inc
pop
xor
inc
xchg
aad
mov
xor
out
cmc
inc
jns
cld
push
ffreep
sar
daa
cmc
and
adc
out
test
ss
and
cmp
sahf
bound
(bad)
pop
xchg
xchg
inc
imul
pop
aam
xchg
jbe
or
lds
ss
dec
sbb
lods
popa
mov
jne
es
(bad)
cmp
inc
(bad)
enter
ret
mov
mov
popa
mov
jmp
dec
imul
inc
popf
test
stos
dec
call
rcl
adc
cdq
sbb
fadd
xchg
(bad)
in
adc
dec
lods
xchg
add
mov
aas
sub
adc
fs
mov
in
rol
xchg
sub
xchg
sbb
or
lds
fidiv
jnp
xchg
mov
sub
jle
add
push
das
sub
sbb
xchg
xchg
sbb
jnp
into
mov
mov
pop
mov
mov
push
fbld
dec
fidivr
es
mov
mov
dec
jo
jae
lods
ins
and
aas
or
out
scas
pop
xor
icebp
pop
mov
cmps
pop
in
jecxz
mov
ss
jg
out
out
cld
ss
mov
arpl
into
jl
popa
jbe
inc
xor
shl
shr
lods
jmp
clc
imul
inc
fs
push
xchg
fidiv
aas
out
test
mov
aad
adc
mov
dec
icebp
or
jne
ins
or
jae
xlat
pop
out
frstor
es
xchg
fwait
loope
(bad)
std
add
xchg
pop
arpl
pop
loopne
push
push
jmp
jo
scas
mov
pop
in
loopne
imul
int3
mov
xlat
call
sbb
fdiv
imul
pop
cdq
sub
cs
inc
test
(bad)
xor
(bad)
xchg
addr16
cld
xor
das
dec
sbb
mov
xchg
jo
(bad)
sub
add
mov
dec
inc
cmp
push
inc
leave
mov
adc
xor
pop
pop
ja
xor
cmps
shr
xor
pop
sub
adc
dec
jge
adc
fidivr
bound
js
mov
mov
mov
retf
mov
inc
jnp
sbb
push
dec
test
adc
nop
scas
jmp
or
inc
aaa
xor
xchg
mov
dec
push
movsx
sub
xlat
add
retf
push
test
inc
cmc
jge
xor
ins
cs
sub
xor
fcmovne
mov
xchg
ret
sti
add
inc
icebp
push
add
pop
jb
sbb
popf
mov
cmp
hlt
ja
pop
xchg
in
fild
inc
mov
scas
mov
inc
mov
mov
ins
shl
loope
push
jmp
(bad)
cmc
das
sbb
mov
test
and
or
mov
fistp
add
int
xor
mov
xor
jmp
stos
push
cwde
out
push
or
adc
pop
imul
inc
and
loopne
repz
mov
neg
out
push
inc
add
xor
sbb
dec
icebp
addr16
or
movs
jge
ins
mov
and
test
and
(bad)
pushf
scas
cwde
jo
mov
inc
pushf
not
pop
or
xor
mov
push
cwde
cmp
inc
movs
in
mov
imul
pop
ret
jbe
inc
sub
les
push
mov
mov
mov
mov
mov
scas
outs
lock
sti
sub
sub
test
les
inc
inc
push
push
or
push
add
pusha
add
add
push
sub
arpl
lods
or
adc
sub
cmp
mov
xchg
mov
lods
cmp
(bad)
jo
or
(bad)
mov
loopne
stos
xchg
dec
pop
mov
inc
add
xor
lea
ret
hlt
or
pop
sub
pushf
ror
xchg
push
aaa
dec
fcompp
lea
sub
pusha
cmp
inc
fidiv
cs
jge
or
pop
hlt
dec
out
and
into
sub
and
xchg
inc
bound
jl
rcr
cdq
mov
shl
gs
sbb
aam
pop
in
mov
xchg
jb
sbb
jo
(bad)
sub
hlt
dec
loopne
imul
and
test
push
inc
retf
es
pop
js
adc
xchg
rol
clc
(bad)
idiv
ss
xor
shl
cmp
mov
jecxz
sub
xor
(bad)
rcr
jno
sub
add
add
jb
xor
cmp
daa
fnop
sub
xchg
sub
fidivr
aas
push
daa
ins
std
xchg
push
dec
xlat
inc
popa
mov
fbstp
adc
sbb
pushf
xor
jl
xlat
add
dec
gs
aaa
inc
aad
leave
mov
or
mov
(bad)
popf
and
add
jnp
imul
in
in
mov
sbb
and
nop
inc
jmp
mov
xchg
adc
mov
sbb
loopne
add
and
jnp
dec
xchg
shl
or
mov
sub
mov
sar
mov
scas
and
mov
fmul
mov
cli
aas
sar
or
out
imul
mov
repnz
mov
in
fld
out
and
in
out
cmp
add
jle
call
lea
movs
arpl
ss
inc
push
mov
cwde
out
push
shl
cdq
jge
inc
call
ins
out
jmp
inc
xchg
xor
cmc
and
shl
inc
repnz
jb
xchg
fstp
(bad)
shl
mov
push
sub
ret
mov
mov
clc
xchg
outs
clc
sar
aam
jb
jb
mov
dec
xor
out
jl
jmp
jns
lea
(bad)
xor
push
push
scas
xor
stos
je
movs
(bad)
xchg
lds
inc
(bad)
stos
jmp
xor
jecxz
pop
mov
mov
dec
test
xchg
mov
cmp
or
icebp
fstp
aad
mov
mov
pop
push
cmps
cmp
in
mov
jns
mov
jmp
xor
inc
sub
add
pop
cmp
mov
add
xchg
xor
pop
lods
rcl
xchg
add
aam
xchg
cmp
lds
in
pop
mov
add
pop
fdivr
xchg
add
fistp
mov
out
xor
push
dec
stc
cmp
daa
cmps
in
or
dec
fs
xchg
push
les
stos
mov
clc
imul
(bad)
repnz
jo
stos
xchg
adc
adc
dec
iret
jns
inc
cmp
test
bound
xor
add
adc
mov
and
ss
jmp
pop
rcl
push
add
rol
mov
and
jmp
icebp
dec
xor
cdq
ret
mov
or
jnp
xor
dec
or
mov
mov
mov
ret
mov
retf
imul
mov
add
cmps
and
mov
cmps
jg
lods
mov
stc
inc
leave
in
lds
jmp
repnz
retf
inc
pop
lahf
and
cmps
pop
repz
mov
pusha
push
rcl
xchg
aaa
je
mov
sbb
mov
ins
dec
push
loopne
jno
jl
movs
jno
sbb
push
xor
or
mov
jnp
sub
mov
jbe
cmc
lahf
movs
pop
pop
mov
int
jp
ja
pop
aam
push
icebp
imul
and
fcom
push
mov
sbb
int
ins
jmp
pop
or
bound
or
(bad)
push
test
push
in
inc
mov
cmp
mov
xor
outs
loope
cmc
push
addr16
inc
cmp
or
push
pop
xor
lahf
int3
(bad)
sub
mov
repz
or
daa
pop
jnp
sbb
mov
inc
bound
sub
imul
inc
or
mov
sbb
sub
adc
mov
stos
sub
in
mov
jecxz
rol
ret
sub
(bad)
jecxz
test
ins
dec
in
push
push
ror
stos
loopne
je
pop
ins
jae
and
xchg
fistp
hlt
inc
mul
arpl
ficomp
inc
scas
pusha
and
ret
or
es
fnstcw
out
cmc
push
pop
xor
repz
in
adc
jge
sbb
xchg
xor
in
xchg
or
in
add
test
nop
js
out
lds
das
xchg
pop
les
das
or
lods
test
cmp
std
jnp
outs
ss
jle
xchg
test
push
lods
xor
je
shr
lea
dec
outs
ror
mov
iret
out
sahf
mov
mov
scas
out
in
fsubr
xchg
or
mov
jmp
fiadd
adc
mov
test
retf
cwde
cld
add
jnp
and
loopne
cli
js
arpl
or
push
repnz
push
mov
pusha
mov
iret
jbe
int3
adc
pop
or
inc
shl
mov
sbb
xchg
cdq
movs
in
xchg
or
in
popf
sbb
in
xchg
add
call
xchg
inc
gs
inc
gs
push
ret
xchg
inc
sbb
xchg
and
in
add
fmul
mov
xchg
jecxz
cs
mov
sub
jno
jae
in
arpl
xlat
cmps
pop
mov
ret
sub
and
outs
int3
popa
(bad)
popw
das
lea
mov
daa
dec
movs
dec
hlt
ficomp
stos
and
and
and
push
or
out
pop
xchg
mov
sti
loopne
inc
scas
push
pop
xor
stos
push
scas
(bad)
dec
pop
loopne
xchg
inc
leave
push
aad
dec
iret
gs
ret
jne
dec
add
sbb
dec
adc
cdq
mov
test
sub
mov
mov
cmp
shl
xlat
and
out
and
gs
adc
jle
sub
(bad)
popa
push
call
ds
scas
add
jns
loopne
push
sbb
mov
xchg
retf
push
arpl
sub
shr
pop
aad
adc
inc
sbb
mov
daa
and
data16
adc
jge
push
icebp
in
jno
fist
cmps
mov
inc
push
adc
(bad)
nop
imul
dec
stc
inc
mov
std
or
cmps
and
mov
and
mov
push
out
ja
rcl
rol
mov
sub
gs
movs
inc
ret
daa
(bad)
les
fidiv
pushf
adc
jns
scas
xchg
sbb
push
xor
stos
fsubr
sub
mov
dec
std
mov
shl
and
xchg
ja
mov
xor
adc
xor
ss
sub
cmp
push
xchg
cmp
and
push
lock
pusha
xchg
mov
test
ins
sub
sahf
iret
(bad)
mov
and
pop
inc
mov
mov
(bad)
rcl
or
les
lods
mov
or
mov
jmp
in
cdq
sbb
pushf
cmp
dec
pop
jmp
mov
pushf
in
rcr
repnz
add
aad
adc
inc
sbb
pop
pop
push
mov
xor
les
xlat
cld
sub
loope
lea
inc
pop
fs
dec
push
inc
hlt
call
or
push
shr
inc
cmp
xchg
jg
aad
sub
push
hlt
sbb
es
mov
sub
inc
shr
mov
aad
aaa
sub
adc
test
mov
data16
push
ret
je
push
std
pop
movs
jb
pop
fnstenv
stos
jl
pop
xchg
sbb
cmc
(bad)
into
cmp
sub
xor
in
dec
fidivr
imul
dec
ror
push
push
popa
add
mov
icebp
(bad)
aaa
ins
fwait
enter
pop
int
sbb
rcr
bound
inc
pop
and
jmp
inc
leave
pop
imul
out
in
out
jmp
or
mov
jne
mov
sub
mov
inc
mov
jb
int
ss
xor
xlat
dec
mov
push
fcomp
js
aad
ja
mov
dec
popa
dec
push
push
mov
and
mov
pop
add
push
push
mov
cld
aam
pop
fdiv
cmps
std
gs
ins
inc
enter
dec
stos
mov
and
les
jle
repnz
fmul
inc
jnp
les
or
loope
pop
rcr
lds
mov
push
hlt
push
adc
test
es
or
pop
fidivr
call
stos
add
inc
push
xor
fidivr
pushw
inc
sbb
jno
std
test
mov
dec
(bad)
mov
fxch
enter
mov
push
lock
inc
in
popf
or
in
popf
sbb
in
xchg
add
call
rol
mov
outs
push
inc
cmps
out
push
xchg
inc
shr
add
cmc
ret
cmp
in
sub
fild
mov
rcl
jns
fist
test
mov
jle
dec
push
sbb
clc
cmp
dec
cmp
out
cs
gs
or
sbb
sbb
or
bound
pop
movs
pop
mov
lock
mov
adc
fcomp
sbb
jnp
pop
xchg
inc
dec
iret
leave
sub
out
jmp
out
pop
cmp
hlt
pop
xchg
jmp
fs
sub
dec
dec
bound
sbb
sbb
cmps
dec
mov
xchg
adc
fs
or
daa
mov
das
cmc
add
or
push
imul
adc
push
popa
push
dec
and
push
jno
pop
xchg
mov
les
adc
mov
cmp
stos
fbld
pop
jl
pop
call
loopne
out
ds
or
jmp
in
push
fs
jmp
mov
addr16
xchg
cli
mov
push
sbb
xchg
js
addr16
cmp
mov
in
sbb
pop
xchg
ins
push
(bad)
in
out
(bad)
mov
gs
push
lods
cmps
mov
mov
fidivr
add
lea
xchg
adc
ss
inc
fwait
(bad)
jo
cwde
les
stc
out
inc
enter
ss
or
dec
out
or
sbb
cli
add
pop
adc
retf
test
xor
enter
pop
movs
dec
lods
xor
push
(bad)
shl
in
and
dec
jno
(bad)
shl
cdq
outs
mov
repz
pop
jmp
mov
and
xchg
inc
dec
fiadd
or
push
ins
leave
arpl
(bad)
out
mov
ds
jle
(bad)
mov
mov
mov
pop
mov
cmp
clc
arpl
mov
call
xchg
test
iret
sbb
(bad)
aaa
jmp
stc
mov
leave
and
lods
adc
jg
adc
rcr
inc
ins
cld
mov
imul
cmps
sub
sbb
mov
dec
push
cs
pop
sbb
hlt
push
inc
mov
fcomi
daa
sbb
sub
add
pop
dec
mov
xchg
in
popf
pop
fmul
(bad)
lods
ins
ins
imul
add
and
xor
mov
push
scas
lea
mov
out
add
jb
cwde
xchg
aam
cwde
or
cmp
fldcw
sbb
mov
imul
mov
xacquire
ficom
rcr
or
cwde
stc
mov
scas
pop
ja
ins
cmp
adc
or
jae
and
in
xor
pop
ss
jns
icebp
add
mov
add
push
pop
aaa
repz
lea
arpl
push
mov
xlat
cld
fisttp
cld
adc
or
and
mov
ret
sub
(bad)
clc
sbb
in
call
mov
jl
ins
cs
rcr
mov
pop
and
pop
dec
xchg
sub
idiv
pop
lods
shl
mov
dec
iret
ret
icebp
add
cli
inc
jnp
leave
mov
and
dec
loop
lds
push
lods
movs
(bad)
sti
cmp
mov
mov
push
jmp
mov
add
cmps
loope
push
pop
fcom
jmp
popa
inc
in
hlt
test
mov
pop
cwde
xor
sub
mov
ret
xchg
mov
push
loop
(bad)
cwde
mov
jmp
into
cmc
adc
into
push
fbld
mov
adc
dec
in
xchg
aas
dec
movs
iret
bound
and
ja
(bad)
cmps
(bad)
mov
popa
retf
retf
push
xor
in
test
and
jge
daa
jns
lock
std
in
int
rcr
outs
ja
jmp
add
xchg
dec
cli
mov
xor
jbe
push
sub
scas
nop
mov
jb
out
pushf
sbb
xchg
xchg
mov
call
test
loopne
rol
gs
inc
sub
mov
out
sar
mov
mov
in
xchg
std
mov
pop
imul
imul
jno
xor
inc
popf
rcl
xlat
aas
xchg
lea
sar
mov
mov
fist
stos
out
and
sbb
lods
push
mov
jg
retf
rsqrtps
xor
xchg
xor
add
jae
aaa
adc
mov
xlat
fwait
mov
int
cmp
xchg
sbb
hlt
add
pop
test
in
xchg
out
test
int
adc
(bad)
sbb
dec
xchg
movs
into
inc
xor
movs
lock
sbb
retf
es
retf
(bad)
je
mov
mov
mov
(bad)
stc
ins
push
jmp
popf
call
xchg
xchg
stos
sbb
sub
loop
outs
sbb
mov
push
fcmovbe
fisubr
mov
scas
dec
xor
jecxz
adc
je
sbb
push
imul
jno
out
rol
inc
dec
add
cdq
hlt
je
or
mov
add
ja
sub
fimul
sbb
loop
inc
mov
stc
shl
inc
(bad)
push
scas
aam
fcomip
pop
mov
lock
int3
add
jno
jge
js
add
loope
psllq
mov
push
addr16
jecxz
ds
repz
fistp
inc
inc
repnz
add
loop
jmp
inc
popa
adc
cmps
lock
xor
daa
arpl
cdq
ins
xor
sub
std
inc
clc
or
or
mov
sbb
shr
sbb
mov
jnp
mov
xchg
test
inc
jno
les
hlt
mov
cmp
repnz
pop
loop
repnz
cmp
mov
mov
cli
test
rcr
jmp
push
retf
mov
cmp
ja
adc
jbe
fst
loop
sbb
push
out
jmp
xchg
sub
repz
xor
popf
pop
addr16
dec
add
dec
xor
dec
jo
daa
(bad)
iret
push
ja
lods
xchg
mov
pushf
mov
cli
adc
call
(bad)
into
ror
stos
mov
stos
lock
mov
mov
mov
or
bound
movs
dec
pop
fst
adc
(bad)
rol
popf
xlat
adc
jmp
or
jo
and
jbe
xor
cmp
pop
xchg
stos
rcr
mov
popf
adc
xor
dec
out
int
je
or
(bad)
stos
sbb
mov
jbe
xor
mov
xchg
aad
or
or
or
cld
and
or
(bad)
cld
enter
call
std
jo
and
(bad)
(bad)
inc
jle
push
in
cmps
test
fst
inc
js
ret
das
inc
bound
fldcw
stos
inc
adc
gs
jl
(bad)
cmp
repnz
mov
mov
jmp
gs
ret
fwait
clc
sbb
lock
fist
push
xor
je
adc
mov
test
xchg
jge
into
test
or
dec
jbe
js
inc
mov
mov
push
and
xchg
pop
cmp
repnz
jecxz
inc
(bad)
sub
fisubr
xchg
aam
nop
stos
jbe
lds
add
movs
test
mov
in
popa
sbb
outs
pushf
call
test
push
movs
sbb
aas
in
mov
out
or
sahf
ins
inc
push
xchg
cli
cs
mov
jle
push
or
cmps
bound
pop
adc
jl
je
ins
xor
and
inc
pop
jno
mov
cmp
test
or
push
in
fld
or
stc
int3
or
jmp
lods
imul
call
cmps
cmps
inc
mov
or
test
inc
push
mov
xor
xchg
and
cdq
mov
xor
int3
add
scas
in
mov
icebp
jnp
loop
push
inc
dec
dec
mov
movs
(bad)
push
push
ja
fbstp
pop
scas
add
and
push
neg
jle
xchg
jne
cmp
inc
mov
jno
in
dec
pushf
and
mov
imul
mov
sbb
loop
out
adc
xor
bound
ret
pusha
xor
dec
push
mov
mov
cdq
push
out
and
daa
dec
enter
inc
jae
and
scas
mov
fisubr
jle
jnp
xor
sub
add
mov
call
pop
imul
retf
cmp
cwde
les
xchg
jge
and
jp
std
(bad)
daa
xchg
fwait
xor
xchg
lahf
cmp
or
push
adc
pop
jge
loopne
pop
sbb
adc
pop
push
js
or
pop
xlat
adc
retf
(bad)
data16
inc
repnz
out
retf
mov
addr16
mov
push
mov
scas
adc
stos
sub
addr16
(bad)
hlt
jge
xchg
adc
call
cmp
repz
xchg
mov
xchg
cli
sub
mov
mov
in
mov
mov
ret
mov
xchg
movups
in
dec
mov
ins
jb
adc
pop
jnp
aad
aaa
mov
mov
es
repz
adc
repnz
fwait
pop
loopne
cmp
pop
mov
fist
imul
enter
dec
fadd
jns
ficomp
pushf
xor
pushf
stc
add
out
es
shl
and
inc
and
push
cmp
popa
scas
sub
and
shr
in
enter
add
add
mov
jge
mov
pusha
ds
fisubr
fs
(bad)
fs
mov
and
jle
leave
push
inc
enter
ja
cmp
and
out
in
loope
addr16
jecxz
inc
mov
les
mov
retf
cld
mov
int3
lea
ss
iret
dec
mov
mov
movs
rol
mov
mov
add
dec
lea
mov
int3
leave
adc
cmp
ret
adc
ret
sub
or
pop
mov
xor
push
data16
std
loope
aam
inc
jbe
inc
in
mov
nop
and
push
mov
pop
gs
pusha
pop
out
pop
mov
lea
and
or
loop
inc
and
loopne
adc
inc
inc
mov
mov
sbb
stos
loope
stc
std
dec
mov
rcl
loopne
dec
das
movs
push
imul
sub
xchg
or
loopne
sar
jg
cwde
mov
sbb
add
cmp
sar
cmp
sahf
jmp
jne
jo
sub
mov
stos
retf
push
sub
adc
pop
push
push
pusha
inc
sar
jg
enter
add
mov
mov
daa
mov
push
retf
jmp
test
lea
les
and
data16
movs
(bad)
jbe
pop
mov
xor
int3
mov
or
xchg
(bad)
xor
call
or
in
cmc
std
xchg
or
(bad)
mov
cdq
xor
test
out
stos
gs
cmp
sbb
xor
sub
inc
retf
lea
mov
cli
mov
xor
xchg
sbb
dec
loop
xchg
mov
xor
mov
mov
scas
adc
mov
jb
mov
(bad)
shl
jno
retf
dec
or
not
aam
cmc
(bad)
mov
sahf
mov
shl
(bad)
in
cld
loopne
jge
jecxz
sti
xor
mov
mov
es
addr16
mov
jecxz
sbb
arpl
cli
add
lock
mov
sub
dec
inc
push
or
mov
push
mov
or
aas
aad
mov
in
add
ins
ret
fs
(bad)
sub
sahf
mov
pop
push
gs
fadd
and
test
sub
scas
movs
push
inc
in
inc
out
cmp
inc
add
int3
sub
dec
gs
or
add
(bad)
mov
dec
fdiv
ror
jge
jbe
adc
push
and
xchg
push
jg
js
mov
jae
pop
mov
mov
fld
(bad)
fisubr
(bad)
int3
(bad)
mov
jge
jp
out
jnp
out
xlat
idiv
loop
inc
jae
xor
sub
movs
(bad)
mov
dec
mov
stc
sub
add
loope
pop
mov
push
push
and
rol
ror
xchg
xor
xchg
sub
ret
xlat
das
mov
sbb
pop
cwde
mov
and
dec
cmp
stos
mov
cwde
xor
iret
dec
into
pop
mov
mov
js
dec
sub
mov
push
lods
push
and
inc
push
push
mov
js
xor
add
out
jecxz
fild
cli
or
sub
ret
jb
mov
xchg
jecxz
mov
push
(bad)
jnp
js
sar
pop
(bad)
sar
add
repz
(bad)
sahf
jmp
mov
xchg
or
cld
jmp
and
into
sbb
(bad)
push
inc
pop
das
adc
and
arpl
adc
or
pop
rol
xchg
in
and
pop
mov
jmp
(bad)
inc
adc
ins
sub
dec
push
xchg
sub
retf
setle
sbb
and
popa
ins
outs
dec
test
mov
(bad)
mov
fimul
pop
loopne
test
retf
ror
push
test
(bad)
xchg
add
mov
test
inc
and
adc
or
les
or
bound
lods
fnstenv
cdq
out
aad
jmp
das
mov
out
dec
cmc
rol
push
cwde
mov
inc
pop
(bad)
fldcw
pop
cmp
xor
(bad)
fisub
xor
cmovl
ret
mov
xor
mov
scas
xor
imul
ins
inc
mov
repnz
repnz
mov
rcr
mov
add
pop
shl
push
lods
addr16
xchg
dec
in
clc
stc
pop
xchg
and
ret
mov
xchg
jno
std
push
pop
xor
pop
lods
dec
icebp
jl
jecxz
cwde
lods
jp
cmp
cld
pop
call
push
stc
push
xchg
(bad)
cmp
mov
cmc
xor
jecxz
and
xchg
jecxz
add
sub
pop
xchg
add
dec
jmp
lods
popa
mov
ss
mov
and
sub
mul
cmp
(bad)
and
out
out
xchg
ins
jbe
ret
xor
mov
push
dec
sub
lods
xor
stc
sbb
xchg
sbb
idiv
mov
push
push
mov
mov
pop
pop
js
pop
outs
cmp
or
mov
pusha
mov
les
cmp
mov
test
or
dec
xor
mov
test
dec
(bad)
fidiv
jge
fimul
and
ss
mov
add
pop
mov
js
outs
bound
ror
pushf
mov
mov
pop
sbb
adc
pushf
adc
dec
clc
test
mov
fcom
xchg
fst
xlat
popa
fist
test
in
mov
test
sbb
(bad)
dec
pop
xchg
call
in
cmps
dec
push
jmp
shr
xor
pop
sub
inc
add
mov
or
cmp
sub
ror
test
dec
add
js
call
cmps
pushf
or
sub
push
mov
test
lods
ret
sbb
pop
cdq
sbb
les
cdq
std
call
pop
dec
movs
push
jl
dec
fld
call
scas
nop
popf
mov
sub
(bad)
(bad)
in
rcl
je
mov
nop
stc
out
adc
fidiv
push
iret
xchg
sub
xor
push
push
mov
lock
cmc
push
cmp
int
dec
cmp
fadd
leave
or
jnp
push
push
push
xchg
cmc
clc
fadd
ret
test
mov
xor
call
mov
leave
mov
(bad)
xchg
sub
les
jne
fst
add
mov
(bad)
(bad)
mov
frndint
stc
pop
bound
xchg
adc
outs
sar
push
jmp
pop
pop
outs
and
sub
sub
test
mov
mov
cmp
cwde
dec
cdq
or
mov
lods
mov
aaa
mov
sbb
inc
xchg
jmp
cwde
sbb
mov
pop
movs
fcom
js
push
stos
sbb
cmovg
sub
repnz
adc
inc
ror
call
xchg
std
mov
cdq
add
loopne
or
in
in
or
hlt
cld
test
hlt
ror
rcr
mov
cmp
sar
inc
lods
mov
test
popa
test
rcl
xchg
or
hlt
clc
and
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
sahf
add
xor
add
in
rol
loopne
xchg
adc
loopne
xchg
add
call
xchg
or
out
imul
call
call
xchg
add
call
cdq
adc
loopne
cdq
add
mov
imul
push
aam
jp
das
fs
push
iret
xchg
fiadd
(bad)
mov
push
adc
test
popf
fisttp
jle
jge
mov
or
test
pop
rcl
add
mov
lds
mov
and
mov
cmp
mov
js
(bad)
sub
inc
mov
add
cld
add
icebp
add
push
inc
or
inc
or
cmp
sbb
pop
mov
mov
cmps
stc
inc
or
sub
loope
jl
push
sbb
and
push
fwait
mov
and
cwde
add
js
rol
out
xor
sar
fidiv
repnz
add
stos
dec
add
fdiv
adc
test
pop
mov
and
stos
retf
cmp
push
sub
ds
or
fstp
(bad)
lock
scas
pop
or
dec
fiadd
loop
fnsave
and
mov
pusha
shl
mov
jno
mov
sub
mov
ds
add
sbb
and
mov
stos
popf
push
cmp
mov
(bad)
and
pusha
fdivr
cmps
(bad)
mov
mov
xor
je
jg
push
mov
jae
fld
adc
das
stos
cmp
fstp
jmp
push
cs
push
xor
jge
or
pop
push
jmp
cdq
xchg
cmp
xchg
cld
pop
fsub
out
xor
test
imul
pushf
push
lods
and
xchg
(bad)
repnz
dec
push
add
jmp
mov
ss
sti
mov
xor
(bad)
adc
dec
scas
lea
mov
pop
mov
dec
and
mov
mov
hlt
cmp
dec
dec
lahf
push
cld
(bad)
sar
icebp
dec
out
jo
mov
out
push
jge
dec
jbe
jns
jo
nop
mov
rcr
std
ret
push
dec
mov
ret
mov
cmp
mov
sbb
mov
sbb
sub
ins
or
fimul
xlat
retf
xor
lods
and
test
out
bound
inc
stos
xor
dec
aam
jmp
push
mov
imul
jl
loop
iret
mov
or
call
clc
xchg
popf
mov
adc
test
add
mov
int
jo
mov
pusha
call
aad
loopne
lahf
adc
test
std
lock
inc
loopne
cdq
add
loopne
or
loopne
xchg
add
in
adc
call
aad
mov
push
inc
aad
loope
push
enter
in
or
and
enter
pop
out
mov
mov
ins
data16
call
mov
rcl
ror
xchg
xchg
leave
mov
sahf
sub
add
call
mov
jo
mov
mov
rcl
xor
dec
pop
mov
add
adc
(bad)
jecxz
mov
pop
enter
dec
xor
mov
in
fistp
mov
in
adc
fidiv
jmp
aam
push
aaa
fmul
into
push
push
retf
pop
xor
sbb
push
jecxz
mov
mov
(bad)
sbb
test
fucomip
movs
jp
push
in
inc
pushf
push
mov
sub
retf
sub
and
fs
inc
cmc
cmps
cmc
lds
xor
test
into
iret
adc
daa
pop
pop
adc
jp
movs
into
xchg
pop
sbb
push
mov
inc
sbb
mov
iret
dec
mov
cmp
inc
setle
leave
sbb
mov
leave
cmps
add
inc
test
mov
test
iret
mov
popf
fldenv
adc
or
lock
fnstcw
push
mov
test
mov
xchg
and
mov
out
add
ds
push
pop
push
cmps
addr16
ror
xchg
sbb
stos
sub
cmp
loope
fidivr
fisubr
fmulp
mov
dec
mov
dec
into
data16
xor
cmc
sub
lea
outs
jne
pop
add
daa
loopne
push
add
sti
pop
lahf
es
dec
pushf
xchg
test
push
cli
shl
(bad)
pextrw
sbb
or
add
dec
jno
outs
mov
or
aas
int
(bad)
or
xlat
jb
scas
sub
mov
mov
inc
push
cld
xchg
mov
add
ss
fwait
push
cmp
mov
sbb
dec
xchg
sbb
and
neg
cmp
mov
icebp
add
pop
mov
hlt
mov
es
mov
pop
dec
out
sub
cmp
cmp
mov
xor
outs
idiv
addr16
dec
pop
mov
pop
loopne
or
movs
cmp
hlt
jb
add
pop
test
ja
mov
ins
inc
push
push
mov
loopne
pop
jb
add
lods
mov
cs
fwait
push
sbb
push
or
dec
ds
mov
xchg
push
cmp
ja
mov
scas
int3
mov
sub
mov
fwait
retf
stc
cmp
xor
ror
xor
push
xchg
pop
outs
clc
lods
test
sti
jbe
test
jmp
cmp
or
cmp
mov
xchg
cwde
adc
(bad)
mov
iret
sub
cmp
js
mov
cmp
cmp
push
push
call
ins
xlat
dec
fcmove
push
dec
sbb
adc
pop
(bad)
and
popa
std
loopne
inc
or
jg
pop
cmps
xchg
push
test
(bad)
fst
jle
dec
mov
mov
adc
pushf
push
sbb
cwde
mov
lahf
cld
loopne
repz
fimul
shl
cmp
sahf
add
push
or
xchg
nop
rol
adc
shr
rcl
push
xchg
pop
sbb
xchg
test
in
in
adc
loopne
add
call
popf
add
lods
fst
fs
dec
in
adc
shr
xchg
and
in
add
int
add
xchg
je
mov
push
or
push
push
sahf
out
popf
pusha
sub
daa
pop
(bad)
div
mov
mov
stc
inc
aam
in
aam
dec
xchg
mov
inc
add
jno
mov
mov
mov
loopne
gs
mov
fcmovnb
sbb
xchg
adc
cwde
xchg
mov
inc
lea
cmps
push
push
cmp
lods
aam
aaa
and
cwde
xchg
ret
fucom
jge
cmc
cmp
add
cdq
push
pop
sbb
inc
xchg
xor
mov
xchg
jo
or
in
pop
sbb
xchg
adc
sub
cmps
jnp
pusha
mov
dec
fs
xor
sar
mov
push
fdiv
and
xor
fs
dec
mov
fidiv
ins
hlt
rol
inc
(bad)
fdiv
dec
pop
jmp
mov
mov
xchg
add
or
xchg
xor
test
pop
adc
push
add
arpl
icebp
clc
jo
mov
ror
shl
fsub
ficom
call
retf
lock
rcr
ffreep
das
scas
xor
sbb
dec
pop
dec
mov
xchg
inc
rol
int3
fist
fcmovbe
mov
xchg
jbe
sub
retf
jo
adc
pop
jmp
into
jmp
pop
inc
sbb
jb
test
retf
push
dec
mov
retf
test
xor
mov
lea
xchg
mov
(bad)
cld
pop
mov
sbb
lods
pop
mov
xchg
(bad)
in
adc
gs
fld
dec
and
mov
and
stos
es
dec
lock
sti
sbb
cmp
push
iret
scas
cmp
aad
pop
repnz
mov
popf
or
cmc
or
fmulp
cdq
mov
xchg
ins
inc
mov
in
lea
xchg
ss
rol
xor
jmp
dec
sbb
mov
or
rcr
push
mov
(bad)
pop
mov
pop
rol
popf
dec
dec
test
pop
mov
test
sub
lods
les
xchg
lds
sub
out
or
retf
jnp
sub
dec
ret
mov
cmp
add
retf
sbb
outs
dec
xor
lods
mov
out
sub
cmp
test
jb
xchg
frstpm(287
xchg
fstp
daa
out
push
sbb
xchg
and
add
in
cld
xchg
add
call
test
ins
push
dec
cmc
test
add
pusha
loopne
mov
sub
add
jmp
add
in
jp
dec
adc
or
push
sbb
push
and
js
cs
dec
es
xor
out
and
(bad)
mov
clc
scas
out
scas
dec
dec
dec
fistp
pusha
mov
outs
les
lds
xchg
paddb
fimul
or
in
xchg
and
mov
shl
js
xchg
cmp
xchg
cmp
(bad)
jo
data16
xchg
xor
mov
xor
scas
push
lea
hlt
int3
pop
xor
xchg
(bad)
fdiv
std
fwait
dec
push
addr16
push
pusha
mov
pushf
add
jmp
xchg
(bad)
add
(bad)
cld
pusha
lods
xor
xor
(bad)
(bad)
jecxz
stc
push
jecxz
retf
mov
xchg
mov
cdq
call
mov
call
push
test
mov
mov
fs
(bad)
mov
sti
pop
test
push
mov
mov
xchg
into
je
sti
mov
xor
push
je
and
cdq
jbe
and
and
mov
inc
xor
fsub
cmp
and
mov
dec
fcom
psubusb
sbb
cmp
jle
xchg
sbb
aaa
push
add
iret
or
cli
shr
mov
aaa
jl
inc
test
dec
test
adc
cmps
adc
iret
scas
xor
jae
cli
test
inc
(bad)
pop
adc
bound
mov
adc
call
je
xchg
aam
ins
leave
call
mov
cmp
lods
cwde
fcomp
sub
sbb
xor
and
das
arpl
sub
daa
push
ins
shl
bound
bound
repnz
mov
fst
and
movs
inc
xor
outs
cmps
cmp
jg
xor
sub
test
cmps
xchg
jne
mov
add
bound
mov
cmp
clc
push
imul
mov
and
sar
ds
call
push
(bad)
sbb
xchg
sbb
mov
mov
pop
pusha
pop
push
cld
into
sbb
leave
pushf
(bad)
aas
ficomp
ins
pushf
cmp
dec
or
xor
and
inc
or
icebp
pop
shr
ret
mov
sub
mov
jne
icebp
lahf
pop
iret
movs
out
dec
cmps
xor
and
scas
sar
dec
in
cmp
inc
pop
pop
dec
pusha
or
xchg
call
mov
adc
jge
sbb
jbe
or
sbb
pop
imul
or
mov
call
xchg
popf
inc
into
pusha
in
jnp
cmp
jecxz
mov
or
leave
sbb
jbe
rol
cmp
adc
sub
sub
xor
fld
mov
push
jl
(bad)
pusha
push
mov
call
xor
push
std
mov
test
pushf
loope
ret
or
call
pop
sar
jmp
fisub
in
cmp
popf
jbe
fcom
xchg
cmp
call
test
adc
or
popf
data16
aad
aas
or
mov
out
pop
dec
pushf
mov
ins
xchg
sbb
ds
pushf
js
cmp
mov
mov
repnz
outs
test
loop
cmp
jne
std
jge
pop
jmp
and
rcl
stos
pop
cli
add
push
or
jnp
sahf
ret
movs
and
and
xor
fstp
pop
xor
daa
ja
in
enter
data16
stos
push
sub
pop
aam
adc
shr
sbb
int
mov
mov
(bad)
mov
aaa
add
jmp
and
ds
dec
ja
sbb
cmps
mov
xlat
hlt
rol
je
jmp
and
pop
xchg
clc
test
cdq
adc
ror
loopne
xchg
or
call
(bad)
and
adc
popf
dec
out
xchg
inc
mov
sub
push
push
je
inc
aad
loope
(bad)
loop
cwde
dec
test
inc
shr
add
adc
jmp
pusha
ret
inc
jecxz
sub
outs
repnz
dec
inc
jbe
add
jecxz
cdq
rol
jge
xchg
sub
ds
mov
imul
inc
(bad)
in
sbb
scas
mov
mov
push
xchg
xor
enter
(bad)
dec
cmp
pop
fidiv
daa
in
clc
and
mov
inc
push
out
pop
test
js
xor
std
pop
cs
dec
sub
movs
dec
pop
(bad)
int
pop
es
push
and
lods
mov
lock
fsubr
test
inc
jmp
not
push
sbb
retf
test
(bad)
mov
mov
adc
jl
aaa
and
pop
out
dec
fistp
xor
rol
int3
pop
push
pushf
aam
outs
pop
and
cmp
inc
movs
add
(bad)
jnp
cmp
out
mov
ss
shr
jg
sar
iret
in
mov
mov
push
push
ja
aad
sbb
in
mov
cmc
out
stos
adc
and
xor
cwde
mov
addr16
popf
popf
fisubr
and
lea
enter
je
sti
nop
ja
in
adc
aas
(bad)
mov
repnz
pop
push
mov
jne
pop
aaa
inc
mov
pop
outs
push
cs
inc
dec
dec
and
adc
xchg
and
or
dec
pop
adc
stos
or
or
jno
in
pop
mov
cmc
popa
sbb
ror
ins
pop
jp
inc
f2xm1
iret
fisubr
repnz
fwait
cs
jg
mov
test
or
xchg
rcl
mov
xor
mov
shl
aad
ds
idiv
ror
inc
push
out
pop
xchg
push
loope
call
jge
cmp
mov
dec
addr16
sbb
ds
stos
jl
push
(bad)
nop
pop
addr16
movs
shr
scas
mov
in
test
in
aas
pusha
repz
jg
cmp
into
repnz
icebp
add
outs
sub
inc
add
loop
jle
push
(bad)
rcl
mov
jmp
cmp
or
cmp
clc
movs
stos
pop
das
lahf
cmc
mul
sbb
push
movs
and
icebp
mov
add
or
pop
sub
push
fldenv
xor
sti
ss
or
aad
arpl
dec
pop
inc
int
inc
lods
mov
cmps
test
frstor
and
jp
out
inc
fwait
jg
(bad)
xor
add
test
fprem1
sub
jp
mov
dec
sar
mov
addr16
dec
in
xchg
adc
(bad)
in
xor
jmp
outs
push
test
and
clc
test
add
shr
sahf
(bad)
mov
into
sbb
jl
push
mov
fisttp
xor
int
(bad)
jnp
sub
dec
mov
push
loopne
sub
or
shl
xchg
shl
sbb
int
js
out
jecxz
out
pop
outs
mov
xor
(bad)
fdiv
mov
add
cmps
std
mov
leave
sbb
jb
adc
cld
sbb
lods
adc
xor
xchg
dec
sbb
add
pop
pop
push
pop
mov
mov
mul
in
inc
cld
adc
popa
fcmovb
pop
mov
lods
push
shr
mov
cs
(bad)
call
daa
stos
push
in
leave
mov
adc
fwait
rol
in
and
inc
inc
jg
xchg
retf
lods
in
dec
sub
(bad)
cmps
leave
pop
pop
add
cwde
mov
inc
add
ds
loop
jle
imul
jne
test
push
(bad)
dec
ret
mov
sbb
fisttp
or
popa
imul
call
ja
les
out
mov
push
cmp
xlat
test
push
mul
mov
mov
jb
(bad)
f2xm1
mov
add
lds
lds
iret
xchg
fbld
bound
and
mov
fwait
in
(bad)
cli
sbb
mov
push
fnstsw
popa
daa
rcl
outs
bound
mov
jbe
sar
mov
jns
ret
rol
cmp
shl
and
js
jae
mov
inc
ins
dec
imul
mov
invd
and
xlat
rcl
jb
iret
jl
loopne
iret
sbb
push
inc
or
inc
mov
pop
in
mov
push
sbb
or
xor
sbb
and
fs
pop
mov
cmp
cmp
inc
jg
pop
in
cmps
push
lahf
sub
dec
mov
test
jmp
ret
xor
cmc
loop
jp
add
stos
out
push
aam
mov
and
retf
ror
mov
xlat
lea
cmp
push
push
fsubr
pop
repz
add
test
cmp
out
mov
movs
cdq
dec
aas
mov
pusha
test
div
pop
ss
pop
adc
pop
ret
(bad)
sub
jbe
out
ret
lock
retf
mov
dec
add
pop
idiv
mov
sub
in
xchg
inc
and
push
scas
pop
dec
aaa
jo
push
jl
jg
sbb
nop
cdq
and
push
jb
loopne
xor
not
rol
fsin
mov
pop
sbb
(bad)
jge
xchg
pusha
and
aaa
and
call
jb
das
mov
jne
and
cmps
or
ss
ins
fisttp
shr
repz
jns
sti
in
mov
pshufw
fs
into
les
inc
push
cmp
add
and
push
je
test
adc
stc
inc
dec
outs
bound
sub
or
sbb
cmp
dec
movs
mov
adc
pop
mov
pop
fidiv
(bad)
pop
call
int3
sub
mov
dec
mov
inc
cmps
stos
sbb
data16
inc
cmp
or
cmp
std
sar
aas
and
call
jl
jbe
adc
adc
out
(bad)
lock
sub
ss
rcr
enter
cmp
shl
sub
and
adc
call
cmp
sbb
xor
pop
ja
mov
jno
pop
ret
mov
jne
ficom
or
inc
pop
dec
push
popf
std
and
jae
add
ficomp
cmps
cmps
xchg
jle
xor
sbb
mov
mov
push
retf
xchg
(bad)
mov
(bad)
idiv
dec
test
sbb
icebp
push
nop
jnp
clc
jmp
stos
mov
popa
fild
lods
inc
jle
arpl
pop
sti
or
fistp
fisubr
pop
in
add
jge
or
clc
push
pop
(bad)
adc
neg
jno
das
and
cmp
xor
xor
in
mov
add
jb
aad
add
popa
dec
out
pop
in
in
cmps
mov
test
jl
idiv
js
dec
pop
sub
rcl
cmp
add
fmul
dec
fs
retf
repz
lods
inc
in
xor
cmps
mov
jno
push
sbb
mov
repnz
div
sbb
lock
pop
sti
call
pop
adc
lahf
std
mov
and
or
call
jns
cmp
cli
pop
dec
and
mov
mov
retf
cmp
and
mov
cmp
and
pop
mov
xchg
push
scas
mov
lock
add
jl
stos
lock
and
cmp
sbb
push
and
je
call
stos
mov
dec
dec
or
popf
cdq
in
ror
jge
std
and
xchg
call
cmp
pop
mov
xchg
jbe
add
pop
int
and
jge
test
mov
xchg
mov
arpl
xchg
lds
stos
jg
loop
imul
pop
push
dec
stc
dec
adc
imul
scas
mov
rol
mov
sub
add
fwait
xor
push
push
ja
xchg
sub
mov
loop
mov
enter
shl
sub
xor
int3
popf
xchg
jbe
cwde
bound
call
mov
or
aad
add
push
fbstp
jle
imul
shl
mov
mov
adc
(bad)
pop
adc
add
mov
scas
jo
pop
out
adc
ins
xchg
push
sbb
xchg
movs
mov
in
cdq
adc
in
add
loopne
rol
gs
inc
sub
fs
inc
out
rol
mov
mov
in
xchg
std
sbb
pushf
idiv
in
and
aad
lea
sub
loop
mov
jnp
sbb
(bad)
pop
and
in
cmc
mov
lods
sahf
call
rcl
icebp
and
mov
xchg
sub
mov
pop
mov
or
add
and
ss
sar
hlt
call
or
cmps
or
fstp
mov
loopne
xor
enter
pop
jg
mov
cmp
movs
xor
xchg
mov
imul
scas
push
pusha
dec
mov
mov
mov
sub
or
fistp
(bad)
jb
inc
out
dec
dec
inc
shl
cmps
sub
cmp
xor
push
aaa
out
xchg
out
mov
fidivr
out
mov
fisubr
scas
or
xor
jnp
cmp
outs
fnstenv
mov
fstp
aam
jg
add
push
jp
mov
retf
inc
lods
bound
pusha
out
or
mov
cmp
push
ss
(bad)
add
jle
xor
mov
sbb
call
jmp
mov
(bad)
in
jp
scas
nop
retf
(bad)
cld
dec
sbb
dec
xor
add
dec
mov
jmp
mov
jbe
out
mov
or
movs
nop
add
mov
cmp
addr16
mov
fist
cwde
fidivr
fwait
adc
mov
add
inc
add
loope
and
push
out
ss
mov
xlat
fs
inc
fldenv
cmp
xchg
fsubr
out
jo
ins
fbstp
test
cmp
ss
mov
mov
loopne
xor
stos
sub
(bad)
mov
aas
cmp
movs
cmp
aaa
push
adc
mov
fxch
sbb
out
ins
retf
shl
xor
test
inc
shl
retf
pop
mov
enter
ret
lock
adc
stos
inc
or
and
cs
gs
movs
icebp
xchg
rcl
movs
in
jge
jmp
shr
stc
jnp
rcr
push
push
ins
retf
movs
add
jmp
out
and
xor
ja
jns
dec
movs
pop
mov
pushf
fld
rcr
xchg
call
push
pop
jmp
ss
(bad)
(bad)
mov
js
push
dec
call
lahf
gs
pusha
add
fidiv
jmp
push
or
add
inc
aad
stos
inc
fdivr
push
xchg
add
xchg
jnp
adc
and
out
cdq
rcr
and
test
nop
inc
in
fidivr
mov
daa
sub
in
cmp
in
mov
ja
cs
pop
cmp
cmp
jnp
mov
mov
inc
stos
shl
lock
jne
mov
cmps
xchg
mov
ja
fist
rcl
(bad)
pop
push
iret
cmp
sbb
and
cmp
cmc
mov
sub
adc
push
(bad)
mov
mov
xchg
and
int3
jmp
stos
lock
or
(bad)
aad
ja
push
xchg
xchg
mov
jae
das
fldcw
lods
rol
pop
sub
and
aas
inc
outs
fcmovnu
mov
or
bound
inc
aaa
adc
xchg
lea
xor
out
rol
rcr
imul
mov
dec
icebp
push
xor
shr
les
clc
(bad)
loopne
repnz
fs
aam
push
jne
push
clc
inc
xor
push
arpl
mov
mov
push
fwait
mov
ffree
jmp
add
xor
repnz
mov
sub
pop
inc
mov
cwde
clc
in
repnz
ret
jno
(bad)
cmp
(bad)
push
loop
push
pop
mov
cmps
and
dec
loopne
add
dec
scas
dec
iret
jnp
daa
(bad)
lods
sub
xchg
adc
lods
movs
lock
dec
sbb
outs
(bad)
movs
sub
pop
push
enter
leave
in
sub
lods
int
aam
call
mov
push
ins
jns
in
jge
sti
add
je
push
ret
xchg
(bad)
int3
pop
cmp
mov
popf
mov
mov
sbb
push
in
and
pop
mov
cmp
mov
outs
jge
gs
mov
adc
sub
sti
xchg
in
mov
jae
call
ret
data16
jmp
mov
jmp
sbb
adc
adc
jp
pop
imul
(bad)
mov
add
fcom
mov
mov
fstp
or
push
mov
inc
jnp
pop
mov
ret
(bad)
aam
mov
push
lahf
shl
test
mov
(bad)
ja
call
sub
outs
jbe
push
out
mov
or
aam
cdq
push
ins
repnz
jb
push
pop
cdq
mov
lock
mov
(bad)
popa
movs
fbstp
xchg
int3
mov
push
pop
xchg
adc
mov
stos
jmp
cmp
retf
in
xchg
xor
xchg
test
call
adc
out
aas
pop
lock
push
cmps
stc
jne
js
push
pop
js
cmp
(bad)
xor
fcom
or
and
inc
xchg
fist
lock
push
xor
loope
repnz
leave
or
xchg
dec
pop
rcl
daa
pop
scas
push
lods
lea
stc
arpl
(bad)
loopne
jle
repnz
daa
pop
add
lss
sbb
mov
and
lods
push
pop
cwde
cs
fwait
adc
lea
pop
test
mov
jge
push
fsubr
sahf
push
adc
iret
mov
dec
cs
sbb
dec
cwde
(bad)
jnp
lahf
dec
sbb
hlt
fidivr
call
xor
push
pop
retf
in
mov
dec
sub
jnp
push
adc
cld
ins
mov
push
fsub
mov
data16
scas
mov
leave
push
pop
cmp
mov
xor
xchg
or
cmp
sub
and
xor
and
add
inc
ins
xlat
push
pop
xchg
mov
outs
adc
mov
mov
ds
mov
jbe
pusha
movs
shr
loopne
aas
(bad)
push
mov
lods
shl
add
mov
inc
jns
jb
sar
pop
pcmpgtw
lock
lods
jno
mov
sbb
jge
mov
jle
push
fisub
xor
jg
ds
jno
or
adc
push
mov
pop
cdq
jmp
pop
call
into
sbb
pop
inc
and
sbb
inc
in
jmp
sysenter
leave
dec
or
push
lahf
cld
ins
rol
mov
lods
jmp
scas
mov
cmc
icebp
sahf
inc
push
adc
xchg
clc
aaa
(bad)
cmp
lock
dec
cs
or
and
or
out
lds
dec
call
xchg
add
test
outs
inc
(bad)
push
arpl
int
add
inc
inc
or
mov
ret
jg
and
ja
jmp
es
test
out
add
inc
push
in
mov
mov
dec
iret
icebp
or
outs
cwde
mov
xchg
mov
push
addr16
cmp
xor
cmp
xchg
lahf
lods
inc
loop
dec
test
fsubr
xchg
add
call
xchg
jo
xchg
add
loopne
or
loopne
add
loopne
xchg
add
test
adc
jecxz
push
dec
in
xchg
std
mov
mov
add
add
jl
movs
sub
data16
lock
mov
in
or
add
add
cmc
mov
lods
test
in
ja
fs
test
mov
push
int
shl
adc
pop
lock
in
dec
into
push
pop
mov
mov
cmp
les
add
rol
shl
adc
and
mov
popa
or
sbb
xchg
mov
retf
stos
dec
fadd
mov
xchg
pusha
push
retf
call
enter
std
and
movs
pop
mov
fld
mov
jae
adc
(bad)
lock
retf
cdq
mov
xor
pop
mov
adc
enter
cmp
ror
pop
cmp
inc
ins
mov
rcl
cmps
pop
(bad)
cmp
cmps
icebp
popf
in
leave
stos
std
test
lock
adc
jae
xor
inc
push
sub
shr
hlt
mov
jno
and
mov
in
iret
stc
inc
leave
sbb
nop
retf
jbe
jecxz
dec
mov
ins
mov
and
or
add
ins
xchg
xor
stc
(bad)
fwait
popa
stc
cmp
mov
fs
sub
sbb
fsubr
call
xlat
or
and
xchg
xor
push
xor
call
jno
pop
call
aas
pop
mov
inc
scas
push
fcomp
sub
std
icebp
loope
mov
ss
and
inc
out
repnz
inc
jle
add
std
inc
jbe
(bad)
xchg
les
add
ss
or
xchg
xchg
loop
out
into
js
sub
(bad)
dec
push
rol
std
fcom
xor
or
int
push
cmp
fisub
mov
cmp
mov
movs
jb
xor
sub
ror
xchg
shl
and
adc
and
inc
stos
and
leave
cwde
nop
mov
movs
shl
ins
xor
std
push
sub
adc
clc
gs
and
test
pop
and
sub
mov
loopne
rol
in
clc
xchg
adc
in
xchg
add
call
adc
in
adc
mov
imul
sub
add
in
popf
add
fdiv
mov
inc
jmp
or
loope
cmp
pop
sar
(bad)
loop
fnstcw
mov
cmp
stos
cs
cmp
sbb
lahf
stos
xor
sub
test
jecxz
jmp
jge
loope
inc
(bad)
test
pop
sbb
out
lahf
aad
mov
mov
mov
ret
sub
das
in
popf
pop
(bad)
jbe
aad
ins
(bad)
movs
add
in
aas
mov
loope
repnz
pop
das
inc
add
sbb
pop
leave
clc
fwait
xor
fnstcw
cld
loop
ror
arpl
int
mov
cmp
call
leave
je
sbb
stos
ins
xchg
ds
ret
scas
adc
das
push
jo
sub
push
nop
push
cwde
adc
inc
sbb
iret
inc
movs
es
sbb
mov
push
jmp
loope
xchg
int
call
jo
in
icebp
jmp
cmc
mov
cmp
aam
iret
adc
cmp
iret
imul
cs
movs
mov
or
and
xchg
ja
mov
jle
fistp
cmp
add
jne
inc
dec
xor
sub
mov
adc
or
ja
outs
xchg
sbb
push
jns
call
cmp
rcr
retf
pop
test
adc
ins
xchg
mov
cwde
movs
mov
add
pop
popf
je
mov
mov
(bad)
mov
popf
stos
in
mov
sub
or
sub
mov
xchg
fcomp
leave
push
mov
mov
in
imul
shl
ret
mov
(bad)
jo
jmp
popf
shr
imul
pusha
ins
adc
mov
fnstcw
pop
int
xchg
inc
movs
pop
pop
cmp
xor
pop
dec
aas
cmc
jnp
mov
int
rcr
test
mov
mov
mov
movs
loop
mov
pusha
push
gs
add
fisttp
fld
ss
xchg
ds
or
inc
popa
clc
in
push
pop
jge
adc
fsubr
stc
fdivrp
inc
adc
loop
lods
jmp
lods
repz
add
sbb
pop
mov
lock
pop
or
repz
push
push
out
(bad)
xlat
and
movs
jne
movs
and
test
vpcompressb
icebp
hlt
and
ret
push
and
adc
xor
iret
stc
mov
xor
sahf
popf
mov
xchg
push
jl
sbb
out
pop
or
push
xchg
cld
or
pop
jmp
loopne
lds
mov
fimul
push
and
aas
xchg
inc
or
rol
xor
aas
(bad)
out
sub
mov
adc
jnp
mov
dec
mov
xor
dec
pusha
out
add
pop
lods
ror
xchg
imul
mov
popf
addr16
inc
mov
imul
je
add
call
in
xchg
add
call
adc
in
adc
out
xlat
test
out
push
test
sub
add
mov
xchg
ret
test
popf
add
mov
xchg
scas
add
shr
repnz
shl
(bad)
mov
and
lods
mov
push
sbb
add
pop
pop
xchg
in
inc
push
repz
scas
fimul
add
mov
repz
sbb
mov
pop
pushf
pop
rol
js
and
adc
les
(bad)
retf
fwait
or
into
fidiv
out
mov
mov
out
fild
(bad)
bound
sbb
enter
test
add
sub
sub
cmp
sub
mov
push
sti
lods
jbe
fsub
and
gs
jecxz
js
cmp
push
sahf
add
aam
push
pop
add
sar
mov
stos
push
jecxz
jae
das
xchg
cli
push
dec
pop
add
inc
test
in
cmp
pushf
into
into
sti
xor
movs
out
jmp
fs
jae
or
mov
pop
mov
dec
ret
or
movs
adc
xor
scas
into
xchg
jbe
dec
shl
stos
fld
pop
sub
adc
jmp
stos
es
adc
add
xor
hlt
or
cmps
xchg
test
or
or
aaa
sbb
adc
jecxz
add
pop
sbb
add
and
arpl
aas
out
movs
mov
push
and
jo
stc
sbb
je
lahf
add
arpl
js
repz
nop
push
add
fild
in
pusha
mov
movs
or
sbb
xchg
xchg
jns
pop
pop
and
rcl
arpl
mov
aam
jmp
inc
cmps
and
mov
add
fcom
clc
xchg
mov
ja
daa
cmps
push
in
xor
imul
xchg
movs
cmps
(bad)
push
into
xchg
idiv
dec
sub
sub
add
jecxz
sub
xlat
lea
fsubr
ja
inc
retf
stc
mov
inc
test
or
call
pop
push
push
int3
xchg
and
sub
jmp
xlat
fst
lea
dec
sub
xchg
xchg
lahf
xchg
ror
mov
mov
mov
out
jb
repz
cmps
mov
loope
inc
adc
push
ror
in
xchg
and
sti
sub
xor
popf
cmp
dec
aam
sbb
xor
je
add
mov
and
pop
add
inc
push
add
cli
jne
sbb
and
mov
(bad)
sar
sub
scas
popa
cmp
fist
test
adc
mov
les
lds
pop
adc
outs
jo
and
lds
sar
std
inc
push
nop
je
and
cmc
sub
stos
fmul
ja
call
dec
or
inc
jno
mov
jle
call
xchg
out
xor
cld
cmp
pop
pop
mov
aaa
push
cmp
movs
pop
retf
adc
push
adc
(bad)
jle
dec
xor
gs
nop
scas
stos
xor
cmp
lds
jns
rol
xor
ins
sahf
lods
sub
pop
mov
sbb
pop
xor
call
push
add
adc
mov
add
adc
into
inc
sub
outs
and
call
jne
pop
and
mov
xchg
mov
pop
shl
icebp
cvtdq2ps
xchg
dec
inc
jo
lods
std
les
(bad)
loope
fs
adc
and
outs
mov
out
xchg
nop
movs
cmp
data16
jmp
push
test
pop
mov
pop
inc
out
inc
sub
popa
sti
xlat
aas
push
jnp
adc
mov
or
repz
(bad)
sbb
retf
inc
mov
sbb
xchg
mov
outs
sub
bound
aam
fs
loopne
test
adc
nop
in
mov
fimul
setge
test
sbb
jns
cmp
cmp
and
xor
test
mov
(bad)
or
pop
cld
sub
jnp
cmp
mov
cmp
xchg
rcl
jnp
loop
cs
and
ja
in
push
cmp
mov
mov
inc
adc
sahf
clc
mov
cli
and
adc
pop
cmps
push
jnp
in
jno
jnp
xchg
mov
iret
jecxz
jg
sbb
sbb
pop
stc
ins
cmp
pop
sub
xor
cmp
xchg
(bad)
sub
pop
add
aam
sub
repz
dec
inc
xor
sub
xchg
inc
jae
not
inc
and
or
xor
add
jne
adc
mov
pop
inc
adc
lock
mov
and
mov
retf
sub
push
and
std
fbstp
xchg
ja
xlat
(bad)
std
(bad)
in
cmps
inc
inc
clc
jmp
(bad)
(bad)
popf
mov
(bad)
jmp
test
(bad)
ja
in
(bad)
shl
or
sub
mov
push
pusha
dec
mov
dec
shl
clc
ficom
shr
sbb
jp
mov
push
and
dec
scas
mov
ins
jl
test
mov
rcr
test
pop
xchg
add
pushf
push
sti
jle
xchg
(bad)
pushf
adc
inc
(bad)
lods
mov
int3
jl
pop
mov
ja
jl
and
mov
adc
out
scas
lahf
or
in
push
das
pop
scas
sub
lahf
pop
or
(bad)
(bad)
add
in
xchg
(bad)
xchg
int3
and
jmp
arpl
pop
or
(bad)
or
inc
mov
imul
xchg
xor
xchg
fcomp
and
inc
sub
(bad)
cmp
cmp
jmp
sar
and
jmp
mov
dec
rcl
jns
nop
jo
repz
adc
(bad)
jb
call
xlat
imul
data16
dec
inc
inc
add
inc
daa
aam
enter
fisub
sub
in
inc
cmp
lock
inc
and
fidivr
adc
arpl
mov
and
mov
jle
clc
mov
mov
cld
jmp
pop
pop
ds
imul
add
jle
xchg
scas
sti
xchg
hlt
inc
sub
in
xor
mov
dec
push
add
(bad)
cwde
aaa
and
add
xor
ret
inc
aaa
mov
test
cmp
icebp
stc
fstp
pop
aad
mov
dec
jmp
xchg
outs
aad
and
inc
pop
jno
aad
xchg
dec
pop
mov
dec
jb
(bad)
jo
sub
fidiv
fcmovne
dec
loope
sbb
into
mov
cmp
push
xchg
jns
and
(bad)
(bad)
repnz
cmp
mov
(bad)
sbb
inc
mov
xchg
sub
push
jmp
fnstenv
(bad)
imul
std
sbb
or
mov
into
sti
and
or
mov
mov
dec
xchg
xchg
shl
sbb
in
dec
jecxz
mov
xchg
pop
std
lods
mov
add
cli
mov
out
shr
mov
inc
mov
sahf
ja
shl
cmp
sub
mov
mov
mov
stos
cdq
aas
repz
pop
sahf
mov
add
sbb
dec
(bad)
adc
fld
add
test
mov
sub
or
push
into
mov
or
and
std
pop
movs
jno
mov
xor
add
clc
enter
inc
add
add
and
iret
stos
frndint
arpl
shl
call
mov
ins
jne
add
cdq
push
and
mov
(bad)
dec
ins
arpl
mov
int
push
in
shr
pusha
push
push
out
pop
fidivr
and
aas
adc
xor
loop
inc
or
mov
addr16
add
cmps
xchg
shl
fld
call
sub
push
adc
fdiv
add
cmc
repz
mov
call
push
mov
jmp
and
jns
test
mov
adc
loop
push
xor
push
rol
loope
cli
or
jmp
cmp
ins
push
ins
adc
sub
aaa
mov
push
and
jo
cmp
fst
xchg
add
xchg
sbb
push
pop
pop
shl
test
dec
mov
pop
mov
retf
(bad)
and
sbb
fwait
aas
mov
test
(bad)
and
xor
cmovo
xchg
add
jno
aam
push
mov
stos
lea
test
imul
inc
jecxz
dec
add
jg
mov
adc
mov
dec
test
xchg
pop
push
loop
xchg
hlt
xor
sbb
mov
enter
mov
pop
add
sahf
sub
loope
fwait
loope
(bad)
popf
jl
imul
push
add
adc
loopne
xor
fisubr
and
sahf
push
xchg
je
sub
mov
repnz
ror
call
xchg
std
mov
cdq
add
loopne
or
in
in
or
hlt
cld
test
hlt
ror
rcr
mov
cmp
sar
inc
lods
mov
test
popa
test
rcl
xchg
or
hlt
clc
and
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
sahf
add
les
inc
in
rol
loopne
popf
or
loopne
xchg
add
call
mov
hlt
lock
loopne
xchg
add
in
xchg
add
call
xchg
add
clc
sbb
in
popf
inc
in
test
add
inc
lods
mov
pop
test
xchg
dec
aam
outs
and
fstp
shl
test
inc
loopne
xchg
xor
and
and
test
aam
loopne
leave
(bad)
mov
outs
add
sbb
dec
jmp
mov
test
xchg
and
mov
dec
xlat
aam
ins
mov
mov
call
xlat
adc
sub
(bad)
jge
loope
or
and
ret
(bad)
ret
mov
test
cs
repz
dec
mov
sbb
push
xchg
imul
fst
inc
jb
sbb
scas
ficom
push
ror
jbe
and
jno
scas
retf
or
mov
pop
mov
call
aam
hlt
(bad)
jge
push
outs
and
mov
add
test
adc
movs
jbe
push
jmp
add
cmp
les
add
xor
test
aad
add
mov
jne
shl
cmps
(bad)
je
movs
jno
mov
lods
popf
pusha
pop
leave
lds
in
mov
outs
les
movs
push
in
mov
push
and
xor
jle
jae
scas
cdq
sbb
and
inc
ret
sbb
inc
sub
call
dec
mov
es
jecxz
jbe
push
mov
xchg
fs
mov
add
cmp
inc
add
lea
push
ror
sub
xlat
and
out
push
retf
out
cld
pop
mov
add
cs
mov
ss
outs
or
adc
aaa
pushf
pop
push
xchg
loopne
mov
adc
or
jb
or
mov
ja
imul
push
mov
mov
add
mov
mov
pop
dec
scas
sub
fadd
cmc
popa
mov
loope
lahf
popa
mov
stc
push
fsubr
pop
adc
ins
cwde
sub
fnstsw
mov
inc
push
push
sbb
mov
xchg
jmp
adc
test
lods
fdiv
inc
cmp
cmps
std
lock
inc
loopne
test
call
in
xchg
add
call
cdq
adc
mov
ror
mov
push
rcr
xchg
and
in
xchg
add
push
mov
retf
loop
jg
mov
sbb
mov
jge
xchg
pop
scas
xchg
ret
loope
div
xchg
cdq
jl
les
mov
sahf
imul
imul
mov
pop
cmp
dec
aam
aam
mov
into
xor
inc
jns
push
in
pop
retf
adc
and
mov
pop
in
cli
jbe
and
das
adc
and
sbb
ret
daa
sbb
cdq
clc
(bad)
sub
aad
push
mov
sar
pop
(bad)
out
pusha
cvtps2pi
mov
dec
push
ss
jae
pushf
repnz
mov
loopne
push
pushf
test
xor
cmc
inc
cmp
hlt
gs
rcl
retf
mov
sub
clc
pop
mov
mov
push
mov
mov
repz
mov
es
cmps
lods
out
hlt
inc
(bad)
inc
or
cmp
cmp
lock
mov
push
cmps
pop
shl
pusha
xchg
out
inc
je
loopne
mov
jnp
and
sbb
repz
and
adc
test
jbe
fstp
jmp
add
inc
in
scas
push
inc
push
push
xor
add
cmp
ins
dec
or
jns
mov
movs
scas
inc
(bad)
cmp
stc
pop
inc
pop
dec
pop
jecxz
adc
cmp
mov
test
lock
or
sbb
aam
sbb
test
pop
push
ds
das
xor
scas
xchg
jg
cmp
ret
jb
xor
mov
push
and
(bad)
push
and
dec
iret
jecxz
jns
xor
mov
or
adc
xor
js
cmc
out
lds
je
daa
inc
xchg
rcr
icebp
xor
ds
pusha
daa
or
(bad)
int
cs
xchg
inc
call
repnz
mov
and
sar
push
ins
push
outs
adc
cmp
iret
pushf
retf
add
sub
cmp
or
adc
adc
enter
jp
sbb
sbb
in
jle
clc
sar
in
je
outs
jg
push
mov
cli
cdq
push
pop
test
ins
mov
jmp
or
fistp
sub
sahf
(bad)
std
jecxz
icebp
retf
retf
jle
jno
mov
xchg
mov
push
pop
sub
cmc
add
or
or
stos
cmps
cmps
retf
imul
mov
and
mov
mov
dec
mov
popa
dec
nop
and
pop
and
(bad)
jb
aaa
jl
fmul
das
cs
jb
movs
repnz
int
jo
(bad)
stc
and
je
and
jg
cmc
out
jl
jle
retf
outs
into
pop
add
ret
xlat
xchg
rol
sbb
dec
add
rcl
outs
cdq
pop
dec
inc
inc
push
push
mov
pop
cs
cwde
dec
in
jge
call
(bad)
or
scas
pop
retf
cmps
sub
loopne
mov
in
dec
add
arpl
cmc
mov
add
(bad)
sub
arpl
sub
inc
mov
fadd
out
lds
cmc
int3
xchg
fld
push
fsubr
outs
inc
call
push
rcr
xchg
adc
mov
cmc
call
lahf
call
pop
or
xchg
shr
inc
jnp
hlt
mov
xchg
add
add
sahf
int3
cmp
pop
arpl
add
xor
(bad)
mov
outs
nop
scas
les
clc
pusha
jnp
pop
pop
mov
push
push
pop
and
arpl
retf
in
mov
inc
jb
sti
sbb
xchg
and
xchg
add
lock
add
call
xchg
or
clc
xchg
inc
hlt
test
lds
pusha
xchg
inc
call
and
les
rol
sbb
xchg
and
in
add
pop
bound
jno
out
sub
test
mov
or
(bad)
fisttp
lods
ffreep
mov
setle
dec
inc
sbb
mov
xor
jp
imul
mov
mov
inc
test
add
mov
jno
sub
pop
js
mov
icebp
arpl
adc
jge
test
xchg
cdq
cli
stos
xor
scas
enter
push
movs
(bad)
frstor
cmp
push
or
cmp
enter
jmp
jmp
scas
stos
mov
xor
mov
aaa
jnp
dec
xor
add
inc
cli
or
stos
es
and
lods
mov
shl
mov
push
inc
cld
cli
mov
jl
test
pop
out
sbb
xor
ds
xchg
mov
outs
test
ror
std
stc
jl
mov
inc
xchg
(bad)
sub
lods
stos
fisttp
(bad)
xor
imul
ret
out
mov
jbe
sub
lahf
cmp
xchg
pusha
cmp
js
loope
xchg
outs
cld
loopne
mov
aas
and
mov
mov
jp
outs
popa
stos
sbb
cmps
jne
jle
mov
mov
cmp
data16
push
(bad)
lock
inc
loopne
cdq
add
cld
in
xchg
add
call
cdq
adc
cld
ror
test
test
test
pop
test
outs
push
pop
popa
and
dec
sub
sar
mov
mov
call
je
mov
test
ja
leave
sbb
jle
out
push
pop
inc
dec
loope
inc
dec
cmp
pxor
jns
xchg
or
jbe
sahf
fnstcw
cmp
sahf
sti
or
ja
ins
fstp
xor
shl
xchg
sub
in
add
sub
sub
fidiv
pop
das
and
jns
push
jns
push
jne
dec
popf
mov
sbb
cmp
and
stos
(bad)
iret
adc
(bad)
xor
mov
(bad)
mov
popf
dec
jp
inc
mov
dec
repnz
leave
lea
xchg
data16
lods
ss
loop
mov
jecxz
ret
loope
and
call
push
jle
mov
xchg
cmp
hlt
jns
or
stos
aas
enter
adc
call
cmp
mov
(bad)
outs
cmps
pushf
mov
jb
lods
or
push
(bad)
jle
stos
dec
js
pop
xchg
(bad)
out
sbb
jmp
pop
popf
pop
pop
sbb
ret
outs
cwde
fld
adc
pop
stos
in
lods
int3
jae
ss
cmp
sub
shl
cwde
call
cs
outs
jcxz
sbb
lods
(bad)
lock
inc
jno
popf
mov
or
fisttp
shl
jecxz
fmul
jno
div
gs
mov
inc
ja
rcr
(bad)
mov
sub
(bad)
or
lock
and
stos
jecxz
push
mov
sub
inc
cmp
sbb
shl
aaa
adc
mov
pop
dec
iret
outs
pop
jne
sub
add
xchg
call
in
or
clc
in
add
call
test
test
lds
lods
adc
mov
popf
dec
and
rol
xor
adc
lods
cs
int3
and
inc
shr
add
adc
mov
sub
mov
fidivr
push
inc
cmp
and
cmp
test
adc
imul
(bad)
fs
sbb
pushf
sti
movs
call
(bad)
shr
retf
sbb
std
mov
aad
pop
xchg
and
sub
or
repz
sbb
and
sbb
sbb
cmp
fwait
and
(bad)
int
sub
xchg
jp
xchg
inc
dec
push
inc
inc
mov
pop
cmp
mov
ins
mov
jle
les
push
push
lods
jg
cmp
cmp
cmp
jnp
mov
ins
adc
sbb
push
cmp
fdivr
sbb
test
push
nop
adc
mov
sbb
pop
gs
push
xor
pop
and
jo
daa
and
addr16
loope
or
aad
jmp
xchg
push
pop
loop
mov
pushf
jbe
in
push
dec
adc
(bad)
jb
out
dec
inc
jns
lahf
dec
or
(bad)
sbb
cmp
jae
and
xchg
push
out
call
jne
sub
cmp
popf
jo
sub
mov
xchg
mov
iret
popa
rol
sbb
imul
mov
aas
xchg
mov
clc
xchg
test
mov
popa
pop
push
push
fistp
xchg
enter
test
mov
out
scas
sbb
fldenv
ds
mov
jae
pop
pop
mov
mov
mov
loope
mov
sub
enter
add
mov
sub
push
pop
mov
out
cmp
or
mov
add
int3
xchg
ja
fsubr
lock
sbb
sbb
out
ins
cdq
push
dec
jae
adc
mov
cmp
(bad)
je
(bad)
in
cmovg
mov
mov
neg
movs
inc
scas
mov
xchg
mov
jo
lahf
call
cli
mov
into
mov
in
jne
jb
dec
add
fisub
pop
push
xor
fs
add
scas
xchg
cmps
mov
push
jnp
jp
push
es
xchg
xlat
fwait
cmp
push
ss
call
push
rcr
push
stos
das
pop
int3
jp
fwait
and
in
dec
or
in
adc
aad
jle
jle
jne
ds
jmp
mov
sub
lds
dec
int
xor
inc
and
movs
jmp
and
adc
inc
cmc
sub
iret
(bad)
cli
mov
add
outs
in
(bad)
and
mov
and
inc
mov
fadd
sub
sbb
std
test
pusha
fwait
movs
jp
mov
fnstenv
not
jns
shl
fsub
cdq
(bad)
arpl
or
fwait
mov
mov
push
lock
mov
mov
mov
fisubr
mov
(bad)
push
pop
pusha
cli
push
out
scas
scas
cmc
sbb
jnp
mov
inc
adc
out
jge
jnp
mov
dec
shl
ja
inc
and
mov
xchg
xchg
sbb
push
push
push
sbb
pop
jecxz
push
ret
cdq
add
mov
mov
das
movs
jmp
or
out
or
and
pop
xlat
push
in
push
or
push
icebp
sub
imul
dec
sub
mov
repz
test
sbb
dec
mov
rcr
cmp
out
nop
jecxz
sti
xor
jo
mov
xchg
adc
popa
push
jmp
or
jmp
sbb
inc
or
fs
aam
xchg
es
jbe
sub
ja
cmps
scas
sub
pop
test
lds
jmp
retf
xor
sbb
xchg
pushf
movs
lock
(bad)
jne
pop
cmp
sub
inc
mov
loopne
sbb
pop
jo
fadd
mov
sub
push
xchg
mov
dec
mov
jne
rcl
jb
adc
jae
mov
ficomp
ds
(bad)
mov
lock
aaa
lds
or
outs
lds
cmps
sub
sub
xchg
shr
or
mov
jge
cmc
push
xchg
xchg
fisubr
mov
lods
xor
dec
sbb
pushf
cmp
inc
cmp
(bad)
xor
in
push
(bad)
xchg
ds
xor
or
adc
xchg
pop
cs
sub
jle
fcomp
mov
popa
fiadd
inc
test
jo
inc
mov
sbb
ja
dec
push
pop
movs
les
cmp
sub
mov
imul
mov
icebp
sbb
push
fcom
int
icebp
adc
lock
mov
xchg
xor
mov
fisttp
dec
pusha
push
enter
test
or
jnp
js
mov
fdiv
sub
fwait
adc
movs
xchg
stos
push
pop
jg
into
pop
adc
icebp
push
sub
adc
fwait
cmp
(bad)
fstp
or
in
pop
out
push
push
or
aaa
imul
aaa
mov
imul
ds
imul
jno
mov
(bad)
dec
neg
ret
mov
inc
pop
add
daa
in
jo
lahf
jmp
jbe
ja
test
int
jnp
(bad)
jle
repz
xchg
jae
rcr
mov
stos
jae
test
pop
std
inc
scas
pushf
ins
cwde
repz
js
inc
imul
aad
push
test
popf
aad
add
into
je
cmp
fist
(bad)
clc
jnp
pcmpeqd
ret
xchg
scas
imul
ja
mov
xchg
retf
mov
cmps
pop
push
adc
push
fidivr
xchg
jno
mov
pop
cmc
ja
and
out
add
jmp
adc
bswap
or
aad
(bad)
hlt
dec
adc
dec
jge
dec
dec
xor
push
mov
cmps
and
jle
and
imul
call
cdq
jp
xor
lods
ins
inc
aam
clc
xor
xchg
loopne
cmc
push
in
push
pusha
xchg
pop
cmps
jbe
(bad)
pop
stc
popa
scas
retf
add
xchg
cmp
movs
and
xor
lea
add
popf
test
jmp
mov
pop
inc
mov
add
mov
nop
ja
cmp
and
xor
(bad)
repz
sbb
sub
cmp
or
into
cmp
addr16
cdq
jno
dec
and
inc
mov
mov
in
pop
xchg
adc
cli
xor
call
ins
div
cmp
movs
add
add
shr
dec
icebp
inc
cwde
sbb
push
or
add
daa
pop
xor
sub
push
addr16
mov
sub
xor
into
mov
out
repz
test
jns
out
cwde
std
or
jp
mov
dec
call
shl
sbb
scas
push
fbld
idiv
jecxz
out
fld
jne
call
in
ja
jns
push
sub
test
jae
nop
(bad)
xchg
push
xor
dec
or
inc
repz
mov
(bad)
mov
mov
or
jo
xchg
fild
jbe
outs
leave
or
les
fmul
jp
retf
dec
mov
lods
arpl
adc
cmps
fsub
push
lods
cmps
push
fist
xor
lock
inc
in
xchg
or
clc
popf
or
loopne
xchg
add
lods
xchg
test
outs
push
inc
fs
and
push
enter
in
imul
mov
imul
addr16
aad
cmp
xchg
xchg
mov
out
dec
lods
mov
leave
mov
push
(bad)
and
loop
ss
int3
movs
xchg
add
mov
in
aam
addr16
out
adc
movs
pop
push
js
inc
pop
pop
sti
popa
mov
push
mov
or
addr16
into
fs
adc
imul
adc
aas
out
dec
mov
jns
adc
cmc
sub
mov
jmp
jge
jb
dec
push
into
das
iret
call
rcl
mov
retf
add
call
call
mov
xor
mov
mov
sub
xchg
adc
pushf
fcmovnu
adc
xchg
retf
mov
shl
push
cld
call
fnstcw
mov
jae
jmp
js
nop
les
push
mov
xor
jno
gs
sub
pushf
xor
dec
add
ret
lods
jno
mov
fmul
adc
mov
and
lea
add
inc
nop
fwait
and
jmp
xchg
movs
adc
inc
push
ss
xor
cli
stos
xchg
mov
mov
dec
stc
mov
jg
sahf
cmp
into
jns
scas
into
add
mov
dec
jmp
mov
xchg
iret
cwde
rcr
jne
jno
xchg
out
cli
fwait
mov
xchg
fwait
inc
mov
mov
adc
push
ror
out
dec
aad
adc
loop
adc
shr
inc
push
lahf
aam
sub
inc
ret
push
out
mov
cmp
mov
ficom
jmp
add
jge
fbld
cmp
shr
mov
or
addr16
fiadd
and
dec
cs
xchg
inc
cmc
adc
mov
addr16
sub
retf
cmps
mul
out
sbb
jns
inc
inc
and
ficomp
xchg
xor
fadd
xor
stos
mov
pop
or
jb
sub
les
icebp
sbb
or
(bad)
ret
sub
loope
xor
add
jl
sti
dec
daa
adc
rcl
movs
loop
sbb
(bad)
daa
js
popf
test
xchg
sbb
push
pop
mov
stc
push
push
cmp
xchg
xchg
pop
lock
(bad)
jne
mov
fcomp
nop
imul
xor
test
nop
sbb
mov
or
fadd
in
adc
cmp
mov
clc
pop
out
pop
or
sbb
add
ror
outs
inc
inc
fbstp
retf
mov
xchg
call
out
out
test
sub
push
int3
daa
mov
jmp
xor
inc
push
push
adc
fcom
add
pop
cmp
rcl
add
pop
push
sahf
mov
xor
repz
cmp
or
shr
jb
cmp
rol
dec
sub
and
sbb
addr16
xchg
int
mov
or
fwait
jge
int
addr16
cmp
mov
int3
test
add
lock
fdiv
sub
inc
push
or
push
(bad)
jb
icebp
adc
push
pop
dec
out
xor
stos
cli
cmc
mov
xchg
jl
jl
or
inc
leave
hlt
dec
test
xchg
stos
push
sbb
or
arpl
add
(bad)
leave
shl
bound
mov
mov
pop
repnz
add
(bad)
inc
(bad)
dec
out
call
ins
push
mov
pusha
sub
xor
or
push
ja
(bad)
(bad)
dec
sbb
dec
pop
aam
popf
xchg
and
aad
pushf
xor
comiss
cmp
je
jne
int3
dec
and
test
xor
push
jmp
adc
les
fucomi
cmp
test
push
out
loopne
jl
jno
cwde
jns
xchg
jmp
outs
ret
dec
std
shr
test
mov
fistp
adc
loopne
in
xlat
jo
aad
mov
push
clc
movs
xchg
adc
xor
sahf
into
inc
movs
outs
sahf
das
pop
and
das
xor
imul
and
or
or
ins
in
rol
repz
ret
xchg
call
add
adc
or
fcom
xchg
xchg
gs
dec
dec
inc
fmulp
mov
sub
and
xchg
mov
in
xchg
ja
sub
les
adc
mov
inc
adc
push
inc
jne
movs
xchg
movs
mov
mov
cdq
add
aaa
pop
mov
out
jns
pop
and
pop
inc
and
mov
and
cmps
inc
mov
pop
mov
lds
pop
and
pusha
mov
int3
jae
adc
setle
fidivr
jnp
stos
adc
sbb
mov
cmp
xor
test
sub
cmp
push
jne
jle
add
pop
mov
test
mov
repnz
loope
push
scas
repz
jmp
jg
in
cmp
aaa
ins
mov
xchg
stos
(bad)
je
or
popf
retf
mov
jmp
dec
sti
imul
or
mov
(bad)
mov
test
or
sub
wrmsr
rol
mov
adc
mov
aas
sub
xor
mov
xchg
sbb
push
(bad)
rol
lods
cmp
push
xor
jb
mov
mov
pusha
jo
sbb
xor
ret
inc
push
std
(bad)
push
popa
nop
mov
and
sbb
mov
movs
or
in
call
jg
stos
into
add
daa
jo
mov
cmps
sahf
adc
loopne
fld
lock
test
in
fistp
mov
jmp
cli
shl
xchg
add
clc
aad
loopne
mov
xchg
lods
inc
(bad)
jmp
xchg
and
inc
stc
add
call
test
in
aad
adc
cmc
nop
jmp
and
mov
test
loope
aad
lock
test
mov
xchg
adc
int3
adc
push
jmp
inc
in
xchg
or
lock
add
loopne
xchg
add
lods
adc
loope
rol
outs
push
pop
and
inc
shr
add
sahf
jmp
xchg
fiadd
adc
and
iret
out
mov
(bad)
neg
cmp
xchg
pop
add
in
daa
sti
aam
jbe
sahf
jge
jns
daa
xchg
je
push
enter
jecxz
push
mov
fwait
mov
mov
std
xlat
das
mov
out
movs
mov
lahf
mov
xor
adc
inc
call
shl
xchg
adc
js
in
jns
cmp
cmc
int3
cmp
lods
pop
jp
jno
xor
inc
sbb
imul
daa
scas
fist
inc
jle
mov
or
repnz
enter
aad
pop
pop
(bad)
jo
pop
cmps
or
push
xchg
leave
xchg
fiadd
xchg
or
cmc
sbb
ins
cmp
and
jp
and
repnz
out
rcl
add
fdivp
cld
mov
or
int
dec
fcom
inc
pop
cmp
adc
repz
mov
test
mov
les
adc
ret
pushf
stos
cmp
ja
and
sbb
addr16
rcr
faddp
jnp
push
or
jmp
mov
add
or
xchg
(bad)
xchg
data16
cmps
stos
push
jo
pusha
(bad)
fistp
imul
inc
jmp
pop
mov
sbb
xchg
cdq
movs
in
xchg
add
in
in
xchg
add
call
rol
gs
xlat
inc
lods
adc
in
push
sbb
and
loopne
add
push
scas
jecxz
dec
sbb
ins
ret
addr16
stos
adc
jmp
dec
jp
push
dec
sbb
in
add
push
xchg
shr
jb
pop
test
sbb
lods
jns
ja
test
gs
out
lods
movs
repnz
add
xchg
inc
ret
mov
ror
xor
cld
data16
mov
sbb
pop
cmc
lahf
leave
mov
out
pushf
inc
jecxz
jmp
xchg
xchg
xchg
fcom
mov
call
xchg
or
cmp
mov
adc
(bad)
out
outs
lahf
push
jns
push
sbb
loope
pop
shr
dec
push
push
xchg
mov
mov
inc
es
cmp
and
(bad)
stos
pop
pop
call
sbb
daa
loope
pop
push
shl
cmps
leave
std
movs
ins
dec
mov
mov
bound
jg
mov
xchg
adc
movs
add
rcl
loopne
add
call
cdq
sub
dec
cmp
bound
(bad)
in
mov
mov
in
inc
pusha
and
inc
mov
into
aas
add
ficom
ins
xchg
sub
mov
loop
loopne
std
into
cmc
retf
aad
inc
iret
push
inc
pop
out
iret
js
xchg
jge
rcl
imul
(bad)
in
scas
and
mov
inc
test
add
call
in
xchg
add
call
push
add
and
adc
jecxz
adc
mov
mov
in
xchg
std
mov
pop
out
or
inc
jp
cmp
lahf
or
loopne
mov
pop
mov
repz
fst
into
pop
push
das
test
jl
lods
popf
not
pop
cmp
(bad)
shl
(bad)
not
shr
je
out
mov
xchg
xchg
pusha
pop
mov
jmp
cmp
outs
mov
imul
mov
cmp
std
loop
imul
fmul
shl
pop
or
in
sub
imul
sahf
std
jne
inc
enter
adc
mov
out
ss
dec
mov
push
push
sub
mov
mov
lods
movs
and
bound
scas
pushf
xchg
data16
call
cwde
cli
add
shl
xchg
pop
xchg
or
mov
jne
cmp
inc
retf
mov
sahf
mov
ins
sub
popa
outs
and
sti
je
push
or
adc
not
sbb
inc
sub
jmp
push
shl
mov
repnz
fnsave
jge
mov
aad
movs
mov
mov
fcmovnb
mov
xchg
xor
enter
nop
xor
ins
add
data16
mov
cwde
inc
push
add
dec
mov
movs
mov
imul
or
mov
and
dec
inc
or
dec
xlat
(bad)
lods
xor
push
retf
dec
in
rcl
jmp
and
(bad)
test
sahf
movs
shl
repz
fld
clc
fcomi
pop
adc
imul
adc
and
stc
add
sub
adc
mov
ror
add
pop
add
cmc
cmp
jae
push
jmp
xchg
inc
fist
cmp
adc
pop
mov
inc
lods
xchg
movs
jl
loopne
push
loope
sar
mov
push
push
sbb
retf
mov
dec
ja
pop
adc
int3
mov
add
imul
fsubr
jle
pusha
ins
loopne
(bad)
sbb
inc
jle
in
and
jb
jb
ret
test
sbb
out
lea
mov
in
xchg
movs
dec
mov
outs
or
addr16
movs
fcom
dec
outs
ret
sbb
push
(bad)
or
xchg
pop
mov
cs
scas
sbb
(bad)
and
mov
xchg
or
cmp
mov
cmp
sbb
shl
nop
fisttp
pop
mov
cli
push
pop
clc
movs
sub
or
dec
aad
sub
cmp
in
xchg
pop
or
icebp
mov
inc
ret
dec
clc
mov
scas
(bad)
sbb
cmps
xlat
out
pop
stc
out
btr
jecxz
fwait
mov
pop
xchg
xor
lods
jmp
jb
xchg
les
ins
push
mov
xchg
mov
xor
add
loopne
(bad)
xchg
cmc
div
sbb
sbb
repnz
out
mov
out
cmps
xchg
push
(bad)
ds
ss
mov
inc
push
clc
lods
add
sti
inc
push
or
repnz
pop
ror
sar
(bad)
fst
or
xchg
(bad)
fisubr
mul
mov
dec
push
cmp
je
jmp
pop
push
xor
adc
scas
push
jp
adc
in
xchg
imul
pop
enter
jl
adc
xchg
xchg
cmps
xchg
addr16
out
icebp
sub
add
xor
pop
test
inc
push
jge
push
stos
jge
hlt
dec
inc
mov
push
jbe
mov
repnz
ror
jae
cmps
(bad)
icebp
loopne
push
sub
inc
ins
push
call
cmp
fsubr
(bad)
ds
cmps
adc
mov
cmp
xlat
pop
lock
mov
sahf
dec
add
shr
xchg
push
xchg
jb
(bad)
and
out
sbb
cdq
enter
mov
aam
nop
dec
(bad)
jmp
mov
add
adc
dec
cmp
pop
popf
adc
jae
pop
xor
jg
push
lea
cmp
adc
and
fild
movs
sbb
xchg
mov
jnp
rcl
jb
xor
in
inc
ret
dec
and
in
ja
sbb
stc
mov
push
xchg
mov
xchg
cmps
jo
mov
jg
push
call
dec
add
popa
add
in
mov
lds
add
test
in
mov
repnz
xchg
jg
pop
(bad)
xor
outs
jge
not
addr16
mov
xor
das
aam
mov
loopne
dec
adc
pop
mov
(bad)
pop
fbstp
mov
jbe
adc
stos
cdq
xchg
inc
clc
or
mov
or
inc
shr
push
mov
xor
or
cmp
push
dec
xor
mov
push
std
repz
cmc
sub
push
jl
xchg
icebp
clc
lock
scas
mov
jl
mov
outs
clc
gs
cli
out
pop
outs
cmp
repnz
mov
mov
sbb
mov
and
sar
clc
mov
stos
pop
jmp
add
jp
fimul
test
jnp
rcr
pop
sub
cs
cld
jnp
popf
mov
outs
scas
shl
scas
jmp
and
movs
mov
daa
ret
add
in
push
dec
jge
adc
rcl
js
cmp
push
aas
enter
add
xchg
adc
sub
scas
inc
test
jo
cwde
imul
fwait
lea
jmp
loopne
add
loopne
popf
repnz
push
int
shl
cmp
mov
and
sahf
pop
into
pop
scas
(bad)
xor
popw
xor
(bad)
dec
sti
push
dec
rcl
push
adc
mov
popf
call
mov
add
xchg
outs
les
imul
mov
shl
sbb
jbe
fwait
ret
push
push
jno
sbb
mov
pop
mov
jecxz
daa
imul
and
xchg
xlat
pop
jo
sbb
in
mov
cmp
gs
or
adc
adc
sub
mov
pop
mov
clc
sbb
loopne
sub
(bad)
(bad)
shr
enter
fld
jb
call
dec
out
cmp
ret
in
hlt
add
jmp
mov
lods
push
mul
push
dec
pop
push
mov
sub
fwait
and
inc
push
imul
push
shl
mov
retf
pop
dec
sub
aad
pop
cmps
jb
fst
sbb
jmp
retf
mov
aam
pop
mov
icebp
xor
cmps
mov
push
jae
sahf
in
dec
ss
push
ret
push
or
(bad)
push
push
stos
add
push
inc
leave
mov
popf
inc
sbb
jb
mov
(bad)
loop
sub
imul
lock
or
loop
scas
popa
and
sub
clc
inc
call
fld
push
fadd
lods
and
fs
adc
(bad)
push
jp
pop
push
mov
jno
mov
bound
lock
cmp
jmp
inc
inc
add
sahf
xchg
dec
jp
rcl
cmp
xchg
push
stc
pushf
jp
dec
jmp
pop
test
mov
adc
ins
and
and
cld
pop
sar
push
cmp
(bad)
mov
fst
pushf
xchg
sbb
je
xor
cmp
pop
and
mov
mov
cwde
aaa
push
clc
xchg
in
push
pop
out
mov
mov
mov
andps
(bad)
popa
jmp
sub
int
add
in
xchg
add
jmp
cli
add
jmp
popf
or
in
or
hlt
enter
clc
sub
rol
movs
xor
sar
aam
sar
int3
(bad)
aad
mov
mov
cmc
pop
mov
fst
mov
nop
or
hlt
int3
adc
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
shl
loope
popf
popa
in
in
rol
call
in
imul
in
xchg
add
call
xchg
add
call
imul
in
xchg
add
call
xchg
add
call
test
mov
movs
or
in
test
add
cwde
jle
js
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
fsub
fs
call
xchg
add
call
xchg
add
call
xchg
add
call
les
loopne
xchg
add
call
xchg
add
call
xchg
add
call
and
push
add
call
xchg
add
call
xchg
add
call
xchg
add
cmp
inc
in
xchg
add
loopne
xchg
add
call
rcr
test
pusha
adc
xchg
add
cld
popf
push
scas
sbb
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
clc
or
inc
inc
push
ror
inc
pop
xchg
dec
aas
addr16
mov
in
mov
inc
repz
lea
shr
push
aam
test
retf
sti
pushf
push
ins
jb
inc
or
test
xchg
fadd
xor
sbb
cmp
ss
dec
and
dec
mov
test
outs
xor
das
inc
push
mov
mov
inc
repz
lea
shr
push
aam
test
retf
sti
pushf
push
ins
jb
inc
or
test
xchg
fadd
xor
sbb
cmp
ss
dec
and
dec
mov
test
outs
xor
das
inc
push
mov
mov
inc
repz
lea
shr
push
aam
test
xchg
push
adc
pushf
rol
call
in
xchg
add
call
xchg
add
mov
adc
pusha
adc
cdq
add
and
pop
rcl
popa
or
or
clc
retf
and
in
add
push
or
cs
mov
out
pushf
xchg
loopne
adc
jne
and
adc
call
push
aad
popa
or
or
clc
retf
and
in
add
push
or
cs
mov
out
pushf
xchg
loopne
adc
jne
and
adc
call
push
aad
popa
or
add
adc
outs
in
ja
mov
call
jle
mov
ins
mov
pop
mov
add
push
dec
adc
mov
or
pop
xor
jmp
movs
lds
and
mov
ins
mov
pop
mov
add
push
dec
adc
mov
or
pop
xor
jmp
movs
lds
and
mov
ins
mov
ss
pop
repnz
xchg
pushf
lods
xchg
or
in
add
in
xchg
add
call
xchg
or
test
test
daa
imul
in
imul
ja
aaa
xchg
or
mov
cmps
xlat
xchg
mov
call
push
dec
mov
(bad)
push
je
push
test
mov
(bad)
repnz
mov
icebp
cld
cmp
ds
dec
add
xor
mov
sub
sub
ja
aaa
xchg
or
mov
cmps
xlat
xchg
mov
call
push
dec
mov
(bad)
push
je
push
test
mov
(bad)
repnz
mov
icebp
cld
cmp
ds
dec
add
xor
mov
sub
sub
ja
aaa
xchg
or
mov
cmps
xlat
xchg
mov
call
mov
stos
or
jnp
sbb
stos
mov
lea
fiadd
jg
js
jne
sbb
xchg
test
js
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
cdq
int3
xor
fnstcw
dec
popf
fdiv
stos
cli
jmp
cld
lock
inc
loopne
xchg
adc
in
xchg
add
call
xchg
int
mov
rcl
and
inc
shr
add
adc
adc
mov
gs
or
or
sahf
xor
push
stos
and
mov
shl
cmp
push
shl
pop
mov
sub
add
jno
scas
iret
xchg
xor
dec
scas
jno
jo
outs
pop
mov
and
and
mov
rcr
cmp
xchg
and
inc
(bad)
sub
call
sub
inc
xor
sahf
sbb
mov
repnz
push
stos
and
mov
shl
cmp
push
shl
pop
mov
sub
add
jno
scas
iret
xchg
xor
dec
scas
jno
jo
outs
pop
mov
and
and
mov
rcr
cmp
xchg
and
inc
(bad)
sub
call
sub
inc
xor
sahf
sbb
mov
repnz
push
stos
and
mov
shl
cmp
push
shl
pop
mov
sub
add
(bad)
lock
jge
or
jmp
mov
sbb
(bad)
lahf
xor
inc
outs
repnz
push
push
jmp
lahf
jbe
(bad)
ror
sbb
gs
jmp
sbb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
jle
pop
push
aas
(bad)
loope
sti
outs
clc
adc
push
jl
xchg
nop
test
or
in
xchg
add
call
xchg
add
cmps
imul
call
cmps
loop
cmc
dec
fcomp
lds
sub
mov
jp
mov
and
inc
push
int3
pop
sub
mov
and
pop
mov
int3
popa
icebp
dec
ret
enter
and
test
jle
mov
jp
mov
and
inc
push
int3
pop
sub
mov
and
pop
mov
int3
popa
icebp
dec
ret
enter
and
test
jle
mov
pop
mov
aad
pop
in
pop
xchg
pop
mov
test
daa
or
neg
into
js
cli
fist
pop
fwait
aad
dec
mov
daa
sysenter
(bad)
xor
outs
cmp
into
js
cli
fist
pop
fwait
aad
dec
mov
daa
sysenter
(bad)
xor
outs
cmp
into
js
cli
fist
xchg
lods
ror
clc
pop
adc
cdq
add
loopne
xchg
inc
sbb
imul
sbb
imul
sbb
imul
sbb
imul
sbb
imul
sbb
imul
sbb
imul
add
mov
add
lds
daa
jo
mov
stos
into
add
lds
daa
adc
add
lds
daa
jo
mov
stos
into
add
lds
daa
jo
mov
gs
daa
jo
mov
stos
into
add
lds
daa
jo
mov
stos
into
add
lds
daa
fcom
add
xchg
or
in
xchg
add
call
xchg
add
in
adc
arpl
push
loopne
xchg
or
jbe
outs
pop
call
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
sbb
cmc
push
add
dec
mov
into
pop
repnz
lods
es
(bad)
adc
pop
gs
cmp
aaa
loope
push
mov
(bad)
xchg
data16
cmp
aaa
loope
push
mov
(bad)
xchg
data16
cmp
aaa
loope
push
mov
(bad)
xchg
data16
cmp
aaa
loope
push
mov
(bad)
xchg
data16
cmp
aaa
loope
push
mov
(bad)
xchg
data16
cmp
aaa
loope
push
mov
(bad)
xchg
data16
cmp
aaa
loope
push
mov
(bad)
xchg
data16
cmp
aaa
loope
push
mov
(bad)
xchg
data16
cmp
aaa
loope
push
mov
(bad)
xchg
data16
adc
add
pop
adc
rol
in
in
xchg
add
loopne
xchg
add
call
rol
cmps
lods
adc
daa
cs
or
in
imul
jle
jb
icebp
out
sti
fwait
add
xchg
jge
jb
icebp
out
sti
fwait
add
xchg
jge
jb
icebp
out
sti
fwait
add
xchg
jge
jb
icebp
out
sti
fwait
add
xchg
jge
jb
icebp
out
sti
fwait
add
xchg
jge
jb
icebp
out
sti
fwait
add
xchg
jge
jb
icebp
out
sti
fwait
add
xchg
jge
jb
icebp
out
sti
fwait
add
xchg
jge
jb
icebp
out
sti
fwait
add
nop
jge
ret
sub
das
xchg
(bad)
rcr
ficomp
mov
mov
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
icebp
dec
sbb
lea
pop
push
adc
imul
in
cdq
add
loopne
xchg
add
call
xchg
and
push
add
cmp
std
ror
mov
retf
sbb
sub
add
mov
cmp
pusha
jmp
inc
retf
sbb
sub
add
mov
cmp
pusha
jmp
inc
retf
sbb
and
pop
xchg
or
mov
enter
outs
ret
sub
pop
pop
cwde
jo
je
retf
or
das
jno
and
cs
jge
pop
pop
cwde
jo
je
retf
or
das
jno
and
cs
jge
pop
pop
cwde
add
mov
inc
in
pop
(bad)
imul
loopne
xchg
add
jecxz
imul
loopne
or
in
or
lock
mov
hlt
clc
test
rcr
xor
les
dec
mov
les
dec
mov
rcl
leave
popa
mov
mov
cdq
add
clc
test
hlt
int3
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
xchg
inc
shr
add
inc
loopne
rol
lock
add
call
xchg
add
call
xchg
add
loopne
adc
lock
test
xchg
add
in
xchg
add
call
xchg
add
call
test
in
in
xchg
or
in
jge
loopne
xchg
add
call
xchg
add
call
xchg
sub
mov
cmp
(bad)
lock
call
lods
dec
inc
mov
or
js
push
jns
inc
loopne
push
lahf
(bad)
jb
jo
add
inc
mov
scas
cli
and
mov
inc
xchg
(bad)
add
jns
sti
jnp
or
pop
hlt
hlt
pop
mov
cmp
sub
nop
jb
dec
jb
ds
push
xchg
retf
push
adc
stos
xor
test
test
nop
push
test
stc
sbb
or
push
scas
jmp
dec
cmp
lea
sub
and
in
xchg
retf
nop
xchg
mov
adc
push
pop
sar
in
fsubr
inc
popa
push
cmp
call
fist
gs
int3
lods
es
stc
cmps
mov
xchg
push
jns
xchg
dec
outs
xchg
ins
xlat
(bad)
bound
push
in
xchg
add
ror
mov
jmp
movs
out
ror
sub
jbe
sahf
push
jecxz
dec
pop
loopne
sar
mov
xchg
dec
ins
dec
int
aaa
inc
dec
jg
xchg
test
push
lock
xchg
ret
jae
repnz
lahf
xchg
js
loope
ins
jno
mov
lahf
test
shr
ss
dec
sbb
test
xchg
jge
movs
xchg
adc
stos
and
fild
nop
mov
xchg
dec
xchg
pusha
inc
imul
mov
xchg
inc
mov
leave
mov
loopne
xchg
rol
and
cmp
dec
xchg
sub
adc
aad
lods
lea
xchg
add
sub
cmp
(bad)
in
mov
mov
popf
stc
push
sub
mov
ss
(bad)
jecxz
jmp
xor
sbb
pop
push
xor
cld
dec
scas
sub
mov
add
call
fstp
push
gs
dec
and
sar
xchg
add
lock
jo
adc
outs
sbb
sti
xchg
sahf
retf
js
call
xchg
movs
scas
in
sar
push
jbe
(bad)
jb
push
loopne
xchg
add
call
xchg
add
call
xchg
add
call
imul
in
xchg
adc
cld
call
xchg
or
loopne
ror
movs
sbb
lds
cmc
int
sub
aam
sbb
xchg
and
in
xchg
add
push
add
div
movs
inc
pop
add
fdivr
int
cmc
icebp
pop
ror
retf
inc
div
push
arpl
inc
(bad)
outs
add
pop
nop
cmp
lahf
imul
or
and
pop
mov
and
mov
sbb
fcmovu
mov
icebp
sub
and
repz
aam
fsubr
stc
or
enter
lahf
fwait
lods
xor
push
sub
test
mov
out
aaa
push
mov
adc
sbb
sub
push
stc
ds
lods
jmp
dec
in
sbb
sbb
fist
sbb
add
xor
stos
test
fstp
mov
call
sbb
inc
mov
es
arpl
sub
jl
sbb
xor
js
ja
pop
shl
jnp
shl
fcomp
in
sbb
or
out
jl
cmp
cmps
sbb
push
mov
push
pop
fsubr
add
bound
repnz
stos
sub
mov
inc
cs
ins
jne
pop
sbb
test
dec
add
dec
cwde
cmp
pop
jnp
rol
or
mov
jns
cmps
dec
and
and
cmp
leave
retf
mov
sbb
rcr
movs
call
popa
rol
rol
test
arpl
push
fld
lds
xchg
pop
push
cwde
sahf
xor
mov
inc
add
gs
adc
mov
call
movs
std
inc
and
fcom
leave
push
mov
inc
cmp
lock
cmps
std
(bad)
sbb
xchg
les
adc
xchg
iret
jg
popa
push
test
mov
adc
pop
sub
mov
daa
outs
in
cmp
cmp
shl
pop
jmp
sbb
mov
icebp
ja
or
fdivr
test
mov
arpl
mov
sub
xchg
xor
adc
in
aam
pop
pop
loopne
stos
ficom
or
mov
les
mov
mov
loopne
(bad)
sub
ficom
scas
(bad)
mov
mov
and
mov
xchg
outs
arpl
mov
xchg
hlt
fsubr
push
mul
sbb
xchg
mov
call
test
loopne
xchg
add
in
xchg
or
aad
sub
loope
pushf
inc
movs
mov
imul
xchg
or
or
xor
sub
rcr
adc
cmp
test
inc
pop
es
mov
ret
mov
mov
enter
dec
pop
repz
clc
or
ja
jecxz
arpl
icebp
mov
add
xchg
lahf
loopne
pop
push
or
call
call
xchg
mov
and
mov
lds
xor
daa
scas
push
mov
lahf
seto
adc
mov
out
dec
dec
or
xor
rcr
mov
cdq
das
cmp
scas
xchg
mov
and
sub
mov
test
mov
inc
and
push
xor
push
pop
mov
and
stc
(bad)
xor
sar
movs
xchg
or
movs
pop
mov
call
mov
inc
and
jecxz
or
and
pop
xchg
stos
imul
fs
jecxz
xchg
inc
mov
in
jl
out
mov
push
inc
xchg
xchg
fild
rcl
sbb
jmp
in
mov
ret
mov
call
in
xchg
imul
sbb
sub
jmp
mov
leave
xor
ret
hlt
pop
xchg
xchg
jo
out
dec
clc
push
aaa
or
pop
sti
(bad)
(bad)
inc
dec
mov
(bad)
loope
cld
popa
and
jb
cmp
inc
dec
adc
push
cmp
push
jmp
lods
call
popf
xlat
fs
jb
(bad)
dec
std
lock
inc
loopne
xchg
or
cld
cdq
or
loopne
xchg
add
in
popf
or
in
(bad)
gs
pop
lds
jmp
add
in
xchg
mov
mov
std
loop
mov
ret
scas
fisubr
cmps
cmps
push
sub
sub
movs
shr
add
in
sub
inc
jne
pop
adc
fldcw
movs
push
push
in
adc
inc
std
mov
ins
inc
adc
test
mov
and
sub
inc
jns
dec
movs
in
mov
cmp
(bad)
mov
leave
addr16
imul
fdivr
push
or
int
(bad)
or
int3
and
aas
outs
cwde
iret
cwde
add
shr
or
daa
mov
and
stc
jecxz
sbb
and
inc
sbb
pop
sbb
or
pop
xor
fwait
repnz
(bad)
jbe
icebp
hlt
push
ficomp
pusha
xchg
dec
fisubr
xlat
cld
into
jge
ret
sbb
cmp
cdq
dec
lea
xchg
mov
call
pop
mov
push
fsub
sub
mov
das
adc
daa
iret
mov
iret
push
adc
cli
push
in
push
cmp
test
jge
push
add
inc
aas
xchg
shl
das
ins
daa
xchg
pushf
xor
xchg
arpl
(bad)
rcl
push
push
lods
cld
dec
stos
xlat
scas
jp
sub
push
mov
and
jne
inc
imul
xor
mov
(bad)
retf
push
retf
mov
jecxz
xchg
out
inc
lods
cmp
adc
leave
jo
lock
cmc
xchg
shl
lock
mov
pop
sub
sti
xchg
in
mov
in
adc
lock
loopne
fld
sub
pushf
inc
and
mov
test
push
xchg
out
and
(bad)
icebp
test
inc
shr
add
adc
std
jecxz
je
cwde
(bad)
sub
pop
data16
(bad)
mov
add
jns
test
out
movs
dec
ror
dec
pop
jns
and
(bad)
outs
xor
cmp
lock
inc
ss
dec
inc
fidiv
addr16
into
pop
retf
ds
dec
pop
scas
cmp
xchg
repnz
adc
pop
out
and
adc
test
mov
fisub
loopne
mov
hlt
mov
xchg
pop
sbb
mov
mov
push
jmp
fisubr
adc
les
idiv
retf
cmp
mov
in
int
add
jnp
pop
icebp
retf
inc
xor
das
push
push
lds
mov
loope
xchg
sbb
mov
sbb
dec
rcl
icebp
jb
sar
retf
test
mov
pop
icebp
adc
mov
inc
inc
movq
push
mov
aad
jmp
or
(bad)
daa
scas
int
xchg
(bad)
in
retf
jmp
in
pop
sub
stc
cmc
cmps
cmc
pop
add
ret
bound
jae
or
mov
jno
in
cmp
cli
mov
jo
pop
inc
sar
pop
adc
imul
dec
cmp
and
mov
cdq
or
cli
xchg
pop
out
aaa
mov
aaa
imul
ja
(bad)
hlt
and
fidiv
hlt
test
inc
jg
sub
pushf
xor
mov
mov
or
pop
aas
pop
pop
(bad)
test
int
mov
aas
in
movaps
and
rol
add
js
stos
sti
stc
inc
(bad)
mul
sbb
pushf
pop
(bad)
cwde
cmp
inc
sub
mov
lock
inc
and
aad
lock
xchg
push
inc
mov
cmp
and
ds
mov
mov
dec
pop
dec
adc
pop
repnz
mov
xchg
neg
fs
push
call
push
mov
mov
psubusw
repnz
inc
and
pop
xchg
add
rcr
and
pop
inc
mov
dec
cs
xor
mov
xchg
loope
loope
outs
popf
pop
addr16
push
daa
in
jle
xor
into
repnz
outs
inc
(bad)
xchg
xor
or
mov
stos
xor
add
ficom
es
fwait
cld
push
jbe
daa
inc
pslld
dec
push
outs
shl
mov
push
mov
dec
sbb
jmp
sbb
leave
pop
cwde
test
xor
mov
sub
fwait
bnd
neg
sbb
pop
inc
mov
loope
and
nop
int3
adc
add
push
pop
sub
jg
xchg
xor
cmp
pop
jns
gs
fsubr
mov
inc
hlt
push
mov
dec
adc
push
bound
stos
ss
mov
adc
popa
(bad)
cmps
je
sbb
jp
retf
fistp
pusha
cmps
jae
adc
pop
mov
enter
adc
push
xor
fisub
test
test
sti
dec
rcr
add
pop
xchg
jl
je
cmc
mov
ss
cmp
or
out
mov
popa
pop
cmps
in
retf
inc
les
push
fild
pop
cmc
push
push
jno
pushf
dec
mov
and
or
mov
addr16
mov
jle
mov
xchg
aaa
dec
mov
rcr
cmp
push
fidiv
adc
sbb
into
cmc
out
stc
dec
push
adc
pop
push
cmp
mov
dec
mov
call
xor
add
outs
jo
sub
xor
pop
sbb
mov
mov
dec
call
sub
shl
clc
xchg
sbb
addr16
mov
fwait
push
xor
and
pop
loop
out
ins
popf
daa
jp
dec
pop
xor
xchg
xor
or
loop
jp
jb
mov
jbe
adc
pop
jnp
inc
iret
int3
inc
jmp
sbb
jae
inc
div
dec
mov
loope
ja
iret
std
dec
mov
cwde
mov
xlat
nop
retf
jns
adc
jge
dec
or
pop
mov
inc
mov
fnsave
fisubr
mov
out
and
cmp
push
mov
retf
shl
add
sbb
and
int3
cmp
cmp
inc
ret
mov
xor
add
xchg
sbb
push
inc
xchg
xchg
ds
(bad)
xor
imul
xchg
push
loopne
aad
call
cld
test
loopne
xchg
add
in
adc
and
rol
movs
outs
(bad)
add
stos
adc
mov
mov
in
xchg
std
data16
mov
push
push
and
movs
inc
add
loope
mov
pop
jmp
add
add
dec
mov
push
adc
popf
ret
cdq
inc
mov
jne
popf
pop
lods
lods
fs
repnz
icebp
in
std
dec
xlat
adc
push
inc
and
jns
test
and
xor
adc
repz
xor
rcl
push
xlat
das
lods
mov
xchg
sub
push
ins
stc
xchg
outs
rol
ret
xchg
add
sar
add
mov
fwait
jge
pop
xchg
push
sti
add
push
cmp
jge
xchg
dec
cmp
add
sbb
xchg
call
cdq
fst
ret
xchg
loopne
cwde
adc
mov
jnp
push
mov
dec
xchg
add
cli
fstp
push
adc
inc
add
adc
cmp
mov
jmp
cmp
or
cmp
mov
add
mul
xchg
lahf
fs
xor
adc
(bad)
add
cs
daa
in
clc
inc
(bad)
push
ins
add
inc
and
cdq
ret
out
jg
xchg
ins
pop
push
fs
ins
adc
mov
outs
lock
sbb
push
cmps
mov
fs
popf
out
inc
mov
push
sub
in
sub
scas
jp
mov
lock
fdiv
inc
fld
lock
(bad)
(bad)
jo
and
and
xchg
movs
jmp
retf
fs
out
aad
xor
mov
cdq
mov
mov
adc
lods
add
cmp
pop
jne
fcomp
in
mov
lods
ins
dec
jecxz
(bad)
xor
mov
inc
ins
adc
mov
call
rol
les
test
sub
push
ja
add
sub
xlat
stos
and
push
dec
jmp
add
add
jnp
add
cmp
(bad)
neg
fwait
xchg
sar
mov
int
jb
sti
xchg
icebp
dec
and
lock
adc
add
test
ror
fdivr
mov
iret
mov
add
xchg
mov
aad
mov
call
mov
pop
loop
pop
add
loopne
and
rol
in
inc
push
cli
dec
fdivr
mov
das
mov
loope
jae
loope
jmp
cmc
push
popa
push
mov
push
test
dec
mov
pop
sub
into
mov
or
fcom
cdq
jge
inc
mov
retf
imul
or
mul
fdivr
xchg
adc
not
in
pop
sub
push
loope
xor
in
mov
jne
fsub
jle
sahf
fld
in
xor
jo
adc
jnp
fstp
xchg
int
and
xor
cdq
sti
or
sub
or
sbb
in
leave
(bad)
push
fwait
xor
data16
adc
daa
or
or
dec
and
xchg
popa
cmp
jbe
pop
movs
lahf
ss
push
jbe
inc
aad
xchg
popa
jmp
loop
retf
push
outs
xor
in
fwait
inc
xor
scas
retf
aam
xor
mov
ds
mov
mov
jle
aaa
test
xor
and
pop
sbb
lahf
jno
xlat
ficom
in
jbe
and
sbb
xchg
pop
sub
hlt
dec
jne
enter
or
push
out
mov
fnstcw
mov
xor
cmp
dec
fldcw
popf
push
rcr
xchg
xchg
xchg
sbb
popf
cld
mov
sbb
(bad)
or
std
and
int3
and
sti
dec
mov
adc
mov
mov
les
jno
ss
arpl
pop
sbb
daa
cld
mov
and
int3
aaa
ret
sub
in
rcl
outs
imul
ficomp
stc
mov
repz
xor
out
mov
mov
jmp
outs
dec
iret
cmp
loopne
dec
mov
in
xor
jmp
inc
inc
inc
call
xchg
inc
and
adc
mov
add
stos
outs
dec
in
push
ret
scas
shl
loopne
mov
ds
push
adc
(bad)
fwait
and
outs
dec
ins
test
dec
nop
add
xchg
cmps
test
pop
and
adc
popa
push
push
sbb
adc
inc
sub
adc
mov
movs
inc
jecxz
mov
add
xchg
dec
stos
or
cmp
lods
add
xchg
rcr
add
call
aad
loopne
xchg
add
call
xchg
add
call
xchg
or
in
xchg
add
xchg
add
cmp
add
int3
add
and
mov
int
dec
and
push
jmp
gs
push
shr
mov
or
retf
jecxz
mov
add
retf
xchg
add
add
jns
mov
int
enter
loopne
gs
jo
xchg
add
call
xchg
add
call
xchg
add
call
push
add
call
aam
loopne
xchg
add
call
xchg
add
call
xchg
add
call
xchg
inc
lods
xchg
add
in
cdq
or
loopne
xchg
add
call
push
add
and
rol
sub
adc
sbb
xchg
and
in
add
push
jl
mov
lds
test
mov
mov
repz
fisubr
loop
nop
mov
out
enter
jmp
loope
push
outs
leave
arpl
jmp
mov
cmp
mov
std
cmp
repnz
ret
cmp
push
dec
(bad)
pushf
pusha
jns
loopne
pusha
xor
dec
or
xor
cmp
sahf
xchg
sub
xchg
jge
push
xor
adc
dec
add
mov
mul
pop
mov
cmp
push
ins
jbe
shl
mov
mov
sub
aam
bound
adc
pop
pushf
lods
(bad)
cmp
scas
xchg
sub
cmp
jne
cdq
mov
mov
push
loope
fist
(bad)
push
cwde
int3
xor
test
jno
or
ss
and
push
arpl
or
mov
and
cs
fld
ret
cmp
mov
jo
xchg
push
sar
pushf
test
cmp
cli
ja
std
clc
bound
(bad)
or
pop
leave
ins
clc
push
mov
dec
aaa
in
mov
pop
repz
adc
push
or
inc
cs
sbb
lahf
jno
inc
sbb
fsubr
imul
cmps
dec
ins
fs
sub
sub
fnstenv
mov
or
outs
adc
sti
push
cmp
or
mov
dec
sbb
mov
xchg
adc
mov
ja
and
inc
cmp
pop
dec
out
aam
jmp
sub
and
packssdw
jns
leave
dec
pop
or
pop
div
inc
leave
and
mov
test
loop
retf
fucom
sahf
adc
cmp
enter
fdiv
dec
pop
pop
icebp
push
mov
push
mov
pop
jae
pop
dec
sub
lods
push
lock
inc
in
popf
or
cld
cdq
or
loopne
xchg
add
call
xchg
inc
lods
push
add
stos
xchg
test
xchg
inc
mov
jmp
add
mov
jae
dec
pop
test
adc
fdivr
in
stc
cld
mov
push
aam
shl
shr
push
sti
ins
cs
sbb
sbb
add
fnsave
fnstenv
jp
sbb
jnp
sub
lds
sahf
adc
pop
shr
out
dec
jmp
dec
(bad)
js
ins
mov
scas
daa
dec
test
out
dec
scas
fist
xchg
mov
push
ffreep
inc
pusha
inc
setbe
cmp
aam
inc
pop
cmps
shr
ins
mov
push
icebp
dec
mov
mov
arpl
rcl
(bad)
bound
je
sahf
jp
xchg
mov
lds
dec
leave
sub
pop
fld
dec
xchg
push
mov
mov
mov
pop
das
jmp
(bad)
shr
loopne
push
ins
xchg
pop
pop
int
rol
xor
fwait
inc
dec
push
js
imul
das
sar
out
repz
inc
and
repnz
std
aad
jp
pop
adc
sub
test
(bad)
retf
retf
fnstcw
dec
push
lods
stc
lods
into
jne
out
enter
in
xor
test
aaa
fxch
std
dec
or
jmp
arpl
clc
imul
mov
sti
push
push
hlt
out
fbld
sub
ret
push
ins
cmp
in
fdiv
mov
and
repz
ja
sub
sub
lock
sbb
int3
and
test
jl
mov
out
xchg
daa
dec
mov
pop
xor
fwait
(bad)
and
(bad)
das
cwde
sbb
sbb
jle
mov
dec
push
sar
pop
out
or
mov
mov
jl
mov
cmp
mov
adc
inc
aad
loopne
popf
or
in
sbb
in
xchg
add
call
xchg
(bad)
adc
out
adc
arpl
push
pop
movs
outs
(bad)
add
stos
adc
mov
mov
in
xchg
std
mov
aad
dec
psubq
add
jl
mov
mov
fmul
hlt
je
inc
icebp
xor
fisub
data16
fld
push
out
pop
arpl
xchg
sbb
add
lea
inc
mov
mov
rol
add
jle
add
cmp
jecxz
adc
xor
and
xor
enter
pop
pop
push
sti
lahf
pop
cmp
mov
jge
and
mov
adc
mov
loopne
scas
push
fcomp
sub
xor
stos
aad
jo
xchg
retf
xchg
dec
sahf
fs
xchg
gs
xor
mov
mov
ins
sbb
mov
and
xor
adc
mov
movs
arpl
mov
mov
mov
mov
push
add
addr16
xchg
cmp
jp
jp
inc
cmp
xchg
add
xor
(bad)
movs
hlt
jnp
test
xor
sub
retf
ror
jbe
pop
add
cmps
test
call
rol
sbb
jno
(bad)
stc
pop
push
sbb
lds
jmp
cmp
push
in
movs
push
sbb
inc
lahf
dec
lock
add
lods
fst
inc
loope
mov
cmps
dec
xchg
mov
stos
mov
pop
mul
inc
or
sti
and
ja
jnp
out
(bad)
loopne
xchg
inc
das
cmps
jmp
adc
inc
inc
sar
dec
xchg
pop
retf
repnz
loopne
stc
xchg
xchg
push
xor
xchg
mov
sbb
pop
not
fadd
xor
push
pop
out
inc
dec
sahf
xchg
movs
or
xor
inc
push
cmp
movs
lods
nop
jmp
out
add
adc
lock
push
or
pop
add
outs
shl
loop
pop
movs
sub
dec
or
dec
cmps
and
adc
pushf
or
add
inc
(bad)
mov
addr16
jae
jne
push
out
stc
jno
inc
jecxz
enter
icebp
cmps
sar
call
(bad)
cdq
and
and
mov
(bad)
sbb
add
ins
stos
mov
and
mov
cmps
sub
jl
add
xor
call
or
xchg
cmp
mov
int3
fidivr
add
movd
xchg
loop
pop
cmp
mov
rcl
cmp
ret
inc
sub
jns
fldcw
pop
stc
(bad)
loopne
imul
ins
test
cwde
imul
xor
xor
loopne
or
outs
push
mov
mov
pushf
inc
fdiv
sbb
adc
in
call
mov
fadd
mov
xor
xchg
out
and
jo
xchg
idiv
ret
jae
mov
pop
mov
pop
test
inc
and
mov
mov
enter
pushf
mov
bound
inc
jp
test
clc
js
and
adc
call
popf
shl
loopne
popa
loope
in
add
ret
rcl
nop
imul
mov
sbb
cmp
(bad)
sub
mov
adc
loopne
stos
pusha
mov
or
lods
call
adc
ret
cmp
retf
mov
jmp
cwde
mov
add
sub
or
aaa
mov
push
test
sbb
nop
and
scas
mov
gs
lock
repnz
mov
jecxz
fadd
xchg
ss
lods
jae
inc
or
mov
xchg
push
xchg
popf
inc
and
dec
push
adc
rcl
dec
inc
enter
add
dec
cmp
popf
test
popa
xchg
ins
sar
in
test
and
sub
lea
mov
cmc
lock
mov
mov
jecxz
pusha
mov
iret
lahf
ret
fiadd
enter
loope
adc
not
int
outs
test
sub
mov
es
add
clc
and
mov
test
ror
jg
pop
pop
aam
int
into
add
dec
mov
mov
xchg
pop
sbb
xchg
or
lahf
out
jmp
cwde
not
add
push
push
data16
in
xor
fs
(bad)
in
xchg
fisttp
xchg
movs
loopne
test
mov
test
fldcw
mov
cwde
mov
and
vmulps
imul
scas
mov
mov
or
inc
lea
int
outs
(bad)
repnz
or
cmp
push
pop
std
and
into
or
xchg
clc
jge
mov
bound
push
pop
push
fsub
mov
leave
cmp
sbb
xor
push
mov
outs
jecxz
pop
and
jecxz
mov
retf
retf
mov
push
xchg
add
xchg
xchg
jl
imul
mov
sub
std
shl
jle
cmc
mov
cdq
sti
loope
cmp
aad
repz
and
mov
xchg
daa
sub
jbe
movs
pop
es
push
test
iret
adc
and
(bad)
mul
and
bound
ss
lock
add
inc
xchg
jmp
scas
mov
and
sub
(bad)
nop
ins
hlt
and
jg
sub
mov
adc
and
movs
ret
and
jb
cli
fadd
mov
fdiv
out
mov
mov
adc
cmc
dec
fisub
cmp
or
(bad)
cmps
movs
fstp
push
and
loope
rol
fwait
rcl
add
sbb
fcomp
pop
xchg
inc
mov
adc
inc
std
sahf
nop
fimul
cs
and
mov
aad
push
xor
adc
inc
in
mov
xchg
rcr
mov
shl
xchg
sub
pushf
adc
xchg
fwait
imul
mov
daa
cmps
inc
out
das
test
out
inc
cdq
xor
pop
pop
repnz
shr
xchg
push
sysexit
inc
and
inc
icebp
cmp
adc
in
(bad)
in
mov
fs
push
cld
xchg
(bad)
bnd
jmp
jmp
pop
test
push
test
mov
cmps
fidivr
sub
cmp
mov
aam
jb
bound
imul
mov
jbe
adc
mov
pop
inc
mov
add
sbb
push
cmp
repz
dec
mov
fst
clc
stos
xor
test
and
add
cs
lahf
cmp
jbe
push
fild
adc
outs
cmp
add
xchg
push
adc
or
or
cmps
bound
sub
push
sbb
rcl
or
jl
inc
gs
pushf
nop
(bad)
fnstsw
sbb
mov
pop
cmp
cmp
scas
cmp
mov
imul
sub
and
fwait
mov
and
(bad)
jecxz
loopne
adc
aaa
inc
xchg
fwait
cs
(bad)
add
mov
mov
inc
adc
add
les
xchg
mov
mov
mov
pusha
fldcw
and
jmp
xchg
xor
sbb
xchg
inc
leave
icebp
mov
loopne
xchg
add
jecxz
imul
loopne
or
in
or
lock
mov
hlt
clc
test
rcr
xor
les
dec
mov
les
dec
mov
rcl
leave
popa
mov
mov
cdq
add
clc
test
hlt
int3
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
xchg
inc
shr
add
xchg
inc
loopne
rol
lock
add
loopne
add
loopne
xchg
add
call
cdq
adc
loopne
std
lock
add
in
xchg
add
call
xchg
add
clc
sbb
mov
movs
or
in
test
add
aam
(bad)
aad
add
xor
ja
mov
sub
fistp
bound
cmps
push
test
stc
or
je
push
hlt
push
call
or
mov
addr16
sub
mov
out
and
enter
xchg
jge
call
cdq
add
call
xchg
add
in
or
in
xchg
sbb
adc
add
in
xchg
add
cld
popf
popf
inc
retf
mov
jp
add
push
outs
xor
mov
xlat
jmp
jns
jns
lods
ficom
imul
popa
stos
fs
and
add
pop
add
stos
rol
jnp
(bad)
out
sbb
xchg
mov
std
add
stos
or
retf
mov
adc
jo
mov
imul
pop
rol
call
enter
call
xchg
add
icebp
mov
xlat
push
imul
daa
ins
push
xchg
inc
shr
add
ret
inc
xchg
pop
push
mov
mov
test
outs
ficom
pop
loop
cmps
mov
and
imul
sub
das
push
xchg
in
and
add
pushf
sbb
cmps
mov
fmul
cwde
cmp
out
(bad)
xchg
js
fcomp
inc
add
out
mov
adc
es
stc
je
cmp
pop
pusha
mov
ror
mov
and
jmp
stos
fst
dec
cmp
je
jne
mov
add
inc
fwait
rcl
outs
cmp
sti
xchg
mov
call
cld
xchg
add
call
popf
or
test
push
dec
in
push
sbb
fcom
and
mov
sbb
add
in
popf
add
(bad)
mov
or
ds
or
mov
fwait
xchg
cs
mov
nop
pop
sub
mov
test
pop
loop
mov
push
sti
inc
sbb
jns
xchg
into
fstp
outs
retf
mov
iret
mov
in
scas
jmp
loopne
inc
lods
cdq
mov
push
sar
out
stc
leave
sbb
mov
or
cld
fwait
mov
mov
(bad)
div
dec
sub
jmp
into
js
fdiv
test
sub
push
cmp
and
arpl
lods
inc
pop
std
xchg
shr
cmp
rol
cmp
leave
fdivr
shl
push
ss
adc
retf
adc
out
dec
call
jno
iret
add
fwait
out
outs
push
push
call
jb
movs
xor
push
mov
dec
fwait
sub
mov
mov
test
rcl
pop
mov
mov
shl
adc
cmp
mov
or
jmp
mov
and
rol
fld
iret
movs
and
adc
pop
sub
cmc
xor
cmps
pop
dec
mov
push
cwde
mov
cmp
xor
in
pop
femms
jg
push
adc
ja
movs
stos
mov
cld
lock
inc
loopne
xchg
or
hlt
call
xchg
add
loopne
add
lods
fst
imul
leave
das
loopne
inc
jae
sbb
fs
inc
shr
add
adc
in
jp
nop
repz
sub
mov
in
xchg
sti
mov
jns
out
fnsave
fld
ret
and
cmp
sti
sub
xchg
jns
or
jle
pop
jecxz
pop
inc
jbe
or
cmp
jnp
scas
imul
iret
inc
push
mov
mov
adc
(bad)
ds
jg
lods
ss
xchg
outs
and
ins
std
add
xchg
cmp
out
xchg
das
popa
mov
cmp
mov
jge
mov
cdq
sub
test
(bad)
iret
stos
icebp
jo
push
ds
adc
mov
shl
xchg
mov
pop
neg
jae
sub
ret
cmc
inc
icebp
dec
inc
adc
xor
xor
jp
outs
push
pusha
xchg
call
out
jmp
mov
sub
push
fwait
jb
sub
cs
retf
scas
popf
jle
hlt
jbe
adc
enter
enter
push
dec
data16
sbb
ins
lahf
mov
ret
push
jmp
aad
sbb
mov
fistp
jns
dec
pop
and
push
ins
ror
scas
ja
out
aas
sbb
xchg
test
in
xchg
add
loopne
xchg
add
in
rol
gs
inc
sub
scas
push
dec
call
dec
mov
mov
ret
sbb
push
fild
idiv
sbb
pop
fist
dec
xor
pop
sub
cdq
jp
out
call
sub
and
push
mov
in
cmp
mov
cmps
push
sbb
cmp
xor
movs
mov
push
dec
dec
nop
mov
inc
int3
and
lods
inc
sti
ja
jecxz
jmp
xchg
fsub
cmp
ins
xor
les
jno
pop
lods
out
mov
outs
sbb
int
std
(bad)
addr16
(bad)
fsubr
cmps
or
push
add
cmp
out
xor
cmp
pop
ret
push
jp
xor
lods
and
push
je
mov
scas
push
cld
mov
movs
or
in
call
dec
or
shr
loope
int3
adc
sbb
xchg
lods
xchg
add
loopne
or
in
xchg
add
call
xchg
inc
gs
push
inc
cs
push
sbb
xchg
and
in
add
cmps
jmp
inc
inc
sub
leave
outs
jno
jmp
cmp
stos
fwait
add
pop
cli
pushf
fbld
pop
js
dec
scas
dec
(bad)
push
test
jne
inc
jl
push
arpl
nop
aaa
dec
sub
and
in
(bad)
test
outs
sub
pop
jl
int3
cmp
fisttp
adc
in
fsub
jno
mov
adc
add
jge
and
push
popa
cli
jp
popf
ficomp
js
dec
mov
(bad)
gs
mov
sbb
xlat
jnp
test
dec
in
sbb
and
pop
popf
xchg
not
dec
sbb
xchg
mov
xchg
mov
xor
daa
inc
fisttp
ins
rol
loopne
add
movs
call
push
xchg
in
adc
fs
inc
shr
add
add
dec
(bad)
dec
inc
mov
mov
retf
stc
add
cmp
aam
addr16
ja
fidivr
adc
xchg
jo
mov
pushf
div
popf
and
pop
loop
pop
fist
leave
push
or
push
adc
in
and
cld
mov
jne
aad
ss
retf
imul
adc
scas
shl
mov
std
in
fndisi(8087
inc
ins
push
ret
lea
fiadd
add
and
retf
mov
cli
hlt
jo
popf
out
adc
inc
add
sar
ins
aad
mov
mov
stos
mov
cmps
xlat
test
repz
ret
hlt
inc
fisub
inc
mov
dec
push
sub
push
inc
dec
cmc
xchg
cmps
jmp
aad
out
add
push
sbb
jmp
sti
xchg
and
in
add
call
rol
lods
push
add
cs
loopne
xchg
add
mov
rcl
in
into
mov
mov
lods
das
cmp
dec
mov
xchg
pop
push
mov
jno
pop
pop
mov
movs
add
push
fist
je
or
push
cmps
jb
mov
mov
jns
sbb
jmp
test
adc
fld1
mov
xor
cmc
mov
test
xlat
pop
add
jne
jnp
jl
loope
jecxz
popf
push
lock
sbb
dec
xlat
xchg
push
mov
popa
xor
imul
push
inc
sar
call
mov
and
lahf
xor
sbb
cmps
push
mov
push
cmp
fs
xor
out
in
jp
into
pop
mov
ja
push
and
xor
xor
aad
inc
sub
xchg
jmp
pop
or
and
push
and
aad
pop
sub
(bad)
imul
loopne
xchg
add
jecxz
imul
loopne
or
in
or
lock
mov
hlt
clc
test
rcr
xor
les
dec
mov
les
dec
mov
rcl
leave
popa
mov
mov
cdq
add
clc
test
hlt
int3
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
xchg
inc
shr
pop
mov
xchg
inc
loopne
rol
lock
add
call
xchg
add
call
xchg
add
clc
sbb
sbb
xchg
ins
in
xchg
or
loopne
xchg
add
call
xchg
or
lock
call
call
int3
(bad)
movs
xor
addr16
int3
aam
addr16
lods
inc
retf
sub
sahf
lea
loopne
jge
xchg
cs
xchg
add
call
jno
idiv
jmp
adc
test
sbb
mov
(bad)
pop
fwait
dec
adc
call
xchg
jno
mov
daa
in
dec
inc
das
dec
fsub
mov
mov
test
mov
call
leave
sbb
bound
iret
or
cmp
pop
mov
mov
nop
stos
ins
xor
je
adc
loopne
xchg
add
call
inc
loope
call
push
xchg
jbe
sub
dec
dec
push
mov
inc
lahf
xor
iret
int
adc
xchg
add
call
test
jb
ret
daa
cld
sbb
mov
sub
mov
sbb
rcl
mov
call
jno
inc
jp
fist
mov
outs
or
(bad)
(bad)
mov
data16
dec
pop
aas
les
mov
add
call
xchg
pop
mov
jl
xor
mov
loopne
addr16
jo
xchg
fs
ins
ret
sti
div
sbb
jno
lods
cld
mov
call
jne
sahf
(bad)
jmp
enter
shr
sub
cmp
fcomp
scas
repnz
mov
loopne
xchg
sbb
or
int3
inc
adc
mov
xchg
add
cmp
scas
inc
mov
pop
xchg
add
call
push
add
call
xchg
add
sub
add
xchg
add
call
xchg
stc
les
pop
loopne
xchg
add
call
xchg
sbb
loopne
xchg
add
call
xchg
add
mov
xchg
add
call
xchg
add
in
jmp
push
pushf
add
call
xchg
add
call
xchg
add
call
xchg
add
call
sbb
add
call
xchg
add
call
xchg
add
call
xchg
js
xchg
or
in
add
lock
add
call
lea
loopne
dec
in
ror
adc
xchg
add
cld
popf
lods
mov
pop
sbb
xor
test
loope
dec
adc
mov
and
mov
push
jne
adc
sti
repnz
rol
pop
(bad)
push
pop
sbb
xchg
adc
push
mov
xchg
inc
shl
inc
leave
push
push
ss
pusha
aam
jno
fisubr
dec
cmp
cmp
xor
ja
push
stc
mov
movs
sbb
push
push
ss
in
cwde
ficom
fwait
jecxz
xlat
mov
ja
(bad)
jb
shrd
jb
mov
mov
ja
(bad)
jb
push
pop
xchg
sahf
jb
mov
mov
ja
mov
pop
jge
mov
outs
push
imul
mov
mov
pop
adc
call
(bad)
rcl
fld
repz
hlt
(bad)
pusha
idiv
dec
pop
lock
gs
das
(bad)
and
jl
jno
xchg
outs
sub
das
inc
push
shl
jbe
in
lea
aam
leave
fbstp
aas
dec
dec
xchg
sti
cwde
push
outs
mov
pop
or
test
sub
loopne
mov
das
or
ret
mov
cmp
or
or
cli
jecxz
dec
or
xor
in
pop
cmp
adc
es
xchg
jge
add
cmp
mov
xchg
test
push
sbb
mov
loop
add
and
add
xchg
cmp
fwait
cmp
daa
xor
mov
fcmovb
cmps
fxch
cmp
out
cmps
ss
mov
or
mov
xlat
ss
xchg
mov
(bad)
jmp
mov
test
fnstsw
and
dec
inc
aad
push
pop
push
mov
jg
test
mov
mov
in
shl
lods
lahf
mov
idiv
dec
fnstenv
pushf
mov
sub
ds
pop
jbe
pop
pop
retf
loopne
leave
aas
sar
das
imul
cmp
pop
(bad)
dec
inc
push
mov
mov
xor
cld
pop
(bad)
dec
inc
push
mov
mov
xor
cld
pop
(bad)
dec
inc
push
push
xor
and
push
das
not
iret
mov
adc
mov
out
lods
mov
and
rol
rcl
or
cmp
sub
or
rcl
leave
mov
ins
lea
fidivr
adc
bnd
mov
jmp
and
mov
aam
push
and
test
repz
mov
jmp
pop
mov
mov
mov
jge
sub
imul
mov
inc
sub
mov
mov
repz
xchg
fmul
into
mov
dec
movs
adc
xor
mov
scas
in
imul
push
pop
push
cmps
mov
pushw
or
cmp
sbb
or
xor
into
vcvtsd2ss
stc
test
and
adc
int
add
push
sbb
push
xor
xchg
ds
xor
sbb
or
stc
jns
cwde
std
icebp
add
jns
mov
jno
or
stc
jns
cwde
std
icebp
add
jns
mov
jno
or
stc
jns
cwde
xrelease
pusha
jae
(bad)
push
or
jmp
cld
pop
call
adc
cwde
aas
push
xor
retf
inc
sbb
or
aam
or
mov
lods
xor
int3
add
xor
jb
out
lods
movs
mov
movs
les
sar
lds
lods
ret
fcmovnu
xor
add
mov
frstor
fsincos
repnz
bound
dec
and
(bad)
fcom
(bad)
xor
dec
sbb
stos
imul
test
xor
outs
push
sar
xor
outs
(bad)
in
mov
fs
fstp
lock
cmp
in
and
xchg
(bad)
cmp
fwait
lods
call
fisttp
xor
mov
dec
xchg
mov
lock
call
fidiv
addr16
xor
fmul
in
test
cmps
out
ins
and
imul
and
push
push
arpl
fbstp
jae
mov
fwait
js
lahf
pop
pop
mov
push
inc
aas
cmp
dec
pop
sbb
cmp
and
add
retf
ja
jb
inc
call
div
(bad)
dec
out
mov
imul
aas
in
addr16
push
and
jg
or
mov
xchg
aas
in
addr16
push
and
jg
or
mov
xchg
aas
in
addr16
push
and
jg
or
mov
xchg
aas
in
addr16
push
and
jg
or
mov
xchg
aas
in
addr16
aas
clc
pop
adc
xor
mov
(bad)
repnz
bound
or
adc
adc
sub
jnp
test
and
outs
push
icebp
jnp
test
and
sbb
rcl
xor
aas
clc
pop
adc
sub
call
xchg
add
loopne
xchg
add
in
test
mov
rol
mov
push
adc
in
push
sbb
and
in
add
jns
push
xor
daa
stos
stc
sbb
(bad)
push
pop
test
rep
aad
cmp
adc
and
lods
xor
sbb
dec
sbb
adc
push
ja
shl
rol
sub
push
mov
mov
cmps
dec
jmp
cld
data16
xchg
sbb
pop
es
sbb
ds
jg
leave
popf
mov
xor
inc
inc
xchg
aam
push
sti
add
in
and
imul
jo
(bad)
xchg
adc
mov
xchg
repnz
jns
cmc
mov
push
xchg
and
movs
fcom
sti
pop
lods
fnstsw
punpckhdq
adc
jbe
cmc
retf
lock
pop
or
sub
in
arpl
sub
pop
dec
pop
enter
add
jge
idiv
cmp
mov
sti
cld
gs
mov
jl
sbb
ror
cmp
fadd
bound
mov
or
add
mov
mov
fnstenv
inc
outs
xor
cmp
inc
out
ret
jg
nop
mov
adc
mov
movs
loope
dec
adc
in
test
mov
sbb
xchg
mov
mov
mov
stos
adc
nop
out
shl
push
pushf
pusha
in
out
cwde
xor
and
cld
sbb
movs
(bad)
xchg
fwait
fwait
cmp
js
lds
cdq
ss
sub
cmp
cmc
dec
ror
fld
icebp
out
fdivr
add
or
mov
adc
hlt
xor
ficom
fsub
(bad)
fwait
js
add
loopne
pop
add
jb
in
scas
cld
cs
jecxz
xchg
add
push
mov
out
or
push
daa
mov
lea
mov
shl
xchg
sub
jp
dec
sar
push
pop
cwde
hlt
sbb
xor
mov
cmp
scas
jmp
and
mov
xchg
xor
cs
pop
lods
jb
js
jbe
fidiv
dec
pop
xor
jnp
and
imul
outs
loope
cli
iret
cmp
mov
jl
cwde
dec
push
shl
sbb
loop
ror
dec
out
and
push
cdq
xchg
pop
xchg
mov
or
pop
fsub
int3
dec
popf
pop
in
mov
fwait
mov
jns
movs
rol
fiadd
inc
das
fisttp
ror
xor
imul
push
jae
hlt
loop
enter
lahf
sar
ins
imul
neg
jnp
out
(bad)
fstp
in
cmps
push
sbb
cmp
ja
ret
xchg
lods
stos
mov
sbb
adc
aam
mov
push
call
cli
out
and
mov
cmc
add
and
jbe
(bad)
sbb
loopne
xor
(bad)
inc
jp
add
add
pop
out
add
test
in
sub
dec
enter
movq
loopne
adc
je
jbe
inc
mov
xor
jmp
sar
and
xor
jp
mov
mov
add
add
pop
out
add
test
in
sub
dec
enter
movq
loopne
adc
je
jbe
inc
mov
xor
jmp
sar
and
xor
jp
mov
mov
add
add
pop
out
add
out
sbb
or
mov
push
out
sbb
or
mov
push
out
sbb
or
mov
push
out
sbb
or
mov
push
out
sbb
or
mov
push
out
sbb
or
mov
push
out
sbb
or
mov
push
out
sbb
or
mov
push
out
sbb
or
stos
movs
loopne
(bad)
(bad)
sub
adc
popf
and
xchg
add
xchg
pop
mov
cmp
(bad)
pop
dec
mov
movs
fsub
jle
imul
movs
loopne
(bad)
(bad)
sub
adc
popf
and
xchg
add
xchg
pop
mov
cmp
(bad)
pop
dec
mov
movs
fsub
jle
imul
movs
loopne
(bad)
(bad)
adc
ds
sbb
(bad)
mov
cmp
out
mov
bound
fadd
pop
aaa
xchg
cwde
imul
pop
arpl
cmp
mov
out
push
or
cmp
or
push
xchg
mov
imul
adc
inc
jp
add
jnp
sub
push
mov
fisttp
jp
inc
pop
cmp
cmp
sbb
(bad)
mov
popa
rcr
mov
daa
and
cs
cmp
xchg
out
and
ds
retf
or
pop
mov
jp
pop
iret
and
test
call
xor
aam
test
into
push
mov
mov
xor
sbb
mov
cs
jp
sbb
sti
inc
jg
and
das
pop
iret
xchg
test
add
sti
cmp
jae
add
fsub
pop
outs
mov
pop
xchg
cmp
movs
call
xchg
or
lock
add
call
popf
add
movs
ins
push
adc
popa
sbb
push
mov
call
mov
movs
and
outs
sahf
int
stos
pop
lods
outs
icebp
shr
push
mov
(bad)
adc
mov
dec
xor
dec
xor
loopne
and
mov
fisubr
mov
push
sbb
repnz
nop
sbb
addr16
gs
jnp
int
mov
mov
push
mov
ret
mov
in
cmps
push
out
les
mov
cmps
push
out
les
mov
cmps
dec
or
pop
(bad)
into
(bad)
ins
adc
sub
jecxz
ja
jl
fs
outs
js
dec
and
arpl
lahf
mov
inc
loope
sbb
cmps
stos
mov
mov
shl
add
hlt
push
nop
int3
mov
test
das
jg
push
pop
in
pop
pop
(bad)
enter
and
sbb
jg
push
sbb
fstp
dec
int3
push
jo
js
jb
stos
xor
push
hlt
lea
into
retf
push
sar
stos
(bad)
pop
mov
ret
sbb
test
adc
cmps
pop
cli
add
sub
stc
pop
pop
mov
arpl
call
sahf
or
(bad)
cs
fwait
sbb
cmp
push
iret
out
test
shl
inc
sbb
mov
stc
(bad)
fwait
push
arpl
add
rcr
lock
cmp
es
mov
inc
ret
mov
push
scas
jmp
cs
clc
pop
mov
cwde
mov
mov
and
mov
sar
enter
xchg
sar
enter
xchg
sar
popa
mov
push
sahf
ja
adc
jp
sar
mov
mov
pop
cld
pop
out
dec
cs
aam
sahf
shl
aaa
icebp
inc
int
sahf
cdq
xchg
jae
aad
push
clc
fstp
scas
aad
mov
dec
(bad)
dec
jbe
add
iret
ins
ret
mov
fimul
mov
aaa
imul
and
jbe
and
push
imul
adc
push
jle
cmp
cli
add
pop
jae
retf
test
clc
cs
cli
push
xchg
enter
or
mov
sbb
mov
jnp
sbb
mov
jnp
sbb
xchg
push
lahf
dec
mov
ja
(bad)
xor
jmp
ffreep
outs
nop
ror
sbb
xchg
mov
(bad)
in
ja
retf
ret
push
rcr
test
outs
and
pop
nop
inc
sub
push
push
loope
xchg
cdq
cmp
neg
fidivr
mov
fiadd
inc
je
push
loopne
pop
test
(bad)
jae
dec
cmp
rcl
push
clc
(bad)
test
mov
xor
out
xor
sub
call
loopne
pop
popf
dec
mov
jns
fcmovu
inc
fild
movs
pusha
movs
cdq
mov
pop
dec
xchg
sar
fdiv
inc
nop
(bad)
aas
enter
test
jae
dec
push
dec
in
push
faddp
or
cmp
jmp
sbb
mov
inc
fild
movs
pusha
cmc
out
mov
sbb
arpl
div
out
mov
sbb
arpl
div
out
mov
sbb
arpl
div
out
mov
sbb
arpl
div
out
mov
add
mov
cmps
leave
mov
mov
cmps
leave
mov
mov
cmps
leave
mov
mov
cmps
leave
mov
aas
pop
inc
inc
int3
cmps
dec
mov
stos
mov
inc
int3
cmps
dec
mov
stos
mov
inc
int3
cmps
dec
mov
stos
mov
inc
int3
cmps
dec
mov
stos
mov
inc
push
std
lock
inc
loopne
test
lock
cdq
adc
loopne
popf
or
lods
fild
pusha
push
int
mov
adc
call
call
sbb
bound
pushf
xchg
xchg
and
in
xchg
sbb
mov
add
test
test
adc
pop
push
cwde
dec
dec
dec
and
lahf
sub
movs
cmp
sbb
cmp
lods
xor
inc
xchg
(bad)
dec
je
fisubr
sbb
pop
cdq
mov
idiv
lods
push
shl
mov
fs
(bad)
into
stos
and
test
(bad)
das
xor
ds
pop
sbb
outs
pop
int
xchg
loop
xchg
dec
pop
xor
pop
adc
add
inc
sub
mov
xchg
mov
iret
mov
or
rcr
outs
outs
jp
xchg
mov
imul
add
xor
and
lods
adc
imul
cmp
movs
test
push
(bad)
js
push
and
sub
adc
push
mov
mov
dec
in
cmps
pop
jno
xchg
sub
cli
clc
sbb
outs
test
and
inc
mov
rep
pop
adc
jns
xor
mov
mov
ds
fwait
lahf
or
test
fdivp
in
in
cdq
mov
xor
retf
test
and
(bad)
jle
ret
add
jmp
mov
or
mov
scas
imul
and
(bad)
jle
ret
add
jmp
mov
or
mov
scas
imul
and
(bad)
jle
ret
add
jmp
mov
jno
xchg
rcl
sti
sub
jns
dec
push
sar
iret
adc
stos
adc
test
arpl
ins
aad
cwde
movs
xlat
sbb
or
lahf
shr
pop
mov
stc
ins
out
or
push
lea
aad
mov
inc
fist
pop
inc
dec
arpl
mov
outs
add
scas
dec
aas
into
fcmovne
unpcklps
adc
scas
scas
movs
movs
sub
push
sub
rcl
ret
mov
jle
cld
push
pop
push
add
inc
leave
idiv
ins
into
sbb
adc
daa
inc
lea
pop
stos
mov
push
lds
in
and
call
and
movs
xor
or
sub
xor
mov
or
sub
push
jno
fcmove
mov
mov
push
lds
in
and
jecxz
movs
test
push
add
mov
xchg
fcom
(bad)
pushf
ins
test
mov
ss
xchg
enter
int
imul
lea
mov
fsubr
div
mov
mov
mov
sbb
std
inc
xchg
movs
add
in
pop
test
add
mov
mov
inc
adc
mov
mov
fiadd
iret
pop
sar
add
cli
ins
mov
iret
std
dec
jae
lock
lahf
xchg
xchg
xchg
pop
jl
popa
pop
dec
(bad)
sub
or
test
sbb
dec
add
dec
movs
dec
movs
sar
mov
repnz
pushf
cmp
shl
or
and
(bad)
and
sbb
dec
xor
add
jne
xor
xor
mov
popf
inc
jl
push
addr16
jb
sti
mov
xor
inc
lea
xor
sbb
cmp
or
mov
push
xor
sub
inc
push
xchg
cmp
xor
lock
or
push
outs
push
ret
sub
data16
pop
sbb
mov
add
add
mov
popa
jbe
add
jecxz
jae
in
sub
sub
xor
icebp
add
in
xchg
cmp
in
out
in
or
add
pop
lahf
in
lods
or
call
shr
fsubr
xchg
xlat
cmp
push
jno
xchg
(bad)
sub
cmp
pop
push
test
lea
retf
push
xor
pop
sub
jns
aam
lods
std
outs
adc
jg
jne
mov
inc
xor
mov
mov
sti
into
or
and
dec
and
in
cs
out
sbb
or
stos
jae
mov
xlat
mov
cs
cmc
(bad)
out
xchg
ja
cmp
(bad)
loop
out
(bad)
rol
or
mov
mov
sbb
inc
push
retf
fdiv
mov
les
xchg
inc
nop
test
outs
mov
xchg
push
mov
shl
enter
shl
movs
cwde
clc
or
mov
daa
and
sub
aad
cmps
(bad)
mov
xchg
push
push
dec
pop
adc
fldenv
jl
ror
movs
jg
dec
xchg
aaa
aam
push
dec
sub
sub
dec
fisub
cdq
pop
jge
mov
jp
data16
mov
imul
cs
out
jae
xor
out
int3
mov
test
daa
outs
push
xchg
fucomip
sub
outs
iret
push
jmp
lds
mov
mov
push
inc
jnp
repz
into
mov
pop
fisttp
and
push
xor
rcl
iret
xchg
pop
repz
adc
jno
or
cld
aas
ds
pusha
repnz
sbb
loopne
cmp
into
mov
pop
push
mul
popa
fadd
jo
loop
rol
inc
xchg
sub
cld
pop
cmc
cmp
or
xchg
xchg
dec
out
mov
pop
push
mov
ret
and
shl
push
lock
cs
shl
cmp
addr16
sbb
outs
aaa
les
loop
rol
jae
pop
repz
and
mov
shr
sub
out
pop
dec
push
xor
enter
jl
loope
jae
rcl
movs
jae
cmps
(bad)
in
dec
sbb
jns
cmp
cmps
xchg
stos
mov
jbe
and
sbb
dec
shl
xchg
xchg
cld
lds
mov
cmp
xor
outs
popa
clc
scas
in
mov
inc
nop
daa
sbb
and
imul
rcr
sub
dec
lahf
pop
adc
mov
int3
aam
daa
rol
shr
sub
imul
jp
mov
xlat
xor
xchg
jg
cmp
mov
mov
xor
mov
push
daa
mov
lock
dec
ss
jae
sub
sti
inc
xchg
retf
sahf
das
pop
arpl
leave
mov
mov
sbb
fmul
das
add
mov
mov
pop
fadd
push
push
call
sbb
push
pusha
aaa
pop
xchg
push
popf
test
cmp
ror
xchg
sbb
in
icebp
sbb
cmps
mov
(bad)
in
or
mov
outs
cmps
mov
mov
pop
mov
into
mov
fisubr
mov
pop
or
sbb
lods
(bad)
cmp
push
sub
mov
sub
or
mov
outs
cmps
mov
mov
add
loop
mov
and
ss
mov
int3
sub
aas
fst
cmp
outs
mov
test
retf
jmp
test
mov
out
mov
mov
dec
xchg
xchg
xor
enter
ja
stos
out
lock
adc
ret
xchg
xlat
movs
adc
stos
popf
adc
jl
enter
and
sbb
jno
sar
jg
js
xchg
mov
movs
add
mov
movs
cmp
mov
movs
cmp
mov
movs
cmp
mov
movs
cmp
mov
movs
cmp
add
mov
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
(bad)
shl
pop
cmp
retf
fsub
xor
retf
fsub
xor
retf
fsub
gs
mov
pop
push
adc
pop
imul
mov
pusha
push
sub
pop
imul
mov
pusha
push
sub
pop
imul
icebp
jae
and
fild
and
xchg
pop
jo
daa
(bad)
lahf
cmp
mov
adc
mov
outs
test
in
daa
clc
cmp
xchg
out
retf
pop
inc
jle
out
adc
pop
out
ja
cmp
pop
leave
pop
ins
(bad)
in
jnp
cdq
dec
into
mov
push
gs
add
or
or
rcr
fldcw
stos
or
xchg
mul
jae
and
pop
sub
or
jmp
out
ficom
ds
adc
(bad)
sub
stos
jge
sub
or
jmp
out
ficom
ds
adc
(bad)
sub
stos
jge
sub
or
jmp
out
ficom
ds
adc
(bad)
sub
stos
jge
sub
or
jmp
out
ficom
ds
adc
(bad)
sub
stos
jge
sub
or
jmp
imul
loope
jmp
test
mov
push
adc
xor
pop
cmps
cmp
or
shl
dec
jg
mov
rcr
dec
out
(bad)
hlt
ss
cmp
jns
add
push
stos
sbb
into
or
ds
mov
mov
scas
in
pusha
aam
inc
test
shl
ret
sbb
or
push
pushf
fdivr
sub
cmp
mov
inc
mov
imul
imul
loope
jmp
movs
outs
push
sbb
xchg
mov
in
in
add
loopne
xchg
add
in
rol
gs
add
rol
sub
loop
nop
xchg
outs
push
loopne
xchg
add
shl
and
lock
in
ret
leave
loope
sbb
loop
ret
enter
lock
repz
xlat
in
dec
(bad)
mov
mov
jmp
xor
inc
call
sub
fcom
ins
cmc
jne
xchg
adc
es
cmp
cwde
sub
les
add
cmp
push
pop
mov
mov
xor
pop
xchg
cmc
into
push
sbb
jbe
stos
inc
test
xchg
(bad)
sub
les
dec
fs
cdq
cmp
mov
cld
loope
jg
mov
lahf
pop
mov
mov
ins
xchg
xchg
xchg
je
pop
push
cmp
mov
aad
call
test
or
ret
int
mov
inc
or
jne
enter
inc
pop
inc
jmp
xor
jae
push
push
mov
dec
jmp
into
scas
jl
not
dec
pop
lahf
inc
fld
mov
out
mov
retf
sahf
imul
hlt
es
pusha
aam
xchg
sub
jmp
mov
or
out
mov
in
cs
fiadd
push
mov
sbb
idiv
dec
jp
cmp
push
bound
mov
sub
cmp
xor
cdq
inc
(bad)
out
pop
dec
sub
jle
dec
jp
cmp
push
bound
pusha
add
add
fidiv
test
pusha
sbb
imul
xor
sub
mov
dec
cmps
adc
dec
fist
mov
xchg
fwait
shl
dec
stos
push
hlt
in
aaa
arpl
fstp
or
iret
popa
jmp
cmp
stos
leave
jmp
shl
inc
add
addr16
fcmovnbe
or
inc
and
gs
cli
inc
jae
inc
popa
xor
adc
xchg
stc
not
xor
cld
mov
and
mov
in
jmp
leave
stos
xor
out
ret
ror
aam
adc
(bad)
stos
aad
adc
test
in
add
adc
into
pop
lods
sub
ss
push
aaa
sub
pushf
lock
sahf
push
aad
adc
hlt
adc
(bad)
shl
sbb
sbb
das
movs
mov
mov
or
xchg
int
jle
xor
mov
repnz
mov
add
js
sub
inc
(bad)
jbe
das
mov
xor
ss
cmps
cmp
repz
call
xchg
sar
fist
ror
push
rol
xchg
pop
inc
(bad)
and
(bad)
xor
mov
retf
neg
mov
mov
mov
cdq
and
sub
mov
mov
bound
ds
int3
mov
test
pop
pop
leave
lock
xchg
pop
push
pmullw
mov
cdq
and
sub
fisub
addr16
(bad)
aam
stos
rcr
sub
mov
lahf
inc
loop
jge
je
xchg
add
push
pop
retf
icebp
fs
mov
rcl
adc
das
repz
mov
mov
inc
and
jns
add
inc
cmp
test
jmp
sbb
mov
cdq
mov
sbb
mov
lods
adc
inc
inc
lahf
and
out
inc
jno
and
jle
in
sub
scas
retf
add
or
ret
jno
and
jle
in
inc
push
jnp
shl
cs
(bad)
jp
pop
pop
xchg
hlt
fidiv
sub
add
push
push
mov
add
dec
out
in
bound
adc
sub
ret
xchg
dec
mov
add
lea
popa
test
push
cld
not
inc
(bad)
xchg
add
mov
sbb
add
loopne
jg
pop
xchg
jge
jne
push
ror
add
push
scas
inc
dec
jmp
sar
inc
call
add
xchg
sahf
mov
mov
dec
popf
push
test
in
in
adc
sbb
into
div
into
sbb
fs
in
mov
enter
pop
fisttp
test
enter
xchg
hlt
fwait
lock
(bad)
sub
and
cmp
ds
ins
fs
cmp
imul
push
std
rcl
loope
cmp
rcl
mov
mov
je
push
push
aas
push
stos
dec
cwde
push
dec
adc
gs
or
jmp
pusha
sar
bound
jno
inc
cdq
and
in
lahf
imul
cld
es
add
adc
stos
xchg
dec
pop
xchg
leave
mov
jno
and
sub
jge
pop
dec
cwde
xor
je
retf
dec
pop
cld
std
js
add
mov
stc
aad
lock
adc
stc
aad
inc
and
cmp
scas
jno
jl
mov
add
jl
pop
out
lea
retf
loope
xchg
jbe
xchg
sbb
pop
aam
sub
rcr
cwde
sub
or
je
or
sbb
mov
out
sar
popf
inc
and
cmp
fsubr
and
mov
jmp
and
mov
jmp
fwait
test
sti
(bad)
lea
mov
pop
hlt
aaa
sub
fmul
rol
and
into
test
sbb
shl
xor
pop
mov
cmp
xor
cmps
outs
and
bswap
push
icebp
and
daa
repz
movs
call
pop
xchg
inc
lods
sbb
aad
inc
mov
mov
xor
imul
ror
inc
lods
push
mov
movs
or
in
call
or
fimul
xor
and
fwait
adc
jns
xchg
cmp
adc
xchg
fmul
popf
dec
outs
push
xor
mov
scas
retfw
cmp
and
mov
add
sbb
dec
lds
das
loop
scas
test
xchg
fmul
jno
cwde
cmp
add
les
inc
cld
loop
(bad)
xor
xchg
pusha
loopne
adc
call
xchg
add
mov
stos
into
add
lds
daa
jo
mov
stos
into
add
lds
daa
jo
mov
stos
into
add
lds
daa
jo
mov
jo
mov
stos
into
add
lds
daa
jp
and
(bad)
pop
dec
outs
push
xor
mov
xchg
dec
lds
daa
jo
mov
test
xchg
fmul
xor
mov
pop
dec
outs
push
xor
mov
xchg
fmul
xor
mov
xchg
fmul
jmp
inc
loopne
xchg
adc
call
xchg
add
call
adc
push
(bad)
movs
outs
(bad)
test
sub
pop
sbb
xchg
and
in
add
sbb
sti
scas
adc
stos
aaa
aam
daa
mov
ins
ins
out
push
fstp
cmps
mov
xchg
and
xchg
daa
hlt
cmp
cdq
mov
mov
mov
and
popa
inc
in
push
xor
or
sbb
cmp
mov
mov
inc
mov
jo
inc
xchg
push
fld
mov
pop
xchg
xor
sub
mov
mov
dec
pop
add
jne
fnstcw
ds
add
cs
mov
jb
fcom
add
data16
lea
pop
repnz
xchg
xor
push
mov
sbb
and
and
mov
clc
ror
imul
ret
xchg
inc
rol
ins
pop
jmp
retf
add
xor
loopne
cli
or
and
lea
add
xchg
bound
or
pushf
movs
mov
sub
dec
or
xchg
call
(bad)
xor
mov
in
mov
ins
icebp
xor
jae
enter
sbb
adc
enter
mov
mov
mov
inc
mov
mov
outs
retf
retf
in
pop
adc
mov
jno
and
add
std
mov
popa
cwde
nop
retf
hlt
enter
in
pop
adc
inc
rol
mov
mov
in
sysexit
push
push
ins
fidiv
pusha
mov
sub
inc
dec
add
dec
ficomp
lahf
adc
mov
xchg
xor
(bad)
xlat
or
or
test
sti
call
out
push
clc
ror
pop
xor
data16
fild
cmp
jo
mov
jmp
and
mov
(bad)
mov
cmp
shl
mov
not
shl
mov
not
shl
mov
not
shl
mov
push
push
mov
mov
dec
pop
add
jne
sar
shr
repnz
das
daa
mov
jle
ror
add
push
aaa
lods
lods
imul
sub
sub
dec
ret
inc
cmp
pop
into
retf
je
push
jg
xchg
cmp
dec
inc
push
push
mov
inc
lock
dec
lea
stos
xchg
test
jb
imul
lock
dec
lea
stos
xchg
test
jb
imul
call
xchg
inc
(bad)
jg
call
jmp
xchg
lock
jp
xor
jno
fs
add
test
jg
call
jmp
xchg
lock
jp
xor
jno
fs
add
test
jg
jmp
int3
adc
repnz
push
dec
fwait
mov
mov
les
adc
adc
in
and
int
and
jb
xchg
mov
mov
(bad)
aad
test
xchg
(bad)
cli
xlat
ret
test
retf
je
fmul
imul
inc
lods
xchg
or
in
cdq
adc
loopne
add
loopne
xchg
add
movs
sub
cmps
in
rol
out
adc
mov
mov
call
xchg
xor
movhps
sti
sbb
xor
call
aaa
jmp
dec
dec
sbb
or
cmc
cmc
or
jo
pusha
cli
jo
cmp
sti
or
xor
sub
aad
rcr
in
sub
cmp
add
cdq
(bad)
pop
jl
idiv
xor
clc
dec
cmp
push
shr
add
xchg
mov
loope
mov
add
mov
aaa
leave
mov
inc
mov
xor
jns
daa
bound
pop
ins
pusha
int
jmp
scas
imul
not
cdq
and
mov
add
sbb
loop
adc
hlt
imul
in
mov
mov
scas
mov
mov
jne
loope
scas
lahf
cmp
clc
ja
xchg
fmul
and
movs
ds
dec
lds
xor
(bad)
icebp
rcr
pop
push
push
sub
or
arpl
mov
(bad)
loopne
movs
lods
rol
rol
rol
rol
rol
mov
cmp
(bad)
adc
jp
loop
fldenv
mov
dec
add
sahf
dec
fist
pop
sbb
sbb
fistp
jmp
and
lods
jle
cmps
rol
jp
gs
fwait
test
fmul
xchg
sub
sub
aam
mov
call
push
stos
neg
mov
hlt
scas
mov
int
cmp
mov
sbb
mov
xchg
xchg
cwde
in
movs
dec
dec
dec
adc
fbstp
push
mov
nop
imul
mov
fistp
sbb
inc
(bad)
cs
sbb
aaa
movs
imul
sub
ins
(bad)
mov
stos
mov
and
sbb
push
cld
cmp
inc
sbb
push
int
lods
es
jge
shl
or
test
not
fsub
stc
mov
arpl
lock
jecxz
icebp
inc
sti
pop
sub
mov
into
in
mov
xchg
test
add
test
(bad)
cmp
inc
sub
mov
into
cld
cmp
das
cmc
loopne
and
and
iret
cld
popf
pop
pusha
sub
mov
les
arpl
mov
rol
xor
lds
daa
jo
mov
mov
mov
pop
mov
mov
pop
mov
mov
pop
mov
mov
pop
mov
dec
aas
push
mov
adc
inc
inc
cld
sbb
push
mov
adc
inc
inc
cld
sbb
push
jbe
add
jbe
add
jbe
add
jbe
add
and
xchg
std
lock
inc
in
xchg
or
call
cdq
add
in
xchg
test
scas
push
add
aad
daa
ins
xchg
dec
call
test
mov
xchg
shl
inc
push
test
sbb
out
scas
jb
in
ret
adc
push
add
mov
bnd
pop
mov
xchg
add
rcr
loope
aad
sahf
sar
inc
fcomp
adc
or
jne
or
lods
inc
cmp
inc
lods
imul
loopne
xchg
and
or
(bad)
inc
sub
mov
or
loop
pop
or
and
sub
aam
(bad)
(bad)
js
mov
cli
add
cmp
mov
mov
or
popf
sub
xlat
adc
adc
add
mov
push
xchg
jne
(bad)
ins
xchg
push
xchg
mov
mov
push
push
outs
push
and
cli
mov
mov
or
enter
test
imul
push
cld
shl
es
call
or
pop
ret
pop
out
mov
sahf
push
xchg
fld
addr16
mov
xchg
mov
mov
in
jb
leave
mov
add
push
fmulp
nop
jmp
jmp
out
test
push
xor
xor
and
push
mov
adc
(bad)
sbb
imul
sub
loopne
push
mov
ret
mov
scas
xchg
dec
out
mov
mov
push
movs
mov
mov
shr
cdq
popa
js
sbb
ins
loop
push
test
aaa
add
sub
sub
in
sti
inc
inc
jmp
test
push
loope
jno
sub
adc
loop
scas
int
jle
push
bswap
gs
sahf
(bad)
mov
add
add
lds
cmc
mov
int3
cdq
or
mov
(bad)
dec
imul
stos
shl
push
xchg
icebp
(bad)
mov
shr
into
add
sub
sar
fninit
arpl
or
inc
cmp
std
or
std
jmp
jge
jecxz
or
mov
leave
sub
jmp
movs
mov
mov
int
mov
(bad)
gs
push
(bad)
call
adc
adc
enter
cmp
(bad)
call
std
int3
pusha
dec
sahf
jecxz
out
mov
es
jmp
aaa
shr
pop
xor
pop
mov
clc
lods
les
push
pop
loopne
sar
fs
movs
repnz
xchg
iret
cmps
in
idiv
xor
(bad)
arpl
dec
adc
call
adc
ficomp
arpl
pop
pop
adc
int
xlat
gs
push
push
or
idiv
xor
(bad)
arpl
repnz
jmp
sbb
mov
loopne
inc
push
and
jne
adc
call
(bad)
fild
movnti
test
(bad)
repz
dec
mov
push
jne
xchg
stos
cwde
fadd
cmp
je
add
xchg
(bad)
out
aas
fs
bnd
pop
stc
dec
mov
dec
scas
mov
dec
add
in
mov
xchg
mov
mov
mov
stos
sar
std
xchg
jl
and
ins
sbb
add
jae
cmp
call
inc
lods
sbb
aad
inc
mov
mov
xor
or
inc
mov
mov
dec
pop
push
call
dec
mov
mov
pop
add
dec
cmp
and
mov
in
test
fstp
test
pushf
pushf
xor
add
loopne
push
cli
xchg
daa
es
ficomp
into
repz
push
add
inc
lahf
in
xchg
fwait
and
lods
and
cmps
movs
gs
dec
fadd
pop
addr16
jno
sbb
and
popf
mov
jns
cmp
cs
in
pop
pop
jbe
test
add
(bad)
out
and
(bad)
fwait
out
retf
xchg
je
scas
adc
pause
or
push
pop
ret
xor
int
and
inc
test
mov
sub
jecxz
dec
mov
ret
retf
jecxz
dec
pushf
cmp
cmp
fdivr
clc
fs
push
mov
add
(bad)
clc
xchg
cmp
xchg
in
(bad)
mov
push
jne
push
shl
xor
xor
xchg
mov
mov
mov
xchg
mov
call
sbb
je
jp
dec
es
add
jge
repz
imul
pop
sbb
cmp
inc
loope
cmps
xor
xbegin
and
fcmovu
cdq
xchg
add
push
or
iret
mov
mov
jne
nop
mov
or
fld
mov
rcl
push
test
push
mov
and
push
iret
mov
outs
in
push
inc
scas
dec
xor
call
mov
out
clc
rcr
lds
mov
shr
cld
or
stos
shr
sub
leave
mov
add
xchg
(bad)
aad
or
(bad)
adc
and
enter
adc
jp
add
jno
pop
pusha
adc
popf
je
and
adc
imul
jl
xchg
push
cmp
je
xchg
je
rcl
push
in
repnz
popa
and
push
clc
fdiv
shl
sbb
nop
pop
repnz
or
pop
pop
or
pop
pop
test
into
fwait
aaa
in
iret
adc
loop
adc
popf
pop
push
jp
pop
xchg
jp
cs
dec
js
sbb
jl
sub
jl
sub
fisttp
in
out
fldenv
out
ficomp
jbe
mov
paddq
psrlw
ds
pop
repnz
or
pop
pop
push
rol
sbb
aad
inc
mov
mov
xor
imul
ror
inc
sbb
out
pop
test
into
fnstenv
in
iret
adc
loop
xchg
push
popfw
pop
jne
cmp
ror
sbb
jl
sub
jl
or
fisttp
in
out
daa
scas
ficomp
jbe
mov
paddq
pop
rcr
ds
pop
lock
or
sbb
out
pop
test
mov
(bad)
iret
mov
sub
and
cs
std
mov
mov
imul
mov
xlat
out
icebp
add
gs
mov
jne
ins
imul
inc
ror
call
xchg
std
mov
cdq
add
loopne
or
in
in
or
hlt
cld
test
hlt
ror
rcr
mov
cmp
sar
inc
lods
mov
test
popa
test
rcl
xchg
or
hlt
clc
and
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
sahf
add
nop
cdq
add
in
rol
loopne
xchg
or
in
xchg
add
loopne
xchg
add
in
xchg
sbb
out
loopne
adc
cwde
xchg
add
in
xchg
add
call
xchg
add
cld
cdq
adc
loopne
and
xchg
xor
in
xchg
or
in
dec
stos
pop
and
ds
or
out
pop
push
xchg
pusha
or
fst
sar
push
inc
cmp
(bad)
in
pop
fs
mov
js
or
call
xchg
add
cmp
sbb
or
push
jg
out
mov
push
and
pop
pop
dec
xlat
or
jecxz
jnp
test
add
mov
in
out
inc
das
inc
and
pop
inc
xor
test
pop
pop
cld
cmp
not
in
xchg
add
fs
xor
outs
jle
inc
jle
push
rol
jg
push
fcom
push
fwait
push
das
adc
cmp
pop
push
fs
jge
inc
scas
pop
jne
mov
push
xchg
add
imul
call
xor
push
sti
cmp
clc
adc
or
and
sub
lahf
inc
lock
push
xor
xchg
add
and
or
xor
add
or
(bad)
adc
inc
icebp
outs
mov
es
ret
mov
movs
loop
add
std
adc
loope
xchg
add
and
(bad)
mov
stos
jb
cmp
ss
retf
imul
push
jbe
cwde
sbb
cwde
pop
adc
nop
loopne
xchg
add
mov
and
into
ins
daa
cmps
adc
sar
lea
adc
dec
sbb
retf
xlat
sub
data16
adc
aas
or
jmp
aad
lock
je
in
mov
sti
sbb
(bad)
pop
jbe
adc
or
enter
or
jp
call
dec
les
mov
inc
(bad)
out
dec
scas
cmp
sahf
or
(bad)
or
mov
ficomp
cmp
inc
pop
pop
jl
enter
clc
dec
xor
outs
push
aaa
mov
frstor
mov
fild
adc
dec
es
push
or
sbb
test
sub
inc
lock
std
dec
and
cld
xor
cmp
retf
add
dec
pop
jne
xchg
lods
xchg
mov
and
outs
outs
scas
cmp
iret
jbe
push
nop
call
retf
add
ds
pop
add
adc
dec
xor
test
sar
xchg
loopne
popf
sub
dec
loope
xchg
add
call
fptan
push
ja
shl
loope
jne
jmp
jo
xchg
add
xchg
and
jo
add
and
retf
pusha
and
or
pop
nop
or
mov
inc
jb
ins
and
call
fadd
bound
inc
sub
aad
dec
xchg
fistp
jo
mov
loopne
xchg
add
call
mov
loope
not
sub
call
mov
or
movs
mov
add
jmp
test
jns
jmp
mov
rep
add
xor
jecxz
and
add
enter
cmp
jb
cmps
sbb
loop
xchg
loope
pop
loope
add
dec
mov
pop
jmp
mov
imul
(bad)
dec
arpl
mov
sbb
cmps
add
loopne
popa
mov
in
add
(bad)
loope
xchg
adc
jmp
and
xchg
inc
loopne
aad
in
popf
or
enter
call
mov
lock
inc
loopne
cdq
or
in
in
xchg
add
call
test
loopne
popf
sbb
xor
push
xor
fadd
loopne
xchg
add
icebp
lods
ss
mov
xor
pushf
inc
mov
add
fild
ds
pop
sub
jnp
repnz
sub
push
push
call
or
(bad)
imul
pushf
mov
xchg
xchg
push
mul
mov
std
sbb
outs
xchg
sub
test
imul
test
retf
sbb
shl
addr16
mov
jns
ror
mov
imul
lods
gs
scas
sub
fsub
loop
and
lea
dec
(bad)
int
mov
add
ss
xor
movs
mov
popf
loope
dec
test
cmps
scas
das
mov
sahf
and
cdq
(bad)
fiadd
test
pusha
push
push
jo
and
and
outs
test
sbb
and
fs
mov
out
popf
push
es
push
inc
jno
lahf
mov
sar
sti
loope
lock
jge
xchg
add
or
push
cmp
cmp
or
xor
jecxz
(bad)
jg
or
push
push
fild
cwde
mov
out
(bad)
xlat
add
inc
dec
fdivr
sbb
and
(bad)
out
fcom
(bad)
int
and
mov
aad
jg
sbb
jno
dec
inc
pop
sub
add
cld
lea
jne
test
dec
push
dec
shl
call
push
mov
or
adc
mov
cmp
jae
or
rol
push
popf
push
repnz
call
mov
push
cli
sti
dec
pop
sub
or
mov
push
add
fsub
jbe
stos
sbb
mov
cmp
sahf
icebp
out
jae
push
test
sbb
push
dec
mov
xor
leave
std
sbb
or
lods
rol
out
cmp
stos
sub
push
fistp
and
aam
nop
arpl
call
fldenv
into
iret
cmp
pop
adc
mov
shl
inc
inc
push
cmp
jne
nop
adc
mov
adc
je
xor
aas
mov
fsub
push
mov
and
icebp
and
call
xor
outs
mov
push
mov
add
add
clc
push
xchg
movs
gs
test
or
push
es
aas
(bad)
xor
jnp
loopne
movs
ret
dec
out
sub
and
dec
xchg
fcomp
js
leave
bound
adc
int
neg
push
add
lods
xchg
add
int3
enter
call
popf
add
hlt
sub
dec
mov
outs
pop
mov
in
ror
in
ror
stos
fxch
das
cmp
add
addr16
arpl
pop
dec
in
xchg
std
out
pushf
sub
mov
and
sub
movs
fsub
pusha
in
cmps
sub
jmp
add
out
lea
sbb
mov
or
add
lahf
mov
dec
mov
xchg
or
je
xlat
outs
mov
jo
inc
jmp
in
sbb
mov
je
mov
inc
daa
push
adc
out
dec
popa
mov
fs
xor
das
das
push
mov
and
repz
gs
sbb
lods
jno
in
cmps
sub
jmp
add
out
daa
lea
sbb
mov
or
add
lahf
mov
dec
mov
xchg
or
je
xlat
outs
lahf
push
(bad)
jnp
das
cld
xchg
mov
sub
cmp
(bad)
movs
jle
sbb
retf
xchg
arpl
add
adc
clc
push
pop
mov
rol
out
jp
cli
bound
aaa
fs
loop
jle
movs
inc
cmp
mov
mov
in
dec
pop
popa
or
cld
pop
sbb
repz
js
mov
xchg
cwde
das
xchg
adc
arpl
lea
loope
pop
(bad)
rol
das
mov
push
(bad)
xchg
inc
test
push
js
pop
cdq
add
std
aas
xlat
outs
or
and
retf
mov
or
call
cmp
iret
repnz
(bad)
xor
rcl
sub
movs
and
adc
jne
out
scas
fimul
aas
and
xchg
shl
or
lea
sub
aas
icebp
mov
cmp
outs
retf
clc
inc
inc
ja
mov
mov
mov
mov
imul
leave
cmp
add
sub
mov
(bad)
dec
sbb
imul
bsf
jp
push
pop
sbb
sbb
cmps
mov
outs
mov
push
xchg
inc
xchg
xor
repz
(bad)
mov
into
fwait
aad
jge
xor
xchg
mov
call
mov
jecxz
adc
sub
pop
aaa
mul
adc
xchg
les
pushfw
add
mov
int3
sti
mov
(bad)
in
adc
and
cmp
adc
inc
pop
int3
jnp
fnstsw
loope
cld
adc
pop
mov
xchg
jmp
(bad)
pop
add
outs
iret
adc
fdivr
fadd
xor
pop
mov
mov
mov
and
(bad)
(bad)
inc
lods
and
adc
cmp
push
sbb
fcmovb
leave
mov
push
call
bound
mov
cli
lods
cli
dec
std
jbe
sbb
sar
xor
mov
cld
lea
adc
jo
call
cli
bound
jp
pop
mov
scas
jmp
nop
(bad)
(bad)
ins
(bad)
data16
xchg
xor
(bad)
jo
icebp
loopne
mov
sti
mov
(bad)
push
dec
sbb
data16
xor
jbe
mov
dec
cwde
mov
push
(bad)
imul
(bad)
enter
test
pushf
jmp
clc
popa
retf
mov
out
mov
cmp
out
mov
cld
inc
cmp
add
or
nop
sub
aaa
push
lods
cmp
(bad)
sti
rol
xchg
ret
and
aas
lock
sbb
add
mov
push
das
push
or
arpl
dec
adc
xchg
jle
push
cld
mov
mov
out
xor
xchg
adc
push
push
fadd
fst
fisub
pop
xor
mov
dec
xchg
mov
retf
mov
add
sub
test
jno
jae
pop
js
cmc
xchg
jb
and
rol
pop
xlat
xlat
rol
push
mov
test
retf
xchg
test
sub
inc
stc
pop
ror
add
into
(bad)
push
push
ja
(bad)
lea
fsubr
sub
dec
pop
movs
je
or
and
ins
fst
and
xchg
jne
out
aad
xor
loopne
inc
jo
sub
sbb
shl
xor
sti
test
lea
call
cmc
loopne
adc
aaa
mov
push
push
cmp
mov
sbb
pop
mov
dec
retf
push
(bad)
(bad)
sbb
xchg
leave
movs
call
cdq
sbb
loopne
xchg
add
in
xchg
or
clc
adc
movs
push
adc
popa
pusha
push
inc
jmpw
ins
and
or
adc
pop
in
movs
call
mov
call
idiv
loope
jbe
xchg
mov
fidiv
inc
jno
dec
push
rcr
icebp
jg
cmp
hlt
adc
pop
pop
and
pop
out
push
push
xor
repz
cmps
push
cs
mov
ins
data16
mov
fidiv
inc
jno
sub
xor
jp
pop
leave
xlat
call
cld
pusha
dec
jecxz
ficom
push
loopne
cmp
xlat
mov
and
inc
leave
out
pop
pushf
mov
pop
mov
repz
stos
mov
fistp
and
pop
jge
fnstcw
mov
and
pushf
push
test
scas
inc
push
leave
cmp
xchg
xor
gs
fidivr
les
or
lahf
push
int
and
ror
imul
stos
mov
rol
xchg
jmp
sub
pop
ret
and
fcomp
jle
data16
sahf
ja
pop
enter
jbe
push
inc
pop
or
cmp
push
xor
aad
push
int
pop
mov
fist
adc
fcomp
in
xor
ins
(bad)
mov
mov
sbb
fwait
or
mov
fidiv
mov
push
mov
push
bound
or
test
mov
aam
sub
ret
cmp
test
inc
sbb
test
jne
and
cmp
xor
adc
in
pop
gs
mov
jno
pop
sbb
movs
loop
jb
mov
cs
div
xor
mov
jae
add
frstor
mov
idiv
mov
imul
nop
ret
mov
pop
out
movs
inc
in
cmp
or
dec
xchg
and
inc
scas
icebp
adc
cmp
add
dec
mov
ret
lods
dec
div
sbb
xor
mov
mov
mov
pop
outs
imul
dec
mov
test
inc
lods
std
cmp
jmp
mov
sar
pusha
mov
jae
sbb
fldcw
mov
cmp
test
xchg
mov
xor
mov
sbb
clc
jmp
cli
pop
jne
gs
sar
or
mov
ins
inc
in
xor
push
stos
test
xor
mov
jo
clc
sbb
cdq
mov
mov
adc
adc
push
dec
jl
shr
pop
cmp
sub
add
dec
push
iret
sub
lea
loop
(bad)
jmp
lea
call
cmp
inc
jae
mov
xchg
xchg
int3
xchg
dec
mov
push
ja
mov
jmp
xchg
and
pop
stos
mov
rcl
ja
sbb
call
mov
(bad)
les
add
in
popf
or
hlt
movs
lds
sub
cdq
inc
in
adc
movs
mov
pushf
inc
lods
mov
test
mov
aad
imul
push
enter
lock
fisttp
popf
fadd
and
mov
lods
add
xor
retf
lods
lahf
ss
call
and
jnp
cmp
call
ss
xor
arpl
adc
iret
push
lock
(bad)
ret
aam
popf
stc
popf
xor
pop
mov
fdiv
add
(bad)
mov
clc
cmp
sub
add
xchg
data16
(bad)
push
rol
push
sbb
push
fs
cmc
pop
dec
dec
test
loopne
pushf
mov
aad
jl
and
inc
rcr
lds
lahf
ss
call
and
jnp
cmp
mov
sbb
xor
arpl
mov
ret
xchg
or
pop
or
cmc
mov
mov
mov
mov
inc
xchg
sahf
shl
push
jg
sbb
clc
mov
mov
add
daa
jne
cmp
rcl
in
mov
dec
mov
xchg
dec
out
mov
jle
jae
push
ret
repz
mov
inc
outs
int
test
inc
xor
push
pop
pop
fimul
pop
cvtpi2ps
xchg
or
das
ror
sub
hlt
rep
into
sbb
push
sar
dec
fwait
hlt
dec
mov
ja
ret
sbb
ret
imul
mov
outs
int
or
mov
pushf
add
rcr
fnstsw
stc
inc
ffreep
into
inc
add
xor
mov
js
inc
stos
cmp
cwde
test
in
out
call
xchg
call
sub
sbb
out
mov
(bad)
xor
les
adc
or
push
sub
sbb
push
push
dec
arpl
or
ja
fiadd
retf
lahf
and
mov
dec
or
cmp
pop
jmp
loop
stos
je
sub
inc
pop
and
mov
inc
pop
retf
lahf
and
mov
cmp
pop
jmp
loop
stos
inc
(bad)
dec
iret
pop
jecxz
cld
dec
js
pop
fisub
xchg
rcr
sahf
or
pop
stos
ret
pop
jo
add
inc
cmp
sbb
mov
jb
or
dec
aaa
mov
dec
outs
ficom
push
and
(bad)
push
sub
fwait
pusha
mov
fld
(bad)
fidivr
sbb
ja
inc
lock
in
fild
ds
(bad)
mov
(bad)
jae
test
je
mov
sub
add
push
iret
sbb
jmp
ins
xor
dec
cmc
arpl
pop
sbb
ds
out
mov
xor
xchg
ret
ss
not
xor
mov
gs
fadd
sbb
and
or
and
inc
pop
jo
popf
(bad)
mov
push
push
fild
xor
xchg
mov
pop
fidivr
gs
outs
jle
movsx
xchg
mov
iret
pushf
shr
aas
ficom
outs
sub
mov
jl
iret
cmp
jl
xor
xor
sbb
popf
outs
xor
(bad)
mov
mov
cmc
scas
or
xor
sbb
and
xchg
dec
xor
cmps
xchg
dec
inc
dec
lahf
adc
add
aad
mov
jo
sti
(bad)
adc
mov
mov
or
jbe
popf
jl
test
dec
les
ficomp
call
cmp
test
jp
fnstsw
daa
les
(bad)
int
pop
icebp
test
inc
pop
jno
mov
pop
xchg
movs
ror
push
pop
stos
hlt
mul
mov
popf
mov
sar
cld
loope
or
or
addr16
sub
add
xchg
dec
pop
or
scas
repnz
fwait
data16
clc
sbb
xor
push
jne
xchg
lods
inc
les
lock
sub
sub
(bad)
push
pop
in
repnz
xchg
daa
hlt
(bad)
pmaddwd
xchg
pushf
pop
movs
into
dec
cld
iret
or
cmovnp
(bad)
imul
call
pushf
fistp
out
xchg
mov
in
xchg
dec
ds
add
push
add
inc
jp
outs
add
jp
adc
sbb
in
push
cmp
popf
jle
push
cmps
mov
and
xchg
fild
adc
jle
imul
in
out
into
xchg
adc
aam
xor
dec
jl
mov
pushf
dec
dec
mov
ins
iret
movs
jmp
dec
xchg
jmp
icebp
dec
jmp
cdq
es
inc
es
out
cmps
(bad)
xchg
jns
or
adc
loope
lahf
rcl
daa
scas
jmp
pop
jae
dec
ds
in
xor
int3
push
loope
scas
ss
std
jle
push
je
adc
inc
xor
pop
arpl
shr
sub
mov
push
outs
sbb
ins
cld
loopne
imul
in
(bad)
pusha
fidivr
cmp
dec
fist
sub
add
in
adc
mov
mov
xor
mov
sub
iret
lea
cmps
cmp
rcl
and
in
xchg
bound
push
dec
retf
xchg
out
cmps
push
xor
xor
daa
stos
xchg
into
mov
mov
movs
fwait
jne
in
cmp
xlat
mov
sub
jae
xor
mov
sti
dec
iret
pop
outs
and
xchg
or
cmp
pop
xor
push
push
sahf
lock
adc
adc
test
imul
xchg
hlt
repnz
jbe
test
or
lods
retf
and
scas
cmp
cmps
pop
xchg
call
jge
pop
lds
cmp
loopne
and
loope
add
adc
sti
call
mov
enter
call
jge
int3
jns
pop
out
mov
sahf
xor
sbb
out
hlt
(bad)
push
and
cmc
xabort
xchg
jmp
dec
test
sub
les
xor
test
call
std
ins
sar
xor
out
dec
mov
or
mov
dec
xchg
push
(bad)
jmp
test
daa
push
lahf
jae
mov
mov
xor
cmc
mov
imul
in
mov
js
adc
mov
pop
lds
inc
pop
fadd
stos
xchg
repz
outs
pop
mov
jmp
out
dec
test
push
data16
ja
sbb
jnp
add
xlat
mov
jle
pop
xchg
xor
dec
mov
sub
push
and
dec
ins
push
pusha
popf
cmp
cwde
jmp
lods
push
add
call
in
xchg
add
call
adc
in
adc
and
rol
out
push
cld
mov
mov
in
xchg
std
data16
xor
xor
sbb
(bad)
call
cmp
int
xchg
(bad)
sbb
call
stos
dec
daa
push
sub
or
inc
adc
mov
xor
cli
cmp
popa
jo
(bad)
mov
cli
cmp
push
push
xchg
xchg
in
dec
scas
jns
push
int
jmp
mov
or
cmp
mov
(bad)
adc
inc
pop
test
aam
xor
push
sti
out
lock
adc
mov
inc
lea
jae
push
scas
in
jp
xchg
mov
imul
movs
or
hlt
test
push
pop
icebp
push
xchg
mov
jno
or
arpl
int
inc
cmp
push
dec
adc
mov
cdq
mov
push
sbb
mov
loop
scas
loopne
mov
in
inc
sbb
retf
adc
mov
sub
mov
imul
add
mov
call
mov
dec
js
mov
sub
push
push
shl
cdq
dec
pushf
ins
jge
dec
mov
shl
movs
cmps
cmp
push
jecxz
inc
inc
sbb
mov
(bad)
pop
mov
out
xlat
mov
xchg
ins
xor
and
push
adc
pop
inc
pop
out
mov
push
loop
call
cmp
out
inc
and
aaa
(bad)
bound
push
mov
out
pop
sbb
test
cld
nop
mov
shr
in
push
cdq
dec
sbb
mov
mov
pop
fdiv
push
xchg
pop
ficom
std
mov
push
push
int3
jmp
or
jp
(bad)
and
sbb
inc
xchg
jge
add
inc
rcl
cmps
xor
xchg
jecxz
sbb
mov
div
test
mov
addr16
inc
(bad)
jmp
sbb
test
cmp
lods
pop
xor
mov
cmp
shl
ds
adc
sub
jo
(bad)
iret
repnz
mov
jno
push
jbe
inc
mov
push
mov
mov
lea
popf
imul
icebp
int
add
mov
pop
fsub
out
pop
adc
ja
sub
push
dec
xchg
fdiv
jne
xor
inc
loopne
data16
pop
jmp
ficomp
mov
stc
inc
test
jbe
fstp
clc
out
dec
and
sub
inc
sub
or
outs
retf
stc
adc
rcl
and
or
cmp
enter
dec
mov
mov
mov
pusha
(bad)
mov
inc
clc
pop
rcr
dec
xor
ret
push
loop
daa
icebp
push
test
(bad)
xor
in
add
pop
sbb
aaa
jno
lea
pop
lock
and
das
(bad)
lods
mov
in
fmul
lea
cmps
sub
or
xchg
xchg
je
or
(bad)
into
jl
movs
call
(bad)
scas
sbb
mov
jne
cmc
loop
jne
sbb
mov
inc
or
push
retf
sbb
mov
icebp
or
mov
stos
test
retf
call
test
add
adc
loopne
and
sub
stos
pop
test
test
xor
call
mov
in
popf
shl
loopne
ror
pop
cmp
mov
(bad)
int3
add
jae
and
sbb
xchg
arpl
sub
mov
popa
shl
popf
ret
cld
adc
push
test
mov
test
mov
adc
in
mov
test
out
mov
mov
push
or
cmp
sub
cli
lods
sbb
xor
lods
gs
push
cs
xor
sbb
inc
lea
add
inc
inc
clc
push
jbe
jle
and
les
enter
movs
fdivrp
adc
dec
(bad)
loopne
add
jae
inc
xchg
pop
and
cmp
sbb
add
cli
xchg
jb
sbb
add
sbb
inc
add
mov
sbb
fcom
pop
das
mov
cmps
mov
sahf
mov
xor
fs
mov
and
stc
push
call
fs
mov
jae
lock
push
xchg
stc
or
add
sbb
fild
mov
dec
sub
call
aam
xor
cwd
and
hlt
push
push
sub
aaa
xchg
lea
adc
loopne
xchg
add
test
pop
or
xchg
clc
(bad)
cmp
ins
xchg
inc
and
loopne
xchg
or
mov
sar
adc
xchg
adc
push
out
sbb
mov
jb
sti
test
(bad)
jmp
pop
aaa
xor
add
xchg
jmp
ss
stos
dec
pop
adc
imul
mul
sti
dec
jecxz
or
jmp
std
jecxz
sub
loop
fs
inc
jmp
mov
ja
stc
lahf
pop
xchg
sar
out
mov
inc
mov
(bad)
and
or
add
fild
xchg
sar
enter
adc
mov
xchg
mov
xchg
loope
cli
(bad)
sbb
xor
stos
call
and
sbb
add
leave
pop
xchg
(bad)
(bad)
cmp
inc
add
mov
sbb
mov
mov
cmp
and
stos
enter
adc
mov
push
xchg
std
lock
inc
in
xchg
or
lock
loopne
xchg
add
lods
xchg
test
rol
sub
push
add
mov
adc
sbb
scas
mov
push
fidivr
neg
outs
pusha
jecxz
xor
push
dec
pop
mov
bound
retf
dec
cmps
xor
shl
retf
add
outs
retf
push
jmp
jne
xchg
inc
mov
setae
popf
dec
das
(bad)
jo
and
mov
call
jno
jmp
xchg
add
mov
outs
(bad)
ret
jmp
xchg
sar
jae
push
cmp
enter
inc
dec
xlat
das
jmp
cmp
dec
cmc
aam
test
xchg
add
and
int
pop
dec
test
imul
dec
mov
pop
sbb
dec
out
inc
ins
call
test
ins
out
(bad)
cmp
and
cmp
pop
xor
bswap
jmp
xchg
repz
and
frstor
fimul
mov
xchg
mov
or
sar
lahf
jge
mov
pop
popa
pushf
jmp
(bad)
jno
push
repz
int
ins
mov
outs
xchg
cmp
into
test
sub
out
pop
ret
dec
add
mov
enter
or
scas
imul
or
add
jmp
rsqrtps
mov
mov
sub
mov
in
sub
mov
jns
add
imul
mov
ror
add
adc
ss
mov
pop
scas
pushf
mov
cwde
add
sub
xlat
xchg
inc
jmp
imul
sub
fbld
mov
icebp
adc
push
push
or
mov
push
jge
popa
mov
aad
or
test
push
rcl
mov
jae
mov
jmp
inc
test
and
xchg
je
int3
dec
mov
inc
ins
pop
sub
cdq
mov
arpl
std
(bad)
rol
scas
mov
xchg
repnz
in
in
xchg
int3
fimul
je
imul
pushf
das
shl
ficomp
test
pushf
mov
jne
xadd
jae
out
fs
and
sub
sahf
cmp
or
(bad)
mov
shr
mov
(bad)
(bad)
arpl
push
iret
call
ficomp
fwait
ret
and
das
ds
movs
leave
cmp
or
xchg
fadd
xchg
cmp
rcl
rcl
in
lock
add
inc
aaa
fiadd
lods
push
addr16
push
jmp
loopne
pop
mov
push
add
mov
mov
stos
sti
jecxz
fs
cmc
dec
push
pop
xor
es
push
xor
fdiv
add
(bad)
jnp
mov
in
dec
sub
jae
xchg
adc
push
mov
arpl
cli
and
(bad)
shl
mov
dec
cmps
inc
fisubr
sar
sbb
mov
clc
in
popa
movs
inc
and
ss
fwait
add
sbb
mov
and
add
add
fs
push
loopne
fmul
fist
pop
movs
mov
cld
fcom
inc
in
(bad)
rol
mov
mov
jge
mov
sbb
xchg
lods
movs
call
test
in
in
xchg
add
call
xchg
inc
gs
add
sub
push
lds
call
inc
shr
add
inc
aad
aaa
fsubr
int3
xchg
dec
push
sub
in
lods
outs
pop
mul
xlat
cmps
mov
or
movs
inc
pushf
setnp
cdq
mov
out
add
fprem
test
jl
(bad)
jb
ficomp
aaa
fsubr
int3
xchg
dec
push
sub
in
lods
das
pop
mul
push
push
add
lahf
pop
sbb
xchg
fisttp
xchg
(bad)
call
and
aaa
dec
adc
retf
jae
mov
fstp
or
ins
repnz
mov
push
out
cs
and
aam
jmp
xchg
pop
aaa
add
adc
mov
imul
xchg
adc
out
add
lods
push
imul
dec
prefetch
out
fadd
adc
(bad)
fiadd
inc
inc
mov
dec
pusha
adc
outs
lds
add
nop
mov
adc
add
inc
ins
gs
aas
and
test
xor
jg
xor
(bad)
ror
sar
xor
cmp
(bad)
xchg
inc
fcomip
push
aam
pop
sti
or
sahf
mov
push
ins
fiadd
shl
jno
out
inc
out
add
xor
jmp
pop
in
jge
xchg
stos
mov
mov
adc
and
cmp
pushf
mov
(bad)
popa
(bad)
scas
jmp
sub
icebp
enter
xchg
push
std
pusha
sbb
mov
or
stos
std
in
and
jmp
sbb
push
pop
(bad)
sub
sub
ror
mov
and
dec
cmps
cmp
pop
mov
movs
(bad)
call
inc
cwde
and
and
ficomp
cmp
pop
popf
xor
test
mul
xlat
fwait
out
in
(bad)
cwde
dec
push
push
out
div
lods
mov
sbb
cs
popa
call
popa
movs
and
jae
push
and
xor
(bad)
push
iret
repnz
pop
les
leave
cmp
stos
xchg
push
xor
mov
dec
(bad)
sti
add
rcr
and
int3
imul
pop
cs
leave
pop
in
xchg
clc
clc
out
inc
movs
in
mov
mov
add
call
jnp
xlat
adc
(bad)
mov
inc
push
(bad)
in
and
add
pushf
inc
fnstcw
add
fstp
sti
aam
shr
es
in
pusha
or
iret
int
push
cwde
call
fmul
fisttp
mov
push
scas
je
rcl
test
(bad)
repnz
cwde
add
cmp
jmp
sub
sti
fwait
cmps
xlat
imul
push
jle
mov
jne
call
fild
fsubr
and
and
fdivr
enter
outs
pop
mov
xchg
stos
stc
rcr
or
adc
adc
and
pushf
clc
dec
push
dec
mov
jo
hlt
xchg
mov
loop
cmp
cdq
pop
sahf
nop
push
clc
pop
icebp
rcl
jmp
cmp
addr16
jle
lock
(bad)
sub
movs
sub
std
fldcw
stos
mov
iret
mov
scas
mov
mov
mov
push
test
xchg
das
add
(bad)
and
or
sub
imul
loopne
xchg
or
in
add
in
xchg
add
call
adc
in
rol
and
adc
mov
mov
in
xchg
std
mov
pusha
clc
popa
xchg
lea
imul
xchg
mov
ja
loop
dec
jns
xchg
dec
adc
and
(bad)
sub
mov
imul
movs
movs
xchg
mov
jmp
dec
lods
inc
mov
add
clc
push
jle
neg
(bad)
cmc
fstp
cli
sub
fidiv
mov
fstp
(bad)
das
push
mov
adc
into
dec
mov
nop
bound
adc
pop
and
(bad)
movs
inc
inc
pop
jmp
clc
fstp
test
or
jecxz
sub
cli
xor
and
out
aam
clc
jbe
bound
daa
inc
push
push
xchg
retf
loope
pop
pop
stos
mov
retf
aaa
adc
in
cmc
jle
outs
mov
mov
sub
hlt
pop
or
pop
push
cmp
in
mov
jns
xor
les
hlt
mov
add
fwait
movs
loope
push
leave
push
and
jle
(bad)
push
int3
inc
int3
mov
cmc
sbb
pushf
pop
(bad)
in
(bad)
(bad)
mov
call
or
mov
mov
nop
adc
push
lea
je
cmp
cs
scas
xor
fild
add
(bad)
scas
jb
add
nop
sar
push
xchg
pop
jo
aam
icebp
je
jl
inc
in
aas
sbb
aam
push
inc
xor
cmp
repnz
push
mov
add
fldcw
push
loop
bnd
mov
dec
nop
or
inc
push
xor
mov
push
ins
mov
mov
sti
int
xor
inc
mov
in
loopne
mov
inc
xor
sub
stos
xor
xor
xor
dec
push
dec
ins
adc
push
(bad)
push
xchg
and
push
xchg
xchg
jge
cli
xor
cld
addr16
xor
dec
push
dec
ins
push
sbb
push
fnstsw
gs
mov
stc
jecxz
and
sbb
ja
mov
xor
mov
xchg
inc
and
ret
out
push
lock
push
fimul
mov
mov
add
inc
and
addr16
xchg
mov
sub
sbb
sub
fst
(bad)
shl
je
test
sbb
add
das
xchg
lock
cmp
mov
xchg
or
std
sbb
ins
cmp
ret
cmp
mov
(bad)
(bad)
stos
stc
inc
or
fistp
or
nop
push
dec
mov
mov
daa
(bad)
das
repnz
ret
cdq
fld
mov
adc
sti
mul
add
mov
or
pop
shr
adc
mov
dec
inc
inc
fldln2
xchg
(bad)
mov
es
pop
arpl
mov
xchg
adc
retf
dec
ins
out
ret
mov
enter
xor
scas
xor
push
and
cmp
aaa
test
adc
scas
xchg
cmc
test
or
shl
sub
push
es
push
lds
ret
jge
cmp
fucom
loope
mov
pop
fs
mov
fsub
mov
fidivr
popf
mov
push
out
xor
or
xchg
stos
loop
xchg
test
cwde
clc
add
mov
sbb
daa
inc
sub
fcomp
repz
movs
jl
in
inc
xchg
dec
mov
mov
loope
lock
loope
js
(bad)
push
leave
push
mov
fsubr
stc
les
jne
mov
sbb
loopne
ror
mov
std
cs
(bad)
push
dec
add
test
mov
loopne
mov
add
push
dec
icebp
js
dec
jmp
mov
or
fcom
(bad)
add
mov
cmp
or
jg
pusha
popa
mov
pop
or
int
cwde
dec
int
xchg
xchg
mov
mov
dec
daa
sub
sbb
out
inc
loopne
inc
xchg
add
sbb
je
mov
mov
xchg
sub
sbb
adc
out
inc
(bad)
(bad)
or
(bad)
shl
dec
out
popa
dec
shl
test
repz
jmp
call
adc
xor
fldenv
retf
mov
shr
(bad)
sti
shr
cmp
jmp
out
xlat
retf
push
das
sub
push
cmp
inc
jne
jbe
les
pop
xchg
hlt
add
shl
outs
push
je
(bad)
lock
sti
test
and
jbe
mov
outs
in
push
xor
mov
xor
xor
pop
vaddss
test
mov
jmp
mov
int3
pop
cmp
out
jns
hlt
jbe
cli
sub
test
push
adc
sub
cwde
jp
mov
add
test
dec
and
mov
add
and
in
jge
push
clc
dec
mov
inc
pop
jne
and
mov
push
dec
pushf
inc
dec
and
int
mov
cmps
xor
(bad)
shl
icebp
and
mov
(bad)
stc
das
movs
daa
mov
cmps
or
inc
iret
aaa
ret
test
cmp
push
test
bound
fstp
test
sub
loopne
mov
neg
adc
loope
mov
aas
fstp
jne
adc
add
lds
inc
jb
test
xor
or
inc
pop
push
mov
push
gs
loopne
fbstp
sti
ds
sbb
sbb
iret
outs
lds
dec
inc
lea
outs
stos
xor
std
sub
cmp
inc
fcomp
mov
or
je
jae
mov
sbb
mov
adc
lods
sbb
and
(bad)
(bad)
shl
(bad)
ror
adc
and
mov
cmp
dec
inc
out
imul
push
add
sar
adc
pop
mov
call
xor
fs
xchg
inc
in
(bad)
sar
les
push
popf
mov
and
xchg
cmc
sub
inc
std
and
aaa
lea
pushf
push
and
push
popa
stc
das
movs
jmp
jg
pop
mov
pop
in
(bad)
clc
das
sub
sbb
(bad)
repz
xor
push
and
mov
add
loopne
xchg
add
in
or
loopne
or
in
in
adc
lock
mov
xor
fsub
xor
fsubr
inc
movs
movs
lds
mov
int
and
add
in
cdq
adc
cld
test
mov
mov
push
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
mov
fsubr
in
or
movs
in
cdq
inc
in
xchg
nop
call
xchg
add
loopne
xchg
add
call
and
lock
add
in
in
xchg
add
call
xchg
add
clc
sbb
rcl
shl
xchg
add
test
inc
jecxz
xchg
popa
mov
ins
adc
sub
xor
and
mov
(bad)
loope
sub
bound
scas
in
in
add
mov
cmp
pop
cmp
and
call
push
scas
jns
pop
out
push
pop
(bad)
xlat
ret
xchg
jno
(bad)
xchg
clc
pusha
inc
xor
out
sbb
push
adc
mov
adc
sub
pop
repz
arpl
adc
dec
xchg
add
call
jo
xchg
cmp
cmps
cmps
xchg
xchg
ficomp
sub
mov
xor
xchg
test
mov
setg
stc
inc
je
out
add
in
dec
mov
and
xchg
add
pop
stos
shl
add
pop
mov
js
xchg
add
cmp
stos
loopne
mov
cmp
jns
xchg
and
xchg
add
and
jle
jmp
int
(bad)
jmp
jbe
add
jo
mov
call
in
repz
cmps
xchg
out
out
(bad)
pop
shl
sbb
movs
xlat
jmp
inc
sbb
ror
das
and
call
cwde
xchg
add
call
pop
jmp
out
jle
pop
cmp
ret
mov
add
inc
mov
push
jp
mov
mov
aas
cmps
xor
sbb
fdiv
cld
mov
and
movs
jmp
pop
jno
in
push
jmp
cmp
xor
fs
mov
add
ss
inc
lahf
or
mov
lahf
fwait
sbb
out
mov
sbb
loop
std
jns
ret
push
fisttp
test
das
pop
mov
test
pop
pop
cld
pop
cmc
jmp
sar
xor
enter
xor
xchg
push
and
push
pop
je
mov
inc
pusha
pop
and
pop
(bad)
mov
aaa
xchg
bound
sbb
xchg
cs
sub
pop
cmp
(bad)
popa
add
fisubr
and
jmp
loopne
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
pop
push
dec
jmp
add
call
xchg
add
in
imul
daa
inc
lock
call
add
call
xchg
add
xor
jne
push
sti
out
fcom
cmps
mov
call
xchg
add
call
mov
ds
(bad)
lock
add
call
xchg
add
call
xchg
add
call
xchg
add
xchg
mov
call
xchg
sbb
loopne
xchg
add
cld
xchg
or
cld
mov
inc
movs
movs
int
xor
fst
loopne
ror
sub
loopne
xchg
add
jb
dec
out
fwait
sub
cmp
add
add
inc
aaa
push
jl
add
and
push
stc
cmp
sub
outs
mov
in
sahf
mov
push
mov
fs
jb
push
nop
fcomp
xchg
xchg
adc
sub
pop
repnz
jecxz
sub
adc
dec
fistp
add
mov
ret
in
pop
(bad)
sbb
fwait
adc
push
fst
or
mov
mov
enter
dec
out
xlat
cs
cmp
mov
imul
or
fbstp
fld
daa
mov
pushw
xchg
je
dec
pop
and
call
dec
or
in
xchg
test
pop
mov
adc
test
sbb
clc
int3
stc
jae
test
outs
cs
jae
mov
pusha
out
jg
dec
sub
in
jno
add
fwait
stos
pop
sbb
mov
clc
cld
jl
jmp
mov
retf
loope
ins
out
cmp
mov
fnstsw
push
mov
aaa
sub
pop
cld
outs
into
out
and
icebp
lock
jno
imul
pop
sbb
sbb
xor
dec
cmp
popf
jg
xor
mov
test
and
adc
into
or
(bad)
sub
and
shl
xlat
push
sahf
stos
aam
lods
in
ret
data16
add
jge
aad
fdiv
ja
xor
data16
in
bswap
sti
jae
inc
or
xchg
and
sbb
mov
mov
jmp
pop
pop
inc
imul
pushf
push
or
mov
stos
mov
rol
imul
icebp
xchg
mov
xchg
(bad)
in
or
rol
or
data16
mov
je
cmp
std
fadd
cmp
ds
mov
push
(bad)
xor
jg
cmp
inc
test
out
repnz
mov
arpl
psubsb
jns
jmp
(bad)
xchg
cmc
call
retf
addr16
test
jb
jb
mov
mov
inc
sub
das
jo
rcl
xchg
aad
pop
ins
jo
sbb
sahf
cmps
sbb
push
mov
push
add
and
std
lock
inc
loopne
test
hlt
cld
xchg
add
call
cdq
adc
cld
rol
gs
push
inc
test
ror
in
adc
stos
push
leave
cmp
add
sub
adc
sbb
jns
push
imul
fwait
or
push
cli
push
aad
arpl
nop
inc
and
mov
cs
retf
cld
lods
pop
pop
xchg
xchg
leave
repnz
add
push
mov
xor
and
lock
and
pushf
fsub
hlt
inc
loopne
xchg
icebp
sub
dec
(bad)
xor
push
(bad)
cmp
adc
xor
popa
add
adc
lods
pop
cmp
inc
fs
call
stos
xor
test
push
dec
push
mov
retf
popf
loope
ss
in
out
xchg
rol
imul
sub
jnp
stos
les
xchg
in
mov
jl
dec
ror
dec
repnz
inc
imul
push
mov
ret
test
or
adc
pop
retf
test
jle
jmp
sub
xlat
lahf
mov
xor
jle
adc
ret
xchg
pop
cmps
fst
sbb
leave
and
out
jmp
je
std
mov
retf
cmps
js
lods
jp
sub
cmps
das
fucomp
mov
nop
into
fist
sub
(bad)
lea
adc
addr16
adc
sbb
or
cs
in
mov
jo
add
mov
int3
retf
pop
add
aam
dec
retf
jne
jbe
test
sbb
push
fdiv
(bad)
sbb
mov
adc
jbe
pop
in
ror
mov
cmp
xor
mov
sub
xor
jp
push
or
iret
jo
inc
out
mov
std
adc
scas
in
leave
aaa
inc
inc
test
lods
retf
cmp
(bad)
inc
pop
test
ins
iret
cmps
push
adc
mov
pushf
iret
cmps
push
adc
call
xchg
pop
add
outs
xchg
cwde
adc
dec
mov
pusha
nop
sbb
dec
inc
add
movs
js
push
xor
dec
push
cwde
and
sti
stos
push
and
adc
(bad)
mov
mov
mov
ror
call
clc
jge
cmp
jns
fstp
mov
scas
jno
pop
cmp
dec
scas
mov
add
out
inc
retf
add
dec
jnp
aam
pop
fwait
and
fst
cmps
loopne
popf
retf
adc
addr16
sub
jge
rcr
repz
sub
enter
lods
neg
jmp
or
fdivr
xor
ret
mov
js
(bad)
cmps
rcl
sbb
inc
cmp
xor
or
pop
mov
(bad)
jmp
clc
jns
fstp
dec
mov
aad
cs
pop
push
cmp
fld
inc
push
data16
and
popa
test
inc
(bad)
push
test
cmp
mov
adc
jg
or
dec
pusha
adc
in
sub
pop
in
sahf
idiv
mov
adc
mov
popa
mov
arpl
or
add
call
and
pushf
and
popf
pushf
retf
hlt
and
dec
movs
fnstcw
pop
xchg
arpl
scas
ins
in
test
mov
shl
fwait
sub
mov
push
cmp
fdiv
push
mov
cs
(bad)
test
inc
inc
inc
loope
popf
cmp
xor
push
jecxz
cmp
ja
push
sbb
push
and
bound
popa
and
xor
inc
stos
arpl
fsubr
inc
mov
das
dec
repz
jp
(bad)
retf
lds
out
fimul
pop
dec
or
add
mov
sahf
les
jecxz
jns
xchg
aaa
movs
add
sbb
xchg
cli
stc
xor
ins
adc
test
mov
cmp
dec
inc
outs
ret
jbe
out
arpl
loop
sti
std
xor
or
lods
retf
cld
dec
mov
jmp
inc
loopne
cdq
or
clc
cdq
sbb
loopne
xchg
add
call
add
lods
adc
and
sbb
cs
pushf
(bad)
loopne
adc
bound
pop
add
adc
sbb
sbb
mov
leave
ret
xor
push
mov
in
addr16
or
cdq
fs
sub
xchg
push
adc
inc
es
adc
sbb
dec
mov
mov
pop
(bad)
pusha
pop
aas
push
shr
mov
jmp
pop
leave
push
push
outs
inc
retf
in
mov
aad
aaa
sahf
(bad)
mov
ins
daa
cmc
and
sub
fmul
out
ret
sti
sub
out
mov
xor
daa
gs
pushf
(bad)
invlpg
mov
cli
shl
fist
daa
in
and
mov
sbb
(bad)
aam
jp
int
mov
mov
sub
xchg
or
xchg
pop
daa
add
std
jbe
sub
push
adc
idiv
push
int
adc
pop
idiv
push
popa
inc
sbb
inc
inc
push
aas
shl
movs
pop
inc
inc
push
aas
shl
ds
jle
outs
pop
mov
and
or
jge
das
jae
test
(bad)
sub
mov
add
inc
sub
inc
ror
fisttp
cmp
test
and
jg
fist
inc
popa
jb
pop
cmp
arpl
inc
(bad)
xchg
leave
dec
push
test
and
add
cmps
xor
shl
mov
dec
jge
leave
jae
fistp
cwde
adc
push
movhps
fcom
push
mov
xor
mov
and
adc
mov
mov
push
(bad)
ja
sbb
pop
dec
outs
enter
xchg
push
push
mov
or
ror
hlt
in
test
dec
push
ror
xchg
mov
ror
mov
sti
pop
pop
or
inc
xor
lods
jbe
addr16
aad
mov
push
jns
enter
mov
fimul
jge
mov
adc
shl
bound
enter
dec
fild
inc
repz
mov
repz
or
adc
and
mov
das
cmp
inc
pop
retf
loop
mov
rol
adc
retf
mov
leave
or
leave
cmpxchg8b
stc
sub
mov
jmp
cdq
repz
xor
addr16
outs
and
cmps
mov
xor
xchg
dec
std
loop
jns
ds
movs
repnz
mov
xchg
mov
pop
cmp
xor
adc
stos
jo
jmp
fistp
hlt
(bad)
xor
jne
jns
cmp
mov
out
jle
dec
ds
call
mov
or
loopne
popf
or
in
fisttp
pusha
push
leave
xor
sub
pop
int3
in
ret
loopne
or
stos
sbb
stos
movs
fadd
and
adc
push
enter
lock
es
loopne
sbb
mov
jmp
popa
adc
pmuludq
jo
mov
xchg
mov
in
fwait
or
mov
aas
sub
ss
mov
jmp
sbb
jno
jo
pop
out
dec
adc
adc
or
jmp
jb
jmp
jb
dec
mov
rcl
adc
jbe
cmp
jmp
fwait
or
jns
mov
cmps
sub
nop
pop
add
or
cmp
addr16
jae
cmps
push
fsubr
dec
mov
jo
mov
pop
jmp
cmp
jl
(bad)
xor
jecxz
scas
and
adc
shl
sbb
add
add
in
pop
rcl
loop
sub
call
out
pop
mov
adc
sbb
sbb
mov
fsubr
imul
enter
push
add
out
inc
outs
add
(bad)
movs
push
pop
iret
or
inc
outs
mov
fidivr
mov
div
int3
hlt
pop
outs
rcl
(bad)
les
add
inc
adc
mov
fst
cld
stos
cmps
lock
push
test
pop
pushf
adc
pop
jnp
sbb
out
mov
aaa
fst
fmul
cwde
xlat
stos
(bad)
dec
mov
mov
shl
sbb
out
inc
pusha
inc
lods
sub
(bad)
retf
cmp
inc
or
daa
xchg
ins
mov
sbb
inc
inc
sahf
push
jmp
pop
outs
cmp
mov
xchg
and
mov
mov
push
repnz
jmp
cdq
je
iret
sub
inc
imul
mov
xlat
mov
add
xlat
scas
xor
jae
int3
adc
repz
xchg
leave
sub
sar
push
inc
loope
leave
outs
sub
cmps
xor
cs
mov
out
sar
mov
xor
xor
fisubr
cwde
(bad)
cmc
pop
shr
(bad)
push
sbb
jo
xchg
imul
push
ins
daa
out
jmp
add
lock
stos
xchg
mov
sbb
out
iret
mul
push
mov
sbb
outs
xor
in
push
lock
mov
jno
and
dec
and
retf
call
or
pop
loopne
data16
push
sub
into
xor
rcr
push
jns
test
bsf
pop
imul
ja
adc
dec
cmc
sbb
mov
xor
xlat
jge
or
adc
push
inc
pusha
pusha
fwait
push
xor
inc
int
push
mov
add
js
cmp
cmp
stos
loope
out
sub
xor
mov
mov
loopne
repz
jne
jmp
sbb
out
inc
(bad)
mov
sbb
xchg
enter
cmp
sub
outs
sahf
mov
push
test
jg
hlt
pop
fs
and
mov
(bad)
clc
mov
hlt
and
inc
dec
dec
sbb
adc
iret
ret
cmp
call
mov
arpl
dec
stos
inc
(bad)
mov
cmp
mov
sahf
or
sbb
cmp
push
inc
xlat
test
pop
pop
sub
leave
dec
sub
jl
(bad)
and
(bad)
(bad)
cmp
xchg
pop
jmp
jle
ds
fcmove
push
arpl
sub
xor
std
mov
pop
dec
aaa
dec
mov
mov
mov
out
scas
push
xchg
fild
add
or
pand
mov
(bad)
lahf
ins
mov
stc
in
mov
ds
and
mov
pop
adc
pop
and
pusha
std
je
xor
div
pop
adc
mov
ins
outs
jge
pop
adc
push
outs
test
xchg
test
xchg
(bad)
arpl
test
repnz
mov
pop
jge
inc
mov
xchg
jae
xor
xlat
in
xchg
sti
loope
daa
sbb
retf
xchg
pop
data16
jno
jl
sbb
fucomi
cmp
mov
loopne
inc
xor
cmc
jl
pop
mov
pop
and
in
int3
imul
jo
xchg
addr16
pop
cmp
mov
adc
inc
push
adc
xor
js
cmp
fidiv
cmps
in
fs
dec
(bad)
dec
add
cmp
sub
aam
xchg
sbb
int
(bad)
mov
ds
fsubrp
add
loope
ins
cmp
mov
sub
in
es
out
or
adc
fistp
clc
mov
retf
add
test
dec
(bad)
mov
jg
fwait
ds
jne
dec
adc
jmp
mov
(bad)
inc
pop
outs
xor
inc
xor
dec
repnz
push
xor
out
test
dec
adc
mov
std
int3
fcomp
leave
stos
dec
cmc
push
inc
(bad)
(bad)
xor
mov
pop
jle
xchg
add
gs
int
jge
sub
and
dec
test
push
in
test
cmp
(bad)
jno
mov
xchg
mov
inc
or
ins
clc
fwait
xor
pop
test
ss
repz
jl
in
inc
cmps
sub
ins
push
retf
mov
cwde
push
ficomp
into
or
sbb
test
mov
not
pop
ret
dec
push
and
adc
cli
shl
rol
(bad)
ficomp
mov
mov
ins
or
add
jge
aas
pop
push
inc
jb
jecxz
jns
xor
or
mov
xor
jno
jno
sti
stos
pop
jmp
cld
lock
inc
loopne
cdq
or
in
in
xchg
add
call
adc
loope
adc
xchg
inc
fs
push
inc
sub
rcr
and
in
xchg
add
jmp
hlt
enter
mov
push
sub
dec
ins
loope
fst
adc
add
xor
sbb
mov
cmc
inc
or
fcmovu
jne
in
dec
(bad)
sub
in
or
or
pop
test
or
int3
cmp
lahf
xor
dec
cld
je
popa
jg
mov
push
sub
cmp
out
daa
and
push
scas
std
ins
clc
pushf
or
clc
and
test
loope
xor
stos
mov
xor
sbb
inc
or
xchg
mov
ds
out
mov
pop
div
mov
pop
inc
cmp
ja
int
(bad)
mov
punpcklwd
jmp
retf
push
adc
cmp
jae
mov
stc
movs
mov
dec
jl
add
aam
in
(bad)
jmp
adc
dec
sbb
xor
(bad)
or
jbe
pop
push
lods
(bad)
int
js
push
jmp
jmp
xchg
inc
pop
(bad)
rcl
into
rcr
std
mov
xchg
dec
mov
pop
mov
fld
sbb
pop
bswap
idiv
dec
jbe
xchg
inc
mov
call
(bad)
in
xchg
enter
addr16
ror
xchg
pop
mov
loop
dec
repnz
xchg
pop
mov
test
xchg
sub
pusha
shl
or
xlat
sub
fs
je
stc
and
movs
loopne
push
test
pushf
push
or
(bad)
pop
jp
sbb
test
mov
mov
or
pop
shl
inc
shr
test
adc
mov
popf
out
mov
or
sbb
sahf
cmp
loope
aam
or
add
rol
shl
call
push
pop
nop
addr16
sbb
dec
sub
aaa
add
jne
js
ficom
leave
rcl
nop
push
ins
push
addr16
arpl
repnz
out
imul
sub
cmp
sub
jb
add
sub
lods
cmps
mov
mov
add
xor
inc
fdiv
dec
mov
or
in
or
adc
ficom
xchg
xchg
pusha
jge
in
cwde
std
mov
xchg
stos
push
mov
out
inc
dec
inc
fucomp
pop
ss
sub
mov
in
pop
sbb
dec
adc
inc
popa
pusha
cmp
pop
stos
inc
mov
fisttp
stos
pop
popa
inc
dec
xchg
adc
sbb
mov
xor
lds
ror
mov
push
scas
icebp
out
cld
movs
sub
dec
xor
mov
pop
outs
adc
sahf
lock
mov
cmp
pusha
mov
in
movs
inc
push
jo
adc
fcom
lock
lds
in
iret
sar
and
xchg
dec
shr
repnz
adc
jecxz
icebp
push
xlat
dec
test
mov
mov
loop
jo
dec
repnz
xchg
push
push
cwde
cmp
in
push
and
enter
and
lock
enter
push
retf
dec
ror
imul
mov
pop
shl
push
or
mov
pop
pusha
rol
cdq
xchg
adc
pop
jno
ss
xchg
inc
fisubr
retf
out
add
in
das
add
dec
xchg
ins
mov
in
mov
cmp
retf
in
dec
addr16
test
repnz
push
pop
xor
jnp
inc
test
or
ins
imul
out
adc
or
dec
inc
jmp
out
imul
ror
ret
jb
mov
xchg
data16
out
std
adc
(bad)
outs
ins
mov
jns
popa
and
xchg
bound
std
ret
pop
push
add
loopne
xchg
inc
leave
jmp
lds
daa
jb
pop
cmp
lds
daa
jae
mov
mov
js
daa
jo
mov
(bad)
pop
dec
arpl
jmp
jo
jecxz
test
xchg
fadd
mov
add
pop
fstp
pop
test
dec
lds
mov
stos
cs
add
push
shl
(bad)
int3
push
lds
sbb
mov
fs
dec
lods
js
daa
jo
mov
stos
into
add
lds
daa
jo
mov
stos
into
add
lds
daa
jo
mov
stos
into
add
lds
daa
jo
mov
stos
into
add
lds
daa
jo
mov
stos
into
add
lds
daa
jo
mov
scas
jbe
dec
lds
daa
jo
mov
stos
into
dec
or
jns
daa
jo
mov
stos
into
add
mov
daa
jo
mov
stos
into
add
lds
daa
jo
mov
stos
into
add
lds
daa
jae
mov
lock
inc
in
xchg
or
loopne
adc
loopne
xchg
add
lods
xchg
test
in
adc
mov
jmp
rcr
and
in
add
sti
sti
add
pop
sub
sbb
jo
ss
daa
(bad)
test
and
inc
push
and
sbb
mov
and
dec
jmp
sbb
add
sub
repz
aaa
lahf
sbb
pop
stc
cmps
inc
icebp
ins
cs
xor
jg
das
in
xchg
mov
ret
aam
pop
cmc
or
push
fistp
into
mov
mov
push
sahf
inc
push
mov
sar
mov
(bad)
(bad)
jge
popa
ret
mov
ror
dec
pop
xchg
test
ds
add
xor
and
lahf
mov
idiv
int
fisttp
stos
repz
sahf
xchg
(bad)
dec
nop
in
mov
mov
hlt
pop
stos
jne
xor
aad
fimul
xchg
add
pushf
(bad)
or
fimul
adc
clc
jns
or
pop
mov
cmp
aam
popa
and
pop
je
sub
ror
or
in
sbb
dec
rcr
hlt
add
push
add
add
push
add
add
icebp
pop
jo
adc
jmp
jle
sbb
dec
cli
retf
sub
adc
cli
retf
sub
push
in
pusha
clc
imul
stos
(bad)
and
ror
mov
mov
retf
sub
xor
sub
adc
ds
int3
mov
xchg
jnp
sbb
sbb
cmp
or
dec
lds
dec
lods
rcr
push
mov
aas
or
(bad)
xchg
and
(bad)
not
js
add
ins
jp
mul
sbb
push
mov
push
or
jae
ret
dec
test
sub
sbb
mov
(bad)
cmp
shr
in
inc
loop
ss
ins
(bad)
and
cwde
xchg
sbb
hlt
fbstp
jecxz
(bad)
in
xor
and
iret
jb
scas
xor
pop
sbb
imul
adc
jecxz
test
push
es
ret
push
dec
in
das
mov
and
adc
adc
lahf
(bad)
jae
in
aam
add
mov
test
cwde
out
xchg
mov
pop
into
inc
in
cli
inc
and
pop
sahf
inc
scas
xor
rcr
inc
imul
inc
xor
inc
fadd
mov
pop
jge
aas
rol
pop
popf
lea
or
and
rol
sti
push
icebp
xor
nop
in
rcl
push
jne
jl
and
sar
imul
ficomp
mov
in
jp
sub
cli
ja
and
pop
test
(bad)
stc
hlt
call
jecxz
dec
pop
mov
xor
sbb
cmp
movs
ins
in
lock
push
mov
call
or
sub
repnz
cwde
std
jmp
mov
test
ror
test
push
shl
mov
rcl
ins
scas
in
adc
xchg
jp
cdq
mov
sub
cmp
out
xor
stc
mov
iret
add
xlat
gs
hlt
imul
in
or
jae
push
add
loopne
sbb
in
call
xchg
add
gs
rol
out
xchg
inc
arpl
add
adc
push
test
int
and
mov
sbb
mov
cwde
lds
and
mov
mov
xlat
mov
shl
xor
nop
add
movs
cwde
iret
add
ret
or
mov
jbe
hlt
gs
sbb
cdq
mov
xchg
je
push
inc
or
mov
xchg
inc
mov
inc
and
mov
mov
push
or
xchg
push
pop
imul
psllq
pop
jo
mov
mov
cmc
or
pop
adc
loope
ins
cmps
gs
mov
xchg
stos
out
lds
neg
les
ja
mov
pusha
lock
cwde
sahf
fld
das
add
ins
loope
mov
and
sub
repz
sub
jmp
sub
mov
adc
(bad)
in
popa
dec
mov
push
pop
dec
clc
out
or
adc
and
mov
xlat
shl
dec
inc
test
icebp
sti
fisttp
ret
mov
dec
add
in
pop
mov
popa
sahf
xchg
imul
or
(bad)
outs
inc
dec
out
inc
push
inc
jge
ret
iret
jg
jno
cmc
sahf
in
out
lods
jo
pusha
pushf
and
mov
inc
test
or
fcomp
jg
pop
ins
leave
out
jge
ja
xchg
daa
imul
pop
iret
daa
fimul
mov
and
imul
jl
and
lods
sbb
scas
inc
push
mov
lds
add
repnz
pop
fstp
test
add
mov
jmp
pop
call
pop
pop
or
jp
pop
pushf
imul
das
fistp
pop
xor
jp
in
(bad)
test
fucomip
icebp
nop
add
xor
pop
mov
mov
cs
mov
imul
(bad)
dec
xchg
repz
pop
jno
push
hlt
lea
dec
es
adc
rcr
mov
and
ins
movs
cmps
jecxz
ret
dec
add
cdq
retf
pop
dec
nop
in
xchg
jg
xor
dec
pusha
add
ss
js
mov
shl
jl
arpl
test
mov
and
sbb
sub
ficom
push
or
dec
test
gs
mov
(bad)
adc
imul
mov
mov
cmp
add
pop
and
mov
mov
push
mov
dec
shl
adc
(bad)
hlt
js
jecxz
dec
out
les
rcl
add
mov
jg
jle
das
cmp
ret
mov
jl
shl
popa
sub
lods
out
adc
std
lock
inc
in
xchg
or
in
cdq
adc
in
xchg
add
call
xchg
test
rol
and
imul
mov
in
xchg
std
mov
dec
mov
xchg
pushf
jnp
cdq
or
sub
in
pop
cmps
hlt
out
mulps
sub
in
dec
jmp
adc
cmp
add
pop
cmp
dec
mov
cmp
loopne
imul
push
mov
sbb
sub
and
xlat
punpckhbw
out
xor
mov
fsubp
rcr
dec
inc
iret
ror
ret
inc
push
inc
xor
sti
or
mov
fisttp
cmps
cmp
mov
movs
in
fs
mov
pop
sahf
popf
or
je
cmp
mov
xchg
int
mov
aam
mov
repnz
adc
out
xchg
mov
sbb
cmp
nop
test
xchg
(bad)
stc
dec
mov
ret
out
aas
in
je
cwde
mov
dec
cmp
pop
jne
cli
push
adc
adc
add
jp
mov
lea
pushf
adc
in
or
mov
cmp
adc
dec
xlat
inc
inc
test
push
add
xor
idiv
jno
(bad)
(bad)
cmc
inc
(bad)
imul
popf
pushf
mov
pop
sub
fcomp
add
adc
in
adc
push
es
mov
cmps
jp
adc
jb
xor
sbb
mov
dec
mov
shl
fsub
ror
ins
xchg
adc
movs
push
and
jmp
and
in
xchg
jae
mov
inc
ret
in
and
outs
cs
push
add
(bad)
je
out
xchg
fisttp
movs
sub
inc
jge
adc
adc
add
mov
push
and
mov
sub
add
xor
mov
ins
ds
punpcklbw
inc
mov
mov
xor
mov
ds
or
xor
jo
ins
cld
xor
add
adc
pop
inc
mov
mov
pusha
test
js
stos
mov
sbb
stos
cmp
out
xchg
or
push
idiv
lea
adc
call
inc
add
inc
hlt
adc
or
mov
cdq
test
rcr
hlt
pop
xor
out
dec
cmp
int3
ds
lock
mov
jge
cmp
inc
mov
push
xlat
loopne
shl
lods
bound
adc
pop
push
sbb
pusha
cld
cmps
cmp
adc
popa
sub
out
out
dec
sbb
xor
dec
lea
pop
repnz
jp
lods
xchg
lock
xor
sti
mov
push
lds
mov
sbb
adc
pop
push
jl
in
xlat
ror
adc
jmp
test
test
jecxz
mov
or
push
test
add
popf
mov
fsub
in
rol
xor
or
mov
imul
cmp
je
jge
in
jl
(bad)
cmps
shr
scas
(bad)
xor
les
popf
pushf
mov
fisub
jge
adc
push
das
das
inc
sub
sub
mov
dec
in
pop
adc
cwde
leave
in
ret
or
push
mov
lahf
ret
pop
sub
cld
mov
in
call
add
shl
sub
cld
sbb
push
out
fiadd
mov
mov
push
jecxz
shl
mov
ja
stos
push
aas
ret
xchg
jmp
mov
imul
dec
sbb
scas
sbb
pushf
nop
push
inc
fsubr
leave
out
pop
adc
xchg
in
fwait
test
jne
push
or
int
shr
mov
add
dec
jmp
mov
arpl
add
push
inc
sbb
retf
pop
xchg
sub
iret
and
inc
inc
mov
fdivr
gs
mov
out
ds
adc
adc
mov
pop
jns
into
push
test
push
dec
loop
xchg
enter
mov
repz
mov
icebp
pop
sbb
and
adc
fsubr
imul
xchg
jl
(bad)
mov
bound
mov
sub
mov
xor
dec
mov
mov
mov
loope
or
repnz
mov
test
addr16
aaa
cdq
mov
ins
push
pop
(bad)
imul
loopne
xchg
add
jecxz
imul
loopne
or
in
or
lock
mov
hlt
clc
test
rcr
xor
les
dec
mov
les
dec
mov
rcl
leave
popa
mov
mov
cdq
add
clc
test
hlt
int3
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
xchg
inc
shr
pop
loopne
xchg
inc
loopne
rol
lock
add
call
xchg
add
call
xchg
add
cld
mov
clc
loopne
and
adc
add
cld
xchg
add
loopne
xchg
add
call
sbb
mov
movs
or
in
test
add
ins
jg
or
xchg
add
call
adc
loopne
xchg
sbb
mov
xchg
add
call
xchg
sbb
xor
mov
mov
sbb
cmp
leave
sahf
dec
add
outs
and
push
sub
ss
call
xchg
adc
cmp
pop
or
jbe
add
stc
ds
mov
xor
dec
scas
fiadd
loop
xchg
cdq
xchg
jp
sbb
call
loopne
mov
loope
xchg
cmc
(bad)
cmp
xor
mov
add
jle
jmp
sub
(bad)
push
out
jmp
lock
jae
dec
adc
push
mov
loopne
mov
loopne
stc
sbb
push
sub
sbb
jmp
sar
ja
xor
add
test
add
pop
ins
jg
push
ja
mov
dec
idiv
enter
jmp
dec
add
out
shr
dec
mov
jnp
call
cdq
mov
sub
fwait
call
pop
cli
inc
jmp
leave
xor
xchg
dec
call
test
or
fist
stos
xor
xchg
add
push
sti
rcl
jae
jecxz
retf
xchg
add
in
fxam
inc
punpcklwd
cmp
bound
xchg
mov
dec
and
pop
xchg
adc
inc
xor
mov
add
shl
pusha
mov
int3
dec
je
std
inc
add
jl
add
fsubr
into
pop
jl
retf
cmp
add
mov
or
adc
jmp
inc
popa
sub
jmp
xchg
inc
inc
rol
pop
clc
add
retf
pop
dec
push
jecxz
add
jl
add
in
push
sbb
mov
sbb
mov
ins
pop
cmp
pop
mov
or
xchg
add
dec
jecxz
lea
sub
xchg
fsubr
push
and
test
sbb
into
inc
lahf
out
loop
fld
call
ret
outs
(bad)
sbb
and
dec
movs
enter
adc
xchg
jmp
popa
cli
out
ret
jns
loop
xchg
inc
loopne
xchg
sbb
in
dec
aaa
lahf
pop
or
icebp
xor
(bad)
cmp
popa
popf
movs
push
xor
and
gs
adc
add
clc
popf
add
call
fbld
add
das
lahf
jecxz
xchg
or
loopne
(bad)
dec
je
fld
out
rcl
cdq
mov
push
test
xchg
add
clc
popf
out
mov
jmp
cmp
loopne
xchg
and
js
sbb
jmp
add
call
xchg
add
call
xchg
dec
not
jae
les
xchg
add
call
xchg
add
lock
adc
xchg
or
loopne
add
loopne
xchg
add
call
xchg
sbb
call
aad
pusha
ins
fstp
test
cld
mov
mov
in
xchg
adc
ret
ret
fistp
xor
div
fadd
and
iret
fst
jmp
pop
mov
and
dec
pop
fmul
push
inc
das
and
repnz
pop
or
push
aaa
sub
clc
jns
ret
dec
pop
jge
push
lods
mov
in
and
nop
movs
cli
data16
xchg
in
int3
mov
mov
movs
stc
outs
jg
mov
mov
fstp
or
call
and
or
ins
dec
shl
sti
mov
icebp
shl
test
stos
mov
jnp
mov
in
shl
imul
fwait
in
retf
push
mov
or
rcl
(bad)
fstp
mov
sub
mov
add
xchg
inc
(bad)
stos
test
xor
rol
std
out
dec
in
mov
in
dec
mov
imul
daa
push
xchg
data16
dec
jmp
icebp
push
pop
test
mov
fdivr
stos
sahf
(bad)
lahf
jo
iret
inc
xlat
fbstp
dec
lods
les
in
and
sar
pop
push
mov
fimul
sbb
stos
mov
imul
adc
jo
sbb
dec
repz
aaa
pop
out
xchg
push
inc
pop
xchg
jp
arpl
adc
js
push
adc
mov
and
pop
pop
push
stc
scas
(bad)
(bad)
mov
fmul
add
les
loope
hlt
push
push
cdq
(bad)
mov
repz
leave
dec
jo
stc
or
jge
xor
mov
xchg
lock
adc
pop
cmc
mov
add
js
mov
cmp
sbb
outs
xchg
add
jns
das
icebp
fwait
aad
jecxz
push
sbb
jns
and
out
bnd
lea
xchg
mov
call
in
add
call
popf
or
test
push
lds
inc
mov
adc
cmps
test
nop
(bad)
in
inc
shr
add
adc
xchg
dec
not
xchg
jno
mov
iret
mov
sub
(bad)
ret
push
add
sub
out
and
push
mov
and
inc
pop
mov
cdq
push
xor
push
(bad)
dec
je
or
fnsave
fcomp
adc
and
aad
add
dec
mov
stos
arpl
sar
rcr
cmp
inc
adc
inc
xor
(bad)
push
scas
mov
mov
inc
cmp
lds
adc
call
mov
das
inc
adc
imul
int3
cmp
imul
fisubr
and
or
inc
dec
pop
cmp
int
ins
movs
mov
fidiv
xchg
bnd
sub
sub
or
call
push
mov
add
lods
mov
push
sbb
mov
lea
cmps
mov
aas
leave
xlat
xor
push
cs
inc
xchg
outs
fbstp
xor
inc
cmps
in
(bad)
dec
sti
fwait
retf
push
push
cmp
adc
leave
gs
lock
cmp
std
fs
and
inc
fsub
fwait
out
retf
jno
pop
xchg
adc
or
sub
(bad)
(bad)
mov
push
aaa
enter
(bad)
pop
out
cmp
push
mov
and
ds
xor
clc
outs
adc
sbb
jno
pop
ds
dec
xor
mov
sbb
imul
mov
pop
fucomp
je
adc
jg
push
cmp
shl
or
push
sub
jmp
mov
fs
mov
(bad)
jmp
hlt
sbb
sbb
inc
and
mov
loope
xchg
sbb
jp
and
add
inc
scas
aaa
imul
inc
aam
lods
inc
rcl
and
call
pop
sub
inc
jp
icebp
mov
repnz
and
cmp
lods
gs
int
mov
shl
je
inc
cmp
or
daa
push
arpl
cli
push
add
push
cmp
ss
int3
shl
adc
sbb
inc
sub
xchg
xor
lods
js
xor
xchg
xchg
push
ror
movs
mov
mov
mov
ins
inc
stos
loop
push
push
cwde
adc
dec
push
mov
ss
lea
inc
movs
sbb
loope
aaa
xchg
sar
push
push
push
fstp
movs
stc
enter
(bad)
sbb
dec
push
inc
out
push
fsubr
in
add
xchg
push
add
loopne
sbb
hlt
or
call
call
rol
and
lds
mov
mov
sbb
sub
outs
push
push
mov
adc
pop
in
popa
jp
stos
rcl
and
test
(bad)
out
js
stos
dec
push
fucomi
das
je
inc
(bad)
pop
stc
cmp
cmp
retf
movs
in
ss
fcmovnbe
fsub
pop
sbb
and
pop
and
cdq
sbb
sbb
aas
lea
adc
hlt
push
lods
ficom
xchg
addr16
fld
and
jnp
js
test
inc
mov
test
add
xchg
add
xor
mov
bound
in
fcom
cmc
or
jo
int3
and
push
cmp
mov
jnp
test
stos
mov
mov
(bad)
sub
mov
and
push
pop
sub
xchg
pop
push
aam
pop
jb
(bad)
cli
jle
fcmovnb
jecxz
inc
not
inc
cmp
pop
ficomp
mov
dec
(bad)
cmp
xor
push
inc
jae
mov
pusha
fmul
retf
rcl
sub
push
std
cmp
sub
add
ss
jne
mov
mov
addr16
stos
push
js
fcomp
in
popa
xchg
jmp
sub
mov
ins
repz
fiadd
mov
outs
in
and
jle
add
test
and
add
mov
test
dec
(bad)
jbe
cdq
loop
jae
jecxz
jae
(bad)
stc
cmps
push
leave
add
call
test
push
test
movs
add
test
mov
sbb
(bad)
lds
mov
outs
mov
sbb
(bad)
dec
or
hlt
mov
xchg
stos
cmp
repnz
mov
sub
mov
lods
loop
lods
fs
popf
push
mov
cwde
dec
sbb
imul
sbb
mov
mov
jmp
je
int
xchg
movs
div
ror
addr16
mov
mov
add
push
push
jecxz
and
out
xchg
int
push
xlat
ins
ins
add
ret
retf
in
push
xchg
inc
jmp
push
stos
dec
aas
test
mov
pcmpgtw
pop
inc
dec
test
xchg
xchg
hlt
dec
push
xor
xchg
inc
inc
pop
cld
xchg
shr
mov
addr16
xchg
dec
lock
out
sub
and
push
mov
test
adc
call
out
stos
push
and
pushf
or
cli
mov
fsub
sub
pop
inc
jecxz
mov
pop
pop
(bad)
and
xor
dec
pop
inc
sahf
cdq
mov
cs
shr
mov
jle
ror
sbb
push
rcl
add
(bad)
sub
pop
iret
inc
(bad)
sub
jb
mov
and
pop
(bad)
xor
(bad)
jo
arpl
fst
mov
cmp
mov
stos
outs
fcom
movs
jo
test
push
push
sbb
loop
adc
dec
movs
popf
push
ror
push
fs
mov
sbb
xchg
sbb
ins
fidivr
outs
push
cmp
jo
mov
or
sbb
cdq
mov
loopne
push
push
(bad)
push
jle
mul
ret
shl
arpl
dec
dec
mov
neg
in
add
adc
ror
jno
push
cdq
pop
cs
jmp
popa
aaa
xchg
fnstcw
shr
add
xor
adc
std
add
cdq
clc
cwde
and
and
pusha
and
jmp
jne
mov
pop
pop
ins
int3
dec
mov
sbb
cmp
xor
add
inc
js
add
fstp
out
mov
int
lahf
dec
mov
dec
sub
daa
push
daa
sbb
aas
sahf
pop
into
xchg
xchg
xor
push
inc
jecxz
aas
mov
mov
jns
aas
push
pusha
ins
mov
mov
(bad)
aad
cmps
stos
inc
das
lods
jmp
cmc
ror
xor
pop
fstp
pop
sub
sahf
in
mov
loop
rol
dec
jmp
ds
out
rol
in
add
sub
cmp
movs
and
xor
mov
dec
cmp
inc
inc
iret
ss
addr16
shr
int
clc
and
fst
pushf
mov
mov
fwait
cmp
jbe
mov
adc
inc
aam
or
cmps
call
call
or
fstp
loop
sub
inc
lods
cmp
test
pop
ficom
sub
or
push
cmp
cmp
stos
aas
movs
pop
mov
add
shl
scas
inc
fnstenv
or
inc
stos
dec
fist
cmps
add
in
iret
mov
xchg
pushw
sub
mov
mov
adc
or
loopne
loop
mov
gs
in
out
sbb
xchg
ficom
movs
mov
inc
test
jge
dec
sbb
test
push
test
je
xor
xchg
loop
sub
and
addr16
pop
data16
addr16
mov
mov
cmps
pop
fadd
or
and
pop
rcr
or
fldcw
retf
sbb
mov
ret
(bad)
sub
dec
and
mov
mov
div
mov
add
pop
and
or
jmp
bound
or
enter
xchg
cmc
or
push
xor
or
add
xor
enter
cmp
push
mov
ror
stos
dec
repz
and
sbb
loop
sbb
(bad)
lock
test
mov
leave
fstp
(bad)
jbe
test
sub
sub
cmps
into
std
lahf
push
dec
and
(bad)
jae
mov
push
loopne
aad
call
hlt
sbb
call
mov
rcl
mov
push
leave
fs
xchg
sub
add
sub
inc
and
loope
push
enter
lock
hlt
loopne
repnz
dec
jl
inc
minps
cmp
lock
cmp
mov
push
dec
neg
jmp
adc
and
loop
imul
ret
aad
in
sar
xchg
pop
arpl
mov
jb
adc
movs
mov
lods
hlt
fisttp
in
push
in
das
add
repnz
icebp
sbb
mov
jle
sti
xor
fsubr
jecxz
mov
dec
fimul
xchg
out
sbb
jle
adc
retf
and
aad
mov
addr16
dec
mov
nop
fbld
cmp
cmp
cmc
mov
add
dec
shl
test
xor
xchg
jl
jmp
shr
cmp
sub
pop
mov
lods
push
stos
cli
rcr
call
mov
xchg
icebp
je
ins
pop
out
cwde
int3
daa
pop
fsubr
and
and
imul
nop
add
ss
mov
stos
mov
fwait
add
in
and
push
pop
repnz
into
lock
sahf
mov
or
mov
ins
popf
clc
sbb
dec
push
pop
jmp
sub
test
mov
xor
repnz
mov
jb
xor
int3
jnp
jl
dec
fnsave
outs
pop
gs
mov
push
cmps
push
loopne
js
jmp
sub
xor
je
pop
sbb
cmp
loope
mov
mov
in
dec
arpl
jl
hlt
repnz
sbb
aas
scas
sbb
push
sbb
jp
and
dec
dec
push
mov
into
dec
es
rcr
mov
sub
rcr
add
mov
push
mov
loope
cmps
mov
push
sbb
gs
jne
add
inc
xor
in
pop
cmp
dec
daa
mov
mov
dec
sbb
mov
pop
in
jg
inc
inc
in
or
rcr
mov
inc
pop
pop
stos
sub
xor
inc
pop
push
imul
test
mov
pop
ja
repz
or
cmp
or
jle
mov
(bad)
rcl
je
imul
mov
mov
xor
add
and
mov
ja
scas
cdq
mov
or
dec
cmp
adc
inc
jo
sti
jns
aas
sub
push
push
and
jb
pop
xor
inc
xlat
fs
aas
movs
cmp
jo
icebp
daa
stc
js
sub
retf
and
and
dec
outs
out
lock
push
cdq
rcr
rcl
adc
xor
mov
cmp
test
scas
nop
inc
add
push
cli
cwde
int
or
js
push
xchg
adc
mov
add
jns
and
pop
mov
sbb
lods
push
mov
mov
adc
jne
iret
stos
lods
add
xchg
stc
sbb
fist
pop
lock
popa
jmp
repz
mov
sub
ret
pop
out
(bad)
mov
call
repnz
sar
push
inc
cmp
mov
push
loopne
pusha
add
push
inc
mov
daa
aas
pop
cmps
cld
jecxz
xor
mov
inc
(bad)
xchg
mov
mov
adc
retf
in
bnd
clc
xor
xchg
int3
mov
fs
jns
std
cld
pop
rcr
or
mov
or
pusha
push
loope
repz
mov
xor
scas
pop
fwait
or
cmps
jb
dec
cmp
fwait
fwait
call
mov
jnp
popf
loopne
or
int
cmps
xchg
pop
shl
pop
div
dec
sbb
ins
adc
mov
aas
pusha
cld
inc
int3
xor
scas
or
sbb
test
scas
stos
lock
ins
(bad)
push
fisub
cmp
xchg
inc
test
add
in
or
in
xchg
add
call
push
add
out
push
inc
addr16
add
sbb
xchg
and
in
xchg
add
inc
lahf
jne
iret
sahf
enter
adc
stc
pushf
pop
aaa
int3
mov
enter
imul
fnstcw
jp
(bad)
pop
push
jmp
lahf
mov
call
test
sbb
push
jb
std
pop
(bad)
out
xor
push
lahf
loop
adc
xlat
addr16
out
jge
inc
rol
nop
inc
mov
dec
int3
retf
sbb
inc
ret
sub
push
push
aas
iret
rol
jecxz
movs
scas
add
(bad)
and
fcomp
cmp
(bad)
icebp
(bad)
hlt
scas
cmps
pop
pop
cmps
test
dec
pop
push
pop
sub
loopne
add
jle
fistp
aad
in
mov
mov
ss
xchg
xchg
popf
jl
repnz
call
dec
test
cmp
mov
sahf
pop
out
retf
mov
fnstsw
lods
cmp
dec
ins
inc
pop
lock
xlat
mov
test
test
adc
cld
sub
rcr
scas
cdq
pop
and
out
retf
cmp
mov
mov
or
mov
je
(bad)
mov
sub
(bad)
cli
and
test
xchg
repnz
inc
inc
jns
sar
mov
popf
jne
and
lods
mov
aas
repz
cli
xor
gs
sbb
cli
movs
cmp
lods
xchg
adc
fisttp
xchg
nop
nop
sub
push
outs
js
(bad)
mov
push
mov
lods
mov
inc
mov
lds
out
sub
in
ins
and
test
aaa
(bad)
(bad)
in
scas
pushf
push
or
repz
sub
mov
sub
stos
fisttp
out
mov
int3
movs
(bad)
mov
cmp
fwait
xor
call
test
popf
pop
xchg
scas
stos
mov
pop
sub
retf
push
mov
adc
mov
xchg
dec
aas
idiv
pop
cmps
and
popa
fsubp
in
push
mov
(bad)
les
cmc
scas
inc
mov
dec
fisttp
mov
pop
movs
cmc
and
or
ret
sbb
xor
cmps
sub
pusha
fs
push
loop
mov
lahf
dec
imul
outs
adc
jne
push
neg
sbb
mov
pusha
dec
jmp
pop
gs
sti
les
repz
jns
xchg
mov
push
push
ror
lock
fidiv
xchg
pop
outs
jp
add
jbe
sbb
ins
pushf
mov
(bad)
ret
and
(bad)
jmp
in
(bad)
jl
in
xchg
fisub
xor
mov
movs
repz
add
ins
mov
test
frstor
mov
ds
shl
mov
jne
jbe
adc
mov
out
ss
and
inc
sbb
ins
sbb
dec
shr
mov
jno
rol
mov
push
pop
sbb
push
mov
(bad)
push
mov
(bad)
push
mov
(bad)
push
mov
(bad)
push
mov
(bad)
push
mov
(bad)
push
mov
(bad)
push
stos
or
push
fcomp
or
mov
pop
dec
outs
push
xor
cmps
mov
dec
dec
outs
push
xor
cmps
mov
into
cmp
push
xor
cmps
mov
(bad)
and
mov
daa
int
push
xor
cmps
mov
pop
inc
dec
cmc
xor
cmps
mov
pop
dec
ja
xor
cmps
mov
pop
dec
jg
xor
cmps
mov
pop
dec
ja
xor
cmps
mov
pop
dec
outs
sub
push
adc
pop
dec
outs
in
xor
cmps
mov
pop
dec
imul
sti
cmps
mov
pop
dec
outs
fnstenv
sti
cmps
mov
pop
dec
pop
sub
sti
cmps
mov
pop
dec
inc
and
test
ins
dec
pop
dec
xor
test
fdiv
xor
cmps
mov
inc
sbb
push
xor
cmps
mov
mov
dec
push
xor
cmps
mov
jnp
ins
push
xor
cmps
mov
pop
dec
outs
push
xor
cmps
pusha
jmp
loopne
xchg
sbb
movs
in
xchg
or
clc
xchg
adc
loopne
xchg
add
in
xchg
inc
sub
movs
imul
test
out
xchg
inc
and
dec
in
xchg
std
mov
cmp
sbb
std
loope
inc
fsubr
aam
rcr
dec
in
xor
dec
jnp
cmp
inc
loopne
inc
(bad)
sbb
jmp
push
xchg
xchg
(bad)
les
mov
mov
arpl
out
mov
xlat
cmp
sub
int
or
movs
fwait
mov
lahf
cmp
out
icebp
jbe
lods
jmp
movd
push
and
(bad)
daa
mov
mov
pop
sub
mov
jnp
lahf
out
cs
ins
pop
rcl
mov
jmp
xor
pushf
sar
pusha
pop
cmp
push
in
repz
or
mov
xchg
scas
cmp
dec
jge
fmul
jp
shr
jle
inc
sbb
xor
and
jo
mov
pop
cmp
dec
jns
or
dec
aad
xor
mov
jecxz
aam
jae
dec
push
dec
mov
fs
xchg
dec
or
ins
scas
lods
mov
or
or
fcmovb
and
cli
dec
sub
imul
mov
inc
fsub
psadbw
push
sbb
mov
loop
cmc
lea
add
loop
hlt
adc
push
jno
jns
inc
xchg
(bad)
jmp
int3
ss
arpl
sbb
jle
or
test
adc
hlt
cmps
xchg
mov
cmp
jb
mov
push
and
pop
inc
into
inc
cli
and
xchg
pop
jnp
xchg
aad
push
movs
mov
lahf
push
mov
xchg
ror
push
pushf
mov
cwde
lods
mov
or
out
stos
mov
cmp
sub
ror
scas
outs
xor
cld
cmp
imul
sbb
test
adc
ds
fbstp
jmp
xor
(bad)
push
cmp
dec
pop
js
sbb
in
adc
push
push
div
js
add
inc
add
xor
sbb
pop
cdq
daa
(bad)
repnz
push
lahf
mov
fist
cwde
hlt
sbb
lfs
les
out
jg
xchg
mov
xchg
fxch
sahf
cmp
xchg
ror
or
(bad)
loopne
nop
out
icebp
pop
sahf
pusha
inc
lahf
(bad)
into
mov
dec
les
and
sub
lahf
popf
rol
inc
mov
ror
std
loopne
and
ins
das
add
arpl
mov
jg
inc
fwait
(bad)
jmp
aaa
test
popf
sbb
ret
sub
fdiv
cmp
mov
(bad)
xchg
data16
movs
dec
lds
jne
mov
push
xor
retf
and
mov
add
cli
sbb
inc
mov
pop
mov
outs
jmp
in
xchg
or
in
cdq
adc
in
add
call
xchg
test
rol
sub
movs
outs
xlat
and
loopne
add
jmp
outs
das
or
xchg
not
add
inc
adc
xchg
mov
out
xor
les
mov
retf
test
jge
aam
adc
lahf
push
lea
sahf
xchg
xchg
gs
jge
in
popf
push
mov
out
ins
mov
jl
movs
jg
dec
cdq
cs
repz
js
mov
sub
aad
sbb
xchg
pop
hlt
shl
pop
push
push
add
mov
sbb
daa
sub
lahf
shl
xchg
cli
dec
add
sub
jl
cmp
idiv
pop
add
dec
xchg
mov
nop
test
test
push
jg
test
cmp
jnp
mov
iret
push
loop
int3
adc
shl
icebp
lock
movs
pop
scas
adc
rcr
ins
or
(bad)
sub
in
xchg
push
repz
pop
pop
les
mov
pop
or
mov
adc
xor
sahf
outs
test
aaa
test
sbb
push
sar
icebp
add
mov
test
(bad)
out
push
mov
push
cdq
push
(bad)
jnp
or
outs
xor
push
fdivr
push
dec
rcr
mov
dec
pop
add
mov
stos
push
inc
sub
stc
mov
and
mov
dec
or
icebp
mov
add
enter
mov
cmp
enter
adc
faddp
cmp
enter
arpl
xchg
cmp
scas
ret
mov
mov
jne
nop
mov
scas
cmp
add
inc
jmp
jb
mov
jne
sub
dec
clc
and
or
xor
in
arpl
sbb
lock
push
outs
les
mov
jns
push
test
arpl
sub
mov
xchg
pop
xlat
data16
loope
jnp
(bad)
je
fsub
push
cdq
cwde
(bad)
es
mov
aad
pop
jge
or
(bad)
ja
jge
sar
lods
jmp
sahf
jae
pop
xchg
scas
loop
lods
add
popf
adc
adc
(bad)
out
xchg
cmp
and
shl
icebp
repz
jne
pop
nop
movs
mov
in
or
mov
call
cwde
rcr
jo
xor
int
sbb
repz
movs
mov
scas
jbe
and
data16
sar
retf
std
jge
dec
imul
shl
popf
in
adc
adc
shrd
inc
or
adc
lods
stos
inc
xor
inc
hlt
mov
movzx
mov
scas
and
inc
outs
std
inc
out
or
fmul
and
jbe
or
pop
pop
cmp
data16
pop
in
jbe
sbb
sbb
lods
aam
aam
xchg
push
push
pop
xchg
adc
jmp
push
push
jmp
push
jecxz
repz
call
scas
neg
mov
lods
xor
mov
je
loop
adc
mov
and
std
fst
cs
dec
pop
inc
xor
jbe
pop
or
mov
(bad)
xor
(bad)
mov
fld
adc
or
xor
adc
or
mov
lods
daa
lock
sub
fsub
and
ror
pushf
arpl
nop
scas
(bad)
mov
(bad)
aaa
adc
aas
shl
lahf
push
push
shr
push
xchg
mov
dec
in
ins
loop
mov
imul
outs
pop
cld
push
shl
mov
call
jo
add
mov
imul
out
cmps
fisub
mov
inc
pop
jmp
pop
jmp
mov
stos
popf
fimul
rcl
je
push
ins
mov
shr
int3
out
jg
mov
jl
or
test
xchg
push
out
(bad)
xor
inc
jne
inc
ja
push
jmp
nop
add
pop
xchg
inc
loope
loopne
in
cld
add
sub
outs
pop
lock
mov
and
stos
mov
test
mov
or
les
ret
repz
test
push
adc
stos
jecxz
jnp
pop
adc
pop
fs
fwait
test
fmul
xchg
sub
and
icebp
xor
out
inc
cmc
sub
lea
jmp
inc
in
popf
or
loopne
or
loopne
xchg
add
lods
adc
and
rol
movs
outs
push
inc
(bad)
in
xchg
test
das
imul
xchg
add
push
jmp
sbb
loopne
loope
(bad)
dec
repz
lds
mov
adc
xor
pop
sub
mov
adc
adc
push
xor
mov
lahf
movs
imul
adc
das
add
arpl
out
or
add
xchg
mov
push
(bad)
jle
mov
ins
(bad)
repz
inc
mov
(bad)
mov
or
loop
(bad)
xchg
dec
jbe
cwde
repz
movs
data16
lock
add
shl
cmc
jno
dec
ror
enter
fist
outs
xor
fldcw
mov
mov
imul
addr16
cmp
fild
adc
loope
ss
fsub
hlt
in
adc
hlt
or
retf
leave
mov
popa
mov
aam
mov
rcr
add
loopne
loopne
rcl
popf
dec
cmp
adc
shr
popf
inc
fldcw
nop
jns
sbb
sub
in
enter
or
sub
mov
in
sub
sub
test
jmp
aas
pop
push
or
xlat
imul
or
sub
add
mov
inc
push
jns
mov
cs
ins
push
sub
sbb
shl
daa
fld
add
(bad)
pop
ficom
outs
mov
vdivps
pop
push
pushf
(bad)
jmp
dec
or
aas
fdivr
adc
mov
test
(bad)
loopne
gs
aaa
mov
call
or
adc
and
bound
xor
fwait
shl
(bad)
and
test
in
add
inc
mov
push
fnstsw
movs
in
add
jns
or
gs
in
fld
pop
clc
into
cmp
sbb
stos
add
into
popa
mov
std
test
stos
movs
in
jge
loope
pop
rcl
ror
movs
fisub
test
push
mov
sub
cld
loop
mov
(bad)
jge
dec
mov
xchg
nop
xor
mov
add
cmp
hlt
mov
fcom
aad
adc
in
mov
push
std
mov
or
mov
test
mov
andps
jmp
sbb
or
out
call
push
mov
shl
cld
les
cmp
inc
jmp
adc
loope
pop
nop
out
shl
xor
mov
aam
hlt
loopne
pop
outs
test
jp
lahf
push
ds
jb
add
test
mov
sbb
ins
sbb
add
xchg
mov
jns
dec
jae
dec
(bad)
nop
test
sub
push
loope
add
jecxz
push
mov
cmp
out
pushf
or
mov
test
mov
jnp
add
dec
stos
pushf
inc
in
xor
xlat
out
out
pushf
es
sbb
test
jmp
(bad)
xor
sbb
leave
test
push
sub
imul
inc
and
sub
add
inc
mov
jae
cwde
bound
(bad)
add
sub
and
adc
aas
inc
adc
sahf
mov
adc
inc
(bad)
in
popf
sub
jmp
dec
ins
mov
mov
cmp
aaa
addr16
xchg
mov
sub
inc
ret
in
fiadd
js
mov
mov
and
mov
dec
in
mov
fadd
sbb
and
das
mov
ins
pop
sbb
mov
xor
sub
cmp
popf
jo
lods
and
pop
and
dec
push
xchg
shl
cdq
inc
lock
es
push
or
jo
es
inc
sahf
xor
int3
hlt
adc
mov
inc
addr16
adc
leave
bound
fld
pop
dec
xor
loopne
mov
mov
pop
imul
pop
ret
gs
add
cmps
mov
pop
jb
xchg
(bad)
out
inc
inc
out
sbb
cli
enter
ins
das
push
mov
push
in
(bad)
aas
pop
retf
clc
ret
sub
cmp
inc
dec
sbb
push
out
clc
sbb
fst
imul
and
sbb
imul
or
stos
popa
fsub
xor
mov
fcom
adc
mov
cmc
xchg
jg
retf
pop
pop
lds
iret
xor
dec
nop
jg
js
mov
push
push
pop
sbb
mov
ds
mov
push
cmp
or
mov
lds
iret
xor
dec
in
(bad)
lahf
ins
retf
scas
xor
retf
mov
sub
xchg
mov
and
pop
mov
loope
mov
add
loopne
xchg
add
in
or
loopne
or
in
in
adc
lock
mov
xor
fsub
xor
fsubr
inc
movs
movs
lds
mov
int
and
add
in
cdq
adc
cld
test
mov
mov
push
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
mov
or
pop
push
in
xchg
or
xchg
nop
call
xchg
add
loopne
xchg
add
call
mov
repz
mov
lock
add
in
in
xchg
add
call
xchg
add
clc
sbb
sbb
xchg
xor
in
xchg
or
in
push
scas
aaa
(bad)
es
xor
push
out
push
adc
mov
xchg
or
arpl
and
neg
jmp
and
mov
stc
sbb
cli
test
jmp
mov
inc
or
push
cs
lock
push
ret
add
lea
sub
or
pop
cmp
sbb
mov
aam
fcom
push
xor
xchg
fsub
mov
gs
sub
jge
mov
(bad)
xchg
in
dec
(bad)
mov
mov
sub
(bad)
ds
sbb
mov
lods
(bad)
in
cmc
scas
mov
int3
xchg
mov
or
iret
mul
push
xchg
cmp
ror
cmp
mov
outs
lds
repnz
add
scas
sahf
or
mov
les
xlat
xchg
or
jp
add
(bad)
dec
mov
sub
sbb
jne
pop
jmp
push
xchg
xchg
xor
or
cdq
jb
out
mov
out
xchg
xor
pop
std
sub
test
(bad)
push
(bad)
dec
les
stos
test
pop
imul
cwde
inc
xor
sti
out
mov
bound
fwait
xor
sbb
aas
dec
cmp
inc
sbb
add
test
sub
sbb
jbe
pop
sub
push
call
pop
ss
inc
and
lods
(bad)
cmp
loope
add
pop
xor
or
(bad)
ins
ret
cs
cmp
adc
mov
add
std
pop
mov
in
shr
fsubp
mov
mov
out
cdq
inc
xchg
inc
mov
pop
add
fs
cmps
sahf
pop
test
popa
add
call
loopne
pop
and
inc
loopne
xchg
add
ins
je
loopne
xchg
add
call
xchg
add
call
xchg
add
call
es
call
scas
in
in
sbb
pop
arpl
fsub
adc
pop
sub
push
sbb
aam
pop
mov
scas
mov
ficom
js
scas
xchg
adc
fnsave
dec
pop
int3
pop
xchg
cdq
sbb
cmp
add
jbe
and
int
inc
pop
mov
rcr
mov
dec
and
lahf
imul
sub
push
rcr
jno
ds
int
add
call
jo
inc
push
out
lods
jecxz
inc
sbb
aaa
mov
call
xchg
mov
out
adc
cmp
les
add
jp
js
loope
addr16
xchg
lea
mov
mov
ss
or
adc
and
mov
stos
(bad)
in
or
leave
and
jo
cmp
call
pop
mov
mov
bound
aam
dec
outs
sahf
cmps
movs
jge
ins
(bad)
or
sub
and
xchg
fldcw
jb
xlat
jnp
out
or
pop
std
sub
test
(bad)
push
(bad)
dec
les
stos
test
jl
retf
ss
inc
(bad)
inc
retf
fmul
bound
jae
xor
mul
stos
push
jmp
scas
adc
add
in
dec
pop
call
mov
xchg
push
add
xchg
call
add
mov
clc
out
jecxz
xor
shl
les
jbe
(bad)
hlt
in
cs
iret
fwait
arpl
pop
jecxz
popf
cmp
popf
daa
add
push
addr16
xchg
jecxz
lea
aas
out
call
or
add
loopne
cdq
add
call
cdq
adc
hlt
xchg
or
push
lds
jmp
add
call
lock
pop
sub
and
lea
mov
cld
imul
mov
cdq
enter
push
in
int
push
or
push
jmp
push
and
(bad)
scas
fisttp
std
outs
dec
stos
out
es
(bad)
cmp
mov
leave
pop
jle
clc
xchg
or
std
jge
outs
push
fst
loope
dec
pop
div
jb
adc
and
ins
repnz
or
push
xor
mov
rcr
xchg
push
(bad)
sbb
dec
lods
xchg
and
call
lahf
fsub
sbb
lock
xchg
push
std
jge
outs
push
fst
in
jno
dec
or
sbb
mov
sbb
xchg
cwde
and
push
push
lea
xchg
sar
and
xor
stos
adc
mov
outs
hlt
loopne
xor
lock
sar
cmp
es
push
push
sbb
fild
retf
adc
inc
jmp
jmp
popa
fmulp
and
add
mov
mov
mov
pop
fstp
aad
and
push
xchg
and
imul
aam
(bad)
dec
ins
imul
bound
fisubr
push
mov
mov
push
jmp
ret
fmul
mov
aam
push
xchg
repz
pop
aas
cli
mul
fldcw
ins
mov
out
jecxz
xor
jb
stc
push
cmps
test
dec
imul
(bad)
and
clc
xchg
push
hlt
and
shr
dec
int
xlat
es
mov
sbb
push
mov
mov
aad
jns
leave
in
add
sub
pop
nop
mov
mov
add
in
add
sub
pop
nop
scas
js
sub
jbe
add
in
add
sub
pop
nop
mov
mov
add
in
add
sub
pop
nop
pop
xor
xor
add
add
push
mov
or
jg
push
pop
or
aad
(bad)
sub
mov
push
mov
jno
add
xchg
mov
cmp
cs
ret
stos
inc
sahf
pop
xchg
mov
cmp
push
mov
sbb
jge
arpl
or
int3
out
or
and
pop
sahf
cmps
pop
scas
mov
xchg
jae
xor
rcr
sbb
adc
out
pop
push
ins
(bad)
in
in
sub
pminsw
lahf
into
fcmovnu
mov
jne
mov
inc
in
and
xchg
push
in
sbb
mov
adc
xchg
(bad)
mov
rcr
test
mov
loopne
scas
sub
and
adc
jns
jle
mov
pop
mov
inc
fidiv
sahf
pop
repnz
loope
movs
push
sar
mov
loop
cmp
xor
mov
leave
scas
cli
loopne
mov
ret
aad
add
jae
xchg
movs
pop
xchg
mov
sbb
mov
mov
jle
adc
add
test
push
sub
xor
sahf
push
add
adc
pop
sub
adc
mov
sar
nop
shl
mov
out
xchg
sti
aad
out
cli
and
mov
xchg
stos
cdq
mov
cwde
pop
imul
cmp
pop
fstp
adc
xchg
mov
(bad)
in
int3
mov
cld
loop
xchg
jecxz
mov
idiv
lea
xchg
jge
sbb
or
add
(bad)
(bad)
enter
ins
ins
and
cmps
jbe
xchg
int3
sahf
xor
retf
outs
jg
mov
rol
(bad)
mov
or
rol
jmp
out
push
pop
push
sti
ins
jg
out
mov
pop
jo
(bad)
(bad)
sti
outs
jle
or
add
aaa
je
sub
imul
out
int3
sbb
xchg
add
xchg
add
in
mov
in
xchg
add
call
cdq
adc
movs
movs
aam
mov
adc
in
fisttp
and
sub
movs
addr16
or
adc
sbb
jns
ss
cld
xor
dec
out
imul
imul
cmp
jle
popa
fidivr
jle
adc
pop
sbb
mov
and
cmp
fistp
mov
daa
xchg
xchg
add
aaa
add
or
pushf
repz
(bad)
test
(bad)
sub
or
pop
outs
cmp
pop
ret
hlt
stos
addr16
out
and
int3
mov
add
fcom
jp
data16
sub
loop
pop
fisttp
mov
call
mov
cld
push
add
add
outs
or
xchg
mov
pop
mov
repz
inc
mov
adc
int3
scas
xor
icebp
and
je
and
sub
jg
dec
sbb
jge
sub
add
inc
jmp
cmp
das
rol
aas
not
lock
dec
ret
dec
and
inc
nop
xchg
ret
out
inc
jno
sub
sbb
fstp
push
mov
sahf
nop
sti
xor
ins
or
cmp
aaa
add
nop
mov
gs
or
je
pop
mov
sar
test
sub
and
adc
in
mov
adc
scas
jns
fidiv
mov
and
mov
add
addr16
pop
and
dec
adc
and
ins
inc
cdq
jl
test
in
add
in
sbb
ret
dec
jb
sub
out
sar
mov
cmp
jne
jno
mov
sar
mov
mov
sar
sub
daa
add
jecxz
mov
add
fmul
in
jns
(bad)
mov
fucomp
call
(bad)
in
push
(bad)
cld
scas
iret
cmp
and
iret
enter
pop
gs
inc
pmaxsw
pusha
sbb
mov
fadd
scas
jp
mov
fldpi
mov
imul
cmp
inc
pop
jne
mov
push
push
pushf
stos
xor
iret
and
xor
pop
pop
add
out
lods
sub
lock
mov
mov
shl
and
fnstenv
cmp
aad
fistp
jp
sbb
scas
ss
ins
leave
scas
xor
shr
imul
enter
fcom
xchg
jecxz
jno
bound
int3
ja
js
adc
call
push
fucomip
ror
lods
mov
out
dec
mov
push
ja
sbb
mov
cmc
jb
or
test
int3
sub
xor
movs
fisttp
jmp
jno
cmp
sbb
loop
fldcw
jbe
enter
test
dec
jns
inc
mov
xacquire
sbb
sar
mov
ins
inc
or
int
and
inc
fst
out
lods
lock
fild
cwde
add
mov
js
adc
jne
inc
outs
adc
call
push
fucomip
int
xchg
std
test
mov
sub
pop
fild
jnp
pop
jb
dec
nop
jg
les
sbb
test
mov
sbb
and
mov
repz
out
rcl
aam
call
xchg
nop
es
sti
jle
push
arpl
fild
xor
fild
jnp
pop
jb
dec
nop
jg
les
sbb
test
mov
sbb
and
mov
repz
out
rcl
aam
call
dec
mov
xor
inc
fisttp
dec
lods
adc
cmp
cmp
sub
test
jecxz
arpl
mov
and
cmps
xor
or
and
jns
fwait
and
add
mov
xchg
xor
out
and
data16
dec
pop
adc
cmps
repz
or
add
int3
sbb
test
aas
push
push
daa
sub
loopne
sti
mov
movs
sbb
and
call
pop
or
pop
shr
test
aas
jecxz
ss
sbb
xchg
gs
ja
sti
xchg
dec
call
xor
xchg
test
xor
or
retf
in
ins
xchg
repz
daa
adc
sti
mov
and
ss
fstp
sub
sub
lods
jmp
and
inc
popa
mov
sar
test
sub
mov
inc
in
sbb
jb
dec
sahf
mov
retf
or
(bad)
or
inc
ds
jbe
addr16
and
mov
mov
adc
shl
in
retf
test
jecxz
xor
test
cwde
push
or
mov
std
adc
push
je
out
out
(bad)
sbb
xor
lods
pop
ss
test
popf
test
jge
add
rol
gs
leave
mov
push
leave
int
sub
dec
jno
mov
jg
mov
lods
xor
push
sub
hlt
in
xor
jle
ins
mov
cmc
jecxz
cmps
scas
cmp
pop
jb
inc
cwde
xchg
stos
sti
adc
pop
mov
jb
xor
sbb
test
sbb
jbe
mov
adc
(bad)
int
int
cli
mov
(bad)
mov
mov
(bad)
out
or
push
data16
dec
pop
adc
push
sub
jle
mov
aam
dec
scas
push
push
enter
push
movs
les
out
jp
cdq
aas
push
pop
sti
ds
sub
push
in
pop
cmp
mov
push
(bad)
pop
inc
hlt
sbb
sub
sti
push
sub
mov
std
adc
push
je
loop
out
out
pop
jge
int3
scas
loope
sub
mov
pop
sbb
dec
push
adc
in
jmp
dec
ins
into
fadd
fcomp
and
mov
add
pop
sub
stos
fsub
lock
test
xor
cmp
jmp
scas
popa
in
pushf
(bad)
pop
cli
add
mov
xchg
xchg
xchg
data16
movs
mov
lods
add
(bad)
lods
push
cmps
dec
fcmovb
mov
xchg
shl
sbb
loopne
add
loopne
xchg
add
movs
mov
pop
dec
mov
pop
shl
sub
lahf
inc
cmps
outs
push
or
in
imul
into
nop
scas
adc
or
ds
ret
mov
jle
xchg
push
mov
outs
or
popf
not
stc
jmp
mov
cwde
(bad)
push
ins
mov
sub
adc
out
(bad)
pushf
mov
in
xor
push
cmps
ficom
inc
mov
xchg
jb
leave
cs
mov
shl
dec
mov
pop
jge
xor
inc
fld
pop
test
out
mov
push
ror
dec
test
sti
pushf
mov
and
stos
test
add
ret
je
cli
test
mov
shl
test
and
jns
cdq
mov
fisttp
xchg
mov
pop
dec
push
pop
cld
pop
xchg
mov
cmps
out
or
inc
mov
mov
xchg
call
and
jae
outs
sub
xor
inc
push
adc
icebp
loop
les
nop
aas
dec
mov
mov
xchg
rdmsr
movs
aad
mov
mov
test
gs
xor
push
xchg
mov
pop
dec
push
pop
cld
sbb
fimul
leave
pop
scas
ss
or
pop
es
push
int
(bad)
stc
jb
mov
and
je
mov
pushf
jmp
cwde
mov
jge
jg
xlat
pushf
mov
in
lock
call
add
add
add
and
popa
inc
(bad)
fs
std
sbb
inc
cmps
ds
push
cs
fcos
pop
xchg
lea
mov
stos
ror
dec
aaa
sub
test
jg
(bad)
or
retf
cmp
sub
push
pop
mov
loop
mov
hlt
fiadd
pop
loopne
fs
int
addr16
dec
pop
daa
or
sub
push
pop
mov
pop
loopne
int3
cdq
cmp
fwait
jne
dec
add
xchg
ins
push
int
jne
sub
sub
mov
mov
xchg
ins
push
int
jne
sub
sub
pop
xor
fcmove
(bad)
pop
les
mov
sub
push
pop
dec
mov
mov
mov
sub
call
jg
das
push
or
test
(bad)
scas
pop
sub
pmuludq
add
sub
pop
jmp
popa
and
fwait
push
mov
jg
das
push
or
test
(bad)
scas
pop
sub
pmuludq
add
loopne
pusha
iret
jecxz
pusha
iret
jecxz
pusha
iret
jecxz
pusha
iret
jecxz
pusha
leave
and
pop
outs
(bad)
jnp
jnp
call
daa
std
mov
and
mov
loope
popf
or
sbb
arpl
mov
dec
dec
clc
sub
adc
mov
cli
repz
dec
and
pop
imul
fmulp
nop
fs
lds
and
cld
sub
cld
sub
jp
mov
or
es
inc
scas
xchg
mov
ret
pop
scas
mov
or
cwde
mov
aad
cmp
ror
and
jnp
clc
movs
lock
sti
mov
stos
pop
mov
call
lods
inc
and
icebp
lods
xchg
cli
loop
push
cwde
nop
sar
push
sbb
inc
mov
xchg
repz
mov
sbb
lahf
sbb
or
jg
push
mov
ss
aas
call
xchg
pop
and
jge
jmp
movs
scas
es
push
dec
mov
das
xor
test
aas
jmp
pop
mov
gs
mov
arpl
jo
pop
xchg
sar
aas
fistp
les
mov
fisubr
(bad)
push
sub
pop
dec
and
shl
mov
inc
dec
dec
imul
arpl
sbb
jb
sar
cwde
mov
xchg
jl
test
dec
outs
xchg
ins
pushf
xchg
sub
fsubrp
ins
lea
(bad)
(bad)
xor
daa
pop
aam
or
jne
cmp
push
push
jmp
cmps
(bad)
adc
ror
pop
fadd
jecxz
out
ds
sub
mov
stos
sbb
jecxz
jne
in
ss
mov
ret
addr16
jne
cmp
in
cmc
and
xor
pop
call
xlat
dec
push
out
pop
not
test
cmc
adc
mov
add
test
test
hlt
in
xchg
add
call
test
cmp
pop
mov
in
nop
inc
imul
or
cmp
xchg
and
fisttp
cs
adc
push
inc
shr
add
adc
inc
int
idiv
push
push
add
xchg
lods
jmp
aaa
popa
pop
mov
fdivr
jmp
cmp
xchg
out
repz
clc
lea
jae
dec
fild
cmps
sbb
adc
pop
cld
jb
scas
pop
fcomp
shr
test
nop
subps
adc
jne
or
clc
out
sahf
clc
cld
adc
cmp
int
call
int
fidiv
les
shr
rcr
adc
push
and
sub
inc
lahf
dec
loop
xchg
or
sub
mov
pop
jg
(bad)
cwde
(bad)
mov
into
and
push
jns
sbb
sahf
jge
xchg
sbb
aas
mov
jno
push
int
xchg
loop
data16
es
adc
xchg
and
push
sbb
pop
(bad)
mov
sbb
add
(bad)
push
cmp
sub
int
add
mov
and
inc
aas
dec
jnp
mov
cmps
and
xchg
mov
mov
mov
jo
add
enter
imul
jecxz
xchg
xor
sub
dec
mov
dec
xchg
data16
shr
shl
push
aam
sbb
xor
out
fistp
gs
and
mov
xchg
pop
ins
push
shr
inc
pop
push
cwde
jg
add
movs
jne
xchg
imul
nop
add
movs
and
jl
movs
jmp
pop
movs
fcompp
push
jge
sbb
les
aaa
or
data16
mov
cmp
inc
xchg
lahf
dec
and
in
fnstcw
xchg
loope
pop
adc
enter
sub
push
or
push
aam
jmp
dec
aam
mov
dec
std
mov
mov
(bad)
xor
jge
cmp
std
add
push
repnz
outs
repnz
dec
mov
loope
outs
aad
loopne
clc
fcmovnu
stos
lds
(bad)
or
fidivr
cmp
jmp
pop
lds
dec
rol
or
std
jns
(bad)
loop
mov
pop
push
push
fidiv
repz
iret
pop
push
mov
iret
scas
dec
sbb
test
jns
repnz
add
ds
inc
xor
cld
loopne
rcr
or
out
mov
(bad)
inc
pop
(bad)
push
(bad)
cmc
pop
rol
mov
xchg
jne
test
mov
test
test
mov
or
lods
(bad)
jo
leave
push
xchg
xor
sub
ins
xor
dec
fadd
test
(bad)
popf
lock
add
xor
mov
fcom
aam
mov
pop
mov
sub
push
xchg
xlat
mov
cdq
not
jno
and
ret
fwait
ret
and
cmc
jmp
xchg
ja
and
repz
add
cmp
mov
rol
bound
mov
mov
cld
sub
movs
ds
xchg
jns
and
cmp
jecxz
test
mov
pop
dec
mov
nop
aaa
xchg
mov
and
xchg
test
cmp
imul
xor
cmps
mov
icebp
pushf
and
aaa
sbb
pop
mov
pushf
inc
pop
les
out
test
dec
(bad)
mov
xchg
mov
ds
mov
push
loope
mov
div
mov
lods
jle
pop
dec
cmp
mov
jnp
inc
xchg
icebp
cs
jnp
rol
data16
js
popf
sbb
dec
mov
je
mov
sbb
jae
sub
or
inc
iret
adc
nop
push
cli
call
xor
sar
mov
xchg
cli
pop
mov
sub
adc
push
fs
outs
dec
stc
xchg
popa
aam
sbb
xchg
retf
jb
rol
and
(bad)
ins
sar
and
arpl
mov
std
dec
cmp
mov
mov
lds
xchg
xchg
daa
dec
mov
fwait
pop
(bad)
cmps
imul
jns
outs
mov
ja
das
mov
pop
gs
jo
test
pop
ficom
mov
mov
les
out
test
retf
(bad)
mov
xchg
leave
and
mov
mov
xchg
sar
cmps
sub
repz
mov
retf
pop
jo
push
xchg
mov
clc
ss
stc
jo
xor
leave
fwait
movs
sub
push
jge
push
mov
les
out
test
retf
(bad)
mov
xchg
leave
and
mov
mov
xchg
sar
cmps
sub
repz
xchg
mov
and
xchg
and
lods
mov
pop
jae
push
or
push
mov
idiv
in
mov
mov
pop
(bad)
pop
and
mov
pop
pop
pop
sub
movs
mov
ror
test
or
imul
jne
mov
int
pop
inc
inc
pop
push
test
out
inc
mov
cmp
jge
add
mov
movs
push
dec
test
(bad)
sub
and
xchg
mov
mov
sbb
sbb
shr
in
jbe
lea
cmp
cwde
ja
mov
pop
push
iret
sub
pop
mov
fstp
adc
push
iret
mov
(bad)
repz
lods
cmc
(bad)
fild
xchg
mov
mov
fmul
(bad)
sub
mov
je
inc
ins
dec
popf
retf
(bad)
outs
mov
outs
pop
imul
dec
or
pop
dec
sub
add
add
adc
fistp
pop
shl
pop
repz
jle
fidiv
sbb
and
inc
femms
xchg
push
aaa
addr16
jmp
sub
sub
aam
cmp
mov
fldcw
cwde
ret
scas
ret
mov
dec
push
outs
mov
inc
cli
mov
cmc
jle
ja
stos
mov
cmp
iret
add
(bad)
lahf
pop
xor
cmp
jl
sub
mov
mov
(bad)
cs
(bad)
retf
adc
adc
adc
jbe
and
(bad)
fidiv
lock
adc
cmp
int3
push
push
test
pop
bound
addr16
movs
fcompp
push
jge
sbb
les
aaa
or
inc
cmp
fwait
out
fwait
pop
ret
or
xor
in
(bad)
ds
pop
pop
or
xchg
bound
jl
jge
xchg
inc
je
adc
add
push
mov
rol
jne
nop
jge
stos
out
xchg
pushf
mov
xor
pop
adc
mov
cmp
movs
mov
cmp
into
scas
test
fwait
repz
rcr
mov
fdivr
jno
jl
rcl
ret
dec
push
ss
add
dec
lods
ins
xchg
out
inc
(bad)
imul
xchg
adc
popf
imul
sti
mov
call
movs
push
fldenv
jo
fistp
int
dec
adc
test
cdq
retf
dec
mov
repz
inc
jge
lea
mov
pop
inc
sbb
push
or
data16
stos
or
inc
sub
sbb
fadd
mov
adc
out
movs
jne
pop
adc
cmp
mov
dec
add
shr
dec
cmp
add
data16
dec
into
sub
push
arpl
push
call
movs
or
mov
inc
or
jmp
sar
jecxz
(bad)
(bad)
cdq
test
sub
(bad)
dec
sti
and
and
cmp
out
xchg
ret
sub
mov
push
sahf
and
add
(bad)
lods
nop
mov
mov
pusha
inc
jo
ja
mov
cmp
cmc
(bad)
jge
pop
je
retf
sbb
outs
xchg
movs
push
fldenv
addr16
jp
fisub
cmc
stos
(bad)
dec
or
fld
movs
xlat
xchg
imul
in
test
call
call
xchg
add
movs
sub
pop
mov
scas
adc
in
xchg
add
and
jno
cld
in
into
fwait
out
sar
mov
enter
xor
mov
jl
test
push
mov
cwde
add
jmp
mov
je
clc
adc
mov
and
shl
push
daa
das
inc
sti
inc
int
push
shr
or
fisub
out
pop
data16
sbb
imul
mov
nop
stos
pop
cdq
sbb
inc
cli
loope
add
aaa
dec
test
sbb
retf
int3
jp
mov
adc
lea
jp
mov
retf
xchg
xchg
popa
test
xchg
add
sbb
xor
and
push
mov
rol
pop
shr
adc
shl
xchg
loopne
lods
mov
out
and
lahf
fs
pop
out
mov
or
(bad)
xchg
cli
mov
mov
out
dec
outs
aaa
sbb
push
adc
aam
push
pop
jge
jae
aaa
dec
jmp
mov
add
arpl
test
shl
add
or
xchg
shr
sub
loope
xchg
add
lahf
jl
mov
ja
loopne
pop
in
(bad)
pop
mov
aad
lea
cmps
dec
cwde
cmp
fldcw
jle
(bad)
push
rcr
sub
or
and
add
xchg
jnp
sub
xchg
cmp
and
mov
int3
mov
movs
dec
movs
int3
fnstsw
repnz
dec
mov
sub
imul
xor
xor
adc
cld
pop
xchg
and
inc
lahf
dec
dec
daa
shl
or
jb
mov
xchg
pushf
icebp
ins
xchg
aad
cmp
data16
adc
shl
sbb
add
scas
push
push
movs
sbb
fwait
add
fcomp
outs
ins
test
and
add
mov
call
fs
repnz
in
cmp
cmp
mov
mov
jbe
retf
ret
or
dec
mov
sbb
arpl
and
enter
out
dec
les
(bad)
xor
mov
in
pop
cmps
shr
mov
mov
jmp
sbb
call
clc
lods
and
aam
popf
jbe
mov
inc
adc
(bad)
xor
inc
mov
mov
or
push
mov
(bad)
iret
mov
sub
popf
adc
mov
xchg
jecxz
aad
jb
sub
and
sub
in
mov
mov
mov
lods
in
jge
rcl
lds
clc
(bad)
loop
enter
fs
push
inc
cmp
cmp
mov
sub
in
mov
mov
mov
daa
jno
sti
cmp
adc
pop
(bad)
fimul
sahf
out
mov
xchg
stos
lea
mov
and
sar
(bad)
js
add
sbb
in
cli
push
fisubr
leave
fwait
push
fmul
cmp
adc
ror
jne
sub
mov
dec
mov
push
and
adc
add
sub
mov
mov
and
(bad)
aad
add
dec
(bad)
int
ret
clc
dec
(bad)
enter
push
add
in
lahf
test
sbb
lods
scas
dec
dec
jmp
sbb
inc
jno
dec
shl
mov
fmul
fwait
jge
addr16
das
cmps
mov
adc
xchg
sbb
out
test
movs
pop
outs
(bad)
mov
rol
shr
mov
(bad)
sbb
das
or
(bad)
(bad)
cmp
hlt
aaa
sbb
(bad)
jl
adc
mov
add
je
push
loope
sar
bound
icebp
sub
pusha
push
icebp
cmp
jnp
in
mov
inc
mov
sbb
or
(bad)
out
xor
in
lahf
outs
mov
fld
cld
jmp
xor
test
push
add
inc
loop
pusha
cmp
xor
gs
lea
pop
loopne
cwde
ins
cli
mov
pop
cmp
pop
test
adc
sub
pop
retf
xor
das
mov
aad
add
inc
mov
loop
jne
adc
in
aam
aad
sbb
leave
retf
cdq
enter
nop
test
test
lods
pusha
cmps
(bad)
enter
dec
lods
test
test
and
fs
std
or
nop
stos
add
mov
fwait
sahf
sub
rcr
mov
lds
call
pop
int
xor
add
adc
test
leave
cmp
jecxz
jle
fstp
pop
(bad)
call
fnstenv
cmp
es
xchg
ror
imul
imul
iret
mov
repz
and
repnz
stc
mov
adc
mov
xor
add
out
retf
gs
movs
sub
inc
(bad)
das
cmps
mov
mov
sbb
arpl
movs
or
mov
sbb
inc
shl
xchg
add
call
aad
pop
int
pop
sbb
add
pop
repnz
fnstsw
or
jecxz
mov
jp
cmps
or
and
jge
icebp
mov
call
js
dec
sbb
add
xchg
test
mov
add
les
imul
sbb
imul
sbb
imul
sbb
imul
sbb
imul
sbb
jno
stos
into
add
adc
daa
jo
xchg
add
mov
jecxz
mov
leave
dec
movs
cli
loop
sar
mov
sbb
(bad)
cld
aam
shr
call
push
mov
mov
or
jne
pop
dec
shl
les
aaa
sbb
xchg
mov
lock
add
loopne
xchg
add
in
xchg
inc
data16
add
lods
push
inc
out
(bad)
test
push
inc
mov
enter
in
imul
aad
push
je
xor
(bad)
(bad)
pop
clc
lock
ins
lods
out
pop
cdq
bound
scas
pop
ficomp
xchg
lea
ret
sbb
outs
and
popa
(bad)
jp
jmp
in
xchg
mov
loope
add
jo
loope
popaw
push
dec
jmp
call
add
adc
test
sahf
push
jb
sbb
pop
rol
lods
aas
repnz
(bad)
inc
cli
loop
jns
sbb
int3
sub
popf
lods
mov
addr16
and
add
imul
out
xchg
mov
scas
test
(bad)
cdq
sbb
ret
and
retf
movs
in
leave
push
cmp
ins
adc
aaa
sbb
int3
pop
sbb
mov
sbb
aaa
repz
pop
adc
int
sbb
cmp
retf
fbld
sbb
imul
mov
jbe
lock
popf
loopne
and
add
jno
int3
push
mov
popa
lea
jno
rol
out
mov
out
in
pop
add
jae
fild
xchg
jecxz
dec
xchg
not
lods
push
leave
sbb
push
jmp
arpl
mov
cmp
pop
mov
mov
loopne
push
sub
(bad)
or
add
jmp
fld
mov
leave
rol
push
xchg
retf
push
aam
fstp
nop
and
xchg
mov
dec
jb
mov
out
in
push
add
imul
or
mov
jns
adc
shr
cmps
sub
jge
outs
loopne
fcmovnu
mov
ret
dec
cmp
cmps
mov
jae
sub
add
fbld
dec
or
gs
mov
fnsave
je
or
stos
push
loope
arpl
pushf
fwait
add
jns
mov
pusha
bound
mov
jg
out
inc
sub
outs
jp
call
out
mov
and
push
mov
mov
xor
xlat
sub
fdiv
xchg
jbe
cmp
xor
dec
push
lahf
or
fdiv
xchg
jbe
cmp
xor
mov
adc
call
dec
push
lahf
or
fdiv
xchg
jbe
cmp
xor
dec
push
lahf
or
fdiv
xchg
jbe
cmp
jmp
dec
push
sahf
js
lods
pavgw
mov
jb
push
mov
ror
js
lods
pavgw
mov
jb
pop
cmp
retf
jl
push
inc
sti
fcomp
inc
fwait
cs
dec
out
xchg
ret
pop
sahf
mov
sub
cs
dec
out
xchg
ret
mov
fbstp
cmp
or
stos
add
xchg
dec
(bad)
pop
mov
inc
pop
call
int3
lods
fs
out
and
add
push
xchg
imul
out
(bad)
in
sbb
sbb
ins
mov
out
pop
es
icebp
outs
shr
leave
(bad)
or
add
cs
hlt
or
inc
pop
or
(bad)
popf
in
lea
adc
fwait
loopne
cld
ja
xlat
xchg
jmp
ss
add
xchg
cwde
and
inc
mov
inc
jmp
cmps
inc
vaddsubps
push
xchg
sub
je
retf
and
xlat
xchg
mov
enter
jae
pop
out
pop
mov
aaa
sbb
mov
push
fdivrp
movs
xor
stc
outs
imul
push
iret
jecxz
ins
(bad)
(bad)
adc
icebp
add
retf
sbb
nop
pop
stos
xchg
arpl
sub
pop
(bad)
cmc
xor
mov
mov
cld
popf
adc
fwait
xchg
cmps
mov
adc
pop
icebp
cs
stos
xchg
aam
mov
add
hlt
data16
les
out
pop
loope
jmp
dec
jb
(bad)
jp
test
movs
push
lods
fsub
loopne
adc
xor
cmp
retf
fbld
pop
sahf
mov
jle
xchg
shr
jge
popa
mov
pop
aad
out
pusha
aam
mov
and
pop
pop
and
add
call
jl
add
xchg
sbb
push
mov
xor
and
adc
jg
add
mov
mov
add
push
push
icebp
sahf
mov
jmp
popf
xchg
lock
in
into
dec
shl
mov
adc
iret
test
push
movs
popf
loopne
push
sar
and
repz
xchg
add
or
mov
lock
daa
into
pop
mov
imul
dec
rol
in
cdq
sbb
loopne
xchg
add
call
adc
out
rol
arpl
adc
and
push
ret
inc
shr
add
or
or
and
scas
jnp
loope
inc
and
push
dec
and
dec
lods
cmp
add
xlat
test
pop
mov
call
xchg
pop
not
sub
shl
push
loop
ins
inc
icebp
imul
and
(bad)
sub
mov
jecxz
popa
jnp
cdq
fs
xlat
(bad)
or
test
jne
stos
rcr
test
push
ret
bnd
test
pop
mov
in
movs
mov
pusha
test
fiadd
mov
adc
push
mov
les
mov
sub
inc
mov
cwde
pusha
jmp
aas
(bad)
jmp
adc
fist
pop
jmp
xchg
xor
adc
push
in
adc
jbe
(bad)
(bad)
sti
retf
outs
mov
add
fdivr
add
inc
sbb
or
cmp
add
and
push
xchg
sti
enter
enter
push
pop
push
loope
jp
jo
fidivr
sub
or
lods
dec
pop
loop
dec
dec
call
jmp
and
mov
daa
(bad)
push
mov
lahf
jmp
adc
data16
or
ins
dec
mov
nop
mov
cmp
mov
fidivr
jno
out
and
jo
xlat
adc
add
sbb
pop
stc
call
dec
push
push
or
icebp
sti
retf
jae
scas
mov
sub
jmp
sar
push
push
aad
retf
push
jle
add
add
clc
xchg
popa
mov
fst
cmp
dec
jo
lahf
pop
sbb
cmp
shr
dec
fist
add
mov
aas
push
mov
mov
mov
push
jno
push
mov
cld
cmps
lods
mov
les
inc
(bad)
push
leave
xor
pushf
adc
(bad)
movs
mov
mov
mov
mov
mov
mov
sub
fst
test
fst
test
fst
test
fst
test
fst
test
fst
test
fst
test
in
nop
imul
sbb
xchg
add
jecxz
or
ror
sub
add
shl
push
sti
sub
inc
sbb
push
cmp
xchg
sbb
imul
mov
inc
or
stos
xchg
cdq
xchg
or
adc
dec
jne
pusha
call
push
call
ss
adc
or
mov
mov
loop
out
lahf
pusha
or
mov
sub
cmp
aad
cs
push
inc
pop
lods
scas
cmps
dec
inc
adc
ds
inc
lods
and
xor
pop
(bad)
cmp
sub
add
call
mov
sbb
adc
daa
cmp
mov
fsubrp
cs
outs
sub
mov
cmp
dec
mov
xlat
dec
mov
cmps
or
push
ret
xchg
push
add
sti
mov
stos
push
push
outs
mov
sahf
ja
loope
jmp
pop
sub
test
add
xchg
pusha
call
and
fistp
mov
xor
mov
push
pop
xchg
leave
pop
mov
push
scas
lock
rcr
(bad)
pop
int3
inc
fsubr
inc
(bad)
lock
pop
enter
lods
cmp
jg
stos
and
pop
and
aam
not
xlat
call
fmul
push
pop
xchg
leave
pop
add
loope
and
bound
leave
mov
push
xor
(bad)
mov
lods
add
rol
out
push
add
in
add
movs
ins
xchg
(bad)
adc
mov
ins
xchg
ret
push
sbb
and
in
xchg
add
std
fbstp
ror
mov
popf
inc
jns
test
and
push
ss
fild
dec
imul
sar
mov
sub
pusha
push
mov
sbb
stos
jecxz
inc
and
test
or
push
adc
xor
mov
xchg
and
outs
fisttp
fs
push
inc
je
xchg
sbb
cmp
sbb
xchg
ins
and
out
fsub
test
xor
xchg
push
dec
or
nop
and
xchg
cmp
sub
ins
fdiv
frstpm(287
fsubr
push
cmps
jno
scas
push
mov
ficomp
sbb
fcom
jle
jno
cmps
mov
leave
mov
stc
call
push
cs
ficomp
into
repz
cmps
inc
fs
pushf
ds
fld
std
cmp
sub
jle
sub
push
scas
ret
icebp
or
fiadd
pop
jo
rcl
movs
pushf
es
cmc
mov
mov
and
mov
xchg
shl
sub
test
lahf
sbb
nop
rcl
imul
mov
fsubr
addr16
push
leave
jmp
sbb
int
push
cmp
leave
cdq
mov
nop
and
imul
cmp
fdivr
inc
cmp
test
sbb
loope
inc
cld
xchg
(bad)
mov
movs
adc
stc
mov
xchg
cs
jno
cmp
xchg
mov
push
xchg
test
dec
outs
or
leave
xor
repnz
sahf
test
pusha
retf
mov
sub
adc
loope
cmps
cdq
fwait
cmps
arpl
daa
xlat
pop
(bad)
loopne
and
call
popa
imul
xor
aas
cmp
and
push
dec
mov
out
sbb
pop
xlat
je
lock
enter
mov
sbb
push
inc
je
rcl
mov
fnstsw
rcr
adc
mov
test
lods
or
cli
jbe
je
mov
xchg
ins
aas
and
outs
outs
pop
push
push
dec
xor
(bad)
dec
pop
div
retf
inc
mov
loop
mov
movs
aas
mov
fnstcw
push
test
sbb
dec
add
adc
pop
or
lea
test
loopne
ja
mov
mov
fist
xchg
add
adc
aas
mov
lahf
xchg
mov
add
or
paddb
sti
(bad)
lahf
sbb
push
sub
mov
push
sbb
bound
sub
iretw
adc
jecxz
pop
in
sbb
xlat
xchg
dec
mov
mov
arpl
jl
cmp
(bad)
call
cld
(bad)
add
pop
test
ss
cmps
arpl
arpl
sub
mov
push
aad
cmps
or
(bad)
xor
xchg
lds
add
daa
sub
sub
push
loope
mov
mov
test
loop
mov
js
lock
jo
ficomp
dec
mov
imul
shr
es
shl
in
mov
jge
and
pop
mov
inc
stos
mov
iret
mov
adc
push
fwait
pop
call
add
sbb
add
jmp
jge
mov
dec
aad
aas
mov
ror
pop
sahf
xchg
or
jnp
test
mov
fwait
cmp
cmps
loop
sbb
es
out
out
mov
scas
fdivr
jecxz
mov
iret
mov
push
neg
jo
in
arpl
inc
mov
icebp
out
sub
call
sub
addr16
loopne
dec
xchg
fcom
cli
and
or
xor
ss
nop
push
or
retf
shl
scas
lahf
in
outs
retf
ficom
ret
adc
test
pop
mov
rcl
imul
mov
in
out
jb
popa
(bad)
adc
xor
sti
inc
xchg
mov
not
mov
(bad)
sub
(bad)
cmps
push
fwait
sub
sbb
adc
adc
rep
pop
adc
leave
lahf
jl
gs
ja
mov
xor
add
call
pop
retf
dec
loop
jmp
aam
rol
leave
adc
imul
and
retf
mov
imul
push
lods
mov
retf
lock
or
in
inc
jno
xchg
lahf
pop
lea
scas
pushf
aaa
es
lds
and
mov
call
xchg
mov
pop
pop
cwde
cli
loop
xchg
sbb
and
aas
loopne
xchg
push
cli
(bad)
aam
and
add
sub
in
jmp
mov
cmovbe
mov
mov
lds
out
addr16
call
xchg
rcl
out
and
mov
jge
jmp
arpl
and
cmps
cmp
mov
sub
mov
in
jl
ins
iret
loope
stc
mov
in
gs
addr16
jbe
out
rcl
and
aas
and
mov
mov
jmp
xchg
imul
rol
mov
mov
aad
(bad)
leave
jecxz
pop
cmp
and
add
hlt
push
int
aas
and
rcr
lds
in
pop
call
and
loope
pop
and
mov
mov
loopne
imul
popa
test
add
sbb
jbe
lea
and
mov
jne
enter
mov
mov
faddp
in
dec
push
pop
sub
fiadd
pop
dec
cmp
and
loope
add
es
stc
mov
xchg
repnz
xor
sbb
loope
sub
dec
gs
push
stos
mov
aad
(bad)
loopne
pop
adc
jbe
inc
add
sbb
les
or
mul
sub
jmp
ret
jmp
leave
sub
push
repnz
ror
call
xchg
std
mov
cdq
add
loopne
or
in
in
or
hlt
cld
test
hlt
ror
rcr
mov
cmp
sar
inc
lods
mov
test
popa
test
rcl
xchg
or
hlt
clc
and
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
sahf
add
movs
fwait
add
in
rol
loopne
popf
or
loopne
xchg
add
call
lea
hlt
hlt
mov
jmp
imul
call
call
xchg
add
call
test
jmp
mov
mov
movs
or
in
test
add
inc
(bad)
add
call
mov
push
mov
call
xchg
push
in
pop
ret
cdq
iret
pop
cmp
cld
add
clc
push
add
call
test
cmp
cdq
aad
(bad)
in
fidivr
xchg
ret
xor
(bad)
adc
xchg
add
call
loopne
add
ret
adc
fmul
test
enter
pop
push
xchg
in
loopne
xchg
add
call
outs
push
ds
push
lahf
push
(bad)
dec
fcom
sub
or
xchg
add
call
movs
inc
mov
(bad)
lock
scas
and
inc
xchg
fisub
loopne
xchg
add
mov
jmp
sahf
ja
mov
test
xor
jge
cmp
je
aam
jecxz
xchg
icebp
repnz
into
enter
movs
adc
ror
not
sbb
pop
mov
dec
and
inc
or
ss
call
gs
out
xchg
scas
sbb
lea
into
in
adc
les
popa
mov
jbe
jmp
neg
mov
and
sar
mov
fs
test
cdq
inc
out
xor
out
mov
sub
xchg
test
push
inc
add
mov
inc
dec
inc
popf
das
mov
lock
mov
in
inc
and
popa
(bad)
mov
out
(bad)
daa
cmps
test
jne
add
pop
push
pop
into
sbb
jge
mov
inc
push
xor
xor
stos
sbb
adc
cdq
push
fiadd
outs
sub
(bad)
xor
repz
mov
(bad)
sub
call
popa
mov
sub
xor
aad
cmp
mov
push
push
repnz
(bad)
pop
sti
sub
jmp
sbb
push
cli
push
push
add
sub
sub
add
sbb
(bad)
pushf
sbb
cmc
inc
ins
(bad)
mov
cmps
pop
mov
pop
jg
inc
in
daa
or
push
cmps
cmps
out
mov
xor
pop
cdq
addr16
push
stos
xchg
or
mov
call
push
into
movs
cmp
fcmovnb
lahf
mov
jbe
cmp
or
and
mov
icebp
imul
icebp
add
aam
sti
or
inc
inc
jo
rcr
dec
in
xchg
aaa
ss
(bad)
or
ror
ss
in
push
add
xchg
call
(bad)
aas
aas
inc
jle
outs
aad
fild
retf
inc
(bad)
fist
cmp
jecxz
shl
clc
dec
(bad)
mov
hlt
inc
xchg
fst
ret
adc
inc
jle
pop
fisub
cmps
iret
sub
push
ins
jg
jmp
pop
idiv
lods
xor
nop
hlt
(bad)
stos
test
div
mov
inc
mov
(bad)
push
pop
int
sub
inc
mov
into
shl
lods
mov
xor
pop
mov
pop
scas
call
ret
dec
loopne
inc
mov
in
scas
pop
enter
dec
test
and
mov
mov
mov
daa
test
xchg
test
outs
add
into
ficomp
mov
add
xchg
add
into
cmp
cmps
sahf
pop
mov
mov
add
pop
test
jmp
cmp
pop
push
xor
call
js
imul
sti
xchg
popf
mov
loopne
adc
in
or
loopne
test
mov
ror
mov
sbb
shr
add
cld
popf
cmc
xchg
cmp
xor
sbb
adc
mov
out
inc
cdq
lods
outs
je
xor
add
shl
and
push
mov
lods
inc
xchg
dec
std
or
fldcw
add
inc
mov
pop
loope
repz
mov
or
sbb
mov
(bad)
jg
loop
sub
rol
add
mov
jg
(bad)
jmp
cmp
hlt
mov
sub
lea
jecxz
popa
xor
ret
and
sbb
fisubr
in
jmp
mov
jmp
lock
lods
mov
cmp
std
cmp
push
jb
into
lea
push
mov
adc
mov
fmul
jmp
sub
inc
leave
add
rep
fisubr
adc
repnz
jbe
jecxz
gs
add
sbb
mov
push
or
add
inc
sub
cmp
or
test
inc
leave
xor
add
xchg
adc
dec
xor
loop
adc
push
jp
arpl
std
xor
mov
int
(bad)
arpl
cmp
fidivr
loope
jmp
xchg
dec
(bad)
pop
jo
jbe
lds
rcr
push
(bad)
and
push
mov
les
jbe
inc
dec
sbb
(bad)
mov
not
adc
inc
(bad)
repnz
pop
aad
in
repz
add
sub
int
loop
mov
(bad)
lds
add
jno
pop
xor
jge
(bad)
dec
imul
out
dec
test
push
outs
jecxz
cmp
xchg
xchg
xor
sbb
dec
pop
pop
fucomip
call
fs
push
out
xchg
lock
sub
leave
je
sub
popf
repnz
xchg
test
sub
mov
popf
mov
imul
or
rcr
pop
dec
xor
xchg
iret
pop
mov
iret
call
cmp
xor
inc
or
enter
jmp
js
int
dec
cmp
sub
mov
or
out
jmp
xchg
push
cdq
add
xor
adc
and
idiv
sahf
cmp
sti
sub
repnz
sub
out
cdq
int
mov
cmp
iret
bound
icebp
or
mov
(bad)
sti
das
adc
push
dec
pop
xchg
xor
(bad)
cmp
xchg
mov
mov
adc
pop
and
inc
xlat
or
mov
dec
out
and
add
(bad)
lock
jle
(bad)
into
mov
(bad)
pop
imul
ror
xchg
mov
dec
jecxz
jle
dec
adc
xor
mov
xor
das
jle
mov
mov
bound
xchg
pop
and
ja
jmp
sahf
mov
pop
xchg
mov
cli
sub
xlat
push
mov
sub
jbe
add
dec
mov
pop
push
outs
mov
mov
cmps
mov
fdiv
dec
jne
jnp
cmps
test
test
(bad)
jg
jmp
pushf
mov
adc
xor
test
data16
xor
imul
cmp
or
push
jmp
aam
push
ror
repz
je
aad
sub
test
fnstenv
push
rcl
jne
cli
sub
pop
int3
lods
bound
cmovl
add
jg
sbb
push
xchg
mov
fwait
sbb
adc
fs
and
das
sti
sub
aaa
nop
pop
xor
mov
repnz
mov
test
or
out
or
(bad)
push
verr
inc
cdq
add
das
xchg
cwde
pop
mov
test
adc
mov
push
lds
clc
mov
and
pop
inc
sbb
hlt
jnp
dec
sti
cmp
xchg
out
cmc
cmp
mov
sub
cmps
arpl
popa
jge
icebp
mov
dec
push
sbb
jle
dec
das
mov
push
sti
data16
cli
mov
cmp
add
mov
cmc
mov
inc
jl
pop
pop
dec
cmp
pop
inc
jmp
sete
loopne
rol
call
cld
mov
add
call
xchg
inc
lock
or
fs
(bad)
xchg
inc
and
test
int
loope
push
stos
popa
push
or
adc
xlat
fdivr
dec
jg
and
jp
mov
sbb
jae
inc
xchg
pop
repz
ins
leave
ret
das
mov
mov
xor
mov
lods
imul
jge
jno
cmps
jge
test
in
dec
js
cmp
dec
popa
mov
and
cwde
mov
add
ins
mov
inc
pop
pushf
push
cmp
add
cmp
mov
add
cdq
dec
dec
(bad)
sbb
jl
xor
lea
arpl
in
daa
or
cmc
arpl
inc
dec
or
mov
pusha
scas
cli
iret
int
adc
jno
popf
pop
sbb
(bad)
mov
int
mov
adc
icebp
cdq
mov
daa
xor
call
push
(bad)
frstor
inc
fadd
fld
jmp
shr
test
dec
add
jns
and
es
dec
movs
and
test
sub
pop
xchg
scas
add
aam
(bad)
inc
dec
add
stc
mov
sbb
mov
cmp
adc
aaa
inc
or
aas
push
mov
sbb
xlat
and
adc
int3
aad
cld
and
dec
push
shl
mov
mov
sub
ja
xchg
lea
mov
outs
add
pop
xchg
neg
and
cmc
into
push
jb
sub
aas
sub
xor
push
stos
stos
fild
xchg
imul
and
fs
loope
fisub
sbb
xchg
and
fidivr
cs
rcr
iret
push
sub
movs
or
mov
fst
fdivr
fdivr
adc
push
pop
outs
cmp
push
jmp
or
inc
out
cmovae
loopne
mov
cmp
icebp
fiadd
shl
(bad)
stc
ret
cmp
sub
in
fidivr
cdq
cmp
retf
les
retf
or
call
adc
jnp
por
js
mov
jno
dec
shl
std
dec
sahf
dec
frstor
cmp
mov
ss
data16
push
push
sub
(bad)
and
ins
popf
pop
push
das
and
jecxz
cmc
cs
sub
aad
mov
idiv
aad
and
fmul
mov
loope
scas
gs
and
add
pcmpeqw
movs
fs
cmovno
rol
aas
push
push
(bad)
(bad)
inc
test
clc
mov
fnsave
jo
das
and
cmp
mov
lds
cmc
lds
lea
cmp
jg
icebp
das
cmp
ins
or
rcl
aaa
ret
push
sub
sbb
cmps
jb
sbb
xor
push
sub
push
leave
repnz
mov
sbb
movs
jae
in
mul
push
adc
dec
movs
aad
mov
imul
sub
rcl
cmp
jbe
adc
mov
pop
adc
dec
dec
mov
push
inc
or
inc
ds
pop
mov
add
jmp
xor
ror
pop
cmp
add
addr16
mov
cmps
sbb
or
shr
inc
adc
pushf
inc
add
jmp
adc
cmp
push
jmp
cmp
in
leave
sub
mov
adc
in
sub
push
lahf
(bad)
mov
add
enter
cwde
mov
adc
rol
inc
leave
push
ret
mov
popf
push
or
add
mov
dec
cmps
outs
mov
nop
mov
xor
dec
xchg
inc
js
cmp
stos
test
movs
(bad)
and
lock
add
mov
cli
retf
outs
aam
lods
div
(bad)
js
out
cmp
pop
ja
mov
add
jge
jmp
jae
mov
rol
stos
jbe
lods
mov
xor
cmp
inc
rol
lods
inc
mov
mov
das
adc
pusha
adc
bound
cmp
or
mul
or
xchg
pushf
repnz
jg
add
test
pusha
mov
sbb
mov
jne
add
pop
pusha
adc
or
dec
sub
sbb
shl
test
imul
sahf
jns
inc
pop
inc
mov
mov
(bad)
movs
or
ds
loop
dec
xchg
lods
(bad)
int
sub
aaa
and
mov
push
aad
sub
push
dec
dec
and
add
repnz
cmps
jo
bound
push
push
mov
and
ja
jnp
fnsave
aaa
cmp
movs
fiadd
int
aam
jp
out
data16
(bad)
neg
xchg
pop
sbb
stos
add
xor
and
dec
cmc
sahf
push
fwait
sub
es
nop
add
sbb
push
dec
mov
stc
cwde
xlat
push
fistp
ins
xchg
scas
sbb
fisub
les
mov
out
push
push
mov
jl
inc
(bad)
pusha
jnp
mov
daa
test
adc
into
xchg
call
je
push
fmul
into
jmp
int
lock
fstp
das
cdq
fiadd
loop
xchg
mov
and
xchg
mov
sbb
mov
ja
popa
inc
xchg
scas
mov
xchg
cdq
mov
lock
adc
jge
xchg
sbb
mov
cmps
shl
add
or
pop
pop
push
mov
and
aad
stc
test
xor
(bad)
movs
sar
adc
pop
rcl
lods
nop
xchg
dec
sbb
mov
popa
nop
lock
jle
js
inc
pushf
ret
mov
(bad)
mov
lea
sbb
jo
jl
sub
cmp
and
sub
loope
mov
mov
and
mov
int
les
jnp
mov
mov
inc
es
ficom
mov
jmp
lahf
ficom
sti
mov
sub
pop
iret
les
inc
fs
bound
rcr
retf
(bad)
pop
xchg
(bad)
outs
outs
mov
lahf
test
mov
out
dec
push
bnd
sbb
movs
adc
push
loopne
rol
in
popf
or
in
call
xchg
add
lock
xchg
inc
fs
sbb
and
popf
dec
imul
cwde
or
adc
sbb
gs
pusha
fcom
xor
pop
xor
lock
loope
pop
push
(bad)
push
imul
scas
mov
adc
jb
dec
ds
repnz
jl
mov
lods
ficomp
shl
aaa
dec
test
mov
or
mov
mov
sbb
ja
push
inc
dec
bnd
lea
mov
(bad)
mov
pop
clc
ins
mov
fisubr
push
cmps
cli
(bad)
mov
and
ja
outs
sub
ins
add
xchg
ret
adc
mov
popa
out
loope
mov
xor
movs
cmps
mov
ret
shl
rsm
scas
sbb
aam
gs
fwait
ret
in
mov
jbe
out
dec
or
shl
sbb
pop
push
ret
pop
push
jge
jecxz
in
hlt
xchg
gs
rol
dec
jb
fcomp
repz
ret
out
jmp
into
dec
xor
ds
pop
lahf
scas
pop
cdq
and
popa
mov
ins
add
(bad)
repz
loop
iret
enter
rcl
test
es
jne
int3
pop
les
bound
shl
add
cmp
pop
cmp
pop
shl
sub
fs
sub
mov
xchg
jp
pop
xchg
ret
jg
gs
ja
pushf
call
test
lahf
das
clc
mov
(bad)
cmp
push
aaa
xchg
add
xchg
pushf
sar
daa
cli
gs
dec
jecxz
imul
lods
dec
mov
ss
sub
rcr
xchg
scas
adc
cmps
enter
popf
int3
sti
sbb
or
sub
daa
dec
js
out
jl
sub
jo
push
mov
pop
test
sahf
inc
bound
sar
adc
push
jno
mov
sbb
jp
inc
repz
cwde
xor
fistp
leave
mov
sub
iret
mov
outs
push
jmp
je
pop
iret
or
arpl
mov
mov
cmp
ret
sar
sbb
or
jmp
ret
mov
pop
fisubr
dec
cmp
mov
mov
jb
or
cld
mov
sbb
pushf
mov
sbb
cmps
push
jae
inc
and
aaa
clc
cwde
and
push
pop
cmp
test
mov
cmp
dec
mov
sar
inc
cli
mov
mov
sbb
bound
rcr
xor
add
daa
(bad)
popa
clc
push
add
xchg
jg
mov
outs
lods
pop
repnz
(bad)
push
lds
shl
ret
cmp
sub
stc
nop
push
sbb
outs
and
mov
mov
scas
push
pop
mov
(bad)
rol
ret
scas
loopne
jns
add
aas
movs
jae
mov
xchg
call
cwde
retf
sbb
retf
call
push
daa
mov
into
jae
inc
retf
jmp
push
sub
or
lds
and
mov
xchg
sbb
pop
jae
cmp
cmp
sbb
mov
sbb
or
jno
gs
shl
cmp
mov
sbb
push
into
lods
(bad)
aam
sbb
cmp
adc
inc
push
call
mov
dec
or
jo
mov
jecxz
xchg
or
loope
inc
inc
fbld
pop
enter
fidivr
pop
xchg
or
mov
xchg
mov
data16
xor
pop
xor
gs
push
pop
stos
dec
adc
and
mov
and
pop
enter
push
or
dec
ins
out
mov
and
movs
(bad)
cmps
mov
rol
xor
jns
mov
cmp
lea
outs
pop
xor
and
add
hlt
xchg
add
(bad)
mov
xor
adc
inc
and
scas
adc
mov
cmps
ficomp
sti
jne
daa
add
repnz
ror
dec
push
or
xchg
cwde
outs
std
mov
(bad)
repnz
xchg
sub
pop
mov
push
outs
clc
xor
in
sbb
inc
jne
and
mov
inc
outs
enter
aas
jnp
jg
mov
mov
mov
in
sbb
call
aad
add
mov
xor
inc
jg
jmp
mov
std
cmp
push
pop
sub
daa
call
int
retf
lahf
mov
sub
dec
adc
(bad)
push
inc
mov
or
int3
mov
pop
pusha
cwde
jns
fidivr
mov
jp
dec
jle
xchg
stc
int
outs
ss
fcom
inc
jp
cmp
stc
pop
cld
das
cmp
rol
cwde
or
xchg
cmp
cmp
sub
xor
sub
test
rcr
les
data16
js
jae
(bad)
push
inc
xchg
push
mov
(bad)
lea
mov
pop
rcr
cdq
mov
pusha
test
jb
jle
retf
mov
pop
xchg
mov
mov
jo
test
mov
ret
mov
inc
retf
(bad)
xchg
adc
pop
sub
gs
test
fcomp
dec
push
out
mov
jmp
icebp
push
ss
fnstsw
cmp
cmp
jbe
daa
or
add
mov
ins
and
ja
adc
add
xor
mov
jmp
jne
inc
inc
dec
sbb
push
xchg
mov
ins
sub
xchg
icebp
lods
inc
int
jecxz
or
mov
and
sbb
lock
jg
cmp
pop
sub
jae
push
xchg
dec
dec
push
push
imul
leave
inc
aaa
int
fcomp
aad
loop
data16
mov
out
cmp
mov
or
call
pusha
hlt
push
dec
sbb
push
cmp
sbb
inc
movs
outs
cli
cmps
imul
ja
frstor
mov
mov
jp
inc
inc
fisubr
cmp
mov
pop
inc
sti
push
mov
pop
rol
sbb
or
xchg
in
sbb
les
pop
inc
fnstcw
imul
inc
pop
ror
inc
clc
sti
push
ret
push
cmp
cli
cdq
inc
jp
push
(bad)
dec
sub
cwde
lea
sub
xor
js
call
sbb
inc
je
aam
aaa
retf
cmp
sbb
test
js
les
cmps
shl
(bad)
xor
call
dec
imul
jae
cmps
cli
data16
inc
pop
pop
ret
jbe
push
je
lock
or
cli
push
imul
mov
sub
int3
xor
lods
jnp
leave
addr16
into
mov
or
and
clc
outs
cmp
fld
(bad)
or
js
cmp
test
xor
loopne
mov
sub
lods
mov
jae
shl
mov
mov
mov
sub
xor
jbe
or
push
test
rol
pop
push
mov
sbb
cmps
ja
pop
mov
jl
pusha
in
dec
adc
(bad)
push
imul
div
and
sub
(bad)
cmps
aad
retf
inc
mov
xor
das
add
mov
mov
xlat
hlt
out
stc
fst
pusha
jno
ret
cmp
and
mov
inc
mov
xchg
add
xchg
or
mov
sti
lock
sub
jg
and
hlt
mov
cmps
fstp
dec
mov
jbe
gs
xchg
std
jns
cli
xchg
xchg
and
dec
cld
dec
inc
push
xor
and
movs
fwait
(bad)
lock
into
sar
les
movs
mov
cmps
call
fmul
icebp
and
jmp
mov
out
adc
ins
(bad)
mov
mov
push
xchg
xchg
adc
int
idiv
(bad)
shr
mul
push
jnp
les
cmp
ss
sub
or
and
sbb
aas
cmc
mov
sbb
xchg
dec
mov
cmp
pop
sbb
push
call
mov
xchg
mov
sahf
aas
adc
out
fild
xor
jmp
mov
mov
fucomi
retf
js
inc
mov
ins
fcom
movs
jo
in
or
repz
jmp
popf
or
ds
ret
(bad)
enter
adc
in
bnd
das
cmp
lock
push
xor
cs
jecxz
xchg
scas
cmps
jmp
and
sub
xlat
mov
ds
in
popf
xor
jl
cmp
jns
cld
sbb
mov
mov
adc
out
outs
adc
call
imul
xor
call
push
loope
inc
movs
fmul
out
jno
lods
test
out
cmp
jne
sbb
and
shl
movs
idiv
mov
add
(bad)
pop
add
and
cmps
push
int3
ret
dec
lods
adc
test
jae
xor
jb
xor
or
aam
call
loopne
adc
loopne
xchg
add
test
test
sub
inc
gs
adc
in
lds
push
push
push
dec
jmp
popa
imul
xchg
add
adc
push
dec
shl
add
xchg
js
sar
mov
(bad)
mov
gs
and
mov
mov
sbb
xchg
rep
inc
das
sbb
cmp
ret
shl
jb
iret
ins
shr
mov
aaa
ret
or
leave
ja
je
or
sbb
arpl
out
shr
inc
mov
jle
in
jge
xor
jo
inc
dec
out
mov
adc
in
int
and
in
pop
shl
xchg
cmp
rol
push
and
inc
icebp
mov
stc
out
mov
push
nop
add
adc
jge
loopne
sub
push
movs
ret
or
push
pop
scas
push
push
test
jnp
xchg
push
in
out
sub
scas
jno
cmp
sbb
and
sub
push
jmp
and
sub
mov
adc
mov
sbb
test
lahf
je
(bad)
pop
adc
sub
dec
push
sub
mov
mov
(bad)
(bad)
hlt
jmp
loop
sub
and
xchg
test
fs
hlt
xchg
adc
cmp
test
int3
mov
jp
mov
xchg
pop
push
or
and
js
and
pop
push
dec
arpl
cmp
out
and
xor
out
icebp
sub
scas
iret
jmp
fsub
xrelease
es
and
and
sbb
add
xchg
inc
cmp
test
cmp
add
cmp
mov
dec
ins
pushf
pop
cmp
jge
and
push
leave
fiadd
push
or
adc
mov
rcr
repz
loope
out
cli
into
(bad)
push
jg
mov
cmp
lock
dec
jns
sub
dec
int3
mov
into
push
mov
bound
dec
jnp
cld
jno
xlat
xlat
pop
fcom
push
jne
push
fisub
inc
call
push
add
shr
sbb
jl
add
outs
mov
test
or
mov
icebp
pop
daa
and
pop
cwde
mov
xlat
sub
addr16
std
sbb
push
fimul
inc
std
xchg
hlt
es
push
xor
adc
mov
fmul
(bad)
sub
xor
mov
pop
test
mov
std
xor
xor
fld
mov
xchg
jbe
stc
popa
lock
or
pop
xor
mov
rol
mov
or
stos
sub
and
imul
ds
add
cmp
dec
stos
icebp
into
and
in
and
xlat
(bad)
mov
jecxz
out
mov
xchg
cmps
cwde
pop
adc
cld
sbb
mov
add
xchg
mov
xchg
pop
mov
mov
jge
invd
stos
popf
neg
stc
jne
fimul
ss
add
mov
mov
push
xor
test
xchg
mov
(bad)
cmp
mul
mov
and
cmp
ret
pop
jmp
cli
xor
jno
adc
adc
stc
pop
push
adc
pop
jbe
in
mov
and
mov
sbb
mov
cld
test
xchg
xor
mov
mov
or
retf
inc
add
(bad)
gs
popf
push
pop
xor
mov
(bad)
push
inc
aas
push
(bad)
out
movs
inc
jmp
push
pushf
mov
mov
or
lds
xor
arpl
lods
nop
mov
lds
ins
inc
stc
hlt
push
xchg
cmp
fcom
and
pop
add
and
xchg
movs
xor
lds
sbb
mov
sbb
cmps
ja
mov
loopne
cmps
add
jbe
hlt
add
xor
push
xor
bound
stos
fsubr
sbb
aaa
dec
mov
imul
cmc
cmp
xor
push
nop
push
dec
cwde
push
fnstenv
cmp
pop
je
push
jp
cmp
xchg
xor
xor
jg
add
mov
fcomi
xor
fptan
mov
lods
or
jle
test
out
nop
jnp
and
mov
cmc
sbb
sti
sub
mul
outs
lock
mul
adc
and
jg
xor
cmps
and
arpl
cdq
mov
call
inc
js
mov
mov
popf
stos
inc
mov
sub
jne
mov
mov
imul
sbb
pop
lea
mov
sub
les
jmp
mov
jp
xor
jmp
push
xchg
jl
mov
aas
pop
(bad)
loopne
dec
or
mov
adc
cld
mov
fbstp
imul
pusha
cwde
repnz
lds
cmp
dec
fldcw
pushf
ins
fld
mov
sbb
cmc
popa
push
sbb
daa
inc
mov
xchg
cmp
(bad)
loopne
adc
pusha
das
cmp
jnp
jl
jns
push
bound
ret
xor
ss
retf
js
mov
mov
fcmovu
popa
and
mov
sbb
sub
push
sub
aad
ins
jb
pop
jne
retf
sahf
adc
jle
push
int3
inc
daa
ja
aam
fdiv
aaa
test
mov
ret
ficom
loope
xor
gs
sahf
sbb
aaa
not
inc
or
sbb
mov
test
add
dec
repz
icebp
jecxz
mov
mov
jecxz
xor
sub
mov
inc
ficomp
inc
iret
sub
xchg
inc
ret
loope
jae
(bad)
jecxz
jae
push
in
mov
dec
and
xor
dec
xor
pop
sti
jbe
xor
imul
rsm
ret
int
adc
cmc
inc
lea
js
fnstsw
xchg
fsubr
scas
(bad)
pop
mov
cmps
retf
push
dec
out
clc
jmp
scas
(bad)
stos
push
mov
or
rcl
in
cmp
mov
xchg
cld
push
mov
lea
push
out
mov
inc
rcr
lea
jge
xchg
call
push
push
dec
pop
repz
inc
das
cmp
ret
dec
(bad)
sbb
in
enter
xor
outs
and
imul
pusha
xor
pop
cmps
jae
adc
sub
ss
and
aam
mov
inc
push
mov
ficomp
cwde
jp
mov
out
and
cmp
push
push
(bad)
out
dec
pabsb
arpl
cmc
arpl
or
adc
jmp
fdiv
xor
shl
and
push
leave
push
adc
sbb
std
sub
or
mov
movs
sbb
fistp
in
scas
movs
mov
push
cmp
dec
pop
jne
push
xchg
imul
mov
mov
push
inc
xor
fldenv
pop
loopne
stos
adc
cmp
adc
pop
test
out
sub
in
stc
fstp
daa
adc
enter
scas
mov
dec
adc
jmp
mov
stos
aad
mov
std
retf
inc
pop
sub
add
jmp
sbb
pop
cmp
mov
das
inc
in
cmp
stc
ss
imul
out
ror
mov
pop
sub
xchg
sbb
pop
movs
cli
mov
sub
jnp
mov
pop
clc
mov
ficomp
mov
mov
push
cmps
cmp
sub
push
and
sahf
jg
adc
mov
pop
cmps
pop
mov
(bad)
sbb
and
std
dec
sub
scas
jae
pop
addr16
fucomip
xchg
xchg
div
out
std
stos
add
sbb
mov
out
dec
xlat
inc
repnz
add
pop
and
adc
mov
sbb
daa
mov
and
jb
(bad)
add
mov
jp
repnz
stos
xchg
mov
aaa
and
xchg
or
xchg
out
cmps
add
xchg
out
xor
ret
ficom
(bad)
ja
xor
sbb
mov
inc
fidiv
pop
loop
loopne
add
push
xor
outs
jmp
je
out
xchg
fs
ret
movs
aam
aam
fisubr
pop
sbb
push
data16
mov
out
fisttp
jmp
js
test
push
fwait
js
push
jmp
inc
jo
in
fistp
push
mov
lock
lea
sub
test
add
(bad)
in
sub
xchg
(bad)
pusha
(bad)
jmp
lea
mov
push
push
push
sub
test
push
inc
or
retf
mov
xchg
dec
out
les
sahf
dec
cli
das
fistp
dec
dec
test
mov
pop
test
ror
daa
enter
jo
or
pop
add
dec
cmp
cld
ins
in
sub
fadd
mov
enter
ins
xor
outs
(bad)
pop
add
nop
cld
adc
imul
sti
stc
fild
sub
push
test
pop
mov
das
cmc
sti
cwde
icebp
mov
sti
pop
xor
pop
cmp
mov
sti
jecxz
scas
in
or
arpl
ins
lea
add
xchg
shl
cld
jbe
ins
ss
push
mov
out
dec
lds
and
xchg
rol
push
xchg
test
stos
mov
mov
daa
ins
add
mov
test
(bad)
enter
xor
and
cmp
lock
dec
sub
call
into
or
mov
or
push
je
enter
push
fiadd
lock
sub
adc
pop
mov
loope
jg
aam
push
popf
out
push
jecxz
mov
xchg
(bad)
jbe
xor
fsub
push
jg
cmp
jmp
aas
repz
add
fucomip
and
inc
fsub
mov
repz
jo
push
inc
and
mov
adc
jle
add
mov
jae
or
cdq
push
xchg
pop
and
mov
sbb
xor
call
(bad)
in
cmp
mov
jb
arpl
mov
(bad)
sbb
int
les
cmp
mov
jae
rcl
push
fsubr
mov
add
jno
lahf
jg
or
jb
and
jle
aas
pop
out
xor
mov
xchg
cmp
jge
iret
and
sbb
pusha
stos
inc
sbb
lea
jmp
movs
add
push
xchg
sbb
jg
mov
and
push
popf
pop
mov
retf
mov
retf
jae
and
bound
pusha
neg
add
mov
add
ss
and
mov
fwait
in
test
lods
push
out
shl
fst
fwait
dec
(bad)
dec
dec
sub
pop
cmps
stos
clc
adc
aam
not
cmp
cmp
out
mov
mov
jp
lds
dec
call
inc
ja
clc
stos
sbb
dec
push
dec
jo
int
pop
xchg
jnp
inc
xchg
inc
dec
adc
xchg
(bad)
ins
sbb
sub
pop
mov
pop
sub
cs
cmc
cwde
ins
std
push
lea
mov
cld
(bad)
adc
stos
(bad)
lock
inc
in
popf
or
loopne
adc
in
add
call
adc
and
cs
addr16
test
push
inc
sbb
xchg
and
in
xchg
add
leave
rol
cmps
inc
push
mov
xor
ret
jg
xchg
arpl
lds
xor
xchg
cmp
add
sbb
or
icebp
aaa
pop
push
jmp
cmp
test
xchg
mov
or
adc
cmps
xor
cmp
stos
loop
fst
cmp
sub
mov
test
inc
sbb
or
mov
xchg
aam
call
jns
cmp
dec
sub
mul
rol
inc
test
mov
cmps
cmp
mov
xadd
mov
in
jge
in
pop
mov
sbb
mov
fbld
xchg
aas
test
adc
cmps
jne
cs
sub
cmp
add
pop
jo
pop
arpl
stos
loop
inc
sub
loopne
push
xor
pop
cdq
adc
jecxz
fwait
cmc
xchg
and
cmps
and
mov
sbb
ret
gs
xlat
aaa
pop
loopne
xchg
push
(bad)
xchg
fadd
fdiv
xchg
fwait
(bad)
cvtpi2ps
xchg
push
nop
xor
and
sar
xor
jmp
sbb
adc
sbb
and
ror
shr
imul
test
pop
dec
(bad)
xor
clc
adc
adc
cmp
aam
and
mov
cdq
jl
ficomp
movs
outs
stos
mov
call
shl
mov
cmc
popa
cmp
jns
push
repnz
outs
loope
sbb
call
sbb
mov
or
jae
add
or
icebp
hlt
lods
fs
out
adc
xor
dec
ja
mov
in
push
fistp
adc
xchg
hlt
arpl
in
jns
xchg
dec
test
cdq
jecxz
hlt
fist
sbb
rcr
lock
scas
push
mov
fbld
dec
mov
imul
aas
inc
icebp
jae
test
cmp
and
addr16
hlt
fdivr
or
mov
mov
ror
pusha
or
sbb
dec
loop
fiadd
pushf
lock
aam
mov
mov
push
sub
int3
xchg
clc
in
sbb
add
mov
cmps
inc
outs
addr16
and
call
cwde
sar
shl
sub
mov
xchg
and
and
stc
inc
call
clc
outs
mov
adc
enter
sbb
enter
fadd
cmps
xchg
inc
xchg
or
into
popa
cli
and
jo
pop
or
pop
dec
outs
mov
xchg
movs
jno
xchg
aam
mov
retf
loope
jo
inc
icebp
ds
cmp
adc
sub
add
(bad)
in
sub
enter
and
fdiv
sti
movs
sti
and
or
nop
adc
jle
sar
mov
push
mov
or
aas
xor
jbe
das
push
test
add
sub
arpl
fcom
lahf
(bad)
js
mov
test
or
outs
(bad)
mov
xlat
lea
cli
adc
inc
mov
stc
std
jecxz
inc
mov
cwde
(bad)
xchg
fisubr
pop
pop
or
hlt
js
aas
xchg
js
adc
rcl
sbb
lods
in
dec
dec
jp
sub
sub
enter
repnz
and
cmps
imul
in
(bad)
repnz
mov
lds
pop
push
xor
out
test
js
stos
rcr
not
sub
mov
adc
and
add
hlt
ss
lea
fld
ret
(bad)
lock
cmp
(bad)
xor
shr
hlt
out
lahf
fwait
push
jmp
ret
or
lods
movs
fst
ins
aam
ret
mov
ror
(bad)
sub
cmp
fimul
das
test
out
movs
(bad)
call
jl
or
cmp
cld
shl
add
cmp
jl
aaa
and
cmps
test
clc
bound
cmps
xlat
frstor
jmp
lahf
pop
mov
enter
inc
xchg
call
xor
adc
iret
arpl
pushf
push
stos
data16
iret
data16
jnp
sbb
icebp
(bad)
aam
xor
jb
hlt
sbb
fs
xchg
sbb
out
push
adc
test
jge
jo
mov
pop
push
in
icebp
pop
sub
inc
dec
movs
fcmovb
out
pop
adc
adc
mov
cmp
imul
push
push
adc
arpl
inc
mov
test
das
xchg
sbb
adc
fwait
mov
cld
mov
jnp
xchg
scas
cld
loope
pop
cld
sbb
add
out
push
pop
je
leave
push
xchg
ret
jne
mov
scas
cld
push
cmp
push
aam
daa
mov
pushf
aam
or
xchg
ins
or
xchg
lock
jnp
xor
dec
outs
movs
inc
xor
and
scas
pusha
fidivr
ret
add
xchg
push
mov
push
push
jl
cmps
sub
je
loope
iret
repz
push
xchg
and
pop
add
mov
test
dec
mov
or
cmp
cli
hlt
add
pop
daa
pop
cdq
iret
aad
dec
xor
dec
movsx
add
mov
fs
xchg
cmp
jp
pop
out
pusha
mov
mov
jne
pop
pop
retf
xchg
or
add
add
lds
pop
sbb
xchg
xchg
mov
aaa
or
lds
push
inc
or
mov
fiadd
mov
adc
adc
ret
adc
jmp
pop
mov
mov
test
aas
out
pusha
dec
(bad)
pop
clc
ss
in
jnp
fdivp
pop
add
xchg
pop
inc
jne
sub
xor
or
(bad)
ja
pop
adc
or
in
xor
enter
test
(bad)
scas
mov
or
mov
icebp
in
jnp
enter
addr16
pop
out
pop
jno
push
push
stos
dec
rol
aas
pop
cmp
fistp
adc
dec
sub
cmp
adc
bound
push
lea
test
push
leave
pop
cmp
stc
repnz
movs
dec
enter
into
cmps
sbb
imul
jmp
pop
dec
pop
inc
gs
cli
sub
or
outs
mov
push
ins
stos
mov
test
mov
dec
vpaddb
inc
sbb
fistp
sbb
adc
sub
cmp
lods
jl
ins
aas
xchg
retf
fstp
push
sub
ins
or
jne
adc
shl
ja
add
fwait
popa
xor
mov
adc
(bad)
ja
inc
mul
fimul
add
jg
mov
push
in
push
sbb
xchg
lods
add
mov
wbinvd
pop
sbb
cmps
es
adc
mov
mov
jg
ret
loop
mov
sbb
retf
adc
mov
out
movs
adc
sub
lea
test
cmp
loope
push
or
fs
jb
sahf
ins
pop
jmp
sbb
cmc
ins
into
fistp
repz
sub
test
dec
add
aad
std
movs
in
mov
ror
gs
jl
pop
or
push
outs
pop
jp
outs
pop
sbb
imul
cs
(bad)
leave
push
div
sti
movs
inc
push
push
pop
out
cmp
lea
and
cmp
xor
adc
push
cld
sub
bound
js
cdq
sbb
xor
push
add
mov
push
mov
shr
loope
pop
movs
mov
lea
fld
adc
jns
pop
or
push
iret
xor
cmps
es
xor
inc
add
mov
(bad)
push
test
jb
push
or
mov
mov
movs
adc
xlat
and
pop
lahf
loopne
scas
leave
dec
or
(bad)
ret
cmc
xchg
dec
xchg
hlt
sub
dec
xlat
frstor
inc
mov
or
mov
and
gs
lds
jb
cmp
sbb
daa
xor
add
movs
loope
dec
mov
lods
sbb
xchg
imul
jbe
out
and
xor
sub
int
iret
jno
test
icebp
fisttp
sbb
xchg
into
push
test
push
sbb
cld
loope
sbb
data16
dec
push
test
pushf
mov
or
aam
enter
inc
aam
lock
jb
sbb
ja
ins
inc
mov
lahf
fcmovnbe
add
imul
shl
sbb
fwait
and
and
mov
test
push
add
add
add
je
(bad)
int3
(bad)
jae
je
sbb
xor
les
stos
pop
fld
cmp
inc
lea
sbb
pop
loopne
or
dec
and
mov
and
cmps
cmp
loopne
cdq
add
loopne
xchg
inc
test
add
lds
daa
jo
xor
dec
mov
mov
xchg
jns
fwait
pop
mov
fs
js
daa
jmp
sub
sub
lods
imul
es
dec
leave
ins
mov
fs
mov
out
retf
stos
fistp
mov
mov
mov
adc
xor
loope
dec
and
dec
pop
sbb
adc
test
sbb
dec
rcl
cmp
loope
xchg
pop
js
xor
mov
jge
(bad)
jo
mov
add
add
in
or
in
xchg
add
call
push
add
cmps
outs
push
pop
mov
imul
adc
sbb
jns
add
mov
inc
adc
mov
jne
push
call
xchg
dec
dec
sbb
sub
add
xchg
fcomp
mov
mov
int
xor
sbb
sahf
je
addr16
cli
and
test
push
and
test
aaa
mov
ret
add
lods
cwde
(bad)
jns
dec
in
dec
dec
popf
cmp
sub
adc
cwde
test
or
and
jno
popf
push
cs
(bad)
and
push
inc
fwait
mov
fistp
fisub
pop
dec
jne
(bad)
cs
stos
jp
fimul
cwde
sub
jmp
inc
xchg
jp
jb
(bad)
mov
pop
dec
stc
pop
adc
lods
adc
mov
and
cdq
dec
jno
(bad)
aad
xor
fstp
cmp
daa
into
pop
dec
sbb
xor
outs
cwde
cmp
pushf
adc
pop
movs
pushf
mov
js
lock
or
push
and
mov
lock
call
add
push
inc
jp
mov
rcl
shr
pop
jmp
call
popa
adc
sbb
add
xchg
push
in
iret
lds
dec
(bad)
test
pop
mov
jae
push
mov
sub
out
stc
dec
pop
mov
ins
movs
das
push
outs
fistp
test
in
lds
dec
mov
push
push
lods
rcl
test
mov
or
ds
lock
dec
push
cmps
mov
shr
jmp
jno
fsubrp
pop
loope
dec
bound
daa
outs
xor
jmp
in
aaa
or
add
dec
pop
clc
or
jmp
pop
xchg
jecxz
cli
sbb
pop
std
pop
dec
dec
jns
gs
ss
or
xor
repnz
pop
repz
sbb
sub
cmp
cmp
sub
sub
enter
cmps
les
inc
pop
and
xor
fisubr
jmp
push
pop
mov
sbb
mov
fistp
mov
pop
popf
push
mov
lea
test
push
shr
ret
stc
loopne
sbb
daa
dec
xor
je
aam
mov
cmps
fld
leave
adc
test
dec
mul
xor
daa
repz
mov
push
mov
dec
lods
(bad)
mov
test
sub
or
push
add
jbe
cmp
aad
and
pop
inc
jmp
cmps
ror
jno
push
icebp
retf
mov
(bad)
leave
into
inc
fisubr
sub
add
(bad)
cli
cmc
scas
test
mov
fs
mov
xor
mov
ds
xchg
ins
mov
ss
mov
ds
adc
shl
xor
ss
leave
call
mov
(bad)
jno
adc
ror
cmc
ficomp
mov
dec
stc
pop
pushf
cmps
cmps
push
iret
push
pop
(bad)
push
std
pop
inc
fs
add
pop
jge
mov
retf
sub
mov
jmp
add
mov
dec
jg
cmp
ds
cmps
cli
into
sub
dec
mov
int
sub
jae
test
inc
or
dec
lds
mov
ret
fadd
mov
push
mov
mov
xchg
retf
push
xor
adc
fistp
loopne
mov
and
(bad)
xor
fsubr
cwde
jge
xchg
shl
popa
(bad)
clc
push
jl
sbb
popf
cmps
sbb
add
ins
(bad)
sahf
bound
test
xor
add
pop
cmp
and
push
fdivr
loop
mov
pop
pop
mov
cmp
(bad)
movs
mov
xchg
(bad)
(bad)
jmp
mov
sbb
mov
jo
clc
fdivr
mov
test
push
pop
aam
pushf
xchg
outs
push
stc
or
xor
popa
retf
adc
xchg
pop
sbb
or
out
jmp
mov
sar
sbb
loope
and
mov
in
cmp
rol
cs
xor
mov
lahf
aas
xor
inc
mov
aam
jmp
aam
jns
int
bound
lahf
mov
call
jae
xabort
leave
cmps
movs
cmp
cld
mov
test
and
arpl
pop
jecxz
xor
aaa
data16
jg
icebp
fcomp
leave
xor
inc
pop
lds
cmp
fs
fdivrp
push
loope
popf
mov
iret
jg
ficomp
test
push
ja
js
xor
xor
inc
les
test
mov
dec
mov
xchg
and
fistp
sbb
and
loopne
movs
into
sar
sahf
leave
xor
mov
test
pusha
inc
xchg
and
jb
xor
ret
cmp
adc
add
or
hlt
mov
and
inc
adc
shr
iret
shl
cmp
dec
xlat
ret
add
sub
(bad)
pusha
out
rcr
repz
out
xchg
inc
or
mov
cld
add
unpcklps
leave
sub
fs
lods
or
popf
scas
push
adc
aad
xchg
popf
mov
push
popf
inc
sub
pop
ror
mov
sahf
jmp
mov
inc
or
dec
lahf
jnp
push
push
popa
mov
sub
xor
ret
out
push
mov
dec
adc
shl
sbb
push
in
or
test
fwait
lds
call
adc
in
or
xchg
out
fwait
clc
jnp
adc
cmp
inc
cs
sub
mov
loop
int
add
fist
(bad)
cmp
mov
sbb
xor
(bad)
inc
imul
data16
bound
cmp
std
iret
cwde
enter
pop
mov
mov
mov
scas
shr
loop
push
sbb
mov
jb
rol
sbb
mov
cdq
test
xor
add
fsubr
dec
pop
fld
push
inc
fldcw
lds
dec
push
cmc
or
fstp
pop
repnz
inc
shl
test
cmp
mov
jne
dec
dec
pusha
clc
and
cmc
inc
dec
(bad)
fdiv
leave
lahf
ins
xchg
popa
lods
call
movs
or
inc
push
sub
mov
es
hlt
hlt
xor
jne
push
int3
jle
dec
cmp
mov
mov
(bad)
mov
mov
(bad)
jo
ror
adc
fs
jl
sub
cmp
mov
cmc
pop
test
xor
int3
push
and
stos
cli
cmps
mov
in
dec
dec
pop
add
mov
mov
xchg
pop
loopne
(bad)
mov
push
aam
jmp
dec
xchg
cld
lock
inc
in
popf
or
in
adc
in
xchg
add
in
adc
and
in
adc
cmps
cs
inc
mov
call
xchg
or
in
imul
ins
clc
repnz
and
dec
xchg
push
mov
mov
and
sub
push
adc
adc
stos
or
xor
push
dec
add
jne
or
inc
ins
clc
sub
mov
push
(bad)
div
and
leave
out
cs
in
and
aas
nop
cdq
push
and
aad
lea
out
js
fwait
sub
xchg
in
mov
pop
lds
js
les
adc
in
mov
ins
repz
add
icebp
out
mov
jge
ja
xchg
inc
pop
out
sbb
push
cdq
pushf
shr
mov
mov
xchg
adc
shl
mov
sbb
outs
lods
mov
add
add
inc
jnp
iret
jg
pop
neg
shl
and
sbb
inc
ss
mov
repnz
mov
idiv
mov
iret
and
outs
ret
xchg
pop
or
(bad)
clc
push
xor
movs
jbe
adc
loop
and
sub
xor
mov
cmp
push
(bad)
(bad)
adc
xor
int
pushf
int3
mov
cld
rcl
add
or
shr
lahf
cmps
and
jmp
adc
cmp
loop
ficomp
xor
ss
loope
pop
push
dec
and
loop
dec
adc
fild
adc
adc
movs
sbb
xchg
test
je
test
adc
cmp
mov
sub
test
mov
and
mov
and
out
das
(bad)
fucomip
add
out
jne
dec
pop
arpl
addr16
xchg
loopne
daa
or
mov
dec
sbb
jbe
xlat
inc
lock
fcomip
cmp
outs
jb
or
fnsave
cmp
push
and
ss
mov
mov
pop
mov
test
sub
daa
out
jb
stos
xor
aaa
push
dec
aam
(bad)
loopne
jnp
and
fwait
in
outs
nop
adc
jecxz
adc
sbb
js
or
and
push
cmp
adc
cmp
cdq
and
mov
mov
mov
int
mov
xchg
call
pop
and
lods
sbb
repz
ins
call
rcr
rol
nop
pop
stc
sbb
mov
xchg
and
or
ss
not
rdmsr
jle
cld
stos
xchg
(bad)
and
sbb
es
aaa
shr
sar
mov
or
outs
push
sub
fwait
les
test
addr16
dec
xor
sbb
pusha
dec
je
cmp
mov
mov
adc
add
les
in
mov
sub
sbb
adc
ins
cmp
hlt
inc
cdq
shl
(bad)
mov
or
add
push
ins
jg
jecxz
(bad)
jle
mov
ret
and
cmp
fist
inc
mov
mov
(bad)
lea
fistp
inc
cmp
clc
jno
sub
dec
movs
stc
sbb
fdiv
fsub
inc
out
add
adc
push
jl
or
dec
ds
dec
pop
mov
ss
jmp
push
jb
dec
pop
mov
loope
sbb
shr
lods
rcr
dec
or
leave
push
jmp
jo
or
test
out
leave
stc
(bad)
sbb
xor
or
jbe
mov
inc
fisubr
sub
and
inc
push
xchg
test
jno
add
jo
xlat
cmc
mov
jnp
nop
push
scas
pop
or
sbb
stos
test
ret
stc
pusha
pop
or
sub
mul
mov
ret
mov
push
shr
add
outs
jns
out
push
ret
inc
int3
outs
push
cmps
sbb
div
loop
or
cmps
nop
push
xchg
fwait
adc
std
push
jmp
sbb
inc
enter
xlat
into
out
fsubr
daa
stos
push
push
and
xchg
xor
imul
inc
ret
jl
clc
sub
ror
mov
pop
mov
call
push
or
pop
inc
das
sub
loope
(bad)
rcl
daa
inc
dec
sbb
int3
sub
xchg
stc
div
mov
jecxz
sub
hlt
sub
xchg
dec
idiv
cmc
ffree
inc
rcl
(bad)
pop
mov
sub
fwait
add
cmp
mov
sub
loopne
and
stc
xor
jmp
aad
dec
(bad)
ins
cwde
add
test
int
nop
enter
jge
loope
cmps
and
or
(bad)
imul
add
xchg
xlat
addr16
cwde
fisubr
adc
(bad)
jnp
lods
xchg
(bad)
int3
sbb
jmp
ret
pop
inc
std
mov
cld
outs
mov
push
test
push
lea
aas
or
xchg
aaa
mov
mov
jno
or
lock
pop
inc
pop
xor
shl
cdq
xor
mov
or
in
imul
mov
pusha
mov
imul
fstp
hlt
es
cmp
mov
push
mov
(bad)
pop
add
neg
add
pop
jmp
mov
(bad)
out
and
mov
fwait
popf
inc
test
fidivr
mov
scas
ss
lahf
pushf
retf
mov
std
int
xchg
(bad)
test
in
fadd
add
dec
stos
pop
sbb
lea
lock
add
mov
into
add
loope
sbb
retf
int3
push
sbb
dec
retf
gs
aad
sbb
push
daa
mov
cld
or
add
inc
push
in
test
stos
mov
jmp
fisttp
popa
dec
daa
call
sbb
xchg
and
add
adc
xchg
mov
and
sbb
sbb
retf
mov
xchg
jne
rcl
adc
dec
nop
pop
xchg
push
inc
pop
(bad)
outs
test
mov
cdq
dec
inc
cli
js
and
aad
fld
mov
mov
mov
sbb
into
test
add
mov
aaa
mov
inc
(bad)
lods
test
or
pop
jb
loope
mov
imul
sub
cmc
enter
sets
js
push
add
out
add
aam
(bad)
sub
pushf
ja
jmp
inc
(bad)
pop
push
pushf
shl
add
mov
adc
out
xchg
inc
mov
test
lea
inc
and
mov
sub
popa
add
and
cld
pop
or
cmp
jne
scas
cmp
mov
inc
mov
neg
adc
lock
loopne
mov
sub
cmp
scas
mov
mov
aam
sti
iret
aad
ret
sub
mov
pusha
jnp
sub
mov
(bad)
std
mov
pop
int3
cmp
fs
daa
ins
icebp
mov
imul
repnz
add
int3
(bad)
js
movs
jne
rcl
inc
sub
cld
das
fcomp
pop
or
mov
in
dec
mov
gs
adc
and
loop
pop
fld
sbb
adc
jecxz
or
outs
nop
dec
xor
outs
or
sahf
jne
push
mov
sub
push
clc
and
cmc
rcl
(bad)
fcmovnb
add
call
fmul
xor
mov
rcl
jp
pop
fnstenv
cli
mov
push
cmp
test
ret
and
add
sbb
dec
add
pop
or
mov
push
pop
popa
sbb
add
jno
cld
sbb
pop
pop
gs
cmp
and
jmp
mov
add
lods
mov
retf
in
mov
mov
cli
arpl
enter
in
xor
push
lock
cmp
shr
cmp
out
inc
retf
repnz
test
scas
cli
out
(bad)
push
leave
jmp
inc
movs
call
leave
inc
mov
jl
push
jle
dec
xchg
jmp
sbb
xchg
mov
in
add
in
xchg
add
in
rol
gs
rol
in
xchg
add
mov
stos
les
dec
mov
sbb
push
enter
mov
icebp
leave
xchg
je
jne
test
test
int3
xor
xor
rol
call
fst
push
xor
(bad)
hlt
nop
mov
adc
test
in
add
mov
retf
pop
lock
lds
inc
es
and
xlat
jno
adc
adc
jo
inc
call
arpl
xchg
jmp
mov
xchg
cld
out
ffreep
loopne
mov
(bad)
(bad)
stc
adc
adc
mov
add
(bad)
add
jp
shl
lahf
repz
(bad)
leave
push
in
sahf
cmps
dec
jmp
fdivr
bound
adc
das
xor
mov
xor
mov
mov
rcl
loope
mov
mov
mov
add
mov
sub
jecxz
in
shl
inc
loop
mov
mov
or
mov
adc
sar
rol
jne
call
cmp
mov
pop
inc
jb
inc
repnz
fsubr
push
mov
mov
ret
push
push
xchg
mov
call
ret
add
push
data16
retf
ret
cmp
cs
add
jnp
push
jecxz
leave
in
shl
mov
movs
and
pusha
idiv
jno
mov
nop
in
movs
inc
jno
aas
sar
push
fst
dec
lods
fcomp
das
out
ds
mov
mov
jo
jo
push
dec
arpl
push
adc
fisttp
pop
popf
movs
xor
out
hlt
cli
test
imul
(bad)
sbb
jecxz
mov
pop
mov
mov
or
int3
loope
xor
loope
or
pusha
and
ret
inc
(bad)
or
loopne
inc
push
or
inc
cwde
dec
adc
jb
sbb
mov
xor
sar
cwde
mov
dec
adc
ret
jae
mov
arpl
je
or
rol
unpcklps
xchg
xchg
paddq
xlat
loop
pop
xor
fcmovbe
pusha
mov
retf
inc
or
pop
inc
push
hlt
das
les
movs
jmp
and
scas
jnp
sbb
std
in
test
jnp
dec
mov
rcr
inc
stos
pushf
int3
push
ss
adc
push
mov
add
dec
call
addr16
mov
jge
or
lods
enter
repnz
mov
in
into
adc
and
lock
jo
dec
dec
loop
call
mov
hlt
inc
test
and
add
mov
push
fs
cmps
add
cld
shr
jg
inc
clc
cmp
and
cmp
in
clc
and
xor
sub
or
mov
jmp
adc
sahf
aaa
pop
cdq
inc
pushf
jns
xchg
mov
popf
das
clc
adc
adc
fwait
test
adc
and
push
adc
mov
data16
mov
adc
dec
jl
mov
and
ret
jg
adc
jecxz
pushf
dec
lods
out
inc
cmp
test
and
dec
loopne
outs
add
jmp
mov
test
mov
xchg
push
repnz
pop
fucomi
inc
leave
aam
pop
sahf
add
pusha
or
mov
daa
sub
retf
shl
ror
fild
jb
jbe
jecxz
cmp
cmp
add
push
pop
movs
dec
stos
mov
mov
dec
and
loop
inc
mov
add
leave
mov
sbb
jecxz
lods
pop
fsubr
push
and
push
cmp
push
cmps
cmps
fldcw
mov
mov
mov
aam
push
cwde
jb
jns
add
mov
adc
jbe
inc
or
sub
sar
jecxz
test
popa
(bad)
popa
(bad)
out
cmc
mov
pop
mov
xor
mov
sub
cmps
dec
aad
mov
lds
aad
loop
or
and
mov
sar
enter
fldcw
jnp
hlt
push
adc
push
or
sub
mov
shl
xor
xchg
inc
mov
mov
mov
or
xor
and
out
and
ja
repnz
sub
cmc
pop
sbb
or
fucomi
enter
pusha
xchg
in
push
in
ins
nop
imul
rol
inc
mov
pop
jne
(bad)
in
fst
test
in
xchg
fisub
inc
sub
push
push
sti
pushf
push
aas
add
pop
jb
in
dec
loopne
add
inc
hlt
mov
xor
jbe
sub
pop
sbb
cmp
aaa
enter
ret
out
shl
cmp
fcmovnu
imul
cld
push
fcomp
jo
inc
add
ret
pop
mov
cwde
sub
jnp
lahf
sub
mov
dec
pop
add
repnz
or
xchg
sub
es
call
pop
enter
mov
jmp
jne
dec
sbb
movs
cmp
dec
add
call
mov
fisub
sub
stos
xor
cmp
jmp
stos
aaa
push
out
xlat
fcomp
xchg
adc
jl
test
imul
and
inc
inc
aam
dec
inc
mov
dec
out
lock
das
loope
popf
scas
cmp
add
xor
call
loopne
push
shr
adc
aad
mov
cmp
jae
(bad)
mov
xchg
jns
add
hlt
in
jmp
(bad)
in
sub
ins
cld
je
outs
mov
dec
sbb
or
scas
(bad)
xchg
aad
rcl
adc
mov
pushf
xor
sbb
push
add
mov
mov
nop
push
imul
and
clc
push
mov
lds
xchg
outs
cdq
mov
fbld
mov
push
push
fs
inc
mov
fwait
push
pop
cs
fcomp
leave
inc
xchg
cmp
test
push
mov
and
leave
sub
push
sbb
nop
pop
ror
fstp
rcr
test
loopne
cdq
loopne
or
les
or
xchg
push
mov
std
loope
mov
lods
or
xchg
leave
push
adc
daa
sub
arpl
inc
dec
cmp
dec
mov
ret
xor
mov
scas
lods
not
(bad)
mov
std
fcomp
push
mov
dec
ins
xor
mov
(bad)
aam
sar
and
inc
sahf
bnd
push
out
jecxz
push
mov
clc
les
ror
xchg
(bad)
cmp
xchg
lods
(bad)
mov
stos
jnp
sub
dec
lea
dec
xchg
ins
mov
in
test
das
mov
or
ds
ficomp
(bad)
cmps
cld
rcl
mov
push
sub
popa
cli
sahf
pop
mov
mov
and
out
loope
add
loope
repnz
jo
adc
in
xor
xchg
in
or
aam
jo
icebp
inc
out
cld
(bad)
mov
jns
scas
inc
add
adc
sbb
mov
cmp
daa
jecxz
movs
call
adc
aaa
in
xor
jp
add
cmps
daa
movs
aam
push
enter
xchg
xor
loope
push
mov
jmp
sub
xchg
shl
out
xor
call
fcom
jo
mov
jmp
loop
sub
lock
pusha
xchg
cmp
test
out
xchg
mov
ja
lock
popa
mov
jp
mov
jbe
icebp
fild
add
add
hlt
fmul
shl
retf
popf
loope
xchg
lahf
sub
xor
add
les
mov
mov
loopne
lods
fdivr
out
xor
scas
or
mov
pop
rcl
lock
repz
mov
shl
mul
pusha
cwde
scas
ret
test
pop
lea
movs
rcl
loope
adc
int3
arpl
jl
push
cmps
inc
cwde
stos
or
ror
mov
mov
js
adc
sahf
inc
loopne
pop
movs
dec
sub
shl
xchg
lea
push
push
xchg
jns
add
adc
lea
push
adc
push
cmps
mov
mov
aad
rol
cmps
pushf
sbb
inc
xchg
daa
fwait
add
add
sbb
jns
mov
sbb
iret
movs
dec
sbb
ins
sub
popa
or
or
lods
adc
fs
test
pop
inc
push
data16
and
mov
nop
sbb
adc
jb
lds
and
ret
mov
mov
dec
xor
sar
jecxz
sub
or
xchg
inc
pop
cdq
jl
sbb
adc
mov
sbb
push
push
inc
(bad)
mov
call
movs
dec
cmp
dec
cdq
and
ret
cmp
aaa
rcr
xchg
cmp
ficom
rcl
lahf
imul
loope
push
pop
and
cli
xchg
inc
push
ror
sbb
lock
mov
clc
es
adc
rcl
xchg
inc
xor
hlt
ret
push
push
jmp
(bad)
mov
ins
add
xchg
cmps
arpl
int3
loopne
and
jp
jno
jmp
push
push
and
loopne
clc
leave
jl
xchg
in
ins
pop
in
ret
xchg
sbb
mov
pop
out
mov
(bad)
daa
cmps
imul
cwde
lock
jmp
sub
test
push
jmp
inc
ins
loopne
mov
enter
in
and
daa
dec
(bad)
xchg
jne
and
lds
imul
fcmovnbe
mov
enter
scas
gs
std
sar
jae
xor
xor
dec
xor
int
es
imul
jmp
mov
jmp
int
sub
nop
add
mov
jmp
mov
shl
push
call
in
stos
mov
or
push
mov
fild
fisub
jns
jp
jb
add
sbb
cmp
(bad)
cmps
mov
sar
movs
icebp
loop
int3
cwde
cld
inc
xchg
mov
xor
nop
xchg
imul
test
mov
pop
sub
ss
dec
push
scas
daa
mov
mov
mov
or
dec
xor
in
popf
sti
sub
shl
add
xor
stc
pop
jmp
(bad)
retf
pushf
mov
xor
dec
push
xchg
sub
in
out
cmp
xchg
mov
mov
add
mov
xchg
movs
ins
ds
xchg
push
or
push
into
add
repnz
ror
call
xchg
std
mov
cdq
add
loopne
or
in
in
or
hlt
cld
test
hlt
ror
rcr
mov
cmp
sar
inc
lods
mov
test
popa
test
rcl
xchg
or
hlt
clc
and
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
sahf
add
aam
add
in
rol
loopne
popf
or
in
xchg
add
call
xchg
add
call
test
out
imul
loopne
xchg
add
loopne
xchg
add
call
add
loopne
aad
mov
stos
xchg
add
fs
add
call
repz
jmp
ins
or
ja
xchg
inc
loopne
xchg
add
shl
imul
and
sbb
dec
push
or
sub
xchg
add
call
xor
repz
es
mov
call
out
push
mov
in
mov
call
and
xchg
fadd
jnp
jmp
mov
idiv
jbe
mov
push
mov
pusha
mov
loopne
(bad)
std
movs
sub
lea
pop
xchg
icebp
call
dec
es
mov
retf
mov
sar
mov
cmp
rol
push
mov
or
cmp
mov
push
dec
cmp
repnz
or
jecxz
mov
xchg
cmps
sub
push
cmps
push
popf
mov
call
mov
iret
sbb
lods
call
ds
jno
stos
mov
inc
js
mov
pop
(bad)
loopne
aaa
cmp
xor
push
outs
sahf
icebp
add
sti
pop
pushf
lahf
or
jnp
stos
push
sub
dec
test
mov
lods
jmp
in
cmps
popa
shl
mov
fist
jb
cwde
inc
test
ins
or
(bad)
mov
inc
cmp
inc
fs
mov
add
in
cmps
push
add
adc
push
js
dec
stos
loop
addr16
dec
fisub
das
loopne
mov
mov
es
xchg
add
lea
bound
cmps
jp
add
jno
xchg
jmp
push
add
cld
xchg
loopne
push
retf
fwait
jns
cmp
push
dec
sti
or
pop
outs
test
jmp
fiadd
lods
stos
lods
addr16
inc
jmp
test
dec
dec
fcomp
mov
call
inc
bound
call
xchg
add
call
imul
call
cld
cdq
or
loopne
xchg
or
clc
call
vpaddb
lea
push
std
mov
mov
in
xchg
adc
mov
cmc
data16
sbb
push
dec
push
lods
cmp
inc
pop
inc
(bad)
fild
or
cmp
shl
retf
lahf
scas
cmp
push
cmps
inc
inc
inc
dec
xor
mov
mov
lds
cmps
pop
pop
mov
cmp
add
add
pop
jecxz
repnz
and
dec
or
(bad)
pop
cs
cmp
mov
repnz
jmp
js
or
repnz
sti
not
and
call
inc
xor
xlat
adc
or
pop
sbb
sti
xchg
inc
push
xor
mov
mov
daa
inc
add
mov
xchg
and
(bad)
fcom
stos
lods
cli
icebp
jmp
icebp
imul
clc
push
ja
movs
leave
(bad)
sti
add
jae
jecxz
cmps
push
cli
dec
scas
shl
(bad)
or
inc
xor
xor
daa
push
pop
push
or
cmp
or
daa
adc
retf
push
jle
lea
xchg
or
sub
into
movs
jne
mov
push
dec
mov
mov
sub
add
adc
sub
in
add
sbb
in
ins
add
scas
ins
xchg
mov
add
fldenv
test
sub
repnz
mov
xchg
scas
sbb
jb
mov
enter
inc
shl
inc
fidiv
out
inc
mov
add
push
pop
inc
popa
push
shl
or
fwait
mov
and
fild
push
sahf
mov
ds
push
in
imul
call
scas
mul
xchg
jb
jecxz
call
add
out
mov
cs
xor
add
stc
je
(bad)
movs
add
dec
addr16
pop
and
dec
lods
pop
xchg
or
cli
cmp
sti
or
push
movs
pop
jg
cwde
fwait
mov
outs
push
dec
in
xchg
or
cmp
cmp
dec
dec
loope
mov
enter
hlt
ins
jmp
xchg
sub
loope
repz
imul
mov
xchg
add
loop
ret
fwait
imul
sbb
idiv
(bad)
mov
cdq
ret
scas
add
enter
aas
(bad)
sub
xlat
or
loop
xor
dec
retf
aas
fsub
and
sub
cmp
xchg
inc
lds
jge
data16
jae
mov
push
lods
repnz
sbb
nop
mov
in
mov
out
xchg
cmp
mov
cmc
mov
imul
iret
rcr
outs
ds
mov
or
and
cmp
pushf
das
jb
and
ror
adc
dec
mov
sub
fdivr
push
adc
xor
mov
adc
ret
es
fsubr
ja
cdq
mov
mov
pop
call
cld
pop
xchg
stc
xchg
nop
push
jne
push
adc
ins
jl
sub
xchg
cmp
mov
sub
mov
outs
sbb
dec
or
fiadd
pop
movs
imul
cmp
add
in
adc
cld
lea
in
call
xchg
add
test
adc
in
sbb
leave
movs
loope
(bad)
in
push
sub
test
adc
pop
in
popa
into
(bad)
in
leave
sub
pop
adc
shl
jne
ja
cwde
mov
scas
cmc
popa
xchg
ret
fdiv
add
test
stos
sahf
dec
ja
mov
(bad)
loope
mov
sldt
out
mov
in
movs
popf
repnz
pop
cmp
(bad)
out
fsubr
jg
adc
adc
add
jg
out
pop
pushf
add
pop
stos
mov
jne
int
aas
xlat
mov
mov
lods
nop
mov
adc
(bad)
loop
jo
or
and
out
ins
shr
aaa
cdq
adc
stos
(bad)
push
add
inc
pop
inc
mov
push
mov
ins
dec
push
sub
test
fs
repnz
sar
fwait
ss
dec
add
pop
movs
sub
jo
or
loope
jmp
xor
jg
shl
inc
and
cs
cmps
popa
pop
fs
mov
push
sti
nop
mov
outs
pop
and
dec
dec
mov
xchg
call
xchg
iret
sub
rcl
in
test
(bad)
lea
mov
xlat
jmp
iret
rcr
hlt
call
ja
jne
rcr
ja
sub
ret
pop
xchg
lea
mov
and
js
ss
xor
and
xor
pop
ds
jge
sbb
fwait
rol
cwde
push
retf
xor
pop
mov
pop
jmp
dec
xor
push
scas
aad
cmp
mov
aaa
adc
cmp
mov
mov
xor
pop
out
pop
mov
mov
sbb
int3
jne
std
pop
lock
and
adc
pop
mov
aaa
lods
arpl
int3
mov
xchg
retf
xchg
(bad)
pop
jmp
cld
lock
inc
loopne
xchg
or
cld
cld
xchg
add
call
cdq
add
push
add
outs
loopne
pop
and
test
lods
rol
sub
adc
fs
inc
shr
add
sub
push
sub
in
or
sbb
icebp
ret
(bad)
stos
rcr
sub
pop
add
push
xchg
fadd
and
shl
push
fcomp
xchg
pop
mov
pop
jmp
dec
in
test
retf
mov
sbb
mov
cs
pop
jbe
mov
and
xor
jl
mov
inc
mov
in
in
xor
ins
add
fmulp
dec
idiv
loopne
(bad)
ror
in
jecxz
pop
push
or
jne
clc
loop
and
xchg
sub
or
(bad)
push
or
dec
repz
aad
mov
mov
add
ficomp
mov
mov
mov
fst
cld
jae
add
or
fist
or
pop
xlat
idiv
dec
pop
rcl
sahf
nop
xlat
cmp
jns
cmp
add
arpl
inc
xchg
pop
imul
adc
pop
jp
xor
dec
movs
mov
data16
and
aas
and
xchg
leave
popa
test
(bad)
adc
loopne
push
sbb
add
pusha
inc
arpl
pusha
jne
iret
mov
addr16
jle
stos
mov
add
pusha
mov
or
lds
in
int
inc
retf
mov
mov
mov
and
mov
into
test
mov
xor
jp
repz
je
xor
mov
mov
hlt
retf
adc
shl
std
cld
ds
data16
mov
data16
xlat
(bad)
mov
std
pop
inc
mov
pusha
leave
xchg
pop
jmp
test
mov
cmp
add
pushf
cmp
cwde
sahf
movs
pop
les
sub
pop
or
mov
lods
pop
jp
cdq
lock
jecxz
stos
xor
dec
xor
(bad)
in
cmp
adc
push
add
pop
jmp
std
lock
inc
loopne
xchg
or
cld
cdq
sbb
in
call
cdq
adc
push
add
jmp
inc
mov
push
int
in
rcr
mov
pop
or
push
add
movs
sbb
push
in
dec
call
adc
sub
sbb
push
fdiv
(bad)
fst
pop
xor
push
sub
mov
mov
aad
cmp
or
sbb
jle
repnz
xchg
jmp
pusha
hlt
push
push
out
xchg
(bad)
xor
aaa
aas
mov
mov
rcl
sahf
test
push
addr16
int3
mov
dec
pop
lock
lods
xor
add
dec
ss
or
pop
dec
push
mov
loope
dec
rol
cmp
shl
(bad)
push
push
pop
sbb
mov
pop
call
call
push
ss
arpl
ds
push
js
cmp
scas
add
xor
and
(bad)
sub
xchg
dec
or
xchg
cli
xor
fist
dec
or
sbb
pop
dec
sub
(bad)
mov
xor
mov
mov
sbb
and
jmp
por
sbb
or
cmova
(bad)
jb
(bad)
loope
mov
jmp
jns
jno
inc
leave
sub
jne
mov
push
xchg
mov
xor
mov
add
add
jmp
jno
fst
ret
outs
int
pop
or
loopne
push
jbe
mov
stos
rcr
ja
push
inc
dec
dec
ss
psllw
aad
out
int
jecxz
sbb
cs
stos
std
in
aaa
(bad)
into
test
(bad)
std
fs
scas
ficomp
push
mov
(bad)
mov
outs
inc
std
test
mov
push
test
cmps
mov
retf
adc
(bad)
int
mov
or
jp
(bad)
imul
call
dec
dec
adc
xchg
mov
xor
or
and
dec
std
ror
xor
xor
in
mov
clc
add
jmp
xchg
lahf
cld
push
inc
mov
lods
xchg
dec
pusha
rol
out
aad
add
cmp
fcom
inc
dec
(bad)
in
pushf
es
mov
lock
mov
xchg
popf
mov
mov
sbb
les
xor
int3
inc
std
retf
jl
or
jns
cmp
sbb
iret
jle
mov
pop
clc
mov
push
pop
sub
int
fist
mov
jmp
or
xor
out
jb
test
sahf
pop
cmc
(bad)
push
push
cmc
gs
shl
xchg
cmp
inc
xor
or
sti
aas
jl
call
add
aad
add
mov
mov
pop
add
(bad)
jecxz
sbb
arpl
cdq
fdiv
jecxz
shr
aas
ffreep
movs
ins
mov
imul
fs
mov
(bad)
dec
cli
xlat
jg
aaa
mov
mov
xor
ja
icebp
outs
xor
hlt
xor
clc
into
sbb
adc
xchg
dec
jle
add
test
sub
js
mov
cmps
add
adc
int3
pop
xor
shl
pop
stos
ins
jnp
xchg
scas
popa
and
fstp
xchg
js
jge
daa
sub
test
jno
bound
dec
imul
sub
bound
cmp
jmp
push
inc
pop
xor
leave
push
and
xor
je
mov
loope
xchg
jecxz
das
and
pop
inc
mov
test
mov
and
sbb
inc
pop
inc
in
ss
jo
or
ins
mov
daa
aam
push
mov
ds
sbb
adc
jo
push
pop
ins
loop
cmp
mov
idiv
lock
pop
das
push
jmp
mov
pusha
dec
mov
push
mov
ror
mov
dec
cmp
push
data16
pop
icebp
sbb
mov
xor
dec
xor
pop
xor
ins
push
test
loopne
inc
and
addr16
dec
inc
dec
test
cld
pusha
outs
loop
aam
cmp
pop
push
pusha
sbb
mov
jb
ds
loopne
mov
lea
xor
ins
jo
add
sbb
test
cmps
cmp
mov
xor
mov
fcomi
int
idiv
lock
ret
jmp
and
outs
and
outs
jp
adc
das
xchg
push
loope
out
xchg
sub
lea
(bad)
add
xor
pushf
and
in
xchg
scas
and
call
fwait
pusha
lea
mov
pop
push
add
test
(bad)
data16
push
sub
rcl
inc
pop
aad
push
in
add
xor
jecxz
jle
inc
test
dec
mov
push
pushf
add
mov
into
jg
push
add
mov
mov
xchg
cld
aam
arpl
push
lock
push
shl
in
stc
icebp
iret
retf
(bad)
dec
ror
jbe
mov
pop
xor
es
mov
push
or
daa
sbb
cmp
xchg
push
jb
addr16
jb
sub
adc
(bad)
hlt
daa
fwait
push
sub
sahf
shr
xor
jmp
movs
adc
and
(bad)
push
xor
cmps
cs
iret
(bad)
out
adc
ret
mov
sub
jp
jae
inc
lods
mov
frstorw
outs
out
js
xchg
mov
pop
xor
fisttp
ins
test
out
jle
mov
(bad)
fiadd
ins
sub
daa
mov
mov
pop
adc
dec
sti
mov
xor
dec
jge
jecxz
(bad)
jl
and
pop
scas
cs
pop
mov
cs
lods
mov
mov
cmp
aam
pop
and
stos
(bad)
icebp
das
cld
sti
pop
sbb
xchg
call
fild
sbb
sbb
pop
test
jge
inc
dec
or
movs
push
xlat
xlat
sbb
les
out
std
ret
ins
test
push
popa
xor
daa
jae
adc
push
jle
xchg
sub
push
jmp
out
xchg
inc
cmp
jns
stc
jmp
xor
jp
cwde
mov
outs
addr16
xor
mov
cmp
mov
test
test
fwait
mov
dec
cmp
ins
cld
mov
(bad)
xor
add
test
mov
xchg
popa
mov
movs
lea
jno
sar
push
jp
jmp
jno
mov
inc
sub
lea
pop
mov
stc
mov
cs
mov
mov
bound
xchg
gs
dec
mov
push
xor
aas
and
pop
jne
add
pop
in
jns
(bad)
ds
or
xor
les
xor
push
loope
mov
mov
imul
sub
mov
les
lods
dec
out
jb
mov
or
call
ss
mov
add
jecxz
repnz
pusha
pop
rcr
mov
sub
nop
cld
mov
fiadd
ja
and
cmp
mov
push
add
lea
sbb
dec
and
int3
shl
jo
dec
sti
nop
call
fcomip
aas
arpl
cmp
or
pusha
cmc
sub
add
call
outs
pop
xchg
mov
sub
mov
gs
cmp
sub
add
adc
fimul
js
or
push
and
rcr
jae
mov
addr16
xchg
fst
pop
(bad)
aad
and
jnp
jns
xor
bound
mov
mov
sbb
imul
and
cs
int3
cmp
test
lds
xchg
dec
push
arpl
test
(bad)
cs
or
sbb
retf
cmp
outs
aaa
(bad)
(bad)
test
sar
sbb
xor
mov
arpl
mov
and
adc
sahf
pop
push
imul
scas
xor
fdivr
(bad)
sbb
or
or
jecxz
stos
dec
dec
jno
jo
sub
xchg
sub
pop
pop
cmp
push
sbb
cmps
es
mov
cld
loopne
cdq
adc
(bad)
xor
cli
(bad)
push
mov
std
sbb
add
movs
sub
mov
xor
ja
daa
or
adc
dec
adc
mov
addr16
(bad)
push
cmp
add
push
fimul
lea
cmp
scas
(bad)
sti
adc
fistp
js
nop
cwde
repnz
pmulhw
cld
sub
add
int3
cmp
nop
ret
cmp
jnp
inc
sub
data16
sub
fidivr
repz
mov
xchg
cld
xchg
ret
fdivp
push
xor
mov
mov
ins
push
and
out
and
mov
mov
ret
test
das
(bad)
jmp
or
outs
sub
or
pop
xchg
lods
and
cmp
push
cmp
cmp
push
shl
in
mov
imul
mov
push
(bad)
shl
repz
and
ficom
cli
scas
and
test
mov
stc
jbe
lods
lahf
in
ja
test
fisttp
icebp
cmp
jne
enter
jne
aas
pop
pop
jmp
push
scas
adc
lods
lahf
pop
xor
or
push
retf
daa
sub
jae
cmp
rol
sbb
jmp
xchg
inc
daa
pop
aaa
jmp
mov
sahf
or
addr16
dec
pop
inc
and
adc
xlat
imul
cmp
xor
inc
xor
xchg
(bad)
int
je
inc
cmp
pop
out
fiadd
add
fwait
sbb
stos
fwait
mov
adc
into
pushf
shl
mov
call
repnz
or
ds
sub
cmp
push
xchg
dec
adc
push
sbb
cmps
sub
mov
repz
ret
fwait
iret
inc
in
dec
and
push
cli
ins
scas
push
(bad)
mov
mov
pop
fstp
(bad)
pusha
mov
dec
jmp
cmp
or
daa
jo
dec
scas
mov
inc
mov
cmp
cmc
ret
call
inc
jne
push
adc
int3
mov
cmp
xlat
cmp
xor
shrd
push
jne
add
pop
fimul
or
sbb
mov
jbe
xor
cmp
jo
test
cmp
dec
ja
repz
stc
arpl
adc
sub
in
ds
imul
cmps
gs
jae
jnp
push
add
mov
sbb
dec
mov
loope
xchg
push
out
(bad)
sbb
xchg
movs
mov
loopne
or
lock
or
loopne
rol
gs
inc
fs
rol
cmps
outs
push
dec
call
mov
push
sbb
movs
fild
push
push
out
sbb
jnp
adc
iret
out
cwde
add
loopne
lods
cld
pusha
xchg
dec
cmc
push
mov
push
outs
mov
scas
mov
fild
fcmovb
mov
add
in
mov
jle
retf
test
jge
adc
mov
mov
dec
xor
sbb
adc
mov
call
and
loop
outs
sbb
movs
fucomi
pop
and
sub
inc
les
out
jno
push
dec
hlt
inc
loopne
cmps
je
mov
dec
inc
stos
pop
daa
movs
into
fld
dec
into
jae
jp
mov
bound
les
adc
adc
cdq
add
xor
cdq
sub
xlat
push
shl
jl
dec
and
in
push
aam
cmc
mov
icebp
inc
sahf
test
repz
cwde
jmp
jmp
cmc
pop
ds
and
mov
data16
xchg
popa
pop
dec
mov
mov
jnp
test
and
push
rcr
loopne
daa
mov
mov
xchg
call
jmp
cmp
or
sub
adc
adc
xchg
sbb
lods
psubb
sub
outs
std
mov
cmp
leave
inc
inc
cmp
mov
ret
test
shr
(bad)
cmp
mov
push
dec
repnz
xchg
jae
fs
lods
addr16
xor
aaa
dec
sar
pop
or
mov
push
xor
cmp
enter
add
neg
test
sbb
dec
imul
(bad)
ja
cld
mov
xchg
sub
out
add
sbb
jo
pop
pop
jg
movups
iret
dec
aad
sbb
inc
lods
jnp
cwde
repz
fst
sahf
push
aad
and
xlat
aad
xchg
fdivr
adc
in
jns
imul
mov
clc
mov
lods
fcom
add
cs
lds
in
xchg
or
sub
imul
mov
addr16
mov
pop
fwait
aad
push
call
sar
in
mov
in
add
add
and
test
(bad)
xor
pop
fstp
jecxz
aas
stc
add
mov
fst
dec
movs
mov
cmps
sbb
movs
retf
popf
outs
xor
dec
mov
ss
fwait
adc
xchg
add
ins
push
jb
mov
xchg
repnz
inc
add
and
mov
repz
add
adc
mov
jbe
ficom
mov
jne
mov
mov
or
loope
test
fmulp
cdq
mov
ret
out
out
retf
pushf
mov
xor
jg
fmulp
or
in
push
cmps
(bad)
das
(bad)
cmp
adc
sub
aam
sar
scas
enter
jno
mov
inc
dec
xchg
sar
pop
inc
push
loopne
aad
jg
fsubr
jae
mov
xchg
sbb
cmp
stos
add
jl
mov
push
push
sub
imul
mov
dec
push
inc
xchg
mov
push
mov
inc
cmps
aad
xchg
idiv
in
add
push
adc
in
xchg
and
mov
and
stc
mov
test
jbe
or
add
jp
mov
stos
cli
leave
mov
jecxz
fdiv
pop
shr
stc
lock
mov
push
push
je
ret
sbb
xor
jge
add
or
xor
call
mov
mov
arpl
push
pop
ins
int
test
call
repz
dec
jmp
bound
xchg
(bad)
call
mov
xor
fwait
out
jbe
clc
leave
adc
xor
and
and
arpl
inc
ins
mov
sbb
cmp
add
fst
push
adc
jmp
scas
ret
into
in
clc
fld
fdivr
(bad)
pop
sbb
stc
fisub
test
push
repz
push
mov
mov
mov
cmc
push
jge
xor
cdq
iret
jg
or
xchg
sbb
mov
cmp
lea
mov
mov
add
mov
sub
jo
int3
jge
mov
mov
adc
mov
or
pop
es
mov
adc
xchg
dec
adc
add
mov
addr16
add
out
xor
dec
dec
test
adc
xor
(bad)
in
lds
sub
or
loop
sar
jns
sahf
xor
add
dec
mov
push
or
add
fistp
inc
jp
adc
jp
popf
push
daa
inc
mov
xchg
shl
and
cmp
std
arpl
lahf
leave
nop
xchg
pushf
(bad)
(bad)
(bad)
cmp
into
or
or
cld
push
or
(bad)
xlat
mov
sub
add
movs
push
jge
and
adc
adc
push
loopne
or
cwde
bound
mov
pop
into
xchg
add
call
ins
jb
mov
call
aas
xchg
lods
mov
cwde
lods
fisubr
into
sub
sbb
xchg
xor
cli
mov
ret
out
(bad)
sbb
ins
inc
test
inc
xlat
sub
retf
div
ss
xchg
and
jecxz
je
mov
(bad)
imul
or
stos
xrelease
xchg
xchg
les
add
add
or
mov
ins
int
pop
push
xchg
loope
lods
clc
push
adc
mov
push
lods
jb
push
adc
mov
adc
add
push
fcom
sbb
mov
loop
fs
leave
sbb
jae
mov
push
and
mov
aas
stos
leave
mov
mov
push
lods
add
add
stc
sub
mov
in
dec
xchg
popa
outs
pop
or
fwait
bound
adc
data16
lahf
mov
cmps
je
cld
push
lods
popf
fucomip
sbb
push
dec
ins
sbb
in
pusha
out
mov
repz
mov
call
push
jne
jp
sub
stc
inc
cmps
sub
cmc
dec
pop
cwde
out
pop
jbe
call
sub
test
(bad)
fwait
inc
inc
pop
push
cmp
jge
mov
lahf
pop
sub
ror
(bad)
and
iret
fnstcw
mov
cmps
outs
xchg
outs
mov
ds
(bad)
movs
out
or
lods
lods
test
inc
push
add
and
lds
scas
xor
stc
push
int
ficom
add
lock
mov
push
dec
mov
sub
pop
push
pop
or
aam
push
in
fwait
pop
dec
cs
loopne
shr
sbb
mov
imul
sbb
inc
aam
or
sub
mov
add
in
jl
xchg
popa
add
cmp
je
inc
mov
ss
(bad)
retf
aaa
xor
cdq
popf
xlat
sub
sahf
sbb
and
push
mov
jbe
xlat
mov
add
xor
cmp
data16
adc
xor
shr
push
jle
pop
xchg
imul
cmp
sbb
pop
aam
jl
cmps
loope
cs
pop
ficomp
addr16
lds
inc
(bad)
jecxz
imul
loopne
or
test
add
lds
daa
jo
mov
stos
into
add
jmp
mov
add
sar
jo
mov
push
mov
popf
daa
shl
mov
mov
js
dec
sbb
bound
aam
or
pop
adc
outs
inc
int3
inc
lock
or
pop
dec
mov
mov
outs
dec
push
jns
jp
sub
(bad)
xchg
test
lds
add
mov
mov
es
test
jo
mov
stos
into
add
fcom
xchg
add
in
adc
loopne
xchg
add
call
push
add
in
pop
shl
adc
movs
outs
push
inc
sbb
xchg
and
in
add
push
mov
sub
ds
xchg
add
cmp
mov
adc
inc
fs
or
and
fbld
mov
xchg
xchg
or
mov
jle
shl
stc
push
add
hlt
leave
rol
ror
and
cli
lds
out
inc
add
or
jo
mul
cdq
frstor
mov
std
mov
push
retf
je
scas
dec
mul
jg
xchg
xor
retf
push
sub
enter
adc
inc
jmp
cli
inc
jmp
push
xor
dec
mov
inc
repnz
add
stos
out
inc
push
call
pop
mov
in
sbb
xor
stc
arpl
sbb
xor
fld
adc
push
clc
repz
jns
ret
arpl
jns
daa
into
out
pop
shl
add
lds
pop
hlt
mov
sub
pop
mov
cmp
mov
in
pop
int3
or
xlat
jbe
dec
add
fsubr
dec
call
cmp
pop
and
mov
sbb
dec
dec
rcr
jnp
(bad)
add
stos
cs
repz
inc
dec
inc
mov
xchg
cld
cdq
and
call
add
call
(bad)
jecxz
(bad)
xchg
pop
jb
push
inc
dec
into
enter
pop
inc
adc
out
sub
ret
aaa
xchg
(bad)
or
pop
pop
jno
push
shr
pop
pushf
inc
jg
test
mov
dec
sbb
mov
pop
(bad)
adc
rcr
out
xlat
cmp
xor
fnsave
and
gs
in
test
(bad)
ds
adc
xchg
data16
xchg
adc
call
sub
add
or
cmp
sub
cmp
jp
jmp
mov
cmp
inc
popf
jbe
cdq
frstor
cmc
mov
mov
pop
sbb
icebp
jecxz
cmp
arpl
mov
cli
dec
push
xor
pushf
mov
jo
sub
and
inc
xchg
adc
rol
sti
arpl
dec
xchg
mov
jle
jg
add
das
(bad)
out
adc
pop
fisubr
jg
cli
xor
jecxz
clc
sub
xor
call
push
xchg
pusha
xchg
adc
push
add
ficomp
adc
lods
adc
jo
mov
cmp
xchg
imul
inc
rol
lock
add
loopne
xchg
add
in
aam
es
rol
arpl
push
xchg
enter
in
imul
outs
pop
fs
inc
inc
dec
call
cmp
inc
mov
fisttp
sbb
lods
aad
pop
mov
pusha
mov
cmp
pop
push
ss
and
mov
inc
fdiv
and
mov
or
rcr
jns
shl
test
add
and
fnsave
push
jmp
(bad)
cmc
inc
add
cmp
inc
xor
push
sub
add
ins
add
xor
dec
mov
xchg
in
mov
cmp
fistp
int3
xchg
into
idiv
(bad)
jl
int
ret
test
int
add
sub
pop
clc
inc
sbb
(bad)
pusha
fwait
inc
movs
dec
ss
dec
int3
sbb
clc
sub
or
mov
xchg
xchg
mov
int3
push
inc
cmp
fst
sar
jnp
xchg
xchg
and
add
movs
iret
lea
sti
fimul
fdivr
pmulhuw
sbb
mov
push
mov
lds
jae
repz
in
cli
xor
inc
mov
jmp
xchg
cmp
jbe
and
mov
sub
sbb
sbb
es
sub
icebp
mov
mov
aad
sub
out
pusha
scas
pushf
ins
push
push
fnsave
movs
ja
or
das
add
jg
ins
xchg
fdivr
xor
test
(bad)
popf
mov
pop
push
jecxz
out
sti
sub
push
xchg
xchg
lea
cs
movs
adc
lods
cmp
scas
push
pop
popa
scas
pop
adc
test
fld
adc
push
xchg
jns
ins
fcompp
push
push
into
rcl
mov
ret
mov
mov
scas
mov
addr16
call
rol
inc
push
add
jle
xchg
jmp
jae
xchg
xchg
pop
sub
push
sbb
stos
xchg
lods
sbb
xchg
pop
call
inc
and
test
cld
std
xlat
jae
dec
in
inc
or
daa
outs
adc
ror
mov
mov
dec
scas
inc
adc
pop
push
arpl
shl
jnp
cmc
dec
mov
xor
dec
fmul
mul
js
sbb
adc
fidiv
pop
sub
ds
stos
aam
pop
bound
cmp
mov
cmp
adc
popf
and
cdq
jg
sbb
adc
pop
mov
sub
nop
sbb
shl
ds
and
(bad)
cmp
aam
rcl
std
adc
pop
or
sub
jmp
aas
mov
or
jp
shl
cmp
adc
cmc
inc
repz
fwait
stc
ret
xchg
jmp
movs
or
imul
in
xchg
add
lock
add
in
adc
and
push
rol
loopne
xchg
add
sbb
adc
imul
jnp
sbb
jle
add
cmps
iret
out
imul
or
call
movs
arpl
call
shl
stos
(bad)
(bad)
xor
clc
push
mov
add
inc
cmps
sub
add
pop
and
adc
je
cld
inc
push
jmp
fisubr
mov
inc
sub
sbb
push
in
in
adc
test
mov
adc
dec
adc
fadd
push
arpl
cmp
or
adc
cs
dec
jbe
int3
xchg
je
bound
jl
or
ret
xor
stos
sti
lods
add
mov
pop
xor
pop
pop
xchg
into
sbb
(bad)
out
fadd
int3
xor
js
dec
xchg
fisttp
mov
test
cmps
jmp
inc
cmp
jg
mov
iret
enter
mov
cld
lock
leave
ror
jp
stc
dec
(bad)
enter
jmp
mov
dec
fimul
das
sbb
xor
call
add
(bad)
cmp
and
nop
pop
fbld
out
imul
mov
and
xchg
xor
es
jne
call
sbb
mov
mov
(bad)
into
pop
or
jl
mov
test
sahf
push
icebp
xor
or
lds
push
in
and
(bad)
test
adc
jg
pop
out
pop
test
add
leave
clc
mov
mov
std
test
xor
xchg
fcom
add
das
dec
add
ror
fstp
jb
pop
sub
shl
test
lahf
add
mov
imul
sub
movs
ror
and
stos
sar
mov
fimul
mov
inc
ret
lahf
sti
mov
test
dec
inc
push
pop
aam
push
dec
sbb
js
ficomp
addr16
retf
fnsave
stc
jns
imul
nop
xchg
out
iret
ins
mov
add
bound
push
mov
fsub
push
pop
fmul
and
mov
pop
jl
shl
sub
movs
loope
add
sub
cmps
test
add
inc
or
pop
mov
push
in
leave
push
cmp
mov
push
scas
mov
xor
lea
fdivr
inc
gs
mov
jecxz
ins
jmp
movs
mov
(bad)
xchg
mov
push
sbb
in
add
imul
lods
push
inc
test
pop
push
fnstenv
ret
leave
mov
cs
fisttp
lea
dec
mov
mov
xchg
daa
push
push
mov
imul
jle
js
hlt
cmp
dec
in
fidivr
or
mov
in
pushf
in
icebp
js
int3
pop
sub
xor
les
mov
call
leave
mov
cmps
iret
mov
sbb
clc
jmp
icebp
jp
imul
mov
inc
mov
loope
outs
or
dec
scas
shl
and
lods
not
mov
stos
push
fcomp
pop
ins
loopne
test
push
mov
and
shr
mov
pop
mov
and
mov
ror
neg
popa
jae
mov
push
bound
adc
pop
cmp
mov
aaa
adc
and
or
mov
push
std
bound
enter
dec
push
and
xchg
push
jbe
sbb
lahf
pop
rcl
(bad)
fwait
movs
popf
nop
gs
push
jecxz
in
rol
leave
mov
pop
push
neg
fnsave
ss
mov
jns
outs
cmps
lea
adc
xchg
lock
sub
ds
iret
fcom
pusha
call
cmp
aaa
add
repnz
xchg
lock
les
add
jmp
sbb
mov
into
lahf
mov
adc
movs
or
mov
lods
jo
jmp
fiadd
mov
sub
mov
mov
lea
cmp
xchg
fsub
and
(bad)
mov
test
leave
xchg
fld
cmp
imul
jae
and
mov
in
mov
cmp
xchg
dec
cs
inc
repz
add
sti
inc
cwde
into
mov
lock
aaa
inc
mov
mov
cdq
mov
mov
imul
lahf
xchg
stos
inc
es
mov
mov
inc
cmp
xlat
fcmovnbe
mov
jno
gs
movs
sbb
push
iret
shr
push
std
sbb
xchg
nop
jo
inc
pop
repz
iret
mov
sub
repz
cwde
and
mov
jae
add
dec
ja
cmp
jp
mov
je
stos
push
xor
aam
jg
sbb
or
pop
stos
adc
adc
fcom
mov
mov
icebp
or
stc
sub
or
jl
add
repnz
aad
xlat
dec
push
js
add
push
xchg
shl
cmp
and
es
cwde
into
push
rcl
icebp
imul
lock
in
or
arpl
sbb
push
jmp
rol
jg
lods
test
sub
popa
mov
push
dec
sahf
and
aam
jl
xchg
jbe
loope
(bad)
sub
icebp
cdq
ror
hlt
dec
rol
enter
cmp
xchg
adc
sbb
sbb
push
or
clc
in
jns
inc
repnz
fs
mov
mov
cmp
push
ds
mov
jge
mov
mov
inc
jmp
push
je
inc
cld
mov
jecxz
cmp
jge
xor
mov
leave
xchg
or
call
ds
mov
pop
xchg
aam
xor
lahf
mov
clc
scas
fisttp
gs
es
add
or
inc
adc
in
(bad)
cmp
aam
mov
mov
sbb
jmp
ret
xchg
fdivr
mov
lods
lea
outs
adc
or
mov
call
movs
cmps
jmp
jl
or
div
or
dec
nop
and
ror
frstor
imul
pop
std
popa
lock
ror
les
stc
(bad)
scas
pushf
outs
sahf
loopne
jnp
pop
ins
xchg
data16
push
(bad)
clc
in
outs
push
imul
in
sbb
or
(bad)
pop
xchg
lods
jno
pusha
js
repz
sbb
aaa
inc
jo
xor
jle
dec
cmps
cld
xchg
push
pusha
sbb
nop
mov
jb
imul
push
adc
push
adc
aas
stos
bound
xor
cdq
cdq
pushf
in
mov
pop
aas
fadd
mov
add
scas
mov
or
mov
loop
inc
xchg
push
sub
pop
and
jmp
xor
bound
mov
data16
rol
dec
outs
sti
in
cwde
enter
inc
adc
add
popf
repz
ins
fisub
jns
inc
(bad)
mov
les
stc
add
xchg
xor
xchg
leave
pop
in
jnp
and
fcom
dec
imul
or
inc
push
xchg
pushf
cmp
add
ins
icebp
xor
sub
popa
fild
daa
cli
mov
mov
adc
and
in
bound
retf
jno
lahf
xchg
jne
mov
lods
or
pop
data16
xor
mov
sti
xchg
scas
cmp
loop
repnz
xor
dec
loope
cld
cmp
sub
dec
stc
test
ror
add
shr
add
retf
pop
idiv
popa
jmp
sub
int
add
in
xchg
add
jmp
cli
add
jmp
popf
or
in
or
hlt
enter
clc
sub
rol
movs
xor
sar
aam
sar
int3
(bad)
aad
mov
mov
cmc
pop
mov
fst
mov
nop
or
hlt
int3
adc
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
shl
loope
xchg
fucomp
in
rol
call
in
imul
in
cdq
add
loopne
xchg
add
call
lea
in
test
sbb
xchg
ins
in
popf
or
loopne
xchg
add
call
cdq
or
cld
xchg
sbb
adc
add
in
add
test
inc
loop
xchg
shl
xchg
add
lock
mov
aam
loop
pop
or
ror
push
aam
iret
lock
cmp
fs
mov
cld
pop
push
pop
cmps
push
out
ja
into
or
inc
repnz
div
xchg
repz
shl
test
add
push
xchg
(bad)
cmp
pop
aas
jl
adc
bound
out
xchg
add
(bad)
add
stos
dec
fbstp
or
and
pop
addr16
std
loope
jmp
push
adc
jae
mov
push
cdq
dec
or
loopne
sbb
add
hlt
mov
out
loope
loop
pop
or
mov
dec
nop
xchg
idiv
adc
pminub
pop
daa
pop
mov
in
mov
test
push
mov
mov
leave
adc
sub
or
push
push
fwait
xor
adc
int
ret
and
fidiv
dec
inc
inc
jmp
add
lock
stos
rcr
repnz
bound
mov
out
fsub
clc
xchg
loope
aas
imul
lods
pop
loopne
es
ss
mov
xor
fwait
pop
mov
adc
cmps
push
cmps
lahf
jmp
adc
push
loope
push
sub
add
adc
xchg
test
push
mov
iret
mov
clc
push
(bad)
fsubrp
sub
out
xor
mov
ss
ds
xor
mov
les
adc
xchg
pushf
out
inc
sbb
lahf
les
push
push
sub
add
jmp
shl
test
aam
(bad)
fldcw
lods
jge
aad
(bad)
aas
xor
adc
retf
dec
dec
pop
xchg
ds
inc
cld
jg
jbe
hlt
loopne
and
fistp
dec
jmp
add
cmps
es
mov
out
movs
sbb
mov
or
js
xor
sub
shl
sti
and
push
adc
pop
lods
loop
fcom
icebp
dec
addr16
inc
fmul
xchg
mov
add
dec
xor
add
xor
cld
xchg
jne
movs
cmps
js
imul
jae
add
sub
pop
jnp
sbb
xor
fdiv
cmp
popa
lahf
dec
outs
pop
cmc
push
es
ret
bound
sbb
cmp
and
dec
ja
cwde
sahf
xor
shl
imul
stos
test
ins
or
icebp
xor
stos
xchg
add
fmul
ins
or
in
shl
ror
repz
inc
loopne
popf
or
in
add
loopne
xchg
add
cld
cdq
sbb
loopne
sbb
mov
push
inc
fs
leave
leave
das
xor
cld
mov
mov
in
xchg
adc
jo
xchg
pusha
mov
ret
and
int3
push
stc
dec
pop
cmc
es
dec
mov
jae
pop
or
mov
outs
jne
and
cmovo
arpl
jno
jns
aaa
enter
cmp
sbb
xor
cmps
sbb
pop
and
cli
das
mov
xchg
test
(bad)
repz
dec
adc
(bad)
cli
jae
pop
scas
xor
pop
cld
rol
dec
mov
cmps
mov
mov
cmp
mov
jge
mov
inc
jno
adc
mov
xchg
jae
cmc
aas
and
ror
mov
in
mov
jbe
jnp
push
sub
xor
add
(bad)
test
mov
add
lock
call
pop
daa
movs
cmp
ret
es
int
mov
lods
lods
inc
mov
pop
inc
sbb
call
pop
ins
pop
xlat
dec
stos
ss
mov
adc
sahf
sahf
popf
out
sbb
shr
ret
test
dec
mov
clc
inc
(bad)
into
std
mov
loop
inc
jge
out
mov
add
sahf
scas
popa
add
xor
ret
test
retf
clc
mov
dec
std
call
dec
mov
push
(bad)
dec
add
pushf
push
lds
(bad)
std
ss
xchg
arpl
xor
cdq
icebp
push
mov
enter
push
jge
mul
sbb
inc
movs
fsubr
pop
push
outs
cdq
pop
repnz
fdiv
cmp
sbb
and
or
ins
jge
cmp
xor
and
mov
jnp
adc
add
fs
(bad)
xor
lock
sub
daa
mov
movs
std
mov
pminub
sub
dec
and
enter
ret
fimul
repz
jl
neg
pop
lods
arpl
xchg
movs
mov
es
mov
or
movs
pop
mov
sub
jno
sub
mov
xor
and
sub
mov
push
jb
adc
call
mov
push
call
int
pop
add
xchg
jae
sbb
cmp
das
int3
out
push
and
cmp
jne
retf
mov
fwait
push
xchg
jle
out
das
aas
and
sub
add
cmovb
popf
mul
sbb
dec
pop
pop
push
add
gs
mov
sbb
test
fist
fiadd
cmp
hlt
lds
ret
dec
pop
vmread
or
shr
xchg
and
je
aad
loope
dec
ins
pop
cdq
xchg
and
cmp
stos
push
sbb
leave
dec
cld
or
xchg
js
jbe
add
mov
ret
xor
loope
push
das
push
mov
cwde
(bad)
cmp
mov
test
(bad)
cmc
sub
test
popf
cmp
adc
and
aad
add
jg
jns
mov
inc
ds
ss
test
stc
push
int
loopne
push
ins
or
cmp
cmp
pushf
nop
aam
dec
lods
ins
inc
test
iret
out
outs
test
rol
call
fs
retf
aam
sub
xor
into
cmp
popa
retf
aam
iret
inc
push
or
lds
int
test
mov
jo
adc
test
aaa
shr
xchg
es
(bad)
xchg
add
add
pop
jne
cs
stos
push
and
mul
repnz
mov
add
mov
or
sub
(bad)
jecxz
sbb
cmp
sbb
xchg
xor
sbb
in
mov
loopne
xchg
add
lods
cdq
test
mov
pop
add
fs
rol
out
adc
mov
mov
in
in
xchg
std
in
mov
aaa
fnsave
inc
ins
dec
jg
cdq
push
sbb
add
scas
hlt
cld
xchg
imul
into
lods
shl
ins
mov
fwait
pop
push
mov
cmc
sbb
adc
xor
cdq
aad
gs
stc
out
sbb
dec
jne
gs
fadd
sti
cmps
mov
mov
sbb
jl
aaa
(bad)
lock
sahf
and
imul
xchg
mov
rcr
scas
add
rcr
addr16
retf
aad
mov
sbb
rcl
cli
mov
sub
daa
ret
mov
(bad)
jno
adc
scas
popa
xor
cmps
mov
inc
sub
pop
jp
bound
dec
es
sti
mov
xchg
or
inc
je
cmp
(bad)
dec
jl
into
nop
sbb
mov
push
sub
test
push
je
ror
xchg
lods
mov
dec
out
test
cld
xor
rcl
repnz
pop
adc
cmp
adc
xchg
ins
imul
dec
mov
dec
mov
add
jecxz
mov
in
lea
mov
shl
retf
dec
mov
rcl
(bad)
loop
inc
in
xor
faddp
xchg
add
call
loope
popa
lahf
jle
mov
hlt
retf
sub
xchg
add
push
bnd
adc
inc
sub
cmp
test
imul
dec
mov
cmp
test
xor
loop
ins
imul
scas
add
dec
pushw
adc
add
imul
and
inc
fiadd
aad
add
inc
iret
push
js
sub
cdq
jecxz
pop
(bad)
xchg
pop
int
mov
mov
test
mov
adc
adc
ss
or
mov
retf
jbe
push
and
add
mov
sbb
fbld
retf
cmp
adc
dec
pushf
das
sbb
jle
and
add
dec
fucomi
imul
sub
es
ret
stos
xchg
mov
push
into
leave
movs
sbb
pop
push
mov
lods
popa
pop
xor
xor
lods
sbb
and
sti
retf
xchg
mov
(bad)
or
add
add
dec
adc
xor
arpl
push
push
mov
dec
repz
xor
dec
out
lahf
(bad)
les
pop
jne
shl
clc
xchg
(bad)
pushf
xor
imul
cmp
add
in
cdq
or
cld
lea
loopne
xchg
add
test
adc
sub
lea
in
rcl
ins
nop
xchg
imul
sub
pop
shl
inc
shr
add
retf
xor
data16
mov
shr
xchg
(bad)
dec
ret
movs
jnp
fmul
inc
out
inc
mov
cmps
dec
loope
adc
(bad)
sub
arpl
sub
inc
and
adc
fbstp
mov
gs
leave
mov
mov
stc
push
scas
pop
nop
aam
jmp
jle
sbb
xchg
push
or
fisub
pop
imul
loopne
fcom
pop
pushf
mov
dec
dec
inc
sti
aad
retf
mov
sub
imul
cmp
sar
je
mov
mov
sbb
(bad)
push
and
bound
vmovq
ret
repnz
shl
in
stos
mov
lds
mov
jae
push
cmps
push
neg
pop
imul
scas
xchg
cmp
push
dec
sbb
cwde
hlt
jl
or
inc
jbe
jo
xor
xchg
movs
inc
sbb
fisubr
lahf
xor
psubw
cwde
ins
and
in
scas
add
into
enter
lahf
js
xchg
pop
push
retf
aas
in
and
jb
adc
add
aas
cmp
pop
sbb
push
test
mov
and
mov
xchg
cli
arpl
sbb
int
lods
pusha
rol
jl
adc
dec
ror
mov
out
fadd
cmps
push
div
mov
dec
test
mov
mov
ss
add
addr16
or
jecxz
aad
xor
push
cmp
mov
retf
and
add
retf
inc
xor
out
call
lds
jl
lahf
inc
mov
mov
push
cwde
shl
sbb
mov
mov
dec
mov
inc
push
and
dec
cmps
mov
mov
call
xor
pop
xchg
adc
push
ins
push
out
or
or
ret
mov
mov
cwde
pop
add
push
xchg
push
pop
das
movs
loopne
movs
icebp
mov
ins
push
push
or
sub
or
lds
nop
cmp
xor
int
add
movs
repz
mov
mov
pop
mov
bound
icebp
push
cmp
mov
call
or
loope
and
sbb
cdq
and
or
bound
shl
leave
mov
and
popa
sub
push
movs
std
push
jp
inc
jge
jge
nop
dec
cmps
retf
and
jmp
jbe
call
jnp
push
test
cmp
xchg
pop
dec
(bad)
sbb
mov
sbb
jae
adc
in
cdq
mov
xor
jae
pop
xor
adc
pusha
stos
mov
dec
movs
cwde
pop
jbe
pop
push
call
mov
sub
dec
cld
dec
aas
fstp
cmps
mov
pop
(bad)
inc
mov
sbb
xchg
shr
pushf
jo
shl
aad
rcr
dec
outs
int
test
test
push
int
adc
rcr
dec
fisttp
add
movs
lock
cld
mov
mov
and
xor
neg
retf
dec
mov
adc
dec
adc
jnp
and
and
add
and
mov
push
aam
mov
mov
in
jno
in
aam
pop
sbb
cmp
cmc
mov
(bad)
stos
bound
mov
pop
jne
sub
ds
and
mov
cmp
and
stos
push
je
aaa
xor
stos
mov
inc
mov
dec
fst
dec
jnp
mov
and
mov
loop
ins
out
cmp
ror
pop
int3
enter
outs
cli
or
xchg
cld
mov
sar
sbb
or
imul
ffreep
sar
mov
mov
push
mov
shl
loope
jge
dec
leave
adc
sbb
dec
pop
fwait
loope
mov
ror
jne
and
jae
in
push
cmp
and
inc
inc
mov
dec
aaa
push
add
adc
jne
jecxz
dec
mov
fist
xor
mov
jno
cmp
and
scas
add
pop
in
push
and
shr
sub
pop
stos
sbb
mov
cdq
push
dec
xor
xchg
push
pop
pop
callw
neg
and
mov
jb
sbb
int3
inc
std
enter
into
xchg
div
pop
es
fimul
jle
xor
jp
add
dec
(bad)
gs
xchg
inc
xor
jle
pop
fldenv
mov
outs
adc
es
jmp
inc
loopne
cdq
or
cld
cdq
and
enter
call
cdq
adc
lods
or
lods
les
jmp
dec
and
push
push
jo
push
int
and
push
scas
and
inc
les
xchg
and
in
xchg
sbb
loopne
cmp
movs
push
or
mov
pop
mov
push
call
xor
xchg
mov
shr
cwde
ret
stos
(bad)
and
mov
call
mov
push
adc
mov
adc
pop
stos
jne
lods
fld
push
mov
push
imul
jecxz
xor
jo
push
fisub
test
pop
es
and
mov
mov
mov
add
dec
ins
xor
jno
sub
mov
enter
xor
xlat
sahf
outs
push
xlat
and
xchg
and
repnz
sar
loope
out
add
xchg
leave
call
jo
mov
xchg
mov
stos
push
loopne
mov
adc
xor
add
mov
xchg
add
sub
push
bound
pop
rcr
jp
jmp
in
test
shl
push
and
imul
inc
nop
mov
mov
sbb
mov
cmp
add
push
into
pop
neg
movs
pop
cmps
xchg
mov
lods
push
pop
xchg
sbb
xchg
dec
xchg
cmp
inc
adc
push
inc
jmp
mov
test
je
push
cdq
dec
or
and
ret
xlat
ds
dec
movs
aad
bound
mov
pop
jp
aas
out
fisub
je
inc
xchg
xor
(bad)
push
push
(bad)
stc
je
(bad)
mov
out
retf
(bad)
mov
push
ss
mov
mov
shl
push
stos
out
pop
mov
push
xchg
cmp
movs
test
fadd
or
test
aaa
mov
xor
mov
cmps
mov
(bad)
out
xchg
mov
jb
adc
pushf
mov
mov
cmps
jns
jns
not
pop
mov
mov
inc
mov
add
push
std
cmps
mov
add
xchg
into
call
fisub
sbb
leave
jb
inc
je
into
sub
mov
xor
mov
fild
cmps
hlt
sub
push
inc
fadd
cld
shr
xor
xchg
pop
mov
push
ror
lods
mov
mov
(bad)
fnstenv
out
ficom
push
fdiv
in
jnp
or
fisttp
push
mov
or
mov
cmps
xchg
or
aad
call
popa
leave
push
mov
mov
dec
mov
daa
push
fiadd
and
or
xchg
push
sub
lock
sub
cmps
leave
xlat
pop
dec
and
int
div
jns
or
je
sbb
mov
mov
jmp
aam
bound
fsub
jne
jae
xchg
pop
lods
or
and
push
adc
neg
inc
lods
xchg
and
xchg
push
popf
push
pop
fiadd
jns
inc
sub
lock
leave
mov
add
fs
push
call
push
mov
jno
in
push
(bad)
fistp
bound
test
add
cmps
(bad)
call
idiv
fsubr
call
fld
pop
jecxz
arpl
scas
fst
xor
mov
or
std
dec
mov
inc
aam
nop
jne
sub
js
mov
cmp
paddusb
mov
(bad)
push
xor
mov
ret
push
and
scas
sbb
stos
jmp
and
mov
mov
adc
popa
mov
scas
pop
loope
(bad)
sti
dec
mov
push
test
ins
mov
or
std
push
dec
xchg
rcl
aas
cmp
lock
ud1
loopne
call
in
xchg
jbe
lods
cmps
jno
cmp
das
int
shl
inc
push
add
add
mov
movs
jns
movs
mov
xchg
out
mov
ja
repz
retf
in
or
sub
scas
ficom
cli
loopne
bound
push
and
fsub
leave
jmp
inc
or
js
and
(bad)
mov
mov
xor
cmp
ja
sbb
mov
cmp
pusha
clc
imul
mov
fdiv
sbb
shr
inc
push
jo
push
cmp
not
sub
popf
call
cmps
ins
cli
movs
and
cmp
ja
adc
mov
ds
cmp
jecxz
ds
fidivr
cmp
das
(bad)
jecxz
pop
pop
pop
(bad)
mov
movs
mov
in
fld
inc
rol
(bad)
mov
fsub
out
addr16
test
call
cmp
add
sbb
bound
lfs
iret
int
or
pop
xchg
std
repz
xor
je
addr16
pop
mov
xor
xchg
movs
mov
(bad)
aam
xor
xor
sbb
adc
dec
test
es
inc
cmp
shr
mov
ss
pusha
hlt
(bad)
mov
sub
sub
xor
bnd
les
inc
xor
jl
loopne
(bad)
mov
loopne
push
(bad)
stc
xor
push
jmp
data16
pop
push
sbb
(bad)
adc
mov
fsub
xor
lods
stc
addr16
jl
enter
sti
adc
outs
xor
or
shr
pop
pop
cmc
mov
psllq
stos
and
xchg
mov
pop
mov
ja
sbb
add
fdiv
in
add
fild
push
retf
pusha
sub
lea
dec
dec
mov
pop
mov
call
inc
push
aam
scas
fld
div
jne
push
xchg
in
mov
cmp
fstp
jl
test
adc
(bad)
xchg
mov
inc
ja
mov
lock
or
cwde
mov
jae
(bad)
and
push
fsub
movs
sbb
mov
adc
cmp
inc
mov
wrmsr
into
mov
sub
xor
data16
out
sub
fwait
xchg
add
fdivr
ss
mov
mov
cmp
xrelease
mov
jmp
pop
popa
jb
inc
addr16
dec
retf
outs
lods
in
mov
xor
or
xchg
jge
cmc
clc
aas
div
out
pop
mov
jns
and
outs
and
sbb
(bad)
int3
iret
mov
sub
jl
cmp
and
mov
push
hlt
int3
inc
jecxz
jmp
push
cmp
inc
mov
mov
loopne
outs
dec
inc
xor
sbb
push
ds
scas
inc
or
stc
push
loop
jmp
fistp
push
pmaxsw
xchg
popf
aam
(bad)
mov
cmp
mov
mov
xchg
mov
dec
pop
mov
mov
sbb
loop
mov
shr
rcl
es
sub
leave
mov
js
scas
pop
fild
clc
mov
mov
sar
stos
lock
push
(bad)
sub
inc
aam
cmp
das
in
push
pop
jecxz
(bad)
loop
(bad)
jecxz
fistp
mov
mov
dec
push
or
dec
inc
xor
push
test
mov
(bad)
movs
add
cmp
fidivr
and
mov
cld
mov
int
popf
jmp
test
or
add
jno
clc
and
jo
nop
jb
aam
shl
inc
add
clc
aam
or
stos
xor
cmp
stos
push
xchg
mov
sar
jmp
pop
je
cmp
mov
and
sbb
lods
in
xchg
push
mov
lods
psubusb
fwait
push
adc
or
mov
inc
ds
inc
mov
frstor
in
ss
sahf
jns
mov
dec
dec
mov
jne
lods
aaa
fcom
lahf
retf
mov
ds
lahf
into
je
jns
push
mov
(bad)
ins
or
jmp
mov
pop
nop
lods
mov
and
inc
xor
dec
daa
cs
lds
or
cmps
mov
push
jg
jae
test
out
inc
test
inc
mov
xchg
clc
dec
fsubr
mov
test
mov
fidiv
inc
fdiv
pop
mov
cmc
ret
sbb
mov
push
(bad)
push
cdq
fwait
imul
jle
sub
aad
xchg
mov
fdiv
frstor
jbe
push
aad
clc
in
inc
sub
sub
test
pop
jge
fist
call
and
push
out
fdivr
mov
push
xor
aaa
les
mov
and
(bad)
dec
enter
jl
repnz
imul
sub
add
faddp
sub
jbe
lahf
sbb
cmps
mov
das
or
dec
xchg
aam
push
rol
add
loopne
cs
repnz
push
cmp
jns
lea
sub
fist
shr
dec
mov
lods
mov
mov
test
popf
pop
lods
repz
cli
je
sub
cmp
retf
pushf
sahf
adc
adc
movs
add
inc
test
xchg
ror
mov
(bad)
lods
(bad)
mov
fwait
xchg
test
dec
sar
push
or
int
pop
jae
pop
ja
sbb
dec
pop
ss
int
push
fcom
xchg
test
sub
aam
cmp
sti
dec
pop
sub
scas
dec
mov
dec
pop
ret
ss
jmp
xor
dec
sub
xchg
pop
repz
xchg
cmp
mov
mov
jg
das
stos
ja
je
sub
nop
jnp
jmp
push
xor
adc
sar
scas
xchg
lock
sahf
cmps
aam
ins
adc
int3
dec
aad
mov
push
and
in
mov
pop
ins
pop
push
loope
(bad)
addr16
add
inc
retf
scas
add
dec
jne
add
add
jb
sahf
sub
enter
and
test
mov
cmps
fmul
fsqrt
mov
and
jb
rcl
ret
arpl
out
push
push
jle
mov
xor
pop
cdq
cmp
jmp
inc
in
popf
or
loopne
or
loopne
xchg
add
lods
adc
and
in
rol
ins
push
pop
cmps
sub
dec
call
fcmovbe
sub
pop
xchg
and
jecxz
xor
mov
mov
out
sbb
popf
call
retf
mov
int3
out
aam
ja
push
lods
call
aad
hlt
gs
jno
fdiv
inc
fimul
ja
call
push
jb
out
adc
stos
inc
mov
div
mov
out
pop
dec
aad
xchg
and
inc
dec
repz
add
not
stc
stc
push
xchg
dec
cmp
dec
scas
dec
xlat
xor
add
cmp
cmps
lds
sub
int
mov
sub
bound
sbb
cmp
xor
dec
nop
xchg
jmp
add
lods
std
xor
inc
gs
clc
mov
cld
aad
daa
add
cmc
in
in
mov
add
xchg
imul
dec
bound
cs
cmc
test
lock
iret
push
sub
(bad)
pop
add
clc
cmc
mov
mov
scas
push
leave
push
or
mov
push
enter
xchg
push
jle
xchg
stos
xor
outs
sbb
in
lahf
cdq
sbb
xor
retf
and
adc
mov
jl
call
mov
push
neg
pop
das
test
out
add
arpl
jns
mov
mov
add
sbb
aaa
jne
and
pop
xchg
inc
enter
arpl
and
sub
jecxz
push
and
retf
mov
ret
sar
mov
cmps
(bad)
lock
xor
jp
jnp
lea
pop
mov
aaa
pushf
je
inc
in
xor
(bad)
jo
or
das
mov
repz
cmps
mov
in
pop
ins
mov
push
adc
sub
xchg
fistp
lds
inc
into
popa
imul
out
jns
sub
push
ds
jb
outs
retf
shr
test
mov
cmc
add
popa
test
jmp
add
stos
dec
push
outs
les
mov
sub
loop
lds
adc
mov
mov
stos
xchg
and
add
movs
mov
add
sub
fcmovnb
in
sbb
sub
in
dec
shl
pop
push
je
xchg
sub
je
xor
push
and
cmp
dec
(bad)
out
(bad)
shl
fistp
mov
sub
je
xchg
retf
push
inc
xchg
push
xchg
dec
sti
fdivr
int3
sub
ret
stos
jno
pop
pushf
jnp
into
sbb
out
sbb
push
jmp
bound
mov
mov
(bad)
or
pop
sub
out
mov
jmp
mov
or
jl
bnd
mov
push
in
pop
pop
int
loop
push
fiadd
lods
dec
shr
iret
test
je
(bad)
jmp
lods
jge
rol
mov
inc
mov
popa
test
js
xchg
std
dec
mov
xchg
sbb
or
cmp
jbe
mov
adc
and
mov
cmp
es
pop
xchg
mov
sub
push
into
adc
inc
mov
scas
rol
cmp
or
cmpps
ins
fwait
mov
push
mov
add
sub
push
xchg
cmp
adc
inc
mov
pop
cld
out
push
cmp
cmp
jb
xor
xchg
xor
loopne
repnz
mov
or
cdq
mov
pop
ins
ja
rol
out
out
shr
rcl
adc
repz
inc
jae
test
xacquire
mov
cmp
in
es
fnsave
jne
sbb
lock
pop
pop
psubsw
mov
mov
sbb
and
sbb
test
mov
test
xlat
daa
jns
sar
xchg
stc
pop
(bad)
lods
das
jns
pop
dec
ins
es
jle
mov
js
test
xlat
and
in
lahf
and
inc
xchg
fmul
movs
add
and
or
mov
(bad)
leave
dec
mov
mov
and
or
ret
ror
cli
aad
imul
imul
pop
fild
sub
push
js
cmp
add
jecxz
jecxz
in
cld
fwait
shl
in
pop
nop
push
cmp
mov
je
and
xchg
gs
pop
jmp
retf
test
div
retf
fist
hlt
out
mov
bound
(bad)
adc
in
inc
inc
pop
mov
popf
jno
movs
cmc
adc
into
mov
and
or
sub
sbb
add
sbb
pop
xchg
pop
stos
rcl
cwde
mov
pop
dec
lock
xchg
cmc
xchg
or
sbb
in
lods
addr16
(bad)
pop
pop
cmps
jns
jmp
and
sbb
es
sti
xchg
add
rol
enter
jecxz
sub
pop
cli
and
fsub
and
pushf
mov
test
mov
pushf
dec
pop
mov
cdq
(bad)
mov
pop
(bad)
mul
outs
into
and
cmp
jns
lods
retf
xor
inc
enter
mov
scas
dec
int3
mov
push
jp
or
jmp
sub
pop
dec
test
jmp
ins
jmp
and
mov
push
in
xor
and
(bad)
clc
mov
and
inc
stos
mov
add
sub
bound
inc
add
cld
jecxz
outs
mov
ds
ret
aam
mov
push
sbb
push
cli
aam
or
sub
mov
sbb
dec
mov
mov
iret
fld
rol
(bad)
sub
mov
adc
popa
jnp
addr16
and
mov
ret
or
inc
mov
jbe
jne
dec
sbb
and
gs
cmp
ja
pop
cli
fcomi
jns
mov
outs
sbb
stc
shl
imul
xlat
iret
cmp
pop
pop
aaa
into
stos
cmc
lock
pop
mov
call
stc
aad
xor
xchg
push
and
gs
fs
sbb
loop
sbb
test
and
and
icebp
sub
xor
cmp
aas
enter
mov
push
jmp
fcomp
aam
lds
pop
out
test
loop
mov
enter
add
xchg
nop
icebp
repnz
icebp
std
xor
adc
daa
push
push
mov
jge
ret
mov
lds
mov
in
jmp
test
or
or
shr
sbb
xchg
xor
in
xchg
or
in
add
test
daa
cld
mov
popf
js
jns
iret
and
mov
sar
icebp
dec
les
int3
shl
(bad)
dec
stc
cmp
cli
movs
sub
sub
leave
pop
outs
mov
adc
stos
mov
mov
out
js
daa
les
mov
sub
sub
test
push
fistp
icebp
xchg
mov
arpl
les
jae
imul
je
add
in
in
add
loopne
xchg
add
in
rol
ins
push
pop
and
mov
in
in
xchg
std
mov
test
repz
mov
js
shl
dec
mov
mov
and
fisubr
xor
ins
xor
int3
xchg
sahf
in
push
sbb
pushf
sub
cmp
repz
ret
fsub
xor
arpl
cmp
jecxz
fwait
mov
or
xchg
inc
adc
sub
rol
adc
pop
dec
imul
es
jl
pop
aas
adc
sub
dec
inc
cmp
div
push
sar
lea
dec
in
aaa
punpcklwd
dec
pop
es
xor
loopne
sbb
dec
stc
mov
dec
mov
dec
pop
push
add
and
xor
test
mov
movs
ficom
fadd
hlt
sbb
mov
inc
adc
out
inc
std
call
xchg
aaa
or
(bad)
jle
xchg
dec
imul
test
jnp
push
data16
mov
clc
cdq
nop
mov
dec
push
push
mov
mov
push
gs
mov
push
cdq
cmp
and
adc
adc
mov
sub
es
cdq
fisubr
outs
sbb
mov
adc
popf
stc
test
push
adc
mov
sbb
es
xor
aad
dec
stos
js
test
cmps
stc
ficomp
and
ss
iret
cmp
dec
stc
inc
out
add
and
jo
and
fild
(bad)
cmp
fs
loope
dec
dec
in
fcmovnbe
or
lods
jg
ret
inc
sub
xchg
fisttp
sub
jno
add
movs
rol
dec
mov
dec
sbb
test
inc
popf
push
xchg
inc
gs
mov
xor
mov
xchg
mov
add
jbe
add
sbb
fimul
xlat
movs
in
movs
jmp
xor
sbb
jl
and
sbb
out
jl
cmc
imul
jl
push
jle
cld
movs
nop
lods
mov
mov
adc
mov
jge
popa
cmps
sbb
ret
inc
push
in
mov
inc
mov
add
loopne
cmp
icebp
mov
mov
cdq
call
mov
js
retf
jns
imul
mov
add
les
sbb
dec
scas
and
mul
mov
cs
test
push
mov
pop
lock
hlt
cmps
and
adc
lods
jae
cmp
pop
jmp
adc
dec
rol
in
clc
popf
or
loopne
xchg
add
in
adc
out
rol
out
(bad)
shl
(bad)
sbb
xchg
and
loopne
add
test
std
push
inc
leave
cli
jge
mov
lods
xchg
cmp
out
addr16
mov
push
bound
stos
shr
outs
test
test
xchg
outs
clc
mov
xchg
mov
aam
leave
aad
pop
and
test
ss
inc
movs
mov
mov
je
mov
stc
mov
jmp
xchg
stos
push
pop
jl
fst
hlt
jnp
dec
(bad)
cmc
inc
(bad)
jae
or
push
ss
mov
test
and
int3
push
pop
stc
cmp
mov
shl
je
mov
repnz
sbb
dec
nop
dec
retf
pop
push
push
mov
and
cli
mov
add
sbb
popa
and
pop
sbb
lock
pop
pushf
pop
imul
pop
retf
rcr
or
xor
lea
loop
cmp
push
push
add
(bad)
shr
lea
retf
lds
gs
std
iret
mov
adc
dec
out
cli
iret
outs
arpl
pop
(bad)
push
sbb
(bad)
adc
(bad)
xchg
les
dec
sbb
lods
aam
ret
hlt
in
ins
mov
push
xchg
mov
gs
ss
aam
fstp
mov
dec
fldz
dec
test
iret
movs
and
(bad)
aad
fmul
neg
jno
xor
shl
and
clc
adc
pop
xlat
retf
cmp
mov
push
dec
mov
cmp
inc
fidiv
out
xor
jmp
aam
movs
stc
add
ret
mov
dec
xchg
pop
aad
pop
xchg
add
test
(bad)
sbb
sub
movs
repnz
pop
sar
out
push
ret
dec
xor
xor
xchg
je
cmp
out
pop
push
cli
dec
loop
dec
daa
sbb
mov
int3
pop
jmp
pop
xchg
xorps
mov
xor
test
pushf
dec
mov
into
sub
(bad)
mov
outs
mov
test
sbb
xor
dec
loop
(bad)
into
mov
into
or
dec
jle
je
xlat
mov
adc
cmp
std
push
cdq
popf
scas
leave
push
and
sub
add
dec
cld
pop
shl
pop
es
test
test
pusha
xlat
jbe
ja
mov
idiv
pop
cmps
sub
ins
into
bound
or
ins
stos
fild
std
sub
cwde
adc
mov
xlat
iret
xchg
mov
cmp
inc
mov
mov
and
aas
cmp
adc
add
fcmovnu
sbb
aad
inc
add
sub
scas
(bad)
and
outs
ds
jns
ins
inc
call
clc
lds
or
lock
cmp
(bad)
jnp
int
pop
cmps
fcom
mov
sbb
sub
sbb
and
inc
and
out
(bad)
mov
jp
lahf
(bad)
xor
test
sahf
jno
mov
mov
xor
repz
fs
movs
push
cld
push
ja
mov
(bad)
loopne
movs
mov
sbb
repnz
out
retf
cmps
popf
outs
arpl
inc
(bad)
aas
pop
jmp
hlt
inc
in
cmp
sbb
push
push
jmp
mov
das
cmps
cmps
or
jl
gs
pushf
dec
movs
push
or
gs
sbb
scas
ins
lahf
adc
jns
stos
push
nop
dec
mov
ror
fist
out
dec
or
xlat
mov
data16
stos
or
pop
loope
bound
and
xor
inc
xchg
pop
hlt
adc
data16
xchg
cmps
in
fcom
stos
pop
mov
mov
xchg
push
int
add
clc
lock
not
pushf
loope
(bad)
aam
jns
mov
mov
add
sbb
daa
adc
adc
aas
sbb
push
es
rcr
imul
sti
mov
sti
mov
inc
cmp
pusha
pop
pusha
loope
mov
mov
(bad)
mov
mov
push
jnp
ret
xchg
adc
jmp
add
lds
aas
shl
inc
dec
pop
(bad)
movs
xor
push
jns
popa
push
imul
sti
jmp
lock
sub
mov
adc
(bad)
retf
scas
jo
xchg
inc
jns
ret
sbb
sbb
test
and
dec
push
inc
sahf
in
jb
or
sahf
inc
pop
add
or
mov
fdiv
aas
dec
retf
xchg
inc
rcr
rol
jb
sahf
dec
mov
adc
jmp
fadd
jns
popf
(bad)
and
adc
xchg
sub
xor
ror
sbb
jge
jmp
cmp
inc
enter
das
(bad)
push
pop
mov
dec
addr16
cmps
dec
(bad)
cli
and
into
dec
mov
cmp
mov
rcr
aad
dec
cmp
pextrw
imul
scas
add
jp
xor
cmp
retf
sub
sub
xor
xor
in
jg
fcmovu
nop
jp
xchg
xchg
aas
xchg
mov
lods
add
xchg
hlt
pop
push
mov
sbb
call
add
xor
fadd
movs
std
lea
jno
and
(bad)
dec
rcl
gs
cmps
jbe
sub
mov
cld
jecxz
xor
int
cmp
sbb
test
sahf
imul
int
sbb
test
mov
xchg
xchg
mov
call
cdq
add
loopne
rol
gs
inc
gs
adc
cmps
sub
add
mov
fdiv
pop
inc
add
imul
mov
pusha
pop
mov
iret
js
lock
push
push
test
ja
push
mov
mov
xlat
aaa
mov
loop
cdq
retf
sub
sbb
ret
in
scas
mov
mov
cmp
daa
pusha
aas
(bad)
mov
fmul
loope
outs
scas
aam
mov
movs
lods
inc
aad
sub
jb
sbb
repz
test
cld
sub
xchg
popf
pop
(bad)
and
mov
test
or
mov
(bad)
cld
jecxz
adc
cld
cmp
fmulp
cwde
jge
lods
dec
push
and
xor
pop
mov
mov
sbb
inc
je
icebp
add
and
add
and
cmp
jmp
pop
outs
cli
jno
xchg
xchg
leave
add
sbb
shl
retf
ja
jne
and
and
mov
int3
sub
mov
call
scas
je
mov
sub
dec
out
jmp
loope
and
repz
shl
push
fnstenv
push
(bad)
rdtsc
push
pop
es
arpl
outs
lods
add
shl
add
or
pop
sahf
(bad)
loop
mov
stos
cwde
fsub
mov
push
test
sar
mov
adc
push
ins
ror
push
inc
aaa
add
xchg
push
stc
call
mov
mov
pushf
repz
outs
or
sbb
call
adc
test
dec
sub
std
cwde
lea
mov
fst
mov
sbb
inc
dec
mov
and
mov
add
xchg
sub
mov
jle
popf
pop
mov
ins
xlat
mov
es
ret
ds
inc
dec
loopne
push
add
lahf
loope
mov
inc
xchg
arpl
mov
test
fsubr
(bad)
adc
fdivr
leave
xor
adc
imul
scas
jecxz
dec
int3
jnp
test
mov
mov
retf
lgs
push
ins
inc
jmp
mov
or
push
xchg
in
cmc
shr
hlt
jnp
sti
cld
mov
add
push
sub
sub
arpl
ja
cld
(bad)
xchg
nop
not
xchg
in
cmp
sub
cld
push
or
(bad)
jns
xchg
adc
out
xchg
dec
adc
sbb
cmp
lock
(bad)
jnp
stos
loop
(bad)
fld
jbe
aam
pushf
fmul
xor
loopne
xchg
pushf
xchg
mov
ins
dec
outs
mov
sbb
popa
ret
stc
push
daa
outs
lock
ds
lds
scas
add
imul
add
pop
test
xchg
add
aaa
jg
adc
mov
pushf
add
in
push
repnz
call
rol
mov
(bad)
in
add
or
cmps
add
stos
rcl
xchg
pop
mov
shr
aaa
in
(bad)
push
jecxz
dec
cmp
jecxz
or
cmp
mov
clc
xlat
xchg
loop
sub
in
and
pop
push
inc
mov
ret
test
outs
and
push
call
adc
add
or
jnp
lahf
mov
inc
ret
mov
push
dec
dec
(bad)
push
sahf
cmp
push
pusha
retf
in
not
repnz
fild
psadbw
cdq
adc
lock
test
fs
dec
and
std
xor
jecxz
std
or
loopne
out
aaa
pop
mov
add
and
cmp
jne
jb
sbb
cmp
jecxz
push
or
outs
jmp
push
fsubrp
push
and
call
jae
jmp
(bad)
adc
test
les
xor
push
push
in
pusha
scas
xor
cmp
or
loopne
fadd
inc
scas
or
iret
xchg
mov
stos
icebp
or
ret
jmp
mov
shl
ret
dec
mov
dec
cwde
das
movs
sbb
scas
adc
div
(bad)
stc
adc
xchg
ss
dec
pop
inc
stos
test
ror
in
push
mov
mul
xor
retf
xchg
aas
xchg
mov
stos
lods
dec
jo
dec
mov
nop
mov
ror
mov
mov
mov
mov
push
and
shl
mov
adc
pusha
aaa
enter
mov
adc
cmc
add
inc
mov
jns
cdq
outs
mov
add
sti
loopne
mov
dec
daa
ds
add
aaa
ss
shl
daa
ret
pop
dec
mov
in
imul
pop
xor
ss
push
mov
movs
xor
lds
in
push
arpl
fnsave
icebp
movs
bound
shl
out
cmp
push
scas
hlt
loop
sti
mov
pop
xchg
push
sti
test
dec
out
push
mov
xor
sbb
push
movs
lock
lods
test
enter
lods
pop
in
movs
fadd
in
loope
pushf
test
loop
mov
outs
int3
fwait
movs
push
pop
outs
adc
das
(bad)
pop
cmc
mov
div
pop
xchg
pop
lahf
aaa
push
mov
or
call
sahf
pop
inc
aas
mov
jle
push
and
sti
cmc
add
mov
and
adc
lods
jl
adc
repnz
xchg
sbb
outs
push
mov
arpl
les
test
cmp
sti
inc
lock
inc
cmp
lods
mov
lock
adc
jb
mov
push
cmp
ficomp
sub
loopne
adc
sbb
sbb
xchg
jge
les
pop
mov
and
inc
cmc
inc
push
sub
mov
cmps
adc
lock
xchg
sub
push
xor
stc
mov
and
lock
xor
loopne
push
add
add
add
les
clc
dec
jns
aam
in
std
inc
das
or
jno
dec
mov
outs
cwde
push
jbe
push
(bad)
jb
inc
leave
ret
mov
cmps
icebp
dec
in
jno
ss
icebp
mov
pop
cs
or
mov
sbb
loopne
test
inc
imul
add
and
inc
xor
out
mov
push
adc
jo
sar
sub
xlat
sbb
add
stc
in
xchg
mov
cld
xor
dec
in
mov
xlat
mov
jne
mov
or
push
test
pop
out
xlat
cli
adc
mov
and
out
or
mov
js
or
xchg
call
cmp
jmp
cmp
and
pop
rep
jno
scas
lahf
cmc
cmp
sub
and
in
or
les
mov
pop
nop
cdq
mov
push
mov
(bad)
mov
into
xor
xlat
or
daa
xchg
inc
jmp
mov
int
sub
push
stos
mov
aam
add
push
sub
imul
call
pushf
push
popa
and
mov
xor
arpl
aam
popf
shr
out
stos
loopne
aad
pop
lds
mov
jmp
addr16
ror
mov
mov
sti
mov
xchg
mov
sbb
xchg
sbb
sbb
in
jae
mov
fist
in
movs
push
push
and
movd
pop
cdq
movhps
xchg
jo
xchg
or
ja
mov
ret
cdq
cmp
mov
gs
adc
jg
ss
ret
dec
fwait
dec
jno
mov
adc
dec
mov
aaa
pop
rdpmc
inc
bound
cdq
mov
enter
sub
mov
outs
inc
dec
aas
(bad)
loop
adc
enter
push
sub
push
jmp
inc
inc
push
pop
xor
clc
pop
cwde
xor
and
pop
data16
xor
and
into
test
jmp
add
cmp
pop
mov
loope
mov
add
loopne
xchg
add
in
or
loopne
or
in
in
adc
lock
mov
xor
fsub
xor
fsubr
inc
movs
movs
lds
mov
int
and
add
in
cdq
adc
cld
test
mov
mov
push
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
mov
dec
jmp
movs
in
cdq
inc
in
xchg
nop
call
xchg
add
loopne
xchg
add
call
xchg
adc
loopne
std
lock
add
in
xchg
add
call
xchg
add
cld
cdq
adc
in
popf
sbb
in
in
xchg
or
in
xor
pop
push
push
push
daa
div
push
mov
das
or
call
sub
fstp
xor
repz
adc
test
leave
sub
add
push
jle
cwde
jl
(bad)
jo
add
gs
icebp
cmp
ficomp
imul
sahf
aas
fidivr
enter
add
call
std
xchg
add
bound
aam
adc
pushf
iret
mov
dec
repz
in
leave
mov
add
jb
mov
jle
fidivr
fdivr
inc
imul
in
add
inc
pop
mov
call
lock
dec
enter
jle
pop
es
push
cmp
pop
pop
sbb
mov
pop
test
sub
ds
push
lods
xchg
add
call
xchg
cwde
test
push
cmp
and
lods
das
add
in
add
jecxz
call
test
mov
mov
inc
dec
pop
xchg
dec
es
jl
mov
cmp
imul
out
mov
mov
sbb
out
xlat
repz
daa
and
mov
call
mov
push
cmc
mov
cwde
mov
mov
scas
cmps
inc
pop
popf
jle
dec
in
fistp
pop
stos
xchg
and
jle
cmp
mov
add
pop
(bad)
out
jle
loopne
test
mov
sub
out
bound
xor
aad
stos
mov
fisub
std
inc
cmp
je
push
cld
mov
or
mov
dec
jge
and
mov
mov
and
xor
mov
movs
mov
mov
outs
mov
sahf
dec
xchg
mov
sub
jns
pop
(bad)
jnp
lods
and
sbb
inc
stos
in
aad
add
(bad)
bound
aaa
jecxz
repz
push
mov
aad
sar
push
sbb
pop
jp
cmp
movs
out
inc
cwde
xchg
gs
lods
js
mov
sub
mov
xor
shr
int
ror
sbb
(bad)
add
mov
sbb
xor
cmp
mov
fbstp
xor
test
jo
push
pop
xchg
(bad)
push
mov
fdiv
int3
aad
mov
rcl
jb
arpl
mov
sub
inc
les
cmp
lods
ja
xchg
push
sbb
into
shl
call
inc
and
mov
loope
in
pop
js
outs
retf
aad
stos
movs
pop
xlat
add
loop
fstp
jo
xor
imul
xchg
sub
add
mov
sub
cmc
push
lds
in
ins
sti
and
sbb
dec
mov
arpl
jp
loopne
xchg
add
hlt
in
inc
into
pop
sub
outs
stc
mov
mov
ret
call
add
call
in
cmp
xor
xchg
add
in
imul
in
popf
add
in
call
xchg
adc
loopne
adc
mov
sub
push
mov
mov
leave
sbb
xchg
and
in
xchg
add
out
pop
jb
pusha
lock
(bad)
sub
cmp
xor
retf
xchg
(bad)
xchg
call
bound
cwde
cmp
mov
lock
test
ins
xchg
mov
pop
dec
jb
enter
out
stc
jne
jmp
push
mov
clc
jbe
scas
cwde
stos
pop
sbb
add
cmps
mov
retf
test
mov
call
mov
mov
(bad)
loop
addr16
xchg
jno
adc
inc
sbb
vpsrad
loope
inc
into
mov
not
and
mov
cmp
and
(bad)
xor
int
(bad)
mov
push
mov
and
add
xchg
dec
push
cmp
into
les
mov
inc
in
xchg
jns
imul
jmp
jno
mov
stos
adc
jns
mov
fiadd
pop
jnp
in
fisttp
fnstenv
and
movs
leave
jge
cmp
in
lock
mov
push
cwde
mov
pop
hlt
aaa
add
fiadd
sub
push
(bad)
sub
push
dec
push
pop
out
fiadd
(bad)
(bad)
hlt
jnp
dec
movs
xor
call
lods
mov
mov
and
pop
out
mov
push
pop
jmp
sbb
cs
add
in
icebp
fmul
hlt
inc
inc
mov
sti
cli
xor
loope
xor
shl
outs
imul
sahf
mov
xor
bound
mov
outs
aad
pop
stc
pop
popf
shl
call
fild
sub
dec
lods
or
mov
or
test
pop
push
xchg
push
dec
push
(bad)
ror
jno
push
fsub
xor
outs
or
ret
and
xchg
loop
fidiv
xor
inc
outs
xor
ja
xor
inc
in
sbb
xchg
out
sbb
pop
(bad)
scas
loope
(bad)
sub
add
cs
jne
xchg
dec
iret
lock
sbb
xlat
scas
aad
jmp
int
mov
es
push
test
add
dec
imul
pop
xor
test
inc
sub
enter
aad
call
es
fwait
cmps
test
aad
inc
popa
mov
mov
sub
jl
cld
add
push
out
mov
scas
(bad)
stos
int
add
mov
pop
hlt
pop
dec
cld
out
stos
inc
lods
stc
mov
(bad)
cmp
or
mov
fist
stos
mov
stos
mov
lods
xor
aad
sub
rol
test
(bad)
scas
xchg
clc
out
aas
dec
lds
jp
dec
pop
repz
shl
sbb
(bad)
xor
aam
pop
lods
push
rcr
xor
imul
pop
js
jmp
hlt
pushf
push
xchg
dec
lods
xchg
or
in
popf
or
loopne
xchg
add
call
test
test
test
pop
add
test
inc
shr
add
test
das
pushf
cs
and
lods
pop
inc
(bad)
(bad)
inc
rcr
aam
shl
pop
mov
xlat
pop
imul
aaa
dec
fadd
mov
sub
add
xchg
(bad)
xor
or
dec
inc
movs
push
inc
scas
mov
dec
(bad)
in
cli
pushf
enter
add
push
movs
or
icebp
sar
push
or
and
daa
or
(bad)
dec
jp
jecxz
jle
cdq
add
add
(bad)
test
mov
xor
imul
ins
movs
push
ror
dec
and
retf
pop
loopne
fstp
js
jmp
add
mov
shl
mov
pop
mov
repz
mov
jl
xchg
fs
jmp
test
int3
mov
and
xchg
aaa
outs
ja
mov
fbld
jno
enter
pop
mov
pop
add
or
add
enter
cld
lock
and
and
icebp
aas
jnp
xchg
dec
dec
cld
xchg
jmp
out
xchg
fisubr
comiss
push
mov
out
cmps
adc
mov
es
jp
movs
mov
sbb
dec
das
cs
xor
cmp
sub
cmp
(bad)
fwait
inc
retfw
bound
movs
mov
dec
add
mov
pop
or
bnd
mov
aas
xchg
or
cs
add
adc
scas
daa
into
push
scas
imul
inc
repz
mov
cmp
jb
retf
add
lds
sub
add
cmps
pop
dec
mov
and
mov
cmp
add
xchg
cwde
cmp
push
ret
xchg
push
(bad)
stc
or
enter
dec
mov
mov
into
or
mov
test
pop
adc
xchg
and
or
sti
(bad)
icebp
fwait
mov
push
scas
push
scas
sub
(bad)
adc
and
ins
popf
out
iret
jb
mov
sub
lods
cmp
ins
shr
div
pop
sar
mov
in
pop
mov
outs
mul
push
mov
push
cmps
cmps
sbb
loopne
sar
and
cmp
loop
lahf
pop
push
lock
inc
loopne
cdq
or
in
cld
xchg
add
call
popf
or
fs
inc
mov
push
leave
movs
icebp
fst
fs
or
add
out
mov
xchg
or
in
imul
jmp
mul
aaa
pop
dec
sbb
add
sbb
jle
xchg
vmovdqu
jmp
aas
test
or
pop
fsub
jge
pop
(bad)
out
loope
pop
and
out
sub
stos
xchg
add
pop
dec
gs
push
pop
dec
pushf
jg
pusha
mov
neg
mov
mov
add
inc
jmp
sbb
adc
inc
mov
pop
out
fild
outs
gs
push
sbb
js
nop
dec
cmp
imul
sbb
sti
pop
or
xchg
adc
xchg
sbb
pop
daa
mov
sub
jae
pop
jecxz
fdiv
add
mul
adc
cmp
adc
test
addr16
xchg
sbb
mov
cmp
mov
fwait
inc
mov
fsub
sub
je
lods
jge
icebp
cld
mov
jb
jno
dec
mov
xchg
ins
xchg
pop
cmp
lahf
mov
add
mov
cmp
outs
dec
inc
clc
pop
sub
nop
jecxz
xchg
mov
push
in
xchg
cmp
(bad)
mov
loopne
(bad)
xor
push
push
out
mov
dec
repz
xchg
push
mov
jno
mov
rol
shl
xchg
xor
jnp
fist
mov
add
sahf
bt
fld
fst
sbb
inc
mov
push
movs
mov
push
push
jne
loopne
sti
ret
shl
mov
dec
push
loop
mov
nop
int
stos
faddp
nop
or
imul
mov
mov
mov
retf
add
outs
and
sbb
out
pop
outs
jnp
jge
sub
mov
sub
mov
aaa
or
mov
sar
push
cmp
mov
retf
test
and
sbb
push
xor
ins
pop
mov
mov
into
push
mov
jbe
pop
stos
pusha
out
or
aas
(bad)
sbb
sbb
test
outs
cmp
mov
data16
pop
xchg
lods
rol
xor
ret
ins
in
dec
xchg
(bad)
call
mov
fldcw
or
or
cs
icebp
add
xlat
aaa
add
sub
xor
test
aas
rep
mov
cmovno
push
xor
or
adc
das
mov
xchg
fscale
loope
sbb
jle
scas
adc
sbb
push
dec
jg
das
pop
xchg
fldenv
fidivr
xchg
mov
test
call
xchg
scas
lock
scas
mov
mov
jge
fdivr
lods
inc
mov
cmc
mov
inc
int
xor
popa
xchg
sti
ret
(bad)
and
xchg
mov
dec
inc
(bad)
movs
sbb
adc
mov
fistp
dec
repz
add
xchg
mov
push
mov
shr
arpl
outs
lea
mov
cwde
xor
and
int3
ror
data16
push
je
nop
dec
pop
pop
and
push
test
sbb
fcomp
dec
sub
dec
cmps
fadd
push
sub
jecxz
shr
arpl
push
fdivrp
in
jge
adc
(bad)
nop
jl
push
(bad)
push
retf
sbb
dec
or
and
imul
in
cdq
or
hlt
mov
clc
in
add
call
xchg
adc
sbb
les
push
dec
push
cmp
inc
cs
add
cmps
(bad)
mov
loope
xchg
jmp
add
jmp
arpl
sbb
out
dec
fwait
jb
cdq
test
enter
ds
ror
xchg
adc
arpl
inc
mov
leave
fdiv
add
retf
jg
xchg
adc
inc
mov
unpckhps
cmp
aam
pop
mov
or
shr
enter
leave
popa
sbb
stc
ja
(bad)
scas
push
jne
mov
xchg
jmp
ror
daa
xchg
pop
pushf
test
lods
and
jnp
add
popf
dec
cli
es
sbb
add
stc
xor
jle
xor
(bad)
popa
xchg
push
jae
mov
inc
jns
hlt
outs
jge
mov
or
sub
xor
inc
and
xchg
and
dec
call
jo
dec
retf
lds
sub
or
jne
scas
mov
pop
and
lds
stos
ror
test
push
xchg
fstp
aaa
push
test
ins
mov
les
push
xor
adc
inc
lods
sub
jecxz
loopne
sbb
int3
or
mov
aad
sar
mov
lahf
out
push
pop
mov
and
fbld
daa
xor
xor
inc
jbe
add
movs
mov
jg
push
xor
jl
aaa
adc
push
or
inc
aad
mov
jge
shr
pop
fmul
jmp
popf
mov
pop
loope
cwde
movs
mov
push
mov
xchg
sub
mov
jmp
out
pop
sbb
in
out
loope
pop
xchg
push
sahf
mov
cmp
add
dec
outs
cdq
mov
sub
xor
sub
dec
jge
sbb
pushf
cld
push
push
mov
sub
nop
add
mov
movs
mov
dec
ds
sahf
cmps
ror
xchg
fwait
stos
lods
pushf
adc
xchg
imul
xchg
out
jle
jo
fld
movs
in
std
add
or
dec
pop
ret
int
sti
jl
jecxz
clc
rcr
clc
in
dec
hlt
stos
test
rol
xchg
xor
dec
mov
ficom
pop
add
add
xchg
sbb
or
dec
fdiv
dec
xchg
adc
repz
push
mov
mov
mov
inc
iret
jmp
aam
sub
jo
imul
mov
push
or
jmp
xor
ret
mov
out
push
dec
jb
(bad)
and
outs
ficom
xchg
stc
dec
aaa
dec
cmp
cli
imul
sar
push
lods
sub
jl
pop
add
adc
mov
test
stos
jmp
mov
call
inc
push
lock
lea
cmp
cmp
mov
aad
xchg
pop
lea
pop
gs
jno
push
and
addr16
jle
add
aaa
mov
cmps
aad
das
xor
xor
push
pop
mov
shr
(bad)
scas
mov
test
xchg
fs
xlat
dec
mov
add
jp
pop
inc
xchg
pop
(bad)
pop
nop
sbb
(bad)
cmp
and
cmp
sub
stos
dec
cmp
lods
shr
mov
xor
shr
test
out
neg
pusha
jno
ins
(bad)
inc
xchg
mov
adc
add
jle
rcl
lods
or
jae
mov
sbb
cmp
hlt
mov
mov
shl
rcl
mov
lea
jmp
mov
push
push
rcl
ins
cdq
repnz
sub
in
mov
cmps
fiadd
sbb
(bad)
mov
shld
popf
ins
mov
stos
stos
jg
popa
jmp
ror
or
sbb
lods
out
mov
in
arpl
shl
and
imul
pop
sub
mov
xchg
pmaxsw
fild
das
retf
mov
ret
outs
retf
or
mov
sub
gs
retf
rcr
dec
pusha
ret
bswap
or
shl
ret
in
and
std
out
aad
repz
scas
dec
retf
dec
xor
stos
into
fwait
xor
mov
adc
inc
xor
inc
ret
xor
call
shl
inc
sub
pop
push
fild
bound
movs
inc
aas
(bad)
repz
mov
xchg
clc
aam
ds
mov
daa
sar
mov
jnp
xchg
test
push
mov
lea
sbb
lahf
je
push
test
lock
dec
addr16
sbb
mov
lock
inc
in
popf
add
cld
test
loopne
xchg
add
call
rol
sub
push
pop
arpl
rol
shr
add
adc
xchg
cmp
cmc
inc
or
add
cmps
sub
loopne
fs
icebp
push
lods
push
sbb
(bad)
push
std
pop
jmp
inc
ja
cli
sar
push
ds
out
xchg
push
and
lock
jo
sbb
and
cwde
xor
mov
(bad)
mov
cmp
stos
in
cmp
(bad)
push
(bad)
cmp
aas
mov
out
adc
out
cmp
xchg
xchg
call
rol
push
test
stos
mov
and
adc
fdiv
mov
into
cmp
or
push
jp
mov
mov
ror
(bad)
pop
xor
gs
xchg
dec
pushf
adc
or
xor
jo
retf
push
xchg
fwait
out
cmp
daa
js
cwde
daa
add
(bad)
fs
fcomp
inc
mov
jmp
popa
in
in
test
pop
rol
mov
fcmovnbe
imul
xchg
and
inc
dec
and
xchg
add
not
jno
cwde
mov
aas
sbb
or
call
sub
pand
push
push
or
daa
mov
jge
xlat
into
fidivr
rcr
in
gs
mov
xor
cmps
sub
sahf
cs
lods
stos
mov
pop
ins
push
xor
movs
rol
aaa
dec
ret
dec
cmc
ror
(bad)
hlt
(bad)
fs
dec
bound
lods
xchg
hlt
movs
cli
dec
fwait
inc
and
rcl
sbb
or
lock
imul
rcr
jae
sbb
loop
inc
and
outs
mov
sbb
ins
sub
adc
inc
loope
mov
jno
ins
mov
and
jmp
adc
fist
inc
mov
cmp
cli
nop
adc
pop
aaa
ror
gs
inc
mov
xchg
jle
xor
stc
stc
nop
pop
inc
not
mov
out
inc
popa
inc
inc
adc
pop
push
jno
jmp
clc
mov
and
addr16
sub
mov
or
bound
js
(bad)
adc
sbb
adc
jns
jbe
in
scas
xor
lods
push
or
push
adc
dec
aam
lock
loope
dec
stos
jp
das
pushf
inc
and
add
mov
mov
arpl
jecxz
sbb
cmp
mov
fdivr
imul
cmp
scas
cmp
or
cmp
inc
cld
push
ins
xor
out
mov
pop
mov
sub
daa
imul
out
mov
sub
sub
ror
idiv
and
sbb
ss
inc
sub
or
jmp
and
jl
mov
aad
bound
sub
fcomp
mov
(bad)
pop
addr16
scas
sbb
and
inc
jb
cmp
lods
mov
or
or
ret
xlat
adc
add
or
fimul
div
push
test
mov
jp
aad
inc
sub
cwde
(bad)
fidivr
mov
popf
mov
(bad)
sbb
push
les
sub
and
rol
push
lods
pop
shl
xor
mov
sbb
sbb
std
test
test
imul
push
adc
enter
ds
into
aaa
sub
mov
adc
adc
in
xchg
lea
daa
(bad)
push
enter
sub
in
mov
cmovle
mov
pop
cs
mov
mov
dec
ret
ins
scas
les
es
(bad)
stc
jp
jns
xchg
xor
dec
(bad)
mov
ja
mov
fcomp
inc
pop
inc
shl
xchg
add
call
aad
clc
adc
mov
imul
rol
inc
jecxz
xor
push
sbb
jmp
mov
loopne
xchg
add
call
nop
push
repz
sub
jmp
int3
or
inc
or
nop
int
xor
cmp
and
pop
xlat
loop
mov
(bad)
fiadd
les
xor
pop
mov
int
xchg
push
(bad)
jns
xlat
and
enter
frstor
pop
popa
mov
sbb
xchg
pushf
lods
xchg
add
in
in
xchg
add
call
xchg
add
push
inc
addr16
imul
xchg
or
sahf
hlt
fsubr
sub
and
scas
jle
js
mov
adc
fsub
add
pop
cmps
or
pop
dec
imul
push
lods
and
out
scas
dec
sbb
aaa
sub
fadd
js
and
ds
aad
test
into
cmp
stc
sbb
fldl2t
mov
mov
shr
push
mov
sti
jb
fnstcw
pop
gs
(bad)
jle
sbb
in
pop
inc
dec
or
adc
ds
movs
retf
imul
push
mov
inc
push
sub
psubsw
mov
test
and
pusha
fnstsw
out
mov
xchg
in
sar
and
pop
loopne
inc
pop
mov
sub
inc
mov
jmp
out
and
stc
pop
add
daa
inc
and
pusha
xor
ror
xor
repz
jns
xor
sub
stos
mov
pop
pop
ret
dec
cmp
test
pop
mov
ins
fbstp
pop
mov
(bad)
pop
cdq
lock
stc
jle
pusha
or
icebp
cmp
xchg
fstp
xchg
sbb
mov
mov
es
sbb
lea
adc
xchg
mov
imul
add
bound
(bad)
icebp
test
rol
cli
push
cli
inc
mov
retf
inc
out
pop
jg
sbb
inc
pushf
fstp
hlt
ret
cmp
in
xor
retf
test
sub
xchg
push
jecxz
push
addr16
movs
sbb
xchg
and
xchg
add
loopne
xchg
inc
gs
add
out
imul
in
imul
shr
lock
jg
test
lahf
lock
push
cmp
push
prefetch
push
bound
ins
jle
out
inc
cli
or
(bad)
dec
sub
push
cli
loop
popf
scas
fistp
retf
jecxz
add
sbb
outs
jp
dec
and
addr16
add
mov
ss
fnstenv
sti
jbe
pop
fldcw
adc
(bad)
xchg
pushf
jbe
sbb
es
out
pop
jmp
clc
pop
scas
scas
xchg
in
adc
(bad)
fcom
outs
dec
dec
mov
hlt
mov
fisttp
or
imul
fadd
bound
adc
in
or
mov
and
(bad)
jmp
into
push
pop
add
loope
cdq
sbb
mov
sub
stos
and
clc
cmps
sub
pushf
adc
in
outs
dec
xor
fdiv
pop
sti
and
movs
mov
pop
in
pop
lea
sub
xor
(bad)
cmp
or
std
repnz
mov
mov
xor
add
xor
add
xor
jmp
ins
jg
fimul
mov
iret
fld
xchg
or
jns
aas
ja
sbb
mov
mov
xchg
cdq
fmul
pop
mov
outs
fwait
ror
push
sub
(bad)
not
pop
add
adc
cwde
sub
(bad)
test
mov
imul
dec
adc
lods
jl
mov
mov
inc
pop
pop
pop
xchg
repnz
gs
and
mov
jg
mov
mov
push
and
xchg
in
xchg
outs
sub
aaa
iret
inc
mov
sub
fs
rcl
dec
outs
push
pop
lods
xor
push
inc
test
adc
aaa
das
cli
xchg
sub
sub
hlt
push
push
(bad)
jne
push
xor
pop
push
out
je
add
xchg
dec
mov
jge
xor
dec
inc
fdiv
(bad)
repz
aad
aad
outs
or
lock
call
or
sub
jmp
icebp
pushf
adc
add
xchg
add
loopne
or
in
xchg
add
call
push
add
movs
outs
push
inc
and
add
mov
mov
in
xchg
std
mov
add
adc
(bad)
jecxz
fadd
int3
pop
movhps
mov
pusha
mov
retf
jmp
push
jmp
fsubrp
jle
adc
out
aam
sti
shr
jmp
cmc
jb
repnz
rol
mov
mov
inc
mov
pop
ficom
adc
(bad)
aas
mov
aam
mov
popa
rol
cmp
mov
popa
adc
ret
shl
sar
pop
pop
sub
cmp
cmps
aas
xchg
pop
(bad)
inc
mov
fstp
fldenv
pop
aam
or
scas
inc
add
jmp
xchg
int
pop
mov
xor
test
stos
sbb
cwde
mov
cld
repz
sub
retf
push
dec
xor
xchg
mov
ret
lds
mov
loop
pop
add
adc
sub
sub
fdiv
cdq
ins
xchg
cmp
jecxz
out
inc
mov
mov
(bad)
je
push
ins
mov
idiv
jmp
xchg
add
iret
cli
shr
leave
add
faddp
out
push
cmp
fsubr
(bad)
cmc
jmp
mov
rol
fnstenv
(bad)
(bad)
aad
enter
mov
jmp
aam
stos
xor
gs
neg
out
(bad)
ror
jb
lea
aad
mov
lods
sbb
sub
fwait
(bad)
adc
or
adc
lahf
cmps
push
cmc
push
and
ss
mov
nop
push
sub
aaa
mov
scas
test
xchg
icebp
push
sbb
jle
or
mov
xchg
and
add
imul
cli
lods
(bad)
iret
dec
sub
jnp
pop
daa
shr
mov
adc
lock
and
idiv
pop
sbb
dec
pop
pop
add
xor
into
(bad)
pop
das
mov
sbb
adc
jle
inc
lds
shl
test
fild
pop
inc
in
out
stos
out
xlat
dec
call
imul
retf
xor
fcomp
mul
mov
sti
loop
jnp
push
lock
inc
or
loop
es
test
js
lods
sbb
xor
jl
inc
xor
fwait
jg
outs
mov
mov
jae
in
jno
jg
(bad)
pop
icebp
xor
aas
sub
rol
adc
jns
mov
in
shl
sub
pop
add
mov
ins
aaa
in
sub
mov
ins
inc
push
dec
mov
mov
adc
ins
or
lahf
dec
cmp
loopne
inc
inc
js
aam
add
bound
sub
inc
jge
ja
daa
rol
mov
into
add
add
mov
outs
xchg
xor
addr16
rcr
lods
leave
jmp
in
dec
jg
fdiv
dec
lds
xchg
dec
repnz
shl
stos
or
mov
lock
cmps
inc
add
push
dec
icebp
cwde
test
inc
cdq
mov
pop
cmp
jnp
cmp
push
push
and
jmp
sbb
test
outs
(bad)
mov
and
pop
(bad)
push
or
mov
es
jg
adc
inc
daa
pop
(bad)
mov
push
push
sub
ins
jle
cdq
cmp
inc
dec
jmp
pop
aas
sub
cmp
bound
dec
rol
retf
lahf
fist
pop
shr
push
mov
inc
repz
test
(bad)
jecxz
inc
inc
xor
ins
sbb
xchg
iret
(bad)
pop
and
dec
sub
popf
daa
jo
inc
or
pop
leave
lds
scas
xor
inc
leave
outs
popf
sbb
mov
retf
int3
into
arpl
push
adc
cmp
in
mov
hlt
(bad)
jle
pop
sbb
arpl
adc
sbb
dec
add
or
iret
inc
xor
cmp
arpl
and
mov
push
es
or
test
mov
xchg
add
jmp
fucomp
ret
push
mov
jns
call
retf
or
mov
push
mov
shl
inc
pop
cli
les
sar
pushf
pusha
xor
mov
icebp
or
and
jnp
pop
sbb
stos
and
jne
jp
imul
mov
and
call
xor
push
mov
sahf
mov
mov
stos
(bad)
mov
add
movs
pop
ja
das
xor
mov
cmp
pop
iret
test
and
add
lods
rcl
cmp
mov
not
mov
or
mov
fdiv
mov
es
dec
sbb
xlat
out
dec
movs
dec
aaa
in
sbb
shl
rcr
jno
inc
dec
sbb
outs
in
dec
adc
xchg
mov
retf
xor
scas
(bad)
imul
push
test
and
cmp
add
mov
lods
in
cs
shl
scas
int3
call
loop
and
mov
jg
push
lea
fiadd
into
or
dec
cmps
daa
or
stos
aaa
lock
inc
add
push
lods
mov
enter
sbb
mov
dec
dec
inc
pop
(bad)
jecxz
push
dec
or
lea
jg
xchg
add
stos
xlat
in
ficom
mov
push
ss
ins
jmp
mov
mov
add
mov
loopne
test
adc
xchg
std
xchg
idiv
popa
jmp
sub
int
add
in
xchg
add
jmp
cli
add
jmp
popf
or
in
or
hlt
enter
clc
sub
rol
movs
xor
sar
aam
sar
int3
(bad)
aad
mov
mov
cmc
pop
mov
fst
mov
nop
or
hlt
int3
adc
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
shl
loop
xchg
mov
call
in
imul
loopne
xchg
add
loopne
xchg
add
call
mov
shl
add
in
xchg
or
loopne
xchg
add
call
xchg
or
sbb
xchg
xor
in
xchg
or
in
inc
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
in
popf
ficomp
xchg
or
loopne
retf
or
cdq
hlt
int3
(bad)
dec
or
test
mov
mov
xchg
jae
xadd
push
pop
icebp
sub
or
into
in
pushf
fldenv
mov
shr
jmp
pop
or
out
mov
dec
ret
adc
fbstp
jl
in
mov
aam
jne
icebp
xor
(bad)
mov
int3
sbb
mov
int3
stos
mov
jb
movs
outs
std
cld
retf
mov
push
mov
jae
nop
test
xchg
int3
movs
and
outs
jmp
add
mov
mov
xchg
or
ret
push
xchg
data16
retf
call
pop
ret
jmp
scas
arpl
out
add
or
call
and
mov
push
imul
sar
xchg
xchg
aam
xchg
add
ja
or
call
popa
int
(bad)
fistp
stos
mov
lea
xchg
xchg
(bad)
cli
sbb
(bad)
(bad)
stos
mov
sar
(bad)
test
pop
outs
xor
jge
jge
jle
fs
(bad)
mov
jnp
sbb
sbb
inc
cs
lock
stos
stc
xchg
sbb
push
pop
ins
lods
dec
jbe
mov
sbb
sub
repz
ja
mov
adc
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
cdq
mov
in
xchg
add
loopne
xchg
add
clc
or
mov
fstp
lods
fst
call
xchg
and
in
xchg
add
and
jne
fmul
into
ins
mov
clc
mov
mov
dec
shr
xchg
mov
fld
nop
mov
enter
call
sub
stos
mov
test
mov
cwde
scas
inc
or
cmp
push
lahf
daa
ret
pop
adc
int3
out
dec
xor
test
fs
arpl
repnz
inc
add
icebp
(bad)
cdq
jmp
out
cmps
push
mov
js
jae
sar
sbb
push
mov
jae
and
or
lahf
xor
out
fldenv
rcr
mov
ins
icebp
outs
xchg
dec
imul
nop
cmp
jle
add
dec
push
and
mov
add
sahf
jl
cmp
cs
jae
stos
loop
aaa
test
xchg
xor
(bad)
je
jle
icebp
mov
ins
inc
jns
mov
push
mov
int
xchg
test
push
xchg
test
add
lods
jne
or
(bad)
fisubr
pushf
cli
daa
push
add
mov
sbb
test
(bad)
push
jo
jmp
xchg
add
outs
or
daa
xor
sub
call
bound
ss
xchg
(bad)
mov
push
pop
push
aaa
and
aam
sub
jae
jg
movs
sub
popf
push
xchg
xchg
sti
dec
test
inc
xor
xchg
dec
jae
jmp
retf
popf
imul
shl
imul
retf
inc
xchg
adc
or
or
mov
enter
(bad)
imul
data16
sbb
inc
mov
lea
int3
jg
js
out
arpl
jo
sub
dec
pop
das
mov
sub
lds
(bad)
aas
fldcw
pop
push
sbb
pop
xlat
adc
or
dec
std
mov
jb
mov
mov
adc
mov
gs
sbb
std
mov
push
es
jno
mov
movs
inc
or
lods
pop
retf
inc
pop
es
rcl
rol
scas
or
mov
adc
or
lea
or
adc
mov
and
lods
cmp
imul
aam
xor
mov
movs
(bad)
dec
sbb
mov
sar
push
pop
fisubr
jns
jns
mov
test
sub
scas
(bad)
mov
(bad)
rcl
xor
mov
push
in
hlt
in
mov
sbb
pop
daa
dec
jns
xchg
mov
cmps
adc
das
stos
sbb
cli
outs
push
not
fldcw
lock
inc
loopne
cdq
or
hlt
in
xchg
add
call
popf
adc
cld
ror
sub
push
sub
inc
mov
nop
nop
jne
adc
in
inc
shr
add
jecxz
mov
add
push
test
fcom
xchg
push
test
cmp
pusha
sar
out
jo
mov
push
pop
cmp
outs
jae
xchg
mov
loop
bound
mov
xlat
push
sbb
ret
test
dec
mov
shl
test
outs
add
clc
rcl
sub
sub
mov
sub
leave
mov
cli
cmp
test
mov
movs
hlt
mov
fs
jne
dec
push
xor
dec
cdq
mov
mov
cmp
sub
loop
dec
or
mov
mul
cmp
aad
es
stc
pop
mov
popa
mov
xor
int
(bad)
retf
cli
popf
imul
push
dec
mov
xchg
mov
xchg
outs
(bad)
dec
xchg
mov
mov
int3
das
lea
aas
cmps
sbb
aas
out
cwde
addr16
push
jno
inc
jns
cmp
fbld
aad
mov
sub
ds
mov
dec
ror
stos
adc
bound
dec
mov
pop
jecxz
ret
and
stc
cmps
pop
dec
fbld
push
and
leave
pop
xchg
push
dec
(bad)
mov
push
sbb
add
or
pop
adc
cmps
dec
dec
mov
js
mov
add
movs
adc
fs
xlat
mul
jle
dec
js
js
xor
jo
or
mov
dec
(bad)
mov
sub
add
xchg
dec
or
loop
pusha
inc
cmps
call
cmp
pop
sar
dec
xor
mov
pop
xor
inc
mov
ins
mov
int3
clc
test
(bad)
scas
xchg
mov
push
jae
in
cmp
lea
cmp
bound
adc
dec
js
(bad)
mov
push
jmp
mov
(bad)
int
call
das
movs
sub
fwait
adc
dec
adc
push
loopne
rol
call
loopne
add
loopne
xchg
add
lock
xchg
push
and
shr
push
enter
in
imul
loop
jmp
pop
shr
(bad)
rcr
daa
xchg
and
loope
jl
lods
or
stos
sbb
mov
rol
cmp
scas
mov
sub
mov
ret
pop
bound
pop
fsubr
xchg
test
xor
into
lea
ror
addr16
daa
lahf
call
retf
clc
or
push
inc
mov
sbb
mov
jae
rol
mov
stos
pop
popf
push
sti
lahf
push
dec
mov
sti
dec
mov
cmp
ins
mov
mov
repnz
sbb
and
rep
fistp
popf
fcomp
mov
(bad)
and
mov
sub
test
jb
dec
shr
xchg
imul
cmp
dec
adc
and
mov
sbb
test
ins
daa
fucomp
xchg
mov
mov
pusha
loope
(bad)
shl
movs
mov
jne
mov
(bad)
fwait
sub
pusha
sub
in
shl
aas
inc
push
shl
jl
push
jo
push
sbb
call
cdq
adc
(bad)
call
popf
or
lods
cld
adc
mov
pop
add
and
stos
add
pop
cmps
sub
inc
call
in
mov
pop
enter
and
in
xchg
sbb
imul
adc
stos
retf
xchg
inc
jbe
jbe
les
enter
hlt
adc
push
es
mov
pop
pop
rcr
pop
jo
inc
pop
(bad)
pop
jb
jne
popa
fld
or
xchg
arpl
or
cmp
fwait
xchg
shl
dec
and
sub
xchg
daa
add
das
ret
(bad)
mov
les
sub
cli
mov
xor
add
in
cmp
and
pop
and
rcl
pop
xor
mov
fs
pop
inc
push
mov
js
call
sub
ret
(bad)
sbb
jbe
iret
cs
xchg
xlat
and
cmc
fldenv
add
imul
or
sub
or
not
std
sbb
movs
out
adc
mov
out
jb
das
(bad)
jo
mov
mov
jae
push
sbb
popf
outs
cld
xchg
jbe
or
and
adc
lods
mov
sub
sbb
pop
cmp
das
and
jmp
or
mov
pop
pop
jecxz
mov
std
stos
bound
xchg
ret
ja
cmps
dec
dec
sahf
push
pop
sub
jbe
test
(bad)
lock
dec
add
push
imul
sub
pop
mov
xchg
pushf
rcr
dec
daa
xchg
pop
inc
test
or
stos
push
sahf
pop
sti
lock
addr16
leave
punpcklwd
jecxz
jle
neg
cmps
or
fwait
sbb
jg
cmp
dec
dec
mov
inc
mov
sets
add
pop
call
push
xor
mov
or
sub
dec
ret
daa
jge
sub
(bad)
sbb
addr16
ja
lock
fcomp
sbb
les
dec
ret
mov
adc
or
pop
pop
jmp
mov
xchg
hlt
sub
dec
pop
push
cmp
jb
repnz
mov
repz
cmp
ret
ins
xor
hlt
popa
int
sub
sbb
lds
or
popf
lahf
add
mov
cmp
iret
into
das
in
push
rcl
jb
std
fild
lods
mov
das
fst
add
push
minps
mov
sub
jbe
outs
mov
pop
js
(bad)
stc
cmc
jo
pop
loop
stos
inc
or
cmps
jmp
gs
ror
scas
clc
pop
add
enter
iret
int
add
mov
jb
xchg
rcl
cmps
or
cmps
sub
push
repnz
(bad)
mov
int3
xchg
jp
push
xchg
sar
das
aas
add
ja
xor
movups
inc
xor
sbb
shr
sar
int
lods
nop
mov
std
mov
xchg
arpl
push
sbb
pop
fstp
psubd
in
xor
jns
out
xor
xor
mov
in
mov
push
std
imul
inc
fdivr
ds
push
or
sbb
dec
sub
or
push
ds
aam
(bad)
mov
pop
dec
inc
mov
push
push
aaa
cmp
xchg
mov
jne
mov
int3
gs
mov
nop
inc
mov
jbe
cwde
popf
clc
sub
test
out
aam
pop
inc
pop
mov
(bad)
add
leave
or
xor
into
xor
xlat
imul
xor
aas
cmp
sub
adc
fdivr
ds
dec
(bad)
jne
rcl
jbe
int
ja
retf
(bad)
test
repz
mov
sub
and
sbb
inc
cmc
dec
js
fisttp
inc
xchg
adc
jb
push
add
jno
mov
stos
push
dec
mov
idiv
dec
in
xlat
(bad)
setnp
sbb
loope
ror
inc
mov
mov
arpl
pop
add
inc
jb
mov
call
xchg
and
xchg
cmc
dec
inc
xor
(bad)
xchg
or
push
mov
sahf
mov
fistp
addr16
loope
cmc
inc
in
jae
mov
mov
xchg
mov
or
test
fucomi
ja
loope
test
inc
leave
pand
cmp
or
sysret
rcr
pop
dec
mov
repnz
pop
sub
pop
cdq
movs
sub
addr16
push
and
pop
sub
jno
ja
push
jo
mov
or
outs
shr
(bad)
xchg
(bad)
jle
xor
push
mov
adc
ror
data16
iret
adc
push
mov
sub
pop
in
xor
test
mov
hlt
lahf
jno
push
mov
inc
outs
adc
pop
leave
sahf
shl
and
(bad)
jecxz
inc
or
dec
dec
jle
push
(bad)
mov
and
out
cmp
pop
aaa
out
test
adc
shl
jbe
jle
pop
mov
fcom
xor
cwde
mov
dec
(bad)
retf
xlat
push
sub
aad
ja
mov
inc
mov
out
shr
mov
mov
enter
cld
inc
xchg
cdq
mov
or
neg
jae
and
push
jmp
add
inc
les
mov
mov
inc
mov
dec
ins
mov
and
push
xor
adc
(bad)
ins
dec
(bad)
pop
inc
pop
(bad)
adc
xchg
push
push
adc
mov
dec
or
jecxz
push
out
lea
inc
lahf
jbe
mov
jmp
dec
jmp
mov
mov
test
(bad)
out
mov
push
xchg
mov
data16
jmp
popa
ins
call
mov
div
scas
retf
in
test
out
xchg
jge
add
xor
cdq
push
jmp
pop
not
outs
sar
or
fdivp
fiadd
out
adc
sbb
jmp
fld
push
aaa
test
xchg
mov
pop
mov
pushf
lods
sbb
sahf
popf
popa
push
mov
push
sahf
shl
jg
test
pop
dec
movs
dec
mov
pop
dec
mov
mov
mov
ffree
pop
dec
xor
push
ds
out
adc
leave
push
mov
(bad)
mov
div
enter
mov
cld
mov
retf
ficom
clc
arpl
push
cmp
jns
xchg
jg
sub
or
stos
sahf
rcl
shl
ret
inc
or
xchg
in
jnp
push
xchg
je
mov
mov
xchg
jo
pop
jae
(bad)
jmp
inc
test
fcomp
sbb
sbb
sar
inc
inc
mov
dec
sub
repnz
pop
xor
jge
hlt
pop
push
mov
lahf
cmp
sub
xchg
cli
mov
das
jns
outs
and
das
shl
sub
movs
mov
in
popf
inc
mov
or
push
fmul
daa
fcom
fxam
xor
fwait
and
ret
mov
dec
dec
pusha
pop
ror
mov
add
int
xlat
mov
out
pcmpeqd
xor
stos
inc
mov
push
les
enter
push
add
das
push
xchg
cmp
sub
fcom
xchg
sub
aaa
xchg
sub
inc
inc
jne
fwait
jp
xchg
push
sbb
push
fimul
stos
cmp
pop
inc
movs
rcr
mov
and
jo
pop
int3
push
or
mov
fist
(bad)
xor
push
in
or
jecxz
jmp
call
popf
or
clc
cdq
add
in
adc
and
in
rol
in
xchg
and
push
loopne
xchg
add
push
jmp
mov
into
sahf
xor
aad
adc
mov
mov
shr
push
sub
push
ja
jl
out
fist
cmps
inc
mov
jbe
fdivr
cdq
in
gs
sti
sar
add
jbe
dec
push
mov
sub
add
mov
jae
sar
push
sbb
cmp
fldenv
lock
fnsave
out
fwait
les
pop
in
adc
xor
ret
(bad)
je
xor
adc
jnp
mov
repnz
int
jle
and
fbld
sbb
test
push
pop
or
mov
in
cmp
pop
or
ds
in
(bad)
leave
imul
lods
test
adc
cmp
fsub
mov
clc
fwait
stos
and
lds
pop
add
stc
ins
mov
mov
cli
out
add
jb
sub
jmp
mov
mov
aam
inc
sti
lods
icebp
or
daa
loopne
lods
adc
xor
push
repz
dec
(bad)
out
mov
inc
fimul
mov
mov
sbb
push
xor
test
pop
adc
ret
push
jno
lods
and
and
mov
push
test
adc
loopne
mov
dec
pop
scas
xor
or
es
cmps
ret
fiadd
idiv
scas
add
jae
in
add
fcmovbe
sti
or
cli
iret
jmp
sub
and
xchg
add
sub
ins
sub
lea
nop
dec
adc
inc
mov
mov
dec
cmp
adc
pop
mov
jge
repnz
inc
add
(bad)
mov
cmp
sbb
pushf
shr
lds
push
popf
add
(bad)
sbb
out
mov
movs
lahf
xchg
fdiv
mov
shl
xchg
jno
jne
icebp
xor
mov
add
(bad)
ds
enter
jl
aas
jmp
arpl
icebp
test
dec
daa
mov
sub
mov
and
dec
adc
or
stos
in
and
sbb
push
push
mov
fnstcw
ds
call
sbb
(bad)
mov
ja
call
paddw
push
and
mov
xor
(bad)
cwde
xchg
cmps
daa
dec
jp
rcl
bswap
dec
jecxz
add
adc
(bad)
xor
xchg
add
sub
int
(bad)
lock
nop
and
add
dec
sbb
dec
push
ins
mov
xchg
mov
inc
sub
pushf
pop
icebp
mov
fld1
jnp
adc
lods
retf
adc
mov
push
mov
mov
stc
js
or
push
jp
push
jmp
add
sti
cmp
push
pop
je
adc
(bad)
cmp
shr
dec
mov
popa
outs
in
ins
or
loopne
mov
add
xchg
arpl
xchg
enter
out
shr
in
mov
mov
leave
sbb
dec
outs
fcmovne
sti
xchg
mov
std
mov
enter
mov
mov
lea
or
clc
sbb
fs
dec
lock
ror
xchg
push
(bad)
fdivr
sub
inc
test
scas
mov
mov
cld
test
xor
aaa
add
je
pop
mov
or
data16
mov
mov
popa
jle
mov
xchg
mov
jge
call
adc
dec
fild
add
popf
jnp
add
mov
dec
dec
js
int3
xor
ret
clc
mov
lea
leave
add
dec
or
push
mov
inc
push
clc
bound
jecxz
out
mov
pop
(bad)
cmp
ja
jle
(bad)
call
jge
cmc
(bad)
repz
ins
lock
retf
test
mov
and
mov
push
test
jno
aaa
dec
popf
pusha
sub
or
cmps
xor
or
rcr
xor
dec
dec
sub
fdiv
xchg
bound
jmp
sbb
in
mov
or
popa
mov
lods
(bad)
hlt
leave
clc
stc
pop
test
and
cmp
xchg
cmp
cmp
mov
(bad)
rcl
xchg
rol
sub
add
fmul
mov
sahf
xchg
dec
mov
repz
fst
pusha
std
push
ror
imul
push
jmp
adc
loope
in
push
imul
or
sbb
cld
mov
movs
or
in
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
or
call
mov
test
inc
inc
les
add
xchg
nop
out
sbb
mov
enter
icebp
loop
pop
dec
call
mov
mov
lar
sub
and
fwait
mov
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
xchg
add
call
add
or
in
cdq
adc
loopne
xchg
add
call
rol
scas
adc
fs
inc
shr
add
or
das
out
icebp
std
pop
jp
ins
inc
mov
aad
mov
mov
jle
add
jecxz
fs
dec
mov
xchg
into
iret
jecxz
add
pusha
inc
sub
mov
sub
mov
xchg
ins
push
push
sub
mov
mov
push
push
add
(bad)
add
sub
jnp
loope
sub
add
imul
add
leave
lods
fwait
sbb
int
inc
dec
rcl
mov
adc
adc
ds
cmp
push
sub
fwait
jp
pop
xchg
rcr
dec
pop
leave
test
sub
mov
inc
xchg
pop
push
or
sub
int3
(bad)
fistp
leave
in
mov
jne
mov
in
(bad)
neg
mov
mov
pop
mov
fldlg2
clc
add
sbb
arpl
aam
repnz
mov
fdivr
dec
mov
popa
shl
cli
mov
je
dec
mov
scas
shl
pop
mov
cmps
(bad)
rcl
les
jo
mov
mov
into
in
(bad)
dec
cdq
idiv
mov
inc
loopne
xchg
or
in
add
call
xchg
add
in
rol
movs
ins
push
add
in
imul
xchg
or
in
imul
mov
and
push
stos
mov
mov
cmp
(bad)
(bad)
push
pop
push
movs
(bad)
inc
data16
ds
retf
lds
sbb
xchg
inc
out
mov
dec
ins
mov
xor
shl
inc
les
movs
pop
xor
mov
mul
sbb
loopne
fadd
test
lds
cdq
ins
sub
pop
cmp
div
(bad)
movs
addr16
push
aas
imul
add
scas
inc
clc
sar
adc
xor
mov
dec
ins
push
cdq
fstp
ret
pop
and
dec
cmp
les
push
in
cwde
mov
movs
pop
sub
movs
out
pop
daa
aam
dec
retf
arpl
in
inc
push
pop
or
cwde
(bad)
cld
cmc
mov
xchg
adc
cld
lock
inc
in
xchg
or
loopne
add
in
xchg
test
in
xlat
add
sub
xchg
and
in
xchg
add
add
add
cld
jno
adc
imul
adc
cli
bound
in
cdq
push
mov
xchg
ret
(bad)
mov
xchg
push
sbb
mov
push
push
aad
sub
pusha
jle
out
mov
mov
and
inc
cmp
jg
mov
icebp
clc
(bad)
(bad)
fmul
enter
shl
jg
push
mov
(bad)
rol
aas
pop
xor
jle
in
rcl
cmps
xor
jmp
pop
js
xchg
stc
and
jle
cwde
xor
ret
sub
and
fdivp
inc
xchg
lock
das
inc
loopne
movs
arpl
and
push
(bad)
fsubr
mov
xchg
pop
or
rol
fsub
cmp
cmp
or
(bad)
cmp
mov
jbe
mov
push
in
lds
mov
fdivp
sub
in
jne
popf
or
dec
xlat
adc
idiv
mov
lea
leave
pop
jnp
pop
movs
lds
sub
pusha
mov
push
mov
push
sbb
mov
adc
sbb
add
push
fiadd
mov
fisub
xchg
mov
inc
scas
jbe
push
mov
mov
pop
inc
or
xchg
cld
retf
mov
pusha
mov
cmp
add
add
or
xchg
in
stos
retf
out
push
leave
pushf
mov
push
jmp
leave
mov
cmps
and
imul
mov
push
repnz
mov
pop
popa
retf
lods
dec
mov
ins
sub
(bad)
(bad)
cld
lea
xor
loop
(bad)
out
adc
and
fs
stos
push
jge
test
inc
aad
call
add
lea
inc
idiv
cmp
ftst
bound
pop
push
xor
inc
fldenv
or
std
xor
adc
or
jne
or
imul
xchg
stos
loope
push
out
sar
enter
xor
cld
sub
xchg
mov
(bad)
ss
fcomip
sub
test
mov
pop
jae
and
sub
jmp
out
outs
outs
mov
xor
mov
int3
or
arpl
lods
out
sub
jmp
cmc
add
(bad)
cmp
mov
aam
call
repz
sbb
inc
xchg
mov
push
bound
call
pushf
xchg
call
inc
stos
add
in
sbb
mov
or
sub
les
xor
mov
lods
pop
add
call
jns
cwde
sub
int3
loopne
or
jmp
ret
xchg
mov
shl
in
and
(bad)
adc
test
sub
out
lahf
cmps
pop
stos
pusha
(bad)
cmp
aas
rcl
sbb
mov
adc
xchg
cdq
(bad)
pop
fnstsw
add
mov
add
out
aad
(bad)
pop
jne
pop
add
mov
sub
or
xor
test
push
ret
add
nop
and
jmp
call
aad
clc
mov
inc
outs
cmc
out
sub
rol
jne
push
jp
scas
cmp
rcl
mov
ja
push
loop
lods
stos
mov
adc
jns
loop
xor
push
call
repnz
out
sahf
test
fdivr
(bad)
jns
and
jp
mov
mov
arpl
or
xor
xor
dec
ja
lods
push
jb
lods
pavgb
stc
(bad)
mov
or
stc
popa
outs
jecxz
ret
sbb
adc
cmp
inc
loop
xchg
push
in
movs
mov
cmp
adc
call
test
adc
xor
lds
leave
cmp
sbb
repz
adc
aas
jo
mov
movs
push
mov
bound
xchg
jmp
fld
(bad)
fsubr
adc
jmp
scas
push
aad
jne
addr16
push
inc
ffree
js
adc
jmp
jmp
adc
loop
and
(bad)
mov
(bad)
cdq
fld
mov
mul
lods
add
add
push
inc
cmps
fisubr
mov
lock
jne
pop
ins
ret
sbb
repnz
inc
xor
cmp
neg
or
cmp
and
lahf
call
(bad)
mov
cmp
mov
mov
inc
(bad)
jno
enter
or
push
jno
inc
push
add
sbb
push
pop
call
dec
cmp
(bad)
fist
mov
push
mov
out
pop
jmp
shr
add
xchg
or
add
inc
sub
jmp
js
call
sub
(bad)
retf
(bad)
pop
jle
add
sar
test
cdq
das
dec
add
xchg
and
shl
inc
test
dec
shl
scas
mov
push
or
inc
mov
jbe
out
daa
loop
xor
int
mov
add
push
rcr
inc
adc
in
retf
add
push
mov
adc
inc
inc
cmp
loopne
(bad)
sub
data16
cmps
test
inc
dec
push
shl
mov
sbb
movs
test
mov
mov
lds
sbb
cmp
addr16
sub
xchg
mov
mov
pop
adc
xchg
cmp
cmp
xchg
cld
push
stc
jle
(bad)
imul
loopne
xchg
add
jecxz
imul
loopne
or
in
or
lock
mov
hlt
clc
test
rcr
xor
les
dec
mov
les
dec
mov
rcl
leave
popa
mov
mov
cdq
add
clc
test
hlt
int3
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
lds
mov
xchg
inc
shr
add
out
inc
loopne
rol
lock
add
in
test
loopne
xchg
add
call
sbb
rcl
mov
xchg
add
in
xchg
add
loopne
xchg
add
call
cdq
adc
loopne
cdq
add
mov
adc
inc
call
lock
add
call
clc
adc
jmp
loope
mov
cdq
je
sub
sub
and
mov
adc
xacquire
or
pop
jns
loop
adc
(bad)
call
push
mov
cmp
xchg
add
jmp
sbb
pop
les
rol
mov
in
dec
sbb
jne
cmp
sbb
call
loopne
adc
test
(bad)
call
inc
cwde
loope
inc
pop
int
mov
pushf
shl
pop
retf
pop
movs
add
xor
adc
jmp
sub
pop
mov
(bad)
sub
into
sbb
mov
int
jmp
daa
sbb
cld
fst
pop
(bad)
fwait
mov
cmp
pop
sar
(bad)
sbb
inc
xor
xchg
xchg
or
pop
push
jg
fmul
mov
leave
mov
call
shl
push
add
ret
xlat
jnp
inc
and
mov
dec
lods
xlat
ror
movs
scas
out
repnz
xchg
mov
adc
jae
lds
out
outs
shl
pusha
mov
leave
mov
xchg
popf
jp
inc
in
out
enter
clc
cmp
xor
dec
je
outs
retf
inc
mov
pop
ins
cmp
push
inc
xlat
call
mov
test
fnsave
aaa
ins
arpl
inc
adc
iret
xor
je
into
push
retf
sbb
pop
mov
dec
push
(bad)
jnp
mov
fs
ds
and
xor
xchg
hlt
fisub
mov
lods
clc
mov
sub
fstp
ss
dec
faddp
call
movs
out
inc
mov
in
sbb
scas
push
mov
or
mov
jecxz
test
add
les
jle
sbb
pop
add
mov
xchg
add
arpl
xchg
add
ficom
add
test
and
sti
xchg
movs
mov
call
xchg
add
call
or
mov
ins
xchg
pop
jae
mov
mov
mov
in
xchg
adc
fiadd
and
jnp
fisubr
rol
in
icebp
pshufw
and
icebp
loop
adc
sub
les
xchg
shl
mov
and
repz
(bad)
cmp
and
pop
out
sbb
sub
push
adc
and
sahf
iret
sub
inc
cs
or
adc
fwait
fs
outs
pop
int
mov
xor
adc
xor
repnz
mov
xchg
bswap
lds
jg
repz
dec
mov
aas
jmp
cmp
mov
sar
jp
leave
sbb
movs
jb
mov
mov
adc
mov
jo
push
popa
mov
ja
cmp
(bad)
call
jle
add
jl
dec
dec
out
jecxz
xchg
mov
xchg
sbb
dec
and
lods
mov
xchg
les
cmps
fldenv
jo
mov
sbb
and
xor
shl
cmp
ret
mov
cmc
movs
sub
iret
push
mov
fiadd
aam
push
cmp
daa
in
fcom
add
sbb
dec
jb
sar
ss
(bad)
push
inc
dec
mov
cmps
push
xchg
xor
mov
arpl
jp
sbb
and
outs
fsub
lds
push
ins
lahf
push
or
mov
shl
leave
test
stos
jb
pop
fild
outs
fdivr
sbb
mov
(bad)
jne
stc
sar
and
push
mov
out
adc
stos
(bad)
cmp
gs
inc
dec
aad
clc
imul
inc
int3
pop
jmp
dec
mov
(bad)
es
sbb
mov
(bad)
in
pop
jae
(bad)
in
pxor
rcl
or
ret
fidivr
xor
inc
stos
inc
loope
stos
push
jns
add
loopne
push
mov
inc
xlat
adc
fnstenv
adc
rol
sti
ds
adc
inc
pop
inc
xchg
sbb
lahf
add
jno
stos
sub
mov
sbb
stos
gs
mov
mov
lahf
adc
sbb
(bad)
sar
aaa
fs
push
sbb
sti
leave
sbb
or
mov
add
lea
pop
sbb
aam
pop
and
inc
push
xchg
jbe
add
cmp
sub
sbb
dec
cmp
dec
rol
in
test
clc
loopne
add
call
xchg
add
lock
add
sub
inc
movs
adc
cdq
add
or
outs
out
movs
ins
pop
sbb
xor
cmps
inc
out
push
daa
inc
stos
mov
popf
jno
pop
out
jnp
test
sub
movs
or
mov
js
jns
inc
mov
fs
mov
imul
fistp
pop
out
jnp
xchg
xor
pop
pop
cld
outs
call
jmp
imul
jnp
add
sbb
stos
cmp
push
loopne
rol
in
popf
or
in
cdq
or
loopne
xchg
add
test
fld
sub
add
sbb
movs
and
xchg
and
loopne
add
mov
fist
dec
fist
lods
jmp
iret
or
mov
add
ret
mov
inc
push
popf
adc
add
push
jo
mov
or
mov
aaa
sar
add
into
xchg
sub
push
imul
mov
mov
push
cmp
jns
fs
jmp
adc
cs
movs
sub
or
pop
daa
cmp
or
adc
sbb
lods
xor
gs
hlt
test
addr16
pop
inc
cmp
sub
jns
int3
out
xchg
outs
pop
xchg
scas
cmps
xchg
jne
lods
arpl
rol
jl
adc
pop
fs
into
pop
outs
and
sbb
lods
popf
mov
int3
jno
jecxz
mov
dec
adc
rcr
retf
clc
mov
cmp
out
mov
in
xchg
push
add
sub
xlat
cmps
cld
jb
mov
int
dec
mov
(bad)
xor
dec
xor
xchg
pop
mov
or
and
retf
aad
(bad)
shr
ins
push
adc
push
fidiv
gs
mov
loopne
jnp
rcr
sbb
sub
or
inc
(bad)
xor
pop
mov
push
jb
jbe
adc
xor
in
lea
mov
xchg
jmp
test
mov
adc
add
sub
dec
or
sbb
jae
sbb
sbb
inc
mov
mov
popf
out
out
leave
nop
retf
addr16
aad
aaa
dec
mov
xor
sbb
inc
int
ror
mov
fild
movs
and
aas
pop
popa
enter
imul
and
lfs
rcr
lods
rol
pushf
sbb
mov
add
sbb
pop
dec
pop
ror
add
push
shr
push
pop
pop
push
call
sbb
pop
mov
outs
cmps
xor
inc
mov
push
aaa
sti
add
mov
sbb
shl
shr
cwde
mov
mov
jb
rcl
adc
xchg
(bad)
retf
adc
jne
(bad)
mov
mov
nop
(bad)
cmp
cdq
js
pop
xchg
jno
push
sbb
or
(bad)
in
outs
push
xor
imul
lock
inc
loopne
cdq
or
loopne
adc
loopne
xchg
add
loopne
adc
lods
or
in
rol
scas
pop
fs
test
sub
mov
loope
inc
gs
push
cs
dec
sub
push
loopne
xchg
add
or
and
retf
mov
(bad)
xor
loope
into
lock
xchg
pop
lods
xor
adc
movs
jg
arpl
jge
js
icebp
cmp
or
push
xlat
or
ins
dec
jmp
mov
sti
xchg
adc
push
(bad)
push
fs
fbld
dec
(bad)
mov
test
cmp
inc
fimul
xor
stos
inc
inc
int
neg
mov
push
mov
or
stc
lods
mov
jo
out
inc
mov
push
dec
inc
dec
push
in
jns
sub
inc
add
add
xor
mov
mov
cmp
jmp
sub
cmp
cdq
xor
xor
fs
(bad)
and
fistp
shl
dec
mov
or
push
fldlg2
mov
out
aam
sbb
and
and
popa
mov
neg
bnd
xchg
fisubr
mov
movs
sub
test
add
mov
xor
std
loope
or
scas
fdivr
rcr
add
inc
sub
mov
dec
inc
mov
cmps
jl
and
sub
stos
ret
add
push
push
xor
mov
sbb
fadd
jo
ins
push
and
(bad)
enter
lea
mov
js
mov
sbb
fld
xchg
cmps
xor
push
ret
in
jbe
xor
jle
cmc
pop
jl
in
dec
loope
js
mov
mov
mov
daa
cmp
iret
push
jl
mov
pop
mov
ds
and
lahf
cli
mov
stc
push
pop
mov
add
sbb
dec
dec
jno
push
xchg
(bad)
in
test
shr
je
test
aas
lahf
xor
ins
fiadd
stos
and
pop
push
adc
add
and
mov
jmp
add
jle
add
mov
lds
sahf
loop
mov
sbb
push
imul
push
arpl
sbb
lock
std
and
xchg
imul
mov
pop
lock
dec
idiv
mov
ret
test
xor
mov
xchg
jle
std
bound
inc
xor
jmp
sbb
mov
or
fldcw
xor
outs
fsubr
adc
mov
mov
push
test
fs
xchg
out
inc
jge
mov
mov
mov
xchg
mov
push
jg
xor
mov
gs
mov
and
cmp
retf
pop
jl
mov
or
data16
pop
push
sub
addr16
or
call
lds
mov
out
outs
xor
add
or
push
gs
jae
mov
adc
(bad)
cmp
push
adc
mov
fimul
js
cli
adc
das
lock
in
cdq
jmp
jmp
mov
div
cmp
mov
inc
or
das
jge
pop
mov
add
jmp
cmc
push
pop
mov
mov
cmp
mov
add
mov
lods
sub
pop
idiv
pop
popf
inc
in
jae
pop
sub
lds
dec
adc
mov
and
or
xor
test
mov
rcr
cs
xchg
addr16
mov
adc
jg
xor
sub
ror
test
mov
loope
adc
inc
add
adc
dec
xlat
cmp
add
ds
mov
call
je
sahf
jns
nop
mov
lods
mov
retf
je
(bad)
push
jl
out
gs
outs
int
out
aas
(bad)
inc
sbb
imul
mov
adc
push
adc
movs
lods
call
sti
jmp
xor
fwait
and
repnz
je
pop
sbb
inc
js
or
push
mov
xor
arpl
push
jnp
sub
mov
ficom
aaa
mov
ret
fwait
loop
rcr
push
mov
cmp
fistp
xor
mov
scas
xor
fild
pop
fadd
mov
ret
(bad)
xchg
dec
dec
ret
icebp
test
inc
mov
mov
adc
fdiv
fcomp
jb
add
jne
(bad)
shr
dec
scas
pop
push
cdq
cmp
add
sub
jle
sar
inc
jno
mov
push
push
lods
add
lods
lds
jo
loop
hlt
sub
rcr
xor
push
(bad)
sahf
in
pop
mov
in
mov
shr
into
jb
mov
clc
stos
cmps
ret
jb
movs
xor
fsubr
lds
in
ja
dec
xchg
clc
(bad)
arpl
leave
push
pop
shl
mov
movntps
mov
mov
inc
je
rol
(bad)
sbb
cmps
push
jnp
jl
(bad)
push
ret
xchg
mov
ds
push
(bad)
mov
ss
add
data16
add
xchg
inc
(bad)
mov
mov
pop
jae
pop
mov
mov
fldcw
ja
or
jl
hlt
loope
add
rcr
loop
jmp
out
add
call
out
pusha
stos
icebp
das
xor
gs
mov
lock
mov
cwde
clc
aas
ins
stos
mov
push
sbb
repz
dec
mov
sahf
aaa
pop
mov
test
mov
(bad)
jnp
cdq
mov
sub
dec
mov
sahf
ret
adc
sub
fnstcw
sub
and
adc
fdiv
inc
inc
dec
sbb
cwde
mov
pop
ret
jb
data16
stos
int3
mov
(bad)
js
push
les
cmc
into
mov
das
add
lods
outs
enter
call
gs
and
sub
idiv
(bad)
repz
jge
or
mov
std
dec
add
jmp
inc
in
out
xchg
jo
and
mov
push
sub
in
inc
in
cmp
push
fstp
ret
adc
sub
leave
scas
push
jl
es
cmp
jecxz
mov
scas
cmps
cmp
jbe
int
mov
in
dec
jmp
mov
adc
loopne
shl
add
mov
xor
int3
fild
push
inc
out
cld
loope
call
adc
dec
aad
loopne
popf
or
in
or
in
xchg
add
call
adc
in
adc
in
pop
shl
add
sbb
xchg
and
in
xchg
add
lahf
and
push
mov
nop
and
cmp
arpl
sti
std
call
cmp
js
iret
sbb
adc
push
addr16
mov
aam
retf
fs
or
bound
loopne
jle
pop
into
mov
push
xor
sbb
pushf
jne
loop
pusha
daa
outs
push
inc
inc
mov
cmp
mov
out
arpl
movs
loop
aam
mov
push
out
ficom
je
mov
nop
call
shr
cmp
mov
fist
sub
xor
or
sbb
sub
aad
xchg
mov
mov
(bad)
cmp
jae
adc
and
out
nop
jl
sub
mov
(bad)
or
sbb
jecxz
not
arpl
mov
bnd
jl
sub
or
or
xchg
lods
into
pop
aas
(bad)
adc
xor
jae
fdivr
cwde
out
mov
or
mov
aas
xor
add
clc
into
loopne
cvtpi2pd
jmp
jl
imul
retf
jecxz
movs
movs
push
ss
dec
rcr
adc
sbb
(bad)
pop
or
sbb
push
sbb
adc
push
(bad)
pop
loope
dec
mov
ins
adc
pop
xor
inc
inc
outs
adc
popa
pop
shl
fdivr
call
leave
push
xchg
mov
or
movs
push
outs
es
xchg
inc
cmp
mov
or
scas
sub
mov
loop
mov
xor
(bad)
pop
or
add
and
mov
je
xor
and
ficomp
fld
xchg
mov
mov
mov
sbb
and
cmp
das
fxtract
aas
mov
or
lods
mov
pop
cdq
add
sbb
and
jl
test
rcr
les
xchg
mov
call
inc
mov
push
fwait
cmps
sar
xchg
(bad)
and
pop
mov
mov
clc
mov
mov
ror
inc
loopne
stos
or
jecxz
(bad)
sbb
dec
test
jmp
dec
xchg
inc
mov
sbb
jne
ja
addr16
je
push
add
adc
into
xor
push
pop
push
(bad)
in
and
cmp
dec
push
xchg
jp
push
dec
mov
jns
mov
adc
sbb
mov
pop
shr
std
mov
movs
or
or
jp
ins
jo
mov
cmp
fs
aam
inc
retf
fld
test
es
adc
sub
pusha
and
fsubr
sbb
scas
scas
test
xor
fwait
pop
adc
push
mov
hlt
pushf
or
adc
mov
(bad)
sub
inc
pop
adc
test
sub
xlat
out
loopne
hlt
jnp
scas
adc
mov
cmp
adc
jecxz
addr16
inc
and
sar
rcl
cmps
lods
cdq
hlt
enter
xchg
shl
fisubr
push
cld
mov
into
sar
mov
enter
xor
into
mov
test
ds
inc
mov
dec
sub
(bad)
cwde
mov
or
or
or
adc
lods
and
or
pop
mov
test
pop
test
push
mov
in
call
mov
mov
add
cmp
enter
mov
cmp
cmp
ins
mov
aam
sbb
jne
mov
dec
fiadd
and
jbe
inc
les
out
dec
outs
cmp
and
pop
aaa
add
or
out
or
mov
mov
mov
in
cmp
xchg
sub
sub
add
popaw
loope
jmp
and
leave
xor
popf
repz
les
pop
jg
jb
xor
ror
dec
popf
cmp
arpl
not
dec
leave
add
(bad)
ret
or
push
test
int3
xchg
aad
test
loope
xchg
cmp
xor
lock
data16
popf
stos
sub
das
pop
sub
mov
lock
fisttp
push
or
in
call
icebp
ror
mov
add
das
jo
mov
stos
enter
popf
fsub
or
add
int
outs
cmps
jo
mov
(bad)
stc
pop
dec
(bad)
jg
sbb
mov
xchg
xchg
jno
loop
sub
push
in
adc
fstp
pop
jo
jmp
push
mov
adc
loop
mov
mov
int
pusha
xchg
hlt
ins
inc
mov
js
test
test
xchg
shr
gs
daa
je
mov
sbb
xchg
pusha
lods
xchg
or
in
xchg
add
call
xchg
add
in
push
inc
jecxz
adc
mov
mov
in
in
xchg
std
mov
sbb
xchg
pushf
shl
out
xor
mul
std
or
int
dec
pop
movs
stos
repnz
je
outs
lahf
repz
arpl
jp
outs
aaa
add
loopne
add
push
mov
mov
mov
sub
push
out
and
pop
inc
(bad)
hlt
xchg
adc
sub
inc
xchg
out
test
outs
xchg
mov
stos
test
out
push
in
movs
push
xor
in
xor
pop
shr
icebp
arpl
adc
inc
xchg
cs
sbb
xchg
or
outs
outs
sub
jg
(bad)
idiv
call
cmps
sub
adc
retf
fcmovnb
xlat
stc
fs
jl
mov
retf
dec
fisttp
inc
ror
adc
mov
push
lock
fsub
jle
sti
xchg
test
popf
or
loopne
xchg
add
in
xchg
inc
gs
add
and
dec
in
xchg
std
mov
pop
sub
xor
lods
lods
rcr
sub
aas
ins
aas
pop
sbb
call
stos
pushf
sar
retf
das
out
fcmovu
adc
pop
jbe
mov
or
push
and
inc
jg
fdivr
into
out
call
jle
jno
mov
clc
adc
mov
xchg
sbb
div
pop
test
cmp
mov
mov
bound
dec
bound
mov
enter
push
xchg
xchg
push
pcmpeqw
xlat
inc
pop
mov
leave
jge
mov
xor
repz
push
ins
repz
cwde
xor
sub
pop
jb
retf
jae
aas
lds
adc
mov
xchg
sub
and
or
inc
outs
inc
js
cmp
icebp
shl
call
in
call
leave
shr
sbb
shl
movs
push
mov
repnz
cs
pusha
jmp
pop
xchg
test
or
pop
xchg
sbb
xor
popf
sbb
mov
rcr
pop
pop
jmp
arpl
pop
jg
jg
lock
ins
aaa
inc
xor
je
cli
cs
dec
push
ins
adc
xchg
dec
xor
iret
or
or
into
fist
ret
dec
or
das
xchg
push
popa
and
movs
dec
leave
aas
and
xor
enter
jno
and
xor
test
push
adc
jmp
mul
fdiv
or
ficomp
arpl
nop
in
in
dec
push
adc
popa
adc
and
mov
xlat
or
nop
add
(bad)
retf
mov
stos
push
and
push
lods
add
(bad)
aas
ins
xor
sub
xchg
mul
out
sbb
rcl
mov
sbb
cmps
test
cmc
aam
and
sub
shr
xor
pop
lods
(bad)
jg
push
add
call
in
add
movs
call
adc
in
rol
cs
inc
sbb
xchg
and
in
xchg
add
pop
ds
pop
or
xor
out
jns
lea
and
jno
push
jmp
inc
inc
and
stc
stos
fidiv
add
and
adc
push
dec
scas
pop
out
jle
into
imul
mov
xlat
dec
pop
sub
into
nop
test
mov
ds
jmp
pop
jnp
xor
dec
jmp
push
jmp
std
sub
sbb
push
sahf
cmp
or
xchg
(bad)
ds
xchg
repnz
mov
rcr
inc
pop
into
cld
lock
and
mov
jmp
fsubr
and
push
push
mov
mov
adc
cmps
mov
sti
call
jmp
xchg
icebp
xor
push
mov
arpl
out
jp
mov
not
inc
data16
xor
xchg
rcr
sub
rcr
mov
inc
call
or
push
mov
neg
call
or
mov
mov
adc
jge
lahf
jno
push
in
ss
out
fdivp
ret
add
cmp
popf
or
repnz
jnp
out
dec
ins
pop
pop
daa
dec
adc
and
out
xor
adc
push
std
mov
jnp
shl
mov
outs
in
push
cmp
out
adc
adc
jg
rcr
mov
mov
data16
jb
jo
pop
sbb
add
xlat
aaa
ss
xchg
mov
cmp
ins
dec
sar
mov
mov
fs
xor
lahf
mov
out
out
sti
adc
jl
add
mov
mov
aas
and
push
lock
and
inc
xchg
das
sar
into
rcr
add
lahf
mov
pop
(bad)
loope
pop
push
push
(bad)
and
adc
call
into
jmp
sub
arpl
push
dec
enter
ds
sub
or
cmc
pop
sbb
sub
aas
push
or
outs
adc
push
pushf
dec
loop
loopne
sub
enter
in
data16
inc
push
fwait
jecxz
push
xchg
mov
hlt
sub
stc
aad
push
mov
lods
mov
jbe
sbb
imul
stos
(bad)
iret
adc
out
cmp
sbb
dec
push
lods
sbb
or
jecxz
fiadd
xor
lds
test
loopne
fcmovu
adc
adc
xor
jne
xlat
pop
xchg
add
rcl
or
sub
and
or
ror
push
icebp
fwait
(bad)
(bad)
xchg
lds
jmp
iret
int
pop
dec
or
mov
adc
data16
adc
pusha
scas
sti
mov
mov
movs
mov
cmp
cld
sub
dec
mov
adc
in
ins
sar
rol
and
repz
nop
sbb
or
stos
(bad)
call
xor
push
xchg
cmp
imul
loope
ficom
sbb
push
jmp
push
push
ds
xchg
ss
jnp
lock
pop
pop
cmp
scas
sbb
loopne
fwait
sbb
outs
sub
dec
in
push
sbb
pop
hlt
cmp
jecxz
popf
inc
call
scas
int3
add
dec
sbb
aaa
in
mov
sbb
jg
cs
fsubp
fist
mov
add
movs
adc
cli
pop
mov
sbb
mov
add
inc
movs
jbe
push
xlat
push
and
jg
inc
mov
add
and
jecxz
repz
push
or
cmp
add
cmp
test
adc
or
xor
imul
mul
add
test
jns
pushf
aad
push
inc
scas
xchg
pop
(bad)
fidiv
in
mov
xchg
push
jno
xor
jle
(bad)
repz
test
and
movs
xchg
rdpmc
cmp
xchg
shr
stos
mov
out
add
stos
pop
xor
addr16
cmp
xor
dec
xor
fistp
cs
test
cmp
xchg
sbb
push
pop
in
pop
mov
mov
or
test
dec
adc
test
in
icebp
out
mov
dec
call
jmp
js
and
ret
retf
mov
add
mov
cmp
out
cld
add
mov
cmc
xchg
or
mov
rol
xor
out
or
std
cmps
clc
in
rol
dec
fiadd
addr16
mov
xchg
xchg
(bad)
je
aaa
and
mov
jmp
(bad)
rcl
mov
retf
xchg
nop
mov
ins
push
loop
lock
sahf
(bad)
dec
inc
adc
ds
push
dec
adc
sbb
sar
into
dec
loopne
shr
sbb
mov
add
shl
dec
lea
je
int3
mov
push
fs
cli
sbb
sbb
mov
sbb
mov
jo
xor
aam
pusha
ss
fbstp
cld
push
shr
aas
test
jnp
fstp
pop
mov
ficom
or
mov
mov
ins
add
sbb
sub
or
and
pop
or
mov
jnp
test
adc
ret
out
call
mov
outs
or
mov
dec
dec
push
sahf
fucomp
xor
in
out
repnz
jmp
scas
push
test
adc
shr
repz
out
mov
ret
xchg
and
sar
xchg
inc
pushf
fwait
add
sbb
jmp
xchg
into
imul
fld
mov
dec
sahf
push
push
push
fst
jp
fdivr
mov
dec
fmul
add
cld
fisub
popf
mov
jg
rol
aad
or
xor
add
and
sbb
and
sbb
sub
dec
adc
pop
mov
adc
xor
imul
sub
adc
fwait
imul
pop
mov
out
aaa
mov
sub
call
mov
mov
retf
jmp
outs
or
xchg
add
sbb
add
and
add
sub
add
cmp
add
mov
stc
pop
loopne
push
add
mov
push
loopne
push
add
mov
loopne
lods
add
sbb
or
js
add
ins
sbb
loopne
mov
or
cmp
add
mov
or
cmp
add
les
add
int3
inc
or
loopne
add
(bad)
clc
or
in
add
rcl
or
loope
adc
add
push
dec
add
movs
lea
loopne
sbb
loope
xor
loopne
adc
loope
mov
add
dec
push
sbb
jmp
xchg
mov
inc
cmp
add
dec
jo
jecxz
xor
mov
inc
std
mov
cmps
adc
ss
shr
xchg
mov
inc
iret
xor
pop
dec
hlt
iret
out
xor
mov
(bad)
push
add
call
xchg
add
cmp
xor
loopne
cmp
pop
aas
sub
and
test
mov
adc
jne
(bad)
xchg
sbb
loopne
xchg
add
hlt
add
jmp
add
call
movs
add
call
nop
std
xor
adc
xchg
add
xchg
std
xor
dec
out
inc
loopne
imul
push
mov
jge
jecxz
xchg
lods
mov
js
pop
loopne
xchg
add
cli
xchg
loope
mov
add
call
mov
inc
inc
stos
adc
push
(bad)
aaa
outs
test
cmp
cwde
jmp
(bad)
in
add
sub
gs
jmp
mov
ins
into
in
add
dec
jmp
mov
cwde
xor
jle
cmp
mov
fbstp
xchg
adc
in
mov
and
mov
or
(bad)
(bad)
pop
addr16
ja
push
shr
dec
fs
push
(bad)
dec
xor
fsubr
retf
cdq
test
pop
addr16
jle
jg
pop
data16
retf
cli
inc
movs
push
inc
cmps
cwde
xor
xlat
mov
jo
sahf
pop
gs
dec
or
sahf
movs
pop
jmp
imul
cmps
xor
dec
fs
movs
fisttp
mov
fwait
sub
mov
lea
pop
addr16
ja
out
xchg
retf
pop
imul
pop
data16
test
mov
imul
push
pop
or
cmp
jo
mov
push
cmp
movs
cdq
js
retf
sbb
fbstp
(bad)
sbb
stos
cwde
fmul
fst
sub
test
lahf
int
jbe
pop
loopne
sahf
pop
fistp
xchg
adc
into
jg
sti
sub
inc
movs
iret
jle
hlt
out
dec
clc
mov
jle
or
mov
les
jg
pop
gs
pop
addr16
jbe
jo
sbb
xchg
loopne
jle
imul
jnp
pop
retf
leave
mov
mov
stos
pop
add
lea
xchg
cdq
js
xor
jl
clc
mov
mov
out
test
popa
mov
ins
lods
fwait
inc
fwait
lds
addr16
push
mov
fdiv
cmps
outs
mov
scas
(bad)
test
ins
pop
inc
rcl
inc
hlt
gs
dec
xchg
push
push
jge
test
ret
xor
(bad)
outs
imul
mov
xchg
sbb
adc
push
call
mov
mov
pop
rcr
mov
movs
call
pop
mov
xor
or
jle
movs
inc
jo
or
repz
mov
fisub
xchg
pop
pop
icebp
push
mov
cmp
jle
or
or
dec
movs
mov
jnp
mov
adc
inc
(bad)
int
rol
rcl
cmps
addr16
inc
imul
not
mul
push
dec
nop
jmp
ret
movs
call
(bad)
push
pop
stos
hlt
mov
mov
xchg
push
pop
daa
mov
pop
repnz
movs
push
jge
or
jge
pop
inc
aam
(bad)
fdivr
and
sbb
ins
ins
sub
movs
dec
sbb
ins
ins
sub
sbb
dec
adc
dec
sbb
gs
ins
fild
outs
inc
add
inc
dec
stc
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fdivrp
int3
movs
fidivr
jne
call
int3
movs
fdivrp
pop
or
int
xlat
add
push
add
int
pop
xor
movs
ret
popa
into
stc
ins
mov
cmp
sbb
adc
int
mov
adc
adc
int
fdivrp
int3
push
cmp
int3
movs
fmulp
sbb
sbb
int
sub
or
jno
in
xor
int
fdivrp
int3
or
call
dec
outs
into
stc
xor
retf
movs
rcr
iret
jno
idiv
xor
int
or
pop
or
or
fild
push
add
int
ja
mov
cld
sub
fistp
pop
mov
jl
cmp
clc
int3
pop
mov
adc
jg
fsub
enter
repnz
test
fisub
int3
jmp
or
push
int3
movs
shr
pop
mov
fisttp
faddp
or
sub
fistp
leave
arpl
int
retf
mov
pop
outs
dec
and
inc
jge
call
movs
fwait
cmp
jne
or
jmp
stos
outs
mov
cmc
xor
pop
shl
pop
lods
and
int3
cdq
js
(bad)
jmp
cs
fwait
nop
popf
add
sbb
dec
dec
clc
aad
mov
lea
scas
xchg
js
les
retf
nop
pop
xor
nop
dec
hlt
sub
mov
mov
mov
jne
lea
pop
lea
push
hlt
lock
mov
fldenv
jb
mov
mul
xchg
mov
pop
jno
jae
mov
retf
mov
loop
pop
mov
ins
stos
jae
shl
inc
jo
jl
addr16
fs
sbb
pushf
inc
addr16
shl
mov
mov
jge
(bad)
in
xchg
dec
xchg
shl
retf
mov
cld
imul
mov
ins
adc
xchg
cdq
pop
lock
rol
or
fs
xor
std
jbe
je
mov
les
ret
hlt
xlat
mov
pop
int
int3
inc
hlt
mov
test
hlt
inc
hlt
push
fstp
cwde
sbb
push
mov
fs
mov
jge
push
fld
std
hlt
sub
xor
in
in
adc
je
test
out
adc
imul
add
cmp
mov
jns
ret
call
mov
out
(bad)
ss
lahf
int3
xlat
mov
and
in
add
sbb
or
mov
sbb
fistp
ja
or
mov
out
lds
lahf
add
sbb
or
mov
adc
retf
dec
mov
out
in
lock
cmp
test
adc
or
mov
pop
cmp
scas
add
call
lods
in
aam
adc
jne
pop
aaa
mov
mov
or
mov
mov
out
mov
and
in
adc
out
ja
icebp
xor
ja
and
je
mov
adc
jecxz
adc
jecxz
out
in
fidivr
in
(bad)
pop
stc
mov
jns
mov
push
sub
xor
adc
inc
mov
cmp
lods
in
aam
adc
xor
push
sub
mov
mov
or
mov
mov
loop
adc
adc
in
adc
out
ja
icebp
xor
push
frstor
ds
mov
adc
jecxz
adc
jmp
out
in
sub
hlt
mov
in
aam
adc
mov
ds
push
int3
adc
add
push
and
out
das
sub
cmp
push
out
in
inc
hlt
out
push
cmp
lods
in
aad
adc
fdiv
push
int3
adc
add
out
adc
adc
out
das
sub
cmp
push
out
in
es
hlt
ficom
cmp
lods
in
aad
adc
mov
cmp
mov
adc
lahf
popf
add
mov
and
out
das
sub
adc
jmp
out
in
cmps
pop
hlt
push
adc
in
in
aad
adc
fdiv
push
int3
adc
add
adc
adc
in
adc
out
add
mov
and
in
adc
out
(bad)
aas
adc
in
adc
out
mov
adc
in
adc
out
addr16
adc
in
adc
out
push
aaa
adc
in
ret
sbb
push
out
in
push
cmp
mov
out
in
xor
in
ret
push
out
in
cs
mov
out
in
inc
cmp
mov
out
in
jbe
in
ret
push
out
in
cmp
mov
xor
xchg
push
test
push
sub
xor
adc
dec
repz
sub
mov
mov
or
mov
xchg
xchg
(bad)
xchg
add
movs
pop
inc
jle
mov
mov
movs
pop
lds
dec
dec
jecxz
popa
and
in
inc
outs
cmp
ficom
in
mul
dec
mov
sbb
(bad)
stos
gs
inc
pop
(bad)
mov
sbb
cmp
mov
xor
(bad)
adc
and
mov
aaa
add
clc
cmp
mov
ds
(bad)
outs
adc
sar
in
pop
xchg
xchg
xchg
in
out
ins
mov
jbe
or
mov
inc
mov
lods
or
(bad)
jmp
adc
inc
scas
adc
cmp
fnsave
jge
cmc
lods
dec
mov
out
into
cmc
or
call
push
out
mov
mov
xlat
mov
into
sub
and
int3
jo
adc
jmp
xchg
and
in
mov
or
xchg
add
(bad)
mov
ficom
jmp
mov
pop
ss
fimul
jmp
mov
adc
out
pop
fwait
dec
inc
jecxz
bound
or
mov
adc
sub
and
jo
adc
call
mov
push
daa
jmp
mov
jmp
faddp
mov
sbb
or
das
(bad)
xor
and
in
add
sbb
or
mov
sbb
fistp
ja
or
mov
out
lds
lahf
add
sbb
or
mov
adc
retf
dec
mov
out
in
lock
cmp
test
enter
je
add
out
adc
div
das
sub
mov
and
out
xchg
data16
(bad)
(bad)
icebp
inc
ret
sub
fs
xor
(bad)
icebp
adc
sub
add
sbb
js
mov
call
popf
int
jb
jbe
jo
dec
push
fcomip
mov
adc
pop
mov
or
adc
mov
addr16
mov
shl
mov
xor
lods
mov
scas
mov
aas
cdq
pop
xchg
dec
fisttp
test
fsub
pop
data16
xchg
sbb
xchg
or
xchg
sub
xchg
les
push
mov
addr16
pop
cdq
lahf
rol
js
outs
mov
jmp
xor
inc
imul
or
sbb
mov
xchg
sbb
adc
jg
push
cmp
dec
jge
pop
retf
mov
ret
test
sub
lods
ret
xor
mov
imul
mov
loop
mov
mov
pusha
movs
adc
mov
sti
or
(bad)
call
mov
mov
rol
xchg
jg
push
call
push
cmp
sub
sub
inc
jne
adc
movs
fwait
or
or
ja
inc
mov
retf
pop
(bad)
outs
mov
sub
mov
or
inc
mov
push
loopne
or
mov
cmps
call
mov
mov
cmp
xor
popa
in
mov
pop
mov
lods
inc
push
mov
daa
lds
fadd
push
mov
add
dec
jne
jmp
loopne
sbb
je
push
test
mov
(bad)
inc
push
adc
pushf
jmp
out
inc
mov
aad
pop
out
add
mov
push
cmc
ins
jmp
inc
(bad)
cmps
dec
aam
adc
push
mov
push
jg
fisubr
movs
sub
adc
leave
repz
and
aad
pop
out
add
mov
aad
pop
out
add
mov
push
add
out
loopne
mov
inc
jge
outs
and
(bad)
jmp
push
inc
mov
ret
mov
add
ins
push
inc
clc
pop
adc
xchg
fcom
cmp
inc
lock
push
je
sub
fcom
adc
mov
lods
dec
jo
mov
test
cmp
mov
pop
xor
push
xlat
cld
adc
data16
popa
mov
stos
ja
(bad)
out
cmps
jg
dec
leave
jnp
pop
enter
jmp
mov
inc
cs
aam
fwait
pop
mov
push
or
pop
xchg
mov
jmp
lods
in
imul
ficom
pop
movs
rcr
jae
dec
xchg
push
pop
mov
in
xchg
scas
jne
pop
mov
pop
dec
cdq
pop
gs
lock
mov
mov
mov
push
mov
mov
push
inc
mov
pop
rcr
pop
mov
int3
xchg
adc
inc
lea
mov
jg
pop
test
cdq
movs
scas
add
sbb
push
jae
icebp
scas
sbb
std
xchg
xchg
push
lock
push
shl
mov
je
movs
iret
xchg
outs
mov
sar
mul
or
fdiv
movs
addr16
mov
jae
test
sbb
ret
movs
cdq
jo
dec
leave
js
inc
mov
test
int3
xchg
fsub
cmps
call
test
nop
xchg
mov
call
pop
cmp
mov
mov
outs
xor
cmp
xor
inc
xchg
add
cmp
add
pop
imul
call
or
out
add
push
xchg
pop
call
or
out
cmp
call
or
xchg
xor
push
mov
dec
loop
das
and
inc
jle
jmp
fiadd
xor
add
ret
mov
jmp
xlat
inc
push
sbb
mov
and
mov
addr16
cmp
cli
cs
inc
outs
ficomp
mov
adc
jbe
mov
jmp
cmps
into
jg
sti
dec
cmp
dec
jmp
mov
gs
pop
xor
pop
nop
lahf
dec
dec
cmps
push
and
loope
jg
div
ficom
jnp
xor
mov
xor
xchg
lea
(bad)
call
popa
mov
sub
call
(bad)
bound
arpl
mov
dec
into
sahf
mov
mov
adc
lock
fst
stos
inc
cld
mov
mov
(bad)
mov
stos
mov
xchg
push
push
mov
mov
dec
es
outs
inc
jo
dec
dec
cmps
push
and
pop
fs
jno
rcl
test
sbb
inc
je
cmp
push
shl
push
mov
add
cmp
mov
dec
xchg
mov
dec
addr16
mov
inc
sbb
(bad)
lahf
dec
movs
cwde
sbb
inc
inc
hlt
stc
jae
dec
push
shl
dec
cmps
or
mov
mov
(bad)
popf
push
mov
stos
addr16
ins
retf
push
data16
dec
or
rcr
cwde
adc
fwait
or
sub
push
sbb
loop
pop
stos
or
mov
pop
cdq
add
lahf
and
scas
or
clc
sbb
nop
mov
mov
test
pop
pushf
loopne
mov
inc
jbe
jb
clc
add
push
ja
out
aam
add
retf
jl
cmps
into
jg
sti
ss
inc
movs
pusha
mov
pop
ja
out
out
(bad)
dec
add
pop
enter
sar
out
pop
pop
scas
inc
(bad)
jl
js
hlt
neg
dec
clc
add
pop
mov
jmp
popf
add
mov
mov
pop
(bad)
lods
push
sbb
and
or
arpl
mov
adc
fcomp
xchg
xor
mov
addr16
push
ret
mov
cmp
hlt
sbb
inc
cmps
shl
gs
pop
gs
mov
gs
shr
or
fwait
mov
je
mov
mov
mov
xchg
shr
jo
mov
sub
fldenv
sub
jg
in
std
ins
hlt
fs
popf
fist
push
mov
jg
mov
pushf
push
mov
push
xchg
int
add
jne
mov
retf
lods
push
mov
movs
push
mov
movs
inc
jb
pop
pop
dec
aad
cwde
sbb
mov
mov
mov
add
xchg
addr16
in
retf
test
pop
cdq
loop
mov
imul
fld
push
push
sub
mov
dec
movs
mov
cmc
xor
fwait
sbb
push
hlt
out
push
clc
mov
cmps
xchg
mov
add
fimul
stos
clc
inc
or
jecxz
pop
repnz
pop
(bad)
in
iret
inc
jb
pop
(bad)
in
push
push
icebp
cmp
mov
xor
push
icebp
dec
sbb
je
int3
dec
mov
cmps
push
pop
retf
pop
retf
pop
retf
mov
in
pop
retf
or
cmp
pop
into
mov
push
pop
(bad)
jmp
dec
out
ror
pop
repnz
pop
(bad)
out
dec
icebp
sti
out
sbb
stc
jg
inc
clc
arpl
idiv
fwait
jbe
sti
dec
arpl
in
arpl
stc
call
pop
mov
arpl
retf
movs
cwde
cmp
stc
cdq
aad
pop
(bad)
and
stos
cwde
push
and
jmp
addr16
cmps
into
jg
sti
cmps
dec
inc
movs
in
jp
jbe
and
gs
xchg
int
jg
pop
pusha
mov
repnz
dec
jmp
ins
inc
hlt
dec
jle
xchg
push
icebp
jge
pusha
mov
pop
mov
pop
inc
clc
gs
pop
mov
add
xchg
push
sbb
test
push
cmps
xor
pop
in
xchg
ins
hlt
or
loope
jbe
push
movs
call
jg
outs
mov
into
xchg
mov
add
push
jg
lea
pop
nop
retf
(bad)
ss
cld
or
pop
imul
ret
ins
pop
sub
push
hlt
aaa
xchg
or
mov
and
add
shl
mov
dec
nop
stos
cmps
addr16
sub
push
fiadd
sbb
push
mov
and
leave
inc
adc
jg
div
fwait
test
dec
(bad)
or
rol
ins
dec
icebp
push
mov
mov
push
dec
xchg
(bad)
pop
cmp
xchg
and
(bad)
in
stos
(bad)
shl
ins
mov
cmc
and
or
jle
pop
push
ret
movs
fwait
jo
mov
or
scas
mov
inc
fadd
lods
clc
es
js
in
aad
inc
mov
ret
(bad)
cmp
mov
mov
mov
cli
sti
push
sbb
call
pop
push
sbb
fwait
mov
push
pop
fist
push
cli
push
sbb
sti
push
sbb
jle
or
push
imul
scas
pop
popf
sbb
push
pop
gs
jl
lods
add
bound
push
scas
das
inc
dec
push
in
mov
test
gs
jl
lods
add
push
in
mov
push
sbb
sti
push
sbb
sti
inc
int
leave
mov
dec
es
test
repnz
mov
push
push
jmp
mov
pop
movhps
push
sbb
sti
inc
dec
(bad)
sbb
mov
pop
fist
push
cli
push
jnp
cli
mov
mov
push
imul
inc
sti
inc
int
pop
xor
or
cmps
push
xchg
sbb
jp
repnz
adc
jp
jmp
in
jne
adc
push
push
fild
hlt
ja
out
xchg
retf
pop
imul
jo
inc
movs
pop
addr16
push
ja
adc
dec
push
inc
movs
dec
jmp
mov
xor
pop
aad
mov
icebp
data16
fmul
dec
pop
nop
outs
mov
shl
mov
div
neg
push
lahf
pop
mov
inc
mov
stos
movs
lds
stc
xor
lea
mov
call
rol
jmp
cmp
mov
ror
push
mov
test
jnp
fdiv
mov
adc
mov
mov
fdivr
popa
jle
pop
leave
ror
jb
mov
push
bound
sub
mov
cld
xchg
in
in
mov
add
fidiv
lods
retf
mov
mov
pop
gs
movs
mov
dec
mov
shl
addr16
icebp
out
mov
jg
mov
or
scas
push
mov
movs
cwde
sbb
aam
mov
int
mov
call
std
jne
push
dec
xchg
ficomp
sti
inc
hlt
fnsave
dec
push
xchg
xchg
retfw
fwait
sbb
inc
xchg
cmc
and
inc
xchg
inc
jno
pop
pop
imul
fwait
or
push
or
mov
dec
movs
pushf
jns
dec
xchg
rcl
scas
test
ret
movs
call
pop
test
jmp
fwait
xchg
test
jne
mov
es
xor
es
xor
daa
sub
xor
daa
xor
xor
nop
xor
mov
nop
pop
test
nop
jecxz
mov
sti
test
nop
cmps
test
nop
mov
xor
sub
nop
sti
test
nop
xchg
test
nop
shr
call
test
mov
xor
daa
sub
xor
sbb
sbb
adc
xor
xchg
mov
daa
outs
fs
xor
dec
and
bound
push
rcl
and
leave
outs
int3
jmp
xchg
test
xchg
xor
fnop
xchg
hlt
xor
mov
xor
push
(bad)
ds
es
or
sub
xchg
xor
popa
add
into
mov
test
jno
push
es
xor
cmp
popf
xor
into
(bad)
bound
test
xchg
inc
fldcw
test
add
int3
push
and
xchg
inc
fldcw
mov
adc
int3
push
and
xchg
inc
fldcw
mov
adc
mov
cmp
xor
es
pop
mov
outs
fs
les
xor
xor
sub
daa
outs
fs
xor
test
icebp
cmp
es
fwait
test
xchg
fwait
test
inc
ret
adc
in
test
jmp
test
xor
xor
lods
and
movs
xor
das
mov
push
aad
test
jle
and
aaa
xchg
idiv
xchg
(bad)
push
fstp
mov
mov
xor
les
in
xchg
sbb
jg
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
addr16
jbe
js
sub
mov
mov
(bad)
dec
(bad)
xchg
dec
movs
lds
pop
fs
jne
mov
pop
fs
xchg
lds
pop
fwait
sub
lock
mov
je
xor
jle
dec
cdq
jnp
pop
retf
and
jge
xchg
pop
cmp
test
fwait
nop
pop
popf
xchg
int
clc
fnstsw
pop
popa
mov
test
call
pusha
mov
bnd
xchg
xchg
sub
xor
cdq
jae
dec
mov
dec
lea
dec
xchg
out
pop
loopne
jg
push
mov
push
loope
test
ja
pop
pop
jle
mov
push
jae
sub
jg
mov
or
pop
mov
jg
mov
fs
addr16
jle
arpl
pop
or
mov
jg
pop
in
push
xchg
pop
push
dec
lahf
mov
dec
mov
ins
mov
jbe
mov
rcl
push
cmp
test
rcl
cmc
mov
push
movs
data16
neg
nop
lods
and
adc
shl
pop
xchg
mov
pop
pop
mov
stos
mov
hlt
mov
push
mov
sbb
sbb
std
add
popf
mov
sub
xchg
cwde
or
loopne
out
dec
movs
mov
loopne
push
jmp
ror
pop
pop
lods
mov
sti
xor
push
sti
movs
in
fldcw
jnp
clc
movs
in
(bad)
(bad)
sti
mov
out
leave
stc
movs
fxch
les
es
in
fnstenv
dec
loop
movs
in
test
jl
imul
xor
out
inc
sub
inc
ins
js
cli
cwde
sub
inc
and
in
test
jl
imul
and
xor
mov
push
fadd
gs
cli
lods
mov
fdiv
movs
mov
movs
stos
ins
push
fsubr
std
and
inc
sbb
int3
fs
test
inc
dec
xor
in
xchg
outs
lods
push
dec
inc
jns
adc
test
ins
jb
in
sbb
jmp
adc
and
ins
xchg
inc
sbb
dec
imul
xor
jo
outs
imul
adc
jl
xor
push
jp
push
fsubr
and
pop
sbb
and
inc
xor
pop
pop
into
and
xor
mov
jo
push
cmp
mov
jo
imul
fdiv
sbb
adc
jl
es
in
or
inc
ins
ins
push
dec
sbb
cmp
or
dec
adc
push
std
into
and
pop
inc
xor
push
mov
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fsincos
movs
in
fprem
add
mov
lahf
test
fdiv
inc
loop
push
movs
popa
mov
cli
or
jns
test
fld
stc
idiv
movs
adc
jbe
int
clc
add
mov
jg
cld
fdivr
jo
push
jg
cld
fcomp
out
fsincos
test
lods
(bad)
(bad)
(bad)
movs
inc
int
test
fdiv
inc
cli
in
jb
fsincos
mov
in
(bad)
movs
in
jno
add
dec
fdivr
lods
in
jno
pop
mov
push
outs
test
fdiv
int
sti
add
fpatan
movs
adc
outs
test
fadd
movs
inc
fcom
adc
jbe
fmul
cli
mov
in
jns
movs
in
in
out
movs
fmul
sti
in
push
pop
xchg
cld
fadd
movs
jmp
fdivr
test
fnstenv
adc
cld
fcom
push
dec
stc
call
mov
call
int3
cli
pop
in
or
fidiv
pop
stc
jmp
fxch
sti
xchg
cld
fdivr
mov
and
sti
test
fisubr
gs
pop
mov
movs
in
jno
or
and
cli
sub
jmp
icebp
into
sti
xchg
cld
fcomp
in
fxch
mov
call
cs
enter
frstor
mov
pop
aaa
in
ret
test
fcomp
jb
stc
call
mov
cmp
mov
cmc
push
add
enter
repnz
icebp
or
dec
out
fsincos
movs
inc
out
loope
call
int3
cli
pop
in
or
sub
loope
pop
test
fdivr
lods
add
das
pop
fld
imul
or
outs
inc
sub
outs
mov
sub
mov
js
scas
mov
js
into
mov
lods
or
mov
clc
or
mov
and
mov
mov
(bad)
movs
adc
push
jae
call
push
mov
sti
fdivr
repz
cwde
add
movs
imul
sti
in
push
pop
xchg
cld
fadd
movs
loope
sti
cwde
stc
mov
push
loopne
enter
leave
dec
cmps
in
fdecstp
push
test
or
leave
cmps
in
aad
xor
out
in
push
(bad)
xchg
out
fdivr
mov
ins
cmc
movs
in
in
lds
push
jg
out
fdivr
mov
cmc
add
cmc
adc
jg
out
fdivr
mov
adc
out
aad
(bad)
not
stc
jmp
lods
leave
cmps
in
fucomp
xor
(bad)
movs
ror
mov
cmps
in
fucomp
xor
aad
movs
ror
cdq
pop
cmp
cmps
in
fucomp
xor
(bad)
movs
ror
test
cmps
in
fucomp
xor
fdivr
movs
ror
mov
in
in
in
in
and
mov
(bad)
pop
mov
(bad)
int
sti
movs
in
fprem
add
cmp
xchg
cld
fmul
je
fprem
jl
js
cld
out
fnstenv
fmul
clc
mov
in
fld
mov
iret
cwde
mov
in
fld
mov
cli
movs
ror
mov
in
in
in
in
and
mov
(bad)
pop
mov
(bad)
(bad)
(bad)
mov
in
and
clc
sub
jo
pop
mov
push
cmps
xchg
out
fcom
(bad)
mov
in
fnstcw
in
fnstcw
in
fldenv
lea
xor
movs
in
aad
outs
inc
out
dec
(bad)
movs
and
pop
dec
out
fyl2xp1
dec
stc
lods
retf
or
retf
cmps
in
fldcw
std
add
das
popf
loope
jg
out
fdivr
je
jge
cmps
in
fnstenv
(bad)
stc
sbb
out
in
fsincos
movs
adc
mov
out
fadd
mov
(bad)
out
cmc
out
fsincos
movs
adc
cmps
xchg
out
fadd
mov
jb
nop
sti
cwde
mov
cmps
in
and
stc
pop
cmp
jmp
in
push
(bad)
xchg
out
fdivr
mov
ins
cmc
movs
in
in
lds
push
jg
out
fdivr
mov
cmc
add
cmc
adc
jg
out
fdivr
mov
or
movs
in
in
aad
fmul
mov
call
adc
pop
xchg
hlt
sub
sti
fist
cmps
add
pop
scas
cmp
adc
sti
movs
in
fsincos
movs
icebp
into
inc
xlat
cld
fdivr
movs
in
fstp
sahf
es
in
and
clc
or
vaddss
(bad)
mov
fucomi
sti
movs
add
add
adc
add
fld1
sti
movs
adc
(bad)
xchg
out
fdiv
mov
xor
cs
(bad)
mov
in
fld
mov
es
(bad)
mov
adc
les
(bad)
sti
mov
in
fld
mov
jb
nop
sti
cwde
mov
pop
adc
scas
lock
sti
test
sbb
das
sub
out
fdivr
movs
in
ftst
mov
jmp
sti
movs
inc
fadd
stc
idiv
movs
adc
pop
movs
(bad)
or
and
sti
test
fisubr
std
loope
mov
jo
jno
or
jno
in
mov
sti
fcomp
retf
or
and
sti
test
fisubr
std
loope
mov
jo
jno
or
jno
in
mov
sti
fcom
dec
hlt
shl
or
fisubr
std
loope
mov
jo
jno
or
jno
in
mov
sti
fcom
dec
mov
mov
and
sti
test
fisubr
and
das
mov
jo
jns
jmp
out
movs
inc
fcom
inc
cwde
mov
mov
aad
loopne
(bad)
movs
ror
(bad)
cmps
in
fst
inc
rol
movs
popa
jnp
mov
(bad)
fmul
sti
add
fsqrt
nop
sti
fxch
mov
cdq
push
jae
in
jmp
adc
out
pop
in
jmp
in
fyl2xp1
movs
sbb
fxch
jb
call
inc
(bad)
cld
fdiv
aas
cmp
out
pop
in
jmp
jmp
mov
call
add
enter
int
mov
aad
cmps
cmp
not
in
jmp
push
fist
inc
fadd
movs
lods
jo
in
mov
inc
sti
fcomp
jg
fdivr
nop
icebp
jmp
inc
fadd
movs
loope
stc
je
aad
loopne
(bad)
movs
cmp
push
movs
inc
fcom
lods
and
add
cli
add
icebp
jmp
inc
fadd
movs
loope
stc
je
aad
loopne
(bad)
movs
cmp
push
movs
inc
fcom
lods
and
add
cli
add
icebp
jmp
dec
js
mov
and
sti
test
fisubr
shl
das
mov
jo
jno
in
mov
sti
fcom
inc
fdivr
mov
jno
add
icebp
jmp
inc
fcom
adc
test
bound
in
shr
mov
mov
mov
jne
test
popf
retf
cmps
in
fldcw
add
sbb
loopne
jmp
inc
fcom
adc
test
bound
in
shr
mov
mov
mov
jne
test
popf
retf
cmps
in
fldcw
add
sbb
(bad)
stc
movs
ror
sbb
pop
cmp
movs
loope
sti
cwde
std
jg
movs
in
std
in
mov
es
paddsb
(bad)
cld
fcom
lods
and
and
sti
test
fcmovb
mov
(bad)
movs
inc
fcomp
(bad)
enter
cdq
add
movs
loope
clc
cwde
std
pop
cli
movs
in
jno
add
lock
inc
fdivr
mov
aad
cmps
ror
fwait
cmps
in
(bad)
mov
ss
pop
inc
fcomp
(bad)
enter
cdq
add
movs
loope
cli
je
jo
add
repz
inc
fdivr
mov
aad
cmps
ror
imul
mov
sti
in
mov
sti
fdiv
inc
out
in
mov
fsqrt
or
jns
mov
fcom
lods
and
and
sti
test
fisubr
jge
iret
fmul
es
repnz
push
pop
cmps
js
mov
fst
adc
fmul
es
movs
and
int3
repnz
pop
pop
out
xor
jo
fst
mov
in
and
push
pop
mov
jns
mov
fcom
adc
test
into
or
jno
or
cdq
add
movs
icebp
into
outs
xchg
out
fdivr
movs
in
fst
jmp
leave
stc
movs
cmp
pop
fld
shl
xor
es
xor
in
fprem
movs
loope
jmp
inc
repnz
aad
aaa
icebp
into
das
test
fdivr
pusha
sub
mov
or
jmp
sub
imul
es
sub
call
or
jmp
mov
jne
call
dec
fs
and
pop
fs
cmovp
mov
add
mov
pop
outs
stc
pop
gs
lods
sub
pop
stc
jp
pop
pop
outs
mov
dec
stc
adc
dec
jb
mov
bound
mov
shl
mov
mov
mov
and
sbb
mov
and
push
bound
push
pop
xchg
out
sbb
movs
addr16
or
mov
hlt
mov
push
jle
gs
inc
cld
in
mov
mov
movs
pop
cmp
mov
arpl
mov
inc
mov
addr16
aad
add
mov
pop
addr16
push
ret
test
sub
mov
inc
je
sub
fsub
mov
mov
addr16
mov
mov
cmps
cmp
mov
nop
push
mov
movs
push
shl
les
mov
xchg
(bad)
shr
nop
and
retf
int3
mov
pop
enter
push
mov
dec
movs
xchg
in
(bad)
mov
shl
pop
fcomp
inc
movs
lea
mov
movs
lock
mov
sub
pop
mov
outs
inc
mov
dec
shr
inc
push
pop
sbb
test
inc
push
mov
ds
sbb
and
push
neg
test
push
inc
push
push
xor
fadd
push
fisttp
add
push
push
mov
xchg
inc
or
sbb
lock
les
jg
pop
gs
pop
addr16
jbe
jo
call
addr16
push
nop
add
dec
jmp
mov
pop
fs
mov
pop
nop
iret
ror
or
bound
div
hlt
xor
hlt
cmps
sbb
mov
(bad)
mov
mov
mov
test
and
cmp
pop
add
cld
jle
xchg
xchg
test
mov
cwde
inc
cmps
and
in
adc
mov
ror
popa
push
mov
rcr
sbb
mov
adc
jg
test
jmp
sbb
cmps
retf
mov
jg
mov
or
mov
mov
mov
idiv
sbb
push
mov
pop
mov
xor
sbb
stc
pop
retf
int3
pop
adc
dec
push
push
mov
je
outs
add
mov
inc
mov
shl
sbb
retf
std
jne
push
dec
xchg
bound
pop
nop
sbb
test
push
pop
leave
bound
bound
push
mov
jle
or
fcom
cmps
call
mov
cmps
imul
jbe
scas
(bad)
std
mov
mov
lahf
inc
mov
sbb
mov
movs
jmp
call
push
pop
in
movs
in
add
movs
pop
addr16
aas
and
jmp
mov
loop
push
lock
aad
inc
pop
aas
mov
loop
xor
lock
aad
and
push
ret
shl
xor
shl
movs
aad
xor
push
ret
shl
xor
shl
movs
(bad)
rcl
jmp
hlt
and
call
xlat
lock
repnz
enter
in
movs
loopne
pop
movs
pop
arpl
cmps
jmp
and
jmp
(bad)
mov
adc
aam
mov
(bad)
hlt
mov
push
cld
movs
call
add
jp
(bad)
movs
call
add
(bad)
hlt
mov
addr16
movs
call
add
(bad)
hlt
mov
push
movs
call
xlat
and
jmp
(bad)
in
mov
shl
movs
call
jnp
mov
jmp
movs
in
jmp
mov
xlat
lock
pop
jnp
cmps
jmp
and
rcl
loopne
(bad)
jg
cmps
jmp
movs
clc
sub
rcr
aam
mov
jmp
int3
mov
sub
rcr
aam
mov
jmp
int3
mov
sub
and
aam
mov
jmp
int3
mov
sub
and
aam
mov
jmp
int3
mov
sbb
ja
shl
cmp
jo
(bad)
icebp
mov
jmp
call
mov
jmp
aad
movs
jmp
(bad)
cld
cwde
(bad)
aad
movs
call
aam
or
push
icebp
adc
rep
clc
xlat
inc
or
aam
mov
popa
pop
xchg
jmp
mov
loop
add
lock
aad
inc
pop
aas
mov
loop
sub
lock
aad
and
push
ret
shl
xor
shl
movs
aad
xor
push
ret
shl
xor
shl
movs
(bad)
rcl
jmp
hlt
and
call
xlat
lock
repnz
enter
in
movs
clc
xlat
push
or
jmp
into
call
xchg
jo
sub
rcr
aam
mov
jmp
int3
mov
sub
rcr
aam
mov
jmp
int3
mov
sub
and
aam
mov
jmp
int3
mov
sub
and
aam
mov
jmp
int3
mov
jns
pop
aas
mov
loop
add
lock
aad
inc
pop
aas
mov
loop
sub
lock
aad
and
push
ret
shl
xor
shl
movs
aad
xor
push
ret
shl
xor
shl
movs
xlat
rcl
call
sub
mov
aam
pop
mov
jnp
mov
call
jmp
pusha
call
in
mov
icebp
pusha
(bad)
cmp
push
adc
(bad)
icebp
add
add
cmp
lock
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
xor
pop
aad
mov
gs
mov
or
ins
dec
addr16
movs
pop
pushf
or
adc
cdq
dec
mov
fs
loop
addr16
test
repz
xchg
xchg
adc
scas
(bad)
dec
push
nop
ret
ror
outs
sar
icebp
or
push
popf
lock
arpl
cmps
push
jl
pop
mov
sbb
sub
dec
(bad)
pop
popa
jg
pop
(bad)
mov
movs
call
movs
(bad)
dec
jns
call
dec
addr16
fidiv
or
pop
data16
mov
nop
add
test
enter
les
jg
sub
mov
test
cmp
dec
imul
and
push
and
call
inc
mov
mov
shr
addr16
fidiv
or
pop
gs
pop
push
lahf
mov
fs
mov
adc
pop
shl
jae
adc
lock
jmp
pop
xchg
push
mov
hlt
daa
push
fidiv
or
push
test
bound
lods
push
adc
pop
retf
mov
addr16
test
xchg
addr16
jbe
or
scas
popa
ja
pop
mov
inc
pop
ins
jg
mov
mov
es
and
repnz
mov
dec
mov
in
test
and
push
and
ja
dec
cmps
jnp
jg
jg
pop
dec
movs
cwde
cld
adc
ins
mov
cdq
test
pop
addr16
jle
jg
pop
fistp
jg
ins
jg
mov
(bad)
js
dec
cdq
jnp
pop
lds
pop
data16
xor
outs
mov
std
or
pop
shl
pop
scas
test
(bad)
adc
(bad)
pop
xchg
push
arpl
mov
test
mov
pop
add
and
push
mov
shr
mov
xchg
in
movs
cmp
push
dec
fs
fsubr
test
cdq
or
mov
inc
jne
adc
je
shr
cli
xor
and
fdiv
pop
addr16
test
nop
popf
sbb
xchg
cmp
push
inc
inc
jo
enter
sub
addr16
push
jl
pop
xchg
pop
pop
mov
stc
jae
pop
mov
pop
in
fldenv
pop
retf
fs
lods
mov
add
mov
stos
or
mov
out
lea
sub
mov
sbb
icebp
aam
dec
inc
retf
jl
mov
add
mov
cdq
mov
cld
xchg
sbb
popf
adc
fwait
or
shl
test
mov
mov
xchg
std
add
nop
iret
jp
xor
xchg
mov
add
test
(bad)
lds
in
call
into
mov
fldl2t
(bad)
movs
mov
cmp
clc
into
mov
mov
sahf
mov
aam
mov
ror
xchg
(bad)
mov
in
mov
rcr
mov
mov
mul
popf
mov
retf
mov
call
test
in
mov
(bad)
movs
popf
ror
stc
popf
in
xchg
sar
fimul
mov
repnz
mov
jmp
mov
mov
frndint
xchg
mov
fidiv
test
fisub
mov
jmp
cld
mul
popf
mov
into
mov
ins
aad
clc
mov
mul
popf
mov
ret
mov
int
mov
cld
jmp
in
movs
cdq
call
pop
clc
in
call
div
mov
repnz
in
movs
leave
mov
into
mov
frndint
xchg
mov
fidiv
test
fisub
mov
jmp
mov
fimul
fdivr
mov
cld
rcl
cld
and
mov
div
popf
movs
xor
fdiv
test
aam
mov
in
stos
mov
cld
into
mov
(bad)
mov
repnz
mov
repnz
mov
pop
mov
fcomp
loopne
call
repnz
lea
(bad)
clc
mov
(bad)
(bad)
mov
cld
(bad)
mov
call
jmp
mov
loope
call
retf
mov
int
movs
cmc
call
fidiv
fdiv
cld
mov
stos
mov
call
cmps
popa
test
aam
lock
retf
in
call
in
cmp
ret
clc
div
mov
cmps
mov
int3
xchg
aam
loopne
in
xchg
loopne
movs
mov
fbld
clc
mul
int3
xor
mov
repnz
in
jmp
in
sahf
movs
cdq
call
xchg
mov
cld
into
mov
clc
into
xchg
lea
mov
fdiv
mov
or
mov
fiadd
inc
cld
ret
int
aam
dec
imul
popf
movs
sahf
xchg
xchg
in
sahf
xchg
mov
or
in
test
mov
jmp
mov
repnz
mov
dec
ins
xor
movs
sahf
test
int
movs
mov
(bad)
test
rcr
movs
shr
mov
call
xchg
clc
into
mov
aad
lahf
mov
in
into
test
mov
into
adc
mov
ret
mov
movs
into
in
lods
fdivr
mov
cld
into
icebp
popf
mov
mul
mov
fdiv
call
rcl
mov
leave
jmp
mov
jmp
mov
jmp
shl
loopne
test
xchg
cdq
shl
frndint
cmps
mov
fdivr
mov
int3
(bad)
movs
vpsllq
(bad)
mov
mov
fidiv
mov
idiv
clc
into
in
lods
mov
and
aad
lods
mov
clc
lods
in
mov
hlt
repnz
lods
mov
mul
enter
or
mov
std
stos
mov
movs
into
in
lods
fdivr
mov
cld
into
xchg
mov
ret
movs
adc
sahf
xchg
mov
call
into
xchg
(bad)
mov
clc
div
or
sahf
movs
mov
aam
stc
popf
fdiv
call
lods
movs
into
test
cld
into
in
lods
fdivr
mov
cld
and
mov
jmp
sar
movs
shl
(bad)
fmul
lods
popf
jmp
repnz
call
add
mov
clc
popf
call
adc
call
retf
in
sahf
xchg
mov
div
xor
mov
in
xor
in
stos
cld
mov
stos
mov
call
cmps
cmc
mov
repnz
in
mov
mov
jmp
int
movs
mov
rcl
add
call
repnz
mov
jmp
mov
xchg
mov
fmul
mov
lea
jmp
in
mov
enter
in
(bad)
cld
mov
fiadd
mov
xlat
xchg
mov
into
loope
cld
into
mov
mov
fimul
mov
cli
lock
jmp
mov
loop
cdq
call
xchg
enter
popf
rcr
test
shr
or
mov
into
or
mov
iret
push
mov
into
mov
mov
fidiv
mov
xchg
mov
mov
and
retf
mov
jmp
mov
inc
mov
enter
movs
shl
mov
div
test
retf
mov
xchg
movs
repnz
mov
clc
popf
call
into
mov
mov
into
loope
call
(bad)
aam
fmul
xchg
mov
leave
jmp
cld
loop
mov
sahf
movs
shr
nop
popf
call
fimul
mov
retf
shl
mov
lock
(bad)
mov
movs
into
mov
cld
mov
mov
(bad)
(bad)
mov
mov
jns
(bad)
retf
pusha
retf
jmp
retf
stc
retf
test
mov
clc
into
mov
lea
test
enter
call
xlat
xchg
mov
into
xchg
(bad)
mov
call
into
in
lods
mov
lahf
nop
sar
mov
in
stos
cld
mov
in
xchg
(bad)
rcr
or
and
clc
into
test
mov
xchg
lds
jmp
fmul
mov
shl
fcom
into
aad
mov
ret
call
repnz
lods
mov
iret
push
mov
into
in
lods
fdivr
mov
cld
into
mov
popf
clc
(bad)
mov
int3
mul
rcl
mov
mov
in
mov
mov
movs
mul
in
idiv
xchg
cld
xchg
mov
add
sub
aam
cld
mul
push
int3
inc
test
mov
ror
nop
fld1
jmp
xchg
mov
cli
movs
mov
into
xchg
(bad)
mov
cld
fisub
mov
lahf
nop
lea
xchg
ror
sbb
(bad)
mov
(bad)
mov
test
loope
call
into
aad
in
xchg
mov
div
nop
cld
fisub
mov
(bad)
mov
jmp
push
enter
lods
rcr
or
jmp
rcr
mov
cld
and
mov
div
pop
rol
mov
or
lods
scas
mov
rol
mov
or
push
(bad)
mov
retf
call
into
loope
fmul
xchg
mov
aam
pushf
popf
clc
into
lea
mov
mov
frndint
xchg
mov
xchg
rcr
or
xchg
movs
into
xchg
lea
fimul
ror
mov
into
mov
mov
xor
movs
aad
fisttp
frndint
fidiv
lds
xchg
fldenv
mov
pop
movs
mov
repnz
lds
in
mov
loop
mov
div
(bad)
rcr
xchg
mov
into
icebp
lea
popa
mov
xchg
in
ret
movs
xor
mov
(bad)
mov
loopne
aam
mov
jmp
out
movs
mov
repnz
into
mov
clc
xchg
fsubr
mov
mov
repnz
int
mov
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
push
sahf
movs
shr
nop
popf
call
fimul
mov
jmp
clc
into
movs
mov
(bad)
mov
xchg
jmp
fiadd
lods
mov
into
adc
mov
ror
mov
sahf
mov
int3
sahf
cmp
int3
idiv
lods
mov
into
xchg
(bad)
mov
aam
loopne
in
xchg
clc
into
lea
call
fimul
lds
mul
popf
mov
ret
mov
int
mov
ror
call
sbb
(bad)
xchg
test
into
or
(bad)
into
cmp
test
into
mov
clc
into
mov
test
lahf
nop
popf
call
xchg
frstor
fidiv
cmp
mov
int3
xchg
movs
cdq
ror
xor
lods
rcl
mov
cld
xchg
int
mov
(bad)
mov
movs
into
mov
cld
into
icebp
rcl
movs
lds
repnz
aam
sub
int3
fidiv
test
mov
pop
cli
icebp
rcl
(bad)
icebp
mov
jp
or
push
pop
push
or
xor
imul
or
xor
imul
or
xor
or
xor
imul
or
xor
imul
or
ins
or
xor
imul
or
xor
imul
or
xor
or
xor
imul
or
xor
imul
or
jne
imul
or
xor
imul
or
xor
push
xchg
(bad)
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
cmp
popf
mov
dec
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
popa
lods
fstp
cld
or
xor
imul
or
xor
imul
or
jns
imul
or
xor
imul
or
dec
xor
push
(bad)
or
xor
imul
or
xor
imul
or
or
xor
imul
or
xor
imul
or
popa
lods
fstp
cld
or
xor
imul
or
xor
imul
or
jge
imul
or
xor
imul
or
xor
push
(bad)
or
xor
imul
or
xor
imul
or
or
or
xor
imul
or
xor
imul
ror
or
dec
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
popa
(bad)
enter
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
ror
or
dec
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
mov
sbb
dec
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
ror
or
dec
xor
imul
or
xor
imul
jl
inc
xchg
fldenv
mov
pop
rol
cld
cmp
mov
into
xor
mov
(bad)
mov
sahf
mov
mov
xchg
mov
(bad)
(bad)
clc
jbe
fnstenv
mov
int3
repnz
cmp
mov
in
xchg
movs
mov
repnz
test
repnz
cld
mul
(bad)
sub
(bad)
movs
mov
cld
mul
cld
into
test
aam
inc
(bad)
in
xchg
movs
cdq
jmp
repnz
in
mov
movs
xor
mov
push
add
push
sbb
aam
cld
cdq
in
(bad)
movs
mov
clc
popf
cld
sahf
mov
mov
mov
fadd
mov
mov
(bad)
icebp
enter
mov
retf
in
mov
into
test
int3
xchg
in
sahf
movs
test
idiv
fstp
add
sahf
clc
add
sahf
mov
jmp
(bad)
movs
mov
(bad)
lods
mov
clc
popf
cld
sahf
mov
aam
loopne
call
(bad)
mov
std
into
test
loope
loopne
in
mov
call
repnz
fldcw
xchg
fldenv
ret
mov
mov
into
add
push
cld
and
int3
fiadd
fdivr
clc
xchg
cld
into
std
fld1
add
cdq
rcr
aam
fmul
mov
mov
cld
(bad)
mov
aad
mov
sar
xchg
fnstcw
jnp
mov
jge
xchg
mov
pusha
xchg
movs
into
cmp
ror
xor
mov
repnz
in
shl
popf
call
into
jge
mov
xchg
call
jmp
in
call
in
mov
mov
retf
mov
inc
mov
std
into
test
lods
xor
rcl
mov
mov
mov
std
into
test
loopne
clc
in
call
addr16
add
(bad)
mov
mov
into
xor
(bad)
aad
stc
mov
mov
mov
(bad)
mov
int3
cli
mov
mov
pusha
repnz
(bad)
fidiv
cmp
(bad)
mov
popf
call
repnz
mov
dec
pusha
cmp
test
mov
int
movs
mov
mov
movs
into
cmp
mov
mov
aad
mov
sar
mov
movs
sahf
test
std
(bad)
mov
shr
xchg
fnstcw
jnp
mov
clc
into
add
fldl2t
add
mov
pop
addr16
xor
mov
pop
call
mov
or
mov
pop
fiadd
mov
(bad)
mov
popa
pop
add
sar
std
(bad)
mov
call
into
cmp
mov
clc
retf
mov
xchg
mov
loopne
clc
shr
cmp
popf
pop
addr16
or
dec
mov
cld
ret
aam
mov
mov
add
clc
(bad)
mov
in
neg
in
cli
mov
in
(bad)
cld
mov
std
(bad)
mov
fxch
cmc
aam
mov
mov
xchg
cdq
hlt
fidiv
popf
mov
fimul
xor
dec
pusha
cmp
cld
into
add
mov
into
xor
mov
out
mov
cld
ficom
int
nop
mov
clc
popf
std
sahf
add
cmp
movs
mov
retf
call
inc
xchg
ftst
repnz
mov
dec
pusha
cmp
fdiv
mov
mov
div
inc
enter
clc
jmp
hlt
out
mov
mov
test
int3
mul
in
fisub
movs
xchg
popf
clc
jmp
hlt
out
mov
mov
into
add
jmp
nop/reserved
rol
mov
stc
(bad)
mov
(bad)
mov
repnz
mov
xchg
std
sahf
add
pop
addr16
mov
in
xchg
mov
dec
pusha
cmp
mov
xchg
movs
mov
mov
outs
mov
fmul
add
pop
addr16
fnstcw
rol
or
div
fnstsw
cmp
pop
nop
popf
call
add
lods
mov
sahf
mov
int
mov
aam
mov
int3
sahf
mov
or
jp
cmp
mov
(bad)
mov
call
repnz
jns
or
fidiv
cdq
aam
xor
fidiv
call
sahf
mov
movs
inc
and
(bad)
div
adc
xchg
mov
frstor
out
cmc
lods
fs
mov
xchg
int3
inc
imul
leave
adc
mov
mov
mov
fidivr
(bad)
int3
inc
jge
cld
xchg
mov
fidiv
mov
mov
lds
out
cmc
lods
adc
cmc
into
xchg
fmul
inc
xor
fldln2
into
xchg
int3
int3
inc
jge
movs
loop
(bad)
repnz
pop
repnz
leave
mov
fxch
into
cmp
int3
inc
popa
mov
repnz
aad
xchg
ror
imul
lods
jmp
sub
(bad)
xchg
xchg
in
scas
mov
lods
jmp
or
repnz
rcl
mov
pop
addr16
add
ins
push
add
loopne
loopne
aam
mov
aad
add
pop
addr16
popf
movs
loop
test
jmp
in
test
aad
mov
(bad)
lock
addr16
add
ins
push
add
pop
retf
loopne
loopne
aam
mov
test
mov
cmp
dec
add
mov
ret
ror
xor
mov
add
test
into
adc
jmp
retf
mov
fwait
cmc
in
jmp
add
mov
ja
cmp
rol
loopne
movs
repnz
jmp
pop
addr16
mov
repnz
fcomp
cld
mov
retf
pop
addr16
fld1
pop
mov
mov
into
add
add
sahf
mov
or
jp
mov
repnz
mov
addr16
mov
mov
mov
iret
and
(bad)
test
fs
stc
retf
mov
in
mov
jmp
ror
xor
jmp
xchg
aam
mov
fxch
repnz
fnstsw
int3
test
addr16
test
xchg
movs
mov
fiadd
aam
test
cld
into
jge
aam
mov
clc
cli
mov
pusha
jmp
ins
push
add
inc
mov
shl
popf
mov
mul
popf
call
mul
mov
into
xor
fldlg2
jp
test
sahf
lock
repz
hlt
(bad)
xchg
ftst
repnz
mov
ret
mov
mov
fidiv
mov
mov
call
pusha
jmp
ins
push
add
inc
shld
xchg
mov
mov
movs
iret
adc
call
(bad)
mov
clc
fld1
jnp
cmp
mov
mov
pusha
into
cmp
(bad)
call
mov
rcr
movs
sahf
mov
aad
mov
aad
mov
fmul
add
popf
in
(bad)
mov
and
xchg
mov
cli
add
stc
jmp
enter
mov
ret
call
repnz
jmp
aam
mov
test
jmp
mov
std
mov
mov
pop
mov
cmc
ficom
call
div
mov
repnz
pop
cld
fld1
add
cld
repnz
sub
mov
lods
cmpxchg
or
mov
in
jp
test
sahf
lock
repz
mov
sahf
mov
aam
mov
aad
add
pop
addr16
test
jmp
aad
mov
fmul
ins
shr
mov
adc
call
lods
xchg
int3
call
(bad)
lea
into
add
mov
(bad)
sar
into
or
mov
fldenv
iret
jne
call
mov
shr
jnp
aam
xchg
mov
repnz
mov
sahf
test
inc
jmp
xchg
aam
xchg
mov
sahf
mov
aam
mov
aad
add
pop
addr16
test
jmp
cld
div
popa
call
aad
mov
cld
div
mov
fisub
sub
mov
movs
into
popa
popf
mov
test
call
mov
call
sahf
lock
repz
mov
sahf
mov
aam
mov
aad
mov
jnp
or
sahf
mov
hlt
fidiv
mov
div
mov
call
repnz
mov
jnp
mov
xchg
mov
std
mov
mov
cld
into
or
movs
cli
or
fmul
add
popf
in
inc
cmp
pop
hlt
ins
mov
aam
xchg
mov
jmp
aad
add
pop
cmp
mov
loopne
cld
lds
loopne
std
retf
pusha
jmp
ins
push
add
fmul
add
popf
in
(bad)
mov
mov
jp
les
repnz
cld
xchg
mov
clc
into
std
fnop
iret
or
enter
xor
or
mov
mov
mov
mov
mov
repnz
int3
mul
mov
mov
and
cs
jge
adc
mov
(bad)
imul
in
mov
std
add
lahf
rcl
call
div
lea
sbb
mov
repnz
cld
xchg
mov
clc
into
jge
int
loopne
pop
retf
std
mul
mov
mov
(bad)
mov
gs
adc
or
stc
pop
mov
sbb
mov
add
repnz
popf
stc
jp
cmp
inc
movs
mov
pop
addr16
fnstcw
xchg
in
aad
ret
movs
mov
shl
movs
(bad)
jnp
shr
mov
aam
mov
call
pop
or
fidiv
fmul
cmp
lea
lea
repnz
std
fiadd
in
icebp
enter
in
test
mov
aad
movs
mov
pop
mov
in
in
std
xchg
mov
addr16
mov
scas
in
aam
iret
ror
mov
pop
leave
xor
aam
xchg
mov
int3
not
aad
mov
jnp
dec
mov
shl
in
idiv
call
repnz
mov
dec
pusha
cmp
aad
movs
loope
mov
aam
xchg
test
mov
icebp
cmp
cmp
call
xchg
popf
mov
idiv
fmul
mov
fnstcw
xchg
in
aad
mov
(bad)
clc
xchg
in
test
mov
mov
(bad)
clc
xchg
in
test
leave
retf
xor
movs
fnop
retf
movs
fidiv
lods
rcr
mov
call
repnz
mov
dec
pusha
cmp
mov
ins
popf
movs
sahf
mov
mov
retf
call
repnz
cld
xchg
les
xor
mov
lock
mov
repnz
popf
mov
xchg
mov
mov
inc
xchg
ftst
repnz
mov
dec
pusha
cmp
movs
jmp
mov
sahf
loopne
xor
aam
xchg
mov
cld
adc
mov
and
retf
rol
movs
mov
mov
mov
(bad)
mov
push
into
sbb
cmp
pop
nop
popf
call
xor
call
xchg
cmp
call
(bad)
mov
inc
clc
into
or
(bad)
fmul
or
cmp
mov
pop
addr16
movs
jmp
mov
sahf
loopne
xor
aam
xchg
mov
cld
adc
mov
and
fldlg2
ret
ror
cmp
ror
xor
mov
fldenv
out
jge
int
loopne
pop
fimul
pop
addr16
popf
call
pmulhuw
cld
sahf
clc
mov
repnz
pop
mov
in
movs
loope
out
sbb
(bad)
into
jmp
inc
cld
ret
aam
mov
aam
lods
popf
int
jmp
adc
xor
repnz
jmp
movs
sahf
mov
in
jmp
ror
clc
cdq
fmul
jne
call
mov
call
fidiv
test
idiv
fldlg2
ret
ror
loopne
rol
mov
dec
idiv
fldlg2
ret
ror
add
in
jmp
mov
cmp
ror
add
in
jmp
call
into
mov
lods
aam
mov
cmp
clc
sar
mov
sub
mov
mov
mov
and
sahf
loopne
xor
lods
rol
xchg
mov
sahf
test
pop
addr16
cmp
sahf
aam
je
mov
call
addr16
aam
(bad)
mov
enter
ror
mov
mov
lea
fiadd
cmp
inc
mov
lods
addr16
jl
cmp
ror
xor
test
aam
mov
in
xchg
fmul
mov
fcom
xchg
add
shr
add
sbb
js
and
push
and
call
adc
and
mov
add
enter
xor
cmp
loopne
aad
cld
mov
retf
int3
imul
test
mov
pop
ins
popf
movs
sahf
mov
aam
cld
fld1
push
xor
sahf
mov
or
jp
and
xor
in
(bad)
mov
fmul
mov
test
cld
xchg
inc
ins
jbe
or
dec
dec
mov
dec
es
or
and
dec
js
hlt
add
mov
and
xchg
fnstcw
fiadd
and
sahf
loopne
movs
cmps
lea
jmp
mov
addr16
enter
les
lahf
add
sbb
pop
pop
and
call
pop
js
inc
pop
xor
dec
jb
inc
call
push
adc
push
add
mov
sub
mov
std
enter
and
sub
jge
sbb
ins
push
inc
push
push
pusha
cmp
dec
adc
pop
and
pop
dec
or
(bad)
loope
mov
xchg
fcomp
add
inc
pop
addr16
mov
add
inc
cmp
and
cmp
shr
test
lea
in
(bad)
iret
cmc
int3
mov
ja
cmp
mov
clc
(bad)
aam
aam
mov
fadd
movs
sar
cld
movs
in
sahf
mov
pusha
jmp
ins
push
add
int3
div
ror
cld
mov
retf
pop
addr16
shr
aad
stos
mov
mov
add
mov
in
mov
sahf
mov
fxch
repnz
rol
mov
inc
jmp
xchg
aam
mov
mov
rol
sbb
pushf
lea
iret
jge
call
mov
lds
add
lods
ror
mov
int3
sahf
mov
cmp
ret
rcr
add
lods
mov
int3
call
(bad)
mov
call
xchg
int
mov
and
mov
in
div
mov
mov
cld
rcl
in
xchg
mov
ret
mov
inc
pop
in
in
sahf
sub
enter
xor
aam
xchg
mov
lock
aad
sbb
mov
mov
in
jmp
pop
repnz
jmp
mov
(bad)
cmp
lea
test
mov
sub
pop
addr16
mov
arpl
inc
out
loopne
test
xchg
in
mov
xchg
leave
mov
repnz
movs
rol
mov
pop
addr16
int3
mov
idiv
cld
(bad)
mov
aam
loopne
call
cmp
mov
in
mov
mov
xchg
loope
and
mov
int
mov
ins
xchg
movs
mov
iret
popa
mov
repnz
aam
sbb
aam
in
aad
mul
fldenv
retf
pop
addr16
mov
mul
mov
call
(bad)
lea
loopne
rcr
cld
lods
pop
addr16
lea
popa
mov
repnz
aam
mov
push
into
add
cmp
push
cdq
in
jp
add
into
mov
lods
rcl
mov
call
repnz
lods
in
into
cmp
ror
xor
int3
lods
(bad)
stc
mov
popf
mov
sahf
mov
mov
(bad)
mov
int3
ret
mov
inc
cmp
call
fidiv
rol
xchg
fchs
xchg
rol
mov
jmp
xchg
aam
mov
mov
(bad)
vpsadbw
inc
outs
mov
int3
(bad)
mov
call
into
jge
aam
xchg
lea
lods
mov
into
xor
mov
retf
clc
into
mov
call
stos
mov
cld
inc
sub
jmp
pop
addr16
test
fmul
cld
lds
mov
pop
into
xchg
(bad)
mov
rcr
mov
int3
xchg
in
(bad)
mov
cmp
and
inc
xchg
call
lahf
mov
enter
call
repnz
mov
jmp
mov
mov
fsubr
mov
mov
pop
in
mov
inc
sub
jmp
jmp
iret
xor
popf
jmp
retf
icebp
retf
jmp
sbb
mov
retf
mov
addr16
fnstcw
repz
aad
idiv
frndint
scas
mov
cli
movs
cmp
mov
ror
mov
fwait
add
lods
mov
jmp
int3
sahf
mov
(bad)
in
mov
retf
movs
into
cmp
popf
fxch
mov
mov
call
into
jge
sar
push
in
idiv
pop
cmp
call
xchg
mov
fidiv
mov
cmc
fcomp
xchg
loope
test
sbb
sahf
xor
int3
not
aad
add
pop
addr16
in
fdivrp
lods
hlt
retf
pop
addr16
fucomp
fdivrp
lods
hlt
retf
rol
mov
aad
movs
loope
mov
aam
xchg
test
mov
icebp
cmp
pop
test
in
mov
in
ret
lods
call
in
mov
addr16
int3
ret
cmp
int3
mov
sahf
mov
repnz
call
dec
inc
sbb
mov
scas
loope
mov
jnp
cmp
dec
xor
mov
aam
call
into
add
clc
jp
mov
xchg
hlt
repnz
addr16
(bad)
call
into
cmc
mov
xchg
jmp
mov
xchg
loope
pop
addr16
(bad)
div
shl
stos
in
inc
stos
loope
call
fidiv
mov
movs
shl
rol
sbb
pop
mov
fcomp
jge
mov
jp
shr
call
mov
idiv
test
fwait
in
jmp
(bad)
cmc
enter
test
mov
lods
jmp
(bad)
cmc
enter
les
idiv
in
call
(bad)
mov
mov
jnp
add
repnz
cdq
fmul
or
lods
aam
sbb
div
movs
add
and
mov
div
test
jp
test
jmp
enter
fdivr
sbb
retf
or
(bad)
dec
mov
mov
rol
mov
fdivr
test
mov
mov
aam
lahf
test
test
jnp
pop
mov
jmp
in
test
pop
repnz
lods
mov
add
repnz
ftst
repnz
mov
idiv
cmp
pop
clc
(bad)
clc
fidivr
lods
mov
jp
fsub
jmp
in
test
int3
sahf
cmp
jp
test
sahf
mov
mov
jp
cmp
outs
mov
rol
mov
fsubr
cld
(bad)
in
xchg
mov
idiv
cmp
inc
mov
stc
(bad)
cmp
rol
mov
stc
(bad)
mov
(bad)
cmp
int3
sahf
jl
in
cli
lock
rol
xchg
fldenv
mov
inc
inc
mov
enter
mov
jmp
movs
out
xchg
mov
repnz
mov
repnz
pop
retf
popa
push
cmp
inc
xchg
in
aad
push
rol
mov
pusha
jmp
pop
addr16
lods
in
mov
inc
mov
pop
addr16
aad
idiv
mov
idiv
cmp
pop
ror
mov
repnz
mov
movs
jmp
movs
ret
shl
mov
cmp
inc
mov
cld
jp
test
jmp
in
test
aam
mov
in
and
(bad)
mov
cld
idiv
cmp
dec
cmp
lea
repnz
mov
retf
rol
mov
fs
mov
retf
pop
addr16
(bad)
lock
and
mov
inc
mov
cld
(bad)
mov
rol
mov
cmp
push
retf
in
call
call
push
xor
xchg
fmul
or
mov
shl
mov
movs
lahf
in
lods
jmp
xchg
fdiv
mov
mov
sahf
xor
in
(bad)
movs
mov
repnz
aam
mov
push
mov
xchg
in
mov
repnz
mov
idiv
mov
repnz
test
clc
fldcw
mov
rol
mov
inc
jg
movs
cld
inc
pusha
add
mov
or
fnstsw
cmp
dec
and
lds
sbb
cmp
cli
add
movs
call
cld
scas
lock
cld
test
jmp
inc
jnp
add
jmp
in
xchg
mov
loop
mov
repnz
int3
sahf
je
int
pushf
cmp
lods
call
push
stos
cmp
int3
sahf
loopne
loope
loopne
in
mov
lds
cmp
imul
cmp
lods
loope
loopne
in
mov
lds
cmp
inc
xchg
fldenv
clc
xchg
in
jmp
loopne
clc
xchg
in
jmp
lds
cmp
inc
xchg
fnstcw
jmp
int3
sahf
loopne
fsubr
mov
mov
repnz
mov
jmp
inc
mov
lods
in
mov
lods
shl
mov
cmp
test
clc
fldcw
in
in
mov
lods
shl
mov
cmp
enter
in
mov
inc
xchg
shr
nop
mov
fisub
mov
lods
test
std
(bad)
cmp
rol
mov
aam
mov
addr16
movs
std
test
xchg
in
mov
xchg
aam
xor
aam
mov
aam
cmp
mov
cmp
rol
in
pop
aam
in
pusha
jmp
shr
mov
shr
loopne
pop
addr16
xor
idiv
sbb
retf
or
mov
sahf
mov
mov
neg
mov
repnz
rcr
fmul
mov
xchg
std
call
inc
inc
mov
in
mov
mov
inc
mov
shl
fdivr
mov
(bad)
in
loopne
loopne
aad
mov
cmp
mov
test
icebp
sahf
add
mov
in
mov
repnz
mov
repnz
rol
mov
inc
jnp
add
xchg
movs
sahf
clc
(bad)
fldl2e
mov
inc
(bad)
loopne
in
fisub
in
(bad)
xchg
(bad)
rol
mov
in
jmp
test
movs
(bad)
mov
popf
in
call
in
idiv
dec
enter
or
stc
mov
xchg
fdivr
into
cmp
lods
xchg
mov
clc
mov
mov
addr16
clc
mul
xor
push
movs
fldenv
loopne
aad
mov
in
xchg
mov
pavgb
call
add
or
fwait
icebp
mov
mov
and
clc
popf
std
sahf
add
pop
fiadd
mov
into
imul
mov
(bad)
xchg
lea
popf
mov
repnz
mov
ret
mov
inc
jnp
add
jmp
mov
fimul
mov
rcr
or
retf
in
jp
test
jmp
aad
add
pop
addr16
rol
loopne
pop
addr16
rol
loopne
shl
movs
fstp
add
popf
test
cld
fstp
mov
(bad)
mov
sahf
mov
jp
cmp
outs
mov
clc
inc
xor
retf
loopne
mov
mov
inc
mov
mov
jmp
in
test
pop
add
add
idiv
cmp
in
(bad)
mov
lods
rol
add
pop
xor
(bad)
loope
inc
mov
in
ficom
in
mov
hlt
(bad)
pop
and
and
mov
(bad)
pop
inc
into
and
mov
(bad)
or
in
(bad)
xchg
(bad)
ror
and
mov
(bad)
xor
xchg
mov
cld
retf
rcr
mov
mov
nop
(bad)
rcl
movs
lds
popf
mov
repnz
in
mov
hlt
(bad)
or
call
repnz
mov
jmp
int3
xor
mov
cli
mov
mov
mov
in
stos
test
mov
mov
test
mov
cld
fidiv
mov
(bad)
mov
sahf
xchg
mov
retf
fxch
in
mov
imul
mov
in
shl
sar
cmp
(bad)
in
int
lods
mov
into
test
fmul
xchg
int3
sahf
cmp
int
fdivr
mov
test
pusha
jmp
lock
cld
scas
mov
popf
jmp
div
cmp
xchg
vpminub
mov
fidiv
popf
movs
xor
(bad)
into
loope
call
jmp
fdiv
mov
fmul
fidiv
popf
movs
sahf
mov
mov
nop
(bad)
rcl
movs
mov
xchg
pop
pop
into
(bad)
leave
cld
div
test
xchg
popf
movs
mov
call
(bad)
movs
mov
inc
jnp
sub
into
aad
mov
ret
movs
fisub
lea
retf
cld
sahf
mov
mov
into
in
(bad)
rcr
stc
popf
hlt
jmp
call
(bad)
xchg
ftst
repnz
mov
xchg
mov
(bad)
loopne
lock
fidiv
sar
mov
fiadd
and
mov
imul
mov
xchg
cld
popf
mov
into
loope
call
retf
mov
lds
ret
enter
shr
mov
fdivr
movs
fld1
retf
mov
in
mov
and
mov
mov
(bad)
mov
cmp
mul
popf
mov
xchg
lods
fmul
mov
clc
xchg
mov
(bad)
xchg
mov
mul
lds
add
les
repnz
call
xchg
mov
clc
into
xchg
(bad)
movs
test
add
mov
cmp
aad
mov
popf
fldcw
movs
xchg
cld
xchg
lock
sub
jmp
cld
mov
aam
xor
into
std
fscale
mov
mov
sahf
movs
cdq
jmp
out
movs
mov
movs
mov
mul
mov
dec
mov
repnz
enter
cld
ret
int
aam
mov
cli
movs
mov
retf
aad
cld
mov
jg
xchg
int3
div
mov
xchg
mov
div
popf
mov
ret
enter
shr
mov
fdivr
movs
(bad)
dec
fsubr
mov
mov
mov
sahf
mov
call
xchg
mov
pop
mov
cld
xchg
enter
shr
mov
(bad)
loopne
movs
into
icebp
ror
mov
cld
into
popf
popf
mov
mov
leave
int
lods
mov
sahf
mov
in
mul
(bad)
fsin
aam
enter
cld
into
std
popf
rol
movs
lods
call
ret
sub
into
lods
or
fidiv
lea
stos
lods
mov
inc
sub
xchg
movs
popf
test
sbb
mov
popf
call
into
aad
mov
sahf
mov
sub
mov
in
mov
cld
(bad)
sbb
out
movs
mov
(bad)
mov
(bad)
mov
jmp
pop
retf
rcl
mov
int3
sahf
cmp
int3
div
popf
rcr
xchg
test
into
lods
inc
std
mul
popf
mov
mov
ror
loope
cld
into
test
cld
mul
popf
mov
into
mov
lods
ror
mov
clc
xchg
fsubr
mov
popf
rcr
mov
in
stos
test
pop
addr16
add
mov
xchg
enter
aam
in
loopne
loopne
aam
mov
shr
mov
jmp
iret
mov
jmp
iret
mov
int3
sahf
mov
mov
rol
cld
test
int3
test
(bad)
jmp
clc
call
jmp
iret
mov
shl
mov
lods
shl
xchg
(bad)
xchg
xchg
movs
int3
repnz
mov
xor
fldlg2
xchg
popf
clc
jp
pushf
shl
mov
lods
shl
xchg
(bad)
xchg
xchg
movs
int3
repnz
mov
mov
in
xchg
mov
into
mov
shl
mov
lods
shl
xchg
(bad)
xchg
xchg
movs
int3
repnz
dec
in
shl
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
or
in
enter
push
mov
div
(bad)
cmp
xor
mov
dec
cmp
imul
and
push
sbb
dec
repnz
cld
or
cs
lods
jg
or
and
add
pop
add
imul
adc
dec
pop
mov
xchg
mov
jle
mov
mul
and
xchg
xor
imul
or
sbb
jns
in
int
xor
push
bound
xchg
inc
das
pop
in
cmp
or
xor
inc
cmp
push
xor
or
mov
push
cmp
cmp
cmp
repnz
mov
sbb
xchg
mov
std
mov
repnz
mov
fisttp
mov
mov
pusha
dec
xor
cmp
js
cmp
cmp
imul
or
dec
xor
inc
xor
mov
mov
imul
mov
sahf
ror
not
fdivr
or
dec
fcomi
push
cmps
xor
imul
or
fcomip
xchg
mov
(bad)
pop
dec
cmp
imul
jg
xor
push
sbb
dec
repnz
cld
or
cs
lods
fldenv
or
push
and
imul
and
cmp
or
cmp
mov
dec
sub
outs
dec
xor
retf
add
imul
ins
dec
xor
ins
test
in
test
pop
nop
push
add
mov
or
in
retf
not
pop
xor
dec
xor
cmp
or
aaa
mov
xor
cmp
or
cmp
addr16
xor
retf
add
imul
and
retf
add
push
dec
xor
ins
jo
es
dec
xor
popa
jo
push
ins
dec
xor
adc
out
dec
xor
push
jo
(bad)
imul
pushf
repz
imul
icebp
dec
xor
mov
imul
or
(bad)
cmp
dec
xor
mov
jge
or
xor
int
xor
push
dec
xor
mov
jge
or
xor
int
xor
push
dec
xor
dec
xor
push
xor
push
add
xchg
add
imul
or
loope
mov
push
mov
xor
pop
mov
aad
push
xor
stc
jns
pop
inc
dec
xor
xchg
das
or
pushf
cmp
imul
cmp
and
imul
or
out
hlt
mov
jnp
je
dec
xor
dec
cdq
or
dec
popf
and
in
cmp
cmp
imul
or
xor
je
jne
jns
xor
ds
dec
fimul
imul
or
repnz
sbb
or
ss
in
jge
or
inc
or
mov
neg
jo
out
je
(bad)
cmp
or
inc
add
mov
or
in
jbe
lea
imul
pop
sub
dec
xor
inc
jns
cmp
cmp
jl
dec
xor
and
fsubrp
jge
or
jb
imul
or
or
dec
fisttp
into
fld
mov
fnsave
fnsave
sub
or
xor
je
jne
jns
xor
ds
dec
mov
or
cmp
dec
xor
retf
add
imul
outs
dec
xor
retf
add
imul
ins
dec
xor
ins
test
in
test
push
nop
pusha
adc
mov
or
xor
imul
or
dec
xor
cmp
or
aaa
outs
dec
xor
cmp
or
cmp
outs
dec
xor
retf
add
imul
outs
dec
xor
retf
add
imul
ins
dec
xor
ins
test
in
test
push
nop
pusha
adc
mov
or
xor
imul
or
dec
xor
cmp
or
aaa
pop
outs
dec
xor
cmp
or
cmp
arpl
and
retf
add
imul
outs
dec
xor
retf
add
imul
ins
dec
xor
ins
test
in
test
push
nop
pusha
adc
mov
or
xor
imul
or
dec
xor
cmp
or
aaa
jecxz
dec
xor
cmp
or
cmp
dec
xor
retf
add
imul
outs
dec
xor
retf
add
imul
ins
dec
xor
ins
test
nop
add
adc
test
std
iret
test
xor
or
inc
cmp
xor
or
mov
push
xor
or
mov
push
xor
or
inc
out
cmp
test
out
sbb
xchg
inc
(bad)
cmp
dec
xor
mov
jge
or
scas
add
dec
sbb
or
xchg
pop
imul
or
jb
imul
or
or
dec
fisttp
or
add
push
je
pop
xchg
jmp
mov
daa
pop
cmp
or
aaa
pop
inc
sbb
push
xor
or
mov
push
xor
or
mov
push
xor
or
inc
out
cdq
test
cli
mov
mov
xor
daa
inc
(bad)
mov
dec
xor
mov
pop
xor
inc
jns
cmp
xor
or
inc
cmp
xor
or
mov
push
cmp
mov
xor
xchg
fmul
xor
add
adc
je
add
or
test
jmp
xchg
inc
(bad)
sub
dec
xor
dec
sbb
or
or
dec
sbb
or
loop
imul
or
sbb
retf
add
imul
mov
aaa
cli
imul
dec
xor
pop
sub
dec
xor
inc
jns
cmp
cmp
jl
dec
xor
cld
xor
mov
xor
fs
or
cli
in
test
in
test
push
nop
pusha
adc
dec
add
imul
dec
dec
pop
xor
dec
xor
dec
or
or
pusha
and
push
xor
lds
push
and
imul
and
cmp
or
cmp
addr16
xor
retf
add
imul
and
retf
add
push
dec
xor
ins
test
in
test
add
repz
imul
cmp
xor
push
push
es
xchg
mov
(bad)
pop
test
imul
pushf
mov
dec
inc
jns
cmp
xor
or
inc
cmp
xor
or
mov
push
xor
or
mov
push
xor
or
inc
out
imul
mov
xor
ja
es
xchg
mov
cmovbe
cmp
cmp
jl
dec
xor
and
fsubrp
jge
or
jb
imul
or
or
dec
fisttp
fld
mov
fnsave
push
fnsave
cmp
or
sub
jle
retf
not
jge
or
mov
or
cmp
dec
xor
retf
add
imul
outs
dec
xor
retf
add
imul
ins
dec
xor
ins
test
popa
nop
push
in
test
pop
nop
jo
pushf
repz
imul
repnz
mov
and
cmp
or
aaa
outs
dec
xor
cmp
or
cmp
outs
dec
xor
retf
add
imul
outs
dec
xor
retf
add
imul
ins
dec
xor
ins
test
popa
nop
push
in
test
pop
nop
jo
pushf
repz
imul
repnz
mov
and
cmp
or
aaa
pop
outs
dec
xor
cmp
or
cmp
arpl
and
retf
add
imul
outs
dec
xor
retf
add
imul
ins
dec
xor
ins
test
popa
nop
push
in
test
pop
nop
jo
pushf
repz
imul
repnz
mov
and
cmp
or
aaa
jecxz
dec
xor
cmp
or
cmp
dec
xor
retf
add
imul
outs
dec
xor
retf
add
imul
ins
dec
xor
ins
test
popa
nop
push
in
test
pop
nop
jo
pushf
repz
imul
repnz
mov
and
cmp
or
aaa
push
arpl
and
cmp
or
cmp
mov
dec
sub
dec
xor
retf
add
imul
ins
dec
xor
ins
test
popa
nop
push
in
test
pop
nop
jo
pushf
repz
imul
repnz
mov
add
jnp
or
in
inc
jns
cmp
xor
or
inc
cmp
xor
or
mov
push
xor
or
mov
push
xor
or
inc
out
imul
mov
xor
ja
es
xchg
mov
cmovbe
cmp
cmp
jl
dec
xor
in
xor
imul
pop
dec
xor
push
sbb
in
jge
or
pop
in
test
popa
nop
pop
in
test
pop
nop
js
pushf
repz
imul
cmp
xor
imul
pop
dec
xor
arpl
pop
dec
xor
hlt
cmp
imul
pop
dec
xor
cld
xor
mov
xor
mov
cmp
in
mov
dec
xlat
cmovae
mov
dec
xor
mov
jg
or
sub
jle
retf
not
jge
or
fimul
imul
or
repnz
sbb
or
ss
in
jge
or
inc
or
mov
out
fnsave
(bad)
je
into
cmp
or
ins
add
mov
or
in
jb
scas
repnz
mov
adc
or
sbb
or
bound
cmp
or
cmp
mov
dec
sub
pushf
retf
add
push
das
jecxz
dec
xor
ins
test
adc
add
mov
or
in
mov
push
push
es
xchg
mov
cmovbe
cmp
xor
or
inc
cmp
xor
or
mov
push
cmp
mov
xor
xchg
fmul
fld
mov
fnsave
push
fnsave
cmp
or
sub
jle
retf
not
jle
or
and
and
cmp
or
aaa
xor
xor
cmp
or
cmp
outs
dec
xor
retf
add
imul
cmp
cmp
ret
cld
mov
dec
ret
sbb
dec
xlat
or
dec
xor
mov
jle
or
sub
jle
retf
not
jge
or
sub
imul
and
retf
add
imul
cmp
cmp
ret
cld
mov
dec
ret
sbb
dec
xlat
or
dec
xor
mov
jle
or
sub
jle
retf
not
mov
imul
lods
or
in
jb
test
imul
pushf
test
adc
push
cmp
not
mov
imul
or
imul
daa
or
hlt
xor
div
or
dec
mov
or
dec
int
lea
xor
div
add
ins
mov
or
dec
int
lea
loopne
mov
lods
daa
or
add
ins
dec
xor
pop
jnp
stos
nop
mov
dec
xchg
sbb
jmp
pop
dec
xor
mov
jle
int
xchg
les
fild
call
push
iret
clc
test
mov
sbb
mov
inc
xchg
sbb
jmp
loope
loop
inc
sbb
ret
add
mov
cmp
sbb
jo
movs
and
(bad)
sub
jo
mov
cmp
test
mov
sub
or
xor
pop
pop
add
sbb
bound
or
jo
sub
popf
retf
gs
cmp
adc
jo
mov
bound
or
sub
pop
cmp
imul
add
xor
imul
fdiv
mov
jl
dec
xor
cmp
imul
cmp
cmp
in
push
push
dec
xor
imul
jle
cmp
inc
addr16
xor
dec
jb
mov
scas
daa
or
ins
sbb
push
pop
xor
sbb
push
leave
or
xor
xchg
sbb
or
lahf
xchg
retf
leave
or
fisttp
xor
xchg
sbb
or
lahf
out
mov
xor
xchg
sbb
fistp
pop
mov
jl
dec
xor
fild
cmc
mov
dec
and
(bad)
out
pop
dec
xor
(bad)
push
imul
mov
jo
xor
aad
cmp
sbb
imul
adc
push
sbb
imul
test
jge
add
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
dec
ins
loope
stos
xor
push
data16
mov
les
iret
pminsw
stos
mov
cmc
mov
mov
mov
mov
lods
daa
or
mov
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
xchg
mov
mov
loope
push
cwde
inc
cmp
cmp
push
(bad)
xor
fist
push
mov
dec
xor
fisttp
aaa
jge
iret
fucomip
jge
or
mov
(bad)
push
xor
ins
loope
test
mov
add
(bad)
xor
mov
inc
and
xchg
cwde
inc
cmp
xor
or
daa
fst
dec
xor
not
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
imul
cwde
inc
cmp
cmp
push
(bad)
xor
fist
push
mov
dec
xor
(bad)
hlt
xchg
mov
push
stos
mov
mov
xor
fbstp
push
xor
sub
clc
xor
imul
add
(bad)
aaa
jge
iret
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
push
dec
int
retf
pop
mov
cmp
mov
int3
pop
std
lods
daa
or
dec
xchg
cwde
adc
imul
or
int3
adc
and
adc
imul
or
int3
adc
mov
adc
imul
or
int3
adc
xchg
mov
dec
xchg
cwde
adc
imul
or
int3
adc
push
cwde
adc
imul
or
lds
imul
leave
xchg
cwde
inc
cmp
cmp
cmc
mov
dec
and
add
movs
test
and
xor
xchg
sbb
mov
cwde
inc
cmp
cmp
cmc
mov
dec
and
add
pusha
test
and
xor
xchg
sbb
(bad)
mov
pop
mov
cmp
imul
std
lods
daa
or
dec
xchg
cwde
adc
imul
or
int3
adc
push
cwde
adc
imul
or
int3
adc
xchg
mov
dec
xchg
cwde
adc
imul
or
je
or
clc
mov
fidivr
loope
or
retf
mov
aam
clc
cdq
int3
div
lock
mov
mov
sbb
add
div
call
mov
mov
(bad)
xchg
(bad)
sar
mov
cld
xchg
mov
cld
retf
rcr
mov
rcr
mov
mov
push
aam
mov
fld1
retf
lods
popf
rol
xchg
popf
movs
retf
aad
cld
mov
dec
mov
imul
mov
into
in
lods
mov
xchg
aam
loopne
rcr
mov
enter
call
retf
mov
cmp
or
and
in
jge
or
mov
fs
dec
xor
imul
fwait
js
jge
xchg
cwde
adc
imul
or
dec
cmp
cmc
mov
dec
and
add
or
and
xor
xchg
sbb
(bad)
mov
pop
mov
add
mov
or
or
lds
imul
or
(bad)
cld
pop
dec
xor
dec
cmp
or
jb
call
add
imul
or
lds
imul
or
(bad)
cld
pop
dec
xor
push
pop
(bad)
or
cmp
or
and
imul
pushf
mov
or
in
xor
mov
imul
or
(bad)
cld
pop
dec
xor
pop
pop
or
cmp
or
jb
cli
imul
pushf
mov
or
aad
xor
mov
imul
or
(bad)
cld
pop
dec
xor
push
pop
or
xor
or
xor
push
pop
daa
or
xor
or
xor
mov
jg
or
cli
xor
popf
jg
or
dec
xor
mov
jg
or
sbb
popf
jg
or
sahf
add
imul
or
imul
or
mov
xor
imul
or
xor
imul
or
xor
imul
or
xor
imul
push
xor
mov
inc
and
in
jge
or
add
xor
push
mov
pop
inc
dec
xor
leave
(bad)
xor
cmc
mov
mov
fmul
mov
in
xchg
cwde
inc
cmp
xor
or
int3
fucomip
jge
or
mov
lds
int
sbb
pop
mov
push
imul
not
jg
mov
mov
out
or
xchg
mov
sub
xor
cmp
rcr
imul
xchg
mov
jg
or
nop
or
mov
xor
imul
or
xor
imul
or
xor
imul
or
mov
xor
imul
or
in
xchg
cwde
inc
cmp
cmp
cmc
mov
dec
and
pop
loop
or
imul
add
imul
fucomip
jge
or
mov
xor
popf
jg
or
and
fistp
pop
mov
mov
xor
fild
cmc
xchg
mov
movs
btr
jl
dec
xor
fbld
cmp
xor
not
jg
mov
mov
out
or
xchg
mov
sub
xor
cmp
rcr
imul
fsubr
xor
fisttp
cld
pop
dec
xor
push
mov
jl
dec
xor
fbstp
cmc
mov
dec
and
push
loop
hlt
mov
dec
and
or
xor
ffreep
hlt
xchg
mov
test
ror
xchg
cwde
jne
imul
test
dec
xor
and
xor
xchg
sbb
jmp
dec
int
sbb
pop
mov
push
imul
not
jg
mov
mov
out
or
xchg
mov
sub
xor
cmp
rcr
imul
or
fbld
cmc
mov
dec
and
add
dec
cdq
or
dec
int
lea
or
(bad)
xor
or
dec
jge
xchg
cwde
adc
imul
or
dec
xor
or
int3
fucomip
jge
or
add
xor
push
mov
sbb
dec
xor
leave
(bad)
xor
cmc
mov
mov
fmul
mov
or
or
or
mov
jl
dec
xor
fbstp
push
(bad)
xor
fucomip
push
push
mov
mov
xor
fild
push
stos
mov
mov
xor
fistp
or
mov
mov
mov
dec
xor
xchg
cwde
inc
cmp
xor
or
int3
fucomip
jge
or
mov
fs
cmp
xor
inc
dec
xor
push
cwde
adc
imul
or
mov
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
add
fbld
jge
iret
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
idiv
and
movs
dec
loop
outs
int3
adc
push
jnp
mov
popa
shl
or
dec
int
popf
scas
daa
or
dec
cmp
push
(bad)
xor
fist
push
mov
dec
xor
fistp
jge
iret
fucomip
jge
or
mov
(bad)
push
xor
ins
loope
test
cdq
adc
xchg
xor
outs
sbb
push
pop
xor
mov
lods
daa
or
cmps
jp
jno
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
jmp
dec
add
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
dec
jno
mov
mov
mov
mov
inc
and
xchg
cwde
inc
cmp
xor
or
daa
fst
dec
xor
or
daa
leave
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
or
and
xchg
cwde
adc
imul
or
dec
cmp
cmc
mov
dec
and
add
cld
test
and
xor
xchg
sbb
(bad)
mov
pop
mov
cmp
fistp
std
lods
daa
or
dec
xchg
cwde
adc
imul
or
int3
adc
xchg
mov
dec
xchg
cwde
adc
imul
or
int3
adc
push
cwde
adc
imul
or
dec
cmp
cmc
mov
inc
and
enter
push
jo
mov
mov
mov
cmp
or
and
in
jge
or
pusha
add
pushf
test
and
xor
xchg
sbb
fild
pop
stc
inc
jnp
mov
call
pushf
xchg
imul
cmc
dec
xor
in
test
push
pop
xor
cmc
into
cwde
dec
enter
imul
xor
imul
and
hlt
cmp
in
push
push
pop
xor
sub
mov
cwde
mov
ret
xor
cdq
fld
dec
add
or
adc
jno
xor
push
in
pop
cdq
xor
push
xor
stc
movs
aaa
or
popf
pop
or
(bad)
lods
fldenv
or
sub
dec
xor
mov
lods
daa
or
mov
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
or
(bad)
add
dec
or
jl
dec
xor
fild
push
mov
dec
xor
fcomip
or
stos
mov
mov
xor
fistp
push
push
xor
sub
push
add
cmc
enter
push
out
inc
dec
xor
cmp
rcr
imul
jmp
dec
add
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
dec
jno
mov
mov
mov
movs
fadd
es
dec
pop
xor
dec
xor
mov
lods
daa
or
cmp
xor
inc
(bad)
cmp
dec
xor
push
pop
and
imul
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
cmp
sbb
push
mov
xor
mov
inc
and
in
jge
or
and
shr
jne
pop
xor
out
inc
dec
xor
cmp
rcr
imul
jmp
dec
xchg
sbb
xor
jnp
sbb
int3
pop
std
lods
daa
or
dec
xchg
cwde
adc
imul
or
int3
adc
xchg
mov
dec
xchg
cwde
adc
imul
or
int3
adc
sub
and
int
(bad)
cmp
cmp
cmc
mov
dec
and
add
test
and
xor
xchg
sbb
(bad)
mov
pop
mov
cmp
fistp
std
lods
daa
or
dec
xchg
cwde
adc
imul
or
int3
adc
xchg
mov
dec
xchg
cwde
adc
imul
or
int3
adc
push
cwde
adc
imul
or
dec
cmp
push
(bad)
xor
fbld
fucomip
jge
or
mov
idiv
and
movs
dec
loop
outs
int3
adc
push
pop
xor
pop
cdq
adc
nop
in
pop
xor
mov
mov
cld
mov
mov
xor
xor
test
and
xchg
cwde
adc
imul
or
loopne
jl
add
imul
push
push
mov
jl
dec
xor
fisttp
jl
dec
xor
fisttp
mov
xor
(bad)
xor
mov
fucomip
jge
or
and
pop
rol
push
xor
ins
loope
test
dec
xor
(bad)
imul
dec
int
dec
xor
xchg
sbb
jmp
pop
cdq
adc
xchg
or
mov
mov
cld
mov
and
sahf
lahf
sbb
jge
or
sbb
mov
dec
and
pop
dec
xor
(bad)
ror
in
xor
out
inc
dec
xor
cmp
rcr
imul
add
fbld
xchg
cwde
mov
imul
mov
js
jge
xchg
cwde
adc
imul
or
dec
cmp
cmc
mov
dec
and
add
or
pop
fsub
or
xor
xchg
sbb
fistp
pop
mov
mov
xor
fild
push
out
inc
pushf
js
jge
xchg
cwde
adc
imul
or
dec
cmp
cmc
mov
dec
and
add
mov
or
xor
xchg
sbb
fistp
pop
mov
mov
xor
(bad)
or
pop
mov
js
jge
xchg
cwde
adc
imul
or
dec
cmp
cmc
mov
dec
and
add
je
jge
and
and
xor
xchg
sbb
fistp
pop
mov
idiv
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
xchg
push
into
pop
xor
mov
mov
cld
mov
add
mov
in
xchg
cwde
inc
cmp
xor
or
int3
fucomip
jge
or
mov
shr
cmp
pop
xor
out
inc
dec
xor
cmp
rcr
imul
or
fistp
add
push
cmc
mov
dec
and
add
mov
or
xor
xchg
sbb
fistp
pop
mov
push
imul
or
cwde
or
push
jo
mov
mov
mov
cmp
or
and
in
jge
or
mov
fs
xchg
xchg
push
int3
pop
xor
out
inc
dec
xor
cmp
rcr
imul
or
fild
or
push
cmc
mov
dec
and
add
add
and
xor
xchg
sbb
fistp
pop
mov
mov
xor
fistp
push
out
hlt
xchg
js
jge
xchg
cwde
adc
imul
or
dec
cmp
push
(bad)
xor
fistp
or
or
mov
xor
(bad)
or
dec
or
mov
xor
fistp
or
mov
mov
mov
push
add
cmc
enter
push
out
inc
dec
xor
cmp
rcr
imul
jmp
dec
add
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
dec
jno
mov
mov
mov
push
xor
ins
loope
call
bswap
fisttp
xor
xchg
sbb
or
lahf
iret
retf
xchg
or
fisttp
xor
xchg
sbb
fistp
pop
mov
push
imul
or
cwde
sub
ficomp
cmc
mov
mov
mov
out
iret
pop
cmp
pop
movs
movs
jp
jno
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
push
daa
cmp
dec
xor
cmp
imul
jl
dec
xor
xchg
cwde
inc
cmp
xor
or
int3
fucomip
jge
or
mov
fs
add
push
cwde
adc
imul
or
int3
adc
xchg
mov
dec
xchg
cwde
adc
imul
or
sbb
push
imul
xor
div
mov
dec
xor
mov
in
mov
push
mov
jl
dec
xor
fistp
push
push
cmc
mov
dec
and
add
dec
cdq
or
dec
int
frstor
or
(bad)
xor
or
dec
jge
xchg
cwde
adc
imul
or
sub
(bad)
popf
jg
or
jle
(bad)
lods
jg
or
cmp
mov
dec
and
or
xor
fcomip
or
pop
test
ror
xchg
cwde
test
imul
test
dec
xor
and
xor
xchg
sbb
jmp
dec
cmp
or
xchg
jb
xor
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
xor
stos
push
xchg
out
dec
xor
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
iret
pminsw
test
xchg
cmps
(bad)
dec
xor
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
xor
test
dec
xor
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
retf
or
ins
loope
stos
jge
daa
ret
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
imul
dec
xor
ins
sbb
call
out
repnz
cmp
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
dec
jno
mov
mov
mov
pushf
xchg
add
imul
cmp
cmp
dec
inc
(bad)
aam
dec
xor
jge
or
mov
push
imul
or
cwde
sbb
push
jo
mov
mov
mov
inc
(bad)
aam
dec
xor
jge
or
mov
push
imul
or
cwde
adc
push
jo
mov
mov
mov
inc
(bad)
aam
dec
xor
mov
jge
or
mov
push
imul
or
cwde
adc
push
jo
mov
mov
mov
out
iret
pop
cmp
pop
add
cmc
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
pop
dec
xor
push
pop
push
or
int
sbb
pop
mov
push
imul
or
cwde
or
add
mov
mov
mov
cmp
or
and
or
xor
fcomip
or
pop
mov
js
jge
xchg
cwde
adc
imul
or
dec
xor
or
int3
fucomip
jge
or
mov
fs
imul
mov
sub
xor
cmp
rcr
imul
cmp
or
and
hlt
mov
dec
and
or
xor
fild
push
out
enter
jge
xchg
cwde
adc
imul
or
dec
xor
or
int3
fucomip
jge
or
mov
fs
es
popa
call
mov
sub
xor
cmp
rcr
imul
or
fild
cmc
mov
dec
and
add
dec
test
int
or
xor
xchg
sbb
or
xor
xchg
add
imul
cmp
xor
or
int3
fucomip
jge
or
mov
fs
inc
call
mov
sub
xor
cmp
rcr
imul
cmp
or
lods
cmc
mov
dec
and
or
xor
fild
push
out
mov
xchg
cwde
adc
imul
or
dec
xor
or
int3
fucomip
jge
or
mov
rcl
jns
pop
xor
out
inc
dec
xor
cmp
rcr
imul
cmp
or
and
hlt
mov
dec
and
or
xor
fild
push
out
ror
cwde
adc
imul
or
dec
xor
or
int3
fucomip
jge
or
mov
shl
inc
sub
xor
cmp
rcr
imul
or
fild
cmc
mov
dec
and
add
mov
or
xor
xchg
sbb
fistp
pop
mov
push
imul
or
cwde
(bad)
mov
jo
mov
mov
mov
out
iret
pop
cmp
pop
jne
jp
jno
cmp
rcr
imul
sub
xor
cmp
rcr
imul
or
mov
inc
fstp
scas
pop
dec
xor
cwde
adc
imul
or
int3
adc
push
cwde
adc
imul
or
dec
xor
or
int3
fucomip
jge
or
sbb
rcl
in
pop
xor
out
inc
dec
xor
cmp
rcr
imul
jmp
dec
xchg
ja
dec
xor
mov
or
or
or
dec
xor
or
int3
fucomip
jge
or
mov
fs
cmp
xor
inc
dec
xor
leave
push
aaa
or
jo
mov
mov
fmul
cmp
pop
std
lods
daa
or
dec
xchg
cwde
adc
imul
or
int3
adc
xchg
mov
dec
xchg
cwde
adc
imul
or
int3
adc
push
cwde
adc
imul
or
dec
cmp
cmc
mov
inc
and
enter
push
jo
mov
mov
mov
cmp
or
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
push
mov
mov
mov
push
add
cmc
enter
push
out
inc
dec
xor
cmp
rcr
imul
add
fistp
xor
dec
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
idiv
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
and
imul
cmp
dec
int
dec
xor
xchg
sbb
jmp
retf
pop
mov
lods
inc
cmp
cmc
cmp
cmp
inc
(bad)
or
dec
xor
push
pop
cmp
dec
add
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
dec
jno
mov
mov
mov
pushf
mov
or
or
dec
cmp
push
(bad)
xor
fbstp
or
mov
dec
xor
(bad)
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
adc
push
out
inc
dec
xor
cmp
rcr
imul
or
fistp
or
(bad)
xor
fbstp
add
or
mov
xor
(bad)
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
jmp
inc
dec
xor
cmp
rcr
imul
xor
or
pop
das
or
int
sbb
pop
mov
idiv
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
imul
jbe
xor
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
in
ins
and
xchg
cwde
adc
imul
or
mov
or
(bad)
cld
pop
dec
xor
push
mov
jl
dec
xor
fistp
xor
dec
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
idiv
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
xor
imul
and
int
dec
xor
xchg
sbb
jmp
arpl
or
mov
xor
push
and
hlt
mov
inc
and
xchg
cwde
inc
cmp
xor
or
daa
fst
dec
cmp
push
stos
mov
mov
xor
fbstp
push
xor
sub
push
add
lds
xor
xchg
cwde
adc
imul
or
dec
xor
or
daa
mov
imul
or
daa
fst
dec
cmp
push
stos
mov
mov
xor
fbstp
push
xor
sub
push
add
xchg
enter
push
out
inc
dec
xor
cmp
rcr
imul
cmp
or
and
hlt
mov
inc
and
xchg
cwde
inc
cmp
xor
or
daa
fst
dec
cmp
push
stos
mov
mov
xor
fbstp
push
xor
sub
push
add
jge
dec
xor
xchg
cwde
adc
imul
or
dec
xor
or
daa
mov
imul
or
daa
fst
dec
cmp
push
stos
mov
mov
xor
fbstp
push
xor
sub
push
add
xor
adc
or
dec
int
popf
scas
daa
or
xor
or
(bad)
cld
pop
dec
xor
imul
or
out
pop
dec
xor
fistp
xor
dec
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
idiv
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
nop
sub
xor
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
push
pop
xor
mov
mov
cld
mov
movs
inc
push
es
dec
xor
dec
xor
mov
lods
daa
or
xor
xor
and
jl
pop
xor
sbb
push
leave
or
xor
xchg
sbb
or
lahf
iret
retf
xchg
or
fisttp
xor
xchg
sbb
or
lahf
xor
imul
xor
xchg
sbb
fistp
pop
mov
idiv
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
imul
hlt
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
imul
hlt
mov
mov
cld
mov
hlt
mov
lods
daa
or
cmps
jp
jno
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
add
fistp
push
imul
mov
js
jge
xchg
cwde
adc
imul
or
sbb
push
push
dec
xor
mov
loopne
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
dec
jno
mov
mov
mov
pop
jp
ins
fcomp
dec
xchg
sbb
push
leave
or
xor
xchg
sbb
or
lahf
iret
retf
xchg
or
fisttp
xor
xchg
sbb
or
lahf
xor
imul
xor
xchg
sbb
fistp
pop
mov
idiv
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
push
mov
mov
mov
mov
lods
fcom
out
cmp
(bad)
imul
dec
int
dec
xor
xchg
sbb
jmp
imul
pushf
mov
xor
push
jnp
mov
jno
and
xchg
cwde
adc
imul
or
mov
popf
jg
or
and
push
ret
rcr
hlt
mov
mov
cld
mov
movs
dec
inc
(bad)
cld
pop
dec
xor
mov
cdq
adc
xchg
jno
pop
xor
mov
mov
cld
mov
movs
std
dec
(bad)
cld
pop
dec
xor
push
out
cmp
(bad)
imul
dec
int
dec
xor
xchg
sbb
jmp
retf
pop
mov
add
dec
add
push
pop
inc
cmps
jp
jno
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
cmp
imul
daa
or
dec
xchg
cwde
adc
imul
or
int3
adc
xchg
mov
dec
xchg
cwde
adc
imul
or
int3
adc
push
cwde
adc
imul
or
adc
fdiv
out
pop
dec
xor
fisttp
or
dec
or
jl
dec
xor
(bad)
punpckhbw
push
mov
dec
xor
fistp
xor
mov
fucomip
jge
or
mov
(bad)
push
xor
ins
loope
test
popf
add
dec
cmp
push
(bad)
xor
(bad)
punpckhbw
push
mov
dec
xor
fistp
xor
mov
fucomip
jge
or
mov
(bad)
push
xor
ins
loope
test
cdq
adc
xchg
adc
mov
mov
cld
mov
hlt
mov
lods
daa
or
test
or
(bad)
int3
pop
dec
xor
dec
add
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
dec
jno
mov
mov
mov
mov
lods
daa
or
lds
imul
or
daa
cmp
dec
xor
mov
imul
push
int3
fcomp
and
mov
loopne
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
dec
jno
mov
mov
mov
pop
jp
ins
fcomp
dec
xchg
sbb
push
leave
or
xor
xchg
sbb
or
lahf
iret
retf
xchg
or
fisttp
xor
xchg
sbb
or
lahf
xor
imul
xor
xchg
sbb
mov
push
repnz
(bad)
hlt
mov
inc
and
xchg
cwde
inc
cmp
xor
or
daa
fst
dec
xor
leave
xchg
cwde
mov
imul
jmp
outs
int3
adc
push
jnp
mov
mov
mov
cld
mov
hlt
mov
lods
daa
or
inc
sub
dec
xor
push
movs
into
or
in
or
add
xor
pop
retf
js
jl
pop
xor
sbb
push
leave
or
xor
xchg
sbb
or
lahf
iret
retf
xchg
or
fisttp
xor
xchg
sbb
or
lahf
xor
imul
xor
xchg
sbb
(bad)
xor
or
cmp
or
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
imul
hlt
mov
mov
cld
mov
lods
xor
or
imul
imul
or
fist
or
or
jl
dec
xor
(bad)
punpckhbw
push
mov
dec
xor
fistp
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
mov
sbb
out
inc
dec
xor
cmp
rcr
imul
or
fild
push
(bad)
xor
fistp
push
mov
mov
xor
fistp
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
dec
int
dec
xor
xchg
sbb
jmp
jae
xor
pushf
pop
cmp
push
cwde
inc
cmp
xor
or
daa
mov
imul
or
daa
fst
dec
cmp
push
stos
mov
mov
xor
fbstp
push
xor
sub
push
add
ror
jmp
sub
xor
cmp
rcr
imul
xor
xor
or
and
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
imul
mov
xor
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
push
pop
xor
mov
mov
cld
mov
lods
mov
xor
imul
fmul
mov
jl
dec
xor
fist
or
or
jl
dec
xor
(bad)
punpckhbw
push
mov
dec
xor
fistp
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
mov
out
inc
dec
xor
cmp
rcr
imul
xor
xor
or
xchg
cmc
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
imul
xchg
hlt
mov
mov
cld
mov
lods
and
imul
fmul
mov
jl
dec
xor
fist
or
or
jl
dec
xor
(bad)
punpckhbw
push
mov
dec
xor
fistp
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
ret
push
out
inc
dec
xor
cmp
rcr
imul
xor
xor
or
xchg
cmc
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
push
xchg
fstp
outs
sbb
push
pop
xor
mov
sub
jl
dec
xor
fist
or
or
jl
dec
xor
(bad)
punpckhbw
push
mov
dec
xor
fistp
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
dec
int
dec
xor
xchg
sbb
jmp
addr16
xor
pushf
pop
cmp
push
cwde
inc
cmp
xor
or
daa
mov
imul
or
daa
fst
dec
cmp
push
stos
mov
mov
xor
fbstp
push
xor
sub
push
add
loope
dec
xor
xchg
cwde
adc
imul
or
js
or
(bad)
push
gs
xor
jge
or
mov
xor
dec
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
idiv
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
xchg
leave
xchg
pop
xor
mov
mov
cld
mov
lods
adc
or
imul
pop
dec
xor
fist
or
or
jl
dec
xor
(bad)
punpckhbw
push
mov
dec
xor
fistp
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
adc
sbb
out
inc
dec
xor
cmp
rcr
imul
xor
xor
or
test
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
(bad)
or
dec
int
popf
scas
daa
or
mov
(bad)
push
gs
xor
mov
jge
or
mov
xor
dec
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
idiv
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
nop
std
push
xor
mov
mov
cld
mov
lods
push
dec
xor
imul
fmul
mov
jl
dec
xor
fist
or
or
jl
dec
xor
(bad)
punpckhbw
push
mov
dec
xor
fistp
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
sbb
push
out
inc
dec
xor
cmp
rcr
imul
xor
xor
or
test
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
push
xchg
mov
pop
xor
mov
mov
cld
mov
movs
fmul
push
gs
xor
jge
or
mov
xor
dec
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
idiv
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
xor
imul
add
int
dec
xor
xchg
sbb
jmp
retf
pop
mov
lods
jno
xor
outs
mov
stc
or
or
or
cmps
jp
jno
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
add
fistp
xor
dec
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
idiv
and
movs
dec
loop
outs
int3
adc
imul
sbb
jo
mov
adc
fisttp
xor
xchg
sbb
jmp
sbb
pop
mov
xor
dec
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
idiv
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
xor
push
dec
int
dec
xor
xchg
sbb
jmp
sbb
pop
mov
idiv
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
xor
ins
loope
test
mov
or
push
add
sbb
mov
sub
xor
cmp
rcr
imul
or
fist
or
or
jl
dec
xor
fist
push
mov
dec
xor
fist
or
or
mov
xor
fbstp
push
xor
sub
mov
cdq
dec
pop
cdq
adc
aaa
or
int3
fisttp
xor
xchg
sbb
jmp
retf
pop
mov
lods
push
pop
xor
mov
imul
or
daa
jl
pop
xor
sbb
push
leave
or
xor
xchg
sbb
or
lahf
iret
retf
xchg
or
fisttp
xor
xchg
sbb
or
lahf
xor
imul
xor
xchg
sbb
fistp
pop
mov
idiv
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
push
mov
mov
mov
mov
cdq
dec
pop
cdq
adc
ins
cmc
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
imul
hlt
mov
mov
cld
mov
hlt
mov
inc
and
xchg
cwde
inc
cmp
xor
or
daa
fst
dec
xor
or
daa
leave
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
imul
sbb
jo
mov
adc
fisttp
xor
xchg
sbb
jmp
sbb
pop
mov
xor
dec
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
rcr
mov
xor
or
dec
ins
cmc
mov
mov
cld
mov
hlt
mov
lods
daa
or
sub
or
(bad)
cld
pop
dec
xor
imul
or
daa
jl
pop
xor
sbb
push
leave
or
xor
xchg
sbb
or
lahf
iret
retf
xchg
or
fisttp
xor
xchg
sbb
or
lahf
xor
imul
xor
xchg
sbb
fistp
pop
mov
idiv
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
push
mov
mov
mov
mov
cdq
dec
pop
cdq
adc
ins
cmc
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
imul
hlt
mov
mov
cld
mov
hlt
mov
lods
daa
or
clc
xor
push
daa
jl
pop
xor
sbb
push
leave
or
xor
xchg
sbb
or
lahf
iret
retf
xchg
or
fisttp
xor
xchg
sbb
or
lahf
xor
imul
xor
xchg
sbb
fistp
pop
mov
idiv
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
push
mov
mov
mov
mov
cdq
dec
pop
cdq
adc
ins
cmc
mov
mov
cld
mov
hlt
mov
lods
daa
or
cmps
jp
jno
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
or
fist
or
or
jl
dec
xor
fist
push
mov
dec
xor
fistp
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
repnz
push
out
inc
dec
xor
cmp
rcr
imul
jmp
dec
xchg
inc
outs
dec
xor
mov
or
or
or
cmps
jp
jno
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
add
fistp
xor
dec
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
idiv
and
movs
dec
loop
outs
int3
adc
push
jnp
mov
mul
or
dec
int
popf
scas
daa
or
dec
cmp
push
(bad)
xor
fist
push
mov
dec
xor
fisttp
jge
iret
fucomip
jge
or
mov
(bad)
push
xor
ins
loope
test
cdq
adc
xchg
mov
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
push
mov
mov
mov
push
add
cmc
xchg
cwde
sbb
fisttp
xor
xchg
sbb
jmp
sbb
pop
mov
idiv
and
push
pop
loopne
mov
inc
and
xchg
cwde
mov
imul
push
mov
mov
mov
push
add
imul
mov
sub
xor
cmp
rcr
imul
jmp
dec
int
sbb
pop
mov
idiv
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
and
jmp
(bad)
ja
xor
sub
pop
std
lods
daa
or
dec
xchg
cwde
adc
imul
or
int3
adc
js
and
cwde
adc
imul
or
adc
lock
and
int
(bad)
cmp
cmp
push
(bad)
xor
fbld
fucomip
jge
or
mov
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
xor
imul
cmp
(bad)
imul
dec
int
dec
xor
xchg
sbb
jmp
sbb
pop
mov
idiv
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
xchg
cmp
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
xchg
stc
ficomp
hlt
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
xchg
cmp
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
xchg
ins
rcr
hlt
mov
mov
cld
mov
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
xor
ins
loope
test
cdq
adc
xchg
lods
rcr
hlt
mov
mov
cld
mov
add
jnp
or
in
xchg
cwde
inc
cmp
xor
or
daa
mov
imul
or
daa
fst
dec
xor
or
daa
leave
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
push
jnp
mov
test
cwde
adc
imul
or
sbb
push
imul
or
retf
or
int
sbb
pop
mov
idiv
and
xchg
cwde
mov
imul
or
daa
leave
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
xchg
mov
stos
inc
inc
xor
pop
pop
push
mov
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
cmp
(bad)
imul
dec
int
dec
xor
xchg
sbb
jmp
retf
pop
mov
lods
jge
xor
mov
imul
or
out
pop
dec
xor
fbld
fistp
pop
mov
xor
sahf
iret
fucomip
jge
or
mov
xor
mov
fucomip
jge
or
mov
xor
scas
dec
mov
lahf
iret
retf
xchg
in
ret
dec
add
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
dec
jno
mov
mov
mov
(bad)
jnp
mov
pop
call
adc
imul
or
sbb
push
imul
cmp
or
and
hlt
mov
dec
and
push
pop
xor
cmp
or
and
push
pop
loopne
mov
dec
and
push
pop
lock
and
push
pop
rol
push
iret
pminsw
test
dec
xor
sub
pop
std
lods
daa
or
dec
xchg
cwde
adc
imul
or
int3
adc
xchg
mov
dec
xchg
cwde
adc
imul
or
int3
adc
push
cwde
adc
imul
or
fiadd
dec
enter
push
out
inc
dec
xor
cmp
rcr
imul
jmp
dec
xchg
xchg
outs
dec
xor
mov
or
or
or
dec
xor
or
daa
mov
imul
or
daa
fst
dec
xor
or
daa
leave
xchg
cwde
mov
imul
or
daa
jmp
outs
int3
adc
xchg
mov
stos
add
or
mov
cmp
rcr
imul
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
sub
mov
sub
xor
cmp
rcr
imul
cmp
(bad)
imul
dec
int
dec
xor
xchg
sbb
jmp
retf
pop
mov
lods
cmp
mov
and
mov
jl
dec
xor
fild
push
mov
jl
dec
xor
fild
push
mov
dec
xor
fbstp
push
mov
mov
xor
fild
push
mov
mov
mov
push
out
xchg
sbb
jge
add
or
mov
pushf
mov
sub
out
jae
mov
mov
cmp
pop
xor
push
iret
pminsw
stos
mov
cmc
mov
mov
lods
mov
les
xor
ins
loope
stos
dec
jno
mov
mov
mov
(bad)
jnp
mov
int
and
xchg
cwde
adc
imul
or
sbb
push
push
daa
or
mov
sub
dec
std
or
shl
cmp
rcr
imul
xchg
cwde
sar
(bad)
jae
mov
mov
or
pop
xor
mov
lods
daa
or
retf
dec
cmp
test
dec
xor
je
pop
jae
dec
jne
or
jne
dec
cmc
sbb
xor
or
xchg
mov
xor
or
in
pop
cmps
call
pop
lds
ja
out
xchg
retf
pop
imul
jo
inc
movs
pop
addr16
push
jbe
jg
call
mov
fs
sub
ss
jmp
push
pop
addr16
inc
jo
ror
push
pop
mov
mov
pop
js
pop
sub
mov
pop
js
das
sub
mov
push
test
pop
data16
push
(bad)
js
movs
fwait
mov
je
sbb
pop
addr16
push
popf
jg
imul
dec
movs
inc
gs
dec
test
mov
js
jns
pop
cmp
cmp
mov
call
xor
jg
dec
imul
movs
and
(bad)
pop
arpl
inc
jge
mov
gs
pusha
imul
bound
gs
pop
mov
adc
call
movs
fwait
mov
je
sbb
pop
addr16
je
ins
dec
movs
fwait
push
lds
or
arpl
imul
push
and
scas
mov
jg
pop
retf
inc
inc
jae
js
cdq
mov
data16
jbe
fs
movs
cdq
jo
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
addr16
(bad)
into
jg
sti
data16
bound
cmp
out
jle
dec
fnstcw
pop
retf
mov
jb
mov
popa
mov
xlat
scas
mov
push
test
in
cmp
pop
push
mov
arpl
pop
popf
(bad)
aad
pop
stos
mov
sbb
xchg
inc
lahf
leave
test
jnp
cdq
fsub
pop
data16
std
ja
pushf
push
jge
pop
pop
(bad)
mov
push
jb
pop
mov
pop
loopne
cwde
test
cdq
push
mov
dec
movs
call
mov
ror
in
in
pop
rcr
es
mov
addr16
push
test
pusha
dec
adc
ins
mov
pop
xchg
test
adc
cmps
adc
push
jle
mov
push
sub
hlt
mov
mov
ret
retf
dec
(bad)
ins
mov
pop
jno
pop
jae
push
mov
leave
int3
lods
dec
icebp
call
cmp
lea
jl
rol
xor
(bad)
adc
call
movs
ret
movs
cdq
jo
dec
nop
jmp
test
sti
push
xchg
sub
fsubr
jo
xchg
xchg
mov
aas
jge
mov
movs
inc
mov
mov
jae
or
push
sbb
dec
sahf
in
mov
sbb
dec
sahf
in
mov
pop
pop
mov
fisttp
mov
pop
lahf
leave
sub
jg
mov
pop
int
leave
lea
int3
test
dec
sahf
out
mov
cwde
retf
mov
dec
sahf
jbe
inc
lahf
imul
mov
mov
lahf
mov
push
cmps
pusha
xor
test
push
pop
or
cs
fs
pop
(bad)
xchg
dec
push
(bad)
fild
les
loope
pop
leave
and
pop
outs
ins
pop
gs
dec
mov
mov
clc
push
cdq
pop
in
and
pop
stos
dec
inc
adc
jg
xchg
stos
inc
call
nop
adc
ins
add
dec
lods
mov
add
call
mov
shl
leave
cld
jae
leave
cwde
pop
jne
add
cld
xor
pop
push
pushf
adc
addr16
push
cmp
retf
les
retf
or
add
imul
cmp
retf
movs
fwait
or
xchg
loope
pop
leave
and
mov
lods
test
rol
mov
mov
in
mov
mov
int3
not
mov
jg
mov
and
mov
jbe
jbe
retf
inc
ja
jno
xor
pushf
push
shr
sbb
jo
mov
cmp
fisub
cdq
nop
mov
and
fstp
mov
mov
and
mov
cmp
lods
retf
mov
sar
or
cmp
mov
pop
stos
xchg
and
cmp
xchg
loope
cmp
xor
mov
and
(bad)
stos
mov
xchg
test
xchg
adc
add
in
xchg
or
adc
mov
push
in
test
xchg
cmp
in
daa
xchg
xchg
test
push
adc
adc
shr
add
sub
push
add
dec
popf
outs
out
adc
sub
(bad)
test
mov
sbb
loop
pop
fbstp
ret
mov
pop
int
xchg
fldenv
aad
cmp
scas
outs
lock
int
xor
arpl
pop
pop
outs
dec
pop
gs
dec
cdq
dec
mov
mov
out
sbb
test
mov
adc
xchg
adc
stos
pop
lds
js
pushf
dec
scas
inc
mov
(bad)
mov
nop
retf
jmp
add
cli
mov
xor
dec
outs
jg
mov
xor
rcr
gs
loope
fs
add
pop
cld
adc
pop
mov
movs
xchg
ins
mov
jnp
mov
out
jmp
cdq
fcom
pop
data16
idiv
mov
push
jge
pop
movs
push
jno
cld
imul
imul
mov
fcomp
and
mov
jbe
imul
jb
cmp
int
test
add
sub
shr
loop
mul
rcr
(bad)
outs
add
iret
xchg
mov
adc
sbb
dec
(bad)
(bad)
jecxz
mov
xchg
push
dec
hlt
out
int
ja
pop
loope
inc
dec
mov
mov
(bad)
sbb
cdq
sbb
lods
dec
movs
call
pop
lods
fmul
jl
xchg
std
ss
stos
jno
imul
(bad)
clc
aas
fidiv
jp
and
and
cmp
xor
push
pop
test
pop
add
and
cli
mov
mov
rol
(bad)
jne
and
or
jne
adc
mov
ss
xchg
pusha
test
jo
xchg
dec
shl
and
pop
shl
fisub
ror
and
and
mov
shr
not
jmp
and
pop
rol
sub
xlat
and
mov
shr
xchg
int3
shl
shl
ss
shl
ror
and
pop
shl
ss
shl
iret
pop
shr
(bad)
xchg
test
dec
push
mov
pop
shl
jno
shl
mov
ss
shl
push
int3
shl
jmp
and
mov
pop
shl
ss
shl
fwait
pop
rol
sub
icebp
xor
fldcw
test
and
xchg
pop
shl
icebp
int3
shl
shl
scas
mov
sub
out
popa
and
cmp
mov
pop
shl
icebp
int3
shl
inc
ss
shl
xchg
sar
mov
pop
fldenv
mov
and
and
and
and
inc
pop
retf
fiadd
xchg
mov
shr
ds
inc
ss
or
fisub
ror
retf
movs
jno
pop
pop
rcr
jb
or
and
ins
(bad)
and
mov
into
daa
pop
shl
mov
inc
sbb
pop
shl
mov
pop
jg
mov
lds
aaa
leave
out
leave
jmp
mov
or
jns
test
retf
(bad)
icebp
imul
sub
and
stc
dec
sar
xor
in
es
fidivr
and
les
xor
jp
and
inc
xlat
fisub
shr
pop
fwait
xor
ret
movs
cdq
or
fcomip
ins
mov
mov
sbb
jle
pop
fbstp
pop
fwait
sub
xor
(bad)
ins
mov
data16
mov
mov
and
fisttp
jmp
adc
fidiv
pop
push
mov
jmp
sbb
test
int
jle
push
out
dec
push
nop
sbb
cli
int
adc
jg
sti
gs
pop
int
dec
or
movs
movs
pop
call
xlat
mov
arpl
mov
and
pop
movs
push
(bad)
int
jle
pop
xlat
mov
gs
mov
data16
mov
xor
push
int
jle
pop
int
dec
mov
jmp
int
cdq
jo
lods
cmp
mov
pop
pop
outs
test
dec
imul
cdq
jmp
dec
mov
dec
xchg
je
pop
addr16
cld
sub
jg
lahf
nop
add
std
pop
fld
inc
mov
xchg
in
xchg
inc
cmps
xchg
ret
hlt
jp
dec
movs
cwde
sbb
push
das
test
jl
add
jg
test
jg
inc
mov
push
je
jg
mov
inc
scas
mov
shr
ins
mov
imul
jb
dec
mov
call
mov
push
je
mov
fisttp
xchg
mov
in
test
in
jge
inc
inc
cwde
jg
jns
mov
xor
not
adc
cwde
mov
inc
push
mov
mov
retf
jge
xchg
inc
mov
retf
dec
mov
mov
iret
mov
mov
outs
mov
mov
mov
inc
and
jbe
and
mov
push
sahf
sbb
mov
jmp
mov
push
cmps
cdq
sbb
xor
in
fstp
mov
enter
xchg
mov
mov
addr16
scas
sub
xor
sub
ins
scas
jmp
cmp
dec
sub
scas
daa
sub
sbb
add
outs
(bad)
sahf
sub
push
aas
movs
and
mov
or
jo
xor
pushf
sub
(bad)
cmp
lahf
sub
retf
cmc
mov
jge
jb
xor
movs
cmp
mov
lea
push
scas
jo
xor
popf
sub
call
popf
(bad)
adc
sbb
aaa
cmp
mov
jno
sub
xor
movs
push
jbe
dec
movs
and
jg
cmovp
mov
repz
ins
mov
mov
xor
mov
mov
ret
arpl
mov
push
xlat
jbe
popa
mov
fs
jg
mov
xchg
and
sahf
xchg
or
nop
popf
pop
adc
scas
loopne
sbb
stos
in
(bad)
dec
push
loope
movs
rol
xchg
lds
mov
mov
and
lods
lea
scas
xchg
fadd
pop
data16
mov
pop
mov
arpl
shr
(bad)
gs
mov
int
fwait
mov
out
retf
shr
inc
xchg
ror
push
jl
pusha
mov
adc
mov
pop
xchg
jbe
mov
push
mov
pop
or
mov
in
fs
sbb
inc
hlt
inc
jae
cmp
push
outs
hlt
adc
popa
movs
dec
xchg
test
ja
pop
xor
dec
ins
or
ins
mov
mov
or
mov
test
rcr
push
jle
mov
hlt
jle
pop
cmps
cwde
or
ins
mov
call
std
jne
push
dec
pop
dec
stc
cmps
cwde
sbb
fimul
test
je
mov
mov
jle
jge
mov
mov
push
xchg
mov
mov
pop
and
or
cmc
outs
push
mov
into
cmp
xchg
and
push
mov
cwde
dec
imul
fdivr
sbb
addr16
dec
div
aas
mov
iret
xor
gs
pop
in
mov
fstp
lods
sbb
and
push
and
cld
mov
into
fbstp
mov
cld
dec
jbe
and
fdivr
adc
out
cld
mov
cwde
sbb
into
lock
and
in
jo
iret
(bad)
mov
mov
sbb
xor
xor
sbb
iret
jl
or
mov
xor
mov
fdivr
dec
jbe
and
cmp
jae
into
sbb
mov
or
cmp
in
and
lods
and
icebp
lods
add
jmp
sbb
aaa
ds
lds
mov
cmp
and
cmp
repz
mov
xor
cld
data16
repz
push
mul
sbb
xor
mov
fdivr
adc
cld
mov
fdivr
and
and
loopne
ror
mov
shr
inc
mov
cld
mov
iret
call
sbb
sbb
into
add
sub
sbb
test
out
mov
jle
mov
retf
sbb
sbb
out
mov
jle
xor
ss
mov
xor
or
data16
(bad)
jbe
xor
mov
fidiv
jno
jecxz
(bad)
adc
fwait
xor
dec
jmp
mov
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
cdq
xor
mov
jg
pop
imul
pop
gs
pop
gs
pop
gs
pop
xor
push
aad
sbb
fwait
jo
(bad)
test
imul
nop
(bad)
dec
addr16
jecxz
fs
mov
div
lahf
shl
jge
repz
xchg
js
xchg
sahf
mov
mov
mov
imul
xchg
xchg
pop
mov
scas
inc
movs
xchg
shl
ret
addr16
and
pop
mov
mov
rcl
mov
enter
imul
push
mov
arpl
jo
lea
push
add
jg
xchg
jge
xchg
sbb
push
sub
inc
jp
shl
cmp
shl
pop
mov
stc
xchg
adc
adc
das
xchg
pop
lds
pop
xchg
xchg
xor
mov
bound
xchg
gs
shl
in
adc
push
jns
jg
mov
and
je
pop
iret
mov
clc
push
sub
js
dec
mov
dec
movs
ret
movs
call
stc
push
mov
dec
movs
imul
ror
push
xchg
mov
aas
push
mov
movs
dec
movs
cdq
jo
dec
imul
imul
ss
pusha
mov
in
pop
call
inc
retw
(bad)
arpl
mov
neg
or
inc
pop
shl
outs
iret
(bad)
inc
push
mov
jae
rol
sar
push
mov
pop
rol
xchg
push
cmps
cwde
cmp
(bad)
jle
pop
call
loopne
xchg
dec
fsub
xchg
lea
jmp
pop
jg
dec
sub
ins
inc
sub
pop
dec
outs
movs
mov
jecxz
popf
js
test
sub
mov
fmul
jg
rcl
pop
mov
push
mov
(bad)
push
out
mov
cmc
pop
movs
retf
mov
mov
fs
xchg
jbe
pop
add
jg
jmp
push
xor
(bad)
xchg
sub
shl
mov
adc
(bad)
pop
shl
mov
ret
mov
adc
mov
lods
retf
mov
jle
lods
test
push
xchg
or
xor
cdq
xchg
cmc
mov
jg
ins
mov
jnp
mov
cmp
into
mov
shl
cmc
cmc
xchg
test
mov
or
push
aam
or
pop
and
movs
dec
hlt
dec
rcr
not
mov
loopne
stos
retf
in
mov
dec
mov
inc
addr16
mov
add
mov
ins
les
xchg
jno
push
stos
jp
hlt
jbe
dec
push
stos
xchg
sbb
push
xchg
push
movs
call
movs
pushf
sbb
sar
mov
xchg
mov
idiv
push
and
out
dec
and
lea
push
out
and
lods
mov
test
xchg
icebp
fwait
pop
test
(bad)
xlat
daa
sahf
(bad)
pop
xchg
sub
out
repnz
xor
cwde
add
(bad)
sbb
push
dec
dec
call
mov
bound
jmp
(bad)
icebp
ins
mov
data16
inc
jb
dec
movs
cwde
sub
push
pop
sub
outs
rcr
pop
dec
inc
enter
stc
inc
cmp
xchg
pop
cdq
mov
retf
xchg
mov
lods
rcl
mov
gs
inc
dec
jns
mov
fidiv
add
pop
mov
add
inc
enter
fnstcw
std
pop
movs
rcl
gs
fwait
jl
inc
mov
sub
dec
(bad)
lahf
pop
std
jmp
inc
mov
retf
dec
pop
xor
jge
loopne
addr16
cmp
jg
xchg
jg
xchg
mov
jne
sbb
les
rcl
lea
dec
adc
push
shr
cmp
sub
retf
pusha
pop
les
mov
rcl
mov
mov
sub
mov
arpl
lock
retf
push
dec
popf
xchg
neg
push
mov
cdq
jo
dec
mov
add
lahf
shr
sub
push
xchg
retf
mov
sbb
mov
mov
push
mov
mov
cli
scas
test
or
mov
sbb
pushf
test
data16
dec
movs
cwde
adc
or
outs
dec
gs
push
xchg
fwait
mov
cwde
call
movs
mov
stc
mov
mov
pop
les
xchg
xchg
add
loop
pop
push
pop
icebp
jbe
inc
pop
in
stos
setne
outs
dec
mov
lahf
dec
or
pop
wbinvd
rol
xchg
cmp
adc
stc
or
mov
std
pop
sbb
jg
mov
sbb
pop
xor
retf
cmps
mov
xor
loop
movs
retf
mov
jno
mov
push
pop
mov
cwde
pop
pop
outs
dec
pop
gs
dec
or
frstor
call
xchg
pop
dec
mov
fwait
js
mov
sub
(bad)
ret
pop
xchg
pop
fwait
lds
into
push
jae
nop
lahf
xor
xchg
inc
cmps
cmc
push
xchg
dec
hlt
xchg
mov
lods
jge
dec
jmp
xchg
cwde
pop
mov
test
gs
jno
std
dec
cld
dec
jge
pop
mov
push
pop
mov
pop
pop
ds
pop
cld
adc
add
sar
ins
mov
mov
add
pop
adc
call
jb
sub
xchg
popf
pop
mov
xchg
mov
dec
imul
ret
cmp
loope
popf
mov
test
inc
pushf
jg
stc
test
mov
movs
leave
clc
jno
retf
mov
mov
sub
xchg
imul
and
jl
retf
les
test
xor
and
push
push
xchg
ftst
pusha
mov
fwait
or
xchg
cmp
xchg
mov
out
jns
(bad)
cdq
nop
push
inc
push
push
cs
stc
ret
pop
adc
xchg
jae
mov
xchg
ret
push
imul
xchg
adc
in
push
push
pop
loop
test
push
jp
mov
pusha
in
push
push
push
arpl
cmp
mov
cmp
mov
mov
mov
pusha
movs
cli
gs
pop
dec
sub
je
cs
sbb
lea
addr16
xchg
pop
addr16
pop
stos
ins
mov
pop
outs
lds
jg
pop
nop
scas
pop
dec
fs
repz
fs
mov
div
push
mov
xchg
in
add
lea
pop
cdq
push
mov
cmp
xchg
mov
cmps
xchg
dec
addr16
mov
cmp
stos
bound
pop
jno
cmc
inc
lods
adc
imul
mov
fcomp
jg
movs
fwait
or
push
pop
retf
std
jne
push
dec
xchg
out
aad
push
pop
in
xor
cmp
sar
pop
mov
sbb
pop
dec
fs
repz
fs
sub
pop
lds
pop
fild
data16
mov
(bad)
push
hlt
pop
xchg
ja
pop
adc
aaa
push
mov
push
into
mov
pop
pop
push
call
dec
push
xchg
int
cli
mov
enter
stos
push
jl
pop
jns
lock
hlt
popa
gs
mov
retf
mov
mov
je
cmp
mov
sti
and
mov
mov
mov
mov
cmp
xchg
test
mov
jle
dec
retf
cld
fiadd
push
mul
lahf
push
pop
addr16
mov
bound
push
mov
movs
mov
lahf
mov
test
arpl
push
inc
push
ret
popa
and
mov
sub
and
mov
pop
repz
shr
mov
xlat
aas
gs
ret
jne
and
movs
push
retf
dec
mov
inc
icebp
dec
movs
es
jge
fs
sahf
or
test
fs
fs
inc
jne
mov
arpl
pop
jns
sbb
mov
jge
mov
fs
inc
xor
arpl
pop
jns
ret
jg
(bad)
xor
mul
xchg
jne
scas
dec
mov
jg
pop
jp
mov
xchg
je
lahf
push
rep
xchg
jne
scas
dec
pop
mov
pop
gs
pop
bound
sbb
jge
dec
sar
enter
mov
fld
mov
inc
sub
test
mov
xchg
out
mov
lds
fs
mov
mov
stos
mov
xchg
rcr
adc
adc
data16
fbstp
jge
pop
in
cdq
movs
scas
or
jg
cmp
sbb
hlt
lea
pop
je
cdq
mov
push
or
sub
xchg
mov
sbb
ins
mov
mov
pop
inc
mov
mov
dec
mov
out
mov
shl
jno
pop
gs
loope
pop
xchg
sbb
(bad)
in
lea
icebp
mov
xchg
sbb
dec
hlt
and
lods
dec
inc
mov
pop
mov
stos
xchg
sbb
movs
fwait
sbb
movs
inc
hlt
sar
mul
adc
dec
shl
or
pop
or
ror
cdq
jo
pop
mov
pop
and
dec
push
retf
hlt
pop
xchg
std
jg
jg
inc
mov
push
xor
mov
dec
push
sbb
inc
pop
xchg
mov
lea
addr16
fstp
xchg
iret
xor
clc
es
adc
and
fisttp
repnz
(bad)
pop
push
sub
dec
repnz
fst
(bad)
int3
sub
dec
xchg
push
in
fwait
xor
dec
imul
dec
mov
jp
adc
sub
pop
shl
mov
sub
mov
mov
add
rcr
xchg
push
mov
dec
clc
cmp
pop
bound
mov
fisubr
and
cmp
pop
jmp
jmp
push
push
pop
imul
sbb
fldenv
outs
inc
jge
pop
mov
push
fwait
rcl
mov
sar
pop
data16
adc
jno
mov
lea
lods
cdq
lahf
shl
mov
ror
dec
mov
inc
je
push
scas
sub
mov
imul
jge
lods
jns
mov
xchg
sbb
xor
loope
fs
icebp
push
lea
arpl
ja
mov
mov
dec
cmp
mov
push
jl
pop
fcomp
pusha
out
mov
mov
fnstenv
pop
mov
pop
and
or
dec
ret
movs
cdq
jo
dec
push
(bad)
sbb
push
pushf
jle
add
fwait
lods
outs
pop
scas
enter
js
sub
xlat
push
pop
scas
in
inc
mov
icebp
mov
idiv
pop
mov
jge
mov
test
fnstsw
dec
icebp
dec
mov
and
pop
mov
push
xor
pop
mov
jnp
mov
enter
xchg
jle
inc
js
sahf
jno
or
mov
pop
in
jge
addr16
lods
ja
sar
gs
mov
pop
popa
stos
call
stos
mov
dec
icebp
ins
mov
mov
pop
pusha
pusha
jg
(bad)
pop
pop
jae
sub
jns
mov
enter
mov
pop
leave
scas
stos
inc
pop
lods
adc
adc
in
clc
inc
clc
movs
jle
pop
pusha
mov
mov
cdq
mov
inc
pop
lods
adc
pop
jb
pop
adc
push
mov
add
mov
int3
sub
imul
cwde
jb
mov
icebp
(bad)
gs
icebp
cs
pop
hlt
jmp
fldenv
mov
fdiv
push
mov
jo
mov
mov
mov
xor
push
xlat
xor
jge
pop
cmp
shl
inc
mov
dec
mov
mov
mov
dec
push
sar
pop
mov
fldcw
sbb
lds
mov
sar
out
mov
(bad)
adc
sbb
cwde
sbb
dec
mov
mov
leave
xchg
mov
dec
inc
cdq
test
pop
jno
pop
shr
fld
call
lds
mov
mov
sbb
call
sbb
mov
stos
popa
mov
add
pop
pop
test
ins
es
cmp
adc
xor
xchg
mov
xor
ins
js
sar
adc
xor
ins
js
cmps
add
and
outs
int3
cdq
out
dec
sbb
xor
push
xlat
mov
mov
jge
fisttp
jo
and
pop
and
ins
mov
jo
and
pop
icebp
ins
mov
data16
inc
jo
and
pop
and
mov
popa
mov
jno
out
mov
jl
dec
aad
mov
retf
ins
adc
jge
loope
inc
push
pop
test
popa
or
mov
jmp
pop
fs
shr
dec
pop
scas
mov
inc
cdq
mov
pop
lods
mov
shl
pop
imul
mov
mov
jge
pop
leave
pop
xchg
ret
shr
and
mov
mov
fnstcw
outs
dec
hlt
or
push
push
dec
push
xchg
fld
mov
mov
enter
data16
imul
jae
mov
out
lods
mov
nop
cmp
shr
mov
retf
movs
call
pop
mov
pop
aam
xchg
shl
imul
ret
ins
pop
sub
std
std
mov
cmps
push
fild
jle
les
das
or
nop
add
loopne
mov
add
pusha
movs
scas
ins
imul
dec
or
cmc
dec
in
fisttp
mov
int3
mov
je
call
mov
in
add
jo
mov
xor
jns
and
cmps
inc
adc
or
gs
mov
and
popf
add
daa
add
xor
inc
sti
lahf
add
jnp
(bad)
test
std
pushf
add
jno
das
js
or
imul
mul
fnstsw
call
(bad)
sar
push
test
push
retf
mov
test
bound
xor
sub
call
jb
push
movs
call
push
out
xor
je
jbe
push
in
ficomp
cwde
xor
imul
je
ficomp
inc
cmps
lea
bt
ret
daa
jb
inc
mov
div
jle
xchg
icebp
fdiv
mov
dec
pop
sbb
bound
pop
imul
mov
mov
pop
aad
outs
dec
mov
mov
pop
pop
jmp
hlt
sbb
dec
xchg
jb
add
icebp
xchg
cmc
repnz
fwait
je
shl
pop
addr16
icebp
inc
xor
ret
dec
jo
bswap
dec
jge
rcr
clc
sub
pop
pop
mov
fld
gs
jge
lock
(bad)
fld
mov
sbb
mov
enter
ja
mov
call
es
ror
mov
retf
hlt
sub
pop
jmp
cmp
lea
pop
jmp
shr
mov
mov
gs
mov
xchg
jge
jno
into
mov
movs
addr16
in
dec
movs
call
shr
mov
push
add
inc
hlt
call
xchg
pop
jge
and
test
pop
xor
mov
pop
imul
mov
test
or
movs
fwait
shl
cmp
mul
xchg
cmc
lahf
jne
adc
fwait
or
aaa
out
nop
or
xchg
mov
(bad)
inc
cwde
mov
xchg
cmp
xor
rol
xchg
and
mov
mov
push
xchg
ret
movs
xlat
push
xchg
xchg
adc
ins
dec
pop
movs
and
cmp
jne
or
jmp
addr16
dec
test
pop
int3
mov
movs
inc
xchg
dec
je
pop
jg
std
jb
repz
mov
push
popa
cdq
mov
data16
jmp
mov
test
and
pop
outs
jmp
dec
or
test
aaa
hlt
xchg
pop
dec
mov
aam
mov
mov
fdiv
mov
inc
pop
(bad)
pop
fs
mov
push
xor
mov
jl
mov
ret
mov
xor
inc
cmps
adc
not
push
lds
mov
xchg
mov
xchg
rol
js
outs
and
leave
push
mov
ror
jle
mov
adc
test
imul
mov
in
mov
xchg
in
pop
jl
pusha
gs
xchg
jge
and
push
jg
adc
std
test
movs
cdq
sbb
cmp
(bad)
pusha
movs
xchg
jb
mov
cmp
retf
je
pop
addr16
mov
mov
jmp
jge
pop
test
inc
ins
hlt
rcl
push
inc
or
mov
jg
(bad)
mov
test
pop
push
mov
inc
push
mov
xchg
mov
je
jns
ror
scas
push
xchg
inc
rol
(bad)
pop
hlt
adc
ja
retf
call
pop
stos
retf
js
mov
mov
movs
inc
fidiv
call
cmc
repnz
adc
movs
pop
fiadd
bound
mov
test
retf
sti
and
push
push
cwde
xchg
mov
adc
dec
(bad)
cdq
(bad)
dec
xchg
rcr
push
push
enter
sub
add
enter
daa
mov
mov
push
mov
or
inc
sti
scas
popa
pop
movs
popa
mov
inc
jb
cmps
pushf
push
jge
dec
mov
ins
out
add
push
xor
arpl
mov
mov
mov
lods
clc
xchg
adc
jg
mov
bound
mov
popa
ret
retf
xchg
imul
pop
pusha
inc
cmps
cmc
es
dec
hlt
add
jg
nop
shr
jp
dec
test
and
jp
mov
mov
jle
pop
leave
and
leave
pop
pop
pushf
jg
fcom
push
push
or
mov
push
mov
pop
sbb
out
hlt
pop
jae
dec
xchg
push
les
mov
fdiv
xchg
mov
inc
retf
std
ja
and
cmp
mov
pushf
push
mov
adc
imul
jo
dec
retf
movs
cdq
or
(bad)
cmp
fldenv
test
jbe
test
xchg
mov
fidiv
movs
cdq
jo
pop
mov
mov
shl
pop
in
xor
mov
push
mov
fcomp
pop
pop
stos
int3
stos
sub
xchg
daa
enter
pop
mov
in
mov
addr16
jnp
int
xchg
cmc
dec
shr
int
in
mov
addr16
call
outs
or
popa
mov
cs
jbe
iret
dec
(bad)
(bad)
mov
push
icebp
dec
pusha
pop
lds
jbe
lock
pusha
cmp
mov
jl
sar
(bad)
or
popf
dec
out
dec
movs
imul
push
movs
pop
outs
std
pop
gs
dec
popa
call
mov
call
lods
push
jg
ret
addr16
jle
(bad)
adc
scas
icebp
ins
mov
mov
mov
xchg
cmps
scas
lock
mov
jb
pop
lods
cwde
cmp
test
lods
cdq
or
imul
push
xchg
(bad)
dec
add
push
pop
pop
outs
lea
mov
test
outs
adc
adc
jg
ja
mov
mov
(bad)
out
dec
lds
lds
gs
pop
mov
dec
mov
lds
lds
pop
shl
outs
adc
adc
jg
push
test
sbb
dec
mov
call
movs
ret
movs
cwde
push
and
cmovp
mov
push
dec
imul
jne
mov
shl
pop
lods
mov
mov
js
movs
iret
in
dec
mov
mov
xor
pop
inc
dec
clc
popf
jge
pop
arpl
pop
shl
in
mov
pop
jno
mov
mov
dec
jle
pop
movs
retf
mov
sahf
cvtps2pi
fstp
addr16
retf
cmp
enter
mov
retf
std
ja
mov
test
pop
sub
xor
hlt
mov
jns
dec
addr16
int
loope
pop
ins
not
dec
hlt
push
arpl
pop
retf
stos
xchg
cdq
test
je
retf
fdivr
pop
retf
inc
ja
or
dec
jp
pop
mov
xor
cdq
mov
not
js
ret
ins
pop
cwde
mov
fwait
sar
pop
fst
mov
mov
ret
movs
fwait
nop
jne
gs
inc
jge
mov
fwait
or
cmps
pop
mov
(bad)
adc
cmp
mov
and
push
mov
hlt
mov
arpl
pop
stos
or
mov
xchg
sub
mov
ss
movs
fdivr
sbb
dec
and
sbb
push
cmc
pop
xor
popf
fwait
sbb
clc
pop
outs
sbb
bound
rcr
mov
sbb
dec
and
mov
or
sbb
dec
and
lods
fwait
sbb
mov
movs
mov
sbb
dec
and
fst
fwait
sbb
mov
cmp
dec
call
mov
mov
(bad)
test
mov
test
inc
js
int3
ins
sahf
inc
pop
pop
call
popf
pop
xchg
jmp
mov
sbb
call
dec
push
mov
or
mov
test
push
xchg
cmp
mov
jae
inc
jl
enter
xor
mov
inc
cmp
push
rcl
dec
mov
sbb
call
ins
mov
pop
dec
pusha
mov
adc
mov
and
mov
or
mov
arpl
pop
jecxz
ins
mov
dec
cmp
xor
dec
imul
sub
pop
nop
iret
or
lea
inc
mov
div
pop
gs
test
mov
mov
scas
cld
(bad)
mov
pop
xor
push
inc
popa
mov
in
pop
data16
sbb
add
pusha
mov
pop
sbb
pop
mov
mov
cmps
xchg
shld
dec
xchg
dec
hlt
xchg
xchg
jno
pop
mov
inc
jl
pop
push
xchg
and
mov
sbb
push
sbb
xchg
dec
fbld
mov
test
mov
jne
mov
hlt
out
xchg
lds
mov
cmps
pop
jge
fcomp
adc
gs
imul
shr
push
pop
hlt
loop
inc
std
sub
pop
(bad)
icebp
jne
xchg
ror
ret
ins
pop
jl
mov
cmp
xchg
push
pop
retf
mov
mov
bound
fnstsw
pop
mov
into
fwait
shl
mov
enter
ret
movs
cdq
jo
dec
mov
cld
mov
mov
jno
cdq
mov
lock
jl
xchg
mov
hlt
adc
inc
(bad)
std
bound
fisttp
cmps
call
mov
push
mov
mov
cmp
es
mov
cwde
sub
cmp
add
aas
sbb
jb
cdq
mov
jae
cdq
sub
inc
sub
and
jecxz
and
scas
adc
cwde
imul
pop
jb
cdq
arpl
cdq
pop
jae
cwde
sub
fsubr
mov
adc
sub
sbb
jb
cdq
mov
dec
cdq
scas
jae
cdq
stos
jae
cwde
sub
or
sbb
jae
cdq
sub
enter
sub
mov
cwde
sub
into
or
imul
xor
adc
or
fwait
cmp
dec
call
push
arpl
fwait
push
mov
(bad)
dec
xchg
cdq
iret
dec
sbb
jae
jb
cmps
mov
fld
mov
xchg
mov
imul
mov
jne
adc
jl
jo
cwde
xchg
mov
cmps
mov
(bad)
mov
cwde
sub
sti
es
nop
dec
push
inc
jne
adc
jl
jo
cwde
xchg
jb
cmps
mov
frstor
mov
cwde
sub
dec
daa
fwait
cwde
dec
push
inc
jne
adc
jl
jo
cwde
xchg
(bad)
jb
cmps
mov
fnstsw
mov
(bad)
fwait
mov
ins
adc
jl
jae
cwde
mov
pop
in
push
mov
sub
xor
jnp
jb
dec
xchg
(bad)
xlat
(bad)
jl
cmp
mov
sub
mov
sub
pop
aas
cmps
mov
sub
sbb
mov
rol
outs
aam
or
pop
cmp
jecxz
dec
sbb
push
movs
stos
dec
jmp
out
aad
inc
push
and
mov
dec
loopne
addr16
mov
shl
pop
stos
in
mov
push
stos
xor
push
lahf
xchg
lods
push
clc
in
jge
pop
arpl
pop
cmc
mov
dec
mov
xchg
shl
xchg
xor
or
jns
mov
rcl
push
cmp
imul
ins
mov
sar
mov
xor
jb
addr16
jle
aam
(bad)
dec
rol
div
movs
addr16
mov
scas
rcr
mov
adc
jo
dec
mov
cmp
push
dec
nop
ss
fld
inc
hlt
pop
xchg
add
inc
mov
lock
jnp
xchg
mov
or
leave
push
push
mov
mov
add
or
mov
gs
dec
retf
std
jne
mov
pop
push
jno
and
addr16
mov
sbb
in
dec
data16
dec
movs
fwait
sbb
mov
fisub
pop
jge
push
mov
mov
je
mov
into
xor
push
fcom
cmps
mov
push
(bad)
stos
fst
cld
std
adc
cmp
mov
adc
or
out
mov
imul
jmp
and
xlat
push
or
in
mov
push
add
inc
push
push
int3
(bad)
or
(bad)
not
fld
into
js
(bad)
dec
test
xlat
push
xchg
fwait
pop
or
inc
dec
test
mov
inc
daa
in
xchg
pop
fs
xor
adc
pop
xor
pop
aad
mov
and
imul
jne
mov
shl
pop
lods
push
and
xchg
cmp
inc
mov
pushf
hlt
shl
add
add
mov
scas
cld
movs
xchg
mov
movs
das
lock
mov
mov
scas
xchg
daa
pop
jle
inc
cmps
in
xchg
dec
cld
sub
xchg
or
div
mov
xlat
scas
ror
pop
gs
dec
push
xchg
jne
add
sub
xor
jle
pop
or
in
and
jg
push
es
inc
cld
xor
pop
lds
mov
cmp
sub
stc
jno
xor
fst
mov
aad
push
pop
xchg
push
pop
stc
sahf
outs
dec
hlt
xchg
sbb
imul
push
mov
retf
mov
fmul
pop
hlt
dec
data16
mov
xchg
sbb
sub
dec
pop
fld
cmp
jbe
mov
scas
sub
mov
mov
pop
cmps
call
xchg
call
adc
pop
cmp
fldenv
mov
sahf
mov
cli
addr16
mov
jl
inc
mov
pop
pop
sub
mov
mov
dec
mul
dec
jmp
cmps
adc
cmps
inc
fist
fs
dec
jmp
dec
jmp
pop
or
mov
dec
adc
jecxz
xchg
test
movs
inc
push
std
and
jmp
mov
mov
dec
(bad)
ja
popf
or
mov
sbb
dec
movs
jbe
jmp
jg
push
mov
adc
sahf
and
iret
leave
dec
push
loope
inc
inc
jb
mov
dec
loope
movs
dec
call
test
test
cmp
dec
jmp
aad
mov
ja
xchg
or
jbe
jmp
repz
out
repz
(bad)
repz
neg
movs
ror
fbld
jno
cmp
inc
ror
lock
jmp
dec
jmp
jmp
mov
dec
adc
jae
mov
mov
pusha
inc
jmp
mov
mov
outs
cld
xor
dec
push
fs
mov
inc
call
mov
dec
jmp
xor
cld
ret
jmp
pop
jmp
adc
mov
out
pop
jmp
push
sub
in
fs
shr
hlt
out
pop
inc
dec
stos
mov
push
push
mov
or
pop
dec
shl
pop
mov
sbb
cld
loop
push
cmps
dec
xchg
retf
xchg
nop
cld
mov
inc
mov
inc
add
ret
mov
pop
fwait
pop
jmp
push
retf
inc
dec
(bad)
movs
jo
into
jl
shl
push
inc
lahf
jecxz
sbb
out
xor
call
mov
dec
loop
inc
lahf
arpl
inc
call
mov
loope
push
or
test
cmp
pop
push
jmp
dec
jmp
dec
jmp
dec
jmp
dec
(bad)
ja
loop
repz
les
ins
sub
mov
dec
jmp
imul
and
mov
pop
dec
retf
or
ret
daa
pop
dec
fist
dec
shl
mov
cmp
bnd
jmp
lock
dec
mul
dec
jmp
inc
push
mov
jg
adc
jle
push
add
xchg
js
dec
dec
mov
dec
jmp
or
in
xchg
cld
mov
popf
fild
mov
xor
and
mov
inc
inc
jb
mov
test
jmp
addr16
or
dec
jle
nop
push
div
pop
dec
sti
push
inc
fucomip
sub
mov
mov
ja
pop
jmp
push
mov
dec
mov
or
inc
(bad)
cli
jmp
jg
push
mov
adc
icebp
mov
dec
mov
aam
ds
inc
test
jmp
or
dec
jmp
xchg
(bad)
(bad)
movs
jo
pop
in
xchg
cld
mov
mov
in
(bad)
push
add
int3
fcom
out
inc
ja
movs
inc
dec
jmp
dec
jmp
pop
jmp
xchg
out
gs
stc
mov
outs
in
dec
inc
in
mov
xchg
push
push
inc
inc
jmp
cmp
movs
idiv
dec
stos
dec
adc
sub
xchg
dec
push
loope
inc
inc
jb
mov
lods
jmp
add
stc
sbb
pushf
add
pushfw
or
inc
mov
daa
fwait
pop
jmp
hlt
addr16
(bad)
outs
in
dec
inc
in
mov
xchg
push
push
inc
pop
jmp
cmp
movs
idiv
sbb
push
jmp
dec
or
pop
(bad)
mov
mov
daa
cdq
pop
jmp
in
or
and
imul
dec
jmp
out
and
mov
dec
out
ror
dec
(bad)
sbb
pushf
jmp
dec
jmp
lahf
ret
xchg
test
movs
inc
inc
sbb
mov
adc
movs
mov
xchg
cld
mov
mov
push
fs
mov
pop
cdq
pop
jmp
mov
jmp
inc
jecxz
adc
xchg
push
dec
mov
xchg
cld
mov
or
and
imul
dec
jmp
out
and
mov
dec
out
rcl
retf
add
sub
xchg
jmp
push
pop
mov
pop
or
adc
adc
cmps
inc
jmp
call
dec
jmp
out
aad
add
dec
imul
jae
imul
jne
mov
shl
movs
mov
scas
hlt
rcl
xchg
adc
cdq
cli
lahf
dec
clc
and
mov
sbb
or
call
pop
int
and
mov
fdiv
pop
data16
mov
movs
xchg
aam
push
mov
push
fs
mov
sub
jns
pop
cdq
pop
add
inc
push
cld
add
pop
movs
addr16
in
fldenv
push
ret
sub
xchg
in
xor
dec
mov
or
cmp
test
dec
mov
rol
xchg
xchg
mov
and
call
push
sub
icebp
fisub
jo
mov
sub
cmp
std
push
imul
mov
adc
fsubr
cdq
sub
(bad)
pop
mov
test
(bad)
cmps
cdq
sbb
sbb
xlat
mov
leave
jno
dec
ret
movs
cdq
jo
pop
pop
imul
fwait
cmp
xor
fwait
js
and
xchg
dec
pop
stos
inc
jns
xchg
js
cld
aas
push
dec
mov
cmp
call
pushf
cmp
mov
push
and
sub
int3
or
and
aas
cmps
sbb
push
and
(bad)
ja
dec
ins
mov
sbb
push
and
sub
push
adc
sbb
test
movs
sar
sub
sub
push
das
push
and
aas
mov
sbb
add
jle
sti
or
es
daa
adc
ret
outs
sahf
push
sub
in
clc
push
and
sub
sbb
aas
gs
aad
(bad)
mov
and
fisubr
push
and
mov
fwait
cs
and
jle
cld
or
mov
xchg
cmovge
jns
fiadd
push
pusha
sbb
dec
les
sub
and
xor
xchg
sbb
push
and
push
ins
out
mov
dec
std
(bad)
sbb
pop
retf
gs
in
cwde
push
hlt
and
test
mov
in
clc
push
or
sub
cmp
aad
(bad)
mov
and
sub
retf
and
loope
or
add
push
sbb
push
and
inc
mov
push
sub
retf
add
call
push
sub
or
sub
dec
xor
jl
pop
cmp
push
les
or
aad
(bad)
xchg
icebp
int3
push
(bad)
cdq
ss
xchg
mov
into
dec
jmp
cs
arpl
aad
(bad)
stc
aas
push
sub
pop
push
hlt
push
and
bound
(bad)
stos
fbstp
es
or
imul
add
dec
push
lock
inc
in
ret
sub
sub
push
mov
dec
and
sub
mov
sti
addr16
mov
inc
and
sub
or
ror
sbb
push
and
cmp
mov
sbb
push
and
sub
in
enter
aad
shl
repnz
or
(bad)
add
jle
std
or
mov
inc
and
sub
or
ror
sbb
push
and
cmp
cmp
add
sbb
sahf
cli
sbb
ss
in
inc
sub
push
in
ins
xor
shl
(bad)
fcmovne
jnp
push
xor
jmp
mov
addr16
jbe
jo
dec
popa
mov
xor
jle
mov
jge
mov
leave
ins
arpl
in
pop
aad
push
pop
pop
scas
je
ja
js
movs
call
pop
mov
sbb
xchg
nop
xchg
jge
cwde
mov
test
pusha
mov
outs
sbb
inc
inc
xchg
inc
jmp
leave
inc
mov
shr
jns
mov
addr16
jne
inc
inc
hlt
fwait
xchg
dec
dec
mov
mov
call
pop
gs
dec
mov
xchg
xchg
rcl
(bad)
pop
sti
aad
fcomp
cs
outs
inc
jo
fmul
mov
in
pop
gs
mov
ret
push
hlt
adc
pop
mov
push
pop
hlt
mov
mov
mov
mov
pop
adc
jg
mov
jl
mov
les
not
jo
lods
es
inc
cld
stos
or
aad
inc
mov
mov
cmc
outs
pop
hlt
gs
sub
enter
pop
sar
mov
mov
mov
jl
pop
test
mov
push
pop
pop
dec
cmps
call
mov
jle
mov
fld
dec
fs
add
xchg
adc
fwait
or
pop
adc
fisttp
call
mov
xchg
nop
pushf
nop
fnstcw
xchg
mov
scas
pop
btc
pop
xor
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
call
scas
lods
pop
xor
mov
dec
xor
pop
push
xchg
scas
scas
pop
xor
pop
jbe
scas
movs
sub
xor
pop
pop
xchg
scas
lods
pop
xor
cmps
outs
and
out
pop
push
xchg
scas
scas
pop
xor
pop
jbe
scas
movs
sub
xor
pop
pop
pop
fstp
call
sbb
clc
cmp
call
sub
out
push
(bad)
je
pop
push
and
repnz
scas
icebp
xor
push
maskmovq
div
push
mov
into
pop
mov
lods
imul
xor
scas
sahf
daa
pop
fisttp
imul
sub
push
cmps
mov
setge
push
and
ret
sbb
les
pop
shl
pop
lods
xor
adc
jnp
lock
or
jnp
sub
icebp
push
mov
and
mov
movs
test
xchg
ins
pop
test
mov
dec
(bad)
cwde
pop
movs
rcl
pop
gs
dec
mov
dec
cdq
fmul
pop
fs
adc
jb
shr
mov
hlt
mov
jg
add
jg
mov
xchg
inc
jbe
in
mov
imul
shr
fdiv
neg
jo
shl
pushf
jg
fdivr
loopne
inc
sbb
mov
out
stos
xchg
xchg
push
into
mov
xor
cmp
cmp
mov
pop
sbb
ror
ins
pop
fsubr
mov
cmps
fwait
sbb
push
aaa
pop
fistp
adc
dec
cld
rol
movs
scas
xor
loopne
cdq
sbb
fxch
dec
shr
jmp
jo
pop
nop
push
sbb
gs
cmps
addr16
or
inc
inc
mov
shl
mov
dec
ficom
mov
mov
and
(bad)
inc
mov
xchg
sub
pop
and
mov
cmp
mov
cdq
loopne
std
and
sub
push
ds
xor
adc
rcl
mov
movs
call
pop
xor
je
pop
lahf
ins
push
addr16
jl
pop
sub
pop
mov
fs
cmovp
mov
icebp
addr16
mov
les
dec
mov
mov
cmc
pop
and
pop
nop
jg
dec
arpl
bound
div
call
mov
stos
inc
inc
push
xchg
ins
ds
test
adc
mov
mov
cmp
xchg
add
xchg
into
clc
pop
test
mov
and
adc
jb
push
mov
shl
imul
mov
rol
pushf
jo
gs
mov
ins
mov
(bad)
stc
jge
pop
imul
mov
sar
(bad)
data16
movs
fwait
or
rcr
jno
hlt
addr16
mov
cmps
pop
xchg
adc
mov
xchg
push
stc
test
hlt
pop
mov
mov
icebp
mov
mov
popa
lock
jns
mov
jae
scas
fcom
pop
adc
je
pop
gs
add
addr16
mov
lea
std
jne
push
dec
xchg
push
pop
in
aas
push
hlt
sbb
pop
xchg
cs
hlt
inc
jno
dec
ret
movs
call
inc
mov
int
xchg
shr
push
cmp
cmp
in
mov
cmps
call
cdq
jge
stc
push
ds
test
sub
mov
sahf
pop
aad
xchg
stos
sub
mov
mov
outs
sub
inc
xor
sar
add
aam
in
out
adc
je
and
call
xor
xor
and
add
xor
in
int3
mov
(bad)
(bad)
adc
jno
adc
fdivr
loope
and
inc
cmp
adc
add
ror
neg
jecxz
dec
aas
int3
fist
aas
inc
adc
(bad)
cmc
out
leave
aaa
push
sub
add
int
(bad)
in
das
sbb
hlt
mov
shl
adc
lds
xor
xor
push
leave
push
in
cli
icebp
retf
idiv
and
adc
(bad)
rcl
sti
mov
sbb
lods
cmp
add
mov
(bad)
pop
adc
push
sbb
loop
shl
psubusw
sti
mov
mov
inc
sbb
retf
fistp
ror
btr
and
adc
aaa
pop
xchg
mov
adc
xor
(bad)
sbb
sbb
hlt
ins
mov
and
adc
mov
mov
and
adc
mov
mov
and
adc
push
fdivr
or
iret
sub
push
sbb
mov
jbe
out
ins
cmp
sti
dec
add
cmp
in
or
in
out
jecxz
sub
jmp
add
cmp
dec
cmp
in
retf
fist
aaa
dec
sub
icebp
daa
movs
retf
sbb
cmp
mov
cmp
adc
sub
adc
sub
cmp
out
xor
add
icebp
shl
or
fmul
das
sbb
hlt
adc
or
xor
sub
adc
jp
cmp
add
js
dec
and
jae
and
jae
test
xor
or
jbe
jp
cmp
add
cmp
mov
aas
or
and
sar
fwait
pop
ret
ss
cmp
out
cmp
xor
adc
cmp
jmp
xor
mov
addr16
push
int
sbb
mov
xor
es
inc
loope
pop
sub
sbb
ss
aam
jecxz
ret
les
cmp
lods
or
or
xor
out
mov
cmp
or
sub
sbb
adc
(bad)
std
das
repz
xor
stc
adc
sub
mov
xchg
xchg
and
sub
mov
sbb
retf
scas
pop
nop
and
mov
cmp
cmc
and
retf
mov
jg
pop
push
push
and
jg
pop
gs
enter
pop
fist
adc
pop
xor
jle
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
addr16
pop
nop
out
and
mov
dec
bound
div
adc
hlt
(bad)
xchg
arpl
adc
pop
(bad)
mov
and
xor
xchg
inc
dec
stos
mov
jnp
inc
pop
xor
fnstcw
rcl
jge
pop
lods
jp
pop
hlt
daa
mov
cdq
stos
ror
pop
gs
dec
mov
lock
mov
sbb
mov
and
addr16
mov
pusha
xor
popa
xchg
rcl
mov
jno
inc
pusha
jbe
pop
in
xor
pop
jle
pop
retf
mov
in
pop
push
shr
(bad)
sbb
mov
jle
sbb
xchg
dec
mov
mov
mov
retf
mov
fwait
or
iret
test
dec
push
jge
jg
idiv
pop
test
jnp
pop
(bad)
lods
fmulp
data16
cdq
cmp
mov
ss
sub
xor
mov
ror
mov
in
cmps
pop
retf
inc
ja
jns
and
lea
cdq
sbb
pusha
mov
(bad)
pop
lea
arpl
mov
ret
lods
xchg
jl
and
jp
sti
sub
dec
pop
test
test
test
ins
leave
daa
xor
test
lea
test
mov
jnp
xchg
rcr
cmp
mov
mov
push
xor
xor
sub
cmp
push
xor
sub
lds
sub
and
ins
cdq
pop
xor
mov
ins
and
sub
and
clc
and
jo
das
sub
out
mov
lds
cmp
les
loop
lds
nop
sub
and
sub
test
mov
shl
test
test
in
les
cmp
pop
xor
mov
fs
sub
dec
xor
lea
jb
lock
sub
fdiv
nop
mov
cmp
and
push
mov
sub
sbb
sub
loope
cmp
xor
cmp
sub
sar
stos
push
mov
adc
call
pop
dec
and
outs
jb
lock
xor
dec
push
movs
mov
imul
adc
sbb
mov
sahf
cmp
cli
ins
jg
pop
inc
jo
add
and
dec
jg
cmp
and
dec
ins
and
stos
aaa
ins
pushf
dec
sbb
outs
pushf
dec
xor
dec
pop
pushf
sub
das
lahf
or
aas
lahf
dec
test
and
hlt
lock
jg
scas
ins
xchg
dec
mov
lahf
jns
ins
and
mov
inc
pop
or
aas
outs
jp
bound
cmc
dec
imul
sti
je
add
push
dec
jg
jbe
jo
dec
jge
dec
pop
popa
mov
mov
jnp
pop
leave
ins
test
(bad)
jb
mov
ss
cwde
mov
push
ds
push
add
adc
addr16
pop
stos
pop
and
mov
jg
inc
mov
fisttp
nop
repz
inc
mov
xchg
dec
hlt
cmp
stc
adc
xchg
int
adc
sbb
or
sbb
jo
cs
mov
shl
push
xchg
mov
shl
mov
sub
pop
add
sbb
retf
std
ja
jne
aas
jg
mov
or
dec
push
jge
pop
pop
imul
mov
inc
sub
cli
rcr
stc
test
pop
xchg
cmp
mov
xchg
js
sahf
leave
sbb
lea
mov
cmp
imul
push
jle
mov
mov
fdiv
stos
mov
dec
movs
fwait
sbb
dec
hlt
sub
pop
rcl
call
jge
xchg
movs
outs
mov
inc
push
xchg
push
out
mov
sbb
jb
cmp
cmp
sub
imul
push
jg
jl
stos
mov
ins
and
xlat
push
pop
adc
jb
jp
xlat
cmp
data16
data16
ss
lods
ror
jb
aad
cmps
retf
cmp
pop
jp
xlat
cmp
push
xchg
jbe
lods
and
scas
mov
cmps
jp
out
scas
inc
cmps
retf
or
sbb
push
nop
pop
mov
or
mov
cmp
or
mov
pop
mov
or
mov
cmp
jo
ss
ja
cmp
and
test
sub
imul
mov
imul
jnp
mov
in
cmps
popf
pop
test
cmc
jg
sub
(bad)
fwait
cmp
jne
or
jmp
popa
mov
(bad)
jo
sub
jl
dec
imul
arpl
jl
movs
xchg
inc
inc
pop
stos
jl
xchg
mov
cmp
pop
mov
jae
pop
lds
fs
js
(bad)
pop
test
xchg
dec
in
stc
pushf
inc
addr16
or
test
or
call
xchg
js
cmps
shr
pop
data16
mov
inc
jge
pop
imul
mov
mov
lods
(bad)
and
push
dec
out
data16
push
xchg
adc
add
jmp
popf
jbe
mov
out
shl
pop
adc
addr16
push
ret
ins
pop
test
sub
rcr
inc
shl
push
xchg
fst
mov
faddp
mov
jo
retf
or
retf
xchg
dec
dec
push
hlt
lods
xchg
mov
or
(bad)
ss
hlt
dec
and
imul
retf
inc
jbe
or
mov
and
pop
pop
fwait
or
in
push
xchg
in
mov
sbb
mov
and
nop
mov
sbb
jne
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
or
gs
or
push
inc
and
les
sahf
stc
mov
loopne
ja
or
jno
or
sub
(bad)
mov
cmps
add
(bad)
and
enter
gs
das
jg
adc
popa
jno
or
or
and
fidivr
cdq
mov
sbb
hlt
call
shl
and
or
lds
dec
push
adc
bound
mov
push
aad
dec
push
jo
jae
push
sbb
rcr
or
int
dec
rcr
lods
jno
int
inc
ficomp
hlt
call
je
fwait
xor
loop
movs
stos
inc
je
pop
gs
pop
gs
pop
imul
mov
mov
cmps
pop
loope
jne
pop
outs
jns
gs
dec
add
and
or
in
mov
rcl
pusha
mov
int
jle
mov
mov
test
adc
or
ins
dec
pop
test
gs
mov
inc
cmps
jg
movs
leave
mov
pop
mov
fistp
pop
addr16
cmc
cmps
imul
xor
mov
cwde
jle
lods
jg
xchg
mov
sbb
xchg
mov
cmp
mov
xor
sbb
mov
jno
data16
std
ja
mov
mov
shl
mov
push
mov
shr
js
xchg
enter
push
xchg
fcom
dec
mov
cmps
pop
loope
jne
(bad)
mov
movs
cdq
nop
xor
js
xchg
adc
push
jae
sub
shl
stos
addr16
push
loope
sbb
push
mov
fwait
jb
pop
leave
add
movs
pop
inc
mov
ins
pop
pop
leave
adc
std
into
movs
inc
cld
stos
or
lock
out
dec
mov
xchg
sub
push
sbb
gs
int
cmp
sub
mov
xchg
popa
iret
pop
push
ret
sti
sub
out
cmc
retf
lds
lods
nop
ret
xlat
out
mov
neg
jns
mov
jecxz
fcomi
(bad)
js
bound
mov
(bad)
xchg
push
test
arpl
test
in
push
xchg
in
push
xchg
in
push
xchg
fnstsw
xchg
in
push
xchg
loope
push
nop
sub
cmps
(bad)
out
push
nop
sub
imul
jns
lds
sub
aad
jns
inc
repnz
lds
pop
(bad)
jbe
arpl
jp
and
sub
mov
arpl
loop
cmp
sub
mov
arpl
jb
xor
sub
add
jge
mov
arpl
and
and
imul
add
loop
and
sub
stos
mov
arpl
cmp
jae
and
sub
mov
arpl
loop
and
mov
(bad)
leave
loop
cmp
jge
mov
arpl
bound
and
fnclex
scas
adc
cmp
ins
jp
int
cmp
ret
sub
or
popa
lds
and
sub
aas
sub
mov
bound
cmp
push
call
in
sub
popa
(bad)
mov
mov
out
stos
dec
out
xchg
jl
repz
js
(bad)
xchg
inc
jb
inc
(bad)
iret
mov
jmp
push
(bad)
xor
inc
rol
inc
rol
jle
or
rol
inc
rol
inc
rol
mov
dec
mov
xor
mov
cs
sub
jbe
and
loop
sub
pop
das
aad
cmp
sub
mov
arpl
and
and
sub
mov
arpl
push
and
sub
mov
jmp
ins
push
fldcw
cmp
sub
mov
arpl
and
xor
sub
mov
repz
adc
inc
js
out
adc
jge
shr
jge
mov
arpl
jp
adc
jns
js
jecxz
adc
cmp
inc
sub
mov
arpl
push
cmp
shr
sub
idiv
inc
sub
mov
arpl
push
and
sub
mov
pusha
jo
rol
bound
sub
sub
shr
or
jns
mov
jo
sub
popf
jb
and
bound
ret
mov
pusha
ins
sub
add
jae
shl
shl
add
and
cmps
popf
fbld
popa
arpl
shl
jl
mov
cs
aad
inc
std
add
popf
mov
bound
jne
jb
imul
mov
jp
sub
mov
sub
aas
rol
xor
bound
(bad)
xchg
es
cmp
jg
jae
adc
mov
ret
scas
push
les
mov
gs
jl
jae
mov
jb
add
jbe
out
aam
mov
ret
cmps
data16
jbe
mov
xchg
(bad)
aam
aam
aas
ret
jp
push
fwait
xor
imul
cmps
pop
loope
push
pop
pop
outs
test
jg
dec
mov
movs
pop
mov
and
js
movs
xor
pop
test
imul
addr16
mov
movs
cdq
mov
icebp
lahf
pop
and
mov
or
pop
imul
lea
jl
xchg
out
imul
or
mov
gs
popf
test
popf
adc
addr16
mov
xchg
test
nop
test
imul
mov
sti
and
jbe
stos
push
mov
cs
pop
data16
inc
ja
mov
ret
lea
push
and
shl
retf
or
mov
sub
leave
mov
adc
scas
dec
into
mov
addr16
jns
in
ins
hlt
pause
xchg
aaa
xor
sub
dec
leave
adc
arpl
mov
jae
movs
ret
movs
fwait
pop
push
mov
cmc
(bad)
repnz
pop
mov
sbb
leave
sub
cmps
push
ins
hlt
add
repnz
retf
ins
pop
push
outs
aam
push
(bad)
aad
sbb
xchg
addr16
sar
mov
lea
sbb
setne
mov
arpl
mov
xchg
dec
mov
mov
in
pushf
pop
in
push
push
xor
ds
cld
cmc
sahf
in
stc
(bad)
mov
ror
sbb
xchg
out
mov
mov
ror
scas
cld
(bad)
lods
fsubr
int
xchg
inc
cld
mov
or
add
mov
ror
mov
jle
sbb
fs
ja
dec
sbb
jg
cmovns
mov
test
sub
pop
pop
outs
loope
gs
dec
icebp
push
pop
pop
mov
jge
xor
inc
mov
mov
mov
addr16
aam
lea
mov
(bad)
aad
sub
or
mov
mov
outs
lods
int3
retf
xor
imul
lea
sbb
pushf
addr16
mov
mov
sbb
data16
inc
jne
adc
in
xchg
dec
inc
jo
gs
gs
fs
ror
in
mov
shl
mov
stos
jne
retf
mov
xchg
pop
xor
inc
push
mov
mov
mov
imul
retf
mov
imul
inc
leave
in
dec
xor
or
dec
inc
push
mov
sahf
shl
push
shr
aad
hlt
std
cwde
sub
std
jne
aad
movs
xchg
adc
cwde
or
adc
xchg
sbb
mov
stos
neg
xchg
or
cmp
mov
sti
fwait
stos
push
fmul
cmps
call
mov
mov
leave
jns
xchg
adc
fwait
or
aam
xchg
js
call
push
popf
jl
arpl
mov
inc
jnp
out
in
adc
bnd
sti
out
mov
inc
jnp
out
out
int
sbb
push
or
in
sbb
add
jns
out
push
test
out
sbb
rcr
adc
sahf
test
in
dec
sub
adc
sti
out
into
outs
dec
jnp
sbb
sbb
bound
out
sbb
out
add
or
xor
jnp
xchg
dec
jnp
sbb
sbb
push
out
sbb
out
add
or
xor
jnp
out
inc
pop
or
adc
mov
int
js
sbb
mov
sar
rcr
dec
adc
or
dec
repz
cmp
lods
(bad)
jo
jnp
mov
dec
jnp
sbb
sbb
jb
out
sbb
out
add
or
xor
jnp
cmp
in
out
sbb
push
clc
sub
in
fstp
push
out
and
aaa
repz
sti
mov
lods
loopne
sbb
test
lock
pop
aaa
or
mov
push
test
mov
jne
mov
shl
xchg
mov
test
xchg
shr
xor
fs
in
das
cmp
test
js
call
stos
and
mov
jns
mov
dec
mov
pop
pop
imul
data16
sti
or
pop
(bad)
cmc
out
(bad)
fdivr
pop
data16
inc
jle
push
hlt
addr16
adc
dec
mov
jg
mov
jp
test
fadd
pop
data16
std
jbe
in
add
sbb
imul
mov
mov
mov
shl
popw
cmp
jne
icebp
in
ds
rcl
sbb
imul
mov
adc
outs
sub
mov
gs
dec
xchg
pop
pop
aad
mov
mov
xchg
mov
jno
sub
jg
push
xchg
mov
sbb
mov
add
sbb
test
shl
mov
imul
jae
pop
retf
sub
xlat
mov
push
jno
enter
sub
mov
or
sbb
addr16
leave
out
push
dec
movs
jns
mov
add
pop
dec
fwait
or
inc
fimul
sbb
imul
(bad)
pop
jge
mov
(bad)
push
mov
fwait
nop
cmp
xchg
ret
les
icebp
(bad)
or
pop
dec
mov
lahf
push
or
mov
or
aad
push
xlat
mov
popf
sti
lds
repz
dec
mov
xchg
push
cdq
sti
pop
mov
mov
mov
pop
xchg
push
adc
push
or
popf
fcmovnb
pop
mov
(bad)
sub
pop
cmps
mov
dec
inc
push
test
mov
xchg
push
leave
sti
pop
mov
pop
or
or
pop
mov
push
dec
mov
adc
sbb
push
nop
mov
fild
or
(bad)
sti
sti
pop
mov
sti
pop
mov
xlat
outs
sub
pop
into
(bad)
mov
fucomip
sahf
push
xlat
movaps
pop
(bad)
(bad)
mov
cli
pop
mov
xlat
pop
sub
pop
stos
fistp
pop
dec
movs
imul
jmp
sub
pop
inc
popf
fwait
sti
pop
mov
dec
pop
sub
pop
(bad)
mov
or
jmp
sub
pop
push
sahf
pop
mov
mov
popf
pop
mov
and
pop
(bad)
popf
fwait
mov
mov
push
cmps
call
mov
jle
(bad)
jecxz
(bad)
dec
inc
jp
pop
retf
ins
mov
xchg
or
inc
xchg
retf
xchg
cmp
push
test
dec
mov
xchg
movs
inc
cld
xchg
pop
cmc
mov
dec
pop
stos
lock
xchg
mov
dec
push
or
sar
shl
fiadd
cmps
stos
not
jb
dec
mov
lahf
pushf
gs
dec
xchg
bound
push
sub
mov
lea
test
mov
mov
arpl
dec
cmps
imul
mov
retf
std
ja
mov
mov
retf
mov
and
sbb
sar
pop
gs
popf
pop
addr16
add
sti
pop
pop
dec
xchg
xchg
push
push
cmp
mov
popa
ss
mov
push
(bad)
nop
add
movs
mov
mov
push
mov
jle
mov
jbe
hlt
pop
mov
popf
pop
imul
repnz
retf
rcr
add
mov
scas
fsub
icebp
pop
das
lea
pop
call
dec
xchg
inc
pop
test
retf
retf
xchg
js
movs
cdq
jo
dec
retf
xchg
push
ret
je
bound
pop
test
scas
inc
dec
cs
je
movs
in
mov
fnsave
jbe
fnsave
mov
mov
inc
clc
mov
fs
mov
inc
clc
mov
pusha
mov
mov
inc
clc
ret
mov
mov
inc
clc
shl
pusha
mov
test
and
xchg
and
xchg
xor
mov
mov
int3
mov
xchg
ja
dec
xor
mov
outs
cmp
mov
das
mov
je
loopne
pusha
scas
mov
shl
xor
mov
add
xor
pusha
es
xchg
ja
test
and
jbe
ja
test
inc
scas
mov
and
shl
xor
mov
mov
popa
xchg
and
xchg
xor
mov
shl
les
je
xor
shl
mov
xor
mov
and
xchg
shl
mov
xchg
ja
lods
and
add
cmp
popa
cmps
je
and
shl
mov
xchg
ja
lods
and
add
sbb
lods
stos
dec
xor
(bad)
sub
xor
pusha
xchg
adc
xchg
ja
ins
adc
push
cmps
mov
ins
in
movs
fimul
add
daa
popa
mov
and
fs
je
dec
and
nop
mov
cmc
je
dec
daa
popa
add
lahf
pop
das
xchg
mov
movs
call
mov
pop
jl
dec
mov
ins
push
mov
jg
add
dec
pop
test
xchg
sar
pop
mov
mov
addr16
xchg
fucomi
push
mov
mov
out
popf
mov
dec
jle
pop
movs
shl
data16
in
jmp
inc
push
shr
xchg
push
hlt
cmps
xchg
and
jge
push
mov
push
pop
mov
pop
hlt
addr16
push
cmp
jl
mov
push
mov
les
jo
enter
addr16
mov
cmps
shl
imul
xchg
mov
fisubr
add
shl
stc
sar
leave
mov
jle
inc
hlt
inc
jo
dec
xchg
cli
pop
sbb
test
push
mov
push
xchg
ror
mov
jae
sti
pop
pop
jl
fs
mov
cs
mov
pop
xchg
sbb
fcomp
xchg
mov
mov
add
or
mov
pop
retf
call
jbe
ret
movs
cdq
cwde
in
pop
data16
enter
push
mov
lahf
pop
popf
sbb
pop
enter
imul
mov
add
loop
int3
in
jle
sbb
repz
in
jl
sbb
(bad)
sbb
loopne
or
ins
cmc
inc
test
(bad)
cmp
cmp
in
jle
sbb
xchg
mov
in
jle
sbb
mov
or
imul
inc
test
sti
or
xchg
xor
sti
or
ins
cmc
inc
test
(bad)
sbb
cmp
in
jle
sbb
add
in
jle
sbb
ret
test
ret
or
imul
inc
test
sti
or
xchg
xor
sti
or
ins
cmc
inc
test
mov
in
jle
sbb
adc
in
jl
sbb
(bad)
sbb
xor
or
sub
add
les
ins
add
or
adc
xchg
xor
sti
or
ins
cmc
inc
test
(bad)
sbb
cmp
in
jle
sbb
add
jle
sbb
adc
jl
sbb
lds
jne
repz
loopne
repz
sti
fild
jecxz
(bad)
sbb
sbb
jecxz
cmp
sbb
sbb
add
pop
nop
iret
mov
pop
adc
jne
jg
div
xor
xchg
gs
mov
stos
pop
mov
sub
jg
add
test
nop
js
cwde
movs
or
cld
dec
test
push
lea
stos
dec
movs
and
into
ret
push
scas
push
mov
pop
inc
xchg
cmp
lea
mov
in
fwait
pusha
movs
jmp
push
stos
(bad)
ss
sbb
mov
gs
jb
pop
adc
push
hlt
gs
imul
imul
mov
jns
lahf
pop
retf
mov
sahf
mov
mov
nop
movs
fild
mov
inc
xchg
mov
cmps
mov
push
mov
dec
mov
or
mov
cdq
movs
mov
add
mov
xor
dec
movs
cdq
jo
dec
retf
mov
fwait
or
adc
adc
push
ret
mov
ds
jae
ret
movs
cdq
xchg
add
inc
arpl
mov
sbb
pop
pop
(bad)
xchg
inc
cld
push
or
pop
xor
fnstsw
retf
stc
retf
mov
aas
imul
add
stos
push
cmp
das
push
(bad)
jb
stos
push
shl
xchg
dec
in
stc
inc
jp
shl
shl
or
outs
retf
imul
mov
rcr
pop
retf
push
scas
dec
fstp
sub
lea
dec
gs
push
inc
or
mov
jge
push
inc
sub
fdiv
jge
stos
inc
jae
and
cli
stos
mov
loopne
dec
(bad)
sub
cwde
mov
pusha
push
push
fstp
sub
loopne
pop
(bad)
sub
cwde
mov
pusha
push
push
fstp
sub
sar
fld
jp
ficomp
retf
imul
cmp
retf
xchg
ins
cmp
repnz
out
es
(bad)
sub
cmp
imul
rcr
(bad)
sub
mov
repnz
inc
enter
ins
cmp
inc
stos
enter
loopne
jle
fld
(bad)
sub
mov
loopne
jbe
dec
mov
int3
sub
add
inc
addr16
test
mov
jge
int3
dec
jl
sub
push
mov
cs
sub
bound
dec
pop
lds
jl
push
cmp
cmc
push
cmps
in
(bad)
sub
ror
and
dec
dec
lods
retf
imul
jb
outs
cmp
mov
in
jno
cmp
ffreep
inc
stos
test
imul
nop
clc
sahf
cmc
imul
aad
sbb
sub
popa
cmc
adc
imul
mov
rcr
pop
retf
push
scas
or
fld
dec
gs
fiadd
jecxz
push
(bad)
sub
cwde
mov
pusha
ficomp
(bad)
sub
clc
dec
retf
imul
push
retf
imul
mov
fsub
jl
ins
cmp
jo
enter
push
cmp
xchg
xor
jge
into
aas
imul
out
jle
enter
fadd
imul
jle
retf
fdiv
fst
push
or
outs
cmps
pop
xchg
bnd
pop
outs
in
gs
dec
adc
pop
popa
mov
cmps
in
pop
ins
xor
(bad)
icebp
mov
jg
xchg
mov
mov
sbb
test
jne
pop
imul
mov
ins
push
sub
shl
shr
push
mov
loop
movs
leave
cwde
jle
leave
sbb
pop
pushf
jns
dec
xchg
xchg
push
rol
dec
mov
pop
mov
retf
inc
jbe
int
cli
xchg
mov
push
cmp
push
imul
push
cmp
test
jo
mov
nop
addr16
sbb
add
mov
push
xlat
gs
retf
mov
jle
lock
(bad)
jno
mov
cwde
lds
jg
test
or
jo
std
jae
dec
(bad)
and
xor
xchg
sbb
ror
pop
jmp
popa
jge
pop
mov
and
jge
mov
inc
ja
mov
cmps
mov
sbb
ins
outs
sbb
test
pop
daa
scas
lock
jne
ror
sub
ret
out
mov
(bad)
sbb
sub
mov
ds
das
sub
xadd
or
call
push
in
push
sbb
mov
hlt
add
in
push
sbb
lods
fstp
xchg
pop
out
fsub
in
(bad)
in
push
sbb
mov
out
cld
scas
aad
xlat
mov
ds
das
sti
icebp
xadd
add
cli
cmp
push
arpl
aam
ret
or
es
in
outs
movs
call
int3
mov
pop
daa
scas
lock
push
sbb
adc
lock
popf
push
sbb
popf
jmp
cmps
rcr
jns
pop
out
ins
int
nop
xlat
mov
out
sbb
fnstenv
aam
or
cmp
(bad)
repnz
jbe
and
lock
ret
sbb
out
aam
es
and
sub
xchg
scas
lock
sar
add
popf
fcompp
xchg
pop
out
inc
test
loopne
mov
rcl
mov
push
sbb
push
rcr
dec
cmps
out
shr
xor
lock
(bad)
std
loop
sar
shr
lock
xlat
loopne
ret
mov
imul
jle
mov
xchg
mov
pop
shl
pop
test
out
xchg
js
lods
mov
pop
stos
in
ret
mov
push
dec
clc
inc
jnp
pop
bound
mov
aad
ins
pop
bound
inc
mov
jb
div
mov
lods
push
addr16
xchg
jp
inc
cld
ins
jl
pop
lea
movs
xchg
jle
mov
xchg
mov
mov
sbb
movs
fwait
xchg
ror
jg
push
ret
mov
jne
pop
std
retf
hlt
pop
xchg
in
repz
or
push
inc
mov
cmps
addr16
dec
inc
xchg
or
pop
xchg
mov
and
inc
mov
jne
push
dec
xchg
ficomp
je
cmp
stos
mov
gs
push
mov
iret
cli
xchg
movs
jno
dec
lea
or
mov
push
mov
test
pop
or
sbb
jl
pop
xor
nop
adc
cs
lea
adc
lods
jnp
jle
or
xchg
call
xchg
jmp
int3
xchg
pusha
cmc
enter
xor
jg
jmp
or
xchg
call
mov
xchg
add
cmps
xchg
mov
retf
stos
shl
jns
xor
scas
jb
mov
pushf
jmp
mov
ret
sub
sahf
xchg
(bad)
repz
xor
mov
(bad)
fidivr
sub
jno
icebp
popf
mov
jns
xor
repnz
sub
popf
sub
out
xor
mov
jns
xor
mov
jmp
stos
icebp
cmp
mov
xchg
ret
adc
xor
xor
mov
test
bound
sub
fimul
xchg
push
cmc
popf
xor
mov
aad
ret
jb
and
mov
icebp
sahf
xor
mov
out
xor
sub
sahf
xor
popf
inc
mov
std
stos
jecxz
inc
test
mov
jp
jb
(bad)
xlat
mov
mov
jmp
cld
mov
sbb
mov
sahf
jmp
sub
pushf
push
fsubr
jl
mov
and
mov
jns
sar
mov
(bad)
aaa
mov
xor
out
xor
movs
mov
popf
xor
mov
mov
add
mov
xor
xor
movs
mov
ss
out
adc
jns
xor
test
xor
clc
fstp
fwait
sub
mov
lock
xor
and
mov
movs
dec
adc
or
cld
mov
retf
mov
popf
xor
test
out
leave
mov
push
call
in
xor
sub
pushf
cdq
mov
out
push
fmul
dec
cmp
sahf
cmp
jns
xor
xor
sub
fisub
call
popf
or
popa
popa
add
jns
xor
icebp
cmp
adc
xor
xor
sbb
and
lahf
or
dec
(bad)
sbb
and
lahf
or
sbb
cmp
add
mov
mov
retf
sub
jns
push
jge
cwde
inc
cli
call
xor
mov
psubusw
leave
imul
icebp
sahf
rol
jne
and
arpl
sub
std
lahf
cmp
jmp
ss
pop
and
cld
mov
add
and
bnd
out
and
cli
mov
imul
ss
push
xor
push
xlat
dec
xor
fistp
repz
mov
div
outs
adc
push
jns
fwait
pop
jno
ret
inc
mov
sbb
test
js
aam
and
push
jge
pop
arpl
pop
jne
pop
push
pop
test
ror
mov
inc
cmp
stc
xchg
call
sub
ins
pop
mov
gs
dec
shr
pop
data16
movs
fwait
sbb
push
test
mov
sbb
mov
retf
jne
cmp
gs
push
out
xchg
jo
mov
pop
sbb
hlt
pop
gs
ins
push
jo
shl
hlt
cli
xchg
sbb
data16
test
xlat
mov
adc
xchg
sbb
scas
pop
shl
out
push
xchg
sbb
mov
test
jle
pop
add
or
popf
dec
data16
or
leave
or
push
imul
jo
and
ret
pop
mov
sbb
ins
cmps
xchg
js
or
inc
pop
pop
stos
add
dec
cdq
js
lock
inc
and
sbb
cmp
das
cs
cld
xor
push
out
call
xor
add
cmp
je
adc
jmp
mov
xor
div
leave
cmp
sahf
fisttp
pop
cmps
into
outs
or
and
sub
add
adc
fisttp
xchg
cmp
pop
out
test
sti
xor
sbb
sti
xor
sbb
sti
xor
sbb
sti
xor
sbb
out
test
sti
xor
sbb
test
mov
adc
int
and
mov
aas
imul
test
mov
jmp
into
xlat
jns
cmp
mov
imul
mov
mov
mov
imul
sbb
sbb
aad
sbb
xor
fcom
lods
dec
loope
push
aam
(bad)
or
in
ret
sti
xor
int3
jl
iret
in
clc
jecxz
adc
mov
sub
jmp
sbb
daa
out
jae
(bad)
idiv
or
daa
pop
xor
xor
or
pop
sub
pop
mov
loope
mov
cdq
ss
xor
lea
jmp
xor
pop
test
or
inc
mov
div
push
addr16
jo
xor
cmc
mov
sahf
xchg
cmc
fldenv
xchg
jp
(bad)
pop
fs
pushf
dec
xor
mov
data16
mov
push
pop
movs
rol
gs
pop
pop
dec
leave
pop
addr16
(bad)
jb
dec
dec
call
and
pop
imul
mov
enter
mov
and
mov
pop
cmc
mov
jge
pop
shl
pop
addr16
in
push
xchg
push
mov
cmps
push
enter
stos
imul
or
jmp
dec
fs
jg
jne
push
(bad)
ror
call
xor
call
pop
xchg
mov
adc
mov
mov
pop
fdiv
lea
add
jno
dec
mov
std
jmp
ror
push
sub
or
dec
movs
cdq
jo
dec
imul
popf
inc
dec
xchg
adc
fwait
or
int3
mov
push
dec
mov
fwait
or
daa
mov
cwde
nop
push
popa
int3
sahf
pop
and
popf
push
pop
lods
nop
add
ins
imul
pop
or
shl
arpl
imul
mov
jl
cmps
or
pop
fnstcw
jbe
inc
movs
arpl
imul
in
cli
dec
movs
arpl
dec
movs
es
add
pusha
mov
call
xchg
jnp
pop
leave
ins
mov
xchg
inc
in
mov
xchg
xchg
mov
cmp
mov
loope
fnstsw
xchg
adc
jg
pop
scas
and
xor
arpl
inc
pop
lods
loopne
retf
and
xor
jb
nop
mov
sar
pop
mov
mov
mov
cdq
or
push
inc
mov
xor
(bad)
rol
mov
mov
rcl
xchg
jno
cs
sbb
push
xchg
icebp
dec
ds
sbb
imul
jno
cmps
pop
icebp
int3
mov
loopne
pop
fs
imul
xchg
xchg
add
pop
and
jl
pop
pop
mov
dec
sbb
pop
push
mov
pushf
movs
mov
mov
push
ret
ins
pop
enter
push
shr
and
cli
shl
dec
mov
rcr
pop
xor
or
mov
jmp
xchg
or
mov
movs
fwait
nop
adc
and
mov
stos
rcl
dec
pop
stos
sbb
mov
pop
sub
test
xchg
bound
jp
lods
xchg
jne
dec
sub
jne
cmp
jge
pop
ins
sub
xchg
(bad)
push
movs
jp
jne
(bad)
out
pop
mov
outs
mov
xor
mov
pop
ds
fs
mov
movs
std
sub
test
pop
ja
inc
cmp
mov
pop
or
test
ja
pop
(bad)
dec
push
(bad)
cmp
outs
cmps
fs
js
scas
push
jns
popf
out
ins
mul
js
dec
mov
ins
push
gs
js
and
and
pop
loop
popf
fwait
xor
loope
mov
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
lods
fnstcw
cmps
pop
test
outs
jns
gs
dec
sbb
jns
iret
mov
mov
ret
xchg
mov
fs
xchg
lds
pop
dec
scas
or
adc
js
push
lods
call
idiv
iret
lea
pop
movs
leave
pusha
pop
std
jmp
idiv
sub
imul
push
shr
test
hlt
fs
adc
pop
jne
out
hlt
sbb
dec
mov
push
popf
jo
dec
xchg
ss
mov
jge
test
inc
jbe
cmp
mov
xor
nop
add
cdq
mov
cmp
popf
arpl
mov
fnstenv
mov
mov
mov
nop
mov
ja
mov
mov
jecxz
imul
mov
add
mov
jg
lea
pusha
dec
mov
in
push
lods
retf
mov
call
mov
addr16
call
call
mov
(bad)
sub
mov
call
out
xchg
xchg
rcr
mov
sbb
adc
jmp
aam
outs
pop
fsubr
imul
cmp
jmp
cwde
ficom
or
(bad)
push
frstor
ss
xor
sbb
and
popf
stos
and
jmp
adc
and
popf
sub
pop
cmp
bound
inc
and
popf
addr16
sbb
jmp
mov
popf
fbstp
fcmovnbe
(bad)
and
popa
mov
push
mov
iret
mov
xchg
icebp
sub
loopne
mov
dec
pop
mov
push
xchg
jnp
dec
mov
pop
dec
mov
mov
dec
and
jmp
push
xchg
mov
mov
or
mov
sub
pop
cmp
bound
inc
and
popf
addr16
sbb
push
repnz
xor
lahf
retf
or
pop
lods
arpl
fisttp
jmp
daa
adc
aas
std
dec
popf
(bad)
test
and
dec
ret
cdq
or
neg
lds
cmp
jmp
xor
fldenv
pop
in
cmp
fwait
inc
xchg
repz
xchg
ret
inc
xchg
repz
xchg
stos
call
cmp
sbb
mov
jbe
inc
std
and
popf
dec
and
fsubr
and
popf
pop
jbe
inc
std
and
dec
scas
xor
sbb
inc
pop
popf
aas
xor
rcr
es
mov
jmp
popf
jmp
(bad)
(bad)
jmp
mov
(bad)
call
retf
pop
(bad)
pop
sbb
inc
pop
popf
aas
sbb
rcr
es
dec
sbb
dec
jnp
popf
jmp
mov
lock
nop
icebp
sub
xchg
adc
mov
neg
xchg
mov
add
fisub
xor
sub
fdiv
mov
mov
into
cmp
xchg
cmc
sub
or
shl
das
gs
popf
(bad)
(bad)
mov
(bad)
and
push
js
mov
sub
jecxz
dec
popf
daa
pop
pusha
inc
icebp
mov
inc
xchg
out
cs
xor
aas
push
or
mov
pop
add
aas
inc
or
ds
and
sbb
out
js
aaa
pop
pop
inc
pop
mov
out
test
aaa
pop
cmp
aad
arpl
mov
adc
movs
call
cmp
and
gs
xchg
int
jg
pop
pusha
mov
or
das
jge
dec
cmp
scas
(bad)
jge
mov
sub
ror
inc
clc
lds
pop
mov
mov
xchg
nop
adc
test
stos
ret
pop
imul
lea
pop
or
sub
push
in
xor
jg
cmc
pop
inc
push
mov
not
mov
mov
mov
inc
fsub
mov
jge
pop
retf
sub
js
jg
push
ret
mov
call
loopne
jg
test
mov
test
xchg
push
push
hlt
gs
lods
sbb
pushf
je
mov
inc
inc
xor
std
jne
or
call
test
jae
dec
xchg
sbb
addr16
mov
ss
push
movs
fwait
or
int
leave
loopne
inc
jg
mov
inc
push
ror
pop
fwait
shl
js
rol
sub
fwait
jo
adc
inc
mov
mov
bound
fcomp
cwde
aam
xchg
js
and
xchg
mov
fisttp
mov
stos
sbb
sub
sbb
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
mov
dec
pop
push
fwait
cmps
(bad)
movs
dec
fld
jno
push
loopne
mov
lea
dec
pop
push
cwde
cmps
psubusb
movs
add
inc
dec
fldenv
xchg
shl
mov
stos
or
push
mov
dec
pop
push
fwait
cmps
(bad)
movs
dec
fnstenv
in
mov
jno
mov
cmps
xor
scas
cmp
pop
dec
fnstenv
cmc
shl
dec
fnstenv
xchg
shl
mov
stos
cmp
push
ins
push
sub
inc
mov
jo
adc
jo
mov
jno
mov
daa
adc
jno
sub
inc
mov
mov
addr16
jmp
in
or
and
push
mov
cmps
fucomp
sbb
out
xchg
push
mov
xchg
inc
gs
inc
sbb
fadd
fadd
mov
movs
psubusb
fadd
mov
pop
add
jno
xchg
sub
repnz
and
jno
dec
or
and
push
mov
cmps
fucomp
sbb
out
xchg
push
mov
ficomp
movs
(bad)
movs
mov
movs
in
push
gs
dec
(bad)
push
movs
jl
inc
mov
mov
movs
mov
cmps
jno
data16
sub
repnz
rcl
dec
push
or
fcomp
xor
in
jmp
push
mov
xchg
jmp
nop
sub
inc
dec
pop
in
cmps
(bad)
push
add
sti
rol
retf
popa
pop
gs
jne
mov
movs
lfs
push
gs
adc
test
movs
(bad)
dec
sbb
jnp
inc
movs
pop
addr16
push
jbe
aaa
test
dec
gs
pop
push
and
mov
jb
imul
jge
dec
gs
pop
leave
ins
div
push
jl
xchg
es
cmps
arpl
pop
popa
retf
clc
sbb
mov
leave
jbe
mov
call
rcl
mov
sbb
inc
dec
test
push
mov
jg
mov
xchg
ins
jns
sub
or
shl
xchg
fxch
cmps
(bad)
adc
addr16
push
shr
xor
ins
(bad)
outs
pop
jge
pop
retf
imul
xchg
jge
push
cmp
add
std
jne
push
pop
mov
or
xchg
mov
leave
jo
dec
lea
adc
mov
mov
adc
cs
sbb
mov
(bad)
pop
icebp
mov
addr16
ins
inc
rol
push
mov
or
jg
sub
add
adc
fwait
or
inc
sahf
retf
movs
jno
mov
jle
inc
add
jbe
test
ret
xchg
or
shl
inc
das
xchg
sbb
mov
jge
(bad)
lods
dec
mov
push
sub
test
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aam
jg
aad
cli
fs
ficomp
gs
mov
xor
std
cdq
movs
ss
rol
(bad)
and
sub
dec
sub
test
mov
std
aad
jle
aad
jle
aad
jle
aad
jle
aad
jle
aad
jg
aad
jle
aad
jle
aad
jle
aad
jle
aad
jle
aad
jle
aad
jle
(bad)
mov
dec
shl
pop
shl
test
mov
jl
push
addr16
fld
fsubp
shl
mov
cmc
movs
xor
cli
jnp
mov
jge
ficomp
mov
in
inc
push
jg
aas
or
test
shl
cmp
mov
push
adc
pop
ret
sub
sar
add
dec
test
mov
jmp
pop
jmp
aam
fisubr
test
inc
movs
jle
sub
(bad)
mov
pop
cmp
fisubr
aam
jg
jl
cmp
imul
cmp
mov
push
add
aam
sub
or
scas
retf
inc
test
jle
jae
cli
js
xchg
mov
(bad)
leave
mov
jl
fisubr
fsub
cmp
imul
push
cmp
mov
push
xor
jle
aam
jg
je
aas
test
add
in
shl
test
aam
xlat
test
out
jb
mov
pop
xchg
movs
jle
aam
jle
aam
fild
xlat
dec
sub
lock
push
jl
fisubr
aam
jg
jl
cmp
imul
xchg
mov
aam
jg
je
aas
test
add
in
shl
test
aam
xlat
test
out
jb
mov
call
lock
sub
in
shl
test
dec
sub
or
jg
sub
in
shl
test
dec
sub
or
push
jne
test
aad
out
rol
fistp
movs
jle
rcr
test
addr16
ret
mov
push
jne
jg
cld
inc
push
je
clc
test
mov
popf
cmp
push
je
or
aad
into
rol
fistp
je
push
jne
push
mov
shl
test
pop
(bad)
ret
jle
mov
movs
and
push
mov
sub
jle
mov
push
cmps
mov
add
nop
movs
jle
aam
jg
icebp
lahf
test
test
xchg
cmp
movs
jle
cli
stos
out
enter
dec
mov
jae
fdivr
movs
sar
jg
add
pusha
mov
mov
test
scas
outs
adc
sub
fisttp
jg
aam
je
xor
jmp
sbb
test
inc
dec
in
shl
test
popf
gs
scas
out
fsubr
jb
(bad)
pusha
movs
fistp
popa
mov
xor
or
aam
pusha
mov
enter
inc
mov
mov
aad
jle
aam
jg
jl
xlat
test
out
jb
mov
das
xchg
movs
jle
aam
jle
aam
xlat
cwde
jl
cmp
imul
cmp
fsubr
stc
inc
sti
in
shl
gs
sahf
mov
enter
ins
and
cmp
xchg
test
and
mov
(bad)
mov
cmp
inc
jmp
ret
mov
mov
lods
pusha
adc
jmp
mov
test
mov
add
dec
sub
mov
push
jl
fisubr
aam
jg
jl
cmp
imul
(bad)
cmp
fldcw
stc
inc
sbb
shl
gs
scas
push
popa
(bad)
mov
popf
ror
mov
xchg
movs
jle
xlat
fstp
push
add
mov
dec
jg
ds
mov
aam
pop
test
test
popa
mov
fsubr
xor
in
xlat
fld
jmp
inc
inc
dec
jg
fldcw
stc
inc
or
shl
gs
scas
push
popa
(bad)
mov
popf
ror
mov
xchg
movs
jle
xlat
fstp
push
add
mov
dec
jg
ds
mov
aam
pop
test
test
popa
mov
fldcw
xor
in
xlat
fld
jmp
inc
lods
push
in
mov
je
lods
mov
jle
shl
(bad)
je
popa
mov
jle
pop
pop
adc
sbb
xor
imul
addr16
ret
sbb
fstp
dec
mov
jne
mov
shl
mov
lods
movs
mov
ja
sahf
js
cmp
das
push
pop
stos
movs
dec
arpl
sbb
leave
jg
pop
mov
push
cmp
xchg
(bad)
inc
pop
test
push
ins
sahf
mov
movs
add
pop
movs
ror
fld
pop
data16
pop
xor
dec
mov
in
jge
add
fidivr
pushf
and
dec
addr16
push
adc
adc
test
pop
gs
pop
mov
pop
leave
stos
mov
hlt
addr16
mov
push
jge
pop
lea
xchg
stos
mov
loop
mov
fcmovu
pop
addr16
mov
pop
push
mov
xchg
loope
adc
dec
movs
call
jno
aam
xchg
jg
and
cmp
lods
dec
std
add
pop
mov
leave
retf
test
call
cld
xor
mov
pop
push
mov
cmp
popf
mov
bound
movs
addr16
jne
movs
fwait
xchg
jge
pop
xchg
ret
movs
cdq
jo
dec
mov
je
fdivr
call
mov
mov
ret
movs
call
jge
or
hlt
test
rcl
mov
lahf
xor
xchg
pop
sbb
or
aam
clc
cmp
sub
sar
loope
outs
cmp
adc
dec
pushf
push
clc
nop
aam
es
fistp
clc
dec
lock
iret
jmp
pop
jmp
std
ins
cld
ins
inc
retf
sub
cld
pop
ret
mov
sub
sar
(bad)
or
sbb
push
sub
mov
in
adc
int
add
in
adc
stc
mov
jnp
xchg
aad
push
cmp
adc
stc
mov
jnp
xchg
aad
push
and
mov
in
adc
push
cmp
and
mov
lods
pop
arpl
je
(bad)
mov
cli
jl
iret
es
aad
in
inc
mov
mov
out
sbb
push
sub
mov
ins
sub
pop
ret
xchg
dec
(bad)
les
sub
cmp
adc
mov
out
xor
inc
mov
call
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
xor
push
nop
stos
add
jnp
dec
adc
pop
pusha
mov
jb
dec
mov
jl
dec
stc
jnp
pop
enter
movs
jle
mov
jmp
or
addr16
add
sbb
push
gs
sar
ss
lods
mov
imul
lea
add
and
dec
gs
sub
add
stos
mov
ss
mov
test
push
pop
shr
pop
gs
dec
leave
pushf
scas
dec
mov
cmps
pop
cdq
xchg
sub
pop
dec
movs
fwait
shr
push
shr
mov
jae
test
cmp
in
fiadd
pop
call
jge
pop
retf
inc
je
enter
sbb
mov
and
mov
cmps
hlt
fsub
bound
adc
add
xchg
test
jo
cdq
mov
cmps
call
mov
retf
mov
nop
mov
retf
sub
mov
push
push
push
jg
pop
sub
mov
cli
or
jbe
test
pop
add
push
lods
push
loopne
dec
cmp
int3
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
xchg
dec
push
int
dec
and
aas
popf
inc
add
ds
and
lahf
mov
jae
xor
inc
scas
add
adc
push
and
ins
adc
int
enter
sahf
nop
push
cdq
mov
(bad)
in
enter
sahf
add
mov
xchg
adc
add
jb
cli
inc
mov
out
pop
(bad)
in
cdq
mov
ins
xchg
stos
fdiv
mov
mov
stc
push
xchg
mov
call
mov
inc
add
mov
pop
add
jae
inc
cmp
fist
adc
ins
pop
lahf
xor
out
or
mov
mov
inc
add
cmp
add
lahf
xor
cli
pushf
in
mov
inc
es
fs
and
sub
lds
jge
sbb
xor
and
(bad)
xor
(bad)
out
add
xchg
xor
adc
and
lds
jge
sbb
xor
and
fwait
xor
(bad)
out
add
xchg
xor
adc
and
inc
add
inc
and
inc
add
lahf
cmp
int3
adc
adc
(bad)
sbb
adc
sub
(bad)
or
aaa
xor
inc
sub
fist
xchg
ror
shr
mov
fs
adc
call
xor
adc
enter
sahf
xchg
push
out
popa
int3
bound
mov
mov
mov
int3
inc
sahf
push
es
mov
mov
out
pusha
in
call
fist
arpl
icebp
call
int
fwait
out
mov
mov
inc
add
cmp
add
lahf
xor
cli
cwde
or
int
imul
or
sahf
lahf
fidiv
aas
rcl
inc
cs
adc
adc
(bad)
(bad)
adc
sub
(bad)
retf
jbe
adc
jmp
adc
vmovsd
xchg
add
int3
and
adc
xor
adc
cdq
int3
mov
imul
xor
mov
xor
arpl
cdq
push
mov
adc
in
aaa
adc
gs
sahf
sbb
arpl
mov
xor
arpl
cdq
push
mov
xor
in
fist
aas
jne
push
sahf
nop
dec
pop
mov
adc
xor
aaa
xor
aaa
xor
xchg
les
les
and
sbb
int3
in
enter
sahf
xchg
dec
mov
fwait
out
fist
xor
or
pop
sub
lahf
cmp
add
lahf
out
mov
xor
add
dec
mov
nop
fcom
bswap
sbb
lahf
xor
cmp
adc
cmp
inc
imul
adc
inc
pop
add
adc
int
mov
inc
add
jmp
fcom
arpl
mov
cmp
adc
xor
out
or
and
shl
imul
push
(bad)
push
mov
(bad)
imul
arpl
mov
lea
fwait
rcr
adc
jb
inc
cmp
fist
sbb
les
es
push
(bad)
in
test
out
fist
xchg
ror
(bad)
jmp
xchg
shl
int3
mov
sahf
cdq
int3
mov
cs
adc
adc
(bad)
(bad)
adc
sub
(bad)
retf
jbe
adc
dec
int
xor
ss
in
enter
sahf
pushf
mov
and
rol
mov
cmp
or
int
lea
cmp
pusha
sub
les
icebp
int3
sub
hlt
fldcw
adc
inc
add
adc
xor
adc
test
movs
cwde
cmp
icebp
fs
mov
ins
mov
dec
int
jmp
ret
push
aas
std
leave
mov
jne
mov
shl
mov
xchg
aam
(bad)
mov
sub
js
push
scas
clc
add
fistp
jg
xchg
xchg
(bad)
cmps
mov
jns
inc
inc
inc
lods
push
stos
sbb
push
loope
adc
jg
push
jle
mov
inc
sbb
mov
sbb
mov
in
addr16
int3
addr16
push
cmp
pop
xchg
jb
push
movs
fwait
or
xchg
mov
bound
stos
inc
mov
cwde
fwait
rol
pop
mov
not
mov
or
shr
inc
sbb
xchg
sub
pop
xchg
sbb
push
nop
mov
xchg
mov
rcl
stos
pop
mov
fwait
or
mov
jl
cld
pop
test
jo
push
dec
sbb
in
shl
push
mov
inc
pop
addr16
les
mov
adc
sbb
lea
cmps
call
movs
bound
pop
jne
fwait
push
mov
push
mov
fld
inc
clc
sti
stos
dec
int
mov
inc
icebp
mov
jmp
and
(bad)
mov
cmp
cmps
scas
ds
(bad)
fild
push
xor
hlt
xor
icebp
push
xchg
ins
push
mov
xor
inc
ret
mov
into
mov
push
xor
jno
repz
xor
repnz
inc
sub
push
xor
mov
mov
cld
xor
repnz
xor
repnz
xor
repnz
xor
je
xor
dec
iret
mov
adc
lsl
in
call
push
xchg
ror
call
es
adc
hlt
bound
in
xor
pop
and
stc
sbb
into
inc
xor
push
cmp
fwait
or
das
jno
icebp
daa
addr16
nop
div
cld
es
inc
repnz
div
std
es
(bad)
fistp
shl
retf
cmps
fwait
cmp
jne
or
jmp
nop
fistp
cmp
mov
div
add
sub
pop
lods
and
mov
fs
pop
test
js
dec
jmp
pop
lods
adc
mov
dec
fmulp
pop
movs
shl
pop
data16
dec
movs
fwait
sbb
mov
xchg
jg
sbb
shl
pop
gs
dec
xchg
fidivr
ror
jae
dec
mov
test
cmp
sub
xchg
push
imul
cdq
movs
scas
mov
fwait
sbb
rcl
pop
addr16
push
ret
ins
pop
dec
xchg
mov
xchg
leave
pop
sbb
not
mov
data16
idiv
rol
mov
in
outs
pop
movs
addr16
or
jb
inc
jne
adc
xor
shl
js
es
aad
push
jmp
push
xlat
sti
add
jg
test
jg
std
jne
fcomp
sahf
sbb
inc
xchg
leave
inc
movs
mov
dec
inc
mov
jle
rol
jns
cmps
pop
ret
movs
call
xchg
cli
pop
icebp
mov
xchg
hlt
cmps
cmp
mov
mov
cmp
shr
jge
sbb
loopne
or
fxch
lods
(bad)
jae
or
(bad)
jno
(bad)
mov
sub
mov
cmp
cmc
sbb
(bad)
push
xlat
in
leave
xchg
ds
jl
push
adc
push
or
sar
sbb
xor
data16
or
ja
ror
ss
push
cmp
or
and
(bad)
shl
sbb
(bad)
add
and
adc
dec
shl
push
cmp
pop
sub
repnz
jb
add
or
repnz
(bad)
cmc
pop
aaa
cmp
daa
(bad)
xchg
cdq
sbb
xchg
ds
bound
into
or
sbb
test
fldenv
shl
xchg
cwde
jno
leave
add
shl
sbb
fst
or
cmp
nop
(bad)
or
(bad)
xchg
dec
movs
es
mov
pop
xor
push
aad
(bad)
lahf
stos
ja
adc
mov
mov
test
xlat
mov
pop
(bad)
hlt
sub
mov
scas
dec
and
jg
pop
call
dec
xlat
cmps
sti
and
test
mov
jo
pop
mov
adc
jle
sti
sub
pop
movs
dec
jmp
adc
adc
ja
pop
cmps
stos
outs
jg
pop
nop
lahf
or
stos
rcl
bound
div
ja
jnp
xchg
(bad)
pop
mov
inc
mov
xchg
call
clc
dec
jle
pop
mov
sti
mov
nop
popf
sbb
mov
scas
hlt
mov
xchg
mov
clc
fcmovne
mov
fstp
retf
sbb
lahf
or
stos
rcl
loopne
sbb
xchg
stos
test
jle
aam
jg
mov
xlat
cdq
mov
popa
mov
fs
cdq
adc
test
(bad)
popf
dec
hlt
popf
fwait
mov
gs
popf
mov
ins
pop
jge
(bad)
pop
hlt
push
jo
dec
mov
scas
add
xchg
pop
(bad)
outs
hlt
mov
sbb
inc
cld
and
pop
pop
ss
rol
mov
lea
mov
push
jle
pop
add
jo
hlt
gs
or
sahf
sbb
imul
jle
or
neg
jno
push
jge
inc
mov
les
cmp
mov
mov
pusha
sbb
push
mov
retf
cld
loop
dec
movs
imul
scas
(bad)
jbe
push
mov
pop
mov
pop
sub
sbb
jns
iret
lock
mov
leave
stc
mov
xchg
(bad)
rcl
(bad)
rcl
(bad)
rcl
aam
adc
add
scas
lock
fadd
add
adc
aam
adc
arpl
scas
lock
xchg
imul
scas
lock
rcl
(bad)
inc
jmp
mov
xlat
rcl
repnz
adc
(bad)
sar
jg
in
ss
add
out
retf
push
lock
int3
or
fstp
sbb
aam
adc
iret
rcr
test
xchg
jne
leave
sbb
out
(bad)
xor
rcr
fst
or
into
les
in
in
hlt
fidiv
xor
add
out
retf
push
lock
int3
or
fstp
sbb
aam
adc
iret
rcr
test
xor
in
pusha
in
ret
loopne
aad
inc
imul
adc
clc
(bad)
and
xchg
int3
out
(bad)
adc
inc
and
add
in
int3
out
rcl
add
mov
rol
jmp
pop
xor
xor
in
out
nop
aad
jmp
push
and
in
rcr
jne
(bad)
sbb
out
out
nop
aad
jmp
test
push
stc
ret
jo
lock
rcl
(bad)
int3
out
leave
adc
inc
test
out
sbb
les
(bad)
int3
push
cmps
repz
hlt
loopne
icebp
retf
in
pop
lds
sub
push
adc
les
xchg
enter
addr16
xchg
fidivr
xor
pop
cdq
cmp
test
ds
in
add
adc
shl
loope
rol
aad
or
in
rcr
adc
shl
jmp
aad
or
in
rcr
adc
leave
ret
xor
sti
xchg
out
movs
aad
or
in
sar
rcl
xor
sti
xchg
in
jmp
out
in
out
nop
aad
leave
retf
icebp
cmp
in
sbb
and
cmp
out
out
nop
aad
leave
ret
icebp
xor
out
out
stc
adc
inc
lds
out
sbb
les
div
mov
ror
fidivr
and
paddusw
(bad)
enter
pusha
fwait
aaa
sub
aas
adc
test
dec
(bad)
inc
aam
retf
adc
xlat
rcr
rol
fidivr
add
add
in
out
rcl
into
fcomp
loope
rcl
call
adc
adc
in
(bad)
rol
adc
fdiv
sub
ret
rcl
into
fcomp
in
rcl
and
and
je
or
aas
aas
xchg
jbe
add
push
rol
adc
retf
in
sar
rcl
(bad)
int3
out
in
adc
leave
and
lock
in
push
aam
ficom
xor
in
out
nop
aad
leave
retf
inc
cmp
in
push
jmp
sbb
fld
sub
mov
in
mov
adc
into
adc
push
loope
jmp
or
sub
out
sbb
ss
xlat
rcl
int
pop
sbb
aas
out
jmp
sti
sub
aas
aas
adc
test
loop
sar
in
mov
rcl
and
pop
xor
popa
jnp
sub
aas
adc
test
dec
(bad)
inc
aam
retf
adc
xlat
rcr
rol
fidivr
add
add
in
out
rcl
into
fcomp
loope
rcl
call
adc
adc
in
(bad)
rol
adc
jbe
jae
aad
xchg
ret
and
in
les
in
in
xor
repz
rcl
fcmovnbe
add
xlat
sub
rcl
std
push
in
rcl
(bad)
push
cmp
fidivr
in
push
or
rcr
jg
in
adc
inc
xor
in
stos
or
arpl
xchg
ror
jns
in
sti
cmp
jmp
in
aam
pop
ret
icebp
dec
jl
in
jnp
sbb
dec
cmps
pop
ret
getsec
or
repnz
jae
adc
xchg
dec
je
or
pop
sub
pop
fistp
mov
cmps
pop
dec
jo
pop
pop
outs
rcr
jg
dec
jne
mov
mov
jge
ret
lods
push
pop
lods
js
adc
nop
fnstsw
ds
adc
addr16
pop
lods
push
xchg
mov
xchg
add
xchg
pop
mov
sub
adc
and
ins
jb
cmp
lea
pop
imul
mov
push
mov
pop
gs
cmp
aam
jns
jo
pop
add
mov
xor
mov
jge
std
std
dec
mov
xor
ds
jg
jae
lahf
push
pusha
jl
xor
mov
ds
mov
jae
repnz
in
mov
arpl
push
test
pusha
mov
mov
and
imul
mov
leave
jl
inc
push
mov
dec
pushf
pop
addr16
xchg
xor
push
sahf
push
push
mov
call
mov
mov
mov
xor
push
pop
add
lods
dec
dec
pop
xchg
nop
imul
loope
div
and
fnstenv
ret
test
enter
xchg
(bad)
sub
push
and
sub
fmul
(bad)
neg
into
sub
or
(bad)
fistp
loopne
movs
sub
adc
out
adc
or
rcl
and
in
add
icebp
out
(bad)
cmc
or
mov
fcomp
(bad)
neg
jmp
pop
cli
loopne
movs
int3
call
call
or
shl
or
add
sbb
adc
inc
fcmovne
lds
sbb
push
loopne
jnp
or
and
gs
lds
dec
movs
cwde
cmp
stc
stc
aad
pop
(bad)
in
mov
or
pop
gs
pop
gs
pop
sub
jp
push
sti
cli
add
movs
pusha
mov
mov
pop
nop
adc
dec
dec
jp
pop
retf
loopne
jle
xchg
dec
movs
popa
mov
inc
sub
dec
mov
sub
xchg
fdivr
pop
data16
xchg
ret
movs
mov
cmp
mov
mov
cs
mov
xchg
pmaxsw
sub
xor
sbb
sub
pop
push
cmp
mov
rcl
ins
inc
stos
mov
sbb
mov
movs
out
mov
mov
scas
or
stos
sar
pop
xchg
jge
mov
jg
imul
jb
dec
retf
movs
fwait
or
mov
lock
stos
mul
mov
or
in
daa
movs
push
(bad)
mov
mov
push
mov
xor
inc
je
push
pop
jmp
dec
jp
sbb
push
nop
xor
xor
sbb
pushf
test
je
shr
xchg
dec
hlt
ficom
push
shl
mov
push
push
or
retf
inc
jbe
pop
cmps
cwde
adc
fwait
or
dec
mov
pushf
xor
data16
cmps
call
movs
mov
sub
out
pop
mov
lea
test
push
stos
adc
cdq
ins
mov
or
cmp
aam
xchg
cmp
lea
jo
(bad)
push
pushf
or
mov
adc
shl
in
sbb
daa
sub
pop
fiadd
shr
(bad)
dec
push
fdiv
or
ror
xor
ret
xchg
(bad)
xor
pop
pop
and
popa
cmp
jp
aam
jp
dec
movs
cwde
cmp
stc
inc
test
pop
(bad)
aam
mov
or
pop
sub
inc
jno
mov
fs
dec
test
gs
ja
outs
mov
mov
ins
mov
mov
ins
xchg
pop
data16
stos
(bad)
call
int3
pop
addr16
(bad)
or
test
movs
xor
dec
rcr
or
pop
xlat
mov
pop
mov
mov
jo
pop
mov
adc
jle
sti
push
pop
movs
imul
(bad)
movs
mov
jne
mov
shl
pop
stos
dec
fstp
xchg
xchg
sub
xchg
mov
mov
jns
inc
mov
in
mov
mov
mov
neg
pop
xchg
inc
push
pop
stos
inc
cmps
add
mov
and
dec
jmp
pop
push
xchg
or
sbb
xor
sub
jg
push
jl
pop
enter
sbb
gs
add
daa
push
inc
jo
push
dec
gs
and
pop
addr16
popa
stos
test
jae
pop
mov
pop
add
or
dec
leave
sbb
adc
addr16
hlt
mov
es
jno
pop
sub
push
sub
lock
les
jg
sub
mov
mov
or
adc
cdq
or
test
movs
fwait
or
xchg
test
mov
(bad)
jmp
inc
xchg
cwde
mov
data16
std
jbe
sbb
cwde
cmp
xchg
mov
xchg
xchg
lds
mov
xchg
je
jb
pushf
out
mov
je
sub
mov
cli
ja
imul
bound
imul
jne
out
and
popa
adc
sbb
movs
mov
ds
adc
push
sti
cli
adc
push
sahf
jmp
jb
dec
and
jnp
pop
leave
ins
(bad)
mov
dec
rcl
arpl
mov
ficomp
mov
fs
fst
pusha
jge
mov
jb
pop
stos
nop
push
adc
rcl
xchg
xchg
and
jg
push
cmp
retf
std
jne
in
cmp
xchg
mov
test
sbb
inc
inc
xchg
jg
dec
mov
retf
inc
jbe
add
retf
in
fldenv
pop
retf
mov
int3
fs
dec
and
jg
mov
inc
mov
add
cmps
cmps
addr16
cld
push
mov
dec
retf
mov
and
inc
scas
inc
add
xchg
pop
and
mov
(bad)
les
push
cmps
push
nop
mov
sbb
pop
mov
xchg
xchg
icebp
pop
mov
add
mov
inc
into
repz
mov
push
pushf
jle
jo
call
mov
xchg
cdq
mov
xchg
push
imul
enter
lods
inc
mov
lods
inc
mov
retf
inc
push
mov
lods
inc
mov
jmp
push
mov
jb
pop
mov
inc
push
mov
out
mov
jb
sbb
mov
icebp
lods
inc
mov
mov
xchg
out
lods
push
mov
gs
in
mov
(bad)
jge
mov
lods
mov
mov
cwde
pop
push
mov
jns
mov
outs
hlt
add
mov
data16
mov
inc
cmp
mov
lods
inc
mov
jp
stc
dec
jb
inc
mov
not
inc
scas
jne
push
mov
jb
dec
push
fild
mov
mov
mov
cwde
mov
mov
mov
inc
lahf
mov
mov
lods
mov
push
inc
add
inc
mov
push
dec
movs
es
mov
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
xor
push
aad
sbb
and
gs
cmp
stos
out
inc
stos
mov
(bad)
aam
mov
xchg
mov
data16
int
jbe
pop
pusha
mov
stos
jo
iret
mov
test
ins
jnp
cmp
pop
mov
mov
jmp
stos
pusha
mov
ins
sub
jg
pop
test
xchg
test
xchg
bound
cmps
mov
int3
mul
or
xchg
inc
or
leave
fnsave
cmp
test
dec
mov
xchg
aad
into
push
cld
inc
jge
pop
(bad)
shl
test
sub
jg
mov
inc
jae
dec
xchg
ret
xchg
jae
jno
push
inc
mov
dec
pop
gs
and
push
pop
inc
jo
inc
dec
add
gs
pop
addr16
dec
addr16
push
jl
pop
movs
psubd
shr
jle
hlt
xchg
cdq
imul
xchg
pop
push
shr
lock
hlt
inc
jno
dec
mov
push
dec
nop
xor
or
dec
hlt
popa
jb
jns
xchg
ins
hlt
xor
(bad)
loope
je
mov
test
in
(bad)
push
mov
xor
lods
stos
cmps
addr16
fisttp
pop
cld
fiadd
inc
dec
shl
or
pop
xchg
xchg
sbb
cld
or
pop
lea
pop
mov
(bad)
aad
ins
mov
cmp
bound
dec
movs
inc
xchg
aad
jb
sbb
(bad)
pop
call
test
call
inc
inc
call
movs
div
add
mov
add
mov
add
mov
add
mov
aam
inc
out
pop
mov
repnz
mov
mov
inc
out
das
and
adc
or
cld
sti
push
mov
xchg
mul
add
mov
daa
popf
mov
add
fwait
and
cld
mov
icebp
add
mov
adc
fwait
lock
fdiv
mov
pop
add
or
push
or
add
pushf
stos
in
mov
mov
cs
and
xchg
mov
(bad)
adc
xor
adc
(bad)
repnz
mov
add
mov
ret
mov
xchg
dec
inc
out
pop
inc
xchg
cmc
push
mov
(bad)
and
pop
(bad)
or
or
pop
or
out
mov
(bad)
pop
push
add
or
sub
mov
add
or
jge
stc
mov
or
out
stos
jae
adc
xchg
dec
je
mov
xor
pop
nop
fisttp
gs
jns
fs
mov
div
fldpi
addr16
xchg
shl
cmp
mov
xchg
clc
mov
mov
inc
inc
sbb
jecxz
clc
lea
(bad)
mov
adc
test
xchg
dec
jo
mov
cmps
lds
xchg
dec
hlt
stc
jb
test
and
stos
lea
stos
inc
jge
pop
mov
push
popa
gs
jo
(bad)
frndint
in
(bad)
rcl
mov
mov
arpl
cmp
or
mov
imul
shr
fldenv
dec
xchg
mov
dec
jle
pop
hlt
xchg
jae
fdivr
push
jo
push
aaa
xchg
cmp
(bad)
sub
clc
inc
jg
pop
retf
int3
dec
gs
adc
nop
push
int
jg
mov
sbb
mov
div
push
pop
pop
imul
cmp
loopne
movs
fwait
test
jae
pop
jmp
jp
dec
movs
imul
shr
sub
inc
xchg
jge
push
xchg
jl
mov
sbb
mov
loope
mov
leave
sub
sub
or
rcr
pop
stos
sub
dec
adc
pop
test
rcl
mov
jo
mov
jo
mov
jo
mov
jo
addr16
mov
addr16
jno
mov
jo
pop
xor
mov
jno
cmps
mov
push
mov
jo
mov
mov
and
xlat
xchg
fbstp
mov
pop
xchg
pop
dec
inc
pushf
pop
push
imul
xor
mov
jae
daa
push
addr16
jno
mov
jo
and
push
xlat
mov
inc
mov
jl
mov
dec
inc
mov
jo
sbb
loopne
cmps
dec
jo
mov
(bad)
aam
(bad)
mov
shr
inc
mov
dec
je
fwait
jmp
rol
(bad)
pop
cmps
jmp
sbb
mov
mov
cmps
and
pop
mov
jno
cmps
push
jo
mov
cmp
jno
(bad)
xchg
cmp
out
aad
inc
jecxz
imul
pop
shl
mov
pop
pop
mov
push
xchg
pop
xor
or
in
mov
jg
pop
lods
add
push
scas
dec
ins
mov
or
mov
lock
push
fsubp
or
loope
mov
enter
mov
inc
mov
mov
mov
and
pop
mov
jg
mov
cli
imul
or
xor
mov
mov
push
ror
imul
push
jle
mov
dec
cld
mov
mov
pop
jb
pop
inc
push
jo
in
mov
adc
pusha
movs
jecxz
imul
pop
(bad)
sub
movs
call
xchg
push
mov
mov
ins
pop
xchg
rcl
xchg
adc
imul
dec
gs
mov
movs
xchg
adc
fwait
or
inc
(bad)
retf
inc
jne
adc
xor
mov
sub
sar
mov
jbe
jns
ret
pop
popa
mov
mov
fistp
mov
push
loopne
push
fsubp
or
loopne
push
fsubp
or
(bad)
ficom
or
mov
push
faddp
mov
jbe
adc
inc
(bad)
pop
inc
aam
or
loopne
shl
mov
inc
fistp
or
jo
(bad)
fsubp
or
ss
enter
(bad)
cld
add
loopne
cld
dec
cld
pop
mov
loopne
push
fsubp
or
sub
jecxz
or
loopne
inc
int
adc
push
(bad)
or
retf
cwde
ins
enter
fsubrp
sbb
repnz
in
pop
enter
sub
push
push
rcl
sbb
enter
test
pop
mov
dec
leave
pop
or
fistp
xchg
retf
inc
fbld
mov
retf
inc
fild
stos
and
xchg
fcomi
or
imul
ins
ins
mov
dec
int
jmp
push
mov
xor
shl
gs
jmp
mov
mov
pop
mov
je
mov
gs
enter
mov
dec
sahf
mov
mov
dec
add
imul
cdq
inc
pop
mov
sbb
mov
ror
fwait
jle
push
mov
std
jge
pop
mov
mov
data16
std
jne
cwde
pop
gs
inc
imul
cli
sbb
sar
pop
arpl
data16
inc
pushf
dec
push
cmp
shl
data16
call
cld
lds
pop
retf
std
ja
mov
sub
xchg
jo
sub
retf
movs
fwait
or
imul
jbe
pop
hlt
das
xchg
imul
addr16
mov
mov
clc
popa
xchg
shr
movs
fwait
test
push
jb
pop
jo
mov
add
mov
mov
push
test
cdq
xchg
shr
ret
movs
cdq
jo
dec
mov
push
mov
ins
pop
mov
or
mov
in
call
scas
pusha
mov
ss
sbb
pop
mov
ficom
mov
pop
jbe
jo
or
mov
fwait
and
ss
and
bound
lock
push
jmp
dec
cdq
and
jmp
lods
cwde
data16
mov
add
push
mov
inc
inc
popf
and
cmps
xchg
push
cwde
hlt
movs
pop
dec
lds
cmps
addr16
jns
and
imul
cmps
addr16
icebp
mov
push
xchg
or
and
pop
xchg
mov
int
jnp
lahf
and
cmps
aaa
arpl
or
fwait
lea
mov
mov
cmps
xor
fwait
and
mov
cmp
xchg
xor
ds
bound
mov
loopne
mov
xchg
fistp
mov
test
dec
movs
es
nop
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
xor
push
aad
mov
cmp
pop
xor
outs
test
jg
dec
or
xor
sub
lea
nop
or
fnstsw
ins
mov
in
jg
pop
scas
test
inc
xchg
js
and
inc
loope
xchg
lea
aaa
pop
movs
shr
mov
mov
pushf
sub
dec
movs
fwait
adc
jg
mov
cmp
mov
ds
cmp
jle
hlt
jl
pop
mov
cld
jae
or
shr
xchg
in
adc
jge
ret
pop
jle
pop
mov
add
cmp
mov
inc
std
mov
sbb
imul
sbb
mov
fldenv
lods
retf
mov
mov
ror
or
shl
mov
call
and
adc
jge
pop
gs
call
movs
pop
jno
mov
push
cs
pop
mov
jl
ret
movs
cdq
jo
pop
mov
adc
fwait
or
(bad)
outs
data16
dec
cld
fs
cdq
bound
xchg
sbb
bound
mov
mov
imul
and
inc
mov
cmp
and
cmp
dec
cmp
xchg
push
xchg
cmp
dec
cmp
mov
xchg
cmp
dec
popf
cs
xchg
cmp
dec
cmp
aaa
dec
fldcw
and
sbb
dec
cmp
cmp
sub
mov
in
pop
adc
dec
jge
add
out
fbstp
jge
adc
test
fstp
jg
push
pop
mov
imul
outs
add
push
jge
add
cmp
out
test
xor
and
rcr
cdq
ss
jle
cmps
push
xchg
clc
and
fstp
pop
das
and
ret
cmp
dec
push
and
dec
fisub
dec
adc
mov
cmp
add
pop
mov
xchg
and
mov
cmp
dec
sar
mov
sbb
in
cdq
and
cmp
ficom
cdq
and
ficomp
pop
das
and
(bad)
imul
cmp
out
or
and
sub
dec
cmp
fstp
add
fcmovnu
sahf
sar
add
cmp
dec
sbb
mov
fidiv
and
xor
xchg
and
nop
xchg
and
aad
aaa
dec
lods
dec
jo
(bad)
sbb
and
jle
fidiv
sub
mov
inc
and
(bad)
jle
inc
xchg
xchg
cmp
imul
clc
fidiv
lock
(bad)
ficomp
cmp
ficom
sbb
dec
xor
and
cmp
loope
test
and
sub
pop
adc
inc
ja
cmp
push
and
cmc
dec
sbb
fbstp
popf
cs
xchg
cmp
pop
cmp
push
xchg
cmp
pop
cmp
aaa
dec
inc
sub
add
aaa
dec
and
sbb
les
jg
pop
addr16
jbe
jo
js
jo
movs
call
jge
jle
mov
add
ins
mov
fnstcw
popf
jmp
js
mov
dec
clc
push
jle
pop
mov
jge
rol
imul
retf
xchg
inc
fst
xchg
mov
cmp
pop
xchg
dec
hlt
scas
xchg
jae
pop
imul
shl
jae
dec
retf
cld
movs
jl
pop
mov
or
mov
xchg
jg
test
mov
inc
mov
mov
jg
xor
mov
call
ret
call
pop
mov
pop
movs
add
and
xor
and
jo
xchg
dec
or
xchg
mov
enter
mov
(bad)
test
dec
mov
mov
cmps
addr16
test
fnstenv
dec
(bad)
lahf
rcr
adc
push
sbb
dec
push
sub
or
pop
pop
adc
dec
jae
dec
mov
dec
push
cmp
mov
fwait
mov
fcom
cdq
xor
dec
movs
call
xchg
(bad)
xor
mov
scas
stos
ds
aad
xchg
and
fist
and
fist
or
xor
and
fist
or
fidiv
leave
enter
ficom
fadd
icebp
xchg
lea
not
fist
and
fist
aaa
aam
test
sub
outs
fidivr
xor
mov
ds
ret
fiadd
cwde
lea
test
xchg
and
jne
dec
fisubr
shl
sub
mov
inc
and
and
and
ins
repnz
jo
cmp
aam
nop
and
repz
aad
xchg
and
int
movs
enter
ret
ficom
or
xchg
aad
xchg
sub
xor
xchg
stc
dec
data16
ficomp
ror
mov
and
mov
movs
repz
xchg
xor
loop
sbb
cld
leave
xchg
in
arpl
add
leave
xchg
or
jg
jae
movs
es
mov
scas
and
sti
ficomp
movs
push
jle
mov
gs
pop
xor
push
aad
sbb
add
jns
cmp
stos
mov
(bad)
hlt
pushf
mov
push
and
pop
nop
jb
out
inc
mov
div
mov
(bad)
mov
mov
dec
adc
jl
xchg
and
pop
(bad)
pop
fs
mov
cmp
mov
scas
mov
jbe
xchg
xchg
popa
inc
rcl
jo
jb
popf
mov
fcom
pop
data16
sbb
imul
test
pop
push
jecxz
dec
mov
inc
(bad)
mov
fs
addr16
mov
adc
add
fs
addr16
pop
gs
inc
mov
pop
dec
sub
push
hlt
cmp
into
pop
or
dec
cld
jmp
xchg
test
ror
push
sub
mov
inc
push
ret
ins
pop
adc
outs
hlt
jmp
cdq
movs
scas
pop
ror
mov
jge
cmps
and
pushf
jge
test
ins
xchg
ror
push
mov
test
sub
cmp
xchg
dec
push
shl
dec
push
ret
cmp
push
frstor
sbb
leave
jae
sbb
cmps
fwait
sbb
(bad)
pop
inc
jo
or
daa
out
xchg
sub
push
sbb
imul
adc
fwait
or
dec
mov
mov
mov
jp
mov
pop
ds
dec
xchg
or
jo
or
cmps
and
jno
push
arpl
xor
xchg
or
jno
sahf
xchg
or
jno
or
cmp
(bad)
iret
fild
push
movs
or
pusha
add
retf
test
or
jno
and
arpl
xor
rol
push
jle
outs
and
or
push
into
fisub
imul
mov
and
mov
xchg
xchg
mov
stos
scas
and
daa
dec
ret
shl
mov
push
sar
js
sbb
add
ja
sbb
jg
or
sti
or
dec
and
jo
push
gs
ins
daa
retf
(bad)
idiv
fisttp
xchg
inc
push
sbb
out
(bad)
idiv
in
and
cdq
idiv
in
and
sti
idiv
sbb
xchg
jno
cmp
int
nop
xchg
cmp
sbb
(bad)
int
and
cmp
xchg
jno
xchg
or
jo
or
cld
or
xchg
ss
or
sbb
pop
xchg
mov
in
or
xchg
or
xor
(bad)
in
xchg
fwait
mov
jo
fimul
dec
and
stos
cmps
(bad)
dec
xchg
jno
adc
xor
cdq
arpl
or
jo
out
stos
jnp
cdq
inc
xor
dec
xor
cdq
xor
repz
movs
jnp
jns
dec
das
popf
shl
adc
push
nop
or
test
adc
jo
out
mov
sub
cdq
shl
adc
jl
jmp
push
sub
popf
push
push
adc
xor
cdq
adc
jnp
jo
das
cdq
add
mov
repnz
fwait
xor
cdq
loop
or
pop
dec
cmp
jmp
and
(bad)
pushf
ror
push
daa
stc
and
add
(bad)
pop
sub
push
push
out
stos
aas
sub
neg
imul
outs
inc
and
push
jl
or
ds
movs
jae
jbe
sub
test
or
mov
mov
push
es
push
out
div
or
jo
daa
popf
pop
dec
out
stos
adc
pusha
xor
xchg
push
arpl
xor
xor
stos
loop
sub
dec
and
xchg
push
xchg
arpl
pop
xchg
xchg
sbb
xchg
sbb
test
xor
xchg
mov
xor
xor
cwde
addr16
xor
or
jo
or
jo
fsubrp
xor
fwait
addr16
mov
xchg
mov
mov
jno
push
push
and
xchg
or
mov
jno
fwait
jp
xor
xchg
das
adc
or
xor
mov
es
jbe
xchg
call
xchg
fnsetpm(287
jo
stos
mov
or
(bad)
dec
xchg
jno
in
mov
cmps
adc
ss
ja
loope
fwait
mov
jo
sbb
and
xor
sub
aaa
xchg
jo
or
(bad)
jp
xchg
jno
sahf
fbstp
and
mov
ss
sar
fadd
pushf
int
nop
mov
or
jo
or
jo
or
push
in
shl
nop
xchg
or
jo
or
xor
xchg
shl
xchg
mov
jp
xchg
mov
or
jo
or
jno
pop
arpl
or
pushf
inc
stc
push
ins
ror
xchg
movs
mov
out
ss
ja
loope
fwait
mov
jo
sbb
and
xor
sub
aaa
xchg
jo
or
(bad)
xchg
dec
xchg
jno
sahf
xor
and
mov
ss
sar
fadd
pushf
int
nop
mov
or
ins
and
ja
loope
fwait
mov
jo
sbb
and
xor
sub
aaa
xchg
jo
or
mov
xchg
jno
sahf
xchg
or
jno
faddp
shl
fadd
pushf
int
nop
mov
or
ja
and
outs
xlat
idiv
sub
push
test
or
inc
and
inc
fs
aas
xchg
jno
push
push
inc
and
daa
fwait
aam
js
push
xchg
std
dec
movs
and
imul
push
inc
jg
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
addr16
jbe
jo
dec
arpl
fcmovne
pop
jle
dec
pop
jp
pop
retf
test
jg
xchg
imul
je
(bad)
icebp
inc
aam
js
mov
scas
add
push
xchg
xchg
cdq
pusha
cmp
mov
test
push
lods
fwait
xchg
sub
xchg
adc
pop
mov
dec
xchg
ins
(bad)
dec
dec
ins
pop
movs
ror
gs
dec
mov
pushf
and
test
sub
mov
stos
imul
sbb
sub
fnstcw
jg
mov
inc
mov
addr16
adc
push
push
jle
pop
fldl2e
popa
inc
hlt
gs
dec
retf
sub
(bad)
std
popf
lock
sub
xchg
or
sub
mov
mov
mov
gs
pop
nop
cmp
loopne
shl
jp
dec
movs
enter
dec
jecxz
mov
lds
out
xchg
call
imul
mov
sub
mov
sub
jg
jne
inc
pop
hlt
xchg
mov
cmp
jbe
lahf
mov
mov
mov
mov
mov
cdq
jo
pop
mov
pop
and
xor
adc
pop
test
xchg
jmp
movs
jecxz
mov
or
mov
or
mov
or
mov
or
mov
or
xchg
fld
mov
xor
and
adc
mov
inc
jae
and
push
lods
cmp
cwde
or
(bad)
or
les
push
movs
dec
sub
sbb
push
fisubr
xor
or
jno
or
xor
(bad)
jmp
jb
idiv
jae
mov
dec
lea
(bad)
data16
and
gs
and
mov
sbb
and
mov
or
aad
cmps
call
fs
jae
mov
hlt
es
sbb
es
sbb
jb
pop
fadd
in
mov
fidiv
pop
fadd
xor
pop
xor
bound
pop
xor
bound
fbld
aam
sub
in
out
xchg
je
push
outs
es
jae
movs
or
mov
or
mov
or
jbe
lea
xlat
xor
or
xor
or
xor
mul
movs
jl
jo
movs
mul
mov
push
xchg
xor
cdq
mov
pop
test
xor
fadd
daa
mov
sbb
jae
gs
data16
lock
and
mov
sbb
(bad)
into
cs
cmp
mov
movs
es
in
aam
add
outs
jg
pop
nop
das
jmp
ins
fs
mov
div
xor
gs
add
xchg
retf
mov
lahf
nop
popa
dec
lea
mov
xchg
lds
pushf
js
in
test
js
and
or
dec
sbb
popa
pop
mov
out
dec
gs
cdq
xchg
mov
or
jl
lods
and
mov
rcr
push
xchg
and
leave
mov
ja
xor
inc
outs
mov
pop
in
adc
cmpxchg
pop
enter
test
mov
test
jnp
jecxz
jae
sbb
jl
std
shr
dec
clc
cli
or
jl
mov
in
ds
push
add
mov
rcl
mov
stos
mov
addr16
mov
or
mov
mov
xchg
dec
movs
cdq
jo
dec
mov
mov
ret
or
sub
mov
cmp
sahf
xchg
dec
stos
cmp
pop
std
push
cmp
mov
mov
jl
push
fldlg2
cmps
fwait
sbb
cmc
mov
xor
pusha
push
mov
cwde
push
test
mov
cld
je
pop
xor
dec
xchg
test
cmp
repnz
repnz
repnz
repnz
xchg
repz
(bad)
add
mov
repz
mov
ins
add
int
jne
(bad)
add
mov
repz
popf
in
lock
cmp
xchg
pop
iret
cli
jp
fld
test
cmp
push
and
test
cmp
enter
push
jmp
lds
and
mov
push
add
stos
xor
xchg
es
jge
pop
cmp
repz
test
cli
rol
adc
cdq
add
repnz
push
xchg
pop
adc
cmp
and
or
add
movd
in
xor
(bad)
das
xchg
jae
(bad)
xor
(bad)
das
xchg
(bad)
movs
mov
cmp
adc
shl
xchg
pop
adc
cdq
add
repnz
push
xchg
pop
adc
cmp
and
or
add
movd
in
xor
(bad)
das
xchg
jae
(bad)
xor
(bad)
das
xchg
(bad)
movs
repnz
adc
shl
xchg
pop
adc
cdq
add
lock
in
cli
rcl
loop
test
add
sti
lds
cs
push
mov
or
xabort
idiv
push
mov
sti
icebp
jp
jp
push
inc
iret
clc
jp
outs
add
cmp
(bad)
sar
push
test
out
push
jb
(bad)
sub
iret
cli
jp
mov
mov
mov
sti
icebp
jp
jp
push
inc
iret
clc
jp
outs
adc
cmp
addr16
in
sub
mov
pushf
mov
cmp
mov
or
neg
add
repnz
sub
and
cmc
repz
xchg
(bad)
retf
mov
push
inc
mov
xor
cmp
and
mov
pmaxsw
cmp
rcl
in
test
cli
push
xchg
pop
adc
cmp
cmp
(bad)
cmp
test
or
adc
jnp
xchg
and
mov
sar
jmp
xor
pushf
icebp
and
test
out
fs
cmp
shl
cmp
pop
cmp
push
xchg
pop
adc
cmp
sub
mov
outs
inc
pop
in
lods
xchg
(bad)
das
or
cmp
jge
xchg
repz
sbb
pop
addr16
repz
das
das
push
and
push
mov
add
sub
repz
add
and
lds
das
das
add
hlt
cmp
test
es
test
pop
sbb
ss
adc
das
add
xchg
repz
adc
das
pop
and
jge
pop
xchg
repz
mov
dec
movs
es
in
aad
inc
xchg
or
fwait
(bad)
div
pop
shl
pop
stos
aam
test
mov
test
pop
jae
js
xor
imul
sbb
mov
cmp
mov
push
sahf
mov
sub
mov
jge
and
inc
lods
push
jl
push
pop
imul
data16
mul
cdq
mov
push
or
pop
addr16
mov
xor
stos
pushf
sub
push
lock
mov
jge
pop
icebp
xchg
nop
inc
hlt
mov
sbb
mov
test
adc
fdiv
pop
data16
or
jge
pop
shl
xchg
xchg
shr
push
inc
arpl
push
shr
sbb
sti
test
sub
pop
dec
jbe
inc
hlt
data16
dec
movs
fwait
sbb
jge
mov
sub
stos
stos
addr16
aad
repnz
hlt
sub
imul
jle
xchg
adc
fwait
or
pop
popf
add
dec
movs
lea
cmp
addr16
mov
inc
je
jmp
loopne
or
adc
sbb
sbb
jo
ret
movs
cdq
jo
dec
xchg
jbe
fnstsw
xchg
jne
mov
fisttp
(bad)
cmc
aaa
arpl
popf
popa
or
int
mov
aam
or
je
xchg
or
add
int
push
movs
mov
gs
imul
sub
mov
inc
bound
fmul
inc
pop
jmp
mov
imul
gs
jns
cmps
shr
movs
dec
rcl
sbb
pop
adc
mov
outs
add
rcl
add
mov
jo
add
rol
add
cmps
shr
movs
mov
xchg
cmps
rol
imul
daa
jns
cmps
shr
in
xchg
rcl
mov
add
cmps
rcl
add
cmps
shl
js
jge
dec
clc
jns
mov
jge
je
xchg
imul
jle
adc
mov
cmps
ror
aaa
xor
outs
pop
mov
nop
mov
mov
dec
bound
div
xor
addr16
ins
(bad)
fstp
fst
call
jg
rol
pop
scas
movs
sti
test
addr16
sbb
xchg
dec
hlt
mov
jg
push
ret
mov
test
pop
addr16
fldenv
pop
imul
movs
fwait
nop
cmp
sub
push
arpl
jge
int
cmp
mov
mov
pop
popf
ror
in
sbb
imul
repnz
sar
ret
test
sar
and
pop
add
shr
pop
gs
dec
mov
push
dec
nop
bound
loop
push
hlt
and
jl
imul
xchg
mov
adc
mov
pop
pop
push
mov
hlt
mov
jns
movs
lea
jmp
addr16
dec
push
rol
mov
imul
movs
cdq
cwde
popa
pop
gs
mov
inc
fisttp
call
sub
lahf
ins
pop
test
js
js
stc
inc
mov
xchg
(bad)
das
adc
fwait
(bad)
in
adc
repz
bnd
sbb
test
push
xchg
pop
push
outs
or
call
fmul
cmps
fwait
xor
imul
paddw
pop
shl
pop
lods
test
jno
xchg
movs
add
loopne
pop
test
fdivr
pop
data16
xchg
pop
cmp
sub
jle
xchg
push
test
mov
test
mov
pushf
pop
movs
shl
gs
dec
mov
outs
fisttp
data16
mov
addr16
mov
ret
shl
jae
dec
rcl
fwait
xchg
pop
gs
pop
mov
popf
(bad)
pop
popa
out
popa
dec
hlt
jmp
jg
mov
dec
repnz
cmp
arpl
sbb
shl
push
cmps
sbb
fwait
shl
leave
mov
ins
inc
xchg
shr
jecxz
sbb
jnp
pop
daa
jb
out
mov
mov
clc
retf
movs
mov
and
shl
add
mov
jne
inc
xchg
jg
ins
push
ret
mov
push
pop
shr
jns
aad
sbb
pushf
xor
dec
addr16
xor
sbb
adc
and
or
pop
add
cdq
mov
mov
jg
mov
xlat
mov
cs
mov
gs
aad
push
mov
push
cmp
mov
jae
dec
cmp
addr16
addr16
out
sub
stos
jne
es
cmps
sub
push
jne
mov
jecxz
data16
cmps
sub
test
cwde
(bad)
mov
inc
xlat
ret
fistp
jno
jbe
push
movs
jp
pop
cld
pop
push
push
movs
jp
pop
lock
sub
jg
xchg
push
jae
inc
push
push
sahf
or
ins
sti
mov
push
dec
bound
jbe
pop
xor
push
aam
dec
mov
inc
movs
stos
dec
imul
inc
dec
imul
pop
addr16
lea
imul
test
ins
js
adc
push
in
imul
pop
mov
(bad)
push
push
and
pop
nop
mov
movs
shl
jno
jg
div
push
and
or
mov
sub
mov
pop
or
clc
or
shl
imul
stos
inc
adc
mov
mov
movs
pop
movs
retf
lock
pop
mov
mov
jg
std
jne
push
dec
pop
dec
rcr
pop
hlt
push
xchg
jne
popf
jle
fmul
mov
stos
pop
gs
pop
addr16
stc
addr16
mov
jbe
aad
pop
mov
gs
pop
mov
pop
stc
scas
neg
xor
jg
lock
test
imul
dec
retf
mov
popa
sbb
pop
retf
lods
cmp
pushf
jle
clc
push
mov
inc
jnp
mov
jg
div
fldenv
cmps
ret
movs
call
hlt
data16
cdq
cmp
test
dec
mov
inc
mov
adc
cld
pop
lods
ret
cld
jmp
movs
fwait
nop
xchg
sub
popf
cmp
ror
mov
in
jl
mov
data16
mov
(bad)
push
ja
repnz
mov
sub
scas
pop
pop
xchg
shl
mov
mov
pop
pop
xchg
shl
mov
int3
fiadd
lgs
das
fucom
push
sbb
stos
das
cs
xchg
arpl
stos
jmp
int3
fiadd
lgs
push
xchg
scas
pop
pop
xchg
shl
mov
shl
es
fiadd
outs
and
dec
outs
leave
out
sbb
stos
das
cs
xchg
mov
add
xchg
mov
add
mov
cmps
mov
outs
pop
sub
rol
jecxz
ds
sbb
test
sub
not
imul
sbb
mov
(bad)
outs
xchg
stos
xchg
not
rol
mov
shl
cmps
int
add
mov
mov
mov
lds
add
stos
adc
addr16
cmps
int
add
int
xchg
cmps
mov
stos
pop
outs
sbb
arpl
outs
mov
add
push
add
mov
stos
add
aad
mov
mov
mov
push
cdq
addr16
mov
mov
sub
mov
stos
daa
sbb
push
and
out
sub
pop
add
stos
sbb
add
sub
repz
sub
jae
mov
xor
fistp
cmp
out
xchg
jmp
repz
sub
jae
mov
xor
repz
out
sub
pop
add
stos
sbb
add
ud1
adc
sbb
jle
outs
xor
out
scas
int
dec
sub
pop
sbb
outs
pop
sub
fbld
pop
xchg
rcl
int3
cs
scas
ss
arpl
ja
out
add
scas
pop
cmps
mov
and
mov
pop
jae
stos
scas
sub
mov
mov
not
outs
xchg
jae
ja
out
inc
add
xchg
mov
aad
xchg
int
sbb
stos
jb
add
(bad)
sub
mov
ja
jmp
outs
xchg
scas
retf
test
aad
pop
sbb
addr16
mov
ffree
pop
add
cmp
ja
out
push
xchg
aas
xchg
mov
not
outs
xchg
and
mov
pop
jae
arpl
sub
sub
xchg
scas
pop
jecxz
jle
outs
xor
push
imul
scas
cmp
xor
inc
stos
sub
xchg
scas
pop
mov
mov
inc
adc
xchg
rol
mov
xor
push
imul
scas
cmp
test
xchg
inc
adc
xchg
rol
jecxz
jle
outs
xor
out
scas
int
dec
sub
pop
sbb
jp
pop
xchg
pop
add
jnp
push
xchg
aas
xchg
mov
mov
add
add
jnp
push
xchg
addr16
mov
mov
xchg
outs
aad
xor
shl
mov
aad
pop
sub
jg
add
jae
mov
mov
sub
test
jmp
sqrtps
add
mov
xchg
arpl
sub
pop
sub
imul
out
movs
stos
add
xchg
arpl
sub
xlat
xor
xor
fwait
ja
out
sub
mov
sub
addr16
jecxz
mov
mov
jmp
sub
rol
cmp
mul
mov
or
sub
arpl
mov
add
ror
scas
xchg
rol
outs
xchg
jnp
push
xchg
aas
xchg
mov
leave
mov
or
and
add
(bad)
sbb
mov
sbb
fild
sbb
inc
mov
stos
pop
sub
neg
outs
mov
jle
outs
or
and
sbb
add
add
add
add
fbld
or
fild
mov
xchg
mov
cmps
mov
sub
jae
xlat
add
movs
stos
add
xchg
arpl
imul
add
xchg
xor
ja
out
mov
aad
and
inc
mov
adc
mov
aad
adc
ja
jbe
stos
xchg
mov
ffree
pop
add
cmp
ja
out
push
xchg
addr16
mov
int
add
aad
ss
out
fwait
xchg
arpl
ja
out
add
arpl
sub
xlat
xor
xor
xchg
mov
int
add
aad
pop
add
repz
dec
fistp
sub
scas
mov
push
(bad)
sub
scas
xor
mov
shl
aaa
add
pop
push
sub
aas
xchg
jecxz
test
xchg
scas
sub
out
add
add
addr16
das
or
cs
xchg
out
inc
sbb
ds
sub
outs
adc
mov
es
fld
sub
stos
retf
mov
add
outs
xchg
scas
int
dec
fwait
mov
cs
int
jb
mov
cs
mov
cs
mov
(bad)
cs
pop
(bad)
cs
mov
fist
das
and
sub
add
sub
xor
or
out
mov
stos
pop
add
addr16
not
neg
mov
pop
jae
adc
aad
retf
repz
adc
aad
retf
repz
jle
outs
xor
pop
jae
inc
mov
mov
mul
and
mov
mov
and
mov
adc
sub
xor
arpl
pop
mov
push
mov
loope
es
jmp
cmp
repz
cmps
mov
fild
add
ja
mov
fnstcw
xor
xchg
fisttp
dec
imul
das
xor
pop
jae
inc
mov
sbb
stos
sub
repz
repz
jle
outs
sub
jb
mov
mov
outs
xchg
arpl
pop
dec
mov
outs
xchg
arpl
inc
jb
cmp
xor
pop
aad
xchg
cmps
mov
out
inc
mov
mov
and
mov
(bad)
mov
mov
cdq
not
cmp
test
mov
add
(bad)
sbb
add
shl
jg
fist
ja
jae
outs
and
mov
(bad)
push
aaa
mov
add
rcl
jae
push
sub
cdq
addr16
repz
mov
sbb
fistp
and
fisubr
mov
scas
adc
xchg
arpl
add
aas
xor
xchg
fisttp
push
fistp
cdq
(bad)
pop
outs
xchg
stos
call
out
sbb
stos
adc
aad
pop
jae
out
xor
aad
push
fwait
mov
cs
int
sbb
scas
pop
add
repz
mov
add
out
inc
fwait
mov
cs
in
xchg
rep
mul
movups
add
mov
push
mov
aad
xchg
xor
push
setno
outs
mov
push
mov
aad
call
jmp
sub
rol
xor
pop
push
pop
xchg
out
inc
mov
and
outs
leave
arpl
sub
jmp
sub
mov
aaa
lods
neg
outs
add
ja
out
sub
sbb
ret
xchg
out
xchg
add
mov
mov
aad
mov
mov
(bad)
pop
sub
test
mov
mov
sub
mov
add
stos
add
aad
xchg
aad
sub
add
rol
mov
xor
add
(bad)
adc
mov
out
inc
ja
mov
scas
xchg
scas
sbb
mov
fld
aad
add
shr
add
stos
xor
fistp
sub
or
xchg
xchg
sub
out
imul
add
or
sub
dec
add
jle
outs
push
scas
add
out
sub
arpl
sub
pop
adc
xchg
aas
xchg
add
repz
pop
cmp
fwait
ja
out
sub
pop
addr16
jecxz
pop
push
sub
(bad)
sbb
pop
arpl
outs
sub
retf
shr
jae
das
add
(bad)
sbb
and
not
outs
dec
neg
mov
stos
es
mov
out
ss
aas
xchg
repz
mov
sub
mov
inc
cmp
mov
mov
leave
mov
ja
neg
mov
stos
es
sbb
retf
shl
add
fild
fwait
mov
shl
push
xchg
das
xor
add
iret
mov
imul
mov
scas
ss
arpl
sbb
stos
jb
xchg
stos
dec
sbb
mov
jae
push
sub
mov
stos
retf
fild
addr16
stos
inc
repz
mov
sbb
addr16
(bad)
mov
sbb
mov
mov
pop
(bad)
pop
outs
dec
mov
sbb
xor
repz
stos
add
aad
(bad)
ja
out
add
aas
xor
push
sub
mov
shl
aaa
add
test
mov
fist
or
fistp
mov
cs
xchg
out
inc
mov
mov
sub
test
imul
das
add
out
inc
mov
xchg
fisttp
add
neg
mov
add
fidivr
aad
push
mov
add
rcl
mov
xchg
fist
jg
arpl
sub
mov
adc
xchg
arpl
sub
scas
sub
test
arpl
push
mov
not
outs
xchg
das
inc
ja
out
cmp
adc
add
arpl
cmp
mov
sub
arpl
xor
mov
mov
mov
add
arpl
sub
das
add
fisttp
add
scas
add
repz
mov
(bad)
imul
add
add
fistp
cmp
mov
add
(bad)
neg
add
fistp
cmp
mov
add
(bad)
neg
add
arpl
out
dec
jnp
sub
stos
jb
pop
xor
(bad)
mov
das
add
(bad)
sub
add
fild
xchg
stos
adc
das
add
(bad)
sub
leave
addr16
mov
adc
call
fwait
movs
pop
xchg
pop
inc
popa
xchg
mov
push
bound
mov
add
bound
stos
fbstp
cmp
add
push
bound
mov
adc
bound
je
ret
xchg
add
add
je
js
push
stos
add
je
sbb
mov
adc
or
les
pop
pop
outs
adc
dec
mov
mov
ret
mov
out
mov
and
call
pop
bound
mov
ficom
mov
mov
in
int3
push
lods
loop
jg
pop
imul
sbb
test
gs
fld
sti
jle
pusha
addr16
mov
and
xor
cmp
pop
push
jo
jo
jg
mov
call
fld
mov
pop
rol
pop
mov
jl
push
push
mov
or
imul
mov
cmps
mov
idiv
jg
fldcw
mov
mov
mov
mov
lea
sbb
xchg
mov
push
xor
and
popa
nop
cmp
int
pop
pushf
jle
add
jmp
jl
pop
ror
push
jle
pop
loope
(bad)
int
icebp
inc
cld
or
mov
fnstsw
inc
cmps
and
cmps
mov
mov
jmp
jb
push
cmc
adc
jg
mov
add
lahf
or
icebp
daa
nop
js
pusha
outs
imul
mov
xchg
jl
inc
rol
push
inc
retf
dec
cdq
push
or
(bad)
push
cdq
fdiv
lahf
in
cmp
movs
call
mov
cmc
push
inc
adc
repnz
mov
sub
imul
fstp
xchg
sub
imul
fstp
xchg
sub
imul
fstp
xchg
sub
imul
fstp
xchg
sub
imul
fstp
xchg
sub
imul
fstp
xchg
sub
imul
fstp
xchg
sub
imul
fstp
xchg
sub
imul
fisttp
pop
in
pop
cli
sub
and
lock
repnz
pop
sbb
adc
retf
pop
dec
movs
call
adc
and
dec
movs
call
cmp
jbe
gs
inc
xchg
fs
mov
div
mov
data16
movs
arpl
push
push
xchg
js
in
daa
sbb
mov
xchg
lea
movs
addr16
mov
xchg
loop
popa
mov
pop
xchg
mov
jmp
mov
fsubp
lahf
inc
pop
xchg
rcr
jb
sub
data16
add
stos
inc
mov
retf
mov
cmps
adc
inc
jne
adc
and
jg
mov
inc
add
xchg
pop
jg
xchg
sbb
push
xchg
test
and
retf
cmp
mov
xor
jb
mov
lahf
xchg
inc
mov
in
in
mov
xchg
stos
imul
jae
dec
pushf
and
xchg
and
mov
push
shr
retf
aam
mov
mov
test
mov
loopne
adc
mov
xchg
je
ret
movs
cdq
jo
dec
xchg
ret
mov
push
lods
pusha
movs
imul
mov
call
movs
cwde
xchg
push
jno
xchg
sbb
retf
shr
jle
pop
ret
movs
cwde
js
js
add
test
mov
nop
std
push
pop
xchg
fistp
push
mov
(bad)
aad
or
sbb
mov
aaa
movs
lods
(bad)
cmps
and
loopne
sub
leave
push
mov
mov
xor
push
or
adc
(bad)
cmps
and
sbb
sbb
dec
or
jmp
not
cmps
and
adc
pushf
sbb
jmp
cmps
and
lock
inc
and
ja
addr16
mov
shl
shl
lods
mov
jge
aaa
jl
pop
lods
loopne
push
xchg
nop
inc
arpl
adc
addr16
pop
scas
inc
test
jg
xchg
pop
sbb
push
pop
stos
sbb
out
mov
fcmovnbe
ror
rcl
fs
hlt
push
mov
pop
push
sar
push
ret
ins
pop
mov
sub
pop
addr16
mov
call
es
add
sbb
fs
mov
sbb
pop
jo
enter
lea
ss
fs
pop
jge
pop
mov
icebp
pop
gs
pop
pushf
jne
dec
rol
cmp
sub
movs
pop
(bad)
lods
sbb
shl
jmp
mov
mov
sub
jo
jg
popw
jne
addr16
dec
sbb
mov
xor
cmp
mov
sbb
pop
adc
adc
push
ret
mov
fwait
or
fsubr
cwde
js
in
cmp
sub
pusha
mov
test
lahf
pop
rcr
inc
cld
adc
enter
pop
(bad)
std
xlat
sub
sub
rol
out
pusha
test
ins
outs
sbb
(bad)
jmp
push
vpand
sbb
and
mov
pop
sbb
pusha
sub
std
int
enter
(bad)
mov
ret
sbb
adc
int
xor
or
ret
call
adc
or
sti
(bad)
lock
outs
dec
iret
and
fsubr
sbb
int
fdiv
fmul
pop
repnz
outs
pop
xor
inc
add
fsub
mov
jb
jg
push
jge
dec
sar
pop
retf
mov
jl
xchg
push
cmp
mov
sahf
pop
sub
or
int
mov
aaa
into
inc
mov
add
mov
sub
out
pop
xchg
cmps
sub
jmp
pop
push
shl
jg
xchg
lea
imul
mov
retf
std
jne
icebp
cmp
imul
mov
(bad)
cmp
jne
ins
jecxz
mov
movs
addr16
clc
mov
push
adc
fs
jo
dec
xchg
out
in
mov
hlt
fstp
pop
nop
leave
mov
mov
in
movs
pop
retf
mov
xchg
or
pop
jo
fldenv
mov
jne
fnstenv
jge
mov
movs
mov
pop
dec
mov
cmp
mov
and
mov
test
mov
mov
movs
pop
xchg
xchg
icebp
jmp
test
(bad)
or
movs
call
sub
je
cmp
aaa
mov
data16
out
(bad)
dec
outs
movs
sub
jae
test
cmps
(bad)
xor
sar
into
xchg
cmps
xchg
test
dec
into
xchg
cmps
neg
mov
cmps
add
cmp
xchg
push
mov
jno
adc
mov
int
cmps
out
add
cmp
and
sub
rcl
dec
sbb
lea
pop
popa
xchg
pop
mov
mov
mov
pop
mov
mov
jge
mov
mov
(bad)
jae
pop
mov
addr16
xor
mov
pop
pop
mov
mov
gs
pop
gs
pop
gs
xor
jb
popa
(bad)
out
arpl
out
xor
lea
xor
retf
(bad)
cli
cmp
bound
lea
retf
pop
lea
jmp
and
daa
lea
or
out
lea
(bad)
fisubr
lea
jp
inc
lods
lea
jle
lea
lea
aaa
jl
data16
jl
adc
lea
aam
(bad)
loop
ins
lea
sti
bound
push
(bad)
lea
lea
lea
arpl
into
mov
xchg
gs
out
adc
call
(bad)
jmp
lea
mov
data16
cli
cmps
lea
pop
lea
mov
lea
ja
lea
iret
lea
lea
loop
(bad)
(bad)
xor
dec
cmp
imul
scas
mov
popa
lea
aad
lea
in
lea
jmp
call
lea
fldenv
mov
and
mov
add
imul
(bad)
fwait
popa
(bad)
repnz
lods
mov
xchg
jge
mov
add
push
cli
pop
outs
xchg
or
ss
outs
xchg
outs
xchg
imul
pop
ins
xchg
outs
xchg
leave
outs
xchg
loope
xchg
xchg
push
arpl
out
ins
xchg
imul
jmp
xchg
cmp
sub
outs
xchg
and
push
outs
xchg
sub
dec
pop
outs
xchg
jb
xchg
outs
xchg
gs
xchg
imul
jle
ins
xchg
xchg
outs
xchg
popf
outs
xchg
jge
xchg
mov
lea
xchg
cli
lea
sbb
into
loop
mov
xor
mov
out
mov
mov
frstor
mov
push
and
mov
push
out
mov
fidivr
mov
out
jmp
mov
xchg
mov
mov
call
mov
cmps
call
sbb
out
mov
adc
adc
sbb
mov
add
add
mov
not
mov
(bad)
loop
mov
repnz
enter
leave
mov
push
aad
push
mov
enter
leave
mov
mov
retf
mov
mov
aad
adc
mov
mov
and
push
daa
add
bound
adc
push
inc
adc
dec
inc
adc
or
movs
repnz
jg
pop
gs
pop
gs
pop
gs
pop
addr16
jbe
jo
dec
arpl
inc
cwde
push
jle
dec
fnstsw
pop
enter
jbe
mov
pop
out
out
bound
pop
inc
jb
dec
clc
mov
mov
lea
inc
xchg
pushf
jg
push
mov
or
mov
cmp
jge
mov
jecxz
imul
mov
inc
sub
in
adc
push
shl
or
pop
in
scas
mov
aas
mov
or
push
aad
imul
ret
ins
pop
jl
jg
push
ret
ins
pop
adc
loope
movs
pop
mov
fdiv
jnp
addr16
push
jle
inc
fisub
hlt
inc
jb
pop
mov
push
pop
push
imul
ja
std
jge
xchg
sbb
push
push
and
rol
ror
rcr
ret
movs
call
ins
fwait
or
xor
inc
jg
jge
dec
xchg
imul
call
movs
(bad)
fld
sti
data16
sbb
mov
xor
cdq
loopne
cmp
inc
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
adc
(bad)
dec
adc
sbb
inc
adc
dec
pop
adc
adc
sbb
dec
inc
adc
and
sbb
dec
imul
mov
dec
popf
adc
int3
sbb
dec
inc
adc
retf
hlt
sbb
(bad)
sbb
jnp
popf
adc
test
sbb
inc
adc
(bad)
dec
leave
adc
pushf
sbb
daa
inc
adc
(bad)
dec
icebp
adc
mov
sbb
inc
adc
(bad)
dec
in
iret
dec
sbb
xlat
inc
adc
mov
jmp
sbb
fild
xchg
rol
push
mov
les
mov
les
mov
les
mov
les
mov
ret
inc
sbb
sub
mov
dec
adc
jge
dec
pop
and
push
adc
dec
adc
jl
pusha
imul
push
sbb
retf
dec
pop
loop
push
mov
les
retf
push
mov
les
fisubr
and
sbb
fisttp
xor
sbb
iret
push
mov
les
jmp
mov
les
ret
xor
loop
inc
sbb
retf
push
mov
les
fld
xor
sbb
iret
push
mov
les
jecxz
mov
les
cmp
rol
inc
sbb
retf
push
mov
les
fld
adc
sbb
iret
push
mov
les
mov
adc
mov
adc
dec
sbb
(bad)
pop
and
adc
sub
xlat
(bad)
sbb
mov
(bad)
fs
adc
push
add
adc
inc
adc
test
movs
sbb
(bad)
pop
cmp
adc
push
stc
sbb
inc
sbb
jmp
mov
les
sbb
push
xor
mov
mov
les
jmp
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
or
adc
js
jge
cwde
xchg
push
ret
push
mov
les
jmp
mov
les
jmp
add
adc
inc
add
aad
push
adc
inc
adc
or
neg
or
mov
aam
leave
adc
inc
sbb
mov
mov
aam
jmp
adc
inc
add
push
mov
retf
aam
xor
iret
push
sub
jmp
adc
dec
xor
jb
push
mov
les
jmp
mov
les
retf
inc
jmp
(bad)
jmp
sbb
mov
les
retf
je
loop
inc
sbb
jmp
add
adc
inc
add
adc
inc
add
adc
inc
cmp
mov
les
jmp
add
adc
inc
add
adc
inc
add
adc
inc
cmp
mov
les
jmp
add
adc
inc
sbb
sbb
inc
adc
push
retf
adc
js
adc
inc
sbb
mov
inc
sbb
push
lds
out
or
xlat
pop
xor
adc
dec
xor
and
sbb
(bad)
adc
sbb
shl
cmp
mov
push
test
adc
fs
adc
fs
adc
inc
adc
loope
adc
adc
pop
cmp
adc
pop
xor
adc
pop
adc
adc
push
stc
add
inc
sbb
sti
cwde
aas
sbb
ret
push
adc
mov
mov
push
movs
sbb
(bad)
pop
sbb
adc
dec
ss
mov
(bad)
push
sbb
mov
push
xchg
sbb
mov
push
movs
sbb
mov
push
mov
adc
inc
sbb
(bad)
pop
cmp
adc
push
icebp
rol
inc
sbb
push
imul
jmp
adc
cmp
dec
xor
push
retf
dec
jp
jmp
add
adc
inc
add
adc
inc
adc
cmp
pop
cmp
adc
fs
adc
movs
add
xchg
(bad)
stc
adc
inc
add
adc
inc
adc
mov
adc
pop
xor
adc
pop
sbb
adc
fs
adc
les
adc
inc
adc
lea
inc
push
movs
sbb
(bad)
pop
cmp
adc
pop
in
push
test
adc
fs
adc
push
add
adc
inc
adc
lea
inc
push
movs
sbb
mov
fxch
dec
sbb
push
(bad)
scas
sbb
sti
push
sbb
mov
mov
adc
inc
sbb
retf
push
mov
les
fld
xor
sbb
iret
push
mov
les
jecxz
mov
les
daa
dec
sbb
(bad)
pop
xor
adc
dec
lds
pop
inc
sbb
out
stos
xor
sbb
out
xor
adc
dec
xor
and
sbb
(bad)
xor
sbb
fld
adc
sbb
fisttp
add
sbb
shl
sbb
adc
dec
pop
sbb
adc
pop
xor
adc
dec
xor
and
sbb
fild
xchg
rol
imul
(bad)
pop
sbb
adc
pop
or
mov
pop
inc
sbb
mov
daa
inc
sbb
mov
aaa
inc
sbb
mov
mov
adc
inc
adc
push
fnsave
cmp
dec
adc
retf
ret
sbb
sahf
adc
cmp
pop
cmp
adc
pop
xor
adc
dec
adc
enter
xor
sbb
out
or
daa
pop
xor
adc
pop
adc
adc
dec
xor
xor
sbb
fld
and
sbb
fild
xor
sbb
out
or
inc
pop
xor
adc
dec
xor
and
sbb
(bad)
adc
sbb
fstp
sbb
out
or
xlat
pop
xor
adc
dec
xor
and
sbb
ret
sbb
faddp
dec
ror
retf
inc
sbb
ret
pop
adc
cmp
inc
sbb
mov
adc
inc
sbb
sti
push
sbb
mov
mov
les
jmp
add
adc
inc
add
adc
inc
or
adc
push
sbb
iret
cwde
or
push
mov
les
retf
test
fld
xor
sbb
iret
push
mov
les
jecxz
mov
les
jmp
mov
les
retf
xchg
mov
les
daa
push
sbb
(bad)
dec
and
mov
inc
or
fld
xor
sbb
iret
push
mov
les
ret
push
call
inc
sbb
fild
xchg
rol
push
mov
les
mov
les
mov
les
mov
les
mov
ret
inc
sbb
cmp
mov
dec
adc
in
retf
dec
pop
and
push
adc
dec
adc
in
(bad)
and
sbb
fld
and
sbb
retf
dec
pop
loop
push
mov
les
retf
push
mov
les
fisubr
and
sbb
fisttp
xor
sbb
iret
push
mov
les
jmp
mov
les
ret
mov
loop
inc
sbb
retf
push
mov
les
fld
xor
sbb
iret
push
mov
les
jecxz
mov
les
cmp
rol
inc
sbb
retf
push
mov
les
fld
adc
sbb
iret
push
mov
les
fwait
dec
aad
int3
mov
adc
dec
sbb
(bad)
pop
and
adc
cmp
xlat
(bad)
sbb
mov
(bad)
fs
adc
push
add
adc
inc
adc
cmp
loop
movs
sbb
(bad)
pop
cmp
adc
push
stc
sbb
inc
sbb
jmp
mov
les
sbb
push
xor
mov
mov
les
jmp
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
or
adc
js
in
iret
cwde
xchg
ret
push
mov
les
jmp
mov
les
jmp
add
adc
inc
add
aad
push
adc
inc
adc
ds
pusha
mov
out
mov
(bad)
(bad)
(bad)
fwait
popa
sbb
dec
fnstenv
outs
loop
pop
jmp
inc
mov
ja
mov
cwde
mov
dec
adc
pop
ret
add
push
push
and
and
fdiv
push
(bad)
lock
aam
mov
in
nop
add
pop
(bad)
mov
cmp
outs
stos
movups
sub
xor
inc
sbb
dec
out
adc
test
adc
adc
rol
adc
dec
sbb
adc
movlps
xchg
cmp
outs
test
adc
push
cmp
iret
inc
in
pop
test
adc
push
mov
rol
pop
pop
test
adc
inc
adc
cmp
and
adc
xchg
cmp
pop
test
cmp
mov
sti
push
xchg
std
rol
(bad)
pop
test
adc
push
mov
rol
pop
pop
test
adc
push
sbb
cmp
and
adc
push
cmp
mov
sti
push
xchg
cld
rol
pop
pop
test
adc
mov
sbb
pushf
hlt
push
mov
sub
adc
inc
sbb
adc
cmc
push
(bad)
js
cli
sub
in
adc
cmc
push
(bad)
js
jmp
cmc
push
mov
mov
sbb
jl
push
mov
sub
adc
inc
sbb
adc
movlps
xchg
pop
sub
adc
push
(bad)
in
sbb
inc
adc
pop
(bad)
enter
inc
add
arpl
inc
and
add
rol
pop
fild
mov
adc
inc
add
adc
inc
sbb
repz
jle
xor
cld
rol
addr16
test
adc
adc
or
push
mov
jecxz
movups
xor
push
aam
pop
push
leave
push
adc
adc
test
ret
pop
push
leave
push
adc
cmp
mov
sbb
xor
(bad)
push
into
sub
push
sbb
ins
hlt
push
(bad)
jo
mov
leave
push
xor
fsub
pop
xor
aaa
inc
int
retf
pop
jecxz
inc
call
inc
cdq
sub
(bad)
stos
sbb
mov
mov
sub
xchg
cli
cwde
push
sbb
inc
and
fucomi
adc
rol
dec
ss
pop
add
inc
push
xchg
jmp
xor
cmp
pop
add
mov
int
inc
push
hlt
push
(bad)
test
adc
inc
aad
sbb
sbb
(bad)
mov
(bad)
push
dec
and
mov
jp
inc
sbb
pop
push
add
packssdw
sub
xor
mov
sbb
arpl
adc
mov
ror
and
mov
stos
fiadd
pop
push
add
adc
stos
in
cs
sub
dec
mov
jmp
inc
pop
jmp
retf
and
int
das
inc
sbb
(bad)
call
adc
adc
inc
sbb
pop
scas
sbb
mov
jmp
push
mov
(bad)
pop
call
inc
(bad)
imul
fstp
mov
pop
cmp
into
add
cmp
add
pop
or
cmp
nop
mov
lds
scas
and
push
out
scas
test
inc
sbb
dec
adc
loop
xchg
or
xlat
nop
ins
pop
jmp
push
fld
xor
retf
inc
push
sbb
in
hlt
add
aaa
push
leave
add
pop
int
retf
imul
xor
pop
cmp
cmp
retf
dec
adc
dec
adc
adc
and
xor
push
pop
jmp
push
movups
push
adc
rol
daa
iret
stos
movhlps
adc
or
push
mov
fist
(bad)
rol
adc
inc
aad
inc
in
jge
inc
add
ret
pop
add
xchg
dec
jge
inc
add
ret
pop
add
fild
xor
stos
mov
sbb
cld
hlt
add
mov
adc
cwde
(bad)
xor
or
push
(bad)
call
dec
adc
inc
(bad)
adc
rol
lods
loopne
inc
std
rol
pop
scas
stos
movhlps
inc
sbb
sti
adc
or
and
inc
sbb
or
pop
or
sub
(bad)
stos
movups
inc
(bad)
popa
dec
push
push
sbb
jecxz
and
or
into
in
pop
mov
rol
mov
adc
or
sbb
inc
sbb
or
push
rcl
pop
sub
mov
std
rol
or
mov
cld
rol
add
push
mov
mov
(bad)
in
sbb
mov
pop
jecxz
sbb
mov
(bad)
nop
mov
sub
cmp
jp
push
sbb
adc
clc
mov
outs
inc
mov
mov
push
add
adc
mov
sub
(bad)
in
sbb
mov
add
jne
sbb
pop
adc
movs
sbb
inc
adc
adc
add
adc
mov
addr16
pop
adc
in
sbb
mov
xor
push
mov
and
adc
adc
or
xor
inc
sbb
or
or
xchg
xchg
(bad)
rol
or
adc
or
sbb
inc
sbb
or
adc
pop
sbb
mov
cmp
or
fimul
inc
(bad)
popa
inc
adc
and
ror
mov
push
sbb
cmp
xor
inc
call
push
sbb
retf
cli
push
cmp
push
int
add
cmp
mov
adc
aam
sbb
sub
loop
cmps
sbb
inc
adc
adc
pop
sbb
outs
inc
mov
sbb
(bad)
mov
sbb
jecxz
iret
call
arpl
inc
mov
(bad)
out
or
adc
call
mov
xchg
retf
push
rcl
pop
stos
movlps
adc
inc
test
(bad)
in
xor
hlt
push
sbb
xlat
dec
adc
mov
mov
jge
in
dec
mov
xchg
lds
adc
push
lods
(bad)
rol
mov
mov
xchg
les
sbb
sub
push
(bad)
dec
and
out
vmread
(bad)
pop
add
fistp
sbb
(bad)
cmc
push
(bad)
dec
out
stos
sub
adc
popa
and
stos
sub
sbb
mov
pop
mov
inc
sbb
(bad)
call
movups
or
addr16
movups
mov
fucom
mov
and
sub
dec
xchg
cli
sub
push
cli
push
loope
rol
adc
inc
sbb
pop
jno
pop
lds
cld
repz
cmc
add
in
test
mul
aas
test
adc
dec
mov
sti
pushf
jnp
retf
mov
sub
cmp
adc
push
(bad)
pusha
jecxz
cli
push
adc
rol
pop
iret
test
iret
sbb
push
sbb
adc
add
js
xor
jb
not
inc
pop
ficom
daa
xchg
mov
cmc
add
adc
push
mov
push
sbb
fist
sbb
into
call
sbb
adc
nop
nop
mov
mov
mov
add
arpl
inc
and
add
rol
cmp
lods
cmc
push
(bad)
push
sbb
jae
cld
rol
out
test
adc
xchg
or
hlt
mov
xor
rol
adc
inc
add
adc
inc
sbb
inc
out
cmc
add
movs
dec
pop
xor
sub
adc
nop
sub
ins
test
(bad)
call
test
repz
hlt
push
(bad)
mov
inc
mov
sbb
ins
test
(bad)
test
stos
sub
les
sub
adc
push
mov
jmp
add
push
mov
lds
cld
repz
cmc
add
nop
sub
int3
hlt
add
cmp
mov
lds
ins
add
leave
stos
cmp
mov
rol
push
retf
scas
sbb
adc
mov
(bad)
jns
imul
inc
sbb
sbb
push
pop
outs
test
adc
es
scas
dec
mov
jecxz
adc
div
inc
sbb
adc
aaa
daa
xchg
mov
pop
hlt
rol
es
push
(bad)
and
sar
sbb
add
sbb
rcr
push
mov
mov
hlt
out
dec
jmp
or
test
daa
jg
jbe
jo
dec
out
inc
xor
mov
or
sub
pxor
mov
out
das
xor
and
xchg
pop
mov
(bad)
pop
mov
sahf
loop
lds
jge
mov
adc
mov
pop
jl
dec
mov
movs
ror
pop
gs
pop
pop
dec
test
jg
popa
jle
dec
cld
xchg
jge
pop
lea
adc
call
mov
inc
hlt
add
jg
sbb
sbb
dec
pop
dec
xchg
pop
gs
lock
xchg
push
gs
pop
mov
push
mov
test
pop
call
add
imul
adc
retf
push
mov
stos
adc
mov
sbb
imul
push
dec
fld
mov
mov
inc
mov
xchg
ror
xchg
loope
iret
jl
pop
xchg
aad
adc
mov
test
jmp
pusha
mov
hlt
xchg
lock
push
dec
cmps
stos
addr16
ins
push
xor
std
je
add
add
push
mov
in
mov
call
sub
jo
sti
mov
dec
movs
ret
movs
fwait
nop
popa
fmul
pop
aad
mov
and
ins
mov
xchg
js
rol
addr16
inc
mov
push
jno
add
arpl
daa
imul
cld
ins
and
mov
outs
(bad)
int3
push
or
mov
outs
mov
xchg
pop
push
or
and
sbb
push
gs
dec
jmp
out
aad
mov
cmp
neg
outs
cmc
pop
gs
dec
mov
out
pop
mov
push
xchg
mov
jae
adc
addr16
mov
jmp
lahf
xchg
xor
shr
inc
mov
repnz
cmps
xchg
pop
rcr
xchg
inc
cmps
xchg
jp
dec
hlt
inc
xchg
pusha
addr16
push
jg
pop
jns
xor
dec
xchg
stc
inc
pop
sahf
adc
fs
jg
sub
pop
pop
dec
jno
addr16
adc
jg
sti
inc
jg
pop
rol
shl
sub
cwde
pop
data16
jmp
jo
icebp
dec
addr16
icebp
pop
gs
or
sbb
mov
mov
icebp
into
jmp
popa
jl
pop
mov
test
ret
mov
mov
imul
push
jb
popf
jbe
push
hlt
mov
dec
movs
call
mov
push
push
mov
addr16
sub
cmp
mov
cmc
xchg
std
jbe
jl
lds
pop
dec
hlt
stos
nop
jno
(bad)
mov
mov
jle
push
cmps
call
push
or
adc
mov
stos
ja
mov
cdq
js
ins
inc
mov
add
test
or
mov
sbb
inc
hlt
dec
in
mul
mov
inc
mov
(bad)
and
fs
sub
in
nop
addr16
add
call
inc
sub
cld
adc
add
js
sub
cwde
imul
(bad)
mov
das
push
fwait
retf
xor
loope
mov
adc
push
mov
jne
mov
shl
fidiv
mov
dec
push
cmp
xchg
nop
xchg
out
scas
mov
and
clc
push
jle
pop
popa
mov
mov
rol
pop
bound
pop
add
push
mov
popa
dec
pop
mov
call
and
sub
sbb
rcl
aad
cmc
mov
sar
sub
(bad)
gs
inc
pop
fs
sbb
sar
or
pop
jge
test
jg
inc
je
cmp
xchg
sbb
imul
push
sub
jno
adc
fldenv
out
push
mov
push
jle
pop
sub
jo
pop
mov
sbb
fisttp
jle
jne
adc
dec
or
aam
or
mov
cdq
mov
das
shl
mov
sub
mov
jne
movs
leave
or
fstp
pop
(bad)
loopne
movs
fwait
nop
leave
mov
cwde
or
jbe
fwait
shl
lea
dec
push
xchg
dec
mov
xor
mov
pop
push
sbb
les
scas
or
inc
rol
bound
and
mov
add
inc
mov
call
data16
fisub
sbb
push
scas
add
inc
call
dec
jmp
mov
mov
xor
add
data16
jmp
test
sub
sbb
mov
sbb
inc
dec
add
data16
jmp
test
or
sbb
xchg
lods
or
(bad)
rol
bound
add
mov
add
bound
and
data16
fsub
sbb
push
lods
add
(bad)
call
dec
jmp
mov
mov
xor
lock
jmp
test
sub
sbb
mov
sbb
bound
hlt
data16
jmp
test
or
sbb
xchg
lods
or
loop
add
bound
pusha
jmp
mov
cwde
mov
add
loop
add
bound
and
data16
fsub
sbb
push
lods
add
loop
add
data16
mov
mov
xor
lock
jmp
test
sub
sbb
mov
sbb
loop
add
data16
jmp
test
or
sbb
or
inc
rol
bound
and
mov
add
inc
mov
call
data16
fsub
sbb
push
lods
add
inc
call
dec
jmp
mov
mov
xor
lock
jmp
test
sub
sbb
mov
sbb
inc
dec
add
data16
jmp
test
or
sbb
xchg
lods
or
ret
in
or
push
movs
cwde
mov
add
ret
call
data16
fsub
sbb
push
lods
add
ret
in
data16
mov
mov
xor
lock
jmp
test
sub
sbb
mov
sbb
ret
hlt
data16
jmp
test
or
sbb
or
mov
push
les
adc
call
data16
fsub
sbb
push
lods
add
mov
push
les
xor
lock
jle
les
gs
sub
lods
sbb
mov
push
les
gs
sub
scas
or
jb
add
bound
adc
mov
add
jb
add
bound
adc
gs
sbb
push
scas
add
jb
add
mov
bound
cld
xor
add
mov
jle
adc
gs
cld
mov
sbb
jb
add
mov
jp
adc
gs
cld
xchg
mov
sbb
mov
mov
mov
add
test
sbb
mov
sbb
mov
mov
imul
push
imul
pminsw
dec
push
ja
hlt
out
mov
mov
imul
xchg
lods
in
stc
pop
pcmpgtd
dec
push
ja
hlt
out
mov
mov
imul
adc
xchg
mov
out
stc
push
bswap
jns
dec
push
ja
hlt
out
mov
mov
imul
xor
lods
in
stc
jp
pmaxub
dec
push
ja
hlt
out
mov
mov
imul
adc
xchg
mov
out
stc
jle
cvtps2pd
dec
push
ja
hlt
out
mov
mov
imul
call
lods
in
stc
bound
sub
dec
push
ja
hlt
out
mov
mov
imul
in
mov
lock
daa
add
xchg
mov
lock
daa
add
xchg
mov
lock
daa
add
xchg
mov
lock
daa
add
xchg
mov
lock
daa
add
xchg
mov
lock
daa
add
xchg
mov
lock
daa
add
xchg
mov
lock
daa
add
xchg
mov
lock
daa
add
xchg
mov
lock
daa
or
call
in
call
hlt
call
call
call
hlt
call
jmp
push
xlat
cmps
gs
cld
aas
and
inc
hlt
call
(bad)
gs
cld
aas
or
add
call
lahf
mov
add
add
call
fsub
cld
fist
clc
adc
mov
fs
add
fsubr
mov
and
mov
imul
sbb
and
neg
loope
inc
imul
adc
icebp
push
out
inc
arpl
push
mov
jne
mov
shl
mov
ror
xchg
xchg
jns
(bad)
mov
mov
push
pop
lods
rcl
xchg
(bad)
pop
data16
adc
ficom
call
data16
test
lea
mov
sbb
xchg
pop
imul
xchg
jno
cmps
xchg
adc
addr16
mov
mov
cmp
xchg
rcr
mov
hlt
jle
stos
addr16
xchg
push
icebp
inc
cld
ins
jge
pop
rcr
gs
cmc
pop
data16
add
push
and
cmp
clc
jne
mov
mov
outs
int3
xchg
aam
sub
mov
push
sar
push
cmp
mov
pop
sub
mov
or
fwait
or
or
arpl
push
movs
retf
or
xchg
sbb
mov
and
mov
enter
jno
jo
retf
inc
jne
adc
fs
rcr
mov
mov
lods
xor
cmp
lea
dec
retf
inc
ja
adc
std
je
or
fwait
or
and
mov
xrelease
pop
lds
mov
pop
scas
mov
mov
push
movs
xor
mov
mov
add
arpl
scas
stos
ret
mov
retf
jp
test
imul
mov
in
shl
xchg
iret
scas
mov
mov
movs
mov
jmp
lods
scas
not
dec
mov
fnstcw
lods
jg
mov
retf
cwde
pop
jmp
lods
cmps
jge
mov
shl
addr16
jp
inc
mov
jp
xchg
mov
or
xor
push
mov
mov
mov
ror
mov
cmps
mov
iret
mov
cmp
and
mov
and
mov
jmp
mov
loope
pop
outs
movs
pop
gs
dec
sub
mov
fst
xchg
mov
cmc
fstp
outs
mov
push
mov
jbe
mov
mov
jns
aaa
fist
scas
cmp
out
(bad)
js
js
sub
iret
mov
imul
pop
mov
inc
jl
pop
push
shl
ret
movs
pushf
cmp
dec
xchg
push
popa
mov
pop
pop
call
xor
jle
and
popf
jae
dec
mov
adc
jne
rcr
ret
ins
pop
test
cdq
mov
mov
add
stc
jge
pop
or
jo
mov
jge
pop
fs
cmp
std
ja
push
mov
mov
push
push
jle
pop
and
push
hlt
sahf
popf
dec
movs
cdq
cmp
pop
fstp
xchg
(bad)
loop
gs
test
mov
push
fbld
ja
out
mov
push
lods
pop
push
xor
add
aad
nop
aad
add
dec
movs
cdq
jo
pop
mov
pop
fxch
add
push
mov
adc
sar
mov
pop
and
jl
xor
sbb
movs
pop
adc
jno
jp
test
jns
cmp
add
xlat
add
loopne
out
sub
adc
test
jne
inc
fadd
mov
fstp
stos
sbb
jg
sahf
aaa
mov
daa
jae
pop
pop
inc
aaa
mov
shr
pop
add
jp
add
mov
push
pop
add
xor
add
cmps
mov
mov
xor
cmp
fisttp
inc
je
or
jmp
adc
xchg
mov
jne
mov
shl
pop
scas
ins
mov
xchg
adc
ins
clc
mov
mov
mov
cdq
dec
(bad)
xchg
pop
gs
or
cmps
ins
aam
xchg
and
movs
inc
cmps
test
mov
and
jnp
pop
mov
cmp
addr16
mov
dec
ins
mov
pushf
add
mov
call
jp
mov
mov
or
scas
retf
inc
ja
or
jp
retf
sub
pop
mov
jle
in
data16
neg
jno
dec
mov
retf
sbb
dec
loope
push
sti
mov
mov
push
test
gs
leave
jno
mov
xor
mov
push
push
lea
imul
mov
in
outs
test
pop
pop
adc
dec
dec
pushf
jle
or
jno
sub
jne
sbb
jo
dec
pop
dec
jge
call
hlt
pop
nop
sub
cwde
mov
rcr
in
mov
jl
mov
shl
cdq
jo
dec
(bad)
lods
adc
dec
xchg
into
pop
add
loopne
hlt
push
js
mov
push
push
pop
lods
clc
push
push
call
fcom
jo
je
sti
inc
mov
lock
fisub
mov
fidivr
test
data16
imul
push
test
xchg
xchg
sub
lock
adc
sahf
rcr
shl
push
fsubr
and
push
loope
les
(bad)
outs
imul
jo
xchg
adc
fidiv
sub
jl
mov
adc
lahf
ror
popa
or
lds
shl
rcl
sub
xor
push
mov
xchg
(bad)
and
fistp
int
jo
mov
push
or
imul
push
fsubr
sub
js
popf
(bad)
jecxz
fisttp
jo
xchg
adc
fidiv
sub
popw
xchg
adc
sahf
ror
mov
xchg
popa
shl
push
aam
sbb
add
or
pusha
shl
fidiv
and
push
test
xchg
sahf
adc
sbb
mov
adc
sahf
int3
cmp
outs
leave
xchg
popa
shl
push
fsubr
lea
push
loope
les
(bad)
iret
push
or
xchg
adc
fidivr
sub
jl
mov
adc
sahf
int3
sub
mov
xor
push
test
(bad)
(bad)
dec
(bad)
test
add
movs
imul
je
jo
xchg
adc
fidivr
sub
jl
mov
adc
sahf
int3
mov
sub
xchg
popa
shl
push
fsubr
lea
push
loope
les
popf
(bad)
pop
imul
test
movs
pop
popf
fidivr
stos
rol
popf
enter
lds
jo
pop
rol
lds
mov
imul
retf
xchg
popa
shl
push
fsubr
(bad)
leave
fucomip
mov
push
loope
les
popf
(bad)
sub
jo
xchg
adc
fidivr
sub
popw
xchg
adc
sahf
int3
push
and
jno
push
aam
sbb
mov
push
and
jb
test
xchg
stos
adc
push
sahf
fidivr
sar
jo
nop
hlt
push
sbb
popa
xor
lds
cmc
movs
cmp
rol
imul
push
popf
fidiv
lahf
fidivr
cdq
fidivr
xchg
jo
add
xchg
mov
aad
push
sahf
fidivr
shl
xchg
adc
fidivr
sub
jl
mov
adc
sahf
int3
je
sub
xchg
popa
shl
push
fsubr
(bad)
int
jne
xor
les
popf
(bad)
lahf
imul
test
movs
pop
popf
fidivr
stos
rol
popf
enter
mov
pop
int
pop
push
mov
mov
pop
inc
rcl
jne
les
cmps
lahf
stc
jp
inc
jne
(bad)
rol
retf
or
(bad)
push
inc
jg
pop
nop
lahf
aaa
dec
data16
xchg
xor
int
jg
div
push
ds
sub
push
mov
icebp
add
test
jl
scas
pop
pop
scas
loopne
sahf
mov
sbb
gs
sbb
js
in
js
pop
out
pop
dec
pop
test
push
adc
out
lods
sbb
scas
pop
imul
mov
ins
push
sbb
pop
hlt
xchg
jb
pop
pop
imul
jg
cmp
dec
push
mov
and
pop
data16
movs
fwait
or
sub
mov
mov
std
ja
int
inc
xchg
sbb
mov
movs
mov
inc
pop
mov
push
es
test
mov
inc
je
pop
xor
cwde
mov
retf
sbb
lods
mov
mov
gs
xchg
pop
gs
push
mov
jb
dec
pushf
adc
dec
shl
or
mov
push
dec
xchg
call
xchg
add
sub
dec
push
mov
pop
sbb
push
cmp
mov
adc
(bad)
loopne
movs
call
pushf
jge
test
pop
sbb
cmps
call
lods
call
movs
retf
popa
das
imul
test
and
cwde
mov
adc
sti
inc
or
cwde
and
mov
push
dec
mov
sbb
mov
(bad)
enter
mov
mov
fisub
sub
std
and
mov
cli
(bad)
pcmpeqb
sbb
mov
pop
nop
(bad)
cmp
inc
push
fs
mov
div
movs
ret
jns
das
movs
mov
ror
div
xchg
fsubr
fs
add
(bad)
pop
mov
icebp
lods
mov
stc
xchg
iret
cmc
aad
addr16
addr16
fsub
pop
data16
mov
dec
out
push
mov
mov
jle
test
fs
inc
mov
data16
sti
adc
lock
fistp
lea
ins
test
and
pop
mov
mov
(bad)
jmp
jle
adc
and
fldenv
mov
arpl
push
pop
retf
ins
jmp
mov
ficomp
xchg
ror
dec
ins
push
xchg
sbb
dec
xchg
hlt
movs
pop
jge
mov
jno
shl
jns
mov
fld
(bad)
(bad)
and
rcl
xchg
std
mov
push
push
addr16
mov
(bad)
daa
mov
and
cmps
call
mov
xchg
jae
ret
movs
cwde
nop
mov
jnp
sbb
imul
push
inc
pop
cmps
imul
mov
test
into
pop
popf
scas
popa
mov
imul
cmp
cmp
ud1
sbb
cmps
cld
je
cmps
hlt
je
(bad)
cld
loopne
adc
sti
jmp
scas
imul
jns
in
(bad)
clc
add
adc
adc
aaa
pop
pusha
push
mov
cwde
cmp
fst
jbe
pop
xor
push
xlat
ins
xor
(bad)
and
aam
gs
mov
div
lahf
add
nop
pop
sub
je
bound
mov
xor
mov
addr16
add
xchg
mov
bound
mov
xchg
mov
sub
mov
shl
dec
addr16
aam
shr
mov
mov
sbb
mov
dec
movs
cdq
sbb
fldenv
pop
retf
std
jne
push
dec
xchg
cli
pop
or
iret
shl
mov
aad
movs
mov
add
stos
inc
mov
or
stos
addr16
push
ret
mov
push
fistp
jg
leave
(bad)
(bad)
dec
hlt
adc
push
pop
(bad)
and
inc
pop
mov
cmc
aaa
jae
sbb
inc
hlt
stos
shr
pop
ret
movs
call
push
mov
xchg
fadd
push
jno
jg
inc
or
mov
sbb
mov
scas
jg
mov
bound
jmp
adc
cs
jmp
(bad)
cmps
jmp
dec
fdivr
call
fistp
cld
adc
mov
neg
and
call
(bad)
mov
sub
movs
cwde
cmp
fisttp
inc
je
or
cmovp
mov
cli
lods
out
pop
(bad)
xchg
or
cld
push
mov
jne
mov
shl
mov
mov
mov
xchg
xchg
jp
dec
clc
cmc
jg
pop
pusha
mov
push
sub
jmp
pusha
mov
sbb
xchg
pop
jns
sub
lods
pop
aas
sbb
pop
imul
sbb
mov
enter
stos
mov
stos
mov
inc
shl
ret
mov
mov
mov
mov
fstp
gs
pop
data16
movs
call
pop
push
sar
push
jge
pop
mov
icebp
add
mov
jmp
retf
mov
adc
lods
dec
or
mov
pop
lds
mov
xor
pop
retf
inc
mov
mov
fs
dec
jle
mov
mov
mov
popf
inc
ret
dec
push
mov
adc
push
mov
dec
xchg
ficomp
xchg
mov
add
jo
pop
xchg
fwait
or
mov
jo
cld
stos
or
test
mov
dec
mov
jbe
dec
push
mov
dec
jg
jg
clc
fwait
or
mov
sbb
mov
adc
int
mov
adc
(bad)
aad
repz
repz
repz
aad
repz
inc
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
pop
addr16
inc
sbb
repnz
cmp
sbb
arpl
inc
dec
inc
inc
mov
dec
inc
repnz
repz
dec
bound
ds
inc
inc
sbb
repnz
fs
jbe
add
repnz
rep
xchg
bound
cli
arpl
inc
ja
or
xor
mov
gs
inc
repz
repz
repz
inc
repz
repz
aad
repz
repz
aad
repz
repz
inc
repz
repz
inc
repz
repz
repz
aad
repz
repz
inc
repz
fld
ret
pop
repz
repz
push
push
not
inc
repz
(bad)
xlat
inc
repz
cmc
les
push
and
repz
inc
repz
call
mov
inc
repz
mov
popf
rcl
inc
repz
inc
repz
inc
repz
jl
(bad)
inc
repz
mov
aam
repz
mov
fisubr
add
xlat
inc
repz
jne
test
aam
repz
stc
rcl
aad
repz
inc
repz
sub
mov
popa
gs
mov
mov
mov
aad
repz
jle
test
ror
lods
aam
repz
inc
repz
repz
cmp
inc
test
xlat
inc
repz
sub
inc
repz
mov
repz
test
or
cdq
push
mov
inc
repz
mov
inc
repz
mov
jbe
inc
repz
xor
jnp
inc
repz
inc
repz
imul
ss
lds
repz
mov
(bad)
inc
repz
repz
mov
dec
push
aam
repz
sub
push
aam
repz
sub
inc
repz
in
pop
xlat
inc
repz
add
inc
repz
fs
xlat
inc
repz
movs
and
dec
(bad)
inc
repz
lea
dec
xlat
inc
repz
pop
aas
sbb
(bad)
inc
repz
es
and
cmp
inc
repz
cmp
aas
(bad)
inc
repz
cmp
inc
repz
or
inc
repz
xchg
sub
inc
repz
repz
daa
and
push
in
sbb
xlat
inc
repz
xor
sbb
inc
repz
inc
repz
in
dec
add
inc
repz
inc
repz
popf
sub
repz
dec
jg
pmullw
push
jo
je
xlat
inc
repz
(bad)
mov
(bad)
inc
repz
test
aam
repz
add
addr16
aam
repz
sqrtps
aad
repz
xlat
inc
rep
pop
mov
ficomp
inc
repz
repz
repz
aad
repz
nop
mov
repz
hlt
xor
repz
and
cmps
(bad)
(bad)
inc
repz
jnp
aad
rep
mov
push
int3
aam
repz
fs
xor
aam
repz
call
inc
repz
repz
xlat
inc
repz
jmp
test
inc
repz
in
and
ins
test
xchg
aam
repz
repz
(bad)
inc
repz
add
sahf
aam
repz
aam
repz
je
jo
aad
repz
dec
or
mov
inc
repz
inc
cmp
(bad)
aam
repz
shl
repz
cs
inc
repz
test
jns
inc
repz
mov
repz
inc
in
popa
aam
repz
data16
repz
sub
repz
nop
and
(bad)
inc
repz
dec
pop
pusha
push
(bad)
inc
repz
mov
xlat
inc
repz
repz
adc
adc
inc
repz
inc
aam
repz
inc
xlat
inc
repz
mov
inc
repz
dec
xlat
inc
repz
(bad)
inc
repz
xor
aaa
xlat
inc
repz
mov
dec
cmp
inc
repz
cmp
inc
rep
cwde
xor
and
inc
repz
sbb
repz
ds
(bad)
inc
repz
les
rep
mov
inc
rep
clc
imul
adc
sub
stc
sbb
inc
repz
ins
inc
dec
push
aam
repz
mov
inc
repz
jb
aam
rep
rol
repz
lods
or
mov
inc
repz
repz
dec
hlt
aad
repz
daa
mov
repz
dec
std
(bad)
inc
repz
push
in
xlat
inc
repz
pop
aaa
in
inc
repz
or
jmp
inc
repz
pop
or
aam
rep
(bad)
(bad)
int
aad
repz
push
aad
inc
repz
inc
outs
(bad)
fcmovnbe
inc
repz
inc
repz
fcmovb
xlat
inc
repz
(bad)
pop
or
xlat
inc
repz
xchg
pop
leave
(bad)
inc
repz
xor
repz
addr16
(bad)
inc
repz
jns
xlat
inc
repz
out
stos
mov
cmp
sub
out
cmp
cs
dec
cmps
(bad)
inc
repz
mov
test
inc
repz
aad
repz
mov
inc
repz
inc
repz
into
in
fwait
(bad)
inc
repz
addr16
(bad)
inc
repz
(bad)
icebp
adc
repz
imul
inc
repz
(bad)
inc
repz
xor
jo
inc
repz
mov
jne
inc
repz
jecxz
loop
xlat
inc
repz
iret
xor
aam
rep
retf
adc
aad
repz
inc
mov
addr16
repz
(bad)
pushf
imul
repz
repz
out
mov
mov
(bad)
inc
repz
hlt
dec
pop
xlat
inc
repz
push
(bad)
pop
(bad)
inc
repz
pop
add
inc
repz
repz
mov
movs
dec
(bad)
inc
repz
fidiv
xlat
inc
repz
ror
retf
aam
xlat
inc
repz
arpl
(bad)
cmp
inc
repz
inc
repz
pop
and
inc
repz
inc
pop
es
inc
repz
stos
loop
sub
inc
repz
jg
pop
cs
inc
repz
adc
adc
inc
repz
out
jbe
adc
inc
repz
daa
sbb
inc
repz
cmps
(bad)
hlt
sbb
inc
repz
fisttp
cmp
(bad)
inc
repz
and
div
or
inc
repz
pop
jmp
sbb
or
aam
repz
dec
hlt
aad
repz
gs
sti
aad
repz
scas
adc
std
aam
repz
sahf
retf
fchs
xlat
inc
repz
sahf
jne
in
inc
repz
std
push
xlat
inc
repz
sbb
aam
repz
aad
rcl
inc
repz
inc
movs
scas
aam
inc
repz
es
fcom
inc
repz
loope
(bad)
inc
repz
daa
leave
ret
repz
jne
(bad)
repz
out
(bad)
retf
aam
repz
cmp
repz
std
xor
jecxz
mov
inc
repz
push
and
repz
repz
mov
aam
repz
pushf
scas
test
push
and
mov
inc
repz
stos
lahf
pop
xchg
aam
repz
int
cdq
(bad)
inc
repz
mov
rep
and
adc
repz
adc
inc
repz
(bad)
int
mov
inc
repz
add
repz
(bad)
mov
jb
inc
repz
arpl
jne
inc
repz
repz
xchg
inc
repz
ret
and
cmp
jae
aam
repz
inc
repz
adc
dec
sbb
inc
repz
dec
or
inc
repz
or
fadd
inc
rep
adc
retf
inc
repz
xlat
inc
repz
jp
fs
xlat
inc
repz
lea
xlat
inc
repz
mov
repz
dec
inc
test
aam
repz
dec
mov
aad
repz
aad
repz
repz
sar
mov
aad
repz
lahf
cwde
sub
inc
repz
dec
adc
inc
repz
add
sbb
inc
repz
ret
pop
aam
repz
repz
pop
inc
or
(bad)
inc
repz
xor
or
inc
repz
ds
aam
repz
adc
loop
inc
repz
rep
mov
rol
and
test
fimul
inc
repz
gs
rol
push
inc
test
rol
cs
jnp
rol
inc
mov
mov
rol
loop
call
repz
test
inc
repz
(bad)
sub
rol
neg
inc
repz
inc
repz
inc
repz
inc
repz
dec
push
sahf
mov
cdq
push
cmps
rol
cli
xchg
and
movs
ret
xor
icebp
das
mov
adc
inc
repz
jno
loope
rol
adc
adc
rol
shr
repz
mov
fiadd
cld
or
push
xlat
or
shl
rol
push
add
jp
rol
pop
or
test
jb
mov
repz
out
xchg
rol
xchg
inc
repz
xor
inc
repz
xchg
popf
push
rol
inc
loope
xor
add
inc
repz
(bad)
mov
ss
xchg
jo
rol
fimul
aaa
dec
rol
cs
test
repz
sti
pop
xor
inc
repz
jne
les
inc
repz
mov
repz
add
inc
pop
xor
add
cmp
inc
repz
xchg
cmp
sub
inc
repz
or
das
rol
and
inc
repz
int
push
rol
fiadd
xor
rol
vdivps
mov
inc
repz
jno
mov
rol
ret
sub
rol
jle
push
daa
cmc
rol
push
xor
ins
sti
rol
push
in
mov
push
pusha
int3
pop
loopne
inc
repz
rol
or
(bad)
call
test
rol
cli
inc
cs
rol
jbe
xchg
das
aam
inc
repz
(bad)
cld
fcmovnbe
inc
repz
jmp
repz
(bad)
loopne
outs
(bad)
rol
sar
repz
outs
ins
int
inc
repz
mov
inc
repz
loopne
mov
mov
rol
push
test
(bad)
mov
mov
inc
repz
ins
mov
rol
inc
inc
ja
scas
rol
jb
mov
nop
rol
es
jb
xchg
rol
data16
mov
rol
outs
sub
pop
adc
leave
popa
xchg
inc
rep
xor
rol
push
mov
inc
repz
push
inc
repz
fmul
repz
rol
retf
out
rol
mov
(bad)
xor
rol
sar
xchg
sub
repz
fst
mov
rol
cmps
clc
enter
inc
repz
call
lock
repz
adc
stos
pop
rol
loop
pusha
and
cmps
mov
inc
rep
les
repz
repz
repz
sub
rol
push
mov
and
test
sti
sub
inc
repz
(bad)
retf
mov
jmp
repz
enter
repz
clc
lods
add
rol
fiadd
repz
rcl
fld
rol
out
inc
xor
inc
repz
rol
scas
mov
push
push
rol
bound
mov
rep
jnp
cmp
rol
rcr
jns
rol
xchg
(bad)
xor
repz
repz
int
out
inc
repz
cmp
rol
stos
mov
inc
repz
repz
rol
cli
pop
adc
(bad)
inc
rep
inc
pop
push
ret
repz
inc
repz
sbb
repz
iret
dec
cmp
rol
into
xchg
mov
rol
sbb
mov
rol
fimul
pop
lea
fisttp
scas
rol
sahf
pop
movs
je
rol
fcmove
mul
or
ins
cwde
rol
dec
lahf
in
lahf
rol
out
xchg
inc
adc
rcl
fimul
mov
inc
repz
mov
mov
inc
repz
mov
rol
dec
retf
(bad)
jbe
inc
repz
jl
jnp
inc
rep
jmp
inc
jl
inc
repz
mov
repz
mov
rol
out
inc
dec
imul
add
mov
rol
out
lea
xchg
inc
repz
mov
rol
xchg
inc
repz
pop
popf
mov
pop
ret
iret
adc
shl
repz
rol
sahf
(bad)
push
xor
inc
repz
(bad)
jmp
aaa
rol
jle
int3
test
rol
jle
mov
push
cmp
rol
push
add
rol
loop
mov
sub
inc
repz
push
push
sub
inc
repz
mov
repz
lds
cli
xchg
mov
rol
and
repz
mov
cmp
inc
repz
imul
push
stos
dec
xor
sbb
icebp
rol
push
jbe
xor
rol
dec
push
sbb
repz
faddp
jp
rol
or
xchg
jecxz
inc
repz
(bad)
cs
inc
repz
and
jmp
mov
pop
scas
cmps
add
rol
and
inc
repz
daa
adc
and
(bad)
inc
repz
mov
repz
scas
icebp
mov
inc
repz
loop
pop
leave
rol
into
jbe
cmp
jp
fild
adc
aad
mov
inc
repz
loopne
mov
call
pushw
xchg
mov
mov
inc
repz
sbb
rol
cmp
push
lods
rol
sbb
ret
rol
fdivp
loop
xchg
rol
and
dec
jne
rol
data16
sahf
rol
dec
or
in
rol
mov
rol
fisubr
(bad)
movs
mov
inc
repz
or
repz
repz
add
repz
iret
out
jnp
inc
repz
and
mov
(bad)
cs
inc
repz
repz
add
rol
repnz
ins
rol
mov
or
inc
push
pop
push
push
rol
(bad)
and
pop
rol
inc
outs
add
add
inc
repz
fild
inc
repz
cli
rol
dec
rol
dec
jbe
mov
(bad)
pop
xchg
fbstp
rol
xchg
inc
xor
inc
repz
rol
push
into
popa
cmp
or
and
inc
repz
clc
out
rol
(bad)
(bad)
in
sub
inc
repz
jp
and
cs
sahf
fneni(8087
adc
inc
rep
(bad)
push
sbb
inc
repz
push
fstp
rol
xchg
shl
mov
dec
(bad)
aad
rol
pushw
adc
inc
repz
dec
retf
inc
repz
xor
inc
repz
xor
inc
repz
repz
repz
cmp
loope
inc
repz
repz
sbb
repz
fiadd
es
inc
repz
fld
push
(bad)
fiadd
dec
sub
inc
repz
lods
xchg
(bad)
inc
repz
sar
outs
xor
repz
aam
into
fild
(bad)
frstor
xchg
or
mov
inc
repz
inc
les
mov
xchg
xchg
fidivr
or
(bad)
xchg
pop
out
fadd
ficom
inc
repz
imul
pop
mov
inc
repz
int
adc
clc
(bad)
fadd
dec
cmp
repz
outs
pop
sbb
repz
inc
repz
popf
out
mov
inc
repz
dec
mov
(bad)
fiadd
fimul
and
inc
repz
or
(bad)
jne
inc
repz
or
inc
repz
cmc
jl
inc
repz
dec
out
add
inc
repz
dec
mul
repz
inc
repz
push
push
fild
jbe
push
ja
fiadd
(bad)
pop
sbb
fadd
jbe
jmp
cmc
mov
repz
repz
adc
repz
adc
inc
repz
ins
adc
dec
fld
mov
pop
retf
xor
inc
repz
lea
mov
fild
jp
push
xchg
cmp
cdq
mov
and
inc
repz
dec
in
daa
fild
pop
(bad)
xrelease
adc
repz
xor
inc
repz
iret
int
fiadd
sbb
cli
add
fiadd
lds
inc
push
fadd
cli
ror
adc
fiadd
mov
xor
push
fadd
shl
mov
repz
jns
xchg
push
fadd
cli
ins
pop
sub
fadd
push
shr
cmc
fld
ret
outs
clc
fadd
out
push
inc
mov
mov
std
ins
loop
inc
repz
ins
test
dec
rcl
jmp
out
in
fild
outs
pushf
mov
dec
fdiv
fiadd
fimul
jmp
(bad)
aaa
fstp
inc
repz
inc
repz
sbb
jg
fiadd
dec
push
inc
(bad)
enter
xor
repz
je
xchg
cmp
jmp
fild
push
sub
adc
mov
inc
repz
ins
call
repz
repz
sub
repz
lahf
test
inc
repz
fild
add
cmps
(bad)
fld
(bad)
int3
dec
xor
inc
repz
jbe
fild
xchg
sbb
inc
repz
inc
repz
or
shl
inc
repz
fild
out
xor
push
fadd
outs
fiadd
scas
in
mov
push
fiadd
scas
xor
cli
push
fadd
pop
pop
inc
pop
fild
mov
fiadd
stos
js
fadd
inc
repz
sub
inc
fild
rol
repz
fild
idiv
pop
xor
inc
repz
push
nop
(bad)
push
cmp
inc
repz
inc
xchg
cmp
inc
repz
dec
and
inc
xrelease
repz
cdq
push
sub
inc
repz
xchg
inc
repz
clc
push
adc
inc
repz
stos
int
fld
xchg
repz
push
pop
fadd
call
repz
add
dec
push
fild
jmp
repz
sub
or
inc
rep
sub
lahf
rcr
cmc
fild
mov
fld
cli
mov
cmps
(bad)
fadd
mov
fadd
and
dec
in
inc
repz
push
xchg
call
addr16
out
fadd
mov
and
rcr
inc
repz
inc
(bad)
fiadd
out
xchg
add
fcmovnu
inc
repz
push
and
inc
cmp
repz
fld
repz
xor
repz
inc
repz
test
xor
fiadd
outs
push
and
mov
jnp
mov
call
repz
adc
repz
inc
repz
stos
lods
fadd
xchg
inc
repz
(bad)
ja
xchg
fadd
xchg
fcmovnbe
and
mov
ins
pushf
fild
xor
sub
repz
ret
fadd
push
stos
dec
movs
mov
inc
repz
daa
sub
repz
div
imul
sar
inc
repz
push
xchg
inc
repz
fimul
fld
jb
sub
xchg
sti
pusha
test
sub
retf
fild
(bad)
cmp
xchg
outs
fadd
bound
inc
repz
fild
mov
fld
retf
arpl
repz
pop
or
mov
fadd
push
pop
push
mov
inc
repz
gs
dec
fiadd
ss
aaa
sub
fild
cmps
not
pop
fiadd
loop
or
fild
jmp
repz
sub
repz
and
sub
inc
repz
arpl
rep
psllq
fld
ss
push
adc
inc
repz
imul
fadd
sub
pop
fild
push
xchg
xchg
adc
fld
push
repnz
pop
fild
sbb
in
fild
(bad)
sub
or
inc
repz
inc
repz
fld
out
or
daa
stc
fld
outs
or
test
retf
in
jecxz
inc
repz
pop
shl
cmps
push
push
jmp
lock
fld
rol
inc
repz
ss
inc
repz
bound
fadd
jb
and
fld
dec
push
or
ret
repz
cli
pop
or
fiadd
cmp
sar
fild
dec
push
sub
into
fiadd
and
push
ss
inc
repz
or
int
mov
loop
cmp
ss
pusha
mov
sbb
mov
fadd
stos
stos
scas
sub
fld
out
jle
call
loop
aam
fadd
(bad)
fdivrp
imul
or
popf
fld
jle
arpl
fld
sahf
push
in
xchg
inc
repz
push
mov
fld
mov
fld
and
aam
fadd
out
lods
pushf
jbe
inc
repz
xlat
add
inc
repz
scas
mov
jle
inc
repz
push
or
repz
in
test
loop
jle
push
outs
es
fadd
out
and
fild
inc
push
xchg
std
push
fiadd
into
inc
in
clc
pop
fild
mov
inc
repz
inc
inc
cdq
inc
fld
mov
rol
inc
repz
inc
rep
jle
outs
dec
fadd
out
stos
cdq
mov
jbe
pop
ret
inc
repz
inc
repz
push
scas
fld
add
inc
repz
or
and
inc
rep
pop
cmp
fld
mov
fadd
fidiv
inc
repz
rep
outs
lods
ds
inc
repz
mov
inc
repz
fisubr
fiadd
test
mov
sub
cmps
or
inc
rep
loop
je
fld
dec
mov
into
repz
inc
std
stc
mov
fiadd
push
sub
repz
inc
repz
stc
cmp
repz
cmp
mov
cs
jmp
sub
inc
repz
int
scas
rcr
inc
repz
sub
js
fild
(bad)
std
xchg
fcmovnu
inc
repz
repz
inc
repz
inc
repz
jnp
enter
xchg
jmp
xor
mov
inc
repz
test
repz
push
in
mov
fstp
mov
or
inc
repz
test
inc
repz
repz
push
shl
scas
fld
push
test
repz
push
xchg
fadd
xchg
inc
repz
inc
repz
fadd
jb
ins
fcomi
xlat
inc
repz
lea
movs
cmc
aad
repz
lea
outs
mov
inc
repz
imul
std
sub
out
inc
repz
jbe
jmp
jl
aam
repz
test
rcl
inc
repz
inc
rep
inc
mov
repz
(bad)
fst
inc
repz
mov
repz
pop
test
inc
repz
movs
retf
aad
repz
push
hlt
iret
aam
repz
aam
repz
retf
aad
repz
leave
aad
mov
sbb
inc
repz
lods
and
aad
repz
in
ss
push
cmp
(bad)
inc
repz
and
aam
repz
mov
nop
aad
repz
retf
inc
repz
test
inc
repz
leave
push
jmp
aad
repz
sbb
inc
repz
jge
cmps
test
inc
repz
je
mov
inc
repz
add
sub
aam
repz
leave
adc
int
mov
cmp
fisubr
aad
repz
inc
repz
mov
scas
cmc
cli
cmp
repz
mov
inc
repz
cmp
inc
repz
xlat
push
push
(bad)
inc
repz
jmp
inc
repz
mov
jmp
push
sub
std
pop
aad
repz
std
call
gs
cmp
inc
repz
jmp
dec
aam
repz
ss
aad
repz
mov
inc
repz
or
aam
repz
add
xlat
inc
repz
inc
repz
pop
les
and
inc
repz
data16
inc
repz
lods
loopne
sub
inc
repz
aad
repz
int
fst
(bad)
inc
repz
ja
pop
aam
repz
popf
inc
xchg
sbb
inc
repz
std
rcr
inc
repz
pushf
pop
add
inc
repz
xchg
or
add
inc
repz
aam
repz
push
sub
repz
adc
pusha
lock
repz
pop
(bad)
xlat
inc
repz
sub
aam
repz
push
jmp
xchg
loope
inc
repz
enter
repz
rcl
push
push
xchg
arpl
xlat
inc
repz
jae
(bad)
inc
repz
repz
repz
cmp
bound
es
repz
div
(bad)
aad
repz
xor
xchg
leave
(bad)
inc
repz
add
repz
aam
repz
aad
mov
inc
repz
add
mov
aam
fdivr
js
icebp
mov
mov
cmps
mov
inc
repz
dec
jmp
aam
repz
pop
call
mov
(bad)
xchg
aam
repz
clc
repnz
adc
repz
jmp
rep
xchg
test
mov
aam
repz
test
push
push
inc
fidiv
inc
repz
aam
repz
push
lea
repz
(bad)
movs
popa
xlat
inc
repz
lods
ja
xlat
inc
repz
test
imul
sbb
ins
aad
repz
aad
aam
repz
sub
jp
out
sub
inc
repz
mov
mov
adc
inc
repz
sub
pop
inc
xlat
inc
repz
inc
movs
(bad)
inc
repz
rep
xor
xlat
xor
inc
repz
repz
fdivr
xlat
inc
repz
mov
cmp
in
int
aad
repz
(bad)
daa
aam
repz
adc
jb
mov
repz
fs
je
xlat
inc
repz
dec
leave
adc
test
and
aam
repz
push
ret
sbb
inc
repz
repz
ins
shl
inc
repz
aaa
inc
or
inc
repz
gs
or
inc
repz
sbb
repz
out
and
aad
repz
add
stc
aad
repz
inc
repz
dec
fsub
aam
repz
pop
pop
daa
in
inc
repz
push
lahf
hlt
jmp
scas
in
aad
repz
mov
inc
repz
stos
js
aad
repz
icebp
in
fcom
inc
repz
and
(bad)
inc
repz
xlat
pusha
mov
aam
repz
xlat
(bad)
repz
repz
pop
ret
or
aad
repz
out
call
repz
cmp
repz
scas
jmp
dec
shl
aad
repz
inc
repz
jns
movs
aad
repz
aam
repz
adc
repz
aam
repz
push
pushf
mov
mov
(bad)
inc
repz
pop
shl
popf
xlat
inc
repz
retf
xor
add
repz
xor
mov
inc
repz
xchg
fmul
imul
aad
repz
xchg
loope
jne
inc
repz
cmp
jns
inc
repz
mov
repz
mov
inc
repz
lea
inc
repz
lahf
push
fisttp
pusha
ins
aad
rep
ja
mov
aam
repz
inc
repz
repz
sbb
repz
dec
mov
scas
ret
test
stos
xchg
mov
inc
repz
sub
xor
xor
(bad)
inc
repz
push
ss
repz
pop
or
(bad)
inc
repz
scas
cmps
cmp
pop
sub
and
inc
repz
ret
aad
repz
repz
sub
repz
mov
dec
adc
inc
repz
aad
repz
xlat
inc
repz
or
(bad)
rcr
inc
repz
aad
repz
xor
outs
pop
mov
ret
pop
lock
repz
clc
push
aad
repz
stos
sub
aad
xrelease
mov
aad
repz
pop
arpl
loopne
inc
repz
cs
in
inc
repz
cli
loope
jmp
inc
repz
inc
repz
dec
rcl
inc
repz
cmps
pop
push
add
mov
ficom
(bad)
(bad)
inc
repz
repz
(bad)
inc
repz
call
stos
mov
enter
push
cli
jmp
int3
aam
repz
in
mov
inc
repz
stos
adc
jle
addr16
cs
mov
mov
inc
repz
test
xlat
inc
repz
neg
jp
push
push
scas
(bad)
inc
repz
inc
repz
cwde
sbb
aad
repz
adc
repz
sbb
mov
inc
repz
cmp
mov
dec
xchg
outs
sbb
inc
repz
retf
jns
inc
repz
xlat
inc
repz
push
data16
(bad)
inc
repz
repz
push
call
repz
ret
outs
xlat
inc
repz
jle
test
inc
repz
inc
repz
(bad)
pop
dec
pop
aam
repz
xchg
ins
test
inc
repz
xchg
cmp
inc
repz
push
fucomip
xor
inc
repz
fimul
aad
repz
repz
(bad)
inc
repz
aam
repz
retf
adc
jmp
(bad)
outs
ret
inc
repz
mov
rol
aad
repz
bound
add
inc
repz
pop
mov
repz
inc
repz
fisubr
call
repz
std
rcl
inc
repz
stc
pop
pop
(bad)
rol
outs
loope
ja
rol
jbe
mov
scas
jge
retw
rol
jmp
repz
dec
sahf
mov
push
shr
dec
int
inc
repz
inc
repz
mov
sub
sub
jge
mov
aad
adc
int
and
pop
je
cmps
rol
sbb
lods
rol
push
hlt
sub
rol
test
inc
xchg
rol
rcr
inc
repz
inc
repz
rcl
adc
xchg
xchg
inc
repz
inc
dec
mov
inc
repz
gs
(bad)
rol
push
add
inc
repz
rcl
div
inc
repz
xchg
hlt
js
inc
repz
dec
shl
rol
mov
rol
dec
jae
rol
(bad)
push
mul
push
rol
rol
inc
repz
int
mov
rol
xchg
scas
inc
rol
push
or
repz
and
inc
repz
mov
inc
repz
ins
and
repz
leave
cmp
inc
repz
in
lods
and
inc
repz
inc
repz
imul
test
inc
rep
adc
inc
repz
xchg
mov
repz
lods
jmp
xor
std
pop
add
inc
repz
shl
rol
pop
ins
pop
cs
ins
(bad)
repz
sbb
fstp
rol
cmp
stc
rol
jp
pop
in
rol
push
push
inc
repz
mov
inc
repz
xor
int
rol
jb
add
in
rol
jmp
repz
xor
mov
rol
cs
push
out
in
cmps
icebp
fst
inc
rep
cmp
and
rol
data16
das
(bad)
rol
into
and
jbe
rol
mov
and
repz
nop
mov
inc
repz
xchg
mov
inc
repz
inc
repz
je
es
call
inc
repz
stos
cmps
rol
mov
lock
rol
call
repz
inc
repz
or
in
xchg
rol
(bad)
sub
repz
xor
adc
rol
and
mov
rol
inc
aam
adc
test
mov
rol
dec
jl
xor
inc
repz
test
jecxz
rol
adc
repz
aas
jle
inc
repz
fmul
add
inc
repz
or
shl
inc
repz
mov
inc
repz
je
or
inc
repz
dec
dec
push
rol
es
pop
pushf
push
rol
mov
mov
pop
rol
inc
add
call
sahf
lock
inc
rol
out
movs
push
sbb
(bad)
and
leave
dec
rol
into
adc
popf
dec
rol
mov
xchg
rol
xchg
lock
xor
pushf
adc
rol
push
jl
cmp
les
fs
inc
repz
and
in
fwait
sub
inc
repz
cmp
sub
inc
repz
(bad)
call
repz
adc
repz
sbb
inc
repz
rol
cli
inc
adc
add
inc
repz
cmp
repz
in
in
inc
or
inc
repz
repz
das
sti
pop
repz
xchg
out
test
hlt
rol
sar
cli
mov
dec
or
dec
call
inc
repz
pop
adc
rol
(bad)
inc
test
inc
repz
rol
push
jg
popf
in
rol
repnz
sub
ds
jp
(bad)
rol
mov
test
repz
cmc
fst
inc
repz
pop
clc
ret
rol
push
stos
sbb
inc
repz
and
retf
rol
scas
mov
inc
repz
iret
in
mov
inc
repz
rol
pop
inc
inc
stos
mov
xchg
adc
rol
push
or
rol
not
xor
mov
adc
test
fbld
sub
mov
cmp
rol
not
imul
fbld
call
inc
popf
rol
xchg
mov
adc
repz
stos
test
inc
repz
inc
mov
mov
xor
repz
xor
repz
jb
rol
rcr
xor
rol
xchg
packsswb
ficom
inc
repz
repz
repz
inc
outs
rol
inc
cmp
repz
sbb
inc
repz
addr16
out
pop
rol
(bad)
(bad)
out
pop
rol
or
repz
rep
xchg
ins
stos
dec
rol
mov
rol
or
popa
and
rol
retf
scas
aaa
rol
sbb
pushf
mov
rol
pop
(bad)
pusha
cmp
imul
and
inc
repz
inc
repz
dec
sub
inc
xrelease
fwait
sub
ja
jl
rol
test
jne
rol
mov
dec
cmps
sbb
inc
repz
rol
xchg
pop
fidiv
add
inc
repz
push
add
inc
repz
out
rol
ret
or
retf
mov
rol
dec
mul
hlt
rol
cli
cmp
repz
aas
(bad)
rol
cmps
adc
repz
fidiv
in
inc
repz
ins
or
rol
sbb
ja
out
rol
fisubr
inc
repz
add
aad
inc
repz
leave
fcmovbe
inc
repz
xchg
clc
jg
rol
jp
fisubr
rol
idiv
inc
repz
pusha
sbb
rol
xchg
adc
rol
push
cmps
je
mov
inc
repz
(bad)
adc
mov
inc
repz
adc
mov
push
mov
mov
sbb
mov
(bad)
push
sub
mov
inc
repz
sbb
pop
and
rol
sub
sbb
xchg
rol
outs
fimul
call
mov
rol
push
jbe
scas
adc
repz
sub
rol
xor
repz
inc
outs
loop
rol
(bad)
out
fwait
data16
inc
repz
mov
pop
jbe
inc
repz
les
inc
repz
mov
rol
jbe
xor
pusha
rol
xor
inc
repz
mov
rol
jbe
shl
rol
mov
rol
ficom
inc
repz
xor
or
inc
repz
inc
repz
ret
rol
into
ds
jb
mov
inc
repz
retf
inc
repz
popf
popf
xor
inc
repz
dec
aaa
rol
rcr
inc
repz
and
ret
inc
repz
je
and
inc
repz
inc
repz
jp
or
rol
fisub
inc
repz
push
out
adc
inc
repz
mov
pop
rol
fidivr
inc
sbb
inc
repz
repz
inc
repz
pop
push
mov
rol
mov
rol
inc
xlat
and
dec
inc
repz
fiadd
sbb
inc
repz
xchg
dec
std
fild
mov
fadd
add
xchg
in
inc
repz
in
loop
jmp
inc
repz
pop
add
fld
xchg
jmp
inc
repz
lds
push
adc
addr16
inc
repz
and
inc
repz
dec
ret
repz
clc
(bad)
fiadd
jbe
in
mov
fild
out
mov
repz
jge
xchg
mov
inc
repz
mov
repz
repz
pop
sub
mov
mov
mov
xor
movs
fld
push
adc
outs
lods
fld
jp
(bad)
push
out
in
xchg
fld
mov
popw
cdq
fld
(bad)
sub
inc
repz
sbb
inc
repz
mov
sbb
cmp
jge
sbb
or
repz
fstp
daa
jbe
inc
repz
or
inc
repz
inc
repz
sub
fld
mov
fld
ror
inc
repz
inc
mov
outs
fild
push
xchg
loope
push
fld
mov
sub
fadd
stos
jge
dec
pop
fild
out
mov
rcr
repz
and
es
inc
repz
inc
pop
dec
fild
push
stc
inc
or
mov
fld
cli
stc
xchg
add
call
repz
fld
dec
inc
repz
dec
and
sbb
pop
sub
inc
repz
jle
sub
ins
pop
or
fadd
xchg
mov
inc
repz
sub
jmp
xchg
cmps
sbb
jmp
inc
repz
clc
adc
stos
ret
or
inc
repz
repz
mov
inc
rep
ins
push
repz
inc
repz
je
idiv
fadd
jb
cmp
jecxz
inc
repz
inc
pop
out
fadd
shr
(bad)
jmp
inc
xrelease
repz
or
fst
fld
jle
xor
test
xor
fld
mov
pop
icebp
fstp
inc
repz
inc
repz
xor
repz
arpl
fld
and
jo
iret
fild
mov
cmc
or
adc
repz
mov
call
inc
repz
jne
mov
adc
jl
fadd
test
fild
shl
jb
lods
fadd
fadd
repz
je
xchg
fiadd
sahf
sbb
cwde
fild
mov
mov
fiadd
retf
popa
sbb
repz
iret
out
fld
mov
fld
push
and
cwde
(bad)
fld
test
in
fld
xor
mov
repz
movs
dec
inc
jns
inc
rep
push
inc
repz
sub
(bad)
fadd
jle
aas
shl
inc
repz
ins
add
inc
repz
mov
add
repz
push
fld
(bad)
jo
or
inc
repz
mov
jle
(bad)
ret
inc
repz
jg
fld
or
inc
repz
ja
dec
fadd
push
sbb
lea
fadd
dec
ins
fst
ret
push
cmp
inc
repz
inc
repz
fwait
pop
and
inc
repz
and
je
adc
fild
outs
fs
xchg
fiadd
sub
inc
repz
mov
inc
repz
mov
cli
pushf
cmp
repz
sub
out
xor
mov
stos
loopne
jae
fiadd
push
in
sar
inc
cmp
repz
aad
repz
dec
xor
repz
rep
lods
sub
hlt
aam
repz
xchg
xchg
sar
(bad)
inc
repz
xchg
adc
shl
mov
outs
cmp
out
out
inc
rep
fnstcw
repz
inc
repz
mov
mov
aad
repz
push
adc
xlat
inc
xrelease
inc
repz
rol
ret
(bad)
inc
repz
loope
ja
xlat
inc
repz
or
fcmove
(bad)
inc
repz
ret
inc
repz
jb
mov
inc
rep
cmp
inc
repz
fist
mov
pop
xchg
xchg
mov
gs
mov
std
sbb
movs
aam
repz
inc
repz
ss
lods
aam
repz
cdq
xchg
xlat
inc
repz
sbb
(bad)
inc
repz
mov
inc
repz
fild
xlat
inc
repz
dec
or
inc
repz
out
test
inc
repz
add
mov
inc
repz
inc
repz
vpcmpgtb
inc
repz
inc
repz
inc
repz
shr
jle
inc
repz
xor
inc
repz
inc
outs
add
inc
repz
repz
gs
ins
(bad)
inc
repz
repz
popa
xor
push
xlat
inc
repz
inc
pop
test
(bad)
inc
repz
inc
repz
test
inc
repz
xlat
inc
repz
jge
jo
aad
repz
xor
and
xlat
inc
repz
pushf
mov
data16
or
mov
aad
repz
sub
repz
mul
daa
xlat
inc
xrelease
pushf
sub
inc
repz
inc
repz
fcom
aad
repz
lds
pop
(bad)
inc
repz
mov
sbb
inc
repz
sub
repz
pop
and
(bad)
inc
repz
cmp
repz
mov
inc
repz
inc
repz
in
aam
rep
ins
stos
pop
cmc
(bad)
inc
repz
inc
repz
repz
jmp
repz
test
repz
adc
pop
call
pushf
(bad)
mov
aad
repz
hlt
frstor
aam
repz
lock
(bad)
xlat
aad
repz
out
aad
repz
and
mov
out
pusha
sub
rcl
repz
cmps
pop
(bad)
aam
rep
adc
aam
aam
repz
sub
add
aam
repz
lock
mov
inc
repz
repz
mov
repz
sub
push
mov
in
jno
xlat
inc
repz
stos
aad
repz
inc
aaa
scas
aam
repz
cmp
jge
(bad)
inc
repz
repnz
aad
repz
pop
call
in
sahf
(bad)
inc
repz
cmps
jg
xlat
inc
repz
push
and
xlat
inc
repz
lock
mov
(bad)
fcomp
jb
inc
repz
sbb
shl
inc
repz
js
inc
repz
repz
xor
repz
cdq
ret
data16
repz
dec
in
push
inc
repz
ret
aad
repz
inc
pop
push
xlat
inc
repz
pop
aad
repz
add
sbb
inc
repz
icebp
push
xlat
inc
repz
add
inc
repz
jo
mov
aam
repz
and
aad
repz
aam
xlat
inc
repz
repz
cmp
inc
repz
xlat
inc
repz
repz
(bad)
jg
call
sar
out
aam
xrelease
inc
repz
mov
inc
repz
sti
inc
and
aam
repz
aad
fst
inc
repz
repz
cld
(bad)
xlat
inc
repz
dec
enter
into
add
aam
repz
out
mov
repz
repz
jmp
repz
xlat
inc
repz
jae
mov
push
out
jecxz
aam
repz
aaa
test
pop
fst
aam
repz
ja
test
sbb
inc
repz
pop
cmovs
jecxz
mov
aam
repz
repz
pop
test
inc
repz
ret
les
outs
sahf
int
aam
repz
jns
xlat
inc
repz
and
repz
lods
js
inc
repz
adc
add
jne
popa
xlat
inc
repz
xchg
repz
loop
imul
mov
repz
pop
inc
fcom
inc
repz
(bad)
inc
repz
repz
out
mov
pop
aad
repz
repz
inc
jnp
inc
inc
aam
repz
pop
lods
dec
xlat
inc
repz
inc
repz
and
aad
rep
daa
xchg
mov
inc
rep
das
mov
repz
int
aas
(bad)
inc
repz
arpl
and
inc
repz
jbe
and
jecxz
jo
(bad)
inc
repz
cmp
mov
xlat
inc
repz
push
cmp
aam
repz
scas
addr16
adc
ret
jge
sbb
inc
repz
daa
lea
jle
and
add
inc
repz
ss
xlat
inc
repz
aad
repz
call
repz
xlat
inc
repz
push
xchg
(bad)
inc
repz
mov
aam
repz
xchg
and
std
xlat
inc
repz
pop
jecxz
inc
repz
(bad)
inc
repz
mov
aam
repz
or
aam
repz
adc
aam
repz
test
(bad)
aam
repz
pop
cmp
xlat
inc
repz
repz
inc
repz
arpl
mov
inc
repz
add
(bad)
(bad)
xchg
inc
mov
rcl
and
mov
inc
repz
inc
repz
inc
repz
(bad)
inc
repz
test
mov
repz
add
pushf
aam
repz
or
repz
inc
repz
repz
bound
repz
sbb
jb
inc
repz
mov
push
out
sub
push
xor
mov
aad
repz
imul
gs
repz
jg
aad
repz
inc
xor
aad
repz
push
rcr
inc
repz
(bad)
loopne
push
aad
repz
or
repz
push
jno
aad
repz
ret
outs
inc
(bad)
inc
repz
xor
inc
repz
mov
repz
cmps
js
(bad)
inc
repz
dec
ss
xor
inc
repz
inc
repz
mov
cmp
inc
repz
les
(bad)
inc
repz
inc
repz
test
and
inc
repz
jb
jb
xlat
inc
repz
jb
pop
das
(bad)
inc
repz
xor
repz
and
pop
xlat
inc
repz
ss
sbb
inc
repz
ds
pop
aad
repz
inc
repz
pop
push
pop
add
add
repz
mov
cs
inc
repz
in
lods
repnz
jb
in
hlt
rol
xchg
loope
in
sti
rol
cmps
sub
cld
rol
retf
movs
loope
inc
repz
dec
xor
out
inc
repz
test
rol
ss
(bad)
stc
in
rol
adc
inc
repz
mov
repz
shr
fcmovbe
inc
repz
mov
inc
repz
push
scas
loopne
rol
push
sbb
inc
repz
int
ror
rol
ret
sbb
rol
shl
ret
push
mov
inc
repz
mov
popf
mov
mov
add
mov
movs
dec
ret
inc
repz
repz
lock
rol
mov
cdq
in
lods
rol
repnz
nop
rol
cli
aad
xchg
xchg
rol
fisub
add
in
cmp
repz
std
sahf
mov
jns
dec
test
inc
repz
aam
rol
jmp
repz
jge
push
bound
inc
rep
sub
dec
jns
inc
repz
xor
inc
repz
cmps
pusha
rol
scas
cmp
inc
repz
jno
imul
repz
ins
(bad)
xor
repz
(bad)
push
rol
xor
repz
or
pop
rol
out
stc
add
pop
rol
cmp
inc
repz
inc
repz
dec
rol
cmp
pop
dec
rol
call
repz
repz
add
cmp
inc
repz
in
mov
repz
inc
repz
int
rol
jle
das
in
rol
fiadd
(bad)
sub
inc
repz
inc
repz
add
inc
repz
inc
repz
jns
mov
jmp
repz
cmp
inc
repz
rol
adc
jecxz
rol
cmps
sub
repz
repz
inc
repz
cwde
and
rol
out
cmp
shl
rol
ret
push
in
inc
xrelease
repz
call
repz
aam
repz
inc
repz
push
pop
push
lock
repz
aam
repz
lock
inc
repz
(bad)
inc
repz
loope
loope
aam
repz
cmp
shl
inc
repz
dec
call
test
inc
repz
pop
dec
ins
rcl
inc
repz
test
(bad)
aam
repz
(bad)
inc
repz
fcomp
xlat
inc
repz
imul
repz
aaa
ins
(bad)
aad
repz
inc
repz
mov
iret
(bad)
inc
repz
outs
div
mov
retf
mov
inc
repz
ins
xchg
mov
adc
out
mov
int
xor
inc
sbb
test
inc
repz
push
mov
repnz
repz
frstor
repz
inc
mov
xlat
inc
repz
repz
add
inc
repz
sub
inc
repz
jno
mov
inc
repz
jp
mov
inc
repz
mov
inc
repz
es
inc
repz
cmp
inc
repz
xchg
imul
repz
sbb
pusha
xlat
inc
repz
xlat
inc
repz
add
inc
repz
shr
ins
(bad)
inc
repz
inc
repz
stc
mov
rep
lea
repz
int3
push
pop
(bad)
inc
repz
sahf
test
inc
repz
xor
inc
xlat
inc
repz
cmc
shr
and
repz
aam
rep
jne
aaa
xlat
inc
repz
cdq
push
sar
xlat
inc
repz
fnstcw
cmp
push
cmps
ret
and
inc
repz
nop
hlt
es
repz
cs
sub
inc
repz
and
cwde
sub
inc
repz
adc
shl
or
adc
inc
repz
xchg
jp
sbb
inc
repz
sub
sbb
inc
repz
movs
clc
fld
aam
repz
inc
repz
(bad)
or
inc
repz
inc
repz
dec
(bad)
cli
and
fcomip
(bad)
inc
repz
xlat
inc
repz
aad
repz
inc
xchg
sahf
loope
inc
repz
inc
repz
pushf
shr
xlat
inc
repz
mov
inc
repz
js
call
inc
sbb
cmp
(bad)
inc
repz
test
xor
(bad)
inc
repz
repz
pusha
cmps
sbb
aad
repz
shr
adc
xlat
inc
repz
out
xlat
inc
repz
test
aad
repz
int
mov
inc
repz
mov
inc
repz
cmps
mov
pusha
sar
aam
repz
aam
xrelease
movs
aad
repz
jl
stos
aad
repz
jae
lods
(bad)
inc
repz
mov
xlat
inc
repz
jno
xchg
xlat
inc
repz
xchg
cs
rcr
xchg
mov
adc
repz
inc
repz
je
xchg
mov
inc
repz
inc
repz
aam
repz
or
cs
sar
inc
rep
dec
adc
jge
inc
xrelease
inc
repz
mov
gs
repz
imul
repz
fcomp
outs
aad
repz
clc
popf
cmps
push
(bad)
inc
repz
dec
sar
push
aad
repz
lock
(bad)
inc
repz
jl
xlat
inc
repz
pushf
and
and
cmp
inc
repz
fmul
inc
repz
cmp
outs
dec
aad
repz
repz
push
inc
xor
lods
enter
inc
repz
je
in
aad
repz
inc
repz
xlat
inc
repz
jle
cmc
aam
repz
cmps
push
mov
and
aad
repz
repz
and
test
aad
repz
aad
repz
aam
repz
inc
repz
inc
xrelease
rol
inc
repz
sbb
(bad)
aad
repz
int
sub
aad
repz
aad
repz
movs
dec
mov
inc
repz
repz
rcl
mov
jmp
inc
repz
mov
fisub
jne
mov
lds
repz
sbb
xlat
inc
repz
repz
loope
jno
(bad)
inc
repz
in
ror
cdq
(bad)
inc
repz
lahf
aam
repz
sbb
adc
repz
pop
push
test
inc
repz
aaa
jo
inc
repz
fldcw
jl
inc
repz
inc
repz
mul
fs
inc
repz
sbb
xlat
inc
repz
inc
dec
outs
aad
repz
xchg
out
mov
inc
repz
pop
mov
repz
fld
out
mov
pop
aad
repz
aam
repz
lds
inc
repz
inc
daa
dec
xlat
inc
repz
dec
aam
repz
adc
xor
inc
repz
adc
repz
add
inc
repz
xchg
or
leave
call
jmp
rol
sub
add
inc
repz
repz
inc
repz
ds
sub
inc
repz
add
inc
repz
lea
or
inc
repz
(bad)
repz
repz
adc
repz
sub
cli
(bad)
inc
repz
mov
call
inc
repz
imul
aam
repz
cli
out
aam
repz
inc
repz
aad
repz
repz
adc
cmp
aam
repz
sub
rcl
repz
mov
stos
(bad)
repz
or
aam
rep
test
inc
int3
aam
repz
es
mov
inc
repz
je
mov
inc
repz
mov
lods
sub
mov
rcl
push
je
call
mov
(bad)
inc
repz
(bad)
inc
repz
je
iret
xchg
aam
repz
call
repz
(bad)
inc
repz
dec
mov
xlat
inc
rep
cmp
popa
adc
repz
aad
repz
push
xchg
mov
bnd
retf
mov
inc
repz
adc
jno
inc
repz
(bad)
enter
(bad)
inc
repz
add
inc
repz
jb
arpl
inc
repz
sbb
aad
repz
cdq
int
aam
repz
push
outs
aad
repz
mov
mov
xor
data16
inc
rep
pop
xor
pop
aam
repz
call
repz
add
adc
inc
repz
add
aad
repz
mov
inc
repz
pop
push
dec
aam
rep
mov
movs
xor
inc
repz
pusha
add
(bad)
inc
repz
cld
int
cmp
inc
repz
data16
cmp
inc
repz
and
adc
aad
repz
jnp
daa
xlat
inc
repz
nop
out
inc
sub
inc
repz
cmp
dec
cs
repz
lods
imul
loop
cmp
adc
inc
repz
sbb
inc
repz
je
push
(bad)
inc
repz
push
push
(bad)
aam
repz
mov
xchg
xor
or
inc
repz
cwde
lock
repz
aad
repz
retf
pop
adc
aam
repz
or
(bad)
aam
repz
jnp
jnp
aad
repz
mov
inc
repz
stos
xchg
je
aad
repz
jg
cmps
in
aad
repz
mov
repz
repnz
mov
enter
repz
scas
test
push
sbb
ret
xlat
inc
repz
iret
and
push
jnp
out
leave
xlat
inc
repz
inc
repz
mov
repz
pop
jnp
xlat
inc
repz
mov
inc
repz
inc
mov
pop
push
inc
mov
rol
xchg
movs
xlat
inc
repz
test
(bad)
inc
repz
xlat
mov
pop
sbb
(bad)
inc
repz
sbb
xchg
mov
repz
inc
repz
retf
aad
repz
or
repz
mul
push
jno
inc
repz
dec
ss
jne
inc
repz
cs
inc
repz
repz
mov
inc
repz
aam
repz
mov
push
adc
sub
jg
aam
repz
sbb
adc
inc
repz
mov
and
inc
repz
div
mov
repz
cmp
aad
repz
add
dec
aam
repz
ins
xor
inc
repz
sub
aad
repz
push
cmp
fisubr
(bad)
fwait
cmp
das
fiadd
das
stos
inc
and
xchg
paddb
aad
repz
inc
pop
das
sub
inc
repz
daa
div
adc
inc
repz
mov
inc
repz
arpl
repz
repz
(bad)
inc
aam
repz
int
or
inc
repz
add
or
out
pop
icebp
xlat
inc
repz
or
repz
aam
repz
mov
push
(bad)
xlat
inc
repz
adc
dec
loope
inc
repz
xlat
mul
aam
repz
dec
sbb
(bad)
inc
repz
inc
repz
inc
repz
inc
repz
inc
jb
lods
aam
repz
xchg
and
rol
inc
repz
xor
fwait
(bad)
inc
repz
add
xchg
push
loope
adc
repz
rcl
test
inc
repz
adc
(bad)
mov
inc
repz
jb
(bad)
aad
repz
dec
neg
aad
repz
ja
inc
repz
mov
xlat
inc
repz
in
mov
(bad)
inc
repz
mov
repz
jge
aad
repz
mov
inc
repz
inc
repz
cmp
and
inc
repz
inc
repz
stos
lock
repz
xchg
dec
(bad)
not
inc
repz
inc
repz
stos
leave
call
inc
repz
ins
and
xlat
inc
repz
inc
lods
lods
out
inc
repz
pop
loope
call
test
xor
(bad)
inc
repz
aam
repz
dec
in
xlat
inc
repz
inc
repz
in
pop
fwait
rcl
repz
(bad)
in
(bad)
aam
repz
leave
aam
repz
fmulp
aam
repz
and
popf
push
call
ss
mov
dec
inc
jae
aad
repz
aad
repz
adc
stos
aad
repz
jmp
es
lods
nop
aam
rep
jae
xchg
xlat
inc
repz
mov
sar
inc
repz
imul
repz
mov
add
inc
repz
cmp
xlat
inc
repz
add
inc
repz
aad
pop
jne
inc
repz
jne
push
jnp
inc
repz
and
aad
repz
sbb
ficomp
inc
repz
adc
repz
fnstcw
ins
aam
repz
push
aam
repz
in
cli
les
repz
add
inc
repz
jno
adc
jp
bound
cli
xchg
iret
test
xlat
inc
repz
jecxz
dec
aam
repz
pushf
imul
cmc
pop
xor
inc
repz
or
loop
xor
push
test
inc
repz
and
inc
repz
popa
mov
repz
inc
repz
in
jb
aam
repz
(bad)
jno
aam
repz
ficom
aad
repz
add
inc
repz
aam
repz
sbb
outs
cmp
repz
sub
inc
rep
sbb
clc
push
aam
repz
sub
xchg
pusha
(bad)
(bad)
inc
repz
lock
sti
xlat
inc
repz
dec
xor
repz
jge
loopne
inc
repz
shl
(bad)
out
inc
repz
jmp
ins
out
(bad)
inc
repz
and
rcl
inc
repz
(bad)
inc
repz
aad
repz
pop
cmp
xchg
repz
fsub
(bad)
xlat
inc
repz
retf
aam
repz
aad
rep
inc
sbb
mov
inc
repz
and
mov
nop
sub
mov
xchg
out
xchg
mov
cld
cmp
movs
aam
repz
in
mov
repz
or
mov
iret
xchg
aad
repz
fadd
repz
cwde
xlat
inc
repz
sub
popf
aad
repz
rol
xlat
inc
repz
add
repz
repz
test
test
mov
mov
(bad)
inc
repz
movs
outs
je
inc
repz
loop
jnp
inc
repz
je
xlat
inc
repz
repz
leave
xlat
inc
repz
arpl
inc
repz
adc
mov
xchg
hlt
jbe
push
xlat
inc
repz
repz
xor
push
jbe
aas
or
aad
repz
aad
repz
shr
inc
xlat
inc
repz
or
data16
mov
dec
(bad)
inc
repz
lods
xor
inc
repz
mov
inc
repz
aam
rep
ins
pop
push
aam
repz
dec
and
inc
repz
adc
aad
repz
sub
mov
xor
pop
cmp
pop
stos
adc
(bad)
inc
repz
les
push
aad
repz
repz
je
aad
repz
or
add
inc
repz
cwde
cs
xlat
inc
repz
fimul
xlat
inc
repz
cld
or
and
repz
repz
adc
repz
(bad)
outs
inc
sti
xlat
inc
repz
repz
lds
mov
sbb
out
inc
repz
push
int
jmp
inc
repz
jnp
add
aam
repz
jecxz
sbb
push
imul
ds
imul
out
(bad)
(bad)
inc
repz
mov
inc
repz
outs
xor
(bad)
aad
repz
imul
aam
repz
arpl
out
mov
(bad)
inc
repz
pop
retf
aam
repz
aam
repz
popa
add
mov
repz
cmps
mov
repz
arpl
outs
jmp
sub
aam
repz
sub
aas
test
(bad)
inc
repz
jmp
(bad)
inc
repz
ror
lahf
aam
repz
iret
cmps
out
adc
repz
and
sbb
xchg
into
stos
mov
inc
repz
inc
repz
div
repz
stc
push
ja
inc
repz
aam
repz
add
jle
inc
repz
inc
repz
add
xor
inc
repz
inc
repz
dec
scas
ins
aam
repz
repz
out
out
push
aam
repz
aas
dec
pop
(bad)
inc
repz
cmp
repz
in
inc
xlat
inc
repz
fucomi
mov
xlat
inc
repz
mov
aad
repz
ror
inc
repz
xchg
inc
repz
stos
pop
push
xor
inc
repz
repz
sub
cmp
jnp
cld
and
inc
repz
out
daa
xlat
inc
repz
xchg
mov
aam
repz
lahf
sar
sub
(bad)
xchg
test
(bad)
and
adc
sub
pop
sbb
inc
repz
aad
rep
das
test
repz
inc
repz
inc
repz
repz
mov
xchg
dec
mov
repz
push
mov
repz
bound
cld
(bad)
inc
repz
(bad)
inc
repz
inc
repz
sub
inc
repz
outs
push
daa
in
aam
repz
mov
rcl
inc
repz
aam
inc
repz
cli
fcmovbe
inc
repz
xchg
aad
repz
repz
(bad)
repz
mov
inc
repz
cs
inc
repz
pop
mov
aad
repz
mov
inc
repz
cmp
mov
call
adc
inc
repz
xlat
inc
xrelease
in
mov
pop
stos
xchg
xor
inc
cli
push
nop
(bad)
inc
repz
scas
call
repz
adc
and
jg
xlat
inc
repz
cmp
xlat
inc
repz
icebp
call
sub
cmp
ds
aad
repz
repz
cmp
out
ss
xchg
jnp
inc
repz
jb
repz
inc
repz
push
push
(bad)
aad
repz
mov
(bad)
inc
repz
pop
mov
repz
sub
ins
aad
repz
repz
bound
sub
inc
repz
xlat
inc
repz
cli
pushf
pop
aad
repz
jle
pop
inc
aad
repz
inc
xlat
inc
repz
stc
dec
xlat
inc
repz
bound
dec
aam
repz
mov
inc
repz
les
mov
leave
cmp
inc
repz
cli
outs
ins
cmp
inc
repz
and
inc
repz
inc
repz
sbb
sub
inc
repz
out
(bad)
inc
repz
aad
repz
mov
xlat
inc
repz
adc
aad
repz
ja
aad
repz
call
fiadd
inc
repz
adc
(bad)
inc
repz
mov
repz
js
repnz
xchg
dec
pop
shl
rol
inc
fst
jne
rol
out
in
or
rol
xor
and
inc
repz
push
fwait
push
out
inc
repz
jne
jg
rol
xchg
push
ins
in
rol
ret
int
rol
pop
sar
or
mov
push
imul
sub
inc
repz
sbb
inc
repz
add
(bad)
repz
pop
(bad)
jmp
loope
int
inc
repz
outs
sub
mov
inc
repz
movs
arpl
mov
ins
icebp
ss
xor
xchg
adc
inc
repz
jnp
test
fnstsw
xor
in
nop
rol
bound
inc
repz
jg
call
inc
lahf
rol
adc
push
adc
repz
rol
(bad)
(bad)
pop
mov
inc
repz
push
lock
inc
repz
lahf
jno
inc
repz
rol
or
inc
repz
fnsave
repz
(bad)
xchg
arpl
inc
repz
mov
lock
inc
sbb
inc
repz
repz
xlat
push
rol
push
in
out
or
repz
jge
push
pop
rol
cmp
push
rol
repnz
test
inc
rol
pop
popf
pop
jmp
dec
cdq
and
dec
rol
or
fild
out
popf
pop
add
rol
ss
push
(bad)
xor
adc
cmp
inc
rep
gs
cmp
inc
repz
and
and
inc
repz
mov
dec
and
test
repz
cdq
pxor
rol
push
push
push
adc
inc
repz
repz
xor
rol
into
stc
cmp
(bad)
leave
loope
add
inc
repz
xchg
pop
add
inc
repz
dec
inc
or
inc
repz
inc
repz
push
mov
repz
in
rol
pop
ins
and
jbe
retf
rol
cli
push
inc
repz
mov
rol
stos
in
ret
jmp
inc
repz
enter
rol
mov
rcl
inc
repz
repz
sub
sbb
xor
(bad)
inc
repz
mov
rcl
inc
repz
rol
jbe
sti
leave
into
rol
(bad)
and
mov
inc
repz
pushf
pop
imul
ss
cwde
imul
push
scas
mov
rol
mov
rol
mov
rol
dec
in
pop
scas
rol
sahf
jo
cld
nop
rol
xor
ficom
mov
repz
ins
arpl
rol
pop
mov
(bad)
sbb
xor
int3
(bad)
repz
inc
repz
cld
push
aad
rol
data16
cmps
jno
inc
repz
repz
jl
pop
jp
inc
repz
jo
lods
jl
inc
repz
lock
dec
je
mov
rol
mov
rol
jbe
and
rol
ficom
repz
mov
xlat
push
rol
mov
and
pop
rol
inc
test
sub
fidivr
shr
inc
rol
xor
inc
rol
dec
fsub
repz
aas
dec
rol
cmp
cmps
xor
inc
repz
mov
ret
xor
and
repz
inc
repz
cmp
jno
rol
call
repz
cs
repz
dec
sub
inc
repz
and
sub
inc
repz
mov
repz
lods
jae
rol
out
ins
jne
rol
push
sub
sbb
mov
inc
repz
fild
rol
call
repz
rol
mov
rol
mov
das
mov
and
leave
clc
rol
mov
rol
push
(bad)
mov
rol
bound
repz
inc
repz
jmp
jmp
inc
repz
in
rol
repnz
rcl
inc
repz
repz
dec
fwait
dec
icebp
aad
repz
add
hlt
aad
repz
pushf
cli
xlat
inc
repz
repz
clc
and
aam
repz
std
(bad)
mov
aam
repz
inc
repz
stos
out
(bad)
inc
repz
and
ja
aam
repz
jge
jae
aad
repz
repz
or
test
loope
inc
int
inc
repz
and
repz
inc
repz
mov
mov
inc
repz
int
mov
cmp
repz
call
jae
lods
aam
repz
inc
add
adc
test
dec
mov
aam
repz
inc
repz
icebp
push
jno
aad
repz
loope
or
aam
repz
xor
mov
inc
repz
xchg
int
(bad)
inc
repz
or
pushf
je
inc
repz
mov
inc
repz
sbb
mov
push
lods
test
repz
mov
data16
repz
mov
inc
repz
repz
aad
repz
cmc
test
repz
xchg
je
aam
repz
ins
dec
(bad)
inc
repz
jns
add
aam
repz
aad
repz
sbb
inc
repz
mov
cli
fnsave
xlat
inc
repz
sub
inc
repz
repz
out
jae
(bad)
inc
repz
cdq
jae
adc
inc
repz
cdq
mov
aam
repz
mov
inc
repz
jmp
add
inc
repz
(bad)
xor
(bad)
inc
repz
call
or
movs
or
inc
repz
fs
lock
inc
repz
push
(bad)
cmc
(bad)
inc
repz
cdq
jne
(bad)
inc
repz
jo
addr16
(bad)
inc
repz
jo
mul
aam
repz
repz
sbb
jmp
sti
out
(bad)
inc
repz
sbb
or
aad
repz
inc
outs
inc
(bad)
(bad)
inc
repz
xchg
aad
repz
js
xchg
(bad)
inc
repz
mov
inc
repz
test
(bad)
aam
repz
jb
retf
aad
repz
lods
mov
ss
mov
(bad)
inc
repz
inc
dec
ds
inc
xrelease
inc
mov
aam
jo
(bad)
inc
repz
enter
aam
repz
mov
fbld
inc
cmp
xlat
inc
repz
mov
fld
ja
xchg
xlat
inc
repz
in
xchg
aad
repz
repnz
(bad)
call
repz
aad
repz
inc
dec
mov
inc
repz
push
inc
repz
jae
xlat
inc
repz
repz
inc
into
dec
js
inc
repz
inc
repz
data16
repz
mov
inc
repz
fs
outs
aam
repz
push
aad
repz
repz
mov
mov
data16
pop
jecxz
xlat
inc
repz
hlt
dec
push
inc
(bad)
inc
repz
movs
js
inc
aam
repz
es
and
xlat
inc
repz
xor
inc
repz
inc
repz
jmp
fmul
ds
repz
pop
xor
(bad)
inc
repz
cmp
lods
and
inc
xrelease
shr
aad
repz
(bad)
retf
inc
repz
loop
adc
inc
repz
mov
inc
repz
leave
sbb
inc
repz
push
aad
repz
sub
repz
xor
(bad)
inc
repz
jo
and
push
dec
push
movs
push
aam
repz
imul
repnz
cli
mov
(bad)
inc
repz
jecxz
(bad)
sti
aam
repz
aam
repz
jecxz
(bad)
aam
repz
ss
aam
repz
stos
repz
xchg
push
in
(bad)
inc
repz
aad
repz
cmp
and
add
ja
aam
repz
and
loop
push
mov
out
cmp
xlat
inc
repz
retf
sub
leave
aad
repz
mov
repz
push
div
adc
mov
inc
repz
inc
jp
mov
xchg
jecxz
mov
daa
scas
mov
xor
jge
(bad)
inc
repz
out
fidivr
stos
aad
repz
aad
repz
imul
jae
inc
xchg
aad
repz
out
in
fwait
aam
repz
les
aad
repz
repz
fs
inc
repz
mov
inc
repz
inc
sbb
aad
repz
mov
jb
inc
rep
pop
sbb
jne
inc
repz
push
pop
jp
inc
repz
sbb
inc
repz
(bad)
ffreep
arpl
inc
repz
push
mov
into
jnp
add
cs
int3
jno
aad
repz
pop
xlat
inc
repz
ja
sbb
xlat
inc
repz
jmp
repz
jp
xlat
inc
rep
push
mov
(bad)
inc
repz
(bad)
sbb
aam
repz
cmp
and
add
aad
repz
inc
or
xlat
inc
repz
outs
dec
stos
aas
xlat
inc
repz
inc
xrelease
xor
or
inc
repz
test
pop
mov
repz
xchg
pusha
sti
adc
inc
repz
cmp
aad
repz
mov
xlat
inc
repz
sbb
xlat
inc
repz
inc
repz
sub
xlat
inc
repz
(bad)
int3
or
cs
lock
inc
repz
adc
fcomi
aam
repz
aaa
pop
sti
aad
repz
call
cmps
test
xlat
inc
repz
cli
dec
ds
inc
repz
cs
jmp
imul
pop
stos
loopne
xlat
inc
repz
inc
repz
xlat
inc
repz
repz
repnz
jmp
pushf
xchg
(bad)
(bad)
inc
repz
xor
aam
repz
not
int
inc
repz
repz
(bad)
retf
aad
repz
sahf
inc
mov
xor
mov
push
int3
pop
mov
jmp
xchg
ficom
test
inc
repz
call
(bad)
inc
into
mov
aam
repz
push
test
xchg
xlat
inc
repz
mov
inc
repz
icebp
mov
(bad)
inc
repz
neg
repz
jbe
xchg
inc
repz
mov
inc
mov
inc
repz
mov
inc
inc
sbb
inc
repz
rcr
repz
call
repz
repz
xor
pusha
aam
repz
dec
aas
gs
repz
rep
(bad)
jmp
outs
aam
repz
call
fidiv
dec
movs
push
xlat
inc
repz
lods
push
pop
aam
repz
push
fs
aam
repz
getsec
inc
aad
repz
mov
inc
aad
repz
jmp
repz
jbe
xor
inc
repz
jmp
aaa
aad
repz
(bad)
cmp
inc
repz
xor
loopne
xlat
inc
repz
inc
test
ret
mov
ret
loope
aad
repz
aad
repz
imul
rep
mov
inc
push
xlat
inc
repz
inc
repz
inc
repz
scas
add
inc
repz
mov
repz
in
or
inc
repz
pop
mov
or
inc
repz
adc
repnz
fisub
inc
repz
inc
repz
rol
ret
cld
loop
inc
repz
stc
(bad)
jp
rol
mov
das
jle
rol
mov
into
in
rol
jle
xchg
cmps
rcl
inc
repz
arpl
rol
cmp
repz
repz
rol
jmp
repz
cmp
retf
repz
rol
and
data16
inc
repz
out
mov
inc
repz
imul
xchg
std
cmovb
lds
repz
rol
inc
icebp
fldenv
rol
push
inc
xor
scas
rol
dec
mov
fst
add
jne
rol
shl
lock
pop
mov
rol
xchg
xor
inc
repz
in
push
jmp
xchg
shl
repz
lea
rol
idiv
inc
repz
pop
jle
inc
repz
xchg
lods
mov
rol
xchg
inc
repz
daa
pop
imul
test
ins
rol
xchg
cmp
push
rol
ret
push
push
rol
jmp
repz
adc
inc
repz
test
inc
rol
jle
pop
inc
inc
rol
cmp
cld
jb
rol
xchg
inc
repz
mov
repz
jmp
inc
repz
cli
mov
rol
cs
inc
repz
inc
repz
push
scas
xor
push
leave
enter
inc
repz
push
xor
rol
stos
push
(bad)
jmp
in
scas
push
rol
ret
ds
inc
repz
mov
aam
rol
inc
aad
pushf
add
inc
repz
repz
lds
or
inc
repz
rcl
repz
mov
cli
icebp
rol
sbb
inc
repz
rol
sbb
jno
rol
(bad)
sbb
sahf
pushf
sbb
inc
repz
call
cwde
pop
aaa
out
rol
xor
repz
mov
xor
or
data16
inc
repz
xor
(bad)
inc
repz
add
fcmovnb
rol
(bad)
jl
push
(bad)
rol
ds
bswap
rol
xchg
int3
rol
call
repz
or
xor
fmul
pop
mov
and
mov
rol
repnz
mov
call
repz
fmul
test
add
icebp
scas
rol
mov
xchg
rol
mov
rol
push
rol
call
int
rol
push
push
xchg
adc
repz
mov
inc
repz
arpl
mov
rol
(bad)
fsub
repz
rol
push
lock
test
xchg
inc
repz
pusha
rol
bound
inc
sub
inc
repz
inc
lods
sbb
inc
repz
or
repz
mov
lock
rol
push
mov
popa
push
rol
sbb
pop
rol
mov
or
repz
in
jmp
repz
int3
ja
inc
rol
ss
les
inc
repz
test
dec
rol
pop
and
mov
rol
or
pop
aaa
xor
dec
scas
(bad)
cmp
inc
repz
pop
pop
aas
rol
es
fsub
rol
cli
push
xchg
inc
rep
xchg
ja
sub
inc
repz
repz
ficom
rol
(bad)
in
scas
xor
loop
fistp
call
repz
repz
dec
repz
aam
jbe
rol
es
fwait
jmp
dec
mov
scas
xchg
iret
aaa
hlt
rol
jb
mov
clc
rol
pop
xor
(bad)
rol
jb
je
loopne
inc
repz
push
movs
jmp
mov
rol
rcr
out
sbb
rol
ret
cs
rol
(bad)
test
rcr
rol
into
jg
call
adc
inc
repz
push
(bad)
mov
inc
repz
add
repz
mov
repz
cmps
mov
jnp
or
stos
push
dec
mov
and
ins
cmps
rol
jle
mov
repz
jae
fisubr
scas
sub
xchg
mov
inc
rep
jae
pop
cwde
rol
push
inc
dec
arpl
mov
inc
repz
imul
test
inc
repz
iret
imul
rol
jp
mov
jns
inc
repz
rol
stos
dec
and
inc
repz
(bad)
imul
sub
rol
sbb
cmp
rol
mov
rol
into
pop
sbb
pop
rol
fimul
mov
inc
repz
fild
rep
push
xchg
rol
(bad)
pop
sub
rol
mov
rol
sub
ins
fdiv
outs
adc
cmp
inc
repz
repz
shr
and
inc
repz
mov
daa
daa
rol
mov
rol
pop
mov
call
repz
fwait
adc
inc
repz
sub
xrelease
fcomp
rol
cs
test
es
mov
add
imul
rol
push
xchg
jle
(bad)
inc
repz
sbb
rol
call
repz
jne
rol
retf
mov
rol
push
(bad)
addr16
rol
push
pop
ds
cmps
outs
lods
out
in
rol
xchg
dec
sub
push
shr
aam
inc
repz
inc
repz
rol
sahf
push
jae
rcl
repz
cdq
push
rol
mov
ins
enter
bound
inc
repz
mov
mov
inc
repz
repz
(bad)
push
mov
pop
push
call
and
mov
or
xrelease
and
jbe
or
ret
outs
xchg
rol
jbe
or
xchg
ins
cwde
rol
cmps
push
clc
inc
popf
rol
rol
inc
repz
test
test
inc
repz
xchg
sub
mov
inc
repz
ficom
(bad)
rol
out
push
mov
jbe
test
ja
inc
repz
dec
mov
repz
cwde
fidivr
inc
repz
inc
repz
aaa
mov
data16
repz
adc
ins
rol
adc
push
rol
stos
xor
repz
xchg
outs
mov
aaa
pop
rol
push
call
mov
movs
dec
rol
bound
inc
repz
inc
repz
scas
div
cmp
inc
repz
(bad)
push
repz
(bad)
and
inc
repz
lds
(bad)
or
inc
repz
dec
cmovae
rol
(bad)
(bad)
(bad)
xor
rol
push
jbe
sbb
inc
repz
dec
sub
sbb
inc
rep
cmp
repz
(bad)
jmp
add
inc
repz
outs
sub
sbb
std
dec
or
inc
repz
addr16
inc
repz
inc
lods
dec
icebp
fld
sahf
or
inc
repz
dec
jns
fild
adc
mov
xchg
inc
repz
add
inc
repz
sub
inc
repz
and
pop
in
fiadd
adc
inc
repz
(bad)
scas
aad
inc
repz
adc
fiadd
scas
adc
inc
repz
inc
fwait
ret
fild
retf
mov
bound
inc
repz
aam
mov
inc
repz
push
mov
inc
repz
adc
fild
push
xchg
out
cmc
mov
dec
xchg
loop
sub
cmps
fiadd
mov
fild
not
pusha
pushf
scas
fild
sahf
xchg
loope
nop
fild
cli
icebp
mov
repz
cmp
inc
repz
add
pop
mov
cmps
mov
inc
repz
adc
mov
inc
repz
or
mov
inc
repz
pop
jp
inc
repz
inc
repz
or
dec
lds
push
inc
repz
fmul
ins
fadd
inc
stc
sbb
repz
xor
ja
fld
fisub
inc
repz
jno
jo
fadd
sahf
stc
adc
inc
fild
sahf
std
adc
repz
fadd
mov
dec
fild
mov
loope
xor
inc
repz
adc
inc
repz
rcr
fild
inc
lods
sbb
inc
repz
cmc
mov
repz
inc
repz
into
das
fild
jmp
repz
or
and
aaa
fcomp
fadd
mov
inc
xchg
pop
fild
push
imul
dec
add
inc
repz
repz
push
inc
rep
call
inc
repz
jecxz
sti
fild
into
inc
and
repz
cmp
push
(bad)
cmp
pop
jmp
inc
repz
das
in
fild
inc
fdiv
in
fiadd
push
dec
movs
(bad)
fiadd
mov
fadd
xor
ins
fstp
inc
repz
mov
jb
fild
add
fdiv
or
mov
scas
sub
cli
iret
fiadd
dec
sar
test
fild
push
pop
sbb
mov
or
lods
mov
int3
out
jne
fadd
push
sub
repz
enter
fild
out
push
rcl
lods
fld
xchg
les
xchg
fld
into
mov
inc
repz
repz
ror
aad
fld
sbb
dec
pop
mov
repz
icebp
mov
inc
repz
fsub
jae
inc
repz
adc
ja
inc
repz
stc
jnp
inc
repz
dec
dec
jge
inc
repz
adc
repz
xlat
and
repz
inc
repz
clc
mov
repz
adc
sub
cmps
clc
sbb
push
fiadd
push
cld
fld
stos
ror
stos
mov
inc
repz
fiadd
inc
repz
repz
sbb
fiadd
xor
xchg
xor
inc
repz
sub
fld
loop
mov
cmp
inc
repz
or
sbb
fadd
or
jns
fild
inc
int3
jb
and
inc
repz
xor
lds
fiadd
cs
jmp
xor
repz
or
push
pop
cwde
add
inc
pop
jo
push
fild
push
cwde
cli
pop
add
inc
repz
js
jmp
jg
push
fadd
call
repz
fild
jle
fwait
cmp
pop
cli
pop
jecxz
inc
repz
pushf
int
fiadd
push
fstp
fld
or
test
in
fiadd
push
mov
inc
repz
mov
test
bound
inc
repz
shl
rcr
repz
repz
mov
adc
inc
aaa
xor
fstp
fadd
sub
inc
rep
pop
bound
fiadd
xor
cs
fadd
push
mov
inc
repz
mov
cmps
fild
push
loop
test
inc
repz
ja
lods
fadd
push
mov
fild
out
xchg
loopne
xchg
fiadd
stos
inc
mov
cwde
fld
cs
fdiv
mov
inc
repz
imul
mov
fadd
bound
adc
fadd
push
das
xor
fadd
push
(bad)
pop
jns
inc
repz
and
inc
lahf
jno
arpl
inc
repz
jecxz
clc
data16
xchg
daa
sub
imul
sub
fadd
ret
outs
push
fld
adc
inc
repz
pop
fstp
inc
repz
mov
pop
fld
inc
mov
inc
repz
sub
mov
mov
repz
cdq
dec
fadd
cs
inc
repz
repz
pop
cmp
inc
repz
fild
mov
xchg
push
dec
mov
fld
inc
outs
jmp
repz
rcr
sub
dec
push
repz
fiadd
push
pop
(bad)
out
sbb
inc
repz
inc
repz
mov
repz
mov
repz
fadd
sahf
mul
div
fadd
sub
inc
repz
jb
dec
(bad)
fld
fcmovu
jb
jecxz
inc
repz
mov
in
inc
repz
adc
mov
fadd
stos
sbb
rcr
inc
xrelease
inc
repz
popa
fcomp
inc
repz
inc
repz
sahf
push
add
fiadd
ficom
(bad)
(bad)
fadd
jmp
repz
std
inc
into
fild
fisubr
retf
fild
dec
ret
mov
inc
repz
fiadd
repz
test
inc
repz
pop
mov
inc
inc
mov
popf
inc
stos
fadd
push
call
rcr
inc
repz
in
ds
fadd
sahf
push
out
cwde
fadd
push
adc
mov
out
jge
sbb
repz
fadd
sub
adc
mov
call
fidiv
int3
inc
jno
inc
repz
cmp
(bad)
jbe
inc
repz
repz
fidivr
inc
rep
inc
push
xor
fld
scas
dec
jae
fiadd
jle
pusha
je
fadd
ds
push
pop
ins
fadd
and
outs
push
fiadd
cmps
dec
fwait
js
fadd
retf
mov
fild
push
mov
mov
or
xor
inc
fild
repnz
nop
inc
fiadd
ds
or
inc
repz
xchg
cdq
dec
fiadd
xor
push
xor
inc
repz
ss
xor
out
aam
cmp
inc
repz
fadd
shl
mov
and
inc
repz
adc
jge
fadd
pop
pop
xchg
pop
sub
inc
repz
cmp
mov
xchg
push
adc
inc
repz
ss
fild
or
mov
sbb
inc
repz
repnz
push
fld
sub
and
add
inc
repz
call
repz
or
scas
or
inc
repz
into
and
fld
loop
jae
cli
fild
push
popa
repz
std
fild
outs
sbb
and
inc
repz
push
and
inc
repz
popa
inc
jmp
fdivrp
(bad)
sti
out
fild
mov
add
rcr
inc
repz
in
mov
aad
inc
repz
(bad)
fadd
and
jge
fcompp
inc
rep
and
or
fadd
or
sub
(bad)
fld
push
mov
inc
repz
xchg
push
push
int
inc
rep
cmp
scas
mov
inc
repz
xor
fiadd
mov
and
repz
shl
inc
mov
push
add
fadd
scas
lods
outs
mov
push
movs
lods
lods
fld
fdivrp
cmps
push
push
ins
int3
or
lea
repz
repz
add
sbb
mov
repz
jo
fld
sahf
cmp
inc
repz
movs
pop
aaa
jno
inc
repz
mov
repz
jecxz
fld
mov
or
(bad)
fadd
sub
cmps
data16
mov
int
fiadd
and
in
pop
outs
fadd
out
push
inc
mov
inc
repz
inc
repz
push
out
fstp
inc
repz
inc
repz
repz
or
call
call
repz
(bad)
aas
xor
inc
repz
test
inc
repz
cmp
fadd
ds
inc
repz
push
stc
inc
and
inc
repz
and
loope
add
fild
popaw
lods
or
fild
dec
popf
sub
adc
inc
rep
adc
aad
fild
cmps
pop
xchg
pop
sbb
inc
repz
inc
repz
add
inc
repz
adc
inc
repz
fstp
or
inc
rep
jns
ins
push
fild
xchg
jo
ins
repz
retf
cdq
hlt
fiadd
pop
push
mov
sti
fild
stos
or
std
fld
retf
inc
jecxz
inc
repz
dec
push
repz
jo
dec
jmp
cmp
(bad)
out
fadd
push
int3
xor
repz
pusha
dec
mov
data16
sub
fiadd
jbe
or
fstp
inc
repz
and
fadd
inc
repz
inc
repz
mov
inc
repz
inc
mov
inc
repz
or
repz
sub
xchg
mov
mov
jo
int
fld
(bad)
in
lock
inc
repz
shl
lods
fiadd
jp
xchg
mov
cmps
sbb
repz
dec
xor
fadd
loop
retf
fild
mov
fld
xchg
inc
push
test
fld
mov
and
(bad)
fild
(bad)
movs
add
scas
cwde
cmp
repz
inc
fs
fiadd
stos
sub
addr16
inc
repz
fild
cli
xchg
aas
cmp
inc
repz
popa
xor
inc
repz
shl
push
fadd
out
enter
fiadd
jp
(bad)
cmc
pop
fild
cs
lods
pop
fadd
dec
sbb
dec
inc
fld
adc
icebp
inc
fild
inc
and
inc
dec
fadd
out
inc
push
aam
fild
mov
fadd
push
test
fadd
es
xor
fld
sub
cmp
add
ins
and
inc
repz
fadd
out
les
fiadd
push
xor
sbb
fild
mov
repz
es
fadd
mov
fadd
inc
jl
mov
shl
add
aam
out
fadd
es
mov
call
rep
retf
(bad)
neg
inc
repz
les
pop
iret
pop
or
push
repz
test
fadd
scas
fwait
pop
lods
in
inc
rep
and
repz
inc
repz
ja
adc
inc
rcl
pop
repz
fcomp
inc
repz
ret
out
fadd
sahf
and
rcr
repz
(bad)
and
repnz
mov
sahf
jg
sbb
jecxz
xchg
mov
inc
repz
test
repz
xchg
mov
iret
mov
repz
inc
repz
inc
repz
(bad)
(bad)
retf
data16
fild
push
ret
xchg
sbb
xor
cwde
fadd
loop
dec
ins
pushf
fiadd
ss
(bad)
sbb
repz
fild
out
loopne
mov
inc
repz
adc
(bad)
fiadd
bound
(bad)
jo
inc
repz
repz
xchg
movs
arpl
inc
repz
inc
repz
jae
ret
inc
repz
sbb
js
fild
outs
imul
imul
adc
fld
retf
in
push
fiadd
push
arpl
xchg
push
fild
scas
(bad)
xchg
icebp
pop
fadd
xchg
repz
retf
push
loopne
fild
jbe
xchg
inc
repz
lahf
mov
repz
mov
inc
repz
pop
sub
xor
inc
repz
inc
repz
repz
jle
cmp
aas
dec
test
fadd
jmp
repz
stos
or
fld
inc
or
push
das
fadd
bound
inc
repz
cmp
repz
fld
ss
stos
pop
sbb
inc
repz
out
sbb
add
inc
repz
pminsw
mov
add
or
inc
repz
cmp
or
shl
lock
inc
shl
fld
outs
fidivr
sti
fiadd
ficom
inc
repz
inc
repz
and
cmps
and
inc
add
fiadd
ficom
inc
repz
into
inc
mov
push
push
pop
push
fcomp
inc
repz
push
inc
mov
mov
fild
sar
inc
repz
mov
fs
mov
fiadd
repnz
inc
xrelease
mov
push
scas
pop
mov
ficom
repz
sub
push
xchg
mov
sub
es
fadd
mov
retf
fiadd
(bad)
cmp
rcl
icebp
push
cwde
fild
push
push
repnz
fiadd
push
sbb
sbb
repz
es
fld
es
mov
repz
inc
repz
sub
jno
inc
repz
fld
loop
mov
jnp
inc
repz
fiadd
dec
pop
push
(bad)
arpl
inc
repz
pop
mov
ds
das
retf
inc
repz
cli
sub
repz
es
push
fiadd
mov
fadd
mov
fld
push
jbe
mov
repz
xor
inc
repz
movs
sub
repz
mov
inc
repz
push
ret
jbe
fiadd
rcr
fwait
xchg
xor
inc
repz
cmp
ins
xor
dec
stos
gs
inc
repz
add
aas
fld
(bad)
stos
or
repz
mov
xor
inc
repz
imul
and
or
inc
repz
dec
ss
mov
inc
repz
mov
lea
inc
repz
sahf
int
add
inc
rep
retf
add
ret
or
inc
repz
call
(bad)
stc
loop
repnz
jbe
inc
xchg
mov
clc
lds
es
mov
es
out
jecxz
inc
repz
inc
repz
movs
cmps
push
lds
scas
cmc
xlat
cdq
out
mov
rol
inc
repz
pop
in
popa
xlat
mov
mov
mov
mov
pop
pop
faddp
inc
repz
inc
repz
mov
(bad)
mov
xor
rep
ins
(bad)
int3
mov
mov
inc
repz
mov
mov
inc
repz
(bad)
xchg
mov
pop
mov
mov
cmc
or
cmps
mov
stos
les
inc
stc
(bad)
push
scas
mov
test
push
xchg
les
push
stc
(bad)
lds
and
or
icebp
mov
mov
add
add
xchg
inc
rep
mov
inc
repz
inc
repz
jns
jb
inc
repz
and
ja
inc
repz
je
jns
inc
repz
loope
into
jge
inc
repz
sahf
mov
es
jl
mov
imul
repz
loope
jae
mov
cmp
mov
push
sub
(bad)
popa
inc
and
inc
repz
(bad)
cmp
inc
repz
push
ins
inc
les
xchg
add
inc
mov
dec
mov
mov
inc
repz
and
inc
sub
les
mov
mov
aas
mov
and
inc
repz
mov
mov
lds
es
inc
repz
in
mov
bound
sub
lds
dec
adc
mov
xchg
adc
sbb
inc
repz
cmp
int
xchg
add
inc
repz
pop
mov
mov
inc
repz
pop
(bad)
inc
repz
adc
lods
imul
mov
js
jns
les
pop
mov
and
mov
call
sbb
xchg
out
mov
sub
mov
lds
mov
mov
jl
jno
lds
mov
dec
cmc
ffreep
inc
repz
sbb
repz
hlt
add
(bad)
repz
adc
les
ficomp
int
inc
repz
pop
sub
lds
cli
js
lods
mov
inc
repz
enter
inc
repz
aam
mov
les
push
mov
mov
call
inc
repz
in
cmp
mov
scas
les
cli
lods
leave
ret
inc
repz
lds
mov
out
ficomp
push
jb
pushf
les
jp
sbb
xrelease
xchg
inc
repz
sbb
mov
inc
repz
movs
jmp
repz
push
shl
inc
repz
(bad)
jne
inc
rep
xor
repz
dec
push
jle
inc
repz
cwde
scas
loop
les
sahf
test
push
lds
mul
inc
repz
fwait
in
les
or
inc
pusha
push
mov
push
les
mov
mov
aam
jl
lds
xchg
pusha
dec
inc
mov
inc
les
inc
loopne
xchg
dec
mov
dec
les
xchg
in
daa
push
data16
gs
les
ds
mov
cmp
inc
repz
lds
sahf
not
mov
sub
inc
repz
sub
sbb
leave
adc
inc
repz
addr16
push
mov
jo
cld
sbb
inc
repz
cld
outs
sbb
cmp
test
les
call
repz
repz
inc
repz
mov
mov
lds
pop
aaa
outs
aam
mov
jecxz
xor
les
(bad)
jmp
shl
inc
repz
xchg
je
out
inc
repz
mov
repz
xchg
xchg
lds
stos
jg
sbb
lds
(bad)
jae
retf
inc
repz
adc
fadd
inc
repz
dec
mov
lds
and
repz
mov
or
lock
lds
mov
int3
int3
int
inc
repz
dec
les
test
inc
stos
stos
push
mov
pop
xor
out
aad
repz
inc
repz
jp
fstp
(bad)
inc
xrelease
inc
repz
fsubr
xlat
inc
repz
mov
push
inc
add
in
inc
repz
retf
aad
repz
in
(bad)
inc
repz
repz
or
inc
repz
lods
cld
fcom
inc
repz
adc
das
(bad)
inc
repz
iret
rcl
repz
inc
repz
in
leave
(bad)
inc
repz
repz
popf
or
aam
rep
mov
inc
rep
push
sub
mov
fld
dec
mov
mov
inc
repz
(bad)
cmp
aad
repz
imul
xlat
inc
repz
sub
xlat
inc
repz
jae
nop
(bad)
inc
repz
inc
int3
les
xor
inc
repz
xlat
inc
repz
repz
mov
push
xchg
inc
repz
xchg
jl
mov
inc
repz
jle
(bad)
inc
xrelease
dec
jae
inc
repz
cwde
je
inc
repz
mov
inc
repz
jle
inc
repz
in
jb
popa
aad
repz
and
inc
lea
repz
shr
inc
repz
repz
inc
repz
jle
pop
(bad)
inc
repz
pop
xlat
inc
repz
leave
scas
inc
(bad)
inc
repz
fwait
jl
aad
repz
aad
mov
aam
repz
add
pusha
dec
aad
rep
add
repz
inc
repz
or
cmp
inc
repz
inc
repz
jne
mov
xchg
sbb
inc
repz
ins
fild
xlat
inc
repz
repz
fmulp
adc
inc
rep
loope
mov
aam
repz
inc
repz
xchg
xor
xlat
inc
repz
loope
test
dec
xor
add
inc
repz
pop
jo
or
inc
repz
iret
push
aad
repz
jmp
je
cld
not
inc
repz
inc
sahf
clc
xlat
inc
ds
adc
(bad)
inc
repz
cwde
loope
loopne
inc
repz
out
inc
repz
xchg
jb
call
fs
xor
cmp
inc
repz
inc
and
xlat
xlat
inc
repz
dec
out
fcmovbe
inc
repz
xlat
inc
repz
or
xchg
ret
repz
fdiv
inc
(bad)
rep
push
dec
scas
leave
aam
repz
sbb
into
xlat
inc
repz
cmp
repz
inc
repz
xor
int
aam
repz
push
mov
rcl
inc
repz
adc
xor
mov
repz
dec
scas
xlat
inc
repz
mov
inc
repz
inc
repz
or
xchg
call
add
jl
mov
rcr
icebp
mov
or
xrelease
repz
inc
jp
inc
repz
xchg
in
(bad)
inc
repz
lods
mov
xlat
inc
repz
loopne
imul
repz
mov
fidivr
test
xlat
inc
repz
repz
inc
adc
push
aad
repz
es
aam
repz
xor
pop
aad
repz
inc
repz
call
inc
repz
cmp
cwde
dec
xlat
inc
repz
(bad)
inc
repz
sub
xor
inc
rep
or
js
aad
repz
inc
sar
aam
repz
adc
cmp
inc
repz
loopne
and
inc
rep
xor
loop
(bad)
inc
repz
aam
sub
inc
repz
or
xlat
inc
repz
(bad)
ficom
xlat
inc
repz
inc
mov
repz
jo
dec
sbb
inc
repz
push
nop
jmp
ins
dec
push
add
inc
repz
inc
repz
fdiv
push
(bad)
inc
repz
ja
(bad)
icebp
xlat
inc
repz
xor
inc
repz
jnp
sub
(bad)
inc
repz
rcr
(bad)
xlat
inc
repz
inc
loope
inc
repz
in
inc
repz
pop
or
jmp
inc
repz
pop
ss
(bad)
inc
xrelease
inc
repz
sub
(bad)
inc
repz
jecxz
xlat
inc
repz
mov
xor
xlat
inc
repz
inc
fwait
ret
aad
repz
and
(bad)
repz
dec
jae
leave
(bad)
inc
repz
cmp
int3
xlat
inc
repz
repz
lahf
sbb
mov
inc
repz
in
mov
xchg
and
mov
jae
aas
mov
ror
call
adc
xor
(bad)
inc
repz
sbb
shr
inc
push
nop
aam
repz
(bad)
(bad)
xlat
xchg
(bad)
inc
repz
sti
pop
in
xlat
inc
repz
and
xchg
popf
arpl
push
or
inc
repz
adc
mov
inc
repz
mov
aam
repz
cmc
outs
jae
inc
repz
(bad)
cmps
mov
xor
dec
ins
jns
inc
repz
sbb
repz
aaa
mov
pusha
aam
repz
jecxz
or
adc
inc
repz
repz
cwde
push
(bad)
inc
repz
push
(bad)
inc
repz
xor
pop
xlat
inc
repz
sbb
repz
cmp
inc
aad
repz
rol
jb
inc
adc
inc
repz
xor
dec
(bad)
inc
repz
sub
xlat
inc
repz
push
and
(bad)
inc
repz
lds
cmp
aas
(bad)
inc
repz
aas
and
and
inc
repz
(bad)
push
daa
aam
repz
repz
inc
repz
adc
adc
inc
repz
rcr
push
aam
xrelease
out
jle
sbb
cmp
add
inc
repz
cmps
pop
aam
repz
sbb
or
inc
repz
ja
adc
(bad)
mov
inc
repz
popf
adc
aad
rep
sbb
repz
into
int
std
aam
repz
or
xlat
inc
repz
add
(bad)
inc
repz
sbb
jmp
jp
(bad)
aad
rep
out
jge
(bad)
inc
repz
loop
aad
inc
repz
mov
fcmovnbe
inc
repz
pop
xor
xlat
inc
repz
repnz
ret
repz
stos
imul
and
sbb
aad
repz
xor
aad
repz
dec
sbb
repz
jp
dec
push
mov
add
mov
dec
push
sbb
call
cmp
sti
sbb
out
adc
repz
call
push
jb
ss
aam
repz
(bad)
cwde
aad
xrelease
rcl
(bad)
inc
repz
inc
mov
sbb
add
jle
imul
mov
inc
repz
push
jl
jb
inc
rep
retf
jne
inc
repz
dec
mov
xlat
inc
repz
sbb
xlat
inc
repz
dec
mov
push
mov
inc
repz
outs
sub
push
push
or
(bad)
inc
repz
ret
push
xlat
inc
repz
add
push
aad
repz
inc
repz
inc
pop
(bad)
inc
repz
lods
adc
inc
repz
(bad)
in
inc
xlat
inc
repz
bound
dec
(bad)
inc
repz
push
les
aad
repz
inc
repz
adc
repz
and
aam
xrelease
and
aas
xlat
inc
repz
(bad)
inc
repz
inc
repz
xchg
sub
inc
repz
loop
cs
repz
inc
rep
push
jns
push
(bad)
inc
repz
mov
sbb
inc
repz
pop
stc
pop
xlat
inc
rep
jb
je
aad
repz
xor
mov
jle
les
(bad)
inc
xrelease
xlat
or
inc
repz
aad
das
repnz
push
lahf
sbb
rol
pop
mov
jl
rol
mov
sbb
repz
xchg
mov
loop
inc
repz
sbb
rol
or
inc
repz
add
inc
repz
ret
rol
out
in
ds
rol
mov
rol
(bad)
sar
(bad)
inc
repz
repz
xor
inc
repz
add
retf
add
rol
ret
sub
jne
stos
mov
inc
repz
repz
inc
repz
inc
repz
inc
dec
cmps
rol
sub
test
mov
jo
rol
mov
rol
ds
fcom
sub
fwait
rol
mov
rol
cli
imul
repz
outs
xchg
inc
repz
xchg
je
mov
inc
repz
mov
inc
repz
bound
jno
inc
rep
popf
das
ja
inc
repz
ins
xchg
push
rol
xchg
aad
mov
repz
ss
rol
dec
loope
pop
rol
out
scas
outs
push
inc
repz
inc
repz
test
inc
repz
inc
rep
push
call
jge
sbb
repz
ret
inc
repz
add
inc
rol
faddp
std
inc
dec
rol
stos
cmp
inc
repz
ds
(bad)
jne
fidiv
mov
adc
rol
dec
sbb
aas
rol
shl
inc
repz
lea
and
inc
repz
rol
cli
gs
sub
pop
sub
repz
rol
(bad)
pop
mov
sbb
inc
repz
(bad)
sbb
inc
repz
adc
adc
inc
repz
jne
addr16
inc
repz
mov
repz
or
pop
repnz
jp
pop
cdq
cmc
rol
ds
cmovp
rol
or
(bad)
rol
dec
nop
or
loope
inc
repz
sbb
rol
cli
int3
fmul
jmp
or
repz
sub
clc
fisttp
rol
cli
push
outs
popf
fcom
inc
repz
test
jo
rol
xchg
ret
inc
repz
pusha
je
(bad)
rol
pop
shl
mov
rol
scas
lock
xlat
int
inc
repz
clc
xor
inc
repz
stos
mov
inc
repz
test
nop
mov
push
(bad)
mov
cmp
fbld
fcomp
daa
movs
rol
outs
add
repz
scas
rol
data16
repz
aam
xchg
xchg
rol
idiv
cwde
rol
cs
fwait
inc
pushf
rol
bound
adc
repz
repz
popa
sbb
rol
dec
jl
add
shr
jno
inc
repz
div
repz
in
into
jp
inc
repz
sub
jl
inc
repz
repz
repz
xchg
cmc
imul
repz
inc
repz
push
inc
repz
adc
nop
repnz
rol
scas
mov
inc
repz
push
in
rol
outs
mov
fild
inc
repz
int3
sub
adc
das
dec
rol
bnd
shl
inc
repz
or
lock
rol
xor
arpl
mov
rol
pop
adc
frstor
rol
sub
inc
repz
push
sub
inc
repz
adc
adc
inc
repz
mov
inc
repz
repz
lods
pop
cmc
sbb
inc
repz
repz
xchg
adc
rol
mov
rol
ds
les
rol
sahf
mov
inc
repz
xor
repz
or
stc
rol
xor
inc
repz
add
repz
aam
in
inc
repz
xor
rol
inc
jg
jb
rol
mov
ja
rcl
inc
repz
icebp
(bad)
rol
xchg
mov
inc
repz
imul
fst
inc
repz
xchg
addr16
repz
ret
mov
rol
mov
rol
(bad)
outs
pop
add
rol
inc
inc
les
push
xchg
xchg
imul
iret
(bad)
mov
rcr
repz
sub
stc
mov
dec
repz
sub
push
test
push
scas
rol
mov
rol
(bad)
mov
inc
repz
inc
cmp
lahf
rol
xchg
xchg
imul
and
repz
jae
int
rol
jbe
cmp
jo
inc
repz
fidiv
inc
repz
xchg
or
inc
repz
call
sbb
rol
rcl
inc
rep
fucomip
adc
inc
repz
in
ins
rol
retf
arpl
inc
repz
cmps
int
rol
cmps
jecxz
push
pop
rol
push
mov
inc
repz
ja
mov
rol
mov
rol
bound
jmp
fadd
mov
test
xor
inc
repz
aas
aaa
rol
ficom
mov
rep
sti
test
repz
rol
out
(bad)
sub
inc
repz
cmp
push
out
outs
push
rol
not
ret
les
rol
mov
xchg
pop
pop
rol
adc
aaa
ror
inc
repz
out
adc
inc
repz
rol
jbe
jle
(bad)
rol
xor
sub
jmp
(bad)
and
jb
jb
mov
mov
inc
repz
(bad)
scas
rol
xchg
cmp
shl
and
mov
inc
repz
push
cld
cs
inc
repz
inc
repz
lahf
(bad)
jne
inc
repz
repz
xor
push
inc
repz
out
sti
push
rol
mov
rol
out
ret
rol
sahf
sbb
ja
rol
pop
inc
neg
dec
rol
push
xchg
movs
or
rol
fcmove
pushf
movs
xor
cmps
test
repz
stos
aas
rol
out
mov
repz
inc
pop
cmc
rol
jbe
out
sub
inc
repz
mov
sub
neg
ins
adc
inc
repz
or
rol
mov
rol
dec
jp
cmp
rol
push
stos
pop
imul
inc
repz
out
add
xchg
add
rol
es
call
repz
jno
xor
inc
repz
in
cmp
fiadd
shr
inc
repz
mov
mov
fadd
fisub
pop
loope
inc
repz
enter
inc
repz
add
fild
(bad)
jno
test
fiadd
mov
fild
(bad)
fst
(bad)
fiadd
or
gs
inc
repz
call
dec
mov
fiadd
out
popa
pop
int
fiadd
out
cdq
xchg
fmul
fiadd
push
sbb
repz
sar
inc
rep
dec
les
mov
inc
repz
rcr
(bad)
lea
mov
xchg
sub
push
popa
int
movs
fadd
repnz
test
stos
fiadd
push
aad
xchg
lods
fild
retf
pop
nop
fadd
sahf
(bad)
xchg
xchg
fadd
mov
fld
sub
repz
in
pop
sbb
repz
push
test
inc
repz
inc
dec
data16
inc
repz
fadd
cmps
lods
mov
repz
inc
test
fld
sbb
aad
jg
inc
repz
es
inc
xrelease
inc
repz
pop
push
xchg
xchg
cmc
ins
fild
inc
jge
ret
inc
repz
test
inc
repz
mov
pop
pop
fld
add
aam
fld
stos
mov
inc
repz
stc
es
fld
sbb
cmp
dec
fild
xchg
ins
test
xor
inc
repz
lods
mov
fild
es
inc
repz
(bad)
(bad)
cmp
pop
jno
and
inc
repz
inc
repz
inc
repz
jns
ds
inc
cmp
inc
repz
std
push
xchg
test
inc
repz
and
fiadd
and
inc
repz
loope
add
cdq
sbb
repz
add
cli
hlt
(bad)
dec
repz
mov
fld
dec
jo
idiv
fild
adc
inc
repz
in
push
jecxz
inc
repz
and
(bad)
out
inc
repz
dec
jmp
fild
jbe
push
aaa
in
fld
xor
test
rcr
inc
repz
mov
(bad)
fadd
(bad)
xor
repz
lock
(bad)
inc
repz
mov
xchg
rcr
repz
je
dec
(bad)
repz
repz
repz
lods
pop
mov
inc
repz
fld
xchg
inc
repz
or
mov
dec
push
repz
and
fild
mov
loope
stos
fiadd
repnz
repz
and
mov
jo
xchg
fild
inc
adc
cwde
fiadd
sbb
xchg
rcr
xchg
push
repz
mov
repz
repz
mov
inc
repz
dec
ret
inc
repz
repz
inc
repz
fld
xlat
inc
repz
(bad)
inc
repz
inc
xchg
push
xlat
inc
repz
inc
repz
xchg
test
rol
sub
inc
repz
mov
repz
inc
repz
fcomp
repz
scas
(bad)
inc
repz
fs
repz
xor
shl
mov
rol
push
inc
cmp
mov
rol
mov
jnp
mov
mov
inc
repz
inc
rep
aam
repz
(bad)
lods
xchg
aad
repz
push
adc
sar
xchg
mov
inc
repz
ds
dec
aad
repz
rol
dec
aad
repz
adc
inc
repz
cmp
inc
repz
retf
fild
aad
repz
sbb
adc
inc
repz
jbe
or
inc
repz
pop
pmullw
outs
mov
xchg
rol
outs
jmp
inc
repz
or
inc
repz
or
inc
repz
rol
outs
aad
push
jl
inc
repz
or
inc
repz
mov
rol
adc
ror
rol
scas
xchg
jno
xor
inc
repz
fnstsw
sti
or
inc
repz
xchg
inc
rep
(bad)
inc
repz
mov
or
adc
jl
(bad)
inc
daa
das
pop
mov
push
in
inc
repz
and
out
int3
out
call
mov
repz
add
jl
aad
movs
mov
push
repnz
aad
xor
sub
movs
xchg
lahf
in
jne
repz
mov
repnz
add
in
pop
in
aad
sti
dec
in
les
in
inc
jmp
xor
out
in
inc
repz
pop
in
aad
repz
jecxz
sub
cmp
inc
jg
dec
push
repnz
add
ins
in
jg
and
push
ja
rol
fild
test
das
or
sub
push
add
adc
xlat
jg
add
sti
repnz
(bad)
cli
aad
iret
in
movs
in
stc
push
repnz
rcl
in
(bad)
movs
adc
inc
loop
repz
xchg
addr16
rol
daa
rol
add
in
cli
jne
cmp
(bad)
ss
out
xor
push
bound
or
sub
mov
sub
(bad)
(bad)
frstor
(bad)
mov
rcl
ins
in
jecxz
loop
inc
mov
ret
push
and
xchg
add
int
sbb
xlat
dec
daa
shl
xor
jmp
call
repz
rcr
fdiv
call
out
add
sub
push
add
inc
repz
sub
in
mov
and
dec
jmp
adc
dec
repz
fucom
xlat
dec
out
sbb
sbb
fiadd
sbb
push
inc
repz
pop
ins
xchg
pop
mov
test
aad
repz
ret
and
repnz
lahf
cmp
cmp
sahf
jl
aad
repz
mov
test
mov
loop
retf
bound
call
outs
movs
repz
mov
inc
xlat
lods
jne
lea
aam
xlat
mov
pop
adc
mov
in
inc
ret
repz
ret
sbb
test
or
shl
mov
push
bound
xlat
outs
and
sbb
inc
jmp
div
arpl
dec
xlat
call
int3
push
(bad)
cmc
addr16
(bad)
int3
jb
pop
aam
repnz
(bad)
mov
sub
aam
mov
(bad)
ja
push
xchg
loop
cli
aam
(bad)
push
mov
sub
aam
mov
(bad)
ja
push
xchg
mov
add
bnd
push
push
repnz
xchg
call
mov
add
and
push
aad
in
mov
in
xchg
mov
stos
retf
int3
inc
(bad)
les
ret
mov
xchg
inc
jne
cwde
in
sub
cld
or
xlat
mov
repnz
out
or
jecxz
std
sbb
jne
cli
repnz
push
lock
pop
dec
repz
sti
std
aam
xlat
in
push
cmp
int3
inc
inc
inc
sar
shl
out
addr16
fnstenv
iret
sbb
add
dec
pop
repz
jmp
xlat
push
add
add
retf
outs
add
jmp
(bad)
pusha
cld
fs
loope
add
repnz
(bad)
and
mov
mul
inc
jae
loope
arpl
repnz
out
loope
push
repz
out
loope
jecxz
repnz
(bad)
repz
and
xchg
out
loope
arpl
repnz
jmp
inc
jae
inc
rol
rcr
mov
mov
xchg
out
adc
jae
bnd
inc
inc
add
shl
loop
jae
loope
add
sbb
mov
xlat
lahf
cmp
add
rol
ds
mov
sbb
adc
icebp
not
inc
das
cmp
inc
arpl
loope
mov
add
and
out
fist
fiadd
mov
call
sbb
sbb
cmp
cmp
repnz
lahf
cmp
lea
pop
loop
and
jne
div
(bad)
addr16
sti
xchg
add
int
loopne
(bad)
outs
in
repz
ret
(bad)
xlat
call
int3
inc
xlat
call
repz
jb
and
es
outs
add
sbb
inc
inc
test
cli
jne
ds
mov
and
outs
add
sbb
inc
inc
test
(bad)
aas
popa
jmp
frstor
mov
in
sbb
mov
fld
outs
in
jne
lock
outs
and
loope
inc
(bad)
mov
jmp
(bad)
int3
xor
in
fs
hlt
leave
mov
in
sar
outs
in
jne
icebp
repnz
cld
lock
xlat
in
ins
and
loope
inc
xlat
call
rcr
loope
inc
(bad)
in
cmc
dec
in
rcl
pop
int3
ret
(bad)
in
hlt
stos
std
push
int3
inc
(bad)
push
dec
add
(bad)
and
es
(bad)
out
mov
repnz
add
cmp
adc
and
loope
repnz
xlat
in
ins
and
aad
inc
fbld
loope
repnz
outs
test
lds
loope
movs
adc
(bad)
inc
add
jl
fisubr
mov
adc
lock
sbb
sub
(bad)
repz
(bad)
(bad)
shl
(bad)
xchg
rcr
(bad)
ds
lods
loope
(bad)
inc
das
cmp
rol
fist
dec
jmp
loop
xor
(bad)
jno
std
repnz
(bad)
ss
jmp
int
neg
call
call
into
push
aas
sahf
stc
popa
fmul
call
call
add
fsub
inc
push
fbld
inc
xchg
inc
jo
in
sar
repnz
in
dec
push
repnz
(bad)
into
adc
repnz
aam
out
dec
push
repnz
not
in
jecxz
mov
les
je
mov
rcr
mov
into
mov
mul
lock
movs
pusha
mov
pop
ja
(bad)
dec
popf
jnp
pop
retf
mov
jge
xchg
xchg
mov
pop
mov
and
pop
mov
sbb
pop
leave
jecxz
inc
mov
jne
test
js
dec
or
jne
xchg
xchg
out
cmps
test
cdq
dec
cld
in
mov
jle
mov
mov
pop
inc
scas
retf
std
jne
push
dec
nop
push
pop
jns
push
pop
hlt
inc
jb
pop
mov
pop
sub
add
rcl
fs
inc
pop
pop
inc
mov
pop
inc
rol
sbb
push
xchg
lods
sahf
push
xchg
movs
addr16
popf
out
inc
hlt
stc
f2xm1
pop
fs
in
stos
mov
hlt
or
ins
push
mov
push
dec
xchg
adc
cld
stos
addr16
or
jg
pop
pusha
imul
ret
int3
mov
jne
loope
je
retf
std
je
xchg
xchg
jle
pop
clc
mov
movs
outs
mov
outs
mov
or
lock
stc
xchg
dec
pop
cld
stos
or
mov
ror
mov
jnp
mov
out
pop
mov
mov
dec
mov
shr
or
mov
xchg
nop
and
mov
(bad)
clc
lds
push
jg
fs
push
(bad)
int
shl
or
sbb
js
xchg
push
js
inc
and
cmp
push
adc
jle
dec
jae
in
lock
inc
pop
jp
lods
xchg
jnp
dec
cmp
repz
mov
push
sub
fwait
pop
test
cmp
pop
add
fimul
jns
into
mov
sbb
sub
cwde
loope
jb
xor
jno
dec
mov
jnp
dec
nop
push
adc
leave
dec
cs
push
push
fadd
rcl
push
in
gs
pop
rcl
mov
hlt
sbb
fs
out
push
jo
push
adc
arpl
dec
(bad)
je
data16
pop
(bad)
jl
stos
(bad)
xor
or
and
xchg
mov
repz
cmp
mov
dec
das
jae
mov
pop
aas
enter
push
mov
hlt
adc
(bad)
hlt
pop
fs
mov
sub
dec
lahf
add
dec
lahf
and
sub
pop
lahf
and
pop
rcl
mov
scas
mov
inc
mov
clc
dec
(bad)
je
data16
pop
(bad)
jl
stos
(bad)
xor
or
and
icebp
adc
jg
jp
cmp
mov
dec
das
jae
mov
xor
les
xchg
jl
inc
mov
hlt
adc
(bad)
hlt
pop
fs
mov
xchg
das
out
lahf
add
sub
pop
lahf
and
pop
rcl
mov
repz
inc
mov
clc
dec
(bad)
je
data16
pop
(bad)
jl
stos
(bad)
xor
or
es
xchg
adc
add
jp
cmp
mov
dec
das
jae
mov
mov
(bad)
call
mov
hlt
adc
(bad)
hlt
pop
fs
mov
push
add
lahf
and
sub
pop
lahf
and
pop
rcl
mov
aam
push
inc
mov
lock
pop
(bad)
jl
stos
(bad)
xor
or
and
repz
idiv
cmp
mov
dec
das
jae
mov
inc
repnz
or
xchg
jl
inc
mov
hlt
adc
(bad)
hlt
pop
fs
mov
adc
sub
popf
add
sub
pop
xchg
and
pop
fst
mov
add
imul
xchg
jbe
pop
(bad)
jo
stos
(bad)
cmp
or
es
test
jg
outs
pushf
cmp
cmps
mov
das
jae
mov
aas
xchg
xor
je
clc
xchg
jl
inc
mov
hlt
sbb
fs
mov
cmp
out
lahf
add
inc
ret
je
data16
push
(bad)
jl
stos
(bad)
xor
or
mov
sub
repz
sar
pushf
jne
scas
mov
das
jae
mov
aaa
lods
pop
cdq
je
call
rcl
ds
adc
(bad)
hlt
pop
fs
into
ja
jecxz
sub
inc
lock
mov
lahf
and
pop
rcl
mov
jg
arpl
cmp
inc
ret
je
data16
push
(bad)
jl
stos
(bad)
xor
or
fs
push
push
add
pop
pushf
jne
scas
mov
das
jae
mov
and
xchg
pushf
je
test
jo
inc
rcl
ds
adc
(bad)
hlt
pop
fs
into
ja
dec
test
lahf
inc
int
xchg
inc
lock
mov
lahf
and
pop
rcl
mov
ret
adc
inc
call
je
data16
push
(bad)
jl
stos
(bad)
xor
or
fs
push
inc
jg
pop
pushf
jne
scas
mov
das
jae
mov
cwde
jae
arpl
xchg
jo
inc
rcl
ds
adc
(bad)
hlt
pop
fs
into
ja
jae
aam
inc
lea
inc
lock
mov
lahf
and
pop
rcl
mov
mov
mov
cwde
data16
xchg
dec
out
pop
cwde
lahf
adc
lahf
pusha
lods
dec
xchg
imul
in
(bad)
sbb
jge
mov
jo
inc
rcl
xor
je
in
icebp
jno
jg
or
xor
cmps
or
inc
call
je
data16
xchg
dec
out
pop
adc
fistp
imul
in
(bad)
sbb
faddp
xor
jo
inc
rcl
xor
jl
jge
repz
jg
or
xor
cmps
or
inc
call
je
data16
xchg
dec
out
pop
mov
sub
inc
mov
(bad)
sbb
nop
arpl
cmp
fwait
push
lock
xlat
retf
jnp
ins
ds
ret
je
js
jl
inc
mov
mov
jle
or
lock
jg
push
pushf
pop
shl
pop
fnsave
loope
push
fwait
inc
mov
clc
dec
xor
mov
xchg
scas
pop
add
xchg
rcr
push
lock
xlat
retf
jnp
fwait
xadd
je
mov
mov
mov
jle
or
repz
sbb
jecxz
das
shl
pop
(bad)
pop
xchg
in
inc
je
dec
xchg
popa
lock
mov
fnstenv
in
sub
inc
enter
mov
movs
stos
data16
pusha
mov
jg
jbe
push
shr
dec
das
shr
pop
ror
cmp
pushf
jl
bound
xchg
je
inc
hlt
push
push
xchg
(bad)
push
push
xchg
out
pop
pushf
pop
xchg
fcomp
popa
lock
mov
fnstenv
in
sub
inc
enter
mov
movs
stos
data16
or
xor
jbe
push
shr
dec
das
shr
pop
ror
cmp
cmp
test
je
inc
hlt
push
push
xchg
(bad)
push
push
xchg
out
pop
lods
sbb
pusha
jge
xchg
popa
lock
mov
fnstenv
in
sub
inc
enter
mov
movs
stos
data16
lods
inc
xchg
div
jno
jg
jbe
push
shr
dec
das
shr
pop
ror
cmp
(bad)
mov
cwde
xchg
je
inc
hlt
push
push
xchg
(bad)
push
push
xchg
mov
lahf
pusha
mov
inc
mov
fnstenv
in
sub
inc
enter
mov
movs
stos
data16
adc
iret
shl
jno
jg
jbe
push
shr
dec
das
shr
pop
ror
cmp
cmp
push
ds
fcom
stc
push
xchg
push
in
dec
lods
pop
clc
adc
icebp
jne
dec
test
ret
pop
(bad)
popf
add
lea
lea
jnp
lea
mov
mov
mov
mov
inc
jae
add
mov
xchg
movs
es
mov
cli
adc
ins
dec
mov
fs
cmovp
mov
jne
mov
int3
jb
xchg
and
mov
cmp
pop
gs
pop
gs
pop
gs
pop
gs
lea
cdq
stos
pop
jns
push
jmp
xchg
in
push
cdq
stos
pop
inc
jmp
scas
dec
add
mov
out
movs
pop
jl
jmp
cdq
test
pop
addr16
jle
jg
pop
addr16
gs
mov
jp
fs
mov
div
outs
pcmpgtb
push
sub
dec
pop
test
nop
inc
test
adc
jg
mov
and
arpl
pop
xchg
xchg
pop
pop
mov
(bad)
cmp
or
or
movs
retf
fcomp
retf
push
mov
jne
lea
dec
xchg
sahf
push
fmul
ror
rcr
pop
pop
test
out
pop
hlt
cmp
dec
mov
jo
jns
push
pop
mov
push
and
sbb
gs
leave
pop
es
push
movs
fwait
or
int3
xchg
jl
in
mov
jae
dec
mov
test
retf
sbb
push
mov
push
inc
outs
jp
fistp
push
fist
call
pushf
jge
test
pushf
mov
jge
out
push
and
dec
mov
jge
sbb
cmps
call
dec
pop
lahf
adc
call
test
push
jne
jg
mov
add
scas
retf
std
jbe
mov
mov
mov
sub
xor
mov
xchg
outs
xchg
mov
push
pop
cmps
mov
xchg
dec
push
test
movups
jmp
adc
and
add
jmp
push
mov
inc
jmp
push
push
inc
dec
iret
mov
adc
and
push
push
repnz
out
enter
add
adc
cmc
or
stos
adc
add
test
movups
adc
daa
mov
xor
fcomi
mov
sbb
adc
adc
add
cmp
pop
mov
add
push
dec
pop
xor
mov
movlps
adc
btc
push
push
add
scas
adc
and
sbb
cmps
test
outs
add
stos
xor
adc
lock
jl
xor
sub
fdiv
xchg
add
mov
call
imul
adc
pop
ret
(bad)
mov
call
imul
adc
pop
bound
aad
gs
add
mov
cmp
rol
sbb
cmps
adc
push
pop
and
add
stos
sbb
xor
adc
mov
dec
add
xor
push
sbb
adc
adc
mov
add
push
jmp
les
sbb
jl
xor
xor
sbb
stos
mov
les
xor
add
lock
call
xchg
out
push
mov
lock
lock
push
inc
dec
lock
enter
test
into
push
adc
jmp
xor
push
mov
adc
sbb
inc
dec
int
adc
sbb
xchg
add
adc
jmp
in
jl
shr
push
jmp
add
fsub
ret
int
push
jmp
inc
out
neg
adc
jmp
lock
pop
jb
adc
or
push
mov
adc
add
int
jmp
les
jmp
mov
jmp
adc
jmp
sbb
jbe
lock
ja
lock
add
lock
add
fcom
ja
lock
cld
push
in
add
xor
mov
dec
pop
xor
jne
movlps
jmp
add
or
fsub
pop
push
in
cld
push
rol
stos
call
push
sub
push
mov
shr
push
push
repnz
enter
ret
std
iret
push
jmp
adc
mov
jl
shr
push
jmp
push
dec
add
xor
push
sbb
adc
adc
or
push
pop
jp
push
jmp
adc
or
jno
jmp
pop
stos
cmp
ror
jmp
add
sbb
cmps
loop
xor
pop
add
test
dec
mov
adc
adc
lahf
sub
mov
lock
mov
adc
push
jmp
mov
dec
push
jmp
out
jl
xchg
sub
push
imul
add
movs
add
add
mov
dec
into
push
jmp
adc
add
retf
push
jmp
mov
ja
lock
push
ret
or
inc
aas
iret
sbb
add
lock
call
push
shr
push
pop
repnz
inc
fwait
leave
mov
mov
adc
add
ds
xor
and
jmp
lock
ret
test
jne
adc
add
retf
push
jmp
mov
loope
fcom
ja
lock
cld
adc
stos
mov
aam
push
push
and
stc
lock
loopne
fdiv
jl
shr
push
jmp
xchg
push
mov
jo
lock
xchg
iret
push
jmp
in
jl
shr
push
jmp
adc
lock
cld
adc
stos
mov
adc
stos
adc
adc
xor
push
jmp
sbb
push
pop
xlat
and
int
push
jmp
inc
scas
neg
adc
jmp
enter
adc
lock
cld
mov
pop
stos
sbb
repnz
sub
jl
lock
push
sbb
cmps
loop
adc
repz
jp
pop
inc
dec
add
push
pop
test
mov
fadd
mov
sbb
adc
add
test
int3
sub
jl
repz
scas
retf
sbb
mov
iret
div
adc
aam
add
mov
retf
pop
mov
push
adc
cmp
mov
scas
inc
inc
jmp
lahf
cmp
mov
sbb
call
mov
popa
jg
pop
dec
in
and
inc
movs
pop
addr16
push
jbe
aaa
inc
jo
push
inc
gs
pop
rcr
pop
data16
dec
not
outs
and
lock
addr16
aas
and
pop
gs
lods
sbb
pop
adc
ss
pop
outs
mov
jg
dec
loope
arpl
mov
mov
jle
iret
scas
mov
jge
or
pop
pop
scas
ins
shl
fild
lods
imul
ret
mov
mov
out
neg
cmc
scas
arpl
inc
add
stc
in
mov
cmp
sub
pop
mov
mov
pop
data16
int3
addr16
mov
retfw
test
shl
bound
mov
ja
adc
sbb
imul
push
sub
dec
sbb
pop
adc
ss
(bad)
mov
inc
lahf
jle
lds
xor
aam
leave
jns
pop
mov
lahf
and
jl
pop
mov
popa
mov
mov
pop
retf
std
jne
push
dec
nop
xchg
pop
jo
cdq
mov
sub
jo
pop
addr16
stc
adc
cdq
or
pop
popa
jle
inc
hlt
ins
shl
mov
mov
cmps
call
mov
stos
addr16
xchg
mov
inc
cld
out
or
add
imul
mov
add
push
lods
pop
hlt
push
xchg
sub
pop
cwde
mov
jp
and
mov
mov
push
jb
mov
fistp
ins
xor
pop
stc
ret
std
sbb
retf
dec
sbb
sub
pop
and
pop
int
add
fnstenv
fistp
pop
and
or
and
sbb
pop
and
xchg
out
rcl
bound
fnstsw
jl
adc
sub
mov
pop
gs
xor
cmp
add
xchg
out
enter
jecxz
pop
bound
pop
in
mov
call
jge
jle
dec
clc
dec
jge
pop
arpl
pop
xchg
jmp
mov
test
mov
inc
xchg
mov
sub
shl
retf
std
je
leave
ror
mov
xchg
jge
pop
lea
aas
shr
push
jge
pop
cmp
rcl
lock
mov
ss
movs
addr16
xchg
imul
mov
push
xchg
mov
imul
call
or
jg
mov
data16
push
retf
test
in
addr16
mov
ja
test
gs
add
push
shl
test
xor
cmp
mov
or
and
xchg
add
or
rol
inc
gs
repnz
data16
movs
fwait
sbb
es
hlt
adc
mov
scas
lea
push
mov
fld
arpl
mov
sbb
pop
xchg
jg
int
cmp
pop
scas
pop
mov
nop
jp
mov
out
rcl
arpl
mov
outs
enter
xchg
mov
sub
idiv
sbb
mov
push
push
mov
mov
push
xchg
addr16
sub
push
mov
mov
jp
fstp
sub
adc
xor
mov
adc
adc
pushf
and
and
sub
jmp
call
xchg
fwait
inc
mov
lahf
inc
mov
cwde
inc
mov
push
lahf
xchg
and
out
ds
mov
nop
fwait
mov
movs
push
pop
fdivr
dec
xchg
(bad)
mov
push
lahf
cmps
inc
test
xchg
popf
fdivr
dec
aam
mov
push
lahf
idiv
push
aam
mov
int3
fnstsw
call
pushf
(bad)
mov
push
xchg
cmps
mov
push
mov
mov
inc
mov
mov
push
mov
xchg
mov
sbb
mov
mov
xor
mov
mov
adc
test
mov
sbb
mov
inc
adc
dec
std
retf
jns
mov
lods
test
xor
fcomp
sbb
mov
stos
add
mov
xchg
mov
leave
test
lods
mov
sbb
mov
push
jae
xchg
cwde
lods
mov
sbb
dec
lahf
lods
mov
repz
dec
loop
icebp
mov
pop
dec
movs
and
jg
cmovp
mov
sti
popf
ins
test
mov
js
ret
jno
mov
xchg
enter
cmp
xlat
dec
retf
test
sbb
nop
pop
in
sahf
lahf
inc
clc
gs
pop
mov
jns
push
call
or
mov
add
mov
leave
clc
mov
gs
inc
(bad)
jmp
pop
mov
xchg
and
xchg
push
mov
xchg
sbb
mov
sub
lea
outs
cld
and
pop
imul
jo
fldenv
mov
test
mov
lock
stos
dec
mov
imul
mov
ins
jno
push
xchg
xchg
push
cmc
cwde
sbb
lds
or
addr16
mov
xchg
aad
retf
add
mov
or
mov
jne
adc
mov
call
loope
or
sub
pop
mov
mov
mov
pop
test
jnp
sub
jle
stos
sar
adc
dec
hlt
sti
test
movs
fwait
or
pop
pop
ret
movs
call
sbb
or
push
and
cmp
push
or
mov
sbb
add
sbb
stos
pop
inc
lods
(bad)
jno
jae
nop
jns
cmps
and
stos
(bad)
dec
mov
mov
inc
mov
ins
inc
cs
mov
(bad)
in
stos
mov
sbb
(bad)
cmps
and
mov
dec
inc
mov
(bad)
in
(bad)
jmp
adc
rol
mov
outs
inc
into
add
in
lahf
add
mov
(bad)
push
xchg
adc
(bad)
enter
inc
es
outs
inc
es
cmp
cld
mov
dec
xchg
mov
dec
mov
pop
xchg
mov
js
imul
inc
xchg
dec
les
mov
xchg
mov
dec
inc
pop
sub
stos
les
movs
jge
mov
mov
cld
xchg
mov
mov
mov
mov
inc
fcomp
(bad)
fldenv
jecxz
xor
test
dec
movs
cs
pop
scas
les
mov
mov
or
test
dec
movs
cs
pop
scas
les
mov
jmp
dec
movs
cs
pop
scas
les
mov
stos
loopne
pop
xchg
gs
jecxz
push
ja
dec
fs
inc
mov
dec
xchg
call
xchg
mov
mov
stos
mov
repz
retf
stos
cmp
cli
ja
inc
jb
cmp
stos
cmp
sub
inc
jb
sbb
stos
cmp
sub
inc
xchg
mov
cmp
lea
dec
xchg
mov
mov
(bad)
push
adc
(bad)
sbb
cwde
xchg
mov
mov
pop
imul
mov
dec
outs
cmp
cli
pop
xchg
stos
add
mov
inc
dec
mov
gs
jnp
cmp
aam
fild
xchg
scas
or
dec
dec
jge
adc
xchg
dec
je
or
jmp
pop
mov
cwde
ja
or
jmp
and
jmp
jle
xchg
jle
dec
mov
mov
retf
popa
xchg
jle
(bad)
outs
pop
lods
or
xchg
xchg
add
sbb
pop
clc
fnstcw
pop
bound
mov
ds
scas
mov
mov
jo
js
xor
jmp
pop
scas
aam
retf
mov
(bad)
dec
sahf
inc
push
movs
retf
std
jne
push
dec
xchg
cs
rol
pop
dec
cld
popa
jge
pop
imul
xor
retf
in
pop
sbb
dec
xchg
jl
adc
clc
push
rcr
inc
mov
sbb
xchg
xchg
jns
jle
xchg
jle
inc
data16
div
bound
dec
lea
mov
dec
mov
dec
xchg
push
cmp
pop
push
dec
pop
test
fwait
xchg
pushf
dec
movs
fwait
sbb
shr
mov
enter
loop
ins
hlt
xchg
jno
adc
mov
es
dec
mov
push
mov
pop
leave
rcr
push
push
push
hlt
gs
dec
imul
mov
jne
movs
ret
movs
fwait
test
jl
pop
jno
es
hlt
add
pusha
cmovb
stos
mov
jns
arpl
pop
pop
scas
sbb
addr16
pop
outs
push
push
jmp
push
cmp
test
adc
xchg
push
xchg
jnp
daa
outs
shl
adc
movs
jmp
jo
pushf
es
mov
jo
add
test
rcl
cmp
inc
ss
xor
mov
(bad)
mov
sar
xchg
mov
je
shl
cmp
int
test
shl
cmp
int
test
pop
push
fdiv
test
or
mov
dec
mov
test
mov
ins
push
push
pop
outs
push
cmps
mov
inc
lock
jp
mov
ret
mov
xchg
jp
push
dec
xchg
mov
daa
mov
nop
xchg
adc
mov
mov
sahf
lea
daa
mov
neg
add
(bad)
adc
sub
fs
add
fcmovnb
out
cmp
retf
(bad)
pop
outs
push
push
cmp
pop
xor
outs
push
(bad)
jmp
xchg
call
test
sub
xor
mov
rol
inc
xor
sar
sbb
es
adc
sbb
(bad)
ss
jmp
mov
gs
pop
gs
pop
ja
jecxz
je
es
and
mov
(bad)
in
jl
hlt
push
pop
test
mov
mov
out
test
cmp
cld
retf
clc
stc
jg
pop
lea
ins
adc
mov
rol
xchg
mov
or
or
jb
cmp
cdq
into
test
xchg
lea
sbb
mov
inc
leave
xchg
dec
push
cmp
cmp
retf
inc
jbe
jno
pop
cmp
addr16
cdq
stos
dec
push
hlt
pusha
xchg
sub
dec
lea
pop
lea
imul
retf
dec
dec
mov
mov
call
or
fwait
pop
push
cmp
retf
mov
mov
stos
retf
or
out
call
test
or
mov
cmp
mov
add
xchg
xchg
lods
cs
mov
dec
push
mov
mov
dec
movs
mov
imul
jb
or
ret
retf
in
inc
out
xor
mov
daa
je
(bad)
sbb
mov
fidiv
pop
add
mov
mov
pop
jle
outs
(bad)
cld
pop
outs
xchg
pop
pop
movs
fnstenv
fidivr
inc
mov
inc
mov
out
sahf
mov
popf
inc
mov
ret
mov
add
clc
mov
mov
mov
adc
dec
sbb
jnp
jae
gs
mov
cmp
sub
mov
test
xchg
sub
jg
xchg
sahf
xor
cwde
mov
mov
stos
lds
pop
addr16
cwde
das
mov
mov
and
(bad)
loope
pop
imul
addr16
push
ret
ins
pop
xor
sub
jge
pop
retf
mov
ss
mov
pop
pop
lods
xchg
adc
pop
in
and
hlt
cdq
jb
pop
xchg
ds
sbb
fsubr
cmc
jae
pop
imul
mov
cmp
mul
aad
jl
pop
icebp
or
scas
xchg
push
mov
push
mov
pop
addr16
pushf
imul
ss
dec
movs
cdq
xchg
test
inc
mov
js
mov
nop
jg
mov
out
hlt
jns
push
dec
nop
mov
cmc
ret
cld
push
or
dec
movs
call
inc
retf
hlt
fs
add
ins
pop
mov
inc
dec
hlt
and
jg
dec
dec
dec
test
pop
(bad)
or
movs
fwait
rcl
mov
imul
cmp
into
sti
mov
outs
cmp
test
bound
je
xor
addr16
and
fwait
call
aaa
pop
ins
and
mov
and
lahf
call
retf
les
cld
add
test
movs
and
aaa
mov
xor
xor
pop
xor
and
mov
jmp
xchg
fucomi
cmc
add
popa
mov
push
mov
pop
sub
retf
fnstenv
lea
out
shr
jge
fcomip
jmp
mov
leave
adc
and
stos
scas
mov
mov
xchg
fnstsw
xchg
dec
out
sbb
jno
ret
cmc
in
or
cdq
mov
int
and
pop
sub
mov
sar
xchg
dec
jmp
jne
(bad)
stc
loope
xor
mov
sub
push
xchg
test
lods
dec
pop
aad
addr16
inc
out
shl
std
sbb
imul
mov
and
ret
mov
cli
call
leave
imul
push
inc
jne
mov
rcr
cmp
mov
adc
sub
or
push
(bad)
jecxz
int
outs
popa
jns
fucomi
cmc
add
popa
mov
push
mov
pop
sub
retf
fnstenv
lea
out
shr
jge
fcomip
jmp
mov
leave
adc
and
stos
scas
mov
mov
xchg
fnstsw
xchg
dec
out
sbb
jno
ret
cmc
in
or
cdq
mov
int
and
pop
sub
mov
sar
xchg
dec
jmp
jne
(bad)
stc
loope
xor
mov
sub
push
xchg
test
lods
dec
pop
aad
addr16
inc
out
shl
std
sbb
imul
mov
and
ret
mov
cli
call
leave
imul
push
inc
jne
mov
rcr
cmp
mov
adc
sub
or
push
(bad)
jecxz
int
outs
popa
jns
fucomi
cmc
add
popa
mov
push
mov
pop
sub
retf
fnstenv
lea
out
shr
jge
fcomip
jmp
mov
leave
adc
and
stos
scas
mov
mov
xchg
fnstsw
xchg
dec
out
sbb
jno
ret
cmc
in
or
cdq
mov
int
and
pop
sub
mov
sar
xchg
dec
jmp
jne
(bad)
stc
loope
xor
mov
sub
push
xchg
test
lods
dec
pop
aad
addr16
inc
out
shl
std
sbb
imul
mov
and
ret
mov
cli
call
leave
imul
push
inc
jne
mov
rcr
cmp
mov
adc
sub
or
push
(bad)
jecxz
int
outs
popa
jns
fucomi
cmc
add
popa
mov
push
mov
pop
sub
retf
fnstenv
lea
out
shr
jge
fcomip
jmp
mov
leave
adc
and
stos
scas
mov
mov
xchg
fnstsw
xchg
dec
out
sbb
jno
ret
cmc
in
or
cdq
mov
int
and
pop
sub
mov
sar
xchg
dec
jmp
jne
(bad)
stc
loope
xor
mov
sub
push
xchg
test
lods
dec
pop
aad
addr16
inc
out
shl
std
sbb
imul
mov
and
ret
mov
cli
call
leave
imul
push
inc
jne
mov
rcr
cmp
mov
adc
sub
or
push
(bad)
jecxz
int
outs
popa
jns
fucomi
cmc
add
popa
mov
push
mov
pop
sub
retf
fnstenv
lea
out
shr
jge
fcomip
jmp
mov
leave
adc
and
stos
scas
mov
mov
xchg
fnstsw
xchg
dec
out
sbb
jno
ret
cmc
in
or
cdq
mov
int
and
pop
sub
mov
sar
xchg
dec
jmp
jne
(bad)
stc
loope
xor
mov
sub
push
xchg
test
lods
dec
pop
aad
addr16
inc
out
shl
std
sbb
imul
mov
and
ret
hlt
xadd
xlat
pop
adc
jne
ror
icebp
push
inc
jne
mov
rcr
cmp
mov
adc
sub
or
push
(bad)
jecxz
int
outs
popa
jns
fucomi
cmc
add
popa
mov
push
mov
pop
sub
retf
fnstenv
lea
out
shr
jge
fcomip
jmp
mov
leave
adc
and
stos
scas
mov
mov
xchg
fnstsw
xchg
dec
out
sbb
jno
ret
cmc
in
or
cdq
mov
int
and
pop
sub
mov
sar
xchg
dec
jmp
jne
(bad)
stc
loope
push
scas
neg
imul
pop
test
int
test
pop
sahf
dec
adc
or
int
test
int
test
int
test
int
mov
int
test
int
test
jne
inc
mov
je
or
add
dec
test
stc
out
gs
inc
test
iret
hlt
bound
sub
test
and
jecxz
push
test
cmp
push
test
and
loop
pop
test
daa
sub
test
cs
in
int3
inc
test
sbb
test
in
push
or
int
je
or
call
int
test
ja
inc
mov
ja
or
push
sub
test
pop
sub
ror
inc
test
into
idiv
ins
jmp
pop
test
and
or
cmp
push
test
cmp
push
test
es
in
pop
test
cs
in
int3
inc
test
mul
push
sub
test
out
push
or
test
sub
test
sub
test
add
test
adc
test
enter
sub
test
and
test
ds
test
fyl2xp1
jo
sub
test
and
test
(bad)
cmc
jle
sub
test
repz
pop
sub
test
pop
sub
retf
int
test
xchg
fst
sub
test
or
dec
enter
or
sbb
pop
fxch
inc
test
sub
pop
test
daa
sub
loope
push
test
fdivr
jo
sub
test
sub
cmc
int3
lods
test
fild
cmp
sti
int3
lods
test
ds
test
sub
call
mov
sub
test
add
(bad)
int
test
jbe
cmp
nop
in
in
or
test
loop
gs
sub
fcmovne
inc
test
sub
call
mov
(bad)
je
sub
jecxz
push
test
fiadd
lea
sub
test
aad
mov
jg
int3
test
or
aaa
sub
hlt
int3
test
or
cmp
stc
int
test
daa
sub
jmp
call
ror
inc
test
sbb
dec
test
jb
cmp
lods
out
out
or
test
sub
xlat
int
test
int3
bnd
sub
in
push
test
sar
and
cld
int
test
xor
stos
test
xor
lock
movs
test
xor
test
xor
jno
int3
scas
test
sub
out
push
test
retf
hlt
jle
sub
test
push
sub
ret
test
jmp
ins
cvttps2pi
int3
dec
test
add
ret
test
pop
sub
ror
pop
test
enter
sub
test
aas
sub
clc
int
test
aaa
sub
lock
cmps
test
ror
xor
mov
or
int
test
xor
test
fadd
aas
sub
test
(bad)
lock
sub
test
sub
(bad)
inc
test
out
outs
or
int3
int3
dec
test
out
push
sub
test
hlt
icebp
jl
sub
in
int
test
daa
sub
test
cmp
cmc
int3
cmps
test
xor
repz
mov
lock
push
divps
adc
repnz
test
ror
xor
jle
int
test
sub
dec
push
test
and
pop
test
repz
pop
sub
test
loopne
imul
enter
or
loopne
data16
pop
fxch
inc
test
sub
push
test
and
loop
scas
test
fmul
test
mov
adc
xor
repnz
test
xor
arpl
iret
lods
test
pop
rcl
aaa
sub
test
sub
repnz
mov
add
scas
test
daa
sub
jmp
cmc
jle
sub
aam
inc
test
add
(bad)
int3
inc
test
sbb
test
repnz
jnp
sub
jmp
push
test
rol
cmp
movs
test
xor
clc
int3
test
idiv
sub
fmulp
pop
test
imul
je
sub
fmul
push
test
dec
shr
adc
ret
int3
dec
test
xchg
cmc
push
sub
(bad)
iret
push
test
ror
sub
cli
int
test
and
in
push
test
sub
ror
pop
test
sbb
inc
test
adc
pop
test
int3
cli
jno
sub
test
fild
cmp
(bad)
jmp
dec
mov
inc
xchg
mov
sub
ror
scas
test
dec
iret
test
pop
test
mov
add
int3
test
out
jle
das
dec
retf
xchg
mov
sub
repnz
stos
test
and
stc
int3
lods
test
sub
ror
pop
test
push
sub
(bad)
inc
test
cli
repz
sub
ror
push
test
adc
pop
enter
bt
fst
xor
jmp
pop
aad
scas
xchg
mov
div
sub
aad
inc
test
cmps
hlt
out
pop
sub
fcmove
dec
test
lock
adc
(bad)
int3
inc
test
stc
std
jns
das
dec
fmulp
pop
xchg
mov
das
fs
mov
cs
mov
(bad)
jns
das
fs
mov
sub
fxch
pop
test
sub
pop
or
addr16
into
imul
jno
inc
(bad)
iret
pop
test
mov
out
bound
dec
test
hlt
fcom
sub
fmul
inc
test
mov
sub
(bad)
test
dec
into
clc
mov
sub
in
int3
pop
test
lods
out
pop
or
ret
test
cld
leave
push
jne
out
into
adc
push
cs
into
into
imul
scas
into
pop
test
mov
sub
ror
inc
test
loop
push
pusha
das
add
xchg
dec
mov
cmp
dec
xchg
mov
das
inc
mov
dec
test
sub
int3
iret
inc
xchg
dec
jmp
iret
mov
mov
ins
sub
push
iret
add
jae
das
inc
enter
(bad)
jmp
iret
push
xchg
xchg
popf
call
out
int
or
pop
or
out
cmps
sub
mov
ins
xchg
test
sub
leave
int3
or
xor
sub
retf
jns
or
jp
inc
inc
sub
mov
imul
add
inc
aad
dec
or
push
cs
into
iret
mov
jge
cmp
mov
das
cld
xchg
sbb
inc
pop
cs
stos
into
xchg
adc
call
pop
sub
enter
mov
das
shl
add
mov
push
xchg
sub
retf
sub
ret
and
or
outs
(bad)
pop
pop
sub
add
pop
test
mov
enter
in
or
xchg
imul
into
aaa
sub
cld
int3
in
test
retf
std
outs
dec
cs
into
mov
cmpxchg
xlat
and
mov
scas
cld
jecxz
add
pop
mov
mov
and
iret
out
test
rol
ret
xor
movs
into
or
jnp
sub
ret
add
cs
sbb
cmp
or
and
lea
and
add
lds
mov
leave
and
or
call
or
push
sar
(bad)
xor
or
pop
in
(bad)
sub
mov
jp
or
push
xchg
sub
retf
cmp
es
das
ins
test
xchg
mov
adc
sub
adc
push
xchg
jg
and
iret
or
lahf
sub
or
sub
sbb
and
add
and
lea
daa
mov
and
mov
and
pop
(bad)
and
add
sub
or
and
or
push
jmp
retf
and
mov
repz
iret
adc
or
sbb
les
mov
sub
pop
iret
pusha
or
movs
or
daa
mov
lds
xchg
sbb
and
lea
and
push
int
or
and
pop
les
add
and
mov
daa
mov
and
mov
and
push
les
mov
enter
les
mov
int
or
sub
cli
mov
in
(bad)
pop
(bad)
sub
add
cmp
xor
cmps
or
retf
xchg
leave
imul
daa
mov
and
(bad)
and
push
xor
fsub
add
les
mov
and
lea
daa
pop
and
add
add
or
mov
xchg
and
lea
dec
sub
or
test
push
(bad)
into
mov
stc
das
mov
and
ins
mov
push
int
mov
pmuludq
adc
sub
into
push
or
mov
test
retf
add
ds
jne
cs
mov
add
xchg
xor
sub
add
(bad)
and
lea
les
or
xor
or
pop
cdq
imul
and
cmp
adc
cwde
and
cmp
add
xor
test
and
mov
dec
test
pop
imul
cmp
cmp
repnz
das
dec
mov
dec
hlt
adc
int3
mov
or
rol
scas
and
or
mov
imul
or
mov
mov
and
(bad)
and
mov
movs
add
and
or
xchg
sub
cmps
into
pop
or
adc
mov
lock
jne
or
sub
hlt
int3
mov
add
int3
test
or
xor
movs
int3
push
or
int
test
rcr
xor
xchg
fwait
repz
sub
or
repz
idiv
dec
test
mov
retf
and
add
das
or
and
push
les
or
mov
dec
xchg
lods
mov
and
pop
or
xchg
sub
into
mov
cld
lea
push
mov
dec
lock
int3
test
or
xor
test
aad
(bad)
xor
test
(bad)
xchg
inc
xchg
mov
add
into
or
jbe
ja
cs
mov
jnp
or
mov
enter
jmp
sub
retf
mov
adc
int3
mov
setge
das
cmp
int3
push
xchg
mov
cs
or
movs
(bad)
outs
dec
sub
iret
mov
cli
jno
das
dec
mov
movs
test
inc
test
sub
test
dec
in
test
sub
retf
int3
test
or
iret
mov
fldenv
das
sub
push
mov
add
imul
mov
stos
xchg
inc
std
push
sahf
adc
or
hlt
add
int
test
les
xchg
and
std
int3
lea
xor
repnz
xchg
sub
minps
jmp
stos
test
sub
retf
xchg
mov
cs
or
or
or
into
iret
mov
setnp
cmp
iret
scas
test
out
or
add
push
enter
(bad)
enter
sub
test
test
shl
movs
xor
test
cmp
mov
sbb
mov
or
fisubr
cmp
test
xor
test
fisubr
mov
int3
add
sub
jmp
mov
sbb
test
or
stc
sbb
sbb
fcmovne
pop
sub
je
int3
lahf
test
aam
mov
int
test
shl
repnz
add
cmp
or
sub
out
int3
mov
sbb
int
test
fsubr
cmp
test
sub
test
xor
repnz
call
inc
retf
xor
test
ror
xor
repnz
out
or
rol
xor
repnz
in
or
rol
xor
test
xor
repnz
test
xor
icebp
int3
add
cmp
cld
int3
mov
nop
sub
in
int
test
cs
jmp
movs
aas
sub
clc
int3
add
xor
test
xor
repnz
out
test
rol
xor
test
ror
xor
repnz
test
xor
repnz
out
or
rol
xor
test
xor
repnz
test
xor
hlt
int
test
fisub
movs
aas
sub
jecxz
mov
nop
cs
test
sub
ins
jmp
push
sub
dec
add
sub
test
xor
repnz
out
test
xor
test
rcl
xor
test
add
dec
les
sub
repnz
in
or
rol
xor
test
xor
repnz
xchg
test
aaa
sub
test
cmp
mov
xchg
adc
test
mul
in
int
test
lds
movs
and
std
int3
add
sub
test
rol
sub
repnz
out
test
xor
test
shl
(bad)
xor
test
xor
repnz
in
or
rol
xor
test
xor
test
cmp
test
and
in
mov
xchg
adc
aam
mov
or
pop
sub
ror
mov
movs
and
jne
int3
popf
test
fistp
cli
int3
xchg
test
rol
xor
test
rol
xor
test
shl
ret
push
xlat
int
xchg
xor
repnz
in
or
rol
xor
test
xor
test
aad
mov
int
test
(bad)
sub
jmp
outs
icebp
sbb
mov
or
sbb
aam
mov
cmps
sub
jmp
cmp
dec
xchg
test
aam
int
sub
test
ror
xor
test
rcl
xor
repnz
cld
test
ror
xor
repnz
in
or
rol
xor
test
sar
mov
sub
cmc
int
test
fnstenv
mov
int
test
cs
in
int3
mov
lods
sbb
test
loop
xchg
pop
sub
test
icebp
sub
int3
add
sub
loop
xchg
test
cmp
cmc
int3
out
test
(bad)
dec
retf
xor
test
xor
repnz
out
or
ror
sub
repz
in
or
xor
test
aam
int
sub
clc
int3
xchg
test
and
test
into
sub
sub
mov
lods
sbb
dec
ret
int3
mov
or
add
test
cmc
sub
int
test
enter
sub
test
ds
sti
int3
out
test
aad
retf
aaa
sub
test
(bad)
dec
les
sub
test
xor
test
sub
cmc
int
test
fdivr
int
sub
test
shl
and
pushf
test
int
mov
int3
mov
lods
add
(bad)
int
test
jmp
xchg
pop
sub
test
adc
add
sub
jmp
inc
mov
sub
test
cmp
test
aad
les
test
aam
(bad)
xor
jae
int3
in
or
fadd
cmp
test
fnstsw
int
sub
test
sub
test
sbb
or
pop
sub
retf
int
test
out
and
or
test
std
sub
add
sub
out
int3
xchg
test
les
mov
sub
test
aas
sub
dec
jmp
cmp
test
fmul
sub
dec
in
or
fild
cmp
out
test
daa
sub
jmp
aaa
mov
int
test
push
sub
test
or
test
cvttps2pi
mov
sbb
add
sub
ror
xchg
test
sub
test
mov
sub
jecxz
jmp
or
cmp
in
or
fadd
cmp
push
int3
jmp
or
ret
inc
enter
out
in
test
sub
out
int
test
lock
pop
sub
test
(bad)
and
mov
xchg
or
xor
push
xchg
sbb
int3
mov
pop
sub
test
(bad)
ss
int3
fwait
test
adc
out
int
test
sub
test
mov
int
test
es
test
sub
jmp
xchg
test
adc
ror
fwait
test
sbb
test
pop
sub
retf
int
test
xchg
sbb
jbe
sub
pop
lahf
push
call
test
or
(bad)
test
loopne
mov
int3
lahf
test
cli
cmp
pop
sub
ror
xchg
test
repnz
int3
in
test
leave
inc
int3
cs
test
sub
jmp
or
cmp
int
test
icebp
xor
int3
cdq
test
sbb
xchg
test
sub
test
fwait
adc
mov
sbb
mov
push
xchg
and
mov
mov
int3
popf
test
(bad)
xor
int3
call
pop
sub
ror
nop
test
lock
mov
sub
test
lock
adc
ror
xchg
test
idiv
mov
sub
aam
xchg
test
sub
fmulp
pushf
test
add
inc
retf
test
jbe
aaa
mov
push
popf
adc
int
test
addr16
test
js
cmp
in
das
movs
or
retf
int3
add
(bad)
cdq
test
(bad)
cmp
fxch
xchg
test
sbb
fcmove
xchg
test
sti
ds
sub
test
sbb
fmulp
cwde
test
std
xor
(bad)
int3
add
sub
test
xchg
sbb
int
test
push
sbb
inc
lea
sub
stos
int
test
bound
test
jno
inc
mov
test
or
(bad)
test
add
ret
int
test
sbb
call
sbb
push
(bad)
fwait
test
loop
mov
int
test
or
into
int3
xchg
jbe
xor
push
sahf
sbb
jge
das
mov
pop
mov
popf
outs
sub
test
push
sub
test
fs
test
jl
xor
imul
mov
xchg
or
test
in
mov
int
test
pop
sub
test
sub
test
in
and
mov
lods
jg
sub
push
adc
stos
int
test
sub
test
pop
sub
test
ins
sub
test
fs
test
jns
cmp
int
test
sub
test
in
sub
int
test
in
mov
int
test
xchg
sub
mov
test
js
xor
int3
mov
xchg
popa
sub
movs
int
test
outs
sub
test
mov
test
or
int3
scas
test
inc
sub
test
push
sub
test
imul
and
sub
int
test
and
jl
ss
imul
mov
imul
mov
imul
mov
outs
popf
sbb
int
test
imul
pop
mov
adc
call
pop
mov
push
xchg
push
test
dec
sub
test
pop
sub
test
push
sub
test
outs
sub
test
push
sub
int
test
xchg
sub
int
test
and
int
test
popa
sub
test
test
test
pop
lea
pushf
push
sub
test
pop
sub
popf
int
test
dec
sub
mov
push
test
dec
sub
mov
push
test
inc
sub
test
pop
sub
test
mov
popf
push
sub
test
mov
cdq
push
sub
lods
int3
mov
sbb
outs
sub
test
push
mov
or
mov
xchg
imul
or
push
sub
test
mov
adc
or
mov
add
mov
bnd
sub
jb
pop
test
mov
cli
jae
push
test
lods
cli
jo
sub
test
inc
sub
test
pop
sub
test
push
sub
xchg
int3
mov
adc
push
sub
test
mov
lahf
push
sub
test
sub
xchg
int3
mov
jbe
int3
movs
test
mov
or
or
stos
push
sub
(bad)
int3
push
test
mov
test
sub
or
and
xor
sub
xchg
shr
jmp
mov
and
add
neg
and
xor
xchg
sub
or
jmp
pop
and
xor
add
mov
dec
and
xchg
mov
jmp
xor
rol
mov
or
xchg
xor
and
sub
inc
jmp
mov
xor
add
bswap
xor
jmp
pop
xor
or
and
not
mov
xor
mov
and
xor
inc
inc
or
jmp
mov
inc
and
and
xor
rol
add
and
sub
jmp
pop
mov
mov
shr
xchg
mov
xchg
and
sub
jmp
mov
mov
mov
xor
add
jmp
push
shl
add
bswap
ror
mov
xor
xor
xchg
sub
and
inc
neg
jmp
push
ror
or
xchg
or
add
add
mov
or
jmp
push
bswap
mov
bswap
and
xchg
or
and
add
jmp
call
add
xchg
add
add
mov
and
bswap
rol
jmp
mov
and
and
sub
mov
inc
ror
xchg
xchg
or
xor
and
xor
jmp
add
xor
inc
xor
sub
neg
sub
and
mov
jmp
pop
and
inc
mov
shr
xchg
or
xchg
xor
jmp
call
xor
or
add
mov
sub
bswap
inc
shr
jmp
pop
xchg
add
add
xchg
jmp
push
shr
and
add
mov
neg
shl
add
mov
add
xor
sub
shl
jmp
push
dec
xchg
inc
or
dec
add
add
mov
ror
xchg
nop
add
jmp
push
and
or
not
and
mov
add
sub
and
jmp
pop
not
sub
xor
neg
sub
bswap
inc
and
not
bswap
sub
dec
jmp
pop
xor
and
xor
sub
mov
rol
or
inc
sub
and
and
add
jmp
pop
add
or
mov
ror
inc
mov
dec
sub
xor
add
add
xchg
jmp
pop
xor
xor
shl
shl
xchg
sub
add
shl
jmp
pop
add
bswap
sub
inc
jmp
push
xor
mov
sub
and
xor
add
xor
add
jmp
push
xchg
sub
mov
add
jmp
push
xor
dec
shr
xchg
sub
mov
and
inc
jmp
pop
add
xor
sub
sub
jmp
pop
bswap
mov
xchg
inc
xor
mov
shr
inc
add
add
or
add
jmp
pop
sub
and
dec
mov
mov
not
neg
mov
not
and
and
xchg
jmp
push
xor
rol
dec
or
jmp
call
add
xor
add
or
jmp
jne
sub
shr
or
sub
and
sub
xchg
shl
jmp
mov
xor
or
mov
sub
or
xor
mov
neg
jmp
push
ror
mov
shr
mov
sub
mov
rol
neg
jmp
pop
sub
and
or
and
sub
xor
and
and
mov
add
and
not
jmp
nop
and
and
shr
or
mov
mov
bswap
add
jmp
mov
or
ror
shl
xor
jmp
pop
and
xchg
mov
xor
bswap
add
or
or
jmp
call
neg
dec
add
sub
mov
mov
xchg
rol
jmp
push
add
mov
xor
rol
shr
dec
xchg
rol
jmp
push
neg
sub
add
and
inc
mov
sub
add
jmp
push
dec
sub
add
or
or
mov
add
mov
jmp
mov
dec
rol
xor
or
sub
sub
shr
mov
sub
xor
xchg
bswap
jmp
mov
dec
mov
or
add
add
rol
shl
not
rol
sub
xchg
and
jmp
add
bswap
mov
mov
xor
ror
add
add
or
jmp
mov
xor
shr
and
not
shr
shl
or
not
jmp
pop
sub
add
shl
dec
or
and
shr
mov
jmp
push
sub
and
shr
dec
mov
add
xor
xchg
jmp
push
neg
xchg
neg
and
ror
mov
and
xor
or
xchg
or
xchg
jmp
call
ror
or
xchg
add
or
and
add
add
jmp
pop
dec
and
or
add
jmp
call
bswap
sub
mov
ror
jmp
push
shr
mov
dec
add
mov
sub
add
sub
jmp
pop
xchg
xor
inc
sub
xor
mov
neg
mov
jmp
mov
or
add
shr
sub
jmp
mov
and
xor
shl
not
not
rol
shr
ror
jmp
pop
bswap
add
sub
shl
add
not
or
ror
jmp
pop
add
xor
xor
xor
jmp
call
shr
xchg
sub
neg
xchg
or
sub
neg
jmp
call
xor
sub
sub
dec
neg
neg
add
xor
jmp
pop
xor
mov
add
xchg
shr
rol
shr
shr
jmp
push
and
shl
xor
or
add
xchg
mov
inc
jmp
pop
xor
sub
and
add
jmp
pop
mov
xchg
sub
xchg
mov
and
sub
mov
jmp
push
add
sub
or
xor
jmp
xchg
or
or
and
xor
dec
shr
mov
jmp
push
add
mov
shl
mov
xchg
and
add
and
jmp
inc
add
xor
neg
sub
and
and
and
or
jmp
push
and
and
inc
and
neg
and
or
rol
jmp
mov
mov
mov
xor
mov
jmp
push
inc
xor
ror
neg
neg
and
xchg
and
jmp
mov
mov
xchg
neg
sub
xor
bswap
and
not
jmp
mov
or
or
and
sub
jmp
push
mov
sub
and
and
jmp
push
sub
xor
xchg
or
jmp
call
xchg
shl
or
xchg
add
not
add
and
jmp
push
ror
add
xchg
and
xchg
rol
ror
add
jmp
xor
or
not
mov
sub
jmp
mov
sub
rol
or
sub
xchg
add
xor
neg
jmp
push
mov
dec
xor
mov
add
or
add
add
jmp
mov
and
xor
add
ror
mov
mov
bswap
add
jmp
call
neg
sub
shr
ror
mov
mov
ror
or
jmp
push
and
sub
not
and
and
or
xchg
not
xchg
dec
xor
mov
jmp
call
and
xor
mov
bswap
or
or
shr
xor
shr
bswap
xchg
and
jmp
add
and
xor
and
shl
rol
and
xor
add
and
mov
xor
or
jmp
call
add
xchg
rol
xchg
and
sub
add
or
ror
add
neg
and
jmp
call
nop
add
neg
xchg
sub
rol
sub
dec
and
or
shl
sub
jmp
call
sub
mov
shl
or
xor
and
xchg
and
jmp
call
and
ror
shr
neg
or
add
add
neg
jmp
call
or
or
xor
neg
add
neg
inc
add
or
and
xor
xor
jmp
pop
and
or
add
xchg
jmp
mov
and
mov
bswap
ror
jmp
mov
ror
xchg
and
neg
xor
add
ror
xor
or
and
or
sub
jmp
push
and
xor
xchg
or
jmp
add
nop
mov
sub
add
rol
and
bswap
or
jmp
xor
xchg
xor
shl
add
mov
sub
dec
sub
jmp
call
xor
and
add
and
xchg
shr
mov
or
not
or
xor
xor
jmp
call
xchg
mov
sub
dec
or
xor
sub
sub
jmp
pop
sub
mov
bswap
and
jmp
pop
mov
or
sub
and
jmp
mov
inc
sub
not
or
jmp
movzx
mov
xor
shl
sub
jmp
pop
neg
xchg
sub
sub
or
xchg
inc
and
jmp
pop
sub
xor
shl
and
or
bswap
mov
shl
jmp
call
or
add
bswap
xor
xor
sub
and
and
and
inc
and
xchg
jmp
add
shr
ror
mov
and
mov
inc
xor
sub
jmp
call
xor
add
mov
xor
jmp
push
xor
or
xchg
or
not
mov
sub
add
jmp
pop
sub
not
xchg
mov
ror
xchg
xchg
or
sub
mov
mov
shl
jmp
pop
or
ror
xor
ror
jmp
push
add
xchg
xor
mov
jmp
cmp
jmp
pop
and
mov
or
and
or
neg
and
and
jmp
ret
ror
not
not
or
shr
and
sub
or
shr
neg
mov
mov
jmp
mov
or
sub
mov
mov
mov
or
sub
sub
jmp
pop
or
shr
ror
mov
shl
xor
and
or
jmp
mov
xchg
and
add
and
add
mov
sub
sub
jmp
ret
sub
xchg
or
xchg
shl
mov
sub
not
mov
and
sub
add
jmp
mov
sub
or
and
or
mov
add
and
xor
add
sub
xor
add
jmp
push
mov
and
and
xchg
inc
mov
sub
mov
jmp
pop
or
rol
add
or
jmp
call
mov
xor
and
ror
jmp
push
xor
add
xor
xor
sub
bswap
mov
xor
jmp
xor
sub
and
inc
sub
xor
xchg
inc
add
jmp
pop
xchg
sub
add
shl
bswap
shl
and
xchg
jmp
push
xchg
sub
and
xor
not
xchg
not
add
jmp
push
sub
inc
sub
or
nop
not
shr
and
jmp
push
or
xor
mov
xor
rol
not
or
inc
jmp
pop
xor
sub
and
xchg
jmp
pop
add
and
and
xor
jmp
nop
xor
ror
neg
xor
jmp
push
sub
or
and
xor
inc
xor
and
not
jmp
pop
mov
not
sub
dec
sub
xor
and
neg
jmp
add
sub
inc
dec
shr
ror
shl
add
sub
jmp
call
not
add
mov
and
shl
or
mov
neg
jmp
pop
or
sub
dec
add
or
bswap
inc
xor
shr
and
xor
not
jmp
add
xor
xchg
xchg
ror
dec
shl
add
add
jmp
push
and
shr
add
bswap
or
mov
xor
mov
and
or
dec
add
jmp
push
mov
not
neg
or
jmp
pop
add
sub
sub
mov
mov
or
neg
and
jmp
push
add
not
xor
add
neg
add
mov
add
jmp
pop
neg
add
mov
mov
mov
and
and
xchg
jmp
push
add
and
or
not
and
or
or
sub
dec
add
or
or
jmp
push
xchg
mov
xchg
xchg
jmp
mov
neg
bswap
shl
and
xor
mov
add
add
jmp
push
and
dec
and
rol
or
xchg
xor
sub
jmp
push
or
dec
add
ror
neg
mov
and
and
jmp
call
mov
sub
inc
xchg
jmp
pop
ror
xor
mov
mov
and
bswap
xor
xor
jmp
call
bswap
xchg
xor
or
jmp
push
ror
sub
mov
shr
dec
xor
add
sub
rol
add
shl
ror
jmp
pop
xor
shr
add
neg
xor
xor
xor
and
add
add
xor
and
jmp
mov
neg
shr
add
add
add
xor
mov
sub
jmp
push
xchg
shr
or
xchg
jmp
mov
shl
add
xor
xor
add
add
xor
and
xor
or
xor
ror
jmp
pop
mov
and
sub
and
or
xor
xor
sub
add
xor
inc
add
jmp
pop
xchg
xor
mov
sub
nop
neg
mov
neg
jmp
push
xor
dec
sub
mov
or
rol
xchg
add
jmp
call
mov
rol
not
xchg
mov
sub
neg
dec
jmp
pop
sub
or
xchg
xchg
not
shl
and
add
jmp
call
sub
sub
add
or
xchg
ror
or
neg
mov
mov
shr
xor
jmp
pop
add
and
sub
xor
jmp
push
mov
mov
xchg
and
mov
or
xchg
or
shr
and
or
shr
jmp
call
inc
mov
shr
add
and
add
xchg
not
jmp
mov
or
and
shr
bswap
xchg
rol
ror
xor
jmp
nop
xor
and
sub
neg
xor
mov
neg
rol
jmp
call
mov
xchg
xchg
or
mov
and
and
neg
jmp
pop
inc
bswap
add
xchg
and
add
shr
sub
jmp
cmp
jmp
mov
bswap
mov
mov
mov
xchg
sub
or
and
jmp
pop
sub
and
not
add
and
mov
xor
ror
add
mov
inc
or
jmp
push
ror
sub
xchg
and
add
inc
xchg
add
shr
or
ror
not
jmp
push
sub
sub
not
add
and
and
xor
inc
xor
add
not
xor
jmp
push
sub
sub
and
shr
or
not
add
shr
jmp
call
sub
add
shr
xchg
or
mov
and
xor
jmp
push
inc
sub
add
and
sub
xchg
xchg
mov
jmp
push
inc
shr
sub
and
mov
add
or
and
xchg
xor
add
bswap
jmp
nop
bswap
or
or
add
xchg
and
xor
sub
jmp
push
xchg
add
xchg
xor
not
shr
shr
add
jmp
xor
xor
add
and
xor
jmp
push
mov
inc
or
not
jmp
nop
sub
xor
nop
rol
jmp
pop
not
xchg
add
shl
jmp
call
or
shr
xor
ror
mov
sub
add
ror
jmp
push
xor
dec
and
bswap
shr
mov
sub
or
add
mov
not
xor
jmp
call
mov
add
sub
xchg
sub
sub
or
or
jmp
call
mov
mov
or
sub
mov
xchg
inc
add
jmp
push
xchg
mov
sub
and
dec
mov
and
sub
jmp
call
or
not
xor
inc
jmp
call
add
xchg
rol
add
sub
inc
xchg
bswap
jmp
pop
add
or
bswap
xor
jmp
call
and
shl
sub
and
jmp
push
mov
mov
bswap
add
jmp
mov
sub
not
neg
shl
sub
add
xchg
add
jmp
push
bswap
shl
xchg
add
add
add
and
sub
jmp
call
sub
mov
bswap
neg
shl
add
sub
and
or
or
and
xor
jmp
call
not
and
sub
xor
shr
and
rol
rol
sub
add
sub
xchg
jmp
mov
and
add
or
and
or
sub
xor
xchg
jmp
push
inc
sub
xor
xor
jmp
sub
mov
mov
xchg
add
neg
rol
not
mov
jmp
add
neg
mov
inc
xor
xor
or
sub
sub
jmp
mov
or
add
sub
sub
or
rol
shl
add
jmp
pop
ror
shl
rol
xchg
jmp
xor
or
sub
sub
and
jmp
mov
xor
mov
xchg
xor
rol
not
ror
xchg
shl
dec
mov
mov
jmp
push
and
xor
add
sub
xchg
mov
bswap
inc
jmp
mov
rol
or
sub
not
sub
and
or
and
jmp
nop
add
mov
sub
and
sub
xor
and
xchg
jmp
nop
mov
xor
rol
or
add
and
not
not
jmp
mov
neg
or
mov
xchg
shl
not
sub
dec
jmp
ret
xor
ror
sub
inc
mov
and
sub
sub
jmp
cmp
jmp
mov
add
or
neg
or
add
neg
add
xor
jmp
pop
not
xchg
sub
dec
or
sub
xchg
shr
jmp
pop
and
xchg
shl
add
or
xor
xor
xor
xchg
xor
xchg
mov
jmp
push
or
mov
and
xor
xchg
xchg
xor
sub
and
or
or
or
jmp
mul
xchg
xchg
or
xor
mov
not
and
sub
jmp
push
mov
ror
shl
mov
xchg
xor
sub
sub
jmp
mov
or
shr
add
xor
and
xchg
xor
xor
jmp
mov
mov
and
add
sub
or
or
neg
xchg
jmp
mov
add
add
xor
or
xchg
sub
xchg
not
jmp
pop
mov
dec
not
rol
jmp
mov
ror
or
xchg
add
xor
ror
xor
dec
jmp
pop
shr
ror
or
sub
not
not
xchg
dec
jmp
add
sub
add
add
sub
mov
dec
sub
mov
jmp
pop
xchg
not
add
add
xor
xchg
and
and
jmp
pop
or
rol
xor
sub
jmp
pop
xchg
or
mov
inc
jmp
add
mov
add
xor
shl
and
xor
xor
xchg
jmp
pop
not
xor
add
and
add
or
mov
mov
xchg
or
or
sub
jmp
push
rol
not
mov
add
dec
and
rol
shl
jmp
push
xor
xchg
bswap
dec
and
and
xor
mov
jmp
xor
xchg
not
neg
neg
bswap
and
sub
xor
mov
and
and
xor
jmp
push
or
xor
nop
sub
xchg
mov
or
shl
add
and
xchg
xchg
jmp
call
mov
rol
inc
sub
shl
not
ror
neg
add
inc
shl
or
jmp
call
xchg
nop
xchg
sub
add
xor
or
shr
sub
bswap
or
xor
jmp
rol
or
add
and
sub
not
bswap
ror
xor
jmp
pop
and
shr
xor
rol
jmp
push
xchg
mov
xor
add
xor
inc
and
add
jmp
pop
xor
bswap
or
and
jmp
push
add
xchg
not
inc
add
mov
add
xor
ror
xor
rol
bswap
jmp
push
mov
mov
shr
and
and
rol
and
xchg
xchg
add
neg
xor
jmp
pop
add
and
or
sub
neg
ror
mov
xor
jmp
push
mov
bswap
neg
add
xchg
xchg
and
xor
jmp
push
ror
and
or
bswap
and
sub
or
xor
nop
dec
mov
xor
jmp
push
sub
sub
or
not
add
or
or
sub
not
xchg
and
bswap
jmp
call
bswap
sub
or
dec
jmp
push
xor
sub
inc
xor
jmp
pop
neg
xor
xor
bswap
add
shr
or
dec
add
and
sub
neg
jmp
push
sub
dec
xor
mov
sub
and
sub
and
jmp
mov
xor
mov
bswap
not
mov
xchg
shr
sub
jmp
push
xor
mov
or
and
add
shl
xchg
neg
jmp
call
sub
sub
add
and
jmp
pop
not
ror
xchg
rol
xchg
xchg
or
bswap
jmp
pop
add
mov
add
inc
or
and
or
shl
jmp
pop
shr
add
or
shl
sub
or
not
shr
jmp
pop
mov
mov
and
rol
xchg
add
mov
dec
and
xor
neg
nop
jmp
mov
shl
add
mov
and
dec
ror
and
sub
or
xor
sub
bswap
jmp
call
rol
or
shl
xor
jmp
push
sub
mov
xor
dec
inc
add
xchg
or
add
xor
mov
rol
jmp
pop
or
neg
and
and
sub
add
mov
dec
jmp
call
or
inc
and
shl
xor
xor
xchg
xor
shl
add
and
and
jmp
call
add
inc
sub
ror
sub
sub
bswap
add
jmp
pop
shl
and
sub
mov
or
shr
xor
mov
jmp
mov
and
or
shr
and
neg
add
and
sub
and
inc
add
or
jmp
push
add
xchg
and
bswap
jmp
pop
and
add
and
and
jmp
add
sub
dec
ror
add
ror
xchg
sub
mov
jmp
call
add
or
or
add
add
ror
sub
xor
jmp
call
neg
add
not
rol
mov
xchg
xor
and
jmp
pop
or
and
mov
xor
xchg
or
neg
add
jmp
call
xor
nop
or
xchg
jmp
push
sub
add
and
mov
jmp
pop
mov
or
inc
and
or
or
add
bswap
jmp
pop
sub
mov
mov
inc
or
sub
and
and
jmp
pop
xor
sub
and
bswap
mov
and
add
add
xor
add
sub
inc
jmp
mov
add
xor
or
xor
jmp
mov
add
mov
xor
and
xor
and
nop
ror
jmp
pop
inc
add
mov
xchg
xchg
add
add
shr
shr
not
add
neg
jmp
push
xor
xor
mov
or
or
sub
sub
or
jmp
mov
mov
shl
sub
mov
jmp
pop
and
or
add
xor
jmp
call
bswap
add
xchg
bswap
xor
sub
add
sub
jmp
xor
xchg
xor
mov
not
shl
and
or
or
jmp
call
or
or
and
add
jmp
push
xchg
and
and
neg
mov
or
xor
and
dec
xor
bswap
or
jmp
mov
and
mov
shl
xchg
sub
not
shl
bswap
sub
or
ror
and
jmp
pop
xchg
xor
xor
shr
and
xor
or
inc
jmp
jl
add
xchg
sub
xor
inc
xchg
sub
dec
jmp
pop
ror
mov
rol
or
bswap
mov
dec
nop
jmp
mov
inc
and
and
add
jmp
pop
sub
rol
shr
and
and
add
shr
ror
sub
neg
neg
or
jmp
mov
xchg
xor
ror
shr
dec
mov
mov
xor
jmp
call
or
mov
sub
dec
xchg
xor
and
mov
jmp
push
or
mov
xor
mov
and
add
xchg
xor
jmp
push
xor
sub
dec
mov
add
or
xor
sub
jmp
call
add
add
sub
sub
jmp
pop
dec
not
xchg
sub
mov
mov
xchg
ror
jmp
push
xor
add
ror
bswap
jmp
mov
and
mov
neg
and
bswap
sub
sub
not
jmp
mov
sub
xor
not
or
mov
add
rol
and
jmp
push
or
add
sub
rol
inc
and
ror
or
mov
xchg
add
mov
jmp
push
sub
xchg
sub
add
bswap
neg
ror
not
xor
or
add
xor
jmp
push
mov
or
xor
xor
add
add
xchg
mov
add
inc
mov
xchg
jmp
push
and
bswap
mov
xor
shl
inc
xor
inc
jmp
pop
xor
rol
add
sub
sub
shr
or
mov
jmp
call
sub
sub
xor
or
and
xor
or
or
add
and
xchg
sub
jmp
mov
and
or
xor
sub
xor
dec
or
and
jmp
push
mov
not
shl
and
or
or
neg
xchg
jmp
mov
add
and
neg
and
jmp
call
dec
not
mov
add
sub
neg
sub
sub
xchg
xchg
sub
sub
jmp
add
shl
xchg
add
mov
shl
bswap
xchg
mov
jmp
pop
inc
rol
xor
xchg
jmp
push
neg
mov
or
xor
jmp
push
bswap
xor
add
and
mov
xor
mov
xor
jmp
push
xchg
or
or
add
jmp
mov
rol
neg
and
or
jmp
mov
and
and
and
and
jmp
inc
ror
mov
or
not
or
bswap
or
or
ror
and
neg
xchg
jmp
mov
or
sub
add
xor
jmp
push
or
xor
add
add
jmp
pop
add
sub
add
mov
and
xchg
xor
rol
and
shr
add
xchg
jmp
call
xor
inc
xchg
and
jmp
pop
neg
or
xor
mov
add
rol
add
sub
not
and
xchg
or
jmp
mov
xor
add
inc
mov
not
xchg
add
mov
sub
nop
xchg
and
jmp
pop
and
ror
shr
xchg
and
xchg
xor
and
shl
inc
or
add
jmp
push
not
sub
shl
add
and
xchg
neg
sub
or
and
xchg
xor
jmp
add
or
mov
mov
neg
sub
mov
and
sub
jmp
push
xor
dec
bswap
not
xchg
sub
add
shl
jmp
mov
mov
and
neg
xchg
ror
inc
xor
neg
mov
not
ror
add
jmp
push
xor
and
mov
and
add
shr
sub
mov
jmp
ret
add
xor
mov
mov
jmp
pop
xchg
xchg
neg
and
or
and
xchg
xor
jmp
pop
mov
add
add
rol
or
and
and
xor
mov
mov
add
sub
jmp
push
or
or
not
sub
mov
sub
sub
shl
jmp
call
mov
mov
and
and
sub
xchg
or
add
not
inc
xor
or
jmp
nop
xchg
not
or
and
xchg
mov
sub
dec
jmp
pop
mov
or
add
shr
mov
dec
not
neg
or
nop
xor
xchg
jmp
call
xchg
sub
and
sub
not
add
add
or
jmp
pop
or
xor
xor
add
jmp
push
and
ror
sub
sub
or
mov
shl
sub
and
rol
xchg
bswap
jmp
xor
or
bswap
mov
and
xor
mov
shl
add
shl
xor
shl
add
jmp
pop
and
bswap
or
shr
jmp
push
and
sub
not
mov
jmp
xor
shr
xor
shl
and
and
mov
add
mov
xchg
mov
xchg
add
jmp
call
mov
xchg
xchg
xchg
jmp
pop
mov
xor
and
xor
jmp
pop
xor
xchg
shr
mov
shr
xchg
sub
mov
add
sub
add
ror
jmp
call
sub
xchg
xor
and
and
xchg
mov
shl
add
or
and
sub
jmp
add
and
add
xor
sub
jmp
call
not
inc
xor
xchg
xor
mov
xor
dec
jmp
mov
xchg
not
dec
jmp
push
mov
bswap
inc
sub
xor
add
neg
not
add
rol
xor
sub
jmp
pop
inc
bswap
neg
shr
xor
and
xor
xor
jmp
call
mov
neg
neg
and
jmp
xor
add
xor
dec
xchg
jmp
pop
add
add
not
and
sub
xchg
not
and
or
xor
or
xor
jmp
push
xor
xor
or
xor
neg
xor
neg
bswap
and
shr
and
or
jmp
pop
dec
xor
add
and
neg
mov
xchg
and
jmp
mov
and
ror
xor
xor
xor
mov
rol
or
jmp
pop
and
add
ror
xchg
shr
and
or
sub
jmp
mov
add
and
or
mov
and
ror
and
and
jmp
mov
sub
mov
shr
sub
sub
or
xor
and
ror
or
and
and
jmp
pop
add
xor
bswap
xchg
and
ror
and
mov
sub
mov
or
sub
jmp
pop
and
or
add
shl
jmp
call
rol
mov
add
xchg
sub
sub
neg
mov
jmp
call
sub
mov
xor
rol
dec
or
neg
xchg
jmp
pop
mov
ror
shr
xor
sub
xor
xor
sub
jmp
push
sub
not
or
or
neg
shr
and
add
jmp
mov
mov
rol
xchg
sub
xor
add
xchg
add
jmp
mov
xchg
mov
mov
mov
or
xor
sub
xor
jmp
push
rol
neg
xor
xor
shl
nop
not
dec
jmp
call
mov
and
add
xor
xor
and
xchg
and
jmp
xor
neg
xor
shr
xchg
add
add
bswap
mov
jmp
push
xor
mov
sub
sub
sub
xor
and
and
jmp
pop
xor
nop
xor
rol
neg
or
inc
xor
jmp
call
or
add
shl
add
jmp
push
sub
and
xchg
shr
and
add
xchg
not
jmp
pop
sub
add
and
add
xchg
sub
mov
rol
xchg
and
mov
xchg
jmp
mov
add
sub
and
or
xor
shr
add
rol
jmp
mov
bswap
add
mov
and
mov
add
bswap
xor
mov
xor
or
or
jmp
pop
or
ror
ror
bswap
add
sub
dec
shr
jmp
push
add
or
bswap
shl
jmp
pop
add
mov
mov
sub
xor
xor
xor
sub
jmp
mov
not
not
add
not
or
shr
and
dec
jmp
call
dec
add
add
mov
sub
or
xor
and
jmp
mov
and
shr
bswap
or
xchg
sub
xor
mov
neg
xor
mov
ror
jmp
pop
rol
sub
sub
sub
jmp
call
dec
or
sub
sub
xor
inc
dec
xchg
sub
not
bswap
add
jmp
pop
mov
xor
mov
sub
jmp
pop
add
and
and
shl
add
add
sub
add
jmp
ret
xor
shl
and
mov
jmp
pop
ror
xchg
xor
mov
jmp
call
and
xor
xor
ror
jmp
pop
or
inc
mov
add
xor
xor
and
or
jmp
call
xor
or
xor
bswap
sub
and
xchg
xchg
jmp
ret
or
or
xchg
xor
and
shr
xor
and
jmp
pop
mov
add
sub
shl
shl
xchg
add
xor
jmp
push
and
rol
xchg
xor
jmp
call
bswap
mov
add
mov
add
shl
add
or
jmp
jne
mov
ror
mov
add
add
sub
and
or
inc
ror
add
rol
jmp
mov
xchg
add
xchg
xor
add
sub
mov
bswap
mov
and
shr
or
jmp
mul
and
add
rol
and
dec
or
nop
or
jmp
push
xchg
xchg
add
not
neg
sub
inc
sub
add
xor
mov
sub
jmp
add
mov
mov
and
xor
xchg
sub
or
rol
jmp
push
inc
xor
mov
neg
add
neg
add
or
and
sub
sub
not
jmp
call
rol
sub
inc
xor
sub
xchg
and
xchg
jmp
pop
sub
xor
mov
sub
or
ror
sub
xchg
jmp
call
inc
xor
neg
mov
mov
add
and
ror
jmp
pop
xor
xchg
sub
mov
dec
xchg
xchg
sub
jmp
call
and
or
sub
neg
or
xor
neg
sub
xor
shl
xor
mov
jmp
pop
dec
mov
not
not
xchg
or
add
sub
and
or
or
inc
jmp
pop
inc
xchg
sub
shr
add
sub
mov
neg
mov
mov
sub
mov
jmp
push
xchg
neg
mov
add
add
shr
add
xchg
jmp
add
xchg
mov
xor
sub
xor
mov
shl
xchg
jmp
pop
xor
add
and
and
rol
or
add
sub
jmp
push
add
add
xchg
xor
jmp
pop
dec
add
not
add
jmp
ret
xor
and
sub
and
jmp
mov
and
add
dec
mov
mov
xor
rol
sub
and
mov
add
xor
jmp
pop
sub
ror
ror
xor
neg
xor
sub
sub
jmp
pop
ror
sub
xor
mov
and
add
xchg
ror
jmp
push
mov
sub
mov
add
or
sub
shl
neg
jmp
push
xchg
or
or
sub
xor
dec
mov
xor
jmp
push
add
sub
mov
and
shl
mov
add
mov
sub
not
shl
bswap
jmp
mov
add
xor
and
or
add
xor
xor
shl
jmp
pop
and
or
add
and
inc
mov
shl
or
jmp
push
add
and
and
xchg
or
xor
or
xor
jmp
call
or
add
sub
nop
inc
mov
dec
xor
jmp
push
ror
dec
bswap
mov
sub
neg
sub
rol
jmp
pop
rol
mov
add
sub
xor
add
rol
and
jmp
pop
xor
mov
mov
bswap
sub
sub
add
mov
jmp
push
and
and
bswap
not
rol
xor
or
inc
jmp
mov
and
and
bswap
add
xchg
or
inc
mov
jmp
pop
add
xchg
sub
rol
xchg
dec
and
add
jmp
call
xchg
xchg
shr
sub
sub
or
xchg
xchg
jmp
call
mov
xchg
and
xchg
jmp
push
bswap
mov
add
and
add
and
mov
sub
and
add
ror
neg
jmp
ret
dec
mov
sub
or
xor
neg
add
or
jmp
push
dec
or
sub
and
bswap
ror
xchg
and
jmp
push
sub
and
add
not
mov
xor
xor
or
xchg
sub
mov
xor
jmp
call
inc
mov
bswap
add
neg
xchg
mov
and
jmp
push
sub
sub
nop
and
jmp
mov
xor
inc
xchg
or
jmp
mov
xor
dec
sub
or
sub
xor
add
xchg
jmp
pop
xor
xor
xchg
shl
bswap
xor
xchg
bswap
jmp
pop
mov
ror
xchg
add
xor
xor
xchg
mov
jmp
pop
sub
sub
xor
bswap
and
xor
dec
and
jmp
xor
xor
not
xor
mov
sub
sub
or
xchg
jmp
ret
xchg
sub
bswap
rol
or
add
xchg
inc
jmp
push
ror
add
inc
xor
xchg
inc
shr
or
jmp
mov
xor
or
shl
rol
inc
or
xor
and
inc
mov
ror
xchg
jmp
mov
xor
mov
not
xchg
rol
and
sub
or
xchg
add
sub
rol
jmp
push
xor
sub
or
dec
jmp
mov
inc
shl
add
xor
xor
xchg
shr
xor
jmp
push
xor
or
and
or
jmp
call
xor
sub
add
sub
sub
neg
ror
add
jmp
call
xor
xchg
sub
sub
xor
ror
rol
sub
jmp
push
inc
sub
and
dec
sub
shr
xor
xor
jmp
push
and
and
rol
neg
sub
dec
or
add
xor
add
mov
and
jmp
pop
mov
xchg
sub
xor
jmp
ret
sub
mov
dec
and
jmp
call
and
shl
shl
rol
mov
sub
sub
shl
jmp
push
xchg
neg
sub
inc
add
ror
and
or
jmp
call
mov
and
neg
xchg
jmp
pop
xchg
xor
or
add
rol
mov
dec
and
jmp
call
and
bswap
inc
or
or
xchg
add
add
add
and
sub
add
jmp
pop
mov
xor
add
inc
dec
xchg
shr
xchg
jmp
push
mov
and
mov
dec
sub
xor
dec
xchg
jmp
xor
mov
mov
ror
and
xchg
add
shr
mov
jmp
push
xor
ror
xor
or
sub
sub
add
and
jmp
pop
or
or
bswap
and
sub
and
xor
xor
and
and
add
inc
jmp
call
shl
xchg
xchg
xor
or
sub
shl
or
jmp
mov
add
and
neg
shl
rol
shr
xchg
rol
jmp
push
xor
bswap
xor
sub
rol
xor
ror
xchg
jmp
mov
mov
add
or
sub
or
xchg
inc
mov
and
xor
add
and
jmp
call
and
xchg
and
xchg
add
inc
not
ror
jmp
pop
add
mov
mov
xchg
xchg
and
xor
sub
mov
add
xor
bswap
jmp
mov
mov
sub
mov
mov
sub
or
mov
xor
jmp
pop
or
ror
nop
and
xchg
neg
xor
add
xor
xor
or
ror
jmp
mov
dec
rol
or
or
dec
sub
ror
shr
jmp
add
add
and
and
shr
jmp
pop
rol
and
rol
and
mov
add
and
nop
jmp
call
add
or
or
xor
xor
sub
and
and
jmp
pop
add
not
shr
and
xor
sub
neg
or
sub
dec
sub
and
jmp
mov
mov
and
shl
shl
jmp
pop
shl
xchg
inc
mov
sub
mov
and
and
xchg
or
neg
mov
jmp
push
or
xor
and
xchg
not
add
or
and
jmp
pop
xor
xor
xor
sub
xchg
and
xchg
ror
jmp
push
shl
and
mov
mov
mov
inc
ror
add
jmp
mov
not
neg
and
or
ror
or
shl
or
jmp
push
mov
not
mov
sub
mov
sub
mov
mov
jmp
add
or
inc
mov
sub
inc
mov
and
bswap
jmp
push
xchg
xchg
xor
xchg
or
ror
rol
shl
jmp
push
neg
xchg
neg
or
add
or
and
shl
jmp
push
add
and
mov
and
add
ror
mov
xchg
jmp
push
xchg
xor
mov
neg
jmp
pop
not
mov
add
xchg
jmp
push
shr
and
add
and
xchg
and
inc
xor
jmp
push
xor
xchg
add
and
mov
add
xchg
or
jmp
push
add
mov
or
not
or
xor
or
add
jmp
push
xor
shl
xchg
sub
bswap
add
inc
xor
xor
and
dec
xor
jmp
pop
mov
or
shl
add
add
shl
bswap
neg
jmp
push
mov
sub
add
sub
or
sub
inc
rol
jmp
pop
or
xchg
rol
mov
jmp
call
or
or
xchg
xor
xchg
xor
xchg
bswap
ror
and
ror
xor
jmp
pop
sub
rol
or
or
jmp
push
xchg
add
sub
inc
jmp
push
not
neg
neg
not
jmp
pop
xchg
sub
add
and
add
add
and
add
jmp
add
shr
sub
add
and
bswap
add
sub
mov
and
mov
and
sub
jmp
sub
dec
xor
not
shl
xor
nop
shl
xor
jmp
call
or
xchg
or
xor
and
xor
xchg
xor
jmp
call
shr
inc
rol
mov
or
and
sub
and
add
and
mov
sub
jmp
mov
xor
xor
or
xchg
xchg
shr
and
nop
or
add
xchg
xor
jmp
mov
add
mov
or
xor
jmp
push
add
add
sub
sub
and
xor
xor
xchg
jmp
add
xor
mov
or
or
xchg
mov
xor
add
jmp
jmp
jmp
