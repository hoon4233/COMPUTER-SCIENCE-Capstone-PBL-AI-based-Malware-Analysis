mov
add
add
add
add
add
add
add
push
add
or
add
add
add
xchg
daa
add
mov
push
and
add
add
add
jno
push
aas
adc
jnp
add
jmp
push
xor
fxch
sbb
(bad)
bound
loope
xor
repnz
loopne
imul
nop
call
int
inc
movs
cmps
or
and
inc
arpl
adc
in
lods
add
lahf
xchg
leave
in
movs
xor
call
xchg
cmp
call
inc
add
(bad)
jmp
inc
loope
and
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
and
jb
outs
addr16
add
add
add
add
add
and
add
push
add
adc
add
and
dec
inc
add
add
push
add
movs
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
dec
pushf
add
add
add
xchg
add
xchg
add
mov
mov
add
repz
add
cmps
add
add
add
sub
add
sbb
add
add
add
popa
add
add
enter
add
add
retf
add
add
add
int3
add
add
add
add
add
push
add
add
add
add
out
add
add
add
jne
add
hlt
out
add
add
add
add
add
repnz
add
add
mov
cmc
add
add
add
jmp
add
add
add
cld
add
add
add
push
add
add
add
add
pop
add
add
add
mov
add
fisub
add
add
add
jmp
add
push
and
add
and
add
add
jnp
cmp
xor
sub
sub
sub
sub
data16
popa
cmp
arpl
cmp
outs
fs
gs
push
jns
ins
push
jns
inc
inc
xor
dec
jp
push
cmp
push
inc
jne
inc
xor
dec
push
jae
inc
dec
xor
push
xor
push
cmp
push
xor
push
arpl
imul
push
xor
pop
push
xor
bound
jae
inc
cmp
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
cs
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
jne
je
imul
add
and
mov
sub
and
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
pushf
add
add
pop
pusha
sbb
xchg
and
jnp
dec
cmc
dec
xlat
loopne
mov
and
nop
inc
adc
ror
imul
retf
gs
pushw
inc
int3
in
popf
mov
mov
mov
dec
daa
neg
(bad)
aas
pop
add
dec
fcmove
sahf
and
jle
pop
aas
and
xlat
clc
mov
lea
xlat
clc
jne
(bad)
push
(bad)
std
imul
jg
scas
and
out
test
adc
push
stc
pop
(bad)
sahf
(bad)
xlat
clc
fstp
lahf
call
scas
pop
repz
aas
(bad)
mov
mov
pop
movs
shr
fidiv
cmc
jp
push
retf
hlt
jmp
xor
outs
pushf
cld
outs
or
in
scas
icebp
imul
jg
pop
jecxz
sti
aas
(bad)
cli
xlat
push
out
jg
imul
mov
inc
mov
imul
mov
pop
cld
popa
hlt
jnp
pop
cld
sahf
repnz
scas
and
stc
ret
pop
retf
cld
idiv
loope
(bad)
scas
icebp
fwait
icebp
(bad)
fmul
sbb
clc
in
and
cmp
pop
out
(bad)
jle
pop
jecxz
mov
xchg
(bad)
sbb
stc
sbb
(bad)
idiv
push
mov
mov
xor
fwait
xchg
inc
(bad)
jne
dec
icebp
(bad)
into
scas
loope
pushf
call
(bad)
aaa
scas
repz
xchg
lods
pop
mov
cld
inc
jg
mov
imul
pop
jecxz
js
imul
jg
mov
cmps
mov
jle
jg
sub
jg
fistp
jle
retf
popf
pop
out
clc
sar
out
(bad)
aaa
(bad)
fnstsw
pop
and
lods
(bad)
scas
pop
(bad)
out
xlat
imul
pop
jge
push
hlt
iret
pop
inc
lock
out
jle
and
jge
jle
jle
lods
dec
call
mov
rcl
or
mov
iret
cwde
(bad)
stc
ins
call
jmp
lea
fnstsw
mov
mov
aaa
(bad)
movs
add
sbb
ss
push
in
rcr
push
aas
mov
lahf
cld
cli
adc
(bad)
adc
(bad)
sub
jecxz
test
loop
(bad)
xlat
fidivr
call
(bad)
js
repnz
cld
or
xchg
fcomip
xlat
dec
mov
mov
stc
mov
inc
shr
jmp
cmp
add
icebp
arpl
aas
stc
sti
aas
cmp
jle
ja
xchg
jg
fild
pop
push
psubsw
jg
pop
out
push
fild
fstp
cld
xlat
std
adc
addr16
(bad)
cli
lahf
cld
(bad)
mov
(bad)
cli
mov
(bad)
cli
jg
cmc
mov
pop
push
pop
pop
pop
mov
test
cmps
jg
jg
repz
addr16
iret
call
xchg
jle
fwait
(bad)
jp
push
(bad)
cld
ins
fwait
and
jl
cmp
jmp
cld
aaa
test
paddb
arpl
repnz
std
out
test
mov
stos
arpl
inc
or
mov
or
addr16
fst
jl
jmp
daa
clc
icebp
arpl
xchg
dec
jle
fucomip
aaa
daa
or
lahf
outs
sar
(bad)
stc
push
lea
cld
inc
jmp
dec
(bad)
out
repnz
(bad)
dec
icebp
sbb
repz
(bad)
jp
xchg
and
fwait
(bad)
cmp
mov
add
fidivr
add
(bad)
dec
and
mov
(bad)
and
adc
(bad)
fiadd
repnz
fbld
jle
je
cmp
stc
test
std
cld
xlat
lock
fs
mov
dec
mov
das
clc
arpl
(bad)
stc
(bad)
(bad)
mov
jmp
sti
outs
(bad)
cli
mov
xchg
pop
not
add
outs
xor
and
fstp
inc
aas
jg
call
cmp
arpl
scas
jg
retf
push
std
cmp
push
rcl
sub
retf
adc
mov
push
scas
shl
or
cs
cld
xchg
mov
outs
lock
(bad)
cmp
mov
jg
iret
sti
mov
in
std
test
dec
outs
cld
fwait
(bad)
cmp
cwde
(bad)
jnp
rcl
inc
scas
cld
inc
call
(bad)
ins
jle
fild
dec
xchg
pop
jg
jmp
cli
aad
shr
jge
jle
mov
fistp
lahf
cld
(bad)
idiv
fucomip
pop
cld
int
jle
fisttp
addr16
clc
jge
cwde
pop
and
(bad)
(bad)
dec
std
sbb
cmc
pop
clc
fild
pop
dec
pop
mov
sub
outs
mov
mov
movsx
fld
in
aaa
add
or
call
int
lea
xlat
stos
sbb
clc
test
mov
repz
pop
popf
ja
sti
or
pop
je
sti
xor
push
popf
push
repz
ja
jg
xor
ret
cmp
inc
jecxz
(bad)
hlt
pop
cld
cmps
mov
loopne
push
int
jg
(bad)
xchg
pop
repz
xor
mov
movs
aam
scas
repz
std
pop
mov
std
call
pop
inc
sti
sub
mov
jle
hlt
iret
std
lahf
jg
outs
movs
jg
jecxz
xchg
outs
ins
rol
stc
jecxz
out
(bad)
pop
push
loopne
clc
in
cld
xor
mov
lea
mov
push
daa
cwde
push
pop
movs
cdq
aas
dec
(bad)
std
aas
xchg
xchg
out
inc
hlt
iret
call
jg
pop
clc
fstp
cld
out
mov
sti
or
rcr
std
jg
out
xor
jae
fcmovu
(bad)
xlat
dec
scas
jle
pop
cld
(bad)
cmc
(bad)
(bad)
mov
sar
hlt
iret
pop
repnz
and
sbb
cli
cli
loope
and
std
pop
mov
sbb
std
jnp
(bad)
daa
mov
and
ret
pop
repz
popf
sti
repz
fucomip
pop
cli
xor
push
js
iret
sti
xor
int
scas
jg
pop
sbb
hlt
aaa
push
or
imul
mov
jecxz
pop
out
shufps
movs
mov
jp
aaa
out
stc
mov
or
mov
test
(bad)
push
scas
std
jp
pop
jmp
jne
jb
(bad)
ja
out
xchg
ja
out
rep
mov
jge
mov
inc
xor
sbb
cli
mov
ffreep
rcl
loopne
mov
xchg
stos
inc
das
xor
push
cmps
jg
(bad)
jns
dec
scas
aas
stc
xor
jg
jecxz
fistp
(bad)
(bad)
mov
jmp
popa
jg
jl
loope
aas
call
pop
jle
int3
and
xlat
sbb
scas
mov
mov
(bad)
jp
push
or
js
mov
sub
jg
scas
mov
dec
cwde
mov
mov
jle
lods
aas
pushf
jle
adc
into
(bad)
(bad)
cli
mov
sar
test
ss
inc
sar
icebp
fcomip
xor
sti
mov
fimul
pop
call
jne
pop
jecxz
clc
lods
jle
lods
aas
call
xchg
outs
or
mov
jle
outs
cli
pop
outs
ins
fwait
mov
sub
mov
sbb
push
int3
pop
cli
imul
jg
push
jl
jmp
mov
(bad)
ins
std
icebp
aam
mov
jle
fcomip
aaa
cld
in
aaa
push
int
out
push
jecxz
cmps
jg
fwait
aas
cmc
mov
lea
fild
(bad)
ins
cli
repz
and
mov
cld
xchg
ds
stc
fwait
inc
cmc
pop
xor
stc
outs
cwde
(bad)
fbld
icebp
pop
cld
out
(bad)
cli
(bad)
hlt
retf
cmps
std
sbb
(bad)
adc
inc
mov
jg
pop
sti
ror
jmp
lock
cld
cmp
hlt
xlat
jno
jg
push
sar
jg
cmp
ds
ins
jle
fucomip
xlat
sti
ins
adc
xlat
xor
pop
(bad)
data16
out
outs
(bad)
jmp
cli
cmp
jmp
mov
icebp
xor
repnz
jg
(bad)
aaa
loope
shr
mov
addr16
cld
out
jmp
jg
ror
repnz
add
int
out
(bad)
sti
(bad)
dec
stc
jne
sbb
jmp
push
jecxz
out
out
outs
stc
jmp
repnz
mov
cmc
imul
(bad)
std
inc
push
mov
jg
out
aaa
sbb
dec
dec
jmp
mov
mov
das
std
cwde
adc
sbb
jg
inc
mov
jmp
cs
scas
icebp
(bad)
(bad)
fdivr
or
pop
jmp
cli
lea
jecxz
call
es
clc
mov
mov
mov
add
mov
cmp
mov
jecxz
and
mov
shl
nop
push
xor
aad
call
loop
lock
mov
lds
(bad)
mov
mov
fldcw
(bad)
(bad)
loopne
ds
sub
fdivr
cmp
repnz
std
ins
jg
pop
out
loopne
call
(bad)
out
dec
es
push
mov
jg
mov
jecxz
jecxz
(bad)
std
jg
fcomip
test
std
(bad)
aaa
fstp
stc
int
sbb
(bad)
mov
(bad)
repnz
int
call
cmp
repnz
jmp
fsubr
jmp
aam
sti
jnp
cs
xchg
hlt
cmp
pop
movs
mov
mov
clc
(bad)
mov
iret
jmp
loopne
out
pop
ret
je
pop
int3
add
mov
idiv
lods
repz
shr
cmps
or
mov
mov
add
idiv
mov
jnp
jmp
cmp
jle
xchg
pop
fs
mov
dec
jmp
mov
test
and
addr16
gs
ins
jg
in
aaa
push
sub
cli
mov
mov
jg
fcomip
in
stc
mov
(bad)
jle
in
mov
or
xlat
stc
int
sbb
xlat
test
xor
retf
push
sbb
std
out
mov
xor
cdq
clc
cmp
and
cld
out
shl
test
or
cmp
fild
cld
xchg
jne
sub
clc
int
retf
sub
pop
lods
xchg
cld
cli
in
jg
jg
(bad)
stc
inc
jmp
movs
lock
push
std
popa
js
cli
in
jle
hlt
pop
cli
sbb
mov
lahf
and
(bad)
adc
das
call
fwait
xchg
add
es
cld
xchg
mov
ret
cli
pop
cld
mov
test
repz
aaa
dec
jle
aaa
dec
jg
push
jecxz
out
aaa
dec
pop
jl
dec
into
(bad)
xchg
in
pop
stc
sbb
mov
(bad)
jle
xor
(bad)
cmps
jle
(bad)
jle
fwait
jmp
mov
cmc
aaa
dec
enter
jg
pop
dec
call
in
mov
jle
test
in
cmp
mov
lds
sub
stc
int
in
ja
dec
ds
rcl
xor
aas
adc
pop
cld
add
jmp
aam
pop
loop
inc
addr16
stos
(bad)
sub
mov
scas
stc
fwait
rcl
dec
mov
lods
jle
push
fs
cli
imul
ja
push
daa
mov
mov
dec
jmp
aaa
es
add
dec
leave
adc
jge
xor
test
iret
mov
out
test
shr
push
cdq
cli
dec
pop
(bad)
cdq
mov
add
dec
leave
adc
jge
xor
test
aas
mov
cmc
pop
mov
int3
adc
aam
call
sti
lds
cld
sti
(bad)
push
gs
aaa
es
add
dec
leave
adc
jge
xor
test
jle
gs
inc
cmps
(bad)
loope
loope
and
push
jg
lahf
cli
mov
pop
stos
dec
std
out
cmc
out
jae
(bad)
leave
adc
jge
xor
add
jmp
xor
mov
push
mov
frstor
push
jg
scas
(bad)
in
leave
aam
dec
div
mov
fwait
std
idiv
add
dec
leave
adc
std
add
outs
cld
(bad)
enter
mov
xchg
test
mov
in
jg
outs
in
std
push
cld
(bad)
imul
paddd
aaa
mov
lea
(bad)
mov
mov
pop
mov
imul
dec
test
push
(bad)
(bad)
pop
fdivrp
sub
jns
div
cld
push
clc
out
xlat
push
sbb
sti
scas
mov
aam
lock
fucomi
ds
movs
mov
repz
jge
fcmovne
ja
int
mov
das
std
ins
stc
mov
jg
(bad)
xchg
jle
scas
mov
arpl
sti
in
mov
out
div
ja
add
sti
(bad)
jle
sti
(bad)
xchg
repnz
jg
mov
ja
jo
out
test
int3
loopne
cmp
jle
xchg
mov
jle
neg
das
nop
test
idiv
pop
jmp
out
ja
mov
ja
mov
loop
jle
jle
jecxz
ja
into
(bad)
inc
idiv
ja
out
(bad)
xor
fucomp
out
int
jle
sbb
push
cmp
mov
bnd
pushf
jge
arpl
mov
dec
(bad)
repnz
loop
(bad)
xor
ficomp
fstp
neg
mov
mov
mov
dec
mov
sar
mov
xor
fidiv
not
test
out
scas
mov
(bad)
fidivr
out
sbb
out
outs
xor
in
jp
ja
out
gs
out
jns
in
icebp
ja
lahf
jle
mov
adc
dec
sbb
fwait
xlat
les
sub
and
data16
and
xor
sti
outs
cmc
jg
jp
sbb
jnp
mov
cmc
mov
inc
aas
fs
outs
test
pop
sar
mov
mov
sbb
cmps
mov
xor
jp
mov
jmp
std
sub
sti
pop
imul
pop
and
aas
push
pop
pop
(bad)
in
stc
xor
rcr
aas
jg
pop
jecxz
(bad)
sti
jg
aas
loopne
cmp
xor
pop
js
icebp
iret
cld
loop
lock
jg
inc
mov
cld
xchg
mov
std
sahf
mov
call
cld
jg
cmps
cld
ja
jae
stc
(bad)
(bad)
imul
dec
out
aas
jmp
iret
jg
mov
pop
stc
pop
cld
loop
icebp
out
xchg
jg
sahf
ret
aas
inc
(bad)
mov
jg
fcomip
jl
imul
jg
lahf
dec
jle
aas
call
xchg
(bad)
xchg
dec
out
bnd
hlt
dec
(bad)
clc
jg
mov
sti
mov
jg
push
xchg
(bad)
idiv
jle
(bad)
std
(bad)
(bad)
mov
(bad)
(bad)
sbb
aas
cld
adc
test
jg
ja
cli
jg
fistp
sar
repz
cld
das
pop
cld
stos
sti
call
fcomip
mov
paddb
inc
push
(bad)
cdq
(bad)
jmp
cld
mov
cmp
push
inc
dec
inc
(bad)
fdivrp
scas
std
hlt
iret
dec
mov
(bad)
icebp
mov
out
ins
sti
adc
cld
push
aas
push
inc
out
clc
icebp
aas
clc
out
and
scas
push
mov
(bad)
out
lock
inc
(bad)
fwait
(bad)
fstp
sti
jg
mov
loopne
cmc
mov
sar
xchg
(bad)
pop
push
fcomip
(bad)
cli
jae
sar
cld
lahf
(bad)
pop
jmp
dec
lea
(bad)
(bad)
imul
(bad)
cld
push
call
dec
std
pop
out
(bad)
mov
out
ud0
push
outs
cld
lahf
jg
push
pop
inc
aas
(bad)
mov
out
jge
stos
call
mov
mov
into
jmp
pop
lock
push
sar
std
loop
cld
dec
aas
sti
scas
add
xlat
sti
paddd
jg
xlat
cld
aas
dec
(bad)
aas
(bad)
mov
sti
pop
call
outs
jle
jnp
loopne
neg
lds
(bad)
std
pop
std
mov
xlat
(bad)
mov
(bad)
stc
push
aaa
sti
cmp
addr16
pop
(bad)
sti
jmp
std
(bad)
test
loopne
cmc
pop
(bad)
jmp
jg
push
(bad)
mov
(bad)
out
push
iret
(bad)
arpl
(bad)
mov
out
inc
jg
stos
(bad)
(bad)
jmp
jecxz
std
push
call
scas
std
out
(bad)
(bad)
repnz
clc
mov
outs
cld
jae
std
std
(bad)
mov
loop
call
dec
jmp
pop
clc
mov
hlt
mov
jg
pop
jnp
push
(bad)
jp
sti
(bad)
in
(bad)
lahf
std
outs
jle
adc
mov
dec
adc
clc
pop
(bad)
(bad)
out
cli
iret
inc
dec
cld
stc
jg
pop
cli
retf
push
pop
mov
push
xchg
jg
xchg
mov
aas
repz
cld
loop
cmp
cmps
inc
lock
stc
aad
sar
dec
inc
dec
pop
std
out
cmc
jg
loop
(bad)
cmps
(bad)
stc
pop
jmp
gs
pop
stc
aas
push
mov
jmp
(bad)
daa
(bad)
out
(bad)
jmp
cld
mov
pop
std
xchg
cmc
jg
das
(bad)
outs
(bad)
(bad)
pop
clc
pop
(bad)
sti
(bad)
clc
out
icebp
retf
(bad)
fdivr
sti
pop
cli
pop
dec
aas
(bad)
fdivr
sti
daa
jle
outs
sti
jg
jp
loopne
hlt
mov
mov
icebp
pop
(bad)
repnz
cld
jg
(bad)
(bad)
(bad)
out
icebp
jg
(bad)
jg
mov
sti
pop
dec
call
pop
(bad)
icebp
push
idiv
movs
jmp
(bad)
jg
sbb
(bad)
addr16
(bad)
(bad)
(bad)
(bad)
stos
ds
mov
cmps
icebp
push
call
(bad)
cld
paddb
lahf
cld
pop
jg
(bad)
jmp
std
loop
in
(bad)
aas
jle
(bad)
(bad)
(bad)
addr16
out
(bad)
jmp
sti
movs
jmp
das
sti
mov
(bad)
(bad)
(bad)
cli
sbb
out
jg
jmp
std
out
push
std
(bad)
sti
das
cli
pop
dec
(bad)
das
std
adc
(bad)
std
fidivr
clc
iret
dec
(bad)
(bad)
push
call
(bad)
jg
lahf
push
mov
aas
lock
std
mov
cli
mov
jg
cmps
call
pop
cld
jg
xchg
jg
push
paddd
stos
jg
(bad)
sti
(bad)
cld
mov
jg
sti
jg
(bad)
jg
(bad)
std
pop
dec
(bad)
sti
jg
push
(bad)
out
push
paddb
push
pop
inc
mov
aas
mov
(bad)
cli
pop
inc
(bad)
in
push
(bad)
xchg
jg
push
scas
call
call
out
push
(bad)
rcr
cmc
jg
lea
jg
sti
(bad)
fistp
(bad)
std
dec
(bad)
(bad)
cmc
jg
jg
iret
xchg
(bad)
pop
cli
jg
arpl
jecxz
cld
xchg
(bad)
call
lahf
lock
xchg
jg
mov
jg
jg
repz
push
pop
(bad)
rcr
pop
(bad)
lahf
jg
pop
clc
pop
std
fucomip
scas
clc
add
mov
pop
call
dec
inc
jg
ja
(bad)
sar
(bad)
cli
add
mov
clc
mov
(bad)
cli
push
push
mov
stos
(bad)
(bad)
(bad)
repz
(bad)
jmp
ins
ret
(bad)
fistp
push
idiv
mov
(bad)
(bad)
jg
mov
out
(bad)
std
aas
(bad)
(bad)
fst
scas
cli
std
jmp
gs
mov
lahf
clc
pop
(bad)
out
std
mov
(bad)
dec
jmp
lahf
pop
cld
pop
mov
das
stc
adc
(bad)
(bad)
(bad)
fstp
clc
mov
mov
ja
iret
dec
inc
aas
icebp
paddb
lahf
inc
(bad)
jmp
sti
cmp
jg
xchg
jg
jg
lahf
jg
push
iret
cld
fistp
xlat
(bad)
mov
(bad)
jecxz
and
cli
ja
out
(bad)
call
(bad)
sti
ja
ins
inc
(bad)
call
stc
(bad)
std
mov
jg
mov
jo
pop
(bad)
(bad)
sti
idiv
mov
jg
psrlw
(bad)
clc
aas
inc
es
jmp
(bad)
jg
xchg
push
jg
lahf
jmp
push
pop
inc
aas
push
jg
sar
jecxz
cld
jnp
pop
jg
(bad)
std
out
dec
jg
xchg
hlt
loope
clc
cmp
ret
pop
icebp
out
(bad)
(bad)
in
out
bnd
cmp
jg
idiv
(bad)
out
dec
std
push
push
das
sti
pop
jmp
dec
jle
mov
pop
adc
out
jg
(bad)
stc
paddd
jg
aas
clc
aas
inc
push
mov
adc
(bad)
clc
pop
jmp
lahf
dec
(bad)
sti
paddd
jg
jmp
(bad)
call
jg
(bad)
sti
jmp
and
mov
mov
(bad)
stc
das
inc
call
outs
cld
jg
(bad)
jmp
das
(bad)
mov
std
inc
call
cwde
std
sar
idiv
adc
repnz
inc
retf
(bad)
out
push
pop
cld
(bad)
sar
iret
std
ud0
aas
lock
mov
jle
jmp
pop
inc
dec
mov
ja
jmp
stc
jmp
jg
jg
pop
pop
inc
lahf
std
(bad)
inc
aas
clc
paddd
aas
lock
(bad)
out
(bad)
jmp
scas
std
mov
(bad)
cld
sub
out
jmp
jmp
pop
clc
stos
jg
pop
cli
aas
std
cmps
call
out
repnz
call
dec
pop
jmp
mov
jmp
scas
les
fnstsw
lock
cld
dec
inc
jg
call
jg
push
push
mov
(bad)
cli
out
icebp
retf
ds
mov
push
std
mov
jg
cmps
mov
inc
stos
inc
pop
std
fwait
push
(bad)
push
(bad)
std
jg
(bad)
fistp
(bad)
std
aas
jmp
(bad)
inc
lahf
std
paddd
(bad)
aas
call
jg
pop
cld
gs
(bad)
std
outs
std
(bad)
sti
mov
pop
std
test
sbb
mov
cli
mov
pop
lock
sar
mov
ja
imul
aas
imul
bnd
iret
(bad)
std
jg
cmp
(bad)
inc
stos
jle
(bad)
sti
outs
cld
pop
inc
jmp
inc
jmp
(bad)
sti
push
jl
jg
fwait
push
jg
aas
(bad)
das
jmp
(bad)
std
(bad)
cmp
jmp
(bad)
sti
push
xor
std
aaa
(bad)
out
pop
sti
mov
add
xchg
(bad)
jg
pop
(bad)
scas
(bad)
lahf
call
mov
repnz
cli
iret
(bad)
out
(bad)
in
(bad)
(bad)
aas
jg
(bad)
sti
scas
cld
mov
pop
(bad)
fistp
push
aas
(bad)
xchg
push
scas
(bad)
sbb
imul
mov
loop
cld
mov
dec
cld
cmp
dec
popa
ds
pop
cmc
imul
mov
push
fsub
(bad)
(bad)
stc
pop
cld
aas
(bad)
in
(bad)
sti
jg
add
mov
(bad)
call
test
idiv
cmc
pop
inc
jmp
push
jmp
pop
outs
(bad)
out
(bad)
call
loopne
clc
sub
jmp
aas
(bad)
mov
(bad)
cld
std
mov
pop
call
pop
clc
jg
sbb
loopne
idiv
out
push
push
push
jg
stos
(bad)
sti
jg
jae
out
push
retf
(bad)
sti
iret
(bad)
mov
repnz
cmp
add
ret
(bad)
jg
jmp
(bad)
(bad)
cli
xchg
call
jg
paddd
(bad)
pop
mov
cld
jmp
lock
jle
jg
sub
mov
aad
out
std
ja
(bad)
repz
std
mov
(bad)
(bad)
in
aaa
dec
ficomp
add
jmp
scas
jg
paddb
cli
cmp
sar
pop
cld
mov
aas
cli
repz
sub
idiv
js
jg
push
mov
jg
mov
(bad)
std
sar
inc
lahf
stc
jg
xor
std
aaa
std
pop
dec
xor
aad
scas
retf
jg
jg
mov
add
leave
scas
cli
dec
jmp
xchg
inc
xchg
jmp
(bad)
(bad)
aad
cmp
loopne
jg
stc
sub
(bad)
cli
out
(bad)
std
(bad)
sti
push
jg
dec
(bad)
pop
push
das
inc
jg
(bad)
std
jg
cld
pop
call
and
scas
clc
aaa
dec
push
pop
cmp
inc
clc
mov
out
pop
stc
paddd
mov
inc
jg
idiv
in
cld
(bad)
sar
clc
sub
out
(bad)
jmp
xchg
loopne
cmc
dec
(bad)
pop
(bad)
ds
(bad)
hlt
(bad)
inc
(bad)
sar
out
(bad)
stc
retf
jmp
idiv
mov
hlt
les
paddd
loop
test
mov
loope
bnd
pop
mov
sti
jg
cli
push
push
iret
(bad)
fistp
pop
mov
push
xchg
(bad)
call
mov
repnz
(bad)
out
xor
pop
dec
stos
out
dec
jg
(bad)
push
(bad)
jns
(bad)
cli
pop
(bad)
out
push
ja
mov
scas
aas
xchg
in
push
std
dec
adc
(bad)
fcos
sti
pop
cld
cmp
inc
mov
dec
(bad)
(bad)
icebp
ja
out
push
(bad)
(bad)
ja
(bad)
std
scas
std
movs
jmp
out
jmp
(bad)
fdivr
lock
adc
mov
loop
cld
addr16
(bad)
std
idiv
mov
lahf
sti
or
xchg
jg
(bad)
(bad)
outs
push
sti
das
std
mov
dec
std
jns
ret
(bad)
das
push
push
jg
(bad)
std
aaa
inc
jg
in
clc
pop
clc
sub
sar
jnp
loopne
dec
xor
movsx
push
daa
(bad)
pop
jecxz
sti
jg
pop
jle
mov
aas
stc
push
jg
(bad)
sti
das
and
(bad)
mov
dec
(bad)
(bad)
leave
(bad)
mov
(bad)
stc
das
(bad)
pop
jg
(bad)
std
stos
pop
cld
outs
jmp
push
dec
cld
cmp
(bad)
std
mov
push
pop
cld
fistp
(bad)
out
aas
bnd
aas
(bad)
push
jg
std
outs
mov
fisub
loopne
stc
jmp
aas
mov
or
jg
aas
jg
jg
(bad)
(bad)
adc
(bad)
addr16
aas
std
pop
(bad)
out
push
push
jnp
(bad)
cld
(bad)
std
retf
(bad)
aad
sti
push
inc
cmp
(bad)
fistp
repz
inc
fucomip
(bad)
cld
sub
sar
xchg
xchg
ds
aas
jae
jns
cmp
std
cmp
sti
sti
jmp
mov
jmp
cld
pop
dec
mov
jmp
(bad)
(bad)
clc
jg
xchg
call
add
jg
pop
mov
(bad)
(bad)
mov
jle
(bad)
std
outs
inc
out
dec
jmp
jg
jg
mov
jmp
xlat
pop
(bad)
jg
and
neg
sti
shl
jg
mov
ja
aad
ud0
jg
dec
std
pop
cmps
push
jg
cdq
(bad)
clc
idiv
mov
mov
inc
or
push
inc
pop
clc
outs
cld
push
(bad)
fcmovnu
jmp
cmps
call
(bad)
into
(bad)
jmp
std
mov
sub
imul
jg
pop
sti
pop
jg
das
(bad)
aas
mov
mov
(bad)
pop
mov
cld
call
and
outs
(bad)
(bad)
fistp
stc
jg
sub
pop
cmc
jg
fistp
out
icebp
mov
outs
cld
jg
int
loopne
add
cld
inc
(bad)
jecxz
and
cld
sub
jmp
loop
stc
std
call
test
aaa
dec
out
pop
clc
jg
mov
cmc
repz
sti
lahf
std
pop
inc
(bad)
jmp
cli
mov
pop
std
idiv
fistp
pop
aas
es
out
jmp
inc
pop
neg
adc
call
cmc
jmp
(bad)
cli
ins
jmp
scas
inc
push
mov
sti
lahf
clc
mov
add
iret
(bad)
jmp
(bad)
das
inc
jmp
aaa
std
movd
pop
dec
and
lahf
pusha
in
loope
in
jmp
in
lahf
dec
js
fistp
inc
std
pop
rol
stos
inc
cli
out
adc
and
(bad)
(bad)
in
mul
sub
mov
dec
(bad)
sti
lahf
stc
add
mov
idiv
clc
pop
inc
jg
idiv
in
(bad)
inc
(bad)
std
lahf
std
add
stos
push
push
call
push
(bad)
(bad)
jg
pop
mov
inc
dec
push
aas
cld
push
jg
push
das
jle
paddd
push
push
lahf
(bad)
(bad)
repz
(bad)
cli
(bad)
std
mov
test
inc
jmp
dec
(bad)
mov
(bad)
cli
xor
out
xchg
jg
mov
and
iret
(bad)
mov
jg
lods
icebp
pop
inc
pop
inc
push
sar
jmp
cmp
call
dec
(bad)
lahf
jg
lods
(bad)
out
xlat
pop
dec
add
jg
sar
loopne
jmp
push
pop
cld
ins
mov
(bad)
fistp
mov
jg
push
cmp
cmp
cmc
mov
aas
clc
retf
dec
push
mov
jg
nop
std
add
retf
(bad)
jg
inc
hlt
stc
gs
(bad)
std
imul
jg
jg
jg
lahf
aad
cmc
pop
(bad)
push
mov
dec
sar
lea
loope
sti
mov
push
mov
aas
dec
jg
cwde
sub
pop
sti
jg
retf
paddb
add
cmc
jmp
ja
mov
call
xchg
inc
(bad)
jmp
cld
add
test
pop
stc
aas
(bad)
pop
aad
clc
mov
jg
jg
(bad)
jmp
scas
mov
stc
cmp
ja
in
test
cld
aad
in
std
sbb
(bad)
stc
ja
mov
mov
sub
idiv
mov
hlt
(bad)
cli
outs
leave
mov
pop
(bad)
clc
(bad)
std
outs
inc
mov
jmp
lahf
sti
jg
mov
paddb
aas
(bad)
arpl
cld
aas
(bad)
jg
jg
aas
(bad)
repnz
nop
hlt
leave
scas
cld
cmp
add
(bad)
or
mov
nop
fcom
jle
(bad)
jmp
mov
dec
mov
lahf
inc
pop
std
out
xchg
and
pop
jle
jmp
idiv
mov
mov
mov
fs
add
xchg
and
pop
mov
(bad)
sti
lahf
clc
std
mov
enter
mov
(bad)
jmp
cmp
jg
outs
dec
jg
(bad)
(bad)
gs
lahf
(bad)
(bad)
jecxz
mov
add
cmc
mov
idiv
das
jmp
push
pop
sahf
std
aad
xlat
jg
(bad)
cmp
jmp
les
jnp
stos
mov
jg
std
jg
inc
push
inc
aaa
inc
(bad)
in
push
inc
sar
jecxz
cld
(bad)
inc
shr
std
(bad)
xchg
in
js
jg
and
imul
das
sti
out
push
mov
pop
bnd
cld
pop
push
aas
dec
dec
repz
(bad)
(bad)
sar
sbb
(bad)
clc
aas
(bad)
pop
dec
out
icebp
sub
out
(bad)
std
mov
jnp
dec
pop
(bad)
lahf
push
call
dec
hlt
jg
lea
jmp
in
jmp
fistp
(bad)
clc
pop
cld
fdivr
cmc
cmps
inc
(bad)
call
adc
(bad)
xchg
aas
lock
cld
xchg
fs
ja
aas
(bad)
xchg
jmp
(bad)
(bad)
aas
mov
(bad)
jg
dec
inc
inc
out
(bad)
(bad)
aas
and
(bad)
daa
inc
pop
std
jg
mov
pop
add
mov
pop
cld
outs
inc
jmp
pop
cld
cmp
jmp
xchg
(bad)
stc
out
icebp
retf
aas
and
dec
je
(bad)
(bad)
mov
hlt
push
std
in
ss
push
add
shr
icebp
jg
xchg
sbb
pop
mov
aas
clc
jg
push
in
adc
inc
push
jg
paddd
jmp
pop
clc
xlat
call
xor
push
(bad)
cli
daa
(bad)
out
(bad)
(bad)
jmp
aaa
jg
dec
mov
jmp
pop
mov
xchg
js
mov
pop
test
cli
cld
mov
(bad)
jmp
cmc
jg
pop
dec
vmaxpd
(bad)
(bad)
std
aas
adc
nop
pusha
call
paddd
jnp
lahf
mov
jmp
(bad)
fistp
imul
(bad)
jmp
mov
sti
mov
pop
jmp
cld
mov
mov
(bad)
out
push
paddb
(bad)
idiv
(bad)
(bad)
push
inc
mov
pop
std
std
(bad)
(bad)
lock
inc
(bad)
out
jg
aas
cld
dec
jg
jg
jg
pop
jmp
aad
cmc
out
repnz
fidivr
mov
jmp
das
sti
pop
imul
sar
std
sbb
push
out
icebp
(bad)
push
pop
dec
jmp
mov
push
push
aas
cld
fistp
std
mov
retf
push
outs
(bad)
pop
jmp
aas
clc
pop
(bad)
fistp
call
aas
clc
sub
inc
call
test
sti
inc
loopne
inc
push
add
(bad)
xchg
inc
and
movsx
das
jmp
paddb
leave
xchg
cld
pop
lahf
std
push
jg
std
repnz
test
fdivrp
cli
pop
and
imul
sahf
call
mov
jg
pop
cmc
jg
(bad)
(bad)
clc
out
repnz
pop
inc
outs
sti
jg
sar
(bad)
std
jg
call
cld
sti
fs
scas
cld
pop
cld
mov
mov
sbb
jg
xchg
(bad)
(bad)
imul
pop
mov
das
and
jmp
shr
(bad)
jg
pop
inc
inc
in
mov
bound
(bad)
out
pop
imul
(bad)
pop
mov
adc
(bad)
jmp
popf
jnp
jnp
lahf
push
push
sti
call
and
daa
jg
pop
repnz
pop
push
inc
lods
pop
std
outs
(bad)
fistp
push
iret
and
(bad)
paddw
jmp
(bad)
call
(bad)
clc
scas
inc
pop
(bad)
fistp
(bad)
std
stos
stos
pop
cmc
jg
(bad)
inc
outs
cli
jg
popf
jmp
(bad)
std
(bad)
sti
fbld
(bad)
dec
jle
jg
(bad)
clc
cmp
idiv
lahf
jle
mov
leave
scas
lods
imul
stc
(bad)
(bad)
cld
sub
idiv
adc
(bad)
(bad)
(bad)
push
inc
(bad)
sti
paddb
dec
aas
lock
stos
(bad)
xchg
jg
(bad)
cli
cmps
loope
dec
jmp
cmp
jg
(bad)
(bad)
pop
(bad)
out
jg
xchg
call
mov
xchg
ret
push
jg
cmp
jg
xor
out
icebp
(bad)
std
iret
(bad)
(bad)
repz
clc
clc
jmp
in
cmps
(bad)
(bad)
cmc
jg
xor
addr16
jg
inc
jg
(bad)
std
fwait
(bad)
pop
adc
lahf
stc
jg
push
jg
mov
paddb
sti
jg
std
(bad)
std
out
icebp
mov
loope
repz
cmp
stos
test
loope
std
cmp
std
adc
xchg
iret
inc
lods
call
(bad)
es
sar
pop
cld
gs
dec
or
(bad)
(bad)
das
adc
xlat
aas
nop
pop
(bad)
jg
jnp
out
jg
jmp
(bad)
rol
pop
dec
loopne
(bad)
mov
pop
jo
dec
dec
inc
pop
repnz
inc
aas
lock
cli
dec
dec
fcomip
retf
inc
push
scas
and
repnz
(bad)
stc
ja
sti
sbb
push
aaa
ds
add
cdq
(bad)
push
std
jmp
out
pop
stc
pop
(bad)
outs
(bad)
push
dec
out
addr16
jg
scas
(bad)
aas
(bad)
out
(bad)
std
(bad)
(bad)
mov
add
mov
mov
stos
(bad)
std
scas
and
rep
inc
jg
xor
scas
jmp
outs
mov
push
(bad)
fcos
cld
aaa
(bad)
pop
pop
in
std
outs
jmp
scas
cli
pop
mov
(bad)
cmp
cmp
mov
stc
push
(bad)
(bad)
loopne
std
ja
ret
pop
inc
retf
(bad)
mov
loopne
idiv
cld
(bad)
out
fucomip
sar
lock
adc
call
call
sbb
(bad)
jg
xchg
and
push
pop
cli
jg
mov
sub
stc
push
leave
mov
push
mov
fild
(bad)
xlat
fisttp
call
fidivr
add
inc
inc
jg
cli
push
pop
stc
jg
aaa
xor
les
sbb
pop
scas
pop
inc
jbe
mov
fild
outs
and
iret
scas
movs
jmp
dec
out
jg
pop
adc
xchg
arpl
xor
mov
jecxz
and
pop
(bad)
pop
imul
cli
jecxz
sbb
out
sti
sub
sar
pop
cld
cmp
out
bnd
(bad)
mov
bound
clc
cmp
jg
dec
dec
xor
stc
aas
lock
sbb
mov
scas
inc
call
pop
inc
inc
mov
mov
(bad)
sti
dec
push
mov
mov
out
push
aas
and
inc
and
stc
out
sti
std
(bad)
out
call
(bad)
in
fisttp
hlt
addr16
(bad)
jmp
(bad)
cmc
jg
mov
pop
jmp
scas
lea
push
(bad)
(bad)
pop
sti
jg
jmp
and
(bad)
mov
out
aas
dec
cld
iret
mov
std
lahf
dec
jle
out
icebp
jg
test
inc
loope
cmc
jg
cmp
(bad)
pop
clc
paddd
cmovs
push
mov
dec
in
dec
test
mov
dec
push
(bad)
out
nop
lods
xlat
jg
pop
xchg
aas
sti
xchg
stc
mov
aas
std
cmp
cmps
mov
ret
neg
(bad)
in
clc
mov
sub
ret
mov
das
and
jmp
(bad)
sti
scas
sti
mov
inc
push
jg
push
(bad)
mov
(bad)
fdivr
jmp
sub
out
push
mov
cli
fistp
pop
stc
dec
push
push
paddb
call
aad
sub
call
dec
jmp
in
(bad)
(bad)
adc
jno
sar
cld
(bad)
(bad)
sti
pop
sti
jg
sar
idiv
jnp
jmp
das
(bad)
fisttp
sub
dec
push
cld
sar
mov
fs
or
aas
xchg
mov
sub
aas
clc
jg
dec
std
pop
xor
in
std
scas
jg
out
dec
clc
(bad)
idiv
(bad)
stc
jmp
cmp
repz
clc
out
pop
jmp
dec
neg
clc
pop
std
(bad)
xlat
inc
push
clc
jae
ss
das
jns
iret
cld
out
loopne
or
scas
jmp
push
aaa
(bad)
pop
call
out
dec
add
push
paddd
push
mov
dec
push
(bad)
cli
jnp
pop
jg
aas
clc
mov
inc
test
push
dec
dec
call
push
jg
mov
adc
xlat
stc
mov
mov
jmp
push
jmp
rcl
xlat
call
aas
dec
outs
or
call
(bad)
std
dec
scas
std
(bad)
jmp
jg
addr16
jns
or
paddw
(bad)
(bad)
daa
popa
hlt
(bad)
cdq
aas
xchg
clc
clc
(bad)
cld
mov
hlt
idiv
aas
jle
mov
jg
aas
(bad)
das
mov
cld
(bad)
mov
out
(bad)
(bad)
in
pop
cmc
lahf
(bad)
fistp
pop
cld
mov
sub
aaa
fs
scas
jmp
repz
(bad)
lahf
jle
pop
inc
(bad)
lahf
jg
(bad)
std
pop
dec
dec
sar
outs
(bad)
outs
mov
and
(bad)
(bad)
in
icebp
pop
push
jg
(bad)
cli
cmp
(bad)
jmp
and
xchg
bound
(bad)
in
xlat
jmp
(bad)
jb
or
sti
mov
dec
stos
inc
jg
sbb
popf
sti
mov
imul
(bad)
stc
dec
dec
lock
(bad)
fistp
aas
test
sar
(bad)
aas
jmp
(bad)
xchg
std
cs
das
call
call
imul
jle
pop
clc
aad
(bad)
push
xchg
in
xchg
into
dec
outs
cld
(bad)
je
jp
std
aas
cld
(bad)
in
std
out
(bad)
(bad)
xlat
pop
clc
jg
sti
mov
push
std
loop
inc
push
(bad)
mov
(bad)
pop
inc
jg
(bad)
cld
add
out
pop
xchg
mov
call
jg
inc
jg
scas
jl
jg
test
shl
jle
lods
aas
adc
pop
repnz
fld
jg
aas
fwait
cld
sbb
inc
mov
aas
std
cs
push
adc
cld
push
call
fisttp
sti
mov
lahf
icebp
pop
(bad)
stos
(bad)
sti
(bad)
cli
cld
paddb
jg
repnz
jg
(bad)
sti
iret
(bad)
cmp
mov
(bad)
stc
dec
loopne
js
xchg
dec
inc
jmp
dec
movs
pop
stc
std
(bad)
out
pop
sti
out
movs
cwde
out
inc
(bad)
out
(bad)
(bad)
out
mov
jg
(bad)
std
and
aas
(bad)
(bad)
fistp
inc
jb
inc
jmp
mov
loope
and
cld
lahf
mov
leave
mov
pop
(bad)
stc
jg
mov
(bad)
(bad)
xlat
jg
jg
loopne
jmp
std
pop
jl
pop
dec
pop
jle
push
outs
movs
sbb
jg
xor
nop
(bad)
(bad)
aas
cld
(bad)
(bad)
fld
jmp
jmp
cdq
bound
into
dec
dec
mov
lahf
cld
into
push
stc
(bad)
loop
icebp
paddd
call
out
cmc
paddd
mov
jmp
dec
inc
(bad)
jmp
clc
add
fwait
(bad)
sti
(bad)
mov
cld
push
call
aas
dec
mov
jg
fild
cmp
jg
mov
mov
jmp
or
sbb
aad
lock
cli
cmp
cmp
iret
jle
mov
push
push
jg
push
cs
jp
pop
mov
sti
pop
dec
mov
xchg
sti
cld
scas
xchg
or
mov
(bad)
cli
xlat
(bad)
pop
mov
xor
in
jg
sub
cld
loop
jmp
cld
add
(bad)
std
sbb
cld
lahf
jg
jg
mov
(bad)
mov
sub
xchg
and
aas
dec
aas
lock
adc
mov
(bad)
jmp
icebp
aas
clc
pop
std
fistp
jge
pop
cld
cmp
idiv
mov
(bad)
jmp
jecxz
(bad)
sbb
xlat
cmps
test
dec
(bad)
fld
mov
jmp
data16
(bad)
out
jg
out
std
pop
push
jg
cld
mov
icebp
setb
idiv
movs
push
(bad)
std
sti
cld
lahf
lahf
xchg
cmps
call
lods
jmp
(bad)
stc
out
pop
inc
sbb
(bad)
dec
(bad)
std
aaa
std
mov
imul
(bad)
outs
(bad)
mov
mov
in
(bad)
out
jg
mul
sub
push
scas
movs
fyl2xp1
lahf
pop
cld
out
(bad)
mov
jg
or
push
xlat
inc
push
jg
imul
jl
adc
scas
push
(bad)
(bad)
aad
and
mov
fdivrp
(bad)
cmp
xlat
lahf
stc
lahf
dec
(bad)
sti
dec
stc
mov
jg
gs
jnp
cmp
pop
rol
fwait
push
(bad)
(bad)
outs
jmp
das
inc
pop
cmc
push
jle
loop
cld
dec
(bad)
out
jmp
repnz
jmp
pop
cld
cmp
out
jmp
(bad)
add
(bad)
repz
bnd
sti
call
movs
jle
push
movs
in
push
call
mov
dec
fild
mov
call
(bad)
pop
push
jg
lahf
std
cmp
mov
sbb
push
dec
mov
inc
push
sti
jg
stc
xor
(bad)
in
mov
jmp
push
stc
mov
jg
sub
mov
daa
mov
mov
jg
jnp
dec
jmp
push
mov
add
retf
cmp
mov
(bad)
adc
lahf
and
(bad)
out
xchg
xor
jg
(bad)
std
inc
inc
mov
jmp
icebp
(bad)
cli
in
(bad)
cli
xor
call
inc
jmp
jg
mov
out
das
(bad)
stc
mov
(bad)
out
mov
movs
(bad)
stc
pop
clc
mov
(bad)
call
icebp
mov
pushf
stos
aas
lock
push
mov
cld
cmp
cld
fist
dec
(bad)
cli
dec
dec
dec
std
pop
pop
nop
or
scas
jmp
shr
inc
pop
idiv
(bad)
out
pop
inc
icebp
(bad)
std
sub
dec
int
push
cmpps
jmp
cld
aas
jg
bound
mov
push
aas
clc
dec
xchg
mov
(bad)
in
iret
cld
mov
cli
pop
jg
scas
es
cld
inc
lock
inc
push
dec
mov
aas
(bad)
(bad)
inc
jg
pop
(bad)
pop
(bad)
in
(bad)
std
retf
out
inc
call
aas
dec
nop
call
ret
mov
(bad)
hlt
call
jg
stc
dec
jg
mov
aas
xchg
cld
std
jg
push
icebp
push
or
sar
clc
in
(bad)
push
mov
out
jg
ja
adc
(bad)
stc
(bad)
std
jg
std
aas
sub
pop
lahf
rol
dec
leave
xchg
cli
xor
inc
sbb
(bad)
cld
pop
xchg
(bad)
bnd
sbb
into
lahf
clc
jg
xchg
loop
(bad)
sti
das
movs
dec
xlat
repnz
cli
xchg
(bad)
out
aas
stc
mov
repnz
pop
repz
(bad)
pop
stc
aas
clc
pop
jmp
dec
(bad)
jg
std
mov
sub
jg
push
aas
hlt
xchg
(bad)
(bad)
cmp
mov
fistp
clc
(bad)
(bad)
sar
pop
icebp
inc
xchg
retf
jle
pop
(bad)
mov
clc
jg
(bad)
pop
(bad)
fistp
pop
clc
idiv
out
(bad)
in
jg
sti
dec
jmp
cmc
(bad)
outs
push
lods
std
jg
loope
loopne
inc
(bad)
call
(bad)
jmp
aas
sti
paddd
call
(bad)
std
jg
cs
sub
mov
mov
cmc
jg
stc
paddd
jg
(bad)
clc
sub
adc
sahf
cld
addr16
xchg
pop
cwde
cmp
mov
ja
arpl
sar
dec
and
repz
cmp
(bad)
std
mov
push
aas
stc
icebp
scas
clc
sbb
neg
xchg
shr
(bad)
sar
or
cmp
imul
ins
jmp
std
cmp
scas
inc
and
mov
es
pop
out
(bad)
outs
scas
jg
(bad)
clc
jg
xchg
paddd
mov
xlat
jle
pop
std
(bad)
idiv
stos
inc
jg
xlat
and
jmp
aas
dec
icebp
clc
jg
pop
shl
xchg
push
push
push
jg
das
pop
sub
fistp
(bad)
jg
jg
daa
(bad)
mov
xlat
or
xor
ud0
xchg
mov
retf
(bad)
std
mov
push
mov
cld
fwait
(bad)
fistp
pop
sti
pop
push
jbe
aas
mov
es
scas
(bad)
call
je
scas
cld
pop
(bad)
out
jg
dec
std
into
push
pop
(bad)
out
idiv
jno
paddd
jmp
jmp
retf
repz
xor
stos
aas
stc
mov
(bad)
sti
outs
stc
jg
lea
call
out
mov
(bad)
inc
scas
jmp
sbb
and
cld
mov
push
jge
loop
std
(bad)
out
pop
cmc
loopne
clc
repnz
cli
ret
(bad)
out
pop
std
addr16
sbb
mov
pop
stc
daa
(bad)
fistp
jg
stos
dec
or
popf
(bad)
cld
(bad)
(bad)
push
inc
sti
cld
call
scas
inc
jg
ja
out
jmp
sti
jg
xor
mov
jg
jg
pop
(bad)
jecxz
add
fsub
mov
nop
and
clc
(bad)
cld
aas
sub
push
std
add
outs
jb
(bad)
out
mov
jg
dec
dec
std
(bad)
call
pop
sti
sti
jmp
aaa
dec
mov
mov
iret
inc
xchg
cmp
and
push
mov
leave
icebp
inc
mov
dec
out
(bad)
jg
mov
and
inc
mov
push
ja
cmp
das
and
out
(bad)
clc
mov
xchg
push
inc
icebp
jg
push
(bad)
fstp
jg
movsx
outs
clc
ja
jle
(bad)
std
or
jg
int3
(bad)
aas
sti
paddd
pop
push
hlt
stc
pop
xchg
and
retf
into
clc
push
cld
stos
jg
(bad)
(bad)
aas
mov
paddb
pop
call
jmp
inc
fisttp
fcos
hlt
fstp
repz
add
rcr
jg
enter
jno
dec
std
mov
cli
fwait
leave
stc
(bad)
(bad)
inc
mov
pop
jg
jne
idiv
cli
inc
mov
scas
scas
inc
loop
std
(bad)
test
dec
leave
mov
(bad)
sar
sbb
push
dec
fild
idiv
xchg
jmp
mov
sbb
xor
xchg
mov
sub
clc
pop
enter
in
(bad)
out
sar
jmp
mov
xchg
jle
(bad)
in
adc
inc
(bad)
jmp
(bad)
cmp
mov
call
mov
idiv
gs
iret
mov
mov
jg
stc
pop
mov
jmp
retf
cmp
pop
inc
adc
imul
std
cmovns
fidivr
(bad)
aad
sar
stc
xlat
es
adc
paddd
jg
(bad)
jmp
(bad)
std
(bad)
xchg
jae
jg
cdq
mov
(bad)
mov
pop
(bad)
jmp
cmp
pop
test
(bad)
(bad)
jge
add
push
paddb
leave
out
and
hlt
pop
cld
(bad)
inc
pop
dec
fstp
out
sti
and
movs
fwait
push
aas
xchg
ret
scas
jmp
jg
jg
idiv
(bad)
mov
cld
aas
jg
jmp
xchg
push
(bad)
cli
or
rcr
cld
(bad)
(bad)
stos
dec
jmp
jg
retf
inc
(bad)
stc
ja
mov
push
mov
jg
pop
repz
(bad)
in
call
paddb
retf
jmp
stc
arpl
das
std
sti
inc
pop
stc
fucomp
call
jg
movs
adc
mov
cld
jg
loope
idiv
clc
rsqrtps
icebp
jnp
pop
(bad)
call
sar
repz
cld
aas
fwait
pop
dec
dec
(bad)
mov
push
jmp
in
dec
jmp
and
add
scas
push
jg
jnp
(bad)
fistp
sar
std
setb
stc
icebp
push
idiv
cmp
ja
sub
cmp
outs
cli
jg
push
push
(bad)
aas
(bad)
pop
mov
repz
std
jmp
dec
call
sbb
call
das
inc
nop
(bad)
lahf
fdivrp
cmps
inc
pop
std
pop
(bad)
ffreep
jg
aas
clc
lahf
inc
jg
push
push
(bad)
out
pop
cld
mov
enter
jle
pop
cli
dec
(bad)
(bad)
pop
cmc
jg
cs
stc
scas
cld
(bad)
repz
xor
mov
scas
(bad)
out
mov
ja
(bad)
(bad)
cli
(bad)
(bad)
push
call
lahf
dec
out
pop
cmps
test
out
inc
sbb
pop
jle
jg
xchg
cld
pop
adc
inc
jg
xchg
movs
mov
inc
call
or
iret
aas
popf
shr
jmp
out
inc
sahf
jmp
idiv
lock
addr16
lahf
inc
sub
stc
paddd
(bad)
scas
cli
or
idiv
adc
(bad)
cli
pop
and
stc
pop
inc
(bad)
std
sar
mov
mov
sar
push
movs
std
aas
(bad)
(bad)
fld
cmps
ins
in
call
lea
call
cmp
xchg
ins
stc
mov
out
fcomip
paddb
ja
add
std
mov
jge
pop
mov
cld
xchg
fst
cmp
jg
jecxz
sar
(bad)
in
push
into
jg
mov
add
sar
(bad)
clc
xor
dec
out
out
push
inc
jmp
pop
clc
stos
jle
jno
jg
std
pop
jg
(bad)
std
(bad)
nop
and
jg
cmp
pop
cld
iret
jle
retf
mov
repnz
sti
(bad)
cmps
ret
(bad)
sti
aas
stc
cmp
addr16
(bad)
jg
(bad)
jmp
jg
movlps
std
mov
jecxz
cmc
arpl
push
test
repz
retf
jg
mov
repz
pop
cld
xchg
(bad)
mov
std
xchg
cld
pop
mov
cli
out
icebp
jg
cmp
(bad)
sti
push
std
mov
mul
enter
fs
paddb
xchg
pop
dec
aas
(bad)
out
(bad)
clc
ja
jl
jg
jg
xchg
pop
stc
jg
pop
mov
lds
sub
mov
xchg
shl
in
(bad)
cli
push
fcomip
jg
cmps
push
(bad)
int
cld
aaa
(bad)
out
mov
jg
lahf
dec
pop
fisubr
sar
dec
mov
cld
cs
fistp
clc
cmp
sti
mov
daa
(bad)
fnstcw
imul
mov
retf
push
(bad)
and
mov
jmp
aam
repnz
cld
imul
aas
std
adc
aas
jmp
and
(bad)
std
retf
push
cld
fistp
inc
mov
jg
mov
push
aas
(bad)
(bad)
jg
lahf
dec
sub
aas
movs
cmc
mov
pop
sbb
outs
dec
pop
std
mov
jg
(bad)
cli
jg
mov
cmps
xchg
push
cli
lahf
jle
call
clc
inc
pop
clc
cmps
(bad)
icebp
(bad)
fucomi
inc
inc
sti
(bad)
(bad)
pop
std
cmps
inc
jmp
(bad)
jmp
pusha
mov
pop
jg
sar
std
aaa
(bad)
sar
stc
ja
(bad)
leave
(bad)
in
xchg
shl
aas
(bad)
fistp
aas
mov
mov
clc
pop
inc
(bad)
sti
pop
(bad)
std
jg
out
bnd
or
pop
dec
jmp
paddd
mov
dec
pop
cld
movs
hlt
idiv
cmc
mov
arpl
daa
fdivrp
gs
repnz
lahf
aad
clc
aas
push
call
out
icebp
jg
stos
(bad)
sti
outs
movs
sub
(bad)
std
dec
(bad)
addr16
(bad)
inc
xor
fild
pop
call
xor
cmp
adc
out
repz
(bad)
(bad)
adc
push
test
pop
mov
jg
das
cld
lahf
sub
(bad)
mov
(bad)
clc
outs
inc
pop
inc
mov
fcomip
into
scas
(bad)
pop
push
cld
pop
push
pop
dec
mov
aas
dec
jmp
push
pop
dec
mov
(bad)
cld
mov
neg
aas
(bad)
sti
call
int
sub
mov
dec
(bad)
jmp
in
(bad)
cmp
xchg
sbb
clc
jns
cmc
mov
(bad)
out
loope
std
xchg
pushf
cwde
jmp
idiv
(bad)
pop
dec
mov
mov
jecxz
repnz
inc
repnz
nop
mov
xchg
inc
repnz
cmc
daa
(bad)
stos
inc
(bad)
std
lahf
inc
jmp
adc
fcos
cmc
ja
and
hlt
aas
(bad)
clc
daa
in
jmp
mov
lods
jle
(bad)
sti
idiv
push
aad
cmc
dec
(bad)
(bad)
icebp
aas
dec
out
push
push
inc
scas
cli
xchg
in
xchg
dec
cld
(bad)
(bad)
std
paddd
pop
adc
lea
retf
(bad)
sti
psubq
dec
pop
std
jg
(bad)
adc
cli
(bad)
iret
jmp
(bad)
(bad)
push
jg
push
imul
mov
jg
push
pop
inc
sub
(bad)
jmp
stc
aaa
push
mov
lahf
std
xor
inc
jg
daa
inc
mov
(bad)
out
jmp
inc
jg
(bad)
std
jg
cli
inc
pop
out
jg
pop
cld
lahf
mov
out
jg
aas
daa
std
inc
loope
(bad)
std
mov
(bad)
std
lahf
and
inc
pop
test
(bad)
scas
aas
idiv
(bad)
lahf
call
dec
mov
call
cmps
pop
(bad)
stos
iret
(bad)
scas
push
idiv
push
(bad)
mov
lahf
inc
clc
cmp
out
std
lahf
fist
(bad)
jmp
sti
pop
jmp
out
(bad)
fistp
add
mov
mov
(bad)
out
(bad)
clc
out
cld
(bad)
xchg
aas
cld
pop
jg
pop
std
sbb
cmp
aas
dec
call
movq
paddd
mov
js
lds
retf
inc
(bad)
sti
sar
mov
mov
retf
xchg
mov
sti
scas
xchg
cmp
aas
(bad)
(bad)
jg
jmp
jg
test
add
xlat
dec
(bad)
out
fistp
lds
std
fwait
outs
std
cmps
call
fisttp
ds
inc
imul
dec
stc
inc
jg
retf
fdivp
idiv
movs
(bad)
cld
(bad)
std
stos
inc
(bad)
std
aaa
cld
mov
mov
jmp
push
cmp
xlat
(bad)
sar
loop
cld
retf
retf
cli
lahf
jmp
push
sar
lahf
shr
call
jmp
lock
or
jg
push
inc
out
repnz
(bad)
clc
out
inc
xor
(bad)
inc
jg
mov
neg
dec
lahf
jg
push
jmp
pop
jmp
int
stc
and
lds
push
cld
dec
retf
cmps
cmc
lahf
hlt
mov
cmp
(bad)
xlat
sub
(bad)
mov
retf
jg
push
iret
xchg
ins
nop
mov
call
dec
(bad)
std
aas
cld
mov
(bad)
out
icebp
addr16
fistp
xor
(bad)
call
xchg
in
outs
cli
mov
lods
mov
mov
loop
(bad)
sti
pop
std
sbb
std
stos
aas
cmc
pop
cld
pop
jg
add
cli
pop
(bad)
jno
retf
cld
jle
out
icebp
jg
(bad)
push
aas
repnz
inc
jg
jle
loopne
(bad)
aas
(bad)
(bad)
in
std
push
jg
push
mov
cld
dec
pop
(bad)
stos
(bad)
outs
and
push
bnd
cld
mov
push
jge
(bad)
(bad)
push
jle
pop
sar
addr16
pop
adc
mov
jmp
sub
nop
int
cli
jg
and
and
popf
je
jg
das
(bad)
outs
paddd
jg
das
std
adc
push
(bad)
cli
pop
jg
pop
pop
cli
cmp
jmp
push
(bad)
outs
mov
inc
jmp
pop
sub
mov
(bad)
clc
cmc
jg
(bad)
(bad)
mov
cld
aaa
jmp
lahf
(bad)
sar
sti
push
dec
mov
sub
retf
(bad)
jmp
std
adc
scas
xchg
paddd
cmp
jg
pop
(bad)
stos
jmp
dec
sub
sbb
mov
clc
out
sti
aad
xlat
pop
dec
xlat
jg
jmp
xchg
or
(bad)
mov
push
mov
stc
xchg
cmp
(bad)
std
jg
pop
dec
pop
out
jle
aas
dec
test
fwait
mov
inc
jg
push
idiv
in
sub
(bad)
fdivrp
std
sub
shr
ds
add
repz
(bad)
sti
pop
and
(bad)
out
call
ficomp
clc
pop
jge
pop
stc
mov
mov
inc
pop
(bad)
(bad)
repz
inc
jmp
inc
dec
aaa
dec
aas
lock
mov
mov
cmps
inc
mov
retf
mov
hlt
aad
(bad)
sti
(bad)
(bad)
cli
pop
out
(bad)
loop
jmp
cld
mov
scas
sub
repz
out
inc
xchg
std
mov
cmp
cld
stos
mov
dec
(bad)
(bad)
std
jg
mov
sti
pop
cli
sub
out
jg
retf
std
pop
call
scas
scas
dec
jg
outs
sti
pop
inc
cmps
cwde
bnd
sub
xchg
cmp
enter
jmp
jg
jg
fdivr
ret
push
push
call
stc
(bad)
std
stos
dec
(bad)
sti
or
jecxz
jecxz
cld
jecxz
mov
out
cld
ja
(bad)
(bad)
std
in
(bad)
std
paddw
sti
jg
iret
cld
mov
ja
out
fistp
daa
(bad)
lahf
jg
pop
clc
jg
cs
scas
jg
in
imul
std
paddb
jg
push
sub
out
aas
jmp
rcr
xchg
aad
inc
sub
sti
std
jg
(bad)
jmp
call
fcomip
retf
stos
jg
jmp
cli
xor
jmp
dec
pop
std
aad
pop
inc
and
aas
std
mov
icebp
inc
sub
xchg
call
jg
pop
(bad)
push
and
pop
imul
jg
push
test
inc
fisttp
lock
inc
aad
xlat
(bad)
std
daa
call
push
stos
jg
mov
mov
xor
daa
(bad)
jmp
xor
or
std
jne
cwde
fs
add
aaa
cld
pop
call
pop
jmp
retf
jnp
pop
(bad)
sar
cmc
idiv
aas
(bad)
fcompp
aas
idiv
mov
(bad)
std
pop
cld
out
(bad)
cmps
call
jmp
repz
sti
das
sti
mov
scas
clc
add
xchg
stos
pop
cmc
or
(bad)
fistp
sti
movs
mov
jle
(bad)
sti
ja
ja
out
jg
paddb
mov
lock
sar
call
(bad)
out
mov
jl
cmps
out
jg
sbb
bnd
mov
retf
(bad)
fdivrp
out
(bad)
cld
imul
(bad)
dec
cld
aas
aas
(bad)
pop
dec
ret
inc
outs
out
clc
sub
xchg
xor
jg
mov
push
clc
xlat
inc
call
cmps
test
cld
pop
inc
sar
push
(bad)
clc
(bad)
jmp
(bad)
fistp
paddd
(bad)
pop
cld
outs
scas
jle
aas
clc
mov
out
(bad)
jg
test
push
nop
jnp
mov
addr16
scas
movs
pusha
out
mov
std
cmp
(bad)
repz
jg
pop
or
lock
clc
jnp
and
pop
jmp
inc
jg
pop
push
pushf
sti
scas
cld
fcomip
repnz
ja
in
outs
std
push
mov
jmp
in
(bad)
lahf
jmp
lds
clc
scas
fdivrp
pop
jg
mov
out
pop
daa
stos
repz
inc
std
pop
(bad)
(bad)
aad
dec
cld
jmp
clc
jg
cmp
xor
out
cld
mov
push
inc
pop
(bad)
out
jmp
jg
jg
pop
jg
push
mov
movs
cli
mov
(bad)
push
inc
pop
stc
jg
sub
add
not
jg
scas
cli
pop
lahf
cld
hlt
das
sti
mov
loopne
std
loopne
retf
dec
in
cld
mov
lock
jg
inc
jmp
(bad)
in
outs
cli
jg
mov
push
std
cmps
mov
(bad)
out
aas
loop
cld
lahf
inc
xor
pop
shl
inc
and
out
mov
(bad)
sti
jg
lods
(bad)
out
pop
jmp
(bad)
jmp
std
(bad)
xchg
pop
inc
pop
inc
fst
bound
scas
jle
repnz
(bad)
aam
nop
jl
(bad)
(bad)
cli
das
inc
push
outs
movs
push
idiv
cmc
retf
jg
jmp
mov
pop
out
(bad)
aas
inc
mov
(bad)
jmp
jmp
(bad)
stc
(bad)
push
jb
(bad)
mov
jg
(bad)
stc
pop
(bad)
fistp
dec
(bad)
(bad)
adc
aas
stc
pop
sub
mul
(bad)
and
jg
popf
imul
xchg
sbb
pop
mov
std
sti
lahf
(bad)
aam
lock
jge
jg
and
pop
cld
pop
jg
aas
cmc
stc
out
neg
inc
jmp
mov
fwait
(bad)
(bad)
hlt
out
(bad)
mov
and
push
std
mul
jmp
(bad)
out
(bad)
std
pandn
jnp
scas
(bad)
lahf
test
out
aas
cwde
ins
push
pop
lock
std
stos
fcomip
xchg
dec
jg
test
(bad)
dec
jle
(bad)
in
repz
sti
jmp
pop
mov
sub
lahf
(bad)
stos
(bad)
sti
(bad)
cli
clc
inc
lahf
mov
xchg
sahf
(bad)
aas
(bad)
sahf
aas
in
ja
cmps
xor
fisttp
(bad)
jg
clc
push
(bad)
mov
or
xchg
(bad)
(bad)
cli
out
inc
(bad)
aas
sti
mov
cld
(bad)
ja
(bad)
fdivr
repz
mov
out
clc
mov
jg
fdivrp
icebp
dec
inc
mov
jg
push
adc
fisttp
stc
mov
in
sar
paddb
inc
call
and
jg
ss
mov
std
outs
jg
(bad)
std
pop
cld
cmp
jg
(bad)
jmp
cld
ud0
(bad)
(bad)
jg
std
mov
call
jg
std
mov
push
fist
xchg
jle
out
inc
mov
mov
jmp
pop
clc
out
xchg
pop
inc
mov
dec
push
push
in
cld
cmp
jg
movsx
jmp
cli
paddb
(bad)
pop
std
pop
(bad)
xchg
push
outs
cld
aad
inc
dec
loop
repz
out
jmp
pop
clc
(bad)
inc
push
fimul
pop
clc
jg
xchg
jg
pop
mov
cld
scas
std
mov
(bad)
std
daa
(bad)
out
(bad)
(bad)
cld
arpl
sar
std
add
rep
pop
cmc
pop
inc
stos
(bad)
(bad)
das
stc
or
jmp
out
std
mov
hlt
mov
sti
(bad)
and
out
cld
aam
std
sti
call
jmp
call
aaa
std
cdq
(bad)
jmp
xchg
(bad)
push
(bad)
xchg
push
icebp
faddp
push
aas
pop
std
jmp
cdq
(bad)
(bad)
(bad)
mov
sti
pop
std
mov
bound
repnz
xchg
call
(bad)
stc
(bad)
xchg
mov
mov
scas
(bad)
hlt
(bad)
(bad)
lahf
(bad)
ficom
(bad)
sbb
mov
scas
cmp
cmp
mov
sar
inc
test
add
in
pop
cmc
sbb
adc
outs
inc
xor
imul
rcr
xlat
push
jg
pop
dec
(bad)
xchg
idiv
cwde
aas
jmp
lock
call
mov
in
cld
aad
in
imul
jmp
mov
(bad)
dec
(bad)
retf
(bad)
jmp
clc
pop
jmp
dec
fild
(bad)
sti
(bad)
mov
push
(bad)
cli
idiv
inc
les
inc
jmp
xchg
jb
jmp
jg
daa
jmp
das
cmp
mov
in
repnz
cld
out
inc
(bad)
std
retf
(bad)
sti
aas
std
daa
(bad)
out
jg
iret
stc
jmp
xlat
ror
cmp
sar
idiv
mov
or
fistp
idiv
cmp
(bad)
add
scas
clc
aas
(bad)
cld
aas
lock
inc
loop
xchg
fs
outs
jecxz
icebp
jnp
out
lock
addr16
lahf
dec
jmp
(bad)
dec
jle
(bad)
jmp
stc
movq
mov
lods
mov
inc
or
jmp
(bad)
clc
jg
(bad)
inc
jmp
push
paddd
jg
jg
jg
jmp
mov
inc
(bad)
sar
pop
ret
lahf
cli
pop
(bad)
(bad)
idiv
neg
sar
scas
clc
add
cmp
dec
ret
push
(bad)
fistp
pop
clc
mov
mov
retf
inc
jae
mov
out
test
inc
icebp
dec
cli
in
bnd
cmp
jmp
pop
inc
push
inc
movs
scas
(bad)
mov
dec
or
cmp
repz
std
retf
mov
pop
stc
pop
(bad)
lahf
inc
pop
xlat
mov
in
pop
(bad)
test
ud0
aas
clc
pop
cld
iret
jg
(bad)
jmp
adc
jg
mov
imul
inc
mov
xchg
inc
(bad)
jmp
retf
leave
cmp
out
icebp
jg
jnp
jmp
icebp
(bad)
clc
dec
dec
dec
cld
dec
mov
xchg
cmp
push
(bad)
in
(bad)
std
idiv
cmp
(bad)
fistp
in
jg
jg
jg
xchg
neg
jg
stos
(bad)
sti
lahf
stc
mov
mov
popf
(bad)
mov
icebp
call
xchg
push
stc
xchg
jg
(bad)
stc
or
(bad)
(bad)
cmp
aad
repnz
cli
fwait
(bad)
mov
dec
scas
(bad)
ja
clc
outs
std
pop
mov
mov
sbb
out
mov
out
mov
cli
(bad)
ds
aas
imul
out
idiv
movs
(bad)
jmp
(bad)
jg
inc
jg
mul
sbb
aas
(bad)
(bad)
icebp
lahf
dec
xor
jnp
add
inc
dec
push
cmc
scas
inc
cmc
xchg
mov
pop
in
jmp
loope
clc
outs
(bad)
(bad)
repz
(bad)
aas
jle
jg
lock
dec
inc
retf
xchg
jmp
pop
retf
std
mov
push
inc
out
std
aas
(bad)
loopne
lock
push
pop
clc
jg
mov
jle
push
aas
cld
js
dec
dec
repnz
inc
call
stc
jg
xlat
jmp
jg
jmp
iret
xchg
popf
stc
(bad)
ret
(bad)
jmp
(bad)
das
mov
hlt
inc
dec
dec
(bad)
clc
loop
cli
stos
inc
pop
hlt
aas
inc
(bad)
aaa
(bad)
lahf
mov
std
pop
aas
and
cld
ud0
push
out
(bad)
std
daa
(bad)
mov
neg
pop
cld
sub
(bad)
aas
lock
mov
xlat
lahf
dec
push
bnd
mov
out
dec
mov
stos
jmp
out
cmc
mov
(bad)
clc
pop
(bad)
std
call
das
stc
add
leave
fistp
(bad)
std
mov
dec
dec
std
(bad)
(bad)
inc
pop
repz
dec
clc
(bad)
clc
mov
jmp
icebp
jg
daa
mov
jmp
push
(bad)
sar
aas
clc
dec
mov
mov
or
jmp
pop
cld
fistp
mov
int
cld
jmp
pop
test
out
inc
(bad)
(bad)
xchg
cld
pop
mov
lahf
dec
jecxz
jmp
jmp
sar
pop
cld
aas
jg
repnz
push
cld
test
xchg
repz
shr
mov
jg
jg
cdq
jmp
sub
sti
(bad)
cld
std
jg
in
dec
clc
out
inc
call
idiv
clc
push
(bad)
out
jg
push
icebp
pop
clc
out
pop
repnz
(bad)
fistp
cmc
not
mov
inc
icebp
out
std
fistp
adc
jg
das
jmp
cld
jg
cmp
dec
mov
adc
jle
pop
std
std
(bad)
jmp
cli
std
jmp
mov
jle
pop
icebp
inc
inc
call
das
stc
mov
call
jg
das
inc
or
dec
aas
mov
mov
(bad)
movs
xchg
jmp
iret
inc
(bad)
pop
and
in
inc
(bad)
fistp
scas
(bad)
(bad)
pop
cmc
mov
push
pop
cdq
aas
and
call
cld
aas
inc
(bad)
(bad)
jle
paddd
push
scas
cli
pop
jg
push
call
scas
cli
push
stc
cwde
push
mov
int3
mov
loope
out
mov
jle
lahf
clc
daa
rol
jmp
mov
jg
jg
fnsave
push
out
xlat
xchg
jmp
pop
mov
aad
dec
or
repnz
imul
int3
in
leave
das
std
mov
aaa
cli
xchg
inc
bnd
push
call
pop
clc
pop
xchg
jg
sub
out
jg
aas
cld
mov
cmps
mov
cmp
ret
aas
in
cld
add
(bad)
jmp
pop
cli
daa
std
inc
jmp
dec
cmp
(bad)
cld
sbb
xlat
fdivrp
xor
sti
clc
(bad)
cli
pop
jg
into
mov
(bad)
pop
jg
aas
clc
jg
call
outs
sti
jg
(bad)
(bad)
shr
push
std
pop
mov
std
jns
movs
pop
dec
cld
jnp
ret
cmps
(bad)
(bad)
cli
pop
clc
stos
jle
aas
lock
ja
xchg
mov
sub
fs
inc
in
cld
push
(bad)
cld
cmp
inc
(bad)
sti
pop
stc
das
jle
inc
repnz
cmp
jg
repnz
mov
popf
push
pop
sbb
outs
out
push
outs
hlt
push
std
add
(bad)
mov
aaa
(bad)
mov
imul
rcl
paddb
(bad)
xchg
aam
lahf
(bad)
mov
lock
pop
(bad)
out
jg
lahf
cld
pop
call
mov
pop
push
pop
fdivr
das
dec
inc
(bad)
out
jg
jg
xchg
mov
(bad)
(bad)
dec
pop
clc
jg
jmp
lock
stc
cmp
daa
test
mov
dec
jg
(bad)
in
cld
sar
jg
push
dec
outs
sti
jg
xchg
stc
jg
push
adc
cld
mov
inc
fstp
fnstcw
cmc
scas
std
lahf
(bad)
in
adc
ins
sub
clc
mov
(bad)
in
pop
sub
int
out
movs
test
lahf
stc
in
pop
inc
inc
stc
fild
pop
cli
sub
(bad)
(bad)
in
adc
cld
cmp
lock
in
dec
std
add
aas
(bad)
pop
dec
outs
jmp
xchg
jle
push
xor
inc
fmulp
pop
sti
jmp
addr16
mov
(bad)
push
lods
jmp
fwait
mov
fistp
(bad)
push
mov
daa
(bad)
cld
pop
dec
jle
out
dec
outs
(bad)
aas
clc
retf
inc
fcomip
pop
(bad)
sbb
addr16
(bad)
dec
jle
pop
clc
jg
dec
adc
push
xlat
(bad)
mov
(bad)
mov
idiv
cli
ja
ret
aas
jecxz
stc
idiv
(bad)
out
repnz
inc
push
aaa
inc
dec
push
(bad)
(bad)
das
jg
or
(bad)
jmp
sti
aas
cli
pop
pop
pop
call
push
pop
std
push
cld
ja
std
add
(bad)
jg
jmp
jmp
aas
dec
jmp
scas
jg
scas
cld
add
mov
nop
int3
fistp
cld
jg
push
or
hlt
paddb
mov
jle
fcomip
lahf
and
out
cld
push
(bad)
out
push
daa
fisub
jecxz
repnz
ds
fistp
jg
paddb
cmc
(bad)
sti
push
jl
(bad)
(bad)
(bad)
dec
std
push
mov
scas
std
cmp
jg
std
jg
aas
lock
std
pop
dec
call
jg
aas
sti
or
iret
cld
idiv
sti
popf
(bad)
mov
movs
jg
jg
jnp
stos
jg
shr
retf
pop
cld
pop
jg
aas
clc
jg
fwait
mov
out
scas
push
cwde
jmp
dec
(bad)
mov
jnp
outs
mov
(bad)
mov
(bad)
das
sti
cmp
loop
mov
clc
outs
std
pop
(bad)
fistp
inc
pop
(bad)
push
shr
mov
mov
repnz
cld
loop
jmp
clc
or
mov
mov
aas
inc
inc
pop
cld
jg
or
cld
movs
mov
inc
scas
mov
mov
mov
iret
leave
inc
mov
cmps
lock
std
pop
jg
lahf
clc
jg
and
out
cli
jg
mov
jg
sar
(bad)
push
and
repnz
mov
(bad)
(bad)
aas
aas
cmps
ja
stc
das
(bad)
aas
(bad)
xchg
(bad)
(bad)
cli
movaps
call
dec
icebp
das
std
outs
inc
pop
std
addr16
pop
jg
out
jmp
jle
push
std
aaa
inc
jg
ja
aas
aas
es
repz
(bad)
(bad)
lods
push
je
xchg
jo
mov
ret
(bad)
stc
aas
cld
aas
mov
lock
cs
xchg
xchg
jne
push
in
jecxz
std
fisttp
jle
scas
(bad)
jg
inc
xor
(bad)
out
pop
cmc
(bad)
(bad)
pop
jg
out
dec
jb
das
inc
movs
aaa
test
aas
jmp
sar
lock
cld
cmp
push
mov
call
(bad)
std
xchg
test
sar
jmp
fnstsw
lahf
cld
or
scas
aas
sbb
(bad)
mov
mov
jg
and
sub
dec
dec
std
xchg
jg
(bad)
dec
ror
cmp
jmp
mov
or
mov
cld
outs
dec
setle
fstp
(bad)
std
xlat
nop
and
dec
adc
cld
add
(bad)
fstp
paddd
(bad)
sti
dec
mov
jg
jg
jnp
outs
sar
sti
xchg
push
fs
call
jg
lahf
cld
add
out
xor
out
cld
pop
dec
test
idiv
fcomip
pop
stc
imul
loope
std
sub
xlat
fcomip
push
(bad)
jmp
mov
addr16
out
call
inc
xor
(bad)
std
iret
pop
cld
(bad)
in
cld
jg
das
push
(bad)
fdivr
bnd
(bad)
cld
aad
fstp
cmc
pop
cld
lahf
jg
(bad)
std
mov
jne
push
aas
inc
test
cld
lahf
jg
push
ja
aas
enter
call
fnstsw
mov
stc
jg
ja
loopne
(bad)
cmp
scas
aas
clc
mov
sub
hlt
xchg
(bad)
repnz
repnz
(bad)
jmp
std
std
push
mov
cs
imul
jg
outs
cld
jg
(bad)
mov
push
(bad)
cli
jg
out
mov
lock
das
cmc
aaa
push
push
ss
push
int3
jg
aas
dec
cmp
jg
aas
cld
idiv
iret
pop
test
pop
retf
aas
inc
(bad)
sti
(bad)
(bad)
clc
jae
leave
out
std
cs
sti
cmp
das
std
pop
dec
aas
lock
das
(bad)
out
stos
aas
lock
mov
das
dec
lahf
cli
jnp
lods
call
lahf
std
pop
(bad)
fistp
(bad)
out
call
cmp
stc
jg
xor
xlat
fcomip
aas
mov
std
lahf
jg
ud0
mov
push
pop
call
jmp
outs
cmc
xlat
dec
or
jmp
push
jnp
outs
jg
push
dec
dec
or
(bad)
push
(bad)
cld
mov
enter
cli
sbb
(bad)
dec
(bad)
out
mov
inc
pop
cmc
iret
(bad)
push
mov
imul
fucomi
cmc
jg
mov
jecxz
icebp
xlat
cld
idiv
idiv
paddd
mov
inc
pop
mov
jg
(bad)
sti
mov
out
(bad)
sti
dec
std
add
out
dec
cld
lahf
dec
push
iret
inc
jmp
cmp
mov
xchg
loopne
cli
outs
sti
sbb
out
int3
fild
adc
mov
jg
sub
aas
dec
aas
lock
sti
sbb
scas
jg
(bad)
(bad)
pop
(bad)
out
pop
std
loopne
stos
(bad)
out
mov
(bad)
ja
in
cmp
dec
aad
std
(bad)
adc
fsub
retf
daa
pmulhuw
shl
scas
(bad)
pop
cld
ins
push
fisttp
out
icebp
jg
jmp
aad
(bad)
clc
std
mov
sub
push
push
loope
and
(bad)
pop
jg
(bad)
std
sub
sbb
movs
mov
jle
aas
jo
jnp
or
dec
std
mov
in
clc
ret
jg
(bad)
jmp
stc
std
call
mov
jmp
ds
mov
mov
aas
pop
xchg
daa
stc
mov
neg
push
pop
push
test
aas
inc
mov
jg
mov
cmp
cli
std
call
(bad)
(bad)
cli
sub
out
jg
and
push
aas
(bad)
(bad)
mov
jle
aas
clc
pop
dec
add
scas
pop
call
das
clc
mov
(bad)
stc
fistp
fstp
(bad)
stc
call
dec
out
loopne
jmp
push
jg
push
pop
jle
xlat
inc
inc
aam
sti
jnp
outs
jg
(bad)
std
(bad)
inc
neg
paddd
out
std
aaa
cld
(bad)
rcl
cmp
push
fs
lds
mov
mov
idiv
cmp
call
call
or
gs
(bad)
(bad)
sti
aas
cli
pop
sub
adc
aas
dec
enter
int3
push
addr16
ja
std
aas
inc
(bad)
sti
das
cld
pop
call
retf
mov
jmp
xchg
(bad)
(bad)
out
lock
(bad)
out
mov
cmp
xchg
cmp
icebp
out
scas
dec
cld
retf
mov
(bad)
mov
dec
jmp
jg
out
bnd
xchg
dec
cld
pop
lock
mov
paddb
out
(bad)
cld
in
and
das
inc
mov
mov
cli
mov
aas
icebp
dec
dec
(bad)
out
jg
out
(bad)
mov
std
xchg
mov
jg
(bad)
xchg
(bad)
fild
pushf
(bad)
sti
das
cld
movq
sbb
(bad)
(bad)
in
(bad)
push
jg
jnp
test
jg
or
out
inc
jns
pop
icebp
jnp
pop
jg
dec
xchg
(bad)
das
sti
icebp
aas
in
dec
jle
(bad)
(bad)
cld
loop
das
std
cmp
fstp
jg
out
mov
jmp
jg
retf
jle
jne
loope
mov
jg
lahf
cld
mov
gs
scas
cli
dec
jg
addr16
mov
cmp
dec
mov
lods
push
(bad)
aas
cmps
push
aas
hlt
jnp
push
(bad)
sar
sti
out
dec
sbb
(bad)
cld
imul
aas
repz
aas
cmc
(bad)
cli
paddd
(bad)
jmp
(bad)
push
pop
std
push
jmp
mov
in
(bad)
jg
scas
jg
push
pop
inc
mov
(bad)
cmp
jg
(bad)
pushf
cmps
(bad)
in
(bad)
(bad)
fistp
push
adc
repz
repz
adc
mov
mov
sar
cmp
loope
(bad)
cdq
out
cld
and
mov
std
int3
lahf
cld
sti
jmp
idiv
(bad)
mov
out
mov
ud0
jg
mul
add
(bad)
outs
sti
mov
sbb
adc
aas
mov
mov
imul
cld
add
sar
cmc
(bad)
(bad)
aas
das
dec
(bad)
inc
pop
jge
jg
pusha
(bad)
fistp
push
aas
dec
es
pop
inc
out
test
mov
cld
(bad)
(bad)
das
sub
cli
aas
cld
(bad)
push
jg
sbb
jge
(bad)
clc
aaa
inc
(bad)
(bad)
jg
lahf
jg
push
(bad)
cli
pop
push
(bad)
(bad)
ja
aas
(bad)
fdivr
arpl
inc
sub
(bad)
mov
cld
daa
(bad)
fild
push
xchg
dec
stc
(bad)
out
push
or
outs
inc
jg
paddb
vcomisd
push
shr
out
sar
mov
gs
ret
mov
dec
div
clc
in
retf
jecxz
jmp
aas
clc
dec
(bad)
jp
(bad)
(bad)
scas
mov
paddd
pop
(bad)
lahf
mov
(bad)
jns
push
push
jg
dec
inc
add
cmc
call
sub
(bad)
cli
(bad)
stc
jg
jg
cld
push
dec
std
pop
jg
push
dec
inc
cli
scas
xchg
adc
lahf
(bad)
out
push
mov
pop
mov
push
xor
pop
movs
lods
hlt
mov
sti
or
iret
jg
paddb
hlt
mov
(bad)
fcomip
jmp
scas
mov
call
aas
in
mov
aas
idiv
(bad)
mov
jg
std
(bad)
std
push
or
pop
std
adc
xchg
ret
iret
inc
enter
inc
mov
scas
inc
dec
pop
push
jg
push
repz
std
push
jmp
sub
call
stos
mov
jg
pop
push
std
push
repnz
jecxz
cld
pop
jle
mov
xchg
(bad)
fdivrp
out
mov
jle
test
adc
(bad)
(bad)
pop
fdivr
aas
repnz
lock
imul
push
pop
movs
adc
mov
add
jg
adc
imul
mov
sti
pop
sti
cmp
(bad)
jle
das
cmc
aaa
std
sub
loopne
jmp
sti
movq
pop
clc
jg
rcl
aas
dec
fdivp
pop
repz
cmps
jmp
sub
adc
pop
jg
sub
shl
scas
and
(bad)
repz
pop
icebp
push
xchg
movs
(bad)
stos
mov
stc
mov
(bad)
cld
push
(bad)
sar
nop
pushf
mov
retf
(bad)
out
(bad)
std
iret
cld
aas
call
(bad)
(bad)
cld
sbb
iret
inc
jmp
pop
enter
mov
push
mov
jg
aas
(bad)
out
aas
call
mov
mov
sti
jne
cmp
pop
clc
aas
jg
mov
(bad)
cmp
idiv
je
push
shr
sti
mov
pop
push
out
icebp
(bad)
add
mov
aas
(bad)
fbstp
xchg
push
or
js
call
(bad)
pop
cmc
sti
cld
out
mov
xchg
dec
mov
(bad)
mov
std
pop
jg
das
push
(bad)
cmp
test
push
jmp
fstp
lock
mov
aad
clc
jg
stc
jg
ud0
(bad)
std
paddd
(bad)
cmp
push
fwait
push
fdivr
aas
push
inc
jmp
jo
cmps
jg
aas
(bad)
aas
jle
std
ja
cmp
push
jmp
mov
in
pop
dec
test
(bad)
aas
jle
jb
inc
std
(bad)
sar
pop
xchg
dec
sti
lahf
jg
pop
lods
daa
test
stos
call
inc
xlat
(bad)
stc
mov
and
xchg
xchg
cli
jne
imul
sub
jge
imul
aas
stc
aas
cld
ret
(bad)
mov
into
pop
bnd
add
mov
jnp
das
mov
jmp
jg
aaa
std
pop
idiv
lahf
cli
or
aas
in
stc
fistp
jmp
jg
cdq
jg
lahf
cli
out
test
dec
out
cld
repnz
imul
clc
pop
call
sbb
scas
dec
lea
or
xlat
(bad)
push
push
cmp
iret
das
inc
push
ja
mov
cmps
(bad)
mov
lahf
xor
das
sti
cmp
iret
jg
bound
repnz
enter
or
push
adc
inc
xchg
dec
aaa
mov
inc
(bad)
jmp
cld
repnz
(bad)
pop
(bad)
jmp
mov
(bad)
out
(bad)
in
ja
mov
out
push
arpl
sub
dec
adc
repz
scas
std
pop
dec
aaa
mov
clc
jmp
(bad)
(bad)
aaa
jg
jmp
push
(bad)
fistp
cli
cmp
sti
pop
dec
call
(bad)
sti
jg
xlat
jmp
mov
xchg
push
idiv
sar
movs
sbb
icebp
jg
pop
inc
jle
sti
(bad)
cld
paddb
inc
(bad)
jg
(bad)
fnstsw
aaa
(bad)
aas
pop
push
pop
cld
sti
shl
sti
adc
or
bnd
nop
adc
pop
pop
std
lahf
in
push
push
jmp
(bad)
mov
xchg
std
push
call
aas
std
(bad)
(bad)
mov
cld
in
pop
cld
outs
inc
mov
dec
mov
xlat
out
inc
cmp
iret
cld
iret
popa
clc
mov
lock
movs
jne
push
scas
stc
add
cmps
pop
dec
fdivr
out
inc
fisttp
(bad)
out
jg
mul
mov
out
out
hlt
lahf
cld
(bad)
jmp
das
mov
jg
mov
pop
sti
xlat
jg
scas
clc
dec
mov
push
lahf
clc
stos
out
inc
sti
dec
dec
(bad)
inc
das
clc
jmp
ret
inc
sub
das
lds
mov
jg
(bad)
jmp
cmps
outs
jle
loope
stc
(bad)
pop
(bad)
fist
in
push
or
paddd
call
(bad)
std
mov
aas
hlt
jg
push
(bad)
fstp
sti
jg
sti
jg
(bad)
std
sub
cmp
push
inc
push
pop
cmp
adc
neg
hlt
aaa
movs
adc
(bad)
cld
(bad)
in
jg
ret
jmp
movs
in
mov
sbb
(bad)
sti
(bad)
pop
jg
cmp
pop
stc
pop
jg
lahf
stc
dec
inc
(bad)
in
pop
inc
jmp
jg
in
out
(bad)
xchg
inc
pop
add
out
cld
mov
scas
fsqrt
sub
jg
in
sti
mov
scas
cld
ud0
aas
lock
(bad)
lahf
mov
jmp
pop
inc
rcr
cli
jmp
pop
aas
cli
aad
out
cmc
iret
(bad)
(bad)
push
cld
jmp
mov
cmps
push
(bad)
paddd
or
or
and
daa
jle
(bad)
jmp
(bad)
aas
enter
jg
mov
loopne
mov
push
(bad)
std
aas
(bad)
jne
std
fistp
dec
iret
dec
inc
(bad)
and
dec
mov
jg
das
clc
mov
pop
ret
pop
clc
pop
(bad)
xlat
mov
jg
out
cld
add
lods
paddw
cmp
(bad)
mov
jg
(bad)
std
pop
jmp
movs
mov
inc
(bad)
mov
inc
pop
(bad)
outs
mov
push
xchg
in
jg
paddb
inc
sbb
jecxz
dec
or
(bad)
popf
push
aas
add
pop
stc
pop
cld
and
cli
sbb
call
mov
push
push
scas
push
cmp
dec
(bad)
jmp
sti
scas
inc
jmp
mov
(bad)
push
cld
cmp
jmp
and
jmp
(bad)
std
cmp
dec
std
dec
or
(bad)
rcr
in
sti
ins
jmp
mov
idiv
cld
push
inc
(bad)
dec
cld
aas
jle
xchg
test
jmp
or
das
dec
call
inc
jg
(bad)
(bad)
pop
(bad)
fistp
out
(bad)
mov
imul
(bad)
cmps
(bad)
sti
(bad)
cmp
mov
das
cld
xchg
jg
push
sbb
ins
call
scas
(bad)
ja
pop
and
jg
pop
sti
paddb
jmp
jg
jg
inc
inc
stc
lahf
stc
mov
das
jg
aas
clc
mov
(bad)
cli
mov
out
bnd
scas
jg
jg
lahf
cld
push
jmp
add
cld
xchg
(bad)
xchg
mov
pop
lods
jp
cmp
(bad)
jg
pop
(bad)
sbb
idiv
repnz
pop
idiv
call
dec
clc
ud0
jmp
idiv
aad
adc
push
mov
cld
aas
mov
out
(bad)
call
jbe
ss
fcomip
stos
dec
(bad)
jmp
daa
dec
cld
aas
jle
aas
lock
idiv
and
fdiv
fild
loopne
inc
mov
(bad)
push
mov
dec
inc
repz
std
out
dec
mov
test
jecxz
cld
add
fnstcw
or
jg
sti
push
fdiv
ja
xchg
jmp
xchg
aas
dec
and
jne
jg
inc
fbld
cmps
stos
(bad)
out
(bad)
(bad)
aas
cld
pop
(bad)
fnstsw
jg
or
aaa
inc
cmp
call
scas
cld
fistp
pop
cli
stos
(bad)
out
addr16
cmps
pop
cld
cld
paddb
sti
lahf
jg
jg
repnz
out
idiv
pop
dec
jg
dec
cli
sub
out
mov
jle
call
jmp
das
std
aas
(bad)
out
(bad)
jmp
inc
inc
jbe
out
aas
xor
mov
mov
add
in
cmp
cld
mov
std
aas
cld
fist
adc
std
stos
jmp
(bad)
(bad)
(bad)
out
jmp
out
cli
xchg
in
sar
ret
sub
sar
stc
rsqrtps
jle
jns
aas
lock
daa
out
jmp
pop
mov
out
cld
pop
in
std
(bad)
pop
mov
cld
mov
(bad)
inc
ret
inc
std
mov
lock
dec
dec
dec
jmp
cli
out
das
stc
pop
scas
jle
mov
cld
addr16
(bad)
stc
aas
cld
mov
mov
paddd
stos
call
cmp
cmp
(bad)
stc
daa
inc
xchg
retf
sub
repz
mov
sti
icebp
pop
clc
out
cld
push
mov
jmp
out
(bad)
mov
fisttp
mov
cmc
aas
xchg
(bad)
stc
iret
inc
push
jg
std
das
jmp
sbb
cld
mov
out
or
mov
push
pop
(bad)
jmp
inc
dec
jge
(bad)
adc
cmc
push
outs
cld
push
lahf
std
sar
div
daa
popf
(bad)
jg
(bad)
(bad)
pop
sbb
jg
sti
push
xor
(bad)
out
sub
stos
dec
mov
add
(bad)
jmp
(bad)
out
xchg
jae
paddd
and
push
sub
mov
jg
outs
clc
(bad)
sar
out
cld
pop
jmp
pop
mov
pop
jmp
(bad)
jmp
retf
pop
cli
paddd
jg
jg
jb
paddd
dec
in
cld
mov
sti
push
push
dec
jecxz
sti
pop
xchg
mov
std
retf
mov
jmp
daa
call
pop
inc
cmps
clc
(bad)
(bad)
lahf
leave
cmc
cli
sub
fistp
(bad)
(bad)
imul
dec
push
pop
cld
fistp
push
jg
fistp
scas
xchg
aas
xchg
cmps
xchg
and
push
xchg
dec
popa
int
scas
and
cmp
idiv
aas
dec
icebp
jmp
out
repnz
mov
in
inc
test
mov
pop
(bad)
stc
jg
lahf
(bad)
push
(bad)
les
aam
aas
clc
pop
(bad)
mov
and
paddd
stc
sti
xchg
retf
stc
(bad)
or
pop
std
push
mov
(bad)
fs
fbld
call
cmp
jnp
scas
jg
lods
jnp
retf
(bad)
cld
add
or
push
(bad)
dec
(bad)
pop
(bad)
fdivr
std
(bad)
cmp
jns
jg
das
jmp
xchg
xor
(bad)
sti
push
inc
jle
pop
stc
inc
xchg
(bad)
outs
jg
inc
pop
jmp
(bad)
std
pop
std
retf
jg
mov
fadd
pop
(bad)
std
(bad)
cld
das
movs
aad
pop
lock
outs
and
jmp
lahf
lock
(bad)
mov
sti
lahf
das
(bad)
aam
sti
xchg
std
(bad)
jg
inc
cmp
(bad)
jge
jmp
pop
jle
xchg
nop
(bad)
sti
idiv
iret
das
enter
jg
(bad)
xchg
xchg
loope
sti
cmps
cld
xlat
mov
(bad)
cld
pop
(bad)
in
std
out
push
mov
inc
(bad)
jnp
jg
jbe
call
jg
mov
xlat
nop
out
aas
jg
jg
out
(bad)
aas
(bad)
sub
sar
loopne
repnz
(bad)
fistp
xchg
xor
dec
(bad)
pop
and
mov
stc
iret
std
mov
aas
movs
clc
cli
(bad)
cli
inc
inc
jg
pop
cld
push
jmp
jg
daa
(bad)
push
push
xchg
call
scas
dec
outs
call
mov
dec
out
icebp
jg
xchg
sti
jg
add
mov
cld
das
push
jecxz
jmp
push
loopne
cld
cmp
pop
clc
outs
(bad)
mov
(bad)
cmp
pop
jmp
icebp
mov
lahf
test
div
(bad)
fistp
icebp
paddb
mov
cld
mov
pop
and
inc
pop
mov
jecxz
stc
cmp
jnp
call
inc
(bad)
jmp
cld
outs
jle
jp
push
adc
(bad)
clc
jg
lea
fcomip
mov
dec
(bad)
jg
ins
jg
call
mov
(bad)
cli
xchg
rcr
(bad)
fistp
test
mov
sar
or
(bad)
stc
(bad)
cld
(bad)
xchg
mov
in
lahf
cld
aas
sub
add
mov
jg
jg
iret
cld
pop
jg
push
hlt
(bad)
add
xor
dec
cld
pop
jg
(bad)
std
sar
inc
idiv
icebp
das
sti
mov
out
popf
fcomip
jg
addr16
(bad)
mov
inc
dec
out
(bad)
jg
dec
push
inc
mov
mov
mov
jg
sar
push
xlat
adc
std
test
idiv
inc
mov
scas
cld
aad
and
sti
dec
jg
repnz
cld
aas
(bad)
(bad)
jg
pop
inc
jg
iret
push
jg
pop
sti
jnp
xchg
jmp
retf
(bad)
xchg
std
out
push
in
(bad)
jmp
(bad)
(bad)
jg
push
into
(bad)
sti
jg
(bad)
gs
push
pop
(bad)
mov
dec
rcl
(bad)
out
pop
hlt
aas
jle
(bad)
cld
xchg
push
inc
mov
gs
(bad)
popf
jg
mov
pop
icebp
xlat
inc
stos
dec
(bad)
sti
dec
inc
jg
outs
cli
jg
div
(bad)
ror
mov
jg
pop
jg
(bad)
jmp
stc
std
jg
iret
(bad)
in
(bad)
cli
sti
jg
mov
pop
(bad)
cmps
ja
neg
dec
jg
mov
jmp
jg
ud0
push
push
push
sub
inc
in
aas
dec
imul
icebp
mov
std
jg
jbe
mov
call
cmps
jle
(bad)
sti
jmp
(bad)
std
inc
ins
(bad)
out
jg
(bad)
cld
mov
addr16
push
jb
dec
mov
inc
jg
jg
pop
aas
ds
aas
jle
(bad)
jmp
pusha
sar
dec
jmp
inc
jg
jg
push
push
pop
mov
mov
jg
jg
jg
std
test
sbb
xchg
cmps
(bad)
(bad)
xchg
sub
mov
mov
(bad)
cld
mov
push
dec
push
iret
cld
das
lahf
xchg
push
sti
das
(bad)
out
pop
(bad)
lahf
call
mov
(bad)
scas
push
pop
cld
mov
(bad)
(bad)
cmp
mov
enter
jg
(bad)
xor
pop
stc
outs
(bad)
ins
lahf
(bad)
out
mov
mov
jg
jg
pop
xchg
mov
cld
xor
jmp
jg
outs
push
mov
(bad)
jmp
jns
and
push
std
popf
inc
out
(bad)
jg
mov
jg
mov
stc
aas
cld
aad
in
push
outs
cld
cmp
(bad)
cmp
idiv
pop
dec
mov
xchg
or
stc
jmp
scas
es
cwde
jb
(bad)
fsubr
(bad)
aas
std
push
dec
jg
(bad)
std
lahf
xchg
xchg
clc
aas
dec
dec
not
out
std
pop
dec
push
jg
mov
ja
sar
pop
cld
lahf
aas
(bad)
std
(bad)
out
jae
idiv
mov
idiv
lahf
jle
mov
jmp
out
scas
jle
fstp
(bad)
jmp
mov
(bad)
out
aas
repz
(bad)
mov
mov
xlat
dec
mov
fistp
dec
cli
jmp
cld
cmc
dec
pop
sub
cli
out
(bad)
fisubr
push
sti
sar
adc
jge
push
inc
(bad)
stc
xchg
(bad)
fistp
jg
jg
cmps
inc
pop
stc
pop
(bad)
cdq
in
ds
mov
cld
mov
aas
stc
pop
(bad)
push
aaa
mov
stc
pop
xchg
pop
dec
out
loope
cli
aaa
(bad)
push
repnz
dec
das
inc
jmp
das
cld
aas
jg
pop
idiv
and
dec
mov
mov
(bad)
stc
push
daa
xchg
retf
icebp
mov
stos
jg
cli
push
(bad)
pop
push
(bad)
std
sub
(bad)
out
jg
dec
cld
cmp
jg
jmp
imul
cli
xchg
mov
xchg
pop
dec
cmp
cmp
fistp
mov
jg
retf
xlat
scas
std
pop
(bad)
cmc
mov
(bad)
gs
jg
addr16
sar
jmp
cld
aas
dec
(bad)
sti
ficomp
std
ud0
jg
(bad)
(bad)
xchg
(bad)
fist
repz
dec
cli
lahf
movs
aad
aas
jmp
add
(bad)
(bad)
mov
(bad)
out
(bad)
sti
mov
fist
out
inc
push
bnd
add
out
jecxz
clc
pop
jmp
out
jg
(bad)
sti
out
pop
clc
scas
inc
ud0
in
movs
(bad)
(bad)
mov
hlt
aas
jmp
dec
xor
scas
(bad)
jg
push
push
lahf
call
jl
dec
jmp
(bad)
sti
push
mov
fild
mov
aas
(bad)
cmp
mov
(bad)
mov
sar
sti
aas
stc
pop
call
retf
test
pop
(bad)
out
mov
jg
pop
sub
dec
sub
jg
paddb
(bad)
(bad)
mov
idiv
lahf
cs
out
out
(bad)
(bad)
into
jg
cmp
pop
cmc
sti
adc
cld
mov
in
outs
dec
stc
cld
(bad)
std
add
lods
sar
(bad)
inc
jg
clc
jmp
mov
push
lahf
jg
cmp
shr
cli
addr16
out
jmp
cld
dec
(bad)
mov
(bad)
(bad)
aas
(bad)
sar
div
clc
aas
sub
cld
das
cld
push
jg
push
paddb
inc
mov
test
stc
(bad)
fwait
cld
pop
inc
add
aas
sti
iret
sti
std
jmp
(bad)
stc
(bad)
mov
test
(bad)
jmp
dec
fs
aad
(bad)
push
push
(bad)
lahf
jg
fist
retf
xor
scas
ror
repz
add
aas
(bad)
(bad)
jle
push
jg
das
cld
jmp
clc
aas
cld
lahf
jle
(bad)
sti
iret
cld
mov
or
mov
push
dec
ret
jg
jg
cmp
pop
cld
jge
fwait
cli
ja
(bad)
(bad)
stc
pop
cld
aas
jmp
scas
cld
std
jg
outs
cli
xchg
std
mov
pop
movs
lods
jg
inc
es
(bad)
clc
jae
pop
and
stc
das
cld
pop
pop
dec
or
loope
cmc
(bad)
(bad)
push
mov
and
movs
aam
pop
dec
out
dec
cmp
mov
pop
out
jg
mov
(bad)
clc
cmp
out
(bad)
fistp
sar
clc
daa
(bad)
(bad)
push
out
(bad)
std
iret
dec
hlt
mov
(bad)
stos
(bad)
repnz
lahf
stc
mov
jg
movq
(bad)
jmp
rol
ja
pop
mov
jg
(bad)
std
out
(bad)
push
in
std
les
clc
lahf
std
(bad)
(bad)
fist
cmps
hlt
aas
clc
ud0
jne
test
lock
(bad)
adc
aas
(bad)
das
jg
push
arpl
cmc
test
inc
pop
icebp
aaa
mov
aas
clc
imul
mov
stc
pop
dec
std
pop
(bad)
(bad)
jg
jmp
stc
aas
cmps
mov
in
push
ud0
jmp
push
adc
neg
lock
xchg
retf
inc
inc
push
retf
jmp
(bad)
std
icebp
pop
clc
sub
inc
aas
xchg
sbb
aaa
inc
mov
(bad)
sti
outs
(bad)
std
jg
(bad)
std
pop
cld
jmp
add
jb
(bad)
icebp
(bad)
sti
jg
cld
(bad)
clc
pop
(bad)
out
ret
xor
(bad)
std
outs
dec
pop
(bad)
lahf
dec
(bad)
std
retf
sub
sti
mov
jg
push
out
xchg
std
cs
(bad)
lock
fnstsw
xchg
cmp
jle
aas
jne
(bad)
aad
imul
clc
or
adc
mov
xor
(bad)
(bad)
sti
(bad)
cmps
sub
aas
sti
jg
fcos
loop
cmc
das
(bad)
idiv
idiv
cli
in
idiv
(bad)
std
in
cli
repnz
(bad)
push
jle
(bad)
jmp
in
clc
xor
(bad)
fcomp
or
jnp
outs
dec
gs
xchg
jg
fcomip
stos
jle
pop
cli
(bad)
(bad)
xchg
push
jg
neg
std
addr16
cdq
mov
sub
aas
inc
shr
paddb
(bad)
out
pop
icebp
fwait
xchg
xchg
cli
outs
mov
aad
(bad)
jg
adc
push
jnp
jne
cmps
out
inc
mov
cld
outs
jle
pop
cmc
inc
(bad)
std
call
xlat
dec
jl
fild
retf
xchg
test
(bad)
jg
pop
dec
aas
(bad)
mov
cmc
jg
pop
mov
loopne
stc
aas
call
pop
dec
aad
loop
std
mov
dec
hlt
call
pop
or
jmp
out
inc
xor
fild
fdivr
pop
cld
push
mov
call
clc
pop
clc
mov
repz
lahf
ds
aas
call
aas
nop
in
pop
cld
push
retf
(bad)
cld
mov
push
mov
jno
pop
inc
loop
pop
cli
jg
repnz
fcomip
ja
jae
out
jg
mov
cmc
scas
dec
pop
out
stc
dec
cld
retf
repnz
xlat
cli
aas
enter
sti
adc
sub
push
sti
mov
dec
cld
aas
jmp
jg
jg
pop
jle
aas
stc
outs
cld
(bad)
pop
dec
test
cmp
in
stos
aas
jmp
inc
jg
(bad)
and
fistp
cli
jns
out
cld
dec
mov
push
mov
(bad)
(bad)
ficomp
clc
inc
(bad)
mov
in
std
xor
jmp
push
(bad)
paddb
(bad)
jg
bnd
repz
push
std
(bad)
inc
pop
stc
dec
std
mov
jg
xchg
(bad)
out
pop
clc
aas
std
cmp
lds
jg
pop
(bad)
std
pop
cld
jg
cld
pop
cld
jmp
jmp
(bad)
jmp
sti
mov
ficomp
(bad)
out
mov
push
jg
scas
inc
(bad)
out
out
aad
stc
add
push
jb
jle
idiv
mov
dec
dec
fcos
cli
pop
(bad)
lahf
mov
pop
jg
aas
cld
pop
(bad)
scas
(bad)
push
(bad)
xchg
pop
cmc
retf
sub
lahf
jle
jb
(bad)
fdivrp
sti
jg
xchg
mov
stc
aad
jmp
(bad)
(bad)
jmp
repnz
(bad)
sti
(bad)
jmp
inc
push
jmp
pop
xchg
cld
out
jg
fucomip
idiv
aas
(bad)
(bad)
(bad)
(bad)
push
xchg
in
mov
out
bnd
xchg
outs
mov
(bad)
out
(bad)
jmp
aas
nop
cmp
in
cld
in
in
paddd
and
push
aas
repnz
(bad)
addr16
aam
xchg
jg
das
mov
iret
inc
(bad)
call
(bad)
jp
jg
jne
(bad)
ror
mov
push
call
add
(bad)
mov
repnz
cli
idiv
inc
shl
jg
jmp
fimul
outs
mov
(bad)
out
push
(bad)
mov
(bad)
cld
pop
mov
xchg
aas
cli
paddb
paddb
call
or
cs
scas
aas
clc
pop
movs
cld
fisubr
sti
cmp
loopne
js
jp
movs
xor
pop
push
mov
es
mov
push
jmp
iret
cld
btr
cmc
push
push
jp
pop
stc
mov
fisttp
icebp
mov
jg
pop
adc
aas
cmps
jg
xor
pop
(bad)
out
inc
(bad)
das
test
in
jg
(bad)
std
aas
inc
mov
mov
jg
scas
cli
(bad)
out
pop
adc
mov
(bad)
call
retf
(bad)
std
popf
aas
data16
jg
and
test
out
mov
mov
(bad)
jmp
jg
idiv
cs
jg
pop
(bad)
pop
jg
out
jmp
(bad)
jg
(bad)
(bad)
mov
pop
jge
jg
fld
(bad)
cld
cmp
cld
inc
fnstcw
cmovns
(bad)
mov
out
icebp
pop
cld
or
mov
inc
dec
imul
ret
(bad)
sti
paddd
dec
jg
(bad)
(bad)
pop
jg
ja
retf
pop
dec
sub
leave
inc
std
daa
dec
shl
jg
(bad)
cld
std
jmp
out
pop
clc
mov
jg
fisttp
(bad)
(bad)
iret
aas
lock
dec
call
jg
(bad)
cli
sub
xlat
jle
(bad)
jmp
stc
mov
or
lahf
icebp
jg
dec
nop
mov
lahf
sti
jg
icebp
jmp
leave
clc
aas
jl
jg
loop
cli
(bad)
(bad)
jl
imul
out
(bad)
(bad)
imul
jecxz
clc
add
(bad)
std
sub
loope
clc
fistp
mov
shr
inc
mov
(bad)
(bad)
adc
pop
(bad)
ins
(bad)
jg
push
pop
(bad)
push
or
pop
clc
jg
fst
push
cmps
in
movs
mov
idiv
push
imul
repnz
jmp
popf
jg
lods
aam
hlt
jg
push
push
push
(bad)
fbld
jmp
(bad)
(bad)
outs
inc
pop
std
jg
cmp
dec
push
mov
std
(bad)
popf
jmp
aas
clc
jg
fnsetpm(287
adc
pop
fs
jg
ja
cld
scas
cld
mov
xchg
std
cmps
adc
cld
addr16
push
std
fistp
jg
mov
push
(bad)
(bad)
scas
mov
mov
jmp
idiv
pop
std
pop
mov
arpl
mov
mov
cmp
mov
mov
jmp
xchg
(bad)
cmp
shl
mov
pusha
(bad)
out
mov
repz
jg
push
imul
jg
das
(bad)
clc
(bad)
cli
dec
inc
(bad)
jmp
lahf
stc
icebp
(bad)
jmp
mov
clc
addr16
and
retf
xchg
out
pop
stc
jg
mov
dec
push
pop
(bad)
push
(bad)
fcmovnu
clc
dec
jmp
aas
lock
jnp
call
inc
aas
dec
inc
leave
daa
dec
mov
push
loopne
and
mov
not
(bad)
std
cli
jmp
push
outs
(bad)
fistp
movs
popa
nop
aad
movs
cmc
mov
mov
std
(bad)
sti
jg
pop
dec
movs
jae
xchg
push
jg
pop
dec
xchg
inc
jg
ja
push
scas
xchg
cli
addr16
outs
sahf
dec
fcomip
(bad)
clc
(bad)
pop
clc
arpl
jg
(bad)
stc
fwait
push
adc
das
cld
movs
mov
and
mov
pop
xor
mov
std
retf
jle
(bad)
jmp
cld
cmp
iret
stc
cmp
push
jmp
push
aas
std
out
inc
lds
into
les
pop
stc
mov
test
cmp
neg
jmp
mov
test
lock
(bad)
idiv
inc
(bad)
in
add
hlt
aas
(bad)
aaa
(bad)
out
(bad)
cmp
ficom
(bad)
(bad)
jmp
es
jg
mov
hlt
pop
cld
pop
mov
push
(bad)
(bad)
pop
jle
jg
push
div
(bad)
aad
sti
pop
stc
pop
mov
sub
(bad)
(bad)
imul
cmp
scas
cli
sbb
iret
aas
loope
sti
out
mov
fnstcw
jg
mov
loopne
stc
pop
(bad)
das
aad
std
push
xchg
push
cld
iret
pop
pop
push
mov
addr16
push
push
(bad)
in
jnp
hlt
(bad)
(bad)
std
scas
jg
scas
(bad)
jg
(bad)
jmp
cwde
dec
loopne
inc
clc
pop
call
repz
push
dec
stc
scas
std
pop
(bad)
fnstcw
imul
call
lock
mov
retf
inc
(bad)
(bad)
fstp
clc
pop
(bad)
mov
(bad)
jg
std
lahf
xchg
jg
xor
scas
mov
sub
hlt
jg
test
scas
(bad)
xlat
jmp
xor
sub
(bad)
jmp
scas
cli
cld
(bad)
cli
xor
lock
jmp
sti
sub
jg
jmp
loopne
fdivr
ja
out
aas
sti
pop
cld
dec
jle
pop
cmc
jmp
inc
mov
mov
jg
push
pop
cld
aas
jg
pop
sbb
out
inc
or
mov
scas
mov
test
inc
rcl
jecxz
call
out
std
pop
retf
(bad)
sti
jg
pop
jmp
(bad)
paddb
jg
mov
inc
mov
xchg
std
cmp
call
(bad)
jmp
xchg
jne
(bad)
movq
jg
sti
mov
out
inc
leave
jmp
cmp
addr16
cmp
ret
(bad)
sti
(bad)
outs
inc
(bad)
clc
mov
sbb
xchg
jg
(bad)
std
lahf
cld
xor
sbb
out
aas
clc
dec
(bad)
jecxz
jmp
inc
jmp
lds
retf
out
(bad)
jg
adc
dec
(bad)
sti
out
cmps
shl
lahf
inc
add
sti
push
mov
mov
pop
cli
pop
(bad)
ja
jecxz
div
(bad)
pop
call
out
(bad)
aas
jmp
jg
das
jmp
(bad)
cli
dec
inc
mov
mov
icebp
scas
cmp
sub
inc
push
xchg
pop
push
call
sub
(bad)
(bad)
in
pop
clc
stos
dec
popf
(bad)
sti
ja
fistp
mov
xchg
inc
(bad)
pushf
ret
mov
std
cmp
retf
std
pop
push
jg
(bad)
clc
or
leave
(bad)
std
sti
push
mov
stc
ud0
sar
cli
jae
out
pop
cmc
mov
in
pop
push
jg
pop
dec
adc
(bad)
out
mov
(bad)
fcomp
jg
ja
in
pop
cld
scas
inc
pop
repnz
sar
(bad)
cld
mov
cld
sar
(bad)
(bad)
lahf
jg
and
std
dec
out
adc
enter
push
inc
mov
jg
pop
(bad)
lahf
jmp
push
scas
cld
cmp
in
lahf
mov
mov
xor
mov
aas
std
imul
jg
das
push
push
cmp
cmp
pop
daa
jne
imul
(bad)
pop
cmc
sub
mov
and
scas
(bad)
out
addr16
imul
fist
dec
dec
(bad)
sti
mov
(bad)
call
pop
js
xor
jns
mov
jns
push
std
in
jg
sub
loopne
cld
das
add
and
dec
sub
mov
call
call
jg
jg
gs
into
(bad)
sti
ja
mov
in
aas
jmp
cld
repnz
dec
jmp
mov
push
outs
std
add
mov
(bad)
cld
cmp
push
(bad)
out
mov
(bad)
out
(bad)
std
mul
in
fist
(bad)
push
aas
(bad)
in
cli
lahf
sti
daa
fdivrp
pop
(bad)
scas
fucomip
paddb
dec
(bad)
sti
ud0
jmp
dec
stos
jmp
aas
cld
mov
fwait
ds
sub
jg
iret
cld
sbb
int3
adc
std
test
cld
(bad)
(bad)
mov
(bad)
out
mov
out
and
jg
pop
std
(bad)
mov
sti
xchg
or
xlat
cld
push
adc
std
stc
call
(bad)
(bad)
mov
mov
in
inc
jg
jg
ins
inc
mov
mov
lds
dec
hlt
push
inc
(bad)
idiv
aas
(bad)
loope
sti
jg
jnp
(bad)
mov
jg
(bad)
clc
jg
clc
movs
xchg
push
mov
clc
addr16
out
jg
lahf
(bad)
mov
cmp
fisttp
(bad)
mov
cld
(bad)
jg
(bad)
cli
inc
inc
mov
out
adc
push
dec
jle
pop
(bad)
pop
(bad)
pop
xchg
int3
std
sbb
neg
idiv
jle
xlat
std
outs
jmp
out
sbb
das
pop
std
cld
pushf
pop
mov
cmp
(bad)
clc
imul
lds
sar
sti
(bad)
or
jg
out
cmc
stos
dec
(bad)
call
aas
mov
aas
clc
mov
outs
hlt
iret
jmp
jecxz
sti
sub
out
cld
outs
push
mov
imul
xor
pop
sti
pop
dec
pop
xchg
lods
std
ins
push
pop
lock
jmp
push
(bad)
(bad)
outs
call
aas
lock
sar
sti
pop
cmps
outs
(bad)
div
fdecstp
das
std
in
xlat
mov
mov
aas
jmp
das
(bad)
(bad)
(bad)
jmp
call
(bad)
test
repz
pop
aas
stc
fistp
repnz
push
adc
(bad)
mov
aas
cli
pop
xchg
or
mov
lock
std
cmp
(bad)
clc
dec
dec
je
scas
pop
stc
jg
lahf
jo
jle
pop
std
add
pop
jmp
das
std
xor
jg
push
sub
pop
cld
and
aam
std
pop
push
shr
mov
jmp
clc
mov
out
(bad)
inc
mov
iret
das
push
jg
pop
cld
mov
jnp
fistp
dec
cwde
(bad)
(bad)
cli
pop
jg
pop
icebp
jg
cmp
call
gs
in
aas
clc
jg
sbb
xchg
(bad)
mov
in
pop
cld
mov
adc
cld
fistp
iret
cld
iret
jg
(bad)
stc
xchg
cld
(bad)
aad
jg
push
das
cld
mov
jo
adc
cwde
jg
psubd
jg
pop
clc
stos
inc
xlat
xchg
in
inc
(bad)
push
jnp
mov
pop
icebp
(bad)
(bad)
sar
mov
jmp
and
inc
in
sti
paddd
rol
addr16
out
jmp
jno
shr
idiv
clc
or
lock
clc
das
or
retf
fs
scas
aas
not
cmp
(bad)
clc
pop
dec
xor
push
(bad)
sti
das
std
pop
(bad)
in
fild
or
pop
mov
ja
mov
(bad)
(bad)
jg
sbb
clc
mov
sti
mov
jg
cli
mov
sub
lock
fistp
sub
cmp
sar
(bad)
aad
stc
aas
clc
pop
std
xor
dec
call
lods
pop
cmp
mov
inc
mov
inc
xchg
std
cmp
pop
clc
idiv
retf
(bad)
enter
lock
dec
(bad)
sti
(bad)
jnp
(bad)
(bad)
jmp
movs
in
jg
pop
(bad)
outs
adc
std
xchg
inc
test
sti
cld
mov
add
sub
std
jg
mov
(bad)
out
jg
mov
cld
std
jmp
cld
psrld
frstor
dec
int3
(bad)
jl
jmp
hlt
out
dec
scas
cld
cmp
jo
std
mov
out
pop
(bad)
(bad)
(bad)
pop
call
(bad)
sti
(bad)
cli
ins
(bad)
call
cmp
cmc
mov
mov
icebp
jnp
xor
out
out
icebp
mov
sti
out
push
scas
cld
push
(bad)
fstp
jg
das
sti
movq
add
push
cld
sti
mov
sub
(bad)
fcmovnu
hlt
push
cmp
pop
pop
test
(bad)
sti
push
jle
jg
mov
jg
aaa
(bad)
out
lahf
std
inc
(bad)
in
out
jg
cld
iret
push
push
(bad)
repz
cld
mov
fucomi
dec
(bad)
mov
(bad)
out
ja
xlat
out
mov
test
cmp
pop
clc
idiv
and
jmp
icebp
jg
clc
sub
(bad)
clc
or
mov
std
mov
paddd
mov
cmp
sub
(bad)
idiv
jg
push
aad
mul
pop
dec
pop
cld
(bad)
idiv
stc
daa
(bad)
lahf
xchg
in
mov
sub
clc
jg
cmp
dec
dec
aas
hlt
jg
sub
cmp
(bad)
std
das
cld
mov
out
(bad)
stc
sub
inc
ud0
stos
(bad)
jmp
cld
mov
(bad)
dec
imul
loopne
repnz
out
jg
dec
and
(bad)
pop
push
push
out
xchg
inc
and
sahf
(bad)
inc
(bad)
stc
pop
(bad)
pop
mov
sti
paddd
mov
dec
or
scas
std
pop
dec
pop
push
inc
in
(bad)
cli
pop
jg
pop
clc
mov
mov
mov
inc
pop
test
inc
out
(bad)
mov
xlat
jg
push
sti
jmp
push
stos
sub
aas
cmc
xchg
jg
psubq
dec
jnp
loopne
std
jg
iret
jmp
shld
stc
aas
dec
pop
inc
jecxz
das
std
int
cli
mov
out
clc
pop
inc
enter
aas
lock
inc
dec
std
pop
xchg
or
xchg
neg
xchg
pop
cli
mov
or
in
dec
jmp
pop
cld
fistp
xchg
ins
mov
inc
idiv
fdivrp
pop
repnz
mov
fistp
clc
mov
lahf
outs
lock
cli
push
loopne
fcomip
(bad)
(bad)
pop
call
cld
aad
hlt
jnp
addr16
(bad)
in
push
daa
(bad)
cmps
call
scas
cld
cmp
pop
cld
mov
js
pop
cld
movs
jg
lods
fs
out
(bad)
cmp
push
dec
js
lahf
jg
(bad)
std
nop
cmp
(bad)
xchg
call
call
pop
inc
sar
icebp
out
push
mov
imul
stos
jg
pop
jb
aas
push
sar
dec
stos
repnz
cld
(bad)
jmp
jmp
sti
cmps
std
stos
(bad)
sti
out
call
idiv
jg
(bad)
(bad)
out
dec
push
sub
xchg
pop
std
stos
pushf
fs
nop
out
movs
pop
jmp
cmc
call
aas
call
dec
dec
jle
(bad)
std
retf
mov
(bad)
(bad)
clc
ud0
(bad)
sti
mov
push
paddb
sub
push
mov
das
dec
jg
(bad)
cli
(bad)
mov
pop
jbe
aad
cli
(bad)
jle
pop
(bad)
(bad)
imul
push
(bad)
out
pop
cmps
adc
and
repz
pushf
pop
jmp
jg
mov
inc
(bad)
cld
mov
scas
aas
in
pop
cld
scas
jg
(bad)
in
aas
cmps
mov
jb
(bad)
sti
jg
jg
outs
call
daa
jo
inc
mov
pop
(bad)
cmp
(bad)
xchg
(bad)
outs
ja
ja
(bad)
out
(bad)
sub
adc
xchg
pop
dec
repz
pop
(bad)
pop
push
mov
adc
retf
scas
cld
(bad)
lds
lock
dec
cld
pop
jmp
cmc
(bad)
out
mov
jne
cdq
lods
push
out
mov
mov
inc
jmp
pop
(bad)
pop
push
pop
call
xchg
push
(bad)
cli
imul
mov
inc
dec
sti
pop
jg
scas
cld
pop
dec
add
mov
lock
cmp
jg
mov
jg
(bad)
cli
mov
pushf
mov
inc
sub
bnd
mov
add
mov
mov
push
call
addr16
outs
mov
imul
aas
std
mov
fbstp
mov
push
(bad)
cli
mov
push
cld
mov
pop
call
dec
aas
lock
iret
inc
adc
pushf
(bad)
fstp
js
(bad)
cli
in
in
jg
std
outs
inc
sbb
aas
jle
(bad)
push
stos
jg
push
pop
cld
outs
dec
push
outs
std
movs
mov
mov
jmp
jg
lods
inc
cld
pop
jmp
push
sub
sar
outs
cld
imul
(bad)
cli
push
std
xchg
pop
std
pop
(bad)
lahf
jg
call
std
cld
push
(bad)
sar
scas
(bad)
adc
scas
jg
xchg
dec
call
outs
pop
cld
mov
cmc
outs
cld
aad
loopne
mov
cmp
test
dec
pop
mov
(bad)
jmp
and
cld
test
repnz
iret
(bad)
cli
mov
mov
xchg
es
(bad)
clc
adc
(bad)
xchg
(bad)
out
out
jg
sti
cld
inc
mov
(bad)
mov
aas
lock
mov
idiv
(bad)
retf
(bad)
sti
aas
and
jmp
(bad)
xchg
jmp
scas
cli
jmp
(bad)
pop
(bad)
sub
and
(bad)
inc
jg
jecxz
adc
lds
lock
clc
aaa
jle
adc
inc
in
pop
stc
pop
push
jb
das
stc
movaps
(bad)
sti
out
(bad)
mov
(bad)
(bad)
xchg
(bad)
out
pop
std
and
cli
(bad)
ret
(bad)
stc
jg
inc
neg
paddd
mov
das
mov
out
std
jg
mov
lods
rcr
sub
mov
(bad)
std
xchg
sub
sar
scas
dec
aad
fwait
sti
pop
std
cdq
adc
std
(bad)
jmp
aad
(bad)
mov
adc
mov
in
clc
pop
popa
daa
stos
mov
inc
and
(bad)
std
sbb
(bad)
lahf
jg
pop
clc
pop
dec
std
(bad)
(bad)
sti
push
mov
aas
icebp
pop
shl
repnz
(bad)
jg
mul
inc
push
data16
push
dec
paddd
and
movs
dec
jg
push
jg
aas
clc
mov
das
inc
push
cs
out
clc
paddd
idiv
jle
adc
scas
clc
ud0
jecxz
lahf
adc
(bad)
jmp
sti
(bad)
(bad)
jg
(bad)
stc
paddd
(bad)
jg
pop
(bad)
out
mov
fidivr
jg
pop
jmp
(bad)
std
aas
dec
ja
out
aas
repnz
cli
xchg
sar
dec
cld
mov
(bad)
mov
hlt
jg
xchg
xchg
xor
scas
mov
(bad)
push
ja
pop
(bad)
call
fdivrp
xchg
inc
jmp
scas
cld
aas
jle
aas
clc
mov
pop
clc
setb
push
mov
push
cld
pop
ja
repz
retf
jg
mov
leave
scas
cld
dec
(bad)
out
push
mov
mov
jg
das
jg
lahf
(bad)
outs
in
(bad)
pop
adc
(bad)
(bad)
inc
aas
clc
fwait
inc
(bad)
scas
jg
aas
cld
pop
jle
aas
lock
mov
mov
rcl
(bad)
clc
xchg
push
xor
fbld
test
outs
inc
jmp
iret
cld
aas
stos
(bad)
sti
mov
mov
(bad)
out
jmp
pop
cld
aas
dec
jmp
cmp
(bad)
jg
sar
scas
cld
aas
(bad)
cli
pop
cli
stos
inc
jg
jg
mov
dec
push
(bad)
pop
cld
out
(bad)
aam
movs
and
and
pop
dec
mov
paddb
(bad)
scas
mov
retf
aas
std
jg
xlat
push
jg
jg
popf
mov
and
int
jp
jg
(bad)
jmp
(bad)
scas
cli
pop
dec
(bad)
(bad)
jmp
aas
sti
xor
scas
das
inc
jmp
(bad)
(bad)
adc
xchg
aaa
jg
lods
pop
push
push
loop
cld
(bad)
ret
(bad)
out
mov
mov
push
cmps
loopne
jmp
xlat
mov
mov
(bad)
cli
inc
inc
(bad)
mov
lock
std
jmp
loopne
sti
cmc
leave
dec
stc
out
(bad)
out
(bad)
in
jecxz
xchg
loop
(bad)
in
scas
std
movs
jg
out
(bad)
jg
rol
repnz
jnp
aas
cld
cmp
cmc
jg
dec
(bad)
fild
push
call
cmps
inc
das
cmps
xor
inc
ja
push
(bad)
mov
aas
inc
(bad)
in
jg
std
clc
inc
inc
(bad)
mov
notrack
cmc
(bad)
jg
push
jg
push
mov
cld
addr16
pop
cmc
xlat
(bad)
pop
jg
cmp
(bad)
jg
lds
(bad)
scas
cld
dec
push
fist
out
std
fistp
jg
jg
mov
stos
(bad)
das
repnz
(bad)
out
imul
jg
movs
push
jmp
aas
idiv
(bad)
das
(bad)
sar
sti
mov
mov
xchg
ins
call
in
(bad)
std
das
dec
jg
mov
stos
sub
inc
jg
cmps
call
aas
cli
outs
(bad)
(bad)
int
clc
aas
jmp
xchg
push
outs
(bad)
popa
retf
pop
mov
inc
push
mov
(bad)
mov
push
addr16
xchg
push
pop
enter
(bad)
std
jg
jg
aaa
jg
pop
jg
add
in
cld
aaa
(bad)
idiv
outs
stc
jg
add
(bad)
clc
pop
jle
(bad)
std
outs
push
in
(bad)
movs
jmp
jg
jg
pop
jg
aas
lock
das
dec
retf
jmp
(bad)
scas
pop
inc
jle
pop
mov
icebp
pop
cld
fistp
(bad)
std
out
mov
jg
(bad)
cld
pop
(bad)
lahf
retf
call
inc
cdq
clc
jmp
idiv
sti
mov
out
push
(bad)
clc
movs
push
aas
test
pop
push
(bad)
jg
(bad)
std
aas
std
cdq
push
fistp
or
lahf
push
inc
adc
imul
sti
(bad)
std
sub
fwait
inc
mov
inc
(bad)
clc
paddd
stc
movd
out
bnd
icebp
push
scas
lds
ret
inc
mov
(bad)
xor
pop
inc
aam
mov
std
pop
dec
jg
push
outs
dec
rcl
lahf
cld
push
in
cld
pop
pop
(bad)
pop
(bad)
fld
and
push
dec
push
out
cld
jnp
out
fbld
jmp
push
(bad)
sti
push
(bad)
jp
iret
sti
aas
jle
retf
repnz
(bad)
cli
das
inc
pop
(bad)
jnp
pop
jg
int
scas
dec
(bad)
out
jg
idiv
aas
jle
call
(bad)
stc
mul
jg
out
pop
clc
mov
mov
repnz
cli
fistp
mov
std
mov
cmc
jg
int
aaa
lods
sar
cli
inc
jg
aas
imul
out
push
lahf
inc
mov
jmp
jmp
(bad)
(bad)
push
call
aas
dec
pop
test
sub
outs
repnz
(bad)
fdivr
sti
push
push
adc
jmp
int
pop
popf
(bad)
(bad)
in
stc
jg
xchg
mov
repz
dec
adc
(bad)
fisttp
or
mov
mov
mov
jg
sar
cmc
jnp
pop
jmp
(bad)
std
sub
and
inc
push
(bad)
and
jg
pop
cld
mov
jg
scas
clc
out
out
aas
cli
mov
pop
std
cmps
jmp
jg
aas
mov
(bad)
cli
out
leave
cmp
mov
retf
ud0
out
xchg
inc
(bad)
mov
mov
clc
mov
out
clc
sub
dec
shl
xchg
add
pop
sti
aas
cld
mov
dec
jle
ja
repz
inc
mov
loop
daa
ret
cld
paddd
mov
mov
(bad)
cli
das
(bad)
std
fistp
xchg
repnz
aam
mov
jnp
jmp
(bad)
das
dec
aas
clc
paddb
push
(bad)
cld
pop
std
cmps
in
cld
retf
(bad)
inc
jg
outs
sti
jg
repnz
lock
add
out
lds
clc
out
ret
cmp
std
inc
(bad)
jmp
repz
idiv
mov
xchg
push
cld
push
xchg
sahf
clc
mov
jg
mov
idiv
movs
fs
inc
push
(bad)
cli
add
inc
jp
xchg
pop
std
stos
(bad)
(bad)
(bad)
sub
jmp
int
(bad)
(bad)
cmps
call
aas
sti
paddd
jmp
adc
std
lahf
std
cdq
(bad)
(bad)
(bad)
stc
scas
(bad)
(bad)
std
(bad)
paddd
aad
neg
(bad)
mov
(bad)
jg
sub
jmp
pop
and
call
retf
das
leave
ret
cmps
push
idiv
ins
jmp
movs
call
out
cmc
jg
push
mov
or
out
jmp
jg
jle
(bad)
mov
jg
pop
std
(bad)
cld
mov
loope
cli
mov
stc
jle
lahf
cmp
das
jg
jb
jmp
pop
inc
pop
dec
dec
std
paddb
bswap
aam
idiv
cli
(bad)
leave
mov
paddb
cmc
imul
inc
pop
sti
pop
(bad)
fist
pop
inc
aas
jmp
int
lock
stc
pop
leave
sbb
das
inc
pop
(bad)
aas
inc
pop
dec
push
jg
stos
jle
pop
stc
xlat
inc
lahf
stc
jg
outs
(bad)
out
call
std
pop
push
inc
fild
repz
clc
cmp
xchg
lock
inc
jg
movs
lods
inc
pop
lock
xor
pop
(bad)
pop
jg
sub
out
(bad)
mov
(bad)
(bad)
xchg
aad
neg
pop
clc
outs
dec
pop
in
paddb
pop
xchg
outs
idiv
cmp
mov
mov
test
lock
cli
movq
pop
clc
jg
movs
pusha
jb
les
cmp
mov
lahf
pop
mov
(bad)
fidivr
lock
mov
mov
jmp
gs
dec
(bad)
in
jg
test
jmp
addr16
daa
(bad)
jmp
lock
std
test
(bad)
pop
mov
mov
or
sbb
jmp
xchg
mov
push
std
pop
inc
xor
(bad)
cs
pop
icebp
in
dec
dec
jecxz
sti
paddd
jmp
mov
mov
stos
mov
(bad)
mov
std
pop
jg
fcomip
push
std
cmp
aas
cmc
sbb
xor
aas
cld
rsqrtps
jg
test
stc
ud0
jecxz
xchg
call
jg
fnstcw
aas
idiv
dec
(bad)
in
(bad)
jg
movsx
(bad)
(bad)
out
(bad)
pop
mov
out
lock
(bad)
popf
lock
inc
ror
stos
mov
push
sub
(bad)
cli
lahf
inc
push
dec
mov
jmp
addr16
lahf
cld
(bad)
(bad)
scas
(bad)
mov
iret
stc
ins
jle
pop
lock
push
adc
mov
push
imul
jb
jg
popa
sti
pop
push
cld
icebp
fstp
cmp
xchg
(bad)
cli
pop
clc
jg
(bad)
call
addr16
lds
mov
(bad)
jg
xor
std
aas
scas
(bad)
out
mov
(bad)
(bad)
ret
pop
stc
jnp
and
jg
push
jmp
mov
fldcw
mov
jg
push
pop
(bad)
fist
arpl
fdivr
lock
std
mov
adc
cld
aaa
paddd
cmps
dec
cmp
imul
(bad)
lahf
jmp
lds
(bad)
std
aas
cld
aad
loopne
clc
(bad)
fwait
jg
scas
cld
add
cmc
push
paddb
daa
dec
mov
mov
push
mov
(bad)
aaa
jg
inc
or
dec
iret
inc
(bad)
sti
paddb
test
lock
cli
iret
sub
sub
(bad)
lahf
std
cmp
retf
out
inc
jmp
(bad)
cmp
jmp
pop
cld
mov
scas
std
addr16
scas
out
dec
(bad)
das
jmp
idiv
icebp
cli
paddb
call
(bad)
sti
mov
lock
std
ud0
fcomip
jmp
sub
pop
lahf
sbb
mov
hlt
out
std
punpckhwd
cmc
push
(bad)
(bad)
jmp
add
jmp
sti
push
cld
(bad)
and
jmp
(bad)
std
lds
sub
(bad)
(bad)
jmp
mov
dec
cld
mov
(bad)
pop
(bad)
fdivrp
jecxz
and
stc
mov
retf
jg
bnd
paddb
dec
(bad)
jg
pop
sub
stos
cli
aas
(bad)
jmp
jg
das
(bad)
lahf
pop
inc
sub
(bad)
std
pop
jmp
xchg
std
cli
adc
outs
pop
push
std
aas
inc
(bad)
jmp
(bad)
mov
jg
loop
cld
aas
jg
repnz
enter
leave
add
imul
(bad)
lahf
dec
aas
clc
idiv
outs
cmp
in
inc
call
scas
cld
sbb
scas
fcomip
pop
sti
in
(bad)
(bad)
idiv
(bad)
in
scas
std
add
(bad)
neg
in
cli
cmp
(bad)
(bad)
cld
aaa
inc
scas
stc
(bad)
cld
cwde
out
aas
stc
or
iret
(bad)
in
inc
mov
inc
(bad)
sti
jmp
jmp
(bad)
stc
sbb
or
or
es
(bad)
(bad)
std
mov
pop
call
call
dec
dec
jg
and
or
idiv
mov
(bad)
clc
mov
ins
inc
mov
enter
jmp
pop
clc
lahf
cld
idiv
imul
stc
(bad)
rcr
(bad)
mov
in
cld
dec
leave
push
cld
jb
cld
(bad)
inc
sar
jg
mov
icebp
ud0
in
out
jg
cmp
(bad)
out
fbstp
(bad)
cli
mov
sti
(bad)
out
idiv
(bad)
in
cld
lahf
(bad)
cli
jg
addr16
fild
std
jmp
(bad)
clc
fstp
paddw
jg
shld
out
fstp
clc
jg
mov
cmp
cld
pop
daa
(bad)
aaa
sub
(bad)
sub
outs
call
std
das
(bad)
out
jmp
(bad)
std
out
xchg
(bad)
inc
out
cmc
leave
outs
cli
jg
iret
jg
jmp
(bad)
outs
inc
movs
(bad)
in
(bad)
dec
enter
(bad)
mov
jg
dec
jg
add
clc
lahf
dec
(bad)
sti
outs
cld
scas
dec
(bad)
push
cld
cli
retf
push
pop
std
cmp
daa
(bad)
xchg
(bad)
cli
aas
jl
jg
jecxz
jmp
out
mov
leave
mov
(bad)
inc
lds
dec
into
(bad)
xor
jg
add
(bad)
mov
out
jmp
gs
push
scas
icebp
xlat
pop
sub
(bad)
mov
cmp
inc
leave
dec
(bad)
aas
(bad)
fst
and
neg
jge
pop
repnz
loop
sti
add
fcomp
out
inc
push
pop
mov
in
scas
std
mov
sub
cli
pop
(bad)
out
pop
imul
dec
mov
stos
(bad)
out
jg
push
mov
stc
scas
push
(bad)
(bad)
adc
out
sub
clc
stos
addr16
cld
(bad)
loop
or
lahf
mov
fucomip
(bad)
pop
jmp
lahf
clc
jg
mov
cmc
idiv
outs
jg
pop
mov
push
ja
push
test
pop
jmp
aas
hlt
idiv
mov
cld
arpl
lea
fistp
or
fcomip
dec
(bad)
xchg
(bad)
jmp
ud0
pop
stc
pop
(bad)
fistp
(bad)
std
stos
aas
(bad)
pop
(bad)
aam
jmp
idiv
inc
jmp
mul
scas
cld
repnz
cli
in
das
clc
mov
aas
call
std
(bad)
idiv
test
std
mov
jg
pop
(bad)
out
das
sub
xchg
mov
jg
aas
(bad)
pop
mov
ds
mov
in
(bad)
jg
std
jmp
out
sti
ja
cmp
(bad)
fisub
jg
cmp
(bad)
cmps
mov
jg
pop
(bad)
jg
mov
sbb
mov
sbb
pop
xchg
test
jecxz
pop
cli
lahf
pop
and
hlt
pop
xchg
dec
repz
out
jg
jmp
(bad)
out
lahf
clc
jg
repnz
(bad)
push
(bad)
sub
pop
pop
mov
jmp
(bad)
clc
add
iret
nop
sub
mov
pop
fdivrp
movs
in
jle
stc
repz
das
sti
pop
fdivrp
mov
xchg
in
push
(bad)
(bad)
sub
test
pop
mul
repnz
std
jnp
add
retf
xchg
jg
das
std
adc
inc
inc
aas
inc
(bad)
(bad)
sub
outs
retf
popf
mov
(bad)
stc
push
scas
cli
aaa
dec
mov
sti
jg
imul
cld
(bad)
push
inc
xchg
sub
mov
(bad)
(bad)
aas
enter
call
cli
pop
jmp
out
dec
ret
jle
call
idiv
mov
mov
jmp
(bad)
cld
sti
jmp
xchg
repz
aas
(bad)
cld
mov
inc
call
xchg
(bad)
jmp
fdivr
repnz
cmp
sar
div
(bad)
std
dec
(bad)
pop
cld
outs
mov
aas
clc
(bad)
cld
sub
inc
or
dec
mov
jg
call
retf
(bad)
dec
pop
jmp
enter
inc
lds
clc
(bad)
lea
fsubr
(bad)
aas
std
cmp
das
clc
mov
xchg
jge
jg
xchg
stc
fistp
(bad)
aas
call
daa
imul
sahf
lahf
pop
and
push
std
mov
lock
inc
jmp
pop
and
in
stos
cli
idiv
mov
std
fild
(bad)
idiv
mov
mov
mov
(bad)
in
dec
std
xlat
out
(bad)
lahf
fistp
jg
scas
cli
xlat
(bad)
out
(bad)
cld
lahf
std
daa
inc
jg
aas
cld
cmp
out
bnd
jmp
sub
paddd
loopne
std
sti
std
stos
(bad)
in
(bad)
ds
retf
jle
pop
stc
jg
outs
mov
jg
aas
lock
cld
cdq
jmp
jg
jg
(bad)
xchg
xchg
cld
jecxz
sar
es
iret
std
mov
or
(bad)
jmp
stc
xor
sar
and
hlt
jg
cmp
jmp
xchg
call
mov
xchg
aas
lock
std
cmp
or
inc
sub
idiv
mov
mov
(bad)
inc
cli
aas
ds
jmp
pop
clc
in
cli
ud0
dec
push
push
jnp
(bad)
les
(bad)
and
out
icebp
jg
std
cmp
aas
dec
xor
xlat
inc
mov
(bad)
pop
adc
nop
mov
stos
(bad)
jmp
nop
jg
aas
std
pop
(bad)
lahf
jg
dec
inc
aas
mov
jg
push
(bad)
dec
jg
rcl
jg
xchg
jecxz
stc
dec
jmp
push
jg
add
inc
repz
push
inc
mov
mov
aas
lock
std
pop
aas
call
bound
mov
jg
aas
clc
lahf
cld
test
(bad)
idiv
scas
call
cmp
pop
cmc
jae
(bad)
cld
dec
mov
dec
pop
xchg
pop
stc
sti
push
push
out
mov
scas
and
jbe
pop
dec
mov
inc
ja
rcr
dec
push
repnz
call
push
push
(bad)
(bad)
fstp
jmp
iret
and
stc
aaa
inc
pop
cld
scas
call
retf
xchg
xchg
mov
pop
movs
pop
out
(bad)
inc
pop
(bad)
(bad)
(bad)
sti
outs
sti
xchg
jg
jg
movd
mov
std
cmp
std
mov
jg
in
(bad)
jecxz
lock
ja
add
fwait
mov
inc
mov
aad
cld
cld
out
(bad)
mov
mov
(bad)
fst
(bad)
jmp
mov
jg
cmps
(bad)
in
scas
mov
cmove
cld
add
mov
mov
jmp
jg
dec
jmp
cmps
inc
jmp
pop
call
jg
pop
clc
(bad)
inc
sti
xchg
(bad)
fistp
jg
gs
jle
pop
icebp
fwait
(bad)
pop
jg
out
icebp
pop
adc
inc
dec
out
std
fistp
jns
(bad)
sti
pop
cmp
mov
jg
or
pop
cld
(bad)
jg
push
iret
inc
movs
mov
push
cld
lahf
inc
(bad)
retf
mov
loopne
dec
out
clc
adc
(bad)
std
(bad)
inc
push
paddb
(bad)
inc
hlt
cli
pop
cld
fbstp
mov
xchg
cmps
clc
pop
mov
and
sbb
(bad)
cmp
dec
jg
loop
jmp
mul
pop
cld
scas
jle
jmp
push
aaa
std
add
loope
jecxz
(bad)
cmp
bnd
pop
push
mov
(bad)
out
mov
mov
in
cld
scas
jg
(bad)
std
lahf
(bad)
pop
jmp
out
icebp
aas
std
test
imul
dec
jg
push
loop
adc
cli
mov
ret
push
pop
and
clc
ret
jle
cmc
push
out
pop
(bad)
jmp
(bad)
aas
clc
(bad)
fcmovu
sbb
sti
mov
(bad)
out
jmp
cmp
cmp
pop
push
stos
pop
cmc
sti
(bad)
(bad)
idiv
jg
pop
clc
sti
call
repnz
or
das
push
out
repnz
cmps
(bad)
inc
sub
cli
idiv
push
dec
cld
aas
inc
fbstp
stc
mov
pop
stc
lahf
ds
push
(bad)
(bad)
std
mov
cld
cmps
jmp
out
cld
(bad)
(bad)
stos
(bad)
jmp
aas
lock
cld
mov
pop
(bad)
pop
mov
push
shl
(bad)
clc
mov
paddb
in
jg
fs
(bad)
(bad)
into
push
(bad)
(bad)
out
push
mov
(bad)
(bad)
jg
out
(bad)
cmp
mov
sti
dec
call
cli
adc
inc
ret
das
cld
mov
mov
out
inc
ss
sti
add
push
icebp
dec
enter
mov
pop
clc
das
std
(bad)
fucomi
push
psubw
cli
dec
bnd
shl
jg
(bad)
sar
dec
and
pop
pop
addr16
inc
jmp
(bad)
in
push
dec
(bad)
cmc
out
aas
cld
pop
dec
(bad)
in
(bad)
adc
jle
scas
stc
mov
xor
inc
(bad)
out
push
(bad)
(bad)
stc
out
inc
cdq
movs
(bad)
out
das
cld
adc
inc
mov
jg
and
(bad)
idiv
idiv
ja
lahf
(bad)
movs
mov
(bad)
std
sar
out
pop
xchg
imul
mov
xchg
mov
(bad)
jmp
jns
xchg
mov
jmp
pop
daa
cmps
jmp
std
push
pop
(bad)
sbb
out
inc
adc
(bad)
inc
(bad)
test
pop
jmp
(bad)
std
mov
(bad)
std
jg
mov
jmp
pop
dec
mov
jl
pop
pop
dec
jg
xchg
xchg
(bad)
(bad)
mov
(bad)
dec
mov
jg
push
sub
pop
stc
(bad)
xchg
push
paddb
dec
(bad)
out
inc
mov
jg
(bad)
in
scas
cld
fisttp
(bad)
pop
mul
(bad)
cld
sbb
aas
dec
jle
(bad)
std
(bad)
(bad)
cs
jg
test
retf
xchg
jg
lahf
stc
bswap
dec
pop
fs
dec
imul
sti
hlt
(bad)
(bad)
ins
push
in
(bad)
ror
(bad)
out
mov
xchg
or
aas
bnd
out
xor
aas
inc
jg
push
outs
(bad)
pop
call
out
repnz
inc
and
mov
pop
(bad)
out
jg
paddb
int3
(bad)
jmp
sub
or
pop
cld
fistp
dec
pop
(bad)
jmp
aad
(bad)
stc
pop
out
(bad)
cmp
loopne
hlt
mov
cs
aas
sub
out
icebp
(bad)
leave
jg
push
(bad)
(bad)
push
out
(bad)
(bad)
(bad)
stos
nop
out
mov
repnz
cld
xchg
sub
dec
jmp
call
dec
pop
clc
sub
in
mov
addr16
or
scas
cli
das
jmp
xchg
aas
lock
mov
pop
cld
cmp
mov
(bad)
stc
mov
out
jg
pop
cld
mov
(bad)
fcomp
daa
(bad)
push
(bad)
std
pop
clc
stos
(bad)
push
mov
(bad)
jmp
idiv
mov
(bad)
or
fwait
mov
inc
ja
jmp
jg
mov
out
xchg
sti
pop
dec
jae
cs
mov
out
lock
cli
das
(bad)
fidivr
lock
mov
das
(bad)
fistp
aas
clc
jg
idiv
sbb
and
ja
inc
aad
jno
aas
jg
ja
mov
mov
movs
inc
(bad)
std
jg
jg
dec
clc
das
movs
push
scas
push
pop
cld
outs
inc
and
(bad)
jo
int3
jmp
(bad)
jmp
(bad)
(bad)
add
lahf
les
jmp
icebp
jg
movq
push
jnp
(bad)
(bad)
loop
std
(bad)
xchg
xchg
xchg
clc
mov
(bad)
sti
das
stc
std
jmp
cmc
mov
jg
(bad)
jg
fidivr
inc
(bad)
mov
dec
xor
in
(bad)
pop
int
clc
(bad)
repnz
std
idiv
fild
std
idiv
mov
mov
jg
(bad)
jmp
(bad)
in
enter
mov
lock
aad
repz
aaa
std
add
icebp
push
jmp
add
jmp
cli
sti
dec
sbb
(bad)
jg
pop
cld
daa
jg
pop
dec
ja
aas
(bad)
fdivr
sti
lahf
cld
das
(bad)
out
(bad)
jmp
leave
push
stc
out
das
mov
mov
in
sahf
(bad)
jmp
test
clc
stos
jg
(bad)
in
aas
cld
aas
(bad)
clc
push
test
add
jne
cvtps2pd
dec
icebp
jmp
idiv
mov
jg
pop
cli
jg
ja
loopne
cmc
aas
cld
mov
stos
mov
dec
jae
fist
std
mov
idiv
(bad)
jg
mov
jg
(bad)
jle
(bad)
dec
fisttp
pushf
mov
dec
repz
std
mov
pop
jg
pop
dec
sar
xlat
(bad)
(bad)
call
daa
push
call
pop
ror
repnz
pop
(bad)
(bad)
xlat
aad
repnz
xchg
je
(bad)
cld
pop
(bad)
lahf
mov
jmp
jns
(bad)
lock
jmp
rol
cmc
aas
cli
jg
push
jmp
scas
scas
enter
mov
(bad)
(bad)
sti
dec
sti
in
rcr
clc
jg
inc
cs
pop
clc
pop
dec
imul
jl
jg
sub
push
push
jg
jg
retf
(bad)
out
(bad)
in
xchg
std
xor
mov
(bad)
pop
xor
jg
pop
clc
mov
loope
(bad)
retf
dec
push
idiv
mov
jg
daa
(bad)
out
mov
in
pop
std
loopne
dec
cli
aad
jmp
push
loop
mov
fnsetpm(287
dec
cld
pop
jg
in
sar
sti
cli
ja
pop
(bad)
movs
jg
jg
sbb
outs
repnz
out
dec
(bad)
out
dec
stc
imul
jg
ins
stc
(bad)
ds
call
lods
jmp
(bad)
std
idiv
jmp
mov
jg
jmp
icebp
pop
(bad)
lahf
jg
aas
dec
sbb
imul
pmullw
icebp
push
adc
cdq
dec
(bad)
cld
sti
lahf
(bad)
movs
data16
aad
in
sti
xor
iret
jg
aam
push
cmp
int
shr
aaa
(bad)
out
mov
(bad)
push
fs
(bad)
fdivr
sti
outs
cmps
mov
gs
out
pop
inc
mov
enter
les
adc
std
cdq
mov
(bad)
out
jg
pop
lock
mov
jmp
cmp
mov
cld
pop
jmp
mov
aas
imul
std
fwait
fs
imul
scas
(bad)
sti
push
cld
mov
jg
push
mov
mov
jae
loopne
push
std
out
adc
(bad)
cli
mov
call
push
mov
xchg
jg
(bad)
mov
imul
push
(bad)
loopne
jge
jg
jmp
jecxz
mov
cmc
paddd
fild
pop
jg
lahf
cld
mov
jg
dec
dec
mov
loopne
inc
pop
out
hlt
push
(bad)
(bad)
loope
bnd
das
adc
cld
outs
jmp
shr
ret
cmp
pop
(bad)
mov
xchg
push
jg
push
cld
push
and
(bad)
mov
jg
cs
cmp
cmp
cmp
aad
(bad)
outs
stc
das
(bad)
fistp
aas
clc
aas
std
retf
xchg
retf
pop
push
cmp
cli
inc
jmp
aaa
call
ja
scas
jnp
cmps
cli
mov
inc
inc
(bad)
cli
mov
xchg
(bad)
(bad)
out
jg
xchg
sar
lock
cmp
jg
outs
push
push
pop
sti
mov
cmc
out
bnd
out
xchg
jo
icebp
(bad)
(bad)
call
and
call
(bad)
mov
dec
or
aam
inc
cdq
test
xchg
ret
pop
std
jnp
lahf
jg
(bad)
std
dec
rol
jecxz
cld
pop
imul
sar
repz
ud0
(bad)
fcmovu
jecxz
jg
jg
(bad)
jg
out
icebp
jg
cmp
addr16
call
jg
(bad)
dec
jg
jg
pop
xchg
sar
mov
mov
outs
jg
(bad)
std
pop
push
and
setb
(bad)
mov
xchg
jmp
cld
and
dec
(bad)
fistp
xchg
leave
jg
mov
(bad)
jmp
icebp
(bad)
(bad)
addr16
push
(bad)
fistp
add
cmc
jmp
jne
dec
repz
call
inc
xchg
clc
cld
xor
inc
jmp
in
jg
das
cld
push
mov
dec
add
jg
pop
clc
lahf
inc
jmp
idiv
idiv
ret
add
(bad)
pop
jnp
lock
(bad)
mov
in
std
fistp
(bad)
loopne
push
pop
call
(bad)
(bad)
neg
outs
(bad)
(bad)
loopne
bnd
aaa
jg
inc
ud0
cmp
jg
mov
paddd
call
scas
pop
(bad)
mov
pop
inc
jmp
inc
call
jg
xchg
scas
push
outs
dec
sub
dec
inc
adc
stos
jg
aas
lock
call
call
int
clc
pop
mov
loope
sti
jg
xor
cld
jecxz
xor
jg
sti
add
xchg
mov
lock
les
(bad)
rol
scas
cli
gs
into
jle
jg
jnp
cmps
aad
cmc
jecxz
loope
stc
scas
cld
fistp
fcomip
or
(bad)
aas
lock
inc
jg
sbb
(bad)
cli
das
movs
je
jg
dec
(bad)
(bad)
out
dec
loop
push
aad
inc
dec
(bad)
(bad)
stc
(bad)
fcomip
aas
repz
(bad)
imul
pop
outs
push
push
sub
out
fist
(bad)
(bad)
sti
das
ds
int
jle
aas
clc
jg
std
das
mov
(bad)
std
push
jg
mov
mov
cld
fistp
pop
jg
xchg
popa
movs
icebp
jg
(bad)
sti
(bad)
std
(bad)
out
fild
das
(bad)
pop
inc
jne
mov
jg
and
repnz
mov
(bad)
sti
aas
cld
add
rcr
jecxz
inc
(bad)
out
mov
jg
ud0
mov
scas
(bad)
popf
not
aas
lock
sub
sar
cld
(bad)
xlat
(bad)
(bad)
jg
pop
scas
(bad)
out
call
pop
idiv
jmp
jmp
cld
pop
imul
out
push
mov
mov
aaa
inc
xor
scas
mov
nop
add
mov
(bad)
call
jecxz
idiv
cmc
cmp
inc
retf
xchg
push
mov
mov
and
sar
(bad)
cli
jmp
push
iret
(bad)
(bad)
mov
clc
push
dec
or
stos
(bad)
mov
inc
clc
gs
pop
pop
jmp
loopne
jmp
jmp
ret
out
std
stos
jg
call
cli
jns
xchg
movs
aas
idiv
stos
jle
xlat
cmp
sti
out
loopne
cld
movq
push
dec
data16
jg
fwait
jmp
push
loopne
cld
pop
jg
(bad)
stc
out
cmp
jg
pop
adc
(bad)
jmp
std
test
jecxz
stc
idiv
cmp
rcl
dec
jecxz
clc
scas
jmp
(bad)
aas
lahf
test
aaa
(bad)
pop
sub
jns
shl
pop
mov
jmp
out
push
mov
and
jg
(bad)
retf
pop
mov
repz
cmp
aas
inc
fild
jmp
dec
retf
ins
dec
jmp
xchg
stos
inc
call
pop
inc
mov
(bad)
cld
dec
call
jg
mov
(bad)
(bad)
fcos
std
stos
jg
pop
add
stc
jg
mov
(bad)
or
(bad)
jg
popf
jg
(bad)
jl
jg
jecxz
mov
push
stc
jg
aas
cld
xchg
stc
lahf
stc
jg
xchg
fdiv
pop
jl
daa
cld
stos
mov
call
jg
paddb
retf
dec
add
(bad)
iret
enter
(bad)
idiv
iret
scas
(bad)
out
(bad)
jmp
cli
mov
xchg
push
(bad)
pop
(bad)
cmps
mov
jg
and
std
dec
(bad)
out
aas
mov
mov
mov
(bad)
(bad)
push
mov
leave
dec
sar
icebp
pop
dec
sbb
add
cdq
movs
and
cld
mov
jle
(bad)
in
pop
cld
add
stc
(bad)
push
cld
mov
pop
mov
jg
mov
hlt
loop
stc
iret
inc
(bad)
stc
pop
call
retf
jg
mov
inc
dec
sar
dec
jmp
call
fcomip
paddd
loopne
rep
inc
push
push
std
mov
push
out
icebp
jg
pop
mov
push
(bad)
sti
out
icebp
paddd
(bad)
pop
clc
out
inc
push
inc
(bad)
std
xchg
std
cmp
(bad)
std
jg
adc
push
movs
cmp
pop
sub
repz
cld
(bad)
in
xchg
push
hlt
(bad)
cli
xor
push
mov
idiv
scas
cld
add
in
(bad)
fwait
mov
jg
lahf
icebp
in
clc
mov
bound
sbb
dec
ja
enter
jmp
(bad)
sahf
dec
(bad)
loope
nop
cmp
(bad)
jmp
jg
(bad)
jg
(bad)
clc
pop
(bad)
outs
pop
call
out
std
retf
inc
in
cli
std
call
pop
lahf
xchg
sbb
dec
jg
jb
pop
shr
repz
dec
out
sti
aas
(bad)
cli
(bad)
jmp
sti
add
mov
std
cmp
lahf
dec
cs
das
std
adc
cmp
sbb
(bad)
std
stos
call
(bad)
sti
jg
dec
imul
stc
cdq
(bad)
jmp
cdq
cld
stos
inc
(bad)
in
ja
add
aas
cli
pop
(bad)
lahf
inc
pop
clc
stos
inc
out
cld
xlat
call
pop
clc
mov
cld
repnz
mul
es
push
(bad)
out
pop
std
outs
inc
(bad)
clc
aas
clc
lahf
cld
push
jmp
scas
std
outs
jb
out
(bad)
clc
in
idiv
repnz
rcr
call
add
(bad)
out
jle
mov
push
clc
out
(bad)
mov
push
cmp
pop
(bad)
pop
mov
xchg
std
clc
mov
call
pop
jg
pop
dec
(bad)
push
call
push
(bad)
(bad)
push
(bad)
cli
pop
inc
push
push
(bad)
outs
jmp
das
std
adc
sar
aas
cli
mov
(bad)
pop
mov
clc
mov
mov
scas
jmp
lahf
cmp
mov
jmp
jg
pop
call
dec
enter
mov
ret
pop
(bad)
pop
(bad)
jmp
jg
push
mov
imul
out
inc
lahf
lock
inc
aas
call
out
std
adc
mov
pop
sbb
sti
push
push
out
movs
mov
(bad)
(bad)
int
clc
pop
cmp
fistp
jg
in
mov
and
xor
in
clc
mov
scas
clc
dec
dec
jmp
paddb
idiv
dec
call
inc
lahf
(bad)
jg
aad
(bad)
das
push
push
std
and
sti
lahf
sti
sbb
pop
test
dec
jg
sub
xor
imul
sti
in
cld
mov
outs
pop
cmp
(bad)
stc
out
scas
(bad)
popf
or
jmp
ja
jnp
idiv
cld
pop
cld
(bad)
(bad)
out
mov
jmp
xchg
jl
pop
icebp
fist
(bad)
push
lahf
(bad)
jg
scas
xchg
xor
aas
stos
jge
dec
cld
lahf
jg
pop
clc
pop
std
cs
fistp
jg
(bad)
cld
adc
idiv
(bad)
in
stc
mov
pop
cld
add
mov
call
lahf
dec
mov
mov
push
(bad)
sti
lahf
(bad)
std
sub
icebp
mov
aas
movs
cmc
mov
adc
fcomip
(bad)
(bad)
addr16
fwait
aas
icebp
jg
dec
inc
add
out
jmp
push
(bad)
jmp
(bad)
std
out
(bad)
idiv
idiv
iret
(bad)
(bad)
(bad)
clc
jg
idiv
ud0
(bad)
std
sub
shl
std
push
pop
es
mov
sub
inc
lahf
clc
mov
(bad)
std
(bad)
repz
cld
mov
in
dec
icebp
aas
cld
das
dec
aas
lock
std
mov
jg
mov
jg
dec
mov
test
(bad)
stc
imul
jge
idiv
retf
mov
movs
fmul
aas
cli
jg
es
cli
(bad)
cmc
jg
mov
popf
cli
jnp
idiv
jg
aas
lahf
dec
sub
icebp
pop
jmp
pop
(bad)
scas
push
call
fnstsw
mov
xchg
(bad)
aas
dec
jg
je
push
das
(bad)
lahf
mov
(bad)
std
pop
cld
xchg
push
inc
pop
push
movs
rep
inc
jg
idiv
or
inc
jb
(bad)
pop
xchg
jg
xor
imul
mov
jg
mov
dec
out
sbb
test
in
clc
(bad)
inc
(bad)
stc
pop
(bad)
sbb
scas
mov
mov
jmp
jmp
jg
jg
repnz
(bad)
clc
aas
(bad)
(bad)
aas
inc
jmp
(bad)
aad
jecxz
stc
mov
(bad)
stc
pop
(bad)
pop
cmps
push
fs
adc
loopne
stc
jnp
inc
jg
(bad)
std
stos
(bad)
loope
fwait
shl
jg
pop
dec
lods
stc
jnp
idiv
push
dec
cld
xchg
in
jmp
idiv
pop
mov
push
cmc
mov
adc
fist
jg
mov
mov
(bad)
fcmovu
(bad)
(bad)
cli
test
jmp
xlat
inc
jmp
paddb
(bad)
mov
dec
xlat
(bad)
xor
mov
inc
clc
mov
(bad)
std
outs
cli
jg
std
mov
(bad)
(bad)
aaa
inc
pop
jno
or
sti
fild
jg
lds
retf
(bad)
cld
clc
(bad)
cld
dec
inc
pop
cmc
daa
(bad)
lahf
jg
(bad)
std
(bad)
dec
imul
sar
cmp
xor
(bad)
push
ja
inc
sub
(bad)
jg
sub
paddb
dec
jmp
repz
aas
xchg
loop
(bad)
in
(bad)
clc
mov
jl
pop
nop
stc
retf
inc
jmp
out
push
mov
das
cmp
xchg
(bad)
jmp
test
jg
and
loop
stc
add
clc
aas
clc
aas
std
(bad)
sar
call
and
cmc
cmc
(bad)
stc
jmp
addr16
jns
inc
stos
inc
adc
mov
add
(bad)
mov
stos
out
jmp
mov
xchg
sar
pop
sub
jg
pop
clc
jg
sub
cmc
jg
mov
aaa
lods
xchg
(bad)
(bad)
icebp
pop
(bad)
jmp
sar
ja
jmp
sar
push
(bad)
fist
repnz
cld
mov
(bad)
cli
pop
jg
lds
(bad)
std
stc
pop
clc
mov
lds
mov
int
psrld
jg
leave
lods
(bad)
cmp
adc
jg
jmp
(bad)
pop
(bad)
cld
jg
lahf
push
hlt
inc
mov
call
jg
stc
int
mov
mov
aas
dec
(bad)
jg
(bad)
out
(bad)
sti
call
xchg
cmp
adc
dec
jmp
outs
cld
pop
inc
mov
aas
clc
dec
dec
lods
pop
neg
cld
popf
mov
cld
das
dec
pop
inc
add
xchg
mov
jmp
lahf
dec
pop
lock
cs
call
and
arpl
retf
inc
inc
mov
(bad)
ja
movs
sbb
jecxz
jnp
pushf
inc
std
jg
mov
fnstsw
(bad)
cmp
(bad)
cli
xor
jmp
test
pop
movs
pop
mov
mov
xchg
pop
lock
cld
(bad)
(bad)
jmp
bnd
rcl
cld
mov
xor
in
push
aas
mov
add
(bad)
(bad)
jmp
(bad)
(bad)
pop
iret
(bad)
mov
addr16
scas
jg
pop
cld
pop
jle
scas
(bad)
push
inc
jg
dec
cld
aas
mov
dec
int3
lock
inc
jg
daa
push
jg
mov
out
mov
(bad)
imul
(bad)
clc
jg
push
(bad)
in
jecxz
sti
(bad)
cld
bswap
(bad)
scas
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
sub
inc
(bad)
xchg
std
retf
pop
daa
retf
idiv
sub
inc
outs
inc
cmc
jg
out
and
sub
push
sti
pop
std
cs
push
mov
pop
clc
jg
xor
jg
jmp
mov
int
xlat
pop
clc
jg
repz
cli
(bad)
clc
mov
pop
pop
jmp
sti
(bad)
ds
xchg
push
repz
call
test
sti
xchg
aas
clc
push
out
xchg
mov
(bad)
out
(bad)
js
mov
mov
das
sti
xlat
jmp
scas
fistp
sti
mov
jmp
scas
sub
sub
mov
inc
mov
(bad)
call
out
dec
mov
jg
stc
sbb
(bad)
pop
jg
dec
add
stc
(bad)
std
outs
(bad)
mov
loope
cmp
dec
mov
xor
push
lods
and
(bad)
adc
fdivr
mov
std
retf
xor
ret
hlt
aas
cld
aad
lds
(bad)
fistp
aas
clc
lahf
push
sub
in
(bad)
mov
pop
(bad)
lahf
outs
or
mov
addr16
popf
nop
jbe
push
jg
leave
sbb
push
icebp
paddd
or
scas
fcomip
pop
movs
fs
jg
xchg
jg
jg
jns
(bad)
std
aas
cld
pop
jg
(bad)
jmp
(bad)
fist
sti
(bad)
sti
mov
(bad)
xchg
(bad)
std
mov
mov
jg
cld
inc
(bad)
std
adc
idiv
jmp
jg
lahf
call
jg
push
outs
inc
dec
pop
jmp
xor
idiv
aaa
jle
push
mov
imul
(bad)
push
xchg
cmp
push
ret
idiv
sti
xor
inc
cmc
mov
jmp
std
pop
std
cmp
xor
clc
adc
or
(bad)
std
scas
jmp
jmp
scas
pop
or
(bad)
push
mov
dec
(bad)
outs
mov
nop
pop
outs
(bad)
mov
jle
out
dec
mov
aas
lock
push
sub
(bad)
cld
movs
jg
aas
repz
(bad)
out
mov
aas
cmps
mov
(bad)
stc
mov
(bad)
push
(bad)
(bad)
addr16
mov
sub
jmp
mov
jg
(bad)
(bad)
cli
jg
pop
jg
push
inc
inc
mov
(bad)
aas
dec
add
aas
clc
aaa
std
lahf
jmp
xchg
sar
(bad)
jmp
std
in
in
call
inc
jg
mov
jmp
lahf
std
(bad)
aam
repnz
(bad)
fcos
loope
cmp
lods
jmp
(bad)
cld
retf
pop
cmc
fldcw
and
sar
(bad)
out
push
scas
push
inc
lock
adc
ret
das
stc
outs
sub
div
(bad)
lahf
jg
pop
clc
pandn
(bad)
lds
lock
cmp
(bad)
in
pop
stc
mov
stos
jg
pop
ss
pop
(bad)
fwait
(bad)
sti
(bad)
clc
icebp
call
iret
aas
std
(bad)
(bad)
daa
mov
aaa
dec
in
stc
pop
inc
popf
push
aas
clc
scas
cld
pop
mov
movs
(bad)
cli
pop
dec
sahf
in
jg
jg
mov
(bad)
(bad)
out
fucomip
mul
and
lahf
fsub
(bad)
cmp
or
(bad)
jmp
cld
in
(bad)
out
(bad)
dec
stc
cmp
das
inc
hlt
jg
aas
std
jg
int
loop
(bad)
mov
(bad)
(bad)
outs
imul
clc
jg
adc
fistp
jmp
inc
push
jg
adc
jns
pop
jmp
jns
push
std
out
xchg
push
(bad)
aas
pop
call
out
std
xchg
into
(bad)
sti
aas
mov
or
inc
dec
sbb
pop
jmp
(bad)
out
mov
adc
call
mov
jmp
push
dec
(bad)
mov
mov
repz
push
jg
pop
(bad)
jg
inc
mov
push
mov
jg
(bad)
stc
cmps
inc
aas
jge
sti
inc
jg
paddd
jle
(bad)
sti
pop
mov
(bad)
jmp
cld
aas
dec
out
(bad)
pop
jg
(bad)
std
lahf
inc
pop
push
jg
pop
(bad)
jmp
(bad)
aas
jle
(bad)
xchg
std
mov
and
mov
ins
mov
dec
dec
cmp
mov
std
call
repnz
scas
(bad)
(bad)
pop
std
aas
(bad)
sar
(bad)
(bad)
out
xor
(bad)
std
ja
cmp
(bad)
(bad)
clc
paddd
and
fimul
shl
push
(bad)
sub
repz
cld
repnz
(bad)
gs
lahf
std
pop
jle
jg
sub
addr16
(bad)
inc
cmps
(bad)
(bad)
fistp
lods
(bad)
(bad)
mov
div
inc
paddd
jg
jg
dec
dec
aas
mov
xchg
dec
call
jg
gs
scas
(bad)
aaa
jg
pop
dec
mov
(bad)
pop
mov
or
mov
xchg
mov
aas
inc
jmp
(bad)
ud0
(bad)
rep
inc
jg
pop
clc
aas
std
mov
cmps
std
retf
test
je
in
push
(bad)
cli
das
imul
shl
(bad)
cld
das
(bad)
sub
enter
sahf
std
sbb
jmp
pop
push
aas
stc
scas
dec
jg
repz
(bad)
cli
pop
(bad)
scas
pop
(bad)
pop
out
add
daa
jg
(bad)
jmp
cld
pop
call
retf
shl
xchg
cld
lahf
jg
pop
clc
daa
inc
stos
jg
(bad)
sti
pop
clc
mov
mov
test
pop
clc
outs
cld
(bad)
movs
push
mov
std
jg
xchg
xchg
enter
rcr
push
push
(bad)
out
(bad)
cld
jnp
idiv
dec
mov
call
push
mov
stc
imul
mov
jmp
pop
inc
push
xchg
mov
jge
jg
aaa
call
cdq
sti
push
(bad)
add
movs
mov
and
jle
(bad)
jmp
(bad)
fcmovnu
cli
jg
(bad)
jg
fldcw
pop
(bad)
fbld
jg
outs
(bad)
out
dec
lds
cmc
addr16
fistp
cmp
mov
lock
(bad)
mov
pushf
xchg
jb
and
cmp
pop
(bad)
das
in
(bad)
push
retf
cdq
call
test
cli
mov
cmc
sti
inc
sub
(bad)
lahf
and
and
sti
cmp
mov
aas
dec
push
scas
stc
std
dec
jg
jg
paddb
jle
push
scas
stc
cmp
scas
jmp
inc
mov
test
(bad)
jmp
std
cmps
std
(bad)
(bad)
sti
(bad)
cmc
xchg
push
(bad)
stc
aas
clc
jg
jmp
loopne
idiv
stos
jg
ret
imul
(bad)
jg
lahf
mov
call
aas
lock
cld
std
jg
jg
jg
fwait
push
push
jmp
pop
call
fnstenv
scas
dec
sti
jg
(bad)
mov
jle
pop
(bad)
jmp
out
fcomip
(bad)
(bad)
adc
(bad)
out
pop
cld
mov
push
(bad)
cli
call
leave
jmp
dec
mov
pop
jle
pushf
les
jg
(bad)
mov
push
inc
jmp
lahf
inc
loope
das
sti
imul
stc
iret
call
(bad)
sti
aas
std
cwde
push
pop
(bad)
jecxz
(bad)
pop
jg
gs
stos
jmp
pop
cld
pop
jle
(bad)
cli
jmp
sti
pop
(bad)
out
ret
(bad)
std
jg
mov
cld
idiv
push
push
jmp
jmp
cld
adc
add
not
lahf
push
pop
inc
fiadd
pop
(bad)
addr16
pop
clc
daa
(bad)
(bad)
jmp
out
icebp
idiv
outs
pop
pop
clc
lahf
inc
(bad)
in
ja
pop
dec
jg
jecxz
nop
xor
mov
(bad)
mov
jmp
push
(bad)
(bad)
out
scas
clc
xor
scas
jmp
stc
mov
jmp
mov
scas
jmp
push
idiv
dec
dec
mov
int
clc
(bad)
(bad)
in
scas
cld
mov
lahf
mov
inc
(bad)
sti
aas
std
gs
(bad)
std
mov
outs
cld
mov
loopne
clc
jg
and
outs
dec
retf
pop
jmp
out
inc
ds
test
(bad)
jmp
cld
add
repz
call
cmc
(bad)
std
retf
out
(bad)
jmp
jnp
idiv
(bad)
jg
cmp
mov
cmc
idiv
fistp
push
mov
(bad)
outs
add
jg
xchg
lahf
(bad)
mov
push
test
sub
mov
lock
jg
inc
mov
(bad)
pop
shl
push
loopne
(bad)
cs
cmc
xlat
std
cmp
mov
cld
aad
(bad)
mov
push
pop
mov
dec
jg
inc
fbld
push
idiv
pop
jg
(bad)
jmp
aas
sti
cmps
sub
outs
inc
fcomip
(bad)
cld
sti
inc
(bad)
clc
outs
cld
fild
icebp
fbld
mov
(bad)
and
lods
pop
inc
lods
div
lods
add
call
sti
paddb
mov
xchg
call
aas
lock
(bad)
cli
stos
jmp
sbb
sar
mov
pop
fdivr
sti
push
cld
mov
ja
mov
mov
inc
outs
sti
jg
sar
adc
(bad)
jmp
(bad)
jg
idiv
(bad)
jmp
cmp
mov
push
mov
mov
loope
(bad)
lahf
cld
cs
fist
std
(bad)
call
call
not
xlat
cld
pop
jle
jg
adc
ins
(bad)
out
jg
idiv
aad
jmp
cmp
xor
mov
cli
scas
push
les
inc
test
out
xchg
add
call
loopne
jle
(bad)
jle
sub
(bad)
(bad)
and
idiv
(bad)
jecxz
(bad)
(bad)
mov
push
mov
(bad)
stc
(bad)
jg
out
loopne
repz
fcmove
inc
jg
idiv
jmp
in
jmp
mov
(bad)
lds
test
imul
out
(bad)
cmp
mov
(bad)
jmp
std
pop
jg
dec
out
std
cmps
(bad)
movs
idiv
cmc
push
(bad)
mov
xor
icebp
xor
cld
aas
inc
mov
lock
stc
jnp
out
jmp
idiv
or
cmp
sar
(bad)
fcomp
hlt
pop
std
push
push
fisttp
fdivr
loopne
call
push
lahf
dec
sbb
dec
jge
test
jecxz
stc
(bad)
push
jg
(bad)
std
jg
pop
call
adc
jmp
cmp
daa
(bad)
jmp
call
pop
inc
mov
repnz
jle
loope
(bad)
jg
idiv
cli
pop
jg
(bad)
sti
jg
xlat
inc
jmp
aas
(bad)
mov
loop
(bad)
aas
call
mov
(bad)
dec
(bad)
sbb
jg
jmp
loop
jge
idiv
lahf
jmp
push
(bad)
and
icebp
sub
xchg
jg
fbld
adc
mov
jmp
dec
jg
in
jle
jg
fbld
dec
std
(bad)
(bad)
and
jnp
mov
lock
jge
(bad)
(bad)
sar
sar
(bad)
lea
mov
(bad)
aas
repz
dec
adc
std
push
mov
(bad)
mov
movaps
mov
aas
dec
jmp
jb
mov
std
lods
(bad)
pop
push
add
fistp
rol
stc
pop
xchg
out
dec
jle
(bad)
in
aas
cld
aas
dec
mov
popa
dec
jecxz
movs
nop
out
inc
dec
(bad)
stc
outs
cld
(bad)
mov
pop
mov
jle
push
aaa
jg
pop
jae
int
jae
xor
aas
sub
jmp
movs
stc
adc
out
jg
jg
push
mov
sub
push
scas
clc
sbb
xor
lods
je
and
mov
mov
dec
(bad)
xchg
int3
movs
inc
mov
pop
jg
(bad)
jmp
cmp
jg
pop
repnz
(bad)
(bad)
leave
outs
cli
jg
cld
pop
(bad)
(bad)
idiv
icebp
pop
ret
xor
(bad)
call
lahf
dec
mov
out
pop
icebp
jg
retf
mov
pop
push
sti
mov
(bad)
cld
jmp
repnz
(bad)
jg
cld
mov
std
call
jg
paddb
pop
(bad)
(bad)
call
std
mov
push
neg
(bad)
jnp
mov
sti
out
imul
jecxz
jge
scas
cld
mov
rol
mov
dec
je
aaa
clc
mov
push
fsub
out
jmp
sti
out
dec
mov
iret
jmp
aas
clc
(bad)
(bad)
std
(bad)
in
call
aas
clc
jg
cmp
cmc
outs
inc
mov
dec
gs
test
iret
(bad)
addr16
push
aas
clc
gs
(bad)
cmps
call
dec
cmp
idiv
pop
sti
dec
push
mov
std
cmp
nop
xchg
jle
iret
pop
cld
jg
sub
loope
mov
(bad)
pop
jg
test
mov
cli
pop
dec
imul
aas
cs
out
(bad)
cld
(bad)
(bad)
fisttp
jg
jb
sub
inc
add
scas
inc
(bad)
(bad)
(bad)
xor
mov
loopne
lock
jmp
cld
retf
(bad)
pushf
(bad)
sti
outs
cld
ins
inc
pop
jns
inc
clc
dec
loope
jmp
mov
lock
jmp
std
cmp
das
std
cmp
dec
int3
jg
paddd
lock
clc
sub
pop
or
sub
(bad)
std
cmc
jg
inc
aad
dec
mov
cld
aas
inc
push
push
(bad)
sti
push
(bad)
sti
dec
push
sahf
mov
jmp
xchg
lods
sar
inc
imul
push
jmp
mov
scas
movs
jl
push
clc
icebp
pop
cli
paddd
mov
jmp
int
aas
dec
(bad)
jno
(bad)
inc
inc
mov
iret
inc
mov
(bad)
jge
fdivrp
lock
(bad)
jg
repnz
fdivrp
scas
call
mov
jmp
jg
out
stc
cmp
scas
pop
xchg
lea
mov
repnz
stos
push
gs
dec
push
icebp
pop
(bad)
pop
call
mov
add
pop
sub
cld
scas
push
sub
pop
cld
lahf
jmp
pop
clc
iret
cld
sub
lock
fscale
addr16
call
out
(bad)
std
pop
(bad)
mov
dec
stc
mov
dec
cld
mov
paddb
inc
lods
mov
inc
(bad)
in
aaa
std
mov
retf
mov
iret
jnp
lahf
inc
stc
push
daa
xchg
into
inc
push
jg
ja
sti
mov
jmp
dec
dec
es
(bad)
std
pop
dec
push
xor
paddd
(bad)
jmp
mov
in
cli
das
(bad)
fistp
jg
outs
dec
(bad)
jmp
std
pop
jg
jmp
call
(bad)
mov
(bad)
std
pop
inc
jmp
mov
call
mov
(bad)
jae
and
rep
(bad)
lahf
push
call
aas
sti
jnp
dec
push
dec
jmp
sbb
(bad)
jmp
pop
jge
jg
mov
loop
fistp
pop
clc
(bad)
(bad)
(bad)
(bad)
pop
clc
jg
fdivr
std
out
(bad)
fnsetpm(287
cmp
fcomp
adc
std
(bad)
sti
(bad)
cli
std
push
aas
lock
(bad)
movs
mov
dec
retf
ss
push
das
xchg
not
jg
ins
jmp
(bad)
sti
ja
scas
fild
jg
lods
push
inc
popa
enter
(bad)
out
fcomip
(bad)
(bad)
adc
movs
repnz
xor
jg
dec
dec
scas
aas
out
cld
cmp
fbld
aas
std
add
daa
or
lds
scas
(bad)
mov
sti
jg
jg
retf
inc
pop
cmc
jnp
mov
fdivr
test
clc
dec
cld
(bad)
rcr
sti
jg
das
jg
outs
cmc
pop
push
retf
(bad)
xor
(bad)
sub
dec
inc
jb
jnp
cmp
(bad)
std
aas
(bad)
sar
nop
push
std
dec
adc
cld
pop
aam
(bad)
(bad)
(bad)
aad
idiv
(bad)
mov
loope
clc
jg
sub
in
clc
das
xchg
push
and
cld
lahf
cld
pop
sub
clc
sti
(bad)
out
jg
outs
movs
push
mov
mov
cmc
mov
gs
ret
out
jg
pop
clc
cmp
xchg
aas
lock
(bad)
(bad)
out
(bad)
jg
cmps
jg
pop
jae
sbb
jb
test
aas
clc
pop
cld
dec
inc
jmp
repz
lock
pop
(bad)
mov
jmp
aas
std
jg
inc
jg
iret
shl
mov
push
(bad)
jg
clc
(bad)
clc
imul
repz
movs
sub
das
push
dec
(bad)
cld
out
inc
jmp
pop
clc
mov
jg
mov
lds
sti
cmp
mov
cli
aas
mov
inc
pop
std
cmp
pop
cmp
sti
(bad)
(bad)
lock
std
xor
(bad)
push
cld
retf
(bad)
and
test
idiv
lock
std
mov
outs
jmp
adc
cld
jle
out
clc
retf
dec
(bad)
jmp
cli
add
outs
cli
jg
stos
push
pop
(bad)
jg
out
adc
(bad)
dec
(bad)
jmp
jle
in
or
(bad)
in
(bad)
test
jg
arpl
loope
mov
ss
jg
jg
lock
push
xchg
push
cld
aad
out
icebp
(bad)
cmp
pop
jmp
(bad)
sti
(bad)
std
mov
cmp
mov
jmp
cld
cmp
cmc
jg
jmp
(bad)
mov
mov
ud0
aas
jg
(bad)
std
lahf
rcr
jg
aas
clc
retf
call
push
paddb
pop
pop
outs
clc
pop
jmp
in
sti
mov
jg
or
sub
icebp
push
mov
aas
dec
mov
mul
xlat
call
cmps
jmp
(bad)
outs
inc
mov
std
xchg
jmp
movs
call
mov
(bad)
out
jg
idiv
das
jg
loop
cld
mov
(bad)
cld
retf
jg
jmp
xchg
cld
cmp
lahf
clc
stos
repz
aas
cld
pop
jle
jg
stos
out
pop
cmps
int3
in
push
mov
(bad)
std
sti
std
pop
in
jge
jg
add
(bad)
(bad)
cmc
inc
pop
std
mov
(bad)
std
pop
dec
(bad)
in
mul
lods
(bad)
out
push
call
out
icebp
jmp
mov
mov
std
push
ja
jg
cmp
out
imul
cmp
cmp
(bad)
push
(bad)
mov
and
mov
mov
mov
mov
scas
movs
fsincos
outs
inc
pop
cmc
out
fistp
scas
jle
out
dec
pop
std
scas
(bad)
sbb
std
(bad)
sti
xlat
xchg
and
repnz
aas
call
out
cld
icebp
mov
sub
hlt
jg
(bad)
fstp
clc
jg
icebp
in
jge
scas
adc
mov
out
icebp
aas
std
cmps
mov
(bad)
stc
jg
jg
fidivr
sar
sti
fidiv
dec
xor
inc
out
bnd
cmc
pop
(bad)
(bad)
retf
jg
cmps
jg
scas
clc
add
mov
jno
adc
out
push
shl
dec
(bad)
out
(bad)
sti
mov
xchg
push
pop
jle
(bad)
std
pop
inc
push
stc
mov
jg
pop
enter
clc
and
jmp
imul
lahf
idiv
sub
mul
pop
int
scas
jg
jmp
idiv
scas
push
(bad)
xchg
dec
retf
paddb
dec
outs
inc
(bad)
in
push
xchg
or
(bad)
jg
gs
dec
dec
nop
std
add
lock
std
cmp
scas
jp
iret
inc
push
cmp
inc
sub
(bad)
jmp
clc
out
addr16
xchg
mov
jg
sub
push
cli
(bad)
jmp
(bad)
clc
mov
push
addr16
movs
and
(bad)
fucomi
inc
fs
lahf
inc
push
std
sbb
paddb
dec
cld
adc
sub
cmc
outs
push
out
(bad)
(bad)
adc
mov
loopne
and
jmp
stc
je
cld
paddw
sub
repz
cld
xor
call
outs
cld
mov
pop
cld
daa
inc
pop
icebp
jnp
hlt
std
idiv
fistp
clc
sub
aad
aam
aas
clc
jg
das
paddd
movd
repz
enter
jmp
jle
pop
icebp
(bad)
add
jg
xchg
pop
inc
out
idiv
jge
cmp
(bad)
(bad)
xchg
aas
out
(bad)
clc
std
dec
dec
push
push
(bad)
jmp
nop
in
or
mov
sbb
repz
jg
(bad)
dec
mov
jle
sub
jno
clc
call
mov
jae
scas
pop
or
clc
xchg
pop
mov
sar
pop
dec
push
fistp
mov
jg
pop
(bad)
jmp
(bad)
jle
icebp
mov
aas
lock
(bad)
push
inc
dec
ja
sar
jg
adc
stc
aas
jg
in
push
inc
sahf
std
cmp
popf
call
aas
cld
push
(bad)
fistp
(bad)
out
mov
adc
aas
fdivr
aas
call
jne
xchg
fist
(bad)
(bad)
(bad)
retf
or
and
mov
js
jmp
(bad)
mov
repnz
cld
mov
movs
mov
xchg
std
cmp
push
cli
jg
mov
pop
mov
aas
cld
xchg
lahf
shl
(bad)
push
jg
push
ja
xchg
std
aas
cld
cmp
(bad)
(bad)
aas
jle
jmp
idiv
aas
(bad)
cmc
mov
inc
jmp
pop
cld
fistp
data16
xchg
and
adc
out
pop
std
pop
adc
sti
mov
out
xor
push
xchg
mov
(bad)
fdivr
std
stos
inc
pop
std
mov
call
pop
idiv
push
loopne
cli
lahf
jg
pop
stos
sti
add
ja
movs
aas
in
sti
lods
leave
cmps
sahf
(bad)
sbb
(bad)
sti
mov
(bad)
repz
jg
xchg
mov
sub
out
aas
clc
fistp
adc
cmp
(bad)
clc
cmc
jmp
pop
inc
push
pop
cld
aas
inc
repnz
(bad)
xlat
jmp
mov
fcomip
aas
inc
movs
push
mov
dec
jmp
mov
repz
sti
pop
cli
cmp
jmp
or
or
(bad)
jmp
cli
pop
jmp
jno
stos
sub
dec
cmp
mov
mov
shld
push
jg
mov
push
aaa
(bad)
out
mov
in
(bad)
aas
jle
push
ud0
mov
jg
adc
movs
push
(bad)
stos
mov
das
clc
mov
xchg
call
fidivr
lahf
idiv
xchg
mov
inc
fild
stc
mov
repz
stc
jg
sub
pop
std
jmp
ja
xchg
ret
mov
(bad)
pop
std
mov
in
xlat
cli
fbstp
(bad)
push
jg
jg
pop
sub
pop
sub
es
stc
dec
mov
jg
das
cmps
(bad)
inc
shr
icebp
das
jmp
out
(bad)
jmp
mov
fwait
jg
push
push
(bad)
jmp
inc
jg
jmp
div
and
aad
lock
pop
out
psubq
ret
jg
push
inc
xchg
sbb
mov
in
push
sub
cli
lea
pop
clc
jg
icebp
mov
stc
(bad)
cli
das
(bad)
out
pop
std
(bad)
pop
jg
pop
test
jecxz
clc
dec
inc
jg
(bad)
(bad)
idiv
repnz
paddb
out
(bad)
mov
sar
aas
cld
aas
aas
stc
mov
mov
(bad)
jmp
fwait
cld
lahf
paddd
pop
stc
idiv
mov
retf
(bad)
mov
loope
cmc
clc
call
(bad)
(bad)
in
cld
cmps
ds
aas
jg
call
jg
lahf
cli
test
(bad)
aad
in
(bad)
out
mov
push
push
(bad)
fsubrp
(bad)
(bad)
emms
imul
out
(bad)
jmp
jae
jg
test
pop
(bad)
push
dec
jmp
push
mov
(bad)
stc
xlat
(bad)
push
push
out
icebp
jnp
pop
ja
scas
dec
jno
sub
sub
out
call
and
xchg
mov
sbb
cs
pop
mov
and
aaa
jg
jno
fwait
push
jg
add
cmps
mov
xor
call
pop
dec
jmp
(bad)
lods
inc
(bad)
cli
outs
cld
mov
push
inc
psrld
aam
clc
jg
stos
(bad)
(bad)
cld
jnp
(bad)
mov
jg
cmc
stos
dec
jg
iret
stc
xchg
jg
pop
test
add
pop
or
out
call
adc
imul
iret
out
push
cld
out
jmp
stc
int3
(bad)
in
(bad)
clc
mov
hlt
jg
pop
(bad)
fnstsw
jecxz
in
std
mov
shr
jg
pop
clc
push
xchg
push
(bad)
(bad)
mov
jg
xchg
push
scas
mov
sti
aaa
(bad)
gs
jmp
jg
(bad)
(bad)
loopne
cld
mov
jg
and
cld
xchg
mov
jmp
std
mov
dec
cmp
loop
(bad)
jg
stc
icebp
outs
(bad)
mov
leave
cmp
leave
mov
(bad)
std
iret
inc
jg
mov
aaa
add
mov
(bad)
cld
pop
(bad)
call
sar
fwait
xchg
aaa
(bad)
sti
stos
(bad)
std
pop
(bad)
pop
jle
pop
clc
cmps
(bad)
sahf
push
lahf
dec
xchg
loope
out
sti
pop
inc
jmp
pop
(bad)
fistp
(bad)
out
enter
loope
popf
(bad)
jnp
jmp
paddb
jg
shl
lds
dec
dec
std
jg
dec
(bad)
cmc
mov
(bad)
jnp
stos
fist
out
neg
pop
jmp
gs
dec
out
push
pop
(bad)
lahf
jg
push
pop
nop
or
out
mov
call
mov
inc
pop
test
imul
clc
stos
jle
pop
(bad)
xlat
(bad)
sar
jecxz
cld
aas
jg
outs
(bad)
out
mov
add
out
stc
adc
lock
mov
idiv
cli
addr16
call
pop
stc
pop
dec
jmp
jmp
fistp
out
inc
mov
inc
stc
mov
in
jmp
add
iret
(bad)
out
jg
aas
cld
idiv
(bad)
cld
or
(bad)
mov
imul
repnz
(bad)
aas
cld
rcr
jmp
pop
jg
das
cld
cmp
(bad)
(bad)
out
xchg
push
fistp
cld
add
mov
pop
repnz
call
idiv
cmps
jmp
das
fdivr
daa
mov
call
lahf
cld
lahf
std
mov
jmp
inc
(bad)
mov
movs
pushf
int
hlt
daa
mov
push
fdivr
jl
aas
cld
lahf
jg
pop
clc
iret
std
(bad)
mov
(bad)
(bad)
aas
lock
sbb
(bad)
fstp
jns
jg
pop
cwde
dec
mov
das
sti
add
iret
(bad)
paddb
dec
(bad)
fistp
sar
stc
jmp
(bad)
inc
fcomip
out
jb
(bad)
clc
pop
inc
push
(bad)
sar
jle
gs
and
hlt
mov
(bad)
std
(bad)
push
call
pop
clc
stos
push
xchg
jg
dec
nop
push
sar
cmc
jecxz
neg
(bad)
std
mov
idiv
and
aas
lock
cmp
cli
std
dec
or
xchg
repnz
(bad)
lahf
adc
lahf
jg
aad
std
push
jg
mov
or
fwait
cmp
jg
pop
xchg
inc
(bad)
das
(bad)
out
jg
pop
and
sar
loope
cli
adc
or
ret
push
jg
pop
stc
jmp
pop
cld
daa
(bad)
mov
repnz
(bad)
loop
(bad)
xor
sar
iret
cld
mov
(bad)
(bad)
aaa
scas
enter
(bad)
out
(bad)
std
pop
call
jmp
jb
(bad)
fnstcw
inc
pop
cmc
mov
push
sbb
out
push
xchg
jb
push
out
icebp
jg
sbb
jg
add
out
fistp
cmc
pop
or
enter
inc
pop
cli
jnp
out
mov
or
xor
pop
std
test
(bad)
(bad)
mov
(bad)
cld
daa
push
xchg
jg
(bad)
jmp
fdivr
in
aam
shl
das
(bad)
cs
scas
(bad)
aaa
leave
fwait
cli
aaa
inc
(bad)
jmp
jg
or
clc
pop
push
mov
jmp
(bad)
stc
mov
jg
fsub
aas
cld
jg
mov
shr
pop
jmp
jg
jg
stos
aas
xchg
(bad)
in
pop
std
cmp
loop
repnz
(bad)
push
imul
scas
jmp
jns
(bad)
fdivr
dec
sahf
cli
out
dec
adc
push
leave
pop
clc
inc
xchg
sti
sti
movs
jg
(bad)
sbb
push
jmp
cmps
cld
mov
push
ja
aas
inc
jmp
(bad)
cli
lods
imul
push
out
xchg
std
cmp
idiv
(bad)
cmp
inc
call
leave
es
(bad)
outs
jle
pop
clc
mov
jg
aaa
(bad)
outs
mov
sti
pop
sti
std
call
aad
cld
push
push
(bad)
std
jg
adc
mov
(bad)
std
das
inc
cld
(bad)
call
das
(bad)
aas
(bad)
jmp
cmp
(bad)
sti
pop
mov
dec
(bad)
and
imul
fdiv
or
popf
aas
lock
(bad)
out
nop
jb
jmp
(bad)
std
aas
std
cmp
adc
pop
jg
and
ins
fwait
adc
jg
lahf
cli
pop
push
push
loope
(bad)
mov
push
shr
push
scas
cld
xchg
std
xchg
jg
pop
sti
sti
push
dec
bnd
mov
imul
jmp
jecxz
push
std
cli
aas
jg
jg
jmp
dec
pop
(bad)
mov
aad
bnd
mov
add
sar
cli
(bad)
(bad)
sar
xchg
popf
lahf
cli
aad
sti
jg
jg
mov
(bad)
lahf
hlt
xlat
std
mov
loop
(bad)
(bad)
repz
stc
pop
cld
stos
das
jle
cli
xchg
std
mov
or
daa
(bad)
fstp
pop
cld
aaa
inc
pop
dec
mul
pop
cld
out
inc
adc
xchg
(bad)
fnstcw
inc
pop
std
add
out
sar
cmc
out
std
dec
inc
cli
push
xchg
call
mov
dec
(bad)
aam
or
icebp
jg
(bad)
jnp
cmps
mov
(bad)
test
(bad)
in
xlat
jmp
jg
mov
mov
out
mov
jg
push
icebp
call
in
push
cli
aas
sti
(bad)
out
mov
stos
inc
mov
jg
adc
mov
ret
push
ja
js
icebp
jg
stos
(bad)
out
jg
push
out
jg
(bad)
std
(bad)
cmps
les
push
jb
jmp
jg
in
inc
jmp
pop
cld
aas
dec
push
paddb
inc
jmp
shld
lds
cld
mov
and
dec
jno
(bad)
sbb
mov
test
clc
stos
(bad)
out
pop
cmc
jnp
pop
jg
aas
div
adc
sti
das
(bad)
out
pop
cmc
aas
mov
mov
(bad)
scas
aas
repnz
(bad)
fistp
sbb
fistp
out
sti
lahf
inc
pop
loop
pop
std
pop
mov
jmp
outs
inc
cmp
test
(bad)
fild
idiv
inc
(bad)
fld
jg
mov
fldcw
sti
paddd
jg
(bad)
cld
daa
jg
scas
sti
outs
call
loopne
jg
adc
sbb
xchg
cld
data16
std
out
repnz
std
(bad)
out
pop
cli
lahf
(bad)
fistp
cmc
dec
xchg
addr16
sbb
xchg
xchg
mov
pop
jle
jg
push
jb
pop
mov
repnz
(bad)
mov
push
test
jg
(bad)
jge
(bad)
out
icebp
out
inc
stc
out
repnz
(bad)
xchg
fs
(bad)
dec
(bad)
test
pop
neg
pop
lahf
mov
fnstcw
clc
cmps
sahf
(bad)
out
mov
(bad)
(bad)
push
out
bnd
cld
outs
inc
xchg
in
sti
pop
cmps
(bad)
cld
dec
jg
mov
mov
into
aas
xor
jge
fs
enter
out
push
cwde
mov
les
mov
inc
out
leave
lahf
stc
pop
(bad)
fist
jmp
std
stos
inc
pop
call
pushf
jl
sub
cmps
push
idiv
xchg
aas
call
sti
push
call
mov
mov
popa
jmp
std
adc
jmp
scas
clc
fild
pop
cld
add
cli
pop
cli
stos
(bad)
std
(bad)
xchg
dec
(bad)
jmp
cld
(bad)
inc
scas
dec
movs
pop
bnd
xchg
push
(bad)
stc
stos
push
jg
ja
cld
jecxz
(bad)
dec
(bad)
std
(bad)
std
daa
jmp
scas
inc
sub
in
push
scas
stc
mov
mov
retf
cmc
ret
aas
nop
push
jmp
jmp
stos
jg
jg
xor
out
(bad)
out
(bad)
(bad)
in
loop
hlt
jg
pop
aad
cld
xchg
jmp
jg
pop
(bad)
out
jmp
(bad)
stc
push
(bad)
fwait
push
scas
(bad)
mov
lahf
dec
out
pop
jp
mov
(bad)
pop
clc
das
xchg
(bad)
clc
mov
std
setno
cli
jnp
jno
out
push
jmp
(bad)
stc
mov
pop
repnz
jmp
jg
retf
iret
sti
aad
cmp
ins
out
push
test
xchg
xor
(bad)
jmp
mov
pop
(bad)
mov
clc
(bad)
std
sub
xor
inc
fisttp
int3
jg
movhlps
pop
cld
hlt
push
jnp
out
(bad)
sbb
jg
in
cmc
out
std
mov
(bad)
mov
jle
(bad)
pop
pop
cld
daa
push
push
pop
(bad)
(bad)
in
dec
or
xlat
jmp
or
jmp
jg
mov
neg
(bad)
jg
outs
dec
pop
fwait
aam
scas
cli
ins
sub
hlt
(bad)
push
push
pop
clc
jg
xor
scas
mov
push
daa
mov
(bad)
std
sub
cmps
in
retf
aas
sti
aas
push
outs
mov
lods
(bad)
mov
jmp
stc
pop
(bad)
sti
out
xchg
shl
dec
push
idiv
mov
mov
pop
(bad)
lahf
(bad)
mov
(bad)
(bad)
adc
aas
stc
pop
(bad)
stos
fcomip
lahf
cli
paddd
(bad)
jg
and
out
sbb
(bad)
out
cld
pop
cld
aas
jmp
aas
lock
(bad)
sbb
neg
jecxz
(bad)
mov
call
(bad)
push
cld
test
push
out
sahf
std
das
pop
pop
std
jae
jmp
and
jg
fwait
es
scas
inc
jg
mov
mov
push
(bad)
mov
cmp
jg
push
std
lahf
call
scas
cld
ud0
aas
dec
xor
idiv
mov
movs
push
(bad)
jmp
idiv
cli
cmp
jg
outs
and
cli
jg
fistp
jg
mov
test
bnd
aas
cld
int3
scas
cli
imul
out
std
jmp
out
dec
call
adc
aas
std
aas
cld
mov
retf
aas
lock
fist
cmc
dec
sti
ja
mov
(bad)
pop
cld
cmp
jmp
(bad)
pop
clc
jg
cmp
cmc
out
idiv
mov
mov
(bad)
mov
sub
sti
aas
(bad)
out
mov
dec
xor
push
repnz
(bad)
mov
lahf
fdivrp
mov
(bad)
(bad)
adc
(bad)
sti
iret
stc
push
mov
out
(bad)
call
in
push
out
out
cld
pop
fnsetpm(287
(bad)
cld
std
push
outs
cli
jg
xchg
scas
cld
or
out
test
ins
mov
out
push
mov
pop
movs
add
cld
add
out
(bad)
cli
idiv
gs
jg
mov
cmps
jg
lods
dec
cld
xchg
mov
fidiv
(bad)
cld
gs
lahf
dec
cmp
mov
jmp
aas
inc
retf
aas
adc
adc
call
das
(bad)
imul
jg
retf
(bad)
out
call
(bad)
std
add
push
and
aas
clc
mov
ror
(bad)
cld
aas
cld
repnz
mov
sar
loope
or
leave
mov
(bad)
(bad)
(bad)
cs
out
cld
jg
mov
std
(bad)
jp
jg
in
jle
ja
sar
(bad)
(bad)
lahf
jg
jg
xlat
and
jmp
inc
dec
into
inc
(bad)
jmp
(bad)
aas
inc
jmp
(bad)
(bad)
mov
pop
and
arpl
(bad)
sti
(bad)
(bad)
mov
push
inc
jl
mov
shr
std
cmc
push
aas
sti
pop
xchg
lahf
stc
sti
std
outs
jg
sbb
call
aas
jge
or
stc
gs
iret
aas
repnz
cld
ja
int3
(bad)
sti
aas
mov
in
push
jo
(bad)
cwde
mov
pop
inc
cld
(bad)
jg
(bad)
mov
imul
sti
inc
div
shl
mov
xchg
push
mov
idiv
sbb
pop
movs
mov
dec
imul
push
(bad)
loop
cmps
inc
push
jnp
cmp
std
cmps
inc
ds
add
adc
mov
outs
stc
xchg
inc
cmp
pop
cld
mov
xchg
(bad)
jmp
inc
jb
inc
cmp
dec
and
psrld
fisubr
dec
dec
out
cld
aas
dec
imul
inc
cmc
sti
xchg
inc
pop
or
sti
jg
in
idiv
stc
jg
fnstcw
and
std
stos
out
(bad)
(bad)
call
and
ins
jg
mov
jle
(bad)
in
xchg
(bad)
sti
jg
push
jg
pop
icebp
aas
cld
cmp
pop
cmc
jg
dec
mov
jg
cwde
out
(bad)
repz
aas
out
(bad)
lahf
(bad)
outs
cli
repnz
clc
mov
(bad)
out
(bad)
(bad)
pop
cld
aas
aas
(bad)
repnz
inc
pop
(bad)
pop
(bad)
gs
jge
jg
cmp
jmp
(bad)
(bad)
das
pop
(bad)
fnstsw
(bad)
pop
lods
fist
xlat
ja
cmp
jg
pop
dec
jg
aas
(bad)
pop
dec
out
(bad)
mov
stos
push
pop
inc
dec
adc
std
cmp
call
paddd
jmp
(bad)
stc
mov
ds
es
cmp
mov
imul
and
jecxz
inc
call
aas
adc
(bad)
(bad)
jmp
(bad)
mov
scas
(bad)
jg
pop
mov
push
mov
jb
jmp
xchg
call
mov
dec
pop
(bad)
scas
mov
jmp
fs
jg
ja
(bad)
mov
jmp
outs
aad
fdivr
cmc
scas
inc
stos
jg
pop
cli
mov
mov
jg
aas
(bad)
repnz
dec
imul
or
pop
rol
arpl
sub
dec
mov
arpl
(bad)
jmp
(bad)
aas
sub
imul
(bad)
out
adc
cld
jnp
scas
lds
repz
push
xor
loope
aas
clc
imul
mov
(bad)
out
(bad)
in
iret
(bad)
mov
(bad)
aas
dec
xor
jg
aaa
jmp
lahf
icebp
outs
std
xchg
push
mov
(bad)
aaa
(bad)
fwait
jg
jg
aas
(bad)
outs
mov
push
sub
aas
(bad)
stos
call
pop
cld
pop
jg
push
aaa
mov
push
jg
loope
std
pop
dec
jo
dec
stos
(bad)
in
sti
call
pop
inc
push
cmc
stc
pop
clc
(bad)
dec
add
into
pop
stc
daa
(bad)
(bad)
retf
jg
std
stos
jmp
hlt
std
pop
cld
stos
fcomip
das
cld
aas
inc
(bad)
in
(bad)
xchg
jle
push
jg
movs
push
aas
clc
lahf
fdivr
aas
repnz
in
das
sti
aas
inc
push
(bad)
(bad)
outs
jg
(bad)
sti
xlat
(bad)
mov
push
jmp
(bad)
dec
pop
(bad)
mov
pop
(bad)
scas
call
cld
and
or
(bad)
mov
repz
inc
push
aas
lock
cli
add
and
out
sub
and
(bad)
(bad)
out
dec
(bad)
mov
(bad)
(bad)
fcmovnu
clc
mov
(bad)
fild
outs
cli
jg
dec
mov
aas
std
cmp
daa
ret
add
xchg
inc
pop
stc
pop
(bad)
pop
ja
out
(bad)
xlat
std
mov
push
scas
cld
aas
enter
inc
mov
pop
test
aas
cmc
paddb
mov
inc
push
out
push
mov
(bad)
clc
jg
xchg
pop
dec
repnz
(bad)
out
push
mov
xchg
jmp
icebp
(bad)
(bad)
xlat
(bad)
sar
jg
pop
ds
jmp
jmp
cmc
jg
or
loopne
repz
(bad)
pop
dec
stos
jmp
bswap
(bad)
daa
(bad)
out
pop
cli
(bad)
std
(bad)
ret
(bad)
jmp
std
pop
sub
repz
fist
inc
sti
mov
std
arpl
and
pop
(bad)
aas
std
(bad)
rcr
clc
mov
(bad)
jnp
ins
push
pop
lock
pop
(bad)
std
aas
clc
retf
mov
(bad)
xchg
rcr
in
fs
(bad)
out
push
pop
clc
jg
cmp
idiv
jg
jmp
inc
pop
cli
pop
inc
aas
cmc
jg
scas
mov
dec
lahf
cmc
jg
lahf
push
push
(bad)
in
cmp
(bad)
mov
lock
stc
in
out
cmc
loopne
movs
mov
fcomip
(bad)
jp
mov
popa
jmp
pop
lock
sar
mov
call
std
in
std
stos
(bad)
out
(bad)
in
pop
call
call
ret
je
ja
cmp
cmc
jmp
idiv
sbb
out
pop
call
fcomip
jg
pop
mov
(bad)
(bad)
ins
(bad)
out
call
out
cld
push
dec
notrack
sti
dec
dec
aas
repnz
inc
repz
jmp
cmc
xchg
ror
push
movs
mov
mov
cld
mov
scas
clc
retf
jle
(bad)
cli
stos
pusha
ins
dec
(bad)
dec
sti
(bad)
out
mov
(bad)
fbstp
(bad)
mov
out
repz
push
adc
jne
jg
es
jg
movd
lahf
cld
pop
jg
(bad)
jns
pop
cld
daa
out
push
push
lock
cld
mov
outs
stc
std
(bad)
dec
sar
fwait
jl
push
scas
and
cld
push
in
xchg
jmp
(bad)
out
jg
ja
push
imul
std
dec
(bad)
clc
mov
(bad)
out
aas
stc
jg
fwait
ja
push
inc
(bad)
sti
mov
push
aas
stc
mov
sub
(bad)
inc
pop
(bad)
(bad)
sar
out
(bad)
std
pop
cld
aas
(bad)
fcos
jmp
and
stc
idiv
outs
jmp
das
jge
sar
test
(bad)
lahf
stc
xchg
fwait
push
repz
cli
std
aas
(bad)
ja
inc
sti
pop
inc
sub
stc
repz
stos
std
das
stos
mov
clc
das
(bad)
out
push
scas
std
mov
outs
jmp
jle
push
std
(bad)
js
out
std
mov
cli
mov
(bad)
(bad)
dec
pop
dec
adc
scas
cli
xchg
jmp
ja
out
jg
and
aas
lahf
mov
inc
in
dec
mov
fistp
fist
neg
(bad)
sti
add
(bad)
push
mov
aas
cmc
out
dec
xchg
push
lahf
jle
(bad)
sti
cmps
(bad)
fucomi
icebp
push
xchg
inc
repnz
(bad)
pop
mov
cld
cmp
pop
sti
pop
(bad)
fwait
dec
lahf
clc
jg
xchg
cmc
dec
dec
pop
push
jl
stos
inc
(bad)
sti
scas
cld
mov
cli
aas
mov
pop
(bad)
jp
sub
mov
idiv
pop
(bad)
scas
jmp
aas
clc
retf
jg
jmp
repnz
push
pop
(bad)
stos
pop
(bad)
mov
(bad)
(bad)
repnz
mov
pop
jg
jg
iret
inc
ins
(bad)
xchg
out
(bad)
lahf
mov
(bad)
out
jg
out
movs
enter
mov
mov
scas
cmps
js
pop
(bad)
mov
(bad)
sar
jmp
inc
jmp
retf
call
(bad)
jg
cmc
dec
mov
out
repnz
jle
outs
stc
pop
(bad)
lahf
lahf
inc
jg
idiv
jp
jg
neg
ud0
pop
inc
stos
cmp
sti
aas
(bad)
fnstsw
lock
and
(bad)
cli
pop
call
inc
loop
dec
mov
mov
lahf
nop
loope
push
sti
pop
(bad)
scas
fucomip
mov
out
not
(bad)
lahf
mov
push
inc
aas
clc
jg
daa
mov
iret
jg
paddb
movs
mov
outs
call
pop
xchg
ja
pop
cld
(bad)
in
pop
dec
mov
aas
inc
xchg
(bad)
jg
outs
jg
mov
stc
rsqrtps
dec
pop
aas
rep
(bad)
(bad)
repz
movs
shr
clc
movs
mov
jg
jmp
pop
std
mov
aaa
std
mov
xchg
(bad)
(bad)
(bad)
jge
jg
inc
pop
(bad)
lahf
mov
(bad)
xchg
jg
aas
jmp
xor
mov
(bad)
imul
jg
das
std
mov
retf
js
inc
push
stos
xchg
and
(bad)
out
pop
clc
iret
push
mov
xchg
(bad)
(bad)
sar
clc
jg
clc
mov
cli
or
(bad)
pop
cld
jg
mov
push
scas
repz
mov
aas
lock
stc
cmp
jecxz
cld
pop
push
mov
test
lock
inc
pop
dec
arpl
cmc
dec
jg
aas
cld
aas
inc
shr
std
scas
inc
pop
inc
popa
out
jg
pop
clc
jnp
das
jg
push
stc
out
icebp
stos
jle
jg
aas
cld
fistp
jmp
arpl
std
push
ja
out
aas
cwde
mov
sbb
dec
inc
lahf
inc
jmp
out
call
mov
aad
clc
jg
sub
xchg
jecxz
push
xchg
(bad)
sbb
jns
mov
imul
dec
pop
inc
mov
jnp
mov
nop
lods
sti
pop
idiv
aas
cli
lahf
pop
std
pop
jmp
in
(bad)
sti
pop
std
hlt
pop
(bad)
std
sub
repnz
inc
popa
leave
(bad)
inc
in
dec
stc
aas
inc
jmp
(bad)
cli
mov
jg
sbb
mov
lahf
push
leave
jg
jg
mov
jmp
jg
jg
mov
jmp
mov
cmp
dec
repnz
cli
jg
out
mov
mov
jmp
dec
push
in
ja
out
es
(bad)
clc
iret
imul
paddd
jg
mov
sti
lahf
stc
pop
enter
(bad)
(bad)
inc
and
jmp
cli
mov
out
clc
jg
and
cld
sti
push
push
pop
(bad)
jmp
or
(bad)
call
dec
retf
xchg
xchg
scas
sti
aaa
imul
inc
in
dec
aas
clc
retf
inc
cwde
push
(bad)
stc
iret
xchg
pop
(bad)
aad
(bad)
scas
jg
pushf
xchg
call
push
dec
mov
movs
mov
lahf
dec
xchg
loopne
cmps
push
mov
(bad)
jg
sbb
push
pop
cld
icebp
mov
std
jnp
lahf
jg
aas
clc
(bad)
xchg
(bad)
out
dec
aas
inc
add
in
clc
mov
jg
addr16
out
jg
das
cld
push
jg
test
push
scas
test
imul
mov
or
xchg
(bad)
jmp
xchg
or
xlat
idiv
scas
pop
cmc
jg
mov
in
ja
add
(bad)
sar
or
cmc
lahf
js
xchg
shr
jg
jg
mov
sar
retf
dec
stos
mov
stc
outs
xchg
fwait
inc
or
jg
(bad)
(bad)
scas
adc
dec
(bad)
sti
mov
repnz
pop
jg
mov
(bad)
out
pop
lea
sub
(bad)
mov
jecxz
call
mov
xchg
cs
sti
push
push
push
jbe
jg
punpckhwd
clc
mov
call
cdq
(bad)
(bad)
jmp
loopne
pop
jmp
push
addr16
(bad)
cmc
inc
pop
dec
or
out
pop
(bad)
mov
xor
in
and
je
imul
add
jg
stos
jle
aas
lock
dec
sub
inc
push
(bad)
(bad)
aas
jg
(bad)
sti
(bad)
es
inc
adc
outs
sti
paddd
mov
lock
std
lahf
(bad)
fwait
movs
or
dec
(bad)
aas
(bad)
out
jmp
dec
(bad)
(bad)
in
dec
xchg
loopne
std
(bad)
mov
(bad)
xlat
mov
icebp
(bad)
ror
jg
ins
jg
pop
clc
pop
cld
cmp
call
psrld
pop
lock
mov
mov
stos
call
repz
push
jmp
pop
clc
jg
sar
(bad)
mov
(bad)
fistp
mov
pop
std
xchg
inc
mov
(bad)
std
pop
jl
jmp
aas
and
cli
fild
repz
cld
addr16
je
(bad)
pop
inc
(bad)
fistp
(bad)
loope
std
scas
std
cs
fstp
jg
or
cli
mov
xor
retf
aas
repz
cli
xchg
pop
inc
push
stc
pop
sti
jnp
dec
push
aas
clc
jg
cld
jg
xchg
pop
movs
and
pop
out
int3
sub
mov
jle
jg
(bad)
(bad)
mov
jg
sub
(bad)
cld
and
fistp
dec
leave
(bad)
rep
movs
xchg
neg
pop
(bad)
enter
cmp
test
aas
std
dec
sti
ret
jle
out
icebp
jg
inc
jg
scas
cli
sar
inc
mov
(bad)
pop
cli
loop
(bad)
aas
inc
fucomip
scas
movs
pushf
hlt
das
jl
fucomip
clc
aaa
cli
fistp
stc
mov
jg
repnz
jg
fistp
(bad)
cli
cmp
bnd
in
cld
fistp
out
icebp
mov
out
sti
fistp
jg
jae
into
aas
dec
in
dec
mov
ja
(bad)
aas
stc
iret
clc
ret
(bad)
out
jg
sbb
scas
fstp
clc
xchg
jp
repz
(bad)
std
pop
inc
mov
pop
hlt
jg
mov
(bad)
loop
cld
pop
inc
or
jg
stc
cmp
and
mov
inc
mov
sti
pop
cld
cs
out
cmc
pop
dec
mov
(bad)
jmp
cld
cmp
fwait
jmp
pop
cld
sbb
cmp
xor
shl
(bad)
sti
push
fisub
out
icebp
jg
adc
loopne
clc
(bad)
sti
(bad)
and
jg
mov
pop
inc
jmp
loop
sti
aas
dec
pop
push
(bad)
jmp
push
ret
xchg
arpl
out
lahf
jg
out
icebp
aas
pop
std
outs
xchg
sub
add
ud0
(bad)
(bad)
pop
jg
(bad)
std
jg
cs
fucomi
xchg
std
push
ja
mov
inc
stc
mov
cld
pop
cld
pop
jg
mov
fild
sub
dec
mov
mov
dec
xchg
div
mov
jg
fisttp
push
mov
jg
inc
xchg
cdq
es
cld
cmp
rcr
neg
inc
inc
ret
(bad)
jmp
dec
push
out
(bad)
fist
repz
sti
xchg
out
jmp
jecxz
xchg
cmps
lods
cli
aas
(bad)
repnz
out
std
add
fwait
mov
cmc
jg
test
dec
call
shr
jg
aas
stc
out
jle
pop
push
push
sti
out
jle
outs
push
call
fisttp
clc
mov
clc
(bad)
or
(bad)
out
pop
dec
cmps
adc
ret
xchg
adc
int
mov
(bad)
out
outs
std
or
idiv
pop
clc
scas
adc
fist
jecxz
loope
call
out
cmc
(bad)
xchg
pop
cld
mov
inc
(bad)
pop
(bad)
xchg
jg
outs
icebp
jmp
fistp
call
(bad)
cld
idiv
idiv
call
pop
clc
aaa
xchg
and
adc
xchg
push
mov
inc
repnz
(bad)
cmps
(bad)
out
pop
jno
jg
ror
std
leave
push
dec
jnp
(bad)
dec
mov
ret
div
push
inc
jnp
pop
dec
lahf
stc
cli
(bad)
clc
out
jg
push
aas
pop
std
cmp
adc
push
pandn
outs
inc
pop
inc
jmp
push
push
jp
pop
clc
add
aas
cmp
fnstsw
(bad)
sti
aas
scas
(bad)
scas
pop
stc
jg
rcr
(bad)
cmp
out
movs
cld
enter
(bad)
push
mov
dec
and
int
fld
push
and
(bad)
ds
(bad)
scas
mov
out
(bad)
cs
jmp
dec
mov
out
std
(bad)
inc
gs
inc
(bad)
(bad)
repz
pop
clc
fwait
es
(bad)
std
iret
arpl
jmp
cld
and
ret
aad
cli
ud0
ror
loopne
cmc
pop
sar
sar
inc
into
imul
outs
jg
das
std
pop
loope
call
pop
and
ret
inc
jmp
idiv
aas
mov
adc
jl
jo
mov
in
and
repnz
fistp
jg
pop
inc
(bad)
fimul
add
imul
dec
ja
out
pop
cld
and
push
stos
(bad)
out
mov
std
pop
adc
repz
(bad)
cli
pop
mov
out
(bad)
mov
imul
push
idiv
(bad)
ins
jg
fst
out
jle
jmp
outs
and
(bad)
mov
jg
lahf
adc
jg
add
loope
(bad)
push
cld
test
(bad)
pop
cld
jnp
stos
(bad)
std
cmovl
in
aas
or
out
mov
push
mov
add
xchg
cmp
cmp
inc
jg
(bad)
jmp
loopne
std
aad
loopne
cld
jnp
pop
pop
std
xchg
outs
call
out
repnz
mov
push
xor
in
std
(bad)
mov
(bad)
out
jg
in
lock
xchg
jb
(bad)
ds
imul
stos
pop
cld
pop
(bad)
mov
jb
mov
aaa
inc
jmp
pop
(bad)
(bad)
cli
dec
scas
mov
xchg
pop
cld
jg
mov
stc
mov
jg
mov
add
push
paddb
lods
jecxz
out
(bad)
aas
(bad)
fstp
in
dec
(bad)
push
jmp
movs
test
sar
cld
(bad)
ret
mov
jmp
mov
clc
jmp
mov
shl
(bad)
popf
pusha
retf
and
push
(bad)
jmp
iret
(bad)
cmps
stc
(bad)
clc
addr16
stc
inc
fisttp
(bad)
stc
das
(bad)
pop
jg
aas
clc
xchg
push
(bad)
call
pop
mov
out
and
push
(bad)
pop
jg
aas
clc
fist
(bad)
push
sbb
pop
call
mov
xchg
jge
jg
mov
hlt
aas
lock
(bad)
clc
(bad)
std
pop
std
fist
(bad)
repnz
lock
jp
mov
(bad)
jmp
movs
inc
and
cld
cs
aas
clc
inc
pop
std
sar
sti
aas
cld
iret
mov
dec
sbb
mov
or
loop
cld
cmp
(bad)
sti
pop
stc
cmp
outs
cld
xchg
sub
not
mov
inc
call
inc
aas
lock
cli
adc
out
cli
(bad)
sub
mov
mov
stc
xor
pop
cli
mov
xchg
aas
call
outs
loop
push
neg
repnz
(bad)
cld
xor
pop
dec
pop
clc
out
in
inc
scas
in
das
sti
test
(bad)
(bad)
adc
xlat
push
dec
lock
cmps
pop
mov
punpckhwd
push
daa
sar
(bad)
push
popf
cld
sar
paddb
mov
call
push
(bad)
(bad)
cli
pop
clc
aas
cld
cs
clc
in
sub
retf
jmp
idiv
test
fistp
(bad)
mov
jl
hlt
outs
std
xchg
pop
(bad)
(bad)
mov
mov
and
loope
cld
xchg
retf
out
(bad)
aas
dec
cmps
jecxz
mov
hlt
paddd
jmp
adc
sub
ret
aad
std
(bad)
cld
cs
fstp
push
ds
jg
sub
dec
(bad)
sti
pop
cli
ud0
aas
repz
cld
dec
push
clc
dec
(bad)
fistp
push
(bad)
inc
(bad)
xlat
cmps
xor
aas
cli
pop
enter
(bad)
(bad)
sti
aas
and
bound
aas
(bad)
cdq
jg
cmps
hlt
iret
cld
add
aad
lock
nop
mov
pop
push
fild
aaa
movs
and
jg
mov
outs
movs
adc
cld
(bad)
jg
pop
cmc
cmps
xchg
addr16
mov
dec
ins
icebp
aas
dec
in
push
pop
idiv
inc
add
push
push
(bad)
fistp
jg
pop
clc
jg
mov
(bad)
(bad)
fistp
fcomip
inc
inc
mov
outs
icebp
iret
xchg
mov
out
(bad)
xchg
(bad)
jmp
xchg
fcomip
(bad)
cli
pop
jle
(bad)
stc
out
movs
adc
movs
cdq
sti
pop
(bad)
out
jg
pop
std
cmp
icebp
jg
xchg
mov
(bad)
in
pop
clc
stc
out
cmc
(bad)
std
inc
(bad)
jmp
loopne
cmps
(bad)
sar
jmp
jmp
(bad)
std
pop
inc
(bad)
in
dec
cld
add
dec
jb
inc
mov
aas
push
(bad)
push
push
cli
sar
lods
jg
mov
mov
or
(bad)
(bad)
out
inc
pop
loopne
inc
jmp
aas
std
jg
mov
pop
jmp
out
icebp
lahf
cld
fbld
aad
icebp
mov
cmc
pop
(bad)
pop
jmp
das
sti
pop
jmp
(bad)
stc
mov
(bad)
push
(bad)
fistp
and
jne
clc
jg
xchg
(bad)
(bad)
cli
gs
scas
(bad)
xor
(bad)
dec
sub
xlat
dec
aas
cmc
jg
sti
mov
push
jg
(bad)
xchg
inc
stc
(bad)
inc
das
jmp
cmc
fstp
ret
xchg
add
jmp
scas
jg
mul
push
cmp
std
jmp
(bad)
mov
pop
inc
mov
mul
(bad)
std
loope
std
test
sti
(bad)
sti
pop
stc
imul
sahf
xor
leave
cli
push
out
ins
inc
imul
jecxz
icebp
stos
(bad)
out
(bad)
jmp
cld
movs
(bad)
jmp
(bad)
iret
test
cmp
(bad)
cmps
call
push
paddd
jmp
repnz
movs
and
fcomip
jnp
mov
clc
aas
cld
mov
out
and
les
xchg
dec
and
xlat
push
jg
test
xor
jg
cmp
clc
(bad)
retf
std
cmps
cld
(bad)
pop
cmp
push
ja
xchg
(bad)
sti
das
cld
js
jmp
dec
call
(bad)
jg
loop
das
call
jnp
lahf
pop
(bad)
fistp
jmp
ss
(bad)
in
mov
ror
or
push
jnp
pop
dec
out
repnz
out
and
clc
ja
(bad)
(bad)
in
idiv
idiv
aas
clc
ja
pop
movs
cmp
mov
(bad)
aam
jecxz
daa
(bad)
icebp
aas
inc
add
idiv
fistp
(bad)
cli
ud1
jg
cmps
jmp
lahf
cmp
dec
inc
in
std
scas
jg
pop
pushf
sti
out
pop
not
aas
clc
jg
mov
(bad)
out
(bad)
jg
pop
aad
div
dec
lock
std
lahf
push
jns
mov
pop
jg
push
das
cld
dec
mov
xchg
xchg
dec
cmp
(bad)
paddb
dec
(bad)
jmp
cld
cmp
pop
cld
mov
(bad)
outs
adc
inc
sti
std
fistp
pop
sti
lahf
cld
cs
xlat
inc
inc
(bad)
sti
fild
mov
jmp
(bad)
sar
sub
lahf
scas
jle
lods
lods
pop
cld
fistp
bnd
test
mul
in
jle
daa
lahf
(bad)
out
jg
(bad)
dec
(bad)
mov
cmc
(bad)
jmp
cld
dec
dec
loopne
push
mov
aas
stc
pop
mov
clc
mov
(bad)
fistp
std
int3
pop
clc
(bad)
(bad)
scas
dec
jg
(bad)
sti
pop
sti
inc
inc
jmp
ja
aas
jmp
aas
lock
clc
mov
mov
push
aaa
push
jle
pop
mov
in
cld
ja
mov
dec
enter
idiv
scas
repz
mov
icebp
xchg
(bad)
pop
jg
push
inc
lock
dec
dec
iret
(bad)
std
scas
dec
fistp
clc
fistp
scas
(bad)
jmp
cld
fistp
jo
jle
(bad)
in
aas
stc
mov
in
test
loope
cmc
retf
(bad)
movs
aas
in
cld
add
lea
lock
(bad)
clc
paddd
pop
call
shr
icebp
retf
jg
fucomip
iret
cld
dec
inc
mov
enter
hlt
pop
push
call
jb
dec
addr16
push
(bad)
(bad)
icebp
pop
std
pop
(bad)
std
(bad)
jg
lahf
push
pop
jb
das
(bad)
pop
inc
pop
(bad)
shl
(bad)
cld
ret
push
cmp
fild
inc
leave
popf
mov
call
pop
retf
inc
push
scas
imul
xchg
fwait
cmp
fcomip
(bad)
cli
xor
out
(bad)
jmp
(bad)
adc
stos
jle
sar
push
mov
cli
push
jg
pop
(bad)
cmps
ja
call
xor
clc
adc
pushf
sbb
jg
and
aas
clc
pop
(bad)
mov
push
dec
mov
jmp
jmp
(bad)
std
leave
outs
test
aaa
cmp
ja
add
fistp
aas
lock
inc
push
and
jg
arpl
out
std
(bad)
mov
std
jnp
(bad)
repz
clc
in
std
lahf
shr
hlt
iret
std
pop
(bad)
out
aas
nop
sbb
int3
(bad)
jmp
inc
(bad)
jmp
lahf
pop
std
out
out
jg
seto
call
jecxz
and
icebp
and
xchg
cli
jg
test
jg
(bad)
stc
out
fist
push
mov
cmp
lods
cli
repz
jb
(bad)
addr16
jmp
(bad)
clc
jg
pop
jg
(bad)
std
retf
nop
icebp
sti
scas
inc
pop
cld
out
pop
push
push
pop
sti
add
out
clc
jg
lahf
jg
outs
inc
pop
aad
cli
jg
into
jg
jg
in
pop
inc
pop
call
out
jg
pop
(bad)
mov
(bad)
clc
aaa
(bad)
out
jg
out
scas
(bad)
xlat
(bad)
out
jg
ja
add
out
jg
and
call
dec
(bad)
out
jmp
ja
mov
idiv
test
(bad)
jmp
cmp
std
(bad)
std
aas
lock
cld
ja
test
jmp
daa
daa
jmp
cli
retf
test
pop
cli
jg
mov
cmp
jmp
jg
push
push
cld
cmp
aas
stc
retf
dec
push
jg
jg
jp
test
(bad)
cli
(bad)
mov
cmc
imul
jg
pop
clc
lahf
cmp
mov
cmp
idiv
fistp
aas
lock
std
mov
mov
idiv
neg
ja
js
lahf
inc
(bad)
stc
mov
aas
cs
outs
pop
sar
add
popa
stc
(bad)
inc
pop
icebp
iret
(bad)
fisttp
jmp
lahf
jg
(bad)
std
cmp
pop
(bad)
jmp
jb
sar
sub
(bad)
out
pop
movq
bsf
mov
retf
xchg
(bad)
(bad)
sti
push
std
cmps
lock
jle
jg
adc
push
mov
sbb
pop
dec
(bad)
jg
addr16
out
call
jmp
mov
mov
fisttp
or
outs
cli
paddd
mov
jle
(bad)
in
(bad)
aas
jg
pop
dec
stos
gs
jmp
leave
sti
stc
or
aam
idiv
or
(bad)
aas
hlt
paddb
out
stos
(bad)
mov
repnz
clc
xchg
(bad)
in
(bad)
std
scas
inc
jg
mov
aas
lock
cmps
clc
call
stos
push
xchg
push
mov
jle
mov
loop
stc
ud0
pop
stc
out
jg
(bad)
jg
std
(bad)
jecxz
dec
(bad)
daa
jmp
pop
sahf
std
or
xlat
(bad)
clc
pop
push
and
mov
dec
je
xchg
and
jmp
(bad)
std
daa
std
and
cmp
push
idiv
pop
jmp
pop
clc
jg
xchg
jg
clc
push
out
(bad)
push
sti
inc
mov
fs
mov
lock
std
pop
jg
(bad)
retf
mov
repnz
dec
retf
xor
xor
(bad)
std
sbb
and
sar
xor
cld
mov
(bad)
cld
mov
mov
into
scas
stc
setae
repnz
mov
std
pop
cld
dec
out
push
aam
pop
fdivrp
mov
sbb
out
adc
jg
jnp
pop
jmp
scas
(bad)
and
in
stc
out
(bad)
dec
(bad)
mov
icebp
push
jae
(bad)
call
jmp
lds
call
pop
mov
out
shr
cdq
jmp
fisttp
std
aas
(bad)
mov
adc
push
jg
mov
mov
and
ret
(bad)
sti
paddb
and
ja
push
cmc
aas
std
cmp
and
loope
(bad)
fist
cld
sar
(bad)
(bad)
scas
(bad)
mov
sub
inc
clc
dec
(bad)
out
(bad)
jmp
jg
jbe
push
std
out
jg
jg
idiv
clc
sbb
ret
jecxz
std
mov
aaa
sti
test
inc
mov
loope
ds
call
enter
(bad)
neg
xor
xor
adc
icebp
jg
push
pop
(bad)
lahf
lahf
std
add
jg
das
jmp
std
mov
iret
call
mov
jle
scas
cld
mov
cmp
pop
(bad)
pop
(bad)
lahf
mov
cld
mov
sar
jmp
cmc
jmp
ud0
(bad)
cmc
mov
ret
fucomip
shr
inc
scas
pop
stc
jg
scas
jmp
jg
retf
call
pop
(bad)
outs
dec
jp
test
dec
fstp
xchg
xor
ja
scas
mov
lock
mov
(bad)
stc
mov
dec
cli
pop
jmp
(bad)
(bad)
cld
ins
jmp
sub
ret
(bad)
std
push
xchg
sahf
ret
imul
(bad)
jl
cli
mov
repnz
(bad)
sti
out
xchg
sbb
mov
pop
(bad)
pop
call
aas
clc
(bad)
(bad)
repz
cmc
jg
jnp
pop
inc
call
fstp
sti
(bad)
jg
mov
(bad)
cdq
jg
cmps
in
xchg
movs
mov
push
daa
jle
bnd
push
(bad)
pop
stc
mov
(bad)
(bad)
das
jg
(bad)
std
lahf
(bad)
cdq
nop
mov
lock
cld
dec
call
icebp
das
cld
mov
leave
call
push
in
mov
aas
std
jg
das
pop
in
sar
std
jmp
iret
mov
dec
vpaddd
push
aas
(bad)
das
mov
fcomip
(bad)
clc
out
scas
push
dec
retf
cmp
enter
std
retf
mov
lock
std
jmp
jg
(bad)
clc
cmp
fcmovu
(bad)
jg
cwde
repnz
jle
mov
inc
mov
jle
(bad)
std
ja
and
jg
(bad)
(bad)
pop
mov
jns
jg
xchg
jmp
jg
aas
jge
mov
dec
pop
std
sbb
mov
(bad)
jg
mov
inc
push
mov
call
mov
lock
xchg
jmp
mov
mov
stc
mov
jmp
aas
cld
fwait
mov
jg
sar
imul
jg
pop
clc
daa
in
push
scas
(bad)
fistp
aad
in
(bad)
std
aas
(bad)
xlat
push
push
(bad)
sub
jb
jg
aas
clc
dec
(bad)
fbstp
icebp
push
inc
mov
pop
std
jg
stos
push
(bad)
cld
fwait
(bad)
pop
mov
xchg
rcr
loopne
idiv
jmp
imul
daa
dec
hlt
mov
sti
outs
daa
out
(bad)
clc
fisubr
std
adc
pop
neg
(bad)
outs
(bad)
out
fstp
jg
mov
jg
mov
fnstsw
(bad)
std
mov
cld
out
cld
(bad)
jg
push
iret
push
xchg
loope
cld
mov
rcr
jg
and
loopne
stc
sub
stos
fcomip
ja
scas
jmp
dec
std
lea
push
pop
cld
mov
jg
das
inc
mov
jg
mov
jg
(bad)
(bad)
in
(bad)
lahf
repnz
dec
jg
(bad)
std
imul
in
std
lahf
jg
add
std
scas
cld
xchg
dec
inc
fstp
jnp
mov
cld
(bad)
jno
aas
jle
aas
lock
std
pop
jg
in
inc
jmp
jg
movs
jg
out
jmp
inc
(bad)
jmp
clc
(bad)
sub
hlt
jg
retf
aas
inc
imul
sti
aas
jo
pop
std
mov
sbb
jg
pop
dec
dec
dec
xor
shr
leave
scas
es
jg
lahf
cwde
mov
jg
je
imul
(bad)
fdivr
clc
pop
jmp
inc
lahf
pop
std
rol
iret
mov
jg
(bad)
std
retf
enter
(bad)
lods
fild
(bad)
dec
(bad)
outs
call
jg
(bad)
std
fbld
pushf
cli
idiv
out
pop
std
ja
pop
mov
pop
xlat
(bad)
(bad)
das
std
and
sti
pop
(bad)
std
jg
and
std
(bad)
clc
jg
sti
pop
(bad)
scas
sub
jg
pushf
repnz
(bad)
out
pop
std
xor
jmp
cli
add
or
iret
(bad)
jmp
cld
outs
inc
(bad)
stc
adc
cld
jg
paddb
mov
das
cmps
test
scas
mov
aas
nop
shr
(bad)
std
aaa
(bad)
mov
dec
or
outs
jmp
call
dec
(bad)
out
mov
inc
jmp
into
lods
(bad)
outs
push
xor
out
aas
lock
std
aaa
mov
jmp
push
cmps
(bad)
cmp
in
(bad)
std
jg
(bad)
out
aas
cli
out
and
stc
adc
(bad)
mov
inc
(bad)
std
test
(bad)
jmp
(bad)
clc
jg
pop
mov
dec
enter
inc
sub
aas
lock
and
(bad)
sti
pop
mov
cli
adc
retf
dec
daa
inc
adc
imul
hlt
mov
jg
stos
das
xchg
xor
ins
stc
jg
pop
call
stos
mov
imul
(bad)
outs
ret
cld
pop
(bad)
sti
das
loope
std
(bad)
jmp
pop
movs
test
imul
xor
mov
push
neg
xlat
(bad)
out
jg
jecxz
loopne
and
aas
cld
aas
dec
fcomip
(bad)
cli
xchg
hlt
hlt
push
jmp
push
(bad)
fnstsw
cwde
icebp
pop
cld
aad
cli
cmc
jg
jg
test
shr
dec
(bad)
mov
loope
(bad)
sbb
and
std
and
and
aaa
push
xlat
jg
jg
lahf
(bad)
fbstp
inc
out
bnd
test
(bad)
stc
jg
das
(bad)
mov
pop
(bad)
xchg
pop
repnz
(bad)
jmp
out
retf
push
aaa
std
aas
scas
inc
aas
xchg
pushf
add
(bad)
xchg
(bad)
push
cld
loop
sti
pop
(bad)
cmp
inc
pop
stc
jg
out
jg
push
(bad)
std
stos
mov
mov
fdivr
(bad)
das
(bad)
pop
mov
mov
pop
fs
cmp
jle
call
aas
cld
pop
dec
aas
lock
mov
(bad)
sti
mov
cmc
jg
cli
aas
inc
pop
stc
jg
cld
mov
(bad)
idiv
sar
lock
jmp
(bad)
idiv
std
(bad)
xchg
jg
int
scas
cld
mov
(bad)
sti
mov
loopne
push
out
(bad)
daa
push
sti
(bad)
repz
mov
call
dec
mov
jg
idiv
fwait
jg
mov
paddd
push
pop
clc
mov
pop
(bad)
jg
xchg
mov
sar
outs
std
pop
(bad)
(bad)
mov
hlt
das
(bad)
pop
jg
aas
clc
aas
jmp
loope
cld
ret
jmp
(bad)
stc
sub
clc
(bad)
mov
jmp
bnd
jne
mov
nop
mov
jmp
int
scas
dec
push
aaa
inc
dec
cld
mov
dec
aas
nop
push
mov
into
xchg
cli
pop
mov
jg
adc
pop
dec
sub
cld
xchg
jg
aas
std
jmp
jecxz
jo
pop
clc
jg
xchg
mov
xchg
jb
mov
idiv
sar
ja
iret
pop
cld
xchg
mov
bnd
(bad)
mov
(bad)
stc
sbb
fistp
jg
aas
lock
sub
cmc
jg
xchg
(bad)
fisubr
(bad)
cld
outs
movs
(bad)
in
(bad)
dec
inc
retf
xchg
adc
call
loop
std
push
sub
std
mov
jmp
das
cli
mov
idiv
in
cld
pop
push
fld
cld
cmp
pop
stc
jnp
outs
jg
and
out
(bad)
mov
icebp
sti
pop
dec
dec
push
idiv
aas
cld
fild
jle
(bad)
mov
imul
mov
jg
dec
jg
pop
out
(bad)
cld
repnz
movs
and
cmp
in
mov
aas
lock
pop
(bad)
mov
jle
(bad)
sti
jmp
sti
jg
jmp
std
fnstsw
dec
(bad)
das
cld
push
jg
jmp
dec
cld
ud0
pop
(bad)
jg
pop
call
xchg
call
fcomip
jg
push
xchg
(bad)
jns
sbb
in
jle
jmp
push
pop
std
lahf
(bad)
clc
(bad)
std
retf
(bad)
std
(bad)
mov
bound
ret
mov
adc
icebp
mov
lahf
stc
pop
out
cli
loop
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sbb
(bad)
(bad)
dec
imul
nop
mov
repnz
enter
stc
xchg
inc
jmp
aas
cli
out
push
pop
inc
pop
imul
and
es
pop
dec
cmp
xor
jmp
ja
out
mov
call
idiv
jg
jmp
icebp
pop
dec
jg
pop
repz
(bad)
sti
paddd
hlt
jg
jg
(bad)
fld
pop
push
(bad)
repz
sti
(bad)
aad
neg
cld
ja
sar
pop
cld
imul
dec
icebp
(bad)
and
std
jmp
jg
mov
paddb
idiv
repz
(bad)
test
pop
(bad)
mov
loopne
std
cmp
sti
pop
sti
cmovns
(bad)
stc
pop
cli
jg
(bad)
jmp
pop
(bad)
ja
xlat
jg
jg
addr16
lods
adc
and
idiv
inc
(bad)
out
jg
(bad)
std
xlat
(bad)
push
mov
jmp
(bad)
clc
scas
cld
push
(bad)
sti
(bad)
std
sbb
push
(bad)
cli
pop
inc
jmp
idiv
pop
sub
enter
inc
std
pop
mov
pop
hlt
stos
sub
cli
mov
pop
stc
pop
call
hlt
pop
(bad)
push
(bad)
fcmovnu
dec
adc
scas
jle
ja
in
fcos
std
retf
jg
pop
(bad)
outs
mov
dec
inc
shl
retf
jg
cmps
mov
(bad)
in
jg
(bad)
(bad)
gs
repz
clc
push
cld
in
jg
(bad)
cld
pop
(bad)
mov
das
(bad)
lahf
lahf
std
pop
jg
(bad)
std
(bad)
jecxz
loop
icebp
in
jne
jg
inc
call
(bad)
pop
stc
jg
mov
pop
call
(bad)
std
jg
div
inc
dec
mov
jmp
outs
in
(bad)
cmp
ja
mov
(bad)
jmp
cmc
out
idiv
arpl
mul
(bad)
cld
push
mov
idiv
cld
aas
mov
sar
out
cli
jecxz
(bad)
(bad)
jmp
out
cld
sar
push
(bad)
pop
mov
call
mov
sti
call
in
jns
xchg
pop
mov
dec
cmp
(bad)
jmp
clc
daa
inc
jmp
jg
(bad)
cli
mov
sar
pop
test
adc
inc
pop
dec
out
mov
ret
jg
dec
out
cld
outs
cld
mov
jg
sar
cmc
(bad)
mov
retf
out
push
sub
out
cld
ud0
sar
icebp
out
(bad)
fistp
(bad)
pop
jle
pop
cli
stos
(bad)
out
(bad)
std
loop
inc
(bad)
push
idiv
pop
(bad)
neg
(bad)
(bad)
out
mov
jmp
push
mov
std
das
jg
mov
(bad)
(bad)
out
icebp
stos
(bad)
out
mov
loop
(bad)
aas
inc
xlat
xchg
mov
lock
jg
jg
xchg
jg
jg
sub
push
inc
call
adc
scas
mov
sti
aas
(bad)
outs
inc
(bad)
call
push
aas
cld
mov
arpl
pop
cld
jmp
sub
(bad)
in
(bad)
cld
mov
(bad)
in
aas
cld
aas
jle
pop
stc
jg
retf
jg
jg
fist
dec
cld
aas
inc
pop
std
pop
(bad)
pop
mov
mov
repz
(bad)
cmp
push
call
jg
(bad)
xlat
pop
(bad)
jg
repnz
idiv
hlt
jg
cwde
xor
ficomp
dec
xrelease
and
movs
in
lahf
stc
pop
jg
(bad)
jmp
mov
pop
cmc
ja
pop
jg
inc
scas
in
(bad)
(bad)
out
pop
std
icebp
pop
clc
jg
mov
idiv
lods
(bad)
in
out
call
jle
xchg
cld
das
jg
(bad)
stc
fwait
cld
cmp
(bad)
cld
aas
inc
pop
bnd
(bad)
sti
dec
(bad)
sti
(bad)
mov
jg
push
lock
cld
fistp
inc
pop
mov
std
ja
cmp
jecxz
and
(bad)
aas
jle
xchg
sub
out
(bad)
in
(bad)
cld
push
imul
clc
cmp
cli
(bad)
cli
mov
out
pop
std
out
xchg
leave
and
call
outs
dec
cdq
mov
idiv
iret
das
imul
std
mov
out
icebp
jg
jge
loope
cli
daa
(bad)
pop
aam
movs
jmp
push
std
fucomip
pop
stc
aaa
(bad)
jge
ror
lock
(bad)
and
pop
test
repnz
dec
(bad)
sti
fcmovnu
stc
aas
jle
push
imul
lods
dec
mov
arpl
sub
in
clc
sbb
out
sub
(bad)
jmp
ja
sub
das
cld
jg
clc
hlt
pop
(bad)
(bad)
fstp
dec
cli
stc
(bad)
mov
jmp
call
out
movs
ret
mov
(bad)
and
jg
xchg
and
lahf
std
mov
cmp
cmp
imul
mov
cmp
(bad)
pop
dec
push
clc
sub
jmp
(bad)
cli
pop
inc
jg
paddb
dec
mov
push
punpckhwd
xchg
(bad)
in
aas
std
movq
(bad)
stc
jg
mov
jmp
in
idiv
repnz
(bad)
pop
jmp
pop
sti
sti
call
jg
(bad)
jns
jg
(bad)
mov
jmp
aas
nop
or
out
xchg
std
cs
jmp
(bad)
das
clc
aas
jle
pop
clc
jg
cmp
clc
xchg
push
daa
inc
(bad)
stc
icebp
pop
clc
scas
cld
cmp
jg
sti
jg
push
pop
cs
js
mov
scas
and
scas
mov
xor
jg
mov
mov
scas
(bad)
cli
(bad)
cld
mov
(bad)
leave
(bad)
cli
ffree
call
out
xlat
aas
repnz
(bad)
(bad)
stc
aad
std
jnp
pop
dec
out
mov
sti
pop
jle
cmc
mov
(bad)
mov
icebp
jg
fdivrp
icebp
or
out
jg
jg
adc
std
(bad)
(bad)
mov
jne
loop
icebp
idiv
cmp
(bad)
in
std
outs
adc
mov
pop
mov
lock
(bad)
aas
repz
push
jg
test
jecxz
std
ja
cmp
(bad)
std
mov
jmp
mov
out
out
stc
jge
(bad)
pop
(bad)
aas
cld
sub
jmp
(bad)
fistp
jg
jmp
push
call
pop
sti
scas
dec
jg
xchg
adc
retf
stos
inc
lahf
clc
aas
call
pop
cld
fistp
cmp
adc
fistp
(bad)
sti
(bad)
add
iret
mov
and
lock
addr16
pop
inc
jmp
clc
movaps
addr16
fistp
(bad)
stos
jg
aas
lock
cmp
cmc
jnp
cmp
jmp
scas
(bad)
jmp
pop
mov
push
(bad)
jg
psllw
(bad)
lahf
inc
jg
lahf
mov
dec
jno
outs
cmc
adc
loope
movs
int3
xlat
out
mov
(bad)
(bad)
cld
xor
scas
pop
lock
pop
jg
lods
sbb
(bad)
out
jg
mov
and
inc
(bad)
jmp
jmp
jg
scas
cld
test
stc
jg
sbb
(bad)
clc
aas
aas
(bad)
mov
retf
(bad)
pop
mov
(bad)
sti
out
dec
jmp
push
jg
lahf
stc
sti
jmp
in
(bad)
clc
fwait
adc
out
repnz
(bad)
lahf
inc
aas
call
mov
mov
aas
dec
inc
clc
jg
stos
dec
cmps
(bad)
fwait
adc
(bad)
dec
push
jge
paddb
inc
(bad)
lods
push
add
std
(bad)
push
icebp
aad
std
sub
inc
sub
shl
inc
outs
cli
jg
idiv
(bad)
sbb
out
inc
adc
jg
cmp
pop
stc
cld
xor
out
popf
push
xlat
aas
sti
ins
(bad)
out
jg
paddb
iret
inc
push
scas
std
pop
push
push
ins
neg
xlat
(bad)
mov
jmp
icebp
nop
push
outs
jg
(bad)
std
(bad)
repz
pop
sti
iret
pop
push
jg
aas
clc
(bad)
movs
mov
(bad)
lahf
mov
pop
(bad)
cmps
push
push
sti
call
jg
jns
(bad)
jmp
scas
sti
jg
mov
fwait
mov
push
jnp
pop
mov
dec
and
cmp
jmp
jg
idiv
(bad)
icebp
mov
dec
imul
std
lahf
outs
dec
ins
cld
pop
push
loope
repnz
cld
push
mov
and
sti
dec
pop
push
mov
cmp
sar
paddb
jg
push
(bad)
pop
imul
cld
test
fstp
pop
cld
lahf
jmp
push
pop
jg
push
inc
xchg
mov
std
daa
inc
aas
mov
dec
(bad)
mov
scas
(bad)
mov
dec
ins
jg
(bad)
cld
(bad)
leave
repnz
mov
clc
(bad)
cmp
(bad)
jmp
in
idiv
lahf
inc
push
paddw
call
(bad)
mov
loop
xchg
(bad)
sbb
xchg
movs
pop
lea
(bad)
(bad)
mov
push
cld
xchg
jg
push
shld
stc
jg
neg
cld
outs
inc
in
inc
(bad)
cli
idiv
in
(bad)
push
pop
inc
xchg
(bad)
push
in
std
sti
enter
in
nop
pop
jmp
(bad)
(bad)
jecxz
fild
(bad)
(bad)
cli
in
lahf
cli
sbb
ins
cld
mov
inc
sti
fldcw
std
push
xchg
sar
or
iret
xlat
jg
jg
jg
stos
stos
jg
(bad)
stc
scas
stos
not
aas
cli
jnp
dec
call
out
jmp
loope
lock
clc
pop
fdivrp
cmp
fbld
imul
xchg
shl
cmc
das
sti
mov
mov
dec
or
push
push
fld
out
call
sar
leave
xchg
clc
cmp
push
(bad)
stos
dec
pop
cld
push
adc
xchg
xor
jg
mov
jmp
call
aas
stc
aas
adc
jle
out
bnd
test
jg
mov
hlt
call
stos
enter
(bad)
lahf
mov
(bad)
(bad)
sti
lahf
mov
cld
mov
(bad)
jg
jg
fwait
fs
call
(bad)
xlat
jg
(bad)
(bad)
jae
pop
call
cld
mov
mov
(bad)
jg
fs
aas
call
dec
out
push
sti
inc
mov
outs
inc
pop
(bad)
pop
lahf
inc
cli
adc
dec
retf
push
pop
clc
jg
stos
jmp
pop
ja
lahf
aas
clc
aas
inc
(bad)
lahf
sti
aas
push
outs
out
std
lahf
(bad)
cld
outs
lock
(bad)
call
add
gs
lahf
cld
stos
jmp
fcomip
aad
cmc
mov
scas
cld
(bad)
bnd
(bad)
cli
repz
cld
mov
jg
aas
sti
sbb
fcomip
sti
std
cmps
xchg
fdivr
scas
jle
(bad)
inc
push
xchg
std
movs
push
test
jb
idiv
rcr
jg
outs
jg
mov
mov
cld
sub
jo
jg
or
(bad)
jg
xchg
mov
jmp
jle
fild
jmp
(bad)
scas
mov
stc
mov
jecxz
cli
in
xchg
(bad)
jmp
idiv
jl
cld
repz
(bad)
out
push
aaa
std
aas
jmp
jg
pop
cld
in
dec
pop
dec
leave
push
cld
iret
(bad)
out
jmp
jecxz
cld
aas
(bad)
call
xlat
inc
dec
stc
loop
cli
retf
jmp
pop
mov
(bad)
mov
mov
out
(bad)
pop
ja
scas
push
paddb
inc
(bad)
jmp
movs
and
xchg
push
mov
addr16
xchg
fs
jg
pop
icebp
jg
addr16
sub
out
clc
pop
std
lds
push
mov
dec
cli
jg
sbb
mov
mov
inc
push
xlat
(bad)
mov
out
push
jmp
std
out
mov
mov
out
dec
add
retf
hlt
cmps
push
paddd
fcomip
pop
cli
pop
(bad)
cmc
push
xchg
jg
loop
cli
fwait
inc
(bad)
jmp
sti
sbb
inc
stc
gs
jg
mov
(bad)
sti
pop
clc
jg
mov
(bad)
push
mov
(bad)
fild
retf
out
xor
mov
push
jle
mov
(bad)
fstp
fwait
cld
fistp
aad
clc
dec
pop
std
fistp
call
(bad)
in
std
(bad)
jmp
xor
pop
(bad)
jg
test
iret
cld
mov
lahf
stc
jg
retf
mov
(bad)
sti
push
pop
pop
jmp
inc
jmp
idiv
aas
jle
jg
xchg
(bad)
lahf
jg
aas
clc
dec
(bad)
(bad)
push
push
outs
(bad)
(bad)
xlat
jg
mov
push
push
aas
(bad)
rcr
dec
(bad)
sar
aas
stc
pop
enter
(bad)
cld
cmc
push
aas
cld
retf
jmp
dec
cs
jg
jg
aas
(bad)
fsubrp
dec
dec
(bad)
(bad)
jnp
sbb
cld
push
movs
push
push
and
(bad)
out
sar
cli
push
pusha
xor
xlat
es
lahf
jge
out
jmp
jg
pop
cli
lahf
(bad)
fistp
(bad)
out
sar
(bad)
(bad)
sti
jg
pop
icebp
stc
push
xchg
cld
(bad)
(bad)
sti
pop
sti
pop
(bad)
mov
jnp
outs
jg
das
std
das
inc
pop
std
imul
jg
out
lock
push
(bad)
sti
jg
sbb
(bad)
push
paddw
fdivrp
sti
pop
sti
ud0
(bad)
mov
idiv
pop
jle
(bad)
jmp
and
(bad)
jg
dec
dec
aas
repnz
aas
call
cmp
jecxz
sti
dec
xchg
clc
paddb
push
add
cli
(bad)
std
idiv
jmp
pop
clc
aaa
(bad)
out
lahf
std
cmp
pop
jle
scas
(bad)
movs
jg
icebp
lock
stc
mov
cmp
aas
es
mov
retf
mov
pop
dec
(bad)
aaa
jg
pop
clc
pop
cmp
aas
aas
(bad)
mov
xchg
push
mov
(bad)
ja
(bad)
fnstsw
clc
push
dec
jnp
jg
adc
popf
mov
(bad)
cli
aas
lock
sbb
iret
mov
cs
mov
jmp
(bad)
std
jg
std
mov
cmps
jg
out
(bad)
jg
mov
call
pop
clc
aas
(bad)
sti
push
jg
xor
clc
mov
mov
mov
(bad)
out
aas
movs
dec
jmp
aam
clc
jg
std
push
jg
push
aas
(bad)
push
call
xchg
div
mov
pop
cld
in
stc
pop
dec
test
mov
idiv
addr16
lahf
jg
dec
clc
mov
out
(bad)
(bad)
jg
aaa
in
scas
and
cli
stos
inc
(bad)
sti
dec
clc
add
sub
cli
daa
(bad)
out
jmp
mul
cmps
std
aas
inc
(bad)
in
scas
std
pop
dec
das
jle
(bad)
jmp
cld
cmp
jg
in
mov
(bad)
pop
(bad)
(bad)
aas
clc
cmp
out
(bad)
jge
mov
(bad)
pop
mov
xchg
jmp
mov
mov
cld
xchg
(bad)
(bad)
pop
dec
or
mov
sti
(bad)
mov
(bad)
(bad)
push
mov
call
scas
cli
mov
out
push
lahf
dec
jg
lahf
dec
leave
sar
out
aas
dec
push
icebp
aas
lock
std
(bad)
mov
dec
outs
loopne
call
mov
aas
test
dec
inc
mov
push
call
cld
std
push
scas
and
out
clc
add
push
aas
cld
mov
(bad)
rcl
hlt
outs
cld
outs
jg
push
push
adc
aas
(bad)
fistp
inc
sub
(bad)
pop
cld
xchg
pop
das
stc
mov
pop
(bad)
lahf
jg
jg
jg
ficom
(bad)
std
adc
push
std
lods
push
out
popf
std
addr16
lods
idiv
enter
inc
call
(bad)
cli
adc
ret
push
das
jl
imul
mov
(bad)
sti
aas
clc
std
call
(bad)
aad
lock
cld
jg
std
cmp
aas
clc
std
push
ficomp
clc
aas
jle
in
std
scas
dec
aas
(bad)
in
fild
int3
fcomip
(bad)
cli
or
ret
(bad)
in
iret
and
clc
push
inc
(bad)
stc
shld
(bad)
scas
mov
mov
push
jle
(bad)
cli
in
sti
mov
shr
dec
inc
inc
mov
call
icebp
jg
jecxz
and
pop
(bad)
pop
push
inc
add
imul
loop
aam
aad
iret
mov
iret
aas
xchg
xor
fcos
stc
(bad)
fistp
jg
pop
push
(bad)
in
retf
push
sti
jmp
(bad)
std
stc
aas
clc
pop
std
push
mov
loop
stc
out
(bad)
out
push
retf
xlat
mov
out
(bad)
(bad)
dec
cmc
retf
jle
das
movs
mov
(bad)
push
xchg
in
or
out
pop
sti
loope
dec
xchg
paddb
jmp
retf
paddd
jg
out
icebp
fist
fstp
clc
pop
(bad)
mov
cmc
stos
mov
jmp
fistp
scas
(bad)
cmp
inc
mov
mov
push
and
(bad)
sar
std
sti
(bad)
fistp
fstp
jecxz
mov
adc
jmp
sub
retf
push
pop
push
std
cmp
push
idiv
pop
(bad)
movs
call
pop
jmp
cld
lahf
lahf
cld
cmp
jmp
aas
(bad)
imul
in
popf
jg
loop
lahf
clc
std
(bad)
lods
(bad)
out
clc
xchg
sbb
(bad)
cld
out
push
das
cld
adc
fwait
pop
icebp
leave
pop
repz
cmps
mov
dec
sahf
and
clc
lahf
inc
(bad)
std
jg
movs
jg
aas
push
(bad)
pop
jg
pop
clc
pop
std
jmp
idiv
(bad)
mov
pop
clc
lahf
(bad)
push
aas
in
dec
sbb
(bad)
call
scas
cli
pop
(bad)
out
aas
xchg
fdivr
pop
dec
out
loop
cld
jg
xchg
(bad)
pop
stc
paddd
jmp
(bad)
jge
idiv
(bad)
inc
mov
mov
xchg
ins
stc
push
mov
jg
pop
dec
std
xchg
(bad)
out
jg
outs
movs
test
add
cmps
xor
in
cli
iret
and
(bad)
fldl2e
jg
or
mov
jecxz
mov
jg
lahf
div
in
aaa
std
add
in
mov
(bad)
push
jg
jmp
sub
dec
mov
jg
(bad)
stc
pop
inc
cmp
call
pop
(bad)
mov
aaa
pop
bound
in
aas
dec
sub
pop
std
cmp
pop
clc
lds
daa
mov
icebp
pop
(bad)
(bad)
ins
cmc
mov
outs
cli
xor
daa
add
std
retf
inc
pushf
jg
lods
adc
(bad)
call
(bad)
out
dec
jg
push
jg
(bad)
dec
dec
dec
(bad)
jmp
inc
ss
(bad)
idiv
(bad)
ins
or
dec
mov
(bad)
out
aas
std
mov
std
jmp
lock
cli
jmp
dec
push
outs
movs
and
aas
daa
mov
movs
jmp
cmp
fwait
jle
aas
cli
jg
mov
cmc
out
icebp
retf
inc
(bad)
jmp
(bad)
or
out
dec
mov
jg
sub
mov
jle
jg
jg
xchg
cmps
dec
sbb
xor
hlt
jle
ud0
jg
(bad)
fdivr
mov
sar
repnz
push
mov
pop
dec
imul
loopne
dec
aas
lock
mov
cs
(bad)
das
(bad)
mov
push
inc
aas
lock
(bad)
mov
shr
inc
sahf
fisub
mov
inc
pop
sub
jmp
mov
jg
imul
jg
daa
jmp
add
rcr
cld
pop
lahf
cld
pop
jg
out
icebp
daa
dec
div
pop
clc
ud0
lds
jg
paddd
mov
mov
inc
xchg
(bad)
pop
clc
retf
sub
mov
idiv
aas
ds
mov
aas
stc
std
push
fcomip
xchg
(bad)
stos
(bad)
(bad)
out
jg
in
aad
cli
iret
cld
or
adc
out
jmp
(bad)
fld
jg
bnd
cmps
push
aas
clc
sub
inc
mov
rcl
das
lahf
std
addr16
mov
jmp
jg
pop
std
lea
stc
movq
lahf
stc
jg
mov
loopne
inc
push
in
cld
cmps
jg
pop
clc
jg
mov
(bad)
lahf
sti
jg
mul
ss
push
mov
pop
(bad)
fwait
mov
sub
stc
jg
cmp
fnstsw
cwde
jmp
std
std
call
ret
push
outs
mov
(bad)
std
jg
xchg
daa
inc
mov
sub
stos
jle
(bad)
stc
xchg
jg
jg
das
(bad)
pop
jg
(bad)
std
fist
(bad)
sti
(bad)
std
daa
std
in
cld
jg
mov
out
dec
cld
jg
(bad)
ret
xlat
inc
jg
ja
pop
pop
inc
gs
(bad)
stc
scas
(bad)
pop
(bad)
call
scas
es
jg
(bad)
retf
dec
out
inc
jg
(bad)
(bad)
sar
(bad)
jmp
inc
pop
dec
sahf
(bad)
mov
out
icebp
aas
mov
std
cmp
xlat
out
lock
aas
(bad)
mov
jg
pop
fistp
mov
mov
inc
pop
cmc
(bad)
pop
aas
icebp
outs
(bad)
(bad)
sbb
(bad)
out
pop
jl
jg
jg
mov
das
std
mov
rcr
(bad)
pop
jg
aas
clc
(bad)
fstp
dec
out
push
in
icebp
das
(bad)
(bad)
jg
aas
std
dec
(bad)
fstp
inc
jg
(bad)
ud0
(bad)
(bad)
clc
inc
leave
cmc
cld
fild
xchg
mov
das
stc
push
mov
jg
cmp
paddb
mov
mov
loope
cld
push
jmp
(bad)
std
jmp
adc
(bad)
jecxz
jb
pop
cld
dec
inc
(bad)
std
aaa
cld
dec
out
(bad)
(bad)
push
mov
mul
(bad)
aas
cld
add
out
test
adc
jecxz
mov
dec
idiv
sar
idiv
in
in
pop
clc
scas
(bad)
(bad)
mov
clc
jnp
lods
call
xchg
std
(bad)
call
inc
mov
jmp
out
dec
ins
inc
jg
repnz
jle
out
dec
stos
jmp
(bad)
cld
daa
sub
inc
and
repz
out
pop
lock
jg
and
icebp
xchg
dec
out
push
jge
retf
mul
jb
jle
(bad)
sti
dec
call
(bad)
dec
idiv
mov
repnz
lock
(bad)
push
jg
jecxz
std
(bad)
(bad)
pop
push
jg
retf
dec
pop
dec
retf
xchg
test
xchg
pushf
sar
paddb
lahf
cld
add
inc
(bad)
sti
aas
es
jg
das
jmp
(bad)
loopne
hlt
jg
sar
sar
imul
cmp
sti
retf
jmp
cs
cli
inc
lahf
clc
stos
inc
aas
nop
xchg
clc
inc
jg
aas
(bad)
out
inc
jmp
xlat
cmps
inc
sbb
fs
pop
std
fwait
(bad)
fistp
fisttp
call
mov
cli
aas
jg
das
cmp
push
jg
cmp
loope
dec
dec
sar
jg
ftst
add
scas
dec
hlt
(bad)
jle
pop
cld
mov
das
sub
stos
inc
jg
(bad)
fild
dec
inc
(bad)
std
dec
cld
jnp
scas
(bad)
in
mov
lahf
cld
(bad)
mov
idiv
scas
mov
jg
(bad)
sti
das
call
jg
jg
mov
scas
aas
(bad)
pop
cld
pop
jg
(bad)
jmp
fnstcw
dec
int
mov
mov
in
cmc
out
bnd
stc
add
ret
jmp
aas
clc
mov
(bad)
dec
(bad)
aaa
(bad)
idiv
iret
out
inc
fistp
push
arpl
imul
pop
push
stc
lahf
push
mov
mov
stc
or
pop
dec
mov
icebp
outs
(bad)
(bad)
(bad)
fld
(bad)
aas
stos
out
(bad)
(bad)
sar
cld
jnp
mov
div
aas
pop
std
fistp
push
fwait
(bad)
fistp
das
std
aas
(bad)
out
(bad)
cld
dec
and
(bad)
clc
aas
lock
aaa
dec
popa
std
(bad)
push
(bad)
cld
daa
(bad)
stos
scas
sub
stos
ins
add
ja
sub
push
(bad)
out
pop
std
jg
push
fbld
pop
cld
sar
cli
call
clc
ins
jmp
aas
inc
(bad)
stc
jecxz
sti
mov
fwait
(bad)
jmp
pop
inc
fldpi
(bad)
jmp
std
pop
mov
jmp
clc
pop
mov
jmp
mov
mov
shl
in
(bad)
jg
xchg
call
aas
inc
push
adc
cmc
(bad)
(bad)
aas
inc
push
loop
(bad)
cdq
jmp
out
icebp
pop
call
inc
cmp
(bad)
std
dec
pop
lahf
jl
pop
stc
not
cmp
push
push
sti
call
(bad)
cmc
(bad)
out
aas
xchg
fdivr
(bad)
clc
sub
pop
cld
mov
xchg
push
(bad)
hlt
(bad)
sti
mov
inc
(bad)
sti
pop
clc
aaa
inc
pop
dec
push
in
std
adc
sar
idiv
push
mov
inc
aas
inc
loopne
clc
paddd
(bad)
jmp
paddb
jecxz
lock
(bad)
stc
iret
std
mov
(bad)
inc
repnz
mov
jle
push
outs
clc
mov
xchg
(bad)
jmp
lods
clc
aas
call
dec
popf
(bad)
pop
jg
jns
push
out
push
(bad)
in
pop
clc
jg
xchg
aas
(bad)
sti
dec
loope
push
pusha
cmc
mov
xchg
ja
mov
jg
xor
dec
jecxz
icebp
mov
push
mov
inc
int3
icebp
mov
jg
paddd
dec
pop
stc
jg
ret
mov
loopne
cmc
(bad)
inc
sti
(bad)
out
jg
push
pop
(bad)
out
push
push
inc
(bad)
pop
mov
(bad)
fbld
call
addr16
shl
dec
sti
aas
cs
jmp
retf
(bad)
push
scas
dec
(bad)
scas
xchg
(bad)
sti
ja
iret
call
retf
pop
call
aas
dec
(bad)
xlat
jmp
fisttp
idiv
cld
sti
(bad)
fistp
es
cli
out
icebp
dec
jmp
aas
lock
(bad)
xchg
push
(bad)
mov
(bad)
(bad)
cld
cmp
out
icebp
jg
std
retf
(bad)
bnd
idiv
aas
jg
in
jmp
(bad)
jg
jmp
out
(bad)
std
call
or
paddw
push
fild
jg
paddd
ja
scas
mov
jg
(bad)
jmp
aad
inc
push
cli
xchg
inc
fwait
(bad)
outs
mov
(bad)
xchg
push
pop
cld
mov
aas
cld
sbb
stc
lock
cld
(bad)
dec
(bad)
sti
dec
clc
mov
mov
std
jmp
das
dec
gs
scas
jg
(bad)
(bad)
xchg
inc
imul
jecxz
sti
pop
(bad)
cmp
jg
iret
ds
dec
pop
std
(bad)
cmp
out
inc
into
repz
dec
(bad)
mov
movs
(bad)
cmp
clc
iret
std
(bad)
(bad)
icebp
paddd
jmp
pop
hlt
daa
std
pop
jg
aas
clc
aas
std
test
inc
lods
(bad)
(bad)
dec
adc
mov
(bad)
(bad)
cli
das
inc
cld
pop
push
test
scas
fbld
out
jmp
pop
pop
rol
inc
(bad)
ds
cld
mov
sbb
xchg
jg
call
jmp
std
(bad)
test
cld
in
clc
mov
cld
and
(bad)
outs
jle
pop
(bad)
mov
retf
dec
mov
xchg
dec
cld
xchg
jg
mov
inc
add
and
gs
out
iret
dec
jg
hlt
jmp
cli
pop
dec
pop
xchg
in
sti
aas
inc
pop
cli
(bad)
cmp
aas
lock
imul
out
das
cld
aas
dec
dec
dec
(bad)
scas
cld
aaa
push
aas
out
scas
sti
pop
inc
(bad)
in
idiv
mov
xchg
jl
pop
jle
(bad)
std
aas
std
aaa
jmp
fpatan
(bad)
cld
idiv
in
scas
(bad)
aas
jmp
add
mov
out
cld
sub
out
inc
(bad)
xlat
das
(bad)
out
das
(bad)
scas
aas
hlt
mul
idiv
neg
in
idiv
sub
aas
cld
(bad)
(bad)
sti
outs
inc
cld
idiv
xlat
lahf
call
(bad)
out
sub
movs
or
jg
pop
dec
cmp
jmp
lods
jae
das
call
out
jg
sub
inc
pop
xor
push
jmp
jg
push
jmp
inc
(bad)
stc
(bad)
(bad)
sar
repz
out
jle
mov
inc
jmp
jmp
movs
test
dec
(bad)
in
mov
out
jg
scas
dec
leave
inc
stc
add
cld
push
(bad)
(bad)
mov
(bad)
out
pop
xchg
add
ud0
jg
jg
aas
pop
std
jmp
cmc
(bad)
xchg
(bad)
lahf
jg
(bad)
stc
jmp
cmp
dec
fist
mov
(bad)
cld
in
xchg
(bad)
mov
loopne
clc
jg
in
pop
std
ud0
pop
add
dec
jge
jg
(bad)
xor
sub
push
jg
(bad)
(bad)
out
lds
inc
call
dec
push
movs
movs
or
mov
stc
cmp
cli
jg
mov
push
jmp
les
(bad)
jp
dec
je
sub
jle
aas
icebp
(bad)
cli
and
out
(bad)
jmp
scas
clc
mov
leave
ja
test
repz
std
add
mov
loope
cld
push
mov
cld
fistp
test
lock
sti
xchg
mov
jle
jg
(bad)
cld
jmp
xchg
imul
dec
jle
(bad)
in
out
retf
mov
clc
idiv
mov
jg
cmp
jg
std
(bad)
out
aas
cmc
xchg
(bad)
fstp
imul
cli
jae
(bad)
mov
or
repz
and
jg
aas
(bad)
das
mov
std
or
retf
stc
sti
call
mov
std
paddd
mov
(bad)
std
fild
mov
jg
(bad)
sti
scas
dec
call
jg
ja
xchg
jmp
push
dec
cld
cmp
aas
clc
push
(bad)
sar
(bad)
cld
sub
out
jg
jg
ret
popf
dec
(bad)
jmp
jle
(bad)
sti
(bad)
lahf
jmp
outs
dec
sahf
iret
push
pop
(bad)
pop
jmp
out
(bad)
jmp
inc
sbb
cmp
out
(bad)
mov
pop
inc
icebp
jmp
stc
(bad)
inc
jg
cmp
dec
adc
test
out
(bad)
lahf
jg
jg
jmp
stc
aas
clc
dec
push
jg
xchg
fsubr
lahf
clc
add
outs
dec
sub
aas
call
mov
fld
(bad)
mov
outs
adc
push
out
cld
pop
(bad)
push
mov
cld
jmp
ja
add
stos
aas
idiv
clc
mov
mov
std
addr16
(bad)
jmp
scas
(bad)
(bad)
cld
pop
(bad)
loope
jmp
sub
jg
jg
mov
int
jecxz
cld
add
daa
sbb
(bad)
std
(bad)
inc
jg
cmp
(bad)
adc
jg
lahf
cld
pop
sub
cld
in
inc
(bad)
(bad)
ja
cmp
pop
std
sti
call
mov
(bad)
cs
add
bound
pop
repnz
mov
lock
ds
mov
xchg
retf
push
jg
cld
(bad)
(bad)
sbb
out
jmp
outs
and
loopne
mov
call
jg
(bad)
adc
(bad)
mov
idiv
lahf
inc
mov
jmp
jmp
cld
pop
(bad)
jmp
sub
bnd
push
(bad)
in
aas
clc
retf
call
aad
out
std
xlat
cld
(bad)
and
adc
cld
inc
fs
out
inc
(bad)
stc
mov
(bad)
out
loop
cli
(bad)
push
fild
push
sar
dec
test
outs
jmp
mov
test
loopne
cli
paddd
(bad)
(bad)
clc
xor
mov
jg
jg
pop
(bad)
jmp
out
std
outs
inc
aas
in
stos
push
jg
aad
loopne
cld
ins
mov
loopne
call
jmp
push
jmp
lods
leave
push
(bad)
cld
out
enter
psrld
cmc
out
popa
out
and
icebp
(bad)
sti
jg
(bad)
stc
out
inc
push
xor
mov
cli
cmp
sar
outs
and
cld
aas
inc
jmp
cli
retf
leave
add
pop
(bad)
cmp
and
ja
iret
push
jg
or
scas
aas
xchg
adc
jg
repnz
out
js
(bad)
sti
das
inc
push
aaa
std
in
(bad)
clc
inc
jg
(bad)
jge
rsqrtps
call
scas
pop
jmp
mov
xchg
imul
iret
cld
cmp
(bad)
pop
cli
stc
(bad)
std
paddw
aas
jecxz
clc
mov
mov
loopne
repnz
shr
add
repnz
xchg
jg
push
xlat
(bad)
pop
call
leave
stc
(bad)
std
sbb
(bad)
inc
outs
cli
pop
inc
dec
inc
lock
std
arpl
sub
(bad)
stc
idiv
out
dec
fistp
aas
std
xchg
jg
aas
clc
retf
scas
jle
scas
sti
retf
(bad)
out
(bad)
cli
mov
add
(bad)
lahf
jg
pop
clc
pop
dec
out
(bad)
(bad)
(bad)
out
jle
pop
clc
mov
jmp
dec
pop
dec
cld
lahf
enter
(bad)
out
mov
dec
push
(bad)
jle
pop
(bad)
daa
push
scas
jp
not
push
(bad)
mov
std
cld
aaa
mov
xchg
repnz
mov
std
(bad)
jmp
mov
push
test
call
cmps
jg
std
(bad)
out
std
ud0
(bad)
sti
(bad)
clc
(bad)
push
aas
inc
(bad)
adc
pop
push
(bad)
neg
call
std
(bad)
std
aas
inc
aas
test
imul
inc
sub
in
xchg
imul
xlat
aas
cmc
jg
cmps
jmp
(bad)
(bad)
aaa
inc
fs
(bad)
mov
(bad)
repnz
jg
or
jmp
jg
push
cld
mov
push
(bad)
dec
(bad)
std
jmp
jg
push
mov
mov
xchg
add
add
icebp
jg
aad
cld
clc
xor
out
jg
cli
fistp
jmp
or
cmp
push
scas
cld
mov
sar
(bad)
mov
paddd
icebp
inc
jg
idiv
lahf
inc
jg
outs
cld
aas
jg
(bad)
std
pop
inc
push
jmp
aas
clc
(bad)
aaa
mov
(bad)
pop
jmp
jg
lahf
std
cs
cmp
xor
stc
mov
mov
inc
call
jle
mov
neg
sti
pop
(bad)
out
jecxz
jg
retf
inc
pop
cli
jg
xchg
xlat
pop
repz
(bad)
fistp
ret
idiv
(bad)
lahf
(bad)
mov
jg
push
inc
dec
std
outs
mov
std
test
call
mov
cld
cmp
leave
pop
cli
out
inc
aaa
dec
dec
pop
(bad)
out
jg
mul
dec
dec
cld
mov
lock
cmps
mov
in
aas
cld
(bad)
push
dec
outs
std
stos
mov
shl
stos
sub
call
xchg
push
or
(bad)
clc
sub
sar
mov
mov
mov
push
mov
dec
dec
into
inc
outs
stc
aaa
cld
fistp
jg
sub
int
sti
iret
sti
mov
(bad)
das
jg
push
cmp
fistp
aas
(bad)
mov
(bad)
xlat
jg
(bad)
std
mov
pop
cld
mov
inc
call
clc
cmp
in
push
mov
mov
jmp
loop
std
ja
inc
pop
xchg
call
scas
aas
(bad)
pop
std
movq
ja
sbb
outs
std
xchg
(bad)
in
mov
mov
cld
int3
scas
cli
pop
jg
paddb
cli
push
inc
(bad)
call
lds
jg
push
std
mov
aas
pushf
call
(bad)
bnd
out
(bad)
cli
cmps
leave
std
std
jmp
lods
test
inc
lock
jg
jnp
jb
fdivrp
sar
ja
aad
clc
xchg
(bad)
xlat
mov
(bad)
(bad)
mov
out
(bad)
stc
(bad)
cld
aas
stos
call
jg
cmp
push
fisub
inc
add
sar
hlt
pop
(bad)
fisttp
(bad)
out
push
dec
std
cmp
(bad)
(bad)
aas
dec
(bad)
sti
(bad)
inc
jmp
mov
in
pop
std
lahf
jmp
das
std
inc
(bad)
fcmovnu
jecxz
fcos
mov
out
(bad)
mov
push
movs
lods
sar
jg
in
dec
movs
pop
out
inc
retf
jle
aas
gs
(bad)
arpl
rcl
std
outs
inc
jmp
xor
fsubrp
aaa
cli
aas
(bad)
in
aas
in
scas
cli
(bad)
(bad)
(bad)
sti
lahf
clc
std
jg
ja
out
jmp
(bad)
inc
mov
scas
cld
mov
pop
cld
daa
out
(bad)
jmp
std
retf
mov
in
std
mov
out
out
inc
push
das
cmp
mov
dec
lock
cmp
out
jle
pop
cmc
jmp
cmp
out
leave
jns
cli
fistp
idiv
dec
inc
jmp
pop
call
call
pop
inc
dec
arpl
idiv
loop
jbe
lahf
(bad)
(bad)
in
outs
dec
mov
jecxz
cmp
push
(bad)
sti
out
clc
pop
(bad)
icebp
jg
scas
cli
scas
jg
pop
mov
movaps
std
jg
pop
(bad)
jmp
fdivrp
fwait
dec
stc
(bad)
call
jg
iret
(bad)
fistp
sub
cwde
dec
add
(bad)
fcos
std
jg
clc
aas
std
mov
jno
(bad)
std
das
cld
push
movs
cmp
stos
dec
xor
jnp
rcr
scas
and
fldcw
(bad)
mov
(bad)
std
cmps
cld
in
(bad)
jg
cmc
sar
das
(bad)
(bad)
mov
inc
pop
cli
daa
jle
pusha
in
cld
aas
jg
(bad)
sti
aas
stc
add
daa
ja
call
jno
mov
(bad)
in
das
std
cld
cmps
dec
jle
pop
jns
aas
(bad)
adc
cmp
stc
ud0
jmp
repz
clc
(bad)
sar
pop
sti
cmp
ret
repz
sti
xchg
dec
lea
mov
icebp
(bad)
dec
sti
shr
jg
addr16
pop
dec
aas
dec
sbb
das
jmp
pop
pop
push
js
sti
jg
jb
mov
jmp
(bad)
jmp
std
cmp
cld
add
inc
dec
in
(bad)
mov
mov
std
push
jmp
scas
cli
pop
inc
pop
dec
or
fs
idiv
mov
neg
clc
scas
(bad)
push
call
out
dec
(bad)
lock
inc
gs
movs
(bad)
mov
jg
inc
(bad)
out
aas
cld
aas
jg
aas
nop
cmp
mov
sti
pop
cld
mov
sub
mov
stc
out
std
aas
(bad)
fwait
jmp
(bad)
(bad)
fistp
jmp
sti
ins
jmp
std
outs
(bad)
mov
call
inc
mov
std
pop
jmp
aas
clc
mov
jg
xor
adc
std
pop
fs
sar
out
scas
inc
sub
(bad)
mov
xor
jecxz
iret
(bad)
in
out
push
pop
cld
fistp
stc
lahf
idiv
jg
das
(bad)
outs
jg
push
aas
(bad)
jecxz
xlat
pop
clc
aas
std
cmps
call
aas
stc
hlt
out
inc
jmp
aas
jecxz
mov
mov
or
clc
jg
cli
sti
add
(bad)
jg
jg
cmc
jmp
jmp
mov
sti
jmp
mov
xchg
and
repnz
lock
clc
cld
(bad)
mov
jg
outs
(bad)
(bad)
jl
cmc
aas
and
(bad)
push
std
xchg
jmp
lahf
sti
paddd
push
das
jmp
(bad)
(bad)
pop
stos
push
(bad)
(bad)
out
pop
stc
pop
sahf
std
jle
loope
clc
mov
dec
mov
imul
cmc
mov
paddd
or
call
clc
mov
leave
or
add
leave
ret
mov
(bad)
outs
ror
jg
mov
adc
jg
fcomip
pop
std
sar
std
aaa
and
(bad)
inc
inc
jle
inc
mul
scas
cld
mov
stc
fstp
fdivr
add
lea
retf
pop
clc
cli
daa
dec
sbb
(bad)
xchg
push
jg
in
cld
mov
fs
(bad)
arpl
(bad)
xchg
jmp
aas
mov
repz
out
fcomip
out
rcr
(bad)
pop
jg
cmps
jg
push
jg
jg
jg
lahf
std
sbb
scas
jmp
cld
pop
(bad)
jmp
dec
xor
jns
mov
(bad)
sti
pop
daa
xchg
dec
mov
mov
cld
aaa
push
push
sub
out
pop
icebp
in
cmc
sub
das
std
gs
std
jnp
sti
jg
aas
push
test
jg
pop
clc
mov
loopne
sti
add
push
das
out
inc
sub
pop
mov
(bad)
jg
ins
stc
push
paddd
in
std
pop
(bad)
push
(bad)
inc
jg
pop
(bad)
(bad)
out
cmc
(bad)
cld
fistp
pop
dec
outs
inc
(bad)
in
hlt
(bad)
(bad)
xchg
jmp
push
outs
(bad)
lahf
jg
movs
sub
jg
(bad)
push
pop
jns
outs
clc
clc
(bad)
(bad)
out
cmc
(bad)
sti
push
std
cdq
inc
pop
cli
setb
jg
push
cld
mov
pop
(bad)
mov
(bad)
jg
xchg
jne
mov
(bad)
cmps
fs
xchg
sti
aas
and
cmps
inc
xchg
test
(bad)
clc
paddb
cld
mov
jmp
sbb
pop
std
std
aas
out
cld
mov
stc
aaa
mov
jg
mov
clc
mov
shl
(bad)
sar
clc
stos
sub
stos
cli
mov
iret
clc
xor
mov
lock
std
cmp
sub
hlt
stc
jg
pop
(bad)
das
mov
jl
das
(bad)
mov
(bad)
fistp
mov
ja
jp
pop
jmp
das
std
aaa
sub
dec
pop
std
xchg
les
jecxz
(bad)
mov
(bad)
retf
jg
idiv
gs
call
cld
scas
(bad)
mov
(bad)
pop
paddd
pop
icebp
dec
adc
(bad)
stc
pop
call
dec
(bad)
std
aas
(bad)
retf
inc
stos
jmp
inc
push
out
icebp
jg
mov
lds
clc
scas
std
sti
movs
xchg
sub
(bad)
(bad)
(bad)
sti
outs
sti
jg
(bad)
out
pop
std
jg
stos
mov
(bad)
out
inc
scas
cld
pop
jg
lahf
dec
cli
in
cld
pop
jmp
(bad)
sti
jmp
jg
sti
jg
add
cld
gs
(bad)
cld
addr16
add
daa
inc
(bad)
sti
out
bnd
lahf
in
push
hlt
dec
pop
dec
(bad)
std
stos
inc
(bad)
in
(bad)
cld
mov
adc
scas
clc
sbb
pushf
cli
aad
(bad)
(bad)
cld
addr16
pop
mov
repz
dec
jmp
mov
in
dec
xor
cmp
mov
jle
push
aaa
(bad)
out
mov
out
std
(bad)
call
inc
loopne
std
xorps
jae
add
sub
clc
daa
inc
jg
mul
pop
(bad)
cmps
jg
pop
cli
jg
clc
aas
clc
iret
(bad)
cs
dec
aas
lock
cli
mov
mov
jg
mov
(bad)
cld
pop
shl
(bad)
stos
jle
lods
jmp
das
sbb
(bad)
in
(bad)
jg
mov
lahf
clc
add
(bad)
(bad)
sti
(bad)
cli
or
scas
fbld
inc
retf
jg
sti
cmps
call
mov
(bad)
xlat
cld
(bad)
shr
bnd
cmp
aas
inc
or
out
dec
lahf
repz
std
addr16
push
jmp
sbb
in
pop
daa
dec
std
out
jmp
sub
aaa
and
xchg
es
mov
cli
jmp
(bad)
stc
dec
(bad)
xlat
(bad)
(bad)
mov
(bad)
push
(bad)
cmp
pop
clc
xchg
(bad)
out
push
jg
dec
(bad)
(bad)
aas
clc
retf
add
dec
(bad)
mov
jg
(bad)
(bad)
gs
call
lock
dec
fldlg2
(bad)
(bad)
(bad)
addr16
jno
dec
jmp
jmp
lahf
mul
cmp
ret
(bad)
sti
iret
push
lea
pop
in
mov
jg
paddb
das
clc
aas
call
out
jg
(bad)
in
jg
leave
das
inc
jg
cli
mov
scas
stc
pop
(bad)
out
jg
das
cld
aas
jle
pop
repz
jmp
jmp
ret
jmp
in
pop
movs
gs
push
pop
jge
lahf
cld
(bad)
jmp
pop
loop
jmp
pop
movs
je
lods
aaa
inc
mov
jg
mov
(bad)
daa
cld
pop
jg
xchg
(bad)
mov
xchg
push
jmp
inc
retf
icebp
push
dec
(bad)
(bad)
daa
inc
sub
(bad)
xchg
outs
cmc
pop
cld
test
test
out
out
bnd
cs
pop
clc
pop
std
cmps
mov
jle
mov
dec
call
pop
dec
jp
jg
push
(bad)
call
jmp
rol
in
lahf
cld
movs
jg
out
icebp
aas
cmp
jge
(bad)
cmps
xchg
retf
call
outs
ret
(bad)
mov
lods
(bad)
das
(bad)
aas
dec
jg
(bad)
cld
xlat
(bad)
out
fild
psubq
call
shl
push
inc
(bad)
stc
xchg
gs
push
xlat
inc
mov
xor
(bad)
cld
pop
(bad)
out
icebp
aas
clc
pop
(bad)
aaa
jo
jmp
(bad)
sti
push
cld
cmps
inc
push
mov
push
xor
(bad)
mov
jecxz
sti
cmp
paddd
call
(bad)
jg
add
mov
scas
stos
enter
adc
push
out
mov
and
(bad)
call
aas
(bad)
sti
push
sub
jg
(bad)
sti
pop
movs
lahf
(bad)
outs
inc
enter
dec
jb
jg
xor
inc
(bad)
jmp
cld
inc
inc
pop
std
out
(bad)
(bad)
xlat
pop
dec
rcr
das
sti
pop
jg
outs
cli
jg
(bad)
lahf
push
fmul
fidiv
out
je
mov
mov
inc
pop
repnz
fisttp
pop
call
cmp
mov
daa
push
(bad)
hlt
das
(bad)
aas
push
dec
stc
mov
jg
pop
std
jnp
sar
scas
cli
pop
(bad)
out
jmp
mul
sbb
retf
jmp
cld
xlat
inc
mov
jle
mov
pop
push
jg
pmaxub
inc
adc
in
push
clc
bnd
out
adc
dec
paddd
jmp
scas
(bad)
cmp
jae
(bad)
call
(bad)
sti
jg
pop
dec
aaa
out
jmp
and
pop
mov
(bad)
in
mov
mov
mov
cdq
jmp
(bad)
cli
sti
arpl
adc
dec
mov
(bad)
inc
iret
cmp
mov
lahf
sti
pop
mov
xchg
xor
aas
jg
push
push
inc
cwde
pop
icebp
scas
inc
js
stc
aas
clc
in
cli
jg
mov
push
fbld
mov
(bad)
(bad)
repz
aas
cld
sar
xchg
dec
sti
fcmovne
aam
outs
jg
lahf
hlt
scas
cld
(bad)
fcomip
fdivrp
hlt
daa
(bad)
pop
and
(bad)
lds
and
jo
mov
sti
ins
dec
das
sub
(bad)
inc
scas
dec
xchg
out
mov
inc
retf
adc
pop
dec
imul
add
cmps
mov
(bad)
(bad)
add
in
ss
lock
push
fs
push
std
mov
call
(bad)
sti
aas
std
out
iret
aam
std
pop
mov
call
cmp
lahf
dec
test
mov
jg
xchg
jmp
out
inc
(bad)
mov
lahf
jmp
inc
out
pop
(bad)
adc
inc
dec
out
std
outs
jg
das
inc
jg
(bad)
cld
aaa
(bad)
mov
mov
pop
std
movd
dec
(bad)
jmp
mov
cld
punpckhwd
jg
push
aas
cld
dec
mov
mov
xchg
jmp
aas
stc
pop
push
sbb
cmps
inc
in
mov
aas
out
inc
mov
(bad)
xchg
mov
jg
(bad)
std
xchg
cld
(bad)
jmp
jge
in
scas
out
clc
gs
in
pop
cmc
fld
fnstsw
call
xor
jg
pop
clc
aas
std
ja
out
(bad)
jg
lahf
adc
inc
mov
(bad)
sti
push
std
addr16
(bad)
stc
sti
inc
jg
retf
out
push
(bad)
(bad)
loop
clc
pop
std
sbb
aaa
jns
jg
or
out
test
push
fbld
and
scas
(bad)
cmp
jg
cld
jg
test
loope
stc
imul
pop
jmp
(bad)
paddd
cmps
(bad)
jmp
std
out
inc
dec
jmp
inc
(bad)
sti
mul
call
(bad)
stc
and
aas
call
(bad)
xlat
(bad)
stos
jmp
cdq
(bad)
in
mov
iret
jle
sub
and
loopne
cli
(bad)
std
pop
aad
cld
paddd
repnz
mov
loop
lock
cli
or
out
(bad)
xchg
cld
mov
fnstcw
mov
xchg
(bad)
xchg
mov
xchg
jo
cmp
cmc
mov
sub
sti
add
(bad)
dec
(bad)
std
jg
idiv
in
jecxz
jg
jmp
in
stc
add
(bad)
mov
(bad)
cld
scas
pop
call
movd
or
pusha
enter
inc
jg
(bad)
ds
imul
std
paddd
mov
cld
lahf
jle
jg
mov
(bad)
stc
aaa
(bad)
cmps
call
lahf
inc
jl
mov
inc
xchg
retf
jmp
stc
std
(bad)
sti
pop
js
mov
(bad)
std
idiv
int
icebp
pop
pop
pop
cmps
fs
inc
or
(bad)
jmp
cmps
xchg
mov
dec
aas
jmp
hlt
(bad)
(bad)
fistp
fsubr
fwait
lock
xchg
in
(bad)
aas
pop
cld
push
mov
dec
sti
push
adc
mov
(bad)
std
(bad)
std
jg
or
jg
cmps
jg
jg
jnp
retf
idiv
mov
pop
jne
cdq
(bad)
std
loop
cli
cld
mov
mov
jb
dec
mov
push
jg
pop
(bad)
outs
jg
(bad)
stc
push
nop
push
cld
adc
mov
(bad)
sar
dec
cmp
jmp
push
(bad)
mov
stos
jg
(bad)
cld
ret
(bad)
out
jg
pop
cld
aad
mov
xchg
cld
mov
mov
(bad)
std
jmp
dec
shl
scas
cli
icebp
(bad)
sti
pop
cli
jnp
sar
aas
std
cmp
jg
pop
clc
aas
(bad)
aas
ds
movs
mov
dec
mov
retf
sub
jg
scas
(bad)
mov
in
pop
cld
and
std
cli
jg
scas
and
std
aad
int
push
stos
leave
pop
(bad)
adc
ja
pop
(bad)
call
cmps
pop
stc
jg
cli
call
mov
push
(bad)
sti
push
aas
clc
mov
cmps
(bad)
in
lahf
std
pop
dec
inc
jmp
out
repnz
(bad)
xchg
mov
push
push
jg
jge
call
lds
lahf
(bad)
(bad)
jmp
sti
dec
call
call
(bad)
mov
arpl
jg
jg
mov
idiv
cld
pop
mov
fidivr
dec
imul
rcr
push
std
pop
jmp
(bad)
std
stos
(bad)
stc
aas
nop
mov
jns
loop
jmp
sbb
loopne
cmc
lahf
std
(bad)
sbb
xor
leave
pop
sti
jnp
aaa
aam
(bad)
mov
call
jg
pop
(bad)
fstp
push
ja
test
sti
daa
(bad)
jno
ds
or
call
out
push
xchg
push
adc
mov
jle
sti
test
stos
(bad)
scas
pop
test
xlat
jmp
pop
(bad)
pop
(bad)
fist
loop
dec
jle
jmp
das
std
xor
sar
cli
mov
cli
aas
dec
(bad)
sti
aas
std
mov
std
pop
call
(bad)
sti
(bad)
cli
adc
out
jg
(bad)
(bad)
jae
stos
push
mov
(bad)
(bad)
repz
ins
jl
xchg
(bad)
pop
(bad)
jmp
(bad)
mov
(bad)
cli
pop
jg
push
std
cmp
(bad)
aaa
jmp
push
sbb
out
inc
out
clc
ud0
inc
out
bnd
inc
jg
push
mov
idiv
aas
inc
(bad)
jmp
stc
add
scas
(bad)
cmp
aas
xchg
fcomp
adc
std
pop
(bad)
pop
jg
out
dec
or
jg
cld
paddd
push
fisttp
xchg
pop
and
std
jmp
lods
inc
(bad)
sti
(bad)
std
add
retf
(bad)
sti
(bad)
cld
ja
iret
iret
inc
pop
cmc
pop
dec
aas
nop
mov
jg
iret
(bad)
outs
cld
mov
idiv
lahf
jle
mov
jmp
inc
jg
int
out
repnz
call
call
lahf
outs
imul
fs
jle
aas
clc
jg
cli
jg
mov
icebp
pop
cld
mov
mov
mov
jb
jle
(bad)
std
pop
dec
jg
pop
idiv
std
mov
aam
icebp
dec
stc
aas
enter
(bad)
out
(bad)
jmp
std
mov
(bad)
cld
(bad)
pop
clc
dec
jle
pop
cld
mov
int
movs
sbb
aas
repz
clc
repnz
(bad)
mov
mov
std
idiv
mov
(bad)
cld
sbb
sar
jg
gs
push
mov
idiv
mov
(bad)
sar
icebp
das
sti
mov
std
jnp
adc
stc
pop
clc
nop
js
outs
movs
push
cdq
jmp
(bad)
das
sahf
and
lock
cmp
(bad)
(bad)
dec
inc
(bad)
std
in
jg
scas
cli
std
imul
cmps
pop
(bad)
(bad)
cli
lds
jg
push
inc
(bad)
(bad)
sar
(bad)
jg
stos
(bad)
jmp
icebp
lahf
cld
push
jg
or
jg
pop
clc
aas
(bad)
(bad)
jmp
pop
cli
jg
retf
push
jmp
pop
push
inc
fmul
nop
(bad)
sti
daa
dec
retf
aas
lock
pop
fistp
(bad)
out
(bad)
jg
pop
(bad)
lods
(bad)
sti
mov
jmp
cld
ud0
aas
lock
push
pushf
clc
pop
(bad)
daa
mov
hlt
(bad)
std
stos
jg
pop
dec
jbe
scas
and
sahf
push
fdivrp
pop
dec
fcom
call
rcr
(bad)
(bad)
clc
pop
inc
pop
icebp
pop
std
cmp
(bad)
aas
(bad)
pop
lahf
cld
cmp
push
std
xchg
mov
in
mov
jmp
jg
push
dec
call
dec
bnd
sar
aas
inc
push
pop
cld
retf
mov
stos
inc
out
leave
pushf
(bad)
icebp
jmp
aas
dec
retf
test
push
aas
xchg
outs
dec
idiv
pop
(bad)
stc
push
pop
(bad)
aas
out
inc
cld
jg
sti
idiv
jmp
cmp
scas
aas
jmp
leave
aas
lock
mov
sar
jmp
std
add
out
(bad)
lahf
jg
out
icebp
aas
std
cs
outs
dec
jmp
mov
xchg
pop
cmp
out
inc
scas
(bad)
cwde
adc
push
call
jmp
cli
add
out
icebp
jg
ret
push
in
jmp
cli
das
dec
jle
leave
stc
push
jnp
retf
mov
push
aas
repz
jle
aas
lock
aas
icebp
push
std
xchg
call
aas
xchg
jb
dec
aas
clc
mov
mov
fcomip
aaa
std
push
mov
mov
cs
mov
jle
(bad)
mov
aas
std
pop
jg
mov
jmp
(bad)
jg
test
idiv
neg
(bad)
daa
push
call
lahf
stc
jg
(bad)
jmp
jg
and
or
das
sti
lahf
inc
(bad)
jmp
jmp
add
jnp
xchg
std
fisttp
(bad)
scas
(bad)
pop
and
sti
pop
jg
pop
icebp
pop
(bad)
in
cli
pop
(bad)
stos
(bad)
call
idiv
inc
xchg
mov
std
mov
loop
stc
xchg
(bad)
sbb
gs
jle
pop
mov
std
jmp
pop
stc
sub
scas
aas
out
(bad)
(bad)
in
(bad)
push
sub
pop
inc
(bad)
call
pop
movs
and
and
dec
jmp
dec
lock
repz
(bad)
cli
jg
pop
push
lahf
jle
push
out
cld
mov
outs
cli
aas
(bad)
hlt
(bad)
sti
ja
iret
(bad)
clc
(bad)
jmp
cld
cmp
aas
lock
jmp
sar
pop
cld
(bad)
xor
push
fs
(bad)
fild
jmp
aas
cld
sar
and
test
idiv
paddb
dec
jg
iret
stc
jne
pop
ja
aad
icebp
(bad)
dec
inc
(bad)
sti
scas
movs
pushf
int3
out
inc
dec
or
in
out
(bad)
std
xchg
std
(bad)
in
(bad)
std
call
mov
popa
push
cmp
das
inc
jg
mov
hlt
(bad)
clc
dec
dec
sbb
push
jg
ud0
lahf
(bad)
aas
jle
(bad)
cmp
(bad)
std
push
jle
lods
(bad)
call
icebp
aaa
push
data16
dec
pop
dec
out
clc
stos
inc
cmps
push
jno
push
cmps
xchg
adc
aas
jle
(bad)
jmp
stc
cmp
push
jg
jg
idiv
and
(bad)
mov
stc
out
cld
cdq
jmp
(bad)
(bad)
jnp
dec
std
outs
or
pop
std
jnp
push
xchg
(bad)
out
out
push
paddd
hlt
leave
scas
repz
(bad)
fcos
loopne
repnz
(bad)
mov
push
(bad)
mov
(bad)
add
cmps
(bad)
sti
mov
xchg
push
scas
std
pop
(bad)
xchg
mov
(bad)
(bad)
(bad)
(bad)
jg
xchg
int3
out
repnz
sti
aas
clc
cmps
cld
test
stos
aas
nop
cld
pushf
iret
xchg
fldenv
(bad)
daa
inc
aas
jg
call
jg
cmc
aas
inc
pop
(bad)
lahf
jg
cmp
xlat
aas
clc
aas
nop
xor
pop
icebp
or
pop
mov
clc
aas
std
fwait
jmp
jmp
call
add
sti
pop
(bad)
sbb
sti
(bad)
mov
dec
std
aas
jg
push
(bad)
(bad)
lahf
adc
cld
(bad)
mov
xchg
mov
push
scas
and
dec
retf
(bad)
xchg
(bad)
jmp
inc
fwait
pop
std
lahf
std
fdivrp
xlat
jg
mov
stos
and
jmp
jg
cmp
int3
mov
or
call
aas
lock
movs
push
jg
aas
(bad)
in
aas
xchg
cmp
retf
repz
lds
loop
hlt
pop
cld
add
(bad)
in
jg
pop
inc
(bad)
jmp
cld
pop
push
retf
xor
aaa
jmp
(bad)
(bad)
adc
outs
nop
es
lahf
sub
jg
imul
push
jle
aas
nop
je
cmc
jg
mov
aas
dec
jg
mov
push
shl
add
idiv
es
std
pop
dec
aas
adc
jg
(bad)
in
lock
pop
dec
outs
popf
std
pop
call
(bad)
clc
scas
(bad)
jmp
xchg
push
(bad)
cld
mov
jg
imul
xlat
(bad)
sub
(bad)
cld
ffreep
scas
jmp
gs
mov
es
push
pop
adc
jmp
out
pop
cld
aas
jle
push
pop
cld
gs
(bad)
(bad)
jmp
(bad)
in
scas
clc
pop
leave
dec
stc
out
dec
jle
(bad)
(bad)
and
mov
in
(bad)
cld
add
loope
lods
inc
dec
push
push
stos
(bad)
out
aas
clc
outs
sti
ins
push
mov
jge
sub
jb
icebp
pop
dec
scas
mov
(bad)
jmp
push
jg
(bad)
(bad)
and
push
loop
std
inc
out
inc
add
pop
sti
stc
(bad)
std
stos
push
(bad)
sti
(bad)
cld
cwde
loop
mov
push
pop
dec
dec
mov
sbb
(bad)
jmp
loopne
jg
in
dec
sbb
fcomip
paddb
pop
(bad)
lahf
pop
cld
cmp
pop
clc
aas
inc
imul
(bad)
add
sti
jg
mov
mov
out
jg
jg
(bad)
fisttp
stos
push
xlat
inc
push
mov
call
call
sar
jecxz
jb
(bad)
in
adc
inc
dec
adc
lahf
jg
(bad)
std
(bad)
std
(bad)
mov
xchg
div
aas
shl
sti
adc
(bad)
jmp
pop
sti
movd
jg
push
xchg
xchg
daa
out
inc
jg
adc
out
cld
movs
push
(bad)
std
mov
movs
cdq
(bad)
aad
lock
xchg
call
sti
xchg
ja
fwait
(bad)
(bad)
ins
inc
mov
mov
mov
mov
xchg
cmp
(bad)
cmp
push
out
dec
dec
adc
sti
aaa
(bad)
pop
mov
inc
das
jmp
test
aas
cmps
in
in
dec
(bad)
jg
cli
aas
das
jle
(bad)
jmp
mov
jg
dec
(bad)
scas
cli
in
xchg
push
call
xor
cdq
push
das
sti
add
mov
pop
stc
pop
(bad)
imul
jg
das
std
iret
inc
(bad)
jmp
paddb
sti
jg
stc
fwait
adc
xchg
(bad)
push
(bad)
(bad)
std
pop
(bad)
fistp
mov
lahf
dec
fist
sahf
jmp
pop
clc
mov
xor
sub
(bad)
mov
pop
inc
(bad)
stc
out
(bad)
std
iret
cld
push
dec
outs
cli
jg
cmp
cmc
addr16
push
call
(bad)
std
pop
cld
pop
iret
scas
(bad)
out
aas
mov
lock
cmp
mov
jg
xchg
inc
xchg
stc
mov
mov
xchg
jle
pop
inc
stc
ficomp
clc
(bad)
std
(bad)
inc
add
test
icebp
mov
loop
(bad)
sti
push
std
mov
xchg
inc
sbb
cmps
movs
cmps
jmp
aas
(bad)
cmp
(bad)
pop
mov
std
aas
(bad)
mov
std
scas
(bad)
push
mov
mov
push
mov
mov
mul
jg
paddd
pop
push
std
mov
push
cld
push
xchg
cmp
(bad)
out
dec
bound
std
out
(bad)
(bad)
fldcw
sub
pop
(bad)
out
(bad)
jmp
cli
sbb
cmps
std
sub
cld
cs
jg
mov
xchg
sbb
repnz
cld
cmp
aas
cmps
test
(bad)
sti
jg
or
fsubr
(bad)
std
mov
mov
dec
pop
mov
imul
push
and
out
icebp
addr16
pop
jg
pop
clc
pop
(bad)
aas
jg
call
pop
std
mov
call
out
(bad)
stc
sti
std
fistp
(bad)
lahf
(bad)
jg
mov
lock
iret
mov
in
jmp
fsub
jmp
push
add
(bad)
std
inc
inc
neg
(bad)
cmp
xchg
push
adc
idiv
pop
jg
das
sti
cmp
(bad)
pop
(bad)
out
fistp
bound
mov
xlat
jg
outs
repz
(bad)
sar
pop
cld
pop
sub
aas
cmc
paddb
in
dec
(bad)
fistp
(bad)
std
stos
jg
scas
cli
dec
jg
scas
clc
mov
jg
mov
mov
cld
cli
inc
sahf
iret
jle
pop
push
(bad)
clc
sbb
inc
(bad)
std
pop
xchg
dec
cmps
and
aas
hlt
sti
dec
in
std
xchg
xlat
aas
std
scas
call
fwait
(bad)
jge
repnz
aas
call
add
aas
clc
dec
mov
scas
(bad)
sti
lahf
std
adc
inc
retf
das
jmp
paddd
mov
cmovs
iret
mov
inc
jmp
pop
inc
clc
aas
push
pop
icebp
aas
dec
mov
repz
movs
jo
jg
nop
out
jg
push
(bad)
cld
xchg
(bad)
fdivrp
jmp
cli
add
call
dec
dec
aaa
jg
push
out
cld
jecxz
(bad)
pop
push
std
(bad)
in
out
icebp
lahf
(bad)
fistp
inc
(bad)
mov
jg
pop
clc
loopne
call
jg
push
dec
jmp
push
scas
dec
ret
inc
(bad)
sti
daa
inc
nop
add
mul
(bad)
fist
jmp
push
pop
xchg
or
in
repnz
sbb
clc
ja
mov
std
pop
adc
cld
(bad)
xchg
aam
lods
stc
sub
ret
repz
sbb
jmp
(bad)
cli
dec
xchg
cmp
push
(bad)
mov
jmp
std
mov
pop
std
ud0
aas
icebp
(bad)
cli
lods
inc
dec
bnd
(bad)
inc
(bad)
std
mov
(bad)
(bad)
idiv
aas
lahf
std
cmp
xchg
xor
jg
idiv
stc
lahf
std
cdq
mov
repnz
call
mov
std
outs
inc
stos
pop
inc
aad
jmp
sar
ja
(bad)
rcr
(bad)
push
mov
scas
(bad)
mov
sti
mov
(bad)
(bad)
cld
sti
call
das
mov
inc
scas
cld
add
jmp
cmc
mul
in
cli
fnstcw
clc
dec
jmp
les
(bad)
aas
clc
outs
cld
cs
jmp
aas
cld
mov
out
aas
idiv
(bad)
pop
(bad)
aam
in
out
icebp
jg
cli
mov
enter
mov
jg
das
cld
sti
dec
jae
xor
(bad)
jmp
cmps
(bad)
out
cmp
push
inc
jmp
loope
(bad)
lahf
ds
mov
pop
clc
push
mov
inc
sub
(bad)
cli
aas
jge
jg
(bad)
(bad)
clc
dec
loope
hlt
loopne
std
fnstenv
fist
xchg
icebp
(bad)
jg
mov
das
(bad)
loopne
cli
aad
out
icebp
paddd
jmp
das
sti
mov
mov
out
icebp
mov
call
cmp
out
(bad)
std
out
push
(bad)
fcmovnu
(bad)
sti
outs
stc
and
sar
out
(bad)
mov
jg
mov
xlat
mov
(bad)
jmp
xchg
jg
test
mov
scas
dec
out
push
jmp
scas
stc
(bad)
inc
mov
jg
scas
clc
or
scas
jg
inc
clc
(bad)
clc
das
leave
jnp
iret
push
aas
icebp
(bad)
dec
sbb
not
(bad)
jg
pop
(bad)
outs
(bad)
call
push
cmc
mov
(bad)
adc
push
adc
aaa
fdivrp
mov
out
std
(bad)
enter
sub
iret
jg
fsub
(bad)
cli
clc
(bad)
add
jmp
leave
lods
std
jae
lea
mov
jg
idiv
out
jg
outs
cld
adc
push
mov
mov
or
(bad)
cld
or
pop
cld
fistp
aas
nop
pushf
mov
(bad)
lahf
addr16
jg
pop
(bad)
outs
mov
dec
dec
pop
(bad)
(bad)
in
(bad)
(bad)
idiv
iret
pop
std
addr16
cmps
call
lahf
(bad)
sti
dec
jg
pop
clc
pop
dec
idiv
cmp
scas
cld
fild
cmp
(bad)
dec
jg
pop
cmps
cmp
jg
aas
and
lock
pop
inc
push
(bad)
cld
lahf
jg
(bad)
std
scas
std
movs
push
aas
clc
aas
(bad)
mov
jg
cmp
dec
fsubr
fist
cld
push
(bad)
fstp
jg
xchg
call
jg
jg
dec
inc
out
(bad)
mov
pop
pop
nop
xchg
lock
cld
(bad)
(bad)
pop
retf
(bad)
jmp
lods
jmp
mov
jg
das
ja
(bad)
pop
sti
paddb
rcr
(bad)
fisttp
adc
aas
std
jg
ret
clc
jnp
sti
mov
xchg
push
inc
aas
lock
dec
(bad)
pop
test
int
icebp
(bad)
cld
cmp
(bad)
mov
xor
(bad)
push
jg
jg
pop
jg
fcomip
rcr
sti
jg
sub
pop
imul
sar
stc
jg
out
jmp
jg
or
in
dec
jg
out
call
xchg
push
push
sbb
sti
pop
(bad)
mov
mov
cld
mov
sub
and
std
pop
inc
inc
inc
mov
mov
hlt
outs
cld
fistp
pop
dec
push
loope
cld
mov
(bad)
cld
das
leave
cli
std
xchg
pop
(bad)
(bad)
leave
out
inc
push
in
cli
paddd
mov
jp
jg
aaa
jmp
(bad)
std
das
push
aaa
push
mov
call
pop
clc
jg
test
sbb
(bad)
mov
not
mov
idiv
cmps
jmp
(bad)
iret
(bad)
jge
sbb
pop
std
cdq
in
(bad)
fistp
mov
cld
(bad)
call
pop
or
in
cld
cmp
outs
push
aas
nop
(bad)
dec
imul
repnz
das
std
mov
(bad)
(bad)
std
mov
push
jmp
pop
sub
lock
int
add
sbb
push
scas
hlt
pop
cld
daa
inc
pop
icebp
pop
(bad)
pop
stc
out
icebp
retf
jle
(bad)
sti
jg
or
ja
iret
aas
clc
paddb
cmc
lahf
clc
jg
xor
jg
push
paddw
(bad)
jmp
and
jg
and
jg
push
jg
jg
in
push
(bad)
(bad)
in
aas
dec
stos
hlt
pop
(bad)
out
inc
(bad)
jmp
mov
adc
imul
std
call
(bad)
cld
aas
cld
xchg
mov
(bad)
das
mov
rcr
clc
mov
scas
cmps
mov
scas
(bad)
mov
aas
std
mov
jg
and
addr16
pop
mov
stos
not
mov
jg
pop
call
pop
(bad)
cmp
cld
addr16
adc
loope
ds
(bad)
cs
cmp
pop
dec
mov
jmp
lods
(bad)
std
loop
sti
fild
cmp
std
sbb
cmc
(bad)
sti
jg
cmp
aas
lock
(bad)
mov
in
aad
dec
shr
scas
clc
mov
lods
mov
pop
jbe
aaa
jg
retf
aaa
jg
(bad)
std
daa
push
push
dec
pop
sti
mov
cld
cmp
(bad)
cli
pop
jle
inc
jmp
(bad)
(bad)
out
aas
icebp
aas
movs
add
idiv
std
aaa
(bad)
mov
idiv
loopne
cld
pop
(bad)
out
jg
xlat
(bad)
mov
call
das
inc
jmp
retf
xlat
ja
(bad)
(bad)
jmp
inc
jg
jne
cmc
jg
ret
jmp
jg
jg
pop
(bad)
cli
pop
dec
inc
cmps
inc
mov
lock
(bad)
cli
pop
enter
enter
jmp
jmp
xor
(bad)
inc
pop
std
fwait
adc
xchg
pop
cli
inc
inc
stos
(bad)
pop
retf
out
fistp
(bad)
aam
jmp
lahf
sti
pop
jle
scas
mov
cld
cmp
push
cld
pop
mov
(bad)
pop
inc
pop
sti
jg
in
lods
(bad)
xchg
push
aas
std
lds
mov
outs
(bad)
xchg
(bad)
push
std
xchg
call
mov
cmc
(bad)
xchg
aas
lock
cld
(bad)
cmc
jg
xchg
adc
cld
outs
(bad)
in
push
aaa
nop
imul
pop
dec
dec
fdivr
xchg
push
aaa
inc
(bad)
in
mul
(bad)
retf
jg
sub
mov
lock
mov
(bad)
fnstcw
ja
scas
jg
popa
ror
aas
std
cdq
call
leave
(bad)
std
lahf
cld
cmp
inc
jg
jg
lahf
jg
(bad)
sti
(bad)
std
xlat
mov
aas
xchg
mov
inc
(bad)
(bad)
(bad)
sub
jg
xchg
jmp
inc
jg
dec
(bad)
push
(bad)
std
out
(bad)
mov
jg
jg
sti
dec
mov
cmp
pop
jg
out
icebp
jg
mov
idiv
xchg
mov
cmc
outs
dec
mov
jg
mov
sbb
mov
jns
jg
inc
ja
std
aas
aas
inc
jmp
call
pop
(bad)
aas
inc
push
mov
aas
clc
dec
push
fdiv
repnz
fcos
mov
sar
(bad)
(bad)
lahf
jg
pop
stc
test
jmp
das
cld
aaa
inc
jg
ret
(bad)
cdq
in
(bad)
out
jg
sub
adc
jecxz
xor
add
(bad)
(bad)
sti
jg
cmc
inc
scas
jg
paddb
(bad)
out
mov
mov
call
stos
jmp
aas
cli
pop
dec
sar
repnz
sti
out
stc
mov
or
dec
in
cli
outs
(bad)
jmp
(bad)
stc
jnp
lahf
mov
inc
sbb
pop
dec
into
call
std
outs
stos
(bad)
jnp
xchg
fcmovne
xchg
mov
pop
stc
pop
daa
jne
mov
pop
movs
shl
cld
mov
aas
lock
daa
aad
jg
aaa
jmp
push
addr16
push
movs
mov
movs
push
cmp
cmc
(bad)
inc
and
push
xchg
cmp
pop
mov
(bad)
call
cs
out
icebp
rsqrtps
push
xchg
mov
retf
(bad)
sti
jg
xlat
sub
std
stos
jg
fcomip
aas
movs
push
icebp
push
fwait
(bad)
pop
adc
call
out
jmp
pop
in
pop
cld
pop
jg
ja
iret
call
xlat
(bad)
push
push
jb
xor
mov
inc
outs
fcomp
(bad)
jmp
and
and
ja
push
mov
cli
paddb
sub
jmp
(bad)
std
stos
(bad)
sar
sti
out
cld
aad
sar
lahf
rcl
nop
sbb
(bad)
cli
mov
fs
mov
inc
fnstsw
jmp
xlat
mov
paddd
push
mul
and
clc
sbb
xchg
outs
push
jmp
lahf
(bad)
fstp
lods
push
push
into
(bad)
(bad)
dec
mov
cld
add
pop
repnz
jecxz
push
aaa
xchg
inc
lock
(bad)
(bad)
mov
repz
inc
jmp
xchg
call
in
jmp
(bad)
(bad)
cli
std
inc
mov
mov
(bad)
aas
cld
(bad)
mov
jg
out
dec
or
pop
adc
pop
idiv
std
outs
mov
cld
cdq
jmp
jg
loope
pop
fwait
std
push
call
pop
cmc
pop
(bad)
xchg
(bad)
call
cli
push
jg
mov
xchg
fbld
(bad)
pop
shr
sar
rcr
stc
cmp
scas
inc
cli
pop
mov
pop
cli
pop
(bad)
cs
lahf
clc
fnstsw
lock
cld
mov
inc
retf
icebp
stos
sub
mov
test
sub
cld
stos
adc
cld
aam
rep
jmp
mov
mov
test
sub
jmp
inc
(bad)
jg
ud0
fist
xchg
(bad)
dec
scas
(bad)
jg
or
pop
jb
inc
push
pop
(bad)
mov
and
jg
std
sub
std
mov
pop
cmp
xchg
cmc
lahf
inc
ret
fidivr
aas
(bad)
aas
xchg
aaa
lock
movs
inc
jg
jmp
idiv
std
mov
sub
jmp
repz
(bad)
cmp
mov
(bad)
mov
mov
jmp
push
das
xchg
dec
clc
jnp
neg
jecxz
cld
mov
mov
inc
jmp
clc
aaa
adc
cld
out
mov
pop
cli
inc
(bad)
out
push
push
push
mov
(bad)
mov
mov
mov
(bad)
cli
outs
inc
cmp
push
jmp
push
addr16
cmp
stc
mov
xchg
dec
inc
repnz
cld
movs
push
(bad)
std
sub
push
jg
inc
(bad)
pop
jg
jmp
mov
(bad)
jg
add
idiv
add
jmp
imul
aas
dec
dec
add
mov
in
mov
pop
(bad)
sub
cmc
out
(bad)
jg
(bad)
jmp
gs
push
pop
(bad)
mov
push
xor
out
cld
pop
sub
loope
sub
loopne
and
mov
leave
mov
clc
rsqrtps
sar
repnz
cld
outs
call
paddd
lahf
clc
paddd
(bad)
sti
(bad)
cli
cld
(bad)
(bad)
jae
int
test
push
jmp
pop
stc
mov
jl
mov
jg
dec
and
adc
push
in
pop
cld
cmovs
jg
and
pop
sub
repz
pop
jg
pop
clc
mov
scas
std
jg
retf
pop
inc
neg
jg
xor
paddb
sar
ja
retf
(bad)
mov
xchg
test
(bad)
jmp
mov
inc
repnz
dec
fist
push
sar
dec
imul
shld
outs
cld
cmp
add
push
lods
ss
inc
push
scas
clc
addr16
push
dec
cld
push
jle
jmp
cli
aas
icebp
pop
(bad)
(bad)
sbb
loopne
(bad)
inc
shr
(bad)
(bad)
and
xor
xlat
(bad)
std
paddusw
aad
adc
push
push
lahf
mov
push
jg
mov
adc
pop
std
pop
std
mov
xlat
push
scas
ja
(bad)
std
retf
sub
leave
pop
std
iret
push
adc
inc
xor
in
ret
repz
pop
neg
test
inc
cmp
mov
shl
pop
jns
jg
pop
neg
std
(bad)
(bad)
sti
jg
aas
push
call
jmp
dec
sti
mov
mul
aas
cmc
lahf
(bad)
out
mov
std
pop
adc
(bad)
push
pop
dec
sub
and
in
mov
cmps
std
xor
out
jmp
jg
idiv
std
fistp
scas
mov
sti
xlat
push
jp
jg
std
jmp
scas
(bad)
mov
out
mov
jg
sbb
jg
pop
imul
(bad)
fistp
mov
or
dec
push
inc
bnd
(bad)
loope
std
scas
inc
push
cld
inc
test
push
in
cld
int
fsubr
jmp
cld
ud0
and
cmps
test
iret
(bad)
std
sub
nop
loop
ret
mov
(bad)
cdq
push
aas
lods
enter
inc
push
idiv
aas
inc
pop
sti
lods
(bad)
in
mov
jmp
and
(bad)
lahf
pop
adc
and
pop
(bad)
jle
push
iret
nop
or
pop
mov
push
bound
(bad)
std
jg
cmps
and
mov
inc
(bad)
sti
(bad)
cli
pop
(bad)
mov
jecxz
xchg
lahf
std
pop
xor
dec
jmp
push
xor
repz
(bad)
cmps
jg
pop
fdivr
scas
push
das
stc
pop
inc
(bad)
retf
push
jg
std
sub
sti
(bad)
pop
(bad)
out
aas
lock
dec
inc
jg
(bad)
(bad)
in
test
jg
dec
jg
pop
aas
inc
scas
sar
stos
inc
mov
adc
cdq
jg
jg
lahf
call
ret
inc
push
enter
jmp
jns
mov
xlat
out
dec
es
cld
sbb
out
pop
lahf
adc
jg
(bad)
(bad)
call
das
clc
addr16
out
aas
push
push
std
popf
movs
inc
push
mov
into
jmp
pop
jl
paddb
pop
jmp
(bad)
cld
retf
xor
jg
jg
retf
(bad)
out
jmp
cld
mov
idiv
cld
cmp
scas
movs
fs
hlt
fwait
(bad)
outs
xor
jle
(bad)
std
mov
inc
mov
sar
cld
pop
dec
mov
dec
jmp
push
adc
pop
sti
(bad)
jmp
cld
aaa
(bad)
out
pop
stc
icebp
aas
clc
lahf
cld
cdq
jmp
xchg
fs
enter
(bad)
scas
pop
stc
jg
mov
aas
cmp
add
lea
inc
and
outs
mov
inc
push
pop
inc
rcr
idiv
(bad)
cld
lahf
stc
mov
fbld
imul
jmp
retf
mov
stos
out
inc
pop
(bad)
jg
add
scas
fdivr
dec
xchg
sbb
pop
(bad)
out
pop
(bad)
cmp
daa
pop
popa
dec
xchg
and
lock
cli
sbb
scas
sub
mov
arpl
cli
jg
xchg
jmp
dec
or
fidivr
(bad)
(bad)
out
(bad)
fcos
sti
xchg
jge
cmp
inc
mov
xor
pop
adc
pop
movs
stc
aaa
jg
(bad)
in
(bad)
aas
jle
jb
jg
scas
and
movs
test
(bad)
fucomip
sub
add
cli
ins
jmp
xchg
outs
(bad)
fstp
mov
(bad)
std
pop
(bad)
(bad)
inc
cmp
jmp
enter
(bad)
mov
sub
(bad)
xchg
(bad)
clc
aad
in
(bad)
std
das
adc
inc
(bad)
in
idiv
push
ds
ja
in
xchg
sbb
fistp
pop
dec
outs
adc
or
jmp
cmp
jg
(bad)
mov
nop
rol
out
mov
movs
clc
mov
jmp
out
(bad)
mov
jg
mov
lock
scas
mov
(bad)
das
cld
mov
paddd
(bad)
subps
mov
daa
inc
fucomip
mov
setb
mov
dec
mov
jmp
jmp
retf
inc
dec
cli
(bad)
pop
clc
jg
loope
fstp
cld
jg
hlt
in
daa
pop
loop
mov
inc
lahf
dec
dec
stos
pop
cmc
not
lahf
std
jge
loope
jmp
std
jle
fldcw
in
(bad)
jmp
mov
repnz
(bad)
out
jg
(bad)
dec
push
aas
repz
fwait
(bad)
out
jg
xchg
std
pop
mov
lock
(bad)
fbld
jg
aas
lock
dec
pop
enter
inc
lods
cdq
push
xchg
out
push
fcos
cmc
stos
(bad)
fidivr
mov
push
mov
std
and
neg
ja
(bad)
mov
inc
imul
mov
icebp
jg
cmovns
(bad)
scas
jg
push
xchg
inc
fdivrp
std
fist
inc
idiv
out
mov
push
pop
(bad)
(bad)
(bad)
jg
sub
pop
dec
push
clc
scas
cld
cmp
and
mov
inc
inc
dec
xor
sti
mov
repz
lahf
(bad)
jg
sar
push
paddd
add
in
das
cld
mov
les
int
cli
xchg
jl
call
sti
dec
(bad)
mov
(bad)
cmp
push
cld
lahf
jg
stc
pop
jg
aas
idiv
and
imul
stc
aaa
(bad)
fcomp
jecxz
in
(bad)
mov
xlat
(bad)
clc
aas
jg
imul
mov
mov
(bad)
(bad)
daa
sub
jmp
push
xor
std
lea
cli
jg
or
out
aas
hlt
pop
cld
aaa
leave
adc
fild
call
mov
aas
es
cmp
out
jmp
(bad)
das
inc
(bad)
in
xlat
(bad)
mov
(bad)
stc
sub
mov
icebp
paddb
leave
sar
std
paddd
retf
out
icebp
aas
std
cs
sti
scas
std
pop
dec
psubw
sub
std
jae
mov
xchg
mov
call
dec
cld
(bad)
jae
mov
xchg
test
fwait
push
clc
add
in
scas
std
pop
dec
xchg
(bad)
neg
dec
push
(bad)
cld
not
out
push
inc
cmps
fsqrt
(bad)
(bad)
push
retf
outs
(bad)
std
out
repnz
push
(bad)
std
aas
dec
jg
and
jg
mov
push
xchg
jg
sub
retf
pop
xor
mov
push
xor
push
(bad)
call
fisttp
dec
mov
pop
mov
jle
push
retf
fstp
aad
std
imul
(bad)
sti
push
cld
daa
mov
(bad)
pop
cmps
jg
(bad)
(bad)
pop
(bad)
stos
mov
in
mov
push
in
enter
adc
cld
movs
adc
mov
mov
pop
(bad)
sar
in
mov
sar
sub
rcr
push
dec
aaa
dec
xchg
jle
jmp
sti
xchg
push
std
mov
(bad)
sar
lock
cli
pop
(bad)
out
mov
dec
std
iret
mov
retf
(bad)
fcomp
test
daa
std
fwait
mov
xchg
pop
mul
mov
fdivr
mov
ret
inc
in
inc
repz
mov
sub
(bad)
pop
rcr
test
in
in
sti
inc
das
clc
mov
das
std
adc
stc
push
out
icebp
aas
std
mov
loopne
hlt
ja
pop
fbld
(bad)
lea
mov
jg
inc
cld
retf
test
out
cld
pop
jg
mov
sub
aas
jle
fucomip
ja
data16
jecxz
jmp
stc
cmp
jg
out
icebp
daa
std
imul
adc
and
(bad)
clc
paddd
jnp
fidivr
shl
inc
cmp
lahf
dec
push
jg
idiv
fild
enter
std
jnp
sbb
lahf
xchg
(bad)
stc
pop
dec
aas
stc
dec
sti
addr16
outs
std
mov
mov
push
push
and
lea
(bad)
or
(bad)
jp
stc
xchg
mov
leave
aas
lock
push
std
and
loop
mov
loopne
clc
sub
neg
call
adc
jg
jg
xchg
std
fistp
mov
ins
jmp
gs
mov
sti
aas
inc
aas
lock
pop
(bad)
mov
push
jmp
lock
jg
(bad)
dec
(bad)
out
cmc
dec
std
fcos
cmc
ja
fistp
cs
mov
mov
and
mov
mov
out
call
jg
dec
hlt
aas
lock
(bad)
mov
jg
cs
cli
aaa
inc
mov
iret
mov
(bad)
aas
push
scas
out
call
repnz
std
cli
ja
(bad)
xor
(bad)
aas
clc
aas
(bad)
(bad)
cmc
scas
cld
adc
int
mov
icebp
cmps
sub
aaa
(bad)
call
lahf
int
cmc
lahf
push
add
mov
daa
jb
call
push
push
daa
inc
xlat
fcomip
(bad)
clc
lahf
(bad)
out
pop
or
cmps
aad
aas
lock
jge
or
icebp
jg
pop
(bad)
out
jg
xor
lods
mov
push
(bad)
clc
xchg
push
push
(bad)
clc
jg
jbe
clc
mov
cmps
jmp
idiv
std
jmp
cs
push
(bad)
test
call
aas
inc
repz
cld
pop
call
(bad)
repz
cli
adc
cmc
sti
xchg
arpl
jg
std
sti
jg
(bad)
out
shl
jle
outs
jmp
rol
jne
(bad)
loope
cli
cmp
cld
jg
jecxz
mov
xor
(bad)
sti
pop
jg
aad
jno
adc
jns
push
jg
jnp
inc
int
sub
inc
jg
mov
aas
sbb
repnz
adc
nop
mov
cmp
jg
imul
mov
sar
mov
pop
adc
mov
jecxz
cli
add
inc
jg
cmp
jg
sbb
std
retf
inc
aas
nop
jb
mov
loope
inc
xlat
cmps
adc
(bad)
cld
ja
xor
aad
test
call
xchg
div
pop
test
(bad)
icebp
(bad)
cli
(bad)
sar
lock
out
std
aas
std
xchg
jmp
(bad)
aas
xchg
ss
das
inc
mov
(bad)
cld
mov
mov
mov
pop
cli
das
sub
in
(bad)
pop
jg
xchg
jmp
iret
cld
sar
pop
clc
stos
jle
movs
bound
mov
out
push
das
(bad)
(bad)
in
js
inc
cld
(bad)
jg
push
in
std
jecxz
jg
pop
(bad)
cmps
dec
(bad)
xlat
mov
dec
push
(bad)
cmp
(bad)
pop
stc
rsqrtps
ja
mov
je
test
lock
mov
std
xor
neg
idiv
out
jg
stos
jle
xor
icebp
dec
sti
(bad)
cs
jg
jg
lahf
xchg
iret
clc
pop
(bad)
jmp
loopne
hlt
pop
inc
dec
push
mov
cli
aas
adc
(bad)
adc
loope
ss
xchg
push
repz
mul
das
(bad)
aas
push
jg
mov
aas
cmc
(bad)
(bad)
lahf
jg
push
aaa
push
loopne
jg
pop
hlt
(bad)
cli
lahf
inc
(bad)
jmp
mov
(bad)
xlat
mov
(bad)
sti
add
mov
aad
repnz
test
(bad)
(bad)
call
pop
push
std
repnz
(bad)
(bad)
imul
push
lahf
cld
imul
mov
stc
jg
stos
fild
pop
mov
loope
mov
(bad)
(bad)
outs
jg
mov
cli
in
outs
std
lahf
fbld
paddb
jle
push
(bad)
cld
(bad)
retf
fisttp
repz
repnz
xchg
mov
mov
std
pop
cld
or
aas
jl
mov
(bad)
fist
jg
ds
jg
cmc
pop
(bad)
jmp
cmps
std
(bad)
(bad)
sti
jmp
std
mov
das
inc
jg
jg
or
lock
push
call
hlt
das
stc
fistp
(bad)
(bad)
cld
and
(bad)
clc
xchg
fadd
(bad)
(bad)
(bad)
jmp
aas
mov
cld
mov
jg
dec
clc
repz
jmp
out
(bad)
stc
xchg
inc
push
jmp
pop
dec
or
call
out
call
pop
stc
paddd
nop
in
cli
bswap
ins
cli
dec
leave
loope
lahf
stos
call
stos
cmc
push
aas
push
xor
adc
in
pop
dec
(bad)
jmp
std
mov
mov
icebp
xchg
std
cli
call
fisttp
dec
jbe
pop
inc
mov
movs
lock
cmps
(bad)
jg
mov
inc
fbstp
mov
xchg
mov
(bad)
out
hlt
(bad)
clc
pop
imul
jns
jmp
pop
cld
adc
iret
cld
(bad)
sub
repnz
push
jb
inc
sub
fdivr
aas
lock
cld
mov
(bad)
fistp
jg
ret
jg
inc
(bad)
(bad)
out
jmp
aaa
std
push
jmp
push
xchg
in
mov
(bad)
out
inc
stos
jg
lahf
cld
gs
sti
pop
clc
stos
adc
call
push
mov
mov
clc
xchg
xchg
aas
hlt
jnp
shl
(bad)
in
mov
bnd
ud0
retf
pop
test
add
push
loop
jmp
(bad)
pop
mov
dec
jmp
sub
sti
pop
inc
test
aad
std
or
mov
jmp
aas
inc
push
test
fistp
(bad)
lahf
xchg
sar
inc
jmp
mov
std
xchg
out
(bad)
sti
fstp
inc
jg
paddb
cdq
mov
cld
popf
mov
lahf
cld
fcos
(bad)
pop
sti
jg
jns
jecxz
shr
pop
xchg
cmp
scas
shl
dec
inc
and
aaa
lods
mov
cmp
aam
dec
out
out
clc
out
std
and
scas
mov
push
push
scas
(bad)
cmp
mov
sti
out
inc
push
das
call
jle
retf
jmp
stos
(bad)
jmp
sti
jg
(bad)
jg
jg
imul
std
sar
jmp
lahf
icebp
pop
(bad)
pop
push
mov
cli
das
scas
jle
imul
loopne
clc
push
jmp
push
pop
sti
outs
cld
cmps
xor
jg
outs
idiv
shl
gs
jmp
dec
mov
paddb
dec
std
aas
jmp
push
mov
jle
mov
push
pop
(bad)
jg
cli
inc
mov
paddb
(bad)
mov
jg
clc
jmp
jg
(bad)
mov
jg
movs
cld
movq
dec
mov
(bad)
cld
mov
and
std
outs
(bad)
(bad)
out
sti
jnp
dec
pop
inc
push
xor
fs
lds
sti
shr
jmp
sti
pop
(bad)
sub
pop
mov
out
xlat
out
call
(bad)
stos
(bad)
jg
xor
call
jg
lea
mov
cmp
(bad)
arpl
leave
(bad)
clc
aas
xchg
ret
std
dec
std
xchg
(bad)
jecxz
daa
call
cmc
mov
repz
pop
jg
out
icebp
aas
aas
clc
(bad)
fdivr
cmc
aas
cld
leave
jg
mov
(bad)
cli
pushf
mov
(bad)
sub
scas
movs
nop
div
clc
xchg
neg
and
aas
repz
(bad)
xlat
(bad)
fcos
std
jg
xchg
call
(bad)
clc
sti
dec
mov
icebp
(bad)
(bad)
daa
push
jg
lahf
mov
xchg
je
std
icebp
(bad)
dec
mov
inc
pop
icebp
and
jle
mov
push
aaa
dec
(bad)
out
(bad)
out
das
std
scas
inc
(bad)
stc
shld
xchg
dec
inc
mov
pandn
aas
inc
(bad)
sti
xchg
std
xchg
mov
hlt
popf
aas
hlt
(bad)
cld
mov
out
fbstp
stc
aad
daa
and
cld
paddd
xchg
lods
clc
mov
dec
repz
mov
(bad)
out
dec
pop
fnstcw
inc
dec
mov
pop
jge
(bad)
(bad)
gs
jg
cmp
ret
stos
pop
mov
cmc
out
dec
scas
lahf
cld
pmulhuw
inc
mov
in
mov
repz
(bad)
mov
push
xor
shl
push
jnp
test
inc
loop
jmp
jg
and
aas
icebp
(bad)
clc
dec
imul
cli
fistp
(bad)
mov
je
outs
cld
jg
lods
mov
jmp
ja
mov
jl
aas
lock
std
xchg
jmp
cmc
jg
arpl
xchg
in
pop
(bad)
out
(bad)
jmp
call
(bad)
cli
(bad)
(bad)
(bad)
jo
jno
enter
push
std
outs
pop
dec
jmp
push
fwait
(bad)
pop
(bad)
jg
jg
ja
mov
xlat
(bad)
pop
(bad)
mov
xchg
(bad)
loopne
(bad)
mov
stos
inc
dec
cmc
out
icebp
pop
(bad)
pop
(bad)
fnstsw
push
(bad)
cli
out
dec
stos
idiv
push
setb
stc
jg
pop
push
(bad)
jns
int3
std
(bad)
aas
jmp
nop
neg
dec
pop
mul
(bad)
fistp
(bad)
clc
jge
(bad)
out
mov
aas
push
aas
in
(bad)
aad
or
call
ud0
mov
dec
mov
dec
cmp
aad
pop
clc
dec
(bad)
fistp
jmp
dec
int
sti
jg
(bad)
in
dec
mov
stc
cmps
push
mov
std
pop
(bad)
stc
pop
clc
pop
rcr
sub
hlt
jg
xchg
(bad)
jmp
sti
out
cld
pop
push
push
cmc
dec
cld
(bad)
repnz
jmp
(bad)
push
mov
(bad)
fdivr
fwait
mov
paddb
jg
out
push
xchg
cld
fistp
pop
push
fs
daa
std
sub
int3
pop
mov
in
aas
and
clc
imul
lock
fcomip
jg
jmp
out
(bad)
(bad)
loop
pop
cld
aad
icebp
mov
cs
in
(bad)
mov
cli
jmp
mov
pop
clc
(bad)
fwait
xchg
sbb
iret
leave
fs
jmp
shr
sub
imul
jmp
repnz
cld
mov
add
inc
or
jle
adc
jg
jmp
cld
aaa
movs
jne
out
jg
(bad)
(bad)
in
pushf
(bad)
sar
sahf
fsubr
(bad)
in
iret
jmp
out
(bad)
std
retf
(bad)
jmp
pop
(bad)
(bad)
ret
mov
pop
cld
not
(bad)
in
out
repnz
(bad)
fistp
rcl
push
cmps
out
pop
movs
sub
adc
mov
dec
hlt
add
loop
mov
inc
icebp
aas
fdivr
aas
jle
fild
add
cmps
jmp
paddb
sub
out
(bad)
(bad)
pop
cld
aas
jg
pop
clc
in
lahf
cld
adc
stc
mov
(bad)
jmp
and
clc
lahf
dec
mov
xchg
sti
jnp
ret
(bad)
hlt
paddd
outs
mov
mov
push
xor
stc
mov
iret
cld
jns
push
push
inc
mov
std
jge
(bad)
aas
repnz
(bad)
jg
rol
mov
cld
ja
loope
idiv
icebp
pop
(bad)
sub
cmps
(bad)
sar
mov
sub
iret
mov
push
mov
pop
js
call
out
aas
clc
idiv
adc
(bad)
in
fnstsw
(bad)
xchg
fdivr
out
rcr
cld
cdq
push
lahf
stc
jg
xchg
jg
scas
cli
(bad)
jle
push
arpl
mov
and
out
outs
stc
jg
std
mov
(bad)
jg
xchg
movs
or
adc
sar
adc
xlat
inc
les
(bad)
call
call
out
inc
jmp
(bad)
arpl
push
(bad)
jmp
jmp
int3
jg
aas
inc
aas
ds
movs
(bad)
cli
pop
clc
mov
ja
mov
aas
inc
pop
(bad)
scas
jmp
iret
cld
mov
sub
std
ret
(bad)
out
jg
(bad)
mov
int3
fistp
sub
jg
pop
inc
(bad)
sti
pop
cld
pop
(bad)
in
jne
jnp
add
scas
pushf
jle
pop
cld
mov
cmps
or
(bad)
cld
jg
mov
sti
(bad)
das
std
push
(bad)
out
(bad)
dec
retf
out
fcomp
loopne
das
clc
clc
outs
cld
pop
jg
jg
outs
(bad)
pop
idiv
pop
call
(bad)
stc
loopne
stc
mov
(bad)
mov
aad
clc
out
ds
xchg
inc
call
mov
(bad)
jmp
std
scas
cld
(bad)
(bad)
jmp
xchg
call
jg
mov
out
push
jmp
mov
(bad)
fcomp
out
(bad)
cld
out
cmps
jg
mov
iret
mov
pop
cmc
mov
sar
(bad)
idiv
icebp
pop
mov
scas
dec
mov
(bad)
sti
push
dec
stc
mov
cld
aas
cld
sar
(bad)
(bad)
std
outs
(bad)
daa
aas
stc
push
pop
cmp
pop
std
lahf
std
fistp
out
hlt
push
push
mov
mov
(bad)
(bad)
jnp
stc
scas
mov
push
das
call
jmp
fnstcw
dec
pop
lahf
js
xor
jg
stos
jmp
dec
imul
cld
and
(bad)
jmp
cli
mov
push
call
mov
jg
std
mov
aas
mov
cli
cmp
push
std
mov
mov
scas
(bad)
fdivrp
cmc
(bad)
(bad)
push
(bad)
in
(bad)
clc
stos
inc
jnp
outs
jg
or
(bad)
xchg
(bad)
das
std
cmps
(bad)
fstp
out
sti
add
out
hlt
idiv
out
lahf
sti
pop
rcr
push
out
bnd
jmp
rcr
(bad)
aas
std
lahf
jg
jg
cld
(bad)
jg
stc
aas
clc
dec
cld
lea
dec
(bad)
(bad)
or
jne
out
(bad)
pop
std
cmp
inc
mov
(bad)
jns
jg
jne
push
mov
call
das
(bad)
outs
(bad)
scas
push
das
cld
pop
jmp
jmp
pop
clc
jmp
(bad)
fdivr
jle
aas
idiv
cmps
(bad)
cmc
jmp
mov
mov
lock
dec
jmp
jg
mov
(bad)
pop
stc
fwait
push
aas
std
mov
(bad)
std
daa
dec
imul
repnz
cmp
int
jecxz
in
jg
cli
jmp
fidivr
jl
out
fiadd
jl
jmp
sbb
mov
mov
(bad)
ss
stc
sbb
into
hlt
sti
jmp
cs
pop
or
mov
ror
pop
(bad)
jmp
xor
mov
push
cli
stc
xchg
rcr
(bad)
fldcw
jg
sub
mov
and
std
lods
call
pop
cli
jecxz
push
int
rcr
hlt
(bad)
jnp
(bad)
cmp
call
cli
call
(bad)
(bad)
xlat
add
and
push
adc
mov
js
xlat
rcr
lahf
push
mov
cld
cmc
call
frstor
clc
mov
mov
lahf
(bad)
sub
test
iret
(bad)
ds
aaa
stc
xor
aas
mov
repz
mov
stc
pop
std
call
call
out
pop
adc
xchg
pop
or
(bad)
cmp
jnp
imul
aas
loopne
call
xchg
pop
jg
std
sti
push
shl
mov
call
or
(bad)
addr16
fidivr
scas
std
jmp
sbb
imul
mov
std
cmp
std
sbb
daa
cld
out
dec
(bad)
cmp
adc
(bad)
std
cmp
out
clc
jne
(bad)
mov
(bad)
not
push
push
out
jg
pop
imul
scas
sti
jmp
sbb
clc
(bad)
xlat
lds
mov
sub
neg
loop
ret
mov
icebp
mov
repz
xlat
add
call
jge
sti
sbb
mov
(bad)
arpl
mov
jle
jg
xlat
jmp
xlat
clc
aas
jle
(bad)
aaa
clc
sub
add
sti
jnp
push
(bad)
or
cli
or
(bad)
(bad)
sbb
xlat
mov
jmp
(bad)
adc
arpl
das
dec
xchg
pop
jecxz
dec
inc
lahf
mov
cmps
add
jle
fcomip
dec
std
xor
std
or
jle
mov
paddd
outs
inc
add
xlat
clc
dec
jg
mov
dec
sbb
inc
mov
cld
mov
xor
cld
cmps
shl
clc
dec
icebp
in
outs
hlt
fwait
loope
fist
jae
sti
paddw
push
clc
std
xchg
icebp
out
outs
jle
call
(bad)
fist
inc
hlt
dec
mov
(bad)
sub
div
daa
cld
out
mov
fucomip
out
hlt
pop
(bad)
cli
pop
mov
fdivrp
and
loopne
push
lock
pop
dec
repz
dec
sar
jmp
popa
loop
pop
xchg
jmp
xlat
clc
xlat
jmp
cld
mov
dec
jg
rcr
(bad)
scas
icebp
jmp
jecxz
xor
pop
aas
imul
(bad)
cld
xlat
push
sbb
scas
in
clc
lods
clc
das
or
mov
or
sbb
sbb
jg
pop
push
mov
fwait
cld
sbb
(bad)
es
std
pop
mov
mov
jo
stc
dec
in
sub
in
outs
jno
pop
repz
cmps
mov
xlat
sbb
pop
pop
cld
xlat
outs
push
stc
mov
jmp
push
pop
(bad)
jmp
clc
xor
int
cmp
jg
push
mov
(bad)
loope
jle
pop
jecxz
push
(bad)
repz
mov
adc
mov
(bad)
or
jmp
(bad)
cli
in
jle
push
cld
push
retf
jg
idiv
jg
push
cmp
sbb
lds
aaa
cld
xlat
out
clc
imul
cld
xlat
out
neg
scas
fucomip
xlat
cwde
lock
mov
call
out
xlat
lahf
into
jg
sbb
stc
scas
jg
(bad)
cli
pop
jle
and
clc
sub
xor
(bad)
cli
pop
jg
dec
(bad)
jmp
loop
ds
xor
mov
sbb
cld
xlat
out
imul
and
xlat
fstp
push
jg
out
mov
adc
in
cmp
pop
jecxz
loopne
(bad)
jge
imul
clc
push
clc
scas
fcomip
mov
pop
ja
lea
cmp
lds
jmp
clc
jae
scas
aas
sahf
(bad)
cli
in
clc
or
scas
jg
call
std
sbb
push
imul
clc
imul
clc
sub
scas
(bad)
cld
xlat
clc
xlat
clc
imul
dec
(bad)
jmp
scas
icebp
aaa
lock
jg
push
inc
xor
imul
clc
cmp
scas
pop
(bad)
in
icebp
xlat
fisubr
jg
int
out
xchg
int3
lahf
jg
xor
sub
clc
int
lea
call
fistp
xlat
(bad)
push
call
(bad)
aaa
test
jg
sbb
mov
or
clc
mov
pop
jmp
push
inc
mov
inc
mov
jle
(bad)
xlat
clc
in
jg
lahf
(bad)
jne
fwait
pop
jecxz
stc
(bad)
(bad)
aam
out
push
lahf
cmps
jg
(bad)
clc
pop
(bad)
mov
jmp
xchg
mov
push
jle
pop
jecxz
cli
int
sar
mov
std
in
stc
cmp
cmp
sub
pop
cld
push
hlt
out
pop
cli
pop
cld
test
pop
cld
stc
hlt
out
outs
call
push
hlt
out
jmp
repnz
mov
repnz
mov
repnz
mov
jmp
dec
cli
mov
lods
(bad)
daa
cli
imul
lods
jle
std
sti
pop
std
push
jmp
std
sti
jecxz
cmc
outs
clc
jmp
xchg
mov
jmp
pop
dec
hlt
out
mov
cli
div
(bad)
ins
push
sar
mov
out
cmps
jg
(bad)
inc
(bad)
dec
(bad)
ins
jmp
cli
imul
outs
sti
cmps
sar
out
mov
push
sar
xlat
sar
mov
std
adc
jg
(bad)
std
cmps
jle
jg
(bad)
std
mov
sti
jg
(bad)
jge
(bad)
ja
dec
adc
sti
xchg
jg
pop
jecxz
cmp
cld
xlat
lahf
cli
imul
mov
xor
leave
pop
jg
std
cmc
imul
mov
std
pop
mov
scas
std
imul
cld
xlat
scas
neg
jge
cli
loopne
std
xor
pop
into
jg
out
repz
std
xor
cli
sub
sti
pop
jle
pop
not
clc
mov
cmc
daa
(bad)
fdivr
inc
jg
hlt
scas
mov
cli
jmp
sar
psubsb
mov
in
mov
(bad)
jmp
push
clc
xlat
(bad)
jne
(bad)
fucomip
arpl
cmc
imul
jg
outs
clc
inc
xchg
push
jl
jg
out
mov
(bad)
jp
imul
les
sar
mov
imul
cld
xlat
pop
cli
imul
mov
push
mov
std
sar
idiv
std
push
mov
mul
(bad)
das
neg
sti
mov
jecxz
(bad)
std
fsubr
data16
imul
loope
add
in
push
aaa
cld
xor
xlat
dec
mov
xlat
clc
fild
ret
or
(bad)
cli
ins
jle
jg
aaa
ret
(bad)
sbb
(bad)
(bad)
jmp
xor
jmp
outs
cld
dec
std
cmp
jle
mov
pop
dec
aaa
(bad)
xor
jg
(bad)
jmp
jmp
sar
jg
mov
jp
dec
jle
jg
call
jecxz
loop
jle
fnstsw
outs
sti
dec
fdivrp
mov
mov
push
fwait
(bad)
lock
lahf
hlt
imul
(bad)
jp
leave
scas
xor
jg
mov
mov
jg
icebp
hlt
xlat
outs
icebp
imul
lahf
retf
cmp
sbb
inc
stc
jmp
movs
mov
outs
jnp
jg
pop
hlt
xlat
outs
imul
push
mov
or
dec
out
and
sti
xlat
aas
icebp
imul
pop
pop
mov
cld
push
fdiv
mov
xor
fs
aaa
out
mov
cld
test
mov
mov
inc
jmp
pop
rcr
outs
cmc
fimul
retf
outs
jmp
dec
outs
(bad)
sti
std
jp
loopne
clc
mov
cmp
jmp
data16
fdivrp
stc
fwait
push
hlt
xlat
jmp
mov
(bad)
mov
jecxz
repz
mov
cdq
mov
jmp
outs
mov
std
mov
xor
scas
repnz
test
jnp
das
mov
mov
hlt
mov
sub
mov
arpl
jnp
sar
mov
pop
mov
std
xchg
mov
dec
jnp
fld
mov
jg
scas
aaa
cli
xor
mov
cmc
(bad)
mov
mov
mov
inc
scas
mov
imul
(bad)
repnz
sti
pop
ds
std
fcomi
pop
repnz
pop
js
lahf
cli
cmc
idiv
fisttp
sti
xor
jg
(bad)
fidivr
mov
cmp
mov
imul
scas
xchg
mov
(bad)
jl
pop
jecxz
aad
jle
fisttp
sub
lahf
(bad)
push
mov
repz
sti
xor
std
loopne
repz
fdivrp
in
fdivrp
scas
icebp
daa
jmp
jp
imul
xor
dec
mov
mov
push
xlat
clc
jmp
mov
sub
pop
mov
ja
mov
mov
imul
cli
fdivrp
cld
pop
std
jp
xlat
mov
lods
pop
out
loopne
clc
iret
hlt
mov
rcr
cld
push
out
std
push
aam
fsubr
mov
out
xlat
js
imul
cld
xchg
mov
cld
test
jle
pop
call
scas
icebp
cmp
jnp
leave
outs
popf
std
sbb
out
mov
xchg
test
pop
push
scas
jno
out
std
jnp
cmc
cs
cmc
in
pop
mov
shl
jle
(bad)
test
call
dec
fistp
fstp
aas
cli
xor
fbstp
js
cld
and
sbb
mov
mov
fucomp
mov
cli
fidivr
neg
lods
jle
daa
mov
div
iret
cld
test
jle
xlat
jg
imul
cli
fdivrp
cmc
(bad)
and
xlat
mov
js
stc
pop
jmp
aas
pushf
mov
out
pop
lock
stc
mov
repz
jg
imul
cli
pop
sti
(bad)
xor
outs
je
fdivrp
jbe
sahf
stc
or
std
and
(bad)
fisttp
(bad)
(bad)
(bad)
dec
in
outs
jns
cmp
loope
scas
jle
out
(bad)
mov
mov
(bad)
scas
icebp
lds
inc
lock
stc
or
std
sub
jecxz
mov
jg
scas
jmp
scas
icebp
pop
js
mov
mov
cld
xor
mov
std
int3
lods
fdivrp
addr16
xchg
mov
std
pop
mov
inc
scas
icebp
addr16
mov
mov
jge
pop
(bad)
in
dec
icebp
mov
out
std
fs
stc
or
std
inc
mov
call
idiv
add
jmp
cli
fsubrp
outs
push
call
(bad)
out
(bad)
mov
scas
jle
(bad)
in
xlat
(bad)
mov
cmp
fidivr
movq
in
pop
out
ret
outs
(bad)
sbb
jg
out
lock
rcr
sbb
lea
call
cwde
pop
in
dec
(bad)
xor
xchg
(bad)
mov
loop
jle
ret
cld
xor
scas
aas
call
(bad)
cli
enter
jge
dec
(bad)
(bad)
jge
mov
outs
repnz
(bad)
cld
out
out
repnz
loopne
mov
or
jle
fucomip
inc
jg
call
out
stc
mov
repnz
scas
(bad)
jge
pushf
int
neg
hlt
loope
cmps
(bad)
shl
push
ret
jle
jl
pop
cld
test
out
clc
in
xchg
xor
pop
mov
xchg
jmp
mov
cli
push
lahf
mov
pop
ret
(bad)
(bad)
mov
sbb
lods
(bad)
xlat
cmp
adc
push
loopne
cmp
out
outs
dec
xchg
jmp
repz
jecxz
and
jmp
sub
fdivr
xor
repz
xor
loope
stc
jnp
mov
mov
idiv
xor
(bad)
xor
lahf
pop
jecxz
cli
xor
scas
or
pop
fs
xlat
clc
ja
int
xchg
xchg
repz
call
jae
aam
(bad)
mov
std
mov
pop
jecxz
(bad)
xor
mov
lods
pop
sar
(bad)
pop
jecxz
(bad)
pop
jg
scas
icebp
call
jg
scas
cmc
(bad)
cld
sbb
scas
icebp
aaa
cld
pop
jg
jge
mov
pop
jg
popa
hlt
ja
pop
jg
std
or
idiv
pop
jg
sar
jle
mov
jle
mov
jg
pop
call
(bad)
fwait
jg
jg
xlat
fdivr
jne
mov
jecxz
(bad)
xor
scas
icebp
xchg
mov
pop
mov
(bad)
jg
jg
stos
pop
out
clc
xor
dec
push
int
repz
pop
out
sti
xor
outs
sti
jne
and
out
clc
xor
(bad)
call
cmp
std
sti
mov
out
push
jmp
(bad)
icebp
xlat
jl
jmp
push
call
dec
mov
pop
dec
sub
jae
fnstsw
and
cmc
mov
lock
cld
fstp
lds
(bad)
call
(bad)
cmp
sti
lock
clc
das
jg
ja
out
scas
movs
jg
jae
pop
cld
or
sti
imul
jg
scas
jns
imul
mov
(bad)
idiv
dec
mov
lahf
inc
mov
mov
xlat
cld
xor
mov
cld
xlat
sti
jmp
neg
lahf
cld
mov
stc
cmc
fdivrp
call
out
cli
xor
clc
xlat
cld
or
xchg
jmp
(bad)
aaa
lock
jg
jle
(bad)
call
mov
fstp
idiv
xor
xlat
std
mov
pop
repz
cld
cmc
jle
pop
jmp
std
call
(bad)
cli
mov
jecxz
jle
xchg
pop
push
mov
loopne
adc
stc
fistp
cdq
(bad)
jge
imul
hlt
out
fldcw
jg
(bad)
sti
pop
xor
ja
jg
cld
out
(bad)
scas
and
and
sti
popf
clc
(bad)
(bad)
call
out
aas
cld
imul
das
repz
pop
call
pop
repz
xor
scas
std
stos
sbb
mov
pop
cld
imul
scas
test
lahf
jb
loop
cmps
(bad)
test
out
out
(bad)
call
clc
dec
std
jne
stc
imul
pop
jecxz
fcomip
mov
call
icebp
aad
cli
(bad)
mov
in
aaa
std
in
out
out
repz
mov
(bad)
out
pop
jecxz
dec
das
cli
std
scas
dec
mov
cmc
mov
out
mov
(bad)
pop
(bad)
(bad)
dec
outs
jp
je
mov
shl
xlat
jnp
imul
mov
std
xlat
mov
jg
pop
out
mov
fucomip
mov
jg
retf
fucomip
ja
cmc
sub
fwait
std
ret
pop
std
pop
(bad)
jmp
call
xchg
aaa
mov
add
push
lds
jg
scas
push
cld
pop
mov
jge
clc
ja
shl
das
jle
mov
mov
(bad)
cmp
out
outs
dec
call
mov
out
xlat
cld
mov
xlat
add
scas
out
jmp
imul
out
jmp
neg
sbb
fistp
sti
scas
icebp
pop
repz
push
mov
clc
xlat
clc
mov
(bad)
pop
jmp
pop
jecxz
mov
fdivr
xor
retf
scas
xor
pop
out
push
mov
(bad)
mov
out
(bad)
jmp
stc
sbb
jg
cld
(bad)
imul
jg
xlat
cdq
shr
mov
jmp
cld
inc
hlt
out
jg
jmp
movs
jg
fistp
std
or
hlt
xlat
cli
cmp
jecxz
std
mov
cld
mov
or
outs
lock
sub
shl
pop
std
fidivr
scas
icebp
mov
cli
inc
stc
xchg
aas
hlt
xlat
cwde
shr
jg
jge
jmp
inc
mov
in
call
jmp
fidivr
scas
std
xchg
repnz
jg
jge
stc
scas
std
psllw
call
scas
icebp
stos
jmp
inc
int
lock
inc
fdivr
aas
in
(bad)
push
(bad)
in
mov
scas
repz
push
call
jl
repnz
mov
ds
icebp
pop
repz
in
cmps
cld
out
jg
imul
pop
push
xchg
(bad)
fdiv
cwde
pop
sahf
call
cmc
sti
std
mov
xlat
jl
imul
and
push
cld
out
xchg
popa
dec
sbb
pop
(bad)
(bad)
inc
cld
out
aas
(bad)
(bad)
inc
es
(bad)
clc
neg
xlat
ret
(bad)
sti
jnp
mov
pop
jmp
retf
arpl
(bad)
and
std
aas
sar
into
scas
lea
(bad)
div
cld
mov
sbb
inc
lock
pop
icebp
out
call
scas
std
mov
push
jg
scas
add
cmp
fdivr
xor
xchg
std
call
pop
(bad)
cld
scas
cmc
outs
adc
(bad)
xlat
inc
in
aas
jmp
in
aas
jmp
(bad)
repz
pop
jmp
pop
(bad)
cmp
scas
repz
cmp
scas
rep
cld
cmp
jmp
sti
dec
(bad)
mov
inc
movs
jl
mov
scas
dec
(bad)
(bad)
sub
xchg
nop
pop
icebp
mov
imul
stc
mov
in
pop
jecxz
js
cld
dec
hlt
out
and
leave
adc
test
jecxz
aaa
stc
pop
jmp
jle
dec
xchg
push
mov
(bad)
mov
jmp
pop
mov
out
and
cs
fwait
adc
pop
mov
sbb
sti
sbb
iret
pop
mov
loope
xor
sti
mov
cld
xor
scas
lds
popf
bnd
mov
hlt
xlat
jle
imul
pop
jecxz
cli
mov
int3
pop
jmp
clc
mov
mov
scas
push
jmp
loop
out
cld
mov
leave
scas
stc
aas
(bad)
idiv
(bad)
fidivr
scas
stc
mov
cdq
stos
aas
clc
xlat
cld
test
xor
pmulhuw
aaa
ror
pop
out
and
xchg
jae
fcomip
imul
pop
sbb
jg
out
mov
clc
xlat
cwde
jae
mov
pop
outs
pop
jle
cmp
fcomip
stc
imul
add
and
sbb
mov
inc
(bad)
stc
imul
(bad)
(bad)
mov
cmc
xlat
clc
clc
xlat
cli
movq
cld
xor
imul
addr16
cmps
scas
into
xchg
xchg
pop
pop
int3
mov
push
aad
hlt
fnsave
loope
pop
jecxz
jne
out
pop
arpl
jbe
int3
fld
cli
icebp
clc
movs
sub
jl
xchg
scas
loope
ret
stos
jns
(bad)
inc
cmp
imul
dec
(bad)
scas
std
xor
scas
cmps
stc
pop
fnstenv
mov
fwait
pop
jecxz
imul
fistp
jmp
(bad)
imul
stc
lods
scas
push
(bad)
xchg
xor
in
jp
push
mov
jmp
gs
xlat
mov
ss
scas
call
lods
mov
dec
(bad)
adc
inc
jle
sub
mov
add
adc
ret
cmp
std
sbb
jmp
cmps
or
sbb
lods
imul
inc
fdivrp
(bad)
addr16
gs
mov
repnz
mov
gs
aad
or
xchg
(bad)
jbe
adc
sbb
pop
stc
xor
fcom
lods
pop
out
xchg
(bad)
imul
jns
test
cmps
push
les
(bad)
sbb
adc
push
js
gs
icebp
je
(bad)
xlat
das
stos
(bad)
fsin
sbb
in
mov
sub
adc
lods
into
push
jns
adc
scas
fmul
inc
xor
popf
call
scas
xlat
xchg
inc
ds
popf
int3
mov
mov
aaa
xor
xor
push
add
retf
push
ss
pop
xchg
test
in
into
pop
cmp
int
(bad)
das
mov
mov
xor
cmp
xor
dec
pop
out
imul
push
cmp
retf
mov
sub
cmps
repz
add
ja
(bad)
cli
imul
push
xchg
(bad)
cld
frstor
stos
scas
call
(bad)
mov
xchg
in
(bad)
jmp
int
gs
(bad)
jecxz
inc
jg
out
scas
call
(bad)
hlt
iret
scas
dec
(bad)
nop
mov
sti
mov
fnstcw
(bad)
in
dec
dec
(bad)
xchg
mov
dec
aas
in
push
idiv
loop
(bad)
jnp
jecxz
loope
jmp
aas
inc
ret
imul
jg
pop
inc
out
lahf
out
jnp
ret
dec
(bad)
push
inc
aas
test
loop
call
(bad)
repz
loop
sti
pop
dec
mov
(bad)
(bad)
test
repz
clc
cmp
cwde
aaa
iret
mov
aas
imul
jmp
jmp
adc
mov
icebp
(bad)
dec
(bad)
mov
mov
int3
(bad)
out
outs
clc
xchg
dec
xor
ins
fisubr
lods
pop
adc
cmp
cmps
aad
and
jmp
aam
jle
mov
dec
cli
dec
les
in
div
repnz
fist
jg
stos
cli
pop
mov
xchg
dec
xlat
cwde
push
cmp
retf
imul
(bad)
xchg
mov
hlt
into
xchg
jmp
fs
(bad)
pushf
out
das
mov
or
dec
add
shl
jecxz
stos
mov
inc
pop
mov
push
jg
(bad)
imul
mov
sub
rcl
dec
jecxz
inc
sar
sbb
jns
xor
pop
push
icebp
(bad)
cli
adc
mov
and
sti
xor
cli
inc
pop
pop
fsub
xlat
rcr
outs
sub
xchg
jnp
xchg
mov
ficomp
gs
mov
out
xor
xchg
in
daa
addr16
xor
ret
pop
scas
mov
stc
sub
das
jle
xlat
cli
imul
pop
push
xchg
lahf
cmps
(bad)
pop
xchg
add
daa
inc
hlt
ss
xchg
stc
inc
push
jmp
std
aaa
jg
pop
std
lahf
(bad)
stc
jg
aas
cli
out
xlat
jg
fcomip
(bad)
stc
jg
jg
push
dec
ja
push
jg
fisttp
mov
retf
add
retf
hlt
jne
fs
ret
scas
jno
xor
call
jae
nop
xchg
das
(bad)
mov
(bad)
mov
(bad)
jmp
out
outs
clc
outs
dec
ret
(bad)
mov
adc
mov
mov
fsub
jae
(bad)
xchg
int
sbb
sbb
jbe
stos
aad
scas
and
pop
popa
sub
sti
jno
stos
in
ins
cmp
fistp
push
jns
inc
test
inc
aas
sahf
fisub
in
fstp
push
leave
sar
aas
push
(bad)
hlt
(bad)
out
iret
(bad)
(bad)
sti
aas
repnz
cld
scas
dec
jmp
(bad)
jmp
in
(bad)
(bad)
out
(bad)
movs
mov
jae
mov
cwde
mov
bound
mov
pop
sub
sahf
out
cmc
add
repnz
cwde
mov
xchg
add
mov
lods
fidivr
fs
retf
stos
and
mov
or
xchg
es
nop
jnp
and
xchg
xchg
or
mov
adc
dec
ds
xchg
dec
dec
pop
mov
imul
jg
lahf
neg
std
std
jg
jg
inc
(bad)
mov
ja
aaa
jg
lahf
(bad)
(bad)
lea
push
out
pop
jmp
pop
(bad)
div
icebp
loope
int
and
cwde
int
movs
jmp
aas
stc
retf
dec
jae
sti
mov
dec
mov
(bad)
(bad)
(bad)
in
out
stc
cmp
aas
hlt
out
stc
dec
(bad)
out
cli
xlat
clc
(bad)
jmp
fwait
(bad)
loop
jmp
cli
paddw
(bad)
call
jecxz
mov
out
cli
retf
dec
ins
std
xlat
jg
pop
cli
(bad)
adc
inc
jmp
push
(bad)
ja
in
repnz
inc
jmp
(bad)
jg
ja
leave
dec
pop
cmc
idiv
ja
jmp
(bad)
mov
jg
lahf
cli
lahf
std
cdq
jg
xor
pop
jecxz
cli
sti
(bad)
mov
loop
sti
sti
(bad)
jecxz
repz
clc
xchg
(bad)
mov
(bad)
fdivrp
out
stc
jnp
stos
mov
(bad)
mov
das
dec
or
loopne
hlt
scas
std
and
mov
dec
(bad)
mov
stos
jle
(bad)
in
paddw
jmp
mov
(bad)
mov
imul
mov
(bad)
in
cli
aas
sti
ret
inc
(bad)
in
outs
sti
cmp
in
clc
sar
mov
imul
aas
jecxz
clc
and
mov
pop
(bad)
stos
aas
in
das
sti
(bad)
dec
aas
hlt
mov
bound
jnp
out
cld
psubq
(bad)
repz
std
das
cld
outs
dec
(bad)
mov
hlt
outs
(bad)
(bad)
stos
aas
in
std
xor
(bad)
stc
iret
(bad)
call
pushf
(bad)
call
mov
out
clc
pop
(bad)
mov
fwait
jmp
(bad)
dec
xor
push
psubd
call
(bad)
inc
mov
dec
jmp
loop
out
cli
or
xchg
cld
(bad)
sti
pop
jle
jmp
das
sti
or
(bad)
mov
dec
aas
(bad)
mov
(bad)
(bad)
das
cld
jnp
fstp
sti
iret
call
(bad)
mov
repz
std
cmp
pop
jecxz
std
adc
cwde
(bad)
cld
scas
(bad)
sbb
retf
aas
clc
outs
cli
das
inc
mov
psubq
(bad)
jmp
hsubps
imul
and
aaa
xor
dec
inc
push
pop
sub
(bad)
push
scas
std
ret
dec
outs
(bad)
mov
pop
call
push
das
cld
mov
inc
push
lahf
icebp
idiv
addr16
lahf
clc
imul
jg
fcomip
aas
(bad)
sbb
out
xchg
jmp
pop
stc
xchg
(bad)
jg
(bad)
(bad)
test
ja
sbb
leave
pop
stc
mov
sbb
stc
pop
(bad)
push
dec
jg
pop
std
pop
inc
jg
(bad)
clc
inc
cld
mov
ja
xchg
jg
(bad)
pop
std
xor
push
(bad)
icebp
mov
cld
or
stc
pop
sti
inc
inc
jg
pop
neg
jg
daa
std
inc
jmp
pop
inc
std
xlat
jg
fcomip
lahf
std
jge
mulps
push
xchg
pop
cmp
mov
or
xor
push
pop
repz
std
mov
clc
pop
call
jg
idiv
adc
in
pop
icebp
xchg
daa
jg
pop
call
ins
jg
jg
aaa
cld
cmc
mov
ins
fsubr
dec
xor
xchg
imul
cmp
lock
stos
push
sub
imul
mov
out
mov
icebp
pop
cld
or
pop
std
gs
lahf
cmc
daa
push
jg
pop
repnz
std
dec
inc
lahf
clc
pop
std
xlat
jg
pop
dec
mov
imul
jg
aas
clc
lahf
cld
cmc
jg
jg
idiv
mov
jmp
push
jg
lahf
call
sbb
paddd
xlat
cld
sbb
sti
daa
std
cmp
rcr
movs
stc
jae
stos
aas
sti
scas
dec
aas
stc
ret
inc
jnp
fwait
aas
mov
call
aas
dec
aas
in
sti
mov
dec
sti
iret
(bad)
cld
aas
loope
clc
mov
paddd
jg
jmp
out
mov
(bad)
jmp
loop
(bad)
out
dec
jae
test
icebp
(bad)
cli
adc
retf
aas
imul
cmp
jmp
jae
jl
jge
lahf
pop
popf
icebp
pop
std
inc
jg
jg
ja
and
pop
std
push
jg
pop
call
jg
cmps
std
add
push
(bad)
mov
aam
(bad)
imul
jg
pop
stc
lahf
std
cmp
repnz
(bad)
sub
stc
lahf
push
(bad)
lahf
cld
imul
jne
in
pop
std
xchg
cld
sbb
lods
in
sar
int
stc
xchg
ja
rcr
repnz
inc
jg
jg
mov
and
rcr
(bad)
ja
pop
jg
lahf
lock
(bad)
loope
leave
jg
inc
(bad)
stc
js
movs
mov
stc
mov
stos
push
push
mov
hlt
outs
cld
mov
scas
std
iret
(bad)
aam
clc
mov
(bad)
cld
scas
std
pop
(bad)
mov
scas
dec
sti
push
(bad)
mov
repz
xchg
mov
(bad)
loopne
loop
sti
sar
fwait
mov
dec
arpl
ds
clc
mov
jmp
xchg
inc
mov
call
mov
(bad)
fdivr
in
std
sub
sar
iret
clc
xor
pop
ja
dec
pop
std
cmp
cmps
call
xchg
(bad)
jg
lahf
icebp
iret
std
icebp
dec
aas
clc
pop
(bad)
ja
repz
imul
jg
lahf
neg
jg
mov
add
pop
(bad)
ja
call
ins
jg
jg
mov
sub
stos
mov
in
inc
(bad)
call
arpl
sar
jmp
stos
aas
idiv
jmp
(bad)
push
xchg
aas
jecxz
cli
scas
jmp
(bad)
call
mov
(bad)
(bad)
dec
(bad)
mov
iret
cld
pop
jmp
mov
jmp
(bad)
call
(bad)
icebp
sub
mov
cld
scas
cld
dec
(bad)
fstp
test
retf
dec
mov
(bad)
fidivr
jmp
(bad)
clc
scas
dec
(bad)
stos
mov
inc
mov
call
sar
into
jmp
outs
cld
xor
mov
repnz
adc
mov
leave
inc
out
cmp
adc
test
adc
aas
(bad)
repz
cld
push
out
push
repz
jmp
aas
cld
aas
std
or
stos
(bad)
jmp
dec
dec
(bad)
call
scas
(bad)
fdivr
jecxz
sti
sbb
mov
jnp
mov
out
std
das
(bad)
sar
mov
(bad)
in
iret
sti
cmp
aas
stc
xlat
clc
outs
(bad)
aam
repz
cmp
out
(bad)
cld
dec
std
repz
(bad)
jmp
(bad)
mov
cmp
mov
(bad)
stos
aas
test
(bad)
nop
aas
out
sti
arpl
(bad)
push
(bad)
stc
mov
dec
cld
scas
jmp
aas
cmc
mov
(bad)
cli
outs
cld
or
jmp
out
cld
and
mov
repz
iret
inc
inc
arpl
mov
das
jmp
(bad)
loopne
jecxz
sti
ret
jmp
cmp
(bad)
mov
call
(bad)
call
xchg
stc
psubq
(bad)
adc
(bad)
aas
std
outs
clc
das
(bad)
fdivr
call
jae
xchg
(bad)
mov
jmp
std
retf
(bad)
clc
push
(bad)
(bad)
adc
rcl
call
push
pop
stc
daa
(bad)
xlat
jg
fcomip
(bad)
int
cli
jg
paddb
ja
ja
rcr
hlt
lahf
(bad)
jge
ret
scas
icebp
pop
(bad)
xor
test
stc
jnp
xchg
aas
imul
cli
iret
(bad)
xchg
mov
inc
adc
xchg
aas
cld
(bad)
std
xor
call
(bad)
in
paddd
(bad)
jmp
jg
cmp
mov
jmp
hlt
iret
std
sub
mov
jmp
cli
das
(bad)
test
loopne
clc
or
pop
mov
(bad)
sahf
push
dec
cld
arpl
sar
jb
nop
mov
inc
jmp
outs
sti
dec
jmp
dec
call
mov
(bad)
out
jg
dec
shl
jmp
xlat
jmp
pop
cld
pop
(bad)
sub
jg
xlat
dec
dec
pop
stc
mov
mov
out
pop
idiv
(bad)
ins
jg
scas
icebp
(bad)
fidiv
movsx
mov
cmp
lahf
(bad)
(bad)
jnp
shl
mov
mov
dec
adc
(bad)
xlat
lahf
sbb
mov
fcom
jecxz
mov
mov
mov
jbe
lds
pusha
fwait
sbb
hlt
inc
outs
nop
out
cmp
push
sbb
aad
jns
sub
add
nop
pop
stc
mov
ret
(bad)
adc
adc
inc
jg
xchg
stc
jmp
and
cmp
loopne
(bad)
lock
call
dec
das
adc
jl
arpl
jle
leave
scas
icebp
cmp
xchg
(bad)
jb
jmp
out
jmp
jge
mov
idiv
xor
std
arpl
icebp
mov
shr
es
scas
clc
mov
(bad)
pop
icebp
icebp
adc
scas
in
outs
mov
fcomp
out
sub
fucomip
ja
icebp
dec
cld
pop
out
icebp
aas
stc
out
stos
fbld
dec
jg
cli
stc
cmp
jecxz
mov
aas
(bad)
jae
cld
(bad)
in
das
inc
inc
aas
std
ud0
jg
ret
call
mov
out
(bad)
xor
mov
pop
jmp
inc
call
jle
(bad)
jmp
(bad)
out
cli
das
(bad)
(bad)
aas
call
into
(bad)
out
iret
sti
xchg
(bad)
jmp
imul
cld
iret
(bad)
mov
imul
pop
jecxz
cld
cmp
enter
std
sub
mov
iret
jmp
push
sub
repz
in
sti
dec
(bad)
cmps
mov
dec
aas
cmc
aas
jmp
outs
clc
push
push
pop
call
retf
(bad)
call
cmp
aas
imul
std
xor
call
dec
inc
aas
idiv
inc
(bad)
pusha
cli
in
std
pop
(bad)
test
repnz
std
or
stos
mov
dec
mov
(bad)
xchg
aas
neg
aas
cmc
out
cli
iret
inc
aas
jmp
jmp
std
iret
cli
xor
xchg
lods
retf
jg
xchg
std
push
dec
pop
std
aaa
std
addr16
aas
lock
call
out
mov
inc
std
cmps
jg
lahf
dec
repnz
addr16
lahf
cli
pop
call
pop
cld
cmp
retf
push
(bad)
in
(bad)
(bad)
jmp
fstp
pop
jge
scas
dec
(bad)
mov
les
idiv
jno
std
pop
cli
xchg
(bad)
jg
fcomip
(bad)
fnstcw
jg
cmps
cld
aad
fstp
xchg
sbb
(bad)
ja
aaa
jg
pop
neg
std
adc
xchg
in
(bad)
fstp
sti
daa
std
daa
jg
pop
cli
dec
cld
sub
xchg
sbb
aas
jmp
cli
jg
mov
push
out
cli
adc
sar
(bad)
clc
aas
hlt
mov
(bad)
in
iret
stc
sar
jmp
das
cld
or
(bad)
mov
dec
imul
clc
cmp
stos
mov
call
jg
adc
inc
out
(bad)
sahf
push
(bad)
std
and
repz
push
aas
icebp
aas
inc
dec
or
xchg
mov
(bad)
lods
mov
(bad)
mov
jmp
std
or
mov
jmp
sar
das
std
iret
(bad)
fidivr
(bad)
(bad)
in
out
cli
and
sar
mov
test
cmp
jg
daa
std
or
jmp
push
jg
pop
repnz
std
or
jg
pop
jmp
(bad)
fstp
inc
cld
ja
sti
pop
imul
pop
jg
pop
std
lahf
push
pop
push
icebp
pop
icebp
daa
(bad)
cmps
jg
(bad)
pop
(bad)
fnstcw
jg
xchg
cld
loope
rcr
cld
inc
push
scas
sti
repnz
lds
jg
lahf
hlt
aas
inc
jg
jg
out
sar
in
repnz
jmp
jg
pop
sti
lahf
call
jg
scas
icebp
pop
std
lds
shl
aas
cli
stos
(bad)
cli
(bad)
in
das
call
(bad)
sti
iret
(bad)
mov
repz
mov
hlt
outs
clc
push
test
jge
pop
inc
xlat
cld
loope
in
(bad)
pop
std
cmps
jg
pop
dec
stos
repnz
jmp
scas
clc
fstp
push
out
dec
iret
stc
outs
(bad)
in
hlt
aas
std
jmp
ret
das
(bad)
xor
stos
aas
sti
(bad)
(bad)
cmps
call
test
pop
ins
(bad)
(bad)
(bad)
sahf
aas
repz
sti
sar
mov
arpl
xchg
aas
std
das
sti
ud0
mov
fstp
in
(bad)
xor
das
rcl
lahf
repz
cld
jns
aad
mul
(bad)
stc
call
fcomip
xchg
out
loop
call
mov
adc
mov
jg
lahf
clc
lahf
(bad)
jno
xlat
jg
aaa
(bad)
sar
jmp
xlat
jg
aas
clc
aas
dec
jg
jg
xlat
std
in
dec
lahf
sti
mov
sbb
aad
repz
xlat
jg
pop
neg
popf
jg
jg
inc
(bad)
cmp
stc
pop
cli
paddb
aas
cld
dec
inc
jg
push
std
(bad)
mov
mov
xchg
(bad)
fwait
aas
std
dec
dec
fidivr
in
(bad)
mov
outs
cli
jnp
mov
out
out
cli
iret
(bad)
fidivr
repnz
clc
das
(bad)
fdivr
idiv
push
psubd
repnz
stc
aas
(bad)
sub
xchg
in
cli
cmp
(bad)
mov
(bad)
call
xchg
aaa
(bad)
fstp
icebp
outs
(bad)
pop
call
dec
mov
fwait
mov
(bad)
nop
mov
push
(bad)
fdivr
jmp
jmp
stc
das
(bad)
mov
jmp
aam
out
outs
std
mov
out
clc
pop
(bad)
fidivr
clc
(bad)
cmc
jg
jg
xchg
imul
std
mov
sar
xlat
cld
rcr
mov
rcr
pop
dec
outs
(bad)
std
inc
pop
cli
pop
std
ja
rcr
jg
jg
mov
jge
ret
(bad)
daa
jmp
jg
(bad)
lahf
call
jmp
icebp
jg
ja
adc
(bad)
addr16
inc
jg
pop
repz
cld
lods
push
pop
repz
cmps
jg
pop
cld
(bad)
leave
jg
scas
icebp
(bad)
movs
jg
jg
xchg
icebp
push
lahf
clc
pop
inc
adc
(bad)
aas
(bad)
aas
stc
adc
mov
mov
(bad)
aas
sahf
fdivrp
inc
push
jge
psubq
xchg
pop
clc
outs
(bad)
cli
mov
(bad)
test
out
iret
sti
pop
jmp
scas
(bad)
lods
mov
jmp
mov
call
mov
(bad)
aas
out
das
cld
scas
call
aas
hlt
lahf
cld
xor
mov
stc
dec
jmp
aas
(bad)
jecxz
jb
repz
fdivrp
iret
(bad)
idiv
sti
aas
push
(bad)
mov
or
fstp
clc
scas
cld
outs
(bad)
sub
push
(bad)
std
mov
iret
cli
xor
psubw
call
dec
mov
jmp
lock
cld
das
(bad)
cli
mov
inc
fucomi
aad
push
es
and
mov
repz
jecxz
stc
out
sti
dec
jmp
mov
(bad)
fdivrp
loop
push
dec
dec
(bad)
fidivr
inc
mov
push
jecxz
mov
out
(bad)
mov
out
std
retf
(bad)
clc
jmp
(bad)
stc
cmp
mov
mov
aas
out
cli
outs
(bad)
aam
hlt
mov
push
outs
call
mov
(bad)
call
mov
movs
jmp
outs
clc
pop
mov
(bad)
sar
cli
dec
cld
retf
(bad)
jmp
test
scas
inc
call
cmp
clc
clc
dec
dec
aas
xchg
xchg
push
dec
aas
clc
outs
stc
outs
dec
aas
idiv
(bad)
cmp
fdivr
in
psubd
(bad)
mov
pop
inc
inc
call
xor
mov
stos
(bad)
fstp
dec
push
out
cld
xchg
jmp
scas
(bad)
call
rcr
clc
inc
pop
sub
(bad)
add
pop
std
jne
in
sti
out
(bad)
jg
lahf
cmc
dec
cld
sbb
mov
dec
aas
hlt
scas
cli
das
(bad)
mov
repnz
jmp
out
cli
pop
(bad)
sar
(bad)
lock
out
call
inc
(bad)
cli
scas
clc
sti
call
clc
das
cld
jecxz
stos
aas
in
sti
(bad)
dec
stos
(bad)
mov
dec
pop
(bad)
jmp
hlt
iret
clc
scas
(bad)
repnz
(bad)
ficomp
jg
ret
inc
(bad)
out
out
clc
sub
ret
mov
dec
xchg
call
iret
(bad)
lock
jmp
gs
jg
pop
dec
fwait
push
(bad)
(bad)
jmp
mov
(bad)
das
cld
cmp
aas
jmp
out
jmp
out
mov
(bad)
dec
(bad)
adc
mov
dec
(bad)
fidivr
idiv
fwait
(bad)
fdivrp
cld
iret
cli
mov
jmp
in
mov
fstp
(bad)
mov
stos
(bad)
mov
(bad)
inc
sar
cwde
(bad)
clc
(bad)
stc
retf
(bad)
jmp
cli
iret
(bad)
xor
mov
aas
cld
jecxz
fstp
icebp
psubw
dec
mov
(bad)
(bad)
loop
cli
pop
jmp
pop
push
inc
(bad)
jmp
jmp
out
(bad)
in
mov
(bad)
movs
jmp
out
sti
arpl
mov
(bad)
fdivr
std
cmp
jg
aas
cmc
cmps
jmp
jg
pop
std
lahf
(bad)
std
jg
jg
cmps
cld
jmp
mov
pushf
(bad)
in
outs
clc
pop
jmp
out
cld
pop
(bad)
fstp
call
clc
jg
mov
(bad)
jmp
loope
stc
dec
jmp
jae
(bad)
dec
idiv
ins
jmp
fcomip
mov
ja
ret
aas
lock
(bad)
jge
aam
(bad)
daa
std
leave
inc
pop
repz
jg
pop
dec
shl
leave
jg
jg
cmps
std
stc
(bad)
stc
pop
std
daa
std
xlat
jg
pop
std
lahf
cld
gs
jg
out
popa
shl
imul
jg
pop
(bad)
pop
cld
sub
jg
push
(bad)
and
idiv
daa
jmp
lahf
repnz
inc
jg
mov
std
aad
ret
jg
daa
std
mov
icebp
fcomip
mov
cmps
jg
lahf
repz
cld
cmp
daa
xchg
psubw
lahf
inc
push
in
(bad)
pop
std
xchg
jg
jg
inc
(bad)
(bad)
in
not
daa
jg
pop
repnz
(bad)
fnstsw
jg
xchg
jne
in
dec
imul
push
sbb
pop
(bad)
sar
dec
(bad)
dec
std
pop
(bad)
mov
out
(bad)
fdivr
(bad)
clc
(bad)
in
scas
cld
xchg
call
jg
out
stc
xor
iret
stc
(bad)
(bad)
cld
aas
in
cld
repz
mov
das
(bad)
mov
adc
clc
jmp
dec
cld
sub
stos
mov
cli
pop
std
std
jg
push
aaa
call
fstp
aaa
std
xchg
jg
dec
(bad)
(bad)
lahf
std
add
fcomip
pop
std
sbb
std
pop
sti
(bad)
std
pop
jg
pop
stc
aas
(bad)
xor
ja
popa
(bad)
std
pop
div
fcomip
aas
(bad)
sar
sub
icebp
mov
repz
inc
mov
inc
(bad)
cld
scas
stc
sti
inc
scas
inc
mov
(bad)
bnd
outs
stc
xor
scas
dec
call
repnz
in
iret
sti
adc
xchg
aas
(bad)
mov
cld
iret
(bad)
xchg
aas
not
sub
movs
clc
sti
outs
stc
cmp
sar
dec
out
push
aas
clc
jg
jnp
int3
jmp
dec
stc
sub
mov
call
loopne
repz
clc
das
(bad)
mov
jae
(bad)
push
outs
stc
pop
(bad)
xchg
aas
dec
cli
out
(bad)
fdivr
push
(bad)
cli
out
cli
mov
dec
mov
(bad)
aas
hlt
paddw
xchg
aas
jmp
clc
stos
(bad)
mov
fwait
(bad)
fstp
in
iret
cld
out
(bad)
idiv
inc
xchg
jg
(bad)
in
(bad)
std
pop
sahf
cld
ja
rcr
jg
jg
addr16
sbb
addr16
xchg
jg
pop
cmc
pop
std
pop
xor
xchg
or
jg
xlat
cld
stc
push
fcomip
idiv
ja
aam
neg
and
adc
add
inc
pop
(bad)
xchg
jmp
imul
jg
(bad)
pop
(bad)
ins
jg
mov
jg
pop
sti
pop
inc
aaa
jmp
(bad)
(bad)
mul
(bad)
push
jg
pop
dec
pop
stos
mov
mov
ficomp
jg
jg
push
cld
dec
(bad)
stc
pop
push
addr16
iret
std
std
inc
lahf
inc
mov
lock
cld
popf
jmp
pop
cld
aaa
std
out
xlat
pop
cmc
(bad)
add
jg
idiv
and
daa
std
mov
(bad)
(bad)
pop
(bad)
jmp
and
lahf
(bad)
mov
push
cld
(bad)
pop
lock
std
pop
jg
pop
repnz
(bad)
jmp
xchg
jge
ret
lahf
cli
push
push
jg
(bad)
imul
jg
lahf
cld
aas
cld
jge
in
jg
out
jge
out
clc
cmp
(bad)
call
stos
aas
jmp
(bad)
pop
inc
inc
(bad)
mov
retf
(bad)
jmp
in
dec
(bad)
scas
push
test
jg
(bad)
std
push
inc
(bad)
pop
(bad)
leave
add
jp
push
repnz
sar
inc
ds
jno
shl
(bad)
pop
in
dec
lods
repz
fisubr
out
std
sbb
lds
jg
push
aaa
(bad)
gs
pop
inc
lahf
repnz
xchg
jg
jg
addr16
mov
aad
lock
rcr
scas
adc
neg
jmp
lahf
(bad)
cmp
pop
std
test
lds
out
inc
jg
pop
(bad)
pop
dec
(bad)
clc
xchg
test
sub
mov
test
xchg
jg
pop
cld
lahf
(bad)
movs
jg
push
mov
imul
std
inc
jmp
(bad)
lahf
cld
imul
push
mov
sar
fstp
sar
pop
test
movq
pop
hlt
pop
(bad)
mov
aaa
call
pop
(bad)
push
jg
pop
neg
jg
xchg
(bad)
jge
push
gs
das
xlat
sub
int
dec
fs
cs
add
and
in
(bad)
cld
dec
dec
xor
pop
push
xchg
iret
enter
sbb
fstp
adc
aad
fsub
test
(bad)
inc
aas
loop
stc
(bad)
jmp
inc
fwait
(bad)
fwait
aas
jmp
cli
pop
(bad)
pop
xor
jg
push
push
call
js
out
retf
dec
xchg
mov
mov
pushf
xchg
push
addr16
jmp
mov
mov
std
sar
in
repnz
xlat
jg
fcomip
pop
cld
xchg
jg
jg
xchg
popa
push
pop
clc
xchg
cld
addr16
lahf
call
jmp
repnz
ror
dec
sub
lods
sub
lock
lds
inc
ret
sahf
and
cmc
(bad)
push
outs
mov
movsx
(bad)
xor
xor
jbe
mov
std
dec
cmc
or
dec
jmp
shl
xchg
pop
push
mov
sti
dec
enter
in
and
adc
mov
mov
pop
jae
adc
dec
ins
xor
retf
and
mov
adc
dec
sub
bound
mov
icebp
mov
pop
cmp
call
jecxz
stc
jg
mov
jecxz
jnp
(bad)
xor
imul
call
dec
mov
(bad)
stc
jg
call
mov
jecxz
pop
jecxz
scas
icebp
sti
call
cmps
mov
leave
scas
icebp
pushf
jle
std
jg
xchg
hlt
fst
jecxz
(bad)
mov
jle
(bad)
mov
mov
lea
jg
imul
mov
push
xor
xor
dec
(bad)
scas
icebp
imul
aas
daa
mov
push
sbb
(bad)
sbb
(bad)
pop
adc
sub
leave
sbb
nop
stos
pop
arpl
dec
mov
xchg
xchg
outs
jle
push
mov
in
fcomip
ja
stos
mov
jmp
(bad)
std
scas
icebp
jmp
mov
cld
fucompp
scas
icebp
imul
jmp
es
jle
fbld
(bad)
pop
stc
jecxz
cwde
jg
xlat
sti
xor
ja
int
push
push
imul
mov
std
es
cld
mov
popf
jle
pop
jecxz
cld
xor
xlat
dec
jg
(bad)
aaa
cmps
xlat
jg
pop
test
xor
aad
fucomip
ja
dec
jle
push
cmp
mov
in
jg
pop
pop
in
push
(bad)
mov
call
(bad)
aam
out
hlt
cmp
into
mov
jle
fild
ins
jp
aaa
clc
mov
stc
outs
lock
ror
(bad)
outs
inc
lahf
(bad)
sbb
cld
mov
cld
out
ss
loop
jp
xor
sar
mov
jmp
(bad)
in
mov
mov
cld
(bad)
jg
outs
(bad)
scas
daa
(bad)
jle
pop
out
mov
sub
(bad)
jle
pop
sti
xlat
sti
sub
in
jg
xlat
push
mov
(bad)
mov
jle
pop
xchg
mov
into
dec
push
repz
cld
sub
jg
cld
repz
push
je
fwait
cld
into
mov
outs
bnd
repz
sti
mov
(bad)
fidivr
ror
stc
or
aaa
cld
sub
ja
xchg
shr
out
loop
dec
(bad)
(bad)
sub
aaa
clc
or
paddd
jmp
hlt
jg
(bad)
xlat
cmps
and
push
jg
lahf
dec
test
or
xor
mov
popf
mov
(bad)
outs
xchg
(bad)
mov
and
push
mov
(bad)
clc
pop
out
sti
int
mov
(bad)
fnstsw
(bad)
in
cmc
repz
sub
cmp
stos
jg
fistp
leave
mov
adc
sub
cld
or
jle
clc
sbb
cli
mov
(bad)
psubd
imul
sti
lea
pop
xchg
sar
mov
repnz
cld
fsubr
imul
mov
mov
call
sti
fucomip
mov
cmp
pop
out
and
adc
cld
xor
imul
(bad)
call
jl
ret
scas
jg
faddp
jg
(bad)
scas
or
(bad)
aaa
rcr
aas
jmp
lods
hlt
out
cmps
in
mov
scas
scas
lods
mov
mov
jne
jge
inc
or
xchg
mov
ret
(bad)
mov
mov
inc
ds
lods
lock
cmp
neg
std
cmp
jle
pop
jecxz
movs
test
lock
call
mov
add
shr
hlt
or
outs
cmc
sbb
call
cwd
aas
cli
in
hlt
jne
xchg
cli
imul
(bad)
fsubr
jmp
cli
mov
jle
aas
call
xchg
pop
mov
mov
xor
cld
add
fwait
std
call
pop
cmp
(bad)
inc
call
mov
(bad)
mov
jmp
xchg
cli
fwait
cld
es
cld
div
mov
lods
repz
(bad)
sti
fwait
mov
call
sti
sub
loope
nop
or
dec
push
stc
imul
lock
fs
inc
xor
retf
mov
fcmovnbe
dec
pop
nop
xor
pop
add
clc
sub
imul
cmp
hlt
repz
sbb
and
shr
std
pop
mov
call
xlat
push
jle
fisttp
cld
fwait
cld
into
mov
repz
mov
pop
inc
mov
inc
mov
loopne
dec
hlt
fild
sbb
pop
movs
xor
fild
mov
call
mov
call
mov
call
cmc
fistp
pop
icebp
pop
call
loopne
aas
clc
mov
in
bswap
fldcw
lods
sti
imul
inc
clc
jmp
jbe
push
xchg
mov
aaa
adc
xchg
or
jl
fs
xchg
mov
imul
out
sbb
cmps
fidiv
jne
pop
ins
std
ds
jne
mov
mov
pop
push
lea
mov
mov
push
sub
ins
ds
in
sbb
mov
or
retf
icebp
scas
icebp
imul
mov
std
push
lahf
std
cwde
cmp
cs
or
(bad)
std
cli
hlt
cld
push
mov
movs
add
stc
imul
jle
push
cmps
fbld
dec
xchg
and
stc
pop
cld
mov
jg
sub
scas
cmc
sbb
xchg
cld
dec
call
stc
imul
mov
jmp
jp
push
imul
(bad)
es
hlt
das
std
std
sbb
jle
fucom
fcmovnu
xchg
fcmovbe
out
lds
jmp
sbb
xchg
ds
push
mov
hlt
xlat
mov
loop
cmp
cmp
call
dec
loope
outs
outs
enter
shr
cmp
ja
popf
enter
cli
in
gs
add
stc
lea
call
cld
hlt
fwait
rcl
das
or
pop
xchg
fistp
ja
dec
dec
(bad)
jg
jg
push
push
lahf
and
stc
cmp
push
xchg
adc
pop
std
inc
mov
or
cld
jno
and
jg
mov
out
add
imul
call
repnz
(bad)
imul
jg
fisttp
aas
lock
add
pop
jle
cld
not
icebp
jmp
inc
movs
clc
or
(bad)
cld
dec
inc
nop
(bad)
aaa
daa
fs
inc
repz
cmp
cli
out
ret
aas
call
nop
(bad)
in
sbb
fistp
and
outs
inc
xchg
(bad)
jle
xor
into
(bad)
icebp
scas
inc
test
mov
cmp
popa
cli
or
sti
loopne
fild
(bad)
mov
cmp
adc
dec
jle
shl
mov
jg
scas
dec
sar
jecxz
clc
or
xlat
xchg
inc
or
inc
(bad)
imul
mov
shr
mov
or
repz
fild
jno
pushf
push
imul
cmp
jge
imul
in
mov
sti
pop
lahf
push
ins
addr16
jmp
xchg
jg
dec
aas
rcr
xlat
clc
ins
jle
pop
jecxz
push
fistp
pop
add
adc
test
pop
shr
std
xor
and
out
idiv
test
pop
sbb
stos
repz
sub
out
(bad)
(bad)
fnstsw
hlt
test
pop
jmp
aas
call
cli
stc
fwait
ror
aas
mov
jbe
repz
mov
(bad)
mov
fild
jecxz
jg
jle
sar
xor
jmp
jmp
repz
clc
cmp
inc
stc
std
aas
call
mov
ret
aas
lock
clc
xor
mov
pop
or
(bad)
cs
xchg
lock
pop
xor
stc
fbstp
stc
aas
xor
stc
mov
xor
stc
push
mov
mov
std
gs
mov
mov
jne
fild
call
sti
xlat
jno
call
jecxz
stc
imul
push
mov
xor
aaa
jo
jg
out
movs
mov
push
iret
(bad)
call
(bad)
hlt
das
stc
xor
jnp
in
imul
sbb
(bad)
xlat
call
imul
xlat
js
push
ror
sub
call
std
cmp
inc
mov
popf
push
call
out
mov
cmp
mov
dec
jo
mov
mov
and
sbb
(bad)
aam
neg
lds
jge
in
imul
xlat
and
pop
push
shl
pop
adc
fisubr
mov
call
xlat
cmps
iret
dec
jnp
outs
or
or
imul
icebp
in
nop
outs
je
std
and
fidivr
ja
lea
mov
inc
mov
sub
adc
mov
arpl
imul
cmc
loope
jmp
int
scas
icebp
pop
sar
jmp
test
loop
cwde
adc
imul
hlt
push
xlat
fsub
int3
fsubrp
leave
std
jg
ins
or
fnstsw
mov
cmps
xchg
inc
shl
outs
adc
cmp
sti
hlt
fldenv
test
mov
out
sbb
or
ror
div
scas
and
xlat
cld
xor
pop
arpl
stc
and
aas
call
nop
aas
call
aas
hlt
psrlw
push
(bad)
out
xlat
clc
mov
push
adc
shl
call
out
pop
icebp
repz
dec
repz
xor
cmp
jmp
pop
mov
lock
(bad)
scas
loope
jmp
xor
daa
mov
dec
(bad)
(bad)
cli
mov
pop
cmp
cld
(bad)
stc
icebp
aam
jge
in
out
repz
std
std
imul
vminsd
mov
and
lods
lahf
mov
jg
jg
fwait
jp
aaa
(bad)
fistp
cli
jg
repz
jmp
(bad)
sti
fs
fsubrp
(bad)
aas
jp
call
jg
(bad)
(bad)
mov
dec
dec
call
outs
out
cld
fidivr
imul
outs
sbb
bnd
clc
out
fbstp
shl
add
mov
mov
cwde
ds
or
stc
shl
jle
cld
call
xor
jo
out
daa
or
cli
popa
leave
int
sti
xchg
dec
adc
jp
(bad)
cmp
(bad)
out
(bad)
inc
sahf
sbb
pop
jle
jle
(bad)
cli
aaa
sbb
inc
iret
iret
fnstenv
fsubr
out
jmp
daa
jg
(bad)
(bad)
jg
push
(bad)
jg
dec
aas
jmp
pop
cmc
fucomip
inc
jmp
dec
xlat
(bad)
fistp
mov
mov
icebp
jmp
sbb
icebp
stos
loope
scas
mov
cli
adc
out
cs
cmc
scas
hlt
xlat
cwde
(bad)
cmp
dec
push
imul
scas
dec
jg
retf
mov
or
jg
mov
jmp
(bad)
(bad)
(bad)
cmp
xor
not
out
js
mov
pop
mov
clc
in
mov
ds
sub
ins
cmp
retf
jg
shl
jl
jnp
std
(bad)
leave
jecxz
imul
or
mov
in
mov
dec
out
and
pop
lds
sahf
push
mov
mov
pop
out
jle
cs
jno
aaa
in
dec
cli
mov
ror
stc
mov
(bad)
add
cld
not
int3
push
aam
pop
xlat
(bad)
stos
push
pop
dec
mov
mov
inc
ja
inc
pop
scas
fwait
imul
fst
lahf
cmp
bnd
outs
cli
movs
into
jg
call
mov
repz
push
out
sbb
out
jns
xchg
clc
div
jns
mov
jne
cmp
out
jne
sahf
xchg
dec
scas
and
and
sbb
out
push
mov
or
imul
inc
iret
inc
sahf
aas
call
and
icebp
pop
in
(bad)
repnz
iret
dec
lahf
inc
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
lods
leave
out
add
add
jecxz
add
and
pop
add
add
add
add
add
arpl
add
add
je
add
add
add
add
jne
and
jne
ins
imul
jae
outs
and
gs
imul
outs
and
ja
jns
jne
jne
and
jge
or
push
outs
jb
popa
je
outs
outs
and
jne
jae
outs
and
ins
ins
and
ins
jo
jne
and
imul
and
and
ins
imul
jns
popa
outs
and
jb
outs
jb
popa
outs
arpl
outs
data16
jge
or
data16
jne
popa
arpl
jo
sub
jnp
jge
ja
ins
ins
and
je
ins
popa
je
arpl
ins
jns
jae
outs
and
jge
imul
je
outs
outs
and
outs
jne
and
and
popa
je
jb
jae
je
popa
je
jns
jne
jne
gs
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
and
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
