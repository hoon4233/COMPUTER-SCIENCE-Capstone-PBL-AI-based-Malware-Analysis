test
dec
mov
mov
mov
mov
mov
cs
adc
inc
and
mov
cld
into
cmps
imul
dec
or
hlt
imul
fcom
mov
xor
pop
mov
leave
inc
mov
mov
add
test
mov
dec
inc
lds
retf
pop
dec
es
inc
mov
pop
std
out
sti
call
enter
push
push
push
in
push
xchg
mov
and
push
lea
push
push
cs
cmp
in
aas
sbb
or
in
push
sti
loopne
mov
nop/reserved
bound
mov
(bad)
scas
int3
push
jmp
mov
outs
lock
rcr
lea
mov
mov
add
in
mov
add
dec
ret
int3
add
and
scas
stc
or
inc
add
push
mov
mov
pusha
arpl
and
mov
add
retf
jne
push
push
mov
mov
push
lea
sti
(bad)
inc
mov
inc
test
jne
sub
mov
lea
push
call
add
mov
push
push
pop
ins
mov
mov
inc
ds
push
or
push
mov
inc
add
pop
xchg
sub
in
pop
pop
pop
pop
aaa
mov
ror
pop
in
in
adc
imul
and
shr
xor
and
add
xor
xchg
xor
iret
out
mov
inc
clc
push
add
xor
sub
push
mov
jns
push
or
rol
pop
mov
push
jg
dec
mov
ins
or
or
pop
fild
or
push
mov
and
popa
ja
pop
lahf
sbb
mov
mov
mov
push
mov
fstp
pusha
ja
push
mov
sbb
xor
pop
ret
(bad)
lock
in
test
je
mov
dec
repnz
out
leave
je
shl
push
fcom
push
pop
dec
dec
push
in
push
push
push
and
in
pop
shl
cmp
pusha
adc
lock
sbb
mov
sbb
js
sub
pop
jbe
outs
neg
sbb
and
sti
push
pushf
scas
and
test
jae
or
mov
cli
cld
sbb
adc
mov
daa
iret
sub
inc
rcl
ins
stc
adc
pop
icebp
mov
push
or
test
icebp
repnz
es
repnz
icebp
pop
jb
adc
or
bound
mov
push
gs
add
push
mov
add
push
mov
bound
repnz
add
xlat
sahf
sub
dec
nop
push
sahf
cmp
sub
not
add
push
cs
das
clc
lds
inc
cld
mov
mov
push
call
and
or
fld
push
call
mov
and
add
sbb
stos
out
or
xor
xlat
mov
in
out
fdivr
dec
push
scas
jle
pop
mov
xor
loopne
pop
cwde
xor
test
mov
cli
pop
push
sub
clc
cmp
ins
cmps
pusha
mov
ret
push
xchg
outs
sbb
stos
std
(bad)
js
push
push
pop
sbb
enter
fisttp
xor
fld
push
aam
pusha
sti
push
sub
sub
in
push
add
adc
push
mov
int3
mov
push
mov
push
rep
push
push
sbb
jmp
fdiv
test
sbb
(bad)
xchg
ins
test
jne
stos
jo
lea
pop
add
inc
ret
nop
mov
lea
push
xlat
or
xchg
sbb
mov
sbb
loope
js
jne
das
fs
xor
ins
mov
stc
sub
xchg
retf
jbe
or
jo
xor
fwait
retf
cwde
(bad)
xor
mov
leave
inc
xchg
scas
jb
mov
inc
mov
and
pushf
and
call
pop
inc
xor
cmp
jle
jmp
jo
in
dec
stc
lea
cwde
pop
mov
idiv
xor
mov
push
pop
je
inc
cmp
jl
cmp
int
enter
imul
dec
aam
mov
cs
xchg
(bad)
out
inc
retf
mov
sbb
call
pop
mov
rcr
mov
nop
mov
mov
push
loopne
jbe
push
in
mov
push
mov
fild
dec
test
add
push
push
enter
ja
dec
cmp
lds
pop
jbe
sbb
cmp
in
and
(bad)
mov
adc
test
pop
cmp
movs
ss
push
(bad)
adc
mov
mov
inc
sub
jne
jmp
mov
mov
mov
dec
je
cli
in
mov
mov
idiv
(bad)
jg
clc
aam
adc
jle
scas
cwde
or
cmp
jne
jmp
or
dec
(bad)
push
fisttp
div
lds
inc
cmp
je
shr
mov
cs
mov
aad
fisttp
jle
cmps
cmp
loopne
pop
inc
adc
retf
cmp
repnz
and
add
add
adc
mov
xchg
or
rol
aad
cmp
js
push
out
push
push
sbb
jge
push
loop
clc
stos
push
push
jl
push
cmp
fmul
neg
loop
push
adc
cs
push
addr16
xchg
int
inc
cmp
inc
mov
mov
or
int3
push
jb
es
mov
pop
add
add
mov
stos
dec
std
cli
jmp
push
inc
sbb
adc
mov
push
mov
(bad)
je
jl
sub
add
mov
clc
(bad)
ror
retf
mov
inc
hlt
loope
cmps
and
cmp
sahf
in
nop
push
mov
adc
add
pushf
retf
lahf
sub
add
pop
sahf
out
add
pushf
add
(bad)
sti
(bad)
push
and
repz
pusha
mov
shl
cmp
mov
pandn
mov
sbb
push
adc
jecxz
out
lea
out
pop
mov
cmp
jge
sahf
clc
xor
div
lock
push
or
mov
mov
jl
push
lods
jl
push
add
ret
jns
xchg
add
icebp
adc
dec
mov
fisttp
movs
sub
xchg
loope
mov
test
jne
(bad)
jge
jb
mov
jl
cmp
cmp
sbb
xchg
pop
xchg
in
add
push
data16
movs
add
and
and
add
add
or
scas
and
add
push
xor
add
ja
loop
dec
push
dec
je
mov
sub
test
sbb
test
test
int
fwait
pop
pop
leave
jae
fld
xchg
fnstenv
retf
cmp
sub
lock
hlt
mov
or
ret
std
mov
test
sbb
xor
mov
stos
loopne
xchg
adc
xchg
or
fild
pop
dec
mov
cwde
pop
jae
add
inc
cmps
push
or
fnsave
int3
push
add
jge
or
jl
mov
cmp
daa
lea
or
xchg
adc
ret
mov
fmul
jb
fld
loopne
shr
lahf
dec
mov
shr
adc
adc
cmc
inc
mov
and
adc
or
adc
jae
cmovns
or
adc
(bad)
push
adc
nop
cmp
nop
add
fdivr
cmp
push
aam
pushf
xchg
push
mov
push
pop
jp
mov
mov
mov
push
mov
mov
out
in
add
add
ret
popa
xchg
xchg
push
add
pop
lea
aas
retf
sar
lds
pushf
in
add
ins
sbb
sub
popa
sti
push
icebp
xor
push
mov
test
jle
mov
push
in
mov
in
or
sbb
mov
cld
mov
rcr
sub
rcr
sti
ins
cmp
jno
shr
mov
push
push
cmp
faddp
fsubr
inc
add
sub
int3
int
pushf
mov
lahf
in
nop
fcmovnu
inc
enter
mov
fdivr
inc
sbb
sub
cmp
mov
daa
je
hlt
dec
mov
or
(bad)
fimul
mov
mov
arpl
shl
mov
rol
enter
xor
arpl
xlat
pop
mov
jne
push
push
repz
adc
xchg
cmp
lea
jmp
add
sub
imul
push
pop
loope
int3
aad
or
push
repz
int3
icebp
push
dec
xor
dec
enter
xor
sub
or
mov
dec
push
out
ret
xor
ret
daa
fisub
push
idiv
(bad)
push
mov
mov
mov
or
dec
pop
pop
hlt
or
adc
jne
push
mov
dec
icebp
sbb
sub
mov
sbb
push
xlat
mov
adc
shl
mov
retf
adc
pushf
imul
sub
scas
pop
mov
cmp
ins
aam
aam
or
mov
xor
pusha
and
sub
dec
fisubr
and
fisubr
inc
shl
and
push
xor
push
jo
stos
js
test
jl
test
and
adc
mov
sbb
inc
aad
mov
pop
int3
sbb
or
aad
push
dec
xor
cld
sub
mov
cmp
es
lea
jle
std
sbb
mov
fsubr
stos
xchg
(bad)
pop
sbb
mov
jo
mov
mov
adc
ds
mov
nop
mov
xchg
sar
movs
test
(bad)
enter
inc
scas
scas
movmskps
lods
pop
jl
dec
dec
xor
pop
in
shr
inc
adc
out
sub
mov
movs
int
xor
jecxz
je
in
out
mov
retf
pop
test
js
lea
xchg
adc
mov
in
sub
cmp
fisttp
clc
aas
enter
ins
in
ficomp
dec
nop
add
inc
es
rcr
movs
in
cs
sar
cs
pushf
and
repnz
sbb
cwde
in
pop
jb
xor
pusha
pop
xor
das
mov
xor
inc
cs
cld
pop
push
fdiv
inc
cs
loopne
inc
cs
pop
push
in
cs
mov
cs
mov
xchg
adc
repnz
xor
sub
mov
adc
aam
lds
in
pop
sub
nop
mov
or
pop
sbb
or
cs
pop
cmp
push
mov
pop
adc
scas
sbb
lea
and
mov
sbb
add
fdiv
xchg
mov
push
add
test
cmp
mov
pop
jb
iret
jmp
std
pushf
xchg
add
fdivrp
adc
nop
sub
inc
repnz
daa
add
sub
daa
les
push
push
dec
in
inc
dec
rcl
fs
leave
sbb
mov
pushf
ror
mov
pushf
lock
dec
leave
sbb
out
cmps
fs
sahf
sbb
out
add
cwde
sub
push
in
adc
ficom
dec
push
in
and
test
cmc
pusha
aaa
push
push
cmp
cmc
pop
cmps
jbe
daa
xor
je
in
inc
dec
hlt
je
test
pushf
cld
test
push
sbb
fisttp
pushf
je
in
dec
leave
sbb
adc
inc
enter
push
jb
daa
pop
sub
jb
daa
js
push
push
jb
daa
push
push
push
jb
daa
in
push
push
jb
daa
pop
test
mov
lods
push
jb
daa
sub
mov
daa
mov
jecxz
jb
daa
test
clc
push
jb
daa
xchg
clc
or
or
adc
push
xchg
add
sbb
and
and
mov
jns
dec
mov
cmp
add
cdq
imul
jb
jle
jle
pop
jb
xchg
sub
fs
in
mov
sbb
leave
fadd
xchg
sbb
leave
lock
and
fs
scas
and
scas
and
adc
mov
pop
jb
aas
cmp
push
jb
pop
push
pop
push
dec
push
in
jo
jo
push
push
les
lock
(bad)
adc
fisttp
and
cmp
pop
push
and
scas
xor
mov
push
push
jmp
sahf
cmp
cmp
cmp
adc
add
ret
je
xchg
in
ror
cld
add
mov
aad
sub
lea
xchg
or
push
mov
xchg
sar
mov
mov
mov
jg
dec
js
cmp
jne
or
push
jae
and
push
mov
out
mov
mov
xlat
dec
push
icebp
push
mov
or
ret
lods
add
cwde
xchg
pop
jl
cld
sahf
sahf
retf
push
loopne
push
lea
or
push
data16
and
ror
loop
sbb
xor
es
ret
dec
dec
movs
or
mov
(bad)
repz
push
mov
lods
xchg
add
mov
clc
(bad)
cmps
cmp
stos
push
push
rcr
int
xchg
jnp
ret
jecxz
sbb
sbb
mov
inc
inc
addr16
dec
call
inc
jb
xchg
rcl
rcr
sar
push
nop
or
js
or
mov
jo
or
nop
or
aas
nop
or
xchg
mov
cpuid
adc
pop
cmp
sbb
mov
jbe
mov
add
js
mov
ret
mov
arpl
xor
(bad)
mov
inc
es
or
pushf
dec
leave
sbb
js
dec
leave
adc
sub
cmp
adc
jo
dec
leave
cmp
cwde
pushf
dec
leave
sbb
leave
xor
inc
repnz
adc
jb
and
jb
aaa
push
test
push
jb
push
outs
mov
outs
and
push
mov
push
add
clc
xor
add
mov
and
loop
adc
or
sub
sbb
add
add
jge
fadd
mov
dec
(bad)
enter
xchg
aaa
les
mov
test
sbb
scas
mov
cmp
and
mov
ds
sbb
adc
or
push
push
jne
add
jl
mov
push
dec
sar
jns
push
fcmovbe
add
lods
cmp
call
inc
add
inc
or
add
inc
repz
push
add
add
mov
mov
push
push
cmp
idiv
pop
pushf
push
or
movs
or
adc
out
mov
outs
xor
or
ret
fnstcw
lock
iret
scas
pusha
fbstp
cwde
add
loopne
mov
lea
loop
add
ins
adc
xor
js
cwde
or
xor
lods
push
mov
aam
hlt
call
sti
sbb
sahf
push
sbb
cmp
je
push
loop
or
pop
(bad)
dec
pop
loop
mov
out
ins
ins
push
pop
cmp
jo
fdivr
mov
jbe
ja
(bad)
mov
mov
pop
(bad)
rol
pop
cdq
jp
xor
mov
cmp
xor
mov
dec
sub
mov
data16
ds
push
cmp
call
mov
(bad)
mov
mov
cmp
je
xor
jle
mov
je
repnz
ret
mov
das
les
sub
mov
test
jl
adc
jl
je
out
mov
inc
add
xchg
loop
and
lock
add
es
xchg
nop
fwait
cmp
xor
inc
and
xchg
(bad)
push
(bad)
or
push
cld
adc
add
loopne
push
add
xor
nop
or
clc
std
add
sbb
mov
cmp
push
or
ror
xor
test
cs
sbb
(bad)
sub
(bad)
jo
mov
xchg
jo
inc
mov
test
jl
pop
dec
jge
mov
inc
cmp
imul
pop
test
or
(bad)
mov
mov
xchg
retf
inc
or
mov
sbb
add
sbb
jle
ficomp
in
push
or
dec
mov
push
mov
push
leave
jg
aad
xor
mov
jmp
mov
dec
cwde
push
test
aas
aam
fs
lock
sbb
fistp
pop
int3
test
dec
sahf
push
or
fist
push
jo
inc
sbb
push
sbb
xor
mov
mov
adc
or
enter
dec
add
mov
aas
add
loop
xchg
sub
and
leave
adc
inc
sub
stos
push
ds
movs
pop
jecxz
xchg
fadd
dec
add
pop
xchg
adc
xor
fadd
push
mov
pop
push
call
fst
ret
adc
je
and
sub
adc
movs
jp
shl
cmp
or
mov
push
adc
fadd
aam
enter
xor
fld1
popa
lds
sar
pop
in
bound
call
push
(bad)
adc
sbb
xchg
mov
mov
cmp
outs
daa
in
dec
mov
lahf
mov
in
aas
push
lea
or
and
les
(bad)
pop
mov
ss
test
cmp
cmp
sub
cmp
(bad)
pusha
jae
jbe
adc
mov
sbb
xchg
cmp
pop
push
mov
nop
xchg
jo
xchg
lea
repnz
out
adc
test
retw
mov
xchg
loopne
jbe
inc
mov
push
lea
movs
cwde
enter
nop
mov
in
push
mov
nop
mov
add
xchg
add
add
inc
push
or
adc
lods
pushf
cmp
es
repnz
(bad)
lock
push
shl
inc
in
jb
pop
enter
push
jb
or
inc
xchg
push
leave
mov
xchg
push
adc
rcl
pop
and
adc
cmp
push
pop
aaa
jo
fcomp
or
int
outs
inc
pop
call
int3
pusha
inc
mov
xor
cmp
in
mov
enter
je
bound
repnz
sub
pop
mov
in
xor
aas
ja
mov
xchg
adc
sub
adc
fs
jb
aas
sbb
mov
pop
push
mov
nop
dec
mov
nop
xor
repnz
sbb
push
retf
push
enter
cmp
in
cmp
dec
push
in
push
ja
dec
push
in
ja
fs
push
in
xchg
stos
fs
push
in
stos
enter
in
enter
push
in
in
retf
mov
push
xor
sub
test
jg
add
jmp
adc
cmp
cmp
jl
pop
sub
push
(bad)
or
nop
sub
xchg
xor
add
int3
pop
sub
inc
sbb
mov
inc
test
adc
xor
inc
dec
nop
xlat
push
aad
sub
(bad)
lock
add
popf
sbb
dec
push
fwait
jmp
inc
pop
pop
push
aam
call
and
xchg
dec
out
test
push
das
mov
inc
dec
jnp
(bad)
jmp
add
sti
sbb
sbb
popf
inc
sbb
sahf
or
cmp
jne
sbb
cmp
cmp
sbb
ficomp
sub
and
mov
out
loopne
push
pusha
cmp
sbb
pop
mov
xor
jmp
push
fbld
xchg
imul
adc
mov
and
push
dec
test
jge
inc
mov
jle
clc
mov
js
fcom
repz
adc
cmp
adc
ds
xchg
(bad)
mov
cmp
std
push
mov
(bad)
test
jne
jno
fsub
shr
mov
(bad)
jno
sbb
mov
js
repnz
fs
adc
pushf
mov
daa
aam
add
xor
jae
add
arpl
adc
test
push
aas
call
test
inc
mov
cmp
push
push
cmp
mov
loop
clc
or
inc
and
xchg
inc
mov
sbb
daa
pop
sub
and
jns
or
cmp
movs
inc
sub
(bad)
imul
dec
push
dec
inc
adc
ror
cmps
push
mov
adc
fs
jle
sub
repz
dec
inc
add
push
push
mov
cmc
sub
dec
daa
sbb
pop
push
mov
inc
mov
pop
pop
adc
and
push
pop
mov
stos
loopne
push
jg
js
cmp
test
sbb
jno
ficom
js
movs
jns
cmp
inc
cmps
push
movs
lahf
sub
rcl
sub
mov
jo
std
cmp
aam
mov
dec
pop
inc
cs
mov
lock
ins
cmp
xchg
aaa
ss
push
stos
ja
or
mov
xchg
pop
add
je
push
push
pop
cmp
retf
clc
lods
mov
mov
sub
jmp
inc
cld
aas
lea
mov
test
adc
or
mov
push
je
fcmovbe
sub
imul
mov
dec
push
ret
adc
(bad)
xor
enter
mov
pop
inc
dec
enter
pop
xchg
add
in
cmps
sbb
cmp
and
inc
or
pop
xchg
mov
jne
add
cmp
outs
push
jecxz
jae
arpl
add
mov
xor
jb
int
movs
push
push
pop
adc
and
mov
push
loop
sub
scas
pop
mov
push
sbb
cmp
push
push
cs
call
(bad)
fucomip
adc
scas
test
shr
imul
push
(bad)
in
sub
mov
movzx
shr
sub
cmp
movs
add
add
test
out
xor
cmp
jbe
lea
in
sti
sub
movzx
add
or
add
lar
in
in
add
push
aaa
jmp
in
add
or
ret
cmp
jb
push
pop
xor
ret
push
mov
sub
call
lea
fidiv
movs
mov
add
or
add
push
in
shl
xor
add
cmps
inc
or
jg
fist
mov
mul
fmul
and
jmp
clts
inc
out
cmp
sub
adc
test
inc
clc
sub
mov
shl
pop
add
pop
add
mov
test
scas
xor
inc
sbb
jae
aas
xor
stos
push
inc
test
not
out
(bad)
mov
mov
xor
mov
push
adc
cmp
jne
mov
loope
pop
imul
mov
push
push
jnp
test
mov
cld
cs
outs
inc
nop
inc
sbb
cmp
or
cld
enter
pop
mov
cmps
cmp
sub
pop
xor
pop
pop
aas
aam
mov
std
outs
jnp
adc
and
cld
jmp
jae
out
push
mov
mov
or
loop
pop
mov
fmul
cmps
lods
pop
mov
jnp
out
add
adc
jl
mov
mov
mov
add
dec
icebp
jne
mov
ins
and
cmp
enter
stos
push
loop
xor
lea
je
jle
icebp
or
jb
jmp
push
dec
mov
gs
loope
mov
and
sub
mov
cmp
cs
sbb
retf
ja
les
dec
mov
and
imul
sahf
cmp
or
or
mov
rol
popf
mov
add
test
cld
push
xchg
cmp
jae
cwde
jge
inc
pop
jae
loopne
jns
jns
push
sub
push
mov
add
push
shl
xchg
mov
je
jnp
mov
mov
pop
sar
sahf
mov
adc
mov
jbe
mov
mov
(bad)
cs
mov
mov
or
(bad)
jno
inc
or
adc
movzx
cmp
je
push
jge
or
pop
mov
mov
add
inc
loope
add
shl
cmp
mov
fs
shr
cmp
sbb
sbb
retf
xchg
inc
inc
or
inc
mov
cmp
bound
xchg
add
mov
idiv
adc
sub
add
rcr
jmp
sbb
cld
xchg
loopne
inc
mov
cmp
or
cmp
cmp
jge
and
sub
mov
add
pop
test
or
sar
into
scas
pop
cmp
jae
fwait
jb
push
jbe
xor
leave
movzx
call
xchg
int3
mov
jmp
mov
aad
xchg
add
xchg
and
fiadd
jae
sar
out
fld
push
mov
jl
add
jmp
adc
jmp
mov
or
xor
cmps
push
mov
imul
xor
mov
das
shufps
push
jns
into
mov
sbb
mov
mov
mov
add
(bad)
pop
pop
mov
outs
pop
mov
call
sub
test
dec
sub
push
(bad)
in
xchg
outs
pop
sahf
dec
mov
add
cmp
mov
movs
push
xor
pop
mov
mov
jbe
and
add
lock
dec
loopne
mov
fidiv
test
in
inc
mov
jp
rcr
clc
cmp
shl
scas
enter
pushf
test
and
xchg
int
jb
push
arpl
pslld
pop
dec
xor
mov
jmp
sub
inc
idiv
cmps
out
and
add
sti
sbb
int
sbb
cmp
lea
loop
push
bound
push
ror
mov
cmp
repz
cmp
clc
or
sub
lock
cmp
sbb
jb
or
(bad)
push
push
daa
add
mov
cmp
pop
(bad)
sub
retf
shl
jo
rcr
cmp
ret
add
sub
ja
push
call
push
dec
and
sahf
scas
xor
or
ins
push
cli
and
dec
push
mov
add
pop
adc
pop
mov
mov
js
(bad)
or
fcom
mov
ja
adc
xor
mov
pop
mov
popf
adc
fisttp
jbe
mov
mov
push
jmp
sbb
jp
mov
sub
adc
mov
pop
cmp
inc
ror
dec
xor
mov
clc
add
mov
xor
pop
cli
inc
mov
nop
bound
mov
hlt
ret
loope
pop
lds
movs
push
(bad)
adc
lahf
jl
pop
fs
and
pop
sbb
stc
or
and
or
inc
lock
not
inc
and
clc
dec
jp
or
xor
mov
jl
dec
mov
mov
add
scas
cwde
bound
fdiv
daa
in
ins
out
mov
jmp
std
cmp
mov
or
xor
dec
jns
adc
dec
xor
ror
ins
sub
icebp
inc
or
hlt
je
and
jmp
push
nop
pop
aam
mov
shl
or
jge
lea
cmp
jae
push
adc
stc
scas
or
adc
jle
je
dec
or
movs
popa
jle
loop
pop
mov
jo
sub
or
sbb
jl
jmp
pop
(bad)
cmp
jae
scas
imul
xor
(bad)
adc
jne
sbb
sub
push
adc
fisttp
nop
adc
push
xchg
stc
mov
adc
aad
sub
mov
fisttp
inc
cmp
mov
out
mov
inc
jecxz
test
pushf
add
dec
js
and
fbstp
bnd
pop
loop
push
and
loopne
loop
xor
push
mov
shl
mov
cmps
mov
or
and
repnz
stc
xchg
dec
or
or
jae
stc
(bad)
mov
sub
jne
cwde
cmps
mov
icebp
mov
mov
call
jae
sub
fs
pop
stc
pop
xor
inc
mov
out
pusha
pop
push
dec
pop
sub
cwde
and
retf
sbb
adc
mov
mov
cs
dec
test
dec
fisttp
push
hlt
push
shl
mov
push
clc
push
or
or
(bad)
add
pop
xor
mov
imul
or
outs
lds
or
aaa
mov
xchg
adc
ret
cdq
lock
jae
cmp
xchg
xchg
clc
sbb
sbb
repnz
mov
daa
ins
jo
mov
cdq
cmp
packuswb
icebp
outs
sub
mov
jae
(bad)
test
sbb
mov
mov
jbe
inc
sbb
shl
shr
push
hlt
nop
mov
inc
and
into
push
aam
xchg
and
and
jno
or
mov
les
and
inc
stos
jmp
or
inc
cmp
mov
ficomp
(bad)
repz
leave
or
sbb
je
mov
dec
add
retf
gs
sbb
add
and
dec
push
andps
mov
adc
xchg
cmp
xchg
xchg
iret
xchg
add
not
(bad)
ror
xchg
dec
sub
mov
dec
lea
or
out
mov
jmp
vpminsw
std
mov
xor
test
inc
cli
outs
mov
or
ror
inc
inc
daa
mov
mov
ss
inc
inc
mov
mov
out
push
movs
sub
iret
push
jb
cdq
push
into
std
or
xchg
push
pop
xchg
cmps
jb
add
pop
ret
jle
outs
push
out
push
shr
hlt
or
add
aam
mov
mov
and
ds
es
push
pushf
add
push
dec
fs
sub
movs
mov
cmp
add
mov
into
mov
loopne
ret
sbb
loopne
xchg
inc
push
push
call
and
sbb
sbb
inc
xchg
fcompp
(bad)
xor
lea
add
or
out
inc
sub
cmp
or
in
leave
add
(bad)
sub
enter
mov
sbb
adc
repnz
pushf
loopne
(bad)
mov
imul
adc
push
out
repnz
retf
and
dec
sbb
iret
push
sub
repnz
ss
add
(bad)
loop
out
aaa
out
rol
inc
xlat
or
lods
retf
xchg
inc
sahf
inc
mov
and
iret
pop
inc
dec
push
mov
adc
jl
xor
or
mov
adc
mov
adc
xchg
sub
int3
cmp
std
adc
ss
sahf
movs
cmp
cmps
adc
add
cmc
adc
lahf
fcomi
pop
fmul
dec
and
or
adc
push
pop
pusha
jne
enter
xchg
mov
or
xor
or
cmp
jl
mov
xchg
out
sub
lea
push
sub
cmp
add
je
push
inc
ficom
add
add
(bad)
call
(bad)
adc
add
mov
js
sar
ins
neg
xor
aam
jge
movs
lds
pcmpeqw
repnz
add
gs
inc
leave
sub
add
sub
mov
call
lldt
mov
adc
or
int3
movups
cmp
pushf
mov
inc
ins
push
mov
push
and
mov
jae
or
push
sub
push
mov
push
or
add
add
add
out
ret
fbstp
or
movs
sbb
and
leave
and
inc
sub
mov
xor
push
jge
fwait
push
pusha
and
in
sub
sub
xor
stc
scas
add
and
or
out
sbb
les
adc
sub
jne
enter
push
mov
dec
repz
inc
mov
je
movs
jno
mov
xor
mov
adc
jb
xchg
pop
add
fimul
push
lods
cmp
sub
and
push
and
inc
mov
mov
loopne
sub
in
aas
sar
jp
sbb
and
(bad)
lods
mov
mov
test
clc
aam
mov
call
loopne
adc
mov
sub
adc
add
jmp
pop
and
cmp
cmp
or
iret
mov
cmp
iret
pop
cmc
inc
jno
(bad)
sbb
pop
jae
or
sar
push
inc
mov
xor
and
inc
inc
pop
sbb
imul
out
add
jne
stos
add
pop
push
push
pop
stos
mov
loope
les
cmp
pop
test
jl
cmp
inc
jae
lods
(bad)
mov
ret
(bad)
jmp
test
adc
mov
push
mov
outs
jne
sbb
jns
sub
mov
test
loopne
sbb
test
mov
std
jle
nop
ss
imul
push
pop
(bad)
sub
xchg
xor
int
ror
pusha
fisubr
pop
mov
adc
gs
xchg
xchg
mov
xrelease
cmp
ss
ss
jnp
shr
sahf
in
mov
cmp
mov
fiadd
std
mov
call
mov
push
and
or
and
(bad)
mov
or
adc
adc
and
adc
adc
sbb
sbb
lock
loope
and
pop
and
or
in
(bad)
out
and
adc
push
push
jmp
retf
sbb
aaa
mov
lods
mov
in
jbe
pushf
clc
scas
push
lahf
repnz
mov
shr
xor
xchg
test
add
push
adc
push
push
dec
inc
test
dec
pop
fisttp
jne
dec
adc
lock
and
popf
add
add
lea
sub
mov
js
mov
jp
mov
mov
add
or
es
inc
xor
nop
or
mov
shr
inc
and
(bad)
outs
mov
mov
xor
xor
lahf
xchg
cmp
and
lds
outs
push
hlt
cmp
and
mov
sub
repnz
jne
pop
popa
enter
or
push
sub
mov
mov
mov
pop
ret
data16
add
outs
cld
add
loop
jge
inc
lea
mov
jle
cmp
jge
push
cmp
cmp
jb
pop
cmp
inc
jmp
imul
out
pop
sbb
inc
sbb
sar
sub
mov
fstp
push
jb
adc
push
add
retf
stos
dec
lea
mov
jmp
and
lea
test
jl
aas
retf
pop
sti
pushw
call
add
in
push
jg
xchg
inc
mov
push
inc
push
inc
call
sub
fucomi
and
dec
jo
adc
inc
push
test
dec
mov
call
(bad)
das
push
push
xor
xor
pop
or
pushf
or
adc
hlt
mov
adc
inc
and
hlt
ins
xlat
xchg
cld
pop
push
stos
jl
ins
sub
push
ins
inc
push
jnp
retf
xor
call
fbld
pmaxub
pop
fdivr
enter
jne
pop
cs
retf
add
imul
mov
push
push
pop
jmp
cli
mov
or
mov
fidivr
(bad)
mov
loope
sub
jne
dec
and
mov
mov
or
loop
mov
out
rcr
mov
or
push
adc
or
dec
fldcw
ds
add
add
lods
cld
sbb
jecxz
pop
push
xchg
and
dec
hlt
pop
sub
leave
shl
xchg
jb
adc
sbb
push
inc
enter
stos
retf
add
mov
out
push
hlt
add
shl
sbb
mov
add
jg
mov
cmp
dec
movs
sub
mov
jnp
mov
sahf
add
jecxz
push
push
popf
dec
mov
pusha
jnp
push
stc
sahf
(bad)
jle
dec
test
and
jl
jl
rol
mov
jle
ins
in
xor
in
test
ja
div
and
add
add
bnd
pop
sub
jmp
add
clc
jg
jno
pushf
int
inc
pop
in
and
cmc
dec
mov
mov
inc
add
leave
push
jl
push
(bad)
inc
mov
add
add
sbb
(bad)
or
fld
repz
in
jle
add
cmp
shl
loopne
pop
test
shl
jnp
adc
push
jle
(bad)
rol
dec
or
shr
dec
jg
pop
inc
cmps
xor
adc
push
push
mov
inc
inc
jl
lea
in
hlt
add
pushf
add
call
jge
imul
push
inc
mov
xchg
or
inc
push
loopne
sahf
or
mov
adc
mov
sub
cmp
es
lahf
cmp
nop
push
jo
add
shl
test
mov
jle
or
jge
adc
xchg
mov
push
cmp
cmp
shl
mov
adc
jb
sbb
and
xchg
popf
(bad)
fwait
cmp
sub
push
cs
and
adc
xor
ss
push
inc
ret
jmp
call
inc
mov
jne
(bad)
or
xor
ror
test
(bad)
je
cmp
jae
push
das
sbb
inc
and
or
ins
inc
cmp
push
fisttp
cmp
add
jmp
push
scas
add
add
fwait
mov
std
or
pop
adc
dec
pop
add
jns
cmp
xor
out
loop
adc
inc
mov
sti
loopne
ret
or
and
pop
dec
lock
jmp
repnz
bsf
sub
ja
movs
xor
sub
jmp
or
jbe
lds
mov
nop
sub
test
outs
aad
pop
mov
push
xchg
retf
ja
mov
jmp
add
mov
push
jne
or
loop
sahf
add
adc
and
jecxz
mov
sbb
inc
lods
nop
cmps
push
sub
push
push
and
cmp
test
mov
mov
jnp
and
adc
mov
cli
mov
mov
add
dec
call
pop
jmp
mov
mov
push
dec
mov
std
fisttp
inc
xor
inc
xor
or
outs
adc
xor
outs
dec
or
inc
jae
jbe
mov
ret
add
(bad)
ja
dec
ins
fisttp
shr
pusha
inc
mov
push
xchg
fmul
push
add
jmp
and
add
jg
push
mov
inc
cld
shl
or
retf
add
xor
out
outs
rol
call
or
add
cwde
xchg
add
in
clc
inc
cmp
jl
dec
test
xchg
test
out
push
lahf
push
sbb
movzx
push
pop
pusha
push
pop
shl
add
inc
add
es
sar
outs
or
outs
outs
sub
mov
or
(bad)
into
mov
and
movs
inc
xchg
mov
jo
ds
outs
mov
push
aaa
dec
add
mov
addr16
sbb
push
mov
dec
out
pop
sar
fistp
out
pop
or
push
out
pop
or
nop
mov
leave
ret
sbb
adc
mov
push
ret
nop
push
push
push
cmp
rdmsr
ds
iret
imul
push
dec
push
or
adc
rcr
retf
cmp
ss
inc
sub
sbb
cmps
ja
and
fistp
shl
xor
jecxz
ret
ds
jg
cmp
lea
or
pop
ss
adc
push
jle
test
loope
mov
les
or
xor
lods
xor
mov
jae
sub
dec
test
push
ins
lods
add
mov
jne
out
or
mov
loop
ret
outs
push
cld
push
outs
adc
push
dec
mov
push
mov
push
dec
inc
and
push
(bad)
fnstsw
dec
stc
(bad)
sub
dec
fstp
(bad)
addr16
retf
cmp
imul
jle
sar
jge
mov
inc
cmp
xchg
js
mov
dec
cli
cmp
adc
adc
sub
or
mov
mov
mov
pusha
iret
pop
sbb
lods
pop
add
sahf
cmp
dec
dec
rep
cld
(bad)
shl
add
js
ins
jo
xor
or
push
cmc
shl
adc
mov
inc
push
scas
add
mov
xor
pop
or
sti
cmp
jb
mov
push
cld
dec
adc
push
adc
pop
sbb
pop
neg
cwde
adc
cmps
daa
sbb
leave
into
mov
test
or
ret
and
js
lds
call
shr
xor
test
push
cli
lea
stos
inc
sbb
inc
inc
sbb
idiv
(bad)
xor
cmp
jne
jle
mov
gs
or
retf
int3
or
sub
push
push
and
xor
xor
mov
imul
sar
pop
pop
add
fbstp
shr
test
push
cmp
mov
sub
push
je
xchg
cs
jne
mov
js
jo
jmp
mov
pop
in
or
rcr
inc
mov
and
test
pop
fsub
es
sub
add
ins
xor
inc
imul
jae
dec
aaa
push
sbb
mov
pop
test
pop
movs
les
gs
cmp
xor
mov
fild
add
(bad)
push
pushf
cmp
cld
xchg
push
xor
xlat
inc
cmp
xchg
xor
adc
rcl
mov
ja
xlat
mov
push
lea
pusha
test
or
add
pop
pop
neg
(bad)
aas
outs
mov
es
xchg
push
sbb
call
ret
lds
inc
lahf
or
pop
test
mov
outs
cmp
dec
inc
dec
dec
and
xchg
add
push
test
inc
ret
lods
lock
mov
pushf
stc
hlt
and
test
mov
in
sub
pop
and
add
mov
pop
lock
cmp
adc
xor
sub
push
mov
jl
lea
xor
(bad)
lock
jnp
push
lahf
ds
mov
ret
jg
push
xchg
pushf
stos
nop
jne
xor
test
pop
jle
lock
aaa
fs
aad
push
cmp
mov
or
adc
jmp
push
inc
jnp
clc
adc
ins
adc
jo
sub
xor
or
adc
xchg
xchg
cmp
rol
xor
sbb
inc
fs
xchg
mov
jno
adc
sub
sub
inc
cmp
jno
int
or
or
test
jecxz
stos
int3
xor
xlat
cs
call
call
rol
xchg
repz
pop
or
ins
retf
ds
and
ret
cmp
data16
jmp
fdivr
sti
jae
mov
push
push
enter
pop
mov
sahf
cmp
mov
xor
lea
mov
jae
pop
pop
and
sub
and
or
adc
or
push
push
pop
push
retf
mov
jne
sbb
std
push
adc
sub
and
pushf
push
jl
mov
iret
sbb
outs
sar
adc
sbb
mov
or
rol
add
in
(bad)
and
and
add
sub
jb
pop
lods
jo
pop
cld
rcl
not
mov
ret
in
xor
imul
add
sub
or
sti
push
sub
ds
clc
mov
push
rcl
in
std
shl
xor
lods
rol
add
pushf
jne
adc
test
mov
repnz
stc
sub
ds
mov
sub
fdivrp
add
inc
add
pop
scas
jb
xchg
test
nop
adc
loope
scas
xchg
jecxz
xor
push
xchg
pushf
inc
pushf
pop
shr
addr16
jo
mov
sub
in
fadd
mov
mov
add
and
test
sti
ret
jmp
dec
add
adc
push
les
pcmpeqw
sbb
xor
sub
outs
rcr
sar
cmp
call
and
clc
xchg
inc
fstp
leave
and
popa
jne
cmp
or
jbe
retf
sar
mov
dec
mov
sub
mov
dec
ret
idiv
add
retf
lds
pop
pop
add
mov
add
adc
inc
rol
jae
std
add
dec
inc
div
sub
mov
dec
mov
inc
shr
dec
xor
(bad)
outs
fisttp
adc
cs
sub
add
loopne
add
sahf
add
and
xor
inc
or
adc
fld
mov
cmps
cmp
loop
xchg
add
pop
cmc
popa
jb
sub
cli
push
add
or
push
not
sbb
sbb
cmp
or
cmps
stos
(bad)
and
and
mov
inc
ins
or
xchg
or
sahf
hlt
je
dec
ret
mov
sti
mov
dec
push
in
movs
cld
adc
sbb
test
push
mov
or
mov
xchg
jl
cmp
mov
retf
inc
cmp
sar
dec
cmp
or
xchg
shr
and
shr
or
push
rol
scas
adc
test
pushf
test
call
jb
mov
add
fstp
adc
pop
retf
xor
ret
jl
jle
rol
ret
sub
mov
js
ror
xchg
mov
ja
add
push
adc
inc
adc
ss
test
adc
outs
and
and
pop
clc
out
sub
jnp
lea
mov
jno
mov
dec
jge
mov
test
shl
or
push
movs
mov
mov
jp
jmp
sub
imul
data16
jmp
call
jmp
xchg
push
test
push
pop
sbb
and
js
sub
fisub
lods
push
and
xor
ins
out
scas
jne
leave
add
and
loop
sahf
ins
ret
lods
(bad)
int3
mov
fsub
js
xor
inc
xor
icebp
pop
loopne
ret
add
test
or
cmp
xor
cmps
shr
push
ins
lea
mov
and
in
aaa
inc
add
mov
lds
xchg
shl
pusha
mov
jle
inc
call
popa
ja
imul
mov
adc
push
push
inc
push
add
push
xchg
adc
je
add
push
sbb
retf
sbb
ins
or
or
inc
jne
cmps
or
je
sub
ret
or
push
or
mov
test
daa
or
push
mov
cmps
xor
cmp
int
and
mov
stos
outs
add
push
push
and
aaa
adc
out
add
dec
retf
loopne
clc
je
jge
sar
je
cmp
ja
jmp
pop
fld
or
rol
sub
add
sahf
cmp
push
fcom
xor
push
mov
ret
ds
in
inc
hlt
dec
push
jne
push
jo
loopne
inc
jne
out
dec
add
push
fdiv
std
jae
ja
pop
cli
fsub
push
jbe
pop
add
add
mov
or
sahf
mov
call
sub
cmp
ds
sbb
dec
mov
sub
shl
mov
arpl
div
add
jbe
mov
es
adc
add
sub
jp
(bad)
mov
jmp
retf
or
push
jns
ret
pop
mov
add
(bad)
cmp
and
inc
sbb
fiadd
cmp
sbb
push
push
cmp
add
test
ds
add
inc
push
enter
(bad)
loope
push
outs
xchg
daa
mov
mov
xor
adc
je
jae
sub
push
and
add
pop
mov
popf
jbe
je
pusha
shr
push
arpl
shl
mov
push
mov
or
mov
mov
and
dec
rcl
mov
inc
pop
jne
sbb
xor
pop
sbb
mov
pusha
sub
popa
mov
mov
lea
add
lods
lea
adc
mov
js
cmps
adc
ins
cmp
inc
retf
loope
sar
jge
test
repz
add
adc
jmp
(bad)
ror
sbb
push
out
cmps
iret
fnsave
cmp
sti
inc
lods
jg
add
add
test
cwde
pop
jmp
and
jo
lods
or
jno
stos
jle
mov
or
push
or
sbb
or
xchg
sub
dec
mov
in
jecxz
sub
jnp
jmp
dec
push
cmp
in
jb
and
loope
and
adc
cmc
and
adc
ss
outs
mov
mov
cmp
or
es
mov
int
or
push
inc
sub
inc
int
enter
sub
inc
leave
xchg
xlat
jmp
mov
iret
dec
retf
jle
add
stos
in
sbb
xchg
jne
adc
xlat
jecxz
pop
xor
jno
jmp
mov
xlat
mov
sbb
pushf
cmp
or
or
pop
icebp
inc
call
cmp
ja
jge
stos
popa
pushf
or
clc
movs
mov
pop
dec
(bad)
imul
sub
shr
ds
movs
popa
or
dec
rcl
fistp
xlat
fwait
xchg
pushf
ss
mov
mov
push
cs
pop
pop
mov
imul
push
adc
js
or
mov
and
sbb
push
mov
cmp
clc
stos
pop
je
xor
sub
xor
imul
dec
mov
(bad)
push
dec
sbb
mov
pop
test
iret
sub
test
ds
icebp
push
or
dec
ret
pop
repz
adc
pop
xchg
add
inc
mov
push
lock
cmp
and
pop
mov
dec
js
je
(bad)
(bad)
cmp
add
add
ret
xchg
xor
test
dec
mov
fwait
scas
xor
sub
in
dec
add
add
sbb
xchg
ret
cmp
je
icebp
cmps
mov
add
cmp
loopne
ror
cmps
cmp
pop
xchg
adc
sub
pusha
and
add
add
dec
pop
inc
push
ja
ret
push
xor
cmp
add
popfw
mov
push
out
push
push
pusha
ror
rcl
bound
test
push
adc
add
lea
cmpxchg
pop
test
mov
add
and
(bad)
jb
and
stos
xchg
ins
fsub
and
dec
out
inc
xor
jmp
sbb
rcl
push
xor
inc
mov
bound
ret
lods
(bad)
and
adc
inc
push
(bad)
jge
mov
push
das
push
add
push
shl
xchg
and
dec
mov
push
addr16
xor
std
inc
loop
jg
or
icebp
punpckldq
push
jge
std
add
add
jmp
les
lea
dec
(bad)
iret
sar
xlat
xor
push
outs
push
test
xchg
push
js
push
js
and
stos
dec
adc
mov
jne
jae
push
dec
or
jnp
push
xchg
loopne
and
mov
pop
pop
add
cmp
call
dec
fs
loopne
and
lock
dec
sub
int
adc
pop
ins
push
push
imul
icebp
adc
je
popf
inc
cmps
js
sahf
or
jp
popf
retf
mov
(bad)
xor
mov
pop
xor
mov
push
jbe
xchg
mov
sar
and
inc
test
out
push
sbb
rol
pushf
test
inc
ja
test
inc
or
loope
sub
shr
add
lea
imul
mov
ror
test
push
jmp
xor
pop
add
cmp
ja
mov
fadd
mov
leave
adc
mov
mov
dec
or
jle
jl
and
cmp
je
cmp
jp
rcl
sbb
mov
push
shl
jmp
fs
outs
xchg
pop
jmp
push
mov
mov
mov
ins
and
add
or
ror
inc
adc
push
mov
or
mov
mov
and
inc
dec
sub
push
push
sbb
mov
cmp
push
or
lea
push
call
lea
push
pop
or
(bad)
sub
xlat
adc
dec
add
enter
ins
pop
or
lea
dec
push
dec
cmp
icebp
call
add
jae
test
test
adc
mov
or
jp
adc
dec
dec
aad
xor
xlat
dec
pop
cmp
xchg
or
rcl
dec
cmp
hlt
or
sti
fsub
pop
inc
adc
dec
jbe
mov
pop
(bad)
jns
adc
mov
sub
int
icebp
mov
inc
inc
adc
inc
adc
add
sbb
push
lea
xchg
sub
stos
daa
mov
add
add
push
ror
sub
push
push
(bad)
ficom
sbb
pusha
ins
cwde
adc
and
jo
push
je
adc
add
add
fs
cmp
fldenv
xchg
cmps
xor
mov
rcl
es
in
push
out
xlat
mov
mov
xchg
add
inc
or
cmp
jne
cmp
xor
mov
lea
pop
stos
pop
pop
inc
cmp
lods
cmp
xor
data16
cvttps2pi
jne
dec
stos
rcl
pushf
mov
popf
jecxz
add
pop
or
mov
cli
pop
add
scas
clc
sub
mov
cs
scas
mov
and
mov
xchg
pop
mov
imul
es
or
mov
mov
jg
pop
and
add
push
push
pop
cmp
push
cmps
ds
inc
xchg
inc
inc
ins
adc
push
retf
dec
sbb
dec
xor
jno
test
hlt
test
dec
xchg
mov
movs
hlt
adc
xchg
stos
push
stos
adc
jg
cmp
push
lea
into
ss
pop
mov
sub
mov
stos
xchg
mov
test
les
inc
inc
sub
push
adc
int
imul
push
push
mov
pop
enter
call
xchg
cmp
mov
or
into
adc
call
out
scas
push
sub
push
or
int3
mov
pop
cmp
xchg
cmp
xchg
or
push
(bad)
retf
and
mov
pop
jl
cmp
mov
scas
mov
xchg
test
fdivr
call
dec
je
jo
mov
push
xor
dec
pop
shl
and
cli
test
push
push
sbb
std
out
cmp
sub
pop
in
pop
mov
or
out
cli
push
mov
and
cmp
mov
xor
inc
jge
pop
push
inc
test
retf
test
stc
fisubr
and
outs
push
dec
inc
cmp
mov
jne
mov
je
jge
xchg
pop
popf
mov
test
lahf
jmp
push
and
pusha
and
shl
popa
xchg
dec
ins
cmp
inc
pusha
sbb
sbb
sub
inc
call
sub
fsub
inc
ins
loopne
popf
sbb
je
jno
mov
xchg
dec
jmp
pop
pushf
add
adc
xor
dec
adc
test
cmp
retf
cwde
xor
call
mov
lds
and
or
sub
jmp
sub
mov
adc
or
xchg
adc
rcl
inc
mov
ret
and
dec
push
push
push
mov
cmp
push
sub
add
adc
push
push
and
pop
pop
sbb
arpl
and
out
mov
dec
push
add
dec
or
es
jl
xchg
je
pop
cmp
mov
mov
rol
ins
adc
and
add
pop
scas
lods
mov
mov
push
or
stos
fst
cld
sti
out
callw
(bad)
jae
pop
add
add
bound
pop
ret
ins
inc
rcr
sar
inc
or
xor
push
mov
cmp
ret
or
pusha
int
test
sbb
push
and
cmp
and
add
cmp
ror
sbb
adc
movs
xchg
ret
je
imul
adc
jnp
cmps
xchg
jbe
mov
push
or
mov
push
cmp
sbb
sbb
lods
popa
mov
push
aas
mov
push
or
push
test
mov
dec
cmp
jl
xchg
adc
jle
push
pop
(bad)
js
xchg
call
xchg
mov
aas
inc
add
fmul
scas
cmps
retf
jp
and
push
pop
cmp
xor
jne
je
cmp
es
push
nop
pop
sar
ret
dec
adc
test
mov
mov
shr
rcr
mov
and
or
xor
add
aas
scas
jno
cmp
adc
dec
xchg
repnz
fcomp
test
sub
xor
mov
cmc
mov
jmp
jmp
push
cmp
retfw
mov
pop
add
daa
add
adc
push
mov
add
fadd
into
pop
xchg
lods
xchg
je
or
enter
dec
pop
fistp
jbe
cmp
mov
mov
push
xchg
mov
sbb
mov
in
cmp
les
push
jmp
lea
jmp
mov
sbb
daa
std
mov
inc
pushf
lahf
ret
loop
or
mov
or
push
mov
ins
jne
or
inc
add
and
xchg
dec
mov
imul
pop
pop
ret
push
imul
adc
add
dec
daa
cmc
stos
or
loope
repnz
add
fwait
cld
xor
sub
out
lock
and
pop
adc
pop
dec
lock
or
push
push
daa
fadd
pushf
push
dec
mov
repz
push
test
test
es
lea
push
sbb
mov
popa
mov
fnstsw
sbb
cs
mov
in
sbb
and
imul
jb
cli
jp
or
dec
cmp
mov
push
mov
push
js
xchg
adc
inc
add
add
sbb
dec
out
sub
ror
or
je
movs
sbb
sub
sbb
fdivr
rcl
adc
pushf
sbb
pop
dec
test
ss
push
and
jp
cmp
pop
pop
and
cmp
jo
xchg
or
inc
mov
clc
sub
cmp
xchg
call
popa
leave
dec
sbb
int3
push
fadd
out
sub
and
cmps
lock
aaa
ret
js
dec
iret
shr
sub
push
cmc
adc
pop
and
add
sub
push
scas
mov
add
add
mov
xor
pop
push
cmp
(bad)
stc
pusha
dec
rcr
mov
push
push
push
int3
inc
adc
pushf
je
pop
rol
push
push
cmps
mov
push
xor
pop
sbb
popf
push
popw
push
and
cld
adc
mov
push
adc
test
js
and
shr
pop
inc
es
je
push
fucomp
or
pop
loope
shr
popf
xor
popa
pusha
xchg
int3
push
adc
out
sbb
dec
cwde
add
mov
push
ja
gs
xor
xchg
clc
jno
pop
(bad)
inc
das
mov
mov
mov
outs
push
push
xchg
adc
push
outs
mov
mov
inc
loop
fist
cli
add
(bad)
jmp
jb
mov
test
sub
jno
mov
in
mov
lea
mov
add
sub
cmp
setae
or
and
jmp
push
cmp
fst
neg
push
sbb
fistp
push
or
jo
mov
fst
sbb
add
into
test
imul
mov
sub
cmc
pop
ja
push
push
dec
outs
xchg
call
adc
loope
or
sahf
ins
test
stos
lods
jne
xor
ret
pusha
jno
mov
pop
or
pop
test
mov
inc
add
or
inc
xchg
movs
shr
jle
mov
push
adc
loop
test
call
push
mov
cmp
fld
mov
js
loope
pop
mov
call
push
cmp
inc
push
loope
leave
push
or
xchg
mov
cmps
(bad)
add
fiadd
stc
aaa
or
mov
mov
pop
(bad)
push
push
lds
call
mov
aam
push
push
ins
clc
push
stos
add
cmp
jmp
or
xchg
adc
sbb
out
ins
hlt
or
dec
xchg
push
ret
das
add
pop
pop
pop
add
aaa
dec
add
push
sbb
cli
xchg
and
(bad)
fsub
loopne
mov
jb
push
rcl
mov
(bad)
fs
mov
jae
xchg
lea
in
mov
js
test
push
add
push
and
or
add
das
or
(bad)
mov
adc
xchg
rol
mov
mov
mov
sbb
mov
sbb
adc
xor
mov
mov
mov
inc
or
imul
sti
je
and
mov
imul
xor
or
xor
ins
cmc
imul
das
(bad)
cwde
arpl
lock
push
or
or
push
push
adc
sahf
inc
dec
push
push
push
and
xchg
xchg
inc
push
push
xchg
xor
sbb
pop
or
sub
shl
xchg
and
call
pop
inc
sahf
push
push
inc
xor
adc
xor
push
pushf
mov
shl
mov
cmp
(bad)
jmp
dec
jb
cdq
xchg
sbb
push
mov
sub
imul
sbb
in
retf
push
inc
dec
test
js
adc
push
int3
push
gs
sub
into
(bad)
add
jne
loop
inc
es
adc
and
xchg
pop
dec
adc
jns
stos
xor
test
inc
or
inc
push
mov
jns
adc
fcmovnu
aad
dec
and
js
in
in
movaps
sub
sbb
sub
or
or
cmp
sub
adc
sub
inc
jo
or
cmc
ds
add
js
sub
xor
ja
and
push
das
and
dec
or
push
mov
xor
addr16
sbb
sbb
push
lock
shr
sub
jns
pop
les
cwde
dec
cmp
mov
mov
push
cmp
push
shl
add
or
jne
push
push
pop
xchg
jo
lea
fld
adc
inc
or
push
mov
lock
push
add
dec
repnz
leave
cmp
push
push
add
inc
add
push
mov
jb
loope
adc
jl
aad
jns
in
pop
push
mov
push
push
push
push
in
dec
or
or
sbb
pushf
test
ret
dec
push
sbb
pop
add
or
xlat
pop
dec
or
add
repnz
add
loopne
mov
xchg
lea
jo
cmp
call
sbb
mov
int3
in
xchg
lds
in
dec
shr
(bad)
jmp
jns
js
aad
or
and
adc
mov
cmc
into
jno
stc
cmc
sbb
fsubr
dec
push
adc
mov
call
mov
mov
add
mov
mov
in
xor
and
fldenv
push
sbb
movs
aam
je
lock
hlt
ror
mov
sbb
enter
scas
jmp
ret
pop
add
xor
add
dec
shr
sbb
xor
aam
bound
nop
push
xchg
cmp
dec
dec
ins
add
mov
mov
mov
sub
xchg
adc
setg
int3
fs
icebp
push
into
push
sub
inc
(bad)
pop
cmc
inc
mov
fldcw
mov
(bad)
adc
adc
ins
push
fistp
cmp
add
or
ds
sti
add
cwde
pop
sbb
jne
adc
push
or
dec
push
mov
mov
inc
adc
in
sbb
pop
mov
test
leave
cmp
adc
mov
and
inc
or
sbb
test
fcom
sbb
mov
adc
cmp
mov
rcl
sub
sub
imul
jns
push
cmp
xor
xchg
inc
call
jns
cmp
cmp
pop
dec
je
and
out
add
mov
imul
adc
out
and
aad
and
fwait
jo
enter
adc
pop
or
and
xchg
retf
sbb
cmp
lods
xor
pushf
sbb
mov
cmp
inc
cmp
cmp
dec
scas
mov
push
sbb
mov
push
push
enter
daa
punpcklbw
lds
leave
sbb
push
push
shl
xchg
adc
dec
imul
test
mov
push
jnp
cmc
je
push
xchg
dec
idiv
into
jae
mov
sbb
dec
fadd
(bad)
lea
jb
mov
sub
cmp
jae
sub
add
fmul
cmp
pop
sbb
dec
mov
bound
arpl
push
push
push
pop
aas
pushw
sbb
jbe
in
push
test
ret
ret
jmp
stos
jns
pop
out
add
inc
mov
xchg
dec
(bad)
mov
push
sbb
fst
jecxz
sbb
es
movs
hlt
stos
adc
inc
add
jbe
pop
pop
ret
aas
push
aam
xor
lods
push
sahf
push
inc
xor
push
shl
sbb
cmp
sub
shr
outs
mov
xchg
inc
pop
fild
test
push
(bad)
push
inc
xlat
movs
arpl
push
xor
push
mov
jmp
mov
pop
dec
mov
jl
xor
mov
or
or
pop
cmp
out
lods
mov
dec
sub
fnsave
neg
mov
or
cmps
dec
mov
xchg
jmp
mov
repnz
mov
(bad)
sub
retf
in
sbb
sub
in
and
pushf
aam
iret
rep
xchg
xor
xor
inc
es
lock
inc
in
xor
sbb
push
push
in
pop
xor
sbb
xchg
pop
add
cmp
(bad)
inc
or
xchg
nop
mov
in
clc
sub
pop
jle
sub
or
sbb
stos
sub
sahf
xor
lock
ss
lahf
mov
or
or
cmps
add
push
lahf
ins
cmp
shl
adc
pop
push
fimul
push
stos
shl
int3
scas
add
add
jne
dec
mov
cmp
aaa
es
jmp
(bad)
sbb
mov
push
das
ror
push
mov
xchg
das
call
sub
mov
call
std
jge
push
call
fmulp
mov
mov
imul
jl
add
mov
and
lods
mov
sbb
push
push
cmp
je
shl
scas
cmp
push
test
jg
dec
test
pop
std
dec
mov
jne
lds
add
test
ins
scas
mov
mov
popa
daa
in
xrelease
dec
js
push
jne
call
call
sbb
push
das
sbb
movs
push
retf
add
adc
lock
outs
inc
add
push
dec
add
push
fs
mov
and
and
mov
jnp
callw
mov
add
add
sbb
or
add
sbb
add
sbb
gs
mov
mov
mov
push
add
das
cmp
ss
lock
add
sar
ficomp
mov
fsub
sti
fisub
add
mov
push
dec
cmp
cli
shr
les
sbb
xor
mov
mov
ja
lahf
addr16
add
jle
push
into
cmp
mov
cmp
sbb
xor
mov
repnz
out
sar
or
add
cli
cmp
or
cmp
add
xor
sahf
xchg
adc
(bad)
sbb
inc
dec
and
xor
or
pop
enter
jmp
push
call
sbb
movs
jl
push
or
cmp
rcr
outs
aas
ins
and
pop
mov
mov
or
cmp
xchg
adc
idiv
(bad)
push
xor
cmp
lods
or
push
sub
inc
arpl
cmp
or
add
pop
sbb
push
push
push
xchg
or
mov
addr16
adc
cdq
in
loope
lahf
adc
lahf
stos
inc
push
and
pushf
dec
push
jb
adc
xor
ror
sbb
add
adc
mov
aaa
mov
add
mov
and
sub
or
bound
jg
test
mov
push
and
mov
repz
add
mov
mov
bound
arpl
stc
int
inc
fs
mov
gs
adc
ins
ss
in
inc
xor
push
xor
xor
xor
xor
int
mov
xor
pop
cmp
cmp
dec
mov
add
lahf
lea
lock
mov
push
jb
push
lds
pusha
add
mov
add
mov
inc
mov
and
mov
aaa
pop
mov
cmp
or
or
pop
add
icebp
movs
mov
loop
mov
sub
ror
or
lea
xor
push
ret
mov
movs
mov
aas
inc
pop
gs
adc
jg
fmul
or
add
sahf
inc
mul
pop
in
pop
jo
pop
dec
in
call
popf
pop
sub
push
mov
inc
and
sti
callw
and
jmp
push
add
jl
pop
mov
mov
mov
sub
mov
adc
push
cwde
shl
je
jp
mov
cmps
mov
mov
adc
cmp
lds
leave
xor
stc
aaa
or
loope
rcl
add
mov
xchg
mov
jp
cmps
mov
test
mov
cmps
add
pop
rcl
stos
or
mov
jmp
std
or
cmp
ret
mov
out
inc
inc
mov
cmp
call
lahf
out
pop
enter
adc
push
inc
push
sub
leave
push
test
xchg
loop
leave
push
add
add
or
pop
adc
mov
push
pushf
out
cmc
jo
push
clc
sub
mov
xchg
lods
pop
or
sub
je
retf
cmc
pop
inc
mov
mov
inc
push
add
inc
adc
je
and
adc
add
nop
sub
and
lock
add
dec
or
icebp
rcl
jge
mov
push
inc
cmp
out
jns
fisttp
adc
je
and
jbe
je
dec
cmps
daa
xchg
pop
ret
push
mov
pop
fwait
(bad)
cmp
es
or
dec
fwait
jle
jb
add
mov
in
or
ja
mov
jg
lea
xlat
dec
adc
add
fmul
fisubr
sub
dec
cli
mov
mov
jb
retf
or
cmps
arpl
adc
sbb
jmp
pop
adc
mov
push
call
mov
(bad)
push
push
pop
(bad)
enter
inc
add
and
sbb
mov
adc
mov
inc
mov
jb
sti
cmc
(bad)
and
jmp
das
sbb
ins
push
or
cmp
ds
push
cmp
cwde
pop
adc
adc
and
sub
into
push
push
xchg
stos
mov
adc
add
(bad)
jg
enter
jg
push
lock
xor
cmp
cmps
stc
call
mov
and
repz
push
mov
sub
cmp
and
pop
cmp
adc
push
pushf
fdiv
inc
rol
inc
cmps
xchg
retf
seta
add
push
mov
inc
add
sahf
cmps
inc
sahf
dec
add
call
dec
inc
jge
inc
add
add
add
pop
mov
scas
cmp
mov
mov
loop
fcomp
dec
sbb
outs
js
mov
push
push
js
(bad)
xor
lds
cs
or
mov
outs
inc
jge
mov
sbb
lea
inc
rcl
int
mov
xchg
sbb
ss
pop
sbb
cmc
test
and
add
jmp
ficomp
pop
pusha
or
cmp
emms
sbb
pop
sbb
mov
sub
ret
mov
dec
add
sbb
rol
add
dec
push
add
or
sub
xor
xchg
xor
xchg
push
push
mov
ror
sub
pop
adc
clc
bound
test
imul
loope
jg
imul
shl
cs
cmp
jne
outs
mov
dec
mov
adc
sbb
and
and
xchg
adc
sbb
in
loopne
sbb
sbb
bound
mov
nop
or
ret
cmp
shl
push
inc
popa
or
ret
in
add
pop
retf
push
push
scas
mov
mov
inc
dec
pop
or
or
outs
mov
xor
cli
adc
bnd
lea
lea
push
cli
cmp
mov
int3
push
std
fdivr
push
out
ret
sbb
mov
pop
xor
mov
call
nop
jecxz
sbb
enter
xlat
xor
and
(bad)
call
(bad)
aam
icebp
push
scas
inc
push
add
push
outs
sub
jno
add
push
sub
in
je
clc
push
mov
xor
(bad)
inc
rcl
add
jmp
retf
leave
xor
pop
dec
cmps
pusha
mov
(bad)
push
mov
pusha
or
ins
pop
xor
push
into
inc
test
sbb
int
dec
ficomp
push
mov
xor
mov
(bad)
jl
hlt
in
jnp
sub
mov
fs
xor
bound
frstor
or
cmp
std
push
data16
lea
mov
mov
mov
and
sbb
mov
in
add
push
adc
out
repnz
adc
push
mov
or
les
jnp
mov
cmp
inc
je
rol
into
cmp
and
add
(bad)
jmp
sbb
cmp
or
sub
mov
xchg
push
cmp
jbe
mov
push
ins
xchg
push
cs
dec
inc
mov
mov
or
adc
push
sbb
mov
sub
push
clc
pop
sbb
loopne
lock
int
jge
mov
or
test
or
mov
lahf
(bad)
loope
(bad)
dec
and
inc
cvttsd2si
leave
ret
and
and
fld
fnstenv
jmp
ins
add
fadd
cmp
jmp
fldenv
icebp
jnp
mov
mov
adc
ins
xor
sbb
das
fdivr
jl
test
mov
pushf
sbb
fisubr
jle
mov
jl
cwde
inc
cs
mov
mov
(bad)
fwait
sub
or
in
sub
icebp
loope
sub
dec
sbb
popf
add
adc
sbb
in
in
sub
movs
call
pop
pop
ins
xor
push
sub
add
loope
or
lea
push
push
lock
hlt
cld
mov
or
mov
mov
sar
jmp
jne
cmp
mov
jmp
loopne
idiv
test
pop
jmp
mov
push
out
ds
int
pop
jmp
and
adc
repz
xchg
inc
imul
pop
popa
data16
mov
shl
jmp
out
sbb
push
sub
lds
add
add
pop
cmp
pusha
into
inc
sbb
xchg
mov
sub
jne
dec
(bad)
push
cmps
jno
ja
scas
call
dec
push
push
or
push
inc
cmp
lock
loopne
xor
ss
enter
or
cmp
inc
psllw
add
mov
jg
mov
pop
mov
dec
rcr
cmp
jle
or
out
mov
jmp
cmp
outs
or
fcom
fwait
shr
pop
fsub
pop
je
push
add
push
xor
icebp
mov
inc
ja
mov
int3
movs
xchg
ret
mov
add
add
addr16
xchg
adc
and
push
inc
pop
xor
js
jmp
mov
or
arpl
add
aad
mov
add
jbe
mov
js
push
pusha
inc
or
aad
rol
mov
push
fcmovb
retf
xor
dec
imul
mov
sbb
movs
test
jb
inc
loope
inc
push
sbb
and
fdiv
jle
mov
adc
cmp
outs
and
dec
sbb
not
and
mov
and
jb
arpl
add
and
xchg
call
inc
hlt
test
mov
sub
add
adc
sub
cmp
retf
retf
and
or
jmp
iret
retf
and
pop
repnz
scas
lods
or
add
adc
lea
mov
in
jbe
jge
add
mov
or
mov
jge
outs
mov
adc
adc
adc
call
leave
dec
push
xor
pop
and
mov
dec
loope
icebp
xchg
aaa
ret
ror
lock
mul
rol
fidivr
jmp
push
pop
xchg
sahf
std
inc
fcmovnbe
jmp
div
pop
dec
adc
fild
inc
inc
mul
pop
jb
cmp
or
cmp
cmp
add
or
xor
jp
adc
sub
add
or
(bad)
fsubr
rcr
iret
pop
add
pushf
call
adc
mov
mov
mov
push
push
bound
(bad)
push
push
pop
pop
pop
pop
pop
retf
mov
imul
mov
inc
xchg
and
out
mov
aaa
mov
cmp
ret
pop
ret
jg
retf
inc
adc
mov
fdecstp
inc
adc
push
or
pushfw
or
outs
fistp
sbb
cmp
jb
cmp
fnstcw
sti
mov
std
cmp
add
cmp
jb
aam
push
push
and
push
addr16
mov
sub
mov
push
cli
add
sub
add
or
cmc
jmp
int
sub
adc
push
and
(bad)
or
inc
ins
sub
sub
inc
in
and
xor
cmp
push
pop
jmp
in
push
in
pop
add
mov
hlt
rcl
xor
fstp
and
pushf
pop
sub
je
push
popf
ds
cmp
mov
sub
push
in
adc
mov
idiv
pop
div
je
test
inc
cli
pop
(bad)
je
add
sbb
mov
jb
ret
pusha
test
jbe
std
xchg
sbb
cmc
sub
fsubr
popa
jne
inc
adc
and
and
jo
movs
mov
add
or
push
es
std
mov
jae
or
sub
adc
scas
ins
push
lock
mov
sub
add
push
jle
sahf
mov
clc
mov
mov
mov
lock
out
es
dec
imul
jae
jnp
adc
adc
cmp
xor
mov
repnz
pop
sbb
cmp
mov
pop
mov
mov
push
pop
push
(bad)
pusha
in
scas
ret
add
stc
push
clc
mov
cdq
adc
js
inc
std
jle
sar
cli
out
adc
fisubr
in
es
mov
cs
pushf
or
imul
mov
(bad)
mov
adc
pop
xchg
add
adc
popa
cmp
in
xchg
adc
pop
and
jecxz
data16
push
cld
cmp
jmp
jbe
test
fmul
shl
dec
addr16
push
loope
clc
push
clc
enter
imul
cmp
dec
lock
push
and
xchg
xor
and
mul
sbb
jnp
mov
sbb
(bad)
push
mov
movs
test
pop
pop
bound
gs
mov
jne
enter
or
lea
loope
push
or
and
adc
add
pop
xor
jbe
xchg
inc
lock
mov
lahf
das
push
(bad)
(bad)
push
std
xor
mov
aaa
hlt
fldl2e
jl
inc
clc
test
jb
lods
in
(bad)
retf
call
jb
lods
loopne
aam
pop
cs
mov
xchg
retf
in
rcl
(bad)
fmul
jb
push
sub
mov
retf
mov
mov
pop
sub
xchg
retf
in
movs
sbb
and
jb
push
sub
xor
cs
retf
cwde
inc
mov
mov
pop
pop
cs
dec
mov
or
push
test
mov
ins
mov
mov
pushf
mov
xchg
jb
lods
pusha
mov
jb
jl
mov
int3
cs
dec
in
aam
fmul
push
mov
inc
push
cs
retf
hlt
xor
cmp
sub
movs
xor
and
sub
movs
push
mov
adc
cs
retf
cmp
inc
or
retf
in
test
pop
sub
xchg
or
ins
add
jns
je
fdivr
cs
xchg
test
fmul
test
mov
lods
loopne
aam
dec
in
mov
pop
mov
(bad)
fsub
scas
in
ds
enter
fsub
push
test
mov
cmp
(bad)
mov
or
mov
jb
mov
test
cs
dec
and
sub
xor
movs
push
mov
test
dec
nop
push
test
mov
jb
pop
sub
xchg
dec
in
test
movs
push
mov
push
movs
pop
lods
pusha
mov
in
test
mov
int3
push
aam
xchg
dec
in
fmul
cmp
push
mov
xor
retf
movs
cmp
sub
cmps
mov
adc
and
sub
cmps
jae
sbb
xchg
xor
mov
sbb
xchg
scas
or
dec
adc
in
test
xlat
sub
xchg
dec
ins
add
jl
jns
pop
clc
test
xlat
mov
dec
lock
in
call
movs
fsubr
mov
mov
in
int3
int3
rcl
les
pop
cs
in
cs
dec
movs
in
shl
cld
repnz
pop
mov
test
dec
in
mov
test
sbb
jb
pop
cs
sub
cs
dec
movs
xor
cmp
inc
in
test
push
pop
sub
fs
jmp
imul
xchg
movs
push
jl
test
xchg
out
repnz
fs
mov
pushf
push
lods
pusha
movs
pop
cs
retf
push
les
jb
pop
pop
int3
push
fcomp
dec
dec
aam
in
retf
in
test
mov
cmp
xor
movs
push
jns
sub
test
xchg
dec
sbb
sub
retf
in
test
mov
or
add
(bad)
retf
adc
test
cli
mov
mov
test
test
fild
pop
test
aas
ins
in
enter
ficom
test
rcr
in
cs
lods
shr
inc
cs
dec
and
in
pushf
sbb
jbe
pop
xor
repnz
cs
mov
xor
jb
hlt
cld
pop
in
cs
fsubr
in
cs
loopne
cs
enter
cs
push
in
cs
cs
mov
inc
cs
mov
xchg
adc
das
jbe
adc
sub
mov
and
aam
inc
cs
pop
sub
mov
inc
pop
sbb
mov
mov
and
push
sahf
xchg
cmp
mov
pushf
scas
test
pop
stos
out
or
stc
jg
jb
pop
mov
pop
jb
pop
mov
and
jb
movs
mov
pop
jb
jo
pop
jb
pop
cwde
push
and
and
jb
mov
nop
or
nop
or
mov
xor
or
xchg
or
xlat
sbb
ror
iret
xlat
push
stc
lods
inc
shr
cwde
iret
sub
sar
ins
ja
xor
iret
adc
pop
ror
lods
xor
sub
pop
pusha
add
in
(bad)
push
data16
inc
add
push
adc
and
inc
push
pusha
jns
out
jo
nop
mov
out
shl
lock
jle
out
sahf
loope
loope
loope
jns
out
loope
loope
loope
jns
out
loope
loope
sahf
out
sahf
loop
loop
loop
jns
out
loop
loop
loop
jns
out
loop
loop
sahf
out
sahf
jecxz
jecxz
jecxz
jns
out
jecxz
jecxz
jecxz
ja
out
jecxz
ja
mul
jns
out
in
in
in
jns
out
in
in
cmp
jns
in
in
jle
in
cmp
repz
in
in
repz
in
in
in
repz
repz
in
push
and
push
cmp
pusha
jo
js
es
call
mov
aad
js
add
add
push
(bad)
(bad)
(bad)
push
outs
and
jnp
outs
popa
ins
gs
imul
ins
ins
pop
pop
and
in
ins
ins
bound
aaa
xor
cwde
adc
xchg
cmp
add
jno
gs
cs
sar
bound
arpl
jne
cmp
aas
arpl
ins
outs
outs
arpl
jno
loopne
pop
push
aas
(bad)
sub
bound
and
scas
popa
je
jge
mov
ds
inc
and
out
ja
pop
xor
xor
outs
jo
dec
and
pop
sar
jmp
outs
jae
data16
inc
outs
push
xchg
inc
je
je
addr16
add
push
jbe
fs
and
xor
cmp
cs
inc
pop
push
daa
dec
aas
sub
xor
inc
inc
push
jne
jle
sub
cmp
xor
int
call
inc
pop
push
inc
pop
daa
imul
xor
cs
xor
push
pop
jnp
cmp
(bad)
(bad)
call
xor
ins
cmp
je
and
inc
sub
ss
push
push
ss
outs
js
jno
inc
js
jo
push
(bad)
and
jge
xor
xor
fistp
test
cs
xchg
rol
inc
jne
ins
fs
push
xor
data16
cmp
sub
bound
xor
cmp
imul
xor
push
cli
mov
mov
jl
lock
or
ins
jne
les
mov
mov
call
ins
(bad)
fiadd
adc
mov
jae
push
dec
lock
sbb
mov
fiadd
add
add
add
add
add
add
add
daa
daa
iret
repz
daa
daa
adc
adc
jb
pop
adc
push
pop
and
sbb
sbb
pop
and
add
and
add
in
in
add
pop
pushf
cmp
or
or
pushf
or
or
inc
jb
or
inc
movups
jb
adc
fistp
push
ins
test
add
cmp
pop
push
add
adc
adc
adc
jb
repnz
sbb
leave
inc
jb
sbb
les
mov
add
push
add
repz
nop
jg
jns
repnz
(bad)
push
in
sahf
(bad)
(bad)
(bad)
inc
jns
and
xor
rcr
jno
add
xchg
xchg
xchg
outs
pop
add
push
xchg
xchg
xchg
xchg
pop
or
or
xchg
xchg
or
ins
iret
mov
push
sbb
out
and
inc
popa
and
push
push
push
add
add
push
or
sbb
sahf
out
and
inc
pusha
inc
lahf
(bad)
jg
cs
mov
adc
sahf
out
in
and
sub
cmp
out
inc
push
arpl
push
push
sahf
out
ret
jecxz
in
mov
add
cs
add
add
pop
add
adc
ret
pop
or
or
pop
daa
inc
or
xchg
add
sub
or
push
cld
fnstsw
imul
mov
fist
popf
push
mov
push
sbb
ja
inc
aaa
push
add
push
sti
mov
outs
and
add
in
xor
mov
add
jp
rcr
and
add
adc
add
ss
xor
ss
cmp
add
push
xor
mov
ins
xchg
add
push
adc
mov
dec
add
sub
ds
or
pop
or
push
xchg
out
or
push
or
retfw
in
fidivr
or
dec
or
in
loope
scas
add
jb
dec
or
fwait
mov
sbb
add
pop
jle
aaa
or
or
push
add
or
adc
or
adc
dec
cmp
push
add
mov
ins
ss
pop
or
or
rep
fisub
or
or
call
or
or
popf
out
or
push
or
jle
jbe
pop
pop
push
add
sbb
sbb
add
test
and
call
aam
test
or
xor
out
(bad)
or
mov
push
push
mov
mov
aaa
push
or
or
sub
cmp
xchg
dec
mov
inc
std
push
sub
or
or
or
sbb
inc
inc
jmp
je
and
and
mov
inc
or
outs
push
jb
sti
pop
(bad)
push
dec
add
ins
outs
fs
push
push
outs
cmps
shr
je
gs
outs
jb
mov
ret
shr
(bad)
xchg
sub
or
or
jge
push
imul
je
xor
or
js
adc
inc
sbb
push
jb
maxps
outs
jmp
or
outs
nop
mov
add
mov
sub
or
(bad)
and
and
jne
imul
xor
mul
sub
sub
outs
outs
pop
popa
jbe
out
fidivr
push
pusha
sub
rol
in
jne
bound
or
sub
jne
(bad)
gs
jg
ins
or
arpl
add
adc
sbb
ja
pop
popa
pushf
add
add
add
add
push
sub
or
sbb
add
sbb
adc
je
ins
add
cld
out
pop
or
pop
ss
shr
ds
pop
or
add
outs
or
fldcw
or
pop
push
add
xor
add
jo
adc
pusha
test
inc
jo
popa
jns
add
sub
gs
jae
aam
out
xor
jb
ins
in
outs
jo
or
outs
or
dec
mov
or
cmovne
push
clc
popa
add
popa
ins
xchg
pop
ins
jb
cmp
adc
pop
jmp
push
mov
mov
addr16
add
jne
fcom
ja
(bad)
and
pop
push
out
je
or
xor
pushw
push
prefetch
retf
outs
mov
std
int
cmp
pop
and
out
outs
inc
imul
out
xchg
int3
les
add
sub
out
sti
movs
je
scas
add
push
push
push
add
sar
pop
or
pop
or
dec
scas
dec
cmps
push
cmps
add
enter
shl
add
dec
jno
scas
out
mov
sub
and
push
mov
push
mov
arpl
and
xchg
and
(bad)
jae
popa
add
and
data16
cs
cmp
jbe
lods
add
add
fadd
in
add
fiadd
movs
sbb
imul
stos
ins
mov
popa
jb
inc
and
faddp
int
mov
push
cmps
cmp
pop
xor
mov
(bad)
jge
mov
add
mov
out
push
xor
sub
pop
scas
out
jo
outs
add
es
push
pop
fwait
push
adc
shl
fs
fist
and
and
inc
or
xor
adc
gs
sar
fdiv
adc
mov
or
mov
popf
pop
cwde
mov
test
jecxz
xor
add
pushf
xchg
pop
cmp
or
mov
pop
repnz
add
sub
inc
push
push
sub
nop
loopne
sgdtd
mov
add
les
inc
inc
push
and
add
inc
outs
cwde
cmps
imul
cmc
jl
adc
lahf
or
mov
ins
jle
xor
or
out
add
mov
mov
add
cmp
div
jle
cli
add
add
add
push
push
data16
mov
pop
jbe
add
or
or
dec
add
or
ret
cmp
add
adc
fimul
outs
fs
or
out
arpl
jge
rol
xchg
sub
jg
(bad)
jg
and
push
inc
push
dec
inc
push
pop
dec
push
inc
dec
pop
push
pop
or
push
inc
inc
dec
dec
mov
dec
inc
or
adc
addr16
hlt
sbb
shr
daa
mov
or
inc
xor
push
add
adc
jnp
cmp
leave
sub
mov
fdiv
loopne
ss
add
dec
shr
add
sbb
cmp
(bad)
push
sub
pop
call
es
pop
mov
pmulhuw
sbb
push
sahf
add
add
and
test
das
add
mov
mov
jne
push
pop
push
adc
pusha
and
jecxz
and
cmp
jb
std
jno
lea
xor
xor
fnsave
inc
inc
push
push
pusha
stos
dec
xor
cmp
inc
or
je
ins
mov
sbb
jl
or
pop
ret
imul
mov
and
and
sub
add
add
(bad)
jmp
or
or
jbe
cmp
es
sub
jge
and
add
inc
add
add
mov
ss
push
fist
adc
jmp
dec
imul
mov
sbb
jl
addr16
push
push
pop
push
or
or
adc
sub
aam
or
or
das
inc
sar
push
adc
or
or
and
or
rsm
or
pop
outs
push
add
clts
movaps
call
ret
fiadd
or
or
or
xlat
out
add
adc
dec
add
sub
(bad)
xchg
or
out
pop
or
or
stc
ds
adc
(bad)
adc
or
or
daa
jp
adc
mov
sbb
out
daa
or
pop
and
or
add
ds
fwait
call
adc
int3
add
push
or
je
adc
adc
pop
push
pushf
push
jmp
fbld
pop
or
out
loopne
jmp
jo
imul
or
adc
or
int3
int3
jge
bndldx
dec
(bad)
push
es
dec
sub
mov
mov
shr
hlt
rol
add
retf
fs
and
mov
shl
iret
or
jb
imul
(bad)
das
inc
or
popa
addr16
bound
sub
ins
outs
jbe
scas
adc
inc
inc
imul
ja
adc
adc
mov
mov
push
ins
popa
cmp
inc
pop
ret
rcr
cs
bound
aam
sahf
jae
ja
or
sub
adc
dec
dec
inc
(bad)
or
out
push
sbb
dec
inc
sub
imul
jo
enter
adc
jle
addr16
inc
mov
pushf
daa
(bad)
pop
add
rcl
je
sbb
ss
cmc
adc
movs
cmps
popa
add
test
icebp
jne
in
or
sub
push
dec
pop
xor
fs
inc
je
(bad)
sub
dec
add
sbb
or
and
adc
repz
mov
mov
ins
or
add
sub
dec
shr
add
inc
cs
outs
daa
cmp
mov
jle
push
lods
pusha
adc
test
jbe
xchg
mov
pop
or
push
inc
push
push
mov
out
push
icebp
and
add
adc
push
rol
pop
or
js
xlat
push
push
pop
out
add
xchg
je
sub
(bad)
push
xchg
add
add
sub
jbe
mov
xchg
cmp
jmp
push
loopne
addr16
add
pxor
add
cmp
inc
rol
or
mov
in
imul
or
aas
push
gs
fs
add
adc
or
inc
ds
mov
adc
add
push
shl
cmove
pop
xor
xor
sub
inc
mov
scas
and
fiadd
add
add
out
inc
sahf
mov
add
push
test
hlt
push
add
xor
push
push
xor
push
pusha
daa
ds
push
mov
ins
xchg
cdq
cmp
inc
pop
jg
pop
dec
push
or
add
jle
xor
or
push
push
pop
sbb
sbb
pop
push
adc
cmp
cmps
cli
ret
arpl
movs
daa
inc
dec
inc
inc
push
pop
outs
(bad)
pop
sbb
inc
mov
or
stos
pusha
aas
pusha
inc
inc
dec
inc
dec
dec
push
push
dec
out
xchg
dec
dec
push
and
jmp
dec
data16
jne
dec
outs
scas
movs
outs
clc
inc
clc
jmp
and
fs
add
or
and
add
or
pop
pop
lods
test
mul
movs
xor
ss
xchg
idiv
movs
pop
add
outs
push
xor
outs
mov
add
lahf
fldcw
add
add
data16
pop
add
(bad)
imul
or
jae
sub
xor
mov
cmps
loop
ins
cmp
push
sub
add
pop
or
and
call
or
shl
mov
pop
fdiv
mov
jbe
xor
or
fcom
jnp
mov
pop
aas
pop
jno
jnp
add
or
dec
mov
pop
add
push
add
adc
in
inc
rcr
cmp
jg
int3
retf
pop
adc
dec
(bad)
pusha
mov
mov
adc
add
add
sub
movs
loope
sbb
add
ror
inc
scas
dec
into
pop
or
and
cmp
ss
daa
leave
lea
push
cmc
popf
cwde
or
pop
sub
mov
sub
bound
push
dec
add
push
add
sub
sti
push
sahf
pop
add
ds
je
add
add
mov
dec
jb
push
add
cmp
or
inc
and
push
or
shl
dec
inc
or
pop
ds
lods
sub
adc
or
or
or
cmp
lahf
add
push
into
dec
inc
mov
xchg
into
xor
add
add
or
out
pop
jmp
jb
jle
push
add
xor
arpl
xlat
jmp
ret
pop
cmc
push
cs
xchg
push
inc
pop
inc
dec
in
inc
or
mov
sbb
lods
pop
add
add
or
pop
js
adc
push
xchg
pop
lds
pushf
in
push
cld
repnz
push
fwait
cmp
inc
pushf
add
ds
lock
rcl
push
or
cmp
ror
fiadd
add
sub
add
mov
cmp
pop
cmp
push
add
add
pop
jl
add
add
add
popw
ins
fiadd
pop
add
idiv
add
jle
add
(bad)
inc
inc
sub
sub
popf
or
mov
adc
repz
addr16
xor
aad
add
xor
bound
outs
and
imul
mov
sub
daa
or
dec
xor
xor
add
push
or
repz
cs
or
cmp
movlps
adc
push
mov
repz
sbb
add
push
sbb
bndldx
movs
std
pop
not
sbb
cmp
sbb
push
je
sbb
adc
add
add
in
sahf
and
and
and
fidiv
leave
es
sub
mov
movntps
adc
repz
repz
xor
iret
repz
xor
cmp
sbb
cmp
cmp
adc
cmp
repz
push
cmp
mov
inc
add
adc
push
jp
or
inc
sti
aam
mov
orps
ins
gs
and
call
es
dec
inc
dec
push
push
es
mov
dec
or
nop
dec
inc
inc
jnp
push
enter
dec
push
inc
dec
leave
lds
int
and
cmps
add
ret
add
mov
pop
cmps
stos
push
in
xchg
sub
je
sub
dec
fbstp
inc
xchg
jb
scas
sub
arpl
out
jb
gs
and
push
add
add
push
inc
add
outs
jo
mov
mov
sbb
push
mov
inc
ins
or
dec
adc
dec
adc
data16
inc
fdiv
aaa
jb
inc
pop
dec
push
cmps
ret
daa
ss
cmp
add
jle
cmps
inc
sbb
inc
sbb
inc
push
sub
xlat
or
(bad)
dec
push
(bad)
in
push
int
sbb
icebp
adc
mov
jg
movs
mov
dec
popa
js
test
add
addr16
rol
mov
pop
mov
inc
popa
sbb
iret
sbb
inc
sbb
das
and
and
and
scas
xlat
add
pushf
cmc
and
dec
push
dec
dec
into
call
xor
arpl
data16
xor
inc
in
into
stos
daa
push
fcomp
mov
adc
sbb
pop
arpl
sub
dec
pop
into
adc
pusha
mov
sbb
add
push
xor
dec
and
rol
push
add
or
adc
sbb
movs
and
fs
or
mov
jbe
add
nop
fld
add
add
pop
cwde
aaa
and
mov
nop
lods
pop
dec
and
add
xor
cmps
les
cmps
jl
lock
les
adc
mov
fiadd
sub
cs
mov
call
inc
add
pop
cmp
or
or
rol
add
mov
mov
xchg
mov
test
imul
sbb
add
push
shr
ds
test
lods
mov
int3
add
retf
xchg
push
popa
addr16
adc
add
sub
or
push
jle
push
inc
or
jl
dec
cld
mov
jae
jb
bound
xchg
loopne
jne
pop
sbb
sub
jno
daa
xor
xor
mov
movsx
(bad)
aaa
cmp
fld
push
add
push
and
arpl
xor
ins
adc
lods
into
or
call
push
in
js
and
mov
xchg
push
das
pop
cmp
pop
sbb
add
mov
push
mov
add
jno
pop
(bad)
adc
mov
fsub
adc
sbb
test
and
cs
inc
mov
inc
pop
xor
xchg
pop
data16
or
inc
pushf
dec
icebp
cmp
popa
push
sbb
mov
cmps
jle
push
and
add
and
stos
ja
push
movs
mov
or
enter
and
aam
push
es
push
add
cmovbe
add
in
push
pop
and
jecxz
xor
or
xchg
bound
or
scas
aaa
adc
or
daa
iret
repz
jl
or
repz
push
add
faddp
ins
xor
add
dec
inc
push
test
xor
adc
call
adc
add
aaa
or
cmp
inc
sbb
sbb
les
push
or
dec
push
add
cmps
cmps
cmp
shl
push
aad
pop
adc
and
mov
push
xchg
imul
sbb
add
mov
aaa
jmp
fidiv
push
sbb
xchg
pop
sbb
sti
sbb
daa
lock
(bad)
daa
pop
cs
add
push
add
mov
and
add
push
sbb
sub
mov
cmp
push
bound
push
jecxz
adc
fdiv
pop
cmp
jg
rcl
pop
pop
ins
popa
imul
in
push
pop
push
dec
ins
add
dec
dec
and
push
dec
pop
rol
jl
and
and
fidivr
dec
jnp
xor
or
or
xchg
add
add
dec
and
push
push
cmp
or
das
adc
sub
dec
ror
dec
sbb
clc
lods
fnstenv
les
es
cmp
mov
inc
dec
push
scas
and
sub
push
daa
mov
pop
stos
xlat
inc
aam
daa
adc
sahf
dec
cmps
and
or
push
inc
mov
cs
xor
xchg
xor
push
call
push
pop
jo
push
xlat
add
add
das
rcl
dec
rcl
gs
test
dec
pop
inc
mov
or
cmp
push
mov
mov
jmp
cmc
push
loopne
xchg
(bad)
adc
fdivr
add
fidiv
fucomp
xlat
jbe
dec
(bad)
push
xlat
dec
ja
cmps
clc
cmp
push
push
test
imul
pop
or
iret
add
addr16
leave
clts
es
sub
adc
cmps
loopne
adc
test
div
into
or
cmp
dec
ficom
add
mov
pop
sbb
sbb
pop
pushf
adc
cmp
cs
sahf
mov
sti
and
sub
and
ins
out
outs
sbb
sub
inc
xor
lahf
popf
and
xor
mov
add
sbb
outs
pusha
test
dec
adc
jae
sub
ja
lock
dec
sub
imul
data16
stos
sub
(bad)
mov
push
mov
sub
je
cmp
xor
sbb
cwde
mov
pop
bound
and
es
adc
push
pop
movs
or
rol
sbb
xor
fwait
int
or
or
or
sbb
(bad)
adc
or
push
mov
adc
add
adc
sbb
sbb
jp
sbb
sbb
xchg
adc
mov
sub
sbb
dec
popa
jo
mov
and
xchg
and
add
mov
test
jbe
inc
add
cmp
cli
add
push
inc
push
adc
dec
(bad)
push
dec
adc
fdivr
push
mov
push
jl
xchg
jo
and
inc
mov
inc
mov
push
dec
inc
pop
add
sti
mov
and
push
push
aas
push
arpl
arpl
test
push
pop
enter
call
test
mov
dec
inc
adc
add
inc
loopne
shr
mov
int3
call
sub
inc
(bad)
out
xchg
push
cmove
push
jmp
sbb
push
pop
inc
add
pop
(bad)
fs
cld
cmps
fs
pop
dec
dec
inc
add
mov
adc
pop
push
les
xor
push
sbb
or
adc
jmp
xchg
sub
nop
dec
sub
push
test
or
idiv
mov
dec
mov
push
popf
and
sub
sub
dec
adc
ss
push
push
sbb
scas
inc
inc
pop
outs
and
inc
push
pop
cs
adc
sub
inc
xor
popa
das
mov
inc
rol
cmp
(bad)
es
dec
lods
xor
and
push
je
mov
add
stos
dec
out
xlat
sahf
loop
lock
loopne
add
mov
adc
inc
or
xchg
pop
push
cmp
xor
cmp
inc
fistp
cld
ror
dec
inc
icebp
or
scas
jbe
mov
xor
iret
lock
fmul
xor
retf
test
movs
and
mov
xor
sbb
ja
inc
inc
dec
fsubr
add
pop
cmps
add
nop
xor
and
dec
fild
or
or
jl
mov
lock
jnp
add
dec
push
jle
mov
inc
pop
scas
movs
xor
cmp
and
and
cmp
fsub
cmc
(bad)
push
adc
or
enter
inc
(bad)
iret
add
push
clc
dec
xor
jg
pushf
dec
or
loopne
push
inc
or
ja
sar
xor
push
sbb
dec
xchg
inc
xlat
mov
sbb
ss
cmps
and
jl
inc
sti
inc
pop
dec
pop
rcr
in
push
jo
sub
cmp
ja
sbb
nop
stos
gs
cmp
leave
stos
jmp
mov
movs
mov
push
or
cs
push
inc
jo
push
loop
loop
loop
mov
inc
cld
adc
jecxz
pop
mov
dec
inc
dec
mov
inc
test
jmp
test
push
xchg
mov
pop
inc
and
(bad)
nop
aas
dec
xchg
push
inc
ret
add
pop
loop
adc
inc
les
les
cli
adc
push
fcomp
add
push
es
aas
push
inc
pop
fst
cs
das
dec
into
mov
and
mov
push
dec
aaa
inc
push
push
and
std
sar
pop
cmp
jae
js
mov
inc
dec
movs
push
pusha
(bad)
inc
stc
sub
inc
dec
dec
fmul
add
mov
or
push
loopne
inc
sar
push
enter
das
push
call
adc
add
jnp
dec
add
shr
cmp
add
pop
xor
xlat
addr16
sub
and
mov
lods
mov
lods
lds
inc
add
call
jbe
cmp
jecxz
je
dec
test
dec
fwait
(bad)
lods
mov
mov
rcl
test
mov
sub
push
aas
push
inc
es
pop
dec
jb
(bad)
inc
or
xchg
dec
stc
push
loopne
fcom
ins
(bad)
mov
xchg
mov
add
retf
pop
mov
pop
mov
js
ins
mov
or
push
rcl
xchg
dec
adc
push
push
xchg
fwait
and
clc
imul
fpatan
test
inc
pop
mov
or
inc
out
push
push
inc
push
push
stos
cld
sbb
cmp
push
or
xchg
xor
popa
cdq
sub
push
rcr
xor
stos
xor
sbb
repnz
out
ret
shr
cmp
jbe
nop
mov
sbb
sub
jmp
mov
cmp
push
dec
test
mov
inc
mov
xor
rol
push
enter
rcr
dec
xor
ss
loopne
push
or
push
mov
push
dec
xor
aas
xchg
fst
dec
pop
or
add
adc
jg
sbb
and
sbb
xor
loopne
or
jno
stc
imul
jge
das
mov
xor
xor
and
das
das
and
in
movs
jo
pop
or
bound
and
jo
and
and
push
mov
jo
push
(bad)
int
sbb
data16
sbb
or
jae
fcom
mov
jb
arpl
push
gs
aaa
dec
aaa
jae
popa
jb
fs
push
outs
dec
and
dec
push
jp
pop
inc
icebp
pop
popa
mov
ins
call
or
mov
outs
xor
xchg
gs
xchg
popa
js
add
nop
popa
js
jae
push
mov
inc
ret
or
jb
popa
(bad)
sub
sbb
add
lea
push
leave
jo
push
sbb
jne
inc
mov
imul
es
fild
pop
inc
mov
in
les
xchg
stc
mov
mov
cmp
xor
push
sbb
outs
outs
dec
adc
pusha
sub
jns
mov
push
cmp
sbb
out
(bad)
nop
mov
cmp
and
xchg
test
scas
sub
shl
scas
jne
pop
sub
xchg
outs
aad
sbb
push
cld
cmp
and
cmp
mov
pop
cmp
add
inc
sbb
rol
gs
shl
or
jecxz
and
push
add
lods
inc
clc
mov
sub
pop
sbb
push
cmps
xchg
inc
bound
xor
push
outs
push
push
outs
push
jns
outs
ins
push
ss
pop
repz
inc
jae
lea
lds
and
or
imul
psadbw
ret
fsub
outs
outs
fs
cmp
cs
fs
sbb
or
out
or
inc
mov
push
dec
mov
pop
in
add
(bad)
aas
imul
mov
outs
mov
rol
dec
push
int
mov
fs
popa
inc
push
dec
ss
add
dec
inc
cld
jb
inc
sahf
or
or
inc
popa
jae
js
ss
mov
mov
imul
mov
dec
xchg
mov
sub
addr16
xor
jns
test
xor
push
push
cmp
shr
mov
les
cmp
mov
pop
mov
jnp
jne
jae
loopne
push
pop
inc
loope
mov
push
add
or
out
inc
xchg
sbb
popf
jmp
or
hlt
inc
ins
ins
jnp
mov
add
inc
movs
xor
inc
add
movs
sub
dec
add
push
in
jo
cmp
mov
in
lahf
loopne
push
jbe
inc
jb
pop
add
push
out
xor
or
mov
push
mov
or
shr
(bad)
jecxz
xchg
jnp
push
mov
popa
inc
aad
aad
imul
stos
jns
push
aad
push
xchg
add
add
push
jne
test
push
xor
inc
aad
push
shr
mov
fld
fisubr
push
mov
mov
and
add
and
and
test
add
pop
jb
js
or
pop
out
or
sbb
sbb
or
and
dec
sub
adc
or
pop
lods
sbb
adc
stos
ins
enter
mov
mov
arpl
imul
jp
mov
test
fist
or
add
and
dec
int3
adc
dec
add
xor
rol
or
out
xor
adc
dec
ds
inc
add
or
add
dec
add
jg
add
loopne
push
dec
xor
rol
or
add
add
mov
add
or
pop
mov
add
cld
jg
ret
push
mov
popf
xchg
cdq
add
mov
add
sahf
out
add
nop
add
jns
push
add
add
push
add
sti
cdq
add
cmp
mov
adc
push
add
mov
aas
and
jne
jo
sub
in
jmp
ins
or
adc
or
cmp
sbb
pop
adc
pop
pop
push
or
xchg
jmp
imul
sub
dec
pop
cmp
or
pop
pop
pop
xchg
and
or
out
inc
sub
dec
push
add
push
gs
pop
std
push
or
or
sbb
leave
push
xchg
sbb
pop
or
or
add
aad
xor
or
imul
stos
xor
adc
push
cmp
sub
bound
cmps
ins
popf
sbb
sub
dec
repz
add
add
add
test
punpckhwd
add
and
add
dec
or
or
or
xchg
jae
adc
pop
push
cmps
and
push
ins
sbb
adc
leave
sub
and
adc
in
mov
mov
mov
cwde
add
mov
pop
shl
movs
dec
inc
pushf
add
ret
imul
shl
adc
adc
and
push
dec
data16
test
adc
call
push
xor
adc
mov
inc
and
sbb
cdq
fwait
mov
in
cmp
sub
add
jl
(bad)
inc
push
cmp
imul
ss
jns
ds
add
fnstcw
mov
add
ret
add
push
push
jl
or
jecxz
push
adc
adc
mov
push
or
or
cmp
addr16
les
test
xchg
push
syscall
das
push
(bad)
sub
add
sub
adc
jae
pop
movs
xor
sub
push
or
cdq
repz
fadd
imul
test
popa
mov
push
mov
pop
or
push
or
gs
outs
fs
push
cmps
test
repz
into
cwde
and
pop
repnz
fcmovbe
fild
or
adc
mov
add
adc
loope
popf
sub
pop
pop
mov
shl
inc
push
addr16
and
inc
xchg
mov
or
xor
or
leave
in
and
push
gs
jne
cmps
dec
and
add
push
sbb
mov
sbb
adc
adc
fisub
add
dec
or
es
sti
inc
in
hlt
ins
imul
add
mov
cli
adc
or
ins
sbb
movs
push
or
add
repnz
std
add
jmp
sub
nop
or
aad
mov
push
inc
jae
repnz
fcomp
adc
aam
push
cmp
or
and
or
rol
xor
fsubrp
inc
add
sbb
mov
(bad)
adc
dec
pop
jae
push
and
mov
imul
add
add
es
repz
push
dec
test
jmp
call
loopne
push
or
jo
pop
jno
push
and
inc
cmp
aaa
mov
outs
arpl
scas
xchg
pop
or
gs
loop
cmp
cmp
ret
pop
scas
xchg
outs
retf
add
add
pop
mov
dec
jo
pop
push
mov
add
bound
sbb
fs
sub
fisttp
cwde
or
and
mov
mov
cmp
cmp
punpckhwd
jb
push
cmp
ins
lock
mov
xchg
imul
mov
push
nop
add
fisubr
call
cmp
(bad)
add
add
aam
mov
loope
mov
dec
xor
mov
inc
pop
push
sub
push
arpl
sub
jmp
fiadd
sbb
movs
add
ret
shl
repz
test
push
adc
cdq
loope
test
jle
add
or
loop
pop
cld
adc
and
ret
fisub
mov
pop
xchg
mov
add
and
inc
xor
or
clc
jg
dec
mov
test
rcr
pushf
jl
int
je
loope
mov
pop
push
ror
shl
sub
jg
orps
or
sbb
lock
add
stos
mov
dec
add
jle
or
add
or
inc
fnstsw
add
add
cs
data16
inc
leave
pop
xchg
pushf
add
jbe
or
push
add
dec
push
sbb
dec
movs
sbb
dec
or
add
mov
pop
sbb
ja
scas
test
shl
popa
sbb
call
aaa
adc
outs
add
sub
cmp
jns
push
and
jae
addr16
aad
arpl
vaddpd
jae
mov
jmp
mov
and
data16
add
pop
stc
add
sbb
retf
mov
push
adc
xor
pop
add
add
add
jae
or
or
stc
jg
ret
pusha
fdivr
or
xor
popa
or
gs
mov
loope
or
arpl
dec
fmul
out
cmp
inc
mov
add
enter
dec
aaa
or
inc
pop
add
(bad)
ja
and
pop
pusha
and
xor
cmc
or
mov
cmp
mov
hlt
add
(bad)
add
dec
bound
es
add
shl
add
cmp
or
cmps
sub
jg
sbb
cmp
cmps
fadd
repnz
xlat
mov
inc
or
hlt
adc
mov
inc
fisub
movs
add
mov
rcl
call
jae
xor
jle
push
retf
(bad)
add
and
push
push
dec
cdq
mov
or
ds
inc
push
mov
xor
or
ins
je
push
setnp
jns
and
and
sbb
cmp
loope
xchg
or
dec
lock
ja
ja
add
in
or
pop
add
xchg
pusha
sub
mov
jae
sbb
sub
push
pushf
push
add
aas
add
mov
fcom
stos
and
and
cwde
ds
adc
ffree
jge
mov
cmp
stc
es
xchg
sub
add
test
sbb
add
xlat
sbb
(bad)
retf
(bad)
jmp
call
push
ss
shr
push
xor
outs
add
mov
popa
add
aas
sub
out
cs
add
xchg
je
push
add
into
(bad)
push
xor
jge
or
rol
fist
outs
and
and
(bad)
jo
or
push
sub
inc
pop
cli
sahf
adc
gs
inc
mov
xchg
popa
sbb
pop
or
add
outs
sub
and
sub
inc
sbb
cwde
or
add
push
sub
mov
daa
fild
daa
shr
sahf
jno
pop
push
enter
add
mov
adc
cmp
int
pop
adc
cmp
mov
sbb
sbb
add
xchg
nop
jns
fnsave
mov
cmp
mov
push
or
pop
cmps
std
mov
out
adc
cmp
xor
dec
pop
or
jl
test
shl
out
xchg
xor
xchg
add
inc
sub
leave
je
add
loope
adc
and
or
test
or
pop
outs
xor
inc
inc
add
adc
pop
push
dec
repnz
ins
mov
sbb
sub
inc
bound
sub
ja
xor
lock
dec
out
sbb
call
pop
add
pop
or
cld
or
sub
add
cdq
jae
fiadd
dec
outs
or
cmp
pop
or
xchg
cmp
or
pusha
xchg
scas
retf
fsubrp
push
and
outs
or
clts
sub
rcr
je
pop
(bad)
push
pop
fist
add
or
cs
adc
sbb
pop
push
dec
mov
xor
adc
adc
mov
sar
addr16
or
cmp
cwde
or
inc
movs
inc
test
push
or
test
outs
imul
daa
jo
xchg
or
adc
push
or
or
or
pusha
dec
sbb
sbb
int
sbb
scas
arpl
adc
push
(bad)
or
test
add
enter
or
adc
data16
xor
das
add
daa
sbb
mov
add
or
shr
or
or
cmps
mov
cmp
inc
jmp
fld
shl
cmps
sti
add
jno
ss
jl
cmp
or
or
or
fsub
call
adc
or
add
inc
dec
movs
rol
add
and
push
mov
xor
or
or
jmp
pop
cmps
sub
cmps
fisubr
or
outs
or
sbb
mov
or
dec
mov
adc
movhps
mov
pop
prefetcht0
xor
sbb
adc
sbb
ds
int3
pop
sbb
adc
call
push
pushf
add
outs
push
sbb
and
repz
and
and
es
cmp
repz
adc
sub
repz
repz
cs
xor
repz
xor
xor
cmp
cmp
adc
xor
adc
jo
dec
pop
prefetcht0
neg
xor
cwde
xor
cmp
pop
adc
cmps
(bad)
push
cmp
xor
cmp
adc
push
ds
cli
(bad)
rcr
adc
aas
sub
mov
pop
xor
cmps
jl
or
pop
adc
fcom
push
xor
inc
push
inc
push
daa
push
pop
imul
and
leave
mov
mov
sbb
jae
and
pop
sub
or
fsub
addr16
sub
and
adc
adc
dec
imul
jae
add
movs
xor
sub
sub
inc
lock
jmp
or
push
sti
daa
push
inc
or
dec
shl
push
mov
add
xchg
xlat
femms
retf
add
jge
sysret
sub
add
adc
push
inc
inc
lock
inc
inc
inc
dec
dec
inc
inc
(bad)
sub
or
sti
cmovae
ja
sub
adc
push
gs
daa
sbb
pop
pop
or
cmp
adc
add
push
pop
js
lods
add
jmp
sub
add
adc
pop
add
test
cmp
mov
pop
sub
and
inc
or
push
rcl
adc
and
dec
push
xor
cmp
dec
int
push
add
or
pop
dec
add
add
rol
les
or
push
or
adc
(bad)
or
retf
sbb
adc
inc
pop
das
jl
mov
push
cmp
inc
dec
pop
xor
adc
(bad)
or
sub
cmp
lahf
daa
mov
stc
add
call
cmp
pusha
lea
stos
cmp
js
adc
add
mov
outs
sub
cs
ror
(bad)
or
jp
inc
xor
(bad)
mov
add
xor
cmps
jb
xchg
pushf
adc
push
lods
sar
adc
cwde
add
adc
xor
push
sub
dec
cmc
fiadd
dec
and
ja
enter
adc
ins
sub
(bad)
vmwrite
xchg
jp
scas
inc
cmp
cs
(bad)
ret
sbb
lods
ret
sbb
and
mov
pushf
jp
in
loop
inc
inc
clc
push
mov
daa
xchg
mov
sbb
mov
and
in
adc
pop
inc
jne
hlt
icebp
call
or
push
add
enter
xchg
add
jo
add
dec
sbb
add
xchg
leave
xchg
stc
cmc
scas
push
inc
shr
mov
xor
ss
stos
jl
in
movs
add
or
lahf
mov
fst
out
test
or
das
or
add
pop
arpl
push
cli
inc
call
pop
int3
(bad)
dec
pop
sbb
jg
push
and
add
shl
or
or
sar
mov
push
push
or
iret
add
push
push
add
enter
out
aas
(bad)
push
and
add
pusha
ja
pushf
sbb
(bad)
rol
ja
leave
gs
cwde
lds
unpckhps
inc
dec
sbb
xchg
shl
popa
ret
frstor
popa
mov
fld
dec
adc
sbb
and
call
fwait
and
shl
rcr
rcl
adc
nop
jecxz
cmp
inc
and
popa
cmp
xchg
push
icebp
add
adc
pop
in
test
pop
fs
in
adc
lock
push
sbb
ret
add
shl
ss
or
sbb
xchg
adc
add
das
or
push
rol
ret
mov
pop
and
sbb
pop
add
lods
js
or
aam
push
daa
or
or
or
or
(bad)
aam
or
or
or
or
jbe
mov
or
adc
or
push
in
cs
push
jl
icebp
jg
daa
add
and
mov
cmp
loopne
daa
ins
push
pop
push
aaa
xor
or
xor
inc
adc
cmp
or
inc
repz
ror
mov
rcr
test
fild
mov
or
push
or
sti
jg
inc
add
bound
and
ins
and
or
add
sbb
js
add
fwait
imul
nop
adc
dec
cmp
movs
ret
xlat
mov
pop
fs
ror
cmp
adc
sbb
out
push
in
fmul
je
adc
shl
inc
cmps
and
movs
pop
adc
jecxz
mov
outs
jb
or
jmp
xchg
inc
xlat
or
sbb
push
cmp
(bad)
(bad)
pop
fsubr
dec
bound
sbb
stos
cmp
sub
add
adc
aad
cdq
push
mov
xchg
push
adc
push
inc
sub
cmp
mov
mov
lds
xchg
std
mov
fld
adc
js
mov
sub
and
xchg
and
rcr
or
ins
or
out
loope
jae
push
xor
xor
pop
rol
cmp
clc
xchg
pop
xchg
adc
mov
sub
add
add
mov
into
add
imul
jmp
dec
into
push
add
add
sbb
ds
aas
xchg
push
rol
(bad)
(bad)
adc
jp
out
add
add
and
or
push
cmps
mov
mov
es
jae
pop
add
jmp
inc
pop
rol
jge
xchg
in
in
sbb
pop
cs
push
push
bound
bound
bound
dec
dec
pop
shr
or
jo
pop
jp
push
push
add
xor
punpckhdq
cmp
cmp
setbe
(bad)
mov
mov
fwait
lock
mov
and
mov
es
cs
pusha
cmps
jle
push
push
sub
and
mov
push
das
xor
pop
adc
add
test
mov
or
loopne
push
add
mov
add
ss
dec
adc
xor
cmp
shr
call
ds
aam
add
cwde
arpl
xchg
inc
pop
xchg
syscall
in
mov
fiadd
sbb
add
add
add
movs
inc
sub
outs
in
aam
cs
outs
in
jbe
stc
mov
inc
aas
shr
aad
lahf
inc
mov
push
ins
outs
je
into
adc
and
je
sub
or
adc
jp
push
or
pusha
mov
mov
push
push
retf
add
sbb
sub
push
or
or
push
gs
cmp
pusha
js
mov
rol
mov
add
mov
or
add
mov
pop
xor
cmp
add
jp
adc
or
sbb
in
or
add
pop
jno
add
or
sbb
pop
and
rol
lods
adc
sub
not
ds
(bad)
jo
add
cmc
imul
push
sub
jmp
mov
or
adc
add
sub
adc
imul
add
adc
pop
push
add
mov
push
push
dec
sbb
add
jg
mov
dec
adc
or
shl
pop
or
or
hlt
ret
pop
shl
mov
bound
xchg
aaa
mov
stos
test
jbe
sbb
sbb
in
js
add
pushf
sbb
arpl
inc
pop
fnstenv
dec
and
add
loopne
add
call
sbb
add
jb
int3
push
push
add
and
add
call
dec
xchg
and
cmp
adc
call
xor
inc
pushf
push
adc
add
and
mov
add
(bad)
ret
jb
arpl
adc
cmp
addr16
cmp
sub
jmp
cmp
add
pop
scas
add
and
add
jno
fs
test
sbb
sbb
retf
inc
sbb
add
and
push
addr16
or
push
repz
push
ret
aaa
mov
add
mov
add
add
jns
jns
pop
add
adc
inc
popw
pop
pop
les
xor
adc
dec
sub
test
add
repz
add
add
pop
jge
mov
pop
mov
add
hlt
jb
push
cmp
pushf
add
cmps
push
xor
imul
test
aad
out
ret
and
retf
add
jbe
test
sbb
add
jmp
mov
push
push
or
js
add
adc
add
shr
and
dec
mov
shl
enter
sbb
cld
push
adc
sub
pushf
dec
adc
dec
add
pop
mov
adc
mov
and
nop
mov
add
and
(bad)
or
dec
stos
test
hlt
adc
jae
or
push
mov
je
lds
add
dec
fwait
mov
or
dec
or
inc
add
cdq
std
int3
out
das
cmp
sub
add
push
ficom
cs
call
adc
int3
sbb
ds
or
mov
or
jmp
cmovle
imul
pop
cmp
sbb
jns
or
jg
dec
or
xor
cmps
push
and
push
adc
pushf
loope
mov
sar
mov
push
aas
mov
sbb
bound
sbb
inc
add
cmp
xor
pop
lods
pushf
sti
pop
and
movs
add
dec
mov
das
push
or
adc
sub
fnstsw
push
xchg
jno
push
mov
push
xchg
js
sub
xchg
add
adc
sub
mov
sub
loopne
or
and
push
add
add
retf
mov
dec
xlat
adc
inc
sub
push
sbb
dec
icebp
test
aaa
inc
or
mov
gs
adc
push
pop
pop
adc
lea
jle
mov
inc
mov
push
add
mul
push
enter
retf
sub
setge
or
inc
push
pop
pop
cmp
retf
dec
xor
push
push
or
and
add
hlt
dec
mov
add
dec
push
stc
jg
adc
mov
add
test
outs
cmp
push
out
inc
mov
sub
mov
adc
jge
push
mov
sbb
xchg
sub
sbb
jns
add
push
jnp
jg
scas
fiadd
lods
add
js
and
pushf
test
jecxz
adc
add
add
add
pop
cmc
and
add
add
add
popa
push
push
fsubr
pop
add
push
or
cs
in
add
fild
adc
adc
mov
xchg
xor
sub
cmc
jno
adc
cmp
ror
dec
mov
loopne
fs
dec
cmp
cdq
mov
pop
xor
xor
adc
push
out
add
mov
push
jno
test
sub
xchg
or
push
xchg
movs
adc
add
add
call
xchg
call
lock
into
jp
mov
push
shl
ds
or
ror
add
or
cmp
(bad)
mov
or
or
push
or
or
or
inc
add
cmp
push
push
ds
inc
xor
push
sub
adc
adc
jbe
inc
push
cpuid
adc
and
add
imul
into
push
adc
mov
add
push
push
pop
xor
cmps
fisttp
ret
pop
sbb
push
sbb
sbb
push
pop
and
out
and
and
es
sub
sub
sub
cs
xor
out
xor
xor
ss
cmp
cmp
cmp
ds
inc
dec
rol
mov
jbe
jb
push
inc
sub
es
pushf
cmp
sbb
xor
cmp
dec
and
xor
fsubr
dec
daa
aaa
dec
add
and
outs
rcl
dec
push
pop
mov
dec
(bad)
sbb
dec
sbb
push
dec
add
fadd
pop
push
sbb
sbb
push
addr16
popa
lods
psrlw
data16
dec
jae
xor
imul
jns
adc
jp
cdq
aas
adc
inc
test
pop
addr16
adc
mov
adc
shr
mov
inc
inc
adc
adc
xor
push
rcl
scas
add
and
je
jno
push
and
pusha
push
ins
sub
pop
and
mov
push
xchg
bound
mov
add
sub
adc
sbb
(bad)
adc
inc
pusha
and
add
xchg
add
cmc
add
mov
mov
int
adc
cwde
aam
sub
dec
add
mov
jae
push
mov
or
aad
xchg
push
adc
jb
movs
xlat
sbb
popa
cmovp
jb
adc
xchg
push
cmp
das
pop
push
add
nop
inc
add
dec
pop
inc
mov
mov
or
or
outs
adc
push
add
xor
add
loopne
fcom
adc
jle
push
cmp
xchg
cmps
psubq
add
stos
or
adc
stos
mov
(bad)
cld
mov
dec
add
add
cmc
dec
retf
test
sar
or
(bad)
xor
adc
dec
xor
pushw
or
jp
ret
or
add
mov
add
push
or
sahf
push
xor
enter
mov
fimul
add
and
pop
pusha
daa
and
add
add
push
add
ret
or
fcompp
add
sbb
adc
push
add
or
data16
jl
adc
or
inc
or
pop
add
daa
add
push
ror
neg
xor
adc
xor
(bad)
adc
mov
adc
adc
unpcklps
dec
ror
adc
loopne
into
mov
adc
push
adc
pop
jmp
adc
pop
adc
adc
dec
adc
push
rcl
jmp
ror
mov
or
sbb
add
push
shl
mov
and
pop
or
arpl
shl
or
iret
shl
push
mov
add
sub
fs
cmps
into
in
mov
push
sub
cmp
sub
jmp
idiv
adc
sub
das
and
xadd
or
adc
or
es
popa
cmps
and
fcomi
xchg
stos
xchg
lock
mov
mov
pop
and
push
add
add
sub
inc
pop
adc
mov
lock
sbb
dec
les
addr16
dec
bound
dec
dec
loope
inc
add
cmp
and
mov
inc
xchg
fiadd
imul
or
mov
jl
(bad)
jns
or
jns
sbb
adc
jp
xor
cmp
clc
ud2
or
adc
jno
or
adc
loopne
add
adc
pop
fs
push
adc
adc
xor
(bad)
or
adc
xchg
aaa
call
mov
test
ins
xor
cs
setp
ds
jo
or
or
dec
pop
push
fs
imul
or
sbb
push
sbb
mov
sbb
str
or
fistp
add
push
pop
add
call
push
inc
push
and
push
pusha
not
and
inc
push
mov
je
inc
mov
jmp
and
pushf
dec
es
adc
popa
es
adc
and
and
xor
sahf
daa
xchg
cld
cmp
cwde
dec
call
shl
out
add
dec
imul
inc
cmp
inc
cdq
call
sbb
sub
jnp
sub
and
adc
imul
mov
popf
jns
les
aad
or
push
inc
inc
mov
sub
xchg
ins
adc
mov
sbb
push
jo
int
aad
add
dec
sbb
mov
pushf
jno
adc
add
add
popf
call
jne
dec
addr16
or
or
or
add
and
and
or
push
add
lods
adc
cld
dec
movs
cs
push
inc
cmps
scas
cmps
sub
inc
dec
push
fimul
cmps
lods
mov
cs
pusha
orps
jb
fldenv
push
sub
hlt
loope
dec
sub
jo
and
jge
mov
sub
xor
or
jae
and
or
xor
fcom
push
pop
mov
dec
popa
dec
inc
and
scas
(bad)
in
aad
push
or
cmp
push
test
add
jle
adc
push
xchg
jae
pop
mov
xor
push
loopne
mov
aaa
mov
push
jns
dec
or
jne
aaa
loope
imul
and
je
pop
sub
nop
add
or
xor
or
sahf
add
sbb
add
dec
pushf
xchg
mov
sahf
or
xchg
jns
lea
sub
mov
push
or
xchg
or
or
xor
xchg
icebp
cli
mov
xor
cmps
fmul
test
dec
shl
add
cmp
xor
pusha
xor
or
or
xor
or
cmp
inc
js
mov
dec
popf
push
(bad)
mov
pop
lock
add
sbb
pop
(bad)
(bad)
imul
or
dec
call
cmp
xchg
adc
dec
aaa
into
add
or
int
adc
les
test
dec
mov
arpl
mov
movs
mov
pop
xor
dec
data16
cmp
loope
mov
lea
inc
leave
push
mov
leave
cs
add
and
test
and
mul
jb
sub
int3
fmul
call
push
loope
xchg
jne
lock
pop
add
test
push
inc
jnp
or
and
fimul
cld
pop
and
dec
or
fimul
inc
add
stos
mov
add
and
pop
mov
xor
int3
adc
pop
push
xor
daa
mov
jno
push
fisubr
sbb
or
cmps
inc
pop
or
or
test
into
in
in
or
inc
push
push
xor
jno
or
adc
mov
mov
push
sbb
pop
sub
push
pop
sub
pop
test
inc
dec
sub
ss
pop
push
daa
addr16
pop
bound
adc
inc
fsqrt
push
test
clc
cmp
shr
mov
cmp
xor
or
test
xor
add
pop
inc
loopne
pop
add
icebp
mov
or
xlat
repnz
and
pusha
leave
ins
addr16
imul
mov
ror
imul
cmp
sbb
push
call
lock
ja
jo
aaa
pop
sub
es
outs
jns
call
dec
fnsave
jae
adc
xor
xor
lea
cmps
cs
sub
push
cmps
adc
jg
jb
lea
stos
sbb
add
or
mov
test
dec
repnz
and
ror
movs
aad
add
fidivr
push
push
xchg
rol
pop
dec
in
es
adc
or
ins
push
or
scas
push
dec
jnp
lock
ins
cmp
adc
shl
adc
adc
loopne
mov
jmp
int
adc
add
add
add
add
sub
bound
enter
loopne
pop
rcr
dec
or
ins
pop
mov
sub
or
dec
add
adc
pop
mov
loopne
popa
pop
je
add
jecxz
mov
or
jo
xor
adc
add
xor
xchg
xor
bound
xor
adc
pop
mov
sbb
mov
es
or
inc
push
js
push
fimul
mov
cmp
jge
and
pop
icebp
push
arpl
and
mov
ja
add
dec
or
add
xor
or
mov
pop
xor
push
dec
fnsave
es
fst
cmp
shr
outs
retf
add
add
dec
stos
sbb
je
jo
inc
(bad)
mov
adc
or
sbb
cs
dec
retf
add
pop
adc
and
xor
mov
and
xor
xor
xor
clc
jg
div
aaa
cmp
xor
inc
inc
inc
inc
inc
inc
pop
sub
fnstsw
or
xchg
in
mov
or
xchg
mov
inc
repnz
pop
js
sub
or
or
cmp
pop
jnp
(bad)
or
xchg
add
sub
dec
add
sbb
loopne
or
and
into
enter
imul
enter
or
pop
into
add
push
or
jne
adc
push
cwde
xchg
sahf
jns
push
push
mov
or
dec
sti
out
xchg
add
dec
mov
jae
add
add
cld
ins
push
dec
or
jg
add
ds
mov
sub
add
sub
push
add
sbb
sbb
adc
sahf
or
add
cld
pop
or
and
iret
or
or
ss
add
or
or
cmp
jns
sbb
sub
add
mov
dec
pop
mul
in
dec
es
int3
adc
mov
mov
or
inc
outs
or
rol
add
test
xchg
push
add
add
or
sub
add
enter
or
push
mov
add
xor
or
pop
add
hlt
add
ds
or
addr16
sub
dec
push
push
test
cli
mov
push
push
adc
es
inc
pop
jns
dec
sub
mov
push
add
pusha
adc
stos
push
add
mov
test
fsubp
or
add
sub
dec
push
and
or
add
inc
adc
add
xchg
aas
push
adc
ss
add
iret
repz
add
add
add
retf
add
add
int
stc
cmp
push
add
push
push
pop
scas
xor
push
pop
data16
jmp
and
add
adc
or
jmp
les
jmp
ror
cld
sub
or
popf
add
pop
dec
cmp
sub
add
ret
popa
out
push
cwde
loopne
in
sub
cbw
hlt
sub
out
push
add
add
inc
add
add
push
cmp
push
dec
xchg
sbb
retf
jmp
push
adc
adc
add
mov
cmp
jle
xor
jo
sub
lods
inc
push
out
push
or
pop
or
or
cmp
xor
push
or
pop
or
pop
and
or
inc
sti
sysret
bndstx
push
pop
mov
ds
sbb
xor
scas
adc
adc
adc
push
jg
out
adc
adc
adc
adc
adc
add
jns
jns
adc
adc
sar
out
push
add
adc
or
pop
pop
repz
cmps
stc
add
adc
or
sbb
sbb
outs
out
dec
sbb
sbb
sbb
sbb
push
add
sbb
test
adc
movs
or
pop
xor
adc
(bad)
adc
cmp
inc
ret
div
add
adc
adc
adc
adc
push
xor
cld
call
repnz
jmp
sar
add
adc
pop
adc
add
daa
pop
xor
sub
and
(bad)
and
and
and
and
and
push
daa
jmp
adc
mov
out
ins
push
and
cmp
and
out
imul
jg
dec
paddw
mov
push
dec
sub
adc
es
int
push
daa
add
daa
daa
sub
sub
sub
xchg
daa
sub
push
ins
sahf
add
mov
int
call
ds
and
sahf
add
or
(bad)
inc
jmp
or
and
and
push
sbb
and
xchg
add
loopne
sub
es
mov
jbe
sbb
into
add
sbb
sbb
jbe
mov
into
leave
daa
or
and
mov
leave
jnp
fistp
add
or
out
cmp
and
adc
out
popf
ss
or
mov
pop
push
imul
xor
dec
sbb
jp
dec
cmps
dec
mov
pop
sbb
push
sbb
sbb
mov
sbb
push
daa
add
out
(bad)
jecxz
push
jbe
inc
mov
sub
lock
adc
add
daa
iret
and
iret
add
add
sbb
iret
and
add
add
and
and
repz
xor
or
es
and
and
out
ds
and
and
and
dec
repz
and
add
test
pop
and
dec
pop
or
push
xchg
shl
add
sub
cs
adc
rcl
jg
inc
or
dec
inc
pop
or
xchg
sti
adc
pop
jno
mov
or
push
inc
sub
ret
add
mov
add
mov
add
add
or
cmp
data16
daa
ds
nop
aad
adc
add
xchg
pushf
mov
mov
add
das
pop
enter
xor
js
clc
pop
fs
cs
jne
pop
sbb
dec
or
adc
push
pop
cmp
add
retf
mov
xchg
out
repnz
sub
into
push
add
sbb
pop
jo
xchg
inc
addr16
adc
push
jl
sub
jns
shr
out
imul
xchg
push
pop
(bad)
repz
movs
mov
sbb
lods
(bad)
add
rcr
or
pop
jle
ret
iret
push
pop
push
pop
push
es
(bad)
push
ret
dec
mov
sub
or
dec
pop
xchg
nop
(bad)
sbb
pop
rcr
sbb
je
push
rol
mov
xor
adc
jae
xor
dec
and
sub
outs
fsub
arpl
xor
push
popa
add
sbb
sbb
sub
cwde
add
ror
cmp
sub
push
add
xor
add
out
sahf
out
pop
or
or
or
push
movups
out
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
out
and
and
es
sub
sub
sub
add
add
xchg
das
data16
mov
push
xor
xor
fwait
int
xor
xor
or
or
in
shl
cmp
and
retf
and
(bad)
call
movups
adc
dec
repz
adc
adc
adc
int
imul
adc
loope
clc
adc
inc
loopne
cmp
xor
inc
xor
inc
stc
outs
in
mov
add
push
sbb
daa
sbb
mul
sbb
xchg
or
mov
pop
add
mov
xchg
or
xchg
xor
mov
pop
enter
pop
enter
or
pop
enter
enter
or
or
push
push
push
xchg
pop
enter
enter
adc
enter
adc
pop
enter
enter
adc
adc
dec
push
dec
xchg
pop
enter
enter
sbb
enter
sbb
pop
enter
enter
sbb
sbb
inc
push
inc
xchg
pop
enter
enter
and
enter
and
pop
enter
enter
and
and
jns
jp
pop
enter
enter
sub
enter
sub
pop
enter
enter
sub
sub
jno
jb
pop
enter
enter
xor
enter
xor
pop
enter
enter
xor
xor
imul
xchg
aaa
imul
pop
enter
pop
enter
cmp
pop
enter
enter
cmp
cmp
popa
bound
arpl
xchg
pop
enter
pop
enter
inc
push
xchg
pop
enter
enter
inc
sbb
enter
inc
sbb
sbb
xchg
pop
enter
pop
enter
dec
push
xchg
pop
enter
enter
dec
adc
enter
dec
adc
adc
xchg
pop
enter
pop
enter
push
push
xchg
pop
enter
enter
push
or
enter
push
or
or
xchg
pop
enter
pop
enter
pop
push
xchg
pop
enter
enter
pop
add
enter
pop
add
add
xchg
pop
enter
pop
enter
bound
xchg
pop
enter
enter
cmp
enter
data16
cmp
xchg
pop
enter
pop
enter
push
xchg
pop
enter
enter
ins
xor
enter
outs
xor
xor
xchg
pop
enter
pop
enter
jb
xchg
pop
enter
enter
je
jne
enter
jbe
xchg
pop
enter
enter
js
jns
enter
jp
xchg
pop
enter
enter
jl
jge
enter
jle
xchg
pop
enter
enter
sbb
pop
enter
sbb
pop
enter
enter
test
test
pop
fld
xchg
xchg
enter
mov
mov
pop
aad
(bad)
xchg
pop
enter
enter
mov
lea
pop
ror
xchg
(bad)
ror
xchg
pop
enter
pop
enter
xchg
into
xchg
pop
enter
enter
xchg
enter
xchg
pop
leave
xchg
retf
enter
enter
cwde
les
lds
xchg
fwait
(bad)
enter
pushf
rcr
sahf
ret
enter
enter
mov
xchg
pop
std
mov
xchg
mov
enter
pop
enter
cmps
cli
xchg
pop
enter
enter
test
test
cmc
stos
not
test
lock
pop
enter
scas
repnz
pop
enter
enter
mov
mov
enter
mov
xchg
pop
enter
enter
mov
mov
enter
mov
xchg
pop
enter
enter
mov
xchg
pop
in
out
pop
enter
enter
mov
xchg
pop
loope
loop
pop
enter
enter
rcr
ret
pop
enter
enter
les
pop
cdq
(bad)
call
enter
enter
enter
retf
pop
enter
enter
int3
nop
int
enter
into
xchg
xchg
pop
enter
enter
ror
(bad)
ror
ror
aam
aad
enter
(bad)
mov
mov
xchg
pop
enter
pop
enter
fiadd
fild
fadd
pop
sbb
xchg
fild
loopne
loope
enter
loop
xchg
pop
enter
enter
in
in
enter
out
xchg
pop
enter
enter
call
xchg
pop
mov
mov
pop
enter
enter
in
mov
pop
enter
out
mov
pop
enter
enter
lock
icebp
pop
enter
repnz
xchg
pop
enter
enter
hlt
test
pop
enter
imul
imul
clc
movs
stc
pop
enter
cli
cmps
xchg
pop
enter
enter
cld
mov
pop
mov
enter
xor
or
loopne
add
pop
sar
sbb
inc
sbb
sbb
sbb
pop
enter
aaa
enter
add
pop
enter
add
xchg
pop
enter
enter
push
xor
pop
enter
or
xchg
pop
enter
enter
or
pop
enter
or
xchg
pop
enter
enter
push
cmp
pop
enter
adc
xchg
pop
enter
enter
adc
pop
enter
adc
xchg
pop
enter
enter
push
and
pop
enter
sbb
xchg
pop
enter
enter
sbb
inc
into
xchg
pop
sub
sub
scas
push
sub
inc
scas
in
sub
in
scas
in
and
scas
in
scas
and
inc
scas
in
adc
in
and
scas
adc
inc
scas
in
adc
in
scas
in
sub
scas
in
scas
sub
inc
scas
in
sbb
in
sub
scas
sbb
inc
scas
in
sbb
in
scas
in
xor
scas
in
scas
xor
inc
scas
in
add
in
xor
scas
add
inc
scas
in
add
in
scas
in
cmp
scas
in
scas
cmp
inc
scas
in
or
in
cmp
scas
or
inc
scas
in
or
inc
scas
in
inc
ja
in
scas
inc
je
inc
scas
in
jne
in
scas
in
inc
jae
in
scas
inc
jo
inc
scas
in
jno
in
scas
in
dec
jg
in
scas
dec
jl
inc
scas
in
jge
in
scas
in
dec
jnp
in
scas
dec
js
inc
scas
in
jns
in
scas
in
push
scas
in
scas
push
fs
inc
scas
in
gs
in
scas
in
push
arpl
pusha
push
inc
scas
in
popa
pop
in
scas
in
pop
outs
scas
in
scas
pop
ins
pop
inc
scas
in
ins
pop
in
scas
in
pop
imul
pop
inc
scas
in
imul
popa
push
scas
in
scas
bound
scas
in
push
fs
scas
in
gs
scas
in
scas
push
addr16
scas
in
push
push
pop
imul
pop
imul
inc
pop
ins
in
scas
in
ins
pop
scas
in
scas
outs
pop
outs
inc
scas
in
pop
jo
inc
scas
in
jno
scas
in
scas
jb
jae
scas
in
inc
je
inc
scas
in
jne
scas
in
scas
jbe
ja
scas
in
inc
js
inc
scas
in
jns
scas
in
scas
jp
jnp
scas
in
dec
jl
inc
scas
in
jge
scas
in
scas
jle
jg
scas
in
dec
and
scas
in
xor
scas
in
mov
in
scas
in
test
xchg
inc
mov
in
scas
in
mov
mov
mov
in
lea
mov
inc
mov
in
xchg
cmps
scas
in
scas
xchg
movs
xchg
inc
scas
in
movs
xchg
in
scas
in
xchg
mov
xchg
mov
inc
mov
in
cdq
scas
scas
in
scas
call
lods
pushf
in
scas
in
popf
stos
scas
in
scas
sahf
test
inc
scas
in
test
in
mov
scas
mov
in
xchg
movs
in
scas
in
movs
xchg
scas
in
scas
cmps
nop
cmps
inc
scas
in
xchg
test
inc
scas
in
test
scas
stos
pushf
stos
inc
scas
in
popf
lods
in
scas
in
lods
fwait
scas
in
scas
scas
cwde
scas
inc
scas
in
cdq
mov
inc
scas
in
mov
scas
in
scas
mov
mov
scas
in
test
mov
scas
in
scas
mov
mov
scas
in
cmp
in
scas
mov
in
lea
mov
scas
mov
in
mov
in
scas
in
shl
in
scas
ret
inc
scas
in
cmc
(bad)
in
scas
in
(bad)
in
scas
(bad)
lock
in
scas
in
leave
jmp
cld
retf
inc
scas
in
std
int3
in
scas
in
int
scas
in
scas
into
clc
iret
inc
scas
in
stc
shl
inc
scas
in
shl
scas
in
scas
shl
rol
in
in
in
scas
in
aad
scas
in
scas
(bad)
loopne
inc
scas
in
loope
in
scas
in
(bad)
scas
in
scas
(bad)
fild
in
in
fsub
inc
scas
in
fucomp
scas
in
scas
fsubrp
fild
in
jmp
in
loope
scas
in
scas
loop
jecxz
scas
in
aad
in
scas
in
in
scas
in
scas
out
out
scas
in
shr
in
scas
in
jmp
scas
jmp
fucomp
in
scas
in
in
fld
fsubr
inc
scas
in
f2xm1
in
scas
in
icebp
(bad)
scas
in
scas
repnz
repz
scas
in
(bad)
inc
scas
in
cmc
ret
scas
in
scas
test
inc
scas
in
sar
inc
scas
in
stc
iret
scas
in
scas
cli
int3
sti
inc
scas
in
int
in
scas
in
std
retf
scas
in
scas
dec
call
idiv
mov
xor
add
data16
dec
sbb
sbb
dec
sbb
fstp
dec
jo
call
adc
or
jmp
sbb
inc
inc
xor
push
add
xor
cmp
inc
fiadd
ss
inc
cmp
(bad)
jg
inc
or
aaa
cmp
inc
xor
xor
or
xor
fwait
ins
pop
cmp
inc
push
inc
inc
or
inc
cmp
aaa
mov
xor
mov
iret
ss
push
xor
or
out
rcr
xor
xor
cmp
xor
jnp
mov
xor
push
test
inc
fs
aaa
cmp
xor
push
xor
xor
ss
add
in
popa
add
ds
add
int3
outs
jbe
mov
add
sahf
scas
ins
adc
bound
popa
adc
push
cmp
pop
inc
ja
inc
inc
cmp
nop
inc
inc
inc
cmp
dec
movs
ins
das
dec
cmp
sahf
aaa
add
shl
dec
xor
dec
fstp
xor
xor
leave
mov
imul
push
cmp
ret
loopne
sub
test
or
sub
mov
daa
adc
leave
or
inc
jo
dec
pop
add
push
repz
xchg
ja
push
lar
add
dec
add
imul
sub
push
sbb
push
sbb
cmps
stc
push
add
or
adc
add
or
or
loop
mov
or
in
ds
arpl
add
stos
or
or
mov
sbb
ror
call
scas
arpl
clc
push
lock
or
add
push
and
adc
add
outs
jne
out
jmp
add
xor
enter
(bad)
cmp
mov
daa
pop
cmp
sbb
or
add
adc
sbb
xchg
fimul
push
push
or
aaa
push
in
mov
add
das
xor
or
or
aad
add
cmps
push
push
or
push
add
add
(bad)
mov
add
aaa
push
add
jle
xchg
or
push
push
syscall
or
push
psubq
outs
or
or
movs
add
push
or
in
loopne
mov
ss
mov
ss
mov
and
mov
or
and
xchg
or
sahf
loope
or
sti
mov
or
rol
mov
inc
or
or
xor
add
adc
cmp
add
or
xchg
add
push
ins
cmp
or
dec
pop
jl
inc
xchg
stos
add
mov
xor
push
jae
sbb
add
or
push
push
imul
sub
mov
pop
mov
es
or
sub
adc
add
mov
dec
pop
xchg
adc
pop
test
add
cmp
or
clc
push
movs
jo
movs
add
imul
add
adc
ret
retf
mov
sbb
shl
cmp
push
or
or
lea
xor
inc
inc
repz
(bad)
ins
mov
xor
adc
push
ret
fst
sbb
or
and
lods
popf
adc
lea
ins
sbb
mov
cwde
cs
pop
dec
enter
ss
adc
pop
inc
imul
push
inc
sbb
adc
dec
push
xor
int
add
sbb
or
add
jmp
cli
pop
adc
sub
in
scas
xor
mov
add
ret
adc
inc
mov
in
add
xchg
and
stc
mov
sub
or
ins
sbb
jmp
cdq
popa
dec
add
inc
mov
or
and
xlat
out
push
add
add
dec
jmp
or
daa
cmc
ds
rol
or
jecxz
cmp
adc
nop
inc
add
in
jo
mov
outs
sub
push
or
jg
and
ja
rcr
ins
arpl
push
adc
xor
hlt
dec
adc
mov
pop
adc
jae
sbb
sub
imul
adc
or
jb
xchg
dec
xor
mov
add
add
and
add
xor
inc
inc
xlat
(bad)
sbb
add
ror
or
pushf
add
or
adc
push
pop
mov
movs
pop
ror
fs
and
sbb
pop
cmp
and
lds
adc
sbb
push
or
pop
pop
and
pusha
sahf
add
cli
xor
pusha
cmps
gs
sub
jecxz
scas
sbb
sub
xor
ret
mov
push
add
add
adc
mov
mov
dec
adc
add
idiv
or
pop
or
or
popw
add
or
cmp
cld
inc
adc
in
push
nop/reserved
in
jg
cwde
cmp
push
dec
push
and
lods
inc
rol
and
maskmovq
test
ss
dec
or
ss
sub
add
jl
pop
cmp
ret
nop
push
mov
xor
adc
mov
push
adc
rol
or
call
not
lock
les
les
jbe
mov
or
sbb
inc
push
cmp
or
inc
or
or
jg
or
add
jge
inc
pop
add
in
add
movups
loop
push
lock
adc
push
dec
push
or
inc
fs
add
dec
gs
sti
ror
scas
xor
das
or
pop
dec
mov
ins
or
and
adc
stc
aam
inc
loop
xchg
dec
test
mov
loop
adc
sub
popa
mov
push
and
movd
push
inc
les
add
or
scas
add
sbb
shl
das
push
xchg
cmp
mov
daa
aaa
stc
pop
lldt
xor
ret
inc
or
add
mov
push
adc
imul
push
add
push
pusha
(bad)
or
or
out
or
push
and
xchg
jo
or
sbb
inc
or
mov
adc
or
daa
sbb
je
push
gs
mov
ss
add
xor
neg
or
divps
adc
adc
adc
call
adc
push
adc
adc
adc
cdq
in
ja
maxps
push
ss
mov
add
inc
cdq
or
aaa
or
xchg
ret
add
xor
scas
or
gs
into
packssdw
(bad)
adc
push
push
cmp
or
adc
fbld
xor
dec
adc
outs
dec
pop
icebp
xor
adc
and
adc
adc
push
add
sub
jo
sbb
sbb
pop
es
out
add
add
add
add
adc
(bad)
syscall
xor
sbb
push
push
lods
fxch
bndstx
push
outs
pop
xlat
add
or
ficomp
stos
out
out
pop
dec
add
or
or
mov
jmp
mov
dec
xor
and
aaa
push
and
int
xchg
aaa
mov
push
push
mov
aaa
adc
jns
(bad)
cmp
adc
adc
adc
xor
adc
adc
adc
adc
mov
xchg
fisub
test
push
imul
or
mov
jns
or
or
sub
xor
or
push
add
mov
pop
sub
movntps
out
shufps
adc
addr16
or
jge
mov
cmps
or
mov
jnp
jg
jbe
cwde
data16
sbb
pop
or
cmp
div
inc
add
sub
cmp
pop
or
mov
cmp
sub
adc
mov
add
xor
or
jecxz
dec
scas
aaa
ss
mov
push
es
cmp
dec
cmp
into
arpl
xchg
fistp
cmp
iret
int
ins
inc
adc
cmp
adc
adc
inc
pop
add
push
add
dec
shld
add
add
or
shl
daa
add
or
adc
les
ins
or
sbb
popf
or
fdiv
xor
sbb
add
gs
gs
or
sbb
dec
test
pop
mov
mov
in
dec
mov
aas
push
pop
ins
adc
pop
shl
jae
or
cwde
std
inc
jbe
xchg
test
in
and
sbb
(bad)
mov
adc
inc
les
mov
push
and
pop
sbb
mov
dec
mov
or
pop
push
or
in
cmp
and
fs
xchg
jbe
sbb
xchg
xor
dec
sbb
push
addr16
or
add
cvtdq2ps
fwait
sub
xor
rol
jle
das
add
dec
mov
adc
inc
inc
or
mov
push
cmps
aad
es
les
cmp
sar
jmp
lods
(bad)
or
jb
bndstx
add
es
aas
data16
lds
pop
and
xlat
add
and
mov
imul
ficomp
dec
inc
out
or
sbb
daa
cmp
or
or
pop
push
add
imul
xchg
push
or
add
daa
adc
adc
pushf
sti
inc
sub
mov
outs
and
or
or
add
test
add
movs
pop
push
jl
je
push
mov
jo
aam
mov
test
les
xchg
adc
push
push
scas
adc
push
xchg
ret
test
lea
push
pop
arpl
int
pop
jbe
loope
gs
test
int
sbb
pop
shl
test
or
or
adc
cwde
xor
adc
(bad)
stc
push
or
and
cmp
mov
mov
add
jne
sub
mov
rcr
stos
jmp
js
pusha
pushf
push
mov
les
push
push
or
mov
jo
jmp
mov
push
out
enter
repz
lods
arpl
push
cmp
mov
or
xchg
pop
ror
lods
ret
daa
or
sbb
fs
xchg
fiadd
pop
add
sub
adc
jecxz
inc
cmp
dec
mov
shl
or
push
les
test
pop
pop
adc
and
add
jnp
dec
add
fwait
and
and
or
sub
arpl
and
sti
pop
sbb
inc
pusha
xchg
rcr
cdq
ret
xor
add
sub
adc
fcomp
inc
xor
push
sub
prefetcht0
add
sub
or
add
cmps
shl
call
push
add
adc
data16
or
or
pusha
jne
add
rcr
push
push
inc
repnz
icebp
in
push
adc
sbb
sbb
jl
cmp
jae
add
add
mov
adc
retf
cmp
mov
xor
mov
add
cmp
pop
add
ror
pop
jmp
cmp
add
add
sub
and
cld
adc
adc
and
arpl
rcl
pushf
push
xchg
ficom
push
or
retf
xor
adc
test
push
add
add
dec
add
mov
fild
push
pop
dec
or
jmp
ins
test
loop
push
pop
cs
ret
or
sar
dec
outs
xchg
(bad)
dec
popa
dec
sub
adc
test
ror
sbb
cmp
cmp
add
dec
and
sbb
add
icebp
lds
test
cmp
and
stc
jg
dec
xor
jno
fwait
add
jae
xor
enter
mov
push
xlat
adc
sti
add
ror
call
shl
adc
dec
loope
movs
add
fdiv
push
add
add
aam
adc
add
add
dec
sub
adc
pusha
xor
fmul
(bad)
dec
push
sbb
outs
lock
mov
test
les
ins
pop
cmp
movs
add
inc
jbe
cmps
js
push
std
add
cmp
cmp
jo
arpl
cmp
jbe
dec
jl
sub
mov
sbb
mov
in
addr16
xor
fmul
xchg
xor
(bad)
aaa
fs
mov
pop
mov
and
dec
pop
add
inc
or
push
pop
addr16
add
pop
sub
add
dec
or
ror
test
or
cmp
das
or
sub
add
fs
ins
popa
mov
rol
xor
fist
and
(bad)
jbe
in
adc
sbb
pop
lea
sub
push
arpl
pop
mov
xlat
add
add
and
xchg
inc
cwde
outs
mov
or
sbb
ret
or
pop
or
sbb
mov
or
call
push
push
or
or
xor
and
leave
dec
push
xchg
int3
adc
lods
enter
adc
add
adc
ins
(bad)
imul
ds
adc
adc
sbb
xor
cs
adc
xor
xchg
sbb
dec
adc
icebp
push
popa
loopne
aaa
pop
sbb
aaa
sbb
adc
sbb
(bad)
or
sub
sbb
xor
and
and
xor
(bad)
and
and
fsub
push
cmp
and
sub
add
and
and
mov
and
and
push
sub
iret
repz
cs
cmp
repz
xor
xor
div
push
sbb
rcl
pop
inc
inc
cmp
rcl
sub
and
adc
pop
pusha
bound
inc
out
or
es
sbb
add
outs
or
test
aaa
mov
pop
sbb
fstp
jns
int3
xchg
pushf
lods
sbb
pop
xor
xchg
sub
pop
aaa
push
xchg
or
loope
mov
cmp
dec
rcl
std
push
push
push
xchg
add
or
inc
rcl
push
data16
test
movs
jnp
or
nop
aad
jmp
and
sbb
xor
adc
xor
jb
jae
mov
sbb
adc
(bad)
rcl
movs
aad
stos
imul
sub
punpckldq
data16
mov
sub
xor
imul
fist
test
mov
push
jg
les
outs
dec
outs
adc
inc
ins
ret
pop
ret
bound
scas
sub
inc
adc
and
dec
or
jle
sahf
loop
sbb
dec
pushf
bound
sub
stos
jno
add
mov
cmp
adc
pop
inc
mov
add
je
sub
pop
push
test
and
es
dec
inc
dec
push
dec
dec
rol
lds
pop
shl
fmul
fdiv
jmp
push
jl
dec
push
inc
dec
pop
inc
add
push
pop
ins
and
jecxz
and
inc
or
inc
in
(bad)
pop
push
or
mov
mov
or
pop
cdq
mov
sti
popa
hlt
add
pop
shr
ds
loope
or
or
pop
clc
and
es
das
inc
ja
or
adc
and
or
fwait
add
pop
adc
jns
mov
(bad)
dec
push
add
add
adc
jg
push
rcr
stos
or
cmp
cli
pop
add
pop
xor
dec
outs
jo
fdivr
ss
inc
adc
inc
cmp
lods
or
jae
sub
or
aaa
mov
adc
inc
or
or
aas
adc
push
(bad)
and
pop
dec
adc
xchg
mov
ror
xor
sub
and
adc
ja
js
jo
cs
mov
sahf
out
dec
leave
or
or
enter
test
add
pop
sbb
xor
pusha
cmp
int3
or
xchg
sub
xor
dec
loopne
lea
push
add
xchg
or
(bad)
rol
rol
xlat
mov
scas
add
cdq
aad
out
push
out
pop
adc
adc
fcmovnb
pop
adc
xor
add
imul
xchg
adc
test
test
aam
or
test
repz
dec
ss
inc
inc
popa
mov
ret
pusha
fwait
int3
fldenv
imul
push
cli
sub
pop
xor
add
mov
add
cmp
lds
pop
sbb
ins
je
int3
xor
or
push
xchg
inc
push
cwde
adc
cmp
inc
push
std
jecxz
test
or
movs
pop
enter
xor
rcr
pop
fiadd
jecxz
aam
fld
jo
inc
mov
xor
mov
inc
and
es
nop
leave
add
dec
pop
adc
pop
or
shl
js
test
xchg
test
ror
and
or
push
or
adc
add
or
sub
push
dec
pop
int
ror
sub
adc
inc
mov
pop
and
xchg
sbb
adc
jns
ss
mov
scas
dec
add
sub
cmps
add
xor
jo
cmp
imul
inc
pop
mov
out
es
fimul
mov
add
or
aad
aas
push
daa
cmp
je
or
add
adc
pop
int3
xchg
bound
jbe
mov
or
push
pop
(bad)
and
bound
(bad)
mov
(bad)
dec
popa
push
xlat
push
and
dec
es
jbe
dec
or
or
and
adc
dec
xchg
mov
cmp
push
in
xor
inc
inc
sbb
xchg
jbe
pop
icebp
test
sub
and
add
pop
cld
daa
or
sub
pop
pop
daa
and
fadd
in
mov
outs
push
or
mov
mov
or
lods
rcl
shl
fcomp
cs
test
sbb
int
adc
sub
or
xor
mov
add
fidivr
and
mov
mov
idiv
or
sub
pop
adc
pop
pop
and
adc
pop
sub
jmp
test
(bad)
daa
add
and
cmc
popa
xor
ds
add
or
fld
hlt
adc
mov
jmp
mov
icebp
cmp
or
or
mov
jg
or
xor
mov
jo
xor
setg
pop
or
pusha
scas
inc
adc
add
xchg
and
les
out
int3
inc
mov
cmp
mov
lahf
push
pop
adc
gs
or
push
aam
ror
push
jge
push
jnp
sub
or
in
push
cmp
pop
lds
pop
pop
inc
fadd
rcr
pusha
xor
or
jmp
sbb
add
push
sbb
push
cmp
cmp
sbb
push
jbe
pop
fild
cwde
ds
xor
pop
push
hlt
jecxz
adc
add
or
div
xor
cmp
icebp
es
cmp
sub
inc
pusha
cdq
or
test
inc
scas
add
add
and
dec
push
xlat
cli
jg
jecxz
xchg
(bad)
in
ja
mov
and
xor
cmp
iret
add
ins
stos
cmp
dec
les
adc
push
lods
test
dec
sar
or
ja
inc
pop
add
add
fidiv
mov
cs
icebp
mov
mov
inc
mov
test
in
inc
retf
inc
pop
add
xor
mov
or
mov
add
cmc
or
cs
outs
adc
cmp
mov
bound
(bad)
rol
mov
repz
popa
nop
mov
and
scas
sti
nop
sub
mov
(bad)
nop
xor
jb
adc
adc
test
(bad)
test
jg
add
inc
jp
mov
mov
popa
jne
pop
rol
leave
mov
push
inc
xor
pop
mov
add
sbb
xor
fsub
loopne
xchg
dec
mov
and
add
mov
or
push
or
imul
or
add
push
sub
or
pop
test
mov
or
xchg
call
nop
adc
add
in
sbb
pop
push
das
stc
test
xor
loop
dec
daa
sbb
or
mov
out
push
add
lods
mov
or
or
mov
movs
in
xchg
push
shl
or
pop
cmp
addr16
scas
inc
jecxz
into
add
jno
(bad)
rcr
adc
pop
mov
lahf
stos
push
jo
mov
mov
test
sub
arpl
sub
and
or
sahf
cdq
aaa
test
mov
(bad)
dec
or
add
cs
and
out
add
daa
mov
mov
hlt
adc
add
add
add
add
rol
repz
dec
pop
ins
hlt
pop
add
sbb
sbb
xor
sbb
pop
sbb
xchg
(bad)
mov
push
ds
push
mov
cs
inc
cld
jb
inc
dec
add
inc
outs
adc
add
dec
push
add
add
add
xor
push
popf
cmp
cmp
add
mov
test
pop
or
cmc
ror
push
test
jnp
pop
add
push
bound
or
inc
xor
retf
and
pop
popa
shl
inc
push
add
xchg
mov
mov
fadd
dec
dec
fisttp
shl
lods
add
or
mov
aas
pop
push
xlat
push
mov
or
add
or
fmul
dec
add
shl
xor
push
inc
or
xor
xor
dec
(bad)
fbstp
lea
ror
xor
popa
push
cdq
push
(bad)
fnstcw
or
xsha1
cmps
or
pop
dec
push
bound
call
adc
(bad)
les
sub
out
popa
xlat
add
jnp
xor
sbb
ins
add
arpl
xchg
or
cmc
add
and
jecxz
cmp
ja
push
popa
lods
(bad)
xor
jbe
inc
sub
mov
test
pop
mov
push
xor
out
sahf
cmp
das
mov
jmp
xor
fs
add
xchg
dec
dec
cmp
sub
sub
and
repz
xchg
adc
add
sbb
ds
sub
inc
mov
or
jae
jbe
push
inc
pop
imul
pop
das
or
ds
popf
sbb
out
ds
fwait
mov
jb
icebp
or
jne
cmp
loop
dec
shl
push
cmp
sbb
sbb
lods
lods
adc
inc
adc
repz
cmps
jo
mov
adc
add
adc
adc
cmp
lea
or
pushf
sub
dec
sti
add
xchg
xchg
add
cs
wrmsr
lea
or
mov
add
dec
and
xor
nop
outs
loopne
repnz
jl
mov
and
loop
pop
ja
sar
(bad)
or
push
aaa
pop
jecxz
xchg
dec
or
into
je
dec
dec
or
add
(bad)
add
sbb
mov
jbe
cmps
mov
pop
outs
sbb
cs
jno
fst
jb
retf
pusha
push
mov
gs
imul
xchg
mov
adc
inc
push
inc
inc
dec
or
pop
cdq
(bad)
out
loop
test
xchg
popf
push
fldenv
xchg
sub
mov
mov
ja
test
lods
pop
sbb
or
jno
or
add
repz
lods
mov
mov
jo
mov
dec
inc
push
push
ret
cmp
in
adc
or
das
or
ds
cmp
imul
add
mov
addr16
test
xchg
mov
or
dec
or
aam
and
int
adc
sub
sub
jne
test
jne
push
outs
jno
aam
gs
add
ret
gs
mov
sbb
or
in
and
pop
inc
pop
push
nop
inc
popf
psllw
push
xor
cmp
ds
rcl
das
add
or
pop
dec
in
or
clc
sub
leave
mov
adc
js
adc
add
(bad)
and
push
add
pop
in
(bad)
pusha
and
adc
sbb
rcr
out
and
or
push
cmp
movs
or
ds
cmp
test
movs
push
mov
stos
or
pop
and
xor
mov
bound
ror
(bad)
jle
and
or
and
or
adc
inc
cmp
or
test
and
pmaxub
sub
adc
outs
mov
adc
push
adc
push
adc
test
adc
adc
sub
push
push
out
mov
pop
adc
aaa
sbb
pop
or
adc
sbb
fwait
mov
sub
sbb
sbb
or
sbb
or
or
sbb
jle
add
lahf
cdq
sbb
sbb
sbb
and
popf
aaa
sbb
push
sbb
imul
pop
and
adc
push
pop
aas
xlat
lahf
mul
and
pop
and
xor
pop
sub
push
(bad)
imul
add
cmps
and
and
add
and
sahf
out
out
sub
push
sub
jns
xor
adc
push
in
cmp
xor
xor
in
in
ss
cmp
in
in
cmp
cmp
cmp
add
push
aas
push
or
mov
and
and
pop
and
push
cli
mov
loop
inc
pop
or
push
ja
push
dec
into
pop
sub
push
mov
and
or
adc
jae
(bad)
arpl
fnstenv
or
(bad)
pop
or
lahf
cmp
sahf
or
and
or
cmp
jmp
adc
mov
xchg
sbb
pushf
sub
sbb
push
adc
arpl
inc
or
jnp
and
add
add
sub
adc
push
pop
sub
int
pusha
data16
jo
and
test
arpl
lods
jns
into
jae
cmp
or
mov
jne
cmc
les
or
cmp
or
sti
or
pop
inc
push
adc
mov
or
movs
popa
inc
lea
dec
out
push
movs
loopne
sbb
sub
jae
push
ja
adc
xor
adc
mov
lds
vunpcklps
adc
xor
sbb
arpl
inc
mov
icebp
jle
inc
aas
shl
popa
out
push
stos
push
jge
sub
mov
dec
inc
imul
movs
xchg
pop
jp
test
xor
aas
pop
enter
jg
test
loopne
push
je
fild
or
push
dec
daa
cmps
sub
mov
xor
and
push
or
lods
jmp
xor
(bad)
jecxz
sub
js
push
push
in
adc
pop
js
call
popa
loop
pop
push
pop
cmp
aaa
mov
inc
jbe
(bad)
or
sbb
adc
push
add
sub
add
and
add
add
dec
mov
(bad)
mov
push
mov
scas
add
dec
pop
clc
str
sar
pop
es
jg
sub
rol
fist
inc
ret
cmp
mov
stc
and
sub
sbb
test
push
jnp
inc
enter
push
in
and
pop
pop
cmps
loop
pop
and
push
scas
push
ja
es
shr
add
ret
add
sub
adc
and
pop
mov
test
adc
adc
repnz
or
or
add
push
sbb
push
cmovp
lock
add
or
add
jg
push
pop
inc
or
sbb
push
mov
jne
mov
lods
jo
movs
movs
pop
jbe
mov
sub
adc
mov
mov
lea
test
retf
mov
pop
jo
mov
xor
and
not
ret
sbb
push
adc
push
xchg
or
or
pop
mov
std
stos
(bad)
add
adc
jle
adc
pop
adc
fstp
int3
cmp
push
adc
pop
adc
call
hlt
sbb
or
sbb
adc
sbb
sbb
lea
sbb
sti
out
ficomp
sbb
and
and
sbb
sbb
sbb
sbb
daa
sub
test
(bad)
sub
xor
sub
add
xor
push
sbb
popa
inc
pop
sub
daa
das
scas
mov
xor
(bad)
xor
xor
push
add
xor
sbb
ja
sbb
cmp
and
push
js
xor
cmp
xor
je
stos
test
cmp
cmp
xchg
xor
jle
cmp
je
pop
data16
jae
or
inc
pop
or
cwde
or
add
pop
ror
or
xlat
or
push
or
ins
xor
or
ret
jbe
adc
test
xor
xor
popa
xor
ja
pop
mov
xor
in
mov
and
adc
xchg
imul
xor
lods
adc
inc
ins
and
adc
stos
xchg
push
dec
mov
gs
dec
popa
push
sbb
push
adc
aas
(bad)
lock
mov
xor
pop
mov
push
retf
stos
mov
and
xor
mov
aaa
test
aaa
xor
sub
popf
cwde
inc
ret
loopne
cwde
lea
jnp
sub
(bad)
mov
pop
mov
xchg
ins
xor
jnp
xor
repnz
sbb
test
and
jnp
xor
daa
sbb
pop
or
daa
es
inc
dec
mov
sbb
or
adc
adc
inc
es
inc
and
inc
loopne
imul
(bad)
inc
rol
or
sbb
sub
mov
test
je
dec
adc
es
cmps
add
cmp
sbb
add
sbb
or
pop
push
add
ret
or
push
cld
and
inc
pop
fild
adc
xor
cld
pop
jb
test
ins
popf
mov
mov
lea
mov
jo
out
shr
jae
inc
mov
adc
sub
pop
adc
inc
test
cmp
cs
xor
sub
imul
adc
pop
push
fbstp
xor
jmp
jmp
or
stos
or
and
jae
xor
xor
sbb
or
push
xchg
mov
or
push
(bad)
js
xor
or
scas
add
push
adc
push
adc
cs
add
inc
pop
pop
and
push
sbb
pop
or
push
outs
and
mov
cmp
bound
dec
fist
inc
dec
inc
sbb
daa
xchg
push
dec
lock
psllw
add
and
adc
ret
mov
pop
lds
sbb
sbb
mov
and
xchg
ins
push
sub
popf
sbb
mov
adc
out
sub
jno
adc
pushw
mov
and
jecxz
xchg
mov
mov
add
xchg
les
add
adc
jp
nop
cmp
test
mov
(bad)
push
lahf
cmp
jne
xor
inc
jae
xchg
adc
pop
and
jge
int3
xchg
cli
or
xchg
jecxz
lds
sbb
sbb
sbb
jns
mov
(bad)
push
inc
mov
push
push
push
imul
sub
inc
jns
and
or
add
ja
sub
push
add
inc
jne
sbb
sbb
jo
mov
retf
jb
sbb
pop
push
imul
(bad)
sub
jle
inc
fadd
(bad)
xor
pop
dec
dec
sbb
pop
jmp
dec
mov
out
daa
popa
(bad)
and
inc
xchg
jecxz
xchg
dec
arpl
fs
mov
jno
dec
jle
sbb
inc
push
mov
mov
sub
mov
lods
pop
sbb
push
sbb
push
nop
mov
add
in
inc
imul
push
add
scas
jbe
xchg
call
jno
sbb
add
add
pusha
std
hlt
add
jbe
pop
add
iret
and
push
add
repnz
pop
pop
add
sahf
or
and
arpl
mov
inc
add
out
add
mov
cs
loopne
lidtd
mov
jae
or
out
and
les
dec
cmp
data16
or
sbb
leave
adc
arpl
(bad)
(bad)
add
inc
pusha
out
mov
sbb
push
inc
jge
dec
inc
adc
stos
mov
push
sub
and
ins
push
dec
sub
dec
push
pop
addr16
xchg
neg
popa
sbb
jmp
je
repz
jno
pop
push
xor
lea
xchg
inc
inc
inc
fisttp
int3
pop
push
push
push
add
push
imul
push
ja
sub
dec
adc
jb
call
lea
cmp
test
sub
je
mov
je
ror
fld
or
sar
push
mov
pop
fld
sbb
pop
xchg
xchg
pop
xchg
cmp
(bad)
pop
jp
lea
rol
adc
movs
push
push
pushf
fsub
push
icebp
xchg
push
stc
sub
jg
add
push
sub
push
in
add
or
imul
cmps
xor
add
adc
push
ins
xchg
or
pusha
stos
dec
sbb
xchg
cmp
test
inc
add
jl
push
inc
sbb
test
imul
and
cmp
sbb
mov
inc
stos
test
in
adc
xchg
mov
or
push
mov
in
mov
or
mov
xchg
push
mov
dec
loop
or
ret
and
add
and
xor
mov
or
pusha
imul
inc
push
(bad)
push
or
inc
and
movs
(bad)
add
and
pop
in
push
sub
shl
gs
(bad)
push
ja
ss
aam
mov
xor
bound
and
sbb
loope
sub
call
dec
jecxz
mov
sub
add
mov
xchg
inc
add
push
pop
cmp
xor
test
test
xchg
adc
mov
test
mov
fwait
or
outs
fwait
inc
cdq
stos
cmp
outs
push
xor
cli
sbb
push
mov
xor
mov
movs
ror
cs
sbb
dec
add
and
lods
pop
es
add
add
outs
bound
add
cmp
sub
jmp
fwait
fs
xchg
cmc
adc
or
xchg
lea
mov
inc
dec
xchg
and
movlps
push
pop
xchg
xchg
arpl
lea
leave
adc
or
outs
add
adc
xor
add
fs
jbe
inc
or
add
daa
jge
add
xor
or
in
popa
mov
add
(bad)
fdiv
or
jns
sub
ficomp
repnz
(bad)
not
push
(bad)
ins
dec
es
jmp
repnz
rol
popa
or
dec
push
mov
sbb
jno
(bad)
loopne
push
add
lahf
sbb
push
mov
lods
ins
add
mov
add
jl
add
shl
dec
push
or
or
daa
jecxz
loopne
retf
push
sti
push
adc
cmp
mov
push
imul
movs
mov
aam
adc
(bad)
adc
add
je
mov
add
imul
xchg
sbb
jp
and
push
dec
movs
ficom
push
dec
adc
dec
out
es
ins
adc
sub
daa
adc
inc
mov
pusha
xor
xor
ds
sub
mov
or
sbb
imul
sbb
rol
or
and
enter
das
add
mov
or
shr
add
add
mov
cmp
add
or
or
lds
dec
mov
sbb
pop
scas
test
call
pop
pop
iret
add
dec
jmp
xchg
sub
add
inc
pop
test
add
sub
popf
lods
ret
(bad)
mov
sbb
push
sti
add
test
mov
xchg
add
add
or
sub
cli
add
repnz
aad
retf
add
sub
sahf
jno
fwait
push
or
xor
push
or
or
jmp
mov
add
pop
or
add
inc
arpl
test
sub
jmp
pop
dec
xchg
gs
les
ret
pop
push
jbe
out
ror
or
pop
dec
dec
rcl
dec
or
or
arpl
push
add
cmps
cmp
add
or
push
cmp
jl
loop
inc
dec
pop
inc
mov
xor
or
daa
jbe
pop
add
xchg
sar
or
ret
pushf
add
cmp
sub
or
lods
inc
sbb
push
mov
xor
xor
or
jo
mov
mov
and
sub
or
fstp
push
les
sbb
add
or
or
sub
mov
sub
jns
out
or
push
adc
adc
out
sahf
out
adc
out
sahf
sbb
push
sbb
imul
xchg
adc
xor
rcl
mov
push
js
adc
mov
push
fisttp
shl
and
out
pop
pop
movs
add
push
inc
nop
shl
pop
ret
sub
arpl
push
aas
adc
inc
add
add
bound
aaa
mov
add
add
ja
mov
pop
adc
push
pop
add
add
fs
add
and
inc
xor
sub
push
rcr
push
cmp
sbb
mov
add
or
adc
pusha
and
mov
jp
mov
add
rcr
push
aam
adc
xchg
jne
sub
data16
dec
pop
jbe
push
sub
inc
inc
pop
push
imul
ds
outs
ja
xchg
xor
pop
or
sbb
ss
mov
push
push
or
xor
push
and
adc
and
cdq
mov
iret
push
xor
adc
lock
out
bound
mov
lock
mov
dec
fdivr
fs
scas
sub
cmp
repz
das
and
xchg
pop
shl
push
outs
(bad)
xchg
push
mov
sub
data16
movs
popf
or
repnz
dec
xor
daa
movs
add
add
push
mov
sahf
jns
push
jne
shrd
retf
inc
mov
ja
pop
mov
push
push
and
jne
jno
inc
inc
mov
cmps
push
movs
aad
pop
aas
stos
mov
cmp
cmp
arpl
mov
dec
sti
cmp
cmp
gs
jmp
hlt
mov
sahf
inc
scas
movs
inc
dec
add
push
fild
xor
or
rol
pusha
pop
add
shl
xor
push
rcl
pop
pop
rsm
add
push
(bad)
push
jno
adc
test
movs
add
push
or
arpl
cwde
bound
cmp
sbb
je
retf
push
dec
outs
jae
xchg
xor
(bad)
out
push
sbb
call
dec
loopne
pop
sbb
xor
pop
jo
aad
and
nop
adc
mov
push
(bad)
int
sub
ins
adc
adc
dec
pop
xor
mov
jp
dec
push
or
shl
dec
inc
dec
adc
pop
inc
dec
xlat
cmp
sub
scas
jmp
add
xchg
mov
push
cmps
ja
xchg
test
ins
jmp
ss
das
std
or
and
pusha
popf
or
sbb
jae
add
pop
popa
sbb
sahf
cmp
cmp
mov
stos
daa
movs
xchg
ins
dec
jmp
jmp
rcl
aaa
xor
mov
jne
adc
inc
add
dec
pop
shl
and
push
cmp
add
xor
imul
sub
dec
sbb
cmp
push
xor
sub
add
push
ins
mov
inc
je
inc
outs
jne
pushf
dec
jns
sti
xor
xchg
push
inc
push
push
daa
push
repnz
stos
xor
xor
adc
xor
push
jmp
scas
mov
mov
push
xchg
add
sub
push
dec
and
dec
inc
cmp
mov
mov
sub
xor
dec
dec
in
lds
bound
jecxz
dec
xor
pushf
dec
mov
dec
cmp
pop
sub
dec
dec
test
(bad)
addr16
aam
xchg
pop
loopne
inc
aas
dec
hlt
stos
mov
inc
push
and
daa
cmp
add
dec
xor
stos
add
pusha
adc
imul
or
mov
mov
push
mov
jge
addr16
jmp
cmp
ficom
xlat
pusha
fdiv
shl
jmp
pusha
outs
inc
or
add
das
sub
sub
fist
xchg
or
mov
mov
pop
fnstenv
jge
daa
dec
and
retf
mov
cdq
adc
inc
cmp
pop
pop
outs
dec
ror
test
iret
adc
loope
xchg
dec
jae
inc
sub
inc
push
call
cmps
mov
test
scas
or
dec
adc
inc
inc
mov
push
sbb
fimul
sub
add
sbb
adc
inc
add
and
sub
or
hlt
pop
or
lea
jnp
jbe
xchg
cmp
xchg
inc
sbb
jp
std
add
bound
in
or
jbe
cdq
sbb
adc
retf
jmp
and
sub
cmp
xor
outs
add
push
mov
adc
imul
xor
rol
imul
cmp
and
ins
aaa
sbb
ret
sub
outs
jge
jecxz
xor
pop
xcrypt-cfb
cmps
and
inc
push
jno
out
inc
jl
jo
daa
inc
add
mov
enter
or
or
arpl
gs
adc
sbb
jecxz
js
jmp
popa
enter
push
add
lods
or
dec
icebp
xchg
test
inc
add
cli
pop
dec
shl
mov
add
es
adc
mov
cmp
inc
cs
adc
inc
cs
add
sbb
add
xor
scas
lock
add
or
cmp
mov
ss
push
ins
dec
or
add
or
push
mov
add
push
and
pop
jmp
push
push
add
clc
jg
dec
ins
and
mov
bound
and
pushf
pop
mov
inc
xchg
push
add
or
aam
add
sub
jns
cmps
les
or
rol
(bad)
fisub
adc
inc
cdq
scas
stos
cmp
icebp
add
xor
push
sub
and
and
add
add
dec
pop
test
add
sub
js
xor
ins
inc
das
and
add
and
retf
xlat
jl
iret
test
add
je
cmovle
xchg
xor
add
xor
lock
add
mov
cmp
ds
add
and
loopne
jno
movs
imul
sar
sbb
adc
cmp
or
and
imul
stos
xor
xor
add
push
imul
inc
add
sub
in
inc
cmps
(bad)
xchg
sbb
push
adc
or
add
add
pushf
pop
or
sub
mov
pop
jmp
pop
(bad)
and
xor
jb
xchg
sahf
aam
xor
mov
add
jne
js
push
ss
cwde
in
push
ret
dec
and
inc
xchg
dec
call
mov
mov
stc
add
add
push
test
xchg
push
jle
dec
gs
fs
or
and
xor
push
push
mov
add
lods
xor
or
xor
nop
nop
push
cmp
xchg
es
fidiv
push
or
or
test
or
or
or
adc
push
clc
ss
xor
jp
inc
retf
push
ss
add
push
xor
dec
fs
fisttp
inc
pop
mov
adc
or
iret
repz
push
sbb
sbb
sbb
sbb
setl
push
and
jo
adc
in
and
and
and
push
adc
xor
rcr
push
jp
inc
adc
sahf
and
and
push
sub
adc
xor
cmps
cmps
adc
adc
sub
iret
das
add
adc
push
xor
push
psllw
adc
fstp
mov
lods
sbb
adc
sbb
cvtdq2ps
cwde
jnp
cmps
pop
adc
fcomp
adc
adc
icebp
adc
stos
dec
sbb
xchg
add
adc
pop
sbb
shl
push
rcl
aad
sar
outs
add
dec
mov
ror
sbb
fs
adc
add
and
adc
dec
test
and
or
mov
jp
mov
scas
stos
call
lods
and
and
add
scas
imul
cs
add
xchg
mov
push
pop
inc
ins
and
xor
fwait
jb
add
mov
repnz
dec
push
mov
add
sti
ss
outs
test
jle
add
inc
dec
lods
and
add
adc
pminsw
nop
push
xchg
push
les
in
add
add
pop
add
cmp
ins
mov
or
or
outs
and
aas
ins
adc
daa
add
sub
add
shr
mov
push
sub
inc
and
mov
mov
push
pusha
or
xor
sub
pop
push
add
lea
add
int
leave
xchg
cmp
leave
mov
test
and
add
loope
enter
adc
(bad)
pop
add
cmps
lea
xchg
ins
in
push
add
push
call
cli
or
mov
xchg
adc
shl
jo
cmp
sbb
or
or
xor
ja
xor
add
in
push
jle
jbe
cli
je
add
frstor
sub
in
cmps
jbe
cmc
call
pop
daa
daa
add
les
jo
pop
sbb
mov
adc
adc
or
xor
adc
add
call
jge
inc
xor
es
mul
gs
sub
ret
outs
ins
mov
dec
sahf
daa
add
jo
outs
je
mov
sbb
sbb
or
xchg
data16
add
add
add
xchg
sahf
pop
or
mov
push
or
add
pop
push
xor
or
push
or
cmc
xchg
cmps
pop
femms
adc
adc
or
push
push
or
cmps
cmp
or
out
lock
rcl
dec
dec
dec
push
or
add
cmp
sbb
inc
and
push
add
(bad)
xor
into
pop
mov
aam
mov
push
add
cld
popf
adc
or
fs
popa
xor
fld
or
or
push
mov
movs
push
sbb
inc
and
loopne
mov
sbb
mov
lahf
ror
aad
lahf
aaa
adc
(bad)
rol
je
lea
call
int3
int
sub
lods
(bad)
(bad)
mov
cdq
adc
fist
dec
ds
inc
pop
adc
dec
jp
adc
or
pop
adc
xchg
sbb
adc
cmp
mov
lea
cs
jno
sub
and
mov
xor
cmc
sub
cmps
or
sub
sub
inc
cmp
or
(bad)
sbb
add
cmp
pop
loopne
ss
daa
outs
push
cmp
push
dec
cli
push
sbb
xor
or
push
pop
or
xchg
rcl
or
push
or
push
cmps
pop
sub
pop
mov
add
pop
(bad)
or
(bad)
repz
or
or
mov
cmp
sub
rol
xchg
or
pop
inc
sbb
or
push
movs
rcr
add
pop
push
add
fsubr
push
daa
or
jg
in
xchg
in
leave
dec
(bad)
xchg
scas
adc
jae
ret
jne
push
mov
jecxz
push
gs
jno
jo
adc
pushf
cmps
push
cmps
movs
jl
sub
mov
std
popa
jnp
add
dec
add
mov
and
sub
pop
xchg
xchg
xor
adc
or
add
adc
cdq
dec
add
adc
fadd
sub
xchg
push
adc
ror
fldcw
popw
stos
or
mov
fs
inc
adc
add
rol
sbb
adc
sub
ds
add
fadd
shr
push
sbb
or
rcl
inc
cmp
adc
pop
dec
mov
pop
and
bound
xlat
or
inc
leave
mov
sub
jne
out
or
and
add
ja
stos
mov
test
int
leave
add
lods
xchg
add
das
mov
dec
or
mov
ror
and
ret
mov
add
jo
stos
psadbw
push
jl
add
xor
std
retf
jbe
mov
cmp
xor
xor
dec
jle
add
xchg
mov
inc
sbb
mov
mov
push
push
lea
ins
and
enter
cmp
ins
jge
or
icebp
mov
push
adc
mov
add
stos
lods
repz
or
(bad)
push
shl
(bad)
mov
in
push
jns
int3
add
pop
inc
sub
push
dec
pop
jbe
xchg
outs
mov
xchg
push
outs
jmp
or
or
or
mov
add
fild
mov
xor
push
cmps
push
pusha
sub
or
push
xchg
pop
call
adc
adc
cmp
call
pop
xchg
inc
cmps
jl
mov
mov
adc
dec
or
add
sbb
or
inc
and
inc
and
retf
shr
(bad)
lods
jmp
add
and
pop
ja
jo
add
(bad)
cmp
adc
inc
and
push
adc
jns
add
push
scas
mov
xor
das
adc
aas
pop
cs
or
sub
pop
es
adc
mov
add
add
data16
add
loope
dec
sub
adc
mov
and
jl
outs
outs
sub
sub
cmp
pop
dec
in
add
dec
add
push
pop
rol
jle
cmp
aam
or
int
push
push
or
jecxz
xor
xor
push
aaa
push
adc
pop
shl
push
adc
adc
inc
mov
push
adc
push
data16
sbb
mov
clts
or
add
stos
cs
and
sub
retf
jmp
push
movhps
adc
sar
cdq
add
pop
(bad)
or
adc
pop
xor
push
adc
add
popf
and
jmp
jge
test
sbb
xchg
sbb
sbb
aas
out
xchg
mov
adc
lea
push
sbb
sbb
sbb
or
or
jae
pop
dec
pop
jae
adc
xor
pop
fild
and
and
inc
dec
mov
add
jns
pop
cmp
lods
fist
inc
pop
mov
test
or
icebp
jle
mov
inc
dec
dec
inc
or
jb
mov
adc
cmps
inc
inc
xchg
adc
xor
sbb
and
add
cmp
mov
xor
sti
imul
(bad)
sbb
mov
lods
(bad)
cmp
or
or
inc
adc
sbb
adc
push
fwait
xchg
pcmpgtb
mov
rcr
cwde
push
dec
test
daa
and
sub
les
mov
ret
and
sbb
(bad)
pop
jge
inc
sub
sub
mov
lods
push
loope
ret
sbb
fcom
inc
je
push
and
out
sbb
add
push
inc
sub
push
dec
jae
mov
adc
not
inc
pusha
aad
and
cmp
adc
(bad)
jae
pop
xchg
test
pop
aaa
mov
sub
les
push
or
aad
aaa
sbb
jbe
xchg
mov
fcomp
js
cdq
and
xor
add
popa
xor
mov
jge
xor
sub
test
xchg
(bad)
fwait
daa
or
inc
pop
popf
sbb
loope
jg
dec
mov
jo
shl
stos
push
sbb
add
or
sbb
sbb
or
mov
in
lods
mov
adc
mov
pop
in
inc
std
in
gs
dec
loop
cld
adc
add
add
add
les
or
test
sub
push
(bad)
or
cmp
mov
sbb
fiadd
adc
xchg
imul
clc
xor
dec
inc
shl
retf
iret
sbb
push
sub
xor
xchg
push
sub
imul
sbb
inc
in
addr16
loopne
lods
aas
mov
sbb
pop
inc
ds
dec
push
adc
cmc
gs
mov
fwait
in
ja
or
lods
pop
call
sub
push
(bad)
xchg
sbb
xchg
sub
icebp
or
adc
xchg
add
aaa
or
mov
dec
fcomp
xchg
or
adc
bound
ins
sub
es
mov
push
call
xchg
and
lahf
cwde
push
and
push
repnz
jmp
es
or
xor
cmp
add
push
push
sub
(bad)
jle
mov
scas
add
xor
test
or
push
sub
mov
add
ins
call
div
push
add
adc
sbb
dec
mov
xor
je
jns
sub
fwait
nop
fwait
ins
js
xchg
dec
cmp
pop
and
popf
fwait
xchg
popa
dec
push
sub
cmp
adc
not
sbb
or
cli
mov
mov
add
add
pop
push
imul
add
xor
iret
add
and
loope
inc
jno
lods
dec
std
xchg
inc
cmp
daa
push
dec
cmp
push
push
inc
and
or
xor
sti
push
and
pop
push
sti
sub
popf
push
push
outs
jp
jo
nop
jmp
adc
shl
arpl
mov
adc
push
add
sahf
fadd
add
cmp
mov
sub
dec
adc
xchg
pop
(bad)
fiadd
xchg
aas
or
add
push
sahf
scas
xor
cmp
xor
fimul
or
jbe
das
in
mov
loopne
dec
cmp
add
das
mov
stc
xor
pop
add
mov
adc
and
cmp
or
loope
pop
pop
stos
and
pop
push
aam
not
stos
or
push
dec
sub
stos
xchg
out
dec
push
push
add
add
loopne
inc
cmp
or
xor
daa
shl
jmp
out
adc
in
xor
inc
lea
faddp
mov
lods
push
and
out
dec
cmc
sub
jle
mov
or
or
ss
test
sbb
inc
lock
pop
jo
xchg
adc
and
(bad)
cmp
stos
dec
aad
pop
jnp
aaa
jp
adc
push
arpl
add
mov
push
or
fmul
stos
imul
scas
and
push
push
or
jnp
in
(bad)
shl
mov
jo
into
add
or
mov
add
addr16
xchg
movs
imul
outs
and
aam
inc
sub
sub
pop
aaa
add
stos
retf
or
xor
pop
loopne
(bad)
or
jne
push
push
xor
add
adc
or
mov
out
shl
or
sbb
movs
imul
dec
pop
popa
daa
out
nop
repnz
adc
ret
add
xchg
movs
inc
jno
push
call
or
loopne
loopne
jmp
inc
mov
imul
inc
popf
sub
gs
cmp
test
sub
cs
add
jne
sub
and
add
xlat
cmp
add
mov
sub
jae
mov
es
sti
add
xchg
cmp
sbb
ins
jo
add
add
dec
pushw
movs
mov
(bad)
jmp
mov
loopne
test
mov
pop
cmp
and
add
sub
and
dec
add
xchg
movs
or
push
xor
ins
push
mov
inc
arpl
cs
cmp
addr16
xor
mov
xor
add
pop
and
jne
jo
cmp
ret
adc
lods
ins
and
push
sbb
sub
es
xor
dec
sbb
pop
scas
add
adc
aam
xchg
push
dec
push
inc
xor
add
int3
(bad)
cmp
mov
xchg
push
test
push
mov
sub
into
adc
mov
dec
ins
push
inc
adc
push
or
mov
add
sbb
dec
jmp
mov
les
xchg
test
(bad)
pop
imul
xchg
xchg
out
jmp
add
bts
jp
inc
add
mov
and
hlt
outs
imul
ret
lock
sbb
fs
out
adc
pop
or
push
jno
add
loopne
add
test
fcom
add
scas
add
sub
add
pop
add
or
sbb
dec
pop
retf
add
and
int3
in
das
or
bnd
shr
ror
pusha
scas
or
pop
(bad)
adc
adc
and
inc
adc
push
stos
stc
mov
out
adc
pop
popa
cdq
add
retf
jbe
inc
lods
sub
pop
mov
lods
add
pop
add
push
add
add
add
in
fisubr
xor
sub
adc
and
xchg
sub
out
call
iret
add
clc
inc
mov
add
sar
daa
int
popa
retf
pop
jnp
cwde
sbb
jle
mov
mov
popf
add
inc
or
dec
lds
push
push
push
shl
rol
sbb
mov
mov
inc
shr
sbb
inc
xor
pushf
imul
aaa
or
repnz
pop
add
out
inc
xchg
add
pop
(bad)
or
daa
test
mov
fistp
out
push
pop
inc
inc
cmp
pushf
pop
dec
or
aas
dec
pop
push
stos
test
push
or
test
cmp
add
or
cmp
or
shl
or
add
cs
add
adc
out
adc
(bad)
push
adc
pushf
adc
outs
jge
pusha
mov
aaa
or
fimul
add
leave
cmp
adc
or
lock
push
mov
add
and
push
adc
stos
bnd
adc
or
or
add
sbb
fmul
test
adc
imul
xchg
cmps
sub
stos
mov
cmp
and
addr16
adc
push
add
fstp
aas
pop
dec
dec
mov
outs
(bad)
int3
movs
lock
sti
cmp
sbb
jno
shl
push
cmp
add
dec
imul
cmps
xchg
and
int3
jo
ror
xchg
dec
seto
adc
inc
(bad)
xchg
mov
js
ja
cdq
str
test
scas
das
test
ins
jae
jmp
and
xor
imul
and
add
cmp
cmp
clc
inc
xor
push
jo
dec
(bad)
aam
mov
fisub
stos
test
and
xor
add
test
inc
and
push
sbb
pop
in
or
add
and
cdq
jecxz
lods
xchg
sahf
add
cld
inc
mov
or
sub
add
or
pop
push
or
fisttp
push
jne
add
or
stos
and
mov
jnp
add
inc
mov
or
mov
test
push
fistp
add
or
inc
cli
femms
push
add
ficomp
push
sub
adc
clc
int3
inc
lock
adc
in
and
add
mov
adc
inc
adc
ds
xor
out
sahf
sbb
repz
ror
dec
mov
adc
pop
adc
lahf
xchg
ret
sbb
adc
sti
push
fdivr
push
adc
into
add
xchg
sub
into
pop
adc
shl
adc
and
sub
adc
sub
mov
or
xchg
mov
popa
nop
dec
push
or
call
scas
rcl
add
lds
adc
imul
fistp
add
inc
das
add
adc
add
sbb
fnstcw
jne
cmps
ret
repnz
jecxz
jae
data16
sbb
adc
mov
or
dec
pop
adc
out
dec
sub
jg
outs
dec
xchg
and
pusha
cwd
add
lods
adc
ds
or
pushf
(bad)
jl
pop
jae
adc
jae
shl
add
or
xchg
sahf
mov
popf
mov
push
rcr
ins
std
inc
aaa
push
cmps
fs
aaa
popf
add
dec
and
js
xchg
pop
sbb
retf
data16
add
rcl
or
ins
call
add
add
push
aaa
fimul
adc
loopne
push
push
mov
(bad)
pop
adc
pop
shl
mov
push
aaa
adc
test
mov
pop
int3
retf
(bad)
dec
adc
add
mov
mov
cdq
not
pop
sbb
jl
push
adc
push
js
mov
push
sbb
aas
out
or
push
adc
out
in
ss
or
imul
push
add
or
mov
fnstsw
ret
lods
and
add
and
pop
pop
jb
scas
and
add
pop
jp
and
push
or
fst
push
aaa
dec
add
pop
(bad)
test
dec
inc
outs
push
cs
add
cs
aaa
movd
sahf
mov
data16
xor
xchg
or
add
mov
sub
sub
sub
cmps
int
pop
data16
pop
add
fldenv
or
sub
mov
(bad)
daa
push
pop
xor
xor
xor
or
into
push
dec
adc
nop
dec
add
clc
repnz
xor
push
or
mov
out
sbb
add
jg
les
shr
test
out
and
and
jge
test
push
hlt
or
sbb
sti
sar
js
sbb
dec
or
inc
test
test
test
mov
in
mov
inc
mov
jo
loope
shl
mov
outs
dec
inc
inc
sar
cld
and
and
adc
mov
pusha
adc
pop
fwait
shr
unpckhps
add
dec
fwait
xor
mov
and
test
daa
je
shr
or
jno
dec
push
rcr
adc
lds
loopne
lock
sbb
cmp
adc
pop
and
shl
sub
scas
or
inc
push
fnsave
je
xchg
test
push
or
xor
sbb
test
popf
daa
jge
sbb
push
sbb
push
sub
dec
add
xchg
shl
mov
push
inc
or
rcl
cmp
xchg
rcl
loope
xor
push
mov
cmps
mov
push
dec
sub
mov
imul
dec
mov
sbb
and
inc
test
(bad)
lds
adc
or
test
stc
push
lods
sub
xor
int3
adc
mov
jge
mov
enter
loope
sub
inc
or
add
jno
adc
inc
test
push
sub
retf
mov
add
push
inc
cwde
jl
fsub
adc
pop
push
nop
pop
dec
push
or
add
aaa
adc
pop
(bad)
xor
aaa
imul
js
adc
mov
es
out
test
adc
adc
ins
ds
adc
adc
adc
or
push
adc
push
add
push
xchg
pop
add
sbb
ds
mov
sbb
sbb
clc
out
fwait
in
sbb
push
sbb
sbb
push
pop
push
or
and
and
push
and
and
and
and
xor
push
sub
sub
inc
sub
jbe
add
xor
sub
push
das
xor
call
sub
imul
add
movs
sbb
fistp
sub
icebp
or
add
push
sbb
mov
lock
mov
cmc
enter
jecxz
(bad)
pusha
cmps
adc
jp
out
sbb
repz
sbb
add
nop
dec
xor
inc
or
daa
add
nop
dec
movhps
dec
pcmpgtb
nop
add
sub
pop
pshufw
and
cmp
bound
push
int3
adc
jmp
sub
lea
sar
adc
jo
xchg
mov
mov
ret
pop
data16
loope
les
and
ret
ret
inc
add
mov
xor
push
jmp
push
push
inc
pop
cdq
retf
pop
retf
jns
sahf
or
or
push
sahf
xchg
out
or
in
jns
adc
push
adc
sbb
sbb
sbb
in
jns
push
sbb
xchg
pop
and
and
mov
jecxz
sub
xor
push
mov
ins
lods
xchg
adc
jp
loop
cwde
sbb
cmp
xor
das
xor
push
xor
xor
pop
pop
cmps
(bad)
push
or
sub
gs
jmp
inc
bound
popa
arpl
popa
xor
(bad)
sti
add
arpl
popa
or
xor
in
test
cwde
stos
sub
pop
bound
sti
(bad)
xor
xor
aaa
arpl
ss
cmp
jnp
cmp
push
or
popa
push
xor
pslld
mov
or
data16
cdq
std
mov
shl
add
jbe
add
dec
xor
or
xor
shl
fmul
pop
int3
pop
cmp
mov
aaa
aaa
xor
xor
aaa
popaw
xor
cs
aaa
xor
push
cmp
mov
sub
fcomp
xchg
pop
xor
popa
xchg
data16
bound
mov
xor
fdiv
xor
xor
data16
dec
jo
dec
cmp
popa
ins
sub
xor
cmp
(bad)
sbb
mov
loopne
and
arpl
mov
out
cmp
cmp
arpl
adc
outs
or
imul
xor
pusha
movs
push
pusha
addr16
je
into
cwde
bound
mov
pusha
fiadd
jo
ins
cs
mov
xor
xor
adc
dec
mov
xor
and
vaddpd
bound
adc
rcr
jb
mov
adc
add
(bad)
xor
dec
add
inc
lds
xor
xor
cmps
adc
cmp
sbb
ror
xor
inc
cmp
cmp
(bad)
scas
cmp
data16
in
inc
pusha
mov
fdivr
mov
push
es
sahf
push
das
ins
jp
mov
es
sub
push
or
push
sub
xor
sbb
add
or
inc
ins
scas
and
sub
xor
inc
scas
adc
popa
dec
and
mov
cmc
cmp
inc
(bad)
adc
or
add
dec
into
pusha
cmp
mov
push
cwde
cmp
jbe
dec
(bad)
add
ret
mov
cmp
xor
popa
retf
arpl
out
xor
jp
xor
loopne
and
cwde
pushf
add
mov
int
sbb
xor
hlt
adc
(bad)
arpl
sub
cmp
ret
dec
sub
push
dec
mov
or
or
je
sbb
cwde
and
adc
sbb
arpl
push
and
loopne
xor
dec
inc
xchg
xchg
mov
pop
fisubr
add
mov
inc
rcr
push
adc
ret
scas
pop
sbb
arpl
push
mov
dec
movs
cmp
adc
arpl
popa
cmp
dec
inc
xchg
push
xor
pop
push
and
or
fwait
jae
push
and
dec
pusha
push
les
xor
adc
sbb
addr16
xor
adc
inc
pop
adc
sub
je
cmp
and
pop
add
in
das
adc
movs
imul
mov
popa
xor
sub
popa
icebp
bndstx
jmp
ins
add
fwait
add
or
ror
jbe
loop
push
jae
addr16
dec
mov
add
add
add
into
push
sahf
xor
xchg
push
add
or
aaa
fimul
inc
fst
jne
cmp
pop
add
daa
adc
imul
add
or
inc
or
fsub
fldenv
xor
add
or
test
dec
push
or
xchg
fptan
in
xor
xchg
test
inc
fisub
sub
retf
adc
add
(bad)
fidivr
jo
call
dec
or
(bad)
imul
outs
cwde
add
inc
xchg
jmp
adc
push
stos
and
push
das
jno
mov
or
test
mov
and
pusha
add
and
test
add
sbb
repnz
adc
mov
movs
xchg
or
inc
cmps
popa
dec
loopne
push
push
add
rcr
xchg
push
add
mov
xlat
add
bound
in
or
add
repz
sar
inc
cmp
add
xor
ins
(bad)
rol
outs
jmp
in
imul
fild
jmp
push
sti
xor
cvtps2pd
push
push
dec
add
xor
xchg
into
pop
adc
push
xor
xchg
sub
xor
push
push
clc
mov
xchg
inc
loopne
mov
pop
adc
push
add
dec
iret
and
out
pop
adc
sub
or
femms
adc
jnp
jmp
ret
push
push
xor
pop
sbb
jle
xor
sbb
cmp
nop
fiadd
mov
aaa
jle
sub
or
or
add
aaa
push
adc
or
adc
mov
push
add
fnstsw
push
nop
add
adc
cmps
ret
rcl
add
or
pop
add
data16
add
shl
inc
xor
push
ja
add
ss
inc
pusha
shl
div
or
nop
out
cmp
adc
pop
add
dec
rcl
not
add
adc
or
xchg
addr16
xchg
xchg
adc
push
xor
xor
daa
add
and
loopne
ret
push
push
or
(bad)
dec
sahf
sub
pop
jbe
out
xlat
sbb
push
test
out
(bad)
setbe
xor
xor
dec
sbb
ss
sahf
not
sub
pop
inc
mov
sub
scas
sub
push
aaa
xchg
or
setle
mov
cmp
ficom
adc
sahf
cmp
(bad)
into
das
xor
jo
(bad)
(bad)
mov
es
push
push
mov
jbe
or
or
pop
adc
ficom
adc
pop
sub
add
sbb
clc
sahf
adc
jg
xor
xchg
or
and
adc
jle
jb
adc
xor
sbb
cmps
xor
cmps
sbb
push
pop
and
dec
ss
add
add
sbb
es
or
ss
xchg
ficom
cmp
cmp
sidtd
push
jo
fwait
(bad)
adc
add
jo
pop
push
push
shl
in
pop
and
mov
loopne
sbb
ret
adc
cmps
imul
adc
adc
xor
adc
not
fs
dec
adc
and
in
xchg
sbb
loopne
adc
cmp
sub
adc
adc
cmp
sub
mov
hlt
add
icebp
xchg
add
inc
adc
push
jmp
or
adc
cs
inc
mov
ss
mov
adc
inc
push
inc
add
jnp
inc
sbb
add
daa
sub
add
std
(bad)
dec
add
push
push
adc
adc
cmp
into
mov
add
outs
inc
ds
dec
add
push
dec
dec
out
mov
movs
dec
mov
xchg
movs
inc
js
xor
sbb
adc
shld
adc
clc
adc
mov
or
xor
sbb
icebp
pop
add
adc
shl
shl
add
adc
cmp
add
pop
lock
ins
inc
shr
shr
pusha
push
sub
push
les
or
cmps
aad
or
mov
dec
and
das
mov
and
(bad)
test
pop
pop
inc
dec
lods
in
mov
ins
mov
mov
adc
mov
jae
xor
out
pop
gs
(bad)
(bad)
pop
add
cmp
aas
inc
rcl
dec
gs
xchg
sahf
cmp
imul
and
mov
mov
jne
lock
cs
dec
daa
add
(bad)
sub
sub
mov
push
jb
aad
and
xor
popaw
adc
pop
adc
stos
dec
adc
and
inc
popa
adc
or
sysexit
movs
inc
cmp
adc
sbb
jge
outs
dec
dec
xor
inc
push
arpl
cs
pop
push
mov
mov
cmp
sub
pop
sub
pusha
xor
dec
and
sbb
push
daa
and
or
cmp
jl
movs
or
or
sbb
rol
bound
repz
inc
js
inc
inc
sar
push
outs
sbb
or
mov
jae
sbb
push
adc
pop
aaa
iret
out
or
mov
and
aad
test
add
sti
mov
(bad)
and
pusha
inc
outs
pop
sar
out
jbe
sbb
and
push
or
mov
adc
shr
or
dec
fs
hlt
ss
xor
mov
aam
add
mov
push
(bad)
fidiv
cmp
push
or
dec
mov
pop
or
push
aas
adc
pop
add
push
cmp
xor
xchg
mov
test
add
ins
ret
out
push
ret
push
cdq
cmp
test
cs
add
mov
inc
add
arpl
mov
xchg
jle
daa
inc
or
daa
aaa
push
jae
add
ins
mov
daa
xor
or
daa
xor
and
sub
fimul
shr
(bad)
cs
add
push
add
mov
add
or
in
push
mov
les
add
retf
data16
popf
push
or
iret
pusha
push
pop
shl
mov
pop
enter
add
push
enter
aas
push
mov
imul
inc
add
push
sub
pop
jp
mov
fisttp
fistp
arpl
gs
push
push
aas
or
adc
test
add
adc
and
arpl
xchg
add
xor
in
xor
movs
mov
xchg
cmps
cmps
cs
lods
xchg
add
push
inc
cmp
iret
ins
pop
pop
add
add
add
dec
sbb
mov
and
mov
inc
pop
sbb
cli
arpl
in
fsub
cmps
adc
jp
into
test
and
mov
mov
mov
add
cld
stos
xor
repnz
or
add
add
aam
inc
xor
sbb
lahf
movs
cmp
repz
or
or
shl
or
dec
push
cmps
xor
and
das
push
add
pop
adc
or
or
mov
add
es
adc
jmp
sub
jno
xchg
adc
add
ss
sar
fs
adc
addr16
hlt
add
mov
pop
or
or
pushf
or
mov
add
loop
xor
mov
sub
cmp
sbb
xchg
and
push
adc
push
jo
jo
ret
movs
push
sar
sbb
call
or
imul
push
push
mov
aaa
mov
rcr
sbb
xchg
hlt
and
imul
dec
jns
push
sub
adc
es
dec
and
shl
xor
mov
ss
into
sar
retf
jmp
jg
xor
add
mov
imul
cs
push
pop
ret
xchg
sbb
add
pop
add
rcl
xor
xchg
adc
sbb
xor
dec
pusha
cmp
and
inc
adc
xor
cs
je
add
add
test
cmovl
adc
imul
or
dec
cmp
iret
(bad)
xor
sub
or
add
bound
and
xor
sbb
cwde
sub
fdivr
lock
sahf
or
dec
cmc
movs
repz
sub
ss
or
pop
or
cmp
mov
or
aad
and
push
adc
xor
cmp
ins
sbb
inc
lods
outs
shl
cs
clc
ret
xlat
adc
addr16
ret
dec
or
inc
and
jp
fidivr
or
movs
retf
(bad)
xchg
cmps
leave
add
sub
cmp
fisubr
add
fidivr
or
popa
and
jmp
push
push
jne
pop
gs
xchg
test
mov
lods
pop
xor
pop
add
cmp
sbb
inc
sub
inc
fwait
sub
pop
pop
sbb
add
adc
sbb
mov
sbb
cmp
adc
jmp
ret
xchg
bound
mov
das
shl
fisttp
inc
mov
test
or
add
jle
pop
dec
push
(bad)
add
rcl
dec
imul
sub
cmps
xor
js
adc
cmp
jns
pop
or
add
pop
push
inc
push
or
adc
or
mov
popa
mov
cdq
movs
jne
or
in
add
push
dec
xor
cmps
and
out
sbb
retf
or
daa
shr
repnz
add
inc
fst
and
xor
xchg
sti
inc
daa
add
push
xchg
cmp
add
xchg
mov
push
ins
outs
dec
dec
sahf
sbb
or
push
dec
movups
xchg
xchg
xchg
xchg
adc
adc
mov
iret
mov
sub
xchg
imul
sbb
dec
cs
scas
or
call
cwde
movs
ret
sbb
and
pop
jo
ja
(bad)
das
and
dec
jmp
inc
shl
add
add
pop
mov
pop
sub
pop
sub
push
sbb
pop
adc
push
das
mov
jbe
or
dec
cdq
dec
or
xor
sar
ror
pop
pop
and
jb
xor
int
rol
inc
je
ficomp
fidivr
aam
mov
mov
cmp
push
pop
(bad)
fnsave
pop
pop
xor
xor
xor
cmp
imul
push
jp
cmp
in
repnz
adc
dec
pop
ret
inc
adc
inc
xchg
into
inc
sub
iret
dec
push
mov
push
inc
mov
ror
adc
inc
mov
push
mov
mov
pusha
cmp
jne
and
add
push
cmp
pop
outs
test
div
and
add
and
or
jp
xchg
add
jne
cmps
cmp
jmp
test
out
mov
push
or
inc
inc
pop
adc
pushf
mov
inc
add
mov
jmp
or
scas
xchg
es
sbb
add
mov
out
cmp
das
add
xor
xlat
add
xor
out
lods
into
cs
or
adc
add
inc
mov
pop
stos
ins
das
imul
xor
or
xor
dec
outs
or
jle
dec
dec
jns
jl
retf
push
xchg
xor
dec
add
inc
scas
mov
(bad)
sub
and
or
adc
rol
(bad)
push
adc
adc
push
mov
push
adc
outs
cmp
and
push
push
push
push
ja
push
push
add
mov
leave
fldenv
adc
sahf
push
adc
pop
add
sbb
adc
push
es
push
mov
dec
cmps
daa
adc
adc
pop
add
repz
mov
cmps
push
pop
pop
push
push
cmp
aaa
pop
sar
cmc
pop
add
push
push
aaa
dec
mov
xlat
into
push
push
adc
adc
jns
adc
or
sub
ltr
xlat
pop
es
add
xor
add
iret
or
add
or
cs
clc
scas
enter
pop
pop
xor
pusha
dec
pop
aaa
sbb
outs
mov
push
sbb
add
ror
pop
mov
jmp
out
nop/reserved
(bad)
xchg
int3
mov
jbe
arpl
enter
into
daa
sysenter
sbb
idiv
cli
cmp
popf
das
add
ds
sub
cmp
mov
adc
ds
sbb
jbe
pop
sbb
jl
push
add
sbb
data16
cmp
push
dec
mov
mov
iret
shl
sbb
inc
sbb
push
mov
rcr
xchg
add
rdtsc
xor
inc
ret
pop
push
lahf
or
push
sbb
nop
into
ror
pop
sub
xor
xor
enter
or
sbb
or
sbb
add
aaa
sbb
sbb
sbb
cmps
jno
sahf
adc
outs
out
or
jns
dec
es
pop
sbb
cmps
adc
pop
jo
push
mov
ss
sub
shl
sbb
outs
loop
in
outs
sbb
pop
cs
jnp
aas
jb
add
sbb
jae
push
add
imul
or
ror
jae
sbb
push
push
daa
cs
dec
fcomp
sbb
push
pusha
cmp
psubq
inc
js
daa
mov
jns
mov
or
mov
mov
mov
xchg
jnp
xor
or
sbb
pop
inc
or
add
adc
adc
pop
add
idiv
adc
add
adc
hlt
inc
repz
adc
adc
adc
xor
pop
jge
pop
jle
adc
mov
cmc
cli
pop
push
xor
cmp
jg
cmps
iret
jg
rcr
aaa
or
cmp
push
or
out
pusha
sbb
or
data16
cmp
pop
cmp
sub
sbb
nop
or
jle
add
cwde
popf
rol
push
xchg
add
test
ror
push
or
jecxz
push
add
dec
jmp
adc
xchg
sbb
or
xchg
ror
or
mov
fist
pushw
cmp
rol
add
fwait
sbb
in
aaa
mov
push
xchg
xchg
xor
mov
out
push
or
adc
adc
push
retf
xor
push
jbe
xor
mov
movd
xor
add
ins
jns
fmul
pop
(bad)
add
sbb
push
add
mov
push
mov
and
lahf
or
sahf
mov
sbb
mov
cmp
lea
pusha
adc
jnp
add
pop
(bad)
and
push
push
push
(bad)
(bad)
popa
push
lock
sbb
adc
mov
jnp
iret
push
xchg
es
je
xor
nop
xchg
rdtsc
cmp
data16
(bad)
data16
jo
(bad)
out
or
or
xor
xchg
mov
cs
add
movd
adc
push
xor
add
or
ucomiss
or
int
imul
sete
add
fmulp
xchg
add
push
xchg
add
xchg
stos
mov
and
daa
fnstsw
or
cwde
cmp
adc
imul
(bad)
test
ss
out
or
add
xor
cmp
rcl
cld
push
sub
push
popf
xchg
enter
pop
sahf
push
sbb
pushf
es
or
fwait
dec
sbb
push
adc
movs
add
mov
push
or
adc
imul
pusha
mov
push
stos
int
cmp
dec
pop
lahf
or
lock
sahf
add
daa
jecxz
(bad)
mov
mov
aam
or
or
(bad)
js
das
cmp
dec
add
dec
gs
push
or
push
mov
adc
sbb
push
ss
mov
mov
cs
add
(bad)
pushf
inc
js
pop
cmp
(bad)
cmp
mov
imul
and
cld
fincstp
dec
or
sbb
aaa
sub
daa
cmp
ins
push
push
cmps
and
cmp
xor
fwait
push
pushf
shld
call
ss
pop
repnz
jb
adc
cmps
in
and
dec
sub
dec
dec
fidiv
add
add
fadd
add
xlat
pop
sbb
push
sar
lock
xchg
dec
rcl
sar
repz
and
push
shl
xor
(bad)
fld
push
pop
adc
pop
shr
das
cmc
sbb
sar
dec
adc
sub
xor
push
jae
push
fs
outs
or
and
retf
sbb
and
cmc
jbe
mov
sub
or
mov
pop
jmp
inc
push
jne
jo
movups
mov
push
cwde
lock
sbb
and
cmp
inc
dec
loopne
cmp
sub
aas
or
sub
pusha
(bad)
pop
mov
test
sub
fisttp
ficom
ds
pop
push
inc
popa
xchg
pop
loope
test
push
dec
push
sbb
adc
inc
sbb
or
out
mov
cmovo
(bad)
arpl
and
scas
sbb
dec
inc
jne
jns
sbb
ins
jae
add
ror
add
sbb
je
pop
shr
dec
add
fistp
ror
or
dec
or
adc
add
push
movs
in
adc
or
and
les
adc
dec
sbb
aam
sbb
shl
xchg
mov
lods
inc
aaa
aaa
and
sbb
and
add
pop
push
scas
dec
sbb
andps
mov
repz
mov
popf
ss
out
adc
jns
add
dec
push
jmp
jnp
lea
add
sbb
fsub
test
pop
js
pop
adc
movs
xor
movs
ins
pop
pop
cmps
xchg
outs
mov
aad
push
sub
or
cmp
sbb
xor
adc
sbb
add
fadd
push
or
and
and
adc
inc
into
outs
inc
imul
mov
or
adc
loope
dec
pop
inc
xchg
dec
aaa
lods
push
push
mov
pusha
test
jmp
cmp
jb
fwait
or
(bad)
and
jecxz
adc
jne
or
and
(bad)
adc
stos
jmp
push
shl
add
imul
or
lea
retf
jnp
jae
add
ret
or
sbb
test
ds
adc
movs
xor
mov
adc
pop
and
push
or
mov
fstp
jo
xchg
xchg
push
ret
sub
dec
inc
add
or
push
cmps
or
movs
mov
sub
fst
or
jge
xor
and
and
xchg
imul
dec
mov
js
push
sub
retf
sub
or
xor
or
adc
test
jl
jmp
fwait
(bad)
or
loopne
adc
dec
gs
test
ins
inc
or
ret
lahf
push
add
out
stos
add
sbb
aas
push
xor
add
add
cmps
test
les
push
jae
sbb
fst
push
std
ss
add
sub
push
(bad)
and
call
or
add
and
or
or
or
es
add
cmc
xchg
or
dec
(bad)
(bad)
and
aaa
loope
jl
and
pop
or
cmp
arpl
loope
jb
ins
out
inc
mov
in
cmp
cmp
cmp
(bad)
cmp
call
outs
jae
call
pop
adc
retf
dec
inc
sbb
mov
or
sub
mov
adc
mov
in
xor
adc
add
or
mov
test
and
jge
rol
pop
xchg
mov
or
sbb
add
pop
enter
push
xchg
lods
movs
push
aam
and
push
and
push
jae
sub
popf
cmps
in
push
add
icebp
mov
push
cmps
add
push
sbb
ss
(bad)
cmp
push
or
or
add
push
mov
mov
mov
bound
adc
popa
pop
adc
cmp
jne
add
int
dec
sar
pop
stc
lea
jp
cli
pop
mov
shl
lea
sbb
add
xchg
add
push
xchg
add
or
pop
and
xor
aam
or
xor
xor
add
ss
cmp
push
in
div
add
inc
jp
adc
fnstcw
sbb
xor
mov
fdivr
mov
push
and
xor
jmp
add
ds
adc
xchg
adc
add
xor
or
pop
sbb
pop
dec
out
xor
hlt
add
fidivr
popa
mov
sbb
xchg
cld
xor
cdq
shl
outs
adc
mov
pop
add
xchg
pop
sahf
pop
pop
sub
adc
sub
sbb
test
(bad)
adc
out
je
fist
test
push
pop
inc
push
iret
cs
pop
ret
sbb
das
pop
xchg
cmc
jo
mov
pop
push
xor
add
(bad)
dec
ret
ret
add
cmps
sbb
or
adc
inc
dec
and
mov
pop
xor
fs
rcr
push
or
dec
adc
sbb
add
push
push
loopne
into
and
xor
test
and
and
addr16
push
and
jmp
and
scas
push
or
adc
(bad)
loope
icebp
lahf
or
(bad)
sub
or
movs
inc
cmp
cmp
pop
cmp
pop
(bad)
scas
movs
iret
pusha
push
inc
iret
or
and
inc
xor
jbe
mov
sbb
pop
dec
shl
daa
sub
rcr
sbb
repnz
push
add
sub
rol
adc
fadd
cld
add
push
xor
out
or
ror
xchg
aas
xor
lahf
pop
sub
aaa
adc
(bad)
popa
mov
ins
icebp
or
add
push
xchg
cld
cmp
cmp
push
pop
pop
das
pop
pop
pop
sub
das
pop
sub
and
loopne
add
mov
push
or
lock
clc
adc
pop
and
add
imul
adc
xor
es
mov
mov
sbb
dec
jnp
dec
ins
mov
jnp
push
pop
dec
and
cmp
pop
jb
and
inc
mov
arpl
fnstenv
nop
or
push
sbb
in
adc
ss
mov
dec
and
jne
mov
imul
ror
rol
cmovae
pusha
or
or
inc
xchg
dec
push
push
add
mov
push
imul
pop
jnp
stos
adc
mov
int3
les
cli
adc
pusha
fs
cdq
rol
and
aaa
sbb
add
mov
rol
in
add
dec
frstor
xor
add
sub
mov
ret
loopne
or
dec
adc
aam
inc
mov
add
lea
and
js
push
add
in
ss
jno
sub
pop
or
or
sbb
repnz
or
push
push
or
call
mov
(bad)
mov
sub
pop
add
add
sbb
cmp
lea
push
and
sbb
jbe
cs
sbb
cmp
adc
add
gs
inc
(bad)
adc
push
sbb
sub
and
arpl
or
sbb
jle
jo
(bad)
or
add
(bad)
add
jp
ds
or
sbb
or
xchg
or
rcr
fdivr
add
adc
push
or
je
movs
adc
sub
cdq
cs
pusha
ins
push
xor
int3
div
adc
adc
je
in
adc
retf
cs
adc
xor
cmp
(bad)
add
lods
add
loopne
js
dec
repz
adc
or
mov
outs
(bad)
jmp
dec
or
test
mov
dec
pop
shl
pop
jo
and
sub
cmp
or
pop
and
mov
fbld
push
pop
and
and
test
movs
repz
sub
pop
jg
push
pop
add
adc
sbb
pop
add
test
ins
xchg
inc
and
je
rcl
mov
addr16
(bad)
out
(bad)
xchg
pop
jp
or
inc
inc
push
and
shl
xchg
test
sbb
shl
ins
sub
fwait
mov
arpl
push
ret
(bad)
movs
cmp
adc
retf
fs
and
inc
mov
lea
outs
add
mov
sub
stc
add
sbb
inc
xchg
ins
(bad)
stc
xor
jbe
dec
repz
and
inc
push
shl
rcr
dec
or
(bad)
repz
cmp
pop
daa
xchg
sbb
ss
int
test
or
in
sub
jecxz
mov
xor
dec
add
pop
adc
ret
xor
push
mov
push
mov
leave
pop
bound
sub
sbb
lods
and
push
sbb
xor
imul
push
int
shl
or
add
adc
cmp
cmp
sub
loope
cld
pop
sub
push
in
xor
ror
adc
(bad)
xor
(bad)
push
pop
aas
and
or
cmps
les
push
daa
adc
or
lock
inc
pop
pusha
add
dec
cmp
push
adc
enter
jbe
or
and
daa
sub
push
dec
and
mov
or
xchg
inc
repz
adc
xor
push
and
ss
fsub
inc
or
adc
add
rcr
ss
aaa
xchg
stc
fwait
imul
aas
shl
or
mov
gs
lea
jne
loope
stc
push
pop
sub
and
ja
loope
push
inc
div
pop
add
mov
add
test
xor
push
add
sub
dec
test
add
or
mov
stos
cmp
push
das
cmp
(bad)
clc
add
sbb
inc
les
jecxz
add
addr16
mov
push
pop
sub
add
pusha
add
lea
gs
inc
push
int
sbb
add
inc
push
push
adc
and
or
inc
cli
mov
or
push
rol
test
rol
pop
mov
sbb
(bad)
fistp
sbb
sub
xor
arpl
or
loop
shr
mov
sub
cmc
inc
cld
jle
les
addr16
adc
sbb
push
jmp
mov
or
gs
add
sbb
ds
push
fstp
arpl
push
scas
xchg
les
push
sub
or
sbb
xchg
ds
pop
shr
lea
push
or
add
and
adc
jmp
(bad)
sbb
aaa
pop
ror
pop
inc
xlat
lss
push
mov
and
xor
pop
jnp
or
add
fimul
ins
retf
aaa
jo
fmul
stos
cmps
int3
jo
mov
addr16
bound
mov
cmp
aaa
push
xor
push
xchg
add
add
arpl
daa
enter
pop
(bad)
mov
sbb
(bad)
mov
add
add
in
sbb
and
sub
cwde
mov
stc
es
fist
retf
jecxz
(bad)
pop
xchg
adc
pop
imul
add
add
sub
push
adc
push
adc
or
js
push
iret
pop
dec
cmps
jl
mov
outs
or
mov
fisttp
mov
test
aas
iret
push
adc
sbb
daa
xlat
push
sbb
cdq
cmp
inc
outs
jp
pop
push
ret
test
xor
outs
and
adc
pop
mov
dec
dec
sbb
mov
add
bnd
mov
add
fst
sbb
sub
or
pop
in
sub
sbb
sahf
or
pop
imul
ss
pusha
fadd
mov
stos
pop
xor
lock
imul
gs
mov
pop
fs
nop
movs
rol
dec
and
and
push
jecxz
ds
dec
repnz
add
xor
mov
in
js
add
in
cmp
push
jp
push
pushf
add
test
ins
test
cmp
jns
lods
push
pop
adc
add
gs
sbb
clc
mov
add
and
adc
mov
int
dec
dec
dec
or
mov
or
sahf
cmps
loopne
dec
adc
or
push
cwde
xchg
mov
mov
or
lsl
pop
enter
repnz
push
or
or
pusha
call
out
push
jns
or
push
pop
adc
fwait
inc
sysret
or
adc
call
inc
adc
je
mov
jo
dec
xor
sbb
mov
sbb
cmp
push
retf
mov
movs
aaa
push
pop
and
punpcklwd
fwait
sbb
inc
push
or
cdq
add
hlt
adc
out
sbb
stos
into
adc
sahf
adc
loopne
mov
pop
or
add
or
cmp
xor
pop
and
push
sub
and
and
cmp
xor
push
adc
adc
add
adc
ja
cmp
push
push
jle
sub
(bad)
or
mov
adc
fs
push
xlat
inc
push
or
adc
mov
and
sub
jns
adc
ins
pop
loopne
dec
adc
adc
xor
setp
jbe
adc
adc
adc
test
pop
or
fs
out
sbb
inc
cmp
push
mul
idiv
or
sbb
push
les
ds
xor
xor
aas
inc
rcl
(bad)
(bad)
sbb
inc
retf
out
pop
(bad)
sbb
mov
in
sbb
push
icebp
xchg
lea
aas
sbb
xor
mov
adc
sbb
or
adc
ja
aaa
sbb
scas
add
or
cmp
or
imul
push
cmp
sbb
or
sbb
cmps
cmp
sub
push
push
fadd
aas
cmp
push
add
xor
dec
sbb
ds
mov
pop
aas
sbb
inc
push
sbb
sbb
sbb
push
ss
xor
sbb
sbb
push
sub
push
push
inc
sbb
inc
sbb
rdpmc
dec
ss
pop
aaa
sbb
sbb
jo
add
ds
sbb
push
adc
dec
inc
mov
pop
pop
inc
add
inc
xchg
mov
or
mov
xor
dec
push
sbb
fwait
dec
xchg
mov
adc
cmps
ficomp
push
and
mov
shr
dec
js
dec
sbb
pop
push
and
xchg
add
push
and
and
stc
test
and
and
ror
push
and
dec
pop
cmp
and
and
adc
pop
ds
dec
call
sub
(bad)
out
and
xchg
and
and
inc
mov
xor
es
(bad)
add
and
push
and
and
cmp
and
cmps
js
daa
mov
inc
push
sbb
and
shl
inc
and
stos
movs
das
add
push
outs
inc
rol
rol
call
adc
pop
rol
jge
push
adc
dec
mov
adc
dec
adc
and
push
dec
test
dec
adc
or
stc
stos
pusha
add
push
bound
cmps
cmc
and
stos
ror
dec
inc
icebp
cmp
mov
hlt
adc
adc
dec
shl
dec
xor
outs
or
cmp
js
xor
jne
xor
call
and
inc
and
dec
or
dec
aaa
sbb
jb
push
dec
or
rol
dec
cmp
les
and
fcom
sbb
fstp
je
and
mov
dec
adc
xor
into
mov
inc
jne
bound
adc
push
jecxz
fist
jae
(bad)
and
jb
push
xor
mov
movs
adc
imul
ins
jmp
or
pop
nop
and
cwde
adc
into
pop
push
xchg
mov
int3
dec
cs
ret
pop
add
or
ss
test
jb
add
in
or
or
xchg
add
aad
nop
jbe
adc
es
sbb
pop
ja
cs
push
es
hlt
out
jle
or
adc
jb
add
movs
ja
sbb
add
ret
sbb
ja
pop
xchg
or
push
inc
rol
repnz
pop
icebp
mov
jbe
adc
pop
inc
add
xchg
or
ja
dec
dec
push
rcl
popa
adc
jne
lods
mov
mov
xor
pop
sub
daa
add
cs
pop
sub
das
imul
(bad)
pop
push
push
dec
scas
outs
adc
add
dec
pusha
inc
add
cwde
and
cmp
inc
jmp
jl
mov
shr
adc
mov
adc
inc
movhps
aam
mov
mov
sub
lahf
push
test
sbb
hlt
(bad)
test
add
adc
mov
cmp
dec
dec
imul
inc
push
inc
push
xor
scas
jnp
push
xchg
rcl
adc
cli
inc
(bad)
mov
aaa
or
mov
std
(bad)
xchg
add
int3
add
and
and
and
retf
or
mov
or
and
mov
cs
mov
arpl
(bad)
adc
pusha
test
call
cs
daa
pop
adc
test
add
cmp
and
mov
push
jg
rol
or
jno
push
inc
jb
xchg
add
sbb
add
dec
sbb
retf
or
push
dec
sub
mov
jae
neg
enter
sbb
add
and
and
or
cmp
or
or
xchg
icebp
jns
or
retf
cmp
push
femms
adc
adc
push
adc
lods
pop
sub
es
adc
scas
or
not
pop
mov
sbb
jl
push
xor
dec
sbb
or
sbb
sbb
jle
lahf
sub
push
sbb
sbb
jg
and
sbb
pop
pop
aaa
and
imul
and
and
ret
and
data16
sbb
and
and
daa
daa
sub
fsubp
fld
sub
and
add
inc
sub
adc
(bad)
mov
sub
sub
sub
mov
inc
xor
sub
sub
data16
fisubr
das
fldcw
sub
or
xor
xor
mov
xor
adc
add
adc
mov
fwait
imul
xor
stos
fldcw
pop
cmp
push
cmp
cmp
cmp
or
cmp
cmp
cmp
adc
(bad)
ins
push
push
ds
cmp
pop
fwait
out
imul
push
inc
adc
or
add
inc
add
inc
inc
out
sahf
out
inc
inc
inc
inc
inc
sbb
jbe
inc
xchg
xor
into
inc
dec
inc
adc
(bad)
or
xor
push
inc
cmp
inc
inc
(bad)
push
dec
dec
dec
cmp
inc
push
push
dec
push
add
dec
add
sub
dec
dec
div
test
push
cs
push
es
add
push
fwait
call
push
dec
push
jmp
out
push
rcr
push
imul
push
push
sahf
pop
push
push
int
jmp
cmp
pushf
xor
pop
test
jbe
pop
pop
pop
jbe
test
pop
pop
pop
pop
pop
aaa
pop
sahf
mov
mov
pusha
pop
popa
pusha
mov
pop
sub
int
pop
sub
bound
push
arpl
sub
fisttp
pop
xor
pop
pushw
xor
add
push
imul
push
ins
push
pop
jns
out
outs
add
pop
outs
jno
jae
out
sahf
out
je
jbe
sahf
out
sahf
js
jp
jl
jns
out
jle
add
test
push
icebp
pop
add
push
test
ror
or
add
sub
mov
mov
lock
add
cmp
push
add
mov
mov
movs
cdq
add
aam
clc
test
in
test
push
mov
push
mov
dec
or
or
mov
pop
adc
call
add
xchg
movs
cdq
inc
inc
mov
pop
sbb
loope
inc
pop
imul
les
pusha
and
add
std
mov
add
push
mov
lods
pop
sub
test
or
and
xor
mov
adc
or
mov
mov
inc
or
ffree
call
sbb
sbb
stc
pop
cmps
adc
inc
mov
(bad)
push
push
mov
add
xchg
mov
push
sub
dec
mov
xchg
loopne
inc
pop
or
cwde
mov
cmp
push
call
dec
jp
shr
sbb
ja
js
pop
sbb
pusha
movs
inc
inc
pop
jmp
bound
lds
fs
popf
inc
sbb
adc
add
sbb
mov
pusha
fsubrp
add
cmp
push
dec
stos
xchg
or
out
(bad)
or
mov
fdivr
sbb
dec
sbb
fwait
pop
aad
outs
adc
test
dec
dec
add
pop
and
je
fwait
push
mov
or
mov
and
adc
pop
inc
pop
or
fmul
and
popa
jmp
xchg
ins
ror
mov
cld
push
icebp
imul
inc
enter
cwde
mov
cs
pop
mov
pop
inc
xor
add
push
dec
jmp
adc
(bad)
sbb
mov
adc
sub
adc
jb
and
cmps
mov
or
and
or
or
inc
or
mov
sbb
adc
adc
jo
pop
movs
punpcklbw
or
adc
shl
rcl
or
xchg
test
adc
mov
pop
sub
mov
pop
or
add
jnp
scas
add
xlat
add
push
pop
pop
std
or
xor
and
add
jmp
or
ret
lds
pop
cmp
call
lds
push
sbb
sbb
sti
leave
call
gs
xor
stc
adc
adc
enter
sub
sub
and
movs
cmp
pop
push
in
xchg
aaa
or
xchg
or
add
cwde
mov
add
push
sub
fsubr
in
push
xchg
scas
ins
mov
call
cmp
pop
outs
cs
data16
mov
adc
xchg
add
add
nop
inc
sbb
mov
adc
add
xor
adc
add
cmp
add
push
or
cs
adc
dec
pop
xor
jle
add
data16
sub
sub
xlat
daa
in
mov
inc
cld
mov
or
mov
sbb
sbb
xor
loopne
loop
sub
mov
and
cmc
or
inc
sbb
rol
popa
add
pop
movs
adc
xchg
add
pop
daa
adc
dec
jbe
(bad)
sbb
add
popa
popa
fadd
out
mov
dec
push
push
dec
add
jg
add
cmc
adc
pushf
(bad)
pusha
stc
stc
test
mov
test
dec
mov
stos
pop
dec
xchg
sar
pop
nop
out
mov
adc
push
inc
xchg
bnd
inc
das
sbb
jg
xchg
mov
dec
inc
cdq
sub
push
sub
lea
cmp
push
push
cmp
pop
jl
push
adc
sub
cs
aad
and
mov
push
or
add
repnz
sbb
inc
sbb
das
jae
js
xor
or
or
repnz
sub
push
sub
mov
or
and
or
fist
ja
and
push
mov
adc
add
imul
dec
loopne
and
(bad)
jge
daa
test
les
cmps
sub
and
bound
adc
xchg
ins
or
adc
xor
loope
inc
adc
in
cmp
repnz
add
add
inc
stc
mov
and
add
adc
loope
(bad)
gs
add
daa
add
js
popf
rcr
ret
dec
ret
xchg
add
adc
adc
inc
loopne
or
add
push
nop
or
add
ins
ss
add
add
or
jno
imul
call
pop
jnp
adc
sbb
fidiv
nop
xchg
fdivr
mov
loopne
xor
jmp
add
rcr
push
imul
xchg
sahf
inc
cmp
or
pop
sub
sub
xor
daa
jnp
cmp
daa
and
or
pop
and
ins
ja
test
nop
jnp
add
inc
sub
add
int
adc
adc
(bad)
sub
jns
xor
xchg
in
dec
cmp
cld
mov
retf
inc
add
add
iret
and
pop
add
and
inc
addr16
lods
jb
scas
mov
push
adc
pop
or
enter
push
or
adc
add
mov
les
int
jo
and
cmps
aam
movs
fcmovnb
stc
jo
out
add
sbb
fnsave
adc
dec
push
lods
pop
adc
mov
loop
popa
jbe
icebp
pop
ror
push
es
pusha
jg
jge
push
inc
cs
adc
add
add
jmp
das
push
(bad)
sar
or
dec
push
dec
fwait
cmp
imul
lea
or
repz
pop
mov
das
cmp
inc
or
push
mov
bound
pop
popa
push
add
pop
arpl
push
adc
arpl
cmp
mov
sbb
retf
add
setl
sub
xor
in
adc
add
sub
sbb
inc
movs
jno
test
pop
jecxz
push
jb
stos
into
xor
lods
pop
jns
sub
adc
mov
push
inc
and
mov
jbe
sub
and
mov
inc
xchg
repnz
sbb
inc
xor
int
xchg
push
shl
push
dec
push
mov
xor
dec
add
cld
add
cld
sub
lock
adc
movups
sub
fdivr
xor
adc
adc
pop
jae
mov
adc
test
cmp
mov
or
xlat
pop
das
sbb
dec
popa
lods
sbb
xor
add
rol
jns
cmps
push
push
pop
and
and
and
es
sub
fdivr
mov
xchg
mov
cmp
sub
push
arpl
leave
sbb
jnp
or
and
add
dec
cmp
iret
add
shl
cdq
mov
sub
outs
push
pop
and
cmp
rcr
movs
je
sar
daa
mov
jecxz
loop
xchg
cmps
push
inc
or
xchg
xor
sub
mov
icebp
fistp
stos
add
popf
and
test
xor
scas
mov
dec
stc
retf
xor
and
or
sbb
add
and
add
sub
add
jno
or
push
mov
imul
add
shr
add
sbb
or
inc
push
push
cmp
dec
or
pop
pop
adc
loope
xor
push
push
push
push
mov
je
push
adc
add
add
add
mov
rol
pop
dec
or
jle
pop
ds
pop
ins
imul
mov
add
and
test
add
add
push
push
or
les
add
xlat
mov
push
imul
or
and
xchg
imul
push
pop
add
sub
push
jne
jbe
dec
inc
cmp
inc
mov
dec
cmp
pop
xor
add
mov
dec
inc
lahf
ja
leave
push
mov
imul
adc
dec
or
(bad)
push
daa
sub
mov
fild
or
add
or
or
pop
inc
in
xor
add
mov
mov
sub
test
push
or
add
push
adc
clc
adc
push
mov
iret
repz
adc
ucomiss
sbb
sub
adc
and
in
or
(bad)
push
adc
or
pop
cmp
or
movsx
fisub
push
fstp
or
ficomp
in
adc
or
or
sub
xchg
xor
icebp
pop
jb
jns
jo
mov
and
push
inc
add
push
inc
in
xchg
mov
stos
cmc
ss
inc
or
and
adc
and
jmp
mov
add
and
adc
push
pop
inc
or
adc
shl
aad
pusha
dec
daa
or
and
mov
test
push
sbb
mov
test
and
mov
add
jbe
enter
push
nop
(bad)
and
ins
das
cmp
push
sbb
lea
pop
jbe
mov
xor
test
sub
sbb
or
jl
dec
adc
scas
inc
or
xor
das
or
jb
and
rol
cmp
push
add
aaa
or
or
data16
call
or
or
lahf
cs
push
push
adc
sar
int
xlat
adc
inc
xor
leave
adc
sub
dec
inc
outs
outs
fs
add
pop
and
inc
imul
jl
mov
push
and
xchg
mov
add
adc
test
mov
push
(bad)
es
push
add
shr
rcl
adc
or
cmps
mov
cmp
or
mov
xor
loopne
or
or
or
lsl
aaa
jg
retf
mov
xchg
jns
cld
enter
outs
inc
pop
mov
add
or
sahf
out
or
xor
pop
xchg
adc
and
es
adc
and
or
mov
test
mov
xor
sbb
cmp
xor
adc
mov
sub
(bad)
or
shr
add
pop
dec
inc
je
test
xor
inc
or
sub
(bad)
mov
retf
lods
add
or
add
add
ret
adc
sti
add
dec
add
nop
jbe
mov
pop
movs
mov
sti
or
jnp
mov
test
adc
add
int3
add
or
mov
pop
jp
int3
add
stos
pusha
push
les
push
pushf
sbb
data16
gs
or
mov
xchg
push
ret
xchg
je
inc
sbb
daa
adc
mov
add
cmp
or
push
dec
push
in
or
add
sbb
add
mov
cmp
add
icebp
rol
jl
sub
xor
mov
xchg
ror
adc
std
mov
movs
inc
sbb
xchg
or
pop
fcom
js
adc
scas
data16
pusha
push
add
dec
push
add
mov
mov
loopne
inc
inc
and
cmc
jg
mov
fwait
add
mov
les
inc
scas
(bad)
dec
dec
mov
neg
jbe
add
inc
mov
add
adc
les
add
dec
and
and
add
jo
push
push
loopne
ja
ror
add
leave
adc
add
cwde
inc
(bad)
adc
pslld
push
sub
add
pop
jo
adc
jo
pop
adc
cmp
lahf
test
mov
sbb
loopne
jno
sete
aad
mov
(bad)
imul
data16
dec
mov
adc
out
push
dec
daa
sbb
jns
nop
add
add
inc
or
pop
xor
or
or
push
push
arpl
in
mov
sbb
adc
adc
test
inc
jbe
fcomp
sub
cmps
adc
js
xor
inc
mov
mov
add
imul
jbe
or
push
or
or
push
adc
repz
repz
adc
cmp
push
sbb
sbb
sbb
sbb
pop
nop
sbb
jb
add
add
cmp
popa
sub
in
cmp
xchg
inc
sub
lods
sub
int3
xor
add
or
cmps
cmp
in
or
jne
pop
or
or
or
mov
out
mov
popf
push
test
add
add
(bad)
cmp
or
jle
add
mov
push
sbb
or
mov
fistp
dec
jmp
cmps
or
add
add
std
mov
add
mov
mov
add
rol
and
loope
cwde
or
mov
cmp
or
push
inc
movs
push
xchg
pusha
iret
and
add
dec
dec
inc
xchg
lds
pop
dec
inc
inc
inc
inc
pop
jmp
xor
dec
or
aad
fs
or
dec
push
push
outs
inc
cmp
and
adc
pop
test
mov
ret
sub
leave
sub
js
mov
inc
jmp
push
dec
(bad)
ds
and
sub
(bad)
call
sub
fmul
cmp
inc
aam
or
pop
fsubr
mov
mov
jg
repz
fst
mov
sub
mov
jnp
and
out
cmp
push
adc
or
ret
mov
inc
std
jno
call
add
and
sub
xor
ficomp
push
push
push
add
add
add
push
out
sahf
out
push
or
or
or
or
or
or
or
push
pop
popa
and
or
ret
ins
add
mov
add
inc
inc
fmul
inc
shl
xchg
inc
ds
jg
dec
dec
or
inc
pop
popa
sub
gs
sbb
nop
mov
inc
dec
push
adc
sub
inc
or
add
inc
pop
inc
dec
sub
xor
add
push
push
dec
inc
pop
inc
push
out
mov
jns
andnps
xchg
sub
sub
std
dec
outs
cmp
adc
(bad)
and
adc
inc
pop
std
mov
inc
clc
jo
addr16
add
mov
add
je
pop
jmp
ds
and
mov
dec
xchg
sub
fwait
shr
cs
dec
add
fcmovb
mov
movs
jno
data16
inc
or
mov
jmp
or
or
cmp
adc
or
pop
pop
add
inc
dec
add
ret
fdiv
add
or
fld
xor
inc
push
push
adc
pop
push
push
or
push
fisttp
sbb
adc
dec
mov
pop
dec
push
inc
add
or
push
or
mov
movs
mov
add
inc
add
sbb
xchg
adc
ret
adc
mov
jno
pop
cld
add
xchg
ss
adc
dec
rcr
or
inc
inc
push
pop
pop
sub
ffreep
push
sbb
popa
adc
cmp
cmp
ds
inc
or
loop
adc
xor
push
mov
fcomp
cs
ror
adc
outs
mov
dec
repnz
jae
xchg
or
cmc
call
jbe
mov
sub
fadd
std
add
sbb
rcl
inc
jg
fcmovbe
arpl
push
sbb
or
inc
xor
ret
cmp
int3
jg
pop
and
xor
adc
push
pushf
add
mov
mov
outs
add
sahf
jns
daa
push
add
jae
adc
pop
repz
ins
outs
lock
dec
inc
sbb
xchg
xor
add
loopne
mov
and
daa
xor
rcr
pushf
call
bound
dec
pop
push
sub
pop
mov
das
mov
cmp
add
sbb
push
adc
gs
popa
(bad)
sub
shr
adc
movs
push
mov
sub
js
scas
push
scas
add
add
pop
dec
and
out
push
xor
sub
pop
dec
shl
fmul
adc
adc
adc
push
push
inc
mov
inc
leave
sbb
add
add
mov
sar
rcl
inc
add
mov
fsubr
inc
(bad)
dec
cmc
xor
and
sbb
jecxz
movs
lea
add
mov
push
pop
pop
add
mov
je
dec
jmp
or
cmp
cs
add
lahf
movs
lea
add
inc
cwde
or
add
push
jmp
or
add
enter
outs
loop
push
or
fwait
xor
lds
xor
add
adc
adc
pushf
cdq
xor
sbb
icebp
dec
mov
popa
lahf
mov
dec
bswap
test
xor
adc
push
or
sbb
push
or
push
add
bound
add
loopne
data16
dec
imul
sbb
sub
push
add
xchg
mov
or
add
mov
push
das
adc
jmp
and
adc
test
xchg
loopne
popa
rcl
dec
cmp
cmc
retf
fistp
add
xor
mov
aas
out
push
mov
xchg
push
add
adc
add
xor
ss
repz
or
or
xor
mov
je
and
js
jo
add
or
ret
push
inc
ret
das
nop
mov
push
cmp
add
add
mov
cmp
add
or
loopne
mov
sbb
push
sbb
add
(bad)
push
add
mov
cmp
sbb
retf
mov
jecxz
push
movs
fwait
lock
jg
adc
add
and
pop
cmps
mov
test
pop
mov
inc
pusha
or
cmp
ins
xor
adc
sbb
and
and
push
outs
hlt
(bad)
pop
and
repnz
dec
mul
sub
sar
and
movs
sub
aaa
add
dec
push
cwde
and
int
push
les
xchg
ins
add
movs
push
add
sbb
call
push
ins
das
lods
adc
push
idiv
or
rol
(bad)
mov
fnstcw
popa
or
dec
sbb
pop
jecxz
or
push
jl
ret
mov
and
and
popa
daa
shr
jmp
xchg
or
sbb
jmp
loopne
shl
and
rol
cli
lock
adc
and
adc
or
pusha
add
jns
fidivr
mov
or
icebp
fidiv
add
out
push
dec
(bad)
loope
mov
int
jecxz
inc
mov
mov
pop
sub
add
push
jg
sub
dec
jo
pop
retf
dec
and
or
adc
xchg
fs
loop
dec
pop
stc
dec
inc
xchg
ss
add
cmp
sbb
mov
mov
push
cmp
pop
in
inc
ret
movs
iret
sbb
nop
push
leave
pop
dec
lds
dec
push
imul
movs
pop
fist
mov
jae
and
and
inc
nop
adc
adc
test
pop
xor
dec
adc
inc
pop
mov
cld
lds
or
mov
push
shl
movs
pop
shl
rol
pop
repnz
xor
cmp
aam
pop
nop
jecxz
inc
add
push
sbb
sbb
pop
adc
adc
sub
aas
dec
add
loop
adc
push
xor
mov
xor
retf
sub
dec
mov
mov
in
and
sub
jl
(bad)
or
or
or
adc
add
adc
sub
cmp
add
or
or
cmps
or
adc
rol
mov
dec
sbb
ficom
ret
ret
cwde
pop
dec
(bad)
repnz
fild
(bad)
rcl
pop
jge
jnp
fsubr
pushw
pop
mov
inc
dec
add
retf
or
add
sub
jne
adc
and
xchg
mov
sub
imul
jge
sub
jg
push
jp
punpckldq
sbb
cmp
lods
inc
or
inc
fldenv
adc
idiv
inc
rcl
xor
(bad)
clc
adc
ins
or
or
lea
in
inc
add
loopne
cdq
inc
and
cdq
and
stc
jge
sub
mov
or
inc
add
add
inc
pop
fsub
or
enter
fisubr
add
and
fist
enter
adc
adc
out
mov
mov
es
outs
loop
push
mov
sbb
mov
push
pop
sbb
mov
repz
jns
mov
sbb
and
sbb
cmp
push
add
xchg
xor
xchg
popa
mov
sbb
fidivr
or
ds
cmp
dec
and
pusha
outs
std
push
call
adc
xchg
push
sub
sbb
xchg
outs
adc
cmc
push
add
mov
mov
mov
sbb
fwait
sub
add
loopne
jle
inc
outs
mov
mov
bnd
pop
ja
mov
dec
mov
add
jne
adc
rol
mov
mov
jo
or
jbe
cmp
sbb
add
jo
adc
mov
add
or
popa
add
lds
mov
sbb
inc
pop
in
mov
sar
push
mov
adc
add
mov
mov
cdq
mov
xor
pop
nop
ret
fucomi
daa
imul
lock
les
inc
sub
mov
(bad)
daa
add
xor
jo
lods
dec
in
fdivr
data16
push
pop
or
mov
jns
jge
or
push
push
out
jl
or
pop
or
stc
xor
or
(bad)
or
or
adc
or
mov
xchg
adc
or
out
push
sbb
sbb
pop
push
and
packsswb
fstp
out
push
pop
sbb
sbb
sbb
ss
int
sbb
or
or
(bad)
push
and
add
jge
fldenv
retf
or
mov
push
ja
int3
cmp
or
push
shl
lods
add
rcl
nop
jo
fcom
jb
pop
jp
je
popa
xchg
es
adc
push
cld
dec
outs
jns
cmp
inc
pop
or
adc
xchg
clc
add
rol
sub
pop
mov
or
test
or
fisub
cmps
or
sub
xchg
and
add
gs
or
push
enter
sbb
xor
xor
sub
and
xor
fs
lock
jge
dec
mov
add
imul
add
inc
xor
xchg
idiv
sub
and
cli
es
or
jg
(bad)
cmp
push
fwait
call
cmp
(bad)
sar
mov
leave
pop
sbb
adc
mov
jmp
lahf
pop
or
icebp
jno
push
pop
pop
mov
sbb
inc
out
dec
sbb
sub
sbb
xlat
inc
and
adc
lods
ror
sbb
add
popa
cs
xchg
add
jbe
adc
jg
test
(bad)
add
aaa
mov
add
pop
and
add
pop
daa
add
shl
or
(bad)
adc
dec
out
outs
add
cmp
or
xchg
add
scas
scas
jmp
pop
inc
add
sbb
sbb
xchg
mov
add
add
push
pop
inc
(bad)
push
adc
inc
mov
push
adc
and
mov
xchg
ror
retf
adc
les
dec
and
mov
adc
add
jbe
mov
or
mov
add
inc
gs
fld
mov
add
xchg
rcl
test
xchg
jecxz
or
les
mov
ret
sub
hlt
and
pop
add
mov
jmp
jbe
(bad)
cld
mov
xor
in
and
in
add
js
call
add
or
dec
inc
mov
ins
push
mov
pop
ret
adc
sbb
sbb
add
jge
out
pop
add
dec
dec
pop
or
test
or
sbb
mov
mov
gs
das
mov
or
(bad)
ins
scas
sbb
and
mov
dec
dec
xchg
stos
adc
imul
sub
outs
adc
add
int
pop
and
xchg
pop
adc
rcl
cmp
adc
loopne
inc
aas
and
push
jb
push
and
js
push
dec
adc
pop
or
xor
sbb
inc
ss
jecxz
add
add
shl
sbb
das
call
sbb
xchg
aas
and
imul
test
push
push
dec
stc
jo
xchg
sahf
ds
push
push
test
xor
sbb
or
push
push
xor
mov
or
inc
or
or
aas
and
or
adc
jns
bts
adc
loopne
jge
adc
mov
push
sub
add
nop
lods
imul
cmps
stc
mov
sbb
push
push
push
sbb
inc
ds
mov
sub
push
pop
fnstcw
popa
and
and
and
push
pop
and
and
and
sbb
adc
inc
dec
pop
add
ss
cmps
mov
ret
(bad)
xchg
sub
lea
addr16
lods
push
push
dec
add
test
dec
in
cs
and
or
or
sub
stos
rol
cs
lea
push
dec
add
movs
cmp
mov
inc
sti
xor
xchg
jmp
cmp
and
xchg
test
xor
cmp
test
hlt
lfs
xor
inc
test
bound
test
jo
xor
sbb
sub
and
mov
aaa
fadd
dec
mov
fdiv
inc
xchg
adc
xchg
dec
or
lahf
xchg
add
inc
out
xor
movs
adc
or
shr
jl
push
dec
cmp
mov
nop
add
xor
adc
and
mov
or
scas
mov
dec
sar
pop
add
xor
call
inc
repz
fs
jnp
sbb
inc
push
sbb
pop
mov
or
(bad)
rcl
add
or
sbb
push
sbb
jno
dec
mov
inc
push
xchg
or
cmp
dec
inc
cmp
cwde
hlt
stos
xor
push
add
xchg
push
sbb
mul
add
dec
mov
add
push
test
into
and
add
push
ret
sar
int
add
inc
shr
pop
and
pop
add
push
dec
adc
mov
xor
movs
mov
or
push
mov
and
xchg
dec
iret
sbb
out
inc
mov
daa
into
add
mov
mov
loopne
(bad)
mov
rcr
mov
popf
cmps
mov
mov
(bad)
xor
add
inc
adc
imul
test
or
pop
lock
mov
adc
xchg
stc
ret
pop
lock
adc
fisubr
outs
adc
lea
jb
sub
sub
add
cs
pop
add
sbb
fsub
clc
add
xchg
ror
inc
mov
inc
and
dec
push
out
or
pop
ret
outs
adc
add
add
sar
mov
mov
std
popa
aaa
sbb
xor
inc
add
cmp
and
dec
out
adc
sbb
sbb
add
inc
cmp
xchg
and
add
mov
aam
out
xchg
dec
fbstp
in
adc
je
inc
or
loop
xchg
xchg
adc
test
das
sbb
add
cli
and
jae
mov
(bad)
hlt
mov
push
ret
mov
sbb
stos
inc
loopne
in
hlt
pop
or
movs
or
or
xor
push
mov
popa
mov
xor
or
fcmovbe
ret
or
pop
or
xchg
push
enter
mov
push
adc
jb
rcl
mov
or
xchg
popa
adc
add
xor
adc
pop
dec
push
addr16
sbb
ror
inc
or
movs
dec
push
bound
xor
push
ret
xor
push
adc
jbe
fstp
cmp
test
xor
add
inc
adc
mov
mov
sbb
ret
fiadd
adc
inc
rcr
das
adc
xadd
cmps
movs
lock
xor
xor
sbb
xchg
(bad)
push
js
add
jns
cmp
aas
imul
mov
jb
xchg
cs
pop
and
gs
ret
jl
lds
sub
or
adc
mov
lea
repz
and
les
stos
xchg
mov
xchg
xchg
inc
std
dec
cmc
add
push
inc
popa
mov
popa
adc
leave
pop
push
sbb
push
add
mov
adc
pop
add
setb
or
cmps
fisttp
xor
mov
or
pop
or
and
or
push
inc
call
adc
pop
aad
fadd
(bad)
(bad)
jmp
push
adc
push
mov
sbb
push
adc
ficom
sbb
and
mov
mov
push
sbb
mov
sahf
jbe
pop
jb
add
or
or
or
and
add
data16
or
or
imul
push
daa
sub
push
sub
neg
data16
push
xor
rcr
adc
push
rol
and
shr
mov
push
jecxz
rdmsr
and
or
sub
pop
call
test
fld
inc
ins
xchg
xor
dec
outs
and
mov
js
jns
je
call
adc
aas
in
or
loope
inc
(bad)
lahf
cmp
and
mov
repz
mov
dec
push
nop
popa
jbe
push
inc
add
popf
or
nop
xor
retf
dec
xchg
xor
inc
imul
aas
out
movs
jbe
add
add
inc
mov
mov
push
push
inc
fst
add
sub
sub
xor
and
mov
adc
leave
push
pop
inc
test
enter
xor
and
add
in
xor
push
dec
sahf
inc
inc
dec
test
inc
xchg
test
xor
adc
mov
push
pusha
sbb
aaa
mov
mov
push
dec
inc
pushf
mov
loope
call
ret
cmp
cmps
cmp
and
ins
push
mov
ins
aad
mov
xor
cmp
scas
xchg
mov
outs
stos
xor
shl
dec
mov
loopne
add
xchg
mov
sti
pop
stos
xor
sar
xor
rcr
es
push
pop
push
push
mov
loop
add
mov
inc
in
mov
mov
pop
arpl
mov
sbb
cdq
xor
out
movs
add
inc
cmp
call
inc
popa
mov
inc
xchg
mov
mov
jecxz
leave
push
xor
push
js
sub
ret
stos
xor
movs
xor
sbb
or
add
xor
mov
push
fisubr
ud2
xor
fs
stos
mov
fadd
cs
fwait
adc
fs
dec
stos
xor
rep
push
dec
imul
pop
sub
aaa
push
pop
sub
or
dec
cli
xchg
or
rcr
cmp
arpl
inc
mov
inc
pop
mov
stos
xor
lea
popa
cs
shr
pop
xor
shl
mov
inc
sbb
xor
inc
mov
mov
(bad)
push
dec
outs
xor
lods
lods
xor
lods
or
ds
fnstenv
mov
stos
fiadd
dec
cmps
mov
push
fisubr
pop
loop
push
dec
das
pop
rol
ror
stos
cmp
push
jbe
lods
stos
xor
or
pop
ret
jecxz
or
and
or
and
jb
retf
inc
fisubr
sbb
xor
push
xor
ds
push
dec
pop
adc
das
add
add
arpl
rcl
jecxz
popa
xchg
sbb
push
stos
les
or
xchg
icebp
loop
xor
loopne
mov
pop
nop
rol
cmp
fisubr
cmps
inc
xor
stos
cmp
mov
fmul
stos
add
arpl
push
ror
add
lods
fsubr
loopne
arpl
xchg
dec
inc
push
xor
(bad)
sub
pop
push
xor
mov
mov
push
xor
sub
push
stos
ss
add
xor
sub
pop
add
push
fild
clc
test
add
push
push
lods
call
and
xor
cmp
and
adc
lods
xor
push
inc
jge
ret
and
(bad)
mov
or
inc
xor
loopne
lea
or
push
rol
pusha
mov
or
fiadd
lods
or
mov
ins
mov
gs
ins
add
inc
push
int3
push
pop
adc
add
sub
jb
fwait
mov
cmp
pop
push
inc
xchg
loopne
push
dec
dec
xor
add
in
lods
cli
dec
mov
adc
lods
sbb
repz
xor
lods
sub
push
xchg
xor
cwde
xor
push
lods
xor
push
mov
cmp
xor
adc
mov
aad
xor
jecxz
lods
lea
mov
jb
mov
shl
jo
mov
rcl
pop
in
dec
sbb
dec
mov
xor
push
dec
or
xor
sub
shl
lods
scas
aad
or
std
aas
int
mov
xlat
ret
and
pop
imul
push
xchg
in
aaa
jecxz
sub
add
add
inc
inc
stos
push
fisubr
rcl
aaa
lea
shl
ror
inc
ret
or
add
push
jae
or
lods
xor
fisub
push
add
xlat
xchg
mov
pop
push
dec
rol
mov
ins
pop
inc
pusha
inc
mov
pusha
add
xor
mov
inc
lea
jno
and
aaa
xor
jne
outs
sub
or
and
sbb
and
loopne
push
call
and
add
sub
aaa
xor
jbe
sbb
dec
push
adc
dec
inc
inc
or
shl
pop
mov
cmp
dec
inc
pop
and
mov
es
fwait
or
adc
push
adc
daa
mov
fsubr
xor
scas
inc
mov
adc
sub
xchg
xchg
xor
sbb
xor
ds
xlat
popa
and
std
dec
jmp
push
dec
and
pop
out
cwde
xchg
and
xor
sub
das
xor
jns
mov
xor
sbb
xchg
sbb
pop
jns
xchg
xchg
sbb
rol
repz
push
int3
add
imul
add
es
stos
mov
stos
add
ss
pop
adc
fcmovnbe
inc
adc
jns
test
xchg
and
gs
or
xchg
push
sbb
sub
or
pusha
mov
das
test
outs
(bad)
cmps
xor
pop
outs
jmp
inc
ret
inc
or
js
adc
popf
cmp
mov
fs
mov
mov
imul
add
pop
cmp
inc
sub
dec
mov
pop
pop
adc
arpl
ror
and
push
xchg
cs
add
jg
add
pop
movs
inc
popa
inc
adc
adc
xor
pop
add
jecxz
xor
daa
xchg
adc
xchg
das
call
and
dec
sub
jb
xor
and
and
mov
jo
mov
push
inc
inc
cmp
das
add
jo
add
cmp
fsub
xor
(bad)
adc
dec
sbb
add
jo
adc
mov
mov
sahf
pop
xor
lods
push
cwde
sbb
push
aad
xor
bound
push
adc
loopne
(bad)
xlat
repz
clc
jecxz
hlt
outs
outs
jae
lods
rcl
dec
xor
ss
pop
adc
test
sub
(bad)
or
cmp
jb
sbb
add
mov
in
(bad)
add
(bad)
fistp
xor
adc
sub
xor
mov
xor
adc
mov
mov
pop
mov
push
cmp
cmp
fdivr
test
retf
dec
adc
push
js
push
mov
dec
jmp
pop
es
xor
xchg
xor
push
dec
mov
int3
or
pop
cmp
push
pushf
xor
pop
dec
dec
adc
inc
push
push
and
aaa
icebp
xor
jmp
cmp
cmp
lea
pop
inc
lea
imul
add
push
xor
mov
sbb
xor
adc
inc
dec
dec
pop
cdq
push
push
dec
inc
mov
mov
mov
adc
dec
or
pusha
add
pop
xor
fidiv
pop
pop
xor
test
inc
and
xlat
add
cmp
mov
cmp
push
test
add
and
sub
xor
xchg
xor
popa
mov
bound
xchg
mov
xor
stc
jmp
or
xor
cmp
inc
xchg
add
jmp
mov
dec
cmp
dec
aaa
leave
inc
test
clc
dec
in
mov
and
sbb
xchg
dec
dec
push
cmp
add
dec
mov
xor
inc
and
dec
sbb
and
push
pop
jge
mov
pop
es
popa
mov
mov
dec
pop
mov
pushf
mov
stos
sbb
adc
das
push
mov
je
cs
pusha
push
or
ss
push
push
dec
iret
test
or
xor
add
mov
push
stos
inc
cmp
fwait
xor
loop
lods
push
(bad)
add
movs
mov
push
add
cmp
mov
pusha
xor
movs
test
mov
icebp
fs
inc
adc
dec
xor
xor
in
jl
adc
dec
inc
pop
aaa
xchg
inc
add
push
push
dec
mov
xor
xor
pop
xor
add
xchg
dec
dec
jne
xor
mov
push
push
inc
inc
mov
mov
adc
dec
xor
dec
inc
inc
sub
or
aaa
xor
xchg
cmp
loopne
and
cmp
test
call
or
add
outs
pop
pop
mov
push
dec
pop
mov
inc
imul
pop
xchg
dec
dec
dec
bswap
push
xor
mov
inc
and
fidiv
mov
outs
mov
push
sub
popa
data16
ret
push
dec
mov
jne
lods
xchg
adc
dec
xchg
jo
xchg
cmp
pop
push
push
push
push
jo
add
and
ss
fidiv
jb
cmp
pop
aaa
pop
xchg
push
and
pop
ret
(bad)
xor
push
adc
ror
or
bound
xchg
test
xor
and
xor
ror
pop
mov
mov
ret
ror
dec
jns
adc
mov
mov
adc
sub
pop
outs
imul
mov
xchg
or
jle
test
xchg
cdq
(bad)
xor
mov
or
cmp
add
inc
mov
gs
inc
xchg
mov
pop
popa
add
xchg
int
inc
cdq
dec
mov
xchg
inc
leave
push
or
hlt
add
adc
in
es
or
loope
pop
(bad)
lahf
push
push
sub
int
sub
or
sub
mov
and
inc
cmp
xchg
lea
mov
ret
xchg
jae
jbe
inc
mov
out
or
or
push
sub
imul
inc
jmp
inc
leave
inc
or
rcl
aaa
in
and
out
xor
movs
mov
imul
sar
call
xor
fwait
aas
outs
movs
pop
inc
sti
stos
and
lock
movs
and
sbb
or
xor
and
inc
sub
test
mov
mov
adc
push
leave
push
xchg
push
xchg
lock
adc
cdq
jae
imul
pusha
or
lods
or
push
in
or
xor
push
lds
xor
ss
adc
fisub
sbb
push
lock
add
test
sub
bound
sbb
or
add
lods
test
inc
test
(bad)
cmp
jecxz
pop
cwde
mov
jge
adc
jle
xchg
cwde
mov
mov
mov
and
mov
pop
pushf
(bad)
pop
sbb
outs
lods
mov
mov
lock
dec
dec
sbb
arpl
jl
jnp
push
sbb
daa
mov
dec
push
mov
xor
add
add
jae
mov
test
enter
popf
jne
inc
shr
pop
loopne
inc
inc
cmp
xor
lea
mov
inc
jp
fcmovbe
mov
sbb
inc
test
and
sbb
sub
dec
and
jo
cdq
adc
pop
push
mov
push
sub
adc
test
cmp
and
mov
cmp
add
outs
sbb
jl
imul
mov
add
int3
sbb
or
push
cld
mov
push
jo
add
mov
push
mov
data16
pop
xor
pop
(bad)
inc
push
dec
call
lock
sbb
jmp
push
sbb
or
mov
xor
dec
or
scas
inc
and
and
jns
mov
mov
xor
sub
cmp
cwde
ret
mov
mov
cmc
(bad)
rol
dec
jne
adc
pop
fld
inc
sbb
test
inc
daa
in
jo
dec
sub
leave
xchg
and
add
loope
xchg
add
shl
inc
mov
aas
mov
pusha
jp
and
inc
mov
pop
fbld
push
inc
out
cmp
das
push
xor
mov
and
call
pop
xor
pop
ins
add
dec
and
dec
jl
pop
ds
xor
call
xor
int
into
push
idiv
add
cmp
jnp
aad
cmp
jl
mov
push
xor
add
movs
cmp
addr16
jle
dec
in
and
jo
rep
push
jmp
sub
jnp
push
inc
add
lock
les
ss
inc
cld
mov
shl
or
sub
int
and
js
shl
(bad)
jbe
mov
loope
fisttp
scas
mov
jno
cmp
dec
cmps
xor
mov
out
lods
call
add
imul
cmp
movs
scas
jne
jae
sti
add
sahf
bound
ret
ins
movs
mov
stos
inc
xchg
push
dec
ret
push
mov
lods
cs
push
(bad)
rcl
xor
push
dec
cmc
mov
pop
cmp
pop
mov
into
inc
push
pop
ins
or
inc
or
adc
sub
enter
je
xor
addr16
inc
push
or
imul
arpl
or
ss
mov
mov
push
in
popf
cmp
xor
(bad)
les
jmp
mov
inc
lea
xchg
mov
movs
imul
cdq
inc
xchg
test
and
cmp
sub
jmp
loopne
mov
cmp
push
sub
mov
sahf
test
mov
xor
or
aad
inc
inc
je
in
dec
mov
std
pop
xor
push
lahf
addr16
stos
mov
leave
(bad)
mov
mov
mov
pop
outs
mov
and
rol
xchg
popf
ss
add
or
pop
jo
cmp
enter
mov
dec
inc
ffree
pushf
push
dec
mov
mov
adc
or
inc
outs
xor
dec
push
loop
aaa
add
inc
inc
pop
ins
xor
out
mov
inc
addr16
addr16
sub
pop
mov
cs
fwait
add
and
or
cwde
and
push
or
push
nop
push
addr16
pop
xor
jg
jge
push
loope
sub
push
in
mov
add
outs
sub
shl
jns
dec
xor
ss
push
fwait
inc
mov
fld
sub
jb
out
xor
mov
mov
in
loope
adc
mov
sub
mov
jnp
scas
test
push
js
das
sub
jle
or
jne
repnz
cmp
arpl
pop
outs
or
fnstcw
test
sub
loope
sbb
adc
rol
and
call
dec
dec
add
xor
sub
inc
or
adc
daa
(bad)
jmp
jle
xchg
push
rcr
sub
cwde
mov
or
aad
fbld
jge
les
or
jecxz
jmp
or
xchg
jae
mov
gs
dec
pop
(bad)
or
sub
sub
sbb
cmp
hlt
es
imul
adc
jbe
int3
aaa
outs
fs
mov
xchg
or
add
pop
adc
test
xchg
push
ret
mov
pop
push
popa
or
dec
add
jnp
add
sub
sub
ss
icebp
cmp
pop
and
inc
xlat
mov
and
sbb
sub
fnstcw
jb
mov
xchg
test
cs
enter
or
aaa
sbb
ins
and
push
mov
into
add
test
sbb
iret
fsubr
cmp
adc
into
xor
outs
and
into
popa
push
(bad)
or
ins
leave
mov
sti
jbe
inc
mov
shl
aam
ret
mov
push
rdmsr
push
dec
cs
out
popa
mov
das
inc
aad
mov
je
dec
xor
sbb
and
xor
imul
mov
adc
test
sbb
inc
sbb
jecxz
dec
push
adc
int
push
imul
add
jb
inc
dec
inc
sub
out
xchg
sbb
xor
or
add
das
loop
xchg
cmp
jle
add
sub
pop
mov
add
mov
pop
push
retf
mov
sbb
push
test
dec
ins
add
pop
push
ins
mov
jl
sub
add
inc
fnsave
retf
push
sbb
pop
addr16
leave
xor
push
dec
lahf
addr16
loopne
sbb
push
and
cmp
add
std
sub
(bad)
sub
fbstp
jns
xor
cwde
outs
add
sub
dec
pop
ss
scas
das
outs
movs
add
add
popa
scas
imul
xor
leave
pusha
daa
fldenv
adc
dec
and
retf
add
add
and
dec
push
push
mov
ins
cdq
mov
jae
imul
jae
sti
xchg
(bad)
lods
xchg
aaa
xor
and
or
bound
and
sub
or
lea
adc
add
push
inc
dec
xor
dec
inc
mov
ins
aam
outs
jo
popa
cs
rol
push
add
mov
bound
test
sub
xor
mov
(bad)
sbb
inc
push
inc
leave
pop
xor
cmp
mov
sub
push
dec
inc
fiadd
inc
adc
mov
pop
mov
xchg
jo
and
lahf
aas
push
ret
push
mov
retf
dec
lea
mov
arpl
mov
pop
xchg
pop
pop
popa
jmp
cwde
adc
(bad)
loopne
push
xor
and
test
and
loop
adc
and
xchg
mov
jns
push
adc
imul
dec
adc
test
rcr
pop
scas
push
mov
sub
sbb
or
sub
jae
mov
push
pop
adc
sub
out
xchg
frstor
push
lods
mov
dec
cdq
pop
inc
sub
pop
pop
jbe
arpl
mov
mov
int
cmps
in
xor
std
mov
ins
sbb
push
lods
push
(bad)
aam
into
test
xor
cdq
mov
jno
sahf
lock
popa
(bad)
lods
dec
movs
sbb
pop
imul
sub
imul
popa
sbb
pop
mov
lds
jmp
inc
fsubp
cmp
push
inc
ret
test
arpl
(bad)
ret
xor
cmp
mov
mov
add
mov
pusha
stos
ja
adc
lea
or
rol
adc
shl
push
push
dec
fmul
xchg
js
ror
jns
sbb
jae
fild
mov
iret
shl
inc
test
jg
inc
test
sub
push
call
stos
or
pop
test
dec
das
pop
cwde
adc
ds
inc
mov
popf
mov
inc
inc
pop
jne
sbb
cmp
mov
mov
popa
ja
(bad)
daa
inc
sbb
sub
sub
dec
ins
pop
xchg
aas
addr16
adc
add
pushf
or
sbb
xor
add
outs
pusha
sub
daa
shl
loopne
add
ja
adc
add
and
(bad)
xor
sub
cwde
sbb
fs
scas
push
inc
lods
xlat
push
or
pusha
aad
loope
dec
dec
xchg
je
jecxz
xor
enter
in
adc
pop
mov
or
inc
dec
dec
push
out
xchg
push
push
cmp
stos
movs
shl
sub
mov
push
imul
jecxz
push
repnz
or
pop
adc
sub
mov
xchg
mov
test
cs
pop
(bad)
or
enter
gs
xor
sub
sbb
das
les
sbb
ret
and
test
dec
mov
js
sub
adc
mov
lods
xor
mov
mov
movs
imul
ins
mov
or
jno
into
adc
sbb
mov
lds
or
add
addr16
and
les
push
stos
sti
jge
pop
ret
inc
aas
add
mov
mov
and
mov
aas
and
dec
dec
lods
fs
fild
xor
jns
ret
loopne
mov
add
(bad)
sahf
das
xchg
jae
and
ds
mov
sbb
pop
inc
sqrtps
xchg
mov
jmp
test
dec
ja
adc
addr16
and
adc
push
jno
add
test
fs
dec
mov
out
jmp
shl
(bad)
or
mov
or
aad
inc
sbb
pop
or
pop
push
and
cmp
outs
pop
mov
pop
adc
push
mov
inc
mov
xor
cmp
xchg
pop
xor
les
add
mov
leave
lds
ins
test
pop
das
ret
push
pop
mov
sub
add
push
mov
sub
xchg
sbb
movs
jo
pop
sbb
xchg
aad
outs
dec
push
mov
push
mov
xor
icebp
adc
jb
mov
outs
push
xor
xor
xchg
jp
sbb
aad
aad
imul
scas
jno
add
inc
int
ret
shl
push
test
shl
push
and
adc
cmp
sub
jg
sbb
sbb
aaa
xchg
push
jne
mov
daa
mov
and
or
mov
invd
push
dec
or
fnstenv
cwde
jnp
mov
push
mov
push
inc
pop
sbb
data16
xchg
mov
je
lock
push
imul
and
pop
adc
jo
bound
push
arpl
daa
stos
mov
push
or
adc
dec
push
push
and
add
aad
sub
push
push
rcl
xchg
xchg
jmp
add
rol
pop
daa
stos
xor
movs
add
xor
dec
jge
shl
adc
retf
or
mov
movs
jbe
pop
cmp
test
inc
xor
test
or
inc
test
push
nop
loop
xor
sub
stos
inc
les
adc
sub
sbb
cmp
sub
jno
or
lods
(bad)
cmp
mov
xor
sub
push
stos
xor
mov
ins
or
sub
push
dec
add
mov
gs
ss
or
rol
ja
pop
stos
xchg
pop
push
add
push
dec
xchg
push
aam
imul
ficomp
(bad)
push
leave
xor
aaa
or
add
add
pop
inc
jno
push
mov
push
push
add
outs
fdivr
mov
push
ror
dec
inc
lock
push
sbb
push
bnd
adc
pop
add
xor
sbb
fadd
data16
dec
xor
xor
aad
sub
movs
or
(bad)
cmp
add
add
enter
stos
loop
sub
adc
or
push
inc
or
in
sub
push
adc
jmp
rol
movs
mov
cmp
xchg
test
push
pop
sub
pop
jo
arpl
or
add
push
sbb
or
sbb
adc
cmp
inc
movs
cmp
in
test
add
pusha
cmp
dec
cmp
xchg
or
fucomi
adc
push
cmp
inc
pushf
add
das
pusha
les
pop
aaa
retf
push
(bad)
push
and
xor
movs
xchg
fnsave
push
fistp
out
ss
mov
test
shr
jno
mov
inc
data16
in
jno
add
jb
xlat
pop
movs
lods
add
pop
pop
stos
and
push
movs
mov
inc
outs
cmp
mov
adc
push
loope
xor
dec
cmp
dec
or
stos
mov
arpl
loop
mov
movs
ficom
(bad)
push
ret
cs
mov
sub
mov
pop
xor
ficom
pop
retw
sub
loopne
adc
into
ror
xor
pop
stos
cmps
aaa
in
add
or
xchg
lds
int
pop
mov
imul
aaa
sbb
xor
mov
add
dec
inc
push
(bad)
stos
add
adc
or
or
xor
adc
push
test
aad
xor
adc
and
cmp
das
pop
xor
or
ss
mov
out
je
sub
push
push
loope
inc
cmp
lods
adc
fisttp
test
repz
(bad)
pop
pop
adc
cmps
cmp
or
cld
jae
xor
test
push
or
call
pop
or
es
cmp
out
lods
xchg
xor
jns
sbb
push
jp
mov
icebp
xchg
cs
pusha
xchg
add
loop
les
inc
xor
pop
imul
and
add
sub
dec
sub
pop
shl
inc
push
lods
sahf
push
xor
and
stc
out
and
sti
std
je
loope
pop
and
jno
call
add
mov
pop
push
(bad)
int3
adc
inc
inc
mov
adc
xor
and
test
push
inc
cmp
push
mul
xchg
add
lods
adc
mov
aad
mov
in
xor
push
inc
mov
jecxz
xor
adc
xor
mov
xor
cmp
and
aaa
arpl
push
mov
xor
cmp
sbb
into
fnsave
xor
and
loope
and
inc
rcr
or
xor
push
dec
pop
or
dec
popa
sub
sbb
cmp
int
mov
rol
(bad)
(bad)
push
pop
jno
pop
sub
loope
add
stos
(bad)
and
adc
shr
mov
mov
xor
pop
push
ffreep
adc
(bad)
sbb
mov
xchg
push
les
push
push
(bad)
inc
adc
out
mov
test
dec
je
adc
or
in
xchg
movs
and
add
dec
add
fsub
or
jne
cmc
imul
cmp
jmp
jecxz
ret
mov
push
dec
icebp
xchg
cmp
xor
xor
sub
xor
xor
pop
mov
rcl
call
into
xor
and
ja
shl
loop
ret
mov
enter
xlat
shl
adc
(bad)
out
test
mov
push
or
loope
xlat
stos
lea
xchg
push
sbb
pop
call
dec
cmp
shl
mov
push
stc
mov
push
or
xchg
jge
shr
bound
add
add
push
sub
mov
adc
xor
jns
mov
mov
lods
adc
mov
bound
fsub
inc
test
stos
aas
push
(bad)
sub
push
push
test
aas
xchg
add
dec
ss
and
sbb
jns
mov
sbb
and
cmp
xchg
push
cdq
jg
and
cwde
xchg
ror
pop
xchg
imul
or
jne
inc
add
add
jge
push
test
add
xor
dec
inc
mov
sub
aas
mov
or
stos
or
mov
xchg
xor
jl
repz
mov
inc
ss
inc
mov
xor
mov
dec
jno
or
xchg
add
and
xchg
aaa
bound
xor
add
daa
sbb
pop
push
adc
lea
or
xor
xor
add
cmc
bound
push
ror
xor
push
daa
push
out
dec
not
cmp
or
xchg
cmp
xor
and
mov
push
inc
mov
mov
iret
xchg
cmps
mov
add
adc
test
add
adc
mov
add
in
xor
ret
pop
xor
inc
pop
add
pop
aam
mov
dec
(bad)
sbb
sbb
shl
push
sbb
pop
fwait
mov
dec
mov
inc
mov
mov
in
pop
sbb
mov
push
xchg
xor
add
outs
arpl
pop
and
fs
lods
or
xor
test
ins
mov
fwait
adc
add
and
fild
add
jmp
ror
push
xchg
cs
imul
or
jg
and
shl
jnp
push
int
ins
cmp
repz
sub
or
daa
or
shl
in
xchg
jno
push
in
shr
gs
mov
movs
sbb
fcom
jae
jno
shr
add
jg
fld
(bad)
int
and
pop
rcr
cmp
xor
pop
xor
push
bound
stos
jbe
ins
rol
cmp
sub
lods
xchg
sub
in
mov
xor
fmul
push
push
cmp
sub
inc
adc
and
jno
mov
popa
dec
add
lods
je
fidivr
or
cdq
dec
bound
shl
dec
add
cmp
add
push
shl
pop
jb
or
and
arpl
jmp
into
and
ja
stc
pop
add
jmp
add
or
add
pusha
xor
cmps
inc
mov
push
test
pop
push
nop
mov
inc
push
(bad)
(bad)
sti
push
test
inc
daa
popa
pop
scas
enter
inc
or
push
adc
test
add
pop
sub
in
shr
jne
pop
inc
mov
ins
pop
arpl
pop
jp
aam
pop
mov
inc
hlt
push
sub
pusha
out
xchg
xor
inc
or
sbb
mov
cmp
jns
dec
add
dec
mov
and
cmp
sbb
cmp
sbb
les
daa
sbb
or
mov
mov
and
sbb
push
ins
and
aad
jmp
push
test
xchg
(bad)
xor
fnsave
nop
or
xchg
lods
movs
mov
add
jne
cld
lds
inc
loop
sub
in
in
mov
push
push
xchg
add
mov
xchg
mov
nop
das
adc
adc
mov
inc
xor
mov
pop
and
mov
and
push
addr16
push
dec
and
outs
call
mov
cmp
and
push
or
push
pusha
add
movs
xchg
sub
fs
call
xchg
les
inc
aam
cmc
enter
inc
jle
add
leave
xchg
sbb
lea
add
leave
push
xor
and
pop
add
xor
inc
or
or
xchg
dec
enter
add
inc
adc
shl
repnz
add
push
add
add
jg
add
push
inc
dec
add
and
out
pop
sub
aaa
ror
pop
call
or
xchg
jl
xor
add
xchg
xor
or
xor
dec
push
pop
add
mov
xor
or
add
sbb
pop
cmps
push
push
and
pop
ins
mov
add
dec
mov
push
mov
pop
sbb
lahf
xor
add
cmp
add
add
adc
loop
mov
stos
xchg
sahf
sbb
call
mov
inc
pop
sar
fwait
pushf
inc
add
push
pop
push
aaa
pop
dec
pop
daa
ror
enter
dec
aam
xchg
or
push
inc
add
xchg
or
mov
xchg
or
mov
pop
pop
or
xchg
or
mov
push
or
mov
xchg
or
mov
push
ud2
mov
xchg
or
mov
dec
adc
mov
xchg
or
mov
dec
pop
or
xchg
or
mov
inc
sbb
mov
xchg
or
mov
inc
pop
or
xchg
or
mov
jle
or
xchg
or
mov
jp
or
xchg
or
mov
jbe
or
xchg
or
mov
jb
or
xchg
or
mov
outs
xor
mov
xchg
or
mov
push
or
xchg
or
mov
cmp
mov
xchg
or
mov
bound
or
xchg
or
mov
push
inc
or
xchg
or
mov
sbb
mov
xchg
or
mov
push
dec
or
xchg
or
mov
adc
mov
xchg
or
mov
push
push
or
xchg
or
mov
or
mov
xchg
or
mov
push
pop
or
xchg
or
mov
add
mov
xchg
or
mov
arpl
mov
xchg
or
mov
cmp
mov
xchg
or
mov
imul
xchg
or
ins
xchg
or
mov
xor
mov
xchg
or
mov
cs
mov
xchg
or
mov
sub
mov
xchg
or
mov
es
mov
xchg
or
mov
and
mov
xchg
or
mov
fiadd
fild
test
mov
fiadd
fisttp
aam
aad
xchg
or
mov
xchg
or
mov
ror
rcl
int3
xchg
int
xchg
or
mov
xchg
or
mov
retf
mov
xchg
or
mov
(bad)
fwait
or
xchg
or
mov
ret
mov
xchg
or
mov
(bad)
mov
jmp
movs
stc
mov
cli
cmps
or
xchg
or
mov
imul
imul
lods
icebp
mov
repnz
or
xchg
or
mov
out
mov
mov
xchg
or
mov
jmp
mov
in
in
xchg
or
mov
xchg
or
mov
loop
or
xchg
or
mov
sahf
ret
or
xchg
or
mov
call
enter
xchg
xchg
leave
xchg
mov
xchg
retf
or
xchg
or
mov
xchg
iret
or
xchg
or
mov
mov
or
xchg
or
mov
mov
or
xchg
or
mov
xchg
or
xchg
or
mov
sbb
mov
xchg
or
mov
mov
or
xchg
mov
or
mov
xchg
or
mov
mov
or
xchg
or
mov
mov
or
xchg
or
mov
scas
repz
xchg
or
mov
stos
test
clc
xchg
or
mov
cmps
sti
or
xchg
or
mov
mov
or
aad
icebp
lds
xor
dec
xchg
dec
in
in
and
sbb
add
in
cs
add
and
dec
add
add
add
xor
jb
push
jb
pop
xor
and
or
push
jb
aas
or
push
jb
or
or
or
cmp
jb
push
jb
(bad)
push
jb
push
adc
adc
push
jb
daa
adc
push
jb
adc
adc
adc
and
jb
push
jb
pop
and
and
sbb
push
jb
das
sbb
push
jb
sbb
sbb
sbb
sub
jb
push
jb
pop
sub
and
push
and
push
jb
pop
and
push
jb
and
and
and
adc
jb
push
jb
daa
adc
and
push
sub
push
jb
pop
sub
push
jb
sub
sub
sub
sbb
jb
push
jb
das
sbb
and
push
xor
push
jb
pop
xor
push
jb
xor
xor
xor
add
jb
push
jb
aaa
add
and
push
cmp
push
jb
(bad)
and
or
or
cmp
cmp
or
jb
push
jb
aas
or
and
jbe
and
and
jb
push
jb
inc
jne
jb
push
inc
jb
and
and
jb
push
jb
inc
jno
jb
push
dec
jle
and
and
jb
push
jb
dec
jge
jb
push
dec
jp
and
and
jb
push
jb
dec
jns
jb
push
push
push
and
and
jb
push
jb
push
gs
jb
push
push
bound
push
jb
arpl
and
pusha
push
popa
push
jb
push
pop
outs
pop
and
and
jb
push
jb
pop
ins
push
jb
push
pop
push
and
and
jb
push
jb
pop
imul
popa
and
and
jb
push
jb
arpl
jb
push
fs
and
and
jb
push
jb
addr16
push
jb
push
push
jb
pop
push
and
pop
imul
and
pop
ins
and
and
jb
push
jb
outs
pop
push
jb
push
jo
jno
push
jb
inc
jb
and
inc
jae
push
jb
push
je
jne
push
jb
inc
jbe
and
inc
ja
push
jb
push
js
jns
push
jb
dec
jp
and
dec
jnp
push
jb
push
jl
jge
push
jb
dec
jle
and
dec
jg
push
jb
push
xor
mov
jb
push
jb
xor
mov
and
and
jb
xchg
mov
and
jb
mov
mov
and
jb
(bad)
mov
nop
cmps
xchg
and
and
jb
xchg
movs
push
jb
push
xchg
mov
and
jb
xchg
mov
cwde
scas
cdq
and
and
jb
fwait
lods
push
jb
push
pushf
stos
popf
and
and
jb
lahf
test
mov
jb
xchg
mov
xchg
mov
push
movs
xchg
movs
and
and
jb
cmps
xchg
push
jb
push
test
test
lahf
stos
jb
push
jb
stos
popf
push
jb
push
lods
call
scas
jb
push
jb
scas
cdq
push
jb
push
mov
mov
push
jb
xchg
test
push
mov
mov
push
jb
xor
mov
push
jb
push
mov
jb
(bad)
mov
mov
push
mov
jb
mov
mov
push
shl
and
and
ret
push
jb
ret
cmc
push
jb
push
(bad)
repnz
push
jb
repz
jb
push
jb
(bad)
icebp
push
jb
push
enter
push
jb
dec
jb
push
jb
retf
std
push
jb
push
int3
cli
int
push
jb
sti
into
jb
push
jb
iret
stc
push
jb
push
shl
shl
push
jb
out
jb
push
jb
shl
push
jb
push
aam
aad
push
jb
jecxz
jb
push
jb
xlat
loope
jb
push
fsubr
fldenv
push
jb
out
fidiv
push
jb
fucomi
push
jb
push
fsubr
frstor
push
jb
jmp
jb
push
jb
fucomip
push
jb
push
loopne
loope
push
jb
xlat
loop
and
aam
aad
jb
push
in
in
push
jb
shl
jb
push
jb
out
push
jb
push
call
jb
fucomip
jb
push
jb
jmp
push
jb
push
in
(bad)
and
and
out
jb
push
jb
out
fst
and
(bad)
icebp
and
and
bnd
push
jb
repz
and
ret
push
jb
ret
div
push
jb
test
clc
into
stc
and
and
cli
jb
push
jb
sti
int
jb
push
cld
retf
push
jb
retf
(bad)
jb
push
jb
dec
dec
loopne
sbb
xor
ret
out
xor
dec
add
dec
pusha
(bad)
lock
inc
sbb
inc
add
mov
test
adc
loope
pusha
add
inc
xor
scas
and
dec
jge
sbb
add
cmp
sub
xor
es
fistp
cmp
lock
inc
popa
push
cs
pop
sbb
add
aas
or
mov
xchg
dec
push
into
add
aam
lock
add
pop
pop
add
cmps
add
push
adc
add
and
pop
ss
or
push
sub
adc
imul
or
fimul
dec
push
fiadd
mov
mov
inc
aas
jmp
add
sbb
movs
sub
mov
sbb
xchg
add
inc
sub
push
icebp
mov
mov
jl
cmps
daa
adc
int
jne
addr16
or
leave
push
push
pop
or
push
cli
adc
push
fs
mov
cmp
inc
or
cmp
sbb
dec
add
dec
xchg
inc
jae
mov
pop
rcl
push
and
js
add
or
and
das
stos
push
stc
and
push
add
js
add
or
push
stos
and
inc
adc
and
mov
or
loopne
enter
push
push
jbe
fdiv
imul
cmps
jmp
ret
pop
adc
xor
and
adc
add
jl
pop
inc
loop
adc
push
dec
adc
xor
sub
mov
pusha
dec
out
daa
movs
adc
(bad)
scas
jmp
add
and
push
cmp
in
pop
mov
adc
mov
in
xor
sub
cmps
fisttp
pop
add
adc
or
mov
add
inc
push
je
or
add
or
loop
stos
pop
sub
sbb
sbb
push
and
jecxz
sbb
adc
mov
xchg
adc
push
jbe
add
mov
lods
fwait
sbb
repz
add
call
inc
nop
dec
xor
pop
jo
test
mov
push
adc
xor
pop
ins
hlt
push
cmp
add
mul
push
and
mov
jae
dec
or
or
test
movs
add
ret
and
pop
sbb
sub
push
sub
push
sbb
cmp
daa
or
std
outs
pop
cmp
adc
pop
nop
inc
dec
xor
cmp
xor
mov
out
or
or
or
or
fdivr
push
push
mov
push
aaa
add
dec
inc
cli
lahf
fcomi
fcmovb
ror
dec
sbb
fcmovnb
das
cdq
stc
or
and
ret
mov
sbb
adc
jns
jne
sub
cmp
cmp
inc
sub
lahf
rcl
push
mov
les
nop
stos
cmp
or
jnp
pushw
add
xchg
ret
pop
xor
xor
ret
push
popa
jns
adc
pop
or
add
test
push
mov
add
xchg
cmps
imul
cmps
sub
adc
ret
add
dec
dec
sbb
sub
les
adc
pop
adc
inc
mov
cmc
stos
and
mov
pusha
and
cmp
jmp
xor
add
add
push
ins
mov
and
add
inc
adc
jecxz
jbe
adc
jns
sahf
adc
adc
push
mov
push
pop
add
outs
outs
sbb
sbb
sbb
fcomp
sbb
jae
cli
out
cmc
push
adc
out
jge
and
add
leave
add
ror
push
cmp
daa
mov
daa
and
pop
add
sar
and
ss
sahf
out
and
or
pop
mov
push
pop
adc
rcr
(bad)
pushw
outs
sub
jns
add
sub
sub
sub
push
pop
sub
xor
adc
xor
fiadd
push
ss
cmp
cmp
jbe
f2xm1
cmp
pop
cmp
or
adc
and
dec
mov
sub
mov
adc
stos
push
sbb
mov
inc
add
fild
jae
add
add
pop
and
mov
adc
cmp
or
push
add
adc
mov
inc
daa
add
test
leave
aam
inc
or
xchg
or
and
shr
cmp
iret
lea
dec
and
fisttp
push
add
pusha
mov
loope
cmp
cld
add
inc
sbb
fmul
daa
idiv
les
or
das
pushf
and
xor
inc
add
add
and
add
mov
(bad)
push
arpl
sbb
inc
sub
pop
inc
ins
ins
movs
cmps
sbb
retf
push
call
dec
jg
xor
ins
aaa
dec
in
jbe
lds
not
cmp
push
je
imul
loopne
sbb
fistp
pop
sub
sub
int3
mov
fisttp
leave
pop
mov
sub
xlat
add
push
push
out
xor
push
adc
xchg
pop
add
dec
ret
push
stos
push
in
ret
mov
jmp
bound
(bad)
jg
outs
rol
add
mov
mov
or
out
jo
or
push
xchg
add
push
add
sub
or
cmp
push
jo
test
push
push
das
add
pop
add
cmp
jns
add
push
cmps
dec
cmp
pop
add
cwde
(bad)
rcl
xor
or
dec
and
dec
sub
sub
loopne
pop
pop
push
sbb
int3
lahf
cmp
add
push
mov
add
es
dec
sub
movs
loope
test
push
retf
popa
gs
sbb
push
mov
xlat
ss
enter
inc
push
or
sbb
hlt
push
mov
cmc
ds
ficom
jle
ins
loope
mov
add
xchg
rol
push
or
loopne
adc
sbb
cmc
push
push
sub
js
adc
or
jns
lahf
jbe
lods
mov
add
psllw
push
aas
or
cmp
or
jns
mov
adc
push
outs
out
cdq
cmps
sbb
or
addr16
add
or
sahf
or
adc
xchg
adc
mov
scas
cmp
jns
adc
inc
jnp
(bad)
xchg
adc
push
js
or
xor
cmp
jg
(bad)
xchg
add
pop
adc
ficom
(bad)
or
or
and
imul
loop
cs
pop
sbb
cmp
pop
and
and
mov
fist
and
push
or
das
adc
and
or
xor
out
hlt
cmp
pop
pop
dec
scas
sub
cmp
xchg
and
es
add
enter
push
sbb
(bad)
fs
add
je
outs
adc
xchg
cdq
and
dec
stos
or
popf
pop
adc
aam
xchg
xchg
das
push
test
and
lods
add
or
test
jg
and
js
pop
and
add
and
or
cmp
and
aas
outs
jbe
adc
mov
(bad)
sub
cs
cmp
and
ins
(bad)
push
mov
push
nop
dec
mov
js
xlat
add
push
sbb
pop
shl
jmp
leave
cs
push
aas
adc
jb
fist
sub
add
add
or
add
add
push
and
cmp
in
repz
ss
gs
push
push
jmp
or
in
cmps
add
sub
sbb
xchg
ret
and
pushf
imul
or
pop
movd
pop
dec
or
xor
xor
fwait
pop
(bad)
fdiv
or
inc
dec
cdq
test
int
imul
sbb
cmp
aam
add
add
cld
nop
or
sbb
xor
add
enter
mov
and
int
dec
repnz
push
or
repz
or
or
push
(bad)
iret
repz
adc
adc
jae
in
adc
add
adc
or
add
adc
pop
pop
mov
inc
pand
add
dec
shld
dec
mov
sub
test
repnz
outs
push
add
movs
sahf
and
scas
cdq
push
loope
sbb
rol
sub
add
cld
jg
fimul
repz
repz
mov
cdq
mov
lahf
sti
adc
and
jb
xlat
shl
xor
cmp
clc
and
out
push
add
mov
in
or
in
(bad)
mov
rcl
or
add
sahf
cmc
push
cmc
cmp
ss
lea
jle
inc
fadd
or
adc
movs
out
cmps
ret
test
mov
mov
dec
scas
push
fsub
or
aaa
pusha
or
dec
(bad)
pop
or
sub
out
push
(bad)
mov
fsubr
push
int3
movs
aas
or
stos
xor
cmps
mov
and
sub
add
or
mov
les
and
sub
pop
dec
or
(bad)
pop
sbb
(bad)
push
inc
cmp
or
jg
jmp
fadd
adc
add
inc
pop
add
jb
add
add
int
cdq
fwait
push
push
(bad)
sbb
and
adc
rcl
out
or
add
adc
ret
sbb
fisub
mov
or
inc
hlt
xchg
test
mul
xor
add
add
pusha
iret
sub
cs
xor
(bad)
and
dec
cwde
fdiv
push
ffree
mov
mov
adc
mov
add
fs
add
es
xor
int3
xchg
test
add
jo
adc
or
inc
xchg
cmps
mov
or
lds
mov
stc
or
xor
ins
(bad)
fbld
adc
add
jg
fprem
jg
fimul
mov
jge
mov
lock
push
dec
ins
imul
mov
push
or
and
ds
sub
aam
or
xor
mov
and
dec
adc
(bad)
and
adc
pop
add
inc
sub
add
cs
sbb
mov
outs
push
or
jne
and
sub
sub
lods
lahf
popa
lods
mov
add
adc
xor
outs
repz
neg
(bad)
lds
das
xchg
push
inc
cmp
pop
fidivr
or
xor
add
mov
in
ins
inc
add
fisubr
sbb
add
lahf
cmps
test
pop
or
dec
ror
fidiv
dec
mov
sub
add
dec
push
inc
add
add
mov
add
sub
ud2
pop
sub
into
push
or
and
xchg
jg
push
clc
add
xor
xchg
or
jno
jno
mov
dec
movs
inc
mov
outs
push
int3
adc
and
sbb
and
and
dec
sbb
sub
or
xchg
movs
xor
jnp
fld
js
xor
dec
sub
inc
movs
sar
cmp
ret
test
adc
cs
add
add
xor
jecxz
cmp
(bad)
lods
pushf
mov
dec
call
test
add
pop
pop
push
movs
add
dec
cld
and
jecxz
and
test
push
or
stos
movs
xchg
test
add
pop
je
push
mov
inc
aaa
sub
lods
sbb
movs
scas
mov
push
jns
sub
shl
inc
test
es
pop
sbb
adc
inc
xor
adc
ss
adc
push
sbb
add
sbb
mov
cmc
cmp
loopne
adc
shl
xor
cwde
ins
cmp
pop
push
jo
aam
jae
cmp
add
out
pop
and
push
cmp
mov
fsubr
mul
adc
(bad)
dec
dec
and
push
add
push
add
mov
mul
dec
cs
aas
ins
push
cmp
or
dec
xor
jg
pop
and
and
or
cmc
es
popa
movs
test
add
sbb
sahf
ja
push
shl
mov
call
jecxz
adc
pop
adc
adc
mov
aaa
das
adc
jne
scas
inc
add
test
(bad)
movs
pop
add
test
sbb
jne
lea
jg
push
outs
fs
js
inc
push
and
fsub
push
inc
jl
mov
or
sar
mov
xor
add
movs
add
fs
push
outs
rcl
fsub
mov
sub
out
xchg
push
inc
fwait
and
sbb
or
add
and
and
dec
rol
push
into
inc
add
xor
sub
es
jg
aad
ss
addr16
sbb
ins
loope
arpl
or
loop
jge
push
aad
sub
mov
sar
add
inc
push
and
pop
out
inc
pop
test
push
add
pop
lea
(bad)
mov
and
movs
outs
shl
adc
push
jg
push
imul
add
adc
sub
add
ins
sbb
push
es
in
add
inc
push
and
sbb
inc
sbb
aaa
mov
add
mov
add
sub
or
ss
enter
test
jbe
adc
add
rcl
xchg
pop
scas
add
movs
pushf
adc
add
xchg
aam
pusha
xchg
(bad)
js
or
outs
pop
cmp
push
jmp
cmp
sub
es
gs
dec
pop
or
ja
pop
dec
add
add
inc
movs
call
enter
adc
ins
push
and
outs
int3
cmps
mov
dec
jmp
rol
xchg
sbb
test
sbb
mov
aad
push
pop
adc
sub
popa
mov
xor
sbb
jmpw
or
push
mov
clc
jg
das
inc
or
rol
stos
add
mov
(bad)
ret
pop
in
pop
pop
rol
ret
pop
pop
imul
and
push
movs
fdivr
and
inc
push
push
das
add
adc
into
rol
pop
mov
cmp
ja
xor
rol
fwait
mov
pop
or
ins
shl
push
and
sub
push
cmp
test
and
lods
ret
loop
add
push
xchg
mov
popa
sbb
ins
and
add
add
retf
and
pop
ins
pop
or
push
pop
add
jns
loope
ins
or
fdivr
or
das
pop
add
jge
xchg
or
inc
add
push
movd
or
cmp
add
add
js
ret
out
or
add
rol
out
std
pop
pop
pop
cli
lahf
fiadd
add
add
add
retf
adc
cmp
and
mov
icebp
inc
cmp
xchg
adc
mov
push
jae
movs
push
ret
jbe
imul
jb
push
lods
mov
mov
sahf
fs
cmp
sbb
add
push
push
or
xor
add
add
mov
test
adc
pop
sub
fsubr
mov
inc
pusha
ja
(bad)
outs
ins
jne
in
imul
mov
aaa
or
dec
inc
add
ds
mov
inc
add
xor
add
test
sub
push
ja
push
or
test
add
inc
sar
or
jl
call
fwait
jbe
jmp
leave
add
xchg
test
jecxz
mov
mov
push
add
dec
aaa
xchg
call
pop
or
push
xchg
imul
sbb
test
cmp
js
push
pop
inc
bound
sub
dec
iret
ret
inc
stos
or
enter
add
sahf
xor
in
xchg
dec
fisubr
(bad)
fadd
or
ins
bound
and
cmp
aas
mov
xchg
mov
sbb
inc
mov
rol
jmp
test
inc
dec
sbb
test
inc
wbinvd
mov
in
xor
pop
bound
sahf
jno
movs
pop
mov
stc
or
add
pushf
test
xor
ret
cmp
sub
pop
sbb
jmp
test
bnd
inc
loopne
fidivr
push
add
xchg
mov
push
movs
or
jbe
gs
jmp
or
daa
jo
push
in
sub
or
sub
add
sub
cmp
js
or
inc
add
xchg
inc
dec
xor
pop
add
mov
femms
rdtsc
cdq
sub
or
ja
add
adc
dec
push
sub
test
push
jmp
cmp
pop
repnz
adc
lock
sahf
jge
mov
or
fsub
imul
fwait
lea
or
lods
sbb
inc
push
add
or
or
jg
sbb
lahf
mov
and
adc
mov
sbb
or
fiadd
adc
je
pop
and
inc
or
or
push
or
test
sub
push
or
jl
rcl
mov
xor
into
pushf
add
push
inc
sbb
retf
xor
or
outs
(bad)
and
inc
add
and
add
pop
inc
cmp
idiv
push
push
push
add
movs
shr
dec
or
sbb
pop
or
movs
add
or
mov
sub
mov
dec
sub
add
mov
push
sahf
ja
(bad)
cmps
adc
adc
pusha
xor
mov
mov
ss
sub
push
je
(bad)
or
push
es
add
adc
rcr
iret
or
dec
ins
jns
sahf
or
addr16
repz
movups
sub
cmps
stc
mov
adc
adc
or
add
addr16
jmp
retf
fimul
adc
push
sbb
cs
test
add
or
cwde
inc
adc
dec
adc
pop
push
adc
data16
mul
jmp
jne
push
adc
test
out
cmp
push
(bad)
sahf
cmp
xchg
das
aaa
das
das
xor
mov
pushf
int3
out
xor
lods
jb
push
es
add
loop
or
mov
ficomp
adc
adc
xor
lock
push
adc
es
add
fidiv
sbb
cli
or
pop
mov
jne
push
ret
sbb
fwait
cmp
test
je
adc
or
adc
bound
sbb
imul
shl
or
mov
pop
mov
dec
ret
add
and
jmp
cmps
add
(bad)
out
dec
dec
sbb
pop
sbb
mov
add
xchg
add
setge
sub
pop
popa
adc
test
call
xchg
data16
popa
jo
(bad)
cmp
mov
imul
popf
cwde
sbb
fist
loope
add
das
pop
shl
adc
push
pusha
cmp
pop
push
xor
sti
aas
or
add
inc
lods
pop
xor
sub
adc
movs
sub
push
adc
sub
outs
sbb
rcl
add
sub
mov
jne
test
movs
and
mov
addr16
popa
pop
dec
movs
pop
ret
(bad)
mov
xchg
xchg
xor
mov
jae
adc
fnsave
dec
or
ins
fst
cmp
ror
stos
sbb
iret
pop
gs
gs
xor
sbb
ucomiss
call
dec
scas
jae
test
xlat
push
icebp
jb
add
mov
outs
adc
ds
sub
jb
sbb
(bad)
sub
add
xor
push
fs
adc
popa
xchg
inc
add
sbb
popf
push
cmp
mov
rol
add
sub
pop
loope
jecxz
jne
aas
arpl
mov
xchg
out
and
add
es
imul
jmp
out
mov
or
add
push
stc
pop
add
add
xor
imul
cdq
sahf
addr16
cwde
cmp
in
jbe
dec
or
pop
or
pop
jb
in
or
or
mov
add
cmp
ins
jo
jp
pop
pop
mov
and
dec
cmp
fld
cmp
sbb
inc
daa
inc
and
loopne
and
in
jge
cmp
mov
(bad)
or
sbb
xor
cli
push
das
xchg
mov
pop
dec
adc
mov
xor
dec
sbb
popa
mov
popa
sub
and
pop
pop
xor
dec
(bad)
js
loope
in
or
nop
cmc
daa
adc
add
ret
aam
aaa
xor
loopne
dec
cmp
test
pop
push
sti
add
test
aaa
add
add
sbb
push
outs
xor
and
push
and
push
jp
inc
rcr
pop
aad
push
mov
or
or
and
ins
in
push
in
push
jg
loop
dec
or
dec
add
nop
xchg
repnz
pop
and
pop
dec
pop
dec
mov
or
mov
retf
inc
scas
xchg
gs
adc
adc
popa
sbb
or
mov
movs
test
ins
ss
mov
sbb
test
lea
popa
xchg
(bad)
sahf
and
adc
inc
or
mulps
sbb
loop
daa
or
or
mov
push
push
push
(bad)
movups
fisubr
adc
adc
adc
adc
adc
dec
adc
sti
fidiv
push
sbb
add
sbb
add
sbb
sbb
ds
add
adc
sbb
es
and
and
ds
sub
pop
ret
lahf
movs
xor
test
sbb
cmp
sar
add
call
psllw
sub
pop
gs
test
test
test
add
ret
scas
add
daa
add
add
push
lea
mov
rcl
call
(bad)
cmp
loop
inc
push
push
adc
and
pop
scas
aas
or
dec
mov
cmp
dec
xor
sbb
aaa
or
xchg
xchg
add
add
rol
xor
or
inc
add
sbb
mov
mov
add
lds
xchg
sub
sbb
dec
and
sar
add
nop
cmps
or
bound
inc
test
mov
fcmovu
outs
fcmovnu
and
push
ret
pop
dec
add
dec
jecxz
jnp
ds
or
sub
or
dec
ss
inc
stos
nop
inc
sahf
cmps
or
or
dec
int
jnp
xchg
inc
xor
or
push
test
(bad)
adc
mov
test
push
imul
mov
adc
xor
sbb
jecxz
nop
xchg
bound
add
xor
add
and
mov
fcmovb
xor
xchg
(bad)
adc
test
cmp
xor
mov
cmp
loope
and
push
inc
xchg
les
or
or
test
or
xchg
adc
ds
aaa
push
and
jb
ss
dec
fsub
sub
test
call
or
add
add
or
push
inc
test
cs
cwde
xchg
jge
in
leave
dec
fist
out
sub
pop
scas
push
push
jmp
and
adc
dec
add
or
push
xchg
sbb
and
ss
adc
add
pop
mov
xchg
add
add
mov
sbb
sbb
sbb
push
add
es
add
mov
add
jg
adc
cmp
jg
ret
sub
dec
sbb
xor
mov
and
das
sbb
inc
or
or
fnsave
ret
cmp
add
popa
and
lds
inc
loop
push
adc
sbb
push
inc
push
mov
ret
add
or
pop
add
ins
mov
and
adc
sbb
test
push
inc
movs
sbb
pop
push
or
dec
dec
or
and
or
or
inc
cmps
nop
or
and
sbb
add
dec
or
imul
in
sbb
add
call
add
arpl
sbb
push
scas
cmp
les
or
test
adc
add
inc
arpl
sbb
and
xchg
dec
push
add
or
dec
pop
cmp
or
and
push
jle
sub
cmp
add
and
xor
add
mov
frstor
add
mov
mov
add
add
add
jge
or
add
int
or
jbe
or
push
pop
int3
int3
gs
push
aaa
adc
ds
sahf
lea
xchg
ja
scas
imul
sub
push
or
jg
pop
push
or
mov
out
xor
push
pop
mov
sar
sbb
sbb
push
sbb
repz
add
fs
arpl
cmp
popf
sbb
(bad)
dec
jmp
fsubr
dec
rcl
adc
or
ror
mov
enter
push
add
jmp
and
add
fwait
jmp
pop
add
and
or
push
pop
sahf
and
pop
aas
add
and
push
sub
and
or
scas
mov
daa
inc
nop
and
add
xor
iret
sub
sahf
iret
enter
sub
(bad)
sub
daa
sub
or
sbb
push
inc
ret
pop
xor
das
fwait
int
je
xor
push
or
push
xor
xor
int
or
or
stc
add
fs
push
cmp
cmps
nop
pop
cmp
out
sbb
mov
xchg
push
cmp
out
adc
add
ins
sbb
adc
pop
lds
sbb
pusha
mov
pop
add
or
dec
lea
ror
or
and
cdq
adc
mov
xchg
xor
and
dec
stos
or
ins
cmp
inc
dec
add
adc
in
dec
xchg
inc
dec
adc
adc
inc
inc
adc
add
mov
sub
ins
shl
and
loopne
sbb
or
inc
inc
push
add
cmc
push
outs
imul
push
and
and
in
push
rcl
push
jmp
ins
sbb
xchg
jl
inc
cmp
xor
nop
dec
and
sub
or
pop
add
push
cwde
inc
sbb
lods
or
adc
pop
xor
pop
or
add
add
or
inc
ror
sub
xchg
or
mov
test
adc
js
out
push
adc
adc
sbb
mov
add
sbb
mov
sahf
out
and
push
or
inc
adc
mov
and
sbb
sub
add
test
push
cmc
test
icebp
sub
push
scas
sub
mov
ror
out
fistp
or
in
mov
setb
xor
adc
shr
or
adc
in
or
inc
cmp
dec
dec
inc
push
rsqrtps
addr16
add
or
mov
xor
jne
lods
mov
add
xor
inc
dec
inc
or
add
mov
mov
pop
cmp
inc
or
add
adc
or
add
xor
dec
jl
add
jg
xor
cmp
mov
dec
and
js
adc
cmps
xchg
and
and
jo
add
and
cmp
push
arpl
outs
mov
inc
ror
imul
(bad)
ror
push
xchg
jo
push
test
pop
mov
xchg
add
dec
dec
and
mov
inc
push
add
repnz
add
or
adc
cmp
xor
jmp
sub
fcom
pop
or
push
ret
xor
call
pop
ret
add
and
pop
ror
pop
pop
and
iret
or
or
imul
rcr
or
mov
test
push
test
cmp
push
push
or
or
pop
sub
sub
jg
sub
push
jne
and
btr
adc
in
inc
jp
fadd
add
add
mov
push
ins
imul
cwde
add
pop
ss
add
or
jo
rol
aad
sbb
lods
or
pop
pop
dec
push
cmp
loop
adc
ins
je
jmp
stos
call
outs
jae
mov
push
ins
mov
loope
popa
jo
addr16
xchg
mov
outs
cmp
add
lods
div
dec
jmp
cmp
pop
pop
cs
scas
outs
je
arpl
xor
push
mov
(bad)
sbb
js
iret
imul
pop
lods
inc
and
add
retf
inc
jo
pop
inc
sahf
and
and
shl
sbb
add
add
dec
rol
pop
push
sub
mov
and
or
sbb
add
xor
outs
pop
add
call
cmp
rcl
xor
(bad)
or
lods
pop
aaa
cmps
xchg
push
sub
je
and
jmp
sub
movs
movlps
sub
add
push
call
jbe
and
cmp
xor
pop
and
cmps
aaa
adc
cmp
dec
icebp
mov
icebp
leave
push
shl
dec
cmp
ins
scas
and
and
push
xchg
sbb
mov
adc
push
retf
fs
add
push
xor
add
xor
mov
loope
ins
out
cmps
jne
lods
add
ror
dec
icebp
(bad)
and
inc
gs
or
jne
cwde
or
push
mov
xor
sbb
jg
inc
das
or
sbb
push
jb
add
add
add
adc
pop
inc
push
ret
add
aam
xor
dec
add
ins
or
or
cwde
push
xchg
or
sub
inc
dec
out
and
adc
aas
sbb
xor
push
push
mov
add
out
nop
dec
ss
or
dec
call
xor
add
add
mov
jnp
jg
shl
cwde
sbb
retf
aam
pop
pushf
adc
fcom
push
dec
pop
add
or
rcl
shl
in
pop
cmp
push
and
add
sub
or
add
into
enter
xor
daa
sbb
add
inc
mov
dec
rcl
pop
pop
or
cmp
mov
inc
push
mov
adc
mov
add
movs
ss
mov
in
mov
and
outs
addr16
nop
mov
pop
ss
jae
jecxz
mov
cmps
mov
push
fist
mov
sub
rcpps
hlt
push
lods
mov
jmp
and
or
add
push
sbb
xor
add
add
push
mov
adc
ja
aad
out
rcr
and
dec
pop
inc
xor
loope
jbe
pop
jb
adc
push
stos
test
mov
push
sbb
test
push
clc
inc
mov
or
add
aaa
sub
les
out
push
mov
jo
adc
adc
jecxz
add
call
cmp
cmp
lock
mov
add
ror
mov
xchg
jmp
add
and
jp
add
cli
sbb
xor
push
add
push
xchg
mov
cs
or
loop
sbb
dec
or
adc
fimul
or
add
or
cmp
add
adc
add
adc
jle
adc
daa
adc
adc
inc
adc
cmp
data16
push
sbb
push
sbb
sub
pop
adc
cmps
and
and
push
and
pop
add
sub
adc
adc
or
cmp
sbb
mov
inc
add
and
loopne
jecxz
add
pop
dec
pop
mov
dec
pop
push
and
dec
adc
and
push
mov
add
maxps
rol
imul
add
pop
mov
pop
mov
or
ret
mov
movaps
inc
pop
xlat
xor
adc
add
stos
lea
sbb
push
sub
mov
(bad)
js
dec
add
aas
fnstenv
push
aas
(bad)
jbe
push
cmp
cmova
sbb
in
and
ror
sub
cmp
and
jl
mov
mov
or
push
(bad)
pop
(bad)
rcl
mov
int
push
jmp
scas
rol
cld
or
or
inc
sub
cmp
pop
in
int3
inc
or
mov
or
mov
fistp
adc
mov
icebp
fstp
jo
dec
outs
pop
and
or
ret
out
and
jne
add
push
cmp
fiadd
bound
push
and
ret
sbb
mov
adc
pop
xor
out
arpl
mov
mov
inc
cmp
mov
daa
in
push
dec
mov
xchg
pop
xchg
add
adc
in
mov
mov
pusha
adc
add
shrd
mov
or
test
fcmovb
movs
sbb
sub
mov
in
inc
mov
add
shl
fs
les
rol
push
ins
ins
sbb
push
add
inc
pop
add
mov
sub
sub
test
aaa
xchg
and
enter
sahf
xchg
dec
jmp
push
loope
enter
jo
fmul
or
push
and
push
add
push
mov
sar
movs
mov
add
cwde
push
inc
sub
mov
mov
ror
xchg
shr
ss
mov
mov
stos
inc
add
loop
retf
sub
or
inc
xchg
int3
xchg
pop
add
les
and
or
add
mov
or
into
adc
dec
add
push
add
pop
mov
cmp
or
out
dec
(bad)
or
jmp
jmp
loopne
dec
imul
mov
mov
aaa
jecxz
shl
les
push
pop
or
or
sub
pop
push
xchg
arpl
xchg
push
inc
xchg
(bad)
and
push
add
int3
retf
add
jg
hlt
mov
and
pop
mov
pop
es
ds
es
push
out
pop
std
mov
mov
sub
add
mov
xor
or
or
push
add
outs
add
loopne
sbb
add
add
sbb
add
bound
icebp
jg
outs
outs
push
inc
adc
dec
adc
imul
pop
pop
sub
cmp
inc
sub
cmp
aas
ret
mov
in
retf
and
jle
cmpxchg
cmps
fdiv
dec
pop
dec
dec
(bad)
lea
push
xchg
sub
push
add
inc
loopne
je
in
or
adc
shl
add
or
call
imul
sbb
pop
mov
sub
add
pushf
mov
cdq
ss
gs
xchg
mov
js
mov
push
adc
sub
movs
or
mov
push
push
or
xchg
mov
sar
or
imul
add
add
or
dec
ret
xchg
mov
sbb
cwde
and
xor
sub
or
mov
or
xchg
dec
pop
sub
mov
add
push
xchg
loope
lea
add
inc
or
add
adc
xor
jb
mov
or
cmp
cs
repnz
push
add
dec
sbb
in
inc
and
mov
sbb
enter
mov
outs
sbb
inc
adc
sbb
add
or
mov
(bad)
inc
inc
mov
icebp
leave
es
ins
push
clc
(bad)
mov
inc
test
dec
adc
mov
pop
sbb
and
outs
mov
or
loope
xor
mov
or
jo
xchg
adc
or
ins
or
jne
pop
and
sahf
mov
lds
and
add
adc
test
mov
xchg
pop
lock
pop
dec
adc
test
mov
push
adc
pop
add
call
xchg
es
add
mov
inc
es
xor
sar
sbb
add
xor
sbb
inc
push
ds
mov
and
cmp
sti
or
loope
jge
adc
mov
pop
and
dec
add
mov
aas
jo
adc
cmp
adc
add
push
push
sbb
add
mov
push
adc
out
daa
or
push
pushw
adc
aaa
pmuludq
adc
adc
ds
ret
stos
adc
adc
add
aaa
pushf
or
or
adc
cmp
enter
add
(bad)
jg
add
jns
push
or
or
xchg
lea
xor
pop
ficom
test
add
mov
mov
in
daa
adc
add
(bad)
push
mov
cmps
cdq
push
adc
rcr
adc
std
fistp
sub
add
pop
ins
ret
xchg
xor
dec
pop
sti
mov
scas
ins
out
scas
or
jae
dec
add
arpl
sub
jl
adc
add
shl
cdq
or
xor
mov
sbb
xchg
aad
jno
es
and
push
(bad)
rol
mov
or
jo
inc
dec
adc
nop
xchg
add
add
rcl
mov
xor
jmp
push
push
add
add
pop
add
add
fsub
add
jp
les
pop
lods
mov
cmp
hlt
xor
adc
or
and
fimul
pop
or
and
or
shl
push
or
jmp
add
or
or
aad
or
push
push
ror
push
push
adc
push
adc
jg
(bad)
iret
(bad)
out
or
add
mov
inc
push
lock
or
arpl
mov
xor
dec
popf
jbe
imul
loopne
mov
cmp
dec
mov
xchg
mov
push
inc
adc
sbb
pop
lahf
mov
adc
ret
push
or
pop
fwait
pusha
mov
sti
jecxz
lods
or
jb
and
enter
rol
sbb
ss
outs
jo
and
mov
or
shr
add
xchg
sbb
fst
adc
loop
int
ror
xor
push
daa
xchg
sub
loope
(bad)
adc
jge
add
mov
fimul
inc
cs
fild
call
nop
dec
sub
dec
sbb
push
inc
or
jecxz
xor
dec
adc
ss
add
sbb
es
movs
jne
and
jmp
or
pop
xor
cmp
pop
call
jle
inc
inc
xor
xchg
dec
retf
jecxz
or
or
sbb
lea
pop
daa
cmps
push
or
test
js
je
or
retf
loope
dec
mov
push
push
repz
inc
ja
push
movups
cmps
cmc
mov
jo
push
inc
mov
pop
mov
pop
adc
ror
push
push
ror
fmul
xor
push
mov
sti
mov
sbb
add
push
pop
and
scas
jmp
xchg
sbb
aaa
sbb
fwait
int
mov
pop
sbb
sbb
sbb
sbb
sbb
cmp
repz
ror
and
and
cmp
sub
sub
sbb
sbb
stc
idiv
das
add
sub
mov
scas
pop
arpl
mov
test
push
push
or
xor
jo
add
pop
cmps
inc
(bad)
and
jge
mov
pusha
mov
ret
lock
ror
mov
jg
sbb
and
rcl
or
or
push
adc
inc
cs
mov
xor
(bad)
retf
clc
inc
sbb
inc
leave
nop
mov
pusha
int
mov
rcr
pusha
scas
mov
es
push
cmc
push
mov
and
xor
sbb
or
pushf
test
or
les
ror
fbld
adc
sbb
lods
inc
fdivr
not
or
cld
xor
or
add
mov
or
sbb
jo
lods
dec
das
jmp
sbb
dec
mov
push
and
lods
pusha
jmp
(bad)
dec
mov
or
adc
pop
fmul
cli
push
sbb
sub
and
xchg
dec
adc
push
(bad)
nop
cmps
push
xor
push
add
mov
mov
mov
pop
movs
add
and
push
or
dec
in
imul
sbb
add
mov
xor
push
sub
or
xor
mov
pushf
inc
ret
push
push
(bad)
por
mov
iret
adc
push
gs
ins
lods
(bad)
pusha
mov
popa
add
stos
lea
shl
sub
ins
mov
cmp
adc
mov
add
inc
xchg
inc
rol
lods
push
out
popa
pusha
xor
pop
push
sbb
jg
add
das
jae
sbb
adc
and
push
popf
xchg
pop
test
adc
and
jge
sub
out
mov
and
das
or
aam
push
adc
mov
adc
jno
inc
mov
inc
adc
lds
dec
sub
mov
icebp
int3
sub
or
push
or
cwde
pop
icebp
sub
adc
add
push
push
add
cmp
xor
inc
mov
or
lea
xor
sub
mov
or
adc
les
fnstcw
dec
push
sub
push
or
mov
xchg
mov
or
cmps
adc
and
adc
dec
xlat
xor
mov
dec
clc
push
or
or
aaa
(bad)
data16
pshufw
sahf
(bad)
xchg
adc
xor
pop
or
adc
xor
into
xchg
add
adc
jnp
(bad)
cmp
pop
or
add
or
add
inc
retf
std
sub
sbb
es
dec
icebp
divps
add
out
or
sub
dec
mov
aaa
add
outs
ins
dec
jmp
add
inc
gs
sub
adc
mov
(bad)
push
test
retf
and
dec
add
sbb
or
add
daa
add
pop
dec
push
pop
sahf
or
push
jl
cmp
sbb
mov
das
outs
push
mov
inc
pop
and
inc
inc
outs
jne
fst
cmp
test
aaa
nop
sbb
loope
mov
bound
cmp
adc
adc
dec
add
and
pushf
call
sub
inc
push
shl
cmps
or
add
retf
mov
fwait
jae
pop
test
sub
pop
leave
add
sahf
sub
pop
sbb
pop
sbb
rol
sahf
add
add
or
mov
mov
data16
and
sbb
xor
adc
sbb
xchg
nop
sub
add
add
out
push
dec
add
add
push
push
les
xchg
pop
add
adc
sub
or
aad
add
fbld
and
aas
xor
add
or
or
rcr
add
add
mov
add
push
pop
cmp
mov
sub
lods
xchg
mov
data16
pop
adc
or
movs
or
scas
adc
push
fsub
or
jo
loopne
inc
adc
hlt
jg
rcr
pop
adc
add
xor
mov
push
add
push
pop
add
sbb
leave
jae
sbb
sbb
sbb
mov
cmp
sbb
dec
xor
sbb
sbb
push
sahf
int3
out
pop
fadd
cmps
add
push
call
and
mov
arpl
in
mov
pop
and
mov
pop
or
push
sahf
pop
cmp
sub
and
pop
cmp
xchg
push
push
pop
sub
sub
shl
add
push
rol
xchg
fmulp
add
retf
or
inc
and
push
or
or
test
cwde
shr
xor
and
or
xor
(bad)
(bad)
aas
push
mov
stos
cmp
pop
and
bound
xchg
test
sbb
inc
cs
cmp
movs
mov
cmp
xor
(bad)
not
cmp
add
inc
loopne
js
outs
push
push
and
mov
sahf
cmp
jg
xor
add
or
daa
dec
jmp
inc
fcmovnb
dec
cmp
idiv
add
xchg
dec
inc
mov
push
inc
push
or
push
dec
call
mov
fdiv
push
and
adc
or
or
or
or
sbb
adc
mov
ror
add
bound
mov
test
add
jo
ja
mov
sbb
sub
call
mov
test
data16
jno
mov
neg
jne
pop
xor
in
sub
push
inc
fisttp
lods
sbb
xor
retf
xor
mov
les
sub
xchg
mov
and
aas
bound
sub
and
pop
and
lahf
inc
and
lods
ins
sub
adc
adc
mov
inc
stos
das
dec
jnp
add
inc
push
cmp
cmps
retf
push
mov
xlat
scas
stos
jbe
jns
pop
and
add
cwde
or
ins
fild
fs
rcl
push
mov
mov
les
ja
pop
jne
in
jno
xor
fld
jb
(bad)
adc
mov
dec
mov
movs
pop
push
dec
lods
rcr
pop
push
or
sbb
xor
test
and
shr
sub
icebp
mov
pop
xor
or
dec
add
jmp
or
test
pusha
movs
adc
or
adc
ds
outs
bound
mov
aam
push
mov
(bad)
jmp
aam
pop
add
clc
bound
lahf
test
dec
dec
or
xor
(bad)
rcl
leave
push
add
xchg
or
ret
xor
inc
js
inc
pop
mov
xor
mov
xchg
aam
addr16
adc
push
sbb
add
inc
aaa
dec
lods
xchg
das
pop
dec
mov
dec
or
cmp
or
mov
sti
add
push
mov
sbb
jno
jo
ins
sbb
pop
(bad)
mov
popa
xor
and
test
daa
mov
pop
sub
adc
add
rcr
add
mov
add
add
cmp
sub
pop
adc
js
mov
(bad)
or
jbe
xor
mov
hlt
and
sbb
imul
xchg
shr
sbb
and
sbb
shl
inc
and
adc
push
dec
aaa
pop
add
dec
push
scas
mov
add
pushf
add
repnz
xor
popf
or
daa
inc
push
pop
cmp
add
jmp
adc
inc
and
pop
icebp
ins
pusha
inc
add
popf
dec
pusha
dec
es
and
add
loope
fnclex
push
ror
nop
push
je
loopne
ins
mov
es
pop
loop
test
lods
jae
repnz
mov
or
jo
mov
sub
mov
jg
ror
inc
inc
js
add
or
cmovp
jbe
cdq
addr16
nop
test
sbb
sub
adc
xor
enter
add
xor
imul
cmc
sub
daa
cld
xor
fadd
dec
leave
out
loope
add
loopne
or
and
xchg
mov
xor
call
add
add
jae
push
movs
push
adc
sub
test
push
shl
add
dec
jecxz
mov
aaa
and
inc
add
or
ja
xor
cmp
or
cmps
mov
xchg
push
in
or
push
fs
or
sbb
jbe
and
push
push
add
aas
push
push
xor
movd
mov
iret
pop
and
cmp
sahf
or
or
adc
mov
push
popf
jns
dec
or
adc
pop
jb
xorps
aaa
push
push
pop
dec
xor
out
adc
push
adc
adc
cmp
cmovnp
leave
jg
add
add
push
in
or
mov
add
adc
mov
or
ins
sub
call
aam
inc
adc
jecxz
loopne
inc
add
jmp
scas
das
jns
adc
and
push
dec
and
inc
dec
mov
adc
(bad)
jo
mov
adc
es
jno
add
push
aaa
pop
sbb
and
push
add
mov
push
adc
pop
mov
test
and
dec
add
adc
and
daa
adc
pop
daa
dec
jl
or
pushf
mov
cmp
adc
ins
sub
or
shl
and
push
add
add
cmp
dec
pusha
add
int3
sub
push
retf
xor
mov
cs
test
jp
push
movs
add
or
popf
sbb
push
cmp
xor
popa
or
xchg
add
sbb
movs
add
aam
adc
mov
mov
sub
mov
inc
pusha
add
push
xchg
fdivr
mov
inc
ss
mov
or
cmp
sub
sbb
fsubr
test
dec
loopne
jns
add
sub
es
sbb
add
shr
je
out
getsec
popa
inc
add
ffree
stc
or
add
sub
mov
mov
pop
jp
pop
mov
bound
shr
or
sub
add
call
or
and
mov
icebp
add
and
jbe
add
add
jno
mov
mov
adc
xchg
xchg
jmp
xor
mov
push
fsubp
lods
or
pop
cmp
cmp
add
mov
or
push
leave
jbe
and
mov
dec
arpl
jmp
sbb
ss
ret
xor
mov
xchg
test
gs
adc
jge
adc
dec
xchg
pop
mov
daa
test
lods
push
nop
sbb
and
jbe
dec
mov
push
add
nop
push
stos
imul
mov
push
fild
aaa
cmc
or
shl
pop
dec
jne
jne
inc
mov
or
xor
mov
dec
cmp
(bad)
bound
push
(bad)
std
push
and
adc
jo
daa
les
pop
pop
jae
jae
add
or
std
mov
dec
sbb
cmp
sub
movups
push
and
aad
mov
sbb
and
daa
fs
aam
or
outs
xor
enter
add
and
in
and
fs
lods
or
xor
pop
add
rol
(bad)
mov
sahf
jge
mov
pop
or
sub
(bad)
nop
or
push
push
or
pop
test
inc
and
add
sahf
adc
adc
cmp
adc
xor
aas
jmp
sbb
adc
push
add
xor
ror
pop
fdiv
or
das
sbb
cmps
nop
mov
add
cmpxchg
sahf
sbb
add
mov
pop
and
test
inc
and
sbb
inc
sbb
push
mov
fwait
xor
jge
pop
or
push
jbe
out
push
mov
and
fsub
dec
sbb
cmp
adc
ret
xor
les
mov
jmp
mov
out
sub
or
sub
push
jb
sub
aad
push
add
dec
mov
fld
add
scas
fs
jbe
in
faddp
movs
or
mov
sbb
adc
imul
pop
fwait
inc
or
sub
xor
jo
arpl
adc
and
dec
or
test
cmp
lea
loopne
outs
fiadd
xor
std
and
adc
leave
inc
sbb
add
int3
adc
jmp
ud2
inc
adc
or
or
cs
add
outs
out
cmp
(bad)
mov
pop
adc
loope
int3
dec
push
mov
pop
sub
adc
aas
ja
xchg
sbb
add
xor
jp
add
clc
call
add
adc
adc
push
inc
push
sbb
mov
add
jle
and
ins
loopne
sbb
icebp
jp
sbb
(bad)
sbb
or
dec
add
adc
inc
ret
or
and
or
inc
cmps
sbb
scas
or
mov
and
sbb
ret
mov
jp
xor
dec
cmp
cs
inc
push
inc
xor
imul
in
xor
leave
mov
pusha
cmp
xor
add
dec
(bad)
adc
(bad)
movs
and
sbb
push
add
loopne
adc
lods
sbb
mov
js
lahf
mov
pop
mov
gs
adc
inc
jmp
or
mov
adc
and
pop
sbb
mov
or
or
add
cmp
add
sbb
addr16
scas
adc
add
call
add
push
add
and
add
adc
add
dec
and
cmp
pop
and
and
xchg
out
leave
pop
push
adc
imul
and
dec
push
pop
shr
daa
scas
or
or
or
fsubp
push
mov
adc
pushw
pop
xor
sub
push
loop
mov
mov
fistp
pop
loope
es
sub
add
or
and
mov
or
pop
or
add
or
cmp
push
das
aaa
inc
xor
or
or
add
or
add
daa
xor
xor
sub
stos
test
or
pop
lods
sub
or
pop
sbb
pop
cmp
xor
jo
mov
or
movs
sub
add
adc
pop
sub
jp
data16
call
sti
mov
out
shl
imul
pop
and
arpl
inc
add
enter
retf
test
addr16
fadd
push
jno
push
add
adc
jno
int
mov
jl
hlt
(bad)
aad
adc
or
cwde
ror
mov
sub
or
xor
sub
jne
dec
add
or
ret
arpl
scas
adc
pop
pop
xor
sti
pop
mov
test
std
bound
test
or
loopne
pop
pop
mov
jns
pop
sbb
jno
pop
add
and
imul
add
test
lock
xchg
push
adc
fistp
and
ss
scas
and
fdivr
adc
fst
or
daa
or
xchg
rcr
movs
or
les
bound
add
mov
por
inc
add
dec
ja
in
mov
sbb
adc
das
xor
or
cdq
test
or
pushf
int3
push
sub
add
sahf
sgdtd
adc
xor
xchg
add
pop
ins
inc
xchg
test
push
stos
fnsave
mov
add
lea
add
cmp
inc
jae
nop
sub
lahf
add
push
fwait
mov
jmp
inc
xor
call
data16
sbb
ficomp
add
shr
int3
sbb
inc
nop
or
adc
or
dec
push
pop
pop
push
lock
loopne
mov
sbb
repz
jp
add
push
adc
cdq
fistp
sbb
add
aad
and
xor
call
nop
cs
and
xor
bound
shl
xchg
jo
adc
cmp
adc
adc
xrstor
mov
push
xor
stos
shr
dec
adc
push
das
jo
mov
test
pushf
mov
sti
or
dec
push
sbb
popa
fwait
or
jb
xor
or
xchg
aaa
rol
sub
mov
pusha
add
into
in
lods
push
imul
jae
dec
fsub
xchg
popa
and
mov
or
test
ret
movs
mov
cli
mov
push
and
adc
mov
es
inc
pop
add
xlat
mul
pop
or
or
cmp
imul
(bad)
arpl
fadd
xor
jge
out
xor
add
dec
loop
mov
pop
sub
jecxz
sub
outs
push
bound
sbb
xor
or
addr16
imul
adc
adc
adc
or
cmp
adc
inc
dec
and
loopne
enter
pop
mov
dec
adc
mov
shr
push
rcr
pop
push
sbb
(bad)
je
mov
add
pop
sbb
das
aaa
or
and
dec
adc
xor
out
mov
add
xor
fsub
and
push
es
out
and
daa
and
add
and
add
and
data16
jl
cmp
pusha
adc
and
and
cmovl
xchg
sub
pop
sub
sub
and
outs
and
and
test
push
xor
dec
mov
push
and
out
test
mov
push
out
xor
push
aaa
out
pop
and
pusha
add
sub
pop
or
mov
push
xchg
and
in
adc
add
dec
lods
or
dec
call
sbb
xchg
test
add
pop
adc
and
test
adc
xor
mov
(bad)
loopne
jmp
ins
fsubr
or
sub
push
cmp
xchg
cmp
sub
dec
and
add
out
push
dec
add
test
xor
push
push
cmp
pop
push
fcom
enter
fild
push
sub
add
es
mov
or
push
and
pop
or
push
outs
and
aas
mov
sbb
push
adc
and
stos
ins
mov
inc
vpmacsdql
adc
shr
les
or
and
inc
mov
fs
jmp
jns
xchg
pop
outs
xchg
mov
retf
push
inc
addr16
fs
mov
ins
and
push
push
aad
mov
mov
or
inc
sub
mov
mov
mov
loope
jmp
retf
sub
test
add
mov
pop
mov
xor
and
xchg
push
(bad)
adc
pop
xchg
inc
cmp
jge
addr16
shl
inc
rcl
or
adc
sbb
inc
iret
js
shr
and
test
addr16
and
xor
pushf
and
mov
inc
add
stos
aas
cmp
xor
test
push
push
pop
shl
(bad)
popf
xor
mov
sub
dec
xchg
and
add
ficom
jbe
dec
push
or
mov
ss
jo
mov
adc
adc
fmul
sub
jo
(bad)
fwait
jnp
shr
push
adc
push
or
nop
or
call
jo
xlat
mov
or
xor
add
or
sub
push
add
xchg
sub
mov
movntq
and
fisubr
sbb
or
inc
push
psubusb
or
adc
xor
lods
xor
data16
outs
adc
xchg
and
and
sbb
jge
sbb
add
idiv
sub
sub
pop
and
pop
popa
sub
pop
xor
popa
je
and
adc
adc
sbb
pusha
movs
sahf
stos
dec
loop
popa
pusha
sbb
xor
inc
sbb
xor
jle
inc
inc
call
aam
pop
add
ret
mov
add
unpcklps
jo
add
and
ret
scas
or
xor
xchg
xlat
add
adc
fabs
adc
jp
cmp
adc
sub
inc
pushw
(bad)
jmp
jno
add
sub
xchg
and
adc
or
or
scas
fnstsw
pop
outs
push
cmps
add
call
inc
add
sbb
sub
xchg
cmc
scas
or
inc
bound
cli
mov
mov
(bad)
loopne
rcl
mov
push
test
adc
cwde
and
fstp
and
sbb
jo
push
fs
mov
add
or
xchg
or
xchg
test
add
add
fs
jbe
loope
int
pusha
aad
mov
cmc
out
sub
in
and
arpl
aaa
inc
sbb
mov
dec
repnz
adc
sub
or
test
inc
popa
popa
cmps
sub
or
ret
inc
pop
fistp
in
fimul
pusha
sub
add
movs
mov
xchg
adc
sub
push
cli
cmp
test
mov
inc
not
pop
js
push
les
unpckhps
cli
push
pop
clc
or
hlt
sub
adc
add
aam
popa
or
daa
mov
or
or
das
cmps
xor
dec
pop
mov
(bad)
inc
push
jmp
daa
dec
adc
push
out
add
rcr
mov
imul
(bad)
movs
jmp
or
mov
xchg
inc
popa
mov
stc
inc
popa
dec
std
add
shl
mov
pop
pop
add
inc
and
outs
xchg
add
lea
rcr
(bad)
outs
sbb
loop
nop
mov
cli
cmps
repz
push
aaa
or
shl
add
sub
mov
mov
xor
inc
shl
xor
rol
mov
popa
pop
out
arpl
add
je
ins
idiv
push
dec
js
mov
cmp
add
add
repnz
(bad)
pop
or
inc
adc
push
(bad)
sub
lock
adc
(bad)
imul
les
mov
loope
adc
mov
pop
dec
and
add
push
outs
mov
icebp
add
add
adc
ror
mov
jno
sbb
sbb
or
adc
or
cdq
or
cdq
pop
add
push
or
cdq
and
push
test
ror
inc
aaa
fisubr
fs
dec
push
inc
xor
ins
loopne
and
and
mov
loope
lahf
lock
ror
sbb
cmp
shl
inc
inc
add
shl
sbb
pop
ror
mov
mov
test
popa
add
adc
inc
rol
call
add
or
lock
inc
pop
add
push
cwde
adc
test
adc
add
and
push
nop
shl
shl
gs
cs
dec
enter
es
adc
xor
push
sbb
adc
shl
ret
push
sbb
or
mov
sub
loopne
aas
and
add
xchg
add
fild
mov
(bad)
loopne
es
mov
mov
jl
popf
sub
push
test
adc
and
and
loope
xor
jbe
or
or
inc
push
shr
push
pop
xor
outs
enter
repz
movs
and
imul
dec
cmp
add
shl
lds
jbe
xchg
dec
(bad)
jb
mov
or
or
mov
mov
push
(bad)
add
and
retf
cdq
and
imul
pop
mov
shr
mov
pop
cdq
and
mov
scas
adc
push
mov
adc
das
lods
in
mov
push
adc
imul
jmp
pusha
mov
movs
cs
outs
inc
adc
cld
pop
dec
jmp
add
add
xor
xor
es
push
xor
inc
ja
add
adc
add
shl
or
lea
add
dec
or
sbb
push
push
ins
scas
jge
sbb
and
and
or
stos
add
(bad)
push
and
movs
push
dec
xchg
(bad)
and
dec
sahf
out
sub
sub
jns
jns
cs
xor
xchg
out
xor
xor
sahf
dec
sahf
xor
rol
push
ret
aaa
add
inc
inc
sar
(bad)
(bad)
mov
cmp
enter
push
inc
push
imul
jge
add
out
and
xchg
pop
dec
mov
or
mov
sar
pop
mov
xchg
inc
fs
popa
pop
or
add
push
call
and
inc
lea
or
add
adc
adc
ret
add
stos
add
cmp
or
sub
xor
or
sar
adc
repnz
scas
ins
fucomi
test
dec
inc
mov
push
out
repnz
test
add
xchg
mov
xchg
ds
out
jp
and
es
and
sbb
loopne
cmps
mov
pop
add
sbb
sbb
pusha
not
int3
pop
ret
add
xchg
or
in
dec
pop
push
jecxz
scas
ins
call
or
sub
add
dec
pop
jmp
push
add
push
push
add
pop
and
or
sbb
xchg
fwait
loopne
cmp
into
jg
and
or
pop
add
adc
add
add
fist
in
pop
inc
adc
sbb
or
cmps
loopne
loopne
fistp
out
cmp
or
or
pop
js
out
dec
pushw
or
sub
aas
add
or
inc
add
or
fs
dec
or
enter
cdq
cmovo
adc
mov
outs
cmps
sbb
mov
bound
xchg
ror
sub
or
add
sub
mov
mov
sub
test
and
and
adc
sub
mov
jo
inc
push
mov
or
dec
mov
push
add
fild
lods
xchg
push
daa
pop
and
xor
les
imul
and
add
pop
add
xor
sbb
and
sbb
sub
or
xor
popa
add
in
add
add
pusha
or
add
sbb
prefetch
push
(bad)
fidiv
pop
popa
mov
pusha
ds
mov
mov
adc
rcl
adc
sub
inc
xor
ins
ins
in
inc
adc
pop
jle
mov
sub
adc
xchg
inc
adc
mov
leave
jg
add
aaa
adc
call
add
pop
adc
mov
xor
add
push
es
ds
push
adc
hlt
sub
mov
dec
adc
adc
add
adc
push
add
fistp
es
adc
adc
lods
std
imul
sub
inc
jmp
lods
mov
push
sbb
and
xchg
or
cmp
cld
sub
sbb
neg
sbb
(bad)
sbb
sbb
sbb
mov
outs
fidivr
sbb
sbb
push
loopne
mov
popw
push
pop
push
cmp
add
cmp
jle
pop
sbb
dec
adc
and
sbb
add
sbb
mov
add
sbb
sbb
adc
lock
push
sbb
adc
sbb
push
sbb
adc
add
sub
fidiv
sahf
sbb
pop
and
push
enter
push
add
sbb
pop
pop
sub
add
sub
sub
and
xlat
fstp
sbb
aam
sbb
cs
mov
push
sbb
adc
pop
cld
sub
(bad)
and
and
and
test
or
sbb
and
pop
or
dec
ss
dec
mov
cmp
and
dec
sbb
imul
ins
scas
jno
add
ss
or
outs
loopne
inc
dec
push
data16
test
lahf
xchg
jg
add
sbb
adc
mov
sbb
loopne
rol
gs
hlt
mov
outs
jb
add
(bad)
xor
sub
and
sub
push
daa
add
(bad)
rcr
or
(bad)
(bad)
push
lods
xchg
inc
push
sub
add
in
mov
pop
sub
das
add
sub
and
cmp
leave
nop
add
lods
xor
sbb
fild
xor
push
fsub
loopne
push
dec
xchg
or
fild
adc
arpl
adc
mov
and
test
jae
pop
xchg
adc
aas
cdq
xchg
pusha
in
mov
cs
and
xor
cwde
sbb
mov
mov
cmp
add
dec
test
adc
push
xchg
and
fcmovbe
or
ja
ins
pop
push
add
cmp
add
add
add
push
cmp
or
sbb
xlat
addr16
or
or
sbb
push
xlat
inc
sub
fsubr
push
xlat
popf
inc
cmp
mov
and
es
pushf
fldlg2
or
or
push
rcl
mov
or
dec
or
ror
fiadd
mov
test
jle
jno
or
jle
popf
sub
pop
loopne
pop
push
jg
psubsb
inc
pop
(bad)
clc
or
cmp
inc
inc
push
es
rol
lods
dec
or
inc
retf
sti
inc
or
or
or
or
or
pop
aad
aaa
mov
sub
sbb
scas
rcr
or
pop
out
or
inc
add
es
jo
sub
icebp
add
add
pop
push
mov
inc
pop
sbb
or
inc
add
sub
or
adc
in
add
add
adc
mov
push
mov
add
adc
push
inc
or
aas
out
sbb
ss
cmp
pop
dec
push
les
add
in
add
add
adc
js
jo
adc
add
adc
or
adc
fild
inc
jmp
adc
pop
mov
and
stos
lahf
xchg
rol
cmps
pop
nop
mov
add
loope
or
mov
pop
cld
sub
retf
dec
pop
sbb
enter
lahf
and
in
mov
out
jmp
and
and
xor
inc
or
jns
xchg
outs
cmp
jnp
cmp
fstp
sbb
aas
ds
or
(bad)
xor
lods
movs
(bad)
pop
add
xchg
mov
sub
push
add
xchg
pusha
scas
add
in
pop
or
inc
xor
or
daa
mov
lods
daa
dec
or
dec
push
push
das
adc
xor
add
int
push
add
mov
mov
or
daa
jp
movs
test
fdiv
mov
adc
dec
sub
adc
adc
es
jns
mov
adc
pop
push
sbb
aas
xchg
adc
mov
add
sub
ja
and
add
mov
dec
sub
cmp
mov
cmovle
inc
mov
jnp
daa
inc
or
pop
fwait
in
jbe
or
sub
pop
and
ds
and
lahf
dec
and
sub
mov
and
repnz
push
add
or
mov
pop
mov
cmc
add
out
(bad)
and
mov
inc
xor
rcr
push
add
or
sub
mov
cmc
add
and
adc
xchg
or
add
push
rol
mov
jp
sbb
mov
fmul
repz
mov
adc
adc
xchg
pop
adc
push
push
leave
pop
imul
push
sbb
inc
push
jb
pop
cmp
mov
push
sub
dec
mov
add
sti
out
lods
or
sbb
adc
push
and
inc
add
sti
mov
add
cmp
or
mov
das
inc
mov
push
cdq
mov
xor
push
gs
pusha
fldcw
inc
imul
adc
or
or
pop
shr
into
mov
loopne
pop
xor
pusha
imul
pusha
or
imul
inc
mov
or
jb
add
pop
sbb
aas
(bad)
or
add
jmp
sub
jmp
cmp
retf
cmp
sti
xor
xor
dec
dec
cmp
enter
and
mov
and
add
pop
stos
std
daa
add
sub
inc
shr
call
lahf
inc
addr16
dec
and
mov
sbb
dec
fadd
push
xchg
and
shr
rol
mov
add
cmp
add
xchg
mov
or
add
push
xchg
dec
adc
add
jne
sbb
adc
ret
clc
pop
sbb
xchg
ret
outs
test
xchg
dec
loopne
sbb
mov
fnstenv
les
cmp
rcl
inc
push
push
pop
or
push
pop
xchg
or
shl
jecxz
fidivr
xor
add
mov
dec
mov
popa
push
sbb
and
push
pop
sub
out
or
adc
adc
imul
inc
xchg
xchg
xor
fst
(bad)
cmp
(bad)
out
and
addr16
mov
xor
popa
pop
adc
cmps
popa
data16
popa
sbb
aas
jmp
es
jno
loopne
out
call
retf
loopne
adc
or
add
push
push
pushf
adc
xchg
aaa
adc
adc
mov
and
add
je
cmp
sbb
cmps
ins
push
cmc
pop
sbb
sbb
mov
adc
sbb
mov
inc
pop
or
outs
pop
adc
mov
add
add
add
scas
inc
jge
or
sbb
addr16
(bad)
ror
out
add
(bad)
fcmovb
pop
push
cmps
adc
call
add
or
add
xchg
dec
push
sbb
fwait
mov
jae
push
cmp
in
add
test
and
movs
pusha
ins
add
sub
popa
mov
sti
rol
mov
popa
ins
into
sbb
movs
pusha
popf
xchg
mov
int3
or
or
push
push
dec
pop
bound
inc
mov
push
add
lea
adc
push
jl
xor
std
mov
xor
adc
cdq
or
xchg
xor
jno
jl
stc
add
repz
je
inc
rcr
and
dec
jo
pusha
loope
xor
add
pop
fcom
or
in
cmps
lock
adc
adc
cmp
dec
je
clc
daa
xor
dec
sbb
add
add
or
ret
into
add
sub
imul
dec
add
xor
fcom
out
pop
out
pop
pop
gs
dec
gs
add
jmp
inc
push
adc
adc
mov
lods
jge
and
pop
push
cdq
cmp
and
hlt
push
jmp
pop
and
leave
mov
push
dec
scas
call
adc
add
cld
call
or
pop
daa
push
ret
or
movs
ins
sub
or
(bad)
in
test
mov
pop
and
and
dec
iret
(bad)
ror
cmp
sub
jmp
mov
or
and
xchg
fdivr
mov
mov
or
cmp
mov
sbb
mov
fwait
mov
cmp
repnz
sub
add
lea
fldenv
retf
pop
or
popf
lods
push
push
push
jo
or
xor
js
lods
add
popf
add
cs
sub
push
or
inc
je
pop
push
jb
sbb
mov
mov
popa
dec
adc
jae
sub
pop
jmp
jno
addr16
and
sahf
popf
push
mov
mov
adc
push
outs
aas
dec
inc
cmps
add
lods
or
outs
mov
fist
or
ror
cdq
sbb
pop
je
ret
sub
or
or
inc
mov
add
and
mov
ss
or
push
or
and
and
sub
inc
dec
add
cld
mov
and
and
and
inc
mov
sub
jns
adc
loope
popa
cli
out
mov
dec
pop
sbb
rcl
sbb
sbb
dec
mov
bound
sub
ss
xchg
and
push
pop
or
xchg
pop
xor
add
loop
inc
xor
bound
push
mov
sbb
(bad)
add
adc
shl
mov
push
retf
push
or
push
mov
sbb
inc
adc
or
int3
cmps
je
or
adc
mov
inc
cli
push
ficom
or
adc
add
call
xor
add
add
int
jl
or
call
or
fcom
aaa
iret
jmp
sub
xchg
adc
cmp
adc
inc
mov
sub
push
dec
inc
adc
push
inc
adc
jecxz
lods
adc
jg
xchg
push
sahf
imul
add
xor
jmp
inc
push
add
push
push
dec
xchg
push
mov
or
mov
or
pop
xor
adc
fs
push
movs
jo
out
or
and
inc
xor
push
rcr
or
inc
adc
or
push
sbb
pop
add
es
xor
aaa
mov
ror
pusha
imul
pop
inc
push
jge
inc
push
adc
mov
gs
pop
or
or
sub
mov
and
dec
adc
outs
sbb
pusha
ins
add
nop
and
ss
and
mov
or
dec
push
cmp
and
sbb
push
mov
xor
pop
jbe
ja
inc
sbb
xchg
lock
jbe
xchg
or
mov
jno
jne
jl
sub
xor
push
lock
shl
fldcw
push
push
xor
scas
test
pop
mov
or
add
(bad)
std
pop
sbb
imul
inc
push
ins
cmp
popa
sbb
mov
fcomi
outs
outs
and
or
sbb
sbb
and
lods
das
sbb
dec
stc
sbb
cmp
or
sub
push
dec
and
or
add
ins
retf
out
stos
sbb
scas
sbb
push
cmp
push
jo
pop
rsm
dec
cld
cmp
sub
fst
mov
or
adc
loope
xor
and
jecxz
shl
sbb
mov
sub
sub
fstp
xor
call
jp
daa
loope
sub
mov
test
add
lods
xor
(bad)
add
push
and
add
cmp
jae
or
imul
sahf
(bad)
or
jo
lahf
sub
lahf
xor
mov
xlat
dec
outs
jne
and
test
xchg
pop
jae
or
inc
add
xor
jle
mov
pop
mov
xchg
nop
and
fimul
scas
mov
push
(bad)
fs
js
push
mov
inc
aad
or
sub
scas
sbb
mov
popa
jbe
mov
les
pop
test
xor
fadd
mov
or
cmp
mov
daa
adc
mov
ins
test
push
outs
jns
inc
dec
add
cmp
popa
cmc
adc
push
clc
and
dec
sub
dec
add
xchg
add
push
xchg
mov
or
ins
mov
call
mov
xchg
mov
push
fs
popa
mov
and
mov
jb
inc
mov
jns
stos
push
fistp
push
imul
loopne
(bad)
xchg
je
jo
addr16
xor
inc
cmc
(bad)
xor
adc
ficomp
xor
sub
xor
pop
dec
or
push
gs
pop
mov
mov
add
into
js
xor
pusha
les
jge
or
xor
fwait
and
movs
jge
jns
adc
xchg
xor
pop
nop
sub
aad
rcl
inc
in
xor
xor
jmp
cmp
pop
mov
scas
xchg
push
jno
jns
mov
mov
cmp
cmp
lods
cmp
test
pop
xchg
popa
out
add
add
mov
popa
(bad)
dec
sub
sub
and
addr16
imul
or
sub
cdq
sub
dec
push
pop
fs
retf
nop
pop
pop
mov
setne
mov
mov
cmp
push
bound
test
or
adc
in
dec
xor
sbb
call
add
imul
add
es
sub
in
jg
les
stos
xchg
pop
loopne
mov
inc
cmp
xchg
add
aaa
sub
sbb
rcl
push
lea
lods
lods
mov
mov
xchg
pop
xchg
cmp
das
pop
clc
daa
or
jno
js
pop
mov
and
or
inc
sbb
add
fdiv
bound
div
inc
ins
mov
push
arpl
std
fwait
ret
lods
jmp
jbe
xor
and
rcl
sub
or
xchg
sbb
sub
(bad)
pop
js
jbe
ins
iret
ins
adc
push
ror
mov
(bad)
sub
mov
xchg
xor
scas
add
pop
outs
call
cmps
fimul
xor
push
xor
jo
xor
mov
inc
jg
ss
push
mov
test
out
test
fmul
mov
inc
or
add
fcom
mov
add
lods
xor
dec
jae
mov
popa
dec
jl
xchg
sbb
popf
mov
xchg
or
push
fucomi
pusha
sub
(bad)
movs
icebp
call
fild
jnp
push
push
push
adc
aad
sub
sbb
cmp
jmp
cmp
sbb
push
dec
test
pop
sub
dec
push
push
arpl
mul
pop
jb
mov
cmp
xchg
mov
out
inc
outs
sbb
ror
movs
push
or
sub
inc
add
mov
mov
push
sar
pop
ins
and
add
inc
sub
cmp
lods
or
out
ja
push
inc
popa
in
fisub
pop
add
inc
pop
dec
or
cmp
test
xchg
cli
inc
push
jmp
adc
adc
imul
xchg
inc
or
lods
inc
fisubr
lahf
je
sub
push
imul
aad
fnstenv
call
nop
(bad)
es
inc
inc
jo
sbb
push
out
jo
pop
sti
jmp
test
and
add
mov
cmp
sub
sub
enter
arpl
inc
in
out
in
inc
mov
push
sub
outs
inc
sub
div
lods
push
outs
imul
gs
mov
lea
and
bound
movs
sbb
lahf
push
rcr
int
xor
or
pushf
add
adc
and
push
add
mov
adc
push
(bad)
pusha
and
push
aad
add
or
mov
js
jle
xchg
mov
bound
add
es
(bad)
call
data16
jbe
xchg
out
call
cld
xchg
aad
cmp
push
or
add
add
xor
fmul
adc
sti
cmp
or
pop
and
in
add
add
out
mov
sub
mov
xchg
jo
rcr
adc
or
scas
es
xchg
mov
add
int3
mov
sub
inc
sbb
inc
add
adc
xor
out
jmp
(bad)
xchg
mov
clts
or
jo
retf
jns
test
arpl
add
mov
sbb
imul
test
mov
test
aad
cmp
vmwrite
sub
pop
mov
xchg
jl
movs
inc
mov
push
cmp
es
pop
mov
enter
or
ss
add
or
loop
add
add
dec
push
or
add
mov
popa
and
push
popf
es
or
adc
test
in
leave
mov
mov
xor
or
ror
das
jmp
push
or
adc
or
cmp
cmp
xchg
xor
sub
add
cdq
or
or
pushf
sub
jg
repnz
adc
push
adc
cmps
lds
or
cwde
dec
sahf
iret
ror
or
or
push
or
out
dec
or
add
inc
push
in
jae
imul
jle
repnz
dec
leave
push
popa
ins
ins
xor
mov
push
dec
loop
cwde
xor
xor
or
adc
imul
neg
or
xchg
outs
test
push
push
inc
popa
cs
mov
pusha
and
shl
add
push
xchg
jns
retf
mov
push
add
mov
or
or
push
dec
xchg
ss
mov
xchg
jno
cmps
into
das
or
dec
fmul
sbb
icebp
or
or
pop
and
cmps
and
xchg
es
inc
push
sub
test
mov
sbb
pusha
push
movs
adc
imul
sub
mov
xchg
adc
mov
xchg
mov
or
inc
es
pop
add
leave
loopne
ret
or
jmp
adc
cmp
(bad)
xchg
pop
loope
adc
mov
cwde
sub
push
inc
and
pop
and
gs
push
data16
scas
cmps
pop
add
mov
mov
fcomp
adc
xchg
fwait
push
inc
(bad)
sub
imul
add
sub
pushf
cmps
ret
addr16
lock
call
xor
inc
add
push
gs
add
inc
aad
sub
cmp
out
shr
sbb
es
mov
stos
mov
mov
inc
mov
sub
(bad)
popa
xchg
std
imul
sub
outs
or
xor
and
sahf
lods
outs
ud1
ja
pop
sbb
cwde
push
imul
inc
popa
and
sub
add
pop
sub
push
adc
dec
xchg
or
push
aam
pop
mov
fsubr
stc
in
xor
add
add
sub
dec
pop
sub
sub
or
add
sahf
out
push
adc
adc
sahf
out
sbb
sbb
retf
sahf
sbb
adc
adc
adc
mov
cli
adc
add
mov
and
imul
jle
add
bound
stos
fst
xor
xlat
xchg
out
xchg
xor
sbb
add
out
mov
nop
loopne
xor
xchg
pop
cmp
ds
pop
clc
sbb
add
mov
rol
mov
jmp
xor
push
mov
mul
inc
adc
and
pop
outs
sbb
dec
stos
cmp
mov
adc
daa
xchg
je
add
nop
ds
mov
mov
add
(bad)
sbb
adc
stc
lea
push
sbb
inc
outs
cmp
fistp
adc
cmp
adc
push
pop
inc
retf
push
jecxz
lods
cwde
cmp
out
ret
and
cmps
adc
inc
sbb
cmps
retf
popf
shld
ret
push
mov
sub
mov
add
add
mov
cmp
dec
add
bound
cmp
adc
fistp
add
sbb
jae
stc
jg
add
adc
rol
sbb
cmp
push
psllq
cmp
sbb
push
add
test
pop
cs
dec
dec
jb
popa
add
cmc
push
push
adc
aaa
add
lea
into
sti
in
repnz
(bad)
xor
add
or
ins
sub
out
add
mov
pop
add
pusha
psubsb
jo
js
pop
add
add
jle
cmp
add
sub
push
daa
add
add
imul
dec
int3
lea
xchg
sbb
adc
push
mov
imul
jo
xchg
inc
mul
jp
mov
push
xchg
cmp
push
push
xor
ret
and
jbe
inc
cmp
add
or
cld
(bad)
(bad)
push
ins
loopne
sbb
and
enter
test
xor
es
or
das
add
xchg
jbe
out
pop
add
adc
dec
mov
call
xor
lods
rol
cmp
inc
stos
mov
int
data16
xchg
or
ss
daa
mov
daa
or
inc
pop
mov
and
imul
fimul
leave
push
sbb
or
push
imul
mov
or
pop
push
in
adc
inc
mov
or
or
mov
(bad)
sti
jg
aaa
inc
in
fs
dec
or
je
or
or
pushf
adc
es
xor
dec
or
inc
cdq
(bad)
(bad)
xor
imul
jmpw
pop
bound
sbb
js
jl
or
jmp
add
rcl
mov
and
or
and
in
addr16
xchg
sub
movaps
add
imul
in
or
or
add
or
ret
and
jecxz
sub
test
jns
adc
inc
fcom
stc
inc
and
sub
gs
pop
nop
jbe
ret
scas
push
gs
pop
(bad)
fistp
push
xor
ss
ja
je
imul
and
cdq
dec
or
mov
cmp
cmp
cmps
add
sub
cmp
(bad)
int3
push
sub
daa
cmp
mov
sbb
or
sahf
(bad)
adc
xchg
inc
or
dec
mov
dec
sub
mov
mov
fucom
xor
retf
jbe
out
addr16
mov
ins
dec
lock
and
push
mul
mov
(bad)
sbb
movs
mov
arpl
push
cmp
jae
shl
add
imul
add
push
and
jl
jno
sub
sub
dec
adc
add
xor
mov
xor
cwde
pop
test
xchg
jno
std
out
cmps
push
inc
inc
call
retf
cmp
jle
rol
mov
xchg
pusha
and
aad
daa
sbb
rol
push
cmps
mov
aas
aas
sbb
ins
sbb
std
or
xor
hlt
inc
ret
sub
or
call
popa
inc
fdiv
mov
pop
sub
rol
or
push
imul
mov
pop
leave
arpl
add
add
rol
add
add
js
or
sbb
cmp
es
test
mov
sub
bound
pop
repz
scas
mov
push
pop
push
cmc
sbb
mov
xor
xchg
or
sbb
xlat
cmp
sub
dec
xor
add
push
add
mov
rol
and
(bad)
nop
sub
popa
imul
pop
xchg
mov
xchg
push
push
iret
xor
pop
add
jno
or
inc
or
adc
and
xor
mov
mov
lock
test
clc
push
inc
repz
(bad)
ins
mov
call
daa
inc
test
cmp
daa
cmp
sbb
ror
das
inc
sar
pop
gs
adc
jle
push
arpl
inc
icebp
or
mov
inc
popf
outs
sbb
jnp
ss
cwde
ss
mov
push
cmps
mov
sbb
nop
jbe
jae
inc
sub
adc
(bad)
aad
stc
add
add
dec
push
add
cmps
sbb
mov
adc
add
jne
mov
mov
push
sub
(bad)
dec
add
fdivr
adc
or
sbb
inc
and
sbb
gs
in
adc
push
dec
or
jge
dec
ss
mov
aad
int
or
jbe
xor
sub
xchg
and
inc
inc
mov
mov
push
test
and
cmp
ret
and
push
jmp
push
xor
xchg
push
cmps
mov
sbb
xchg
xor
jecxz
mov
sub
jle
test
inc
pop
(bad)
pop
js
call
push
or
add
push
cmp
pushf
cs
or
xchg
or
mov
add
das
or
rcr
or
(bad)
pop
inc
pop
mov
adc
cdq
pop
push
jg
xchg
dec
add
adc
test
or
jno
jo
repnz
das
mov
adc
pop
adc
xor
adc
cmp
mov
or
or
daa
pop
push
add
push
mov
adc
(bad)
pop
cmp
push
or
cmp
inc
lock
adc
inc
sub
sti
shl
das
daa
or
pop
pop
movs
dec
pop
cmp
push
mov
xchg
cmp
pusha
test
sub
adc
loopne
imul
nop
sub
lods
das
inc
in
sub
test
push
ss
or
loop
inc
sahf
inc
and
and
pop
or
xchg
adc
ss
or
push
outs
xor
lods
inc
push
pop
xchg
inc
jp
ds
mov
xor
adc
cmp
shl
dec
mov
sub
xor
lahf
pop
push
push
lods
aaa
push
sub
dec
add
dec
or
xchg
aam
xchg
add
adc
and
ret
dec
dec
cmp
loopne
dec
call
mov
or
retf
or
add
mov
ffreep
fwait
rcr
or
mov
iret
repnz
or
add
adc
sbb
mov
rol
ja
sbb
imul
fld
sbb
push
xor
or
mov
and
fimul
sbb
mov
cmp
lods
sub
out
bswap
and
orps
js
or
aaa
xchg
sub
aas
add
push
pop
jbe
or
xchg
xor
dec
or
sub
or
or
or
adc
jmp
(bad)
ror
ror
xor
into
add
rcr
lock
xor
data16
call
outs
dec
rcr
mov
add
adc
cwde
repz
fs
nop
aam
xor
cmp
movs
inc
inc
stc
push
push
aaa
push
in
xor
push
stos
jle
fcomp
push
sub
outs
lods
jae
lahf
mov
dec
out
inc
lea
mov
cmps
mov
in
adc
in
jo
or
call
dec
cmp
mov
cmpxchg
add
les
add
retf
aaa
add
and
addr16
loop
sbb
jns
or
xor
push
and
les
popa
test
aad
xchg
mov
add
or
lods
jb
adc
pop
xor
xchg
xor
gs
xchg
fstp
mov
mov
or
mov
and
mov
sbb
push
and
push
fs
test
rcr
sub
or
inc
test
les
mov
adc
shl
sub
inc
and
dec
retf
(bad)
xor
push
dec
aaa
xchg
push
hlt
adc
test
inc
call
rol
dec
xor
pop
pop
pop
mov
add
or
or
es
sub
sahf
xchg
pop
ret
adc
mov
adc
mov
jne
or
xchg
inc
sbb
adc
mov
stos
mov
ins
jo
cmp
test
add
mov
adc
push
mov
sbb
add
ins
cdq
and
push
add
adc
movs
dec
shr
cmp
xchg
adc
cmp
xor
dec
cmp
or
add
xchg
or
test
pop
ret
out
xchg
or
pop
add
sub
lods
stos
or
call
or
or
inc
adc
pop
mov
or
popf
add
shl
inc
mov
pop
pop
addr16
es
mov
mov
pop
mov
adc
cmp
inc
push
add
(bad)
sbb
or
jp
adc
cmp
add
sub
pop
fidiv
mov
inc
add
sbb
fld
xchg
mov
sub
inc
test
push
inc
and
add
pop
add
sbb
test
nop
mov
push
xor
pop
sbb
icebp
fisub
xor
gs
xor
call
xor
(bad)
jl
add
inc
je
mov
arpl
mov
xor
or
rcl
gs
fwait
ror
add
push
leave
sbb
mov
add
and
push
(bad)
pop
push
cmp
ja
fwait
or
rol
sub
sub
sub
js
adc
adc
lea
mov
add
inc
add
lahf
xchg
mov
and
cmp
pop
xor
mov
shl
and
aam
fmul
mov
pop
sbb
lds
arpl
inc
add
add
or
pop
add
daa
jne
mov
and
add
ins
xor
push
sub
popa
add
dec
xchg
push
int
xor
add
sub
test
shl
lock
arpl
adc
call
xchg
or
iret
or
or
push
daa
add
cmova
sub
pushf
cmp
mov
add
adc
mov
ins
rol
dec
adc
or
and
pop
iret
outs
iret
sti
cmp
movhps
sbb
push
or
sbb
jns
out
sbb
and
ins
(bad)
and
xor
and
and
es
sub
adc
adc
adc
xchg
xchg
xchg
out
push
sub
sub
xchg
xchg
xchg
sub
mov
cmps
fstp
adc
push
adc
adc
ss
out
sahf
aaa
cmp
cmp
cmp
daa
in
jle
adc
push
push
ds
cs
test
cmps
enter
movs
addr16
pop
movs
push
inc
push
or
imul
inc
adc
or
add
popf
xchg
sbb
adc
inc
fcom
or
mov
or
les
aam
or
add
jo
push
inc
leave
add
add
loopne
stos
jae
ins
call
ds
cmp
les
sub
add
pop
adc
add
add
add
test
xchg
pop
ins
inc
jno
and
mov
lods
in
adc
test
stos
mov
and
test
mov
movs
adc
arpl
inc
mov
and
call
or
pop
inc
pop
dec
adc
sbb
cmp
aaa
lea
into
push
ins
add
unpcklps
scas
or
and
jg
rcl
mov
je
(bad)
neg
and
sbb
pusha
leave
sbb
xor
in
sub
mov
pop
arpl
sub
jnp
fadd
sub
rcl
adc
jmp
add
or
adc
pop
mov
fild
pusha
nop
push
add
arpl
ret
iret
sbb
sub
aas
stos
push
and
adc
inc
cwde
pop
cmp
adc
pop
pop
adc
pop
test
outs
pop
push
outs
call
fldcw
dec
dec
push
mov
mov
or
jb
fld
xor
dec
or
pop
mov
sub
mov
sysexit
mov
and
inc
sub
outs
push
pop
popf
mov
fs
outs
js
dec
add
adc
mov
mov
jo
push
push
ds
ret
test
push
xor
cmp
movs
sbb
and
scas
pop
test
imul
pop
mov
push
and
dec
xor
pushf
push
xchg
outs
add
add
test
sbb
or
sub
rcr
or
push
add
inc
push
pop
push
cmp
add
icebp
and
inc
adc
add
push
pusha
ss
add
rol
retf
ds
(bad)
and
pop
(bad)
fisttp
popa
jno
cmp
and
data16
or
add
xchg
mov
ins
cs
pop
(bad)
pop
movs
push
les
cmps
test
int3
aad
xchg
mov
push
sbb
(bad)
jge
pop
test
mov
inc
inc
inc
or
xor
cwde
adc
add
dec
mov
or
lds
inc
lods
mov
loop
sub
sub
loop
pop
daa
repz
test
cmp
dec
outs
jp
add
cmp
les
dec
push
ja
mov
hlt
mov
xor
xor
xchg
in
and
add
adc
shr
and
int
add
aam
and
fstp
xor
and
cmp
mov
sahf
or
out
push
xor
scas
or
sbb
dec
mov
or
or
or
inc
sbb
out
and
fadd
add
inc
sbb
in
add
les
pop
clc
xor
arpl
jg
pop
sub
dec
xchg
add
cmp
add
and
add
test
sbb
dec
clc
mov
mov
and
aad
out
sbb
mov
ror
adc
xor
jae
push
cmps
or
sub
popa
pop
popa
cmp
fdivr
mov
adc
xchg
sar
or
pop
and
sub
adc
jmp
je
jmp
inc
mov
daa
dec
push
pop
(bad)
repz
push
push
pop
add
mov
xchg
and
movs
jmp
mov
dec
scas
repz
sub
(bad)
xchg
xor
jge
mov
add
add
add
or
jae
xor
or
inc
fcom
add
jnp
mov
adc
sub
or
xor
popf
cmp
or
mul
ret
add
and
mov
clc
adc
or
sub
or
fadd
test
push
aad
cdq
inc
pop
add
mov
cld
xchg
push
popa
ja
dec
mov
ret
stc
aas
rcr
and
jno
movs
inc
sub
jmp
lea
mov
popa
test
scas
pusha
xchg
aaa
or
xor
adc
cmp
je
pop
or
sbb
js
iret
ss
xor
call
xor
sub
inc
pop
cmp
adc
sub
add
push
in
pop
ss
pop
dec
xchg
icebp
or
add
jmp
cs
sbb
add
dec
sub
cmp
add
movs
cmp
inc
icebp
and
adc
movs
xor
add
cmp
or
shl
or
enter
pop
cmp
mov
push
or
inc
sub
cmp
xor
movs
add
call
xchg
call
scas
pop
ja
outs
xor
sahf
repnz
adc
out
push
out
jle
or
das
or
test
pop
or
fnsave
sbb
je
cli
push
rdmsr
or
sbb
xor
sbb
sub
dec
sub
xlat
scas
outs
and
push
sub
cmp
pop
into
sub
inc
imul
(bad)
mov
test
scas
jno
mov
mov
and
outs
outs
pop
jo
test
and
or
and
push
sub
shl
xchg
add
fadd
stos
xchg
fld
retf
add
ins
and
add
add
xor
add
adc
push
mov
sub
push
push
sbb
push
mov
or
das
add
(bad)
or
fiadd
int
enter
or
cmp
sbb
adc
in
adc
mov
out
dec
mov
and
sahf
out
sahf
and
and
sahf
out
sub
sub
jo
push
sbb
mov
jmp
add
jns
jo
adc
mov
or
add
sbb
xor
mov
pop
fisub
add
cmp
sub
mov
movs
les
test
add
pop
inc
les
pop
jo
add
hlt
lock
repnz
scas
inc
push
mov
jmp
mov
sub
add
cmps
and
push
popa
jmp
mov
call
adc
xchg
mov
(bad)
mov
dec
repnz
and
mov
rcl
cmp
aaa
test
ss
push
inc
and
or
pop
cwde
add
add
ltr
daa
or
push
adc
sub
push
xor
cmp
pop
mov
call
inc
mov
adc
loop
or
fs
ror
iret
add
adc
push
sub
inc
es
push
and
jl
sbb
or
mov
aad
or
mov
int3
add
pop
push
pusha
sub
(bad)
lods
add
push
loop
push
push
push
add
sbb
pop
adc
adc
jae
test
and
or
mov
retf
mov
pop
dec
cmp
or
jp
cmp
outs
xor
mov
push
out
sub
sbb
inc
sbb
or
inc
ins
loop
repnz
sbb
js
xchg
inc
cmp
mov
mov
jns
pop
xor
(bad)
ficomp
les
sub
int3
add
push
dec
or
and
xchg
xchg
dec
aas
adc
or
test
js
movs
adc
xchg
sub
test
cmc
push
out
inc
inc
dec
fisub
inc
das
imul
mov
loope
mov
or
xchg
add
mov
or
fsub
dec
xchg
movs
xor
pop
sbb
ret
fnsave
or
dec
call
dec
cwde
jo
add
icebp
dec
retf
add
xlat
or
fild
shr
or
dec
cmp
inc
arpl
les
push
and
sub
add
and
rcl
fcmovb
xor
push
retf
rol
xlat
adc
mov
(bad)
loopne
lds
in
loopne
xlat
in
es
pop
add
ds
ss
jbe
dec
(bad)
(bad)
(bad)
call
les
push
rol
and
adc
arpl
sbb
jmp
jnp
xor
dec
push
jp
mov
xor
in
push
add
movs
mov
ret
daa
xor
pop
cmp
adc
sbb
ins
and
fist
jl
retf
int
xor
or
ror
xchg
xchg
inc
inc
inc
cwde
inc
fwait
push
and
inc
mov
mov
movs
inc
stos
aaa
dec
fiadd
mov
iret
xchg
out
cmps
sub
sbb
add
or
imul
sbb
adc
iret
pushf
mov
cmp
inc
jmp
sahf
pop
or
icebp
or
inc
jno
neg
stos
cmp
sbb
pushf
out
js
or
sub
out
pushf
jbe
inc
dec
xchg
out
or
push
inc
imul
adc
mov
sbb
inc
test
add
mov
pop
xchg
popa
inc
popf
xchg
dec
mov
add
push
mov
dec
xchg
cs
sub
push
sbb
adc
sbb
mov
push
push
dec
js
xchg
or
dec
fcmovnu
mov
jl
enter
xor
dec
inc
test
shl
js
add
inc
push
sub
repnz
add
cmp
mov
jae
mov
sti
inc
add
cmp
lods
add
loopne
dec
pop
and
cmp
movs
add
fmul
xor
cmp
out
dec
das
or
pop
test
jae
xchg
pop
inc
repz
mov
xchg
mov
sbb
outs
out
aad
push
cmps
inc
pop
ret
xchg
push
es
rcr
push
cld
arpl
outs
and
dec
mov
inc
ins
pop
xor
sbb
mov
loop
sbb
jp
fmul
out
xchg
dec
mov
xor
inc
(bad)
retf
mov
or
sbb
cmp
enter
movups
enter
adc
add
xchg
push
aas
jbe
stos
sbb
or
scas
add
shl
push
or
pop
fsub
push
sahf
push
in
sbb
scas
add
xchg
inc
jl
sbb
mov
or
mov
cmp
sbb
push
sbb
loope
in
mov
cmp
xor
call
cmp
pop
inc
inc
or
dec
add
test
xchg
mov
das
das
and
addr16
push
sbb
ja
push
push
xlat
mov
and
and
fmul
adc
fwait
or
cld
add
mov
sub
jne
and
addr16
mov
mov
adc
push
dec
mov
lods
sbb
fwait
inc
cwde
or
sbb
mov
add
inc
dec
mov
into
xor
loope
sub
sti
jg
sar
sub
mov
add
dec
ja
sbb
inc
pop
inc
push
adc
cmp
mov
cmps
dec
test
jl
lahf
add
cmp
in
adc
ss
pop
aad
push
test
pop
and
inc
dec
adc
and
rcl
shl
fistp
das
and
sbb
ss
imul
iret
div
bound
and
cmps
fbld
mov
add
add
adc
jno
les
add
add
add
fsub
mov
mov
xchg
xchg
fadd
lods
and
lods
dec
scas
mov
repnz
in
cli
aaa
add
inc
minps
sbb
mov
aam
or
les
add
add
xchg
push
retf
adc
or
or
mov
cdq
iret
out
pop
or
add
mov
cs
imul
mov
push
maskmovq
not
div
adc
cmp
adc
aaa
dec
js
les
sub
push
in
add
inc
pop
mov
jge
loopne
cmp
pop
loope
aas
mov
cmp
cld
mov
je
(bad)
es
loope
xor
lods
jl
dec
add
pop
or
sub
pop
push
pusha
push
or
add
lahf
xor
ins
bound
cmp
dec
add
add
les
pushf
movs
add
add
je
add
xor
inc
push
aaa
or
jbe
pop
je
aaa
sub
popf
rol
push
xchg
push
dec
repz
xchg
aas
or
in
fsub
dec
hlt
jg
or
add
xor
lods
adc
fsubr
pop
das
and
pop
movs
popf
imul
push
es
pop
loopne
mov
out
out
shl
inc
adc
mov
sub
xchg
xor
shl
xor
mov
push
xchg
add
hlt
inc
fidiv
sbb
cvtps2pi
mov
add
pushf
cmp
ins
pop
das
add
add
pushf
add
pushf
cmp
push
push
pop
or
in
es
dec
add
fld
int
xor
dec
add
push
jns
add
jge
neg
dec
inc
mov
repz
xor
mov
inc
cmp
and
mov
mov
xor
xor
or
inc
jle
cmp
push
push
add
or
mov
repnz
lahf
cdq
or
add
and
leave
sahf
cmps
mov
xor
or
adc
jg
out
adc
or
sbb
ret
cmp
repz
push
sbb
push
sbb
add
and
lods
lea
and
adc
cmp
push
xor
daa
sub
sub
add
bound
mov
cs
mov
shr
push
pop
xor
xor
mov
sahf
test
add
push
sbb
(bad)
cmovno
in
and
movs
adc
add
cwde
push
mov
push
jle
sub
push
xchg
sub
sub
inc
mov
xchg
add
mov
push
jmp
test
inc
aad
push
adc
jp
test
xchg
aam
add
test
jo
pop
xchg
push
add
test
mov
bound
ja
pop
stos
je
rcr
fs
jbe
push
adc
lods
xor
push
fadd
outs
sub
adc
jbe
dec
dec
sbb
dec
scas
sar
rcpps
cwde
imul
dec
cmp
daa
pusha
adc
mov
or
or
test
jg
dec
jmp
sub
adc
sti
mov
pop
sub
test
pop
add
call
xor
scas
xchg
or
or
sub
mov
retf
xor
jp
loop
pop
cmp
xor
rol
xchg
mov
or
pop
xor
xor
or
or
outs
push
sub
pop
movs
adc
sbb
sub
dec
inc
or
jg
cmps
pop
pop
leave
or
add
repz
add
mov
add
or
outs
inc
add
clc
jl
or
add
add
ret
pop
add
mov
loope
or
or
xchg
movs
je
or
mov
popf
dec
push
(bad)
rol
dec
loope
push
sti
daa
mov
push
into
shl
sub
retf
add
xor
mov
cmps
push
dec
xor
adc
imul
and
or
mov
adc
dec
mov
pop
pop
je
sbb
mov
and
mov
lods
jo
ds
jle
add
dec
cmp
movsx
rol
ret
dec
jle
adc
popf
mov
gs
or
sar
loope
adc
pop
(bad)
adc
test
test
mov
cmps
(bad)
fwait
xor
repnz
pop
sbb
test
pop
xlat
mov
and
cs
or
sbb
cmc
push
sub
cmps
sub
push
cmc
add
jl
fldcw
push
shl
mov
mov
sbb
fadd
sbb
or
nop
mov
push
push
push
mov
(bad)
sbb
push
jmp
add
add
aas
jbe
test
fdivr
xchg
hlt
jae
push
cmp
ret
jo
sub
xor
loope
pop
mov
xor
sub
imul
cs
test
retf
or
push
pop
test
sub
adc
xchg
add
add
imul
sub
outs
sbb
pop
mov
arpl
adc
xor
sub
adc
xchg
add
adc
sub
sbb
mov
sub
push
xchg
movs
stc
xor
(bad)
and
mov
enter
cmp
add
test
and
fwait
adc
cmp
adc
inc
cwde
lods
outs
mov
bound
adc
arpl
out
or
pushf
and
and
pop
ret
and
frstor
mov
lds
push
lds
gs
imul
push
dec
outs
xchg
and
aam
movs
and
or
test
lock
xchg
jle
fcom
dec
sbb
inc
add
das
push
push
daa
hlt
and
fs
fstp
sub
mov
and
stos
test
add
adc
add
add
mov
mov
inc
addr16
pusha
rcr
sub
adc
aad
sub
or
ss
ja
sbb
add
lds
and
out
push
mov
and
jl
xchg
pop
cdq
ss
dec
fist
push
add
cmp
test
pop
adc
or
jbe
push
xor
add
push
adc
add
adc
adc
mov
push
adc
mov
cld
mov
or
fiadd
popa
push
outs
cmp
or
push
or
pop
xor
fs
push
dec
fwait
cdq
ret
mov
sbb
add
sbb
cmps
and
movs
sbb
cmp
jle
aad
or
cld
jg
push
or
or
add
cwde
adc
or
push
and
and
xor
and
cdq
lods
movs
push
pushf
das
or
add
femms
mov
orps
mov
clc
or
sub
aad
cmp
cwde
jle
dec
shl
aas
push
add
jb
daa
add
test
sub
adc
add
div
sbb
xlat
(bad)
int
add
sub
xor
int3
or
gs
adc
add
pop
mov
enter
dec
ds
dec
xchg
test
xor
cwde
(bad)
bswap
leave
dec
shl
xor
xor
sub
push
add
mov
xor
or
cmp
movs
or
push
mov
imul
jecxz
movs
cdq
or
xor
xor
dec
push
test
outs
adc
push
in
xchg
es
(bad)
push
das
xor
test
(bad)
adc
cmp
daa
sbb
push
cmp
adc
adc
adc
adc
adc
add
push
xor
call
xor
cmp
mov
sub
pop
es
ds
jl
xlat
cld
adc
sub
lea
push
shr
in
pop
repnz
cmp
pop
mov
sub
inc
inc
adc
mov
inc
or
mov
inc
pop
cs
test
push
ja
or
test
inc
setle
inc
xor
lods
sub
into
lahf
push
push
aad
add
and
dec
push
cmps
push
add
dec
ret
psrld
pop
daa
inc
mov
inc
adc
daa
xor
adc
ds
xor
jge
add
sbb
or
push
push
xchg
mov
push
push
mov
push
(bad)
pop
add
or
jo
shl
sbb
sbb
inc
xchg
icebp
bound
rcl
cmp
push
or
cmp
add
sub
sub
sub
sub
pop
jp
or
aaa
ja
loopne
jne
jae
jo
mov
add
dec
movs
mov
pop
test
xor
nop
xchg
fisub
and
pop
rol
sub
inc
inc
mov
and
xchg
push
inc
daa
test
mov
pop
inc
movs
cmp
add
popf
int3
cmp
ins
cmp
outs
adc
test
push
mov
add
sbb
xchg
inc
ret
test
rcl
jnp
das
jl
retf
dec
cmp
test
add
mov
and
dec
mov
mov
xchg
shr
test
sbb
movs
inc
or
push
or
sbb
addr16
adc
adc
sbb
and
dec
pop
add
mov
cmp
xor
ss
in
cmp
inc
pop
cmc
xor
aas
arpl
aaa
movs
or
or
sbb
nop
(bad)
std
fisttp
test
lods
(bad)
cmc
dec
jns
mov
mov
fadd
sub
add
and
push
pop
xor
add
mov
inc
inc
sub
sbb
mov
out
push
push
dec
sbb
data16
inc
or
mov
aad
xchg
add
clc
or
aaa
ror
or
ss
adc
ins
cmp
sbb
mov
std
pcmpgtb
in
(bad)
mov
rcr
inc
daa
fnsave
fwait
sbb
lock
xor
add
add
jmp
pop
add
stos
adc
sbb
inc
stos
and
push
jmp
and
and
rcr
mov
jmp
inc
push
cmp
ja
inc
xor
add
sbb
push
mov
xor
test
pop
and
mov
xchg
adc
pop
(bad)
add
aam
loope
or
mov
dec
pop
mov
add
push
imul
dec
or
loope
inc
outs
sbb
lahf
sub
adc
xchg
lds
aaa
push
push
arpl
push
sub
cwde
adc
sub
inc
sub
xchg
sbb
xchg
push
sbb
jecxz
push
sub
mov
ds
ins
popf
add
mov
xor
xor
mov
inc
dec
pop
pop
fst
adc
icebp
lds
push
xchg
loopne
mov
and
lods
inc
mov
and
dec
stc
or
push
jnp
test
and
dec
or
sbb
shr
or
sub
outs
lods
fstp
inc
inc
xchg
call
mov
jecxz
xor
movs
cmps
dec
sub
cli
cvtpi2ps
in
sub
arpl
and
xor
push
imul
or
pop
push
fldenv
enter
ret
inc
xchg
cmp
mov
pusha
jl
jne
or
clc
cmp
push
or
jl
or
adc
xchg
jo
cdq
fadd
push
push
add
adc
sub
bound
adc
sbb
and
sbb
pusha
sub
inc
sbb
sbb
sbb
sbb
sbb
adc
dec
xchg
hlt
sbb
xor
or
pop
sbb
repz
jns
and
or
xor
add
and
add
jns
and
mov
daa
add
sub
pop
lock
sub
aaa
and
idiv
add
xor
push
movs
fisub
sahf
xor
or
cmp
xchg
xchg
icebp
and
add
xor
pop
or
aam
add
and
mov
xchg
add
pop
loope
test
adc
add
sbb
lea
or
push
ret
mov
test
icebp
pop
inc
or
test
push
push
call
sbb
lds
push
inc
sub
addr16
cwde
(bad)
retf
adc
test
ret
xchg
cmp
add
add
mov
adc
das
pop
ret
cli
cmps
sti
rcr
add
dec
das
pop
cmps
add
push
outs
inc
xlat
mov
cs
push
jmp
xor
lea
push
stos
pop
icebp
sbb
gs
and
es
push
sub
scas
push
movs
je
sub
mov
jnp
sub
fwait
stc
inc
sbb
inc
cmp
stos
mov
add
push
push
push
push
xchg
cmps
or
add
xor
inc
sub
mov
push
xchg
retf
dec
dec
aaa
sub
cmp
mov
ret
(bad)
or
add
push
cmps
mov
and
repz
add
sub
gs
lock
push
inc
ret
mov
pop
icebp
pushf
mov
sub
outs
shr
sub
adc
cmp
mov
or
or
sub
imul
test
in
cmp
and
(bad)
sub
cmp
adc
adc
inc
add
adc
add
les
cmp
mov
adc
xadd
sub
fsub
sbb
dec
jmp
pop
sub
cmp
jmp
and
push
cmp
sub
add
pop
(bad)
mov
or
int
nop
pop
mov
mov
or
test
cmp
inc
or
dec
sbb
jl
aas
push
inc
dec
imul
xor
adc
aam
sbb
adc
dec
push
pop
adc
adc
adc
sbb
pop
mov
sbb
adc
adc
fwait
inc
pop
sbb
mov
adc
mov
and
inc
mov
adc
pop
and
and
mov
adc
adc
aad
pop
adc
and
in
inc
dec
in
movs
adc
fnsave
mov
xchg
jle
adc
dec
sub
xor
push
cmp
ds
movs
ror
sbb
mov
movs
inc
push
mov
push
sbb
mov
pop
or
test
or
xor
inc
sub
mov
push
or
add
add
pop
retf
leave
jno
push
sbb
add
sbb
adc
sahf
adc
jbe
add
shl
scas
ds
xchg
iret
jne
mov
adc
sub
dec
push
push
mov
cmp
pop
lea
add
(bad)
outs
out
add
add
pop
pop
inc
and
cdq
add
mov
or
les
or
add
push
sub
add
add
push
icebp
dec
dec
(bad)
lods
sbb
arpl
and
inc
or
mov
repz
push
mov
cmp
cli
pop
sub
sub
loop
es
jae
mov
or
movs
sub
or
inc
shl
xor
lock
addr16
data16
int
mov
aas
cmp
push
adc
sub
(bad)
dec
push
add
mov
shr
add
sub
retf
mov
or
add
dec
inc
push
push
push
mov
dec
test
pusha
mov
push
adc
(bad)
sbb
dec
mov
pop
sbb
fs
add
dec
arpl
nop
adc
adc
shl
sub
clc
cmp
pop
call
mov
fadd
mov
xchg
cmp
out
xor
add
(bad)
add
xor
mov
pop
out
(bad)
fwait
add
jo
cmp
cmp
ret
cmc
and
xchg
mov
push
out
stos
lods
or
xor
adc
add
mov
pop
add
xchg
pushf
sbb
inc
outs
pop
dec
and
mov
sbb
dec
stos
cld
adc
inc
sub
push
outs
xor
mov
mov
inc
dec
add
jg
pop
js
add
push
jno
pop
imul
jno
cmc
jmp
jl
test
mov
dec
xchg
and
sub
add
enter
adc
pop
push
fst
and
repz
int3
push
test
add
lods
add
sub
ret
jo
scas
nop
mov
pop
add
add
mov
pop
xor
xchg
pop
add
pop
es
add
das
dec
xchg
cld
jg
movs
mov
push
push
add
inc
outs
jb
test
xor
adc
les
jecxz
outs
aam
dec
nop
in
push
mov
les
test
mov
out
aad
je
dec
mov
or
and
xor
sbb
xor
pop
mov
push
add
sub
aaa
sbb
je
inc
mov
mov
out
cmp
adc
inc
adc
xor
or
adc
outs
adc
jp
lahf
popa
dec
adc
or
push
or
je
test
or
scas
xor
xor
popa
cmp
adc
push
add
data16
ins
add
sbb
sbb
ss
int
sbb
or
or
(bad)
and
and
loope
push
sar
js
inc
fs
xor
pop
cmp
or
and
push
sbb
push
adc
pop
inc
sbb
js
jne
pop
cli
pop
jae
gs
pop
cmp
push
fist
adc
imul
push
sub
push
pop
adc
jl
cmp
add
and
sub
(bad)
add
push
ret
stc
mov
add
or
sub
pop
adc
aad
inc
xchg
je
jge
add
adc
lods
jne
push
xor
call
xchg
shl
mov
or
sbb
sub
imul
pop
cmp
rcr
cmp
mov
sbb
pop
add
pusha
mov
or
mov
and
xor
dec
loop
mov
adc
push
shr
and
outs
(bad)
pushf
test
loopne
mov
xor
ja
fimul
pop
or
adc
or
cmp
dec
adc
pop
loopne
xlat
pop
fst
push
daa
test
lods
ins
bound
or
mov
push
mov
jle
(bad)
outs
iret
addr16
shl
or
aas
or
adc
add
adc
outs
enter
imul
loopne
dec
dec
sahf
adc
push
or
add
xor
lahf
xchg
push
lahf
add
pushf
cmp
sbb
pop
test
adc
add
mov
iret
arpl
inc
xchg
add
(bad)
into
sub
xor
out
xchg
mov
rol
enter
cmp
or
mov
adc
sbb
sbb
and
mov
sbb
inc
push
iret
div
push
jle
sbb
pop
jne
cs
or
or
add
loopne
(bad)
inc
add
sbb
sub
mov
add
js
sahf
or
ror
(bad)
lods
or
shl
add
mov
dec
pusha
lods
out
pop
add
popa
or
das
mov
add
nop
or
add
pop
add
cwde
fs
and
dec
sub
and
mov
(bad)
sti
(bad)
call
out
mov
pop
mov
loop
pop
mov
loope
pop
mov
pop
in
push
inc
fmul
sub
or
lods
pop
or
loope
out
pop
pop
xchg
dec
(bad)
jp
sub
pop
ins
dec
or
sbb
or
ret
std
sbb
jbe
dec
inc
add
adc
inc
icebp
push
cmp
adc
add
add
mov
pop
or
adc
mov
sub
sub
and
add
mov
cmps
sar
add
xchg
shl
xor
sbb
pop
sub
in
push
mov
push
push
out
lahf
(bad)
adc
sahf
adc
gs
or
add
call
cmp
jb
sub
or
push
inc
jecxz
mov
add
add
jmp
inc
adc
js
and
pop
test
pop
jae
cs
push
xor
push
ja
stos
imul
and
shl
mov
dec
bound
jne
and
ds
int3
shl
cmp
movs
jge
xchg
dec
or
add
aam
aaa
ss
dec
jnp
ficomp
dec
xor
das
sbb
cmps
xchg
adc
and
or
imul
mov
cmp
and
mov
ss
out
in
xor
sbb
int3
add
adc
leave
fwait
daa
rcl
mov
sbb
jp
jge
inc
call
adc
test
adc
push
jle
add
fs
cwde
or
push
jno
add
leave
enter
xor
pushf
mov
gs
jb
push
inc
cdq
out
add
sub
imul
sub
push
sub
or
add
not
add
jle
adc
ds
iret
sub
xchg
adc
or
mov
inc
adc
es
or
sbb
adc
and
ficom
xchg
daa
and
fisubr
dec
sub
les
sub
repnz
rcl
clc
popa
mov
add
test
or
daa
xor
add
or
aaa
mov
and
push
add
(bad)
cmp
ins
ins
icebp
add
(bad)
or
enter
cld
add
add
add
sbb
xchg
ffreep
aad
imul
addr16
adc
data16
jbe
in
mov
js
pop
call
gs
adc
add
xor
xchg
or
imul
or
fdivr
add
sbb
loopne
pushf
push
add
and
fild
xchg
ror
or
and
add
pusha
push
sub
push
push
push
dec
sbb
xchg
pop
pop
pop
mov
dec
mov
push
movups
push
movs
sti
and
add
mov
add
sub
cld
clc
xor
ror
add
push
sub
jle
in
scas
cmp
fmul
or
ror
sub
inc
cmp
add
loopne
fild
mov
rol
push
adc
sar
(bad)
mov
jbe
call
add
jnp
cmps
retf
or
out
fnstenv
(bad)
dec
sub
sahf
ror
xchg
int3
push
imul
nop
test
into
sahf
pop
dec
lmsw
or
pop
adc
and
and
lahf
outs
mov
mov
push
or
xchg
test
(bad)
xor
pop
dec
push
sbb
adc
dec
lds
push
pop
fs
sbb
and
fs
nop
xor
rol
adc
fnstenv
push
xor
cdq
mov
push
adc
jmp
out
lods
pusha
push
imul
movups
or
cs
(bad)
ss
and
or
jle
add
movhps
or
(bad)
fxch
sbb
adc
lock
data16
adc
jbe
adc
ss
xor
imul
adc
sahf
out
sub
or
push
push
cmps
sbb
out
sbb
push
pop
and
iret
out
pop
or
pop
push
mov
xor
jg
dec
outs
xchg
ss
adc
push
fstp
push
mov
adc
mov
repz
sbb
sbb
push
pop
in
repnz
push
pop
pop
push
jle
sahf
addr16
push
pop
push
fild
out
jnp
data16
jg
nop
mov
out
adc
(bad)
adc
sbb
cmp
repz
sbb
push
sbb
iret
pop
adc
dec
sahf
out
push
adc
lea
mov
add
add
xor
sub
adc
adc
call
mov
pusha
or
cmp
pop
loopne
and
mov
lods
or
rol
lods
sub
mov
push
add
mov
adc
fild
jge
push
pushf
and
push
mov
or
sysexit
dec
add
or
add
cmp
add
jb
sbb
xor
xlat
hlt
dec
loopne
inc
adc
gs
test
out
xchg
jle
add
psubsw
sub
pop
sbb
adc
sbb
out
enter
movs
jp
add
xor
mov
sbb
xchg
jge
cli
xor
xchg
or
fisub
sub
and
pop
add
add
cmp
ror
sub
or
jp
dec
and
dec
jo
inc
mov
and
dec
(bad)
loopne
push
nop
notrack
or
sub
or
ret
xchg
pop
jae
mov
or
lea
add
or
xchg
pop
sbb
(bad)
and
add
mov
xchg
jecxz
sbb
inc
inc
cdq
or
add
mov
int3
(bad)
push
lock
sub
out
jg
mov
jmp
push
pop
cmp
mov
enter
and
in
xchg
sbb
adc
inc
push
dec
dec
rcr
dec
sub
test
repz
lock
popf
call
test
rol
or
push
rol
mov
jbe
(bad)
cmp
aaa
pop
scas
xchg
ret
arpl
sbb
adc
mov
lahf
add
fild
cs
xor
push
add
add
fadd
push
in
pop
in
fidiv
or
push
sbb
fldcw
jns
addr16
add
dec
or
dec
add
cmp
enter
inc
cli
inc
sub
pop
das
sub
pop
or
out
mov
push
push
rcl
pop
push
dec
add
dec
test
jle
push
shl
ret
inc
or
retf
das
mov
movs
add
inc
or
or
mov
pop
pop
sbb
js
call
xchg
adc
das
sub
in
(bad)
ja
add
push
jmp
add
iret
rcr
sbb
leave
leave
and
mov
pop
aad
pushf
neg
es
xor
stc
mov
fdivr
cmp
mov
das
inc
and
add
ins
lea
popf
in
pop
push
push
sbb
dec
sub
aaa
jg
fimul
cs
add
lods
mov
hlt
dec
test
scas
xrelease
pop
inc
inc
fsubr
add
xor
sub
add
add
adc
dec
adc
mov
mov
sbb
adc
repz
inc
or
or
sub
sbb
pusha
sti
xor
or
cmp
fcmovbe
xor
adc
popa
pop
add
push
xor
sbb
lahf
out
or
or
or
pushf
out
or
iret
repz
sahf
mov
call
rcl
add
cmp
inc
popf
cmc
xor
or
movs
push
aaa
sbb
inc
mov
and
(bad)
mov
ja
lods
and
pushw
inc
neg
aam
mov
pop
or
(bad)
push
clc
pop
add
pop
les
add
nop
push
jmp
cwde
mov
pop
adc
jle
inc
add
pop
add
inc
sbb
push
test
les
icebp
sub
pop
pop
jne
jne
jg
mov
and
or
(bad)
out
push
or
adc
push
push
xchg
rol
adc
xchg
sbb
dec
xor
mov
push
inc
ja
sub
add
popa
mul
add
cmp
jns
push
or
ins
cmp
push
dec
shl
add
nop
daa
jmp
nop
es
fdivr
sub
add
out
mov
push
or
sub
mov
and
push
mov
sbb
push
add
push
setbe
shl
adc
xchg
cmps
or
push
inc
jle
data16
and
pop
sti
into
shl
pop
add
outs
mov
adc
push
cmp
aaa
mov
(bad)
fld
test
je
cmps
pusha
lods
and
jmp
rol
call
out
movups
sbb
cmp
push
(bad)
movups
rcl
pop
push
inc
loop
adc
mov
jmp
aaa
out
jo
ficomp
addr16
mov
jb
or
and
or
add
jg
andps
mov
cmp
lea
sbb
sub
sub
dec
push
push
mov
xchg
push
xchg
pop
fadd
sub
push
cmp
add
mov
push
add
add
xchg
inc
or
dec
rcr
mov
jae
aas
pop
in
xchg
push
sub
in
sbb
outs
add
rcl
(bad)
xor
shl
mov
sub
jbe
dec
test
mov
pop
add
push
push
cmps
shl
add
add
sub
or
xor
jo
pusha
or
push
ins
sub
sbb
add
pop
pop
mov
ins
adc
push
push
cmps
push
lods
push
sbb
jmp
ret
dec
fwait
sti
xchg
fbld
ja
iret
and
add
mov
neg
gs
inc
jnp
add
cmp
push
push
or
push
push
xor
xor
jbe
or
xchg
fwait
adc
cmp
mov
adc
(bad)
or
add
mov
or
aas
cld
xor
sub
inc
pop
push
sub
pop
aas
sub
mov
and
pop
or
neg
push
jge
push
jnp
shr
adc
push
sub
fisubr
add
xchg
hlt
pushf
mov
rcr
xchg
ins
sahf
add
ret
pop
sbb
add
sahf
dec
adc
and
dec
jp
or
out
add
hlt
push
add
add
cwde
cmp
inc
nop
ins
pop
sbb
dec
in
push
aaa
dec
xchg
pop
ret
mov
std
test
mov
add
jp
fnstcw
dec
cmp
rcr
add
(bad)
jo
push
fcomp
int
movs
mov
add
add
sub
and
mov
dec
inc
ins
pop
inc
arpl
inc
ins
je
loope
adc
scas
sub
mov
jne
add
mov
dec
mov
xor
dec
cmp
cmovno
repz
add
xor
sbb
xchg
sar
(bad)
shl
add
and
sbb
ins
out
mov
cwde
and
retf
jge
mov
push
and
jbe
add
rol
retf
adc
add
mov
fist
lods
es
xchg
lods
ins
sbb
cmp
push
dec
retf
cmp
test
in
icebp
inc
push
adc
xchg
es
sbb
jno
xor
fmul
add
pop
xchg
arpl
hlt
dec
sub
add
and
xor
(bad)
adc
or
push
adc
maxps
jmp
mov
add
pop
mov
add
iret
pop
fimul
adc
(bad)
fcmovb
add
jmp
call
mov
sbb
test
jne
add
and
inc
sbb
pusha
adc
pop
dec
pop
icebp
mov
or
push
sub
das
mov
outs
aaa
aaa
vmread
xor
push
nop
or
push
mov
cmc
sbb
pop
int
and
or
mov
pusha
inc
scas
adc
sbb
add
and
cmp
shl
add
adc
or
cmps
test
jnp
loopne
pop
or
add
mov
adc
sbb
xor
xchg
push
cmps
fnstcw
or
push
sbb
bound
ret
sub
adc
and
and
xor
inc
cmps
sub
or
xor
into
scas
adc
cmovg
dec
int
and
sub
and
inc
cs
aaa
ret
cli
(bad)
movaps
adc
nop
adc
push
or
(bad)
arpl
cld
mov
cmp
adc
adc
inc
das
dec
repz
xor
iret
dec
adc
add
adc
aas
pop
das
dec
mov
and
dec
add
adc
add
push
and
push
js
movs
jnp
into
mov
adc
cmp
and
jns
jns
adc
add
in
jns
add
addr16
es
iret
add
pop
push
(bad)
push
adc
dec
and
sub
xor
(bad)
fnsave
mov
sbb
add
pop
sbb
ja
inc
daa
push
sbb
add
enter
sbb
sbb
aas
sub
add
mov
mov
push
sbb
push
push
adc
sbb
imul
pop
pushw
sub
add
loop
dec
aaa
pop
outs
fstp
and
and
and
add
and
adc
push
add
push
(bad)
ds
div
sub
outs
push
push
pop
push
mov
aas
das
scas
mov
sar
out
and
and
xchg
mov
and
mov
nop
clc
ins
jns
push
sahf
add
out
mov
xor
jbe
cmp
push
inc
add
pop
sbb
pop
or
pop
data16
xor
ds
and
pop
mov
push
xor
inc
and
and
and
out
fstp
pop
and
aaa
and
push
add
mov
imul
push
add
dec
adc
push
or
adc
add
ds
out
push
and
cmp
loopne
pop
(bad)
rcl
in
(bad)
push
and
aaa
and
xor
(bad)
pop
and
xor
jnp
out
sbb
jmp
mov
mov
jns
cmp
and
cmp
ds
cmp
arpl
inc
or
sub
je
ror
shl
jbe
shl
pop
pop
mov
(bad)
mov
imul
adc
lock
dec
retf
ss
jge
and
sub
adc
inc
adc
jge
mov
jge
jnp
pop
pop
push
sub
and
inc
ficom
gs
push
cs
mov
push
(bad)
xor
mov
sbb
test
xchg
mov
clc
pop
jb
xor
add
pop
popa
popw
lods
add
xchg
mov
std
adc
pop
das
bound
lds
mov
pop
or
or
dec
xor
adc
js
push
push
push
push
test
ret
dec
popa
and
dec
push
sub
xor
sub
jecxz
or
test
push
fisttp
or
push
or
jbe
inc
or
movs
cmp
call
cs
xor
inc
gs
or
jmp
call
mov
pop
or
fs
cmc
xor
mov
sysenter
adc
xor
push
adc
xor
fistp
push
adc
adc
repz
aas
call
adc
adc
push
push
push
push
xor
push
cdq
(bad)
cld
pop
pop
pop
xor
sbb
sbb
sbb
pop
sbb
push
add
sbb
cmp
add
sub
pop
pusha
and
fidiv
sbb
ins
jae
xor
xor
cmps
add
jp
pop
and
mov
std
xchg
retf
push
sbb
cs
inc
push
sar
and
rol
in
sub
cmp
adc
mov
xchg
jmp
mov
ins
dec
sub
sub
sub
mov
ss
sub
jle
xor
xor
dec
sti
mov
xor
ss
ins
fcomi
cmp
cmp
ss
pop
ret
data16
das
xor
xor
xor
fnstenv
xor
xor
xor
inc
sbb
call
std
xor
push
sbb
push
(bad)
push
xchg
xchg
movs
adc
push
mov
data16
or
push
jb
xor
jae
mov
dec
add
add
sub
or
dec
xrelease
popa
mov
sub
sbb
(bad)
ins
repnz
arpl
xchg
add
pop
push
fwait
fwait
pop
cmp
push
or
or
cwde
fwait
fwait
pop
pop
push
or
jmp
mov
cmc
push
hlt
fild
mov
mov
paddw
xor
xor
pop
rcl
loopne
loopne
rcl
and
ins
add
push
dec
jo
pop
push
push
mov
in
aad
jecxz
mov
push
inc
or
and
pop
inc
mov
inc
test
sub
adc
out
call
add
popf
ds
les
sub
and
scas
xor
popa
adc
xchg
ret
adc
fadd
push
das
cmps
mov
jmp
sub
or
xor
test
mov
cs
stos
sub
inc
inc
dec
das
pop
add
les
pushf
cs
xor
add
shl
xor
pop
mul
inc
cmp
pushf
fmul
call
cmps
cmp
lods
sub
daa
pop
sub
pop
ss
ss
mov
push
and
add
mov
adc
mov
ret
adc
fisub
ror
mov
cmp
jnp
fsubr
add
inc
jmp
pop
dec
jae
fsub
xor
xchg
ins
fistp
sbb
aas
push
outs
call
jo
add
retf
or
inc
jo
iret
cmp
mov
or
cmp
adc
add
scas
cmc
mov
and
popa
mov
add
cmp
push
das
sbb
adc
mov
mov
sbb
bound
jne
xchg
cmp
and
add
cld
sbb
in
inc
or
add
outs
mov
push
mov
push
aas
mov
arpl
jmp
cmp
loope
js
pop
in
adc
out
arpl
mov
pusha
mov
pop
mov
data16
and
nop
xchg
fnstsw
(bad)
loop
push
cmp
dec
mov
mov
stos
sub
lods
lods
xor
or
push
xor
push
loop
rcl
lahf
jecxz
adc
xor
or
rcr
test
add
into
dec
xchg
(bad)
aam
dec
inc
into
loope
out
xchg
add
xor
fs
adc
dec
mov
or
mov
or
imul
popf
dec
sbb
sbb
pusha
xor
xor
add
retf
sbb
sub
dec
add
push
dec
inc
inc
lea
sbb
push
push
popa
mov
mov
sar
cmp
pusha
add
imul
dec
cmp
adc
pop
pusha
addr16
and
dec
dec
dec
inc
or
and
and
adc
sbb
pop
int
imul
jl
popa
cs
push
add
(bad)
jno
shl
cs
xchg
loopne
sbb
mov
lsl
push
push
out
jb
add
add
stos
in
sbb
add
mov
push
aad
add
mov
push
pop
pop
les
ins
push
std
(bad)
push
push
dec
jnp
jmp
dec
pushf
push
mov
daa
ins
or
and
xor
ins
inc
imul
mov
sub
xlat
or
jno
test
mov
shr
mov
sbb
inc
pop
push
push
fdivr
push
xor
inc
dec
or
pop
cmp
rcl
xor
dec
or
xor
pop
cmp
loope
mov
or
loope
xor
sbb
fsubr
xchg
xor
jg
fisub
ficom
dec
sbb
cmp
mov
jmp
icebp
ja
stos
cmp
dec
lea
sbb
push
cmp
and
out
add
jns
mov
cmp
cs
bound
inc
xchg
mov
add
mov
lock
lods
pusha
inc
or
inc
lods
test
lock
sbb
daa
add
xchg
hlt
data16
test
and
add
pop
dec
imul
add
in
dec
mov
xor
xor
arpl
pop
mov
pop
xor
imul
rcl
mov
popa
cmp
or
push
push
pop
lds
adc
push
test
imul
push
dec
ins
cli
inc
and
stc
or
xchg
jg
(bad)
adc
pop
cmc
dec
fiadd
xchg
add
adc
add
add
adc
sub
xchg
add
add
dec
lods
dec
mov
sbb
or
push
add
add
sbb
out
or
mov
mov
adc
inc
test
std
mov
adc
add
dec
loop
dec
popa
ror
cmp
jns
add
inc
or
test
sub
inc
jmp
xcrypt-cbc
cmps
push
push
rcr
mov
add
das
movs
call
add
ins
xor
ret
mov
xor
je
test
pop
add
ss
inc
sbb
ror
ds
add
and
sahf
mov
inc
xchg
jp
adc
mov
dec
add
adc
or
movs
adc
sbb
cli
or
or
out
into
jg
push
push
cwde
sbb
xchg
pop
xchg
(bad)
add
or
pop
mov
push
(bad)
cmp
hlt
jg
add
push
sub
test
outs
xlat
sahf
add
das
adc
or
add
add
out
sti
or
xchg
or
ins
or
dec
sub
adc
mov
fs
cmp
inc
mov
jge
or
xor
and
arpl
loope
lea
push
retf
add
mov
mov
sub
and
add
xor
push
pusha
scas
or
sbb
test
retf
push
dec
js
mov
push
jl
fist
inc
push
ret
ret
dec
adc
fwait
(bad)
rol
dec
push
dec
and
or
adc
add
call
dec
push
ds
int
scas
jne
pop
test
mov
inc
jmp
add
cmp
cdq
dec
mov
xlat
inc
cmps
add
or
or
fimul
and
out
or
add
ror
push
dec
aaa
icebp
dec
push
push
lds
sbb
fbstp
cmp
and
inc
test
rcr
jns
cmp
or
pop
xchg
or
inc
inc
sub
ficom
add
pop
xor
lahf
inc
and
ins
sbb
pop
je
cs
mov
cmp
mov
add
jno
or
cmp
dec
sti
es
inc
loope
ins
and
mov
xlat
inc
dec
mov
inc
mov
das
pop
stos
push
and
push
in
mov
xchg
in
add
inc
pop
movs
rcl
nop
adc
into
or
and
cmp
pop
leave
(bad)
enter
or
cmp
stc
clc
shl
or
stc
xchg
retf
out
xor
pop
add
or
les
(bad)
shl
jl
test
es
out
cmova
mov
inc
(bad)
mov
cdq
js
jbe
adc
xlat
leave
in
xor
add
push
or
or
lahf
xor
push
add
es
out
add
and
bound
mov
push
sbb
add
cmc
loope
push
sti
in
mov
daa
(bad)
jmp
and
mov
aaa
adc
lea
adc
and
imul
imul
cmps
xor
push
inc
cmp
inc
or
add
rcl
outs
inc
fwait
add
ret
mov
push
pusha
movs
adc
xchg
jno
pop
aas
and
mov
ficom
add
mov
push
fmulp
repz
add
iret
repz
or
or
lock
repz
movups
adc
sbb
dec
sub
movs
in
sbb
sbb
outs
cmp
dec
pop
adc
xchg
or
retf
dec
and
push
cdq
sbb
lods
or
push
sbb
test
xchg
mov
pop
adc
or
push
dec
add
test
stos
add
add
movs
jne
clts
push
xor
cmps
add
add
add
add
aaa
or
add
and
jmp
xchg
mov
and
and
xchg
ret
adc
inc
add
push
mov
pop
movups
inc
add
adc
adc
loopne
mov
push
or
test
pop
dec
xchg
mov
les
push
jecxz
fcom
jne
test
lock
dec
adc
or
adc
jp
inc
inc
cmps
scas
or
or
add
enter
test
push
sub
dec
mov
or
and
(bad)
test
retf
cld
iret
or
push
ins
inc
test
adc
std
dec
sub
or
sub
jmp
in
add
mov
pop
pop
mulps
xor
sbb
mov
adc
shl
rcl
sbb
push
xor
loope
movs
mov
jmp
inc
(bad)
pop
add
add
and
(bad)
out
test
(bad)
das
or
call
add
xlat
and
cmp
xchg
push
or
mov
das
mov
sti
add
adc
cs
cs
dec
or
dec
call
dec
ins
cmps
stc
push
or
or
pushf
or
loopne
add
dec
bound
stos
(bad)
or
mov
inc
or
add
push
or
jecxz
imul
inc
mov
lea
push
sub
pop
je
lahf
mov
inc
popf
adc
mov
jg
push
sub
adc
jl
(bad)
sahf
or
pusha
(bad)
adc
add
xor
mov
and
xor
sbb
add
push
dec
jno
xchg
and
adc
imul
pop
sbb
sbb
mov
push
xchg
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
xchg
push
pop
and
aam
xchg
xchg
and
and
sub
adc
(bad)
aam
adc
aad
push
fwait
daa
adc
fisubr
inc
add
push
xor
sub
das
out
mov
wrmsr
add
adc
xor
xor
add
xor
xor
lods
out
add
inc
cmps
lea
adc
jmp
add
sbb
inc
ins
sbb
ds
and
push
mov
or
mov
push
dec
sti
adc
pop
es
pop
pinsrw
sub
pusha
pop
or
inc
and
mov
arpl
ret
adc
push
rol
les
int3
dec
cs
sahf
data16
xlat
inc
dec
push
mov
or
shl
rcl
mov
and
addr16
movs
cdq
add
lock
mov
sar
inc
rcl
scas
test
or
cwde
dec
cmp
and
sub
test
xchg
mov
jne
inc
mov
inc
mov
dec
add
xchg
adc
imul
lods
test
lahf
adc
mov
adc
adc
leave
mov
jecxz
mov
gs
inc
push
cld
sahf
mov
retf
out
xor
inc
pop
xchg
cmp
daa
lea
add
add
das
scas
xor
or
mov
cmps
sbb
cmp
xor
jle
iret
repz
add
push
add
add
data16
js
or
shl
add
xchg
and
adc
arpl
popa
test
je
sysret
inc
lods
dec
cmps
mov
rol
add
adc
cmp
push
test
cmp
ja
fistp
cdq
and
fdivr
dec
inc
dec
push
ss
push
inc
inc
xchg
cmps
lock
jnp
push
adc
push
mov
sbb
or
pop
add
add
add
mov
fldenv
mov
inc
inc
or
cdq
and
xor
loop
iret
push
sbb
push
dec
push
or
outs
cmp
push
dec
ins
rcl
into
mov
adc
fwait
loopne
dec
inc
test
icebp
and
and
test
add
push
es
sti
add
xor
stc
add
or
dec
dec
in
adc
rcl
mov
inc
(bad)
ja
ret
push
xchg
add
push
pop
dec
into
and
nop
inc
mov
add
xor
dec
inc
push
or
loope
mov
xor
pop
or
(bad)
sbb
and
pop
(bad)
out
inc
sbb
fst
or
and
pop
(bad)
or
fld
in
ret
add
mov
cdq
or
rcl
cmovb
adc
es
sub
ins
pusha
inc
sbb
rcr
inc
sbb
fiadd
and
imul
dec
push
dec
sbb
adc
xchg
or
js
mov
mov
mov
or
jae
mov
push
push
push
push
out
mov
or
push
dec
adc
mov
ret
imul
push
daa
sbb
and
pop
xchg
out
jnp
add
and
mov
add
dec
movs
shl
je
cmp
add
cmp
cs
mov
or
sbb
lahf
lods
sbb
mov
int
inc
cmc
add
test
or
mov
fcomp
xchg
dec
shr
mov
push
test
sbb
mov
add
nop
pop
or
movs
js
mov
or
adc
push
ret
pop
pop
sub
cmp
mov
nop
cs
or
enter
add
or
jo
sti
es
xor
sbb
sub
cs
or
jo
out
inc
add
lea
inc
inc
adc
ins
je
add
test
mov
mov
or
xchg
rcl
imul
xor
fs
aaa
sub
or
add
adc
jo
xor
rol
adc
daa
mov
inc
add
dec
xor
icebp
add
push
nop
mov
jecxz
add
shl
add
adc
and
mov
adc
add
enter
cmps
mov
mov
int
fcomp
fstp
or
add
xchg
je
xor
xor
cmps
mov
sub
add
lods
inc
imul
cmp
cmp
add
out
sbb
jb
loopne
dec
sbb
pop
sbb
push
or
lods
out
xchg
push
pop
pop
xchg
push
push
shl
jne
inc
sar
cmp
push
pop
xchg
test
mov
sbb
or
add
add
push
pop
push
and
inc
sbb
xchg
add
pop
sbb
sub
ss
or
mov
ja
lods
outs
push
inc
fwait
aaa
push
push
cmp
add
push
sbb
fdiv
add
or
add
fisttp
add
mov
or
lods
adc
xor
jmp
push
and
call
dec
dec
repz
inc
dec
add
add
es
xchg
jmp
and
fist
sbb
add
push
add
add
dec
xchg
xor
ins
xor
and
or
mov
push
add
mov
add
add
add
lock
mov
in
mov
icebp
sbb
hlt
xor
pusha
pusha
test
inc
and
pusha
std
cmp
jbe
int3
bound
or
inc
dec
movs
leave
rol
test
dec
cmp
pushf
aaa
xchg
xchg
cbw
mov
inc
jecxz
test
or
ins
mov
arpl
cmps
push
adc
xlat
sub
or
test
repz
add
sub
xor
push
xchg
xchg
out
add
mov
add
bound
add
mov
movs
out
or
add
pop
aaa
mov
mov
je
push
sub
repnz
das
imul
jg
or
sub
sbb
cmp
add
shl
pop
sbb
add
inc
dec
clc
rcl
and
pop
sbb
leave
and
(bad)
push
and
inc
fwait
pop
sub
push
and
inc
jp
xchg
mov
test
adc
(bad)
pop
cmp
sub
mov
add
fld
inc
and
adc
stos
nop
lea
cmp
sub
sbb
popf
jb
or
jg
push
jo
xchg
pop
dec
dec
fiadd
push
xor
xor
push
ficom
push
int
and
movs
popa
retf
out
adc
sub
ret
adc
add
add
inc
or
pop
popf
adc
inc
sbb
xchg
popf
int
jno
or
fwait
and
imul
das
inc
and
bound
xor
adc
push
inc
mov
ds
jg
cmp
icebp
and
cmc
xchg
wrmsr
xchg
cmp
scas
xor
and
push
mov
test
inc
or
or
and
push
pop
or
aam
leave
add
xor
mov
and
mov
jge
cmp
popa
pop
inc
dec
aaa
pop
add
out
add
add
add
sbb
test
push
push
daa
dec
adc
push
dec
jae
xchg
fdiv
pop
outs
push
inc
movs
rol
daa
not
sbb
push
xchg
ss
add
cmp
or
les
adc
add
dec
jp
(bad)
push
add
jmp
pop
add
pop
ret
xchg
les
test
xchg
xor
jnp
mov
in
pop
lods
xchg
xchg
inc
or
push
test
adc
pusha
add
push
push
dec
sbb
sub
or
push
sbb
inc
cmp
lea
pop
mov
sbb
jb
push
and
jp
adc
pop
add
gs
xchg
sub
aaa
mov
sbb
dec
movs
mov
lods
sub
sbb
or
push
and
cdq
push
imul
movs
leave
cmps
xchg
add
outs
dec
test
pop
sbb
mov
xor
push
sbb
push
cmp
enter
adc
or
sub
or
les
add
or
add
add
jecxz
push
sbb
aam
fiadd
push
mov
mov
cmp
add
sbb
mov
jo
rcl
adc
adc
add
sbb
stos
pushf
mov
sbb
add
cmp
stos
add
and
xchg
xchg
shl
mov
or
or
or
mov
add
add
pop
sub
out
jg
pop
(bad)
and
xchg
lds
nop
(bad)
rol
add
pop
lods
in
jo
std
mov
mov
sub
scas
movs
push
mov
sub
mov
pop
lds
inc
addr16
aas
lea
mov
xlat
out
pop
pop
mov
adc
inc
adc
js
jmp
cmps
xchg
mov
in
cmp
mov
daa
test
pusha
push
add
pop
sub
add
add
cmp
sub
add
push
mov
loop
add
mov
push
sub
xchg
test
jnp
push
into
add
mov
sbb
data16
aam
add
adc
stos
mov
push
jne
jae
jne
adc
or
lods
ja
push
out
repnz
fs
push
and
xor
push
xor
daa
wbinvd
scas
adc
mov
jne
or
daa
and
or
call
test
out
push
pop
ret
add
cmps
bound
or
pop
and
fdiv
add
xor
lds
adc
retf
loopne
and
outs
fmul
push
out
sub
sub
outs
push
lds
(bad)
jg
or
or
pop
aas
inc
or
lods
inc
add
add
sub
cld
es
pop
or
rcl
add
nop
aam
sahf
mov
xor
push
xor
test
push
sbb
fs
adc
mov
jo
movs
push
push
push
inc
pusha
add
inc
push
call
mov
add
aad
test
dec
(bad)
mov
sub
rcr
cmp
add
adc
and
dec
hlt
adc
xchg
lahf
push
push
add
xor
pushf
xor
xchg
sub
cwde
rol
daa
icebp
daa
push
enter
add
lea
ins
jmp
retf
aam
fcmovbe
add
enter
cmp
xor
pop
(bad)
ss
ins
adc
cmps
mov
push
push
pusha
dec
xor
ret
ins
nop
add
fcmovnb
adc
add
and
data16
in
in
sub
dec
(bad)
loope
retf
add
add
add
jno
add
sub
repz
add
add
push
jns
or
push
pop
xor
sub
inc
inc
test
shl
xchg
xor
dec
inc
push
cmp
adc
ss
(bad)
dec
ss
cmp
hlt
inc
(bad)
and
or
cmp
mov
or
lock
or
adc
mov
jnp
jbe
fbstp
sub
(bad)
aam
(bad)
int
xchg
sbb
xor
xchg
in
stos
add
add
cmp
or
mov
data16
xchg
or
in
push
bound
push
adc
int3
data16
push
cmpps
lods
jecxz
push
orps
clts
or
add
pop
pusha
faddp
jg
cmps
hlt
test
cmps
movs
rcl
cmp
pop
or
push
xor
inc
xor
push
sbb
daa
push
nop
mov
and
add
add
inc
pop
jnp
lods
and
or
mov
xor
fs
(bad)
pop
xchg
or
cwde
mov
fadd
out
daa
xor
sub
pop
pcmpgtd
push
clc
rcl
frstor
push
sti
adc
cwde
mov
rol
add
inc
sbb
or
and
movs
jmp
ret
stos
cmp
jmp
stc
pop
jge
sbb
add
add
add
inc
or
pop
dec
and
arpl
lods
cmp
lods
sbb
xchg
push
mov
jbe
pushf
add
aad
add
mov
dec
jge
cmc
cld
push
adc
inc
cmp
sub
dec
popa
mov
and
fnstsw
push
sub
shl
ss
mov
push
pushf
pop
inc
inc
inc
(bad)
push
mov
lahf
add
xor
mov
xchg
mov
inc
in
call
add
and
out
mov
sbb
retf
rcl
push
add
sub
adc
mov
adc
push
cmp
aam
mov
dec
clc
mov
and
fadd
(bad)
nop
out
aad
ror
or
inc
push
nop
push
cmp
or
push
cmp
pusha
inc
pusha
movs
sbb
rol
add
int
repnz
sbb
xchg
cmp
fist
fwait
add
js
rcl
pop
mov
and
aaa
add
dec
ja
sub
jmp
mov
lods
jns
jo
xor
imul
jno
or
jno
jo
jmp
and
cwde
pop
add
xchg
mov
adc
loopne
jmp
sub
imul
push
mov
(bad)
stc
jp
ins
pop
or
or
pop
pop
cwde
or
into
mov
retf
js
movs
adc
cvtpi2ps
adc
sti
push
data16
pushw
ins
xchg
lahf
adc
or
aaa
sbb
pop
rol
sbb
in
mov
and
cmp
pop
fwait
push
xor
loopne
inc
jnp
leave
and
add
adc
ss
add
sbb
pop
and
cwde
mov
shr
adc
sbb
sahf
sbb
xchg
ins
daa
and
aaa
sbb
sbb
sbb
sbb
lahf
fnstenv
fldenv
sbb
or
frstor
ss
mov
out
in
xchg
sbb
aaa
scas
test
dec
sbb
cmps
sbb
out
sbb
sbb
xchg
bound
(bad)
sbb
pop
push
and
sbb
cs
sbb
pop
cmp
sbb
enter
sbb
mov
pushf
inc
sbb
jns
out
push
sbb
sbb
or
lods
stc
sbb
sbb
sbb
movs
test
movs
ficomp
and
add
sbb
sbb
adc
out
xchg
mov
pop
fcomp
fcomi
or
add
and
mov
sbb
and
and
movs
dec
cmp
and
and
imul
ins
add
xchg
pop
and
and
imul
pop
push
adc
xor
sub
or
sub
mov
daa
adc
sub
aaa
and
push
and
popf
push
pop
pop
stos
mov
mov
push
sub
cmp
jge
xor
loopne
mov
and
and
add
fstp
xor
push
pop
sahf
xor
xor
int
push
xor
adc
adc
sub
cmp
xor
jbe
pop
xchg
mov
popa
call
les
xchg
cli
and
sub
inc
jmp
push
and
sub
loope
stos
mov
in
fiadd
loope
call
sub
jmp
xor
add
inc
sub
stos
cmc
sub
mov
loop
sub
stos
and
cmp
push
pop
arpl
mov
fucom
push
add
lea
xor
inc
jg
daa
and
cmp
les
adc
sar
daa
pop
push
sub
ins
and
mov
je
xchg
adc
outs
push
pop
retf
push
sub
lods
dec
aas
jle
push
aam
fadd
jecxz
jmp
pop
retf
dec
(bad)
or
daa
sbb
cs
addr16
add
daa
inc
add
stos
add
or
loope
xchg
add
mov
sbb
dec
fdivr
sbb
psrlw
sub
adc
push
pushf
ror
and
push
ja
(bad)
dec
xor
add
pop
test
xchg
test
adc
je
lea
adc
sub
xchg
dec
mov
adc
inc
inc
pusha
ja
xor
mov
pop
lods
mov
stos
add
test
push
sub
mov
or
or
sub
and
jg
sub
jp
or
mov
adc
movs
jbe
cmp
or
test
adc
cs
and
pop
movs
stc
sahf
shr
pop
fdiv
xor
push
dec
cmp
dec
add
or
mov
call
xchg
movups
cmp
movups
repz
(bad)
rcl
or
add
xor
mov
push
ret
ret
xor
lea
sbb
add
mov
xchg
ss
(bad)
inc
retf
push
sti
inc
and
cmc
adc
add
and
in
xchg
push
rol
push
and
sti
cmp
pop
add
push
mov
fisub
inc
or
and
or
ss
addr16
add
push
or
push
add
mov
retf
add
clc
or
add
xor
pusha
and
add
xor
ror
pop
adc
push
xchg
mov
push
mov
and
sbb
adc
sub
add
gs
ror
loope
sub
and
cmp
or
daa
or
xor
sub
adc
nop
test
or
and
jle
jns
and
cmp
add
and
int3
inc
mov
sbb
inc
and
lock
adc
sub
add
retf
loope
mov
jae
daa
mov
ja
dec
movs
call
pop
test
aad
add
xchg
xor
mov
mov
stc
cmp
cmp
push
sbb
call
mov
mov
xor
(bad)
jmp
pop
sub
dec
add
pusha
shl
mov
push
sub
test
test
ror
mov
retf
repnz
leave
in
fs
mov
nop
push
jl
add
cmc
push
inc
test
sbb
push
out
push
adc
cmp
add
pop
xchg
push
adc
adc
push
mov
or
pop
fwait
adc
push
push
push
sub
call
push
adc
daa
jp
adc
push
or
cs
getsec
adc
push
adc
xor
sbb
add
ror
retf
xor
sbb
sbb
repz
sbb
test
sbb
mov
xor
pop
aaa
and
aad
data16
and
and
push
and
adc
push
and
xchg
cmp
mov
pop
sub
and
imul
add
and
jge
jmp
add
add
and
stc
xor
daa
push
daa
and
repz
sub
sub
sub
jl
dec
sub
sub
call
mov
sar
xor
mov
xor
das
(bad)
push
xor
stc
push
cwde
std
cmp
xor
adc
push
and
sub
xchg
xor
push
xor
and
xor
repz
sbb
adc
iret
repz
cmp
cmp
push
cmp
or
cmp
xor
inc
dec
adc
inc
aaa
ds
into
or
inc
cmp
in
mov
cmp
inc
push
aaa
inc
cmp
cmp
cmp
cmp
icebp
(bad)
mov
push
dec
dec
cmp
mov
cmp
fstp
cmp
adc
aaa
mov
add
mov
cmp
sbb
add
cmp
dec
aaa
lahf
push
inc
cmp
cmp
xor
cmp
cmp
cmp
jns
jae
pop
(bad)
push
push
inc
cmp
fwait
in
mov
push
cmp
xor
es
push
push
dec
repz
dec
cmp
(bad)
cmp
cmp
cmp
mov
cmp
idiv
(bad)
cmp
lock
cmp
cmp
add
iret
push
inc
cmp
xor
(bad)
cmp
cmp
call
inc
xor
mov
in
mov
push
cmp
xor
ds
cmp
mov
dec
cmp
cmp
cmp
cmp
push
idiv
(bad)
cmp
ins
sub
cmp
and
pop
push
cmp
imul
inc
cmp
pop
into
cmp
fild
push
cmp
daa
sub
data16
cmp
push
cs
xlat
push
add
adc
std
xchg
xor
pop
int3
mov
or
fsub
and
add
imul
adc
bndldx
push
jmp
inc
xor
and
bound
and
pop
pop
add
inc
bound
pop
ret
jne
mov
mov
cmp
test
mov
mov
ss
xchg
dec
(bad)
push
das
fild
gs
adc
cmp
or
add
dec
push
push
mov
lods
sbb
ret
cwde
inc
retf
in
add
or
jecxz
add
popa
aaa
test
mov
jmp
out
cwde
and
xchg
xor
xchg
(bad)
push
or
ins
jmp
je
push
adc
pop
push
aas
rcl
jb
(bad)
add
xor
or
or
add
or
sub
mov
or
pop
or
fild
push
lods
out
sbb
add
ss
dec
mov
ret
jg
dec
push
dec
mov
daa
pop
xor
push
xor
cmp
movs
sbb
lds
xor
(bad)
push
push
mov
mov
or
mov
leave
add
or
mov
mov
mov
cmc
sub
ror
add
push
dec
std
mov
ins
in
cmp
and
and
add
(bad)
jnp
add
push
add
gs
daa
mov
add
sub
nop
cs
inc
xor
inc
xor
pusha
push
xchg
xor
aaa
lds
xor
xor
pusha
push
add
xor
fistp
xchg
adc
addr16
inc
push
xor
push
mov
dec
inc
push
aas
push
inc
cmp
adc
inc
adc
outs
mov
xor
push
cmp
fimul
jge
sub
sub
movs
loopne
mov
verr
pop
adc
cmp
jo
dec
jecxz
add
shr
or
les
das
or
inc
call
push
repnz
das
and
add
add
arpl
sbb
adc
or
stos
loope
ret
out
jecxz
arpl
push
pop
and
in
and
popa
jae
push
shl
xlat
rcr
push
sub
xor
add
xchg
mov
sub
(bad)
outs
call
(bad)
push
aaa
add
pop
sub
inc
and
daa
ret
fwait
add
add
mov
loope
cmp
xor
and
sub
cmp
xchg
sub
lods
sbb
xor
push
stos
jecxz
aaa
cmp
pop
and
cmps
inc
imul
fmul
jbe
inc
mov
inc
xchg
ins
push
mov
out
imul
adc
add
and
dec
es
arpl
dec
push
lods
xchg
add
lahf
movs
cmp
mov
inc
mov
pushf
or
lds
mov
sub
outs
push
add
xchg
and
imul
jb
iret
xor
cmp
ret
jnp
repz
push
lods
pop
pop
fstp
arpl
sbb
xchg
fsubr
cmp
pop
stos
dec
cmp
sub
mov
sti
jne
pop
test
dec
pop
xor
jnp
outs
(bad)
lds
cmp
cmp
mov
mov
loopne
pop
mov
bound
push
leave
or
inc
adc
cmp
mov
imul
push
test
adc
arpl
ins
cmp
add
stos
sub
and
cmp
pop
adc
mov
dec
push
(bad)
dec
adc
dec
mov
dec
add
push
jne
or
and
push
(bad)
dec
mov
pop
inc
or
push
push
and
and
retf
les
pop
addr16
mov
outs
cli
dec
shl
push
sub
rol
add
add
fsub
pop
rcl
mov
test
jno
ja
add
pop
push
rol
cmp
mov
cmp
inc
sbb
adc
inc
nop
bound
enter
ins
repz
jecxz
imul
and
mov
nop
push
push
cmp
push
adc
add
xor
xor
out
(bad)
dec
repz
repz
mov
xor
dec
dec
push
pop
pop
adc
in
or
inc
push
inc
sbb
and
add
(bad)
mov
push
imul
and
mov
aas
inc
adc
xchg
fisttp
(bad)
daa
xor
cs
mov
sub
mov
inc
inc
cmp
outs
add
inc
mov
cwde
cmp
sub
cmp
push
leave
inc
push
jns
jo
and
jge
adc
dec
jg
or
xchg
xchg
push
adc
xor
ret
sbb
add
iret
dec
inc
mov
adc
push
cwde
dec
push
nop
xchg
bound
adc
aaa
add
test
cmps
or
adc
sub
and
add
stos
mov
mov
pop
call
outs
daa
jae
lods
mov
das
pop
inc
enter
push
or
xor
or
or
arpl
daa
test
pusha
push
push
scas
pop
mov
push
push
sub
cmp
push
sub
mov
stos
and
das
and
push
xor
xor
arpl
loopne
aam
iret
and
mov
and
shl
(bad)
dec
sbb
or
inc
fwait
aad
and
ins
xchg
adc
xor
movs
and
sbb
ffree
retf
sbb
cmps
adc
stc
mov
aad
test
sbb
add
inc
pop
and
mov
mov
popa
push
das
mov
or
sub
pop
rcr
push
mov
imul
adc
fdiv
(bad)
call
sbb
mov
xlat
inc
lea
push
sub
(bad)
cwde
adc
sub
aas
adc
and
mov
and
or
push
sbb
add
or
jns
lea
add
mov
aaa
mov
inc
sub
mov
mov
scas
inc
and
adc
stos
add
test
sbb
sub
sub
pop
adc
push
pop
and
pop
outs
mov
xor
push
loopne
cmp
pusha
push
jae
and
or
sub
push
push
push
shl
xchg
jne
add
pop
add
hlt
add
xchg
adc
xor
cs
push
cmp
rcl
jge
pop
fwait
call
xchg
sub
pop
dec
push
inc
push
test
lods
cmps
and
sbb
inc
popa
ror
outs
fbstp
dec
clc
inc
mov
inc
add
or
(bad)
jg
inc
dec
add
inc
clc
mov
or
outs
outs
and
mov
xchg
sub
fdiv
add
and
xor
and
nop
test
pop
inc
add
xor
add
sub
dec
mov
xor
xor
push
inc
mov
push
shrd
pushf
pop
ins
add
or
adc
inc
and
dec
nop
pushf
les
nop
sub
xchg
ja
dec
in
pop
xchg
push
sbb
frstor
mov
pop
add
sbb
pop
and
std
adc
sbb
dec
mov
mov
loopne
sbb
add
mov
in
xor
or
addr16
stos
add
inc
aaa
sub
pop
jmp
call
sub
adc
jne
aas
add
add
push
push
cdq
cmp
scas
adc
sub
xchg
inc
inc
ret
fdivr
push
add
xor
add
cmp
inc
mov
pop
imul
inc
sub
mov
xor
push
cmp
sub
push
push
dec
dec
xor
adc
fmul
sbb
ror
addr16
mov
leave
xor
adc
push
(bad)
mov
sub
outs
jge
push
nop
js
ret
push
cmc
cwde
inc
and
mov
fs
xor
fdiv
xor
dec
cmp
sti
add
xchg
pop
gs
fisttp
push
in
stc
enter
dec
inc
inc
cmps
mov
cmps
xchg
stos
sub
inc
not
push
xchg
add
dec
mov
push
xor
mov
cmp
repnz
dec
jne
outs
xchg
cmc
dec
bound
push
les
gs
add
dec
push
and
bound
shr
jae
mov
xor
mov
inc
in
and
push
pop
or
pop
fmul
sub
out
sbb
or
or
loope
arpl
xchg
aaa
ins
leave
inc
lods
imul
xchg
sub
or
push
push
add
push
add
push
out
ja
and
jl
cmovle
cmp
add
xchg
adc
adc
mov
mov
adc
sub
push
mov
push
jne
xchg
push
and
xor
push
adc
dec
push
and
stos
pusha
sub
and
cwde
xor
push
cmp
dec
bound
and
and
or
mov
jg
add
pop
inc
gs
(bad)
aas
mov
inc
fstp
mov
cmps
push
lock
pusha
jo
aaa
and
mov
sub
stos
mov
mov
(bad)
test
or
(bad)
arpl
sub
push
inc
xchg
dec
out
arpl
push
ror
push
or
jne
push
xor
cmps
sar
inc
sub
add
push
sub
popf
jb
add
shl
adc
push
sub
add
and
stos
sbb
popa
aam
popa
(bad)
lods
cmp
mov
fcmovne
xchg
cmp
leave
and
add
pusha
(bad)
fstp
sub
push
push
xor
dec
mov
mov
inc
iret
adc
xchg
sqrtps
fwait
std
pop
sub
push
xchg
ss
mov
lock
or
xor
iret
mov
inc
and
loop
add
les
sbb
cld
or
xor
or
add
and
cmp
movs
jns
sub
cmc
inc
aad
adc
push
or
or
dec
ret
push
daa
mov
push
daa
out
stos
dec
add
mov
lods
push
add
adc
mov
pop
test
add
call
xchg
mov
mov
mov
dec
mov
mov
inc
jecxz
neg
retf
push
je
int
push
ins
or
dec
rol
and
scas
outs
push
pusha
scas
mov
inc
push
pusha
cwde
inc
xchg
(bad)
jge
out
cmp
push
jo
sbb
push
or
push
dec
cmp
pusha
je
dec
aas
mov
int
jb
popa
lods
and
(bad)
adc
inc
jo
fmul
std
mov
pop
add
push
xchg
jg
gs
and
dec
pop
push
(bad)
shr
sbb
in
(bad)
add
inc
jnp
sub
cmp
push
enter
mov
dec
dec
retf
pop
adc
fisub
pop
lods
push
loopne
or
mov
cmp
add
sti
in
push
or
scas
in
add
sub
xchg
leavew
fwait
lahf
mov
inc
sub
cmp
bound
arpl
mov
mov
cmps
popa
inc
bound
inc
dec
xor
pusha
sub
sub
popa
pop
push
and
xor
fstp
xor
and
test
ins
imul
sbb
cmp
push
jne
jae
inc
popa
(bad)
mov
mov
cmp
pop
add
or
sbb
daa
fimul
dec
adc
xor
mov
stos
sub
and
movs
sub
pop
push
fwait
shl
pop
js
ficomp
test
stos
mov
mov
mov
or
sub
xchg
or
push
sti
ret
nop
popa
jno
mov
mov
push
adc
ins
adc
movs
xchg
sub
inc
xor
movups
or
popa
mov
sbb
or
adc
inc
mov
leave
and
test
lea
sub
mov
push
lea
jae
dec
fist
push
cli
dec
shr
lahf
pop
jge
shr
lea
cmc
test
sbb
jnp
and
sub
mov
adc
mov
pop
dec
jmp
lods
adc
std
add
les
lods
xchg
cmp
icebp
push
sub
inc
aas
out
add
inc
loope
movs
lods
cdq
sar
inc
or
loope
(bad)
lods
xchg
ins
ror
adc
xor
adc
pop
iret
xor
push
pop
or
scas
mov
pusha
adc
lahf
or
sbb
ror
int
stos
test
push
xor
sub
sar
icebp
rol
or
push
pop
or
push
and
cmp
sti
xor
xor
or
jne
push
mov
add
aad
mov
xchg
(bad)
scas
mov
cmps
sbb
xor
dec
popf
icebp
push
or
dec
dec
mov
mov
push
lds
mov
inc
push
or
pop
pop
aad
sbb
mov
add
shl
dec
test
bound
push
push
aaa
push
dec
pop
nop
cmp
pop
jp
add
test
mov
add
popa
mov
xor
push
popa
pop
sub
aad
inc
or
add
xor
push
(bad)
out
imul
xor
or
or
and
lahf
xor
test
and
shr
aam
mov
dec
mov
mov
test
mov
movs
les
or
or
push
(bad)
loope
inc
js
nop
push
add
add
push
imul
sbb
inc
xor
ffree
inc
and
ret
adc
mov
mov
sar
loope
ins
inc
aaa
icebp
cmp
stos
jg
rol
inc
es
(bad)
(bad)
push
mov
mov
and
fs
inc
movs
adc
adc
ror
std
xor
fcom
push
or
(bad)
and
dec
push
xor
adc
add
dec
adc
push
mov
mov
out
cmp
adc
sub
push
aaa
sub
call
add
adc
mov
cmp
or
pop
dec
movs
mov
test
pop
adc
add
arpl
mov
add
pop
std
sbb
adc
jmp
fisubr
lea
cmps
sub
push
sub
or
xchg
xor
cmps
lock
arpl
inc
imul
jecxz
inc
sub
mov
inc
fsub
or
mov
cmp
mov
adc
sub
sub
mov
cmps
push
inc
or
xor
clc
mov
bound
cmp
shl
sbb
retf
call
loope
gs
(bad)
push
mov
dec
xchg
mov
lods
pop
enter
jae
mov
add
gs
pop
sbb
ror
jbe
ins
xor
leave
add
(bad)
mov
mov
mov
jge
pop
xlat
jg
dec
test
jbe
sub
push
and
aaa
jb
jbe
mov
jmp
cmp
xchg
jnp
inc
push
add
(bad)
and
test
mov
add
xor
push
add
mov
jge
adc
test
and
inc
add
cs
inc
jns
pusha
push
sub
adc
push
add
inc
leave
popa
sub
adc
xor
add
mov
inc
mov
(bad)
rcr
inc
repz
aam
sub
gs
inc
push
push
in
sbb
adc
hlt
push
nop
cmp
xchg
pop
mov
add
fdivr
test
or
movs
pop
js
das
inc
sub
dec
adc
add
inc
fmul
cmp
pusha
gs
out
push
mov
fistp
jge
fcom
sub
pop
mov
inc
cmp
aad
hlt
adc
push
leave
inc
push
ss
add
lahf
and
les
mov
pop
ja
cmp
test
arpl
xor
sbb
mov
mov
lds
inc
daa
xchg
sub
ins
inc
cmp
xor
pop
out
cmp
rol
inc
jnp
lods
inc
push
inc
xor
inc
retf
xor
jle
fadd
mov
jne
je
sub
add
pop
xor
and
cmp
jae
sub
outs
mov
xor
inc
mov
cmp
sub
push
push
in
xchg
cmp
pop
mov
fdiv
inc
pop
cmp
cdq
and
xor
inc
test
je
sub
addps
imul
or
xchg
push
in
lds
push
xor
mov
mov
rcl
mov
push
icebp
add
push
dec
sbb
push
mov
test
xor
sub
cs
push
mov
test
mov
adc
sub
inc
push
mov
or
inc
adc
push
mov
mov
or
inc
ins
lea
push
xor
and
mov
adc
pop
pop
pop
cmps
das
push
loopne
sti
pop
arpl
add
push
dec
adc
jns
outs
shr
sub
add
mov
test
test
int
mov
lea
retf
rcl
add
lahf
add
shl
xor
jge
xor
dec
and
push
popf
sub
mov
dec
and
push
rol
int
and
xor
inc
cmp
jo
and
add
inc
xchg
add
inc
js
adc
rcl
push
sbb
lea
sub
adc
xchg
out
push
ret
add
inc
sbb
add
inc
iret
test
jg
add
lea
popa
push
fsubr
push
sbb
dec
pop
add
(bad)
or
dec
inc
addr16
arpl
or
movs
adc
rcr
lock
mov
inc
sub
sbb
or
add
or
adc
or
test
xchg
sbb
push
and
xchg
inc
fisttp
imul
pop
mov
pop
mov
add
pop
lds
push
test
mov
mov
cmp
push
xor
mov
push
mov
pop
push
daa
push
push
or
jne
(bad)
mov
or
inc
mov
out
int
pop
cmps
cmp
shl
push
rol
mov
fld
or
mov
and
aas
into
add
or
push
mov
inc
adc
or
mov
push
push
sub
ret
add
sub
xor
lahf
in
mov
adc
inc
mov
ins
pop
pushf
or
in
xlat
mov
pusha
(bad)
popa
js
xchg
std
xlat
stos
dec
pop
cli
xor
dec
rcr
jge
shl
jg
mov
or
bound
add
and
mov
xor
mov
lods
mov
jne
inc
ins
or
sub
cdq
pop
dec
and
sbb
dec
div
inc
or
dec
pop
test
push
or
jne
rcl
pop
int
jge
mov
nop
add
es
fisubr
jecxz
ret
test
add
xchg
movs
sub
push
imul
xor
imul
data16
or
mov
xchg
push
mov
xor
or
mov
nop
adc
add
dec
inc
xor
sbb
xchg
leave
adc
add
sbb
(bad)
mov
jae
sub
outs
adc
lods
dec
mov
mov
inc
mov
sbb
xor
mov
xchg
ins
stos
stos
mov
nop
mov
or
adc
fdivr
cmps
push
addr16
mov
push
push
mov
leave
inc
outs
adc
daa
sub
mov
aam
push
dec
sub
xor
inc
jmp
inc
xor
loope
fld
push
sbb
fucomp
add
mov
or
jecxz
in
pop
push
or
mov
loop
cmp
and
pop
add
test
xchg
cmp
or
ror
lea
inc
data16
ror
test
int
cs
stos
and
push
mov
xor
add
retf
or
lea
add
daa
jae
and
sub
push
cdq
xchg
stc
lds
ret
dec
jae
leave
or
or
add
sbb
ds
dec
push
and
lea
mov
lods
fmul
lods
fadd
imul
and
xchg
sub
dec
jl
ins
adc
xlat
inc
(bad)
adc
nop
int3
cmp
mov
xor
inc
push
adc
fadd
mov
test
xchg
mov
test
push
mov
aas
push
adc
or
push
sub
inc
push
add
sub
xor
(bad)
popf
or
dec
jmp
xchg
fs
sbb
dec
and
jge
adc
push
adc
and
aas
pop
mov
inc
scas
xor
xchg
inc
mov
icebp
xor
push
mov
adc
cmp
jecxz
and
js
out
lods
sub
sub
out
ret
or
adc
xchg
xchg
inc
out
stos
cmps
ret
add
adc
dec
or
push
dec
jno
imul
rcr
aaa
lds
in
pop
and
jno
add
retf
ret
imul
inc
mov
xlat
outs
sahf
add
fdivr
lods
fisttp
loopne
call
mov
dec
fcomp
mov
jbe
and
aad
jecxz
in
ret
movs
jmp
inc
pop
and
addr16
xor
push
in
fisttp
lea
cmp
push
(bad)
and
mov
dec
sub
push
jnp
jae
mov
movs
add
mov
mov
dec
das
adc
sub
and
or
push
mov
dec
stc
and
push
push
dec
push
imul
cmps
and
add
cmp
(bad)
push
ret
ja
inc
ins
xor
xor
mov
xlat
push
lea
push
ror
dec
test
popa
and
push
mov
cwde
je
sub
gs
or
or
push
mov
test
push
test
xchg
jae
adc
popa
push
pop
push
fwait
test
add
push
push
sbb
sub
push
adc
popa
adc
test
aad
and
mov
dec
xchg
sbb
cmp
in
and
sub
adc
movs
or
inc
and
pop
mov
or
ja
inc
ret
or
push
add
fcomp
popa
pop
jp
aas
fadd
mov
sub
inc
mov
mov
iret
mov
cmp
pop
ror
pop
add
popf
mov
or
cmc
inc
in
push
test
or
cmp
and
add
and
cdq
and
arpl
xor
push
inc
aaa
sub
or
add
lea
or
mov
mov
sbb
cld
sub
adc
dec
add
dec
das
jmp
gs
popa
mov
dec
les
inc
pop
pop
push
rcl
cmp
stos
adc
in
xchg
mov
inc
pop
sub
inc
or
test
int
add
adc
pop
out
sub
stos
push
pop
rcl
xchg
mov
cmp
pop
je
cmp
xlat
add
sar
mov
or
fadd
aaa
dec
xor
movs
sub
add
pop
iret
mov
add
sbb
call
lods
sbb
es
jae
fst
dec
rol
ss
in
jg
aas
add
sahf
jnp
jbe
pop
out
pop
outs
(bad)
sub
push
inc
pop
loopne
lods
mov
call
add
gs
daa
rcl
sbb
or
pop
js
movs
repnz
jg
push
lds
or
mov
pop
sbb
mov
cld
es
(bad)
mov
add
imul
in
fucomp
call
pop
pop
xor
es
popf
and
xlat
sbb
and
dec
pop
rol
push
cmp
call
adc
lods
sub
inc
pop
add
adc
addps
add
outs
test
adc
test
pop
inc
repnz
ret
sub
retf
pusha
cmp
pushf
lfs
pop
mov
inc
dec
sub
mov
data16
jne
lods
mov
dec
ins
add
push
push
imul
or
sub
fadd
adc
add
mov
ins
lahf
or
icebp
mov
pop
xor
or
adc
sub
push
adc
xor
xchg
or
sbb
mov
push
jb
jp
xchg
dec
add
(bad)
and
push
aam
lods
dec
adc
das
add
jge
outs
rcr
inc
ss
or
xor
push
mov
dec
fimul
or
js
call
mov
cmps
or
ret
addr16
push
push
cwde
ss
sbb
pop
or
inc
ret
or
ins
movs
add
test
jp
add
push
nop
nop
retf
push
add
pop
push
add
ds
daa
add
add
add
cmp
push
cli
add
sahf
popa
dec
iret
or
addr16
shl
pop
push
add
jecxz
lods
push
data16
fidivr
neg
jg
add
and
xchg
jbe
loopne
mov
jg
pop
ja
out
in
xchg
pop
or
and
push
les
mov
mov
mov
xchg
or
add
and
stos
add
cmp
push
adc
(bad)
and
dec
add
or
popa
or
cmp
xchg
out
sub
xchg
dec
retf
push
mov
in
ins
add
push
pop
test
in
invd
adc
add
mov
addr16
daa
outs
sub
jmp
inc
dec
mov
push
jne
add
add
test
or
fisubr
inc
mov
and
xor
das
leave
or
add
cmc
clc
fimul
dec
jg
xor
add
xchg
mov
xor
aad
rol
stc
inc
push
sub
add
aam
adc
sub
sbb
cdq
pop
or
xor
fsubr
add
pusha
sub
sub
jecxz
and
(bad)
gs
mov
or
or
and
mov
and
inc
add
inc
sub
enter
add
imul
mul
lods
or
push
sbb
mov
mov
xor
push
add
es
bound
xor
cmp
sub
add
hlt
dec
add
in
pusha
imul
and
mov
stos
push
push
push
pop
and
jp
adc
jg
jno
mov
retf
inc
mov
adc
jmp
add
retf
daa
sub
(bad)
fisttp
pop
retf
or
jbe
mov
es
add
push
int3
inc
or
ret
add
stc
jg
or
xlat
sbb
xchg
daa
dec
push
jno
xchg
mov
push
sub
iret
mov
sub
in
mov
push
(bad)
adc
jae
mov
push
add
pop
or
sub
ins
and
pop
xor
or
aam
fiadd
push
or
movs
sbb
cmp
sbb
rol
mov
add
push
sbb
imul
sbb
add
dec
push
sbb
or
or
add
push
and
and
and
jmp
push
xor
adc
sbb
sub
inc
inc
or
dec
inc
dec
int
inc
mov
test
add
add
mov
sti
add
add
test
jbe
push
sbb
and
or
sub
mov
movs
mov
add
mov
pop
fwait
dec
push
dec
xor
and
ret
add
xor
sbb
mov
lods
(bad)
xchg
sbb
jge
cmps
xor
add
add
adc
cmp
add
pusha
cmps
pop
jge
xor
pop
test
push
dec
retf
sub
xchg
add
push
mov
mov
push
rcr
mov
addr16
mov
das
outs
pop
mov
shr
call
enter
mov
jae
mov
and
add
pop
sbb
and
add
pop
and
adc
jg
sbb
sub
js
adc
inc
test
and
dec
pop
sub
cli
adc
sbb
dec
cmp
popa
and
arpl
inc
or
dec
rcr
add
ins
xor
das
cmp
jmp
movs
and
or
popa
sub
jae
xor
dec
xchg
adc
push
inc
cmp
icebp
push
inc
add
xchg
push
xchg
dec
push
pop
not
out
fadd
sub
das
aaa
enter
push
gs
xor
add
add
cmp
nop
cmp
xadd
out
pusha
in
or
ins
adc
mov
add
das
sbb
daa
popf
cmp
js
push
add
fwait
push
rcl
daa
push
shl
xchg
movs
inc
add
mov
fistp
add
cdq
(bad)
push
movs
or
iret
push
ret
movs
cdq
test
add
daa
adc
movs
movs
test
xchg
add
add
inc
or
sbb
mov
pop
mov
imul
imul
adc
dec
or
inc
sbb
shr
js
adc
dec
push
sub
mov
iret
jbe
sar
stos
push
add
pusha
(bad)
adc
icebp
sub
rol
ins
out
hlt
push
pop
in
aam
imul
pop
pop
inc
mov
fs
add
pop
add
xchg
and
add
add
dec
dec
dec
add
dec
mov
sub
xchg
sbb
nop
xchg
or
or
push
xor
or
retf
xchg
cvttps2pi
sub
adc
or
jns
adc
(bad)
adc
adc
adc
dec
dec
adc
es
xor
or
add
add
fcmovb
pop
movs
and
inc
sbb
fld
cwde
loope
mov
adc
adc
inc
or
ffreep
dec
pop
inc
inc
pop
dec
inc
adc
arpl
fs
and
mov
inc
pop
mov
cmp
data16
and
call
sub
or
mov
mov
call
cmp
ds
call
or
lea
jno
cmps
(bad)
cld
ins
xor
or
or
or
push
or
push
movups
psubusw
cmps
stc
push
adc
adc
adc
adc
xlat
lods
cmps
fldcw
adc
ds
adc
pop
in
or
(bad)
and
sbb
lea
(bad)
addr16
add
add
outs
dec
cmp
add
rcr
cmp
rol
inc
cmp
lahf
adc
jae
add
adc
cmp
(bad)
and
ret
mov
xchg
int
cmp
cmp
push
or
and
dec
sahf
ins
and
jecxz
sbb
retf
push
cmp
dec
jnp
mov
inc
dec
fadd
sbb
jge
sub
adc
dec
push
sbb
push
cmps
pop
dec
cmp
pop
add
sub
sub
add
or
fstp
popa
ja
xor
mov
ror
pop
mov
adc
push
mov
add
push
in
jae
add
or
mov
sbb
cmp
popa
mov
jno
xor
mov
dec
inc
mov
es
pop
fs
add
or
mov
add
push
adc
xchg
jge
inc
adc
and
neg
ret
adc
push
jp
inc
lahf
pop
sbb
push
sbb
xor
push
dec
push
sbb
sbb
push
cmp
push
mov
adc
je
push
and
push
and
fs
jle
cmp
pop
jae
aaa
push
and
and
enter
mov
sbb
and
(bad)
xor
xor
sub
jmp
fldenv
push
sub
xor
sub
jns
jnp
sub
das
push
xor
add
xor
cmp
repz
cmps
xor
cmp
and
mov
cmp
mov
add
push
sbb
sbb
push
jecxz
add
pushf
jae
shl
adc
pop
mov
movs
cmp
add
adc
adc
xor
or
mov
(bad)
ret
ret
sbb
add
cmp
add
push
ss
xor
push
xor
cmp
or
cs
xor
dec
mov
cmp
or
xor
cmp
mov
les
cmp
popa
jne
inc
popf
adc
or
or
adc
push
mov
jmp
cdq
jmp
or
jle
add
das
sbb
add
and
fisttp
push
or
sub
cmp
mov
and
mov
add
dec
or
mov
sub
inc
iret
mov
enter
or
sbb
pop
cmp
pop
push
xor
push
dec
call
and
adc
lea
lods
pop
xchg
pop
cmp
shl
and
shl
dec
lods
or
jae
or
mov
jnp
and
ins
xor
mov
(bad)
pop
inc
pop
arpl
mov
rcr
mov
sub
aad
sbb
pop
or
sub
sbb
rcr
pop
or
and
sub
inc
mov
clc
or
je
pop
int3
movs
cmp
push
cs
cmp
add
movs
ret
push
sahf
add
lds
out
ss
or
(bad)
repnz
mov
add
add
shl
mov
fwait
add
pop
enter
push
stos
mov
sub
ror
and
adc
xlat
mov
sbb
push
add
or
mov
mov
std
shl
fmul
cmc
aam
adc
inc
ds
(bad)
imul
cmp
mov
mov
xchg
movs
cmp
pop
aaa
je
adc
pop
or
imul
mov
dec
dec
repz
or
imul
push
cdq
fimul
std
xchg
stc
sahf
xor
add
add
mov
(bad)
hlt
xor
cs
aaa
jnp
sbb
dec
mov
fsub
or
sub
mov
cmps
arpl
cmp
mov
xor
adc
adc
adc
nop
add
mov
push
test
push
adc
mov
retf
std
dec
xchg
jg
push
pop
shr
add
add
sub
or
invd
pop
sbb
pop
inc
nop
jbe
mov
mov
mov
leave
inc
test
movups
add
and
clc
sub
or
call
(bad)
clts
rol
add
add
test
and
repz
movs
mov
xor
add
cmp
fsub
add
rol
or
adc
xchg
add
add
inc
jle
push
cs
mov
adc
pop
pusha
ret
dec
pop
je
(bad)
stc
jmp
dec
inc
sbb
sbb
int
pusha
rol
mov
scas
add
add
add
addr16
jg
addr16
adc
sub
es
imul
pop
call
mov
test
shl
das
push
mov
add
add
cmps
lds
pop
loop
sub
sbb
xchg
movs
sbb
and
push
adc
mov
push
sub
sub
sub
daa
pop
mov
mov
cwde
ret
pop
pop
pop
dec
ins
sub
fdiv
shl
cmp
xchg
test
xchg
sbb
push
inc
ins
and
outs
mov
mov
cmps
push
loop
add
jae
add
stc
movs
push
xchg
or
inc
adc
dec
dec
sub
push
aaa
repz
pusha
mov
mov
bound
sbb
sbb
bound
mov
dec
mov
addr16
outs
stos
jl
pop
(bad)
push
add
out
and
inc
or
fwait
pop
inc
add
sub
das
fsub
pop
mov
jecxz
sub
scas
and
xchg
xor
rol
sub
cmps
or
add
add
jecxz
xor
mov
pop
ret
bnd
pop
push
dec
add
cmp
add
add
cmp
and
jecxz
push
aaa
pusha
lea
xor
movs
add
lds
push
xchg
cmps
dec
and
enter
push
or
pop
inc
add
and
or
popa
inc
stos
add
mov
xchg
(bad)
pusha
add
enter
imul
add
es
dec
push
in
xchg
add
leave
call
pop
xor
and
xchg
inc
mov
or
sbb
dec
es
sbb
lea
imul
movs
add
sub
or
sub
sbb
push
cwde
bound
mov
nop
call
and
push
(bad)
push
into
and
jae
fwait
mul
pop
adc
dec
sti
cmp
or
and
sub
sub
in
das
std
es
sub
repnz
cmp
push
adc
push
test
das
add
rcl
mov
iret
jno
adc
add
test
mov
sub
ret
adc
push
popa
dec
pop
gs
fcom
and
adc
jae
mov
icebp
gs
sbb
fcomp
(bad)
sbb
push
add
adc
and
and
dec
sbb
push
stos
dec
or
mov
add
retf
xor
leave
dec
inc
push
dec
inc
pop
aad
es
les
jo
sub
add
les
not
and
movzx
inc
test
or
sbb
(bad)
sbb
or
lds
ins
movs
lea
xor
pop
and
(bad)
fist
xchg
add
out
cmp
pop
hlt
add
or
imul
(bad)
dec
push
add
in
mov
aas
add
movs
jecxz
mov
xchg
push
push
dec
ins
or
int
bound
aad
add
ins
cmp
pop
retf
or
push
les
imul
lods
movs
add
mov
dec
add
add
pop
rdpmc
add
xor
mov
mov
jg
or
add
sub
rcl
leave
les
xchg
jae
push
aaa
(bad)
rol
rol
sub
lock
xchg
sbb
and
jl
cmp
lds
adc
inc
adc
pop
out
or
popf
pop
sbb
mov
je
and
ins
test
ins
or
mov
add
mov
rcr
dec
test
cs
pop
add
adc
ror
fcmovb
dec
dec
adc
fisttp
sbb
dec
clc
and
sub
fisubr
add
dec
pop
cdq
mov
inc
loope
adc
ret
dec
out
in
xchg
or
cs
pop
ins
es
mov
jmp
inc
call
sbb
cmp
and
add
rol
int
mov
add
push
add
cmp
dec
or
mov
push
retf
mov
outs
push
stos
cmps
sub
ins
pop
or
jo
clc
push
unpcklps
and
ror
jno
xchg
mov
pop
adc
movs
add
and
psrlq
rol
push
scas
jge
adc
and
pop
sti
psubusw
mov
sub
outs
test
test
jg
shl
add
and
sub
or
rcl
pop
xor
add
mov
adc
pop
int
or
xor
imul
xor
je
outs
(bad)
daa
adc
pop
dec
rcr
and
adc
adc
adc
and
outs
daa
mov
sub
and
add
sbb
dec
cwde
mov
imul
sub
loop
call
and
sub
adc
cli
mov
gs
and
in
inc
(bad)
pop
call
inc
imul
das
jae
sub
enter
enter
add
imul
add
pop
scas
cmp
and
mov
add
ror
rcl
push
int
aaa
pusha
mov
mov
bound
push
or
push
inc
dec
xchg
mov
inc
xchg
ret
dec
dec
add
rol
dec
add
sub
aam
pop
push
pushf
push
xchg
or
stos
and
and
out
call
pop
or
add
xor
and
shr
mov
fdiv
pop
imul
add
jae
and
sub
mov
dec
push
jne
dec
sbb
iret
or
mov
xor
or
pop
or
mov
jmp
enter
push
add
sub
cmp
ror
jo
adc
or
push
out
out
inc
pop
jle
or
dec
outs
jo
pand
scas
adc
push
out
or
or
es
dec
or
ret
xor
adc
xor
cmp
leave
xor
or
pop
out
mov
xchg
sub
adc
and
pop
dec
adc
and
jmp
xlat
add
add
xchg
mov
rol
shl
int3
mov
loop
or
adc
sub
bound
outs
add
xchg
push
xchg
push
pop
add
jno
cmc
jp
shl
add
pop
or
push
mov
xlat
pop
inc
add
adc
mov
pop
add
dec
inc
sub
adc
xchg
aaa
and
push
xchg
in
add
and
int3
add
push
add
and
or
push
ins
jae
sub
loopne
xor
adc
add
mov
js
push
aad
pop
cmp
cmc
fwait
adc
jge
push
sbb
bound
add
cwde
sbb
add
pop
add
sbb
sub
mov
sbb
cmp
dec
pop
or
cmp
rol
cmp
sbb
xor
inc
and
sub
lods
jmp
sub
push
test
and
cmp
cmps
xor
cmp
xor
push
pop
push
pop
sub
ficom
sub
dec
add
ret
mov
test
sub
or
rol
mov
adc
das
sbb
sub
fcmovnbe
sub
xchg
cmps
rol
sbb
push
or
mov
lds
mov
add
ss
push
das
popa
std
inc
add
dec
add
xor
push
mov
rcr
mov
or
adc
jns
(bad)
or
jl
mov
mov
imul
ret
and
and
test
or
dec
xor
ror
and
and
or
push
loope
les
ror
repnz
cdq
xchg
sub
and
mov
add
or
pcmpgtw
jg
push
push
sub
and
sub
fwait
cmp
cmp
jne
adc
mov
out
fbstp
add
sbb
dec
cmp
mov
ss
inc
leave
xchg
push
or
push
push
adc
imul
inc
cmp
push
pushf
add
fs
dec
cmp
mov
sbb
push
push
aaa
ret
and
and
and
push
jl
(bad)
xchg
sub
adc
jge
mov
pop
rol
aas
cmp
call
add
jne
jae
icebp
xor
push
cmp
popa
push
(bad)
mov
aaa
test
mov
dec
or
ja
outs
mov
fcmovb
aaa
jno
jmp
fs
jle
xor
mov
outs
add
mov
add
dec
dec
(bad)
imul
pop
aad
sub
push
push
add
add
add
fst
or
movlps
dec
adc
sub
fbstp
adc
adc
adc
adc
push
add
sbb
movs
inc
add
xor
sbb
xchg
nop
push
xor
mov
sbb
sbb
ss
sbb
ds
sbb
aas
add
push
push
and
outs
mov
and
and
and
add
push
or
cmp
repz
sub
sub
iret
repz
out
sahf
out
xor
xor
xor
ss
int
fnstenv
nop
sub
cmp
iret
repz
aas
ds
imul
out
fwait
ins
pushw
sub
inc
push
inc
xor
cs
dec
dec
add
(bad)
push
sub
dec
sub
sub
sub
repz
repz
push
push
push
push
push
iret
repz
push
push
push
pop
pop
pop
cmp
repz
pop
pop
pop
pop
iret
aas
iret
repz
pusha
arpl
adc
fs
addr16
sub
addr16
out
out
ins
imul
ins
sub
or
fmul
fcmovnb
mov
cmps
push
pop
arpl
mov
mov
dec
test
add
push
or
fwait
add
mov
add
add
add
popa
mov
xchg
adc
xor
mov
lods
sub
mov
gs
aam
mov
add
or
jecxz
xchg
sbb
dec
call
aam
mov
adc
movs
sbb
adc
test
mov
mov
test
add
ja
arpl
mov
dec
push
add
or
add
fdivr
lods
sub
shr
jno
add
add
xchg
and
push
test
and
sbb
vsqrtsd
and
shl
xor
xchg
sub
ret
das
push
lds
shl
test
pop
and
fwait
dec
xor
push
or
or
(bad)
sub
adc
out
adc
or
pop
in
push
xor
xor
iret
add
mov
aaa
dec
sub
add
push
xor
jecxz
push
cs
or
sub
imul
and
xor
fs
pop
idiv
pop
push
les
mov
inc
jl
in
push
dec
sti
jno
inc
imul
pushf
scas
cwde
les
setb
cdq
(bad)
pop
out
or
push
imul
sub
out
xor
popf
xor
les
fistp
ja
push
push
hlt
and
pop
cmps
mov
and
adc
mov
or
xchg
les
shr
push
dec
adc
and
fist
adc
popa
jo
dec
mov
push
xchg
sti
repz
fdiv
and
cmp
add
jbe
or
sbb
mov
push
jo
das
repnz
or
iret
out
sbb
add
int3
int3
call
test
xchg
std
push
enter
fld
adc
sbb
pop
jbe
adc
inc
push
adc
inc
or
jge
and
push
mov
cwde
xor
add
add
sub
sbb
jnp
test
xchg
mov
cmp
xchg
in
ret
shl
fcom
push
push
not
cs
cmp
or
inc
adc
dec
or
add
ja
aad
xor
sahf
(bad)
aam
pop
and
cmp
sub
rcr
push
adc
add
pusha
lock
or
test
sbb
sar
ret
adc
push
retf
inc
dec
lods
pop
add
inc
rol
jo
adc
mov
add
xchg
push
dec
adc
pop
push
xchg
jp
cmps
xchg
ds
or
mov
fs
ret
sbb
add
pop
nop
mov
ret
push
add
or
sub
add
xchg
add
push
xchg
mov
inc
retf
mov
sbb
cmp
add
push
add
mov
popa
movs
sahf
push
add
dec
call
ins
jns
inc
out
add
sbb
sub
push
adc
xor
ret
fbstp
cmp
rcl
mov
out
rcr
sub
rcr
aam
lods
or
adc
cmovae
push
adc
sub
bound
imul
jbe
adc
inc
or
lods
scas
pop
or
add
push
add
call
movs
add
add
or
movs
mov
mov
fild
push
add
jno
lods
push
adc
shl
ins
aad
adc
mov
or
or
inc
(bad)
pop
mov
or
sahf
push
cdq
fisttp
push
icebp
add
pop
push
cmc
mov
add
mov
add
popa
push
mov
cmp
mov
mul
repnz
and
lods
pop
pop
jns
push
add
pop
adc
add
fld
add
or
ret
cmp
cmp
(bad)
and
pop
mov
cmps
add
or
mov
add
mov
jne
xor
pop
add
loop
lods
adc
push
inc
jmp
push
add
or
inc
dec
test
sub
add
push
xor
sub
mov
stos
add
or
jle
(bad)
mov
mov
xor
ds
push
push
sub
pushf
(bad)
mov
or
nop
inc
xor
inc
dec
enter
or
jnp
mov
adc
arpl
or
test
mov
rcr
add
mov
aaa
sbb
movs
jne
addr16
pop
dec
dec
test
add
pop
and
shr
or
or
jp
sub
sahf
dec
mov
or
adc
leave
div
inc
adc
jg
movs
inc
pop
pop
or
mov
xchg
xor
lock
outs
jne
loopne
inc
xor
adc
xor
add
pop
jge
std
dec
add
inc
push
and
sbb
dec
adc
imul
ss
or
in
sbb
add
(bad)
retf
jle
push
adc
loope
test
inc
movs
stc
mov
(bad)
mov
jno
mov
xchg
adc
rol
and
add
repnz
xor
int3
add
out
movs
dec
aaa
mov
and
or
pop
xchg
pusha
idiv
inc
sbb
mov
mov
add
add
jne
les
mov
xor
jle
xchg
mov
fmul
xchg
adc
sub
imul
call
xchg
or
add
add
rol
and
xor
fmul
push
and
xchg
add
sub
ins
pushf
scas
ins
leave
inc
mov
pusha
rdpmc
test
push
movs
push
inc
(bad)
adc
sub
pop
or
pop
or
in
pop
pop
fwait
xor
push
xor
xchg
dec
cmp
add
ds
es
and
or
pushf
and
cs
jg
ds
mov
cdq
mov
adc
data16
xchg
imul
dec
pop
out
add
or
add
dec
fmul
sub
inc
pop
or
adc
iret
xor
or
or
ror
mov
femms
syscall
shr
int3
and
es
daa
sbb
cwde
cmp
scas
mov
adc
push
adc
add
test
pop
dec
adc
push
add
or
rcl
adc
retf
adc
add
or
(bad)
out
cmp
xor
out
daa
inc
xor
int
or
ss
daa
add
xchg
inc
xchg
aaa
mov
scas
sub
sub
add
inc
outs
push
pop
retf
cs
sbb
adc
inc
(bad)
aad
mov
das
adc
movs
sub
ret
shl
shl
mov
add
pop
rcr
int3
test
out
scas
and
test
adc
dec
push
fwait
add
mov
or
sub
ins
fs
and
xchg
sub
sub
and
movs
dec
mov
pusha
dec
int3
push
and
push
push
call
pop
inc
pop
dec
rol
and
fisubr
adc
(bad)
sbb
gs
cmps
xor
xor
xor
push
add
mov
xchg
add
cwde
popa
jmp
inc
and
lds
mov
add
push
sbb
push
cmps
add
xchg
movs
and
sub
push
xchg
adc
cmp
test
fxch
movs
inc
movs
ins
or
inc
add
adc
mov
pop
ret
ret
dec
add
aad
cmp
mov
pop
add
adc
frndint
out
adc
push
or
sbb
sbb
push
lahf
sbb
adc
ds
xchg
adc
sbb
or
mov
or
and
push
push
aaa
sbb
push
pop
(bad)
xchg
cld
push
xor
ds
sub
add
xor
jp
and
(bad)
add
cmp
repz
and
sub
sub
iret
das
xor
xor
and
(bad)
and
mov
ss
xor
dec
and
or
or
sub
add
xor
add
and
mov
popa
pop
add
add
sub
adc
sub
jl
mov
and
or
push
dec
adc
stos
loope
xchg
pop
xor
sahf
mov
push
mov
adc
lea
sub
xor
adc
pop
aaa
cdq
pop
add
inc
adc
xor
inc
(bad)
(bad)
in
mov
adc
and
adc
rol
mov
and
sbb
pop
das
mov
pop
push
stc
push
jmp
pop
add
jle
cmp
xchg
add
aaa
or
loope
xchg
or
mov
add
push
cdq
dec
sbb
jae
or
adc
in
and
add
scas
lea
jns
push
pop
cmp
imul
mul
leave
or
cmp
xor
xchg
cmp
enter
add
add
enter
add
pop
daa
jo
xor
cwde
sbb
dec
hlt
and
aaa
pop
pop
xor
push
mov
inc
gs
ret
mov
das
sbb
cmp
dec
pop
inc
repnz
vsqrtps
pushf
xor
ja
inc
les
jno
or
jne
xchg
in
add
test
mov
jmp
cwde
ins
cmp
add
test
mov
in
popf
xor
or
cmp
mov
je
pop
pop
enter
push
dec
test
add
ds
add
std
add
nop
test
add
or
add
in
cmp
inc
push
aas
push
add
dec
adc
sub
sub
sub
xor
lods
inc
mov
sub
mov
add
stc
test
push
add
mov
and
xchg
jbe
jmp
pop
or
xchg
shl
std
mov
pop
dec
je
dec
xor
icebp
or
cwde
inc
pop
les
push
push
sbb
push
mov
sti
ja
fs
add
xchg
ins
mov
sbb
rcr
adc
xchg
dec
sbb
cmp
int3
sahf
xchg
or
xor
ins
shr
adc
rcl
xchg
movs
and
jmp
clc
xor
cmc
push
inc
add
outs
add
cmp
or
dec
ret
adc
xor
inc
or
dec
test
add
pop
test
jo
and
bound
and
pop
mov
in
je
arpl
inc
and
xor
cdq
mov
push
add
aas
add
add
out
stos
pop
or
sub
bound
sub
push
inc
lock
adc
stos
mov
add
mov
add
pop
mov
ds
sbb
add
and
xchg
add
dec
mov
sub
add
push
inc
sub
jmp
mov
mov
call
pop
mov
icebp
rcl
cwde
xor
and
jp
pop
pop
inc
xchg
rol
cmp
std
jecxz
add
ds
add
xor
sub
loop
or
cmp
or
inc
adc
xor
outs
mov
sbb
pop
push
cmc
push
rol
or
dec
xor
xchg
pop
and
or
mov
sbb
ret
mov
inc
sub
int
loope
inc
jne
or
or
adc
cld
add
pop
mov
adc
rol
add
xor
push
xchg
add
sbb
and
scas
add
adc
adc
inc
or
fcmovne
fcomi
jg
pushf
jns
xchg
and
dec
push
out
adc
daa
add
loopne
iret
sar
or
mov
and
inc
inc
ss
ja
push
inc
push
add
or
add
(bad)
popf
dec
or
test
scas
das
lds
jge
add
sbb
popa
xor
cwde
adc
ret
pop
ins
add
and
mov
or
add
cli
inc
sub
add
nop
dec
pop
call
pop
mov
bound
in
test
les
cli
arpl
xor
jne
pop
add
lods
pop
xchg
mov
ret
adc
dec
pop
lahf
mov
lods
mov
pop
xor
inc
inc
xor
add
adc
or
push
scas
mov
fstp
mov
push
test
sub
add
and
vminss
fld
sub
xor
pop
and
xchg
popa
and
or
out
mov
fnsave
or
or
unpckhps
and
or
repz
adc
adc
mov
sbb
nop
sahf
xchg
cmps
ins
sbb
and
and
and
and
and
bndldx
rcl
xchg
movs
imul
lds
test
push
lock
mov
retf
or
push
ins
push
add
in
test
push
lds
mov
das
mov
pushf
push
call
(bad)
pop
sub
mov
push
cmp
addr16
shl
and
xchg
cmp
movs
jne
fcom
mov
pop
cwde
add
fs
inc
and
push
cmp
cmp
xchg
ins
pop
mov
xor
xchg
movs
retf
sub
ja
mov
lahf
sbb
push
dec
shr
fild
adc
adc
cmp
or
pop
mov
mov
push
jl
add
xor
xchg
mov
shl
ds
in
(bad)
xor
inc
adc
mov
sub
jno
sub
rol
or
dec
inc
out
jmp
add
loope
add
ret
add
mov
pop
inc
sub
mov
sub
popa
enter
scas
or
inc
mov
cmc
mov
dec
add
pusha
or
cmp
das
arpl
pop
retf
xchg
movs
sub
inc
enter
xor
and
add
shl
add
fisub
push
pop
and
pop
(bad)
shr
sbb
fwait
scas
or
push
xor
es
ins
push
or
test
adc
mov
ins
and
mov
cwde
gs
mov
adc
sahf
mov
mov
dec
push
mov
mov
(bad)
cli
xor
mov
push
ins
outs
imul
pop
and
mov
push
jl
popa
imul
mov
pop
add
aaa
scas
jmp
add
push
(bad)
(bad)
shr
dec
xchg
pop
mov
leave
jae
js
dec
mov
jns
and
add
or
or
inc
dec
mov
xor
inc
dec
push
int
push
add
dec
or
add
ins
mov
adc
stos
xchg
dec
cmp
inc
fs
lea
add
mov
and
imul
lods
movs
push
div
dec
xchg
and
jmp
sub
inc
fisttp
add
adc
mov
add
xchg
add
sbb
pop
cmps
lahf
xchg
add
scas
adc
fcomp
leave
push
rcl
and
dec
sub
adc
add
add
add
rol
pop
imul
or
or
push
adc
xchg
or
pop
sbb
(bad)
xlat
xchg
sub
div
add
and
xchg
add
jbe
jne
retf
mov
mov
push
test
test
dec
movs
nop
retf
mov
cmps
xchg
cmp
adc
call
pop
stos
and
test
pop
sbb
cmc
sub
test
add
cmp
cmps
test
xor
je
loopne
out
or
fs
sub
mov
mov
sub
sub
push
or
add
adc
test
push
pop
or
sbb
mov
add
ja
inc
popa
pop
sbb
dec
add
mov
cld
in
call
add
or
and
or
js
clc
test
ret
mov
jp
outs
or
add
mov
pusha
xchg
cmc
mov
and
pop
mov
jle
pop
jno
ltr
imul
sahf
add
push
clts
dec
adc
xchg
mov
mov
inc
call
sub
lea
pop
or
mov
and
rol
and
imul
push
dec
loopne
data16
fmul
jne
stos
push
sbb
adc
cvtdq2ps
pop
adc
or
mov
xchg
add
adc
add
push
leave
mov
add
sbb
inc
test
inc
sub
and
push
xchg
xchg
lock
outs
iret
adc
loopne
mov
and
adc
pop
mov
add
shr
test
dec
imul
sub
add
add
inc
call
cmp
xor
or
and
jno
push
aaa
out
cmp
sub
or
adc
push
dec
jo
pop
ror
cmp
add
add
push
in
xchg
movs
add
push
jb
and
push
jb
xchg
imul
or
in
in
add
adc
inc
mov
pop
mov
bt
push
sbb
in
cs
adc
push
fdivr
xchg
mov
mov
pusha
sub
push
(bad)
push
jp
xor
push
xchg
sub
pop
add
xor
adc
hlt
lahf
push
xchg
sbb
loop
sar
xlat
dec
fcom
inc
xchg
movs
mov
pop
sbb
jbe
test
loope
xor
mov
sbb
push
or
test
gs
ret
fisttp
push
mov
inc
out
inc
lock
icebp
xor
pop
push
pop
fld
jmp
pusha
xor
sti
or
sbb
inc
adc
pop
or
dec
mov
or
jo
popf
lods
dec
dec
push
lock
sub
xchg
add
fwait
rol
fnsave
outs
push
push
xchg
mov
push
mov
(bad)
call
mov
sub
push
dec
shl
sbb
mov
or
inc
sub
in
popa
pop
outs
xor
dec
sti
inc
cmp
adc
dec
add
adc
add
daa
xor
cmp
xchg
pop
test
pop
(bad)
xchg
xchg
mov
jno
mov
nop
retf
data16
sub
push
rcr
or
cs
stc
inc
xchg
aas
cld
mov
add
add
lahf
rcr
push
push
scas
and
adc
add
cmp
inc
or
add
adc
inc
xor
jo
mov
inc
pop
rol
pop
push
fwait
dec
imul
adc
inc
call
mov
pop
fistp
pop
inc
nop
xchg
rol
and
es
sub
jmp
fadd
test
or
push
dec
pop
xor
and
add
jp
add
add
add
inc
shl
sbb
dec
add
xchg
les
sbb
push
xor
jnp
and
stos
xchg
push
sub
repz
adc
xchg
sub
(bad)
mov
add
dec
mov
sub
fs
or
and
jbe
out
lods
add
add
add
test
jbe
xchg
pusha
add
das
arpl
sub
pop
push
loopne
mov
frstor
leave
push
add
ror
popf
inc
or
jne
push
ss
xor
and
iret
sub
rol
inc
in
jmp
add
pop
pop
ret
push
xchg
jmp
add
sub
test
mov
add
les
push
add
mov
mov
inc
add
mov
mov
jnp
scas
inc
xor
jecxz
rol
addr16
ret
cmp
add
sbb
fwait
aam
cdq
pusha
push
add
push
cmp
push
mov
push
(bad)
rcl
dec
pop
push
call
pop
or
xor
ins
jmp
pop
mov
adc
gs
push
xor
and
sbb
mov
and
cmps
adc
add
add
add
pop
mov
adc
cmp
jnp
jge
and
test
fwait
out
dec
cmp
lds
sub
mov
or
add
ins
adc
push
sub
sbb
stc
xchg
scas
popa
xchg
add
ret
out
add
jle
fwait
ds
or
mov
xor
add
leave
xor
add
and
add
scas
and
and
and
push
xchg
xchg
add
inc
pusha
push
or
add
shl
sahf
add
test
js
jae
jmp
jmp
stos
add
imul
mul
add
sbb
sub
push
retf
pop
adc
pop
and
daa
pop
fistp
js
es
and
push
jecxz
mov
loopne
dec
add
jg
outs
mov
add
mov
rol
push
and
mov
add
cli
jg
mov
test
lods
adc
mov
gs
call
xchg
adc
add
pop
push
popa
mov
rcpps
cdq
add
sbb
dec
pop
pop
(bad)
(bad)
xor
sbb
adc
push
add
fincstp
or
sbb
adc
cmp
inc
sbb
cmp
add
sbb
dec
bound
mov
and
push
mov
inc
push
add
add
pop
(bad)
add
or
das
or
dec
or
imul
dec
or
and
push
push
mov
sub
lds
aam
push
cmp
outs
adc
add
or
adc
or
das
add
add
push
dec
or
cs
hlt
jmp
rcl
dec
or
sub
mov
pusha
push
add
mov
mov
les
mov
imul
inc
push
fwait
mov
sbb
mov
push
cmp
inc
leave
pop
int3
in
inc
jnp
mov
add
rcr
add
jmp
or
pop
or
les
mov
xchg
adc
xchg
xor
mov
or
and
and
sbb
movs
xor
cmp
iret
sub
shl
mov
aad
aaa
aaa
jmp
inc
and
and
sbb
gs
mov
pop
lsl
push
pop
sbb
dec
sub
mov
add
push
fstp
push
ss
inc
loope
iret
pusha
or
sysret
push
jno
sub
or
stc
jg
out
sbb
sbb
fidiv
add
xchg
mov
enter
or
psrlq
sbb
out
test
push
cmps
dec
popa
sub
jns
mov
ss
add
pop
pop
pop
pextrw
and
ret
inc
test
or
rcl
pop
add
push
push
inc
dec
or
jmp
(bad)
ds
and
push
imul
or
mov
fsub
add
das
mov
sbb
repz
or
dec
add
lea
dec
ffreep
rcl
faddp
ss
imul
stos
jae
inc
sbb
push
inc
adc
stc
mov
out
call
or
xchg
push
sar
enter
rol
or
or
push
movs
shl
call
add
inc
mov
and
popa
add
cmps
sub
fmul
cwde
sbb
shl
add
bound
or
dec
and
push
or
pusha
mov
and
cmp
inc
sub
and
push
pop
sbb
jns
and
pop
lock
daa
inc
inc
push
pop
sub
or
xchg
lods
sub
movs
das
sbb
push
test
xchg
clc
shl
jb
adc
dec
cld
xor
jo
xchg
inc
ret
mov
mov
in
adc
jnp
push
xor
sbb
enter
pop
in
or
mov
mov
adc
lods
stos
sbb
std
or
sbb
or
sub
int3
adc
mul
xor
inc
or
daa
sub
xchg
add
jo
dec
push
sub
push
popa
sbb
mov
ins
pop
mov
xor
popa
imul
cmp
jge
(bad)
xchg
xor
in
mov
call
cmp
add
push
jnp
pop
add
ss
es
imul
or
stos
push
dec
adc
add
and
or
pop
cmps
ja
mov
enter
popa
test
lds
and
pop
dec
lds
inc
movs
scas
xchg
aam
sub
scas
xor
pop
rcl
mov
add
push
pop
dec
nop
add
dec
add
sub
jae
shl
cmp
jbe
(bad)
rcl
pushf
jo
sub
icebp
lods
push
xchg
(bad)
and
and
or
push
(bad)
adc
mov
pusha
nop
pop
cmps
xchg
inc
sbb
pop
push
icebp
repnz
pop
ins
pop
lahf
ins
pop
push
mov
jb
sbb
or
aas
xchg
sbb
push
test
sub
test
and
loopne
test
add
daa
das
sub
add
pop
mov
sub
retf
test
repz
shr
mov
inc
pusha
and
pushf
pop
xchg
jmp
pusha
or
push
add
(bad)
or
add
add
std
aam
movs
add
and
or
dec
shr
add
add
add
or
add
mov
or
sub
or
and
and
sbb
or
cmp
xor
call
mov
cmp
mov
data16
add
sbb
test
pop
and
sub
mov
shl
popa
lea
add
mov
mov
or
call
or
pop
xchg
bnd
sbb
and
xchg
arpl
lods
dec
sbb
rcl
or
dec
add
add
stos
inc
fnsave
stos
adc
dec
inc
or
cmp
or
sub
xor
add
or
add
loopne
and
icebp
shr
adc
sbb
mov
pop
icebp
(bad)
call
pop
cmp
cmp
pop
mov
ins
xchg
mov
add
test
aam
or
pop
and
or
inc
mov
xlat
sbb
fwait
rol
xor
push
dec
and
(bad)
and
adc
push
popa
sub
adc
and
inc
cmp
mov
push
cmp
nop
sub
push
aam
stc
mov
sub
push
fiadd
xlat
(bad)
sub
nop
dec
cmps
and
mov
or
pop
add
or
seto
imul
pop
icebp
xchg
and
and
inc
add
ror
or
cmp
or
add
adc
push
pop
add
add
pop
and
lock
cmp
jno
loope
mov
and
mov
add
xchg
cwde
add
cwde
pop
out
add
xor
jo
cmps
pop
fcmovnu
sbb
inc
es
push
add
xchg
packuswb
cmps
sbb
or
dec
mov
inc
lds
mov
add
pop
xor
lods
sub
and
or
mov
dec
ror
mov
dec
mov
or
push
push
add
adc
mov
or
movs
and
adc
outs
dec
repz
adc
or
adc
repz
shr
adc
pop
sbb
repz
sbb
sbb
cmp
and
and
repz
repz
es
sub
repz
sub
sub
cmp
xor
xor
repz
repz
ss
cmp
repz
cmp
cmp
cmp
inc
inc
inc
inc
repz
repz
inc
inc
inc
dec
iret
repz
dec
dec
dec
dec
dec
dec
cmp
repz
push
push
push
push
mov
add
push
adc
jbe
adc
jle
imul
push
pop
push
xor
pop
add
sub
adc
sbb
pop
pop
adc
sahf
cmps
jge
push
adc
push
popa
pusha
arpl
jg
push
adc
add
and
out
imul
(bad)
jns
sbb
push
pop
jbe
ins
inc
mov
dec
sbb
aaa
sbb
ins
mov
ror
push
sbb
inc
sbb
ins
ins
int
sbb
push
ins
pusha
inc
xor
dec
outs
outs
jo
iret
imul
jle
pop
jb
jmp
add
retf
sub
mov
push
pop
add
dec
dec
push
das
jne
lock
sbb
xor
xchg
cmp
js
jns
jb
pop
enter
jle
xchg
cmp
cmp
aas
or
cmp
fwait
add
test
push
test
xchg
xchg
adc
adc
adc
pop
lock
cwde
pushw
leave
push
mov
in
inc
inc
jns
mov
add
jo
pop
dec
adc
mov
mov
mov
arpl
add
cwde
and
imul
daa
add
add
cwde
ret
add
dec
add
test
sub
jno
imul
and
adc
add
loop
push
xchg
add
adc
add
sub
mov
and
jae
bound
pop
add
into
nop
dec
out
adc
pusha
inc
cmp
add
lea
int3
push
sub
scas
cmp
imul
xor
and
dec
call
push
test
arpl
push
mov
dec
or
ret
mov
fistp
(bad)
rcr
sub
jns
xor
or
xor
push
add
push
movs
xor
add
jmp
inc
add
adc
call
fild
imul
ret
pusha
fstp
jne
add
add
or
dec
push
mov
or
jb
js
add
xor
inc
sbb
popf
add
ret
xor
(bad)
into
inc
sbb
es
add
fimul
pusha
popa
das
cmp
push
mov
push
aaa
or
adc
dec
cmp
or
push
pop
jl
enter
xor
inc
inc
rcr
push
cdq
cmp
sbb
or
(bad)
sub
cwde
or
pushf
push
adc
out
or
arpl
dec
or
add
and
inc
(bad)
push
dec
rol
aaa
sub
fcom
stmxcsr
push
jmp
inc
inc
imul
add
inc
inc
adc
in
hlt
test
jb
cs
sbb
nop
add
into
or
jge
push
push
sub
add
push
pop
and
add
and
aam
fisttp
or
push
push
or
jo
jne
or
dec
mov
mov
movs
add
sub
cmps
push
data16
fld
xor
inc
xor
push
add
or
add
mov
iret
loopne
jl
jg
inc
add
arpl
shr
push
test
and
(bad)
test
or
mov
and
mov
xchg
inc
xor
adc
test
sbb
je
adc
outs
sub
pop
adc
or
add
add
mov
loop
aad
push
dec
dec
jmp
adc
add
and
jo
xchg
add
add
or
ins
adc
call
sbb
cmps
mov
xchg
or
daa
sbb
sub
sub
pop
imul
lods
mov
movups
fisttp
or
dec
jge
es
lods
cmp
cmp
xlat
imul
xchg
imul
inc
push
ja
dec
sub
xchg
or
dec
aad
cmp
and
add
inc
inc
inc
rol
sbb
test
xor
je
scas
pop
and
daa
shrd
(bad)
nop
aaa
addr16
sub
xor
retf
and
out
ss
add
dec
dec
sub
add
dec
sub
lds
ficom
or
mov
adc
add
fst
jecxz
add
sub
xchg
mov
(bad)
pop
retf
dec
sub
jmp
mov
xor
sub
dec
sub
int3
fs
or
add
aaa
add
and
push
push
add
sub
pop
popa
in
and
cmp
adc
xor
fwait
rcl
pop
and
mov
xchg
and
ins
sub
push
push
add
mov
cs
outs
push
adc
cmp
inc
jl
out
cmp
jb
jo
jbe
xchg
add
push
jle
outs
sbb
sbb
add
jge
or
lds
fisttp
sbb
or
or
loope
lods
sbb
and
and
push
sbb
or
int
xchg
str
add
div
add
popf
scas
xor
adc
sti
out
not
pop
adc
or
add
adc
adc
push
test
mov
adc
fld
jno
xchg
xchg
cmps
stc
pop
and
add
stc
inc
adc
and
mov
cmps
and
add
jmp
call
and
add
adc
cmp
test
add
and
xlat
push
add
or
test
fiadd
sub
(bad)
or
bound
pop
sub
retf
inc
popa
daa
pop
add
aas
inc
jecxz
daa
add
bound
add
dec
mov
rcl
aad
jne
add
inc
ror
stos
icebp
xor
inc
sub
mov
cs
xor
push
mov
aam
adc
dec
or
adc
lea
outs
pusha
add
add
lods
inc
and
movs
jmp
mov
arpl
daa
sti
push
or
mov
mov
cmp
and
xchg
cmp
mov
mov
inc
ins
xchg
sti
fwait
loopne
mov
pop
xor
sub
pop
dec
inc
push
pusha
xor
xlat
inc
xor
clc
dec
xchg
popa
test
pop
repz
popa
adc
lea
stos
add
or
cs
jno
push
repnz
xchg
aas
stos
ret
dec
sub
push
xchg
sub
daa
jae
dec
mov
xor
sub
or
sub
or
popa
popa
jo
xor
jg
xchg
add
jecxz
or
sbb
mov
test
mov
push
xor
mov
push
int
push
ret
ins
add
sbb
in
rcl
push
hlt
sbb
(bad)
retf
and
(bad)
scas
mov
inc
add
movs
xchg
test
push
xor
or
push
movs
xor
pop
syscall
add
xchg
fild
pop
mov
mov
iret
fbstp
add
add
push
add
add
mov
rcr
retf
(bad)
and
loopne
adc
stc
ins
pop
test
sbb
ja
mov
out
sbb
push
push
sbb
loop
dec
loopne
scas
pop
sbb
add
add
push
or
mov
cld
or
mov
add
clc
jg
pop
add
adc
xor
mov
and
xchg
test
fs
hlt
add
cmps
in
mov
pop
popf
xchg
sbb
jg
or
ds
sar
repz
cmps
or
and
add
pop
inc
cld
jg
in
rcl
push
or
mov
xchg
adc
jnp
xor
arpl
pop
xor
jg
push
and
or
push
or
add
pop
cmp
out
imul
add
fdiv
xor
(bad)
push
sub
adc
addr16
pushf
ror
fistp
cmp
adc
popa
push
inc
or
cmp
jae
leave
adc
adc
nop
cs
add
push
xor
shl
nop
shl
cmp
fist
cld
jne
and
mov
dec
test
ins
add
popf
pop
jnp
sbb
sbb
gs
jb
(bad)
adc
sti
(bad)
mov
scas
add
pop
add
rol
or
scas
add
les
aam
adc
sub
xchg
jmp
daa
mov
jb
imul
dec
add
into
mov
add
adc
inc
xchg
xchg
or
dec
mov
mov
or
pushf
push
sub
sub
popf
pop
movs
push
mov
cmc
jg
pop
pop
pop
enter
xchg
pop
adc
int
mov
xor
cs
adc
cmp
ins
cdq
push
sbb
outs
add
sbb
sub
push
or
gs
add
fldenv
push
add
jl
sbb
js
dec
sar
jg
xchg
or
cmc
xchg
popa
and
out
lds
test
inc
stos
cld
sub
add
sbb
pop
rol
mov
push
pop
mov
bound
loope
movs
sbb
sub
inc
push
cmp
sbb
test
jb
push
xor
fwait
add
shl
ss
or
js
or
shl
cmp
inc
cdq
mov
xchg
(bad)
es
inc
add
test
mov
cs
popa
or
xchg
or
test
data16
cmovle
or
daa
shl
add
jg
push
inc
call
xchg
or
sub
and
movs
dec
mov
sbb
(bad)
sbb
mov
sbb
mov
clc
or
sbb
cmc
outs
and
push
push
sub
add
xchg
jge
sub
or
shr
xchg
and
les
dec
in
mov
loop
xchg
cmp
int3
xchg
push
and
push
ret
jl
add
aad
inc
add
jb
push
sub
add
loopne
aam
mov
add
shl
rcr
ror
inc
inc
sub
and
push
shl
or
arpl
sbb
sub
imul
fwait
add
adc
xor
mov
mov
or
push
arpl
push
pop
inc
fwait
cmp
adc
mov
jmp
daa
add
push
aas
popa
pop
inc
push
pusha
mov
and
je
mov
dec
and
xchg
add
test
sub
enter
cmp
jno
adc
pop
or
cmp
add
jbe
fcom
test
sub
push
jmp
sbb
add
nop
mov
imul
js
mov
jo
and
xchg
cdq
retf
mov
cmps
or
or
xlat
dec
mov
jns
mov
es
push
add
add
movs
xchg
stc
inc
add
lea
or
pop
cmp
pop
cmp
pop
clc
sub
lea
cmp
push
sbb
and
fs
mov
jae
and
fild
mov
inc
fild
popa
adc
add
sar
jmp
or
fisubr
inc
sbb
mov
ins
jbe
sub
test
inc
push
mov
arpl
push
pop
cmp
jmp
int
pop
test
pusha
lods
cmps
push
fwait
bound
shr
sbb
and
sub
call
es
xor
int
inc
add
retf
enter
sub
and
pop
movs
rcl
in
cmps
and
add
cdq
pushf
jl
add
(bad)
in
jge
movs
test
lock
mov
pop
jle
add
je
shr
inc
shl
mov
add
add
pop
push
adc
fimul
loopne
loope
jae
and
or
adc
shr
dec
lods
cmp
push
and
std
cmps
dec
or
mov
rcr
loope
push
xchg
push
mov
inc
or
shr
sub
mov
icebp
outs
pusha
add
add
mov
sub
fucom
add
cwde
daa
add
pop
std
push
mov
cmps
dec
xor
shl
and
imul
sub
mov
mov
ds
or
inc
call
imul
push
xor
sub
ror
scas
push
jp
push
pop
xchg
or
mov
add
dec
mov
ins
or
lock
pop
arpl
mov
call
pop
xor
cmp
sbb
mov
push
adc
adc
pop
jecxz
shr
test
or
mov
cs
or
and
sbb
mov
adc
dec
xchg
imul
xlat
jne
jg
pop
cmp
inc
add
add
mov
jp
call
inc
dec
movs
jns
shl
inc
fmul
jmp
push
pusha
ret
inc
xor
push
or
lea
int
add
test
inc
push
add
pop
enter
popw
pop
aaa
ss
outs
lods
add
outs
pop
inc
les
nop
or
add
add
cwde
xchg
or
xchg
sub
or
stc
or
xchg
sbb
outs
sbb
lods
push
leave
dec
pop
add
sub
dec
pop
or
nop
mov
pop
dec
push
xchg
outs
and
pop
sub
add
cmp
scas
dec
pop
arpl
arpl
jmp
or
add
das
xor
fwait
(bad)
pop
push
mov
out
or
jmp
pop
dec
sahf
mov
daa
sbb
add
jns
adc
lock
inc
aaa
mov
jae
pop
pop
jno
add
dec
ret
dec
mov
or
outs
pusha
add
ror
add
adc
xchg
in
add
into
lods
add
add
xchg
out
add
add
ror
in
jnp
inc
nop
or
and
mov
add
add
xchg
aad
pop
and
inc
loop
sbb
jecxz
inc
push
add
jg
xchg
and
rcl
lods
pop
(bad)
shl
jmp
jp
in
ins
data16
test
xor
or
xchg
les
xchg
jne
stos
push
stos
mov
arpl
xor
inc
pop
clc
add
dec
stos
adc
sbb
cdq
shl
repnz
mov
sbb
or
add
jne
push
add
clc
jp
dec
xchg
ret
or
movs
sbb
push
add
add
add
adc
push
mov
fisub
sub
bswap
pop
or
mov
dec
fstp
dec
mov
or
stos
add
or
test
push
push
ss
xchg
(bad)
mov
dec
sbb
std
mov
or
mov
adc
push
xor
and
shl
ins
jae
das
ss
or
mov
adc
xor
and
pusha
jo
out
adc
sbb
imul
cli
sahf
add
mov
sbb
xchg
dec
pop
add
sub
adc
sbb
xor
lock
inc
ror
xchg
in
xor
jl
inc
mov
sar
jae
inc
push
fwait
sbb
and
lahf
mov
or
add
sbb
in
xchg
mov
sub
cdq
daa
add
rcl
push
frstor
jmp
movs
pop
add
movs
sbb
rcr
pop
add
sbb
adc
scas
adc
sub
lods
stc
xchg
movs
nop
shl
fs
lea
xor
inc
adc
adc
dec
adc
imul
add
sbb
add
add
adc
push
pop
or
push
bound
mov
mov
cmp
lea
ins
and
sub
push
xchg
push
rol
mov
inc
adc
cdq
mov
push
or
mov
ficom
adc
nop
or
or
int3
dec
dec
es
add
fdiv
add
adc
adc
mov
cmp
jne
ss
jnp
mov
inc
pop
pop
jb
pop
xchg
addr16
ss
push
lea
dec
cdq
mov
inc
fld
psubusb
ja
push
fwait
inc
inc
xchg
push
in
fisub
mov
sbb
pop
mov
lods
ins
adc
sub
ss
pop
daa
push
xchg
aas
jne
jmp
dec
cmp
and
jae
in
les
outs
pusha
xchg
sbb
sub
sub
jg
dec
sub
sub
in
mov
jg
xchg
mov
pop
loope
es
enter
pushw
das
loope
outs
sbb
movs
movmskps
(bad)
push
inc
ret
sub
in
ret
jb
mov
popa
sbb
sbb
and
add
add
inc
test
sbb
adc
test
inc
and
xchg
cmps
adc
add
add
and
lea
jno
or
dec
mov
or
addr16
stos
adc
or
popa
xchg
mov
jbe
bound
retf
arpl
fwait
loop
ret
sbb
sbb
pop
inc
pop
xor
pop
pop
loope
stos
xor
add
pusha
cmp
test
dec
add
push
or
and
pop
add
pop
sbb
mov
push
or
dec
or
aas
loop
add
add
xchg
mov
mov
add
mov
xchg
xchg
pop
xor
xchg
sbb
xor
mov
movs
fimul
pop
dec
xchg
es
dec
loop
add
sbb
fs
or
push
pop
idiv
inc
ss
cld
cmps
add
or
inc
ss
xor
and
sbb
adc
or
push
or
mov
cwde
aaa
stos
imul
sar
cs
and
xor
sbb
xor
jb
pop
add
xchg
ins
loope
inc
push
xchg
sub
push
(bad)
pop
sub
xor
fwait
aaa
pop
or
loop
pushf
and
lods
pop
adc
leave
push
test
loope
add
adc
test
add
cmp
lock
clc
pop
mov
add
cmps
or
or
pop
test
imul
rcl
iret
mov
or
and
and
sub
adc
xchg
lea
add
pusha
scas
inc
and
push
push
sub
les
adc
xor
cwde
sar
std
dec
add
pop
add
ss
test
push
cwde
push
jb
push
adc
sahf
and
sbb
pop
push
push
in
stos
sub
gs
popa
loop
and
das
mov
or
pusha
add
push
pop
push
push
pop
adc
jnp
xchg
sbb
outs
push
mov
add
adc
adc
mov
ins
add
mov
jmp
test
test
scas
mov
mov
ret
sti
add
pushf
arpl
pop
cmp
add
iret
sbb
addr16
sub
adc
inc
dec
(bad)
add
add
add
sub
stos
sub
std
jns
cmps
mov
xchg
mov
push
add
and
or
popa
xor
or
and
push
add
or
dec
test
or
inc
xchg
jno
sub
or
ss
int3
xor
push
push
movs
out
es
pop
ds
pop
add
rol
adc
add
and
push
mov
fwait
push
cdq
rol
add
js
test
lods
out
pop
les
or
adc
sub
shl
cmps
mov
or
das
xor
(bad)
cmp
or
push
aas
add
dec
or
sbb
inc
(bad)
bound
mov
sub
inc
cmp
mov
in
inc
inc
sbb
sbb
leave
retf
arpl
and
movs
enter
inc
out
pop
xor
push
sbb
jecxz
pop
add
push
or
xor
mov
push
in
sub
mov
push
xor
add
or
dec
dec
push
call
or
xchg
adc
xor
sahf
nop
cmps
popa
test
push
shr
or
mov
mov
ins
mov
add
xor
jo
add
imul
push
dec
jmp
inc
in
nop
int3
mov
dec
pop
shl
add
dec
or
fwait
add
outs
rcr
xchg
add
xlat
or
mov
scas
out
jnp
pop
nop
or
or
sub
dec
inc
inc
push
mov
fnstenv
or
or
or
add
movups
inc
in
ret
mov
scas
mov
mov
push
ja
test
xchg
mov
or
add
dec
(bad)
sub
ja
add
fiadd
xchg
sub
or
imul
or
adc
scas
test
rcl
xor
test
out
xchg
ss
or
or
add
push
jbe
test
ins
mov
jg
outs
sub
(bad)
and
adc
nop
sbb
add
xchg
add
mov
iret
xor
pop
test
xchg
sbb
or
cmp
sbb
pop
out
mov
or
pop
repnz
imul
pop
xor
add
popw
sbb
push
jb
cmp
call
pop
or
or
dec
es
adc
pop
add
dec
aaa
cmp
es
push
mov
pop
(bad)
psubsw
mov
pop
ins
scas
and
das
pop
out
push
scas
dec
ret
pop
xchg
and
mov
jo
add
add
loopne
xor
add
and
je
pushf
es
add
xlat
mov
shl
sub
pop
and
cmp
sub
sbb
sub
out
sub
sbb
daa
add
cmps
popa
and
add
sahf
inc
dec
loop
fwait
sub
and
lods
mov
sbb
ds
or
xor
xlat
pop
or
or
sbb
push
das
or
adc
outs
out
mov
push
jle
or
xor
jecxz
jle
xor
or
cmp
mov
cmp
cwde
push
jle
(bad)
bound
sub
inc
es
inc
(bad)
xor
jae
adc
add
or
lea
add
jle
or
int3
popf
out
out
inc
loopne
sbb
sub
pop
mov
test
add
jg
retf
in
xchg
and
mov
sti
call
test
and
and
pop
add
movs
imul
sub
push
or
imul
pop
ja
ffree
cwde
and
and
adc
push
inc
movs
and
cdq
stc
and
xchg
sbb
daa
add
fld
and
dec
xchg
dec
adc
enter
js
bound
and
sub
pop
das
push
inc
imul
or
(bad)
and
pop
(bad)
push
fs
stc
(bad)
adc
shr
out
int
das
shl
add
pop
cmps
and
xchg
jmp
ins
sbb
and
mov
add
cs
ror
sub
fist
dec
lea
xchg
das
sbb
jae
neg
and
add
add
sbb
and
or
add
lea
sub
inc
scas
or
sbb
and
mov
(bad)
and
rcr
inc
inc
sub
lods
jne
sbb
pop
fbld
outs
loopne
sbb
pop
in
rol
je
retf
inc
aaa
pusha
das
add
lods
inc
call
add
inc
popf
adc
cs
pusha
sub
adc
add
sbb
mov
cmp
inc
add
mov
xchg
test
ror
ret
jp
xchg
or
mov
aaa
mov
cmps
add
jmp
sbb
or
ret
daa
cmovge
cdq
add
sub
jb
test
jnp
xor
dec
ss
adc
adc
ss
cmps
mov
and
dec
xor
push
or
test
lahf
mov
xor
(bad)
ins
jmp
call
test
or
xlat
jg
pop
sub
xor
adc
jnp
mov
call
sbb
xor
es
clc
out
rcl
sub
sbb
(bad)
mov
adc
stos
mov
cmp
stc
sbb
sbb
sub
xchg
shl
test
jecxz
xor
fist
push
and
add
sbb
sbb
sub
xor
inc
sbb
(bad)
js
add
cmp
mov
mov
cmp
or
pop
add
test
mov
adc
inc
daa
adc
daa
push
jecxz
adc
(bad)
jo
push
outs
jno
gs
mov
test
inc
sbb
xchg
push
addr16
pusha
cmp
jmp
xchg
adc
push
inc
mov
or
movs
mov
push
test
or
pop
add
outs
enter
add
(bad)
and
aad
jne
or
stc
shl
or
pop
adc
cmp
lds
loope
xchg
cmp
popf
mov
xor
(bad)
sbb
dec
inc
arpl
xchg
leave
pop
jmp
or
xchg
fiadd
sbb
mov
mov
sbb
in
jnp
out
jno
scas
push
cmps
dec
js
mov
and
daa
fnsave
or
sahf
fptan
and
or
or
ss
ins
jecxz
inc
dec
mov
test
enter
jns
outs
mov
adc
sub
mov
pop
inc
daa
adc
loope
jge
cs
(bad)
inc
lahf
add
or
test
sbb
add
xchg
lds
icebp
xchg
xchg
ds
xor
sbb
push
xor
jns
sbb
repnz
in
ds
mov
pushf
adc
(bad)
popa
xchg
ror
arpl
jne
inc
ficomp
add
push
rcr
push
mov
rcl
ds
cmp
ds
mov
jge
push
test
push
icebp
cdq
fidiv
and
push
test
sbb
retf
lods
xor
pop
mov
and
in
les
sub
nop
and
jne
movs
add
(bad)
cwde
or
aas
add
xchg
ds
add
test
cmps
mov
or
dec
or
mov
ror
leave
xchg
and
add
fcmovb
and
(bad)
jmp
enter
and
xchg
or
jle
add
mov
push
or
or
leave
and
add
das
out
adc
jo
cmp
aaa
sbb
fistp
push
pop
inc
pop
dec
ins
add
enter
inc
in
nop
test
(bad)
and
fisttp
dec
js
and
and
cmps
imul
out
aam
xchg
shr
inc
add
mov
push
xor
add
fist
mov
add
pop
add
out
pop
inc
mov
pusha
lods
push
inc
or
xchg
push
inc
or
or
test
mov
add
out
add
xchg
(bad)
out
enter
inc
sub
mov
inc
or
jge
outs
pop
inc
sbb
mov
mov
pop
fwait
es
or
or
dec
inc
sub
pusha
mov
retf
pop
xor
mov
mov
loopne
shr
and
adc
ret
xor
xchg
(bad)
mov
mov
or
lea
add
pop
repnz
shr
or
add
sub
test
dec
or
jbe
adc
adc
loop
add
mov
add
mov
mov
and
inc
popf
lods
rcr
out
test
cs
mov
cdq
sbb
push
mov
es
and
dec
push
adc
add
out
add
sbb
push
in
adc
cmc
xor
mov
mov
mov
lods
test
shr
data16
mov
loopne
leave
pop
mov
cmc
xor
enter
dec
or
sar
and
or
pop
mov
mov
cmp
mov
stos
xchg
fyl2x
inc
js
sub
and
add
sbb
mov
out
sbb
sbb
and
ins
adc
adc
or
mov
jmp
shr
inc
pop
or
ins
ja
dec
add
or
ja
xchg
add
jl
jle
sbb
inc
and
popf
jns
push
and
dec
pop
push
add
fisttp
jmp
daa
ret
add
sub
adc
(bad)
imul
sbb
jno
add
mov
sbb
ds
sbb
jnp
test
movs
mov
rdmsr
outs
adc
(bad)
and
es
pop
daa
push
fld
jno
popa
adc
popf
mov
dec
dec
xor
sub
fadd
imul
and
push
rcr
stc
push
or
aaa
push
cmps
mov
fwait
sub
jecxz
or
xor
add
push
mov
imul
xchg
mov
inc
loop
outs
daa
add
pop
mov
push
jge
lock
push
adc
cmp
mov
in
add
outs
or
pop
(bad)
jne
sub
scas
and
int3
inc
out
and
or
inc
or
push
stos
(bad)
push
xchg
aad
sub
rol
xor
mov
and
lock
add
jp
nop
in
add
ret
retf
les
cdq
pop
fadd
push
add
xchg
cld
adc
retf
dec
adc
push
add
sub
lods
dec
add
cmp
test
jmp
lock
add
test
dec
enter
es
test
ds
adc
sahf
mov
inc
loop
add
or
rcl
inc
aas
adc
push
daa
or
cmps
sub
sbb
sbb
inc
adc
push
into
lahf
adc
or
sbb
adc
mov
(bad)
adc
push
or
or
push
add
or
pop
jae
push
or
cmp
pop
add
movs
loopne
jg
adc
cwde
and
or
adc
cdq
and
pop
adc
push
test
and
inc
fcomp
pop
es
xchg
adc
bound
popa
add
sbb
pop
(bad)
call
adc
or
inc
shl
outs
sbb
push
mov
dec
cmps
dec
adc
cmp
sbb
iret
test
add
adc
or
adc
push
es
fwait
call
pop
or
stos
mov
adc
daa
inc
sbb
arpl
jae
jmp
and
mov
adc
movs
das
add
test
mov
xor
pop
sbb
cmp
cmc
loop
inc
and
push
push
scas
aas
and
sbb
mov
fcmovne
sbb
sub
xchg
inc
pop
push
daa
test
imul
pop
dec
sbb
inc
jle
(bad)
into
inc
or
dec
adc
je
or
imul
push
push
cmps
call
std
retf
xchg
adc
pop
or
imul
adc
adc
iret
repz
or
or
add
mov
mov
sub
mov
dec
adc
cmp
push
adc
or
xchg
xor
or
push
and
enter
or
sub
test
push
jno
xor
xor
mov
inc
lea
add
dec
ret
adc
push
adc
popf
xor
icebp
sbb
(bad)
adc
fwait
push
or
inc
pop
pop
pop
jbe
shr
or
fisttp
enter
or
add
inc
cdq
inc
cmp
sub
sahf
inc
mov
xchg
outs
nop
adc
aas
or
es
lods
sbb
and
mov
dec
dec
aad
(bad)
adc
ins
mov
mov
daa
mov
fild
cdq
out
loopne
(bad)
and
cmp
es
dec
popa
adc
daa
add
add
add
mov
and
lods
stos
xchg
jno
push
shl
or
xor
stos
pop
sbb
test
cmp
je
int
or
dec
mov
sbb
mov
push
cmp
xchg
sbb
clc
pop
add
ss
inc
sbb
sbb
xchg
movs
sbb
imul
sbb
sar
sub
add
add
sbb
push
ins
arpl
inc
dec
repz
and
sbb
dec
push
(bad)
push
mov
aam
push
mov
push
adc
cmps
bound
inc
and
xchg
aas
sbb
push
rol
ret
sbb
lock
fild
fs
pop
imul
cs
sbb
nop
popa
mov
xlat
push
mov
xlat
jo
leave
sbb
push
popa
sub
pop
dec
test
and
add
xor
adc
repz
jnp
sahf
ficomp
jnp
and
adc
jno
loopne
adc
add
or
sbb
retf
in
add
rol
push
pop
and
mov
jne
jg
mov
dec
sub
sbb
xor
inc
xchg
std
xor
pop
pop
push
add
sbb
nop
and
popa
or
push
add
add
push
dec
(bad)
push
ins
cmp
push
cmp
(bad)
xor
es
cmp
or
or
or
push
pop
or
mov
repnz
jae
mov
(bad)
push
cs
imul
push
scas
jne
add
dec
pushf
fwait
add
sbb
sti
or
adc
or
rcr
aas
sub
cmc
inc
or
retf
or
dec
sbb
sbb
or
xor
cmp
push
(bad)
loop
mov
and
ror
popa
adc
inc
add
mov
jmp
jae
ja
jbe
jb
and
xor
pop
(bad)
in
repnz
lea
mov
xor
mov
dec
cwde
bound
das
xor
(bad)
or
ret
(bad)
out
add
jp
sar
push
xchg
rcr
sbb
xor
data16
retf
pusha
mov
or
test
loope
sub
aaa
or
xchg
and
neg
sub
inc
or
add
int
add
lods
push
jbe
stos
and
movs
mov
lahf
push
xchg
add
and
lock
std
add
loopne
call
inc
inc
sbb
mov
jbe
dec
pop
pop
mov
pop
pop
mov
stos
out
out
jae
inc
jmp
or
arpl
or
add
bound
xchg
sbb
ins
ins
add
jb
out
rol
add
pop
xchg
push
pop
stc
dec
pop
pop
push
push
mov
inc
adc
mov
and
in
aad
or
push
adc
add
rcl
les
sbb
adc
or
ror
xor
adc
push
retf
ins
inc
pusha
push
mov
mov
add
mov
in
mov
mov
pop
(bad)
leave
jge
push
pop
cmc
in
sbb
jns
jp
nop
popa
sub
pop
push
dec
movs
inc
into
out
mov
(bad)
sub
and
ror
fwait
test
inc
mov
mov
and
stc
xor
add
pop
xchg
test
lods
dec
or
push
jnp
pop
dec
pop
add
mov
or
cmp
add
pop
(bad)
imul
and
xchg
inc
sti
shl
push
movs
push
rcl
clc
push
mov
cmp
xchg
jbe
cmovno
push
ror
imul
les
mov
popa
add
les
inc
sub
or
retf
inc
xor
dec
add
pop
ror
xor
inc
or
(bad)
into
mov
cmps
mov
fldcw
fidiv
nop
and
and
call
xor
and
inc
bound
in
ins
rcr
inc
and
mov
or
aas
add
push
jecxz
add
inc
xor
add
jecxz
jmp
push
inc
movs
cdq
ss
inc
test
or
adc
add
add
pusha
jo
gs
aad
ss
lods
dec
adc
aam
inc
pop
jge
in
ins
sbb
and
adc
jns
add
loopne
inc
dec
add
aaa
add
call
fcom
mov
xchg
or
into
fmul
icebp
mov
mov
push
or
jg
jne
mov
hlt
js
fs
aam
mov
cmp
into
and
scas
inc
cmp
adc
test
xor
mov
mov
adc
pop
pop
pop
jl
shr
scas
cs
movs
out
xor
push
sbb
mov
fld
push
rcr
inc
stos
lea
sub
sub
int
call
sbb
int3
pop
shr
dec
cdq
add
push
dec
stos
shr
aas
adc
sub
jnp
jp
movs
lea
jne
ret
dec
sub
push
pop
sbb
fisttp
sbb
repz
retf
sbb
xchg
(bad)
or
test
xchg
mov
dec
jecxz
add
and
add
and
adc
es
add
sub
rol
push
jns
and
ret
jmp
cmp
xor
(bad)
push
pop
push
and
xor
data16
adc
fs
mov
in
pop
xor
xor
sbb
cdq
test
or
add
stos
adc
add
sub
jecxz
push
sub
sub
dec
test
sub
(bad)
adc
xchg
fnstenv
push
and
adc
adc
mov
in
sbb
and
or
lods
out
and
adc
xor
mov
or
add
adc
lods
mov
cmps
push
mov
jne
jnp
cmp
dec
sbb
mov
adc
add
or
in
or
pusha
dec
lahf
das
adc
ror
add
add
push
sub
rcr
(bad)
je
dec
adc
inc
sub
ins
add
scas
test
pop
add
or
mov
pop
or
inc
test
movs
mov
ror
cmps
es
lock
adc
mov
add
loope
push
mov
(bad)
adc
pop
add
bound
shl
mov
xor
(bad)
inc
imul
ss
lahf
jne
cmp
or
jb
inc
gs
jno
push
sbb
push
push
pop
lods
mov
sub
mov
adc
jns
(bad)
or
out
fdiv
jno
and
das
jb
inc
out
out
ins
outs
imul
sub
cmp
aam
jmp
rol
push
loop
mov
add
mov
add
sub
jbe
add
stos
(bad)
(bad)
inc
add
push
pop
pop
loope
add
adc
push
or
daa
xchg
call
fimul
or
sbb
or
mov
jp
inc
call
fild
adc
lods
xchg
add
dec
and
add
jge
cmps
jo
addr16
cmp
push
adc
outs
push
jl
int3
push
pop
ins
pop
fbld
gs
push
bound
test
adc
stc
adc
(bad)
ja
push
mov
lods
fld
pop
aad
pop
js
fwait
push
imul
xchg
shr
adc
inc
imul
mov
sbb
xchg
jnp
ret
and
aas
dec
push
add
xchg
ds
mov
push
xor
inc
mov
shl
nop
mov
dec
cdq
arpl
cvtps2pi
call
push
push
ror
popa
in
push
xor
rol
add
and
movs
inc
inc
adc
xor
add
pushf
mov
into
mov
pop
pop
(bad)
pusha
in
mov
xlat
add
ds
push
add
inc
pop
push
loopne
dec
loope
ins
popf
pop
xor
xchg
mov
xchg
mov
popf
push
mov
add
test
in
dec
shl
pop
fbld
adc
pushf
inc
sbb
mov
jl
jo
add
pop
xor
outs
fs
mov
add
into
pop
or
or
xchg
pusha
sbb
add
sbb
or
and
sbb
aaa
xchg
sbb
xor
movs
push
mov
bound
(bad)
outs
adc
fdiv
sub
lock
dec
sub
pop
push
pusha
aas
das
xchg
sub
xor
sbb
test
mov
aad
imul
or
mov
inc
inc
dec
es
mov
repnz
or
add
daa
adc
or
add
sbb
push
pop
xor
imul
pop
and
ret
xor
ret
sub
test
shl
sbb
dec
add
or
lahf
xor
lods
adc
adc
(bad)
rol
push
pop
mov
push
daa
mul
mov
sub
add
add
pop
pop
inc
inc
add
push
and
jae
adc
inc
and
mov
stos
pop
add
loopne
outs
in
jmp
daa
pop
xchg
pusha
mov
and
pushf
imul
fiadd
xor
cmp
pop
(bad)
fs
xchg
inc
inc
in
retf
pop
xchg
sbb
arpl
pusha
(bad)
fwait
mov
add
pop
add
and
adc
mov
adc
aad
pop
retf
and
int3
pop
idiv
xor
das
or
push
mov
retf
adc
nop
outs
dec
push
ss
dec
or
shl
retf
sti
push
mov
and
add
test
sub
stos
dec
pushf
ss
inc
inc
adc
push
stc
psubusw
sub
sbb
and
and
fwait
imul
xchg
and
sbb
inc
add
or
sbb
xchg
and
xchg
(bad)
mov
xor
mov
xor
sub
cmps
inc
push
add
aaa
or
pop
inc
push
stc
cmp
dec
adc
mov
sub
xor
xor
in
or
sbb
inc
sub
rcl
pop
sbb
add
leave
mov
cmp
mov
push
add
inc
(bad)
sbb
push
aaa
or
mov
imul
dec
sbb
add
inc
in
pop
adc
pushf
(bad)
into
into
inc
sub
mov
es
aam
adc
das
push
mov
mov
imul
out
add
pop
add
popa
xor
add
mov
push
test
and
add
rcr
jmp
add
jp
adc
adc
inc
cmp
add
xchg
add
mov
add
pop
je
loop
mov
add
sbb
push
mov
add
dec
jbe
mov
cwde
rcl
outs
inc
inc
and
sub
push
and
clc
popa
add
sbb
stos
adc
fidiv
outs
or
cmp
popa
pop
adc
dec
cli
out
add
jecxz
add
jg
or
add
sub
xchg
xchg
xor
sub
add
or
push
or
push
int
push
add
add
rol
jecxz
jbe
movs
imul
mov
adc
xchg
or
outs
les
je
add
jp
sbb
inc
add
pop
xchg
xlat
scas
sbb
sahf
add
(bad)
adc
pop
adc
rol
repz
adc
push
adc
pop
test
add
aad
es
sar
inc
loope
(bad)
jmp
test
nop
les
push
movaps
adc
cmps
jb
push
xchg
jmp
cmovb
pop
mov
ror
mov
inc
sub
mov
test
push
lds
sub
mov
mov
cmp
inc
add
and
sub
mov
int
dec
imul
push
xchg
jmp
call
xor
dec
adc
push
out
adc
es
push
pop
in
or
inc
(bad)
rcr
test
jmp
push
push
je
mov
fld
sbb
dec
cmp
push
ret
add
call
nop
adc
or
mov
sub
aam
and
cmp
or
push
inc
arpl
ror
dec
cmp
hlt
inc
push
push
add
test
jge
xchg
jno
adc
lds
inc
nop
cmps
shr
or
sub
sub
add
mov
test
ror
push
xchg
inc
jp
add
sub
pop
leave
dec
mov
pop
nop
mov
and
popa
adc
js
imul
or
or
or
ds
sub
inc
sbb
loop
sar
ins
sbb
sbb
inc
add
adc
inc
dec
mov
push
push
and
outs
out
adc
mov
add
push
push
stos
sub
xor
inc
dec
and
test
nop
lock
pusha
cs
mov
xchg
or
cs
cmp
push
pop
xchg
mov
push
sub
fsubr
pop
inc
shl
cmps
sub
dec
add
adc
pop
and
jge
adc
and
dec
xchg
repz
mov
push
and
int
das
jo
dec
shr
adc
or
bound
mov
sub
mov
mov
push
mov
rcr
xchg
(bad)
popa
sbb
jbe
xor
push
inc
imul
dec
xchg
shl
dec
ror
(bad)
in
push
or
sub
ret
xor
mov
test
sbb
or
cdq
cmp
aaa
push
rol
lods
aaa
test
add
sub
adc
jle
int
xor
adc
adc
push
push
unpckhps
dec
rep
call
pop
adc
shl
imul
adc
mov
sbb
aaa
adc
cmps
fldcw
sbb
adc
adc
adc
and
movzx
lea
push
and
add
and
aaa
data16
mov
jbe
and
and
jl
sbb
and
push
into
shr
push
and
and
pop
and
inc
ret
xchg
jnp
push
and
pop
aaa
fldcw
and
sub
sub
in
cmps
and
and
daa
xchg
xor
call
xor
out
jns
sub
sub
push
sub
sub
(bad)
jge
jmp
aaa
adc
sub
adc
iret
ins
imul
inc
sub
cmp
clc
mov
add
cmp
push
sub
cs
sub
xor
inc
sub
inc
outs
test
xor
dec
aaa
mov
ss
xor
mov
mov
push
inc
dec
inc
add
inc
cmps
xor
dec
(bad)
fidiv
sbb
dec
and
sub
xor
ds
dec
inc
xor
in
dec
imul
inc
outs
sub
xchg
adc
dec
inc
dec
ss
pop
push
dec
stc
cmp
repz
dec
push
push
push
sbb
xor
cmps
push
xor
add
push
push
add
ins
repz
push
push
xchg
push
add
push
pop
push
pop
push
push
fild
pop
push
pop
push
pop
pop
pop
pop
pop
add
sahf
pop
pusha
popa
add
inc
push
pop
bound
pop
ins
fwait
ins
sti
pop
arpl
pop
gs
pop
fs
pushw
pop
push
pop
addr16
imul
ins
add
outs
outs
jo
pusha
ins
xor
add
mov
jae
add
(bad)
push
jne
inc
cmp
cs
jns
ss
(bad)
push
arpl
push
jle
push
add
cmp
add
sub
mov
ds
ds
push
fld
mov
mov
mov
out
cmp
push
ins
push
(bad)
push
nop
push
xchg
idiv
out
xchg
push
xchg
dec
xchg
add
cmp
cmp
push
cwde
fwait
call
ss
es
lahf
data16
fstp
movs
imul
imul
stos
pop
ins
stos
ins
lods
ss
repz
push
lods
scas
scas
mov
mov
fwait
int
push
mov
ins
mov
mov
mov
outs
(bad)
stc
mov
xor
jo
jo
jo
push
jno
(bad)
imul
mov
ds
rol
ret
sar
push
les
jb
es
retf
cmp
imul
add
jb
sahf
jp
push
or
je
je
push
rcl
ins
outs
mov
jle
rcl
jne
jne
push
(bad)
push
jbe
repz
js
outs
js
es
(bad)
jns
lahf
jbe
dec
js
fidivr
jns
cs
es
(bad)
es
test
xor
adc
jns
and
mov
data16
jns
loopne
daa
loop
sahf
xchg
xchg
jecxz
in
in
ss
xchg
out
jp
push
cmp
cmp
xchg
jnp
ss
out
ja
add
mov
es
jmp
pusha
jp
or
push
in
push
jl
jle
pop
out
pop
repnz
repnz
repnz
repnz
repnz
cmc
div
cdq
in
repnz
stc
add
jl
psubd
sti
dec
jl
jg
pop
bnd
mov
ins
mov
in
mov
std
pop
dec
leave
inc
add
add
pop
enter
add
xor
add
xchg
push
push
sub
jnp
call
in
mov
xor
push
or
jl
inc
push
push
inc
or
jge
or
jge
(bad)
call
push
jge
add
jle
movs
mul
sar
push
and
adc
adc
cmp
adc
push
pop
sbb
sbb
in
jns
sbb
xor
and
jg
push
sbb
jg
push
and
stc
mov
xor
push
and
jg
aaa
sti
loopne
dec
and
xor
inc
jns
add
daa
ss
push
xor
add
xchg
int
xchg
add
in
sub
sub
ins
jns
jg
outs
xor
push
xor
pushf
sbb
mov
xor
xor
repnz
adc
push
cmp
cmp
cmp
push
ds
inc
inc
inc
in
jns
inc
inc
inc
inc
fnsave
push
cmp
out
dec
aas
and
inc
dec
dec
pushf
cmp
out
dec
push
dec
dec
push
push
mov
popa
jecxz
and
or
dec
mov
cmps
sbb
pop
add
sbb
and
add
mov
cwde
(bad)
xlat
shl
add
push
bound
pop
add
adc
addr16
xchg
mov
lea
adc
cmps
push
mov
pusha
or
xchg
add
push
mov
pop
inc
add
add
jmp
add
sbb
mov
loope
dec
pop
mov
add
test
add
inc
cwde
or
rcl
add
add
cs
sbb
movs
or
loop
add
out
add
and
add
(bad)
add
fs
test
(bad)
(bad)
loopne
iret
push
xchg
push
xor
pop
or
rol
cmps
push
push
add
sbb
fisubr
jmp
test
dec
ja
sbb
add
or
xchg
xor
sbb
sbb
mov
add
inc
sbb
jge
es
or
pop
sbb
and
inc
push
mov
or
push
dec
aas
push
add
call
movs
arpl
popf
xchg
and
and
xor
add
ret
push
or
add
xlat
inc
mov
jecxz
int3
adc
in
mov
movs
icebp
add
add
sbb
and
xchg
cmp
outs
push
adc
sub
movs
cs
and
in
xor
enter
xor
add
movs
inc
push
xor
jno
cmp
aaa
or
inc
cmps
add
push
mov
mov
sub
add
fs
xor
es
in
cmp
sbb
adc
bound
pop
inc
mov
add
shr
dec
dec
fmul
mov
fld
mov
jo
lahf
add
xor
test
add
jae
pusha
add
add
mov
mov
mov
mov
loopne
push
pop
fnstcw
or
jp
adc
push
inc
pop
add
in
cdq
sahf
adc
pusha
adc
lods
push
in
popa
cmp
sub
adc
and
mov
popa
xchg
push
jae
push
xor
sub
inc
pop
inc
cmps
lea
ins
xor
push
leave
(bad)
mov
ins
and
xor
mov
dec
mov
jnp
aam
sahf
xchg
sub
js
leave
xor
sub
add
pop
pop
test
mov
jo
jns
rol
pop
add
adc
add
dec
sbb
push
push
add
add
push
mov
ror
xor
sbb
scas
and
adc
sub
fnsave
cmc
(bad)
out
pop
stc
bound
jl
jnp
inc
movs
pop
adc
adc
mov
push
ret
popaw
xor
aaa
test
and
inc
loopne
outs
add
add
pop
and
imul
inc
push
loope
push
xor
push
sub
bound
mov
sbb
aas
sbb
mov
dec
shl
and
mov
adc
imul
xor
shl
daa
mov
push
dec
dec
mov
(bad)
cmp
pop
adc
mov
inc
(bad)
loop
mov
or
xor
inc
iret
inc
test
or
push
retf
pop
and
ins
sub
or
lods
adc
mov
xor
popa
xor
jnp
lea
or
xchg
or
rcr
ror
sub
arpl
cmps
or
xor
sbb
add
rcl
and
les
scas
mov
inc
jg
adc
xlat
in
dec
and
adc
mov
fild
xchg
inc
cwde
lds
xchg
ss
daa
mov
ins
adc
sbb
add
pop
shl
jmp
sub
imul
pop
pop
and
cmp
or
cs
push
fcmovnb
daa
pop
es
pop
adc
adc
mov
adc
imul
push
movs
scas
ins
inc
(bad)
out
dec
cmp
or
cdq
push
adc
movs
xchg
pop
adc
or
mov
xchg
add
into
xchg
cdq
xor
fisubr
push
pusha
adc
das
xchg
or
adc
and
jmp
mov
or
or
jp
popa
push
cs
xchg
enter
push
loopne
nop
xchg
push
test
bound
mov
or
inc
cmp
adc
add
add
nop
or
into
pop
pop
push
test
or
stc
push
popa
imul
jbe
and
add
add
dec
cwde
push
or
push
jmp
xchg
adc
xor
dec
fdivr
out
sbb
iret
std
mov
add
dec
push
lahf
and
or
lock
or
push
add
mov
fld
xchg
pop
sub
xlat
push
and
and
and
jecxz
or
pusha
sub
pusha
pusha
xchg
imul
xor
and
cli
dec
dec
pop
adc
sub
push
mov
add
push
das
inc
jmp
dec
cmp
jns
xor
and
dec
test
and
sbb
jne
cwde
inc
call
or
push
mov
js
mov
out
outs
das
sub
sti
ss
add
loopne
adc
retf
fcomp
adc
or
jo
ss
cs
jle
xor
pop
ins
sbb
popf
mov
adc
addr16
adc
dec
xor
and
mov
loop
add
inc
sub
rcr
jp
fadd
push
jl
add
dec
or
je
xlat
push
(bad)
adc
sub
push
or
dec
pop
or
pop
and
adc
pop
movs
enter
or
ins
inc
shl
or
sub
ins
mov
cmc
sub
das
adc
daa
ins
xchg
and
add
daa
neg
adc
mov
push
add
sub
movs
ret
mov
add
add
mov
inc
pop
ror
or
sbb
sub
ds
inc
cli
jbe
fcmovbe
inc
mov
pusha
or
xor
sub
jnp
ror
addr16
pusha
lds
mov
ins
sbb
cmp
aad
jb
leave
cmp
jbe
test
mov
aad
add
pop
or
xor
cmp
add
xor
mov
push
pop
mov
fbstp
push
nop
add
add
rcl
xchg
xchg
or
nop
nop
inc
add
push
xchg
xchg
and
adc
dec
pop
test
shr
xchg
(bad)
add
add
add
dec
dec
mov
pop
add
inc
adc
loop
xor
nop
mov
sbb
rcr
sub
ds
pop
pop
mov
lock
push
add
push
fwait
add
push
movs
lods
inc
push
fwait
and
push
rcl
push
adc
stos
or
inc
add
sbb
stc
inc
add
bound
sahf
push
pop
popa
cmp
add
lock
or
cmp
mov
and
push
push
push
imul
xor
sbb
aad
mov
mov
xor
test
adc
xor
cmp
jl
add
xor
les
sub
add
xor
push
adc
jne
add
or
sbb
cli
repz
pop
sub
lods
rcl
adc
add
lods
call
adc
and
test
dec
bound
fnstcw
jb
mov
outs
daa
cmp
std
pop
xchg
cwde
xor
add
cmps
or
jbe
and
or
adc
or
add
inc
pop
add
and
ret
pop
add
jl
xchg
dec
xchg
lahf
dec
jp
cmc
and
pushf
ret
sbb
cmpxchg
leave
ins
dec
xor
(bad)
mov
and
shr
push
rol
or
es
pop
inc
ret
pop
jae
or
es
or
and
fs
out
add
add
push
inc
sahf
add
lods
and
sub
push
enter
mov
add
retf
mov
dec
sbb
push
add
les
mov
stc
xlat
inc
in
sub
and
dec
sbb
push
push
inc
xchg
add
in
shr
xchg
lea
dec
cmp
push
and
push
add
and
dec
mov
sub
daa
sbb
add
mov
aam
xchg
add
push
imul
mov
retf
adc
sub
(bad)
std
add
xor
jge
or
jg
mov
mov
or
lods
mov
or
pop
add
add
pushf
inc
rcr
mov
adc
sbb
xchg
addr16
adc
cmp
cmc
dec
cdq
inc
mov
jp
leave
lds
aad
lea
jno
fs
mov
icebp
loopne
sub
ins
or
or
sbb
xor
add
test
rcr
shl
cmps
ins
xor
jo
push
adc
add
nop
inc
add
cmp
push
push
(bad)
ins
dec
xor
mov
jg
sbb
sub
enter
sbb
or
daa
pop
test
cld
int
aam
arpl
das
sbb
cmp
dec
leave
add
and
mov
xor
push
xlat
retf
mov
fwait
or
xchg
sub
mov
mov
dec
jnp
adc
leave
aaa
push
and
pop
add
inc
lahf
xchg
add
outs
push
push
or
scas
xchg
push
je
add
or
xchg
add
sub
add
test
lds
test
cmc
sub
shl
cld
mov
inc
xchg
inc
sub
push
sbb
sti
mov
sub
push
jo
push
pop
popa
cdq
mov
or
out
call
sub
in
push
jne
add
es
or
push
dec
adc
pop
xchg
push
add
in
add
adc
movlps
push
mov
out
mov
es
adc
push
adc
adc
out
or
push
dec
outs
or
popa
sub
fs
sbb
push
and
pop
or
and
and
daa
and
or
mov
pusha
ss
adc
and
cmp
in
js
and
add
outs
push
dec
dec
and
jg
and
adc
and
adc
adc
daa
pop
mov
rcl
and
add
push
add
clc
cs
pop
sbb
test
loop
xchg
push
mov
or
das
retf
or
adc
or
pop
add
jmp
dec
push
jnp
mov
add
add
outs
or
test
pop
or
mov
mov
dec
dec
mov
and
jecxz
cmp
push
xchg
mov
pop
mov
jne
xor
and
push
adc
add
adc
(bad)
scas
mov
cli
bound
add
pop
cwde
mov
xor
retf
test
repz
mov
push
pop
shr
iret
or
dec
xor
or
pop
add
or
fs
pop
jg
and
sub
cmp
jle
adc
shl
sbb
lahf
push
ins
add
mov
call
push
int3
or
inc
or
shl
dec
jp
(bad)
sbb
cmp
sub
div
rol
sub
adc
xchg
mov
cmp
push
daa
movs
dec
jae
pop
push
jae
xchg
jo
cs
(bad)
push
clc
ja
sbb
sbb
push
inc
adc
pop
push
pop
dec
adc
adc
push
test
jl
mov
rcl
stc
stos
pop
sub
push
les
pop
rcr
data16
cs
sti
pop
ins
shl
ins
lods
adc
mov
pop
je
push
jne
aas
adc
pusha
inc
jo
ss
push
push
adc
add
inc
add
test
pop
push
and
pusha
push
dec
lea
adc
adc
mov
ins
je
mov
inc
pusha
jae
xor
inc
call
jmp
pop
add
jo
jb
sub
movs
in
pop
and
test
ss
xchg
mov
adc
mov
inc
inc
xchg
arpl
fadd
inc
pop
test
jbe
and
inc
dec
dec
push
pop
ret
cmp
jp
xchg
add
pop
popf
or
aad
mov
pop
pop
gs
inc
xchg
add
dec
out
in
or
test
mov
pushw
je
dec
xchg
jmp
inc
or
xor
(bad)
dec
bound
adc
ja
imul
add
push
xchg
shr
push
cmp
or
push
jmp
mov
in
add
mov
or
xchg
mov
ror
sub
cmc
push
pop
jp
movs
or
add
mov
dec
mov
inc
or
xchg
dec
or
dec
push
in
mov
push
hlt
sub
(bad)
sub
inc
xor
push
bound
mov
pusha
inc
pop
add
xchg
sbb
pop
movs
pop
test
push
adc
or
fcom
sub
sbb
inc
pusha
dec
or
jmp
dec
pop
mov
lock
adc
inc
imul
rep
add
(bad)
sub
hlt
enter
cs
cwde
in
mov
or
or
popf
inc
mov
loope
mov
push
jnp
dec
mov
addr16
sbb
mov
sub
cmp
cs
or
daa
ror
rol
adc
fimul
inc
bound
rcl
test
inc
fadd
adc
xor
jg
out
and
pop
and
xchg
sbb
pshufw
add
mov
or
pushf
hlt
pop
push
mov
sub
inc
sub
and
pop
cs
in
pusha
frstor
pop
adc
push
lea
hlt
dec
or
dec
mov
(bad)
push
jl
retf
inc
inc
cmp
inc
inc
sub
xor
add
gs
inc
xor
int3
adc
xor
mov
(bad)
and
(bad)
jle
add
bound
movs
dec
xchg
aaa
test
inc
fld
dec
daa
xor
sahf
lea
das
add
iret
xchg
cmp
add
lods
pop
(bad)
adc
shl
or
in
out
jb
or
add
or
test
add
add
imul
inc
inc
cmp
scas
or
jg
nop
outs
adc
xor
shl
test
adc
int3
push
daa
sti
and
jno
cmp
stc
sub
adc
sub
(bad)
fisubr
mov
pusha
call
inc
fbstp
ss
test
push
cwde
stos
xor
jmp
push
push
popa
(bad)
inc
test
adc
mov
mov
sub
sbb
shl
ss
jge
push
pop
in
mov
push
and
test
inc
cmps
inc
xchg
cmp
sbb
dec
outs
push
ins
mov
add
dec
adc
mov
cmp
les
adc
imul
test
outs
aaa
and
sbb
das
adc
call
xchg
pop
aam
add
add
dec
xor
inc
mov
fadd
mov
xchg
adc
movs
bound
push
and
nop
mov
and
adc
add
and
pop
push
sbb
xchg
dec
movs
ret
enter
pop
rcr
nop
push
xor
stos
jle
arpl
test
add
repz
test
or
sbb
mov
xchg
sub
mov
imul
imul
add
cmp
lea
stos
dec
jno
xchg
bound
xlat
les
and
ins
or
add
neg
jmp
mov
sbb
es
push
daa
jmp
movs
mul
sbb
rcl
pop
inc
rol
or
push
add
push
add
push
inc
adc
jmp
xor
add
add
or
push
les
int3
mov
rcl
mov
sahf
out
or
sbb
adc
enter
dec
add
adc
push
jo
into
push
or
sbb
cmp
add
cmps
stos
jle
(bad)
popf
cs
dec
jb
adc
push
dec
dec
mov
xor
jb
dec
sbb
dec
neg
xchg
add
inc
inc
loop
loope
in
adc
into
jg
mov
popa
mov
dec
mov
retf
adc
jmp
or
push
jmp
and
sub
or
stos
push
xchg
(bad)
xchg
and
jns
xchg
pop
jno
jmp
xchg
mov
mov
imul
in
rcl
xchg
fidiv
adc
dec
add
rcl
mov
push
add
push
add
add
dec
sahf
add
add
es
add
in
sbb
pop
or
pop
sub
cmp
add
shr
sub
shl
adc
push
inc
push
or
sbb
xor
sbb
jb
imul
and
push
push
shr
jnp
adc
mov
lods
dec
fld
sahf
adc
xor
dec
xor
mov
int3
mov
in
pop
or
loope
and
scas
cmp
adc
dec
and
in
push
cmp
dec
sub
test
repz
adc
xor
mov
add
jp
rcl
shl
push
xor
push
lods
fwait
xor
adc
push
aaa
mov
imul
rol
xor
adc
sub
push
xchg
mov
pop
dec
sbb
je
popa
dec
outs
pop
add
adc
or
push
mov
push
add
pop
inc
addr16
jmp
xor
retf
scas
push
add
xor
pop
add
mov
push
aaa
push
dec
jmp
ins
adc
add
imul
les
shr
push
xchg
mov
and
adc
repnz
cwde
adc
cdq
ins
sub
xchg
xchg
inc
or
outs
xor
xor
sub
inc
je
pop
(bad)
adc
add
mov
and
dec
mov
jns
loopne
add
push
fs
push
inc
rol
jbe
rol
push
repz
mov
fcom
dec
pop
fild
mov
ins
adc
mov
fiadd
or
xor
adc
push
mov
cmps
and
mov
xchg
arpl
add
aaa
push
lods
gs
dec
aaa
xlat
xor
out
cmp
inc
or
inc
push
movs
fsub
adc
inc
mov
xchg
dec
push
mov
(bad)
movs
test
jle
add
fld
add
and
cmp
loopne
xchg
stos
dec
adc
sub
mov
add
or
pop
mov
ret
adc
sub
cmp
lar
xor
repz
or
add
cmps
into
xor
push
xchg
add
or
adc
sqrtps
inc
add
or
xchg
movs
mov
push
out
mov
push
add
lds
cdq
sub
and
dec
lods
or
mov
bound
mov
imul
adc
aam
pusha
push
and
inc
ror
sbb
and
mov
addr16
lock
nop
sar
outs
fiadd
and
loope
les
jle
mov
mov
popf
(bad)
aaa
or
mov
jne
scas
ds
adc
dec
js
test
push
and
cmps
cmp
or
push
test
push
outs
xchg
js
daa
and
mov
aaa
inc
lea
push
adc
shr
push
pop
ds
mov
lock
aam
ins
dec
lods
mov
mov
loope
add
data16
or
rol
or
dec
cmp
push
or
ret
enter
adc
add
xor
add
pusha
cmps
sub
movs
adc
dec
xor
and
loope
dec
and
and
sbb
pop
push
or
cwde
and
das
daa
push
pop
mov
inc
ins
push
and
shl
popf
cmp
hlt
mov
push
or
sub
jo
(bad)
rol
add
mov
retf
or
cwde
adc
movs
xchg
or
inc
inc
lods
push
xchg
xchg
ror
fld
mov
sub
fwait
cmps
and
ret
sub
xor
xor
add
adc
xlat
pop
dec
xchg
inc
pop
call
shl
das
dec
add
loopne
shl
ins
and
and
int3
xchg
inc
or
add
add
add
addr16
xor
fild
push
popf
test
sbb
pop
inc
dec
add
bound
movs
lods
mov
xchg
les
xchg
and
int
ret
jge
imul
or
push
xchg
xchg
add
push
push
or
cmp
mov
aas
imul
or
shr
push
retf
mov
les
or
xchg
nop
shl
xchg
dec
xchg
cmp
sub
push
data16
gs
dec
add
or
cmp
pop
xor
inc
jmp
add
jbe
xor
and
xchg
and
popf
add
jnp
int
or
hlt
add
cwde
test
inc
add
sar
xchg
dec
add
ret
les
jno
pop
xor
or
sub
test
gs
dec
add
loop
rcr
stos
push
js
inc
inc
loope
and
push
push
xchg
xor
cmp
xchg
rcl
js
jno
push
inc
mov
adc
add
jnp
rcl
icebp
and
popa
cmp
push
push
or
dec
int3
sub
jmp
popa
dec
pop
loope
shr
and
xchg
pop
xor
shl
or
and
lock
sub
loope
xor
add
sbb
jns
mov
pop
sbb
ds
popf
push
pop
and
lahf
inc
mov
test
or
add
cmps
dec
imul
or
int3
push
and
jbe
mov
fld
lds
cmp
pop
sbb
lods
retf
stos
mov
jg
fs
pop
sbb
inc
xor
or
or
mov
in
bound
jo
sbb
jge
popa
jmp
and
movs
mov
push
sbb
call
cmp
jae
or
ins
inc
sub
gs
ins
arpl
loop
add
and
data16
sbb
jae
jno
xor
add
adc
test
in
cmc
mov
cmc
sbb
sub
xor
daa
cmc
or
js
enter
cmp
aas
add
jg
jecxz
fisub
pop
mov
mov
add
movs
pop
mov
mov
mov
mov
loopne
or
loopne
jmp
push
mov
pop
push
sbb
add
jno
adc
mov
mov
inc
pop
mov
xor
add
sub
movs
mov
sub
pusha
test
jb
data16
jne
and
mov
dec
lods
jmp
mov
rcl
f2xm1
xchg
pop
xor
popa
mov
fld
xchg
sub
leave
push
xor
nop
add
test
add
inc
and
call
jns
xchg
es
push
mov
add
in
mov
xchg
jbe
test
cmps
pop
add
and
sbb
push
jmp
dec
dec
add
or
dec
push
das
rol
push
add
sbb
jo
xchg
scas
pop
rol
arpl
sub
add
sub
mov
or
movups
sub
sbb
or
push
or
(bad)
lea
xchg
push
in
or
test
sbb
aad
es
pop
adc
and
gs
sbb
aad
loope
in
sbb
sbb
sti
loopne
sbb
sbb
push
sbb
inc
sbb
sbb
cmp
xor
ret
and
test
aas
dec
adc
in
pusha
and
stos
ins
push
and
call
add
add
ins
xor
or
sbb
mov
mov
sub
add
mov
imul
ror
add
lea
mov
xchg
cmc
and
pop
daa
lods
sub
sub
pop
sub
push
pop
(bad)
add
xor
fwait
dec
mov
outs
lea
sbb
and
adc
shr
and
and
and
test
test
pop
aaa
(bad)
bound
add
test
xor
push
scas
or
rcr
js
pusha
cli
sub
push
ins
bound
jnp
jmp
scas
pop
add
out
mov
lahf
mov
inc
inc
adc
or
xchg
pop
in
and
pop
or
adc
add
ss
push
sbb
sti
adc
loopne
lods
fwait
adc
xchg
(bad)
mov
or
mov
pop
inc
add
or
mov
xor
je
xchg
push
push
fldenv
push
aaa
push
dec
sbb
dec
sbb
imul
add
xor
inc
sbb
or
xchg
imul
ror
lahf
adc
add
and
mov
and
add
pop
xchg
or
push
ins
mov
xor
test
pop
inc
push
pop
or
inc
add
cmp
sub
mov
stos
push
xchg
sub
add
or
cmps
xor
ret
mov
rol
fisub
lock
sbb
or
or
mov
inc
data16
inc
xor
jae
and
lahf
movs
lods
les
sbb
cmps
dec
mov
xor
shl
add
or
xor
dec
fnstenv
clc
add
test
mov
push
dec
push
lahf
test
mov
sub
xchg
mov
jecxz
aam
add
mov
ds
sub
pop
add
mov
add
inc
lds
jmp
les
mov
inc
mov
adc
pop
or
xor
pop
or
add
xchg
mov
add
or
je
(bad)
mov
and
adc
test
adc
es
adc
imul
ret
fcomp
(bad)
push
jmp
jge
cmp
mov
sub
addr16
add
ret
cmps
pop
aas
inc
add
adc
or
xchg
xchg
rol
call
daa
jns
and
dec
or
and
add
js
fs
xchg
aas
out
mov
dec
xchg
adc
sbb
or
xchg
dec
push
or
fistp
inc
rcl
out
push
or
js
nop
adc
xchg
inc
adc
sbb
sti
inc
popa
push
bound
add
(bad)
mov
xor
mov
and
retf
mov
jb
fndisi(8087
cmps
shl
push
dec
fnstenv
in
and
sbb
jge
outs
outs
es
leave
inc
add
test
test
aad
push
mov
addr16
sub
jl
mov
jae
leave
pop
nop
jbe
shl
adc
mov
sbb
mov
or
pop
push
add
inc
out
sti
add
sbb
fbstp
mov
fwait
sub
push
retf
add
retf
js
or
in
pop
icebp
mov
add
addr16
push
sbb
fistp
or
inc
mov
xchg
jl
add
sbb
cmp
es
pop
push
(bad)
xor
mov
inc
jbe
cmc
jbe
movs
test
sbb
out
scas
or
adc
jg
and
or
push
sahf
jge
jecxz
and
sub
xchg
popf
dec
or
cdq
test
enter
dec
pusha
adc
or
cs
pop
inc
adc
inc
jo
gs
push
mov
dec
dec
add
pop
and
mov
test
mov
dec
rcr
cmp
push
push
js
sub
add
mov
add
out
cmc
jg
push
out
ror
xchg
and
push
pop
and
bound
adc
sub
xchg
outs
ss
adc
sahf
and
push
rcr
dec
push
mov
push
pop
xchg
(bad)
and
mov
and
mov
mov
mov
mov
pop
add
dec
mov
xor
pop
fiadd
cmp
sub
ins
inc
or
mov
or
inc
pop
add
sbb
xor
or
fs
dec
repnz
or
or
or
adc
add
or
dec
and
sbb
cmp
lods
push
or
xor
cmp
mov
sub
cmps
xor
adc
into
xchg
xchg
push
pop
in
add
les
push
retf
in
in
adc
and
push
(bad)
or
das
idiv
inc
ss
es
cmp
dec
and
adc
jecxz
add
sub
iret
aaa
add
fldenv
push
in
add
(bad)
xchg
mov
(bad)
jb
mov
pop
and
and
and
push
xor
add
sub
or
daa
cmp
xlat
xor
jmp
or
sub
jg
or
or
xor
fsub
cmp
or
push
repz
xchg
dec
mov
add
xchg
jns
jae
shr
ds
cmp
add
fnstcw
cmp
adc
pop
mov
mov
sub
add
or
ja
outs
mov
push
xor
and
add
nop
ins
outs
mov
pusha
mov
inc
inc
inc
test
les
inc
hlt
movs
loope
jg
add
mov
aaa
sub
add
ja
add
je
pop
or
loop
sbb
or
or
bound
retf
and
jae
dec
sar
test
js
sub
and
inc
in
adc
inc
sub
or
sti
xchg
gs
loopne
xchg
pop
xchg
cmp
(bad)
rol
jo
mov
jmp
ret
inc
sub
inc
inc
push
adc
adc
and
dec
in
xchg
scas
or
add
jl
sbb
and
icebp
les
ja
mov
adc
xchg
sub
pop
pop
rcl
sbb
push
repnz
add
or
and
sub
(bad)
test
add
je
push
inc
add
xchg
mov
fiadd
xchg
std
mov
call
cmp
mov
xchg
pop
adc
sbb
push
xor
or
test
sub
lock
repz
jae
femms
add
adc
adc
sbb
iret
adc
outs
sub
pop
jl
push
sbb
iret
repz
sbb
outs
mov
dec
xor
push
push
adc
add
adc
add
and
add
add
add
cmp
xchg
dec
add
lock
rol
sub
stos
xor
adc
sbb
push
in
mov
xor
dec
imul
shld
int
add
fiadd
outs
sar
and
or
test
sub
iret
stc
mov
sbb
pop
lahf
jb
enter
or
cmp
leave
ja
xadd
outs
fistp
(bad)
pusha
xor
or
mov
mov
gs
mov
add
ret
sbb
stos
xchg
ins
inc
inc
dec
xlat
(bad)
push
xchg
mov
mov
xchg
inc
pop
es
push
stc
mov
fdiv
or
sbb
inc
jmp
or
inc
adc
xchg
pop
mov
add
xchg
mov
sbb
sbb
into
sbb
xor
inc
stos
dec
repnz
fwait
pop
xchg
inc
ins
add
into
inc
sub
push
jbe
cmp
inc
sbb
pusha
retf
add
sbb
into
push
push
push
xchg
test
out
jg
dec
push
push
jl
sub
mov
retf
or
(bad)
or
add
es
or
imul
dec
sbb
push
add
or
add
push
jmp
inc
add
xchg
mov
inc
xor
add
fwait
call
nop
xchg
dec
inc
enter
cmp
sbb
jmp
cmps
add
inc
push
and
inc
leave
lds
in
cmp
cmp
adc
nop
dec
sub
mov
lds
pusha
xchg
out
scas
bound
int3
nop
int3
fld
cmp
add
cwde
lea
loopne
inc
hlt
ja
cmp
daa
add
add
mov
sahf
add
test
inc
mov
das
cmp
pusha
pop
add
inc
bound
pop
ret
push
test
sub
leave
repnz
inc
fldcw
lea
push
dec
xchg
sub
sub
retf
xchg
sahf
out
push
or
push
or
inc
aas
inc
ins
mov
aaa
fld
jge
and
adc
sbb
fimul
sbb
jns
out
sbb
out
sahf
out
and
and
sahf
daa
sub
sub
repz
xchg
add
xor
or
xor
mov
and
push
call
add
(bad)
adc
rcl
sbb
and
mov
dec
add
sbb
push
adc
sub
sbb
pop
add
fistp
test
push
or
shl
loopne
xchg
sub
add
daa
sbb
in
xchg
das
ins
loop
push
cdq
mov
add
bound
dec
cmp
(bad)
ins
lods
nop
les
and
sbb
pop
mov
fnstcw
sbb
aam
cmp
cmp
das
sbb
stos
jp
popa
jmp
aad
loope
push
dec
sbb
mov
sbb
add
and
jbe
inc
xchg
jmp
pusha
or
sbb
inc
jmp
add
sub
dec
pop
sbb
jecxz
adc
pop
xlat
push
sub
lods
jne
gs
xchg
fidiv
loope
sub
sub
sbb
inc
inc
sub
cmp
push
and
pop
mov
sub
push
jo
aad
jmp
dec
rcr
mov
and
pop
sbb
stos
dec
sub
sbb
adc
push
push
mov
rcl
xor
pop
lds
pop
shl
test
add
mov
mov
add
xor
out
sahf
ja
push
add
push
add
or
or
push
or
mov
dec
add
adc
add
push
xchg
or
int
lods
cmp
inc
pop
adc
or
xchg
add
mov
push
cdq
push
fwait
mov
mov
rcr
adc
pop
sbb
and
or
fs
or
pop
pop
das
cmp
jge
add
and
push
sub
fimul
daa
loope
dec
shl
jno
sub
pop
and
jecxz
push
sub
add
push
sar
sbb
sub
or
cs
cmp
pop
movs
test
ret
enter
mov
and
sub
pop
or
xchg
and
add
mov
pusha
data16
mov
(bad)
in
mov
imul
dec
dec
jb
or
mov
outs
fsubr
sbb
ret
pop
or
dec
sub
xor
push
cld
cmp
adc
cmp
pushf
mov
into
and
sub
test
sub
sub
or
add
add
imul
sbb
sub
cli
push
or
add
std
minps
lods
movs
aas
dec
adc
add
dec
dec
push
adc
pop
add
add
icebp
sbb
outs
add
add
in
inc
cmp
sub
ja
cmp
or
pop
sub
rcl
xchg
or
adc
nop
pop
inc
dec
dec
inc
jmp
shr
adc
sbb
rol
fsubr
ficom
inc
add
mov
clc
ret
inc
or
mov
add
adc
xchg
daa
inc
mov
(bad)
sub
mov
push
xor
push
push
daa
inc
dec
stos
dec
mov
mov
push
movs
dec
add
pop
and
(bad)
dec
fisub
add
mov
pop
mov
mov
add
sub
movs
push
push
sub
rcl
pushf
test
out
sbb
mov
test
or
mov
lea
jecxz
mov
xor
call
push
adc
mov
in
and
pusha
scas
rol
push
push
mov
push
dec
pop
rcr
and
das
jmp
mov
pusha
mov
push
pop
cmp
rcr
das
bound
ins
mov
add
retf
push
adc
pusha
push
sbb
dec
data16
pop
jmp
mov
les
push
cs
add
inc
sub
arpl
mov
hlt
mov
sar
push
or
add
lock
mov
std
jg
sub
fld
push
inc
adc
xor
shl
test
jb
pop
daa
pop
or
rcr
push
sub
sub
mov
popa
adc
cwde
and
in
xor
sub
dec
loopne
es
data16
pop
and
adc
adc
and
adc
and
adc
add
js
cmps
cs
ror
add
outs
push
sub
add
add
xor
add
adc
sbb
sub
fs
add
dec
jmp
ret
push
ret
adc
add
sbb
or
or
fiadd
es
test
pusha
retf
jmp
leave
inc
repz
js
push
jmp
dec
push
or
mov
xor
sbb
loop
test
adc
sbb
(bad)
mov
sbb
push
ror
inc
sub
pop
inc
mov
xchg
movs
dec
leave
sub
ds
inc
cmp
test
add
push
add
xor
sbb
fbld
sysenter
popf
add
adc
dec
dec
fsub
or
test
imul
jmp
add
bound
dec
inc
or
test
xor
cli
lds
inc
dec
inc
sub
pop
or
out
movs
inc
or
mov
mov
pop
sub
js
jmp
movs
inc
add
jmp
jmp
xor
movs
mov
lods
add
lea
pop
jnp
sub
loop
mov
dec
push
adc
std
ja
fs
jb
push
add
popf
push
fiadd
add
ss
test
inc
inc
add
add
or
xor
mov
or
bound
push
rol
mov
jge
xor
sbb
mov
call
adc
inc
(bad)
and
or
pop
cmp
adc
mov
imul
pop
cmc
cmps
and
add
xor
and
and
jne
xor
shl
xchg
mov
rol
cs
and
inc
adc
repnz
or
sbb
cmp
push
fidivr
add
gs
test
adc
ds
sbb
lahf
mov
or
sub
pop
push
loope
xchg
sub
jnp
xor
sub
mov
adc
mov
jl
int
xchg
and
movs
adc
cli
add
adc
adc
daa
adc
push
scas
adc
adc
dec
adc
ja
add
add
data16
add
push
sub
cmp
or
out
imul
pop
adc
std
pop
or
adc
cmps
pop
push
outs
adc
adc
(bad)
mov
xchg
pop
adc
adc
fidiv
pop
pop
adc
push
popa
or
push
add
jg
fisub
mov
or
dec
or
adc
stos
mov
sub
add
add
iret
rol
or
addr16
xchg
push
sub
push
sbb
loope
sub
imul
rcl
stos
cwde
push
sub
add
mov
sar
cmp
and
ror
or
or
xchg
sub
imul
es
movs
jge
and
mov
dec
xor
rcr
clc
(bad)
stc
ss
dec
mov
sbb
sbb
div
inc
dec
shl
and
sub
add
dec
ss
es
or
cmp
cmc
push
push
or
or
cmp
sub
adc
add
cmp
or
js
cmp
and
jne
cmp
or
adc
push
xor
dec
pop
scas
xor
adc
or
xor
xchg
pushf
aaa
adc
repnz
(bad)
lods
je
cs
adc
das
ss
sub
pop
iret
and
and
and
jnp
cs
push
and
push
or
lahf
out
daa
adc
into
push
mov
sub
sub
sub
or
mov
sub
inc
mov
sbb
das
push
cmp
cs
cmp
pop
xor
xor
sbb
dec
mov
or
sbb
nop
and
xor
xor
or
sbb
cmp
and
sbb
mov
cmp
xor
loop
add
into
jns
cmp
gs
pop
repnz
aas
dec
mov
xchg
sbb
inc
or
inc
inc
cmp
repz
inc
dec
inc
dec
cmps
(bad)
repz
dec
dec
or
inc
push
dec
in
jns
sahf
inc
dec
dec
inc
push
aas
inc
test
inc
sbb
xor
(bad)
sbb
sbb
sbb
loopne
shr
push
sbb
push
push
fldcw
rol
pop
dec
repz
pushf
push
xchg
sbb
ins
stc
pop
pop
outs
pop
add
pop
pop
pop
cmp
mov
mov
popa
pusha
arpl
loopne
repz
or
push
and
and
and
mov
and
adc
push
ja
pop
aaa
dec
or
and
and
sub
or
mov
mul
add
push
push
push
jmp
add
and
and
cmp
div
and
and
or
xchg
push
jo
idiv
repz
je
add
jne
ja
ds
adc
jbe
js
and
sti
pop
fwait
les
and
add
inc
(bad)
jns
jl
xor
and
imul
push
jge
and
fdivr
pop
jbe
adc
add
inc
jae
scas
and
and
mov
and
outs
add
sub
rcr
outs
xor
test
(bad)
mov
dec
adc
and
call
inc
cwde
pop
cs
mov
cmovge
pop
sbb
mov
lods
arpl
inc
sbb
and
jae
xchg
dec
pusha
add
dec
dec
mov
jno
fwait
add
jge
sub
inc
sub
sub
xor
(bad)
pop
jb
mov
(bad)
lahf
push
sub
stos
ins
adc
dec
rcl
retf
add
rol
bound
cmp
inc
ins
sub
push
jecxz
inc
jg
xchg
add
cdq
icebp
push
fmul
push
sub
add
sar
pusha
and
push
cmp
dec
jae
xchg
xor
cmps
and
xchg
cs
or
dec
add
ds
dec
lods
pop
mov
xchg
pusha
rcl
add
push
inc
in
sub
stos
xor
add
fmul
inc
add
dec
aad
inc
mov
fimul
aas
and
add
pop
lahf
mov
push
lods
std
mov
(bad)
je
mov
or
fdivr
adc
dec
das
add
xor
rol
jae
dec
test
push
mov
jae
sub
sbb
nop
xor
add
arpl
cwde
mov
pop
and
sub
enter
fld
xor
pop
mov
sub
xchg
inc
call
mov
lock
mov
or
mov
jge
sbb
or
add
daa
es
pop
cs
adc
sub
lds
daa
inc
xchg
add
mov
push
adc
push
sub
lahf
mov
sub
push
inc
dec
xor
add
std
lods
pop
mov
xchg
pop
ins
stos
mov
aas
cmp
(bad)
mov
add
sbb
and
sbb
sub
hlt
and
jg
movs
add
adc
add
add
ja
cmps
add
inc
dec
jmp
add
sub
jno
ret
mov
add
aam
pop
xchg
add
inc
xchg
loopne
dec
call
nop
stos
inc
add
loopne
add
or
shl
jl
or
cwde
(bad)
in
add
inc
mov
adc
pop
stc
mov
mov
rcl
cmovnp
popa
mov
sahf
push
add
mov
jge
sub
adc
add
(bad)
sbb
adc
mov
xchg
and
xchg
sbb
push
sbb
aas
add
test
xchg
icebp
jecxz
pushw
loope
fimul
cmp
sbb
out
shr
ret
daa
popa
and
outs
inc
add
cwde
xor
pop
jbe
push
movs
pop
pop
aas
sbb
cwde
inc
sbb
movs
or
and
add
mov
rol
push
xchg
imul
sbb
push
neg
or
mov
adc
and
xlat
or
push
adc
xor
sbb
mov
fld
in
or
add
das
retf
or
ret
pusha
dec
iret
cmps
adc
adc
add
call
xor
mov
xchg
mov
jne
nop
xor
push
push
(bad)
xchg
cmp
xor
push
or
iret
les
or
push
sbb
jge
pop
ret
add
jno
add
icebp
(bad)
and
push
mov
and
push
aaa
or
aam
inc
ds
rcr
inc
out
sub
sbb
sbb
push
xor
bound
loop
sbb
icebp
pop
sub
aas
push
sub
jo
adc
in
inc
add
add
xchg
dec
cmps
add
aaa
jns
xor
or
push
leave
adc
cli
or
or
sub
add
or
add
jecxz
dec
movs
stc
addr16
add
add
xor
add
dec
int
xor
add
xor
add
adc
mov
ja
push
add
pop
test
or
and
stos
add
sbb
dec
add
add
sbb
cmps
(bad)
cmp
pop
pop
add
xor
inc
push
dec
sub
push
sbb
dec
xor
mov
int
add
inc
or
xchg
mov
or
jns
mov
adc
add
dec
stos
add
push
cli
add
or
les
add
in
adc
fwait
ds
ds
pop
or
add
imul
inc
cmps
push
add
imul
mov
xchg
and
mov
sbb
imul
add
in
dec
sbb
push
add
repz
add
add
add
call
or
cmp
or
or
add
jns
or
or
clc
jns
es
jb
movups
int
mov
popf
push
adc
add
scas
push
push
mov
adc
sub
push
add
push
cmc
mov
push
sbb
imul
add
push
xchg
add
cmp
dec
repz
and
or
mov
push
adc
and
sahf
mul
push
repz
push
push
sub
leave
leave
repz
adc
sub
xchg
aam
cmps
je
and
and
test
push
xor
xor
xor
mov
cmp
(bad)
cmp
push
cmp
cmp
cmp
repz
ds
inc
iret
repz
inc
inc
inc
inc
inc
inc
cmp
repz
dec
dec
dec
dec
inc
cmp
repz
dec
dec
dec
push
xor
and
push
outs
push
push
loop
jnp
cs
and
cdq
sub
pop
pop
cs
mov
push
pop
pop
fdivp
cs
popa
outs
bound
fs
ja
jnp
ds
cmp
repz
push
ins
ins
xchg
outs
out
pop
pop
(bad)
outs
push
jo
push
add
mov
xchg
je
jne
jbe
cmp
push
cmp
jne
ds
jle
xchg
jbe
jns
(bad)
add
add
(bad)
push
jg
add
add
xchg
cmp
xrelease
inc
inc
pop
jb
cld
lea
and
(bad)
push
add
add
dec
and
dec
call
push
xchg
leave
mov
mov
pop
or
add
xor
shr
mov
or
popa
frstor
test
mov
sbb
jmp
or
inc
stos
pop
push
xor
clc
dec
sub
fcomp
fcmovnbe
push
rcl
cmovb
call
jmp
push
add
push
xor
lock
cmp
adc
adc
mov
mov
daa
lods
dec
xchg
ret
sbb
test
enter
jae
sbb
imul
xchg
test
push
mov
pusha
fadd
and
push
and
cs
pop
mov
inc
and
les
sub
addr16
xchg
sub
or
test
(bad)
popf
sub
cmp
mul
mov
mov
(bad)
test
mov
jl
pop
movs
sbb
push
jg
add
loope
arpl
and
push
add
or
add
(bad)
lods
mov
mov
in
ss
pop
sbb
out
cwde
(bad)
pop
rcr
dec
dec
pop
push
fsubr
js
mov
inc
push
pop
or
lahf
imul
imul
and
pusha
aaa
scas
dec
pop
inc
iret
scas
jbe
inc
and
ret
je
xor
rcr
sub
mov
and
xchg
adc
mov
cmp
ret
dec
outs
inc
cmps
dec
push
jge
mov
inc
add
mov
jnp
adc
pop
(bad)
cmp
sbb
sbb
adc
icebp
addr16
pop
jmp
mov
mov
mov
(bad)
mov
fdiv
aad
add
inc
push
femms
sub
adc
xor
fist
sub
push
or
sbb
or
pop
pop
or
adc
rol
sbb
sub
ss
test
dec
mov
xor
push
mov
rcr
cmps
adc
or
in
mov
add
inc
les
or
or
add
mov
sub
sub
xor
cmps
xchg
mov
or
dec
dec
xchg
mov
cld
aas
inc
push
ins
jb
sbb
aaa
retf
jb
nop
mov
cmp
mov
adc
add
sub
and
adc
pop
push
test
xchg
sbb
push
inc
popa
jne
xor
loope
add
ss
inc
dec
mov
dec
cmp
or
shl
ins
or
push
fdivr
mov
retf
xor
pop
jp
mov
jge
int3
add
mov
cmp
lods
xchg
sbb
pop
push
sbb
in
and
and
xchg
daa
ror
adc
mov
pop
adc
mov
adc
and
mov
dec
mov
adc
push
mov
popf
inc
jne
adc
adc
int
sbb
inc
shl
add
shr
pop
inc
adc
inc
adc
pop
out
retf
or
xchg
push
adc
rcl
das
adc
pusha
push
xchg
icebp
xor
dec
inc
outs
pop
mov
push
inc
call
jb
and
pop
inc
push
int3
jg
imul
adc
inc
dec
push
(bad)
jle
xchg
pop
or
xor
daa
fmul
cli
addr16
jne
daa
xchg
sub
(bad)
pop
pop
xor
cs
sbb
les
jns
mov
xor
xor
out
icebp
pop
add
inc
push
cwde
daa
and
or
mov
imul
sbb
add
adc
mov
lds
pop
mov
fisub
(bad)
js
stc
dec
outs
add
pop
sbb
or
jge
add
adc
sbb
cwde
add
adc
or
dec
enter
lahf
or
mov
dec
sub
bound
pop
mov
xchg
cmps
mov
add
out
adc
repz
imul
rol
les
and
xchg
pop
inc
push
into
jle
test
daa
test
fwait
call
add
mov
push
arpl
add
jns
leave
sbb
fmulp
inc
or
push
icebp
and
push
pop
inc
adc
sub
xchg
add
add
fnstcw
adc
inc
mov
cli
loope
add
xor
imul
dec
ret
sbb
ss
xlat
adc
add
sub
call
aaa
add
sbb
add
xchg
rol
or
push
or
dec
cmp
pop
ss
cli
es
iret
icebp
loopne
test
adc
sub
push
cmps
pop
ret
pop
out
add
and
and
dec
inc
popf
mov
adc
mov
mov
mov
xchg
mov
add
add
sub
add
adc
push
add
mov
(bad)
inc
popa
mov
frstor
push
add
xchg
shl
test
jbe
add
lea
push
fwait
sbb
adc
pop
sbb
aad
bnd
sbb
add
or
and
adc
mov
jo
mov
or
shl
pusha
and
rcl
push
inc
push
daa
add
cmp
push
pop
cmp
cdq
add
add
or
ins
inc
out
pop
xchg
clc
ror
setb
pop
fs
jmp
add
dec
jecxz
mov
test
adc
cmp
add
add
pop
adc
pop
and
rol
fs
je
pop
popf
cmp
add
adc
adc
adc
loopne
fiadd
jle
adc
adc
data16
gs
adc
xchg
pop
push
test
xor
inc
push
sbb
inc
xor
or
and
sti
or
div
int3
cmps
(bad)
les
mov
ss
ins
sbb
adc
dec
push
push
jne
push
xchg
sbb
int
or
and
lea
(bad)
xchg
loope
add
adc
mov
inc
shr
pop
add
push
or
and
and
leave
outs
add
sbb
adc
add
add
dec
pusha
rol
adc
inc
push
les
xchg
or
jmp
movs
mov
call
add
or
ds
jp
sahf
out
movs
push
daa
daa
and
daa
daa
fwait
int
jge
pop
cmp
cmp
cmp
cmp
mov
ss
cmp
pop
sbb
or
lds
sub
xchg
push
push
arpl
cli
sbb
stc
lock
es
jnp
add
daa
jbe
inc
call
sub
jmp
xchg
dec
cmp
outs
adc
sub
or
adc
pop
data16
shl
add
add
or
jns
add
or
push
rcl
push
add
add
imul
pop
ja
or
push
cmp
pop
inc
xor
in
adc
adc
mov
rcr
add
inc
push
loop
add
pop
dec
jp
scas
add
xchg
stos
push
jge
pop
dec
and
std
icebp
sbb
or
test
adc
arpl
cmc
add
movs
or
jl
add
adc
call
or
adc
push
sub
mov
push
ficom
add
add
jo
adc
mov
sar
movs
dec
add
mov
push
jle
push
jae
dec
or
mov
or
xchg
pop
and
jo
add
(bad)
movs
fimul
add
cmp
add
xchg
arpl
adc
ret
push
arpl
adc
add
xchg
dec
xor
sub
test
ss
push
add
pusha
xchg
arpl
add
adc
or
pusha
fs
push
es
push
push
jo
adc
add
ss
jno
fsin
cmp
adc
cmp
adc
pop
or
or
dec
or
pusha
cmps
add
mov
push
pop
and
daa
jnp
pop
xor
popa
inc
bound
jg
(bad)
in
inc
fs
jp
inc
addr16
push
dec
imul
outs
dec
outs
push
jo
jno
sar
push
jb
jae
je
jne
jbe
ja
js
jns
jp
push
sbb
xor
loop
dec
and
in
sbb
or
lods
sub
sub
sub
outs
test
sub
add
mov
sub
int
enter
dec
cdq
(bad)
fimul
or
stos
inc
push
or
xlat
pop
add
mov
adc
sub
dec
add
mov
hlt
ja
push
add
push
xchg
and
in
mov
cmp
xor
cmp
adc
out
data16
and
push
mov
or
add
stos
sbb
fwait
hlt
jo
add
mov
xor
add
or
in
out
adc
pop
add
or
inc
sbb
add
and
pop
lock
cmp
jo
jnp
out
push
ror
add
inc
mov
cmp
xor
push
adc
iret
repz
loopne
push
shl
inc
push
bound
shl
xchg
out
mov
sub
sti
movs
xchg
jo
bound
pop
retf
push
lods
aad
sbb
push
xchg
cmps
mov
arpl
pop
adc
mov
fdivr
ror
aam
sbb
aas
aam
aam
and
imul
xor
pop
inc
push
push
std
pop
jle
push
enter
dec
cmps
jge
push
hlt
inc
add
adc
ret
mov
nop
dec
push
repnz
push
test
dec
cmp
call
call
jmp
sti
rol
fimul
pop
aaa
pop
add
mov
daa
push
sar
jmp
xchg
dec
outs
jecxz
or
div
pop
mov
(bad)
dec
fwait
lea
and
mov
out
movs
in
push
sub
lock
sbb
jl
(bad)
(bad)
(bad)
aas
in
pushf
cmp
repz
fs
(bad)
jg
outs
popf
jae
cmp
jg
jp
mov
(bad)
(bad)
fcompp
enter
call
repz
enter
addr16
stos
fsubr
xor
and
(bad)
(bad)
call
dec
es
jb
dec
sub
bound
mov
out
or
outs
push
call
loop
sub
sub
dec
popa
rcl
adc
popf
shl
(bad)
(bad)
(bad)
call
push
out
cmc
add
ins
inc
lods
xchg
xor
(bad)
(bad)
retf
push
jne
xor
daa
adc
push
pop
cdq
cmp
leave
push
adc
cs
ins
push
(bad)
(bad)
(bad)
call
inc
xor
inc
fidiv
dec
dec
xchg
sbb
into
test
cld
shl
fnstsw
push
loop
(bad)
(bad)
(bad)
(bad)
mov
mov
dec
out
in
sti
js
inc
dec
hlt
and
xor
dec
pusha
ins
dec
in
cdq
(bad)
(bad)
(bad)
jmp
std
add
(bad)
dec
and
test
(bad)
je
test
jo
xor
sbb
inc
sbb
mov
imul
inc
xor
dec
jg
sub
cwde
xchg
dec
pop
mov
mov
scas
fnsave
sahf
inc
rcl
retf
jmp
into
push
arpl
ja
add
sbb
(bad)
(bad)
inc
mov
adc
xchg
ins
dec
xchg
(bad)
pop
mov
(bad)
stc
pop
(bad)
arpl
ss
(bad)
(bad)
jmp
cmp
out
(bad)
mov
jmp
add
cmp
(bad)
repnz
push
mov
dec
jbe
fdivrp
push
fnstenv
popf
fadd
repnz
ja
scas
movs
je
cmps
sbb
dec
xchg
stos
and
pop
mov
movs
shl
pop
dec
jne
xchg
mov
adc
dec
sbb
dec
(bad)
(bad)
(bad)
call
loopne
adc
mov
int
inc
out
mov
cmp
mov
inc
loopne
adc
(bad)
inc
pop
jge
push
pop
cs
sub
mul
call
ds
(bad)
(bad)
jmp
xor
mov
mov
inc
and
mov
in
neg
ret
lods
frstor
(bad)
jmp
ss
cmp
xor
ds
inc
mov
mov
loopne
xchg
pusha
jnp
or
(bad)
jmp
pop
sbb
mov
outs
mov
popa
and
aas
loopne
push
idiv
(bad)
(bad)
(bad)
call
xchg
fcomi
pushf
loop
jnp
test
rcr
xchg
push
imul
mov
or
mov
inc
jns
dec
jnp
jge
jle
xlat
mov
fstp
pop
hlt
mov
mov
pop
add
xchg
lock
jge
fs
arpl
test
inc
jb
daa
in
inc
fdivr
call
sub
bound
push
aas
sbb
and
enter
add
repz
adc
push
pop
icebp
rcr
test
push
or
and
nop
or
enter
(bad)
ror
sahf
nop
adc
call
adc
pop
shr
mov
in
rol
mov
je
pop
and
in
push
dec
pop
cmp
or
cmp
pusha
(bad)
cmc
inc
enter
enter
daa
in
dec
adc
pop
shr
jmp
cwde
(bad)
enter
pop
cdq
dec
nop
adc
jne
pop
push
inc
clc
cmp
mov
aas
push
enter
adc
pop
rcl
adc
enter
or
push
inc
inc
fdivr
pushf
nop
pop
xor
les
in
dec
loop
lahf
cmp
daa
in
xchg
adc
mov
or
push
push
pop
jb
dec
enter
daa
js
test
rdmsr
and
in
push
pop
add
inc
push
enter
inc
enter
adc
xchg
ja
pop
inc
dec
in
test
jb
dec
in
dec
pop
pusha
inc
js
test
or
pushf
fadd
pop
add
add
xchg
arpl
jmp
shl
in
sti
test
test
jns
fisttp
dec
mov
(bad)
(bad)
(bad)
call
sub
push
bound
mov
dec
pop
iret
mov
inc
fild
dec
xchg
inc
pop
(bad)
mov
(bad)
(bad)
jmp
(bad)
and
(bad)
daa
cmp
retf
adc
add
loopne
stc
jo
fisttp
sub
scas
fdivr
in
push
add
mov
xchg
push
inc
out
push
adc
or
cwde
adc
dec
jbe
fld
(bad)
jmp
stos
push
loopne
hlt
inc
leave
sbb
aam
stos
(bad)
icebp
adc
movs
and
addr16
jmp
and
call
push
cs
(bad)
push
sbb
mov
(bad)
(bad)
(bad)
(bad)
mov
ficomp
and
jmp
into
jne
test
(bad)
pop
mov
or
dec
rol
(bad)
(bad)
(bad)
(bad)
aas
es
cmp
daa
mov
bnd
fsubp
jbe
clc
test
xor
mov
add
(bad)
(bad)
(bad)
(bad)
jp
imul
movs
xlat
dec
pop
mov
sbb
xor
jl
sbb
mov
(bad)
(bad)
(bad)
jmp
icebp
sbb
pop
ret
push
(bad)
movs
pop
cmp
mov
push
push
pop
test
(bad)
(bad)
fisubr
icebp
or
mov
jle
lds
jp
and
inc
out
data16
and
push
cld
dec
pop
mov
call
mov
push
fbld
xchg
and
test
xchg
add
mov
sar
(bad)
(bad)
jmp
xor
and
xor
jne
mov
mov
inc
or
jmp
and
inc
xchg
clc
icebp
in
sub
clc
adc
sub
out
ret
(bad)
(bad)
(bad)
push
sbb
aaa
out
push
sub
hlt
jmp
pop
stos
mov
in
mov
jns
out
arpl
(bad)
(bad)
jmp
out
pop
mov
xor
pop
fild
fiadd
aad
cmps
jnp
out
stos
add
cld
sbb
and
(bad)
(bad)
jmp
and
into
pop
mov
mov
movs
sub
inc
sub
(bad)
(bad)
(bad)
std
sub
out
outs
mov
enter
into
push
(bad)
mov
add
sar
adc
int
lock
cdq
mov
into
sti
and
(bad)
inc
sar
mov
mov
das
inc
jmp
mov
mov
xchg
clc
lods
icebp
loope
adc
arpl
xchg
sbb
lods
popa
add
jmp
and
jmp
push
loopne
xchg
mov
and
daa
mov
mov
scas
int3
ror
xchg
or
fs
inc
sbb
inc
imul
enter
sahf
mov
push
mov
(bad)
(bad)
dec
shl
push
mov
xor
repnz
in
pop
and
(bad)
lahf
pop
xchg
bnd
mov
jg
rol
jmp
inc
cmp
(bad)
push
retf
stos
mov
loopne
push
sti
cmp
call
aam
adc
jmp
xchg
sahf
sti
cli
xchg
pop
arpl
dec
sbb
aam
scas
(bad)
(bad)
aas
enter
mov
scas
in
and
push
mov
(bad)
jmp
inc
and
jg
and
(bad)
popa
jl
adc
pop
aas
pop
adc
mov
pop
(bad)
mov
bound
add
sub
(bad)
sub
movs
xchg
sahf
mov
cli
lods
into
(bad)
stc
cmp
inc
mov
int
into
stc
nop
push
jne
sub
(bad)
(bad)
pop
jns
sbb
test
mov
test
dec
sti
sbb
mov
sbb
push
rcl
and
into
sbb
ret
(bad)
call
xor
add
mul
ror
popf
adc
(bad)
fistp
stc
and
mov
lods
pop
pop
push
jo
jecxz
jmp
xlat
push
add
xchg
jnp
inc
push
sbb
xor
jb
enter
sar
adc
jge
in
push
mov
into
jbe
and
jp
xchg
sti
(bad)
(bad)
(bad)
inc
mov
ret
adc
mov
cmp
mov
nop
je
movs
movs
adc
dec
div
push
or
(bad)
push
jns
jne
jo
xor
mov
(bad)
(bad)
ds
dec
fs
mov
mov
mov
cmp
mov
call
bound
pop
or
rol
daa
out
aaa
ins
lods
sbb
add
inc
js
xchg
sbb
clc
in
loopne
cmps
inc
loop
dec
(bad)
loopne
fild
sbb
(bad)
(bad)
dec
jmp
add
adc
daa
dec
add
or
ja
sub
(bad)
(bad)
(bad)
call
inc
dec
retf
stos
pop
gs
push
cmp
jg
out
cld
inc
jmp
retf
push
jb
mov
call
repz
or
adc
(bad)
push
imul
push
add
sti
pop
loopne
hlt
or
jb
clc
pop
mov
popf
out
adc
xor
push
call
add
in
pop
sub
(bad)
inc
dec
inc
out
sbb
xchg
sub
loope
mov
js
xor
(bad)
(bad)
(bad)
call
cmp
sahf
xor
test
pop
jae
pop
fwait
xchg
dec
add
sbb
push
imul
pop
mov
(bad)
(bad)
jmp
out
lahf
and
and
pop
adc
mov
jmp
(bad)
jmp
and
jae
test
mov
xchg
test
movs
mov
jecxz
fist
add
mov
mov
(bad)
mul
xor
add
js
out
cdq
sti
xchg
mov
sub
xor
push
cwde
mov
imul
xchg
xchg
fwait
jae
xchg
popf
xchg
jmp
dec
jno
mov
call
xchg
jae
sahf
in
test
xor
popf
je
test
add
add
mov
std
test
push
xor
ja
adc
clc
outs
lock
sgdtd
jno
pushf
lahf
popf
jno
xchg
jns
cdq
movs
cdq
xchg
in
popa
out
sub
jno
adc
imul
and
mov
add
mov
jg
mov
xor
jg
xchg
pushf
xchg
xchg
mov
xor
add
lahf
mov
add
cdq
arpl
xchg
xor
mov
cmp
std
inc
hlt
call
std
push
int3
lock
sar
lahf
mov
into
add
mov
sub
(bad)
(bad)
(bad)
call
dec
les
in
(bad)
aam
mov
xor
out
dec
cmps
mov
adc
ss
sbb
(bad)
(bad)
push
mov
out
or
adc
cmp
jmp
fwait
fwait
sahf
jo
leave
iret
sub
and
(bad)
(bad)
jmp
nop
imul
adc
fdiv
rcr
add
add
sbb
jae
dec
jmp
sar
xchg
out
dec
fdiv
fwait
in
in
xor
aam
sub
xor
jg
xlat
into
push
ret
mov
pop
adc
fbstp
mov
(bad)
daa
push
push
adc
dec
lock
xor
cmp
mov
mov
icebp
in
loopne
ins
(bad)
out
cli
dec
xor
adc
ficom
(bad)
dec
adc
rcl
(bad)
(bad)
dec
mov
xor
cmp
cmp
pop
dec
inc
xchg
sbb
lods
lock
ins
(bad)
(bad)
(bad)
call
aaa
shr
js
mov
dec
inc
lds
iret
test
test
nop
xchg
and
mov
(bad)
(bad)
jmp
push
enter
in
loop
imul
add
dec
push
dec
jo
pop
les
(bad)
(bad)
(bad)
(bad)
jnp
jp
nop
inc
(bad)
jo
dec
push
push
(bad)
sub
idiv
aam
int
iret
xor
mov
lock
mov
test
cmp
and
(bad)
(bad)
fcomip
dec
mov
in
xchg
mov
add
mov
out
sub
int3
jge
jbe
adc
mov
cld
push
out
add
pusha
push
fwait
jo
jno
bound
rcr
(bad)
(bad)
push
pop
or
repz
in
cmp
pop
xchg
jns
jle
mov
push
jmp
pop
xchg
lahf
push
and
sbb
sbb
lds
repnz
sahf
push
dec
stos
(bad)
(bad)
(bad)
jmp
cmp
nop
jo
pop
mov
dec
xor
iret
loop
fs
xlat
leave
es
mov
push
clc
mov
retf
push
sbb
sbb
std
fs
push
mov
add
sar
inc
ds
loop
jb
call
or
cmp
(bad)
jle
push
cmp
in
ds
xchg
sbb
loope
rcr
(bad)
push
loop
das
data16
jmp
cmps
jle
retf
sub
fdivr
popf
and
(bad)
push
mov
rol
icebp
push
and
sub
mov
fucomip
cwde
push
test
cmp
adc
(bad)
(bad)
jmp
add
cmc
aad
cmc
inc
inc
das
jo
repz
add
jb
test
add
and
int
push
jmp
fdiv
mov
inc
(bad)
out
nop
nop
mov
std
outs
push
and
out
(bad)
(bad)
call
add
mov
mov
mov
mov
xor
or
mov
fwait
push
and
call
loopne
pop
and
das
sbb
mov
test
xchg
addr16
cmp
popa
pop
mov
and
(bad)
(bad)
(bad)
out
gs
dec
daa
xlat
dec
mov
push
sbb
and
xor
(bad)
(bad)
(bad)
push
mov
push
xor
fcom
push
ds
mov
cmp
sbb
inc
sbb
and
call
jp
cld
cmp
mov
lock
jmp
inc
mov
stos
into
push
push
sub
mov
dec
mov
fist
xchg
(bad)
(bad)
(bad)
call
cmp
xchg
movs
sbb
in
pop
xchg
fimul
les
das
and
lock
call
je
aam
mov
adc
push
sti
push
retf
(bad)
xchg
pop
push
cmp
(bad)
(bad)
mov
cmp
aad
pop
call
jmp
inc
dec
push
adc
hlt
retf
or
(bad)
call
popa
cwde
mov
int3
loope
sub
mov
(bad)
(bad)
(bad)
jmp
cmps
inc
sti
mov
ins
std
arpl
jecxz
xchg
jne
and
add
or
sar
(bad)
(bad)
(bad)
fcom
mov
mov
cs
jp
or
call
or
mov
sbb
add
lds
ss
cmp
jne
pop
leave
mov
int3
pop
sbb
jmp
out
pop
ret
enter
cs
mov
dec
mov
outs
ret
(bad)
(bad)
(bad)
call
dec
retf
mov
add
in
mov
jle
dec
test
cmps
mov
call
pop
lds
mov
mov
pushf
inc
sar
(bad)
(bad)
inc
leave
xor
jg
dec
retf
xor
sbb
in
pop
sbb
in
popa
ret
(bad)
(bad)
(bad)
fadd
das
mov
or
stc
jecxz
cwde
jne
sub
mov
mov
push
(bad)
jg
add
popa
xchg
addr16
scas
mov
cld
mov
(bad)
(bad)
dec
je
fs
out
xlat
pusha
mov
fs
push
shr
mov
mov
call
int
and
das
jecxz
dec
lea
shl
popf
outs
mov
mov
add
(bad)
(bad)
jmp
xchg
pop
dec
sbb
add
lock
pop
movs
int
xor
test
dec
add
and
(bad)
(bad)
inc
fwait
add
mov
dec
mov
sub
xchg
or
imul
int3
pop
or
push
(bad)
fadd
movs
lahf
test
clc
test
fist
push
push
cmps
or
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
test
leave
mov
out
jae
ins
mov
imul
bound
jle
aam
aaa
(bad)
test
call
adc
or
lea
rcr
and
in
in
mov
(bad)
(bad)
(bad)
(bad)
jmp
push
mov
sub
imul
adc
mov
xor
(bad)
and
jmp
popf
add
mov
out
mov
fwait
jl
test
movs
fs
xchg
pop
sub
jae
push
data16
imul
(bad)
jmp
sub
int
fdiv
mov
pop
xor
mov
lock
sbb
mov
inc
(bad)
(bad)
(bad)
inc
mov
dec
xor
push
pop
test
and
rol
nop
mov
inc
jmp
dec
je
xlat
outs
scas
daa
movs
pop
aam
dec
movs
push
jecxz
or
sbb
pop
jecxz
(bad)
(bad)
dec
(bad)
data16
lods
icebp
pusha
pop
or
pop
jle
rep
xchg
imul
xchg
mov
out
hlt
mov
xlat
dec
inc
jo
add
mov
call
in
fidivr
mov
inc
cmps
ror
es
fnstcw
jnp
xchg
mov
or
mov
push
and
and
xor
(bad)
(bad)
push
retf
pop
push
in
mov
push
sbb
push
jo
add
and
or
pusha
(bad)
(bad)
(bad)
call
xlat
cmps
repnz
push
retf
aas
lahf
js
mov
or
push
dec
dec
jmp
pusha
inc
sub
(bad)
(bad)
push
adc
shl
push
int3
ret
nop
or
push
test
(bad)
(bad)
(bad)
(bad)
in
lods
jmp
lahf
(bad)
jmp
repz
arpl
aad
bound
fcmovnu
mov
(bad)
(bad)
push
fs
stc
scas
jb
scas
das
cdq
icebp
and
sar
cdq
dec
rcr
jle
aaa
hlt
ficom
(bad)
(bad)
(bad)
call
daa
hlt
bound
sbb
and
pop
lds
mov
fist
mov
(bad)
(bad)
jmp
sahf
mov
inc
adc
das
dec
ds
aad
scas
xor
aad
and
push
(bad)
fcomip
(bad)
cmp
(bad)
pop
mov
ret
out
inc
ds
mov
(bad)
jmp
icebp
pop
test
dec
mov
mov
or
cmp
and
bound
inc
bound
gs
(bad)
(bad)
jmp
(bad)
jmp
mov
push
push
mov
xor
jmp
or
imul
mov
les
or
pusha
cld
(bad)
out
xor
(bad)
out
xor
loopne
jp
cli
inc
repnz
sbb
lahf
and
ss
sbb
cld
jge
pop
mov
cmp
test
hlt
fwait
rcl
xchg
(bad)
(bad)
(bad)
push
cmp
mov
add
cmp
repnz
or
xor
int
ja
inc
shl
add
iret
cld
pop
loopne
scas
outs
or
das
in
mov
sbb
mov
mov
sbb
and
add
loope
and
(bad)
dec
pop
push
iret
and
and
(bad)
jg
cdq
sti
xor
push
jmp
mov
mov
stos
jbe
push
(bad)
dec
in
loope
sar
xor
ret
xchg
iret
rcl
inc
mov
(bad)
jmp
ins
pop
pop
xor
xchg
xchg
js
pop
xor
inc
xchg
(bad)
(bad)
(bad)
jg
mov
cmp
out
jp
mov
(bad)
push
ret
cmp
pop
adc
out
(bad)
(bad)
mov
ror
enter
and
retf
lds
sar
xor
call
mov
das
mov
adc
add
xchg
and
mov
or
jg
stos
pop
movs
nop
fisttp
(bad)
(bad)
(bad)
jmp
sub
out
sub
adc
mov
stos
cld
aad
mov
mov
(bad)
(bad)
(bad)
std
ror
lea
jecxz
repz
fsubr
mov
push
dec
inc
test
jns
cmp
push
(bad)
sbb
(bad)
(bad)
call
int
ror
pop
jb
push
jp
pop
ins
sub
jecxz
and
clc
and
xlat
sub
(bad)
fdivr
(bad)
(bad)
jmp
and
mov
(bad)
retf
test
sub
stos
in
repz
xchg
out
sahf
sub
and
(bad)
(bad)
jmp
push
or
mov
and
xchg
(bad)
xchg
jecxz
xchg
data16
inc
cmp
jne
sub
test
(bad)
(bad)
call
(bad)
mov
jge
ret
xchg
xor
popa
xchg
xchg
(bad)
lods
fisub
aas
pop
mov
popa
repnz
(bad)
(bad)
(bad)
inc
cmps
scas
and
pop
add
or
(bad)
mov
je
mov
ja
out
xchg
dec
add
data16
push
cmp
pushf
jnp
jae
cmp
xchg
inc
sbb
pop
(bad)
(bad)
mov
adc
das
dec
in
jbe
call
dec
mul
in
inc
ret
adc
xchg
jb
cli
(bad)
call
outs
(bad)
into
lods
(bad)
mov
adc
(bad)
dec
mov
mov
jg
dec
aam
pop
adc
sbb
fstp
popa
dec
repz
(bad)
(bad)
(bad)
jg
xor
loop
mov
in
lahf
mov
and
ror
fimul
adc
out
inc
(bad)
(bad)
(bad)
(bad)
mov
push
hlt
adc
fisubr
pop
movs
leave
dec
out
jns
enter
push
cmp
std
pop
in
mov
fstp
daa
cli
cmp
out
pop
aaa
push
outs
clc
jno
mov
(bad)
(bad)
out
xchg
xor
push
pop
(bad)
xor
cwde
jns
out
mov
into
sahf
(bad)
jmp
sub
mov
sbb
fwait
(bad)
(bad)
(bad)
(bad)
jge
out
in
repnz
push
sub
jmp
mov
push
sahf
add
and
cmps
inc
in
sub
xor
into
xor
push
cld
out
xchg
rcr
loopne
xchg
stc
(bad)
(bad)
(bad)
(bad)
(bad)
jp
push
add
sar
add
mov
sti
outs
push
inc
mov
and
sbb
and
out
mov
and
mov
inc
outs
jb
cmps
jb
enter
(bad)
(bad)
(bad)
call
and
je
sub
adc
dec
cmp
or
(bad)
(bad)
(bad)
dec
sub
or
iret
cdq
stc
jg
aas
mov
leave
dec
xor
(bad)
(bad)
call
aad
repnz
xchg
jnp
dec
cmp
test
(bad)
(bad)
(bad)
inc
mov
outs
call
mov
sbb
call
push
sar
(bad)
aad
sbb
shl
test
xchg
enter
js
ds
div
adc
sti
movs
iret
in
pop
xor
pusha
mov
sar
mov
int
mov
mov
or
(bad)
(bad)
mov
jo
mov
data16
pop
push
and
das
popf
add
(bad)
(bad)
(bad)
dec
lea
sbb
xchg
sbb
dec
lods
or
scas
adc
rcl
(bad)
(bad)
(bad)
inc
mov
adc
push
lea
xchg
imul
movs
ja
mov
sbb
adc
mov
inc
dec
bound
in
push
xor
sub
push
call
push
mov
call
mov
test
fisub
jle
bound
or
scas
mov
cld
hlt
(bad)
jmp
iret
adc
mov
inc
mov
mov
call
cmc
jnp
add
dec
xor
pop
je
push
fdiv
cmp
push
mov
(bad)
outs
pop
shl
(bad)
cmp
ins
int3
mov
aam
out
push
cmp
push
mov
cmp
sahf
lods
and
hlt
add
add
dec
js
sub
out
xchg
out
out
scas
pop
out
(bad)
(bad)
cmp
fstp
sub
adc
adc
fimul
fild
retf
int3
stos
push
aas
xor
(bad)
(bad)
call
ss
xchg
xor
pop
jno
iret
xchg
pop
retf
sub
fs
pop
ds
(bad)
(bad)
jmp
out
pop
inc
cmp
sar
sbb
mov
into
jmp
(bad)
cmp
(bad)
cmp
in
mov
lea
fwait
ret
xor
and
(bad)
adc
(bad)
mov
mov
or
jmp
cwde
or
xor
sbb
mov
ret
push
mov
std
jge
add
mov
repnz
mov
xor
push
adc
or
xchg
xlat
add
enter
repnz
adc
sub
push
std
cld
(bad)
(bad)
dec
enter
stos
sbb
push
aaa
pushf
sub
std
in
mul
mov
cmp
fnsave
or
(bad)
inc
fsub
aaa
jecxz
or
jle
push
fistp
popf
mov
adc
(bad)
(bad)
(bad)
cmp
mov
test
dec
push
loopne
lods
or
inc
sub
inc
add
inc
mov
test
cdq
ret
cmovae
mov
fs
jo
lods
out
xor
and
cli
(bad)
(bad)
jmp
out
lock
ret
jg
jae
arpl
fs
cs
mov
ins
loope
mov
pop
mov
cld
jmp
or
mov
cmp
jo
(bad)
jp
fnsave
push
ss
cmps
(bad)
(bad)
(bad)
jmp
lds
push
add
inc
ins
pop
shr
push
repz
lods
das
or
call
cmc
mov
(bad)
(bad)
in
aaa
mov
sub
and
or
stos
fdivr
add
ds
outs
ret
mov
(bad)
(bad)
jmp
and
cmp
out
mul
xor
sub
mov
addr16
and
mov
add
jg
dec
xor
retf
and
xor
(bad)
in
jae
addr16
lods
dec
(bad)
inc
es
dec
mov
ret
cli
pop
dec
xchg
xchg
mov
cli
or
movs
(bad)
(bad)
(bad)
push
leave
jg
or
jmp
das
or
sub
aam
xchg
(bad)
not
xchg
(bad)
mov
fisub
lock
or
or
pop
cmp
(bad)
(bad)
jmp
sti
mov
(bad)
pop
add
fmul
sbb
lock
in
pop
sar
dec
mov
sub
int
test
push
cmp
lods
iret
inc
(bad)
(bad)
(bad)
call
mov
push
push
enter
cmp
dec
es
ins
retf
aam
bound
adc
cmp
inc
out
xor
jecxz
fcom
mov
retf
pop
movs
push
add
shr
or
(bad)
jmp
stc
iret
into
dec
push
jmp
xor
mov
xor
fwait
jmp
and
or
(bad)
cmp
jbe
jp
loopne
(bad)
dec
(bad)
js
add
ror
inc
push
jne
arpl
(bad)
or
xchg
and
xchg
(bad)
(bad)
(bad)
mov
mov
cmps
pop
js
inc
jmp
(bad)
(bad)
das
aaa
inc
cmp
sar
(bad)
(bad)
jmp
pop
fld
xor
jmp
sbb
mov
adc
pop
cmovp
add
(bad)
(bad)
(bad)
fimul
loopne
mov
sub
xchg
inc
lea
adc
sahf
iret
mov
leave
(bad)
(bad)
(bad)
jmp
or
sbb
loope
cmp
mov
xor
pop
mov
cmp
(bad)
jmp
inc
sbb
mov
mov
mov
xor
jl
dec
jg
imul
(bad)
sbb
in
dec
jg
(bad)
jmp
xor
ds
int
gs
sahf
cmp
add
das
sbb
push
outs
frstor
add
dec
xchg
push
pop
pop
stos
jnp
jb
adc
call
(bad)
(bad)
(bad)
(bad)
out
push
lock
(bad)
imul
int
(bad)
mov
dec
dec
jg
aad
dec
sub
(bad)
(bad)
push
xlat
push
push
mov
push
fimul
dec
push
fwait
aam
sub
std
push
mov
dec
in
inc
jg
push
and
movs
push
ror
inc
sbb
clc
hlt
popa
icebp
cpuid
cmp
(bad)
(bad)
aas
push
sahf
shr
push
lods
push
sbb
retf
push
gs
cli
mov
mov
call
cli
cmps
push
stos
mov
bound
jb
and
out
xchg
push
hlt
aaa
pop
ret
pop
ds
(bad)
out
clc
fdivr
stos
sub
jbe
and
mov
scas
loop
das
and
out
test
pop
loopne
push
and
sub
sbb
test
outs
bound
add
push
iret
push
xlat
fdivr
adc
mov
cmps
jae
(bad)
retf
push
and
daa
stos
push
enter
lea
inc
add
or
loope
dec
cmc
and
aas
sub
inc
idiv
(bad)
(bad)
(bad)
jmp
addr16
adc
cmp
lods
hlt
(bad)
pop
aam
repnz
mov
(bad)
(bad)
(bad)
call
test
cmps
scas
in
mov
fsubr
push
(bad)
mov
jg
mov
in
(bad)
(bad)
(bad)
call
mov
dec
dec
imul
cmc
or
add
jecxz
(bad)
(bad)
dec
cmp
lods
mov
dec
loop
cmp
test
(bad)
(bad)
mov
shl
int3
mov
mov
adc
es
mov
(bad)
mov
fistp
and
sub
xchg
(bad)
sbb
sahf
adc
(bad)
and
inc
popa
cmps
(bad)
mov
push
sub
(bad)
jg
sub
(bad)
mov
push
daa
fidiv
mov
stc
(bad)
test
inc
sar
inc
into
mov
pop
ret
sub
sbb
dec
sbb
dec
lock
sbb
icebp
sti
cmp
sub
mov
push
aam
(bad)
(bad)
call
or
imul
aam
clc
idiv
out
iret
std
push
lea
dec
in
mov
or
test
push
xor
ret
jb
(bad)
(bad)
jmp
or
pop
jnp
sub
(bad)
mov
add
outs
cld
cmc
push
fninit
and
(bad)
call
into
xchg
mov
cmp
xor
inc
(bad)
(bad)
mov
jo
sub
fnstenv
pop
mov
int3
inc
xchg
mov
test
(bad)
(bad)
(bad)
cmps
push
mov
xor
lods
pop
pop
cmp
idiv
addr16
sub
(bad)
bound
aam
push
sbb
fs
or
and
dec
sar
(bad)
push
movs
cdq
ja
int3
aam
mov
mov
int3
pushf
ror
jns
(bad)
(bad)
(bad)
jg
mov
shl
fwait
popf
push
loope
inc
mov
xchg
aaa
int3
dec
adc
nop
sbb
pop
nop
out
test
out
dec
sbb
(bad)
(bad)
repz
add
fild
int
cmp
mov
lods
push
lds
fcmovu
add
jmp
outs
inc
outs
jp
in
push
dec
push
and
mov
xor
sub
dec
fcmovnbe
ds
and
xor
ret
addr16
(bad)
(bad)
(bad)
jmp
fild
xor
rol
cld
cdq
push
loopne
adc
(bad)
or
fs
(bad)
(bad)
call
pop
pushf
jg
mov
mov
inc
and
aad
pop
cmps
mov
push
sbb
gs
clc
aad
iret
imul
mov
(bad)
(bad)
dec
cmp
jecxz
clc
push
sub
push
mov
sub
dec
xor
or
fld
loope
push
(bad)
mov
pop
mov
out
repnz
mul
xor
xchg
movs
ins
les
and
or
rcl
mov
push
sbb
fwait
cmp
sbb
add
ret
enter
dec
xor
or
(bad)
(bad)
(bad)
call
mov
dec
into
mov
sub
or
(bad)
lods
ins
test
xor
fcomip
jmp
into
nop
jge
retf
out
shr
test
call
(bad)
mov
js
loope
rcl
cld
inc
and
push
dec
add
enter
push
or
or
das
xlat
pavgw
mov
mov
ds
out
ficomp
adc
add
and
cmp
push
pop
bound
dec
or
xchg
adc
adc
or
outs
out
and
jae
or
ror
or
out
out
pandn
or
cmp
cmp
jle
pop
pop
jns
ja
xchg
lods
mov
leave
add
cmp
in
jmp
ret
iret
ror
or
ret
xchg
out
das
aad
loope
push
adc
sahf
cmps
stc
adc
sbb
or
inc
ret
repnz
sbb
ds
jnp
sahf
out
(bad)
shld
mov
repz
sahf
out
or
repz
ds
cld
pop
pop
les
push
inc
iret
repz
imul
cmp
mov
les
inc
cs
lock
ffreep
and
jns
repz
or
or
inc
pop
rep
daa
iret
push
ins
jnp
mov
leave
repz
mov
rcl
push
(bad)
and
iret
int
je
sar
xchg
loope
push
mov
imul
push
stc
sbb
push
adc
push
lahf
xchg
mov
and
push
out
loope
xor
in
cmp
add
adc
pop
test
sub
ja
ins
fild
jnp
pop
lahf
scas
cmps
imul
fnstsw
push
scas
mov
mov
mov
mov
nop
jbe
(bad)
lahf
sub
retf
jne
sahf
push
imul
mov
in
mov
pop
xor
(bad)
(bad)
call
mov
add
int
pop
dec
xchg
ins
sub
inc
push
cwde
cmp
and
jle
jno
cs
add
cwde
rol
dec
xor
fwait
jno
(bad)
(bad)
(bad)
(bad)
push
sub
stos
test
lea
call
xrelease
mov
adc
sub
mov
dec
std
(bad)
(bad)
push
add
xchg
out
iret
js
(bad)
sti
loop
pop
stos
mov
cmp
mov
cli
(bad)
jg
or
jl
or
jle
adc
adc
cmp
ins
loopne
std
js
fist
inc
test
add
push
cwde
(bad)
(bad)
(bad)
dec
int3
jmp
mov
call
push
add
aaa
and
fidiv
(bad)
(bad)
push
jle
fcomi
jb
cmps
add
jl
inc
iret
jb
and
xlat
fisttp
jns
test
adc
(bad)
(bad)
dec
mov
mov
or
sbb
jno
pop
outs
(bad)
fnstcw
int3
sbb
sbb
or
(bad)
call
shl
jecxz
rcr
lahf
call
scas
sbb
mov
xor
inc
pop
bound
or
jns
loope
push
push
lea
jb
adc
(bad)
(bad)
(bad)
(bad)
jge
stos
mov
loop
add
repz
enter
mov
imul
es
loopne
ds
push
push
and
inc
test
pusha
aam
gs
jmp
inc
or
(bad)
(bad)
dec
pop
sbb
jmp
pop
sub
cmp
out
or
cmp
add
cs
mov
dec
aad
pop
inc
sub
retf
mov
(bad)
inc
bound
jmp
pop
mov
in
cmps
shr
fist
dec
xchg
xchg
outs
fldln2
cmp
(bad)
(bad)
call
addr16
inc
les
dec
inc
in
mov
scas
mov
and
cmp
sub
gs
(bad)
call
test
add
lds
cmp
movs
(bad)
test
rol
cmp
lahf
add
sub
ret
pushf
outs
or
imul
jns
or
jmp
shr
ret
std
xchg
pop
leave
shl
(bad)
(bad)
inc
jb
inc
ins
cmc
call
adc
js
cs
jb
cld
ss
(bad)
(bad)
(bad)
fbstp
push
cmp
not
fcom
cli
jmp
les
sar
bound
(bad)
inc
push
test
inc
pop
ror
aas
es
and
jmp
pop
ins
jp
(bad)
(bad)
(bad)
mov
fwait
add
(bad)
ss
cmp
add
mov
cmps
cmp
test
pop
hlt
adc
sub
push
imul
(bad)
call
mov
sub
cmp
sbb
imul
div
test
(bad)
jmp
xchg
push
jmp
sbb
cs
xor
popa
aad
xchg
ja
call
std
dec
cmp
sbb
out
inc
dec
or
mov
add
cmp
mov
(bad)
(bad)
(bad)
push
sub
lods
hlt
adc
inc
and
add
pop
mov
cld
test
(bad)
in
cli
jmp
retf
dec
push
adc
or
xchg
jns
out
test
ja
sahf
out
fadd
(bad)
cli
pop
out
and
push
add
sahf
out
sahf
or
pop
or
mov
push
fisubr
and
cmp
ja
rcl
ret
or
inc
outs
test
cmps
(bad)
jmp
(bad)
mov
add
mov
ret
inc
add
rol
push
(bad)
cmp
in
fcomp
pop
adc
sub
fidivr
cmp
and
fucomip
(bad)
fstp
jmp
mov
stos
xor
sub
ja
mov
idiv
out
(bad)
(bad)
call
retf
sub
rcl
mov
or
push
mov
loop
(bad)
retf
add
ja
dec
bound
lds
dec
daa
mov
jmp
fdiv
pop
mov
cwde
push
les
idiv
pop
and
sbb
push
sahf
fisubr
in
mov
dec
iret
aad
mov
mov
mov
xchg
shl
aaa
sbb
aas
jle
in
int3
jle
xchg
push
mov
(bad)
mov
mov
mov
(bad)
(bad)
(bad)
mov
adc
aas
lods
cmc
enter
sbb
sub
(bad)
xor
push
jl
mov
push
sar
(bad)
(bad)
out
dec
rcl
xchg
mov
fcmovu
push
leave
mov
fld
lock
lahf
loopne
loope
addr16
pop
lods
(bad)
(bad)
(bad)
jmp
leave
repnz
sub
adc
inc
mov
nop
inc
pushf
cmp
dec
clc
fs
ins
call
or
int
add
dec
call
(bad)
(bad)
fbstp
and
jmp
push
jmp
adc
clc
push
xor
(bad)
(bad)
(bad)
push
adc
mov
sbb
mov
ins
dec
sbb
push
out
push
lahf
xor
(bad)
(bad)
call
xchg
js
jne
cdq
mov
mov
mov
arpl
mov
sbb
(bad)
(bad)
(bad)
dec
clc
xor
shl
cmp
out
ficom
aas
mov
ja
retf
adc
(bad)
mov
jns
mov
lods
jl
pop
mov
stos
lods
shl
(bad)
(bad)
std
jle
xchg
cmp
sbb
jle
dec
mov
in
add
repnz
int
int
repz
pop
out
or
repz
sbb
pop
pusha
cmp
repz
ins
sub
iret
repz
loop
or
sbb
sub
ds
mulps
cmp
into
repz
inc
push
mov
call
xor
(bad)
(bad)
call
jge
fwait
push
sbb
mov
enter
add
mov
dec
dec
push
sbb
jmp
sub
js
leave
pop
ret
sub
mov
xchg
(bad)
cmp
(bad)
cmp
dec
adc
and
push
(bad)
(bad)
mov
iret
pushf
(bad)
jo
add
out
lock
lods
in
add
sbb
(bad)
(bad)
jmp
or
cld
mov
int
int
std
stos
fimul
popa
add
mov
jmp
daa
inc
(bad)
jmp
pop
inc
pop
mov
(bad)
lahf
dec
mov
lahf
call
popa
pop
lods
(bad)
(bad)
(bad)
dec
rcl
push
inc
xlat
ds
aas
cld
mov
stos
mov
mov
retf
into
push
(bad)
(bad)
jmp
fimul
jnp
pop
ror
xor
sti
xor
xchg
sub
popf
gs
fild
retf
pop
(bad)
(bad)
(bad)
(bad)
fnstcw
(bad)
cmp
and
or
cmps
or
je
mov
call
cmp
mov
jmp
push
jne
add
xchg
adc
outs
je
xchg
loope
(bad)
call
retf
stos
outs
aam
or
dec
dec
(bad)
pop
cmp
lock
dec
sbb
mov
(bad)
(bad)
(bad)
jmp
xchg
aaa
jne
add
mov
push
push
and
and
std
call
mov
shl
nop
xchg
mov
sub
mov
ins
and
and
(bad)
call
popa
les
mov
inc
xor
mov
dec
xor
sub
or
mov
dec
jecxz
shl
sub
xor
or
mov
(bad)
call
jp
(bad)
mov
xor
or
inc
pop
xchg
sti
clc
sub
mov
ret
cmp
dec
ret
jnp
fcom
push
add
loopne
mov
popf
cmp
rcr
dec
dec
mov
mov
ficomp
mov
push
cmp
xor
imul
inc
mov
mov
push
mov
mov
das
pop
inc
push
or
sar
aaa
and
xor
test
jb
mov
jbe
mov
fs
(bad)
(bad)
jg
dec
ds
xchg
aad
ficomp
mov
mov
bound
shr
js
loop
addr16
sub
in
ffreep
mov
mov
fst
and
inc
imul
or
out
xor
(bad)
(bad)
(bad)
fisub
daa
cmp
not
sub
mov
call
(bad)
(bad)
in
jmp
fdivr
push
push
test
dec
call
rcl
lods
out
addr16
pop
(bad)
(bad)
(bad)
jmp
adc
in
jle
jl
(bad)
out
je
aas
addr16
mov
in
mov
call
(bad)
jmp
push
dec
(bad)
pusha
stc
or
mov
stos
(bad)
(bad)
(bad)
mov
xchg
lock
shl
mov
ins
lods
cmp
sti
cmp
(bad)
imul
fisttp
(bad)
(bad)
(bad)
and
xchg
lds
jb
sbb
and
outs
cmp
jae
sub
inc
(bad)
(bad)
jmp
jecxz
xor
rol
pop
das
cmp
mov
mov
popa
mov
xchg
shl
(bad)
(bad)
(bad)
std
sbb
sar
sahf
mov
mov
mov
and
(bad)
mov
add
(bad)
(bad)
fcomip
inc
call
(bad)
sbb
imul
movs
sbb
dec
dec
pushf
fist
mov
push
cmp
xchg
in
icebp
xor
adc
das
sbb
ss
mov
mov
push
jge
jmp
not
mov
push
pop
test
xchg
sub
adc
shl
jns
or
js
out
push
jmp
out
xchg
rcl
push
sbb
mov
push
mov
test
mov
mov
daa
daa
iret
repz
out
add
fistp
rcl
femms
sbb
sub
xor
sahf
out
add
inc
or
dec
sahf
out
mov
iret
leave
stos
mov
push
sahf
not
into
cli
or
outs
and
iret
repz
and
xchg
cmp
mov
pushf
cmp
lahf
cs
fistp
stc
push
or
adc
aam
aad
inc
xchg
fmul
push
dec
adc
fsubr
cmp
jp
cmps
cld
(bad)
(bad)
(bad)
clc
mov
ds
ins
mov
sbb
repz
and
inc
cmp
inc
pop
in
(bad)
cmp
mov
int3
jae
or
pusha
xchg
mov
push
inc
jnp
(bad)
(bad)
call
inc
sar
adc
fwait
add
dec
pop
test
popa
lahf
push
stc
stos
cli
(bad)
(bad)
dec
es
cmps
push
(bad)
or
push
mov
or
in
dec
(bad)
(bad)
jmp
movs
fnstenv
xor
int3
mov
dec
test
std
repz
mov
ds
cmp
and
hlt
push
fs
xor
mov
and
jmp
mov
mov
fcmovnu
pop
xchg
nop
sub
(bad)
(bad)
dec
jmp
ja
int
inc
mov
or
adc
xor
mov
enter
lods
jg
retf
mov
mov
faddp
push
add
(bad)
add
icebp
mov
dec
add
push
and
comiss
inc
or
iret
repz
dec
inc
nop
je
imul
fld
into
push
imul
add
fild
aam
inc
dec
repz
and
int
xor
push
jns
psubq
mov
inc
pop
cmp
imul
pop
add
or
jl
dec
mov
or
test
jp
xor
sbb
ret
push
scas
or
icebp
or
out
sbb
jl
dec
repz
and
inc
repz
xor
out
sub
inc
mov
cmp
add
cmp
div
jns
push
cmc
add
mov
fidiv
fisub
dec
repz
push
lahf
rcl
jl
or
pop
cmps
push
imul
sbb
in
and
sub
pmaxsw
lds
ucomiss
jae
pop
out
jl
pop
push
test
iret
repz
inc
repz
mov
jge
add
push
test
inc
ds
stc
push
sbb
psadbw
jmp
push
call
enter
lahf
out
jl
add
xor
and
and
push
cmp
not
sub
jl
sbb
push
loope
(bad)
add
out
notrack
hlt
fiadd
iret
repnz
cmps
stc
xor
mov
jle
or
dec
repz
xchg
xchg
add
repz
adc
push
in
fiadd
adc
sar
or
adc
xor
out
add
fs
inc
add
int
cmp
add
push
sbb
retf
add
repnz
out
xlat
dec
pop
es
pop
push
pop
dec
out
mov
sub
xchg
inc
sub
adc
repz
add
or
add
push
xor
adc
mov
xchg
test
mov
add
enter
in
ds
pushf
or
ret
mov
adc
stc
and
adc
sbb
leave
sbb
(bad)
dec
mov
in
int3
into
sbb
ror
and
sahf
mov
sub
inc
rcr
(bad)
(bad)
(bad)
jmp
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
(bad)
(bad)
inc
mov
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
(bad)
(bad)
(bad)
(bad)
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
(bad)
(bad)
call
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
jmp
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
lds
mov
cmps
lock
mov
popa
sar
mov
fsub
stos
or
clc
repz
mov
sub
fwait
xchg
and
and
out
aas
mov
add
sti
aas
jno
or
mov
pop
fs
dec
(bad)
(bad)
(bad)
(bad)
call
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
(bad)
(bad)
(bad)
push
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
(bad)
(bad)
(bad)
jmp
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
(bad)
(bad)
jmp
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
(bad)
push
mov
inc
inc
aas
movs
jmp
jg
sub
jge
mov
inc
(bad)
(bad)
(bad)
call
fst
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
(bad)
inc
std
xlat
cmp
mov
sbb
add
mov
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
(bad)
(bad)
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
(bad)
(bad)
(bad)
sti
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
pop
and
into
ror
add
cmps
mov
mov
add
jg
mov
nop
sbb
pusha
mov
xchg
inc
ror
push
pop
mov
int
mov
and
adc
cmps
repz
pop
rcr
imul
ja
or
sub
call
pop
dec
jge
out
mov
pop
mov
mov
push
loopne
stc
push
clc
fisttp
arpl
daa
add
mov
xor
das
mov
aad
daa
loopne
and
jbe
or
mov
or
pop
adc
push
fidiv
mov
cmovbe
add
fist
mov
push
mov
nop
xor
mov
mov
mov
pop
push
cmp
mov
jo
cs
mov
cmp
loope
adc
ins
cmp
cmp
xor
add
fisubr
dec
xchg
inc
or
or
adc
shr
and
push
or
add
dec
nop
add
call
xchg
add
sub
and
out
shr
test
mov
dec
mov
and
cwde
cmp
loop
push
mov
mov
jae
mov
sub
mov
xchg
xor
(bad)
jmp
add
fdiv
fcmovnb
jecxz
add
movzx
add
or
daa
daa
daa
fild
dec
add
add
daa
daa
daa
daa
push
pop
or
daa
daa
daa
daa
or
or
mov
clts
add
dec
jne
ja
shl
inc
fist
or
inc
sub
cmc
mov
xor
mov
div
mov
jge
in
(bad)
mov
adc
repz
and
xchg
lock
adc
(bad)
imul
add
add
jmp
sbb
not
mov
test
sbb
adc
and
or
enter
adc
retf
mov
push
mov
xor
(bad)
cmp
dec
adc
push
inc
jge
push
push
pop
jb
jmp
inc
leave
xor
add
mov
fmul
ja
pusha
jg
popf
nop
pop
or
shr
and
sbb
fist
test
fs
fisttp
fld
push
dec
pop
fisub
(bad)
retf
ret
outs
dec
(bad)
fcomp
sub
inc
inc
ss
or
pop
(bad)
fidiv
add
sti
test
jecxz
jg
sti
cwde
mov
jne
jge
je
(bad)
push
pop
popa
pop
inc
push
mov
push
inc
in
mov
pop
fld
push
xor
mov
sar
mov
scas
js
dec
mov
dec
lea
push
aam
retf
or
iret
adc
lea
mov
cmps
imul
cmps
imul
cmps
imul
into
mov
loop
push
dec
mov
and
adc
fld
sar
cmp
jae
inc
add
mov
inc
mov
add
inc
pop
adc
and
lock
aaa
fsub
and
out
cmp
mov
and
imul
repnz
and
ror
lock
shr
sub
push
clc
push
int3
(bad)
mov
sub
imul
pop
push
repnz
cld
hlt
cmp
dec
jae
mov
inc
(bad)
clc
in
mov
mov
and
xchg
sub
pushf
popa
enter
movs
loopne
push
into
add
push
and
loopne
je
dec
into
shr
in
cmp
jae
shr
clc
sbb
test
jne
jnp
mov
mov
mov
cmp
jbe
aas
je
cmp
mov
fmul
outs
(bad)
push
or
push
es
sub
add
cmp
add
jecxz
or
cld
xchg
pop
(bad)
jmp
cmp
jae
(bad)
out
lods
dec
add
fidivr
inc
movs
cmp
lock
dec
mov
repnz
ds
bound
mov
imul
sbb
jns
xchg
add
jnp
cld
fbstp
dec
push
lea
(bad)
pop
div
sub
sbb
fisubr
outs
hlt
add
inc
or
adc
out
shl
mov
inc
(bad)
outs
fist
add
ja
push
add
inc
add
jbe
call
dec
add
(bad)
pop
aam
aaa
cmp
jb
sub
inc
sbb
fisub
push
jmp
adc
mov
and
push
xor
or
cmp
sbb
xchg
or
sub
pop
mov
out
add
call
inc
and
lea
mov
lea
dec
loope
in
jg
aam
retf
add
adc
shr
iret
pop
add
outs
sbb
sahf
or
push
(bad)
inc
xor
pop
leave
xor
loopne
je
mov
push
fs
sbb
ret
mov
mov
add
sbb
cmps
and
xor
rcr
xor
add
and
ja
imul
dec
inc
aam
(bad)
pop
sub
or
push
icebp
adc
jno
jo
sub
test
sub
cmp
xchg
je
cmp
je
cmp
xor
outs
cwde
jle
jne
mov
sub
in
xor
loopne
push
jmp
push
call
and
push
jmp
push
jge
mov
pop
cwde
fdivp
neg
jmp
push
sar
inc
nop
sub
jge
add
adc
jl
mov
orps
idiv
outs
dec
sub
adc
jmp
push
fwait
and
aam
add
pop
fs
push
pop
jo
mov
xchg
mov
mov
cmp
push
jl
cmovp
lock
xor
std
cmp
adc
push
add
sbb
movs
loop
out
push
or
xor
inc
mov
or
mov
and
inc
jo
adc
call
or
mov
out
add
test
cdq
sub
push
pop
ret
push
sub
jge
add
in
imul
loopne
adc
(bad)
(bad)
aas
sti
shl
add
call
add
cmp
jb
mov
test
je
cmp
xor
jne
loop
add
add
xchg
sub
lea
push
push
(bad)
or
push
jmp
mov
div
jl
ss
(bad)
add
fsin
pop
movs
or
add
jbe
(bad)
jg
retf
and
loopne
enter
(bad)
dec
or
jne
(bad)
loop
shr
or
sbb
sub
sti
ss
add
out
add
xor
dec
in
es
cwde
xchg
xor
push
neg
jno
and
not
and
iret
or
pop
shr
sub
cs
retf
jbe
sbb
or
cmp
pop
ret
fisttp
je
inc
test
and
push
outs
pop
pop
and
loope
sbb
aaa
shl
in
sub
movs
cmp
pop
lock
std
outs
or
push
repz
test
es
test
mov
retf
mov
push
adc
retf
sbb
jmp
das
cdq
xchg
push
jmp
ja
jle
sbb
fs
push
imul
ret
mov
nop
add
add
mov
dec
push
cmp
mov
lock
jg
test
je
pop
sbb
jne
add
mov
jnp
and
push
add
sub
cli
cmp
test
or
inc
retf
xlat
sub
test
or
inc
adc
mov
jb
ret
and
mov
inc
enter
hlt
int
xchg
sub
or
add
call
test
or
fs
push
push
mov
dec
mov
ins
retf
cmp
call
jg
je
fs
jmp
mov
and
add
adc
shl
add
(bad)
mov
inc
xor
pushf
popf
cmp
or
std
call
rol
test
neg
test
sbb
stc
cld
jmp
or
out
mov
mov
ret
fcmovnu
int
xor
sub
xor
sbb
das
xor
cmp
sbb
or
or
and
or
test
dec
clc
dec
jmp
in
sub
push
fdivp
jo
push
retf
pop
not
and
sbb
xor
or
mov
pop
push
neg
dec
rcr
push
push
cmp
jns
nop
jbe
adc
lock
jg
fwait
jne
call
ret
lock
in
adc
fstp
pop
mov
pop
pop
rol
push
xor
add
pop
pop
and
inc
pop
pop
pop
add
lahf
cmp
cmp
ja
push
sbb
adc
or
pushaw
add
push
in
jl
sar
invd
pop
pop
or
pusha
mov
adc
mov
(bad)
cmp
push
out
add
shr
adc
sti
xchg
in
adc
inc
and
inc
add
adc
lea
lea
xchg
call
sbb
lea
(bad)
fadd
xor
push
push
push
lock
sbb
fdiv
ret
xor
pop
push
xchg
adc
mov
retf
sbb
aad
pusha
lea
mov
ror
jno
sar
and
add
cs
cmp
pop
ja
xchg
inc
fidivr
dec
and
cdq
hlt
cmp
jb
ror
sahf
ins
push
repnz
adc
es
xchg
add
dec
jb
fwait
loop
pusha
push
fild
inc
mov
fdiv
add
int
popa
mov
pusha
push
pop
adc
popa
(bad)
mov
add
pushf
push
daa
mov
(bad)
fst
push
mov
jns
inc
push
xchg
pop
pop
stc
push
std
call
fadd
pop
sub
sahf
scas
add
dec
repz
cmp
ja
push
adc
push
sub
fadd
movs
out
icebp
rcr
pop
sahf
mov
pop
jmp
fwait
adc
sbb
rol
sbb
mov
or
xor
mov
or
pop
jp
pop
pop
call
jo
movzx
adc
movs
mov
adc
mov
cwde
dec
push
xchg
mov
mov
jbe
mov
call
or
add
xlat
cmp
jbe
jb
cmp
sbb
push
fidiv
loopne
aad
aas
mov
mov
cld
sbb
dec
jl
dec
xor
shl
call
pop
push
dec
and
push
push
mov
movs
ins
inc
push
adc
jne
mov
push
xor
test
enter
lods
mov
and
xchg
cmps
sbb
mov
das
inc
int
stc
out
sub
shl
mov
cmp
sar
retf
mov
and
cmp
adc
pop
xchg
stos
das
jo
xor
sahf
pop
test
inc
and
jbe
or
add
mov
mov
inc
push
mov
and
xchg
call
out
pop
es
add
inc
xchg
adc
xor
add
push
ror
cdq
in
ror
in
or
jmp
imul
sar
pop
dec
cmp
xor
adc
test
nop
add
sbb
sub
add
cmp
loope
aas
mov
add
in
mov
adc
ins
dec
inc
idiv
shl
rcr
out
sub
sub
sub
jmp
push
daa
push
sub
rcl
jge
ror
jbe
jmp
mov
enter
push
movs
xchg
mov
sahf
in
lods
mov
add
mov
lds
or
inc
add
xor
clc
adc
mov
jne
jmp
fnstcw
dec
mov
jbe
rcr
add
inc
inc
push
sbb
cmp
shl
ds
retf
(bad)
addr16
sub
clc
inc
pop
dec
nop
add
je
call
loop
jmp
les
mov
jne
jge
ins
in
ss
jmp
je
fdiv
lea
jo
inc
sbb
jno
xchg
je
xchg
je
jne
add
movs
xlat
pop
cmp
inc
sahf
pop
in
movs
sub
inc
dec
icebp
dec
ret
inc
cli
loopne
cwde
push
mov
dec
imul
rol
adc
mov
fld
lock
push
cmp
inc
fadd
jne
adc
(bad)
sbb
inc
cmp
js
xor
sbb
sub
je
ret
mov
call
pop
je
mov
sbb
cld
jmp
call
pop
inc
add
pop
adc
inc
or
pop
clc
clc
cmp
xchg
add
(bad)
xchg
mov
push
sub
call
call
ja
imul
cli
outs
push
imul
mov
neg
sbb
and
out
pop
outs
push
push
xor
rcr
push
push
push
push
mov
or
or
sti
sbb
or
or
ficom
sub
add
push
jge
sbb
push
call
sbb
and
jns
test
push
jg
popf
int
sti
xchg
pop
dec
mov
and
call
inc
es
daa
xchg
dec
iret
shl
loope
outs
hlt
add
inc
inc
nop
jo
inc
dec
adc
jo
mov
dec
nop
js
add
test
push
cmp
mov
aaa
cmp
mov
push
push
and
sub
adc
test
mov
aaa
repz
sub
outs
push
ds
or
inc
and
fdiv
fwait
mov
or
push
jbe
call
cmp
shl
push
and
pusha
lds
stos
sub
pop
or
not
mov
call
lahf
or
sub
je
inc
push
xchg
mov
out
mov
push
cmc
xor
adc
and
retf
dec
and
rcl
add
adc
inc
and
int
mov
inc
sbb
inc
fst
pop
test
mov
sbb
jmp
test
or
std
mov
jbe
sub
je
or
mov
lea
rep
mov
stos
cli
(bad)
jge
jbe
mov
inc
inc
lods
pushw
inc
add
out
rcl
jb
mov
push
pop
mov
jp
dec
mov
cmp
jl
jne
dec
push
add
jae
jmp
add
pop
call
adc
inc
adc
adc
mov
mov
cs
in
cmps
ficom
add
adc
lods
xchg
cdq
mov
xchg
push
inc
ja
xlat
fimul
jbe
cmp
xor
jmp
push
inc
lods
jbe
enter
pusha
out
sbb
je
xor
adc
icebp
cmp
push
sbb
add
jmp
scas
fnstenv
mov
mov
mov
or
push
sbb
jmp
jae
cmp
je
sub
leave
add
dec
push
mov
push
or
(bad)
push
fidiv
mov
aad
sub
dec
je
adc
or
jle
loopne
sti
(bad)
pop
cmc
mov
sub
xor
in
push
punpckhbw
mov
pop
and
mov
in
(bad)
sbb
push
adc
pop
enter
fld
add
xchg
dec
mov
xchg
test
loop
outs
sbb
shl
add
lea
hlt
cmp
fdiv
scas
nop
pusha
xchg
sub
cmc
sbb
stos
clc
jge
and
clc
push
mov
and
rol
mov
mov
loop
rcl
xor
data16
add
pusha
mov
loop
mov
pop
inc
scas
loopne
push
shr
add
pusha
adc
push
sbb
shl
loop
or
or
cmp
pop
push
clc
pop
lahf
sub
xor
jmp
jg
aam
jp
and
add
push
inc
popa
mov
jb
cmp
sbb
ds
or
cwde
inc
fdivr
jbe
iret
cmp
fidiv
push
and
loopne
jo
cld
xor
cmp
and
lea
(bad)
mov
adc
xchg
lea
cmp
ins
sub
sub
inc
fsubr
das
mov
sbb
inc
inc
push
rol
ret
addr16
bound
clc
jb
jo
rol
xchg
or
cmp
and
adc
lock
mov
or
add
sub
mov
sub
nop
sbb
mov
jmp
pop
and
or
je
(bad)
call
and
mov
sbb
fstp
stos
mov
shr
or
or
test
xlat
or
ins
add
mov
pop
push
xchg
add
sbb
add
cs
leave
mov
or
adc
push
jbe
adc
sbb
aam
or
sub
int3
sahf
sub
or
fidivr
push
scas
scas
mov
jnp
push
push
push
or
popf
sbb
inc
stos
mov
(bad)
cmp
jne
jmp
cmp
and
cmp
xchg
sub
mov
xchg
push
out
fstp
pop
pop
jne
aas
adc
div
mov
fwait
test
cmp
je
cmp
pop
inc
mov
push
test
jne
cmp
je
adc
adc
inc
enter
fnstenv
mov
inc
inc
push
adc
add
jbe
mov
adc
leave
in
leave
jo
lock
pop
add
and
pop
add
cwde
sub
sub
sbb
push
push
outs
mul
pop
inc
mov
lock
stos
stos
jge
sub
call
pop
mov
in
cld
in
or
(bad)
ror
fwait
sbb
add
xor
push
cld
pop
mov
mov
sub
pop
clc
ja
cmp
cmp
mov
inc
push
mov
lea
loope
xchg
ret
mov
inc
inc
mov
cmp
jne
lods
xor
sbb
cmps
cmp
xchg
push
loope
loop
not
add
retf
ja
jle
add
add
cmovs
sti
into
xchg
out
xor
fiadd
retf
push
mov
add
sbb
mov
movs
lock
add
je
push
mov
paddb
je
adc
test
movs
call
in
inc
popa
call
ja
shl
(bad)
loope
adc
sbb
xchg
fdivr
call
xchg
pop
mov
sub
push
cmp
mov
push
push
mov
fs
mov
adc
or
inc
add
jmp
repz
pop
dec
xchg
mov
sbb
sub
cmp
mov
test
repnz
xor
sub
pop
cmc
dec
sbb
add
mov
scas
(bad)
minps
(bad)
clc
int
(bad)
push
clc
push
xor
and
shl
cmps
pop
cmc
movs
test
mov
jne
or
lock
in
xor
dec
inc
cmp
add
inc
std
jp
inc
outs
sub
sub
lods
sti
pop
cmps
jb
xor
add
das
push
mov
inc
adc
dec
jp
push
clc
out
mov
pop
and
mov
imul
add
popaw
push
lahf
sbb
xchg
(bad)
and
xor
adc
jmp
(bad)
scas
pop
test
dec
mov
pop
test
mov
dec
add
push
xchg
add
xchg
aaa
cmp
or
mov
sbb
(bad)
(bad)
or
inc
test
call
sub
push
and
(bad)
cmp
dec
call
mov
push
ins
cmps
mov
add
mov
mov
lea
ret
mov
or
add
(bad)
jb
pop
cmp
cmp
sbb
neg
sbb
adc
(bad)
adc
test
test
mov
xchg
arpl
das
je
push
je
add
inc
ja
pop
add
out
hlt
call
mov
imul
mov
sub
mov
jno
push
push
sbb
div
fwait
adc
call
adc
ja
das
lock
arpl
je
call
pop
stc
into
ja
or
sbb
lahf
pop
cwde
add
mov
xor
mov
pop
ret
loopne
mov
stos
jle
jne
push
loopne
jp
add
mov
push
mov
pop
loopne
cmp
add
mov
add
add
or
jo
xor
retf
push
cmp
pop
add
xor
add
and
sbb
aas
mov
or
sub
fs
repz
cmp
out
jle
jb
movlps
inc
pop
sub
cmp
cmp
ret
mov
retf
ins
cmc
shl
outs
adc
mov
mov
int3
bnd
pop
xor
call
inc
push
inc
mov
jo
and
ret
cmp
adc
ins
mov
push
push
push
xlat
add
int3
loopne
inc
lds
bswap
push
test
pop
pop
sub
or
push
loope
mov
and
test
(bad)
jl
aad
stos
or
test
imul
cmp
mov
push
jb
push
mov
test
addr16
pop
je
popa
cmp
mov
add
push
jnp
cmp
dec
dec
jo
push
cli
xor
jmp
sub
dec
dec
in
mov
sbb
cmp
mov
inc
push
inc
xor
jns
dec
and
(bad)
call
lea
cs
cmp
cmp
add
out
sbb
fst
shl
xor
and
(bad)
sub
add
mov
jle
sub
or
inc
mov
jg
je
sub
je
dec
je
add
mov
in
out
je
add
jmp
inc
arpl
data16
mov
aaa
jo
push
jne
or
lods
xchg
push
enter
fs
sbb
aaa
sbb
test
adc
mov
imul
div
enter
rcr
cwde
inc
in
xor
sbb
add
popf
imul
jle
cmp
add
adc
jbe
in
mov
add
call
xor
dec
clc
sqrtps
push
or
push
pushf
mov
and
imul
in
adc
inc
mov
or
push
jmp
mov
(bad)
sub
fmul
jb
sbb
ins
or
add
push
retf
fcomi
pop
test
call
neg
add
push
push
xor
mov
pushf
mov
sbb
xor
or
scas
push
mov
int3
xlat
push
test
pop
jae
inc
dec
imul
push
push
pop
aaa
dec
push
imul
aas
adc
push
test
sub
xor
(bad)
scas
cmp
lea
mov
rep
adc
adc
xor
sub
xor
sbb
push
and
push
mov
mov
sub
cmp
jne
push
mov
fimul
jae
je
mov
out
jb
jl
push
test
cmps
jp
pushf
push
sbb
and
and
sbb
dec
sar
add
(bad)
lea
push
push
je
push
pop
(bad)
lods
addr16
adc
(bad)
fstp
or
not
add
push
gs
push
xchg
cli
cmps
push
mov
jmp
add
jg
cmp
retf
push
inc
cld
jne
mov
test
push
(bad)
cmp
or
and
lock
jmp
and
dec
add
clc
jmp
dec
aad
and
ret
mov
test
loopne
push
repnz
cmp
mov
cdq
pop
in
nop
pmulhuw
adc
nop
ficom
mov
shl
aam
xchg
cmp
add
cmp
fsubr
adc
sub
push
jbe
or
mov
jl
push
mov
sbb
push
pushf
mov
mov
push
rep
call
clc
mov
pop
(bad)
push
pusha
scas
push
sub
cmp
cld
mov
jne
sub
push
and
adc
call
loope
add
mov
jmp
fdiv
mov
xchg
sbb
add
mov
es
clc
jmp
jo
fisttp
fstp
addr16
pop
jmp
mov
(bad)
test
sbb
popfw
push
(bad)
xor
(bad)
adc
pop
pop
ja
or
adc
sbb
iret
xchg
xchg
inc
loope
(bad)
adc
add
mov
xlat
loopne
pop
xor
into
or
jne
jmp
sbb
sub
bound
add
sub
inc
mov
add
sahf
jmp
cmp
lock
(bad)
mov
or
cmc
push
add
ja
adc
lock
sub
sub
cmp
ja
clc
jo
jne
pop
push
iret
push
in
push
call
ret
int
(bad)
call
lea
jmp
dec
cmp
out
es
stos
jne
cwde
dec
jne
or
cmps
xchg
mov
add
jg
jmp
add
push
inc
pop
cmp
fcmovbe
jb
int
dec
mov
leave
jne
push
dec
adc
inc
pop
ins
cld
pop
mov
ss
mov
mov
loopne
push
push
adc
imul
push
(bad)
aad
push
mov
cld
adc
add
stos
mov
jo
pop
or
lahf
lds
ins
xor
std
outs
fdiv
sub
adc
or
je
cld
cdq
sbb
push
add
or
mov
movs
xor
mov
mov
jns
add
outs
bound
mov
in
inc
imul
adc
daa
xor
movs
cld
push
movs
jb
nop
sar
retf
push
push
push
fdivr
clc
out
hlt
enter
sar
mov
mov
inc
sbb
xor
adc
jge
enter
jbe
or
push
mov
push
call
mov
xchg
test
xlat
repnz
icebp
mov
nop
je
ins
int3
cmp
jb
and
jp
cmp
sbb
xchg
mov
add
int3
push
fcomp
dec
sar
fimul
mov
inc
(bad)
shl
int3
shl
popf
shl
je
or
pop
and
call
xor
sbb
call
sub
int
rcr
push
call
sbb
adc
jne
pop
rep
ret
xor
or
and
xchg
pusha
push
lods
mov
sbb
ret
jbe
pop
mov
and
call
pop
dec
loope
cmp
adc
or
fldln2
in
shr
sbb
jae
sub
pop
mov
bound
sub
mov
pop
std
int3
sub
dec
add
into
aaa
and
pushf
pop
or
loopne
push
push
sub
test
aad
jl
xor
hlt
xchg
jle
sbb
aaa
cdq
cmp
cmp
je
xor
fwait
scas
adc
inc
add
pushf
xor
dec
mov
dec
add
stos
adc
dec
adc
pop
push
repnz
add
out
pop
fwait
cmp
mov
or
popa
push
or
hlt
add
popa
inc
push
jl
mov
xor
jmp
push
xor
dec
push
cmp
je
push
sbb
sbb
or
inc
push
jle
or
in
dec
mov
or
cwde
push
imul
dec
cmp
pop
xor
push
sbb
mov
lahf
adc
inc
shr
dec
or
push
arpl
aaa
sbb
push
push
mov
push
repnz
sub
push
aad
aas
mov
fadd
int
ror
ret
mov
inc
pop
js
mov
or
cmp
ja
(bad)
adc
cmc
jbe
sbb
adc
xchg
dec
cmp
xor
add
movs
adc
push
(bad)
mov
and
jns
out
retw
stc
add
dec
je
add
cmp
lock
inc
popf
clc
add
cld
and
jne
add
sbb
fbstp
xor
mov
mov
jne
push
out
clc
or
inc
scas
stos
adc
pusha
sub
dec
imul
mov
and
inc
push
adc
mov
xchg
dec
dec
ret
pop
dec
push
jle
xchg
pop
jl
jae
add
jge
neg
adc
cmp
mov
mov
mov
mov
ror
test
mov
dec
or
clc
fs
cmc
cmp
int3
add
cmp
cmp
je
and
inc
mov
push
clc
cmps
sar
pop
adc
xchg
je
inc
mov
cmps
and
enter
clc
cld
mov
jb
cmp
push
call
mov
xor
xor
mov
cmp
add
xor
mov
jle
cli
cmp
adc
mov
test
mov
add
or
mov
jbe
inc
add
mov
mov
fwait
cmp
out
xchg
jbe
aaa
lods
sbb
add
call
pop
add
adc
jle
shr
add
out
add
sub
push
jmp
(bad)
mov
clc
add
add
rcr
inc
mov
sub
mov
ror
fs
mov
add
mov
call
loop
sbb
push
mov
and
out
clc
mov
jmp
cwde
ret
scas
fld
sub
dec
loop
daa
arpl
pop
jne
push
sub
or
push
inc
mov
mov
test
aaa
cdq
cmps
dec
imul
je
dec
xchg
or
mov
in
nop
and
ret
and
pop
ret
fild
inc
sbb
push
addr16
adc
pop
dec
and
add
ins
xchg
repnz
cmp
ret
push
jmp
pop
mov
fstp
invd
push
daa
and
xchg
retf
sub
inc
or
inc
js
add
inc
mov
push
xchg
cmp
or
sbb
(bad)
jmp
dec
dec
popf
dec
movs
nop
cmp
jae
mov
test
mov
js
or
sahf
cld
add
shl
sbb
jne
inc
cmp
or
mov
clc
ja
or
clc
jbe
movs
add
push
adc
in
jnp
jne
mov
and
lock
sbb
ret
(bad)
mov
out
dec
je
add
dec
jne
mov
mov
inc
inc
or
mov
jmp
mov
mov
das
pop
xchg
fwait
(bad)
in
jbe
mov
mov
stos
sti
fmul
or
xor
mov
add
stos
mov
and
rep
pop
pop
sti
mov
imul
push
call
mov
into
(bad)
adc
push
push
ss
pop
aas
inc
sbb
jb
add
sar
and
mov
push
lods
test
data16
or
je
or
jg
mov
mov
jb
push
jne
sbb
mov
outs
ja
aaa
hlt
and
rcl
(bad)
call
fwait
loop
test
mov
add
lods
and
je
or
xor
lock
push
cmps
jne
hlt
cmps
outs
adc
retf
ss
cs
repnz
or
sub
xor
add
aam
aaa
shr
jge
je
or
inc
push
xchg
fdivr
test
scas
sub
or
test
ins
div
or
xchg
mov
(bad)
shl
clc
xchg
inc
shl
inc
push
call
(bad)
sbb
std
cmp
test
jo
(bad)
cmp
xor
jp
xchg
ror
nop
test
ins
or
inc
adc
or
retf
int3
fsub
iret
sar
dec
jl
and
cmp
repz
push
outs
jle
repz
repz
test
(bad)
rcr
in
add
sahf
out
inc
push
pop
push
(bad)
inc
jge
xchg
xor
ja
popa
push
out
mov
les
(bad)
(bad)
inc
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
(bad)
(bad)
dec
mov
sub
mov
sbb
dec
jno
repz
test
(bad)
(bad)
(bad)
call
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
(bad)
(bad)
call
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
(bad)
(bad)
(bad)
cmp
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdivr
int
push
jne
fild
or
shr
cmp
push
xlat
enter
mov
mov
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
xchg
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
(bad)
(bad)
(bad)
dec
mov
push
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
(bad)
(bad)
(bad)
mov
cmp
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
(bad)
(bad)
(bad)
(bad)
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
(bad)
fistp
ficom
gs
aam
pop
popa
mov
into
pop
cmp
(bad)
push
jmp
inc
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
xor
std
(bad)
(bad)
dec
pusha
fidiv
add
in
add
pop
dec
or
cmp
add
(bad)
jmp
xchg
or
and
test
or
mov
(bad)
call
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
(bad)
(bad)
(bad)
jmp
cmp
or
mov
call
jmp
fild
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
(bad)
(bad)
call
push
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
fild
inc
out
imul
(bad)
(bad)
(bad)
dec
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
sar
(bad)
(bad)
jmp
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
(bad)
(bad)
(bad)
jmp
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
(bad)
(bad)
mov
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
mov
pop
mov
test
cmps
call
ret
shl
(bad)
(bad)
fldcw
ret
es
pushf
mov
ins
add
ss
jmp
(bad)
dec
cld
adc
add
adc
mov
jnp
(bad)
(bad)
(bad)
call
mov
fwait
mov
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
inc
mov
mul
ja
outs
ja
mov
out
cli
jo
ud0
(bad)
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
(bad)
(bad)
jmp
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
(bad)
(bad)
(bad)
jmp
or
inc
lock
aaa
push
scas
mov
fidivr
mov
jmp
repnz
mov
xor
mov
add
push
xlat
int
push
ficom
fldenv
cs
hlt
(bad)
(bad)
push
add
push
sub
mov
or
sbb
add
or
inc
xor
sbb
push
sub
sub
hlt
ja
xchg
inc
dec
or
(bad)
(bad)
(bad)
mov
out
cli
retf
fxtract
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
(bad)
(bad)
(bad)
jmp
fst
jo
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
cmp
shl
sub
test
sbb
pop
and
jl
aas
inc
aam
push
pop
int
and
xchg
jecxz
(bad)
(bad)
call
mov
popa
ja
mov
out
repz
gs
fisubr
(bad)
jg
lahf
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
sub
stos
(bad)
fbstp
push
jo
add
hlt
div
sub
(bad)
(bad)
(bad)
call
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
(bad)
call
lds
sub
pop
add
jle
jmp
(bad)
sbb
adc
(bad)
inc
push
lea
fnstcw
mov
dec
hlt
mov
or
xchg
lea
jmp
int3
pop
dec
xor
inc
mov
outs
retf
push
pop
mov
jg
ins
mov
xchg
push
xchg
xchg
push
cwde
xlat
ficom
test
loope
xchg
retf
(bad)
(bad)
inc
les
jb
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
(bad)
fidiv
and
inc
and
inc
out
and
cmp
dec
mov
mov
sbb
int3
cmps
xor
mov
lods
out
sar
mov
(bad)
(bad)
(bad)
jg
lahf
ins
mov
xchg
adc
jle
push
jns
das
mov
and
je
(bad)
(bad)
call
or
repnz
dec
push
jo
gs
out
jle
(bad)
repz
mov
(bad)
(bad)
(bad)
call
retf
int3
cli
mov
js
mov
test
cwde
cmp
test
(bad)
(bad)
(bad)
cli
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ins
rol
ss
push
out
mov
movs
(bad)
(bad)
(bad)
inc
inc
jno
mov
ja
(bad)
ins
pop
push
dec
sub
or
sub
adc
frstor
cwde
mov
nop
bound
(bad)
call
xchg
push
(bad)
push
hlt
out
les
fdecstp
jmp
lea
(bad)
inc
sub
sub
dec
jo
outs
sbb
sub
loope
fdivrp
(bad)
dec
arpl
and
dec
in
mov
movs
ret
addr16
test
mov
lahf
sub
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
(bad)
(bad)
inc
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
jecxz
hlt
pop
arpl
lods
(bad)
loope
int3
mov
stc
dec
xlat
loopne
adc
dec
and
popf
mov
test
and
pop
ins
cmp
les
adc
sub
dec
addr16
(bad)
(bad)
inc
test
jns
or
cmp
popf
cmps
push
mov
xchg
adc
add
pop
xor
cdq
bound
fcom
into
pop
dec
loope
(bad)
(bad)
(bad)
call
cli
push
xchg
sub
int3
bound
mov
xor
call
mov
pop
cld
(bad)
(bad)
jmp
xchg
dec
ins
das
mov
adc
test
push
and
sub
adc
jns
(bad)
push
movs
dec
mov
movs
daa
sub
repnz
in
(bad)
(bad)
jg
and
out
mov
shl
es
xchg
aas
mov
adc
(bad)
(bad)
jg
out
sar
mov
gs
pop
jle
aaa
or
jbe
dec
div
(bad)
fucomip
call
aas
mov
and
push
push
add
test
pop
mov
(bad)
jmp
retf
push
mov
lea
push
adc
(bad)
cld
mov
fwait
pop
(bad)
test
or
stc
sbb
sub
(bad)
(bad)
inc
mov
inc
leave
in
push
ja
pop
sub
das
sbb
(bad)
(bad)
inc
fild
sbb
repnz
adc
dec
jae
adc
cmp
and
(bad)
adc
(bad)
(bad)
(bad)
jp
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
call
sar
pop
outs
jge
aaa
ss
fidiv
test
xchg
xor
push
std
(bad)
jmp
xor
(bad)
mov
fsub
leave
pop
(bad)
(bad)
(bad)
jmp
and
mov
and
mov
sub
fidivr
sub
icebp
(bad)
(bad)
(bad)
ds
sbb
sub
call
das
ror
jno
pop
(bad)
(bad)
(bad)
fistp
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
cmc
(bad)
(bad)
dec
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
xlat
fild
outs
jmp
loop
in
ja
add
jg
push
push
or
bound
stos
sub
shr
aam
cmps
gs
(bad)
(bad)
(bad)
mov
and
imul
dec
pop
mov
push
pop
outs
jns
dec
cld
arpl
dec
retf
or
xchg
mov
(bad)
(bad)
(bad)
dec
cwde
dec
cwde
call
test
shl
inc
xor
inc
jae
cmovo
out
outs
cmps
mov
mov
push
ds
call
(bad)
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fist
pop
xchg
data16
(bad)
out
clc
pop
mov
movs
pop
lock
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
(bad)
(bad)
push
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
mov
(bad)
(bad)
jmp
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
adc
inc
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
(bad)
jmp
les
clc
dec
jmp
ret
cmp
inc
icebp
xchg
(bad)
(bad)
(bad)
inc
hlt
mov
xchg
(bad)
test
pop
js
push
aaa
mov
fidivr
jecxz
fstp
jno
mov
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
(bad)
(bad)
(bad)
jmp
shr
out
pop
sbb
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
pop
cld
(bad)
call
ret
xchg
ret
mov
call
dec
retf
lahf
lds
pop
cmc
(bad)
call
or
je
inc
int3
inc
ins
xchg
sbb
ror
mov
xchg
ja
ins
nop
(bad)
(bad)
(bad)
jmp
inc
sub
pushf
cmps
xchg
stos
push
fs
repnz
clc
(bad)
mov
sahf
(bad)
(bad)
(bad)
call
jns
popf
and
mov
adc
xor
xor
dec
mov
(bad)
(bad)
call
or
(bad)
in
popf
or
dec
add
mov
(bad)
mov
push
pop
cmp
(bad)
jmp
mov
adc
fadd
arpl
pop
xchg
shl
test
(bad)
(bad)
(bad)
dec
add
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
(bad)
(bad)
(bad)
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
dec
adc
inc
not
xor
mov
ficomp
mov
(bad)
mov
addr16
stos
out
scas
mov
push
xchg
bound
pop
imul
xor
dec
or
loopne
outs
add
(bad)
dec
(bad)
(bad)
(bad)
(bad)
fsubr
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
lods
loop
mov
cmps
(bad)
addr16
hlt
outs
into
int
jg
(bad)
call
hlt
adc
sahf
rcr
xchg
call
jae
lods
and
cld
(bad)
(bad)
push
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
(bad)
fild
adc
xchg
fstp
(bad)
iret
aas
sub
idiv
(bad)
jg
adc
jmp
in
inc
push
clc
sub
les
and
lock
loop
outs
dec
jg
or
(bad)
jge
aad
shl
cmc
push
lds
xchg
lahf
mov
(bad)
out
cli
(bad)
mov
xchg
(bad)
hlt
adc
call
fwait
pop
aas
test
mov
sbb
(bad)
(bad)
jmp
adc
test
lods
loope
jg
test
push
shl
pop
mov
sbb
pop
mov
dec
test
ret
cmp
das
retf
jnp
dec
ja
prefetchw
or
jae
(bad)
(bad)
(bad)
inc
add
dec
mov
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
clc
(bad)
(bad)
(bad)
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
(bad)
(bad)
out
inc
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
dec
pop
fwait
push
add
in
mov
dec
leave
xor
inc
(bad)
(bad)
(bad)
jmp
mov
adc
push
mov
aaa
pop
in
push
loope
inc
call
cwde
call
div
mov
clc
inc
add
and
push
cdq
scas
xlat
cmp
inc
inc
mov
xor
mov
in
pop
shl
push
mov
(bad)
(bad)
(bad)
inc
sbb
jmp
bound
inc
xchg
out
xor
or
sub
push
in
(bad)
(bad)
inc
or
cmps
out
xor
or
xchg
movs
loope
mov
(bad)
(bad)
(bad)
jmp
dec
pop
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
adc
shl
pop
xchg
idiv
sub
sbb
repnz
and
(bad)
(bad)
mov
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
push
(bad)
(bad)
call
jmp
xor
(bad)
and
push
mov
rol
outs
mov
push
or
(bad)
(bad)
(bad)
call
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
(bad)
(bad)
(bad)
inc
adc
jp
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
(bad)
(bad)
inc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
jmp
aam
jmp
(bad)
stc
mov
mov
lock
imul
ss
test
call
cs
mov
call
mov
loope
into
cs
(bad)
(bad)
(bad)
jg
aas
add
add
pop
std
pop
jmp
icebp
and
sub
aam
(bad)
(bad)
jmp
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
(bad)
(bad)
jmp
push
adc
cmp
adc
mov
jle
cmp
pushf
in
adc
loope
mov
cmps
push
data16
jno
ds
outs
sub
mov
add
(bad)
(bad)
dec
xchg
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
pop
test
dec
jp
or
xchg
popa
mov
fdivrp
ja
xor
cdq
or
(bad)
(bad)
(bad)
mov
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
(bad)
(bad)
(bad)
dec
jle
jl
out
sub
xchg
sbb
mov
repnz
inc
jmp
cli
(bad)
ficomp
fcmovbe
jge
fucom
jmp
aam
push
sub
push
imul
(bad)
(bad)
stc
jp
gs
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
(bad)
(bad)
inc
mov
add
ror
aam
ror
mov
xor
mov
ins
fstp
leave
(bad)
lods
mov
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
(bad)
(bad)
(bad)
mov
push
cmp
hlt
mov
mov
and
mov
movs
movaps
mov
(bad)
inc
fnstenv
das
outs
jl
pop
push
sbb
cmp
add
cld
(bad)
(bad)
(bad)
cwde
shl
mov
jno
test
lahf
mov
push
std
mov
leave
les
and
or
sbb
or
mov
xchg
fs
xchg
out
pop
add
push
hlt
sbb
(bad)
push
test
fdiv
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
call
inc
adc
mov
jl
fstp
mov
jl
sti
aam
fbld
dec
gs
mov
test
into
mov
mov
movs
inc
(bad)
(bad)
(bad)
(bad)
cmp
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
cli
(bad)
push
add
pop
fisttp
jno
daa
add
mov
cmp
or
xchg
mov
and
mov
aam
into
popa
in
(bad)
(bad)
call
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
icebp
jmp
call
sub
inc
cmp
(bad)
push
std
jmp
adc
jecxz
or
xchg
cmp
pop
test
push
iret
or
or
popf
or
scas
daa
jge
sahf
mov
setae
mov
push
mul
pop
cmp
(bad)
jmp
retf
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
sar
(bad)
mov
mov
aad
(bad)
mov
push
fadd
les
repnz
(bad)
call
loopne
mov
addr16
mov
fisttp
ss
fmul
sbb
push
std
add
inc
add
fbld
ret
test
fist
outs
mov
inc
imul
data16
(bad)
(bad)
jmp
mov
int3
or
xchg
mov
add
mov
lds
or
sub
(bad)
(bad)
push
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
(bad)
(bad)
jmp
pushf
add
or
ss
jb
addr16
(bad)
mov
mov
jp
jnp
sub
xchg
ror
(bad)
(bad)
(bad)
mov
or
fbld
xchg
rcl
icebp
aam
inc
push
fiadd
int
mov
call
mov
loope
mov
ja
pop
out
punpckhdq
push
cmp
adc
or
(bad)
(bad)
(bad)
call
imul
iret
inc
mov
or
adc
ret
(bad)
(bad)
(bad)
jmp
popa
shl
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
jmp
lds
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
scas
clc
push
add
push
ficom
and
addr16
jp
les
mov
sub
jmp
or
mov
sub
sbb
xor
(bad)
dec
sub
add
ja
inc
push
pop
cmps
xchg
xchg
(bad)
enter
(bad)
(bad)
(bad)
call
ret
cli
out
call
retf
lods
mov
or
scas
jle
sahf
sub
dec
ret
(bad)
(bad)
(bad)
call
and
js
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
call
sub
retf
call
(bad)
jmp
xchg
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
idiv
call
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
cld
imul
sub
sbb
ins
fild
pop
cmc
push
repz
pop
pop
mov
jo
jno
imul
sub
mul
sbb
jne
sar
inc
mov
sti
push
test
jns
mov
cmp
jns
push
dec
(bad)
(bad)
jmp
push
lds
jge
fisubr
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
(bad)
(bad)
dec
mov
cmp
lds
or
xchg
into
pop
int3
add
inc
call
sub
xlat
xor
cli
bound
pop
push
mov
lea
(bad)
(bad)
(bad)
call
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
(bad)
(bad)
(bad)
ficomp
test
unpckhps
sbb
jo
cmp
std
imul
add
or
add
lahf
loop
cmps
int3
and
mov
loope
cld
push
cld
mov
shr
lahf
adc
xchg
mov
leave
dec
and
rcl
jmp
jg
sub
das
aas
jns
ss
mov
or
je
adc
(bad)
(bad)
fcomip
xor
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
sar
(bad)
(bad)
call
cmp
call
js
cmps
cmp
sbb
or
cli
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
push
fdiv
adc
out
movs
add
test
mov
push
ja
cmp
(bad)
call
fst
ss
daa
mov
fnstsw
pop
hlt
(bad)
inc
bound
(bad)
lds
(bad)
out
hlt
push
out
rcl
pop
cli
jmp
sbb
test
xor
imul
(bad)
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
cwde
mov
in
test
xchg
(bad)
(bad)
(bad)
jmp
lahf
mov
mov
(bad)
repz
cmp
call
imul
or
(bad)
(bad)
(bad)
ds
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
add
std
push
arpl
ja
cli
xlat
dec
shl
out
stc
add
xlat
push
outs
(bad)
(bad)
jg
xchg
adc
lea
or
mov
pop
inc
sbb
ins
je
aas
les
(bad)
(bad)
(bad)
dec
push
test
cwde
inc
jle
test
ror
cmp
hlt
pop
mov
cmps
popf
stos
(bad)
(bad)
(bad)
call
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
jmp
mov
xor
mov
xchg
push
mov
repz
inc
gs
(bad)
(bad)
jmp
outs
jne
mov
call
or
push
aas
gs
jns
cld
(bad)
jmp
(bad)
mov
sbb
mov
daa
repnz
mov
mov
out
(bad)
(bad)
(bad)
out
and
loope
or
mov
jle
shl
imul
inc
cmp
(bad)
jmp
imul
hlt
out
push
or
test
mov
adc
mov
aas
int3
xor
ret
add
mov
lods
test
push
retf
ret
lea
dec
push
test
adc
psrlw
(bad)
or
(bad)
dec
push
out
loope
sbb
fs
xchg
push
or
cmp
sbb
mov
inc
pop
mov
sbb
lods
sbb
popa
fwait
sbb
mov
(bad)
(bad)
(bad)
call
xor
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
mov
in
(bad)
(bad)
(bad)
(bad)
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
cmp
add
push
pop
pop
pop
aaa
pushf
jge
xor
add
(bad)
push
push
mov
mov
shr
xor
add
and
in
mov
cmps
daa
(bad)
(bad)
call
aam
es
dec
dec
and
cdq
and
and
adc
sub
ficomp
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
(bad)
(bad)
jmp
div
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
(bad)
(bad)
(bad)
push
push
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
mov
mov
cli
fisub
nop
jmp
ja
(bad)
cmp
call
xor
imul
jg
arpl
popa
sub
push
cmps
push
std
(bad)
call
aam
fs
mov
dec
xlat
retf
and
mov
dec
jmp
add
sbb
arpl
dec
sbb
retf
dec
pop
mov
dec
(bad)
(bad)
(bad)
call
call
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
(bad)
(bad)
(bad)
dec
push
addr16
jne
ds
mov
or
ror
adc
push
(bad)
(bad)
(bad)
(bad)
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
jle
(bad)
jmp
sbb
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fcos
(bad)
call
stos
mov
or
cmp
in
paddsb
hlt
popa
call
(bad)
jmp
jmp
stos
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
(bad)
(bad)
jmp
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
(bad)
(bad)
call
lea
int
js
pusha
fdivr
mov
fstp
jecxz
fidiv
(bad)
(bad)
(bad)
(bad)
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
shl
(bad)
(bad)
(bad)
inc
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
sub
(bad)
dec
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
nop
ins
cld
ja
mov
inc
cs
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
out
clc
dec
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
dec
call
(bad)
(bad)
push
pop
mov
mov
sbb
mov
or
(bad)
(bad)
(bad)
jmp
pop
push
mov
sbb
int3
push
test
arpl
aad
or
(bad)
call
mov
stos
data16
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
(bad)
(bad)
(bad)
inc
das
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
(bad)
(bad)
(bad)
push
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
xlat
cld
(bad)
(bad)
jmp
push
mov
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
(bad)
mov
gs
or
mov
mov
out
(bad)
bound
mov
and
xlat
cmp
or
outs
mov
(bad)
(bad)
mov
mov
loopne
ja
pop
arpl
push
push
sbb
call
adc
(bad)
(bad)
call
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
jmp
movs
mov
xchg
rcr
mov
(bad)
and
xor
(bad)
dec
addr16
xchg
shr
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
(bad)
(bad)
(bad)
cmp
mov
(bad)
dec
pop
loop
aas
jmp
jecxz
in
fmul
lock
xor
(bad)
jmp
pop
and
sub
sahf
push
dec
jg
outs
test
or
(bad)
call
rcr
lahf
ror
and
lds
sub
mov
inc
and
(bad)
(bad)
push
(bad)
xchg
test
call
cmp
xor
not
adc
iret
push
retf
mov
jg
loope
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
imul
jnp
das
push
ret
ja
imul
setl
(bad)
sub
mov
dec
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
mov
clc
(bad)
jmp
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
das
out
mov
(bad)
aas
mov
xchg
pop
in
mov
pusha
ret
push
dec
(bad)
(bad)
(bad)
jmp
mov
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
adc
(bad)
inc
push
imul
pushf
rol
push
jb
pop
(bad)
(bad)
jmp
push
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
(bad)
mov
popf
and
pop
jle
js
mov
xlat
scas
xor
in
pop
mov
call
cld
cmp
rcr
pop
mov
in
sbb
bound
and
inc
sbb
lock
push
jmp
sub
sahf
aam
push
stc
mov
in
pop
cmp
cmps
(bad)
(bad)
call
xor
or
cmp
movs
add
sub
scas
cmc
(bad)
(bad)
dec
test
and
mov
mov
sbb
ror
sar
jmp
(bad)
inc
shr
movs
not
cmp
and
dec
imul
cmc
dec
(bad)
(bad)
call
jle
out
ror
ret
push
jp
jmp
fnop
jmp
(bad)
mov
jmp
stc
popa
call
rcr
mov
ss
jmp
rcl
call
xchg
(bad)
loope
xchg
adc
int
(bad)
(bad)
jmp
lods
mov
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
(bad)
(bad)
(bad)
out
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
call
(bad)
jg
inc
push
xor
es
jmp
fdiv
inc
mov
bound
(bad)
inc
cmp
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
adc
push
(bad)
(bad)
(bad)
push
ss
adc
out
mov
loopne
jbe
pop
not
dec
jmp
ds
(bad)
(bad)
call
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
jl
mov
(bad)
(bad)
call
pop
sbb
mov
repz
in
test
adc
ja
mov
ret
add
call
(bad)
cmp
cdq
in
or
pushw
cmps
fidiv
(bad)
(bad)
(bad)
jmp
fisubr
sar
lock
out
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
jmp
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
pusha
jb
jp
js
push
push
adc
fwait
div
dec
jle
pop
push
jo
xor
shl
dec
inc
sub
push
pusha
and
xlat
frstor
inc
loopne
push
test
iret
pop
sbb
pop
cmp
cmp
add
pop
adc
jns
out
mov
mov
(bad)
jns
lock
adc
adc
jns
out
xor
or
sahf
and
add
inc
call
lahf
pop
push
sbb
add
push
jl
out
loopne
cmp
sahf
pop
(bad)
ins
sub
cmp
repz
iret
repz
add
mov
repz
les
bound
repz
rep
add
cmp
pop
pop
sbb
cmp
aam
push
repz
repz
mov
cmp
aas
iret
add
or
xor
cmp
repz
pcmpgtd
iret
repz
lods
push
xchg
or
repz
push
pushf
arpl
jns
repz
push
outs
cs
out
mov
dec
cld
add
iret
adc
adc
repz
cmp
popa
and
cmp
inc
loop
sbb
repz
cmp
jns
ror
repz
imul
push
hlt
pushf
cmp
push
adc
cli
add
jne
retf
sahf
out
and
jns
sahf
inc
jmp
out
cmp
jns
out
or
dec
sahf
out
adc
jae
jns
out
(bad)
arpl
cmps
add
sahf
out
inc
out
sbb
out
xchg
jnp
(bad)
imul
jns
mov
mov
xchg
out
not
ja
jns
sahf
aaa
into
addr16
scas
out
jns
pop
xchg
pop
in
dec
sahf
pop
sahf
jg
fidivr
cmp
mov
dec
pop
xor
inc
inc
mov
loope
jb
pop
jb
mov
test
leave
test
jmp
test
lds
pop
jb
movs
in
and
jb
aad
test
cmc
int
test
in
popf
pop
enter
mov
xchg
ret
mov
jecxz
rol
and
mov
enter
retf
stos
jmp
enter
fstp
sti
(bad)
jb
pop
jb
out
pop
jb
pop
xlat
mov
enter
iret
scas
pop
enter
lahf
fild
pop
enter
sub
pusha
sub
call
adc
add
adc
inc
int
pop
test
sbb
add
pop
inc
xchg
stc
adc
add
push
sahf
out
add
xor
cmps
push
popa
pusha
add
imul
or
inc
imul
pusha
pop
add
outs
or
add
dec
out
push
retf
push
les
or
push
add
test
adc
xchg
xor
cmp
lock
and
push
movs
inc
xor
adc
push
add
call
sbb
and
sub
sbb
inc
pop
test
mov
sbb
jnp
adc
cmp
mov
jne
cmp
xlat
pusha
adc
jmp
or
or
add
test
add
or
sbb
bnd
ds
(bad)
or
loop
jmp
repz
fcmovnbe
(bad)
push
add
sbb
iret
repz
sbb
sbb
inc
and
xor
xor
sub
pop
cmp
inc
imul
outs
or
mov
shl
push
out
jns
jnp
mov
mov
pusha
jo
add
clc
lods
add
jl
sar
test
jge
push
add
adc
out
pop
mov
or
add
xor
add
cwde
imul
xor
dec
cmp
cmp
jo
cld
add
jmp
pop
(bad)
outs
sbb
bound
test
add
into
jbe
xchg
stc
jg
je
dec
rcr
dec
add
add
ror
data16
or
ficom
push
add
imul
jle
add
jecxz
ss
outs
dec
add
cmp
push
sbb
add
sahf
xchg
mov
mov
push
xchg
mov
fild
pusha
mov
add
mov
retf
or
fisub
ds
js
inc
loope
dec
mov
ins
sbb
add
adc
fadd
add
mov
retf
sub
fadd
push
inc
imul
imul
dec
ret
lods
add
jb
shl
pushw
adc
or
add
mov
xor
test
(bad)
add
jne
cli
popa
mov
dec
inc
das
add
or
mov
repz
stos
cmc
pop
fdivr
clc
stc
cmp
out
comiss
or
ret
cmps
adc
adc
xchg
xchg
or
adc
dec
add
add
push
pop
push
adc
xchg
sub
and
mov
mov
das
fnsave
mov
mov
xchg
or
sub
das
add
in
mov
outs
ds
fisub
in
or
je
pop
ins
jnp
enter
loopne
or
fcmovu
arpl
aaa
bound
mov
(bad)
sbb
imul
ins
enter
add
cwde
add
jbe
jg
les
(bad)
pop
fadd
es
nop
add
jb
mov
jl
add
xor
movs
popa
pop
ret
pop
cmp
jp
xchg
mov
movs
xor
outs
(bad)
cs
int
daa
dec
mov
retf
shr
mov
cmps
mov
sahf
push
inc
sbb
add
pop
movs
les
add
pop
dec
push
and
gs
dec
adc
dec
popa
sub
mov
or
outs
lods
(bad)
dec
or
xor
xchg
movs
push
dec
mov
push
push
dec
and
mov
jbe
ja
add
and
retf
mov
push
jb
and
fdivr
push
sbb
in
push
jne
and
or
dec
cld
call
push
jns
push
xchg
xor
sbb
and
aaa
aaa
xor
nop
add
dec
cmps
imul
lds
rol
or
test
outs
jbe
fcmovnbe
add
inc
mov
or
(bad)
aaa
inc
mov
gs
cmp
add
mov
add
and
(bad)
inc
pop
push
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
push
sub
xor
xor
pop
xor
jno
jp
(bad)
xor
xor
xor
xor
xor
call
xor
xor
pop
xor
(bad)
(bad)
push
xor
shl
call
aaa
fnsave
mov
cmp
cmp
test
fild
cmp
cmp
aas
clc
aas
(bad)
mov
rcr
xor
jl
div
sub
(bad)
(bad)
push
pop
aaa
cdq
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fbld
(bad)
cmp
test
mov
mov
ds
(bad)
(bad)
(bad)
fidivr
jmp
ds
push
aas
pop
aas
sub
xor
inc
aas
dec
aas
push
aas
pop
aas
sar
aas
(bad)
aas
call
xor
int3
push
xor
(bad)
xor
xor
xor
jg
(bad)
sti
xor
xor
xor
xor
xor
xor
jo
xor
xor
inc
shl
fbstp
icebp
cmp
(bad)
aas
sbb
xor
xor
xor
cli
jecxz
xor
(bad)
(bad)
(bad)
cmp
xor
xor
xor
xor
xor
lea
clc
xor
push
sub
lods
fcomip
dec
data16
cmps
ss
ss
fidiv
in
div
paddd
or
and
aaa
ins
aaa
out
out
aaa
jns
ret
(bad)
(bad)
jmp
cmp
cmp
cmp
dec
cmp
push
cmp
outs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
pop
cmp
inc
mov
ret
xor
xor
xor
xor
(bad)
push
inc
ss
bound
imul
(bad)
ss
ss
ss
mov
les
retf
fdiv
cld
(bad)
(bad)
call
cmp
pop
cmp
cmp
cmp
cmp
dec
push
jo
add
cmp
cmp
or
mov
mov
mov
and
add
(bad)
dec
inc
repnz
int
jecxz
inc
add
aas
in
jg
fdiv
rcr
push
lahf
das
jg
repz
(bad)
in
call
cdq
mov
div
sbb
xchg
sub
dec
in
xchg
repnz
pop
xchg
das
test
jle
jg
push
stc
pop
add
dec
add
mov
retf
push
ret
xchg
add
cmps
ins
xchg
push
leave
add
push
xchg
mov
nop
imul
aas
pusha
pop
add
jne
js
cmp
jg
add
call
and
add
loopne
and
repnz
add
cs
jg
pop
neg
nop
pop
jle
add
dec
jo
fldenv
add
inc
dec
xor
xlat
mov
(bad)
shr
push
inc
mov
cmp
iret
mov
or
into
outs
add
dec
fdivr
xor
sbb
not
or
in
mov
adc
mov
(bad)
(bad)
mov
jne
pop
mov
dec
xor
inc
inc
test
jg
xor
adc
loopne
mov
or
mov
push
pop
mov
cmp
hlt
and
(bad)
out
and
or
push
call
cmp
or
xchg
mov
xor
push
js
mov
jnp
ja
inc
cmp
je
call
push
call
test
out
xor
ret
push
into
call
fistp
push
data16
inc
call
and
mov
sbb
mov
call
mov
lock
xor
stc
pop
inc
add
add
cmp
jle
cwde
lock
push
or
or
jmp
or
push
jb
call
or
inc
add
inc
in
je
mov
lea
sub
pusha
out
inc
nop
mov
pop
lea
sub
adc
mov
test
(bad)
jl
xchg
lock
outs
xchg
add
xchg
push
mov
call
lds
sti
xor
cmps
mov
pop
pop
in
shr
bound
sbb
cwde
xor
enter
fcomip
lock
mov
push
lea
sub
lea
call
or
pop
push
push
push
call
cmp
mov
cdq
sbb
shl
push
push
ficom
push
mov
or
jle
or
(bad)
jp
add
icebp
inc
cmp
stc
pop
mov
pxor
icebp
xchg
push
dec
mov
add
jnp
fadd
or
mov
into
add
xchg
push
xor
xchg
mov
cmps
pop
cmp
mov
loop
nop
shl
or
push
call
shl
sbb
xor
inc
push
or
inc
mov
push
loopne
loopne
pushf
xor
xor
call
ds
cld
call
mov
stc
jle
cmp
jle
cdq
sub
sar
jmp
adc
jg
clc
sbb
setle
dec
and
cmp
ret
js
or
xlat
jge
sub
(bad)
mov
repnz
add
fldenv
pop
fidiv
jo
or
jl
adc
aas
into
cmp
add
mov
mov
adc
push
mov
pop
push
movzx
adc
xor
rol
cld
popa
sbb
(bad)
xchg
inc
jl
push
mov
jmp
cmp
dec
lock
fidivr
je
sub
mov
(bad)
sub
mov
call
mov
popa
xor
add
rcl
push
add
jl
xchg
cmp
jae
pop
loope
push
push
hlt
mov
(bad)
dec
xchg
pop
and
and
fs
movs
push
(bad)
cmps
mov
call
bound
call
inc
add
inc
loopne
rol
jmp
push
adc
pop
push
pop
mov
div
icebp
add
call
pop
popa
xor
mov
inc
inc
inc
inc
push
jne
pusha
xor
inc
(bad)
(bad)
pop
(bad)
mov
mov
lahf
adc
adc
push
push
add
js
jne
push
pusha
inc
rol
mov
bound
jo
sti
inc
mov
add
je
cmp
jg
cmp
out
cmps
jle
dec
push
sub
pop
cmp
jo
or
leave
cmp
lahf
mov
lds
sub
xor
sbb
jns
add
mov
pop
cwde
fdiv
add
into
push
push
call
call
add
mov
fsubr
add
adc
add
mov
shl
cdq
adc
(bad)
ror
push
add
push
call
add
sbb
dec
adc
mov
sub
add
sbb
loope
jne
shl
(bad)
adc
mov
inc
cmp
mov
xor
add
js
push
jnp
push
fsubrp
push
xor
or
push
in
or
clc
mov
push
mov
add
addr16
jg
icebp
stc
cmps
jmp
jmp
and
not
ss
xor
cmps
sbb
sub
je
inc
or
stc
lea
out
jmp
(bad)
push
sbb
cmps
jle
test
push
mov
push
cmps
pop
xor
inc
cmp
jne
lea
push
mov
or
fld1
xor
test
daa
test
jp
ror
bound
xor
add
add
call
retf
add
jmp
push
cmp
add
jmp
xlat
mov
cli
dec
push
in
dec
push
ss
and
imul
into
cmp
jl
rcr
clc
add
cld
fadd
jmp
mov
push
pop
mov
es
ret
hlt
pop
inc
cmp
mov
sti
or
lods
push
sbb
aam
dec
cmp
shl
ret
adc
pusha
jae
add
imul
aam
div
add
push
imul
mov
aad
jl
mov
data16
jne
ret
mov
test
cli
adc
mov
call
pop
mov
test
or
(bad)
mov
dec
inc
enter
dec
or
pop
adc
cdq
sbb
or
jle
push
sbb
push
xchg
cmp
push
sbb
lock
call
push
outs
mov
lea
pop
je
loopne
shl
cmp
sub
rol
push
sbb
push
mov
call
inc
add
xlat
pop
xchg
adc
(bad)
outs
add
aad
add
jge
stos
mov
mov
fnstsw
push
ret
jmp
popa
outs
or
cmp
mov
push
stos
push
push
push
xor
add
jle
lahf
pop
rol
inc
mov
pusha
iret
shl
les
sti
or
sbb
pop
xor
test
mov
add
add
mov
mov
cmp
inc
and
push
add
stos
fcom
mov
div
jne
fdivr
or
jo
pop
xor
ja
je
mov
mov
clc
aas
lea
push
pop
dec
call
push
mov
hlt
adc
icebp
or
jo
je
fdivrp
mov
mov
ror
mov
pushf
sbb
jl
iret
repz
sbb
xor
or
lods
jmp
or
cld
pop
scas
adc
loopne
push
clc
adc
in
mov
mov
or
adc
iret
inc
push
adc
ss
lea
fs
fwait
ret
or
rol
mov
aas
jne
rcr
xchg
mov
(bad)
push
adc
add
add
rcr
adc
add
lods
mov
push
fstp
loop
cmp
push
cmp
(bad)
push
sahf
pop
jl
in
push
leave
mov
scas
xchg
mov
xor
push
mov
mov
ret
dec
mov
add
cmp
xlat
jbe
cmp
inc
dec
push
pusha
xor
fmul
adc
popa
xlat
xchg
(bad)
imul
pusha
add
add
mov
idiv
clc
dec
mov
dec
add
(bad)
ror
push
pusha
clc
push
loopne
int
(bad)
add
sbb
inc
adc
sub
add
mov
and
imul
cmps
add
xor
and
dec
cmp
lds
sbb
cmp
(bad)
or
outs
mov
outs
daa
test
cld
stc
call
(bad)
jae
(bad)
sti
or
adc
call
mov
push
jo
(bad)
sahf
pop
jl
pop
je
je
and
comiss
xor
add
cmp
jmp
int
xor
sub
ret
fld
adc
mov
push
jbe
sub
cmps
jmp
add
dec
push
push
mov
cmp
pop
add
pop
pop
pop
mov
je
jmp
data16
xlat
jne
mov
call
mov
cmp
jne
inc
inc
loop
add
cmp
popf
mov
je
retf
mov
jbe
lods
mov
mov
pusha
push
test
hlt
lock
rcr
xor
push
js
push
inc
sub
dec
or
mov
push
jle
lods
mov
pop
push
sub
mov
sbb
cmc
outs
addr16
int3
in
sbb
or
or
out
or
idiv
test
cmp
jl
dec
popf
lods
xor
iret
scas
sti
pop
push
pop
mov
jbe
dec
lock
dec
js
cmp
adc
mov
xchg
inc
push
add
add
inc
imul
add
or
dec
and
or
cmp
jo
fist
sbb
push
pop
mov
cmp
adc
and
adc
inc
cmp
jl
pop
lea
add
pop
test
pop
setge
mov
and
mov
jle
or
push
jmp
nop
in
push
add
or
ret
scas
ss
mov
je
mov
push
push
std
push
test
jne
cmp
jne
test
adc
or
add
jmp
xor
je
clc
out
xchg
pusha
xor
adc
jne
sbb
add
mov
les
aas
cwde
sar
outs
fwait
inc
mov
jecxz
loope
stos
(bad)
push
add
or
call
add
jle
adc
clc
sar
cli
je
mov
setge
shl
fwait
retf
add
sbb
les
lea
call
es
or
and
push
pop
cs
imul
cmp
mov
shl
dec
xchg
mov
xor
outs
mov
mov
xchg
pop
pusha
cmp
test
jg
add
cdq
sbb
je
ror
xchg
into
mov
mov
inc
call
mov
sub
xor
popf
push
xor
pop
inc
push
lea
mov
ins
rcl
push
mov
pop
test
or
dec
adc
outs
add
lods
or
mov
or
jg
(bad)
hlt
mov
push
push
repnz
cmp
adc
pop
sti
jb
adc
cmp
or
sbb
xor
es
cmp
jl
xor
rcr
pop
or
mov
mov
adc
dec
jge
fs
or
jnp
pop
mov
jns
adc
cmp
or
inc
mov
je
fcom
dec
rcr
dec
push
mov
push
xor
cmps
lea
loopne
push
xchg
push
sbb
cwde
mov
(bad)
call
and
add
fcomip
sti
push
sbb
pop
sbb
outs
nop
mov
add
add
in
sbb
ins
cmps
or
or
mov
jmp
pop
adc
idiv
add
mov
sbb
push
jge
mov
inc
adc
jmp
neg
sbb
and
pop
sbb
sbb
stc
loopne
inc
(bad)
test
mov
mov
aas
mov
or
push
push
cmc
jbe
mov
test
add
lock
les
and
pop
js
test
push
pop
mov
pushf
and
nop
sbb
je
outs
mov
inc
in
and
xchg
(bad)
push
invlpg
pop
add
adc
fist
psubsb
mov
push
sbb
loop
cmp
mov
js
test
inc
cmp
adc
or
(bad)
sbb
and
call
mov
sub
push
jge
out
push
cmp
jl
jmp
push
add
add
data16
aam
mov
jle
add
jge
call
mov
ficomp
sub
xchg
and
icebp
(bad)
push
add
sti
push
das
mov
lea
popa
loopne
mov
pop
call
(bad)
push
adc
cld
adc
jno
jl
adc
rol
ja
push
cwde
jge
ja
mov
lock
sub
lods
iret
ret
or
mov
movntq
out
cmp
jl
(bad)
rol
mov
nop
sub
xchg
xchg
xchg
pushf
mov
lahf
ja
pop
repnz
lock
call
sbb
dec
sbb
lock
push
push
call
add
lea
call
rcr
mov
pusha
ds
outs
daa
out
ds
add
popf
or
inc
js
inc
sahf
dec
cmp
cmp
push
call
repnz
push
dec
stos
mul
pop
add
add
dec
ret
jne
add
push
cli
dec
jb
mov
leave
cmp
aas
(bad)
hlt
or
jle
test
sbb
imul
cdq
iret
stos
mov
or
repz
ins
fld1
push
dec
pop
call
hlt
jmp
sahf
push
test
pusha
out
cli
push
(bad)
bnd
lahf
jno
cmp
cmp
jne
cmp
adc
int3
icebp
ss
call
out
mov
leave
push
mov
jl
js
pop
or
fucomip
lods
and
xor
data16
or
in
in
add
out
hlt
adc
add
add
and
mov
add
inc
jle
ret
out
lock
jmp
jmp
js
mov
call
jg
pop
pop
add
int3
jne
stos
lea
add
add
(bad)
mov
inc
(bad)
(bad)
jmp
pop
call
add
stos
mov
retf
ins
cli
mov
adc
call
sbb
outs
test
movs
aaa
or
sub
les
and
scas
icebp
mov
or
mov
call
add
or
imul
add
dec
lea
or
xor
xor
mov
ret
push
test
setp
hlt
and
call
loopne
rcl
retf
jle
icebp
pop
ret
dec
mov
cmp
and
jne
test
repnz
ss
dec
call
and
aaa
adc
call
scas
ss
cld
jl
cmp
jb
jb
mov
call
cli
mov
sbb
aaa
xchg
adc
call
push
(bad)
not
or
push
popa
call
xchg
sbb
(bad)
cld
push
(bad)
lock
aam
cmp
test
out
popa
mov
pop
repnz
mov
shl
sub
mov
lea
mov
out
call
add
call
rcr
pop
mov
sbb
or
(bad)
cmp
mov
pop
jno
sahf
xchg
pop
repnz
cs
add
push
aaa
cli
cmp
adc
out
dec
lds
out
mov
push
repz
dec
adc
adc
mov
in
inc
fcmovne
add
push
popf
mov
push
mov
hlt
in
cs
fcomp
stc
scas
mov
dec
inc
adc
sub
and
pop
sub
push
jmp
mov
add
jb
jo
add
sub
cld
fistp
pop
shl
xchg
and
fisttp
(bad)
jne
dec
xor
lock
push
scas
out
mov
sbb
sub
xchg
push
jp
lock
pushf
sbb
dec
push
mov
add
inc
shl
sbb
sbb
dec
cmp
pop
lods
pop
ficom
inc
retf
push
setne
sbb
and
ret
mov
inc
or
sub
callw
mov
call
jp
pusha
or
cmp
popa
lea
or
ins
push
inc
add
push
mov
mov
jnp
dec
cmp
jo
adc
dec
xor
xchg
and
mov
pushf
stos
push
sub
aaa
push
mov
outs
jne
or
push
loop
scas
sbb
mov
repz
test
dec
and
xor
lods
push
push
adc
(bad)
jb
in
cs
pop
imul
push
or
pusha
dec
inc
movs
xlat
std
rcr
adc
inc
sar
leave
scas
pop
add
(bad)
cld
lea
push
lea
ins
add
add
xor
pop
js
dec
cmp
jne
sbb
repnz
sbb
mov
fcmovbe
sbb
add
mov
jmp
test
add
mov
aad
popf
add
jmp
sbb
nop
je
(bad)
or
or
adc
pop
jmp
cld
push
div
jmp
scas
clc
sbb
data16
add
adc
(bad)
jmp
pop
mov
call
pop
dec
shl
fsub
call
push
push
imul
cmp
call
fidiv
adc
call
sbb
imul
shr
or
jnp
fs
pop
jbe
mov
jmp
inc
push
mov
xor
scas
pusha
xor
pop
clc
adc
add
inc
xor
neg
inc
inc
call
fcom
push
push
cmp
mov
std
jmp
pop
imul
pop
mov
stos
sub
out
mov
sub
ret
imul
xchg
(bad)
paddsw
dec
push
jb
xchg
sti
mov
cmps
dec
push
movs
bound
nop
add
mov
mov
jge
push
inc
clc
lock
xchg
out
mov
js
push
add
push
push
push
cs
mov
or
cmp
cmp
and
data16
in
out
gs
add
outs
add
adc
aam
cmp
fldcw
inc
lahf
mov
mov
jl
adc
or
dec
lock
pop
jns
lock
adc
or
dec
in
pop
mov
cmp
inc
sbb
pop
xchg
or
lock
jne
in
stos
inc
sar
inc
inc
sub
add
fild
jmp
int3
loop
push
or
ins
sbb
add
push
mov
je
cmp
inc
mov
jmp
sbb
mov
jge
shl
jecxz
out
stc
xchg
js
imul
push
mov
mov
enter
pop
or
lods
adc
call
cmp
cmp
clc
cmp
hlt
retf
sub
xchg
das
ja
enter
call
cld
xor
sub
(bad)
inc
out
xchg
out
sub
imul
inc
pop
sub
add
or
aaa
ret
and
mov
lea
jmp
test
je
dec
dec
adc
sub
aam
and
ret
mov
stos
push
ret
hlt
cmp
fist
xchg
lock
jmp
std
and
fwait
in
(bad)
call
lahf
or
enter
mov
inc
pushf
movs
ins
stos
nop
cs
jo
add
add
mov
imul
or
cmovb
jnp
enter
xor
je
or
lock
jge
adc
inc
pop
mov
ret
xchg
pusha
and
out
inc
and
or
or
dec
mov
push
or
adc
add
sbb
mov
inc
sbb
ja
call
and
inc
mov
sar
adc
add
cli
push
push
push
add
sub
jb
adc
sub
and
rcl
cs
outs
mov
int
inc
inc
inc
adc
inc
dec
sub
jae
xchg
and
cmp
inc
and
sbb
and
in
and
pop
dec
pop
test
cmp
fistp
(bad)
mov
in
out
enter
loope
add
dec
pop
int
and
adc
add
push
push
mov
push
retf
(bad)
and
jne
sbb
mov
inc
call
pushf
(bad)
test
je
lea
ins
in
mov
mov
adc
inc
push
das
adc
call
add
mov
out
jne
mov
or
add
push
data16
inc
sbb
(bad)
push
in
enter
in
mov
hlt
in
push
add
push
pushf
call
(bad)
fidivr
sub
cmp
mov
and
(bad)
cmps
adc
and
(bad)
or
mov
shl
les
sub
das
clc
mov
cmp
mov
fcomp
add
call
push
in
xor
adc
xchg
test
pop
sub
into
aaa
and
(bad)
push
jnp
mov
pop
pop
mov
das
add
adc
pop
push
and
pop
mov
pop
mov
add
out
cvtpi2ps
jno
fsub
mov
push
pop
mov
cs
inc
test
loopne
push
inc
jb
loope
add
push
mul
push
das
loope
jle
mov
add
ins
enter
push
pop
add
inc
mov
aaa
xchg
fadd
(bad)
adc
xor
aam
xchg
lods
add
loopne
inc
mov
out
add
clc
neg
or
pop
or
pop
addr16
lahf
out
or
add
push
jno
inc
icebp
sub
sub
xchg
add
popa
jo
mov
fisttp
daa
mov
and
adc
mov
mov
sbb
mov
je
mov
popa
(bad)
adc
or
inc
bnd
cs
in
sbb
fild
jmp
add
call
push
ins
sbb
add
fstp
add
jmp
hlt
push
cld
enter
adc
sub
add
mov
cmps
pusha
xor
dec
or
or
inc
loop
mov
js
(bad)
data16
xchg
dec
cmp
les
pusha
lock
or
dec
cmp
pop
icebp
sbb
jp
add
cli
icebp
inc
or
cmp
or
movs
sub
(bad)
and
xor
pop
mov
or
dec
xchg
pop
neg
pop
loopne
mov
dec
adc
adc
sub
lds
inc
adc
jns
dec
or
or
fild
inc
fimul
outs
ja
cmp
movzx
call
adc
mov
fst
dec
nop
jle
sub
or
or
push
mov
ret
sub
lods
sub
inc
jne
imul
fild
add
jmp
mov
push
daa
xor
sbb
inc
pop
mov
xchg
lods
in
xchg
mov
cmp
jns
pusha
xor
inc
fild
jno
push
adc
push
or
dec
frstor
mov
inc
jge
pop
xor
out
pop
push
(bad)
jo
data16
fnstsw
jecxz
jns
call
xchg
pusha
fwait
add
data16
jo
rcr
fstp
cdq
or
push
(bad)
cmp
add
dec
fwait
push
jmp
sahf
or
rcr
clts
fcomp
mov
call
push
(bad)
push
inc
mov
xchg
jo
adc
push
mov
push
adc
jo
adc
adc
or
inc
cmp
jb
pusha
ins
or
push
rcr
or
and
pop
cli
jmp
mov
lds
cmp
mov
xor
xchg
push
sub
lods
imul
dec
pop
inc
cmp
jb
jmp
call
cmp
mov
test
jae
pop
adc
mov
adc
xchg
outs
std
sub
push
call
jmp
inc
adc
adc
fdivp
pop
addr16
sbb
enter
inc
ja
mov
call
adc
in
jbe
jo
mov
lock
pop
lock
sub
mov
jno
jmp
call
inc
sub
push
pop
pop
fwait
xor
push
cmps
pop
add
sbb
lock
cs
fs
push
push
ins
pop
mov
aad
push
ret
shr
outs
jge
in
add
pop
push
jmp
add
aas
xchg
(bad)
std
sub
mov
out
sub
push
mov
and
jl
pop
xlat
cmp
mov
adc
fstp
pop
clc
call
add
js
aam
enter
push
loope
fist
call
pop
add
enter
mov
push
push
scas
lock
call
call
mov
push
jae
xchg
popa
lds
jae
sbb
call
push
push
(bad)
jmp
mov
inc
ss
lea
mov
dec
sbb
add
adc
test
je
cwde
adc
(bad)
pushf
clc
xchg
sub
inc
xchg
push
loopne
mov
sahf
sar
push
add
fistp
stc
loop
call
sub
pop
dec
and
bound
call
mov
enter
and
test
cmp
jne
clc
dec
(bad)
aad
mov
retf
add
mov
outs
ret
adc
mov
xor
jle
jns
pop
add
or
add
jmp
jp
adc
ror
test
and
xor
sbb
or
aas
or
add
les
add
mov
js
cmp
js
repnz
pop
xchg
or
mov
addr16
pop
test
add
inc
repz
xchg
test
push
pop
inc
call
adc
mov
sbb
jmp
adc
fcom
add
hlt
adc
push
sbb
(bad)
in
pop
leave
loop
or
test
(bad)
jnp
push
loope
push
popf
mov
jo
dec
call
or
mov
mov
scas
fimul
sub
pusha
ret
rcl
stos
and
sub
and
kxnorb
in
sahf
xor
out
xchg
jbe
mov
xor
(bad)
loop
push
jo
cmc
adc
mov
sti
ret
fs
imul
push
mov
push
call
pop
fisttp
xchg
pop
mov
jge
jmp
inc
inc
mov
sbb
or
or
aad
retf
inc
sub
jmp
push
mov
or
lea
mov
push
ror
push
stc
imul
adc
mov
cmp
sbb
push
mov
and
sub
dec
push
xor
cmp
push
cmp
cmp
jne
pop
loope
mov
push
or
and
sar
add
js
pop
pop
in
or
clc
shl
xchg
or
add
stos
mov
xchg
push
fcom
mov
xchg
cs
adc
push
jp
mov
jns
stc
jge
adc
or
adc
adc
(bad)
test
jns
pop
in
mov
add
push
pop
push
mov
(bad)
movs
push
xor
jge
fadd
jb
cdq
jecxz
mov
jmp
dec
push
and
add
jo
popf
and
push
out
call
inc
xchg
sub
and
push
cmp
or
or
dec
inc
sub
cmp
in
sbb
adc
jb
pop
mov
cmp
jbe
fcos
ja
cmps
fs
push
in
or
adc
cmp
inc
pop
lea
xor
jae
pop
sub
lock
mov
clc
jne
retf
es
mov
cmp
mov
push
push
inc
cmp
fstp
ja
push
cmp
sbb
mov
mov
loop
mov
mov
loopne
out
arpl
sbb
adc
push
pop
repnz
or
fdiv
cld
(bad)
(bad)
dec
cmp
aam
hlt
aas
pop
js
test
(bad)
popf
jbe
xor
mov
out
popf
jge
cld
push
or
sub
les
jl
leave
push
mov
jae
or
push
jb
sub
mov
aaa
jle
jbe
jne
daa
outs
push
test
xor
sbb
xor
arpl
push
aas
pop
push
sub
fld
cmp
push
push
mov
mov
adc
xor
mov
dec
(bad)
mov
mov
add
dec
add
pusha
or
dec
ret
push
pop
rcr
pop
outs
ret
add
add
pop
pop
dec
inc
dec
xor
add
retf
add
bound
add
es
mov
and
push
cmp
ja
push
sbb
std
fst
and
sub
mov
lock
push
(bad)
cmps
imul
call
jnp
jb
sbb
mov
xchg
adc
xor
add
add
dec
je
sub
jp
popf
arpl
push
jmp
or
repnz
mov
sub
aaa
and
xchg
and
ja
mov
out
dec
or
inc
je
std
jle
leave
dec
and
in
dec
cmp
(bad)
pop
dec
ins
push
mov
ins
adc
call
repnz
xchg
xchg
pop
das
movs
cwde
(bad)
imul
sbb
mov
rol
sub
adc
jne
dec
add
iret
xor
and
(bad)
loope
and
or
dec
sub
test
adc
push
pusha
mov
rcl
add
cmp
cmp
fwait
nop
dec
and
out
pop
sbb
addr16
push
sub
mov
ror
cld
pop
cmp
xor
and
or
xchg
cs
and
and
push
sbb
nop
inc
push
dec
sub
add
jge
test
sbb
mov
js
pop
sbb
out
popa
jbe
cs
mov
loopne
pop
fwait
jge
dec
push
pusha
sub
(bad)
mov
inc
(bad)
lock
imul
(bad)
in
sti
jmp
and
add
push
and
je
push
mov
adc
push
sbb
jmp
jmp
xlat
clc
add
loop
sbb
ret
or
into
cld
fs
fisttp
jmp
jmp
arpl
adc
xchg
mov
mov
fdiv
dec
cmp
es
jmp
sbb
test
scas
sub
add
or
sub
mov
sbb
mov
push
mov
pop
and
mov
outs
retf
add
sti
lds
ret
xor
push
call
mov
cmp
mov
repz
or
cpuid
mov
push
adc
ret
mov
mov
scas
jle
sbb
dec
or
mov
or
cmp
xor
mov
inc
hlt
clc
add
sbb
pop
jae
pop
loope
mov
dec
dec
xor
loop
mov
test
and
inc
xchg
cmc
mov
pop
adc
xchg
fwait
das
jecxz
xor
adc
mov
inc
mov
out
outs
(bad)
ja
loop
fimul
jp
inc
sbb
adc
dec
sbb
shl
add
and
arpl
loopne
and
add
inc
and
(bad)
push
pusha
push
sbb
mov
jp
xchg
mov
and
aaa
sbb
call
adc
or
sbb
or
retf
lods
rcr
mul
add
mov
push
clc
cmp
xchg
xlat
aam
bswap
ficom
inc
lahf
mov
mov
push
out
ss
lahf
add
adc
ror
fst
(bad)
xchg
and
jae
inc
dec
(bad)
adc
sub
pop
call
push
ret
pushf
cli
nop
pop
mov
and
dec
cmp
jnp
leave
jae
dec
pop
shl
in
sub
shrd
dec
push
mov
out
inc
ds
or
jne
lea
add
sbb
in
ja
nop
sub
pop
pop
jmp
jmp
adc
pushf
retf
lock
bound
cld
sub
stc
sbb
sbb
out
push
mov
mov
and
sbb
add
push
push
sbb
jno
sub
test
add
jecxz
(bad)
sbb
mov
pop
mov
adc
push
and
pop
and
or
sbb
je
clc
fs
clc
scas
xchg
push
ins
push
adc
or
jg
pop
aas
push
and
xor
lea
mov
mov
add
push
call
and
fdivp
icebp
scas
cld
cmp
mov
aas
and
ret
xchg
and
xor
dec
add
jmp
retf
adc
test
inc
int
pop
addr16
push
iret
mov
dec
ins
out
cmps
mul
(bad)
xor
dec
xor
sbb
rcr
dec
mov
pop
rcl
xor
(bad)
push
loop
inc
out
test
sbb
shr
and
jle
adc
push
mov
push
ret
add
add
imul
sub
push
mov
mov
push
xor
ret
push
(bad)
test
sar
or
add
mov
add
loop
push
dec
adc
or
adc
arpl
dec
adc
test
stc
mov
or
out
add
xchg
or
dec
cmp
jne
movs
cdq
adc
adc
hlt
test
xchg
fdivr
xor
call
ins
lock
push
clc
push
mov
mov
add
cmps
scas
adc
scas
or
inc
add
lods
sbb
xor
push
or
test
jmp
lods
xor
stc
mov
mov
inc
ror
ret
outs
cwde
cmc
inc
call
(bad)
jp
and
adc
js
jmp
loopne
mov
out
retf
or
adc
mov
and
nop
js
pop
clc
xchg
lock
(bad)
sbb
pop
jmp
sbb
cdq
je
push
mov
ss
bound
ins
call
(bad)
xor
or
(bad)
fisub
cli
js
movs
and
mov
test
mov
and
sti
in
xor
jbe
push
lock
call
mov
fs
push
mov
or
sbb
imul
test
push
cld
pusha
ret
call
xchg
sbb
pop
nop
sbb
loope
jp
and
sbb
je
jo
cmp
pop
test
outs
or
mov
test
in
xor
imul
fucomp
dec
ds
cmp
push
call
jnp
mov
mov
add
sub
add
inc
cmps
clc
mov
cmps
stos
and
cli
loop
movs
ja
xor
cmp
sbb
les
call
add
cmps
ss
addr16
sub
pop
and
pop
cmp
je
push
cmp
push
call
ds
(bad)
dec
pop
cli
pop
push
jb
lock
sub
call
ficom
mov
adc
inc
fadd
push
mul
add
sub
clc
jae
mov
mov
jnp
jne
shl
cmovb
outs
or
stc
push
adc
hlt
rcl
add
cld
sbb
add
fiadd
push
rcl
sub
sub
add
leave
dec
sahf
imul
xlat
shl
hlt
adc
das
pusha
mov
adc
loope
arpl
or
je
pop
pop
push
scas
loopne
loop
or
imul
and
call
int3
sbb
jo
add
sti
cmp
mov
pop
inc
dec
add
imul
sub
sbb
mov
or
pop
inc
and
cwde
mov
daa
mov
out
inc
loope
mov
fsub
mov
out
call
cs
imul
in
in
enter
dec
jne
inc
cli
in
pop
adc
inc
mov
call
cmp
jne
jmp
add
ss
push
movs
in
sub
iret
fmul
pop
xor
ror
push
push
je
sbb
xor
add
add
push
pusha
pop
inc
push
xchg
fidiv
add
shr
jne
xchg
adc
cmps
mov
enter
test
ror
das
cmp
in
adc
jle
loope
dec
loope
pusha
mul
call
push
in
lods
push
and
pop
dec
adc
dec
sbb
retf
mov
mov
xchg
dec
lock
jnp
scas
popa
pop
sahf
popf
jnp
repz
dec
inc
cmp
cmps
mov
adc
(bad)
jns
fs
pop
sub
mov
push
cmp
xchg
icebp
jns
adc
jmp
push
aam
cmp
call
or
dec
mov
jne
sub
push
push
mov
cmp
mov
mov
mov
or
cwde
jl
jb
push
xchg
sub
jl
sbb
loopne
mov
push
cmp
rsqrtps
outs
inc
(bad)
nop
xor
or
stos
xor
push
push
cmp
std
and
adc
mov
mov
mov
and
cmp
je
cli
or
cmps
inc
sbb
cmp
inc
add
fdiv
adc
js
fwait
loopne
es
jne
mov
or
test
push
push
adc
mov
inc
pushf
mov
pop
xchg
frstor
pop
enter
(bad)
xchg
test
jbe
clc
mov
cvttps2pi
or
retf
xor
shl
fdivr
dec
and
aam
(bad)
hlt
add
aad
outs
inc
loop
sar
sbb
fadd
call
push
in
cli
sub
mov
inc
dec
and
adc
or
cld
sbb
int
sub
retf
jmp
add
add
inc
mov
xchg
scas
rcl
ror
daa
mov
mov
test
push
sub
push
out
movs
jbe
test
cmp
adc
das
cld
xchg
cwde
in
cmp
xchg
bound
mov
dec
js
jne
inc
mov
jmp
loopne
sub
and
dec
push
add
mov
sub
jmp
and
mov
sub
xchg
mov
fmul
out
sbb
add
or
scas
cmp
xlat
jae
fs
mov
enter
jmp
and
pop
inc
dec
shl
retf
mov
or
std
and
mov
xlat
sub
in
sub
ret
push
inc
test
xchg
icebp
nop
(bad)
dec
ds
nop
mov
nop
out
or
repz
sbb
adc
mov
mov
or
lods
add
xchg
inc
lods
push
pavgw
dec
sbb
inc
sbb
fnstsw
jmp
and
pop
int
jp
push
call
sub
cmp
inc
test
fimul
rcl
sub
dec
adc
add
aas
dec
scas
xor
(bad)
adc
lea
lahf
clc
inc
or
add
mov
call
add
push
jge
out
in
lea
xchg
xor
es
stos
add
adc
xchg
or
test
mov
popa
or
push
sub
cmp
and
add
clc
(bad)
sub
add
adc
call
(bad)
sysexit
jl
cmps
push
sbb
ds
or
sbb
or
xchg
data16
sub
add
mov
jp
nop
or
loope
sbb
jae
fist
push
xor
mov
sub
add
enter
push
pushf
sub
and
cs
test
nop
dec
es
adc
fs
es
or
aam
cdq
nop
dec
sbb
or
adc
jb
(bad)
rcr
lea
sub
shl
mov
inc
mov
mov
inc
inc
inc
lea
div
pop
jle
jmp
in
jg
xlat
mov
add
dec
push
fcomp
out
mov
ins
jbe
pop
or
inc
add
mov
ja
pop
inc
add
add
xchg
fcomp
jbe
pop
pop
mov
or
xor
push
int3
mov
jb
xor
sub
push
adc
mov
test
test
call
adc
push
push
cmp
xchg
addr16
rol
out
adc
sbb
dec
or
mov
mov
inc
jecxz
dec
fs
add
call
push
retf
cmp
jne
pop
push
jle
add
les
mov
sub
aad
jnp
lea
aaa
mov
pop
sub
push
sbb
or
mov
in
je
jmp
push
into
jae
xor
aaa
mov
es
push
push
cmp
cmp
sbb
sub
test
adc
imul
or
pop
jo
xchg
(bad)
pop
pusha
or
gs
cwde
xchg
cmp
outs
ss
or
in
mov
add
int3
adc
rol
and
xchg
repz
lock
std
in
add
adc
push
push
adc
and
lds
jmp
and
repnz
xchg
jmp
aaa
sbb
aaa
mov
mov
test
or
fsin
sub
je
jmp
loop
sti
retf
adc
adc
and
inc
sbb
pop
retf
adc
test
sub
and
dec
dec
je
out
test
scas
or
jo
loope
pop
push
repnz
xchg
pop
sub
add
or
nop
sbb
and
in
mov
pop
inc
cld
jmp
les
daa
ror
sbb
add
enter
pop
sti
leave
cwde
sbb
int
mov
sti
or
imul
add
mov
ficom
jl
sbb
faddp
push
or
push
pop
xor
inc
clc
sub
test
sbb
jl
and
cmp
call
mov
rol
scas
stc
hlt
iret
test
ja
arpl
mov
leave
mov
mov
addr16
loopne
cmps
mov
pusha
and
jbe
frstor
retf
add
adc
cmc
pusha
or
xchg
(bad)
adc
xchg
inc
fld
js
loopne
pop
cs
adc
sahf
adc
movs
cwde
leave
push
cmps
mov
pop
call
lea
dec
cmp
inc
mov
daa
push
mov
sahf
xor
push
sbb
js
sbb
imul
fisub
loopne
and
ret
stos
push
or
pop
mov
mov
mov
aad
clc
inc
push
sub
mov
or
push
jb
mov
add
mov
mov
sbb
sbb
cmps
mov
pop
mov
dec
adc
(bad)
adc
sub
mov
jmp
les
fs
and
rol
(bad)
or
lea
imul
fmul
dec
cmp
push
aam
xchg
xchg
js
cmc
enter
mov
ins
enter
or
inc
or
mov
add
push
push
cmp
sub
adc
or
mov
rol
and
add
adc
sar
jo
push
add
ja
shr
(bad)
addr16
xor
inc
aas
and
cmp
dec
sbb
cmp
sbb
clc
fs
loope
cmp
addr16
stc
mov
dec
shl
xchg
xchg
push
sub
test
dec
fadd
jbe
or
jp
clc
sub
pop
jo
add
cmp
adc
dec
add
inc
push
lea
cmp
cmp
push
mov
jbe
pop
cli
mov
dec
pop
cmp
and
mov
test
sahf
mov
sbb
mov
sbb
das
ss
add
es
dec
data16
sub
test
gs
pop
or
cli
jg
scas
ins
js
push
mov
adc
pop
add
adc
dec
push
pusha
and
retf
ins
and
call
adc
aad
sub
xor
dec
sbb
adc
loopne
js
sti
repz
jge
or
or
out
dec
sbb
adc
shl
fdiv
cmp
lea
sbb
call
mov
cmp
(bad)
shr
les
(bad)
jno
add
mov
add
ret
add
push
add
ror
cmp
adc
jp
inc
(bad)
push
push
pop
mov
pusha
(bad)
jb
sub
leave
xor
inc
or
dec
or
xchg
jle
pop
sar
mov
push
aam
add
dec
sahf
jno
or
xabort
scas
push
jl
jecxz
mov
push
lahf
mov
arpl
sub
repz
repnz
push
fidiv
sar
sahf
(bad)
rol
fstp
push
mov
or
daa
ins
mov
jns
push
sbb
(bad)
mov
dec
sub
movs
fist
pop
adc
jne
cmps
inc
mov
jmp
loope
rcl
push
pop
mov
mov
cmp
and
cmc
mov
ret
cmp
outs
popa
push
inc
push
das
pusha
rcl
inc
adc
mul
(bad)
adc
sbb
dec
sub
cmp
or
movs
push
xor
push
(bad)
mov
outs
adc
in
pop
sbb
pop
mov
add
push
adc
and
out
xchg
shl
push
js
inc
or
push
sbb
sbb
in
mov
push
push
sub
pop
push
imul
stos
sbb
mov
sbb
xchg
call
es
pop
and
pop
mov
cmps
dec
jne
or
jmp
mov
xor
push
mov
xor
movs
in
mov
cmp
jo
and
sub
add
mov
push
test
rol
fnstcw
ds
jb
sbb
ret
loopne
fnstenv
lea
jg
ss
outs
cdq
mov
loop
sbb
jne
ja
and
movs
and
and
pop
imul
mov
pop
push
sbb
cmp
jne
or
add
adc
imul
cld
jl
push
xor
loopne
lock
lods
inc
loop
sar
or
xor
je
inc
js
cmps
cmp
cmp
add
js
(bad)
inc
inc
push
(bad)
pop
ret
jle
or
loop
sub
pop
dec
push
repnz
cld
xchg
push
sbb
dec
push
loopne
sub
sub
popa
add
daa
retf
sti
mov
pop
les
xor
dec
push
sub
out
jle
add
xor
mov
mov
dec
icebp
mov
mov
sbb
pop
aad
pop
mov
jl
out
pop
(bad)
(bad)
xchg
bound
adc
inc
xor
sbb
adc
nop
vunpcklps
and
cmp
ret
pop
pusha
push
in
popa
and
cmp
fidiv
push
sbb
xor
out
in
repz
(bad)
mov
loop
cmp
sub
xchg
cmp
je
js
jle
cmc
stos
dec
aaa
mov
neg
(bad)
js
dec
and
dec
sub
lods
add
mov
ins
mov
popa
mov
add
jmp
fsub
sub
test
call
pop
sbb
fadd
mov
push
mov
dec
adc
hlt
ds
jbe
mov
push
and
mov
mov
sbb
aad
in
sub
dec
add
mov
adc
(bad)
pop
push
jbe
mov
jecxz
fisub
in
xor
mov
(bad)
retf
(bad)
sbb
outs
icebp
nop
sbb
xchg
push
(bad)
xchg
add
or
rcr
push
or
jns
dec
(bad)
adc
mov
les
movs
scas
js
outs
sub
sub
cmps
jnp
cmp
pop
cmps
in
adc
scas
or
outs
pop
adc
test
je
ins
call
mov
ds
fcomp
sub
add
lea
pushf
mov
adc
cmp
call
test
push
cmps
inc
pop
or
push
push
and
rol
jmp
sub
inc
outs
mov
inc
cmp
ret
cmps
push
cmp
cmp
or
and
and
call
jle
aaa
call
ror
clc
jne
(bad)
inc
mov
dec
cwde
xor
adc
jne
cmp
test
jecxz
xchg
and
imul
daa
pop
into
xchg
dec
out
mov
adc
sbb
mov
call
js
rcl
pop
fild
ficomp
jecxz
sub
add
adc
rol
bound
push
sbb
dec
mov
call
in
or
lods
ror
push
pop
or
add
cmp
cmc
cmp
push
scas
pushf
sbb
mov
add
adc
popf
pop
mov
mov
and
mov
std
jno
xor
xor
jne
iret
xchg
dec
push
and
mov
repnz
ja
jbe
out
je
sub
mov
add
or
mov
ror
cmp
push
sub
imul
aad
mov
fcom
(bad)
sbb
dec
jnp
mov
cmp
cmps
sbb
lods
mov
push
pop
pop
jl
add
or
push
mov
jnp
test
into
ins
push
jo
inc
push
cmps
cmp
dec
fwait
sub
loope
mov
mov
mov
(bad)
or
lods
stos
fwait
jo
xlat
cmps
push
sub
sbb
iret
xchg
xchg
dec
sub
(bad)
mov
aas
mov
mov
in
dec
jne
jp
pop
push
dec
push
or
lea
mov
mov
sahf
dec
dec
jmp
sbb
push
and
or
in
push
sbb
test
mov
jmp
mov
stc
mov
dec
clc
movs
stos
jmp
cmp
jno
inc
jbe
push
into
cmp
mov
aam
or
xchg
add
add
pop
pop
into
rcl
dec
or
dec
add
inc
(bad)
cmp
dec
vmwrite
(bad)
mov
call
inc
js
dec
jo
xchg
icebp
in
jecxz
or
jmp
call
lahf
cmp
push
mov
cmps
or
fisubr
sub
push
je
push
sbb
cmps
pop
sbb
lods
adc
jle
push
sbb
sbb
push
mov
je
test
test
or
clc
add
shr
(bad)
cmp
imul
jmp
das
fmul
xchg
mov
pop
icebp
cmp
sub
call
add
jmp
test
je
test
and
or
pusha
push
sbb
add
dec
jne
test
lods
mov
test
pop
(bad)
or
push
(bad)
sti
dec
addr16
es
int3
pusha
rep
mov
cmp
(bad)
pop
inc
cmp
bound
in
jbe
dec
adc
sbb
sar
jmp
outs
mov
mov
loope
cmps
pop
test
pop
sahf
mov
mov
and
lds
or
push
cmp
out
jle
or
div
out
mov
call
xor
fdivr
inc
rol
push
cmp
shl
cmp
mov
pop
outs
jo
(bad)
push
push
movs
cmp
pop
sti
push
sub
jnp
jle
call
sbb
(bad)
int
push
push
add
push
cmp
dec
pop
cmp
fcom
jge
inc
popf
mov
ss
add
fmul
cmp
jg
jmp
jle
mov
fsubr
dec
push
sub
ret
xchg
pushf
nop
ja
xor
cmps
fidiv
shr
jo
cs
mov
adc
imul
mov
cmps
in
and
movs
jns
dec
out
movs
inc
dec
cmp
add
ins
imul
movs
punpckldq
jae
aas
dec
add
add
jae
xor
push
mov
adc
out
pop
xchg
adc
add
mov
pop
pop
push
call
pushf
data16
retf
push
(bad)
clc
movs
shl
test
cmp
pop
int
sar
inc
ret
xchg
out
push
cli
mov
sub
pop
and
call
sub
xor
add
(bad)
mov
cmps
stc
pop
dec
and
clc
pop
cld
jne
pop
pop
and
xchg
movs
pop
pop
push
jmp
popf
xor
leave
sub
push
outs
movs
std
movs
nop
push
dec
cmp
aas
movs
repnz
scas
cmp
jbe
mov
push
(bad)
call
xchg
mov
inc
std
sti
fnstenv
pop
ret
mov
push
ror
data16
rcl
and
mov
jne
sbb
std
cmps
dec
std
js
adc
xchg
push
imul
jb
xchg
fldenv
jns
sub
dec
fucomp
sti
mov
xlat
jnp
and
outs
pop
enter
adc
arpl
aas
add
les
cmp
div
cwde
mov
xor
(bad)
push
sbb
xchg
or
inc
(bad)
lea
int3
jl
push
cmps
out
pop
xor
dec
jns
mov
cmp
jmp
into
icebp
add
mov
dec
call
xor
cmp
xor
ror
nop
push
dec
or
or
lods
aam
pusha
xor
dec
ss
jne
(bad)
je
or
or
pop
bound
mov
mov
xor
dec
add
loope
ds
pop
and
push
ja
inc
cwde
add
sub
or
mov
aas
mov
mov
and
inc
mov
adc
rcr
hlt
inc
fcmove
mov
cmp
sti
cmp
fidivr
cmps
cmp
xchg
inc
pop
cmp
adc
sbb
lods
pusha
inc
dec
stos
jl
push
je
jne
push
pop
ins
add
pop
retf
aam
add
pop
and
sub
shr
pop
sti
sbb
cmp
sub
xchg
fstp
xor
dec
push
jae
dec
push
jecxz
jnp
mov
mov
enter
mov
mov
sub
adc
(bad)
dec
sbb
clc
ja
(bad)
push
shl
mov
inc
daa
inc
and
mov
sub
jo
je
jns
leave
(bad)
call
rcr
mov
call
in
pusha
jge
mov
and
add
xchg
mov
test
and
or
repnz
mov
push
mov
mov
pop
adc
cmc
mov
xor
or
fdiv
pop
imul
int3
push
jp
icebp
inc
jmp
clc
inc
xor
pop
imul
(bad)
fild
pop
or
lea
add
call
add
adc
sbb
into
call
dec
call
call
fisub
mov
inc
pop
ins
adc
mov
dec
pop
and
inc
add
jne
test
(bad)
(bad)
inc
fstp
xor
inc
sbb
xchg
pushf
and
pop
xchg
dec
dec
sbb
daa
mov
cmc
dec
and
or
xchg
scas
add
add
xor
ret
adc
sbb
inc
test
js
and
pusha
sub
es
and
push
fcom
or
jmp
sub
sbb
jnp
add
xor
dec
sub
add
sub
mov
icebp
popa
mov
mov
jne
jge
ror
imul
sbb
add
loopne
scas
push
mov
sub
xchg
push
and
arpl
dec
cmp
mov
mov
jb
call
cli
mov
je
cvttps2pi
push
pop
js
test
mov
fst
mov
data16
jl
loope
cmp
or
dec
dec
test
xchg
dec
mov
sub
adc
push
test
push
cmp
add
icebp
ins
add
scas
es
test
push
in
call
pop
add
cmp
add
into
xor
rcl
ror
xlat
jmp
jmp
mov
daa
dec
jne
(bad)
jmp
sar
les
cmp
test
push
je
adc
out
out
or
mov
or
loop
pop
mov
repnz
push
and
add
push
inc
pop
sub
dec
mov
mov
mov
dec
xor
push
add
jge
adc
adc
sbb
inc
mov
sbb
push
add
adc
inc
popa
dec
add
out
sti
push
adc
pop
ret
xchg
push
loopne
cmp
aas
add
cmps
add
jmp
or
cmp
inc
mov
js
idiv
xor
mov
cs
mov
fwait
icebp
dec
out
les
dec
pop
push
repnz
or
fwait
and
xor
mov
pop
adc
retf
sub
cmps
pushf
and
stos
(bad)
lea
push
cmp
jl
add
mov
mov
pop
jl
mov
jnp
call
and
cmp
jnp
ins
sub
test
and
push
pushf
out
cs
enter
add
dec
call
movzx
push
call
mov
jge
mov
jo
scas
jp
cmp
iret
add
and
and
mov
fwait
mov
add
mov
push
add
int
fisub
and
and
mov
pop
cmp
je
mov
out
shr
call
mov
imul
scas
leave
sbb
dec
mov
adc
ins
adc
pushf
inc
cld
movs
jle
pop
rcr
sti
inc
mov
sbb
sub
inc
sub
out
mov
xor
pop
mov
cmp
in
dec
and
push
fadd
push
sub
sub
out
lock
aam
imul
add
sbb
dec
and
adc
lock
rcr
push
push
call
or
mov
jmp
arpl
lea
xor
push
or
sbb
dec
sub
js
sti
or
repnz
sbb
jge
jne
or
dec
mov
or
or
adc
sub
or
inc
sbb
xor
add
mov
cmp
jl
jns
push
jmp
dec
adc
jo
mov
push
cmp
aad
inc
push
mov
retf
dec
call
test
sbb
sub
leave
in
adc
or
dec
fmul
xchg
mov
or
sbb
les
std
add
fucomi
add
jle
pop
pop
xor
cmp
add
add
mov
add
mov
dec
add
shl
inc
xor
mov
sbb
push
popa
xor
ds
movs
je
pop
sbb
add
cmp
shr
add
push
xor
(bad)
mov
or
xchg
jne
adc
jne
xor
test
je
sub
hlt
pop
test
sbb
sar
inc
or
push
add
je
add
cwde
add
test
repnz
shl
jecxz
fcomp
fsub
test
arpl
ret
xor
out
call
xchg
push
xor
aas
xchg
add
add
push
add
mov
dec
mov
(bad)
and
je
sbb
addr16
sub
fistp
cmp
enter
pmulhuw
adc
ret
add
or
inc
ins
jl
and
inc
or
ret
cmp
push
jge
add
sub
test
jo
adc
repnz
call
and
bound
pcmpgtw
adc
scas
xchg
xchg
das
jg
sti
call
lahf
cmp
xchg
push
adc
(bad)
fs
jge
mov
jne
pop
sub
inc
cs
pusha
enter
pushf
mov
mov
aas
mov
sub
dec
imul
ja
jne
pop
push
or
mov
cwde
not
jmp
das
xchg
sbb
sbb
xchg
dec
(bad)
enter
mov
mov
sahf
sub
leavew
pop
pop
inc
jb
push
mov
xor
call
dec
(bad)
(bad)
and
jo
pop
int
mov
test
ror
repnz
push
int3
rcl
retf
pop
pusha
lods
dec
add
aaa
aaa
sbb
mov
jb
cdq
lods
add
xchg
inc
mov
mov
retf
and
ins
pop
pusha
xchg
shr
or
pop
jmp
and
and
test
lock
dec
cmp
push
enter
mov
push
call
mov
push
cli
sbb
push
adc
clc
mov
pop
ja
xchg
inc
cmp
mov
and
mov
test
adc
xchg
add
jmp
jno
leave
addr16
dec
xchg
xchg
imul
out
adc
jo
xor
or
rcl
push
xor
in
xchg
repz
loop
pop
lods
aad
sub
add
int
js
push
or
jle
add
sub
mov
and
nop
add
inc
pop
test
cs
cmp
or
push
push
shl
add
or
push
sbb
sbb
xor
mov
adc
mov
mov
dec
pusha
mov
gs
xor
inc
add
dec
test
in
call
pop
pop
cmps
imul
pop
add
cmp
cs
dec
cmp
enter
jl
push
scas
mov
sbb
mov
popa
xor
call
mov
sub
cmc
and
cmc
adc
adc
push
push
dec
test
xor
jecxz
mov
mov
test
fcomp
out
test
inc
mov
push
je
or
adc
je
dec
out
and
mov
adc
and
or
mov
sbb
inc
imul
and
mov
push
inc
(bad)
mov
mov
out
adc
in
imul
mov
fadd
pop
into
lods
add
mov
lahf
xchg
mov
mov
pop
jle
pop
xor
xchg
mov
sar
jl
and
cmp
sub
jmp
inc
jmp
outs
(bad)
out
mov
fs
fmul
in
xor
push
push
push
(bad)
inc
jne
and
rol
push
add
int3
call
or
push
lea
fdivr
ds
jge
adc
in
mov
sbb
cmc
jne
xlat
xchg
jmp
pop
lea
lock
jge
cmp
aas
cli
inc
inc
mov
mov
js
in
call
cmp
ja
inc
jmp
ins
or
or
or
shl
pop
test
movs
sub
daa
xchg
test
or
or
mov
rol
jg
pop
xchg
jmp
adc
or
clc
sub
ror
into
jno
imul
push
push
enter
pop
outs
adc
jmp
mov
jp
outs
jge
ror
dec
arpl
mov
push
inc
out
push
and
jge
call
push
ins
mov
ret
arpl
jecxz
dec
and
sbb
pop
adc
xchg
lea
mov
add
pop
lock
test
and
dec
jns
push
gs
call
test
shr
repnz
jne
cmp
mov
xor
jmp
push
mov
cmp
repz
add
or
pop
in
leave
call
and
in
add
jnp
test
sub
call
bound
push
data16
or
lods
add
or
ror
inc
test
xor
jb
or
pop
cdq
mov
shr
add
add
in
dec
and
push
sar
push
in
stos
and
(bad)
sub
or
or
jle
js
std
(bad)
rol
mov
cmp
or
call
add
pusha
sub
es
pusha
add
adc
clc
inc
adc
xor
jge
movs
ficomp
out
push
aaa
xchg
mov
mov
rol
loop
lock
sti
mov
sbb
jmp
adc
sti
dec
je
add
es
inc
jmp
and
cli
sbb
pop
push
inc
push
call
imul
or
adc
mov
outs
jmp
xor
cli
sbb
xchg
xchg
fidivr
jne
jo
mov
gs
push
jmp
push
push
jmp
ins
pushf
ss
inc
push
push
inc
fnstsw
fstp
cmp
je
pop
dec
sub
fidiv
inc
sbb
pushf
push
stos
xchg
mov
jnp
pop
xor
fdivr
mov
je
mov
adc
or
adc
sub
movs
mov
sbb
repnz
add
das
shl
(bad)
cdq
mov
jb
and
inc
loopne
(bad)
lds
gs
pushf
jne
call
mov
test
cli
jo
mov
call
in
adc
js
mov
push
call
cs
dec
adc
xor
pop
fwait
cwde
hlt
and
pushf
sub
pop
mov
cmp
pop
rol
in
xchg
inc
xor
ret
mov
adc
inc
sahf
call
outs
add
mov
pop
jmp
mov
and
jp
xlat
pop
adc
add
inc
outs
call
outs
clc
xor
xchg
cld
or
lods
and
pop
mov
xchg
xchg
or
lods
sti
push
call
adc
fwait
out
inc
nop
inc
add
add
sbb
push
aaa
xchg
pop
call
mov
add
xchg
cmc
fsubr
cmp
jae
(bad)
lahf
pop
sar
jbe
lea
cmp
jae
ret
mov
int3
ja
jge
arpl
fsubr
mov
or
cmp
cld
push
xchg
or
mov
sbb
rcl
mov
out
loope
xlat
cmp
call
sar
dec
xor
pop
push
jmp
(bad)
dec
push
jns
test
jmp
fdivr
enter
mov
sbb
add
sbb
call
cmp
pop
lods
out
loope
scas
imul
push
add
add
fidiv
jle
shr
mov
sti
xor
in
push
jmp
retf
add
cmp
add
sub
jp
pushf
jmp
js
and
xchg
xor
pushw
adc
test
sbb
js
lds
xchg
inc
push
test
pop
in
jmp
mov
pop
gs
mov
mov
(bad)
dec
adc
mov
add
test
mov
jmp
hlt
xchg
or
inc
addr16
sbb
xor
ds
lea
cmp
add
adc
mov
ins
add
jle
loop
int3
repnz
sbb
sub
call
inc
push
test
test
jmp
call
mov
xchg
jmp
fwait
add
xchg
(bad)
mov
ja
mov
test
cld
imul
pop
mov
or
inc
add
jecxz
icebp
fist
add
std
add
rol
fistp
out
jb
mul
pop
pop
mov
fadd
or
lock
out
test
stc
jl
dec
xor
lock
cmps
imul
pop
xchg
sub
aas
or
jge
mov
movs
push
jo
mov
push
xchg
int3
jge
int
mov
mov
rol
xor
shl
push
hlt
add
lods
and
mov
dec
lods
push
test
pusha
xchg
(bad)
push
sub
dec
clc
add
xchg
xchg
lea
fs
outs
xchg
les
add
mov
pop
inc
mov
scas
inc
sbb
rol
pop
rcr
sub
aad
pushf
xchg
call
adc
push
pop
lock
mov
add
mov
test
mov
dec
test
push
enter
cmp
adc
(bad)
cmp
rcr
adc
inc
or
outs
push
call
cmps
ret
sbb
lahf
and
adc
hlt
test
(bad)
mov
or
(bad)
jo
dec
add
or
clc
lea
adc
daa
push
scas
cmp
mov
in
fild
je
mov
adc
jb
adc
cmp
clc
jmp
inc
(bad)
aad
stos
or
jne
sbb
cmps
push
test
imul
clc
ds
pop
add
inc
inc
push
repnz
in
xor
or
(bad)
sub
add
loopne
dec
leave
dec
test
and
dec
mov
add
mov
or
or
push
rcr
inc
loopne
cmp
and
cmp
inc
and
cmp
hlt
repnz
mov
push
sub
push
mov
js
push
jle
(bad)
inc
pop
mov
add
jp
call
icebp
xlat
and
jmp
mov
pop
add
in
adc
test
cli
sub
out
add
jns
aas
xor
sub
iret
or
std
mov
pop
jb
outs
(bad)
xchg
out
jne
dec
xor
jo
pop
ins
mov
xor
hlt
pop
enter
xchg
mov
xchg
mov
scas
or
daa
in
ss
rol
jno
mov
loopne
sti
jo
mov
push
pushf
call
push
mov
jmp
(bad)
in
jne
xchg
cmp
lea
push
mov
mov
mov
int3
mov
loop
les
dec
call
jg
data16
add
or
loopne
movs
add
sbb
shr
lea
(bad)
jmp
ret
(bad)
jae
jle
mov
mov
sub
cmp
test
dec
pushf
mov
add
pop
jb
or
loopne
sub
in
cmp
(bad)
push
xor
xchg
xchg
and
call
enter
add
les
cmps
and
mov
mov
ret
sbb
sbb
dec
in
movs
jle
adc
lods
sub
fst
inc
cmc
inc
adc
aas
stc
xchg
aas
sbb
adc
sbb
in
test
shr
ins
jl
cmps
sbb
(bad)
mov
mov
sub
and
stos
push
adc
dec
fsub
outs
add
lea
ins
jp
adc
jl
mov
retf
icebp
inc
jle
push
sbb
push
lea
jne
pop
mul
lea
xchg
out
cli
in
lea
or
mov
inc
pushf
jmp
lock
pop
stos
shl
test
inc
jne
inc
cmp
jmp
ret
nop
fdivr
ds
xchg
push
sub
je
cmp
outs
ret
mov
pushf
int3
jmp
daa
dec
rcl
les
mov
nop
push
je
int
pop
js
dec
or
out
or
dec
xchg
test
mov
call
xchg
mov
jle
or
div
mov
movs
add
sub
int
ficom
cld
add
lahf
mov
add
dec
mov
aad
fcmovnu
mov
add
sbb
ja
fisttp
sbb
xor
inc
call
sbb
adc
sbb
mov
(bad)
ins
inc
push
jmp
icebp
or
pop
pop
push
call
loope
int3
and
push
add
add
clc
xchg
adc
mov
inc
mov
mov
dec
or
mov
add
pop
ins
sbb
sbb
and
adc
inc
outs
inc
cmp
hlt
enter
call
sub
cmp
dec
or
ja
add
pop
rcr
bswap
les
inc
push
rol
dec
rcl
xchg
sbb
ja
ja
mov
pop
mov
ror
pusha
stos
push
add
rcl
mov
ins
mov
test
bound
or
push
mov
xchg
out
dec
or
shr
or
call
xor
sub
xchg
mov
sbb
rcr
leave
dec
and
cdq
cli
mov
add
in
jb
ds
ficom
pop
aam
jge
shl
cmp
pop
fsubp
dec
add
lea
jb
stos
data16
bound
mov
test
sahf
loopne
sub
(bad)
adc
xor
mov
mov
nop
push
sub
addr16
aaa
sub
add
inc
mov
sbb
xchg
pop
shl
cmp
or
inc
inc
es
push
xchg
inc
(bad)
push
pusha
mov
xchg
pusha
out
pusha
add
push
retf
call
je
push
dec
jo
sbb
repnz
nop
test
dec
in
mov
test
add
aas
add
iret
cmp
jmp
das
out
lock
mov
sub
dec
add
in
cmp
(bad)
sbb
or
(bad)
xchg
test
icebp
setnp
and
(bad)
es
push
add
push
pop
pop
xor
call
add
les
inc
inc
push
pop
mov
add
and
int
jb
xor
in
mov
mov
push
pop
push
lods
lea
hlt
xchg
shr
inc
jg
pusha
std
mov
scas
rcr
mov
shl
dec
push
or
into
sub
cdq
add
sbb
clc
adc
xchg
in
adc
and
mov
popa
ja
jl
leave
sub
fs
(bad)
add
jb
push
rcl
scas
les
add
jge
or
jb
pop
dec
loope
push
sub
pop
rol
mov
shl
sub
jae
inc
sub
aaa
jne
sbb
xchg
mov
sahf
adc
mov
inc
jl
xlat
adc
call
add
add
pop
sub
push
nop
inc
movs
(bad)
jmp
add
icebp
jp
loope
outs
jmp
cmp
fsub
add
nop
test
inc
cmp
not
(bad)
test
mov
and
and
push
and
add
fst
aaa
mov
push
dec
js
xor
dec
dec
sbb
dec
mov
or
loope
push
jne
xchg
test
jmp
xchg
pushf
xlat
dec
xor
retf
push
fldenv
add
mov
adc
cmc
cmps
pop
call
ret
loopne
push
ss
push
inc
imul
inc
fdiv
(bad)
call
js
sbb
int
cdq
fcomp
cmp
jbe
js
dec
movs
inc
test
lods
hlt
xchg
call
adc
dec
popa
pop
cmps
cs
xor
or
and
push
inc
pop
mov
les
or
rcl
cmc
add
js
gs
(bad)
xor
add
in
mov
inc
int3
add
jle
or
lea
dec
xchg
push
div
xor
loopne
in
(bad)
xchg
aaa
int3
sar
dec
in
inc
or
loope
mov
(bad)
push
inc
push
mov
pop
cmp
sbb
mov
push
stos
sub
push
sbb
cmps
sbb
xchg
sbb
lock
call
push
and
ins
add
call
(bad)
es
sbb
(bad)
jns
mov
aam
pop
or
sub
jecxz
ja
sub
push
adc
push
mov
push
fcmovnb
push
sahf
push
call
push
fdiv
lods
mov
sti
jb
call
and
xchg
adc
cmp
es
mov
jl
jb
jmp
call
mov
xchg
add
pop
movs
cmc
je
jmp
jb
cmp
jb
cmps
push
xchg
outs
inc
dec
push
jb
shl
fsubr
or
jecxz
in
popa
push
push
cmp
push
push
sub
dec
lock
call
sub
lock
dec
fcompp
sub
daa
faddp
inc
and
cmp
xchg
xor
mov
add
dec
loopne
jae
or
aaa
jbe
jl
ja
popf
xchg
or
mov
fs
stc
jo
mov
(bad)
out
loope
cmp
or
push
call
(bad)
into
pusha
or
jne
sbb
inc
inc
add
mov
push
repnz
mov
cld
js
jmp
or
movs
xchg
shl
outs
dec
adc
addr16
dec
adc
push
inc
lods
ret
enter
rcl
cmp
mov
or
add
movs
adc
in
fidiv
lock
jne
clc
jb
mov
iret
add
(bad)
cmp
test
ror
jle
pop
rol
add
adc
mov
(bad)
cli
je
lock
inc
nop
fld
out
dec
push
xchg
jo
and
popf
push
outs
or
je
test
lods
je
sub
add
fcmovb
cmp
mov
xor
pop
nop
add
mov
push
imul
movs
push
test
push
pop
shr
push
xor
mov
add
rcr
dec
mov
push
(bad)
leave
sti
xchg
mov
inc
lea
xchg
jecxz
and
cmc
ret
sbb
jge
pusha
or
inc
add
mov
mov
mov
mov
neg
and
pop
loop
sub
repz
push
or
xchg
js
sti
mov
jnp
sbb
cmp
retf
dec
std
je
or
out
or
test
nop
outs
test
push
stos
and
aam
mov
ficomp
push
add
and
cmp
jl
fdivp
mov
push
jae
sbb
clc
popa
test
mov
push
xor
icebp
retf
rol
rcr
popa
cmps
sbb
adc
mov
add
sub
adc
enter
add
imul
or
shl
add
xchg
xchg
adc
pop
adc
push
mov
and
mov
pop
push
pop
jp
push
adc
cmp
or
ror
jb
cmp
lods
cmp
inc
idiv
adc
push
dec
dec
add
repnz
cmp
push
imul
sub
pop
push
das
sar
adc
cld
cmc
mov
sbb
fdivr
or
jne
xor
adc
jle
sbb
gs
push
outs
mov
lea
mov
mov
mov
data16
adc
push
call
push
(bad)
mov
mov
out
out
cmp
add
sbb
or
mov
cmp
or
jg
mov
call
cmp
les
sub
jge
jne
xchg
jmp
jnp
fisttp
aam
mov
sbb
pushw
mov
aam
lods
movs
nop
jne
push
pop
ins
pop
sbb
dec
mov
mov
ror
sbb
retf
lahf
dec
retf
jge
push
add
xchg
push
fdivp
dec
cmp
js
in
pop
cs
pusha
adc
mov
add
movs
push
cld
test
int3
pop
jae
es
cld
add
mov
loopne
cmp
mov
dec
sub
add
sbb
cmps
mov
inc
inc
cmp
mov
adc
arpl
add
adc
push
shr
jae
dec
xor
push
jmp
add
(bad)
adc
jg
test
inc
pusha
test
aam
lea
call
imul
push
lods
or
call
or
and
push
push
rcl
lds
outs
adc
jne
mov
inc
jl
ss
mov
test
aad
daa
je
cli
adc
nop
es
add
jmp
mov
loope
sbb
jns
and
call
mov
pop
mov
pop
jle
push
cmps
leave
jns
frstor
xor
repz
mov
test
sbb
jne
push
outs
call
or
aam
adc
mov
push
cli
shl
shr
and
scas
cmps
es
fidivr
(bad)
(bad)
repnz
ret
jbe
call
sub
pop
ret
push
stos
jo
call
aaa
adc
push
fist
in
dec
mov
clc
or
or
fmul
xchg
fucomip
aad
addr16
pop
shl
jle
inc
sbb
stos
enter
inc
jnp
inc
mov
pop
test
outs
pusha
repnz
add
(bad)
and
jg
out
inc
xor
pop
adc
adc
xchg
rol
fnsave
mov
cmp
test
inc
fcom
imul
lahf
movs
jmp
sbb
ror
adc
out
or
jo
repnz
mov
jl
arpl
lock
adc
std
fld
mov
add
pop
mov
dec
dec
mov
xchg
mov
jmp
popf
js
mov
cmp
pop
sub
pusha
lea
adc
in
pop
frstor
popa
inc
dec
dec
jo
jb
push
inc
mov
pushf
mov
jnp
scas
mov
push
movs
stc
movs
mov
jl
adc
cmp
push
nop
xchg
adc
add
popf
push
and
inc
mov
push
call
(bad)
cmp
xchg
in
pop
mov
aam
call
cmp
inc
cmp
(bad)
adc
mov
out
imul
jmp
imul
or
out
sbb
loopne
push
sbb
call
mov
push
mov
push
test
pop
add
frstor
pop
pop
pop
push
loope
sub
and
or
cmp
mov
push
adc
or
jnp
sub
or
sub
xchg
aam
xor
ficom
fmul
adc
test
pop
jl
push
add
pop
cwde
les
loope
sbb
push
dec
sbb
sahf
mov
or
cmp
adc
cs
stos
les
test
fist
inc
push
dec
fiadd
cmp
cli
fisttp
cmp
jle
fcmovnb
mov
mov
inc
add
icebp
std
pop
(bad)
in
dec
in
add
dec
adc
leave
popa
mov
cmp
cmp
jle
imul
cdq
cli
mov
sbb
sub
mov
pop
push
aas
lock
icebp
push
mov
in
nop
outs
les
lea
retf
loope
sbb
cmp
movs
push
jbe
push
push
inc
mov
xchg
push
mov
add
mov
jne
leave
sbb
enter
inc
cmp
enter
adc
ja
adc
std
or
sub
ins
pop
mov
push
add
rcl
pop
mov
iret
jmp
call
xor
pop
lods
mov
mov
cs
mov
xor
push
fs
pusha
adc
pop
test
sub
lock
or
test
les
outs
sbb
cmp
out
inc
push
or
dec
add
push
imul
test
dec
test
add
stos
push
out
inc
pushf
dec
cmps
test
pop
data16
dec
test
fs
ins
jo
pusha
push
mov
xchg
sahf
cwde
mov
mov
fdiv
cmp
push
pop
inc
mov
pusha
dec
inc
push
dec
ror
push
cmp
adc
push
loopne
mov
adc
enter
cmp
push
cmp
je
dec
xor
mov
mov
dec
(bad)
aam
in
rcl
push
push
push
pusha
dec
ins
jnp
cwde
int3
and
cmp
jl
nop
fs
dec
cmp
jbe
add
pop
lock
loope
dec
cmp
(bad)
cmp
call
imul
push
xchg
repnz
dec
push
shl
out
jmp
out
inc
les
add
mov
xor
call
dec
mov
or
push
clc
mov
mov
(bad)
into
or
outs
or
call
jge
arpl
lea
imul
cmp
pop
or
pop
sbb
jbe
dec
sar
call
xor
dec
mov
jo
jne
enter
sub
dec
and
add
and
and
and
jge
rol
lea
dec
repz
mov
jnp
dec
aam
inc
pop
add
(bad)
mov
pop
sbb
ja
clc
add
inc
add
dec
add
jp
mov
or
mov
adc
or
push
idiv
lahf
mov
int
push
iret
cmp
jmpw
pop
ins
jle
or
popa
pop
inc
int3
add
adc
sti
in
push
mov
jae
jl
lea
or
push
nop
ror
or
or
enter
or
cmp
or
dec
ins
lea
sub
imul
div
lea
pop
sub
scas
sub
add
mov
call
cld
pushf
je
loope
pop
pusha
jne
jb
test
cmp
gs
cmp
call
neg
sub
(bad)
sti
movs
jbe
and
cmp
popa
push
pop
sbb
mov
xor
ror
je
push
clc
push
loope
clc
sti
cmp
sub
push
push
mul
in
jmp
xor
fist
test
jl
(bad)
popa
sar
jmp
mov
ret
shl
loope
jb
ja
into
jbe
test
out
(bad)
cld
outs
or
add
repz
inc
jecxz
adc
jge
jb
jmp
sti
sub
lock
mov
cmp
mov
sub
xor
jp
leave
adc
imul
arpl
xchg
dec
mov
fisttp
jl
push
test
mov
push
enter
inc
mov
(bad)
movs
shl
pop
or
or
sbb
sub
xchg
sbb
push
aam
add
dec
jb
sbb
inc
test
loop
pop
ror
adc
or
inc
sub
xchg
outs
icebp
pop
xchg
or
lea
cmp
(bad)
pusha
push
inc
jmp
and
rcl
test
lods
mov
cmps
push
lock
adc
fadd
(bad)
adc
mov
mov
icebp
(bad)
sbb
call
ss
dec
pop
arpl
sbb
mov
mov
aaa
arpl
jns
cmp
sub
sbb
or
lock
jp
dec
xchg
daa
mov
ins
push
and
pop
repz
ja
jge
fprem1
mov
mov
test
adc
shl
mov
call
clc
xor
loop
inc
jle
push
call
test
xor
sub
or
jbe
push
sub
jo
shr
fadd
jl
or
and
push
sbb
add
xchg
jo
add
add
add
fcmovnu
xor
pop
cs
dec
xchg
push
(bad)
mov
cmp
rcr
ins
mov
jg
dec
hlt
jg
xchg
xchg
mov
adc
into
xchg
cmp
outs
cmp
adc
dec
jne
push
jbe
fimul
dec
daa
pop
cmp
jge
jg
jnp
cld
in
call
cmp
xchg
mov
jmp
push
arpl
repnz
fst
inc
in
inc
loope
ror
add
lds
adc
mov
and
ins
jecxz
icebp
xchg
adc
add
mov
aas
dec
xor
xchg
adc
mov
pushf
aas
shl
lea
sbb
mov
and
jecxz
inc
add
dec
mov
inc
cld
cmp
or
ss
sbb
nop
adc
or
std
sub
mov
test
les
pop
cld
and
dec
or
mov
push
fisttp
xor
add
adc
cmc
outs
daa
cmp
sub
add
ja
popf
add
jae
jl
or
adc
into
cmp
pop
imul
fsubr
cdq
push
cdq
in
add
scas
cmp
pushf
or
call
dec
test
jl
mov
cmp
xor
aas
add
or
push
je
sub
js
jns
inc
jge
push
mov
mov
cmp
mov
sub
and
push
cmp
add
adc
sub
or
lods
xor
sbb
or
push
and
and
jl
dec
mov
cdq
nop
and
test
add
adc
pop
cmp
jne
fcomp
cmp
mov
push
xor
mov
test
je
es
and
shr
mov
lock
bound
and
inc
or
adc
add
iret
push
adc
mov
mov
ret
push
mov
mov
or
cmp
cmp
retf
mov
es
pushf
pop
out
or
mov
loope
push
pop
iret
jnp
inc
push
inc
dec
add
loopne
mov
and
push
add
loop
stos
or
add
push
int
pop
scas
mov
sar
push
lea
fs
push
call
js
test
inc
add
rol
iret
jo
loopne
(bad)
imul
repnz
inc
cs
dec
rcr
cmp
dec
jnp
pusha
rol
pop
clc
or
sbb
push
mov
call
loope
aam
sub
sahf
cld
xchg
push
fdiv
jbe
adc
test
les
leave
inc
pop
dec
mov
cdq
add
add
test
add
adc
and
inc
loopne
outs
sahf
mov
or
xor
or
ins
fsub
inc
call
push
or
loopne
pop
mov
push
sub
mov
sbb
ins
sti
mov
ret
mov
sbb
sub
or
dec
sahf
sub
loop
dec
rol
push
mov
sbb
shl
pop
pop
cmc
and
adc
(bad)
std
pop
push
dec
push
jb
xor
pop
repz
and
inc
(bad)
jmp
loopne
cmp
push
rcr
adc
call
mov
or
imul
cdq
div
cmp
add
cmp
adc
fcmovb
jbe
xchg
push
test
ins
add
ret
fwait
ss
mov
inc
push
xor
cmp
imul
punpckhwd
mov
retf
push
pop
mov
or
out
das
lock
xchg
(bad)
pop
cmc
adc
fsubr
or
dec
push
pop
fwait
pop
ins
mov
sbb
lock
std
addr16
lods
sub
into
push
sub
repnz
pop
lock
or
jecxz
inc
aaa
outs
stos
imul
adc
add
mov
es
mov
adc
add
inc
cmp
ss
push
mov
push
add
dec
jle
mov
or
dec
xchg
xor
adc
jmp
xchg
aam
fs
inc
or
jg
fnstcw
sbb
push
movs
dec
add
push
adc
mov
cld
adc
rol
xchg
cmp
dec
repz
cmp
fild
xor
jno
mov
pop
pop
mov
or
add
mov
in
mov
jae
sar
or
push
push
inc
inc
call
sbb
dec
js
lods
xchg
add
neg
lea
jge
cmp
or
(bad)
ror
les
add
add
jnp
inc
add
adc
push
adc
jl
int3
(bad)
push
cmps
shl
les
or
mov
lods
adc
push
imul
xchg
or
inc
fwait
dec
mov
test
inc
fnsave
dec
popa
call
call
mov
fisubr
inc
out
fsubr
cli
push
sar
adc
push
push
sbb
loope
rol
mov
xor
pop
push
or
das
sbb
xchg
mov
and
adc
loop
imul
add
rol
adc
aam
adc
xchg
jb
aam
ror
psrad
pop
xor
mov
dec
xor
add
pop
gs
pushf
icebp
cmp
sbb
rep
stos
add
inc
call
or
xchg
repnz
pop
aad
push
inc
add
xor
xchg
fisttp
push
dec
sub
inc
inc
dec
shl
push
pop
pop
loope
add
in
mov
cmp
and
pop
(bad)
or
or
push
xor
xchg
add
push
cmp
mov
sbb
cmp
or
aam
(bad)
aas
push
sbb
jmp
cwde
(bad)
rol
or
add
xor
push
sub
mov
int3
xor
sbb
push
jmp
cdq
into
push
adc
or
xchg
xchg
xchg
out
mov
push
mov
dec
adc
xchg
in
test
mov
cmp
loopne
scas
inc
les
lahf
jne
sub
sbb
lock
fisub
cmp
mov
pop
mov
or
enter
or
test
xor
push
or
test
or
das
jo
sub
or
push
mov
lds
mov
mov
ja
xchg
lea
in
jne
inc
pusha
cmps
or
cwde
jne
mov
inc
test
(bad)
ins
cs
or
retf
or
adc
cwde
xchg
rol
shr
or
push
cwde
fmul
push
mov
sbb
ja
cmps
pop
adc
jmp
fs
ins
add
pop
cwde
cwde
push
push
push
push
cmp
push
sbb
pop
inc
je
xchg
ret
xor
popf
inc
cmp
sar
inc
jl
pop
xchg
push
cwde
lods
and
int3
retf
push
jo
popa
int3
push
push
std
and
andps
inc
and
sub
cwde
or
sub
jno
neg
cmc
lods
icebp
in
lea
shl
xor
lods
push
call
inc
leave
xor
adc
mov
push
inc
dec
sbb
and
loope
and
add
lahf
add
xchg
lock
or
add
pop
pop
push
pop
mov
and
adc
cld
mov
sbb
and
dec
call
mov
cmp
test
fs
xor
mov
call
(bad)
in
xor
ins
lods
push
pushf
addr16
xchg
adc
call
out
and
call
jo
mov
jmp
and
mov
lock
sbb
cwde
adc
ror
mov
icebp
cli
inc
pop
cmp
mov
lea
xchg
inc
rcl
sbb
arpl
adc
mov
ror
add
push
inc
clc
jg
je
outs
inc
ins
dec
sub
cmp
daa
ret
shl
jmp
into
or
pusha
out
loope
xchg
int3
inc
push
sbb
(bad)
push
nop
fdivr
aam
dec
pusha
jle
push
inc
fs
sub
mov
xchg
and
pop
push
scas
dec
sub
push
icebp
(bad)
adc
push
inc
jl
sbb
adc
mov
lods
adc
push
push
pusha
dec
sbb
js
mov
pop
xchg
in
cmp
jbe
jb
dec
ror
add
stos
xchg
pop
cli
pop
mov
jb
add
push
ja
inc
add
and
push
mov
cwde
jno
jb
daa
xchg
lock
or
mov
sub
inc
sub
clc
mov
and
out
lock
push
xchg
cmps
jge
dec
add
in
call
jl
xor
dec
mov
dec
loopne
rcl
xor
lock
clc
push
mov
inc
push
ss
(bad)
jl
ss
aad
push
cmp
dec
inc
pop
dec
inc
push
pop
xor
stos
js
xor
inc
mov
cmp
cmps
pop
pusha
mov
loop
call
jl
out
inc
movs
push
push
nop
movs
push
retf
gs
xchg
or
stc
mov
leave
movs
lock
js
loop
cmc
fidivr
pop
cwde
mov
adc
cld
xchg
cmp
adc
rol
and
pop
sub
shl
test
and
cmp
cmps
and
mov
ret
inc
call
out
xor
cmps
add
lea
push
pusha
jl
mov
aaa
or
hlt
jp
int
and
add
push
cwde
call
(bad)
mov
shr
xor
ins
in
add
push
ficom
je
inc
outs
jo
push
adc
mov
inc
pusha
mov
idiv
or
loopne
cmp
shl
call
not
jl
pushf
jb
sbb
gs
es
test
mov
adc
movs
ss
cmps
into
xor
out
inc
sbb
data16
call
ret
add
dec
inc
xchg
add
enter
xchg
test
pop
push
retf
push
not
mov
cli
test
test
dec
dec
adc
pop
lock
leave
pop
dec
ret
and
xchg
imul
mov
jp
inc
adc
inc
add
loopne
je
push
adc
push
xchg
fdiv
add
sub
shl
stos
sbb
leave
or
jecxz
hlt
cmps
xor
inc
inc
test
pop
lock
inc
cmp
jmp
pusha
outs
cld
jb
mov
cmps
in
jmp
loopne
jmp
add
rcl
arpl
ds
jl
adc
daa
jecxz
dec
rcl
inc
jb
dec
xor
dec
push
cmp
push
and
push
(bad)
fld
loopne
inc
cmp
add
cwde
aad
mov
push
adc
adc
daa
test
iret
test
inc
jl
jbe
mov
outs
nop
dec
ror
sub
movlps
xchg
cmps
push
enter
or
and
repnz
inc
das
and
jbe
enter
in
mov
xchg
jmp
and
jns
jge
cmp
mov
inc
out
lock
and
iret
sbb
mov
in
add
cmps
dec
mov
call
mov
xchg
or
xchg
int
mov
call
mov
in
pop
adc
stos
nop
push
push
push
mov
dec
cmp
add
ss
ds
mov
mov
js
sahf
call
repnz
fcom
add
xor
sub
adc
adc
sbb
sbb
cmpxchg
push
mov
adc
jle
mov
xor
xchg
pop
es
and
push
dec
push
mov
retf
sbb
push
ror
pop
in
movs
out
leave
dec
(bad)
or
test
add
push
movs
jle
or
push
sub
dec
shr
push
or
jmp
mov
mov
inc
jmp
cs
adc
mov
or
push
cmp
or
mov
mov
add
push
push
fwait
mov
dec
dec
jo
sbb
xchg
and
cmps
cmp
jle
mov
mov
push
inc
mov
or
inc
push
mov
jmp
or
mov
mov
cmp
stos
xchg
jle
(bad)
inc
xor
iret
mov
xchg
mov
push
inc
neg
fild
xor
mov
sub
mov
inc
adc
mov
(bad)
call
jmp
mov
push
aam
fs
stc
jg
fidivr
cmp
jbe
push
push
mov
mov
mov
lods
inc
shr
in
xor
out
in
xor
jb
ja
or
mov
pusha
les
or
lods
dec
aam
je
sbb
pushf
cmps
xor
adc
pusha
aas
sbb
and
nop
pop
mov
ficomp
movs
sub
ss
cwde
(bad)
or
push
mov
push
dec
jp
add
pop
mov
inc
push
inc
in
(bad)
jo
xchg
jb
ret
test
and
push
and
push
jbe
lods
mov
xchg
nop
sbb
sbb
scas
into
inc
add
push
mov
jns
sub
inc
enter
jbe
dec
(bad)
pop
imul
jo
div
jecxz
jnp
aam
mov
add
cli
pop
loop
pop
call
mov
push
ins
add
cdq
pop
pop
shl
pop
aad
mov
ss
call
push
or
call
in
mov
pop
imul
je
inc
(bad)
push
mov
adc
frstor
xor
sbb
adc
ja
in
out
cmp
js
lock
stos
sbb
sbb
lods
jnp
in
test
test
xor
jmp
sbb
inc
push
xor
or
cmp
lock
and
and
xchg
outs
xchg
mov
sub
fisttp
or
adc
mov
or
add
cmp
lea
dec
pop
and
repz
xchg
mov
pop
add
dec
cmp
mov
aas
or
shl
movs
xor
addr16
adc
imul
inc
test
add
jnp
cmp
repnz
lea
jge
sbb
js
daa
sbb
push
add
push
je
mov
or
adc
imul
and
jmp
data16
or
adc
fbstp
inc
inc
or
mov
add
pop
inc
test
sub
push
push
nop
sub
outs
and
out
mov
aam
jae
dec
rcl
pop
add
aam
sbb
setne
cmp
sbb
call
mov
retf
ror
out
xchg
mov
jmp
test
jne
movs
pop
dec
mov
retf
and
inc
push
lods
add
mov
push
dec
mov
mov
shl
dec
add
or
pop
mov
add
fdiv
or
dec
pushf
jnp
mov
sbb
adc
pop
push
fld1
add
push
gs
(bad)
push
jae
push
call
dec
out
xor
jge
and
lea
jo
fwait
loope
lock
clc
std
loope
cmp
add
mov
inc
(bad)
jno
mov
cmp
hlt
dec
add
mov
dec
dec
push
retf
inc
push
xor
adc
or
mov
jg
or
jne
das
xor
das
add
cs
jl
ja
push
dec
je
stos
sub
mov
leave
ds
call
push
call
or
jo
push
cmp
sar
outs
cmp
jne
pop
dec
mov
jns
inc
and
js
jmp
xchg
call
fidiv
je
or
push
jo
jle
push
(bad)
push
adc
je
inc
jge
inc
lea
jmp
mov
int3
jl
mov
add
xor
mov
or
outs
ret
inc
sbb
aas
inc
cmps
ds
mov
xor
mov
add
sbb
sub
or
lock
sahf
inc
xchg
adc
js
pop
ficomp
aaa
jl
cmp
ds
hlt
pop
push
outs
and
movs
and
outs
out
pop
and
mov
call
push
pop
mov
test
dec
jb
addr16
cmp
fimul
xchg
xchg
test
jmp
mov
sub
dec
call
pop
add
stc
inc
icebp
push
imul
mov
adc
je
pop
addr16
bound
in
dec
jge
and
sbb
jle
ins
jnp
ret
neg
cwde
sbb
and
push
jl
xchg
push
push
lods
or
(bad)
rcr
mov
inc
lahf
xchg
xchg
aam
leave
inc
add
shl
lods
mov
add
dec
mov
and
mov
lea
jmp
xchg
fucomi
inc
(bad)
cmp
test
jp
xor
adc
(bad)
cld
add
jp
(bad)
adc
mul
sbb
out
jmp
xor
push
test
hlt
sti
sub
add
loope
call
cmp
inc
pop
(bad)
lea
js
lahf
leave
or
test
mov
test
push
or
adc
mov
fucomp
xor
xchg
inc
cmp
pop
sbb
inc
adc
dec
pop
cli
pushf
pushf
fmul
(bad)
pop
arpl
inc
cmps
pusha
inc
mov
jbe
add
dec
or
add
out
cmp
or
cmp
push
add
cmc
or
pop
and
pop
sbb
jmp
xchg
jmp
loop
stc
fiadd
inc
retf
cmp
push
adc
dec
xor
dec
push
retf
jnp
mov
pop
data16
retf
psubsb
adc
xor
jbe
mov
pop
push
cdq
cmp
test
dec
xor
mov
pop
and
mov
cwde
mov
and
or
cmp
pop
and
push
mov
jmp
push
mov
sbb
fwait
cmp
pop
adc
enter
aas
fs
and
push
add
xchg
xchg
aas
lea
mov
in
test
jge
and
iret
jno
or
jl
inc
mov
aad
sar
push
pop
movs
mov
pop
xchg
adc
inc
pop
out
mov
pop
retf
imul
and
dec
add
pop
aas
push
mov
jne
cs
or
in
ds
dec
popf
popa
push
jmp
push
mov
(bad)
dec
fs
out
addr16
loopne
push
sub
sbb
push
adc
in
mov
push
mov
mov
dec
cmp
fild
dec
push
repz
fadd
xor
xchg
fild
lea
add
cmps
sbb
ss
cli
aaa
jecxz
dec
mov
repz
clc
push
sbb
push
add
add
push
push
jb
pop
adc
ror
add
add
inc
pop
add
sti
mov
xor
fisttp
jg
(bad)
fist
mov
ret
in
shl
stos
hlt
or
pop
in
inc
dec
pop
push
inc
in
arpl
cmc
push
dec
mov
popf
jo
push
sahf
les
adc
or
pop
fisubr
mov
sbb
or
jge
jne
and
pop
sub
in
push
jl
dec
pusha
fisubr
or
push
mov
push
loop
xchg
lds
pop
cmp
int3
push
dec
sbb
adc
xchg
sub
xor
sbb
or
xchg
jns
jg
rcr
mov
clc
into
or
add
xor
mov
xor
pop
je
cmp
sub
inc
inc
dec
pop
sbb
push
push
loope
lock
push
and
sbb
lahf
and
jb
push
ret
push
adc
xor
fisttp
loop
jl
pushf
inc
popa
ins
popa
xor
sbb
jne
sbb
sbb
dec
or
test
fsub
inc
out
dec
dec
inc
inc
mov
pop
enter
dec
sbb
xor
inc
mov
jle
inc
add
ds
xchg
inc
enter
jecxz
clc
leave
xchg
xchg
xchg
xor
imul
movs
add
pop
push
cs
out
cmp
adc
aad
cmp
jns
pop
rol
add
mov
add
inc
jg
das
jmp
cmp
ins
sbb
popa
inc
jl
push
enter
adc
nop
xchg
mov
into
push
nop
add
or
mov
adc
and
out
fcom
shl
xchg
test
aaa
jnp
jo
jmp
or
add
bound
je
aaa
in
mov
add
or
add
or
pop
loop
adc
in
xor
or
sub
add
or
call
sbb
mov
repnz
adc
and
sbb
call
test
jp
call
mov
pop
or
sbb
jno
loopne
pop
pop
fcmovb
popf
add
or
xchg
jo
sbb
popa
repnz
je
mov
push
jmp
stos
leave
ret
jo
jecxz
add
sub
xchg
add
add
ror
dec
sub
repnz
sub
sbb
shr
movs
mov
and
cmp
cmp
iret
inc
xchg
add
jo
push
mov
cdq
into
cmp
aaa
dec
daa
push
std
hlt
idiv
add
mov
cmp
je
sub
dec
js
retf
call
ret
adc
(bad)
lea
inc
or
or
lods
movs
adc
push
inc
mov
movs
lahf
or
pop
adc
jmp
jo
test
adc
dec
sub
das
inc
adc
jg
and
or
cmps
add
push
rol
test
xor
add
inc
mov
adc
out
adc
xchg
inc
imul
pop
pop
rcr
xchg
test
aas
imul
xchg
retf
movs
pop
rcr
in
dec
inc
(bad)
daa
out
ins
dec
add
jle
and
mov
mov
add
dec
cmp
mov
call
lea
jne
xor
outs
lock
or
or
int
add
outs
les
cmps
(bad)
fs
hlt
add
retf
sbb
pop
xchg
jecxz
mov
or
je
pop
mov
loopne
addr16
dec
inc
dec
das
movs
add
xor
in
stc
jns
add
add
push
pop
ins
xor
stos
sbb
cdq
ja
sbb
adc
and
jl
clc
pop
pop
inc
addr16
mov
inc
xor
rol
jle
sub
and
inc
add
scas
inc
stos
lods
or
inc
add
repnz
push
xor
in
pop
(bad)
loopne
cs
ss
jnp
fsub
push
cmps
cmp
movlps
adc
push
jmp
test
dec
stc
jle
adc
xchg
pop
push
push
sub
into
dec
fsubr
(bad)
sar
jl
push
clc
adc
addr16
add
fmul
rcl
imul
mov
test
xchg
xchg
xor
xor
arpl
fisttp
inc
scas
cld
push
cmp
jbe
mov
dec
psubw
and
or
loopne
lahf
iret
inc
or
add
xor
icebp
push
mov
out
and
(bad)
mov
push
mov
pop
idiv
sub
cs
pop
and
inc
or
into
pop
sub
xor
xchg
mov
dec
pop
test
ds
inc
pop
add
pop
pop
add
pusha
call
fimul
nop
cmc
fdiv
lods
(bad)
scas
mov
imul
push
jg
push
mov
js
xchg
mov
ror
sbb
jnp
xchg
add
pop
inc
rol
cmp
or
mov
jbe
add
jnp
mov
icebp
mov
jo
retf
xor
or
icebp
push
pop
xchg
jbe
call
pop
outs
push
xor
mov
xor
or
xchg
sbb
pop
enter
sbb
(bad)
test
xchg
and
xchg
pop
cmc
cmp
mov
inc
mov
push
pop
and
sbb
jle
push
xor
cmp
xor
cmp
inc
sub
and
push
stc
mov
das
jbe
mov
dec
xor
jge
adc
pusha
lods
lods
(bad)
jns
push
jle
adc
pusha
movs
jbe
popf
jl
add
push
ror
pusha
mov
or
test
push
movs
clc
add
pop
inc
cld
and
xchg
pop
mov
xchg
sbb
jp
loope
cmp
shl
lock
xchg
sbb
pop
scas
into
inc
hlt
mov
rol
pusha
shr
test
sahf
jne
das
jge
loop
sbb
jne
cmp
lods
pop
ds
ins
jle
call
jle
mov
mov
fbstp
imul
jne
or
xor
cs
add
add
ret
jne
push
sbb
xchg
adc
pop
jmp
pop
jmp
dec
shl
sbb
pushf
mov
inc
and
aam
fwait
das
inc
push
sub
cld
stos
int3
or
adc
mov
das
sar
lds
or
mov
inc
fsubr
je
out
inc
aad
sub
pushf
and
arpl
stos
add
cmp
push
mov
out
sbb
inc
movs
push
call
jbe
mov
call
inc
pop
adc
jecxz
aad
cmp
rcl
lods
jmp
shl
or
inc
push
push
xor
cwde
in
add
jb
sbb
dec
ds
shld
push
stos
pusha
fdivr
and
test
mov
(bad)
push
push
clc
cmp
rcl
add
ret
mov
call
jp
ror
stos
and
jmp
test
add
add
inc
js
in
aam
(bad)
jo
jmp
imul
push
push
call
inc
fadd
outs
mov
mov
push
retf
inc
jecxz
push
push
pop
dec
pop
or
or
pop
fmul
push
add
jle
popf
and
cwde
out
xor
daa
retf
pusha
push
add
aam
mov
inc
arpl
daa
pmaxsw
data16
jnp
lea
call
jecxz
jbe
add
fild
adc
cmp
push
adc
or
cs
push
pop
jo
adc
fidivr
test
pop
mov
stc
fadd
xor
cmp
(bad)
pop
nop
dec
sbb
into
mov
push
sub
sbb
cli
and
fdivrp
push
xor
test
jnp
adc
pushw
lock
cmps
jl
ja
loope
mov
setg
mov
or
retf
mov
ins
mov
inc
test
je
sbb
popa
mov
or
sbb
or
and
in
add
sub
inc
push
pop
pushf
dec
or
mov
or
(bad)
push
adc
cmp
mov
add
mov
xchg
and
xchg
add
xchg
sub
inc
jne
and
ins
add
jb
mov
add
out
adc
dec
pop
call
push
and
and
and
dec
add
add
jno
xor
xor
or
xor
sbb
pushf
mov
xor
test
add
xor
cmp
es
mov
adc
mov
mov
iret
mov
mov
add
rol
mov
xchg
out
mov
adc
cli
xor
or
mov
js
sub
mov
inc
es
out
mov
mov
xchg
clc
xchg
cs
pop
adc
call
outs
lock
lock
push
pop
sub
inc
inc
ret
push
not
mov
pop
jg
dec
call
mov
and
xchg
popf
add
cld
push
pop
sub
retf
ret
and
inc
call
cmps
loope
sbb
push
in
xchg
ins
cmp
nop
test
rcr
add
in
and
cmp
xchg
test
adc
retf
jge
or
repz
popf
sub
xor
out
sub
mov
push
push
or
sbb
call
leave
les
inc
in
jno
mov
mov
hlt
and
inc
sbb
ret
add
inc
ja
lods
idiv
outs
popf
cmp
sbb
aas
add
cmp
dec
lock
js
xor
loopne
jnp
fild
daa
and
dec
adc
ins
sub
(bad)
jmp
inc
or
in
and
jne
or
inc
jge
xchg
cmp
adc
xor
jbe
adc
aam
in
jne
fdiv
sub
add
sbb
push
jno
imul
cs
cmp
lods
cmps
scas
xchg
inc
cmp
add
push
or
push
test
cmp
and
in
xchg
lock
pushf
dec
pop
mul
push
or
push
and
clc
arpl
std
out
jmp
mov
adc
(bad)
cmps
mov
and
xchg
add
fcom
xchg
and
inc
lea
and
jmp
lods
inc
outs
push
les
add
fs
fmul
mov
add
adc
or
adc
test
sub
sub
or
inc
mov
ss
mov
daa
inc
mov
shr
mov
enter
retf
push
rol
dec
fild
int
sub
adc
out
pop
call
mov
cld
or
cmp
not
sub
sbb
sub
adc
add
movs
pusha
push
shl
into
test
add
jmp
mov
jg
popf
icebp
dec
add
aaa
xor
sub
push
jmp
ror
pop
loopne
daa
sbb
fst
and
xchg
sbb
sar
stc
add
clc
out
mov
jmp
mov
mov
add
loope
mov
imul
xlat
cmp
sub
mov
call
push
sub
xor
or
shr
movs
nop
add
call
jo
call
or
ret
add
call
je
add
dec
add
mov
pop
add
pusha
push
mov
outs
xchg
stos
mov
cwde
or
nop
es
mov
inc
sbb
or
jb
mov
adc
pop
push
es
push
dec
xchg
adc
pop
inc
mov
jge
push
dec
inc
push
inc
cld
or
xchg
add
add
jmp
add
int3
nop
les
rcr
and
xor
add
es
ret
adc
aam
jge
xor
or
add
dec
or
sbb
mov
data16
out
cmp
pusha
xchg
inc
inc
inc
cmp
jl
je
sub
sbb
fld
cmp
add
adc
push
rol
fwait
inc
jb
xchg
add
stos
mov
inc
pop
mov
jb
xchg
cmp
push
enter
and
adc
enter
std
sbb
(bad)
call
or
call
lds
cmp
xchg
fistp
push
and
push
and
adc
cwde
and
mov
outs
xor
and
jle
adc
add
pop
xchg
pop
pop
or
jns
ret
test
push
push
cmp
push
fistp
aas
ins
aam
enter
or
or
lea
mov
dec
mov
enter
pop
rcl
or
mov
outs
jmp
jmp
or
mov
push
xchg
dec
mov
and
cmp
jmp
xlat
xor
sub
and
dec
loop
sbb
sub
pop
xchg
sbb
mov
out
lea
es
add
xor
jnp
in
mov
xchg
pop
add
call
add
sub
cmp
jle
mov
fimul
add
fsub
jb
jle
jle
or
je
aas
je
cmp
sbb
je
sar
jle
je
cmp
retf
pop
and
mov
mov
enter
mov
cmc
sub
addr16
push
xor
and
sub
push
aad
add
(bad)
mov
es
stos
push
retf
and
sbb
gs
or
pop
in
pusha
test
push
fdiv
dec
icebp
cdq
je
aad
cmp
jle
nop
hlt
mov
std
add
push
rcr
xor
or
and
add
sub
idiv
shr
or
inc
cli
out
add
mov
add
imul
adc
aaa
inc
shl
cmp
xor
(bad)
cmc
cs
mov
mul
or
adc
inc
pop
xor
mov
jmp
xor
inc
(bad)
test
jo
mov
push
add
push
xor
in
dec
out
mov
xchg
push
pop
xor
rcr
cli
push
movs
jecxz
inc
arpl
ins
sbb
cmc
or
and
cmp
mov
xor
loopne
mov
push
add
and
jne
or
(bad)
cmp
push
in
(bad)
jmp
push
ret
dec
dec
pop
jnp
push
mov
push
pop
jecxz
ret
and
lods
es
in
inc
ins
test
sbb
imul
ret
out
inc
jl
les
pop
pop
mov
and
inc
rcr
push
add
sub
and
sbb
and
mov
ret
leave
and
psubw
push
sbb
in
push
and
pop
cmp
sbb
and
je
out
pop
or
aad
mov
pop
or
sub
pop
mov
scas
lods
retf
inc
stos
add
mov
dec
(bad)
int3
repz
lods
xlat
cmp
and
aad
dec
sub
and
xchg
test
ins
cmp
pop
add
dec
rol
and
xchg
cmp
mov
sbb
mov
call
inc
sub
and
jecxz
je
cmp
sahf
jb
pop
and
dec
cmp
cmps
jae
scas
or
int3
cmp
lods
out
sti
cmp
jge
and
call
lock
sbb
outs
fs
and
jb
sbb
mov
es
push
cmp
push
test
push
push
pop
cwde
add
push
add
pop
pop
imul
sub
jbe
mov
ret
xchg
adc
inc
jb
neg
ret
call
sbb
xor
add
xchg
not
sbb
adc
mov
aaa
mov
and
int3
inc
xor
dec
cmps
aam
retf
aam
mov
loop
dec
dec
and
mov
jp
fcomp
cmp
ss
cs
sub
call
sub
lods
xor
jmp
cmp
fild
data16
mov
or
mov
pop
clc
jnp
call
ret
or
sbb
call
cmp
sub
fbld
fstp
dec
mov
stc
xchg
inc
cmps
(bad)
retf
mov
(bad)
jmp
out
mov
ins
xor
adc
pop
sbb
fistp
clc
lock
sub
inc
lds
mov
sar
cmovae
mov
repz
push
movs
sbb
in
jnp
push
sbb
lods
loopne
retf
jbe
inc
mov
nop
sbb
or
shl
xor
ror
jo
pop
sbb
xor
and
out
dec
mov
and
pop
adc
sbb
dec
ds
add
mov
mov
cmc
ret
jmp
fst
jle
sti
jecxz
jp
inc
pusha
xor
jo
xchg
fstp
mov
adc
xor
icebp
sbb
push
inc
ror
mov
addr16
and
aam
add
push
pushf
sub
arpl
push
and
add
sub
push
call
cdq
mov
adc
xor
xor
call
hlt
inc
call
sbb
cmp
push
cdq
aad
or
sbb
cmp
mov
mov
push
add
add
mov
sbb
sbb
add
and
in
adc
inc
add
scas
popf
fcomp
fild
mov
test
out
mov
mov
inc
push
enter
sbb
fs
dec
mov
mov
mov
mov
inc
mov
mov
xchg
or
inc
or
add
lods
mov
sbb
shl
into
cmp
push
sbb
and
lock
add
ins
movs
xor
repnz
ror
sub
adc
adc
das
mov
pop
pop
movs
adc
rcr
and
xor
mov
sbb
adc
sbb
adc
sahf
mov
jno
cmp
push
adc
and
hlt
xor
xchg
xchg
dec
and
js
mov
jae
es
sbb
xchg
sub
popa
sub
xor
mov
fs
pop
push
fisub
and
jnp
inc
dec
(bad)
sbb
pop
call
loope
mov
call
push
sbb
adc
sub
call
adc
xchg
fisub
pushf
jl
push
push
add
out
loop
jp
clc
cld
(bad)
ds
sub
or
cmps
(bad)
call
outs
or
and
sbb
jns
popf
popa
fidiv
add
or
loopne
sbb
cmp
adc
cmp
sub
aad
mov
sbb
push
jb
sub
and
add
and
pusha
pop
mov
in
bound
and
loopne
fbstp
je
aad
pop
out
je
inc
inc
sbb
movs
push
retf
xchg
je
dec
xchg
stos
mov
sbb
fst
loop
sar
jl
xchg
call
loopne
cmp
cmp
dec
and
pop
or
cmps
mov
loopne
scas
and
pop
mov
push
test
pop
push
das
or
leave
clc
stos
jbe
sub
test
out
inc
inc
cmp
jb
jmp
inc
imul
pusha
mov
or
push
retf
xor
cmp
fdiv
test
test
ret
add
push
pusha
lahf
out
inc
or
cld
sbb
push
shr
xor
inc
push
push
sbb
sub
push
jl
dec
xlat
add
xchg
outs
mov
inc
mov
in
add
jle
shl
add
in
mov
data16
pop
hlt
sbb
dec
adc
jp
jo
sbb
sbb
fst
pop
inc
adc
sbb
push
push
or
add
and
int
rol
repz
inc
call
fcom
ins
push
retf
imul
push
gs
icebp
sbb
(bad)
je
jp
cs
pop
popa
or
rol
push
stos
ja
ds
and
mov
ror
fadd
push
dec
ror
jl
or
sub
inc
aas
or
push
or
test
sub
bound
cmp
jg
pushf
add
sbb
push
loopne
cmp
add
lds
mov
mov
call
sbb
adc
xor
or
mov
push
sar
mov
fwait
push
inc
pop
pop
or
popa
rol
mov
pop
or
loop
push
xchg
out
pusha
fisttp
dec
ficom
or
sbb
add
rcl
adc
or
inc
jnp
dec
xor
add
xor
not
sbb
retf
inc
cmp
ja
test
cmp
cmps
bound
cmp
sbb
or
ins
xchg
in
(bad)
push
loope
cmp
xor
in
outs
(bad)
aas
cmp
xor
outs
(bad)
jg
test
sbb
cwde
cmp
add
popf
inc
dec
aam
pushf
dec
pop
ret
(bad)
cs
mov
es
pop
sub
lock
xor
xchg
jno
add
idiv
call
outs
xchg
and
and
pushf
paddusw
jl
cmp
jno
xchg
sub
lock
mov
push
cmp
or
mov
cmp
(bad)
(bad)
push
int3
or
pop
add
push
stos
or
or
push
bound
push
push
adc
add
adc
fisub
mov
outs
and
repnz
or
add
add
daa
arpl
or
outs
adc
jmp
add
shl
fs
test
cmp
lods
lods
lods
lahf
test
int
popa
shl
and
sbb
pop
jmp
add
add
pop
popa
loopne
ds
jb
cmp
jne
test
or
je
jbe
inc
dec
pusha
nop
cmp
das
add
mov
jo
(bad)
(bad)
sbb
fsubr
jns
dec
push
adc
loopne
add
pop
mov
fmul
lds
jle
out
rol
icebp
cmp
dec
in
dec
inc
cmp
test
and
rcr
test
inc
aam
push
and
xchg
jnp
out
pop
enter
add
add
rcr
mov
je
inc
out
add
arpl
jmp
fdiv
add
mov
xor
cmp
mov
addr16
mov
stos
pop
or
imul
and
sub
iret
(bad)
adc
call
mov
lahf
(bad)
test
scas
adc
in
pop
add
dec
jge
dec
and
in
dec
imul
iret
enter
call
retf
xor
sti
and
mov
cmps
sbb
adc
aas
sbb
dec
loop
stc
scas
mov
push
mov
or
mov
xor
loope
aaa
and
xor
jmp
xchg
mov
call
xchg
adc
shr
mov
mov
pop
stc
adc
or
sub
(bad)
or
cmp
push
adc
ror
sbb
xor
daa
rol
or
or
xchg
mov
xor
cmp
mov
mov
and
jle
cmc
mov
xchg
xor
or
ja
cmp
add
in
int
pop
or
push
test
sbb
mov
pop
push
inc
clc
dec
fbld
cvttps2pi
dec
pop
aam
pop
fnstenv
add
pop
test
out
cmp
push
xor
ins
cmp
js
or
icebp
jl
movs
(bad)
into
and
jmp
lock
(bad)
jl
cmp
icebp
sub
or
or
dec
inc
test
dec
popf
retf
call
jl
addr16
ror
add
cwde
sub
pop
rcl
scas
jl
jbe
movs
dec
repnz
fdiv
mov
in
push
mov
mov
cmp
popa
lock
xchg
xor
iret
sbb
dec
(bad)
dec
cmp
xlat
mov
add
sub
dec
jbe
mov
cmp
push
jl
push
sbb
jae
and
pop
adc
rcr
sub
inc
cwde
fcmovnu
outs
ins
lea
or
(bad)
data16
sbb
mov
loopne
(bad)
jmp
imul
out
fst
mov
dec
in
inc
arpl
sub
pop
push
data16
sub
push
or
mov
dec
inc
and
retf
or
cmp
je
mov
lea
pop
dec
iret
xor
data16
mov
sar
add
sub
mov
or
mov
loope
fld
lods
js
cmps
in
and
lea
or
(bad)
pop
jmp
xchg
(bad)
cmp
dec
xchg
adc
call
pusha
aaa
or
adc
pop
mov
cli
jg
ret
fwait
sbb
sbb
cmp
cmp
loopne
fs
mov
sbb
call
int
xor
push
leave
xor
sbb
or
cmp
fadd
sub
and
xor
iret
cld
xchg
push
add
adc
jg
outs
mov
cld
dec
sub
push
and
xchg
and
sbb
in
xchg
test
adc
test
mov
dec
xor
popf
icebp
cmps
icebp
mov
loopne
pxor
lock
loop
and
int3
sahf
dec
inc
je
or
ret
call
jo
pop
pop
loopne
sub
jl
or
dec
pop
popa
call
inc
sub
leave
fs
add
ds
or
dec
inc
jg
cmp
pop
ss
je
dec
mov
pop
sar
dec
xchg
xchg
xchg
xchg
(bad)
ja
push
mov
inc
in
or
retf
jo
gs
outs
push
sub
inc
or
movs
mov
add
dec
cmp
fadd
popf
add
jo
jge
sub
(bad)
push
call
adc
fisttp
add
xchg
out
mov
fsub
pop
fldenv
push
pusha
aam
dec
and
lea
jmp
or
sub
sar
rol
repnz
lods
sbb
add
adc
jmp
fcomi
shl
imul
push
pop
adc
sub
fisttp
scas
test
mov
sbb
add
jne
sbb
or
add
ins
jmp
test
es
sbb
test
xchg
add
adc
(bad)
push
test
setb
mov
push
inc
call
sbb
adc
or
jbe
in
lea
jb
fcomp
cmp
cmp
mov
jge
test
pop
ret
add
xor
jae
add
add
shl
push
mov
movzx
fisubr
sub
rcr
shl
into
sub
mov
stos
adc
cmp
cmp
loopne
mov
dec
push
adc
fsubr
repnz
push
call
pop
pusha
movs
xor
cs
xchg
test
ds
cmp
sub
shl
pop
aam
add
push
add
ds
xor
jle
jmp
mov
mov
mov
jbe
ret
clc
std
xchg
rol
out
mov
xor
jmp
mov
cmp
es
cmp
sub
dec
xor
jg
inc
dec
pushf
add
out
movs
add
stos
adc
fst
or
ficom
sbb
xor
cmp
push
or
cld
(bad)
xor
in
xor
mov
jle
retf
call
jmp
push
mov
adc
pop
or
add
(bad)
and
rcr
(bad)
dec
jne
mov
cmp
stos
jb
pop
ret
jmp
movzx
xor
imul
add
inc
dec
ds
add
(bad)
(bad)
mov
into
shl
and
stos
or
xor
ret
in
push
sbb
add
loop
js
ins
(bad)
push
xor
xchg
movs
inc
je
xor
rcr
lods
push
xor
sbb
add
pop
sub
cld
cmp
rol
inc
dec
xor
ins
pop
xor
push
xor
add
adc
hlt
cmp
adc
add
pop
add
add
sub
movs
push
test
repz
pushf
pushf
rol
jmp
or
add
stos
lods
or
lods
jmp
(bad)
dec
rcl
dec
push
add
cmp
jne
mov
and
fiadd
mov
push
cld
cmp
push
leave
or
and
dec
adc
push
add
pop
sbb
cmp
add
daa
or
sbb
pop
or
push
ins
pop
sbb
inc
es
mov
enter
jbe
and
sbb
push
dec
movs
dec
cld
dec
jne
mov
rcr
add
inc
add
inc
or
sub
jl
test
sti
xor
bswap
dec
dec
pusha
add
repz
retf
xor
sbb
sbb
push
jo
sar
dec
pop
cmp
cdq
cmp
inc
jne
jl
test
sbb
cmp
push
test
mov
pusha
pushf
push
lds
adc
ror
push
out
add
ficom
add
lods
test
or
mov
cmp
push
call
or
push
jo
enter
and
cmp
push
js
xor
js
cmp
jmp
dec
sbb
sub
out
push
shl
test
jmp
pop
add
dec
xor
jb
rol
mov
adc
jbe
dec
inc
or
(bad)
test
jbe
xor
mov
and
leave
je
add
clc
popf
sub
jmp
add
shl
add
retf
and
sub
sub
(bad)
sub
test
fs
sub
in
sbb
mov
mov
add
into
shr
and
dec
push
mov
pop
shl
dec
xor
push
dec
shl
jo
movs
cmp
mov
mov
out
adc
jg
imul
or
inc
rol
shr
retf
inc
icebp
cmp
and
dec
neg
push
push
imul
push
stos
sbb
jmp
sub
dec
(bad)
jmp
cmp
sbb
not
pop
and
mov
or
sub
sbb
pop
clc
inc
mov
dec
and
leave
inc
arpl
(bad)
xor
retf
shr
ret
sbb
xchg
sbb
shl
pop
or
sbb
or
cmps
clc
adc
adc
clc
and
mov
test
and
ja
adc
mov
or
push
xor
sbb
sti
pop
and
cmps
aam
les
test
jbe
cdq
call
(bad)
add
mov
sbb
shr
xchg
loop
inc
push
dec
inc
cmp
or
cpuid
xor
xor
ret
js
inc
(bad)
pusha
outs
or
sbb
shrd
mov
add
add
cmp
ds
add
add
mov
pushf
retf
sub
pusha
ror
pop
shld
loopne
popf
mov
gs
sar
or
sub
(bad)
call
out
pop
and
out
or
or
call
xor
pop
mov
cdq
and
add
cli
je
rcl
xchg
je
rol
add
in
sbb
add
cmc
mov
adc
popf
sub
ret
xor
popa
ffreep
push
adc
adc
dec
fstp
aad
inc
inc
or
xor
imul
or
lock
fdivr
sbb
mov
push
daa
shl
dec
add
jb
dec
dec
add
imul
mov
push
mov
or
sub
in
sub
shl
clc
and
xor
lds
fnstsw
xchg
hlt
das
cmp
lea
out
sbb
cmp
jbe
mov
push
mov
or
je
(bad)
mov
mov
dec
mov
idiv
xchg
stc
cs
cmp
popf
test
(bad)
ins
push
sbb
pop
out
shl
hlt
mov
aam
mov
and
rol
add
xor
cmps
adc
pop
lods
or
adc
or
mov
push
in
jb
lock
jae
xor
mov
dec
cmp
shl
cmp
sbb
es
cmp
cmp
mov
mov
enter
sub
cmp
cmp
sub
mov
sub
mov
inc
cmp
mov
jnp
aam
inc
ret
sbb
dec
sar
dec
dec
adc
popf
push
mov
lock
shl
push
cmp
push
jns
ds
xchg
pop
mov
adc
pop
mov
retf
ins
dec
cmp
push
mov
mov
xchg
out
cmp
jmp
sub
jl
add
clc
test
(bad)
lea
mov
pop
sbb
call
scas
daa
pop
jb
xchg
bound
mov
fcomp
jmp
jge
mov
or
mov
or
sbb
je
sub
lea
dec
hlt
scas
or
xor
test
gs
push
add
clc
clc
cmp
mov
shl
add
ret
xchg
repnz
mov
jne
aam
aas
mov
push
lea
xchg
xchg
outs
hlt
icebp
add
and
loopne
add
sar
adc
and
cmp
inc
sub
les
sbb
int
push
jae
pop
cmp
cmp
jns
jnp
jl
mov
jge
daa
and
mov
fmul
hlt
dec
fild
and
or
ds
cmovb
rcl
test
iret
js
ret
stos
jo
and
and
xchg
xchg
mov
out
sbb
stos
add
mov
cs
push
sub
enter
xchg
sub
mov
loope
outs
sub
imul
pop
dec
call
je
mov
mov
bound
ret
rcl
std
push
inc
dec
pop
cmp
or
ja
inc
and
sub
mov
gs
lea
fsub
dec
je
push
mov
inc
mov
inc
fdivr
repz
fstp
ror
mov
(bad)
frstor
adc
xchg
xchg
outs
or
repnz
mov
and
dec
clc
cmp
sub
retf
and
sbb
jnp
pop
pop
pop
pop
add
movs
punpckldq
sub
bound
jge
add
lods
inc
mov
shr
fdivr
pop
cmp
fadd
jmp
sbb
xor
pop
sub
sub
push
cwde
sub
dec
call
or
fsubr
cmp
add
(bad)
(bad)
ds
mov
sub
add
pop
add
enter
add
movs
cmp
xlat
push
xchg
adc
sbb
clc
add
sbb
or
xor
nop
and
mov
adc
fdiv
ffree
aas
sbb
in
in
call
rol
sub
loope
dec
aam
cmp
aad
rol
scas
(bad)
rcl
retf
test
shr
and
dec
clc
fisttp
retf
add
(bad)
lock
xor
shl
aam
bound
jae
add
jmp
cmpxchg
test
stc
pop
and
pop
(bad)
or
or
xor
test
adc
sbb
(bad)
mov
mov
jae
shr
sub
push
pop
fdivr
xchg
cli
fmul
mov
dec
jne
in
dec
test
adc
jge
mov
lea
add
sti
retf
xchg
fiadd
push
and
aam
pop
pop
fdivr
aam
call
cmps
add
fisttp
mov
js
jp
sbb
adc
arpl
popa
xchg
scas
aam
das
adc
jns
cmp
fcomp
ins
inc
cmp
jne
sub
or
push
rcl
lock
sub
in
sbb
xchg
mov
adc
sbb
xor
mov
add
dec
xor
pop
hlt
fmul
mov
les
pushf
ficomp
and
sub
add
ds
and
fbstp
pop
mov
add
mov
mov
mov
adc
cmp
cmp
cwde
shl
enter
dec
mov
and
outs
pop
sbb
jmp
std
daa
cmp
adc
outs
xor
adc
cmp
inc
mov
mov
and
dec
shl
loopne
fdiv
cmp
inc
mov
dec
sar
sbb
add
cmps
fisttp
ja
mov
cmp
dec
and
mov
addr16
cmps
sahf
jo
fs
fidiv
mov
or
sub
scas
adc
fimul
je
fdiv
or
ins
outs
bound
sub
ja
adc
sub
or
in
sub
mov
sbb
and
sub
movs
hlt
pop
adc
mov
inc
std
push
jmp
pop
adc
or
dec
jl
inc
sub
cmp
jbe
lea
sbb
clc
mov
(bad)
jno
in
lea
dec
cmp
rcl
jl
aaa
cmp
adc
and
adc
pop
sbb
mov
lods
and
ret
adc
pop
jbe
dec
retf
and
push
fwait
or
sbb
sbb
or
adc
push
ror
xor
and
iret
sub
retf
shl
sub
lods
dec
push
sub
add
jbe
jbe
mov
arpl
pop
sahf
or
jecxz
in
nop
add
cli
push
loope
imul
push
pop
xor
mov
sub
adc
or
mov
lock
shr
sub
cmp
int
mov
and
add
imul
mov
xchg
pop
jae
dec
sbb
mov
push
push
cmp
xchg
or
pop
pop
push
stc
je
xlat
add
aaa
jge
or
inc
add
xor
push
hlt
or
mov
xchg
fcmovu
add
cmp
fwait
sbb
sub
inc
or
ret
add
out
inc
imul
aaa
inc
std
shl
clc
and
adc
mov
cmps
jns
js
dec
bound
retf
dec
stc
jg
jno
dec
in
rol
shl
shr
or
rcl
(bad)
icebp
sub
add
repnz
xor
jno
jecxz
push
jmp
cmp
adc
pusha
dec
(bad)
dec
loope
enter
pop
ins
and
push
inc
mov
call
lahf
js
add
or
fadd
pop
inc
cld
scas
dec
out
js
arpl
add
pop
mov
adc
xchg
cli
cmp
mov
ja
cdq
ret
cdq
mov
mov
popf
dec
dec
sahf
pop
pop
adc
or
xchg
jo
jmp
inc
push
xchg
add
mov
jbe
jno
inc
(bad)
cmp
nop
and
test
std
shr
out
ins
add
or
daa
mov
cld
xchg
sar
icebp
stos
inc
dec
jmp
lahf
push
mov
or
hlt
jmp
and
inc
popf
xor
xchg
pop
test
sub
aad
or
aad
sub
mov
xor
push
pushf
hlt
lock
rcl
cs
cli
cmp
sub
fnsave
cmp
push
je
and
mov
mov
ror
mov
mov
and
(bad)
test
push
push
shl
cmp
retf
or
mov
push
sbb
jmp
popf
sub
inc
cmp
jecxz
xor
retf
mov
push
inc
jb
popa
mov
pop
fld
loope
jmp
push
inc
adc
mov
xchg
sub
and
jmp
cmp
push
and
sti
push
and
lods
mov
fs
cld
ret
sub
sub
lea
mov
enter
inc
(bad)
cmp
test
pop
mov
jne
xchg
cdq
xchg
xchg
or
or
sub
js
or
xor
adc
fist
mov
dec
sbb
and
sub
mov
movs
shr
or
cmp
pop
sub
inc
cli
lods
xor
ret
and
xlat
jg
jmp
shl
push
mov
ret
and
adc
pusha
push
sub
rol
push
mov
adc
xor
adc
data16
bound
push
push
ret
cmp
mov
cmp
xchg
add
pop
inc
pushf
cmp
inc
(bad)
xchg
pusha
and
repz
inc
fsubr
sub
cld
or
(bad)
fst
nop
or
pop
cmp
and
push
ret
bound
bound
pop
add
cmp
xor
xor
dec
mov
loope
pop
inc
test
push
dec
fadd
enter
es
jbe
or
add
hlt
mov
dec
clc
in
dec
cmp
in
cmp
je
adc
sub
add
sbb
jo
je
fsub
mov
dec
cmp
jb
cmp
or
jl
in
jmp
push
sbb
cmps
lods
mov
add
pop
or
clc
pushf
out
ret
adc
pusha
pop
test
inc
adc
add
push
test
xor
hlt
pop
test
out
jg
jmp
cmp
js
clc
(bad)
fcmovnbe
call
cli
loop
pop
bsf
lea
leave
pop
push
scas
cld
sub
call
add
das
in
out
mov
push
popa
fistp
add
adc
pop
lods
jnp
jno
xor
test
das
shr
out
jp
lea
inc
jmp
fild
call
sub
mov
ins
sahf
mov
arpl
mov
jmp
inc
lock
mov
sbb
adc
push
xor
cld
outs
inc
push
xlat
jo
cmp
jne
add
lods
ins
mov
mov
sub
ss
lea
retf
ja
lea
out
pop
hlt
call
adc
std
push
jo
and
adc
adc
test
or
pop
repz
push
aam
rol
xor
nop
push
and
adc
add
test
adc
int3
adc
ins
test
mov
test
and
adc
sub
or
and
dec
cmps
jae
push
aas
ror
rcr
sbb
je
add
mov
push
inc
inc
add
xchg
inc
fiadd
add
hlt
in
fistp
dec
mov
mov
cmp
jb
sbb
cdq
push
pop
xor
push
pop
push
mov
cdq
adc
and
xchg
fwait
cmc
stos
aaa
and
add
push
mov
(bad)
fisub
pusha
pop
loope
cmp
je
call
rcl
push
pop
icebp
xor
or
add
add
rol
mov
xchg
push
stos
xchg
rol
sar
cli
dec
mov
outs
xchg
sbb
push
push
push
test
sbb
pop
sub
mov
pop
sbb
mov
push
and
jbe
or
leave
cs
or
push
add
js
or
test
ins
js
shr
out
popa
xchg
adc
call
and
ins
sub
loope
adc
and
xadd
dec
mov
cmp
inc
pop
adc
les
mov
call
pop
or
push
jg
imul
fsubr
xchg
popf
jmp
pop
jecxz
call
pushf
out
xchg
fbstp
mov
imul
sbb
retf
add
popf
lods
add
mov
dec
xor
das
fistp
and
outs
psubsw
or
mov
push
mov
imul
adc
sbb
push
jno
sbb
mov
push
add
clc
iret
or
test
repnz
sbb
scas
push
(bad)
jo
mov
and
and
mov
or
ja
push
add
js
mov
jo
add
push
push
call
fadd
int
xchg
push
test
sub
xchg
mov
cmp
add
shl
mov
adc
test
call
sub
ret
push
xchg
popa
jae
inc
and
adc
jno
xor
sbb
pop
rcr
ret
(bad)
push
je
inc
adc
ds
or
pushf
in
and
adc
mov
add
push
(bad)
jbe
ins
je
xor
mov
or
ss
pop
cdq
nop
nop
dec
or
shl
cmp
lea
mov
scas
shl
inc
cmp
dec
(bad)
dec
add
out
repz
or
dec
mov
mov
fs
adc
jg
dec
jo
fmul
add
and
jno
mov
scas
ror
lea
cmps
add
inc
jo
pop
inc
mov
je
popa
dec
adc
jmp
inc
pop
inc
adc
and
push
stos
out
cmc
jecxz
scas
add
dec
(bad)
push
add
mov
clc
sbb
and
ja
and
call
adc
and
sti
cmp
xor
mov
mov
xor
adc
mov
sub
mov
push
jb
add
adc
cmp
add
dec
fist
jno
loop
lods
(bad)
push
cmp
xchg
mov
std
ins
loop
lea
mov
popa
mov
cmp
jecxz
sbb
push
call
cli
rol
call
scas
cwde
xchg
jo
or
inc
sub
fs
cld
mov
mov
or
adc
dec
shl
sbb
and
sub
xor
call
ret
push
cmp
enter
jg
or
mov
push
pop
inc
mov
inc
ds
cmp
popf
aad
add
push
(bad)
in
pop
lods
add
imul
cmp
mov
and
mov
imul
adc
sub
add
mov
and
cs
out
sub
test
fcomp
pop
ja
jbe
or
inc
iret
loop
mov
jmp
fisubr
inc
int3
sbb
sbb
add
popa
cwde
and
push
cmp
inc
retf
pop
int3
cwde
or
sbb
fs
sbb
or
cli
leave
arpl
add
neg
inc
lea
call
movs
pop
xchg
push
or
or
cmp
inc
out
mov
mov
mov
adc
push
and
adc
dec
shl
cmps
push
sbb
sar
pushf
and
pop
sub
in
movs
in
rol
fidiv
retf
push
test
push
dec
(bad)
mov
jmp
mov
loop
jg
mov
mov
dec
loopne
neg
(bad)
sub
mov
lds
pop
call
xchg
imul
xchg
sub
mov
loopne
outs
test
xchg
add
mov
popa
pusha
jmp
add
data16
push
mov
jp
and
add
xor
cmp
inc
(bad)
enter
mov
loopne
in
(bad)
pushf
or
jb
xor
and
ret
inc
nop
sub
fist
pop
rcr
rcl
mov
cmp
js
xor
test
rcl
xchg
mov
lea
add
xchg
rol
pop
mov
(bad)
adc
xchg
xchg
aam
push
and
mov
mov
neg
cld
xchg
and
inc
inc
in
fmul
add
dec
fs
les
ror
dec
movs
xor
in
push
push
shr
int3
enter
fsubr
test
and
sub
lea
ror
cmp
movs
fsub
cmp
fdivrp
call
pop
add
ret
fmul
mov
cmp
adc
paddd
(bad)
push
cld
mov
dec
adc
push
add
daa
cmp
dec
sbb
data16
mov
(bad)
jbe
hlt
sbb
pusha
add
sar
fs
sbb
loope
push
push
fsubr
cmp
fcom
test
mov
jge
cmps
test
inc
push
push
or
dec
sbb
or
adc
sub
jne
fimul
ret
loopne
push
mov
mov
rol
enter
jne
mov
out
je
push
mov
sub
add
adc
jbe
adc
(bad)
sbb
push
cmps
sahf
shl
cmp
ja
ins
dec
(bad)
or
ficom
mov
push
adc
jno
popf
imul
mov
or
xor
pop
ficomp
adc
push
lock
lods
mov
shr
or
mov
mov
int3
ss
sub
je
jl
pop
sbb
(bad)
push
test
add
inc
inc
push
jo
dec
pushf
and
sbb
sbb
xchg
shl
adc
ins
rcl
ret
or
mov
cmp
(bad)
(bad)
pop
mov
dec
sti
in
fisub
es
xor
push
sbb
aam
loopne
les
sbb
or
push
outs
push
out
xor
or
lods
add
cmp
in
push
xor
jo
and
cli
js
adc
sub
scas
adc
and
cmp
sub
test
sti
repz
dec
push
fs
adc
add
add
out
xor
aam
cli
mov
imul
cmp
push
in
lahf
ror
dec
push
jge
ss
mov
mov
and
xlat
call
cwde
inc
push
call
retf
mov
(bad)
pop
xchg
ins
rcl
jmp
or
and
aam
popa
jle
test
dec
and
je
or
je
inc
data16
xor
les
aam
jo
call
nop
add
(bad)
sub
dec
and
add
outs
call
add
or
push
and
enter
jle
ss
sbb
lods
dec
cmp
pop
sub
sar
pop
sub
(bad)
popa
pop
jo
out
and
adc
out
fdivrp
and
xlat
sub
inc
lock
inc
jmp
sbb
adc
rcl
and
outs
xchg
or
in
add
rcr
das
jecxz
jl
sub
int3
pop
imul
mov
push
mov
sub
cmps
jmp
jg
aaa
and
cs
pop
mov
mov
pusha
and
or
mov
xchg
add
adc
add
xchg
fadd
xchg
add
add
add
adc
outs
push
pusha
jl
sbb
xchg
mov
sbb
push
inc
(bad)
(bad)
jmp
sti
xor
lea
mov
cmp
lods
cmp
fdivr
pop
jne
inc
movsx
push
or
pop
push
add
xor
sbb
popa
jae
jae
push
jmp
inc
jl
inc
jg
mov
cmove
nop
shr
je
jg
or
mov
sbb
ss
popa
jmp
or
jmp
xor
fisub
inc
jmp
dec
jmp
cmp
jg
add
loopne
inc
inc
inc
adc
add
fadd
mov
cmp
jb
inc
sub
sub
popf
or
and
jmp
movs
cli
xor
test
cwde
les
xor
lods
js
sub
int3
add
retf
push
lods
sbb
ja
push
sar
(bad)
jbe
xchg
(bad)
xchg
mov
push
mov
cs
push
mov
inc
fcomp
out
and
pop
fimul
pop
jmp
or
imul
adc
movs
fcom
sub
movs
jmp
mov
mov
cmp
add
xor
clc
inc
ds
hlt
push
js
sbb
push
pop
and
jl
xor
add
add
jl
pop
repnz
push
dec
add
mov
call
jns
neg
fisttp
push
ror
mov
repz
lahf
out
cwde
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
cld
lock
lea
add
add
(bad)
imul
push
or
sbb
mov
pusha
pop
sti
and
adc
push
lea
jl
cld
or
sub
leave
and
std
(bad)
cld
out
add
ins
neg
adc
xor
lods
mov
test
nop
xchg
push
mov
push
loopne
add
out
add
xchg
push
jbe
out
add
cmps
and
push
add
nop
dec
dec
addr16
daa
ret
jno
add
jmp
xor
cmp
inc
dec
jns
jns
push
pop
fs
aaa
sbb
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
nop
xchg
mov
jnp
cwde
push
test
inc
aaa
adc
dec
push
push
add
pop
sysenter
sub
dec
daa
ja
nop
adc
fistp
push
inc
inc
pop
pop
and
fs
call
ds
movs
inc
enter
cmp
out
push
xchg
cmp
xor
shl
sahf
and
adc
inc
fistp
xchg
inc
push
inc
jmp
add
hlt
mov
lock
mov
inc
hlt
inc
pop
nop
add
mov
push
push
inc
fcomip
inc
push
or
add
inc
mov
out
out
movs
or
push
mov
(bad)
int3
inc
shl
aam
inc
(bad)
mov
dec
fiadd
sbb
in
push
push
in
adc
or
pop
push
movs
out
shr
jecxz
aaa
mov
iret
sbb
mov
ror
or
es
fcomp
rcr
push
mov
cli
jmp
push
cmp
lock
ja
(bad)
in
daa
enter
ss
repz
adc
aaa
mov
popa
or
call
popa
add
es
mov
dec
test
(bad)
loopne
xchg
cli
cmp
adc
inc
cld
ficomp
call
call
xor
call
mov
mov
push
or
or
adc
ds
push
xlat
mov
call
mov
add
jb
fisub
xor
jle
sti
sub
pop
cmp
adc
nop
cmp
mov
pop
jnp
inc
addr16
mul
lock
mov
dec
or
or
aam
stc
lock
ret
xor
aaa
loope
pusha
and
cmp
test
psubw
inc
xor
es
mov
or
addr16
inc
adc
dec
or
lds
out
aaa
and
or
jno
outs
cld
mov
push
call
mov
xrelease
call
movs
add
mov
inc
or
ins
cs
pop
popf
mov
(bad)
ins
out
lods
jge
mov
inc
ins
ja
scas
mov
and
mov
out
mov
out
mov
cmp
push
out
sub
sub
(bad)
push
pop
inc
inc
xchg
test
ret
inc
fnstcw
loopne
cli
and
shl
sbb
sbb
sbb
inc
loop
fimul
mov
mov
add
inc
xchg
call
jmp
pop
mov
outs
and
loope
movs
popa
push
stc
add
mov
sti
bound
cld
(bad)
and
pop
cmp
or
clc
adc
push
mov
mov
dec
pop
inc
mov
push
(bad)
std
fwait
xchg
arpl
cmp
or
mov
sub
rcl
xor
ja
pop
fisttp
stos
mov
mov
add
and
out
lock
lahf
xchg
int
std
in
sahf
mov
loop
out
cmp
sub
not
popf
or
popf
fisubr
fisttp
cmp
ja
call
ds
jae
pop
dec
repnz
outs
add
mov
movmskps
jnp
sahf
rol
shr
sub
lahf
pop
gs
sar
clc
test
sub
ss
xor
sub
jne
xchg
jne
xor
sbb
movs
je
inc
jb
pop
adc
xchg
inc
iret
mov
or
dec
cwde
fadd
pop
repz
xor
xor
test
stos
pop
clc
iret
ins
iret
cs
push
dec
push
mov
ret
pop
in
pop
dec
jnp
push
mov
sar
dec
pop
inc
ror
ss
sbb
push
in
push
push
jne
inc
xor
into
scas
nop
hlt
ret
jmp
div
cs
pop
mov
scas
cmp
or
inc
dec
sbb
and
jge
mov
inc
and
or
das
sbb
call
push
or
out
push
jmp
sub
xchg
outs
(bad)
cli
sbb
sbb
add
adc
sbb
repz
lods
cdq
(bad)
in
sub
push
std
(bad)
fcom
pop
inc
mov
call
or
aad
adc
in
sbb
xadd
and
mov
pusha
inc
test
or
inc
es
sub
mov
and
sub
mov
cmp
movd
dec
dec
pop
inc
jmp
jo
push
dec
push
bnd
inc
xor
fs
in
mov
push
mov
(bad)
lock
add
adc
sbb
dec
dec
ja
lahf
pop
loopne
inc
adc
jo
sub
cmp
adc
and
loopne
xor
jmp
cmp
jge
ss
loop
cmp
mov
inc
pusha
push
mov
or
jae
outs
sub
ins
or
cmp
cmp
shr
inc
adc
dec
xor
push
(bad)
in
rol
jle
sbb
add
das
xor
fsubr
sub
push
or
popf
je
sub
enter
adc
sub
movs
push
pushf
je
pop
fsubr
ds
loop
vmread
and
jmp
push
adc
in
ds
or
mov
fs
dec
mov
xchg
jb
inc
cli
das
jo
cmp
je
movzx
sbb
repz
add
sub
lahf
add
imul
mov
cmp
dec
add
and
xor
add
adc
je
push
dec
add
repz
push
jno
je
call
fld
add
addr16
push
push
xchg
cmp
push
inc
pop
push
pop
jb
and
movs
test
add
mov
or
sbb
iret
enter
pop
in
repnz
or
add
repnz
or
or
or
inc
fsubp
mov
cwde
xchg
add
sbb
push
ja
mov
push
adc
mov
adc
pusha
adc
mov
adc
seto
add
cmps
repnz
ret
in
jns
adc
call
adc
xor
sbb
push
push
pop
imul
sbb
inc
push
nop
ja
call
repnz
sbb
add
sbb
sbb
(bad)
sbb
sbb
jns
mov
jb
imul
sahf
sbb
fdivr
repz
iret
sbb
pop
add
push
inc
push
pop
pop
add
jg
jne
add
add
sub
cmp
jae
aaa
sbb
mov
xchg
mov
rol
gs
(bad)
jmp
cmp
je
jns
call
repnz
lea
mov
in
in
and
xor
sbb
repz
push
mov
add
call
enter
adc
nop
neg
jmp
jmp
retf
sbb
out
in
in
pop
push
mov
in
cdq
mov
add
inc
in
sahf
out
out
cmp
cmp
out
sbb
and
in
pop
lock
pop
enter
icebp
enter
pslld
test
pop
out
std
repz
push
push
jns
std
hlt
hlt
ror
cmp
hlt
fwait
mov
in
inc
jg
test
push
pop
idiv
sbb
clc
clc
cdq
inc
fmulp
add
stc
inc
stc
add
mov
cli
(bad)
nop
adc
cld
repnz
outs
sub
cld
je
cld
push
pxor
mov
xor
cmp
xor
clc
fisub
inc
fwait
(bad)
cmp
dec
cs
test
ror
or
add
imul
or
cs
push
jecxz
std
sti
in
enter
in
icebp
jo
mov
push
push
jns
daa
xchg
sti
out
out
in
or
in
repnz
dec
sti
sub
out
inc
mov
pop
jmp
pop
ins
nop
jmp
cdq
(bad)
in
das
xchg
inc
pop
add
and
sbb
inc
call
push
jno
lock
cli
xchg
xchg
mov
stc
rol
sub
repz
or
push
sar
push
pop
dec
xchg
xor
inc
pop
stc
div
not
enter
fwait
xor
add
mov
adc
stc
out
clc
cmps
jb
popa
cmp
pop
ins
nop
sti
sti
cdq
mov
jns
cld
or
jmp
and
inc
ds
cld
sub
xor
cmp
mov
pop
shl
adc
xchg
scas
mul
xor
push
mov
sbb
sbb
pusha
cdq
(bad)
out
sub
xchg
cmp
mul
not
push
push
adc
mov
loop
jno
div
and
pop
mov
xchg
div
and
ins
out
jb
or
jno
test
div
pusha
leave
add
sbb
xchg
cmps
repnz
and
xchg
cmc
adc
xchg
pop
jae
pop
mov
cmc
div
idiv
scas
jae
fwait
and
mov
inc
clc
clc
jecxz
jns
loopne
stc
popa
cmp
dec
push
cli
cli
jno
adc
jb
hlt
pop
jne
mov
mov
rol
data16
into
shr
test
idiv
jo
(bad)
sti
and
sbb
mov
mov
adc
loope
repz
and
mov
repz
inc
or
test
mov
inc
repz
push
jno
and
xchg
xchg
mov
bnd
imul
popf
dec
push
mov
xchg
repnz
pop
jo
sbb
cs
in
cmc
je
dec
push
and
add
add
pop
loope
sbb
(bad)
icebp
jns
icebp
test
nop
jo
icebp
jb
xchg
icebp
cmp
sub
cmc
cmc
daa
xchg
inc
fdiv
add
jecxz
in
test
jns
mov
popf
lock
jb
sbb
cmc
jne
repnz
xor
jne
and
push
lock
xchg
scas
and
test
sbb
jmp
mov
les
push
sub
out
xchg
enter
in
xchg
add
jne
inc
ds
add
sbb
inc
sahf
add
stos
add
loop
mov
add
push
jnp
pop
add
mov
adc
and
cmp
jge
test
dec
add
sahf
(bad)
and
jmp
dec
xchg
pop
dec
inc
or
pop
fstp
dec
test
push
pop
add
dec
pop
push
push
pusha
data16
ss
ficom
mov
repz
out
dec
sub
pop
mov
push
fwait
pop
cmps
pop
enter
stc
cmp
or
cmp
cmp
stos
popa
push
out
(bad)
cli
aas
iret
imul
out
mov
xor
or
xchg
add
shr
call
clc
adc
sti
jno
fs
scas
adc
leave
or
xchg
test
sti
inc
popa
and
jmp
jmp
adc
xor
fldcw
je
sub
mov
xchg
jmp
xchg
enter
test
or
retf
gs
mov
push
rep
mov
dec
jmp
sbb
lods
xor
or
adc
inc
inc
fs
or
pop
sub
adc
push
sbb
into
call
add
scas
jle
push
and
inc
rol
jp
inc
pop
add
adc
in
lahf
das
rcl
push
adc
(bad)
loop
mov
les
or
call
inc
add
mov
or
fdiv
jg
fadd
call
call
push
fdiv
repz
add
lods
add
cmp
sub
or
nop
aad
sub
movs
and
adc
push
jo
push
movs
loop
cmp
xchg
or
fbld
sub
adc
cmp
call
(bad)
push
int3
sbb
push
call
cmps
adc
push
scas
std
or
add
push
push
mov
and
in
mov
add
mov
int3
sar
in
jle
or
or
inc
and
sti
or
xor
sbb
jmp
mov
fst
or
add
or
call
or
scas
and
shl
and
xchg
jo
or
xchg
mov
mov
call
cmp
daa
mov
sub
push
xchg
cmp
pop
jmp
je
call
inc
mov
ins
dec
add
repnz
push
sub
mov
add
sbb
jle
add
cmp
mov
and
dec
(bad)
nop
pop
or
or
enter
out
sahf
add
inc
xor
push
push
ret
mov
jl
in
and
stos
xchg
add
cmp
call
js
sub
dec
xor
or
(bad)
xor
test
adc
ja
iret
mov
iret
call
call
dec
out
mov
cwde
cli
adc
or
add
dec
outs
das
int
and
xchg
jnp
xor
jne
das
jle
dec
fwait
sbb
mov
jge
lahf
loop
adc
lea
ret
and
shld
call
and
ret
in
ss
mov
lods
add
je
sbb
add
cmp
or
push
std
rol
sub
enter
or
movs
ds
sbb
pop
lahf
inc
push
sbb
stos
adc
stc
add
stos
fistp
ss
nop
xor
cmp
hlt
or
xor
mov
push
sahf
or
popf
(bad)
pop
mov
and
jb
shl
sub
sar
and
jae
cmp
push
push
cmps
xchg
pop
addr16
dec
inc
movs
push
and
mov
and
push
mov
mov
and
je
push
xchg
jmp
mov
push
aaa
push
add
ins
aas
mov
shl
jge
add
mov
sub
jo
cwde
call
pusha
inc
in
add
push
xor
push
les
sub
idiv
push
movdqa
push
dec
adc
push
and
out
fwait
xor
push
dec
and
push
jg
outs
out
jge
fbld
or
jbe
jle
xor
jg
les
lahf
outs
jg
jg
jo
mov
(bad)
xchg
mov
mov
loopne
jne
xchg
xchg
hlt
dec
inc
adc
adc
sub
prefetch
clc
xor
sub
bndldx
jb
sub
jne
fild
and
ds
cmp
je
sub
add
push
and
(bad)
ja
test
sahf
jmp
ror
div
fsubr
fld
lock
in
lock
rep
push
xor
push
cld
jmp
cmp
jne
lock
jl
jne
adc
ss
in
mov
aaa
in
sub
push
push
dec
ret
jmp
dec
sbb
mov
bound
test
xchg
movs
test
inc
retf
cmp
fldenv
add
inc
sub
add
push
and
mov
adc
mov
pop
lods
xor
sbb
pop
push
inc
outs
popa
imul
cli
inc
or
das
mov
or
leave
les
dec
or
jmp
sub
xchg
dec
fcmovu
loopne
add
ins
nop
cmp
jmp
push
or
mov
push
adc
xor
test
out
xchg
inc
test
dec
sub
pop
xor
mov
fstp
popa
adc
jb
inc
inc
nop
jns
pop
sbb
adc
or
xchg
pop
pusha
dec
ins
retf
mov
sbb
jle
sbb
shl
push
ret
xchg
in
mov
(bad)
je
mov
cmp
mov
push
add
add
mov
mov
and
jmp
xchg
inc
mov
pop
mov
cmp
push
lea
rcl
cmp
mov
add
pop
call
or
add
and
rol
ret
and
das
jecxz
mov
xchg
push
mov
fcom
daa
jbe
mov
add
push
gs
shl
ficom
fild
(bad)
pop
or
push
icebp
adc
popa
push
pop
js
mov
out
pop
pop
sub
xor
pop
ffree
enter
js
or
inc
push
inc
inc
sbb
sbb
(bad)
call
and
mov
xor
loopne
push
loopne
jmp
push
adc
jg
loopne
cli
jne
call
jecxz
sub
push
ficomp
popa
stos
movs
pop
jb
out
mov
loopne
mov
or
push
xor
add
imul
mov
jmp
xor
cmp
mov
lods
sub
ds
sub
mov
lea
and
cmps
and
rcr
pushf
sub
or
sub
imul
js
add
or
inc
mov
rcl
xor
aam
test
pop
dec
clc
xor
sub
mov
push
jp
shr
mov
imul
les
mov
push
and
idiv
rcr
xor
movs
sub
push
sbb
ret
xchg
or
enter
sub
cmp
jbe
push
pop
push
dec
jo
dec
cdq
sub
sub
jae
cmc
inc
add
shl
pop
mov
out
arpl
xor
sbb
dec
loopne
pushf
mov
mov
cmp
pop
add
push
dec
pop
add
imul
and
jne
dec
push
or
push
inc
xchg
cmc
pop
clc
and
hlt
push
(bad)
fs
push
xor
and
sti
add
pop
es
test
adc
cmp
imul
ret
and
cmp
je
push
data16
mov
sti
and
or
je
dec
add
sbb
xchg
out
loopne
pop
xor
int3
push
movs
or
add
cmc
inc
jecxz
or
or
popa
mov
hlt
mov
(bad)
in
ret
lock
mov
pop
dec
cmp
or
dec
pusha
mov
sub
mov
mov
push
sahf
dec
xchg
retf
jnp
xchg
call
inc
dec
or
jmp
dec
in
(bad)
adc
fs
jmp
push
mov
xchg
lea
sbb
or
adc
ret
or
inc
add
or
div
scas
jp
push
call
aas
gs
or
sti
or
sbb
in
popa
frstor
dec
inc
adc
inc
sbb
add
enter
and
call
push
mov
mov
and
int
mov
retf
adc
enter
or
adc
in
mov
int
add
inc
xchg
bnd
mov
push
jbe
ins
or
mov
out
or
das
mov
mov
xor
sub
lock
enterw
jae
into
outs
push
or
xor
add
imul
stc
neg
arpl
inc
(bad)
les
imul
jo
sbb
mov
sbb
push
in
punpckldq
movs
jbe
push
or
fwait
or
xor
lds
imul
push
mov
loopne
shl
sbb
add
inc
retf
std
and
stos
ror
pop
mov
loopne
nop
test
dec
jne
retf
mov
mov
mov
push
sbb
dec
adc
cmp
popf
add
adc
(bad)
sub
shr
add
addr16
inc
or
or
or
inc
add
mov
push
pop
mov
inc
add
sub
sbb
adc
retf
je
add
clc
or
or
dec
ror
inc
fs
cmp
imul
mov
push
mov
mov
add
mov
lds
not
and
enter
lahf
fwait
or
aam
lea
xlat
or
shr
mov
jno
mov
jb
cld
jbe
cmp
(bad)
push
in
xchg
ror
sub
cmp
ret
int3
inc
adc
fldcw
lods
sti
mov
cmp
(bad)
stc
add
push
xchg
add
mov
int3
push
pop
inc
call
pop
inc
stc
xchg
add
iret
clc
rol
rcr
sub
pop
add
cmp
fimul
sub
nop
dec
or
jmp
ficomp
int3
enter
movs
test
inc
add
inc
mov
add
cdq
mov
sbb
mov
pop
jg
or
cmps
stos
jle
mov
pop
pop
rcl
push
pop
adc
call
sub
adc
js
jmp
add
jmp
aaa
js
test
push
test
iret
int3
aad
dec
retf
xor
or
mov
mov
mov
sub
jmp
stos
sar
xchg
sub
dec
inc
dec
ins
pop
xor
push
sar
dec
or
and
pop
or
cmp
push
jl
push
xor
cmp
or
out
dec
je
fisttp
rcl
mov
add
fldln2
loopne
or
dec
ficom
add
mov
or
or
dec
into
(bad)
cmp
jns
mov
dec
add
inc
and
mov
push
cs
dec
into
mov
out
cmp
(bad)
or
push
xor
jns
dec
ss
pop
xchg
add
mov
shl
and
add
lods
pop
and
inc
cmp
pop
dec
loope
push
push
push
jge
or
out
jmp
in
or
scas
pusha
add
dec
or
ret
pop
ins
jne
cmp
and
test
or
or
mov
jb
push
jne
mov
dec
adc
fnstenv
jmp
jp
jmp
xor
aaa
arpl
mov
out
mov
and
or
push
leave
or
add
call
cwde
cmp
je
mov
xchg
adc
mov
outs
mov
mov
dec
pop
iret
jne
pop
inc
shl
xor
cmp
data16
pop
xchg
test
retf
scas
stos
xlat
jmp
(bad)
dec
mov
and
test
or
leave
inc
test
mov
push
pushf
dec
das
dec
cmp
out
icebp
sbb
push
and
rcl
or
dec
pop
xchg
sbb
xchg
jge
iret
push
jo
test
mov
pop
lock
icebp
dec
jne
nop
repnz
jmp
gs
cwde
popf
jp
mov
adc
bound
dec
push
and
push
clc
into
xor
mov
dec
ror
dec
ja
xchg
mov
or
das
pop
xor
sub
or
mov
ret
lahf
ds
push
or
dec
cld
or
das
or
inc
or
mov
mov
fbld
nop
jo
sub
xchg
stos
or
adc
fwait
jmp
or
sbb
mov
test
ds
jne
cmp
(bad)
(bad)
pop
add
jo
mov
inc
add
int3
push
add
xlat
leave
dec
nop
jl
jbe
adc
add
fsub
rol
or
scas
sbb
mov
cdq
sbb
pop
(bad)
fist
ret
push
cmp
adc
cmp
push
les
push
pop
scas
lea
cmps
fist
xchg
and
add
inc
jg
and
retf
cmps
mov
in
cmp
inc
cld
in
fisttp
leave
mov
cmp
and
xor
or
add
cmp
adc
or
mov
xchg
push
adc
fwait
and
or
adc
adc
inc
mov
adc
aaa
jae
add
push
lods
retf
call
xchg
dec
mov
and
mov
push
adc
mov
mov
mov
loop
repz
add
pusha
mov
mov
jle
push
xor
cld
mov
inc
pop
pop
push
cmp
cmp
adc
jl
pop
movs
cmp
xchg
jnp
(bad)
in
adc
and
out
push
mov
fisubr
add
cmp
in
ror
ja
ficomp
call
sbb
mov
(bad)
push
push
out
rcl
dec
cmp
mov
ret
std
xor
sbb
or
shr
into
inc
cmp
sbb
cmp
adc
lock
add
fs
lock
push
sbb
jb
push
add
jo
and
out
mov
sbb
xchg
jns
or
and
rol
pop
push
dec
xor
inc
push
scas
int
or
mov
loopne
ds
jmp
lods
hlt
pop
je
push
mov
bound
pusha
mov
sbb
cmp
sti
and
fidivr
dec
xchg
sbb
hlt
mov
mov
test
(bad)
popf
fcmove
in
mov
lods
dec
fdivr
in
sti
inc
mov
jne
sub
push
movs
hlt
(bad)
(bad)
cmp
jb
call
je
sbb
int
cdq
pop
cmps
sbb
xchg
or
push
cmp
nop
sub
mov
int3
loopne
push
cmps
fadd
outs
fst
jmp
inc
cld
mov
cmp
pop
or
pop
dec
and
(bad)
adc
sub
cmp
sbb
push
sbb
rol
and
scas
mov
or
add
call
push
push
popa
add
ret
xchg
mov
pop
out
mov
inc
jmp
fucomi
lods
and
xchg
daa
push
push
jl
mov
sub
(bad)
fstp
shl
das
(bad)
rol
and
xchg
outs
dec
loope
jmp
jge
inc
(bad)
test
std
call
mov
pop
jb
or
xor
ret
mov
sub
pop
sbb
retf
xor
imul
es
xor
ss
aas
jmp
cmp
inc
add
dec
sbb
adc
ins
add
push
push
ds
xor
fisub
push
add
mov
arpl
mov
push
scas
call
mov
shl
push
jmp
push
cmp
ss
mov
call
sbb
xor
add
push
mov
sbb
push
adc
fdiv
jnp
inc
es
dec
sub
rcl
sub
or
mov
and
jae
cmp
or
add
add
add
mov
scas
sub
xor
shr
mov
mov
mov
sahf
mov
xchg
mov
xor
lahf
pusha
repnz
pop
push
push
(bad)
movs
jl
inc
ds
sub
cwde
lahf
mov
jne
push
mov
jmp
pop
sub
es
mov
add
dec
in
push
adc
push
pop
fld
pop
pop
movs
adc
jg
push
pop
cmp
sbb
and
mov
xor
mov
cmc
or
sub
dec
mov
or
mov
shl
loop
dec
jmp
pop
mov
scas
inc
cmps
or
xor
sub
sbb
cmp
and
dec
adc
jmp
or
sbb
add
jmp
pop
test
outs
dec
xor
push
cmps
or
adc
das
or
sti
ja
jb
cmp
add
or
add
loopne
pop
push
push
and
(bad)
push
and
mov
pop
push
cmp
pusha
pop
add
daa
push
jmp
mov
cmp
inc
(bad)
mov
sbb
push
sbb
sti
(bad)
aad
aas
cs
add
ins
mov
jb
cs
ins
adc
sti
xor
xlat
sbb
stc
icebp
xor
push
jb
inc
movs
js
inc
rol
fidiv
mov
(bad)
mov
pusha
cmps
push
sbb
push
sbb
imul
or
and
(bad)
in
mov
jmp
inc
pushf
mov
inc
fwait
pop
adc
das
mov
lock
jle
adc
retf
mov
jne
mov
push
cld
push
jo
lods
mov
or
add
add
xchg
or
adc
push
aad
int3
ds
or
push
mov
ins
loopne
mov
je
bound
or
mov
jo
adc
add
push
mov
xor
mov
or
shr
ret
std
dec
or
and
stos
and
icebp
lock
std
movs
punpckhdq
xor
and
test
and
loope
rcr
(bad)
jg
cmp
loopne
xor
inc
mov
mov
mov
test
call
iret
adc
inc
inc
inc
pop
xor
sar
inc
inc
jmp
fld
inc
inc
iret
dec
rcr
je
xchg
and
not
sbb
mov
movs
or
jno
call
or
fs
cmp
ins
and
jp
out
(bad)
cmp
test
or
loop
ret
int
jno
jae
es
clc
loop
movs
jge
out
push
pop
pop
and
or
daa
or
xor
call
adc
pop
xchg
pop
test
loopne
cmp
cmp
jns
pop
pop
sbb
add
sbb
add
pop
ret
push
jnp
(bad)
mov
mov
and
jb
mov
mov
mov
ins
movs
es
or
xor
and
stos
test
mov
test
ja
add
aam
out
rcl
push
movs
shr
adc
clc
ins
push
in
mov
xchg
push
mov
and
xchg
pop
(bad)
fld1
sti
movq
jbe
or
dec
inc
and
or
inc
push
xor
cli
sbb
sti
inc
call
and
aad
push
push
inc
mov
call
(bad)
mul
push
push
pop
xchg
jo
add
mov
ret
dec
push
mov
lea
dec
jmp
mov
fstp
or
or
push
and
ins
cmps
cmp
mov
bound
popf
xor
rol
add
test
pushf
inc
mov
fisubr
mov
ss
cmp
inc
pop
sbb
sub
retf
shl
or
sbb
xchg
pop
aaa
and
lea
cld
pop
cmp
pusha
and
and
ins
jmp
daa
adc
(bad)
cmp
jb
inc
cmp
jp
inc
loopne
push
or
ins
mov
cld
(bad)
fimul
(bad)
je
mov
and
test
shl
aam
inc
xchg
cmp
dec
call
pop
shl
add
add
imul
add
push
inc
add
inc
sbb
scas
outs
push
or
inc
adc
and
jl
icebp
jne
adc
repz
dec
push
or
push
or
inc
ss
lods
sub
inc
or
shl
imul
inc
pop
add
loopne
push
inc
xor
ds
sahf
cmp
fs
add
or
add
js
ins
and
sti
loope
or
mov
jbe
scas
cmp
adc
test
push
repnz
out
push
retf
jnp
jle
cmp
lea
mov
cwde
push
dec
mov
add
int
loop
test
cmp
add
clc
xchg
mov
xor
rol
add
daa
cmp
push
fnstenv
js
pop
add
lods
add
movs
cmp
mov
or
clc
pop
enter
xchg
ret
xchg
inc
push
pop
sub
cs
inc
call
jmp
repnz
adc
imul
jge
in
add
loopne
cmp
mov
xchg
hlt
sbb
je
mov
and
mov
sub
push
xchg
fs
dec
cmp
push
call
sbb
inc
jmp
movs
rol
inc
sub
scas
xor
lahf
sbb
loope
dec
shr
(bad)
cld
in
xchg
xor
mov
(bad)
push
push
xchg
test
ret
push
add
jae
cmp
push
xchg
mov
jae
sub
in
mov
xchg
push
inc
and
push
jne
sahf
xchg
call
pop
or
imul
retf
xor
movs
and
dec
sub
lea
ja
add
(bad)
push
das
mov
mov
and
or
(bad)
fcom
xchg
fistp
data16
popf
lahf
xchg
xchg
xchg
enter
shr
ins
or
dec
rol
pop
or
add
shr
dec
jnp
enter
dec
cld
adc
mov
sbb
cmp
pop
add
rol
add
test
push
pop
adc
inc
jmp
push
xchg
mov
or
test
loop
mov
aaa
add
popf
test
push
xor
pop
mov
js
leave
mov
icebp
sub
sbb
pop
jmp
jl
pop
jmp
mov
inc
sbb
add
push
xchg
jns
or
imul
jl
sub
add
add
add
cmp
ds
(bad)
jmp
adc
pop
adc
sub
add
xrelease
imul
push
call
popf
mov
mov
mov
jmp
mov
push
clc
jmp
mov
and
aad
rcl
or
mov
mov
jg
ret
adc
inc
sub
jle
jmp
mov
push
movs
push
push
or
mov
inc
inc
cdq
ins
xchg
inc
cmp
adc
pop
mov
lods
(bad)
adc
and
push
push
and
call
scas
dec
sbb
push
cmps
jbe
pushf
cdq
lock
or
cmp
cmp
jl
cmp
jb
call
inc
xchg
in
sbb
cmps
mov
xor
mov
gs
sbb
ja
sbb
movsx
mov
mov
push
(bad)
test
movs
or
enter
call
out
xor
(bad)
leave
dec
mov
sub
js
pop
(bad)
inc
cmps
cmp
cmc
cli
mov
pop
mov
icebp
lahf
or
test
je
test
je
inc
mov
mov
and
mov
adc
and
mov
cmc
cmp
push
cs
or
jmp
jmp
xor
add
pop
sub
jmp
sub
call
mov
jmp
cmps
mov
(bad)
es
push
add
mov
add
sar
mov
sti
mov
add
popaw
pop
rol
enter
jne
xor
pop
adc
repz
adc
add
je
inc
pushf
into
mov
sub
adc
inc
imul
nop
call
ins
push
adc
or
and
in
mov
inc
push
mov
imul
dec
ja
pusha
dec
sub
(bad)
setne
pushf
push
cmp
popf
pop
cmp
adc
sub
mov
inc
jmp
mov
dec
ror
call
lods
mov
cmp
clc
das
xor
mov
mov
mov
out
scas
inc
or
rcr
mov
pusha
push
sbb
ds
mov
fiadd
mov
movs
mov
mov
in
sub
and
mov
adc
push
dec
inc
(bad)
jecxz
addr16
sub
shr
sbb
inc
sub
mov
adc
pop
pusha
fcom
fadd
test
sub
xchg
sub
xor
mov
mov
sub
mov
cmps
jbe
mov
int
push
test
jnp
or
push
add
jne
inc
mov
adc
adc
add
and
mov
pop
jecxz
pop
add
aam
inc
inc
sbb
mov
inc
int
push
jmp
call
dec
cwde
cmp
push
ds
mov
jns
in
sbb
cmp
aaa
xor
(bad)
hlt
jb
push
cmp
neg
mov
inc
mov
sbb
push
add
add
dec
js
movs
or
loop
cmp
dec
and
lock
and
(bad)
sub
mov
cmp
mov
cmp
jne
adc
cli
or
icebp
mov
inc
mov
adc
cmp
mov
mov
fsubr
push
cmp
xchg
sub
and
or
ffree
inc
pop
inc
add
cli
mov
daa
jmp
adc
or
jmp
add
scas
or
push
ret
jb
nop
shld
inc
cmp
icebp
int3
add
xchg
imul
rcl
inc
lods
push
sbb
mov
push
or
inc
inc
sbb
or
push
pusha
mov
dec
leave
sub
pop
add
retf
inc
add
pop
add
pop
fdivr
mov
mov
add
xor
adc
add
jb
mov
les
mov
adc
mov
scas
sub
sbb
mov
add
fs
std
jno
call
inc
rcr
mov
sub
js
jns
out
add
or
mov
jo
retf
jmp
adc
pop
sti
push
js
mov
pop
dec
mov
aas
(bad)
lea
xchg
push
lods
adc
retf
xchg
inc
ja
fdivr
or
jne
jmp
mov
inc
loopne
(bad)
fild
adc
fdiv
pop
push
jnp
add
xor
fild
seta
jl
and
test
(bad)
call
sub
mov
sahf
clc
pop
pop
out
pop
call
in
les
ss
popf
sub
push
call
das
cmc
scas
and
mov
cs
(bad)
loope
mov
stos
out
mov
inc
pop
pop
jo
jecxz
(bad)
mulps
stos
mov
mov
sub
shl
stos
fstp
ret
pop
data16
sbb
inc
inc
xor
cdq
nop
xchg
or
xchg
int
push
(bad)
loope
pop
pop
aas
mov
rol
xor
push
and
push
fyl2xp1
call
lock
jmp
or
pop
xor
out
sbb
retf
pop
int3
inc
mov
or
and
add
je
outs
lea
push
lea
mov
inc
(bad)
jle
rol
daa
sbb
push
test
mov
xor
fst
sub
or
je
jmp
lea
retf
push
cmp
std
cld
out
add
dec
shl
add
ror
push
jp
call
adc
and
jnp
pop
inc
add
inc
retf
cmp
loope
push
call
inc
cld
push
sub
adc
into
lea
movs
(bad)
std
sbb
jl
cmp
adc
jle
cmp
inc
add
std
add
jmp
add
mov
sbb
and
not
and
mov
and
xchg
mov
and
cmp
outs
pxor
aad
out
(bad)
(bad)
sub
or
xor
push
sub
pusha
jo
cmps
jno
cmc
shr
adc
sar
dec
cmp
and
inc
mov
adc
retf
pop
test
jae
out
dec
std
xchg
sub
add
outs
sub
sbb
hlt
rep
sar
neg
add
lock
dec
lock
add
shl
and
jecxz
jle
sbb
sub
cmp
fdivr
ss
js
push
dec
sbb
pop
xchg
call
mov
and
call
cmp
mov
xchg
call
je
int3
daa
sub
lahf
jge
pop
adc
out
lahf
add
fisub
mov
jecxz
ss
lahf
push
push
mov
add
mov
xchg
xor
out
pusha
sbb
or
pusha
ins
mov
sti
adc
out
loopne
cs
shl
mov
bound
ror
sbb
mov
pop
cmp
adc
fs
pop
jo
pop
mov
or
loop
cmp
jmp
mov
fidivr
retf
jb
imul
ret
sub
xchg
xor
shl
add
add
fcmovbe
sti
xor
ja
loopne
out
jmp
mov
or
dec
xor
xchg
push
mov
aad
lods
or
or
add
jle
dec
push
and
and
and
jo
sar
and
sar
and
fs
popa
out
stos
sbb
xor
xchg
popa
pop
or
push
mov
cs
retf
cmp
xchg
xor
loopne
pop
mov
jbe
sub
ret
lods
push
sbb
pusha
cmp
fistp
and
or
arpl
add
cmp
and
pusha
inc
xor
test
jl
nop
cmp
mov
or
sub
cld
mov
add
jne
push
push
rol
mov
jmp
cmp
xor
inc
pusha
xor
adc
push
pop
retf
xor
call
and
pop
fmul
retf
add
xchg
push
(bad)
in
jmp
mov
xor
js
outs
outs
and
add
sbb
sub
lock
adc
or
mov
test
in
dec
jl
outs
sbb
push
add
xchg
and
mov
or
shl
and
add
adc
pop
test
xor
cwde
jb
push
dec
pop
gs
ret
push
inc
call
(bad)
mov
cmp
jmp
cwde
mov
inc
rcr
mov
sub
xor
test
sti
and
mov
mov
jmp
repnz
jmp
dec
jmp
xor
js
pusha
or
inc
jo
mov
les
leave
int3
inc
inc
inc
pop
je
pusha
je
push
es
pop
int
(bad)
and
stos
cmp
test
mov
std
push
sub
pop
cld
pop
mov
or
sub
pusha
fiadd
add
je
clc
push
fsubr
cmp
and
aam
sub
shl
or
out
outs
pop
or
into
call
xor
pop
or
test
jmp
pop
dec
ja
arpl
jmp
test
push
fs
jbe
xor
sbb
or
xor
mov
lock
movs
mov
sbb
sbb
mov
mov
sbb
loopne
mov
enter
cmp
dec
(bad)
xlat
dec
and
ds
sahf
aas
jae
or
or
rcl
inc
lea
repnz
push
nop
ss
in
inc
push
sub
(bad)
push
push
or
cmovs
xchg
xor
(bad)
mov
out
shl
fs
popa
inc
call
mov
add
and
int3
add
mov
mov
fs
jbe
jmp
cmp
push
and
nop
jne
retf
dec
push
fbld
pop
nop
(bad)
fsubr
jne
repnz
in
(bad)
push
sar
inc
push
push
adc
rol
pop
addr16
cld
sbb
ss
data16
hlt
dec
clc
and
mov
push
data16
pop
stos
loopne
mov
enter
mov
jo
dec
sub
lahf
fnstsw
sti
or
sub
out
call
stos
out
pop
or
bound
mov
adc
popf
add
ret
xor
pop
mov
or
(bad)
jae
adc
(bad)
inc
push
stc
in
shl
dec
dec
call
mov
in
xor
xchg
pop
jbe
adc
pusha
test
clc
adc
adc
xchg
xchg
add
xchg
jl
add
and
dec
mov
(bad)
ins
or
adc
mov
test
pop
mov
mov
xor
or
retf
inc
mov
sbb
adc
cld
lea
or
pop
mov
pop
xor
cmps
nop
jmp
cwde
xor
outs
cmps
add
sbb
fimul
outs
imul
add
repz
sub
fcomp
je
push
fsub
sar
cmp
adc
call
js
cmp
je
xchg
mov
xor
mov
movs
adc
add
cmp
push
push
bound
cmp
mov
jmp
add
test
shl
cmp
pop
icebp
jmp
jb
cmp
and
inc
movs
hlt
clc
pop
sti
jl
jle
or
add
icebp
imul
add
adc
out
jb
loopne
xor
pop
push
jae
cmp
mov
rol
or
and
cmp
sar
xchg
sti
or
push
pop
fwait
dec
mov
and
or
fld
fbstp
pop
xlat
shr
inc
inc
cmp
ja
mov
call
sbb
je
push
add
pop
popa
xor
push
rcr
jle
scas
mov
mov
dec
dec
mov
mov
outs
movs
push
push
jp
pop
and
js
sbb
(bad)
push
push
or
jle
and
(bad)
push
adc
scas
or
push
inc
inc
jae
je
add
dec
pusha
sar
pusha
cs
sbb
fnstsw
mov
sub
popa
adc
cmp
rcl
out
(bad)
or
pusha
inc
adc
xlat
pop
mov
sbb
stos
cdq
xchg
aam
push
stos
(bad)
mov
addr16
ror
or
js
xor
stos
sub
adc
fs
nop
shl
shl
and
mov
push
pop
fstp
cmp
push
inc
dec
and
in
and
xchg
adc
or
sub
ret
js
cwde
and
jnp
mov
shr
mov
mov
mov
sbb
mov
cmp
mov
out
mov
dec
cmp
ins
je
cmp
loopne
sbb
sub
mov
ss
add
add
and
push
or
jmp
rol
popf
and
cmp
ret
mov
test
in
ja
push
cld
adc
or
adc
sbb
repnz
mov
and
sbb
xor
xchg
pushf
ret
adc
jecxz
iret
and
sbb
add
adc
sahf
out
mov
mov
cmp
xchg
jl
retf
sbb
cmp
mov
dec
or
and
and
or
lahf
adc
adc
jb
ins
push
adc
aad
and
fsub
aad
or
jmp
and
adc
test
sbb
mov
push
push
inc
sbb
or
dec
outs
out
jns
sub
mov
mov
int
mov
push
call
js
call
stc
or
dec
into
jl
xchg
inc
add
das
jns
mov
or
xchg
rol
loop
push
or
dec
jge
xor
cmp
es
imul
sbb
(bad)
fwait
ss
call
imul
push
call
call
adc
rol
xor
std
int3
inc
sub
std
sub
and
rcr
das
inc
sub
stos
cdq
shl
jecxz
aam
push
jge
shl
test
retf
popa
mov
lea
(bad)
mov
cmp
add
and
popf
mov
ret
jo
add
cmp
or
(bad)
jge
cmp
xor
test
stos
(bad)
movaps
movs
sti
mov
mov
ror
add
jnp
repz
xchg
ret
jo
fadd
shl
add
mov
mov
add
jns
loopne
dec
js
lods
(bad)
enter
push
mov
clc
inc
js
jne
sbb
cs
cdq
pop
mov
and
jp
sti
movs
xor
std
and
dec
fwait
(bad)
xchg
push
mov
jp
(bad)
clc
mov
jo
and
push
and
in
inc
sub
mov
call
bound
cld
and
jno
and
ins
mov
iret
xor
lock
xchg
rcr
mov
sub
add
jo
or
or
jl
mov
scas
or
push
or
and
cs
repnz
sbb
push
adc
movzx
mov
ret
adc
or
pop
adc
or
mov
les
sub
mov
rol
sbb
repnz
or
adc
add
jmp
pop
test
cli
pop
jbe
jo
daa
add
sbb
or
mov
mov
out
push
mov
fidivr
mov
enter
icebp
ja
sub
out
xchg
or
mov
mov
sbb
inc
sahf
fsubr
or
mov
ficom
push
push
pop
ja
test
sub
mul
push
call
inc
lods
or
enter
dec
leave
and
mov
(bad)
push
jo
push
dec
push
sbb
lahf
push
mov
and
je
and
xchg
sbb
cmp
add
mov
test
sar
jmp
mov
or
lea
cmp
ja
retf
dec
rol
cmp
push
and
add
aaa
add
pop
iret
call
add
ss
enter
aaa
mov
enter
mov
sbb
ja
sub
push
mov
enter
mov
add
jnp
mov
sbb
jle
push
movs
(bad)
sub
ja
dec
mov
mov
push
push
sbb
add
mov
xor
sub
push
cmps
arpl
pop
push
push
push
or
push
or
pop
jo
ror
cmp
jecxz
(bad)
jo
cmp
mov
jo
movs
add
ss
aas
or
out
add
imul
push
add
add
div
mov
mov
add
mov
mov
test
push
call
fsubr
jne
mov
cmp
pusha
mov
jo
jmp
inc
std
jne
pusha
fisub
nop
jmp
sub
out
dec
mov
dec
sar
jmp
ja
mov
or
std
and
or
ins
mov
add
clc
xchg
cmp
out
jo
cmp
loop
or
neg
daa
adc
xor
sbb
imul
push
jmp
adc
and
jns
cmp
and
dec
loopne
out
push
lea
shr
rcr
lea
gs
inc
jae
cmp
clc
fidiv
movs
inc
push
inc
stos
std
jne
mov
test
sbb
stc
inc
add
cmps
add
clc
sbb
mov
test
mov
inc
jmp
cli
(bad)
mov
sub
sub
add
jmp
loopne
cmp
inc
cmp
cmp
mov
jb
inc
mov
ret
dec
jp
cld
add
mov
jg
jb
mov
xor
inc
xchg
add
jmp
fcom
lea
mov
mov
mov
inc
inc
dec
jne
xor
xchg
inc
push
cld
jmp
mov
add
shl
jle
test
fcomp
xor
mov
push
ja
lock
dec
jne
mov
mov
xor
mov
clc
repz
jmp
cmp
or
gs
pop
pop
std
icebp
adc
test
les
fidivr
push
xor
lahf
fsubr
push
cld
adc
js
cdq
bound
mov
popa
pop
test
or
and
mov
pusha
push
and
clc
jmp
call
ja
or
jge
rep
and
jo
enter
and
xchg
mov
fcomp
pusha
sbb
push
jecxz
mov
xchg
sbb
and
stos
int3
cmp
xor
mov
jge
fld
pop
es
mov
mov
push
or
push
rcl
xchg
clc
add
loopne
mov
inc
sub
jmp
xor
mov
sbb
mov
xchg
int
or
mov
sub
adc
retf
push
xchg
sbb
mov
mov
data16
aam
cmp
inc
ja
call
add
pop
shl
inc
ret
es
lods
lock
adc
std
call
xchg
mov
enter
push
adc
xchg
jbe
push
pop
or
lods
or
jnp
es
call
jmp
aad
scas
push
dec
stos
mov
cwde
sbb
fsub
in
ja
xchg
pop
sbb
xor
rcl
rol
dec
mov
ret
pop
mov
mov
leave
mov
mov
cmp
int3
in
sbb
jne
push
sub
ror
je
dec
cmp
imul
es
jb
mov
test
xchg
lahf
add
or
cli
mov
push
and
cmp
push
inc
push
test
je
cmp
and
not
shr
xchg
(bad)
and
sub
xchg
sbb
xor
or
scas
pusha
repnz
out
rcl
xchg
aam
mov
xor
inc
xchg
cld
dec
aas
xor
push
cmp
call
cdq
mov
mov
cs
push
or
loop
pop
push
push
jns
add
mov
adc
push
sbb
mov
mov
test
inc
and
cmp
ror
call
mov
ret
test
outs
loop
ja
mov
push
mov
(bad)
jbe
push
jmp
cld
cmp
push
scas
adc
dec
je
movs
add
add
out
dec
nop
push
cmp
pop
test
jbe
push
imul
outs
loopne
xor
xchg
cmp
or
jle
call
or
cdq
sub
ss
and
adc
mov
push
pop
sub
mov
cmp
mov
xor
mov
mov
mov
push
push
and
call
rcpps
mov
xchg
mov
mov
call
sub
es
xor
push
adc
cmp
dec
mov
pop
adc
adc
dec
jl
or
test
mov
dec
add
push
cmp
cmc
jmp
ins
retf
pop
sbb
or
cmp
outs
inc
or
cs
dec
push
mov
sbb
or
cdq
add
cmp
mov
loope
cmp
jecxz
jno
mov
pop
jmp
(bad)
cli
add
mov
sbb
int3
and
adc
hlt
jmp
or
jmp
ret
push
or
inc
sub
fwait
cld
adc
mov
lds
repnz
lds
dec
dec
fstp
int
cs
or
and
mov
loopne
call
sbb
cmps
and
rol
stc
cmc
add
dec
mov
or
or
stos
loope
mov
shr
scas
das
pop
sbb
sbb
dec
jnp
ret
movs
into
push
xor
js
xor
(bad)
icebp
mov
cmp
or
mov
fxch
call
mov
xchg
jbe
pop
and
xchg
mov
call
or
dec
in
inc
cli
push
je
push
sbb
jle
jo
pop
in
jo
push
inc
or
jo
xchg
add
in
addr16
fdiv
push
and
iret
mov
xchg
rcl
stos
and
adc
mov
cmps
mov
fcom
pushf
mov
xor
arpl
pop
(bad)
adc
popa
jecxz
lea
mov
loope
test
or
inc
mov
add
mov
cmp
and
cmp
sbb
dec
mov
pop
ror
sub
bound
push
enter
imul
dec
les
sbb
jne
push
not
jne
jp
ror
adc
sub
fstp
hlt
scas
popf
aam
cmp
and
pop
push
sbb
jnp
sti
fmul
test
pop
jmp
and
test
add
cmp
rol
cmp
ret
popf
push
mov
fisttp
test
and
xchg
ret
lods
loop
aam
jmp
adc
sbb
sbb
mov
or
nop
and
jb
sar
adc
sub
xor
pop
clc
psubsb
ret
jmp
hlt
sbb
shr
iret
or
and
mov
dec
add
inc
pop
test
lock
out
push
in
add
fs
js
dec
sbb
lock
call
rcr
loop
jmp
sar
push
inc
and
push
adc
inc
data16
mov
loop
xor
jmp
and
push
and
bnd
and
into
jg
xchg
mov
call
or
daa
xchg
sbb
adc
(bad)
icebp
mov
das
and
push
adc
push
mov
jbe
jne
out
adc
inc
inc
inc
jo
(bad)
pop
lds
lds
cmp
add
pop
lods
in
mov
jmp
jns
adc
or
xor
or
data16
or
test
outs
out
mov
xchg
xchg
popf
or
pop
cmp
push
data16
sbb
xchg
xchg
dec
and
pop
sub
mov
and
jl
add
mov
cmps
add
pusha
mov
cmp
mov
das
imul
addr16
mov
push
cmpps
sub
and
retf
out
cmp
pop
fadd
push
test
loope
imul
popf
test
jg
ins
mov
adc
ja
retf
xchg
test
jge
call
sbb
xchg
mov
pop
sub
repnz
call
xor
inc
xor
mov
call
cmp
test
retf
fist
call
cmovs
or
call
adc
call
pop
pop
call
fs
in
call
jo
mov
sbb
call
add
(bad)
sbb
push
cs
dec
mov
in
mov
mov
push
pushf
dec
mov
cmp
mov
ins
jl
sub
jb
mov
add
das
inc
add
jns
and
jl
repnz
xor
mov
movs
imul
mov
and
test
adc
int
dec
lods
call
and
jbe
ror
and
sbb
jb
int3
add
lahf
add
fwait
and
add
mov
xor
inc
add
stos
add
jmp
jb
xor
(bad)
push
xor
xchg
fdiv
push
and
inc
push
sub
or
nop
add
mov
mov
inc
das
mov
pop
push
mov
sub
xchg
jns
push
jmp
dec
xor
out
dec
sub
data16
dec
mov
(bad)
lock
pop
sbb
pop
sbb
scas
jo
xor
test
adc
test
add
sbb
mov
jle
xor
ja
ficom
aas
or
ja
xor
mov
shl
and
popa
ss
dec
or
add
and
cmp
xor
pop
imul
xchg
stos
push
out
or
push
in
fadd
or
sbb
loopne
rcr
pop
shl
mov
rcr
sbb
sbb
sbb
sbb
pop
add
inc
mov
popa
outs
inc
cmp
je
stos
xchg
ret
push
push
les
call
fdivr
mov
push
inc
in
cmp
dec
sbb
gs
or
adc
sbb
leave
leave
stos
mov
adc
adc
pop
pop
xor
rcl
cmps
lahf
ds
xchg
or
lea
cmp
xchg
or
ds
mov
cmp
or
push
push
mov
fdivr
retf
add
sub
jecxz
dec
cmp
push
retf
jne
scas
repz
dec
test
adc
cmp
jge
inc
mov
mov
lods
add
int3
add
push
and
adc
and
mov
inc
push
xor
pop
div
mov
in
sbb
add
jge
or
inc
fiadd
add
hlt
mov
ds
cmp
jmp
ret
and
sub
sbb
cmp
and
push
enter
dec
loop
iret
xchg
cmps
shr
test
mov
and
adc
repz
inc
jb
inc
repnz
push
cdq
jge
cmp
push
call
mov
push
jge
inc
push
mov
jmp
adc
push
inc
push
(bad)
jne
or
xchg
sub
cmps
(bad)
push
mov
add
ja
inc
cwde
inc
div
cmp
rcl
pop
pushf
fwait
jmp
lock
das
or
retf
push
or
outs
inc
or
scas
loopne
xor
inc
push
ret
sbb
fstp
js
outs
call
lods
xchg
xchg
movs
cli
pop
adc
gs
imul
mov
xor
loopne
cmp
sub
bnd
lahf
add
cmp
je
mov
dec
add
mov
imul
fdivr
pop
cdq
mov
mov
mov
and
cmp
in
call
jne
mov
xchg
and
push
jmp
mov
pop
xchg
adc
and
nop
scas
out
add
loopne
xchg
push
repnz
(bad)
sub
test
cld
and
add
or
fild
fadd
movs
call
adc
mov
mov
lds
adc
mov
leave
jecxz
movs
lea
sbb
mov
add
jmp
mov
sar
fwait
xchg
inc
dec
sub
push
test
(bad)
or
add
mov
inc
cli
cmps
xor
shl
stc
add
fdiv
call
sbb
daa
mov
iret
sbb
jno
jle
ins
dec
lock
call
out
hlt
pop
adc
lock
fild
loopne
sub
scas
add
sbb
or
xchg
or
dec
mov
and
pushf
ss
jno
or
xor
in
in
(bad)
mov
mov
jmp
sub
and
or
xchg
clc
clc
add
hlt
cmps
ror
jmp
or
mov
jl
or
xchg
lods
push
mov
fs
aas
mov
or
xor
int3
(bad)
enter
loopne
adc
in
mov
mov
xchg
test
mov
pop
inc
jmp
aam
scas
and
or
loopne
cli
sub
sub
xlat
ja
jl
dec
cdq
test
and
cmps
test
retf
push
xor
call
dec
or
pop
cmp
je
cmp
and
stos
and
adc
ins
adc
pop
jne
or
es
add
inc
lds
mov
cmp
or
test
push
xchg
add
or
int3
(bad)
sbb
fidiv
in
sti
sub
popa
cmp
cs
xor
pop
mov
dec
leave
cmp
jae
push
xchg
xchg
daa
movs
cmp
jbe
sbb
push
add
cmc
sub
dec
and
mov
jecxz
xor
jmp
sbb
cmc
pop
inc
scas
pop
adc
fnstenv
mov
cli
jg
push
lea
jbe
cs
add
mov
push
mov
std
jne
jbe
call
add
and
mov
jbe
sbb
pop
push
jo
daa
das
push
sbb
in
rol
sbb
mov
dec
jecxz
sti
retf
or
idiv
add
ja
inc
cmp
dec
pusha
stos
rcr
cmc
nop
fwait
jmp
push
retf
xor
pop
sbb
cmp
mov
ror
cmp
and
push
xlat
adc
xor
aas
mov
sub
xchg
imul
fsub
pop
fidivr
dec
int3
pop
add
push
cmp
inc
mov
nop
ficom
imul
pushf
pop
pop
xchg
(bad)
and
in
dec
inc
hlt
push
sbb
clc
test
cmp
dec
mov
mov
enter
cmp
ss
ds
cmps
xchg
fwait
pusha
(bad)
(bad)
je
sub
imul
mov
ret
inc
shl
and
sub
in
clc
cs
jge
push
je
lea
add
push
mov
xchg
out
push
popf
imul
pop
jg
int3
(bad)
sbb
mov
push
inc
adc
cmp
int
or
xchg
sbb
(bad)
lods
inc
jb
dec
pop
je
or
mov
push
push
sub
js
ret
or
xchg
mov
mov
ror
mov
push
loop
or
dec
adc
push
sub
je
mov
shl
and
stos
adc
and
mov
add
out
push
cmp
call
pusha
aas
sbb
(bad)
cmp
jne
push
shl
leave
adc
add
push
pop
jb
neg
(bad)
fs
add
fld
pop
ret
rol
cs
shl
jp
mov
fldenv
or
iret
and
rcl
(bad)
mov
ret
shl
push
adc
mov
div
retf
int3
stc
adc
test
xor
jbe
daa
call
and
push
nop
push
xchg
and
mov
inc
cld
shl
push
adc
ss
out
add
inc
movs
enter
out
or
jmp
ja
mov
pop
addr16
(bad)
outs
or
enter
cld
jmp
aad
ror
and
add
adc
sub
jmp
push
ret
push
add
xor
xor
cmp
cmp
jl
inc
add
outs
or
jne
imul
push
call
jno
or
jle
mov
cs
cs
dec
sub
lea
cmp
add
pop
mov
jae
lock
cmp
ror
out
rcr
mov
or
xchg
rcl
scas
add
aam
out
add
test
add
pop
add
es
xor
vunpckhps
inc
fiadd
punpckhdq
stos
jo
sub
retf
call
nop
adc
adc
mov
push
cmp
jae
and
shrd
shr
mov
das
push
and
shr
mov
or
out
shl
shl
shl
cdq
ret
and
inc
fs
mov
aas
fs
ins
out
and
loopne
pop
pop
xchg
mov
push
add
xor
jmp
jecxz
adc
sbb
test
cdq
ret
mov
arpl
test
add
dec
shl
push
dec
xor
(bad)
out
js
push
sbb
test
lea
cld
fsub
in
mov
push
es
inc
ror
inc
ror
cmc
or
pop
sub
jbe
jge
add
pop
inc
ss
push
dec
call
pop
inc
or
je
dec
xor
ds
and
pop
dec
dec
cs
push
xor
mov
or
fiadd
xor
call
rcr
cmp
push
mov
xor
adc
add
or
push
scas
mov
ins
add
xor
push
aam
pushf
enter
lahf
mov
sub
ret
int3
push
xor
xchg
inc
popa
xor
cmc
mov
xchg
lods
sti
shl
sar
or
adc
call
xchg
ins
jmp
gs
mov
jo
or
adc
push
or
and
es
cwde
daa
je
cld
stc
add
xchg
jbe
xor
call
pushf
stc
dec
cld
arpl
imul
cmp
or
dec
inc
clc
pop
fsubrp
sub
clc
adc
test
mov
pop
jge
sub
add
inc
or
ret
mov
or
jge
and
sub
xor
or
dec
pop
shl
jbe
add
call
pop
jmp
cmp
mov
sub
add
inc
hlt
cmp
jle
add
test
repnz
mov
sahf
dec
test
jg
repnz
add
mov
jae
xchg
or
pop
(bad)
icebp
test
aad
mov
icebp
cmp
xlat
lds
jmp
popf
test
loopne
icebp
shl
xor
or
lock
rol
sbb
inc
xlat
push
mov
neg
mov
call
sub
jo
sub
inc
pop
aam
inc
or
sub
and
lea
push
lods
pop
pop
std
pop
push
mov
mov
loopne
inc
jmp
or
in
dec
hlt
inc
inc
ret
test
pop
mov
enter
icebp
loopne
or
sbb
leave
sub
cmp
pushf
daa
sbb
pop
xchg
mov
imul
add
jns
sub
pushf
push
mov
mov
aas
pushf
dec
lea
add
fsub
sub
mov
xor
ds
sbb
mov
int
push
or
shl
jb
int3
or
jg
ja
(bad)
pop
neg
jle
je
mov
cld
pusha
loopne
mov
aaa
sub
cmp
in
jge
mov
sub
retf
and
push
or
and
dec
jl
gs
pop
or
pusha
fadd
int
sar
pop
loop
and
xor
push
mov
test
je
jae
pop
popf
mov
sbb
push
add
xchg
sbb
fst
cmc
jb
mov
(bad)
xor
sub
push
jb
mov
adc
popa
add
cld
or
loop
or
mov
jb
jmp
ret
imul
call
js
inc
sbb
inc
push
inc
push
mov
cdq
pop
push
adc
in
xchg
sbb
adc
(bad)
sub
sub
push
add
(bad)
push
pop
mov
sbb
mov
stos
sub
out
mov
cmps
test
add
cmp
sbb
popf
loopne
ds
lea
jl
sub
and
jns
jmp
push
clc
ins
pop
mov
jge
pop
adc
inc
mov
mov
xchg
les
call
sbb
jno
lds
shl
cmp
cli
inc
cmp
jle
jmp
loopne
jo
mov
ss
mov
ins
sub
push
lock
and
cwde
test
and
gs
pusha
stos
jo
test
or
or
aaa
dec
sbb
adc
sub
int3
je
nop
or
push
push
ret
xor
loop
daa
and
jl
repnz
jmp
out
cld
in
pop
fnstsw
cld
sar
loope
movs
mov
ror
mov
mov
cmps
cmc
mov
ja
std
sbb
fild
loopne
or
jmp
pusha
xchg
int3
int3
sub
mov
stos
sub
lods
out
les
sbb
ret
and
pop
lea
popa
cmp
or
(bad)
into
mov
(bad)
les
scas
outs
loop
mov
xor
pop
mov
addr16
or
ror
or
adc
push
push
dec
mov
pop
cmp
es
dec
inc
cmps
push
inc
fmul
add
add
mov
aas
call
and
out
into
cmp
inc
shr
out
cmp
aas
and
jno
shl
retf
sub
call
mov
fiadd
pop
call
test
div
or
test
or
shr
test
(bad)
cld
add
cld
xchg
dec
dec
inc
jp
cmp
cmps
mov
nop
mov
fstp
je
mov
add
jb
sub
or
mov
test
add
mov
or
mov
push
mov
pop
das
in
je
repnz
call
ja
jl
call
pop
add
enter
add
mov
adc
cs
and
call
xchg
call
sub
mov
fwait
or
out
xor
out
and
sahf
call
adc
cmp
cmps
(bad)
sub
xchg
cmps
ret
adc
inc
cmp
(bad)
retf
and
adc
inc
sti
xor
and
and
inc
sbb
add
jp
mov
adc
and
clc
sub
in
dec
pop
call
fldenv
push
aas
data16
test
jno
jp
add
xor
push
cmp
xchg
ror
std
mov
dec
mov
jp
(bad)
push
jl
xchg
add
sub
pusha
push
add
adc
adc
(bad)
ins
xor
call
jle
jo
sar
aas
nop
in
push
push
jmp
sbb
sbb
js
xor
sub
inc
jle
bound
xor
push
adc
scas
pop
(bad)
retf
mov
adc
inc
add
add
pop
jl
sub
cld
xor
mov
movs
cmp
or
pop
sub
fiadd
imul
movs
inc
dec
adc
add
and
sub
test
pop
cdq
fldlg2
add
push
in
gs
xor
add
sbb
lahf
add
test
call
in
push
mov
sahf
sbb
nop
mov
(bad)
fst
fdiv
movs
loopne
pop
enter
pop
stos
or
test
not
int3
out
xchg
jmp
mov
std
or
cmps
das
sbb
sub
hlt
loopne
adc
cmp
mov
xor
inc
lds
mov
in
push
mov
enter
fs
mov
test
inc
push
or
xor
fs
mov
cmps
and
sbb
push
add
loopne
or
aam
das
inc
dec
in
mov
or
sahf
jle
cmps
cmp
mov
and
pop
pop
jne
mov
sbb
popa
pusha
xor
push
and
add
xchg
dec
(bad)
cmp
mov
test
inc
(bad)
cmp
adc
or
cdq
push
add
and
inc
cld
sbb
mov
xchg
aam
jb
jb
xchg
push
mov
push
test
cmp
jecxz
faddp
pop
add
out
call
adc
adc
in
imul
cld
push
jmp
sbb
mov
je
repnz
xchg
xor
pop
jg
inc
loopne
cmp
cli
daa
adc
sbb
cmp
popa
out
int
or
ja
popa
nop
inc
sbb
dec
cdq
mov
inc
sbb
popa
pop
imul
sub
inc
sbb
sti
pop
(bad)
cmc
pop
dec
sbb
inc
mov
dec
xor
or
mov
xchg
call
ins
dec
jns
xchg
or
lock
xchg
cmps
xor
fnstsw
pop
pop
call
adc
popa
lods
jae
adc
inc
mov
gs
dec
pop
dec
jne
push
mov
loop
adc
call
(bad)
shr
sbb
mov
add
xor
dec
inc
nop
mov
test
and
or
sub
test
sbb
add
mov
mov
push
stc
leave
sbb
scas
enter
xor
cli
inc
cs
arpl
inc
loopne
stc
mov
sti
sub
mov
lock
push
mov
jge
mov
mov
popf
sbb
mov
sahf
pop
je
pop
adc
sbb
and
test
xchg
xor
cmp
js
cli
sub
push
cli
add
aam
pop
push
jns
(bad)
mov
cmps
push
loope
xor
push
cmp
jl
mov
inc
test
mov
es
adc
sbb
fwait
push
hlt
inc
sub
lea
test
jne
clc
push
mov
pop
xor
jmp
jmp
ins
mov
jns
push
sbb
cmp
mov
enter
xor
dec
or
add
cmp
jl
jb
pop
rol
ds
mov
xchg
std
mov
lock
mov
or
add
retf
mov
lahf
lods
push
sbb
mov
xor
dec
add
mov
or
xor
adc
add
mov
xlat
xlat
xor
js
jmp
pop
out
and
in
rcl
mov
jmp
fistp
mov
rcl
js
sbb
sbb
push
dec
or
ja
fs
jle
xchg
scas
push
pop
cs
sub
ror
xor
mov
fs
movs
or
add
or
push
enter
aam
xchg
icebp
pop
mov
sbb
nop
xchg
add
aam
js
xchg
or
call
mov
sbb
clc
xchg
ss
add
jg
aad
jg
fcmovbe
les
inc
xchg
aam
xchg
test
and
and
jbe
push
mov
call
xchg
inc
(bad)
sbb
xchg
cmp
fst
or
jg
jmp
retf
pop
hlt
adc
mov
(bad)
aad
shl
xchg
or
add
jmp
and
cmp
not
mov
loope
inc
pop
std
jb
and
xchg
pop
mov
out
loop
mov
popf
xchg
sbb
ret
out
or
jmp
sbb
not
repnz
or
dec
in
and
push
push
dec
fld
icebp
mov
sbb
mov
pop
add
out
jbe
inc
push
lods
or
sub
loopne
int3
mov
pop
cmc
or
pop
or
push
jp
cmp
arpl
and
sbb
(bad)
mov
cmp
js
je
adc
(bad)
cmp
jb
imul
frstor
data16
mov
aas
sahf
adc
or
(bad)
jge
push
mov
rcr
retf
pop
jmp
inc
mov
cmp
xchg
xor
cmp
jb
cmp
jbe
mov
pop
dec
or
ror
in
push
out
sbb
retf
out
gs
and
outs
fs
and
shl
pop
jnp
sub
adc
push
jb
xor
mov
int3
shr
outs
add
mov
pop
es
jmp
mov
adc
les
mov
mov
arpl
int3
jg
pop
inc
push
pop
add
in
mov
clc
add
dec
les
inc
outs
and
lods
ds
pop
lds
push
sbb
std
sub
push
push
nop
outs
inc
out
mov
jo
dec
and
sbb
sub
mov
xor
mov
gs
call
inc
mov
je
and
xchg
pop
or
pop
fwait
add
pop
mov
dec
pop
xchg
jno
jnp
mov
in
cs
in
dec
pop
rcl
sub
aaa
pop
pop
mov
pop
sub
sub
add
push
cmc
xchg
pop
mov
shl
movs
lods
and
imul
movs
mov
in
popa
pop
mov
test
push
sahf
xchg
xchg
ds
jb
and
push
mov
rcl
mov
and
ds
add
mov
dec
add
int
int3
out
sub
inc
mov
aas
and
mov
jmp
mov
push
call
movs
shr
movs
loope
jmp
adc
out
pop
jns
and
jmp
jnp
jmp
mov
cmps
fdiv
pop
cmps
ja
add
enter
retfw
fisub
mov
push
ret
fstp
pop
aaa
add
test
psrld
outs
jmp
ss
xchg
in
and
jns
(bad)
sub
enter
push
outs
(bad)
out
ror
pop
sub
dec
jns
fsubp
lock
sub
pop
aaa
ret
adc
add
nop
ficomp
out
push
cmp
mov
scas
jmp
(bad)
hlt
push
jae
fldenv
arpl
out
and
and
out
jnp
jns
mov
mov
xchg
out
inc
cmp
jo
jne
sub
js
dec
jb
or
outs
arpl
mov
mov
out
inc
push
daa
adc
sbb
push
sbb
cmp
xor
xor
cld
pop
mov
cmp
add
pop
(bad)
sbb
and
in
mov
dec
add
add
inc
popa
repnz
xchg
sbb
mov
push
enter
jae
xor
retf
inc
push
int3
dec
sbb
cmps
inc
shl
inc
leave
(bad)
(bad)
inc
xor
enter
scas
in
adc
inc
xor
jmp
adc
cmp
xchg
jno
xchg
mov
je
in
es
mov
push
jmp
push
dec
loopne
inc
mov
movs
sbb
or
cs
jno
js
inc
xor
jno
cmp
stc
sub
cs
jmp
outs
imul
mov
mov
sbb
or
adc
xor
cmp
into
in
inc
sbb
jo
sub
ror
in
mov
gs
dec
or
in
jmp
sub
popf
xor
dec
mov
xchg
pop
sub
in
ja
and
jns
ins
sbb
add
add
out
imul
movs
aad
mov
out
xchg
rol
jecxz
or
sub
aaa
pop
xor
inc
sahf
jecxz
movs
stos
pop
lock
dec
mov
pop
jbe
push
(bad)
and
mov
xlat
(bad)
mov
or
jle
in
sbb
fwait
(bad)
cdq
pop
push
aad
mov
jecxz
test
test
outs
aaa
repnz
adc
and
pop
repnz
pop
jmp
loopne
int3
lea
je
movs
repnz
out
jmp
frstor
push
jne
loop
mov
(bad)
xchg
imul
dec
jae
pcmpeqw
add
mov
out
and
loop
ss
mov
lock
sbb
dec
dec
(bad)
pop
xor
loop
repz
mov
sub
out
das
fst
lea
fsubr
sub
push
(bad)
jmp
icebp
mov
sbb
or
stc
loope
popf
jns
jns
imul
icebp
ins
push
dec
mov
es
shl
and
movs
sbb
adc
test
push
mov
scas
mov
test
movs
xchg
and
pushf
cld
push
sbb
dec
call
shl
je
enter
inc
push
mov
or
pop
sub
dec
xchg
dec
inc
push
popf
adc
adc
(bad)
and
ss
jmp
ror
shl
jmp
retf
push
and
xlat
loopne
sub
jl
pusha
ins
loop
sbb
dec
mov
nop
and
sets
push
sub
je
call
jmp
out
xchg
mov
in
jmp
ja
pop
mov
add
mov
mov
mov
mov
lock
das
cs
sbb
cld
dec
sbb
loopne
arpl
xchg
sbb
loopne
jns
sahf
or
(bad)
mov
fisttp
lods
mov
dec
jo
fild
jp
cmp
pop
add
jb
dec
ret
jns
mov
dec
fdiv
pop
pop
mov
mov
lods
outs
ds
es
jno
xchg
pop
test
scas
mov
sbb
ror
and
cmps
bnd
pushf
jmp
pop
enter
push
daa
inc
jmp
push
jmp
imul
xchg
das
int3
jmp
add
push
loopne
in
repnz
dec
or
sbb
sbb
ins
dec
aad
xchg
jnp
push
inc
push
enter
mov
cmp
mov
mov
xlat
pop
xor
jno
cmp
lods
(bad)
dec
and
es
mov
lods
jp
in
repnz
sbb
dec
inc
cmp
test
jnp
cmp
(bad)
cmp
mov
xor
lods
xor
ficom
fs
pop
cmc
adc
xor
frstor
dec
mov
loope
outs
sub
ret
xchg
adc
sub
add
loope
xor
(bad)
pusha
sbb
fmul
push
lahf
pusha
sub
popf
add
vphaddubw
ja
dec
hlt
pop
sub
(bad)
fld
mov
ss
gs
mov
sbb
or
sub
pusha
cmp
aaa
xlat
sub
or
mov
ja
outs
btr
imul
unpckhps
adc
int3
loope
(bad)
jmp
jmp
int
jnp
ret
rcr
adc
imul
sbb
lahf
adc
inc
push
xchg
push
pop
jmp
rep
cmp
cld
into
xchg
fwait
mov
cmp
in
pop
adc
jl
jns
push
push
push
sub
mov
repnz
xor
jbe
sbb
cs
jne
mov
xchg
sub
or
gs
test
popa
push
(bad)
ds
dec
not
add
adc
frstor
lea
mov
pop
mov
leave
cmps
div
stc
push
or
xchg
out
xchg
int3
je
lock
in
jl
(bad)
adc
scas
adc
cmp
frstor
fwait
xor
gs
xchg
xor
adc
dec
mov
xor
and
mov
cmp
gs
into
sbb
push
call
jmp
push
jns
push
fstp
adc
and
pushf
dec
xor
mov
mov
xor
shl
or
fcmovne
pop
mov
sti
adc
xchg
repz
pop
ret
mov
(bad)
adc
mov
push
sub
push
inc
int3
mov
fwait
push
stos
xchg
inc
popa
adc
jmp
movs
jmp
inc
sub
mov
pusha
div
cmp
loopne
xor
test
sub
inc
das
mov
mov
push
loopne
fstp
bound
fcompp
xor
call
sbb
pop
stc
aam
sbb
mov
repnz
mov
dec
mov
cmp
xchg
cmps
push
push
mov
nop
fs
out
dec
neg
and
mov
js
popf
or
cmp
adc
fwait
test
inc
into
lock
loopne
adc
adc
sahf
pop
dec
dec
in
jb
adc
pop
add
loopne
pop
(bad)
xchg
lahf
pusha
setl
xchg
lock
mov
adc
fldcw
in
cs
retf
rcl
dec
push
inc
mov
sbb
icebp
pop
cdq
test
xlat
icebp
scas
cld
cmp
hlt
adc
in
pavgb
pop
xchg
push
scas
jl
xchg
jmp
aam
mov
or
push
rcl
mov
pop
outs
xchg
jl
and
xor
pop
(bad)
jl
fwait
ud0
cld
icebp
pop
test
xor
dec
popf
mov
stc
int
in
push
mov
xor
xlat
jmp
sbb
cmp
es
sbb
xlat
xor
mov
dec
mov
and
jmp
pop
pop
imul
mov
retf
xchg
pushf
push
xchg
inc
pushf
push
cmp
xchg
ja
push
in
in
data16
jecxz
jmp
pop
rcr
movs
sub
lods
lock
fmul
push
lahf
mov
mov
pushf
popf
(bad)
rcr
mov
push
adc
adc
jno
stos
cwde
pop
fcmovbe
and
and
push
jmp
xor
bound
jmp
sbb
in
lock
jbe
mov
cmovge
xor
xlat
aad
jl
sti
pop
retf
sbb
pop
adc
(bad)
mov
push
or
pop
push
dec
jmp
sbb
lahf
imul
pop
in
(bad)
mov
cs
arpl
and
sbb
push
mov
sahf
in
add
test
xor
pop
push
jmp
pop
movs
call
add
or
repz
scas
xchg
test
adc
bound
xchg
retf
or
add
or
lock
push
pop
test
push
gs
cmp
and
xor
pusha
pop
sub
jge
mov
clc
aaa
mov
mov
mov
popa
sbb
and
xchg
in
push
daa
dec
bound
cmps
stos
inc
adc
dec
xor
or
and
cmc
(bad)
out
mov
or
push
mov
pop
ret
sbb
test
xor
push
adc
inc
cmp
dec
repz
int3
fsubr
add
adc
cmp
repz
ds
push
repz
imul
arpl
and
inc
push
pusha
outs
cmp
jns
cwde
test
into
repz
out
out
push
fs
cmp
repz
push
pop
outs
test
cmp
retf
cld
out
cmps
stc
or
pusha
imul
sahf
cs
cli
push
ds
repz
retf
or
out
sahf
out
cmp
push
jo
mov
out
enter
addr16
cmp
repz
xor
or
cmp
mov
out
ds
push
jns
out
nop
pushf
cmps
mov
(bad)
or
jb
add
push
out
mov
add
mov
push
push
pop
xor
or
or
cmp
repz
push
repz
mov
(bad)
out
cmc
inc
xor
cmp
dec
dec
dec
ins
(bad)
(bad)
outs
scas
mov
push
hlt
dec
(bad)
enter
rol
or
dec
addr16
xor
inc
cmp
mov
push
ins
add
arpl
outs
pop
jne
sub
add
dec
or
cmp
fwait
sub
or
xor
sbb
imul
jle
and
push
xor
xor
inc
outs
push
adc
sub
push
outs
lods
xor
xor
not
or
test
xchg
mov
inc
call
test
and
daa
jae
adc
xchg
out
xor
adc
jb
adc
add
xor
cvtdq2ps
xor
add
lock
mov
rol
sbb
adc
ins
bound
add
mov
sar
dec
imul
or
out
sub
sub
mov
mov
sbb
push
loopne
pushf
inc
mov
imul
scas
push
inc
jecxz
xchg
cmp
daa
sub
or
ins
jb
jns
sub
dec
popa
sub
aaa
cmp
fwait
clc
add
inc
ins
rol
or
in
push
fbld
pop
outs
ins
test
and
(bad)
cmp
push
ffreep
shr
push
loopne
and
xor
shl
shl
test
add
xor
fisub
outs
ss
sub
and
fs
xor
movs
jnp
test
xor
pop
mov
pop
push
cmp
mov
or
xor
mov
out
push
ss
aam
pop
push
push
ret
inc
cmps
sbb
jmp
test
repnz
aaa
pop
test
or
adc
push
fiadd
xor
inc
push
xor
jmp
aad
int
leave
nop
loop
adc
call
(bad)
cmp
xor
in
xor
lea
enter
cmp
xchg
mov
and
sub
jb
clc
adc
sub
mov
xchg
or
inc
fbld
xor
loopne
add
repz
dec
adc
stc
fs
cmp
mov
adc
mov
jecxz
clc
in
retf
xchg
mov
adc
je
dec
cmp
jbe
mov
sub
and
inc
or
dec
or
lods
add
adc
jns
push
into
cdq
test
ins
loope
mov
gs
pop
inc
imul
pop
xchg
add
inc
sub
dec
(bad)
fcom
dec
dec
retf
imul
sbb
pushf
xchg
lea
mov
and
mov
xchg
inc
inc
and
add
lea
aaa
sbb
leave
xor
inc
mov
(bad)
jns
sub
cmp
fcomp
out
dec
xchg
adc
popf
daa
daa
pop
add
in
fisub
mov
lahf
mov
or
push
jp
retf
inc
imul
cmp
xchg
mov
xor
pushf
jnp
push
or
pusha
inc
jbe
(bad)
push
inc
xchg
push
in
push
lahf
xor
fdiv
movs
add
ret
pop
and
dec
(bad)
cmp
and
push
and
and
dec
lahf
or
and
ret
addr16
xchg
pop
pop
pop
aad
add
inc
cmp
add
(bad)
mov
pusha
ins
call
outs
add
xor
and
outs
pushf
adc
sub
or
std
and
push
push
push
push
dec
aam
jne
test
ret
lods
div
push
cmp
fild
xor
aas
jg
inc
mov
jo
inc
call
adc
or
dec
xchg
inc
enter
in
xchg
jg
inc
inc
rcl
in
pusha
lds
inc
aad
dec
pusha
push
or
xor
das
xchg
push
mov
aaa
daa
xchg
mov
rcr
jmp
popw
pop
cmp
out
scas
stc
cmp
add
ds
sub
jnp
sub
es
addr16
call
ds
add
repz
xchg
add
sub
jns
repnz
sub
sub
xchg
inc
rol
cmps
mov
and
xchg
and
ds
sbb
lahf
add
mov
ins
cmps
and
xchg
push
dec
(bad)
sub
ss
in
jnp
js
in
push
add
sbb
xor
in
mov
dec
inc
into
ins
out
jo
sub
push
cmp
mov
daa
pop
clc
push
add
lock
cmp
repz
shl
xchg
xchg
aam
mov
movs
test
push
out
sahf
out
js
jo
sahf
out
sahf
push
dec
jns
out
dec
inc
inc
cmp
out
sahf
out
xor
and
out
sahf
and
adc
or
lahf
out
or
cld
sbb
repz
lock
call
iret
loopne
enter
cmp
repz
jl
cmp
jns
cmps
stc
cld
sbb
mov
sahf
out
xor
add
out
clc
sbb
mov
test
in
sbb
jns
out
push
movs
sbb
push
enter
cmps
xor
out
je
push
je
imul
lds
loop
imul
test
sub
jg
or
add
in
adc
movs
mov
mov
or
adc
dec
cmps
push
pop
and
and
and
es
xchg
xchg
mov
add
sub
and
cmp
or
aas
inc
ja
rcr
inc
dec
dec
dec
cmp
push
xchg
and
push
and
mov
scas
cmp
pop
pop
pop
pop
pop
pop
pop
pusha
mov
addr16
push
ins
ins
outs
outs
jo
jb
jbe
js
jp
dec
sub
jnp
jge
(bad)
push
lds
pop
cs
nop
mov
and
add
test
xchg
add
mov
add
sub
push
add
push
add
add
sbb
add
mov
ja
(bad)
dec
pop
stos
inc
adc
push
add
pop
mov
pusha
inc
shr
and
aaa
xchg
test
adc
test
mov
(bad)
(bad)
dec
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
(bad)
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
ret
(bad)
enter
(bad)
(bad)
(bad)
dec
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
mov
(bad)
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
add
add
ror
adc
sub
nop
dec
cmp
cmp
add
dec
and
jns
add
das
das
adc
mov
push
lods
dec
push
inc
dec
push
(bad)
out
cmp
pop
daa
dec
outs
jbe
dec
dec
sbb
or
inc
jne
jne
sub
sti
cmp
jne
xchg
outs
gs
jo
imul
fisub
jb
out
ficomp
adc
into
cmp
xchg
xchg
imul
frstor
mov
jae
mov
gs
sbb
dec
outs
outs
and
cmp
pushf
ins
jbe
adc
add
inc
aas
xor
out
into
sub
cmp
jo
out
push
fs
sbb
push
add
cmp
(bad)
pusha
xor
jo
mov
fwait
add
add
add
add
add
cmp
clc
cmp
pop
data16
jns
sub
add
loopne
clc
cld
aas
or
sbb
les
pop
call
jne
inc
inc
lods
push
push
push
into
cmp
add
mov
jns
cs
xor
push
mov
jmp
es
inc
sti
adc
adc
movs
add
lods
aas
xor
int
mov
test
mov
jl
or
in
repz
cwde
push
push
sub
pop
sar
inc
add
push
les
int
imul
inc
cmp
outs
test
cmp
mov
xor
fisttp
dec
and
cmp
push
push
lods
nop
pop
xor
xchg
adc
shr
jge
push
jmp
std
int3
mov
and
ss
jnp
scas
push
add
fs
xchg
pop
adc
push
xor
data16
push
add
jl
fadd
retf
sbb
and
aad
das
inc
adc
je
and
mov
test
in
popa
fadd
xchg
ja
cmp
pop
pop
xor
(bad)
pop
push
add
cmp
int
jnp
push
inc
bound
dec
adc
(bad)
ins
loope
repz
imul
in
fwait
mov
jns
push
inc
adc
repz
ds
pop
push
ror
mov
in
jae
push
sub
stc
sahf
out
and
jmp
push
popa
fidivr
cmps
aaa
sti
pusha
mov
pop
push
dec
es
inc
(bad)
jns
in
pop
cs
fbstp
adc
cmps
inc
cmps
pop
cmp
sbb
aas
div
sub
add
push
mov
push
ret
mov
jnp
stos
xor
jae
int3
xor
jns
and
xchg
in
adc
jnp
xchg
retf
repz
push
fistp
push
imul
in
call
xor
pop
sbb
mov
and
cmps
stc
mov
jbe
push
ja
push
addr16
xchg
test
clc
cmp
xor
mov
pop
sbb
(bad)
nop
out
cli
test
jne
dec
mov
push
or
retf
add
jl
xchg
outs
daa
push
or
das
sbb
out
mov
imul
out
add
cmp
js
fs
outs
call
fs
ins
push
je
es
jo
mov
test
data16
(bad)
neg
jnp
jb
es
pop
push
js
jae
fwait
push
mov
lahf
arpl
popa
das
jnp
adc
push
popa
dec
outs
addr16
sbb
sub
cs
cmp
mov
retf
(bad)
das
int3
push
push
cmp
xchg
loope
int3
(bad)
outs
fist
not
push
ds
xchg
ja
push
xchg
cmp
mov
imul
loope
arpl
sbb
dec
fistp
inc
jecxz
push
cmp
adc
and
popf
shr
arpl
dec
push
mov
dec
js
nop
pop
xor
xor
inc
fadd
(bad)
movs
loop
or
fldcw
int
into
mov
or
jge
cmps
dec
jb
hlt
jbe
push
add
ret
idiv
ds
mov
xor
aas
dec
add
inc
push
pop
mul
or
ror
dec
(bad)
lahf
fidivr
dec
inc
push
push
pop
push
push
ja
jmp
pushw
aaa
jo
daa
pushf
xor
xchg
mov
dec
aas
and
push
sbb
sub
out
test
push
push
push
(bad)
adc
jmp
pop
rcl
add
popa
xor
mov
imul
jne
inc
sub
inc
pop
or
(bad)
cld
jg
jecxz
imul
mov
pop
enter
adc
add
add
or
add
add
or
and
and
mov
xor
in
inc
push
cmp
cs
add
pop
xchg
inc
aaa
add
xor
imul
movs
es
call
inc
mov
ds
repz
loope
cmc
push
xor
inc
push
push
pop
rol
add
das
and
dec
inc
sub
dec
cmovbe
inc
cmp
add
aaa
loope
dec
into
sub
inc
fisttp
repnz
push
call
or
or
add
mov
adc
pop
pop
dec
call
sub
push
rcr
ds
call
ins
addr16
cmp
daa
add
push
xchg
fld
add
imul
add
aaa
rcr
jg
das
mov
aas
fmul
adc
cmp
inc
es
sbb
xchg
pop
jo
rcr
adc
inc
daa
bound
mov
call
adc
fwait
push
enter
imul
jbe
(bad)
ins
(bad)
mov
or
jg
fwait
xchg
leave
mov
ficom
cmp
mov
dec
lea
dec
es
mov
push
lds
mov
aas
push
(bad)
cmp
in
and
pushf
fsub
cdq
inc
(bad)
test
add
lods
lahf
clc
cld
dec
mov
sub
mov
test
rol
outs
shl
and
stos
push
mov
mov
inc
and
or
sub
dec
(bad)
mov
and
lds
xlat
cmp
inc
pop
sbb
cmp
jb
add
iret
pop
mov
movs
cmp
add
mov
jle
test
lods
or
mov
in
das
jns
data16
or
lock
and
adc
xchg
sub
test
ret
lds
in
cmp
pop
les
test
or
mov
lahf
cmp
js
mov
push
mov
sub
cs
dec
ja
pop
aam
(bad)
add
cmp
xor
fsub
mul
scas
mov
sub
sbb
cmp
xor
test
pushf
pop
je
in
int
mov
in
in
mov
ds
inc
mov
iret
pushf
pop
xor
cmps
jp
movs
in
scas
scas
push
addr16
mov
addr16
in
repnz
add
aas
ror
mov
in
push
xlat
push
mov
out
jo
cs
enter
dec
inc
out
xlat
dec
out
pop
xor
push
push
add
ins
out
das
mov
add
xchg
mov
mov
out
(bad)
iret
test
cs
in
inc
repnz
xchg
mov
pushf
jecxz
out
xchg
out
sbb
and
pushf
dec
cmp
mov
add
in
pop
lods
jno
pop
dec
mov
jns
test
(bad)
out
popf
pushf
pop
mov
xchg
mov
iret
jns
leave
leave
(bad)
lock
inc
sbb
jb
add
or
adc
xchg
pushf
ja
xor
inc
push
add
push
iret
repz
add
add
iret
repz
out
test
xchg
or
jbe
cmp
add
stos
in
in
mov
int3
xlat
repnz
in
in
clc
add
aaa
adc
or
and
or
pop
push
and
cdq
fs
inc
inc
inc
mov
push
cmovnp
scas
cmp
inc
pop
icebp
pcmpgtw
in
xchg
and
jnp
xchg
pop
and
ins
xchg
cmps
push
pop
cmps
icebp
dec
fimul
dec
cs
fmul
add
scas
cmp
inc
fdivp
out
icebp
icebp
and
sbb
icebp
or
adc
and
enter
repnz
repnz
repnz
repnz
sbb
repnz
cwde
xchg
add
movs
mov
addr16
push
push
add
xchg
mov
and
in
cmp
or
repz
mov
repz
jl
das
xchg
dec
pop
aaa
repz
jns
and
add
mov
inc
push
cmp
and
in
movs
lods
loope
mov
cdq
push
add
addr16
pop
and
cmp
hlt
cmp
xchg
mov
mov
cmp
mov
cwde
aaa
hlt
pop
jbe
jb
dec
rcpps
dec
xchg
out
les
dec
ficomp
dec
push
xchg
dec
cs
jo
dec
cs
dec
pushf
fbstp
cs
enter
repnz
fisubr
add
ja
hlt
xchg
pop
and
adc
cmc
ja
fcmovne
inc
repnz
inc
setno
xchg
dec
push
xchg
cmp
ss
pop
jmp
add
cmp
repz
xchg
jns
pop
movs
xchg
in
dec
pop
mov
clc
dec
pushf
mov
(bad)
cmc
out
xor
outs
mov
pop
addr16
addr16
mov
out
xchg
out
add
push
imul
ja
push
xlat
mov
xor
jbe
mov
iret
adc
jg
outs
mov
invlpg
repnz
idiv
add
pop
jae
aas
pop
in
repnz
or
jb
add
test
xchg
pop
lahf
in
addr16
div
mov
loopne
dec
les
neg
out
in
clc
and
fidiv
neg
iret
sti
mov
iret
push
add
xchg
cmp
daa
inc
mul
jb
pop
ins
jne
leave
and
lahf
call
mov
add
inc
xor
leave
push
and
nop
movs
dec
xchg
push
mov
mov
cmp
jmp
cmc
cmp
jns
std
syscall
clc
or
cmp
addr16
mov
or
stos
je
iret
or
pop
es
mov
clc
inc
clc
dec
clc
pop
clc
and
clc
nop
dec
pop
leave
jae
xchg
mov
fcomp
mov
cdq
dec
pop
jb
cmp
sar
mov
jmp
cld
xchg
adc
jg
stc
dec
push
xchg
and
add
lock
add
push
pop
push
inc
add
stc
jns
add
pushf
cmp
jbe
(bad)
push
add
fwait
cmp
repz
add
sbb
jg
shr
aam
pushf
cmp
jbe
dec
jbe
sbb
add
adc
pmullw
push
jmp
icebp
psubw
scas
add
push
out
daa
iret
add
sbb
push
and
in
sahf
pop
sub
xor
cli
imul
cs
or
xadd
mov
out
add
cmp
fist
or
sbb
inc
push
mov
cmp
ja
cwde
push
mov
mov
pop
xor
cli
(bad)
aaa
pop
xor
cli
mov
in
jns
iret
or
loope
enter
psubw
add
psubq
sahf
out
iret
sbb
pop
out
cmp
inc
(bad)
pop
pop
iret
adc
sahf
or
sti
pop
push
xor
fsub
xchg
push
xchg
les
leave
inc
cwde
lock
sti
cmps
mov
ret
and
jo
retf
cs
mov
outs
adc
ja
dec
out
psadbw
leave
or
adc
jecxz
xchg
sbb
repz
jns
cmp
adc
pop
out
mov
push
or
push
add
test
out
push
inc
push
xlat
lock
call
push
daa
bound
stc
dec
add
push
je
dec
daa
nop
push
cmp
call
(bad)
push
cvtdq2ps
out
add
ins
jne
leave
cmps
fisttp
jge
pop
push
fcom
jns
push
(bad)
mov
sahf
out
lods
mov
ret
jns
sub
push
jns
daa
iret
or
(bad)
cld
pop
or
in
mov
push
adc
std
cmp
repnz
lar
jae
cmovo
pop
dec
std
xchg
ja
xor
ja
out
and
out
push
lock
xor
dec
push
or
fs
outs
sahf
fcmovne
repz
jge
jns
push
mov
cmp
mov
or
or
push
not
fisubr
fwait
sahf
out
idiv
xchg
add
in
(bad)
adc
xchg
out
sbb
(bad)
and
add
stos
jecxz
pushf
xor
xor
xchg
fld
daa
inc
scas
dec
rsqrtps
jns
xchg
pop
bound
mov
or
cmp
xchg
setg
repz
sahf
or
mov
repnz
push
adc
retf
pop
mov
aad
(bad)
(bad)
xchg
xchg
out
in
fst
pop
pop
sbb
ret
inc
mov
mov
out
cli
(bad)
pop
add
in
pop
sbb
mov
xchg
and
daa
push
(bad)
notrack
mov
cmovle
pushf
and
or
mov
mov
iret
cmp
sub
xchg
inc
dec
fisttp
daa
push
daa
mov
addr16
jl
mov
sub
cmp
call
movs
add
sbb
inc
cs
int
pop
pop
or
and
lea
pop
(bad)
jb
loope
sahf
bts
mov
shr
fdiv
(bad)
fldcw
pushf
cmp
cld
or
mov
jne
adc
pop
sbb
je
outs
xor
jns
cmp
iret
inc
push
add
jns
sahf
add
add
jne
outs
out
pop
jns
(bad)
iret
shr
setae
or
repnz
push
sahf
rcr
cwde
mov
add
cmp
leave
add
shr
fst
cmp
addr16
push
mov
mov
addr16
outs
push
push
aas
mov
jns
cld
stos
fld
adc
push
adc
or
popf
loopne
jp
add
adc
popa
loop
shl
das
inc
dec
pop
mov
mov
sbb
push
aas
mov
jecxz
push
in
push
sub
and
test
mov
iret
sbb
ds
mov
fistp
in
lock
inc
pop
xchg
push
or
push
sbb
pop
iret
jmp
mov
shl
xor
jo
daa
cwde
rcl
stos
retf
movs
mov
sbb
sub
or
jp
mov
ds
jg
loopne
outs
dec
xor
ins
in
rcl
adc
ret
inc
add
add
adc
nop
ds
inc
jb
jo
adc
xchg
and
xchg
mov
(bad)
sahf
fs
xor
jg
add
mov
push
in
mov
ret
and
aaa
lock
ret
sahf
jge
dec
mov
cmp
add
imul
and
push
push
cmps
sub
and
inc
mov
fnstenv
mov
fcmovnbe
ret
sbb
fadd
adc
push
pop
clc
mov
fistp
sahf
sbb
add
add
push
adc
and
jnp
aam
test
mov
repz
mov
cdq
lea
fstp
inc
mov
data16
and
test
int
push
test
xor
push
add
sub
jae
add
pop
xchg
sbb
inc
ins
out
add
add
ret
add
xchg
(bad)
aam
fnstsw
sbb
mov
xchg
or
push
lods
xor
scas
add
ins
fs
stc
add
add
xlat
jbe
mov
add
mov
jbe
jae
je
mov
(bad)
mov
sub
dec
mov
and
mov
cdq
or
mov
mov
icebp
sbb
scas
add
or
mov
outs
dec
test
loop
mov
add
aad
push
adc
imul
loop
add
add
dec
and
stos
jno
popa
or
adc
mov
gs
mov
sub
xor
les
popf
add
mov
addr16
ins
push
inc
jae
add
inc
inc
outs
lods
fadd
sub
adc
inc
movs
fs
int3
lock
loop
lahf
addr16
loopne
inc
or
and
and
retf
icebp
and
push
push
pop
mov
out
ret
dec
test
xor
push
xchg
xor
inc
sbb
xor
shr
int
ds
mov
dec
adc
es
sti
mov
pop
inc
gs
scas
and
dec
shl
or
push
xchg
xor
cmps
pop
add
retf
mov
out
sub
inc
sub
repnz
add
cmp
aad
fwait
adc
loopne
add
inc
jae
push
mov
push
movs
inc
jae
xchg
mov
and
cmp
push
(bad)
pop
pushf
gs
dec
leave
je
inc
outs
and
add
jnp
dec
xchg
inc
test
jg
mov
arpl
rcl
add
jle
add
push
push
xor
add
sbb
data16
cmc
xchg
xchg
add
stos
shl
mov
jo
jge
jnp
jnp
(bad)
jne
pop
inc
adc
(bad)
mov
jge
mov
fs
push
loopne
pusha
icebp
rol
cld
(bad)
retf
sbb
ss
jae
cdq
(bad)
(bad)
sbb
mov
dec
push
or
adc
cmp
(bad)
push
and
cmp
daa
inc
jecxz
push
or
loop
ins
sbb
adc
dec
cmp
(bad)
pop
mov
cwde
shl
out
outs
pop
mov
pop
cmp
add
dec
out
xlat
mov
push
std
mov
sti
or
adc
syscall
dec
dec
adc
or
and
mov
add
push
call
pusha
adc
dec
por
push
aam
pop
push
mov
aaa
push
dec
scas
std
sgdtd
mov
sbb
and
xchg
mov
cs
add
aas
mov
lahf
jbe
mov
rol
rcl
iret
movs
pop
js
or
push
adc
jns
pusha
adc
repz
repz
adc
iret
repz
sbb
push
sbb
cmps
stc
cmp
mov
sahf
out
jl
adc
call
mov
jp
push
cld
in
jns
mov
movs
add
cmp
jae
add
add
add
repz
or
or
mov
jbe
or
aaa
or
or
daa
adc
adc
mov
outs
das
and
(bad)
push
addr16
das
push
xorps
pop
imul
push
and
jbe
cmp
jb
pop
and
jbe
or
xchg
xchg
out
pop
xchg
sub
mov
fbld
jbe
ret
xchg
xlat
sbb
data16
add
dec
mov
pop
bound
js
pusha
mov
pop
test
push
dec
adc
adc
pop
add
cwde
jle
and
daa
push
mov
sub
test
pop
mov
adc
pop
mov
mov
inc
jb
add
mov
aas
add
inc
fmul
mov
xchg
pop
adc
push
cmp
or
and
(bad)
xchg
(bad)
pushf
pop
movs
sbb
mov
fisub
daa
pop
mov
inc
mov
inc
mov
inc
(bad)
jg
iret
mov
in
call
sub
idiv
adc
push
ficomp
mov
xor
lea
rcr
fsubp
stc
jb
jle
push
inc
cmp
add
add
push
xor
mov
and
sub
sahf
mov
xor
out
je
pusha
pop
push
push
iret
repz
dec
dec
inc
inc
cmp
cmp
repz
xor
and
cmp
repz
or
clc
sub
cmp
rol
lock
repz
mov
mov
adc
or
es
fisub
mov
jg
push
dec
fadd
(bad)
xchg
dec
fadd
dec
dec
sbb
aas
jo
icebp
pop
aam
call
push
loope
adc
test
cmp
repz
xchg
mov
jge
out
repz
xor
add
repz
cmp
xchg
mov
call
das
dec
inc
movs
and
pusha
ins
test
push
inc
mov
mov
xor
xchg
outs
dec
jo
mov
xor
cmps
push
fcom
xor
int
xor
push
in
dec
pop
cmp
scas
daa
sbb
rcl
adc
xor
adc
jns
outs
and
or
pop
jle
and
or
leave
and
adc
and
or
or
das
sbb
xchg
adc
fisttp
das
popa
punpckldq
xchg
imul
arpl
pop
mov
or
fisub
pop
sub
sub
push
daa
xchg
ds
cmps
lea
ret
add
sahf
add
inc
in
mov
sti
push
pop
pop
ins
daa
test
dec
xchg
pop
ds
pop
cmp
mov
xor
scas
lods
or
cmp
cli
or
mov
inc
adc
add
in
aas
or
add
cdq
nop
and
sub
jl
pop
enter
xchg
mov
cs
pop
call
pop
enter
(bad)
push
idiv
mov
aas
mov
sar
pushf
outs
popa
adc
inc
and
sub
sub
mov
dec
and
inc
aas
push
pusha
es
sbb
mov
call
aaa
jp
sub
in
enter
gs
dec
sub
ja
cmps
or
aas
aaa
pusha
add
and
and
sub
xor
dec
out
mov
pop
xchg
sub
cdq
sar
push
pop
or
adc
push
dec
or
inc
out
push
lahf
mov
jmp
sahf
dec
(bad)
(bad)
scas
add
add
mov
xor
add
fs
sbb
or
cmps
push
inc
jb
push
cmp
(bad)
mov
cmp
or
ins
push
(bad)
xchg
push
push
push
jns
mov
add
and
sbb
aaa
in
cld
outs
pop
add
iret
inc
push
jae
shr
data16
jo
xchg
sar
pop
aaa
pop
sub
scas
out
push
sbb
push
and
js
popa
xchg
sar
sar
popf
imul
jae
dec
add
pusha
jbe
pop
jmp
xor
dec
fnstcw
sub
neg
ins
(bad)
and
dec
ss
fisub
sbb
and
add
daa
sbb
out
lock
sub
jp
stos
xor
xchg
and
add
push
fcomp
aaa
scas
imul
pusha
outs
inc
cs
mov
out
gs
jle
sahf
sbb
cmp
push
mov
push
add
add
inc
imul
cmp
pop
out
and
lods
loop
pop
inc
aas
ins
push
scas
cmp
stos
push
fidiv
(bad)
inc
ja
xor
xor
xor
jle
cdq
xor
xor
xor
xor
(bad)
(bad)
push
pusha
xor
sbb
and
cmp
pop
cmp
inc
cmp
clc
(bad)
(bad)
mov
cmp
cmp
cmp
cmp
ds
aas
iret
aas
icebp
(bad)
dec
xor
xor
outs
push
mov
mov
lds
out
xor
mov
inc
cld
(bad)
push
nop
xchg
or
xor
jns
lahf
cmp
(bad)
(bad)
jg
fsub
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
fstp
iret
sbb
inc
cmp
mov
xchg
cmp
cmp
inc
ds
ds
sahf
(bad)
call
sbb
xor
xor
xor
dec
les
les
xor
scas
xor
xor
xor
fs
(bad)
push
xor
xor
xor
xor
push
std
xor
mov
stc
aaa
and
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
jp
test
xchg
cmp
cmp
cmp
xchg
lods
rcl
shl
adc
sbb
aas
fstp
jmp
repnz
stc
aas
(bad)
jmp
or
xor
xor
xor
xor
xor
xor
(bad)
dec
xor
xor
aaa
cmc
aaa
sti
aaa
adc
xor
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwde
adc
(bad)
dec
dec
xor
xor
xor
xor
sbb
(bad)
call
popf
jecxz
or
cmp
pop
cmp
cmp
je
cmp
cmp
pop
pop
(bad)
arpl
xor
cmp
inc
cmp
xchg
cmp
(bad)
(bad)
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
jmp
cmp
ss
(bad)
(bad)
jmp
xor
xor
jge
test
repnz
fnstenv
ss
lea
dec
(bad)
fbld
adc
add
and
cmp
sub
mov
clc
cmp
sar
jnp
nop
aas
movs
aas
jbe
aas
fdivr
jmp
pop
repz
xor
mov
xor
xor
cmp
icebp
jb
out
xor
mov
adc
and
dec
cmp
cmp
cmp
cmp
cmp
retf
cmp
jmp
xor
jo
inc
cld
test
cmp
clc
xor
xor
fdivr
sar
xor
adc
popa
xor
or
mov
mov
jg
jl
cmp
cmp
cmp
cmp
cmp
or
(bad)
xchg
cmp
gs
mov
xor
xor
mov
push
xor
xor
xor
xor
inc
jo
cld
xor
xor
xor
xor
xor
ss
cmp
cmp
cmp
dec
adc
pop
ds
inc
xor
xor
xor
xor
xor
xor
outs
scas
clc
fbstp
cmp
xor
add
xchg
cmp
hlt
cwde
mov
mov
fs
mov
or
adc
(bad)
fist
mov
mov
nop
xor
mov
xor
sub
fdiv
aaa
inc
cmp
cmp
cmp
jno
jmp
(bad)
call
cmp
push
cmp
mov
cmp
cmp
cmp
addr16
lock
lahf
aas
ror
sar
xor
jbe
mov
xor
adc
xor
dec
mov
cmp
jg
push
sar
jmp
jg
(bad)
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmps
or
(bad)
inc
sbb
sub
xor
push
sbb
jge
and
dec
ins
dec
inc
sbb
cmp
cmp
cmp
cmp
repz
jo
shl
sar
icebp
push
xchg
fidivr
imul
dec
xor
xor
xor
xor
xor
aam
xor
cmps
xchg
add
push
xor
xor
xor
lock
(bad)
jg
xor
ret
and
xor
sub
cmp
jle
fcmovu
(bad)
adc
cmp
retf
aas
fdivr
loope
lock
sub
jg
mov
xor
xor
inc
mov
xor
xor
call
ss
int
jmp
fnstenv
cmp
cmp
sub
pop
cmp
pusha
cmp
(bad)
(bad)
(bad)
jp
cmp
cmp
cmp
mov
cmp
imul
cmp
test
mov
aas
push
into
jmp
(bad)
aas
sbb
xor
xor
xor
(bad)
(bad)
(bad)
mov
aaa
retf
aaa
repz
cli
aaa
sub
test
das
cmp
cmp
cmp
cmp
sbb
aas
cmps
aas
lods
aas
ror
or
jbe
add
jnp
mov
lods
inc
xor
fidivr
cmp
push
in
mov
and
in
ds
aas
fwait
aas
lock
idiv
pusha
movs
aas
mov
xor
xor
xor
xor
xor
mov
xor
xor
xor
dec
mov
xor
xor
(bad)
(bad)
push
popa
aaa
in
aaa
cld
aaa
fnstsw
hlt
cmp
cmp
cmp
dec
cmp
pop
cmp
or
lds
into
scas
fistp
cmp
cmp
cmp
shr
xlat
cmp
cmp
cmp
cmp
or
shl
mov
cs
cmp
cmp
cmp
pop
cmp
cmp
ja
out
xchg
jb
xchg
lds
ret
scas
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
and
push
cmp
cmp
cmp
lods
cmp
int
repz
jmp
pop
ds
dec
ds
outs
ds
xchg
aas
cwde
aas
mov
mov
scas
out
inc
xchg
cmp
or
pop
xor
inc
pop
xor
dec
xor
xor
xor
xor
xor
repnz
loop
mov
push
js
xor
aas
(bad)
stos
and
xor
in
xor
aaa
pop
cmc
lock
cmps
jl
adc
push
test
inc
or
xor
xor
xor
xor
retf
push
clc
jp
xor
mov
xor
or
xor
je
popf
xor
call
xor
add
ss
ss
pop
ss
ss
shl
in
ss
dec
fwait
movs
add
and
push
test
mov
mov
nop
aaa
xchg
lds
push
cwde
aaa
pushf
aaa
mov
aaa
hlt
aaa
clc
push
dec
cmp
mov
pop
mov
(bad)
mov
sub
cmp
cmp
jp
xchg
xchg
cmp
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
leave
cmp
adc
aad
cmp
(bad)
ds
fsub
daa
push
push
jmp
sahf
push
dec
mov
push
xor
xor
(bad)
xor
sar
(bad)
sub
aaa
data16
out
jmp
xor
push
mov
sub
or
push
push
push
sub
ss
cmp
add
fnsave
inc
xchg
pop
cmp
cmp
test
out
sar
repnz
cmp
out
idiv
js
mov
mov
clc
cmp
dec
cmp
mov
cmp
cmp
jmp
popf
cmp
sub
dec
ds
ds
aas
ss
inc
mov
aas
jle
mov
mov
mov
aas
mul
shr
xor
(bad)
call
xor
xor
xor
cmp
push
xor
push
xor
jo
xchg
xor
xor
sbb
pusha
into
jbe
push
add
push
xor
xor
xor
adc
(bad)
(bad)
jg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
cmp
jo
inc
movs
mov
(bad)
call
jge
mov
cmp
mov
cmp
sar
fisub
idiv
adc
push
ds
sub
add
je
(bad)
and
cs
retf
(bad)
ds
data16
(bad)
mov
popa
aas
imul
aas
jge
xchg
pushf
into
mov
int
in
cli
inc
add
push
imul
xor
xor
(bad)
pop
xor
hlt
xchg
push
mov
lock
xor
enter
sar
jmp
xor
xor
out
push
xor
xchg
mov
(bad)
dec
jg
xor
xor
xor
xor
mov
(bad)
xor
xor
xor
xor
das
mov
inc
bound
imul
scas
xor
shl
push
jg
inc
adc
ss
outs
sar
inc
sbb
ss
aaa
pop
aaa
cmp
push
aaa
jns
xchg
clc
aas
jb
cmp
cmp
pusha
cmp
aam
in
jmp
cmp
push
aas
cmp
dec
cmp
cmp
addr16
scas
rol
mov
cwde
cmp
cmp
mov
mov
repnz
cmp
or
(bad)
cmp
cmp
inc
jl
adc
loop
jmp
mov
jmp
(bad)
(bad)
fdivr
fidivr
adc
cmp
scas
cmp
cmp
cmp
cmp
cmp
cmp
loop
loop
mov
cmp
gs
mov
cmp
inc
inc
ds
ds
test
mov
cwde
ds
add
aas
inc
aas
ins
sub
out
ins
out
and
stos
mov
mov
xor
xor
dec
sub
xor
sbb
ss
ss
ror
cmp
js
dec
cmp
(bad)
(bad)
jmp
cmp
cmp
cmp
cmp
pop
ds
lea
pushf
ds
pop
dec
idiv
xlat
aas
loop
mov
xor
sub
xor
retf
xor
mov
xor
xor
es
push
movs
jmp
shl
sub
xor
cli
test
ss
and
ss
ss
ss
dec
adc
dec
adc
xor
push
lods
aaa
iret
aaa
fdiv
call
dec
xor
xlat
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
inc
movs
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
cmp
cmp
cmp
movs
or
fs
adc
outs
sub
cmp
std
inc
sar
push
cmp
cmp
sub
mov
data16
sbb
aas
inc
jp
cmp
sbb
jae
fnstenv
lock
inc
cld
inc
pop
lds
add
sbb
mov
(bad)
push
cld
xor
xor
xor
xor
xor
xor
xor
sbb
cld
xchg
lock
movs
xor
lea
stc
push
loope
outs
pop
lea
cdq
mov
pop
jecxz
inc
add
sbb
cmp
cmp
popa
cmp
cmp
cmp
xchg
lea
cdq
xchg
clc
call
sbb
and
inc
cmp
pushf
cmp
xor
jp
cmp
cmp
cmc
jg
cmp
movs
cmp
arpl
sub
loop
idiv
add
aas
sub
aaa
fcomp
lock
cmp
mov
(bad)
aas
xchg
aas
stos
aas
(bad)
mov
mov
pop
mov
xor
xchg
jecxz
sbb
neg
xor
xor
gs
jg
push
aaa
xor
xor
xor
xor
bnd
aas
fisttp
xchg
xor
call
mov
sub
jle
pop
fstp
lods
in
div
or
sbb
sub
enter
les
loopne
icebp
sahf
or
les
push
dec
cmp
mov
scas
sar
rol
push
cmp
cmp
cmp
cmp
cmp
les
xchg
stc
mov
adc
and
jl
lahf
pop
xor
jg
enter
test
push
xor
xor
xor
sbb
mov
movs
aaa
xor
cmp
retf
cmp
push
pop
clc
out
inc
fdiv
out
cmp
cmp
call
cmp
popa
cmp
aam
(bad)
jne
xchg
push
frstor
aad
inc
cmc
ds
ds
jle
outs
mov
add
adc
cmp
xor
ds
mov
xor
and
loope
(bad)
inc
cli
cmp
imul
mov
xchg
mov
ds
mov
mov
add
mul
jl
call
pop
xor
jmp
les
outs
mov
cmps
xor
xor
cmp
xor
loopne
test
ja
lods
xor
mov
sub
cs
cli
mov
push
mov
xor
out
xor
push
call
ret
ss
push
aaa
scas
aaa
shl
pop
je
(bad)
jmp
cmp
xchg
cmp
cmps
pop
loopne
push
cmp
cmp
cmp
dec
call
mov
jge
(bad)
cmp
jno
cmp
cmp
(bad)
or
int
loopne
cmp
cmp
adc
push
xchg
xchg
pop
test
fild
sub
loop
std
xor
adc
push
sti
xor
xor
push
xor
das
(bad)
fnstsw
xor
test
mov
xchg
xor
xchg
mov
leave
xor
xor
xor
sub
test
mov
(bad)
in
in
ss
or
inc
adc
adc
mov
mov
sub
cmp
inc
retf
push
or
adc
and
loope
fdivr
aas
dec
xor
xor
cmp
cmp
ret
call
add
aas
push
aas
pop
aas
pop
aas
pusha
aas
fidiv
aas
jo
je
jl
mov
fimul
call
movs
mov
mov
mov
push
add
enter
aam
fwait
push
movs
inc
(bad)
jmp
rol
hlt
inc
cld
repnz
mov
inc
xchg
mov
xor
xor
xchg
push
lock
xor
sbb
and
sub
sub
jne
sub
cmp
inc
xor
xor
push
xor
pusha
sar
sub
ins
xor
je
js
xor
add
(bad)
fisttp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
xchg
mov
dec
out
cld
cmp
cmp
mov
sbb
cmp
cmp
cmp
ss
cmp
inc
call
call
dec
inc
push
cmp
cmp
cmp
cmp
cmp
jo
mov
je
js
cmp
jno
push
xchg
lods
cmp
sbb
cmp
sub
sub
cmp
jp
fwait
les
adc
and
sub
mov
xor
cmp
dec
mov
push
cmp
fs
jecxz
pop
jbe
cmp
jl
test
icebp
cmp
cwde
jle
cmp
mov
lods
cmp
mov
cmp
dec
(bad)
stos
fdivr
in
call
cmp
cmp
cld
mov
or
fild
sbb
sbb
and
aam
mov
ds
ds
add
ds
or
lea
push
stos
xchg
mov
cmp
ds
mov
mov
lods
ds
mov
push
jmp
sar
ds
aam
fdivr
fdivr
loopne
in
call
ds
ds
ds
bound
add
or
pop
aad
pop
sbb
jecxz
xor
sub
hlt
add
shl
xor
add
mov
xor
clc
add
mov
xor
xor
adc
jmp
jmp
lea
xor
sub
mov
mov
lea
xchg
pushf
enter
xor
xor
inc
xchg
xor
inc
xor
push
push
loope
out
pop
pop
xor
xor
xor
and
sub
xor
test
inc
in
jg
dec
dec
xor
pop
xor
push
aad
fmul
push
jne
stos
fmul
and
and
inc
pop
lods
outs
stos
push
pop
ins
ss
js
xchg
lods
ss
shl
mov
aaa
sub
dec
aaa
push
fcom
shr
cmp
cmp
cmp
jo
nop
cmp
push
jp
cmp
mov
cmp
mov
xor
aas
rcr
inc
and
cmp
inc
cmp
mov
icebp
aad
loopne
add
and
inc
cmp
and
shr
push
xor
je
rcl
cmps
cmps
push
sub
mov
hlt
pushf
cmp
lock
and
lods
mov
mov
fs
icebp
push
xor
add
in
push
icebp
icebp
mov
cwde
loopne
or
sbb
cmc
icebp
icebp
ins
dec
dec
je
mov
shl
or
and
loop
push
push
pop
pop
fisub
push
int3
js
mov
test
xor
call
clc
fist
xor
xor
push
xor
fs
mov
cs
in
call
sub
pop
hlt
ins
call
sub
mov
xor
mov
adc
sbb
and
jne
loop
push
xchg
je
sbb
test
inc
movs
xor
test
xor
ins
(bad)
call
xor
push
je
test
push
mov
fcomp
ret
sub
cmp
dec
icebp
push
call
ins
nop
jl
mov
mov
into
aam
hlt
xchg
or
sub
xor
mov
xor
cwde
mov
mov
or
sub
cmp
pop
aaa
fs
test
mov
data16
sbb
cmp
inc
jl
pushf
cld
enter
mov
fdivr
loopne
call
cmp
sub
je
loope
jg
lods
cmp
cmp
cmp
or
adc
cmp
jo
push
inc
push
cmp
fimul
fistp
mov
cmp
cmp
inc
cmp
sbb
xor
cmp
dec
clc
stc
mov
cmp
mov
mov
add
jo
push
and
or
pop
sbb
inc
mov
mov
test
aam
push
jo
add
mov
jl
jo
inc
add
dec
hlt
push
add
and
cli
cli
cmp
dec
or
(bad)
rcr
call
nop
xor
clc
cli
cli
mov
pop
xchg
movs
movs
jecxz
add
ss
loopne
hlt
mov
push
pop
add
out
dec
cld
clc
(bad)
mov
xor
xor
sub
xor
sbb
jnp
cmp
dec
xor
and
mov
mov
adc
call
sub
xor
pusha
pop
pop
push
cmp
movs
out
aad
pop
jge
(bad)
(bad)
aam
call
stos
lods
pop
sbb
das
pushf
stc
mov
xor
xor
sub
xor
ss
stos
add
add
dec
or
scas
sar
aas
mov
xor
xor
xor
xor
xlat
xlat
xlat
or
xlat
stc
inc
dec
cmp
pushf
xor
cmp
dec
clc
sbb
push
inc
ss
rcl
test
call
push
in
dec
sbb
cmp
inc
adc
clc
(bad)
pop
push
ins
aaa
je
jl
mov
mov
cmp
aaa
aam
add
cs
add
cmp
push
cmp
push
mov
xchg
jle
call
push
ins
or
add
dec
add
aad
mov
sbb
movs
xchg
mov
mov
stos
sbb
in
hlt
xchg
or
pop
or
sub
push
cmp
je
jl
fisub
ds
jp
cmp
stc
jmp
test
stos
call
mov
cmp
jno
(bad)
pop
cmp
mov
aam
cmp
push
cmp
mov
bnd
ret
ins
(bad)
xchg
cmp
aam
fmul
loope
iret
add
or
sbb
or
loope
cmp
je
lock
lods
xlat
aam
out
pushf
sbb
sub
sub
js
stos
lock
nop
mul
mov
sbb
cs
pop
adc
add
loope
loopne
(bad)
xor
push
mov
sub
or
iret
je
jl
jmp
push
pushf
cs
mov
cmps
adc
and
xor
inc
dec
jo
push
sub
mov
pop
mov
cli
push
fwait
xor
xor
cmp
push
nop
test
test
push
(bad)
js
mov
xchg
cwde
sbb
mov
mov
mov
sbb
and
ds
stos
adc
mov
fcomp
clc
inc
or
cmp
stos
adc
pop
jo
hlt
cmp
cmp
cwde
xor
shl
push
pop
jnp
pop
inc
adc
icebp
pop
push
jmp
loopne
add
adc
fdivr
das
sub
or
push
pushf
(bad)
repnz
xchg
movs
test
xor
xor
cmp
adc
sub
das
cmps
push
es
sub
xor
into
es
xor
sub
outs
push
addr16
inc
movs
xchg
and
rcr
jae
mov
pop
out
and
sbb
inc
add
imul
xor
mov
dec
jae
loope
pop
mov
ins
addr16
cmp
cwde
scas
jae
jp
fidiv
jae
rcl
push
dec
push
push
icebp
dec
sbb
inc
outs
push
lods
push
dec
outs
push
fwait
mov
sub
inc
push
inc
or
loopne
loop
dec
dec
(bad)
fwait
jne
dec
mov
cwde
gs
clc
std
in
and
xor
xor
xor
cmp
xlat
and
dec
xor
sub
xchg
hlt
or
sbb
aam
jmp
sub
inc
or
mov
cmp
sub
or
xchg
cdq
lea
mov
xor
xchg
call
iret
mov
jne
jge
sub
daa
gs
out
sbb
mov
mov
icebp
popa
xchg
cs
in
or
(bad)
or
adc
sub
sti
cmp
pop
mov
ins
int3
add
loopne
dec
shl
xor
pop
movs
xor
cs
xchg
out
ss
mov
push
dec
mov
sub
sbb
cld
and
or
(bad)
sub
inc
jno
sub
add
arpl
sub
push
iret
outs
retf
inc
mov
xchg
add
icebp
mov
repz
xchg
mov
test
adc
xchg
and
mov
cmp
dec
push
xor
inc
sbb
xchg
ret
inc
into
adc
sub
rcr
aam
movs
sub
sub
cmp
(bad)
inc
pop
cmp
sub
cmp
pop
ja
push
pop
sub
sub
ds
pop
and
and
and
and
and
mov
ret
ficomp
popa
das
leave
jge
imul
push
ret
outs
mov
jbe
sub
jne
jns
sbb
imul
aaa
sbb
mov
pop
movs
adc
out
cdq
xchg
outs
aas
mov
push
das
sti
push
sub
popf
inc
pop
call
jae
pop
or
sti
cmps
jne
inc
xor
sub
addr16
in
cmp
inc
pop
cmp
outs
int3
adc
inc
sti
in
movs
fist
cmp
ja
shl
pop
das
aas
sub
cmp
pop
xor
lods
adc
ret
dec
mov
mov
iret
dec
or
movs
dec
fcmovu
or
or
(bad)
outs
arpl
push
mov
pop
sub
inc
loopne
mov
test
test
idiv
jbe
lea
mov
(bad)
or
cmps
xchg
jbe
loopne
pop
inc
jge
daa
mov
aas
pop
and
cli
fcmove
inc
xchg
xchg
xchg
jae
inc
and
out
mov
loopne
leave
les
pop
sbb
adc
or
push
ja
jo
fmul
sub
mov
xor
and
xor
push
inc
cdq
js
gs
in
out
shl
mov
pop
lahf
outs
sbb
jl
xor
bound
mov
fiadd
iret
lods
dec
sub
sbb
ds
jo
ins
dec
inc
xor
int3
(bad)
mov
dec
and
loopne
or
stos
iret
ds
dec
or
inc
ins
shr
pusha
or
push
xchg
mov
sub
sub
popf
and
or
adc
push
jecxz
push
dec
int3
popa
add
mov
dec
cmp
push
jge
(bad)
jb
rol
push
ret
test
mov
xchg
mov
jge
cmps
xchg
arpl
out
pop
es
dec
sbb
mov
cmp
push
mov
jp
or
fadd
add
pop
push
(bad)
and
es
add
and
xchg
call
sub
jnp
mov
add
pop
pop
or
or
adc
sti
pop
and
jg
pop
xor
lea
jns
cmp
push
movs
mov
sbb
xor
out
(bad)
pushf
aas
pop
cdq
pop
or
cs
dec
test
sahf
or
add
adc
pop
inc
movs
lock
ja
xchg
fist
lds
and
lock
push
sbb
xor
jl
jmp
xchg
cmp
cmp
xchg
movs
xchg
imul
aaa
nop
adc
(bad)
pop
or
jnp
jae
sub
sub
xor
aas
xor
int3
lods
call
in
inc
jl
inc
xor
xchg
aad
dec
test
add
mov
outs
pop
and
dec
jnp
inc
fiadd
jae
mov
jnp
lods
cmp
cmps
and
imul
inc
xor
popa
mov
xor
lds
ror
fcomp
and
push
jge
adc
jne
or
and
pop
mov
mov
pop
cmp
sub
push
je
sub
mov
dec
adc
dec
popa
movs
cwde
lods
inc
lods
push
dec
std
popa
mov
stos
repz
addr16
inc
sub
sbb
and
rcl
(bad)
or
stc
sub
jne
xor
movs
dec
pop
retw
mov
sbb
and
inc
cmp
sub
push
stos
in
sbb
arpl
or
mov
mov
sub
jno
and
or
bound
(bad)
in
adc
or
icebp
sub
fdivr
jecxz
sbb
pop
pop
ins
(bad)
sub
add
push
jge
push
js
ror
lock
or
add
dec
dec
or
jns
adc
ret
sahf
imul
xlat
or
and
sbb
sub
sub
ror
jmp
or
dec
std
mov
add
cmp
stc
xchg
mov
jbe
or
ins
(bad)
cld
push
add
or
pop
add
inc
add
sbb
stos
mov
inc
vandps
fnstcw
pusha
mov
das
pop
push
mov
es
cs
sub
test
push
sub
rol
jae
sbb
mov
ds
(bad)
adc
sbb
fbld
and
shr
cmp
jl
sub
(bad)
scas
sbb
fwait
pusha
push
mov
sub
jbe
cmp
dec
call
sysexit
dec
outs
mov
imul
push
movs
xchg
sti
push
shl
(bad)
push
xor
jbe
sti
sub
xor
cmp
fwait
rep
sti
jne
mov
jmp
imul
fadd
stos
sub
push
test
ins
(bad)
cmps
pop
sbb
and
inc
sbb
cs
xchg
int
lods
add
test
les
mov
dec
sbb
push
sub
sub
pop
push
and
xchg
push
je
and
addr16
fisub
fwait
jl
shr
gs
pop
aas
xor
ins
jmp
inc
sub
lock
lods
ja
inc
xchg
add
scas
adc
inc
add
and
or
add
xor
outs
xor
mov
adc
(bad)
push
and
imul
add
arpl
pop
adc
ins
loopne
loope
inc
xchg
and
outs
test
call
lahf
push
aaa
mov
in
jnp
daa
xchg
daa
cdq
fnstenv
in
arpl
btr
out
add
cmp
aaa
sub
sub
and
nop
xchg
pop
dec
inc
adc
xchg
cmps
(bad)
jp
test
adc
xchg
loopne
jge
xlat
mov
pop
adc
mov
xlat
xchg
inc
inc
bound
ror
fcomip
sbb
add
popf
add
stos
(bad)
cmc
popa
stos
pop
out
mov
cs
xor
aas
mov
lods
add
mov
test
dec
and
das
je
xchg
push
adc
es
(bad)
sub
sub
gs
mov
cmp
retf
stos
xor
lds
pop
cmp
inc
ror
xchg
fld
ins
and
sub
aas
jp
adc
sub
or
aad
xor
mov
popa
sbb
cmp
pusha
cmp
and
aaa
and
xchg
dec
je
inc
test
xchg
or
call
popa
clc
(bad)
push
icebp
out
cwde
mov
push
in
cs
in
popa
inc
jbe
outs
and
and
call
xor
(bad)
fcomp
fld
sub
shr
push
cs
fsubr
scas
ja
cmp
aaa
push
lea
mov
mov
(bad)
movs
push
push
gs
sbb
clc
imul
mov
ds
xchg
cmp
jge
or
pop
sbb
pop
cmp
div
repz
push
and
cmp
cmp
push
push
out
test
das
push
pop
mov
push
lods
movs
stc
test
mov
pop
pop
rol
daa
std
jns
xor
push
lea
cmp
jnp
inc
xor
mov
imul
imul
mov
movs
repz
cmp
int3
sub
sbb
and
add
jmp
mov
pop
or
pop
mov
or
jo
sub
mov
sub
and
es
inc
and
inc
sub
das
cmp
add
add
sbb
js
push
add
push
dec
sbb
emms
sub
ins
cmp
mov
lods
jmp
or
sub
(bad)
daa
jbe
lea
add
scas
das
scas
push
repz
push
iret
ss
gs
out
lock
adc
rol
pop
sbb
mov
mov
js
jns
fcomp
mov
adc
jo
and
aad
lea
adc
sbb
(bad)
mov
outs
dec
mov
jl
neg
add
ret
xor
sbb
and
mov
adc
inc
mov
inc
ins
stc
mov
jecxz
out
(bad)
jnp
jecxz
mov
in
popa
push
and
(bad)
inc
imul
(bad)
mov
cmps
jae
mov
arpl
add
imul
inc
pop
sub
sbb
and
ss
inc
lds
xchg
stos
xor
out
in
sbb
lea
int
mov
js
mov
push
or
iret
outs
push
cmova
add
xor
sub
sbb
sub
lea
adc
(bad)
ror
mov
mov
dec
je
arpl
cmp
mov
adc
add
fwait
cs
popa
mov
ret
jmp
fisubr
sub
cmp
loopne
or
push
sub
pop
dec
loope
jo
pop
ins
sub
push
stos
addr16
jmp
add
mov
popa
mov
pop
adc
out
inc
call
movs
jo
aam
icebp
fidiv
inc
loope
inc
pop
dec
push
mul
xor
mov
jb
dec
push
ja
outs
mov
mov
mov
cmp
(bad)
pop
fwait
push
bound
cld
or
cmp
gs
pop
jo
or
sub
mov
jl
jge
mov
jae
movs
inc
add
jnp
fisttp
jns
(bad)
call
mov
stc
repz
rol
adc
movs
jnp
mov
cmp
sub
cmp
inc
pop
cwde
adc
push
jbe
pop
popa
shl
mov
test
pop
jbe
in
pop
dec
add
inc
mov
push
fdiv
add
imul
add
fcom
inc
bound
dec
sub
aaa
or
jg
icebp
push
rol
fld
or
(bad)
sub
add
jmp
loope
add
loopne
and
and
popa
rol
cmc
fldenv
adc
rol
pop
and
out
mov
inc
inc
mov
adc
dec
pop
(bad)
sbb
in
addr16
and
adc
mov
jmp
lds
dec
or
xchg
outs
cmp
add
xor
nop
add
cmp
pop
xor
cmp
bound
and
pop
popa
xchg
inc
or
push
bound
faddp
add
fsubr
push
bound
ret
push
lds
test
(bad)
sbb
push
pop
jp
adc
cwde
inc
rol
nop
and
jbe
or
or
pop
xor
or
mov
xor
mov
sub
sub
out
arpl
cmp
adc
leave
or
jo
adc
sub
pop
add
ins
(bad)
sub
ss
je
inc
mov
sti
adc
sbb
mov
push
cwde
ss
fwait
pop
push
pop
in
push
add
mov
and
cmp
mov
ror
xchg
inc
ror
pop
imul
mov
add
mov
mov
je
dec
sub
pop
xor
(bad)
xor
mov
mov
mov
rcl
test
push
pusha
lods
cmp
stos
lds
push
add
jp
mov
mov
(bad)
fst
jne
ret
cdq
cwde
jge
and
test
adc
popa
push
lea
fwait
jmp
mov
nop
adc
aaa
and
or
xchg
pop
xor
ret
xor
jle
inc
jl
sbb
js
rcl
cwde
fld
repz
xor
stos
dec
jmp
dec
popa
add
inc
mov
xchg
adc
and
shr
or
out
fs
sub
(bad)
cmc
cmps
mov
sub
es
rcl
push
nop
or
inc
jge
neg
pop
xor
cs
pop
mov
aad
inc
movs
adc
ja
(bad)
lock
arpl
pop
or
cmp
sbb
ror
mov
movs
ins
inc
aaa
pusha
rcl
and
push
push
rcl
imul
(bad)
sub
xchg
jg
mov
ds
stos
jo
push
rcr
xchg
xchg
xchg
push
stos
and
dec
movs
retf
cmp
rcr
lods
add
jp
xor
scas
outs
cmp
ins
mov
fstp
(bad)
aas
scas
adc
sub
cmp
stos
and
hlt
or
jbe
punpckhdq
mov
adc
sub
(bad)
xchg
mov
js
int
ror
sub
and
or
mov
outs
test
cs
les
jmp
adc
and
cs
xor
xor
xor
push
adc
iret
and
add
add
push
mov
adc
je
popa
mul
jmp
cs
pusha
mov
das
cs
test
sub
xor
cmp
dec
and
sbb
aad
js
dec
fcos
cmp
lea
movs
(bad)
pop
add
push
mov
mov
and
dec
dec
add
inc
push
or
aas
inc
jmp
sbb
daa
jo
xchg
and
arpl
ss
push
and
rcl
mov
and
inc
push
(bad)
aad
fidivr
cmps
mov
fst
hlt
mov
push
pusha
leave
aad
pop
das
and
jno
mov
xor
or
nop
jo
pop
jae
mov
xchg
sbb
push
or
mov
inc
sub
push
xchg
(bad)
dec
les
in
(bad)
pop
mov
push
leave
jns
and
and
pop
mov
lds
sbb
movs
or
dec
data16
dec
or
pushf
mov
test
popa
mov
imul
shr
sub
xchg
push
shl
ins
adc
lock
jecxz
sbb
inc
dec
test
rcr
and
leave
aas
mov
sub
aas
xor
cmp
push
jnp
ret
pop
jge
pop
sub
inc
adc
push
out
add
outs
xchg
or
leave
ss
mov
daa
dec
in
ins
sub
push
sbb
xchg
pop
add
and
popa
pop
les
sub
dec
xchg
es
xor
add
call
popa
cmp
mov
adc
jns
mov
sbb
fmul
dec
add
inc
xor
ret
push
or
outs
push
(bad)
dec
add
movs
addr16
jecxz
dec
pcmpgtd
mov
pop
push
pusha
loope
pop
mov
test
xor
jecxz
mov
dec
pop
pop
sub
test
pop
jae
sub
ret
cs
add
pop
sub
rol
and
pop
call
and
jl
pop
mov
sub
jge
xchg
jmp
cmp
mov
mov
pop
imul
scas
jl
fucomip
lock
cmps
jl
aas
pop
sub
sub
in
imul
lds
pop
pop
sub
xor
test
test
jl
jl
sub
fdivr
sub
and
std
clc
jo
jecxz
imul
sub
std
dec
jb
shr
(bad)
movs
mov
sbb
push
add
das
lds
aas
sub
mov
sub
dec
fs
nop
test
sbb
fsub
mov
sti
xchg
jae
lods
stos
mov
retf
outs
mov
sub
xor
ds
push
sbb
popa
mov
inc
dec
mov
add
pop
pop
pop
rcl
sub
sbb
inc
inc
je
push
fild
push
xchg
sahf
test
loope
pop
push
hlt
inc
xchg
or
mov
mov
and
es
jbe
push
mov
push
lock
addr16
add
aaa
das
xor
das
inc
rol
xor
sbb
popa
ds
and
daa
mov
adc
push
ret
or
loope
mov
add
in
adc
inc
push
shr
cmc
mov
ret
and
das
iret
mov
in
test
or
inc
push
mov
rol
inc
xchg
imul
push
xor
arpl
or
pop
dec
leave
leave
ret
cli
add
ja
neg
cmps
xor
cmp
shr
popa
xor
cs
scas
ins
ins
(bad)
adc
jo
cmp
fcomp
mov
lahf
loop
xor
or
or
repz
jmp
idiv
sub
test
fmulp
xchg
bound
popf
sbb
adc
addr16
sbb
mov
loopne
out
inc
mov
xor
fimul
outs
sub
dec
out
data16
bound
loope
mov
ret
or
push
push
sub
xchg
shl
ins
cmps
ret
xor
mov
or
adc
stc
and
stos
adc
and
mov
popa
xchg
mov
enter
xlat
adc
pop
mov
test
mov
xchg
stos
adc
add
call
sub
mov
sub
(bad)
dec
js
ins
or
add
and
sbb
add
sub
ret
cmps
sti
dec
or
sub
mov
add
js
mov
shr
fwait
pop
jae
pusha
cmp
js
inc
mov
mov
and
inc
cwde
mov
movs
jmp
inc
mov
xor
popf
inc
sub
in
or
and
ss
push
bound
jno
push
pop
or
mov
rcr
or
(bad)
das
or
add
sub
or
xchg
scas
adc
mov
mov
cmps
inc
aaa
daa
out
jns
mov
loop
xchg
imul
mov
jge
xchg
cdq
imul
ja
push
popa
es
xor
sub
add
and
cmp
push
push
or
xchg
(bad)
fisttp
aad
add
arpl
in
fnsave
sub
pop
xchg
pop
cmp
loope
adc
mov
bound
sbb
add
mov
jg
xor
sbb
in
inc
aaa
sbb
ret
xchg
push
ret
(bad)
add
sti
js
push
ret
ret
add
xlat
sub
shr
xchg
sbb
sub
ins
rcl
das
pusha
mov
fdiv
daa
pusha
pop
jo
leave
mov
rep
pop
(bad)
inc
or
shr
arpl
push
pop
mov
dec
or
scas
push
xor
push
cmc
dec
or
lds
jo
shr
lock
lahf
addr16
jp
adc
(bad)
jbe
popa
xlat
call
push
pop
test
dec
test
or
jae
push
mov
fadd
pusha
repnz
pop
retf
xor
sbb
adc
jno
cmp
and
mov
xchg
mov
ffreep
(bad)
sti
xor
mov
bound
inc
out
loopne
test
push
mov
jo
ins
dec
and
push
push
(bad)
rol
int3
adc
out
dec
aad
and
add
ret
mov
arpl
shl
popa
std
fs
mov
xchg
ficom
cs
loop
jns
arpl
xor
loope
inc
inc
dec
ud2
sbb
arpl
xor
lods
mov
lock
xor
and
mov
iret
movs
sub
and
(bad)
or
outs
xor
mov
inc
call
or
in
je
test
scas
jmp
inc
ins
pop
mov
inc
sub
mov
cmp
mov
lds
(bad)
dec
pop
dec
adc
mov
cmc
outs
rol
pop
leave
pop
mov
rcr
fbld
xor
fist
ret
push
lods
inc
in
cmp
fadd
popf
aas
int
test
cmp
xor
test
mov
cs
daa
adc
addr16
xor
push
jecxz
or
or
mov
pop
ror
test
div
adc
add
sub
dec
test
adc
sar
pop
inc
lods
push
in
push
je
aam
sbb
(bad)
leave
add
xor
push
fnstsw
ja
dec
pop
test
mov
and
das
pop
shl
and
sub
cdq
push
ja
js
bndldx
stos
popf
adc
sub
imul
inc
add
sbb
adc
and
ret
inc
mov
cmp
popa
sbb
jbe
xchg
pop
and
adc
jnp
sbb
sub
inc
cmc
fmul
ins
sub
xor
xor
jge
and
dec
jge
bound
or
jae
inc
imul
cmp
adc
cmp
rcl
or
cs
mov
outs
ds
push
and
repz
dec
mov
sub
mov
out
add
gs
outs
shl
arpl
les
leave
sub
lds
retf
gs
data16
sub
jmp
cmp
cmp
cmc
jae
sbb
pop
lahf
sub
pop
mov
dec
jecxz
(bad)
std
out
pop
mov
mov
sbb
ret
pop
push
adc
or
xchg
inc
add
xchg
aas
mov
sub
ret
(bad)
les
or
and
lods
dec
adc
aad
inc
mov
retf
mov
inc
jne
rcl
push
daa
or
xor
and
sub
push
sbb
xchg
jo
dec
fsub
sbb
or
fcom
add
adc
adc
cmps
push
mov
enter
out
pop
cmc
outs
ja
jno
dec
js
add
das
fidivr
jbe
in
and
cmps
inc
inc
loope
imul
les
lea
adc
(bad)
mov
pop
call
sbb
pusha
or
jb
jmp
les
movs
je
rep
sbb
sahf
(bad)
and
sub
push
inc
jl
jbe
rcl
cmp
add
inc
js
je
cmp
sbb
jno
inc
or
mov
cmc
sbb
daa
cmp
rcl
or
and
or
add
sub
mov
in
loope
xor
push
dec
add
imul
movs
push
test
jne
adc
pop
(bad)
jmp
cmp
jae
icebp
xor
push
mov
in
inc
pop
pop
jne
push
push
adc
fild
push
jge
dec
dec
(bad)
aaa
adc
adc
push
push
mov
dec
bound
popa
(bad)
push
rol
(bad)
mov
mov
sbb
test
popa
xchg
adc
jbe
or
(bad)
imul
adc
dec
push
pop
imul
and
(bad)
jne
and
cmp
arpl
aas
mov
add
xor
cmp
or
(bad)
int3
(bad)
sbb
mov
pop
fst
xchg
ficomp
sbb
pop
lea
pop
push
rol
sbb
adc
shr
push
and
clc
or
add
mov
test
sbb
gs
or
fist
fs
clc
xchg
pop
push
mov
fnstenv
cmp
adc
lds
fild
inc
cmc
cmp
test
ret
sbb
jl
mov
pop
pop
mov
push
push
or
pop
or
imul
cmp
jno
sub
rcr
mov
inc
dec
adc
adc
or
inc
pop
dec
outs
and
cmp
icebp
pop
sub
add
das
ficomp
or
ud0
add
das
popa
daa
and
das
jnp
adc
in
pop
pop
sbb
test
cmp
sti
mov
xlat
cmp
jl
cmp
xor
popa
jle
mov
pop
popa
jbe
jae
cmp
popa
and
clc
sbb
dec
xor
pop
sub
popa
ret
inc
cmp
popa
pop
sbb
or
push
mov
loop
(bad)
and
cs
jmp
stos
or
loope
xchg
push
cmovne
out
xor
ret
mov
ins
pop
push
push
cmp
fwait
dec
inc
or
mov
cli
dec
mov
add
dec
lock
ins
jmp
cmp
fist
mov
xlat
xchg
sub
fstp
pusha
js
inc
in
push
loopne
and
aas
dec
ins
call
sbb
mov
idiv
nop
xor
loope
push
and
sbb
in
xchg
inc
fcom
movs
pop
add
pop
pop
je
dec
sbb
mov
inc
and
xchg
inc
aad
inc
dec
rcr
mov
jmp
and
fs
cmp
or
and
pusha
in
inc
inc
popa
test
inc
imul
test
sub
(bad)
mov
add
inc
neg
and
jo
dec
mov
inc
dec
aas
repnz
sub
pushf
or
not
sub
or
and
lds
test
(bad)
clc
fimul
test
(bad)
jmp
push
xchg
mov
push
bound
loope
loope
push
lock
stos
xor
or
and
outs
scas
test
ror
cmc
dec
mov
dec
inc
inc
inc
loopne
shl
int3
and
outs
pop
jns
daa
pop
fadd
pop
(bad)
push
jg
lahf
fcomp
and
ret
ja
je
call
add
cs
ud2
push
das
cmp
xor
mov
das
adc
lds
popa
cmp
sub
and
mov
test
push
dec
popf
outs
push
mov
movsx
and
aas
icebp
lods
push
cmp
das
daa
jae
cmps
in
cmp
mov
jo
push
lds
push
iret
cmp
pushf
ret
inc
sbb
or
push
pop
cdq
rcr
test
pop
mov
and
cmp
mov
and
cmc
mov
rcr
addr16
sbb
inc
mov
push
ror
sbb
sub
dec
fwait
sub
loop
pop
mov
mov
xlat
test
xchg
and
shl
jmp
cmp
mov
sbb
and
xor
or
sbb
(bad)
push
inc
sbb
jae
pop
jecxz
ja
xor
mov
je
mov
cmps
das
xchg
or
inc
xchg
mov
jbe
cmp
pusha
fs
sbb
pusha
dec
out
aaa
sbb
lock
pop
pinsrw
xchg
outs
fmul
jnp
loop
xor
push
pop
sbb
mov
std
ins
icebp
mov
jns
and
pop
pop
inc
push
jo
cmp
sbb
xchg
adc
loopne
dec
out
or
mov
mov
mov
rol
jp
bound
arpl
dec
cmp
dec
and
and
pop
inc
in
sbb
adc
shl
pop
jbe
pop
push
push
add
pop
or
(bad)
sbb
xor
nop
adc
gs
mov
sbb
mov
jno
stos
inc
stos
sbb
cdq
jbe
pusha
(bad)
out
jb
outs
daa
int3
bound
stc
sbb
and
mov
adc
mov
das
mov
dec
push
mov
imul
add
cmp
jg
add
daa
jbe
add
xchg
mov
rol
popa
aad
cli
sub
inc
imul
outs
icebp
push
xor
fs
jmp
inc
das
mov
mov
adc
rol
ja
adc
(bad)
mov
lods
test
inc
xlat
add
in
or
add
mov
sbb
jo
fmul
dec
rol
mov
sub
jle
add
lods
xor
xor
test
xor
ror
or
and
daa
dec
inc
add
mov
inc
xchg
and
pop
jae
jp
dec
in
outs
pop
jbe
add
sbb
mov
inc
imul
cmp
adc
scas
jge
push
lea
aaa
das
inc
movs
or
push
sub
and
sub
cwde
fidiv
mov
pop
push
push
in
sub
and
mov
cwde
or
or
cdq
dec
repz
sub
xchg
movs
js
rcr
sbb
fdivr
mov
(bad)
sbb
rol
fidiv
gs
add
push
mov
out
jge
retf
shr
push
bound
pop
sbb
sbb
and
jns
or
mov
push
aas
inc
jae
bound
jne
aas
dec
fiadd
movs
shl
push
push
dec
in
test
mov
mov
adc
sub
xor
add
add
and
adc
sub
lock
sub
mov
out
sub
out
push
mov
and
mov
mov
movs
inc
sahf
sbb
push
jns
ret
dec
cli
xor
push
sub
mov
arpl
sub
sub
into
sbb
push
sub
lea
ja
lock
ja
add
sbb
ror
and
push
xchg
clc
dec
adc
add
xor
lahf
mov
add
jecxz
(bad)
mov
adc
sub
mov
adc
test
mov
add
sbb
iret
sbb
nop
push
dec
cdq
sbb
or
sbb
inc
(bad)
cs
cmp
and
and
add
in
push
pop
shl
sbb
or
xor
jno
push
fwait
pusha
inc
test
inc
cvtdq2ps
das
pop
add
or
xor
inc
pop
or
clc
nop
push
xor
mov
cmp
or
push
cmc
jae
test
sbb
mov
jo
loope
jl
loopne
mov
(bad)
add
imul
push
ins
inc
ret
or
dec
mov
and
or
gs
ror
xchg
sub
or
imul
inc
leave
repz
jmp
shl
sub
add
and
sbb
movs
add
ret
rol
adc
xor
(bad)
and
movs
xor
(bad)
out
xchg
fld
pop
dec
adc
sbb
push
shr
add
fisttp
popa
iret
dec
je
xor
jp
(bad)
pusha
and
in
or
movs
lods
icebp
int
inc
test
pop
pop
mov
aas
and
pop
push
xor
inc
cmp
xor
dec
push
cdq
loop
popf
push
sbb
mov
dec
(bad)
scas
(bad)
mov
adc
stc
jmp
xchg
push
mov
ins
or
in
outs
or
push
pop
arpl
nop
mov
sub
xor
xchg
pop
leave
sub
pop
mov
push
push
aam
and
imul
adc
pusha
xor
adc
(bad)
ret
mov
aaa
sub
mov
sbb
dec
(bad)
fild
pusha
arpl
push
loop
cmp
sub
arpl
fild
mov
adc
imul
sti
push
pop
xor
sbb
inc
jnp
imul
je
outs
sub
inc
test
jnp
mov
sbb
pop
pop
jnp
xor
push
adc
stos
int
fwait
retf
push
js
inc
mov
or
(bad)
xor
(bad)
in
inc
fidivr
adc
pop
lds
cmp
jno
jmp
xchg
add
push
and
int
adc
sub
push
adc
scas
inc
pop
and
lahf
or
test
sub
test
sbb
inc
out
cmp
mov
shl
cld
adc
and
fild
adc
pop
repz
(bad)
aaa
sahf
fsubp
pop
shl
aad
mov
jl
ret
aas
and
inc
cmp
and
xchg
cmp
cmp
cmp
js
ret
xor
jno
(bad)
and
ja
add
add
dec
arpl
xor
test
aad
and
xor
xchg
pop
pop
add
push
inc
push
jno
movs
push
imul
jno
sub
cmc
inc
test
xor
and
inc
ins
mov
jno
adc
and
loopne
das
jnp
sbb
dec
fiadd
cs
ins
sub
push
fwait
test
add
test
cwde
imul
fwait
add
int3
add
inc
jno
sub
stc
pop
jne
sbb
int
xor
pop
ins
dec
add
stc
add
and
xchg
xor
js
and
xchg
sub
(bad)
xor
mov
scas
or
test
mov
and
dec
fist
sbb
adc
push
xchg
mov
retf
pop
dec
lock
mov
push
in
stos
push
(bad)
cmc
adc
test
sub
or
push
mov
ret
popa
imul
imul
cmp
sbb
retf
jge
js
sub
push
sub
sbb
or
or
popa
add
mov
scas
dec
aas
in
inc
ins
cdq
add
aaa
dec
pushf
cmps
test
or
push
(bad)
and
lods
bound
pop
jmp
xchg
jbe
push
fcmovnbe
das
inc
or
sub
dec
push
sbb
retf
cmps
cmp
les
pop
cs
mov
(bad)
push
loopne
mov
pop
cmp
adc
aad
inc
push
inc
jge
push
xchg
dec
pop
adc
or
xchg
mov
imul
push
fisttp
stos
sub
xor
ins
movs
(bad)
pop
and
xchg
push
jbe
pusha
je
xchg
jecxz
pop
jae
das
and
pop
mov
and
cmp
add
jl
iret
or
(bad)
jl
gs
dec
retf
ret
adc
xchg
sar
aaa
(bad)
in
dec
xchg
fmul
jbe
mov
es
add
or
popa
shr
cmp
xchg
outs
pop
sub
aaa
shl
mov
cmp
imul
jo
push
add
hlt
push
and
cmps
(bad)
les
xchg
mov
mov
nop
fcmove
push
inc
xchg
fcomp
inc
mov
adc
shl
scas
test
add
xor
in
sbb
push
arpl
mov
je
bound
add
or
out
and
xchg
fmul
lea
pop
push
ret
xor
adc
ret
push
cmp
or
dec
sub
arpl
mov
pop
retf
daa
add
lods
jp
inc
push
rcr
and
mov
das
adc
xchg
adc
mov
mov
dec
call
fwait
(bad)
cs
jmp
xor
mov
mov
push
fild
test
les
fbstp
inc
out
pop
push
xchg
arpl
imul
arpl
clc
fcmovb
sub
pop
rol
and
test
dec
mov
rcr
cmp
popa
dec
in
imul
sub
xchg
add
push
add
add
sbb
aad
cmp
rcl
xor
inc
push
iret
test
scas
sub
mov
sub
sub
push
icebp
sub
jge
sub
jecxz
ror
xor
adc
sub
add
mov
ins
sub
and
inc
test
sub
dec
sahf
inc
(bad)
rol
bound
pop
xor
push
pop
mov
and
cmp
jecxz
pusha
lea
dec
mov
xchg
cmp
inc
(bad)
dec
inc
rcl
sub
or
ins
movs
pop
in
test
push
push
in
xor
test
or
adc
push
xor
cmp
lds
jae
les
adc
pop
dec
stc
jl
add
jo
arpl
pop
fistp
mov
and
bound
add
pusha
jnp
jne
pop
pop
jmp
mov
mov
jnp
pop
adc
and
daa
sar
stos
ret
adc
and
sbb
(bad)
ds
and
pop
pop
push
pop
add
mov
mov
add
jno
int
mov
mov
push
cdq
mov
test
sbb
adc
pop
xchg
and
xor
add
sbb
sti
fadd
sti
inc
mov
sbb
test
sub
imul
ss
mov
sub
xor
dec
scas
or
adc
dec
mov
xor
xchg
xchg
push
and
mov
in
sbb
adc
aas
push
cmp
stc
movs
test
loop
cmp
adc
adc
sub
nop
jae
imul
enter
add
sbb
add
fcomp
cmp
fcom
sbb
shr
adc
arpl
pop
mov
bound
aaa
cmp
shl
or
pop
add
leave
pop
and
mov
pop
add
aas
fistp
sbb
fisubr
mov
xchg
dec
and
sub
pop
fcmovnb
ss
(bad)
mov
out
and
arpl
loope
pop
aaa
mov
cmp
mov
jbe
lahf
(bad)
xchg
xor
sub
jae
das
adc
js
xor
inc
add
test
mov
and
cmc
dec
pusha
adc
in
adc
jecxz
xor
lods
adc
daa
nop
push
or
or
imul
or
dec
pop
scas
out
mov
inc
test
sbb
mov
mov
cmp
outs
push
sbb
cmc
add
adc
push
das
fs
ret
scas
daa
retf
sub
sahf
out
adc
inc
jbe
jg
movs
and
prefetch
sub
popa
(bad)
push
fld
popa
adc
sub
jae
sbb
mov
cmp
or
or
pop
or
int
push
leave
xor
inc
jge
pop
xor
(bad)
arpl
mov
dec
and
jnp
pop
cs
(bad)
je
ret
pop
in
pop
call
cmp
jge
adc
xchg
mov
int
cmp
jmp
and
popf
ins
xchg
adc
push
inc
shl
mov
dec
pop
lahf
(bad)
call
mov
outs
xchg
pop
sub
inc
mov
(bad)
(bad)
push
add
scas
and
fnstsw
xor
push
ud1
jne
iret
or
adc
movs
adc
mov
addr16
dec
cwde
ficomp
inc
push
adc
xor
push
and
pop
xchg
pop
icebp
add
fld1
push
mov
inc
outs
xor
cmp
sbb
test
sbb
dec
sbb
push
sbb
jno
and
popa
lods
pop
cdq
lods
and
add
loope
xchg
mov
ja
nop
pop
or
and
xor
dec
clc
adc
inc
sbb
fsub
sub
inc
add
sbb
add
or
mov
pop
sub
sub
pop
mov
and
ins
cmp
inc
mov
push
and
sub
dec
dec
push
jo
ret
dec
out
cmp
and
jo
std
je
add
adc
test
(bad)
dec
push
adc
adc
jno
and
das
cmp
inc
ret
popa
rcl
mov
jge
push
sbb
fisub
test
loop
mov
xchg
ficomp
and
inc
or
sbb
outs
sbb
add
jnp
fmul
add
mov
pusha
inc
xchg
sub
xor
and
mov
ins
mov
or
sub
and
mov
scas
inc
les
das
arpl
test
je
dec
push
fild
aaa
sbb
sbb
push
movs
adc
cmp
scas
lds
pop
or
pop
mov
pop
cmp
add
push
dec
or
inc
pop
nop
movs
test
(bad)
cmp
xor
jge
inc
push
aaa
lar
inc
xchg
pop
lods
rcl
sub
sahf
mov
jno
(bad)
fs
add
xor
mov
fild
scas
call
data16
dec
or
and
hlt
push
rcr
(bad)
pop
loope
cmp
adc
or
xchg
add
(bad)
aad
lds
add
stc
mov
(bad)
int
dec
shr
mov
out
jg
nop
or
dec
shl
xlat
test
mov
popf
push
jmp
cmp
jge
adc
sti
mov
das
ja
stc
ret
pop
or
inc
imul
adc
inc
push
and
dec
dec
jb
sar
fndisi(8087
fild
retf
push
inc
and
mov
in
fwait
test
xlat
rol
cmp
movs
push
lahf
shr
adc
sbb
push
push
ins
sbb
mov
dec
add
add
fnstenv
jge
inc
inc
xor
sub
cmp
lods
sub
aad
mov
sbb
aad
inc
sbb
popf
inc
and
or
movs
shl
push
push
jge
mov
ins
xor
or
mov
or
sub
add
test
arpl
popa
pusha
jmp
xor
(bad)
mov
or
sti
jno
sbb
pop
std
outs
retf
or
sub
sub
scas
mov
pop
bound
push
push
cmp
sub
ficom
adc
dec
sub
and
xchg
xlat
or
popa
xchg
stos
push
movs
dec
stc
xor
aaa
xor
inc
rcr
movs
arpl
mov
pop
or
jg
mov
ret
cmp
adc
ins
popa
push
inc
push
shl
xor
inc
xchg
pop
push
sub
push
cmp
xchg
mov
push
bound
or
cmp
mov
cmp
push
(bad)
add
push
jmp
jecxz
jae
dec
sub
icebp
sub
leave
lods
add
cmp
jns
(bad)
fisubr
js
add
aad
mov
or
inc
sub
aad
inc
add
pop
cs
sbb
or
and
push
add
ins
cvtdq2ps
sub
sbb
push
jecxz
pop
imul
jnp
or
cld
and
dec
adc
adc
adc
scas
pop
adc
sbb
push
(bad)
dec
pop
dec
cmp
xor
retf
mov
or
xchg
cdq
sbb
push
(bad)
ficom
mov
jl
fs
daa
and
xchg
push
sub
mov
popa
pop
fidivr
mov
sub
mov
dec
fld
ret
push
jns
lea
adc
out
inc
add
xchg
inc
fwait
mov
xor
popa
push
inc
add
adc
in
pushf
add
popa
daa
mov
mov
sub
nop
aaa
cmp
and
aas
test
fs
loope
js
scas
jg
outs
fist
add
push
neg
sub
iret
rol
pop
bound
jae
pop
pop
sbb
push
mov
pop
jae
mov
ins
mov
mov
outs
scas
cmp
xor
mov
stos
fiadd
jge
dec
mov
test
add
(bad)
stos
push
shl
adc
lea
add
daa
cmp
or
pop
int
mov
inc
and
ss
mov
pushf
rcr
sti
(bad)
push
ins
add
add
mov
leave
sub
inc
imul
shl
not
inc
mov
jmp
or
push
add
mov
xor
and
and
mov
sbb
(bad)
dec
jno
cmp
mov
outs
ins
jae
mov
inc
inc
sub
or
clc
sub
mov
call
mov
adc
data16
imul
adc
inc
test
jae
mov
inc
mov
cmp
add
cs
push
pop
aaa
popf
adc
sub
or
xor
inc
xlat
dec
pcmpeqb
adc
popa
and
or
out
ret
adc
inc
sbb
stc
sbb
xchg
js
popa
cmp
ret
test
popa
scas
ins
inc
rcl
jmp
and
xchg
pop
dec
retf
mov
ret
adc
push
js
stos
mov
dec
das
jb
jae
inc
and
fcomp
or
adc
outs
inc
adc
or
push
loop
mov
and
inc
gs
pop
push
push
or
(bad)
cmp
adc
test
and
push
add
sbb
test
cmps
xor
add
sbb
mov
mov
sbb
pop
add
adc
xor
loopne
mov
mov
and
out
ret
out
mov
cmp
adc
cmp
stos
and
leave
jmp
or
mov
in
sub
ins
push
lea
(bad)
sub
push
das
and
bound
or
jne
rep
sbb
test
ret
icebp
fsubr
cmp
clc
(bad)
cmc
xchg
and
add
pop
fcom
ja
lea
jno
stos
jae
adc
imul
add
or
and
stc
daa
dec
sbb
adc
jnp
add
xchg
cs
ret
movs
movs
test
add
aas
adc
inc
cmps
fild
stos
sbb
fsubr
test
xchg
or
adc
xchg
adc
mov
dec
bound
fdiv
movs
pop
cmp
lods
sbb
sbb
adc
push
push
pop
sbb
add
out
adc
push
and
xor
test
mov
sub
test
mov
in
retf
and
mov
push
push
push
or
push
inc
mov
imul
cmp
cmp
or
cmp
mov
cmp
cdq
jne
mov
xchg
mov
lds
loopne
and
fwait
test
stos
xor
lods
nop
and
push
es
ret
pop
adc
arpl
sub
test
pop
sub
sub
mov
inc
arpl
fcom
mov
int
popf
ja
mov
and
int
dec
mov
les
add
in
inc
loop
mov
add
push
inc
sbb
(bad)
pop
loop
push
scas
gs
dec
xchg
or
push
clc
adc
pushf
aas
cs
jno
test
pop
sbb
div
xchg
cwde
adc
jns
ins
pop
add
daa
push
ret
(bad)
jmp
add
cmp
mov
aaa
mov
imul
jno
sbb
icebp
fdivr
fsub
xchg
fld
xchg
add
pop
add
pusha
clc
sub
pop
pop
mov
jg
xor
sbb
mov
in
dec
mov
mov
mov
mov
movs
pop
sbb
fdiv
and
je
popa
pop
adc
xor
lahf
mov
sbb
lds
xor
cmp
sub
imul
popa
inc
mov
fwait
xchg
in
push
imul
sub
xor
push
les
and
popf
or
aam
fwait
jae
push
nop
jmp
stc
dec
test
int3
ret
dec
movs
stos
xor
sub
loopne
fild
mov
fcomp
add
xchg
xor
sub
push
rol
xor
xchg
scas
sbb
test
xlat
pop
cmp
and
dec
push
pop
fdivr
scas
mov
cmps
(bad)
jae
pop
add
outs
sbb
rcl
add
add
shl
mov
push
adc
daa
mov
xlat
adc
pushf
sbb
lds
popf
stos
test
in
mov
(bad)
pusha
jecxz
adc
jne
retf
(bad)
mov
mov
add
dec
shr
jge
inc
xor
push
adc
popf
pop
xor
push
push
ins
pop
imul
bound
sub
inc
out
call
cmp
xchg
lahf
cmp
imul
sub
mov
cs
dec
lods
jne
pop
outs
xor
inc
test
(bad)
pop
test
inc
out
push
push
xchg
dec
rcr
jo
mov
out
add
adc
int
jb
cmp
in
daa
dec
cmp
sub
sub
ret
sub
ror
and
pop
mov
push
jnp
mov
sub
scas
mov
and
repz
or
addr16
pushf
push
or
sub
mov
push
cmc
add
cmp
and
push
push
jno
add
ins
addr16
adc
add
cmps
rol
sub
jl
rol
cmc
mov
cmp
cmc
add
jecxz
inc
mov
push
inc
pop
addr16
xchg
cmp
std
sbb
stos
and
mov
cmps
sbb
jp
sub
mov
sub
sbb
xor
mov
jnp
jns
and
scas
xor
dec
lods
cmp
or
test
xchg
push
and
sub
enter
cmp
(bad)
add
sub
aad
xchg
xor
pop
add
and
cmp
std
inc
fsub
xchg
adc
add
pop
push
push
push
imul
loopne
lds
push
int3
popa
bound
lods
or
jnp
(bad)
push
pop
mov
jno
push
adc
daa
sub
sub
pop
mov
mov
stos
push
movlhps
enter
inc
shl
jg
and
leave
inc
dec
shr
fldcw
pop
iret
stos
popa
mov
cwde
sahf
sub
adc
cmp
dec
push
(bad)
lea
mov
loopne
inc
movs
jb
push
and
ret
jg
cmp
xor
pop
pop
and
add
push
xor
rcr
imul
or
xor
out
xchg
xchg
lods
mov
inc
(bad)
mov
mov
push
or
mov
inc
loop
shl
adc
pusha
mov
les
cmp
adc
in
cmp
jo
outs
ins
adc
cmc
sub
and
stos
adc
sbb
mov
mov
push
sbb
or
mov
push
js
jno
adc
inc
xchg
mov
dec
gs
ret
cmp
daa
jno
dec
sahf
mov
lods
jmp
jne
fs
repz
dec
dec
fist
mov
push
adc
push
inc
repz
adc
dec
arpl
add
dec
imul
jecxz
xchg
inc
dec
imul
mov
pop
add
lods
inc
xchg
and
dec
adc
popf
add
iret
sub
xor
cmp
pop
mov
mov
mov
aaa
jne
loope
sub
shl
test
in
scas
movs
int
inc
and
dec
lods
je
push
sbb
push
and
mov
mov
xor
out
lods
push
xor
add
lds
or
aaa
push
pop
shl
rcl
mov
lea
or
cmp
in
shl
imul
xor
bound
xchg
push
imul
sbb
inc
or
inc
inc
popf
cli
and
or
icebp
les
sbb
(bad)
inc
out
test
movs
mov
ret
add
xchg
push
and
jbe
add
dec
push
sbb
or
inc
sub
and
pusha
sub
iret
push
xchg
stos
sbb
inc
bound
retf
push
out
jne
inc
pop
push
outs
ret
mov
retf
jge
xor
test
adc
xor
imul
shl
mov
addr16
and
jo
popa
dec
xlat
leave
or
push
lds
sbb
sub
sub
add
inc
xchg
pop
sbb
int
ins
popf
adc
dec
mov
loop
adc
fdivr
pushf
or
imul
sub
pop
or
add
popa
add
or
mulps
push
inc
ja
data16
sub
mov
xchg
fcmovb
push
xor
ror
pcmpgtd
xchg
sbb
loope
inc
or
lods
les
mov
adc
add
or
xor
or
cwde
test
dec
lds
mov
mov
push
movs
jge
or
loope
push
push
adc
mov
xchg
sahf
mov
dec
cmp
std
xchg
sub
outs
jne
mov
pop
xchg
mov
arpl
adc
push
sub
pop
mov
dec
mov
and
cs
sbb
cwde
out
xchg
dec
rol
sub
pop
sbb
jecxz
cwde
pop
pop
das
in
inc
inc
sub
push
sbb
retf
xchg
mov
push
mov
xchg
add
es
cmp
xor
xor
jg
ins
adc
pop
sub
jmp
into
xor
popa
arpl
dec
xchg
test
push
pusha
push
ror
inc
or
test
xchg
mov
arpl
repz
mov
pop
cmp
mov
imul
push
fwait
cmps
aad
ins
dec
loope
(bad)
int
retf
loopne
icebp
das
pop
sub
cmp
and
rol
outs
shr
lods
adc
sbb
dec
pop
dec
mov
iret
mov
scas
dec
mov
loopne
(bad)
fdivr
mov
pop
xchg
mov
sub
or
add
pop
mov
out
daa
xor
daa
jae
cmp
adc
jae
mov
ins
mov
pop
jne
enter
inc
cwde
pop
test
(bad)
sub
inc
mov
mov
cmp
das
dec
dec
test
pop
ror
xor
sub
jb
imul
shl
test
inc
sub
adc
daa
adc
pop
dec
and
sub
sahf
mov
ins
lahf
inc
in
in
fimul
pop
dec
cmp
bound
xchg
mov
out
movs
cdq
cdq
fisub
xor
mov
sbb
inc
test
lea
ja
aaa
mov
mov
lock
pop
adc
sbb
adc
bound
fmul
sbb
sub
bound
and
lds
mov
xor
mov
cmc
or
xor
push
jecxz
(bad)
push
mov
sub
ret
and
nop
push
cmp
sbb
movs
mov
dec
pop
test
icebp
dec
loop
mov
pavgw
sbb
push
add
push
adc
ins
mov
cmp
cmp
cwde
inc
fisttp
jbe
adc
fwait
cwde
(bad)
cwde
test
sti
xor
(bad)
pop
add
xchg
fwait
outs
jne
xor
jnp
std
dec
and
int3
mov
loope
xchg
and
dec
dec
scas
sub
pusha
mov
sbb
xlat
movs
xor
mov
or
inc
pop
xchg
cs
add
add
inc
sbb
or
push
lea
call
mov
nop
pop
jmp
fld
push
mov
pop
jnp
movs
sbb
xor
or
push
in
or
aad
jnp
fiadd
mov
dec
pop
mov
repz
retf
pop
dec
dec
stos
pop
test
sbb
dec
lods
dec
push
lds
and
das
sti
mov
call
enter
popa
sbb
pop
add
in
mov
movs
mov
mov
or
pop
xor
or
dec
ror
test
fs
test
lea
jmp
inc
sti
xor
push
aam
aas
mov
push
daa
je
jl
mov
and
and
jg
sbb
jns
std
or
adc
ins
push
(bad)
stos
daa
jp
and
or
aad
fcomp
mov
add
cmp
adc
popa
sbb
inc
push
add
sbb
jns
add
cmp
dec
scas
and
cmp
movs
cmp
or
add
cmp
jns
xor
and
pop
fimul
arpl
xor
mov
(bad)
jg
pop
pop
sub
push
mov
test
cmc
rol
shl
cmps
pop
push
idiv
sub
push
test
movs
or
test
jl
xchg
fwait
lods
adc
or
iret
inc
inc
dec
inc
pop
gs
test
inc
adc
arpl
xchg
outs
imul
ja
and
sar
sbb
das
push
inc
sub
jbe
add
xor
xchg
std
or
sub
inc
and
adc
push
dec
inc
mov
aaa
and
(bad)
mov
xor
sub
jbe
cwde
cmp
movs
idiv
lods
add
sbb
lds
or
sub
sub
movs
dec
xor
add
cwde
arpl
or
dec
xchg
outs
xchg
cmps
mov
call
jmp
sub
mov
jns
jns
dec
aam
and
(bad)
leave
inc
push
ror
pop
mov
jns
or
int
add
mov
cmc
mov
shr
inc
sbb
retf
int
bound
cdq
fist
test
into
icebp
gs
icebp
aas
cmp
mov
inc
pusha
mov
inc
and
fadd
sbb
imul
mov
lea
jno
pand
mov
sbb
or
inc
int
mov
and
sbb
jo
cmc
and
adc
mov
mov
test
loop
add
fs
fnstenv
xchg
(bad)
call
inc
push
mov
xor
and
push
jl
push
jmp
xor
sbb
add
je
cld
pop
push
dec
mov
loope
lods
mov
adc
xor
mov
cmp
add
or
pop
mov
gs
shl
ins
and
ret
cmp
aam
rol
push
sub
les
push
adc
sub
pusha
imul
lods
or
sbb
leave
mov
mov
mov
adc
xchg
add
fwait
inc
pushf
gs
mov
add
and
pop
aaa
lds
cmp
js
pop
call
and
sub
adc
inc
or
lds
gs
iret
jl
fwait
add
ret
sbb
add
ins
sub
mov
and
imul
xor
fdivrp
or
xor
addr16
jmp
cdq
(bad)
or
scas
mov
enter
cmp
mov
and
and
movs
sub
dec
es
shr
push
cs
movs
iret
shl
js
sub
mov
inc
iret
cmp
vunpcklpd
sbb
jo
push
add
or
mov
nop
nop
add
repz
mov
and
mov
push
mov
mov
cmp
or
test
dec
test
movs
pop
daa
nop
xor
popf
pop
push
sub
mov
or
cmp
sub
or
cmp
cmp
inc
mov
or
daa
and
add
xor
push
rep
jbe
dec
xor
mov
sbb
cmp
push
or
and
not
xchg
popa
and
add
mov
cmp
dec
push
add
xchg
sbb
sub
dec
and
push
mov
add
add
jmp
mov
sbb
mov
add
lods
sbb
scas
aas
(bad)
stos
sti
push
adc
movs
icebp
popf
jo
aam
xlat
arpl
imul
jg
xor
and
jbe
add
xor
sub
and
fadd
push
sub
jmp
mov
fadd
ins
xchg
mov
xor
pop
or
mov
adc
add
loopne
xor
lods
ror
pop
lods
gs
sub
pop
(bad)
and
adc
mov
or
ja
adc
mov
mov
cmp
pop
pusha
inc
xchg
rol
mov
lahf
xchg
mul
sbb
rol
inc
add
dec
cmc
push
fiadd
fidivr
movs
push
and
mov
or
mov
inc
movs
mov
sbb
rcr
mov
(bad)
ins
add
xchg
mov
pop
imul
cmp
mov
push
sub
or
ins
rcr
push
test
outs
ror
and
sbb
rol
push
push
pop
add
enter
dec
jne
inc
and
cmp
mov
shl
int
dec
outs
add
pop
rol
push
in
push
push
sub
outs
xchg
adc
push
out
mov
(bad)
mov
nop
lods
inc
push
inc
(bad)
in
mov
or
pop
lods
pop
fdivr
imul
sub
sub
fwait
ror
test
loope
xchg
xor
test
push
sbb
push
lods
sbb
ins
sub
test
inc
sub
jge
(bad)
cmp
jno
pop
imul
add
into
fcom
(bad)
bound
pop
ret
adc
call
mov
sbb
push
pop
and
jnp
cmp
ins
arpl
add
enter
inc
ins
pop
add
mov
push
add
(bad)
scas
xchg
mov
pop
scas
js
sti
push
sbb
inc
add
inc
adc
push
movs
push
pop
inc
sbb
sbb
scas
lea
inc
inc
mov
aaa
and
adc
sub
dec
outs
inc
cmp
add
fiadd
sub
dec
inc
adc
jmp
push
fild
mov
cmp
xchg
mov
(bad)
in
out
nop
fsub
pop
pop
adc
popa
test
in
sub
dec
popa
and
cs
or
arpl
std
add
inc
ret
xor
shl
shl
dec
ja
popa
retf
push
cmp
dec
cmp
loopne
xchg
sub
push
daa
fnstenv
rol
add
and
or
or
push
(bad)
ret
mov
pop
add
xor
cmp
pop
stos
pop
ret
(bad)
and
mov
outs
or
sbb
inc
dec
push
push
out
pop
push
pop
jecxz
add
adc
inc
lds
jmp
or
add
adc
pop
jne
loope
dec
loopne
mov
mov
jmp
loope
and
mov
sub
popf
inc
test
jne
lods
or
cmps
xor
adc
jno
adc
and
adc
test
add
out
sub
loope
push
xchg
xor
or
pop
inc
xchg
test
mov
sub
xchg
push
je
dec
(bad)
and
or
aad
jo
xchg
xor
or
stos
retf
rol
adc
push
push
cmp
(bad)
mov
sub
sub
adc
sar
retf
mov
push
and
xor
adc
sbb
fbld
arpl
stos
push
pop
popa
gs
test
xchg
dec
jge
stos
les
xchg
test
pop
adc
sbb
dec
adc
(bad)
dec
lahf
lds
(bad)
xchg
push
pushf
inc
shl
sbb
popa
and
dec
addr16
inc
rcr
retf
fild
mov
and
xlat
jne
inc
aaa
inc
add
or
add
push
mov
xlat
in
les
dec
rcr
add
mov
popf
ret
dec
push
add
repz
out
add
pop
jecxz
sbb
and
or
cs
xor
sar
shl
and
push
mov
or
les
or
setnp
adc
add
xchg
jmp
pop
and
cmp
frstor
push
xchg
fnstsw
and
lds
sbb
ret
(bad)
pop
(bad)
sbb
add
push
cmp
sub
repnz
jne
aad
(bad)
or
adc
retf
sub
fld
fdivr
mov
inc
nop
ror
mov
out
or
icebp
sub
dec
pop
inc
mov
jle
jmp
imul
cdq
push
mov
inc
mov
dec
inc
loope
and
sub
inc
mov
rol
push
mov
out
retf
lods
call
pop
push
pop
pop
sub
xchg
inc
or
test
mov
outs
sub
push
pop
push
sub
jg
inc
loop
jno
dec
xor
(bad)
add
cmp
and
jge
xchg
icebp
push
and
aaa
sub
mov
shl
mov
in
lea
inc
mov
pop
popf
jne
sub
sub
jg
aad
mov
lods
adc
lods
or
ja
pushf
adc
and
pop
and
(bad)
aas
in
xchg
call
lds
or
sub
jno
add
pop
add
sub
cmc
movs
sub
cmps
or
lea
ret
outs
inc
mov
add
push
sbb
out
rol
mov
push
lods
jge
dec
inc
mov
xchg
add
pusha
in
jmp
cmp
addr16
xor
popf
cmp
mov
test
rcr
add
les
fbld
pop
mov
mov
imul
or
test
xchg
xchg
mov
xlat
ret
sub
add
and
nop
js
mov
and
icebp
cmps
cmc
inc
mov
fs
push
adc
and
mov
imul
pop
pop
and
(bad)
and
fucomi
int
outs
int
dec
inc
outs
sbb
inc
dec
and
pop
push
leave
inc
mov
shl
and
nop
stos
adc
pop
sbb
push
movs
or
(bad)
push
add
or
ret
sub
dec
das
inc
pop
sbb
sbb
mov
mov
dec
jo
aad
fwait
dec
sbb
rcr
xor
inc
or
ja
daa
adc
and
add
add
shl
add
inc
or
and
aas
pop
pusha
pop
lds
mov
or
stos
xor
scas
int3
pusha
sti
adc
mov
jae
(bad)
ja
std
jnp
cmp
adc
pop
sbb
sbb
shr
aam
adc
inc
mov
or
sub
xchg
retf
xor
xlat
rcl
mov
sub
lea
add
and
lds
or
jo
mov
daa
outs
dec
mov
pop
icebp
xor
inc
sti
and
fiadd
jnp
xor
sahf
and
push
or
sbb
arpl
shr
xchg
xor
adc
ret
lock
sbb
pop
(bad)
lods
xchg
add
inc
fsub
dec
cmp
pop
sub
and
ins
nop
out
and
std
sub
mov
jl
arpl
xchg
jno
lock
mov
lods
inc
xor
pop
or
sbb
push
mov
adc
imul
push
sub
xchg
xchg
adc
cmp
inc
or
rcl
iret
daa
bound
push
or
lds
clc
add
dec
adc
imul
fs
test
in
add
ins
mov
mov
cmp
mov
fcomp
and
adc
xor
sbb
(bad)
leave
ss
xor
das
shl
inc
sub
or
xlat
adc
(bad)
and
retf
nop
adc
into
in
aad
sbb
adc
aad
push
or
sbb
sub
and
sub
das
scas
dec
and
sti
mov
mov
add
inc
lds
icebp
xor
cmp
ffreep
stos
add
arpl
adc
adc
cmp
xchg
rol
xchg
xor
stos
inc
jmp
inc
jecxz
inc
enter
xor
(bad)
push
test
dec
ret
mov
mov
sti
or
shr
sub
pop
add
pop
pop
jbe
push
pop
jl
pop
sub
adc
add
xor
sub
ss
pop
imul
daa
and
or
adc
pop
data16
cmp
and
sub
sub
neg
ds
and
sub
sub
fnstenv
pop
jb
outs
sub
inc
pop
inc
xchg
jp
icebp
or
push
inc
jne
enter
add
dec
dec
xor
jg
dec
or
adc
loope
shr
addr16
add
xor
cmp
or
dec
mov
ins
pusha
adc
xlat
sub
sub
and
je
ins
or
jb
mov
addr16
sbb
fs
or
fld
(bad)
scas
adc
dec
imul
dec
jmp
jmp
int
xchg
xor
push
adc
cmp
lods
xor
sbb
lds
mov
push
xchg
(bad)
movs
stos
adc
sbb
das
inc
sub
lods
shr
das
pop
in
mov
aaa
mov
push
pop
push
fdiv
cmp
je
icebp
cmc
dec
test
frstor
aam
push
ins
and
sub
xor
scas
ins
call
mov
cs
fcom
mov
mov
inc
xchg
imul
xchg
add
pop
sub
inc
push
push
add
sbb
loopne
scas
jo
das
add
sub
lods
cmps
push
inc
ins
or
sub
sbb
sbb
sub
aad
add
cmp
rcl
mov
mov
xchg
jae
jns
and
loope
jno
shl
mov
int
(bad)
push
push
dec
push
lahf
mov
fmul
outs
or
adc
pusha
mov
push
jmp
jnp
and
add
sub
xchg
(bad)
sub
xor
jno
cmp
xor
and
retf
sub
or
xchg
iret
sbb
dec
scas
inc
inc
bound
arpl
popa
mov
lea
(bad)
scas
aam
(bad)
mov
push
sub
lea
rol
dec
push
lea
sbb
or
call
fdiv
adc
lea
rol
mov
push
ret
movs
xchg
fiadd
or
sti
rol
xor
mov
dec
popa
sbb
pop
test
xchg
mov
adc
sub
cmc
push
add
pop
sub
mov
inc
scas
add
mov
add
or
mov
pusha
shl
mov
xor
xor
pop
pop
mov
sbb
dec
dec
test
nop
xchg
ret
call
sbb
jl
das
ins
stos
pusha
sar
shr
jb
xchg
xor
mov
pop
mov
test
mov
aas
sub
xchg
inc
sub
lods
add
shl
aas
retf
sbb
inc
je
jmp
jbe
jae
stos
and
jne
xchg
(bad)
mov
mov
xor
adc
or
mov
inc
imul
(bad)
lds
inc
ins
inc
fidivr
lea
addr16
sbb
sbb
sub
jb
js
mov
imul
or
cs
xlat
and
xchg
bound
imul
or
fild
sub
jne
mov
inc
cmc
(bad)
and
mov
mov
pop
inc
or
pop
loope
sbb
cmp
add
push
ret
lea
cmps
pop
fild
dec
dec
inc
cmp
(bad)
pop
mov
inc
lods
das
sub
sub
sbb
sub
cmp
sbb
cmp
add
ret
or
and
movs
sub
popa
das
out
xchg
cmp
jecxz
cmp
jne
daa
sub
push
xor
sbb
push
mov
xor
push
lds
cmp
test
ds
loopne
push
pop
inc
pop
fmul
and
mov
xor
rcl
xchg
push
add
rcl
call
pop
and
jge
or
adc
or
sbb
inc
xchg
mov
clc
dec
mov
pop
div
mov
dec
mov
cmp
mov
outs
xlat
sbb
mov
bound
or
lods
xchg
inc
and
rcr
inc
pop
mov
push
sub
push
mov
jo
ror
ffreep
mov
mov
add
mov
adc
pop
sbb
sub
push
pop
inc
mov
sbb
jne
call
mov
sub
js
or
adc
test
(bad)
aad
sub
add
sub
inc
jae
adc
out
popa
das
sbb
mov
mov
mov
sub
pop
sub
xor
or
mov
or
sbb
sbb
cmp
(bad)
xchg
adc
mov
adc
dec
fimul
push
mov
cmp
cmp
(bad)
enter
push
mov
xchg
out
dec
dec
out
sbb
sbb
adc
mov
and
fwait
push
xor
fimul
inc
adc
sbb
daa
loopne
xchg
movs
arpl
pusha
sub
(bad)
imul
and
fbld
cmc
bound
cmp
sub
sub
mov
daa
push
pop
imul
sub
add
inc
jns
aad
nop
leave
dec
mov
pop
inc
xchg
(bad)
mov
out
iret
sub
inc
ret
div
mov
push
nop
xchg
ins
and
test
xchg
popa
dec
addr16
out
sub
add
enter
adc
lahf
pop
daa
cmps
ins
mov
cmp
imul
or
imul
and
add
mov
mov
cdq
sub
push
popa
add
add
push
and
bound
sti
or
and
cmp
mov
mov
outs
push
sbb
push
out
mov
or
pushf
sbb
(bad)
xor
or
xlat
lods
or
pop
pop
xchg
sub
sub
pop
push
loope
nop
dec
cmp
cmp
sbb
xor
add
inc
nop
sbb
sbb
jge
xor
dec
scas
rol
mov
test
fild
cwde
adc
outs
inc
retf
xchg
fst
test
jmp
fdivr
mov
mov
ins
dec
inc
or
mov
push
xor
mov
push
dec
popa
inc
xlat
xor
inc
push
das
and
inc
mov
xor
and
add
push
inc
cmp
call
push
add
jg
inc
cmp
ja
push
push
mov
pop
jae
ds
pop
push
call
mov
mov
xor
jmp
cdq
pop
sub
dec
dec
dec
inc
push
pop
push
jbe
scas
jl
push
fdivr
sub
int
mov
jl
fs
outs
sub
cmp
mov
mov
jno
addr16
sbb
sub
aas
jnp
push
pop
sbb
sub
dec
xchg
add
in
iret
es
add
pop
sbb
push
lea
adc
add
(bad)
icebp
adc
je
mov
test
pop
enter
xor
and
mov
jbe
sbb
arpl
mov
sahf
mov
mov
sbb
jmp
and
inc
sub
add
push
mov
shr
mov
fcom
scas
push
xor
sub
(bad)
or
fs
dec
and
or
(bad)
dec
add
jmp
popa
in
popa
leave
ins
push
inc
cs
imul
nop
gs
inc
push
adc
mov
rdpmc
int3
inc
xchg
mov
pop
cmp
sub
fisub
cmp
push
rcr
pop
adc
add
dec
movs
outs
add
sub
sbb
adc
jmp
mov
gs
sbb
call
or
pop
aas
aad
xchg
mov
lea
sub
jne
xor
sbb
das
std
push
lahf
push
sub
adc
movs
mov
add
ret
mov
lds
sub
shr
sub
adc
cmp
cdq
scas
in
and
dec
outs
xchg
sub
ret
xchg
sub
and
nop
mov
std
cmp
adc
jo
push
ret
inc
movs
popa
popa
daa
sahf
jp
sbb
lods
dec
lods
ja
ja
stos
aam
sbb
ret
ret
sub
pop
sub
or
xlat
ins
add
in
sbb
mov
adc
daa
(bad)
jnp
rol
stos
mov
jae
ror
inc
pop
(bad)
(bad)
sub
lods
pusha
test
add
sbb
cs
pushf
xchg
loopne
sbb
movs
pop
mov
and
imul
arpl
push
imul
cmps
(bad)
or
daa
jbe
mov
aad
test
pop
or
mov
mov
cmp
dec
inc
stos
out
lahf
xchg
pop
push
loop
test
adc
push
js
mov
push
and
jno
imul
das
js
pop
outs
pop
mov
cmp
sub
movs
add
popa
adc
pop
mov
push
or
or
sub
jo
or
mov
mov
push
sub
cdq
xor
adc
in
les
cmp
dec
pop
(bad)
xchg
jno
popa
mov
call
push
imul
xor
outs
sub
mov
cmps
jnp
outs
sub
daa
pop
mov
icebp
sub
or
sub
rcl
mov
xor
in
and
xor
rcl
cmp
adc
sub
aas
xchg
fnstsw
or
push
xor
sub
stc
arpl
pop
sub
pop
cmp
jp
rol
push
xchg
mov
sbb
outs
dec
and
jo
outs
push
mov
aad
and
stos
sub
or
inc
adc
xchg
cmps
xchg
les
dec
lock
mov
adc
fnsave
cmp
push
loope
inc
movs
arpl
sub
or
xchg
test
cmp
dec
sbb
jns
and
push
adc
jo
pop
pop
pop
xor
pop
xor
xor
lods
adc
cmps
mov
pop
les
fld
xchg
pushf
(bad)
xlat
outs
je
rcl
mov
xchg
sbb
imul
jno
test
sbb
sub
add
je
jne
dec
inc
push
lods
adc
lods
inc
sbb
dec
mov
nop
add
and
dec
xchg
call
lods
pop
popa
inc
cmp
movs
nop
iret
dec
sub
sub
push
xor
and
adc
push
pop
cmp
mov
inc
mov
add
pop
mov
dec
js
imul
fucomi
(bad)
cmp
test
sub
and
add
mov
or
and
icebp
lods
bound
aad
cmp
mov
or
dec
imul
cmps
nop
xor
dec
ins
stos
push
in
xor
dec
stos
shl
add
jg
push
inc
bound
add
test
rcl
and
arpl
rcr
cmps
adc
in
sub
popa
or
repz
jb
fisubr
imul
imul
push
pusha
mov
das
push
mov
pushf
add
in
repnz
imul
sbb
stc
jnp
jge
fld
movs
adc
mov
dec
mov
or
jns
mov
add
or
ins
or
sbb
jg
in
mov
or
dec
and
push
inc
jge
fldenv
adc
jae
sbb
fcomp
mov
mov
inc
xchg
pop
jl
fwait
in
add
int3
inc
and
and
ins
jecxz
xchg
inc
inc
mov
xor
add
adc
inc
or
rcr
lahf
sahf
add
and
imul
adc
ins
jne
inc
jbe
ja
sub
sbb
sub
adc
scas
cmp
mov
inc
lods
or
and
js
popf
test
scas
stos
mov
inc
sub
sub
ins
mov
test
sub
loopne
push
sbb
retf
xchg
dec
aam
or
jg
movs
sub
push
int
icebp
sbb
mov
test
(bad)
mov
xchg
or
lds
adc
loop
dec
(bad)
and
sub
pushw
lods
dec
or
idiv
ret
stos
mov
aad
cmp
lds
dec
je
jo
dec
les
movs
dec
leave
add
xchg
add
enter
in
daa
cmp
and
ja
or
ja
or
mov
stos
mov
xchg
inc
aam
sub
or
push
lods
mov
and
scas
enter
adc
outs
push
sub
sbb
mov
shl
xor
test
push
lods
stc
pop
neg
mov
out
add
int3
ins
je
out
xor
inc
mov
and
mov
or
jb
ret
adc
mov
xchg
xchg
push
xor
arpl
out
mov
xor
push
mov
mov
enter
pop
add
inc
sub
mov
mov
leave
sbb
or
fcmovnu
ss
popa
mov
mov
aad
jnp
mov
popf
mov
or
mov
ins
and
scas
xor
std
push
xor
mov
add
lock
imul
int
dec
imul
scas
out
icebp
sub
sub
mov
fwait
call
add
mov
outs
(bad)
js
add
xor
mov
mov
add
push
sub
xor
jmp
(bad)
lods
jge
pusha
cmp
or
mov
cmp
xchg
sbb
test
mov
mov
pop
xor
xchg
add
fwait
add
cmps
cmp
or
movs
aad
bound
ins
lea
and
daa
neg
or
and
or
mov
mov
push
pop
pop
inc
mov
pop
addr16
push
mov
sub
pop
push
imul
pop
rcl
and
sbb
adc
mov
fldcw
sbb
loope
sub
jl
xor
push
push
imul
mov
mov
adc
jb
xor
xor
mov
les
push
or
add
pop
and
fdivr
inc
xor
sbb
dec
cdq
sub
test
mov
addr16
push
and
sub
sub
inc
gs
int
pop
adc
fnstsw
test
add
imul
xor
popa
out
push
mov
sub
push
push
xchg
xor
imul
jecxz
ror
and
lods
div
jae
imul
xor
dec
je
sub
stos
jmp
inc
add
add
dec
inc
fnop
shr
or
jecxz
push
dec
sub
adc
sahf
movs
add
in
adc
lea
lock
xchg
pop
fcmovu
repz
div
pop
test
add
les
jae
cmp
jno
jg
mov
or
inc
jmp
aas
das
mov
out
sbb
imul
ins
sub
adc
enter
xchg
adc
sbb
jecxz
aas
inc
adc
or
add
int
lahf
and
adc
arpl
and
cmps
aas
inc
xor
push
test
cmp
xchg
test
mov
jnp
movs
adc
mov
pop
or
push
push
push
lea
gs
mov
mov
xor
movs
push
out
jo
cli
mov
aad
push
lds
lea
adc
mov
add
imul
inc
cmp
nop
(bad)
mov
test
jge
pusha
mov
mov
sti
or
pop
push
clc
mov
bound
movs
ret
loopne
pop
and
xchg
xor
rcl
push
dec
lods
mov
jge
jg
sbb
mov
inc
adc
sbb
mov
imul
stos
xchg
cdq
retf
inc
test
adc
or
push
(bad)
inc
ins
fwait
push
je
pop
mov
ins
(bad)
xor
bound
xchg
inc
popf
jns
or
popa
jne
pop
mov
popa
(bad)
push
mov
lods
int3
add
and
hlt
xor
inc
aam
ss
es
gs
dec
mov
gs
aaa
mov
daa
xchg
pop
jae
aaa
dec
sbb
xchg
inc
dec
inc
mov
sbb
pop
xor
retf
jns
sbb
mov
imul
adc
aad
jg
lods
adc
ror
push
das
jecxz
lea
sub
sub
arpl
xchg
xor
push
xor
dec
and
xor
cmc
xor
cdq
inc
inc
movs
stc
and
mov
test
test
or
and
sub
cmp
inc
stos
mov
shr
lods
lods
inc
push
xlat
mov
pop
jae
mov
adc
sbb
push
jmp
xchg
mov
dec
jo
xor
inc
adc
ret
push
inc
sub
arpl
mov
xchg
xchg
sbb
xor
mov
jo
dec
or
or
jecxz
and
push
jno
push
or
lods
jmp
imul
popa
push
dec
retf
out
addr16
aaa
movs
pop
lods
and
xor
jae
mov
mov
jmp
mov
push
adc
adc
mov
dec
scas
add
pop
and
stos
xor
dec
add
sbb
mov
push
aad
push
(bad)
(bad)
into
shl
inc
and
ins
pop
not
dec
xchg
test
add
mov
adc
and
pop
mov
dec
and
(bad)
pusha
movs
inc
and
mov
push
shl
fld
xchg
and
adc
dec
xchg
pop
mov
or
test
mov
push
or
mov
scas
aam
rcl
xchg
cs
jnp
or
psubusw
(bad)
ss
ins
or
aaa
icebp
pop
fwait
jo
imul
or
and
imul
mov
(bad)
add
xchg
mov
ror
sti
pop
mov
outs
ins
pop
sbb
add
jmp
daa
rcl
pop
cmp
sbb
push
mov
add
xor
xchg
mov
adc
xchg
in
or
or
or
adc
in
bound
je
aaa
(bad)
gs
inc
add
ret
arpl
popf
dec
loop
adc
mov
cmp
sub
comiss
sub
call
movs
aad
test
adc
shl
or
and
fistp
adc
movs
arpl
jae
pop
lahf
xor
pop
xor
sbb
cmp
sub
jne
popf
jmp
add
imul
mov
movs
sub
lds
mov
mov
pop
push
push
mov
lea
aad
or
adc
test
in
mov
adc
pusha
inc
mov
or
mov
loopne
ins
fisubr
jmp
pusha
mov
imul
shl
push
mov
aaa
test
jo
int
xchg
cwde
dec
adc
sahf
xchg
xchg
test
inc
xor
lods
add
pop
sbb
adc
sub
(bad)
mov
push
push
mov
add
imul
add
jno
or
cmp
pop
enter
clc
inc
ret
xchg
popf
(bad)
and
xor
push
sbb
xor
add
(bad)
inc
outs
cmp
imul
or
lds
or
add
test
pop
stc
sbb
iret
popa
sub
xor
ins
jp
mov
inc
xchg
jbe
push
mov
sub
cs
adc
sub
imul
mov
sbb
push
dec
add
imul
cmp
addr16
adc
(bad)
dec
sbb
xchg
ret
pop
int3
or
xor
mov
inc
or
ror
add
push
pusha
lea
and
add
shl
and
pusha
loope
aad
daa
inc
repnz
aaa
or
jnp
mov
sbb
mov
and
sbb
push
cmp
sbb
xor
sub
outs
jae
rol
cmp
add
push
cmc
push
inc
dec
pop
or
or
dec
push
push
xor
adc
aad
pop
jae
sub
dec
mov
js
pop
frstor
dec
shr
retf
or
or
jbe
or
jns
or
pop
aaa
inc
sbb
test
loop
jg
les
mov
test
stos
retf
addr16
inc
adc
dec
aaa
mov
fnstsw
push
or
sar
fwait
imul
in
clc
pop
push
retf
bound
xchg
inc
test
push
mov
fld
push
and
imul
sub
xor
inc
int3
test
es
cmp
pop
xchg
lea
xchg
inc
cs
sub
(bad)
aam
jnp
xor
adc
dec
jg
inc
ret
test
mov
fwait
arpl
jns
loope
ret
mov
sub
mov
rol
or
dec
and
xor
xor
(bad)
adc
shl
cmp
test
add
cmp
ret
xor
adc
rol
add
rcl
add
lahf
push
and
cmps
int3
(bad)
das
pop
lea
xor
push
arpl
daa
jb
cmp
adc
cmp
inc
mov
lahf
enter
fbld
call
fiadd
adc
dec
movhps
inc
dec
jecxz
adc
jae
sub
inc
jmp
xor
lea
inc
mov
ins
pusha
xor
mov
loope
jne
inc
inc
mov
push
imul
pop
inc
outs
test
mov
inc
add
fwait
jge
or
lds
dec
vmaxsd
loopne
out
retf
mov
arpl
push
inc
adc
adc
xor
or
das
push
loopne
rcr
aas
sbb
(bad)
add
(bad)
mov
rcr
lahf
pop
mov
mov
sub
mov
add
arpl
scas
test
pop
loop
dec
test
xor
dec
movs
add
jne
hlt
ja
push
adc
fwait
call
jae
inc
mov
and
jl
push
adc
pop
or
idiv
add
imul
sbb
push
(bad)
nop
push
jb
pop
add
sbb
ret
xchg
ret
xchg
adc
sub
or
push
xchg
out
outs
jecxz
push
fadd
sub
pop
dec
adc
popa
cmps
cmp
adc
jmp
test
pop
dec
ss
add
stos
add
shr
mov
add
and
stos
ret
or
dec
jnp
ins
add
add
mov
xor
fisubr
sbb
pop
add
dec
add
dec
aaa
test
push
stos
xor
sbb
push
or
pop
xor
jne
and
adc
aad
push
popa
mov
mov
mov
sub
push
lods
sub
mov
push
test
shl
loope
rcl
adc
dec
dec
adc
sti
sahf
mov
add
and
pop
imul
bound
(bad)
push
icebp
test
pop
add
shr
sub
movs
aad
xor
push
mov
sub
adc
ins
(bad)
cld
push
or
les
ins
add
addr16
scas
mov
jb
sub
xchg
jb
add
and
nop
pop
jb
adc
dec
std
dec
mov
(bad)
jb
mov
bound
dec
test
pop
push
mov
inc
aad
cmp
and
fldcw
mov
(bad)
sbb
ffree
or
and
adc
in
mov
add
or
add
inc
setns
test
inc
shl
xlat
and
add
or
jbe
pop
and
frstor
and
mov
and
xor
shl
test
add
jae
call
test
add
aas
aaa
mov
inc
fs
(bad)
outs
push
sub
jge
mov
cwde
or
ins
inc
mov
pop
mov
xor
pop
gs
jmp
test
or
jns
mov
dec
movs
pop
aad
call
jae
add
mov
repz
dec
pop
shl
neg
xchg
pop
mov
or
jmp
fst
or
xchg
push
cmp
leave
adc
xor
std
jae
aaa
add
mov
cld
loope
sub
not
(bad)
shr
sbb
nop
adc
out
adc
push
icebp
jl
lea
shr
dec
inc
xor
(bad)
and
add
dec
movs
in
retf
daa
sub
adc
in
xor
push
out
xor
jo
test
cmps
push
sub
mov
aas
or
and
pop
xchg
(bad)
jo
addr16
mov
pop
lea
add
add
shl
adc
add
cwde
or
or
xor
icebp
jg
shr
sbb
mov
pusha
(bad)
not
mov
and
mov
aad
outs
push
js
xor
pop
push
jno
adc
adc
mov
xor
aas
jnp
ret
inc
or
sub
int3
push
push
push
adc
add
pop
fnsave
xor
cs
mov
jae
or
jbe
and
mov
or
std
push
cmp
loopne
outs
sbb
cmp
inc
and
add
mov
aas
or
inc
dec
push
xor
sbb
or
fs
mov
pop
jge
inc
daa
aad
mov
mov
ins
aaa
fdiv
aas
cmc
test
dec
inc
inc
sub
xchg
sub
and
inc
add
lahf
cdq
pop
imul
sub
cmps
xchg
push
mov
add
xchg
fs
cmp
in
jecxz
jmp
outs
loope
cmp
popa
sub
or
vmread
push
and
imul
cmc
xor
lods
add
push
mov
cmp
test
out
and
aad
ffree
lahf
cmc
jae
aas
ret
adc
dec
les
test
out
adc
sub
dec
fcmovnb
sub
outs
nop
movd
movs
fisub
imul
bound
imul
not
cmp
cmp
push
aaa
icebp
sub
jns
add
test
fistp
ins
mov
inc
lods
arpl
movs
mov
popf
fwait
shl
fimul
mov
leave
popa
mov
fsub
mov
mov
mov
lods
int
(bad)
and
dec
lea
inc
pop
outs
sti
mov
push
inc
sub
and
xor
mov
scas
or
nop
ds
pop
xor
int
dec
or
pop
push
xchg
add
ins
cdq
and
adc
cmp
inc
mov
cwde
adc
fs
fld
adc
mov
lock
push
stos
add
xlat
pop
fild
add
sub
inc
or
push
and
enter
adc
inc
cmp
jns
add
xchg
ja
nop
rcr
lds
icebp
and
adc
sub
test
ss
scas
js
xlat
movs
scas
(bad)
loope
shr
sbb
or
test
add
ins
les
cs
pusha
mov
dec
pop
mov
(bad)
call
sbb
std
jae
inc
outs
fst
lods
add
jbe
popa
xor
inc
inc
and
fs
lahf
mov
push
add
cdq
or
mov
xchg
sub
sbb
mov
sub
push
lahf
adc
pop
mov
les
outs
add
push
push
mov
cs
inc
lods
cmp
jae
and
mov
sub
pop
mov
inc
sbb
js
pusha
xchg
cmp
inc
cdq
xchg
sub
sbb
lds
retf
js
and
cmp
add
pusha
cmp
xchg
lods
and
cmc
push
add
cmps
(bad)
das
sub
and
dec
jmp
fdiv
imul
adc
jl
inc
pop
rcl
jl
out
mov
fnstcw
jne
jg
sahf
adc
push
jl
and
pop
ja
push
or
sub
cmps
mov
xor
jbe
pusha
add
cmp
push
and
xchg
xor
adc
call
cmp
sub
in
push
daa
pop
das
and
lock
pusha
xor
sub
test
add
call
inc
push
lahf
daa
loopne
push
pop
inc
inc
jge
ror
pop
leave
xchg
and
in
add
add
pop
les
sahf
mov
mul
cmp
ret
adc
jle
das
inc
sbb
push
sub
dec
mov
imul
mov
pop
cmp
ins
pop
dec
jb
xor
mov
dec
mov
mov
or
ins
adc
pusha
mov
and
inc
ret
xchg
add
mov
mov
mov
inc
ja
or
inc
mov
jmp
ss
lahf
inc
and
call
stc
mov
outs
outs
je
mov
xchg
sbb
fdiv
adc
fisub
lods
push
sti
retf
ds
jecxz
and
lds
icebp
dec
sub
fild
fldcw
(bad)
jns
xor
(bad)
pop
clc
add
(bad)
fstp
push
jge
add
jo
adc
test
sub
(bad)
xchg
pop
and
fsubrp
mov
inc
sbb
pop
dec
ins
mov
adc
enter
shl
pop
lods
rol
adc
xor
inc
adc
pop
lods
pop
or
adc
and
adc
mov
mov
in
shr
lahf
add
dec
mov
inc
dec
add
in
add
cmp
adc
lock
sub
sub
jns
adc
addr16
movs
movs
ins
mov
xor
add
test
push
xchg
mov
push
jno
mov
pop
ins
or
adc
add
sub
push
fwait
popa
add
push
mov
jne
push
jmp
jmp
xchg
ins
push
push
sahf
sbb
sbb
mov
sub
das
sub
adc
and
or
fidivr
outs
je
(bad)
ror
push
lds
jne
mov
push
shl
aam
(bad)
lahf
movs
sub
push
and
add
js
std
xor
jne
daa
xchg
sub
sub
sbb
imul
xor
xor
lods
add
jge
ffree
xchg
or
ins
icebp
lods
mov
emms
inc
inc
add
mov
or
add
adc
lock
ret
add
push
push
sub
mov
ror
and
loope
sbb
xor
test
xchg
and
mov
inc
sbb
mov
data16
popa
and
sub
gs
shl
sbb
fld
push
fcomp
pop
inc
add
popa
and
pusha
xlat
xchg
movs
adc
push
mov
(bad)
or
test
jmp
add
adc
lahf
mov
cmc
(bad)
or
outs
out
xchg
add
outs
(bad)
iret
ins
int3
ret
cdq
xchg
sub
es
mov
xchg
xor
inc
add
adc
push
daa
mov
jmp
cmps
xlat
and
popa
aad
inc
push
xor
les
adc
pop
and
fldcw
stos
jnp
xor
stos
lea
xchg
out
or
push
lahf
and
test
pop
add
(bad)
mov
stos
and
xor
push
or
nop
inc
movs
mov
push
jmp
(bad)
test
mov
sar
cmc
sbb
rcr
(bad)
rep
jo
mov
imul
mov
call
push
pop
ins
sbb
add
inc
mov
retf
gs
add
fstp
jae
or
xchg
scas
lea
ja
shl
ins
add
mov
or
add
pop
mov
ja
xor
imul
adc
cld
add
xor
jae
ins
inc
test
push
inc
fistp
ins
add
add
mov
arpl
add
imul
pop
test
sbb
(bad)
jnp
jmp
or
imul
fisttp
outs
xor
or
aas
sub
pop
add
cmp
mov
(bad)
popa
cmp
adc
mov
test
push
loopne
xor
ret
inc
mov
push
iret
push
jno
dec
jae
push
push
cmp
popa
dec
inc
add
(bad)
cmp
pop
sub
pop
xor
and
jnp
iret
das
cmp
dec
js
ds
jae
das
sub
bound
and
and
daa
sub
cmp
sbb
xchg
jno
bound
aad
loopne
jno
inc
scas
rcl
push
mov
bound
dec
jno
mov
and
sbb
mov
push
add
push
or
mov
test
push
and
sti
push
daa
cmp
nop
pop
pop
jno
sub
xchg
mov
je
pop
je
ror
or
mov
daa
sub
lods
add
or
adc
sub
out
popa
mov
or
int3
lods
and
pop
sub
push
push
fwait
pop
fld
mov
jns
jb
or
loope
adc
fisttp
inc
adc
int
push
mov
fistp
pop
adc
gs
mov
mov
sti
test
jo
nop
xchg
xchg
adc
inc
add
and
push
add
sub
in
pushf
dec
ror
xor
add
inc
(bad)
xchg
mov
ror
sub
pusha
sbb
push
sbb
(bad)
ss
xchg
sti
or
xlat
or
add
test
pop
and
mov
or
daa
sub
push
in
fld
arpl
inc
xor
or
fidiv
push
xchg
push
imul
xor
popa
test
inc
adc
push
mov
repz
ror
sub
xor
jne
mov
sbb
or
mov
mov
cmc
jnp
mov
rcl
pop
and
push
aaa
mov
ja
rcr
pop
add
outs
rcr
mov
movs
sbb
sbb
xor
mov
sbb
loopne
call
xor
ss
mov
push
inc
retf
xor
add
sub
test
dec
xchg
mov
sub
mov
xchg
pop
cmp
mov
jbe
or
arpl
add
test
inc
push
and
xchg
dec
pop
shr
movs
and
mov
mov
sub
pop
and
jno
dec
sbb
shr
mov
stos
popa
and
push
fstp
call
mov
lods
mov
leave
aad
pushaw
ja
retf
sbb
adc
imul
fcom
out
shl
xor
jecxz
sti
xor
imul
cdq
and
cmp
cs
int
loope
and
in
or
aad
jmp
fcom
test
jmp
xchg
pop
ror
jmp
loopne
outs
and
xchg
push
add
rcr
mov
mov
mov
xor
inc
test
neg
es
adc
xchg
adc
loopne
cmp
xor
sbb
xor
test
xor
add
or
sub
leave
mov
inc
pop
sub
arpl
sbb
add
push
inc
sub
inc
call
mov
sbb
inc
cmp
and
es
fadd
(bad)
push
in
lahf
retf
xchg
add
xor
mov
jnp
mov
sub
inc
xor
and
cmp
sbb
jno
and
push
mov
mov
adc
adc
inc
sub
mov
stos
cmps
cdq
test
push
push
js
inc
sub
or
rcl
jmp
imul
sar
xchg
mov
mov
dec
xor
add
xchg
ss
popf
jb
jmp
mov
sub
pop
mov
loop
dec
jne
cmp
and
in
out
inc
fdiv
mov
int
imul
in
xchg
adc
adc
mov
mov
dec
fadd
inc
mov
xor
dec
inc
sub
inc
inc
sbb
inc
sti
cwde
outs
add
sbb
nop
mov
add
test
mov
adc
pop
pop
inc
add
mov
jp
fnstenv
inc
jno
cmp
sub
jns
les
xchg
adc
ds
mov
jmp
lods
mov
cld
addr16
add
pop
fadd
fmul
das
mov
pushf
aaa
xor
pushf
fdivr
cmp
ins
cmp
xor
push
popa
js
(bad)
ins
jno
stos
and
adc
out
and
rcr
mov
jo
retf
fldenv
enter
mov
lea
gs
pop
push
fs
lods
or
pop
pop
dec
cmp
arpl
pop
jnp
sub
cmp
mov
mul
or
mov
dec
ret
xor
or
or
sub
jbe
lods
adc
cmp
push
sti
push
mov
out
sub
push
in
and
adc
sti
imul
pop
sub
adc
mov
sub
imul
adc
xchg
mov
(bad)
sar
jecxz
push
or
sbb
call
sbb
out
push
mov
test
add
add
(bad)
sub
add
xor
imul
or
pop
and
pop
xor
and
xlat
jno
adc
aas
jno
mov
pop
rcr
and
jbe
push
and
push
aaa
add
mov
sub
jns
push
fwait
data16
sub
mov
pop
mov
xor
stos
xchg
mov
(bad)
shl
rol
sbb
push
jmp
stos
sbb
pusha
jo
sbb
and
scas
lea
dec
stc
push
add
add
pop
daa
push
adc
or
shl
fwait
sar
call
cdq
inc
mov
sbb
fsubr
inc
xchg
xchg
mov
imul
stc
popf
push
mov
sub
xor
add
adc
xor
push
fldenv
sbb
imul
pop
or
pop
imul
pop
and
mov
test
fs
adc
dec
fst
outs
test
inc
xlat
cmp
add
pusha
sbb
call
popf
rol
std
inc
add
xchg
popa
and
mov
inc
fist
pop
sbb
test
sub
xchg
(bad)
jecxz
sbb
fsubr
pusha
dec
and
mov
or
addr16
mov
or
cs
iret
xor
or
addr16
cmp
test
adc
and
(bad)
aaa
add
jno
daa
or
push
dec
pop
and
out
add
js
sub
add
cs
dec
ret
ret
inc
cmps
popa
sub
ja
mov
inc
sub
sub
sbb
jne
fistp
loope
jo
mov
inc
and
xor
imul
ins
cdq
sahf
ror
sub
sbb
push
pop
xor
pop
call
lea
pop
std
fstp
inc
adc
fadd
and
out
push
adc
xor
push
cmp
inc
mov
pop
inc
mov
push
and
adc
sbb
jne
outs
bound
addr16
call
push
push
ins
dec
push
imul
ins
or
ins
or
stos
aaa
imul
pop
and
lods
dec
add
std
mov
adc
(bad)
adc
cmp
or
cmp
addr16
loope
jmp
mov
and
xor
mov
pop
add
mov
aaa
and
daa
dec
mov
add
in
adc
lods
push
mov
mov
shr
dec
or
cmp
sub
das
pop
stos
movs
mov
sbb
shl
(bad)
(bad)
and
(bad)
ins
mov
sbb
(bad)
call
ins
inc
sbb
sub
in
data16
imul
mov
mov
push
mov
adc
rcr
dec
cdq
mov
(bad)
retf
sub
xchg
add
xchg
test
(bad)
push
add
inc
icebp
ror
pop
inc
scas
cmp
call
mov
sbb
push
mov
xchg
mov
jns
inc
lods
xchg
dec
das
adc
xor
push
cmc
inc
test
lea
icebp
add
sub
pop
push
lahf
mov
mov
movs
sub
pop
rol
adc
inc
cmp
icebp
cs
push
test
jae
add
nop
fidivr
rcr
add
jp
aas
jge
jbe
push
mov
pushf
push
ja
jl
jmp
jp
outs
ins
dec
lds
push
cmp
int3
jnp
test
je
pop
inc
pop
jbe
(bad)
adc
test
popf
or
mov
movs
sub
pop
popa
sub
sub
xor
das
or
sub
in
xchg
lods
add
bswap
out
cmp
imul
aaa
out
sbb
test
push
sub
xlat
xchg
imul
cmps
cmp
sub
cmp
xchg
and
mov
mov
imul
pop
push
dec
cmp
cli
inc
sar
jge
sub
pop
push
arpl
(bad)
inc
add
cmp
cmp
cmps
into
mov
push
fbld
lods
lods
dec
inc
(bad)
jae
fisubr
out
das
mov
push
add
jns
push
adc
fadd
cmp
and
nop
inc
or
or
ins
retf
adc
jmp
enter
or
daa
add
fdivr
add
imul
shl
and
inc
push
add
pop
mov
test
push
das
jno
xor
vmovntps
jo
fsub
add
fwait
test
cmc
adc
fisubr
and
mov
je
xor
adc
retf
push
or
jno
xor
cmp
pop
xchg
fst
pop
daa
jae
pop
add
(bad)
jae
cmp
adc
loope
pop
sbb
jo
xchg
push
xor
retf
inc
ins
or
or
or
lock
jge
ror
pop
cmp
mov
das
push
add
dec
or
ret
add
sub
popa
es
xchg
inc
add
xchg
and
mov
adc
hlt
mov
sub
xchg
sub
pop
test
iret
inc
xchg
push
pop
jecxz
xor
mov
lea
xor
out
in
fnstenv
and
mov
sub
(bad)
pusha
in
mov
pop
bound
sbb
add
js
and
(bad)
push
or
xor
aad
inc
xchg
sub
cmp
dec
sub
pop
and
ds
outs
mov
rcr
test
add
loope
fwait
pusha
inc
stos
mov
in
inc
xchg
(bad)
out
or
push
push
test
mov
stos
or
cwde
rcr
dec
pop
or
cmps
rcl
sub
mov
lods
ret
ja
rol
adc
mov
loopne
sbb
imul
fdivr
xor
or
jecxz
test
movs
jne
adc
jl
mov
jnp
loopne
rol
and
jae
adc
shr
sub
add
sbb
imul
push
sahf
sbb
cdq
ret
aad
dec
mov
lds
nop
pusha
xchg
lahf
rcl
sbb
rcr
pop
xchg
ins
ret
adc
(bad)
cmps
mov
and
(bad)
or
sub
retf
fwait
mov
dec
lods
add
xchg
popa
pop
mov
jo
test
dec
cs
mov
add
(bad)
jnp
stos
ins
inc
sub
fmul
das
and
test
and
cmp
mov
inc
or
jae
mov
sub
cmps
sub
js
pop
cdq
ror
inc
aas
xchg
loope
cmps
ins
int3
les
inc
out
jo
or
nop
stos
or
xor
es
outs
movs
sub
jmp
outs
push
dec
pop
inc
dec
fistp
shr
or
mov
or
fild
inc
aas
ds
xor
inc
or
mov
pusha
mov
stc
mov
stc
xor
ja
rcl
shl
(bad)
cmp
inc
nop
sub
or
sti
pop
and
dec
jno
xchg
pusha
cmps
test
rol
in
call
jmp
mov
sub
test
retf
arpl
dec
sub
sub
or
push
mov
add
pusha
mov
aaa
movs
jo
mov
shr
rol
pop
push
test
push
dec
jecxz
js
movs
movs
inc
pop
stos
dec
rcl
xor
mov
adc
aad
fisttp
pop
pop
fadd
lods
shl
push
pop
cmp
int
xor
lods
and
popa
push
sbb
test
mov
mov
and
cmp
jae
add
and
int
xor
cs
ja
mov
xor
cmp
dec
lods
adc
imul
fld
addr16
cs
ins
sub
imul
and
aam
inc
mov
dec
jecxz
fs
fwait
sub
xchg
shl
movs
pop
dec
pop
out
push
pop
sub
lods
add
mov
or
stos
sub
inc
inc
cmp
push
mov
ins
daa
loope
mov
sub
sub
aaa
jne
sti
movs
inc
push
ret
or
or
mov
adc
imul
aaa
mov
stos
and
fld
push
or
pop
push
shl
add
fs
xchg
pop
add
add
dec
and
sub
mov
test
test
pop
xor
and
js
adc
popa
xchg
ja
jo
add
das
je
sub
add
shr
mov
add
xor
inc
inc
bound
xor
push
lds
sbb
imul
sub
xchg
adc
fisttp
mov
sub
sti
fwait
inc
popa
adc
jmp
mov
or
jns
or
and
fld
lds
cmp
(bad)
dec
lods
(bad)
cmp
push
scas
cmp
add
nop
(bad)
test
les
pop
cld
push
fbstp
leave
pop
jno
and
and
int
jg
arpl
pop
sbb
add
or
pop
nop
sbb
dec
or
or
jnp
bound
cmp
scas
and
add
imul
iret
ror
shl
sbb
dec
jae
pop
das
pop
or
shl
aas
test
or
and
or
jmp
adc
jl
or
outs
test
ins
jl
setl
ins
outs
fiadd
jl
jl
xor
jl
cwde
mov
mov
ret
sbb
test
int
pop
aas
sub
add
jb
jmp
fist
jl
sub
sub
push
xor
ja
cmp
loopne
sbb
fiadd
adc
aas
and
jmp
add
xor
inc
and
and
imul
hlt
cmp
jo
mov
dec
adc
xor
inc
sub
xchg
(bad)
add
add
jne
pop
pop
loope
les
jbe
popf
xor
sbb
imul
inc
mov
inc
inc
and
cmc
push
add
jmp
cmp
fldenv
sbb
pop
mov
cmps
push
fcomp
sti
push
dec
xchg
ror
push
push
sbb
xchg
rcr
loopne
mov
lahf
and
mov
and
dec
lods
sbb
dec
ret
shr
pop
jnp
xlat
xor
add
jge
or
fisub
mov
jno
jno
dec
aas
cmp
or
or
xor
out
ja
imul
xchg
movs
lods
sub
iret
add
cli
push
cmps
pop
sub
add
or
ja
cs
pusha
bound
mov
jno
jmp
inc
dec
add
popf
test
adc
sub
cmc
mov
aad
pushf
inc
fsub
ins
scas
mov
nop
add
frstor
pop
ret
in
shl
sub
lea
pusha
mov
aad
push
lock
mov
outs
mov
and
jmp
add
ret
pop
mov
xor
fcmovnb
xchg
scas
jmp
inc
test
pop
pop
dec
xor
test
ja
test
mov
jnp
adc
mov
pop
xor
mov
lds
mov
dec
xchg
sub
xor
ds
xchg
add
add
dec
shl
popa
xchg
shr
lea
mov
(bad)
scas
xchg
adc
mov
push
add
outs
cmps
daa
push
jbe
popa
mov
pop
and
pop
cs
enter
jp
ror
lods
sub
fistp
mov
jno
mov
loopne
mov
arpl
ret
scas
(bad)
pop
pop
repz
mov
cmp
jno
xor
add
adc
sub
cmps
je
push
pop
sub
cmp
pop
push
aad
shl
jecxz
(bad)
cwde
pop
adc
xor
cmps
add
(bad)
sbb
add
aas
cmp
sbb
test
mov
pop
sub
pop
outs
sub
outs
or
imul
and
pop
adc
dec
dec
sar
and
js
pop
inc
or
repnz
mov
cmp
pop
mov
std
dec
mov
sbb
cmp
popf
add
aas
xor
cs
sbb
mov
and
shl
jge
push
sub
jge
or
jne
mov
mov
and
add
sbb
push
ror
imul
lods
inc
add
or
sub
scas
outs
mov
jg
inc
mov
fld
xor
jmp
pop
ret
mov
inc
ins
sub
push
dec
mov
add
nop
sti
sub
test
pop
jl
jmp
xchg
pop
dec
mov
add
sub
cmp
add
ret
aaa
mov
and
add
adc
adc
push
sub
lods
sub
aaa
push
loope
scas
sbb
shr
mov
cdq
adc
jmp
xchg
xchg
pop
mov
inc
jb
ins
mov
mov
mov
xor
dec
adc
fsubr
retf
shl
leave
and
inc
inc
lahf
and
and
movs
lds
cmp
add
add
jg
mov
outs
lds
enter
sub
mov
cmp
jno
mov
cmp
and
shl
jecxz
and
inc
sub
or
and
rol
inc
and
loopne
jnp
sbb
and
xchg
les
lods
push
fiadd
and
and
inc
dec
sub
mov
lds
mov
mov
jg
inc
cmp
jno
add
push
xlat
dec
dec
daa
mov
lods
xor
xor
xor
push
mov
dec
aam
mov
rsqrtps
mov
mov
mov
xor
aad
add
scas
sub
mov
dec
iret
mov
jae
lods
push
xchg
inc
popa
adc
mov
push
jne
sub
jns
(bad)
mov
ss
popf
pop
mov
push
adc
mov
mov
arpl
hlt
xor
xor
and
adc
push
or
dec
and
add
add
repz
pop
ins
sub
outs
push
mov
add
and
fild
jae
push
push
push
and
and
adc
mov
mov
push
mov
call
dec
sub
int
xchg
icebp
mov
sbb
in
sub
push
jecxz
push
pop
sub
and
mov
push
fld
sub
mov
and
aam
mov
rol
sub
or
(bad)
mov
ins
test
jne
sub
addr16
cmp
sub
test
pop
retf
cmp
pop
xchg
cmp
pop
imul
sbb
mov
cs
push
or
jno
lea
lods
add
vmovntdq
inc
(bad)
in
sbb
out
dec
in
adc
out
fist
pop
sub
mul
xchg
jno
inc
inc
adc
mov
jecxz
dec
add
fstp
mov
inc
sub
mov
nop
cwde
mov
push
enter
xchg
or
and
sub
and
fld
inc
movs
and
cs
or
loope
pop
mov
adc
xchg
sub
sub
xchg
lea
hlt
adc
mov
inc
add
add
movs
outs
inc
pop
inc
idiv
cmp
ret
xor
and
dec
xchg
retf
movs
add
xchg
cmp
sbb
xchg
sub
add
sub
xchg
fisttp
lock
enter
inc
adc
outs
loopne
js
jnp
or
shr
inc
stc
xchg
push
sub
sbb
sub
sbb
ret
cdq
add
(bad)
or
add
pop
inc
xor
mov
mov
mov
movs
mov
xchg
aad
pop
adc
xlat
push
xor
mov
cmp
and
or
pop
sub
mov
test
aam
ret
adc
ins
pop
mov
push
fsub
addr16
fnstsw
jns
addr16
lods
es
std
xor
loopne
bound
test
sbb
ret
sub
add
cmp
sub
push
das
imul
cmp
xor
popf
shl
dec
pushf
push
and
pop
cmp
jae
xor
cmp
mov
pop
aas
mov
pop
xchg
xor
xor
outs
jmp
sub
mov
(bad)
mov
or
adc
adc
loopne
inc
sub
or
loopne
mov
sar
add
dec
mov
fs
adc
cmps
pop
jbe
add
test
movs
sbb
iret
or
mov
cmp
cmp
push
icebp
not
and
pop
mov
adc
xchg
or
sub
push
arpl
mov
ret
lea
or
lods
inc
dec
sbb
or
add
dec
sbb
push
fnstenv
sbb
fisub
cmp
sbb
xor
pop
and
jo
mov
inc
xor
nop
add
sbb
push
jae
sub
movs
pop
add
movs
xor
aad
mov
rcr
fld
jmp
rol
or
rol
cmps
cmp
pop
and
mov
fnstcw
movs
(bad)
mov
ret
arpl
cmp
adc
jne
sub
push
mov
add
inc
cmp
adc
adc
xor
cmp
inc
pusha
cmp
retf
and
das
std
pop
inc
mov
push
rol
xor
loopne
inc
int
inc
or
jmp
mov
nop
xor
add
xor
ret
sbb
adc
mov
mov
inc
push
and
xor
add
loop
sub
cmp
mov
xor
imul
mov
mov
inc
shr
sti
rol
inc
sti
mov
movs
inc
pop
jne
mov
push
inc
mov
push
push
or
(bad)
movs
and
fld
push
pop
mov
mov
adc
and
adc
js
lahf
jmp
mov
ss
ret
call
loop
pop
xlat
shr
xchg
ror
mov
push
mov
sbb
mov
lods
jo
xor
das
arpl
or
jmp
pop
xor
sub
and
fs
loop
xor
xlat
loop
sbb
sar
pusha
inc
iret
sub
pusha
nop
and
sub
jmp
dec
jne
pop
sar
shl
je
in
rcr
das
(bad)
xor
cmp
inc
fcomp
or
lods
loopne
sub
sub
xor
pop
cmp
test
inc
mov
xchg
sbb
mov
add
mul
ins
dec
fld
mov
push
xchg
adc
movs
push
js
xchg
jae
enter
cli
sub
mov
fbstp
sbb
ds
dec
push
push
daa
inc
add
and
mov
or
push
pop
jo
or
pop
(bad)
dec
xchg
js
mov
lods
cmp
rol
pop
ret
adc
(bad)
sbb
cmp
nop
jo
cmp
rol
in
push
rcr
inc
lds
add
lahf
mov
adc
and
int
sub
jbe
push
scas
mov
(bad)
add
pop
pusha
sub
fiadd
cdq
add
pop
dec
jg
fld
popf
xor
sbb
sbb
push
add
loope
or
sub
fnstcw
scas
or
add
dec
or
cmp
(bad)
jnp
add
movs
outs
or
sbb
push
fmul
movs
out
bound
and
rol
sahf
ja
cmp
mov
pop
dec
and
addr16
pop
ret
or
pushf
add
sub
dec
pop
(bad)
in
xor
cmps
outs
mov
out
scas
or
loopne
sbb
pop
pop
or
ret
jge
adc
int
test
fwait
pop
sbb
or
xchg
xchg
(bad)
mov
ins
rol
dec
mov
pop
xor
(bad)
or
mov
dec
gs
sbb
add
push
leave
push
jno
out
sub
pop
in
fwait
adc
or
adc
inc
ins
add
push
cmc
fld
adc
and
ret
dec
cmp
fild
xor
add
or
icebp
or
inc
mov
cdq
(bad)
push
push
loop
xor
sub
xchg
mov
hlt
out
dec
inc
repz
(bad)
mov
sbb
sub
test
and
and
rcl
dec
sub
jae
rcr
outs
fisttp
or
js
mov
ins
fs
mov
int
jne
and
ret
lods
pop
pop
mov
adc
ret
and
add
arpl
add
cmp
mov
fnstenv
pop
xchg
das
adc
adc
sub
inc
js
aam
xor
mov
jmp
cwde
cmp
or
sbb
aad
jae
jl
mov
adc
pop
pop
or
scas
xchg
push
sbb
xchg
inc
and
xor
imul
loopne
jecxz
cmp
add
lods
ror
aad
inc
mov
cmp
sbb
push
popa
sub
mov
in
pop
inc
outs
push
imul
js
mov
outs
std
mov
das
fadd
retf
add
inc
sbb
lahf
add
cmp
jge
popf
inc
cwde
or
xor
jl
movs
leave
and
mov
adc
inc
xor
mov
loope
mov
(bad)
mov
push
or
frstor
xchg
adc
push
adc
push
dec
fcomp
(bad)
mov
jmp
imul
add
add
mov
cmp
inc
lea
mov
test
psllq
daa
push
inc
xor
inc
lods
or
pop
cmp
adc
push
and
mov
adc
cs
inc
gs
add
and
sub
sbb
inc
inc
sub
mov
add
cmp
push
lods
push
push
sub
add
adc
add
aad
shl
mov
sub
sub
xchg
test
dec
inc
jns
imul
xchg
sbb
inc
xor
es
cmp
out
and
or
and
adc
xor
sbb
push
add
pop
push
popa
and
mov
dec
sub
mov
xor
sbb
add
sub
(bad)
loop
sub
push
adc
mov
jbe
add
xchg
cmc
push
mov
add
push
test
push
pusha
adc
inc
aas
mov
jge
vmovaps
fcomp
pusha
mov
repz
adc
dec
mov
mov
jmp
ror
and
and
ret
in
mov
fldenv
mov
mov
jmp
jmp
loop
sub
movs
sbb
pop
pop
mov
push
cmc
shl
test
call
mov
xor
les
adc
push
stc
arpl
inc
adc
mov
xor
pop
pop
xor
lea
xor
or
js
scas
mov
dec
fs
sub
out
mov
sbb
shl
sub
sub
xor
pop
push
lods
movs
jnp
movs
inc
and
sub
and
add
(bad)
mov
les
or
retf
or
add
arpl
and
cmps
rcl
jg
add
xchg
cmp
or
jnp
dec
and
fcom
push
test
or
sub
lods
mov
pop
inc
leave
cmp
mov
rol
fwait
mov
cs
stc
push
popa
inc
enter
stos
mov
sahf
sub
cmp
ja
dec
jne
adc
(bad)
ficom
cs
cs
mov
les
sbb
xor
xchg
fld
loope
cmp
icebp
je
and
adc
push
ja
fsub
scas
xor
push
jns
mov
bound
imul
outs
imul
push
xor
sub
ins
adc
nop
ficomp
cmp
xchg
test
rcl
sub
(bad)
aad
and
add
and
out
daa
(bad)
adc
test
inc
cs
xchg
loop
sub
cmp
add
jne
dec
aam
mov
pop
aad
push
ret
daa
loope
mov
or
sub
dec
sub
xor
inc
pop
cmps
push
add
inc
sbb
push
push
outs
xor
inc
stc
xchg
call
mov
jo
retf
jns
mov
xor
inc
test
mov
out
dec
loop
push
mov
or
push
jmp
(bad)
pop
mov
push
sub
xchg
aad
aaa
mov
pop
retf
cmp
cs
gs
retf
add
jmp
xchg
jno
sbb
cmovno
fst
mov
movs
loope
aas
xchg
sub
and
sbb
push
xchg
cs
adc
mov
idiv
ret
shl
or
popa
push
pop
or
test
loopne
shl
and
mov
xchg
or
and
and
(bad)
lds
dec
xor
rol
jmp
inc
je
and
push
add
sbb
adc
iret
jge
add
push
nop
inc
dec
cmp
fld
div
push
jae
inc
clc
pop
adc
or
test
or
cwde
xor
cwde
sbb
retf
es
movs
xchg
scas
movs
sub
sbb
mov
pop
adc
mov
or
add
sar
cmp
in
xor
or
push
stos
call
test
xchg
xchg
lods
pop
add
inc
loope
repz
int
loop
movs
sar
es
xor
jns
icebp
ins
(bad)
push
push
push
xchg
outs
sub
imul
icebp
push
sahf
xor
(bad)
xchg
call
inc
xlat
or
mov
fucomp
push
test
lahf
bound
xor
jle
loopne
rol
rep
jo
or
or
xchg
jnp
inc
or
xlat
push
dec
ret
add
popa
add
adc
jae
jns
sbb
sar
push
xor
ins
leave
inc
sar
test
or
adc
xchg
mov
add
pop
pop
xchg
dec
daa
or
ins
addr16
ins
xor
ins
sti
sub
outs
pop
push
das
pop
ins
and
test
and
dec
imul
scas
dec
pop
movs
xor
cmp
adc
xor
dec
sbb
clc
imul
pop
and
or
sub
or
(bad)
lock
xchg
outs
rcr
shr
mov
cs
movs
imul
test
rcr
pop
pushf
sbb
fs
push
cdq
sbb
fist
xor
imul
fnop
pop
aaa
sbb
pusha
nop
mov
and
cmp
xchg
dec
sbb
pop
popa
repz
ficom
jl
pop
aas
mov
arpl
mov
xchg
test
mul
std
ss
fistp
fs
gs
aas
test
sub
cmp
mov
adc
fdivr
movs
adc
adc
lods
add
xlat
mov
pop
cmc
xor
inc
inc
sub
mov
aad
and
push
pop
nop
inc
shl
sbb
mov
and
cmp
adc
push
fimul
in
or
sub
sub
push
sti
movs
cmp
cmp
sub
push
pop
loope
and
shr
cmp
fild
mov
inc
or
inc
cwde
add
out
js
and
jbe
fdivr
xchg
mov
leave
ss
cwde
or
stos
dec
cmp
push
frstor
jbe
inc
(bad)
push
jae
test
ret
sub
mov
test
int
jge
mov
mov
das
pop
jnp
mov
sub
push
out
int3
lods
arpl
stos
push
dec
jmp
xchg
push
push
add
mov
inc
retf
mov
cmc
sbb
stos
lods
xchg
(bad)
sub
mov
push
jge
bound
mov
cmp
pusha
imul
pop
xor
in
mov
pop
inc
and
mov
retf
mov
fimul
test
pop
mov
enter
retf
push
add
enter
pop
mov
imul
dec
mov
shr
push
jnp
or
push
pop
push
and
ror
addr16
pop
stos
mov
pop
mov
imul
adc
mov
pop
fldcw
sub
popa
add
pop
jp
fmul
outs
int
xor
ss
pop
push
jo
inc
pop
retf
xor
pusha
shl
jge
bound
or
push
sub
jne
or
sbb
sbb
dec
test
gs
(bad)
cmp
daa
stos
leave
push
pop
cmp
push
movs
or
aas
stos
enter
mov
mov
mov
adc
daa
and
push
sub
mov
sbb
std
data16
pop
mov
push
xchg
outs
adc
sbb
mov
cmps
push
aas
xor
cs
sub
outs
inc
nop
sub
pop
jnp
cmp
adc
into
jge
cmp
pop
push
fst
leave
push
and
ror
es
pop
test
pop
in
or
outs
loope
or
test
fadd
inc
sub
es
adc
sub
test
in
aaa
out
xchg
mov
je
test
inc
test
in
movs
js
xor
sub
dec
test
aaa
pop
adc
xchg
jg
and
push
dec
call
(bad)
add
inc
add
push
dec
xor
add
lea
adc
sbb
sbb
adc
jmp
fwait
imul
aas
fmul
ret
ret
push
jnp
push
dec
jnp
mov
mov
push
adc
add
cs
aas
aad
xor
jl
jb
je
nop
in
adc
push
popa
inc
aas
mov
adc
les
mov
mov
lods
jecxz
out
rcr
jmp
lods
gs
or
xchg
dec
jg
pop
or
loope
sbb
fs
xor
push
pop
sub
das
fwait
inc
push
and
inc
test
jnp
repz
sbb
xor
sbb
std
icebp
or
or
and
xchg
xor
enter
ret
aas
or
or
or
cmps
rcl
add
xor
in
fwait
xchg
mov
(bad)
xor
stos
pop
leave
pop
push
xor
push
test
(bad)
gs
sub
xlat
cld
out
pop
sbb
sub
retf
jmp
inc
adc
dec
jns
icebp
sub
popa
mov
push
loopne
cmp
shr
jp
pop
mov
mov
(bad)
and
push
push
arpl
test
mov
repz
imul
xor
in
mov
mov
and
icebp
inc
adc
xchg
jp
inc
sub
xor
sub
jne
jmp
inc
dec
rol
ret
das
pop
sbb
or
mov
lods
jle
ret
cmp
add
sub
xor
movs
aad
push
imul
or
mov
mov
jmp
sub
mov
and
xor
(bad)
das
lea
sub
sub
sub
sub
or
dec
test
out
nop
or
sub
pop
inc
jo
ror
lea
and
and
inc
dec
cmp
das
sbb
or
or
les
test
jno
dec
pop
aaa
pop
test
jge
pushf
dec
mov
stos
jno
or
mov
out
jo
daa
pop
and
sbb
js
mov
aaa
ret
sbb
imul
push
fisttp
push
inc
(bad)
push
lds
pop
dec
movs
or
mov
and
and
dec
daa
cmps
mov
sub
push
ret
das
movs
pop
mov
inc
push
sub
cdq
push
in
and
out
cmp
cmps
add
bound
dec
push
rol
inc
jecxz
(bad)
adc
ss
cdq
or
and
adc
inc
or
mov
mov
(bad)
jae
pop
inc
(bad)
pusha
int
dec
iret
fld
fisub
call
push
aaa
xor
jmp
mov
int3
dec
mov
mov
mov
cmp
(bad)
pushw
cmp
pop
inc
cmovnp
or
cmps
cmps
inc
xor
adc
xchg
or
push
pop
ja
inc
sbb
jp
ja
mov
pop
lea
adc
add
in
ja
xchg
jle
sbb
inc
and
mov
sub
push
ins
in
or
inc
aaa
daa
xchg
dec
fcom
mov
or
jae
sub
dec
ins
xor
int
lods
rol
add
jne
xlat
ins
and
mov
jae
mov
pusha
fld
inc
mov
inc
adc
aaa
sbb
mov
lods
cmp
inc
mov
add
pop
nop
loope
mov
aad
ins
push
arpl
mov
int
adc
and
shr
std
mov
pop
(bad)
cmp
adc
adc
jnp
sbb
dec
(bad)
sub
test
mov
push
and
lock
push
sub
retf
or
shl
popf
sbb
into
xor
adc
dec
mov
das
pop
js
ins
push
jmp
and
cwde
add
(bad)
ror
daa
jnp
imul
inc
scas
daa
adc
mov
mov
xchg
add
adc
fistp
sbb
dec
cmp
aaa
jg
iret
sbb
stc
rcl
sub
sub
jns
je
imul
ja
push
sub
cmps
xor
adc
sar
mov
xor
loop
cwde
leave
jge
ror
out
fist
nop
adc
xchg
jg
(bad)
pusha
adc
pop
ins
adc
ret
test
rol
and
jae
popa
adc
lods
mov
pop
sub
retf
imul
sub
xor
mov
lods
dec
add
push
pop
push
sub
sub
xor
adc
push
push
sbb
mov
xor
add
scas
fcomp
mov
or
mov
cdq
inc
sbb
popa
mov
push
in
(bad)
mov
pop
sub
inc
or
les
sub
sub
adc
jns
sub
sub
daa
mov
dec
mov
arpl
xor
jae
add
imul
mov
sub
jmp
add
sub
dec
(bad)
adc
dec
pop
aaa
sahf
or
jae
je
and
and
ss
jmp
add
push
stc
xor
and
daa
inc
add
adc
retf
cmp
and
push
push
and
push
inc
xor
inc
sub
and
xchg
xor
shl
dec
sbb
shl
lea
and
cwde
jae
pop
xchg
into
push
push
and
sbb
out
add
lock
dec
aas
aam
add
push
add
or
cmps
push
movs
add
or
and
ret
fwait
sahf
aad
xchg
jge
int
in
or
push
lods
pop
and
push
lds
and
rol
mov
inc
pop
adc
push
shl
sub
lahf
or
xchg
jp
inc
inc
in
ret
pop
ins
adc
pop
dec
jmp
fadd
outs
arpl
mov
or
(bad)
mov
cmp
rol
jo
ins
mov
das
xor
test
pop
jl
cmc
jno
rol
xor
pusha
xchg
sub
xor
lods
mov
mov
mov
ret
cdq
add
mov
ret
xor
and
inc
adc
lods
xchg
movs
icebp
xor
iret
jns
push
test
xchg
aas
or
stos
loopne
fucomi
dec
popa
push
and
mov
push
pop
dec
push
xchg
xlat
dec
xlat
iret
and
loop
or
sub
fadd
lock
shl
sub
sub
push
pushf
movs
sbb
addr16
loopne
add
arpl
mov
leave
outs
jb
outs
or
sbb
inc
push
adc
jo
stos
dec
xchg
adc
adc
cmc
jo
popa
xor
sub
stos
retf
cmp
xchg
test
pop
xchg
adc
ins
inc
mov
push
push
ret
dec
mov
sub
cmc
sub
inc
or
push
adc
dec
push
mov
xchg
int
(bad)
test
push
xor
sub
cmp
pop
jmp
test
and
shr
push
adc
mov
xchg
push
icebp
jno
mov
(bad)
out
pop
loope
xor
mov
and
out
add
or
sbb
inc
and
or
dec
xchg
or
pop
and
mov
sub
add
pop
add
dec
dec
mov
rcl
outs
frstor
mov
addr16
outs
mov
xchg
mov
dec
add
sub
add
xor
data16
je
nop
pop
imul
push
sbb
or
lods
adc
fmul
xchg
gs
daa
sub
xor
inc
imul
rcr
dec
sti
dec
sbb
popf
fisub
jmp
mov
lahf
(bad)
(bad)
stos
or
stos
inc
and
inc
sub
loope
push
push
outs
xor
pop
sub
adc
push
and
xchg
sub
lds
pop
or
rol
cmp
push
add
fs
pop
push
mov
xor
ins
add
imul
sub
sbb
inc
call
adc
retf
cmp
push
cmp
or
or
xor
ins
jl
and
lahf
mov
rol
mov
repz
or
push
dec
iret
sbb
sub
xor
or
jmp
xor
pop
sub
adc
xchg
and
push
and
mov
int
popa
div
mov
dec
adc
mov
shl
ins
or
sub
add
pusha
and
rcl
push
inc
sub
push
pop
pop
pop
mov
inc
xchg
jmp
repz
stc
jnp
mov
xchg
iret
push
inc
or
mov
aad
mov
cmp
stos
les
and
mov
ins
sub
ret
outs
and
ret
push
cs
sub
cmps
xor
pop
not
add
push
imul
outs
add
icebp
rol
icebp
pop
pop
fisub
pop
shl
pop
sbb
pop
mov
or
js
adc
jge
or
xor
xor
mov
adc
rcr
add
daa
mov
(bad)
and
mov
push
add
outs
lds
push
stos
das
pop
xor
and
xchg
jo
adc
imul
sub
test
movs
outs
das
xchg
pop
mov
push
(bad)
sub
jmp
adc
sahf
xchg
outs
mov
pop
xchg
rol
add
sub
sbb
mov
jns
sbb
jmp
pusha
and
adc
push
and
rcl
loopne
sub
or
cmp
sbb
pop
xchg
jnp
loop
lahf
dec
mov
and
xor
push
mov
or
inc
adc
push
clc
aam
inc
loopne
pop
cmps
xor
mov
and
push
mov
dec
cmc
inc
sbb
jl
arpl
push
and
sbb
add
and
adc
dec
popa
stos
std
and
mov
test
(bad)
jge
imul
stos
int
push
push
dec
or
les
(bad)
in
push
xor
sbb
psubusb
push
inc
adc
jb
cmp
mov
xor
aad
sub
push
rol
inc
add
adc
sbb
xor
ins
shl
or
xor
pop
aaa
leave
mov
add
add
inc
mov
sbb
or
cmc
sbb
xor
in
movs
xor
dec
lds
inc
and
retf
outs
leave
push
sar
push
dec
sbb
aas
inc
push
das
adc
push
sbb
mov
inc
outs
xor
ins
repz
sub
test
inc
aas
pop
ins
or
adc
in
cmp
inc
or
jno
retf
lahf
adc
cmp
inc
dec
sbb
cs
movs
test
mov
cmp
pop
imul
push
adc
das
or
inc
cmp
mov
push
dec
(bad)
xor
pop
add
pop
loop
mov
or
shl
sbb
cmps
cmp
sub
mov
ret
add
icebp
iret
xor
mov
in
retf
adc
or
adc
jo
and
inc
jns
nop
dec
inc
inc
das
adc
mov
dec
adc
popa
shl
mov
mov
or
push
out
inc
inc
pop
inc
push
ret
pop
xor
mov
dec
gs
cmps
push
push
mov
or
jg
xor
cmp
xor
jns
lods
add
push
xchg
lea
mov
add
inc
xchg
scas
test
and
xor
and
enter
push
sub
dec
mov
mov
lods
cmp
cmp
add
in
cmp
sub
inc
xor
lods
fwait
mov
pop
lds
sub
test
dec
sub
pusha
shr
and
pop
or
push
adc
inc
retf
pop
in
pop
adc
dec
ins
lds
dec
and
iret
add
sub
inc
sbb
stc
cmp
dec
add
mov
ror
adc
xchg
sbb
sub
sbb
fnstcw
mov
adc
mov
inc
jne
ins
push
or
(bad)
(bad)
sar
or
test
std
jns
push
ret
dec
stc
mov
mov
enter
dec
jmp
into
push
or
dec
mov
js
stc
stos
int
daa
cmp
mov
mov
rol
call
cmp
aas
and
pop
test
pusha
jmp
dec
dec
push
icebp
sub
adc
imul
rcr
mov
dec
and
pop
xchg
ins
stos
sub
mov
inc
dec
movs
and
dec
push
daa
movs
push
pop
xchg
loopne
or
mov
adc
imul
imul
cmp
pop
loopne
jae
and
lds
fadd
mov
jo
imul
leave
mov
jne
gs
xor
popa
lds
pushaw
jno
pushf
inc
cmp
test
pop
and
xor
mov
mov
sub
cmp
outs
pop
and
in
jae
and
out
and
jg
shr
adc
xchg
jl
push
es
push
sbb
mov
dec
arpl
xchg
inc
and
ret
dec
dec
sbb
movs
jl
outs
xor
dec
pop
test
jb
adc
out
adc
ror
(bad)
cmc
mov
mov
cli
cdq
and
ins
add
jnp
mov
cmp
push
(bad)
loope
xor
not
(bad)
adc
ins
sub
adc
or
sub
xor
add
xchg
outs
push
mov
mov
popf
lds
inc
sub
inc
imul
std
add
lods
push
sbb
and
mov
lods
add
pop
push
cmps
pop
shl
mov
adc
popf
and
xor
jns
mov
sbb
push
sub
jnp
sub
ret
pop
dec
jne
or
mov
push
mov
popa
in
adc
cmp
add
aam
pop
fistp
pop
test
or
pop
sub
adc
inc
and
or
adc
in
imul
sub
fisttp
push
xor
outs
and
mov
mov
or
sub
div
add
outs
push
mov
outs
or
inc
pop
mov
jo
pop
cmp
jmp
or
shr
fnstenv
and
outs
push
outs
or
sbb
sub
inc
mov
pop
push
or
ja
loopne
sub
test
mov
xchg
lods
pop
adc
push
mov
push
sub
int3
adc
int3
xor
push
inc
in
or
ins
sub
and
test
stos
dec
sbb
xor
mov
idiv
pop
ret
in
mov
cmp
or
or
movs
add
push
pop
pop
jae
lods
push
sub
pop
mov
sbb
fdiv
or
pop
aaa
call
or
push
and
adc
cmp
mov
add
dec
and
adc
inc
xchg
addr16
dec
and
xchg
pop
mov
cmp
in
push
push
sbb
cmp
movs
sbb
sub
cmp
and
test
add
adc
cmp
add
and
ret
mov
sub
and
mov
cmps
mov
pop
mov
add
add
outs
sbb
loop
mov
retf
das
or
cmps
retf
add
leave
inc
push
adc
shl
in
sar
imul
gs
ror
sbb
ret
aaa
je
and
jne
jne
sub
cli
adc
shl
inc
popa
add
sub
xor
jo
shl
push
daa
sub
inc
daa
pop
adc
sbb
mov
in
add
jp
rcr
sbb
push
cmp
pop
in
or
sub
mov
imul
rcl
call
outs
mov
sti
das
pop
mov
lods
xchg
rcr
mov
and
pop
mov
adc
test
jmp
(bad)
dec
dec
(bad)
jns
sub
lea
test
js
out
bound
add
cdq
aad
mov
xchg
arpl
pusha
mov
adc
push
test
stc
jno
aad
lahf
add
add
adc
push
sub
inc
mov
push
sub
in
mov
pop
jae
jp
fs
dec
daa
cmp
sub
rcl
cmp
iret
dec
gs
popa
adc
outs
or
mov
sub
daa
jge
fidivr
add
inc
movs
sub
mov
xchg
aaa
mov
(bad)
adc
pop
push
rol
scas
dec
and
xor
aad
add
pop
dec
sub
retf
push
jae
(bad)
mov
sti
in
add
adc
pusha
and
and
xor
cs
loope
xchg
mov
add
sub
xlat
inc
sub
inc
les
jns
stc
sub
push
xor
sub
push
or
std
xor
pusha
je
cmp
push
mov
adc
sbb
mov
fs
lds
sahf
enter
mov
lds
or
dec
cdq
dec
xchg
xor
daa
mov
xchg
and
add
inc
dec
cmp
iret
cmp
cmp
sahf
xor
dec
dec
push
das
ja
push
(bad)
or
aas
push
mov
pop
daa
in
sub
cmp
ins
add
xor
mov
sub
repz
icebp
inc
aad
lods
xor
fs
outs
xchg
cdq
xor
inc
adc
pushf
pushf
jne
daa
mov
jns
mov
dec
add
and
lods
xor
mov
sub
sub
mov
mov
xor
cdq
pmullw
push
and
pushf
mov
les
mov
inc
cmp
mov
inc
popa
jmp
add
dec
inc
aam
mov
add
inc
jae
adc
lds
retf
add
xor
hlt
dec
xchg
or
push
xor
or
and
dec
test
and
ss
or
ret
ja
jmp
push
lods
scas
jl
sub
jo
inc
xor
dec
and
and
ret
mov
cmp
pop
pop
loop
mov
int3
mov
adc
sub
mov
sub
aaa
xor
push
mov
mov
add
rcl
in
movs
jo
sbb
sbb
inc
pop
ins
add
adc
data16
add
xor
xor
cs
xchg
sbb
(bad)
jns
aas
or
inc
int
fs
mov
sbb
ins
sbb
sub
popa
test
and
mov
ja
ficom
ja
cmp
(bad)
cmc
sbb
rcl
frstor
and
shr
sbb
daa
dec
data16
cmp
sub
jns
pop
ins
lea
daa
or
inc
dec
mov
std
and
inc
mov
retf
sub
stos
sbb
jno
cmp
push
dec
mov
adc
scas
and
cmp
sub
dec
daa
mov
fisubr
jge
data16
popa
pop
sbb
sti
sbb
inc
cmp
and
dec
scas
rol
xchg
scas
cmp
pop
and
jo
sbb
mov
add
xchg
xor
sub
xchg
in
inc
ret
sbb
xchg
icebp
adc
dec
cdq
popa
je
ficom
test
xchg
sub
push
ret
int
lea
jae
sub
sbb
cmp
and
loopne
retf
(bad)
fcom
dec
loopne
and
pop
das
xor
pop
xchg
ds
daa
dec
jp
dec
lock
nop
test
inc
daa
push
dec
(bad)
inc
push
pop
aad
sahf
adc
ins
xlat
sub
adc
push
mov
fwait
mov
sbb
mov
outs
fs
pop
lea
sub
adc
imul
and
les
sbb
or
add
movs
mov
ret
test
scas
xchg
dec
ins
and
jmp
lods
sbb
test
jns
jbe
pop
inc
push
and
pop
test
mov
or
or
or
push
pop
or
push
inc
or
mov
sbb
ret
sub
or
scas
daa
push
sahf
pop
push
(bad)
ret
lock
dec
mov
sti
iret
jae
pop
cmps
bound
and
jo
sbb
inc
cmc
fbstp
add
xor
ss
cmp
and
adc
test
stos
jae
dec
pop
aaa
fs
outs
xor
inc
jecxz
push
xor
push
outs
mov
and
gs
mov
je
add
bound
pushf
mov
popf
daa
and
adc
push
daa
imul
lods
and
retf
mov
or
push
shl
dec
and
dec
cmps
cmp
mov
sub
dec
std
jmp
enter
dec
fisttp
daa
cmova
call
adc
stos
int3
mov
mov
aam
and
pop
mov
pop
cmc
xor
stos
pop
jmp
arpl
push
inc
fwait
xor
or
(bad)
and
push
cwde
pop
mov
dec
gs
xchg
push
test
sti
inc
aaa
or
ss
fld
test
sbb
outs
push
sub
add
mov
lea
xlat
and
mov
popa
push
inc
push
adc
pop
push
int
pop
imul
add
cdq
ja
rol
arpl
cdq
mov
mov
mov
ins
add
inc
xor
in
push
fadd
sbb
pop
cmp
js
mov
movs
xchg
shl
or
dec
jae
test
ret
xchg
imul
mov
push
pop
lahf
les
push
rcr
pop
pop
test
or
jecxz
cmp
sbb
sbb
mov
add
aas
ficomp
pop
push
add
stos
rol
ret
movs
add
sbb
cmp
xor
dec
sbb
push
shr
xor
adc
or
dec
xor
xchg
and
mov
adc
adc
jg
cmp
or
shr
cmps
mov
dec
dec
mov
aam
imul
xor
popf
inc
rcl
bound
mov
adc
mov
add
mov
ret
add
pop
add
dec
mov
cmps
pop
inc
mul
rcr
adc
inc
dec
mov
inc
sbb
enter
sub
and
add
jmp
rcl
fcmove
sub
or
ror
mov
iret
call
add
jecxz
repz
adc
add
loop
imul
xor
mov
outs
fwait
xor
fstp
mov
xor
xchg
popa
inc
mov
add
cmp
push
and
cmp
xchg
adc
pop
ror
pop
adc
enter
mov
push
lock
aaa
aas
xor
movs
adc
pop
adc
gs
loope
add
aad
pop
test
xchg
sbb
pusha
and
xchg
pop
xchg
and
sbb
popf
xchg
dec
pop
and
xor
(bad)
jmp
sub
xchg
ror
mov
push
imul
cmps
outs
add
(bad)
pop
mov
and
sub
add
outs
ins
js
fs
inc
mov
cmp
retf
jae
(bad)
or
add
inc
cmp
rol
adc
inc
inc
adc
(bad)
sub
adc
shl
retf
and
inc
mov
mov
push
and
ja
add
pop
(bad)
test
mov
pop
ins
bound
loope
add
and
push
mov
or
add
and
mov
mov
hlt
(bad)
stc
aas
sub
pop
jne
(bad)
repz
shr
inc
push
or
shr
mov
sar
ins
and
dec
fcom
retf
imul
or
mov
inc
sti
add
lods
mov
jne
pop
outs
not
sub
mov
dec
mov
int
ins
and
mov
std
jmp
lea
mov
stos
test
pop
cmps
ret
or
aam
dec
jb
sub
xor
ss
sbb
(bad)
push
ja
mov
std
dec
adc
or
enter
movs
mov
add
sub
sub
pop
imul
xor
imul
mov
pop
jne
adc
inc
sbb
clc
mov
test
xchg
xchg
sub
stos
loopne
xor
sub
push
cmc
xchg
push
inc
stos
pop
adc
cmp
or
icebp
cmp
(bad)
fadd
outs
inc
pop
push
pop
ret
aaa
adc
and
int3
add
and
icebp
or
dec
or
push
sbb
sbb
adc
adc
lods
add
inc
lods
mov
inc
add
dec
push
leave
pop
sub
sub
mov
js
shl
xchg
test
add
test
dec
push
(bad)
xor
adc
and
retf
sbb
jne
mov
add
daa
and
pusha
pop
adc
xor
lods
inc
jae
sub
out
push
out
jge
and
xchg
shl
sbb
fld
pop
sbb
stos
scas
jecxz
add
cmc
jb
rcl
fwait
xchg
sub
sbb
es
mov
add
push
jl
jmp
xor
jae
cmc
inc
je
xor
(bad)
mov
and
stc
arpl
inc
aam
pop
dec
or
stos
movs
push
xor
sub
(bad)
iret
xor
and
gs
(bad)
retf
push
xor
out
cmp
mov
jae
mov
add
fbstp
xchg
dec
movs
pop
add
xchg
into
add
xchg
in
or
mov
xchg
inc
mov
jecxz
inc
cmp
or
test
mov
adc
add
outs
jmp
popa
inc
and
cmp
ins
pop
mov
jp
adc
shr
pop
adc
mov
xor
fisttp
jmp
xor
(bad)
inc
push
and
sar
push
mov
shl
and
(bad)
jmp
and
cmp
inc
mov
dec
jae
fs
jns
push
sub
mov
int3
imul
sub
adc
inc
or
stos
inc
out
xchg
mov
or
mov
mov
jb
pop
fld
test
test
jno
and
xchg
test
lds
xor
sbb
outs
pop
and
or
add
nop
mov
mov
add
sbb
(bad)
or
xor
xchg
(bad)
fsub
mov
and
or
fild
popa
cmps
mov
mov
cmp
bound
dec
fadd
mov
fucomi
loope
or
sub
add
xchg
dec
sbb
cmp
mov
(bad)
aad
ror
int
and
test
sub
jbe
and
cmp
add
aad
or
pop
sub
es
cdq
or
sbb
and
shr
jne
add
and
push
or
outs
dec
mov
push
inc
sbb
add
lods
aaa
sbb
or
or
pop
cmp
dec
or
sbb
sbb
les
or
out
scas
loope
std
stc
inc
or
stos
adc
shr
dec
sub
add
inc
mov
add
jno
xchg
lods
or
loope
and
scas
jecxz
xor
cs
or
imul
and
add
pop
sti
ja
lods
nop
ret
xor
fidivr
cmc
xor
rcl
or
popa
shr
fmul
sub
xchg
mov
lods
jbe
lods
sub
cmp
or
add
adc
inc
scas
rol
movs
popf
mov
sbb
dec
add
fnstenv
daa
icebp
movs
mov
sti
push
xchg
push
inc
gs
stos
loopne
outs
mov
adc
test
sub
add
jne
push
push
sbb
add
cmp
js
mov
lock
pop
sub
pusha
fwait
div
or
xchg
outs
xor
ror
aas
adc
and
lods
dec
and
or
adc
je
add
jo
adc
movs
sub
arpl
push
sub
push
cmc
aaa
or
and
or
sti
push
or
sbb
add
sbb
inc
or
pop
and
aas
mov
jge
(bad)
add
xchg
push
mov
cmp
or
stos
push
test
adc
inc
mov
push
xchg
pop
fs
les
adc
lahf
add
gs
bound
mov
pop
push
and
inc
and
sub
adc
outs
scas
dec
adc
dec
xor
cmp
add
mov
nop
adc
adc
aaa
pop
adc
sbb
cs
and
push
sub
pop
mov
push
and
shr
jnp
cwde
sbb
lea
les
cmp
aam
or
mov
idiv
lahf
ret
call
xor
ret
sbb
fcomp
bound
outs
ror
aad
mov
push
scas
aad
push
adc
loope
and
or
ret
or
and
add
pushf
and
push
arpl
aas
push
pop
inc
mov
jne
adc
out
and
dec
push
dec
xor
dec
das
sbb
mov
pop
and
daa
leave
sbb
fist
das
popf
fstp
ret
ins
xor
pop
les
sbb
pop
push
cmp
mov
sub
xor
sub
pop
add
sbb
test
movs
jns
dec
mov
fimul
mov
mov
dec
sub
imul
jmp
pop
and
and
sub
pop
movs
popa
xchg
inc
jp
jecxz
xchg
push
lahf
or
pop
lea
test
and
adc
ret
or
mov
adc
jmp
adc
inc
sub
les
int
out
into
imul
popa
xchg
mov
add
and
jmp
sub
pusha
adc
sbb
inc
jg
pop
push
inc
fist
jae
adc
(bad)
jne
push
sub
xchg
test
jbe
leave
loope
ins
ror
shl
pop
mov
call
xor
sbb
adc
cmp
xor
sbb
lds
fild
cmp
cmp
pop
inc
sub
daa
(bad)
sar
fadd
(bad)
jmp
sub
mov
xchg
adc
sbb
fld
mov
cmps
dec
mov
or
adc
xchg
fstp
bound
adc
push
push
xor
sahf
fisttp
xor
mov
jne
fsub
jmp
xlat
inc
push
nop
pop
jge
sahf
or
jmp
dec
jae
movs
inc
sub
shl
jmp
xor
mov
xlat
push
add
and
test
mov
dec
in
sub
ret
das
ins
add
fs
lods
inc
jecxz
lods
sub
aaa
jle
cli
lds
inc
lods
xchg
ds
xor
xor
or
xchg
mov
inc
add
cmp
cmp
ret
mov
sub
sub
mov
add
sub
sub
mov
mov
mov
(bad)
gs
mov
push
inc
pop
mov
test
pop
mov
push
add
cs
ds
jno
enter
adc
jne
retf
inc
dec
dec
xor
sub
inc
das
mov
push
xor
mov
bound
inc
adc
or
pmaddwd
xor
cmp
mov
loop
fwait
cmps
inc
sub
xor
leave
push
ret
and
adc
shl
jge
adc
or
mov
cmp
dec
adc
clc
dec
jns
shl
and
movs
adc
mov
aas
add
cli
shl
xlat
push
mov
inc
jb
ins
mov
dec
les
xor
mov
inc
arpl
adc
imul
lods
fadd
ret
ret
ins
mov
shl
mov
lds
sub
daa
imul
jne
add
jae
je
movs
leave
push
pop
mov
jp
test
aad
sub
xchg
fbld
and
push
adc
loope
sub
push
jbe
push
out
loopne
pop
mul
inc
mov
lahf
scas
jg
mov
and
push
sub
adc
sbb
xor
sub
(bad)
cli
sub
inc
sbb
sub
cmp
or
adc
addr16
cmp
sub
das
jmp
adc
mov
cmp
xchg
cdq
(bad)
pusha
xchg
cs
adc
aas
cs
push
adc
fdivr
sub
pusha
add
xor
add
adc
dec
bound
stos
mov
adc
ins
jns
push
shl
sbb
mov
push
sbb
ja
les
cwde
and
cmp
push
push
pop
cmp
call
les
sbb
movs
lock
and
inc
mov
cmp
(bad)
fisubr
and
inc
xchg
push
mov
es
or
add
dec
pop
sbb
mov
daa
and
pop
arpl
jnp
es
jno
or
test
mov
aaa
sar
retf
fistp
mov
and
push
pop
mov
pop
dec
ret
and
js
adc
dec
cmp
js
test
imul
sub
cmps
lds
push
inc
mov
mov
xchg
popa
cwde
adc
stos
xchg
mul
push
jmp
sub
jo
int
or
ret
dec
adc
adc
push
sub
sub
inc
and
push
sub
aaa
push
and
jge
in
mov
call
sub
cwde
sbb
add
mov
aad
adc
pop
mov
push
push
stos
in
xor
dec
cmp
(bad)
push
test
cmp
jno
sub
or
lods
mov
and
rol
mov
jns
sbb
inc
mov
pop
std
or
xor
pop
mov
mov
dec
sbb
or
cdq
lods
test
adc
or
in
add
ficom
xor
popf
xchg
dec
or
dec
iret
and
sub
xor
sbb
(bad)
mov
mov
pop
call
test
jnp
ja
inc
int
sub
int
ss
jne
ja
pop
test
or
mov
xchg
imul
jnp
(bad)
mov
imul
shl
pop
mov
scas
xchg
bound
xor
arpl
mov
nop
bound
ficom
cdq
xor
mov
adc
jne
imul
inc
sub
sub
jmp
fmul
movs
mov
or
lea
pop
repz
mov
outs
and
push
push
sub
ror
inc
lahf
mov
aad
fwait
lea
push
adc
jnp
xchg
test
(bad)
xor
jno
mov
or
fwait
mov
shl
loope
xchg
dec
cs
(bad)
xor
ret
daa
cwde
push
jne
xor
sub
(bad)
pop
lods
inc
pop
ss
and
xchg
movs
and
xchg
cmp
add
xchg
and
sbb
aaa
fs
sub
dec
mov
data16
popf
adc
shr
pusha
jge
mov
lea
fnstenv
jae
in
fld
aaa
cmc
cs
mov
dec
dec
fbld
inc
push
or
add
and
aaa
ret
push
xor
cmp
out
jae
pop
and
loopne
movs
xor
push
or
fst
sbb
movs
adc
sbb
and
xor
les
loope
js
nop
and
sub
pop
loopne
pop
cmp
sub
xor
out
jmp
std
sbb
sub
sbb
cwde
mov
rol
imul
aam
dec
fistp
pop
ret
(bad)
add
add
add
stos
xchg
fadd
lds
mov
mov
scas
or
rcl
push
push
cmp
stc
adc
arpl
movs
pop
push
or
fst
popa
lods
hlt
mov
sub
inc
sub
mov
push
stos
imul
(bad)
lds
test
lods
cmps
inc
push
xor
popa
aas
push
into
nop
sub
lea
push
ror
sub
adc
pop
pop
xchg
xor
inc
dec
push
sbb
mov
lock
dec
push
xor
and
ss
pop
rcr
retf
cmp
inc
ret
dec
sbb
xchg
ret
jp
sub
push
pop
mov
mov
dec
push
inc
iret
sub
jge
add
and
in
pusha
sbb
idiv
arpl
push
inc
inc
wrmsr
ins
test
or
jae
sbb
pop
sbb
mov
xchg
xchg
jae
scas
sub
jg
in
xor
mov
xor
dec
adc
or
xor
or
idiv
imul
loopne
pop
or
or
mov
push
inc
shr
cmp
fmul
les
xor
and
add
jmp
ja
mov
adc
pop
push
pop
mov
out
push
mov
data16
push
(bad)
mov
lods
jnp
inc
adc
xlat
gs
xchg
cmps
adc
mov
test
ins
or
sub
mov
out
lea
mov
mov
xchg
inc
push
or
xor
sub
ret
sub
scas
in
sub
stos
lods
sub
neg
les
or
sbb
out
xor
and
movs
push
inc
cli
mov
mov
aad
push
ss
retf
jno
xchg
int
or
imul
jae
add
or
inc
mov
inc
and
push
sub
sub
xchg
in
cmps
nop
mov
jge
(bad)
movs
jb
add
push
js
add
pop
xchg
shl
adc
aaa
sti
xchg
in
lods
cmp
and
mov
aaa
xor
arpl
sbb
dec
push
sbb
push
(bad)
jnp
push
push
pop
jno
xor
je
packssdw
dec
sub
add
xchg
popa
lds
push
push
mov
shl
call
pop
jns
xchg
bound
test
jne
push
push
or
xchg
es
and
jno
ffree
mov
outs
les
sub
sbb
cmp
xlat
adc
mov
jmp
dec
or
xor
push
push
pop
pop
and
cs
inc
loop
mov
sub
loope
pop
daa
pop
loope
pop
test
pop
sub
add
pop
loopne
mov
or
mov
pusha
add
ret
mov
xor
(bad)
aaa
bound
ins
pop
lods
call
mov
lods
sbb
fstp
test
shl
cmp
and
fcmovnu
inc
xchg
dec
pop
jnp
in
and
leave
dec
adc
push
xor
and
xchg
xor
iret
add
add
ins
and
arpl
adc
xlat
or
imul
push
fldenv
das
push
pusha
push
imul
sub
or
and
stc
lea
or
test
sub
pop
adc
jge
jno
pusha
mov
dec
sbb
imul
test
mov
(bad)
arpl
jns
inc
sub
lods
adc
sub
add
inc
pop
ror
jecxz
(bad)
dec
stos
pop
mov
arpl
dec
mov
push
or
lds
je
or
test
fcom
or
and
push
sub
fwait
adc
xchg
(bad)
movs
test
or
test
mov
mov
sub
pop
push
ret
add
pop
in
mov
pop
pop
adc
adc
mov
imul
(bad)
stos
sub
sbb
outs
or
dec
xchg
inc
inc
movs
ins
xor
cmp
sti
ins
add
rcl
dec
cwde
push
imul
ins
mov
xor
cmps
cmp
mov
mov
sbb
dec
or
mov
sub
rcl
(bad)
sbb
fdiv
pop
cmc
pop
pop
ss
pop
sbb
xor
or
scas
lods
sbb
push
mov
shr
fldenv
dec
adc
fucomip
dec
and
push
cdq
lahf
pusha
inc
loopne
pop
sub
push
add
or
push
xlat
daa
dec
sub
push
fld
cwde
cmp
inc
mul
mov
stc
and
pop
xor
xchg
mov
and
and
dec
sub
cmps
xchg
shl
in
pop
les
mov
push
ffreep
(bad)
sti
inc
sub
mov
enter
dec
aad
push
mov
sub
dec
stos
imul
daa
mov
and
xor
(bad)
inc
cmp
(bad)
(bad)
ss
and
aad
push
sar
adc
xor
xlat
outs
out
jb
add
popa
aaa
push
lock
add
mov
cld
mov
ds
ret
sub
or
and
fdivr
gs
in
ret
jb
jae
inc
jecxz
ret
shl
push
and
xchg
mov
push
les
jmp
ins
das
and
xor
mov
sub
ror
lahf
cmc
add
loopne
dec
sub
push
sar
mov
mov
inc
(bad)
fidivr
xchg
mov
lods
inc
loop
push
and
ffree
dec
lods
or
shr
inc
popa
mov
ins
jmp
xchg
test
(bad)
jno
sbb
test
shl
mov
cmps
retf
mov
inc
outs
or
mov
repz
pop
jmp
int3
and
lods
push
mov
test
xor
out
cs
into
sbb
jl
jl
bound
push
sub
js
add
xor
pop
adc
inc
shl
add
and
lea
hlt
je
call
test
sub
pusha
adc
push
bound
adc
das
sub
aam
xchg
nop
and
xor
xor
pop
add
xchg
push
scas
pop
pop
arpl
jne
dec
loope
pop
sub
xchg
cmps
popf
stos
pop
jo
lea
loopne
cmp
sbb
cmps
or
inc
arpl
out
sub
jmp
push
sub
jne
out
loope
mov
aad
jmp
out
lock
xor
mov
in
or
xor
push
push
dec
call
cmp
mov
and
sub
fwait
inc
call
gs
ins
ins
inc
push
or
pop
aas
inc
sub
jno
xor
pop
aam
push
inc
mov
or
xchg
add
push
pusha
(bad)
sbb
ja
pop
ja
mov
jle
ja
cs
mov
loope
add
movs
xor
xor
push
pop
in
pop
xchg
shl
ret
xchg
lods
pusha
mov
add
or
scas
or
ss
mov
movs
mov
add
lea
sub
ins
sbb
cmps
jae
xor
jbe
icebp
pop
sub
pop
sbb
adc
into
int
jmp
xchg
xchg
movs
adc
test
xchg
and
mov
or
add
fwait
pop
and
pop
mov
call
xchg
into
adc
mul
imul
mov
sub
aad
aaa
and
pop
sub
add
cmp
adc
add
adc
sbb
and
mov
push
or
fwait
mov
sbb
fstp
sbb
jae
add
inc
mov
cmp
dec
adc
cmp
or
sub
pop
sub
mov
loopne
xor
sub
cmp
fcom
lahf
push
adc
adc
sub
daa
adc
ret
scas
inc
fmul
or
lods
jecxz
pop
mul
cmp
test
sub
jl
xlat
sbb
je
inc
shl
jae
jl
adc
ds
ret
dec
push
jae
aad
cmc
xchg
ss
imul
and
mov
or
daa
test
sub
cmp
ja
outs
cld
mov
inc
push
pop
sbb
and
aas
ffree
retf
inc
das
pop
pop
loopne
jb
mov
jae
push
and
fs
pop
cmp
loope
daa
icebp
stos
or
push
adc
shl
inc
or
or
xchg
fld
bound
scas
sbb
adc
sub
lods
cmps
arpl
fisub
add
fwait
push
or
dec
adc
xchg
les
icebp
mov
mov
cmps
jnp
stc
cs
mov
and
adc
dec
(bad)
(bad)
aam
push
pop
in
into
mov
push
jmp
sbb
xchg
jmp
mov
push
sub
fnstenv
dec
xor
lods
inc
mov
xor
xchg
fmul
sti
add
std
scas
sbb
dec
test
sub
adc
dec
(bad)
mov
je
loopne
into
mov
loope
inc
cwde
adc
add
(bad)
mov
(bad)
gs
lods
(bad)
fldcw
inc
mov
ins
sbb
xchg
repnz
mov
add
imul
imul
mov
dec
inc
or
and
mov
and
or
inc
lea
push
test
or
and
nop
inc
mov
or
dec
mov
jmp
adc
outs
in
xor
sub
int
inc
mov
je
cmp
xor
xchg
pop
add
pop
loopne
push
sub
not
inc
sbb
sub
pop
or
inc
stos
cmp
jo
aad
push
je
daa
add
push
xchg
jae
xchg
or
add
cmp
and
popa
popa
les
push
(bad)
or
inc
add
rcl
mov
in
mov
or
sub
cdq
aad
mov
sub
ret
lods
inc
gs
daa
add
and
cmp
cs
sub
ja
xor
pushf
sbb
inc
adc
xor
sbb
and
mov
xchg
mov
ror
adc
add
int
(bad)
outs
ins
aas
loope
inc
or
cmp
push
add
nop
pusha
add
jge
or
popa
les
gs
lds
pop
pop
test
inc
xor
leave
cmp
xchg
inc
call
(bad)
lea
pop
nop
add
sbb
sbb
or
push
push
push
sahf
and
test
aad
pop
mov
sub
pop
jne
and
xchg
test
lods
dec
push
pop
jo
and
adc
mov
xor
fbld
sbb
fwait
cwde
pusha
shl
inc
stos
inc
jae
cwde
fsub
dec
daa
xchg
add
pusha
mov
inc
test
ss
fwait
test
push
shr
xchg
and
push
int
mov
and
test
or
ret
stos
ins
stos
xor
push
(bad)
cmp
or
dec
lods
popa
and
pop
(bad)
and
out
daa
jp
sub
push
and
mov
add
js
js
sub
add
outs
popf
cmp
mov
aam
dec
pop
fs
sbb
out
mov
add
inc
stc
lock
jecxz
sub
jae
jecxz
sub
fbstp
cdq
xor
dec
mov
(bad)
or
jnp
retf
xor
mov
fimul
mov
sbb
test
jmp
js
inc
jo
mov
pop
mov
sbb
cmp
cmp
mov
adc
(bad)
out
mov
ss
sub
sbb
pop
add
popa
seta
data16
pop
scas
push
test
mov
icebp
arpl
and
enter
mov
mov
mov
dec
add
or
cmp
std
aaa
fist
adc
dec
popf
push
dec
and
xchg
shl
dec
pop
adc
pop
inc
cmps
aam
sub
in
mov
test
jmp
sub
or
jo
sbb
and
mov
inc
mov
pop
add
mov
jmp
or
lods
add
fstp
lea
mov
imul
add
in
data16
add
outs
or
push
sub
dec
xor
xchg
sub
xchg
ins
and
sbb
cmp
pop
int
sti
pop
adc
xor
jno
xlat
rcl
adc
push
ret
ja
pop
movs
test
shr
shl
lds
or
or
push
test
mov
sbb
retf
aas
add
dec
fldenv
pop
test
mov
sbb
outs
mov
cmp
push
mov
lds
ins
jae
sti
daa
pop
mov
add
mov
popa
mov
aas
dec
test
add
add
adc
(bad)
bound
mov
sub
cmps
mov
call
(bad)
mov
daa
fsub
arpl
sbb
and
retf
ret
ins
sbb
adc
inc
test
cmc
test
sub
xchg
inc
push
sbb
push
inc
or
push
or
adc
inc
inc
pusha
rcl
fist
gs
ret
retf
adc
cmps
inc
lods
lods
gs
add
and
xchg
push
and
mov
mov
mul
rol
popa
rol
mov
sbb
repz
inc
sub
pushf
shl
jae
add
push
mov
lahf
jecxz
sub
inc
jo
movs
push
dec
test
xor
cmp
add
mov
mov
loop
dec
lds
dec
bound
mov
cmc
mov
adc
out
lea
aas
adc
xor
add
scas
dec
jge
push
cmp
mov
dec
push
adc
rol
hlt
jo
push
mov
adc
jnp
and
adc
sbb
add
ins
jecxz
inc
mov
sbb
stos
add
jge
pop
(bad)
rcl
or
mov
mov
mov
mov
arpl
push
dec
daa
sbb
mov
inc
or
ret
push
aaa
rcr
jp
push
and
cmp
sub
loope
sub
or
adc
bound
in
ss
pop
rcl
sub
pop
dec
adc
daa
fisttp
scas
gs
bound
pop
sbb
icebp
jns
xor
sbb
pop
xchg
das
sub
mov
add
cdq
stos
les
popf
cmps
dec
push
push
mov
hlt
adc
inc
or
mov
and
out
xor
add
jns
jmp
ret
push
leave
retf
movs
stos
add
aad
(bad)
mov
imul
and
mov
movs
inc
pop
gs
push
dec
pop
iret
std
fst
scas
pop
mov
pop
test
mov
cmp
sub
aaa
out
mov
inc
ja
mov
add
xchg
popa
ret
sub
mov
lds
mov
add
dec
ret
inc
push
dec
mov
xor
gs
dec
inc
arpl
in
adc
sbb
xchg
mov
leave
add
sbb
stos
push
mov
mov
inc
bound
dec
movs
sub
sbb
or
inc
push
add
test
pop
clc
aam
lods
arpl
or
nop
cmp
cmps
dec
cmps
push
push
movs
daa
or
push
xchg
cdq
mov
or
sub
adc
sub
cmps
jmp
sub
daa
cmp
xchg
lods
mov
popa
mov
imul
pop
sub
test
cmp
dec
cmp
push
pop
and
inc
pop
push
xchg
aaa
daa
inc
push
add
dec
repz
dec
dec
or
test
popa
adc
or
popa
gs
cs
push
add
(bad)
cmc
icebp
push
test
sbb
icebp
or
and
dec
fsubr
das
add
clc
xor
push
pop
mov
call
push
mov
pop
mov
sub
cmp
push
sbb
pop
jae
or
pop
dec
dec
rcl
and
daa
lahf
mov
js
mov
adc
stos
sar
stos
(bad)
test
sub
fnsave
mov
xchg
add
ror
sub
pop
ret
stos
movs
cmps
mov
rcl
sub
mov
imul
test
iret
cmp
or
pop
inc
sub
xlat
or
and
leave
cli
test
pusha
aaa
test
fs
dec
jae
into
push
sti
inc
and
imul
dec
fldenv
push
mov
xchg
rol
sahf
xor
or
or
retf
jnp
sub
mov
(bad)
sub
aad
xchg
pop
popa
pop
addr16
adc
pop
movs
rcl
mov
test
xor
sub
xor
popa
ja
aas
push
popa
mov
push
sub
mov
das
push
jbe
sbb
arpl
jnp
popa
add
inc
mov
and
popf
loope
sub
fst
test
push
cs
test
and
xchg
xor
jcxz
retf
and
push
push
pop
mov
xor
shl
test
test
lods
sub
inc
(bad)
shl
in
and
loopne
outs
rcl
ins
sbb
icebp
push
add
and
sbb
and
daa
xchg
dec
pop
and
lods
mov
jne
sub
stos
xor
mov
mov
and
aas
pop
lods
outs
sub
xor
arpl
xchg
cdq
xor
ins
in
dec
xor
or
cmp
mov
ins
aaa
lds
fcomp
mov
outs
movs
rcl
fxtract
add
or
test
push
sub
mov
mov
enter
and
ficom
cmp
lahf
dec
test
push
or
cmp
adc
ret
dec
and
lods
test
xchg
es
inc
add
dec
jb
fst
push
stos
dec
nop
aad
mov
mov
fs
fadd
lea
loope
lahf
mov
ins
add
push
and
add
or
ins
cmp
ret
mov
jne
and
adc
jno
(bad)
fmul
(bad)
jge
push
stos
push
xor
push
push
les
jge
xlat
sbb
and
jns
shl
adc
xchg
pusha
push
movs
inc
sub
inc
mov
add
dec
sbb
or
add
aaa
cmp
inc
cmp
mov
jns
fwait
pop
rcr
adc
add
and
mov
mov
imul
inc
cmp
inc
outs
shl
lds
sub
les
sub
push
mov
in
jo
sbb
push
sub
hlt
arpl
movs
mov
adc
lds
add
add
push
ret
test
xchg
fsub
sub
and
sbb
jg
dec
lea
test
adc
stos
mov
and
push
pusha
aad
fist
inc
add
mov
pop
mov
rcl
and
add
or
les
push
or
imul
rcr
test
in
push
mov
add
scas
push
fs
add
mov
adc
aaa
jge
adc
nop
mov
popa
push
xor
and
sub
jns
cdq
pop
outs
bound
js
dec
adc
sub
ret
outs
pop
mov
movs
loop
add
jno
xchg
xchg
call
mov
das
mov
add
dec
add
dec
and
and
sbb
pop
outs
dec
out
cmps
psubusw
in
pop
je
xor
cdq
shr
add
mov
pop
push
mov
lods
xor
fcomi
push
adc
push
pop
ret
mov
xchg
push
shl
stos
bound
sti
popf
jmp
add
sub
mov
inc
or
mov
or
popa
and
add
jmp
daa
sub
jo
mov
popa
rol
inc
add
dec
jb
pop
inc
mov
adc
pop
popa
sbb
mov
jg
mov
xchg
add
and
das
aad
add
adc
mov
popa
or
pop
xchg
test
sub
fnstenv
clc
or
lds
push
mov
and
or
sbb
xor
cmp
pop
pop
iret
pop
cwde
sbb
dec
dec
lods
and
cmp
adc
lods
mov
inc
test
jecxz
xor
or
fwait
add
push
sbb
sub
imul
xchg
inc
ret
(bad)
jmp
les
xchg
sbb
push
push
push
inc
shr
adc
data16
cmp
loopne
or
pusha
retf
inc
or
fadd
into
ja
add
push
stos
adc
push
outs
out
mov
movs
mov
jae
movs
fcom
mov
out
mov
inc
inc
iret
aaa
loopne
push
das
sub
rcr
jecxz
mov
mov
xchg
mov
sub
adc
pop
xor
adc
cli
cmp
int
ins
pusha
pop
mov
mov
mov
or
xchg
inc
test
cwde
stc
mov
loopne
test
outs
inc
push
mov
retf
pop
or
adc
popa
retf
mov
fs
and
ffreep
test
pop
and
jbe
push
sub
call
imul
ror
inc
test
xor
inc
test
mov
pop
out
adc
fadd
and
aas
or
inc
add
adc
div
loope
aas
mov
mov
frstor
ss
mov
mov
adc
dec
pop
inc
pop
shl
push
fisub
adc
inc
add
bound
rol
mov
sub
(bad)
fwait
ins
(bad)
xor
inc
inc
adc
push
and
jecxz
add
sub
sub
push
adc
push
ins
xor
ud1
ret
jno
fsub
xor
inc
pop
cmp
add
mov
inc
adc
loopne
cmp
or
cmp
loope
loopne
scas
xchg
sub
lods
dec
push
pop
mov
test
jae
or
rcl
out
fs
xor
jmp
add
dec
inc
rol
imul
(bad)
rcr
mov
cmp
add
(bad)
cmp
imul
mov
inc
adc
add
mov
xchg
adc
and
add
cmp
jmp
icebp
test
mov
ror
leave
aam
xor
jbe
mov
rcr
add
sbb
xor
push
dec
xor
cmp
mov
addr16
jns
push
ds
xchg
dec
xor
dec
add
and
jb
dec
and
movs
pusha
fild
mov
mov
int
imul
pop
dec
ins
lods
arpl
or
int
jne
inc
pusha
pop
adc
lea
add
fidiv
pop
addr16
adc
pop
sub
scas
arpl
fadd
sub
adc
mov
push
bound
add
push
call
adc
xor
mov
mov
and
and
lds
sbb
daa
shr
mov
cmp
xor
push
in
loopne
dec
sub
ficomp
mov
xchg
mov
lock
inc
push
ins
xchg
add
cmps
push
sbb
xor
xchg
in
inc
mov
push
sbb
push
das
adc
(bad)
rol
add
pop
shl
lea
lds
or
adc
add
dec
pop
push
aaa
or
push
arpl
xor
adc
idiv
fisttp
mov
(bad)
mov
outs
mov
ins
xor
les
push
xor
mov
out
sub
sbb
or
pop
xchg
(bad)
xchg
or
lea
sub
inc
std
leave
push
mov
bound
int
sbb
and
or
adc
out
popa
sub
mov
je
xor
add
pop
jns
inc
mov
arpl
test
xchg
fisub
dec
rol
sbb
movs
ret
or
pusha
xor
adc
jno
push
or
stos
ret
js
and
add
add
xchg
cmp
fnsave
jecxz
and
or
ins
(bad)
test
inc
xchg
mov
js
mov
nop
icebp
mov
test
push
adc
ja
push
mov
jne
lea
and
sub
movs
inc
pop
mov
ret
mov
pop
xor
jns
push
pop
inc
iret
cmp
or
pop
fisttp
outs
add
sub
rol
fsubr
jnp
lods
or
stos
mov
xor
lods
lods
mov
mov
jne
push
add
mov
mov
mov
ret
dec
sub
scas
fstp
or
or
lea
mov
mov
mov
add
add
jnp
mov
cmps
inc
add
adc
stos
lods
outs
xlat
cmp
stos
sub
les
dec
push
(bad)
and
pusha
and
mov
aad
sar
mov
and
mov
dec
mov
push
adc
or
push
dec
sti
jmp
mov
or
add
add
stos
and
add
cmp
xchg
xchg
ja
inc
adc
test
std
cmc
loop
pop
bound
inc
fadd
adc
pop
pop
sti
pop
mov
inc
mov
push
ins
dec
rcl
push
daa
aas
jg
adc
push
or
fwait
and
(bad)
dec
test
and
loope
imul
add
dec
pop
sbb
js
imul
movs
mov
and
xchg
push
push
cld
and
add
or
shl
mov
stc
jp
inc
nop
pop
sub
cmc
sub
inc
push
push
dec
aam
mov
push
imul
cdq
mov
std
test
xchg
xor
imul
mov
add
fist
jge
add
mov
pop
sbb
add
cdq
popa
or
sbb
mov
sub
dec
jae
adc
aas
jmp
mov
sbb
test
cs
ja
test
or
sub
sbb
icebp
push
lods
adc
das
mov
mov
lds
rcl
dec
add
xchg
xor
in
(bad)
sbb
pop
ins
cmp
dec
dec
cdq
add
adc
ins
xor
xchg
out
xchg
lea
inc
inc
lods
ins
std
jecxz
mov
popa
and
movs
pop
add
pusha
pop
fld
cmp
add
pop
push
nop
pop
dec
inc
push
mov
call
mov
dec
cwde
add
add
push
out
jbe
das
les
add
sub
in
pop
out
movs
add
icebp
mov
(bad)
xor
mov
cmp
xor
and
aas
cmp
aad
inc
rol
adc
mov
adc
mov
xchg
push
fnstcw
and
outs
sbb
ret
pop
ja
adc
imul
ret
mov
jecxz
adc
inc
add
dec
and
shl
ss
lea
mov
cmp
movs
jp
adc
fcom
cdq
cmp
aas
dec
and
jno
xlat
stos
sub
mov
add
mov
fadd
add
cmp
ror
inc
mov
xor
push
sbb
and
fwait
sub
jnp
outs
mov
pop
data16
(bad)
xlat
lds
(bad)
sub
ss
cmp
xor
sub
imul
inc
fld
fs
push
push
outs
jb
pusha
lds
push
inc
mov
mov
arpl
push
sub
xchg
shr
lods
xchg
arpl
xor
jmp
xchg
lea
sbb
sub
xor
and
cmps
add
sub
mov
movs
inc
xor
adc
xchg
or
ja
inc
mov
push
adc
push
shl
call
xor
mov
inc
int3
adc
inc
mov
sub
mov
xchg
dec
sub
sub
or
rcr
push
mov
mov
pop
test
sbb
add
ret
stos
ja
out
xor
pop
dec
add
scas
inc
push
sbb
popa
loop
xor
pop
ja
mov
(bad)
inc
sbb
inc
jo
sbb
sahf
and
adc
test
movs
sub
adc
sbb
xchg
in
sub
pop
popa
or
sbb
jae
ins
jecxz
xchg
mov
xchg
xor
daa
rcr
mov
mov
mov
adc
inc
push
adc
or
adc
loope
mov
sub
ins
popa
push
fs
adc
cmp
dec
jae
sub
in
mov
test
outs
or
ficom
xor
fbld
test
popf
aam
cmp
pop
mov
sub
xchg
(bad)
xchg
fld
xor
push
mov
je
fimul
mov
iret
daa
(bad)
fldenv
test
push
xor
hlt
push
pushf
push
test
sbb
rol
cmp
or
pop
push
xor
inc
movs
(bad)
mov
add
sbb
or
cmp
push
cmp
loop
mov
jno
jl
in
cs
aad
pop
sub
pop
sub
add
lods
mov
and
mov
repz
nop
or
or
(bad)
jmp
sbb
leave
sbb
adc
xor
push
and
and
pop
popa
jecxz
les
cmp
fmul
stc
jae
mov
or
stos
outs
and
mov
mov
mov
jge
mov
pop
dec
and
mov
adc
rcl
retf
adc
test
adc
and
popf
neg
test
pushf
shl
(bad)
jae
sbb
push
jg
sbb
inc
mov
or
mov
dec
add
sahf
xor
popa
mov
sbb
mov
adc
cs
mov
inc
cmp
fs
mov
and
add
mov
dec
jno
jo
das
imul
adc
xchg
dec
sbb
xor
push
inc
sbb
aad
jge
jns
jmp
pusha
and
lea
test
mov
pop
sub
sub
sbb
fwait
in
popf
xchg
pop
nop
mov
mov
ins
inc
sbb
xlat
push
inc
add
mov
adc
loopne
push
inc
jo
jo
xchg
in
imul
pop
inc
cmps
rcr
inc
or
push
cwde
and
ja
cmp
inc
pop
inc
sbb
and
(bad)
or
mov
in
cdq
inc
adc
inc
add
add
fst
xor
adc
adc
sub
ror
or
mov
pop
inc
add
sbb
mov
adc
sub
adc
jge
push
outs
pop
dec
call
inc
xchg
cdq
fdivr
nop
and
fmul
xchg
sbb
jno
sub
(bad)
outs
das
adc
cwde
and
leave
pop
(bad)
mov
sub
and
and
add
and
lea
mov
inc
xor
cmp
pop
adc
call
sbb
inc
sub
int3
adc
push
mov
dec
fild
xchg
stos
xchg
sub
imul
jnp
ins
jecxz
mov
shl
xchg
mov
mov
push
xchg
sub
adc
pop
ins
enter
jecxz
xor
pop
fbstp
mov
or
inc
mov
sub
popf
popa
les
sub
sub
sub
fld
mov
rol
pop
stos
dec
sti
and
ins
arpl
scas
pop
xor
imul
sub
adc
les
shl
mov
add
adc
xchg
mov
push
das
jb
imul
mov
into
adc
mov
xor
xor
and
add
sub
js
pop
sub
add
inc
jle
cmp
push
cmp
sbb
or
xor
lods
and
rcl
dec
addr16
sub
inc
mov
pop
and
rol
les
add
push
mov
shr
adc
adc
or
and
(bad)
mov
fstp
gs
fisttp
pusha
cmp
sub
mov
lea
inc
sub
sub
inc
pop
sub
push
sbb
and
mov
sbb
bound
nop
mov
pop
adc
xchg
arpl
popa
push
mov
add
push
loopne
ins
and
or
arpl
test
das
pusha
xor
mov
xchg
cmp
push
arpl
fild
xlat
lods
mov
popa
sbb
or
xor
add
push
aad
sub
les
or
add
pop
sub
pop
dec
adc
jge
xor
imul
mov
dec
xor
jp
sub
or
rcl
inc
pusha
mov
push
inc
mov
xor
shr
in
js
(bad)
mov
and
cmp
pop
adc
sub
sbb
add
adc
add
or
sub
ret
push
std
jecxz
pusha
adc
pop
jo
in
pop
sub
sub
and
push
mov
push
sub
push
enter
dec
sub
add
mov
pop
scas
inc
and
lds
dec
add
mov
mov
or
dec
stos
push
xor
shl
add
cmp
add
cmp
mov
or
stos
mov
mov
outs
ja
add
xchg
inc
ins
jns
and
clc
retf
popa
xchg
dec
mov
das
pop
and
inc
lods
js
sbb
push
jne
xlat
or
pop
dec
mov
inc
ret
jg
add
push
jge
inc
dec
sub
popf
mov
stos
aad
jmp
pop
(bad)
push
inc
push
gs
or
mov
mov
xor
inc
mov
inc
in
sub
mov
jns
sub
push
xchg
sub
jnp
pop
(bad)
(bad)
daa
cmp
add
xlat
dec
xor
sbb
dec
pop
inc
nop
push
sbb
or
adc
add
pop
and
jne
in
cwde
sub
cmps
xor
xchg
mov
jb
int
mov
add
test
fisttp
dec
cdq
sbb
add
or
fwait
jns
push
ror
stos
imul
xor
popa
add
retf
dec
mov
push
inc
jg
(bad)
lods
mov
sub
stos
rol
jecxz
stc
and
adc
out
popa
ins
inc
mov
outs
jno
add
mov
lahf
push
xor
fstp
mov
mov
aad
xchg
push
sub
arpl
stos
pusha
add
jg
in
adc
sub
pop
cmp
inc
test
mov
fucomp
push
retf
xchg
xor
pop
push
sbb
adc
mov
sub
and
xor
pop
outs
rol
retf
ret
push
sub
aaa
adc
mov
xchg
mov
inc
jno
add
daa
fwait
inc
movs
adc
lds
adc
bound
sbb
sbb
rcr
or
daa
test
out
lods
or
inc
xor
sub
and
add
sub
ret
pop
push
or
and
add
imul
inc
mov
das
(bad)
xor
dec
sbb
jmp
mov
test
add
and
mov
ret
movs
sub
inc
popa
test
xor
pop
and
icebp
loope
xor
imul
test
pop
push
fcomp
(bad)
jae
push
cs
mov
aaa
sbb
sub
sti
or
sub
xchg
or
or
outs
mov
bound
add
adc
mov
push
inc
mov
pop
xchg
daa
mov
sbb
inc
js
test
mov
dec
inc
fistp
inc
and
mov
jne
mov
mov
inc
add
xor
and
pop
in
movs
jb
daa
aad
or
xchg
add
push
jbe
aad
pop
push
inc
(bad)
stc
pusha
cmp
or
or
push
test
(bad)
jns
jo
js
jnp
popa
cs
loopne
inc
push
cmp
ds
bound
ins
aam
push
mov
jmp
daa
sub
or
cmp
daa
stos
loopne
push
dec
in
cmp
pop
and
and
mov
inc
test
test
ins
fiadd
inc
sub
xchg
xor
les
xor
stc
cmps
lods
retf
xchg
and
add
sub
jle
mov
int
inc
sbb
inc
xor
sub
mov
adc
xor
lock
mov
mov
cmp
xor
inc
rcr
imul
pop
mov
lods
dec
pop
xor
cwde
or
inc
push
sbb
and
popa
fmul
dec
push
or
daa
sbb
jecxz
jnp
sahf
add
mov
xchg
pop
shr
pop
les
inc
mov
push
addr16
adc
(bad)
fucomi
dec
cmp
cmc
jns
cmp
cld
and
xchg
enter
cmc
push
mov
dec
jle
pop
xchg
ss
jbe
scas
addr16
loop
inc
sbb
dec
js
jo
movaps
cmps
adc
dec
add
pop
out
jae
sbb
jge
pusha
jmp
dec
push
mov
inc
(bad)
cmp
jmp
jne
push
sti
dec
dec
mov
add
add
pop
popa
sub
mov
inc
xor
mov
ror
inc
jns
add
push
push
cmp
add
aam
xor
xor
rcr
arpl
or
or
inc
xchg
ss
nop
or
mov
lea
js
or
or
movs
retf
les
bound
ins
out
mov
push
sub
push
dec
arpl
jmp
adc
push
clc
out
pop
or
xor
or
aad
sti
cmp
loope
sbb
pop
arpl
or
push
mov
jg
loopne
int3
xchg
adc
ret
xor
lock
cmp
ret
sub
xor
sub
xor
push
xor
mov
rcr
mov
pop
jo
pop
ins
cmp
inc
cmps
cs
add
xchg
repz
fcomp
ret
imul
pop
or
fdivr
push
aad
test
fwait
dec
(bad)
push
ss
xor
ffree
cmp
jp
cwde
sub
mov
inc
aam
jne
arpl
and
inc
dec
mov
pop
jno
adc
aas
pop
out
dec
cmp
jae
jbe
out
ficomp
sub
mov
lock
imul
bound
in
jmp
pop
mov
push
or
(bad)
sbb
leave
adc
xchg
mov
adc
push
outs
xchg
xor
mov
pusha
add
mov
add
dec
xor
push
daa
imul
cmps
arpl
dec
cmp
push
xchg
mov
push
push
les
cmp
push
xor
dec
mov
adc
inc
movs
or
push
in
adc
dec
inc
rcl
iret
inc
pop
mov
mov
es
lods
mov
dec
add
les
imul
push
outs
mov
sbb
xor
or
(bad)
cmc
fs
sar
mov
ret
and
adc
lea
lods
push
inc
add
cmps
add
add
arpl
or
or
vmptrst
inc
jmp
aaa
shr
sbb
mov
lea
pop
cmp
cwde
movs
push
inc
mov
cmps
xlat
dec
inc
mov
inc
mov
imul
sbb
pop
inc
cmp
adc
mov
aad
jae
cdq
lock
xchg
adc
fmul
jmp
cmp
push
outs
inc
adc
add
mov
push
mov
aam
push
mov
xchg
lock
dec
mov
mov
fild
call
sti
mov
xchg
dec
add
mov
mov
push
vmovhpd
in
pop
add
inc
fistp
outs
stos
arpl
dec
clc
popa
loope
mov
pop
xchg
adc
push
or
xor
lods
rcl
xchg
shr
push
sbb
sub
adc
or
icebp
push
jne
push
repz
sbb
jae
pusha
mov
js
arpl
xchg
test
sbb
sbb
adc
addr16
ins
mov
aad
xor
push
adc
lods
bound
sub
sub
xchg
sub
jnp
mov
dec
lods
stos
xor
push
or
sbb
movs
xchg
add
jmp
push
(bad)
in
mov
jae
(bad)
xor
push
jnp
add
or
xor
(bad)
lods
push
leave
pop
cmp
pop
lahf
push
jns
imul
cmps
mov
add
jnp
adc
leave
inc
add
int3
mov
test
loopne
pop
fs
inc
add
outs
sub
lods
mov
bound
xchg
sub
mov
adc
and
and
and
sbb
fsubr
inc
pop
jae
sbb
mov
repz
popa
aas
iret
xor
aaa
int
push
jo
xchg
dec
or
sbb
pop
push
dec
and
push
lahf
xor
mov
and
jmp
jne
and
or
dec
stos
jns
push
xchg
push
mov
push
sub
loope
stos
push
dec
and
lods
or
add
stc
bound
pop
retf
cmp
out
xchg
inc
dec
stos
loope
lahf
pop
test
ins
and
mov
pop
mov
add
cmp
sbb
dec
push
dec
and
jg
or
les
pop
sbb
pop
add
aas
sub
scas
mov
(bad)
ins
xor
shl
xchg
or
xchg
test
push
ret
sub
adc
and
adc
pop
jns
sbb
push
pop
and
push
bound
mov
ja
and
mov
aas
lea
sbb
inc
xchg
loopne
imul
push
sub
cmp
or
mov
out
pusha
add
adc
sbb
add
popf
mov
mov
sub
sbb
pop
push
xor
mov
or
inc
ror
jno
mov
leave
cmp
pusha
inc
cmp
lods
pop
pusha
inc
fldenv
mov
mov
test
lods
sbb
push
inc
(bad)
in
xor
push
cmp
and
es
mov
lds
stos
or
(bad)
and
mov
in
push
(bad)
in
fiadd
mov
aad
stc
dec
mov
push
add
push
loope
movs
push
(bad)
iret
push
and
push
add
xor
lds
push
out
sbb
arpl
add
rcl
mov
out
xchg
xchg
xlat
cmp
adc
inc
popa
sub
push
pop
push
shr
imul
sbb
sub
mov
enter
sub
push
ds
sbb
push
mov
dec
push
pop
pop
or
sub
lahf
pop
adc
pop
test
stos
push
jecxz
cs
adc
cmc
mov
sub
ins
adc
or
adc
dec
fisub
popa
mov
aas
jmp
in
movs
adc
mov
hlt
ud2
or
cli
inc
mov
sbb
inc
adc
or
pop
adc
sbb
ins
test
popa
pop
movs
popa
push
int
fbstp
xchg
ja
add
jmp
ins
mov
xchg
mov
frstor
fwait
push
mov
mov
scas
mov
jmp
sbb
sbb
lea
sub
mov
push
test
adc
inc
dec
and
inc
xor
mov
cmp
xor
test
adc
inc
retf
iret
frstor
sbb
sub
fstp
push
and
icebp
jge
and
adc
lea
adc
and
push
adc
jne
push
outs
fild
dec
scas
mov
ror
mov
push
or
iret
popf
inc
pop
mov
sub
mov
cmc
outs
sub
jns
and
dec
mov
and
mov
out
sub
and
xchg
inc
fnstcw
push
lods
push
lds
mov
dec
jg
sub
add
test
ficomp
sbb
xor
pusha
dec
mov
es
lds
pop
push
adc
push
push
inc
arpl
pop
mov
(bad)
hlt
xchg
xor
inc
xor
daa
int3
push
and
pop
add
inc
xor
or
pop
and
dec
nop
xor
xor
(bad)
(bad)
nop
mov
dec
pushf
mov
jge
push
ja
adc
and
or
add
sub
imul
xor
mov
push
mov
pop
movs
xor
(bad)
imul
lods
xor
add
mov
mov
xor
or
sbb
mov
mov
jns
ss
pop
outs
bound
aad
(bad)
xchg
icebp
pop
sahf
int
push
sub
sbb
or
mov
mov
pop
sub
and
daa
adc
dec
add
adc
sbb
cmp
push
test
mov
movs
xchg
and
bound
push
cwde
and
retf
pop
pop
pop
test
jo
xor
push
pop
test
add
mov
add
dec
mov
or
inc
xlat
imul
cmp
imul
mov
or
xlat
xchg
pop
add
add
xchg
pop
sbb
gs
test
(bad)
retf
sub
mov
ins
adc
hlt
adc
pop
outs
scas
ror
rcr
cmp
out
mov
mov
add
adc
cmps
call
mov
ins
daa
ins
push
retf
popa
and
jg
mov
ss
ret
fild
sub
ret
pop
jnp
pop
adc
inc
add
pusha
xor
jnp
xchg
jmp
and
push
adc
rcr
push
mov
mov
mov
mov
(bad)
push
je
movs
call
add
ret
loope
adc
mov
dec
movs
cmp
inc
daa
imul
pusha
mov
inc
sub
or
sub
adc
ror
pop
pop
and
inc
mov
inc
or
into
inc
sbb
or
add
xor
and
adc
sub
popa
adc
and
(bad)
stos
sub
test
or
sub
sub
mov
inc
inc
adc
xor
sub
sub
push
xor
mov
iret
and
int
cmc
popa
rol
cdq
and
push
jge
rcl
mov
push
mov
mov
cmp
in
mov
mov
cmp
paddw
scas
push
or
xchg
or
lea
sub
push
pop
or
arpl
test
lods
fstp
and
xchg
mov
pop
movs
mov
inc
loopne
call
fist
sub
mov
pop
xchg
mov
add
and
lea
add
push
cmps
push
or
adc
addr16
jbe
sub
dec
lods
push
xchg
xlat
sub
addr16
or
dec
jae
fst
mov
xchg
fwait
dec
arpl
xchg
jns
rcl
mov
jp
clc
push
sbb
rol
ins
dec
dec
test
cmp
addr16
pusha
xor
sub
imul
mov
xor
lahf
in
jecxz
jecxz
gs
mov
adc
mov
add
(bad)
jae
or
mov
inc
mov
stos
adc
mov
jmp
xor
push
rcr
sub
xor
inc
adc
cmc
sub
add
mov
add
adc
movs
xor
xchg
dec
add
dec
push
loopne
push
adc
sti
in
repnz
add
mov
xor
retf
or
imul
mov
xor
test
pusha
sbb
add
cmp
push
add
jno
pop
jae
popf
sub
jne
jbe
push
xchg
pop
jno
in
sbb
mov
cmp
xor
jae
or
je
cmp
dec
sbb
mov
dec
dec
ret
push
fcom
test
lods
adc
bound
or
pop
sub
and
add
rcl
xchg
xchg
mov
mov
arpl
test
sub
or
mov
adc
or
push
hlt
and
inc
or
mov
adc
push
lea
les
pop
push
sbb
js
shl
mov
pop
mov
xchg
sub
jmp
inc
add
inc
xchg
or
(bad)
lea
stos
sub
jno
jmp
(bad)
stos
jmp
pop
test
add
inc
or
jmp
xchg
sbb
movs
inc
push
cmp
xchg
sbb
push
lds
and
(bad)
popa
cvtpi2ps
mov
jno
test
xlat
push
add
inc
and
mov
inc
pop
inc
arpl
pop
cmc
and
cmp
mov
and
rcl
xchg
or
xchg
punpckldq
or
and
cs
ror
pop
pop
movs
and
or
xor
xlat
push
enter
sbb
pusha
lods
add
pop
sub
jo
pop
ins
fild
shl
dec
in
mov
jg
sbb
pop
sysenter
push
mov
das
sub
call
and
adc
movs
cmp
jae
dec
jb
(bad)
rol
ret
popa
ret
xchg
pop
push
cli
add
dec
dec
arpl
pop
or
hlt
or
pop
adc
inc
jecxz
jno
mov
lock
push
xor
out
or
(bad)
xor
fucomp
xchg
cmp
mov
adc
inc
test
jmp
cmp
push
enter
sub
(bad)
pop
or
xor
adc
popf
mov
jae
std
popa
push
movs
out
test
(bad)
push
jmp
pop
fmul
data16
and
xor
imul
cwde
xchg
or
inc
sub
pop
xor
jecxz
add
sub
stos
pop
adc
adc
inc
mov
sbb
cli
or
inc
mov
add
cs
mov
and
pop
cdq
(bad)
rcl
adc
xchg
mov
push
out
aad
dec
dec
adc
mov
sub
pop
mov
imul
add
popf
lods
ror
movs
inc
sub
jae
mov
adc
mov
xor
mov
inc
and
adc
lock
or
aad
adc
xchg
inc
add
mov
test
xchg
cmp
mov
pop
aas
xlat
pop
gs
test
ins
inc
cmp
xor
inc
xchg
jmp
xor
mov
shl
cmps
jecxz
shr
les
adc
adc
test
rol
nop
xchg
outs
jmp
lahf
rcl
jecxz
add
sbb
adc
push
mov
in
mov
jb
cmp
mov
push
sub
mov
mov
and
sub
addr16
jp
or
dec
jb
xchg
fadd
inc
scas
rol
mov
sbb
jecxz
xchg
dec
loopne
inc
push
popf
aad
mov
shl
cmps
xchg
inc
or
jo
cdq
data16
and
sub
sbb
loop
jae
jp
fiadd
xchg
stc
sbb
adc
xor
sbb
test
push
push
fild
scas
push
dec
mov
leave
dec
add
mov
xor
lods
push
ror
fcomp
ror
pop
inc
sub
dec
pop
cmp
aas
ja
adc
dec
sti
push
xchg
les
xchg
mov
sbb
inc
out
movs
or
out
loope
sbb
ins
push
add
push
xchg
dec
stos
sub
jmp
xchg
add
add
sbb
sub
sar
mov
jecxz
push
pop
xor
fwait
sub
dec
test
rol
push
and
mov
neg
movs
mov
stos
add
xor
shl
fdiv
dec
cmp
push
mov
mov
xchg
sbb
jnp
outs
bound
mov
inc
add
daa
nop
fisubr
lahf
ret
ret
lods
arpl
pop
lods
and
outs
aad
pop
cs
fsub
pop
mov
jno
sub
mov
add
pop
mov
xor
mov
mov
dec
int
add
lods
ja
stos
jge
das
add
aad
jo
cmp
test
jge
mov
pop
adc
xor
lds
jmp
mov
mov
cmp
xchg
xor
adc
push
cmp
xor
sub
adc
mov
mov
test
mov
mov
and
(bad)
loope
push
push
imul
and
sbb
loope
lea
adc
movs
aaa
jne
add
jnp
cmp
pop
les
pop
stos
lods
aam
cmp
inc
add
test
sbb
add
les
retf
xchg
lods
adc
push
xor
or
and
adc
pop
ret
mov
xlat
sub
push
add
add
sbb
xor
xlat
inc
dec
outs
outs
ret
cmp
imul
out
add
retf
pop
int
bound
in
lea
sub
mov
push
adc
pop
arpl
or
rol
movs
pusha
jo
and
adc
jno
inc
cmp
xchg
inc
mov
ret
inc
xchg
inc
sub
mov
daa
cmp
les
and
xor
mov
popf
cmp
inc
fs
xchg
and
fcom
(bad)
shr
or
jns
adc
rol
xchg
nop
stos
cmp
inc
arpl
fdiv
lea
mov
cld
dec
movs
fild
mov
jbe
pop
pop
pop
xchg
(bad)
gs
sub
cs
or
adc
jbe
inc
rcr
jp
add
fs
mov
fldl2e
aam
sbb
daa
cmp
cmps
mov
out
cmp
push
outs
mov
icebp
pop
cmp
add
adc
imul
dec
xchg
aam
add
push
les
mov
xor
mov
inc
xor
or
or
mov
mov
daa
sbb
cmp
push
push
xor
and
outs
popf
add
ins
mov
mov
outs
xor
fbstp
sub
arpl
mov
je
sub
add
cdq
gs
imul
sbb
adc
(bad)
adc
xchg
sub
popa
aaa
test
jge
pop
fwait
add
(bad)
pop
cmp
pop
outs
cmp
cmp
mov
adc
sub
or
cmp
mov
dec
sub
xor
aad
jo
and
jae
jo
sbb
sbb
jnp
add
dec
arpl
test
mov
add
pop
ja
dec
loope
xchg
daa
scas
cmps
xor
mov
mov
jecxz
xor
or
loope
push
xor
and
xchg
dec
sub
inc
aad
and
cmp
fisub
in
pop
pop
mov
jo
addr16
add
addr16
push
or
dec
add
outs
push
adc
xchg
pop
mov
popa
movs
fnstsw
mov
add
xor
aam
mov
lods
jne
movs
repz
and
fsub
int
retf
call
xor
mov
inc
inc
jmp
mov
sbb
mov
call
bound
cmc
inc
add
lods
mov
or
inc
add
loope
pop
xor
popf
cdq
lds
mov
or
and
das
add
movs
cmp
add
mov
popw
cmc
(bad)
inc
imul
dec
jmp
pop
pop
mov
scas
xchg
sbb
ret
pop
ins
xor
data16
xor
jno
or
mov
xchg
cmp
mov
sub
lds
outs
adc
or
pop
jl
rcr
or
out
test
push
dec
popa
gs
test
(bad)
and
call
imul
jecxz
inc
add
sub
dec
push
dec
sar
jo
rol
movs
push
dec
(bad)
mov
dec
jo
push
sub
jmp
das
cmp
adc
pop
inc
bound
neg
popa
fneni(8087
and
push
adc
sbb
sub
adc
test
sub
movs
cmp
test
push
and
push
adc
ss
aam
(bad)
adc
fldcw
mov
or
or
dec
pop
inc
adc
inc
test
inc
sub
mov
pop
stos
popf
mov
and
push
or
inc
or
cmp
and
or
adc
(bad)
shl
rcl
je
add
xlat
inc
dec
jmp
test
fld
add
pop
adc
sub
arpl
lods
add
add
lds
movs
out
popf
imul
inc
inc
and
in
pop
and
and
dec
or
stos
pop
xchg
fld
inc
popa
in
loop
test
inc
ret
and
and
mov
push
ret
lds
sub
xchg
fcomp
pop
xchg
sub
or
or
add
pop
mov
imul
or
or
or
ins
daa
sub
sub
lods
shl
dec
sub
aaa
aas
(bad)
xor
add
inc
xor
ja
and
or
jmp
lea
popa
xor
cdq
and
ss
jne
mov
or
adc
out
jp
inc
movs
pop
adc
push
aaa
push
je
cmp
mov
std
ja
punpckhwd
clc
push
mov
(bad)
sub
pop
(bad)
fxch
loop
aaa
and
mul
mov
or
xlat
and
in
push
inc
frstor
ss
pop
mov
shr
jmp
push
sbb
arpl
push
add
sbb
adc
(bad)
shl
sub
inc
adc
dec
mov
clc
test
add
iret
cmc
xchg
cmp
cs
add
push
sub
inc
cdq
sub
pop
mov
lahf
adc
push
nop
mov
loope
add
test
xchg
xchg
stos
xchg
dec
adc
pop
not
push
test
mov
fwait
pop
adc
outs
or
repz
mov
outs
add
shr
push
fistp
sub
dec
sub
adc
sub
test
mov
inc
pop
mov
inc
mov
cwde
sub
pop
xchg
sbb
movs
xchg
stos
ins
xchg
dec
pop
mov
fadd
lea
xor
sub
sub
mov
movs
dec
or
dec
sbb
xor
inc
jge
add
push
lods
imul
adc
xor
imul
push
daa
lods
fs
add
in
jp
inc
add
push
add
ficomp
mov
pop
push
adc
and
push
sbb
sbb
sub
push
retf
sbb
shl
pop
cmp
xchg
dec
mov
inc
mov
outs
aaa
bound
fild
mov
retf
jge
pop
add
mov
les
or
push
out
inc
push
out
add
and
mov
mov
push
mov
mov
in
mov
pop
pop
ffree
loopne
and
mov
add
sub
mov
sbb
jmp
sbb
retf
rcr
dec
dec
(bad)
cmp
mov
inc
ins
jl
and
or
and
fisub
jmp
stos
add
jmp
sahf
adc
mov
sub
jno
or
mov
ret
sub
rcl
push
adc
sub
jge
dec
sbb
mov
ins
adc
jno
mov
push
test
dec
mov
popa
xchg
rcr
lds
or
and
sub
jg
or
push
rol
sub
pusha
sub
xor
add
sub
and
dec
test
or
or
and
inc
int
or
add
cmp
jne
inc
mov
test
mov
dec
jmp
popa
or
or
test
mov
rol
and
dec
add
dec
push
shl
dec
mov
add
xchg
js
push
pop
xor
icebp
push
push
and
adc
jae
and
inc
popa
jae
stos
add
sbb
dec
(bad)
sub
adc
mov
xor
cmps
add
sub
stos
ins
cmp
xor
sbb
fcomp
test
push
inc
push
(bad)
sbb
xchg
gs
dec
push
retf
ret
cmp
pop
pop
mov
movs
or
adc
lods
and
mov
imul
fist
movs
stos
jmp
add
push
xor
cdq
push
jmp
movs
mov
js
push
and
ror
xchg
cmp
out
fnstcw
add
inc
in
(bad)
xchg
je
ins
dec
push
test
mov
in
or
add
xchg
sbb
arpl
xchg
imul
(bad)
xchg
xor
dec
ret
cmp
adc
mov
je
dec
mov
jl
mov
nop
push
ror
add
or
xchg
cmp
and
cmp
or
jge
test
push
mov
imul
test
jno
adc
test
test
and
fadd
popa
sub
jne
int
cmp
test
pop
xchg
je
jg
in
mov
adc
mov
adc
jle
pop
xor
push
mov
mov
xchg
rcl
or
push
pop
test
stos
xchg
sbb
dec
lods
jno
add
mov
jns
dec
test
xor
pop
dec
sub
mov
push
xor
mov
in
test
test
scas
add
(bad)
sub
push
xchg
clc
jmp
pop
(bad)
push
mul
sub
inc
dec
mov
lea
adc
les
or
das
rcl
add
rol
and
and
js
mov
je
add
lahf
stos
inc
and
jno
lock
and
jnp
push
bound
add
stos
fcom
push
mov
mov
fist
push
cmps
xchg
adc
movs
inc
or
aad
cmp
jae
dec
mov
mov
int
push
sbb
leave
sub
push
sub
ss
mov
fs
push
xor
test
sbb
lods
rol
push
pushf
add
lods
add
fcos
adc
sub
fwait
and
add
mov
mov
mov
and
popa
setp
inc
retf
jge
jne
ror
aas
leave
mov
push
mov
pop
xchg
pop
adc
mov
pop
mov
adc
sub
push
int
dec
or
mov
xchg
pop
sbb
pop
xchg
mov
sub
add
in
neg
popa
inc
fwait
repz
sub
adc
sub
sbb
dec
(bad)
dec
dec
in
add
imul
(bad)
dec
test
sbb
bound
pusha
call
lds
push
dec
push
ins
aas
(bad)
fidiv
mov
inc
xor
add
iret
add
aam
mov
imul
sbb
jae
nop
and
adc
stos
sbb
ret
or
pop
mov
push
jne
ins
inc
sub
sti
or
mov
ja
cmp
add
outs
outs
adc
sub
mov
arpl
xor
jo
mov
ins
stos
pop
inc
add
imul
jb
pop
aas
pop
mov
or
jne
mov
and
bound
lods
xor
mov
mov
pusha
lds
or
test
loopne
js
xor
adc
cmps
push
popf
mov
mov
inc
add
cmp
rcl
adc
test
nop
loop
pop
add
mov
push
repz
sub
push
pop
(bad)
enter
sbb
add
ret
sub
xchg
icebp
imul
cmps
adc
adc
xchg
mov
sbb
sub
push
fld
sub
adc
popf
push
outs
pusha
mov
cmp
sub
arpl
arpl
pop
xchg
inc
aaa
cmp
test
sbb
movs
adc
movs
mov
xchg
out
loopne
sbb
lods
test
cmp
sub
out
sub
mov
cdq
mov
(bad)
jbe
ins
test
cs
push
sub
loopne
and
mov
push
dec
sub
(bad)
push
call
add
sbb
xchg
mov
test
or
xchg
test
cmp
add
dec
push
sub
adc
pop
add
fs
and
inc
retf
jmp
add
dec
rcl
or
or
stc
daa
pop
stos
add
pop
pop
gs
(bad)
movs
push
pop
stos
das
ins
or
popa
and
movs
inc
(bad)
and
xchg
dec
jg
sub
mov
mov
pop
add
mov
or
push
fdivr
mov
adc
pop
adc
sub
jns
push
imul
xchg
fs
or
push
inc
pop
rcr
lods
daa
test
or
aam
outs
jge
pop
xchg
xor
jmp
add
popa
shl
push
adc
push
or
push
nop
shr
or
inc
add
push
or
jbe
adc
and
add
lock
push
gs
arpl
test
cwde
inc
xchg
test
dec
cmps
push
outs
and
add
shr
sub
rol
and
xchg
add
add
int3
xor
(bad)
stos
add
icebp
pop
mov
loope
push
or
push
push
push
or
push
ins
jae
sub
and
arpl
and
xor
call
mov
fild
and
movs
inc
cmp
add
es
js
jo
clc
nop
ins
lods
pop
add
add
sbb
xor
mov
(bad)
sar
and
dec
popa
inc
mov
lea
sub
or
inc
ret
mov
mov
cmp
and
inc
dec
in
xor
das
pop
jmp
shl
add
rcr
pop
mov
pop
add
pop
ss
push
movs
in
sub
adc
add
jno
jno
and
lods
mov
mov
pop
mov
scas
leave
sub
pop
sub
inc
push
cmp
xlat
lea
xor
ficomp
add
in
push
pop
(bad)
cmp
loope
scas
inc
pop
test
das
arpl
sbb
or
loopne
sub
adc
add
add
mov
aaa
sbb
mov
mov
xor
cmp
(bad)
iret
inc
push
add
and
inc
add
xor
xor
or
fst
push
sub
cs
add
fs
jnp
jno
add
cmp
aaa
sub
imul
sub
mov
mov
xor
adc
or
adc
idiv
movs
sbb
sti
sub
xor
rcr
xchg
mov
sub
xchg
xor
push
mov
les
adc
icebp
stos
ret
pop
or
lea
and
movs
cmc
pop
dec
movs
mov
inc
add
push
jno
push
les
cmp
mov
or
ja
mov
dec
add
inc
sub
retf
rcl
stos
mov
adc
mov
and
xor
leave
test
ins
leave
fistp
shl
pusha
loop
jge
fwait
adc
xchg
aad
imul
nop
test
outs
push
or
jno
sub
push
mov
adc
cmp
add
add
mov
xor
add
xchg
push
sti
push
adc
mov
xchg
pop
mov
mov
add
lods
stos
add
mov
stc
les
push
ja
retf
shr
mov
dec
push
mov
gs
sub
adc
test
mov
test
inc
jge
dec
sub
lea
aaa
or
cmps
test
ror
xlat
mov
fisttp
xchg
and
sub
test
sbb
test
loope
(bad)
cmps
sub
ins
fild
clc
mov
xor
pop
or
mov
or
xor
jmp
mov
and
lods
div
mov
mov
cmp
mov
adc
add
or
jae
sbb
icebp
in
xchg
push
cdq
push
add
scas
mov
sbb
xchg
rcl
and
xchg
lea
data16
adc
cld
sub
ror
mov
inc
mov
push
xor
jmp
loopne
push
xchg
jo
lods
push
test
sub
add
mov
push
mov
and
clc
loopne
and
and
or
pop
sbb
jmp
movs
xchg
mov
fwait
push
ss
and
mov
push
push
mov
mov
pop
aaa
sub
or
pop
into
and
adc
arpl
mov
add
lds
test
add
test
dec
cmp
sub
(bad)
popf
pop
xor
int
das
addr16
adc
inc
dec
aad
bound
sub
test
sti
dec
outs
xor
add
mov
dec
and
mov
stos
jne
repz
mov
popa
fisttp
add
push
add
scas
or
pop
inc
rcr
dec
je
sbb
lahf
xchg
rcl
(bad)
mov
cs
sub
pop
jge
xor
or
dec
sub
popf
rcr
mov
add
or
lea
sbb
add
sbb
pop
or
push
pushf
ret
fbstp
mov
cmp
test
iret
sbb
adc
cmps
inc
mov
adc
inc
and
sbb
add
je
sub
dec
push
or
sbb
test
in
mov
lea
sub
repz
stos
mov
cmps
inc
ror
sbb
mov
lea
mov
sub
pusha
add
xlat
sub
mov
sbb
or
cmps
sub
xchg
gs
inc
aad
ja
mov
push
and
adc
mov
cmps
xchg
cmp
test
jecxz
(bad)
rol
mov
cmp
inc
call
push
retf
pusha
dec
mov
ins
dec
scas
add
pusha
or
arpl
cmp
add
add
sti
add
add
cwde
pop
add
ja
jmp
xor
test
push
and
mov
xor
fnsave
mov
arpl
pop
sti
add
mov
push
xor
add
dec
add
and
sub
add
sub
push
jg
mov
adc
lds
mov
add
sub
shl
mov
outs
xor
inc
push
ret
jmp
movs
xchg
jmp
mov
or
pop
stos
mov
mov
(bad)
inc
or
add
push
push
aad
stos
test
push
fist
or
push
sub
push
pop
sub
jb
cmp
stos
cs
xchg
add
or
cdq
inc
push
jne
adc
fisub
inc
stos
mov
sbb
push
ins
adc
xor
lea
xor
(bad)
mov
xchg
fiadd
ins
fist
mov
mov
pop
push
xor
aam
jg
lods
xor
rcl
ins
mov
mov
and
mov
add
arpl
inc
sub
sub
cmp
xor
push
and
pop
in
lds
adc
mov
imul
sub
mov
push
mov
mov
jae
mov
push
jne
xor
(bad)
and
rol
fist
in
add
in
aaa
ja
test
or
dec
or
test
or
test
imul
ret
sbb
pusha
loope
sbb
push
stos
leave
pop
es
or
or
mov
jmp
(bad)
or
mov
ins
or
sbb
stos
jb
push
adc
push
adc
ror
gs
xor
sbb
cdq
cmp
push
xor
shr
je
pop
mov
test
push
sub
ret
mov
ins
cmp
lods
cwde
ret
push
xchg
mov
or
shl
pusha
or
and
imul
pop
mov
mov
push
stos
add
and
mov
out
in
add
mov
jae
ret
add
push
pop
dec
jecxz
mov
les
je
pop
pop
mov
or
cmps
jo
pop
sub
and
pop
jmp
mov
cmp
test
mov
ins
(bad)
cwde
dec
push
push
daa
cmp
dec
retf
ins
imul
arpl
adc
mov
adc
je
xor
push
or
sbb
mov
add
movs
sbb
icebp
push
iret
push
outs
dec
ret
dec
pop
lahf
and
test
dec
pop
add
sub
call
mov
push
icebp
inc
call
fiadd
push
inc
daa
cmc
or
add
fdivr
or
mov
out
movs
dec
xchg
ds
sbb
pop
xor
sub
in
lods
fcomp
xor
and
or
xchg
test
inc
adc
pusha
add
call
outs
sbb
outs
pop
adc
inc
sbb
ret
icebp
arpl
inc
les
mov
movs
or
adc
sbb
or
arpl
ret
xlat
or
dec
adc
or
and
test
test
push
call
or
sub
es
inc
test
adc
fs
inc
inc
ins
mov
or
ror
mov
ins
jno
aas
test
mov
inc
add
lea
bound
and
rcr
add
lods
jge
or
and
popa
xor
rcl
aaa
cmp
mov
aaa
and
popa
push
add
jno
mov
lods
adc
ins
pop
(bad)
xor
push
or
cmp
lea
and
dec
adc
out
mov
inc
cdq
pop
push
push
mov
loopne
jne
loopne
das
imul
push
cmp
sbb
push
push
jns
or
and
cmp
jo
stos
jg
imul
xchg
mov
push
loope
add
int3
mov
adc
or
lock
inc
sbb
sub
nop
cmp
and
iret
addr16
arpl
inc
ret
mov
mov
lea
retf
push
add
xor
mov
add
adc
mov
xchg
pop
fiadd
pop
and
and
adc
jae
ss
mov
push
add
mov
pop
outs
loopne
and
(bad)
and
popa
push
mov
mov
or
loop
cs
int3
and
inc
inc
xor
sub
pop
lods
jo
imul
and
retf
arpl
or
add
cmp
test
pusha
push
outs
pushf
movs
inc
pop
jns
sbb
dec
punpcklwd
inc
aad
jae
add
or
xchg
nop
mov
and
ja
sbb
cdq
jp
inc
sub
in
dec
mov
dec
xchg
je
lock
jne
mov
and
shr
and
sbb
(bad)
outs
pop
add
pop
xor
fsubr
cdq
jbe
mov
sub
mov
xchg
push
cmp
ror
mov
mov
lods
push
ror
add
push
daa
mov
pop
xor
or
mov
mov
adc
sbb
cmp
and
dec
stos
retf
rol
es
pop
and
ja
mov
imul
fistp
sbb
xchg
je
lea
cmp
ss
xchg
sub
cli
or
and
cmp
leave
call
ja
sub
pop
daa
adc
daa
mov
fdiv
loop
sub
ins
cdq
sub
lods
nop
pusha
jmp
push
out
sbb
aaa
mov
les
xchg
dec
sbb
and
cmp
icebp
bound
or
and
add
mov
sbb
add
jp
jb
jmp
cmp
je
push
enter
jns
dec
sub
inc
xor
add
adc
jno
inc
ins
push
xchg
dec
outs
mov
add
inc
push
(bad)
push
fdivr
ja
adc
or
cmp
cs
xchg
sbb
sbb
test
sub
xor
xor
(bad)
and
push
jmp
enter
and
fld
mov
lods
loope
test
or
pop
mov
jcxz
movs
sbb
fiadd
sub
and
pop
jecxz
je
xchg
test
sbb
push
push
and
sbb
dec
xchg
xchg
test
or
push
sbb
and
sti
xchg
fadd
add
test
rol
and
add
add
imul
ds
mov
jne
and
dec
es
call
test
adc
add
and
pusha
imul
xchg
fldcw
xchg
icebp
test
mov
mov
ss
ret
push
add
and
test
fbstp
popa
mov
mov
sar
lahf
push
mov
call
or
add
test
jno
pop
or
dec
mov
or
pop
jmp
inc
xchg
shr
sbb
inc
mov
jno
lods
stc
xchg
dec
fimul
mov
or
xchg
push
add
arpl
mov
lods
adc
imul
rol
push
mov
xor
adc
rcl
and
bound
mov
dec
imul
lds
inc
mov
inc
pop
jmp
popa
dec
mov
jo
xchg
cmp
aad
sbb
sub
leave
add
add
push
pop
shl
das
mov
lods
inc
xor
and
push
hlt
ret
add
leave
(bad)
rol
add
and
and
arpl
test
xor
mov
push
sbb
jmp
inc
inc
add
and
outs
pop
xor
or
pusha
jg
jae
or
jge
inc
mov
push
inc
xor
mov
or
mov
stos
jns
mov
adc
inc
and
lahf
imul
sub
dec
movs
push
ins
jecxz
add
inc
and
mov
aas
stos
add
and
loope
mov
add
test
dec
pop
pusha
adc
sbb
adc
imul
daa
pop
mov
lock
pop
add
sahf
dec
cmp
ret
sub
push
mov
sbb
adc
xor
test
inc
cmp
mov
xchg
jmp
mov
cmc
push
popa
in
mov
popf
and
lock
arpl
and
enter
sub
pop
aad
cmp
ins
and
les
outs
adc
ficomp
test
add
fs
jb
push
fbld
fist
and
or
or
adc
pop
outs
popa
or
out
inc
mov
and
imul
adc
xchg
mov
(bad)
xchg
and
xchg
jns
adc
push
mov
and
jno
(bad)
xor
xor
inc
popa
and
cmp
adc
jae
test
imul
dec
xlat
stos
or
and
shl
(bad)
xchg
mov
sub
pop
inc
int
pop
ins
test
test
pop
cmp
sbb
xchg
dec
test
adc
fwait
dec
sub
rol
mov
xchg
shr
popa
imul
or
jae
push
imul
clc
xchg
inc
pop
cs
and
scas
mov
jae
jae
mov
add
mov
xchg
popa
ins
sub
add
shr
jl
sub
sub
xchg
pop
lds
push
lods
jge
jecxz
dec
inc
adc
pop
inc
arpl
add
mov
cmp
aaa
test
or
in
(bad)
sub
retf
or
pop
shl
add
das
test
mov
inc
dec
fidivr
mov
and
shr
sbb
movs
jmp
ja
popa
fist
pop
mov
(bad)
out
lods
mov
shr
pop
test
push
fcom
pop
stc
mov
jge
cmp
cmc
and
adc
push
stos
arpl
ins
sub
inc
xchg
xchg
cmp
out
test
adc
addr16
add
inc
sub
sub
shl
cmp
ret
and
shr
fxch
test
addr16
ror
mov
dec
sub
mov
lds
mov
push
or
push
xor
cmp
adc
jbe
xchg
and
mov
jae
loopne
test
inc
retf
add
lds
adc
push
mov
or
pop
pushf
lods
or
leave
or
rol
sub
mov
inc
and
test
pop
or
(bad)
xchg
daa
add
inc
adc
pop
add
lods
or
popa
sub
sbb
gs
pop
mov
sbb
in
shl
jo
dec
push
push
and
lea
add
cmc
(bad)
rcl
add
test
xchg
jecxz
dec
call
dec
push
or
jmp
fiadd
adc
xchg
dec
sbb
and
sub
cs
cs
fidivr
adc
add
cmp
data16
push
mov
xchg
(bad)
(bad)
or
inc
or
push
mov
jo
push
mov
icebp
(bad)
inc
and
ja
loop
mov
ret
or
dec
jg
adc
bound
fst
sub
and
inc
rcl
xchg
call
cmc
xor
or
and
sub
adc
and
sub
movs
jne
(bad)
mov
test
inc
adc
pop
mov
mov
sbb
out
loope
jno
mov
dec
dec
lods
mov
rcl
add
cmp
or
pop
les
ret
sub
cmp
aas
mov
lea
outs
pop
sti
shl
addr16
cmp
sbb
inc
mov
mov
add
cmp
mov
and
push
popa
mov
and
or
rcl
add
pop
sar
xor
ret
test
pop
ror
push
into
add
ins
sub
sub
jg
ror
ja
or
mov
adc
lods
and
or
add
push
xor
fld
lea
xchg
iret
dec
outs
mov
das
icebp
out
rol
pop
jp
and
mov
xor
cmp
jne
push
mov
dec
add
mov
sbb
inc
or
icebp
add
xchg
or
mov
adc
cmp
xor
mov
mov
dec
fistp
sahf
jne
pushf
outs
add
imul
arpl
dec
xchg
cmp
ret
lahf
and
sar
in
jo
shl
xchg
jno
ror
loop
shr
mov
push
stos
and
jbe
sbb
cdq
xor
jl
(bad)
xor
lods
xchg
add
mov
addr16
cmp
test
xchg
sub
test
or
movs
dec
fldenv
add
ror
xor
fsub
push
adc
or
repnz
mov
pusha
push
outs
inc
jae
sbb
ret
sub
fcom
sub
fs
xor
mov
sub
sar
pop
pop
fsub
stos
pop
fnsave
dec
mov
cmp
loope
pop
inc
or
test
aas
sbb
ror
xchg
adc
add
popa
sbb
lahf
sub
adc
movs
sbb
push
mul
or
and
jecxz
push
sub
outs
jae
imul
ja
aad
adc
loop
in
inc
jne
and
ret
push
sub
jecxz
mov
movs
cld
dec
and
inc
pusha
fist
sub
movs
push
xchg
paddusw
add
inc
pop
inc
cmp
loope
add
js
retf
dec
fcom
leave
inc
sbb
sbb
outs
leave
cmp
lahf
lods
aaa
test
das
js
test
loope
mov
xchg
jae
dec
add
(bad)
fldcw
adc
cs
retf
stos
or
fcomp
add
jbe
mov
mov
or
pop
push
into
lds
mov
mov
std
mov
cmp
dec
aas
mov
pop
icebp
or
and
scas
lods
pusha
push
inc
adc
and
ja
dec
loope
call
inc
adc
lds
lods
cmps
mov
or
mov
imul
inc
sub
aad
cmp
sub
rol
lods
cmp
test
xor
scas
xchg
fstp
mov
int
or
cmp
and
cmp
inc
and
add
mov
push
mov
fisttp
dec
movs
dec
fld
push
and
call
ret
inc
dec
push
inc
pusha
jne
xor
and
xor
dec
adc
les
retf
jne
inc
and
sbb
mov
mov
xor
push
mov
mov
mov
xchg
inc
fidiv
lods
pop
mov
mov
add
and
lea
pop
cmpxchg
loope
pop
mov
out
or
add
push
xchg
adc
or
add
rcr
and
test
and
jae
retf
and
rol
shl
stos
push
iret
or
mov
inc
pop
lds
pop
or
test
cmps
call
sbb
jns
dec
sbb
inc
pop
ins
pusha
mov
pop
cmp
jp
fs
add
fwait
and
rcl
adc
icebp
jae
adc
sar
inc
add
pop
sbb
test
outs
push
test
mov
jae
add
shl
and
jmp
rol
push
arpl
test
xchg
cmp
adc
cli
mov
(bad)
add
dec
mov
push
sbb
ja
sbb
add
and
dec
mov
(bad)
mov
jge
push
adc
push
or
xor
xor
iret
and
leave
std
shl
(bad)
and
stos
add
fwait
lods
push
mov
mov
(bad)
push
cmp
ret
jne
add
test
add
out
in
sbb
inc
or
xchg
pushf
shl
xchg
dec
imul
rol
push
inc
fcomp
inc
mov
inc
push
add
pop
inc
mov
sub
push
mov
inc
inc
cmp
rol
xchg
xor
add
daa
cmp
sub
sbb
cmp
mov
dec
das
jne
pop
xor
adc
gs
popa
sub
mov
xor
sub
outs
sbb
or
cmp
pop
jmp
sahf
sbb
or
or
sbb
sub
cmp
out
xchg
push
stos
repz
sbb
movs
inc
aad
mov
lea
test
loope
stos
mov
push
dec
push
push
mov
or
xor
pop
or
imul
(bad)
and
inc
movq
pop
mov
cdq
push
in
or
shl
sub
push
dec
xor
add
es
sbb
pop
shr
inc
xchg
xor
cmp
adc
push
add
arpl
ror
inc
mov
adc
xchg
cwde
add
ja
mov
adc
and
sub
lock
sub
jns
ret
adc
test
lods
mov
inc
test
mov
frstor
aam
(bad)
(bad)
stos
call
sbb
fwait
ja
repz
mov
mov
push
adc
ret
push
adc
movs
add
in
push
xor
mov
and
xchg
inc
adc
or
pop
jns
shl
or
rcl
or
mov
pop
lods
cwde
in
xor
mov
call
fcom
and
int
data16
sbb
add
ret
call
data16
mov
dec
test
(bad)
popa
adc
sub
adc
mov
inc
mov
lds
loopne
out
push
mov
sub
jmp
pop
adc
dec
sub
test
scas
and
sub
jnp
add
pop
sbb
inc
ret
pusha
xchg
push
dec
add
or
daa
aas
xchg
xchg
xchg
in
ins
fs
inc
(bad)
or
test
mov
dec
dec
inc
and
cdq
cmp
fstp
pop
pop
add
popa
rcl
cdq
xor
sub
jno
imul
add
add
push
push
mov
stos
push
adc
dec
test
imul
movs
push
mov
and
mov
or
mov
sub
adc
mov
jge
dec
xor
sti
and
add
loope
pop
inc
pusha
and
movs
or
lea
adc
rcr
inc
jg
mov
push
sbb
xchg
inc
inc
sub
adc
sbb
lock
lahf
dec
rol
inc
add
fmul
ficomp
dec
loope
inc
scas
in
inc
and
dec
dec
cmps
adc
adc
not
adc
xchg
or
movs
mov
pop
sub
daa
stos
pop
lods
push
sub
push
test
ret
ret
das
jne
sub
in
mov
push
lahf
cmp
mov
cld
and
pop
and
jae
dec
and
jmp
adc
loop
inc
inc
gs
es
mov
loop
adc
sbb
sbb
or
or
inc
je
pop
popf
inc
push
or
mov
adc
test
(bad)
push
mov
in
mov
fstp
and
mov
and
add
sbb
int
sbb
rcl
outs
push
dec
sub
push
mov
sub
or
inc
scas
xchg
jb
aaa
arpl
push
aad
sub
sbb
test
cdq
pushf
pop
xor
sar
inc
sbb
addr16
sub
test
js
mov
mov
add
jo
push
sub
scas
inc
jmp
nop
pop
sub
xor
les
pop
add
push
mov
mov
cmps
fwait
in
rol
adc
sbb
bound
add
mov
lods
or
and
xor
push
inc
frstor
outs
dec
or
adc
xor
and
sub
lods
in
ja
push
add
xor
cmp
inc
shr
dec
xor
aaa
dec
and
sub
inc
add
mov
lods
sbb
mov
dec
inc
das
gs
lods
(bad)
ds
dec
fwait
push
addr16
adc
xlat
adc
jns
add
xchg
ret
mov
ror
aas
in
sub
dec
bound
and
sub
stos
add
sbb
mov
adc
aaa
sub
or
add
inc
pop
pop
je
push
aad
fst
mov
push
test
mov
mov
aaa
mov
int
mov
inc
push
sbb
dec
push
imul
aam
(bad)
cli
mov
retf
int
into
inc
cld
xlat
mov
adc
or
add
sub
mov
jmp
mov
popa
or
sbb
or
jbe
push
inc
jecxz
shl
cmp
mov
int3
loop
and
sub
mov
sar
sti
xchg
or
shl
pop
xor
popf
adc
mov
fiadd
fld
push
iret
jno
push
add
popa
mov
dec
xchg
popa
std
rcr
xchg
sub
and
xor
(bad)
push
adc
stos
mov
push
js
ins
arpl
test
adc
fwait
mov
stos
sub
add
stos
fwait
mov
mov
adc
popf
pop
imul
xor
jo
aas
aam
xor
stc
sub
loop
sbb
pop
add
nop
pop
or
iret
sub
outs
pop
or
or
or
fwait
push
add
pop
xor
add
xchg
sbb
push
add
imul
and
retf
mov
adc
int
xor
mov
jl
pop
ins
jmp
rcl
sbb
add
in
rol
adc
sbb
jle
mov
push
jnp
xchg
add
or
sub
inc
or
and
fcomp
xor
xor
pushf
add
inc
dec
clc
jp
sbb
ins
inc
jno
cmp
mov
push
popa
js
cmp
sub
in
sub
cmp
dec
cmp
and
rcr
sbb
xchg
pop
js
mov
sub
pop
pop
mov
fimul
jmp
sub
cmp
dec
in
loope
test
jns
pop
add
call
add
call
sub
xor
adc
xor
add
mov
push
jno
and
sub
sub
or
add
and
push
add
sbb
mov
inc
mov
mov
shl
adc
dec
nop
stc
rol
fdivr
adc
dec
sub
dec
push
xchg
sbb
gs
arpl
pop
lds
cwde
jmp
sub
xchg
and
imul
or
scas
loop
push
mov
ror
aaa
int
add
add
add
nop
fbld
mov
inc
sbb
fbstp
loopne
lea
in
pop
dec
stos
mov
pusha
fwait
retf
inc
shl
aam
out
shr
dec
and
fnstenv
cmp
mov
(bad)
popf
ja
ins
dec
mov
xlat
jecxz
jmp
cmp
fild
mov
xor
jno
sbb
bound
mov
xlat
push
push
out
add
jo
push
xchg
test
cmp
or
shl
push
mov
sub
sub
push
sti
rcl
or
pop
arpl
jne
mov
adc
movnti
retf
adc
add
or
add
ja
sbb
mov
adc
jl
fiadd
push
or
gs
pop
les
or
add
pop
or
add
mov
xor
popf
test
imul
push
shr
xor
in
test
jo
jmp
stos
sub
mov
test
xchg
push
dec
aas
mov
mov
cmp
xchg
add
and
adc
les
or
ja
ss
jg
add
leave
jl
inc
xor
push
sbb
popa
push
and
push
sub
cdq
std
lods
push
sub
push
and
cmp
or
dec
shl
cmps
push
sti
xor
push
sbb
cmp
sub
mov
add
jne
push
rol
or
mov
les
adc
jne
xchg
mov
out
ret
fisub
rcr
or
les
inc
or
in
and
fistp
shl
sti
xchg
(bad)
dec
add
add
aad
or
sub
mov
dec
inc
inc
imul
addr16
sbb
icebp
adc
push
movs
mov
fadd
enter
sub
and
dec
imul
mov
enter
movlps
push
dec
jecxz
cmps
sub
sbb
and
mov
dec
inc
sbb
cwde
out
ja
adc
mov
cmp
and
packuswb
dec
cwde
xlat
das
idiv
outs
cmps
sub
cwde
or
inc
jp
retf
pushf
shr
leave
stc
mov
cmp
(bad)
mov
and
or
and
mov
mov
sbb
inc
xchg
cmp
mov
xchg
outs
shr
inc
dec
nop
add
sub
inc
dec
in
fisttp
cmp
xchg
sub
and
mov
pop
mov
das
mov
and
xchg
and
popf
push
(bad)
jmp
add
shr
das
sar
adc
sbb
cmp
and
in
push
sbb
push
mov
mov
sbb
(bad)
das
xchg
test
dec
loope
cs
je
dec
xor
cmps
push
dec
sub
(bad)
xchg
add
xor
les
int
sub
mov
inc
xchg
xor
lods
dec
add
add
adc
retf
add
mov
addr16
pop
mov
push
rcr
cmp
fld
inc
fcom
sbb
outs
leave
cmp
icebp
add
xchg
test
fldenv
jno
add
daa
fisubr
pop
cmp
add
and
mov
lds
pop
xchg
imul
dec
and
and
inc
dec
add
mul
imul
sbb
inc
or
mov
imul
cdq
or
adc
sub
or
shl
xchg
ror
scas
(bad)
xor
dec
sbb
inc
(bad)
cmp
cmps
sub
movs
cmp
cmp
cmc
sub
push
enter
and
pushf
ss
and
xor
push
xor
and
and
movs
xchg
loopne
arpl
ret
sbb
ficom
ret
and
jmp
or
or
movs
outs
add
cmp
repz
or
shl
mov
or
mov
sbb
inc
mov
stc
dec
ret
cwde
shr
nop
xor
mov
add
mov
xor
movs
jge
cmp
ins
sub
xchg
mov
aas
jge
adc
ficomp
inc
sub
in
fdiv
jne
arpl
adc
lahf
or
lea
jnp
test
fs
mov
lea
mov
inc
inc
dec
(bad)
cdq
dec
dec
xor
adc
pusha
inc
stos
dec
aaa
or
and
push
sub
fldcw
inc
xchg
(bad)
stos
bound
or
push
xchg
add
mov
inc
jnp
adc
jno
fiadd
(bad)
push
adc
mov
sbb
shr
ins
xchg
sub
ss
out
add
xchg
mov
adc
imul
adc
sbb
inc
mov
push
push
push
or
(bad)
xlat
repz
xor
sub
add
(bad)
or
and
sahf
jb
mov
xchg
inc
popa
inc
xor
jg
outs
test
xlat
ret
ficomp
jo
out
sub
std
js
sahf
or
mov
inc
or
retf
and
movups
ret
push
mov
push
cmp
ins
adc
cwde
sbb
adc
out
add
adc
nop
cmp
(bad)
mov
lea
lods
out
xchg
inc
sbb
popf
jecxz
push
push
test
mov
shr
les
sbb
cmps
(bad)
dec
sub
sar
xchg
test
sbb
cmps
lock
xchg
retf
lds
cmp
adc
popa
js
add
int
and
popa
arpl
mov
das
add
push
inc
mov
cmp
inc
add
jmp
popa
rol
mov
add
sub
sub
add
xlat
jns
sub
movs
loopne
std
mov
fwait
mov
dec
pop
outs
cmp
cmp
mov
inc
jo
push
jge
jmp
push
cdq
push
add
or
sub
or
mov
pop
pop
sbb
adc
mov
add
or
out
mov
cmp
push
inc
dec
enter
imul
test
cmp
xor
stos
sbb
test
sub
adc
daa
or
add
pop
jge
dec
movs
ja
xchg
push
sub
mov
inc
pop
adc
adc
push
imul
dec
inc
pop
add
and
gs
bound
pop
jmp
xor
add
add
inc
test
dec
pop
mov
movs
fsub
(bad)
pop
sub
cmp
adc
ja
and
inc
dec
mov
mov
fcmovbe
mov
arpl
pop
sbb
cmp
xor
or
adc
in
mov
arpl
sub
mov
rol
sub
and
add
ret
popf
or
dec
test
jns
add
enter
daa
xor
pop
shl
push
pop
inc
ss
add
add
xchg
and
and
dec
or
mov
and
or
and
nop
fcomp
int3
in
or
ret
rep
push
int
mov
add
shl
xor
out
je
dec
mov
movs
pop
or
push
inc
in
jns
gs
and
adc
ret
push
mov
sub
sub
mov
mov
jb
(bad)
xchg
mov
stos
cmc
sbb
push
sub
sub
sub
mov
sub
call
bound
mov
jns
and
mov
pop
mov
imul
les
and
xor
mov
jno
jge
xchg
es
inc
lods
xchg
adc
add
rol
call
and
mov
mov
rep
stos
into
rol
dec
dec
xchg
sub
push
pop
add
sbb
mov
ret
test
sbb
or
aad
sub
add
push
push
xor
in
aam
cs
dec
pop
sbb
pop
push
adc
lods
or
dec
sbb
daa
mov
pop
test
(bad)
dec
jae
dec
das
les
and
add
das
(bad)
xchg
rol
sbb
adc
sub
std
and
retf
ret
daa
es
mov
jbe
(bad)
sti
mov
mov
enter
fbld
xor
adc
dec
addr16
mov
dec
xor
pop
ret
arpl
mov
push
aam
rol
mov
adc
mov
xor
adc
sub
lods
arpl
push
jmp
push
xor
stos
mov
neg
mov
je
pop
adc
pusha
or
dec
lods
mov
sbb
std
int
mov
mov
(bad)
push
out
mov
sbb
add
push
push
mov
add
(bad)
data16
popf
sub
inc
cmp
aas
cmc
fisub
inc
lods
mov
adc
imul
sar
fisubr
(bad)
nop
xchg
test
nop
pop
add
xor
push
mov
retf
ret
xor
adc
aad
push
push
add
adc
inc
and
fwait
or
mov
int
and
inc
mov
xchg
xor
add
sbb
mov
pop
ins
and
push
fld
sub
ja
xor
pop
xchg
xchg
lods
pop
adc
gs
cs
push
adc
jnp
pop
push
movs
or
sub
push
or
add
sub
leave
mov
test
push
sub
push
mov
mov
or
test
lods
lods
je
fadd
lods
push
push
shl
sub
xor
and
pop
(bad)
mov
push
xchg
mov
cmp
and
jbe
inc
mov
mov
xchg
jbe
jecxz
test
or
das
jno
add
jge
pop
dec
inc
mov
and
adc
sub
test
dec
adc
xchg
adc
push
adc
loope
inc
dec
cdq
jb
pop
aad
lahf
not
or
arpl
xor
sub
xlat
cs
mov
add
push
mov
add
add
push
ficom
ins
and
(bad)
retf
sub
test
pop
xchg
and
push
and
mov
xchg
xor
or
and
ss
mov
xchg
ret
clc
mov
xchg
das
in
or
sbb
dec
sub
mov
dec
add
and
push
ss
adc
daa
dec
daa
xlat
(bad)
ss
aas
out
and
adc
inc
cmp
and
jmp
and
inc
shl
imul
add
mov
mov
jnp
pop
adc
cmp
xchg
sub
ins
xchg
mov
das
ins
ds
bound
mov
adc
or
jns
addr16
pusha
add
sub
xchg
loopne
or
add
or
cmp
or
and
ret
fldenv
repz
sub
mov
jo
xor
icebp
(bad)
call
sbb
jne
add
push
xchg
aam
xor
sbb
jmp
adc
adc
aaa
push
stos
in
inc
jo
mov
pop
ret
daa
inc
xchg
sub
outs
(bad)
adc
ds
xor
mov
fsubr
das
imul
aam
fadd
mov
add
into
pop
fmul
ins
pop
mov
push
inc
in
inc
dec
xor
out
push
xchg
mov
leave
cmp
shl
test
adc
add
popf
inc
add
inc
dec
loop
mov
mov
call
cwde
mov
loope
mov
adc
add
ror
sbb
push
mov
jns
mov
(bad)
adc
loope
sub
adc
adc
sub
ret
inc
sub
ds
xchg
sub
xchg
ret
pusha
cmp
push
daa
adc
out
ffreep
xchg
sti
mov
jecxz
ror
cmp
and
cmp
or
daa
bound
pusha
les
retf
aad
pop
mov
into
mov
jp
sub
dec
jge
call
push
aaa
add
mov
sahf
lea
mov
and
push
xchg
push
loop
data16
sub
adc
rcl
dec
inc
push
mov
sbb
adc
dec
add
dec
cmp
or
jbe
adc
cmp
sbb
or
jge
clc
sbb
pop
cmp
int
enter
push
lahf
fiadd
mov
xchg
sahf
or
or
xchg
and
push
cmp
in
cmp
lea
inc
mov
push
or
inc
je
dec
push
cmp
popa
push
add
inc
jp
inc
mov
sub
adc
or
xor
or
dec
sbb
add
(bad)
shl
fld
test
push
cwde
or
inc
popa
adc
adc
and
add
cmps
xor
adc
rol
xor
mov
dec
lods
test
and
add
loopne
das
cmp
imul
xor
nop
sti
add
adc
dec
jnp
sbb
dec
mov
xor
pusha
and
int3
rcl
sub
push
sbb
push
sub
not
enter
xor
out
or
sub
mov
mov
sub
xor
mov
add
push
xor
mov
inc
and
jne
mov
push
adc
aam
jg
dec
sub
icebp
sub
ins
push
sar
mov
sub
cmp
cmp
pop
ins
aad
pop
mov
xor
aaa
icebp
mov
xor
jno
icebp
xor
jge
add
add
(bad)
fisubr
inc
inc
add
fs
xor
inc
inc
scas
sub
or
sub
xor
movs
lock
sub
(bad)
sahf
mov
aas
pop
(bad)
aad
mov
pusha
das
add
rol
enter
adc
adc
mov
inc
scas
cmps
ds
mov
add
std
aad
jno
les
xor
gs
adc
xor
pop
add
xor
test
das
cmp
jle
addr16
pop
sub
loop
or
jnp
cmp
fstp
retf
inc
inc
cmp
sub
test
sub
or
ds
add
sub
dec
pop
jo
sbb
pop
or
cs
cwde
cmp
mov
jmp
sub
and
mov
ficom
pop
cmp
je
add
pop
pusha
dec
mov
add
or
add
adc
sub
sub
movq
jno
pop
sbb
ins
xor
mov
enter
pop
fmul
rcl
(bad)
sub
pusha
lods
or
stc
pop
or
xor
jno
fimul
mov
arpl
sbb
sbb
add
add
pop
loope
inc
inc
dec
cmp
out
mov
ins
je
mov
into
jecxz
mov
dec
add
inc
je
push
push
inc
push
xor
and
js
pop
jecxz
loope
lea
jno
stos
and
pushf
and
sub
(bad)
add
cmp
add
bound
sub
sub
iret
sub
adc
add
dec
or
add
pusha
add
(bad)
add
imul
nop
or
xchg
mov
push
scas
sbb
or
arpl
lods
fidivr
or
dec
xchg
das
ins
frstor
push
push
fwait
mov
stc
jno
ffree
inc
jne
sub
push
inc
or
or
sub
jno
adc
inc
pop
add
sbb
dec
ret
sar
call
daa
add
push
jge
push
mov
cs
add
push
hlt
cmp
and
or
xor
pop
xlat
xor
inc
retf
pop
inc
(bad)
js
sub
es
in
cmp
inc
xor
lock
xor
and
pop
pop
mov
push
mov
cmp
jl
inc
cmp
jbe
push
pop
out
and
push
pop
in
push
out
dec
adc
call
and
xor
popa
add
retf
push
(bad)
or
inc
sbb
movs
push
push
push
retf
xor
and
shr
inc
xor
push
sbb
xor
jp
jge
das
movs
je
push
enter
xlat
pop
adc
sub
jne
pop
fcomp
and
jo
and
xchg
dec
std
arpl
pop
add
or
fcom
or
lods
ins
aaa
cmp
dec
xor
mov
mov
pop
jo
or
sbb
enter
xchg
movs
call
jmp
mov
dec
pop
cmp
mov
out
jl
push
push
inc
xor
sbb
adc
mov
xchg
in
inc
xchg
xor
mov
aam
xor
xchg
mov
and
pop
and
xchg
add
dec
push
inc
imul
out
push
pop
outs
mov
jge
cmp
cmp
pop
adc
dec
jnp
fsubr
and
sub
xchg
cdq
pop
sar
sub
adc
dec
hlt
push
and
sbb
cmp
bound
dec
call
or
out
xor
adc
inc
mov
mov
pop
fsub
xchg
mov
push
cmp
add
and
out
push
cmc
add
dec
fwait
inc
dec
adc
xor
retf
dec
inc
cmp
test
pop
xor
je
rol
rcr
or
cld
adc
pop
cmp
push
fs
sbb
adc
es
sbb
pop
jne
or
clc
(bad)
outs
jnp
out
ss
mov
jns
and
adc
imul
and
inc
pop
lds
sbb
inc
mov
pop
rcl
mov
xchg
cs
dec
push
dec
add
xchg
outs
xchg
jl
or
jmp
and
popa
adc
add
in
ss
outs
push
jmp
inc
dec
(bad)
inc
and
sbb
jmp
mov
lahf
push
enter
iret
cs
loop
sbb
mov
cmp
mov
sub
imul
pop
and
pop
pop
or
fsub
mov
popa
and
mov
pusha
shl
add
mov
cmp
or
jl
outs
cmp
cmp
mov
or
inc
inc
add
dec
fist
sti
adc
sti
adc
inc
test
bound
add
cmp
adc
or
or
mov
les
sub
or
push
cmp
pop
mov
adc
sbb
xchg
dec
sub
bnd
and
push
mov
sub
xchg
xchg
or
push
sub
dec
adc
outs
je
ret
push
test
and
lea
adc
and
pop
adc
pop
ret
mov
jae
xor
push
fidiv
outs
mov
xchg
pop
and
(bad)
js
arpl
add
adc
inc
test
push
adc
ins
fsub
xor
aad
scas
arpl
mov
sbb
loop
inc
pop
xor
or
adc
adc
inc
cdq
pop
inc
pop
or
or
cmp
enter
or
jmp
popa
mov
inc
rep
cmp
add
inc
fcom
inc
call
shl
(bad)
xchg
xor
or
xchg
and
adc
and
sbb
push
inc
sbb
fldenv
daa
pop
cmp
dec
cmp
lods
(bad)
pop
mov
rol
pop
test
test
lahf
sbb
arpl
sbb
cmp
jo
dec
cmp
jg
add
cmps
mov
aas
lea
xchg
mov
popa
and
(bad)
imul
xchg
inc
inc
bound
xchg
inc
mov
imul
add
sbb
mov
mov
pop
jae
loope
mov
(bad)
loop
pop
push
sbb
lods
xchg
popa
sbb
cmp
gs
and
sub
push
dec
and
jae
dec
add
mov
popa
mov
mov
lods
mov
out
jnp
shr
dec
popf
jae
mov
jae
add
in
adc
test
arpl
push
adc
inc
push
imul
push
add
xlat
wbinvd
add
inc
mov
xchg
fdivr
test
and
xlat
dec
cwde
and
dec
(bad)
inc
stos
rcl
loope
and
(bad)
cwde
or
cwde
adc
add
std
mov
xor
mov
and
and
mov
std
xchg
stos
add
pusha
lea
lods
sub
inc
inc
and
dec
inc
sub
mov
add
mov
mov
inc
xor
jmp
or
add
sbb
rol
push
mov
sbb
add
jmp
into
push
add
dec
in
or
adc
stos
push
lods
or
push
loope
cmp
inc
daa
add
icebp
jb
or
dec
retf
iret
adc
test
aad
fist
jns
cmp
sub
imul
jl
push
sub
and
imul
mov
add
fidiv
daa
pop
inc
mov
vcmpss
jns
push
push
cmps
cs
sub
xchg
je
sub
popa
pop
int
lock
(bad)
popa
sub
jo
add
add
or
inc
add
sbb
jb
xor
and
popa
cmp
pop
mov
leave
ja
sbb
mov
fwait
or
aas
popw
push
cmps
adc
sub
pop
pop
mov
cmp
leave
movs
and
in
xor
ins
xor
adc
icebp
fnsave
rol
mov
inc
sub
arpl
or
daa
dec
or
push
data16
sbb
sub
les
mov
popa
ss
dec
pushf
test
jmp
daa
rcr
xor
pop
mov
or
lea
push
mov
xlat
xchg
push
inc
rol
arpl
push
push
push
lods
or
in
(bad)
or
stos
xchg
inc
push
dec
mov
arpl
adc
shl
jle
sbb
fadd
outs
or
adc
jne
test
test
sbb
fnsave
stos
arpl
jge
pop
cmps
fnstenv
pop
push
pop
xchg
bound
or
mov
mov
cmp
sub
sub
inc
stos
add
add
cmp
mov
xchg
jb
icebp
inc
rcl
sub
add
enter
jmp
push
xchg
and
sub
and
pusha
loope
sub
retf
dec
xlat
jno
xor
and
movs
call
mov
adc
ins
mov
adc
and
add
(bad)
mov
imul
pop
ds
and
aas
imul
jbe
xor
pop
and
(bad)
push
sub
xor
or
and
mov
dec
xchg
daa
jne
cmps
and
(bad)
(bad)
sbb
and
xchg
sbb
arpl
leave
jnp
(bad)
push
xor
ror
daa
stos
pop
ins
adc
jns
shr
cmp
pop
cmp
mov
rcl
mov
rcl
and
pop
pop
adc
xor
sbb
in
pop
xlat
sub
loop
jnp
jae
cmp
dec
cmp
nop
jnp
adc
jecxz
add
stos
jo
adc
pop
mov
fbld
sbb
push
ret
scas
mov
movs
nop
xchg
stc
xor
mov
push
mov
lods
mov
mov
lock
and
les
loope
xor
jg
mov
fwait
pop
dec
xor
dec
cmp
(bad)
in
pop
jge
jmp
mov
cdq
in
les
sbb
pop
xor
inc
cs
test
lea
xor
dec
frstor
and
adc
and
xchg
and
jge
out
add
retf
dec
call
push
cwde
aas
sub
pop
shr
and
inc
div
stos
pop
xor
call
add
and
inc
fwait
ret
add
and
sub
adc
or
push
sbb
shl
sub
push
sub
mov
and
fiadd
xchg
nop
inc
push
loope
ja
stc
add
push
jecxz
popa
mov
add
add
ins
daa
cmp
sbb
xchg
mov
adc
popa
les
sub
imul
dec
xchg
lods
push
ret
dec
push
jmp
sub
pop
inc
inc
pop
(bad)
popf
jo
mov
mov
test
(bad)
and
stc
mov
inc
lea
out
inc
cmp
xchg
pop
sub
sbb
lea
sub
(bad)
stc
push
movs
and
ret
scas
sub
imul
sti
push
bound
mov
stos
inc
add
dec
xor
pop
push
pop
pop
test
mov
mov
push
push
push
loope
in
xor
push
stos
mov
jge
add
cwde
in
rol
dec
call
(bad)
push
ins
lea
cmp
shl
jne
pop
dec
or
inc
and
shl
cmp
and
sbb
mov
push
es
rcr
bound
test
lods
repz
stos
stos
or
push
fstp
pop
lea
jmp
or
add
out
or
rcl
lods
or
inc
(bad)
out
push
sub
adc
jmp
push
xor
gs
dec
in
imul
and
(bad)
inc
imul
dec
adc
cmp
jae
aam
xor
and
xchg
pusha
push
je
popf
les
and
aaa
inc
push
add
add
and
mov
pop
mov
inc
sub
sub
mov
ret
pushf
push
popa
adc
dec
cwde
mov
and
mov
pop
nop
dec
adc
sbb
jle
inc
pusha
push
or
ss
mov
and
pop
cmp
xchg
push
loopne
push
adc
inc
lods
in
jae
dec
mov
fstp
mov
add
jl
inc
push
jb
arpl
nop
dec
push
inc
push
mov
sub
loopne
or
pop
sub
dec
inc
inc
jbe
push
ins
mov
or
push
mov
cmp
test
push
push
adc
add
inc
ins
and
popf
pop
inc
push
pop
xchg
pop
outs
nop
cli
cmps
push
pop
loope
or
sbb
adc
or
inc
xchg
inc
or
xchg
mov
jo
sbb
fld
mov
sub
mov
or
test
lods
das
sub
mov
pop
xchg
or
push
or
dec
neg
push
xor
or
push
and
rcl
rol
(bad)
pusha
sub
sbb
ror
fisttp
xchg
popf
push
lods
or
push
adc
shr
rcl
mov
cs
jno
xor
inc
in
mov
(bad)
mov
add
adc
ins
cmp
(bad)
sbb
and
fiadd
and
mov
aam
mov
lods
jns
inc
xchg
adc
dec
xor
sti
mov
sbb
add
mov
fld
rcr
push
loop
push
xor
add
mov
xchg
jmp
rol
xor
les
bound
adc
xchg
rcr
inc
dec
or
inc
push
cwde
mov
sbb
sub
sbb
cmp
adc
xor
adc
or
push
pop
in
aaa
mov
push
mov
pop
add
cmp
inc
sbb
les
inc
add
leave
out
add
and
sti
ja
imul
inc
sbb
mov
daa
sub
(bad)
sub
fist
mov
and
adc
pop
shl
add
mov
sbb
arpl
cmp
mov
inc
rcr
fsub
inc
mov
cmp
ja
cdq
and
jnp
scas
jae
adc
lods
add
jge
aam
push
dec
xor
adc
ret
fcom
popf
mov
dec
pop
xchg
dec
inc
push
test
or
arpl
cmp
ins
pop
mov
xchg
enter
inc
mov
cmp
and
push
pop
xchg
jg
(bad)
dec
arpl
jnp
jno
inc
jmp
xor
push
jbe
adc
gs
or
adc
add
jne
xlat
retf
dec
(bad)
fcmovnb
iret
and
push
jns
or
xor
imul
arpl
mov
inc
pop
sub
fcom
imul
xor
repnz
adc
pop
xor
popf
adc
mov
ja
inc
mov
mov
rol
adc
jns
jmp
inc
mov
jb
mov
adc
xor
adc
cmp
cmp
pop
or
or
add
dec
sbb
lahf
mov
and
inc
test
mov
inc
mov
ins
xchg
cmp
ins
xor
ins
cmp
call
stos
and
mov
leave
stos
popa
push
test
add
add
test
push
xor
xchg
dec
xor
scas
inc
lahf
lods
gs
or
cmp
lods
and
pusha
xchg
push
and
xor
sbb
sub
and
inc
push
jecxz
inc
add
(bad)
push
test
fnstcw
imul
or
ror
in
push
add
or
outs
sbb
xchg
fs
jge
adc
pop
movs
aas
inc
jne
inc
add
pop
and
jle
adc
or
add
mov
std
jnp
sub
push
cs
cdq
and
shl
sbb
sub
ins
xor
pop
jecxz
(bad)
sub
or
sub
(bad)
mov
aam
(bad)
push
ja
and
aam
push
add
out
ins
push
cdq
pop
add
xchg
xchg
inc
dec
and
loopne
pop
push
dec
outs
mov
or
xor
outs
or
cwde
xchg
pop
test
xor
mov
mov
ja
xor
add
jo
call
cmp
inc
cmp
arpl
ret
lahf
in
cmps
bound
inc
sub
mov
arpl
cs
fild
mov
xchg
lods
loopne
mov
ins
mov
pop
shl
mov
jae
mov
inc
mov
mov
arpl
sub
dec
mov
pop
sub
sbb
adc
dec
mov
lods
mov
shr
jo
xor
leave
and
lods
pop
call
xchg
mov
add
inc
mov
das
lahf
(bad)
dec
mov
dec
jns
cmps
movs
inc
daa
jecxz
push
or
push
and
inc
inc
sbb
lods
ss
inc
sbb
jne
sub
adc
sbb
sub
lahf
lea
jno
fwait
ins
add
jae
mov
push
ret
sbb
cmp
cs
aam
sub
mov
or
sahf
out
sub
push
or
scas
xchg
pusha
xchg
jne
xchg
js
adc
arpl
cwde
dec
add
dec
out
test
jecxz
add
adc
inc
lods
pop
add
pop
(bad)
sub
xor
cmp
or
and
mov
mov
mov
push
sub
loopne
xchg
jmp
sbb
add
or
sbb
rol
nop
rcl
iret
push
sbb
inc
sub
pop
inc
add
sbb
loope
pop
inc
dec
adc
xchg
(bad)
arpl
pusha
or
loopne
sub
push
push
mov
lahf
js
sbb
sub
sbb
mov
add
pop
test
jo
jecxz
mov
adc
into
sub
mov
dec
xor
adc
xor
xor
lea
imul
or
inc
cmp
mov
jbe
pop
xor
sbb
mov
ja
imul
sbb
add
fisubr
dec
test
mov
adc
dec
shl
inc
push
mov
mov
bound
push
or
xchg
mov
mov
or
sub
inc
sbb
mov
fisub
cmp
or
xchg
call
and
adc
aaa
add
cmps
sub
outs
mov
jmp
inc
dec
in
mov
adc
jmp
pop
push
and
mov
movs
test
leave
test
das
push
jae
outs
xchg
push
mov
pop
loopne
xor
mov
(bad)
push
fild
bound
bound
sub
(bad)
(bad)
ret
jge
ret
dec
inc
jns
mov
adc
ficomp
xor
pop
mov
stc
and
or
mov
push
xor
gs
pop
push
xor
push
addr16
sbb
cs
(bad)
ins
dec
pusha
inc
sahf
jno
add
ret
or
add
mov
sbb
retf
pop
ret
test
gs
inc
sbb
or
add
add
jbe
dec
jmp
in
sbb
mov
sub
add
push
jle
push
jo
jecxz
pop
adc
push
adc
and
push
hlt
movs
xor
sbb
clc
and
mov
mov
fstp
aas
fbld
xor
push
cwde
fs
inc
ss
imul
pop
shl
or
cmovge
sub
cmp
and
jno
mov
sbb
rcl
and
ror
adc
int
nop
pop
rcr
stc
or
dec
pop
pop
xchg
popf
inc
inc
leave
add
pop
fld
pop
jno
mov
and
adc
or
mov
pop
sbb
inc
shrd
mov
mov
pop
fst
fld
mov
add
fadd
xor
mov
es
icebp
dec
xor
pop
mov
jne
pusha
ins
mov
xor
cmp
mov
mov
ins
dec
add
and
dec
stos
adc
push
int
push
pop
and
lds
or
lods
xor
mov
jl
test
loopne
popa
in
ret
fwait
add
int
and
adc
ins
jecxz
sub
imul
dec
(bad)
aas
je
call
xchg
dec
jo
(bad)
push
movs
(bad)
add
sub
setae
jnp
mov
mov
cs
xchg
fs
test
or
dec
fst
mov
out
loop
arpl
and
dec
xchg
xor
fistp
add
mov
mov
push
outs
daa
inc
lods
add
test
out
inc
sbb
inc
sbb
aad
mov
loope
cmp
(bad)
sti
push
das
imul
and
xor
sub
and
push
and
and
mov
mov
mov
pusha
fnstenv
jp
gs
xor
das
movs
add
fidiv
cmc
pop
push
les
aas
cmp
inc
test
pop
pop
push
dec
mov
iret
xchg
ret
adc
sbb
(bad)
push
sbb
and
fimul
jmp
sub
mov
leave
rcr
scas
sub
das
ss
outs
sub
mov
sar
(bad)
cmp
seta
(bad)
adc
daa
loope
inc
and
and
pop
mov
pop
mov
ins
andps
adc
jae
inc
outs
mov
push
push
test
dec
bound
dec
inc
fld
inc
jmp
add
cdq
mov
ffreep
scas
popf
jge
cwde
xor
xlat
inc
push
xchg
cs
adc
dec
adc
mov
jl
and
gs
xor
rcl
or
push
inc
fiadd
lods
jg
in
push
dec
and
push
jo
mov
add
leave
pop
sbb
shr
push
or
daa
sbb
lock
or
in
xchg
add
push
mov
test
ja
bound
lock
push
movs
movs
stos
mov
sub
xchg
push
push
pop
mov
jmp
sbb
mul
and
pusha
cmp
mov
push
adc
stos
call
cdq
mov
add
xchg
fnstcw
add
mov
outs
sbb
bound
xor
cmp
mov
push
gs
outs
and
ret
mov
ror
call
add
adc
or
add
and
mov
ffreep
jne
and
sbb
not
ins
mov
inc
sbb
clc
sbb
add
(bad)
ja
xor
ss
xchg
xor
outs
sbb
lds
adc
mov
cwde
mov
jnp
arpl
cmps
xchg
movs
arpl
dec
and
(bad)
int
dec
push
add
sub
sub
push
dec
or
inc
stos
and
push
fnstcw
sbb
cmc
cmp
add
sti
out
push
mov
int3
inc
xor
mov
sub
mov
xlat
sub
bound
out
loopne
mov
cdq
mov
or
scas
adc
pop
add
mov
hlt
pop
arpl
mov
adc
sbb
sbb
push
jmp
scas
ficomp
aaa
lods
movs
jge
dec
mov
lods
pop
ret
add
jne
sar
ret
ins
movs
arpl
mov
cmp
in
xchg
add
mov
jno
adc
jmp
idiv
pop
add
leave
ret
daa
adc
pop
pop
shl
arpl
lock
or
sub
bound
xchg
or
sub
or
jmp
mov
or
add
xchg
inc
pop
inc
inc
dec
inc
outs
add
add
add
ins
xchg
inc
or
dec
or
jns
arpl
and
dec
push
inc
mov
sbb
lods
(bad)
sti
mov
dec
call
(bad)
push
shl
jge
xlat
xlat
mov
ret
popa
test
push
test
xchg
dec
fbld
pop
jmp
jg
mov
xchg
pop
xchg
xor
mov
pusha
mov
mov
or
in
test
push
adc
cmps
fnstcw
jae
mov
std
and
retf
dec
add
dec
nop
jmp
xchg
outs
leave
dec
les
xor
or
lods
pop
inc
mov
lods
fwait
or
js
cdq
inc
mov
daa
sbb
imul
pusha
xchg
dec
pusha
or
dec
das
retf
adc
add
sub
cmp
pop
sub
push
dec
pop
sbb
and
fldenv
add
push
pop
cmp
and
pop
jo
inc
scas
stos
scas
xor
mov
adc
jge
imul
sbb
mov
and
loope
mov
push
push
jae
test
xchg
sbb
mov
mov
mov
push
mov
mov
inc
xchg
mov
adc
jne
sti
and
adc
cmp
nop
mov
adc
rol
in
and
and
ins
sub
mov
ins
jns
mov
(bad)
and
sub
imul
imul
gs
jmp
lods
stos
out
pop
imul
xor
xchg
popa
push
fsub
jp
dec
adc
dec
test
or
or
popa
lahf
xlat
mov
adc
test
out
add
dec
mov
sub
pop
mov
inc
(bad)
repnz
mov
std
mov
adc
xchg
ror
inc
test
dec
(bad)
cmp
sub
mov
bound
ss
mov
cmp
(bad)
xor
(bad)
sub
jmp
and
lds
xor
in
xchg
rcr
shr
inc
sub
add
movs
(bad)
outs
das
sbb
xchg
(bad)
sub
mov
(bad)
bound
xchg
jns
inc
or
pop
inc
jo
mov
outs
mov
loop
add
test
mov
xchg
or
ins
xchg
popa
(bad)
mov
inc
jecxz
add
or
mov
push
and
aad
(bad)
cmps
xor
pop
or
(bad)
xchg
(bad)
fs
call
popa
sub
mov
dec
add
mov
ins
add
inc
sti
add
sub
sti
push
test
inc
and
xchg
pop
sub
cmps
aas
push
ret
sbb
or
add
lds
or
popf
add
jecxz
pop
add
int
pop
sub
or
pusha
inc
daa
sbb
and
add
mov
daa
push
cmp
or
mov
popf
or
daa
in
mov
das
ins
ret
sub
pop
and
add
dec
loop
cs
sub
int
mov
jmp
and
or
fwait
pop
pushf
xchg
mov
hlt
xor
mov
mov
sub
sbb
mov
call
cmp
dec
mov
mov
sti
cld
ins
push
jmp
inc
adc
fisttp
test
inc
xchg
or
add
adc
adc
sbb
sub
cmc
stc
mov
adc
pop
adc
add
sub
sbb
jecxz
push
ror
mov
sbb
dec
test
mov
(bad)
mov
(bad)
popf
dec
ins
loopne
xor
mov
(bad)
call
and
inc
daa
dec
les
pop
bts
inc
push
xchg
mov
pop
xor
mov
es
cmp
add
inc
cmp
xchg
inc
lods
das
pop
test
dec
or
add
inc
or
sub
shl
daa
add
imul
or
xor
sti
inc
pushf
lods
cmp
aas
or
cs
into
cmp
cmp
sub
rcl
adc
xor
rcr
inc
and
pop
fiadd
add
pusha
adc
and
pop
sbb
fistp
push
mov
mov
aas
test
and
sahf
ret
stos
cmc
outs
aaa
sub
sbb
sti
dec
sub
jg
pop
sbb
or
and
mov
xor
xor
and
pop
fild
mov
and
adc
imul
sub
xchg
lahf
movs
jo
mov
jmp
into
adc
or
pop
shl
or
push
and
cmp
mov
and
mov
add
xchg
and
mov
rol
push
adc
mov
add
in
test
fnstsw
call
lods
add
jb
and
push
inc
cmp
je
nop
xchg
or
mov
mov
add
cmp
js
fwait
aam
pop
mov
mov
mov
out
and
ucomiss
lods
mov
lea
retf
adc
(bad)
fistp
push
sub
sbb
add
inc
sub
push
or
test
nop
or
add
push
or
mov
mov
inc
push
xor
mov
ins
or
pusha
dec
(bad)
mov
add
nop
mov
lods
movs
push
add
adc
stos
sub
addr16
add
add
mov
out
push
add
das
das
xchg
dec
lods
adc
xchg
cmp
or
fwait
movs
push
lods
sahf
loope
repz
mov
call
add
sub
retf
imul
or
inc
sub
jnp
pop
bound
dec
adc
aam
sbb
lahf
adc
cdq
push
fld
push
xor
outs
or
adc
jae
rcl
lods
mov
cmp
icebp
dec
jmp
inc
ja
sbb
jecxz
ss
lds
test
xor
add
fwait
adc
sbb
xor
repz
mov
cmps
mov
neg
push
inc
popf
push
ja
mov
jle
push
lods
dec
add
and
shl
adc
jno
xchg
ret
mov
xor
inc
out
and
mov
ins
test
push
imul
shr
mov
imul
jmp
inc
jbe
push
mov
cmps
pusha
xor
and
push
cmp
mov
lea
add
or
mov
cdq
pop
jns
lds
mov
call
adc
fcomp
(bad)
pop
mov
sub
sub
mov
movs
pop
mov
jo
pop
sbb
sbb
mov
mov
imul
or
or
call
test
ins
xlat
shl
rcl
jbe
pop
inc
mov
sub
pusha
adc
mov
push
mov
xchg
mov
jbe
shl
in
jmp
in
shr
adc
test
popf
movs
or
aad
arpl
sub
push
outs
or
sub
xor
cmp
cmp
dec
xor
lahf
inc
ins
or
div
pop
and
adc
add
and
mov
push
mov
mov
aas
pop
adc
mov
jg
pop
xchg
sbb
add
add
loop
or
nop
sbb
adc
and
and
pop
stos
sbb
mov
test
sbb
pop
mov
pop
inc
push
xor
retf
xor
adc
ss
add
sub
repz
inc
daa
pop
lds
(bad)
aad
add
xchg
sbb
or
or
mov
in
mov
xchg
adc
xor
fst
int3
pop
xor
jge
adc
push
add
mov
imul
add
mov
aam
arpl
jo
push
mov
and
sub
xchg
xchg
push
fild
pushf
adc
imul
test
mov
bound
ret
and
test
push
adc
lods
adc
aad
cdq
call
jns
pushf
lods
push
xchg
rol
movs
xor
xor
outs
jno
adc
pop
jmp
inc
cmp
adc
mov
in
sub
data16
inc
or
mov
dec
rcr
adc
fucomip
and
adc
les
xchg
push
fld
les
push
jecxz
cmp
xor
ret
inc
add
ja
pop
ins
adc
mov
fstp
or
sbb
sbb
adc
mov
mov
cmp
shl
sub
aas
imul
push
mov
push
rol
mov
aad
dec
pop
(bad)
adc
mov
loope
and
pop
stos
ret
icebp
add
jge
add
xchg
xor
pop
sub
dec
pop
and
inc
ret
inc
jo
stc
rol
and
dec
push
mov
mov
inc
adc
push
mov
mov
les
les
inc
ds
movs
push
dec
aaa
push
test
xor
ins
xchg
pop
aas
cmp
xor
push
push
fcomp
cdq
sbb
lods
add
movs
icebp
loope
mov
add
sahf
push
seto
sub
or
popf
xor
add
add
lds
aam
loope
leave
pop
stos
and
mov
cmp
stos
(bad)
in
std
cmp
lods
xor
frstor
pop
mov
inc
mov
test
add
aas
sbb
fisubr
or
add
xor
sti
into
sub
out
mov
stc
cmp
sahf
pop
(bad)
sbb
push
jg
test
add
sub
dec
sub
jne
push
mov
and
push
mov
jl
jge
push
popf
xchg
add
adc
adc
sub
subps
and
and
push
adc
adc
push
test
popa
cmp
and
push
inc
xchg
std
lods
int
and
imul
sbb
mov
ret
fld
jmp
push
lock
stc
cmp
mov
mov
add
fwait
nop
adc
mov
mov
in
mov
nop
cdq
jp
add
test
push
loop
(bad)
pop
mov
push
adc
dec
push
cdq
pop
and
and
inc
or
add
(bad)
adc
pop
ss
aad
or
dec
or
std
and
aad
das
rol
test
fidiv
mov
iret
push
and
xor
inc
sti
jne
adc
call
mov
es
inc
jnp
jge
adc
push
cmp
lahf
add
and
or
mov
pop
aad
popa
pushf
jno
sub
sbb
sbb
xor
pop
popa
fisubr
jecxz
push
xchg
and
and
or
test
and
and
retf
and
jns
push
jecxz
adc
stos
retf
cdq
loope
and
xor
out
adc
adc
and
mov
arpl
inc
xlat
gs
wrmsr
retf
pop
xchg
inc
add
movs
and
adc
mov
sub
pusha
fld
imul
and
add
add
ins
(bad)
popa
pop
mov
or
mov
ins
popa
in
push
push
ss
(bad)
push
call
les
movs
push
dec
push
inc
mov
aaa
mov
adc
dec
sbb
push
xchg
movs
pop
imul
adc
inc
movs
cmp
daa
xchg
mov
inc
dec
push
push
add
or
ror
(bad)
jbe
addr16
call
jl
xchg
dec
les
lahf
imul
aam
frstor
xchg
cs
movs
sub
jb
xchg
(bad)
ficomp
xor
test
sub
es
adc
dec
sub
xchg
mov
lods
mov
leave
es
sub
dec
clc
mov
pop
and
pop
sbb
daa
shl
cmps
add
xor
pop
xchg
hlt
mov
xor
add
push
ja
pop
add
retf
leave
mov
sub
fist
nop
into
ins
xchg
and
or
mov
mov
lea
push
sub
sbb
push
sub
or
(bad)
ins
popa
test
or
enter
inc
xchg
or
fisttp
mov
xor
shl
int
scas
test
or
std
sub
es
inc
xor
push
mov
fistp
jns
push
or
pop
adc
add
adc
aaa
imul
dec
mov
and
rcl
pop
stos
dec
jg
jae
shr
pop
fwait
pusha
ins
or
imul
inc
pop
cmp
add
lds
cs
mov
pop
jmp
in
pop
sbb
xchg
push
out
lea
je
pop
retf
inc
sbb
(bad)
rcl
add
rcr
push
or
outs
xchg
xchg
(bad)
xor
adc
loopne
add
dec
btc
add
(bad)
add
and
mov
jae
test
inc
mov
lods
mov
xchg
mov
call
push
sub
sub
shr
sub
mov
pop
test
sbb
popa
jne
mov
lods
cmp
jge
pop
push
pop
popf
and
and
fcom
in
push
add
ins
jle
push
retf
imul
ins
test
mov
add
push
and
jnp
mov
ins
and
mov
add
push
pop
das
cmp
xchg
adc
jmp
mov
shl
push
mul
aam
pushf
test
mov
push
(bad)
loopne
pusha
inc
dec
and
mov
aas
mov
sbb
mov
mov
aaa
pop
pusha
dec
inc
stos
add
sbb
sbb
gs
inc
stos
mov
push
test
out
or
sbb
push
shl
dec
xor
fsub
add
add
clc
ret
pop
xchg
and
jbe
xchg
push
or
jns
adc
mov
push
xor
fmul
inc
and
or
popa
movs
imul
inc
push
adc
mov
xchg
adc
dec
popa
sti
push
inc
sub
sub
mov
cwde
lods
cdq
daa
pop
dec
add
pop
jbe
add
scas
sub
inc
mov
push
xchg
jmp
jae
push
pop
(bad)
fs
or
imul
mov
dec
push
cmps
sbb
or
data16
mov
pop
scas
add
xor
mov
cdq
out
lea
sbb
add
jge
or
test
push
das
arpl
popa
addr16
lods
inc
pop
std
mov
cmp
jns
mov
jmp
or
mov
xchg
(bad)
test
cmp
cmp
pop
leave
int3
ret
and
pushf
add
push
xchg
retf
and
lock
data16
and
sbb
add
add
adc
test
ss
push
sub
add
imul
adc
or
dec
int
push
push
add
icebp
push
dec
cdq
push
and
int
sub
das
or
jge
ror
jne
inc
and
inc
mov
loop
mov
push
add
pop
add
sbb
push
leave
adc
mov
push
push
dec
outs
mov
adc
inc
test
xchg
and
ret
test
lods
aad
inc
inc
mov
cmp
mov
adc
pop
les
fldcw
push
and
ror
test
and
push
xor
cmp
add
inc
and
dec
pop
cmp
dec
adc
jge
ins
push
(bad)
fiadd
xor
imul
sub
cmp
dec
inc
imul
adc
sub
popa
rcr
and
jno
jae
push
adc
movs
shl
cdq
inc
sbb
sbb
movs
pop
loope
xchg
xchg
pop
or
nop
(bad)
mov
or
sub
pop
jmp
inc
pop
adc
scas
push
cmp
jne
mov
mov
lods
xor
inc
xor
jg
retf
dec
push
mov
or
xchg
mov
or
add
mov
sbb
xor
cmps
fsub
fmul
iret
int
ds
add
movs
test
cmovge
mov
in
add
or
out
or
cmp
dec
mov
nop
les
inc
sbb
cs
add
imul
sub
and
dec
stos
pop
mov
fild
inc
jns
xor
pop
(bad)
sub
lods
mov
jecxz
cdq
cmp
(bad)
sbb
xchg
mov
add
jl
outs
lods
je
test
cmp
sub
bound
and
adc
push
sub
and
jns
cmps
push
inc
mov
pop
mov
int
pop
pop
push
sub
iret
add
or
jo
mov
push
fwait
sub
mov
adc
push
jl
add
test
add
xor
and
mov
imul
movs
adc
lahf
test
xchg
popa
push
rcr
add
pop
sti
and
cs
sub
popa
fisubr
push
lods
or
jbe
test
pusha
mov
sbb
adc
or
fadd
movs
inc
mov
xchg
mov
(bad)
gs
les
lea
ins
stos
outs
or
dec
xor
adc
jns
xor
xchg
movs
mov
cmp
adc
and
or
arpl
call
mov
adc
test
addr16
sbb
inc
scas
push
pop
test
int3
push
in
movs
cwde
mov
push
pop
mov
sub
mov
les
ja
ret
and
fadd
fild
inc
aaa
dec
xchg
mov
push
pop
inc
xchg
inc
sbb
popf
add
in
xor
sub
arpl
sbb
mov
xor
or
and
mov
int
or
add
in
mov
into
adc
mov
sub
dec
loope
mov
int3
xor
push
add
mov
jno
mov
popa
test
sub
ins
sub
addr16
inc
pop
push
mov
sub
aam
adc
lea
and
inc
cs
adc
adc
ds
stos
ret
jne
jp
or
jmp
add
cmc
or
sar
or
or
push
jp
xor
imul
push
rcl
outs
ror
jmp
aad
iret
out
sub
jecxz
jae
push
mov
dec
and
add
and
or
fwait
adc
mov
xchg
scas
or
push
jo
std
and
xchg
xchg
xor
xor
push
xor
xchg
pop
jno
push
or
jge
scas
add
and
adc
icebp
cmps
xor
fidivr
and
lods
sub
(bad)
inc
jae
mov
or
arpl
or
mov
adc
repz
inc
stos
popf
mov
jo
fsub
xchg
push
mov
mov
cmps
pop
xchg
dec
pop
dec
js
jns
js
sbb
movs
sar
adc
or
push
jne
xor
cmp
xor
add
frstor
and
adc
cmps
sub
lods
adc
pop
cmps
jmp
out
inc
sub
lods
jmp
inc
jmp
jae
dec
aaa
test
mov
add
sbb
sub
adc
cmps
repz
inc
xchg
sub
add
jno
mov
sub
pushf
adc
fld
jne
xchg
and
cmp
pop
das
dec
or
fdiv
pop
xchg
push
int
push
or
addr16
sbb
dec
pop
sti
mov
stos
xchg
jae
sub
scas
and
xor
xchg
or
jmp
sbb
jl
adc
fcomp
lds
lea
sub
movs
mov
call
xchg
lea
pop
or
push
lahf
stos
test
sbb
stos
arpl
and
adc
test
or
add
sbb
xchg
test
sar
lea
shl
push
cmp
xor
imul
arpl
dec
push
pop
and
pusha
pop
cs
pop
cmc
das
mov
add
mov
rol
jne
mov
inc
push
cmp
push
mov
repnz
or
inc
test
rcr
ins
dec
xor
jbe
lds
pop
cmp
out
std
mov
imul
or
add
jl
mov
adc
cmp
sbb
icebp
sub
dec
xor
lods
add
shl
cs
adc
jmp
pop
sbb
ret
sub
imul
xchg
adc
in
mov
sub
rol
lds
out
xchg
push
lods
iret
rol
push
xchg
cmps
lods
dec
call
xor
or
xchg
mov
sahf
sti
xlat
mov
test
mov
xor
add
and
(bad)
mov
dec
jge
xchg
push
fdiv
push
jne
and
mov
push
sub
push
in
jp
or
fcomp
test
and
and
popa
and
and
mov
pop
shl
std
scas
or
call
mov
pop
test
imul
sbb
inc
mov
inc
aaa
movs
inc
in
pop
jmp
jb
(bad)
sub
add
add
push
sub
lods
arpl
pusha
sbb
mov
sar
add
outs
sub
fcom
push
or
xchg
ins
cmp
inc
jnp
adc
sub
sub
pop
sub
les
push
cmc
add
sub
adc
das
sbb
pop
xor
outs
and
mov
repz
stos
or
mov
mov
out
mov
das
and
jg
inc
imul
mov
imul
(bad)
mov
cmp
bound
mov
test
fsub
or
sbb
rol
jbe
sub
mov
inc
sbb
push
xor
mov
sub
pop
xchg
shl
xor
shr
pop
imul
xchg
in
jne
call
cmp
adc
pusha
loopne
push
sub
sub
or
and
mov
popa
push
(bad)
pop
cmc
and
leave
sub
inc
stos
inc
rcl
push
sbb
dec
xchg
push
sbb
sub
inc
movs
pop
in
push
sbb
lods
test
xchg
test
lods
pusha
les
push
add
push
adc
and
mov
push
dec
lea
stc
adc
pop
mov
xor
mov
dec
add
adc
xor
add
mov
sub
xor
pop
cmps
push
sub
cmp
es
imul
inc
mov
in
pop
(bad)
or
add
xor
xor
arpl
das
pushf
inc
cdq
sub
aaa
ja
ins
pop
and
cmp
or
or
adc
or
sub
sahf
sub
mov
and
push
mov
and
or
test
cmp
js
movs
cmp
loope
pop
repz
adc
adc
sbb
dec
mov
sub
sub
jge
ret
jmp
mov
mov
mov
jnp
ret
(bad)
leave
cdq
xor
and
mov
rcl
and
and
push
or
pop
cmp
inc
and
inc
or
sbb
dec
sub
push
xchg
xor
and
add
mov
jb
jge
sahf
rcr
push
push
push
push
bound
pop
es
ins
add
dec
loopne
jns
aas
jne
nop
fistp
imul
adc
adc
push
popf
and
sbb
fwait
xchg
sbb
dec
or
pop
ins
ins
add
and
in
cs
add
sbb
push
cmp
add
test
aas
addr16
rol
daa
jg
ja
test
mov
mov
and
xor
xchg
push
les
ret
or
mov
mov
call
mov
sub
jnp
push
adc
mov
ins
movs
inc
inc
pop
adc
cmp
or
movs
nop
cmp
push
leave
dec
mov
mov
mov
adc
or
add
mov
sbb
push
dec
sbb
stos
cmp
(bad)
fwait
jmp
cmp
push
cmp
push
pop
jecxz
aas
or
push
sub
jmp
inc
sub
jns
(bad)
or
push
js
add
xchg
and
aad
aam
icebp
and
(bad)
pop
xchg
push
mov
and
lea
rcr
push
dec
inc
add
ror
fwait
jge
inc
push
xchg
mov
popa
ror
movs
add
ja
and
bound
scas
and
sub
adc
push
sar
adc
and
pop
cmp
loope
popf
mov
(bad)
jb
cmc
sti
ins
ins
das
add
int3
std
xlat
xor
xchg
test
test
or
inc
mov
and
fcmovb
loopne
push
inc
imul
movs
cmp
push
sub
add
mov
sub
cmp
pushf
pop
cmp
sub
cmp
test
and
xor
push
fwait
mov
cmps
xor
sub
pop
shl
movs
add
xchg
sub
dec
and
rcr
xor
or
movs
test
add
shl
xchg
cmp
adc
pop
or
(bad)
pop
adc
push
ret
pop
lods
dec
stos
loope
add
rcl
loop
push
xor
xor
add
das
fsub
dec
out
mov
jge
inc
mov
push
nop
das
ja
or
and
pop
test
lds
pop
pop
pop
sbb
jge
inc
inc
je
or
imul
pop
idiv
or
and
xor
pop
sti
sbb
or
adc
add
or
add
inc
outs
pop
sub
pushf
dec
mov
mov
jbe
ins
lahf
je
addr16
and
jmp
sub
or
ret
sub
bound
gs
or
aad
js
xor
cs
inc
adc
xchg
xchg
push
xor
jb
and
push
nop
cmp
jae
mov
jp
push
in
sub
ret
cmp
or
popa
lods
pop
popf
inc
(bad)
or
fs
push
imul
jnp
adc
sub
add
fisub
rcl
(bad)
(bad)
cs
sub
loop
add
and
push
lods
mov
push
push
and
sar
sbb
sub
add
xor
pop
js
popa
mov
fnstenv
ss
(bad)
ja
and
pop
je
xlat
ret
sub
icebp
push
add
dec
test
xchg
shl
jns
sub
and
out
mov
sub
repz
daa
dec
mov
lods
iret
jo
xor
jecxz
or
or
gs
and
sbb
xchg
outs
mov
std
mov
or
out
shr
or
add
sub
ja
test
adc
or
adc
cmp
xor
cmp
xor
push
sub
sbb
cmp
retf
ror
add
push
ror
lods
sar
add
mov
push
sbb
test
or
inc
sub
or
push
pop
adc
out
dec
mov
or
jns
add
(bad)
ss
xor
inc
(bad)
aad
xor
stos
add
xor
xchg
jae
sub
shl
add
test
sbb
data16
in
sub
dec
xchg
push
sub
in
mov
jl
or
xchg
cdq
xor
push
xlat
or
mov
test
ja
loop
loop
pop
or
xchg
enter
xor
or
mov
es
xchg
mov
mov
pop
mov
imul
retf
push
cmps
lods
ja
or
mov
add
lods
add
mov
rcl
shr
inc
repz
dec
ret
test
call
jo
push
cmp
mov
dec
adc
fsubr
pop
pop
and
adc
fldcw
jge
dec
shl
push
mov
adc
sbb
pop
push
jmp
rcl
call
icebp
inc
pop
sbb
les
bound
sub
and
stos
pop
xchg
sbb
sbb
ja
jo
fwait
and
js
fwait
pop
and
jmp
push
or
xchg
arpl
sub
pusha
sbb
adc
mov
js
xor
jge
push
jmp
bound
mov
fsubr
imul
or
or
cmps
and
inc
bound
dec
xchg
rol
rol
ret
loop
cs
dec
jno
adc
sub
(bad)
mov
mov
dec
mov
push
and
mov
out
dec
jnp
aaa
daa
cmp
push
aas
add
jno
leave
mov
push
jns
mov
(bad)
or
nop
cmp
adc
imul
nop
shl
sub
jbe
xchg
sub
add
ins
iret
or
bound
sub
xor
ins
mov
popa
and
mov
inc
adc
movs
mov
sbb
sub
bound
(bad)
mov
outs
lahf
lea
push
in
shr
sub
or
xchg
xor
push
stos
pop
sub
aas
bound
sub
iret
ss
xchg
and
sbb
cmp
stc
adc
and
inc
movs
add
mov
pop
inc
xchg
dec
dec
or
push
iret
fwait
push
ins
push
pushw
sub
inc
inc
cmp
dec
xchg
scas
retf
mov
fistp
imul
aaa
mov
ret
mov
movs
ins
and
imul
call
lods
cmp
sub
imul
test
sub
and
push
sbb
nop
sub
and
pusha
jns
movs
add
js
adc
ds
test
sbb
xor
cmp
push
and
lds
and
and
inc
xchg
int
fsubr
push
xor
inc
aas
popa
cmp
jno
inc
pushf
fist
mov
scas
sbb
adc
cmps
mov
fmul
push
mov
sub
pusha
add
cmp
mov
dec
out
xchg
sti
cdq
call
xor
jnp
dec
adc
cmps
cmovnp
icebp
lods
inc
mov
inc
add
xchg
and
and
and
sbb
mov
add
or
(bad)
lods
push
add
fimul
jne
pop
or
adc
movs
ret
iret
push
enter
pop
xchg
lods
push
(bad)
popa
mov
xchg
xchg
push
and
(bad)
xor
push
add
mov
fnstsw
cmc
fwait
xchg
sub
mov
outs
xchg
leave
sbb
add
mov
mov
adc
push
mov
shr
sbb
pop
or
mov
bound
or
adc
xor
push
mov
mov
add
push
dec
pop
ins
push
aad
(bad)
mov
mov
out
and
and
outs
dec
jge
rcl
(bad)
xor
or
xor
add
mov
and
addr16
push
pop
add
sbb
lods
xor
mov
stos
adc
push
pop
inc
pop
jae
xchg
or
push
push
cmp
adc
imul
test
imul
hlt
call
imul
adc
pusha
xor
repz
adc
dec
xchg
xchg
lahf
shr
dec
mov
lea
ins
mov
ins
xor
add
jb
xor
add
push
js
xor
jle
ss
ins
add
dec
dec
test
inc
and
leave
cmp
sub
mov
mov
daa
dec
ret
ret
and
adc
adc
frstor
inc
push
call
jns
and
stc
mov
push
out
fisttp
fadd
scas
add
mul
dec
push
mov
outs
and
xchg
std
movs
or
cmp
sbb
sub
sbb
add
in
popf
pop
fisubr
clc
jbe
jmp
sbb
and
mov
or
jno
dec
jl
xor
pop
and
inc
push
xchg
retf
sar
jle
rol
lds
lock
xor
adc
cmp
stc
stos
dec
add
imul
daa
jnp
dec
rcl
dec
adc
push
jo
adc
mov
push
in
retf
rcr
or
in
add
xor
cmp
sub
int
or
and
mov
add
lea
sub
lods
sub
push
add
sub
imul
or
xchg
sbb
cmp
or
lock
bound
mov
popa
sar
and
dec
cmp
rcl
ror
mov
rcl
mov
pop
xlat
mov
addr16
sub
dec
sbb
lods
push
xlat
shl
jno
call
dec
and
dec
sbb
pop
retf
push
sbb
popa
push
movs
dec
movs
neg
and
int
movs
outs
push
add
sub
pop
add
mov
push
lods
mov
cmps
jge
jg
and
pop
pop
add
into
nop
pop
inc
xor
jne
lea
and
outs
imul
test
jecxz
leave
sbb
retf
jmp
(bad)
mov
lods
fistp
fld
aad
pop
mov
or
test
or
fdiv
(bad)
push
outs
das
sub
aam
add
push
(bad)
push
jo
push
adc
int
add
inc
movs
icebp
mov
in
or
adc
mov
lahf
imul
ja
sbb
xor
ins
sub
int3
inc
loopne
or
add
test
or
jnp
mov
test
mov
or
dec
xchg
add
mov
jno
mov
retf
sub
scas
inc
and
push
inc
bound
or
inc
dec
sub
loope
pop
inc
sub
add
fsubr
sbb
in
add
sub
and
push
xchg
outs
sub
mov
xchg
cwde
push
jno
das
push
and
loopne
jne
mov
or
push
jns
push
adc
fwait
(bad)
cmc
cmp
movs
pop
xchg
ins
jo
(bad)
stc
add
xor
sbb
xchg
(bad)
imul
bound
outs
aas
add
in
sub
shl
or
into
and
or
aaa
add
push
pusha
mov
mov
push
pop
or
adc
mov
les
or
pop
mul
data16
cmp
imul
dec
mov
imul
push
inc
cwde
push
pop
and
adc
pop
or
push
xchg
mov
sahf
lds
sbb
push
inc
inc
xchg
mov
inc
jmp
push
aad
pop
add
xchg
add
cwde
lock
add
ins
pop
mov
arpl
jp
outs
xchg
mov
sub
jg
bound
mov
inc
pop
lods
xchg
sub
pop
arpl
fwait
mov
fdiv
adc
imul
js
jno
sub
mov
sbb
mov
imul
adc
adc
adc
(bad)
ret
jnp
or
or
mov
push
add
loope
xchg
xchg
test
sbb
imul
pop
mov
ss
sbb
adc
pop
add
outs
push
cmp
mov
addr16
pop
and
inc
inc
sub
ins
popa
das
push
xor
stos
pop
sub
inc
shr
fbld
outs
inc
inc
dec
imul
into
pop
jb
and
jae
jbe
ins
sbb
jbe
mov
mov
dec
(bad)
jae
jno
test
xor
imul
ja
iret
sub
or
jl
aas
pop
cmp
cmp
xor
bound
jns
loop
lods
cmp
scas
and
je
sub
push
movs
adc
call
clc
(bad)
data16
push
pop
hlt
jg
pop
imul
jo
sub
test
push
add
add
pop
test
inc
daa
loopne
mov
setns
sbb
stos
je
push
or
cmc
or
xor
xchg
adc
sbb
mov
inc
inc
sub
add
mov
cmp
shr
mov
dec
sbb
popa
dec
jno
lods
test
push
cmp
and
push
pop
hlt
mov
inc
mov
dec
fisttp
xor
inc
lock
inc
push
sbb
mov
cmp
sbb
xchg
jae
xor
jne
inc
push
adc
dec
arpl
xchg
mov
iret
lahf
sti
jmp
xchg
bound
mov
push
pop
sub
xor
or
mov
sub
xchg
ss
mov
and
jae
add
(bad)
rcr
mov
movs
mov
pop
cvtpi2ps
sbb
jno
sub
cwde
adc
mov
push
lods
ins
jecxz
push
sbb
je
pushf
fsubr
mov
sub
inc
xor
pusha
add
mov
cli
xor
lods
out
popa
jbe
outs
cmp
xor
leave
mov
cmc
repz
fisubr
sub
mov
adc
das
inc
jp
cmps
retf
ficom
int
mov
addps
pop
cmp
adc
sbb
fwait
xchg
jo
imul
rol
mov
arpl
xchg
mov
adc
mov
add
xchg
and
fidivr
hlt
lock
popa
or
(bad)
aad
and
pop
shr
pusha
adc
and
pop
mov
jns
jecxz
xchg
icebp
ja
imul
arpl
pop
or
mov
cmp
push
jge
in
int3
ret
jnp
(bad)
retf
shr
inc
sbb
dec
add
outs
test
(bad)
sub
add
scas
retf
inc
jmp
and
cmp
sbb
add
dec
fadd
hlt
dec
sub
jmp
xor
or
or
gs
jne
mov
adc
test
adc
in
push
imul
cmp
mov
inc
fmul
sub
inc
push
pop
loope
or
sub
scas
aaa
mov
dec
xor
je
inc
add
mov
adc
lea
jmp
inc
or
sbb
sbb
xchg
cmp
cmp
cs
dec
dec
out
ins
pushf
sub
gs
repz
sbb
sbb
je
and
xor
iret
sbb
sub
rcr
push
pop
pop
push
das
jge
inc
and
sub
aas
mov
cmp
xor
jge
xchg
add
pop
jo
call
inc
stos
xor
inc
bound
adc
daa
push
imul
fld
add
int
xor
and
push
dec
sub
cli
mov
adc
stos
shr
xchg
sbb
repz
push
inc
sbb
or
dec
stos
adc
or
xor
test
ret
sub
push
mov
add
cmp
loopne
pop
inc
mov
int
dec
add
add
imul
or
cmp
pop
or
aad
add
sub
xchg
add
mov
das
adc
sub
pop
scas
rcl
dec
xchg
cmc
mov
mov
add
arpl
mov
pusha
or
sub
cmp
sub
js
jbe
ret
xchg
test
popf
or
adc
mov
out
add
jo
fisttp
mov
mov
sub
mov
ins
adc
xor
and
xchg
retf
or
dec
dec
xor
nop
int
les
dec
mov
push
dec
in
add
or
movs
mov
icebp
dec
inc
push
mov
add
and
dec
rcr
stos
add
inc
adc
mov
aas
lods
test
xchg
mov
adc
or
dec
movs
(bad)
mov
cmovge
inc
xchg
or
xchg
int
dec
cmp
dec
adc
dec
sub
add
dec
rcl
lea
push
mov
cvtps2pd
sahf
scas
and
or
inc
jge
and
mov
jmp
cs
es
cmp
push
xchg
(bad)
sar
jae
and
cmps
and
jne
imul
sti
add
and
inc
sbb
cmp
add
inc
adc
push
and
imul
rol
pavgb
xor
add
lods
inc
xchg
lahf
je
pop
inc
aam
pop
inc
adc
mov
mov
mov
pop
(bad)
jne
pop
pop
sub
add
dec
sub
pop
pusha
xchg
nop
xchg
mov
adc
dec
push
add
and
sub
or
push
xchg
dec
repz
mov
aam
sbb
push
push
xor
mov
lea
rcl
or
dec
and
sub
sbb
xor
push
inc
aas
test
push
in
ret
mov
ins
xor
fstp
sub
xor
and
ins
repz
cmp
xor
jns
fcom
adc
and
adc
sbb
mov
bound
pop
lds
pop
scas
movs
and
xor
jbe
mov
test
in
imul
loop
xor
inc
scas
fcom
mov
dec
adc
cmp
fnstsw
jge
mov
sbb
fistp
stos
cmp
and
adc
ret
inc
xchg
lods
ja
jns
ins
or
sub
sub
inc
sub
mov
imul
or
int
xchg
ins
adc
pop
adc
inc
xchg
xchg
sbb
push
in
fwait
pop
cdq
(bad)
or
(bad)
shr
(bad)
jge
pop
mov
dec
or
mov
pop
mov
ja
xor
inc
loope
push
sub
xor
test
ja
in
sub
and
push
or
lahf
jae
inc
(bad)
pop
(bad)
mov
mov
mov
lock
popa
jmp
sub
lods
add
mov
iret
and
pusha
pop
pop
push
and
jnp
sub
sub
inc
and
sub
sbb
popa
add
push
push
xchg
push
push
pcmpeqb
dec
or
and
sub
xchg
inc
mov
test
dec
lahf
pop
push
rcl
cmp
ins
sub
scas
cmp
or
icebp
sub
cmp
add
daa
add
bound
jmp
outs
movhps
inc
mov
or
sub
push
int
adc
push
test
hlt
nop
pop
stc
ins
adc
inc
adc
pop
or
xlat
mov
lds
mov
and
add
fwait
cmp
sub
das
dec
push
test
or
out
outs
xadd
cmp
bound
and
mov
push
call
fwait
popf
enter
dec
fisttp
add
sub
movs
add
mov
mov
and
cmps
test
(bad)
xlat
sub
xchg
or
dec
adc
sub
int
dec
or
dec
test
and
das
xchg
outs
ss
aam
mov
pop
push
cmp
cmps
inc
rcl
movs
adc
mov
movs
daa
jge
push
mov
aam
dec
xor
lds
sub
and
pop
push
jge
scas
bound
jge
or
adc
add
or
xchg
out
and
sub
inc
dec
pop
repnz
movs
inc
xchg
xchg
stos
sbb
mov
xchg
add
adc
mov
retf
jecxz
mov
mov
lahf
jno
or
inc
mov
jae
or
or
add
push
dec
movs
fimul
fcom
sub
mov
cmp
dec
or
cmps
ret
fst
mov
cmps
cmp
mov
add
or
inc
imul
mov
cmp
cmp
sbb
push
xor
push
ja
inc
xor
es
pop
jae
lea
or
sub
in
add
dec
xor
push
or
out
push
add
mov
inc
aad
sub
jb
test
xor
cmp
xchg
adc
mov
or
leave
adc
push
ins
inc
xor
add
push
movs
inc
mov
inc
inc
xchg
adc
dec
sbb
movs
add
inc
inc
imul
inc
fisttp
adc
aad
sub
adc
or
inc
sub
sub
loope
movs
shl
push
sub
jbe
scas
dec
sub
stos
jge
add
pop
push
adc
repz
bound
mov
mov
and
mov
add
sbb
aad
xchg
push
adc
xor
mov
pop
xchg
js
jnp
adc
sub
push
xchg
xchg
add
pop
loop
sub
inc
pop
cwde
out
push
popa
les
sbb
stos
cmp
dec
fadd
jne
(bad)
mov
mov
pop
and
and
leave
fadd
xor
push
inc
jno
(bad)
sub
test
gs
rcl
imul
cli
adc
mov
sahf
cli
sub
jmp
fnstcw
bound
repz
sbb
popf
test
push
jae
push
adc
inc
(bad)
es
das
push
pop
fwait
push
mov
test
mov
bound
outs
push
adc
es
mov
dec
in
ja
inc
and
xor
adc
adc
nop
daa
inc
pop
pop
retf
xlat
mov
inc
out
push
xor
and
adc
dec
inc
lds
dec
mov
jo
push
jge
imul
sbb
sahf
fisub
and
ret
(bad)
call
data16
sti
loop
call
jne
outs
mov
out
push
sar
inc
gs
jmp
ror
imul
pop
xor
addr16
or
movs
adc
ficom
leave
ds
lods
inc
sub
sbb
jb
cmp
and
and
dec
ret
bound
mov
dec
mov
add
pusha
add
outs
daa
add
push
dec
xchg
fnsave
and
or
fld
ret
mov
cmp
stos
fs
or
jg
cmps
cwde
sbb
test
iret
lahf
dec
add
or
out
xchg
das
jb
or
push
jne
cmp
jge
(bad)
enter
stos
dec
push
sbb
fisubr
dec
data16
pop
dec
add
jle
and
mov
mov
mov
test
fadd
into
out
(bad)
in
add
or
push
in
in
inc
add
add
mov
add
add
mov
pusha
fdivr
push
ss
mov
push
mov
lds
in
push
dec
sbb
cwde
add
dec
sub
fisttp
inc
add
lea
add
push
mov
loop
xchg
shl
pop
pop
rol
push
xor
add
pop
lock
inc
mov
push
(bad)
mul
call
jl
adc
jo
or
les
jne
sbb
jnp
mov
push
jmp
add
in
jns
ins
push
fisubr
shl
push
call
mov
fsubr
rol
dec
sub
and
add
inc
dec
push
stc
mov
popf
xor
in
xor
sub
test
pusha
sbb
adc
and
xor
in
out
jmp
das
das
fldenv
xor
xor
jnp
and
xchg
and
xchg
adc
lods
sar
xchg
inc
xor
jb
add
daa
xchg
inc
jl
and
in
adc
pop
adc
movs
jb
rol
adc
pop
mov
pop
loope
aam
add
jns
dec
inc
iret
cmp
call
push
mov
dec
test
gs
jb
mov
mov
es
and
or
xor
add
data16
sbb
call
jne
push
pop
lea
loopne
fist
mov
xchg
stc
or
mov
mov
sbb
ins
loopne
xor
and
rcl
inc
push
es
xor
adc
cmp
jne
sub
lahf
cmp
daa
inc
ret
xchg
(bad)
(bad)
mov
ret
mov
add
sub
jne
mov
jno
push
push
fdivr
repz
or
dec
add
jle
dec
jle
or
jns
pop
ret
xchg
mov
sbb
xchg
lock
mov
pusha
dec
movs
mov
leave
push
mov
test
adc
cmp
inc
sbb
add
mov
pop
inc
or
push
push
push
push
mov
mov
test
sbb
xor
rol
bound
adc
lahf
mov
add
add
in
jmp
xor
pop
mov
pop
add
cwde
mov
pop
call
and
ins
dec
pusha
push
fxch
lds
push
adc
push
mov
lods
xor
daa
sbb
popa
inc
add
push
fwait
cmps
fstp
pop
lods
add
push
add
or
or
mov
in
clc
dec
adc
mov
in
fcomp
adc
sub
jbe
sub
xor
adc
call
push
js
cmp
js
push
push
inc
jns
test
jmp
jnp
jns
jge
add
test
ja
or
sbb
in
lods
push
or
xchg
mov
mov
sbb
and
daa
test
mov
(bad)
fiadd
jno
or
sbb
cmc
lock
mov
push
jp
fisttp
pop
mov
call
add
daa
loope
or
jbe
loope
add
push
mov
cmp
and
mov
add
mov
add
call
jne
out
add
call
mov
and
retf
pop
or
je
dec
addr16
rcr
mov
inc
sbb
outs
jl
call
cmp
jb
inc
mov
ja
mov
fxch
xchg
add
push
pop
xor
add
call
jp
add
cmp
add
in
fcom
adc
lea
ss
dec
push
dec
mov
push
call
xchg
sub
pop
aam
cmps
and
mov
dec
icebp
out
sbb
nop
push
fiadd
pop
dec
inc
pop
std
mov
aaa
adc
mov
out
cmp
or
add
add
inc
stc
mov
dec
pop
nop
imul
clc
and
inc
cmc
movs
call
push
pop
jae
(bad)
inc
nop
stos
jmp
nop
call
adc
push
and
loope
mov
in
dec
loopne
cmp
jns
push
mov
call
sbb
xor
int3
aas
inc
jle
enter
rcr
dec
and
sbb
pop
pop
sub
add
push
jae
repz
lahf
imul
sbb
in
xchg
xlat
adc
dec
or
cwde
out
cmp
cmp
mov
loop
push
(bad)
in
cmp
cmp
add
mov
out
cmp
in
push
jl
push
daa
bound
push
add
sbb
iret
or
fdiv
mov
jo
jbe
sub
mov
pusha
jl
xchg
push
jbe
sbb
mov
push
in
pop
xor
mov
fidiv
push
cmp
and
add
pop
jo
xor
mov
push
mov
mov
(bad)
iret
push
mov
leave
inc
add
cmp
movs
sbb
and
inc
pop
repnz
cmp
cmp
popf
pop
lea
push
pop
out
mov
pusha
pop
jg
push
mov
call
xchg
jl
repnz
sbb
sbb
mov
mov
push
sbb
jp
push
push
add
pop
repnz
dec
enter
pop
xor
push
and
adc
sbb
and
sbb
push
stos
adc
sbb
xlat
loopne
and
aam
stc
ret
mov
push
push
push
fsubr
sub
mov
test
mov
cmps
iret
jb
push
push
daa
push
dec
dec
add
in
ficomp
xor
or
sti
ins
jno
fcom
enter
pop
push
adc
push
jle
mov
push
or
add
inc
sar
cmc
mov
fcomp
scas
push
jmp
pop
xlat
pop
mov
adc
sub
xlat
sbb
pop
dec
push
call
push
mov
es
ss
enter
add
aad
ror
jle
lods
jo
xchg
xor
sbb
xchg
pop
xchg
jmp
mov
xchg
cmps
inc
pop
pusha
fisttp
mov
sub
fisttp
mov
mov
enter
mov
leave
sub
or
fisttp
retf
lea
ins
jo
add
rol
mov
fsubr
pop
cmp
aaa
cmps
or
pushf
mov
adc
dec
fcomp
dec
mov
cmp
add
scas
data16
add
iret
xchg
and
lock
mov
lea
aas
ret
push
push
loopne
inc
cmps
add
unpcklps
adc
and
out
fimul
hlt
mov
push
mov
adc
in
push
call
push
enter
xor
sbb
leave
shl
retf
adc
enter
xor
sbb
in
xor
xor
out
sti
jne
adc
jb
cmp
jo
adc
add
cmp
or
xchg
and
sbb
xlat
js
stos
push
jb
call
and
scas
and
mov
repnz
xor
xor
sbb
push
mov
mov
sbb
add
arpl
das
les
fild
inc
and
dec
push
adc
adc
push
cld
ret
sbb
fcom
cmp
push
and
jp
(bad)
es
rcl
and
jo
push
loop
cmp
out
mov
cmp
jne
cmp
je
mov
cmp
jne
lahf
adc
ins
add
and
imul
clc
add
lock
sahf
sbb
add
aaa
mov
and
xchg
mov
or
loopne
enter
xor
int3
test
lea
pop
fst
or
push
out
in
and
outs
daa
push
push
xor
inc
sbb
jmp
adc
es
(bad)
cwde
push
(bad)
push
cmp
bound
adc
fsubr
fsubr
dec
push
jp
push
push
push
call
movs
and
or
in
push
cmp
inc
stos
movs
and
dec
in
push
ins
xchg
jb
sub
stos
cmp
dec
xor
cmp
mov
inc
xor
mov
push
jle
and
call
out
stos
mov
xor
shl
pop
mov
rol
test
cs
nop
jl
and
ins
and
inc
pop
leave
xchg
sbb
nop
inc
popa
adc
popa
mov
imul
dec
leave
push
mov
inc
xchg
push
mov
add
lds
adc
call
mov
mov
inc
push
push
sub
clc
pop
pop
inc
mov
(bad)
jl
xor
sbb
and
push
inc
push
clc
cmp
pop
mov
and
push
stc
fdiv
xchg
cs
in
push
jno
push
movs
cmp
jge
lods
cdq
or
mov
fcom
or
sti
lds
push
call
push
sbb
inc
add
push
adc
ret
mov
in
push
xor
cmp
jmp
ins
js
pop
push
out
inc
and
or
das
pop
cmp
pop
stos
push
int
stos
lods
pop
cwde
ins
push
vshufps
cmps
test
and
sbb
lea
dec
dec
xor
pop
push
call
imul
clc
jno
mov
nop
stos
sub
xor
shr
(bad)
xchg
scas
cmp
add
call
jg
push
mov
arpl
pop
adc
sub
pop
in
xchg
repz
fsubr
jle
sbb
jmp
jg
cmps
jg
sub
sbb
jns
push
ss
je
sub
mov
adc
xor
push
mov
cmp
add
jl
outs
mov
pop
sub
aam
sub
push
daa
xor
mov
test
outs
add
pop
outs
ja
int
xor
iret
call
mov
add
ret
in
xchg
pop
mov
adc
(bad)
push
call
(bad)
fld
cdq
xchg
mov
push
cmc
mov
xor
clc
add
xchg
jl
call
call
fnstcw
movzx
jmp
ficomp
retf
fldcw
xor
jge
jmp
call
cmp
push
sub
arpl
(bad)
in
rcl
xchg
sbb
jg
xchg
cmp
sub
popf
out
into
dec
or
ins
mov
xchg
test
jne
mov
retf
push
ret
inc
cmps
in
pop
mov
mov
ds
fmul
add
call
or
enter
or
or
adc
daa
dec
test
cmp
or
rcr
test
loop
inc
cs
ror
push
sub
(bad)
inc
in
es
mov
push
fstp
dec
push
add
dec
or
test
adc
cmp
sbb
(bad)
adc
enter
mov
or
jge
jmp
rol
pop
sub
js
mov
dec
dec
jmp
pop
fdiv
test
mov
push
cmc
jge
je
push
push
add
add
cmovb
xchg
dec
sbb
jmp
test
data16
push
data16
dec
cmp
addr16
inc
or
mov
jns
out
call
add
sbb
jns
or
push
and
pop
mov
adc
xor
push
stos
sbb
call
jo
scas
inc
pop
test
add
pop
push
sub
mov
dec
push
mov
lods
cld
push
mov
pop
sbb
add
cld
nop
or
call
push
call
dec
sahf
adc
ret
cmp
cmp
in
inc
sub
loopne
jbe
and
add
sub
dec
ror
lahf
loopne
in
fdivr
daa
in
loop
rol
and
cmps
add
aam
mov
call
xchg
pusha
and
les
cmps
test
inc
pusha
xor
add
sub
bnd
dec
xchg
sub
push
mov
fs
xor
dec
add
test
push
pushf
push
mov
adc
in
ror
sbb
lock
jns
or
sbb
cmps
add
stos
xor
arpl
pop
pop
pop
imul
dec
dec
inc
xlat
inc
push
enter
inc
test
dec
xor
dec
and
push
test
sbb
push
xor
cmp
jmp
cmp
mov
and
inc
or
sub
in
and
or
fs
fsubr
repnz
daa
aam
mov
das
push
xor
push
rcl
or
add
cdq
xchg
pop
call
popa
mov
(bad)
add
xchg
add
stc
call
dec
daa
jne
inc
nop
popa
xchg
dec
add
sbb
repnz
inc
mov
cdq
int
mov
fsub
or
jae
push
xchg
in
call
jmp
sub
cwde
ins
div
and
enter
mov
push
cld
ret
pop
je
cdq
push
add
mov
popf
fs
push
call
pop
and
sub
(bad)
push
sbb
sbb
out
xor
ud0
mov
xchg
inc
arpl
mov
inc
sti
outs
iret
mov
lea
push
mov
inc
inc
fstp
xor
pop
call
in
xchg
jne
jbe
enter
cmp
sbb
in
fwait
pusha
inc
stos
or
xor
pop
or
dec
call
adc
push
add
cmp
sub
sbb
and
and
jnp
jnp
out
adc
(bad)
aam
add
or
cmp
cmc
jmp
call
mov
xchg
sub
add
test
cmps
xchg
push
jmp
movzx
push
push
push
fst
pop
test
call
cmps
mov
pop
mov
sbb
popf
pusha
fwait
push
sub
lea
nop
sub
scas
push
pop
(bad)
sub
lock
mov
push
xlat
or
add
push
push
xor
or
test
inc
faddp
adc
cld
pop
mov
cmp
call
dec
or
pop
inc
add
add
out
pop
test
adc
test
jo
push
js
pop
cmp
lock
scas
dec
sub
add
push
mul
(bad)
(bad)
sti
adc
add
ja
mov
pusha
push
jge
add
mov
add
adc
(bad)
hlt
pop
lods
push
mov
call
dec
and
leave
mov
enter
dec
call
push
cwde
dec
pop
fistp
mov
repnz
lock
or
test
(bad)
les
shl
push
loopne
mov
test
mov
mov
test
pop
sbb
pop
(bad)
cmps
fimul
(bad)
xchg
mov
das
mov
das
jge
retf
in
scas
push
outs
push
push
call
fadd
mov
rcl
cmp
jne
lea
(bad)
loopne
jno
sub
imul
mov
push
sub
cmps
lea
pop
int3
pop
and
in
sub
(bad)
jne
dec
fcom
out
cs
pop
sti
dec
lahf
(bad)
loope
sar
jge
mov
xchg
inc
cdq
cmp
cs
aas
sub
into
(bad)
sub
retf
pushf
xor
jb
nop
outs
xor
loopne
mov
test
pop
sub
jmp
lock
cmp
dec
ins
push
or
cmp
fs
sbb
jns
shr
cld
pop
dec
(bad)
add
push
call
sbb
xor
adc
push
sbb
or
dec
(bad)
sahf
clc
ror
neg
loope
cs
and
daa
aam
sbb
mov
xchg
retf
mov
push
sub
in
xchg
xchg
or
leave
cmp
jg
sbb
mov
add
fcomp
enter
or
push
mov
add
push
lods
fwait
out
adc
sbb
movs
in
mov
ins
jae
ret
lock
dec
gs
add
retf
js
add
add
push
ins
jne
add
and
inc
ins
xor
aas
loope
rcl
add
or
pop
add
push
mov
nop
loopne
mov
test
mov
inc
sbb
int
stc
or
mov
xor
add
ins
push
dec
jg
jb
ret
out
in
or
adc
push
push
lea
(bad)
fimul
mov
clc
repz
inc
(bad)
add
jno
or
sahf
sbb
ins
push
cwde
dec
fcom
dec
cmps
mov
stos
and
(bad)
loopne
test
xor
sbb
ins
sar
and
iret
inc
mov
add
or
sub
adc
daa
sub
call
mov
aas
mov
mov
mov
mov
jp
xchg
mov
test
nop
shl
inc
xor
call
and
mov
mov
or
and
xor
in
mov
cmps
in
or
sbb
into
add
int
test
cmp
push
aaa
test
mov
test
add
in
add
scas
(bad)
movs
add
cwde
xchg
mov
shr
sub
repnz
jnp
rol
fs
add
pop
sbb
sahf
xchg
pop
stos
jg
loop
test
add
mov
mov
add
shr
push
inc
pop
or
or
movs
sbb
and
ds
rcr
add
loop
or
arpl
outs
pop
inc
xchg
sbb
inc
mov
jb
ror
jbe
(bad)
idiv
cmp
sub
mov
or
dec
or
mov
add
or
in
ret
jo
inc
loopne
push
dec
pushf
iret
popa
js
rcl
cmp
xchg
dec
and
add
iret
mov
pop
and
add
(bad)
ds
jo
mov
rol
adc
clc
retf
push
pop
dec
cmp
ds
and
stos
and
cld
push
in
test
add
push
sbb
(bad)
sub
test
inc
pop
add
test
cmp
adc
and
and
loopne
ss
push
cmp
jg
cli
pop
loope
adc
jmp
inc
fdiv
bound
fsub
inc
mov
push
clc
dec
sar
adc
adc
mov
test
call
cld
add
xor
add
dec
sub
dec
stos
jmp
daa
adc
push
dec
fnstsw
adc
std
push
jns
sbb
ficom
call
ds
xor
lahf
xor
pop
cmps
and
push
mov
sbb
sbb
nop
dec
inc
ror
clc
test
cld
call
inc
cmp
and
inc
lock
jmp
fistp
jbe
or
adc
sub
xor
and
push
mov
aaa
mov
adc
in
fcom
es
adc
fdiv
aam
sti
add
xor
inc
push
inc
popf
inc
call
je
or
sub
pop
adc
xor
xor
dec
std
add
sub
icebp
add
jle
sbb
dec
aad
lds
and
mov
adc
or
stos
pop
or
clc
mov
loopne
push
jp
idiv
sti
gs
aad
ins
mov
xor
pop
lods
add
push
adc
dec
movs
adc
rcl
jmp
pop
ins
(bad)
jmp
es
jne
mov
push
popf
pmaxub
mov
pop
pop
stc
sbb
call
shl
pop
push
ret
fs
retf
and
mov
scas
add
pop
fld1
push
gs
(bad)
push
imul
std
jo
out
and
ins
sub
popa
aad
add
jbe
or
ret
js
adc
outs
daa
in
sbb
adc
enter
and
xchg
sub
ss
add
jl
test
push
jle
sti
gs
pop
and
push
push
dec
movs
cmp
push
inc
push
inc
fiadd
in
out
into
add
addr16
jb
jns
leave
out
dec
push
mov
pop
jmp
sub
sub
mov
sar
(bad)
cmp
xor
data16
mov
mov
xchg
ret
dec
(bad)
push
jl
mov
shr
jae
dec
test
aam
mov
ret
xor
ror
mov
adc
xchg
call
enter
aam
cmps
dec
jmp
outs
add
ja
adc
mov
sub
std
jl
loopne
dec
cmp
int
adc
mov
xor
in
cmp
add
leave
push
lock
jmp
leave
cmp
sti
sahf
cmps
adc
icebp
inc
push
out
fstp
dec
stos
and
fild
and
pop
inc
ss
xadd
test
adc
push
push
mov
or
dec
jg
add
shr
sbb
in
or
in
lods
push
jne
jl
(bad)
jbe
push
and
mov
push
push
ficom
or
inc
push
push
push
je
shr
adc
iret
nop
mov
add
call
ds
ins
add
push
push
sbb
aam
inc
sub
jbe
js
outs
cwde
xchg
(bad)
adc
xchg
adc
cmp
aad
aas
inc
clc
xor
mov
mov
cs
arpl
sub
or
push
push
call
or
sti
fiadd
sub
(bad)
movs
loope
loop
pop
and
and
fwait
pop
pop
js
push
ret
call
add
or
or
cmp
loope
mov
lahf
jbe
inc
(bad)
push
push
and
out
inc
loope
iret
inc
xor
div
push
lahf
sbb
inc
or
sahf
mov
fiadd
xchg
cwde
sub
dec
(bad)
sar
jns
int
mov
call
cmp
stos
hlt
retf
inc
dec
add
or
mov
xchg
mov
dec
push
test
mov
jecxz
mov
in
inc
xor
add
push
call
dec
sbb
pop
mov
add
mov
cmp
push
ja
push
mov
cmp
cmps
pop
cmps
test
pop
xchg
inc
xor
arpl
mov
push
dec
call
loopne
fldenv
jmp
(bad)
loopne
xor
mov
xor
shl
and
jmp
call
or
cdq
mov
mov
xchg
jmp
jmp
mov
ror
push
call
push
outs
adc
popf
xor
fcom
mov
jo
sbb
jle
sub
mov
sbb
mov
jo
test
sub
shr
fld
(bad)
jmp
call
pushf
retf
sbb
lea
jle
jnp
out
sbb
add
inc
dec
push
cmp
mov
loopne
mov
push
lock
push
mov
sub
sub
sub
fsub
pop
popf
xor
or
fcomp
mov
(bad)
sub
mov
stos
sub
or
mov
push
int
lahf
repnz
xor
das
in
cpuid
call
fucomip
ja
cmp
fs
mov
das
add
or
cmp
popf
div
test
(bad)
sub
add
retf
movzx
data16
mov
xchg
pusha
hlt
sub
daa
lahf
mov
mov
and
imul
lods
dec
inc
xlat
jmp
hlt
or
js
mov
push
inc
mov
daa
je
dec
aaa
push
nop
jno
lock
outs
dec
stc
loop
jp
jns
jmp
fild
imul
and
and
mov
jnp
arpl
call
addr16
je
push
cmp
jle
rcr
repz
push
fild
popf
ja
inc
fild
lahf
xchg
arpl
fs
jmp
mov
sub
je
shl
pop
mov
cs
out
mov
ds
call
jmp
mov
pusha
inc
pop
xor
call
push
lds
popf
xor
cmps
out
inc
or
daa
sub
push
add
inc
add
inc
enter
mov
test
ds
dec
pop
test
sub
and
jp
and
dec
push
cmp
adc
push
push
iret
ret
add
xchg
sbb
pop
bound
inc
mov
lock
or
call
pop
inc
out
add
push
jne
mov
mov
add
enter
sbb
movs
test
add
add
in
clc
cmp
pop
jbe
in
sysenter
xchg
xor
cwde
and
mov
addr16
and
adc
pop
jo
push
sub
and
call
dec
cli
inc
add
popf
les
mov
jo
scas
aam
outs
fwait
inc
push
repnz
fcmovb
or
or
xchg
pop
sbb
add
inc
into
xor
pop
mov
dec
cwde
mov
add
or
mov
and
and
mov
push
clc
mov
inc
add
push
jp
xor
or
aad
scas
mov
and
push
pop
or
jl
es
or
out
or
movs
mov
xchg
fcmove
xor
jmp
xor
mov
dec
sbb
rol
in
add
imul
ret
mov
lock
imul
dec
aas
cmps
mov
std
cli
loopne
push
out
mov
aas
jle
nop
push
xchg
add
cmp
repz
push
jo
push
jl
pop
pusha
dec
mov
push
jo
pop
adc
movs
dec
scas
repz
jle
inc
push
(bad)
shl
xor
test
push
inc
add
add
mov
fld
adc
fistp
ficomp
xchg
scas
dec
mov
xlat
mov
loopne
test
std
aas
lahf
add
jmp
cmp
fld
push
xor
and
test
call
cmp
adc
push
das
mov
fild
aas
(bad)
push
or
mov
pop
int3
adc
jbe
add
push
std
add
loope
cmp
loope
loope
dec
mov
stos
add
aas
or
pop
test
adc
aad
out
ss
in
aas
inc
mov
jmp
cmp
loop
jmp
dec
add
call
popa
ror
nop
lahf
sub
ret
add
push
mov
mov
add
adc
push
mov
ds
iret
hlt
ret
mov
aam
sub
aad
sub
leave
shr
add
fcmovnb
sub
lea
call
arpl
dec
ficom
xchg
fild
and
jae
enter
push
call
stc
push
daa
mov
sbb
call
jns
test
cli
and
mov
dec
pop
xchg
call
stc
push
xchg
push
call
cmp
add
adc
jae
addr16
mov
test
inc
mov
mov
loope
lea
push
push
bound
sbb
clc
inc
bound
or
pop
jnp
or
enter
xchg
lock
adc
stc
mov
icebp
sub
aas
int3
nop
mov
mov
mov
or
es
sahf
mov
adc
call
js
leave
sub
fcmovnu
(bad)
mov
push
dec
add
add
dec
pop
dec
dec
adc
lods
xor
add
popa
push
stc
adc
dec
or
mov
xor
mov
mov
call
and
push
stos
sub
cmp
call
cmc
inc
or
mov
ret
fisubr
sub
sbb
sub
sub
inc
cwde
push
les
mov
push
rcr
cmp
mov
jl
dec
add
rcr
cmp
pushf
cmps
cmp
or
cmp
aaa
pop
mov
and
or
inc
in
dec
push
xchg
and
xor
pop
xor
and
sub
jnp
mov
out
push
jl
adc
inc
iret
xchg
mov
dec
jmp
add
(bad)
xchg
test
sti
mov
lock
xchg
das
push
inc
push
push
sbb
sbb
dec
imul
add
lds
xchg
jge
ins
pop
popa
xchg
jo
out
mov
inc
rol
and
jle
fist
dec
mov
add
lds
lods
sbb
std
push
jo
and
ins
lock
adc
lock
add
std
inc
(bad)
mov
add
cmps
xor
or
push
inc
add
or
loope
(bad)
scas
call
fiadd
push
xor
inc
mov
add
ret
jge
lea
add
and
(bad)
push
xchg
rcl
push
or
movups
adc
mov
inc
sub
or
(bad)
lock
add
xor
cmp
add
sbb
sbb
rol
adc
push
pushf
dec
jnp
pop
mov
push
fimul
pop
add
push
movs
(bad)
outs
dec
rol
pushf
or
sub
adc
or
in
sar
inc
fwait
push
daa
test
cmp
adc
or
xor
(bad)
jmp
add
ins
aas
ret
and
lea
jne
rcr
adc
loop
call
mov
js
lock
stos
add
mov
mov
cmp
sub
cmp
xchg
mov
cmc
(bad)
mov
inc
cmp
sbb
in
in
leave
call
dec
sbb
add
mov
xor
xlat
repnz
(bad)
cmc
fsubr
add
dec
xchg
inc
mov
xchg
ins
loope
cmp
inc
repnz
mov
into
adc
add
repnz
inc
lock
outs
xchg
sahf
and
jl
push
or
add
xor
adc
out
pusha
test
inc
test
jl
xlat
xor
mov
and
xor
cmp
jmp
or
adc
jge
mov
and
call
fcmovnb
xor
pop
sbb
dec
mov
pop
mov
push
fstp
adc
mov
sbb
lock
sub
inc
push
call
pushf
cmp
jo
push
adc
fnsave
sbb
fcom
nop
ror
sbb
ficom
push
sub
neg
mov
xchg
outs
cmp
scas
push
cdq
pop
push
popa
sar
dec
movs
or
rcl
ficom
(bad)
cmp
pop
dec
je
(bad)
jns
sub
ins
mov
mov
push
mov
inc
repnz
dec
adc
in
lods
sbb
dec
push
xor
push
(bad)
in
and
mov
mov
and
inc
pop
jo
cmps
sub
call
xor
adc
mov
rol
fs
call
es
jno
movs
pop
test
add
or
pop
aad
jb
add
adc
shl
push
mov
dec
or
adc
add
inc
xchg
mov
dec
outs
call
push
cmp
inc
push
lods
push
xor
test
imul
mov
ret
mov
and
dec
daa
(bad)
mul
outs
xchg
cmp
cwde
add
push
stc
mov
add
int3
clc
(bad)
(bad)
cli
push
jle
and
data16
push
add
outs
call
(bad)
dec
ret
xor
cmp
(bad)
data16
loopne
pop
sahf
dec
cmp
call
push
sub
dec
push
call
int
inc
shl
cli
test
cs
std
inc
daa
push
mov
or
add
adc
xchg
mov
ja
jo
sbb
pop
or
sub
push
clc
fadd
pop
push
cmp
xor
neg
ror
or
and
sti
dec
jmp
push
pusha
sbb
xor
in
mov
mov
aas
jbe
inc
and
fisubr
sub
jl
mov
and
test
mov
out
fimul
cmp
jg
xchg
iret
or
dec
adc
mov
popa
imul
in
push
test
fst
add
mov
jg
rol
jnp
pop
clc
(bad)
xchg
add
mov
iret
push
lea
ror
pop
mov
add
nop
sbb
call
pop
sub
test
or
inc
mov
in
aaa
bound
ins
xor
or
dec
sub
mov
dec
inc
dec
xchg
sub
jne
sbb
je
add
fisub
xor
ffree
or
mov
push
call
clc
jno
test
je
dec
or
pop
aad
loopne
inc
movs
jno
xor
sbb
pop
je
iret
imul
inc
js
pop
dec
outs
push
xor
jb
scas
test
or
sub
repnz
and
mov
add
data16
jo
sbb
cmp
js
pop
ja
inc
adc
mov
out
jns
xor
(bad)
gs
mov
pop
jge
imul
push
sti
pop
sub
and
dec
call
dec
lea
clc
and
mov
ja
xor
inc
clc
in
cmp
je
push
cmp
in
addr16
xchg
mov
jbe
sub
xor
cmp
sbb
dec
xchg
cli
cmp
je
addr16
add
xor
xchg
retf
add
inc
jmp
mov
call
pop
mov
data16
mov
mov
pop
add
and
cmp
push
push
push
test
jmp
aas
nop
adc
push
push
jl
shl
inc
xor
inc
(bad)
and
ins
scas
daa
call
call
pop
adc
mov
or
aas
xor
inc
sti
mov
pop
sub
repnz
xor
sub
xchg
xlat
outs
sbb
ss
xchg
cmp
ret
pop
dec
push
loopne
sub
sub
pop
fadd
retf
pop
mov
add
add
sbb
add
or
mov
ja
push
and
and
sbb
lea
gs
stos
pop
aas
jge
push
add
jns
icebp
jno
push
push
cmps
add
cmp
test
jbe
nop
xchg
adc
pop
jge
push
pushf
nop
iret
call
lock
inc
xor
ror
test
jle
or
dec
sbb
add
add
test
cmp
pop
and
xor
sbb
xor
and
xor
loopne
xchg
jbe
je
loope
shl
fdiv
repnz
mov
lds
sysret
xor
mov
and
cmps
add
aad
sbb
addr16
adc
sbb
adc
jbe
call
mov
(bad)
jge
push
xor
cwde
pop
and
sbb
pop
jecxz
or
int3
pop
or
inc
push
push
xor
test
leave
inc
ffreep
add
add
and
sbb
sar
jmp
ds
push
xor
add
push
jne
push
call
mov
shr
xchg
xchg
call
xlat
lds
shl
nop
shr
scas
out
cmps
ins
or
dec
add
or
mov
push
push
or
push
or
sbb
adc
mov
retf
test
and
ret
mov
test
xchg
jns
push
sbb
(bad)
pop
mov
pop
jo
pop
push
push
adc
or
mov
into
(bad)
fadd
ret
call
mov
icebp
nop
cs
daa
ret
push
adc
dec
and
mov
jecxz
push
std
push
pop
sahf
mov
(bad)
popf
fild
mov
mov
rol
push
or
jp
ret
aad
loop
aad
sub
inc
loopne
sbb
aas
fdivr
push
add
loop
mov
pusha
add
aam
add
cli
stos
push
inc
or
mov
mov
dec
iret
jnp
or
adc
jne
test
sbb
add
fs
sbb
aas
cmp
jge
dec
ins
xor
mov
iret
pop
loopne
push
push
add
div
jl
fist
call
adc
pop
cmps
gs
ret
adc
or
addr16
scas
test
stc
cmp
sti
fnstcw
xor
sub
add
push
jbe
mov
and
push
fcom
xor
int3
and
stos
mov
mov
sbb
xor
xor
cmp
adc
xor
add
sbb
xchg
lds
inc
push
push
or
push
fs
cmp
pusha
xchg
mov
ret
and
js
ret
mov
imul
das
adc
rol
adc
xor
and
bound
jo
cmps
cmps
jne
sub
pop
mov
and
hlt
push
adc
pop
xor
ss
dec
call
mov
sbb
fild
xchg
or
into
je
mov
ds
cmps
xor
fisttp
js
add
fwait
leave
sub
sbb
(bad)
sbb
push
jo
pusha
es
neg
sub
inc
xor
push
jge
jg
(bad)
out
fsubr
ret
or
mov
sbb
fmul
push
mov
adc
push
out
jle
inc
mov
call
enter
xchg
adc
aaa
and
clc
gs
call
mov
or
xor
push
or
add
mov
mov
push
add
add
cs
inc
adc
shl
or
jne
push
pop
or
pop
pop
fdiv
mov
pushf
pusha
add
inc
lods
ret
jmp
sbb
xchg
dec
jo
or
xchg
dec
sub
outs
mov
inc
mov
cmp
pop
aam
call
icebp
fidivr
mov
push
push
test
(bad)
mov
add
adc
pinsrw
xor
mov
movs
dec
dec
mov
mov
push
test
pushf
test
sar
out
shl
pop
add
in
(bad)
adc
add
push
sbb
call
add
jmp
not
inc
or
dec
add
fcomp
jp
movs
call
dec
clc
dec
jns
push
fs
lods
inc
cmps
jno
mov
sub
mov
lock
ss
sub
cmp
push
les
sub
loop
pop
or
adc
mov
inc
call
xchg
aaa
mov
mov
jl
call
jmp
ret
dec
cmp
cmp
xor
sbb
loop
out
or
push
xchg
sahf
xlat
cmp
ret
movs
out
sar
mov
shl
ret
sbb
cmps
jmp
push
xchg
inc
and
ins
and
or
pop
pop
push
ror
add
pop
dec
and
sub
jae
ins
stc
adc
and
and
in
ret
adc
and
cld
or
push
adc
add
or
ja
bound
and
or
lds
loope
push
retf
(bad)
sti
jmp
int3
pop
add
mov
inc
fsub
lds
cmp
add
jmp
jmp
pop
out
adc
sub
callw
sahf
add
pop
ret
jns
and
lds
and
syscall
(bad)
hlt
pushf
stc
pusha
mov
stos
sbb
cmp
popa
cld
jo
pushf
popf
(bad)
out
or
(bad)
clc
mov
les
fidiv
push
dec
xlat
(bad)
in
pop
pusha
hlt
jmp
sub
push
popa
ds
mov
push
add
in
retf
(bad)
xor
and
sbb
sbb
cwde
sub
and
sub
mov
loope
adc
mov
movs
mov
jl
cmc
mov
imul
fnsave
inc
add
push
retf
cmp
push
jmp
lock
loopne
cmp
mov
mov
and
sbb
sub
inc
or
pop
shl
dec
xor
ficomp
pop
pop
or
movntps
lahf
(bad)
xor
adc
ins
ret
iret
or
push
stos
bnd
leave
adc
push
mov
cmp
shr
ins
add
bound
push
dec
ins
rcl
jp
xchg
cmps
pop
cmp
test
sub
rcr
mov
ins
jo
loope
dec
push
mov
fist
pop
add
pop
idiv
lock
pop
dec
add
xchg
ds
es
adc
inc
xor
je
test
adc
add
ret
pop
jnp
out
mov
std
sbb
cli
les
clc
idiv
xchg
jmp
or
or
pop
sbb
pop
sub
add
jl
dec
clc
inc
clc
inc
jl
stos
push
in
call
shl
xlat
out
or
cld
test
mov
xchg
jb
sahf
sub
and
sbb
adc
push
or
lea
push
ficom
mov
jmp
cmps
mov
pop
dec
dec
and
sbb
pop
or
cmp
pop
sub
xlat
shl
push
mov
mov
stos
push
clc
adc
push
jmp
mov
adc
ret
mov
cwde
in
mov
push
stc
add
gs
jmp
push
jb
not
(bad)
and
mov
fucomip
jne
jmp
dec
pushf
cmp
mov
nop
jns
cmp
cmp
push
jb
mov
ds
push
pop
add
adc
push
xor
mov
sbb
lods
push
cs
cli
add
fistp
cmp
shl
jmp
push
adc
jmp
mov
add
push
and
pop
cmp
pusha
adc
adc
xchg
push
mov
push
jb
push
mov
fsubr
dec
jo
adc
rol
inc
pop
mov
add
push
addr16
je
add
and
ss
sub
adc
jle
inc
sub
add
pop
add
not
leave
adc
inc
inc
ret
(bad)
or
push
jbe
out
sub
or
or
hlt
xchg
call
lock
pop
ficom
dec
dec
adc
push
sbb
or
push
push
and
xchg
add
into
pop
sub
xor
pop
add
mov
imul
in
dec
mov
fisttp
test
dec
push
push
(bad)
shr
mov
rol
mov
inc
xor
jne
add
fwait
xor
jbe
retf
ins
(bad)
movs
or
mov
mov
push
pop
jp
stc
dec
pop
aad
xor
into
ds
je
inc
rcr
push
jle
pop
and
mov
pop
fdivr
lock
mov
aaa
pusha
adc
push
cmc
add
mov
int
sar
add
sub
sub
mov
and
movs
or
sbb
push
xchg
aad
and
fcomp
fmul
push
push
leave
outs
push
inc
xor
mov
ss
leave
push
sub
dec
fiadd
sbb
call
lock
adc
adc
adc
mov
sbb
and
mov
push
les
jns
push
jbe
mov
not
adc
stos
mov
pop
ds
nop
cmp
jg
(bad)
dec
mov
mov
pop
(bad)
retf
inc
shl
rcr
outs
add
jo
mov
popf
mov
je
push
dec
xor
arpl
popf
or
repz
(bad)
cs
or
arpl
jo
sub
pop
mov
ja
sbb
dec
test
adc
adc
jle
fimul
add
lds
je
sti
lods
pop
pop
ror
adc
test
loop
adc
lods
rcr
adc
aas
test
(bad)
in
push
or
adc
(bad)
lahf
stos
les
clc
mov
cmp
or
xor
and
mov
mov
sub
sbb
pop
pusha
and
mov
mov
add
push
add
or
push
repnz
or
out
pop
cdq
sub
sbb
pusha
(bad)
adc
mov
jnp
mov
pop
and
adc
jle
pop
lods
mov
in
mov
push
jmp
and
jns
aas
add
mov
sub
sub
push
cmp
push
cmp
fisubr
push
clc
stc
(bad)
jl
dec
les
loope
sub
jle
inc
and
lods
aad
cmp
jae
sti
mov
adc
adc
jg
shl
and
jne
and
inc
push
xor
xor
or
aam
or
cmp
jb
enter
xchg
outs
pop
adc
inc
leave
es
adc
xchg
loope
retf
loop
pshufw
adc
push
push
push
xor
shl
dec
inc
xor
push
xor
inc
jne
call
pop
stos
add
and
cmp
xchg
add
jb
sub
pop
xchg
push
test
je
jmp
cmp
je
jo
push
into
sbb
and
xchg
sbb
and
test
pause
pop
mov
ds
or
mov
clc
sub
cmovno
mov
push
cmp
je
test
lds
xor
mov
mov
mov
xor
jmp
lock
inc
es
inc
fisubr
adc
adc
sbb
pop
mov
aam
pop
jae
add
sub
add
push
xchg
mov
sbb
ins
sbb
cmps
dec
xor
fbld
enter
mov
push
std
cmp
jne
(bad)
add
push
or
cmp
push
xor
popa
test
cmp
mov
inc
mov
push
inc
adc
sub
icebp
inc
test
jle
dec
(bad)
pop
mov
js
xchg
aad
xor
mov
mov
leave
dec
sbb
ins
sbb
pop
xor
sahf
mov
cmp
jnp
push
xor
mov
sbb
ss
sbb
pop
or
xor
inc
inc
cs
xchg
jl
adc
push
or
push
repnz
pop
adc
mov
push
cmc
dec
mov
addr16
cmps
xchg
mov
push
and
jle
adc
stos
test
enter
jb
adc
add
pop
push
xchg
and
pop
add
pop
adc
loop
cwde
pop
dec
add
dec
sbb
mov
xchg
mov
sbb
out
or
js
data16
or
add
pop
(bad)
cmp
xchg
or
sbb
sahf
inc
movs
mov
dec
and
cmp
pop
pop
xchg
sub
dec
push
jl
sub
push
ja
adc
or
inc
(bad)
xor
sub
es
and
push
mov
sbb
lods
sahf
and
stc
enter
call
xor
and
adc
pop
jge
mov
inc
(bad)
xor
sbb
pushf
fstp
xchg
retf
xlat
xchg
mov
add
push
sub
or
fs
add
(bad)
mov
cmp
cwde
add
xlat
shr
cdq
nop
lods
mov
push
sub
jae
jp
les
hlt
add
sahf
add
fs
pop
sbb
jecxz
add
push
cmp
xor
(bad)
jle
adc
(bad)
adc
xchg
jge
pop
sub
or
mov
fidiv
addr16
loop
or
adc
inc
test
cmps
push
(bad)
xor
dec
fsub
inc
les
pop
cli
or
stc
popf
mov
push
adc
shl
mov
sub
mov
mov
aas
jno
mov
daa
push
js
sbb
dec
cld
movs
pop
push
push
fcmovne
dec
pushf
idiv
xor
dec
pop
sub
pop
mov
push
enter
movs
scas
mov
pop
xor
aas
add
add
mov
jnp
fnsave
pop
sub
test
je
pop
ret
sbb
mov
cmps
inc
pop
test
cmp
push
and
pop
movs
sub
adc
adc
mov
sub
or
and
or
dec
int
adc
add
push
add
loopne
xchg
pop
scas
jl
cmp
sub
push
sub
fbld
sahf
test
sbb
inc
daa
push
dec
and
fdivr
fistp
xchg
ss
mov
jge
shl
sbb
ja
es
push
xor
mov
pop
dec
pop
jbe
mov
or
in
loope
mov
movs
adc
ret
scas
pop
inc
push
push
jns
sbb
aad
rcr
push
sbb
sub
jecxz
retf
pop
xor
mov
ins
pop
ret
call
mov
shl
push
stos
push
in
sub
jle
call
adc
out
sub
jmp
mov
xor
aam
(bad)
inc
daa
scas
ficom
add
call
jp
and
in
fucomi
sub
xchg
dec
mov
or
call
push
sbb
push
cmp
add
mov
jle
ret
mov
(bad)
sbb
push
cmp
daa
dec
or
pop
sub
adc
add
and
(bad)
push
jl
add
xchg
push
out
inc
dec
push
dec
add
inc
pop
jbe
sub
js
add
sbb
imul
fist
push
jmp
push
sbb
dec
push
ins
mov
jmp
retf
sbb
dec
add
mov
ds
pop
mov
push
dec
pusha
jnp
push
inc
pop
mov
dec
sub
push
dec
mov
inc
push
cli
push
in
add
or
and
jb
cmp
inc
outs
push
sti
in
inc
or
jmp
xor
or
inc
jmp
cmp
jbe
leave
and
nop
imul
outs
cmc
out
in
or
adc
or
sub
jmp
mov
jbe
mov
and
sar
mov
lods
test
xchg
sub
mov
xchg
enter
push
and
test
inc
mov
jg
or
popf
push
ret
push
iret
jnp
iret
jmp
add
mov
test
and
ins
in
jnp
pop
fwait
pop
daa
shr
sahf
out
pop
lods
ds
pop
jge
scas
sbb
in
mov
test
push
sub
push
out
repz
mov
push
repnz
(bad)
loopne
add
pop
or
or
or
xor
xor
ret
push
add
ret
sbb
nop
dec
jmp
lea
aas
pop
adc
ret
sar
mov
mov
pop
movs
lea
pop
dec
movs
add
ins
mov
(bad)
cmp
cmp
pop
fs
lods
mov
mov
mov
push
mov
js
push
or
and
and
mov
lahf
or
retf
aas
dec
mov
or
mov
push
cmp
pop
sar
push
or
lea
jo
repz
or
mov
push
nop
dec
inc
pop
xor
outs
xchg
adc
test
ret
mov
xchg
add
adc
jle
add
aas
movzx
sar
adc
dec
or
pop
mov
xor
push
cmp
test
lahf
dec
pop
test
test
and
in
div
cmp
inc
loope
popa
push
push
call
aas
jcxz
cmp
push
add
jno
xchg
or
push
iret
pusha
and
sub
pop
rcl
in
push
sub
jmp
(bad)
(bad)
sbb
mov
arpl
sbb
rol
jl
pop
push
push
pushf
dec
outs
arpl
or
mov
xlat
ret
mov
loope
pop
out
jnp
test
popf
push
or
inc
lea
push
movs
outs
mov
retf
xor
pop
xor
lea
push
mov
mov
jbe
in
pop
call
retf
nop
cmp
sub
cmp
push
mov
adc
mov
mov
rol
test
retf
mov
mov
ds
add
inc
icebp
aaa
add
les
sbb
cmp
push
fdivr
mov
enter
jg
mov
inc
pop
in
sbb
add
shr
cld
mov
retf
push
aam
pop
push
push
mov
push
or
cmp
xor
jbe
fst
inc
mov
inc
or
call
out
lods
sub
jo
je
je
ret
scas
lods
sbb
push
(bad)
mov
shl
call
fcom
xchg
inc
out
arpl
sbb
ror
pusha
jl
mov
mov
lea
cmp
push
sbb
cli
out
dec
fdiv
add
mov
cmp
push
sahf
scas
and
ret
jo
jg
dec
mov
push
mov
xor
(bad)
xchg
add
adc
in
je
xchg
fdiv
or
nop
pop
loopne
sub
data16
sbb
(bad)
jbe
pop
fcmovnu
cmc
inc
outs
or
mov
jmp
mov
sbb
xchg
and
pop
rcl
bnd
pusha
mov
rcl
or
shr
mov
jo
mov
pop
dec
cmp
nop
ja
out
cmp
int3
(bad)
mov
ret
in
ds
test
pop
shr
scas
es
mov
push
fcom
ffreep
push
xchg
pop
push
call
rcr
push
mov
mov
js
test
add
mov
pusha
inc
adc
push
call
lods
icebp
lods
clc
clc
(bad)
cwde
ret
xor
test
out
mov
pop
dec
addr16
(bad)
loope
shr
repnz
mov
add
sub
ins
dec
popf
push
push
jecxz
jnp
pxor
sti
adc
mov
mov
cmp
lods
xchg
mov
(bad)
fistp
mov
popa
clc
pop
add
loopne
or
sub
adc
mov
push
pusha
xor
jne
lahf
cmp
jl
into
rcl
mov
mov
ja
pop
or
xor
stc
inc
das
inc
cmp
add
in
(bad)
stc
cmovnp
repnz
mov
xchg
loop
and
mov
inc
xor
inc
fs
fnsave
loopne
lahf
fistp
neg
sub
push
and
cld
mov
jle
jmp
or
lods
mov
leave
test
dec
sub
cld
imul
shl
pop
lods
add
jmp
and
mov
mov
sub
and
mov
lahf
(bad)
inc
enter
mov
jmp
shr
and
adc
stos
cdq
pusha
mov
pop
sub
push
mov
jmp
push
or
imul
dec
inc
cmps
add
dec
es
xchg
ret
pop
sar
pop
repnz
std
mov
in
fld
sub
fidiv
inc
cmps
dec
pop
sbb
pop
inc
mov
pop
xor
or
stos
add
pop
cmp
sbb
mov
lods
xor
pop
mov
pop
dec
test
fbstp
push
push
jl
cs
inc
and
xchg
xchg
push
repz
pop
or
fs
lahf
jge
rol
push
stc
adc
add
jns
repnz
fistp
int3
lahf
adc
fnstcw
mov
mov
ret
adc
inc
push
jp
rcr
sbb
pop
xor
adc
push
pop
inc
or
dec
push
(bad)
pop
arpl
out
and
inc
adc
vpackuswb
add
adc
neg
push
cmp
int
xor
mov
dec
push
push
xchg
movs
(bad)
jo
(bad)
sahf
aad
cmp
xor
add
mov
sar
ret
adc
jno
sub
or
or
cld
int3
sbb
sub
cmp
jnp
lods
ror
push
mov
jb
mov
push
lahf
push
inc
pop
xor
(bad)
lock
inc
inc
clc
sbb
add
add
or
or
push
test
jne
push
loopne
imul
pop
or
rcr
or
cwde
fidiv
mov
or
mov
out
test
jg
bound
adc
dec
jle
ret
add
add
dec
cmp
xor
std
retf
or
adc
pushf
push
lock
xchg
or
xor
cli
dec
jns
dec
in
pushf
push
stos
pushf
mov
or
pushf
cmp
xchg
pushf
sub
adc
add
cld
jmp
adc
mul
dec
xor
cld
add
adc
scas
pop
pop
dec
pop
adc
push
add
pushf
mov
pop
add
(bad)
mov
jns
pop
loopne
or
sub
movs
mov
xor
cwde
adc
xchg
cwde
mov
cli
and
mov
xor
in
hlt
jge
cmp
(bad)
sub
inc
cmp
or
adc
adc
ins
inc
jg
pop
mov
mov
nop
mov
lock
or
or
ja
push
ret
loopne
adc
mov
adc
cmp
sar
in
add
cmp
dec
add
add
mov
add
pop
sbb
out
je
outs
jne
xchg
adc
imul
std
push
and
pop
push
jge
psubw
mov
scas
jp
adc
or
add
adc
cmp
sub
sti
inc
fcom
add
and
sahf
push
(bad)
je
test
sub
or
xchg
das
loope
mov
add
ins
sub
addr16
jns
mov
push
dec
xchg
cmp
addr16
call
dec
sbb
xor
cmc
pusha
stc
mov
or
scas
js
ret
(bad)
(bad)
sub
cmp
fdivr
(bad)
loope
add
xor
fsubr
in
inc
jae
cmp
adc
out
jnp
sub
int
stc
dec
xchg
push
jnp
xchg
stc
cmc
inc
pusha
pusha
bound
push
lahf
mov
sub
mov
pop
adc
adc
add
daa
inc
mov
js
(bad)
pop
jp
jo
push
pusha
lods
imul
pop
dec
sub
pop
xchg
cmp
sub
push
push
mov
rcl
out
mov
cmp
adc
push
adc
dec
mov
push
sbb
cmp
lahf
push
sbb
mov
loop
mov
(bad)
pop
inc
push
xor
neg
mov
movs
and
mov
xor
or
xor
les
js
lods
sub
xor
sub
cld
push
mov
nop
jg
iret
dec
push
push
adc
fs
(bad)
push
dec
jmp
or
adc
sar
or
dec
je
pushf
pop
dec
push
pusha
stos
sub
or
fild
or
push
bound
pop
and
aas
adc
les
jo
inc
out
sub
mov
adc
push
hlt
dec
je
push
pop
rcl
das
add
sub
adc
cmp
fcmovu
pop
lods
ins
add
les
and
add
jb
mov
cs
add
mov
push
ret
aam
adc
xor
mov
movs
int3
sbb
adc
dec
jbe
add
xchg
add
push
push
pop
div
mov
or
push
and
adc
or
cli
pushf
cdq
push
or
mov
jbe
cmp
and
xchg
sub
and
dec
adc
and
pop
xlat
or
rcr
sbb
rcl
mov
and
imul
cmp
je
fbstp
in
adc
xchg
and
mov
jmp
xor
add
sub
mov
cmp
dec
sub
add
mov
pop
inc
(bad)
mov
inc
dec
scas
(bad)
cmps
add
cdq
xchg
pop
test
mov
(bad)
stc
lea
mov
je
sar
aas
shr
and
xor
lea
scas
push
push
pop
das
push
aam
call
push
and
add
mov
enter
jb
mov
ret
sbb
or
xchg
cmps
adc
dec
xor
les
fs
xchg
mov
sbb
inc
jmp
in
or
mov
jbe
adc
adc
in
je
fistp
cmp
fdiv
mov
mov
mov
or
add
adc
push
sbb
daa
pop
or
push
mov
dec
inc
xchg
push
mov
xor
and
sub
outs
inc
mov
inc
fs
jle
jl
jno
daa
je
cmps
sub
sbb
mov
push
jb
mov
pop
jo
cmp
mov
push
sbb
push
fisubr
ret
movs
mov
sbb
sbb
aaa
push
imul
test
(bad)
xlat
inc
sahf
push
add
je
ret
or
jmp
out
jmp
mov
mov
add
or
adc
fdiv
add
mov
test
add
imul
cmp
je
xchg
xchg
retf
mov
mov
(bad)
sub
push
popa
inc
call
push
ss
adc
repnz
sub
and
add
punpcklbw
pop
adc
add
push
xor
cmp
pop
aam
fmul
lock
sub
call
push
adc
and
aas
push
nop
inc
xor
jnp
repz
shl
inc
pop
jb
sbb
pop
test
call
xchg
ror
js
push
nop/reserved
jbe
ror
inc
dec
dec
add
mov
jmp
adc
mov
push
mov
sub
mov
es
push
add
imul
(bad)
outs
scas
fsubr
add
cmp
je
jg
adc
pop
cmp
push
push
sbb
(bad)
dec
adc
mov
sub
pop
xor
nop
inc
clc
inc
add
dec
mov
xor
ss
nop
mov
call
push
call
movs
adc
inc
mov
lods
fild
or
mov
bound
je
mov
mov
jo
dec
add
sbb
dec
push
(bad)
add
retf
push
ror
mov
out
sbb
ret
shr
mov
je
add
fmul
mov
and
pop
hlt
mov
je
fstp
sbb
ins
jmp
cmp
sbb
std
ret
or
jo
enter
inc
nop
or
call
push
mov
cli
shl
cmc
pop
jne
in
push
inc
sbb
mov
fsubr
sub
or
inc
jmp
cwde
dec
xor
(bad)
jg
or
jae
jle
mov
add
inc
sub
jae
sbb
rol
arpl
lea
adc
(bad)
xor
fs
push
(bad)
sti
lock
(bad)
mov
addr16
jl
jg
test
js
mov
cmc
add
dec
imul
xchg
call
cmp
mov
cmps
xchg
stos
rcr
cmp
sbb
jne
inc
add
imul
add
push
imul
xchg
push
push
pop
clc
movs
fild
push
push
fdivr
push
add
push
nop
inc
out
cs
mov
sar
dec
push
dec
mov
scas
mov
push
or
adc
push
mov
adc
mov
cmp
push
adc
jae
add
push
push
sbb
and
push
mov
outs
lar
lods
out
xchg
xor
mov
mov
pop
pop
ficom
xchg
fs
cmc
cld
xchg
mov
shl
leave
sahf
jg
adc
fisttp
sub
adc
add
pop
jmp
or
push
mov
push
cmps
xchg
mov
test
sub
push
push
adc
sub
gs
imul
sub
sub
dec
cmp
test
leave
lahf
push
lods
ror
cmp
inc
sahf
ror
ja
(bad)
(bad)
cmp
jbe
lea
nop
cmp
jae
cmp
out
cld
mov
test
xor
mov
mov
inc
cmc
js
fcomi
push
and
loope
call
je
push
push
sahf
imul
or
adc
push
je
inc
sbb
std
jl
add
jecxz
pop
add
push
adc
dec
ret
xchg
add
xchg
mov
pop
or
jo
dec
adc
ror
push
xor
cmc
inc
pop
inc
sub
pusha
in
sub
mov
cmp
mov
sbb
inc
cld
cmp
ss
push
loopne
es
in
ja
inc
rcr
dec
dec
pushf
mov
mov
adc
mov
jg
and
test
inc
out
mov
icebp
and
outs
test
call
jle
dec
mov
test
push
rol
mov
ret
je
add
xor
out
ins
in
iret
lea
ss
sbb
pop
jmp
in
je
movs
jl
pusha
cmp
ins
pop
call
jecxz
xor
push
fild
ss
sub
dec
sti
jne
mov
hlt
mov
mov
(bad)
test
adc
mov
xchg
add
pushf
gs
lods
test
push
or
xchg
ret
or
add
sbb
arpl
sbb
and
adc
or
pop
xor
xchg
add
xchg
cld
push
sub
add
in
mov
pop
nop
sub
push
jecxz
adc
jne
test
mov
sbb
pop
lods
mov
jl
sub
sub
pop
sbb
stos
aaa
mov
xor
sub
stos
nop
xchg
push
cli
call
jmp
lods
sub
xchg
(bad)
jg
mov
adc
jno
ins
lds
cmp
pop
pop
loop
cmp
popf
shl
pop
pop
imul
or
fild
push
fld
stc
push
mov
ret
call
or
xchg
sbb
shr
fwait
mov
ds
or
or
xchg
mov
inc
iret
test
jb
sub
sbb
and
dec
popa
sbb
out
dec
mov
in
mov
fs
xchg
sbb
jns
pop
cmp
add
data16
sbb
gs
xchg
jl
gs
xchg
fcmove
jae
jge
rol
xchg
add
movs
cmp
xor
and
cmp
div
arpl
in
dec
in
out
fs
jb
xchg
inc
dec
lods
mov
(bad)
pushf
movs
imul
mov
and
and
retf
(bad)
push
ins
aam
adc
add
fcomp
xchg
aad
sti
dec
jmp
push
fmul
(bad)
push
mov
push
hlt
ds
jle
xor
xor
cmp
rol
pop
cmp
and
(bad)
inc
and
sbb
xchg
stos
mov
push
sub
pop
sub
loope
inc
and
pusha
mov
inc
mov
fisub
int
mov
test
enter
lock
inc
es
add
pop
inc
popa
inc
push
hlt
add
and
sub
mov
add
mov
mov
mov
retf
test
dec
mov
mov
out
repz
push
jns
adc
mov
pop
arpl
cmps
inc
out
sti
pop
pop
push
dec
fsub
mov
out
outs
push
mov
xor
push
out
fnstsw
xor
fcomp
pop
or
test
push
sbb
and
mov
(bad)
sub
hlt
adc
or
mov
add
push
fmul
cmc
mov
mov
test
ss
imul
mov
or
lock
psubsb
pop
adc
outs
and
icebp
and
inc
or
les
jmp
addr16
in
sbb
add
ret
dec
jle
ficom
inc
retf
cwde
ret
add
sub
lahf
or
aaa
inc
pop
jmp
pop
test
fdiv
sbb
and
pop
push
jge
jmp
fcom
mov
sub
inc
mov
xor
call
dec
xchg
(bad)
shr
fistp
addr16
xor
adc
and
pusha
cdq
push
lods
icebp
sbb
mov
sbb
xor
sbb
dec
jmp
push
mov
mov
mov
jecxz
mov
lahf
or
push
and
or
adc
ins
sbb
push
pop
neg
push
push
mov
adc
adc
into
dec
in
xor
push
jecxz
repz
sbb
pop
mov
push
lods
push
pop
xor
dec
pusha
and
aam
xor
xchg
dec
sbb
push
push
test
movs
popa
inc
pop
mov
mov
push
adc
dec
add
sub
and
push
jl
jbe
pop
mov
mov
push
mov
xchg
outs
push
dec
mov
dec
bound
push
push
scas
jg
sub
add
cli
xor
(bad)
ret
sub
ret
ret
nop
mov
and
aas
push
ds
das
push
sbb
sbb
ds
movs
jp
pop
dec
dec
sub
inc
cld
inc
mov
sub
pop
cmp
je
es
sub
or
outs
call
push
sbb
dec
sbb
and
sahf
imul
xchg
movs
les
and
sub
adc
cmp
and
and
ins
inc
add
dec
dec
mov
(bad)
cld
test
mov
push
push
xor
maxps
or
xchg
pop
gs
xor
dec
push
push
sbb
lahf
adc
test
mov
js
shl
stos
xor
fidiv
and
loopne
push
mov
push
add
pop
test
xchg
mov
mov
cmc
and
in
inc
pop
cmp
pop
inc
je
xor
or
in
adc
pop
push
mov
nop
ss
push
fild
nop
shl
in
sub
cmp
in
pusha
fnstcw
jbe
arpl
imul
loope
adc
or
pop
mov
pop
mov
inc
sbb
daa
xchg
cwde
add
jae
pop
cmp
adc
test
rcr
in
inc
in
mov
xchg
je
lea
call
xchg
retf
pop
cdq
mov
pusha
hlt
sbb
adc
dec
(bad)
xor
pop
add
adc
adc
int3
pop
pop
jmp
xor
jp
lahf
jmp
push
loope
dec
clc
jmp
add
daa
xor
in
in
pop
ins
test
inc
fnstsw
dec
ret
es
mov
sahf
xor
add
push
bound
adc
pop
in
addr16
test
push
adc
je
test
sahf
cmps
push
not
adc
mov
dec
push
(bad)
and
cmps
push
(bad)
cs
jne
jb
and
xlat
inc
mov
mov
mov
stos
push
sub
enter
jns
or
vmwrite
sbb
or
push
or
or
and
pop
(bad)
inc
dec
movaps
lock
hlt
scas
shl
inc
push
out
jae
aam
int3
or
adc
out
retf
sahf
mov
movs
add
or
inc
jle
xor
stos
and
rol
iret
cwde
jecxz
mov
fisttp
jmp
std
popa
pop
mov
push
lods
push
stc
repnz
xor
adc
in
addr16
sar
jns
xchg
push
ins
pop
inc
pop
and
lods
pop
cli
cmp
repnz
add
pop
ret
adc
adc
and
push
mov
ins
jo
or
cmp
xchg
add
mov
adc
pop
or
ja
imul
repnz
pop
push
jmp
xchg
bound
nop
cmovl
(bad)
icebp
push
jmp
bound
ins
mov
pop
jmp
jg
fcmovb
xchg
ds
jg
bound
fsub
inc
jmp
aas
mov
adc
pop
es
nop
cmovs
cli
dec
jmp
mov
lock
sbb
bound
lahf
pop
aas
sbb
dec
cmp
je
push
in
sub
stc
cmp
int3
sti
and
add
push
aaa
mov
jle
int
div
add
test
pop
pop
sub
pop
fstsw
xchg
iret
sbb
lods
lea
lods
pushf
xchg
daa
jbe
push
(bad)
jne
jne
jne
popf
or
adc
pop
dec
pusha
aaa
imul
push
addr16
dec
add
push
xor
push
call
adc
or
fisttp
jmp
aam
or
pop
or
out
and
sbb
sbb
je
push
pushf
in
mov
in
lods
pusha
push
rcl
pop
or
movs
test
adc
dec
aam
les
and
lea
push
xchg
mov
push
dec
pusha
or
out
imul
push
pop
mov
jae
loope
dec
adc
cld
pop
pop
aad
mov
xchg
mov
adc
nop
jle
jne
push
bound
xchg
std
int
cmp
inc
out
xlat
into
sub
jg
push
push
push
aam
mov
xchg
adc
(bad)
shl
xor
pushf
enter
xor
fild
fistp
mov
push
push
mov
add
std
ror
clc
call
pushf
jae
jo
push
jae
sar
pushf
fistp
repz
inc
je
jae
push
xchg
mov
ret
cmp
mov
cmp
sub
jae
mov
or
push
jnp
dec
in
div
jns
loope
jmp
int
(bad)
xor
push
loope
retf
push
mov
neg
adc
dec
xor
adc
pop
cmp
xchg
into
xor
aas
retf
or
js
inc
xchg
daa
push
hlt
or
sbb
mov
push
imul
mov
lods
cmp
je
sahf
adc
inc
sub
stos
mov
test
cmp
and
pushf
push
cmp
bound
push
rol
mov
push
xchg
mov
adc
loope
outs
add
jmp
pop
jge
push
mov
lock
adc
jl
cmp
jae
mov
adc
push
stc
add
push
dec
jl
call
sbb
mov
add
or
aam
or
dec
mov
sbb
push
clc
lods
push
push
inc
add
sbb
outs
jmp
or
pop
adc
pop
and
push
movs
push
add
mov
dec
sbb
cmp
outs
pop
out
add
sbb
fwait
add
mov
dec
pandn
mov
sub
cmp
sbb
call
pop
arpl
pop
inc
jbe
scas
jecxz
adc
test
inc
mov
shl
xchg
xor
aas
lods
imul
mov
pop
pop
mov
jecxz
in
sub
jg
cli
retf
movs
pop
or
adc
mov
pop
call
xor
or
mov
pop
enter
add
leave
push
addr16
inc
ficom
push
sub
xchg
pop
or
xchg
pop
aas
jo
xchg
cmc
inc
adc
xor
mov
cmp
fisttp
stos
sbb
cs
mov
mov
jo
call
(bad)
retf
mov
outs
xor
xor
std
jnp
cs
ror
retf
jmp
dec
cmp
add
stos
stos
push
sbb
jb
es
clc
(bad)
cmc
add
mov
jmp
(bad)
xor
mov
and
pop
inc
jne
mov
nop
xchg
cwde
jecxz
(bad)
adc
mov
pop
jl
pusha
fs
mov
aad
dec
jg
xchg
mov
outs
test
ja
add
pop
out
(bad)
call
ins
ja
pop
sub
add
ds
pop
xor
inc
or
pop
sbb
rol
or
xor
sub
xchg
fst
xor
cdq
lea
inc
mov
mov
idiv
xlat
pop
sub
or
pop
cmp
pop
std
dec
and
stc
mov
dec
sbb
or
fs
add
xor
dec
jns
pop
fstp
push
cmp
sub
or
push
je
and
mov
cs
aam
loope
push
mov
(bad)
xchg
or
mov
rol
xor
pop
cmps
mov
adc
adc
test
pop
(bad)
test
jle
sahf
stos
call
je
push
ror
pop
ds
xchg
movs
int3
ja
inc
xor
sub
push
mov
mov
jne
mov
mov
inc
data16
cdq
push
jmp
fmul
ret
lea
or
and
adc
dec
adc
outs
adc
dec
mov
mov
sbb
repz
push
and
jbe
ins
mov
jns
imul
leave
ss
repnz
les
retf
mov
push
pop
jg
arpl
(bad)
push
cld
pop
cld
aas
inc
push
aam
ss
jmp
cld
aaa
cmp
push
pop
pop
cld
pop
fadd
pop
idiv
jmp
pop
stc
xor
ds
jmp
ret
xchg
push
add
inc
mov
movs
stos
out
ja
(bad)
in
enter
out
cmps
add
cld
outs
movs
jo
pop
add
jp
pop
cmc
imul
pop
add
daa
into
and
fcomp
(bad)
cmp
je
xor
xlat
dec
clc
cmc
test
jle
fs
add
cmp
add
jecxz
ds
and
push
sub
add
mov
adc
out
out
fcmovnbe
or
pop
pop
lahf
pop
outs
xchg
push
or
into
cwde
out
jl
shl
xlat
pop
xchg
test
xor
lods
push
sub
jg
lock
push
call
popa
mov
push
push
ret
mov
je
jg
push
call
sub
xor
add
lock
sub
dec
popf
or
and
inc
dec
xchg
push
je
mov
push
sub
push
iret
mov
in
ss
mov
mov
xor
sub
call
movs
sbb
ss
popa
sub
adc
retf
addr16
out
or
xchg
fiadd
cmp
pusha
xor
lahf
mov
mov
pop
or
je
mov
cwde
mov
push
inc
mov
mov
push
push
in
in
mov
in
push
mov
call
outs
nop
aas
add
mov
mov
pop
sbb
or
mov
pop
test
jne
fmul
(bad)
retf
xchg
loopne
daa
dec
call
shl
into
adc
xchg
xchg
daa
inc
ret
adc
inc
call
test
and
ret
push
add
xchg
mov
sbb
outs
cmc
add
imul
adc
in
push
adc
mov
ja
f2xm1
or
cmp
sbb
add
pop
add
sbb
pop
cmp
push
pushf
test
out
cmp
lea
es
cmovnp
add
cmp
sub
mov
mov
aad
int
or
cmp
lock
push
add
sub
pusha
mov
push
mov
add
cmp
loop
call
add
sbb
push
hlt
shl
mov
xchg
add
jo
mov
dec
out
mov
pop
movs
xor
add
sub
pop
add
movs
cmp
push
add
pop
sahf
inc
pushf
sub
mov
into
pop
adc
ins
pop
leave
loopne
popa
add
(bad)
or
mov
daa
dec
lods
sahf
cmp
call
sub
mov
xchg
push
out
adc
or
or
push
pop
jp
or
add
mov
and
dec
adc
fidivr
vandps
dec
test
mov
inc
shr
cwde
cmps
scas
inc
call
xchg
push
mov
enter
test
and
nop
enter
test
sbb
or
mov
(bad)
scas
test
dec
fld
pop
xchg
pushf
mov
add
inc
ret
push
cmps
fwait
nop
pop
adc
cmps
inc
push
add
add
xchg
clc
jl
xchg
add
and
clc
jmp
bound
add
js
sbb
shl
or
dec
cmp
xsha1
cmps
retf
sbb
retf
call
call
in
fisttp
ins
cs
fidiv
pop
dec
leave
jge
cmp
aaa
adc
test
add
sbb
loope
(bad)
int
cmp
aaa
fisub
and
jae
mov
adc
cmp
ret
hlt
sbb
sbb
movs
stc
inc
clc
test
push
aad
sbb
jmp
xor
pop
push
jne
push
push
push
push
and
sub
sub
aad
push
push
push
(bad)
call
sbb
push
call
repz
popf
imul
das
add
pop
adc
push
sub
retf
xchg
in
jp
leave
scas
nop
pop
push
call
jge
dec
enter
add
push
adc
inc
push
adc
sub
push
xor
pop
enter
or
cmp
cmp
add
sub
add
push
daa
cmp
push
or
add
movs
cwde
out
sbb
xchg
or
jne
inc
fsubp
pop
fcmove
les
pop
mov
cmp
jbe
xchg
or
dec
or
adc
enter
sbb
xchg
fwait
push
call
shl
jns
cmc
test
push
dec
jecxz
add
mov
daa
(bad)
imul
arpl
jge
push
fdivr
dec
je
mov
fistp
mov
push
push
xchg
adc
xor
and
ss
xor
adc
(bad)
mov
pop
push
pop
inc
sbb
dec
stos
add
in
stos
nop
xchg
lods
cmps
adc
dec
das
adc
lods
jecxz
les
sub
lahf
push
add
repnz
test
sbb
popf
or
xlat
in
in
inc
push
add
cmp
add
aaa
je
push
int3
stc
and
mov
mov
pop
mov
push
adc
ror
pop
je
ror
pop
fld
sbb
fwait
pusha
call
jl
jno
xchg
jp
les
les
mov
(bad)
fiadd
aam
out
retf
push
retf
push
daa
mov
stos
mov
nop
leave
dec
adc
inc
adc
xor
lock
rep
pop
inc
les
pop
add
pop
arpl
push
cwde
sub
xchg
lock
sub
push
cmp
sub
leave
call
adc
mov
call
pop
push
cmp
jge
push
aam
sub
dec
lea
push
jmp
and
sub
loopne
loopne
and
mov
scas
pop
jg
sbb
and
lea
clc
in
jp
xchg
loopne
repz
add
jle
jno
fisttp
dec
or
pop
clc
adc
add
adc
inc
popa
ins
mov
ror
xor
push
sub
push
pop
das
cmp
jl
push
and
or
es
jl
cmp
push
leave
xchg
sbb
adc
inc
xlat
or
aas
and
push
mov
cmp
push
sbb
sbb
mov
fidiv
cdq
xor
and
sub
and
mov
xchg
retf
xchg
add
mov
loopne
mov
sub
mov
sti
pop
fdivr
mov
(bad)
int
mul
je
mov
push
imul
pusha
ret
or
and
jl
mov
daa
in
test
jge
mov
or
call
mov
or
dec
add
pop
into
xor
ret
mov
arpl
and
push
and
ret
pop
nop
retf
xor
mov
or
jae
outs
ror
pop
dec
rcl
ret
and
popf
pop
or
shl
mov
sti
jns
dec
push
rol
cmp
push
mov
gs
es
push
sbb
xchg
lea
pop
xor
jp
call
push
jle
sub
fs
and
bsf
(bad)
je
test
(bad)
jns
inc
or
and
test
fs
xor
scas
push
arpl
mov
pop
lods
add
mov
dec
sub
(bad)
scas
ja
cs
jno
cmc
adc
and
shl
in
adc
call
dec
gs
push
sbb
xchg
xor
cmp
add
push
dec
push
dec
and
popf
sub
inc
cmp
jle
mov
dec
popf
sbb
jl
xor
jno
sete
sbb
idiv
push
xchg
ins
push
mov
nop
and
loop
js
push
add
imul
push
enter
inc
js
pusha
mov
mov
jg
sub
rcr
addr16
sub
cmp
popa
cmp
xor
lock
clc
iret
xchg
xchg
loope
test
add
inc
test
(bad)
js
inc
popf
add
pop
adc
cmp
jo
gs
mov
cmp
jecxz
adc
in
mov
test
jo
add
inc
push
ja
jb
and
imul
ja
pusha
pop
popa
enter
push
ja
jbe
(bad)
in
inc
pop
icebp
jbe
pop
cmp
scas
aam
retf
jbe
pop
repz
jg
push
outs
and
pop
push
mov
pop
mov
pop
sbb
push
test
sub
or
mov
jnp
push
sub
mov
(bad)
loop
pusha
dec
loope
lods
mov
in
pop
das
inc
push
loopne
push
push
xchg
retf
and
push
inc
xchg
and
ins
(bad)
cmps
push
jno
clc
and
inc
xchg
out
ins
call
retf
and
iret
in
imul
gs
push
push
push
cmp
add
pop
cmp
mov
and
cmps
jne
test
call
fwait
dec
adc
pop
mov
mov
inc
add
mov
in
pop
inc
xor
enter
jbe
push
xchg
cmp
push
or
inc
mov
mov
sub
dec
sbb
add
dec
pop
cmp
jae
rcl
jae
inc
lidtd
jae
xchg
nop
pop
fistp
sbb
push
cmp
pop
cwde
cmps
xchg
nop
or
sbb
xchg
retf
pop
jmp
sub
adc
test
sbb
dec
call
jl
push
adc
push
imul
gs
(bad)
and
shr
sti
shr
push
xchg
cmps
or
sub
fbstp
gs
movs
adc
mov
aas
sub
movzx
jbe
in
lds
pop
pop
ret
or
enter
inc
and
dec
push
imul
xchg
mov
adc
mov
leave
test
lar
repnz
push
mov
push
out
shl
inc
arpl
cmps
dec
mov
mov
adc
fstp
dec
nop
xchg
xchg
dec
out
movs
sbb
popa
repz
adc
in
test
push
xor
das
sbb
not
cmp
into
popa
xchg
ds
(bad)
enter
call
jmp
retf
loope
out
jmp
sbb
clc
dec
cmp
and
addr16
scas
dec
push
stc
sbb
inc
push
leave
mov
(bad)
jo
jo
add
add
loope
push
pop
popa
inc
push
enter
jo
inc
mov
xchg
dec
mov
push
jecxz
jno
cmp
pop
xor
pop
and
repz
imul
cmp
adc
mov
jnp
pop
push
scas
dec
inc
shl
fwait
and
mov
pusha
ficom
jne
loopne
push
sbb
jns
(bad)
dec
loopne
aas
movs
xor
fdivr
mov
jno
(bad)
dec
popf
ins
data16
pop
sbb
retf
inc
add
loop
scas
js
test
pop
sbb
xchg
and
pop
fidiv
push
lahf
ret
mov
push
pop
sbb
arpl
pop
mov
xchg
mov
aas
inc
mov
or
push
and
or
das
stos
or
push
adc
ror
inc
lea
iret
push
mov
ins
rcl
fucomi
lods
push
add
call
xchg
fs
test
sbb
inc
pcmpeqb
adc
push
in
mov
pop
mov
pop
dec
mov
call
dec
lods
pop
adc
call
fs
dec
xchg
and
nop
and
clc
push
sub
cdq
sbb
cmp
sub
popf
add
jns
fwait
fwait
mov
ins
pop
jb
sbb
push
ins
test
ficom
scas
push
or
xchg
pop
popa
push
push
mov
inc
retf
and
add
and
or
jo
sbb
add
and
int3
push
aaa
inc
iret
in
popf
xchg
cmp
mov
mov
ror
lods
gs
sub
sahf
ins
inc
push
jno
(bad)
jmp
sbb
inc
or
fs
test
push
push
jns
or
sub
rcl
addr16
add
out
lods
inc
mov
xchg
je
clc
dec
push
dec
(bad)
retf
rol
push
jge
xchg
push
cmp
imul
inc
xor
movs
sub
add
rol
inc
add
mov
cs
or
dec
mov
pop
push
call
mov
(bad)
js
imul
mov
call
mov
and
adc
push
sahf
nop
dec
std
xchg
push
adc
rol
and
jl
call
sahf
and
or
jns
jmp
imul
jnp
add
mov
nop
data16
or
pop
cmp
fadd
ret
dec
add
push
in
push
sub
push
inc
and
ins
xchg
inc
jb
ins
mov
popa
arpl
stc
or
inc
(bad)
ins
dec
movs
adc
push
lea
pop
adc
pusha
cli
movzx
mov
scas
fcomp
dec
or
push
push
ss
inc
sub
in
xchg
sub
push
adc
sub
popf
test
sub
add
inc
out
jns
sub
pop
dec
ins
sub
cmps
sahf
(bad)
aaa
sbb
cmp
pop
or
sub
xor
out
jns
aaa
inc
push
clc
jmp
sahf
out
push
or
mov
add
or
push
or
rol
push
or
mov
adc
jbe
or
mov
rcr
clc
push
nop
mov
mov
push
sub
sub
jp
jmp
inc
xchg
out
add
sub
cmp
(bad)
pop
call
mov
jmp
lea
leave
push
es
add
pop
fs
add
push
inc
retf
shl
js
movs
mov
adc
clc
dec
shr
mov
sbb
pop
aad
pop
repnz
in
out
mov
shr
dec
lahf
test
and
cmp
cmp
mov
jl
mov
pop
inc
or
sbb
(bad)
inc
lods
enter
push
push
mov
or
pop
jo
push
mov
jno
cmps
jmp
dec
adc
dec
mov
add
frstor
nop
fld
retw
sbb
or
in
mov
nop
mov
imul
mov
inc
(bad)
(bad)
add
pop
cmp
jmp
add
pop
cmp
shr
add
je
xchg
push
pop
adc
jo
ins
jl
cmp
lods
push
or
rcl
mov
xor
mov
(bad)
loopne
ds
or
jns
add
adc
xchg
xor
in
or
pop
les
js
sub
lods
inc
inc
xor
adc
arpl
dec
sub
mov
sbb
not
jb
xchg
add
and
por
adc
cli
xor
and
sti
xor
sub
or
add
(bad)
aaa
fadd
mov
push
pop
fwait
dec
and
retf
test
push
pop
pop
call
sbb
pop
into
push
mov
xor
movs
out
sub
cld
push
nop
and
dec
push
aad
jg
in
cmp
xor
push
jp
clc
mov
test
push
mov
leave
and
push
pop
adc
mov
sbb
dec
lock
mov
ss
shl
bound
sbb
test
por
aaa
sbb
and
vphaddubd
outs
cmp
xchg
dec
sub
sub
pop
mov
pop
inc
stos
shl
xchg
ja
cdq
push
aam
mov
pop
and
lahf
adc
push
and
pop
pop
pop
adc
aam
mov
ds
or
pop
or
add
mov
in
xchg
pop
and
add
and
ret
cmp
sub
bound
shl
push
loopne
or
call
sub
dec
cmp
cmp
loopne
or
or
popf
add
pop
push
adc
inc
adc
ins
dec
sub
ja
scas
add
std
pop
adc
jno
cmp
pop
dec
jg
mov
sub
mov
dec
dec
ds
addr16
pushf
add
or
sbb
lds
in
test
or
aaa
sub
repnz
xor
mov
cmp
and
mov
or
pop
popa
mov
xchg
pop
pop
dec
jmp
mov
pop
test
mov
repnz
push
or
mov
ins
jg
das
addr16
sbb
clc
or
pop
rcl
push
inc
dec
jg
or
mov
jp
and
pusha
inc
or
sub
cmp
movs
sbb
pop
add
add
xor
inc
mov
outs
mov
stos
addr16
lods
dec
mov
mov
cs
push
and
add
cmp
add
jle
adc
inc
cmp
cmp
xchg
sbb
and
ins
or
popf
push
adc
mov
xchg
ds
popf
(bad)
call
pop
cmp
into
push
cmp
push
(bad)
cmp
call
mov
cwde
jno
mov
inc
adc
sub
cmp
rcr
jne
mov
xchg
add
push
enter
sub
lods
int3
jmp
push
xchg
add
clc
xlat
rcr
int3
movzx
push
mov
mov
jge
mov
jbe
push
xchg
inc
add
cmp
lods
in
adc
pop
or
cmp
sti
and
push
mov
loopne
add
inc
mov
and
out
call
lds
add
les
jmp
adc
jo
pop
sbb
inc
and
test
mov
out
sahf
hlt
fstp
cli
adc
fnstenv
or
sub
cmp
and
(bad)
and
cmc
mov
mov
dec
jp
lahf
xchg
push
fbstp
ins
movs
cmp
xor
and
push
rcl
cmp
shl
std
data16
mov
fcom
retf
adc
jecxz
lock
call
imul
jo
call
addr16
add
inc
loope
fadd
push
out
ror
lock
push
sbb
lock
jo
fisttp
retf
xor
mov
out
ret
mov
mov
sbb
cdq
push
mov
jmp
cmc
enter
mov
sub
retfw
inc
mov
cmp
retf
cmc
push
fld
cmc
adc
mov
cmp
test
cmp
nop
retf
dec
mov
push
cwde
jo
jae
sub
pop
movs
and
ror
imul
push
ret
add
lahf
or
retf
mov
jmp
sbb
pop
imul
retf
fsubr
nop
pop
cmps
jg
cwde
jb
mov
and
lods
or
xchg
je
push
push
xchg
mov
shr
adc
cmp
push
xchg
frstor
mov
call
mov
mov
cmp
retf
shl
mov
loope
aas
xchg
das
mov
jae
xor
or
push
sub
sbb
push
jmp
je
in
dec
icebp
je
leave
and
icebp
outs
fs
lock
dec
jnp
push
push
xor
cmp
jo
xlat
fsin
or
xor
jmp
dec
xchg
sti
out
or
push
push
push
dec
mov
xor
sub
add
push
movs
cmps
xor
fcom
inc
mov
jo
push
fs
fs
mov
jo
xchg
add
sub
and
(bad)
in
mov
call
pop
sub
or
stc
cmp
outs
mov
iret
pusha
mov
add
mov
stos
xchg
push
push
and
inc
adc
ja
cmp
xor
xor
enter
std
mov
pop
loop
xlat
adc
push
sub
push
call
and
int
cmps
pusha
leave
or
ffreep
jo
dec
jne
sub
ins
push
call
stos
inc
mov
add
(bad)
call
fild
adc
inc
loop
enter
xor
cmovl
sub
clc
add
(bad)
lods
cdq
add
outs
adc
pop
mov
imul
adc
push
clc
mov
jg
cmp
inc
cmp
ss
sub
sub
xchg
pop
add
mov
test
push
xchg
retf
push
daa
pop
(bad)
call
sub
fcom
(bad)
jle
cmp
push
call
cmp
pop
stc
push
cmp
xor
cmp
out
add
pop
test
or
or
dec
xor
mov
imul
js
stc
je
ss
sub
dec
ss
push
adc
and
sbb
ss
addr16
xchg
je
pop
arpl
jae
cmp
lea
stos
mov
arpl
aas
and
loopne
movs
ja
sbb
fisubr
clc
and
(bad)
fwait
sbb
cmp
adc
xchg
adc
cmp
xchg
out
add
or
jb
jb
cmp
das
cmp
jp
adc
mov
lea
push
out
push
dec
jo
test
and
or
arpl
or
sbb
sub
or
dec
add
aas
ret
or
aad
fbld
inc
rcl
mov
or
adc
add
ins
push
push
lds
outs
or
scas
push
fild
js
add
xchg
adc
or
cmp
pop
ins
mov
jbe
or
mov
das
popa
xor
in
sbb
jne
into
jo
mov
or
mov
push
pop
xchg
std
push
jmp
call
inc
call
mov
loopne
cld
jecxz
lock
loope
push
neg
jnp
cmp
cdq
or
xchg
pop
cbw
xchg
les
adc
sbb
xchg
xchg
mov
mul
mov
mov
jno
es
add
js
xchg
or
sub
ss
xor
pop
xor
shl
push
add
je
xor
xchg
aas
add
mov
xor
ret
(bad)
inc
xor
add
fisubr
or
cmp
or
das
xchg
cld
jnp
retf
inc
cmp
sbb
xchg
pop
dec
pop
sbb
and
xor
xor
push
sub
xor
(bad)
dec
test
push
sbb
push
inc
mov
es
mov
cmp
cmps
cmp
adc
pushf
mov
mov
xor
inc
pop
fst
jb
sub
dec
mov
push
push
push
push
or
test
nop
mov
(bad)
mov
push
pop
outs
fistp
or
lock
outs
add
pop
jle
mov
fsub
shl
pop
and
pop
push
push
or
sbb
in
rcr
mov
push
mov
adc
icebp
mov
fld
adc
dec
cmps
out
xor
push
rcl
movs
xchg
jo
fldenv
add
jl
nop
jecxz
xchg
pop
pop
and
or
loop
daa
mov
and
test
mov
inc
adc
(bad)
pop
lahf
sbb
mov
pop
jb
fsub
mov
adc
mov
push
add
mov
mov
add
lahf
nop
mov
pushf
mov
or
push
adc
mov
nop
mov
fild
lock
sub
or
or
pop
gs
retf
mov
push
fbstp
or
test
xchg
cmp
es
in
inc
mov
sub
jl
jne
std
xor
pop
aam
mov
adc
push
or
push
dec
sbb
cmp
sbb
sub
xchg
mov
test
imul
pop
mov
pushf
or
jne
inc
lock
xor
loopne
mov
xchg
sub
loop
fstp
sbb
test
sbb
jge
daa
mov
push
push
scas
cmp
mov
jl
push
or
xchg
mul
cmp
test
push
mov
and
test
inc
in
cmp
and
lods
sub
lds
jb
dec
enter
jecxz
sbb
retf
dec
and
inc
pop
jb
push
rcr
jno
pusha
js
jnp
outs
xor
ret
iret
fsubr
mov
pop
leave
test
adc
outs
xchg
retf
xor
je
lea
sub
sub
add
stos
sub
or
xor
mov
pusha
js
inc
sub
hlt
fadd
inc
movs
sub
lds
mov
ret
call
fisttp
imul
dec
std
mov
punpcklwd
add
not
and
push
fisttp
sub
test
jb
jno
xor
dec
pop
jmp
aas
or
add
dec
dec
sbb
enter
xor
add
pop
call
bound
push
dec
nop
sbb
fst
repnz
cmp
adc
xchg
test
jge
js
dec
outs
loop
push
cmp
jmp
dec
pop
push
push
or
cmps
mov
repz
or
jp
push
inc
nop
adc
jne
push
mov
sbb
mov
cmp
call
sbb
push
cwde
add
push
pop
sub
stc
mov
in
jle
inc
shl
push
in
lods
sbb
adc
mov
xlat
(bad)
mov
jbe
sbb
xchg
jo
sub
mov
cwde
cmps
or
mov
popa
loope
ds
xchg
add
sahf
add
inc
ror
imul
cmp
sbb
(bad)
or
icebp
mov
clc
adc
xchg
loopne
je
xchg
adc
fucomip
pop
jbe
ds
es
mov
retf
inc
cli
loopne
mov
jns
arpl
mov
or
jmp
and
lods
mov
add
xor
and
cmp
mov
cmp
mul
or
push
push
push
push
js
xchg
inc
test
or
es
xlat
add
inc
xchg
lods
adc
add
add
sbb
push
stos
inc
fsubr
cmp
and
add
pop
fadd
data16
pop
repz
cli
push
or
inc
pusha
imul
fs
push
daa
(bad)
mov
inc
jmp
sub
inc
or
loopne
mov
js
inc
imul
scas
or
scas
cmp
lock
or
jns
lods
push
mov
or
add
idiv
cmp
scas
mov
retf
adc
and
imul
pop
(bad)
int3
inc
in
test
and
clc
and
stc
fnop
mov
dec
movs
xor
push
clc
mov
sahf
stc
and
add
push
sbb
and
fcmovnu
xor
jne
fldcw
sub
and
push
and
xchg
and
pop
sbb
xchg
in
cld
add
test
cmp
mov
ret
lods
(bad)
xchg
dec
sub
inc
(bad)
sbb
cmp
ffree
stc
call
adc
jo
pop
clc
imul
mov
not
pop
ret
xchg
rol
jmp
adc
and
test
test
jecxz
push
push
mov
push
adc
dec
or
mov
mov
jmp
fs
lock
int
sub
jae
cs
sbb
inc
jmp
push
(bad)
pop
pusha
loope
add
cld
push
cmp
std
or
clc
loopne
stos
adc
add
jecxz
arpl
js
xchg
jp
outs
scas
sub
retf
inc
aam
adc
mov
push
inc
add
int
inc
jg
aaa
xchg
test
add
cmp
jl
lea
cmp
jle
add
inc
xchg
sub
or
jl
sbb
mov
call
or
arpl
cmp
into
in
idiv
ret
gs
sub
and
mov
sub
inc
lahf
add
and
sbb
sub
jp
cwde
test
inc
(bad)
jmp
mov
xchg
sbb
xchg
push
or
call
loope
xchg
in
out
jo
add
push
jmp
add
aam
sub
in
dec
es
and
or
jp
bound
loopne
xlat
add
sub
add
xchg
inc
rcl
cld
push
in
dec
(bad)
sub
mov
ins
sbb
dec
(bad)
push
inc
mov
outs
icebp
push
cwde
cmps
pop
outs
sub
cmc
movs
test
jne
and
jno
cli
add
inc
and
add
push
mov
sub
xchg
loop
pop
pop
jge
das
fidiv
push
sbb
ror
shl
leave
sub
test
gs
ja
add
cmp
pop
jg
in
fdivr
inc
loopne
cmp
push
ss
iret
or
pop
xchg
sbb
dec
sti
or
push
or
(bad)
sub
leave
adc
pop
call
cmp
mov
dec
shl
lds
xchg
fild
push
jae
sbb
rsm
push
mov
call
push
adc
mov
cmp
jle
jmp
jge
jmp
dec
xor
sub
jnp
scas
or
into
shr
dec
sbb
dec
adc
ins
jp
icebp
mov
in
sti
sub
gs
call
mov
cld
es
imul
les
inc
or
fiadd
or
adc
xor
jo
jmp
loopne
mov
mov
push
sub
mov
jne
jmp
enter
je
or
clc
sbb
sbb
mov
mov
adc
jne
mov
jmp
into
adc
xchg
mov
mov
dec
pop
push
inc
sub
xchg
jo
ss
inc
and
sub
and
je
dec
xchg
jnp
pop
rcr
and
jno
ret
or
jne
pop
pop
addr16
fcomp
and
xchg
jmp
cmp
ja
and
lock
adc
jle
pop
psubb
mov
add
ds
xor
dec
fsub
pop
push
ds
jecxz
ins
ja
loopne
addr16
(bad)
or
or
sub
pop
lods
dec
pop
int3
cli
mov
int3
ins
push
inc
sar
or
adc
or
ja
push
sti
or
push
std
fisttp
mov
pop
pushf
cmps
pop
call
or
jg
add
sbb
mov
mov
je
ins
mov
mov
jbe
cld
pop
push
into
pop
mov
punpcklbw
inc
cmp
int3
pop
mov
sub
xchg
aaa
push
or
pop
or
pop
pop
leave
jo
pop
pop
jecxz
mov
jp
jg
push
jl
push
inc
jne
cdq
(bad)
je
push
call
call
loope
inc
push
enter
cmp
lock
aaa
rol
retf
or
arpl
or
js
xchg
push
xor
enter
ret
adc
dec
mov
add
fstp
stos
imul
mov
adc
or
repz
std
inc
or
dec
addr16
and
push
adc
nop
pop
outs
cmp
and
cmps
shr
dec
xchg
pop
lock
inc
and
adc
add
push
outs
sub
pop
xor
inc
pop
pusha
jecxz
or
dec
and
cmp
push
cmp
add
mov
rcl
cmc
cmc
dec
dec
adc
pop
fidiv
test
call
add
popf
mov
sub
inc
cmp
sbb
daa
rcr
xor
or
inc
fiadd
add
js
cmp
dec
aam
cmp
mov
mov
push
cmp
xor
sbb
mov
dec
adc
cdq
lea
xor
pop
dec
push
int3
cmp
sbb
adc
and
shr
into
inc
adc
cld
retf
out
and
add
push
mov
fadd
jmp
push
dec
lea
scas
sar
retf
cmc
scas
add
inc
dec
shufps
push
sbb
mov
sbb
inc
sbb
scas
cmp
ins
dec
int3
jge
add
(bad)
test
js
out
push
enter
push
push
push
adc
mov
mov
(bad)
fidiv
jno
mov
adc
push
xor
and
pop
call
mov
mov
adc
jnp
je
xor
int
inc
sar
mov
inc
dec
push
adc
mov
inc
pop
adc
or
xchg
inc
(bad)
jmp
mov
lahf
inc
or
jmp
mov
jmp
add
pop
movs
and
mov
aam
dec
pop
cmp
mov
sbb
sar
push
jp
jmp
push
and
ds
xchg
stos
dec
xchg
dec
add
adc
test
xor
pusha
test
mov
test
das
sub
push
push
call
mov
hlt
fistp
jbe
movs
aaa
clc
(bad)
movs
push
inc
inc
into
int3
addr16
inc
pop
nop
outs
cmp
sub
movs
or
dec
cmp
es
loopne
add
(bad)
xchg
sti
mov
or
iret
jge
rcl
inc
in
and
push
push
cmp
das
call
lods
out
or
mov
mov
leave
mov
jne
mov
dec
xchg
mov
jmp
loopne
cld
push
outs
adc
aad
or
clc
int3
sti
or
inc
aam
mov
es
push
test
and
and
xlat
(bad)
int
call
ins
mov
sbb
imul
jmp
mov
mov
push
ret
sub
or
into
mov
ins
clc
sub
(bad)
(bad)
mov
mov
ret
mov
mov
jns
or
pusha
or
inc
jo
retf
xlat
mov
mov
into
call
shr
cmp
jb
sbb
movs
push
sbb
cmp
dec
sar
es
push
ficom
call
mov
mov
jne
xchg
pop
and
add
or
jmp
or
dec
pop
push
hlt
inc
push
xchg
scas
lock
jmp
sbb
cli
pusha
jne
cmp
not
movs
pop
push
pop
jmp
add
mov
jns
cmp
les
mov
xlat
push
or
or
clc
mov
lahf
jp
test
js
xor
jmp
inc
sub
adc
mov
pop
std
and
sub
out
push
xor
rol
sbb
lock
aam
or
int3
mov
sbb
mov
outs
pop
pause
out
pusha
sbb
xor
je
cmp
mov
pop
adc
adc
pop
in
xor
in
ret
shl
push
js
and
dec
xchg
push
add
adc
lods
retf
add
cli
dec
loop
fld
push
xor
ret
das
mov
mov
call
sbb
(bad)
rcl
jae
test
push
call
mov
loop
int3
cli
push
mov
test
inc
sub
sub
(bad)
mov
and
je
mov
out
or
adc
push
in
(bad)
mov
leave
fst
cwde
mov
adc
cmp
pop
add
jl
mov
sbb
mov
test
in
hlt
call
or
jbe
and
out
pop
xor
leave
lds
inc
or
in
xor
xchg
in
push
or
mov
adc
cmp
stos
mov
fcom
adc
lods
mov
es
cwde
mov
xchg
pop
push
mov
cmp
jne
push
mov
sbb
adc
or
sub
ins
outs
or
mov
imul
(bad)
test
push
mov
jmp
adc
push
jo
pusha
sbb
sbb
adc
aad
add
jecxz
dec
push
push
push
or
jns
sbb
push
out
mov
push
add
cmovne
sub
or
dec
sbb
and
ins
add
fwait
dec
(bad)
cmp
cmp
xor
xor
aad
test
mov
push
sar
mov
inc
or
retf
out
shr
and
leave
enter
adc
inc
push
rcr
mov
and
and
sub
call
(bad)
cld
jmp
stos
sub
loope
xchg
cld
out
xchg
cmp
in
adc
add
sti
adc
adc
scas
std
add
add
push
mov
inc
mov
jo
inc
ins
aaa
test
dec
daa
inc
xchg
inc
push
adc
(bad)
mov
or
or
aaa
xchg
mov
ret
mov
cmp
mov
inc
push
lods
or
cmps
xor
call
push
(bad)
idiv
inc
cmp
mov
lock
mov
and
cmp
mov
imul
jle
jo
int
add
xchg
cmp
dec
push
rcl
adc
push
mov
add
add
mov
mov
repz
call
cmp
xor
mov
(bad)
pop
inc
xor
lahf
xchg
imul
sub
nop
mov
adc
mov
cmp
dec
push
pop
xor
rcr
pop
enter
or
inc
int3
and
mov
xchg
jb
or
cmp
add
in
or
xor
sbb
shl
inc
sub
mov
inc
inc
dec
stos
mov
cdq
sbb
inc
rcl
cmc
lods
lods
test
and
ins
pop
mov
das
and
lods
jno
fs
sbb
test
sbb
mov
or
pop
ins
test
xlat
call
jmp
mov
mov
add
mov
and
sahf
xchg
repz
pop
pop
inc
or
ja
adc
enter
daa
or
cli
pop
adc
jne
push
call
mov
adc
jmp
fdiv
je
or
pusha
dec
mov
ret
inc
cmp
shr
test
push
mov
and
lahf
cdq
lods
cs
add
outs
and
loopne
div
push
ins
jae
jo
xor
(bad)
int3
sub
sbb
inc
shr
add
adc
push
and
or
push
ret
sahf
push
lods
add
sbb
sbb
add
test
inc
lods
jge
and
lods
pop
jmp
(bad)
adc
aam
cmp
or
push
jne
or
int
pop
nop
out
xor
adc
or
xchg
xchg
adc
int
add
jb
mov
sub
mov
mov
aaa
or
or
cdq
jb
push
mov
or
cmps
mov
fst
imul
xlat
ror
fsub
push
bound
mov
push
stc
std
jl
push
nop
and
out
dec
jg
sub
and
adc
push
add
inc
xor
(bad)
sbb
in
repz
dec
call
push
adc
add
adc
add
xchg
fadd
jne
lods
push
adc
push
lea
lock
xchg
jno
ins
sbb
add
mov
mov
adc
sub
dec
loop
adc
xchg
sbb
call
cmp
mov
push
or
mov
xor
sbb
adc
repnz
sub
lahf
or
inc
stos
cmp
je
xchg
cmp
rcr
fist
pusha
push
mov
cmp
jge
stos
adc
and
neg
cmps
mov
adc
jbe
inc
sub
in
out
test
mov
in
in
or
lock
nop
scas
call
pusha
dec
stc
std
in
sbb
xor
aam
fcom
aas
mov
add
sbb
out
cmp
mov
pop
xor
aaa
icebp
push
push
nop
or
push
js
pop
jns
push
hlt
jle
pop
push
imul
call
push
push
movs
(bad)
push
inc
cmp
mov
cs
mov
jno
dec
or
adc
adc
or
push
call
and
ins
popa
sub
or
add
pop
std
inc
inc
and
add
mov
nop
jge
push
pop
mov
push
push
push
and
xchg
imul
add
aas
or
scas
mov
adc
scas
adc
xor
or
or
add
cmps
aas
std
es
cmp
add
or
push
jae
adc
jno
cwde
dec
inc
or
sbb
fimul
mov
adc
push
push
inc
jne
js
mov
xor
popa
cmc
retf
or
aaa
leave
dec
cld
and
add
aas
(bad)
push
mov
inc
jg
pop
es
pushw
mov
jo
dec
or
cmp
loopne
inc
or
fs
pusha
in
add
jno
and
cmps
sbb
push
lds
xor
imul
mov
or
add
push
sbb
inc
call
inc
xchg
ss
push
in
in
jmp
mov
and
sar
out
shr
rol
rcl
cmp
dec
mov
or
sar
aas
movs
pop
lea
mov
xor
push
add
adc
ja
inc
xchg
cdq
add
mov
sub
int3
jmp
bound
sti
and
xor
jnp
rol
cmp
jle
dec
(bad)
xor
stc
idiv
push
or
sbb
sbb
fistp
cmp
jg
pop
ret
fist
inc
add
cmp
jl
sbb
cmp
(bad)
or
push
jbe
or
or
sub
sbb
sbb
mov
mov
dec
dec
icebp
mov
ret
jg
add
inc
mov
jo
pusha
and
add
or
add
fild
mov
mov
sub
fiadd
ret
inc
push
or
cmp
add
ret
fistp
jb
mov
sbb
push
outs
add
cs
rol
lods
rcl
shr
sub
fnstenv
mov
dec
shr
sub
fwait
pop
test
enter
scas
dec
add
mov
adc
lea
cmp
cs
cld
inc
adc
and
or
jl
push
jmp
in
lods
movs
xor
cmp
retf
dec
adc
cmp
sbb
sub
and
jl
dec
in
cmps
or
cmp
pop
fisttp
call
fld
jbe
cmc
mov
push
call
adc
push
mov
fiadd
in
add
jbe
lds
rol
jmp
call
and
sar
popa
inc
adc
movs
repnz
jge
and
pop
jo
push
cmp
mov
sbb
add
rol
mov
add
(bad)
or
jmp
pop
mov
inc
and
and
popa
aaa
dec
dec
sbb
mov
call
dec
ds
aas
adc
push
das
and
pop
or
ret
loopne
lahf
ret
cmp
jne
inc
cli
outs
fmul
out
ret
fisub
push
mov
ja
xchg
dec
mov
call
mov
pop
adc
(bad)
cld
lea
inc
rcr
ja
push
sub
cmp
jbe
mov
adc
or
dec
sub
out
or
(bad)
inc
rcr
sbb
fs
add
pop
mov
loop
pop
xchg
inc
and
inc
add
ret
addr16
inc
aas
adc
or
cmp
add
jmp
scas
and
data16
mov
lar
cs
lahf
in
add
cwde
icebp
iret
je
sub
jl
movs
pop
or
add
mov
sar
or
jb
loopne
mov
lods
or
mov
ret
pop
sub
cmp
xor
adc
aam
and
cmps
sahf
jb
test
popa
loope
call
sahf
hlt
js
sbb
xor
and
mov
add
je
div
mov
pop
cmp
add
shr
imul
fild
push
inc
push
popa
adc
fld
jbe
in
call
adc
test
ss
retf
mov
or
dec
xor
pop
fist
ficomp
out
inc
mov
cmp
stos
xor
inc
mov
loopne
or
test
out
int
mov
add
add
push
arpl
int
mov
sti
xchg
mov
adc
sbb
push
sub
and
out
mov
cmp
push
jo
loop
pushf
ja
imul
and
jae
fisubr
rol
cmps
push
adc
cmp
cwde
ds
call
xor
push
pop
aas
retf
adc
inc
sbb
mov
(bad)
adc
mov
mov
pop
adc
cmp
je
(bad)
sbb
mov
lods
push
inc
inc
or
into
jne
lods
cmp
ja
pusha
jnp
dec
repnz
sub
es
xor
cmp
push
xlat
rcl
dec
shl
nop
(bad)
jl
sbb
aas
sahf
popa
jg
jle
ret
icebp
rol
pop
inc
out
clc
xchg
adc
stos
cli
jp
lods
sub
pop
daa
pop
adc
inc
sub
sbb
dec
dec
lea
sti
push
inc
xor
jb
mov
push
jmp
mov
pop
test
add
and
and
and
add
mov
mov
sbb
add
pop
or
add
and
movs
add
shr
shr
ds
cmp
xor
mov
bound
out
push
pusha
imul
(bad)
loope
mov
repz
retf
dec
adc
push
jae
cmp
dec
xchg
mov
push
loopne
cmp
cmp
xchg
clc
cli
add
pop
pop
adc
gs
lods
and
add
sti
in
inc
xor
jne
jmp
xchg
sub
or
or
xchg
in
gs
and
inc
add
xchg
in
adc
sbb
xchg
adc
je
retf
mov
dec
adc
ror
mov
cmp
push
push
test
mov
sub
mov
push
shl
push
xor
cmp
xchg
icebp
loopne
movs
shl
add
sbb
clc
sahf
or
or
jns
add
call
mov
loopne
push
jae
add
(bad)
call
xor
les
xchg
sub
or
iret
inc
pusha
xor
mov
jmp
xchg
mov
cmp
dec
add
outs
add
gs
cmp
pop
jg
jae
mov
(bad)
pop
add
jmp
inc
hlt
retf
push
gs
dec
test
mov
ss
dec
mov
rol
loopne
loop
pop
xchg
and
pop
or
adc
push
lods
sub
retf
adc
es
inc
rcr
push
mov
mov
mov
cmp
je
sbb
add
nop
pop
pop
loope
(bad)
dec
add
cmp
dec
ffreep
das
jmp
fwait
cmp
pushf
call
dec
pushf
enter
cmp
adc
sbb
add
add
dec
adc
adc
cmp
cmp
add
je
cmps
xor
mov
jp
js
and
icebp
inc
push
loope
cwde
mov
inc
jne
mov
ret
and
add
inc
push
cmp
(bad)
ficomp
rol
sub
arpl
dec
and
adc
xchg
push
fistp
mov
cmp
xchg
push
lahf
ret
pushf
sahf
add
call
cs
imul
add
add
sar
fdiv
cmp
mov
rcr
aas
or
(bad)
sbb
ins
add
adc
mov
jb
and
int
neg
scas
in
out
fsubr
pop
sub
je
and
and
loop
lock
xor
adc
fstp
es
aas
mov
jbe
rol
addr16
adc
inc
sub
add
cmp
add
test
js
imul
add
or
pop
push
ret
rol
lock
add
ds
push
lods
adc
mov
not
loopne
dec
inc
out
add
adc
pop
mov
xchg
cmc
add
fs
add
nop
pop
ds
test
add
push
imul
fldenv
xchg
retf
push
push
iret
scas
dec
fst
sbb
movs
repnz
lods
add
mov
sub
jle
loop
cmp
imul
mov
xchg
xlat
push
add
repz
repz
movs
test
bswap
mov
dec
mov
sahf
in
js
dec
fild
dec
pop
cmp
xchg
lock
inc
push
push
arpl
dec
push
jae
lods
dec
out
loopne
xchg
jb
push
push
or
push
js
jno
adc
xchg
sbb
(bad)
or
popf
into
retf
dec
inc
push
movs
push
retf
jns
push
clc
or
push
repz
fild
and
push
je
mov
or
dec
or
into
scas
inc
push
nop
test
ror
mov
aad
mov
ret
mov
pop
sub
add
mov
stc
or
mov
dec
fist
aas
pop
adc
xlat
ins
fld
daa
(bad)
push
and
daa
daa
outs
inc
or
mov
in
nop
sar
add
outs
mov
inc
or
or
jno
call
loopne
ins
mov
sub
push
mov
cli
ret
fld
cmps
js
add
icebp
add
dec
imul
icebp
jns
ror
add
lock
test
in
popf
jnp
cld
push
cvttps2pi
push
fdiv
xchg
push
aas
inc
jo
daa
sbb
add
lds
aas
(bad)
mov
icebp
xchg
add
inc
or
xchg
cmps
ror
push
jns
push
hlt
sbb
out
add
pop
jb
int
mov
inc
and
adc
xor
pop
sub
xchg
push
cdq
jmp
lods
sbb
dec
and
dec
xor
push
mov
or
and
(bad)
adc
out
push
nop
mov
nop
and
out
or
daa
shr
add
fs
out
out
add
or
out
out
in
and
nop
pop
in
out
call
repnz
add
in
mov
in
add
cmps
in
add
mov
es
and
pop
in
sbb
(bad)
in
in
or
nop
add
in
sbb
in
nop
add
and
in
add
or
in
in
dec
and
nop
or
dec
test
and
in
in
inc
push
mov
pop
and
in
pop
mov
or
mov
fistp
dec
inc
std
jmp
sbb
inc
push
sbb
in
jmp
out
jl
pop
push
jno
jne
or
adc
fistp
jmp
jmp
cmp
and
call
and
retf
ins
leave
test
nop
sbb
std
jmp
xchg
mov
push
xchg
or
and
mov
jae
or
inc
or
cmp
inc
sub
adc
pop
or
mov
ds
lea
aaa
adc
and
and
add
scas
lods
inc
inc
sub
test
fidiv
rcl
or
imul
push
or
and
sub
and
push
fisttp
jg
mov
cmps
pop
sub
xor
mov
sbb
xchg
push
jmp
inc
std
inc
add
cmp
jne
les
icebp
cmc
push
sbb
mov
cld
lea
stc
xchg
sbb
sbb
je
jns
or
int3
imul
fst
and
or
daa
xchg
add
or
imul
adc
rcr
mov
or
and
mov
call
outs
and
adc
data16
ss
push
push
lahf
add
lahf
pop
pop
je
jns
idiv
loopne
and
fstp
jge
je
out
popa
lods
fdiv
jmp
add
jecxz
jmp
ror
add
outs
add
xchg
mov
xor
cmps
(bad)
cmp
push
test
xor
enter
shl
jle
mov
push
out
add
mov
dec
inc
sar
popf
inc
push
jle
xchg
call
pop
jmp
dec
ins
(bad)
out
cs
and
loop
xchg
out
cmp
adc
dec
lock
or
fld
add
or
mov
aad
cmp
adc
mul
dec
push
fcomp
rcr
cs
gs
xchg
lock
out
inc
popa
and
add
and
jnp
xchg
hlt
in
jle
mov
or
push
ret
push
gs
(bad)
jmp
pop
xchg
pop
leave
or
cmp
dec
push
ds
in
in
or
lods
add
xor
mov
in
inc
in
jb
mov
mov
fs
sub
add
cs
leave
pop
and
pop
xchg
inc
adc
popa
sbb
test
push
inc
nop
mov
jl
or
jmp
jo
lods
sbb
cmp
jge
or
loopne
imul
xchg
movs
cli
pop
inc
push
fmul
popa
xchg
pop
pop
shl
out
in
or
mov
jae
enter
enter
pop
imul
loopne
xor
xchg
popf
adc
jecxz
fwait
lods
push
push
shl
jae
jne
mov
retf
mov
mov
jge
scas
popa
cwde
(bad)
dec
push
or
push
xchg
push
in
adc
aas
xchg
xchg
jecxz
sti
cmps
test
inc
aaa
sbb
and
je
popa
or
mov
push
adc
sbb
test
loopne
inc
sub
loop
and
es
sub
pop
enter
dec
pusha
lods
pusha
xor
mov
add
push
sub
je
adc
add
(bad)
loope
xchg
mov
fisttp
xchg
inc
int
aaa
and
push
xor
push
daa
adc
cmp
or
popa
fisttp
mov
test
loopne
or
test
cwde
dec
pop
or
fsincos
push
xor
push
push
cmp
add
sbb
sub
jns
add
sbb
int3
pop
iret
lock
gs
popa
add
ret
aam
pop
add
push
mov
(bad)
lock
mov
mov
ret
jmp
nop
xchg
mov
push
loop
mov
inc
loope
add
push
adc
cli
xor
test
rcl
and
test
add
or
mov
fnsave
adc
and
cmc
dec
in
xor
mov
adc
jmp
movs
(bad)
xor
ins
pop
mov
aad
dec
shl
lods
in
sbb
sub
pusha
cmps
pop
mov
push
jg
loopne
xchg
jno
hlt
mov
inc
adc
add
inc
call
paddw
mov
push
push
test
pusha
add
dec
mov
lods
adc
fild
sahf
mov
fs
fild
call
mov
(bad)
pop
fsub
shl
div
sub
pop
(bad)
out
repz
fwait
cwde
lods
pusha
pop
pop
mov
arpl
sbb
ja
push
inc
pop
jo
fdivrp
out
into
pusha
inc
fcomi
faddp
and
jnp
out
sub
cmp
mov
iret
cmp
outs
sbb
cmp
adc
ret
add
bnd
pop
mov
fistp
call
fcmovu
jge
lods
and
jbe
dec
xchg
pop
mov
ins
ins
clc
inc
dec
push
push
sbb
dec
and
dec
mov
cmp
mov
dec
(bad)
icebp
jl
push
sub
out
je
adc
pop
imul
push
push
scas
mov
movs
push
mov
dec
cmc
inc
or
rcr
adc
lea
sbb
and
cmc
out
es
push
adc
xor
sbb
add
mov
es
and
sbb
inc
mov
or
pop
adc
xchg
and
inc
adc
in
mov
sbb
add
mov
inc
ret
and
adc
mov
gs
inc
push
mov
cdq
es
add
pushf
mov
jbe
jae
(bad)
cmp
aaa
call
sar
lods
mov
mov
shl
xor
mov
movs
jmp
jmp
fcmovb
ret
cld
cwde
jne
or
and
and
iret
test
(bad)
rcr
in
mov
sbb
pop
and
js
or
push
and
pop
add
push
sbb
fs
push
lods
mov
in
sbb
push
add
lods
inc
xchg
inc
cmp
loopne
(bad)
adc
sbb
stos
jmp
adc
xchg
sub
jb
js
outs
in
sbb
pop
pusha
jle
cmp
adc
push
add
pop
jns
in
sub
outs
repnz
pop
push
add
mov
jecxz
jne
aad
jbe
xor
push
cmp
or
(bad)
jne
sub
and
or
or
inc
dec
push
cmp
daa
jne
into
or
sbb
sbb
pop
repnz
lahf
adc
stos
sub
dec
imul
ret
ja
lock
gs
or
inc
outs
adc
sbb
push
shl
or
sub
sbb
inc
mov
sbb
jmp
add
mov
dec
push
push
repz
lods
frstor
mov
and
push
call
(bad)
adc
pop
test
adc
sub
adc
jns
test
stc
or
fs
das
mov
mov
out
std
sbb
mov
rcl
add
mov
jmp
adc
mov
lea
out
mov
and
fimul
dec
mov
inc
call
jmp
pop
je
or
in
ss
dec
or
shl
sub
fild
(bad)
(bad)
lock
fwait
xlat
in
cdq
fist
enter
je
add
sub
enter
in
cmps
push
(bad)
retf
call
(bad)
repz
and
jl
xlat
jl
std
pop
test
inc
fisub
pop
bnd
inc
push
add
add
add
add
add
imul
(bad)
xlat
mov
sbb
mov
fdiv
jne
dec
mov
dec
jno
pop
or
stos
add
inc
push
xor
ins
jae
push
ins
dec
mov
mov
fsubr
in
ret
imul
les
(bad)
mov
sbb
mov
and
jnp
jbe
dec
pop
push
pop
pushf
mov
aad
add
add
test
pushf
pop
sub
(bad)
repnz
cmps
sbb
aad
bound
aam
pop
shl
repz
rcr
xor
cmp
int
jbe
sub
jbe
sbb
fsubr
jns
es
sti
mov
test
push
and
push
pusha
js
mov
call
push
push
cmp
aad
push
popa
mov
push
int3
pop
popa
mov
pop
test
xor
sti
ss
cmp
lds
dec
and
lock
cwde
call
call
rol
push
mov
loop
adc
cmp
clc
jmp
xchg
push
leave
call
pop
and
adc
test
call
cmp
retf
inc
pop
jecxz
fsubrp
and
dec
push
jne
and
aam
shl
call
add
movs
mov
ins
mov
je
pop
adc
test
cmp
cmp
inc
clc
dec
mov
out
pop
add
(bad)
paddw
and
call
add
call
dec
pop
(bad)
out
and
dec
push
add
das
xchg
jne
shr
mov
retf
aaa
add
xor
call
mov
xor
adc
push
je
imul
sbb
xor
scas
add
pop
rcr
ret
sub
push
sbb
rol
aas
mov
and
out
movs
dec
mov
cmps
push
mov
(bad)
cwde
xchg
sub
outs
lock
call
popa
sti
mov
cmp
inc
jae
or
xor
mov
(bad)
adc
outs
das
push
push
add
push
scas
inc
aam
inc
pop
sub
inc
mov
aam
ja
je
mov
and
loope
xor
and
aaa
add
xor
push
fstp
pop
rcl
sub
push
xchg
push
es
aaa
and
xchg
add
and
stc
sar
ins
xchg
cmp
mov
mov
push
mov
mov
mov
scas
cld
out
pop
jbe
(bad)
mov
mov
mov
mov
and
inc
sbb
pop
into
push
movs
icebp
sar
jbe
cmp
out
xchg
add
push
mov
push
mul
in
add
mov
in
call
dec
hlt
add
jmp
rcr
cmp
or
adc
sbb
sbb
les
fdiv
sbb
rol
pusha
inc
mov
icebp
cmp
out
add
imul
test
je
mov
movs
dec
outs
cs
test
test
cmp
adc
retw
mov
add
mov
jae
into
push
addr16
xchg
fnstenv
aad
jb
imul
mov
rcl
test
and
repz
ret
sar
mov
and
dec
push
rol
ret
push
xchg
xor
test
jae
pop
retf
dec
mov
sub
sbb
cmp
dec
fbstp
cmp
mov
sahf
int
aam
jo
mov
jno
push
retf
sub
adc
cmp
sbb
out
movs
pop
loop
ror
je
sbb
js
and
push
popa
or
cs
or
sbb
or
inc
inc
cmp
jb
mov
fisttp
fs
dec
gs
mov
or
or
jmp
mov
cmp
push
mov
icebp
lds
icebp
adc
push
pop
pop
pushf
or
sub
aam
or
sahf
sbb
into
cmp
psubd
cmp
xchg
or
push
xlat
push
dec
mov
fld1
dec
adc
pop
dec
and
pop
and
and
js
adc
cmp
stos
pop
(bad)
cmp
mov
add
out
pop
xor
add
xchg
scas
jno
cmp
ja
cmps
mov
push
sahf
adc
sbb
xchg
sar
sbb
inc
ret
push
jb
cmp
inc
icebp
add
rcr
or
(bad)
int3
popf
call
push
(bad)
int
xor
adc
mov
mov
jmp
add
retf
jne
fisttp
cmp
sub
inc
push
dec
inc
pop
and
pop
out
test
es
push
push
fmul
int
mov
sub
push
retf
inc
mov
ss
or
dec
sub
pop
add
push
push
sbb
ins
inc
push
xor
dec
pop
or
mov
or
nop
sar
push
pop
xchg
retf
and
retf
adc
jle
shr
mov
jo
xchg
mov
sub
pop
aas
pop
dec
dec
in
jle
cmp
and
sti
clc
je
mov
bound
fcom
jmp
shr
aad
movs
repnz
push
push
sbb
push
sbb
jle
cmc
jp
retf
retf
ret
adc
xor
push
rol
add
cld
add
or
push
push
sbb
sub
nop
hlt
push
add
(bad)
daa
cmp
xor
pop
aaa
cmp
mov
in
pop
pop
push
test
xchg
or
pop
dec
pop
inc
cld
pop
xchg
imul
stos
mov
push
push
into
aas
xchg
ret
adc
pop
outs
dec
fsubr
dec
inc
sbb
dec
in
outs
xlat
add
(bad)
pop
dec
in
add
sbb
cmp
and
cmp
mov
aas
nop
xchg
ja
aas
les
leave
add
test
cli
enter
(bad)
les
jns
mov
xchg
fcom
sbb
xchg
cmp
test
adc
scas
inc
push
stos
fdivr
dec
cmp
and
jecxz
inc
dec
and
adc
and
xchg
add
in
dec
hlt
adc
jne
pop
test
pop
int
sub
push
push
loop
ror
test
test
adc
int
sub
outs
xchg
loopne
scas
lea
mov
fdiv
addr16
or
xchg
cli
jge
icebp
and
cmp
sub
fisubr
xchg
data16
jp
stc
push
xor
int
ret
inc
fimul
(bad)
sub
arpl
(bad)
mov
push
mov
sbb
jb
pop
test
repnz
xchg
cmp
cmp
cmp
call
mov
sub
dec
lahf
pop
mov
dec
jmp
mov
jb
cmp
loop
loope
push
pushf
push
imul
xor
movs
addr16
push
push
pop
xchg
push
es
xlat
dec
mov
lea
add
mov
adc
rol
imul
daa
rol
dec
fild
lock
inc
(bad)
cmp
jae
push
push
sub
imul
dec
mov
mov
dec
mov
jp
cmp
and
push
shl
add
inc
sub
lea
mov
es
inc
xchg
imul
add
add
sbb
in
xor
sub
je
push
jae
cmp
rcl
sbb
les
in
je
push
pusha
adc
int
das
xor
jae
add
test
std
add
inc
jmp
add
(bad)
jne
or
inc
shl
shr
push
enter
or
inc
pop
cmp
jne
cmp
jl
dec
enter
add
push
enter
add
mov
xchg
inc
xor
sbb
dec
dec
fmul
add
push
push
push
lock
call
cld
sub
xor
inc
mov
inc
mov
xchg
sub
adc
outs
and
xor
dec
(bad)
cld
dec
enter
pop
mov
loop
mul
shr
push
or
test
sub
cs
lods
rcr
rcr
xchg
xor
mov
cmc
into
and
out
mov
nop
scas
cmp
rcr
sub
jbe
dec
cwde
pop
int
pusha
adc
xchg
adc
pop
stos
pop
push
xchg
(bad)
cli
in
add
sub
mov
add
inc
sub
xchg
push
adc
jle
retf
fdivr
inc
data16
sbb
mov
or
xchg
push
add
mov
(bad)
minps
mov
adc
add
movs
jg
add
(bad)
pop
inc
xlat
iret
loopne
dec
push
push
pop
push
jo
aad
in
daa
int
push
cmp
adc
mov
dec
push
xor
and
pop
test
imul
jae
jmp
pop
push
mov
mov
ins
pop
xor
in
mov
dec
dec
and
punpcklwd
jmp
jmp
sub
push
cdq
lahf
fmul
cli
sbb
in
jmp
push
mov
dec
dec
inc
add
std
ret
push
push
push
add
mov
aas
loope
xchg
xor
je
mov
xchg
add
cs
inc
inc
inc
enter
int
je
mov
aaa
mov
addr16
movs
mov
rol
xor
or
cmp
rcr
push
test
out
dec
mov
test
mov
inc
or
gs
add
fild
sbb
adc
push
out
jb
aam
sbb
sbb
(bad)
mov
call
and
jae
xor
test
(bad)
sar
xor
gs
ins
inc
pop
or
jmp
movs
pop
inc
sbb
cmp
test
nop
adc
mov
int3
push
mov
xlat
and
push
iret
sub
add
inc
pop
xor
xor
sbb
and
das
pop
jge
fdivr
mov
add
dec
dec
mov
lea
jbe
mov
sub
ret
add
fwait
xchg
jns
jbe
sub
fisub
mov
xchg
mov
mov
jmp
inc
aas
jne
add
mov
mov
mov
sbb
mov
retf
add
in
mov
jmp
fidiv
call
loope
sar
bound
loope
cmp
ds
cmp
xor
dec
jecxz
xor
add
leave
js
and
out
push
push
cs
inc
cmc
hlt
mov
stc
rol
fist
xchg
(bad)
push
in
or
jne
mov
shl
add
dec
shl
stos
mov
add
ret
cs
fsub
and
mov
stc
sub
sub
into
adc
inc
imul
inc
stos
add
add
enter
pusha
popf
sub
push
push
or
push
or
push
jmp
pop
sub
sbb
(bad)
fs
(bad)
hlt
jl
add
and
jge
sub
adc
and
sub
repnz
in
dec
sub
ret
xchg
push
es
xor
js
bound
xchg
or
jo
fbstp
mov
retf
mov
or
mov
jb
and
jb
mov
dec
pop
inc
mov
pop
push
adc
add
loop
mov
xchg
cmp
add
push
mov
mov
mov
push
xchg
cmp
mov
and
sub
push
and
nop
or
seta
mov
stos
push
fild
jmp
jns
nop
cmp
pop
loopne
sub
enter
loope
adc
ret
mov
inc
mov
jecxz
mov
aam
xchg
jg
adc
test
add
in
test
adc
and
cmp
popa
pop
adc
inc
adc
lea
fdivrp
sbb
push
inc
sar
dec
adc
jb
cmp
jg
arpl
in
and
leave
or
adc
add
or
push
stc
aas
clc
cmp
or
out
and
mov
sbb
sub
mov
and
mov
out
cmps
cmp
jne
pop
std
fwait
mov
cwde
xchg
inc
loope
cmp
or
into
clc
inc
mov
xchg
ss
jmp
enter
cs
mov
rcl
rcr
and
cmc
popf
imul
push
retf
jbe
test
mov
or
dec
push
and
aad
aad
enter
adc
jns
mov
sbb
arpl
dec
ret
aaa
movs
mov
or
add
(bad)
or
mov
cmps
fmul
or
dec
mov
nop
fild
mov
push
mov
xchg
aaa
lds
and
(bad)
(bad)
cmp
xor
in
adc
sbb
xchg
fistp
ret
xchg
add
jge
mov
adc
inc
jle
dec
inc
mov
dec
(bad)
push
sbb
jbe
mov
xor
cmp
(bad)
mov
movs
test
int3
loope
pusha
(bad)
mov
and
inc
jnp
je
xchg
pusha
dec
adc
jo
fwait
icebp
push
jne
mov
movs
add
pusha
mov
add
pop
test
xor
sub
scas
add
mov
addr16
or
scas
enter
pop
inc
dec
in
je
push
loope
mov
add
add
mov
inc
cmp
cmp
add
sti
mov
cmp
mov
int
xor
or
ins
adc
and
lds
pop
or
loopne
inc
push
cwde
sub
inc
dec
cld
mov
push
ret
loope
jne
push
imul
mov
icebp
inc
ja
fcom
jle
dec
mov
add
rol
add
cwde
inc
sub
sub
xchg
inc
dec
push
and
pusha
imul
out
ret
dec
and
outs
mov
mov
pop
retf
daa
cmp
leave
push
pop
fst
xor
xchg
fbstp
into
test
repz
mov
outs
xor
jmp
rol
shl
adc
add
mov
xor
out
loop
xchg
sbb
pop
pop
mov
and
push
jo
mov
mov
mov
lds
jecxz
push
in
dec
repz
push
mov
stos
dec
mov
pop
int3
test
and
add
sub
retf
xchg
jg
xchg
fild
adc
adc
fwait
ja
mov
nop
mov
lahf
mov
fild
adc
mov
in
call
mov
js
inc
or
mov
pop
and
sbb
xchg
sub
or
je
sub
cwde
cmps
imul
cmp
sub
and
pop
push
pusha
cmc
mov
and
push
push
fld1
jp
add
add
pushf
test
mov
(bad)
mov
stos
add
in
popf
ret
mov
repnz
or
jnp
xchg
cdq
jmp
mov
add
push
or
popa
ss
in
inc
add
add
into
jp
push
arpl
fs
pop
jecxz
sbb
jo
mov
mov
daa
adc
inc
inc
inc
ins
xor
push
call
(bad)
sub
jbe
jne
mov
(bad)
push
xchg
adc
ds
inc
inc
adc
inc
inc
pop
inc
test
xchg
lea
ins
xchg
or
xchg
jno
or
jb
cmp
xor
and
adc
jns
shl
aas
mov
ins
cmp
test
and
xor
daa
sub
mov
add
mov
pop
pushf
pusha
inc
xor
out
pop
sti
add
jne
pop
pop
arpl
or
enter
aam
pop
mov
xchg
test
fsub
in
icebp
sub
loope
inc
int
icebp
imul
ss
xchg
xchg
cmp
xchg
mov
inc
stos
sub
or
mov
adc
movs
cld
adc
inc
and
neg
repz
jmp
test
push
sub
xchg
bound
and
cmp
retf
push
or
cmp
mov
cmp
stos
mov
cdq
mov
popa
push
mov
push
cmc
or
(bad)
cmp
mov
or
jp
mov
mov
sbb
dec
sub
lock
dec
(bad)
test
or
push
ror
pop
sub
pop
jne
retf
mov
or
adc
pop
push
jmp
cmps
cmp
and
xchg
in
and
jmp
shr
lock
sub
aas
repnz
loop
mov
fsubr
mov
mov
or
pop
xchg
ins
int
leave
push
fdivr
shl
ror
or
or
cmp
test
ret
shl
or
pop
add
iret
sub
fs
or
cmps
cmps
mov
xlat
xchg
jmp
lea
push
jmp
daa
gs
mov
xor
mov
xchg
and
adc
cs
lock
je
mov
repnz
cmps
rol
push
inc
and
psubd
repnz
stos
add
sti
or
shl
pusha
or
and
cld
cmc
ror
(bad)
retf
arpl
outs
cwde
jo
mov
sar
add
push
test
lock
adc
lods
add
jo
jmp
je
xchg
shr
test
add
psubsw
je
xchg
xchg
jmp
inc
add
adc
adc
(bad)
push
pop
xor
rcr
adc
test
js
sbb
mov
enter
or
ins
dec
and
or
test
mov
je
adc
cmp
icebp
cmp
jmp
push
in
(bad)
cmc
movs
das
push
cmp
mov
inc
mov
nop
adc
sbb
sbb
adc
ins
das
das
jne
pop
sbb
push
inc
adc
pop
dec
dec
add
call
adc
enter
fnsetpm(287
or
sbb
gs
je
mov
mov
loopne
push
dec
mov
ret
nop
fst
cmp
mov
pop
adc
add
and
nop
les
adc
add
sbb
add
pop
push
mov
vpscatterqd
loop
popf
mov
adc
sar
pop
ror
ror
pop
je
gs
xor
sti
jae
mov
sub
push
mov
jp
sub
inc
sbb
mov
adc
stos
ficom
or
cmp
add
shl
pusha
add
sub
adc
pop
pop
les
popa
loope
xor
and
inc
inc
shr
aaa
inc
mov
xchg
test
pop
and
in
add
aas
push
and
dec
push
push
xchg
dec
pusha
scas
sub
daa
xor
loopne
daa
sar
dec
add
loope
and
(bad)
sub
lods
or
add
retf
pop
or
fs
cmp
mov
ja
adc
scas
fnstsw
in
dec
add
pushf
ins
push
in
dec
in
call
call
dec
cmp
push
enter
dec
xor
inc
cmp
xlat
test
loopne
mov
pop
sbb
hlt
jbe
xchg
mov
rcl
outs
pusha
add
pop
jno
pop
sahf
xchg
mov
nop
mov
cwde
clc
jae
mov
add
adc
leave
retf
add
sub
xor
dec
dec
mov
cmp
push
and
retf
aam
xchg
push
push
cmp
dec
jl
mov
sbb
xor
lahf
lods
(bad)
and
and
push
sbb
lahf
xor
adc
sbb
adc
ss
mov
add
ins
xor
sub
add
inc
shr
push
jmp
jbe
enter
mov
fs
or
mov
jg
mov
push
lea
pop
adc
test
mov
inc
(bad)
enter
add
push
cmps
push
cdq
pop
xor
lods
aad
pushf
mov
and
mov
pop
jo
gs
lods
neg
mov
or
imul
inc
sub
jmp
loop
inc
inc
test
pop
add
pop
arpl
push
push
push
inc
mov
sub
pop
xor
inc
sbb
inc
test
scas
mov
movs
nop
xor
mov
xchg
sub
mov
cmc
pusha
popf
xor
push
push
call
les
xchg
jbe
rcr
ds
jmp
lods
sahf
push
adc
xchg
and
or
or
add
mov
test
inc
cmp
push
imul
xor
dec
push
push
mov
sbb
aam
xor
jl
je
ins
pop
sub
ret
imul
ret
data16
adc
or
sbb
push
call
mov
sbb
sub
ret
mov
loopne
out
js
popa
xor
adc
cwde
sbb
xchg
push
test
sub
push
push
or
jno
add
push
cmp
sub
jno
enter
inc
mov
pushf
add
std
test
mov
xor
fs
pushf
inc
ret
add
push
add
xchg
ds
adc
sti
add
mov
call
jmp
nop
fcomp
and
cmp
(bad)
add
pop
mov
push
pop
stos
mov
inc
pop
cwde
add
inc
sub
or
adc
cmp
jo
xlat
dec
out
movs
xchg
xor
sbb
imul
sbb
leave
les
popf
ja
and
imul
and
(bad)
data16
rcl
or
jle
jo
dec
in
lahf
adc
scas
aam
es
add
push
add
sqrtps
jg
dec
sbb
aaa
cs
and
mov
mov
jle
jp
jo
add
push
pop
pop
xor
add
je
xchg
test
pop
add
inc
jo
rol
sub
sbb
and
add
push
sub
inc
std
pop
in
and
jns
add
cmp
pop
jge
test
sbb
idiv
lock
cmp
add
cmp
jge
add
push
and
sub
enter
mov
ret
xchg
pop
adc
mov
in
mov
mov
je
mov
dec
inc
shl
push
mov
adc
or
add
in
ror
pushf
jbe
repnz
(bad)
jmp
push
inc
in
pushf
test
test
xchg
test
add
cmp
movs
outs
pushf
das
pop
and
push
test
aaa
and
pop
add
dec
shl
cmp
jge
fldcw
in
cmp
jge
cmp
call
add
icebp
sub
not
add
xchg
adc
push
enter
lock
xor
and
or
mov
mov
mov
mov
les
loopne
dec
lods
dec
push
lods
ret
mov
call
retf
inc
pop
pop
sub
retf
cmp
nop
sub
cmp
cvtpi2ps
test
sub
call
sub
loope
cwde
mov
movs
pop
popa
mov
cdq
clc
xchg
xchg
xchg
mov
in
or
mov
mov
mov
cwde
in
or
shr
aad
push
call
mov
cmps
ja
aam
push
and
inc
inc
inc
(bad)
push
pop
and
or
aad
adc
stos
inc
cli
push
je
inc
or
cs
fild
addr16
mov
pop
outs
pop
push
or
ins
scas
add
pop
mov
or
add
pop
fadd
out
xor
or
xchg
adc
call
sbb
sub
movs
push
mov
mov
dec
shl
sub
inc
sbb
add
add
push
pop
inc
clc
std
sub
adc
es
out
inc
jge
xchg
pop
add
jo
cmc
fwait
ret
xchg
sbb
fld
xor
mov
inc
sub
ins
lahf
(bad)
in
shl
stos
loop
test
je
lea
les
out
jno
inc
add
call
adc
push
test
repnz
or
mov
rcl
(bad)
sahf
adc
loop
xchg
dec
sbb
sbb
add
fstp
loop
shl
fdivr
pop
mov
test
js
ins
or
test
(bad)
test
push
mov
pusha
and
mov
cdq
mov
test
xchg
xchg
sub
movs
je
xor
mov
scas
pop
inc
daa
test
addr16
ret
cmp
inc
enter
les
pop
jl
push
stos
mov
sti
call
inc
mov
jmp
push
pop
ins
and
mov
push
jl
mov
pop
dec
jb
add
mov
mov
jmp
or
test
daa
mov
or
sahf
or
or
mov
shr
pushf
mov
cmps
push
push
scas
aad
call
adc
lods
inc
repnz
dec
mov
xor
out
(bad)
movs
(bad)
mov
mov
scas
xchg
sbb
sub
and
pop
arpl
pop
sub
arpl
push
pop
inc
xor
inc
sbb
fimul
in
(bad)
sub
repnz
pop
(bad)
fdivr
jmp
and
push
push
jnp
mov
sbb
in
pop
mov
push
mov
popf
test
jmp
push
push
and
pop
das
cmp
dec
push
movs
dec
jbe
cmp
nop
test
mov
cmp
sbb
dec
pop
dec
cmp
sbb
pop
rcl
neg
mov
mov
dec
push
jbe
repnz
jne
mov
jne
or
adc
or
loopne
(bad)
dec
and
fadd
outs
or
xchg
pop
dec
movsx
shr
or
mov
cmovle
call
daa
and
push
mov
repnz
push
jecxz
xchg
rcl
push
inc
lock
cmp
movs
repz
and
int3
sti
scas
inc
bound
add
inc
push
mov
retf
push
push
not
shl
cmp
adc
adc
mov
xor
adc
jmp
popa
call
cmp
outs
adc
loop
adc
sbb
repz
aam
hlt
fdivrp
jmp
call
pushf
adc
and
mov
push
cli
mov
dec
push
out
mov
(bad)
popa
add
int3
imul
fwait
rcr
test
sbb
js
and
ins
call
push
movs
sar
xchg
mov
cld
(bad)
ins
pop
ss
dec
nop
lock
jo
popa
leave
out
fmul
inc
(bad)
pop
xor
out
lods
mov
push
call
pusha
shr
xchg
mov
(bad)
in
stos
arpl
aam
push
pushw
sub
or
inc
(bad)
out
mov
inc
nop
add
push
add
xor
test
add
dec
cmp
or
(bad)
out
or
arpl
cmc
sbb
and
js
xchg
sub
add
mov
push
ds
sbb
or
bound
add
into
cdq
fldcw
mov
(bad)
shr
ret
hlt
(bad)
push
out
ss
ins
dec
sub
js
call
in
sub
jmp
call
or
mov
push
lea
add
inc
xchg
(bad)
out
(bad)
ftst
push
xchg
and
mov
pop
out
jp
jnp
shr
inc
jb
jl
nop
dec
pop
mov
pop
adc
call
or
add
bound
adc
leave
test
movs
test
cmp
or
cmp
cmp
repz
inc
dec
dec
push
lahf
cmp
rcl
cmp
dec
lock
mov
push
test
dec
ffree
movs
inc
lods
adc
dec
jnp
jmp
pusha
mov
divps
rcl
pop
dec
(bad)
inc
jmp
dec
imul
sub
dec
out
ss
sbb
pop
rcl
ds
jno
mov
emms
pop
or
lds
push
sbb
clc
add
hlt
cmc
sub
jo
dec
data16
loope
adc
cmp
sbb
add
push
and
mov
ficom
push
(bad)
sbb
sub
in
mov
imul
sbb
adc
sbb
add
dec
cmp
pop
xchg
mov
nop
es
arpl
or
xchg
add
enter
(bad)
dec
mov
ins
jle
cmp
and
dec
popa
xchg
cli
out
nop
and
pop
sbb
inc
stos
mov
push
or
adc
mov
cmp
cmc
cmp
test
xor
scas
mov
ret
inc
adc
xor
push
sbb
xchg
cmp
sub
mov
dec
xor
dec
bound
mov
in
mov
xchg
mov
or
jp
inc
cmc
push
(bad)
into
enter
inc
sbb
fiadd
xchg
inc
sbb
dec
pop
fild
jle
movs
ror
popf
cs
mov
jns
mov
mov
add
movs
cmp
push
inc
sub
or
sete
or
add
sbb
icebp
adc
ds
adc
push
mov
adc
mov
outs
xor
mov
aad
adc
fdiv
aaa
adc
enter
push
push
call
pop
jl
in
pusha
adc
es
add
push
and
sub
aaa
push
js
add
push
push
cmp
or
mov
add
xchg
mov
jno
mov
rcl
xchg
ret
(bad)
add
xor
outs
test
mov
pop
and
xlat
cmp
rcr
adc
sub
mov
adc
sbb
mov
add
inc
push
fiadd
xchg
into
push
mov
pop
pop
pop
push
mov
push
call
fiadd
add
loopne
out
ror
xchg
imul
jl
mov
and
dec
pop
jl
call
or
std
mov
shl
lock
rcr
or
push
ds
pop
lahf
cmps
push
mov
scas
mov
lods
adc
dec
or
adc
or
add
shr
mov
adc
mov
push
js
xchg
sbb
test
outs
push
inc
xchg
sub
and
push
jne
ror
push
mov
dec
es
fisub
and
imul
ror
xchg
mov
or
popa
cmp
dec
xor
iret
mov
fdivr
inc
adc
sbb
pop
sbb
cmp
dec
ret
(bad)
fcmovnu
mov
(bad)
dec
add
inc
and
mov
test
pop
adc
adc
xor
popa
inc
cmps
test
addr16
xchg
jo
shl
jg
jno
mov
bound
push
hlt
pop
bound
adc
xchg
or
xor
rcl
stos
cwde
push
mov
fxch
adc
dec
mov
adc
ret
xchg
outs
sub
sbb
push
adc
loope
inc
push
inc
or
sub
enter
stos
enter
sar
push
test
je
push
test
(bad)
cmp
inc
shl
scas
xchg
lods
movs
jge
xlat
(bad)
imul
lds
jns
mov
jmp
sbb
dec
test
mov
adc
movs
(bad)
fdiv
cmp
ja
movs
pop
inc
or
test
mov
or
push
loope
push
ret
or
ret
fstp
es
push
cmp
test
sbb
sbb
in
ins
mov
jl
or
inc
ds
xchg
fidivr
mov
or
pop
add
(bad)
movs
mov
fnstcw
inc
call
das
and
push
test
dec
sub
push
push
push
outs
adc
add
xor
and
cmp
stos
or
jne
sar
inc
push
rcl
mov
sub
cmc
jg
xchg
dec
enter
and
nop
add
lods
fs
push
inc
push
push
cmp
jb
xor
add
and
add
adc
nop
add
add
add
push
mov
inc
repz
inc
lea
or
inc
mov
int
or
nop
or
jp
push
sbb
and
add
leave
clc
mov
loopne
dec
lea
or
nop
enter
push
out
nop
(bad)
or
pop
push
dec
das
stos
push
test
in
les
adc
mov
sbb
or
dec
cs
(bad)
and
dec
test
add
add
add
ret
xor
ret
repz
loopne
shl
mov
dec
and
ins
jo
sub
xor
cmp
inc
or
sub
ret
pop
shl
add
and
pusha
into
mov
sub
(bad)
sub
test
hlt
call
or
cs
add
xor
shl
mov
inc
push
stos
or
jecxz
dec
clc
sbb
inc
jo
mov
mov
jbe
imul
cmp
push
push
ficom
push
and
sbb
out
sub
or
push
push
add
mov
inc
inc
add
test
sub
push
or
jne
jo
mov
add
sub
cmps
sbb
mov
push
inc
mov
sub
push
adc
rol
cmp
jle
add
jle
call
add
mov
mov
mov
cmp
jbe
movzx
jmp
dec
pop
(bad)
jmp
lods
xor
xor
push
jle
mov
es
cdq
mov
addr16
mov
fild
imul
push
add
rcl
xor
shl
adc
push
pop
add
adc
inc
or
mov
xor
sbb
pop
adc
lea
push
test
push
sub
test
sub
jae
lock
xor
clc
int3
dec
pushf
loop
and
xchg
push
push
xor
ins
daa
aas
push
sbb
pop
add
loopne
ss
sbb
adc
add
pop
cmp
dec
pop
add
add
dec
sbb
sub
sbb
inc
add
lods
or
push
inc
pcmpgtb
icebp
inc
sbb
adc
or
inc
and
pop
imul
add
sbb
mov
adc
add
add
and
mov
loop
or
push
cld
xor
cli
xor
or
cs
lock
pushf
dec
xchg
and
mov
mov
xor
mov
mov
xor
inc
add
test
fld
lock
sub
add
clc
jae
add
mov
or
out
cwde
fnstenv
popf
mov
ss
ss
mov
add
or
push
add
bound
out
pop
ins
push
add
push
mov
mov
xchg
cmp
sti
inc
bnd
jno
mov
jns
cwde
dec
dec
(bad)
dec
sub
add
sub
dec
daa
inc
sbb
push
pop
dec
adc
enter
(bad)
xor
mov
dec
aam
aas
push
and
lea
mov
cmp
dec
jne
jl
int
pop
sub
and
inc
adc
mov
or
sbb
jl
in
pop
ins
pop
mov
add
sub
cmp
or
cmc
call
pop
mov
xor
je
popf
jne
inc
pop
inc
ret
cwde
pop
cmp
les
ss
dec
mov
call
call
fnstcw
jns
aam
and
loopne
jae
fwait
lds
xor
inc
adc
and
dec
pop
adc
cmp
jnp
jl
cld
fcomp
jne
or
mov
shl
inc
push
inc
push
sahf
cmps
sti
mov
add
or
bound
dec
das
and
push
push
inc
dec
outs
xor
xlat
popf
sbb
dec
and
inc
and
cmps
xchg
fwait
nop
cmp
mov
mov
inc
out
fist
sti
sbb
push
add
dec
ins
mov
(bad)
adc
dec
adc
aam
push
pop
loop
sahf
lods
loope
loope
mov
ds
imul
mov
push
shl
xor
pop
cmp
add
xor
test
dec
fwait
ja
jns
ret
les
or
pushf
out
mov
lods
add
and
sbb
cmp
aaa
add
dec
mov
sbb
add
addr16
adc
lds
mov
test
mov
jp
pop
arpl
call
aas
sub
imul
cmc
lea
cmp
movs
push
cmp
inc
ret
test
xchg
inc
and
or
pushfw
sub
push
loopne
stc
jb
push
add
je
cmp
jbe
sbb
mov
push
add
sub
loopne
mov
mov
xchg
xchg
cmp
or
cmp
sub
add
xor
add
push
add
icebp
jg
push
add
add
add
mov
push
push
pop
test
push
add
sub
shl
loop
push
call
dec
leave
(bad)
js
push
jo
sbb
mov
ins
(bad)
mov
mov
mov
les
ja
test
test
xor
xor
pop
or
sbb
cld
jb
sub
mov
call
dec
les
in
sub
out
call
test
push
je
sahf
loop
mov
cmp
mov
and
sub
add
sbb
xor
xor
push
or
adc
mov
sub
push
add
jp
sbb
or
jbe
ret
icebp
test
sub
mov
popa
rcr
add
sbb
lock
or
rcl
clc
push
ret
dec
cwde
inc
pushf
out
cwde
cmp
mov
imul
ret
adc
lock
fstp
imul
test
popa
adc
jae
ss
outs
add
shr
jmp
iret
cmp
lock
add
push
or
mov
pop
sar
dec
xchg
popf
jne
adc
(bad)
fild
push
mov
mov
mov
pop
daa
ds
push
mov
sub
cmp
ret
out
movs
mov
and
imul
lahf
add
and
pusha
inc
in
call
push
test
jo
pop
dec
pop
jmp
cmp
inc
jne
fimul
iret
enter
loop
pop
add
xchg
push
popf
test
jmp
sbb
loopne
inc
iret
jns
sub
mov
add
sti
lea
pop
pop
add
jb
mov
je
jle
dec
outs
je
movs
imul
mov
ins
jno
push
cmp
dec
jne
dec
pushf
adc
push
push
adc
sbb
pop
mov
(bad)
not
movs
std
sbb
pop
mov
push
shl
push
adc
cs
push
movs
push
mov
(bad)
popf
pop
ins
mov
jo
sahf
adc
fnstenv
push
push
(bad)
aaa
mov
or
push
retf
popa
push
cmp
dec
pop
pop
push
cmp
inc
add
dec
cmps
fst
xchg
add
es
jne
das
push
and
cmps
pusha
or
sbb
inc
aam
sbb
adc
and
call
dec
pop
int
sbb
(bad)
sub
cmp
xor
cmp
inc
and
retf
mov
xor
and
pushf
add
mov
fistp
pop
cmp
(bad)
push
clc
jbe
mov
loopne
shr
mov
fld
jmp
pop
jno
add
xlat
mov
out
xor
mov
xor
ret
mov
fsubr
ins
retf
push
adc
enter
pop
mov
pop
ret
push
cmp
retf
xor
push
and
int3
jno
mov
or
add
scas
add
ffree
pop
add
jbe
mov
xchg
push
rcr
jno
jb
jno
jno
lds
jge
mov
popa
pop
retf
movs
pop
leave
or
jge
mov
fst
mov
push
je
push
cld
(bad)
ja
push
sub
mov
cmp
or
cmp
ffree
clc
and
rcl
push
psubsb
std
ins
mov
jecxz
pop
stos
cmps
repnz
js
jmp
xor
data16
inc
inc
cmp
jne
sub
sbb
push
fwait
and
or
js
addr16
test
test
addr16
cmp
xor
lods
test
sub
dec
cmp
cmp
adc
sbb
test
mov
mov
push
jb
and
inc
adc
and
xchg
scas
jb
inc
push
xchg
repnz
retf
adc
add
mov
out
add
xor
push
adc
test
add
pop
(bad)
push
cli
nop
jo
mov
dec
sbb
cmp
lahf
or
call
jo
cmp
mov
inc
mov
cs
sub
out
icebp
add
inc
rcl
sub
imul
adc
dec
jg
push
call
push
clc
jmp
mov
outs
push
or
test
rcl
outs
fild
test
mov
outs
add
or
mov
sub
ret
pop
inc
or
push
pop
sub
mov
test
cmp
cmp
cmp
jl
dec
adc
test
outs
push
in
mov
je
sbb
pop
push
pop
lods
push
ret
jo
mov
add
jl
and
dec
mov
add
stos
and
sub
out
outs
dec
stos
cmp
push
push
call
(bad)
sub
out
pop
cmp
pop
ins
jmp
sub
ins
das
jg
outs
jl
push
and
inc
jmp
shl
jle
and
ins
inc
ror
push
push
mov
stos
enter
push
xchg
scas
mov
add
leave
les
add
push
cld
sub
mov
aad
cmp
mov
or
call
sbb
mov
jl
sbb
mov
call
sbb
ja
jb
int
adc
aas
add
push
inc
mov
dec
ror
push
in
cmp
pop
(bad)
and
pusha
sub
js
jne
in
int3
xchg
jo
es
pop
adc
jge
je
push
sbb
push
ret
adc
or
add
in
adc
push
rcl
mov
xchg
pop
ds
mov
sub
mov
add
add
xor
mov
mov
call
and
mov
adc
mov
out
enter
push
push
xchg
sbb
or
lahf
add
xor
jbe
push
xchg
jne
pop
sbb
inc
fs
push
jp
out
xchg
adc
xor
push
pushf
jmp
retf
addr16
ds
imul
loop
add
andnps
imul
jg
int
mov
sbb
xor
push
push
je
mov
out
sub
cmp
xchg
test
dec
sahf
lea
cdq
jne
push
shl
int
cs
xchg
inc
mov
ret
and
imul
adc
jmp
pop
imul
xor
push
adc
mov
(bad)
mov
movs
pop
xor
nop
jo
add
dec
dec
arpl
fwait
sub
xchg
clc
or
add
push
add
ds
repnz
std
in
lea
je
nop
push
js
int3
add
imul
push
add
push
jnp
mov
sti
sbb
movs
cmp
les
push
je
ret
pop
or
lods
adc
fidiv
shr
mov
imul
mov
dec
out
addr16
pop
cmp
sbb
push
pop
sub
xchg
pop
sahf
xor
add
jl
imul
pop
mov
xchg
movs
and
push
(bad)
aaa
inc
or
scas
dec
mov
aad
loop
add
das
aam
and
xchg
dec
mov
push
sbb
add
fmul
jnp
lock
mov
cmps
add
test
cmp
or
adc
sbb
or
mov
inc
shl
push
cwde
jmp
fisubr
dec
sbb
or
loope
add
dec
fist
xor
xacquire
and
in
nop
or
addr16
jmp
push
cmp
and
mov
xchg
inc
jne
xchg
sbb
push
push
mov
ret
outs
clc
out
js
lds
xchg
inc
shl
and
leave
(bad)
pop
test
inc
push
loop
int3
ror
(bad)
pop
mov
ret
jne
stos
gs
adc
add
cmp
push
fdiv
sbb
xchg
loope
pushf
xor
hlt
jne
jge
jmp
lods
pusha
pop
add
mov
pop
push
leave
mov
xor
scas
xor
gs
popa
and
adc
gs
rol
sub
in
cli
fs
sbb
inc
or
or
hlt
rol
or
dec
inc
xor
out
xor
movs
movs
and
pop
add
gs
add
mov
mov
retf
jne
dec
into
push
pop
aaa
es
xchg
out
std
dec
pop
add
cwde
mov
arpl
fs
stc
mov
fild
pop
sub
add
add
push
sahf
pop
ret
stc
arpl
call
cmp
dec
cmp
fs
mov
imul
loop
popa
movs
inc
mov
mov
cmp
xchg
push
imul
dec
ja
push
dec
shl
test
ds
arpl
mov
pop
rcr
(bad)
test
xor
cmps
mov
adc
inc
add
xor
sub
arpl
cmps
adc
xchg
(bad)
fisttp
std
data16
outs
fisttp
adc
jns
lahf
leave
leave
and
jg
xchg
out
(bad)
clc
(bad)
sub
inc
in
mov
inc
dec
lods
jae
ret
movzx
jp
shl
mov
push
mov
imul
xor
mov
je
and
push
inc
mov
xor
aad
neg
fs
jnp
aad
(bad)
jmp
aas
(bad)
js
retf
pop
fisub
fcomp
and
pop
mov
mov
and
mov
and
pop
pop
and
ret
mov
cmp
jne
mov
dec
les
add
lea
jge
sub
fist
scas
pop
or
add
push
inc
xor
adc
aam
push
xor
inc
in
mov
(bad)
cmp
je
cmps
adc
cld
or
sbb
mov
add
add
loopne
xchg
mov
cwde
js
call
or
ret
or
add
and
sbb
or
and
test
sbb
(bad)
iret
jmp
bnd
pop
jmp
pop
(bad)
sbb
sbb
sbb
pop
mov
call
or
pop
add
add
push
sub
call
push
push
cmp
fsubrp
pop
pop
out
lea
jmp
jmp
jbe
das
nop
test
loope
pop
pminsw
lds
cmp
add
nop
sbb
shl
inc
mov
xchg
inc
or
jb
xor
cmp
lds
sub
out
mov
mov
pop
sbb
cmp
test
xor
jp
add
arpl
mov
bound
dec
fsubr
fiadd
pop
test
push
scas
les
jmp
mov
and
adc
stc
adc
or
bound
pop
jbe
mov
call
jecxz
push
int3
push
inc
adc
jg
loopne
and
mov
dec
push
adc
jle
push
and
sbb
pop
jno
push
jp
xor
out
pop
inc
std
outs
or
mov
pop
mov
pop
xor
mov
xor
cmps
leave
or
ret
dec
push
mov
sbb
stc
cmp
jne
mov
pop
aaa
imul
xor
and
jle
lods
test
call
stos
js
neg
lea
call
lea
push
(bad)
cmp
push
mov
mov
mov
fst
icebp
xchg
imul
in
mov
sub
or
add
fbld
ret
push
fisubr
jns
push
or
aam
inc
sbb
in
mov
lods
mov
call
jbe
add
cmp
jl
(bad)
dec
mov
pop
sti
fld
push
pop
sub
lea
push
push
jo
push
cmps
sbb
int
jle
mov
mov
adc
iret
je
movs
(bad)
push
fidiv
xchg
cmp
jge
sbb
imul
or
daa
and
lock
pop
pop
mov
or
mov
shl
in
fld
cmps
mov
mov
ficomp
sub
dec
div
les
in
add
push
es
cmp
sub
adc
push
pushf
add
pop
aam
mov
push
ins
pop
popf
neg
(bad)
stos
adc
loop
pop
push
lea
call
shl
push
or
cmp
jbe
std
mov
popa
adc
jmp
and
jbe
mov
add
or
pop
scas
pop
xchg
fld
iret
ss
sbb
lea
pop
fbstp
push
xchg
aad
push
push
mov
xor
jmp
mov
cmps
pop
out
aad
or
and
lods
sbb
fcomp
push
pop
fdivr
xor
mov
rcr
xor
pop
inc
mov
xor
ret
jmp
test
inc
adc
xlat
add
fld
xchg
test
xchg
cs
adc
pop
pusha
aas
xchg
dec
pop
imul
les
pop
cld
out
ins
sbb
call
push
mov
pop
push
(bad)
xchg
sub
test
or
pusha
test
aaa
pop
or
mov
pop
add
push
xor
mov
fld
push
jmp
sub
fild
add
push
push
push
leave
jl
movs
pop
push
pop
or
inc
and
adc
add
ret
movs
sub
add
dec
or
sbb
jo
or
(bad)
cld
pop
call
lock
jnp
jle
pop
push
push
sub
jle
hlt
fs
add
and
and
sub
xchg
add
sub
push
pop
(bad)
int3
cwde
adc
jge
add
stos
mov
sbb
idiv
je
sbb
adc
retf
sub
xor
adc
pop
add
lock
les
je
(bad)
cld
push
inc
pushf
sbb
mov
and
mov
shl
shr
lea
dec
int
adc
fbstp
jg
pop
add
sub
stos
mov
mov
out
mov
ins
pop
ss
scas
andps
add
outs
icebp
je
push
loopne
cmp
push
dec
add
sar
rol
cli
fwait
sub
sbb
enter
inc
mov
rcr
push
cmp
sbb
xchg
int
movs
inc
add
or
sub
xchg
jp
loopne
mov
pop
mov
pop
sub
pop
sub
mov
test
stos
pop
imul
mov
xchg
pop
or
(bad)
stos
mov
or
sahf
out
adc
mov
(bad)
pop
or
jnp
adc
aaa
jge
mov
loope
jne
sbb
mov
mov
scas
push
push
xchg
push
call
push
add
xor
and
dec
popw
js
ret
rol
add
mov
ret
call
pop
call
adc
add
nop
inc
jb
jbe
lods
dec
or
inc
or
movs
and
jmp
lock
aad
push
xor
push
and
mov
xchg
mov
jle
cmp
inc
mov
mov
push
call
cmps
inc
(bad)
int
dec
push
or
(bad)
je
xor
lds
cmp
test
mov
dec
xlat
into
push
ss
and
(bad)
xlat
sbb
sbb
fnstcw
push
inc
push
cmc
push
mov
leave
xor
outs
fs
gs
adc
stc
add
xchg
pop
daa
push
push
cwde
push
jge
push
jb
push
xchg
push
xor
cmps
push
mov
adc
js
push
cld
call
js
jbe
push
inc
call
xor
push
outs
stos
or
lea
inc
inc
cmp
add
add
xchg
pop
mov
jl
gs
mov
mov
test
cmp
cwde
sbb
sub
xchg
ins
int
ror
xchg
sub
inc
je
push
or
loope
push
xchg
pop
cmp
sub
das
jmp
icebp
push
in
push
xchg
adc
or
and
loope
out
bound
cmp
mov
mov
mov
cmp
rcl
test
and
mov
adc
js
(bad)
jmp
xor
lea
sub
nop
inc
cmp
scas
mov
sub
push
pop
lock
adc
hlt
jo
adc
call
test
call
(bad)
lea
rcl
adc
ret
mov
or
mov
fwait
shr
or
sbb
loopne
les
js
ret
dec
add
gs
repz
test
pop
not
push
and
cmp
xchg
sbb
enter
push
sbb
mov
dec
push
repnz
(bad)
hlt
ds
push
or
out
std
xor
push
div
mov
sahf
out
mov
push
push
push
push
sbb
xor
adc
mov
jecxz
mov
inc
lea
ficom
sbb
xor
pusha
jmp
jno
and
push
aam
sbb
xchg
fwait
cli
iret
jnp
test
out
adc
stos
sbb
and
cmp
jle
pushf
lds
sbb
das
jbe
pushf
or
cmp
inc
mov
adc
xor
mov
or
dec
or
out
push
movs
sbb
pop
mov
pop
add
enter
not
loope
jg
call
mov
out
push
aaa
inc
mov
or
addr16
dec
test
lds
rcr
inc
fisub
pop
mov
pop
pop
adc
cmp
inc
hlt
cdq
(bad)
push
imul
hlt
xchg
sub
or
push
out
add
inc
xchg
ds
sbb
and
mov
test
popa
and
call
js
iret
jl
mov
cmp
je
cmp
xchg
loope
das
fsub
push
cmc
jns
dec
mov
push
pop
push
retf
and
push
push
nop
xchg
iret
pop
ret
adc
push
add
enter
pop
clc
xchg
inc
shr
clc
adc
jle
les
add
or
push
mov
jns
sti
jl
push
pusha
add
lea
xor
or
fisub
jmp
inc
push
aas
cdq
cmc
std
cmps
mov
cmp
cmp
jo
ret
mov
inc
clc
std
jbe
ret
xchg
mov
inc
sbb
(bad)
jp
fs
pop
rcl
imul
loope
sar
(bad)
in
hlt
aaa
loop
inc
test
into
setp
pop
inc
add
or
push
rol
cli
dec
cli
xor
or
sub
mov
jmp
mov
hlt
pop
(bad)
ffreep
(bad)
lods
cdq
sub
cmp
or
je
pop
jg
push
mov
ins
and
xchg
dec
test
push
call
fs
or
daa
daa
stc
jmp
dec
add
push
daa
push
test
adc
add
sbb
rol
pop
lock
cmp
stos
add
add
sahf
inc
ins
sub
out
adc
call
push
retf
xlat
popa
lea
xor
dec
mov
fdiv
jle
dec
sub
adc
pop
fmul
or
cmp
dec
mov
jo
push
(bad)
call
pop
setbe
test
call
or
jne
inc
cld
jbe
pop
mov
sub
push
push
or
adc
ror
aas
(bad)
in
push
and
lds
jmp
fld
fist
mov
ja
mov
xlat
adc
pushf
mov
dec
(bad)
cmp
mov
test
or
cmp
dec
test
fld
fstp
rol
jns
adc
call
pop
push
add
mov
pusha
cmp
push
and
aas
cmp
dec
add
adc
nop
outs
fs
sbb
in
xor
pop
les
loop
dec
jne
pop
adc
fadd
lahf
or
jno
stc
mov
std
jle
adc
lods
push
mov
shl
std
call
test
std
mov
dec
dec
sbb
or
add
pop
cmp
push
inc
ror
(bad)
jnp
inc
jge
fcomp
dec
pop
rcl
call
dec
jg
jge
add
dec
push
adc
lock
sti
jmp
push
dec
dec
shld
or
push
pop
jmp
das
pushf
or
push
and
adc
icebp
pop
jle
push
in
mov
sbb
movs
cmp
or
(bad)
cmc
(bad)
and
movs
bnd
jecxz
dec
sbb
cs
sar
sub
imul
out
or
scas
xor
or
dec
sbb
add
pusha
(bad)
mov
cmp
dec
movs
pop
js
lock
dec
mov
fmul
dec
and
out
sub
xlat
dec
jae
fadd
cmp
mov
mov
add
add
and
xchg
(bad)
cmp
or
adc
ds
or
jmp
cmp
call
ins
jle
dec
hlt
ins
mul
iret
call
pop
sub
dec
pop
lahf
jl
ror
pushf
std
jmp
out
xor
cs
cmp
cli
sbb
nop
popa
(bad)
shr
xor
jmp
lods
dec
sbb
adc
ja
outs
jnp
lods
lahf
loop
push
pop
add
(bad)
int
ror
and
leave
inc
inc
imul
cs
push
sub
in
push
loope
sahf
ss
push
leave
clc
xchg
enter
lea
js
adc
xchg
pop
in
xchg
dec
push
and
add
stc
popf
jmp
push
push
mov
call
dec
pop
cwde
pop
pushf
outs
and
xchg
(bad)
lods
pop
and
fild
or
mov
not
mov
loopne
add
aad
sub
sbb
dec
jmp
push
fs
mov
push
dec
jl
or
inc
mov
pop
jge
test
push
push
or
or
or
push
inc
ja
or
or
pop
adc
scas
lods
getsec
sbb
adc
test
xor
lods
add
sbb
rcr
cld
cmp
(bad)
fbld
push
add
mov
fadd
cmp
je
pop
movs
adc
adc
sub
pop
outs
loope
inc
sub
sahf
nop
jbe
inc
sub
add
sbb
ficom
stc
dec
cmp
jb
add
push
mov
ins
pop
retf
xor
cld
stc
pushf
cmp
call
adc
or
or
div
fadd
push
or
or
sbb
or
push
or
jbe
imul
cmp
push
pop
jl
jmp
inc
cmp
popa
stos
loopne
jl
cmp
adc
add
jmp
push
push
mov
std
jnp
mov
inc
mov
add
adc
call
push
sbb
add
hlt
repnz
jne
in
or
aam
xchg
xchg
(bad)
jg
dec
sti
sbb
rol
inc
nop
lock
add
inc
pop
sbb
inc
mov
add
jg
push
ds
jo
push
call
mov
sbb
shl
cmp
popa
clc
xchg
cmp
sar
sbb
lahf
and
test
add
sbb
int
sbb
rol
inc
sbb
lods
inc
sbb
int3
rcr
or
add
data16
les
jg
jbe
fadd
xor
rol
jne
mov
sahf
popa
dec
xchg
add
sub
mov
push
and
lods
push
ret
mov
into
jmp
xchg
sbb
arpl
ror
inc
push
(bad)
push
imul
sub
push
pop
add
add
push
call
dec
shl
push
ficom
add
add
sar
mov
ja
in
shr
bswap
push
mov
pusha
add
jbe
loop
rcr
retf
imul
add
jge
jg
inc
sbb
inc
pop
xor
inc
jnp
jnp
pop
data16
in
sbb
add
ja
push
and
pop
or
dec
pop
js
jp
jnp
out
mov
jp
push
mov
xlat
(bad)
push
in
in
sti
add
or
jge
movs
or
push
inc
mov
xchg
(bad)
nop
sub
out
push
in
mov
mov
sar
mov
push
dec
inc
jb
xor
push
ficom
inc
pop
sbb
nop
addr16
bound
xchg
jl
(bad)
outs
sbb
stc
push
add
sub
dec
or
adc
fstp
inc
mov
inc
leave
inc
fiadd
in
maskmovq
test
scas
arpl
jg
push
sub
and
or
mov
sbb
push
rcl
test
and
addr16
dec
inc
xor
jb
xchg
inc
bound
inc
cmp
cmp
or
pop
jo
jo
(bad)
mov
pop
adc
push
cmp
inc
mov
inc
mov
push
jb
and
hlt
inc
shr
sbb
pop
pop
rcr
mov
mov
fisttp
cs
inc
and
jae
fwait
sbb
outs
nop
and
mov
sbb
cmp
xlat
cmc
popa
xor
inc
push
push
add
int
retf
mov
fimul
retf
jnp
dec
push
aam
repz
ret
add
imul
xor
lea
jmp
mov
neg
cmp
ja
add
enter
into
add
adc
shr
adc
or
inc
mov
or
pop
cli
push
out
inc
inc
sbb
out
push
cld
xor
sub
xchg
es
or
and
and
jp
sub
daa
fld
xor
rol
hlt
jle
imul
sbb
(bad)
cld
jle
xchg
add
loopne
mov
jl
add
mov
test
jne
test
jg
inc
mov
and
cmp
hlt
mov
(bad)
xchg
or
add
mov
pop
js
pop
stc
lock
or
and
adc
clc
add
or
or
mov
add
test
je
inc
adc
pop
repnz
or
sub
mov
test
push
inc
inc
sub
sub
and
push
inc
cmp
sahf
(bad)
sub
add
xor
repnz
fmulp
aam
push
inc
loopne
ins
jmp
xchg
adc
dec
cmps
mov
push
add
pop
mov
and
repz
imul
inc
movs
ltr
rcl
sbb
add
ror
fisttp
cmc
mov
cmp
jbe
mov
adc
jns
es
dec
or
aam
(bad)
jmp
lds
test
push
cli
gs
rol
cmc
test
popa
pop
test
jno
push
or
pop
sti
ret
lods
retf
or
shr
mov
add
hlt
test
dec
and
dec
pushf
sbb
out
and
jns
pop
mov
fmulp
nop
lods
mov
repz
repz
xor
and
cmp
and
aaa
popa
and
out
mov
pop
or
sbb
push
loopne
cmovb
call
lods
fild
cmp
push
(bad)
loopne
ror
sub
push
or
stos
into
xor
dec
cmp
lods
movs
xchg
inc
push
push
call
lahf
test
push
add
adc
sar
cmp
jne
pop
iret
cmp
outs
pop
jno
and
jb
cmp
repz
mov
enter
je
add
jne
popf
ror
add
gs
mov
js
shr
fdivr
outs
movs
push
call
jo
in
das
sbb
hlt
fcmovnb
jmp
and
push
retf
or
das
adc
add
mov
push
adc
mov
ins
popw
or
inc
mov
mov
lahf
pop
or
mov
inc
jle
cwde
or
push
xchg
pop
jae
inc
add
xchg
or
adc
xchg
cmps
jge
inc
sbb
inc
out
lea
cs
dec
or
sub
shr
cmps
iret
sub
or
mov
xor
inc
std
(bad)
xor
(bad)
sub
sub
shl
add
mov
into
and
mov
lods
inc
or
setp
sub
or
clc
add
mov
or
or
(bad)
mov
or
add
add
mov
jl
xchg
dec
sbb
mov
and
jmp
adc
or
(bad)
sbb
in
inc
test
pop
scas
sub
push
xchg
pop
push
pop
call
(bad)
fidivr
nop
jbe
cmp
adc
or
popa
pop
jnp
or
sbb
les
adc
fcmovnbe
shr
or
mov
call
enter
pop
or
cmp
inc
push
popf
std
into
retf
pop
sbb
or
inc
jmp
sub
and
or
scas
test
adc
push
push
pop
mov
ror
sbb
not
mov
pop
repnz
rol
xchg
leave
ret
mov
add
mov
inc
xchg
inc
fisttp
lahf
jo
add
emms
push
and
idiv
pop
inc
push
jno
clc
stc
mov
mov
neg
add
fsubr
enter
neg
scas
jmp
push
aas
lods
push
scas
sahf
cmp
enter
nop
cli
cmp
xor
mov
cmps
inc
or
and
and
popa
add
and
mov
xchg
inc
push
or
or
add
xor
sub
ds
cld
scas
add
push
rcl
jnp
imul
(bad)
hlt
jecxz
xor
cmp
icebp
add
movs
push
and
imul
pop
test
mov
cmp
movs
pop
or
xor
rcl
popf
outs
add
fmul
push
bound
rol
sbb
clc
sub
adc
pop
clc
shl
or
cmp
mov
jl
add
push
xchg
cmc
add
mov
and
add
call
test
mov
xchg
stos
and
das
add
cli
pushw
push
add
add
in
out
adc
add
and
aaa
frstor
dec
push
mov
outs
out
adc
loopne
add
aam
or
jecxz
dec
jo
and
or
pop
outs
sbb
enter
shr
mov
cld
and
cmp
rol
inc
mov
mov
retf
mov
jbe
dec
inc
mov
xchg
jne
loop
test
cmps
fnsave
mov
inc
fisubr
adc
push
lea
cwde
mov
lea
mov
pop
into
je
push
push
ret
dec
mov
mov
mov
shl
push
push
adc
add
fdiv
test
mov
push
and
call
fmulp
std
pop
add
mov
and
pop
pop
add
pop
push
mov
pop
xchg
mov
sbb
cwde
mov
xchg
mov
mov
in
repnz
add
fdiv
xchg
cmp
in
lea
std
inc
and
mov
loop
popa
jle
das
jl
push
mov
add
inc
sub
adc
jne
mov
std
in
cmp
xlat
cli
mov
ins
sub
cwde
js
xchg
shr
fisub
xchg
js
in
je
push
ret
ret
pop
out
adc
cs
cmp
ja
pusha
sub
jg
jmp
or
scas
retf
or
add
mov
add
push
fcom
sub
xor
adc
mov
jne
jnp
test
push
dec
sbb
mov
repz
add
add
and
inc
adc
fadd
and
add
je
pop
push
stos
pop
dec
pop
push
lods
loop
add
or
cmp
mov
inc
nop
cmps
push
sub
mov
dec
xchg
aad
ficom
adc
adc
pop
out
push
adc
ja
retf
cmp
aam
dec
jb
push
mov
dec
xor
mov
stos
jmp
data16
das
in
mov
hlt
cmp
imul
push
pushf
mov
add
pop
popa
or
jle
add
test
sbb
pop
pop
call
push
mov
sub
ds
shl
sbb
call
or
or
mov
and
pop
sar
clc
jmp
gs
push
inc
mov
ret
add
retf
or
fs
bound
rcl
mov
push
fcomp
dec
mov
push
pop
jo
enter
cmps
sbb
dec
or
xchg
sbb
int
mov
pusha
ins
xor
and
bound
and
xlat
add
mov
and
or
push
add
pusha
push
xlat
mov
push
inc
(bad)
imul
ins
call
pop
(bad)
sbb
push
(bad)
mov
enter
les
pop
sub
pop
movs
jmp
dec
ja
push
call
mov
push
push
push
int3
int
adc
mov
in
lea
jl
add
sbb
lock
stc
jno
sbb
jnp
mov
sbb
mov
call
adc
or
xchg
jo
jae
clc
repnz
adc
ret
xor
inc
ret
jg
das
pop
add
lods
repnz
and
emms
cmp
daa
popa
sub
and
push
mov
mov
push
or
lock
and
ss
dec
and
or
neg
jo
adc
jne
das
loope
call
movntq
mov
outs
or
enter
adc
rcr
rol
sub
ins
enter
call
push
xlat
xchg
imul
push
mov
dec
mov
js
test
pop
push
add
dec
pop
gs
push
test
loop
inc
test
popf
fdiv
mov
out
call
push
fadd
cmp
push
in
sbb
iret
retf
loope
mov
addr16
and
xchg
add
rol
das
(bad)
xchg
adc
mov
(bad)
ficom
imul
xor
jo
sbb
loopne
and
jl
mov
sbb
jmp
fs
ins
or
adc
imul
addr16
add
clc
cmc
sbb
lock
scas
mov
mov
inc
jb
fidivr
dec
sahf
outs
lods
sub
pop
sub
add
sub
inc
jmp
div
jne
int
jecxz
jecxz
retf
mov
iret
mov
add
xor
and
mov
adc
lds
add
sub
fs
mov
hlt
inc
mov
jl
gs
nop
pop
inc
add
inc
es
xchg
add
adc
mov
and
mov
std
or
(bad)
not
lods
adc
int
lea
std
call
mov
cmp
or
mov
or
mov
xchg
inc
add
mov
in
xor
or
add
mov
and
or
leave
sbb
sbb
mov
shr
push
and
add
aam
or
mov
inc
pop
add
and
or
jl
cmp
pop
push
ins
test
cmc
add
inc
or
rol
add
xor
ret
out
or
xchg
adc
push
add
cmp
test
aas
lock
fldcw
es
bound
xchg
mov
sub
jb
clc
ins
mov
lea
add
ret
add
cmps
imul
out
inc
(bad)
xor
js
adc
xor
inc
es
repz
mov
test
fs
push
jns
or
push
push
call
dec
inc
or
xchg
or
inc
or
jl
add
adc
lea
test
jns
ret
or
mov
mov
cmp
sbb
xchg
cmp
cpuid
rol
pop
inc
call
test
xor
cli
xor
mov
outs
into
call
sbb
(bad)
iret
add
jmp
sbb
sub
jmp
mov
push
dec
sbb
ins
pop
cwde
adc
rol
sbb
out
sbb
cli
and
fnsave
stc
adc
xchg
pop
xor
scas
lahf
loopne
ins
inc
ss
or
and
push
test
mov
push
sbb
add
dec
lahf
loope
mov
adc
add
mov
sub
and
sbb
cld
mov
(bad)
sbb
push
call
shl
push
push
adc
fdivp
jbe
jne
ja
pop
mov
push
add
call
xchg
sub
pop
test
push
mov
cmp
mov
lods
mov
sub
ins
inc
data16
and
jnp
cmp
mov
bound
mov
cmps
clc
pop
ret
das
in
fwait
aad
or
jo
and
data16
(bad)
or
dec
push
jns
jns
repz
xchg
or
iret
leave
repz
push
pop
push
jae
popa
(bad)
jo
out
ss
push
xor
scas
dec
jecxz
ss
push
jns
or
aas
or
call
mov
std
or
cmp
nop
add
push
cmp
push
jb
mov
(bad)
mov
jmp
cmp
(bad)
dec
mov
add
stos
mov
lea
je
mov
das
fist
sbb
adc
data16
pop
(bad)
dec
jmp
call
mov
dec
jmp
and
rcl
push
mov
nop
cmp
xchg
sub
adc
jg
adc
nop
and
inc
ror
xor
sub
jp
test
xor
or
push
fadd
rcr
or
dec
add
push
mov
mov
jp
das
loopne
sti
ror
xor
push
cmp
or
xor
in
push
dec
mov
sub
jno
sbb
mov
mov
dec
xor
lock
scas
jle
push
lea
shr
add
mov
inc
sub
rcr
cwde
out
ret
or
add
lock
dec
stc
nop
les
ret
test
push
shl
add
mov
cmp
sbb
or
mov
and
add
icebp
dec
cld
lock
jg
pop
and
inc
jmp
push
mov
mov
and
mov
sbb
push
pop
pop
dec
or
outs
mov
cs
ss
aaa
xor
xchg
je
pop
mov
adc
clc
cmp
ret
in
fisttp
ret
sbb
retf
push
push
push
xchg
push
push
retf
fidivr
outs
or
dec
jbe
xor
mov
jle
mov
mov
inc
jmp
adc
fisttp
enter
jmp
sbb
mov
xor
mov
add
push
fidiv
loope
mov
xchg
enter
out
or
cs
ja
lds
adc
inc
sbb
mov
sub
std
pop
fwait
dec
ret
cmp
and
int
lock
inc
cmps
test
push
cwde
add
jo
ret
add
scas
inc
push
jecxz
inc
mov
add
loop
adc
lea
or
xor
push
js
sbb
out
fdivr
dec
pop
inc
std
call
xor
dec
push
add
push
inc
jno
in
jmp
xchg
pop
sbb
lock
push
sbb
cs
xor
icebp
xchg
mov
inc
mov
sti
add
dec
neg
and
and
and
inc
mov
xchg
mov
inc
cmp
int
sub
out
movs
xor
or
or
push
push
imul
outs
dec
ss
sar
mov
test
pop
sbb
add
ret
push
imul
pusha
js
sub
jecxz
jb
call
jae
jo
cmp
je
lods
cwde
(bad)
retf
mov
(bad)
ds
adc
ds
rcr
dec
mov
lock
add
or
aaa
push
loop
and
mov
or
push
inc
nop
sbb
xchg
mov
pushf
mov
jle
or
ror
rsqrtps
(bad)
and
in
pop
push
shr
aas
outs
ins
outs
fs
sbb
push
int
cmp
and
ds
and
popa
test
repnz
mov
fwait
and
rol
paddsw
lahf
les
sub
adc
loope
jns
add
fcomi
loope
mov
and
pop
mov
sub
push
push
ret
pop
loopne
(bad)
call
or
sti
or
jge
mov
ret
(bad)
stos
and
fbstp
and
sahf
dec
mov
inc
xchg
mov
or
out
fist
in
sbb
mov
and
fnclex
jg
mov
mov
cmp
je
xor
jb
mov
xor
pop
pusha
rcl
sub
pop
or
enter
push
cwde
jmp
rcr
cmp
dec
test
imul
jl
or
fild
mov
sbb
rcl
jb
loopne
xchg
mov
mov
sub
push
hlt
pusha
jo
add
xor
pushf
push
push
inc
sbb
rcr
jg
lods
sub
inc
push
mov
add
call
lock
mov
cmp
add
fistp
js
inc
add
mov
rcl
push
mov
ins
lds
sub
cvtdq2ps
sti
inc
mov
mov
fisubr
add
ret
dec
cmp
mov
or
inc
mov
popf
sub
cmp
cmc
dec
dec
je
mov
enter
adc
jmp
jle
popa
jae
and
jl
ja
or
lock
imul
outs
dec
cmp
ret
add
cmp
fist
cmp
xchg
(bad)
fstp
mov
xchg
adc
xchg
or
push
movs
mov
pop
lea
and
push
or
jmp
ror
mov
ja
lods
add
dec
push
push
(bad)
sahf
frstor
pop
cmps
mov
mov
inc
fadd
(bad)
mov
cmps
mov
loopne
inc
clc
addr16
dec
add
xor
out
add
les
jne
push
lods
jno
pop
leave
xor
sub
ret
ret
rcr
push
mov
jle
jp
stos
ds
xchg
aam
neg
push
mov
add
jo
jmp
fstp
xor
jae
mov
out
xchg
test
xor
movs
dec
and
(bad)
inc
loopne
ror
stc
mov
mov
dec
jo
mov
mov
call
mov
inc
jae
dec
jb
dec
sbb
lock
sbb
test
addr16
cmp
xchg
xchg
shl
sbb
stos
xor
or
mov
sub
jle
dec
xor
or
ds
pop
and
out
or
push
or
pop
lea
pop
lods
mov
jp
ret
fsubr
mov
cmp
pop
add
pop
cdq
cmp
jg
rol
mov
xor
add
loopne
adc
xchg
pop
popf
movs
push
mov
dec
shr
sahf
add
add
dec
jnp
or
call
mov
xor
fmul
push
inc
dec
adc
add
or
mov
sbb
mov
or
sbb
stc
xor
add
or
xor
pusha
enter
out
adc
cdq
dec
jle
mov
adc
test
or
gs
mov
scas
dec
push
dec
scas
stc
clc
fwait
popa
pop
push
sbb
inc
adc
sub
or
popf
pop
xchg
mov
ffree
ins
shl
pop
ins
dec
push
lea
jnp
sbb
push
push
push
and
ss
ins
xor
pop
mov
xchg
pop
jg
lock
shr
add
lea
inc
push
push
mov
add
cmps
jns
stos
pop
pusha
fwait
shr
xchg
push
add
and
(bad)
fnsave
aad
jge
mov
ins
xchg
sbb
sti
adc
sbb
mov
arpl
and
pushf
hlt
test
ds
adc
fimul
ds
jmp
dec
(bad)
call
repnz
cs
lods
iret
test
add
leave
test
jno
not
or
push
dec
repnz
ss
pop
nop
adc
jl
sti
push
(bad)
sbb
jge
push
sbb
cmp
repz
jbe
cmp
pop
js
or
cmp
leave
je
adc
xchg
add
in
xchg
clc
mov
cmp
fucomi
cmp
je
adc
mov
dec
call
add
movs
nop
call
(bad)
push
push
fsub
and
lds
mov
cli
mov
push
mov
sahf
add
imul
push
ja
or
std
mov
icebp
jg
enter
stos
sub
jmp
repnz
xchg
sbb
out
pop
push
add
call
pop
pop
loop
pop
out
and
jmp
jl
push
pop
mov
repnz
jle
dec
je
jne
add
push
repz
fs
mov
lock
lods
es
and
cmps
dec
adc
sbb
add
add
mov
adc
mov
ds
dec
hlt
mov
dec
sbb
push
ret
adc
std
outs
pop
pop
mov
adc
out
pop
or
cmc
call
inc
sbb
adc
imul
mul
cmp
cdq
push
dec
stc
adc
mov
push
(bad)
outs
arpl
add
sub
cli
pop
aaa
mov
mov
clc
das
icebp
fwait
pop
cmp
std
mov
inc
cli
retf
pop
mov
lds
retf
dec
adc
jmp
push
dec
shr
cmc
sbb
jp
add
inc
scas
mov
adc
push
sub
mov
add
xchg
and
add
mov
sti
or
add
mov
aad
or
icebp
inc
xor
push
adc
xor
push
push
ret
hlt
adc
xor
retf
(bad)
xor
shl
xor
in
dec
push
or
pop
adc
mov
test
sub
sub
out
adc
sub
jo
shr
repnz
hlt
fisttp
out
jae
jmp
out
xchg
iret
cmp
add
or
imul
add
scas
inc
outs
pop
addr16
mov
xor
ror
test
cmps
inc
and
sbb
mov
adc
push
xor
mov
sub
add
mov
sub
out
sub
js
lods
loopne
sub
sub
jmp
cmp
jae
fsubr
sbb
mov
dec
je
dec
cmp
dec
adc
push
or
mov
push
jne
push
cmc
jns
movsx
xchg
adc
arpl
icebp
pop
ret
add
pop
push
(bad)
out
push
push
xchg
(bad)
jg
inc
dec
push
pop
imul
add
mov
ins
xchg
add
mov
and
and
imul
add
lea
mov
dec
mov
push
out
dec
jmp
add
es
pop
jnp
sub
add
mov
(bad)
out
pop
or
adc
sub
(bad)
xchg
mov
mov
clc
xchg
lea
out
jnp
pop
inc
inc
call
sub
and
cld
jbe
sub
popa
sub
sub
ins
scas
inc
add
pop
adc
imul
push
in
sbb
arpl
jge
ficom
test
push
jge
or
sub
mov
test
sbb
outs
pavgb
dec
mov
jmp
sbb
jo
and
into
sbb
mov
sub
ret
and
add
popa
jl
add
adc
add
jnp
gs
jle
pop
jl
call
test
jae
mov
rcl
cli
adc
cmp
rol
pop
and
xor
cmp
lock
push
lods
jbe
fs
fmul
push
ds
mov
push
xchg
jecxz
jmp
xchg
movs
cmp
or
dec
out
add
jne
adc
push
adc
dec
scas
jge
mov
sub
xor
ror
push
clc
stos
xchg
outs
sti
sbb
jmp
and
push
sub
outs
daa
shr
inc
mov
rol
mov
cmp
or
cdq
nop
add
pusha
and
leave
and
lock
push
inc
ja
test
call
mov
imul
iret
sub
and
push
xor
sahf
sbb
dec
mov
arpl
xchg
and
mov
popf
xchg
sti
jns
adc
loopne
les
dec
jo
(bad)
jbe
xchg
loope
(bad)
jl
inc
(bad)
push
pop
push
add
push
dec
sar
iret
jnp
push
jle
pushf
and
sar
cmp
sbb
push
mov
xchg
out
cmps
cs
and
and
mov
nop
jb
out
scas
cs
loopne
sbb
sbb
mov
ret
call
adc
or
cld
push
imul
aaa
cmps
or
sub
clc
xchg
or
retf
jb
data16
mov
dec
sbb
repz
add
jecxz
mov
pop
ss
pushf
mov
mov
inc
nop
(bad)
sub
ins
and
std
jmp
xchg
ins
adc
rcr
fimul
inc
scas
inc
imul
mov
xor
or
and
mov
adc
adc
shr
xchg
fcomp
cmp
mov
cmp
leave
je
cmc
inc
mov
push
push
push
fs
jmp
add
loopne
rol
cs
fdivr
fdivr
sub
add
mov
xchg
mov
or
pop
push
cmps
lods
inc
jne
or
adc
jae
push
call
or
mov
mov
adc
mov
push
mov
add
sub
or
sbb
xlat
loopne
pusha
rcr
or
mov
add
cdq
sub
adc
add
nop
dec
sbb
xchg
pop
cmp
and
push
data16
shl
add
gs
push
and
pop
out
mov
fimul
push
(bad)
jmp
and
(bad)
loopne
sbb
gs
cmps
inc
mov
gs
das
push
test
inc
enter
or
into
pop
cmp
xchg
push
mov
call
lods
push
and
and
mov
in
nop
cdq
pop
xchg
dec
sub
data16
cmp
pop
gs
jo
js
rol
push
fwait
add
aas
xchg
je
xchg
xchg
or
or
mov
jg
and
mov
cmp
dec
sbb
xchg
scas
cmp
push
dec
mov
das
or
imul
xchg
push
test
sbb
jb
xchg
jmp
mov
xchg
leave
and
push
and
icebp
xor
dec
and
xchg
rcr
or
push
std
mov
(bad)
ret
push
in
lds
push
call
shl
in
dec
dec
movs
xor
inc
cs
xor
push
jmp
sub
inc
add
ja
add
add
test
call
or
sub
adc
cmp
outs
ret
pop
or
add
or
pusha
sbb
xchg
dec
repnz
and
sbb
pop
xchg
pop
jb
ja
mov
push
pushf
cwde
mov
(bad)
pusha
mov
or
hlt
sbb
test
mov
stc
jne
or
push
rcl
mov
jns
aam
inc
sub
out
dec
or
mov
add
mov
leave
or
push
(bad)
and
inc
and
add
mov
outs
xor
clc
lods
sbb
cmp
les
xor
add
loope
lods
rol
cmp
push
aas
or
push
push
call
popa
sub
mov
into
sbb
or
push
add
fsub
pop
inc
hlt
imul
xor
cli
pop
push
nop
fcom
aaa
mov
add
and
mov
adc
movs
imul
mov
cmp
inc
xchg
and
jmp
sub
push
test
ret
call
hlt
gs
cmp
mov
test
jge
push
aam
mov
adc
jl
add
push
push
xor
push
or
fs
test
cmp
inc
stc
push
sti
add
sahf
add
in
fnstsw
xlat
ja
mov
cmp
mov
sbb
mov
cwde
dec
xchg
stos
inc
retf
xchg
lods
jae
mov
inc
inc
js
fsub
dec
or
cmp
cmp
out
push
loopne
adc
jmp
or
inc
push
lods
push
clc
xor
inc
cmp
es
out
gs
xchg
fistp
bound
adc
add
test
test
mov
(bad)
rcr
sub
xchg
mov
jmp
sub
cmp
jb
and
add
jbe
xor
mov
fild
cmp
mov
pop
add
jmp
add
sub
fisttp
mov
inc
enter
into
enter
or
mov
fild
out
fwait
and
push
pop
pop
repnz
or
call
pop
aas
and
cmp
add
sub
fild
loop
in
out
mov
jmp
sub
mov
or
wbinvd
or
mov
mov
into
ds
jne
jns
ja
leave
pop
iret
or
rol
mov
fmul
test
push
cld
popa
dec
xchg
push
push
dec
add
xlat
popa
loope
push
sbb
out
sub
dec
sub
xor
or
pop
push
ret
inc
mov
pop
mov
cmp
mov
pop
(bad)
enter
xor
les
pop
ror
popa
adc
leave
ins
jl
movs
push
call
jmp
mov
jmp
sar
bound
cmp
adc
lock
mov
xor
fidiv
xchg
rcl
jl
call
xor
dec
cmp
not
jle
sub
fisttp
mov
std
sub
inc
lea
mov
pop
leave
into
fld
in
push
adc
xor
pushf
mov
(bad)
jne
inc
fdiv
mov
es
dec
sbb
push
jno
pop
mov
test
dec
fs
dec
jnp
in
repnz
dec
or
das
arpl
push
movs
das
loop
daa
imul
not
jno
shr
mov
bound
xchg
lods
jmp
(bad)
in
inc
dec
les
sub
jmp
lods
push
pop
cs
dec
test
mov
jb
xchg
nop
mov
test
push
mov
das
mov
push
adc
mov
and
xchg
retf
in
sub
xor
in
mov
dec
pop
cs
retf
dec
push
push
pop
pop
retf
in
mov
mov
je
or
in
jb
aam
fadd
cs
retf
cld
push
clc
hlt
lock
mov
loopne
jl
retf
ror
jl
les
mov
pop
mov
or
cmp
ds
fisub
or
in
scas
add
or
or
cmp
inc
(bad)
(bad)
(bad)
cmp
sbb
dec
or
xor
fnstcw
and
and
add
(bad)
jmp
(bad)
scas
push
repnz
dec
int3
pop
lods
sbb
(bad)
(bad)
cld
sub
inc
scas
(bad)
(bad)
inc
(bad)
inc
add
pop
sub
add
xchg
sub
cmp
adc
xor
aad
out
or
add
stos
ret
push
aad
loope
cli
jle
inc
pop
mov
or
inc
adc
and
push
adc
retf
cmp
pop
dec
push
jb
ss
push
mov
jmp
xchg
sbb
fldcw
cmps
pop
pop
add
mov
pop
jmp
fisubr
inc
xor
and
hlt
out
push
clc
cmc
mov
jnp
push
push
pop
sti
ror
scas
push
call
inc
enter
sbb
mov
fild
stos
fsubr
rol
call
cmp
cmp
int3
loopne
or
jle
sbb
xchg
fisttp
inc
pop
ror
int
sub
and
ja
and
xor
mov
loope
dec
shr
dec
mov
mov
cmp
inc
mov
jae
pop
ja
sub
mov
pop
call
inc
mov
jnp
and
out
dec
adc
inc
dec
clc
add
rol
cmc
or
hlt
xor
mov
pusha
pop
je
in
push
scas
retf
push
push
xchg
lea
movs
div
outs
movs
inc
sbb
adc
dec
test
sbb
mov
mov
mov
in
cmp
hlt
mov
fdiv
mov
push
sbb
cmp
jge
pop
enter
push
test
cmp
sbb
inc
xor
xchg
sbb
je
cmps
push
push
(bad)
ds
mov
xchg
pop
add
jbe
pop
shr
imul
pop
repnz
int3
jae
or
push
cmp
push
add
cmp
xchg
stos
cld
jno
inc
fmulp
mov
in
ds
mov
je
xchg
or
leave
ja
jae
mov
sti
rcl
inc
mov
push
in
mov
ins
inc
mov
dec
loop
rol
int3
pop
jmp
sbb
les
icebp
and
push
pop
inc
xor
or
add
movs
adc
mov
retf
dec
add
mov
xchg
push
add
sbb
pop
ret
and
or
in
cs
jmp
push
js
inc
adc
fwait
lock
jl
dec
mov
jmp
rcr
pusha
sahf
in
sub
inc
mov
and
shl
fsubr
(bad)
push
lods
cdq
nop
mov
sub
adc
push
and
enter
sub
or
fs
add
aad
mov
shr
fnstcw
inc
add
ret
xor
test
call
push
jbe
push
imul
jo
ins
jle
push
push
xor
mov
pop
pop
pop
pop
sbb
pop
sub
jno
mov
add
push
scas
pop
jl
add
add
(bad)
enter
mov
xchg
pop
pop
and
sbb
inc
sub
nop
stc
inc
adc
cdq
pop
jmp
rcl
and
pop
iret
in
push
push
int3
cmp
push
sahf
jmp
mov
push
cmps
mov
cdq
(bad)
inc
sahf
cwde
ret
xchg
lods
fwait
nop
(bad)
jmp
sub
lods
xchg
mov
stc
inc
sbb
add
repnz
xchg
pop
(bad)
(bad)
dec
push
add
dec
mov
push
sub
fs
loopne
fmul
mov
cli
inc
add
adc
pop
inc
inc
stc
add
add
fsubr
loopne
push
mov
in
imul
inc
leave
inc
stc
inc
stc
pop
lock
pushf
mov
and
push
lock
clc
cld
inc
push
add
loope
cld
inc
inc
stc
add
sbb
repnz
inc
stc
cmp
in
ror
or
adc
int3
dec
sub
and
shrd
dec
icebp
cwde
clc
call
jl
fs
and
sub
cmps
inc
iret
js
fidiv
or
and
inc
or
mov
cmps
push
in
or
test
sbb
mov
test
mov
sti
daa
lods
and
cmp
jae
iret
jmp
mov
xchg
sub
sbb
fld
jmp
pop
lock
mov
push
jo
cmp
jmp
jl
pop
mov
add
push
sar
push
not
sbb
les
mov
gs
enter
movs
sub
add
mov
and
xchg
push
push
or
sbb
nop
hlt
lock
adc
xchg
lods
fcom
adc
cdq
(bad)
dec
mov
jmp
rol
bound
je
jae
bound
retf
xchg
push
adc
imul
enter
xchg
cwde
pop
popa
add
mov
imul
push
shl
cmp
xchg
rcl
ret
cmps
aas
xor
cwde
add
adc
inc
push
lods
add
pop
cmps
jl
or
or
jo
retf
call
adc
lock
shr
lock
jb
lahf
mov
ins
add
dec
clc
fld
push
repnz
jg
xor
inc
add
loop
pop
push
and
arpl
test
dec
dec
cmp
repnz
ja
or
retf
in
ins
sub
jb
pop
pusha
pop
pop
push
les
inc
push
out
cmps
or
test
addr16
hlt
push
mov
retf
xor
repz
scas
lods
js
push
cdq
movs
pushf
ror
jns
sub
dec
sub
dec
leave
jae
retf
adc
sub
cdq
movs
xor
or
xchg
mov
retf
out
xchg
dec
int3
fsub
xor
xchg
int3
jl
aam
repnz
movs
lods
sub
pushf
test
fdivr
sbb
mov
movs
and
mov
repz
pusha
xor
outs
dec
shl
sbb
and
mov
dec
(bad)
shr
leave
aas
mov
push
cdq
in
fadd
daa
test
call
es
mov
sub
xchg
leave
fstp
enter
retf
mov
mov
mov
mov
pop
inc
mov
inc
aas
pop
cmp
and
xchg
movs
and
fdiv
push
pushf
mov
repnz
aas
test
mov
in
test
cs
fild
(bad)
pop
ss
icebp
mov
mov
aas
inc
sub
int
stos
loopne
test
cmp
mov
pop
inc
mov
and
inc
ja
movs
sbb
(bad)
jb
add
in
xchg
scas
out
pop
sbb
cmp
gs
mov
pop
cmp
or
mov
(bad)
mov
out
or
jmp
mov
xchg
popa
in
xor
fist
call
in
cmp
or
or
dec
sub
fs
fnstcw
lahf
shr
or
pop
mov
mov
(bad)
dec
ds
mov
sub
sub
sub
in
test
mov
dec
pop
mov
dec
in
jmp
stc
dec
sub
in
jmp
ins
mov
lock
(bad)
jg
xlat
inc
jns
out
jne
inc
and
pop
movs
sti
xchg
cmp
sub
mov
fucomip
sub
pavgb
sub
hlt
lds
pop
mov
jmp
or
cld
repnz
jmp
fsubr
clc
or
inc
int3
pusha
adc
pop
test
or
mov
jmp
iret
addr16
je
dec
sub
mov
add
test
je
movs
repnz
js
movs
shr
mov
jae
push
inc
xchg
out
in
add
jmp
popa
aaa
push
jle
data16
mov
jmp
mov
mov
pop
jmp
inc
mov
sub
jns
pop
jb
add
xor
ds
pusha
cmp
stc
cdq
and
test
push
sar
stos
xchg
or
out
fidivr
out
push
cld
add
and
dec
jns
mov
xchg
xchg
stos
push
ret
imul
push
fstp
fsubr
repz
cmp
dec
push
bound
cmp
repz
mov
rcr
jns
iret
repz
cli
or
adc
out
sahf
out
cmp
jo
out
sahf
mov
add
fcmovnbe
mov
popf
jnp
fisttp
add
push
and
jns
out
push
mov
out
sahf
out
mov
out
int
add
or
mov
out
sbb
sbb
adc
fistp
push
iret
out
aad
cmp
aaa
sahf
push
hlt
aam
(bad)
(bad)
iret
repz
mov
xchg
test
cmp
repz
dec
inc
xor
jnp
iret
repz
add
rcr
retf
repz
out
aad
pushf
push
mov
cmp
repz
dec
cmp
sbb
out
push
not
jmp
mov
call
pop
cmp
out
out
pop
jmp
jns
out
xchg
es
ds
repz
(bad)
call
in
mov
push
add
into
mov
inc
out
lahf
not
cs
retf
test
out
sahf
xchg
mov
ret
push
sahf
out
sahf
test
jns
outs
pop
dec
cmp
sbb
repz
repnz
loopne
mov
out
in
push
add
adc
sub
out
sahf
ds
pop
push
mov
out
call
lahf
out
test
sbb
iret
repz
inc
push
pusha
jb
mov
mov
cwde
push
pop
push
push
int
jns
xor
or
leave
jmp
adc
cmp
out
call
xor
jns
jge
sbb
not
outs
push
fadd
out
sahf
out
lods
mov
jns
jle
pop
push
inc
jns
out
cmp
sub
adc
cmp
out
(bad)
shl
in
in
repz
fcmovbe
enter
cmp
repz
mov
pusha
repz
repz
inc
cmp
cmps
stc
cmp
sbb
push
cld
iret
repnz
out
sahf
call
scas
jns
out
mov
out
sahf
out
pop
dec
sub
fdivr
mov
pushf
push
nop
js
sahf
out
pusha
dec
and
repz
repz
aad
aam
scas
into
repz
call
adc
add
ins
mov
aaa
push
xor
popa
call
push
cdq
sbb
mov
lods
adc
jb
jp
pop
xchg
enter
push
test
out
sub
cmp
adc
scas
nop
or
data16
ret
xor
mov
xchg
inc
cmp
push
cmp
add
and
daa
test
add
pusha
jmp
stos
inc
pop
xchg
cs
cwde
pusha
adc
or
cmps
cmp
mov
cs
add
outs
xor
sbb
jmp
sti
or
adc
push
hlt
aas
fiadd
sub
jo
push
xor
retf
xor
xor
push
punpckldq
retf
das
(bad)
xor
xor
fimul
inc
mov
xor
ja
mov
mov
dec
push
adc
jne
ret
pusha
or
pop
xchg
stc
imul
popf
sbb
stos
mov
xchg
aaa
neg
mov
xor
pop
arpl
and
ret
arpl
shr
arpl
sub
and
xor
outs
xchg
cs
in
ss
cmp
xor
lods
shl
add
and
imul
xchg
data16
mov
inc
mov
ficom
push
mov
movs
int3
fdivr
lock
popa
bound
cs
outs
pop
add
xchg
pop
pop
(bad)
xor
pusha
je
(bad)
shl
cdq
adc
icebp
aaa
test
arpl
and
mov
xor
dec
imul
rcr
mov
add
cmps
mov
jmp
mov
test
arpl
call
sub
mov
cli
pusha
popa
xchg
div
inc
arpl
imul
fsub
mov
(bad)
jno
and
inc
leave
mov
adc
imul
jne
lds
arpl
lea
popa
mov
das
inc
xor
inc
shr
int
fwait
pop
add
ins
pop
lahf
sbb
xor
fisttp
(bad)
call
aaa
inc
inc
cmp
cmp
cmp
(bad)
or
xor
adc
cmp
ss
xor
xchg
pop
mov
add
mov
stc
enter
xor
ss
inc
xor
cmp
inc
inc
test
clc
fwait
cmps
xor
ss
xor
xor
leave
xchg
xor
inc
inc
cmp
inc
xor
aaa
inc
inc
inc
xor
jg
mov
xor
(bad)
pop
xlat
push
mov
xor
(bad)
push
mov
imul
ins
cmp
ret
mov
xchg
pop
cs
dec
sub
gs
outs
push
jo
es
aaa
push
cmc
fisub
mov
rcl
add
(bad)
das
sub
mov
shr
rcl
mov
add
mov
pop
xor
xlat
cmps
les
add
aaa
add
inc
mov
pop
xlat
lods
das
pop
rcl
fidivr
lahf
dec
das
sbb
adc
ins
in
sbb
lock
outs
out
xor
add
add
dec
xor
mov
lods
adc
sub
pop
sbb
jecxz
scas
xor
mov
xor
mov
add
inc
icebp
or
inc
fsub
push
mov
push
mov
popa
int
mov
xor
mov
sub
mov
cmp
mov
gs
jo
mov
cdq
xchg
dec
sub
cs
jo
and
inc
fistp
dec
dec
fadd
and
and
mov
xor
ja
jns
inc
imul
cdq
aas
inc
fcomp
loop
fiadd
push
popa
xor
dec
pop
inc
pop
cmp
lods
sub
ret
test
xchg
xor
xor
xchg
cmp
rcr
and
and
xor
cmp
push
add
xor
loop
or
xchg
ss
stos
cwde
lods
and
les
shr
or
xor
dec
mov
xor
xor
xor
xor
stos
inc
cmp
xchg
inc
mov
push
fcomp
add
bound
ja
push
and
outs
clc
inc
pop
xchg
and
mov
and
dec
test
push
push
movs
xor
jae
jmp
lahf
jb
xor
jo
mov
jmp
mov
cmp
int
push
add
xor
mov
fwait
push
push
scas
nop
jne
fdiv
sahf
and
push
jo
dec
sti
push
mov
les
std
mov
lods
or
adc
div
mov
xlat
std
cmps
cmp
enter
jbe
gs
int
loopne
add
inc
add
xor
outs
dec
jecxz
mov
xor
sbb
xor
stos
adc
pop
push
jo
add
ins
adc
push
mov
push
inc
leave
ret
gs
and
cdq
fisub
add
sub
adc
push
sub
arpl
jbe
(bad)
mov
ins
enter
push
cmc
test
add
(bad)
arpl
and
ins
pop
pop
push
fmul
xchg
aaa
dec
push
punpcklwd
and
ret
mov
daa
test
inc
maxps
mov
add
loopne
add
pop
das
div
add
xlat
jmp
push
adc
lea
in
enter
xchg
inc
in
adc
rol
add
into
gs
mov
add
inc
in
arpl
push
sbb
pop
outs
mov
mov
jae
push
inc
push
inc
inc
pop
or
ror
jo
rcr
inc
pop
das
pop
xlat
and
cmps
aaa
nop
mov
xor
pusha
and
xor
xor
pop
jecxz
cmp
jno
aaa
or
add
push
or
inc
sbb
xchg
test
(bad)
push
push
fwait
int
push
fwait
mov
pushf
pusha
mov
hlt
xor
push
push
cmps
hlt
and
out
movs
inc
sbb
pop
lahf
inc
cmps
jl
xchg
mov
outs
pop
mov
popf
add
add
js
sub
pop
xor
dec
dec
arpl
or
popa
test
ja
mov
sbb
jae
mov
stos
stos
rol
or
das
mov
das
push
xor
push
push
cmp
adc
cs
pop
sti
add
mov
cld
aas
add
pop
pushf
xchg
and
pusha
pop
and
or
xchg
pop
sub
adc
or
sub
jns
pop
add
sub
mov
fcmovnb
cmp
or
out
loopne
or
jne
inc
inc
movs
loop
adc
gs
loope
pusha
js
sub
xchg
xchg
aas
arpl
ins
mov
jns
push
pop
mov
in
xchg
movs
mov
nop
(bad)
push
sar
cmp
nop
ss
add
mov
loopne
mov
neg
pusha
jns
push
and
mov
imul
cs
dec
push
mov
lock
mov
lock
cs
mov
mov
outs
push
push
shl
mov
push
adc
rcr
data16
pop
sahf
out
jo
jp
inc
push
mov
mov
push
shl
mov
clc
sahf
jnp
outs
sub
rol
dec
lock
adc
repz
cmp
sbb
adc
out
add
pusha
scas
imul
push
cmp
jae
xor
mov
mov
fistp
push
mov
add
lock
add
mov
daa
mov
daa
mov
lods
daa
loopne
cmc
sub
push
gs
push
pop
(bad)
sbb
inc
add
out
popf
and
push
inc
push
xor
adc
or
jbe
mov
add
add
pop
jo
mov
imul
popa
pop
cmp
inc
movs
add
add
outs
mov
out
lock
lahf
and
push
cmp
push
mov
pop
mov
mov
or
mov
out
mov
cwde
jns
gs
jne
sbb
push
es
fidiv
and
jmp
jae
pop
add
out
inc
cmp
ins
dec
cs
mov
je
ss
adc
xchg
add
(bad)
push
push
retf
xchg
and
fs
pop
lods
ret
pop
mov
sub
arpl
shl
ret
(bad)
add
inc
fst
push
fild
adc
idiv
push
scas
pop
push
imul
add
daa
cmpps
add
add
sti
mov
aad
outs
push
fcmovnbe
mov
adc
jae
adc
fild
mov
jg
ret
int3
test
into
mov
pop
mov
imul
xor
test
outs
adc
fdiv
out
xor
movq
jne
cmovno
xchg
xchg
jne
and
std
push
arpl
rcr
(bad)
lods
push
mov
xlat
mov
add
inc
jl
cli
push
push
adc
inc
mov
inc
jne
test
addr16
std
shl
inc
pop
loop
sbb
adc
xlat
cmp
cmp
shr
test
mov
sub
push
test
addr16
ds
and
pop
arpl
push
add
and
or
push
fild
not
fsubrp
xor
stos
les
dec
ret
sar
pop
mov
add
lock
mov
xchg
movs
dec
movs
out
jb
or
push
add
int
and
cdq
iret
pop
data16
scas
and
arpl
cmp
movs
adc
xchg
pop
sub
aaa
fimul
inc
xchg
push
add
mov
or
dec
push
inc
inc
inc
mov
sbb
lods
push
cmps
add
inc
adc
cmp
push
sbb
fmul
adc
pop
dec
dec
jmp
push
push
daa
push
mov
sub
shr
adc
and
mov
pop
shl
push
lea
test
cmps
ins
test
call
sub
xor
jo
pusha
sub
fwait
push
cli
movs
add
ss
jne
sti
stos
add
cmp
xor
add
gs
push
fbld
ins
data16
sub
mov
or
xor
add
pop
ins
push
(bad)
ja
(bad)
in
cmp
and
dec
inc
inc
pusha
adc
xor
mov
inc
fbstp
xor
sub
(bad)
jle
popa
xchg
push
cdq
jge
(bad)
dec
push
shl
mov
je
loopne
aaa
jbe
loop
inc
icebp
loopne
or
addr16
sub
or
cmp
pop
mov
inc
std
sub
jb
pusha
imul
inc
daa
inc
cmp
adc
xchg
lods
bound
leave
pop
inc
inc
adc
xor
dec
add
lea
sbb
inc
loopne
add
lock
gs
xchg
push
inc
mov
pop
ja
xchg
test
push
dec
jnp
outs
imul
jo
int3
fsub
cmp
addr16
lock
pop
in
push
or
cmp
nop
ds
sbb
sub
(bad)
sub
add
sub
sub
les
je
pop
cmp
xchg
ffree
cs
aaa
push
xor
cs
daa
xor
ret
daa
push
ret
cmps
das
mov
js
ds
inc
das
push
push
pusha
add
and
inc
and
bound
jecxz
nop
push
pop
ja
int3
xor
neg
xlat
daa
mov
aad
ds
adc
ret
and
(bad)
sub
cmp
jo
les
ds
outs
or
fsubr
jae
cld
arpl
fbstp
popa
jmp
test
rcl
mov
mov
aaa
clc
ret
xlat
jae
mov
(bad)
ins
scas
inc
xor
bswap
ss
sbb
push
add
push
cwde
int
imul
add
mul
push
mov
push
or
inc
push
cld
add
ret
push
xchg
mov
inc
cs
push
js
inc
and
add
out
sub
xchg
aaa
and
stos
sbb
mov
movs
sbb
ins
dec
cmp
int
aam
ins
or
(bad)
aas
movs
cmp
dec
adc
push
push
xor
arpl
rcr
out
dec
popa
adc
push
push
adc
stc
mov
add
mov
or
outs
xchg
or
arpl
and
sbb
aaa
pop
or
popf
ss
add
dec
shr
imul
outs
in
movs
nop
xchg
pop
scas
pop
push
dec
add
loope
push
xor
pop
repz
fmul
nop
ins
int3
push
add
shl
push
repz
lock
stc
call
xor
iret
sar
dec
jo
imul
jl
mov
xor
sbb
cld
arpl
test
daa
push
pop
pop
xor
cs
inc
push
pop
daa
mov
lods
js
jo
jo
cmps
cwde
mov
sbb
sub
cmp
retf
adc
and
adc
inc
js
fsub
jbe
(bad)
daa
lock
push
rcr
push
pop
les
ins
sub
popa
shl
xor
nop
xchg
mov
jno
xlat
es
or
dec
push
add
outs
sbb
inc
mov
and
pop
pop
test
pop
inc
fdiv
call
gs
xor
sbb
mov
pop
inc
sbb
push
jl
push
mov
in
scas
pop
xchg
cs
sbb
pop
jne
push
or
and
test
pop
shr
dec
push
call
mov
mov
inc
or
or
mov
sahf
inc
js
add
mov
or
test
sbb
mov
add
pop
add
(bad)
add
inc
sub
retf
rcl
mov
and
fld
sbb
cld
sti
aas
adc
inc
push
ins
ss
adc
cli
ins
cmps
cli
out
rol
and
push
mov
lahf
outs
out
push
pop
sub
or
mov
pusha
fs
sbb
adc
sub
jmp
mov
push
test
daa
cmp
cwde
ret
push
bound
adc
add
das
rol
xor
xor
ja
jl
and
hlt
out
push
loopne
push
add
xor
mov
xchg
jbe
jnp
cmps
stc
add
pusha
nop
mov
sahf
out
fiadd
jo
mov
(bad)
cmp
push
push
push
adc
add
inc
es
mov
ret
test
ficom
das
aad
mov
mov
mov
pop
aaa
repz
aaa
sub
inc
inc
dec
xor
lods
test
sbb
dec
sub
dec
cmps
(bad)
lods
inc
mov
aaa
rcl
mov
jge
or
in
inc
aas
ret
inc
dec
or
push
(bad)
(bad)
fild
push
gs
mov
jbe
push
add
out
scas
cmp
mov
pop
xor
neg
mov
sub
xor
outs
inc
dec
xchg
jae
sub
arpl
imul
aam
adc
inc
call
push
add
mov
cs
rcr
pop
fcmovne
mov
dec
div
jp
pusha
or
push
pop
mov
jns
lock
loopne
mov
retf
test
lea
out
dec
inc
push
loop
inc
lods
adc
stc
mov
loopne
test
js
sahf
jo
push
test
mov
outs
and
adc
sub
fstp
add
push
jo
addr16
push
mov
pop
pop
cmp
cmc
leave
xchg
dec
es
sahf
pop
adc
jno
cmps
push
adc
cmp
in
inc
outs
xor
xor
iret
xor
rcr
inc
add
popa
shl
xchg
dec
xor
mov
pop
mov
cmp
and
sub
add
sbb
xchg
gs
lahf
mov
sbb
rol
xor
data16
dec
or
sub
xlat
or
imul
adc
mov
xchg
and
adc
fwait
popa
xor
add
loopne
outs
push
push
and
mov
repnz
inc
or
fcomp
daa
push
xchg
xlat
cs
xchg
outs
push
popa
or
xchg
cmp
aaa
xlat
dec
add
cmp
icebp
push
mov
mov
(bad)
out
xor
mov
in
addr16
fwait
out
inc
call
cwde
stos
mov
mov
into
or
stos
lea
cmp
mov
gs
xor
and
lds
xor
xchg
ja
and
les
movs
dec
out
or
xchg
shl
(bad)
outs
and
pop
imul
push
push
or
fiadd
cmp
ret
push
outs
sbb
dec
cmp
sub
xchg
pop
syscall
(bad)
(bad)
sti
add
push
js
iret
inc
pusha
or
inc
call
add
add
jb
es
mov
dec
dec
dec
dec
pop
sub
add
push
nop
jnp
xchg
scas
fldcw
xor
popa
js
iret
or
mov
inc
push
pop
push
nop
aad
fild
sub
rcl
daa
push
pop
push
dec
dec
inc
inc
push
dec
dec
iret
dec
enter
dec
push
push
inc
lods
popf
popf
add
inc
dec
sbb
add
sar
hlt
test
scas
call
dec
idiv
pusha
aam
int3
aas
scas
ror
sub
xchg
out
push
cwde
dec
mov
nop
push
mov
mov
movs
pop
ins
adc
cmps
pop
xor
out
push
pop
test
imul
cmps
ds
cmps
test
add
test
lock
xor
push
adc
in
repz
rcl
inc
jmp
sbb
(bad)
sbb
inc
inc
sbb
enter
inc
fiadd
inc
jne
and
cmp
sbb
repz
ds
and
and
retf
adc
sub
addr16
mov
pop
test
sahf
cmps
or
xor
pop
xchg
mov
dec
jnp
sbb
lods
inc
inc
neg
fsubr
aaa
jno
xchg
cs
add
cmps
popa
jp
pop
out
pop
in
or
push
and
test
repnz
ins
cmp
lds
loopne
cmovbe
addr16
mov
push
rol
or
lahf
dec
sbb
das
pop
movd
xchg
je
sbb
dec
cdq
add
adc
stc
ja
mov
ror
retf
mov
pop
outs
mov
leave
add
xchg
mov
dec
les
(bad)
jb
popa
cmp
push
add
test
jae
add
popf
shl
inc
fild
scas
cmp
pop
mov
push
ret
sub
repz
push
mov
dec
adc
push
inc
retf
fstp
inc
retf
jle
aas
int
xchg
push
imul
into
movs
push
jns
(bad)
mov
sahf
repz
rcr
jle
(bad)
repnz
rol
jg
(bad)
or
dec
in
nop
(bad)
outs
fmul
pop
cmp
daa
jge
push
add
cmp
xor
or
adc
out
pop
sbb
sbb
inc
cmp
cmp
jo
or
test
mov
loope
pop
test
dec
js
dec
mov
push
mov
push
mov
cmp
ss
les
inc
cmp
fwait
daa
loope
adc
pop
fld
retf
dec
push
xchg
cmp
(bad)
mov
aad
cmps
cmp
dec
fadd
imul
xor
xor
jns
add
loope
stos
add
js
cmp
or
adc
mov
test
dec
lahf
sub
sub
cmp
push
test
daa
mov
call
imul
xchg
ja
loope
mov
cwde
ret
jnp
cmp
add
xor
iret
repz
jo
fnstcw
aaa
bound
ins
je
add
test
inc
cmp
push
mov
and
add
(bad)
add
or
or
aam
popa
hlt
pop
sbb
movs
psraw
or
xlat
ds
dec
ror
dec
xchg
je
mov
inc
sub
scas
pop
push
xor
pop
sub
inc
jns
loope
ins
(bad)
xlat
scas
adc
jno
cmp
sub
aam
inc
ja
loopne
push
mov
mov
mov
sub
popa
and
or
lods
mov
and
mov
es
push
xchg
push
push
es
imul
lock
xchg
das
call
sub
or
leave
in
nop
test
cmc
xchg
or
add
inc
mov
xor
sbb
pusha
jmp
ds
nop
aas
push
ins
push
pop
xor
ins
sar
xor
and
ins
cmp
lods
pslld
or
call
inc
or
int
cmp
(bad)
(bad)
shr
gs
aaa
jno
xchg
lods
shr
xor
in
xor
jmp
or
add
jno
dec
rol
std
mov
jno
sar
and
loopne
pop
push
or
jle
daa
add
or
(bad)
jg
mov
js
push
sahf
pop
dec
ja
xor
repz
loopne
pop
jg
sub
test
inc
inc
call
and
adc
imul
arpl
out
xchg
and
push
lahf
scas
adc
push
pusha
adc
or
and
add
cmp
(bad)
jne
pop
test
jae
ins
sbb
ins
add
imul
gs
push
imul
xor
dec
mov
in
out
nop
sbb
or
dec
sub
and
mov
pop
ins
jnp
cmp
push
outs
loope
push
mov
outs
(bad)
pop
add
shl
shr
icebp
push
je
push
out
and
clc
xchg
mov
add
out
cmp
and
loopne
and
pop
push
imul
fstp
mov
xor
imul
xchg
test
xor
lods
dec
(bad)
mov
dec
and
addr16
or
fs
xchg
inc
add
aad
fdivr
mov
pop
pop
aaa
and
and
jle
jge
das
cmp
adc
pop
jne
gs
inc
and
enter
mov
push
pop
(bad)
(bad)
fmul
arpl
sbb
add
add
es
sub
push
popa
or
jo
xor
and
test
mov
mov
std
jmp
pushf
or
test
jl
pusha
mov
xchg
adc
add
push
jae
imul
test
pusha
cmps
rol
pop
(bad)
gs
sbb
in
ins
or
xchg
nop
and
push
and
(bad)
out
retf
add
das
outs
or
dec
or
ror
lea
sbb
or
sub
xchg
xchg
rol
ds
add
gs
xchg
fcomp
sub
mov
dec
add
aad
pop
dec
sbb
scas
sub
adc
add
and
mov
adc
push
add
xchg
jbe
add
(bad)
jmp
nop
ret
aas
or
or
mov
add
in
sbb
in
cs
pop
adc
inc
sbb
mov
mov
pop
inc
jo
and
mov
mov
push
mov
das
push
popa
stc
push
mov
xor
adc
ja
xlat
add
xor
gs
xchg
dec
add
scas
(bad)
lods
dec
popa
push
or
scas
int
or
ins
mov
leave
loop
add
mov
push
mov
ret
and
xchg
dec
sar
(bad)
js
add
push
or
lea
inc
inc
(bad)
lds
lods
adc
pop
and
mov
cmp
fiadd
(bad)
call
jnp
mov
addr16
arpl
cmp
sbb
loope
cwde
xor
pop
mov
mov
push
and
addr16
jge
(bad)
sahf
ins
in
daa
jmp
push
or
push
and
add
mov
iret
inc
cdq
aaa
push
lahf
fstp
ins
das
add
pop
jl
xchg
push
mov
add
(bad)
dec
and
fild
add
int3
out
add
push
or
mov
xchg
enter
add
mov
fisubr
das
(bad)
fnsetpm(287
or
loope
fs
push
mov
movs
xor
push
push
fisubr
or
scas
jg
loop
add
jmp
ja
lock
cld
call
inc
sub
xchg
dec
in
test
outs
adc
add
dec
add
outs
and
cdq
sub
nop
push
mov
push
pop
add
add
jg
adc
and
cmps
maskmovq
mul
in
cwde
or
or
dec
enter
punpcklbw
cmps
psubusb
mov
adc
jecxz
call
clc
cmps
mov
data16
sbb
pop
add
leave
push
popf
and
ja
fwait
nop
pop
add
jo
and
shl
add
mov
and
dec
cmp
nop
push
lods
add
out
enter
pop
cmp
cmp
je
mov
jl
cmps
stc
add
pop
js
call
adc
rcr
mov
daa
inc
pop
sahf
fs
or
iret
outs
add
jo
fild
in
enter
inc
enter
pop
repnz
(bad)
cmp
dec
cs
and
add
mov
test
lahf
aas
dec
push
pop
lahf
xchg
popa
dec
push
(bad)
lahf
ja
pop
mov
nop
scas
ja
or
lods
mov
pop
leave
adc
(bad)
in
pushf
dec
add
loopne
mov
xchg
pop
dec
adc
jmp
mov
mov
xchg
mov
fadd
nop
in
cmps
add
sbb
daa
push
xor
push
idiv
push
mov
xchg
ja
in
mov
or
in
popa
outs
push
inc
(bad)
nop
xchg
sub
fild
inc
mov
pop
ja
pop
js
push
enter
in
repnz
cmps
(bad)
pop
mov
rcl
outs
add
or
mov
inc
jb
push
jb
dec
push
push
jb
push
push
pop
pop
js
ins
and
mov
push
fsub
jns
add
adc
ja
add
movs
out
movs
cmps
lea
xchg
loope
addr16
(bad)
fcom
add
pushf
out
inc
jo
mov
pop
or
jbe
xchg
mov
pop
enter
add
mov
or
and
mov
mov
daa
aam
addr16
add
jl
enter
xchg
add
jl
mov
movs
out
aam
in
cmp
je
cmps
push
and
enter
les
mov
cmps
mov
xchg
push
fs
mov
lahf
vpmacsdd
xchg
movs
lods
mov
or
cs
cmps
in
push
cld
cmps
daa
or
lahf
fdivr
sub
(bad)
cmp
push
cmps
ins
and
add
xor
arpl
shr
cmps
enter
cmps
push
mov
adc
clc
adc
jmp
cmps
jmp
jmp
mov
es
push
jmp
cmps
pcmpeqb
mov
in
inc
nop
nop
or
test
clc
cmps
getsec
push
jl
test
test
sub
(bad)
test
adc
aam
je
stos
jne
mov
test
or
test
int3
add
stos
hlt
nop
adc
out
sub
add
xchg
mov
scas
dec
jbe
aad
(bad)
leave
inc
lahf
stos
mov
xchg
add
cmp
hlt
stos
pop
pop
mov
xchg
xchg
sar
mov
adc
and
out
mov
addr16
push
pusha
push
jl
mov
mov
ror
aad
dec
cld
test
jns
cmp
mov
push
test
test
push
pop
and
mov
add
shr
xor
mov
inc
xor
repz
inc
push
pusha
jo
nop
cmp
repz
mov
shl
jns
out
lock
and
out
sahf
out
push
pusha
jo
popf
out
sahf
stos
rcr
dec
dec
out
sahf
out
and
dec
imul
mov
push
sub
cmp
repz
pusha
jo
nop
cmp
ds
mov
push
dec
js
cmp
repz
mov
out
sahf
cmps
inc
pop
and
call
test
out
loopne
loopne
nop
push
add
mov
add
enter
test
mov
out
repnz
inc
jo
sub
rcl
mov
(bad)
adc
(bad)
mul
sbb
and
sbb
ins
sbb
push
scas
fs
mov
mov
in
pushf
lods
mov
call
test
scas
add
adc
scas
pop
ins
dec
cmps
xchg
iret
fcomp
nop
xchg
mov
jns
push
jnp
repz
cld
or
(bad)
aaa
test
mov
mov
xchg
adc
setne
rol
add
add
aaa
fs
add
add
push
or
push
ja
sub
in
and
loopne
lock
aam
mov
nop
xchg
xchg
dec
mov
in
pop
xor
mov
mov
xlat
dec
aaa
scas
or
clc
or
adc
scas
inc
mov
push
enter
pusha
in
(bad)
cmp
cs
dec
cwde
test
xor
lock
and
pop
add
daa
xchg
pushf
dec
dec
mov
push
call
mov
jns
push
repnz
clc
or
mov
adc
jb
leave
test
cmps
xchg
iret
adc
das
xchg
xchg
dec
mov
dec
dec
and
(bad)
or
mov
pop
dec
cmp
(bad)
ja
imul
or
repnz
xchg
mov
leave
and
in
or
adc
add
fistp
outs
pop
leave
test
test
leave
cmp
mov
push
jae
or
mov
fs
mov
mov
dec
and
mov
aad
and
mov
cdq
scas
test
xchg
test
lahf
cld
pushf
inc
dec
hlt
or
neg
inc
dec
shl
push
pusha
ja
test
dec
and
dec
cmp
(bad)
xchg
xchg
inc
int3
mov
xchg
push
ja
lods
outs
nop
xchg
iret
push
repnz
addr16
outs
test
iret
cli
lods
inc
js
retf
out
mov
mov
add
enter
and
test
mov
lods
mov
xchg
out
outs
lds
cmp
and
mov
fs
sbb
lods
ret
jge
adc
mov
jg
test
das
mov
fstp
cwde
pop
fild
xchg
ficom
mov
ror
out
dec
lea
ins
or
iret
xor
adc
sbb
push
mov
add
je
and
mov
inc
push
fcom
cmc
push
pusha
pop
and
jns
mov
cs
push
add
scas
pop
ins
and
cmps
daa
xchg
dec
mov
scas
mov
aam
sub
sbb
or
add
in
sbb
sub
ins
and
mov
call
lock
aas
clc
dec
leave
xor
mov
dec
xchg
mov
scas
dec
and
sbb
dec
mov
push
pusha
mov
mov
cmp
pusha
nop
leave
and
mov
pop
leave
and
jb
loope
and
shl
cmp
dec
dec
xor
pop
jb
adc
cs
mov
pop
mov
loopne
nop
rdmsr
xchg
mov
shl
rcl
enter
out
ja
je
jbe
push
pop
aam
repz
test
cmp
add
mov
add
leave
repz
add
dec
mov
jns
cmps
pusha
dec
sbb
xchg
retf
outs
shl
outs
dec
cdq
add
push
mov
and
xor
or
into
addr16
pop
cld
adc
daa
iret
dec
jae
cmp
cwde
mov
repnz
cmp
call
into
xor
lds
xchg
or
cmp
inc
es
cmp
out
adc
cmps
cmp
jns
enter
ds
cmp
cmps
inc
lods
push
xchg
cld
adc
and
(bad)
adc
and
xor
mov
inc
pop
dec
test
sbb
dec
(bad)
sbb
add
ins
dec
fstp
(bad)
push
push
lods
les
add
sbb
mov
(bad)
push
jl
dec
dec
enter
dec
rcl
mov
fstp
daa
(bad)
(bad)
fcom
dec
mov
vmovss
dec
fdiv
dec
call
aam
fadd
dec
ds
les
pusha
call
or
sub
push
and
xor
sub
pop
push
xchg
mov
arpl
inc
aaa
mov
push
iret
add
out
add
and
arpl
and
popf
rcr
ins
out
push
aas
mov
sub
dec
aad
rcr
pop
imul
mov
mov
aaa
add
scas
adc
xor
sub
and
sbb
and
outs
mov
or
outs
jg
pop
aas
pop
sbb
xchg
add
loope
jp
push
xchg
push
inc
pop
sbb
es
add
fmul
push
xchg
pop
pop
addr16
pop
push
jae
sti
retf
mov
lahf
jns
jg
dec
jle
imul
sbb
sbb
outs
xor
add
data16
outs
fwait
ss
push
pop
imul
imul
inc
mov
cmp
(bad)
loope
pop
sbb
rcl
sub
popf
and
adc
pushaw
in
mov
sub
pusha
imul
shr
dec
gs
lahf
ret
out
dec
pop
dec
pop
ret
in
and
lock
adc
cmp
inc
jmp
mov
loopne
jnp
and
daa
inc
jo
dec
push
and
xchg
mov
inc
and
or
gs
mov
or
aad
xchg
scas
stos
adc
cmp
pop
jmp
shl
and
test
jb
xor
adc
(bad)
or
or
xlat
mov
iret
out
pop
mov
out
push
xchg
sbb
jnp
imul
loopne
into
push
fadd
xor
rcr
push
arpl
scas
or
xchg
add
adc
add
cmp
aas
dec
mov
push
cmp
cmps
and
mov
sahf
cmps
lods
add
dec
cmp
mov
push
and
dec
inc
js
lods
fcom
dec
popa
das
lock
dec
das
push
inc
inc
dec
xor
xchg
out
dec
sbb
inc
add
dec
push
(bad)
(bad)
jb
jno
inc
js
scas
lds
push
push
dec
pop
dec
or
add
in
jo
dec
jo
push
jo
jle
and
pop
inc
pop
push
aas
inc
add
jp
mov
inc
(bad)
ja
clc
bound
in
ins
bound
arpl
stos
xchg
fwait
add
add
shr
add
ins
jo
add
adc
adc
xor
and
jo
dec
neg
cld
add
push
loopne
add
push
repz
fwait
sub
mov
jo
xchg
cs
adc
xchg
adc
rol
rol
je
mov
sub
inc
pusha
push
(bad)
rol
pop
ror
push
inc
dec
adc
mov
out
leave
and
or
out
bound
sbb
loope
pop
jbe
shr
in
xor
push
lods
das
fisubr
call
scas
add
add
popf
jle
inc
dec
mov
das
movs
imul
pop
movs
mov
mov
fiadd
and
add
iret
add
daa
je
dec
xlat
gs
repz
push
mov
lds
out
les
movs
ror
adc
adc
test
adc
mov
mov
mov
sub
sbb
inc
push
sub
adc
lock
xor
div
nop
add
jo
test
ins
pop
je
add
push
and
jno
mov
mov
add
xor
dec
hlt
sbb
sub
pop
arpl
loopne
ins
aad
aas
adc
add
push
mov
repz
cmp
aad
inc
inc
pop
pop
ret
icebp
push
adc
fmul
dec
lock
inc
fwait
add
push
and
or
lds
popf
ds
add
xchg
push
xchg
and
mov
cmp
push
sub
fadd
jmp
push
(bad)
popa
xor
push
scas
push
pop
xchg
pop
movs
or
push
repnz
mov
mov
scas
fbstp
mov
xchg
add
jae
pop
add
mov
mov
fisubr
xchg
dec
add
push
dec
dec
pop
(bad)
jmp
sub
mov
(bad)
inc
dec
xchg
and
imul
mov
in
xor
push
lock
loope
mov
lock
add
and
inc
mov
popf
test
scas
scas
add
xor
loopne
add
add
fadd
pusha
inc
xor
jo
inc
xor
or
add
nop
ins
or
cmp
xchg
dec
or
mov
aaa
add
ins
retf
xor
int3
dec
jns
xchg
pop
and
inc
add
neg
rol
inc
push
jo
sub
nop
jo
push
enter
and
push
popa
icebp
ror
and
sbb
jne
sub
rol
pop
mov
lods
pusha
push
jb
add
scas
popf
jle
dec
push
inc
aas
rep
inc
in
or
test
shl
add
or
and
inc
sar
inc
add
adc
push
pop
not
add
inc
sub
xchg
or
inc
outs
mov
xchg
jb
out
xchg
xor
mov
out
or
iret
sbb
js
pop
jb
test
add
or
sub
ja
outs
dec
inc
or
pop
add
mov
mov
or
dec
cmp
mov
xor
inc
ins
test
push
arpl
adc
and
cwde
add
mov
fwait
inc
add
and
sti
jecxz
cs
and
cwde
mov
jmp
repz
mov
push
sbb
es
call
xchg
scas
lock
iret
inc
in
ins
pop
imul
add
lahf
xchg
xor
inc
dec
movs
retf
fwait
lahf
movs
xor
rol
mov
adc
push
iret
mov
pop
pop
add
cmps
loope
mov
jp
pop
mov
inc
dec
dec
mov
repz
mov
pusha
add
push
push
xchg
fstp
rcl
popa
and
and
mov
and
dec
dec
dec
sbb
pop
cld
das
fadd
hlt
out
xor
and
pop
rcr
add
sbb
stos
sub
mov
into
pop
test
ror
dec
and
adc
les
outs
je
pop
mov
xchg
mov
inc
pop
test
mov
xor
inc
add
imul
in
pushf
add
add
add
xchg
or
cdq
cmp
mov
retf
cld
popa
mov
test
and
jge
add
movs
lea
mov
int
lea
ins
push
pop
inc
leave
push
scas
add
adc
sbb
xor
jne
test
call
push
addr16
xchg
out
ss
pop
dec
sbb
out
pop
add
loop
add
pop
movs
or
sbb
addr16
xchg
and
test
sub
push
fimul
scas
sub
les
pop
(bad)
cld
adc
fmul
dec
add
push
inc
loopne
inc
ins
xchg
mov
sbb
pop
cmps
mov
jnp
xor
add
or
or
rcr
xor
loop
mov
push
or
sbb
or
dec
mov
add
add
and
or
les
sbb
and
add
inc
sbb
sub
pusha
add
add
sub
les
cmp
cmp
sub
add
mov
inc
dec
and
mov
dec
pushf
pop
inc
or
daa
cmc
sbb
pop
cdq
xchg
outs
aas
sbb
ja
pop
add
inc
pushf
call
cmp
mov
movs
push
shr
jg
mov
add
jne
mov
pop
jae
test
imul
push
loope
lock
sub
es
cmp
pushf
mov
je
pop
add
jnp
mov
cmp
ins
daa
jbe
test
xor
popa
mov
imul
push
popa
popf
or
test
pop
or
popf
cmps
xchg
int3
pop
mov
pusha
and
adc
mov
xor
push
sbb
je
sbb
cmps
stc
sahf
cmps
push
loopne
xor
xor
imul
push
push
and
xchg
adc
cs
push
sub
lock
cmp
push
push
rol
lods
mov
xor
push
xchg
dec
repz
cmp
iret
cmp
cmp
out
inc
scas
lock
sahf
lods
jnp
sbb
or
inc
jle
push
inc
test
inc
xchg
mov
dec
and
repz
jns
jbe
pop
push
rol
mov
into
lock
test
pop
cmps
cmp
or
retf
xcrypt-ecb
cmps
dec
push
dec
shl
leave
mov
sub
je
add
xor
mov
clc
les
scas
xor
aad
pop
sub
popa
inc
or
push
fs
mov
inc
sbb
dec
xchg
mov
adc
push
jnp
adc
xchg
sub
aas
lods
sbb
push
jae
xor
add
pop
mov
pop
dec
test
mov
aas
sbb
imul
es
lock
xor
imul
and
xchg
add
or
sar
mov
outs
pop
fisub
dec
mov
adc
scas
ja
mov
(bad)
ins
les
fnstcw
cli
aaa
outs
dec
add
rcr
add
adc
fild
ja
mov
sub
in
mov
dec
stos
xor
push
or
mov
lock
test
jp
mov
and
pop
sti
pusha
dec
sub
add
add
fld
sub
mov
xchg
mov
jns
add
xchg
imul
inc
lods
cmp
xor
adc
inc
arpl
and
jns
mov
aaa
jo
xchg
test
dec
cwde
mov
or
pusha
cwde
adc
dec
push
adc
movs
push
pop
sbb
cs
push
pop
adc
aaa
push
dec
les
pusha
mov
ret
test
je
sbb
pop
mov
mov
call
inc
xchg
add
add
pop
sub
movs
and
cmp
add
fcmovb
push
xchg
(bad)
mov
xor
adc
inc
out
dec
or
push
lock
jb
push
lock
inc
call
inc
les
rcl
sub
cmps
cs
lods
pop
dec
jnp
push
or
aas
push
mov
cmp
push
stos
xor
(bad)
scas
addr16
push
sahf
aaa
xor
xchg
xor
pusha
inc
jle
dec
outs
sahf
daa
nop
and
inc
pusha
inc
mov
jo
ror
aas
shl
loope
xchg
pop
inc
dec
xchg
add
cmp
jge
imul
ds
sbb
push
sub
add
inc
sahf
idiv
imul
iret
sar
mov
mov
imul
add
push
iret
repz
adc
push
add
(bad)
pop
xor
out
push
ins
cld
jo
jp
cmps
stc
fdiv
and
push
pop
add
out
sahf
or
or
out
or
mov
stos
das
adc
or
(bad)
lahf
mov
(bad)
inc
movs
mov
mov
adc
pop
movs
cmps
addr16
add
mov
mov
das
push
push
rcr
mov
add
fld
movq
dec
cmp
sub
mov
push
ins
xor
mov
stos
and
push
(bad)
addr16
sub
add
lds
popa
and
ja
sar
or
or
pop
mov
mov
or
je
pop
je
in
test
add
push
shl
mov
gs
add
imul
popa
inc
add
mov
(bad)
cmp
js
mov
fs
mov
jg
enter
dec
xor
(bad)
mov
jp
push
jp
push
arpl
arpl
and
and
js
add
ds
pop
outs
jae
pop
scas
cmp
sub
das
xchg
imul
cld
push
sar
add
arpl
imul
xor
adc
mov
das
xor
sub
mov
ja
jb
mov
inc
inc
xlat
sbb
push
xor
add
sub
(bad)
sub
and
pop
mov
loopne
outs
xchg
and
pop
dec
dec
mov
push
btr
popa
jo
xor
ins
adc
jae
push
jecxz
adc
gs
das
imul
dec
pop
and
mov
arpl
jbe
or
das
and
push
pop
push
xor
inc
xor
push
(bad)
(bad)
mov
xor
xor
cmp
inc
inc
xor
inc
inc
inc
ss
add
sti
push
inc
cmp
aaa
inc
inc
inc
inc
inc
xor
aaa
xor
cs
xor
push
push
fmul
int3
add
pusha
inc
xor
dec
aaa
fild
sub
sbb
or
xor
adc
xlat
scas
mov
arpl
push
push
push
or
mov
and
dec
push
pop
sub
add
stos
loopne
and
cmp
xor
inc
data16
adc
cmp
gs
xor
jle
push
bound
cmp
xor
cmp
and
fld
(bad)
in
lock
xor
sbb
movs
mov
dec
inc
aaa
xor
and
and
jo
mov
jg
inc
ins
les
mov
mov
pusha
movs
sub
movs
jne
les
mov
mov
fidiv
das
mov
mov
sbb
or
(bad)
jle
js
dec
(bad)
jmp
test
cmp
inc
push
js
mov
and
cwde
inc
jo
inc
mov
(bad)
(bad)
call
jo
inc
pusha
add
lods
loopne
fwait
cld
pop
mov
shl
jg
jno
xor
xchg
push
sahf
jno
je
adc
(bad)
mov
add
outs
(bad)
mov
arpl
pop
and
or
call
lds
in
pop
cs
(bad)
(bad)
(bad)
jg
movs
int3
int3
(bad)
inc
repz
test
movs
add
(bad)
xchg
and
fwait
rcpps
(bad)
(bad)
(bad)
(bad)
mov
push
push
jno
fs
lahf
fidiv
test
pop
jmp
sub
ins
stc
(bad)
(bad)
(bad)
call
imul
lahf
jne
xor
call
push
out
ds
leave
inc
mov
xlat
jecxz
(bad)
(bad)
(bad)
inc
fidiv
jne
push
lods
or
dec
movs
fistp
cmp
mov
push
addr16
or
in
loopne
cli
(bad)
call
retf
daa
dec
pop
mov
test
fs
mov
pusha
add
cmp
pop
(bad)
(bad)
(bad)
loope
stc
inc
dec
inc
scas
inc
pusha
cmp
adc
inc
xor
inc
cld
das
inc
call
xor
ss
push
adc
xor
cmp
movs
sub
push
or
pushf
rcl
jp
ds
(bad)
(bad)
(bad)
inc
mov
or
add
inc
ins
push
mov
push
and
add
mov
(bad)
call
xchg
gs
jl
adc
or
add
loopne
inc
mov
sub
cmp
mov
mov
mov
inc
jecxz
mov
rol
mov
pop
push
in
mov
test
dec
jecxz
call
and
int
pop
int3
pop
in
xchg
cmp
dec
cli
(bad)
call
pop
sub
and
adc
xchg
mov
pop
inc
adc
aam
and
jae
(bad)
jns
dec
cmps
(bad)
(bad)
fld
cs
mov
cld
cdq
mov
pop
push
xchg
xchg
sahf
adc
mov
(bad)
(bad)
(bad)
dec
pop
mov
outs
in
sbb
out
mov
xchg
lds
sbb
leave
bound
and
push
(bad)
(bad)
(bad)
call
xchg
imul
xor
xor
sub
mov
xchg
icebp
sbb
jno
aam
dec
dec
add
add
imul
jns
pop
add
adc
xor
inc
inc
(bad)
in
add
sub
ins
add
dec
add
pop
or
repnz
add
jns
iret
cmp
sub
sbb
test
adc
cld
test
outs
and
es
push
inc
xchg
outs
aas
mov
icebp
scas
stc
xor
mov
and
inc
bnd
push
call
cmps
test
fmul
fdiv
aam
idiv
enter
les
push
shr
lock
neg
scas
jmp
jo
lods
push
movs
mov
out
arpl
in
cwde
lock
out
dec
fstp
daa
scas
jle
push
imul
ds
lock
in
cwde
cs
out
cmps
push
(bad)
push
jo
push
push
fadd
adc
add
add
js
cld
sar
xor
push
add
dec
iret
repz
xor
nop
cmp
cmp
xor
and
das
out
sahf
rcr
push
adc
sar
(bad)
push
cmp
gs
push
shl
mov
push
shl
add
jno
push
scas
pop
dec
lds
jo
jnp
add
adc
inc
cli
(bad)
(bad)
push
push
xor
jne
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
jmp
ds
xor
xor
lea
pushf
xor
xor
xor
xor
xor
xor
xor
and
les
xor
bound
ins
xor
jmp
xor
xor
xor
and
(bad)
(bad)
push
xchg
xor
sub
cmp
adc
push
aaa
xchg
aaa
mov
aaa
(bad)
(bad)
(bad)
(bad)
fidiv
jmp
cmp
cmp
jbe
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
push
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
jg
xchg
cmp
cmp
cmp
cmp
pop
cmp
mov
ret
cmp
dec
notrack
mov
fwait
ds
int3
fstp
repnz
ss
aas
outs
aas
ja
fwait
es
cld
aas
les
sar
jmp
pop
push
xor
nop
xor
xor
xor
xor
and
ds
jg
push
xor
xor
xor
xor
xor
into
jns
test
popf
xor
xor
dec
xor
(bad)
push
jl
mov
shl
sti
xor
xor
xor
xor
jae
(bad)
xor
xor
xor
xor
xor
add
cld
out
adc
xor
(bad)
aas
xchg
inc
ss
ss
cmps
shl
ss
push
aaa
cdq
aaa
mov
out
cmp
sub
(bad)
mov
cmp
pushf
cmp
das
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
jae
jge
mov
cmps
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
(bad)
(bad)
(bad)
cmp
ds
ds
ds
jg
lea
xchg
ds
aas
jle
mov
retf
aas
fcmovbe
cli
mov
enter
pop
pop
and
xor
lock
(bad)
(bad)
call
xor
xor
jb
aad
jmp
sbb
and
xor
js
sti
xor
xor
sahf
xor
(bad)
(bad)
call
xor
xor
xor
ins
xor
xor
xor
xor
xor
xor
xor
xchg
inc
xor
pop
xor
sahf
xor
out
dec
ss
mov
call
dec
fidiv
cmc
or
sbb
sub
xor
inc
aaa
xchg
xor
push
cmp
(bad)
(bad)
push
int
jecxz
sbb
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
clc
cmp
cmp
inc
cmp
cmp
cmp
fst
(bad)
(bad)
jg
jp
mov
or
or
ds
mov
sbb
idiv
adc
aas
push
jg
(bad)
aas
in
aas
sti
aas
inc
iret
pop
cmp
(bad)
wrmsr
sbb
inc
icebp
(bad)
(bad)
push
mov
xor
xor
xor
xor
xor
outs
xor
xor
jbe
adc
int3
inc
shl
loopne
cld
mov
clc
ss
aaa
sub
pop
aaa
bound
aaa
(bad)
cmp
cmp
xchg
pop
cld
call
inc
cmp
cmp
jl
lahf
cmp
cmp
xor
(bad)
(bad)
cmp
mov
mov
ds
aaa
aaa
inc
aas
dec
aas
push
aas
pop
aas
fs
imul
mov
aas
lds
jmp
aas
out
aas
sbb
xor
(bad)
(bad)
dec
cli
push
jo
ja
jg
sahf
xor
push
xor
xor
xor
push
and
sbb
aas
xor
xchg
(bad)
jg
cmp
ret
xor
xor
xor
xor
xor
xor
lods
xor
das
ds
mov
push
add
or
jmp
mov
aaa
mov
dec
cmp
cmp
cmp
cmp
mov
cmp
jg
mov
les
aas
repnz
out
cmp
cmp
cmp
into
dec
cmp
jb
jg
adc
scas
cmp
gs
and
in
aas
icebp
add
cld
fwait
ins
scas
xor
outs
(bad)
mov
and
dec
xor
call
cld
pushf
xor
mov
ret
xor
xor
xor
xor
xor
xor
ja
add
sub
ds
jno
movs
aaa
jne
cmps
cmp
call
pusha
retf
cmp
push
aas
cmp
aas
stos
aas
mov
push
sub
aas
mov
not
mov
dec
xor
inc
xor
pop
and
repz
push
xor
xor
xor
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
xor
lahf
mov
xor
pop
ss
faddp
(bad)
(bad)
push
movs
aaa
fnsave
xor
push
(bad)
pop
idiv
cmp
cmp
inc
cmp
pusha
cmp
mov
fidivr
pop
ds
ds
xor
jmp
aas
dec
push
int3
aas
fnsave
add
sub
jae
(bad)
jmp
xor
xchg
sbb
and
imul
xor
xor
xor
xor
xor
sub
je
xor
lock
pop
jp
xor
xor
data16
xlat
rcl
cvtps2pd
call
mov
(bad)
jg
and
sub
xor
inc
xor
pop
xor
jp
xor
xor
cli
(bad)
(bad)
mov
xor
xor
xor
xor
xor
xor
xor
xor
lods
xor
xor
call
aad
bound
xor
xor
xor
pop
mov
mov
xor
(bad)
push
mov
xor
cli
call
ret
xor
xor
dec
xchg
je
js
jl
xor
xor
pushf
xor
push
lods
xor
mov
push
aaa
(bad)
xor
repz
add
cmp
sbb
sub
sub
movs
inc
mov
ss
jg
push
les
retf
ss
cwde
cmp
cmp
push
cmp
jns
stos
cld
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
push
lods
inc
xchg
jbe
mov
(bad)
sbb
cmp
mov
inc
cld
aas
dec
aas
lea
int
mov
dec
xor
xor
xor
ss
js
jmp
out
xor
(bad)
pop
mov
xchg
ds
ss
ss
add
jg
xor
inc
aaa
cmp
aaa
scas
aaa
fdiv
div
push
cmp
pop
cmp
xchg
cmp
cmp
cmp
mov
lock
cmp
cmp
cmp
cmp
paddd
cmp
cmp
cmp
cmp
(bad)
cmp
cmp
cmp
cmp
dec
cmp
ins
cmp
loopne
(bad)
jmp
cmp
cmp
iret
ds
adc
imul
call
mov
and
outs
sub
jns
sub
(bad)
ffreep
xor
xor
jno
sahf
ss
push
sbb
clc
call
pop
cmp
in
stc
cmp
cmp
cmp
cmp
or
test
cmp
cmp
cmp
cmp
pop
fld
inc
inc
cmp
cmp
cmp
sar
mov
sar
cmp
cmp
mov
ds
ds
stos
aas
add
ds
retf
mov
test
xor
mov
push
je
xchg
xor
xor
xchg
xchg
xor
(bad)
(bad)
mov
xor
xor
xor
xor
dec
xor
sub
cmp
inc
cmp
inc
cmp
cmp
fdivr
out
in
cmp
cmp
cmp
cmp
(bad)
jmp
cli
cmp
cmp
cmp
cmp
push
cmp
xchg
lea
xchg
mov
xchg
test
mov
lock
lahf
(bad)
adc
cmp
cmp
shr
cmp
hlt
pop
dec
sbb
push
ds
ds
ds
jecxz
lock
cmp
dec
xor
xor
loop
xor
xor
test
(bad)
mov
mov
xor
xor
xor
xor
jp
jg
rol
adc
enter
sub
aas
dec
push
(bad)
cmp
cmp
inc
inc
lock
cmp
cmp
cmp
cmp
adc
push
ror
cmp
imul
loope
cld
cmp
cmp
cmp
repnz
pop
scas
xchg
cmp
mov
cmp
cmp
cmp
test
ds
clc
jnp
xchg
mov
inc
adc
sbb
aas
push
add
data16
xor
xor
stos
(bad)
cmp
dec
xor
jnp
xchg
xor
push
stc
xor
xor
jmp
xor
jne
inc
xor
xor
xor
data16
push
test
retf
xor
lods
add
sahf
jp
push
pop
aaa
cmp
jle
mov
cmp
pop
cmp
(bad)
inc
dec
xchg
cmp
cmp
ja
add
sbb
sub
aaa
mov
push
cmp
cmp
cmp
cmp
jg
or
xor
cmp
mov
cmp
cli
push
outs
ds
shl
mov
and
xchg
aas
lods
aas
mov
push
add
or
pandn
leave
xor
xor
xor
jnp
enter
sbb
aaa
loopne
jb
retf
(bad)
xor
or
clc
aas
inc
cmp
push
xor
xor
cmp
lahf
lea
xor
add
cmc
jg
stos
cdq
cs
xor
cmp
xor
mov
(bad)
inc
pop
sub
cmp
dec
ss
ss
xchg
mov
xchg
mov
(bad)
(bad)
push
fidiv
in
ss
sahf
adc
cmp
push
test
loope
adc
daa
cmp
lahf
mov
in
cmp
inc
add
pop
cmp
cmp
jg
sub
xor
cmp
aas
cmp
mov
mov
scas
and
nop
cmp
inc
cmp
call
push
jp
mov
cmp
push
push
jle
mov
jmp
fidivr
cmp
loope
jmp
sti
cmp
pop
arpl
popa
ds
lods
ds
(bad)
ds
ds
lock
or
sbb
mov
jne
aas
mov
xchg
aas
and
cld
xchg
lock
fisttp
jl
mov
mov
xor
xor
xor
xor
xor
scas
and
xor
jnp
adc
jo
je
cli
cli
loop
mov
xor
xchg
or
jbe
xor
xor
xor
(bad)
jae
inc
pop
adc
out
xor
(bad)
lock
cld
repz
ss
ss
inc
aaa
ins
aaa
test
push
repnz
sub
push
test
stos
mov
cmp
mov
cmp
cmp
fist
jb
push
jnp
or
inc
cmp
(bad)
cmp
pop
add
cmp
mov
cmp
jmp
adc
cmp
cmp
cmp
cmp
cmp
aas
in
mov
cmp
jb
aas
push
ds
(bad)
cld
aas
pusha
aas
xchg
aas
ret
push
or
sub
mov
xor
xor
test
ret
xor
push
lea
adc
push
xor
xor
xor
or
xchg
jae
(bad)
aad
das
outs
cmp
cmp
cmp
cmp
pop
mov
jl
cmp
aas
std
jg
jmp
cmp
cmp
cmp
and
xchg
mov
mov
cmp
cmp
cmp
retf
fiadd
rol
cmp
and
push
or
and
xor
xor
xor
or
xor
(bad)
(bad)
jmp
mov
or
xor
or
push
ss
mov
mov
adc
and
dec
add
call
int3
cmp
mov
cmp
cmp
(bad)
adc
mov
int3
cmp
push
stos
pusha
push
call
(bad)
and
inc
push
jns
xchg
lock
add
div
sub
inc
xor
pop
mov
(bad)
cdq
cmp
jmp
lea
xor
xlat
xor
pushf
sahf
jecxz
push
aaa
sbb
daa
ret
outs
or
aaa
inc
aaa
dec
aaa
push
aaa
mov
cmp
loop
inc
push
cmp
cmp
pop
xor
mov
jno
ja
jle
test
(bad)
scas
or
sub
int
(bad)
aam
adc
out
cld
sub
xor
mov
cmp
data16
xchg
sbb
inc
add
jmp
sbb
pop
bound
adc
(bad)
ds
sar
sub
mov
(bad)
(bad)
call
xor
or
sbb
dec
xor
js
jge
xchg
xor
lods
inc
mov
(bad)
push
loop
xor
bound
xor
xor
shl
xor
sub
xor
mov
mov
push
inc
es
(bad)
aam
cmp
mov
loop
ret
jg
idiv
out
lock
cmp
cmp
hlt
cmp
cmp
aas
mov
in
mov
cmp
clc
push
idiv
and
ss
xor
ds
inc
xor
ds
aas
push
aas
ins
aas
test
outs
loop
or
adc
or
xor
jge
(bad)
fwait
inc
mov
xor
neg
icebp
inc
retf
div
or
mov
jge
xor
xor
xor
sbb
dec
lea
xchg
adc
or
xchg
mov
jle
sbb
jo
rcr
fnstcw
or
push
fcmovbe
cmp
sbb
cmp
sti
cmp
(bad)
mov
cmp
cmp
cmp
dec
ds
and
es
ds
mov
fs
xor
test
dec
sub
(bad)
(bad)
xor
push
xor
rol
scas
xor
xor
loopne
in
fcom
out
push
lds
in
xor
and
sbb
shl
xor
ss
mov
cld
xor
push
aaa
imul
(bad)
stos
call
pop
iret
cmp
cmp
cmp
cmp
jo
mov
cmp
jle
jg
mov
push
cmp
pop
cmp
cmp
ins
daa
sub
or
cmp
jb
fwait
cmp
cmp
cmp
scas
scas
rcl
cmp
dec
das
and
adc
rol
ds
ds
push
inc
mov
mov
(bad)
ds
pop
aam
pusha
sbb
addr16
xor
jecxz
not
xor
inc
add
push
xor
jbe
and
cld
jle
mov
sub
ss
aaa
inc
cmp
jge
(bad)
push
cmp
inc
dec
cmp
xchg
mov
xlat
ror
and
das
hlt
xlat
jge
add
cmp
cmp
mov
dec
aam
jmp
cmp
loope
inc
mov
icebp
push
sbb
sub
xor
ds
ds
mov
ja
sbb
xor
cmp
int3
fild
lds
or
adc
pop
rcr
add
es
jmp
xor
xor
xor
xor
je
inc
xor
xor
xchg
xor
xor
popf
clc
inc
ss
ss
js
mov
mov
shl
fstp
jle
dec
pop
add
or
aaa
cmp
ja
das
adc
xchg
aaa
fwait
nop
shl
aaa
shl
icebp
aaa
sti
aaa
add
and
sub
push
cwde
pusha
sbb
mov
mov
sar
int3
adc
(bad)
cmps
scas
cld
jnp
add
loopne
sub
jmp
mov
cmp
cmp
cmp
fild
pop
(bad)
cmp
sbb
dec
lods
jbe
and
jg
(bad)
cwde
xchg
popf
xor
mov
push
aaa
cs
mov
mov
lock
jmp
adc
xor
xor
xor
xor
outs
rol
test
xor
xor
xor
sahf
loope
lock
xor
pusha
outs
jo
adc
xor
shr
stos
push
dec
sbb
pusha
push
cmp
jb
shr
and
push
enter
inc
adc
cmp
cmp
xchg
push
dec
aas
gs
nop
movs
lods
mov
jo
out
push
adc
pop
pop
add
cmp
fnstenv
out
inc
or
je
xchg
xor
mov
xor
xor
icebp
rol
cmp
sbb
sbb
mov
stos
fdivr
jmp
push
cmp
nop
and
xor
(bad)
popf
test
cmp
push
pop
mov
mov
loop
sar
icebp
cmp
cmp
cmp
cmp
inc
test
mov
jo
cmps
ds
ds
or
mov
je
test
cdq
aas
scas
aas
mov
in
pop
int
adc
sub
lock
mov
lods
xor
xor
sbb
hlt
fisttp
sbb
sub
aaa
cwde
inc
push
dec
clc
scas
push
ins
xor
movs
xor
div
pop
(bad)
push
cmp
xor
xchg
and
inc
push
pop
or
ss
aaa
movs
cmp
cmp
xor
sub
or
je
cmp
bound
imul
jmp
jne
test
or
or
xor
cmc
cmc
mov
test
sbb
sub
xor
xchg
repz
xor
xor
jl
daa
xchg
aas
inc
push
push
es
xor
or
inc
sub
lods
jle
(bad)
pop
popf
clc
cmc
xor
cwde
hlt
enter
adc
test
call
jne
mov
adc
cmp
and
hlt
push
fmul
add
xchg
dec
jg
cmp
cmp
cmp
fs
jmp
cli
push
mov
mov
ds
test
inc
or
cmp
aas
cwde
aas
mov
adc
fmul
aas
fsubr
xor
rol
mov
inc
add
retf
inc
aad
(bad)
fidiv
xor
xor
xor
inc
and
fs
xor
push
jne
cs
xor
hlt
xlat
pop
movs
mov
xor
xor
(bad)
mov
add
xor
cs
add
or
or
ss
loopne
je
aaa
cs
jecxz
push
mov
int3
sbb
or
jmp
mov
mov
or
inc
cmp
add
cmp
cmp
movs
jne
and
mov
inc
bound
scas
push
sub
xchg
ds
ds
(bad)
clc
out
add
push
aas
pop
ret
mov
cmps
aas
mov
into
aas
out
dec
add
push
push
xor
les
inc
xor
out
mov
xchg
adc
and
and
jl
xor
push
pop
mov
jg
ss
mov
sbb
cmp
mov
stos
je
xor
cmp
sub
pop
jns
add
loope
loopne
test
add
mov
xchg
outs
stos
xor
(bad)
scas
(bad)
int
xor
xor
xor
xchg
ja
mov
and
xor
aaa
(bad)
nop
ss
mov
ss
fnsave
call
std
add
getsec
adc
cmp
or
(bad)
out
aaa
lea
xchg
or
jecxz
mov
aaa
les
nop
out
push
or
or
dec
ins
stos
je
call
push
xchg
pusha
mov
add
xor
rol
pop
mov
cmc
ss
cs
inc
dec
in
push
inc
adc
in
cmp
cmp
test
push
cmp
adc
adc
sbb
xchg
cmp
sub
adc
jg
add
or
je
pop
cmp
xchg
aam
inc
hlt
xor
or
push
xor
inc
inc
xor
lock
add
mov
aaa
adc
sbb
sbb
and
add
cmp
xor
mov
mov
push
loopne
lods
push
cmp
sahf
jbe
mov
pop
hlt
cld
rcr
dec
pop
cmp
push
xlat
outs
sub
dec
clc
ins
xor
add
sbb
adc
mov
cmp
js
sar
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jbe
test
cmp
fdiv
sbb
shl
aam
xchg
add
inc
fdivr
pop
hlt
into
cld
xor
xor
or
xchg
xor
cmp
push
xor
pop
setae
xor
xor
xor
stos
sub
(bad)
mov
mov
mov
hlt
jns
pop
lods
mov
xor
jmp
jl
cmp
ss
ss
bound
jb
mov
pop
repz
cmp
(bad)
aaa
dec
sub
aaa
popf
aaa
mov
inc
mov
jne
cmp
and
cmp
(bad)
clc
mov
xchg
daa
cmp
adc
cmp
(bad)
pop
mov
cmp
cmp
pop
cmp
inc
pop
popa
or
add
xor
xchg
adc
mov
call
mov
int
add
aaa
sbb
jae
add
sbb
add
nop
cmp
jmp
sar
loop
aas
mov
nop
aas
lahf
aas
movs
aas
test
xor
mov
sub
hlt
ss
loop
xor
daa
xor
arpl
cli
add
xor
mov
adc
add
sub
jp
jp
xor
xor
push
into
(bad)
retf
mov
nop
xchg
xor
call
mov
mov
into
adc
push
out
add
dec
and
loop
(bad)
push
xor
and
sub
cs
inc
stos
dec
xor
pop
xor
aam
mov
xor
add
add
test
cmps
push
add
xchg
mov
mov
and
call
xor
xor
xor
xor
fdiv
cmp
mov
mov
xchg
sbb
fwait
lock
(bad)
imul
mov
cwde
cmp
test
fistp
out
dec
aad
ja
push
cmp
enter
cmp
pop
cmp
inc
data16
mov
into
jp
aas
cld
cmp
cmp
cmp
fidivr
cmp
adc
je
mov
in
cmp
je
mov
inc
call
(bad)
shl
cmp
hlt
bound
clc
push
mov
ds
in
and
rcl
dec
dec
ds
in
pop
ds
mov
and
ds
ds
cmps
pop
int
das
adc
add
xor
sbb
xor
jb
add
add
xor
or
xor
sbb
pop
mov
xor
xchg
xchg
push
movs
ret
jb
ret
add
jo
sub
dec
lods
clc
xor
push
mov
js
ror
and
xor
mov
xor
stos
push
xchg
pop
gs
xchg
ret
movs
inc
sbb
mov
hlt
ss
ss
loopne
and
int
xchg
fiadd
push
jno
and
loope
cmp
xor
inc
popa
xchg
sub
sbb
icebp
(bad)
adc
push
add
cmp
test
in
std
jg
sub
cmp
cmp
cmp
pop
call
jns
mov
cli
stc
cmp
cmp
cmp
jle
cmp
cmp
cmp
inc
push
cmp
imul
mov
cmp
xor
inc
in
sbb
aas
sub
adc
movs
shl
sub
imul
mov
push
mov
(bad)
xor
xor
adc
call
add
xor
adc
inc
adc
sub
sahf
cld
xor
jmp
dec
aaa
shl
aaa
push
aaa
pop
repnz
aaa
sub
sbb
and
pop
add
mov
mov
aam
fdivr
or
aaa
in
in
add
rcl
add
or
add
and
mov
enter
mov
inc
cmp
cmp
push
pop
inc
push
ret
jmp
(bad)
cmp
cmp
cmp
cmc
hlt
dec
or
lods
add
xchg
std
xor
bound
cmp
dec
push
cmp
pusha
stos
sar
sub
cmp
int3
cs
inc
or
data16
push
cmp
lock
push
adc
or
add
inc
xchg
je
or
adc
sbb
xchg
cmp
and
add
and
scas
and
mov
dec
adc
fdivr
bnd
sahf
lock
mov
test
movs
nop
inc
and
les
(bad)
jp
xchg
mov
adc
mov
loopne
in
hlt
jp
xor
xor
loop
loopne
xor
enter
xchg
and
push
push
mov
fisub
mov
push
mov
stos
les
fcom
loopne
or
lock
sub
pop
es
add
or
movs
aam
xchg
adc
sbb
inc
(bad)
sub
jo
sub
cs
jl
mov
add
clc
stos
inc
call
rol
cmp
xor
adc
inc
bound
mov
cmp
sbb
cmp
les
cmp
nop
les
stos
push
adc
rol
mov
(bad)
mov
aam
cmp
cmc
(bad)
and
and
mov
rol
add
(bad)
adc
bound
add
dec
pusha
and
push
xchg
mov
add
adc
cld
sub
popf
add
sub
(bad)
mov
dec
repnz
mov
sub
mov
xchg
(bad)
inc
cmp
hlt
inc
add
or
in
imul
cmp
and
je
pop
and
pushf
or
les
pop
push
call
je
call
in
dec
adc
add
adc
and
mov
mov
lods
test
mov
cld
xchg
add
and
mov
pop
push
lods
scas
push
pushf
xor
retf
lea
mov
cld
mov
and
xor
mov
or
push
mov
inc
dec
and
or
push
jmp
cmp
hlt
push
lods
xor
sbb
xchg
and
and
rol
cmps
pusha
mov
dec
add
mov
fwait
aad
scas
mov
les
enter
popf
jbe
push
in
xor
mov
and
adc
(bad)
retf
test
xor
xor
cwde
add
dec
mov
dec
add
add
dec
sbb
cmp
les
mov
xchg
shl
sub
xor
push
test
jns
dec
mov
pop
xor
mov
jne
les
xor
push
test
push
imul
aam
rol
daa
mov
sub
push
jb
(bad)
ror
mov
enter
jmp
push
sub
sub
xor
pop
mov
lods
mov
push
cmps
jo
call
fild
addr16
(bad)
pop
test
cmp
ins
lea
std
int3
or
in
cmp
(bad)
mov
mov
cmp
daa
pusha
cld
xchg
cmp
es
pop
cld
test
hlt
and
push
jno
mov
(bad)
call
sbb
jmp
pop
and
jmp
clc
lock
cmp
push
cmp
sub
sub
nop
or
xor
fadd
inc
inc
push
xor
sub
inc
sub
mov
repz
jo
push
push
repz
cmp
inc
xor
push
inc
stos
rcl
add
push
in
jbe
or
and
mov
hlt
and
and
adc
sbb
inc
fisubr
jbe
push
into
test
fdivr
inc
jl
cmp
add
push
inc
and
fcomp
cmp
add
pop
xchg
mov
movs
test
loopne
and
sub
adc
inc
xor
push
rol
test
mov
test
jl
mov
xor
test
mov
test
mov
loopne
or
loope
pop
jp
xchg
loop
mov
add
out
dec
cmp
cmp
icebp
js
mov
nop
cmp
add
out
fs
xchg
and
movs
cmp
lock
push
add
ret
fadd
add
push
mov
dec
adc
cwde
test
xchg
outs
sar
adc
cmp
pop
add
mov
add
rcl
add
ror
sbb
mov
adc
aas
test
cs
in
clc
into
add
inc
adc
mov
sub
pop
dec
jb
adc
sub
sbb
sub
jno
and
lock
mov
xor
ret
inc
in
inc
call
out
adc
(bad)
inc
stos
pop
jecxz
xchg
inc
cmps
xor
add
push
dec
adc
adc
and
or
lods
mov
mov
mov
cmp
shl
aam
pop
loopne
call
lock
add
call
xchg
inc
xchg
dec
add
pop
cs
sbb
jecxz
(bad)
mov
rol
xchg
add
test
in
xor
mov
sbb
mov
pusha
push
ficomp
jp
into
ds
jg
dec
stos
mov
xor
mov
sub
sub
pop
mov
inc
call
cmp
sar
inc
cmps
push
call
test
mov
push
jo
and
bound
shl
dec
enter
sub
loopne
stos
inc
cmp
add
push
jo
(bad)
jo
xchg
div
xor
dec
fdivr
loopne
add
mov
or
add
adc
inc
add
mov
sbb
jle
std
dec
sti
dec
xchg
dec
adc
and
pop
in
fisttp
and
fdivr
sub
std
pop
pop
repz
test
jp
std
and
in
retf
xlat
fdivrp
fistp
dec
sub
retf
or
xor
push
xor
fcmovnu
pmaxub
iret
das
repnz
in
ret
add
mov
loopne
jo
mov
dec
jmp
sbb
mov
pop
xchg
popf
mov
(bad)
sar
nop
add
add
in
dec
das
jbe
add
add
inc
test
(bad)
or
push
fldcw
sbb
xor
cs
add
sahf
outs
or
dec
push
adc
inc
jbe
mov
pop
pop
adc
and
dec
icebp
test
js
icebp
sbb
in
jne
pop
jne
or
(bad)
xchg
and
imul
pop
cmp
and
mov
and
add
fimul
xchg
xor
bound
jo
jmp
sbb
mov
in
sub
jns
sbb
dec
dec
pop
popf
mov
cmp
push
int
add
(bad)
les
fmul
xchg
sbb
leave
pop
adc
pop
adc
mov
pop
pop
add
pop
inc
add
daa
jo
test
cmps
movs
or
add
jle
or
mov
inc
push
push
push
add
pop
or
sub
xchg
ret
inc
or
jg
mov
mov
push
push
push
outs
movs
loope
fdivr
push
inc
sbb
sti
rcr
and
rcr
adc
jns
mov
(bad)
jbe
jae
mov
cmp
fimul
or
shl
dec
adc
cmp
not
sub
lods
lods
cwde
adc
jecxz
stc
inc
mov
sbb
das
pop
pop
sbb
push
or
adc
shl
cs
(bad)
je
pop
or
pop
xor
test
sbb
imul
stos
int
add
inc
push
adc
loopne
pop
retf
xchg
adc
in
test
add
dec
add
pop
jp
call
pop
cmp
imul
push
mov
dec
or
popa
jo
adc
adc
loopne
mov
sbb
cmp
in
or
sub
sub
xchg
imul
push
dec
cmp
(bad)
jbe
or
jne
shl
pop
push
pop
mov
mov
push
lock
sbb
leave
movs
or
shl
hlt
ret
lea
mov
shl
add
sti
movs
or
jmp
xchg
fcomp
adc
pop
xchg
xlat
sbb
dec
cmp
jb
cvttps2pi
push
sbb
xchg
and
xlat
mov
test
pop
adc
dec
inc
mov
and
mov
push
lahf
scas
sub
push
or
adc
in
fcmovb
pusha
or
test
(bad)
cmpps
push
xchg
mov
sub
rol
adc
in
xor
add
es
sbb
push
sbb
mov
mov
sbb
pop
mov
pusha
push
imul
mov
xor
xchg
mov
xor
lds
addps
ret
xor
add
or
lea
call
dec
outs
push
movntps
mov
mov
add
and
jne
movs
mov
inc
imul
cmps
fdivr
add
(bad)
sahf
sahf
repnz
sbb
in
inc
mov
and
jo
mov
retf
aam
popf
add
icebp
sub
mov
push
sub
mov
mov
mov
and
mov
mov
pushf
ds
sub
or
out
or
xor
call
lock
inc
cmps
mov
outs
jo
pop
cmps
mov
jmp
inc
ins
push
adc
pmulhuw
jbe
cmp
mov
sbb
mov
mov
in
or
fst
jo
lock
sub
adc
add
push
jbe
fldcw
cld
and
sub
push
inc
push
push
mov
dec
xchg
xchg
out
inc
add
xor
jo
mov
es
rcr
outs
pop
add
push
mov
(bad)
mov
movs
and
mov
movs
ds
or
stos
movs
jnp
daa
ret
daa
mov
std
movs
shl
loopne
imul
fabs
xchg
pop
cmps
movs
add
gs
movs
xchg
imul
mov
das
cmps
movs
add
sbb
add
retf
push
imul
add
cmp
lods
xor
fbld
xor
cmps
sbb
shl
jns
enter
inc
pop
dec
jae
ins
idiv
mov
mov
cmp
mov
and
xchg
inc
and
add
in
adc
mov
and
(bad)
nop
das
push
test
lahf
push
mov
cmp
jg
jo
and
and
adc
lds
shl
push
mov
fsub
call
mov
scas
pop
push
mov
and
test
fst
fcom
lock
sub
mov
add
stc
in
pushf
mov
mov
jo
inc
in
and
mov
add
mov
add
xchg
mov
mov
xor
movs
xor
aad
push
push
push
pop
cdq
scas
lock
lahf
call
mov
je
push
inc
imul
push
inc
ds
loopne
ds
push
jne
mov
mov
push
or
mov
mov
add
adc
popa
mov
jmp
call
hlt
lahf
shl
sub
inc
or
pusha
mov
out
push
imul
mov
das
pusha
and
cli
dec
dec
sbb
aaa
mov
pop
movs
std
div
out
dec
pop
loop
jne
sbb
jl
dec
jnp
adc
pop
jne
inc
mov
jg
inc
jb
cmp
sbb
mov
mov
xor
sub
leave
fimul
ficom
pop
inc
push
inc
inc
jmp
and
add
je
add
imul
es
repnz
in
push
push
push
mov
fwait
scas
int
add
push
in
sahf
pop
add
in
popa
ficomp
iret
sahf
pop
outs
shl
and
or
lahf
xor
ret
and
push
int
mov
push
inc
js
add
xor
bound
addr16
xor
xchg
mov
call
sbb
sbb
cmp
addr16
fsubr
push
addr16
sbb
xor
mov
push
jne
iret
repz
sbb
xor
cmps
ds
popa
scas
outs
sahf
out
loope
cmp
mov
or
movs
inc
inc
cmp
sbb
pop
sti
cmp
xlat
mov
push
psrlw
pop
mov
fild
mov
fbld
jmp
or
push
call
leave
das
push
call
push
popf
xor
mov
popf
cmc
or
jns
push
call
dec
add
jle
push
xchg
(bad)
or
push
aas
dec
fst
add
sbb
fidivr
mov
and
js
mov
nop
adc
adc
loop
adc
push
call
add
enter
repnz
loope
sub
jno
shl
xchg
(bad)
mov
(bad)
or
add
cwde
xor
or
jle
add
call
jg
ret
sti
and
imul
cwde
or
pop
add
lea
out
jmp
cmps
test
and
cmp
fcom
fwait
shr
and
fnstsw
pushf
pushf
cmp
sub
pop
std
mov
add
cwde
or
adc
jecxz
sub
xchg
jmp
add
jmp
cmp
and
call
mov
ss
sub
xor
push
xor
nop
xor
nop
adc
add
push
mov
jae
mov
jle
in
in
out
imul
pop
inc
and
js
push
in
xor
cld
pop
fwait
or
repnz
lea
call
sbb
call
call
and
sub
inc
mov
add
add
xor
cmps
or
retf
push
sahf
out
repnz
je
pop
ins
push
push
pop
push
das
stos
retf
adc
std
out
jl
imul
pop
lock
je
inc
jmp
cmp
call
or
and
push
call
test
adc
xchg
add
iret
and
xlat
cdq
imul
push
jmp
repnz
into
push
jo
in
int3
sti
loope
mov
mov
push
mov
or
cwde
call
sbb
int
add
or
push
jne
adc
add
push
adc
rol
mov
outs
push
pop
push
adc
jl
and
ja
pop
ja
cmp
inc
push
push
je
or
pop
sbb
mov
out
xchg
sbb
ds
std
xchg
xchg
jne
push
call
sbb
xor
jmp
mov
je
adc
push
into
out
rcr
imul
jno
sti
cmp
sub
push
mov
or
cwde
aam
daa
je
mov
popa
sub
rcr
push
push
push
dec
sbb
add
inc
das
imul
add
(bad)
daa
or
fbld
push
or
adc
cmp
and
mov
pusha
icebp
pop
leave
idiv
push
mov
xchg
push
xor
push
sar
adc
dec
imul
or
adc
or
bnd
mov
shr
pop
fsubrp
fcom
push
in
fcomp
dec
outs
add
popf
xchg
inc
cmp
jne
push
rcl
xchg
ss
shl
inc
lods
cmp
mov
pop
adc
imul
dec
or
sbb
add
movs
sbb
shl
and
xchg
push
add
sub
mov
mov
mov
lds
repnz
imul
jmp
scas
je
cld
inc
call
call
sub
stos
xchg
or
push
sub
xor
and
push
or
mov
mov
nop
imul
adc
fild
in
mov
add
into
daa
push
jmp
int
int3
lahf
les
xchg
mov
dec
inc
test
push
mov
test
add
jp
loopne
cwde
jbe
pop
mov
or
sub
mov
xchg
out
adc
(bad)
adc
(bad)
movs
sbb
and
mov
rep
push
sahf
in
add
mov
lds
out
jg
in
test
movs
mov
jb
jg
mov
mov
test
jp
lahf
sub
enter
sti
hlt
xchg
je
enter
xchg
enter
popa
dec
and
mov
lahf
enter
push
add
and
jmp
jb
sub
cmps
xchg
imul
and
push
add
rol
jnp
adc
repnz
enter
cmp
inc
mov
je
mov
inc
push
sub
jnp
mov
push
or
outs
and
jl
add
push
xchg
add
dec
addr16
adc
test
adc
push
jns
repnz
repnz
push
out
add
aaa
sub
loope
add
mov
daa
xchg
dec
sahf
cmp
jnp
loopne
xchg
addr16
sbb
add
daa
add
test
(bad)
xchg
or
add
xchg
inc
push
jns
push
arpl
adc
cmp
retf
xlat
add
add
imul
int3
xchg
add
add
add
ss
fs
push
sub
mov
and
sub
sbb
in
popf
rol
aam
xchg
mov
nop
lds
and
adc
add
(bad)
je
add
push
cs
adc
shl
push
push
or
jmp
jmp
or
sub
mov
pop
out
enter
out
in
push
call
inc
sub
xor
mov
jl
dec
mov
sub
bound
sbb
or
imul
les
lahf
sbb
lahf
les
sub
pop
aam
add
xchg
jnp
pop
adc
xlat
mov
mov
mov
or
mov
int3
mov
fstp
test
test
add
add
scas
dec
xchg
add
cmp
rcr
mul
add
call
popf
add
out
jecxz
sub
and
and
mov
push
(bad)
cwde
or
xlat
push
ins
xlat
and
xchg
cmc
or
jbe
cmp
xchg
ins
jmp
icebp
sbb
outs
fwait
mov
fisubr
push
enter
dec
and
inc
imul
cmps
push
das
adc
mov
gs
stc
sbb
inc
or
push
aad
cmp
fcomp
jge
aad
adc
out
cmp
das
cmp
dec
in
cmp
inc
inc
xor
pusha
cwde
sar
pop
or
pop
nop
ror
add
arpl
daa
jg
sbb
push
imul
fdiv
cmp
cmp
sbb
push
push
and
xchg
inc
and
dec
sbb
lahf
and
cs
and
add
ror
mov
cwde
lea
lahf
jno
pop
call
cmp
int
push
push
push
sub
adc
add
pop
pop
add
dec
sbb
mov
sub
or
fmul
add
mov
dec
es
and
ja
sbb
add
sub
ins
lea
dec
pop
xor
jb
mov
test
push
push
or
sar
nop
add
jbe
push
fisttp
fadd
call
pop
sbb
fild
add
jl
(bad)
loope
sub
mov
pop
or
aad
es
enter
mov
add
xchg
test
pusha
sub
ror
nop
jne
imul
sbb
(bad)
mov
stos
mov
leave
xor
and
ins
add
adc
sbb
xchg
test
mov
sbb
dec
xchg
mov
sbb
cmp
jne
jg
fcmovu
call
mov
inc
mov
repz
push
outs
or
cmp
and
cmps
aam
inc
lea
lock
or
inc
dec
les
push
out
inc
sub
stos
adc
imul
or
push
pop
sbb
mov
ss
call
adc
mov
jo
sbb
ficomp
test
xchg
inc
cmp
fadd
test
xor
movs
sbb
xchg
and
push
dec
inc
sub
and
test
sahf
adc
adc
rol
inc
or
ds
ror
cmp
xor
dec
shl
cmp
(bad)
fsubr
jbe
cli
xor
mov
xchg
push
clc
and
in
icebp
push
add
popa
cmp
inc
mov
mov
loope
in
in
fsubp
(bad)
in
repnz
push
loope
inc
sbb
dec
push
xchg
cmp
add
rcl
dec
inc
je
adc
aaa
mov
enter
js
mov
cwde
aam
add
add
mov
cld
mov
shrd
fwait
or
adc
sbb
mov
sbb
mov
mov
dec
int3
mov
int
aaa
mov
sub
and
adc
dec
jge
xchg
into
retf
enter
adc
mov
rol
retf
jmp
jl
aad
mov
inc
cmp
xchg
xchg
ja
xchg
mov
shr
jle
ret
es
xchg
inc
jo
sub
loop
mov
scas
inc
mov
int
adc
mov
mov
xor
push
ret
(bad)
push
inc
ret
popf
and
je
push
mov
jae
push
push
mov
rol
mov
xchg
in
rcr
lock
sbb
cmps
mov
iret
jo
adc
sbb
cld
fdiv
push
inc
push
xchg
movs
retf
cmps
xchg
inc
mov
pop
ins
repnz
and
mov
sbb
xchg
xchg
ins
xlat
test
pop
sbb
dec
inc
aam
jmp
sbb
inc
jl
pinsrw
test
cdq
xchg
test
push
jp
jne
dec
pushf
jl
cmp
repz
fadd
loop
sub
mov
mov
mul
jb
mov
imul
mov
loopne
imul
(bad)
sbb
pmulhuw
push
xchg
shl
jmp
adc
fdivrp
push
and
iret
popa
mov
add
mov
aad
sbb
icebp
dec
lock
push
cmp
mov
inc
mov
movs
in
xor
jmp
jecxz
or
adc
adc
call
rsqrtps
sti
add
push
mov
push
jge
shl
pop
not
in
div
sbb
loop
mov
xor
mov
pop
adc
adc
xchg
xchg
xor
dec
sub
mov
pop
push
ret
xchg
add
inc
sub
adc
mov
mov
sbb
(bad)
add
push
xchg
adc
arpl
cs
xor
loopne
iret
adc
cmp
sahf
sub
cli
movs
mov
leave
mov
cmps
adc
gs
aas
mov
mov
add
pop
jge
(bad)
mov
sbb
push
jmp
in
repz
xchg
hlt
cmp
add
or
rol
rol
jge
dec
sub
cmp
mov
or
loop
test
cmp
je
inc
fs
std
sub
push
add
loop
outs
shr
fisttp
nop
push
mov
loopne
push
pop
dec
imul
and
test
ret
mov
mov
movs
mov
push
lahf
add
mov
pop
sbb
mov
sub
repnz
sbb
mov
pop
test
fimul
or
fistp
xchg
sub
push
push
sub
inc
dec
pop
sub
xor
aaa
push
sub
movs
sbb
out
sti
les
xchg
sub
je
mov
or
adc
ins
js
loope
mov
mov
and
cmp
lds
add
stos
adc
push
xor
(bad)
mov
dec
loop
(bad)
push
cld
dec
xchg
popa
xor
adc
cmp
and
retf
cdq
pop
adc
imul
sub
mov
jmp
jae
mov
inc
pop
adc
and
adc
dec
pop
pushf
cmp
jg
inc
dec
retf
push
dec
and
call
scas
sbb
adc
xor
cmp
pop
add
cmovne
sbb
das
xchg
fwait
xor
retf
dec
sti
ds
push
push
cwde
hlt
stos
jg
jg
add
sub
inc
push
add
xor
cwde
add
fcom
xchg
jo
add
jmp
call
and
mov
jo
dec
call
aaa
xchg
and
aad
mov
das
mov
mov
in
ret
push
mov
mov
pusha
outs
lds
les
retf
mov
jno
add
and
dec
add
test
mulps
sub
mov
add
cs
adc
push
pop
sbb
fsub
es
(bad)
mov
mov
test
(bad)
popf
push
push
cmp
push
or
cs
dec
js
xchg
xchg
(bad)
(bad)
sub
or
mov
out
jl
mov
cmp
pop
enter
outs
xor
dec
xlat
push
xchg
ds
stos
adc
add
push
or
in
enter
xchg
icebp
popa
push
es
mov
(bad)
sub
mov
inc
mov
nop
test
es
outs
adc
or
(bad)
push
loopne
or
out
in
inc
(bad)
add
pop
(bad)
dec
call
jge
xchg
mov
lds
sbb
imul
enter
push
mov
and
jl
lock
cmp
lock
in
jns
mov
fs
(bad)
pop
add
daa
ret
add
mov
mov
inc
add
pop
daa
sbb
rcr
jnp
sub
seto
jmp
pop
cmp
xchg
push
cmp
es
ret
shl
xor
sbb
dec
xchg
daa
shr
add
xchg
add
inc
push
and
ret
or
fist
adc
jnp
push
(bad)
sti
call
cmp
add
push
jl
jnp
jnp
and
push
mov
mov
call
pusha
cmp
xor
jl
sahf
add
movs
xchg
pop
shr
movs
in
sbb
mov
sahf
add
sbb
call
pop
add
or
pop
js
cs
fdiv
push
or
xor
inc
add
ins
cmp
(bad)
add
aam
add
adc
cmp
cmc
or
inc
xor
dec
hlt
stc
dec
xchg
int
lods
add
inc
js
dec
inc
push
call
push
mov
xchg
hlt
test
sub
push
sbb
stos
dec
or
jns
adc
cmp
je
xchg
adc
lods
pop
mov
sub
imul
scas
sub
scas
sub
pop
arpl
sbb
dec
test
and
fxch
shl
cmp
mov
sub
add
or
ret
inc
inc
jmp
add
js
jne
cmp
loope
cmp
push
cs
or
add
call
jl
dec
adc
lock
aas
lock
and
sti
jbe
mov
xor
add
jg
ret
xchg
xor
add
shl
mov
push
fisttp
mov
mov
shl
popf
fbstp
push
call
cmp
sub
mov
sub
aaa
mov
add
add
ss
in
jp
push
sbb
lahf
jo
xor
adc
cs
int3
jb
pushf
je
cmp
pop
popf
ret
pop
sub
sahf
test
fwait
add
inc
sbb
mov
cmc
aaa
ss
xor
pop
outs
icebp
add
mul
xor
xchg
dec
adc
pop
jbe
jle
xlat
push
mov
out
pop
ror
ins
push
out
fdivrp
dec
dec
push
cmp
sub
ja
lahf
add
out
and
fmulp
js
je
test
sbb
rol
movs
push
adc
sar
ins
imul
inc
and
add
(bad)
fisttp
das
mov
jns
mov
ds
fst
(bad)
outs
mov
or
xchg
fisttp
js
mov
mov
call
in
push
cmps
pop
mov
dec
jp
pop
lahf
sbb
dec
test
xchg
lock
or
xlat
jle
call
push
rol
xchg
add
cmp
mov
mov
sbb
adc
ss
sub
mov
ret
in
cmp
imul
or
mov
jl
pop
and
and
xor
xor
lahf
push
cmps
ss
jne
jle
icebp
ror
shr
add
sbb
je
jbe
jge
or
gs
movs
xor
push
and
jne
push
sub
xor
inc
sub
jle
or
out
pop
je
js
cmp
cmps
sbb
or
push
imul
loopne
sbb
out
xchg
inc
push
xchg
out
mul
cmp
pop
mov
xchg
cmp
in
jae
and
jmp
shl
dec
or
add
movs
dec
mov
cmp
jmp
inc
pushf
jae
rcl
fwait
mov
push
pop
mov
and
fcomp
movs
jge
ret
inc
adc
loopne
sti
dec
push
inc
ins
cmp
sub
jg
stos
and
pop
mov
shl
popf
add
gs
test
push
jmp
arpl
into
adc
rcl
es
adc
inc
push
sbb
sbb
in
mov
jns
inc
jecxz
pusha
ret
cmp
(bad)
rcl
push
iret
call
jg
inc
cs
pop
inc
pop
js
and
movs
jl
call
sbb
pop
sub
out
sub
loop
ins
fild
add
lock
pop
mov
dec
jmp
fiadd
sbb
add
inc
xchg
jns
add
or
dec
dec
or
popa
movzx
sub
sbb
push
test
fsubr
in
movs
and
gs
add
pop
mov
mov
loope
adc
push
xchg
dec
inc
in
call
pop
sub
cmp
push
enter
or
jno
or
add
ret
inc
retf
pop
nop
out
pop
shr
enter
inc
mov
cmp
inc
push
aas
mov
test
add
add
jecxz
jne
dec
mov
test
enter
and
popa
test
(bad)
pop
adc
int
xor
pop
repnz
and
jmp
arpl
xor
xchg
iret
dec
or
push
out
sahf
out
dec
and
daa
pusha
push
push
cdq
sbb
or
adc
jle
mov
adc
or
or
add
and
popf
shl
in
or
xchg
(bad)
jg
push
call
loopne
push
pop
jne
fcomp
out
mov
test
push
test
mov
aam
loop
jmp
xor
push
clc
or
loop
(bad)
pop
fwait
rol
lds
push
jnp
push
mov
dec
dec
fs
push
ret
daa
adc
mov
movs
add
cwde
mov
sub
jg
shl
je
nop
xchg
enter
adc
cmp
int
push
scas
cmp
inc
pusha
out
fwait
adc
mov
sub
out
dec
jo
fsubrp
pop
jo
in
push
clc
mov
or
add
cmp
add
jg
push
mov
cmp
pop
push
lahf
shl
mov
icebp
test
jp
mov
add
or
jae
sub
xlat
test
xor
fld
or
ja
sbb
push
arpl
pop
outs
ja
jmp
push
dec
mov
mov
mov
add
out
mov
mov
jmp
mov
xchg
cmp
cmp
add
sbb
push
mov
ins
sub
and
js
push
leave
lea
dec
bound
popf
cmp
js
adc
inc
daa
jmp
xchg
gs
iret
lea
shl
je
sbb
(bad)
fmulp
xor
iret
sbb
lea
sbb
jmp
add
nop
repz
xor
xchg
push
(bad)
(bad)
adc
nop
lahf
outs
mov
adc
or
or
div
rcr
bound
push
add
inc
adc
inc
inc
add
cmp
pop
add
in
dec
movs
or
(bad)
nop
xor
es
mov
ins
xor
mov
dec
sub
dec
fabs
in
adc
mov
jb
pop
addr16
fisub
xor
sbb
aam
add
or
imul
not
out
mov
inc
out
pop
call
push
je
ss
in
dec
add
push
aad
rcr
push
add
pop
movzx
mov
or
or
push
pop
call
or
outs
inc
jne
xchg
xor
fst
call
and
sbb
out
inc
and
lahf
and
inc
adc
jo
xchg
js
es
mov
jne
lds
push
pop
xor
dec
sbb
push
fs
pop
sbb
outs
outs
xor
mov
push
push
xor
gs
sub
rol
jp
pop
push
or
jmp
push
cmp
jne
dec
add
imul
mov
sub
dec
sbb
ins
stc
cmp
jle
push
imul
push
cmp
int
push
push
rcr
bound
popa
shl
cld
jae
test
inc
jno
call
imul
inc
cli
or
mov
pushf
pop
lods
and
mov
add
add
enter
imul
jne
shl
paddw
dec
dec
imul
add
inc
icebp
jmp
fisubr
dec
cmp
outs
lods
pop
push
xchg
push
ds
int3
imul
pop
daa
mov
fnstcw
mov
push
pop
sbb
adc
call
jg
pushw
mov
push
push
sub
daa
adc
sbb
stos
clc
push
fimul
sub
xchg
jbe
add
ds
in
(bad)
mov
xor
into
jmp
xor
push
lea
mov
push
(bad)
addr16
in
mov
dec
sbb
in
mov
xchg
dec
add
pop
jb
cmp
or
and
addr16
test
ins
xor
movs
ret
in
imul
pop
mov
out
and
addr16
lods
fsubr
data16
out
daa
addr16
shl
xchg
movs
sub
xchg
add
adc
in
xor
push
scas
popa
or
add
int3
hlt
adc
gs
sub
sub
sub
sub
xor
int3
les
imul
dec
jecxz
inc
mov
iret
sub
add
into
cli
ror
int
sar
gs
add
in
shl
cwde
rcl
(bad)
repnz
sub
or
shl
mov
pop
pop
aas
inc
aad
push
adc
push
clc
xchg
ds
adc
inc
test
pop
gs
ret
jmp
gs
lock
adc
cmc
inc
mov
inc
mov
je
and
mov
test
cmp
jge
mov
dec
or
dec
inc
inc
mov
and
push
add
test
lods
push
scas
xchg
xlat
inc
cmps
les
test
call
scas
inc
loope
rcr
sbb
test
xchg
inc
jg
fs
enter
cdq
fs
xor
dec
jg
push
and
cmp
inc
pop
push
xchg
jl
call
jns
and
shl
fs
sbb
push
mov
mov
cwde
call
cmp
xor
test
dec
inc
in
retf
sbb
and
and
add
inc
or
mov
aam
add
fcmovnbe
arpl
pop
add
add
dec
out
mov
sbb
arpl
adc
xor
gs
push
mov
jns
mov
push
(bad)
ror
sub
push
mov
imul
push
shl
mov
cmp
or
sbb
dec
test
in
gs
adc
jmp
xor
add
fs
mov
add
dec
dec
or
popa
test
je
out
or
sub
(bad)
sbb
enter
add
push
rol
faddp
add
mov
scas
hlt
ds
and
lea
(bad)
ins
mov
ret
adc
add
arpl
test
push
mov
or
and
jge
or
cmp
push
or
jg
sub
xor
and
sub
icebp
movs
mov
and
mov
push
pop
xchg
int3
pusha
add
jno
xchg
loopne
ret
int
mov
pop
fidivr
clc
cdq
sbb
push
in
neg
call
pop
mov
int3
icebp
imul
push
jmp
jbe
repnz
xor
jns
popf
js
mov
lea
pusha
or
clc
or
or
popa
fsub
push
aad
mov
jmp
xor
(bad)
pop
(bad)
enter
push
icebp
pop
sbb
nop
mov
xlat
adc
add
xlat
bound
mov
or
cld
repnz
inc
cs
push
xchg
push
ja
jno
add
jmp
xor
jecxz
sbb
or
fwait
popf
mov
add
dec
adc
sahf
mov
pop
pop
add
add
sahf
lock
push
push
mov
adc
je
imul
push
add
xchg
xchg
and
nop
pop
xchg
pop
pop
xor
rol
adc
test
and
inc
sti
repnz
push
clc
mov
nop
lds
fscale
and
into
pop
jmp
sbb
je
mov
movs
mov
and
mov
xchg
jae
dec
daa
jg
daa
scas
and
retf
ret
inc
es
xchg
call
pusha
push
and
icebp
adc
jmp
lds
out
pop
pop
lock
in
clc
pusha
cmp
mov
pop
add
ror
push
shr
adc
add
pop
aam
sub
and
fist
or
inc
repnz
pop
imul
dec
dec
add
pop
clc
pop
shr
test
mov
sbb
jmp
mov
int
mov
jle
repnz
and
xor
jnp
mov
movs
dec
js
jl
pop
aaa
adc
inc
push
fnstcw
sbb
push
sbb
mov
xor
scas
ds
push
lea
sti
push
inc
or
or
dec
(bad)
cmp
popa
xchg
sbb
push
mov
iret
and
jmp
inc
shr
sar
cdq
push
ins
(bad)
aam
call
jo
sar
xlat
or
daa
jle
pop
sahf
sub
xor
push
movs
adc
sub
popf
jecxz
lock
mov
push
aad
or
cmp
sahf
call
jge
lock
push
inc
call
or
bnd
jne
push
pusha
inc
cs
cdq
jne
push
dec
adc
dec
pop
das
and
test
or
or
dec
clc
cmp
xor
stos
dec
fist
jge
push
xor
data16
mov
pop
ret
popf
(bad)
int
sbb
sub
xor
pop
stos
push
or
jo
cmp
mov
movs
mov
pop
push
bound
lods
cmp
pop
adc
and
hlt
add
std
cmp
sbb
outs
rol
pop
dec
pop
sub
jmp
adc
mov
stos
dec
mov
pop
cmc
mov
cli
hlt
fucomi
xchg
or
movs
inc
ds
aas
or
clc
icebp
inc
call
adc
stos
pushf
or
das
dec
pop
push
call
cs
pop
cmp
push
es
adc
adc
mov
add
mov
push
cmps
in
and
sbb
in
or
stos
or
add
shl
or
iret
add
ds
xor
add
fld
rcr
or
ret
div
push
cmp
(bad)
adc
jo
retf
jg
mov
shr
call
or
daa
sbb
mov
lods
cmps
push
mov
pop
mov
inc
adc
retf
gs
mov
sbb
mov
and
retf
xor
cli
or
inc
inc
xlat
nop
in
sbb
adc
sahf
pop
rol
pop
and
test
sub
or
fs
psubd
call
movs
sbb
pop
inc
test
and
sbb
pop
push
adc
push
jg
cmp
jle
test
fadd
std
sub
fcom
jnp
stos
sbb
mov
sbb
loopne
rcr
add
lods
mov
loopne
retf
sub
sub
mov
or
aas
rcr
inc
sbb
pop
dec
push
int3
retf
sub
cmp
mov
pop
push
scas
dec
mov
(bad)
imul
pusha
std
add
inc
xchg
sub
adc
adc
test
sbb
iret
or
cmps
dec
mov
push
jae
mov
out
inc
push
mov
mov
(bad)
and
mov
or
pop
call
mov
mov
xchg
push
push
sbb
out
repz
jmp
sbb
es
jo
or
sub
not
setne
int3
cmps
test
sti
cmp
push
or
aaa
cmp
jbe
dec
jmp
jecxz
mov
cmp
iret
jmp
push
sahf
sub
lahf
out
mov
fisttp
imul
jnp
test
sbb
mov
push
push
cs
callw
sub
push
pusha
adc
xchg
xor
pop
ins
inc
(bad)
lods
cmp
inc
or
xchg
dec
gs
sub
popa
push
and
push
sti
add
jg
ins
inc
push
out
xchg
sub
cmps
and
add
dec
or
push
mov
psubsw
lds
jl
fldcw
dec
pushf
cli
push
and
cmps
cmp
ror
and
push
shl
mov
jle
shr
jno
mov
mov
add
jp
pop
mov
call
inc
pop
ret
jbe
outs
call
pop
ss
cmps
adc
pop
jae
jg
xchg
dec
push
dec
pop
mov
inc
mov
ss
movs
mov
scas
dec
fs
add
inc
add
ret
pop
pop
mov
cli
in
jle
test
into
push
movs
aam
adc
xchg
imul
shl
add
xchg
and
or
pushf
test
push
mov
add
dec
movs
or
fist
mov
xor
xchg
pushf
cmp
pop
push
cmp
dec
(bad)
sub
cld
in
inc
pop
push
push
push
ins
repnz
jns
add
adc
inc
mov
gs
call
mul
sbb
push
add
pop
pause
(bad)
push
push
or
imul
pop
xchg
jo
test
pop
lods
jecxz
cli
loop
mov
mov
add
fisttp
and
ret
pop
xor
loopne
les
ror
test
xlat
xor
das
mov
sub
pop
mov
or
ds
add
int3
pop
call
idiv
(bad)
leave
outs
mov
(bad)
fbld
cmps
adc
dec
add
sbb
lods
fisttp
xchg
fist
das
out
test
sti
lea
ret
jmp
cli
and
sahf
dec
or
push
mov
inc
outs
sar
add
aad
inc
or
and
and
add
inc
dec
das
dec
adc
(bad)
and
dec
pop
dec
fwait
scas
add
hlt
add
jb
adc
lahf
and
and
dec
pop
push
movs
push
daa
push
or
lahf
jbe
ret
xor
call
test
add
or
adc
xchg
movs
push
rol
cwde
pop
fisub
xchg
sbb
sub
rcl
cwde
es
mov
sub
scas
(bad)
es
in
scas
adc
adc
sti
int
dec
or
ja
mov
jle
enter
add
and
inc
shr
jp
mov
aad
push
fst
ja
out
push
jmp
mov
mov
test
and
adc
ret
push
test
popa
sbb
ja
push
mov
lea
inc
and
pop
js
(bad)
aaa
jg
xchg
dec
ds
pop
mov
inc
ret
cmp
call
inc
popa
(bad)
frstor
loopne
sub
xchg
loope
xchg
mov
pushf
jl
and
pop
mov
loop
xchg
inc
adc
cmp
je
push
push
inc
pop
add
loope
jnp
cwde
call
mov
ins
xor
cmp
xchg
sub
mov
das
jle
add
cmp
mov
mov
push
stos
sbb
xchg
push
mov
movs
leave
inc
or
mov
test
dec
lahf
mov
sub
arpl
xlat
rcr
add
and
push
cmp
and
jp
xor
mov
mov
or
pop
cmc
test
add
pusha
hlt
loop
inc
call
rcr
fild
leave
(bad)
jnp
xor
mov
mov
mov
int3
sbb
pusha
dec
dec
sub
xchg
jno
or
ja
lea
cmps
adc
or
and
out
or
pop
(bad)
adc
ret
mov
jg
std
or
or
xchg
inc
repnz
push
call
jb
cdq
mov
push
aam
lahf
add
imul
loope
and
loope
xlat
or
mov
popf
stc
enter
sbb
sub
add
dec
loopne
aaa
xchg
xchg
pop
loop
call
and
xchg
test
loopne
test
shl
arpl
lahf
pop
adc
js
cdq
pop
add
into
fistp
neg
add
jo
push
(bad)
lock
iret
jmp
mov
out
in
and
sbb
pop
sub
or
sbb
sub
or
inc
pusha
or
dec
mov
rcr
(bad)
xchg
call
jle
dec
adc
cdq
fdivr
push
mov
add
rcr
dec
or
aam
adc
test
sbb
pop
cwde
inc
sub
xor
test
and
push
shr
jmp
aad
sbb
add
push
into
popa
push
or
clc
pop
mov
jl
push
int
loope
add
(bad)
adc
in
xor
fcom
push
adc
ror
xchg
or
int3
sbb
push
inc
push
ret
stos
adc
sub
add
inc
enter
imul
sub
push
sbb
fwait
pusha
push
adc
inc
fcmovne
push
push
popa
stc
add
pop
nop
movs
push
cmp
mov
test
cwde
xor
imul
arpl
adc
add
xor
add
inc
or
and
xchg
mov
pop
sbb
lock
pop
mov
push
dec
lods
shr
cli
stos
les
in
je
mov
lock
adc
xchg
mov
leave
inc
mov
cmp
push
loope
add
push
mov
fsubr
pop
sub
lahf
clc
sub
xchg
adc
call
hlt
push
jne
lock
lahf
sub
dec
ud0
scas
pop
fsubr
inc
ja
push
(bad)
int3
js
or
pop
mov
xchg
sub
inc
and
xor
mov
dec
lods
adc
cmp
mov
or
movs
xor
in
adc
nop
(bad)
jne
mov
retf
mov
push
or
jmp
loopne
ss
test
pop
dec
popw
sub
or
mov
ror
cs
inc
fisttp
or
movaps
mov
cmp
or
sbb
inc
into
cmp
add
test
sbb
sbb
sbb
jns
pusha
xchg
push
pop
pop
and
cmp
ret
loopne
int
mov
pop
int
mov
pusha
dec
ins
xor
shl
push
inc
icebp
cli
or
adc
inc
mov
adc
je
fs
popa
call
sub
push
pusha
or
pop
sbb
adc
popf
shl
movs
add
clc
cli
cmp
stc
xor
pop
sub
aas
shl
push
stc
les
and
xchg
inc
call
jmp
fs
dec
sub
push
gs
or
push
call
mov
mov
mov
inc
icebp
sbb
pop
jns
pop
lds
mov
enter
adc
xor
pop
call
dec
jne
pop
add
mov
inc
call
scas
pusha
je
cmp
jne
dec
lea
mov
pop
cmp
and
mov
inc
jmp
jbe
retf
in
push
leave
xor
add
out
and
in
jns
inc
push
inc
inc
push
pop
aaa
push
and
fs
imul
pop
call
push
stos
mov
xchg
add
inc
inc
nop
adc
cld
add
inc
mov
inc
not
add
in
fsubrp
jmp
inc
mov
in
xchg
daa
adc
in
pop
loopne
sbb
jne
outs
es
or
jg
push
sbb
mov
xor
lea
push
dec
add
and
daa
pop
je
push
rcl
cmp
int3
cwde
mov
rol
pop
adc
mov
add
aaa
cld
mov
and
add
sbb
aas
aad
pop
and
and
adc
add
and
inc
jns
inc
adc
pop
into
jl
lahf
jae
and
rol
push
call
in
push
call
push
(bad)
cwde
in
(bad)
ds
and
mov
mov
mov
push
test
adc
adc
dec
rol
and
mov
sub
dec
lds
pop
adc
(bad)
xor
movs
jae
cmps
popa
mov
rcr
dec
hlt
dec
or
pop
jno
mov
inc
or
adc
in
stos
nop
xor
into
ret
sub
add
lahf
cmp
enter
das
xchg
fbstp
inc
arpl
jmp
fld
pop
adc
rcr
and
mov
movs
push
push
ret
inc
adc
inc
mov
dec
ret
inc
and
pusha
add
add
outs
cwde
push
jno
rcl
lods
and
loop
mov
in
push
mov
int3
cmp
imul
inc
movs
sti
ja
cmp
cmp
mov
or
outs
movs
test
or
adc
dec
clc
dec
add
dec
movs
add
or
dec
pop
and
push
jnp
lods
cmovae
out
leave
push
and
jno
shrd
cmp
xlat
cmp
vpavgw
addr16
dec
push
or
push
push
sbb
call
ret
cmp
sub
aam
jl
and
ins
cmp
push
adc
test
mov
int
inc
pop
mov
jmp
xor
sbb
add
stos
sar
test
mov
or
xchg
and
sbb
and
adc
lea
and
aam
rcr
and
mov
add
dec
fcomp
adc
lea
ss
daa
ins
sbb
scas
fimul
sub
pop
fs
sahf
retf
or
sbb
fdivr
sbb
inc
xor
fcmovnb
push
and
dec
push
mov
arpl
sbb
xchg
mov
xor
xchg
test
dec
mov
scas
pusha
push
add
ror
call
add
push
ins
mov
cmp
pop
aad
fldcw
jge
cmp
push
outs
adc
lds
out
retf
or
or
addr16
dec
mov
fwait
sbb
nop
cmp
add
mov
aaa
hlt
fldcw
daa
jg
inc
aad
and
inc
xor
adc
push
cmp
mov
and
das
mov
es
clc
push
js
mov
dec
ja
mov
test
cmp
and
cli
mov
aad
inc
adc
shl
push
cmp
ja
mov
jo
jecxz
sub
data16
inc
fld
enter
sti
inc
dec
adc
out
fldcw
cmp
or
pop
xor
fimul
stc
imul
les
rcl
cmp
xchg
add
push
push
pop
sbb
rcl
fdivr
mov
jo
sub
rcl
adc
add
cmp
push
mov
mov
push
xor
sub
(bad)
or
out
cwde
nop
nop
xchg
fst
jg
or
xor
sbb
xor
inc
rcl
push
add
les
mov
ret
bound
xchg
fadd
dec
loopne
or
push
add
sar
sub
aam
sub
sub
int
retf
mov
push
push
movs
xor
xor
or
call
rol
push
or
dec
loopne
add
enter
outs
aaa
adc
scas
xchg
clc
xor
sbb
and
push
add
call
shr
jle
aad
nop
(bad)
sub
fld
sbb
and
xchg
pop
cmp
add
cli
sbb
je
(bad)
mov
ins
sbb
dec
jp
and
iret
inc
inc
sbb
sbb
and
cmc
popa
popf
test
gs
sub
mov
pop
pop
xchg
stos
test
bound
pop
repz
sub
mov
out
push
pop
adc
inc
adc
xchg
enter
mov
js
cmc
push
loop
xlat
loop
cdq
loop
adc
mov
vmovlps
scas
jp
mov
cmp
xchg
in
xor
sti
mov
aas
add
xor
test
xlat
sbb
call
and
icebp
push
aam
repnz
rol
call
or
jo
enter
popa
mov
push
ins
mov
mov
mov
ins
adc
out
adc
mov
xor
inc
push
cmp
push
pop
or
(bad)
cmp
jbe
inc
mov
mov
xor
mov
mov
test
ins
xor
add
mov
repnz
sti
and
adc
fldenv
loop
mov
ret
adc
je
push
rol
les
inc
loopne
out
adc
popf
mov
shl
and
nop
xor
mov
fcmovnbe
cmp
aaa
sbb
inc
jmp
or
xor
pop
fwait
and
cmps
jmp
in
jge
rcr
jmp
jmp
aad
ds
mov
add
ret
xor
fcomp
js
les
mov
aas
xlat
les
sbb
cmp
add
fistp
push
ret
xor
pusha
cld
sub
and
mov
push
xor
leave
(bad)
fisttp
sub
dec
xor
frstor
xchg
mov
fcmovb
cmc
mov
rol
push
lock
sbb
xor
sbb
and
scas
mov
stos
aad
pop
dec
mov
aad
es
call
cmp
add
add
adc
xchg
sbb
movs
mov
adc
jge
adc
cli
inc
loope
bound
push
call
or
ds
inc
mov
cmps
cmp
in
adc
sub
push
push
xor
into
cmp
mov
xor
jmp
xor
inc
test
push
mov
call
xor
cmp
sub
or
jg
xor
cdq
sbb
sar
or
sbb
hlt
push
xlat
jnp
push
adc
add
imul
push
call
xor
call
jbe
mov
clc
lock
ss
call
in
cmp
add
in
stc
sbb
sub
push
in
sbb
add
shr
inc
cmp
lahf
out
mov
dec
inc
shl
add
movs
inc
call
loope
cmp
sti
cmp
mov
add
in
imul
mov
(bad)
scas
mov
or
daa
rcl
xchg
int
cmp
popf
pop
pop
and
dec
xchg
xor
add
xchg
ficomp
jge
dec
fbstp
sbb
xor
int
retf
jecxz
or
mov
sub
pop
jg
jb
and
xchg
jl
xor
sub
pusha
add
call
loope
xchg
and
sub
test
xchg
xchg
loopne
mov
ficom
pop
mov
adc
or
call
xchg
icebp
pushf
adc
(bad)
sbb
aam
fimul
xchg
sub
fsub
adc
push
inc
xchg
ss
cmp
sar
xor
and
and
sub
dec
sub
outs
cmp
pop
jb
adc
fdiv
xchg
out
sub
add
sbb
std
push
dec
pop
cmp
sbb
fdivr
xor
lock
fadd
pop
push
lea
mov
add
add
push
push
(bad)
xchg
ret
ret
inc
repnz
cmp
je
loopne
push
push
mov
sti
xor
inc
add
and
or
or
add
mov
push
pusha
(bad)
icebp
add
std
cmp
add
and
lods
pop
add
sub
add
adc
jecxz
pop
(bad)
and
rdtsc
and
and
das
jns
sub
sub
sbb
ficomp
sub
push
cs
call
lock
dec
test
or
arpl
mov
mov
push
xor
push
or
or
pop
stc
sbb
cmp
cmp
arpl
sub
add
test
(bad)
fcmovnb
sbb
adc
or
inc
jge
push
movs
cld
pop
sub
retf
xchg
add
lds
sub
mov
jmp
xor
dec
mov
sar
test
push
mov
mov
scas
and
cmp
adc
test
inc
arpl
(bad)
cmps
mov
outs
mov
sbb
cmps
sti
movs
je
test
mov
push
(bad)
push
jmp
icebp
mov
fndisi(8087
pop
mov
push
or
fwait
daa
push
add
movs
mov
jnp
and
(bad)
mov
add
ror
and
bound
pushf
mov
cmp
and
xchg
add
xchg
pop
adc
fcomp
adc
pop
adc
dec
pusha
ds
call
movs
rol
retf
push
sub
push
jmp
push
sbb
push
cld
mov
jg
prefetcht2
sub
xchg
fcom
mov
lea
fstp
test
mov
clc
and
call
rcl
sbb
pop
mov
retf
stos
push
divps
xlat
sahf
repnz
jg
mov
add
stos
je
mov
or
js
push
xor
push
inc
inc
sub
adc
adc
add
inc
lods
into
mov
and
push
mov
mov
std
mov
cmps
cmp
rcl
call
xchg
mov
push
cmp
retf
mov
inc
leave
js
retf
push
jmp
jecxz
push
out
addr16
pushf
call
test
retf
ror
test
leave
data16
mov
jmp
cmp
push
mov
call
clc
add
popa
cmp
call
(bad)
push
push
sar
leave
retf
dec
icebp
jo
adc
and
nop
jle
movhps
push
xor
out
sti
scas
xchg
pop
pop
test
xchg
xchg
aam
sbb
push
fadd
mov
add
aam
dec
xor
sbb
mov
(bad)
pushf
xchg
rcr
mov
mov
rcl
push
(bad)
movs
repz
pop
or
dec
mov
adc
mov
xor
push
or
or
fimul
ror
aas
add
test
pop
loope
add
test
sub
ins
mov
mov
cmp
sbb
adc
pop
cmp
ds
mov
jno
sbb
pop
push
push
mov
cwde
xchg
lods
dec
pop
les
loope
push
loopne
cld
sahf
push
jecxz
mov
in
test
jmp
xor
cmp
jne
mov
push
out
adc
dec
inc
cmp
and
lock
in
scas
mov
loope
adc
push
xchg
js
clc
sub
jp
xchg
xor
mov
(bad)
jae
or
cmp
ror
popa
xor
mov
ins
xchg
hlt
ret
fstp
mov
leave
ins
push
mov
pop
mov
xchg
xor
mov
fst
xor
pop
(bad)
out
pop
or
dec
pop
pop
or
push
add
push
iret
mov
sbb
adc
or
les
fist
(bad)
leave
ins
scas
mov
cmps
and
mov
inc
call
lea
or
sub
push
sbb
inc
sti
mov
mov
push
sbb
sub
je
popa
in
sub
xlat
push
dec
popf
jo
test
pop
push
push
inc
test
or
xchg
add
lahf
mul
dec
sbb
inc
ret
jbe
sub
or
(bad)
in
jo
int3
(bad)
dec
and
jo
leave
mov
sbb
jne
fst
push
add
loopne
mov
pop
jnp
adc
dec
sub
int
sbb
and
or
dec
loope
jmp
cmp
or
add
dec
repz
cs
test
inc
mov
xor
add
mov
xchg
out
xchg
xor
push
xchg
xchg
sbb
pop
(bad)
adc
or
cmp
and
aaa
sub
rcr
inc
xchg
fiadd
repnz
cmps
stc
or
or
es
call
add
sbb
mov
adc
ja
cdq
and
pusha
movs
push
mov
add
ja
ins
push
inc
outs
cli
js
ficomp
sbb
mov
or
and
or
add
fcom
adc
adc
push
out
xor
inc
repnz
xor
add
mov
cmp
sub
leave
cmp
pop
pop
je
push
fbstp
loope
loopne
ret
xchg
mov
add
adc
jo
loopne
add
rcr
sbb
add
jo
sbb
sbb
xchg
outs
push
nop
cld
js
mov
cmc
mov
xor
loope
daa
mov
ss
push
jns
xlat
mov
cmp
sub
mov
popa
mov
mov
dec
cmp
inc
retf
aad
push
push
or
(bad)
mov
shl
or
std
sti
call
add
pop
cmp
jne
and
ret
js
retf
imul
add
cmp
out
add
test
adc
push
push
out
and
out
inc
mov
stc
addr16
cmp
cmps
sbb
adc
(bad)
aam
jo
xchg
inc
push
mov
sbb
pop
mov
popa
loopne
xchg
xchg
pusha
or
enter
dec
dec
fcomp
jmp
daa
std
out
jmp
push
cmp
dec
or
test
int
ins
lea
pop
mov
mov
rcl
lds
or
cli
cmp
ja
adc
dec
sbb
add
mov
nop
gs
sbb
nop
cdq
adc
sbb
inc
pop
lods
mov
inc
mov
mov
adc
cmps
inc
push
sbb
push
(bad)
rcl
jg
loopne
pop
inc
daa
jl
xchg
dec
mov
lea
not
xchg
call
and
addr16
push
rcr
in
jno
dec
push
jle
mov
fstp
stos
mov
sar
push
inc
and
stos
dec
loopne
xor
repnz
jle
mov
push
popf
pop
or
in
mov
add
movs
jle
pop
in
sub
and
fcom
loopne
fcom
push
js
cmps
jbe
call
clc
mov
jle
(bad)
xchg
icebp
sbb
jmp
add
push
sub
call
ja
dec
jl
adc
mov
int3
mov
pop
repnz
call
pushf
jmp
or
sahf
ret
dec
or
ror
xlat
fst
out
and
adc
call
pop
test
push
xchg
outs
sbb
push
mov
push
push
not
dec
cmc
jae
call
jmp
clc
add
in
mov
pop
mov
push
push
mov
(bad)
ficom
test
aad
push
(bad)
jb
jmp
sbb
jb
retf
push
dec
fmul
xchg
js
call
cmp
sub
stc
lods
push
and
adc
or
ret
inc
mov
loope
push
sub
and
movs
fwait
outs
fcomp
push
imul
adc
inc
jb
push
inc
fst
pop
sbb
loop
shl
xor
dec
call
(bad)
push
cmp
adc
ret
push
adc
sbb
mov
inc
loop
cwde
das
call
pop
test
add
das
mov
fnstenv
test
ja
cmp
ins
adc
sbb
sub
inc
call
sti
loop
and
nop
add
jnp
test
inc
arpl
xor
jecxz
data16
test
and
dec
push
add
push
push
sbb
addr16
lods
cmp
rcr
xor
pusha
or
cmps
pop
push
call
(bad)
int3
pop
stos
jo
call
sub
xchg
jp
dec
rol
inc
adc
and
rcl
cmp
push
xor
and
push
push
push
mov
cmps
into
sbb
mov
shr
mov
jmp
xchg
xchg
pop
push
repz
shr
enter
adc
and
add
xchg
arpl
(bad)
mul
enter
lahf
mov
or
and
push
int
imul
dec
mov
ret
dec
cmp
or
xchg
popa
adc
inc
imul
sub
mov
xor
xchg
xchg
add
cwde
fbstp
xor
test
out
jle
jo
dec
dec
xor
push
shl
stos
ret
mov
test
adc
je
(bad)
fstp
push
xor
ins
push
lock
enter
jnp
popf
push
push
add
cmp
lds
gs
je
out
sti
mov
test
or
ds
mov
mov
test
(bad)
fs
sbb
(bad)
sbb
dec
jo
in
std
mov
movs
popf
xchg
rol
mov
or
adc
fist
sub
enter
retf
clc
xchg
push
adc
fs
shl
call
fs
dec
pop
(bad)
mov
imul
jp
cmp
sbb
in
mov
mov
call
cmp
xor
push
fcmovbe
jmp
arpl
out
xor
push
popf
fwait
push
mov
jg
sub
je
pop
es
xor
push
sbb
aad
mov
or
xor
ror
sbb
mov
push
inc
outs
inc
sbb
lock
(bad)
ins
push
adc
sbb
add
fstp
push
dec
inc
and
mov
push
lea
rcl
and
in
cmp
mov
je
leave
cmp
sbb
test
xchg
push
movs
add
mov
pusha
jb
(bad)
rol
out
mov
xor
jl
or
mov
mov
jne
sbb
jns
push
dec
loopne
pop
daa
cmp
xor
(bad)
cmps
push
fsub
cs
inc
mov
out
loopne
lock
push
xchg
arpl
pop
xchg
xor
add
push
push
sub
imul
jmp
mov
fcom
pop
mov
iret
sbb
mov
and
jne
dec
pop
add
pop
lea
sub
sub
mov
call
and
mov
xchg
cmps
test
and
addps
pop
inc
or
loopne
mov
imul
cmp
sahf
out
adc
adc
xchg
ss
or
retf
hlt
and
clc
push
mov
imul
ja
sbb
adc
daa
push
and
sbb
or
xlat
push
test
fbstp
cdq
jns
jp
dec
push
adc
add
or
fwait
mov
enter
cmp
sub
sub
cmps
jbe
sub
mov
pusha
loop
add
call
or
mov
ss
dec
or
or
jnp
add
rcr
ja
xchg
mov
ja
dec
add
hlt
jecxz
sub
call
adc
push
movs
jb
or
and
idiv
add
mov
mov
add
push
lea
mov
lods
pop
add
nop
in
(bad)
push
inc
xor
adc
rcl
jnp
and
inc
shr
xor
mov
add
xor
fistp
pop
cmovp
jl
cs
les
dec
add
or
inc
bound
cmp
loope
and
scas
ret
adc
into
loopne
fwait
jo
sub
icebp
push
dec
cmp
xchg
mov
jl
scas
fstp
fist
ja
mov
leave
inc
push
retf
jg
call
rol
je
sbb
adc
mov
fst
cmc
(bad)
mov
adc
sti
sbb
mov
sbb
adc
scas
mov
xchg
sbb
adc
test
cmp
ins
popf
xor
push
movaps
xchg
lock
sbb
xchg
cmp
in
lea
test
add
dec
(bad)
loopne
or
xchg
mov
xor
xchg
push
or
repnz
adc
mov
dec
jle
pushf
push
pop
mov
aad
test
inc
push
pushf
cmp
ss
out
in
cmp
jp
test
sub
sbb
push
jle
and
xchg
nop
dec
sahf
adc
mov
mov
in
xor
call
xchg
lahf
and
jecxz
imul
dec
or
mov
(bad)
imul
push
mov
and
pop
hlt
or
jmp
imul
lahf
out
or
clc
aas
popf
pushf
or
cmp
or
xor
mov
or
lahf
dec
and
imul
std
cdq
cmp
or
mov
sub
dec
mov
fstp
aam
lahf
adc
lods
test
lods
out
jne
lods
mov
inc
scas
add
repz
cs
test
cmp
adc
mov
push
test
push
call
xor
cmc
push
sar
mov
inc
das
sar
pop
call
stos
push
cmc
(bad)
loop
push
dec
pop
data16
test
lea
sbb
jnp
add
sbb
ins
sbb
ret
retf
jmp
pop
std
je
call
add
cs
jecxz
sub
call
rol
push
retf
mov
call
jp
iret
push
call
ds
nop
mov
inc
std
push
adc
jnp
cmp
push
adc
or
lea
xchg
jo
in
mov
xor
jl
call
xchg
and
fistp
(bad)
xor
dec
cs
fmul
or
jno
dec
add
stos
call
fsub
movs
sub
fstp
dec
repnz
push
call
dec
xor
xchg
sbb
cmp
test
add
mov
xchg
out
xchg
xchg
mov
jnp
cmps
int
mov
mov
test
and
aam
dec
shl
pushf
inc
push
push
div
imul
pop
jecxz
mov
mov
scas
add
sub
mov
dec
dec
or
nop
mov
xor
mov
and
retf
and
es
adc
outs
jecxz
xchg
push
adc
(bad)
cmp
pop
cmps
xor
push
inc
sub
stc
iret
inc
ins
and
call
cmp
mov
scas
aaa
and
or
stos
dec
pop
test
or
fnsave
jl
dec
or
add
pop
xlat
mov
and
adc
xor
aam
pop
outs
pop
and
shl
dec
(bad)
fs
jne
push
or
adc
push
push
sub
pop
pop
dec
sbb
push
pop
das
adc
pushf
inc
rsqrtps
adc
div
popf
mov
daa
xor
jg
inc
ret
cmp
fbld
push
jb
add
ret
pusha
inc
loop
jmp
adc
rcl
jge
mov
adc
push
push
cwde
xor
push
push
pop
clc
fsubr
or
les
aam
scas
mov
add
sbb
retf
or
pop
aas
movs
sar
jb
cmp
dec
and
push
add
inc
add
xlat
dec
or
movs
dec
adc
cmp
sub
and
mov
fild
sbb
add
shl
lods
sbb
pop
clc
call
inc
dec
aaa
shl
or
xor
imul
clc
mov
lds
ret
and
fild
call
pop
lods
inc
cmp
outs
push
add
scas
add
call
(bad)
cwde
xor
ror
test
xor
std
jns
or
xor
fcom
xor
mov
mov
mov
push
neg
mov
adc
and
fidiv
pop
imul
add
lea
shl
mov
mov
inc
xchg
mov
cmp
daa
pop
jae
add
and
(bad)
aas
or
fistp
xchg
inc
pop
jle
and
clc
sbb
add
fst
add
push
or
leave
icebp
cmp
(bad)
xchg
pop
mov
mov
(bad)
pop
add
loopne
sar
ds
push
aam
sbb
push
cmp
and
jo
pop
inc
scas
test
sub
rcl
or
pusha
loop
dec
rcl
rcl
aaa
pop
dec
ffreep
push
cmp
ret
add
mov
or
xor
or
jnp
push
fnstenv
or
sub
(bad)
push
mov
pusha
jns
mov
mov
retf
xor
or
and
and
repz
push
mov
lock
sbb
cs
cmc
adc
add
xchg
xor
dec
test
inc
das
icebp
cmp
es
cmp
cmovp
iret
sub
mov
scas
push
out
and
dec
add
push
jno
test
or
cmp
push
ror
jecxz
xor
ja
mov
in
aaa
in
movs
sti
jmp
jmp
sub
fdivr
jmp
test
jg
or
aam
mov
or
xor
lods
add
stc
lahf
push
inc
inc
lea
clc
imul
in
push
pusha
mov
ss
inc
xchg
xor
inc
mov
call
or
jno
xor
aas
mov
test
imul
push
cmp
sbb
or
jne
or
mov
push
enter
dec
lock
ror
cmps
adc
pop
and
push
jb
pop
mov
mov
push
mov
cmps
fisttp
push
mov
adc
bnd
enter
add
inc
dec
fnstcw
dec
aaa
inc
(bad)
js
mov
cmp
push
inc
add
dec
lods
mov
cmps
cmp
cwde
or
cmps
mov
and
jb
out
jl
or
pushf
mov
jb
pop
mov
jl
pop
cs
retf
je
ins
push
mov
enter
retf
(bad)
sar
loopne
call
xchg
lock
clc
cld
add
retf
in
test
mov
sbb
and
retf
in
sub
xor
jb
pop
cs
inc
dec
cs
retf
in
push
push
pop
pop
in
mov
mov
sbb
mov
adc
or
ins
sub
push
inc
(bad)
jne
pop
pop
add
mov
inc
cmps
dec
fsubr
ret
mov
and
imul
jmp
ja
inc
or
or
in
sahf
fwait
add
pushf
and
xlat
jg
adc
loopne
in
mov
je
jmp
in
ins
or
pop
ins
rcr
inc
add
test
leave
ret
test
or
or
(bad)
sbb
(bad)
ror
movs
inc
ja
jae
pop
cmp
out
push
cmp
and
or
daa
or
or
xchg
sar
pusha
lock
mov
or
add
xor
sub
jb
or
or
repnz
mov
inc
popa
add
adc
inc
add
call
and
(bad)
inc
add
nop
dec
addr16
leave
inc
add
xor
pushf
jmp
add
clc
inc
add
mov
sub
and
ds
add
loopne
cmps
xchg
fwait
add
inc
add
loopne
mov
enter
loopne
in
inc
add
out
and
pop
jecxz
jecxz
in
clc
jmp
inc
xor
xchg
pop
add
adc
inc
add
out
into
int
add
inc
add
je
ret
(bad)
fucomp
ja
dec
pusha
add
pop
stc
in
inc
add
jae
add
sbb
add
inc
add
(bad)
jl
clc
inc
add
inc
add
add
pop
leave
jg
add
push
sbb
add
jl
inc
enter
inc
add
add
repnz
in
repnz
and
push
in
cld
inc
add
and
push
cld
inc
add
add
cmp
add
xor
fsub
repnz
add
loop
hlt
sbb
cld
inc
xchg
in
idiv
dec
xor
in
or
fsub
call
gs
mov
(bad)
fld
add
fld
sub
das
push
adc
in
add
and
hlt
inc
add
add
add
mov
jge
xor
sar
out
int3
or
pop
sbb
mov
sbb
or
sar
add
lods
xchg
sub
cwde
sbb
aas
add
aas
add
pop
push
in
aas
add
aas
add
aas
add
es
mov
fadd
ror
bound
jne
fwait
rol
adc
or
push
sbb
shr
sbb
adc
mov
ret
adc
xor
add
add
and
fadd
cmps
nop
scas
or
loopne
adc
jl
xchg
nop
or
sbb
nop
(bad)
lock
js
pusha
add
je
inc
repnz
adc
xor
hlt
xor
mov
loopne
js
lock
loopne
fbstp
dec
enter
loopne
lock
inc
pop
mov
hlt
xor
clc
loop
add
repz
loop
shl
int
add
loopne
mov
or
push
frstor
xor
icebp
clc
out
jns
push
es
lock
dec
push
out
jg
jmp
xchg
dec
leave
iret
out
in
jmp
nop
inc
fnsave
scas
js
dec
lock
test
xchg
mov
add
ds
jge
xchg
push
dec
mov
jmp
ror
daa
mov
adc
movs
push
mov
scas
mov
pop
out
in
pushf
ds
jns
out
add
jmp
les
rcr
(bad)
sub
jne
dec
lods
test
xor
nop
in
js
cmp
jg
pop
dec
inc
dec
add
inc
inc
fadd
repnz
sahf
outs
movs
add
and
in
inc
in
sahf
add
(bad)
and
not
jmp
out
shl
pop
enter
xor
in
aas
mov
jle
and
movs
mov
retf
fmul
cwde
sahf
pop
loopne
pop
push
nop
(bad)
js
jmp
jns
sbb
mov
push
ficomp
(bad)
mov
dec
in
jmp
mov
and
test
ja
mov
aam
jge
shr
test
test
xchg
xchg
mov
mov
fcmovbe
add
cmp
sbb
push
push
aas
repz
aaa
xchg
push
(bad)
push
jmp
adc
mov
jns
jnp
adc
loop
aam
ret
jns
out
xchg
jl
dec
jns
jnp
xor
push
data16
adc
into
out
sahf
out
lods
pushf
mov
out
sahf
bound
xor
adc
sar
out
mov
repz
mov
iret
repz
push
inc
sub
or
out
jl
push
in
or
out
sahf
push
es
outs
test
out
cwde
cmps
mov
mov
push
adc
adc
adc
sahf
out
mov
jmp
repz
movs
xchg
dec
out
sahf
out
adc
push
push
repnz
repz
mov
nop
repz
repz
cmp
add
adc
fmul
pop
or
repz
repz
cmp
sbb
iret
repz
push
mov
into
loopne
push
or
jns
out
and
ds
fs
sahf
out
xchg
sahf
mov
or
cmp
xor
(bad)
stc
cmp
repz
xchg
mov
sahf
cmps
rol
mov
push
mov
repz
ror
out
(bad)
push
push
push
and
inc
ja
repz
pop
push
in
dec
adc
jns
ins
js
xchg
scas
retf
out
loop
adc
sub
repz
repz
push
ins
jbe
sahf
out
iret
mov
xor
sbb
in
sahf
push
jns
adc
hlt
inc
push
add
ret
test
add
fs
call
mov
add
push
outs
dec
or
mov
imul
or
fisub
dec
add
adc
shr
mov
add
pop
std
add
or
pop
mov
add
lock
lds
imul
xchg
inc
enter
inc
mov
and
add
and
dec
mov
or
inc
jmp
xchg
mov
and
mov
shr
push
inc
lods
rcl
adc
cmp
cmp
add
fwait
gs
xchg
in
test
in
inc
retf
pop
fwait
shl
and
xor
sbb
ss
test
sbb
push
add
daa
pop
mov
sbb
out
inc
push
nop
lahf
rcl
pop
ja
fmul
sbb
push
push
and
xchg
jbe
lea
and
daa
fist
or
sub
outs
outs
pop
mov
pusha
sbb
pop
inc
push
sub
pop
inc
mul
outs
or
mov
jnp
fbld
pop
xchg
fld
push
dec
add
rcr
and
daa
pop
mov
and
sti
adc
sub
and
mov
out
or
fdivr
sbb
mov
push
enter
pop
cmp
mov
xchg
pop
daa
push
mov
sbb
xlat
fdivr
dec
or
dec
or
mov
mov
lea
push
mov
(bad)
test
ins
or
inc
dec
dec
ss
add
cmp
xor
xor
das
jo
push
loopne
stc
add
sub
push
not
ja
xor
pop
sub
ror
sar
push
das
add
push
cmp
arpl
cmovae
sbb
jo
dec
jbe
popa
imul
out
imul
push
xor
xchg
cmps
jnp
jl
ins
das
push
pop
push
jl
idiv
push
push
push
cmp
cmps
(bad)
imul
mov
sbb
jns
repz
sbb
add
mov
out
adc
lock
nop
imul
lock
jo
mov
mov
lods
mov
xor
add
outs
lods
shr
int
lods
pop
scas
dec
dec
mov
inc
sub
cmp
pop
xor
iret
cmp
inc
and
cs
cmp
rcr
in
fs
sti
xor
out
sahf
call
bound
imul
push
loopne
mov
in
pop
movs
stc
xor
add
dec
push
js
fbstp
mov
aas
push
test
and
cmp
shr
int
sub
sub
ds
iret
out
add
cs
in
push
in
call
daa
les
out
out
jo
mov
lods
sar
aaa
outs
jl
pop
ins
jl
out
sub
pusha
jle
aas
pop
push
sub
lods
ror
push
cmp
aaa
mov
call
in
sbb
pop
and
add
add
xor
fidiv
in
fprem
jecxz
das
lock
jo
cs
ds
aam
sub
mov
int3
ds
out
(bad)
stc
fisubr
mov
add
nop
xor
in
xchg
outs
lods
out
xor
xor
xor
cs
push
lods
and
mov
adc
mov
fisttp
mov
and
inc
inc
push
iret
or
in
and
mov
or
xchg
jbe
adc
nop
pop
lods
cdq
xchg
push
or
dec
and
cmp
push
pusha
or
pushf
fstp
mov
sahf
pop
add
es
mov
dec
xor
pop
push
aaa
xor
xchg
cs
add
dec
pop
add
xor
dec
xor
dec
aam
fcomp
(bad)
xor
xor
sub
push
add
mov
or
out
add
jne
sub
ficom
jge
test
inc
pop
dec
das
inc
sbb
dec
mov
sbb
push
dec
or
push
sbb
and
cmc
or
inc
gs
dec
dec
add
xchg
jle
dec
push
outs
push
jg
inc
cmp
gs
iret
pop
pushf
adc
movs
inc
test
mov
nop
leave
adc
jne
mov
lock
lds
lahf
les
ins
xlat
and
enter
scas
mov
fisttp
sub
pop
add
js
(bad)
sub
push
outs
xchg
mov
and
je
data16
ss
inc
fmul
sbb
fst
nop
cvtpi2ps
inc
cmpxchg
mov
xchg
adc
sub
test
mov
add
sbb
mov
dec
sub
in
in
fld
call
add
and
jns
sub
sub
dec
mov
cmp
inc
mov
cmp
pop
in
out
pop
stos
sub
jae
add
jl
sub
or
movs
xlat
les
inc
push
mov
sbb
mov
push
int
mov
ins
icebp
cs
inc
fisubr
add
jbe
loop
dec
cmp
jne
jl
aaa
sub
cs
xor
jo
and
push
in
dec
or
stos
push
add
push
adc
(bad)
jno
inc
adc
sub
xor
pushf
and
or
addr16
rol
data16
and
aam
cmps
mov
aaa
adc
jae
sub
icebp
rol
fnstsw
push
xor
sbb
mov
or
shl
sub
and
xchg
push
add
jne
out
sub
cdq
add
or
lea
pop
mov
ja
dec
retf
jmp
push
pop
sbb
imul
rol
pop
shl
aas
stos
gs
push
lahf
or
sahf
sbb
sub
jle
int3
and
jmp
and
add
dec
ja
add
mov
xlat
(bad)
pop
(bad)
aad
add
fiadd
push
sbb
adc
les
shl
mov
enter
cmp
repz
retf
mov
pop
jne
das
ret
shl
cmp
or
rcr
sar
inc
pop
popf
test
or
out
add
cmp
ins
outs
add
xor
push
cdq
dec
ja
dec
pusha
pop
adc
call
xchg
inc
or
adc
or
icebp
push
sub
and
pop
sbb
ja
adc
mov
add
xor
jbe
inc
cmps
sub
(bad)
mov
mov
and
xchg
fldcw
cmp
mov
sub
rcr
xor
js
addr16
imul
xor
mov
mov
mov
dec
push
pop
ja
mov
es
jns
or
lds
add
mov
outs
xchg
xor
jecxz
sbb
sbb
dec
pop
or
dec
push
push
jne
setbe
popa
adc
cmp
scas
lds
std
(bad)
popa
sbb
cdq
rcr
test
aas
or
(bad)
push
imul
pop
and
cmp
mov
jo
arpl
adc
xor
jae
retf
adc
push
push
sub
add
add
inc
inc
and
stos
pop
add
dec
push
jmp
mov
imul
push
icebp
mov
sub
or
push
aas
add
xor
dec
sub
xchg
movs
push
xchg
test
arpl
dec
or
mov
pop
fisttp
mov
push
shl
int
imul
pop
mov
add
push
jnp
adc
bound
ins
std
push
test
xchg
mov
rcl
js
cmp
inc
pop
mov
test
jg
ds
inc
in
or
sbb
sbb
add
(bad)
fs
add
sub
movs
popa
(bad)
pop
inc
cmc
das
lahf
push
ins
xchg
ins
add
dec
pop
fnstsw
xor
sub
and
aas
inc
dec
aas
fisub
movs
xor
das
iret
loopne
pop
add
jb
adc
push
ret
sub
add
push
scas
addr16
xchg
xor
out
dec
push
sub
lds
push
lods
stc
mov
inc
or
inc
jnp
pop
sbb
sbb
pusha
jmp
adc
add
lea
or
push
add
push
xchg
jae
add
xchg
dec
xor
pop
mov
push
shl
pop
push
arpl
push
movs
add
in
sub
sbb
cmp
shl
push
lock
xchg
inc
or
retf
pop
add
movs
push
xor
jp
mov
cmp
test
jecxz
test
dec
dec
push
aaa
jnp
nop
add
test
addr16
pop
pop
sub
addr16
add
test
out
cmc
xchg
add
and
xchg
mov
sbb
loop
addr16
push
or
mov
inc
pop
sbb
and
xchg
mov
push
(bad)
push
jae
pop
adc
loop
or
mov
bound
addr16
dec
adc
inc
rol
jb
jle
inc
(bad)
call
addr16
jmp
xchg
and
cmp
pop
xchg
nop
pop
in
mov
add
mov
fstp
daa
push
pop
push
js
inc
xlat
lods
sub
dec
outs
int3
lods
pop
mov
ja
lahf
ss
int
pop
ins
mov
cmp
jns
out
pusha
js
rcr
out
out
and
sahf
push
pop
sbb
lock
sub
cmp
repz
rol
dec
shl
in
pop
xlat
(bad)
sub
es
add
loopne
adc
popw
add
add
and
jo
mov
(bad)
popf
mov
addr16
ror
mov
daa
in
rcr
xchg
shl
add
xchg
pop
xor
dec
adc
fisub
aas
sbb
js
xor
xchg
dec
dec
cmp
push
add
jo
dec
pop
jmp
js
or
nop
es
or
into
mov
mov
add
in
loopne
call
jb
add
or
fcom
leave
out
and
adc
inc
and
cmp
dec
mov
mov
xor
jb
mov
fdivr
enter
leave
rcr
loopne
add
cmp
inc
pop
jb
shl
sub
jb
inc
dec
rol
rol
push
enter
int
xor
dec
xlat
add
jo
dec
scas
jbe
test
dec
pop
int3
aaa
nop
(bad)
or
add
out
or
outs
dec
(bad)
pop
mov
in
jns
iret
jecxz
(bad)
sahf
xchg
addr16
inc
push
js
fdivr
jns
mov
push
in
adc
enter
xchg
dec
fdivr
retf
out
aam
sbb
popa
nop
add
es
dec
jb
push
add
loopne
cmp
fs
dec
sub
jns
loop
mov
dec
dec
fdiv
jns
shr
push
iret
imul
push
inc
adc
adc
sbb
fistp
fdiv
imul
lahf
mov
shr
mov
add
pop
or
pop
add
xchg
pusha
jno
sbb
mov
or
imul
pop
add
imul
or
lahf
sbb
dec
ins
sub
mov
sbb
ins
lea
(bad)
xor
mov
dec
push
sub
pop
repz
ins
lods
xlat
(bad)
test
daa
ins
jmp
stos
daa
push
and
adc
repz
push
pop
test
inc
pop
xor
cmp
jp
mov
dec
dec
xor
mov
add
sub
jbe
fucomi
cmp
int3
jne
and
mov
jecxz
pop
mov
add
pop
fnsave
and
scas
add
push
call
xchg
repnz
sbb
imul
mov
push
mov
inc
or
mov
dec
add
es
js
cwde
inc
es
push
and
adc
popa
dec
loopne
lods
les
add
rol
and
cs
push
mov
pop
daa
rol
adc
mov
mov
cmp
jae
pop
mov
imul
les
sub
or
lock
rcr
adc
xchg
push
mov
adc
data16
sub
dec
scas
popa
xchg
cwde
mov
rol
mov
cvtdq2ps
adc
es
cdq
add
mov
inc
aaa
fadd
mov
add
mov
add
pop
sub
jnp
lds
daa
inc
inc
rol
sbb
dec
push
test
xor
inc
push
add
push
xor
xor
add
or
push
outs
lahf
test
inc
add
xchg
or
das
jg
shr
test
inc
push
and
mov
fwait
and
dec
jmp
inc
jb
dec
outs
add
lds
int3
add
(bad)
inc
push
rol
mov
pop
or
rcl
call
pop
mov
ins
or
repz
dec
pop
jg
fcom
jmp
ja
ret
cmp
xchg
cmp
mov
add
add
out
add
fisttp
mov
or
idiv
test
dec
fdiv
push
jae
jns
fistp
hlt
jg
push
ins
imul
mov
mov
add
add
add
add
sub
cs
cmp
xchg
lods
das
rcl
sub
push
pop
mov
push
pop
add
push
call
hlt
lea
sub
add
ins
iret
or
and
add
add
push
add
add
xchg
adc
arpl
add
add
retf
xchg
xor
sar
add
aad
add
mov
add
add
lea
(bad)
mov
mov
xlat
retf
xor
add
pop
push
dec
fidiv
cmp
push
fdivr
push
inc
inc
push
inc
inc
cmp
xor
add
or
adc
jecxz
xor
add
add
sub
sbb
imul
dec
mov
push
sub
loope
ss
pop
xor
inc
sub
das
pop
mov
mov
push
mov
stos
popa
pop
add
inc
jge
in
adc
stos
push
push
pushf
sbb
and
(bad)
and
push
inc
addr16
jo
jns
jnp
loopne
rol
pop
fs
ins
out
dec
je
push
xor
jns
jl
out
mov
mov
xchg
inc
movs
sahf
ds
cmp
lock
push
movs
out
adc
(bad)
xchg
ja
or
sahf
sahf
cmps
imul
jle
xchg
and
test
xchg
xor
cmp
push
mov
sbb
jo
mov
sbb
out
mov
mov
adc
push
scas
test
xor
ins
data16
push
jo
xchg
mov
es
mov
mov
sbb
inc
jns
int
jns
fild
sub
repz
jmp
sbb
out
mov
cmps
stc
cmp
test
iret
sar
fadd
and
push
sahf
out
cmp
clc
sub
arpl
fcom
and
mov
stc
xor
pop
test
fld
and
addr16
repz
xchg
mov
sahf
out
call
jns
out
mov
out
out
or
pop
push
cmp
jb
rol
jns
in
push
sub
xlat
out
push
add
adc
add
mov
call
push
xor
sub
sub
test
ja
dec
dec
inc
xchg
in
xor
ss
push
sbb
cmp
retf
bound
test
jne
inc
mov
fadd
add
inc
sub
pop
test
sbb
das
inc
outs
add
inc
cmp
cmp
jnp
add
push
add
push
add
add
xor
inc
push
xor
xchg
sbb
in
mov
jb
pop
or
fiadd
sub
xor
cmp
pop
dec
push
xor
add
dec
cs
xor
mov
dec
xchg
and
push
rcl
or
dec
push
add
lahf
push
ss
dec
sbb
push
lods
push
jae
or
sub
lock
and
inc
pop
les
mov
xchg
and
sub
xor
pop
cmp
fnsave
pop
es
sbb
sub
pop
fadd
fisubr
imul
dec
and
neg
arpl
pop
xor
xor
(bad)
cmp
inc
mov
in
ins
xchg
push
mov
push
pop
outs
jo
fs
cmp
inc
push
aaa
stos
cmps
mov
nop
pop
jo
out
xor
add
loope
xor
pop
pop
inc
arpl
rol
and
add
adc
mov
or
sbb
std
adc
adc
mov
movs
mov
aam
test
fs
dec
jae
sub
ins
sbb
xor
jmp
ins
into
cmp
ins
jo
rcr
mov
add
jbe
test
add
push
pop
pop
dec
xor
and
aaa
dec
push
jle
jne
add
jmp
mov
loop
adc
ja
inc
mov
std
mov
bound
mov
inc
jb
fisttp
sub
xchg
cmp
mov
ja
pop
in
push
jge
push
or
pop
mov
sbb
sub
mov
mov
mov
es
fild
fild
aaa
adc
out
dec
pop
pop
adc
sbb
fs
mov
cli
rcr
push
sbb
pop
or
sub
rol
rcl
and
push
loope
pop
dec
loopne
int3
dec
stos
mov
inc
mov
cmp
cmp
adc
or
and
mov
or
lock
ins
mov
sbb
push
stos
mov
push
jae
movs
je
fmul
repz
mov
jne
sahf
les
idiv
arpl
mov
popa
test
ret
mov
jl
rol
xchg
(bad)
xor
or
pop
pop
sub
test
push
inc
mov
loopne
xchg
fwait
add
and
sbb
inc
imul
pop
out
sbb
or
fisttp
pop
xchg
jnp
xchg
cdq
cli
les
loop
mov
mov
mov
xchg
xor
mov
fmul
cmc
les
test
xor
aam
movs
imul
jne
push
and
pop
leave
cli
scas
add
xchg
xor
jns
rcl
push
add
fmul
jb
or
push
adc
xchg
mov
in
xor
aaa
mov
push
mov
fwait
inc
jo
ret
aaa
add
and
je
mov
cmc
cmp
jl
mov
xlat
cmp
cmp
cmp
movs
call
push
arpl
fdiv
or
mov
push
test
scas
adc
out
cmp
mov
mov
std
loope
lods
out
pop
pop
daa
xor
adc
inc
add
retf
or
push
out
jmp
xor
pop
mov
xor
jle
mov
mov
mov
xor
das
stos
xor
xor
aam
push
add
retf
lock
xor
paddd
ss
mov
push
aaa
sbb
push
xchg
(bad)
call
sbb
cmp
cmp
jbe
jnp
test
stc
cwde
cli
mov
dec
mov
mov
(bad)
cmp
cmp
cmp
push
pop
ja
cmps
cmp
dec
idiv
add
daa
cmp
fisttp
ror
dec
out
xor
or
test
push
pop
push
xor
cmp
add
icebp
cmp
lea
or
dec
push
(bad)
jmp
xor
sub
imul
and
(bad)
nop
dec
xlat
xor
xor
dec
mov
push
call
stos
dec
xor
fisttp
(bad)
test
xor
xor
aam
push
push
out
mov
add
adc
fs
push
sub
fs
jge
dec
push
sub
aaa
sub
xor
fisttp
push
mov
mov
add
retf
push
aaa
jb
cmp
scas
pop
stos
xor
xor
outs
mov
movs
ds
ficom
(bad)
add
es
cmc
int
mov
fistp
jmp
sbb
frstor
cmp
push
mov
sar
sar
mov
(bad)
mov
xchg
cmp
pop
cmp
mov
mov
lds
rcr
inc
stos
nop
cmc
pop
aas
push
mov
fwait
dec
adc
aas
push
fist
dec
xor
cmp
push
xor
xor
pop
popf
push
mov
out
xor
push
xor
jp
outs
push
dec
call
cmc
xchg
xor
jmp
inc
jns
test
in
sbb
ret
rcl
cli
xchg
xor
cmp
inc
stos
xchg
ds
mov
mov
inc
push
or
in
mov
xor
or
inc
jne
mov
lds
xor
cmp
cmp
cwde
dec
pop
dec
xchg
retf
cmp
fisub
mov
xchg
ret
fwait
out
or
out
call
xor
sar
cmp
xlat
inc
jp
sahf
or
push
pop
mov
pop
pop
sub
pop
aas
pop
aas
jnp
add
loop
jg
lods
dec
pop
aam
add
jae
jl
in
inc
pop
std
aaa
xor
jp
(bad)
xor
lods
mov
xor
fiadd
sub
or
lods
das
movs
push
and
lock
xor
stos
mov
jno
scas
or
add
add
xor
call
sub
push
jle
xchg
gs
mov
in
enter
idiv
or
push
jo
test
inc
ss
repnz
cli
adc
inc
push
xchg
mov
or
push
or
dec
push
pop
cmp
jmp
stos
pusha
cmp
inc
push
pop
xchg
ins
inc
idiv
ret
add
add
ds
mov
test
add
sar
add
mov
xor
lods
call
scas
arpl
xor
push
push
and
sahf
ins
aaa
jp
cmp
sub
pop
jp
jle
test
ret
cli
stos
mov
bound
jbe
cmp
lods
outs
push
pop
cmp
xchg
xchg
pop
or
adc
pop
sub
aas
cmc
div
mov
push
aad
ins
mov
or
jne
test
ror
aam
pop
xchg
mov
pop
pop
sbb
add
add
loope
xor
mov
add
hlt
add
cmp
out
mov
mov
(bad)
push
sar
mov
popf
xor
out
sbb
cmp
ds
ss
push
cmps
lods
inc
aam
cmp
sar
aam
mov
imul
dec
mov
and
(bad)
jg
sar
popa
cmp
cmp
fild
add
aas
aaa
aas
pop
pop
loopne
(bad)
aas
xchg
sub
pusha
sbb
cwde
push
fisub
lea
rol
out
xor
es
xchg
xor
jbe
xor
push
xor
or
and
push
cmp
push
push
mov
inc
arpl
sbb
xor
clc
push
pop
pop
out
cmps
cwde
jmp
sbb
cmp
push
push
adc
ss
fwait
aam
xchg
hlt
inc
pop
(bad)
sahf
and
sub
push
pop
scas
mov
push
out
cmp
ror
pop
mov
hlt
sbb
test
push
mov
scas
jb
mov
mov
jge
lods
mov
cmp
cmp
add
pop
fmulp
cmp
pushf
push
cmp
cli
cli
push
jnp
out
cmp
push
dec
xchg
cmp
adc
lods
cs
cs
hlt
xchg
aad
push
div
xor
xor
xor
add
aaa
lds
xor
pop
inc
mov
jne
test
pusha
jb
cmp
bound
(bad)
cmp
dec
and
xor
push
add
jp
sbb
or
sbb
jb
loopne
mov
gs
jp
cmp
or
jno
shl
popf
sub
sub
mov
mov
les
add
add
push
fiadd
adc
aas
mov
cmp
fmul
push
jecxz
sub
adc
xor
xor
xor
ror
xor
mov
push
xor
or
pop
cmp
test
std
rol
ss
add
jnp
sub
arpl
adc
sub
pop
inc
mov
(bad)
repnz
aaa
mov
ror
sub
cmp
cmps
sbb
(bad)
out
das
mov
jmp
pop
lods
jmp
imul
mov
inc
(bad)
daa
ffreep
push
inc
fwait
add
sub
cmc
repnz
inc
imul
cmp
adc
mov
jns
lods
iret
mov
leave
xor
clc
push
xor
xor
or
add
push
xchg
and
loop
mov
xor
mov
scas
dec
pop
pop
mov
sahf
sub
mov
mov
call
pop
inc
jmp
cmps
(bad)
xlat
aaa
loop
inc
push
es
mov
clc
or
das
cmp
jb
cmp
jg
bound
cmc
das
or
popa
cmps
push
mov
mov
fmulp
fcmovbe
mov
(bad)
out
mov
(bad)
pop
pop
lock
and
sub
ss
xchg
mov
ficomp
pop
pop
retf
mov
fadd
or
test
dec
jne
mov
stos
xchg
aam
rcr
aad
jmp
loop
fimul
ds
out
mov
(bad)
test
popf
ds
call
and
cs
inc
mov
je
jp
popf
aas
test
jmp
fwait
popa
std
cmp
xor
push
xor
jnp
xor
adc
add
stc
xor
xor
mov
arpl
inc
cmp
pop
push
shr
es
outs
xor
mov
push
cmp
and
bound
cmp
sub
jb
fiadd
xchg
xchg
xchg
lahf
lock
loope
push
mov
aaa
push
cmp
dec
push
dec
movs
sbb
push
and
push
mov
push
outs
ds
ja
push
mov
cdq
cmp
mov
(bad)
in
popa
movs
jne
std
test
adc
cwde
sub
cmp
cmp
cmp
lods
jnp
lds
loop
xor
adc
adc
add
push
mov
retf
mov
repz
push
pop
mov
mov
cmp
outs
scas
pop
xchg
dec
inc
adc
push
aad
stos
rcl
mov
add
xor
xor
sbb
jae
xor
push
cmp
mov
add
pop
pop
mov
stos
enter
adc
push
call
test
test
push
daa
lods
movs
and
mul
add
xchg
cmp
cmps
out
sbb
popa
stos
test
adc
sub
dec
xor
xor
jne
or
cmp
sbb
fs
xor
pop
sbb
fwait
dec
and
jo
js
lods
push
(bad)
iret
add
inc
fwait
les
inc
fwait
(bad)
(bad)
pop
cdq
jb
mov
js
nop
push
push
int
shl
cmp
jno
push
fs
mov
(bad)
shr
bound
clc
xor
xor
dec
mov
(bad)
lock
jmp
push
rcr
gs
jmp
or
sbb
cli
je
mov
or
cmp
mov
dec
xor
dec
(bad)
aad
pop
cmps
cli
mov
out
fwait
sbb
xor
retf
add
xor
pusha
jmp
push
bound
jns
push
rol
dec
pop
or
aaa
cmp
cmc
sbb
push
jecxz
sub
aam
aam
fwait
aam
aam
(bad)
mov
int3
cmp
das
push
or
enter
js
add
push
(bad)
jmp
fdivr
lds
mov
pop
pop
(bad)
stc
imul
mov
lock
mov
pop
dec
cmps
mov
mov
and
add
push
or
add
pushf
add
jns
adc
push
and
jns
push
pusha
add
lock
pop
loopne
pop
sahf
mov
ficom
lods
dec
sbb
pop
and
scas
fwait
add
aaa
and
or
(bad)
add
add
or
stc
int3
jo
and
mov
adc
mov
ss
push
adc
push
jno
(bad)
ficomp
sbb
or
push
jne
sbb
ss
push
fbld
and
xor
and
rol
mov
push
sub
jmp
pop
fsubrp
ins
daa
jl
mov
jne
cmp
rcl
sbb
jbe
xor
cmp
add
add
mov
call
cmp
dec
xchg
leave
or
pop
add
adc
setne
sub
cld
jp
push
and
push
mov
push
xor
test
sbb
fadd
(bad)
cli
jge
stos
add
mov
xor
rcl
and
jp
push
clc
sub
ins
in
repz
cmp
adc
mov
mov
scas
stos
call
clc
mov
adc
push
pop
inc
jl
sbb
adc
add
or
sbb
xchg
cmp
add
xchg
outs
sub
xchg
sub
cmp
sub
sub
dec
ror
or
pop
pop
dec
push
out
(bad)
push
shr
in
mov
sbb
and
mov
cdq
pop
fimul
cmps
sub
push
and
xor
jae
push
xchg
loop
lds
xor
fistp
or
addr16
cmp
add
push
sub
xchg
dec
adc
retf
call
outs
mov
pop
jge
shl
cmp
loope
pop
push
pop
xor
int3
jl
adc
xchg
loope
cmps
mov
inc
xor
or
add
call
and
jbe
in
or
push
add
push
mov
or
aaa
mov
icebp
dec
pop
inc
mov
add
sbb
std
cmp
adc
pop
sub
mov
jp
sbb
fcomip
push
std
fcomp
imul
jle
inc
jmp
shl
imul
ins
and
cmp
and
mov
out
out
int
push
cld
or
push
into
push
cmp
push
pop
push
imul
lahf
and
and
xchg
out
mov
sbb
dec
aam
inc
lds
xor
push
fld
dec
or
scas
pop
cmp
dec
pop
and
sub
cmp
xor
cmp
in
cld
add
sub
sub
mov
mov
mov
js
nop
pop
pop
mov
sbb
mov
push
or
or
rol
mov
xor
cmp
xor
into
pop
ficom
or
pushf
shl
xchg
jo
mov
int
inc
pop
push
dec
arpl
dec
xchg
ror
mov
scas
adc
mov
cs
push
loop
aaa
sqrtps
bound
out
fidivr
or
or
sub
dec
sti
cmp
dec
adc
bound
repz
xor
ja
mov
cmp
repz
mov
iret
fsubr
inc
iret
icebp
add
sub
inc
(bad)
out
retf
inc
sbb
mov
push
and
and
add
sbb
inc
sub
pop
mov
inc
inc
dec
add
xor
in
lods
dec
test
sub
or
cld
push
dec
pop
push
jae
push
aam
mov
xchg
bound
sbb
call
xchg
add
pop
pop
adc
repnz
movs
test
int
sub
sub
xor
mov
shl
fild
imul
add
sahf
ja
int
add
sbb
pop
loope
ja
jnp
cs
repnz
leave
nop
sub
and
mov
das
add
adc
sub
xchg
ja
test
pop
push
xchg
out
adc
jo
test
add
popf
hlt
mov
add
cmp
dec
ja
aam
add
sbb
data16
push
inc
or
adc
dec
adc
mov
pushf
or
add
mov
sbb
jb
inc
clc
push
pop
add
add
ds
xor
xor
inc
add
cmp
dec
pop
(bad)
out
cmp
push
add
cs
sbb
sub
mov
xchg
xchg
cmps
fstp
and
inc
cmp
add
sbb
add
movs
movs
cmps
adc
sbb
sbb
aaa
aaa
cmp
xor
adc
popa
inc
xor
xor
mov
dec
loope
push
mov
inc
push
push
push
inc
or
mov
add
lock
mov
movhps
cs
jo
je
xor
imul
pop
shr
push
popf
popa
out
lods
mov
xor
cmp
inc
adc
jg
stos
mov
xor
cld
(bad)
mov
push
xor
enter
xor
dec
add
aaa
add
test
test
int
xor
jno
(bad)
loop
xor
call
lods
push
add
mov
rcr
jle
or
cmps
and
dec
xor
lds
js
jmp
xchg
icebp
dec
push
inc
push
add
jns
inc
add
inc
add
outs
loop
pop
xlat
xor
imul
add
cdq
mov
mov
(bad)
pop
cmp
and
add
repz
fs
pushf
cmp
pop
imul
push
xchg
mov
mov
cmp
fimul
jns
and
xor
xchg
xchg
dec
push
push
ror
or
add
nop
adc
or
add
pop
das
sub
add
xchg
test
add
movs
in
and
add
add
and
push
mov
lods
(bad)
pop
in
or
add
and
mov
rol
mov
add
inc
mov
pop
js
add
dec
jo
cs
add
das
dec
ror
test
fcos
in
(bad)
mov
scas
adc
mov
loope
je
ja
mov
rol
mov
jmp
or
xor
jmp
das
add
or
mov
mov
sbb
in
xchg
aad
call
or
dec
stos
dec
push
test
adc
out
xchg
inc
(bad)
call
mov
test
clc
enter
jecxz
icebp
into
inc
lahf
inc
mov
push
xor
(bad)
mov
mov
add
js
sub
jae
gs
push
add
cmps
fs
out
add
jnp
pop
lock
aaa
in
mov
xlat
and
bound
jg
in
add
cs
push
les
dec
or
jns
or
cmp
push
pusha
je
push
dec
mov
mov
fsubr
adc
movs
mov
xor
xor
jne
imul
aas
push
cs
lods
inc
out
scas
push
mov
nop
add
pushf
shl
loopne
test
xchg
cs
dec
and
jecxz
(bad)
xor
or
into
pop
movs
pop
mov
add
hlt
jae
ins
int3
xchg
fld
push
add
mov
pop
imul
mov
leave
fs
push
scas
movs
xor
push
lock
pop
pop
inc
xchg
ja
test
call
or
xchg
pop
arpl
pop
push
cmp
pop
data16
mov
daa
inc
xor
xor
test
nop
dec
inc
xor
xchg
pop
push
inc
aaa
mov
lock
fist
mov
cmps
lods
sbb
push
int
dec
sbb
popa
ins
or
xchg
sti
push
int3
ds
cwde
ror
mov
dec
dec
es
aaa
push
add
sbb
fdivr
sbb
pop
test
mov
das
dec
fdivr
popa
cmps
xor
sub
cmp
cmp
pop
stc
daa
sbb
setge
add
xchg
fidiv
jmp
add
rol
dec
repz
enter
(bad)
popf
dec
push
imul
lock
data16
dec
add
scas
or
ss
xor
rol
mov
adc
popa
sub
sbb
inc
gs
cmc
sub
sbb
adc
imul
sbb
or
push
or
lods
std
cld
repz
or
or
inc
or
or
inc
or
adc
or
or
mov
jmp
ret
mov
cs
xor
mov
addr16
bound
cmp
push
std
mov
mov
and
pop
sub
daa
outs
add
mov
dec
lock
push
pop
mov
repnz
push
out
add
push
daa
jl
cmps
je
add
and
push
mov
and
add
xlat
xchg
pop
push
mov
and
rol
jns
or
add
mov
add
neg
add
push
pop
adc
leave
jae
inc
out
pop
cmp
xchg
pop
jb
dec
pusha
je
fs
pushf
addr16
and
xor
adc
fcomp
xor
jo
cs
outs
jle
jb
aam
pop
cmp
out
mov
cmp
xor
repz
pop
dec
push
add
add
iret
repz
push
pop
or
repz
in
cld
les
add
(bad)
xor
inc
inc
(bad)
(bad)
call
aam
add
in
add
jl
mov
rcr
mov
add
push
fiadd
retf
movs
mov
pop
and
inc
add
loope
inc
pusha
inc
out
scas
in
or
mov
jl
imul
add
retf
and
inc
add
add
jno
nop
add
inc
(bad)
adc
pusha
jecxz
in
mov
inc
mov
jecxz
ins
das
inc
fisttp
retf
(bad)
push
xor
mov
or
xacquire
add
xchg
scas
dec
and
add
scas
dec
in
pop
pop
popf
push
leave
and
sbb
(bad)
push
and
or
mov
aas
adc
scas
adc
mov
jnp
js
push
mov
and
add
pop
or
addr16
dec
fadd
push
adc
and
sbb
xchg
jmp
imul
xor
pop
inc
mov
das
xor
sub
stos
test
loopne
test
(bad)
(bad)
call
scas
add
stc
push
sti
(bad)
xor
stos
jae
sub
gs
repnz
(bad)
(bad)
call
push
jmp
int3
push
xor
gs
loop
rcr
mov
(bad)
xchg
push
jne
cmp
call
fiadd
jmp
pop
inc
out
inc
jp
stos
jo
jbe
sub
dec
imul
jle
add
sahf
dec
push
sbb
adc
adc
inc
sbb
(bad)
(bad)
(bad)
push
or
mov
mov
mov
xchg
push
rol
pop
out
adc
sbb
inc
int3
and
(bad)
(bad)
(bad)
jl
adc
xchg
dec
test
imul
mov
inc
test
in
data16
and
cmc
(bad)
dec
ror
dec
fild
xchg
jne
(bad)
jmp
out
rol
mov
mov
cli
pop
leave
sbb
dec
cld
jmp
pop
stc
dec
sahf
cmp
je
jl
mov
add
(bad)
(bad)
jg
daa
xor
cmp
adc
in
movs
sti
inc
mov
xchg
xor
mov
jecxz
push
xchg
jge
or
cmp
sbb
dec
enter
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
retf
(bad)
lock
mov
test
bound
(bad)
out
les
inc
add
push
pop
sub
ror
mov
xchg
or
dec
jmp
mov
(bad)
(bad)
jmp
cmp
imul
fild
shl
(bad)
or
jl
mov
and
(bad)
(bad)
(bad)
jmp
leave
(bad)
div
mov
fstp
sbb
leave
inc
jg
stos
adc
mov
lods
(bad)
(bad)
(bad)
dec
lock
mov
inc
cdq
adc
jmp
jl
aam
jmp
(bad)
(bad)
(bad)
jmp
inc
inc
sub
adc
dec
mov
imul
nop
pop
xchg
jl
not
dec
mov
cmc
scas
clc
(bad)
inc
mov
mov
jge
dec
and
sbb
jecxz
loop
xor
(bad)
jmp
sahf
jmp
lea
rcl
sti
mov
push
xor
out
test
std
inc
push
call
adc
mov
pop
sar
je
fsubr
lods
push
dec
ret
(bad)
(bad)
(bad)
jmp
jle
sbb
cmp
addr16
int3
imul
jl
adc
xchg
rol
mov
ja
imul
xchg
in
cs
mov
jo
mov
(bad)
(bad)
jmp
pop
mov
push
loope
ja
jb
clc
sbb
ret
sub
jg
dec
jmp
and
(bad)
(bad)
(bad)
call
cmc
jp
lock
mov
(bad)
jge
sub
adc
scas
lahf
inc
fdivr
inc
mov
add
(bad)
(bad)
(bad)
call
(bad)
mov
jp
jo
and
scas
enter
jmp
pop
test
xchg
(bad)
pop
(bad)
(bad)
(bad)
jmp
rcr
mov
stc
leave
push
dec
dec
pop
xchg
data16
mov
(bad)
jp
(bad)
(bad)
call
je
mov
xchg
lock
dec
fld
fidiv
cmp
xor
mov
mov
fidiv
or
test
and
or
(bad)
(bad)
jmp
adc
dec
stos
inc
(bad)
shl
pop
xor
sar
mov
mov
(bad)
sbb
sbb
adc
inc
(bad)
jmp
xor
pop
mov
dec
out
jb
and
cmp
adc
(bad)
(bad)
jmp
mov
retf
and
sub
jmp
pop
cwde
retf
fld
ds
and
(bad)
(bad)
dec
mov
loopne
mov
mov
inc
adc
fnstcw
shl
mov
mov
(bad)
(bad)
mov
retf
inc
std
or
xchg
stos
dec
arpl
inc
pop
sub
jg
xor
int3
jmp
pusha
push
mov
and
icebp
(bad)
(bad)
(bad)
fbstp
mov
push
or
adc
(bad)
fmul
fwait
leave
movs
mov
mov
mov
lds
and
shl
bound
(bad)
dec
mov
scas
push
popf
inc
adc
out
test
(bad)
outs
jecxz
xlat
or
push
repz
fst
(bad)
(bad)
sti
int
cdq
or
xor
mov
ds
inc
hlt
fidiv
mov
icebp
cmp
call
rcl
inc
add
out
jl
fadd
imul
(bad)
inc
xor
xor
nop
pop
jnp
sub
jle
retf
pop
jmp
or
push
stos
(bad)
(bad)
(bad)
(bad)
cmp
inc
fadd
inc
sub
cwde
xchg
push
repnz
cmp
imul
(bad)
(bad)
(bad)
inc
sbb
or
ins
fcmovnu
in
lea
stos
loopne
xor
(bad)
(bad)
(bad)
(bad)
out
fsubr
sub
imul
(bad)
fcom
std
call
into
jnp
(bad)
(bad)
(bad)
call
adc
push
xchg
or
jae
adc
sbb
inc
cmps
imul
nop
sub
dec
xchg
(bad)
(bad)
(bad)
std
nop
jno
ror
sub
mov
lods
cmps
shr
call
push
(bad)
jnp
test
mov
cmc
(bad)
call
sbb
jo
pop
aas
mov
pushf
hlt
cli
mov
loop
(bad)
call
or
and
jae
sbb
cld
xor
loope
inc
xor
push
sbb
xchg
call
(bad)
(bad)
(bad)
(bad)
cld
sub
dec
mov
fsub
mov
sbb
xor
xor
jno
inc
and
inc
(bad)
(bad)
(bad)
(bad)
sti
jne
fisttp
jnp
fistp
mov
div
push
sub
call
or
cmp
push
or
push
xchg
jg
inc
fsub
aaa
loope
mov
jge
ss
in
xchg
ins
(bad)
(bad)
(bad)
jg
pop
ret
arpl
lea
in
stc
aas
adc
adc
lds
scas
test
mov
adc
(bad)
jg
inc
dec
(bad)
or
dec
mov
sbb
add
test
pop
inc
movs
ins
mov
sbb
add
into
retf
or
daa
jg
aad
adc
(bad)
(bad)
inc
pop
addr16
dec
ins
push
iret
sub
xchg
shl
push
rcl
mov
call
xchg
(bad)
(bad)
(bad)
dec
movs
pop
sub
jne
fisubr
ror
mov
(bad)
imul
pop
add
out
enter
sub
xlat
enter
(bad)
(bad)
jmp
pop
js
and
in
pop
cld
inc
repnz
dec
idiv
sub
movs
jmp
mov
dec
movs
mov
dec
or
mov
xchg
dec
jne
imul
arpl
dec
jmp
lahf
les
cmp
out
push
test
push
sub
sbb
push
jnp
call
dec
les
pushf
lods
ds
mov
scas
xor
sub
(bad)
call
jg
(bad)
hlt
xor
mov
test
sar
cmps
bound
sbb
(bad)
cli
(bad)
xor
sub
(bad)
out
cmp
adc
mul
sub
jne
test
push
scas
xchg
js
pop
out
xlat
mov
jbe
sbb
inc
xor
mov
mov
jge
adc
(bad)
(bad)
(bad)
inc
dec
hlt
mov
cmp
and
std
or
push
popf
mul
div
addr16
cld
(bad)
call
mov
push
push
sub
shr
mov
cwde
data16
(bad)
(bad)
jg
add
lea
loop
imul
jbe
cmp
retf
sbb
call
cmp
dec
into
cmps
cmp
push
pop
jl
repz
out
retf
dec
(bad)
(bad)
call
stos
fs
adc
inc
and
xchg
ins
add
arpl
ins
add
adc
dec
sbb
retf
(bad)
(bad)
(bad)
inc
cmp
bound
and
xlat
shl
inc
sub
inc
fisttp
sbb
jg
popf
mov
(bad)
(bad)
(bad)
(bad)
fisttp
push
adc
mov
push
sar
xor
mov
push
mov
scas
jg
or
out
(bad)
dec
sub
push
int3
sub
dec
dec
scas
xor
dec
mov
(bad)
mov
dec
add
fisttp
jecxz
hlt
ins
int
pop
fild
or
dec
and
adc
scas
(bad)
(bad)
cld
push
ins
xor
cmp
and
push
call
(bad)
push
retf
test
push
icebp
inc
mov
mov
cs
or
mov
icebp
stos
jg
(bad)
(bad)
fadd
ror
sub
sahf
sub
adc
in
sti
div
(bad)
call
fdiv
mov
out
jae
mov
ja
jb
nop
(bad)
(bad)
jg
or
push
xor
sub
fs
call
mov
out
add
call
std
(bad)
clc
mov
and
lock
ret
sub
pop
ja
xchg
nop
jns
(bad)
(bad)
call
fisubr
sub
je
sub
pop
in
leave
(bad)
(bad)
(bad)
(bad)
mov
jl
inc
push
xlat
fild
gs
je
lahf
mov
lahf
inc
stc
hlt
sbb
push
(bad)
(bad)
(bad)
call
jl
inc
call
sub
dec
inc
mov
mov
inc
dec
and
(bad)
(bad)
(bad)
dec
scas
icebp
push
imul
mov
sub
(bad)
mov
xchg
cmp
mov
(bad)
(bad)
jmp
ret
test
(bad)
ins
mov
inc
jno
or
push
pop
push
fs
in
fcmovu
lds
mov
(bad)
(bad)
cmp
dec
or
mov
push
mov
(bad)
(bad)
(bad)
mov
push
retf
cmp
clc
scas
ror
xchg
aam
fnstcw
aas
add
sbb
(bad)
(bad)
call
dec
dec
adc
or
mov
xchg
push
ins
jne
mov
(bad)
dec
dec
sub
jg
test
xor
(bad)
(bad)
dec
push
sbb
adc
cdq
cmp
add
xchg
mov
popf
aad
mov
icebp
push
cmp
shl
aaa
jmp
jne
add
push
cld
inc
movs
and
leave
push
and
and
je
stos
in
xor
(bad)
(bad)
(bad)
push
retf
rcr
add
push
lods
ret
lahf
cmps
repnz
pop
push
ins
sbb
int3
jmp
(bad)
(bad)
(bad)
dec
jnp
inc
int3
xor
add
dec
jnp
ds
lods
stc
cli
out
mov
jns
or
or
adc
sub
sbb
pushf
repnz
cmp
(bad)
(bad)
(bad)
inc
(bad)
jne
cmp
mov
mov
popf
imul
adc
pop
loop
fbstp
xchg
xchg
out
outs
mov
xor
(bad)
jmp
jnp
repnz
outs
ds
fbstp
mul
hlt
leave
push
adc
sub
(bad)
(bad)
(bad)
call
mov
dec
mov
xchg
sbb
mov
and
cli
push
test
jb
(bad)
(bad)
(bad)
push
gs
in
mov
push
pop
sub
rol
pop
rcr
dec
xchg
call
pop
xchg
enter
call
in
mov
mov
sub
adc
(bad)
push
fist
push
cli
mov
dec
and
(bad)
pop
cdq
jmp
sti
dec
xor
pusha
mov
repz
(bad)
(bad)
(bad)
call
fstp
popf
ror
sbb
imul
fcomp
cmp
xor
cmps
daa
dec
sbb
mov
cmp
test
pop
hlt
xor
xchg
sar
push
jg
aad
scas
clc
inc
xchg
jmp
retf
dec
call
mov
daa
(bad)
jmp
data16
neg
enter
inc
pop
lock
inc
out
iret
test
sub
mov
push
inc
push
adc
gs
(bad)
(bad)
jmp
ret
das
inc
mov
jl
cmp
sub
fnsave
stos
cmp
daa
das
je
(bad)
(bad)
inc
and
out
repnz
loopne
aas
mov
xchg
test
(bad)
(bad)
(bad)
jmp
adc
daa
sar
push
dec
mov
sbb
inc
sub
addr16
(bad)
(bad)
call
cmp
rol
arpl
das
bound
mov
pushf
test
mov
adc
call
leave
pop
repnz
mov
lock
clc
ss
pushf
push
mov
popf
(bad)
(bad)
(bad)
dec
sub
or
loope
(bad)
iret
std
(bad)
ins
in
xor
pop
movs
(bad)
(bad)
(bad)
(bad)
(bad)
out
cld
lods
and
popf
in
mov
or
jae
repnz
out
lahf
lods
leave
push
(bad)
(bad)
out
sbb
sub
adc
outs
pop
jle
sbb
add
mov
push
adc
pop
stos
(bad)
(bad)
dec
add
addr16
sub
int3
imul
mov
fs
es
cmp
call
mov
ins
icebp
(bad)
call
fstp
mov
in
sub
(bad)
jmp
pop
(bad)
mov
xchg
lahf
cmc
adc
pop
retf
cmp
(bad)
(bad)
(bad)
jmp
cmp
nop
push
scas
je
aaa
and
jecxz
aam
leave
dec
stos
aad
xchg
adc
inc
les
adc
add
test
or
fiadd
jmp
mov
xchg
push
mov
mov
cli
das
shl
popf
or
push
popa
(bad)
mov
mov
mov
and
test
xor
cmp
js
inc
jmp
inc
lock
jmp
add
jns
dec
sbb
(bad)
jmp
inc
and
and
dec
fadd
sbb
lds
repz
jb
mov
xchg
or
and
cmps
xor
xor
push
cwde
daa
fild
jge
xchg
(bad)
(bad)
cmp
popa
jmp
jno
mov
mov
ja
adc
outs
loop
inc
call
test
(bad)
push
pop
jg
push
test
inc
(bad)
bound
adc
jl
(bad)
(bad)
(bad)
jmp
not
adc
jle
pop
fidiv
push
pop
add
lds
xchg
mov
(bad)
dec
sbb
sti
mov
pop
lahf
hlt
mov
imul
cmc
mov
repz
(bad)
push
in
imul
push
xor
movs
pop
jo
ins
test
(bad)
fild
test
mov
push
out
loope
cmp
mov
jecxz
mov
out
jnp
push
loopne
mov
pop
das
cmp
(bad)
(bad)
xchg
(bad)
(bad)
(bad)
inc
xor
call
mov
ins
push
ja
inc
js
test
bound
adc
and
and
cmp
sbb
xchg
out
shl
arpl
lds
(bad)
(bad)
call
mov
xchg
xor
and
push
psubq
cmps
inc
cmp
(bad)
(bad)
cli
xchg
test
fist
outs
mov
aad
xchg
iret
cmp
pmaxub
jmp
push
mov
and
inc
and
stos
fld
loop
adc
push
(bad)
mov
outs
lods
rcl
hlt
xor
xchg
js
or
or
in
cmp
fwait
(bad)
call
imul
in
sbb
xor
(bad)
(bad)
(bad)
inc
jp
out
(bad)
into
aad
(bad)
mov
popa
jecxz
aad
sub
mov
je
rcr
(bad)
(bad)
(bad)
call
call
or
enter
imul
and
test
aas
enter
cmp
fs
fst
push
pop
int
inc
add
lods
clc
adc
mov
jl
pushf
mov
out
in
cs
lea
push
outs
fild
push
test
pop
ror
mov
hlt
cmps
jae
loope
ins
or
lods
ins
out
outs
rcr
cmc
dec
not
ja
sbb
or
ins
sub
mov
sbb
lds
jnp
or
cli
popf
retf
(bad)
pop
mov
mov
(bad)
(bad)
call
or
or
jb
cmp
enter
dec
stos
scas
sahf
outs
lock
push
sub
pop
add
loopne
push
lods
xchg
mov
cwde
call
outs
fwait
sub
(bad)
aas
(bad)
jg
jge
out
xchg
mov
retf
scas
push
ins
pop
xchg
dec
jg
jno
arpl
repz
(bad)
(bad)
call
and
adc
mov
mov
cmp
jmp
push
(bad)
(bad)
(bad)
dec
popa
(bad)
push
cmp
paddusw
or
ja
jecxz
and
loope
and
jnp
(bad)
(bad)
jmp
inc
mov
retf
lock
mov
jb
cmovno
dec
arpl
jg
(bad)
push
lahf
ficomp
cmp
aam
outs
retf
adc
shl
sbb
test
mov
sahf
mov
les
adc
or
test
test
mov
pop
cld
cmps
pop
out
outs
in
ja
and
cs
pop
jno
out
stos
(bad)
call
inc
(bad)
dec
fs
mov
ins
xchg
fnstcw
test
pop
(bad)
jecxz
mov
dec
and
bound
mov
div
lock
(bad)
dec
xchg
xchg
or
jns
jns
lock
push
les
cld
fst
int3
(bad)
mov
mov
ds
iret
jmp
(bad)
sbb
mov
xchg
sbb
(bad)
(bad)
push
dec
loope
mov
sbb
out
cmp
loopne
stos
mov
mov
(bad)
(bad)
(bad)
mov
sbb
mov
mov
mov
cmp
out
wrmsr
sbb
ret
mov
jg
jmp
lock
mov
retf
cdq
jp
sub
(bad)
call
xchg
lahf
inc
jmp
(bad)
stc
xchg
push
sti
inc
dec
push
and
(bad)
dec
out
lods
ror
adc
add
push
sbb
mov
stc
adc
dec
push
int3
sbb
stc
and
sub
and
(bad)
call
(bad)
mov
les
pop
sub
cmps
cmp
jno
push
(bad)
(bad)
(bad)
jg
dec
xor
clc
and
or
push
jno
daa
push
jge
fs
pop
sbb
shr
add
(bad)
(bad)
call
arpl
fidiv
adc
sti
arpl
mov
(bad)
lock
cmc
shr
inc
add
or
fsubp
lods
(bad)
(bad)
(bad)
call
or
or
inc
outs
or
aam
sti
imul
ret
jo
pop
mov
movs
inc
test
push
sub
push
sbb
ss
mov
(bad)
mov
clc
jg
or
out
sub
retf
lock
pusha
(bad)
(bad)
(bad)
jmp
rcl
out
repnz
xor
push
dec
adc
retf
xchg
jo
xor
outs
mov
(bad)
fisttp
arpl
inc
call
out
cld
sbb
jle
or
pop
nop
mov
mov
(bad)
inc
movs
sbb
(bad)
pop
pushf
cli
pop
mov
dec
add
(bad)
(bad)
call
push
jno
ins
cwde
cmc
cmp
scas
and
fs
sahf
aam
clc
xchg
jmp
jne
(bad)
call
or
push
jae
jb
in
mov
iret
mov
sar
lock
cs
into
fsub
push
pop
jmp
fdivr
fwait
(bad)
dec
jge
xchg
fst
shl
and
(bad)
clc
xor
dec
cmp
(bad)
mov
xchg
test
int
adc
push
aam
shr
out
sbb
(bad)
jmp
ficomp
sub
sub
dec
inc
retf
mov
adc
sbb
mov
jmp
(bad)
jns
add
push
cmp
loop
(bad)
xor
iret
sub
call
or
(bad)
sub
clc
sbb
xchg
lock
enter
(bad)
(bad)
(bad)
call
not
fst
test
or
dec
or
jle
call
popf
mov
(bad)
outs
and
(bad)
jmp
push
push
ret
push
xchg
sbb
lods
and
sbb
xor
scas
jg
and
outs
ror
(bad)
xchg
(bad)
(bad)
(bad)
jmp
in
xchg
int3
mov
push
and
fsub
fdivrp
jo
dec
imul
(bad)
(bad)
(bad)
inc
push
hlt
popf
inc
xor
sti
cmp
push
sbb
(bad)
fist
movs
aaa
inc
fs
(bad)
dec
(bad)
dec
xchg
inc
ss
pushf
cmp
push
(bad)
jle
fidivr
pop
jg
fld
pop
in
cld
dec
inc
pop
adc
js
pop
pop
fwait
jbe
call
popf
mov
outs
adc
sbb
cld
std
dec
push
adc
(bad)
(bad)
(bad)
cmp
lods
sbb
ss
ins
rcl
data16
cmps
cmp
(bad)
(bad)
(bad)
dec
jl
ds
jl
rcl
ja
add
lods
cdq
rcl
or
loope
js
mov
lfs
xor
mov
or
cld
(bad)
cmp
inc
sti
call
cmps
or
dec
add
or
sar
xchg
dec
outs
call
push
pop
int
sub
movs
jo
sub
fs
cld
sbb
fisub
aam
fs
jmp
sti
mov
dec
iret
repz
(bad)
mov
push
mov
lock
xchg
xchg
imul
and
call
mov
mov
mov
imul
loopne
(bad)
(bad)
dec
push
jp
or
pop
or
xor
jns
inc
sub
mov
inc
(bad)
(bad)
jmp
aas
daa
lahf
jno
push
cmps
in
or
rcl
(bad)
jb
test
repz
fcos
(bad)
inc
cmp
test
imul
daa
mov
fmul
inc
(bad)
je
mov
(bad)
(bad)
push
and
mov
shr
or
sub
ret
stc
fidivr
or
(bad)
jmp
mov
fld
or
mov
add
xor
(bad)
jmp
dec
ins
mov
sub
int
nop
cmp
mov
stc
(bad)
fdivr
xchg
(bad)
(bad)
(bad)
jmp
sbb
xchg
inc
sbb
mov
fdiv
int
and
(bad)
pop
test
mov
icebp
(bad)
jmp
cli
cmp
add
and
daa
mov
adc
psubusw
(bad)
call
cmp
(bad)
(bad)
xlat
and
mov
add
leave
jo
cs
mov
cld
dec
aas
pop
push
leave
dec
add
mov
(bad)
jg
mov
callw
adc
ret
sbb
adc
jg
inc
fdiv
nop
div
sahf
add
(bad)
(bad)
(bad)
jmp
les
push
daa
rcl
cdq
jl
cmc
sub
inc
cmp
sti
in
mov
loopne
loope
(bad)
(bad)
(bad)
call
scas
or
int
ins
mov
out
xchg
outs
call
lea
int3
movs
(bad)
mov
push
adc
adc
add
inc
aas
lods
xchg
xor
std
aaa
adc
data16
inc
(bad)
(bad)
(bad)
fbld
inc
loope
or
call
or
pusha
pop
sub
and
cmp
pop
clc
cld
(bad)
(bad)
dec
cld
dec
mov
fisubr
jne
nop
(bad)
outs
and
imul
int
xlat
lahf
adc
mov
repnz
(bad)
call
jg
jl
adc
enter
dec
ins
xchg
out
stos
xor
cmc
xor
popa
push
jge
cmp
(bad)
(bad)
(bad)
mov
cs
out
mov
xor
jne
mov
dec
test
jmp
out
sub
dec
lock
push
test
mov
retf
out
adc
(bad)
jmp
jae
pop
jecxz
xchg
movs
movhps
imul
mov
lea
sti
pop
mov
(bad)
jmp
jno
push
pop
mov
dec
fwait
int3
mov
js
jl
mov
add
(bad)
(bad)
inc
inc
rcr
jp
test
xchg
push
xlat
xchg
pop
rcr
cmps
sbb
(bad)
(bad)
fild
and
clc
and
es
fiadd
add
stos
(bad)
ja
es
inc
dec
or
(bad)
pop
outs
mov
sbb
adc
xor
aad
push
(bad)
(bad)
(bad)
dec
clc
push
add
and
push
xchg
cdq
into
inc
icebp
jne
stos
test
add
inc
mov
ss
inc
clc
push
dec
lock
mov
mov
inc
dec
jb
fwait
xchg
ins
sub
xchg
mov
(bad)
aas
ret
xchg
push
dec
sar
dec
les
or
pop
mov
mov
add
add
mov
cwde
sbb
xchg
mov
dec
pop
push
jecxz
ds
adc
jae
dec
inc
cmp
(bad)
call
xor
adc
fisub
and
cmps
rol
jp
imul
pop
sbb
push
pop
inc
out
push
inc
out
jae
or
cmp
mov
mov
xchg
movs
inc
sar
(bad)
jg
clc
imul
call
xchg
outs
leave
xor
call
cmp
retf
pushf
popf
and
xlat
test
out
std
cdq
pusha
jle
(bad)
(bad)
(bad)
cmp
push
xchg
lods
pop
ds
enter
mov
fidivr
cmp
(bad)
(bad)
(bad)
jmp
xor
or
mov
movs
xor
movs
jg
xchg
add
and
pop
jge
sbb
sbb
sbb
mov
(bad)
(bad)
(bad)
inc
inc
sbb
and
iret
pop
fidivr
jnp
push
xor
mov
xchg
jmp
sub
xchg
sub
arpl
imul
mov
shl
iret
push
pusha
push
mov
adc
add
sbb
cmp
call
mov
sub
xchg
xlat
adc
mov
adc
outs
and
mov
(bad)
(bad)
jg
adc
out
cmp
and
out
and
out
(bad)
(bad)
(bad)
jmp
add
lods
and
int
pop
adc
nop
into
hlt
adc
sub
inc
(bad)
jmp
call
adc
(bad)
out
push
cmp
scas
imul
(bad)
call
pop
les
out
cmp
sub
imul
psrad
fs
bnd
(bad)
(bad)
(bad)
(bad)
cmp
in
add
jmp
dec
(bad)
mov
mov
call
shl
push
popa
sub
(bad)
(bad)
call
sub
(bad)
and
js
sub
dec
or
iret
int3
add
out
imul
mov
mov
xchg
dec
pop
(bad)
(bad)
jg
pop
in
scas
xchg
mov
mov
lea
cmps
add
(bad)
(bad)
(bad)
inc
pop
or
pop
mov
jbe
add
outs
(bad)
jnp
jno
movs
imul
pop
popa
jb
(bad)
(bad)
jmp
cld
push
pop
scas
sub
inc
or
cdq
ss
adc
jno
push
jmp
(bad)
(bad)
(bad)
dec
sub
inc
jbe
daa
aas
paddb
cwde
cmovno
icebp
in
mov
(bad)
jmp
jnp
pop
fild
fs
lods
shl
test
mov
xchg
mov
adc
jg
jmp
in
sar
(bad)
in
adc
stc
and
nop
cs
test
int3
jo
push
add
and
js
inc
xor
adc
rcl
push
in
call
(bad)
(bad)
out
mov
sbb
popf
loope
and
das
or
mov
jbe
cmp
push
xchg
idiv
(bad)
or
(bad)
pop
ins
or
stc
push
xchg
test
and
and
pusha
lock
fst
int3
push
push
into
stos
(bad)
mov
imul
pop
ja
mov
(bad)
(bad)
(bad)
push
jae
jnp
dec
retf
retf
fist
loop
repnz
xchg
pop
out
ss
jne
shl
dec
xlat
dec
test
loopne
inc
adc
push
cmp
stos
xchg
push
and
in
fld
dec
jmp
mov
mov
add
xchg
div
inc
xchg
aad
bts
idiv
daa
sbb
xor
repz
adc
retf
(bad)
(bad)
jmp
or
sub
pushf
leave
adc
shl
out
sub
sub
and
(bad)
(bad)
inc
outs
movs
inc
cmps
cmp
add
push
enter
leave
adc
dec
adc
jg
movs
xor
call
push
loopne
rcr
movs
push
movs
(bad)
(bad)
(bad)
dec
add
sti
push
je
mov
ja
push
pop
(bad)
cmps
(bad)
xchg
jbe
push
(bad)
push
fstp
(bad)
(bad)
(bad)
jmp
mov
bound
in
in
stos
pop
sub
std
adc
add
cmp
ins
adc
in
dec
(bad)
(bad)
jg
xor
test
mul
das
shr
test
inc
jl
clc
cwde
aam
inc
mov
jno
jmp
mov
aam
js
jge
inc
pushf
mov
fnstsw
sub
outs
mov
clc
cmc
js
les
es
icebp
(bad)
fcmovu
(bad)
(bad)
dec
pop
xchg
retf
fisttp
xor
test
pop
jge
sbb
cmc
and
(bad)
(bad)
(bad)
push
ja
xchg
xchg
inc
sub
pop
or
mov
mov
inc
stos
(bad)
(bad)
(bad)
push
cmps
mov
push
add
cmp
xor
sub
cmp
mov
cmp
bound
sbb
dec
and
xlat
aam
in
clc
or
inc
mov
inc
xlat
ins
ficom
sbb
cwde
push
(bad)
(bad)
(bad)
call
sbb
push
add
loopne
adc
stos
sbb
sub
jbe
mov
(bad)
push
xor
les
mov
loopne
dec
test
push
adc
cld
test
cwde
jg
(bad)
push
mov
fst
push
addr16
jne
pop
mov
xor
loop
shr
das
xor
das
inc
mov
add
jmp
sub
rol
jle
cmp
in
ja
sar
jg
and
push
mov
hlt
ins
ror
rcr
out
inc
call
movs
add
add
(bad)
inc
inc
sub
inc
rdpmc
cmps
in
dec
pop
retf
sub
xchg
xchg
imul
imul
jle
sti
sbb
les
std
(bad)
xchg
or
mov
jecxz
dec
or
pusha
or
mov
std
mov
jmp
jb
inc
xchg
mov
dec
dec
xor
(bad)
(bad)
dec
xlat
xor
(bad)
repnz
or
add
dec
sub
test
(bad)
(bad)
call
xchg
mov
popf
inc
(bad)
pop
mov
loope
ret
xchg
adc
mov
push
dec
mov
icebp
je
push
add
cmp
imul
or
in
stc
mov
(bad)
(bad)
jmp
(bad)
rcl
loope
ror
stos
dec
mov
sub
in
pop
fstp
out
(bad)
mov
inc
and
xchg
test
test
xchg
stos
lds
and
fstp
cmp
stc
adc
mov
pop
std
mov
push
and
inc
(bad)
pop
adc
outs
cmps
call
call
mov
out
adc
icebp
xchg
mov
or
mov
push
xor
push
jmp
(bad)
dec
dec
xchg
add
vmptrld
cmp
add
mov
or
in
dec
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
and
test
mov
jge
sub
stc
pop
sti
pushf
gs
pop
pusha
xchg
xor
ror
add
(bad)
call
cwde
inc
(bad)
popf
cdq
cdq
push
xor
mov
pop
call
outs
int
sti
mov
pusha
(bad)
(bad)
(bad)
call
cmp
pop
pop
adc
inc
fisubr
push
cmp
aas
sub
(bad)
(bad)
inc
sub
pushf
xchg
test
sbb
les
scas
int
aam
out
int
jmp
fmul
(bad)
(bad)
(bad)
jmp
int
mov
aad
imul
cwde
and
cmps
out
scas
cmp
jge
push
or
(bad)
(bad)
(bad)
(bad)
in
ret
xchg
xor
adc
and
nop
jle
mov
pop
mov
xchg
jnp
sbb
call
and
fwait
movs
pop
jb
popf
pop
pop
or
les
call
iret
xchg
dec
(bad)
(bad)
(bad)
call
or
jge
inc
and
scas
or
cwde
xor
retf
out
aaa
adc
(bad)
fsubr
cs
fimul
or
callw
repnz
icebp
jb
push
bound
adc
lea
and
(bad)
(bad)
inc
lock
iret
pop
mov
addr16
sbb
dec
jle
pop
cmp
ss
(bad)
(bad)
(bad)
call
fwait
enter
jl
aam
sub
shl
push
leave
jbe
in
aas
(bad)
fbld
and
hlt
push
inc
outs
xchg
pop
pop
movs
xor
call
sub
adc
mov
js
dec
cmp
mov
mov
or
repz
(bad)
(bad)
(bad)
dec
jmp
mov
mov
adc
(bad)
iret
inc
and
mov
in
cmp
fptan
cmp
push
xchg
inc
push
iret
mul
sub
ins
push
adc
and
or
cld
(bad)
(bad)
jmp
aas
lahf
mov
cdq
jmp
test
adc
xlat
cs
sub
(bad)
addr16
out
clc
aaa
outs
mov
in
sub
sub
jae
jo
(bad)
pop
dec
in
or
(bad)
(bad)
(bad)
jmp
push
cdq
add
pop
cdq
cli
out
add
add
or
mov
cmp
arpl
inc
cld
repnz
test
out
(bad)
(bad)
dec
sub
jo
cmp
cdq
xchg
mov
mov
cmp
emms
jne
rol
(bad)
(bad)
(bad)
(bad)
fisubr
scas
jg
mov
cli
loope
dec
push
pushf
mov
dec
scas
push
popf
call
out
aam
repz
imul
mov
repnz
and
(bad)
call
push
test
test
and
imul
in
cmps
inc
cli
lock
loopne
(bad)
(bad)
(bad)
(bad)
mov
mov
test
ror
xlat
xchg
ret
push
stc
arpl
icebp
dec
popf
sbb
xchg
ins
test
sub
mov
in
inc
cdq
mov
and
hlt
(bad)
(bad)
jmp
gs
pop
shr
ss
(bad)
mov
mov
jns
ins
test
mov
ins
outs
test
jae
(bad)
(bad)
call
pop
into
and
mov
lock
into
pop
scas
inc
out
jmp
popf
mov
repnz
xor
mov
ret
leave
add
(bad)
(bad)
dec
dec
shr
jle
xchg
push
pushf
ret
(bad)
out
add
push
test
fimul
fs
add
stos
(bad)
(bad)
inc
stc
dec
mov
adc
sbb
ins
jg
jmp
es
mov
(bad)
mov
dec
lahf
or
(bad)
mov
pop
pop
sub
and
or
(bad)
call
inc
fsub
es
pop
mov
fstp
inc
jle
adc
jbe
push
cmp
sub
jno
(bad)
(bad)
(bad)
push
mov
xchg
fnstsw
jge
je
adc
or
icebp
scas
fwait
cmp
stos
sar
(bad)
(bad)
out
adc
mov
xchg
icebp
mov
sbb
sub
mov
pop
iret
jmp
sbb
in
lods
mov
sub
jmp
daa
cmp
inc
dec
ficom
test
sar
mov
(bad)
aam
cwde
mov
push
lea
rol
add
scas
inc
pop
cmp
jg
jne
push
sbb
sub
sub
mov
push
cwde
pop
mov
push
cmp
(bad)
jg
inc
aaa
dec
jne
je
mov
add
cmc
mov
xor
dec
scas
(bad)
jmp
shr
push
out
jle
cmp
jle
gs
or
(bad)
call
mov
mov
jno
mov
xor
jno
mov
neg
sbb
out
rcl
sbb
nop
push
icebp
xor
dec
mov
mov
xor
in
inc
or
(bad)
(bad)
(bad)
push
in
in
ret
cld
cmps
pop
sbb
fimul
mov
jnp
ret
outs
dec
xor
test
cmp
fst
push
into
pop
jnp
lahf
(bad)
dec
repnz
dec
fdivp
cdq
popa
add
nop
(bad)
(bad)
jg
jo
fdivr
(bad)
dec
repz
and
cmps
lods
pop
jnp
pop
popa
pop
sub
dec
mov
mov
and
push
jmp
aam
jnp
stc
sub
cs
and
(bad)
(bad)
jmp
push
inc
adc
push
jg
cmp
aas
mov
loopne
mov
adc
mov
mov
aas
xchg
jb
mov
jge
rcl
sti
int3
add
cld
(bad)
push
cli
nop
lods
jge
cmps
push
fucomp
jbe
scas
dec
sbb
aad
adc
pop
div
inc
enter
call
and
jge
sub
imul
std
pop
stc
pop
sar
sub
pop
jl
fmul
(bad)
(bad)
jmp
mov
sar
xor
shr
out
mov
outs
xor
sahf
push
mov
(bad)
jmp
shr
call
pushf
mov
mov
repz
call
neg
and
(bad)
(bad)
(bad)
jmp
mov
movs
popfw
test
inc
stc
cld
mov
xor
cmp
inc
and
lahf
ins
cmp
clc
out
pushf
scas
stc
bound
pop
push
ja
pop
loop
jmp
xor
(bad)
(bad)
push
sub
xor
push
cs
jg
jg
hlt
sar
or
cs
cmp
(bad)
(bad)
jmp
out
out
aas
hlt
sahf
push
lahf
int
cdq
sbb
push
aaa
dec
cmp
push
add
jg
sbb
in
xor
cmp
sub
sbb
and
jnp
cs
(bad)
(bad)
cmp
xchg
add
sub
movs
add
cli
das
jge
cmc
fs
aas
add
(bad)
(bad)
(bad)
fistp
jle
jae
inc
inc
and
ret
add
sti
scas
jo
or
setnp
aam
(bad)
(bad)
jmp
arpl
pushf
lock
pop
out
push
inc
adc
jne
push
and
mov
inc
pop
cmp
scas
dec
in
rcl
aas
pushf
int3
xchg
pusha
add
adc
xlat
bound
dec
push
mov
jle
sub
repnz
xchg
dec
test
loope
es
out
push
jmp
push
(bad)
mov
cmp
mov
jmp
(bad)
fsubr
stos
jp
mov
shl
cmc
aaa
std
(bad)
call
(bad)
call
icebp
loop
dec
dec
repz
rcr
push
ror
call
mov
nop
pop
jnp
add
ins
sbb
movs
adc
push
adc
cmp
test
(bad)
(bad)
cmp
or
mov
and
pop
lods
outs
in
(bad)
fdivr
aad
(bad)
(bad)
mov
sbb
dec
sbb
jmp
fwait
or
sub
push
stos
shl
pusha
ja
int3
push
dec
out
fadd
pop
add
cmp
test
(bad)
jmp
inc
adc
lock
out
dec
sub
ja
inc
lds
and
fidiv
pop
xchg
jmp
mov
push
icebp
aad
xor
call
retf
push
test
mov
std
xor
sbb
(bad)
(bad)
fdiv
xor
jge
sub
retf
mov
retf
outs
cmp
cmp
enter
cmps
(bad)
jmp
clc
lods
dec
xchg
push
mov
enter
push
mov
loopne
xchg
int3
mov
sbb
(bad)
push
retf
mov
cmps
sub
sbb
data16
cmc
(bad)
(bad)
(bad)
(bad)
dec
or
sbb
xchg
les
adc
jmp
sub
(bad)
(bad)
jmp
cmps
dec
in
xlat
push
scas
inc
mov
xor
loope
fwait
cmp
fdivrp
(bad)
(bad)
mov
push
pop
test
rcl
mov
xlat
mov
mov
scas
(bad)
(bad)
(bad)
call
jo
cmp
fidivr
fidivr
sbb
aaa
jmp
stos
xchg
mov
lods
xor
(bad)
(bad)
(bad)
jmp
sub
stc
adc
(bad)
arpl
sbb
call
jmp
stc
in
shl
(bad)
push
stos
lock
adc
pop
mov
mov
xor
push
jge
cmp
jo
fnstcw
dec
int
(bad)
(bad)
(bad)
dec
cmp
sbb
xor
scas
repnz
pop
popf
les
sbb
or
test
repz
(bad)
inc
test
in
add
enter
cmps
imul
sub
(bad)
jmp
bound
or
add
cmp
jno
cwde
mov
or
mov
out
jecxz
scas
outs
lds
mov
mov
pop
test
or
jl
loopne
jl
repnz
sub
mov
jmp
xchg
and
sbb
rol
retf
push
xor
lods
sbb
adc
aad
jo
mov
test
cmp
mov
xor
(bad)
dec
lods
push
push
adc
rol
out
or
dec
in
push
imul
inc
mov
outs
mov
inc
hlt
adc
inc
bound
(bad)
(bad)
jmp
pop
pop
(bad)
adc
and
dec
(bad)
(bad)
mov
and
ret
ja
cmps
popf
div
loopne
(bad)
jmp
pop
sbb
shl
in
inc
jecxz
pop
stos
movs
sub
dec
arpl
(bad)
mov
stos
mov
pop
sub
enter
(bad)
(bad)
mov
pop
and
pop
jecxz
xchg
imul
xchg
and
and
or
icebp
(bad)
(bad)
out
rcl
or
mov
dec
sbb
clc
es
push
xor
mov
sar
pushw
pop
scas
sbb
out
sub
pusha
ficomp
out
or
sub
je
iret
hlt
nop
jp
cmp
(bad)
dec
data16
pusha
add
lods
jnp
ret
fsub
nop
pop
loop
mov
jecxz
in
(bad)
xchg
(bad)
(bad)
(bad)
(bad)
jge
mov
mov
mov
pop
int
and
sub
movs
push
xor
(bad)
dec
mov
(bad)
jmp
cmp
fbstp
jb
loopne
leave
mov
mov
(bad)
call
pop
jg
jns
push
pop
idiv
or
xchg
in
cli
(bad)
push
jle
mov
shl
dec
(bad)
jmp
fiadd
xor
leave
add
std
ret
sub
icebp
mov
mov
push
cdq
sahf
repnz
jae
sbb
cmps
rol
pop
lock
adc
cmps
jmp
test
pop
call
add
(bad)
(bad)
(bad)
(bad)
fisub
popa
test
dec
mov
xchg
and
push
iret
lock
cmp
ja
cwde
dec
pop
sbb
fcomp
mov
gs
(bad)
(bad)
call
out
xor
mov
test
sub
loope
mov
or
call
mov
xchg
add
stc
repnz
(bad)
arpl
cli
rcl
(bad)
(bad)
mov
dec
cmp
lds
xlat
ds
outs
ja
and
out
cmc
(bad)
(bad)
call
jl
dec
rol
add
sub
xchg
gs
jmp
push
sbb
je
nop
dec
fisttp
push
or
pop
ds
xchg
sbb
sub
(bad)
fcomip
adc
or
inc
pop
fiadd
imul
repz
(bad)
(bad)
dec
pop
shl
mov
inc
lea
xchg
jl
sub
mov
jo
jle
mov
(bad)
call
push
xor
pop
das
lds
or
and
je
or
inc
sbb
push
inc
(bad)
mov
mov
mov
xchg
data16
xchg
sbb
(bad)
jg
pop
sub
mov
add
loopne
xor
fyl2xp1
mov
(bad)
(bad)
jg
or
adc
int3
loopne
push
pop
ds
mov
aam
das
fwait
(bad)
(bad)
(bad)
inc
sbb
(bad)
mov
add
imul
mov
push
push
(bad)
mov
loope
push
and
ins
(bad)
(bad)
(bad)
inc
add
hlt
inc
jno
mov
pushf
pop
adc
xchg
icebp
and
popa
push
add
mov
push
push
pop
mov
mov
push
cwde
test
les
(bad)
inc
outs
lods
mov
push
nop
add
outs
js
in
je
mov
cmp
(bad)
(bad)
out
mov
or
daa
pop
iret
mov
xchg
sub
sub
xlat
cmp
cmp
inc
mov
adc
(bad)
(bad)
inc
popf
jp
inc
test
test
dec
dec
dec
jae
mov
loopne
cwde
(bad)
imul
adc
push
cmp
inc
push
dec
(bad)
and
sti
fs
mov
adc
hlt
fabs
imul
sar
(bad)
xchg
jmp
pop
adc
mov
sub
xchg
imul
(bad)
dec
push
(bad)
jl
push
xor
inc
movs
pop
ds
jnp
in
push
(bad)
mov
clc
fcom
hlt
(bad)
inc
lods
cli
aaa
aaa
mov
or
ror
and
cmc
(bad)
(bad)
(bad)
call
or
push
sub
pop
pop
add
jb
pop
sbb
jns
out
jmp
call
in
ds
mov
ins
add
shl
and
ret
inc
clc
clc
popa
dec
retf
lea
add
cmp
sub
das
clc
(bad)
inc
rcr
inc
jmp
dec
ret
xchg
(bad)
(bad)
(bad)
push
in
xchg
push
repz
dec
mov
in
or
aam
push
xor
or
push
in
xchg
or
stos
adc
mov
mov
pop
mov
lea
clc
dec
fs
mov
add
enter
or
mov
fldenv
hlt
stc
cmp
ret
pop
and
dec
mov
add
mov
mov
dec
xlat
mov
mov
out
sahf
jns
mov
(bad)
call
sbb
xchg
adc
out
inc
jne
push
fsub
call
sbb
(bad)
mov
jnp
mov
add
sbb
fdivr
mov
mov
fcomip
(bad)
call
scas
cld
add
jnp
jmp
sbb
sub
call
xchg
push
sahf
call
ror
test
scas
pop
in
add
jle
test
xor
inc
jle
mov
(bad)
(bad)
jg
push
ret
fsubr
fcomp
fmul
movs
dec
mul
inc
jg
xchg
(bad)
(bad)
push
adc
stos
inc
sub
inc
sar
cmps
sub
fisttp
mov
sbb
cmp
outs
xor
lea
movs
rol
mov
call
std
mov
ret
repnz
test
push
pusha
pop
ins
rcr
or
scas
adc
cld
(bad)
push
or
xor
mov
into
push
rcl
test
aaa
shl
fsubr
loope
mov
lahf
jmp
(bad)
lock
mov
sub
(bad)
fild
cmc
cmp
push
xchg
cmp
lahf
push
test
fsubr
sub
gs
arpl
jge
jl
or
(bad)
call
es
xchg
scas
sar
adc
push
pop
clc
adc
jmp
scas
addr16
mov
fs
jp
mov
push
popa
ja
mov
push
aad
cmp
adc
dec
mov
movs
iret
loope
jmp
sub
mov
mov
adc
mov
push
(bad)
push
out
shl
mov
lock
push
pop
jle
or
push
sets
loop
adc
dec
adc
inc
(bad)
mov
mov
movs
test
stc
call
(bad)
jmp
adc
lods
inc
or
xor
mov
in
ret
(bad)
(bad)
(bad)
push
sahf
movs
lock
call
xor
ins
repnz
mov
ins
push
adc
fldenv
std
iret
adc
test
jno
mov
clc
in
push
sbb
(bad)
(bad)
jmp
and
xchg
mov
es
fadd
ins
pop
cmps
std
mov
cld
push
pusha
fisubr
mov
shl
mov
ins
xchg
shr
fs
sbb
pop
fisubr
icebp
adc
fcom
in
bound
jmp
xchg
ret
inc
xchg
sub
mov
dec
sar
mov
outs
ss
(bad)
(bad)
(bad)
(bad)
jl
xchg
jmp
adc
dec
and
(bad)
out
mov
dec
in
add
mov
jmp
(bad)
(bad)
(bad)
fbld
(bad)
fnstsw
and
es
sbb
int3
mov
ror
call
ror
test
add
jge
xchg
shl
test
cli
push
mov
out
je
enter
fdiv
fcomp
xor
sub
fcmovnbe
jl
imul
in
mov
(bad)
jmp
mov
dec
arpl
mov
in
hlt
jae
mov
movs
jmp
cli
jmp
enter
jmp
xchg
fadd
cld
fmul
cs
add
(bad)
(bad)
cmp
dec
fbstp
fmul
ss
push
dec
add
scas
(bad)
jmp
add
addr16
dec
retf
dec
cwde
mov
push
pop
jg
(bad)
retf
(bad)
(bad)
(bad)
inc
int
retf
cmp
sahf
cdq
out
out
fs
sbb
push
dec
cdq
icebp
(bad)
movs
fsub
ss
ins
(bad)
(bad)
(bad)
jmp
movs
retf
movs
lea
xor
push
sub
enter
sbb
inc
loopne
dec
mov
fadd
loopne
aam
pop
cmp
mov
div
jp
jno
rol
cs
pop
xor
or
mov
scas
pop
inc
mov
es
(bad)
(bad)
(bad)
sti
jmp
push
inc
and
jp
lea
adc
and
cdq
(bad)
(bad)
(bad)
push
out
out
mov
and
out
sahf
mov
and
daa
mov
pop
mov
sbb
cmp
mov
sbb
jb
pop
ror
mov
dec
xor
sbb
dec
daa
in
mov
pop
pop
movs
xor
push
iret
aad
clc
ret
jecxz
fild
test
(bad)
(bad)
dec
rcl
inc
inc
pop
cmp
mov
loope
mov
addr16
cmp
ins
pop
mov
pop
imul
cs
cli
es
cdq
push
in
adc
(bad)
dec
cli
std
cmp
add
xchg
sub
dec
js
cmp
(bad)
jg
call
or
shr
(bad)
nop
lods
xchg
cli
sti
dec
and
icebp
(bad)
(bad)
call
jge
fcmovne
add
shl
dec
fidiv
cmp
loop
adc
add
sub
pop
sbb
jno
mov
mov
fwait
add
push
sar
(bad)
inc
cmps
js
out
push
stos
adc
pop
sub
jle
or
xor
es
nop
(bad)
(bad)
(bad)
inc
cmp
push
sbb
add
retf
cmp
or
ins
mov
ror
lock
sti
pop
daa
cmp
mov
sbb
ja
jmp
sbb
std
out
xor
hlt
dec
mov
aas
push
xchg
cmps
fistp
fadd
fbld
scas
cli
scas
clc
inc
je
sbb
jmp
or
adc
hlt
out
(bad)
(bad)
(bad)
call
aas
mov
jle
(bad)
sub
xchg
push
retf
pop
jmp
mov
jmp
adc
in
push
mov
mov
jnp
or
fcmovnb
(bad)
(bad)
(bad)
(bad)
stc
shl
jle
and
jle
scas
add
pop
shr
add
imul
(bad)
jmp
jle
xor
pop
jecxz
jmp
dec
jae
push
sub
cmp
ins
jl
jo
cmp
add
(bad)
(bad)
jmp
std
pop
push
shr
pop
in
aad
fidiv
fisub
cmps
push
es
outs
push
mov
push
mov
lahf
add
movs
dec
inc
sub
dec
push
xchg
hlt
int
ret
loope
jge
xlat
or
aam
(bad)
(bad)
jmp
lods
and
jg
xchg
mov
push
(bad)
dec
js
aas
retf
icebp
or
mov
test
xchg
mov
cmovns
sub
lahf
xchg
mov
push
xchg
loopne
test
push
(bad)
xor
pop
aaa
jbe
push
ja
fld
nop
mov
mov
scas
dec
jmp
gs
xor
push
jne
(bad)
jmp
xor
test
adc
mov
arpl
xor
(bad)
(bad)
inc
jp
push
cmp
das
inc
iret
xchg
mov
push
and
dec
lahf
out
mov
sub
adc
daa
mov
push
or
hlt
hlt
xor
mov
in
mov
in
cmp
push
adc
pop
mov
iret
mov
retf
lods
leave
out
ins
aam
inc
jb
out
jae
fs
(bad)
(bad)
push
or
retf
popf
in
icebp
mov
mov
push
and
sar
(bad)
jmp
ret
packsswb
push
idiv
dec
scas
fidiv
mov
pop
movs
pop
(bad)
(bad)
mov
cmps
imul
adc
xor
in
xchg
jl
inc
jnp
aaa
pop
(bad)
(bad)
(bad)
call
cmp
cld
jmp
daa
pushf
out
xchg
fwait
adc
adc
(bad)
(bad)
(bad)
inc
pop
add
aaa
pop
test
adc
test
cmps
mov
dec
sub
jecxz
(bad)
(bad)
jmp
mov
sub
popf
mov
mov
in
inc
inc
int
mov
(bad)
(bad)
inc
test
(bad)
mov
rcr
in
loop
sub
ret
sbb
iret
mov
pop
jge
jmp
mov
int3
adc
cs
bound
aam
(bad)
jmp
jno
cmp
sbb
aam
ins
shl
jp
jbe
(bad)
(bad)
(bad)
inc
or
aad
std
mov
sbb
dec
test
mov
cmps
cli
jmp
adc
mov
(bad)
(bad)
(bad)
call
fadd
(bad)
pop
adc
inc
jbe
add
mov
xor
stc
je
iret
inc
les
push
xchg
mov
or
icebp
mov
sar
fstp
sbb
rdmsr
icebp
outs
cmp
(bad)
(bad)
fild
sbb
std
iret
sbb
rcr
xor
in
xchg
in
mov
add
(bad)
call
inc
(bad)
das
pop
and
pop
add
cmp
fistp
add
(bad)
or
(bad)
mov
sahf
test
bound
repz
(bad)
(bad)
(bad)
fistp
sbb
js
sub
pop
and
enter
and
std
cmc
cwde
pushf
mov
inc
jp
loopne
pop
fisttp
popa
adc
call
pop
adc
imul
shr
(bad)
add
dec
add
cmp
xchg
jb
fdivr
(bad)
(bad)
dec
push
popf
enter
mov
addr16
into
dec
adc
push
outs
ret
pushf
loopne
(bad)
out
dec
adc
xchg
(bad)
inc
dec
retf
or
gs
dec
xor
add
or
pop
loopne
pop
sub
jp
jge
test
popa
data16
movs
rol
gs
(bad)
(bad)
(bad)
inc
xlat
sub
or
xchg
ins
cmps
cld
inc
dec
xchg
pop
loopne
repz
mov
cmps
repz
call
mov
mov
xchg
shl
clc
mov
ss
push
scas
jmp
in
fdivr
(bad)
(bad)
inc
cmp
(bad)
xchg
les
outs
lods
add
dec
jbe
lock
out
fild
stos
out
cmp
(bad)
(bad)
call
fyl2xp1
lds
jo
push
adc
push
xor
(bad)
mov
xchg
gs
daa
and
inc
les
out
mov
scas
add
pop
push
cmp
mov
popa
(bad)
(bad)
(bad)
call
fwait
ret
xchg
xor
and
xchg
jne
inc
inc
xchg
daa
in
mov
xor
sub
pop
rcl
push
les
dec
pushf
pushf
cmp
pop
dec
inc
xchg
add
mov
loope
push
(bad)
(bad)
(bad)
call
push
bound
jmp
pop
mov
cmp
pop
hlt
xchg
pop
into
push
jnp
movs
jl
(bad)
(bad)
(bad)
mov
dec
xor
mov
outs
jo
dec
adc
(bad)
(bad)
fcomip
retf
ja
push
das
mov
lea
test
xchg
fdivp
cmps
jns
inc
sbb
outs
clc
sbb
fistp
xor
jno
sub
add
out
(bad)
shr
fmul
cdq
mov
xchg
rdtsc
movs
sahf
sti
or
cmp
mov
cmp
adc
(bad)
jg
jb
pop
aad
xchg
sbb
add
mov
fild
outs
ins
addr16
sbb
in
sbb
ins
pushf
repz
jae
mov
je
sub
les
mov
mov
outs
fldenv
push
sar
pop
ins
mov
inc
sbb
out
popf
nop
cmp
(bad)
fistp
push
jne
mov
retf
js
and
cmp
aaa
ja
or
jbe
je
sub
stos
mov
or
dec
mov
mov
icebp
adc
(bad)
(bad)
push
or
push
sbb
sti
jge
xchg
push
xor
inc
dec
mov
ja
sbb
xchg
sbb
stc
repnz
xchg
call
ins
cmp
fdivr
(bad)
(bad)
push
jne
mov
mov
cmp
std
inc
mov
cli
fwait
dec
fdiv
call
loop
cmp
(bad)
call
es
leave
push
pop
and
js
sbb
xchg
aaa
stc
ret
pop
mov
jge
push
rcr
(bad)
jmp
mov
retf
push
pop
add
(bad)
(bad)
(bad)
(bad)
mov
xor
inc
test
mov
pandn
or
sti
mov
shl
adc
(bad)
(bad)
jmp
mov
iret
pop
aam
or
jns
(bad)
pop
mov
xchg
test
adc
dec
call
inc
mov
mov
cmps
mov
ja
(bad)
out
outs
aam
mov
jg
cs
out
fwait
push
mov
xchg
aas
stos
fwait
js
ret
(bad)
jmp
xor
ja
stc
add
push
stos
jle
clc
pop
cmp
add
or
dec
add
shr
sub
loope
ins
jae
(bad)
(bad)
(bad)
(bad)
push
js
dec
jo
loop
sub
scas
ret
in
cmp
xchg
or
shr
xor
(bad)
cmp
neg
dec
not
or
inc
mov
int3
popf
std
fs
add
push
sub
arpl
xchg
cli
add
cli
sub
mov
fsubr
movs
retf
test
(bad)
(bad)
dec
xchg
inc
sub
nop
xchg
(bad)
push
sub
sub
in
sub
and
cmp
cs
or
cmp
lock
jmp
mov
inc
add
push
sbb
loopne
jns
sub
daa
mov
(bad)
(bad)
(bad)
(bad)
cmp
out
arpl
cmp
xchg
clc
and
pop
and
xor
add
(bad)
jg
test
mov
fisubr
jns
loopne
je
arpl
inc
sub
sub
cmp
aad
imul
rcl
xor
(bad)
pop
add
mov
dec
lea
(bad)
(bad)
fisubr
ret
imul
sbb
das
sub
add
dec
lahf
lahf
ins
cmp
adc
(bad)
(bad)
dec
clc
je
push
call
cmp
jmp
dec
inc
(bad)
(bad)
(bad)
dec
fsubrp
ret
ret
push
cmp
mov
xor
sbb
(bad)
or
push
jmp
xchg
movs
(bad)
fs
ss
or
ficom
push
cmp
xchg
iret
inc
jecxz
(bad)
call
cs
xor
inc
lock
pop
sub
mov
push
(bad)
(bad)
in
mov
or
mov
dec
rol
test
mov
ins
inc
add
jle
(bad)
(bad)
jmp
mov
mov
jb
scas
mov
(bad)
cwde
mov
sub
mov
shr
cli
inc
xlat
cmp
fisubr
dec
mov
clc
jp
(bad)
(bad)
(bad)
jg
gs
sub
call
cmp
and
mov
sar
fisub
(bad)
(bad)
(bad)
push
mov
outs
dec
pop
mov
addr16
(bad)
adc
fwait
mov
xchg
icebp
call
out
pop
shl
mov
arpl
cmp
push
(bad)
(bad)
(bad)
push
cmp
cmp
lds
addr16
jns
pushf
mov
fdivr
std
xor
stos
xchg
outs
lock
(bad)
(bad)
dec
jb
cdq
(bad)
popf
cmp
xchg
mov
mov
jno
xchg
ss
outs
xor
(bad)
(bad)
(bad)
inc
shl
(bad)
pop
test
outs
popf
(bad)
sub
xchg
push
out
xchg
or
dec
mov
mov
(bad)
jmp
jb
mov
or
sub
sahf
out
push
mov
push
mov
repz
mov
jg
not
clc
adc
scas
sub
aad
stos
dec
or
or
xor
mov
std
cmp
inc
clc
sub
out
test
sar
(bad)
jmp
push
sti
sub
fwait
and
add
popa
retf
(bad)
xor
ds
ret
lods
fdiv
inc
jg
dec
(bad)
nop
add
int3
pop
add
(bad)
inc
inc
mov
inc
dec
outs
mov
jecxz
jnp
cmp
xchg
jg
xchg
mov
call
jb
mov
inc
scas
fst
stc
jle
fiadd
adc
xor
push
call
scas
and
push
std
jmp
xchg
mov
lea
sbb
lea
mov
push
mov
stos
lock
fmul
xor
mov
xchg
out
mov
push
scas
call
add
jmp
movs
inc
dec
xor
shl
push
not
jmp
push
or
cmp
xchg
inc
std
aad
(bad)
scas
das
addr16
and
add
(bad)
adc
inc
outs
xor
jg
in
cmp
xor
inc
repnz
(bad)
(bad)
jmp
aam
jmp
or
mov
xchg
and
cmp
(bad)
mov
scas
mov
xchg
push
jp
aad
and
xchg
pop
scas
inc
arpl
(bad)
(bad)
push
scas
aas
pop
xor
pop
and
xchg
out
nop
pop
xlat
je
jne
sar
(bad)
(bad)
inc
push
dec
jp
dec
inc
xor
es
dec
dec
retf
fdiv
call
cmp
mov
loop
dec
loopne
fcomp
test
cmp
jg
hlt
inc
pop
sub
adc
pushf
sub
pop
xor
(bad)
(bad)
jmp
into
loopne
fistp
xor
push
out
leave
sub
push
addr16
shr
jge
(bad)
(bad)
(bad)
dec
je
ds
neg
int3
inc
ficom
adc
pop
frstor
frndint
jmp
rcr
ss
and
clc
sub
stc
pop
pop
cmp
inc
push
ins
adc
pop
inc
bound
sbb
xor
call
call
fiadd
test
iret
dec
fisttp
add
das
nop
mov
(bad)
(bad)
(bad)
mov
mov
test
mov
sub
or
cmp
xchg
xchg
cmp
lods
mov
sbb
push
jge
lea
lock
jmp
mov
and
imul
popa
popf
fiadd
ficomp
stos
or
out
aaa
xchg
mov
xor
mov
data16
(bad)
call
dec
test
std
pusha
pop
mov
push
add
push
repz
rcl
push
xchg
jg
icebp
push
dec
sub
jno
xchg
retf
jne
push
test
add
jg
(bad)
jns
adc
inc
pop
dec
ins
movs
mov
pusha
scas
jg
inc
add
fdiv
sbb
(bad)
(bad)
(bad)
ds
mov
cmps
adc
or
out
mul
ins
test
add
sbb
push
clc
or
(bad)
(bad)
jmp
add
es
cmp
unpckhps
mov
neg
mov
mov
push
jge
sbb
push
mov
inc
fcomip
(bad)
(bad)
stc
fistp
inc
inc
pop
(bad)
or
pushf
push
fidivr
pop
xchg
test
(bad)
push
les
dec
inc
cwde
jb
mov
out
pop
in
cmp
jmp
and
push
inc
xchg
jmp
movs
das
and
popf
(bad)
(bad)
(bad)
mov
xchg
stc
dec
popa
call
jecxz
jno
jmp
inc
jnp
bound
(bad)
mov
(bad)
sbb
lods
jle
dec
pop
mov
pop
push
clc
adc
call
lods
lods
push
cmp
jae
pop
jb
jl
pop
loopne
push
cld
mov
(bad)
(bad)
mov
xor
out
pop
or
xchg
rcl
ret
cmps
(bad)
mov
std
(bad)
dec
and
sbb
cmps
mov
mov
cmp
cli
push
and
add
or
fld
pop
cmp
fs
push
adc
add
iret
aam
dec
test
mov
stos
cmps
add
mov
xchg
mov
push
inc
add
jl
pop
jl
jp
loop
add
xor
sub
push
inc
sbb
mov
sahf
ja
xchg
and
push
sbb
je
or
jle
(bad)
(bad)
call
iret
(bad)
cmp
and
fwait
pop
(bad)
xchg
sbb
sub
or
jmp
(bad)
(bad)
(bad)
(bad)
js
out
das
retf
mov
cdq
cmp
sub
dec
ss
pop
retf
mov
pop
inc
call
pop
out
and
push
mov
ja
(bad)
(bad)
mov
outs
test
adc
out
xlat
adc
ffreep
and
(bad)
mov
jb
inc
and
jmp
fs
retf
mov
lds
jno
(bad)
(bad)
inc
mov
and
sbb
mov
adc
jae
mov
mov
jmp
(bad)
(bad)
jmp
aas
xlat
mov
inc
stos
into
(bad)
out
pop
aas
and
in
jle
(bad)
pop
jge
cmps
(bad)
push
inc
(bad)
(bad)
fdiv
neg
fnsave
les
(bad)
fisttp
test
jecxz
retf
pop
mov
sbb
je
(bad)
jg
(bad)
jmp
icebp
ret
push
jmp
(bad)
fstp
inc
xchg
popa
jno
add
dec
cmps
sub
leave
das
dec
pop
cwde
xchg
push
in
test
and
dec
fsub
mov
(bad)
(bad)
dec
sbb
hlt
sbb
adc
adc
(bad)
fsub
fidiv
(bad)
(bad)
dec
mov
punpckhbw
je
test
lods
xor
jle
xchg
or
push
test
xchg
leave
(bad)
(bad)
xlat
xchg
jmp
jp
push
ins
stos
int3
shl
inc
mov
pop
call
sub
push
push
inc
scas
xchg
sbb
ret
int3
cli
adc
es
(bad)
jmp
jae
leave
jo
imul
inc
mov
push
aam
loop
xchg
cmc
push
icebp
mov
in
(bad)
(bad)
(bad)
jp
push
mov
mov
(bad)
std
lea
lods
les
test
xchg
je
(bad)
(bad)
(bad)
dec
dec
cmc
and
iret
frstor
pusha
and
jns
push
loope
jmp
leave
adc
js
push
das
clc
scas
pop
dec
pushf
sub
lods
imul
xor
std
retf
push
cld
(bad)
(bad)
cmp
jns
loope
and
mov
imul
sbb
and
mov
mov
jmp
xchg
sub
imul
sar
(bad)
inc
jno
mov
movs
mov
push
and
fimul
sar
mov
jge
(bad)
jge
jg
(bad)
jg
mov
stos
mov
scas
test
push
mov
in
icebp
push
(bad)
jmp
mov
in
dec
and
push
mov
scas
and
cli
sub
or
and
(bad)
(bad)
call
push
ret
cmp
cmps
inc
sbb
or
inc
(bad)
sub
xchg
xchg
dec
inc
jbe
mov
jmp
dec
dec
repnz
ja
mov
cmp
test
cmp
(bad)
call
cmp
sub
sub
xchg
xchg
and
ror
mov
mov
out
inc
movs
mov
and
dec
scas
es
(bad)
push
cmp
(bad)
jg
ins
mov
inc
xor
and
clc
xchg
inc
iret
push
or
lock
call
(bad)
sbb
add
pushf
mov
lds
(bad)
(bad)
jg
call
mov
pop
push
test
pop
fld
loop
dec
jecxz
in
jecxz
mov
ins
shl
shr
loop
push
ja
bound
scas
cmc
(bad)
mov
into
mov
cmp
cmp
jg
int
aaa
repnz
lds
cmp
imul
add
(bad)
(bad)
(bad)
call
add
pop
out
into
or
sti
mov
inc
shr
xchg
(bad)
add
dec
jecxz
mov
out
clc
(bad)
(bad)
call
arpl
and
adc
aam
push
push
push
push
stos
jno
inc
(bad)
int
lods
and
(bad)
inc
ja
lds
mov
mov
popa
pop
pop
push
in
movs
scas
das
sar
aam
xor
int3
dec
jp
aas
aaa
xchg
mov
push
cli
inc
mov
addr16
sub
(bad)
fwait
xor
push
fwait
sub
sub
xchg
pop
(bad)
jmp
sbb
jbe
pop
pop
cs
dec
or
or
sub
mov
cmp
arpl
jmp
scas
jecxz
(bad)
(bad)
(bad)
dec
pop
jno
xchg
jne
sub
cmc
pop
mov
and
pushf
xchg
loop
pushf
adc
call
mov
and
shl
jmp
idiv
ror
addr16
(bad)
(bad)
(bad)
(bad)
dec
cmc
xchg
dec
add
or
dec
mov
pop
retf
push
mov
jb
xchg
mov
lea
add
mov
fld
and
(bad)
call
test
imul
enter
ds
or
test
adc
dec
lods
(bad)
push
xor
cli
call
mov
jmp
call
out
mov
dec
or
pop
lods
imul
daa
mov
int
ror
(bad)
call
pop
mov
jmp
push
in
shr
lods
jb
xor
(bad)
pop
shl
(bad)
(bad)
push
cmc
fldenv
shl
jmp
sbb
jge
xchg
or
or
and
mov
in
sub
pop
das
xor
dec
imul
jmp
sbb
clc
in
ja
mov
add
imul
(bad)
jg
icebp
xor
dec
jmp
pop
push
cmps
addr16
mov
mov
(bad)
(bad)
inc
repz
cmps
repz
sti
rol
or
gs
int
scas
(bad)
(bad)
call
dec
xchg
sbb
pop
inc
fwait
mov
aam
fild
pop
mov
inc
mov
call
(bad)
inc
mov
adc
repnz
(bad)
jo
inc
repnz
(bad)
(bad)
call
inc
xchg
mov
out
sar
jbe
xchg
rcr
fsubr
mov
jl
(bad)
(bad)
(bad)
jg
jo
retf
sub
add
lahf
mov
fnsave
add
nop
mov
aam
call
je
pop
push
jno
jp
or
mov
jle
aaa
mov
adc
out
fisub
stos
stc
adc
pop
xor
daa
adc
loop
outs
cli
(bad)
dec
mov
(bad)
mov
xchg
mov
sbb
ret
jecxz
cmp
mov
pusha
inc
pop
(bad)
(bad)
(bad)
dec
sbb
cmp
pop
push
push
cmps
jae
stos
ss
test
enter
ins
sbb
movs
test
aas
(bad)
(bad)
(bad)
push
push
xchg
add
jg
inc
rcr
mov
sbb
jo
mov
sub
sbb
or
add
mov
(bad)
(bad)
mov
sub
mov
in
cmp
mov
lds
push
add
into
push
sub
in
jmp
call
xor
fbstp
(bad)
aam
fs
mov
(bad)
(bad)
(bad)
dec
sbb
push
aad
jmp
jge
aaa
or
jecxz
xor
and
movs
add
(bad)
fcomip
dec
div
sbb
pusha
ja
push
push
push
jecxz
and
data16
call
dec
push
imul
hlt
xchg
(bad)
fcom
mov
inc
or
(bad)
(bad)
(bad)
inc
stos
imul
sbb
rcl
sbb
dec
fsubr
movs
out
jno
or
adc
ret
(bad)
(bad)
(bad)
jmp
ins
sub
sbb
sbb
call
add
aas
and
push
enter
(bad)
dec
mov
adc
cmp
inc
and
mov
fs
cli
jmp
call
pop
mov
iret
jns
(bad)
sti
ja
addr16
pop
add
mov
scas
adc
jle
push
(bad)
(bad)
(bad)
call
xor
stos
test
in
adc
pop
jp
push
add
nop
mov
adc
das
sbb
(bad)
(bad)
push
add
jne
fist
test
(bad)
(bad)
leave
sub
mov
into
out
daa
(bad)
cmps
stos
or
ins
stc
gs
(bad)
cdq
pop
mov
jb
addr16
(bad)
(bad)
(bad)
(bad)
jl
inc
addr16
mov
js
xchg
pop
pop
fbstp
push
popf
sbb
inc
mov
stc
mov
into
jb
das
clc
push
popa
and
jp
mov
fidiv
iret
aas
enter
pop
nop
loop
cwde
pop
jbe
(bad)
jmp
fcomp
stc
sar
sbb
gs
pop
xor
(bad)
(bad)
jmp
pop
jns
adc
sbb
imul
cdq
and
lock
add
cmp
xchg
test
(bad)
inc
nop
out
ins
jle
sub
inc
push
mov
loope
jle
cli
sub
fdivr
(bad)
push
mov
(bad)
call
lds
mov
push
cmp
or
popf
(bad)
scas
es
sahf
and
(bad)
jmp
pushf
mov
in
sar
fnstsw
mov
cld
cmp
mov
mov
int
test
ds
xchg
(bad)
xchg
ins
out
outs
(bad)
(bad)
(bad)
jmp
lods
mov
mov
lea
lds
adc
cs
movs
shl
or
adc
cmps
(bad)
(bad)
(bad)
push
xchg
out
out
mov
dec
(bad)
ss
idiv
dec
sub
(bad)
(bad)
jg
js
out
cmc
mov
and
push
dec
or
clc
retf
add
sbb
test
scas
xchg
pop
cli
(bad)
call
aad
es
jmp
pushf
mov
mov
adc
mov
(bad)
out
fs
jmp
punpcklbw
pop
je
clc
jbe
lods
movs
(bad)
mov
fild
xchg
jge
(bad)
(bad)
call
pop
jecxz
adc
pop
adc
call
xchg
cmps
adc
xchg
cmps
ret
arpl
sub
push
fdivp
add
(bad)
(bad)
inc
hlt
repnz
int3
sbb
jmp
push
mov
leave
loop
mov
jb
mov
into
(bad)
push
and
push
gs
mov
(bad)
(bad)
(bad)
push
xchg
inc
std
mov
dec
mov
push
push
mov
jae
sub
(bad)
and
(bad)
(bad)
jmp
xchg
aad
inc
fcom
mov
test
test
fistp
push
pusha
jne
leave
fs
iret
dec
xlat
xchg
xor
push
cmp
add
stc
ja
jns
inc
jl
pop
movs
clc
nop
lds
xchg
add
xor
es
mov
outs
mov
(bad)
(bad)
(bad)
fadd
cmp
xchg
adc
push
inc
pop
retf
adc
and
stos
aad
push
les
(bad)
xchg
(bad)
jg
(bad)
jle
dec
inc
cmp
pop
sbb
push
and
inc
stos
sti
jp
mov
cmps
(bad)
(bad)
(bad)
push
pop
sub
inc
out
aas
jecxz
xchg
mov
mov
push
jo
mov
fucomip
sbb
(bad)
dec
mov
loopne
jmp
ss
rol
jp
das
jno
mov
ja
repnz
adc
data16
push
call
sahf
cli
(bad)
(bad)
(bad)
fld
cmps
jbe
xchg
mov
in
ret
fild
adc
std
popa
in
jae
call
fistp
stc
mov
icebp
outs
mov
add
(bad)
mov
inc
mov
cmp
sub
imul
sub
(bad)
jmp
mov
scas
je
adc
jns
and
pop
std
adc
imul
std
adc
(bad)
mov
inc
jb
lods
ins
cmp
mov
xchg
mov
mov
push
xchg
(bad)
cs
in
cmp
jmp
xlat
popa
aad
mov
ja
(bad)
(bad)
(bad)
dec
inc
push
jmp
mov
mov
jmp
cld
clc
dec
hlt
dec
ret
(bad)
(bad)
jns
in
xor
js
ss
push
pop
push
fdiv
inc
jl
jl
rcl
(bad)
mov
lahf
inc
pushf
and
adc
shl
fmul
push
aam
int
sar
repz
add
inc
mov
jmp
mov
adc
jmp
ror
push
nop
ja
pop
inc
sbb
cmp
aam
aad
jo
mov
sar
(bad)
push
xor
ins
cs
inc
xchg
jmp
movs
pop
daa
jle
pushf
pop
lods
(bad)
push
fwait
jp
inc
sub
adc
mov
cdq
jne
test
mov
mov
mov
adc
push
imul
or
icebp
es
xor
in
popa
pop
mov
(bad)
(bad)
jg
in
je
adc
xor
cdq
sbb
not
adc
cmc
scas
adc
xchg
add
fcomip
dec
nop
loop
je
sbb
js
movs
(bad)
and
or
stos
(bad)
(bad)
dec
push
mov
push
imul
pusha
xor
xor
mov
nop
sub
fcmovnbe
(bad)
jg
call
arpl
je
pop
sub
mov
pusha
call
mov
loopne
(bad)
call
mov
adc
icebp
push
mov
mov
jg
push
aam
or
(bad)
call
xor
adc
pop
scas
daa
xchg
fcomp
loop
(bad)
dec
sbb
out
sbb
ja
(bad)
(bad)
(bad)
push
add
cmp
out
in
push
mov
call
dec
mov
dec
fs
(bad)
(bad)
(bad)
inc
aam
and
pop
mov
inc
test
sbb
pop
(bad)
fcos
scas
cli
push
xchg
mov
in
inc
pop
cmps
and
out
pop
stos
popa
push
dec
mov
dec
int
(bad)
(bad)
jmp
pop
adc
xchg
cmp
ret
mov
sub
lods
cli
xchg
push
cmps
jp
pop
idiv
(bad)
(bad)
inc
into
inc
or
push
mov
dec
stos
shl
jbe
or
dec
adc
sub
call
fst
lods
jns
and
jmp
fcom
iret
cmps
(bad)
(bad)
(bad)
(bad)
fisttp
and
iret
stc
pop
push
sub
lods
cmovb
aas
xchg
mov
push
dec
and
fdivrp
(bad)
(bad)
(bad)
clc
ret
cmps
in
mov
add
xchg
sahf
jecxz
cmp
(bad)
(bad)
jns
jl
ds
push
push
fistp
(bad)
daa
inc
lock
adc
ds
pop
push
cmp
and
cmp
or
aad
mov
scas
js
cmc
pop
test
pop
or
jno
sub
sti
dec
pop
ss
pushf
sub
aam
jmp
and
hlt
sub
sbb
sar
call
ins
aaa
lahf
jmp
dec
js
cwde
dec
arpl
repnz
mov
(bad)
(bad)
jg
or
sbb
sahf
mov
jno
xchg
loope
nop
cmp
jmp
xor
arpl
inc
or
push
push
mov
(bad)
(bad)
push
jg
xchg
adc
inc
lods
add
mov
sbb
out
out
nop
jmp
(bad)
mov
nop
mov
std
rol
arpl
(bad)
int
add
repz
(bad)
(bad)
dec
xchg
mov
movs
in
fcom
(bad)
bound
ret
imul
cmp
(bad)
(bad)
(bad)
dec
ins
sahf
retf
test
push
and
push
aaa
out
es
pop
fincstp
popf
push
fnsave
repnz
stc
mov
(bad)
(bad)
push
mov
(bad)
inc
inc
repnz
rcr
imul
out
sub
ds
(bad)
(bad)
(bad)
mov
movs
and
repnz
push
sub
sti
iret
in
gs
mov
jne
xchg
cmp
leave
pop
or
push
(bad)
sub
jecxz
mov
sbb
bound
push
lea
(bad)
(bad)
(bad)
inc
mul
ins
aas
push
push
or
(bad)
jmp
sub
clc
dec
jg
fwait
and
dec
js
sbb
icebp
hlt
cmp
jo
jmp
movs
enter
push
xor
add
scas
loope
data16
(bad)
(bad)
inc
mov
scas
mov
cli
lods
xchg
aad
dec
pop
retf
adc
cmps
(bad)
pop
mov
inc
push
jo
(bad)
fwait
sub
cmps
adc
scas
and
arpl
popa
popf
xchg
in
mov
inc
test
gs
xchg
mov
sbb
adc
sbb
adc
(bad)
(bad)
call
repz
fbstp
jb
movs
adc
inc
adc
fdivr
xor
cs
dec
lds
loope
sbb
pushf
inc
iret
imul
and
inc
mov
retf
sub
jmp
nop
pop
or
jp
jle
(bad)
(bad)
(bad)
jmp
(bad)
je
jo
fbld
xchg
jg
sbb
and
cmps
dec
mov
test
add
pop
add
test
jno
stos
and
(bad)
fs
pop
mov
(bad)
(bad)
(bad)
jl
out
push
jo
fcmovbe
cmp
sti
xchg
fcomi
sbb
in
inc
sbb
mov
shl
mov
mov
jmp
jl
and
or
lea
test
mov
call
mov
repnz
inc
(bad)
(bad)
call
adc
pop
or
sub
aam
mov
fcomp
aam
cmp
and
cwde
mov
arpl
push
ins
js
add
jge
cmp
(bad)
mov
or
outs
sahf
arpl
sahf
movs
icebp
sub
enter
inc
retf
outs
cli
in
es
mov
inc
lods
pop
mov
adc
(bad)
(bad)
call
icebp
xor
sahf
mov
loopne
push
sub
call
mov
(bad)
jmp
call
push
loop
js
aas
xlat
int
(bad)
dec
ds
and
mov
(bad)
stc
test
xor
sahf
and
cs
int
inc
inc
pop
mov
adc
inc
cld
jg
inc
imul
rcr
jl
dec
aad
or
xor
pop
stos
(bad)
(bad)
push
lock
add
dec
bnd
or
shl
in
(bad)
cs
sti
pop
(bad)
(bad)
push
mov
(bad)
push
mov
test
aas
jb
inc
push
mov
xor
xchg
(bad)
(bad)
(bad)
push
inc
jns
xchg
dec
dec
scas
div
sbb
pop
sahf
ins
sbb
push
mov
(bad)
inc
movs
jne
mov
jg
add
cmp
push
adc
push
adc
fdivrp
(bad)
and
(bad)
(bad)
(bad)
jmp
dec
shr
mov
cmp
fsub
pop
outs
aam
cs
popf
pop
adc
ins
(bad)
aaa
cld
(bad)
in
(bad)
cmps
enter
in
add
dec
sub
adc
or
add
push
jno
adc
call
std
cmp
mov
sbb
dec
inc
out
test
pop
dec
jo
in
imul
(bad)
cld
cmps
cmp
xchg
push
pusha
popa
sbb
(bad)
repz
jp
xchg
shr
out
sbb
(bad)
(bad)
call
std
movs
mov
sub
out
sub
(bad)
lea
cli
pop
jecxz
repnz
dec
ja
mov
xchg
sbb
lods
ret
or
or
adc
(bad)
jg
jmp
pop
inc
jmp
dec
les
or
cld
daa
dec
xchg
cdq
adc
(bad)
fs
test
repnz
push
mov
jne
icebp
das
push
cld
(bad)
dec
(bad)
or
cmps
(bad)
stos
push
dec
pusha
cwde
xchg
dec
inc
in
mov
(bad)
(bad)
(bad)
jl
adc
jb
jbe
shr
mov
loopne
mov
ins
pop
data16
push
pop
xchg
jg
in
data16
loope
cwde
(bad)
(bad)
(bad)
push
pop
fadd
ss
inc
xor
cmp
aad
add
in
bound
jecxz
(bad)
(bad)
inc
inc
ds
test
mov
cmp
xchg
xchg
inc
test
mov
and
(bad)
(bad)
jg
jle
sahf
or
xor
mov
jmp
fidiv
mov
popf
pusha
adc
inc
sub
clc
inc
mov
inc
lock
pop
sbb
add
and
retf
call
dec
mov
aaa
shl
aaa
push
repnz
sbb
mov
pop
dec
xor
dec
shl
pusha
sbb
movs
and
pushf
or
in
movs
push
cmps
sbb
xlat
ins
stc
dec
ss
int
dec
test
call
dec
xor
dec
loopne
adc
iret
fsubr
sbb
hlt
out
xor
xlat
das
clc
(bad)
jmp
or
xor
mov
out
mov
hlt
mov
bound
(bad)
(bad)
(bad)
dec
fst
aad
sti
hlt
out
js
sub
dec
jae
sbb
shl
es
hlt
xchg
cs
shl
xor
outs
fadd
scas
inc
push
gs
push
xchg
daa
xor
(bad)
(bad)
(bad)
(bad)
jmp
out
add
out
adc
cmp
xchg
pop
in
pop
lods
repnz
iret
loopne
(bad)
push
xchg
(bad)
(bad)
(bad)
(bad)
cmp
or
jge
pop
in
and
sar
out
jp
mov
dec
scas
scas
push
mov
or
or
xchg
mov
fistp
xchg
repz
sahf
sbb
(bad)
(bad)
jmp
popa
dec
adc
pushf
pop
jae
aas
in
sub
js
(bad)
mov
shr
xchg
jmp
lock
daa
dec
(bad)
(bad)
(bad)
inc
aad
dec
(bad)
xchg
out
sahf
ror
and
(bad)
and
imul
outs
jns
test
mov
inc
mov
fidiv
add
sbb
rdtsc
mov
jno
cmps
dec
push
cmps
(bad)
(bad)
(bad)
(bad)
dec
movs
dec
xchg
bound
mov
xchg
(bad)
popa
leave
and
pop
jne
xchg
rcr
sahf
not
(bad)
(bad)
call
test
fldcw
cmp
loope
jg
es
mov
cmc
xchg
jne
mov
sub
iret
pop
out
test
cmc
jle
mov
xcrypt-cfb
cmps
movs
loopne
jg
push
imul
push
loop
jecxz
cs
cmps
dec
push
shl
cli
xor
out
xchg
(bad)
(bad)
call
sub
cwde
movs
(bad)
(bad)
and
jnp
addr16
mov
je
mov
cli
(bad)
(bad)
(bad)
mov
jmp
add
in
or
mov
fisttp
push
pop
mov
(bad)
(bad)
jmp
sub
out
pop
fsubr
pop
pop
pop
fsub
daa
aaa
(bad)
mov
sti
into
sub
pop
retf
(bad)
(bad)
dec
pop
push
imul
loop
(bad)
add
div
enter
es
(bad)
(bad)
inc
pop
test
mov
mov
pusha
mov
inc
mov
mov
mov
xchg
retf
(bad)
(bad)
jmp
(bad)
xchg
push
add
stos
js
mov
xchg
and
pop
push
adc
lods
retf
(bad)
(bad)
fldcw
ja
retf
pusha
add
(bad)
fwait
or
sub
hlt
(bad)
in
xchg
mov
sbb
cmps
nop
push
out
sahf
hlt
xchg
sahf
test
(bad)
call
in
ds
pop
push
in
out
adc
shl
das
in
cmps
mov
(bad)
pop
fistp
(bad)
dec
aas
xor
or
popf
leave
pop
dec
xchg
nop
xchg
iret
adc
in
adc
xor
jg
dec
ss
pop
daa
push
xlat
fs
clc
jge
ret
dec
adc
(bad)
jmp
loope
imul
and
dec
(bad)
jmp
shl
jp
imul
loop
mov
cld
push
out
sbb
jae
mov
rcl
inc
xor
movs
ds
xor
push
xor
movzx
mov
dec
mov
mov
xor
das
clc
jg
cwde
inc
fcom
sbb
js
xor
aas
mov
std
(bad)
(bad)
call
sbb
pop
fidiv
int3
aas
fpatan
rcl
inc
add
or
call
aam
test
call
(bad)
(bad)
(bad)
inc
sub
mov
(bad)
and
or
stos
adc
cmp
or
xor
sub
inc
(bad)
(bad)
(bad)
jmp
retf
loop
stos
stos
push
mov
push
mov
imul
pusha
adc
(bad)
(bad)
call
cmp
lahf
jle
xchg
push
int
fcomip
and
pop
loopne
push
sbb
mov
jmp
stos
pop
cmps
sub
(bad)
jmp
sub
inc
or
mov
dec
loope
xlat
cmc
jnp
dec
pop
test
add
mov
add
and
xor
lods
mov
jmp
je
push
pop
jle
pop
fstp
inc
es
pop
push
push
out
jg
cmp
dec
retf
or
jmp
push
aaa
arpl
scas
rcl
add
push
(bad)
jmp
adc
aam
or
(bad)
push
pop
cmc
(bad)
jmp
mov
xchg
mov
push
sar
in
(bad)
(bad)
inc
mov
es
and
fldenv
inc
fisub
in
pop
leave
jmp
inc
cmp
dec
loop
loop
sahf
retf
stc
scas
(bad)
jge
test
xor
adc
push
mov
loopne
(bad)
(bad)
mov
xchg
or
pop
scas
jmp
test
call
in
mov
(bad)
(bad)
call
out
mov
ds
cwde
jne
xchg
xor
jge
push
stos
lods
cmp
das
push
fwait
popa
cmps
add
sbb
jbe
repz
rep
mov
add
pushf
inc
(bad)
(bad)
(bad)
jmp
and
ficom
rcr
lea
cmp
cmps
or
mov
sbb
hlt
inc
dec
inc
(bad)
(bad)
call
sar
push
mov
inc
movs
sub
jbe
gs
ret
mov
out
sti
(bad)
dec
out
inc
xchg
imul
or
add
xlat
data16
push
into
popa
nop
(bad)
(bad)
(bad)
(bad)
cmp
and
lahf
addr16
cmc
loop
mov
inc
cmc
lea
seto
call
std
jmp
inc
push
outs
shr
jno
test
or
xor
push
jo
xor
fcomip
push
outs
repnz
jb
and
sti
sbb
stc
dec
xor
and
sub
popa
aad
sar
(bad)
dec
xchg
mov
repz
push
stos
push
retf
ds
inc
loope
ret
fidivr
mov
pop
hlt
call
mov
xlat
pop
fcmovbe
sub
jg
fisubr
adc
or
(bad)
jmp
ffreep
sbb
cmp
mov
outs
in
retf
mov
(bad)
(bad)
call
cmp
jae
inc
dec
and
or
test
lock
nop
stc
mov
add
(bad)
call
adc
mov
mov
iret
mov
(bad)
(bad)
push
adc
loop
push
mov
add
xor
inc
fdiv
add
adc
adc
inc
push
push
push
je
lock
mov
mov
(bad)
(bad)
(bad)
push
xlat
ja
push
in
xor
jno
into
add
pop
ins
sub
mov
pop
int3
es
inc
jge
pop
loopne
mov
mov
or
(bad)
(bad)
(bad)
dec
push
fnstcw
or
mov
mov
mov
jo
aaa
push
mov
repz
sub
cmp
(bad)
(bad)
in
das
sbb
pop
mov
stos
out
add
(bad)
mov
les
outs
cwde
dec
inc
adc
mov
jno
cmp
dec
into
inc
xor
ret
add
inc
add
or
test
push
call
add
jl
dec
xor
and
mov
xchg
scas
mov
cmp
adc
sub
mov
fstp
mov
in
push
sbb
(bad)
(bad)
(bad)
jg
adc
mov
call
sub
daa
outs
neg
cmp
sbb
push
sar
pop
xchg
(bad)
lock
out
and
push
cmp
movs
and
inc
(bad)
(bad)
(bad)
push
outs
add
cmc
ret
xchg
loopne
daa
cmp
sub
adc
call
inc
cdq
(bad)
call
std
or
enter
popa
fisub
cs
cmp
sbb
(bad)
call
popa
mov
inc
xchg
inc
mov
xor
fsub
aaa
mov
mov
mov
sbb
in
and
fcom
fsubr
stos
imul
sbb
fdivp
les
rol
sub
inc
inc
push
loop
in
sub
push
fld
cmp
je
xchg
mov
pushf
in
bound
inc
sub
call
call
cmps
imul
sbb
xor
test
(bad)
(bad)
inc
pusha
les
popa
xchg
hlt
in
inc
mov
daa
push
xchg
(bad)
mov
dec
test
stos
iret
push
mov
arpl
fild
ins
xor
cli
mov
inc
jns
(bad)
(bad)
mov
xor
(bad)
adc
inc
xchg
jnp
sbb
mov
(bad)
(bad)
(bad)
push
loopne
int
not
and
push
jns
scas
jns
call
sub
lock
adc
adc
xor
fisttp
sti
sti
clc
cs
aad
push
pusha
xchg
cmps
dec
(bad)
inc
(bad)
(bad)
dec
xchg
pop
outs
icebp
pop
aam
dec
jmp
lea
mov
cmps
call
call
lahf
dec
mov
mov
sub
add
add
in
loop
call
call
xor
repz
and
jp
aas
cmps
and
(bad)
(bad)
push
shl
lock
xchg
cli
test
inc
sbb
int3
lea
cmp
sbb
(bad)
call
or
pop
inc
dec
and
sbb
mul
std
mov
jecxz
(bad)
(bad)
dec
xor
dec
mov
sti
std
sub
fs
mov
adc
ss
sub
(bad)
(bad)
inc
sti
jbe
shl
cmp
jl
(bad)
mov
shl
test
leave
cld
repnz
lods
leave
mov
jl
mov
sar
ins
loopne
bound
inc
sbb
(bad)
(bad)
(bad)
call
pop
jp
lahf
sub
shl
xchg
mov
dec
shr
sar
xchg
and
int3
clc
sbb
(bad)
(bad)
call
adc
sbb
add
inc
jle
mov
cmps
jo
outs
jnp
iret
(bad)
(bad)
(bad)
dec
into
push
pop
cmps
jae
cmp
das
ficomp
mov
jo
inc
test
push
(bad)
dec
jns
push
push
jbe
out
cdq
ss
ja
mov
call
gs
cmc
das
pop
mov
std
or
(bad)
(bad)
(bad)
fnstsw
fist
xor
and
(bad)
shld
ja
pop
add
and
push
(bad)
pop
sub
in
cmp
(bad)
and
sahf
stc
add
xchg
(bad)
(bad)
(bad)
call
clc
clc
rcl
adc
or
jmp
dec
pop
gs
jg
inc
(bad)
mov
xchg
loopne
inc
xchg
add
mov
add
push
inc
mov
push
push
int3
xor
dec
sbb
mov
test
iret
xor
sub
movs
push
in
(bad)
(bad)
(bad)
push
scas
push
arpl
xor
xchg
adc
jmp
(bad)
mov
(bad)
(bad)
(bad)
jmp
ret
sbb
sbb
adc
mov
xchg
jnp
scas
or
and
(bad)
dec
add
ss
jae
cwde
add
retf
adc
cdq
xchg
test
add
adc
popf
pop
nop
mov
sbb
(bad)
(bad)
(bad)
jg
movs
mov
xchg
repnz
(bad)
xchg
imul
addr16
add
adc
outs
xchg
cmps
adc
(bad)
call
push
ret
adc
jge
xor
push
in
dec
call
cld
call
and
adc
pop
repz
inc
inc
cli
fcom
(bad)
(bad)
jmp
push
not
cmp
shr
fidivr
inc
mov
sbb
sub
jb
xchg
(bad)
(bad)
call
fisttp
les
out
pop
or
call
leave
lds
xor
or
cmp
mov
(bad)
(bad)
(bad)
dec
or
jl
jmp
mov
into
icebp
jmp
ficomp
dec
mov
add
(bad)
jg
dec
xor
xlat
and
int3
in
(bad)
test
inc
or
push
(bad)
fbstp
fsub
adc
jns
test
xchg
call
cmc
out
pop
dec
jmp
rcl
jp
nop
dec
imul
xlat
rcr
push
adc
(bad)
(bad)
call
adc
cmp
retf
mov
jg
inc
lea
mov
xchg
push
inc
je
jl
sbb
adc
call
mov
mov
test
mov
pop
movs
mov
or
xchg
ret
fucomp
(bad)
jmp
clc
push
shl
or
lds
add
adc
into
mov
pop
or
(bad)
call
jb
outs
sub
jg
mov
mov
xchg
loop
sub
ins
cdq
mov
call
xor
retf
ja
scas
dec
xor
adc
jecxz
or
or
xchg
lahf
cmc
jg
(bad)
(bad)
(bad)
jmp
(bad)
and
imul
je
sbb
lock
mov
mov
push
scas
(bad)
(bad)
(bad)
push
jno
mov
mov
adc
(bad)
rol
dec
(bad)
mov
(bad)
(bad)
(bad)
inc
mov
sub
inc
test
daa
pop
jl
sti
rep
lods
xchg
(bad)
(bad)
cmp
(bad)
mov
sub
hlt
iret
mov
xor
iret
jp
sti
push
cmp
call
scas
push
ins
pop
fcomp
je
icebp
mov
retf
cdq
dec
or
(bad)
jmp
fcomp
lods
outs
ins
and
icebp
jecxz
sbb
add
sub
mov
(bad)
(bad)
out
cli
cs
cmp
loopne
scas
(bad)
nop
push
sbb
dec
(bad)
dec
enter
ins
cs
test
lods
call
out
jmp
movs
sbb
push
(bad)
test
icebp
jb
jle
(bad)
jmp
inc
fistp
jnp
cmp
pop
std
std
loopne
test
jne
lods
(bad)
(bad)
mov
sbb
addr16
pop
xor
fld
mov
ficomp
push
xor
mov
adc
xchg
jecxz
in
das
mov
rol
ins
sbb
aaa
jge
(bad)
(bad)
mov
movs
inc
jecxz
fcomp
mov
xchg
(bad)
mov
gs
mov
push
dec
mov
sub
mov
or
(bad)
(bad)
(bad)
push
rol
cwde
inc
jl
mov
jg
shr
divps
jecxz
loop
add
(bad)
sbb
(bad)
(bad)
push
loope
and
out
push
dec
mov
dec
int
ficomp
mov
cli
arpl
repz
(bad)
call
pop
adc
jno
mov
xchg
add
or
mov
push
pop
scas
sbb
arpl
(bad)
(bad)
dec
pusha
dec
dec
inc
dec
test
cmp
or
in
lea
sub
cwde
push
(bad)
push
into
mov
fild
jmp
scas
mov
mov
(bad)
push
jae
jmp
sub
into
sub
lods
sti
jmp
(bad)
(bad)
(bad)
jmp
push
(bad)
ds
push
fs
add
movs
shl
std
jl
jno
mov
sub
cli
push
push
push
call
retf
fadd
inc
jmp
mov
pop
mov
inc
sar
(bad)
(bad)
inc
cmp
lock
pop
ficom
xlat
out
js
fisubr
les
inc
ror
je
cmp
(bad)
(bad)
(bad)
dec
and
(bad)
sbb
pop
dec
and
mov
mov
or
mov
(bad)
(bad)
jmp
popa
call
cmp
test
repnz
shr
scas
(bad)
push
dec
stc
dec
les
icebp
xchg
(bad)
mov
stos
mov
int3
and
pop
fwait
(bad)
(bad)
dec
cdq
lahf
(bad)
xlat
sub
imul
jnp
cdq
add
and
(bad)
(bad)
(bad)
inc
jecxz
adc
pop
xchg
es
neg
int3
stos
mov
mov
(bad)
jg
dec
aam
ins
mov
test
push
jmp
mov
and
(bad)
dec
popf
stc
or
push
cmp
cld
sti
ss
xor
clc
sar
pushf
inc
daa
pop
jmp
inc
xor
xchg
mov
stc
and
pop
xor
cli
cmps
(bad)
sti
ficomp
push
imul
push
outs
shl
dec
adc
adc
pop
cli
sbb
das
jmp
test
(bad)
(bad)
call
xor
scas
mov
loop
loopne
in
dec
mov
mov
jecxz
loope
in
aas
dec
cdq
addr16
(bad)
(bad)
dec
inc
xor
inc
push
inc
add
je
xor
pop
mov
xchg
xor
dec
push
iret
(bad)
dec
lock
(bad)
xchg
jp
pop
sbb
mov
cmps
iret
imul
(bad)
(bad)
(bad)
inc
std
int
out
sub
jecxz
xlat
mov
and
jns
cld
cmps
push
mov
pop
loopne
dec
inc
ins
(bad)
dec
sub
and
mov
adc
(bad)
(bad)
call
mov
pop
push
lea
fist
ficomp
sub
inc
je
push
(bad)
mov
(bad)
(bad)
push
push
mov
xor
sbb
in
dec
(bad)
imul
(bad)
jmp
cdq
sub
xor
dec
adc
stos
mov
sub
imul
movs
push
in
shr
mov
(bad)
call
or
outs
outs
enter
xor
and
sbb
xor
test
xchg
(bad)
(bad)
out
cli
or
mov
gs
mov
fnstenv
push
test
fstp
std
inc
dec
mov
das
lock
out
and
pop
mov
dec
in
push
push
xor
cmp
mov
(bad)
dec
push
mov
movs
ss
adc
inc
xlat
mov
dec
(bad)
(bad)
jmp
push
and
cmp
xlat
outs
cli
xor
sbb
sbb
sub
imul
outs
cli
mov
mul
xchg
cmp
sahf
lods
xor
push
jle
jmp
lock
call
adc
loop
lea
add
inc
xor
icebp
mov
ret
into
call
repz
sub
dec
sub
jnp
icebp
or
movs
in
sub
ud0
cld
(bad)
inc
(bad)
stc
test
cmps
sub
jae
int
dec
sbb
push
add
int
pop
lds
sbb
int3
mov
jge
xchg
jmp
clc
pop
xor
test
sbb
mov
ins
sahf
inc
jecxz
fwait
in
fild
(bad)
(bad)
call
int
fisub
cmp
jle
popa
mov
fwait
mov
or
dec
mov
pop
cmp
lahf
sbb
xchg
sahf
retf
int3
ret
neg
push
daa
add
(bad)
(bad)
(bad)
fdivr
push
pushf
mov
gs
aad
into
outs
add
and
std
jg
sar
(bad)
(bad)
dec
aas
cmps
inc
in
test
sub
xor
sub
nop
rcr
xchg
pushf
call
xchg
and
inc
xchg
dec
sbb
dec
sar
in
jmp
repnz
jbe
(bad)
(bad)
jg
pop
fstp
xor
leave
fwait
mov
pushf
pop
sub
push
repz
push
jmp
das
cmc
mov
jbe
repnz
jmp
push
(bad)
call
arpl
push
push
xchg
push
(bad)
push
adc
ret
add
sti
(bad)
(bad)
(bad)
jmp
mov
fdiv
(bad)
mov
dec
push
sar
scas
cli
adc
call
or
sbb
mov
nop
ins
jnp
and
imul
(bad)
(bad)
jmp
data16
dec
sbb
sbb
out
loop
push
(bad)
and
cmps
jecxz
call
(bad)
push
add
sub
scas
jb
mov
std
pop
xchg
sbb
fs
adc
(bad)
call
sub
pop
sahf
fyl2x
imul
jmp
pop
lds
lock
(bad)
jnp
jl
ret
ja
xchg
xchg
bound
(bad)
(bad)
jns
push
sahf
sbb
stos
mov
data16
(bad)
(bad)
jmp
adc
daa
ja
imul
outs
out
call
popa
jnp
or
(bad)
(bad)
(bad)
inc
sub
pop
add
movs
fidivr
pop
sbb
jnp
push
cmc
pop
cli
adc
add
pop
(bad)
(bad)
(bad)
call
aas
push
fld
hlt
mov
and
fld
and
in
or
jo
movs
push
mov
dec
repnz
ja
dec
shl
int3
mov
stos
and
nop
retf
hlt
aad
vcmpps
scas
and
(bad)
(bad)
(bad)
(bad)
ficomp
not
cmp
repz
cdq
mov
or
xchg
or
(bad)
out
cli
inc
pusha
pop
inc
add
(bad)
xor
outs
in
cld
int
cmp
push
les
xchg
add
icebp
(bad)
(bad)
ret
push
pop
sub
push
fbstp
(bad)
(bad)
call
(bad)
loopne
int
int
repnz
lods
sbb
mov
mov
ret
add
into
jnp
jb
mov
fwait
mov
push
lock
sbb
fwait
or
sbb
les
mov
mov
xor
pushf
(bad)
(bad)
(bad)
(bad)
fdiv
mov
add
dec
ja
cmp
test
pop
ja
mov
jbe
(bad)
(bad)
(bad)
(bad)
call
scas
sahf
adc
mov
mov
fnstcw
fimul
(bad)
repz
inc
cld
scas
cli
call
push
dec
out
push
in
call
cld
push
mov
shl
(bad)
cmps
(bad)
outs
mov
(bad)
push
or
cmp
loopne
jnp
lea
push
fiadd
lods
push
dec
pcmpgtw
(bad)
(bad)
(bad)
jge
push
js
cld
adc
or
add
mov
cli
clc
inc
hlt
add
xchg
pushf
add
(bad)
(bad)
cmp
(bad)
call
push
add
xor
ffreep
cmp
mov
xor
cld
pop
std
jmp
jae
fs
and
jb
xchg
das
or
dec
movs
imul
shr
pop
rcr
inc
int3
stos
mov
adc
dec
(bad)
fisttp
xchg
push
(bad)
(bad)
call
mov
adc
gs
in
dec
pushf
jmp
stos
(bad)
jmp
and
sub
outs
add
ds
mov
mov
dec
cmp
(bad)
push
sub
loop
std
mov
xchg
out
cli
inc
push
ja
sar
(bad)
inc
aaa
sbb
add
inc
das
and
xchg
jns
mov
hlt
loope
(bad)
(bad)
(bad)
call
call
push
(bad)
fwait
mov
fisttp
stos
jno
aam
je
imul
add
(bad)
(bad)
cmp
retf
cmp
cmps
jmp
push
cld
and
mov
jae
popa
(bad)
call
sub
leave
movs
jl
add
icebp
sahf
pop
push
retf
xchg
xchg
ret
es
retf
(bad)
(bad)
inc
jp
xchg
pop
(bad)
popf
fwait
movs
push
ds
cwde
in
int
xor
xchg
icebp
outs
lahf
arpl
(bad)
dec
repnz
mov
in
les
out
mov
or
or
push
push
rcl
push
push
jno
adc
adc
lods
stos
cmp
pop
or
sbb
jbe
iret
push
mov
es
std
sub
mov
mov
fstp
inc
push
xchg
adc
cli
test
out
jl
adc
(bad)
jmp
mov
adc
sub
inc
icebp
test
stos
and
retf
fidivr
(bad)
(bad)
(bad)
(bad)
inc
jmp
mov
das
and
call
call
lahf
cmp
(bad)
(bad)
(bad)
call
add
and
and
in
sti
(bad)
jecxz
gs
cmp
push
outs
push
outs
xor
cmps
scas
jmp
fild
(bad)
(bad)
push
fimul
cmp
imul
cs
cmp
inc
pop
stos
mov
adc
jne
scas
jmp
adc
inc
sbb
xchg
ss
(bad)
(bad)
call
dec
popf
xchg
(bad)
jl
jmp
mov
xlat
jmp
sar
(bad)
(bad)
call
fcomp
lds
inc
cli
aas
int
push
into
fcom
mov
adc
sub
cld
inc
jnp
pop
jg
xor
vcvttps2dq
(bad)
out
add
and
sbb
mov
dec
pop
cli
nop
cmps
enter
dec
repz
test
and
(bad)
rcr
aam
lahf
pop
mov
mov
xor
or
xchg
(bad)
(bad)
(bad)
(bad)
mov
xor
jb
sbb
cs
dec
sar
push
cmp
dec
lock
lea
sar
dec
(bad)
jb
dec
inc
push
cmp
(bad)
xor
(bad)
(bad)
(bad)
jmp
daa
lds
leave
jg
nop
pop
(bad)
out
dec
mov
(bad)
push
dec
add
sbb
rol
pop
punpcklwd
jg
mov
ficomp
pop
jmp
out
mov
and
ins
call
inc
pusha
ins
or
fcmovbe
ficomp
add
mov
fild
(bad)
(bad)
(bad)
push
jl
dec
popf
and
push
lahf
retf
in
push
iret
inc
add
movs
push
mov
push
and
outs
nop
inc
ret
sbb
dec
cmps
cmp
jecxz
nop
fmul
cli
mul
dec
xchg
adc
call
fld
(bad)
fild
pop
lods
loope
or
lahf
jne
jle
push
sar
push
faddp
fsub
inc
mov
stos
aam
popf
imul
aaa
std
push
pop
pop
mov
loopne
xor
out
and
jae
xchg
popa
(bad)
(bad)
dec
dec
dec
pop
mov
sub
inc
ins
mov
or
in
and
(bad)
(bad)
(bad)
inc
or
sar
pop
repz
cmps
cmp
adc
cmp
adc
xchg
and
dec
(bad)
(bad)
(bad)
push
fisub
dec
dec
shr
scas
inc
and
cmp
outs
push
arpl
push
stc
xchg
and
cwde
pushf
pusha
call
or
ins
aas
jae
sub
sbb
jb
push
sbb
cmp
mov
jbe
(bad)
call
pop
ins
call
and
scas
loop
or
int3
ins
outs
(bad)
jmp
add
fyl2xp1
(bad)
and
push
frstor
cmp
paddsw
inc
mov
retf
leave
mov
cmp
add
(bad)
(bad)
(bad)
call
lds
push
cli
shl
pop
or
scas
mov
xor
(bad)
(bad)
inc
mov
(bad)
jae
xchg
ins
popf
sar
sub
mov
ins
out
lock
inc
push
xor
jg
call
(bad)
jle
cli
gs
push
(bad)
jmp
outs
mov
aas
scas
jo
ins
mov
(bad)
(bad)
inc
std
daa
push
scas
cmp
pop
jge
xbegin
pop
test
cs
(bad)
jmp
out
sahf
test
inc
ins
or
inc
imul
call
(bad)
inc
hlt
cwde
sbb
mov
jb
fcomp
rcr
imul
leave
or
idiv
pop
sub
in
fimul
mov
int
xlat
sub
and
cs
inc
mov
clc
fcomip
jmp
push
add
jmp
inc
sbb
ins
sbb
adc
push
ds
dec
int3
ins
xor
pop
mov
push
xor
dec
popa
and
(bad)
(bad)
call
adc
(bad)
or
fstp
cmp
in
add
scas
idiv
or
dec
cmps
je
jmp
pop
jbe
shr
or
cld
mov
ror
pop
arpl
jo
push
or
mov
pop
(bad)
out
clc
call
jge
sahf
in
mov
jbe
int
in
xor
(bad)
icebp
mov
(bad)
(bad)
(bad)
jmp
ss
xchg
lahf
mov
mov
mov
test
jno
cmps
add
(bad)
(bad)
call
loope
test
adc
fs
or
jbe
mov
repnz
adc
inc
inc
pop
push
pop
and
adc
and
cld
xor
xchg
es
mov
sar
(bad)
(bad)
inc
xor
push
mov
jae
retf
inc
loopne
xchg
sub
lods
loope
(bad)
xchg
into
(bad)
sub
pop
xchg
test
(bad)
(bad)
push
push
test
and
ret
jp
sbb
cmp
sub
pop
cld
(bad)
(bad)
(bad)
push
lock
addr16
sbb
iret
jl
(bad)
out
pusha
cmp
ds
out
sar
idiv
xchg
jo
mov
retf
sub
mov
loope
scas
inc
(bad)
(bad)
(bad)
jmp
pop
mov
push
stc
sub
mov
xor
cmp
mov
cli
cmc
shl
sub
(bad)
(bad)
(bad)
mov
adc
loop
ror
pop
push
ja
sbb
retf
js
test
das
(bad)
(bad)
(bad)
jmp
repz
sub
stos
pop
sub
mov
(bad)
add
call
jg
dec
in
inc
mov
xlat
jb
cdq
push
sub
jo
mov
mov
(bad)
inc
jbe
lods
adc
dec
imul
mov
mov
aaa
cmp
mov
pop
cld
mov
pop
cld
call
aam
pop
test
ins
pop
ret
mov
or
jo
mov
(bad)
(bad)
fild
scas
int3
jne
mov
je
jmp
jns
push
add
sti
inc
dec
(bad)
sahf
sahf
(bad)
(bad)
(bad)
call
std
addr16
mov
fistp
scas
dec
cli
dec
pop
movs
fbld
dec
loop
mov
xor
pop
cmc
jmp
jl
dec
cs
push
xchg
stos
sbb
xchg
(bad)
pop
pop
mov
(bad)
(bad)
(bad)
(bad)
jmp
cmp
iret
sub
(bad)
xor
jnp
cmp
mov
and
dec
mov
mov
inc
lea
pusha
retf
data16
add
ins
mov
leave
or
(bad)
(bad)
(bad)
out
or
push
jb
sahf
test
and
jne
rol
jmp
jmp
gs
clc
movs
icebp
(bad)
(bad)
push
and
hlt
scas
mov
scas
lods
arpl
mov
mov
inc
jmp
mov
pop
jne
push
sub
push
(bad)
(bad)
call
or
lahf
and
mov
mov
pop
in
fnsave
stos
call
outs
jmp
imul
push
add
jmp
hlt
mov
and
in
dec
fxch
and
aad
(bad)
jmp
shl
dec
outs
xor
cmp
and
in
push
movs
push
push
(bad)
ss
or
sar
sbb
icebp
test
adc
ret
aaa
std
(bad)
adc
xor
addr16
lock
(bad)
pushf
fs
xchg
call
sub
jmp
in
push
cdq
inc
les
push
jno
call
push
cld
jnp
out
and
(bad)
(bad)
(bad)
(bad)
sti
das
inc
jmp
(bad)
jl
adc
jg
aas
lds
mov
adc
cmp
(bad)
(bad)
(bad)
jmp
retf
shr
rcr
ficom
out
ins
xor
cli
lahf
int3
pushf
and
push
(bad)
fistp
int3
mov
mov
xchg
(bad)
stos
mov
popa
and
movs
or
pop
inc
mov
mov
rcl
or
rol
push
mov
mov
sbb
push
mov
repnz
out
lock
out
cmp
or
(bad)
(bad)
jmp
cmp
es
ja
push
cwde
cli
or
adc
push
sub
dec
xchg
mov
(bad)
aam
pop
(bad)
(bad)
(bad)
dec
ret
lock
mov
test
fnstcw
cmc
dec
mov
int3
mov
cli
loop
mov
scas
jmp
imul
pushf
adc
mov
(bad)
pop
pop
inc
(bad)
(bad)
(bad)
(bad)
cmp
test
stc
sbb
xchg
add
sbb
xchg
xchg
shl
mov
dec
mov
nop
mov
dec
jl
js
dec
mov
jg
or
(bad)
jmp
and
(bad)
sub
loop
stos
push
les
(bad)
mov
js
jl
sbb
xchg
mov
push
inc
(bad)
(bad)
(bad)
(bad)
jns
adc
jbe
out
inc
fisubr
retf
sbb
cs
cmp
movs
scas
cdq
mov
in
adc
mov
jmp
push
cli
out
jg
adc
jecxz
cld
dec
jecxz
test
push
(bad)
(bad)
(bad)
call
xlat
sar
mov
and
push
jo
data16
jne
push
cmp
(bad)
cmp
pushf
aam
hlt
inc
mov
rcr
push
pop
inc
outs
cmp
mov
fs
fwait
sub
dec
mov
inc
inc
sbb
outs
dec
(bad)
(bad)
jmp
(bad)
lahf
dec
mov
shr
inc
xor
pop
lods
sub
sahf
mov
mov
aad
call
aaa
in
pop
and
inc
retf
imul
push
inc
test
dec
and
inc
fcom
les
jae
and
(bad)
(bad)
mov
xchg
cld
test
push
inc
stos
mov
fs
pop
jno
fadd
pop
mov
out
mov
sbb
inc
dec
cmp
outs
xchg
(bad)
test
cmp
mov
fcos
(bad)
(bad)
inc
push
pop
pop
pop
mov
stos
pop
call
push
add
sbb
jno
mov
(bad)
dec
imul
inc
ins
or
lock
out
data16
inc
nop
push
sti
loopne
push
(bad)
jne
call
mov
cmp
jo
sub
mov
loopne
pop
(bad)
(bad)
call
jmp
fiadd
inc
push
cmp
rcr
sar
mov
into
(bad)
(bad)
jmp
mov
sbb
div
scas
data16
jmp
inc
das
retf
es
(bad)
(bad)
call
mov
stc
stos
dec
popa
cs
mov
sti
cld
outs
ins
inc
cmc
sbb
xor
(bad)
jmp
shr
jo
sbb
addr16
sar
xchg
mov
hlt
out
fprem1
pop
in
lock
loopne
scas
jne
or
inc
cld
and
div
fisub
scas
(bad)
(bad)
(bad)
(bad)
mov
add
fstp
mov
cmp
push
inc
dec
jl
pop
and
fidiv
mov
mov
sub
vmaxsd
push
and
sub
imul
cmp
mov
cmp
cmp
fstp
aam
dec
out
cmp
xchg
dec
mov
mov
dec
jge
ret
test
jmp
das
call
and
inc
cli
dec
pop
ins
aaa
int3
mov
inc
fsubr
(bad)
jmp
push
sbb
dec
and
popa
mov
xchg
es
lods
jecxz
dec
xchg
mov
repnz
mov
cmp
xor
idiv
outs
lea
imul
and
(bad)
(bad)
(bad)
call
cmps
icebp
mov
push
mov
inc
es
popa
fnstcw
ss
add
stos
(bad)
(bad)
fcmovbe
or
movs
mov
ds
test
or
ss
mov
adc
fidivr
mov
cmps
mov
push
adc
aam
sar
add
rcl
stc
sahf
bound
adc
cmp
sti
(bad)
in
lea
fist
test
out
les
dec
or
outs
mov
test
call
inc
mov
retf
cwde
xor
pop
call
les
jbe
mov
(bad)
(bad)
(bad)
inc
or
push
je
loopne
rol
stos
es
cwde
mov
loop
stos
sub
(bad)
dec
aas
and
shl
addr16
xlat
push
xor
std
aad
adc
dec
xchg
stc
jl
jmp
pop
adc
(bad)
(bad)
jns
test
jmp
ror
js
sub
adc
(bad)
call
jno
and
pop
stos
mov
cld
adc
pop
dec
inc
xchg
xchg
or
push
adc
(bad)
(bad)
call
or
jnp
jmp
rol
cmp
retf
inc
aam
(bad)
retf
movs
fdiv
(bad)
call
cmp
cmp
js
xor
(bad)
aam
push
inc
inc
inc
sbb
push
pop
out
in
mov
call
dec
call
arpl
bound
jbe
out
call
jg
test
repnz
call
cmc
fwait
shl
cmp
in
div
xor
mov
outs
push
in
push
jne
mov
(bad)
call
popf
mov
adc
in
lahf
retf
mov
xor
in
out
mov
ja
loopne
sbb
(bad)
(bad)
(bad)
(bad)
jmp
mov
push
jle
mov
xor
(bad)
sbb
adc
jns
lea
(bad)
ficomp
xchg
inc
push
cdq
out
push
mov
mov
sbb
call
mov
jnp
push
outs
loopne
dec
push
and
(bad)
call
sti
xchg
and
test
ret
xlat
shl
adc
xchg
mov
adc
sub
(bad)
fcomip
call
mov
sbb
sbb
out
adc
cmp
fisubr
rcr
push
ror
adc
adc
sar
mov
and
inc
and
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jecxz
mov
jne
fcmovnb
inc
hlt
add
sub
or
(bad)
jmp
or
sbb
adc
cmps
hlt
outs
sbb
(bad)
mov
enter
adc
(bad)
jmp
les
jmp
xchg
fmul
sti
dec
xchg
add
mov
(bad)
call
gs
lea
outs
sbb
retf
xchg
and
sub
or
xchg
retf
(bad)
xchg
dec
mov
test
mov
jo
mov
add
push
(bad)
(bad)
mov
fnsave
sbb
daa
bound
lock
inc
ror
xchg
iret
add
fcomip
dec
leave
dec
mov
pushf
mov
xchg
dec
dec
xchg
mov
cmp
cld
iret
sbb
mov
sbb
ret
pop
daa
dec
jno
sub
push
sbb
retf
loop
pusha
jns
(bad)
(bad)
push
sbb
mov
jne
loop
and
xor
shl
out
mov
(bad)
(bad)
call
(bad)
inc
jnp
ror
sahf
xchg
gs
add
inc
push
xchg
pop
pop
pusha
(bad)
sar
cmova
dec
pop
and
adc
repz
push
mov
js
mov
leave
retf
and
push
(bad)
(bad)
(bad)
inc
and
shl
cli
push
popf
xchg
mov
and
adc
(bad)
jg
sbb
push
icebp
mov
add
call
or
loope
push
neg
mov
jecxz
aaa
addr16
push
fsubrp
mov
(bad)
(bad)
(bad)
mov
mov
(bad)
or
arpl
inc
(bad)
jbe
add
add
jmp
adc
pop
movs
xchg
scas
rcl
jge
(bad)
(bad)
dec
imul
jns
bound
scas
sbb
cmps
ss
repz
arpl
push
js
adc
test
mov
loope
jl
(bad)
(bad)
inc
imul
out
inc
fcomi
lods
loopne
jb
jmp
xor
pop
inc
sub
add
ret
enter
(bad)
(bad)
(bad)
push
xchg
(bad)
inc
jge
xchg
dec
jmp
ss
ret
int3
or
jne
loopne
(bad)
mov
and
jecxz
out
xchg
stos
adc
cs
retf
(bad)
push
sti
mov
(bad)
(bad)
(bad)
jmp
fdiv
jae
add
data16
(bad)
clc
stos
(bad)
rcl
push
mov
bound
stos
(bad)
(bad)
(bad)
push
jmp
clc
pop
jecxz
fwait
mov
adc
xlat
or
add
mul
retf
stos
(bad)
(bad)
inc
push
pop
xor
in
mov
mov
xor
push
sar
sbb
(bad)
(bad)
jmp
or
out
xchg
or
movs
xchg
les
fisub
fcomip
push
push
xchg
fiadd
adc
mov
fild
(bad)
(bad)
mov
sub
push
jns
jmp
jbe
sub
jbe
(bad)
(bad)
dec
mov
dec
adc
test
out
fisub
jo
push
pop
jo
mov
movs
(bad)
(bad)
(bad)
jmp
sti
cmp
mov
push
gs
in
mov
dec
in
lods
out
popf
repz
(bad)
(bad)
(bad)
mov
xchg
cli
sbb
xor
les
mov
add
lea
xlat
scas
shl
sar
(bad)
(bad)
jmp
cdq
sub
and
and
mov
call
jg
cld
je
and
jge
(bad)
(bad)
(bad)
(bad)
jmp
ret
add
or
sbb
sbb
pop
cmp
out
movs
push
(bad)
(bad)
adc
add
popaw
into
adc
(bad)
(bad)
dec
pop
lahf
rcl
clc
ds
call
cdq
iret
ds
or
xchg
pop
sub
or
imul
in
mov
xchg
adc
ja
mov
(bad)
(bad)
(bad)
fadd
sbb
inc
sub
sbb
add
fnstsw
into
cmp
lock
sub
out
push
jae
inc
xor
mov
mov
mov
sub
push
pushf
cmp
outs
mov
sub
jecxz
dec
popa
sub
test
jle
add
xchg
outs
(bad)
(bad)
dec
out
(bad)
xchg
scas
push
stos
popa
fxch
push
jmp
ds
scas
dec
jbe
inc
gs
(bad)
(bad)
push
aas
xchg
inc
and
or
add
xchg
lods
stos
push
mov
inc
dec
jns
aam
dec
(bad)
inc
adc
jbe
mov
pop
add
mov
pushf
xor
out
loop
(bad)
call
cld
xchg
mov
mov
mov
sub
dec
jnp
(bad)
(bad)
in
(bad)
dec
or
repz
(bad)
pop
and
cmp
pop
jne
cld
add
xor
ja
jmp
(bad)
(bad)
(bad)
dec
stc
js
pop
adc
mov
xor
cmp
mov
adc
cld
call
les
retf
fdiv
pop
cmp
and
xor
popf
fwait
mov
call
aas
(bad)
sub
xlat
cmp
out
js
cmp
mov
(bad)
test
and
mov
outs
(bad)
pop
enter
push
jb
push
rcr
sub
fist
scas
cli
ja
cmp
lds
push
adc
cmps
in
ror
cld
outs
push
in
sbb
(bad)
(bad)
dec
daa
and
xchg
cdq
xor
out
(bad)
fdivr
(bad)
and
aam
pushf
pop
repz
into
aaa
icebp
(bad)
(bad)
push
cld
imul
add
imul
mov
das
(bad)
dec
jmp
popf
(bad)
(bad)
call
sbb
imul
sar
scas
fdivr
ja
sub
or
(bad)
jmp
xchg
sar
mov
test
(bad)
cmc
jl
ret
(bad)
sti
pop
inc
(bad)
sbb
call
xor
sbb
adc
enter
imul
pop
leave
cmp
(bad)
inc
sbb
ja
dec
repz
xchg
push
sahf
retf
jae
mov
xor
sbb
pop
or
mov
(bad)
stc
cmps
lahf
xor
xor
fdivr
sbb
lahf
mov
jmp
ror
test
loop
div
xchg
out
sar
dec
push
and
ret
rol
or
call
push
jmp
mov
scas
ja
(bad)
jmp
sub
mov
adc
push
add
fiadd
jae
xor
mov
sub
mov
in
popf
hlt
lock
jnp
cmps
in
or
pop
jno
mov
retf
mov
lea
inc
call
dec
arpl
pop
lds
(bad)
call
fisttp
pop
outs
dec
jl
ds
and
outs
loop
push
(bad)
(bad)
jmp
aad
mov
dec
lahf
adc
sub
xchg
cs
mov
push
fstp
cmp
sub
(bad)
stc
inc
push
sub
xchg
and
push
cmp
jmp
aad
addr16
lds
cmp
nop
ds
(bad)
cs
fiadd
dec
push
jmp
adc
loopne
pop
sbb
les
adc
or
(bad)
push
daa
dec
cdq
out
dec
pop
mov
into
mov
xor
xchg
popf
sub
(bad)
mov
sbb
add
ss
mov
cmp
ja
sbb
push
pop
sar
dec
daa
test
retf
inc
xchg
and
inc
mov
(bad)
jmp
push
cmp
faddp
test
cmp
shl
pop
in
out
(bad)
pop
es
(bad)
(bad)
(bad)
jmp
cmp
cwde
sahf
jl
popa
mov
mov
jp
xchg
ss
xchg
cmp
(bad)
(bad)
jmp
jne
sub
xchg
inc
call
jge
xor
xchg
jnp
das
xchg
and
sub
(bad)
(bad)
(bad)
dec
js
mov
or
cmp
jno
jle
test
addr16
sbb
push
out
ret
add
std
call
mov
nop
in
sbb
(bad)
loope
mov
(bad)
(bad)
dec
retf
mov
scas
cmps
(bad)
aaa
mov
pop
nop
jbe
fwait
clc
mov
call
test
dec
pop
push
cld
push
mov
dec
(bad)
sbb
je
adc
inc
mov
ror
and
repz
(bad)
(bad)
inc
cmps
out
loopne
ds
pop
out
push
cli
outs
rol
xlat
inc
push
(bad)
(bad)
(bad)
(bad)
fiadd
mov
inc
or
pop
ins
mov
movs
xor
dec
stos
mov
cmps
(bad)
(bad)
call
jp
sub
neg
xchg
xor
jnp
xlat
fidiv
mov
stc
sbb
push
(bad)
push
adc
add
dec
add
and
mov
mov
inc
mov
dec
(bad)
(bad)
(bad)
inc
idiv
pop
cdq
jnp
adc
lea
sahf
test
mov
sub
mov
inc
(bad)
mov
(bad)
jmp
loope
adc
call
aas
add
mov
push
and
ss
lock
(bad)
(bad)
inc
sahf
cmp
dec
mov
xchg
icebp
mov
mov
or
gs
inc
mov
mov
xchg
(bad)
icebp
jbe
lods
inc
in
mov
dec
(bad)
lock
sar
push
xor
cli
in
inc
cmps
pop
repz
fiadd
cdq
fsub
push
push
dec
inc
daa
sub
xchg
or
(bad)
jmp
jo
(bad)
test
inc
repz
or
in
bound
pusha
loop
pop
stos
mov
(bad)
inc
jnp
sub
loopne
sbb
push
mov
idiv
push
inc
repz
call
(bad)
cld
inc
movs
mov
sub
call
(bad)
inc
ds
jo
mov
sub
push
pop
adc
jp
mov
enter
(bad)
(bad)
jmp
mov
sbb
cmps
repz
inc
mov
movs
leave
repnz
xlat
shl
push
stc
jmp
lods
shl
jae
push
or
pop
(bad)
(bad)
(bad)
call
rcl
jecxz
pop
rol
(bad)
lahf
(bad)
mov
std
mov
into
sahf
mov
(bad)
(bad)
push
in
and
mov
es
mov
outs
test
mov
inc
clc
rcl
cmp
mov
(bad)
(bad)
call
mov
popa
mov
cmc
cld
xor
jmp
xor
xlat
cmp
jl
sar
adc
icebp
(bad)
inc
adc
jne
(bad)
and
mov
mov
xlat
inc
fild
scas
dec
push
mov
and
sub
mov
xlat
cmp
jno
mov
dec
(bad)
(bad)
(bad)
inc
pop
ror
and
push
and
dec
push
aad
cmp
mov
lds
jmp
imul
adc
retf
dec
jle
xchg
pandn
int
lahf
scas
(bad)
(bad)
(bad)
call
sbb
and
pop
leave
loope
or
(bad)
mov
lods
push
push
loopne
sub
dec
mov
fwait
stos
dec
stc
sub
inc
popa
mov
std
cmp
mov
push
mov
and
nop
in
push
inc
sbb
mov
dec
pop
fwait
ins
lods
jp
jmp
aam
or
outs
js
and
mov
pusha
xchg
fwait
outs
call
adc
mov
mov
call
xor
mov
xchg
ins
call
aas
iret
scas
jge
jmp
fbld
lea
icebp
outs
dec
lds
imul
test
cmp
(bad)
(bad)
mov
loope
stc
push
cmp
jne
xchg
cwde
jno
cmp
retf
les
mov
sar
(bad)
(bad)
(bad)
ficom
js
pop
call
ret
loop
adc
push
jmp
in
xor
jmp
outs
pop
fdiv
pusha
push
shl
mov
sbb
in
ja
mov
sub
(bad)
(bad)
inc
mov
(bad)
pop
xor
pop
fwait
mov
or
fild
into
(bad)
(bad)
(bad)
dec
and
(bad)
outs
addr16
fdivr
retf
imul
dec
mov
sub
xor
(bad)
(bad)
(bad)
call
and
(bad)
ja
or
out
push
pop
jo
push
push
xlat
add
mov
cmp
(bad)
dec
mov
sub
movs
jb
mov
sub
shl
imul
fisub
(bad)
call
xor
outs
fcmovb
mov
out
xor
jns
mov
pop
mov
mov
pop
popf
jne
mov
and
mov
adc
push
hlt
push
xchg
scas
fiadd
jmp
call
and
mov
mov
call
(bad)
(bad)
(bad)
mov
test
mov
mov
jns
jns
sbb
mov
ins
fs
(bad)
(bad)
push
cdq
(bad)
xchg
in
push
sub
nop
sbb
mov
xor
(bad)
(bad)
(bad)
(bad)
(bad)
mov
fcom
jp
pop
cdq
add
pusha
mov
(bad)
shl
out
dec
leave
in
(bad)
(bad)
(bad)
(bad)
call
xchg
push
dec
arpl
dec
scas
mov
xchg
cmp
add
call
ins
dec
std
jg
push
retf
int
cdq
push
aaa
(bad)
les
sbb
call
daa
add
test
cwde
int3
aam
cli
popa
xor
pop
pop
sbb
jbe
sysexit
repnz
dec
(bad)
jmp
jl
out
pop
adc
jmp
cli
xchg
int3
jecxz
sti
jp
cmps
inc
cs
cli
je
add
sti
xor
adc
pop
shl
or
(bad)
dec
stos
ret
outs
shl
xchg
sub
push
test
mul
aaa
mov
dec
inc
inc
add
mov
je
xor
es
popa
in
(bad)
mov
xlat
add
aas
mov
pop
pop
sub
pop
movs
das
sub
call
call
sbb
(bad)
jmp
xor
push
inc
jbe
imul
add
xchg
and
aaa
test
inc
xor
out
nop
gs
adc
inc
sbb
(bad)
(bad)
push
aaa
mov
add
push
sbb
mov
(bad)
cmp
mov
call
lock
mov
add
test
inc
cli
(bad)
(bad)
push
jne
dec
imul
sbb
ret
adc
loop
push
loope
xor
or
jmp
ja
push
je
imul
add
(bad)
(bad)
(bad)
dec
stos
mov
sub
lods
stos
scas
xor
push
mov
iret
jbe
inc
fdivrp
scas
mov
jecxz
inc
and
call
inc
shl
hlt
(bad)
(bad)
push
adc
fadd
sti
movs
mov
mov
mov
cmps
xor
jmp
push
clc
fbld
les
(bad)
(bad)
(bad)
(bad)
push
test
out
dec
stos
(bad)
mov
fdivr
pop
inc
or
or
(bad)
(bad)
jmp
int
pusha
xchg
test
icebp
mov
push
or
lahf
sbb
mov
push
sbb
call
xchg
stos
dec
out
xor
mov
(bad)
aaa
or
loopne
jns
push
dec
cmp
cmp
mov
(bad)
dec
dec
xor
(bad)
stc
pop
push
rcl
push
movs
(bad)
fild
or
or
lahf
xchg
mov
xor
jmp
or
ret
xor
mov
das
pop
cmp
xor
(bad)
(bad)
(bad)
jmp
cmp
fs
inc
push
inc
mov
jge
repnz
mov
in
popa
(bad)
(bad)
push
aas
fcomp
into
dec
mov
(bad)
jns
cli
xchg
call
(bad)
(bad)
(bad)
(bad)
mov
dec
sbb
inc
inc
mov
leave
dec
sti
aas
test
test
or
and
(bad)
(bad)
(bad)
dec
rol
fidivr
pop
jge
cs
push
adc
pop
or
jo
in
and
cmps
mov
cmc
not
imul
jmp
(bad)
inc
cmp
bound
pop
ss
ja
pop
outs
repz
aam
dec
xor
call
scas
cs
sbb
push
loop
fcomp
jmp
or
and
xor
(bad)
(bad)
jmp
adc
mov
xchg
cmp
(bad)
adc
in
inc
mov
cmps
mov
(bad)
(bad)
(bad)
push
stc
xor
dec
int3
or
cdq
pop
jbe
inc
xor
aaa
jge
shl
(bad)
icebp
or
mov
(bad)
mov
data16
xor
or
fs
add
mov
cmc
aas
pop
and
xor
repnz
cli
(bad)
jmp
xor
xchg
lahf
adc
inc
cmc
daa
xchg
pop
sbb
mov
xchg
pop
cwde
out
aas
dec
add
jmp
aad
cmp
cmp
(bad)
(bad)
call
push
ja
inc
or
dec
mov
pop
in
outs
stc
fst
add
and
in
pop
lods
sbb
pushf
pop
push
cmp
push
xlat
inc
adc
mov
fdiv
or
jne
push
jbe
sbb
rol
mov
and
(bad)
call
mov
shr
shr
add
int3
int
jo
stc
mov
pop
xor
xor
rol
or
clc
(bad)
(bad)
jnp
into
fisttp
mov
mov
stc
fsubr
mov
psllq
(bad)
(bad)
fcomip
movs
rcr
jno
push
gs
in
in
out
push
dec
mov
cmp
or
mov
sub
into
cmp
jae
pusha
or
shrd
sbb
(bad)
(bad)
jmp
movs
mov
mov
jp
mov
nop
mov
xor
fisttp
popa
mov
or
(bad)
(bad)
(bad)
(bad)
cmp
loop
loop
adc
scas
pusha
clc
jmp
add
mov
or
inc
std
(bad)
(bad)
jmp
jo
xchg
dec
retf
mov
mov
pop
mov
fstp
mov
or
aaa
mov
dec
inc
fstp
std
test
mov
movs
jmp
addr16
std
jo
fdiv
(bad)
call
leave
nop
jo
or
pop
ss
inc
ja
retf
xchg
(bad)
(bad)
(bad)
jmp
cmc
xor
jbe
inc
cmp
mov
xor
sbb
scas
xor
jg
pusha
std
movs
sub
or
sbb
mov
(bad)
(bad)
jmp
cmp
mov
sbb
jo
cmps
mov
sbb
pop
test
xlat
xor
iret
jno
jge
mov
(bad)
(bad)
mov
sahf
sbb
(bad)
fild
stos
loope
clc
scas
jmp
sub
mov
and
je
ins
cmps
loopne
repz
jl
lahf
or
or
sub
addr16
cmp
xor
(bad)
(bad)
(bad)
jmp
cmp
not
mov
les
xchg
mov
dec
fmul
adc
lahf
retf
in
jo
out
outs
push
retf
mov
dec
push
and
cwde
push
aaa
mov
in
in
pop
lock
repnz
mov
xor
xchg
outs
dec
ins
fidivr
(bad)
(bad)
call
sbb
(bad)
call
xlat
xor
xor
add
cli
movs
mov
nop
ja
jg
call
scas
or
in
mov
call
fwait
nop
arpl
scas
fcom
(bad)
(bad)
(bad)
dec
movs
fiadd
arpl
mov
sbb
cwde
sbb
push
or
jmp
inc
pop
pop
push
jmp
fs
jnp
lods
adc
daa
and
dec
jge
jmp
mov
pop
push
imul
or
jmp
jmp
sbb
inc
stos
jl
loopne
ja
imul
(bad)
(bad)
push
mov
repz
pop
movs
mov
mov
mov
aam
mov
lea
inc
lods
mov
(bad)
jmp
sub
mov
xchg
scas
repnz
mov
cli
pop
dec
repz
movs
stc
mov
(bad)
(bad)
(bad)
jmp
mov
pop
or
shr
xchg
cmp
dec
pop
das
pop
dec
icebp
adc
xchg
ins
mov
movs
pop
dec
imul
cli
(bad)
mov
lock
pusha
push
mov
(bad)
(bad)
(bad)
fistp
mov
add
cmp
xor
hlt
inc
mov
dec
xchg
jg
dec
inc
icebp
fcmovnb
xchg
imul
shl
mov
mov
jmp
sahf
dec
in
in
add
pop
(bad)
(bad)
mov
shl
addr16
adc
shl
(bad)
(bad)
(bad)
(bad)
jns
jne
out
dec
and
and
mov
mov
js
or
(bad)
movs
gs
jmp
push
or
sbb
call
fsub
ins
adc
pop
or
or
inc
cmp
addr16
inc
dec
or
(bad)
(bad)
inc
jge
or
popa
jne
inc
call
dec
(bad)
adc
mov
nop
in
movs
icebp
cmp
xchg
cmp
ret
(bad)
and
(bad)
(bad)
(bad)
mov
inc
call
repnz
int3
mov
popa
mov
(bad)
(bad)
(bad)
jmp
cdq
test
mov
cmp
jmp
arpl
xlat
hlt
movs
outs
mov
movs
sbb
call
adc
add
cwde
xor
mov
xchg
jecxz
push
add
sub
cmp
test
daa
pop
xchg
and
(bad)
(bad)
call
xchg
cs
mov
scas
pop
jp
push
aad
or
mov
(bad)
call
sub
ret
mov
test
mov
add
inc
sub
retf
(bad)
jmp
push
out
je
xor
pop
lods
push
(bad)
(bad)
call
repz
pusha
inc
ss
xchg
cmp
jp
sub
shl
dec
inc
mov
mov
mov
cmps
out
add
push
sbb
xchg
mov
push
xor
mov
les
xchg
push
lods
lods
das
ss
mov
ret
test
stos
(bad)
outs
call
jns
and
sahf
aad
mov
sub
push
add
(bad)
inc
scas
xchg
shr
adc
cmp
and
mov
hlt
mov
inc
aam
sbb
rcr
pop
sar
call
push
(bad)
xor
push
mov
add
aam
ss
(bad)
(bad)
jg
jb
out
bound
pop
jns
mov
lods
shl
xchg
pop
mov
outs
rol
(bad)
inc
pop
mov
add
mov
adc
sbb
lock
call
push
inc
lods
shl
les
dec
lea
mov
sub
and
rcr
rol
sbb
(bad)
jmp
adc
cmps
shl
push
or
popa
fisub
shl
ret
pop
int3
pop
cld
(bad)
mov
fisttp
jae
loop
or
jns
inc
hlt
and
(bad)
(bad)
dec
mov
or
lock
lock
sub
cmc
pop
neg
cmp
push
cmp
cmp
mov
(bad)
push
mov
dec
jbe
std
test
ds
imul
push
(bad)
(bad)
push
pop
mov
xchg
retf
cmps
je
mov
pop
or
pop
jbe
and
dec
outs
mov
(bad)
(bad)
dec
inc
out
repz
rcr
sbb
pop
sub
sbb
(bad)
(bad)
push
and
add
outs
jl
stos
xchg
dec
mov
fisttp
sub
push
xor
xor
popa
inc
xchg
(bad)
cmp
jmp
push
leave
add
cmps
cmps
push
jae
lods
cld
sbb
icebp
xchg
sub
(bad)
call
in
arpl
popa
inc
dec
and
imul
pop
pusha
idiv
(bad)
mov
mov
sar
(bad)
(bad)
(bad)
jge
rcl
and
push
sbb
or
xchg
ja
jecxz
push
sub
(bad)
(bad)
(bad)
(bad)
aas
push
das
cmp
or
daa
sub
xchg
inc
dec
adc
add
cmp
sub
fidiv
jmp
rol
mov
jmp
push
sar
jae
(bad)
(bad)
inc
jg
inc
cmp
and
dec
jmp
xchg
retf
imul
ins
mov
mov
(bad)
(bad)
mov
lahf
xor
push
cwde
leave
(bad)
dec
cmps
mov
bound
jecxz
push
clc
jmp
leave
dec
neg
mov
shr
mov
cld
sub
test
adc
sbb
retf
mov
(bad)
add
lahf
add
sahf
in
inc
xchg
fs
cmp
sub
push
ja
neg
inc
movs
(bad)
(bad)
(bad)
(bad)
inc
push
mov
popa
mov
add
aas
ret
repnz
dec
ja
push
loop
aam
into
cld
ror
(bad)
(bad)
(bad)
(bad)
jns
add
cmps
int3
mov
push
xor
and
out
xor
loope
les
movs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
imul
loopne
(bad)
mov
push
cmp
addr16
xor
mov
jmp
js
ja
fwait
(bad)
inc
hlt
test
inc
(bad)
rol
loopne
xchg
jae
inc
out
les
fwait
(bad)
jmp
outs
int
vsubsd
push
jns
not
add
add
(bad)
(bad)
(bad)
call
and
loopne
jmp
xchg
mov
sbb
jns
jmp
mov
xchg
div
sbb
inc
(bad)
(bad)
(bad)
dec
ficom
push
outs
cdq
push
dec
sbb
inc
mov
add
cli
sub
push
(bad)
fidiv
mov
pop
cmp
xor
sbb
xchg
xchg
adc
and
mov
(bad)
(bad)
push
fiadd
mov
ss
cmps
cmp
push
cmp
loop
xlat
and
pop
jmpw
mov
or
mov
inc
test
hlt
adc
xor
cmps
push
cld
(bad)
(bad)
mov
mov
js
shl
cli
gs
jno
mov
cmp
fld
(bad)
inc
inc
inc
(bad)
int
sar
jbe
xchg
fld
retf
pop
inc
shl
std
jmp
ja
add
inc
pop
leave
out
add
fisttp
xor
inc
ins
mov
clc
jbe
(bad)
(bad)
inc
jl
and
(bad)
adc
fiadd
(bad)
mov
aas
xlat
mov
cmp
mov
(bad)
(bad)
(bad)
jg
ins
cmps
pop
mov
or
jle
iret
adc
shl
fsub
mov
(bad)
(bad)
jg
mov
cmp
sub
lods
and
aas
not
push
adc
dec
lods
fs
add
lea
push
into
push
out
(bad)
hlt
adc
xor
movs
out
ret
shl
mov
sbb
or
jnp
js
xchg
es
or
leave
ret
int3
test
mov
fisub
adc
ret
test
mov
push
push
push
inc
sbb
(bad)
(bad)
jmp
pusha
jnp
xchg
dec
jmp
mov
lahf
mov
in
dec
pop
imul
scas
(bad)
(bad)
push
in
int
jae
xchg
nop
push
xor
bound
mov
mov
xor
sbb
dec
jb
add
(bad)
cmp
mov
or
cmps
or
inc
pop
(bad)
jmp
scas
dec
xor
fiadd
lahf
mov
hlt
sbb
and
(bad)
(bad)
(bad)
jmp
nop
movs
pop
add
push
xor
ins
popf
mov
aas
adc
push
test
outs
(bad)
mov
xchg
or
push
popa
pop
or
sar
inc
dec
scas
in
push
jl
sbb
pop
jl
or
push
(bad)
(bad)
call
fmul
mov
movs
mov
xchg
imul
push
ror
mov
add
pop
mov
inc
dec
ror
push
mov
or
out
cmp
(bad)
rol
mov
inc
(bad)
(bad)
(bad)
(bad)
aas
jmp
aam
rcr
push
pop
adc
adc
mov
(bad)
out
stos
cli
(bad)
(bad)
(bad)
(bad)
cmp
sub
shl
mov
cmp
push
mov
popf
or
sbb
scas
(bad)
(bad)
(bad)
push
pop
mov
call
mov
test
bound
or
sbb
mov
mov
call
aaa
xchg
lock
or
ins
(bad)
cmp
add
(bad)
jmp
pop
push
push
shr
push
into
mov
gs
stos
dec
add
scas
es
jle
cdq
xor
jl
xchg
js
xchg
arpl
in
popa
pop
out
push
xor
loop
(bad)
rcl
adc
or
pop
cld
jmp
mov
mov
mov
xor
call
add
jg
pop
sahf
push
or
leave
mov
sbb
xor
mov
(bad)
(bad)
(bad)
(bad)
mov
fistp
sbb
mov
jge
mov
scas
cli
aam
(bad)
jmp
push
repnz
(bad)
(bad)
jmp
rcl
inc
mov
outs
pop
add
retf
pop
or
cmc
aam
repnz
sbb
push
stos
sbb
ret
int
xchg
(bad)
or
mov
sbb
nop
jg
(bad)
(bad)
fild
loope
aad
out
or
jbe
cmps
sbb
xor
test
pop
mov
(bad)
(bad)
push
and
cmp
add
push
jo
mov
add
and
sbb
inc
inc
jle
aas
inc
xor
sbb
mov
pop
nop
dec
sbb
or
sbb
mov
cmp
cdq
push
lahf
sub
repnz
loopne
push
xchg
fcomip
(bad)
(bad)
cld
test
inc
pop
jnp
inc
cdq
adc
mov
pop
ins
mov
or
(bad)
(bad)
(bad)
mov
fwait
mov
repz
mov
jmp
sahf
popa
dec
cld
pop
or
(bad)
mov
or
jmp
and
jb
adc
add
push
push
and
scas
(bad)
(bad)
(bad)
call
sub
bound
sbb
fst
pop
cmp
lods
mov
int3
(bad)
xor
jae
(bad)
(bad)
(bad)
call
push
pusha
jle
(bad)
imul
inc
sub
jne
mov
les
cmp
mov
(bad)
(bad)
jmp
nop
out
(bad)
mov
inc
mov
outs
add
das
push
dec
and
stos
mov
mov
jnp
cmp
(bad)
call
out
mov
or
sahf
jns
xor
aas
pop
xor
xchg
data16
call
es
(bad)
xor
mov
(bad)
mov
std
dec
dec
mov
(bad)
cmp
call
and
loope
jg
jge
push
cmp
(bad)
(bad)
jmp
dec
mov
test
xchg
add
sbb
(bad)
out
aad
jg
mov
fldenv
(bad)
fild
jmp
call
mov
jp
mov
mov
adc
xlat
div
inc
retf
sti
data16
stc
in
jp
mov
call
into
jnp
mov
sub
or
ja
sahf
fs
adc
aam
inc
sub
(bad)
jnp
dec
mov
inc
mov
nop
int
icebp
pop
cdq
pop
sbb
cmps
ret
(bad)
mov
mov
loop
call
adc
bnd
pop
push
(bad)
(bad)
(bad)
jg
cmps
shr
add
mov
loope
mov
cwde
icebp
or
aam
sub
movs
stos
(bad)
mov
icebp
jmp
dec
lahf
lea
jmp
pop
arpl
lods
xchg
xchg
add
sti
test
sbb
xchg
sar
test
pushf
outs
pop
pop
fwait
push
aam
inc
push
cmc
cdq
add
xor
daa
jae
das
and
jmp
cmp
shr
mov
mov
add
xor
(bad)
pop
leave
dec
(bad)
fcomip
iret
shr
mov
(bad)
ffreep
scas
dec
in
int3
(bad)
push
mov
fs
dec
mov
xchg
stos
lds
inc
gs
(bad)
(bad)
dec
ins
repz
dec
std
jle
xor
enter
aas
xlat
mov
ds
mov
mov
pop
push
pop
mov
leave
mov
daa
mov
sub
fcomp
nop
rcl
pop
not
(bad)
(bad)
call
mov
fisttp
aad
fiadd
pop
(bad)
xchg
aas
fmul
sbb
mov
aas
dec
retf
loopne
jno
xor
(bad)
jl
cdq
dec
mov
mov
sti
cmp
icebp
(bad)
(bad)
(bad)
push
sbb
mov
push
(bad)
movs
loop
sbb
fs
iret
pop
and
fstp
adc
inc
jbe
mov
mov
aaa
or
cmp
js
mov
xchg
mov
(bad)
(bad)
(bad)
fcomp
or
sti
sar
cmp
dec
mov
jmp
xor
cdq
jmp
outs
inc
popf
push
mov
add
jl
xor
les
sbb
test
push
mov
pop
mov
mov
push
push
outs
or
adc
dec
adc
mov
(bad)
(bad)
(bad)
jmp
mov
adc
lock
arpl
adc
mov
mov
(bad)
(bad)
(bad)
mov
int3
xchg
mov
mov
jno
xor
and
das
rcl
and
sub
mov
and
pop
and
mov
pop
sub
pushf
in
pop
out
or
pop
cmc
dec
fcomp
loope
(bad)
(bad)
call
aaa
and
xchg
add
stos
outs
dec
iret
fist
lods
out
sbb
pop
pusha
(bad)
(bad)
call
sub
shld
pop
clc
pusha
dec
add
xchg
dec
dec
das
add
movs
mov
test
mov
fwait
push
(bad)
mov
cli
data16
xor
push
xchg
xor
push
pushf
sbb
in
inc
dec
xlat
pop
xor
in
retf
dec
fwait
cmp
xchg
sti
out
mov
(bad)
inc
dec
fisubr
xor
cmps
push
or
push
sahf
pop
inc
jmp
call
daa
popa
inc
sub
loope
popa
sbb
mov
(bad)
jmp
sbb
fprem
inc
out
pop
imul
in
cmp
push
in
dec
ror
(bad)
dec
in
dec
adc
(bad)
(bad)
(bad)
push
xchg
sbb
lahf
dec
cmp
adc
enter
mov
dec
jae
sbb
jmp
push
push
ret
movs
test
push
xchg
stc
out
inc
add
retf
fiadd
(bad)
(bad)
mov
mov
adc
xchg
fcomp
mov
lods
push
adc
sub
mov
mov
scas
mov
jg
into
pop
sub
cmp
(bad)
jmp
push
cld
(bad)
retf
and
std
adc
or
jge
dec
inc
loop
mov
mov
(bad)
(bad)
(bad)
call
iret
mov
pop
or
sub
jne
sbb
int
out
fistp
inc
(bad)
(bad)
(bad)
push
inc
push
or
push
inc
and
ret
repz
cmp
mov
or
jg
ss
iret
(bad)
(bad)
(bad)
dec
bound
dec
outs
inc
arpl
fisttp
loope
into
xchg
sub
or
pop
cmp
imul
mov
scas
pop
(bad)
pop
inc
jns
cmp
rol
ret
inc
aas
mov
and
movs
jmp
test
(bad)
call
adc
push
jb
and
dec
dec
xchg
adc
fnstcw
(bad)
(bad)
(bad)
dec
out
adc
adc
inc
dec
pop
cmp
out
dec
outs
popa
ds
xor
xor
out
and
jg
push
pop
pop
or
pop
mov
cmp
(bad)
jg
cld
mov
loope
jmp
(bad)
sbb
push
int3
xchg
test
(bad)
(bad)
inc
in
mov
loopne
test
pop
js
inc
or
mov
sub
adc
aad
(bad)
fcomip
mov
mov
mov
mov
movs
sub
ret
mov
(bad)
(bad)
jmp
mov
xchg
inc
mov
popa
adc
pop
or
dec
push
add
scas
sbb
add
ins
test
fs
mov
and
jo
lods
jnp
mov
repnz
repnz
(bad)
ficom
aam
xchg
(bad)
(bad)
(bad)
push
pop
xchg
cmp
leave
mov
jae
pop
in
push
pop
dec
faddp
adc
data16
ret
(bad)
(bad)
inc
lds
aam
out
mov
out
fild
repnz
fs
lods
jl
imul
(bad)
(bad)
jg
add
in
je
jg
fnstsw
xchg
and
mov
cld
(bad)
das
loop
(bad)
call
push
movs
mov
ror
sti
sbb
push
xor
xchg
popa
pop
fwait
popf
(bad)
(bad)
(bad)
mov
mov
ficom
jae
adc
imul
mov
adc
jle
push
int3
arpl
test
cmp
sub
and
jl
(bad)
(bad)
(bad)
call
lods
dec
pop
cwde
pop
and
mov
xchg
push
mov
ret
sbb
lea
imul
pushf
dec
lahf
mul
or
(bad)
dec
rcr
dec
push
in
cmp
mov
jne
scas
mov
test
and
pop
mov
jns
cld
into
pop
fiadd
aas
add
std
mov
sbb
mov
sbb
adc
push
mov
inc
sbb
mov
cdq
adc
mov
xor
(bad)
jmp
inc
pusha
clc
push
xchg
sbb
mov
imul
fidivr
iret
xor
sti
sbb
dec
xor
in
jmp
inc
jg
xlat
inc
pop
push
sub
(bad)
(bad)
call
or
adc
mov
jbe
xchg
call
xchg
add
repnz
pop
(bad)
(bad)
(bad)
(bad)
fisub
push
enter
xchg
xchg
ins
mov
xor
mov
(bad)
(bad)
(bad)
(bad)
mov
xlat
pop
jbe
das
pushf
xor
in
inc
xor
mov
call
add
(bad)
jmp
popa
xchg
pushf
aaa
pop
xchg
mov
(bad)
push
adc
jno
popf
mov
(bad)
(bad)
(bad)
jmp
jo
mov
cdq
xchg
lods
imul
jnp
sub
xchg
outs
shr
cmp
xor
jnp
fisttp
lahf
push
cwde
mov
cmp
add
(bad)
call
or
pusha
jnp
stos
mov
movs
and
movs
add
xor
pushf
jbe
(bad)
(bad)
mov
mov
les
mov
cmc
(bad)
ja
cli
scas
in
retf
sbb
out
cmp
neg
(bad)
(bad)
(bad)
mov
or
jecxz
xchg
sbb
cld
jl
mov
sahf
mov
jne
(bad)
(bad)
(bad)
call
sub
inc
cmps
ret
dec
jae
adc
push
stos
outs
data16
bound
lock
pop
neg
mov
mov
mov
scas
cdq
leave
ins
cmps
sahf
push
jmp
push
sbb
mul
add
push
and
or
mov
(bad)
mov
in
fcom
cmps
adc
fdivrp
xlat
cmp
pop
and
dec
xor
jecxz
stos
mov
dec
rcr
pushf
sub
leave
in
or
sar
push
dec
xchg
xchg
mov
mov
sub
inc
sbb
fnstenv
popf
xor
idiv
(bad)
fcomip
movs
out
fwait
aam
push
inc
out
movs
jecxz
(bad)
scas
inc
stos
xchg
inc
in
sbb
sub
sar
inc
dec
clc
sbb
scas
push
adc
cld
(bad)
(bad)
inc
call
aaa
cmps
or
ins
fld
dec
mov
cs
(bad)
(bad)
call
aas
inc
mov
jo
adc
in
mov
mov
loope
bound
or
jge
sti
mov
ins
push
sbb
or
add
stos
test
(bad)
mov
out
push
jbe
push
mov
(bad)
push
push
or
pop
(bad)
cmp
mov
das
in
daa
fs
call
aad
and
(bad)
in
loop
(bad)
(bad)
jmp
xchg
mov
pop
add
push
inc
fbstp
adc
xchg
inc
(bad)
pop
cld
dec
jmp
cmps
dec
xchg
push
and
out
push
fwait
(bad)
into
gs
adc
clc
fwait
and
fisubr
enter
clc
(bad)
jmp
mov
inc
inc
push
inc
xchg
or
jle
sbb
ja
inc
inc
push
sar
push
mov
mov
loop
pop
pop
loopne
adc
sbb
pop
ret
aas
push
shr
imul
or
(bad)
(bad)
(bad)
mov
sub
in
imul
mov
jns
sub
sti
jnp
cs
jg
inc
cmp
cmps
fstp
add
cmc
and
push
mov
shr
stos
jmp
mov
sbb
rcl
pop
loopne
movs
jg
(bad)
(bad)
(bad)
(bad)
jmp
je
(bad)
jge
inc
ret
inc
xlat
or
cli
cmps
fidivr
push
adc
or
jmp
bound
mov
enter
sub
pusha
std
loop
into
push
dec
das
sub
xor
cmp
call
call
mov
ficomp
std
push
test
jmp
jg
imul
(bad)
jmp
aam
push
iret
cmp
xchg
jne
jnp
icebp
sbb
(bad)
movs
push
popf
sbb
(bad)
jmp
mov
lds
push
repnz
jmp
xchg
outs
jle
cmp
in
test
jne
cli
jp
(bad)
(bad)
jmp
add
xor
add
pusha
push
and
mov
mov
bound
mov
ss
cmps
adc
scas
out
pusha
xchg
xchg
push
push
mov
(bad)
mov
adc
(bad)
(bad)
push
in
xor
ret
dec
iret
jle
not
and
mov
lea
pop
(bad)
popf
sub
mov
mov
(bad)
(bad)
inc
pop
nop
or
(bad)
push
movs
cmp
mov
imul
pop
(bad)
(bad)
(bad)
push
rol
cmp
and
jo
xchg
and
daa
cmp
mov
clc
call
xchg
fist
in
enter
mov
test
inc
and
mov
dec
dec
cmps
and
(bad)
jne
in
sbb
pop
shl
(bad)
jg
jmp
out
les
adc
into
jle
mov
cmp
push
adc
pushf
pop
jnp
(bad)
(bad)
call
in
adc
aas
cmps
sub
or
mov
adc
fild
call
jge
(bad)
mov
cmp
neg
push
and
imul
or
imul
sub
(bad)
(bad)
inc
movs
loope
add
iret
push
or
fstp
fxch
daa
ret
les
loop
hlt
sub
into
cmps
mov
add
inc
inc
or
(bad)
mov
hlt
fwait
movs
mov
out
cmp
(bad)
cmp
retf
stos
inc
(bad)
jle
mov
repnz
mov
rcr
es
(bad)
(bad)
push
xchg
movs
add
dec
inc
in
and
lds
mov
lods
scas
xchg
not
aaa
or
(bad)
(bad)
mov
adc
cmp
sbb
mov
ror
mov
inc
and
push
pushf
fistp
push
or
inc
and
mov
xchg
adc
loop
pop
in
outs
sar
push
pop
push
(bad)
(bad)
(bad)
jmp
jmp
ret
jo
push
fmul
or
lock
fidiv
int3
mov
pop
add
(bad)
(bad)
call
or
jo
adc
xchg
imul
movs
loop
pusha
sahf
addr16
adc
and
inc
xchg
icebp
test
push
push
and
shl
outs
rcr
inc
retf
and
(bad)
(bad)
push
jmp
mov
and
cmps
popa
cli
xchg
sahf
arpl
push
push
arpl
(bad)
call
or
sbb
sbb
sub
jge
pop
xchg
pop
stos
dec
loopne
out
imul
(bad)
(bad)
(bad)
ds
jbe
ret
in
repz
push
push
scas
inc
mov
add
fwait
test
sub
lods
loope
dec
js
dec
(bad)
inc
mov
cmp
add
push
fisub
test
das
clc
mov
mov
push
or
mov
cmps
bound
clc
push
xchg
sub
mov
addr16
int3
sub
pop
jmp
xchg
push
dec
sub
add
pmullw
retf
loop
inc
pop
jecxz
movs
data16
fsubr
pop
sub
rcl
or
push
ds
sub
xchg
ja
pushf
dec
sub
sub
dec
test
(bad)
(bad)
jg
sub
jo
rcr
xor
cdq
pushf
ret
mov
bound
bound
scas
out
test
xchg
ret
loopne
retf
cmp
adc
cld
(bad)
mov
aam
fst
jb
dec
int3
mov
jmp
call
adc
retf
inc
sbb
ins
cmp
cs
aas
repnz
push
popf
call
test
retf
add
mov
lods
pop
and
retf
dec
sbb
inc
fidivr
js
fcomp
aaa
ret
xlat
pop
stos
int3
sbb
pop
pusha
lods
xor
add
js
fs
cmp
(bad)
stc
(bad)
add
sar
or
fidiv
xlat
out
xor
fist
cs
(bad)
loopne
(bad)
in
fdiv
jl
pop
dec
mov
data16
retf
add
std
mov
outs
jmp
aad
pushf
enter
es
or
fisubr
push
xchg
push
adc
(bad)
mov
outs
push
test
out
push
(bad)
adc
ficomp
mov
(bad)
and
mov
shl
inc
(bad)
jge
inc
adc
push
nop
ja
out
jbe
sbb
adc
xchg
cmc
or
inc
push
dec
(bad)
(bad)
(bad)
call
and
mov
add
xor
sub
fcmovnu
xchg
(bad)
fisttp
(bad)
(bad)
(bad)
call
adc
and
rcl
je
pop
xchg
xchg
inc
movs
sahf
sbb
jp
movs
aaa
(bad)
jmp
ror
dec
add
inc
dec
push
add
aam
dec
adc
(bad)
dec
std
add
xchg
cmp
in
cmp
and
retf
adc
cmp
cdq
xchg
or
scas
fdivr
popa
cmp
lods
rcr
mov
popf
jns
dec
inc
and
add
fcomip
cdq
adc
sub
lods
(bad)
inc
mov
cmp
mov
ins
pop
xor
inc
xchg
jl
(bad)
(bad)
(bad)
jg
xor
scas
cwde
add
(bad)
push
dec
pop
xor
fnsave
push
xor
(bad)
(bad)
(bad)
(bad)
(bad)
loopne
call
enter
dec
(bad)
in
sbb
retf
mov
inc
(bad)
dec
pop
hlt
(bad)
dec
out
movs
lods
push
or
iret
shl
shl
pop
out
xor
nop
inc
call
stos
test
hlt
lds
sub
cmc
mov
dec
cmp
sbb
sub
pusha
jo
into
pop
in
test
cmp
(bad)
jmp
cs
clc
or
call
xchg
cmps
adc
out
mov
movs
xchg
hlt
sub
and
cmp
in
out
(bad)
(bad)
jmp
mov
sub
mov
(bad)
adc
fild
cmp
dec
xchg
mov
dec
xor
inc
ins
mov
xor
xlat
cmp
mov
dec
sub
fs
push
(bad)
and
pop
sbb
loope
scas
clc
(bad)
(bad)
cmp
scas
rcr
mov
sub
dec
fidiv
fidivr
and
xchg
push
outs
pop
sub
ret
fist
aam
shl
loopne
dec
cwde
icebp
out
jb
test
(bad)
(bad)
(bad)
inc
int3
aad
loope
sbb
enter
das
ret
call
neg
inc
jmp
jbe
iret
cwde
packsswb
(bad)
(bad)
(bad)
jmp
(bad)
out
dec
pusha
jns
lds
fld
push
rcr
gs
jp
(bad)
mov
repnz
scas
dec
and
in
mov
call
push
mov
xchg
and
dec
mov
xchg
sub
(bad)
(bad)
(bad)
clc
dec
nop
js
shl
push
pushf
sbb
jns
icebp
lea
jge
inc
outs
int
sar
jg
jmp
enter
push
das
cmps
icebp
xor
popa
sbb
mov
xchg
mov
or
(bad)
(bad)
dec
(bad)
outs
mov
aas
push
mov
in
das
(bad)
(bad)
(bad)
mov
imul
fcomp
dec
jb
es
inc
(bad)
pusha
iret
and
sub
push
xchg
fdivr
fdivp
(bad)
cmp
jnp
fwait
leave
dec
dec
pop
fs
pop
(bad)
and
inc
adc
fild
pop
out
test
pop
bound
push
dec
sbb
repz
push
in
fcomi
imul
jecxz
outs
inc
cld
(bad)
(bad)
dec
movs
retf
mov
sub
mov
jl
inc
sub
fnstenv
(bad)
inc
or
sbb
and
in
pop
push
push
scas
mov
xchg
pop
rcl
jmp
jmp
and
out
sub
stos
call
inc
push
jp
enter
add
fdivr
(bad)
(bad)
call
mov
xor
retf
sub
inc
mov
jecxz
mov
call
inc
(bad)
(bad)
(bad)
(bad)
aas
add
push
mov
push
nop
sub
ins
in
sub
ins
or
cmps
or
xchg
add
push
xchg
inc
sbb
or
xchg
or
(bad)
(bad)
(bad)
cld
cs
jmp
stos
mov
loopne
add
pop
mov
add
sbb
cdq
jmp
mov
push
pop
pop
jno
dec
mov
xchg
out
(bad)
push
(bad)
push
jo
push
fnstenv
and
(bad)
add
jp
push
(bad)
cwde
cmp
test
call
aad
fcom
jmp
xchg
aad
scas
das
mov
(bad)
(bad)
(bad)
out
ror
push
stc
fisttp
jbe
xor
fist
mov
addr16
cmp
xchg
(bad)
(bad)
(bad)
push
and
fist
xchg
pop
add
add
add
fcomp
sub
jmp
jl
call
jp
sub
pop
js
ins
lds
xor
icebp
aas
push
xlat
ds
jl
and
jnp
mov
outs
mov
(bad)
jmp
in
int
sahf
xchg
jae
mov
cs
push
mov
mov
(bad)
(bad)
push
sub
mov
fs
sbb
ja
push
mov
cli
(bad)
(bad)
push
outs
pusha
repnz
cmps
push
pop
sbb
jmp
aad
loopne
xor
(bad)
(bad)
jmp
fsubr
mov
and
fsubr
sbb
adc
(bad)
(bad)
(bad)
inc
pop
xor
push
shl
sub
in
jo
sbb
or
jno
xor
and
push
and
and
mov
(bad)
jg
adc
test
pushf
mov
leave
lea
stos
mov
push
pop
out
push
(bad)
(bad)
(bad)
inc
out
jo
xchg
mov
or
push
sbb
add
sbb
pop
out
ror
ret
fcom
movs
clc
and
(bad)
xchg
cmps
enter
outs
loop
sub
sti
(bad)
(bad)
(bad)
call
(bad)
out
add
or
les
and
jne
inc
test
inc
cmps
and
jnp
ja
ins
inc
ins
dec
cmp
enter
scas
test
in
jmp
(bad)
(bad)
cmp
repnz
cld
ds
retf
cmp
adc
push
(bad)
(bad)
(bad)
mov
cmps
fst
adc
std
xor
icebp
and
or
imul
call
push
and
adc
ret
mov
mov
fs
push
test
or
ins
cmps
test
loope
sbb
mov
or
out
sar
gs
cmp
fidiv
inc
fistp
fisubr
hlt
sbb
loopne
(bad)
(bad)
(bad)
call
xchg
mov
jne
xor
push
sub
mov
pop
fbstp
daa
retf
out
xchg
push
dec
(bad)
(bad)
push
ret
pop
out
fcmovnb
lahf
rol
das
xchg
xor
xor
rcl
(bad)
call
ja
mov
fbld
mov
push
shl
sub
jl
jmp
enter
cmps
jno
jl
sub
or
ja
sahf
pop
push
fsubr
and
and
(bad)
call
xchg
mov
cmps
adc
hlt
loope
sub
(bad)
(bad)
call
xchg
test
push
jmp
jmp
mov
jmp
jb
push
dec
sub
cli
(bad)
push
push
aad
neg
and
jle
cmp
pop
mov
mov
adc
jmp
ficomp
xor
sti
sar
call
(bad)
(bad)
(bad)
jmp
inc
imul
sub
pop
cmp
push
loope
out
push
cld
mov
cmc
and
(bad)
(bad)
(bad)
call
jge
ret
inc
xor
jmp
inc
xor
inc
jl
ret
movs
(bad)
(bad)
(bad)
call
mov
mov
sub
add
jmp
mov
stos
fbld
mov
xchg
(bad)
(bad)
(bad)
inc
cli
test
shl
pop
test
popa
xchg
sub
in
jmp
je
and
popa
mov
(bad)
cmp
inc
pop
es
dec
jno
std
mov
repnz
pop
push
jmp
(bad)
(bad)
(bad)
inc
fwait
(bad)
ds
sahf
(bad)
sbb
sub
sti
cmp
dec
sbb
xor
out
push
sbb
xchg
cs
sbb
and
retf
jbe
jmp
(bad)
(bad)
mov
jo
daa
xchg
dec
and
push
scas
(bad)
jle
pop
mov
push
cld
sti
(bad)
(bad)
(bad)
jmp
(bad)
mov
pop
add
xlat
cmc
mov
jmp
(bad)
add
test
sar
(bad)
push
push
push
add
imul
call
jle
cdq
sbb
sub
jae
(bad)
(bad)
call
fdivr
or
add
mov
dec
dec
shr
popa
mov
sbb
in
mov
es
int3
and
mov
dec
sub
imul
int3
xchg
shr
je
push
dec
(bad)
(bad)
(bad)
inc
std
inc
ss
push
push
aam
lods
pop
cmp
push
mov
loop
mov
sahf
pusha
popf
push
mov
ins
mov
and
cmc
mov
stc
cmp
mov
push
retf
call
sbb
push
or
repnz
ins
jbe
fisubr
mov
cmp
lahf
cmp
mov
fisub
xchg
ret
loopne
nop
jle
xchg
jmp
push
(bad)
(bad)
(bad)
jmp
call
push
fnstsw
sub
and
jl
xchg
iret
push
xchg
jbe
jbe
push
(bad)
(bad)
(bad)
jmp
in
shl
sbb
pop
add
adc
and
(bad)
push
sbb
lods
jno
(bad)
(bad)
call
in
sub
pop
and
lods
mov
fwait
xchg
or
mov
sub
retf
mov
lock
dec
sbb
dec
call
cmp
das
test
jg
push
cld
enter
imul
add
outs
add
int3
std
pop
(bad)
(bad)
dec
pop
ins
je
int3
mov
mov
ret
cmp
xchg
repnz
xchg
jge
icebp
(bad)
(bad)
call
pop
mov
das
loope
dec
fdiv
mov
and
or
lahf
mov
(bad)
jmp
sub
mov
push
rep
sub
and
shl
cmp
adc
xchg
mov
or
out
or
pushf
cmps
call
jae
(bad)
out
cli
mov
(bad)
fsub
pop
out
jmp
xchg
inc
xchg
popf
push
add
push
mov
sbb
add
xchg
les
pop
fild
rcl
fwait
and
mov
pop
jecxz
pop
aad
adc
ins
pop
mov
cs
clc
mov
(bad)
cld
or
(bad)
(bad)
(bad)
dec
(bad)
sub
push
dec
scas
out
or
jge
xlat
push
in
lods
cmp
pop
in
gs
das
mov
lahf
xchg
mov
mov
imul
es
or
mov
(bad)
fcom
in
dec
and
cwde
jne
pop
stc
jmp
inc
xor
(bad)
call
call
das
std
push
adc
stos
imul
xchg
xor
call
push
sar
call
aam
pop
and
jnp
es
xchg
mov
pop
and
ja
loopne
(bad)
(bad)
jg
xchg
test
std
outs
inc
or
xchg
out
clc
enter
ins
jo
sub
xor
(bad)
(bad)
dec
jecxz
push
mov
xor
mov
test
int3
xor
xor
jg
(bad)
dec
test
pushf
imul
or
mov
les
xlat
(bad)
cmp
add
jae
adc
(bad)
(bad)
daa
arpl
call
fs
add
call
es
pop
or
lods
call
adc
xchg
data16
jnp
jnp
xchg
xor
and
test
push
inc
aam
dec
sub
mov
(bad)
(bad)
(bad)
(bad)
jmp
dec
pusha
mov
dec
repz
sub
bound
inc
sub
rol
cs
clc
jmp
fsubr
popf
sar
push
xor
push
aad
addr16
jae
in
fmul
adc
call
jns
inc
pop
test
ja
loopne
stos
scas
mov
ja
dec
mov
stos
cmps
jbe
xchg
push
outs
(bad)
retf
sahf
sbb
fcomip
jmp
aaa
push
cmp
out
mov
test
fisttp
pop
pop
jge
mov
in
sbb
scas
fucom
fstp
push
jmp
mov
mov
cmps
loop
sbb
sub
cld
(bad)
jmp
mov
dec
push
outs
dec
data16
push
in
mov
(bad)
(bad)
mov
xor
or
or
mov
ret
stc
pop
mov
(bad)
(bad)
(bad)
(bad)
clc
mov
or
pop
cmp
shr
adc
sbb
ffreep
xchg
xchg
jno
(bad)
(bad)
jmp
xchg
pop
jecxz
mov
jae
or
fst
mov
adc
pusha
and
push
std
call
call
popa
jle
and
out
shl
cdq
xor
pop
loopne
fidivr
jge
add
sbb
lahf
dec
mov
lahf
lds
dec
cmc
enter
pop
jge
xchg
and
in
(bad)
retf
mov
add
add
aaa
call
(bad)
(bad)
call
mov
loope
icebp
sbb
and
cmp
cli
add
shl
or
bound
mov
out
xchg
mov
leave
jge
ins
loop
inc
nop
popf
cmc
je
scas
cld
inc
mov
mov
(bad)
(bad)
fisttp
popa
cs
sub
xchg
mov
pop
mov
jb
or
jno
loopne
(bad)
jg
jp
jp
call
lds
shl
cmps
je
adc
jb
pusha
lock
daa
mul
push
mov
add
mov
mov
inc
test
test
jno
(bad)
jg
into
lea
mov
neg
and
adc
rcl
rcl
(bad)
push
ins
and
aaa
add
inc
sbb
mov
pop
cwde
ret
dec
and
push
icebp
sti
call
cs
ror
or
movs
xchg
cli
ret
pop
or
add
xchg
xchg
aaa
xchg
xchg
or
outs
jp
mov
mov
mov
pop
mov
repz
ins
sub
pusha
dec
sbb
cwde
mov
js
or
stos
call
(bad)
(bad)
jg
fisubr
jb
or
loopne
loopne
jmp
mov
loopne
(bad)
jg
(bad)
out
iret
inc
dec
and
xor
sahf
and
pop
pusha
lea
outs
(bad)
(bad)
(bad)
in
mov
scas
mov
mov
push
es
xor
das
jecxz
inc
enter
mov
or
imul
push
lods
int
and
fs
rcr
cld
int3
sbb
fwait
test
(bad)
jg
cmp
jle
loope
ds
imul
jnp
jmp
xchg
shl
(bad)
inc
ror
retf
cmp
pop
xchg
dec
loope
lds
jnp
lahf
not
fnstenv
inc
fprem
outs
mov
dec
imul
mov
xlat
call
int3
sub
or
pushf
cwde
mov
loopne
dec
and
scas
loop
jno
(bad)
(bad)
(bad)
call
or
xchg
enter
arpl
pop
pop
lock
(bad)
out
sbb
add
jg
pop
add
jle
out
sub
enter
(bad)
call
pop
out
add
sub
pop
fcmove
push
outs
add
in
sbb
test
sbb
mov
jle
pop
xor
lahf
push
pushf
rcl
jmp
and
outs
xor
popa
jmp
pop
clc
xchg
scas
add
jle
inc
pop
dec
(bad)
(bad)
(bad)
(bad)
aas
bound
adc
arpl
push
(bad)
int
cdq
mov
push
je
and
popf
add
push
cld
(bad)
(bad)
push
popf
data16
sub
test
pop
shl
(bad)
out
movs
add
jge
lods
(bad)
sub
(bad)
push
pop
xchg
jecxz
sbb
add
loopne
inc
xor
jmp
jle
pop
inc
loopne
test
jmp
or
sbb
test
or
pop
add
in
pop
(bad)
jmp
sar
ja
inc
popf
ds
jbe
pop
xchg
into
ss
push
out
out
inc
push
dec
push
(bad)
(bad)
(bad)
jg
fdivr
and
aad
and
mov
jp
repnz
rcl
loop
mov
pop
inc
(bad)
(bad)
(bad)
call
xchg
mov
push
cli
xor
sbb
push
jge
nop
jge
mov
mov
(bad)
arpl
fstp
add
sar
aam
jle
(bad)
(bad)
(bad)
inc
inc
(bad)
jb
add
dec
push
leave
push
aas
jle
push
xchg
scas
xchg
sbb
(bad)
int
cli
repnz
dec
outs
mov
mov
cmp
(bad)
(bad)
jmp
adc
cmp
inc
jl
fwait
fwait
xor
lock
fild
das
push
push
mul
leave
pop
mov
add
jne
stc
dec
cmp
inc
fwait
pop
sub
fdiv
xchg
adc
aas
nop
(bad)
(bad)
(bad)
jg
cmp
or
xor
stos
and
mov
imul
xor
jno
fcomp
(bad)
(bad)
(bad)
mov
fimul
hlt
sbb
and
jmp
or
aam
fistp
(bad)
(bad)
(bad)
dec
jb
aas
and
call
scas
mov
adc
dec
fist
leave
ds
cmp
adc
jmp
arpl
ret
push
xor
(bad)
(bad)
inc
push
sbb
mov
cmp
stos
fstp
cmp
pop
shl
jo
xor
std
(bad)
call
int
retf
push
or
ret
pop
fild
or
adc
stc
sbb
add
ins
(bad)
(bad)
(bad)
jmp
push
sub
and
cmp
ins
and
test
mov
xchg
add
add
call
cmp
pop
sbb
neg
add
imul
mov
pop
or
sub
(bad)
(bad)
(bad)
(bad)
dec
(bad)
ficomp
neg
jne
xor
ins
ror
shl
xchg
lods
les
or
jecxz
(bad)
(bad)
(bad)
call
cmp
inc
loope
and
hlt
(bad)
popa
lods
jmp
jb
jge
addr16
cmp
imul
push
cmp
std
(bad)
mov
arpl
(bad)
dec
int
xor
inc
mov
mov
xchg
xor
jno
outs
fidivr
div
mov
pop
pop
(bad)
(bad)
(bad)
(bad)
mov
stc
jne
xor
mov
pop
fcmovnb
cwde
cmp
push
sub
sbb
(bad)
(bad)
inc
sbb
mov
jge
clc
mov
lock
(bad)
(bad)
mov
jae
lea
dec
mov
imul
jnp
imul
inc
or
(bad)
call
(bad)
in
ror
pop
imul
mov
(bad)
(bad)
(bad)
dec
jnp
mov
xchg
add
stos
std
enter
or
sti
or
add
dec
test
iret
repz
sbb
sub
int3
rol
xor
push
(bad)
(bad)
(bad)
jg
or
retf
lods
loopne
(bad)
inc
mov
loopne
cdq
sub
mulps
scas
hlt
push
cwde
mov
inc
stos
call
push
fistp
xchg
dec
sti
frstor
inc
imul
cli
jg
repnz
jle
nop
popa
in
rcl
mov
pop
jle
inc
sbb
(bad)
(bad)
call
lods
adc
push
pop
sub
imul
sub
jbe
enter
jl
pop
add
(bad)
(bad)
(bad)
(bad)
stc
lock
pop
jae
mov
and
xor
dec
pusha
ret
in
dec
xchg
gs
pop
inc
cmps
mov
daa
mov
and
(bad)
(bad)
jmp
sbb
lds
daa
dec
scas
pop
nop
sub
dec
ficomp
aad
daa
and
cmp
jbe
and
(bad)
(bad)
aas
xchg
and
inc
retf
out
lea
mov
mov
ret
out
aas
mov
inc
shl
call
jno
fnstsw
add
repnz
sbb
dec
in
mov
cmp
stos
sbb
fist
jno
out
(bad)
(bad)
dec
push
adc
mov
into
dec
inc
out
dec
ds
movs
or
repz
gs
(bad)
(bad)
(bad)
jnp
jnp
lea
sahf
daa
and
jae
and
arpl
pop
add
ins
fwait
jbe
and
(bad)
(bad)
(bad)
mov
(bad)
gs
inc
jae
pusha
and
aaa
mov
imul
cwde
pushf
and
lods
cmps
mov
jmp
mov
lods
xchg
add
pusha
aad
out
jne
ds
inc
call
dec
(bad)
ret
xor
and
cdq
mov
dec
and
ret
fstp
xlat
jmp
fild
stos
or
jb
cmp
movs
imul
push
add
sub
in
push
pusha
call
std
jmp
shl
ret
and
adc
sbb
mov
outs
(bad)
(bad)
(bad)
jmp
dec
(bad)
jmp
mov
dec
ret
js
mov
dec
xor
xchg
adc
(bad)
mov
jecxz
test
or
in
loope
dec
push
std
scas
stc
add
repnz
push
(bad)
(bad)
(bad)
(bad)
inc
repnz
inc
jno
pop
cmp
es
std
(bad)
and
shr
lock
or
cld
and
(bad)
(bad)
(bad)
call
jecxz
fisub
nop
inc
retf
out
dec
retf
xor
and
mov
int3
repnz
pop
push
shl
lea
cmc
lahf
inc
dec
ins
test
and
mov
xor
(bad)
(bad)
jmp
(bad)
pop
mov
push
(bad)
pop
sbb
pop
mov
xor
(bad)
(bad)
jmp
and
scas
stos
(bad)
aad
pop
in
jns
inc
cdq
or
xchg
mov
mov
jno
mov
scas
dec
stos
push
sbb
mov
and
add
or
jp
stos
daa
test
cwde
out
stc
int
jnp
pop
pop
jecxz
(bad)
(bad)
(bad)
dec
jne
or
movzx
sub
enter
sub
arpl
xor
imul
sub
out
add
test
cld
sbb
xchg
lods
sbb
into
pop
or
mov
fild
push
jb
pop
std
inc
rep
push
cld
aam
jmp
jle
jns
arpl
scas
mov
into
call
inc
lock
call
ret
push
cmp
mov
add
cmp
(bad)
(bad)
inc
adc
xchg
(bad)
push
out
mov
adc
inc
je
mov
(bad)
stc
fnsave
hlt
pop
ja
ins
fdiv
jbe
lock
xchg
jb
and
sbb
or
test
cmp
pusha
icebp
inc
(bad)
(bad)
(bad)
jmp
rcr
mov
and
ret
and
fadd
mov
jmp
(bad)
jnp
jns
xchg
aas
fcmovnb
pop
retf
ss
inc
mov
stc
push
(bad)
push
test
dec
or
pop
xchg
jb
movs
sub
sub
add
lahf
out
pushf
addr16
(bad)
(bad)
dec
cmp
pop
inc
add
add
xchg
xchg
mov
push
int3
ins
cmp
mov
mov
mov
push
loope
inc
aam
add
jnp
fucomi
int3
inc
popa
clc
je
loope
push
jb
(bad)
(bad)
(bad)
jmp
shl
int3
mov
xor
fnstcw
inc
mov
jmp
(bad)
(bad)
(bad)
push
bound
shr
xor
(bad)
out
pop
neg
movs
ins
cwde
(bad)
daa
inc
lds
sbb
(bad)
(bad)
(bad)
out
xor
movs
mov
xchg
mov
test
into
mov
int3
xchg
mov
mov
ins
xchg
mov
inc
shl
pop
rcr
xchg
xor
(bad)
(bad)
push
pop
sahf
and
mov
dec
mov
mov
mov
dec
sbb
jmp
sbb
fld
sub
sti
inc
dec
neg
mov
(bad)
dec
stos
sub
outs
dec
cmps
int3
imul
enter
and
(bad)
(bad)
(bad)
fist
cwde
(bad)
mov
xor
xor
add
sbb
repnz
cmp
pop
push
add
(bad)
(bad)
jmp
jp
xor
sub
add
(bad)
(bad)
stos
sahf
shl
ror
jne
xor
(bad)
(bad)
call
jnp
in
cli
fs
push
sbb
sbb
or
dec
enter
(bad)
(bad)
mov
inc
gs
xchg
scas
mov
rcl
(bad)
(bad)
call
sbb
repz
jecxz
retf
aam
cmp
ds
cmp
and
xor
dec
sub
int
fild
add
or
arpl
nop
jmp
jl
cdq
or
sbb
fidivr
dec
les
scas
xor
sub
and
loope
call
adc
(bad)
(bad)
(bad)
call
inc
mov
xchg
je
mov
jl
inc
mov
fs
pop
mov
pop
(bad)
dec
lock
or
lods
cmp
jbe
shl
cmp
sub
aam
imul
jae
mov
fcom
push
and
and
push
ret
ficom
lods
in
idiv
pop
add
push
out
adc
cmp
mov
cmps
test
add
mov
(bad)
(bad)
dec
xor
fnstenv
pop
(bad)
jecxz
mov
or
fwait
xor
addr16
xchg
(bad)
(bad)
(bad)
call
cmp
jmp
cmp
das
add
dec
xor
xchg
gs
outs
clc
(bad)
dec
push
mov
clc
arpl
out
je
mov
nop
cs
cld
push
jbe
mov
(bad)
lock
add
lock
fiadd
stos
mov
stos
out
push
call
cld
pop
mov
xor
cdq
push
fsub
and
aas
add
cmps
mov
lds
jecxz
dec
inc
sahf
sbb
xchg
sub
dec
and
and
icebp
mov
shl
mov
(bad)
(bad)
(bad)
(bad)
cld
mov
cs
adc
cmp
mov
dec
sub
mov
cmps
pop
test
(bad)
jg
(bad)
ds
cmp
xchg
gs
outs
mov
out
pop
mov
jb
(bad)
(bad)
(bad)
std
cdq
outs
mov
adc
xor
push
fcmove
or
mov
(bad)
(bad)
dec
cmp
sbb
in
jne
ins
imul
adc
or
int3
jmp
call
xor
mov
lods
clc
sar
mov
(bad)
(bad)
dec
inc
cmp
xchg
adc
in
xor
mov
je
add
das
push
sahf
inc
xor
lods
scas
pop
movs
jb
call
cmp
sbb
(bad)
(bad)
(bad)
jmp
imul
mov
test
inc
in
pop
gs
xor
cdq
(bad)
(bad)
(bad)
call
aad
test
inc
sub
data16
cmc
inc
pop
jmp
ja
ss
xchg
sti
push
push
cmp
dec
pop
mov
pop
adc
mov
sbb
call
mov
xchg
inc
push
mov
sub
push
(bad)
sbb
pop
dec
xor
call
in
call
inc
jg
hlt
ret
fwait
ror
jl
sub
cmp
(bad)
jg
(bad)
jns
sbb
mov
ret
daa
es
add
aad
dec
jl
(bad)
call
cmps
push
aaa
mov
lahf
cmp
jecxz
cld
push
popf
add
(bad)
(bad)
(bad)
jl
movs
stos
aam
bound
cmp
call
or
mov
push
addr16
jb
add
icebp
xchg
outs
or
cmp
dec
call
dec
mov
call
or
mov
pop
cmovl
jle
dec
ja
retf
jl
test
sbb
into
repnz
or
mov
arpl
popf
and
(bad)
(bad)
(bad)
push
dec
mov
lods
pmulhw
cmc
iret
enter
push
mov
pop
jo
xchg
inc
test
mov
outs
popf
add
inc
movs
(bad)
das
adc
test
mov
call
les
lds
adc
popa
ja
jp
fcomip
xchg
retf
pop
cmp
enter
dec
dec
jecxz
(bad)
mov
mov
inc
add
ins
je
adc
(bad)
loop
jle
mov
cmps
es
loope
xchg
push
push
and
test
xchg
rcl
dec
loopne
(bad)
call
cmp
mov
push
imul
fsubrp
aad
dec
adc
jmp
and
(bad)
call
clc
dec
sbb
lea
adc
push
sbb
mov
adc
push
repz
mov
(bad)
(bad)
jmp
inc
cmp
pop
scas
push
call
jmp
cmps
idiv
xor
cld
call
push
adc
iret
shr
jnp
xor
rcl
mov
jns
pop
pusha
js
js
test
push
inc
pop
repz
push
xor
out
(bad)
(bad)
(bad)
call
shl
xlat
(bad)
cld
xlat
xchg
push
and
cli
lods
cdq
mov
pop
scas
xchg
retf
ror
ror
(bad)
(bad)
in
xor
cli
fdiv
sbb
call
nop
out
cmp
(bad)
call
repnz
mov
mov
jecxz
jg
call
cmps
jecxz
mov
imul
cmp
int
dec
dec
sub
call
std
call
and
sbb
icebp
push
and
mov
test
xlat
xchg
cmp
fild
or
jnp
adc
push
add
out
clc
inc
out
ss
(bad)
(bad)
(bad)
jmp
scas
push
aad
or
in
xor
or
dec
addr16
and
and
jg
(bad)
int
(bad)
(bad)
push
arpl
int3
adc
pop
adc
addr16
dec
mov
addr16
aaa
mov
mov
movs
(bad)
in
xor
je
pusha
sbb
jae
mov
scas
jb
movs
repz
jmp
aam
sbb
inc
xchg
add
jecxz
(bad)
(bad)
push
stc
cdq
mov
and
loopne
or
inc
xchg
push
cs
jmp
imul
(bad)
mov
(bad)
clc
xchg
pop
(bad)
addr16
push
add
xchg
sbb
aas
jge
and
aas
inc
in
(bad)
jmp
sbb
popf
in
je
mov
cmp
cmp
aas
loop
iret
sbb
jmp
xlat
jnp
je
stos
xchg
dec
repnz
mov
jmp
gs
mov
mov
push
lods
ds
cmp
out
jne
inc
jl
pop
sbb
and
repz
xchg
clc
imul
test
xlat
cmps
cdq
(bad)
(bad)
dec
mov
mov
mov
enter
adc
mov
jmp
sbb
(bad)
(bad)
jmp
cmps
pop
add
push
in
(bad)
mov
mov
sar
adc
(bad)
mov
bound
pushf
jecxz
in
ss
inc
jg
or
icebp
into
(bad)
mov
jne
pushf
mov
mov
stos
bound
(bad)
(bad)
(bad)
jmp
mov
jns
fisub
push
fwait
push
or
mov
push
cmp
ret
(bad)
(bad)
(bad)
mov
mov
das
bound
cmp
out
retf
push
jg
stc
(bad)
lds
jmp
popa
(bad)
(bad)
(bad)
inc
sbb
mov
mov
pop
rol
cmp
cmc
jmp
pop
(bad)
call
loope
jnp
repnz
in
push
dec
push
or
sbb
aaa
loopne
(bad)
call
mov
enter
mov
(bad)
in
push
dec
retf
xchg
mov
cmp
mov
fimul
xor
mov
sub
and
jb
mov
jmp
mov
(bad)
mov
cdq
sub
or
not
jae
sub
pop
retf
xor
jmp
and
dec
xchg
push
nop
jmp
pop
lahf
clc
scas
and
(bad)
push
retf
xlat
(bad)
mov
xor
add
sar
mov
mul
mov
bound
out
jns
mov
mov
adc
xor
(bad)
jg
sub
jo
inc
rol
jne
cmp
mov
push
fisttp
pop
fisubr
mov
(bad)
push
cli
push
loope
pop
(bad)
add
xchg
dec
jp
jmp
lea
arpl
stos
iret
add
sbb
(bad)
(bad)
mov
ss
(bad)
jmp
or
mov
or
loopne
mov
push
mov
(bad)
(bad)
(bad)
mov
xor
push
sbb
jae
mov
data16
loop
lds
pushf
bnd
hlt
pop
xor
push
sub
(bad)
into
add
sbb
pop
and
mov
mov
jb
or
scas
gs
stc
cmps
cmp
mov
retf
je
jge
pop
aas
push
mov
js
(bad)
(bad)
jmp
shl
mov
call
or
popa
push
mov
sar
mov
mov
sub
add
ret
clc
mov
stc
push
(bad)
aad
mov
(bad)
call
fld
in
loop
sub
loop
mov
mov
bound
jle
out
(bad)
(bad)
(bad)
call
fadd
dec
out
stos
mov
add
add
sbb
or
mov
(bad)
(bad)
(bad)
jg
xor
shr
leave
leave
scas
hlt
test
into
repz
popa
add
mov
ret
xchg
inc
jmp
add
or
shl
sbb
lods
push
adc
fsub
(bad)
(bad)
(bad)
jmp
pop
fild
movs
add
stc
adc
pusha
dec
jae
into
xor
call
mov
clc
(bad)
(bad)
call
or
test
cmp
mov
jp
mov
jmp
pop
sub
(bad)
sahf
jae
ret
lock
and
add
or
shl
ja
(bad)
(bad)
call
(bad)
fdiv
cwde
out
js
sub
movs
in
pop
das
xchg
cmp
addr16
mov
jae
lahf
push
push
inc
or
xchg
fidiv
in
add
adc
cmp
mov
(bad)
(bad)
(bad)
call
sar
cmp
lds
xchg
dec
fs
sahf
scas
call
(bad)
(bad)
(bad)
mov
retf
fimul
aad
inc
(bad)
(bad)
jg
sub
pop
call
mov
hlt
mov
idiv
(bad)
(bad)
push
jp
popa
pop
push
xchg
sub
dec
add
pop
(bad)
jmp
xchg
scas
(bad)
(bad)
call
add
push
jge
mov
mov
mov
mov
jecxz
adc
cmps
add
int
dec
fld
pop
call
xor
or
fucomip
pop
sbb
(bad)
(bad)
inc
jecxz
in
sbb
inc
jo
leave
pop
pop
jg
out
xchg
mov
(bad)
(bad)
(bad)
jmp
xor
cmp
jmp
mov
mov
push
arpl
(bad)
(bad)
inc
sti
cdq
jbe
retf
adc
inc
idiv
push
les
aas
arpl
in
push
icebp
(bad)
push
stc
lods
rol
hlt
or
and
adc
loopne
cli
jmp
int3
push
lods
mov
xor
and
repnz
and
(bad)
sub
mov
cmp
mov
jle
scas
cs
or
jmp
(bad)
jle
sub
cwde
ret
ret
stc
or
mov
adc
ds
mov
sbb
add
data16
cwde
test
aaa
mov
ins
stos
popf
retf
pop
add
sbb
jmp
cmp
int3
pop
cld
(bad)
push
pop
pop
out
enter
arpl
mov
xor
cmp
mov
cmp
fcomip
movs
into
clc
jb
int3
fst
in
fwait
inc
(bad)
jmp
adc
push
dec
and
push
jmp
xchg
xchg
jecxz
xor
(bad)
inc
jns
icebp
sub
imul
inc
retf
gs
(bad)
mov
adc
out
dec
add
cli
xor
(bad)
(bad)
(bad)
inc
cwde
pushf
inc
lods
jmp
aad
hlt
sub
xchg
jb
sub
clc
fs
rcl
aam
jns
mov
(bad)
inc
dec
add
cmp
and
outs
inc
or
pop
ret
or
mov
xchg
retf
adc
pop
pmaxsw
push
xchg
sbb
je
push
push
pop
out
mov
xor
loop
jne
or
jo
bound
(bad)
jg
stos
cli
jbe
call
inc
out
sub
lahf
jno
(bad)
out
mov
(bad)
push
pop
mov
cdq
daa
lds
arpl
jno
cmp
out
(bad)
in
(bad)
(bad)
(bad)
jg
mov
ret
je
add
arpl
cmp
int
mov
(bad)
(bad)
push
mov
arpl
(bad)
leave
pop
cli
xchg
js
enter
retf
pop
and
inc
aam
(bad)
mov
jnp
enter
xor
(bad)
xor
or
jo
(bad)
(bad)
cmp
add
mov
icebp
dec
jmp
mov
pop
icebp
scas
stos
pop
push
sub
jmp
adc
aas
or
push
(bad)
(bad)
(bad)
jmp
retf
fst
aad
ss
arpl
in
ror
pop
addr16
outs
pop
fisub
pop
inc
(bad)
(bad)
jmp
fild
retf
push
adc
mov
mov
(bad)
(bad)
(bad)
push
push
aad
daa
scas
icebp
popf
inc
pop
std
movs
push
ins
pop
outs
sbb
enter
call
iret
inc
sub
(bad)
(bad)
(bad)
cmp
call
push
enter
mov
jne
push
fxtract
nop
jl
adc
and
fist
mov
(bad)
dec
inc
jbe
or
rol
sub
test
inc
div
pop
ins
push
rol
(bad)
(bad)
push
jle
jmp
sti
mov
sbb
das
sub
ins
or
and
inc
loopne
xchg
(bad)
pushf
dec
(bad)
(bad)
(bad)
jmp
imul
cmps
xor
mov
jg
rol
repnz
push
pop
out
cmp
xlat
xchg
mov
add
xchg
push
ja
adc
pop
das
jae
(bad)
(bad)
(bad)
call
in
shl
ja
pop
stos
sbb
ja
add
cmp
lods
jne
pop
pop
icebp
(bad)
dec
adc
icebp
xor
mov
sub
jo
xor
fcmovu
(bad)
(bad)
(bad)
(bad)
cld
(bad)
iret
cmp
iret
dec
cdq
test
sbb
(bad)
pop
push
aam
dec
cli
lahf
cmp
out
push
inc
sub
aaa
std
jle
in
mov
push
fist
cmp
push
sahf
sub
(bad)
jg
xor
add
rol
xor
dec
jo
inc
sbb
push
data16
pop
loope
fbld
sar
(bad)
(bad)
fdivr
test
cmps
mov
cmp
cmps
inc
mov
xor
call
dec
(bad)
mov
mov
mov
(bad)
(bad)
(bad)
call
jp
popa
mov
adc
enter
adc
add
iret
xchg
pop
cmc
sti
fwait
call
clc
jns
push
dec
lahf
test
rcl
push
dec
add
sbb
(bad)
mov
fsub
pop
mov
mov
ja
nop
push
ds
cmp
inc
pop
test
in
mov
xor
jp
iret
ja
dec
cmp
(bad)
(bad)
call
push
cmps
sbb
sbb
push
fild
pop
pop
jecxz
mov
mov
(bad)
(bad)
jmp
push
mov
push
cmps
fldenv
jmp
dec
icebp
lods
stos
mov
push
mov
call
mov
cdq
jle
inc
jnp
ins
mov
(bad)
call
ficomp
pop
pop
pop
iret
retf
cli
shl
popf
(bad)
sti
lods
sahf
or
call
cld
(bad)
fldcw
pop
daa
retf
jge
popa
(bad)
fcomp
popf
push
aam
out
mov
mov
dec
nop
inc
(bad)
mov
fucom
ss
ins
push
mov
popf
test
inc
cwde
rol
sub
(bad)
(bad)
(bad)
(bad)
mov
mov
add
and
pop
lea
xchg
das
lods
inc
or
stos
pop
jnp
mov
(bad)
call
jl
outs
xor
mov
cmc
aas
js
mov
inc
outs
jmp
cmp
(bad)
(bad)
stc
sbb
mov
inc
pusha
bound
cmp
push
mov
cmps
in
cmp
sbb
or
jno
(bad)
(bad)
mov
popa
mov
(bad)
ja
(bad)
sub
call
cmp
(bad)
(bad)
mov
mov
fst
ror
mov
jl
(bad)
adc
stos
pop
push
and
(bad)
dec
shl
stos
push
dec
ja
xchg
pusha
fmul
enterw
or
mov
ror
inc
cs
int3
xchg
sub
nop
mov
cmp
jp
xchg
xor
jmp
inc
mov
scas
push
cwde
push
or
push
xchg
mov
mov
mov
cmp
dec
(bad)
(bad)
jmp
xchg
js
mov
not
or
dec
(bad)
arpl
xchg
gs
cmps
stc
jge
or
xchg
icebp
loopne
fbld
(bad)
(bad)
(bad)
call
fcmovnu
xor
neg
repz
iret
jge
mov
and
jmp
loope
add
adc
aad
cs
or
(bad)
(bad)
mov
mov
add
push
daa
jge
cmps
push
inc
dec
enter
fcmovu
xor
pop
lock
call
add
mov
ss
push
(bad)
(bad)
(bad)
(bad)
sti
pop
adc
sbb
inc
cmp
xor
jle
push
mov
cmp
gs
(bad)
(bad)
(bad)
call
or
sub
aam
jg
or
shr
in
xchg
idiv
xchg
sub
push
push
ret
(bad)
(bad)
jmp
inc
sbb
ins
jge
into
mov
inc
(bad)
mov
stos
movs
data16
(bad)
(bad)
jg
fisttp
jo
fldenv
in
mov
fcomi
inc
jp
pop
lds
xchg
nop
xor
sar
(bad)
(bad)
inc
call
cmp
sbb
push
adc
add
shl
mov
std
(bad)
(bad)
(bad)
(bad)
fisub
jne
dec
stc
xchg
xchg
push
xor
fwait
lahf
aam
repnz
inc
fs
(bad)
(bad)
call
popa
cdq
dec
outs
pop
sub
mov
mov
inc
fnsave
es
shl
ret
jg
inc
jnp
fidiv
pop
pop
aaa
and
sbb
loopne
xchg
xchg
pop
rcl
inc
loop
mov
outs
ds
cmp
rcl
js
outs
test
mov
clc
sbb
pop
fsub
aas
mov
call
pop
pop
xor
aaa
inc
mov
(bad)
(bad)
dec
jg
and
mov
xchg
(bad)
in
xor
les
add
inc
test
clc
cmp
xchg
add
mov
mov
stc
fidivr
sahf
push
inc
movs
cmc
pusha
sahf
sbb
pop
fstp
clc
add
xor
inc
mov
or
xchg
inc
pop
cs
(bad)
jmp
cmps
mov
lods
(bad)
jnp
jl
xor
fs
movs
fdiv
xchg
inc
pop
and
cmps
push
(bad)
(bad)
(bad)
push
push
inc
mov
push
imul
out
aad
sahf
pop
mov
(bad)
sub
push
aad
cmps
sub
inc
repnz
ret
jp
sub
jmp
inc
xchg
push
sti
lock
inc
or
mov
push
dec
jae
push
enter
fcomp
test
push
cmc
(bad)
(bad)
push
dec
fsubr
jg
in
ret
push
ret
stc
cmp
inc
mov
(bad)
(bad)
fbld
jnp
jmp
inc
sub
xor
(bad)
or
popf
stc
or
dec
pop
push
(bad)
(bad)
(bad)
(bad)
mov
adc
jns
dec
fimul
rcl
pop
or
pop
mov
(bad)
jg
xchg
xor
or
xor
mov
scas
sbb
mov
into
mov
ins
cmp
ret
(bad)
push
imul
mov
push
cli
and
test
cmps
add
repnz
(bad)
(bad)
jmp
jge
sbb
lock
mov
sahf
push
inc
dec
push
sti
jmp
enter
icebp
mov
(bad)
(bad)
push
inc
shl
jl
in
sbb
lods
inc
dec
call
push
div
(bad)
(bad)
dec
inc
dec
fnstenv
sar
clc
xchg
or
in
inc
mov
jb
mov
stos
mov
(bad)
push
xlat
jmp
dec
push
or
add
mov
inc
pop
mov
sub
push
push
sub
(bad)
(bad)
(bad)
(bad)
sti
mov
sub
jle
xchg
int
cmc
(bad)
push
xor
xor
pop
rcl
xchg
push
rcr
mov
call
jmp
out
ds
dec
adc
push
repnz
adc
dec
add
mov
xor
pop
add
scas
mov
neg
or
jl
(bad)
ins
mov
(bad)
in
outs
push
mov
loop
ja
inc
pop
jmp
fisttp
cwde
xor
arpl
(bad)
inc
pop
and
mov
and
hlt
xchg
fwait
pop
pop
push
add
fild
(bad)
(bad)
(bad)
call
pop
or
out
inc
std
out
ret
sahf
out
adc
imul
popf
les
sbb
(bad)
mov
push
adc
movs
sub
mov
cmp
inc
fst
add
adc
pop
pop
cli
enter
(bad)
push
cmps
jne
adc
fs
pushf
and
jg
xchg
out
sahf
repnz
shl
(bad)
(bad)
jmp
or
mov
loope
loope
leave
mov
(bad)
sahf
dec
icebp
popa
aad
pop
aad
idiv
(bad)
call
mov
outs
enter
dec
pop
cmps
retf
mov
mov
je
fisubr
(bad)
push
xor
dec
push
popa
xchg
mov
jg
mov
lea
xchg
adc
lea
movs
scas
cli
(bad)
(bad)
jp
mov
adc
neg
cmc
bound
xor
adc
(bad)
inc
addr16
jmp
jo
jmp
jp
ds
arpl
call
hlt
mov
dec
shl
inc
push
jno
and
sahf
dec
push
push
push
aaa
xor
lods
movs
lock
in
sub
push
cmp
dec
xor
sbb
jae
mov
sub
fcom
mov
(bad)
(bad)
(bad)
div
iret
dec
pop
push
loope
aam
or
adc
(bad)
call
popf
sub
das
test
jge
dec
pop
lea
inc
shufps
inc
stos
popa
and
mov
clc
(bad)
push
fs
movs
mov
das
dec
push
mov
rcl
cmp
dec
push
std
sti
or
push
repnz
cmp
add
add
xchg
add
xchg
jmp
in
rcr
ja
cdq
push
jb
fst
(bad)
jmp
lds
mov
xlat
cli
xchg
fadd
leave
js
cli
(bad)
jnp
scas
(bad)
(bad)
fild
pop
fs
mov
fdecstp
cdq
hlt
in
rol
(bad)
dec
dec
(bad)
(bad)
int3
mov
je
popf
in
cmps
lods
ret
cdq
mov
movs
inc
into
outs
aas
and
inc
rol
sub
cmp
dec
dec
or
xor
addr16
add
(bad)
(bad)
(bad)
call
inc
lahf
cmp
leave
mul
cmp
mov
jle
xacquire
idiv
(bad)
(bad)
jmp
cmp
inc
or
fldcw
test
add
out
sbb
call
enter
imul
sar
(bad)
(bad)
(bad)
cmp
neg
shr
rcl
lahf
push
ins
imul
js
retf
pop
out
adc
or
in
mov
test
sub
lea
jcxz
ret
idiv
push
les
mov
and
nop
loop
(bad)
cmp
shl
dec
jb
cmps
fist
mov
cmp
mov
mov
inc
and
sbb
(bad)
(bad)
(bad)
push
jns
dec
ins
mov
push
pop
mov
adc
jle
add
(bad)
sub
jmp
xchg
xor
movs
adc
call
iret
push
stos
sub
ins
xchg
sub
mov
cmp
(bad)
(bad)
call
adc
pop
(bad)
cmovo
mov
sar
mov
test
daa
push
or
aaa
outs
lods
(bad)
(bad)
(bad)
inc
adc
ja
push
je
in
lock
sbb
add
mov
loop
aam
adc
pop
nop
test
dec
fwait
(bad)
mov
ins
sub
cs
(bad)
push
lahf
or
sbb
jnp
in
stc
or
add
xor
shl
xor
inc
sub
sbb
(bad)
jmp
lods
mov
je
mov
add
lahf
addr16
fwait
pop
xchg
sub
mov
mov
cli
sub
jmp
inc
addr16
xchg
pop
repz
(bad)
(bad)
push
arpl
imul
ficomp
dec
test
mov
psrlq
stos
sub
ss
jle
xor
jg
call
fmul
or
lds
pop
rdtsc
aad
pusha
hlt
adc
mov
outs
push
cli
and
loopne
(bad)
(bad)
(bad)
push
into
rol
mov
ss
jle
imul
loop
inc
test
mov
(bad)
call
ja
adc
sbb
mov
push
js
popf
mov
and
dec
push
mov
cld
inc
das
sbb
(bad)
in
jmp
lods
dec
cmp
xchg
pushf
(bad)
or
sub
cmp
(bad)
(bad)
(bad)
jmp
pop
push
clc
lods
jno
pop
pop
test
nop
sbb
or
inc
mov
cmc
clc
(bad)
(bad)
(bad)
in
dec
or
xchg
sub
in
mov
fld
into
add
shr
popf
and
idiv
add
jmp
cmp
int
daa
xor
(bad)
(bad)
(bad)
push
jmp
jno
or
cdq
scas
stos
mov
pop
cmps
sub
push
imul
stos
add
dec
inc
pop
cmps
mov
std
data16
int3
in
mov
outs
fadd
cs
loopne
push
ficom
scas
push
lahf
jbe
call
push
idiv
(bad)
(bad)
inc
mov
xlat
fst
retf
jmp
dec
mov
and
leave
jnp
or
pop
leave
shl
adc
mov
cmp
cmp
sub
out
push
inc
ja
(bad)
jmp
ret
sti
nop
gs
loopne
rcr
in
neg
into
or
inc
jmp
add
sbb
std
pop
xchg
sbb
jg
mov
call
es
xor
xor
sub
push
add
xor
xchg
jae
aas
lods
and
jmp
jg
sbb
push
add
add
les
mov
jecxz
mov
cmp
rcr
arpl
or
lahf
(bad)
(bad)
(bad)
dec
xor
xlat
sub
(bad)
cmp
shr
(bad)
cmps
fldcw
call
(bad)
aas
xchg
cmp
mov
fcmove
add
sbb
test
(bad)
(bad)
(bad)
push
and
test
mov
iret
retf
pushf
or
xchg
push
inc
lea
sub
(bad)
jmp
in
xor
lock
cmps
adc
(bad)
(bad)
(bad)
out
mov
mov
mov
stos
push
lods
iret
and
inc
dec
shl
jns
out
call
das
cmc
jns
pusha
mov
pop
(bad)
jmp
sbb
pusha
das
inc
pop
jge
iret
jne
ins
(bad)
add
jg
(bad)
fnstcw
pop
sbb
pop
adc
movs
retf
lahf
repz
push
mov
(bad)
jmp
add
push
es
push
jp
xor
fwait
pop
jnp
popf
or
cmp
call
or
rol
xchg
in
adc
(bad)
(bad)
(bad)
mov
out
movs
pop
test
int3
das
jo
mov
dec
jne
neg
sub
fld
(bad)
(bad)
call
in
adc
mov
aas
xor
mov
ins
jbe
add
xlat
mov
int3
jp
jp
sti
(bad)
mov
lock
std
movsx
(bad)
(bad)
jns
inc
mov
loopne
adc
ror
out
cmp
lock
jmp
movs
adc
push
dec
push
test
add
out
(bad)
loop
(bad)
call
(bad)
movs
ins
(bad)
mov
fistp
stos
sbb
xchg
(bad)
(bad)
call
push
arpl
jmp
test
fwait
ret
mov
xor
call
(bad)
(bad)
(bad)
call
jmp
jecxz
loop
mov
cmp
jb
into
xor
stos
inc
mov
xchg
mov
adc
fstp
retf
dec
or
mov
mov
je
(bad)
(bad)
dec
daa
sub
push
ja
fdiv
cmp
add
push
sbb
test
(bad)
mov
jmp
cmp
mov
adc
lds
inc
xor
mov
mov
mov
lahf
mov
jmp
jmp
push
cmp
cmps
push
and
bnd
xor
frstor
adc
hlt
out
(bad)
(bad)
(bad)
out
mov
jno
jg
jecxz
inc
imul
cs
icebp
fdivr
mov
mov
jmp
add
jns
scas
sbb
fsubr
xchg
pop
(bad)
test
scas
in
in
jle
fs
cmps
(bad)
fild
sahf
(bad)
(bad)
(bad)
jmp
or
out
sub
in
dec
cli
int3
imul
mov
test
inc
call
pop
into
mov
mov
(bad)
(bad)
call
xchg
mov
push
std
fcom
mov
add
push
rol
loopne
sub
scas
movs
or
and
pop
sbb
dec
test
jae
int3
aam
call
retf
(bad)
cmps
(bad)
(bad)
(bad)
(bad)
clc
mov
pop
neg
dec
sahf
inc
xchg
ficomp
pop
push
push
mov
xor
(bad)
(bad)
push
cs
cmp
fidivr
in
bound
ror
(bad)
(bad)
jmp
mov
push
sub
add
push
jnp
push
push
(bad)
lock
mov
pop
xchg
ret
add
test
jo
fbstp
call
(bad)
push
fwait
js
mov
add
xchg
dec
scas
xchg
sbb
jns
dec
sub
mov
(bad)
(bad)
push
lahf
mov
sub
and
jb
pop
adc
push
sub
push
dec
lock
sbb
popa
retf
mov
or
(bad)
(bad)
fisttp
push
inc
hlt
fcom
in
sahf
sbb
inc
(bad)
mov
and
nop
pop
std
(bad)
(bad)
push
mov
mov
mov
repz
retf
mov
jge
out
push
test
aad
std
call
mov
dec
dec
mov
movs
mov
push
ss
sub
(bad)
(bad)
(bad)
(bad)
mov
xor
pop
dec
popa
pop
rol
mov
addr16
and
dec
dec
jmp
fild
das
(bad)
mov
xor
mov
add
push
mov
mov
(bad)
jmp
aam
xchg
dec
lea
arpl
xlat
mov
sbb
scas
call
mov
xchg
das
ret
test
loop
pusha
push
lods
xchg
movs
sbb
fstp
(bad)
(bad)
(bad)
jmp
out
sbb
aaa
gs
cmps
xchg
pop
mov
xor
les
sub
jecxz
(bad)
(bad)
(bad)
jmp
xchg
pop
or
js
loope
pop
test
adc
sbb
jmp
lahf
movs
into
cli
fbld
imul
xchg
pop
dec
jge
xchg
cwde
ss
mov
cs
jbe
sbb
cli
(bad)
mov
push
les
inc
sub
rcl
mov
cmp
(bad)
push
add
iret
imul
xor
mov
aaa
pop
(bad)
pop
int3
outs
(bad)
(bad)
(bad)
push
aad
pop
out
lock
mov
dec
push
iret
pop
dec
push
mov
dec
sub
int
cwde
lock
(bad)
(bad)
(bad)
jmp
xchg
dec
rol
mov
xchg
fs
inc
(bad)
int
(bad)
xchg
(bad)
(bad)
push
push
push
(bad)
sbb
mov
in
test
stos
jge
cli
dec
jo
gs
leave
(bad)
(bad)
(bad)
call
xchg
(bad)
test
les
test
in
xor
imul
rcr
(bad)
call
stos
aas
add
and
sub
and
cmp
rcl
lock
jbe
pop
nop
(bad)
(bad)
(bad)
call
nop
(bad)
cdq
jo
jnp
mov
movs
(bad)
icebp
cmp
leave
sbb
pop
aam
cmps
(bad)
fnsave
dec
xchg
stc
cdq
mov
jnp
(bad)
(bad)
(bad)
push
push
sbb
(bad)
sub
rcr
mov
lahf
movs
dec
div
std
dec
idiv
enter
add
js
js
push
jns
lock
jmp
retf
pop
mov
std
adc
enter
or
mov
lock
ins
loop
(bad)
jbe
(bad)
(bad)
(bad)
(bad)
mov
dec
cwde
mov
dec
xchg
mov
dec
add
add
gs
push
cld
out
push
stos
jnp
dec
push
addr16
mov
jge
jle
mov
sub
cmp
pop
pop
sbb
icebp
jo
cld
or
lahf
pop
or
dec
outs
push
adc
idiv
test
mov
or
cld
adc
hlt
jo
push
inc
pop
xor
xchg
sbb
add
add
pop
loop
mov
xor
or
xor
jge
fcmove
into
sbb
(bad)
(bad)
jmp
mov
jbe
mov
fdivr
test
and
sbb
push
call
cmp
add
sub
jo
popa
add
out
jp
scas
adc
(bad)
call
cmp
jbe
mov
pop
imul
ret
jnp
add
dec
sub
repnz
mov
sub
repnz
mov
retf
les
(bad)
push
(bad)
mov
fdivr
pop
mov
sub
mov
cmp
mov
(bad)
mov
sbb
xchg
retf
cmp
dec
loop
mov
sub
mov
(bad)
jmp
rol
adc
sbb
cmp
push
jnp
mov
aam
sahf
xor
(bad)
(bad)
jmp
xchg
dec
jecxz
inc
jp
lock
aam
ja
in
and
je
gs
jmp
hlt
jg
mov
push
mov
sub
xor
cmps
enter
in
fadd
(bad)
dec
retf
sub
and
movs
jge
hlt
(bad)
call
dec
push
(bad)
cmp
and
dec
push
push
outs
cmps
jae
sub
sbb
imul
and
cld
movs
aaa
xchg
dec
in
aas
pop
or
ror
ins
into
mov
xlat
aam
(bad)
cmp
fst
in
es
int3
arpl
(bad)
(bad)
jmp
ror
cmp
cmp
rol
sbb
mov
dec
push
dec
imul
xor
jmp
jnp
addr16
div
xor
lods
mov
in
lock
(bad)
(bad)
call
and
nop
retf
movs
nop
jle
dec
nop
xchg
inc
daa
int
(bad)
pop
sub
dec
hlt
jg
jns
(bad)
(bad)
(bad)
push
ror
mov
in
dec
std
inc
out
dec
adc
dec
push
imul
arpl
mov
icebp
pusha
pop
push
les
cmp
xor
icebp
in
(bad)
out
es
stos
sbb
xchg
cmps
fcomp
arpl
or
in
iret
xor
leave
adc
inc
nop
xor
ret
or
xchg
adc
cmps
(bad)
(bad)
(bad)
push
xor
rcl
test
mov
mov
mov
push
(bad)
sbb
hlt
(bad)
jmp
push
jle
xchg
in
popa
out
mov
mov
push
and
(bad)
(bad)
call
mov
adc
pop
adc
sub
ror
popf
jle
mov
movs
or
aaa
in
(bad)
mov
in
xchg
aas
(bad)
je
(bad)
(bad)
(bad)
jmp
xor
jbe
mov
das
adc
xor
outs
ds
(bad)
adc
(bad)
(bad)
jmp
xlat
adc
loop
cmps
adc
adc
addr16
jb
in
call
(bad)
sub
(bad)
(bad)
(bad)
call
in
out
fldenv
iret
fidiv
repnz
xlat
pusha
inc
jnp
les
rcr
inc
ins
adc
(bad)
(bad)
dec
pop
mov
jle
jnp
popa
xor
mov
adc
xlat
repnz
lea
sbb
das
xchg
or
mov
imul
ret
jnp
(bad)
(bad)
call
in
daa
mov
mov
stc
fsubr
mov
cwde
lds
movlps
(bad)
(bad)
call
mov
outs
into
and
scas
aam
bound
jmp
nop
mov
and
sbb
sahf
mov
(bad)
sbb
push
mov
pusha
std
loope
(bad)
(bad)
dec
cmp
add
loope
retf
outs
sbb
movs
in
inc
or
xor
mov
aad
(bad)
push
pop
xchg
push
pop
cmp
fstp
adc
dec
pop
out
cmp
sbb
push
pop
adc
clc
repz
cmps
stos
fisub
and
int3
inc
cdq
iret
das
sub
jmp
xchg
ret
xlat
push
and
add
lods
push
pop
dec
clc
xor
jno
mov
sbb
fst
cmp
or
js
xchg
(bad)
(bad)
jg
jmp
adc
adc
movs
jno
jmp
or
or
xchg
cmps
inc
jg
cmp
push
push
lods
(bad)
jb
push
sub
(bad)
in
push
push
std
dec
xlat
bound
dec
pushf
or
xor
(bad)
mov
mov
jne
mov
sahf
loopne
(bad)
bound
inc
xor
(bad)
(bad)
(bad)
inc
pop
add
test
mov
jo
pop
aas
(bad)
pop
push
test
and
xchg
(bad)
out
js
xchg
das
sar
sar
aam
jl
lods
mov
jp
xor
push
clc
sub
add
or
mov
sahf
dec
cwde
and
sbb
jle
fs
add
test
push
inc
cmp
stos
das
sar
jl
test
int3
push
add
or
(bad)
(bad)
inc
push
out
cwde
and
push
inc
adc
push
test
push
add
repz
(bad)
call
cmp
les
mov
aam
cmp
adc
push
sahf
mov
clc
test
xor
out
mov
scas
(bad)
call
sbb
jmp
cld
xor
cmp
jne
dec
inc
dec
outs
jg
(bad)
call
lods
js
fnstsw
dec
movs
aad
push
or
jle
xor
add
lock
in
outs
push
(bad)
dec
in
fidivr
int
nop
das
mov
and
leave
outs
push
(bad)
(bad)
(bad)
(bad)
jp
push
sub
cmp
inc
out
pop
mov
dec
(bad)
cmp
xchg
iret
push
jmp
stos
jmp
xchg
test
imul
cli
and
test
pop
add
(bad)
mov
retf
jmp
shl
mov
mov
(bad)
(bad)
push
mov
cmp
rol
inc
ror
jl
div
(bad)
call
loopne
(bad)
jmp
or
xor
les
in
fs
push
test
mov
hlt
ss
out
or
mov
test
(bad)
(bad)
call
out
or
test
jge
mov
adc
test
loope
in
mov
(bad)
(bad)
jmp
jb
cli
push
sbb
add
mov
clc
mov
js
in
(bad)
(bad)
(bad)
(bad)
fistp
jp
sub
push
call
push
cmps
mov
cmp
push
add
adc
inc
mov
dec
loopne
and
mov
xor
imul
push
pop
xor
in
push
call
ds
lds
xchg
(bad)
(bad)
(bad)
dec
dec
mov
out
push
cmc
cli
imul
jmp
ins
mul
loopne
jb
sub
scas
je
sbb
in
jo
and
hlt
push
xor
or
push
sti
cld
(bad)
(bad)
call
sahf
push
jmp
jnp
xlat
daa
cld
add
pop
adc
pop
adc
clc
mov
and
(bad)
jg
and
scas
ins
cmc
cwde
aad
cmp
rcr
mov
add
jmp
add
dec
mov
sub
sub
test
std
ins
(bad)
(bad)
(bad)
jmp
mov
or
and
addr16
dec
(bad)
repnz
cmps
rcr
aam
pop
mov
mov
imul
(bad)
jmp
sar
jne
ds
out
fisub
inc
call
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
lods
mov
mov
icebp
aam
fsub
jne
arpl
xchg
inc
loope
push
outs
and
js
(bad)
out
clc
(bad)
mov
(bad)
or
add
popa
add
fs
outs
and
retf
adc
push
ret
push
dec
add
ds
not
mov
lock
test
sub
aaa
scas
jg
nop
movs
or
adc
inc
mov
cmp
ret
iret
xchg
(bad)
leave
xor
sbb
dec
adc
ins
xlat
mov
ins
sbb
cmc
aaa
sub
ret
loop
pop
xchg
add
mov
icebp
xchg
push
xchg
(bad)
(bad)
(bad)
call
mov
mov
pop
movs
push
sub
in
mov
push
stc
mov
icebp
(bad)
(bad)
dec
aaa
inc
mov
scas
add
sbb
(bad)
fadd
add
jg
(bad)
scas
call
mov
rcr
rcr
pop
pop
or
(bad)
(bad)
jmp
xchg
jecxz
stc
inc
cmp
cmp
and
push
rol
pop
mov
jb
popa
sar
addr16
and
mov
or
add
(bad)
jg
mov
addr16
pop
ret
xor
xor
test
mul
sub
mov
call
mov
aaa
cmc
inc
std
div
lea
jp
and
hlt
or
fcom
(bad)
call
jg
push
inc
ja
mov
push
addr16
lahf
in
xchg
jbe
mov
(bad)
stos
(bad)
(bad)
(bad)
cmp
mov
jb
push
(bad)
in
das
add
loopne
shr
imul
aam
(bad)
(bad)
(bad)
inc
push
push
mov
xor
mov
dec
add
loope
pop
push
repz
jno
(bad)
(bad)
cmp
inc
xchg
pop
inc
push
or
push
xchg
pop
in
xchg
or
mov
jmp
pop
(bad)
(bad)
(bad)
push
xchg
xchg
dec
or
mov
movs
lds
fild
mov
dec
inc
xor
and
loopne
(bad)
(bad)
dec
add
ret
rcr
adc
lahf
inc
jmp
ss
test
sar
xchg
call
jl
pop
mov
add
pop
pop
(bad)
aam
gs
leave
ja
(bad)
(bad)
dec
rol
add
sub
inc
adc
push
ficom
mov
call
(bad)
jg
repnz
push
sti
push
cmp
pop
leave
add
and
retf
pop
popa
ins
aas
sar
jg
ja
movs
shl
push
repnz
inc
push
(bad)
jb
mov
push
out
or
push
xchg
repz
and
cmp
call
xchg
add
dec
call
out
out
dec
cmp
inc
hlt
iret
pop
pop
lea
in
pop
cmp
xchg
in
xor
(bad)
(bad)
(bad)
jmp
xchg
scas
jmp
call
sub
ror
push
jae
fs
pop
pop
mov
jae
add
rcl
xlat
rol
sub
out
call
(bad)
(bad)
(bad)
jmp
loop
adc
(bad)
cmp
sbb
adc
outs
call
push
push
test
clc
(bad)
(bad)
call
jns
pop
bound
cdq
mov
mov
mov
inc
dec
sub
mov
shr
mov
or
cmps
add
mov
out
mov
adc
jns
aaa
(bad)
dec
sahf
mov
ret
enter
ds
cmp
ror
loop
mov
sub
adc
adc
push
sbb
test
adc
mov
(bad)
mov
mov
mov
fcom
mov
push
aas
aaa
sub
pop
ror
pop
or
(bad)
(bad)
jle
les
lock
mov
(bad)
jnp
xor
lock
int
add
imul
inc
jecxz
mov
mov
call
push
aaa
jle
mov
loope
push
mov
jmp
cmp
xchg
jo
adc
cli
sub
xchg
dec
push
or
test
gs
mov
(bad)
jmp
add
pop
jl
rcl
fistp
sbb
loopne
call
jecxz
jl
cmp
inc
push
adc
and
aaa
push
pop
movs
mov
xor
sahf
and
(bad)
(bad)
jg
std
mov
outs
sub
cmp
xor
push
retf
inc
stos
nop
dec
lods
xor
jl
(bad)
(bad)
call
push
(bad)
sbb
xlat
std
mov
push
clc
add
sbb
dec
push
pop
pop
push
adc
call
cmp
and
(bad)
push
das
ss
mov
xchg
cmp
test
clc
inc
imul
inc
xchg
or
enter
or
fidiv
jb
jne
outs
or
imul
mov
and
adc
in
sahf
dec
mov
cld
(bad)
push
xchg
and
test
mov
dec
cmp
sti
dec
sar
xlat
push
into
pop
mov
(bad)
jg
dec
cmp
out
(bad)
sbb
pop
sbb
mov
dec
std
dec
ins
cli
dec
push
(bad)
push
pop
adc
adc
(bad)
push
add
pop
jg
sti
mov
cmp
dec
add
dec
in
std
mov
outs
rol
mov
retf
sub
xchg
(bad)
sar
(bad)
jg
sub
ret
or
mov
test
sub
cmps
inc
cmc
push
in
and
hlt
dec
xchg
icebp
arpl
add
test
iret
adc
mov
cmps
fwait
mov
(bad)
(bad)
jmp
dec
inc
pop
call
push
xchg
retf
repz
shl
outs
(bad)
(bad)
jg
pop
inc
push
jl
add
jo
inc
out
cdq
jb
push
xor
stos
mov
(bad)
(bad)
jmp
mov
sbb
call
jmp
xchg
data16
sub
out
(bad)
(bad)
dec
rcl
pop
push
lock
jo
pop
pop
mov
add
and
or
(bad)
(bad)
(bad)
jnp
xchg
and
dec
and
ret
cdq
mov
sahf
push
int3
sar
test
out
test
ja
xlat
jmp
outs
rcr
int3
cli
inc
das
and
shl
lods
retf
test
(bad)
call
in
pop
sbb
sbb
mov
ins
(bad)
sub
ins
dec
mul
add
fs
add
das
sar
sub
jne
mov
fmul
add
(bad)
mov
stos
(bad)
call
xor
loopne
jnp
(bad)
jo
in
adc
dec
pop
mov
iret
enter
jnp
inc
jmp
test
add
(bad)
(bad)
call
xor
shl
(bad)
fyl2xp1
imul
push
in
aam
(bad)
(bad)
(bad)
inc
in
mov
pop
mov
jo
(bad)
gs
cmp
pop
popa
fwait
and
pop
sbb
(bad)
cld
mov
fiadd
mov
xchg
stos
stos
clc
lock
out
ror
ret
hlt
(bad)
inc
mov
(bad)
movs
jmp
add
ins
xor
add
jno
(bad)
(bad)
(bad)
inc
pusha
enter
or
jmp
clc
test
mov
lds
xchg
inc
sbb
fwait
(bad)
call
cld
lods
into
cmp
push
or
add
xchg
mov
out
in
pusha
(bad)
(bad)
(bad)
dec
cs
movs
fst
lods
xchg
ins
pushf
xor
add
adc
test
fild
mov
clc
(bad)
jmp
pop
mov
add
mov
jb
shr
icebp
dec
sahf
xchg
push
arpl
(bad)
out
clc
dec
xchg
stos
loope
test
mul
cmp
scas
add
or
adc
call
inc
retf
lock
mov
cwde
icebp
idiv
(bad)
cmp
(bad)
(bad)
jmp
rol
push
push
push
dec
test
mov
icebp
mov
in
ret
xor
(bad)
stos
popf
(bad)
(bad)
(bad)
push
mov
sub
cmps
and
inc
shr
sbb
imul
inc
cmp
sbb
int
jo
push
mov
cmp
jno
in
mov
dec
(bad)
(bad)
mov
sub
and
add
fdivp
repnz
pop
sub
pop
mov
mov
call
nop
cwde
and
pushf
mov
stos
jge
xchg
pop
and
push
mov
push
or
add
jg
out
(bad)
(bad)
push
(bad)
sub
(bad)
repz
in
loopne
scas
(bad)
in
push
mov
stos
dec
in
pop
cmps
pop
jne
jne
out
sbb
mov
dec
retf
jge
loope
fdivr
xchg
data16
aaa
scas
push
mov
sbb
sbb
(bad)
jmp
pop
pop
pop
sub
push
ret
adc
js
loopne
mov
(bad)
mov
dec
cwde
hlt
out
(bad)
(bad)
(bad)
inc
sub
in
sub
adc
ss
cld
dec
or
aam
inc
(bad)
jg
(bad)
imul
or
test
ins
inc
test
pop
ins
loop
(bad)
jmp
xchg
jp
pushf
call
sub
mov
jbe
fdivr
rcr
(bad)
(bad)
call
mov
into
xchg
mov
pop
mov
icebp
and
xor
pop
fadd
xchg
invd
cmp
(bad)
cmp
test
out
jbe
or
sub
pop
je
or
mov
(bad)
mov
push
push
inc
std
call
mov
mov
pop
inc
(bad)
(bad)
(bad)
jmp
pop
ret
dec
inc
sub
sub
outs
xchg
adc
jp
loope
loope
adc
pop
daa
stc
pusha
(bad)
(bad)
(bad)
call
push
lds
or
jns
not
lahf
sbb
jb
into
ds
xor
adc
jg
adc
bound
jg
push
sbb
bound
dec
repnz
aam
vminsd
cmp
cld
mov
dec
in
mov
(bad)
(bad)
push
fcomp
add
sbb
xchg
out
jecxz
adc
clc
ins
xchg
js
scas
in
iret
adc
aaa
and
jmp
sbb
dec
xchg
jg
pop
push
adc
icebp
fsub
(bad)
mov
in
jbe
repnz
xchg
fs
call
xor
mov
call
cmp
sub
dec
add
repnz
fsub
call
add
inc
sbb
cmp
and
push
pop
inc
ror
dec
pop
retf
mov
test
mov
out
mov
cmp
and
xor
dec
push
cmp
push
cmp
mov
test
push
rcr
(bad)
jle
les
cld
dec
mov
push
es
aam
popf
hlt
add
aaa
cld
clc
out
cs
ss
sti
jns
jmp
mov
cmc
stos
xchg
sbb
adc
pushf
jl
(bad)
(bad)
jmp
mov
retf
fisttp
out
aad
test
xor
loopne
out
and
(bad)
(bad)
dec
add
shr
push
int3
mov
shl
rol
lock
mov
xchg
and
jmp
in
inc
adc
pop
movs
jg
xlat
mov
inc
retf
les
cmps
std
stos
jnp
or
and
dec
out
cmp
div
adc
jg
inc
test
aam
jbe
inc
pop
push
push
mov
jg
or
scas
add
loopne
ss
pop
xor
inc
mov
(bad)
cli
mov
cmc
or
cs
cld
mov
or
(bad)
jg
cdq
and
xor
adc
cmp
sahf
cmp
sbb
pushw
mov
push
mov
pop
jmp
fxch
repnz
push
push
adc
outs
mov
hlt
ficom
and
jne
mov
cmps
push
rcr
mul
dec
in
dec
movs
dec
ds
mov
lods
out
jge
add
mov
add
dec
cmp
sahf
cmp
dec
jno
mov
sub
push
movs
mov
add
xor
loopne
dec
cmp
xchg
(bad)
imul
and
(bad)
call
shl
dec
mov
jg
cmp
add
push
inc
psrlq
ss
pop
dec
movs
pop
jg
call
cs
call
jmp
mov
cmp
jmp
or
call
cmps
rcl
dec
(bad)
jmp
into
sbb
adc
xor
out
rol
call
rcr
sbb
std
jbe
outs
mov
jo
out
idiv
(bad)
(bad)
call
test
jle
xchg
int3
mov
lods
sti
mov
mov
xor
sbb
(bad)
xor
mov
(bad)
(bad)
inc
mov
add
push
cmp
dec
cdq
xchg
pop
xchg
mov
and
or
scas
mov
ror
mov
sub
ret
inc
cmp
dec
lods
dec
mov
and
les
(bad)
jg
lock
pop
push
mov
pop
mov
arpl
scas
outs
cmc
jmp
xor
add
jmp
add
and
add
retf
mov
aas
stos
cwde
iret
loopne
mov
fdivr
(bad)
(bad)
(bad)
call
inc
les
or
xchg
ins
xchg
push
(bad)
mov
out
or
mov
push
ror
pop
cmp
ficomp
fist
fldenv
inc
xchg
es
pop
in
xor
add
cmp
cmp
dec
mov
pop
sbb
pop
jl
icebp
(bad)
dec
ds
fadd
add
pop
pusha
or
mov
xchg
lock
(bad)
inc
imul
adc
arpl
push
add
ins
push
js
xchg
arpl
push
sub
and
loopne
xlat
sub
cmp
fs
loop
(bad)
(bad)
dec
push
xchg
mov
push
hlt
test
sbb
jb
xchg
xchg
add
inc
(bad)
bound
mov
(bad)
(bad)
(bad)
inc
lock
int3
xlat
cmp
or
push
nop
sar
sub
(bad)
jno
cmc
(bad)
jp
loop
(bad)
(bad)
(bad)
call
jl
leave
adc
mov
jne
mov
cmp
and
(bad)
(bad)
jmp
dec
outs
imul
xor
and
lock
add
cwde
add
mov
jmp
mov
fwait
retf
out
test
aaa
adc
mov
(bad)
(bad)
jmp
mov
xchg
add
bound
inc
adc
mov
leave
jecxz
aam
imul
scas
clc
(bad)
jmp
pop
pop
(bad)
mov
xor
movs
sbb
rol
cmp
jg
xor
jmp
adc
add
sub
pop
aad
dec
mov
adc
outs
cmp
pop
inc
cld
not
ss
fnstsw
cmp
(bad)
sti
mov
xchg
sub
ja
(bad)
inc
add
popw
fcmovnbe
fistp
push
cmc
pop
ds
pushf
(bad)
ret
inc
sbb
mov
inc
cld
adc
inc
jb
xor
ror
xchg
and
and
ret
push
pop
sub
adc
(bad)
(bad)
jmp
cs
inc
aam
pop
loop
jo
sbb
push
pop
stos
xchg
out
jns
or
es
push
jmp
popa
pop
shr
call
push
retf
divps
mov
loopne
jmp
sub
mov
and
inc
cmp
(bad)
sbb
(bad)
out
clc
(bad)
cmp
jnp
cmps
test
sahf
xor
(bad)
mov
pop
mov
rcl
(bad)
(bad)
(bad)
(bad)
clc
loopne
xor
pusha
dec
dec
dec
mov
ja
xor
dec
push
lea
xchg
sub
(bad)
pop
std
shl
pop
mov
jnp
pop
push
xor
xchg
dec
mov
xlat
xchg
fcomip
(bad)
dec
and
cmp
mov
das
scas
arpl
cmp
(bad)
push
pop
lock
jmp
into
(bad)
and
xchg
(bad)
(bad)
jg
xchg
dec
pop
jns
mov
jle
xchg
shr
xchg
retf
mov
mov
pop
inc
pop
cmps
(bad)
(bad)
(bad)
jmp
lea
clc
movs
or
pop
sub
stos
or
sub
mov
dec
(bad)
mov
(bad)
(bad)
(bad)
(bad)
cmp
mov
mov
xchg
jmp
xor
sbb
loop
push
xor
(bad)
(bad)
inc
iret
mov
in
or
jecxz
jne
xchg
mov
stos
dec
add
(bad)
call
pop
in
mov
mov
mov
mov
scas
cli
jmp
jmp
pushf
pusha
inc
(bad)
mov
loopne
adc
or
(bad)
(bad)
dec
mov
add
fmulp
add
repz
sbb
pusha
cmps
outs
int3
push
in
push
and
jmp
or
sbb
loope
(bad)
lods
fs
mov
jnp
xchg
aas
mov
and
scas
mov
(bad)
(bad)
jmp
sahf
cld
add
cmp
cmps
scas
push
sbb
call
cs
mov
(bad)
(bad)
(bad)
fistp
sub
cmp
sbb
cdq
fldpi
jge
rol
xchg
pop
dec
mov
(bad)
(bad)
push
push
mov
sbb
hlt
clc
sbb
pushf
fwait
push
fsubr
pop
jp
mov
sub
xor
pop
imul
test
cmps
repnz
xchg
pop
(bad)
fcomip
push
out
sahf
rcr
fiadd
popf
xchg
hlt
fsubr
aam
(bad)
push
xor
pop
jmp
adc
call
push
mov
stos
xchg
(bad)
(bad)
mov
or
adc
test
in
in
call
cmp
mov
inc
sub
ret
fstp
mov
popf
mov
mov
mov
xchg
cld
sub
std
lods
(bad)
call
lods
fs
ret
fcom
jo
push
sub
pop
pop
addr16
(bad)
jmp
jg
fmul
sahf
jne
out
pop
les
cld
loope
(bad)
jg
jbe
das
mov
sbb
retf
inc
shl
jb
push
mov
mov
mov
adc
sub
test
es
jae
mov
push
xchg
in
xchg
dec
adc
outs
mov
mov
ret
nop
(bad)
pop
(bad)
add
push
es
int
dec
add
fidiv
bound
(bad)
or
xor
test
fdiv
cwde
(bad)
(bad)
(bad)
jmp
ins
mov
sub
fbld
cmc
into
push
test
mov
shl
jmp
mov
adc
dec
cmp
adc
mov
or
sbb
jmp
inc
xlat
push
jnp
sub
inc
leave
ss
mov
push
popa
rcr
scas
pop
or
mov
call
cmp
mov
jle
fcmovne
gs
jg
aas
(bad)
(bad)
push
das
lds
mov
jo
das
inc
into
push
jp
outs
ja
dec
mov
(bad)
(bad)
(bad)
jg
popa
push
inc
popf
or
mov
and
ins
sub
sar
xchg
cmps
jmp
rol
cli
(bad)
mov
scas
sbb
hlt
adc
adc
pop
lea
(bad)
out
jmp
(bad)
push
pop
jno
test
and
(bad)
(bad)
enter
ror
cmc
addr16
bnd
mov
(bad)
(bad)
(bad)
inc
pop
call
jmp
and
mov
pop
xor
xor
dec
cld
push
test
test
push
pop
inc
test
stos
mov
iret
sub
inc
jp
stos
jmp
inc
cdq
push
adc
fcomip
jmp
stc
pop
mov
sbb
push
int
or
cmps
sahf
mov
call
stc
dec
jle
inc
mov
rcr
cmc
hlt
inc
fdivr
or
adc
sub
sub
(bad)
(bad)
(bad)
std
sub
movs
inc
cmp
push
xor
pop
jmp
mov
xchg
push
test
xor
jmp
xchg
inc
std
dec
cmps
adc
dec
arpl
(bad)
(bad)
(bad)
mov
rcr
cmp
popf
mov
enter
in
aad
lds
dec
call
stos
(bad)
call
add
mov
inc
sub
out
loop
mov
popa
sub
out
movs
cmp
mov
mov
js
outs
push
shl
and
xchg
jb
push
leave
mov
clc
push
shl
scas
jo
add
inc
adc
(bad)
(bad)
jmp
neg
pop
inc
sub
jbe
pop
ss
dec
mov
(bad)
(bad)
call
ins
je
sbb
cmp
clc
adc
sbb
sbb
js
ja
xor
jg
stos
cmps
sub
sub
cmc
sbb
push
jge
dec
scas
dec
rcr
loopne
push
cld
adc
dec
fnstcw
test
div
(bad)
(bad)
call
out
push
sti
imul
adc
push
test
push
leave
jae
inc
(bad)
(bad)
(bad)
mov
(bad)
repz
push
add
enter
xor
add
out
(bad)
(bad)
jmp
outs
mov
adc
mov
cmps
xchg
sub
(bad)
aaa
mov
(bad)
dec
movs
lods
mov
je
fstp
jbe
lahf
jmp
ror
and
xchg
sbb
(bad)
(bad)
jmp
test
ret
add
dec
imul
mov
gs
mov
or
dec
(bad)
(bad)
(bad)
push
push
xchg
add
repnz
push
and
call
cmp
ret
push
stos
cmp
sbb
(bad)
jmp
dec
daa
gs
xor
xlat
xchg
ret
les
lods
retf
cld
cmp
mov
(bad)
(bad)
(bad)
dec
dec
jne
outs
adc
scas
mov
ds
mov
dec
call
xor
loop
pop
hlt
(bad)
push
in
daa
test
mov
xchg
mov
jns
test
jmp
push
cmp
xor
and
jg
mov
call
sub
jo
and
addr16
jg
icebp
push
sub
scas
ds
(bad)
(bad)
(bad)
call
call
adc
(bad)
les
xchg
jb
(bad)
inc
out
ss
leave
(bad)
call
clc
fild
(bad)
adc
enter
lods
inc
dec
(bad)
(bad)
(bad)
mov
mov
or
inc
pop
rol
mov
jae
mov
jg
lods
mov
inc
push
ins
ret
mov
jp
(bad)
(bad)
inc
in
pop
in
jae
lea
or
push
loopne
std
js
or
test
das
sti
jnp
es
mov
inc
inc
out
(bad)
(bad)
(bad)
aas
pop
ret
arpl
jbe
add
push
aaa
(bad)
in
mov
clc
jnp
adc
push
or
mov
(bad)
(bad)
jmp
or
data16
or
fld
jg
imul
pop
push
xor
scas
pop
xchg
repnz
aam
(bad)
(bad)
jmp
cmp
and
test
cmp
mov
fisttp
sbb
enter
and
xor
fstp
xchg
(bad)
(bad)
mov
push
sti
outs
and
aam
xlat
popa
stos
ja
(bad)
out
leave
and
(bad)
(bad)
jg
and
(bad)
and
sub
(bad)
pusha
cmp
jg
xchg
xlat
add
mov
int3
sub
adc
jp
cmp
adc
xor
lds
sub
push
ss
(bad)
shr
push
retf
call
sub
mov
outs
cli
call
pop
mov
imul
ficom
mov
mov
(bad)
(bad)
(bad)
out
add
cmp
lock
xchg
scas
pop
(bad)
hlt
icebp
cmps
mov
int3
xchg
push
jg
(bad)
fist
sbb
and
pop
lods
ja
dec
sti
cld
fcomp
xor
jb
adc
mov
ins
fisub
cmps
out
and
es
call
mov
xchg
stos
aas
lock
sub
push
je
std
(bad)
(bad)
jmp
sti
outs
jl
daa
cwde
out
in
fistp
or
out
(bad)
test
mov
xlat
adc
movs
and
outs
inc
push
push
sub
out
add
cmp
(bad)
dec
cmp
xchg
mov
stos
sub
pop
add
fisubr
es
cmps
dec
jmp
aaa
enter
jns
clc
lods
rol
enter
leave
in
pop
jl
mov
stos
sub
add
loopne
rol
xchg
dec
in
xor
or
(bad)
(bad)
fistp
push
icebp
rol
add
adc
push
adc
add
xor
inc
xor
(bad)
(bad)
jmp
leave
les
pusha
imul
repz
pop
rcr
jb
inc
sbb
or
cld
iret
xor
out
nop
lods
(bad)
jno
jmp
jge
mov
mov
in
and
jmp
daa
mov
mov
fstp
call
aad
cmc
jne
imul
nop
sub
in
pushf
(bad)
(bad)
(bad)
jmp
adc
adc
pop
call
mov
pop
bound
add
popa
in
idiv
(bad)
call
xchg
cmp
xchg
inc
repnz
loop
jns
out
(bad)
(bad)
inc
cmc
(bad)
push
out
cmp
pop
mov
sbb
dec
(bad)
sub
clc
pop
shl
mov
scas
(bad)
(bad)
call
ja
je
not
aam
lods
popa
je
je
stos
mov
(bad)
mov
aaa
jmp
out
mov
fld
lods
movs
xor
push
add
pushf
dec
push
(bad)
call
lahf
adc
xlat
into
outs
pop
(bad)
cmp
int3
adc
in
arpl
xchg
or
pop
push
xchg
jmp
push
neg
sub
dec
ja
xor
adc
push
sub
(bad)
call
nop
mov
adc
test
mov
cmc
outs
fld
pop
jo
pop
jae
(bad)
(bad)
dec
jne
dec
int
sbb
int3
bound
cs
pop
inc
sub
fnstcw
in
and
add
cs
and
and
mov
outs
movs
(bad)
dec
and
pminub
jae
cmp
add
xor
aas
dec
std
(bad)
call
sbb
mov
fs
(bad)
mov
and
add
push
fcmovb
mov
jnp
jecxz
lea
push
jbe
push
(bad)
pop
pushf
(bad)
es
aaa
std
mov
fisub
mov
mov
cmp
leave
clc
test
pushf
pop
hlt
(bad)
(bad)
(bad)
(bad)
cli
inc
jp
pusha
and
jmp
push
retf
test
mov
ins
add
and
in
mov
jg
pusha
std
out
es
push
ror
adc
cdq
adc
lock
leave
mov
adc
or
dec
inc
jg
(bad)
(bad)
(bad)
call
mov
cmp
sti
dec
cmps
mov
and
pop
js
sbb
and
ret
xchg
scas
clc
inc
mov
dec
cli
mov
mov
mov
cmp
xchg
(bad)
(bad)
(bad)
inc
aaa
dec
mov
movs
aam
add
jmp
add
inc
enter
(bad)
jg
sahf
jge
stos
and
xor
movs
out
inc
dec
out
xchg
mov
(bad)
jmp
push
sbb
js
and
sbb
lock
in
in
sar
(bad)
(bad)
mov
xor
lea
sbb
mov
dec
(bad)
(bad)
call
cmp
std
xor
cwde
mov
adc
fwait
push
push
dec
or
(bad)
(bad)
inc
dec
pop
cmp
xchg
hlt
scas
pop
retf
mov
cli
mov
mov
(bad)
(bad)
dec
call
sub
jp
sub
dec
jne
popf
iret
mov
dec
inc
popa
daa
pushf
pushf
enter
or
mov
add
(bad)
fstp
(bad)
mov
and
je
mov
jg
(bad)
call
movs
loop
imul
cdq
jno
push
cdq
pusha
xor
dec
mov
sbb
mul
adc
adc
nop
push
push
mov
mov
add
mov
mov
fsubr
loope
fs
jmp
pop
sbb
lock
jl
js
cmp
xchg
add
ficomp
jl
cmp
dec
dec
test
mov
ins
add
jg
mov
sbb
rcr
and
inc
(bad)
(bad)
call
mov
or
retf
cld
leave
ficom
inc
aam
or
and
jne
test
in
jle
(bad)
(bad)
jmp
inc
pop
rcl
cmps
call
shl
outs
mov
into
aaa
or
jg
(bad)
(bad)
(bad)
(bad)
cmp
mov
aaa
aaa
test
jmp
sbb
repz
lahf
push
gs
(bad)
(bad)
(bad)
(bad)
sti
retf
cmc
ds
nop
dec
shl
das
push
adc
push
push
adc
scas
stos
xlat
(bad)
(bad)
(bad)
(bad)
mov
ins
aaa
fwait
data16
ins
add
in
in
nop
add
lahf
xchg
xchg
mov
jp
loopne
(bad)
jmp
mov
mov
leave
mov
mov
cs
or
(bad)
(bad)
call
fwait
cmp
ret
hlt
gs
bound
aaa
fidivr
ja
xor
sub
pushf
out
jecxz
jmp
in
test
xchg
xchg
nop
cmp
mov
in
(bad)
mov
dec
add
sub
push
xchg
adc
mov
adc
test
(bad)
(bad)
(bad)
dec
imul
jb
sahf
mov
ror
(bad)
mov
xchg
stc
mov
fsub
and
bswap
or
or
(bad)
aaa
mov
dec
rol
(bad)
fldcw
mov
add
(bad)
jmp
xchg
push
sti
(bad)
and
(bad)
in
into
sar
sbb
(bad)
jg
js
xchg
adc
pop
sub
jno
pop
mov
not
icebp
rol
call
push
xchg
ins
pop
iret
adc
bnd
mov
(bad)
and
fisubr
(bad)
pop
xchg
scas
js
lea
fbstp
rol
xchg
out
adc
(bad)
(bad)
call
movs
bound
jmp
add
mov
rcl
std
jbe
xchg
mov
jno
cmps
pop
xor
add
mov
mov
xor
movs
jmp
and
cld
push
(bad)
(bad)
(bad)
dec
stos
jecxz
xor
ins
push
or
mov
push
jns
xor
xlat
cs
lods
shl
cs
sub
push
pop
scas
cli
fadd
mov
(bad)
(bad)
(bad)
call
dec
fsubrp
pop
cmps
test
mov
test
xchg
std
and
jae
pop
sub
xchg
(bad)
(bad)
(bad)
jmp
aas
daa
xchg
inc
xchg
(bad)
ficom
stos
fistp
mov
sub
dec
retf
into
fidiv
adc
jno
push
cld
ss
push
sbb
iret
xor
or
data16
es
lea
inc
and
pop
mov
jmp
sub
sahf
pop
sub
test
mov
(bad)
(bad)
jmp
mov
pop
stos
mov
or
sbb
add
jmp
(bad)
(bad)
(bad)
jmp
mov
stc
jle
(bad)
fistp
daa
movs
movs
cmc
ds
ror
dec
repnz
das
push
addr16
(bad)
(bad)
push
cwde
out
jl
aad
xchg
mov
stos
scas
jbe
dec
call
dec
push
dec
push
cwde
mov
(bad)
(bad)
(bad)
(bad)
jge
int3
adc
xchg
fsubr
cmp
(bad)
cmp
push
pop
sbb
scas
rcl
cwde
and
(bad)
(bad)
inc
xchg
movs
dec
(bad)
cli
sbb
mov
mov
and
fwait
movs
popf
frstor
jae
inc
movs
test
(bad)
jmp
stos
(bad)
bound
add
jl
mov
dec
mov
add
(bad)
inc
lods
sbb
and
and
call
xchg
test
fistp
inc
xchg
lods
add
jno
(bad)
(bad)
mov
stos
cld
push
sub
call
mov
js
jle
(bad)
(bad)
(bad)
call
pop
and
dec
bound
and
lea
out
fcomp
scas
ins
popf
xchg
pop
(bad)
(bad)
(bad)
call
jo
leave
cld
mov
add
inc
mov
sub
mov
fdivrp
(bad)
(bad)
inc
in
adc
popf
mul
pop
gs
jns
mov
mov
and
push
mov
fcomip
mov
mov
(bad)
jmp
sahf
mov
ror
jbe
sub
test
punpckhdq
lock
xchg
sar
aaa
fdiv
aad
fcomi
dec
retf
cmp
jg
jb
cmp
(bad)
(bad)
(bad)
push
add
sbb
movs
cmp
cmp
cmp
arpl
(bad)
call
pop
adc
lods
cmp
jge
jmp
div
dec
setge
pop
mov
(bad)
mov
mov
neg
and
mov
lock
repz
xchg
add
mov
dec
xchg
loope
jne
(bad)
(bad)
(bad)
call
lahf
or
and
pushf
push
(bad)
xchg
hlt
mov
mov
and
push
adc
inc
aam
mov
inc
(bad)
pop
lahf
fidivr
lahf
mov
(bad)
hlt
adc
outs
into
xchg
adc
cwde
and
out
cli
(bad)
mov
inc
stos
ret
pop
mov
int
add
lods
mov
(bad)
jmp
rcl
or
fcmovbe
cmps
enter
imul
mov
inc
mov
or
adc
mov
push
push
xor
out
clc
(bad)
jg
iret
jg
jge
scas
(bad)
call
les
cmps
pushf
push
sar
(bad)
(bad)
mov
jae
or
out
and
pop
call
and
sbb
popf
mov
pop
mov
mov
or
sbb
call
loopne
jecxz
cli
jae
cmova
jne
fstp
sbb
loop
(bad)
nop
(bad)
(bad)
mov
sub
jbe
inc
add
out
sahf
or
xchg
pop
mov
(bad)
(bad)
(bad)
push
cmps
lea
push
xchg
lock
dec
daa
sub
adc
mov
lahf
(bad)
(bad)
(bad)
call
daa
and
add
dec
cmp
adc
sar
push
int3
loop
push
daa
je
(bad)
jmp
and
add
push
cmc
scas
sbb
test
mov
add
mov
cld
cmp
jmp
and
xor
clc
sub
lods
fstp
xor
(bad)
dec
inc
inc
inc
cld
and
xor
push
clc
js
dec
test
sbb
dec
dec
jg
(bad)
dec
sbb
aas
outs
scas
cmps
les
jp
retf
pusha
cmp
and
jns
clc
pop
lea
mov
(bad)
enter
jg
or
dec
scas
int3
(bad)
(bad)
(bad)
inc
js
sbb
add
mov
mov
adc
or
int
retf
inc
ret
(bad)
call
sbb
and
mov
fndisi(8087
jo
test
cmp
push
test
xor
jmp
shr
and
adc
mov
(bad)
sbb
test
xlat
push
adc
jecxz
(bad)
push
or
fcomi
pop
loopne
clc
adc
jb
xchg
nop
and
(bad)
(bad)
mov
enter
pop
cdq
push
or
pop
in
pop
adc
jge
push
(bad)
call
call
mov
push
fs
les
inc
cwde
and
jmp
(bad)
call
sub
stos
cs
adc
pop
repnz
(bad)
out
sbb
in
cmp
(bad)
fdivr
xor
and
popa
xchg
mov
fsubr
gs
xchg
pop
pushf
xchg
test
dec
fwait
jbe
mov
cmp
cdq
pop
jo
out
lea
lock
cmp
ins
test
cmp
(bad)
push
cld
dec
gs
ror
xor
cmp
mov
xchg
fisub
mov
dec
ret
cmp
(bad)
(bad)
call
retf
bound
and
minps
arpl
(bad)
(bad)
(bad)
jg
mov
pop
xor
add
call
daa
or
aad
mov
mov
(bad)
(bad)
fpatan
mov
jmp
nop
xchg
cmp
into
scas
adc
pop
test
clc
inc
lds
lods
inc
jnp
mov
fucomi
push
retf
ficom
(bad)
sahf
jecxz
pop
or
lds
(bad)
(bad)
(bad)
(bad)
out
call
push
stc
dec
xlat
mov
mov
aas
mov
dec
xchg
add
or
(bad)
(bad)
(bad)
jmp
mov
les
aad
test
aad
loope
cmc
jp
xchg
(bad)
jmp
cmps
arpl
lahf
dec
xchg
mov
data16
pop
inc
sahf
aad
(bad)
push
ss
cmc
add
(bad)
(bad)
inc
pusha
(bad)
xlat
popa
loopne
jge
cmp
lock
repnz
inc
sar
call
adc
mov
(bad)
push
pop
popa
rcr
hlt
dec
scas
test
push
rcl
push
cwde
jno
sub
(bad)
(bad)
(bad)
cmp
mov
mov
rol
popa
mov
pop
pop
mov
sub
adc
dec
test
fadd
inc
movs
pop
scas
and
adc
mov
inc
jle
xor
jl
sub
ret
mov
(bad)
(bad)
(bad)
mov
(bad)
sbb
dec
xor
adc
and
jnp
out
xchg
neg
jl
jle
outs
or
fisub
(bad)
popa
rol
inc
inc
jmp
movs
pop
inc
call
jnp
pop
ds
lock
cld
dec
xor
call
mov
xchg
sbb
sbb
(bad)
(bad)
dec
popf
sub
or
std
into
fbld
ret
lods
jp
sub
ja
int
(bad)
(bad)
(bad)
push
xchg
jne
call
clc
mov
lds
arpl
(bad)
(bad)
(bad)
dec
fld
ins
adc
ins
out
push
out
aad
call
or
and
(bad)
(bad)
push
mov
mov
xlat
pop
je
ins
das
or
lods
out
movd
(bad)
(bad)
(bad)
(bad)
dec
add
scas
ret
in
data16
jo
das
clc
mov
mov
xor
inc
cdq
inc
popf
sub
(bad)
(bad)
(bad)
in
les
mov
jne
xlat
sbb
sahf
adc
mov
scas
mov
and
mov
jmp
ins
test
scas
mov
ds
addr16
ficomp
(bad)
(bad)
(bad)
dec
enter
mov
mov
lods
scas
fimul
cmp
push
mov
lahf
pop
(bad)
(bad)
(bad)
jmp
(bad)
hlt
jl
sub
iret
xor
pop
es
call
shl
mov
imul
add
lahf
aas
cmps
mov
dec
mov
mov
call
jbe
inc
pop
cmc
leave
imul
mov
loopne
push
arpl
fsub
inc
(bad)
jae
jmp
(bad)
cmp
(bad)
(bad)
jmp
push
mov
enter
mov
mov
or
outs
jle
cmp
mov
ja
(bad)
mov
inc
add
std
push
(bad)
(bad)
inc
xor
movd
mov
fs
inc
fsub
mov
jmp
test
mov
clc
(bad)
dec
imul
xchg
cs
addr16
mov
xor
adc
add
(bad)
(bad)
mov
imul
add
and
xor
(bad)
push
daa
lock
lock
mov
sbb
mov
(bad)
jmp
pop
jp
push
jmp
jmp
pop
jecxz
hlt
adc
sub
mov
loope
xchg
pusha
adc
add
scas
out
test
inc
out
sahf
in
movs
(bad)
(bad)
jmp
fcom
test
mov
pop
xchg
xchg
mov
mov
inc
imul
adc
adc
js
mov
or
(bad)
(bad)
call
bts
push
lahf
retf
enter
jnp
pop
jge
mov
(bad)
(bad)
mov
nop
xchg
pushf
pop
jb
adc
jns
popa
js
leave
add
sub
sbb
std
inc
mov
jg
ror
ss
nop
mov
(bad)
(bad)
inc
push
push
int
fs
stos
test
ins
jae
or
cmps
dec
inc
mov
push
retf
mov
scas
lods
(bad)
(bad)
std
dec
int
in
clc
push
(bad)
(bad)
loop
ss
(bad)
(bad)
(bad)
fsubrp
push
pop
mov
vmovntps
xor
mov
add
jo
mov
(bad)
(bad)
mov
inc
fwait
and
icebp
sahf
mov
add
(bad)
cmp
xchg
mov
xor
fcomip
mov
test
jbe
xchg
scas
sbb
leave
sbb
arpl
(bad)
(bad)
(bad)
push
shrd
icebp
pusha
xor
leave
and
rol
jp
in
xchg
call
fs
or
data16
mov
xchg
inc
adc
mov
mov
lds
pop
(bad)
sub
repnz
pop
xchg
aam
in
cmp
das
pop
jno
xor
bound
push
(bad)
(bad)
jmp
aam
retf
arpl
sbb
jmp
lds
(bad)
(bad)
jnp
mov
rcl
into
pop
or
adc
(bad)
cdq
rcr
js
pop
sub
(bad)
(bad)
call
mov
pop
pop
sbb
outs
or
push
fisttp
stos
repz
dec
(bad)
(bad)
jns
mov
rcr
xlat
ins
out
adc
out
jg
sbb
popa
lods
arpl
imul
mov
mov
ins
in
jb
jns
(bad)
jmp
push
xchg
adc
xor
aad
adc
pop
dec
call
xchg
dec
xor
add
aam
jp
cmp
(bad)
(bad)
mov
or
mov
xchg
lods
jp
sbb
or
clc
(bad)
push
hlt
adc
iret
and
jnp
fwait
adc
adc
sbb
js
mov
bound
lds
sahf
and
jg
push
aam
mov
push
mov
xlat
enter
inc
retf
push
and
add
jmp
and
add
push
rol
sub
outs
ja
cli
cli
or
fist
xor
sub
clc
sub
or
ror
ins
jmp
rol
cmps
test
repz
pop
sar
sbb
or
into
jmp
push
xor
jp
js
gs
(bad)
(bad)
jmp
js
and
or
(bad)
scas
cdq
out
xchg
fnstenv
pop
push
sbb
scas
cli
call
and
and
out
popf
jecxz
push
ret
mov
inc
jns
or
sub
or
cdq
neg
imul
xor
int
clc
pop
into
fcomip
(bad)
(bad)
jle
xor
dec
jmp
cmp
(bad)
cmps
shl
mov
(bad)
(bad)
jl
sbb
test
imul
das
push
adc
cmp
nop
mov
xchg
(bad)
(bad)
call
mov
pushf
inc
inc
out
adc
rcr
jge
out
pop
xchg
pop
pop
mov
inc
push
aam
and
jmp
jne
mov
jmp
jns
ins
ins
(bad)
(bad)
(bad)
inc
mov
lahf
or
sbb
sub
push
in
aad
xor
push
sbb
or
mov
sub
jmp
mov
sbb
pop
mov
jle
inc
popa
jmp
call
jmp
add
dec
xchg
cld
outs
and
jp
fwait
ins
loopne
push
push
sbb
popf
jge
hlt
stos
mov
cdq
clc
add
adc
imul
cmc
pop
jecxz
and
dec
out
sbb
inc
pusha
(bad)
(bad)
(bad)
inc
jmp
sbb
pop
or
or
test
fmul
call
(bad)
(bad)
(bad)
call
xor
outs
shl
and
jno
cwde
sbb
push
mov
cmp
gs
dec
(bad)
imul
(bad)
(bad)
stc
push
aad
mov
retf
jnp
or
out
imul
push
sub
sub
fstp
jmp
(bad)
(bad)
(bad)
push
push
add
jmp
test
cmp
jb
cmc
lds
sub
inc
sub
mov
cmp
lock
mov
xlat
gs
mov
outs
ret
xchg
jb
and
repnz
add
jbe
push
dec
repz
dec
or
(bad)
mov
xchg
fwait
xchg
pop
test
xchg
ja
jge
xlat
sbb
stos
(bad)
(bad)
(bad)
(bad)
mov
xchg
jle
pop
pop
jne
stc
test
lock
mov
cmps
retf
movs
lock
dec
dec
sub
std
outs
mov
jno
(bad)
jl
enter
ret
stos
add
aad
loop
fs
adc
(bad)
(bad)
(bad)
inc
jmp
retf
sti
sti
pop
pop
adc
pop
ss
jmp
and
mov
scas
(bad)
jmp
dec
mov
and
es
cmc
dec
jge
scas
into
iret
jbe
xchg
(bad)
(bad)
cs
push
adc
pop
inc
push
fwait
dec
sub
pop
xchg
rol
xchg
dec
out
cmps
icebp
call
cmp
std
mov
push
sbb
call
into
mov
pop
shl
mov
fidivr
push
sub
(bad)
(bad)
call
dec
pop
sub
add
push
shr
out
cmp
cmp
movs
(bad)
std
mov
sub
stos
iret
adc
push
pop
inc
push
in
(bad)
(bad)
(bad)
dec
shl
into
mov
sar
add
xchg
xchg
ret
sahf
and
jo
mov
pop
icebp
inc
fdivr
adc
add
mov
xchg
jae
jmp
mov
pusha
ja
adc
outs
lock
sahf
retf
inc
ins
and
xchg
inc
int
push
push
in
(bad)
(bad)
(bad)
inc
cmc
dec
xor
jns
scas
cmc
jl
jmp
lock
test
jbe
(bad)
(bad)
(bad)
inc
ja
addr16
out
scas
push
clc
jecxz
icebp
daa
xor
rcr
cdq
(bad)
(bad)
(bad)
(bad)
dec
outs
movs
movs
or
das
mov
jns
cmp
and
mov
test
sbb
(bad)
(bad)
push
and
lock
gs
cdq
(bad)
xchg
pop
cmp
loope
xchg
mov
(bad)
(bad)
jmp
adc
lods
in
add
adc
jns
imul
fmul
ja
cdq
js
shr
movs
(bad)
fstp
outs
inc
stos
pop
sub
(bad)
(bad)
push
or
xchg
cmp
fisubr
test
or
pop
push
mov
fs
xor
and
(bad)
(bad)
call
and
xchg
(bad)
add
inc
jbe
dec
push
stos
mov
adc
movntq
icebp
pushf
push
(bad)
(bad)
(bad)
call
mov
mov
in
fldenv
pop
stos
jo
imul
jno
scas
jae
fdivr
(bad)
(bad)
inc
push
or
dec
fs
dec
jae
dec
push
stos
js
push
popa
add
push
jne
push
xchg
test
(bad)
(bad)
(bad)
inc
shr
scas
mov
dec
loop
in
(bad)
retf
repz
inc
dec
jbe
shr
and
(bad)
(bad)
js
adc
sub
pusha
and
cmp
(bad)
(bad)
jg
fs
mov
or
dec
daa
aad
or
ins
sub
(bad)
(bad)
dec
dec
dec
(bad)
out
xchg
loopne
dec
pop
lea
mov
test
sub
or
mov
dec
in
push
sar
or
(bad)
(bad)
out
pop
call
ret
movs
outs
mov
sbb
mov
clc
sbb
pop
inc
stos
and
(bad)
(bad)
(bad)
(bad)
cmp
fs
stos
imul
xchg
pop
mov
add
add
jg
xor
int
fild
loopne
xor
dec
sbb
and
dec
shl
shr
daa
(bad)
(bad)
(bad)
call
mov
xchg
adc
dec
out
pop
int3
call
pop
sub
xor
es
dec
lock
sahf
pop
sti
jmp
pop
ds
jge
sahf
add
xchg
fsub
clc
(bad)
(bad)
jmp
les
int3
push
scas
fwait
mov
push
sbb
push
outs
movs
imul
pop
add
cld
inc
and
sar
adc
mov
inc
(bad)
(bad)
(bad)
push
cmp
or
hlt
xor
jne
dec
push
test
sub
es
sahf
in
xor
ins
movs
ins
mov
(bad)
shr
loopne
dec
fdivr
jne
fdivr
fstp
(bad)
(bad)
jmp
arpl
repz
mov
imul
add
jg
xor
movs
push
(bad)
push
data16
pop
xor
cmps
xchg
(bad)
(bad)
(bad)
push
stos
cmps
inc
xchg
test
pop
pop
pusha
cmp
jecxz
mov
add
mov
lahf
outs
das
mov
(bad)
(bad)
mov
popa
push
jb
jp
mov
in
shl
aaa
pop
aas
dec
push
fist
(bad)
(bad)
(bad)
call
cmp
inc
mov
movs
xlat
cmovno
mov
arpl
or
repz
cmps
add
mov
lds
sub
push
call
mov
std
ins
mov
mov
(bad)
adc
(bad)
(bad)
(bad)
(bad)
cmp
sti
dec
in
xchg
scas
out
js
add
jge
jns
data16
iret
shr
inc
ret
(bad)
(bad)
push
xlat
or
push
cmp
adc
in
and
dec
bound
pop
xor
adc
call
cld
ret
pushf
bound
push
in
mov
and
bound
sub
(bad)
(bad)
(bad)
inc
mov
sub
(bad)
adc
clc
xlat
jo
push
mov
outs
fsubr
scas
cmp
cdq
add
inc
ret
push
cmp
pushf
in
cmp
(bad)
mov
xchg
pop
mov
jl
rol
lea
mov
and
jmp
or
push
sub
mov
xchg
mov
sbb
pop
(bad)
loope
scas
jp
jnp
jne
or
jmp
fild
fmul
dec
pop
out
jle
mov
retf
push
test
(bad)
sbb
pop
xor
mov
in
pop
loopne
call
adc
dec
sbb
ss
loopne
xor
rol
out
repnz
mov
adc
pop
jnp
(bad)
push
cmp
or
jg
and
pop
mov
adc
push
jp
movs
cmp
pop
cmp
jge
cmps
dec
sbb
xor
add
and
dec
add
fidiv
mov
in
(bad)
(bad)
(bad)
call
movs
pop
test
inc
in
pop
pop
xor
or
and
cld
add
loop
cs
bound
das
hlt
out
int3
imul
fsubr
push
(bad)
jmp
mov
enter
std
scas
(bad)
sbb
(bad)
(bad)
call
loope
(bad)
out
lods
scas
jne
es
pop
test
sbb
adc
inc
pop
adc
xchg
(bad)
(bad)
(bad)
push
mov
addr16
sbb
and
movs
xlat
sti
iret
repz
mov
push
sbb
cmp
(bad)
jmp
xchg
lea
test
test
(bad)
out
or
loope
lock
jmp
push
mov
int3
mov
jge
out
mov
push
loope
inc
data16
(bad)
(bad)
(bad)
mov
and
loopne
push
xor
push
adc
push
or
cwde
jmp
sub
pop
jnp
(bad)
(bad)
(bad)
push
cmp
sbb
ins
cmp
mov
stos
fild
inc
dec
inc
arpl
je
fist
or
inc
and
(bad)
(bad)
inc
jl
into
out
or
cmp
loop
je
std
fwait
mov
push
sub
test
shl
adc
inc
loop
jg
push
cld
sub
ins
mov
call
or
sbb
push
push
pop
arpl
aaa
adc
stc
and
clc
(bad)
fnsave
sub
add
add
mov
xor
inc
pop
popf
(bad)
(bad)
(bad)
call
fcom
jnp
in
addr16
mov
repnz
popf
jge
add
mov
ds
(bad)
(bad)
call
sub
stc
sbb
or
iret
js
cld
dec
ds
lds
retf
aam
dec
ja
sbb
cli
or
push
add
pop
aas
push
xchg
or
xchg
mov
rcl
sbb
push
scas
mov
adc
pushf
loopne
mov
jg
inc
push
enter
pop
dec
mov
inc
lea
mov
(bad)
(bad)
call
and
pop
xchg
nop
mov
(bad)
in
clc
or
mov
sbb
inc
jmp
(bad)
jg
repz
bound
or
loop
sbb
push
pop
add
pop
sar
cmp
push
clc
sar
xchg
push
cs
jle
int
cmps
outs
daa
xlat
xchg
fist
les
jmp
mov
imul
jno
lds
sub
cmps
pusha
imul
xchg
sbb
nop
jne
mov
sbb
test
fdiv
ror
sub
pop
dec
mov
aas
in
mov
sub
mov
stos
je
stos
push
aam
icebp
push
pop
shl
pop
aad
call
cmc
mov
sbb
enter
std
sbb
cmp
inc
(bad)
jmp
rol
mov
repz
pop
(bad)
inc
or
inc
mov
ds
xchg
hlt
das
pop
dec
add
(bad)
(bad)
(bad)
jmp
clc
pop
into
in
mov
xchg
fld
nop
dec
mov
add
das
test
mov
(bad)
(bad)
inc
sub
jl
dec
adc
lods
push
bswap
scas
add
xor
(bad)
(bad)
(bad)
(bad)
cmp
add
outs
gs
or
clc
mov
repz
into
cmp
int3
popf
dec
mov
mov
(bad)
call
pop
pushf
xchg
add
inc
mov
hlt
into
xchg
mov
adc
cwde
dec
imul
dec
push
sbb
and
add
push
mov
mov
int3
inc
call
inc
data16
jg
(bad)
jg
cld
test
push
pop
mov
shl
mov
lahf
lock
loop
lods
mov
(bad)
dec
mov
xchg
mov
cmp
pop
mov
(bad)
(bad)
call
stos
sub
mov
rcl
lea
sbb
cmps
loopne
dec
cli
sbb
cs
(bad)
(bad)
call
loopne
aas
rol
int
sahf
mov
mov
inc
in
fsubr
aaa
call
xchg
sub
(bad)
jmp
xchg
in
dec
push
iret
dec
loopne
push
add
inc
cmps
xlat
pop
inc
jae
movs
aad
jg
inc
fdivr
(bad)
(bad)
dec
add
xor
and
inc
mov
out
or
cmp
add
repz
(bad)
(bad)
call
shl
cmps
xor
xchg
(bad)
push
mov
push
jge
xor
mov
inc
xchg
call
(bad)
(bad)
(bad)
call
adc
inc
jns
or
jb
lock
xor
fld
xchg
mov
jg
icebp
leave
inc
mov
pop
inc
pusha
xor
inc
test
(bad)
xor
jmp
ss
mov
pusha
std
mov
popf
mov
std
jge
or
jg
enter
test
pop
rcl
loope
inc
jmp
enter
(bad)
sbb
cmp
or
jmp
jmp
pop
sahf
mov
mov
frstor
cmps
mov
cmp
outs
call
in
jbe
push
cmp
je
xchg
aas
out
js
(bad)
(bad)
jmp
retf
test
mov
sub
push
pop
xor
(bad)
aad
or
jmp
lods
mov
popf
ror
inc
test
or
jl
mov
(bad)
(bad)
(bad)
push
dec
cmp
jp
sub
pop
mov
retf
in
push
xor
scas
shr
add
and
es
rol
push
adc
test
mov
out
pushf
scas
lods
mov
(bad)
mov
jmp
rol
jle
xor
mov
fimul
into
call
push
add
mov
dec
scas
dec
ds
jns
inc
imul
daa
cmp
fsubr
sub
pop
jno
ins
mov
ss
(bad)
fild
sub
sbb
cmps
xchg
mov
inc
cld
rcr
iret
mov
xchg
mov
jmp
clc
mov
outs
(bad)
(bad)
call
clc
sar
mov
pop
add
sbb
xchg
add
xchg
sar
mov
cmp
(bad)
(bad)
cld
ret
inc
xchg
mov
fidivr
push
lods
test
pop
mov
adc
cmp
(bad)
(bad)
(bad)
(bad)
cmp
pop
popa
lods
ins
pop
sbb
aas
popf
jb
inc
mov
aaa
ja
ficomp
xchg
push
cmc
(bad)
(bad)
jg
xor
mov
sbb
je
sub
test
(bad)
(bad)
(bad)
jmp
sbb
aaa
(bad)
mov
loop
pop
mov
inc
and
push
in
fistp
pop
push
jmp
inc
push
add
int
push
hlt
ja
lods
imul
movs
jno
jmp
lahf
and
sbb
imul
cwde
mov
push
hlt
jno
(bad)
(bad)
call
add
js
(bad)
push
sub
ds
loope
jns
ins
add
repnz
mov
(bad)
ins
(bad)
(bad)
(bad)
(bad)
(bad)
mov
ror
mov
cmp
shl
lock
xor
adc
std
(bad)
dec
in
movs
jne
popf
cmps
stc
cmp
mov
or
fnstenv
aam
push
push
mov
sbb
mov
jmp
std
lods
movs
lahf
push
pop
(bad)
clc
pop
repnz
(bad)
call
ja
ds
jp
jmp
mov
fimul
or
push
pusha
and
cmp
(bad)
lods
mov
cmc
mov
cwde
loopne
pop
xor
(bad)
(bad)
inc
inc
pusha
xchg
pop
nop
inc
(bad)
rcl
sbb
sbb
adc
(bad)
jmp
outs
push
push
jb
and
cld
push
lds
push
ss
push
jnp
sbb
cli
call
les
into
adc
inc
xchg
and
cmp
dec
mov
and
mov
dec
sub
cmp
(bad)
dec
mov
dec
loope
adc
mov
lds
mov
mov
or
sub
(bad)
mov
test
movs
pusha
pop
lods
inc
addr16
cmp
mov
(bad)
dec
in
xchg
mov
mov
xchg
mov
rcl
cmc
leave
jnp
xchg
sahf
mov
adc
(bad)
(bad)
call
ins
lea
shl
rcr
and
mov
mov
sub
(bad)
(bad)
stc
out
adc
push
bound
ret
dec
lods
mov
pop
sbb
shl
arpl
call
push
fmulp
jl
mov
in
fild
pop
dec
adc
(bad)
(bad)
push
xchg
hlt
pusha
cmp
(bad)
sar
jbe
jno
repnz
hlt
iret
lahf
jno
pop
jmp
(bad)
(bad)
inc
mov
mov
(bad)
bound
(bad)
(bad)
mov
and
xchg
inc
repnz
and
addr16
adc
in
test
push
dec
movs
outs
pop
call
pushf
jp
pop
mov
in
jecxz
and
(bad)
jg
mov
cmps
jbe
cwde
pop
pop
adc
cmc
movs
fsub
(bad)
(bad)
push
pop
leave
retf
int3
push
jo
mov
repnz
sti
lock
movs
xor
jnp
(bad)
(bad)
(bad)
call
cmp
xchg
pop
or
bound
imul
popa
cmc
and
lock
ds
mov
(bad)
(bad)
mov
mov
xor
mov
aam
xchg
mov
mov
mov
inc
ja
cld
(bad)
inc
xchg
cs
in
or
dec
inc
jmp
mov
dec
sbb
lahf
(bad)
(bad)
(bad)
(bad)
jg
bound
int
mov
(bad)
jmp
dec
xor
out
out
inc
xchg
loop
sub
rcl
pop
(bad)
(bad)
(bad)
inc
mov
retf
sub
sar
fwait
sbb
in
inc
nop
(bad)
call
aam
lods
pusha
sti
lods
sub
dec
call
out
xchg
jnp
or
add
js
mov
adc
push
sti
js
pop
gs
(bad)
(bad)
jmp
outs
push
sbb
sub
pop
aas
fist
aam
xlat
and
or
push
(bad)
(bad)
(bad)
(bad)
cmp
add
(bad)
repnz
jnp
or
pop
dec
stos
repnz
wrmsr
jmp
(bad)
dec
call
fs
test
and
mov
dec
pusha
loopne
mov
jle
fld
ja
(bad)
call
sub
pusha
dec
(bad)
or
cmp
int
cli
or
call
xchg
xor
inc
call
lahf
inc
xchg
jnp
push
xor
popa
outs
adc
stos
cmps
or
adc
add
(bad)
dec
jle
sub
loop
lods
mov
mov
adc
paddsb
out
in
sub
cmp
jp
jl
mov
sbb
mov
call
sar
(bad)
(bad)
dec
std
dec
pop
out
push
mov
push
mov
cmp
pop
mov
xchg
dec
lds
jnp
or
aas
sbb
sbb
retf
(bad)
fist
cmp
nop
mov
pusha
sahf
es
push
std
jnp
into
(bad)
xlat
sub
(bad)
push
push
int3
pop
push
push
xchg
gs
dec
push
outs
xor
(bad)
(bad)
fild
movs
pop
sar
mov
std
add
jne
retf
jp
es
pop
mov
(bad)
(bad)
call
fst
(bad)
jge
push
add
in
cld
cld
les
movs
out
pusha
push
and
pop
push
imul
push
mov
push
ins
(bad)
dec
ss
sub
leave
cmp
addr16
sbb
cmp
adc
ja
(bad)
inc
popa
or
frstor
dec
aad
(bad)
call
cmp
pusha
push
and
jo
and
xchg
xor
jecxz
jge
(bad)
fist
and
(bad)
jg
imul
xchg
adc
rcl
addr16
jecxz
cmps
pusha
mov
xor
(bad)
dec
(bad)
(bad)
dec
fst
mov
jns
pop
push
jl
enter
inc
test
(bad)
(bad)
jg
(bad)
gs
and
mov
inc
test
cmp
(bad)
sbb
jg
jmp
(bad)
idiv
(bad)
jmp
test
pop
sub
ret
push
dec
test
mov
test
mov
(bad)
inc
dec
sub
inc
xchg
cmp
mov
and
adc
jno
add
sar
(bad)
dec
dec
pusha
pop
pop
add
sti
cmps
es
mov
adc
mov
sbb
ss
dec
inc
sbb
fcom
popa
adc
mov
lods
int
xor
retf
ret
outs
cwde
cmp
cmp
sbb
(bad)
(bad)
dec
enter
fs
push
(bad)
cmc
int3
cmp
arpl
(bad)
cs
add
dec
fwait
(bad)
(bad)
(bad)
push
test
ss
fidiv
cmp
(bad)
inc
hlt
sbb
xchg
aad
push
sub
sti
popf
adc
lea
sbb
ss
(bad)
(bad)
cmp
xor
fstp
dec
add
push
fsub
mov
pop
sub
(bad)
(bad)
jmp
push
mov
imul
fiadd
xchg
test
dec
gs
imul
xchg
(bad)
(bad)
(bad)
cmp
pop
xchg
dec
adc
mov
hlt
pop
mov
inc
jle
int
add
(bad)
push
scas
inc
ret
inc
dec
xor
jb
fs
mov
mov
out
loop
retf
addr16
loope
es
push
cdq
mov
add
test
sti
(bad)
(bad)
out
xchg
sub
xor
les
push
inc
mov
leave
in
scas
call
rcl
mov
sahf
outs
mov
loopne
ja
mov
or
int
dec
das
clc
(bad)
push
mov
mov
inc
mov
sahf
int3
loopne
ds
sub
call
inc
xor
jl
lods
jcxz
xchg
adc
addr16
mov
call
pop
mov
pop
sub
xor
xchg
in
mov
lods
int
xchg
xchg
xchg
cs
mov
xor
(bad)
(bad)
jmp
mov
sahf
pop
mov
sti
xchg
mov
lods
test
pop
movs
pop
js
loopne
xchg
rol
cmps
outs
mov
mov
jle
xor
psrld
pop
inc
sbb
xor
or
call
daa
jge
cld
xor
sbb
psubq
cmp
ins
jmp
iret
mov
pop
push
arpl
(bad)
call
sub
mov
pushw
sbb
fnsave
xchg
pop
loop
pop
lock
jmp
not
cmps
jp
and
and
push
repz
ins
sbb
jl
mov
jmp
cdq
jecxz
cld
mov
jmp
imul
xchg
cmp
out
das
jmp
mov
push
dec
js
sbb
(bad)
push
sub
test
div
mov
loop
int3
out
add
push
imul
xchg
xchg
ret
pop
mov
(bad)
push
sub
les
pop
xlat
inc
xlat
sub
pop
sbb
nop
(bad)
(bad)
(bad)
jmp
xchg
ins
neg
xchg
xchg
out
pop
xchg
or
add
bound
sub
inc
mov
xchg
imul
jbe
jne
ins
out
mov
xchg
outs
lods
or
les
(bad)
(bad)
jg
call
pusha
dec
mov
popf
ffreep
outs
shr
mov
pop
push
out
imul
(bad)
inc
xchg
mov
std
clc
int
fs
ucomiss
test
jecxz
test
sbb
pop
(bad)
(bad)
call
pop
les
das
and
retf
(bad)
lahf
mov
call
inc
add
clc
movs
in
(bad)
mov
inc
ror
sub
out
jecxz
(bad)
dec
lock
into
hlt
(bad)
jmp
dec
sub
mov
xlat
cs
(bad)
(bad)
(bad)
call
sbb
and
add
inc
test
adc
popa
and
push
jmp
(bad)
(bad)
jmp
cwde
cdq
and
adc
and
int
in
mov
and
mov
(bad)
(bad)
jmp
inc
mov
lock
push
pop
out
and
int3
inc
push
das
in
xchg
ret
xor
jg
call
test
sub
sbb
jmp
lds
jle
std
stc
ds
mov
(bad)
call
daa
xor
gs
jns
retf
cmp
pop
sbb
(bad)
(bad)
jmp
out
push
fwait
sub
cmp
loope
and
sbb
popf
pushf
mov
pop
fisttp
mov
repz
cmp
fs
pop
hlt
fucomip
jecxz
cmp
cld
sbb
and
lahf
shl
cmp
call
(bad)
push
mov
mov
in
jl
cmp
jo
sub
and
(bad)
(bad)
(bad)
clc
test
dec
xchg
mov
push
sub
stc
sbb
movs
lds
dec
jg
(bad)
(bad)
(bad)
mov
neg
aam
lea
out
cld
jle
test
loope
fistp
leave
(bad)
(bad)
(bad)
inc
sti
adc
inc
xor
add
(bad)
mov
aam
rol
ret
js
retf
(bad)
(bad)
(bad)
call
dec
dec
in
fist
mov
or
imul
cmps
pop
sbb
inc
and
(bad)
(bad)
(bad)
inc
sub
ret
ds
cld
fild
ja
mov
sti
mov
stos
pop
and
push
push
mov
jmp
pop
and
or
sti
sub
sbb
pop
xor
xlat
mov
mov
(bad)
cmp
dec
jl
jmp
mov
dec
inc
inc
stc
sbb
pop
xchg
pop
or
pop
dec
xor
push
mov
sub
mov
lods
(bad)
pop
cmp
(bad)
(bad)
call
into
cmp
sahf
mov
jmp
sub
push
movs
mov
scas
mov
cld
(bad)
(bad)
(bad)
mov
movs
jle
enter
aam
shl
bnd
sub
and
or
fst
mov
out
xlat
xor
mov
pop
imul
out
cmps
push
fsubr
sbb
(bad)
(bad)
call
test
outs
sub
cmp
lea
push
adc
fild
sub
jmp
dec
(bad)
(bad)
(bad)
inc
pop
into
sbb
jge
das
push
add
fldenv
leave
inc
or
rol
pop
inc
jb
sub
jg
int3
ds
(bad)
(bad)
inc
shl
or
test
addr16
dec
and
outs
imul
cld
mov
loope
and
and
inc
inc
(bad)
fild
and
mov
xchg
inc
cld
(bad)
cli
(bad)
adc
stos
cmp
lea
gs
fs
leave
jae
add
cmp
loope
mov
ficom
es
pushf
in
xor
jae
(bad)
(bad)
dec
jo
test
push
iret
fs
add
loope
outs
or
jb
and
cmp
(bad)
jmp
ins
jle
push
dec
mov
jae
and
sbb
add
sub
(bad)
(bad)
(bad)
dec
repnz
sbb
psubusw
dec
push
adc
aaa
sti
mov
mov
cmp
outs
es
jp
int3
bound
dec
ins
popf
push
mov
pop
or
mov
(bad)
(bad)
dec
icebp
popf
cmp
clc
icebp
test
and
xchg
pop
outs
retf
cmp
sub
jne
(bad)
(bad)
(bad)
mov
xchg
(bad)
push
push
adc
sub
ins
mov
test
fs
add
test
cwde
test
(bad)
pop
scas
pop
mov
ins
sar
rcl
(bad)
(bad)
(bad)
mov
pop
int3
add
push
imul
jmp
sub
lods
xchg
cmp
lock
call
dec
jecxz
sub
fiadd
mov
xchg
jle
sub
mov
(bad)
(bad)
(bad)
call
clc
stc
mov
adc
imul
clc
movs
bound
mov
mov
outs
cmp
loope
call
ds
dec
fldenv
not
cs
mov
andps
(bad)
(bad)
(bad)
dec
(bad)
and
bound
inc
icebp
push
inc
sbb
lods
adc
inc
stos
outs
sbb
adc
(bad)
(bad)
inc
retf
retf
add
out
aaa
pop
test
stc
in
cmp
dec
jo
mov
in
(bad)
(bad)
(bad)
push
or
loop
xor
repz
mov
xor
leave
pop
das
inc
xchg
inc
daa
lock
push
fcomp
std
(bad)
(bad)
(bad)
jl
sti
xchg
and
xlat
push
fnstenv
mov
push
retf
pop
punpckldq
sbb
call
test
ror
call
cmp
xchg
stos
shl
or
cmp
popf
inc
cld
lock
push
cmp
(bad)
or
mov
enter
or
ficom
(bad)
jg
(bad)
in
movnti
sbb
pop
out
xor
aaa
(bad)
mov
mov
fcomp
(bad)
(bad)
(bad)
fadd
pop
mov
mov
leave
idiv
cli
fdivr
or
mov
xchg
jb
mov
sbb
add
cli
pusha
aad
jl
pop
push
mov
add
in
xlat
mov
mov
pop
arpl
jmp
push
rol
sub
lea
xchg
mov
push
popfw
pop
test
(bad)
call
fs
(bad)
cli
int
cmp
in
(bad)
fst
cmps
lahf
pop
lea
(bad)
(bad)
jg
inc
and
jmp
movs
jg
and
add
jae
push
pop
pop
retf
clc
(bad)
(bad)
(bad)
cmp
and
add
inc
jge
test
mov
inc
push
cli
aad
xchg
(bad)
jmp
and
fld
inc
sbb
clc
push
jb
call
cli
pop
clc
inc
dec
adc
(bad)
(bad)
cmp
jge
fnstenv
sbb
repnz
das
enter
cwde
(bad)
(bad)
call
gs
push
sub
cmp
outs
lea
call
xor
mov
sub
jnp
test
mov
out
repnz
(bad)
(bad)
call
xchg
dec
mov
pop
in
or
mov
mov
shl
pop
ss
mov
lods
ror
sahf
repnz
adc
les
(bad)
(bad)
(bad)
inc
test
aad
inc
mov
cmp
ss
retf
adc
movs
push
cli
retf
dec
(bad)
dec
loopne
sub
jecxz
adc
mov
mov
push
(bad)
and
cmp
clc
push
test
xlat
outs
pushfw
(bad)
(bad)
(bad)
mov
mov
sahf
outs
mov
xor
nop
orps
(bad)
mov
out
inc
sub
(bad)
(bad)
(bad)
inc
mov
adc
loope
enter
push
jae
pop
pop
lahf
sbb
jmp
(bad)
(bad)
(bad)
jmp
jae
cmp
jbe
fisttp
repnz
jle
or
mov
jg
sub
jmp
jbe
test
add
or
jns
cmp
mov
mov
mov
imul
xchg
xchg
stos
pop
cmc
lahf
rcr
stos
inc
jae
jae
(bad)
dec
fiadd
ret
(bad)
push
into
mov
dec
aam
add
mov
aaa
(bad)
int
sbb
inc
call
call
and
std
inc
clc
aam
(bad)
out
in
jmp
daa
mov
mov
call
(bad)
pusha
fs
jp
shl
clc
test
sub
jmp
rcl
movs
(bad)
(bad)
(bad)
(bad)
out
push
sbb
jo
adc
mov
sbb
mov
test
das
imul
pusha
or
jmp
out
push
mov
pop
cmp
cmp
outs
mov
loop
outs
push
imul
repz
and
popf
mov
shl
add
pop
xchg
(bad)
adc
scas
push
ja
fwait
mov
cmp
(bad)
dec
or
ror
fwait
scas
dec
xor
int3
pop
bound
mov
hlt
dec
lock
in
xor
pop
mov
sub
inc
sti
lods
(bad)
adc
js
mov
mov
outs
lahf
test
mov
adc
push
jp
leave
dec
xor
scas
ins
xlat
(bad)
mov
push
and
mov
mov
jns
test
retf
push
add
inc
rcr
rcr
pop
mov
dec
das
xchg
and
les
adc
push
dec
imul
fidivr
inc
inc
arpl
jmp
loop
(bad)
call
adc
(bad)
jecxz
jge
fdiv
jbe
fwait
inc
dec
cmp
mov
(bad)
(bad)
mov
sub
scas
lods
fsubr
leave
mov
sub
xor
lds
sar
jg
scas
mov
inc
scas
inc
push
(bad)
xor
stos
outs
jmp
xchg
pop
repnz
xchg
ret
sub
mov
shl
loope
adc
js
mov
(bad)
dec
mov
sub
mov
xor
inc
inc
sar
shr
fsub
sahf
cmps
lods
loope
cmp
jne
and
inc
jp
push
ficomp
push
sbb
xor
add
dec
movs
pop
cli
and
cmp
push
ins
fsub
stc
fcomip
(bad)
jmp
lods
sub
cld
mov
icebp
and
movs
pop
inc
mov
scas
(bad)
(bad)
(bad)
jmp
cmps
pop
inc
lods
icebp
in
stos
mov
cmc
dec
xchg
sub
daa
jl
inc
pop
inc
mov
add
push
call
xor
adc
adc
jns
leave
ds
(bad)
in
(bad)
call
in
jmp
adc
bound
int3
adc
dec
ror
sbb
jbe
xlat
(bad)
xlat
cmps
push
fdivr
push
in
(bad)
neg
(bad)
dec
outs
jnp
jae
shl
jp
rcr
sub
es
dec
pop
dec
dec
ret
(bad)
(bad)
jmp
std
push
out
dec
aad
lods
jp
pop
cmp
mov
inc
popf
movs
pop
ds
pop
pushf
je
(bad)
(bad)
(bad)
cmp
dec
loope
pop
or
push
mov
mov
jmp
push
fstp
arpl
scas
mov
(bad)
icebp
cs
mov
jg
(bad)
(bad)
fdivp
push
or
dec
das
daa
(bad)
je
and
mov
jo
jb
pusha
(bad)
(bad)
(bad)
inc
in
repz
pop
fld
push
xlat
add
rcl
imul
xlat
addr16
rcl
pop
cmp
xchg
jmp
jecxz
je
retf
push
and
add
inc
sbb
mov
pushf
repz
add
(bad)
(bad)
call
(bad)
mov
mov
arpl
dec
xor
test
or
sbb
sbb
jmp
xchg
xlat
iret
scas
adc
sub
push
loopne
cdq
call
add
xor
push
fdiv
movs
push
aas
adc
int
stos
mov
and
mov
mov
push
out
gs
cmc
cmps
push
mov
jge
mov
dec
xor
xor
mov
push
(bad)
(bad)
(bad)
(bad)
out
shl
xor
es
test
popa
pop
iret
mov
sahf
push
jmp
aaa
sub
(bad)
call
jo
jo
js
adc
jmp
fdivrp
jb
ss
and
(bad)
(bad)
jmp
or
loopne
cwde
jl
(bad)
pop
dec
movs
and
int3
dec
cmp
dec
xchg
push
mov
jmp
push
enter
dec
pop
sub
sbb
inc
fs
outs
pusha
fnstenv
sub
jp
mov
lds
add
adc
call
aas
jp
(bad)
icebp
idiv
sbb
or
pop
mov
add
jo
sbb
and
(bad)
(bad)
call
dec
pop
dec
add
(bad)
loope
mov
mov
dec
pop
cdq
mov
inc
outs
ret
mov
(bad)
call
xor
call
rcl
mov
xchg
mov
fidivr
mov
(bad)
(bad)
push
fdiv
adc
faddp
cli
dec
jg
test
jbe
iret
in
adc
or
pop
data16
je
(bad)
(bad)
(bad)
ds
(bad)
xchg
dec
and
outs
and
jmp
repnz
or
add
clc
sahf
dec
xchg
enterw
and
(bad)
(bad)
(bad)
jmp
adc
push
add
dec
das
(bad)
pop
clc
push
dec
gs
iret
ror
and
loopne
(bad)
jmp
lahf
test
xor
mov
sbb
js
pop
movs
adc
call
xor
dec
pusha
jbe
xchg
push
hlt
mov
xchg
arpl
sbb
(bad)
call
sbb
test
pop
add
sbb
scas
cmp
bound
(bad)
jmp
mov
jb
jbe
shr
push
retf
pop
mov
ins
dec
cs
fdivrp
(bad)
(bad)
dec
aad
inc
retf
pop
sbb
dec
retf
int3
leave
(bad)
mov
lock
out
mov
or
sbb
add
mov
inc
mov
sub
stos
jmp
out
mov
push
clc
jo
test
or
jge
mov
mov
(bad)
mov
sbb
jbe
lods
sub
ficomp
pop
hlt
out
xlat
jge
cli
nop
xchg
call
div
outs
stos
in
sbb
cli
jg
and
ss
sub
ins
pop
xor
mov
aad
(bad)
dec
or
dec
aad
mov
add
into
push
mul
ret
mov
lds
(bad)
(bad)
(bad)
call
mov
fwait
pop
(bad)
pop
pop
pop
dec
xchg
push
jno
js
mov
in
xor
lds
(bad)
call
data16
das
iret
push
div
sub
mov
ficom
(bad)
call
sbb
jno
pop
(bad)
test
les
sbb
pop
jle
cmp
and
fdivr
(bad)
(bad)
call
mov
fistp
mov
push
cmp
fadd
gs
adc
mov
add
inc
out
add
cmp
sbb
xchg
sub
(bad)
(bad)
call
add
cmc
repnz
mov
add
mov
cmp
and
(bad)
push
push
rcr
fs
test
mov
or
jl
(bad)
(bad)
mov
push
sbb
mov
int3
xor
retf
das
lock
fwait
mov
(bad)
(bad)
push
mov
shl
pop
mov
fwait
test
mov
loop
and
fist
ret
pusha
cld
dec
adc
fnstenv
sub
(bad)
(bad)
(bad)
jmp
imul
lds
pusha
or
fist
lods
pop
sub
scas
or
and
mov
ror
mov
in
out
sub
cwde
daa
mov
push
mov
fs
adc
push
mov
scas
dec
in
sbb
xchg
xor
movs
push
or
es
adc
dec
test
lea
shr
ret
inc
loopne
push
add
loope
fdiv
mov
popf
shl
mov
pop
clc
pop
sub
cmp
mov
(bad)
(bad)
(bad)
fisttp
or
(bad)
pop
push
in
inc
js
div
adc
ins
call
dec
sbb
xchg
pusha
jg
and
sbb
or
jg
(bad)
(bad)
xor
(bad)
adc
adc
daa
mov
cmp
gs
nop
lock
dec
lds
scas
mov
push
mov
in
in
(bad)
call
push
ds
repnz
jb
add
mov
inc
inc
mov
jmp
and
xor
pop
lods
jmp
loopne
and
xor
(bad)
(bad)
(bad)
push
mov
jecxz
sbb
pop
(bad)
xchg
sub
stc
cmp
rcl
mov
sar
(bad)
mov
mov
clc
aaa
scas
jecxz
call
pop
mov
push
xchg
add
movs
test
div
pushf
hlt
es
push
js
mov
in
mov
mov
push
cmp
xor
mov
jge
cmc
(bad)
jmp
outs
clc
mov
shl
mov
in
push
mov
jecxz
push
push
(bad)
(bad)
(bad)
jmp
cmps
ds
test
cli
and
xchg
cmp
arpl
inc
popa
mov
pop
or
jae
(bad)
(bad)
inc
psubd
jl
dec
inc
cmps
add
cmps
push
(bad)
pop
mov
in
pop
stos
cld
mov
mov
dec
add
lods
and
in
or
scas
popa
cmps
mov
push
lods
cld
(bad)
jmp
sub
int
mov
pop
push
mov
mov
rol
(bad)
jg
and
add
mov
out
in
xor
inc
add
mov
mov
inc
movhps
clc
add
pop
push
sar
out
sub
push
es
or
mov
icebp
(bad)
call
aad
jg
or
push
aaa
xchg
iret
test
inc
dec
adc
stos
stos
xchg
ficom
rcr
sbb
push
out
mov
(bad)
(bad)
dec
cli
pop
cmp
lea
pushf
test
pop
push
or
(bad)
jp
or
das
mov
int
sbb
(bad)
(bad)
call
cdq
pop
enter
mov
push
fild
jmp
scas
call
sbb
ret
jmp
mov
inc
or
mov
imul
repz
jbe
pop
sbb
jmp
jge
pop
lods
cmp
xor
xchg
jmp
mov
fld
or
mov
push
fld
(bad)
(bad)
(bad)
in
jns
inc
inc
jne
inc
inc
in
inc
test
imul
test
or
(bad)
(bad)
jg
pushf
mov
push
into
ins
data16
aad
or
push
inc
fdiv
jo
in
mov
push
mov
jbe
inc
clc
(bad)
(bad)
dec
mov
inc
aam
cmc
imul
lahf
aas
pop
push
push
out
adc
leave
cmp
dec
stos
xor
(bad)
(bad)
(bad)
(bad)
stc
add
and
bound
xor
mov
fs
in
mov
jecxz
dec
arpl
cmps
pop
hlt
(bad)
inc
cli
dec
sbb
add
loope
mov
pop
jnp
loope
imul
sub
mov
push
rol
pop
cmp
mov
cs
int
jae
loop
ret
pop
or
dec
ss
(bad)
out
and
push
test
in
fisubr
mov
(bad)
adc
inc
nop
fst
push
push
sahf
add
jp
js
mov
(bad)
(bad)
(bad)
jmp
fadd
push
repz
add
in
cmp
iret
jbe
fs
imul
and
jae
mov
jmp
dec
xor
push
pop
in
pushf
cmp
(bad)
popa
xchg
push
pop
addr16
rcl
fild
call
fsubp
(bad)
into
cmp
sar
movs
mov
sub
xchg
or
(bad)
(bad)
(bad)
mov
leave
push
jnp
retf
retf
mov
retf
inc
sbb
mov
(bad)
(bad)
jmp
(bad)
sbb
stc
dec
or
neg
test
fwait
or
(bad)
imul
ins
in
mov
xor
jg
or
mov
push
ffree
dec
hlt
sub
pop
(bad)
idiv
or
rcl
(bad)
call
ins
(bad)
sbb
jmp
sub
imul
es
add
xlat
mov
(bad)
ja
call
jns
dec
mul
je
adc
mul
dec
(bad)
jg
(bad)
in
(bad)
clc
out
ret
pop
test
push
add
(bad)
out
not
(bad)
push
std
out
mov
mov
pop
retf
mov
mov
sbb
shr
(bad)
(bad)
inc
xchg
lock
xlat
std
test
sti
cli
jg
jmp
jmp
mov
rol
das
in
push
push
cmps
sahf
out
call
lds
(bad)
(bad)
call
jecxz
mov
inc
xchg
lods
sti
fwait
pop
repz
fdivr
and
mov
inc
loop
(bad)
(bad)
dec
enter
in
(bad)
in
mov
cdq
sub
call
mov
xchg
(bad)
(bad)
(bad)
jmp
mov
cwde
std
fdivr
bnd
inc
fistp
jnp
repnz
jmp
adc
jo
inc
sub
movs
mov
sub
int3
shl
fisttp
add
sbb
pushf
sar
dec
mov
lea
cli
(bad)
push
in
sbb
push
mov
das
ffreep
dec
push
push
sbb
dec
fsub
xchg
fucom
(bad)
(bad)
(bad)
mov
in
dec
or
pop
cmp
adc
movups
adc
aaa
(bad)
(bad)
(bad)
(bad)
jle
jmp
push
aas
jne
pushf
stos
outs
pushf
outs
mov
mov
in
cmc
push
and
into
(bad)
(bad)
(bad)
(bad)
clc
clc
xchg
ret
aas
push
hlt
pop
repnz
inc
pop
movs
mov
mov
aaa
push
adc
mov
mov
push
(bad)
(bad)
jmp
mov
jns
mov
mov
ss
enter
(bad)
mov
sub
sbb
xchg
pop
(bad)
test
sub
cmc
lods
ja
(bad)
dec
outs
test
mov
push
dec
mov
popa
inc
jne
inc
push
gs
sti
adc
in
iret
hlt
jg
push
pop
xchg
or
arpl
and
aam
(bad)
(bad)
inc
outs
ds
and
out
and
inc
sub
push
not
inc
int
mov
call
hlt
cmc
loope
mul
push
mov
mov
or
sub
sbb
inc
ds
add
gs
ins
fcmovnbe
push
call
push
push
or
jne
not
xchg
inc
sbb
(bad)
(bad)
(bad)
aaa
sbb
pusha
ins
cmovle
jecxz
adc
test
mov
pop
xor
xchg
sub
dec
out
add
rcr
jbe
(bad)
out
clc
in
push
jg
pop
je
push
(bad)
jb
mov
sub
cdq
dec
call
inc
push
lahf
jae
ins
cmps
and
mov
xor
mov
int
fbld
sar
(bad)
dec
jae
int
cld
(bad)
jmp
iret
sbb
xor
dec
xchg
xchg
in
(bad)
(bad)
(bad)
jg
fist
sub
data16
scas
inc
addr16
xchg
out
lds
fisttp
(bad)
(bad)
jmp
outs
mov
adc
push
sar
mov
or
std
out
xchg
add
cdq
ret
mov
(bad)
(bad)
(bad)
(bad)
fdiv
cdq
imul
push
sahf
jl
pop
(bad)
dec
sbb
call
ja
(bad)
dec
xor
push
cmc
or
jo
add
aam
xchg
(bad)
(bad)
(bad)
dec
test
js
shl
mov
sbb
icebp
adc
and
jl
test
or
inc
js
or
(bad)
mov
imul
mov
(bad)
(bad)
dec
inc
sbb
mov
bound
icebp
jmp
je
out
lock
repz
mov
sub
inc
inc
rcr
ret
xor
push
dec
out
and
add
adc
into
cdq
(bad)
(bad)
(bad)
(bad)
fsubr
pusha
movs
mov
pop
sbb
xor
(bad)
xlat
pop
sbb
mov
jo
lahf
xchg
sub
mov
test
jle
pop
je
add
mov
arpl
les
(bad)
(bad)
(bad)
(bad)
jle
jmp
sub
adc
cli
add
fdivr
mov
mov
mov
jle
mov
bound
push
xor
jmp
in
sbb
push
das
jl
or
cmp
adc
repz
pop
(bad)
(bad)
(bad)
jmp
shrd
push
jge
inc
inc
aad
push
inc
cmp
mov
jbe
jge
(bad)
(bad)
(bad)
call
jbe
push
dec
mov
inc
cmp
and
ins
ror
cmps
or
iret
push
daa
movs
add
outs
call
aas
pop
or
xor
sub
push
in
gs
sub
(bad)
mov
jbe
sbb
retf
jno
imul
xor
jl
and
int
(bad)
(bad)
jmp
xor
mov
pop
sbb
pop
mov
les
gs
mov
sub
add
and
adc
data16
mov
inc
(bad)
(bad)
(bad)
push
outs
pop
inc
pop
mov
xchg
outs
inc
mov
pop
bound
push
mov
mov
fwait
dec
add
(bad)
mov
mov
arpl
and
sub
rcl
sub
sbb
(bad)
jmp
pop
sbb
es
iret
loop
fptan
xchg
push
data16
sub
fwait
arpl
pushf
pop
call
jmp
fiadd
cmp
jno
jle
gs
rcr
sub
(bad)
(bad)
jmp
push
(bad)
xchg
mov
mov
mov
popf
cmp
add
mov
cld
(bad)
jmp
mov
cwde
push
(bad)
hlt
jge
sub
jbe
jmp
outs
dec
cmp
es
lea
(bad)
(bad)
(bad)
(bad)
mov
test
cwde
sbb
pop
daa
lock
mov
cmp
sub
adc
inc
jo
mov
fistp
add
jl
and
cmp
(bad)
adc
ret
xor
std
aaa
sub
xchg
mul
sbb
js
(bad)
(bad)
(bad)
push
mov
popf
les
out
outs
ins
in
adc
test
sbb
sbb
sti
fwait
lods
mov
dec
ss
jg
mov
not
imul
stc
outs
cmp
xor
(bad)
mov
outs
(bad)
jmp
cwde
xlat
mov
lahf
(bad)
mov
adc
pop
lock
mul
sbb
movs
jmp
push
push
adc
pop
aaa
add
scas
dec
push
sbb
add
(bad)
fild
add
outs
int
xor
mov
adc
test
and
cmp
pop
(bad)
(bad)
(bad)
(bad)
cmp
nop
mov
neg
mov
mov
jp
xchg
les
dec
into
shl
jg
(bad)
(bad)
(bad)
push
mov
dec
bswap
imul
mov
mov
xor
(bad)
jp
mov
icebp
aam
(bad)
inc
xor
add
ds
rol
out
sub
(bad)
(bad)
push
sub
es
sbb
dec
dec
sbb
lds
rcl
push
cmp
mul
ds
(bad)
(bad)
(bad)
(bad)
cmp
ins
or
fstp
dec
pusha
mov
ins
jl
push
sub
sbb
das
push
test
sub
stc
jmp
retf
sar
(bad)
(bad)
dec
out
and
into
jg
sbb
outs
fld
imul
jne
fcomp
jb
mov
movs
xor
cmp
fimul
mov
cs
mov
ficom
mov
fdiv
sar
jg
test
adc
hlt
push
lds
adc
cdq
sub
mov
push
pop
and
popa
sbb
push
xor
mov
mov
stos
(bad)
call
lea
out
jecxz
imul
(bad)
int
pop
mov
jl
adc
(bad)
call
std
sar
cmp
dec
push
add
(bad)
pop
es
and
stos
add
sbb
stc
(bad)
(bad)
(bad)
jmp
icebp
push
dec
push
aam
cmp
jbe
xor
sub
jp
js
adc
jnp
mov
retf
mov
add
cld
shl
lahf
inc
call
inc
das
push
mov
out
jnp
nop
(bad)
(bad)
(bad)
(bad)
jmp
ret
jo
jae
test
jmp
adc
cdq
stos
test
sub
clc
cld
cmc
adc
popa
(bad)
(bad)
(bad)
jmp
mul
loopne
pop
test
jns
mov
or
cli
ret
jbe
mov
(bad)
repz
(bad)
jg
retf
into
adc
loopne
sbb
add
ret
xor
jmp
add
call
jp
or
call
pop
pop
inc
lds
cmp
xchg
pop
iret
adc
(bad)
(bad)
stc
inc
(bad)
stos
idiv
popf
in
lods
add
nop
jmp
lock
mov
rcl
fnsave
push
jb
cwde
adc
mov
sub
inc
test
xchg
mov
cwde
mov
leave
xchg
and
call
out
addr16
sub
icebp
pop
push
mov
adc
pop
mov
cmps
fbstp
call
mov
xchg
(bad)
mov
aas
xchg
sbb
mov
pushf
div
(bad)
push
add
out
xor
cwde
xchg
mov
es
popa
push
cmp
movs
mov
(bad)
(bad)
inc
std
sub
or
jne
xor
inc
jmp
inc
scas
ss
or
(bad)
(bad)
call
and
xchg
(bad)
push
rol
dec
neg
(bad)
mov
sbb
mov
into
inc
push
jg
jecxz
mov
sub
dec
mov
mov
(bad)
(bad)
(bad)
jmp
pop
adc
popa
fs
mov
test
not
retf
rcr
xchg
mov
xchg
call
(bad)
popa
lea
imul
rcl
cmp
das
xchg
mov
mov
(bad)
call
jo
xchg
ins
jnp
scas
(bad)
ror
xor
mov
pop
inc
dec
(bad)
(bad)
(bad)
jmp
push
inc
aaa
xchg
je
ror
fadd
dec
sbb
push
push
mov
retf
in
stos
cld
retf
ja
dec
push
xchg
icebp
das
jecxz
test
in
mov
(bad)
(bad)
mov
ins
inc
push
xlat
mov
inc
pushf
int3
cmp
fcomp
cld
pop
call
adc
fs
bnd
ins
cmp
or
stc
inc
cmp
clc
inc
pop
call
sbb
sbb
and
(bad)
xor
call
push
call
sub
jg
dec
mov
pop
mov
xor
loop
sar
jp
push
icebp
in
jbe
in
fs
inc
pop
dec
call
or
and
out
(bad)
(bad)
call
or
clc
cmps
xchg
call
int
pop
dec
xchg
mov
call
(bad)
(bad)
fcomip
popa
xchg
out
sub
in
and
pop
bound
mov
xchg
xchg
(bad)
int3
out
xchg
add
(bad)
(bad)
(bad)
inc
movs
pop
das
lock
pop
cs
and
in
inc
xchg
or
sbb
jno
mov
in
mov
dec
cmp
pop
lods
mov
ss
(bad)
(bad)
dec
bound
xchg
mov
fsubr
mov
dec
imul
popf
jle
out
inc
addr16
xor
mov
div
(bad)
(bad)
call
mov
es
mov
sub
pop
mov
jp
inc
pop
(bad)
std
dec
dec
jp
into
popf
sub
inc
cmps
retf
arpl
(bad)
(bad)
(bad)
push
mov
xchg
jp
das
icebp
push
cmp
cmps
test
push
scas
adc
icebp
push
mov
fwait
lahf
cmp
pop
test
stos
mov
mov
fiadd
mov
fstp
(bad)
idiv
dec
ret
fs
fmulp
dec
xchg
popa
cmp
ret
(bad)
sub
fadd
cs
mov
lods
mov
add
mov
fmul
mov
jbe
jmp
cwde
xchg
jmp
(bad)
(bad)
(bad)
call
add
cdq
mov
mov
imul
jmp
cmps
xlat
and
(bad)
(bad)
inc
mov
jo
xchg
(bad)
in
or
sub
outs
dec
jns
shl
(bad)
xor
in
(bad)
(bad)
(bad)
jmp
push
ds
call
bt
aas
jmp
in
pop
sub
(bad)
(bad)
(bad)
mov
mov
cmp
popf
adc
push
dec
aas
mov
add
(bad)
(bad)
(bad)
fiadd
dec
shl
jo
inc
mov
nop
mov
dec
cmp
push
sahf
mov
or
xchg
mov
push
ret
xchg
pushf
aas
pop
hlt
pop
test
(bad)
sti
pusha
(bad)
(bad)
(bad)
inc
xchg
in
sbb
mov
mov
stos
sbb
dec
loope
(bad)
(bad)
(bad)
std
mov
pop
(bad)
int
(bad)
(bad)
jmp
jo
or
add
repnz
int3
mov
in
add
jns
iret
xor
popf
lods
mov
jmp
mov
lods
test
adc
jp
sbb
mov
ds
aam
movs
pusha
fistp
fucomi
mov
loope
dec
aad
retf
sbb
push
cdq
adc
mov
scas
add
cmp
in
in
std
(bad)
(bad)
push
out
mov
xchg
out
fcmovbe
shl
scas
push
mov
gs
mov
(bad)
push
lods
sar
mov
out
loopne
int
mov
push
mov
ins
jg
outs
test
lock
stos
push
pop
push
js
sar
xor
sti
scas
mov
sub
das
cmc
imul
gs
(bad)
mov
xor
into
mov
jo
lds
jecxz
jl
inc
xor
(bad)
(bad)
(bad)
call
movs
std
call
xchg
sub
push
rcl
inc
outs
stos
in
std
int
inc
mov
loope
jmp
dec
mov
inc
fnsave
lods
lock
cmps
lahf
cmps
rcl
xchg
out
cmp
jmp
jge
fcomp
and
mov
stos
test
jmp
call
jns
add
(bad)
(bad)
mov
sti
test
lods
mov
sar
xchg
loopne
xor
xchg
(bad)
(bad)
(bad)
fsubr
mov
idiv
adc
mov
push
ja
xor
pushf
(bad)
(bad)
(bad)
call
xchg
jo
and
xchg
(bad)
or
or
test
ss
in
gs
inc
popa
xchg
int
(bad)
(bad)
sti
repnz
mov
push
stc
xchg
sub
xchg
(bad)
(bad)
inc
popf
(bad)
dec
in
or
add
mov
fisub
xchg
lea
shr
xchg
and
repnz
(bad)
(bad)
(bad)
(bad)
call
pushf
add
fild
rcl
shl
lods
mov
sub
mov
mov
gs
mov
mov
(bad)
(bad)
(bad)
call
push
cld
clc
ds
jmp
and
gs
sahf
stc
cmp
add
(bad)
dec
pop
push
pop
mov
dec
add
idiv
push
xor
jle
cli
push
cld
push
cmp
mov
out
xchg
movs
cmps
loope
(bad)
(bad)
jmp
sbb
adc
jne
and
repz
in
xor
loope
or
daa
jmp
(bad)
js
inc
cwde
sub
rol
mov
jno
(bad)
(bad)
mov
xor
imul
jae
xchg
fcmovbe
inc
int3
lds
arpl
fild
cmp
(bad)
(bad)
dec
cwde
data16
iret
cmp
mov
inc
mov
dec
mov
(bad)
sub
ins
mov
jle
clc
clts
popa
xchg
loope
fdiv
aad
(bad)
inc
stos
mov
mov
mov
add
cmp
(bad)
(bad)
push
mov
jnp
pusha
(bad)
add
mov
mov
pop
cmc
jecxz
push
or
(bad)
(bad)
call
push
call
xchg
jbe
scas
add
(bad)
test
scas
push
lods
jg
jge
sbb
ficomp
js
cmp
(bad)
inc
adc
ins
sub
lods
mov
in
sar
pop
std
mov
adc
push
test
fcomp
(bad)
(bad)
inc
jmp
ss
fmul
in
push
(bad)
in
icebp
fimul
(bad)
(bad)
(bad)
jmp
xlat
fucomi
fidivr
(bad)
sub
ds
pop
add
mov
repz
retf
lds
mov
xor
(bad)
(bad)
dec
cmp
inc
push
into
or
mov
es
gs
dec
jmp
lahf
es
xchg
mov
(bad)
inc
cld
or
pop
push
cmp
sar
int
and
retf
fdivp
(bad)
outs
dec
jle
cmp
jle
out
inc
mov
fidivr
xchg
ret
call
jmp
out
sub
loop
enter
(bad)
(bad)
(bad)
mov
dec
cmp
sub
ror
in
lahf
xor
adc
in
add
jmp
arpl
cmp
cmp
cs
jecxz
(bad)
ffreep
pop
adc
pop
jp
ja
lahf
dec
xor
mov
dec
mov
das
clc
mov
cld
xchg
daa
xchg
mov
nop
push
mov
ret
pop
test
add
dec
dec
mov
test
in
mov
(bad)
(bad)
fistp
fisttp
call
test
jl
lock
popf
movs
hlt
lods
(bad)
mov
xor
mov
ret
rol
jg
dec
les
sub
pop
(bad)
(bad)
(bad)
push
lock
rep
mov
les
cdq
cdq
push
dec
xchg
retf
das
adc
fcomip
(bad)
sti
jb
xchg
enter
pop
or
js
adc
fucomip
lds
xor
sub
adc
xor
mov
jl
fstp
mov
(bad)
(bad)
(bad)
dec
cdq
or
push
and
clc
cmc
mov
mov
cmp
sbb
leave
push
jmp
(bad)
(bad)
(bad)
(bad)
jmp
rcl
jbe
push
rcr
cdq
jle
fcmovnbe
push
or
sti
pop
mov
enter
inc
xchg
mov
xchg
inc
push
inc
sahf
(bad)
(bad)
(bad)
(bad)
mov
cmps
adc
inc
xchg
ss
retf
scas
sbb
dec
jmp
repz
jno
movs
mov
je
(bad)
(bad)
jmp
inc
and
aad
fisubr
cmc
mov
femms
mov
pop
xor
(bad)
(bad)
mov
inc
icebp
mov
xchg
fld
fsub
shl
lock
arpl
pop
pop
add
inc
call
outs
pushf
mov
(bad)
(bad)
(bad)
push
add
loope
gs
jge
and
(bad)
imul
mov
(bad)
(bad)
(bad)
push
test
jb
call
ins
xchg
mov
movs
sti
dec
or
push
cmp
xchg
and
rol
call
test
(bad)
(bad)
(bad)
push
test
scas
repnz
mov
sar
loop
sbb
(bad)
(bad)
(bad)
jmp
push
sbb
mov
bound
pop
push
lds
(bad)
test
sti
sub
inc
into
lds
fcmovnu
enter
xchg
sub
imul
icebp
(bad)
(bad)
call
cmps
xchg
cmp
outs
fnstenv
sbb
cwde
in
jae
idiv
stc
push
stos
(bad)
(bad)
jmp
dec
(bad)
mov
ja
dec
add
js
sub
(bad)
pop
test
mov
shl
rcpps
mov
fwait
in
jmp
mov
lock
rcl
jbe
fs
(bad)
(bad)
(bad)
inc
xchg
sbb
popf
inc
not
dec
and
pushf
dec
pause
mov
push
mov
shl
and
(bad)
(bad)
inc
mov
stos
fdiv
outs
retf
inc
fist
sti
cmps
adc
dec
pop
and
cmp
mov
psubq
jle
data16
push
int
xchg
xlat
adc
and
push
stos
(bad)
inc
fmul
es
test
add
inc
and
pop
stc
sub
(bad)
(bad)
dec
push
inc
sbb
mov
mov
call
xor
mov
aas
lods
cmp
(bad)
dec
xchg
mov
push
cmp
test
mov
rol
push
test
jge
jmp
xchg
cs
mov
dec
mov
stc
gs
or
(bad)
(bad)
jmp
mov
pop
dec
in
ins
adc
mov
lods
jmp
sbb
(bad)
push
sbb
sub
int
imul
call
repnz
adc
lock
and
(bad)
dec
mov
mov
fimul
xchg
ret
mov
cdq
sti
sbb
xlat
mov
std
jno
test
sbb
div
sub
call
je
xchg
sbb
(bad)
jmp
xor
(bad)
xor
inc
popf
cmps
mov
(bad)
adc
jg
mov
push
cmp
mov
sub
leave
push
mov
clc
mov
cmp
mov
(bad)
(bad)
(bad)
(bad)
jge
mov
mov
xlat
fs
ja
ret
dec
cwde
dec
push
dec
add
out
and
push
ja
hlt
jecxz
cwde
inc
add
(bad)
(bad)
inc
inc
adc
imul
lea
test
fxch
movs
je
push
pop
or
fs
mov
jmp
push
out
and
es
xlat
or
cld
das
clc
push
pop
or
cmc
sub
mov
xchg
loop
leave
jp
pop
dec
add
stos
cdq
add
cmps
or
inc
(bad)
(bad)
(bad)
call
and
xchg
mov
push
adc
fsubr
xchg
jmp
pop
data16
inc
mov
or
(bad)
(bad)
(bad)
jge
jmp
rcr
lea
sub
ins
int
aad
mov
pushf
bound
push
(bad)
(bad)
inc
sbb
sub
arpl
dec
xchg
in
inc
int
std
mov
mov
icebp
aad
(bad)
(bad)
jmp
xchg
sbb
mov
adc
adc
ffreep
(bad)
push
(bad)
cli
call
(bad)
(bad)
jp
add
outs
out
out
sbb
cmp
test
imul
ret
es
cli
(bad)
(bad)
(bad)
push
jmp
fdivp
push
lock
mov
inc
out
(bad)
(bad)
fisttp
cmps
sub
or
dec
sbb
fwait
jo
hlt
mul
out
loope
jnp
(bad)
(bad)
(bad)
jmp
lea
pop
mov
sub
clc
jp
jnp
inc
pop
es
inc
push
or
mov
(bad)
(bad)
push
cmp
or
jl
mov
xor
loopne
inc
cmp
ja
mov
inc
loope
ins
int3
daa
fdivr
(bad)
(bad)
call
(bad)
xchg
adc
or
shl
cmp
sub
rcl
xor
pop
add
call
sbb
jb
(bad)
fisttp
sbb
loop
aaa
ret
(bad)
inc
in
in
fwait
cmp
jl
and
(bad)
inc
test
mov
mov
mov
lods
xor
je
dec
clc
das
add
inc
jmp
push
mov
je
(bad)
xchg
mov
mov
cmps
aas
gs
call
mov
add
(bad)
cli
setbe
push
xchg
xor
xchg
std
mov
jg
repnz
sub
xchg
jmp
(bad)
cmc
das
ja
pop
mov
xor
in
leave
call
lds
jne
xchg
test
(bad)
mov
loop
(bad)
(bad)
(bad)
(bad)
jge
clc
repnz
xchg
stos
jecxz
lds
sti
and
adc
jb
(bad)
rol
cli
cli
or
dec
jmp
jecxz
mov
jbe
mov
push
loop
xchg
mov
je
mov
ss
into
add
scas
jmp
(bad)
fcmovb
fs
xchg
test
pop
pusha
(bad)
repz
ss
stc
cmps
push
lock
(bad)
call
push
ins
add
pop
fwait
push
sti
repnz
ret
pop
jns
cld
movs
lods
and
(bad)
(bad)
(bad)
jmp
and
fidiv
iret
repnz
adc
daa
scas
mov
imul
mov
adc
jmp
dec
nop
ret
jno
pop
dec
mov
mov
(bad)
dec
xchg
fsub
pop
fst
dec
mov
repz
lock
fisttp
dec
mov
or
leave
sbb
imul
clc
jl
sbb
(bad)
(bad)
fbld
or
adc
add
(bad)
fwait
test
dec
xor
xor
(bad)
call
cli
sub
movs
jns
loopne
loop
test
xchg
and
mov
retf
stos
push
mov
(bad)
inc
aaa
mov
aad
ret
jmp
int3
ja
inc
jne
push
pop
or
mov
iret
pop
xor
inc
jecxz
xchg
push
dec
sar
(bad)
(bad)
jmp
add
pop
leave
jbe
pop
nop
sbb
fnstenv
imul
stc
xor
add
das
scas
test
mov
(bad)
(bad)
jmp
mov
xor
cmp
ret
cld
int
adc
enter
dec
mov
pop
lock
jmp
xchg
push
hlt
inc
fs
sbb
cmp
jle
push
jecxz
les
ds
pop
pop
dec
out
adc
adc
data16
(bad)
(bad)
inc
add
stos
and
jmp
cmc
or
adc
aaa
ret
adc
imul
mov
inc
rol
sub
push
pop
xor
sbb
lods
xchg
(bad)
push
jmp
sub
scas
and
or
inc
inc
jmp
scas
lea
mov
jmp
(bad)
sub
jecxz
std
and
std
mov
cmp
cli
(bad)
(bad)
jg
mov
pop
fcom
cmp
dec
push
stos
fs
pop
js
arpl
(bad)
call
mov
and
fisttp
xor
xadd
lea
or
cmp
sbb
mov
scas
sub
cmp
jns
mov
xchg
sub
mov
(bad)
(bad)
(bad)
(bad)
cmp
fisub
aas
lds
mov
mul
jge
inc
inc
out
jmp
cmp
jbe
test
int
add
test
ds
mov
inc
jg
sub
pusha
lea
pop
jecxz
mov
mov
adc
xor
and
inc
adc
rcl
loope
mov
(bad)
(bad)
push
fimul
jecxz
xor
outs
add
test
add
sbb
fbld
ja
fisubr
dec
inc
test
jecxz
ja
call
fbld
push
(bad)
pushf
jno
out
xchg
xchg
lods
fld
or
sub
(bad)
(bad)
(bad)
cli
cmp
dec
ror
fdiv
or
ret
jns
loope
push
(bad)
(bad)
(bad)
jg
dec
xchg
(bad)
fistp
mov
mov
add
xchg
pop
mov
(bad)
(bad)
(bad)
inc
add
jg
neg
xor
hlt
sub
mov
pop
pushf
mov
xor
push
(bad)
(bad)
(bad)
jmp
and
sbb
dec
pop
cs
dec
or
int3
or
lds
inc
push
dec
js
(bad)
mov
call
cmp
push
xor
pop
outs
lods
jecxz
popa
movs
int3
imul
(bad)
inc
mov
mov
(bad)
pop
cmps
sub
add
int
mov
out
outs
mov
(bad)
(bad)
push
pop
out
push
mov
jnp
gs
scas
pop
pushf
inc
cmp
call
mov
dec
and
outs
dec
push
sub
mov
push
inc
mov
(bad)
dec
push
pop
cmp
(bad)
(bad)
cmp
push
mov
cwde
and
pop
stos
xchg
adc
js
xor
movs
sbb
mov
inc
or
sahf
mov
jge
(bad)
(bad)
(bad)
(bad)
mov
and
adc
ficomp
inc
adc
xchg
daa
cmp
arpl
jge
or
(bad)
(bad)
dec
inc
call
fdiv
dec
pop
shl
mov
(bad)
repz
mov
inc
or
mov
mov
cmp
aas
xchg
(bad)
(bad)
(bad)
jmp
push
jne
pop
or
sbb
pop
xchg
xchg
loopne
ja
cmp
pushf
push
dec
and
(bad)
mov
inc
xor
mov
call
push
cld
mov
sbb
pop
out
add
jmp
add
movs
jo
mov
icebp
jle
(bad)
(bad)
(bad)
(bad)
inc
mov
and
dec
xchg
test
mov
hlt
sub
dec
or
dec
dec
push
fdivr
or
jo
scas
adc
call
add
popa
test
jmp
push
inc
dec
xadd
dec
sbb
in
call
cmp
jmp
mov
jmp
push
loop
dec
sbb
popa
sbb
fimul
push
int
icebp
sub
nop
sub
cdq
(bad)
movs
fist
cmps
(bad)
stos
leave
and
das
ins
mov
fisttp
(bad)
(bad)
(bad)
dec
mov
adc
sti
mov
cmps
fcomip
pop
inc
add
add
cmps
sbb
fild
(bad)
inc
push
jns
mov
(bad)
add
ins
retf
mov
imul
imul
xchg
sbb
clc
out
adc
adc
sbb
call
mul
or
pop
sub
ins
cmp
mov
(bad)
and
cld
(bad)
(bad)
push
(bad)
and
mov
rol
push
sub
leave
xchg
inc
adc
or
and
mov
fbstp
out
into
dec
or
mov
addr16
stos
dec
mov
stos
(bad)
mov
leave
push
out
fidivr
(bad)
aas
test
loope
cmp
pop
mov
int3
aaa
(bad)
(bad)
(bad)
mov
sub
push
mov
mov
lods
or
add
adc
pushf
popa
xor
(bad)
(bad)
push
popf
pop
iret
aaa
add
mov
test
pusha
and
cmp
xor
mov
fcmovnu
inc
pop
dec
pushf
mov
(bad)
sub
push
lahf
adc
xor
test
mov
(bad)
mov
repnz
shl
add
lahf
test
mov
sbb
jecxz
sbb
imul
jl
je
mov
push
xchg
daa
cmps
(bad)
(bad)
(bad)
call
in
add
dec
loop
adc
inc
out
mov
push
inc
lock
ds
push
inc
(bad)
(bad)
ret
sub
add
jle
xor
cli
or
mov
(bad)
jmp
adc
fist
push
into
ins
adc
mov
ds
out
cwde
(bad)
(bad)
(bad)
(bad)
(bad)
inc
dec
cmps
mov
repz
mov
push
enter
or
cmc
lds
sar
jnp
popf
pushf
fild
fwait
in
push
push
push
cmp
mov
(bad)
(bad)
mov
sbb
xor
fwait
rcl
pop
lea
test
(bad)
push
cld
xchg
push
cmp
sub
xchg
xchg
adc
xlat
movs
mov
mov
(bad)
(bad)
(bad)
jmp
jg
jno
add
inc
aam
adc
addr16
ds
jecxz
mov
repnz
(bad)
(bad)
call
rol
or
ss
inc
pop
scas
mov
gs
test
(bad)
aaa
push
jp
(bad)
(bad)
dec
and
or
xchg
cmp
cmps
dec
sbb
test
cmps
(bad)
jmp
inc
pop
xor
mov
repz
or
(bad)
push
sbb
(bad)
push
xor
inc
ss
lea
xchg
mov
call
jmp
call
fmul
scas
cli
stos
sar
cli
or
and
scas
(bad)
(bad)
call
sbb
inc
cmp
aad
fld
pop
lds
lock
add
push
cli
sub
in
inc
mov
xchg
pop
lahf
adc
(bad)
(bad)
call
dec
popa
stos
xchg
addr16
xor
pusha
pop
aam
mov
(bad)
(bad)
call
mov
cmc
lock
inc
jge
neg
outs
mov
jae
test
push
mov
pushf
add
pop
cdq
jne
jbe
call
inc
call
dec
repz
nop
inc
(bad)
(bad)
(bad)
inc
or
sub
retf
ins
xor
out
xchg
loopne
or
mov
addr16
jg
(bad)
jmp
jae
mov
push
dec
in
je
dec
cmps
test
sub
mov
es
neg
sbb
gs
pop
(bad)
pusha
adc
sub
(bad)
jmp
mov
sub
es
aam
popa
and
out
xor
aad
int3
mov
(bad)
(bad)
(bad)
jg
xor
xor
jg
sbb
dec
mov
mov
xchg
cmp
add
cld
(bad)
(bad)
push
jae
mov
xor
in
jp
je
push
sub
sub
jle
rcl
test
das
lock
out
(bad)
(bad)
(bad)
(bad)
in
imul
jns
push
addr16
pop
push
leave
push
xor
shr
sbb
pop
hlt
jmp
das
mov
mov
add
sahf
mov
fcmovb
jmp
cmp
(bad)
(bad)
(bad)
fist
les
mov
adc
loopne
or
stos
jae
call
dec
mov
shl
push
add
mov
sahf
(bad)
enter
jmp
sub
imul
adc
push
add
or
push
mov
mov
aam
mov
aam
dec
mov
sub
dec
iret
in
fsubr
ss
jno
sub
inc
mov
mov
and
arpl
pop
xor
mov
xchg
(bad)
(bad)
(bad)
push
sahf
push
mov
daa
test
mov
stos
mov
add
fwait
cmps
or
jmp
xchg
jge
in
pushf
xchg
fbstp
sbb
outs
mov
sbb
push
mov
sbb
mov
sub
daa
dec
jnp
mov
pop
icebp
(bad)
fnstcw
ror
mov
aam
xor
mov
cmps
push
cmc
dec
lahf
sub
jo
retf
(bad)
jmp
add
sbb
call
sub
push
inc
push
inc
pop
mov
and
(bad)
(bad)
(bad)
jmp
dec
push
imul
(bad)
icebp
stc
rcl
mov
add
and
pop
adc
(bad)
(bad)
(bad)
fsubr
(bad)
das
fcomp
sti
scas
stos
aad
pop
fsub
inc
sahf
xor
cmp
inc
xor
fnstenv
retf
ins
sub
push
adc
fisub
repnz
dec
jle
add
dec
stos
adc
jb
lds
outs
fdivr
or
jle
xchg
(bad)
call
pop
add
sbb
lock
cmps
in
mov
jnp
movs
imul
push
fcom
cwde
add
dec
out
mov
xchg
mov
xor
push
(bad)
mov
dec
jae
icebp
or
cmp
test
rol
inc
daa
pop
lock
fsub
sub
loop
jbe
mov
push
ja
sub
test
dec
aas
inc
sbb
test
sti
lock
test
pop
add
les
xor
shl
or
dec
fnstcw
pop
gs
jmp
jp
mov
js
cmps
pop
sbb
lahf
(bad)
(bad)
(bad)
dec
popa
ins
out
jmp
in
push
fwait
sbb
push
adc
fimul
cmp
inc
stc
cmp
sbb
inc
mov
js
mov
(bad)
inc
shl
mov
into
xor
add
sbb
clc
(bad)
push
mov
mov
push
sub
iret
mov
or
push
xor
sub
mov
and
mov
out
es
and
sti
push
gs
cld
aas
xchg
push
jne
sub
fnstcw
xchg
fadd
ret
loopne
jno
pushf
or
add
aad
push
call
add
pop
outs
popf
and
jmp
popf
pop
dec
pop
call
(bad)
(bad)
(bad)
dec
sub
mov
sbb
adc
pop
in
stc
or
adc
sub
mov
(bad)
(bad)
(bad)
inc
test
cwde
xchg
enter
repnz
mov
out
out
sbb
call
xchg
fwait
pop
mov
(bad)
dec
mov
cmp
jmp
inc
mov
mov
js
fwait
adc
cli
sbb
jmp
sub
sub
addr16
lahf
lock
xor
cwde
add
clc
jg
push
mov
pop
and
jno
scas
or
xchg
xor
(bad)
(bad)
call
loop
add
adc
add
cmp
in
or
stos
add
cmp
xchg
sub
(bad)
(bad)
(bad)
jl
and
add
out
sub
mov
loop
iret
movs
jp
call
mov
pusha
push
cmps
mov
stos
aad
pop
je
mov
aam
std
lds
mov
(bad)
out
sub
shl
rcl
cwde
or
add
cs
mov
scas
lods
pop
mov
popa
jmp
xor
rcl
iret
mov
loopne
hlt
sahf
sbb
push
mov
mov
mov
cdq
and
ror
ins
xor
pushf
dec
ins
loop
pop
jno
xor
inc
iret
or
ret
icebp
sub
inc
cmp
xchg
(bad)
(bad)
jg
push
adc
out
inc
push
pop
out
pop
ins
pop
fldcw
jnp
push
mov
push
loopne
(bad)
(bad)
(bad)
popf
aaa
les
(bad)
js
xchg
xlat
jl
out
jg
pop
test
pushf
pop
test
bound
(bad)
call
xor
and
iret
ficom
ror
mov
cwde
inc
dec
std
(bad)
pop
xor
(bad)
(bad)
call
(bad)
out
dec
je
(bad)
mov
push
imul
add
das
or
sbb
mov
out
mov
pop
mov
cld
sbb
or
addr16
sti
je
jnp
(bad)
(bad)
call
data16
(bad)
pop
(bad)
cli
cmp
mov
(bad)
(bad)
(bad)
jg
or
pop
mov
fcom
xor
fucom
cmc
add
xor
push
inc
cdq
and
int3
or
push
popf
fsubr
cmp
adc
(bad)
(bad)
(bad)
jmp
or
bound
cmps
cwde
call
scas
or
fisubr
push
push
jb
mov
ja
repnz
stos
mov
cli
xchg
push
loop
xchg
bound
(bad)
(bad)
call
push
mov
les
sahf
ins
cmp
gs
ret
leave
mov
jbe
or
stos
cmp
push
sar
(bad)
jmp
mov
mov
leave
pop
sti
mov
dec
or
test
cmp
lds
movs
(bad)
(bad)
(bad)
mov
or
loope
sbb
in
push
and
int3
das
pusha
fstp
int3
inc
rol
push
aad
jne
scas
sbb
fidivr
jb
(bad)
call
inc
adc
sub
push
arpl
fdivr
iret
xor
jg
pop
repnz
in
push
int
imul
(bad)
(bad)
(bad)
jmp
jns
in
xor
lahf
popf
jp
mov
push
scas
push
pop
leave
mov
jne
mov
pop
fadd
(bad)
(bad)
jmp
push
and
push
je
das
call
scas
adc
lds
push
push
test
and
(bad)
outs
(bad)
(bad)
(bad)
std
pushf
outs
test
sbb
shl
mov
rol
xlat
pop
es
retf
sub
adc
(bad)
call
pop
int3
aas
repz
jo
cmps
ror
test
push
dec
adc
(bad)
fucomi
add
mov
fiadd
gs
lods
jno
mov
push
jns
cmc
mov
or
jno
(bad)
jg
inc
pop
les
mov
rcr
jmp
(bad)
(bad)
(bad)
(bad)
fdivr
xor
loopne
scas
test
inc
outs
pop
stos
lods
arpl
(bad)
push
mov
push
pop
arpl
sub
dec
cli
or
cld
adc
pusha
in
inc
inc
jge
add
mov
ror
into
test
dec
and
push
popf
(bad)
(bad)
(bad)
call
push
out
ficom
adc
cmp
cmp
clc
(bad)
adc
mov
mov
gs
stos
push
js
arpl
push
sub
loope
(bad)
push
sti
(bad)
in
jmp
repnz
push
fs
mov
inc
sub
jle
(bad)
fild
sbb
stos
jmp
in
in
xor
daa
xchg
jg
(bad)
call
and
mov
clc
es
mov
(bad)
(bad)
mov
pop
add
xchg
stos
bound
sti
and
jle
pop
jmp
scas
mov
cmc
cmp
xor
xchg
mov
dec
dec
ins
out
inc
and
(bad)
inc
sbb
cmp
fmul
push
xor
cmp
sbb
dec
mov
cdq
mov
(bad)
(bad)
fcomip
push
xchg
add
xchg
arpl
sahf
mov
mov
sub
cmp
pusha
jmp
inc
cld
cmp
repz
mov
retf
mov
dec
xchg
repnz
inc
pop
nop
push
mov
dec
(bad)
outs
sbb
inc
fimul
xor
mov
(bad)
(bad)
(bad)
jmp
out
repz
pushf
dec
rcl
(bad)
cmps
aad
call
dec
ret
(bad)
(bad)
(bad)
jmp
jle
popf
inc
or
stos
int3
stc
mov
loop
es
adc
out
sbb
fadd
sbb
push
mov
scas
lods
jecxz
adc
pop
jge
shr
adc
mov
jno
repz
test
pop
adc
push
mov
cmc
cmps
call
mov
pop
hlt
push
push
xor
fwait
lock
mov
ficomp
(bad)
(bad)
inc
adc
fwait
mov
(bad)
xchg
rol
unpckhps
ret
or
into
retf
dec
jle
pop
icebp
jmp
push
jle
sbb
push
repz
inc
into
popa
je
popa
xchg
and
dec
leave
lock
(bad)
fisttp
sbb
mov
pop
ins
cmc
sbb
retf
xor
fsubr
and
jmp
lock
movs
jns
add
leave
ins
add
jle
xchg
(bad)
(bad)
call
mov
add
adc
and
push
mov
mov
(bad)
inc
cmc
mov
mov
in
pop
in
loope
cs
inc
out
movs
imul
sub
daa
test
ds
into
(bad)
mov
mov
or
scas
xchg
jg
fcom
pop
jo
xchg
rcr
sub
pop
div
mov
mov
or
aaa
xchg
shl
outs
iret
mov
add
mov
(bad)
std
aaa
push
scas
push
xor
add
pushf
pop
inc
adc
cld
fs
aam
stc
xchg
ins
(bad)
push
test
mov
xor
jle
mov
mov
repz
ret
out
imul
lods
add
loop
sti
neg
pop
mov
movs
cmps
push
or
and
fild
(bad)
(bad)
jmp
dec
enter
imul
push
pop
push
xchg
(bad)
or
fbstp
adc
scas
ds
(bad)
(bad)
(bad)
jmp
adc
dec
scas
push
pop
int
ins
dec
(bad)
mov
cmp
mov
das
int
scas
mov
(bad)
out
(bad)
xor
adc
adc
xchg
inc
cmps
sub
je
outs
call
push
sbb
jecxz
fcomip
(bad)
(bad)
add
or
jl
cdq
inc
push
mov
jle
dec
dec
adc
loopne
push
pop
cmp
adc
fcom
inc
(bad)
jmp
adc
pop
jo
retf
(bad)
(bad)
push
xchg
cmc
push
adc
fs
jecxz
dec
mov
scas
pop
pop
dec
(bad)
(bad)
inc
rcl
adc
push
mov
sub
dec
out
or
xor
sbb
(bad)
fcomip
jle
in
je
in
(bad)
movs
fs
shl
cmp
outs
push
inc
mov
dec
in
(bad)
jg
jmp
stos
sub
or
mov
xchg
repnz
std
mov
push
loop
retf
js
int3
xor
(bad)
dec
les
cs
and
aam
js
not
aam
mov
sub
inc
push
add
adc
(bad)
(bad)
call
in
hlt
and
imul
push
sub
inc
or
pop
mov
sub
(bad)
(bad)
jmp
dec
ror
lock
push
cmc
cmp
jmp
or
cmps
mov
loopne
push
inc
pop
push
(bad)
jmp
jbe
xor
cmc
mov
adc
scas
sub
daa
xor
pop
(bad)
(bad)
(bad)
jmp
and
repz
hlt
jecxz
sbb
add
jmpw
dec
(bad)
(bad)
(bad)
(bad)
cmp
jecxz
mov
xchg
les
cld
dec
fsubr
mov
cs
add
mov
(bad)
(bad)
(bad)
call
jp
dec
loope
adc
scas
xchg
sbb
sbb
pop
pushf
xchg
pusha
mov
pop
push
pop
ds
call
or
ret
cmp
mov
xchg
xchg
(bad)
(bad)
(bad)
(bad)
mov
shr
in
mov
cmps
inc
aam
retf
jle
cli
pop
jae
jbe
jge
out
xchg
ins
(bad)
mov
cmp
jbe
mov
push
add
or
inc
add
out
fadd
(bad)
(bad)
(bad)
and
out
xor
cs
jnp
arpl
bound
imul
cmp
outs
dec
mov
je
push
mov
mov
iret
mov
sub
inc
int3
jb
add
jns
add
inc
sbb
outs
mov
mov
aas
cld
mov
adc
sbb
xor
inc
push
and
iret
scas
sbb
jns
in
aam
mov
sub
add
mov
push
add
and
xchg
mov
aad
pusha
fcom
dec
pop
inc
imul
jmp
js
stos
jbe
xchg
movs
cmp
mov
push
lods
and
outs
(bad)
pop
in
lods
mov
cs
(bad)
(bad)
inc
fbstp
fld
dec
mov
add
dec
hlt
mov
cdq
xchg
or
inc
sbb
pop
clc
sti
in
imul
jmp
(bad)
xor
push
cmc
fmul
icebp
mov
pop
sbb
adc
xor
xlat
inc
les
das
adc
fwait
xchg
in
data16
out
inc
xor
data16
(bad)
jmp
aaa
mov
inc
and
scas
popa
inc
out
arpl
aaa
dec
inc
enter
push
lea
ret
movs
cwde
enter
pop
hlt
sub
aad
and
fdiv
out
mov
mov
sbb
and
(bad)
(bad)
jmp
cmps
xor
(bad)
sar
dec
sbb
xchg
and
mov
cmps
xor
inc
cmc
daa
aad
imul
mov
(bad)
(bad)
jmp
lea
mov
xchg
fisubr
pop
lahf
push
xchg
neg
stos
dec
retf
sahf
fstp
ins
(bad)
dec
lock
mov
jg
mov
or
test
adc
mov
add
sbb
movs
or
and
sub
dec
xchg
cmps
loopne
mov
(bad)
push
cmc
add
das
mov
arpl
out
clc
lea
std
jmp
sub
(bad)
jmp
jg
mov
push
clc
outs
aas
inc
dec
aaa
rcr
add
arpl
fisttp
(bad)
(bad)
(bad)
jmp
lock
fidivr
mov
inc
movs
cmp
pop
jae
jns
call
cld
adc
(bad)
(bad)
jmp
mov
adc
lds
movs
add
in
pop
sbb
sahf
or
fwait
sbb
(bad)
cmp
cwde
xchg
mov
ret
dec
out
in
(bad)
(bad)
mov
sahf
lds
test
xchg
sub
cli
mov
rcr
adc
cmc
jg
enter
add
cmps
jnp
out
rcr
imul
(bad)
inc
mov
dec
push
fld
gs
(bad)
mov
mov
jns
or
(bad)
(bad)
call
das
clc
pop
jp
dec
out
sub
sub
jb
push
mov
aad
cmps
(bad)
test
(bad)
jmp
mov
mov
sub
retf
xchg
retf
scas
fadd
cmp
pop
inc
std
(bad)
(bad)
jmp
nop
cmp
inc
es
fwait
sbb
inc
xchg
repnz
aas
xor
add
cmp
xor
cli
sbb
jns
(bad)
(bad)
call
and
arpl
mov
jb
inc
mov
jns
scas
test
xchg
cmp
pop
(bad)
jmp
ret
mov
mov
mov
ret
jl
push
(bad)
fcomip
add
outs
adc
rcl
lock
out
cmps
lea
(bad)
call
pusha
jae
jl
push
enter
fnstsw
pop
sub
loop
jno
jp
(bad)
(bad)
(bad)
call
jmp
jl
adc
mov
in
fld
popf
or
retf
add
(bad)
(bad)
(bad)
(bad)
ficom
jnp
(bad)
fadd
lds
ret
pop
xchg
lods
je
mov
push
pushf
(bad)
(bad)
(bad)
dec
cmp
aaa
add
sbb
cdq
cmp
cli
ret
cdq
xor
leave
cwde
scas
and
cld
(bad)
(bad)
(bad)
jmp
(bad)
enter
push
jns
add
lods
enter
xchg
cmp
push
pop
in
cmp
jmp
std
retf
mov
test
or
gs
scas
call
mov
jge
xor
mov
push
int3
push
add
ins
bound
jb
sbb
std
test
dec
retf
(bad)
(bad)
jmp
mov
add
mov
xor
neg
in
xchg
adc
jle
sub
adc
mov
ins
add
cdq
or
inc
mov
std
xchg
sbb
loop
xlat
les
les
(bad)
pop
mov
inc
cmp
(bad)
(bad)
(bad)
push
lods
stos
xor
ins
repz
xor
inc
jecxz
xchg
jge
(bad)
(bad)
(bad)
dec
xchg
repz
jge
xchg
push
lds
in
or
inc
xor
rcl
jmp
mul
(bad)
mov
mov
or
sti
addr16
cmp
outs
(bad)
dec
clc
sbb
mov
enter
dec
retf
fstp
fstp
dec
(bad)
(bad)
dec
dec
fisub
mov
pop
pop
inc
sar
inc
jg
mov
mov
cmp
add
add
(bad)
jnp
cmps
mov
paddusb
or
xchg
das
(bad)
jmp
dec
sti
xor
mov
push
mov
jbe
pop
adc
mov
sub
xor
mov
call
fisub
pusha
sbb
pop
dec
xchg
(bad)
jg
fdiv
push
or
lea
outs
mov
div
sub
mov
mov
xchg
push
push
mov
(bad)
mov
hlt
hlt
inc
inc
outs
pop
and
shl
cmp
dec
jecxz
(bad)
call
fs
inc
pop
xchg
cmps
inc
imul
repz
sbb
cli
push
pop
into
jp
(bad)
jg
inc
sub
jns
aas
retf
int
or
push
or
loopne
and
adc
mov
(bad)
(bad)
call
in
xor
xchg
and
sahf
out
loope
in
rcl
mov
push
aas
wrmsr
(bad)
push
ds
xchg
sub
push
pop
cmp
mov
hlt
movs
and
hlt
mov
pushf
fcos
(bad)
(bad)
(bad)
mov
fild
add
pop
mov
das
push
rcl
(bad)
push
push
dec
into
outs
mov
cmc
jle
push
(bad)
(bad)
(bad)
inc
push
movs
and
pop
sbb
cmp
arpl
sbb
pop
inc
(bad)
dec
inc
in
mov
mov
or
int3
(bad)
mov
xchg
and
cmp
div
mov
mov
repz
stos
(bad)
(bad)
(bad)
call
xchg
mov
(bad)
and
leave
jne
in
sbb
sahf
in
ja
lahf
or
mov
int3
pop
ja
aam
fwait
xor
adc
out
std
(bad)
(bad)
call
sub
out
mov
mov
cmp
in
ins
mov
mov
in
or
inc
pushf
pop
(bad)
repz
dec
aaa
and
(bad)
(bad)
call
inc
adc
lods
sbb
lea
sahf
pop
xor
dec
xchg
and
(bad)
(bad)
(bad)
(bad)
mov
ret
loopne
cs
aam
pop
cld
es
mov
cmps
cmp
mov
(bad)
(bad)
mov
and
and
imul
dec
loop
cmp
lock
adc
(bad)
call
mov
sbb
cmc
jp
stos
adc
jg
fld
fldenv
pop
cmp
nop
and
push
imul
mov
outs
cmps
lock
call
mov
xchg
(bad)
mov
jmp
jge
in
add
push
aad
(bad)
hlt
in
mov
leave
jl
mov
(bad)
cmp
lods
jae
stc
aaa
sub
pop
fs
ins
mov
mov
xor
jmp
hlt
and
dec
jge
or
ja
mov
cmp
jmp
jno
cdq
les
ss
fucomip
push
lahf
mov
loop
outs
out
xchg
ret
(bad)
(bad)
(bad)
jmp
push
jne
dec
push
ret
inc
adc
mov
xchg
push
sbb
test
pop
inc
sub
sbb
(bad)
(bad)
push
push
(bad)
push
mov
fsubp
fistp
shufps
sub
(bad)
call
mov
popa
sar
in
sahf
mov
(bad)
sub
jge
jp
mov
sub
(bad)
(bad)
push
popf
sbb
xchg
sti
mov
mov
add
push
push
(bad)
enter
icebp
call
or
xchg
pop
pop
jg
xchg
inc
test
loop
dec
pop
mov
cdq
lock
push
call
xchg
sub
loopne
imul
(bad)
mov
jp
je
fdivr
pop
in
(bad)
pushf
mov
mov
cmp
(bad)
(bad)
(bad)
inc
jnp
popa
mov
sub
aaa
jmp
push
mov
mov
jb
(bad)
aaa
dec
cmp
ss
je
out
mov
shr
les
fwait
(bad)
(bad)
jmp
jmp
mov
or
xor
mov
jg
aad
dec
adc
ret
rol
ror
ins
cmove
jg
mov
push
loop
adc
mov
sub
sti
(bad)
neg
mov
movs
and
pop
push
aam
and
(bad)
(bad)
call
adc
fidivr
pop
aaa
and
xor
or
fsub
cmps
mov
cmp
dec
push
std
(bad)
(bad)
mov
pop
push
out
icebp
sahf
xchg
cmp
dec
dec
fcomp
sub
and
out
cmp
or
fwait
cmp
out
and
dec
push
mov
lods
push
(bad)
(bad)
(bad)
inc
xchg
ror
call
xor
push
fwait
out
lahf
andps
loopne
pushf
sbb
sar
(bad)
(bad)
inc
mov
pushf
inc
enter
mov
lea
fimul
adc
lods
(bad)
(bad)
call
cmp
jns
dec
adc
mov
mov
xor
jmp
jmp
(bad)
pop
out
jmp
mov
sub
fst
push
or
sub
mov
rcl
aad
ret
mov
push
out
add
dec
adc
push
int3
ja
pop
lock
js
scas
repnz
or
test
push
sbb
jmp
in
imul
mov
dec
mov
jl
mov
in
(bad)
dec
xchg
stc
and
(bad)
(bad)
(bad)
push
xor
popf
push
mov
inc
adc
xchg
jo
adc
push
inc
pop
cmps
fdivr
je
(bad)
jne
(bad)
(bad)
jmp
mov
inc
dec
xlat
inc
pop
pop
push
int3
xchg
test
cli
pop
push
xchg
push
shr
inc
in
(bad)
(bad)
(bad)
jmp
enter
add
ins
adc
stc
ins
jns
inc
push
(bad)
fimul
fidiv
xchg
sbb
clc
(bad)
inc
scas
clc
pop
and
jo
sub
mov
inc
ins
xchg
and
push
loopne
cmp
push
rol
xchg
call
call
sbb
jo
js
jne
(bad)
(bad)
dec
jmp
xchg
dec
pushf
sti
cmp
mov
and
push
ror
fiadd
mov
jecxz
dec
add
pop
cmc
mov
(bad)
mov
ret
cmp
icebp
sar
adc
(bad)
(bad)
inc
movs
sub
or
pop
sbb
jb
ins
push
pop
mov
sar
jmp
push
push
jle
mov
dec
lods
sbb
gs
dec
sub
cmp
test
add
pop
push
push
push
cs
ss
add
jbe
(bad)
(bad)
(bad)
(bad)
fnsave
xchg
(bad)
in
inc
mov
fidivr
mov
loope
ret
xor
lods
add
popa
cwde
jnp
add
(bad)
(bad)
(bad)
mov
sbb
fmul
mov
dec
jbe
gs
lahf
and
cmc
inc
xor
xchg
cmp
retf
sub
das
fisub
mov
jmp
add
(bad)
(bad)
aaa
loop
iret
add
lea
lahf
out
scas
imul
sub
adc
jmp
(bad)
mov
sbb
cmp
(bad)
fcos
stos
(bad)
(bad)
mov
cmp
aam
sub
xchg
pushw
dec
ins
sar
inc
es
out
ds
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
arpl
pop
stos
std
test
stc
cmp
push
sub
mov
or
fwait
mov
mov
ret
div
dec
(bad)
test
sti
push
mov
(bad)
(bad)
call
bound
mov
enter
xor
adc
sahf
std
sub
call
loopne
(bad)
(bad)
call
ds
mov
sbb
inc
inc
inc
adc
sub
popa
icebp
xlat
and
mov
inc
sbb
cs
and
outs
daa
pop
jmp
loope
inc
std
stos
adc
mov
dec
pop
adc
dec
call
inc
(bad)
call
(bad)
stc
enter
(bad)
aad
hlt
pop
sub
dec
data16
push
test
adc
clc
(bad)
call
push
sub
and
mov
mov
cmp
xchg
xchg
jo
(bad)
(bad)
(bad)
inc
out
cmc
pop
sub
mov
call
outs
jp
xchg
ins
sub
int3
sub
dec
pop
mov
dec
leave
adc
xchg
push
cmp
adc
jge
ins
pop
addr16
xchg
xchg
xor
and
cmp
cmps
cmc
(bad)
fdiv
pop
sbb
pop
icebp
movs
test
(bad)
jmp
jae
in
jns
fldcw
xlat
push
jmp
sbb
call
repnz
mov
fmul
loop
adc
lahf
int3
pop
test
xor
jg
(bad)
(bad)
(bad)
call
xchg
test
sbb
outs
mov
es
mov
or
and
(bad)
(bad)
push
and
out
lods
cld
pop
xchg
addr16
mov
adc
mov
or
into
xor
xchg
jo
mov
push
add
outs
ins
mov
(bad)
mov
(bad)
loopne
int
dec
push
retf
jns
imul
jo
(bad)
(bad)
(bad)
jmp
inc
or
dec
and
push
xor
(bad)
xor
aam
std
(bad)
out
jmp
xchg
xor
mov
jmp
idiv
in
cmp
pop
mov
(bad)
inc
xchg
lock
fild
adc
dec
jb
fistp
ror
shl
push
clc
shl
nop
and
(bad)
(bad)
inc
fcomp
stos
out
fild
ins
fild
clc
jge
fwait
jmp
sbb
mov
es
mov
mov
sub
jns
mul
out
std
arpl
pop
outs
movs
adc
(bad)
call
xchg
jg
mov
out
sub
pusha
mov
xor
xchg
or
test
xor
fcomip
(bad)
ficomp
addr16
adc
dec
ss
mov
xchg
sbb
(bad)
(bad)
inc
adc
jge
repz
inc
add
jmp
inc
push
icebp
sub
movs
je
hlt
push
(bad)
(bad)
(bad)
jmp
and
dec
movs
fsubr
push
test
addr16
add
xchg
je
and
cwde
or
mov
out
add
(bad)
(bad)
(bad)
jns
add
leave
loop
jge
aas
inc
jecxz
push
pop
retf
dec
ror
mov
aam
call
(bad)
pop
cld
sbb
xchg
(bad)
fild
sbb
dec
not
sahf
ds
push
push
adc
lahf
fwait
or
(bad)
js
lds
imul
retf
jmp
call
inc
retf
icebp
inc
mov
dec
pusha
or
mov
(bad)
(bad)
fistp
or
adc
sti
mov
dec
(bad)
out
push
mov
xchg
push
mov
xchg
push
in
xchg
sub
cmp
(bad)
push
mov
pop
icebp
daa
popf
mov
xchg
inc
outs
add
in
xchg
jmp
sar
pop
mov
pop
push
test
mov
cwde
loop
call
(bad)
jmp
dec
jp
mov
or
lahf
pop
mov
out
pop
lods
push
std
or
add
or
mov
mov
and
call
push
cli
(bad)
(bad)
(bad)
jnp
pop
das
mov
test
jle
lods
mov
jbe
into
xchg
out
out
int
test
out
call
adc
xchg
dec
je
and
(bad)
(bad)
(bad)
call
pop
pop
movs
pop
test
fmul
fwait
inc
inc
sub
stos
jmp
push
sbb
fwait
(bad)
(bad)
call
inc
pop
inc
test
ds
test
mov
je
fld
or
mul
(bad)
(bad)
(bad)
call
loopne
pop
push
ins
das
inc
and
dec
mov
pop
dec
cmp
fadd
(bad)
(bad)
(bad)
aas
call
stos
xor
inc
(bad)
mov
push
jmp
xchg
dec
leave
or
pop
add
out
imul
pop
(bad)
call
xchg
movs
fwait
xchg
cmp
mov
push
addr16
push
xchg
aam
fidiv
adc
(bad)
(bad)
(bad)
push
mov
push
pop
in
popf
test
jmp
inc
dec
pop
sub
xchg
pop
in
jmp
enter
mov
jp
mov
mov
(bad)
shl
outs
clc
call
xor
int3
adc
sbb
loope
pop
mov
mul
mov
aaa
std
scas
xor
push
pop
mov
pop
in
mov
aad
clc
mov
(bad)
dec
in
or
mov
or
sbb
or
test
sti
test
xchg
and
xor
push
pop
dec
fldenv
ds
rol
idiv
mov
push
inc
pusha
push
dec
outs
mov
dec
outs
fs
(bad)
dec
repz
shl
mov
mov
pushf
pop
cmp
movs
js
add
popa
cmps
(bad)
fldcw
fs
dec
xchg
mov
xor
or
ffree
sub
jmp
clc
jae
js
leave
jp
cmc
idiv
lods
cmp
add
int3
(bad)
(bad)
(bad)
dec
pop
pushf
ja
and
sbb
jp
sub
or
mov
xchg
ror
push
or
dec
dec
fs
outs
and
sbb
add
outs
mov
cmps
pop
cld
push
(bad)
(bad)
(bad)
(bad)
fisubr
test
mov
sti
je
mov
pop
and
ins
sbb
(bad)
pop
nop
jae
pop
adc
push
lds
mov
sar
dec
(bad)
ja
sub
lea
test
cmp
mov
daa
int
xchg
int3
add
push
or
push
jmp
aad
mov
push
clc
xor
inc
mov
(bad)
(bad)
(bad)
dec
pop
rol
inc
fnstcw
lods
xchg
ficom
ins
ret
cmc
daa
mov
xchg
mov
cmp
fcomp
cmp
repz
xchg
inc
and
add
jo
pusha
test
mov
div
xchg
sub
push
das
xchg
dec
add
sub
dec
lock
push
mov
add
dec
mov
and
(bad)
(bad)
inc
mov
cmp
sub
sahf
jns
push
pusha
std
adc
push
shr
in
fstp
mov
cmp
push
push
push
shr
mov
fsubr
mov
jmp
jbe
pushf
mov
jb
sahf
ret
stc
adc
popa
gs
mov
outs
call
fstp
das
shr
mov
xchg
mov
mov
xor
cmp
sub
mov
sub
aad
or
(bad)
or
(bad)
(bad)
(bad)
(bad)
cld
jmp
mov
inc
mov
leave
sbb
aam
ret
sub
mov
dec
mov
pop
jmp
inc
neg
int3
push
push
or
(bad)
(bad)
(bad)
call
pop
adc
pop
test
fisubr
dec
adc
and
hlt
(bad)
push
xor
adc
cmp
jno
ins
inc
cdq
or
pop
call
xchg
mov
pop
(bad)
(bad)
(bad)
dec
fsubr
dec
js
pop
(bad)
shl
stc
ror
mov
jmp
push
(bad)
call
outs
aaa
outs
pop
(bad)
in
add
add
cmp
(bad)
(bad)
mov
push
xor
aad
inc
(bad)
pushf
repz
mov
xor
mov
jmp
int
lock
mov
sbb
push
in
and
xchg
out
xor
ror
mov
or
or
in
sbb
mov
gs
bound
pop
movs
les
(bad)
(bad)
(bad)
jg
pop
mov
adc
cmp
jbe
dec
cmp
pop
rcr
pop
push
ja
sbb
(bad)
(bad)
inc
inc
loop
test
mov
push
xor
cmps
mov
fdiv
cmp
fld
mov
(bad)
(bad)
(bad)
dec
into
jns
mov
mov
push
shl
les
push
jl
or
jmp
(bad)
ds
push
xor
gs
js
push
inc
stos
sub
lea
jbe
test
mov
test
sti
jecxz
and
dec
mov
mov
inc
(bad)
(bad)
call
into
loopne
popf
nop
pop
imul
sub
jae
ret
aam
adc
(bad)
(bad)
(bad)
(bad)
mov
push
sbb
bound
xor
and
std
mov
xchg
out
ror
neg
sbb
add
xor
arpl
scas
mov
(bad)
(bad)
(bad)
(bad)
push
dec
mov
pop
imul
rol
sub
scas
neg
fidivr
mov
jp
(bad)
(bad)
jmp
mov
xor
mov
shl
cmp
int
cld
or
(bad)
push
(bad)
(bad)
(bad)
push
dec
addr16
cmp
mov
repz
movs
ins
xor
imul
(bad)
(bad)
mov
add
movs
in
xchg
sbb
out
shl
arpl
and
push
dec
sbb
jnp
sub
scas
xor
sbb
mov
xchg
or
(bad)
call
loopne
inc
(bad)
jmp
test
sbb
sbb
(bad)
(bad)
jg
cmp
mov
mov
fdiv
aad
(bad)
lods
das
cmp
pop
mov
mov
pop
cmc
(bad)
inc
mov
out
jmp
mov
mov
call
into
repz
clc
jmp
arpl
fincstp
aas
sbb
cmp
in
ret
mov
pop
or
and
inc
fstp
and
(bad)
(bad)
dec
sub
addr16
push
mov
and
adc
dec
sub
retf
out
bound
gs
out
addr16
inc
push
inc
pop
xchg
jb
mov
retf
leave
stos
ins
aaa
xlat
ror
xchg
(bad)
(bad)
(bad)
shl
push
mov
setnp
aam
pop
popf
loop
(bad)
(bad)
fild
jge
(bad)
xchg
neg
adc
xchg
(bad)
inc
or
lds
loop
push
rol
jb
sbb
retf
ret
stc
lahf
push
daa
adc
push
nop
les
scas
mov
inc
cmp
jecxz
cmovne
(bad)
call
test
scas
xchg
lahf
cmp
mov
and
int3
mov
adc
jl
xor
(bad)
(bad)
(bad)
(bad)
push
pop
loop
and
dec
(bad)
retf
jl
adc
ins
fsubr
push
pop
add
sub
or
(bad)
inc
add
addr16
fbld
jb
jns
outs
test
pop
lock
call
das
repz
pushf
call
cmp
xor
mov
pop
popa
stos
add
mov
shl
(bad)
(bad)
(bad)
(bad)
fidivr
(bad)
div
jl
mov
jo
out
fs
dec
test
xchg
pop
xor
in
and
in
fld
loopne
sbb
mov
cmp
fcomp
mov
mov
ins
jge
mov
repnz
in
adc
(bad)
(bad)
(bad)
(bad)
mov
push
adc
in
call
test
loop
adc
int
(bad)
(bad)
(bad)
(bad)
jge
mov
xchg
cs
test
inc
data16
std
xchg
cmp
std
push
xor
ret
scas
(bad)
jmp
push
xchg
arpl
mov
inc
test
rol
int
in
cdq
cmp
or
mov
inc
cmps
lock
jmp
inc
dec
xor
int3
repnz
ins
sub
out
loopne
and
inc
call
in
fwait
mov
repz
add
in
and
sbb
push
dec
cmp
mov
mov
push
inc
movs
(bad)
(bad)
(bad)
cmp
mov
call
jp
sub
push
sar
es
jecxz
jmp
(bad)
dec
or
mov
adc
mov
add
ss
out
adc
mov
test
or
sub
mov
jmp
movs
(bad)
jb
jbe
xchg
test
mov
out
jb
cmc
add
dec
jno
push
pop
and
(bad)
call
pop
outs
movs
adc
xor
inc
mov
xchg
sti
(bad)
icebp
int
mov
mov
mov
sbb
mov
ret
(bad)
push
cmp
shr
dec
sbb
(bad)
(bad)
jmp
in
stos
mov
popf
cmps
pop
push
imul
out
cmc
(bad)
rcr
(bad)
lods
rcr
mov
outs
dec
cmp
imul
adc
push
add
in
aaa
cld
jmp
push
push
push
(bad)
stos
aas
jbe
jo
mov
(bad)
(bad)
(bad)
jmp
mov
sbb
retf
call
mov
pushf
aaa
adc
loope
das
pop
mov
(bad)
(bad)
(bad)
dec
sub
not
shl
mov
xchg
dec
mov
dec
in
repz
(bad)
push
mov
sub
mov
stos
push
mov
dec
hlt
enter
xor
(bad)
(bad)
out
sub
or
jmp
int3
and
movs
les
mov
cmps
daa
ficom
idiv
(bad)
call
sbb
mov
and
loop
les
cs
or
mov
push
cmc
je
jmp
cmc
xchg
fsubr
mov
or
es
fidiv
sbb
push
xlat
cmp
adc
(bad)
(bad)
dec
pushf
sbb
push
icebp
bound
adc
push
mov
repnz
daa
(bad)
mov
xchg
and
push
push
push
mov
jmp
dec
scas
enter
mov
dec
mov
and
mov
sti
mov
and
jmp
jns
sbb
test
js
fmul
add
dec
stos
pop
or
sbb
(bad)
(bad)
push
(bad)
hlt
jle
sbb
out
xlat
sub
not
xlat
aad
xor
enter
push
jmp
ror
(bad)
fxch
xor
adc
std
jecxz
add
call
aad
xor
pop
fnstcw
or
lods
pop
sbb
sbb
dec
cmp
stos
(bad)
(bad)
inc
imul
jmp
mov
repz
idiv
(bad)
jmp
xchg
inc
adc
sub
or
arpl
fcomip
neg
(bad)
(bad)
push
cld
adc
imul
push
loopne
cmp
jge
inc
aas
sub
push
pop
xor
mov
push
fwait
sub
stos
push
sbb
cli
(bad)
jmp
pop
movs
(bad)
(bad)
(bad)
inc
sbb
fnclex
mov
xlat
mov
cli
dec
push
std
inc
cmc
adc
jecxz
xchg
(bad)
out
clc
retf
sahf
or
add
inc
push
aas
xchg
pop
in
dec
mov
(bad)
in
(bad)
push
ret
pop
retf
and
stos
mov
or
jmp
(bad)
jmp
xchg
sub
mov
push
xchg
adc
rcl
call
test
(bad)
adc
jg
stos
xchg
cs
nop
mov
(bad)
jmp
and
icebp
dec
mov
popf
sbb
int3
call
mov
(bad)
(bad)
jmp
xor
pop
test
push
adc
mov
fistp
or
cli
mov
jecxz
mov
shl
scas
add
es
mov
scas
pusha
stos
inc
add
jp
(bad)
(bad)
(bad)
jmp
adc
mov
aad
mov
loopne
xlat
outs
clc
das
pop
dec
std
mov
jp
(bad)
(bad)
(bad)
(bad)
inc
rcl
test
in
test
shr
cld
adc
push
add
xor
dec
sbb
pushf
pmaddwd
pop
repz
jb
jge
xor
stos
std
call
or
add
cli
adc
out
lods
mov
fcomip
pop
or
cdq
movs
test
or
and
movs
dec
fcmovnb
jl
shr
xchg
gs
add
add
adc
mov
cmp
(bad)
jmp
dec
push
lods
mov
daa
add
mov
sbb
dec
mov
adc
aam
(bad)
mov
jmp
mov
add
psrlq
jns
push
mov
sub
(bad)
(bad)
call
cmp
xor
test
cmp
movs
aaa
pop
ds
dec
mov
repnz
xchg
inc
cld
out
fcom
into
ret
pop
aaa
xor
jmp
(bad)
(bad)
(bad)
add
push
popf
idiv
nop
jnp
jge
aas
adc
pop
pop
imul
(bad)
mov
sar
movs
mov
inc
or
in
mov
call
daa
cdq
test
xlat
jmp
shr
or
mov
mov
(bad)
call
dec
jns
xor
(bad)
jmp
clc
or
popf
ficom
(bad)
(bad)
(bad)
(bad)
ds
adc
add
pop
(bad)
xor
pop
add
or
int
xchg
add
inc
jmp
jp
in
mov
lods
ins
sbb
mov
add
(bad)
frstor
adc
(bad)
(bad)
(bad)
dec
popf
ret
jns
adc
hlt
add
push
cbw
add
(bad)
mov
xlat
pop
xor
call
mov
xchg
jle
jno
jmp
cmp
cmp
pop
movs
(bad)
(bad)
(bad)
call
pop
or
push
clc
test
and
sub
or
das
aas
xor
int
mov
(bad)
aam
jmp
mov
mov
pop
and
in
jmp
jmp
push
in
popf
cmps
scas
or
movs
std
outs
cli
inc
dec
in
aaa
out
mov
out
jb
dec
pop
out
cmp
lods
push
mov
ja
(bad)
mov
ror
cmp
mov
jnp
hlt
mov
mov
(bad)
adc
leave
mov
xor
out
test
jbe
add
call
outs
mov
push
icebp
push
ror
jae
movs
mov
mov
out
push
jl
push
and
cmp
(bad)
call
jmp
out
jmp
popa
icebp
in
mov
(bad)
(bad)
mov
push
dec
mov
mov
or
mov
out
mov
xor
(bad)
(bad)
mov
and
sub
jns
leave
popf
imul
sar
(bad)
inc
sbb
aad
bound
std
dec
xor
sub
sub
(bad)
(bad)
jmp
ss
inc
sbb
movs
push
sbb
shl
popa
mov
pop
(bad)
dec
and
cwde
cmp
push
scas
cmp
(bad)
jg
aas
cwde
mov
jecxz
sar
mov
xchg
ror
sahf
cld
mov
jns
int3
cld
sub
(bad)
(bad)
call
sub
popa
dec
push
mov
test
leave
ja
pop
cdq
jecxz
and
push
fidivr
dec
inc
clc
mov
mov
mov
xchg
hlt
fcmovnbe
xchg
je
adc
xchg
outs
or
cli
(bad)
(bad)
jmp
mov
and
and
cmps
xchg
inc
pushf
pop
icebp
jns
jo
loope
imul
ret
jmp
xor
addr16
pop
mov
xchg
and
jp
cmps
push
addr16
(bad)
call
std
in
dec
scas
sub
sbb
xchg
scas
cmp
repnz
sar
push
fcom
mov
lea
leave
fsub
jns
and
ror
retf
push
sbb
(bad)
(bad)
(bad)
call
xlat
sub
inc
xchg
dec
xchg
adc
and
cmp
jg
adc
pop
push
shr
js
dec
add
push
lds
in
sub
sar
mov
std
mov
(bad)
(bad)
push
jbe
xchg
jnp
clc
in
jo
sub
pop
in
hlt
test
inc
cli
mov
(bad)
(bad)
(bad)
jmp
mov
xor
cs
fidivr
sub
push
adc
add
(bad)
call
xor
sbb
cmp
imul
lods
ja
(bad)
(bad)
(bad)
inc
mov
adc
sbb
test
repnz
aad
(bad)
mov
inc
dec
sbb
sbb
(bad)
(bad)
(bad)
(bad)
mov
jp
inc
(bad)
outs
mov
fstp
and
mov
outs
adc
jmp
jle
pop
cmp
fisubr
xor
in
push
adc
mov
mov
xor
(bad)
(bad)
inc
sbb
push
jmp
xlat
scas
cs
add
adc
xchg
push
sub
movs
push
sahf
iret
clc
xor
fistp
cmpxchg
test
scas
xchg
icebp
adc
and
cld
mov
(bad)
(bad)
(bad)
dec
inc
jbe
inc
xchg
jae
xor
dec
mov
xor
inc
push
jmp
dec
fwait
pop
call
(bad)
xchg
xor
(bad)
imul
(bad)
push
jae
push
push
jle
ins
and
(bad)
aam
iret
out
inc
mov
sbb
(bad)
jl
and
mov
movs
test
sub
cmp
scas
ins
mov
(bad)
sbb
dec
mov
adc
addr16
cmp
jecxz
push
mov
outs
and
jl
ja
(bad)
adc
push
data16
in
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
jg
imul
mov
mov
clc
pop
xchg
inc
repz
hlt
xchg
(bad)
(bad)
call
int3
or
fiadd
arpl
cmp
cmp
cld
push
arpl
(bad)
(bad)
jmp
mov
sbb
jmp
les
jmp
bound
inc
scas
cmp
inc
sub
cmps
call
pop
mov
int3
test
scas
fucomp
mul
xor
push
or
xor
js
(bad)
inc
(bad)
(bad)
jmp
inc
jbe
add
pop
lods
retf
cs
loopne
mov
sahf
inc
(bad)
(bad)
(bad)
jmp
loop
push
movs
mov
and
cwde
xchg
ret
fidivr
bound
cmp
push
mov
xor
dec
imul
push
pushf
addr16
jge
sahf
enter
lahf
pop
sub
inc
jmp
lock
fldenv
mov
popf
xchg
fsubr
cmp
sbb
inc
xor
xchg
sbb
imul
sub
enter
push
push
enter
call
call
pop
push
mov
je
pop
bnd
sbb
ins
bound
jae
inc
(bad)
(bad)
(bad)
jmp
out
sbb
dec
js
jb
cmp
das
jnp
cwde
nop
sahf
scas
cmps
lods
and
or
ds
(bad)
out
cli
pushf
push
dec
les
push
nop
sbb
xor
push
push
xchg
repz
(bad)
(bad)
(bad)
jmp
pop
out
ja
lahf
mov
adc
ret
(bad)
out
push
lods
iret
lds
push
iret
or
fidivr
adc
(bad)
jle
mov
(bad)
shrd
in
xchg
xchg
xlat
and
mov
pcmpeqb
and
or
ins
outs
lods
add
(bad)
(bad)
jmp
push
sub
jge
and
(bad)
(bad)
(bad)
mov
test
adc
dec
or
sbb
inc
jne
mov
mov
(bad)
(bad)
(bad)
call
xchg
sub
xlat
(bad)
addr16
outs
sti
lock
mov
lock
jl
mov
cmp
data16
mov
gs
mov
nop
arpl
or
dec
je
(bad)
(bad)
(bad)
dec
repnz
ja
ja
aad
stos
or
hlt
clc
push
fcmovb
out
jg
out
sub
or
lock
js
(bad)
(bad)
call
xchg
loopne
or
jno
push
mov
shr
pop
cmc
xchg
dec
mov
and
or
pushf
in
pop
add
xor
je
sbb
(bad)
call
test
(bad)
cmp
lock
pop
das
stc
or
jl
fimul
sbb
(bad)
(bad)
dec
add
into
(bad)
push
mov
xchg
push
ss
scas
xor
jge
mov
inc
dec
(bad)
adc
and
jmp
(bad)
(bad)
(bad)
call
jmp
clc
inc
ins
xor
xor
daa
cmp
sbb
loopne
jne
inc
ds
hlt
popa
jmp
mov
ror
cs
cdq
add
add
(bad)
dec
mov
scas
(bad)
(bad)
(bad)
jmp
pop
cmp
jge
adc
add
popf
push
icebp
pop
sbb
jmp
fnstenv
jns
dec
ret
cld
ja
(bad)
pop
rcl
pop
jmp
xor
pop
mov
call
mov
sub
fmul
daa
rol
sbb
jl
test
(bad)
(bad)
(bad)
mov
sub
and
mov
out
mov
xor
pop
loopne
add
call
js
inc
std
push
or
or
fs
(bad)
jg
jmp
arpl
loop
jmp
cmp
ins
jle
xor
dec
cmp
or
(bad)
(bad)
call
loopne
mov
(bad)
stos
repnz
dec
aam
jmp
pop
aaa
dec
rcr
mov
(bad)
(bad)
jmp
jmp
add
mov
sbb
push
ja
push
pop
adc
(bad)
(bad)
(bad)
(bad)
out
dec
sbb
int3
dec
mov
mov
mov
es
gs
hlt
cmc
pop
cmp
loop
retfw
(bad)
push
jne
ror
add
fbstp
scas
data16
call
jmp
pop
xchg
ss
jg
mov
fldcw
cs
push
test
lods
lds
repnz
add
dec
xor
iret
pop
mov
sbb
loop
retf
mov
adc
pusha
or
call
cmps
shl
xchg
jecxz
push
retf
cwde
jae
or
dec
ror
(bad)
(bad)
(bad)
jmp
and
fcmove
adc
shl
pop
lods
xor
sbb
icebp
call
clc
or
shl
dec
push
push
(bad)
push
xchg
sub
mov
(bad)
inc
mov
sbb
push
sbb
(bad)
jmp
sub
xchg
ror
test
stos
dec
test
les
or
(bad)
(bad)
push
xchg
retf
test
xchg
ds
pop
pop
cmp
(bad)
(bad)
jmp
sar
xor
adc
dec
and
fs
fdiv
cmps
sub
add
fs
(bad)
(bad)
(bad)
(bad)
mov
xchg
sbb
push
or
pop
or
add
push
dec
js
in
mov
jle
push
dec
push
scas
jmp
jno
movs
dec
mov
clc
mov
push
fbstp
cmp
sbb
cmp
fwait
int
fdivr
ret
(bad)
(bad)
(bad)
inc
fbstp
in
scas
jns
mov
stos
stos
push
stos
cmp
inc
add
lock
mov
(bad)
(bad)
jmp
(bad)
das
jmp
popf
enter
sub
sti
popa
(bad)
fst
and
sbb
icebp
js
(bad)
(bad)
(bad)
inc
dec
jb
sbb
in
(bad)
popa
mov
jmp
dec
mov
xor
fistp
push
(bad)
(bad)
call
pop
jne
data16
mov
jb
xlat
xchg
pop
add
xor
sub
(bad)
inc
mov
sub
sub
inc
xchg
mov
cld
(bad)
jg
add
stos
stc
jnp
jne
pop
or
test
mov
ins
xchg
dec
(bad)
(bad)
(bad)
fist
add
mov
cmp
push
dec
pop
add
fcmovnb
fwait
mov
(bad)
inc
pop
and
inc
lahf
sub
mov
xchg
int
mov
jmp
pop
or
(bad)
add
(bad)
(bad)
dec
and
pop
loope
adc
sub
sbb
fst
int
iret
add
mov
out
clc
(bad)
inc
mov
scas
mov
retf
enter
mov
push
push
sbb
(bad)
(bad)
(bad)
dec
inc
push
push
neg
adc
pusha
mov
add
mov
jmp
cmp
jnp
cmc
movs
in
inc
dec
popa
push
(bad)
ret
daa
(bad)
(bad)
cmp
iret
loope
and
cld
(bad)
dec
test
push
push
test
push
dec
data16
(bad)
(bad)
jg
jge
mov
dec
aaa
jg
pop
je
outs
pop
cld
jnp
push
push
cdq
(bad)
push
in
aas
inc
(bad)
(bad)
(bad)
call
mov
mov
shl
mov
jb
sbb
adc
(bad)
dec
fmulp
pop
imul
nop
adc
or
(bad)
xchg
test
adc
and
xlat
push
and
mov
sbb
and
jg
and
inc
jbe
(bad)
(bad)
mov
sar
xor
or
arpl
jg
std
and
fldenv
idiv
(bad)
(bad)
dec
dec
(bad)
sbb
mov
repz
push
fsubp
fstp
dec
mov
cmp
jmp
pop
add
bound
outs
js
sbb
mov
(bad)
(bad)
push
fstp
or
add
leave
or
xchg
loopne
int
cmp
jmp
jae
push
cli
cmp
out
add
(bad)
retf
cmp
xor
jp
aas
dec
dec
clc
(bad)
jl
nop
or
ss
shr
dec
movs
mov
(bad)
jmp
mov
dec
jmp
jns
cmps
push
add
(bad)
(bad)
call
and
jle
mov
mov
dec
into
scas
pop
idiv
ss
mov
jno
push
lea
sub
(bad)
(bad)
push
cmp
fisttp
loope
xchg
pop
lods
mov
xlat
arpl
(bad)
cli
push
loope
inc
(bad)
(bad)
jg
sbb
pop
ret
sar
je
dec
xchg
push
cmc
es
pop
ins
dec
nop
adc
dec
sbb
xor
stos
fnstcw
(bad)
(bad)
(bad)
call
xchg
push
dec
sbb
jmp
push
popf
imul
jno
retf
push
cmp
dec
adc
jns
pusha
push
pushf
pusha
fs
nop
push
mov
lock
call
inc
dec
addr16
mov
mov
mov
leave
loopne
or
mov
lods
(bad)
(bad)
(bad)
fild
add
ret
jl
xchg
das
jno
das
data16
(bad)
mov
js
mov
(bad)
(bad)
jmp
into
call
xor
arpl
in
call
aaa
or
sahf
(bad)
call
rcl
xor
cmp
(bad)
jmp
lods
xchg
fsub
pusha
cmp
push
fdivr
mov
mov
fisub
gs
ss
and
imul
das
sar
sbb
xor
and
dec
stc
(bad)
cld
and
(bad)
call
xchg
ins
(bad)
sbb
cmc
and
(bad)
(bad)
call
xor
xchg
mov
mov
pop
jnp
mov
mov
jmp
xchg
sub
and
inc
add
xchg
jae
out
out
cmp
shr
pop
hlt
outs
adc
mov
pop
std
jecxz
dec
out
clc
mov
cmp
cmp
js
retf
idiv
call
dec
xor
addr16
fld
aad
cmc
bound
pop
jns
cli
call
pop
inc
cdq
jg
(bad)
(bad)
fcomp
sbb
or
(bad)
mov
fs
xchg
or
loope
clc
mov
(bad)
(bad)
inc
mov
mov
cmp
scas
xor
gs
pop
aam
test
loop
fwait
rcl
ret
(bad)
(bad)
out
std
mov
and
or
xchg
inc
mov
sar
addr16
or
mov
xor
test
xchg
cmovg
(bad)
call
imul
and
aaa
sbb
lahf
add
pop
and
mov
adc
sub
jg
mov
outs
iret
mov
arpl
icebp
adc
pushf
push
and
pop
dec
mov
fwait
lahf
mov
adc
push
(bad)
(bad)
(bad)
(bad)
cld
cmc
lds
fwait
test
rol
lea
sub
and
test
(bad)
adc
(bad)
jg
mov
jp
call
or
adc
fs
pop
icebp
mov
adc
in
loope
loopne
pop
and
jle
int3
repnz
inc
inc
pop
repz
fs
imul
mov
inc
xor
sahf
sbb
ins
adc
popf
dec
sbb
cmps
push
ins
(bad)
das
(bad)
adc
inc
push
add
xchg
cmp
(bad)
(bad)
jge
sub
mov
(bad)
push
stos
in
push
lock
jmp
shl
clc
inc
aaa
(bad)
(bad)
(bad)
call
js
cmp
pop
outs
call
pop
cmps
repz
movs
sahf
inc
mov
push
dec
mov
fcom
xor
aas
push
adc
(bad)
(bad)
push
fisttp
ss
ror
pop
repnz
push
ins
pop
fdivr
jns
(bad)
jmp
add
pusha
enter
mov
jl
(bad)
(bad)
dec
pop
ins
cmc
mov
stos
inc
xor
test
out
sbb
enter
stos
data16
(bad)
(bad)
(bad)
mov
xchg
sub
es
inc
sbb
inc
xchg
in
adc
push
pop
push
(bad)
(bad)
(bad)
inc
push
out
sub
pop
sub
sbb
inc
outs
xchg
loopne
pop
(bad)
mov
xchg
sub
xchg
jb
repnz
adc
inc
inc
cmc
mov
jns
push
in
shl
(bad)
(bad)
push
or
mov
lock
pop
push
(bad)
mov
fistp
call
sub
loopne
xchg
add
inc
into
dec
xchg
cmp
ins
test
jns
aaa
jp
outs
cmp
xchg
movs
imul
(bad)
push
sub
sets
daa
fnsave
(bad)
dec
add
fist
fs
pop
add
call
sbb
adc
add
jbe
sti
retf
jno
aas
sbb
(bad)
(bad)
dec
ficomp
shl
push
ror
push
cmps
jb
sub
and
(bad)
jmp
stc
add
int3
aam
cld
das
scas
add
push
test
(bad)
in
and
(bad)
(bad)
jmp
xchg
pop
dec
jno
(bad)
jo
inc
push
pop
or
cmp
enter
ins
jae
rol
inc
cdq
mov
ins
clc
(bad)
sti
cmps
cmp
mov
push
mov
xor
jle
bound
js
jg
and
test
xor
xchg
sbb
sbb
(bad)
(bad)
(bad)
dec
outs
and
add
pusha
(bad)
and
push
mov
jmp
adc
pop
std
(bad)
cmp
mov
sbb
scas
mov
mov
ins
outs
dec
rol
push
(bad)
xchg
in
xchg
sbb
jo
stos
mov
jns
push
hlt
jl
les
hlt
test
dec
loop
pop
lock
jb
jmp
cmp
add
hlt
pop
div
jmp
(bad)
push
into
jecxz
sub
cmps
enter
fs
(bad)
(bad)
(bad)
jmp
jecxz
or
sbb
fiadd
sbb
add
out
dec
dec
mov
jle
push
mov
mov
aad
fmul
jle
jle
pop
mov
mov
rol
retf
not
imul
push
out
pop
fdivr
in
push
sub
pop
mov
(bad)
call
pop
rol
call
and
or
jns
pop
in
dec
(bad)
(bad)
(bad)
push
or
sub
test
xchg
sar
aad
fsub
jno
aas
ret
push
cdq
inc
sbb
out
fcomp
fstp
dec
in
mov
push
loopne
sub
lods
xchg
cmps
push
mov
movs
add
fld
lea
leave
mov
xor
push
int
push
pop
push
cmp
(bad)
adc
call
lahf
mov
cmp
sbb
movs
jmp
mov
in
mov
rcl
call
call
cmp
(bad)
(bad)
(bad)
(bad)
push
in
xchg
cmps
or
mov
pop
add
jmp
(bad)
mov
(bad)
(bad)
call
pop
movs
stc
push
sar
stos
shl
repz
mov
adc
(bad)
(bad)
(bad)
jl
retf
sar
xchg
xchg
dec
push
ja
(bad)
fwait
neg
das
mov
add
sub
test
out
outs
(bad)
xor
(bad)
lods
xchg
pop
je
loope
shl
stos
fcom
(bad)
inc
into
and
cld
fld
mov
fisttp
jp
test
push
loopne
in
lahf
imul
xor
sbb
xchg
fs
sbb
leave
add
jbe
(bad)
(bad)
(bad)
call
and
or
mov
fld
jnp
out
cmp
ins
sar
cmp
gs
adc
push
jge
jns
mov
sar
(bad)
(bad)
(bad)
(bad)
jmp
fnstcw
lock
jecxz
addr16
loopne
aad
xor
call
call
in
push
(bad)
ss
mov
(bad)
xchg
pusha
push
rcr
loop
loope
mov
push
leave
in
ret
and
push
sub
test
out
clc
mov
sbb
enter
loopne
std
(bad)
(bad)
jmp
inc
xor
fs
jle
data16
fiadd
out
scas
inc
(bad)
out
cdq
dec
xchg
lods
jnp
adc
stc
xor
mov
(bad)
(bad)
jg
and
inc
mov
stos
popf
dec
test
ret
inc
dec
ror
adc
imul
jbe
sub
cli
cld
je
dec
cld
add
sub
cmp
and
dec
mov
push
mov
stos
(bad)
cmps
push
pop
dec
mov
mov
add
mov
ins
push
scas
sar
out
sbb
mov
stos
sbb
cmp
(bad)
mov
call
push
and
ret
dec
js
sbb
cmps
push
add
mov
pop
mov
add
xchg
xchg
sub
mov
outs
mov
loopne
push
enter
or
pushf
xchg
push
mov
mov
add
es
push
aaa
cld
in
je
and
mov
(bad)
call
mov
jmp
inc
das
test
rsm
sub
cmp
(bad)
(bad)
jnp
fsub
cs
xchg
and
aam
jnp
and
mov
lahf
in
jmp
dec
mov
lds
and
(bad)
dec
ss
push
push
mov
sub
fild
fdiv
mov
shr
out
xor
ror
jecxz
cmp
dec
mov
call
and
repnz
dec
pop
mov
repz
ret
pop
xchg
cmp
addr16
stos
ret
lods
cmp
out
leave
jb
or
call
push
xchg
addr16
add
ins
cdq
jmp
cmc
xchg
and
inc
int3
(bad)
(bad)
(bad)
inc
int
packuswb
push
imul
adc
cmp
fwait
or
retf
xor
(bad)
(bad)
push
cmps
add
test
mov
mov
daa
(bad)
movs
pop
push
pop
in
jmp
(bad)
(bad)
(bad)
jmp
add
dec
dec
hlt
lds
pop
popa
jle
and
sbb
add
inc
aad
(bad)
(bad)
call
mov
inc
leave
add
pop
cmc
jle
xchg
ret
cmc
aas
aaa
(bad)
fsub
scas
and
jmp
xor
add
(bad)
popa
cdq
scas
test
adc
mov
add
xor
push
xchg
stos
jne
xchg
fucomi
clc
call
xor
xor
xchg
(bad)
jmp
jl
fidivr
xchg
mov
int
(bad)
(bad)
jmp
mov
dec
scas
or
inc
xchg
mov
adc
dec
ror
jbe
sbb
ficom
push
or
(bad)
(bad)
(bad)
(bad)
cmp
dec
push
push
ret
cwde
sub
rep
adc
cmp
jle
pop
pop
popf
repz
cs
loop
sub
dec
and
inc
pop
mov
cmp
adc
gs
(bad)
(bad)
jmp
and
push
jne
or
or
xor
lods
sbb
test
mov
sub
mov
mov
ret
stos
(bad)
(bad)
(bad)
jmp
cmps
add
stos
sbb
jmp
scas
scas
dec
push
imul
(bad)
(bad)
jmp
sub
sub
sub
retf
mov
loop
test
fwait
push
(bad)
(bad)
(bad)
call
js
add
lods
xchg
push
popf
add
ins
int3
mul
pop
movs
enter
(bad)
(bad)
call
stc
sub
jb
or
fcomp
loop
mov
mov
hlt
jns
mov
jmp
rol
or
int3
xor
js
repz
test
mov
fbld
out
push
gs
ins
repnz
xchg
mov
test
add
xchg
and
jmp
cmp
jnp
mov
xor
sbb
jmp
xor
push
mov
jp
cmp
call
std
jno
jns
div
push
lds
loopne
mov
fdivr
hlt
js
comiss
das
rcl
(bad)
fisubr
cmp
inc
(bad)
(bad)
(bad)
push
mov
es
or
cwde
dec
mov
lods
sub
ins
sbb
(bad)
(bad)
cwde
sub
sbb
pop
inc
outs
sbb
lahf
mov
(bad)
jmp
fs
cmp
cmp
test
or
fisubr
inc
add
(bad)
call
cmps
add
inc
fnstenv
arpl
adc
sahf
fwait
icebp
and
inc
(bad)
jg
hlt
or
fs
cmp
sub
(bad)
(bad)
fbld
xchg
je
mov
nop
pop
mov
sub
jne
nop
add
(bad)
(bad)
dec
xchg
sub
fisubr
dec
loope
inc
push
test
lods
(bad)
add
dec
or
sbb
adc
mov
add
inc
lds
sbb
jmp
sub
and
xchg
push
cwde
out
jge
add
pmaxsw
mov
pop
outs
cmp
(bad)
data16
push
xor
jno
and
mov
push
nop
sub
loope
inc
call
jae
push
sar
mov
out
cli
mov
mov
retf
cs
(bad)
(bad)
jg
and
sbb
sub
mov
cmc
jae
lods
retf
in
hlt
jl
pop
out
arpl
mov
(bad)
(bad)
jmp
or
add
rol
test
dec
lods
icebp
pushf
push
movs
shl
jb
mov
in
icebp
and
jmp
(bad)
call
mov
ret
mov
xchg
pop
cmp
cli
call
retf
lods
dec
push
mov
je
and
sub
call
cmp
ss
adc
ficom
inc
sbb
pop
lock
dec
(bad)
mov
xchg
(bad)
adc
push
pop
inc
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
aad
and
sub
inc
inc
loope
mov
sbb
in
add
adc
mov
inc
bnd
xor
arpl
aad
test
(bad)
call
push
aaa
pop
mov
adc
pop
or
ror
in
push
mov
rol
data16
jg
(bad)
call
mov
sbb
dec
aam
leave
sti
mov
add
sbb
icebp
sub
push
ja
xor
inc
dec
or
test
int3
push
jmp
clc
arpl
pop
jo
pop
or
jmp
adc
push
mov
mov
(bad)
push
dec
xor
imul
fisubr
or
pop
or
enter
(bad)
(bad)
mov
xor
adc
in
test
push
push
pop
bound
(bad)
mov
enter
sahf
sub
pop
out
cmp
xchg
push
das
(bad)
xor
leave
and
rcr
jmp
hlt
(bad)
fidivr
sub
pusha
mov
sub
adc
mov
mov
lods
push
pop
mov
jae
push
xlat
test
imul
ins
imul
sub
cdq
dec
push
icebp
jmp
scas
push
fld
cdq
(bad)
call
callw
call
mov
icebp
addr16
add
sub
int
out
mov
sub
push
hlt
jle
cli
sub
cdq
sbb
jns
ret
dec
mov
(bad)
(bad)
dec
mov
xchg
jmp
xor
adc
push
cmp
sub
aad
(bad)
(bad)
(bad)
(bad)
cld
jmp
push
mov
lds
pop
out
stc
sub
and
jno
dec
or
inc
pop
cld
std
pushf
jo
lea
lahf
retf
cwde
(bad)
or
(bad)
jl
(bad)
(bad)
(bad)
jmp
test
push
sbb
sub
outs
xor
ja
sub
jp
sub
push
int3
lock
dec
mov
mov
pop
mov
ret
dec
loopne
(bad)
sbb
mov
sbb
push
popf
cmp
(bad)
out
mov
cwde
jp
mov
sbb
aad
push
add
pop
(bad)
(bad)
(bad)
call
clc
mov
iret
jb
xchg
fistp
iret
or
in
push
cmp
leave
mov
jo
ins
loope
cld
(bad)
(bad)
(bad)
aas
mov
dec
pop
cs
pop
sub
jo
pop
jb
jnp
js
stos
pop
sub
mov
add
push
adc
clc
push
(bad)
(bad)
(bad)
mov
mov
dec
hlt
pop
addr16
dec
sahf
repnz
mov
test
push
cmps
inc
xchg
jbe
mov
(bad)
mov
jge
int3
repnz
repz
imul
ret
mov
jge
dec
enter
in
in
jb
mov
add
shl
lea
pop
lahf
test
(bad)
push
(bad)
cmps
cmps
in
adc
scas
mov
mov
xchg
xchg
(bad)
cvtpi2ps
pop
fidiv
outs
(bad)
call
dec
ins
pusha
inc
inc
inc
(bad)
jnp
int
ret
call
lock
dec
jge
arpl
div
xchg
jge
inc
xchg
xlat
mov
repnz
or
mov
add
(bad)
(bad)
(bad)
std
sbb
sub
jne
sbb
fdiv
ret
movs
add
idiv
(bad)
(bad)
(bad)
jg
call
xor
mov
imul
add
inc
xchg
mov
cmps
aas
addr16
(bad)
(bad)
mov
gs
lock
mov
outs
xor
sub
lea
(bad)
(bad)
(bad)
inc
mov
neg
push
mov
cdq
push
inc
sbb
test
fiadd
in
scas
outs
jge
(bad)
(bad)
(bad)
std
or
fmul
std
daa
sub
adc
sub
jae
sbb
sar
inc
adc
adc
jge
mov
das
cmp
mov
and
mov
ins
pushf
and
push
dec
(bad)
(bad)
(bad)
(bad)
cmp
cmps
arpl
inc
shl
clc
cmp
push
int
arpl
adc
pop
inc
aam
xor
(bad)
(bad)
mov
jecxz
mov
jl
je
in
js
nop
mov
mov
pop
aas
loope
push
cmp
sbb
mov
call
mov
mov
push
mov
(bad)
mov
inc
xor
push
mov
(bad)
jno
mov
(bad)
lock
push
and
push
or
sub
add
and
(bad)
sbb
sbb
pusha
dec
sub
mov
pop
out
mov
shl
inc
mov
push
pop
cmp
or
cmps
add
(bad)
(bad)
(bad)
jmp
sub
xchg
pop
(bad)
call
lahf
dec
jno
sysexit
call
jle
pushf
jmp
push
cld
inc
or
ret
int
mov
push
test
jno
pop
je
inc
and
(bad)
(bad)
jmp
sub
inc
cmps
fs
sbb
pop
mov
mov
out
xor
mov
das
xchg
pop
mov
ss
adc
inc
test
loopne
call
aam
sbb
push
add
das
add
dec
jp
jmp
call
xor
push
stc
mov
(bad)
jg
call
xor
daa
cmp
outs
imul
fistp
(bad)
(bad)
inc
mov
push
and
push
xchg
sahf
cmp
js
fcom
ss
scas
or
mov
mov
push
popf
icebp
pop
add
or
and
pop
cmp
cmp
lods
xor
push
(bad)
bound
mov
popa
shl
jmp
jmp
(bad)
dec
fld
pop
cmp
shl
xchg
adc
and
xchg
xor
cld
cwde
in
jge
rol
(bad)
(bad)
(bad)
call
push
jg
or
or
xchg
adc
sar
idiv
fild
add
daa
jge
jge
(bad)
(bad)
(bad)
call
or
or
ja
jge
mov
mov
jmp
and
and
dec
pop
int3
and
xchg
jnp
add
sub
mov
retf
add
popa
push
sub
pusha
out
lea
dec
add
push
dec
pop
push
jne
xchg
js
repnz
push
cwde
or
idiv
(bad)
(bad)
(bad)
cmp
ret
xchg
sub
cs
ja
ror
jp
(bad)
outs
push
aam
(bad)
(bad)
(bad)
jmp
jbe
scas
add
mov
ja
icebp
push
jmp
call
dec
dec
leave
ja
jecxz
(bad)
(bad)
jmp
icebp
pop
sub
jmp
(bad)
add
or
pop
inc
xor
sar
push
ins
sub
add
cmp
shl
xor
sub
loope
(bad)
jge
jmp
test
jecxz
jge
jecxz
sbb
(bad)
call
jmp
xchg
mov
out
retf
aaa
(bad)
inc
out
fnstsw
xchg
into
inc
cmp
add
out
out
out
push
mov
call
push
leave
pop
(bad)
es
ins
mov
pushf
repz
bound
sbb
call
div
pusha
ss
xchg
inc
cmp
jne
(bad)
(bad)
jmp
adc
arpl
movs
inc
enter
pop
and
enter
sub
pop
jp
ins
xchg
imul
xchg
push
mov
pop
js
xchg
mov
inc
and
stos
out
in
ins
adc
aad
(bad)
mov
je
je
push
clc
pop
retf
cmp
jbe
mov
(bad)
cmc
sar
(bad)
(bad)
inc
(bad)
stos
sub
call
test
cli
cld
in
sahf
out
mov
call
fmul
mov
daa
xchg
adc
inc
mov
mov
jle
(bad)
(bad)
call
and
push
inc
dec
(bad)
lahf
mov
sbb
imul
in
fistp
jg
pop
cld
push
mov
xor
push
mov
fs
clc
mov
idiv
or
fwait
and
pop
sbb
fs
daa
ins
dec
iret
xchg
mov
clc
pop
add
cli
rcr
fdivr
hlt
rcl
sbb
fisubr
(bad)
jg
lock
mov
(bad)
pop
push
adc
jb
mov
ins
(bad)
(bad)
(bad)
jmp
jb
rcr
xchg
call
in
mov
and
js
mov
mov
int
sub
sahf
pop
call
vpcomw
(bad)
jge
mov
outs
or
jg
lds
(bad)
(bad)
inc
push
pop
pushf
push
push
mov
movs
pusha
das
in
lods
mov
ja
xchg
add
clc
or
(bad)
(bad)
(bad)
out
dec
mov
ss
fst
mov
or
(bad)
mov
out
retf
xchg
jae
(bad)
and
sti
retf
push
sub
xor
(bad)
(bad)
(bad)
fisub
push
aad
cmp
or
lds
fwait
stc
mov
in
push
test
(bad)
(bad)
call
mov
fdivr
in
ror
call
adc
sbb
inc
pushf
inc
pushf
enter
ret
(bad)
(bad)
jmp
shl
pop
pushf
cmp
add
bound
je
or
(bad)
mov
fs
jle
mov
push
and
and
xchg
out
or
(bad)
(bad)
(bad)
call
into
mov
shl
cmp
xor
mov
jne
shr
scas
sub
retf
icebp
cli
(bad)
(bad)
push
sub
pop
call
sub
xor
retf
sbb
jmp
js
adc
dec
in
movs
lds
jmp
xchg
int3
retf
out
(bad)
mov
call
call
call
pop
not
les
mov
dec
stos
jmp
sbb
push
and
lods
add
and
cmp
aad
pop
inc
xlat
xor
pop
xor
mov
mov
pop
ror
add
or
jmp
add
cmp
xchg
xchg
nop
out
mov
lods
sub
ins
cli
ret
sub
int
pop
sbb
cmp
pop
fdivr
(bad)
jmp
or
mov
ss
xor
or
(bad)
mov
(bad)
aas
or
out
loope
cmp
sub
retf
nop
(bad)
(bad)
(bad)
jg
cmp
push
repnz
jmp
sub
fidiv
push
fiadd
retf
clc
pop
idiv
inc
and
popa
jnp
sub
repnz
bound
pop
lods
jo
push
(bad)
or
scas
mov
loopne
ds
mov
in
mov
jae
stos
fild
cld
(bad)
(bad)
jg
fld
jmp
fnsetpm(287
push
clc
pop
outs
dec
xchg
ret
mov
add
test
ja
cli
aas
pop
stc
sub
xor
sub
popf
(bad)
hlt
sbb
into
or
(bad)
jno
and
adc
loop
(bad)
(bad)
(bad)
jmp
mov
cmp
push
push
daa
call
push
call
cmps
imul
cld
mov
jnp
(bad)
(bad)
(bad)
jmp
scas
xor
sahf
cli
xor
xchg
mov
and
test
mov
aas
xlat
(bad)
(bad)
(bad)
dec
ficomp
xor
dec
lahf
hlt
fld
out
repnz
cs
push
xlat
add
fmul
in
(bad)
(bad)
xchg
jne
sbb
jne
aas
adc
inc
int3
in
repz
pop
sub
sti
pop
js
sbb
xchg
jmp
arpl
mov
int3
mov
jp
js
jb
das
int3
popf
(bad)
adc
(bad)
jmp
aad
push
aaa
pop
add
fst
dec
dec
or
cwde
or
xchg
cld
fisttp
xchg
dec
mov
sbb
inc
rcr
jo
call
mov
(bad)
call
jmp
daa
(bad)
push
sub
adc
inc
dec
cld
pop
xchg
cs
cmc
imul
mov
push
xor
test
movs
je
jmp
push
shr
(bad)
(bad)
(bad)
dec
dec
mov
adc
dec
call
mov
jne
cld
cld
arpl
popf
push
jecxz
adc
inc
outs
and
inc
out
hlt
mov
(bad)
dec
std
aas
jmp
(bad)
cmc
sbb
out
xor
cmp
ds
hlt
push
out
cmp
and
push
add
mov
mov
pop
fs
(bad)
(bad)
call
dec
xchg
lods
jge
add
mov
or
lea
hlt
adc
inc
mov
(bad)
(bad)
call
mov
pop
(bad)
push
push
cs
mov
push
xor
outs
pop
(bad)
(bad)
(bad)
(bad)
fidivr
mov
(bad)
(bad)
push
inc
in
pop
fsub
mov
ror
cli
sbb
push
xor
mov
cmp
(bad)
(bad)
jmp
cmps
adc
push
cmp
push
fnstenv
mov
sub
jns
jmp
mov
jb
xchg
into
xlat
stc
loopne
ret
cmc
pop
xlat
popf
push
jg
mov
lahf
jae
out
outs
clc
dec
cmp
or
test
in
aaa
jne
imul
xor
cwde
test
(bad)
xchg
xor
jmp
or
clc
icebp
xchg
or
repnz
(bad)
call
pop
mov
mov
or
(bad)
mov
push
or
popa
ret
je
mov
retf
jmp
(bad)
(bad)
(bad)
inc
imul
mov
loope
es
xchg
test
(bad)
inc
push
inc
xor
rol
(bad)
dec
lock
cmp
hlt
xchg
mov
cdq
retf
sub
cld
(bad)
inc
js
adc
xor
xchg
mov
mov
mov
xchg
(bad)
(bad)
(bad)
cli
and
push
dec
into
add
lds
jp
cmp
xor
ret
nop
mov
fnsave
(bad)
(bad)
call
cmps
ins
mov
mov
cmp
or
add
mov
xchg
inc
jmp
jmp
ret
bound
mov
jne
lods
mov
xchg
mov
sub
(bad)
(bad)
push
enter
(bad)
pop
or
and
push
gs
push
dec
adc
cmp
in
(bad)
(bad)
(bad)
cmp
ja
pop
js
fmul
inc
cmps
xor
stos
stc
fist
inc
mov
mov
idiv
stos
(bad)
movs
dec
jne
sbb
ret
adc
bound
push
out
jmp
push
pop
mov
cmc
and
or
nop
iret
into
(bad)
(bad)
(bad)
(bad)
aas
idiv
fst
es
pop
mov
retf
loopne
inc
imul
push
(bad)
(bad)
(bad)
jmp
retf
sbb
mov
das
cli
cmps
jle
cmc
mov
test
and
popf
pop
fiadd
sub
retf
mov
outs
pushf
cdq
jmp
(bad)
fcomip
(bad)
inc
je
mov
fimul
pop
sbb
icebp
addr16
hlt
push
pop
cwde
cmp
call
fsubr
cmp
xchg
or
(bad)
retf
inc
jl
or
add
in
jecxz
pusha
cmp
or
(bad)
(bad)
(bad)
(bad)
fst
clc
scas
lods
inc
pushf
adc
shl
es
(bad)
xchg
sbb
and
push
sbb
pop
(bad)
clc
and
call
xor
push
dec
std
and
add
out
retf
sbb
or
jp
adc
push
(bad)
(bad)
(bad)
jmp
mov
mov
dec
(bad)
or
bound
push
daa
jne
test
cli
sbb
icebp
out
dec
loop
loopne
ficom
retf
in
sar
jle
int
test
(bad)
push
dec
jge
mov
xchg
lock
ss
adc
enter
dec
cmp
inc
adc
bnd
sar
add
mov
push
mov
mov
stos
sub
test
shl
inc
lea
mov
jns
push
sbb
cmps
dec
mov
iret
push
mov
adc
in
enter
pop
aam
repnz
push
pushf
(bad)
int3
mov
lock
(bad)
dec
js
ja
xor
std
add
adc
aaa
and
(bad)
(bad)
(bad)
fisttp
and
jp
mov
mov
dec
jge
cwde
jae
mov
sar
in
leave
ror
push
add
pop
idiv
add
jo
xchg
sbb
adc
mov
les
mov
mov
jp
(bad)
(bad)
(bad)
(bad)
call
dec
lea
sub
mov
mov
icebp
or
int
(bad)
(bad)
call
out
adc
popa
repz
push
inc
stos
loop
lods
loop
pushf
lock
inc
cmp
shl
pusha
lods
or
mov
(bad)
(bad)
(bad)
inc
cmp
cmp
test
cs
lods
icebp
fadd
test
(bad)
(bad)
(bad)
jmp
lods
out
pop
fdivp
xchg
(bad)
pop
(bad)
call
fs
pop
push
push
inc
(bad)
dec
and
nop
inc
std
mov
sbb
imul
cmp
ss
(bad)
(bad)
(bad)
jmp
inc
inc
sub
test
xor
icebp
and
jmp
(bad)
(bad)
(bad)
call
sub
jmp
jge
mov
push
xchg
mov
lds
xlat
jl
or
(bad)
mov
fidivr
clc
fld
fdivr
mov
jp
out
dec
mov
(bad)
(bad)
clc
retf
pop
xchg
in
jg
dec
jbe
in
fcomp
mov
pop
mov
pop
sbb
sub
imul
repz
(bad)
jg
mov
xchg
cmp
xchg
inc
pusha
repnz
fcomp
(bad)
(bad)
(bad)
dec
lea
scas
push
and
jnp
cmp
or
xchg
call
(bad)
push
icebp
imul
xor
lods
dec
nop
and
or
pop
cmps
js
or
(bad)
dec
or
clc
dec
pop
inc
inc
pop
(bad)
push
mov
mov
add
gs
retf
(bad)
in
dec
sub
xchg
push
or
xlat
(bad)
jg
stos
adc
pusha
loope
dec
adc
movs
push
xchg
add
repnz
out
or
or
daa
push
shr
pop
std
adc
adc
fwait
jl
jge
hlt
inc
lea
add
xchg
shl
(bad)
dec
add
or
shl
adc
xchg
mov
xchg
in
mov
es
mov
cld
adc
ret
inc
sbb
gs
stc
jmp
jge
movs
mov
inc
sub
movs
dec
enter
mov
cmp
mov
xlat
inc
hlt
cmps
repz
sbb
mov
pop
dec
add
sti
mov
and
inc
(bad)
dec
pop
mov
out
mov
xchg
add
call
(bad)
(bad)
js
or
imul
lods
sub
xor
jmp
lods
dec
mov
(bad)
(bad)
jg
sub
push
aam
push
jae
cli
les
movs
add
pop
jle
(bad)
(bad)
jmp
pop
mov
push
mov
(bad)
call
outs
cwde
mov
in
inc
or
mov
(bad)
dec
scas
fwait
hlt
and
mov
xchg
mov
sbb
lea
xchg
sbb
(bad)
inc
or
dec
ins
sub
stos
dec
outs
sahf
sbb
inc
push
xchg
into
cmp
inc
xor
loopne
or
(bad)
(bad)
(bad)
jmp
popa
jle
xlat
mov
jge
push
sbb
mov
shl
es
xchg
mov
sahf
ja
(bad)
jmp
push
repnz
shl
xchg
imul
xchg
or
inc
test
(bad)
(bad)
cmps
inc
lods
outs
mov
sbb
cs
cwde
retf
ins
mov
pop
mov
test
adc
xchg
inc
test
dec
cmc
or
(bad)
(bad)
(bad)
jg
cmp
in
inc
mov
push
jb
enter
test
(bad)
enter
(bad)
and
(bad)
xchg
sar
xchg
call
popa
mov
xchg
je
adc
loope
mov
fisubr
dec
clc
in
ret
cli
mov
mov
call
mov
cli
(bad)
jg
cmp
scas
pop
pop
push
cmp
jns
xlat
daa
jp
sbb
aam
(bad)
push
fdiv
rcr
inc
aas
out
fsub
test
dec
call
call
imul
xor
sub
les
cdq
mov
nop
std
cmp
aaa
cld
push
fnstcw
jno
icebp
in
cmps
jae
adc
loopne
fcmovnb
inc
cwde
mov
(bad)
(bad)
jg
add
inc
dec
daa
add
xchg
test
mov
(bad)
cld
pop
jbe
imul
jmp
adc
xchg
mov
std
lahf
jnp
out
test
or
pop
dec
mov
dec
leave
(bad)
(bad)
(bad)
dec
mov
in
sbb
pop
mov
(bad)
arpl
jge
sbb
push
(bad)
(bad)
jg
popf
(bad)
fmul
cmp
ins
lods
ret
iret
cmps
cmp
lahf
push
mov
pop
ss
stos
sub
dec
ja
sbb
aam
xlat
mov
push
mov
jo
sub
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
outs
mov
xlat
xchg
(bad)
outs
inc
(bad)
in
gs
(bad)
(bad)
(bad)
dec
lods
into
pop
xor
and
cwde
xchg
cmp
and
mov
mov
cmp
(bad)
(bad)
jmp
dec
test
cmp
jge
por
cli
mov
(bad)
(bad)
(bad)
jmp
mov
ds
pop
inc
xchg
shr
xor
cli
xor
pusha
adc
xchg
adc
lock
dec
test
push
inc
loopne
arpl
adc
mov
push
add
jmp
cmp
jns
out
xchg
fxch
jmp
push
(bad)
pop
pop
pop
dec
jge
jge
mov
xchg
addr16
push
mov
dec
adc
dec
fldenv
(bad)
mov
out
mov
sbb
add
jns
or
adc
loop
je
sub
loop
(bad)
(bad)
(bad)
(bad)
in
bound
dec
inc
fadd
mov
mov
addr16
mov
int3
mov
jnp
pop
dec
add
dec
clc
imul
push
fmul
dec
shl
stc
arpl
pop
add
push
pop
enter
dec
rol
and
(bad)
(bad)
(bad)
call
int
cmp
ds
adc
jg
dec
sub
pusha
movs
(bad)
leave
jnp
outs
inc
in
mul
xor
out
nop
icebp
(bad)
std
inc
xlat
dec
ins
inc
(bad)
jle
pop
push
dec
mov
and
(bad)
inc
in
mov
add
inc
push
ja
jnp
push
pop
jmp
or
mov
push
inc
call
jg
ins
ret
in
dec
sub
sar
fldcw
or
(bad)
cmp
loope
call
inc
fiadd
mov
out
call
std
sbb
shl
retf
je
inc
imul
(bad)
(bad)
(bad)
push
mov
nop
int
ss
cmovb
into
scas
loopne
mov
add
adc
mov
jecxz
add
out
cmps
mov
ffreep
jmp
xchg
(bad)
(bad)
(bad)
mov
or
lea
sub
pop
out
pop
sub
push
jbe
outs
rcr
pop
fisttp
xor
push
addr16
sbb
sub
std
(bad)
(bad)
call
mov
and
cs
add
stc
push
sub
sbb
xor
(bad)
(bad)
(bad)
call
hlt
lods
and
out
int3
mov
imul
or
test
mov
and
(bad)
(bad)
jmp
push
xchg
xor
pop
mov
loop
sub
pop
pop
leave
lock
xor
(bad)
fbld
mov
inc
clc
fisttp
aaa
mov
out
and
jge
jns
fst
out
cli
adc
inc
sub
mov
sar
(bad)
addr16
(bad)
inc
ficom
ror
and
in
cmp
mov
xchg
in
arpl
bound
xchg
push
mov
inc
jns
test
xchg
push
inc
push
sub
movs
lods
(bad)
dec
push
mov
or
push
fdivr
(bad)
call
fisttp
and
push
pop
xchg
fs
loope
in
and
(bad)
jle
call
or
dec
cmp
mov
pushf
xchg
mov
push
pop
gs
std
(bad)
(bad)
in
add
outs
loopne
add
jb
enter
ret
scas
jp
mov
icebp
(bad)
jmp
mov
mov
cmp
fucomi
popa
adc
mov
fcomip
dec
cmp
adc
jns
mov
jmp
inc
jge
js
test
pop
mov
mov
pop
sbb
push
imul
mov
lahf
jmp
loope
xchg
mov
icebp
or
outs
and
xchg
add
(bad)
jmp
in
outs
outs
out
sti
ret
xor
dec
jmp
fmul
cli
add
lods
mov
pop
(bad)
(bad)
mov
int3
push
push
cdq
add
fimul
adc
jne
mov
fcomp
xchg
(bad)
(bad)
(bad)
mov
fistp
gs
push
mov
xor
push
cmp
dec
mov
aam
(bad)
aam
fisub
mov
add
int3
fiadd
adc
(bad)
(bad)
jmp
mov
cmp
mov
icebp
sti
popf
ror
mov
push
xchg
mov
fbstp
scas
dec
push
cld
jg
sub
out
sub
icebp
xor
xchg
(bad)
jg
or
cmp
repnz
in
mov
ins
rol
xchg
(bad)
sti
dec
jo
addr16
jbe
jo
xchg
push
es
mov
call
pop
leave
shl
sub
jb
(bad)
jg
inc
dec
sub
into
es
push
sbb
pop
jg
xor
repz
add
out
pop
(bad)
(bad)
(bad)
jmp
mov
data16
jb
pop
dec
iret
push
mov
rol
(bad)
mov
jecxz
int
pop
popf
xchg
inc
in
jmp
(bad)
(bad)
(bad)
call
aam
sub
add
repnz
popf
push
shl
jge
and
mov
retf
sub
sub
mov
js
mov
(bad)
inc
cmp
ret
das
add
imul
fist
pop
sahf
xchg
push
int3
jae
xchg
adc
mov
sub
lahf
cmp
jp
push
sbb
xor
or
test
jle
inc
inc
into
in
mov
ss
and
push
stos
(bad)
(bad)
call
test
fdivp
repnz
out
stos
inc
(bad)
jmp
outs
xor
imul
fsub
inc
sub
aaa
pop
arpl
mov
call
dec
scas
or
lds
aad
icebp
adc
sub
jae
(bad)
fcomip
dec
cmps
or
mov
xchg
mov
imul
xchg
cmp
scas
pop
imul
(bad)
(bad)
(bad)
dec
mov
xchg
call
pop
lahf
in
cwde
retf
mov
sbb
dec
loopne
xor
mov
js
push
xchg
jns
pop
fcmovb
sbb
pop
adc
jmp
fild
xor
or
nop
ja
fwait
mov
fs
(bad)
fcomip
pushf
mov
mov
xor
adc
pop
or
scas
stos
or
inc
ficomp
(bad)
mov
movs
and
call
movs
sbb
or
cmp
(bad)
mov
jle
aad
mov
sub
fdiv
outs
mov
test
xchg
fcomp
(bad)
(bad)
(bad)
jmp
dec
adc
and
sbb
mov
push
mov
scas
mov
xchg
cmps
and
sub
(bad)
(bad)
(bad)
jmp
add
add
jns
lods
(bad)
fsub
(bad)
(bad)
shl
pop
fild
or
(bad)
(bad)
(bad)
inc
sbb
jnp
mov
aad
(bad)
jo
addr16
test
sub
(bad)
(bad)
js
jg
(bad)
pusha
add
xchg
cld
add
mov
sbb
cli
jl
sbb
(bad)
(bad)
cmp
test
inc
pop
pop
cwde
dec
outs
hlt
mov
xor
in
fsub
(bad)
(bad)
(bad)
(bad)
cli
retf
mov
jg
in
cmp
xlat
pop
in
adc
daa
pushf
imul
jne
push
cmp
repz
mov
mov
and
lahf
addr16
sbb
(bad)
jg
and
pop
mov
shr
dec
hlt
(bad)
(bad)
dec
adc
mov
test
push
sub
and
in
es
mov
mov
mov
and
popf
lea
add
and
imul
std
mov
mov
xchg
outs
sbb
xor
(bad)
push
pop
sub
xchg
scas
sub
mov
mov
loop
outs
mov
adc
test
push
push
sbb
shl
inc
xchg
add
lahf
and
fmul
pop
(bad)
out
mov
clc
xchg
pop
cmp
jbe
(bad)
(bad)
(bad)
jmp
cmp
or
fadd
cmps
dec
mov
push
adc
mov
shl
hlt
sbb
out
mov
adc
push
and
push
inc
dec
shr
add
dec
lock
cmc
mov
jle
mov
push
and
jg
jne
(bad)
(bad)
inc
fst
jnp
imul
push
ins
out
push
jne
clc
mov
xor
inc
add
add
dec
push
jp
(bad)
(bad)
clc
jmp
popf
loop
mov
mov
pop
retf
jnp
test
inc
aaa
in
scas
jg
sub
in
mov
push
pop
jmp
fdivr
rol
movs
push
jl
(bad)
dec
cmp
enter
pop
push
and
cld
fild
mov
in
pop
dec
data16
adc
push
(bad)
(bad)
(bad)
jg
mov
dec
aaa
jns
and
sbb
fs
cdq
inc
sbb
jle
push
xchg
push
icebp
je
xor
jmp
(bad)
jmp
(bad)
(bad)
dec
jo
stc
jne
adc
dec
call
inc
dec
jmp
xchg
jae
(bad)
(bad)
(bad)
dec
sbb
js
ja
sub
das
ins
into
fdivr
inc
sub
sbb
fcom
ins
or
inc
dec
adc
(bad)
(bad)
jnp
fldenv
bound
add
call
loop
inc
outs
mov
or
rol
jmp
mov
clc
in
outs
or
push
pop
out
dec
addr16
int3
mov
and
(bad)
cmp
jge
mov
cmp
inc
xchg
or
ret
xchg
mov
clc
mov
add
lock
mov
sbb
loop
movs
(bad)
out
into
push
ins
mov
jl
out
mov
add
jg
(bad)
jnp
xor
int3
jnp
mov
repnz
and
jmp
push
adc
adc
xchg
bound
jae
lahf
cmps
mov
(bad)
(bad)
(bad)
push
mov
mov
xchg
push
iret
outs
add
inc
sbb
fs
push
ret
cmc
jmp
mov
cli
lock
fisttp
fild
push
jge
sar
aad
jecxz
inc
inc
ds
xor
sahf
sub
jmp
jge
mov
div
xor
retf
mov
(bad)
or
(bad)
(bad)
(bad)
call
icebp
adc
(bad)
out
iret
imul
fist
fwait
mov
pop
das
je
jb
cld
(bad)
mov
fadd
mov
xchg
daa
sub
je
jmp
(bad)
fcos
(bad)
(bad)
jmp
mov
out
cmp
xor
mov
inc
adc
in
scas
mov
stos
adc
adc
or
(bad)
(bad)
(bad)
(bad)
jmp
or
fcomp
xchg
cmp
icebp
and
ja
popa
cmp
call
je
jge
cmp
sbb
in
sub
xor
rcr
sbb
(bad)
mov
mov
int3
bound
xchg
sbb
adc
(bad)
sti
test
in
or
ret
add
lds
jg
inc
jmp
js
xchg
hlt
adc
stc
out
pop
mov
adc
xchg
pushf
mov
(bad)
call
xor
cmp
push
xor
inc
mov
pop
ins
sar
lahf
cmp
fadd
(bad)
jmp
add
fidivr
retf
cmp
loop
icebp
mov
(bad)
fdiv
mov
or
jge
retf
(bad)
inc
dec
lea
jb
pop
aas
cmps
mov
or
(bad)
sbb
inc
xchg
cli
imul
call
jmp
dec
(bad)
aad
enter
dec
cmp
push
xor
loopne
mov
push
popf
jmp
push
aad
cmp
pop
and
call
(bad)
(bad)
inc
stc
and
mov
outs
xor
mov
cs
dec
pop
ror
cmp
dec
scas
or
jno
mov
pop
xlat
cmp
(bad)
call
or
(bad)
cmp
mov
mov
shr
inc
call
das
neg
mov
pushf
test
dec
dec
sbb
adc
xchg
xor
arpl
inc
fwait
mov
xor
sbb
dec
mov
mov
fistp
iret
(bad)
(bad)
jmp
call
pop
cmp
sahf
(bad)
inc
mov
push
adc
ss
(bad)
push
stos
pop
inc
xor
pushf
test
mov
push
jp
das
pop
std
mov
jecxz
cs
(bad)
fcomip
xchg
les
shl
mov
ret
ins
mov
outs
dec
jne
das
inc
(bad)
(bad)
(bad)
dec
adc
cmp
stos
sbb
outs
adc
jns
or
das
mov
and
(bad)
(bad)
(bad)
jmp
js
fst
cmp
mov
ficom
cmps
fisttp
cmp
call
mov
cwde
das
dec
jmp
push
fiadd
add
xchg
push
xor
(bad)
(bad)
(bad)
push
loope
(bad)
int
mov
scas
mov
sbb
add
pop
out
(bad)
(bad)
push
call
push
aaa
add
bound
loopne
imul
add
jecxz
push
inc
mov
push
sti
scas
ror
arpl
jl
icebp
ins
icebp
nop
nop
pop
in
call
retf
mov
stos
cli
outs
addr16
(bad)
(bad)
call
mov
scas
mov
adc
mov
dec
out
dec
dec
cmp
mov
clc
(bad)
(bad)
call
stc
js
mov
nop
jnp
dec
aas
xchg
rcr
popf
outs
jp
enter
mov
and
and
lods
adc
mov
pushf
popf
inc
add
push
add
mov
retf
pop
inc
sbb
push
mov
add
inc
add
mov
fs
add
mov
outs
cmp
cdq
xor
xchg
repnz
mov
repz
mov
(bad)
and
(bad)
inc
pop
ror
test
adc
test
or
add
jecxz
xchg
out
sbb
(bad)
call
enter
in
jecxz
movs
out
popa
xor
and
xchg
push
push
les
call
popa
cmp
lods
test
sub
mov
jmp
call
loop
aaa
lods
inc
jmp
dec
dec
or
loop
push
add
sbb
rol
arpl
aaa
call
mov
and
(bad)
(bad)
(bad)
sti
mov
lods
les
push
test
(bad)
(bad)
jmp
cmp
push
mov
outs
or
cmps
in
xchg
in
ins
call
add
jbe
fadd
pop
popa
jnp
xchg
push
rcr
outs
pop
call
fsubr
test
cmp
xchg
jnp
cmp
(bad)
(bad)
call
mov
popf
icebp
jecxz
xchg
push
fcomp
adc
sbb
leave
sbb
add
inc
cmps
dec
xchg
fwait
bound
push
dec
cmp
pop
adc
(bad)
(bad)
(bad)
dec
pushf
dec
push
xchg
add
(bad)
int3
addr16
mov
sub
adc
pop
or
cld
(bad)
call
(bad)
fadd
in
mov
inc
lock
push
scas
ds
dec
xor
sub
adc
fild
int
add
jnp
add
xor
ins
fbld
jg
(bad)
(bad)
(bad)
mov
lahf
push
ds
in
mov
push
cmps
mov
call
mov
mov
inc
in
fwait
sbb
out
lock
xchg
sahf
rcr
xchg
adc
(bad)
(bad)
(bad)
inc
imul
stos
out
mov
and
imul
xor
or
(bad)
mov
xchg
dec
pushf
push
repnz
dec
xor
stc
shl
mov
mov
lock
mov
outs
mov
iret
in
cli
leave
(bad)
(bad)
(bad)
jmp
ss
ja
std
and
dec
popf
lods
fild
jmp
push
adc
jle
fdiv
xlat
(bad)
dec
sub
jle
pop
mov
push
inc
jg
mov
pop
(bad)
call
add
retf
loope
cmp
enter
sub
(bad)
(bad)
call
jle
pop
sub
ins
cli
mov
add
xchg
jmp
sbb
das
mov
aam
retf
inc
movs
sti
test
mov
xor
inc
mov
dec
sub
cli
add
int
mov
out
sub
icebp
leave
adc
das
int3
add
ins
sar
(bad)
fcomip
push
sbb
std
mov
inc
in
dec
push
dec
mov
retf
(bad)
(bad)
(bad)
push
sbb
nop
sar
mov
sub
jl
sub
jnp
sbb
cli
(bad)
push
sbb
rcl
pop
pop
arpl
or
jg
sbb
xchg
es
icebp
dec
add
push
pusha
aaa
lahf
leave
sbb
(bad)
xchg
push
ret
repnz
dec
repnz
aas
or
or
mov
ret
sahf
int3
(bad)
cmc
(bad)
(bad)
jmp
push
xchg
xor
inc
push
pop
call
xor
rcr
imul
sbb
adc
sar
(bad)
(bad)
call
add
imul
xchg
(bad)
push
push
mov
(bad)
inc
addr16
inc
pushf
push
inc
enter
push
adc
scas
sbb
test
sbb
loopne
pop
cmp
(bad)
call
mov
add
ret
cld
scas
cmp
jmp
shl
(bad)
(bad)
(bad)
push
xchg
dec
fsub
cld
xlat
std
mov
pop
clc
push
std
stos
stos
dec
lods
jo
jno
adc
hlt
call
push
sbb
mov
outs
jle
call
adc
(bad)
(bad)
fmul
cmps
mov
outs
lods
stos
clc
xchg
rep
jge
mov
int
cmp
xchg
mov
dec
cmp
mov
imul
adc
xchg
shl
jge
add
mov
imul
pop
dec
cli
push
dec
test
dec
mov
retf
cmc
cmp
(bad)
jmp
bound
out
out
jmp
(bad)
js
enter
aad
ja
cmc
frstor
mov
in
int3
(bad)
pop
lds
mov
xchg
fsubr
repnz
call
mov
push
pop
aad
daa
sar
aas
xchg
scas
ret
dec
mov
sub
(bad)
(bad)
push
aaa
push
mov
pop
mov
loopne
into
inc
or
sub
jne
sbb
loopne
and
mov
jl
xchg
xlat
cwde
xchg
(bad)
(bad)
call
and
jge
(bad)
les
repz
adc
(bad)
fdivp
ins
mov
ror
jl
mov
(bad)
jg
cmp
jnp
lds
stos
mov
mov
sti
iret
call
or
aad
(bad)
adc
into
sti
sub
xchg
jns
loop
gs
xor
sti
cmp
jg
and
add
pop
xchg
test
or
out
sbb
(bad)
jmp
cmp
mov
(bad)
mov
mov
mov
mov
aaa
icebp
cli
push
leave
mov
(bad)
(bad)
out
movs
mov
lock
hlt
cmp
sbb
in
shr
popa
mov
scas
or
hlt
sbb
sbb
push
sti
jle
push
aam
xchg
xor
xchg
lea
call
push
daa
xlat
and
(bad)
fcomip
call
add
out
rol
sub
leave
jle
xchg
mov
aaa
inc
mov
(bad)
(bad)
(bad)
inc
sub
(bad)
fcomp
mov
(bad)
jns
mov
(bad)
xor
or
adc
(bad)
jmp
push
movs
or
jecxz
sbb
xor
test
jns
cmp
jmp
repz
xlat
fsubr
sbb
inc
pop
and
ins
mov
xchg
enter
popf
cs
mov
(bad)
mov
jno
dec
jo
loope
mul
dec
shr
aad
aaa
pop
push
call
imul
mov
shl
gs
outs
in
imul
in
ja
iret
std
xchg
jp
push
aam
sbb
out
(bad)
call
mov
xchg
aam
stc
cld
aam
xchg
sbb
jle
ret
sbb
jmp
pop
cld
(bad)
(bad)
inc
and
mov
xor
jb
out
cmps
xchg
inc
jecxz
jmp
xlat
hlt
dec
aam
and
dec
mov
sub
(bad)
push
add
sub
push
pop
jecxz
fs
jmp
data16
popf
sub
push
out
and
data16
fdivr
or
mov
push
jle
inc
dec
or
xchg
add
lods
(bad)
scas
mov
jno
add
fidivr
test
popf
and
(bad)
(bad)
jmp
pushf
out
cmc
mov
add
xor
jg
jae
pop
into
shl
inc
jns
and
outs
clc
adc
sti
sbb
outs
sti
pop
fistp
mov
icebp
(bad)
push
hlt
xchg
xor
xchg
(bad)
jo
lea
cdq
xchg
mov
sbb
out
neg
aam
sub
aam
test
sahf
or
jno
(bad)
(bad)
push
fcom
aas
pop
(bad)
aas
mov
or
mov
or
adc
or
clc
fs
imul
out
push
(bad)
cwde
dec
(bad)
(bad)
(bad)
(bad)
fadd
ret
xchg
mov
adc
or
add
movs
(bad)
nop
fstp
xor
jmp
test
mov
inc
fwait
loopne
sbb
ds
(bad)
(bad)
jmp
mov
daa
movs
pop
and
out
xchg
push
xor
retf
aas
cwde
pop
dec
(bad)
jmp
cli
aaa
jmp
aad
add
add
arpl
cmp
ins
scas
xchg
sti
pop
shl
(bad)
(bad)
(bad)
jmp
dec
sub
daa
aad
cmp
stos
cdq
ds
push
test
ins
pop
dec
mov
jnp
adc
rcr
cmc
jmp
sbb
mov
push
repnz
mov
mov
data16
(bad)
(bad)
jg
lods
xor
mov
inc
xchg
sub
add
jnp
xor
mov
movs
(bad)
in
jmp
shr
mov
hlt
icebp
ja
leave
push
hlt
mov
adc
test
xor
cmp
sar
jne
in
xchg
pop
push
mov
loopne
repnz
and
stos
(bad)
(bad)
fcomip
sub
enter
inc
adc
repnz
imul
cmp
(bad)
(bad)
jmp
inc
pop
imul
stos
ins
aad
iret
inc
mov
push
and
mov
(bad)
dec
xchg
mov
fild
cmp
imul
ret
mov
mov
ds
(bad)
(bad)
(bad)
out
adc
adc
mov
in
adc
lock
gs
xlat
xchg
jmp
call
loope
xlat
ror
sbb
sbb
push
push
out
cmp
sbb
adc
inc
push
cmps
cmp
fidivr
mov
dec
mov
aad
fsubr
ficom
test
int3
mov
int
mov
jae
xor
jo
inc
(bad)
(bad)
push
repnz
movs
enter
adc
loop
pop
inc
(bad)
mov
mov
mov
ret
xor
xlat
(bad)
push
hlt
sbb
mov
stc
out
clc
(bad)
(bad)
jg
mov
cmp
cwde
jae
xchg
cmp
jo
jmp
adc
sbb
(bad)
(bad)
(bad)
jmp
xor
xor
push
out
(bad)
enter
dec
and
push
inc
lods
fcom
cmps
arpl
adc
(bad)
(bad)
(bad)
jmp
push
repnz
jb
ja
out
test
(bad)
xchg
rcr
add
retf
(bad)
(bad)
(bad)
sbb
mov
jne
mov
add
shl
(bad)
inc
jne
popf
mov
jmp
clc
sti
mul
mov
sub
push
stc
jle
inc
test
sub
mov
dec
and
cmp
nop
push
fs
out
(bad)
(bad)
(bad)
jmp
xchg
addr16
cmp
pop
inc
mov
mov
movs
jno
ss
(bad)
mov
(bad)
inc
test
fiadd
(bad)
mov
jl
popf
inc
sub
out
add
jl
xchg
push
(bad)
js
dec
cmp
adc
sbb
fdivr
(bad)
(bad)
call
inc
push
mov
lods
stc
xor
lock
movs
jmp
jmp
cmc
call
push
shr
jae
mov
cmp
popa
pop
push
jg
xchg
pusha
sub
(bad)
(bad)
call
mov
ss
in
pop
mov
pop
jns
dec
(bad)
sub
and
icebp
(bad)
push
and
(bad)
test
mov
fadd
ins
fcomp
add
dec
cmp
aaa
xchg
xchg
mov
cmc
scas
call
nop
dec
enter
or
pusha
sub
dec
movs
jmp
fcom
dec
mov
(bad)
(bad)
call
sub
lea
mov
(bad)
fcom
cmp
jl
jo
or
jl
(bad)
(bad)
(bad)
inc
sbb
out
pop
xchg
add
jl
or
mov
stos
shl
jne
adc
(bad)
(bad)
(bad)
push
jg
mov
adc
adc
arpl
mul
jbe
nop
adc
call
cld
(bad)
jge
dec
adc
cmps
or
and
sub
inc
in
mov
xor
(bad)
(bad)
call
add
loopne
sbb
addr16
es
loope
push
hlt
mov
pop
(bad)
ins
imul
loop
lock
jmp
(bad)
or
cmps
dec
(bad)
aad
test
lods
cmp
lds
call
out
adc
call
aam
sbb
xor
adc
ret
pop
das
dec
(bad)
(bad)
jg
movs
cld
es
inc
neg
js
dec
inc
addr16
jb
(bad)
(bad)
call
mov
and
cmp
dec
sbb
mov
mov
jbe
pushf
mov
mov
(bad)
js
pop
xchg
aas
cmc
push
fadd
clc
mov
(bad)
pusha
push
dec
(bad)
(bad)
call
cmp
jo
inc
cmp
lock
jno
aaa
clc
mov
fwait
xchg
(bad)
(bad)
(bad)
jmp
pop
out
push
pop
dec
push
cmp
cs
dec
jp
fistp
in
int3
mov
pop
cmp
inc
clc
(bad)
push
test
xchg
retf
xchg
daa
ins
inc
sub
cmp
(bad)
(bad)
dec
in
mov
les
test
push
xchg
sbb
aam
xor
clc
pop
push
cld
(bad)
in
adc
hlt
or
jmp
pop
loopne
or
jb
jne
jno
adc
dec
retf
call
cmovne
mov
data16
(bad)
(bad)
jg
mov
mov
mov
sar
cs
sub
sub
mov
fldcw
retf
inc
jp
add
(bad)
(bad)
ds
lahf
pushf
dec
mov
je
mov
push
fist
pop
pop
push
push
mov
movs
pop
sti
xchg
mov
repnz
mov
test
dec
gs
mov
(bad)
(bad)
(bad)
dec
push
jge
mov
mov
adc
scas
(bad)
xor
cld
arpl
cmc
jle
(bad)
(bad)
jmp
mov
ja
adc
add
in
mov
pop
mov
fbstp
xchg
mov
ret
xchg
repz
fchs
or
shl
push
cmp
sub
pop
xor
sbb
(bad)
jmp
or
sub
lahf
xchg
clc
repnz
cmps
pop
iret
mov
adc
imul
and
inc
sub
das
sbb
call
das
xor
inc
(bad)
jmp
in
jmp
inc
out
pop
dec
or
(bad)
mov
mov
(bad)
mov
lods
movs
mov
jb
add
or
(bad)
jnp
mov
xchg
es
cld
jo
or
inc
enter
mov
jecxz
enter
adc
(bad)
(bad)
push
inc
dec
pop
hlt
mov
mov
popa
cmp
mov
loope
jp
test
(bad)
(bad)
jmp
scas
push
cmp
cmp
jbe
mov
sbb
sub
jg
pop
push
call
adc
inc
add
xchg
fsubr
ss
test
dec
ja
(bad)
(bad)
(bad)
dec
cmps
push
mov
int
mov
adc
enter
loope
addr16
cmp
xchg
repz
cmps
(bad)
jmp
aas
jmp
push
imul
mov
and
adc
cmp
add
mov
push
pop
inc
(bad)
jg
(bad)
fisubr
mov
and
cli
and
xor
mov
(bad)
(bad)
(bad)
call
sub
out
idiv
dec
inc
cld
adc
shr
push
jmp
sbb
xchg
sbb
iret
push
les
sub
in
imul
mov
and
outs
(bad)
(bad)
mov
push
sub
lods
or
xchg
xchg
push
sub
leave
add
or
inc
mov
pop
jnp
pop
dec
mov
outs
sbb
and
int
pop
push
(bad)
(bad)
(bad)
mov
mov
fdiv
adc
test
mov
out
bound
ret
dec
or
(bad)
(bad)
call
and
aas
jb
repnz
dec
cmp
mov
pop
out
div
call
pop
callw
fisubr
sbb
(bad)
(bad)
(bad)
dec
lahf
aam
or
inc
pop
push
and
mov
and
lds
dec
lods
jnp
cmp
sub
inc
pop
adc
jne
jne
test
repz
push
sbb
inc
fwait
dec
mov
cmp
mov
push
mov
adc
push
(bad)
cdq
mov
(bad)
dec
push
sbb
nop
xchg
xchg
mov
int
inc
xchg
dec
adc
lahf
jge
xchg
stos
mov
pop
jmp
movs
pop
mov
cmp
pop
xchg
dec
adc
xchg
scas
ss
lea
fdivr
jg
jmp
sbb
mov
movs
cli
jl
data16
cmc
add
jge
aaa
fdivr
push
sbb
nop
enter
cmp
(bad)
out
(bad)
dec
nop
inc
xor
push
or
ja
nop
inc
enter
stos
jno
xchg
fcom
mov
outs
es
xor
scas
xchg
call
call
fisttp
push
push
push
or
push
fisttp
in
mov
loopne
in
jmp
inc
ins
inc
xchg
sar
sar
unpckhps
xchg
rcl
and
lock
(bad)
ss
(bad)
call
movs
nop
or
jle
(bad)
fisub
cmp
jmp
sbb
push
stos
pop
test
and
fs
in
or
push
jg
call
or
ins
pop
(bad)
call
dec
and
inc
mov
jmp
(bad)
call
ret
and
lock
in
dec
in
int3
int3
sub
sbb
retf
cmp
(bad)
mov
dec
mov
in
jno
hlt
xor
(bad)
xchg
pop
dec
callw
cmc
(bad)
inc
and
mov
(bad)
test
dec
inc
lock
enter
outs
(bad)
(bad)
jmp
jmp
fbstp
sbb
sbb
jnp
push
xchg
inc
dec
clc
(bad)
jmp
jb
add
mov
mov
mov
push
cld
(bad)
fisttp
es
and
and
idiv
in
push
jno
(bad)
jg
mov
fisub
das
gs
es
sub
push
add
shl
int3
test
xchg
mov
jo
call
call
jns
jle
and
jnp
sbb
(bad)
(bad)
call
rol
sbb
xchg
dec
or
cmp
(bad)
out
aaa
outs
out
fidivr
(bad)
(bad)
(bad)
(bad)
dec
adc
add
in
mov
push
rcl
fldcw
pop
or
xchg
jns
nop
ins
cld
jmp
outs
push
mov
std
outs
(bad)
jge
jle
mov
dec
shl
icebp
or
sti
mov
fcomip
or
xor
lds
inc
jg
fistp
or
xor
ret
cmp
(bad)
call
sbb
pushf
imul
and
xchg
xlat
(bad)
(bad)
call
jmp
jb
dec
inc
or
sub
push
arpl
in
loope
iret
push
(bad)
repnz
sar
dec
inc
test
sar
aad
add
into
fsubr
xchg
xchg
arpl
lds
das
clc
das
dec
push
int
aas
ins
inc
xor
pop
mov
fs
xchg
ror
pop
test
mov
pop
test
imul
mul
cli
(bad)
cmp
in
fwait
(bad)
(bad)
inc
push
adc
xchg
stc
add
movs
shl
pop
test
(bad)
(bad)
(bad)
inc
mov
xor
dec
inc
rcl
adc
jnp
in
jno
enter
pop
adc
(bad)
setbe
(bad)
cmc
mov
mov
sub
call
call
ss
(bad)
(bad)
(bad)
(bad)
mov
or
jmp
sbb
hlt
shr
(bad)
retf
mov
sub
(bad)
(bad)
push
mov
(bad)
cmp
loop
sbb
mov
mov
mov
cmps
out
ja
in
xchg
cmps
(bad)
(bad)
(bad)
jmp
imul
mov
sbb
call
int3
aad
mov
fldcw
cwde
sub
pusha
cld
(bad)
jns
or
add
addr16
ret
mov
jne
cmc
mov
jmp
lea
cmc
push
arpl
sbb
xchg
inc
mov
mov
test
inc
das
push
xor
sub
and
(bad)
jmp
mov
test
ror
int3
adc
mov
cmp
sub
cmp
cmp
mov
(bad)
fcomip
call
icebp
or
dec
stc
xchg
or
jae
inc
aad
cld
popa
cmp
dec
mov
cli
(bad)
jmp
lahf
push
aas
push
sahf
cmp
call
or
jg
aaa
and
lods
loop
push
adc
aas
mov
cwde
fcmovbe
jecxz
cs
add
hlt
inc
test
ret
rcr
fs
mov
call
and
in
retf
pop
movs
jmp
xlat
(bad)
fist
mov
push
icebp
and
pop
jo
clc
(bad)
call
jmp
inc
rcl
aam
mov
pop
mov
push
dec
pop
icebp
(bad)
call
mov
mov
and
(bad)
ficom
inc
inc
ret
cli
rcl
nop
popf
into
jecxz
rcr
scas
mov
lds
shr
mov
rol
gs
cli
(bad)
jmp
sub
or
icebp
mov
mov
popa
pusha
lea
ficom
ds
neg
lea
and
sub
outs
cmp
add
xchg
cmp
in
pop
aad
dec
pop
(bad)
stc
mov
(bad)
(bad)
(bad)
out
push
add
cdq
loopne
mov
cmps
imul
mov
call
push
sub
cmp
jp
dec
push
pushf
jp
in
or
add
jmp
cld
mov
cmp
sahf
fld
in
sti
cld
dec
or
mov
mov
ror
loope
cmp
outs
inc
inc
or
rcl
mov
jmp
jmp
xor
rcl
sar
dec
xchg
cmc
call
xchg
iret
ret
fdivrp
(bad)
(bad)
call
mov
mov
rol
stos
jecxz
es
cmp
stc
test
(bad)
jmp
daa
fcmovne
int3
loopne
clc
daa
popf
cmps
add
in
xor
mov
inc
fdivr
mul
hlt
(bad)
jg
fdiv
mov
push
les
jmp
mov
shr
mov
arpl
in
in
movs
sub
sbb
mov
jo
aam
push
jecxz
(bad)
(bad)
inc
std
pop
sbb
sub
nop
or
and
push
pusha
xchg
jg
(bad)
jbe
pop
push
jae
pop
rcl
mov
(bad)
jg
cli
ds
bnd
ss
pop
fisub
inc
or
xor
out
movs
pop
(bad)
jmp
cli
inc
add
aad
fistp
sbb
pop
cmps
in
mov
jecxz
pusha
(bad)
(bad)
(bad)
jmp
mov
mov
pop
xor
(bad)
std
xchg
icebp
cld
ds
mov
xchg
pop
(bad)
(bad)
push
sti
es
cmc
xor
mov
and
xchg
mov
stc
sbb
shl
jnp
icebp
mov
popf
ins
sub
jno
or
add
aaa
mov
nop
push
push
xor
pop
or
xchg
je
cmp
cdq
fistp
mov
sbb
(bad)
(bad)
(bad)
mov
mov
fsubrp
mov
scas
dec
rcr
pop
mov
dec
(bad)
call
test
pusha
and
jp
test
sbb
mov
sub
call
enter
fist
push
mov
jno
adc
clc
mov
ins
in
mov
scas
(bad)
repz
aas
out
cmp
xlat
in
addr16
ficom
(bad)
(bad)
push
jne
icebp
adc
push
div
jmp
data16
and
out
mov
pop
lea
(bad)
jmp
and
ror
xchg
cmp
mov
sub
cld
inc
loopne
dec
es
(bad)
push
das
test
mov
mov
jbe
dec
(bad)
arpl
pop
push
adc
aam
gs
xchg
(bad)
(bad)
push
push
cmp
jae
or
sub
jo
repz
(bad)
(bad)
mov
sub
(bad)
mov
pusha
xchg
shl
std
jmp
pop
add
(bad)
(bad)
inc
inc
mov
dec
sub
sbb
test
xlat
sub
cwde
push
aam
dec
adc
(bad)
(bad)
call
and
inc
cmp
and
cs
adc
std
fs
mov
pop
loopne
fisubr
gs
xor
rcr
xlat
not
loope
(bad)
(bad)
(bad)
call
push
cmp
inc
adc
mov
data16
(bad)
mov
repz
rol
push
mov
jmp
out
jp
and
adc
iret
mov
cs
(bad)
(bad)
(bad)
jmp
jmp
ror
daa
add
fst
test
xchg
(bad)
loope
fs
gs
aas
clc
mov
ret
add
(bad)
jl
jmp
mov
inc
ss
and
xchg
(bad)
(bad)
mov
cs
aas
rol
fist
ins
or
dec
in
hlt
pop
inc
mov
add
scas
or
xor
jg
(bad)
jmp
push
(bad)
adc
hlt
int3
hlt
bound
iret
sub
and
(bad)
fneni(8087
cmp
(bad)
(bad)
inc
inc
xor
pop
and
pop
dec
xchg
adc
fdivr
ds
xchg
xor
bound
sbb
inc
inc
ja
push
jmp
dec
cdq
lds
idiv
(bad)
(bad)
(bad)
data16
(bad)
rcl
dec
scas
ret
and
adc
ror
(bad)
(bad)
(bad)
(bad)
ficomp
push
or
jno
cmp
xchg
jge
sbb
and
stos
out
loop
int
jge
(bad)
(bad)
in
mov
pushf
test
mov
movs
pop
cmp
aas
cmps
mov
leave
or
(bad)
(bad)
call
rcr
push
xchg
xchg
gs
(bad)
imul
shr
into
pop
(bad)
mov
push
(bad)
dec
lock
sbb
into
push
cmp
jno
add
(bad)
(bad)
push
mov
and
pushf
ins
movzx
test
sub
xchg
push
xlat
mov
inc
aam
add
(bad)
inc
in
jmp
stc
aad
lods
in
mov
test
das
cld
inc
test
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
cwde
mov
cmc
and
or
ret
cld
fs
cmp
mov
sub
call
hlt
push
jno
jae
ja
inc
pop
pavgb
aam
dec
es
pop
add
push
shr
pop
xchg
sbb
xlat
data16
add
jmp
and
pop
mov
fstp
cli
out
sub
xor
and
call
(bad)
adc
(bad)
fmul
or
or
repnz
mov
fwait
movs
icebp
ret
loopne
push
call
pushf
dec
idiv
sbb
ficom
aas
jmp
and
ret
xor
cmp
fwait
or
(bad)
(bad)
jmp
inc
rol
pop
into
shl
retf
stos
and
sub
and
inc
cld
(bad)
in
mov
(bad)
loopne
cmps
and
sbb
in
fidivr
rcr
inc
pop
xor
(bad)
(bad)
(bad)
jmp
cmp
es
push
add
in
push
mov
and
pushf
lods
ins
mov
call
rcl
repz
inc
pusha
pop
sub
test
in
mov
inc
cld
call
scas
ret
addr16
push
leave
cmps
(bad)
fimul
idiv
cli
movs
std
cdq
jnp
cmp
fistp
fidivr
sbb
lods
fstp
jne
xlat
mov
xchg
in
add
mov
(bad)
(bad)
inc
mov
jae
jg
add
icebp
xchg
imul
sbb
sbb
(bad)
dec
enter
sar
aas
xor
enter
stos
bound
inc
adc
mov
call
into
loop
std
add
mov
out
push
pop
xlat
aam
test
mov
ja
add
adc
or
in
push
xchg
mov
mov
mov
or
mov
mov
call
std
dec
or
stos
nop
push
jne
aad
cs
loop
mul
xor
add
jecxz
imul
jno
mov
pop
jp
adc
frstor
jns
or
jg
jg
and
push
xchg
fsub
push
lock
(bad)
(bad)
call
mov
int
fs
jecxz
jbe
dec
shl
in
inc
sub
pushf
(bad)
cmc
repz
rcr
dec
cmp
pop
movs
adc
repz
sbb
jmp
cmp
push
mov
int
cmp
aaa
cwde
sub
jge
pop
retf
imul
(bad)
dec
imul
stos
and
shl
sbb
push
push
cdq
shr
aas
test
mov
imul
(bad)
jmp
or
sub
push
dec
in
pop
dec
movs
xchg
and
and
scas
mov
pusha
daa
retf
cmp
dec
add
loopne
cmps
or
sub
fcomip
xor
popa
jne
rcl
(bad)
(bad)
(bad)
fisttp
sbb
scas
xchg
mov
xor
scas
mov
out
fisubr
cmp
imul
or
clc
mov
in
sub
out
add
inc
mov
test
jno
data16
mov
hlt
fs
jb
sbb
(bad)
(bad)
call
in
jge
xchg
mov
dec
addr16
fist
jne
inc
(bad)
and
push
xchg
pop
or
(bad)
(bad)
push
inc
push
mov
lods
or
out
pop
push
push
inc
arpl
or
jecxz
add
or
ds
mov
popa
push
add
inc
pop
mov
xor
mov
inc
mov
fidiv
hlt
(bad)
(bad)
dec
sbb
and
jmp
rcl
xchg
mov
mov
fimul
mov
(bad)
(bad)
fistp
fwait
sub
scas
out
mov
popa
xor
and
pop
sub
jecxz
(bad)
(bad)
(bad)
out
cs
sti
lahf
cmps
pop
pop
push
lock
mov
in
fcmovb
dec
loope
(bad)
or
or
(bad)
mov
mov
mov
push
add
scas
mov
and
add
shl
call
std
mov
mov
push
jo
jle
and
mov
pop
sub
pop
push
cmc
retf
cdq
mov
mov
jmp
scas
imul
test
out
jb
aaa
push
mov
sahf
fcmovnbe
fimul
jmp
mov
(bad)
mov
dec
cmp
sbb
push
out
bound
push
jmp
bnd
(bad)
addr16
add
je
leave
into
or
lods
test
fs
xor
shr
dec
fs
call
mov
ins
sbb
dec
mov
cwde
pop
mov
xchg
cli
jge
fistp
loop
(bad)
mov
jne
and
lea
in
(bad)
(bad)
(bad)
(bad)
inc
shl
call
sub
fsubr
stos
xchg
xor
rcl
inc
dec
adc
ss
nop
pop
(bad)
pop
xor
out
(bad)
mov
xchg
jecxz
cld
xchg
cmp
ss
js
jp
std
(bad)
call
lods
adc
cs
ins
pop
repnz
je
pop
imul
(bad)
mov
adc
push
sub
jecxz
push
js
js
mov
(bad)
(bad)
(bad)
cmp
jl
sub
add
fdiv
push
rcr
adc
mov
mov
adc
or
push
jno
or
stos
hlt
jae
adc
test
mov
lods
in
pop
inc
cld
(bad)
fdivr
mov
or
bound
arpl
addr16
jmp
loope
inc
rcl
sti
scas
addr16
rcl
add
out
and
int3
ror
mov
push
cmp
fsubr
or
ror
dec
jae
out
stc
jne
and
inc
mov
xor
mov
and
pop
movs
in
fld
pop
icebp
call
add
jnp
fcomp
lods
mov
xchg
inc
or
dec
lock
mov
jg
and
shl
inc
fimul
lods
in
ins
jg
(bad)
(bad)
jmp
mov
cmp
push
mov
push
or
cmc
int
push
test
xchg
jle
ss
jg
call
mov
dec
mov
nop
jae
mov
xchg
jns
cmc
inc
inc
cmp
(bad)
(bad)
(bad)
(bad)
jmp
leave
dec
xor
xchg
cmp
xchg
addr16
cdq
retf
and
jbe
lea
xor
(bad)
(bad)
jmp
inc
fisttp
push
jnp
xchg
int
std
sbb
pop
jbe
mov
xor
outs
cli
(bad)
dec
add
mov
inc
bound
cmp
mov
push
(bad)
inc
je
adc
(bad)
xor
and
sub
adc
pop
mov
(bad)
(bad)
dec
gs
sub
shl
xor
sbb
mov
push
cli
inc
add
into
dec
(bad)
call
ret
nop
xor
mov
push
lods
jge
and
push
mov
aam
out
(bad)
(bad)
(bad)
(bad)
push
div
mov
push
out
ror
mov
and
xor
call
repnz
lahf
call
sub
and
jecxz
mov
ins
arpl
rcl
cmc
popa
arpl
aaa
push
rcl
fistp
outs
inc
push
mov
cld
jmp
and
adc
int3
add
stos
adc
mov
jge
leave
(bad)
(bad)
(bad)
(bad)
jmp
das
test
mov
xor
push
xchg
jecxz
mov
(bad)
std
jg
cli
stc
retf
(bad)
(bad)
inc
cwde
pop
mov
sub
leave
sbb
pop
pop
leave
push
ins
iret
mov
std
push
fucom
cmp
add
call
xchg
rol
(bad)
imul
mov
add
jmp
dec
xor
add
mov
(bad)
call
mov
fidivr
or
pop
lahf
(bad)
std
mov
pop
and
clc
(bad)
(bad)
jg
movs
push
daa
iret
mov
push
in
fld
mov
cmp
popa
cld
(bad)
fstp
ja
ret
push
add
(bad)
push
dec
jns
aas
mov
mov
jg
rcr
inc
mov
mov
addr16
and
(bad)
(bad)
jmp
fidiv
stc
mov
inc
aas
loope
cmps
(bad)
hlt
xchg
dec
sub
and
sbb
jmp
mov
(bad)
(bad)
push
lea
dec
retf
cwde
and
push
lahf
xchg
mov
nop
push
(bad)
inc
adc
mov
xor
(bad)
and
push
mov
sub
sbb
aad
push
outs
xor
mov
movs
xchg
and
mov
xchg
mov
(bad)
add
sub
push
add
mov
fmul
cmp
sub
inc
xchg
jp
pusha
xchg
mov
loop
cli
cmps
bsf
int3
int
mov
pop
neg
push
mov
pop
mov
push
sub
movs
(bad)
(bad)
(bad)
(bad)
fsub
jmp
ficomp
and
in
ret
inc
das
mov
and
cmc
call
dec
dec
mov
pusha
shr
cmp
cwde
sub
ja
repz
(bad)
rol
bound
in
mov
add
(bad)
(bad)
(bad)
out
mov
ret
sti
sar
or
xchg
dec
call
dec
in
mov
sbb
and
mov
jo
adc
xchg
hlt
inc
(bad)
(bad)
(bad)
call
rcl
pop
rcl
cld
inc
mov
adc
cmp
arpl
pop
mov
xchg
(bad)
xchg
sahf
mov
fst
shl
pushf
mov
imul
fdivrp
(bad)
(bad)
jmp
jo
sub
ds
gs
sub
push
sub
xor
es
inc
retf
(bad)
inc
loop
jb
mov
mov
xchg
mov
in
push
mov
inc
sub
ss
cli
add
dec
fs
push
xchg
cmc
pop
and
call
test
int
paddw
(bad)
pop
rcr
fwait
js
and
pop
sub
out
shl
xchg
jae
loop
scas
pop
ss
jmp
jl
nop
fsubr
pop
pop
mov
dec
and
repz
cmp
gs
mov
(bad)
call
jmp
das
fiadd
sub
mov
jae
jle
sbb
loope
loope
call
retf
mov
in
(bad)
sti
sbb
xor
jmp
dec
movs
cs
pop
shr
jp
hlt
in
or
imul
push
(bad)
call
cmps
or
aad
cwde
add
pop
mov
je
nop
in
jo
fdivr
ficom
out
ja
(bad)
gs
(bad)
inc
sahf
imul
inc
sub
xlat
(bad)
mov
clc
call
lock
inc
jb
(bad)
(bad)
push
and
jnp
or
mov
js
pop
mov
out
jnp
ja
mov
xor
mov
sahf
jl
push
add
(bad)
(bad)
push
cmps
fidivr
les
or
pop
rcl
movs
js
icebp
fmul
add
movs
mov
push
pop
(bad)
(bad)
mov
or
pop
sbb
push
ficom
xor
push
call
imul
lods
aas
inc
leave
bound
nop
in
sbb
push
jbe
ret
jns
call
div
cwde
(bad)
(bad)
call
jmp
dec
rol
cmp
dec
xor
sbb
jmp
lods
(bad)
dec
adc
jmp
cs
out
call
xor
popa
(bad)
in
adc
movs
mov
clc
(bad)
call
push
xchg
jne
ret
ins
fnstcw
stos
mov
(bad)
xchg
and
or
or
and
mov
fwait
push
in
xchg
lods
aaa
std
dec
dec
xorps
nop
mov
jp
shl
inc
mov
add
(bad)
jmp
or
sti
cmp
push
mov
mov
mov
ret
mov
movs
push
test
cdq
mov
in
mov
(bad)
(bad)
call
adc
mov
clc
xlat
sub
jns
(bad)
xchg
mov
push
(bad)
(bad)
mov
inc
pop
das
sbb
sti
xchg
cmp
cs
scas
cmps
xchg
fs
(bad)
(bad)
(bad)
cli
shl
fcmove
fstp
dec
mov
pop
call
popf
stos
movaps
sar
fild
xchg
les
dec
inc
mov
(bad)
(bad)
(bad)
call
sub
dec
inc
sbb
loop
sbb
xor
out
xor
sub
jmp
xchg
pop
sbb
jmp
sbb
mov
sub
cmp
push
(bad)
(bad)
(bad)
dec
xchg
(bad)
add
into
push
fisttp
(bad)
cli
xor
jg
std
lods
push
mov
sbb
jmp
push
std
ror
popa
mov
sub
scas
pop
jns
jmp
jg
rcr
imul
cmp
dec
sub
enter
sbb
int3
jnp
(bad)
aam
into
hlt
push
jp
inc
jge
(bad)
mov
mov
pop
ficom
adc
xor
fcomp
adc
frstor
jo
(bad)
and
dec
popf
jo
lock
push
pop
cmps
mov
push
leave
cld
cmp
or
cmp
(bad)
inc
mov
cmp
pop
out
cmp
push
out
jmp
dec
lahf
bound
lods
aad
rcr
fs
(bad)
mov
cmp
imul
push
scas
cmc
pop
jg
jg
mov
fsub
sar
(bad)
call
add
xchg
addr16
or
add
add
(bad)
sbb
imul
(bad)
(bad)
call
outs
add
xor
mov
(bad)
jg
out
aam
outs
dec
aaa
in
pop
ins
mov
push
(bad)
(bad)
(bad)
inc
and
daa
jg
mov
and
addr16
(bad)
cli
adc
sbb
in
enter
add
(bad)
(bad)
(bad)
mov
stc
sub
inc
lods
mov
retf
and
repnz
shl
add
adc
inc
stc
push
getsec
int
dec
(bad)
(bad)
(bad)
jmp
xchg
loopne
jg
inc
imul
inc
mov
push
push
(bad)
(bad)
mov
pushf
add
sbb
js
pop
mov
push
adc
lods
mov
mov
or
mov
lods
mov
cmps
ins
inc
push
std
dec
cmp
hlt
out
jle
dec
inc
gs
lods
mov
cmp
loopne
inc
int
in
std
es
rcr
xor
mov
mov
sub
(bad)
dec
cld
pop
std
(bad)
cmp
lods
rol
ins
mov
push
push
push
jne
mov
xor
mov
lea
(bad)
(bad)
(bad)
jg
push
inc
jae
pop
sub
or
xchg
das
and
imul
xchg
out
or
shl
jmp
ins
add
cmp
dec
adc
push
dec
cmp
pop
or
jb
cmp
add
jo
mov
xchg
ss
jmp
cli
es
or
and
test
rol
pushf
mov
mov
loope
test
(bad)
(bad)
call
int
push
xchg
shl
out
shr
popf
stos
sub
fnsave
fcom
xchg
jo
hlt
(bad)
dec
mov
shl
dec
aam
pop
adc
mov
outs
and
(bad)
(bad)
(bad)
out
push
sbb
xchg
or
fcom
mov
push
test
(bad)
mov
aam
pop
mov
sub
adc
arpl
dec
hlt
inc
pop
(bad)
(bad)
jg
es
cmps
in
shl
(bad)
jmp
and
sub
mov
ins
bound
(bad)
(bad)
(bad)
dec
mov
xchg
inc
dec
lds
mov
loope
test
out
ja
or
(bad)
(bad)
(bad)
jmp
mov
inc
and
xchg
icebp
and
xchg
push
push
ficom
(bad)
(bad)
(bad)
(bad)
call
cs
dec
xchg
icebp
xchg
dec
test
jp
jle
pop
or
dec
push
shr
lea
mov
call
mov
adc
je
stc
xor
lahf
movs
mov
push
xchg
int
stos
adc
lock
out
jb
xchg
inc
psllw
fcmovnbe
jg
popa
adc
in
cdq
aad
stos
rcr
(bad)
(bad)
inc
mov
jecxz
mov
mov
lahf
cmp
jl
(bad)
mov
xchg
jne
stc
gs
push
mov
scas
or
mov
cmc
(bad)
jmp
mov
push
ret
pusha
repz
(bad)
mov
mov
dec
call
fmul
retf
(bad)
cli
ret
test
(bad)
(bad)
push
sti
mov
into
mov
les
jl
test
iret
or
fadd
pop
jmp
scas
(bad)
call
jmp
pushf
stc
sar
lock
jmp
in
or
mov
add
adc
pop
sub
loopne
add
imul
mov
call
dec
inc
ret
or
sti
cli
dec
leave
shr
leave
clc
call
test
adc
sbb
cmp
mov
(bad)
dec
ret
popa
jmp
in
jle
in
xor
out
mov
push
(bad)
xor
sub
cs
push
pop
mov
pop
jnp
(bad)
stos
ja
(bad)
(bad)
fmul
addr16
inc
ret
jmp
(bad)
mov
adc
std
jl
dec
or
push
lods
outs
mov
lock
(bad)
movs
sub
popf
xchg
cmp
inc
ins
xchg
fisttp
in
jo
loopne
es
bound
dec
sbb
fwait
or
jle
out
cmp
(bad)
jmp
xchg
sub
mov
fistp
lods
arpl
inc
js
shl
mov
sahf
ret
popa
in
xor
pushf
sub
rol
sbb
icebp
inc
adc
dec
sub
mov
(bad)
inc
inc
or
inc
sbb
or
jecxz
lahf
(bad)
lods
cmp
jnp
(bad)
(bad)
inc
and
jge
xchg
push
pop
cli
push
mov
inc
push
dec
adc
add
idiv
pop
inc
xchg
cmp
mov
xor
std
cmp
adc
jmp
pop
cmps
xor
jnp
in
or
sbb
bound
popa
mov
(bad)
cld
mov
cld
(bad)
(bad)
(bad)
jg
and
xchg
sbb
or
cmp
aas
mov
ja
jne
addr16
adc
inc
or
call
ror
push
sbb
loopne
xor
mov
xchg
hlt
repz
jmp
xchg
jnp
popf
ss
enter
imul
dec
(bad)
(bad)
(bad)
mov
ins
and
cmp
neg
enter
jge
mov
into
pop
frstor
loopne
or
icebp
jl
test
dec
mov
xchg
push
sti
fiadd
inc
jle
(bad)
dec
push
je
mov
mov
and
pop
adc
jmp
lods
(bad)
inc
push
test
and
or
stos
lods
in
daa
xor
jnp
(bad)
jg
dec
adc
(bad)
rcl
push
cld
(bad)
xor
push
(bad)
fcmove
ins
mov
mov
les
std
add
mov
aad
pop
ss
inc
mov
icebp
xor
dec
loop
xchg
push
push
int
aaa
std
fst
jmp
pop
cmc
(bad)
(bad)
inc
pop
jo
inc
xor
add
int
mov
jge
sbb
pop
mov
mov
xchg
daa
in
lods
ins
outs
out
jge
mov
jno
mov
mov
xor
xchg
arpl
scas
(bad)
(bad)
fidivr
aas
es
test
mov
(bad)
enter
xchg
pop
push
push
scas
inc
jmp
jmp
outs
retf
xor
(bad)
(bad)
(bad)
fbld
jmp
movs
xor
bound
jmp
(bad)
test
retf
cld
mov
movs
mov
jns
pop
leave
pop
js
lea
push
imul
leave
inc
mov
push
push
outs
and
(bad)
(bad)
dec
retf
add
stc
xor
adc
stc
mov
adc
test
push
jmp
jnp
dec
ja
inc
sub
xchg
and
cmp
push
and
mov
add
(bad)
mov
mov
sub
lods
lea
inc
fnstsw
cdq
dec
aaa
mov
pop
push
add
push
xor
jnp
vpcmpgtb
inc
(bad)
(bad)
(bad)
cmp
sub
or
bswap
pop
mov
cmp
je
sub
sbb
ret
ret
inc
cmp
(bad)
dec
mov
push
xor
rcr
mov
sub
fs
ins
aam
lea
rcr
(bad)
(bad)
(bad)
fild
fstp
retf
movs
test
mov
loopne
push
mov
jg
and
xor
(bad)
cmp
shl
mov
cmp
bound
and
pmulhuw
ficom
(bad)
call
mov
and
cld
daa
xchg
in
int
gs
or
into
cdq
push
scas
(bad)
(bad)
(bad)
jmp
push
mov
push
sbb
jno
sbb
xor
cdq
mov
pop
dec
sti
(bad)
(bad)
mov
add
retf
mov
cmp
adc
aam
push
shl
(bad)
(bad)
call
dec
xor
mov
dec
pushf
imul
mov
add
push
test
jns
jb
(bad)
(bad)
jg
cld
sub
sti
and
xchg
cmp
adc
rol
popf
in
and
push
mov
mov
(bad)
jl
sub
(bad)
dec
in
push
aad
call
jp
cwde
(bad)
popa
sbb
js
es
or
jmp
jmp
xor
clc
stos
enter
push
or
jle
cmc
(bad)
call
and
sahf
out
dec
add
jmp
ja
mov
lods
(bad)
(bad)
jmp
mov
inc
mov
outs
and
ja
xor
or
out
add
inc
lock
sub
sahf
in
mov
pop
call
icebp
cs
in
sub
test
sbb
or
add
mov
jmp
ret
cs
sub
pop
add
(bad)
(bad)
inc
sar
es
pusha
or
scas
and
adc
outs
mov
fistp
(bad)
(bad)
mov
or
ror
mov
jp
xor
cmp
shl
mov
push
sub
mov
add
jle
imul
test
in
pop
aas
push
add
push
sub
dec
imul
jb
(bad)
push
mov
call
ret
jns
(bad)
out
cmp
sub
out
xor
add
(bad)
jmp
jae
push
ins
push
jmp
xor
sub
imul
popaw
test
or
aas
nop
dec
ret
jmp
or
jnp
dec
pop
inc
call
dec
jb
inc
mov
jp
(bad)
(bad)
dec
dec
add
les
inc
push
pop
cmps
xor
and
mov
pushf
mov
push
or
push
shr
(bad)
(bad)
(bad)
push
je
test
out
dec
loop
pop
jo
add
sbb
stos
sahf
sar
aas
or
fist
jg
(bad)
out
clc
lea
push
idiv
imul
add
lods
jl
cmp
mov
(bad)
mov
(bad)
xor
mov
nop
sahf
pop
fdivrp
xchg
mov
enter
xor
ds
cld
(bad)
jmp
xor
or
mov
mov
mov
xchg
jb
jp
push
or
or
loop
adc
mov
cmp
(bad)
(bad)
(bad)
call
adc
iret
and
jb
xlat
(bad)
jb
daa
mov
jmp
jl
add
(bad)
jmp
mov
popf
push
fbld
test
fwait
xchg
loop
sbb
(bad)
dec
push
rcl
push
mov
es
jmp
dec
dec
adc
sub
pop
loopne
ss
fmul
in
ret
mov
add
loope
or
call
loop
jl
sub
adc
mov
(bad)
data16
dec
xlat
(bad)
(bad)
fild
jo
pop
mov
fidivr
ret
xchg
lea
gs
(bad)
(bad)
call
loop
push
sbb
adc
sub
xchg
sub
test
loopne
jae
push
jo
cld
scas
(bad)
(bad)
(bad)
(bad)
(bad)
lock
xchg
sub
pop
lods
inc
fwait
xchg
fist
mov
movs
jecxz
or
push
sar
(bad)
inc
fmul
arpl
int
mov
clc
pusha
xchg
adc
(bad)
jg
mov
jge
repz
mov
xor
mov
call
push
dec
sbb
mov
jecxz
sbb
out
cwde
pushf
xchg
test
jno
(bad)
(bad)
push
(bad)
lahf
imul
adc
shl
jae
push
in
xchg
retf
jmp
mov
and
jp
add
or
pop
jp
sub
loop
jnp
(bad)
(bad)
jmp
ss
in
pop
(bad)
movs
inc
cdq
mov
dec
jge
mov
popf
pop
pop
std
adc
dec
xchg
outs
clc
or
lock
dec
movs
shr
cmc
shl
push
adc
pop
cmc
(bad)
call
jns
and
in
rcl
dec
into
clc
xchg
retf
rcr
scas
(bad)
(bad)
(bad)
push
addr16
pop
lock
jp
cmp
sbb
lods
fisubr
mov
pop
dec
test
shl
cld
(bad)
call
push
push
test
mov
xor
(bad)
ins
mov
call
mov
fisttp
sbb
fsubr
cmp
loopne
cmp
mov
sbb
pop
pushf
jae
test
(bad)
(bad)
(bad)
push
xchg
add
js
or
xchg
xchg
xchg
add
adc
pop
inc
inc
mov
int3
or
test
adc
xchg
push
adc
fisub
(bad)
(bad)
cwde
scas
dec
rcl
jg
cmp
inc
jne
lds
(bad)
jg
xor
and
cmps
ret
pop
test
std
sti
mov
mov
(bad)
(bad)
(bad)
inc
in
mov
imul
inc
jle
xor
data16
call
fcmovnbe
push
hlt
call
lods
jmp
jl
loopne
cmp
aad
and
retf
inc
pop
scas
aad
push
sar
push
popa
sbb
loope
cmp
jne
(bad)
(bad)
jmp
cwde
push
ret
fnstenv
jo
jo
xor
jp
(bad)
(bad)
dec
fisub
dec
or
dec
movs
push
les
enter
push
pop
push
adc
(bad)
call
test
lahf
push
popfw
ds
xchg
add
dec
out
jns
enter
dec
fstp
into
xor
out
xor
mov
les
ins
clc
or
and
stos
ds
(bad)
(bad)
(bad)
jl
push
daa
clc
cdq
xchg
or
mov
push
pop
mov
xchg
movs
adc
movs
out
inc
pop
cmp
jmp
int
lock
sub
inc
add
pusha
mov
xor
stos
mov
and
aaa
inc
call
mov
or
in
es
dec
call
(bad)
mov
jns
aaa
mov
dec
ret
jns
push
bound
pop
adc
into
es
movs
stos
retf
out
xchg
(bad)
jmp
rcr
mov
(bad)
frstor
xchg
push
fnclex
in
fild
add
(bad)
fbld
dec
mov
stos
retf
jle
push
repz
(bad)
(bad)
(bad)
cmp
nop
and
sub
in
inc
sti
xor
mov
push
je
dec
imul
xor
(bad)
(bad)
inc
nop
adc
popf
ror
dec
popa
cmp
sbb
dec
or
(bad)
(bad)
jmp
repz
shl
movs
or
cmps
jnp
jae
adc
jecxz
pop
pop
rcr
ss
cmp
mov
(bad)
(bad)
(bad)
call
(bad)
cmps
loopne
jbe
int3
jmp
cmp
mov
or
fsubrp
jmp
cmp
lods
mov
adc
sub
(bad)
call
or
mov
test
push
add
jge
sub
lock
(bad)
(bad)
(bad)
cmp
mov
jnp
int3
cmc
xor
xlat
icebp
or
cdq
jb
fmul
jmp
add
dec
test
ret
pushf
leave
jl
sbb
in
(bad)
(bad)
(bad)
(bad)
jmp
inc
in
or
jno
test
sahf
xor
data16
repz
dec
add
pop
or
sub
and
jmp
cli
and
mov
add
fistp
leave
add
jmp
lods
add
xor
cmp
push
dec
imul
xchg
add
int
les
pop
icebp
ror
or
jmp
pop
jbe
sub
inc
loop
loopne
sub
mov
cli
es
cmp
stos
iret
sub
jnp
pop
test
fadd
aad
pop
into
adc
(bad)
jg
push
(bad)
loopne
mov
adc
and
repnz
imul
pop
ret
movs
lea
push
cdq
inc
mov
fbstp
jl
add
bnd
fs
mov
jae
push
inc
xchg
(bad)
(bad)
(bad)
inc
pop
int
add
test
dec
rcr
mov
sub
icebp
out
sbb
arpl
(bad)
call
mov
fisubr
push
cmps
pop
ins
out
stc
push
sbb
scas
(bad)
(bad)
(bad)
push
mov
pop
test
fbstp
push
mov
sbb
fcomp
adc
loopne
sbb
and
das
clc
sahf
add
cmp
mov
xchg
mov
leave
add
clc
(bad)
jg
xor
jg
cli
sbb
cmp
cmp
and
sbb
repnz
(bad)
inc
jno
push
sub
cdq
dec
cmps
ret
and
push
fst
jl
(bad)
outs
push
inc
les
and
push
in
std
ja
pop
sbb
pushf
(bad)
mov
pop
loope
scas
add
jbe
xor
dec
push
mov
and
sbb
test
cld
push
mov
or
or
(bad)
repnz
xor
mov
adc
retf
push
(bad)
jmp
jmp
imul
stc
add
cmp
and
push
ret
fistp
inc
nop
xchg
nop
sub
cld
dec
in
(bad)
cmp
loope
cmp
iret
jne
dec
test
push
repnz
clc
mov
scas
sbb
xchg
clc
xor
retf
pop
repz
(bad)
(bad)
(bad)
dec
mov
call
mov
cmps
out
dec
jbe
lea
mov
sbb
fs
outs
daa
imul
(bad)
(bad)
push
fmul
ja
and
mov
push
dec
fcom
sub
xchg
stc
stos
cdq
mov
mov
inc
jae
ja
aad
mov
jb
jno
popa
pusha
sahf
(bad)
(bad)
(bad)
jmp
push
ror
cmp
fst
fwait
inc
inc
test
inc
and
mov
call
outs
es
add
in
mov
push
inc
cli
gs
loopne
and
call
adc
xchg
add
ds
and
outs
ss
(bad)
(bad)
call
pop
pusha
mov
enter
js
and
frstor
ret
pushf
dec
idiv
in
call
mov
pop
jg
rcr
xchg
mov
jno
push
mov
inc
int
push
fild
ret
xchg
mov
std
ds
retf
mov
add
and
(bad)
sahf
out
jbe
push
bound
sbb
push
shl
(bad)
(bad)
jmp
pop
movs
push
cwde
and
ficomp
cmp
adc
ficom
inc
xlat
jae
cmps
inc
enter
(bad)
inc
ins
add
jno
sub
add
jl
es
(bad)
clc
ret
shr
out
mov
(bad)
mov
in
push
and
fst
jae
inc
mov
mov
inc
jmp
fnstcw
fidivr
xor
mov
and
arpl
or
mov
dec
and
in
dec
sbb
movs
fmul
push
pop
jecxz
jge
mov
xor
(bad)
dec
jno
mov
ss
xor
xor
(bad)
(bad)
call
rol
aad
add
fldenv
sbb
xchg
dec
dec
mov
xchg
add
(bad)
(bad)
push
cwde
sbb
dec
sahf
pop
pop
rcl
ins
hlt
cld
jecxz
push
scas
xchg
(bad)
std
(bad)
(bad)
inc
gs
scas
into
mov
dec
out
dec
and
and
imul
xchg
pop
out
les
std
mov
imul
(bad)
(bad)
call
inc
(bad)
xchg
in
imul
ins
dec
out
mov
repnz
mov
rcr
(bad)
(bad)
(bad)
push
imul
jno
push
mov
xor
aam
dec
mov
stc
(bad)
cdq
(bad)
(bad)
(bad)
dec
push
sbb
xor
sub
(bad)
into
out
cmp
xchg
mov
test
fbld
jmp
stos
and
pushf
or
out
pusha
cmp
mov
(bad)
dec
lock
std
(bad)
pusha
aaa
lock
es
sbb
stos
mov
mov
(bad)
(bad)
(bad)
in
add
pop
push
sbb
xchg
or
(bad)
xchg
stos
mov
jns
mov
loope
fs
xchg
and
cli
(bad)
inc
int3
pop
outs
pop
sar
mov
sbb
test
xchg
hlt
outs
xor
xor
add
popf
icebp
lods
xchg
scas
xchg
out
jg
inc
std
inc
sti
add
and
icebp
push
sub
repnz
(bad)
(bad)
dec
pop
nop
jno
out
lock
jl
cmp
sub
jp
fcom
cmp
(bad)
(bad)
(bad)
inc
lea
mov
sub
js
aas
pop
mov
ja
pop
mov
(bad)
jmp
inc
push
ret
xor
and
outs
fdiv
sbb
movs
(bad)
jns
(bad)
inc
jo
mov
inc
mov
pop
call
into
mov
cmp
jns
(bad)
(bad)
dec
les
mov
int3
xchg
and
call
dec
fdiv
test
sub
mov
aad
jle
jmp
scas
test
push
sub
mov
(bad)
mov
add
in
xchg
icebp
(bad)
(bad)
jmp
add
xchg
push
and
mov
jle
fucom
mov
(bad)
out
mov
test
jnp
adc
shr
test
adc
xor
bound
or
loop
lock
out
dec
mov
jmp
and
jb
cmp
push
push
sbb
retf
jge
test
sti
ins
dec
lods
sub
cld
mov
sbb
or
or
push
mov
rcl
jno
xor
adc
push
imul
call
(bad)
jg
jle
xchg
xlat
retf
outs
cmps
dec
push
les
inc
popf
xchg
(bad)
jmp
mov
add
test
ret
outs
mov
shr
clc
mov
pop
xchg
in
push
shl
(bad)
push
xchg
stc
jmp
jnp
retf
inc
call
fcmove
mov
dec
cli
shl
(bad)
cld
xlat
(bad)
(bad)
fucomip
mov
sbb
test
fisttp
jmp
jbe
xor
(bad)
(bad)
jg
jecxz
cmc
inc
or
add
jmp
fdivr
dec
cli
jg
ins
xor
test
xor
(bad)
(bad)
(bad)
jg
sub
movs
and
iret
sub
mov
xchg
popf
push
adc
xlat
add
aaa
push
cli
sub
mov
nop
xlat
out
push
cmp
jge
inc
mov
sbb
jo
push
daa
pop
mov
mov
or
(bad)
dec
repnz
jae
mov
lods
push
dec
int
mov
and
(bad)
(bad)
(bad)
fnstcw
dec
and
outs
jmp
and
xchg
pusha
sub
push
push
in
(bad)
fcomip
scas
fadd
ds
or
call
test
(bad)
(bad)
(bad)
jmp
js
enter
test
or
sbb
ins
shr
stos
test
xchg
xchg
sbb
(bad)
(bad)
call
adc
data16
sbb
imul
inc
mov
stos
adc
inc
mov
jb
push
test
(bad)
(bad)
inc
xchg
outs
xchg
in
fbld
xor
lock
pop
mov
or
push
inc
clc
sub
cmp
jae
push
inc
jge
lods
je
adc
jns
inc
or
pop
cs
inc
rcr
(bad)
(bad)
cmp
and
pop
les
mov
xor
cmp
popa
loopne
push
xlat
inc
ins
arpl
std
dec
loop
(bad)
(bad)
pop
std
(bad)
(bad)
inc
push
xchg
and
cwde
or
adc
sti
test
xor
add
call
adc
pop
or
lahf
jmp
lds
dec
fstp
into
(bad)
inc
dec
sub
hlt
add
enter
xchg
pop
jl
loop
(bad)
(bad)
call
dec
jno
mov
push
stos
mov
jae
add
movs
fcmovnb
add
(bad)
dec
sbb
push
fcom
jo
daa
mov
add
sbb
xchg
mov
cmp
mov
inc
mov
mov
jmp
sub
jle
mov
xchg
pop
fwait
push
aam
popa
ror
add
jg
sub
adc
loope
add
push
clc
add
and
xchg
cmc
loopne
dec
xchg
(bad)
(bad)
jmp
sbb
mov
jge
push
jle
mov
rcl
mov
addr16
pop
pushf
inc
scas
pop
jne
hlt
cmp
leave
cmp
loopne
in
and
pop
inc
fst
loopne
push
mov
(bad)
pop
and
push
dec
jl
rcr
cli
es
sub
(bad)
(bad)
(bad)
call
adc
xor
loope
jecxz
pushf
test
test
inc
cmp
fcom
inc
adc
ja
ret
outs
xchg
stos
mov
in
std
sbb
mov
mov
shl
sbb
(bad)
call
and
lds
push
imul
ins
sti
or
(bad)
fbld
sar
mov
push
js
xchg
adc
mov
push
fnsave
out
stos
cmp
(bad)
(bad)
(bad)
inc
sbb
jecxz
adc
jne
cdq
out
popf
or
pushf
out
push
iret
mov
xor
jnp
in
outs
cli
inc
lahf
sub
addr16
(bad)
sub
jp
mov
scas
test
mov
jg
or
out
cmps
int3
cmc
std
movs
pop
xchg
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
ret
pusha
std
aas
sub
inc
stos
mov
in
test
stos
fwait
js
adc
in
(bad)
push
jmp
dec
push
pop
fisttp
and
addr16
inc
mov
(bad)
adc
dec
jae
adc
(bad)
call
outs
shl
or
mov
in
(bad)
fidivr
nop
mov
lea
pop
(bad)
mov
(bad)
(bad)
call
pop
fild
pop
popf
or
or
push
hlt
jmp
xor
and
dec
mov
xchg
mov
adc
push
std
es
(bad)
out
xor
pop
add
in
mov
xor
push
repnz
inc
push
pop
sahf
test
push
arpl
cmps
jmp
adc
(bad)
(bad)
call
xor
or
mov
xor
int3
ins
mov
iret
sahf
icebp
cmp
ret
sar
(bad)
(bad)
(bad)
in
dec
sar
jbe
gs
sahf
(bad)
push
test
sbb
xchg
mov
jbe
(bad)
mov
cld
cmp
sub
xchg
mov
stos
loop
repnz
or
jne
push
(bad)
cmp
jbe
addr16
mov
push
sbb
mov
ja
sbb
(bad)
(bad)
(bad)
cli
mov
popf
jb
dec
mov
mov
lahf
sub
adc
or
fist
mov
(bad)
jmp
sbb
imul
add
cmp
mov
rcl
ds
dec
scas
lock
inc
ss
pop
mov
jecxz
mov
or
icebp
push
push
adc
(bad)
(bad)
(bad)
(bad)
mov
pusha
(bad)
xor
push
dec
sub
jmp
sub
les
add
retf
cmp
cwde
add
cmps
clc
test
stos
shl
lods
in
fimul
sub
dec
ud0
fistp
xor
cmp
pop
jmp
add
shr
add
inc
arpl
retf
test
call
lods
push
rol
movs
xchg
mov
push
pop
mov
(bad)
dec
loop
push
in
in
xchg
(bad)
cdq
jle
xchg
sub
and
mov
(bad)
(bad)
call
cmps
shl
dec
pop
sub
fwait
or
gs
popa
icebp
lods
mov
cs
dec
mov
push
sbb
lea
(bad)
lahf
gs
js
push
(bad)
into
(bad)
adc
jmp
test
mov
pop
cmc
xchg
mov
retf
loop
test
add
add
fs
in
add
(bad)
(bad)
fistp
jnp
test
add
in
repnz
imul
add
(bad)
(bad)
dec
ret
xor
xchg
pop
rcr
in
ins
fidiv
xor
dec
pop
xchg
or
mov
sbb
call
push
hlt
lahf
lahf
movs
es
(bad)
(bad)
jmp
push
cmps
cmc
test
or
fs
and
pop
jecxz
sub
adc
mov
ins
out
icebp
(bad)
inc
dec
xor
jb
test
jp
cs
in
xor
sub
jmp
(bad)
out
mov
shl
lods
ins
test
shl
icebp
xor
(bad)
(bad)
(bad)
mov
mov
je
sahf
lahf
lods
sub
daa
aas
jle
out
les
outs
add
in
dec
or
mov
mov
jne
jmp
add
(bad)
cmp
test
in
xor
dec
dec
call
adc
sub
cmp
addr16
loope
(bad)
(bad)
call
jmp
nop
or
shl
(bad)
jns
mov
int3
sub
push
cmp
xchg
imul
rol
mov
lock
pop
(bad)
mov
and
das
pusha
mov
arpl
lock
inc
(bad)
call
pushf
gs
cmps
mov
mov
push
mov
mov
daa
mov
(bad)
cmp
adc
sbb
ret
xor
(bad)
(bad)
(bad)
fld
add
mov
retf
shl
push
push
mov
mov
pop
lock
xor
(bad)
jg
call
loopne
out
les
fmul
mov
mov
loope
mov
cmc
jmp
test
mov
xchg
gs
jle
int
pop
fwait
mov
dec
mov
sub
dec
pop
dec
iret
jp
daa
jne
adc
rol
(bad)
(bad)
push
out
fs
test
sub
retf
out
std
mov
(bad)
(bad)
call
je
mov
retf
and
jbe
mov
(bad)
nop
stc
dec
into
int
fcomp
inc
push
(bad)
(bad)
(bad)
dec
add
cmp
xlat
push
cmp
or
mov
push
into
test
xor
addr16
xchg
popf
(bad)
(bad)
(bad)
(bad)
jl
xchg
add
cdq
adc
imul
cmp
(bad)
fs
cmc
dec
xchg
(bad)
jmp
mov
mov
pop
mov
(bad)
jmp
push
xlat
adc
inc
aam
jg
jbe
call
pop
mov
lods
pshufw
(bad)
and
test
push
hlt
(bad)
jmp
mov
add
xor
pop
repz
sar
mov
(bad)
(bad)
(bad)
(bad)
mov
add
out
imul
dec
shr
(bad)
bound
(bad)
call
(bad)
pushf
mov
mov
push
mov
push
mov
ret
sub
adc
stos
stos
or
xchg
xor
(bad)
(bad)
(bad)
push
adc
retf
or
aas
sti
xchg
or
cmp
ret
push
(bad)
jge
and
add
push
fst
mov
outs
and
or
pop
lods
and
or
cmp
(bad)
call
movs
test
enter
xchg
dec
jne
inc
retf
test
push
into
add
adc
(bad)
jmp
inc
push
imul
call
les
loop
jmp
add
or
and
and
(bad)
(bad)
(bad)
call
aaa
pop
sahf
iret
jmp
fnstenv
popf
aad
bnd
sub
outs
pop
cmp
in
int3
pop
mov
pop
out
sub
and
lds
dec
jne
or
ret
pop
jae
retf
(bad)
(bad)
(bad)
push
shl
mul
mov
xor
inc
in
inc
mov
jbe
es
pop
cmps
sub
mov
dec
add
xchg
ror
ror
cmp
fidivr
jg
shl
dec
push
push
and
jmp
mov
test
pop
push
(bad)
fiadd
iret
xchg
jmp
adc
push
ja
mul
imul
sti
fisub
jl
dec
and
sbb
and
repz
adc
sub
and
adc
push
cmps
cmp
cmp
(bad)
(bad)
(bad)
push
mov
cwde
xchg
adc
xchg
or
jo
jecxz
cmp
int3
out
popa
add
jge
(bad)
jg
dec
jp
pop
ret
xchg
int
(bad)
mov
push
lods
push
xchg
les
and
test
(bad)
jmp
sbb
push
cmp
sbb
out
mov
or
mov
jo
call
inc
js
push
mov
mov
les
mov
in
inc
pushf
lock
sbb
adc
mov
cmp
loope
jecxz
push
jmp
mov
or
xchg
cmps
mov
dec
cli
push
jecxz
mov
sub
int3
push
repnz
aam
rcl
(bad)
(bad)
call
lods
movs
je
imul
lods
loopne
out
je
cmps
push
push
std
sbb
(bad)
mov
ficomp
loope
std
and
pop
stos
xchg
(bad)
ins
test
das
mov
(bad)
(bad)
fst
std
or
sbb
call
inc
jno
sub
popf
(bad)
(bad)
(bad)
jmp
rcl
mov
push
mov
xor
movs
or
dec
lahf
clc
adc
inc
enter
add
inc
clc
fisttp
xchg
dec
push
cmps
mov
mov
(bad)
(bad)
(bad)
jmp
mov
fstp
add
jmp
cmp
ror
mov
and
pop
test
mov
cmc
inc
out
ja
mov
js
jnp
add
jg
jmp
imul
sar
or
in
imul
push
mov
ret
sbb
push
ds
jg
dec
ins
les
or
inc
mov
lods
in
(bad)
(bad)
(bad)
(bad)
jmp
jp
sub
sti
(bad)
push
adc
fcomp
lods
adc
or
xor
cmp
sahf
pop
push
cmp
adc
and
mov
shl
call
call
lds
pop
(bad)
(bad)
(bad)
(bad)
std
pop
les
push
sub
outs
xchg
out
icebp
pop
mov
adc
mov
(bad)
(bad)
(bad)
inc
pop
mov
pop
jmp
out
jp
fistp
cmp
mul
dec
dec
shl
call
mov
sub
(bad)
(bad)
push
outs
mov
repz
popf
outs
dec
fisttp
mov
and
cwde
mov
jnp
cli
(bad)
sbb
cmp
mov
sbb
ds
mov
jmp
inc
cld
fdivr
adc
adc
jg
dec
xchg
sub
cmps
jmp
mov
adc
into
cs
mov
fisttp
je
sub
cmp
fidivr
jb
jb
std
(bad)
(bad)
(bad)
mov
cmps
mov
and
xchg
sahf
xor
jl
xor
sub
outs
(bad)
(bad)
(bad)
(bad)
fstp
std
js
adc
(bad)
retf
or
xchg
sbb
fs
sbb
mov
add
(bad)
inc
cs
mov
and
inc
mov
out
and
mov
dec
cs
dec
jg
inc
pop
cli
mov
dec
cdq
pop
aam
cmps
ja
mov
mov
clc
retf
pop
jp
adc
cmp
popa
or
jmp
cli
dec
push
jle
aas
jbe
and
jl
xlat
cdq
test
adc
std
push
(bad)
(bad)
(bad)
call
or
test
adc
push
pop
rcl
jae
std
push
outs
ss
jg
retf
stos
or
dec
sbb
mov
daa
scas
lods
jb
xchg
cdq
pop
repz
jae
(bad)
(bad)
call
mov
add
ins
pop
das
fcom
xor
dec
ds
ss
aad
ins
jl
scas
cmps
dec
jmp
call
add
mov
sub
add
or
mov
sub
push
pop
arpl
mov
dec
add
inc
(bad)
jp
add
or
ret
pop
(bad)
(bad)
mov
out
or
push
sub
and
and
(bad)
(bad)
(bad)
jmp
in
mov
jne
bound
jmp
lock
pusha
add
inc
fs
mov
and
sbb
inc
(bad)
scas
imul
arpl
mov
pop
and
mov
cli
xchg
dec
cmp
mov
sbb
(bad)
(bad)
fst
xchg
mov
movs
mov
fild
push
sub
add
dec
push
xor
sahf
bswap
sti
xor
push
xchg
ret
jge
jmp
(bad)
jmp
or
bound
div
or
sbb
enter
test
das
xor
hlt
sbb
adc
and
xor
mov
push
cwde
out
sub
dec
push
ror
jmp
sbb
or
(bad)
xor
push
jge
cmc
out
pusha
xor
push
inc
cwde
sub
call
xchg
(bad)
(bad)
(bad)
call
cmp
and
test
and
rcr
in
xor
(bad)
(bad)
call
xchg
fild
mov
iret
in
out
ret
mov
dec
push
xchg
or
push
mov
mov
inc
das
mov
jl
pop
add
ins
xor
cmp
mov
cmp
movs
and
push
mov
mov
inc
inc
inc
add
adc
push
in
or
jg
shl
(bad)
(bad)
jmp
sbb
jbe
xor
and
stos
jbe
xor
(bad)
(bad)
call
push
nop
push
jge
scas
adc
mov
sbb
inc
sbb
retf
repz
sbb
loop
or
sub
inc
ss
(bad)
(bad)
(bad)
mov
and
retf
(bad)
popa
fmul
test
and
movs
ins
enter
ins
jnp
xchg
push
(bad)
mov
and
xor
jno
mov
jmp
mov
ss
(bad)
jge
(bad)
(bad)
call
mov
adc
xchg
pop
mov
ins
int
fld
(bad)
and
gs
push
pop
scas
(bad)
jmp
jmp
dec
inc
dec
pop
ror
xchg
cmp
mov
ins
xor
xchg
(bad)
in
test
int3
mov
repnz
(bad)
(bad)
call
aaa
in
mov
ins
dec
cmps
loope
cmp
lock
hlt
fcmovbe
jns
lea
stos
std
retf
(bad)
push
sub
cmc
add
dec
cmp
jecxz
ds
(bad)
(bad)
mov
pop
ret
js
push
mov
inc
inc
in
popfw
jns
ja
cld
(bad)
(bad)
jmp
sbb
into
dec
(bad)
pop
lods
mov
pusha
pusha
and
ins
iret
mov
arpl
mov
cmp
(bad)
inc
add
shl
cmp
mov
adc
out
nop
icebp
jge
mov
sbb
shr
(bad)
call
push
cs
jecxz
add
aaa
pop
pop
stos
xor
ret
jp
jb
bound
test
cld
(bad)
jmp
fiadd
fnstsw
(bad)
jg
lock
push
rol
loopne
shr
sbb
sahf
movs
daa
pop
fiadd
movs
clc
cld
mov
loope
xchg
push
xchg
fisubr
cmp
pop
pop
addr16
loopne
or
ret
lds
sub
inc
pop
hlt
dec
sub
mov
aaa
hlt
ins
aam
sbb
jmp
cmp
imul
mov
xchg
push
std
or
xlat
retf
loope
mov
shl
jp
(bad)
(bad)
(bad)
inc
js
aaa
inc
lahf
sti
jge
cs
pusha
mov
ret
push
mov
dec
retf
fld
(bad)
(bad)
call
sti
fnstenv
push
mov
mov
pop
faddp
call
cmp
loopne
jno
movs
ds
into
sahf
push
pop
repnz
(bad)
call
imul
loope
out
push
xchg
gs
and
cmp
jo
sbb
and
cmps
das
lods
aad
and
(bad)
jmp
(bad)
int3
fst
in
repnz
mov
xor
dec
js
sar
(bad)
call
sub
lahf
push
or
sar
out
lds
retf
pop
in
pop
sbb
(bad)
(bad)
jmp
dec
mov
cmp
mov
mov
outs
scas
not
(bad)
test
xor
inc
fs
dec
ds
imul
adc
push
sbb
stos
jle
and
jo
add
gs
sub
add
fcomip
call
jle
cs
inc
push
or
or
loop
or
inc
or
push
(bad)
(bad)
call
retf
or
cld
fucomip
xchg
sbb
fiadd
and
xor
in
inc
or
cmp
xor
xlat
inc
loope
jecxz
(bad)
(bad)
mov
idiv
xchg
scas
imul
xor
add
jmp
cld
dec
xchg
adc
repnz
(bad)
jg
add
lock
inc
adc
push
in
out
jo
ins
xor
xor
dec
das
jo
add
shl
fidivr
pop
pop
(bad)
(bad)
jmp
xor
xlat
cmp
push
repz
pop
push
or
dec
sub
dec
mov
(bad)
call
mov
and
jl
sbb
repnz
lds
cmp
and
lds
mov
push
test
js
jbe
(bad)
(bad)
dec
mov
xor
(bad)
(bad)
mov
shr
dec
movs
sar
push
out
add
jmp
(bad)
xchg
push
call
push
setne
pop
or
(bad)
mov
pop
rcl
out
leave
ins
(bad)
(bad)
jmp
(bad)
cmp
or
mov
outs
out
jb
fisttp
std
shl
add
leave
sub
ins
xchg
dec
js
(bad)
(bad)
(bad)
push
cmp
lock
mov
loopne
xor
test
xor
outs
clc
add
push
mov
ret
mov
int3
adc
ret
popaw
leave
into
retf
(bad)
(bad)
(bad)
push
in
push
cmps
xchg
push
out
or
cs
icebp
jbe
out
lods
iret
jp
fild
cmp
(bad)
(bad)
(bad)
clc
mov
xchg
(bad)
adc
sub
inc
cmps
sub
jle
pop
(bad)
(bad)
(bad)
jmp
mov
sahf
jb
rcl
call
and
sbb
pop
and
mov
mov
mov
pop
retf
ja
(bad)
int3
sub
jmp
add
test
sub
sbb
(bad)
push
push
push
mov
fistp
out
outs
nop
fsubr
sub
retf
pop
ja
dec
ret
(bad)
adc
inc
cmp
jmp
pop
cs
push
push
mov
(bad)
(bad)
inc
mov
xor
push
ins
shl
cld
or
mov
sbb
mov
(bad)
(bad)
push
call
xchg
adc
jo
in
(bad)
out
lods
jmp
(bad)
jl
jnp
or
popa
lods
and
pop
leave
cwde
inc
enter
lock
ds
(bad)
call
loop
shl
fcom
lds
clc
cmp
(bad)
out
adc
mov
push
add
popa
mov
xor
dec
es
(bad)
(bad)
(bad)
jmp
mov
movs
fisttp
mov
push
mov
mov
fs
call
add
cs
mov
jle
aaa
aad
scas
out
(bad)
fld
inc
sub
mov
cmp
(bad)
(bad)
(bad)
jmp
pop
(bad)
and
(bad)
mov
or
inc
jne
das
push
outs
in
out
adc
jl
out
mov
dec
or
xor
pusha
ret
les
(bad)
(bad)
mov
clc
cmps
mov
sbb
mov
mov
shr
(bad)
(bad)
push
mov
pop
xchg
push
jle
dec
mov
imul
fst
and
pushf
iret
je
lea
mov
push
pusha
dec
(bad)
(bad)
fcomp
mov
les
or
mov
xor
mov
push
fadd
fiadd
add
cmps
cmp
aaa
sbb
ret
add
lods
or
or
mov
cs
(bad)
(bad)
dec
movs
inc
sub
loope
or
out
push
push
retf
loopne
push
bound
sbb
mov
(bad)
(bad)
push
mov
mov
icebp
dec
or
fisttp
push
scas
mov
cdq
adc
xchg
dec
cwde
shr
sub
sub
push
adc
jg
(bad)
push
xchg
ins
call
js
jo
stos
scas
int
scas
cld
cmp
or
out
int
cmps
(bad)
call
sub
ja
adc
movs
add
or
(bad)
call
enter
cmps
pushf
jo
push
inc
push
outs
cmp
int3
aas
divps
inc
in
pop
mov
mov
add
sbb
hlt
push
xor
test
xchg
repnz
xchg
push
xor
or
mov
inc
loop
cdq
dec
jbe
cmp
jmp
out
shr
jmp
mov
lock
imul
les
mov
shl
lods
movs
(bad)
jno
and
and
or
inc
xor
push
sar
leave
add
mov
enter
xchg
add
(bad)
(bad)
call
dec
mov
hlt
mov
jns
xchg
aam
shl
mov
mov
xlat
or
push
(bad)
jmp
lock
stc
xor
xor
inc
cmp
mov
mov
push
jns
test
pop
aad
sub
call
pop
rcl
jbe
ss
addr16
and
cld
cmp
(bad)
in
dec
push
clc
(bad)
mov
mov
aaa
call
fidivr
mov
and
outs
stos
xor
(bad)
(bad)
call
cmp
jae
sbb
(bad)
sub
into
(bad)
rcl
inc
push
mov
jnp
pop
jp
fistp
cmps
push
call
mov
sub
adc
mov
jmp
(bad)
sar
test
fmulp
ret
(bad)
mov
mov
cld
sbb
jl
imul
cmc
leave
(bad)
(bad)
(bad)
(bad)
fcom
mov
pop
dec
retf
pop
or
mov
out
xchg
jl
popa
dec
sub
stos
xor
sub
(bad)
(bad)
call
movs
out
push
and
mov
cmps
pop
xchg
push
dec
cmp
int
mov
stos
inc
inc
(bad)
fcomip
sbb
jp
adc
ins
mov
dec
nop
xor
(bad)
inc
add
pop
or
and
shr
sbb
sub
hlt
das
stos
lods
add
(bad)
(bad)
jmp
pop
xchg
cmp
stos
call
out
retf
stos
jmp
inc
xchg
(bad)
(bad)
jns
(bad)
(bad)
jmp
rcl
lds
xchg
out
or
stc
mov
add
xchg
aam
(bad)
(bad)
(bad)
jmp
jecxz
xchg
push
fxtract
shl
or
sub
inc
sbb
test
adc
(bad)
(bad)
(bad)
inc
ret
aas
mov
cmp
sbb
mov
leave
cmp
jmpw
or
pop
scas
mov
test
push
xchg
(bad)
fdiv
loop
mov
sbb
ret
bound
push
sbb
sahf
std
xor
cmps
inc
xchg
ret
shl
out
out
test
cwde
(bad)
out
fcom
enter
cmp
jmp
jmp
int
mov
xor
jbe
mov
test
ret
in
sub
ds
jl
imul
cmp
(bad)
(bad)
push
ror
jg
mov
mov
out
xchg
mov
sbb
mov
popf
mov
(bad)
(bad)
mov
push
add
jae
lock
std
mov
sub
dec
cmp
and
xchg
lock
out
adc
push
add
(bad)
adc
adc
(bad)
call
es
push
cs
mov
fwait
in
ins
xlat
sar
(bad)
(bad)
mov
fimul
call
pop
aas
adc
jo
push
ficom
adc
pop
movs
cmp
(bad)
(bad)
(bad)
jmp
xchg
out
scas
aas
xchg
pop
inc
add
movs
ja
pop
dec
jl
js
or
mov
jg
(bad)
dec
mov
cmp
rcr
sub
lds
(bad)
(bad)
cli
dec
out
xchg
imul
cdq
fsubp
fst
mov
cmps
sar
xchg
xor
xor
sar
out
in
aaa
popa
jmp
loopne
cmps
jl
fs
(bad)
(bad)
call
retf
stos
sbb
out
nop
mov
fisttp
jnp
cmp
mov
aam
mov
(bad)
cmp
daa
out
movs
je
mov
out
std
test
(bad)
jmp
xor
mov
(bad)
cmc
(bad)
in
adc
dec
xchg
pop
leave
adc
mov
(bad)
call
pop
jns
pop
cld
popa
jno
lods
(bad)
sti
inc
call
(bad)
(bad)
mov
retf
mov
test
mov
rcpps
or
shl
add
stos
(bad)
(bad)
call
pop
add
(bad)
into
add
test
ror
xor
jno
jmp
(bad)
call
mov
xchg
aaa
(bad)
sbb
cmp
xor
dec
jnp
push
jg
mov
out
(bad)
(bad)
dec
add
test
fs
jmp
push
pushf
leave
(bad)
pop
test
push
dec
js
(bad)
(bad)
dec
pop
(bad)
cmps
cdq
sbb
fisubr
fadd
loop
sar
(bad)
(bad)
inc
js
push
loop
xchg
cmps
test
sbb
std
scas
ret
pushf
add
(bad)
stc
jmp
pop
ins
(bad)
je
xchg
add
shl
(bad)
(bad)
out
test
xchg
xchg
jne
add
sbb
pop
es
push
call
(bad)
out
adc
mov
inc
push
sbb
mov
sbb
bound
retf
cmp
shl
cmc
cmp
in
enter
call
sub
clc
ret
sbb
push
iret
cmc
dec
pop
mul
xchg
adc
jmp
mov
xchg
mov
inc
mov
lods
jle
xchg
ja
mov
inc
test
jg
mov
(bad)
(bad)
call
push
push
dec
addr16
xchg
push
ret
das
ffreep
inc
shl
mov
aam
inc
aas
sub
cmp
jno
loope
(bad)
je
lods
pop
pusha
sbb
rcl
xchg
(bad)
(bad)
(bad)
push
or
js
stos
mov
sub
dec
arpl
mov
in
inc
inc
(bad)
call
loopne
js
xchg
stos
sub
test
je
pushf
(bad)
sub
(bad)
(bad)
(bad)
call
movs
xchg
push
shr
mov
shl
push
adc
outs
xlat
cwde
sti
add
loope
in
pop
icebp
jmp
push
(bad)
sbb
fimul
iret
or
loope
call
(bad)
(bad)
(bad)
call
adc
lds
mov
sti
jle
not
scas
jne
jbe
inc
sub
(bad)
(bad)
(bad)
push
or
iret
and
push
and
jg
xchg
xlat
mov
mov
fwait
pop
sub
jmp
or
xor
mov
mov
inc
hlt
jecxz
sbb
sbb
dec
mov
daa
mov
cmp
or
(bad)
call
fdiv
cmp
mov
fs
idiv
(bad)
fucom
dec
mov
fist
fstp
add
xchg
pop
pop
retf
xchg
fstp
fs
call
xchg
(bad)
(bad)
mov
cld
sti
adc
mov
test
aaa
inc
(bad)
xor
das
pop
dec
jle
cmc
leave
es
xchg
sahf
stos
jg
sub
sahf
cli
call
add
std
sub
call
(bad)
(bad)
jg
and
das
or
sub
das
pusha
out
int
or
stos
aas
add
(bad)
(bad)
cmp
es
jle
cmp
pop
push
xor
call
nop
jbe
xchg
fdiv
xchg
add
mov
cmp
jbe
pop
mov
dec
loope
push
ins
(bad)
or
cld
pop
sbb
pop
retf
int3
inc
xlat
int3
out
sbb
xor
jmp
(bad)
jg
mov
mov
inc
sub
pop
(bad)
jns
sub
(bad)
(bad)
mov
mov
jo
jp
mov
test
shr
std
adc
lock
(bad)
(bad)
call
es
push
arpl
std
stos
repz
mov
xlat
iret
enter
mov
std
(bad)
mov
fwait
bound
xchg
adc
push
xor
in
jbe
jg
(bad)
jmp
xor
(bad)
(bad)
add
rcr
push
push
(bad)
scas
(bad)
(bad)
mov
xor
or
nop
add
push
bnd
pop
cmp
test
jp
push
scas
jmp
pop
and
mov
lea
sub
shl
leave
push
cwde
sbb
icebp
or
xacquire
(bad)
jmp
push
(bad)
aas
xchg
adc
or
out
mov
aam
sar
ins
and
(bad)
(bad)
call
cld
mov
(bad)
std
pop
adc
out
out
mov
test
cdq
stc
add
push
and
fwait
pop
out
adc
fld
pop
and
jnp
mov
js
int3
jecxz
je
in
jmp
nop
clc
(bad)
inc
aam
fsubr
add
sub
xor
repnz
cld
aas
mov
inc
std
ja
xchg
iret
pop
pop
push
inc
or
inc
jg
add
add
jno
cmp
call
sub
stos
sti
pop
inc
mov
sub
mov
(bad)
(bad)
mov
sahf
pop
ds
sbb
mov
pop
pop
dec
mov
(bad)
std
imul
popf
cmps
push
scas
inc
lods
mov
movs
lds
sbb
jmp
xchg
and
xor
(bad)
(bad)
call
repnz
mov
shr
xchg
push
retf
test
mov
jb
mov
ds
sub
(bad)
mov
inc
cmp
jg
add
mov
fisubr
jo
loop
(bad)
call
or
fs
fistp
push
lock
jp
mov
cmp
(bad)
mov
push
lds
mov
fidivr
mov
(bad)
jmp
add
dec
mov
inc
sahf
push
pop
and
popf
js
xchg
lods
mov
(bad)
(bad)
call
pusha
shl
add
jne
mov
inc
and
add
inc
or
xlat
jbe
(bad)
inc
nop
pop
imul
out
rcr
test
mov
cmps
les
icebp
(bad)
(bad)
(bad)
fcomp
add
mov
cwde
push
push
cmp
(bad)
sbb
scas
pop
das
pop
hlt
xchg
jbe
(bad)
(bad)
fistp
mov
dec
cs
das
retf
add
retf
push
inc
mov
(bad)
(bad)
push
fwait
sbb
rcl
mov
mov
xor
mov
(bad)
(bad)
fbstp
ins
jmp
xchg
stos
fwait
add
cmps
and
add
mov
inc
dec
adc
not
(bad)
lahf
inc
retf
mov
mov
jecxz
pop
xor
scas
cdq
les
add
dec
inc
dec
sub
inc
(bad)
fistp
xchg
pop
inc
std
or
dec
call
repz
(bad)
jmp
sub
mov
adc
pop
test
jle
inc
(bad)
(bad)
(bad)
inc
call
daa
pop
and
jns
popa
mov
and
mov
clc
and
(bad)
(bad)
call
gs
stos
in
mov
jg
xlat
cdq
clc
fisubr
mov
aas
call
(bad)
(bad)
(bad)
jmp
movs
ret
jp
add
mov
sbb
mov
cmps
push
inc
fwait
mov
and
rcl
(bad)
pop
cmp
pushf
jl
xchg
call
cmp
ret
lea
imul
dec
pop
xchg
and
cdq
clc
(bad)
jmp
test
xor
sub
dec
inc
cld
mov
push
dec
xchg
push
(bad)
cmp
(bad)
pop
std
sbb
inc
lahf
pushf
mov
(bad)
(bad)
(bad)
dec
xchg
(bad)
cmc
xor
cwde
out
or
add
jge
sbb
jp
repnz
mov
mov
jg
lods
call
mov
dec
outs
pop
fiadd
fsubr
aam
(bad)
cmp
jo
xor
(bad)
push
xchg
xchg
sar
mov
xchg
ja
popf
push
gs
dec
(bad)
ds
(bad)
call
push
movs
jo
push
retf
gs
fsubr
fimul
outs
ss
dec
iret
loop
sbb
scas
mov
xor
xchg
mov
clc
pop
ds
es
inc
(bad)
(bad)
(bad)
call
not
jecxz
adc
mov
iret
add
lods
mov
or
call
inc
loope
ins
add
adc
call
adc
mov
(bad)
(bad)
jmp
movs
iret
xor
fsub
push
(bad)
or
aas
xor
push
pop
xchg
repnz
xchg
jecxz
or
cmc
pop
aad
cs
sbb
xor
(bad)
(bad)
call
enter
adc
(bad)
adc
aam
add
cmp
xlat
mov
iret
test
clc
(bad)
(bad)
dec
push
pop
lods
loopne
cmp
pusha
sub
fs
jg
dec
inc
push
xchg
test
jno
(bad)
inc
test
mov
or
cld
cdq
fbstp
(bad)
dec
xchg
and
ret
cmp
pop
fs
mov
xchg
jecxz
sti
push
loop
fst
(bad)
call
sub
sub
sub
ret
jbe
iret
repnz
ins
je
(bad)
(bad)
jg
call
fldenv
push
fiadd
mov
push
push
ret
(bad)
jmp
cmp
mov
dec
fnstenv
pop
stos
dec
sub
fisttp
(bad)
inc
ins
fild
repnz
mov
cmps
movs
xor
call
dec
imul
aas
jae
(bad)
(bad)
(bad)
inc
ret
mov
ins
jg
jge
sar
enter
xchg
mov
(bad)
(bad)
(bad)
(bad)
cmp
or
dec
call
sub
xchg
icebp
ins
jl
(bad)
and
and
shl
lock
out
jmp
cmp
pop
mov
xchg
and
dec
push
jne
mov
lds
iret
sbb
(bad)
fcomip
(bad)
mov
pop
outs
sahf
test
push
rcl
test
mov
pop
mov
or
out
mov
mov
or
inc
or
lock
cli
jns
bound
les
test
mov
ror
inc
cld
ss
add
adc
and
in
cld
jg
out
cld
shl
call
std
call
push
out
xor
cdq
pop
jg
xchg
icebp
fsubr
mov
arpl
push
(bad)
(bad)
(bad)
jmp
push
dec
ins
and
fwait
jmp
nop
sbb
cs
out
sub
scas
call
adc
jmp
ins
loopne
out
fstp
pop
dec
js
(bad)
dec
jl
icebp
mov
pop
jmp
inc
and
sti
cmp
jns
mov
push
pop
(bad)
call
xor
cli
sar
xlat
jne
mov
(bad)
mov
pop
jae
xchg
ja
clc
jmp
xor
jge
dec
push
fcomip
loopne
fbstp
fimul
in
inc
rcl
fisttp
adc
pop
jo
mov
jg
push
gs
ins
adc
retf
clc
inc
xchg
repnz
cmps
and
push
call
push
sbb
clc
sbb
fwait
inc
pop
icebp
(bad)
push
add
lea
xor
add
xlat
(bad)
(bad)
(bad)
(bad)
std
icebp
retf
and
add
mov
adc
loop
mov
mov
lods
inc
pusha
scas
mov
(bad)
(bad)
jmp
loope
mov
dec
adc
xor
or
retf
sbb
fs
(bad)
call
test
adc
jmp
cli
jmp
sub
push
je
ret
sbb
les
mov
mov
scas
clc
idiv
jno
mov
popf
mov
sbb
dec
pop
inc
push
fisttp
mov
aas
(bad)
mov
cli
push
push
push
fbld
mov
add
push
sub
fdivrp
(bad)
(bad)
dec
xor
mov
mov
jb
not
jg
nop
dec
pop
sahf
aam
push
lea
(bad)
inc
dec
adc
scas
loope
shl
dec
jb
jno
stc
fbstp
ret
or
mov
into
xchg
jle
xlat
push
imul
loop
sar
(bad)
jg
jmp
sub
sti
adc
leave
daa
das
pop
dec
xor
mov
std
sahf
push
inc
push
shl
scas
push
cli
popfw
outs
sbb
movs
retf
dec
test
cmps
jmp
jbe
or
sbb
gs
je
aam
stos
in
(bad)
push
mov
xchg
icebp
call
mov
pop
pusha
and
or
(bad)
(bad)
dec
mov
out
(bad)
fdivr
mov
dec
or
xor
es
in
mov
cli
mov
call
jl
inc
xor
inc
jge
adc
(bad)
out
pop
test
gs
mov
ds
xor
jo
cmp
out
lock
shr
cmps
xchg
loopne
clc
(bad)
push
jo
add
in
xchg
int3
xchg
pop
mov
(bad)
(bad)
call
push
mov
not
mov
loope
mov
sbb
push
faddp
daa
cmps
mov
movs
out
es
(bad)
(bad)
(bad)
call
xor
ret
mov
mov
inc
shl
push
call
ret
call
dec
xchg
dec
dec
xchg
inc
jbe
repz
test
jmp
loop
test
inc
fdivrp
call
xchg
push
mov
mov
mov
mov
icebp
or
(bad)
jmp
sbb
jle
sahf
and
test
hlt
pushf
movs
fisttp
pop
loopne
outs
and
in
jp
(bad)
lea
sbb
lods
mov
out
push
xchg
cmp
(bad)
call
das
in
xor
retf
mov
ror
sub
lock
push
sub
fisttp
ret
out
inc
ins
add
mov
(bad)
sbb
push
cmp
shl
sbb
ja
int3
data16
mov
push
add
jg
sub
or
fcom
retf
sbb
das
std
xlat
(bad)
(bad)
jg
add
pop
push
dec
rcl
clc
or
aaa
push
stos
jno
in
leave
xchg
lock
(bad)
call
in
cs
stos
mov
(bad)
into
aam
inc
popf
sti
out
add
inc
push
pop
xchg
into
arpl
sbb
fadd
pop
dec
std
mov
and
mov
cmp
jne
adc
das
ins
or
(bad)
call
outs
jl
jno
pop
xchg
jge
lea
push
dec
jmp
ds
mov
or
pop
cdq
shl
(bad)
jmp
mov
gs
add
mov
lea
cmp
push
mov
mov
push
push
jmp
jmp
(bad)
aad
fstp
ficom
fdivr
dec
cmc
xchg
(bad)
(bad)
(bad)
fild
fwait
cmp
sub
or
stc
xlat
mov
ins
add
push
add
cmps
inc
int3
or
sbb
jmp
mov
jg
call
(bad)
aas
fs
add
add
dec
fdiv
sbb
xchg
pop
bound
(bad)
call
fdiv
popf
adc
dec
adc
repz
in
(bad)
(bad)
pusha
mov
dec
ret
neg
jp
ret
(bad)
sahf
dec
add
lea
mov
ss
dec
pop
pop
and
push
mov
cld
aaa
cld
inc
sbb
jb
push
das
(bad)
(bad)
(bad)
dec
xlat
(bad)
cmps
(bad)
(bad)
pop
arpl
jae
cmp
ret
out
icebp
mov
daa
jg
mov
(bad)
dec
repnz
mov
inc
pushf
jmp
int
hlt
jecxz
(bad)
bswap
xchg
lock
(bad)
cmp
pop
cmp
cmp
jle
mov
(bad)
jmp
imul
das
push
mov
test
call
pop
mov
ds
add
jnp
int
popf
cmp
fcos
(bad)
(bad)
inc
imul
inc
fild
ds
inc
test
jne
jle
pop
and
jg
(bad)
jmp
mov
stos
inc
sahf
sub
add
outs
std
pop
cmp
(bad)
inc
(bad)
out
jns
out
stos
fadd
dec
cmp
mov
pop
aaa
(bad)
add
mov
(bad)
(bad)
js
add
pop
sub
retf
sbb
mov
xor
push
dec
repz
call
loope
mov
xor
out
out
or
scas
cmp
cmps
(bad)
lea
les
or
adc
push
cmps
jae
mov
les
mov
xchg
sub
mov
out
push
xchg
mov
mov
ja
add
(bad)
jmp
and
rol
in
xchg
mov
loopne
cld
xlat
inc
mov
xor
ss
jmp
clc
sbb
outs
cmp
fild
(bad)
jg
push
push
movs
scas
scas
int
inc
scas
fbld
lods
or
pop
mov
(bad)
(bad)
push
or
test
jbe
mov
jge
in
pop
stc
or
(bad)
jo
in
jle
xchg
(bad)
(bad)
(bad)
inc
add
out
sbb
push
jge
mov
jne
sbb
ret
add
out
outs
enter
and
(bad)
(bad)
mov
nop
sti
push
jecxz
adc
and
ins
cmp
sbb
jmp
les
mov
iret
shr
(bad)
(bad)
jmp
mov
out
push
enter
push
pop
sar
shr
inc
inc
repnz
(bad)
(bad)
(bad)
mov
dec
sbb
cwde
dec
pop
jmp
sub
in
jmp
mov
jecxz
jmp
mov
jmp
mov
dec
addr16
jmp
mov
outs
aaa
mov
ficomp
mov
add
sub
mov
or
ja
sbb
push
call
jg
and
pop
mov
jb
fbld
(bad)
(bad)
(bad)
push
and
fmul
sub
xchg
and
in
call
sbb
gs
dec
xchg
mov
hlt
lods
sub
add
xor
cmp
inc
cld
out
(bad)
(bad)
(bad)
call
mov
stc
out
xchg
ret
ret
xor
xor
aam
je
cli
mov
push
sti
mov
xchg
mov
mov
(bad)
sahf
pop
rol
pop
adc
sbb
(bad)
push
push
pop
mov
jg
cmp
jmp
sub
cmp
push
mov
(bad)
(bad)
jmp
pop
rcl
imul
jg
stos
push
xor
push
cmp
fld
retf
lock
out
sbb
int
cwde
xchg
push
into
push
add
clc
push
adc
cmc
add
clc
mov
retf
retf
(bad)
cmp
mov
add
(bad)
(bad)
inc
stos
jae
or
outs
inc
setns
(bad)
aas
dec
add
out
cmp
stos
into
cmps
ret
pop
(bad)
(bad)
(bad)
in
test
ins
dec
cwde
and
test
(bad)
pop
jbe
pop
scas
(bad)
push
mov
mov
imul
push
scas
jne
add
mov
(bad)
(bad)
aas
(bad)
dec
fwait
int3
xchg
mov
push
mov
jle
jae
inc
loop
sbb
stos
(bad)
(bad)
push
or
cli
add
lea
movs
jmp
cmps
jne
pushf
neg
mov
dec
(bad)
(bad)
(bad)
(bad)
jp
push
sub
cmps
vpsubw
mov
pop
sbb
jmp
ins
sub
je
mov
(bad)
(bad)
cmp
sbb
enter
test
(bad)
out
retf
xor
cwde
enter
(bad)
mov
(bad)
jmp
pop
mov
push
out
and
(bad)
(bad)
jmp
(bad)
push
stos
mov
enter
lock
(bad)
mov
inc
inc
retf
mov
push
shl
mov
call
inc
push
imul
or
in
mov
dec
and
(bad)
(bad)
call
leave
call
adc
jns
faddp
ins
popf
xor
mov
xchg
(bad)
(bad)
push
sbb
repz
int
aam
shl
cmp
jecxz
bound
scas
xchg
mov
pop
push
std
(bad)
inc
cmp
jns
int
or
pop
es
xor
jae
jmp
inc
cmps
mov
and
or
xchg
or
dec
ja
or
pop
jo
(bad)
(bad)
(bad)
mov
jbe
adc
push
pop
test
adc
inc
or
movs
mov
call
push
test
test
and
loopne
imul
ret
jle
(bad)
(bad)
(bad)
call
repz
dec
mov
fcomp
cwde
add
xor
sub
mov
(bad)
(bad)
call
mov
mov
lea
movs
test
or
rol
or
call
nop
mov
jp
aam
pop
xor
and
sbb
cmp
xor
inc
fst
(bad)
call
arpl
jae
in
jle
pop
sub
in
scas
add
ja
fucomip
pop
pop
mov
push
test
adc
scas
push
icebp
inc
loopne
mov
pop
ffree
sbb
fcomip
(bad)
(bad)
fsub
(bad)
push
dec
fimul
scas
iret
ss
adc
pop
out
mov
test
fidivr
or
add
(bad)
es
fs
clc
(bad)
jmp
(bad)
cwde
sub
push
out
sbb
scas
push
adc
into
xchg
(bad)
(bad)
(bad)
dec
fwait
pop
xor
adc
ja
out
cli
mov
fdiv
jae
(bad)
fs
stos
cmp
xor
out
push
sub
xchg
ds
jl
sbb
mov
mov
test
pop
out
add
pop
jmp
icebp
loop
dec
imul
jg
sub
stc
pop
push
fs
dec
neg
push
movs
pop
sar
in
push
cld
(bad)
(bad)
(bad)
fucomip
(bad)
les
xchg
mov
add
rol
test
or
mov
push
(bad)
jg
add
mov
mov
push
shr
xor
pop
out
jae
stc
jge
push
inc
xor
jle
push
cmp
pop
add
ins
ins
sbb
or
adc
nop
or
not
cwde
cdq
(bad)
(bad)
call
pop
sbb
rcl
sub
mov
jo
sbb
adc
scas
adc
dec
cmps
fs
mov
lods
pop
pop
cmp
(bad)
call
xor
push
mov
mov
cld
cmp
cwde
ss
xor
(bad)
call
movs
jmp
pushf
popf
data16
rol
cmp
sub
dec
(bad)
(bad)
jmp
and
ins
add
adc
gs
scas
fs
cmp
test
ret
pop
jg
sub
in
push
call
or
(bad)
(bad)
(bad)
call
cmp
add
or
pop
shl
mov
xchg
in
lds
(bad)
(bad)
(bad)
inc
rcl
scas
fisttp
shl
xor
ss
out
cmp
scas
adc
jle
(bad)
mov
loope
inc
push
aam
rcl
fs
pop
dec
(bad)
(bad)
(bad)
call
mov
in
pop
es
push
das
cli
mov
xchg
stos
data16
daa
jl
retf
cmp
pop
or
lods
ins
vmovhpd
outs
(bad)
(bad)
(bad)
jmp
add
(bad)
mov
repz
pop
pop
fyl2xp1
dec
(bad)
mov
aas
jnp
pop
mov
popf
loopne
std
repz
(bad)
outs
imul
pop
aad
ja
pop
arpl
outs
sub
jmp
cli
in
cs
nop
and
push
adc
in
stc
push
cmc
sbb
cwde
inc
jl
test
dec
mov
repz
(bad)
cdq
mov
adc
cmp
scas
sub
adc
fcomip
jmp
and
jb
jb
jbe
outs
(bad)
lods
xchg
mov
jle
cwde
sbb
adc
and
scas
es
in
rol
cmp
mov
xor
hlt
mov
fsubr
inc
push
and
jmp
dec
bound
mov
dec
mov
jnp
(bad)
(bad)
(bad)
push
pop
pop
cmps
push
(bad)
lods
xchg
xor
popa
aam
jmp
mov
(bad)
(bad)
dec
idiv
sub
and
les
je
rcl
cmc
xlat
hlt
fwait
loope
(bad)
jmp
sahf
cdq
inc
lds
stc
xchg
adc
iret
adc
sub
loope
push
inc
push
xor
(bad)
cmp
push
jmp
popf
pop
cmps
xor
pop
mov
sti
retf
cs
sti
mov
inc
sar
fwait
jnp
sub
sahf
adc
fimul
or
inc
loope
pop
pop
adc
daa
ja
cld
div
xchg
jmp
fbld
sbb
and
inc
adc
outs
cmps
or
xor
(bad)
fistp
push
mov
loopne
scas
hlt
dec
cmp
test
fsubrp
add
dec
mov
(bad)
call
mov
dec
iret
outs
leave
mov
stos
inc
daa
xchg
jge
addr16
pop
scas
adc
add
jp
(bad)
(bad)
inc
int3
push
out
xchg
aaa
cs
popa
inc
imul
mov
dec
outs
xchg
sar
stc
sti
nop
mov
mov
dec
cmp
add
in
push
dec
cmp
(bad)
(bad)
(bad)
jmp
ss
jnp
add
pushf
sbb
lock
retf
push
in
jl
icebp
push
ret
inc
adc
stos
add
ret
mov
(bad)
push
stc
and
xchg
push
clc
out
cli
pop
sbb
ret
sbb
call
loop
mov
loope
inc
xor
cmc
in
xchg
push
fmul
and
(bad)
call
pop
cmp
dec
ss
xchg
mov
dec
daa
sete
push
adc
mov
movs
dec
lds
pop
cmp
(bad)
(bad)
(bad)
(bad)
out
fild
cld
fdivp
xor
pop
fld
mov
leave
and
shl
cld
test
jl
(bad)
(bad)
jmp
in
push
xor
xor
fstp
inc
jle
jp
repnz
or
dec
lods
(bad)
(bad)
(bad)
jmp
pusha
call
fimul
add
jp
in
and
mov
mov
call
pusha
(bad)
adc
das
into
dec
out
mov
dec
mov
dec
mov
shl
call
dec
and
test
in
adc
cmp
xchg
lahf
cs
dec
push
stos
mov
(bad)
(bad)
jmp
and
fs
fnstsw
js
pop
in
push
neg
mov
inc
mov
pop
out
mov
enter
dec
in
nop
jge
mov
and
repz
sub
rcl
call
inc
or
lods
push
mov
push
test
test
push
cmps
test
sub
mov
fwait
jp
scas
lahf
adc
mov
pop
(bad)
(bad)
push
addr16
xchg
sbb
cmp
scas
mov
dec
xchg
lock
dec
aas
hlt
addr16
dec
or
div
and
fadd
call
cmps
pushw
hlt
(bad)
(bad)
jmp
mov
mov
xor
push
or
dec
out
xchg
test
inc
fwait
sbb
outs
cdq
loop
xor
hlt
rol
aad
outs
in
das
inc
(bad)
(bad)
(bad)
(bad)
mov
jne
inc
adc
mov
test
repz
mov
xchg
sub
aas
fisub
(bad)
(bad)
mov
fdiv
ror
push
fistp
inc
call
mov
rcl
(bad)
(bad)
jmp
jnp
ret
gs
scas
and
jo
je
cdq
js
add
out
(bad)
(bad)
(bad)
(bad)
jg
pop
inc
mov
pusha
aad
push
icebp
mov
rcr
push
es
repz
sti
(bad)
and
(bad)
(bad)
push
pop
addr16
inc
jns
neg
pop
pop
or
or
jns
sub
ret
(bad)
call
in
out
mov
xor
jmp
xor
xor
and
aaa
daa
(bad)
call
idiv
add
xchg
adc
sub
adc
(bad)
inc
add
cmc
sbb
xor
mov
ins
xchg
inc
imul
(bad)
js
(bad)
call
dec
cvttps2pi
mov
(bad)
fidiv
sub
call
(bad)
(bad)
inc
sub
sbb
clc
push
jns
inc
aam
dec
dec
jnp
repnz
and
(bad)
dec
push
popa
add
je
(bad)
icebp
sub
mov
and
mov
fcmovnb
or
mov
out
adc
lahf
test
mov
(bad)
(bad)
inc
je
jmp
dec
jns
aas
test
xchg
in
mov
sahf
mov
movs
das
call
adc
idiv
mov
jo
(bad)
iret
outs
retf
dec
add
stos
test
mov
(bad)
(bad)
(bad)
(bad)
out
add
psubsw
fs
stc
clc
mov
sti
dec
mov
mov
jle
retf
(bad)
dec
js
add
xchg
jecxz
push
xchg
pop
mov
ins
lock
cmc
pop
(bad)
(bad)
(bad)
call
in
jge
mov
sbb
loop
cmc
pop
lock
xchg
and
and
or
(bad)
jg
js
adc
or
std
and
das
lods
aas
mov
inc
das
out
pop
pop
repnz
mov
cmp
call
sbb
inc
shr
xor
jge
cmp
jg
mov
add
(bad)
(bad)
mov
jb
cmp
or
or
scas
icebp
sar
out
(bad)
(bad)
(bad)
jg
mov
dec
aam
jg
(bad)
retf
xor
sub
or
shr
cdq
out
lods
inc
mov
(bad)
fbstp
pop
mov
jmp
or
ret
loopne
or
not
jcxz
sar
mov
cld
xor
daa
jecxz
xchg
mov
outs
cwde
xchg
sub
mov
(bad)
inc
lock
add
and
push
add
push
repnz
add
(bad)
outs
stc
dec
mov
pusha
inc
push
out
shl
pop
push
cmps
cmps
enter
int
outs
nop
icebp
(bad)
jl
mov
dec
and
mov
inc
pop
jo
mov
cmps
mov
pop
das
jnp
imul
popa
xchg
clc
fcomp
inc
pop
cmp
cs
mov
inc
jmp
jge
test
js
mov
test
mov
dec
push
push
imul
mov
out
lods
call
pmuludq
(bad)
inc
fisub
adc
push
adc
(bad)
xor
fdiv
mov
cli
das
sbb
popf
adc
mov
into
(bad)
call
std
xor
popf
ror
outs
or
fmulp
rol
lea
out
les
(bad)
call
push
sub
sub
out
sub
fcomp
xor
pop
bound
inc
push
lahf
out
fwait
aas
jp
add
inc
jne
(bad)
jns
iret
cmp
arpl
pusha
cmp
(bad)
(bad)
(bad)
jmp
stos
mov
add
add
out
aam
xchg
add
sub
jae
retf
push
(bad)
(bad)
(bad)
dec
inc
and
fimul
stos
pop
jmp
mov
out
and
mov
xor
mov
mov
nop
and
cs
xchg
lock
jmp
sti
adc
or
xlat
and
jae
(bad)
hlt
xchg
stc
fist
aaa
dec
xlat
mov
add
push
lods
xchg
mov
ror
gs
(bad)
(bad)
(bad)
sahf
lods
xchg
ret
jmp
lods
test
daa
in
add
fneni(8087
sar
mov
jl
pop
push
(bad)
fcomip
call
add
daa
arpl
outs
push
inc
and
js
mov
(bad)
mov
sbb
and
sbb
adc
cld
ins
xor
sti
cmp
mov
movs
xchg
ret
movs
sahf
retf
mov
(bad)
(bad)
jmp
shl
mov
es
test
push
stos
(bad)
cmp
enter
xchg
aam
sbb
retf
pop
loop
leave
retf
and
push
cli
mov
push
in
lock
stos
pop
scas
loopne
sub
add
(bad)
(bad)
(bad)
mov
popf
in
fnclex
fisub
xchg
int
xchg
adc
jns
pop
fidivr
in
aad
cmp
call
and
jp
js
loope
pop
data16
sbb
sub
inc
xchg
cmp
inc
fs
shr
out
adc
push
and
push
push
add
sub
and
pusha
adc
and
or
pop
arpl
inc
aas
xor
fwait
jmp
int
ds
aaa
adc
push
mov
jmp
in
nop
es
pop
jg
inc
xor
movs
mov
std
pop
fdivr
loop
push
sub
ins
imul
(bad)
mov
bswap
push
loopne
xchg
push
adc
(bad)
jmp
out
xor
pop
xchg
jg
sbb
push
xor
pop
dec
mov
xchg
pop
icebp
cmp
scas
repz
mov
arpl
and
jo
push
or
lock
arpl
(bad)
ds
xchg
push
xlat
mov
adc
or
dec
clc
sub
(bad)
(bad)
call
pop
mov
les
mov
repnz
xchg
push
and
(bad)
(bad)
jmp
sahf
or
cmps
rcr
daa
cmc
out
stos
int3
or
scas
fst
fsub
test
jbe
cmc
call
cmc
sub
and
sub
cmps
(bad)
call
iret
pushf
aas
arpl
jge
dec
not
jb
jne
(bad)
push
jecxz
(bad)
(bad)
(bad)
call
test
sub
cs
push
mov
hlt
ret
cmp
pop
jmp
pusha
fadd
sahf
add
push
or
push
mov
sbb
mov
ret
xor
mov
jl
mov
mov
es
ret
daa
test
sti
shl
stos
jno
sbb
push
dec
mov
(bad)
(bad)
(bad)
cmp
test
mov
adc
xchg
and
push
xchg
sub
sbb
(bad)
(bad)
push
std
xchg
enter
sub
adc
lods
std
mov
bound
retf
call
sbb
inc
mov
iret
dec
sub
pop
scas
cmp
sbb
aam
jmp
std
call
movs
repnz
dec
aam
and
xor
cmp
movs
lods
pop
and
sar
mov
cmp
cli
jg
or
xchg
mov
nop
mov
js
ins
lock
xor
xor
into
xchg
ins
(bad)
(bad)
(bad)
jmp
mov
aad
jae
xor
test
retf
mov
sbb
jle
(bad)
loopne
cdq
jle
(bad)
(bad)
jmp
mov
cld
popa
inc
mov
dec
bound
inc
pop
icebp
sti
rol
out
mov
cwde
sbb
jmp
inc
inc
fisub
inc
loope
hlt
lea
enter
cs
add
add
(bad)
cmp
adc
gs
aaa
pop
fs
mov
jmp
aas
outs
or
ror
push
add
xor
(bad)
mov
and
(bad)
(bad)
jmp
(bad)
lods
movs
cli
pop
jp
cmc
fs
imul
jbe
cli
in
inc
push
sbb
cmp
(bad)
(bad)
jmp
xor
push
dec
test
cmp
stos
jl
inc
lahf
jg
cwde
sahf
popa
jno
push
xchg
push
(bad)
(bad)
mov
cld
inc
scas
mov
push
mov
popf
test
in
inc
pop
cmps
or
ud0
(bad)
dec
add
mov
mov
fstp
rcr
jnp
stos
ficomp
(bad)
jg
clc
jne
in
inc
sbb
imul
ds
pushf
jmp
dec
mov
jnp
movs
or
js
xchg
pop
jg
adc
xchg
push
fs
cmp
pop
hlt
sbb
jnp
jne
(bad)
(bad)
(bad)
dec
xor
xlat
ins
sub
ins
xor
test
repnz
lds
popa
jb
test
xor
call
in
clc
pop
push
or
cmp
jp
pop
add
and
jae
bound
or
xor
(bad)
cmps
pop
jne
retf
aas
cmp
inc
sbb
(bad)
(bad)
(bad)
dec
mov
push
pop
hlt
call
adc
outs
ret
cmps
or
out
(bad)
pop
(bad)
(bad)
(bad)
(bad)
fadd
pop
sbb
movs
cmp
jb
lahf
mov
jmp
jns
leave
mov
outs
pop
cld
(bad)
inc
cmp
inc
inc
lods
xor
adc
stc
jae
pushf
fist
(bad)
(bad)
(bad)
cmp
out
enter
cmp
add
dec
push
mov
fsubr
dec
xchg
nop
inc
jg
jno
out
mov
adc
mov
call
rcl
sub
push
push
add
and
data16
sub
inc
movs
cmp
adc
icebp
(bad)
inc
xchg
js
and
stos
dec
adc
push
(bad)
loop
(bad)
jg
scas
je
jns
repnz
shl
test
es
jbe
cmps
pop
dec
sbb
pusha
scas
xor
(bad)
(bad)
call
push
test
xchg
scas
rcl
xchg
mov
push
sbb
xchg
xlat
adc
inc
xchg
ins
cmp
pusha
xor
inc
dec
pop
adc
(bad)
fst
scas
lds
retf
inc
loop
pop
mov
dec
aad
mov
cmps
pop
(bad)
jbe
sbb
loopne
push
push
fiadd
xor
(bad)
mov
fs
shl
and
stos
cmps
sub
push
(bad)
aas
stos
call
test
inc
fcmovnbe
sahf
adc
mov
adc
or
outs
pop
mov
movs
clc
dec
sub
jp
fwait
inc
push
mov
(bad)
(bad)
(bad)
dec
cld
xchg
mov
ja
mov
push
gs
sbb
mov
ins
(bad)
(bad)
(bad)
jmp
(bad)
out
stc
sub
cmp
jge
hlt
loop
cmp
jae
inc
mov
fwait
test
(bad)
jmp
mov
stos
daa
loope
push
and
and
mov
or
sub
scas
mov
and
out
xchg
cdq
pop
or
(bad)
fdiv
(bad)
jmp
adc
lods
jge
or
dec
out
lods
push
xor
pop
sbb
aaa
jb
aad
mov
(bad)
mov
sbb
shl
add
(bad)
rcr
jae
aaa
std
(bad)
call
ffree
ins
cmp
out
stos
bound
lock
add
popf
xor
(bad)
(bad)
push
mov
mov
fidivr
jns
fdiv
or
or
(bad)
(bad)
dec
es
pop
ficomp
push
push
pop
xor
push
in
outs
mov
stc
mov
pop
(bad)
(bad)
(bad)
call
xor
pop
push
adc
mov
xchg
cwde
mov
fwait
jnp
out
stos
aam
mov
(bad)
jmp
sbb
adc
paddq
clc
pop
or
adc
jle
(bad)
(bad)
mov
mov
xlat
push
and
sub
pop
jnp
jmp
movs
push
pushw
(bad)
(bad)
(bad)
jmp
sbb
aas
jge
mov
cmp
cli
cmp
push
pusha
jne
push
push
cmp
(bad)
push
bound
ja
std
sar
mov
pop
add
ret
cli
dec
mov
sub
add
jmp
and
pop
shr
ret
push
and
stos
(bad)
(bad)
(bad)
(bad)
js
and
xor
bound
nop
(bad)
sub
sbb
pop
ss
scas
pop
mov
(bad)
(bad)
dec
pop
push
adc
or
push
test
dec
call
outs
nop
inc
fdivr
(bad)
(bad)
call
sbb
rcr
add
jne
xchg
pop
loopne
mov
mov
mov
jmp
fmul
jge
(bad)
(bad)
dec
inc
adc
aas
ret
or
lds
cwde
cwde
stc
neg
cmps
call
lock
cmp
out
jg
pcmpgtb
enter
aas
mov
adc
(bad)
(bad)
jmp
xlat
lahf
push
mov
cmp
xchg
test
into
add
pop
lea
xchg
(bad)
(bad)
inc
add
push
(bad)
fmul
sub
jnp
ds
push
push
add
mov
(bad)
inc
stos
sub
test
fcom
pop
std
vfmadd231pd
fcomp
es
icebp
shr
jp
jmp
rcl
pop
retf
mov
sbb
shl
add
xchg
(bad)
(bad)
(bad)
out
movs
inc
dec
das
mov
cmps
in
daa
pop
neg
movs
mov
inc
xchg
in
inc
(bad)
stos
adc
(bad)
call
ins
mov
lock
lods
repnz
jne
call
in
(bad)
(bad)
jmp
sbb
or
out
pop
pop
jp
std
push
imul
retf
dec
fadd
les
sahf
jmp
jle
mov
cld
pop
(bad)
test
mov
shr
iret
aaa
inc
and
sbb
lock
in
mov
push
mov
sbb
(bad)
xlat
add
das
and
(bad)
(bad)
(bad)
dec
cmp
xchg
lock
xchg
or
or
test
test
xchg
std
imul
(bad)
jmp
sbb
lods
jne
jecxz
fwait
(bad)
loopne
(bad)
ror
pop
fsubp
xchg
adc
(bad)
(bad)
(bad)
(bad)
js
cmp
inc
fimul
cmc
or
add
or
or
mov
test
rcr
or
dec
pop
aas
inc
xor
jmp
jae
mov
jno
popf
repz
loope
sahf
(bad)
jg
adc
inc
add
test
inc
jmp
dec
and
dec
aaa
aas
cld
test
(bad)
cmp
pop
mov
test
aam
test
movs
or
jbe
push
rcl
cld
(bad)
push
fisubr
adc
lds
mov
xor
or
cmp
aam
xchg
push
mov
inc
int
(bad)
(bad)
jmp
dec
in
or
sbb
adc
mov
and
fisttp
nop
or
jmp
ds
push
(bad)
(bad)
(bad)
jmp
fmul
out
jnp
and
adc
push
jbe
shr
hlt
cmp
and
adc
outs
jmp
mov
cs
cdq
mov
retf
shl
sar
fwait
and
sub
call
lods
dec
jg
ja
xchg
aam
jmp
pop
imul
xchg
cmc
fld
jmp
(bad)
(bad)
mov
and
in
shl
sbb
jmp
fld1
aaa
(bad)
(bad)
(bad)
dec
sub
lods
cmp
aam
or
into
sub
leave
inc
mov
push
(bad)
(bad)
jmp
pusha
mov
or
pop
(bad)
jns
ins
jl
xchg
test
fimul
and
(bad)
(bad)
push
jg
mov
xor
push
imul
jl
(bad)
pop
mov
push
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pushf
idiv
lds
fdiv
jp
enter
stos
in
add
mov
(bad)
(bad)
call
fwait
mov
jmp
push
mov
sub
xchg
pop
mov
dec
and
mov
repnz
iret
and
(bad)
push
dec
mov
dec
xchg
and
dec
hlt
pop
stc
cli
xchg
cmp
call
ret
(bad)
(bad)
call
pop
push
mov
cdq
mov
pop
mov
adc
push
xor
sbb
int
call
loopne
(bad)
mov
jnp
hlt
mov
inc
xor
sbb
jge
and
xlat
in
repnz
fcmovb
jb
(bad)
jmp
test
pusha
aad
dec
add
jae
in
(bad)
int3
mov
into
jmp
pop
cld
jge
jmp
and
call
xchg
les
inc
dec
pop
and
inc
nop
push
dec
nop
xor
dec
sub
imul
(bad)
(bad)
inc
push
and
aas
nop
gs
cli
cmp
or
jo
mov
aas
mov
sti
jae
and
(bad)
dec
mov
mov
xor
inc
inc
cs
or
and
push
add
shld
mov
inc
clc
(bad)
(bad)
(bad)
dec
mov
icebp
test
cdq
mov
and
push
les
sti
xchg
loope
add
(bad)
(bad)
cmp
xlat
add
int3
adc
add
mov
sbb
inc
js
nop
int3
movs
mov
and
repnz
(bad)
(bad)
pop
lock
push
sbb
repnz
inc
aad
hlt
jmp
sbb
stc
and
mov
inc
(bad)
inc
pop
dec
call
mov
sbb
test
add
cdq
or
in
lods
mov
(bad)
(bad)
cmp
popf
push
fwait
test
mov
mov
pop
imul
jb
cmp
(bad)
(bad)
jmp
pop
(bad)
pusha
lahf
ret
mov
push
mov
sub
out
dec
fs
sbb
iret
in
les
sbb
popf
pop
and
scas
pop
sbb
jno
fsub
jnp
cli
(bad)
jmp
mov
and
mov
push
in
cdq
mov
(bad)
dec
test
cs
repnz
sub
push
mov
mov
sbb
pop
pop
cmc
push
sbb
mov
jg
sub
dec
or
mov
xor
jmp
cld
pop
pop
pop
bound
jle
inc
icebp
pop
stos
out
jp
xor
jmp
(bad)
push
inc
push
cmps
dec
test
js
dec
sbb
scas
mov
xchg
pop
add
dec
sti
pop
jne
mov
pop
mov
jb
int3
(bad)
(bad)
(bad)
(bad)
aas
loope
inc
adc
(bad)
in
jbe
cdq
clc
add
dec
xor
out
loope
inc
and
cmps
test
call
repz
hlt
sbb
inc
shl
fsub
pop
xor
add
jmp
ret
add
jg
(bad)
mov
push
leave
jo
rol
cdq
jae
mov
xor
xchg
jns
sbb
inc
mov
add
cdq
cld
(bad)
dec
xchg
xor
sbb
(bad)
(bad)
push
fild
(bad)
or
jge
and
test
xor
aaa
push
addr16
pushf
ret
adc
or
(bad)
(bad)
mov
ficom
(bad)
and
add
dec
icebp
jae
out
call
mov
xchg
clc
addr16
test
xor
push
sbb
(bad)
aam
jmp
(bad)
(bad)
(bad)
jmp
xchg
outs
sub
push
cmps
cmp
fwait
mov
mov
mov
or
(bad)
(bad)
call
push
retf
test
cmp
dec
sti
test
dec
xchg
or
sahf
nop
cdq
cmc
add
fcomip
jmp
js
xor
aaa
xor
int3
jo
xchg
ficom
jmp
(bad)
(bad)
(bad)
jnp
scas
xor
out
dec
aam
stos
mov
(bad)
and
jmp
aam
lds
arpl
imul
xor
gs
out
pop
(bad)
mov
loopne
in
add
fnstenv
(bad)
(bad)
jmp
arpl
adc
pusha
sbb
arpl
(bad)
jmp
mov
iret
into
sbb
xor
pop
mov
pop
leave
sub
test
inc
ret
and
dec
mov
cmp
aaa
ins
xchg
(bad)
(bad)
out
je
pop
aas
jp
stc
movs
add
pop
cmps
mov
adc
(bad)
fst
cli
or
cmp
mov
jecxz
jmp
xor
push
inc
sub
mov
dec
mov
scas
inc
jmp
ret
repnz
(bad)
(bad)
mov
cmp
daa
inc
dec
(bad)
(bad)
(bad)
(bad)
cmp
cli
push
sub
mov
rcl
add
popa
mov
(bad)
(bad)
dec
call
xor
dec
xlat
push
repnz
movs
jg
inc
dec
mov
fmul
call
jge
push
stos
fnstenv
int
dec
ins
xchg
pop
mov
add
cmp
rcr
stos
(bad)
(bad)
call
and
mov
ret
shr
fldcw
cmp
jmp
out
cs
cli
dec
dec
cmp
push
xor
les
int
ins
mov
int3
mov
(bad)
(bad)
call
pop
adc
aaa
xchg
adc
ins
mov
loop
jp
sub
sub
mov
mov
std
xlat
sar
adc
fwait
loop
xchg
adc
daa
adc
(bad)
(bad)
cmp
xchg
mov
mov
pop
xlat
add
shl
dec
neg
std
fild
xor
push
xchg
jmp
popf
jmp
pop
xchg
mov
loopne
and
cs
(bad)
(bad)
call
pusha
into
cmp
pusha
xchg
out
pop
push
test
jecxz
clc
inc
push
(bad)
call
test
lahf
or
push
imul
cmp
repnz
push
xchg
xchg
fistp
(bad)
(bad)
jmp
(bad)
fsubp
scas
sbb
adc
leave
scas
sbb
lss
mov
iret
cli
cmp
repnz
(bad)
(bad)
jmp
dec
test
add
push
adc
xchg
cmp
sbb
imul
out
cli
(bad)
mov
pop
aaa
outs
inc
sbb
dec
sti
add
or
cmp
add
(bad)
jmp
leave
movs
(bad)
push
dec
push
xchg
in
outs
repz
out
sbb
add
pop
inc
cwde
scas
(bad)
(bad)
push
xor
mov
jmp
xor
sbb
cld
out
mov
add
in
dec
adc
(bad)
(bad)
call
or
and
(bad)
fcomp
jmp
pop
cmp
add
jg
sbb
mov
pop
push
dec
test
test
out
push
call
popf
mov
das
movs
xlat
cwde
mov
pop
sahf
sub
add
stos
fs
stos
pop
mov
dec
xchg
in
sub
sub
enter
std
mov
ficom
push
shr
or
add
sub
pop
in
loope
jp
xor
fsub
shl
ret
jmp
mov
push
test
clc
fucomp
cli
mov
gs
fsubr
add
pop
mov
(bad)
(bad)
dec
add
sub
jo
or
retf
pusha
cmp
pop
push
es
mov
push
mov
(bad)
(bad)
jg
mov
daa
push
sbb
popa
mov
test
mov
xchg
sub
push
aad
xchg
adc
sbb
std
(bad)
(bad)
jnp
test
shl
adc
mov
stos
cmps
jl
arpl
outs
(bad)
(bad)
(bad)
(bad)
jmp
cmc
push
test
sub
es
test
out
xor
js
lock
jbe
sub
scas
(bad)
in
jno
stc
mov
adc
jle
(bad)
(bad)
call
push
rcr
nop
out
or
sbb
sub
sti
stos
xchg
mov
enter
sahf
(bad)
call
jne
push
das
(bad)
mov
push
sbb
aaa
std
push
hlt
lahf
push
mov
fimul
sub
and
out
and
aad
(bad)
(bad)
(bad)
call
xchg
or
inc
jl
xor
movs
dec
or
addr16
int
loope
or
call
mov
pop
outs
xchg
jbe
fwait
(bad)
div
and
xor
pop
sbb
and
in
mov
cmc
mov
xor
into
dec
(bad)
(bad)
call
fistp
xchg
outs
stos
add
jmp
add
sbb
xchg
mov
(bad)
(bad)
inc
mov
mov
imul
cli
and
jae
dec
lods
rol
(bad)
mov
and
fnstsw
or
mov
jl
lock
shl
mov
(bad)
(bad)
call
dec
sub
pop
loope
mov
ins
pop
adc
push
jmp
adc
ins
(bad)
push
cld
repnz
cdq
call
push
popf
jl
add
repnz
lods
inc
in
cmp
or
fst
es
clc
sbb
repz
fdiv
xchg
daa
test
sbb
(bad)
(bad)
dec
aad
pop
icebp
gs
inc
inc
lods
loopne
mov
aas
jbe
mov
mov
hlt
(bad)
(bad)
(bad)
fsub
cwde
in
cmps
adc
repnz
iret
sbb
pushf
arpl
scas
xor
add
inc
loope
push
in
cmp
ffreep
scas
or
push
fnsave
out
sub
push
jmp
stc
ds
(bad)
push
pop
mov
cmps
jnp
shl
pusha
imul
cmp
data16
pop
jecxz
lods
(bad)
jg
stos
(bad)
pop
cs
mov
mov
cmp
aas
cmp
mov
(bad)
(bad)
(bad)
jmp
imul
or
sub
not
mov
mov
fcomp
jp
test
inc
daa
mov
(bad)
(bad)
sti
arpl
stc
pop
dec
sbb
and
pop
cwde
adc
pushf
call
out
mov
xchg
cmp
(bad)
mov
loop
push
lahf
dec
jecxz
mov
jae
and
(bad)
(bad)
(bad)
inc
mov
pop
cmp
xchg
retf
fcomp
pop
jbe
fimul
movntq
out
mov
(bad)
(bad)
inc
mov
sahf
mov
jp
sub
inc
cdq
cs
ins
or
cmp
(bad)
(bad)
inc
adc
mov
gs
in
inc
add
fistp
jbe
call
repnz
mov
xchg
cmp
(bad)
(bad)
(bad)
(bad)
in
xor
or
in
test
pop
cmp
stc
mov
repnz
sub
mov
aam
ins
or
mov
sbb
push
xor
cmp
(bad)
aad
(bad)
(bad)
push
sbb
les
mov
ror
cld
xor
inc
aas
or
pop
movs
(bad)
sti
xor
(bad)
call
and
mov
mov
cmp
imul
sbb
(bad)
jmp
cmps
inc
jmp
cdq
xchg
or
loop
jp
add
dec
inc
jo
xor
ret
outs
ror
in
into
xchg
outs
cwde
daa
lock
add
add
xor
jg
jmp
cmc
inc
(bad)
shl
test
mov
lds
mov
aad
push
cmp
mov
xchg
push
push
int
(bad)
(bad)
fild
(bad)
repz
xchg
lock
sbb
out
pop
xor
cmp
fucom
rcr
xor
enter
xchg
sbb
xchg
cmc
(bad)
out
sahf
(bad)
jl
ds
adc
rcr
(bad)
inc
xchg
(bad)
(bad)
(bad)
cld
push
or
inc
or
mov
pop
ds
call
fisttp
movs
push
icebp
std
das
push
lea
jp
cmps
test
pop
mov
(bad)
fild
pop
sub
push
out
cmp
pusha
outs
pop
retf
mov
dec
enter
sub
cld
mov
sub
cmp
xor
(bad)
(bad)
inc
jmp
adc
mov
xchg
in
xchg
and
(bad)
(bad)
(bad)
jmp
pop
xchg
sbb
push
dec
jl
cli
call
sub
mov
mov
into
fmul
inc
ss
(bad)
call
popf
sub
lock
mov
js
or
jmp
pop
lods
stos
rcl
xchg
push
dec
or
jmp
aas
or
mov
clc
call
in
xor
cmp
and
stos
pop
inc
push
fst
pop
mov
(bad)
(bad)
out
sar
mov
dec
cmp
inc
add
jb
cmp
fcomip
dec
int
cmp
nop
push
imul
(bad)
pop
dec
rol
dec
out
pop
jmp
sar
push
jmp
fld
push
movs
test
mov
das
sar
inc
push
popf
mov
test
hlt
inc
and
aam
(bad)
jecxz
push
rol
or
push
movs
push
inc
pop
push
iret
jmp
ins
cmp
xchg
pop
(bad)
push
mov
dec
inc
mov
mov
(bad)
(bad)
jg
or
leave
sti
xchg
and
fwait
push
mov
mov
mov
xchg
push
jb
test
jg
sub
or
imul
xor
(bad)
(bad)
(bad)
cld
push
cli
js
sti
mov
jns
dec
dec
movs
push
in
mov
and
inc
cld
(bad)
mov
push
jns
add
into
(bad)
sbb
(bad)
test
(bad)
(bad)
call
mov
scas
daa
jmp
jmp
test
cmp
(bad)
(bad)
dec
pop
nop
mov
adc
ins
jg
push
push
add
fild
cli
pop
aam
sbb
ret
and
and
add
xchg
(bad)
(bad)
(bad)
jmp
sbb
and
push
jo
in
adc
pushf
mov
fild
les
xor
jg
cmc
inc
inc
call
jmp
(bad)
out
cwde
cmps
pop
push
fidiv
adc
mov
pop
pop
leave
or
mov
in
inc
add
(bad)
mov
inc
mov
xor
(bad)
(bad)
(bad)
inc
push
pop
cmp
add
add
int
xchg
inc
and
mov
(bad)
push
int
pop
mov
shl
push
or
fld
push
loope
(bad)
(bad)
fild
sub
fs
test
out
js
mov
dec
mov
push
(bad)
(bad)
(bad)
call
dec
fdivr
jmp
aad
xchg
mov
adc
ror
bound
add
(bad)
(bad)
jmp
jge
cmps
adc
es
mov
outs
cmp
cmp
ja
add
stos
xchg
xchg
aam
aaa
inc
or
dec
mov
test
push
(bad)
(bad)
call
(bad)
push
or
fdiv
leave
pop
jmp
mov
pop
mov
xchg
fcmovne
push
loope
mov
shl
out
sti
mov
push
imul
lock
into
(bad)
(bad)
jmp
xchg
mov
and
jnp
into
push
cmp
adc
add
fmul
mov
(bad)
(bad)
dec
inc
sbb
adc
dec
adc
sar
mov
pop
cwde
dec
test
or
xchg
loope
cli
(bad)
(bad)
(bad)
sti
and
call
ret
mov
loopne
adc
sub
cmps
jmp
int3
mov
push
inc
test
(bad)
(bad)
(bad)
dec
je
mov
push
fs
xchg
hlt
repz
or
xchg
add
cs
inc
mov
retf
(bad)
(bad)
cmp
cmp
test
xor
ret
in
pop
push
test
push
mov
pop
jle
jmp
(bad)
push
fisub
sub
es
push
inc
fstp
pop
xchg
in
(bad)
(bad)
(bad)
jnp
dec
enter
cmp
mov
mul
mov
cmp
dec
movs
mov
ds
rcr
push
(bad)
push
sub
loopne
inc
xchg
sbb
ret
sbb
cwde
adc
mov
mov
into
bt
js
cmps
xchg
xor
call
mov
lods
push
aam
jle
imul
cmp
popa
mov
lock
xor
mov
push
movs
(bad)
(bad)
(bad)
jmp
push
ror
mov
push
sbb
xchg
out
cld
add
pop
repz
pop
mov
(bad)
jmp
push
pusha
push
sbb
mov
xchg
(bad)
or
das
pop
leave
jno
push
inc
stos
out
push
and
push
enter
xor
in
push
push
outs
sub
popf
mov
(bad)
push
push
je
jecxz
(bad)
idiv
or
ins
cmps
les
(bad)
(bad)
(bad)
(bad)
cmp
std
push
mul
adc
xchg
sbb
ins
fadd
sbb
int
and
call
int
test
add
mov
cmp
daa
xchg
jl
addr16
pop
pop
or
pop
pop
imul
aad
(bad)
(bad)
(bad)
aas
call
xchg
stos
jg
cmp
test
mov
mov
aad
(bad)
(bad)
inc
into
imul
xchg
xchg
out
in
into
mov
out
test
(bad)
inc
cdq
sbb
scas
add
jg
cmp
div
pop
data16
pop
inc
push
push
leave
jg
jmp
mov
ins
dec
leave
stos
xor
aas
mov
scas
(bad)
jmp
mov
sub
mov
push
xchg
inc
cmps
push
test
xchg
out
and
(bad)
(bad)
(bad)
call
and
push
iret
test
sbb
icebp
inc
push
xchg
dec
ins
movs
mov
adc
and
test
call
or
or
add
fs
mov
(bad)
(bad)
(bad)
jmp
mov
xor
dec
js
popf
ficom
lods
xlat
popa
add
outs
mov
pop
add
cld
(bad)
mov
and
(bad)
(bad)
jg
dec
shl
sub
pop
push
(bad)
push
jo
div
outs
sbb
dec
rcl
call
cld
daa
mov
jp
cdq
iret
xlat
and
push
or
je
fnsave
(bad)
(bad)
call
sti
xchg
sub
lods
jbe
in
mov
jecxz
xor
jg
mov
jmp
or
movs
sbb
in
cmp
mov
call
or
mov
mov
push
std
dec
pop
addr16
rcl
inc
in
mov
push
fldenv
adc
es
sub
loopne
(bad)
jmp
push
add
repnz
push
inc
jle
jge
inc
mov
xchg
cmp
lods
sbb
(bad)
(bad)
jmp
jb
mov
xchg
sub
clc
sub
adc
jmp
in
inc
sbb
jmp
call
jle
cwde
jmp
or
and
pop
icebp
push
(bad)
(bad)
mov
in
mov
sbb
pop
jnp
inc
cwde
mov
aas
aam
nop
(bad)
(bad)
inc
pop
(bad)
push
sbb
out
xchg
or
test
lock
mov
adc
jmp
lock
outs
mov
jecxz
add
add
jmp
xchg
sub
pop
je
inc
mov
mul
jns
(bad)
call
aas
scas
dec
mov
xor
call
scas
add
pop
pop
pusha
mov
jb
jbe
xchg
jmp
clc
arpl
jmp
pop
lods
bound
sbb
pop
pop
comiss
(bad)
(bad)
inc
push
popa
arpl
xor
dec
rcl
mov
or
std
cld
xor
dec
or
outs
mov
sbb
(bad)
(bad)
jmp
lods
pop
outs
mov
xlat
jo
and
mov
retf
and
cmps
outs
hlt
call
icebp
fsubr
shl
or
loope
mov
(bad)
call
inc
inc
sbb
mov
cmp
cmps
xchg
outs
into
pusha
cmp
(bad)
(bad)
call
jo
jb
mov
mov
adc
pop
push
dec
mov
stos
stc
add
inc
inc
push
out
mov
loope
(bad)
jmp
punpckhwd
inc
jecxz
xor
test
sti
out
imul
mov
vmwrite
stos
das
xor
popa
ret
mov
mov
lods
(bad)
(bad)
dec
adc
iret
push
(bad)
in
repz
enter
aad
outs
jo
pop
rol
xor
xor
ror
clc
mov
cmps
mov
or
jg
sub
test
mul
icebp
xchg
pop
ins
or
or
pop
sar
and
aas
jecxz
jb
push
pop
jmp
push
dec
jnp
sub
push
jb
inc
ret
clc
mov
outs
pop
or
dec
rcl
sbb
(bad)
call
sub
mov
push
mov
sub
jmp
clc
(bad)
(bad)
inc
or
dec
jmp
ror
jmp
cmp
inc
inc
mov
ins
in
dec
lds
(bad)
(bad)
call
aam
xchg
sub
(bad)
push
sub
mov
sti
pop
call
dec
xor
sahf
bound
inc
dec
test
mov
outs
and
(bad)
(bad)
(bad)
call
das
(bad)
js
ss
pop
ss
and
dec
es
mov
sbb
or
(bad)
adc
and
(bad)
(bad)
(bad)
jg
push
cmp
dec
mov
adc
sub
jae
dec
addr16
sti
leave
(bad)
fcomip
dec
mov
cmps
add
mov
std
aas
jg
fcom
(bad)
(bad)
(bad)
call
imul
ss
dec
cwde
jecxz
cwde
xchg
arpl
std
mov
push
data16
(bad)
jg
and
cmp
dec
ss
xor
imul
xchg
sub
fidiv
(bad)
(bad)
call
jnp
pop
jp
mov
pop
loop
push
xchg
mov
imul
sbb
(bad)
inc
es
loopne
lock
push
xchg
and
or
jmp
dec
clc
in
popa
std
cmc
push
jne
jmp
ds
(bad)
(bad)
push
xor
aad
call
push
inc
xor
add
int
adc
aaa
inc
jb
ins
sub
xor
pop
sub
into
add
mov
inc
or
(bad)
(bad)
(bad)
jns
cli
imul
adc
inc
xchg
dec
loopne
cmc
leave
sub
out
int
call
and
dec
mov
xor
mov
add
popf
(bad)
(bad)
(bad)
dec
xor
jecxz
pop
mov
(bad)
fdivr
stos
dec
shl
loopne
jns
(bad)
(bad)
(bad)
(bad)
fsubr
fistp
push
(bad)
dec
pop
je
mov
in
or
pop
xor
xor
cmp
mov
inc
adc
pop
ffree
call
and
mov
jmp
call
(bad)
ja
push
add
iret
arpl
push
repnz
jmp
or
jg
cs
push
jb
scas
mov
cmp
mov
mov
(bad)
push
gs
call
cld
jmp
jge
fs
push
fidiv
call
push
pop
pop
in
add
(bad)
(bad)
(bad)
cmp
test
adc
adc
mov
es
ret
jecxz
dec
jo
sti
sbb
popf
and
fsubr
mov
xor
pushf
je
push
push
jmp
cmp
stos
retf
mov
retf
movs
in
mov
mov
and
jg
pop
popa
movs
and
mov
push
push
cmps
cmp
(bad)
(bad)
(bad)
std
mov
clc
sbb
jns
or
in
das
xor
outs
test
sbb
aad
xor
stos
pop
(bad)
(bad)
(bad)
jmp
(bad)
inc
dec
sahf
fmul
adc
mov
pop
push
cmp
stc
mov
mov
xchg
movs
xor
add
cld
stos
mov
and
(bad)
push
inc
fldenv
xchg
jg
outs
icebp
out
mov
lds
ret
adc
cmps
jnp
out
pop
das
push
(bad)
mov
xor
jmp
jno
pop
pop
std
mov
push
cdq
pmulhw
mov
(bad)
(bad)
(bad)
jmp
mov
movs
loopne
jmp
sbb
sub
mov
das
call
(bad)
(bad)
(bad)
jmp
sar
mov
add
pop
loop
imul
ins
push
add
sbb
(bad)
add
(bad)
(bad)
outs
sbb
and
xor
jne
or
sbb
aaa
pop
jg
inc
add
loope
nop
hlt
loope
daa
adc
or
ins
stos
mov
je
ror
(bad)
fsubr
inc
mul
pop
outs
mov
mov
(bad)
dec
xchg
xchg
cmp
jp
popa
fstp
jmp
and
or
(bad)
jg
ss
push
sahf
mov
into
or
push
jbe
jne
sti
clc
repnz
pushf
push
(bad)
(bad)
(bad)
dec
ret
les
mov
ret
jb
retf
ja
loopne
jle
into
cmp
ja
inc
rol
(bad)
(bad)
(bad)
cmp
ins
inc
into
xor
inc
or
sbb
mov
ss
jo
fisubr
in
inc
jecxz
jmp
lods
dec
push
test
nop
mov
xchg
(bad)
fistp
xor
sahf
sub
jo
mov
jo
mov
jmp
push
sbb
lds
mov
lods
test
fnsave
movs
mov
mov
sbb
mov
xor
(bad)
fwait
jl
mov
jp
scas
sbb
out
xchg
jle
push
js
cli
out
and
pop
std
(bad)
in
fst
xchg
out
jmp
lock
cli
(bad)
(bad)
sti
xlat
inc
mov
inc
test
jmp
enter
outs
(bad)
(bad)
jmp
mov
or
or
imul
bound
(bad)
(bad)
(bad)
inc
out
loope
xchg
pop
push
cmp
fsubrp
adc
ins
mov
pop
pushf
idiv
(bad)
inc
mov
dec
sbb
adc
add
js
mov
mov
shl
jp
push
inc
push
xor
fldenv
adc
pop
std
push
(bad)
dec
pop
inc
xor
mov
xor
jmp
(bad)
jg
and
fsubr
mov
out
push
dec
mov
jg
jmp
dec
push
ins
call
adc
les
fstp
int
(bad)
(bad)
jmp
retf
nop
jae
push
mul
iret
sbb
fnstcw
test
dec
(bad)
fild
pop
test
jb
retf
add
push
jmp
or
jle
or
sub
mov
in
jmp
push
int3
(bad)
adc
dec
push
std
(bad)
jmp
fsubr
jl
out
or
mov
call
std
call
inc
arpl
dec
mov
sbb
xor
(bad)
addr16
lea
in
dec
push
jg
lahf
call
push
mov
test
cmps
and
xchg
je
mov
outs
jb
(bad)
(bad)
push
and
xchg
or
rcl
xchg
pop
aam
sub
dec
cmp
fwait
mov
imul
mov
lea
in
data16
mov
jo
cmp
mov
lock
pop
lahf
pop
adc
sub
lock
(bad)
dec
or
out
mov
mov
cdq
fisttp
mov
and
fdivp
(bad)
(bad)
fdivr
in
xor
lock
xchg
ret
pop
fsubr
fild
aaa
stos
(bad)
aad
xor
cmp
sub
or
(bad)
(bad)
cmp
xor
inc
sub
into
and
sbb
mov
stc
mov
fbld
ror
push
ins
in
dec
mov
jmp
ret
mov
sbb
call
sub
sub
(bad)
cmps
xchg
call
push
xchg
add
jecxz
push
pmulhuw
mov
in
pushf
xchg
mov
(bad)
(bad)
(bad)
inc
fmul
sbb
ret
iret
mov
sbb
pop
push
test
inc
add
(bad)
jmp
xchg
push
mov
mov
das
dec
aam
push
jmp
shl
pop
pop
cmp
retf
mov
outs
mov
fcos
call
jne
cmps
bound
add
mov
(bad)
movs
mov
sbb
sbb
and
jo
loop
out
retf
push
inc
jmp
inc
adc
fwait
pop
fist
xchg
fsubr
(bad)
iret
and
mov
mov
mov
xlat
(bad)
(bad)
(bad)
jmp
cs
xor
repnz
add
sbb
out
(bad)
jp
loopne
je
cs
out
jl
adc
call
cmp
jo
je
sub
jle
push
(bad)
dec
shl
hlt
push
mov
push
adc
pop
rcr
jo
jae
(bad)
(bad)
(bad)
fnstcw
test
les
sbb
jns
retf
push
adc
pop
or
dec
shl
(bad)
call
pop
into
jp
fadd
aas
arpl
dec
inc
mov
scas
mov
xchg
or
xlat
and
test
cmp
push
and
lods
jbe
hlt
daa
xchg
sbb
lods
test
pop
test
stos
or
xor
(bad)
jmp
imul
and
enter
pushf
push
test
jp
or
clc
inc
cmp
lea
imul
call
stos
fld
jb
adc
mov
movs
arpl
aam
(bad)
(bad)
(bad)
inc
jno
sahf
or
pushf
mov
shr
clc
and
sub
sub
add
les
mov
pop
icebp
(bad)
(bad)
aas
dec
mov
fsub
pop
loopne
rol
xchg
adc
dec
sub
cmps
out
lock
(bad)
add
dec
mov
fs
xor
outs
stc
es
add
(bad)
(bad)
(bad)
jns
hlt
inc
out
sbb
jge
(bad)
and
cs
test
sub
inc
mov
sub
retf
jmp
jmp
lods
aaa
pop
stc
loope
and
pop
mov
dec
dec
aaa
push
sub
cli
and
repz
pop
xor
aam
es
xlat
cmps
ds
test
cs
cdq
ret
mov
mov
cmc
sbb
imul
ins
mov
jecxz
dec
out
push
fiadd
xor
rcl
push
lock
mov
jbe
int
out
outs
in
fild
sbb
(bad)
dec
inc
dec
cmps
mov
mov
sbb
(bad)
mov
ja
ds
dec
dec
bound
outs
mov
leave
jne
dec
stc
mov
popa
mov
mov
or
inc
sti
test
and
hlt
(bad)
push
clc
fsub
pushf
sub
sbb
or
imul
imul
pop
test
pushf
jp
(bad)
sub
xchg
dec
dec
xchg
dec
xchg
mov
push
and
pop
stos
push
dec
lods
inc
out
(bad)
(bad)
(bad)
(bad)
ds
dec
or
mov
lods
push
mov
popa
out
lock
jl
jge
stos
ja
sub
or
stos
xor
push
or
retf
pop
push
(bad)
(bad)
call
les
dec
and
inc
mov
sbb
out
clc
(bad)
jmp
and
in
sbb
retf
or
jmp
dec
inc
jnp
(bad)
(bad)
(bad)
(bad)
fsub
call
adc
mov
loop
add
nop
daa
test
imul
(bad)
(bad)
jmp
pop
fadd
movs
hlt
in
and
push
inc
rol
iret
(bad)
(bad)
mov
sbb
stc
shl
pop
js
fcmovb
sbb
ja
ret
jmp
mov
cmp
rcl
out
cmp
inc
lods
(bad)
(bad)
(bad)
dec
les
dec
and
mov
cmp
arpl
and
sbb
dec
je
adc
mov
lods
dec
out
loop
jge
je
sub
out
stos
popa
pop
mov
sar
mov
ins
jmp
sub
dec
out
xor
inc
jp
(bad)
fcmovu
lock
clc
stos
in
push
sub
adc
das
jb
cmp
add
jg
push
inc
(bad)
mov
cmp
(bad)
(bad)
jg
and
or
outs
rcr
loope
fstp
pushf
imul
imul
jle
pop
mov
jbe
(bad)
(bad)
(bad)
fidivr
fadd
loope
adc
sub
jo
cmp
(bad)
call
in
mov
loopne
push
(bad)
ins
cmp
test
(bad)
(bad)
(bad)
push
sbb
cmps
mov
fwait
aas
and
sbb
add
and
mov
test
dec
pop
mov
scas
rol
hlt
(bad)
(bad)
call
lds
imul
vpaddb
adc
push
test
xor
mov
jnp
adc
(bad)
(bad)
push
sbb
xor
pushf
sahf
add
mov
ins
cld
sub
out
sub
(bad)
(bad)
stc
cmps
dec
repz
sbb
fsub
xchg
outs
mov
inc
imul
(bad)
leave
pop
inc
int
mov
(bad)
(bad)
call
dec
add
push
ja
ss
xor
iret
adc
jne
push
ss
arpl
cmp
test
dec
test
ds
cmp
add
(bad)
jmp
xchg
dec
ret
retf
es
ficom
outs
sbb
adc
ja
dec
movs
(bad)
(bad)
(bad)
push
div
mov
popf
mov
pop
setb
cld
mov
mov
(bad)
arpl
imul
sub
add
adc
dec
sub
push
sub
jg
or
repz
pusha
dec
retf
test
pop
call
and
xchg
add
fwait
inc
(bad)
nop
cli
(bad)
jg
ror
push
cwde
push
push
pop
sub
lea
add
push
bnd
sub
push
imul
lods
xlat
jmp
(bad)
(bad)
mov
inc
(bad)
adc
mov
retf
sbb
(bad)
dec
sub
xchg
outs
rcl
mov
test
mov
push
and
and
(bad)
call
cmp
pop
lds
imul
addr16
(bad)
in
lods
cmp
fwait
(bad)
adc
loope
adc
and
aam
xor
mov
cmc
in
mov
or
dec
leave
shl
(bad)
fild
ss
in
mov
inc
dec
shl
aad
mov
(bad)
ficomp
mov
mov
fbstp
mov
push
cmps
(bad)
(bad)
push
pop
scas
adc
std
(bad)
pop
pop
sbb
inc
gs
lahf
jmp
mov
retf
ficom
pop
push
jb
rcr
mov
(bad)
inc
adc
dec
xor
(bad)
inc
adc
pushf
add
push
or
push
(bad)
int
shr
push
and
cli
ja
ret
push
push
aas
lock
jmp
outs
movs
fist
sbb
sbb
ins
das
add
pop
mov
mov
popa
int3
or
bound
call
arpl
aam
iret
jl
mov
loope
(bad)
(bad)
fisttp
mov
add
pop
inc
out
pop
(bad)
test
(bad)
inc
push
shl
mov
xchg
mov
push
mov
sub
jmp
push
fmul
and
xor
push
sbb
retf
adc
cmp
(bad)
(bad)
(bad)
js
(bad)
dec
(bad)
ja
xchg
push
lods
fsubp
cmp
pop
pop
dec
data16
sub
pop
outs
cld
push
or
cmp
xchg
sub
(bad)
push
adc
call
scas
mov
mov
pop
pop
xchg
movs
(bad)
jmp
pop
lahf
mov
push
fadd
(bad)
mov
std
(bad)
push
call
fimul
mov
add
movs
inc
pop
mov
jae
inc
add
gs
(bad)
(bad)
jmp
xchg
pushf
icebp
mov
cdq
xchg
adc
(bad)
retf
add
(bad)
(bad)
(bad)
aas
test
pop
sub
mov
leave
or
jp
comiss
mov
(bad)
(bad)
(bad)
(bad)
jmp
stc
sub
scas
push
jmp
sbb
ins
add
cmp
fbstp
sar
inc
push
fsub
hlt
lods
leave
ret
sti
test
in
pushf
stos
mov
popa
add
aaa
or
xor
xchg
pop
ret
loope
fistp
(bad)
(bad)
(bad)
inc
rcl
pop
shl
into
fs
lahf
xchg
cmp
push
jno
mov
cli
xchg
imul
imul
shl
outs
adc
jecxz
pop
cs
push
push
mov
(bad)
mov
cmps
and
popf
mov
mov
cmp
cmp
and
das
clc
(bad)
push
mov
nop
out
xlat
push
ins
call
pop
dec
lock
stos
(bad)
aaa
xor
(bad)
(bad)
jmp
push
lods
neg
mov
rcr
or
xor
or
sub
mov
sbb
(bad)
push
call
(bad)
jmp
jno
or
add
lock
jle
pop
(bad)
das
cli
sbb
cmp
enter
dec
sbb
mov
and
pushf
(bad)
(bad)
fcomip
xor
jp
sbb
dec
fwait
jne
sbb
pop
lahf
das
movs
arpl
jg
(bad)
dec
adc
mov
push
and
sbb
and
add
or
clc
repz
enter
xchg
call
xor
repnz
shr
cmp
pop
rol
cmps
pop
bnd
fidiv
or
stc
xor
inc
hlt
das
xor
aad
jmp
and
inc
call
jg
daa
mov
test
xchg
dec
bnd
xor
sub
shl
sbb
loope
fmul
push
sub
(bad)
mov
cmp
mov
xor
xchg
sbb
add
cmp
in
je
lock
(bad)
inc
lods
add
retf
xor
adc
in
add
push
mov
push
cmc
imul
sahf
xor
and
outs
dec
xchg
iret
int3
mov
popa
or
stos
cwde
test
or
add
out
and
(bad)
(bad)
inc
call
push
push
and
(bad)
mov
call
scas
fcomp
es
pop
dec
mov
push
adc
add
pop
add
rol
mov
dec
inc
(bad)
(bad)
(bad)
jg
push
aas
rol
xor
fwait
jmp
out
lods
push
or
test
jmp
push
push
jp
mov
repz
fidivr
inc
cmp
adc
add
dec
(bad)
(bad)
(bad)
jmp
in
and
mov
xchg
lods
outs
adc
mov
xlat
cmps
(bad)
(bad)
(bad)
jmp
int3
pop
xchg
pop
fisubr
retf
loopne
call
xchg
push
pusha
sti
adc
(bad)
(bad)
(bad)
(bad)
(bad)
out
cmp
std
mov
imul
lock
adc
(bad)
(bad)
cmp
repz
scas
call
fsubp
or
push
jo
mov
mov
mov
icebp
(bad)
aas
icebp
and
sbb
dec
mov
(bad)
jmp
mov
add
fnstenv
mov
push
and
(bad)
(bad)
jp
cwde
add
inc
ret
jns
arpl
jne
inc
je
aad
and
sub
rcl
int3
push
sbb
(bad)
(bad)
inc
mul
adc
fsubr
xchg
xor
daa
push
push
sbb
add
add
mov
mov
sahf
pop
and
mov
stos
jp
ins
es
adc
loopne
or
(bad)
(bad)
fst
mov
dec
jno
xor
mov
push
mov
mov
add
(bad)
call
mov
mov
lods
mov
mov
push
mov
(bad)
mov
mov
gs
fsubr
add
(bad)
jp
std
mov
or
cs
or
jo
sti
push
scas
sbb
retf
(bad)
ins
adc
(bad)
(bad)
call
pop
sub
ins
data16
cmps
mov
or
hlt
(bad)
sub
(bad)
call
rcr
jne
mov
and
movs
mov
call
test
and
(bad)
(bad)
jmp
inc
cs
xchg
xchg
es
js
mov
push
xor
cmp
adc
(bad)
inc
jne
mov
push
in
jae
add
push
scas
nop
adc
add
(bad)
(bad)
(bad)
dec
add
ror
cmps
mov
add
dec
imul
lods
cmp
es
push
neg
cmp
(bad)
push
push
mov
push
pop
dec
es
push
bound
jmp
add
(bad)
(bad)
(bad)
(bad)
jg
fcomp
sbb
xor
pusha
fidivr
mov
sub
adc
dec
and
daa
jl
pushf
(bad)
(bad)
dec
fist
out
pop
clc
ds
mov
or
leave
xor
inc
pop
jne
out
adc
jo
(bad)
(bad)
(bad)
jg
fbstp
stos
cmp
jecxz
cdq
iret
add
dec
push
sub
(bad)
(bad)
dec
pusha
mov
add
outs
and
push
lds
push
fnstsw
cdq
xchg
in
sub
(bad)
(bad)
(bad)
push
jg
xchg
mov
fisub
add
aam
scas
stc
inc
movs
xchg
arpl
push
call
pushf
loop
sbb
mov
push
nop
mov
fwait
mov
cmp
(bad)
dec
adc
ins
adc
js
or
sbb
cmp
cmp
(bad)
(bad)
call
fmul
sub
pop
push
sub
inc
dec
sub
mov
adc
outs
in
(bad)
fisttp
jmp
adc
jno
call
clc
jmp
sbb
inc
push
mov
(bad)
push
cmps
call
sbb
push
xor
retf
lahf
shl
sahf
mov
(bad)
dec
and
outs
ja
xor
mov
outs
pop
or
or
(bad)
(bad)
(bad)
(bad)
fld
fcomp
enter
sar
mov
ror
mov
xchg
push
cdq
(bad)
into
test
rcr
lock
dec
fmulp
push
shl
and
test
sahf
xchg
imul
(bad)
mov
movs
add
jecxz
xor
and
or
push
ror
out
int3
push
bound
sbb
in
jne
jp
pusha
repz
cmp
jg
dec
push
sbb
(bad)
dec
lods
mov
sbb
mov
cmps
cmp
popa
push
test
add
sbb
sub
cdq
xchg
sub
dec
hlt
pop
dec
jnp
stos
push
sub
xor
jb
(bad)
(bad)
(bad)
push
mov
mov
shl
xchg
test
push
sub
jle
outs
scas
loope
dec
popa
loopne
(bad)
(bad)
(bad)
call
and
adc
in
js
test
add
sti
lahf
and
cmp
adc
test
dec
add
xchg
test
push
stc
sbb
fdivr
call
mov
adc
xchg
xlat
aad
cs
in
mov
jmp
pop
xor
cld
sti
dec
mov
adc
das
mov
or
(bad)
(bad)
(bad)
call
jle
and
mov
sub
pop
jae
xchg
cmp
mov
pop
pop
pop
rcl
(bad)
(bad)
dec
adc
mov
pop
cmc
jbe
addr16
popf
test
push
lds
and
pusha
push
jg
lds
mov
jnp
(bad)
clc
movs
add
hlt
push
std
sbb
dec
test
pop
inc
jns
jge
hlt
push
(bad)
in
cmp
sub
dec
adc
out
sub
into
sbb
cli
mov
push
adc
jge
mov
sbb
outs
mov
or
push
nop
shl
jmp
sbb
mov
(bad)
inc
bound
leave
ins
mov
bound
out
mov
(bad)
dec
or
repnz
in
scas
int
dec
sahf
xchg
neg
jmp
loop
(bad)
and
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rcr
arpl
movs
popa
sbb
inc
adc
pop
and
add
data16
(bad)
(bad)
(bad)
inc
(bad)
xor
inc
enter
stc
lahf
rol
repz
int
push
sbb
or
call
(bad)
dec
out
les
pop
scas
push
(bad)
aaa
adc
adc
popa
loop
sub
cmc
jo
xor
in
mov
(bad)
(bad)
(bad)
jmp
dec
fwait
inc
daa
inc
stos
adc
xchg
fisttp
repz
(bad)
(bad)
jg
add
scas
or
and
(bad)
jmp
(bad)
in
xor
hlt
pop
mov
sub
sbb
dec
(bad)
(bad)
(bad)
push
push
call
arpl
xchg
fs
xchg
and
pop
adc
(bad)
(bad)
(bad)
call
xchg
stos
adc
and
mov
pop
test
arpl
xchg
int3
adc
(bad)
call
pop
mov
pushf
(bad)
sti
mov
dec
or
sti
retf
xchg
(bad)
jg
xlat
fdivr
das
mov
cmp
add
mov
adc
mov
ds
jp
xchg
sbb
cmps
xchg
mov
mov
xor
aaa
cld
jmp
lods
pop
pop
push
jb
sub
adc
dec
and
or
(bad)
(bad)
dec
mov
les
inc
add
mov
rcl
into
cmp
gs
mov
(bad)
call
jmp
into
lds
cmp
rcr
jnp
movs
push
dec
ins
int3
in
stos
jecxz
dec
shl
mov
inc
mov
jnp
or
push
mov
add
dec
pop
(bad)
mov
jmp
sbb
or
aaa
mov
push
pop
sti
pop
test
out
mov
mov
ret
sub
push
into
pop
ficomp
push
jno
dec
dec
mov
mov
out
push
popa
or
data16
pusha
cli
out
(bad)
(bad)
(bad)
(bad)
ds
out
jnp
clc
and
aad
xor
or
mov
shr
cmps
mov
(bad)
(bad)
(bad)
mov
sbb
adc
outs
cmp
retf
iret
adc
push
hlt
cmps
les
and
in
(bad)
mov
je
jne
ja
pop
iret
dec
cmc
ficomp
loope
cld
push
loop
mov
cli
call
cld
or
psadbw
aam
cmp
(bad)
xchg
cmp
shr
mov
push
xchg
popa
push
cli
dec
cmp
out
jge
mov
rcl
out
mov
jmp
mov
cld
or
scas
cs
out
xlat
mov
pop
add
loopne
dec
fidiv
test
(bad)
(bad)
mov
popa
adc
daa
lods
mov
jp
in
mov
mov
(bad)
(bad)
(bad)
fsub
dec
sbb
lods
pop
adc
outs
mov
pusha
stc
or
movs
add
in
(bad)
(bad)
dec
and
push
mov
lock
push
xlat
inc
mov
mov
xchg
xlat
jns
push
bound
(bad)
(bad)
call
xchg
addr16
push
pop
push
inc
in
sbb
jp
cmp
test
cmp
(bad)
(bad)
cmps
push
pop
push
imul
xor
add
jp
mov
adc
popa
sub
cli
call
(bad)
jae
dec
jp
icebp
inc
pop
cmp
xor
pop
push
outs
or
mov
enter
push
nop
call
int
dec
bound
or
push
mov
sbb
mov
cmp
pop
dec
loope
(bad)
jmp
ret
inc
push
clc
push
pop
fwait
mov
cmp
mov
jmp
out
nop
jecxz
(bad)
(bad)
(bad)
mov
push
mov
mov
dec
mov
and
xor
sahf
inc
popa
je
(bad)
ss
(bad)
dec
mov
push
retf
xchg
mov
or
aam
sub
scas
sbb
push
mov
leave
pop
imul
arpl
jg
sbb
ins
inc
or
mov
(bad)
(bad)
inc
cmp
sti
xchg
adc
sub
test
fdiv
mov
pop
pop
push
outs
fidiv
sbb
(bad)
(bad)
shl
shl
dec
sub
dec
inc
(bad)
adc
call
jmp
sti
loop
push
mov
frstor
adc
push
sub
dec
cmps
sbb
sub
mov
dec
ja
xor
das
adc
cli
xchg
(bad)
(bad)
call
mov
int3
sar
pop
jle
lock
push
or
push
popf
inc
jge
(bad)
in
cmp
(bad)
jmp
adc
and
out
adc
cmc
in
mov
ins
repz
std
(bad)
call
out
ds
pusha
inc
stos
or
add
lds
loopne
fwait
cmc
pop
(bad)
(bad)
fbld
test
dec
add
jmp
aam
cli
(bad)
pusha
(bad)
(bad)
(bad)
jmp
sub
icebp
mov
cli
push
(bad)
popf
(bad)
out
popf
test
inc
aas
cmc
ja
bound
sbb
sbb
xchg
push
into
(bad)
jp
(bad)
(bad)
call
fisttp
(bad)
xor
stc
and
mov
stc
test
in
xor
add
cmp
fwait
imul
out
test
outs
sbb
test
(bad)
(bad)
jmp
cs
mov
arpl
aam
dec
push
or
or
push
sahf
jp
rol
aam
(bad)
(bad)
(bad)
call
test
inc
addr16
out
imul
shl
or
out
mov
inc
or
push
push
iret
test
(bad)
jg
rol
push
adc
shl
loope
cs
rcl
xchg
cmps
mov
call
mov
jns
mov
push
es
push
push
pop
(bad)
xor
push
(bad)
jg
sub
xchg
lods
lock
into
or
mov
jg
dec
adc
cmp
mov
mov
int
push
dec
stos
ret
jmp
jne
sbb
(bad)
cwde
jno
dec
into
or
xchg
xchg
pop
or
(bad)
call
xchg
out
in
outs
clc
push
in
push
adc
in
xchg
retf
pop
dec
data16
sub
push
pop
and
fisttp
mov
test
mov
or
dec
(bad)
(bad)
(bad)
mov
ss
dec
in
or
xor
loope
pop
inc
add
fmul
mov
call
dec
push
dec
std
mov
test
lock
xlat
xchg
xchg
sub
movs
mov
ret
jmp
leave
cmp
sub
outs
cwde
(bad)
push
retf
(bad)
adc
jg
pop
movs
ins
jl
dec
cwde
iret
mov
repnz
inc
pop
jmp
push
push
sub
or
imul
cwde
cdq
jge
cld
hlt
push
bound
jmp
fadd
mov
cmps
jmp
dec
pop
mov
sti
and
and
push
inc
iret
repnz
push
shl
ret
xor
push
inc
jecxz
jmp
pop
mov
scas
leave
adc
dec
fst
fisttp
inc
test
mov
aas
sub
sbb
(bad)
call
ret
or
arpl
adc
arpl
(bad)
dec
fwait
je
out
retf
pop
lea
fsubr
cmps
mov
cmps
hlt
mov
cs
enter
inc
(bad)
pop
cmp
jecxz
ins
sub
fldcw
std
(bad)
(bad)
(bad)
(bad)
inc
push
std
push
das
and
mov
cmp
cvtps2pi
shl
mov
dec
(bad)
(bad)
(bad)
mov
xchg
repnz
xchg
mov
sbb
pop
jecxz
in
jno
ror
mov
(bad)
out
pop
out
xor
add
addr16
or
pop
(bad)
fild
movs
push
jnp
jb
(bad)
xchg
call
pop
aas
(bad)
(bad)
(bad)
dec
lods
jge
out
inc
mov
inc
jp
dec
dec
pop
stos
test
(bad)
push
enter
pushf
sbb
mov
fnsave
cmp
mov
dec
rcl
scas
sub
out
xchg
adc
shl
xor
mov
je
xchg
das
mov
dec
hlt
mov
and
mov
jo
mov
dec
and
pop
jg
shl
cdq
mov
clc
and
push
ret
mov
jle
mov
std
and
sub
mov
mov
in
xchg
js
xor
(bad)
dec
in
in
test
test
repnz
stc
call
cmp
stos
jecxz
lods
mov
(bad)
(bad)
call
js
test
jnp
ss
scas
lahf
adc
mov
xlat
(bad)
(bad)
dec
inc
retf
cmp
cld
mov
pop
xor
loop
mov
cmps
xchg
jmp
jg
push
pop
pop
xor
mov
inc
push
mov
jbe
mov
data16
(bad)
(bad)
inc
out
aas
jmp
cli
in
mov
(bad)
dec
shl
add
(bad)
(bad)
inc
into
shl
shr
arpl
mov
arpl
and
int3
mov
stc
xlat
pop
shl
mov
(bad)
(bad)
(bad)
dec
pushf
call
xchg
out
in
pop
loopne
mov
or
pop
push
ja
sbb
test
and
imul
dec
call
and
mov
psubd
push
or
mov
jnp
clc
mov
adc
(bad)
jmp
inc
lahf
in
mov
mov
mov
das
clc
call
ret
mov
imul
addr16
call
psubsb
jmp
sahf
lock
ds
loopne
dec
enter
sbb
cdq
mov
mov
(bad)
inc
add
idiv
test
xchg
sbb
(bad)
(bad)
(bad)
mov
jecxz
sub
repnz
je
and
push
inc
xor
aad
fsub
add
cmp
rol
movs
xchg
jmp
sub
dec
stos
fcmovne
in
mov
gs
(bad)
jg
jmp
outs
cmp
jmp
fistp
push
mov
mov
jp
sbb
sbb
pop
cmp
(bad)
(bad)
(bad)
jmp
jle
call
adc
aad
mov
in
cmps
mov
not
fisttp
(bad)
(bad)
call
into
jbe
cmc
cmp
or
inc
cwde
sub
adc
and
adc
test
aad
(bad)
(bad)
dec
xchg
and
aad
xchg
pop
inc
push
push
rol
adc
cmp
aam
(bad)
(bad)
dec
ds
lahf
pop
or
jns
mov
and
out
or
pop
fnsave
xchg
hlt
sbb
xor
(bad)
(bad)
inc
into
add
(bad)
ror
in
aad
loopne
test
dec
add
(bad)
call
inc
pusha
add
rcr
bnd
jno
pop
in
int3
or
inc
xchg
(bad)
(bad)
(bad)
dec
jo
lock
lods
imul
mov
in
call
cwde
inc
adc
jbe
lods
push
outs
clc
dec
sub
jmp
cmp
mov
cmp
fcomip
push
push
mov
int
ror
int3
add
inc
jns
pop
pushw
jno
call
dec
add
xchg
xchg
repz
(bad)
(bad)
jmp
inc
inc
pop
mov
scas
lods
pop
sahf
mov
imul
mov
aad
push
movs
mov
(bad)
push
jg
loope
xchg
xchg
mov
mov
addr16
aad
xchg
dec
aas
(bad)
(bad)
(bad)
call
lock
stc
cmps
fsub
aam
push
push
iret
in
sbb
cmp
scas
push
(bad)
mov
push
das
lea
scas
xlat
add
(bad)
jl
or
sub
mov
sub
mov
inc
sub
ret
and
repz
stc
js
add
jnp
loop
xor
inc
inc
(bad)
(bad)
call
pop
cmp
inc
sbb
ins
and
(bad)
mov
pop
sub
push
pop
loop
aaa
cwde
test
test
js
rcr
inc
jmp
pop
dec
pop
into
sbb
cmp
pop
pop
(bad)
(bad)
push
dec
pop
push
push
mov
mov
pop
rol
lock
retf
inc
sbb
jle
lods
sbb
ffreep
mov
imul
aaa
std
call
adc
das
dec
sahf
ins
dec
push
fdiv
xor
(bad)
pop
mov
rcr
shl
(bad)
push
mov
pop
mov
movs
jle
(bad)
(bad)
(bad)
inc
out
and
clc
inc
fst
add
cld
aaa
mov
rcr
jmp
dec
jecxz
ja
sar
bound
mov
call
ds
push
loopne
sbb
adc
popa
mov
lock
call
int3
mov
pushf
(bad)
sub
(bad)
daa
loope
or
aas
aaa
es
sub
dec
stc
pop
gs
cmp
imul
sahf
inc
adc
push
push
mov
xchg
adc
xor
outs
hlt
call
ja
pop
in
jbe
sbb
inc
pop
jb
or
xabort
(bad)
(bad)
call
jg
and
jnp
std
jns
(bad)
rcl
or
jb
adc
adc
(bad)
mov
(bad)
(bad)
jg
xchg
add
aas
xchg
imul
inc
dec
push
out
cmps
pop
xor
(bad)
loopne
and
in
push
call
cmp
adc
add
test
cdq
enter
add
pushf
pusha
test
cld
(bad)
call
push
sti
int
les
iret
popf
inc
ret
push
pop
leave
retf
push
pop
pop
test
(bad)
jmp
mov
inc
mov
cs
add
lods
mov
inc
(bad)
js
ins
ror
pop
cmc
adc
scas
iret
mov
aaa
lea
mov
out
das
sar
popf
push
mov
in
xor
(bad)
(bad)
push
cld
push
ds
sbb
sub
add
out
arpl
sub
cmp
loopne
(bad)
fst
sbb
dec
jmp
pop
inc
sbb
adc
(bad)
(bad)
(bad)
call
cli
jecxz
in
adc
jmp
push
scas
add
dec
add
(bad)
(bad)
(bad)
(bad)
stc
das
out
outs
and
xchg
sub
pop
push
pusha
jb
dec
mov
jbe
add
(bad)
(bad)
jg
out
and
fistp
jge
jmp
xor
xchg
dec
adc
fld
(bad)
call
mov
sbb
(bad)
out
push
loope
and
push
ss
and
call
enter
push
mov
adc
and
jmp
cmp
mov
push
mov
sub
je
ret
add
sti
xor
jo
(bad)
(bad)
(bad)
dec
es
rol
adc
in
or
cwde
fucomp
mov
xchg
mov
jg
(bad)
push
das
mov
cmps
dec
scas
and
pop
mov
in
scas
mov
(bad)
(bad)
jmp
xchg
and
movs
xor
xchg
mov
push
xor
mov
and
mov
(bad)
jmp
inc
je
jge
ficom
push
cmp
(bad)
(bad)
mov
cmps
ins
pop
imul
scas
add
dec
sbb
(bad)
(bad)
call
pop
lock
mov
add
inc
stos
cmp
cmp
xor
lds
(bad)
lods
xor
(bad)
(bad)
(bad)
(bad)
(bad)
shl
inc
dec
in
dec
mov
out
rcr
add
frstor
div
jg
(bad)
(bad)
jmp
cs
loopne
shr
je
adc
data16
sub
adc
add
pop
scas
dec
mov
clc
inc
repnz
mov
popa
call
adc
add
add
(bad)
jg
scas
cdq
add
movs
scas
hlt
outs
xchg
jge
call
xor
jno
mov
enter
das
mov
retf
addr16
or
push
repnz
stos
jp
mov
push
icebp
loopne
cmp
mov
jmp
sub
popf
hlt
add
inc
xchg
imul
clc
mov
jns
test
fisttp
sub
aam
call
sub
(bad)
fcomip
outs
ss
mov
pop
shl
stos
sub
adc
jg
(bad)
fcomip
push
adc
mov
or
sub
(bad)
mov
jb
es
jl
(bad)
cli
gs
fcomp
dec
push
(bad)
or
je
mov
(bad)
fsub
lock
jle
mov
(bad)
pop
push
loop
movs
or
mov
(bad)
(bad)
(bad)
push
cmp
(bad)
pop
dec
retw
in
push
push
adc
aas
xlat
cmp
(bad)
(bad)
jmp
push
(bad)
cli
lods
std
loopne
jp
aaa
fs
ds
jo
loop
inc
xor
js
(bad)
(bad)
inc
dec
rcl
das
loopne
aam
pop
in
movs
and
push
(bad)
(bad)
push
ja
mov
stos
push
in
ins
dec
(bad)
in
out
nop
mov
inc
mov
add
push
add
lds
outs
ror
(bad)
jg
(bad)
mov
cmp
fcom
movs
mov
pop
fiadd
xor
sbb
jmp
cld
out
pushf
add
(bad)
(bad)
(bad)
jg
mov
fstp
(bad)
(bad)
in
lods
imul
push
mov
test
xchg
adc
idiv
cmp
fs
(bad)
(bad)
call
xor
sbb
outs
jle
adc
adc
outs
pop
retf
or
xchg
inc
pushf
in
loope
clc
dec
cmps
test
and
(bad)
xchg
in
stos
xchg
push
jmp
clc
and
outs
push
push
xor
retf
mov
bound
jecxz
(bad)
jmp
shl
aas
pop
cmps
and
push
data16
jno
mov
test
sbb
(bad)
fcomip
mov
and
(bad)
out
test
imul
(bad)
(bad)
(bad)
(bad)
fsubp
fxch
out
stos
cmps
rcl
std
daa
xchg
ret
sbb
repz
fstp
int
mov
inc
mov
inc
loop
loope
add
xchg
xchg
inc
mov
es
retf
sub
sbb
int
mov
js
(bad)
(bad)
(bad)
inc
popf
nop
pop
push
pop
adc
ret
push
pop
inc
stos
sub
dec
inc
shl
fcmovnu
sbb
(bad)
(bad)
mov
fisubr
xor
push
repnz
shl
test
loop
mov
cmp
inc
sbb
cld
mov
mov
jmp
push
(bad)
(bad)
(bad)
push
mov
rcr
ror
or
mov
dec
fist
add
(bad)
jmp
out
push
sub
or
pop
mov
fwait
fs
outs
lock
mov
call
add
push
into
xchg
gs
nop
es
fsubr
jmp
ja
je
ret
ins
or
cmp
clc
fcmovbe
scas
or
(bad)
jmp
sbb
push
test
sbb
imul
pop
bound
lds
adc
or
jl
fcomp
xchg
sub
pop
int
ins
jmp
scas
ins
stos
dec
pop
sub
fiadd
dec
push
push
mov
jecxz
dec
jo
(bad)
(bad)
(bad)
(bad)
jmp
cdq
dec
fidivr
rcr
int3
push
in
push
mov
test
ins
sub
fcomip
clc
and
dec
add
xchg
sbb
cmps
daa
loope
(bad)
jmp
mov
sub
sub
sub
pop
xor
jge
pop
push
push
ret
(bad)
mov
enter
sbb
outs
into
js
push
xchg
out
adc
into
add
scas
or
aad
mov
dec
sub
push
stc
cli
add
fistp
adc
cs
in
or
mov
shl
sbb
aaa
inc
pop
aas
pop
test
push
adc
mov
std
call
mov
out
jg
mov
jg
inc
lods
sahf
cmp
hlt
arpl
leave
mov
dec
pop
into
xor
cmps
(bad)
(bad)
jmp
nop
repnz
sbb
dec
mov
les
bnd
lock
dec
adc
pop
pop
dec
stos
(bad)
(bad)
dec
jmp
add
sbb
es
mov
cmp
call
xchg
call
cwde
xor
sub
jge
jmp
jmp
cld
and
sbb
les
xchg
popa
push
(bad)
(bad)
(bad)
(bad)
fist
fdivr
xchg
or
and
lock
or
mov
lods
movs
stc
fcom
fisubr
jmp
test
stos
ret
gs
mov
sbb
add
inc
mov
sub
(bad)
(bad)
(bad)
inc
neg
pop
leave
add
mov
jmp
scas
jb
mov
jmp
test
(bad)
(bad)
call
xchg
cld
inc
in
imul
xor
movs
(bad)
cs
mov
mov
adc
inc
cmp
imul
mov
pop
and
in
cmp
cmp
addr16
sub
sbb
push
ins
dec
push
es
call
or
jmp
pop
es
cmps
rcl
or
mov
jmp
jb
lea
(bad)
(bad)
push
xchg
push
loope
popa
fcmovne
scas
xor
scas
fnstcw
nop
sbb
addr16
sti
rcl
adc
mov
(bad)
(bad)
(bad)
jmp
pop
test
mov
xchg
mov
sbb
stc
push
arpl
sbb
sbb
sti
int3
aaa
(bad)
(bad)
(bad)
jmp
in
je
sub
aam
(bad)
sbb
xchg
mul
and
lahf
pushw
lods
pop
call
dec
and
jl
or
into
int
xchg
cmp
(bad)
(bad)
jmp
(bad)
add
mov
sub
stc
inc
pop
xchg
or
sbb
ror
mov
fstp
retf
popf
mov
dec
aad
mov
adc
jmp
jae
imul
scas
rol
push
enter
hlt
dec
mov
(bad)
outs
mov
(bad)
mov
mov
adc
ds
adc
(bad)
(bad)
(bad)
inc
jnp
pop
cmp
xor
mov
cli
stos
dec
dec
inc
cmp
mov
getsec
or
js
je
lods
adc
xchg
adc
mov
fiadd
out
inc
pusha
xchg
(bad)
(bad)
call
jg
mov
(bad)
fistp
add
jle
xor
movs
cs
cs
xchg
or
hlt
sbb
out
jle
mov
int
and
(bad)
(bad)
dec
push
mov
push
add
into
aam
call
sub
cli
cdq
cmps
jg
jg
into
jl
popf
add
mov
scas
retf
call
(bad)
(bad)
(bad)
jmp
enter
(bad)
in
lods
push
adc
data16
stos
retf
push
jmp
xchg
(bad)
cli
adc
ror
(bad)
(bad)
inc
js
arpl
mov
add
ret
repnz
aas
xchg
aam
test
fcmovnbe
ins
mov
xor
in
mov
and
sub
retf
add
sbb
test
xchg
sbb
sbb
jmp
(bad)
inc
stos
lahf
pop
or
test
test
repnz
lods
inc
(bad)
jmp
mov
or
mov
and
jbe
inc
mov
pop
aas
lods
jle
pusha
das
sar
call
enter
pop
ins
stc
pop
cmp
movs
and
pop
xor
jecxz
out
and
out
(bad)
(bad)
(bad)
dec
adc
xor
and
sub
outs
mov
icebp
call
sub
inc
cwde
lods
or
(bad)
(bad)
(bad)
push
loop
sbb
(bad)
fdiv
shr
sbb
mov
jns
popa
div
movs
and
dec
xor
inc
shr
push
ja
stc
or
inc
cmp
pushf
call
(bad)
(bad)
jmp
(bad)
and
and
mov
into
pop
outs
pop
jmp
out
dec
mov
aad
(bad)
(bad)
(bad)
jl
enter
adc
cli
test
mov
sar
fsub
in
inc
and
sbb
(bad)
clc
(bad)
fcomip
push
mov
int
out
fsub
cmp
int3
lods
sub
aad
push
(bad)
(bad)
(bad)
out
in
xchg
push
jno
mov
popf
call
or
sahf
pop
rcr
push
(bad)
(bad)
(bad)
jmp
shl
pusha
xor
outs
cs
and
sub
add
jmp
or
mov
xor
add
repz
pop
pusha
rcl
(bad)
(bad)
call
push
out
mov
pop
bnd
push
mov
aaa
fldl2t
add
mov
in
cdq
pop
adc
mov
push
in
pop
pop
aaa
mov
push
sbb
mov
dec
pop
in
and
bound
dec
pop
or
icebp
jmp
pop
test
rcr
inc
ret
jmp
movs
cs
cs
fcomip
(bad)
push
or
jmp
jne
cmp
push
mov
push
int3
inc
add
fild
shr
stc
jb
mov
out
ret
fldcw
(bad)
(bad)
(bad)
stc
mov
mov
jg
mov
lds
aad
jns
mov
pop
mov
sahf
shl
into
push
jg
sub
iret
aas
lar
inc
cmp
(bad)
sbb
(bad)
(bad)
push
movs
(bad)
and
pusha
enter
pusha
inc
out
mov
pusha
femms
sub
fdivr
(bad)
(bad)
(bad)
(bad)
call
inc
into
fs
in
add
mov
int3
xor
aas
and
push
lea
(bad)
(bad)
dec
push
inc
inc
xchg
dec
aad
(bad)
push
in
adc
fs
add
fist
and
pop
inc
cli
(bad)
(bad)
(bad)
call
out
or
cmp
data16
iret
xchg
and
mov
cli
(bad)
dec
xchg
jbe
cmc
dec
dec
aam
out
clc
in
repz
in
outs
jae
clc
inc
push
(bad)
(bad)
(bad)
mov
pop
jo
or
(bad)
aam
xchg
les
repnz
std
push
in
jg
lods
mov
jne
sub
inc
push
xchg
jmp
jae
(bad)
(bad)
(bad)
cmp
mov
ret
jbe
scas
dec
test
lahf
stc
out
push
inc
mov
sar
dec
and
inc
or
xor
aad
or
lahf
cli
ins
test
mov
cmp
(bad)
(bad)
call
sbb
inc
repnz
ins
mov
xchg
sub
mov
dec
push
jno
sbb
push
cld
dec
jno
mov
cmp
test
and
out
lea
jmp
pop
je
dec
cmp
sbb
xor
lock
jmp
(bad)
(bad)
dec
(bad)
in
pop
push
and
sti
ret
and
adc
pop
xor
xor
push
ret
call
jmp
leave
and
stos
aad
out
push
ss
call
dec
mov
stos
push
sar
test
pusha
ds
pop
scas
in
cmp
dec
add
mov
(bad)
(bad)
push
jg
ja
inc
dec
xchg
cmps
das
mov
push
shl
adc
and
jecxz
(bad)
fisttp
(bad)
adc
sub
cmps
mov
cmp
jne
(bad)
(bad)
(bad)
(bad)
in
inc
call
mov
out
jb
jne
sbb
add
aad
(bad)
(bad)
(bad)
(bad)
cld
aas
dec
imul
xchg
mov
nop
ds
cdq
cmc
or
jbe
add
dec
xor
(bad)
(bad)
mov
xchg
mov
call
xchg
and
push
leave
mov
inc
mov
clc
neg
adc
sbb
sub
ror
adc
or
popa
mov
enter
mov
into
das
test
pop
push
(bad)
ds
jns
rcl
pop
cmps
int
(bad)
(bad)
(bad)
push
mov
gs
push
adc
rcl
fbstp
mov
scas
mov
and
(bad)
sti
xchg
push
pop
rcl
push
inc
push
dec
int
cmc
inc
lods
mov
mov
rcl
leave
enter
(bad)
mov
jbe
and
and
xchg
push
xchg
shl
rcl
jmp
xor
cs
add
call
sbb
(bad)
jg
lods
pop
pop
jecxz
add
mov
in
mov
in
bound
daa
mov
sti
lock
xor
(bad)
(bad)
push
pop
jmp
sub
sbb
gs
scas
mov
push
mov
call
jno
test
scas
jb
mov
call
pop
inc
mov
clc
rcl
ror
in
or
dec
(bad)
inc
fnsave
mov
imul
push
iret
out
adc
(bad)
(bad)
(bad)
call
enter
xchg
xchg
(bad)
(bad)
fmul
ret
jns
and
mov
neg
(bad)
retf
adc
mov
std
(bad)
jmp
xchg
push
and
mov
jb
in
and
dec
add
jmp
ds
inc
arpl
inc
jb
cmps
jge
ficom
(bad)
(bad)
(bad)
mov
sahf
jnp
xchg
ficom
sbb
(bad)
dec
cmpxchg8b
jg
cld
(bad)
call
inc
ds
mov
cmp
imul
arpl
jmp
sbb
sub
enter
mov
ins
movs
aaa
sub
pusha
not
movs
sub
mov
add
(bad)
pop
push
fs
add
(bad)
(bad)
(bad)
(bad)
jg
mov
xor
lock
sub
mov
loop
cs
push
pand
mov
(bad)
shr
and
mov
das
es
xchg
frstor
call
iret
sub
ins
cmps
sbb
sbb
xchg
aaa
sar
xchg
sar
(bad)
inc
and
lahf
pushf
ret
push
aas
adc
hlt
repz
pop
into
mov
test
sbb
(bad)
(bad)
(bad)
inc
shl
lock
adc
and
mov
mov
fs
sub
(bad)
jmp
stos
push
fidivr
mov
adc
xor
out
mov
sbb
lahf
fwait
(bad)
(bad)
call
cmp
hlt
ficomp
or
xor
sbb
(bad)
(bad)
jmp
xor
jno
or
xchg
test
cli
leave
ins
adc
mov
cmp
mov
test
jbe
mov
adc
mov
push
aam
mov
ret
iret
push
loopne
dec
push
addr16
ret
jmp
pop
push
mov
xor
dec
fist
mov
fstp
or
push
or
jne
mov
push
imul
mov
xchg
jno
sub
jle
lea
iret
call
cs
call
push
xlat
jg
loopne
out
cmps
adc
outs
arpl
sub
pop
mov
es
or
mov
sbb
and
xchg
loopne
test
fadd
mov
push
mov
pop
test
mov
retf
call
mov
enter
cli
jecxz
inc
sub
(bad)
(bad)
call
fisttp
xlat
sbb
or
sub
(bad)
pushf
dec
adc
outs
rcl
mov
push
inc
popf
daa
cmp
jl
xor
(bad)
xchg
jmp
(bad)
jmp
hlt
or
pop
jmp
jp
mov
repz
imul
add
push
addr16
add
je
fwait
xchg
js
ja
stc
push
popf
test
loopne
cmp
cmps
jg
gs
test
test
popa
push
sbb
(bad)
(bad)
(bad)
inc
daa
ss
jnp
movs
clc
and
sub
mov
mov
cmp
inc
and
mov
jge
sub
arpl
cmps
aam
lea
and
mov
(bad)
(bad)
call
cli
test
repz
xor
pop
nop
mov
aaa
or
clc
out
cli
imul
mov
mov
addr16
(bad)
inc
xchg
int3
push
inc
sar
dec
fadd
dec
mov
ret
jge
pop
(bad)
(bad)
(bad)
jg
ss
mov
cmp
jecxz
inc
ins
mov
pop
sbb
fwait
fs
arpl
sub
hlt
mov
imul
add
outs
shl
cld
(bad)
(bad)
jmp
movs
add
movs
mov
pushf
jb
inc
ins
addr16
popa
retf
ds
in
popa
dec
(bad)
cld
(bad)
call
xor
mov
fsubr
fbstp
push
out
icebp
pop
push
jl
inc
mov
mov
inc
je
test
fwait
(bad)
mov
mov
or
sub
push
push
test
cmp
fidiv
dec
adc
(bad)
cli
imul
pop
and
loop
jge
push
mov
(bad)
xchg
push
xor
cmp
add
add
jmp
add
out
mov
lock
clc
ins
xchg
mov
pop
(bad)
(bad)
(bad)
dec
fsub
xor
and
push
push
xchg
add
jmp
jp
cmp
icebp
aas
(bad)
dec
dec
rcr
cmp
xchg
mov
dec
(bad)
(bad)
(bad)
(bad)
fsubr
aas
mov
mov
mov
mov
(bad)
push
inc
mov
cs
inc
stos
lahf
cmp
xchg
hlt
shr
(bad)
(bad)
push
dec
test
cld
mov
xchg
push
aas
movs
hlt
int3
mov
push
shl
ja
test
scas
movs
ror
or
aaa
mov
psubd
outs
xchg
repnz
mov
mov
cmp
imul
pop
(bad)
daa
pop
or
dec
sub
or
loop
into
jmp
lock
sub
aaa
xor
movs
or
adc
pop
sbb
sar
mov
adc
xchg
imul
inc
fistp
lods
mov
xchg
cmp
(bad)
(bad)
(bad)
ds
fidiv
leave
add
pop
outs
mov
ret
pop
xchg
push
mov
xor
(bad)
jmp
(bad)
adc
les
and
pushf
nop
ret
lock
(bad)
push
movs
out
idiv
mov
xor
pop
(bad)
in
or
or
jb
push
mov
inc
jp
icebp
(bad)
mov
mov
(bad)
aad
es
out
xchg
sub
das
pop
aas
sbb
xlat
lods
pusha
fsubr
pop
pop
(bad)
(bad)
(bad)
push
gs
xor
jnp
test
mov
stc
mov
mov
adc
push
sub
call
dec
cs
mov
inc
dec
sub
xchg
test
retf
mov
(bad)
jmp
call
(bad)
cmc
fsub
lsl
push
pop
xor
adc
(bad)
(bad)
jmp
and
adc
leave
xor
push
(bad)
lock
jg
push
mov
sub
lahf
loop
sub
sub
push
(bad)
(bad)
jg
sub
call
sbb
(bad)
(bad)
dec
xchg
fcom
sbb
in
inc
mov
jmp
push
mov
inc
mov
pop
(bad)
mov
push
inc
fild
call
push
push
retf
outs
adc
in
push
jle
call
sar
sahf
popa
stos
loop
sbb
clc
(bad)
(bad)
inc
xlat
outs
cmp
or
jmp
lods
popa
(bad)
cld
push
xor
(bad)
nop
aaa
icebp
(bad)
jmp
mov
jecxz
aas
and
int3
out
movs
push
(bad)
pop
and
push
(bad)
repnz
(bad)
(bad)
call
pop
xchg
iret
js
je
jge
xchg
aad
and
movs
repnz
jge
push
into
inc
movs
push
push
(bad)
jne
repnz
or
inc
lahf
cmp
mov
daa
xor
shl
pop
stos
aad
aad
(bad)
(bad)
(bad)
inc
mov
cdq
sub
clc
cmp
mov
sub
shl
jnp
adc
mov
xlat
(bad)
fdiv
and
mov
aad
clc
xchg
hlt
fdiv
cs
jmp
inc
je
ins
arpl
mov
xchg
ret
inc
in
std
aam
or
fcomip
mov
aad
mov
xchg
(bad)
(bad)
dec
shl
pop
(bad)
cmp
retf
mov
inc
adc
pusha
mov
scas
mov
or
inc
fcom
das
cli
test
aas
add
aad
loopne
sar
retf
(bad)
(bad)
dec
cdq
fcomp
pop
pop
retf
inc
out
cmps
xchg
aaa
clc
scas
imul
aaa
pop
inc
pop
inc
int
(bad)
mov
psubusw
sub
xor
and
sbb
dec
mov
and
xchg
inc
das
cwde
push
dec
and
sbb
mov
outs
into
push
ret
(bad)
(bad)
(bad)
jmp
lods
leave
mov
or
scas
cmp
dec
jnp
mov
mov
adc
push
cld
pop
ret
fistp
add
cmp
popf
mov
mov
aad
jne
fs
cdq
retf
mul
in
mov
and
fisubr
xchg
jne
sub
lods
or
out
fiadd
jne
inc
mov
std
das
and
push
(bad)
test
(bad)
jmp
out
xchg
data16
stc
pusha
mov
test
pop
mov
(bad)
call
dec
das
outs
inc
jmp
add
mov
sti
(bad)
mov
pusha
add
mov
stos
jo
inc
(bad)
or
push
je
mov
icebp
shl
je
test
mov
cmp
mov
in
(bad)
(bad)
(bad)
(bad)
fsubr
push
sub
jmp
jl
bound
pop
enter
rcr
xor
mov
jmp
push
dec
and
sub
sub
cmp
mov
sbb
out
and
jg
push
jge
lods
mov
jmp
repz
cmp
nop
popa
pop
mov
icebp
int3
cmp
inc
inc
xor
(bad)
(bad)
mov
leave
int
lds
mov
retf
pop
mov
imul
xchg
jmp
not
inc
mov
ins
in
dec
ins
imul
test
or
and
mov
mov
enter
fld
dec
mov
or
pusha
(bad)
call
fldcw
shr
repnz
ss
rol
ja
(bad)
jp
fisubr
repz
adc
pop
(bad)
(bad)
(bad)
dec
test
ins
pop
lahf
fimul
das
ror
and
dec
retf
mov
test
call
addr16
inc
adc
pop
cmps
mov
mov
push
fild
in
not
(bad)
(bad)
(bad)
fbstp
jg
xor
data16
jge
ins
pop
popf
mov
push
mov
push
ud0
pop
test
jmp
xor
jle
stos
cli
pop
jbe
dec
je
enter
(bad)
(bad)
(bad)
jp
test
cdq
dec
lods
dec
in
mov
inc
mov
adc
lock
test
pusha
lods
inc
xchg
jne
sar
cmc
lds
mov
push
std
ja
jg
pusha
sbb
fisub
sub
cwde
loope
mov
xlat
imul
xor
sbb
iret
jecxz
faddp
xchg
aas
jmp
repz
dec
hlt
add
xchg
mov
jmp
(bad)
fs
add
add
(bad)
call
ds
xchg
fist
xchg
fneni(8087
adc
add
add
xor
fst
or
pop
(bad)
sub
arpl
bound
xchg
out
rcl
into
(bad)
cld
and
(bad)
call
ds
scas
mov
add
call
(bad)
fistp
ins
xchg
mov
(bad)
(bad)
inc
pop
daa
pop
out
mov
test
push
rol
sbb
jge
aas
(bad)
(bad)
cmp
pop
cmps
sbb
xchg
add
(bad)
jno
(bad)
cld
inc
mov
dec
jecxz
push
in
xlat
xor
adc
pop
mov
movs
inc
into
inc
adc
mov
and
add
(bad)
(bad)
(bad)
mov
or
cmp
(bad)
mov
data16
pop
int
mov
cmps
aad
push
cmp
bound
pop
cmp
fdivr
cmp
ja
mov
xchg
xor
pushf
inc
cmps
mov
test
xchg
(bad)
(bad)
(bad)
dec
mov
mov
push
push
and
in
imul
icebp
dec
jmp
js
mov
test
dec
enter
pop
sar
and
sar
hlt
push
sub
out
ror
jnp
mov
hlt
mov
push
shr
jb
add
xor
(bad)
(bad)
(bad)
call
mov
mov
sbb
or
cli
pushf
scas
pop
inc
push
movs
adc
sub
ja
cli
sbb
addr16
sbb
xor
ins
les
adc
call
ins
loopne
or
xchg
out
test
fs
iret
xchg
xchg
mov
sub
xchg
sbb
inc
jge
mov
inc
ins
xchg
mov
mov
enter
jnp
cmc
mov
jge
sahf
call
sbb
icebp
sub
and
repz
inc
and
test
pop
jl
adc
mov
sbb
fidivr
jmp
enter
(bad)
cli
or
call
clc
dec
lods
push
mov
push
inc
pop
std
jmp
bound
mov
cmps
mov
inc
add
shl
push
or
(bad)
cmp
enter
mov
inc
std
fwait
add
jl
test
push
pop
sbb
daa
dec
dec
cli
dec
sub
or
or
aad
jmp
sub
inc
mov
sub
ror
aad
and
xchg
stos
gs
fcomip
pop
ja
into
mov
fld
sar
(bad)
(bad)
call
bound
jns
fstp
std
pop
div
xchg
int3
inc
sbb
(bad)
mov
jbe
inc
daa
and
movs
jle
inc
push
imul
add
sub
jne
adc
loop
push
retf
sub
ss
(bad)
(bad)
(bad)
call
mov
fmul
idiv
mov
hlt
add
in
jmp
mov
(bad)
(bad)
call
inc
scas
rcl
sbb
adc
out
inc
repz
jns
aaa
loopne
ret
fist
(bad)
(bad)
(bad)
call
mov
ret
js
ffreep
inc
mov
cmp
fwait
or
mov
jmp
inc
fild
imul
adc
fidiv
xor
imul
shr
pop
mov
fisttp
mov
mov
call
mov
xchg
movs
add
repnz
scas
or
push
(bad)
(bad)
(bad)
inc
xchg
iret
lods
hlt
xchg
aaa
data16
dec
cmp
push
popa
push
out
(bad)
(bad)
(bad)
push
out
cmp
ret
add
inc
test
push
add
ret
loopne
dec
xor
jmp
jle
jbe
inc
sub
std
fisttp
push
(bad)
jns
(bad)
(bad)
jg
xor
(bad)
(bad)
push
or
pop
cmp
shr
sbb
mov
pop
js
clc
out
jl
jg
(bad)
(bad)
(bad)
dec
fnsave
out
adc
mov
xor
pop
cld
sar
mov
mov
je
adc
movs
shl
rol
mov
out
lds
sub
pop
std
bound
fbld
(bad)
jb
inc
jnp
xor
jg
sahf
or
sbb
pop
data16
cwde
and
aam
fadd
(bad)
(bad)
(bad)
push
inc
nop
pop
sbb
dec
cmp
call
dec
iret
sbb
push
dec
cli
push
pop
dec
(bad)
scas
and
cld
(bad)
inc
leave
and
xchg
ja
jb
pop
adc
sbb
mov
ja
je
push
scas
mov
jmp
mov
lea
(bad)
(bad)
(bad)
inc
mov
and
mov
mov
xor
leave
inc
or
ret
add
jmp
lods
cmps
(bad)
(bad)
(bad)
jle
inc
xchg
ss
mov
dec
adc
int
int3
mov
clc
int
xchg
jns
ficom
stc
inc
dec
ins
push
fcomp
ins
or
fwait
stos
sbb
out
(bad)
mov
inc
jl
xor
mov
xchg
cmc
push
js
mov
inc
xor
aaa
stc
jl
addr16
jmp
popf
or
in
dec
xchg
js
jl
stos
or
(bad)
out
clc
mov
sub
loope
xor
pop
pop
adc
or
sub
and
push
sti
jmp
shl
sub
(bad)
bound
aas
scas
sbb
movs
jbe
das
jnp
rcr
out
cli
(bad)
jmp
in
mov
dec
loop
xor
jecxz
retf
xchg
(bad)
(bad)
(bad)
push
mov
retf
jae
mov
ret
ins
out
add
(bad)
adc
mov
cmp
cmp
push
call
es
cmp
jge
cmps
push
dec
mov
xchg
xor
mov
in
pop
pop
movs
(bad)
(bad)
inc
data16
ins
enter
pop
rol
das
repz
repnz
dec
sti
jg
and
mov
dec
(bad)
jmp
xchg
adc
adc
and
mov
sbb
fsub
pop
loopne
sub
(bad)
mov
lods
jae
out
push
arpl
bound
mov
sbb
mov
push
mov
repz
leave
jo
(bad)
(bad)
inc
pushf
aas
pop
dec
aam
inc
scas
stc
add
test
das
inc
mov
mov
call
addr16
repz
jne
(bad)
ds
sbb
shl
popa
dec
xchg
dec
sti
and
(bad)
(bad)
push
ret
loopne
inc
test
int
jo
jp
arpl
rol
inc
(bad)
(bad)
dec
mov
sbb
or
stos
into
repz
test
push
push
mov
lods
push
xor
or
jmp
fwait
push
jne
jnp
gs
mov
xor
lock
clc
add
scas
sub
jno
xor
dec
std
ret
cmp
clc
push
fs
(bad)
sbb
repz
jmp
adc
jb
(bad)
(bad)
jmp
and
movs
push
xlat
out
or
leave
leave
(bad)
addr16
push
mov
and
jno
(bad)
out
xchg
stos
call
fld
jae
xchg
test
cmc
mov
add
or
xor
inc
jge
push
je
js
adc
(bad)
jmp
mov
cdq
shl
xchg
xchg
dec
les
fistp
cdq
int
scas
sbb
push
les
jbe
cmps
stc
aad
sub
mov
leave
retf
arpl
mov
xor
mov
(bad)
(bad)
mov
ficom
es
rcr
mov
sbb
pop
add
js
imul
(bad)
in
out
mov
dec
(bad)
fimul
cmp
sub
cli
mov
jns
jmp
push
ja
or
loopne
lds
icebp
cmps
aam
xchg
sub
inc
outs
cmp
ss
(bad)
jmp
sti
jl
retf
test
lock
push
xchg
or
mov
(bad)
(bad)
fbld
(bad)
scas
cli
or
das
xchg
bswap
out
imul
cmp
rcl
sub
add
(bad)
mov
(bad)
push
scas
arpl
into
(bad)
call
pop
mov
pop
call
mov
pushf
xchg
push
mov
pop
xchg
jmp
dec
shl
test
(bad)
dec
repz
jecxz
out
jmp
cmps
retf
pushf
iret
add
mov
cld
es
fwait
xor
data16
pop
popf
(bad)
(bad)
(bad)
call
cmps
stos
(bad)
push
pop
and
dec
jb
xchg
fcom
ret
xchg
retf
sbb
ds
(bad)
jmp
mov
sbb
and
mov
jae
retf
shr
pop
shl
scas
sub
push
mov
icebp
pop
and
mov
push
pop
sbb
rcr
cmc
popf
scas
mov
jp
cld
retf
mov
(bad)
mov
inc
or
dec
xchg
mov
sub
xchg
dec
(bad)
(bad)
(bad)
jmp
and
xor
imul
in
dec
test
mov
xchg
loop
popa
lods
sub
jae
jmp
(bad)
(bad)
jmp
movs
(bad)
cmps
mov
mov
cmp
mov
ud0
aaa
cld
jl
jmp
cmp
xor
add
cli
mov
xor
mov
inc
lds
and
movs
lahf
ficomp
fwait
push
dec
pop
jns
pop
xor
lods
inc
rol
cmp
pop
sbb
sub
std
xor
jle
int3
aas
adc
shr
jle
inc
mov
mov
shr
fs
test
inc
jmp
push
je
std
(bad)
mov
lea
sbb
jmp
shl
mov
inc
mov
push
add
sub
gs
adc
push
(bad)
(bad)
(bad)
call
loopne
mov
lahf
ins
pop
push
push
in
lods
cmp
aam
in
aaa
pop
sbb
popa
retf
(bad)
xchg
out
xchg
pop
mov
ins
push
scas
das
sbb
sbb
push
push
pop
(bad)
jp
adc
(bad)
mov
jmp
in
adc
mov
sub
jecxz
jge
jmp
sar
(bad)
jnp
mov
out
fldpi
ds
clc
psrld
or
xor
pop
mov
xor
(bad)
call
mov
xchg
mov
fwait
xor
jge
lods
outs
pop
(bad)
jmp
xor
in
test
in
(bad)
(bad)
dec
dec
enter
adc
mov
call
xor
inc
jmp
jle
mov
test
mov
mov
jg
ins
(bad)
mov
imul
jg
inc
push
pop
mov
pop
mov
lods
jle
jmp
xchg
pop
(bad)
(bad)
jg
xchg
stos
add
cmp
sbb
pop
cmc
xor
sti
(bad)
call
fcomp
pop
fimul
pop
jbe
mov
jnp
outs
dec
sub
out
hlt
scas
jb
(bad)
(bad)
(bad)
push
cwde
fsubr
pop
imul
cdq
(bad)
mov
mov
dec
mov
into
and
(bad)
(bad)
call
rcl
mov
aad
xor
or
push
out
and
js
jae
xchg
ins
dec
jmp
inc
loope
repz
int
mov
rcl
ds
sub
adc
push
ja
jae
adc
mov
jnp
sub
mov
jmp
and
xlat
out
jns
neg
xor
sbb
(bad)
jge
call
mov
cmps
adc
push
popa
push
int3
in
mov
push
push
xor
icebp
jmp
push
in
(bad)
(bad)
fdiv
int
lahf
and
pop
mov
gs
out
inc
or
push
adc
ret
sub
daa
not
jle
(bad)
jg
sub
mov
mov
(bad)
daa
mov
push
(bad)
(bad)
(bad)
(bad)
mov
inc
clc
sub
sbb
jns
adc
mov
loopne
ds
cmp
test
mov
(bad)
call
cmp
daa
jl
(bad)
(bad)
(bad)
nop
push
sbb
pusha
and
ja
pop
mov
shl
push
sub
nop
sub
xchg
pop
cmp
push
jne
sub
std
(bad)
push
or
sbb
les
mov
loope
push
loopne
sub
(bad)
(bad)
jmp
test
lods
movs
push
sahf
rol
sub
js
pop
retf
enter
and
(bad)
(bad)
inc
push
not
adc
fcomp
cmps
sbb
ds
add
jge
mov
xchg
jmp
test
adc
mov
fsubr
mov
fst
jmp
jno
mov
mov
sbb
adc
xor
test
sbb
adc
sub
dec
outs
mov
cdq
mov
iret
test
inc
adc
retf
retf
or
cs
fcmovne
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
(bad)
jp
inc
add
jno
ds
stos
mov
sub
iret
dec
sub
cmp
iret
inc
call
dec
sbb
mov
(bad)
(bad)
(bad)
(bad)
fisubr
int3
(bad)
sbb
jns
and
arpl
jecxz
add
hlt
mov
hlt
jne
mov
dec
jo
into
pop
add
(bad)
ss
outs
mov
mov
rcl
mov
xor
inc
es
cmc
jl
sub
(bad)
(bad)
call
push
or
and
mov
cli
lods
aaa
dec
pop
cmp
sub
cmps
test
mov
jo
xor
inc
lea
or
push
sbb
(bad)
inc
inc
adc
ins
nop
or
add
mov
mov
dec
jecxz
xchg
lods
ss
daa
xchg
cmp
shr
sub
adc
(bad)
(bad)
inc
xchg
dec
retf
ret
mov
pop
mov
int
les
(bad)
call
cmp
add
rcr
mov
xor
test
lods
call
dec
(bad)
(bad)
(bad)
call
add
(bad)
std
push
mov
adc
sub
pop
(bad)
fst
and
(bad)
(bad)
(bad)
jmp
lahf
jge
out
cmp
or
sbb
neg
(bad)
xchg
push
in
clc
adc
pop
jp
mov
xchg
xlat
push
(bad)
jmp
adc
arpl
xor
and
mov
cwde
mov
mov
jle
add
mov
add
pop
cmp
lds
sub
push
(bad)
(bad)
push
mov
repz
sbb
std
pop
cdq
xchg
enter
push
cs
unpckhps
(bad)
(bad)
(bad)
dec
add
icebp
pop
cmp
stos
movs
pop
ins
mov
jmp
fld
sbb
(bad)
(bad)
(bad)
jmp
ja
sar
sbb
popa
cli
enter
mov
add
imul
mov
mov
dec
push
into
es
bound
ss
jmp
jns
mov
jnp
into
cmp
xchg
mov
jge
sub
movs
sar
scas
cdq
and
(bad)
call
adc
test
pop
rcr
out
inc
in
inc
cs
(bad)
jg
adc
sbb
imul
clc
push
push
pop
test
(bad)
(bad)
(bad)
call
sub
fcom
inc
jl
push
mov
dec
push
fsubr
cmp
nop
(bad)
dec
sub
clc
inc
jbe
test
ficom
inc
(bad)
(bad)
(bad)
inc
sub
push
cmp
or
(bad)
daa
cmp
jle
cmp
(bad)
mov
pop
and
mov
outs
sbb
(bad)
(bad)
(bad)
dec
ins
inc
xchg
xor
mov
and
rcl
shl
inc
das
pop
cmp
ja
cli
call
cmp
(bad)
dec
push
popf
jne
push
pushf
nop
data16
dec
loopne
jecxz
mov
pop
cmc
jo
or
(bad)
(bad)
jmp
ror
sbb
mov
adc
lahf
pop
mov
mov
(bad)
(bad)
dec
retf
shl
jne
cwde
cmp
mov
in
or
ficom
mov
lods
jae
sbb
loope
or
lds
mov
sti
dec
(bad)
pop
aad
and
pop
jns
cmp
mov
jb
sbb
(bad)
call
inc
outs
pusha
mov
in
push
push
pushf
lds
out
push
jnp
repz
pop
jge
(bad)
(bad)
(bad)
(bad)
mov
sar
xchg
imul
inc
iretw
imul
sbb
push
shl
sar
(bad)
(bad)
jmp
push
test
in
sbb
les
jno
outs
pop
ror
lock
sub
lods
pop
jne
add
cdq
nop
ss
push
sub
int
retf
cs
lods
mov
inc
idiv
(bad)
(bad)
mov
inc
mov
into
ds
(bad)
lods
ins
add
pop
dec
push
mov
(bad)
call
hlt
mov
je
movs
int
outs
sub
scas
adc
(bad)
dec
sub
cmp
adc
lock
enter
jbe
or
jmp
(bad)
cmp
sar
es
stos
add
cmp
push
mov
xchg
inc
jnp
mov
push
into
adc
fld
aaa
out
and
cmp
(bad)
(bad)
aas
inc
mov
ins
stc
nop
test
(bad)
mov
out
mov
ins
scas
sbb
add
fiadd
(bad)
(bad)
call
lds
das
imul
jge
jmp
add
mov
(bad)
(bad)
(bad)
in
mov
dec
mov
into
jge
xchg
aas
adc
mov
outs
jmp
call
out
loop
ret
mov
sub
pop
dec
dec
fsubr
sub
in
inc
add
loopne
mov
or
jmp
in
sub
pop
ret
mov
std
and
push
add
scas
sub
pop
loopne
add
jmp
cmp
jns
jmp
adc
cmps
mov
retf
or
(bad)
(bad)
(bad)
jle
(bad)
lock
dec
add
outs
inc
and
xchg
mov
mov
(bad)
jmp
ja
(bad)
(bad)
mov
test
push
in
push
cmp
inc
push
iret
pop
outs
sahf
lea
cmps
dec
cld
xlat
stc
sub
lds
fild
shl
mov
push
retf
mov
test
xor
xchg
shl
inc
imul
cmps
cld
es
jmp
sub
cwde
test
adc
ins
jbe
(bad)
dec
push
jmp
sub
push
in
ret
enter
cmp
les
arpl
pop
and
scas
je
(bad)
cmp
and
aad
js
je
sar
xchg
(bad)
(bad)
call
sbb
cmp
into
mov
fidiv
cmp
and
aam
sub
(bad)
(bad)
mov
mov
les
dec
xor
mov
aas
pop
int3
xchg
add
sub
cdq
xlat
lea
pop
ret
test
mov
pusha
sbb
mov
jl
xchg
fimul
(bad)
(bad)
mov
mov
xchg
shl
cld
ins
sbb
loope
mov
mov
(bad)
(bad)
(bad)
jmp
call
inc
fcomp
push
clc
rcr
sub
cli
aam
mov
in
div
pop
ja
sub
adc
mov
fdivr
(bad)
(bad)
call
ret
mov
dec
lahf
mov
or
cwde
imul
push
mov
movs
sub
dec
adc
push
sbb
bound
adc
outs
imul
sub
(bad)
(bad)
cmp
ficomp
mov
inc
cmp
aas
jle
jmp
out
mul
loop
ror
push
pop
adc
cmp
rcr
bound
pop
jl
mov
or
xchg
push
sbb
inc
retf
(bad)
call
in
adc
inc
mov
jl
call
mov
int3
and
fcomip
ror
out
stos
imul
mov
(bad)
pop
clc
(bad)
call
push
sbb
xor
hlt
jge
ss
mov
je
idiv
(bad)
mov
pop
lahf
stos
dec
sbb
sbb
xlat
dec
arpl
mov
dec
adc
stos
ins
sti
inc
addr16
js
sub
(bad)
(bad)
(bad)
jmp
or
add
inc
ret
sub
mov
stos
cmp
call
sub
arpl
(bad)
(bad)
inc
cmps
jae
adc
jae
or
ds
cmp
jae
mov
sbb
push
mov
fcomip
call
dec
mov
cmp
sub
add
dec
inc
mov
aad
(bad)
jmp
xor
sbb
mov
xor
cdq
pop
in
popa
js
or
jb
int
(bad)
(bad)
(bad)
jg
aaa
cmp
fwait
popf
fdivrp
fstp
add
fsub
sub
jmp
xchg
jge
jns
(bad)
(bad)
(bad)
jmp
fwait
inc
dec
sbb
push
jae
jbe
fs
rcr
lods
ins
mov
or
out
jmp
rcr
pop
xlat
call
mov
int3
test
(bad)
push
cmc
dec
pushf
loope
out
pop
loop
push
pop
arpl
dec
dec
jg
jmp
jae
jg
(bad)
call
fbstp
call
dec
cmp
ins
pop
adc
inc
lock
test
popf
jecxz
ss
cmp
sub
mov
sbb
cmp
enter
and
fwait
or
sub
(bad)
loope
int3
cwde
std
(bad)
(bad)
dec
mov
cdq
call
push
push
(bad)
shr
inc
dec
adc
pop
pop
vpmadd52luq
cmps
(bad)
(bad)
call
or
push
iret
pushf
in
and
push
shr
popa
call
pop
inc
pusha
cli
add
adc
pop
xor
jp
(bad)
sbb
sti
xchg
xchg
or
iret
xchg
adc
stos
cmp
xor
mov
mov
popa
(bad)
shl
pop
lock
push
sub
dec
fs
xor
test
lods
lock
(bad)
(bad)
inc
loop
jecxz
sbb
shl
inc
add
enter
test
mov
push
pop
dec
outs
jg
test
inc
lods
jmp
fs
sbb
pop
or
loope
(bad)
dec
frstor
inc
xor
add
mov
cmc
mov
arpl
dec
sub
dec
sub
fsub
jle
cld
cdq
inc
(bad)
dec
adc
ds
mov
into
jp
gs
imul
ret
(bad)
fcomip
jmp
push
mov
pop
fwait
dec
imul
fsub
cs
ret
xor
out
sbb
(bad)
(bad)
(bad)
mov
ss
jne
add
inc
push
xchg
mov
dec
js
lea
mov
aad
(bad)
(bad)
dec
sbb
or
in
fistp
shl
or
inc
push
clc
jmp
clc
mov
stos
scas
push
dec
call
cwde
or
sub
cli
out
lds
ret
pop
fwait
sahf
test
mov
ds
retf
mov
(bad)
(bad)
push
ds
mov
dec
rcl
addr16
mov
imul
xchg
arpl
inc
arpl
cdq
(bad)
dec
add
mov
stos
pusha
jne
and
dec
mov
mov
jbe
pop
in
dec
pop
cmp
fisubr
jg
xchg
sbb
rol
jb
mov
xchg
add
(bad)
mov
fidiv
adc
pushf
loop
mov
xchg
ja
cmps
jl
imul
push
mov
(bad)
(bad)
(bad)
inc
cmp
test
add
into
mov
cmp
pop
mov
cmp
inc
mov
hlt
push
shl
pop
xor
mov
(bad)
(bad)
push
xor
mov
lahf
mov
add
cli
movs
sbb
add
(bad)
xchg
(bad)
(bad)
fcomip
ja
mov
fiadd
std
iret
push
or
(bad)
into
cli
test
call
or
mov
movs
push
jmp
mov
cwde
out
xchg
xchg
das
and
(bad)
jmp
push
xchg
outs
mov
mov
mov
push
aad
jecxz
std
cmp
or
inc
cmp
add
jg
icebp
(bad)
test
outs
inc
jle
leave
mov
inc
mov
add
pop
addr16
cmc
call
push
(bad)
pushf
or
enter
mov
jns
rcr
dec
pop
das
mov
adc
ds
pushaw
push
push
(bad)
mov
es
scas
jle
cmps
ins
mov
scas
jle
loope
aam
inc
(bad)
(bad)
(bad)
inc
int
mov
dec
clc
adc
adc
jne
mov
iret
lock
das
clc
push
pop
mov
loopne
out
mov
mov
sub
mov
adc
cs
ret
(bad)
jmp
ficomp
out
add
xor
mov
test
mov
and
sub
cld
mov
inc
mov
repnz
jmp
fcmovnbe
stos
push
inc
jb
scas
aaa
nop
cdq
(bad)
push
add
pop
adc
cmps
adc
(bad)
(bad)
(bad)
(bad)
mov
fs
push
rcl
iret
mov
add
mov
mov
mov
mov
adc
addr16
(bad)
call
adc
pop
mov
std
repnz
(bad)
adc
push
xchg
imul
(bad)
jmp
int
adc
sub
popa
icebp
mov
ins
sbb
in
fcmovnb
gs
outs
aaa
cld
jmp
dec
mov
popf
test
ret
adc
push
mov
(bad)
push
cld
ret
icebp
imul
aas
pop
cmp
sbb
mov
mov
inc
or
mov
sub
fs
and
xchg
xor
push
ret
sbb
rol
lock
(bad)
(bad)
(bad)
jmp
shl
dec
(bad)
mov
xchg
loope
enter
or
jl
into
shl
mov
(bad)
(bad)
jmp
lods
fs
sub
cwde
or
mov
out
test
jbe
mov
mov
xor
sub
xchg
xchg
(bad)
(bad)
(bad)
out
cld
inc
add
xor
fidiv
std
gs
pop
jmp
push
ds
jmp
xchg
sub
hlt
out
push
es
jnp
and
mov
jbe
dec
out
dec
and
mov
jmp
mov
and
repnz
imul
mov
call
mov
cmc
scas
stos
push
inc
xchg
out
scas
es
into
out
cmp
aad
fs
(bad)
(bad)
(bad)
mov
xchg
pop
addr16
mov
jno
xchg
aas
push
test
lea
mov
sbb
dec
int
mov
and
sbb
iret
cld
add
push
push
(bad)
stos
mov
and
nop
adc
outs
sub
test
cmp
jmp
(bad)
(bad)
inc
add
bound
iret
nop
lods
stc
out
sahf
mov
push
xlat
jo
pop
int
lods
outs
stc
(bad)
(bad)
dec
iret
or
lods
popf
jnp
mov
in
daa
lea
sbb
sub
(bad)
(bad)
(bad)
fistp
lock
sahf
call
arpl
addr16
sti
sti
fdivr
inc
and
sar
inc
sbb
add
jp
sbb
call
sbb
add
lock
push
sub
repz
int
jbe
cwde
jg
adc
sahf
add
(bad)
call
loopne
mov
jl
sub
cmp
mov
sar
sub
cli
xchg
sbb
cmp
out
cmp
push
data16
pop
inc
cmp
mov
dec
(bad)
jmp
jp
movs
push
pop
imul
push
adc
aas
mov
sbb
mov
(bad)
jmp
sbb
imul
rcr
ins
push
pop
fiadd
lea
mov
jl
cs
push
std
xlat
or
pop
scas
js
call
push
jl
pop
sar
retf
scas
enter
lahf
int
mov
dec
(bad)
(bad)
(bad)
jmp
sub
lods
rcl
or
fwait
jle
mov
and
push
sbb
in
xchg
(bad)
in
or
rcl
xchg
loope
push
mov
mov
pop
imul
push
jbe
std
(bad)
(bad)
in
repz
hlt
xchg
jecxz
sbb
xor
pop
mov
push
xor
xchg
xor
sub
popf
mov
lock
pop
fstp
push
arpl
(bad)
fistp
mov
sti
clc
enter
addr16
js
push
js
data16
aad
pop
dec
lods
mov
dec
adc
adc
xchg
pop
test
mov
add
inc
or
clc
add
sbb
daa
in
sub
call
pop
std
xchg
repz
add
in
arpl
test
sar
(bad)
(bad)
cmp
and
xchg
jb
aas
popa
sti
xchg
jb
test
add
hlt
(bad)
jg
popf
mov
xor
pop
jg
pusha
fimul
add
jno
stc
(bad)
call
cmc
inc
pop
sub
push
and
cmp
jle
xchg
push
mov
jg
xchg
adc
cmps
mov
sub
retf
mov
sub
call
mov
xchg
call
sbb
xor
jmp
cmp
imul
push
scas
sbb
mov
(bad)
jmp
push
stos
mov
popa
add
mov
lock
daa
push
pusha
fbstp
jge
call
fcomp
xor
aas
aam
mov
push
sub
jp
fisttp
mov
sbb
(bad)
pop
add
fsubr
icebp
call
add
and
xor
test
cmps
push
out
inc
cld
fnstsw
aam
mov
(bad)
call
les
inc
in
nop
aad
(bad)
pop
ja
push
stc
js
jno
xchg
pop
arpl
and
loop
push
ror
inc
pop
fdivr
sbb
popa
out
sub
pop
push
jmp
call
jno
sbb
mov
cmp
mov
pop
aam
mov
(bad)
cmp
(bad)
(bad)
push
les
mov
das
les
inc
stc
aas
cmp
inc
or
nop
inc
in
in
jecxz
pop
stc
mov
xor
call
leave
mov
cmp
(bad)
(bad)
xchg
pop
call
(bad)
inc
inc
cmps
xor
xchg
popa
sahf
aad
ror
ins
stos
sub
test
mov
call
lods
data16
sub
das
imul
xchg
sbb
pop
push
nop
leave
adc
(bad)
(bad)
(bad)
push
(bad)
mov
ds
pop
pop
push
push
cmp
cdq
scas
xlat
jnp
dec
sbb
out
ins
push
add
(bad)
(bad)
jmp
or
push
push
pop
adc
and
xchg
dec
(bad)
fistp
and
or
add
mov
fbld
or
mov
mov
jmp
dec
into
adc
iret
movs
push
out
and
pop
nop
lahf
jae
cmp
mov
add
jg
(bad)
call
sti
push
imul
mov
(bad)
sbb
mov
dec
rcr
mov
mov
dec
cmp
pop
xchg
add
(bad)
push
xchg
idiv
mov
enter
and
fcmovne
imul
push
xchg
(bad)
cmp
movs
mov
pop
mov
pop
(bad)
mov
(bad)
sub
(bad)
(bad)
(bad)
(bad)
(bad)
pusha
push
scas
mov
pop
lea
push
pop
(bad)
cmp
mov
sbb
cmp
enter
(bad)
(bad)
push
sub
(bad)
cmc
sub
push
fist
cs
call
pushf
ret
inc
or
and
inc
sub
inc
ds
inc
push
repz
call
mov
xchg
cmps
and
adc
(bad)
(bad)
inc
mov
(bad)
mov
jb
xchg
inc
aam
mov
lds
xor
int
hlt
pop
mov
cmp
jmp
jle
movs
inc
(bad)
pop
ror
ret
inc
movs
mov
stos
dec
mov
dec
pop
loopne
(bad)
push
or
gs
sbb
stc
fcmovbe
outs
push
sub
imul
push
xor
call
push
inc
or
cmp
dec
mov
int
(bad)
call
sbb
scas
mov
push
inc
loopne
adc
cmp
cs
(bad)
(bad)
call
arpl
jge
leave
pop
mov
scas
jle
iret
loopne
inc
aam
mov
out
sbb
jmp
add
retf
dec
lock
dec
xchg
pop
pop
adc
jmp
sbb
popa
xchg
div
ret
mul
stos
pop
fiadd
mov
sahf
jge
(bad)
(bad)
(bad)
call
call
pop
lds
xor
pop
mov
push
daa
mov
(bad)
enter
fdivr
js
(bad)
(bad)
(bad)
jmp
inc
aad
inc
gs
push
call
clc
ret
sahf
xchg
mov
lock
lahf
mov
nop
clc
push
adc
push
mov
dec
jmp
inc
dec
sub
in
hlt
imul
clc
not
fst
pop
int
movq
(bad)
jg
dec
repnz
push
xor
adc
xchg
and
and
cld
mov
(bad)
(bad)
call
rcl
ss
cmp
ja
dec
adc
cld
(bad)
(bad)
jmp
icebp
cmps
shl
shl
or
adc
sub
xlat
and
je
pusha
mov
mov
dec
jns
pop
push
sbb
mov
popf
inc
mov
add
hlt
icebp
(bad)
cwde
add
sti
jle
and
scas
sbb
lods
cmp
(bad)
(bad)
(bad)
mov
(bad)
dec
idiv
mov
cli
push
imul
mov
das
ds
stos
(bad)
(bad)
fcomip
ret
mov
lea
mov
add
cmp
in
(bad)
(bad)
(bad)
jmp
lea
and
inc
and
in
clc
(bad)
shr
(bad)
(bad)
jmp
ret
adc
sub
int3
out
xchg
pop
out
xchg
jbe
sub
jns
sub
into
jmp
add
ins
loope
leave
sbb
(bad)
(bad)
push
pop
test
fist
inc
mov
(bad)
cmp
mov
pop
inc
jmp
mov
dec
ret
add
std
(bad)
(bad)
call
xlat
std
daa
popa
or
mov
mov
loopne
mov
mov
mov
(bad)
mov
nop
adc
cmp
mov
imul
mov
lea
shl
cwde
and
pop
xor
jne
add
ss
fidivr
inc
mov
(bad)
(bad)
dec
inc
lea
sub
jae
push
mov
pop
ret
add
fiadd
cmp
dec
(bad)
inc
aaa
jae
pop
or
and
retf
add
(bad)
test
(bad)
(bad)
jg
push
loopne
push
call
inc
cli
dec
jp
fwait
cmps
nop
xchg
push
(bad)
(bad)
(bad)
jmp
push
popf
push
mov
mov
jle
in
and
adc
sbb
mov
jnp
ja
ret
or
int3
mov
fld
inc
jno
mov
(bad)
mov
clc
(bad)
(bad)
call
imul
jp
mov
mov
push
into
ins
jecxz
scas
mov
jbe
lea
dec
stos
(bad)
(bad)
jmp
mov
adc
pop
pusha
ins
push
and
adc
jae
cmps
mov
(bad)
(bad)
(bad)
jmp
daa
sbb
push
repnz
pop
std
cs
cmps
cli
pop
clc
loope
out
xchg
pop
jae
fsubr
or
inc
push
pop
sub
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
mov
inc
or
sbb
push
jne
dec
cmp
xor
add
stc
out
(bad)
pop
loopne
ins
sub
sbb
sar
fwait
add
xor
in
inc
cmp
dec
fild
repz
ja
pop
(bad)
(bad)
(bad)
(bad)
call
mov
sti
sub
fimul
jns
jl
adc
sub
mov
jecxz
cmp
ror
add
mov
fsub
bound
push
push
repnz
jmp
aad
xlat
(bad)
(bad)
fidivr
cld
(bad)
enter
test
bound
mov
outs
sar
mov
sbb
(bad)
(bad)
(bad)
inc
jnp
dec
fist
(bad)
fsub
jns
rol
dec
repz
sbb
mov
(bad)
(bad)
(bad)
(bad)
call
push
mov
popa
xchg
sub
ds
popf
mov
popa
mov
dec
or
add
(bad)
call
push
pop
xor
dec
jle
dec
adc
(bad)
mov
mov
inc
xchg
es
(bad)
bound
clc
out
add
stos
jnp
or
adc
std
hlt
(bad)
(bad)
(bad)
(bad)
cmp
pop
xor
outs
push
ins
sbb
or
inc
movs
dec
sub
mov
mov
jo
(bad)
(bad)
(bad)
push
cdq
xlat
mov
add
mov
leave
call
mov
mov
lock
(bad)
(bad)
push
push
xchg
ds
pop
inc
shl
lahf
out
es
mov
mov
leave
push
jbe
idiv
inc
(bad)
pushf
cmp
test
jge
lods
jp
xor
and
and
stos
mov
ja
(bad)
in
scas
aad
jmp
pushf
stc
stc
xchg
jo
fsub
js
sub
scas
mov
mov
or
mov
cmp
push
icebp
(bad)
(bad)
push
lds
ds
push
sub
pop
and
push
mov
std
xchg
mov
mov
fistp
test
test
pop
push
or
(bad)
call
jno
aam
in
cmove
push
sbb
(bad)
ss
jb
mov
mov
jmp
jne
cmc
mov
shr
cmp
fbld
add
inc
shl
lods
cmp
das
and
js
sar
dec
out
out
(bad)
(bad)
(bad)
cmp
xchg
inc
jl
(bad)
jmp
jb
das
test
(bad)
outs
in
retf
int
jnp
xlat
xor
(bad)
(bad)
call
sub
and
in
mov
xchg
and
or
ins
cmp
sti
stos
(bad)
(bad)
(bad)
jmp
dec
loop
xchg
mov
repz
les
sub
adc
in
xor
scas
inc
in
cld
imul
inc
(bad)
call
cld
pop
out
push
jbe
mov
jae
(bad)
mov
cld
or
cmp
mov
jmp
leave
fs
stos
repz
jne
imul
arpl
fwait
pop
lahf
fmulp
ret
adc
mov
jae
and
inc
cmp
cli
sbb
push
call
mov
jae
std
cmp
idiv
out
or
fwait
sub
test
push
dec
lock
mov
xchg
and
movs
ja
jg
fnsave
sbb
fidivr
sub
das
idiv
(bad)
call
cld
rcl
(bad)
jp
daa
loope
push
inc
test
pop
sti
(bad)
shl
test
out
mov
inc
cmp
js
or
(bad)
cmp
iret
pop
push
mov
jle
xchg
(bad)
(bad)
(bad)
inc
sbb
mov
or
call
inc
xor
pop
add
in
xor
(bad)
call
jl
loopne
inc
adc
cli
or
shl
in
dec
jg
xor
(bad)
(bad)
inc
shr
pop
pop
adc
loope
in
stos
ret
cwde
lods
daa
jmp
mov
mov
sti
sbb
ja
mov
(bad)
call
mov
and
out
sub
gs
sub
aad
fwait
push
and
scas
retf
mov
and
sahf
or
(bad)
jmp
push
push
xor
mov
push
lea
enter
ficom
(bad)
fs
call
push
pushf
cmps
or
mov
mov
das
sub
push
inc
cdq
es
aad
call
iret
pop
sub
or
mov
push
retf
sti
jnp
stos
retf
pop
cmps
jle
push
xor
into
lds
jae
push
shl
popf
pushf
mov
(bad)
inc
pusha
lods
(bad)
hlt
mov
and
mul
add
jle
xor
scas
jmp
sub
hlt
fs
icebp
dec
ret
imul
jge
mov
jbe
cmps
sub
(bad)
(bad)
inc
scas
mov
sub
cmps
rol
adc
push
jl
outs
call
scas
push
adc
lea
and
mov
popf
pop
in
in
pop
les
adc
scas
jmp
test
(bad)
(bad)
jmp
dec
enter
mov
les
retf
inc
in
add
shl
fisttp
cmp
ret
sub
ficomp
in
push
xor
sar
out
inc
cmp
(bad)
(bad)
mov
repnz
mov
and
or
out
aaa
inc
xlat
mov
mov
(bad)
jmp
ds
fstp
sub
mov
pop
cli
push
cmp
mov
mov
push
call
sbb
cs
jge
push
jp
ror
(bad)
jg
ds
jmp
fild
test
inc
call
add
adc
sub
sub
inc
call
movs
loopne
and
inc
pop
je
adc
mov
jp
(bad)
(bad)
mov
pop
cwde
add
fcmovnbe
adc
sub
cmp
push
fs
mov
or
push
dec
inc
and
push
pop
(bad)
jmp
aad
xlat
xor
push
sub
sub
rcl
repz
(bad)
(bad)
inc
loope
js
or
sti
das
mov
(bad)
mov
dec
xchg
fstp
inc
jne
(bad)
(bad)
(bad)
inc
inc
mov
stos
cmp
(bad)
js
jo
mov
popf
xor
sar
(bad)
(bad)
(bad)
jmp
aas
rcl
test
mov
cld
fld
les
mov
aas
sub
lock
and
adc
xor
clc
inc
jle
je
sbb
cmp
(bad)
(bad)
(bad)
inc
test
data16
cmps
push
pop
and
mov
test
jecxz
aaa
xchg
mov
lods
not
test
adc
jmp
inc
add
pop
ins
or
imul
cmp
mov
rcl
rcr
rcr
inc
lahf
aas
jmp
and
test
je
add
jbe
mov
inc
xor
mov
and
inc
gs
mov
fcomip
(bad)
jns
stos
push
shl
sbb
jnp
adc
out
mov
dec
(bad)
(bad)
(bad)
(bad)
jmp
push
daa
sbb
test
push
lods
dec
sbb
xor
inc
ret
pop
pop
cmp
xchg
xor
add
mov
cmp
jns
sub
mov
icebp
inc
aam
cs
xchg
add
cmc
loop
sbb
ins
sub
in
mov
pop
sbb
jg
cmp
push
cmp
(bad)
(bad)
(bad)
call
push
cwde
les
retf
sbb
das
mov
mov
scas
ret
push
std
sti
adc
xchg
ror
mov
arpl
fbld
sar
pop
movs
xor
and
sbb
lds
mov
outs
and
xchg
push
ret
jmp
adc
sahf
fld
inc
test
cmp
and
cmps
retf
leave
sub
icebp
push
sub
mov
push
xchg
data16
and
mov
(bad)
(bad)
(bad)
call
imul
in
ins
fldenv
sub
sets
and
mov
js
cmp
xchg
jmp
gs
xor
mov
sub
icebp
or
mov
(bad)
in
fstp
sti
push
popa
inc
dec
or
dec
lahf
inc
jmp
imul
push
fisttp
cmp
mov
mov
pop
movs
pop
fwait
call
cmc
sar
(bad)
(bad)
jmp
dec
in
(bad)
enter
fistp
dec
loop
gs
neg
push
jl
sub
(bad)
(bad)
call
movs
dec
int3
sahf
xchg
cli
int3
pop
push
cmp
inc
and
adc
rcr
enter
sub
xchg
push
fwait
jno
mov
sub
(bad)
push
out
outs
repz
adc
xor
dec
or
sbb
xchg
(bad)
jg
dec
nop
(bad)
cmp
xor
xchg
or
adc
mov
imul
(bad)
(bad)
(bad)
(bad)
cmp
sti
jmp
jle
retf
iret
mov
lea
test
add
cmp
and
sar
xchg
fst
in
fld
aaa
xchg
push
dec
in
les
lods
addr16
mov
xor
push
or
ret
in
loop
jg
out
ficom
sub
pop
mov
(bad)
(bad)
inc
retf
out
inc
pop
pop
mov
push
push
xchg
push
and
aaa
sub
mov
movs
jne
inc
jg
mov
stos
int3
(bad)
jle
mov
mov
fdiv
mov
jecxz
sub
xor
and
jmp
push
pop
jns
pop
lds
(bad)
jg
or
inc
cld
es
or
(bad)
push
gs
inc
aam
sbb
(bad)
stos
test
adc
daa
rol
push
outs
stos
jge
pop
dec
dec
fist
add
mov
enter
fld
sbb
icebp
(bad)
jmp
fs
sub
xor
pop
mov
mul
fistp
xchg
jmp
push
inc
or
je
movs
push
inc
(bad)
mov
push
sub
sub
(bad)
(bad)
(bad)
inc
mov
sub
pop
pop
and
inc
stc
popa
jecxz
and
sub
shl
out
rcl
inc
jmp
adc
in
test
in
xchg
lock
cld
(bad)
jmp
mov
sahf
int
pushf
push
int3
xor
or
push
(bad)
(bad)
(bad)
push
lock
jne
push
xor
inc
sub
fstp
cmp
sub
dec
xchg
xchg
pop
add
cmp
pop
and
sar
adc
mov
cmp
mov
aas
test
(bad)
fisttp
xor
movs
mov
or
test
or
mov
(bad)
(bad)
retf
(bad)
(bad)
inc
xchg
(bad)
mov
adc
and
cmp
sub
js
jnp
mov
cli
(bad)
fcomi
mov
jb
ret
xchg
in
pop
and
pop
aas
lods
mov
(bad)
mov
xor
mov
(bad)
fistp
in
dec
cmps
or
and
inc
mov
mov
(bad)
jg
dec
jp
push
jecxz
fdivrp
clc
or
xchg
les
(bad)
fisttp
add
mov
jmp
mov
xor
(bad)
(bad)
call
sbb
mov
(bad)
(bad)
jb
xor
jp
nop
xchg
pop
adc
push
pop
dec
pop
cmp
and
out
enter
(bad)
call
jae
pop
jl
mov
sub
or
mov
aam
xor
pop
cmps
and
inc
outs
into
add
sbb
pop
sub
jbe
outs
retf
mov
adc
pop
cmps
and
inc
push
js
adc
aaa
cld
jmp
sbb
add
mov
or
xchg
or
inc
xor
pop
cmps
and
mov
(bad)
(bad)
(bad)
jge
jb
lods
int
ds
loopne
mov
jg
jbe
and
mov
movs
stc
sbb
(bad)
(bad)
push
nop
xchg
pop
adc
stos
adc
inc
sbb
fwait
rol
sub
push
jb
sub
xor
fcmovnu
aaa
mov
sub
test
sahf
repnz
and
fidiv
sbb
loope
(bad)
(bad)
(bad)
jmp
mov
push
mov
and
mov
imul
adc
dec
(bad)
call
add
retf
retf
test
sar
mov
xchg
add
rol
push
push
retf
gs
push
aad
jl
cld
(bad)
dec
xchg
cmps
lea
into
xchg
and
fild
(bad)
cdq
pop
repnz
sub
inc
xchg
mov
(bad)
(bad)
(bad)
inc
lods
vpaddsw
gs
int
in
push
mov
mov
clc
movs
sar
mov
mov
bound
dec
mov
cs
stos
(bad)
push
adc
jle
imul
or
ficomp
ins
mov
pop
xor
mov
data16
inc
les
cmp
stos
inc
jmp
jg
lods
mov
push
xchg
inc
lock
mov
mov
(bad)
(bad)
jmp
pop
pop
inc
mov
sbb
jbe
clc
clc
or
add
xor
out
inc
push
sbb
(bad)
(bad)
jmp
push
je
call
in
nop
or
push
xchg
add
call
(bad)
adc
pop
jne
inc
or
xchg
or
hlt
jmp
fbld
jmp
jmp
push
aad
xchg
and
add
fisttp
pop
mov
xchg
pop
push
jmp
pusha
or
(bad)
push
jmp
mov
test
mov
out
cmp
(bad)
call
imul
xchg
sbb
dec
and
in
std
jno
xor
int
jg
call
sbb
add
push
push
je
jmp
adc
pop
aas
cmp
cmc
push
mov
xchg
aad
mov
repz
xchg
cs
jg
inc
or
retf
lea
movs
stos
(bad)
cmp
in
int3
ds
dec
mov
fisttp
ret
pop
jmp
jns
std
jl
add
ja
bnd
sti
lea
call
test
push
mov
(bad)
inc
popa
push
mov
push
icebp
in
bound
jb
adc
mov
(bad)
(bad)
(bad)
(bad)
mov
inc
xor
push
jbe
push
cmp
cli
dec
sbb
jp
sbb
mov
in
data16
fild
loope
jne
xchg
jmp
clc
cmp
jmp
cmp
lock
repnz
and
(bad)
mov
push
pushf
and
cmp
xchg
xor
rol
imul
push
imul
jo
lock
lahf
mov
daa
xchg
add
xor
mov
aas
aam
call
pusha
and
push
stos
add
sbb
push
cmps
sbb
call
dec
aas
sub
js
pushf
pop
and
push
ins
mov
or
rol
push
adc
lahf
xor
jnp
(bad)
(bad)
push
in
sbb
lock
mov
(bad)
cwde
dec
or
pusha
pop
cmp
popa
sub
push
(bad)
call
mov
cld
push
xchg
push
push
call
dec
xor
push
xchg
sub
mov
(bad)
call
mov
ficom
cwde
sub
(bad)
(bad)
push
mov
jge
aad
aam
push
sbb
cmc
aaa
lock
pop
dec
lahf
inc
sbb
pop
sub
in
jnp
push
adc
stos
xor
or
sub
and
shr
out
cli
inc
xchg
jno
and
pop
bound
icebp
sub
test
icebp
outs
es
mov
iret
cs
(bad)
jge
push
push
xchg
(bad)
mov
fbstp
nop
sub
ret
xchg
sub
dec
clc
(bad)
push
stos
pop
fistp
or
sbb
cmp
jne
inc
pop
xchg
je
(bad)
jmp
mov
or
mov
and
sar
(bad)
(bad)
call
sar
pushf
mov
push
inc
movs
gs
push
shl
(bad)
dec
hlt
and
mov
jno
xor
or
mov
and
mov
and
dec
sub
xor
retf
pop
and
call
lods
and
fcomip
(bad)
(bad)
fiadd
outs
leave
loope
inc
test
leave
cmp
cmp
shr
ins
stc
add
(bad)
(bad)
jmp
out
push
and
xchg
loop
fnstenv
lods
in
enter
adc
jae
inc
iret
adc
(bad)
(bad)
(bad)
(bad)
jmp
sahf
add
mov
push
jne
ss
mov
sbb
mov
(bad)
(bad)
(bad)
call
jge
push
call
lahf
fist
xor
pusha
jns
push
cld
cmp
dec
jmp
call
outs
or
ds
shr
xchg
lods
je
mov
aaa
std
push
out
and
xchg
dec
imul
std
mov
xchg
mov
xchg
and
js
pop
push
ins
jmp
jmp
dec
hlt
and
mov
in
popa
cmp
push
rcr
(bad)
jle
dec
sbb
in
ret
jns
xor
jne
dec
pop
xor
(bad)
inc
jmp
out
aam
adc
pop
mov
inc
pop
bound
xor
(bad)
(bad)
fistp
push
dec
popa
out
push
jl
int3
outs
out
pop
aad
fstp
fst
cmc
mov
(bad)
(bad)
jmp
mov
adc
jne
and
ud0
cwde
and
imul
jae
jmp
add
lahf
scas
cmp
inc
stos
inc
mov
sub
(bad)
mov
push
ffree
pop
adc
in
sbb
or
ss
add
dec
xchg
stos
mov
mov
and
cmp
and
in
(bad)
pop
add
push
aam
rol
ficom
mov
sub
(bad)
loop
xchg
add
push
data16
int
jmp
in
mov
push
adc
mov
imul
and
addr16
scas
jmp
inc
call
pop
mov
out
test
pop
or
(bad)
(bad)
push
adc
sbb
xor
inc
inc
mov
ror
sbb
shr
xor
cwde
adc
(bad)
(bad)
call
rol
stc
ins
int3
fstp
push
xor
(bad)
clc
(bad)
jmp
shl
sub
push
pushf
or
(bad)
mov
adc
(bad)
jmp
cmp
xchg
pop
add
fs
call
mov
div
lods
dec
(bad)
jg
(bad)
jae
(bad)
(bad)
(bad)
(bad)
out
xchg
jmp
xchg
xor
xor
in
sub
lods
test
cmp
or
or
jae
stos
std
cmc
lods
inc
ret
daa
inc
add
cmp
movs
dec
mov
xchg
pop
sub
sbb
inc
cmp
(bad)
jmp
inc
mov
dec
jle
jle
cmp
xor
shl
(bad)
popf
jp
or
es
dec
rcl
mov
push
scas
mov
add
sub
sub
(bad)
(bad)
cld
popf
jmp
jno
cmps
mov
fistp
dec
add
(bad)
push
or
gs
pop
mov
xchg
retf
push
cmp
sahf
(bad)
(bad)
(bad)
inc
inc
and
xchg
dec
hlt
ror
mov
xchg
dec
inc
pop
aam
jg
lods
leave
(bad)
(bad)
(bad)
push
sbb
fs
inc
in
inc
fwait
inc
jb
inc
imul
pusha
mov
test
out
pop
cmc
(bad)
(bad)
push
enter
adc
dec
test
xor
mov
mov
add
(bad)
(bad)
dec
nop
ds
inc
(bad)
ds
fs
(bad)
jl
jo
repz
jnp
rcl
adc
sub
push
or
shr
gs
push
test
outs
bound
dec
pop
outs
fs
xor
sub
xor
js
rol
xor
call
sti
xor
(bad)
mov
or
or
aaa
push
aad
lock
jmp
sbb
jns
retf
pop
(bad)
call
inc
mov
jmp
(bad)
(bad)
dec
jns
stos
inc
sub
nop
outs
sub
dec
sbb
adc
cdq
in
cwde
sub
xchg
stc
adc
pop
icebp
das
dec
xor
mov
inc
mov
(bad)
fild
mov
push
daa
sub
sbb
jge
mov
pushf
push
call
xchg
clc
(bad)
call
cmc
sbb
xchg
ror
mov
fistp
jle
xor
in
cmps
dec
ror
pop
lahf
test
sbb
dec
sub
in
or
(bad)
(bad)
jmp
mov
aam
xor
dec
sahf
(bad)
imul
repnz
repz
inc
das
into
(bad)
(bad)
(bad)
push
fstp
push
xchg
cwde
jno
inc
fisttp
mov
and
sar
dec
add
jmp
mov
inc
retf
add
call
movs
or
jmp
jmp
fnstcw
sub
adc
std
add
shr
imul
jg
sub
push
xlat
nop
aad
jo
out
cmp
and
push
sbb
pop
jmp
out
fidivr
cmc
xor
sbb
dec
dec
stos
jbe
lods
cmp
rcr
aas
jmp
mov
iret
mov
sahf
and
hlt
(bad)
jge
jmp
pop
jae
mov
cmps
add
dec
push
mov
das
mov
iret
mov
(bad)
(bad)
mov
cmp
sub
js
add
rol
cmps
mov
mov
(bad)
(bad)
jmp
mov
jmp
cmc
call
mov
loopne
mov
(bad)
(bad)
jg
sbb
push
mov
cmps
je
shl
clc
(bad)
out
or
and
ins
test
mov
adc
cdq
jnp
cmp
add
push
pushf
sub
push
mov
push
cmp
je
cld
xchg
sahf
js
mov
(bad)
inc
call
ins
sbb
outs
push
xor
push
and
push
xor
(bad)
inc
push
cmp
inc
scas
lods
iret
bound
cmps
xchg
pop
cmp
cld
jecxz
int
addr16
(bad)
(bad)
(bad)
fdivr
mov
shl
cmp
mov
jg
fiadd
mov
(bad)
fnstcw
xchg
addr16
cmp
jb
inc
jmp
and
movs
xor
cli
push
adc
lods
(bad)
ins
jae
xchg
sar
pop
sahf
pop
arpl
shl
loopne
push
mov
pop
sub
adc
mov
loopne
adc
(bad)
mov
test
jp
aad
dec
dec
mov
stc
sbb
icebp
aad
dec
or
jle
mov
das
push
movs
jg
out
(bad)
lods
push
mov
jno
fsub
cmp
dec
fidiv
lods
out
cmps
pop
pop
sub
(bad)
(bad)
jmp
dec
ins
cmps
pushf
fsubr
jmp
ins
mov
iret
inc
pop
popa
je
aam
jg
ficom
add
mov
ds
(bad)
push
or
scas
lods
adc
cmp
(bad)
out
mov
(bad)
in
mov
sbb
push
in
hlt
ins
sbb
cmp
ds
jg
dec
cmps
add
or
ss
pop
(bad)
mov
jbe
mov
leave
jge
repz
adc
inc
dec
daa
in
mov
pop
das
loopne
or
inc
fldcw
mov
stos
jl
fcom
jg
idiv
pop
jg
inc
lods
into
sub
sbb
pop
xor
cli
sti
cli
pop
jno
lahf
sub
add
(bad)
(bad)
mov
or
aas
ror
lock
test
ins
(bad)
(bad)
dec
push
repnz
adc
pop
(bad)
in
push
cmps
call
push
out
mov
jecxz
scas
out
pop
cdq
sbb
cmc
ret
popf
sub
xchg
and
shl
icebp
(bad)
fist
pop
dec
add
add
mov
mov
jbe
(bad)
jmp
add
dec
pushf
fcmovne
xchg
mov
loop
and
and
call
pushf
cld
sbb
repz
mov
dec
pop
pop
in
sub
(bad)
(bad)
(bad)
jmp
pop
test
lock
ds
ins
call
push
arpl
pushf
cmc
sbb
mov
push
add
call
nop
add
retf
dec
dec
mov
into
xor
lods
sub
mov
nop
movs
mov
aam
nop
push
adc
cmp
add
mov
fdecstp
out
push
adc
jno
push
sti
shr
add
rcl
pusha
sub
dec
rcr
add
mov
xor
inc
or
add
cmp
xchg
inc
xor
in
add
lahf
lods
aaa
pusha
jl
loop
aas
xchg
adc
jmp
dec
mov
pop
or
adc
scas
adc
ja
shr
es
push
push
adc
out
cmp
mov
daa
ds
xlat
sbb
imul
ss
cmp
fistp
cmps
push
(bad)
xchg
mov
jle
jbe
lods
sbb
neg
jnp
cmc
add
push
push
outs
out
es
fidivr
mov
jmp
sahf
adc
mov
pop
out
jecxz
daa
ss
cs
es
neg
adc
jg
ss
push
dec
adc
push
jb
or
fdivp
fidivr
ds
arpl
jns
mov
out
idiv
es
push
mov
out
imul
jle
adc
push
and
sbb
jnp
cmp
fimul
ret
scas
fs
movs
sar
sbb
out
int
push
sub
jbe
inc
cs
jbe
outs
in
adc
dec
pusha
and
jp
mov
addr16
pop
pop
popf
cs
jle
int3
sbb
mov
adc
push
jl
neg
jnp
je
in
sub
push
repz
(bad)
jnp
cmp
bnd
jle
mov
shr
into
nop
push
add
mov
loope
sub
jnp
xchg
push
fs
jns
out
lods
mov
cmp
out
add
iret
repz
dec
pop
push
iret
repz
mov
into
fistp
iret
repz
cld
or
push
sub
jns
out
inc
push
addr16
out
sahf
xchg
jl
out
aad
in
cmc
add
repz
ror
sbb
cmp
inc
push
pop
data16
cmp
repz
pushf
lods
mov
repz
jecxz
sti
or
out
sahf
cmps
adc
sahf
out
sahf
pop
outs
jnp
cdq
jns
out
mov
repz
out
clc
push
jmp
cmp
cmp
gs
cmp
repz
call
repz
cli
out
sahf
out
jmp
jns
dec
push
fs
nop
jns
out
popf
stos
mov
sahf
out
jmp
add
cmp
sbb
ss
dec
pop
cmp
repz
jno
nop
test
dec
push
ja
mov
mov
fnsave
pop
xor
test
test
aaa
pop
daa
ins
sub
sbb
(bad)
xchg
lea
cmp
sbb
sbb
lea
push
adc
aam
xchg
rcl
fcomp
push
int
mov
sbb
js
imul
cdq
popa
jecxz
bound
sar
js
js
mov
outs
fs
sbb
adc
xor
add
fmul
ins
push
and
sbb
jmp
cmps
data16
int3
das
imul
mov
jae
and
mov
mov
jge
arpl
sub
jg
loop
test
sbb
sbb
fisubr
pushf
xor
retf
adc
js
adc
daa
sbb
push
xchg
sub
adc
jo
inc
gs
retf
push
mov
mov
ss
mov
pop
push
inc
pop
enter
xchg
sbb
test
cmp
pop
imul
fild
sub
test
fnstcw
push
mov
mov
sub
pop
or
mov
adc
or
pop
(bad)
movs
ja
scas
out
xor
cmp
imul
jecxz
mov
jmp
test
fxch
stos
arpl
fcom
mov
xchg
(bad)
iret
arpl
iret
xor
imul
arpl
or
cwde
push
fwait
sbb
mov
sbb
lea
sbb
imul
add
hlt
ins
jae
xchg
sbb
cmc
jae
xor
xor
fwait
jae
dec
in
inc
and
xor
call
popf
lea
(bad)
mov
fistp
(bad)
xlat
adc
outs
rcl
shl
mov
adc
sbb
imul
movs
pop
js
jns
xor
sub
arpl
mov
pop
ja
xor
cwde
add
pop
mov
movs
add
push
pop
arpl
push
lock
pusha
xchg
pop
call
and
lock
stos
test
inc
dec
add
cmp
push
int
mov
sub
es
je
(bad)
int
pop
add
pop
retf
inc
and
pop
or
popa
adc
pop
fidiv
lods
add
bound
arpl
pop
sbb
fiadd
sbb
or
and
jge
jne
mov
scas
inc
cmp
add
jecxz
ret
jnp
jge
jle
xor
fs
and
ret
add
pop
test
xchg
ret
lods
or
sub
pop
pop
hlt
out
push
imul
in
pop
add
sbb
add
xchg
in
inc
in
inc
add
es
imul
es
or
(bad)
in
frstor
lea
pop
or
mov
add
sub
mov
lods
shl
mov
push
lods
sbb
repz
add
push
push
dec
mov
rcl
jo
jne
cmp
(bad)
dec
mov
xadd
or
call
add
mov
mov
in
pop
mov
(bad)
inc
sub
push
sub
push
push
mov
push
mov
shl
push
clc
lods
mov
or
call
ret
pop
pop
mov
mov
sub
push
cmp
inc
inc
mov
inc
(bad)
(bad)
(bad)
std
mov
lods
or
js
cmp
jae
jmp
add
js
add
sub
mov
cmps
popa
cld
shr
pop
pop
add
mov
stos
ins
call
or
mov
nop
add
in
xor
xor
je
lock
hlt
dec
inc
aas
outs
inc
sub
rcl
adc
movs
aaa
mov
jecxz
retf
add
push
adc
sbb
shl
dec
cmp
push
jge
mov
mov
mov
les
in
in
mov
push
push
ret
out
in
loop
add
into
test
mov
test
enter
mov
data16
or
add
mul
jmp
push
mov
scas
rol
jp
test
mov
or
test
xchg
add
out
inc
inc
or
cmp
jle
mov
cmps
jae
gs
ins
mov
sar
add
inc
add
cmp
lahf
fisub
xor
test
xor
sub
call
jl
scas
rcr
fst
or
mov
cwde
sub
sar
lea
call
adc
inc
mov
ins
jmp
sub
push
sar
js
hlt
pop
jl
add
push
lea
mov
sub
pop
mov
shl
ss
or
adc
mov
and
pop
test
push
cmp
add
add
nop
or
fwait
data16
(bad)
jae
xchg
(bad)
mov
sub
cmp
nop
sub
nop
or
idiv
sub
rcl
imul
data16
inc
(bad)
shl
mov
sbb
jns
jg
push
add
sbb
pop
or
inc
xor
sbb
scas
jmp
sbb
pop
xor
mov
jno
cli
jbe
xor
retf
add
lahf
loope
pop
jmp
jg
sub
jmp
out
and
push
jmp
push
popa
push
iret
ss
ret
cmp
ffree
sbb
cmp
adc
repnz
or
inc
push
or
cmp
pushf
stos
xchg
adc
imul
js
ja
adc
inc
pop
stos
fcom
jno
ins
jbe
test
js
cmp
call
mov
and
mov
rcr
and
rcr
dec
mov
std
sub
jmp
pop
sub
push
jl
outs
movs
sar
(bad)
xchg
pop
xchg
out
shr
call
sar
cli
jecxz
mov
dec
out
sub
push
pop
(bad)
std
push
pop
lds
and
popa
xor
cmp
je
enter
mov
jmp
pusha
sub
mov
push
jmp
jae
push
pop
mov
pusha
mov
ret
mov
imul
ret
ret
ins
out
xor
cwde
(bad)
loope
sub
xadd
repnz
popa
mov
sub
ins
lea
pop
add
or
xchg
and
shl
pop
jmp
outs
into
push
test
fdiv
nop
push
lahf
mov
pop
je
enter
imul
push
jmp
xor
ins
cmp
sbb
inc
pop
push
push
in
pop
cld
push
ins
inc
jecxz
js
out
out
sub
int3
pop
out
push
inc
jb
xor
hlt
add
cmps
jmp
(bad)
push
scas
repnz
add
add
js
or
sub
push
inc
lea
jb
cdq
test
adc
test
fist
mov
rcr
je
inc
mov
pop
out
push
fldcw
mov
into
or
adc
inc
xor
push
xor
test
out
dec
mov
adc
add
cmc
in
add
call
jbe
xchg
mov
fadd
jmp
loope
sub
xchg
jb
pusha
lock
or
mov
add
add
xchg
or
(bad)
out
and
cli
add
inc
inc
shl
pusha
fbld
ins
lea
lea
or
and
cmps
or
jp
cmp
pusha
mov
mov
mov
push
ror
and
mov
add
cld
sar
clc
mov
add
xor
les
jg
mov
out
ror
enter
add
jns
jmp
test
addr16
add
ins
add
cmp
pop
sub
mov
add
enter
stos
add
test
adc
xor
sti
cld
add
shr
call
push
popa
mov
inc
or
ret
pop
sbb
pop
inc
jl
sbb
bound
or
fisub
adc
dec
adc
lahf
pusha
pop
das
loopne
inc
or
je
jb
je
aad
pop
mov
in
mov
mov
loope
je
mov
inc
dec
add
inc
xor
lods
hlt
mov
jb
jmp
outs
sbb
rcl
iret
adc
or
popa
sub
pop
adc
loope
stos
pushf
loope
mov
add
mov
add
pop
mov
fwait
xchg
clc
call
or
push
add
add
sub
clc
mov
add
mov
test
lea
xor
or
dec
sti
push
ins
or
fiadd
dec
out
add
add
add
push
enter
add
ins
inc
sub
sub
mov
data16
cmp
cwde
sbb
add
(bad)
adc
mov
push
cdq
mov
sub
shr
push
xor
movzx
push
rcl
mov
inc
inc
es
or
pop
inc
fild
push
add
mov
add
and
jecxz
sub
or
or
cdq
xor
arpl
or
movs
cmps
add
adc
add
add
sub
cmp
in
sub
add
xor
fistp
add
int3
push
mov
xor
pop
jmp
push
sub
mov
push
adc
push
test
inc
inc
jo
pusha
adc
adc
inc
(bad)
add
call
xchg
fmulp
call
pop
push
and
mov
xchg
mov
or
jo
dec
test
and
fs
in
and
popf
mov
dec
dec
cmp
ins
dec
push
call
dec
jnp
bound
adc
xchg
jno
inc
(bad)
or
push
adc
ss
add
pop
(bad)
mov
call
sbb
sub
jl
or
das
sub
xor
pop
cmp
xor
push
lock
adc
imul
sbb
(bad)
out
pop
push
sbb
nop
stos
popa
cmps
jb
sbb
in
dec
xchg
mov
xor
add
sbb
stos
mov
mov
push
sbb
push
sbb
dec
lea
pop
sti
or
jo
pop
inc
dec
push
js
add
outs
push
xor
loopne
xchg
xor
xchg
push
jne
ja
jbe
mov
fdiv
sub
jae
ins
or
add
mov
sbb
sbb
push
out
loop
dec
ins
mov
sbb
mov
add
sub
xor
aam
out
add
nop
jb
and
cs
and
mov
jb
push
addr16
add
ja
out
out
or
jp
inc
fcom
or
(bad)
adc
aaa
ins
cdq
mov
inc
retf
xor
and
imul
or
sub
pop
inc
add
pop
std
jmp
pop
dec
into
aaa
in
adc
and
adc
dec
xchg
rcr
inc
push
cmps
pop
inc
inc
add
inc
mov
fild
dec
in
add
xor
cmp
dec
push
and
sbb
add
inc
enter
adc
add
xor
or
mov
dec
sub
dec
inc
push
xor
ins
mov
pop
imul
adc
dec
dec
pushw
pop
mov
sar
dec
xor
adc
sbb
mov
js
jg
ss
loop
mov
dec
ss
xchg
jg
sub
add
xchg
and
add
test
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
adc
dec
add
lea
add
