scas
or
add
add
dec
add
add
add
add
add
or
add
add
add
xor
or
push
and
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
pusha
add
add
push
je
imul
add
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
movs
lods
or
add
add
inc
add
add
add
add
add
mov
add
add
add
add
add
or
add
add
repnz
add
or
add
add
and
mov
add
pop
add
add
fmul
add
add
add
fisttp
add
add
add
loop
add
add
add
add
add
in
add
add
add
add
add
add
jnp
popaw
bound
arpl
sub
sub
sub
sub
xor
popa
cmp
xor
fs
gs
ins
gs
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
outs
imul
popa
je
jb
push
jae
addr16
gs
jb
imul
cs
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
jne
je
imul
add
mov
stos
iret
aas
cvttps2pi
or
adc
mov
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
lods
or
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
ror
or
dec
outs
add
add
sbb
add
test
add
add
dec
add
dec
add
imul
push
add
add
add
add
imul
add
jo
imul
add
and
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
test
or
pop
adc
adc
adc
sbb
sbb
pop
sbb
pop
pop
adc
adc
sbb
and
sbb
xor
and
cs
pop
xor
xor
sub
or
push
or
sbb
and
sub
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
or
ret
add
and
add
add
adc
inc
add
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
add
add
add
add
adc
add
adc
xor
inc
push
popa
jno
xor
jb
rol
inc
push
(bad)
lock
inc
xchg
mov
adc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
adc
and
xor
adc
push
popa
add
jno
(bad)
fiadd
or
add
add
add
add
add
sar
ficomp
sti
(bad)
jne
scas
jp
fidiv
add
adc
jmp
or
stos
xor
cwde
sbb
pcmpgtb
ds
in
sub
mov
in
mov
push
imul
imul
adc
mov
(bad)
add
push
pop
addr16
std
(bad)
std
xchg
or
jg
icebp
cld
mov
xchg
dec
mov
xor
mov
mov
pop
dec
cli
sub
xchg
jae
sbb
cdq
pop
push
test
jnp
jno
sti
outs
mov
aas
shl
push
mov
mov
push
(bad)
fisubr
leave
iret
push
jae
pushf
xchg
adc
pop
push
inc
xor
mov
inc
push
push
fbld
enter
aam
mov
pop
fadd
sahf
jmp
adc
and
les
cmp
(bad)
and
mov
push
or
out
fdivr
xor
mov
xlat
adc
inc
sbb
mov
ficom
jb
xor
xor
test
lods
xchg
push
loop
jb
xchg
mov
repnz
push
cmps
fwait
mov
mov
mov
(bad)
adc
sti
pop
cmp
jmp
mov
jbe
test
enter
and
cmp
and
mov
pop
mov
mov
xor
inc
mov
jle
loope
cs
jmp
mov
test
loopne
mov
out
ds
fwait
test
addr16
aad
leave
jno
mov
test
jno
in
test
jmp
jl
bound
pusha
hlt
(bad)
fidivr
loope
stos
gs
dec
push
mov
out
inc
ret
push
pop
adc
fdiv
loop
jbe
test
mov
sub
pop
jl
adc
sub
mov
cmps
add
cmp
mov
inc
shl
mov
xchg
pop
pop
inc
add
push
retf
cmp
adc
inc
xchg
nop
loope
div
(bad)
sbb
jge
dec
stos
les
push
mov
jnp
pop
dec
add
es
in
mov
inc
or
js
ret
sub
test
inc
pop
push
xor
adc
call
pop
stc
pop
dec
in
add
stos
push
call
(bad)
xor
jge
sub
sub
ss
or
jo
push
mov
inc
ror
dec
cs
pop
sbb
and
lods
scas
mov
sub
pop
adc
jb
aam
mov
fcomp
imul
sub
ins
test
sbb
adc
inc
rcl
ds
fidivr
mov
push
mov
push
stos
pop
add
ficomp
stos
xchg
sub
iret
or
cmps
mov
iret
jmp
lods
adc
sub
sub
sub
jl
jp
push
jne
rcr
jbe
into
inc
cmp
jmp
and
imul
out
adc
push
xchg
push
push
or
mov
jo
xchg
cmp
iret
sub
(bad)
jo
jmp
inc
loopne
leave
sbb
call
popa
clc
mov
inc
in
xchg
xlat
pop
dec
repnz
jb
adc
sti
xor
push
iret
imul
push
mov
xor
test
fxch
leave
cmps
mov
xor
or
mov
xchg
adc
add
fs
jb
add
dec
adc
pop
push
adc
xor
loop
push
fimul
loop
or
std
movs
dec
ret
jnp
push
fs
mov
ret
lea
popa
fcomp
add
repnz
call
js
xor
mov
adc
test
push
pop
mov
dec
lods
and
xchg
add
add
pop
rcl
fnstenv
xchg
mov
(bad)
call
sub
cwde
dec
pop
stos
ins
fisttp
pop
xchg
add
adc
gs
call
out
push
mov
sbb
cld
aas
push
sub
scas
cmc
movs
shl
pop
aaa
sub
into
ror
mov
xchg
xchg
loope
fiadd
and
stos
arpl
and
pop
push
and
dec
cs
test
jmp
mov
push
inc
jb
mov
xchg
sub
xchg
aad
ja
mov
jne
push
jg
and
mov
ret
shr
(bad)
out
and
sub
inc
sub
mov
sub
les
mov
jl
fiadd
stc
xor
dec
xor
std
or
and
call
repnz
sub
mov
mov
repnz
add
push
loopne
inc
repnz
pop
jbe
loop
mov
(bad)
icebp
add
stos
add
add
cdq
aas
xor
xchg
mov
add
not
les
cmc
pop
cmp
ret
lock
add
outs
aad
push
mov
cli
movs
adc
mov
movs
fsubr
add
push
add
test
sbb
dec
ins
or
adc
dec
inc
enter
add
push
leave
push
jg
(bad)
jge
adc
je
xchg
push
imul
fsubr
cmp
(bad)
pusha
add
fs
add
jl
sub
inc
jne
aaa
call
adc
cmps
mov
mov
stos
pushf
inc
or
or
add
nop
mov
outs
mov
mov
and
data16
adc
dec
inc
mov
popa
jbe
pop
sub
push
out
or
in
sbb
xchg
inc
daa
pop
cmp
bound
inc
pop
jno
sar
test
call
lock
in
jbe
push
mov
imul
cmp
xchg
push
inc
dec
call
jb
outs
mov
in
jecxz
inc
adc
nop
inc
pop
ja
or
pop
dec
and
aam
hlt
mov
fnstenv
ficomp
(bad)
adc
xor
cmps
inc
pop
jnp
mov
pop
fdivr
pop
and
adc
or
pop
add
popa
cmps
add
xor
push
gs
xchg
mov
in
adc
or
repnz
pop
fisub
scas
outs
retf
shl
pop
retf
jle
fcomp
popa
iret
cmp
in
lea
mov
inc
xchg
jo
jg
js
loop
pop
test
iret
dec
fnstcw
mov
nop
pop
retf
add
and
cmp
in
push
mul
out
lods
(bad)
mov
xchg
push
jb
pushf
loop
or
xchg
mov
dec
ja
mov
jge
pop
bound
xor
add
mov
lahf
cwde
test
push
out
ret
in
xor
inc
pop
div
inc
mov
test
out
pop
bound
sbb
hlt
sbb
leave
push
(bad)
imul
clc
loop
test
(bad)
loope
aaa
mov
fwait
sar
js
mov
pushf
mov
sub
adc
sub
mov
or
repz
repnz
inc
pop
or
pusha
adc
mov
pop
mov
(bad)
cmove
gs
dec
fisttp
aaa
jnp
cmp
mov
dec
inc
inc
mov
jmp
xchg
xchg
cmp
or
gs
and
sbb
pop
jbe
cmp
scas
lods
add
inc
leave
pop
cs
aad
sub
adc
icebp
cli
sub
push
pop
outs
xchg
mov
inc
push
mov
sbb
imul
xor
test
cmp
stos
popf
pop
xlat
jmp
sbb
or
ins
mov
and
scas
pop
adc
fld
xor
repnz
mov
cli
test
inc
sahf
inc
js
cmp
test
dec
xor
(bad)
cmc
ret
pop
xor
idiv
or
mov
out
push
arpl
xor
push
mov
ret
in
je
fnstenv
idiv
cwde
movs
or
mov
jbe
cwde
dec
cmp
mov
mov
in
inc
and
sub
mov
or
sub
cmp
and
add
cmp
fimul
test
adc
mov
add
dec
leave
ins
je
imul
cmp
cmp
push
mov
loop
push
int3
test
xchg
ror
retf
jp
push
out
push
sbb
outs
in
daa
sbb
push
loopne
adc
mov
stos
adc
cmp
jmp
lods
dec
dec
test
scas
dec
adc
xor
adc
mov
iret
test
call
sub
stos
xchg
push
ret
xchg
adc
jmp
inc
mov
arpl
fst
mov
push
enter
inc
cmps
xor
cmp
ret
inc
xchg
push
pop
movs
out
imul
pusha
pop
xchg
sbb
xor
dec
les
adc
jmp
lods
jbe
or
daa
adc
pop
xchg
pushf
sub
fimul
(bad)
hlt
push
retf
(bad)
jle
leave
pop
lods
jge
hlt
outs
mov
(bad)
inc
adc
pop
pop
fst
jge
(bad)
jmp
xor
mov
xchg
movs
mov
mov
ins
stos
fdiv
jmp
pop
out
les
ror
mov
xchg
lds
pop
nop
mov
mov
mov
cmp
enter
frstor
icebp
fcomp
imul
sub
(bad)
sbb
or
xchg
imul
inc
xchg
dec
push
add
push
es
pusha
dec
mov
or
sbb
imul
sbb
jmp
into
jle
mov
(bad)
sar
ror
mov
inc
cmp
pop
push
inc
cmps
dec
and
mov
cdq
fwait
or
pop
fwait
mov
test
out
dec
mov
sub
mov
out
popa
push
sbb
nop
sbb
xchg
aad
xor
mov
cmp
adc
rcl
pusha
sbb
mov
pop
fdivrp
mov
aad
fst
out
mov
cmps
xchg
jne
and
or
mov
push
stos
cmp
shl
mov
(bad)
out
jmp
(bad)
mov
add
nop
daa
dec
mov
ins
xor
int
dec
punpckhbw
mov
cmp
repnz
push
mov
push
stos
inc
ins
pop
bound
mov
fdiv
push
mov
push
pop
jne
push
xor
sub
jmp
and
inc
push
xchg
adc
dec
lods
mov
mov
cmp
cmp
test
dec
xchg
cmp
mov
ja
pop
cmp
in
clc
adc
not
fisub
aad
mov
lea
push
(bad)
loope
fld
xchg
mov
(bad)
pop
xor
loope
jmp
icebp
movs
inc
cmp
or
and
mov
inc
mov
xor
ins
push
scas
add
out
es
mov
out
xchg
adc
popf
(bad)
stos
add
mov
rol
push
jbe
mov
rcl
push
mov
(bad)
sbb
sbb
cmp
cwde
(bad)
mov
aaa
jno
jae
outs
mov
pop
cmp
mov
inc
mov
dec
mov
mov
xchg
stos
push
sahf
mul
out
mov
iret
mov
inc
fmul
movs
mov
xor
inc
mov
div
mov
out
push
add
inc
inc
jae
pushf
aad
imul
pop
(bad)
xor
in
fimul
std
jmp
dec
ja
aad
pop
aas
adc
sub
mov
and
sahf
pop
pop
call
push
shr
mov
push
shr
and
inc
cs
int3
and
cdq
jmp
test
(bad)
out
sbb
lods
sub
dec
repnz
mov
inc
cwde
mov
or
inc
jb
xor
inc
inc
dec
push
pushf
jnp
sub
ret
jle
and
stos
inc
and
xor
and
jae
mov
or
shr
test
mov
add
inc
retf
inc
and
not
loope
shl
pop
sub
adc
add
xchg
add
xchg
sbb
int
retf
pop
jns
stos
xor
(bad)
icebp
add
ret
inc
cmp
mov
inc
adc
lahf
mov
dec
ss
sub
lahf
inc
fsubr
in
push
rol
into
retf
inc
ret
stos
sub
cli
adc
dec
xchg
pop
arpl
or
xor
mov
stos
add
mov
jae
mov
sub
mov
inc
xchg
dec
add
inc
sahf
aad
push
imul
cld
fdiv
inc
fst
pop
out
push
inc
xchg
out
dec
sbb
pop
add
aas
xor
inc
fisubr
lds
daa
mov
enter
daa
xor
inc
and
(bad)
xor
adc
pushf
push
outs
rcl
inc
mov
mov
jae
or
push
das
dec
sub
push
inc
sbb
mov
jb
pop
dec
cmps
ja
mov
dec
je
ss
xor
push
add
push
push
dec
fsubr
mov
jge
mov
cmp
popa
jo
xor
leave
pop
out
jnp
xor
dec
adc
pop
dec
pop
add
mov
jbe
mov
stc
and
popf
mov
xor
imul
cdq
or
int3
pop
or
dec
jecxz
xchg
adc
push
push
push
adc
retf
sbb
lock
shl
pop
nop
pop
inc
call
nop
daa
aaa
aaa
ins
push
cli
mov
in
retf
and
cmp
repnz
mov
lods
sbb
xchg
xchg
in
call
lock
test
dec
pushf
out
dec
sti
movs
dec
neg
clc
sahf
pop
mul
nop
pop
jbe
(bad)
push
inc
cmp
and
sbb
mov
fld
sub
scas
dec
mov
or
test
loop
sbb
fidiv
mov
add
xlat
mov
das
xor
mov
popa
rol
les
xor
in
outs
sub
add
inc
scas
div
pop
push
in
add
xor
push
pop
test
mov
and
ret
in
xor
mov
sub
dec
sub
and
push
aam
into
inc
mov
or
mov
lds
dec
cmp
cmp
mov
test
pop
dec
xchg
mov
leave
ja
inc
fsubr
arpl
xchg
cli
push
dec
xor
add
dec
xchg
inc
cmp
or
dec
cmp
loop
fs
loope
bound
hlt
aad
mov
clc
and
pop
scas
ins
mov
mov
add
inc
cmp
leave
mov
mov
or
pop
mov
int3
xchg
jle
xchg
dec
imul
out
pop
fidivr
data16
pop
aam
mov
push
mov
mov
lahf
push
push
and
push
and
push
adc
sar
xchg
and
or
in
add
pop
out
dec
cmp
scas
pop
sbb
rol
push
repnz
mov
ficom
in
out
jbe
dec
mov
mov
add
int3
(bad)
mov
sub
adc
shl
int3
add
xchg
mov
js
je
sub
stos
mov
test
mov
add
mov
xor
cmp
mov
xchg
mov
cdq
lock
push
push
mov
pop
ins
or
push
sub
cmps
aaa
test
in
retf
cdq
and
sbb
adc
(bad)
jge
stos
fdiv
inc
pop
fnstenv
fdivr
sar
ins
dec
inc
clc
pop
ins
(bad)
push
aam
jmp
lock
mov
pop
adc
adc
pop
fisub
shld
xlat
xor
sbb
sub
pop
sti
out
shl
push
mov
mov
mov
mov
retf
mov
add
and
push
sti
cmc
mov
jno
mov
adc
cmp
jg
test
stos
shr
pushf
fistp
es
inc
sti
aas
mov
dec
sahf
shl
sti
sub
mov
lea
or
adc
inc
fs
lods
inc
ss
mov
mov
push
push
add
sbb
mov
jmp
ins
jp
test
mov
adc
fs
bound
sti
mov
mov
in
mov
xchg
ret
sub
push
or
scas
lods
popf
scas
inc
dec
popa
sub
push
mov
dec
test
and
jns
mov
add
rcr
dec
stos
jg
fwait
inc
sub
mov
and
xor
icebp
sub
mov
out
cmp
jae
xchg
inc
mov
mov
dec
inc
ficomp
imul
and
push
add
mov
xchg
adc
push
adc
cdq
outs
imul
inc
xchg
xchg
push
mov
jne
sbb
xor
or
inc
push
mov
jmp
je
aaa
sub
mov
stos
inc
ret
ja
icebp
or
sub
pop
scas
add
sahf
jmp
adc
xor
mov
xchg
add
jns
popf
pop
push
scas
xor
ret
pop
xchg
(bad)
outs
sub
stc
cs
ins
cmps
in
jbe
popa
jns
inc
add
mov
ins
sar
mov
xchg
add
xlat
jb
shr
mov
je
adc
sub
imul
inc
push
shl
out
call
dec
ins
cmp
sbb
retf
enter
lds
das
or
and
dec
inc
xor
xlat
in
sahf
mov
mov
imul
loope
mov
cmp
xchg
loopne
xchg
mov
aas
retf
mov
xchg
push
lea
aad
inc
cs
movs
ds
mov
mov
xchg
xor
inc
xchg
or
pop
pop
fild
adc
jbe
add
adc
add
push
and
lahf
add
mov
mov
imul
add
mov
cmp
out
ins
mov
movs
push
fidiv
hlt
and
xor
push
jmp
pop
out
int3
cmp
adc
or
xor
xor
popf
mov
pusha
lods
lods
mov
ss
push
cmp
or
inc
out
call
jecxz
sub
mov
add
inc
xchg
sub
pop
push
pusha
add
shl
jecxz
jo
fisubr
or
lods
loope
jmp
fdiv
call
or
xor
or
test
ja
mov
jp
scas
or
fcomp
mov
sub
adc
dec
sub
pop
sbb
div
push
imul
ins
mov
dec
sbb
add
loop
push
pop
scas
daa
pop
mov
pushf
neg
es
cmp
pop
and
inc
push
push
popa
sub
jecxz
jp
test
mov
mov
xchg
pop
pop
and
sti
jno
mov
out
jl
jb
mov
adc
cwde
mov
popf
pop
fwait
mov
and
cmp
add
inc
aam
rol
xchg
pop
out
fimul
or
loope
jnp
jae
dec
push
mov
add
call
cmps
adc
dec
pop
mov
push
mov
jnp
int
(bad)
call
sbb
fimul
dec
adc
das
sbb
retf
dec
loope
cmp
xor
sub
mov
ror
push
push
fld
cmp
mov
pop
dec
fwait
cmp
push
std
push
jo
mov
jo
or
sbb
std
pushf
mov
call
pop
popa
mov
jne
lods
and
mov
fs
sbb
outs
cmp
outs
fmulp
pop
fimul
push
popa
jp
adc
repnz
adc
mov
(bad)
fscale
lds
addr16
inc
scas
xlat
or
test
je
imul
shl
push
pop
popf
push
out
add
popa
xor
ror
loop
popf
mov
sub
stos
add
das
bound
xor
sbb
or
movs
ins
xor
test
enter
and
inc
xlat
or
jl
cmps
sub
dec
adc
cs
fisubr
shr
fdiv
mov
cmp
push
retf
inc
mov
stc
in
jmp
enter
(bad)
push
(bad)
enter
(bad)
mov
xchg
jnp
fwait
test
and
test
in
fwait
arpl
cmps
sub
(bad)
xor
movnti
stos
bound
cmp
fst
jno
bound
xchg
cmps
into
pop
(bad)
cli
jno
std
pop
rcl
or
add
inc
push
mov
jae
and
xor
(bad)
push
add
cwde
and
daa
jle
clc
stos
in
aaa
shl
jmp
mov
mov
shl
inc
and
xor
fwait
cmp
stos
push
mov
mov
xchg
mov
mov
jnp
push
mov
inc
(bad)
(bad)
out
iret
call
pop
out
fiadd
pop
jo
pop
mov
cwde
pop
scas
or
jns
push
mov
adc
mov
jle
jne
dec
dec
je
adc
fstp
dec
push
test
ins
arpl
rol
imul
sahf
pop
aas
data16
rcr
cld
mov
daa
(bad)
enter
jecxz
pop
adc
xor
(bad)
dec
aad
loop
leave
jge
jbe
sahf
pop
hlt
(bad)
je
inc
(bad)
test
dec
mov
jle
(bad)
ret
ins
hlt
inc
in
sub
call
popf
xchg
out
pop
dec
mov
pop
lea
jb
mov
cmp
loop
test
jmp
and
mov
xchg
fst
fiadd
fcmovnb
or
mov
ins
std
stc
addr16
lds
ja
mov
test
sbb
arpl
cmp
fadd
or
ret
lahf
inc
push
icebp
lahf
push
cmp
mov
push
aad
pop
jle
ret
inc
(bad)
lahf
xchg
mov
(bad)
(bad)
sub
pop
jnp
movs
xor
jo
outs
retf
daa
push
xchg
je
pop
pop
or
mov
sbb
(bad)
and
and
push
addr16
cmps
and
call
or
mov
sbb
sbb
inc
mov
inc
popa
pop
into
call
hlt
sti
popa
mov
inc
or
cs
out
inc
sub
push
lds
lods
and
jbe
int
lahf
outs
pop
fwait
cmp
or
or
iret
xlat
cmps
(bad)
fld
shr
xor
shl
bnd
stos
jne
fmul
ja
cmp
pop
push
mov
pop
inc
jnp
xchg
fsub
(bad)
jmp
arpl
jmp
push
inc
sub
fwait
jbe
jmp
ret
arpl
xor
jge
mov
mov
pop
cmp
pop
hlt
push
dec
leave
pop
out
adc
cdq
push
push
scas
push
call
sbb
push
inc
push
lock
adc
outs
out
mov
std
(bad)
adc
nop
out
icebp
pop
loopne
sbb
and
(bad)
lock
dec
adc
mov
xchg
mov
sub
test
push
mov
and
xor
dec
mov
adc
test
inc
jg
imul
cdq
js
(bad)
aas
sar
icebp
cli
sub
test
mov
icebp
add
jnp
jge
push
jmp
cmc
retf
push
and
ins
dec
lds
xchg
adc
lock
mov
fs
cmc
(bad)
out
inc
xor
stos
jmp
loope
mov
sub
mov
cmc
push
mov
js
mov
cld
dec
aad
push
mov
xchg
addr16
dec
jp
push
sub
es
call
mov
das
push
sub
outs
fs
(bad)
fldenv
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
push
inc
add
dec
add
dec
dec
dec
push
loopne
add
or
or
add
add
xor
add
add
add
or
add
add
add
inc
add
and
add
adc
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
inc
test
add
add
adc
add
add
add
adc
add
add
add
add
add
data16
dec
add
add
mov
add
add
or
or
add
add
add
add
add
or
add
or
add
dec
add
add
je
js
add
add
add
and
add
push
or
add
add
and
add
jae
popa
je
add
bound
add
add
add
add
add
add
cs
jb
add
add
mov
add
add
add
add
jb
ins
outs
arpl
add
add
add
or
add
add
add
add
inc
add
inc
inc
data16
add
add
dec
add
add
add
add
push
add
add
add
sub
add
cmp
add
(bad)
pop
add
add
add
add
add
sub
add
add
sub
add
add
or
jae
add
or
jae
add
or
jae
add
or
add
add
xor
add
add
add
add
adc
jle
add
add
or
add
or
add
sub
xor
add
add
add
add
adc
jle
add
add
or
add
or
add
sub
xor
add
add
add
add
adc
jle
add
add
or
sub
push
sub
xor
add
add
add
add
add
add
add
push
add
or
sub
push
sub
xor
add
add
add
add
sub
add
or
adc
add
or
add
sub
add
xor
add
add
push
add
adc
add
adc
add
or
add
sub
xor
add
add
add
add
adc
rol
adc
sub
push
sub
xor
add
add
or
add
add
sub
add
or
sub
push
sub
xor
add
add
add
add
adc
add
or
add
add
or
or
add
add
push
sub
adc
add
adc
add
or
add
add
adc
(bad)
adc
push
add
sub
add
add
sub
add
or
add
add
xor
add
add
add
add
adc
jle
add
or
or
add
add
sbb
add
jle
add
or
sub
push
sub
add
sub
add
sbb
add
add
sub
adc
add
dec
add
add
add
add
enter
add
add
push
add
or
and
adc
add
xor
add
and
or
add
add
add
push
add
add
add
add
or
add
sub
add
adc
add
xor
add
or
add
add
sub
add
or
sub
add
add
jo
push
or
outs
pop
add
or
add
or
add
or
or
(bad)
or
or
add
out
add
add
add
xor
add
add
add
pop
sub
add
or
or
pop
mov
or
and
cmc
and
sbb
pop
push
and
add
add
sub
push
sub
adc
push
add
add
add
add
adc
and
or
aam
jae
add
or
or
add
add
or
or
pop
push
adc
pop
and
or
pop
xor
pushf
adc
sbb
pop
pushf
adc
sbb
push
pushf
adc
sbb
repnz
add
pushf
adc
push
pop
push
pushf
adc
pop
or
fild
add
pushf
adc
pop
or
mov
adc
pop
or
xchg
add
add
pop
pushf
adc
pop
or
add
jecxz
add
pushf
adc
pop
nop
pushf
adc
pop
adc
adc
lea
add
pushf
adc
pop
adc
pushf
adc
pop
adc
adc
mov
push
add
or
add
add
add
add
pop
adc
pop
add
pop
pop
push
adc
adc
pop
adc
xor
add
add
pop
adc
pushf
add
add
adc
add
add
sub
add
xor
add
add
adc
sbb
sbb
add
pop
push
or
pop
ins
push
hlt
add
pop
pop
xchg
pop
pop
js
out
and
add
and
sub
add
or
xor
add
add
outs
and
add
or
add
sub
xor
add
add
adc
add
add
and
(bad)
adc
sbb
or
fmul
clc
push
and
add
add
ss
sub
add
or
add
jo
in
sti
mov
sub
lea
add
add
ds
push
and
add
add
add
add
pop
adc
push
add
or
add
jo
xchg
xchg
bnd
adc
add
or
add
or
adc
push
or
adc
push
pop
call
add
sbb
add
sbb
or
outs
sub
add
add
add
(bad)
adc
adc
add
add
add
sbb
pop
(bad)
or
pop
or
mov
add
pop
sub
pop
pop
pop
push
adc
inc
or
add
add
add
adc
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
fiadd
or
pop
adc
pop
(bad)
xor
pop
sub
adc
inc
add
add
add
add
mov
(bad)
(bad)
fisub
jne
add
add
add
push
push
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
shl
add
sub
add
or
adc
sub
sub
inc
sbb
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
adc
and
pop
(bad)
(bad)
or
or
or
pop
mov
or
dec
xor
add
sbb
xchg
add
sbb
xchg
add
pop
(bad)
xchg
add
xchg
sub
add
or
add
or
sub
push
sub
xor
add
add
add
add
adc
and
sbb
inc
or
add
sub
adc
add
xchg
add
add
add
adc
jb
add
jo
or
adc
adc
outs
pop
add
or
or
sbb
or
pop
outs
and
add
adc
adc
add
pop
pop
(bad)
adc
add
pop
adc
xor
adc
(bad)
adc
sbb
push
pop
sub
add
adc
pop
xlat
adc
adc
pop
das
ss
add
add
or
lea
add
add
or
or
adc
sub
add
or
sub
add
or
sub
add
or
sub
add
or
pop
sub
xor
add
add
add
add
add
iret
and
add
sub
adc
add
add
pop
adc
add
pop
pop
xchg
pop
pop
sub
cmc
add
lea
add
add
push
pop
cmp
xor
add
popf
or
add
or
call
pop
lea
add
add
sub
add
or
add
pop
call
add
add
sub
xor
add
sub
add
sub
sub
push
sub
add
xor
add
add
add
add
adc
and
sub
add
sub
push
sub
push
add
sub
add
sub
xor
add
add
add
add
adc
and
mov
or
add
sub
adc
add
or
add
sbb
add
add
adc
sub
push
sub
add
sub
xor
add
add
add
add
adc
and
sub
push
sub
adc
add
pop
add
add
add
adc
pop
or
add
sub
adc
add
or
add
sbb
add
add
dec
pushf
fdiv
or
add
sub
add
sub
xor
add
add
add
or
add
sub
add
or
je
add
sbb
add
or
add
or
push
outs
cmp
add
mov
adc
outs
cmp
add
sub
add
adc
lea
add
add
add
add
push
lea
add
add
cmp
add
add
add
sbb
or
jns
add
sbb
push
or
mov
add
pop
(bad)
or
pop
fs
add
cmp
and
pop
and
or
add
add
push
jae
add
or
add
or
push
outs
cmp
add
add
adc
add
add
pop
sbb
add
sub
(bad)
adc
xor
add
add
pop
xchg
add
add
adc
(bad)
or
outs
cmp
cmp
push
add
add
add
or
add
or
push
sub
add
push
outs
and
add
sub
add
and
jae
add
or
and
pop
(bad)
push
sub
add
or
add
jo
cld
mov
add
push
sub
add
sub
add
cmp
add
add
inc
add
or
outs
and
add
sub
add
and
or
repnz
and
add
add
add
rol
xor
push
add
or
add
jo
(bad)
mov
add
push
sub
add
sub
or
sbb
adc
sub
sbb
sbb
outs
inc
add
or
mov
jae
add
or
and
dec
xchg
inc
pop
push
jle
add
or
add
jo
sub
inc
add
or
adc
and
iret
pop
jo
jae
add
or
and
lods
sub
add
or
add
jo
inc
aas
add
adc
inc
add
or
push
add
adc
adc
pop
(bad)
adc
add
sbb
sbb
sbb
sbb
add
adc
sbb
push
pushf
adc
pop
pushf
adc
sbb
adc
sbb
adc
or
lea
add
add
sbb
sahf
adc
adc
sbb
adc
sbb
adc
sbb
adc
or
add
cmp
sub
add
or
pop
add
push
adc
(bad)
sub
add
adc
push
adc
adc
and
inc
add
adc
sub
add
or
pop
add
push
sub
add
add
lea
add
add
pop
pop
adc
and
cmp
add
or
and
repz
pop
push
sub
add
or
add
jo
out
and
adc
xor
(bad)
sub
add
adc
push
adc
adc
push
sbb
push
adc
lea
add
add
pop
outs
inc
add
push
sub
add
add
and
xor
add
adc
adc
push
and
add
add
ss
and
add
add
add
(bad)
pop
lea
push
add
or
add
jo
jmp
add
and
push
sbb
add
pop
pop
(bad)
xor
add
jno
add
add
adc
add
push
cmp
add
push
adc
and
mov
(bad)
push
and
add
add
int
mov
sub
add
or
add
jo
fcom
test
adc
push
push
add
sub
pop
push
(bad)
xor
add
jno
add
add
pop
adc
pop
sub
sub
add
add
pop
adc
adc
sbb
dec
add
or
adc
adc
outs
push
add
push
cmp
add
add
push
jp
gs
and
add
add
inc
pop
(bad)
pop
and
push
add
or
add
jo
sub
inc
movs
inc
into
push
pop
add
sub
pop
push
(bad)
xor
add
jno
add
add
movq
add
outs
push
push
stos
add
add
fwait
and
jae
add
or
and
or
push
jle
add
or
add
jo
pop
xchg
popf
pop
sub
inc
hlt
xlat
dec
push
or
add
adc
push
(bad)
xor
add
jno
add
add
and
jg
add
adc
sub
add
or
pop
add
push
sub
add
add
and
and
retf
pop
add
adc
sub
add
or
pop
add
push
sub
add
add
and
add
add
pop
inc
outs
imul
and
xchg
push
and
add
add
dec
mov
inc
pop
fwait
sub
add
or
add
jo
sub
xor
add
sub
push
adc
or
adc
add
push
adc
push
(bad)
xor
add
jno
add
add
adc
adc
adc
outs
jno
add
adc
pop
or
adc
adc
push
adc
pop
ficom
and
sbb
mov
adc
pop
or
and
add
add
adc
xchg
(bad)
sahf
add
or
add
adc
pop
sub
(bad)
adc
pop
sub
dec
add
or
adc
xchg
pop
ficom
(bad)
lea
add
add
sbb
adc
xchg
adc
push
adc
mov
or
adc
mov
and
and
dec
add
or
pop
adc
adc
push
(bad)
xor
add
jno
add
add
and
adc
dec
add
or
adc
xchg
(bad)
sub
add
add
and
sbb
and
sbb
add
add
and
adc
add
push
adc
add
sbb
(bad)
adc
adc
adc
ds
(bad)
(bad)
call
adc
adc
adc
push
(bad)
xor
add
jno
add
add
and
adc
sub
sub
add
add
and
and
add
adc
sub
add
and
cmc
push
sbb
add
adc
sbb
dec
add
or
adc
adc
outs
jno
add
adc
adc
pop
sub
adc
dec
add
or
adc
sub
add
or
pop
add
push
(bad)
mov
pop
bound
and
add
add
xlat
dec
xchg
inc
pop
fidivr
add
or
add
jo
pop
adc
add
push
push
add
pop
pop
(bad)
xor
add
jno
add
add
adc
add
push
and
aam
jae
add
or
and
add
push
add
or
add
jo
lods
lds
add
and
mov
push
or
add
adc
pop
(bad)
xor
add
jno
add
add
add
push
es
sub
add
fimul
or
sub
add
adc
sbb
sub
add
sub
add
outs
sub
add
add
add
add
add
add
add
add
mov
add
les
add
push
push
add
or
add
add
xor
add
add
push
add
adc
sub
(bad)
adc
push
add
push
add
adc
jb
add
jo
dec
add
or
add
or
sbb
pop
pop
or
adc
pop
or
pop
pop
sub
add
adc
add
pop
pop
xchg
pop
xor
out
or
pop
and
pop
mov
cmp
cmc
push
and
add
add
add
mov
ins
sub
add
or
add
jo
sub
push
add
or
add
and
and
or
add
sub
add
push
add
or
pop
pop
punpckhdq
add
or
pop
outs
push
and
add
add
add
sub
pop
or
pop
add
jle
add
or
push
add
or
push
add
or
push
add
or
add
adc
sub
push
pop
pop
push
adc
inc
or
add
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
cld
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jl
(bad)
call
(bad)
(bad)
(bad)
fiadd
pop
adc
adc
pop
sub
adc
add
add
add
and
add
add
add
add
adc
push
inc
pop
(bad)
adc
add
sub
add
or
shl
add
sub
add
or
adc
sub
sub
add
add
add
add
add
add
add
add
add
or
add
aaa
add
add
sub
add
or
add
jae
adc
add
sub
add
xor
add
add
add
add
adc
jb
add
jo
push
or
outs
pop
add
or
add
or
add
or
or
(bad)
or
or
add
out
push
or
add
sub
adc
add
or
add
and
add
add
test
xor
sub
push
sub
push
add
sbb
add
add
and
jge
add
add
sub
add
xor
add
add
and
add
add
sub
push
or
sub
add
pop
adc
and
add
add
sbb
add
add
add
or
sbb
add
adc
pop
xchg
add
add
je
repnz
pop
(bad)
or
in
push
pop
mov
or
add
or
push
add
or
adc
or
push
add
or
add
outs
add
sbb
add
add
and
clc
fld
and
add
add
add
add
sub
xor
add
add
and
add
add
or
sub
add
adc
and
add
add
add
inc
adc
push
add
or
add
add
add
lock
pop
adc
add
add
add
add
push
inc
xor
add
pop
push
or
pop
daa
push
(bad)
and
add
add
add
add
add
bound
sub
add
or
add
add
add
rol
sar
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
sub
add
or
add
jge
add
add
sub
add
add
sbb
add
add
sub
add
xor
add
add
adc
pop
adc
add
pop
(bad)
or
pop
jnp
neg
sbb
sub
push
sub
add
add
sbb
add
add
and
jge
add
add
and
ins
add
jge
add
add
sub
add
add
sbb
add
add
sub
add
sub
add
or
add
jge
add
add
and
add
jge
add
add
sub
xor
add
add
add
add
add
add
jo
add
or
add
or
add
or
add
or
pop
(bad)
or
xor
jb
add
jo
sub
pop
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
xor
add
add
add
pop
or
sub
push
adc
adc
pop
xchg
add
repnz
add
or
xchg
jge
or
sub
add
add
sbb
add
add
sub
add
xor
add
add
add
add
adc
jb
add
jo
push
or
outs
pop
add
or
add
or
add
or
or
(bad)
or
or
add
out
jle
add
or
sub
push
sub
add
sbb
add
add
sub
add
xor
add
add
daa
add
adc
jb
add
jo
pop
adc
and
add
add
xor
and
add
add
add
mov
adc
mov
inc
or
add
or
push
add
or
adc
or
push
add
or
mov
sub
add
add
sbb
add
add
sub
add
sub
add
or
add
call
add
sub
add
adc
add
dec
add
add
add
adc
and
int
fild
and
or
add
jo
push
push
adc
add
or
pop
sub
adc
adc
or
adc
pop
xor
push
sub
and
add
add
add
add
sub
add
or
add
mov
jge
add
add
pop
aaa
jge
add
add
sub
add
sub
add
or
add
mov
aaa
add
add
sub
add
adc
add
mov
add
sub
add
add
or
add
jo
pop
push
adc
adc
outs
pop
add
or
or
adc
pop
adc
outs
and
add
or
push
pop
(bad)
adc
add
push
adc
xor
add
pop
pop
mov
push
pop
es
and
add
add
add
inc
or
or
add
add
add
lock
pop
or
and
add
add
sbb
out
mov
jo
or
adc
adc
outs
pop
add
or
or
cmp
outs
and
add
or
inc
adc
add
add
xor
add
add
add
cmp
adc
add
add
xchg
inc
xor
adc
pop
(bad)
adc
add
or
or
mov
add
sbb
add
add
and
add
push
cmp
add
sub
add
sub
add
or
add
push
mov
ffreep
jge
add
add
sub
add
inc
add
sbb
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
xor
add
add
sub
add
add
or
sub
jb
add
jo
push
push
adc
add
or
pop
sub
adc
adc
or
add
add
xlat
adc
add
jne
repz
add
add
pop
or
sub
add
and
adc
repz
sub
push
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
xor
add
add
sub
add
add
push
mov
aad
or
push
push
or
add
sub
sub
add
or
add
add
xchg
dec
xchg
leave
inc
jge
add
add
sub
add
adc
add
sldt
add
add
add
(bad)
or
pop
dec
xor
add
add
xor
add
add
sub
pop
or
add
pop
pop
mov
push
pop
inc
xor
push
sub
jb
add
jo
add
or
add
or
add
or
add
or
pop
(bad)
or
xor
add
sub
add
sbb
add
add
sub
add
xor
add
add
add
adc
pop
push
push
and
add
add
dec
push
and
add
add
or
or
pop
xchg
pop
js
cmc
add
jle
add
or
push
add
or
pop
or
add
or
push
add
or
add
sub
add
adc
add
add
add
add
adc
and
add
add
add
inc
or
pop
and
add
add
add
aas
pop
or
and
add
add
add
out
in
add
or
add
sub
add
sub
add
or
add
add
sub
add
push
add
sub
add
sub
xor
add
add
add
add
adc
and
sub
push
sub
add
sbb
add
add
sub
add
sub
add
or
add
mov
add
sub
add
add
sub
sub
add
or
add
add
jo
sbb
add
and
sbb
add
sub
add
sub
xor
add
add
xor
add
add
imul
sub
push
sub
sub
add
or
add
adc
popa
les
add
add
sub
add
push
add
sub
add
add
and
out
outs
bound
and
add
and
dec
test
and
add
add
add
add
sub
sub
add
or
add
jge
add
add
sub
add
adc
add
or
add
xor
add
add
add
jo
sub
push
sub
add
sbb
add
add
sub
add
sub
add
or
add
and
add
jge
add
add
sub
add
adc
add
or
add
xor
add
add
adc
add
or
add
sub
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sub
sub
add
or
add
push
add
or
add
add
sub
add
push
add
sub
add
sub
xor
add
add
add
add
add
in
repz
sbb
sub
push
sub
outs
add
sbb
add
add
and
test
push
and
add
add
add
add
sub
add
sub
add
sub
add
sub
add
sbb
add
add
sub
add
xor
add
add
add
and
adc
add
sub
push
sub
adc
add
or
add
add
adc
jb
add
jo
sub
push
sub
push
add
sub
xor
add
add
add
add
adc
and
add
add
fld
or
add
sub
add
sbb
add
add
sub
add
xor
add
add
add
add
adc
jb
add
jo
sub
push
sub
jle
sub
add
or
add
cmp
sub
jb
add
jo
add
add
sub
xor
add
add
add
add
adc
jb
add
add
sub
adc
add
or
add
cmp
add
add
add
add
sub
push
sub
adc
add
or
add
cmp
add
add
push
sub
push
sub
sub
add
or
add
fs
dec
ins
sbb
add
add
sub
add
adc
add
or
add
cmp
add
add
push
add
or
sub
push
sub
add
sbb
add
add
sub
add
add
sub
xor
add
add
add
jb
add
add
sub
(bad)
pop
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
xchg
icebp
and
rol
add
adc
add
jno
arpl
xor
add
add
add
and
(bad)
pop
add
(bad)
mov
xor
mov
pop
lea
and
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
push
dec
dec
cmp
jg
loop
fsubr
push
cs
xchg
inc
aaa
mov
idiv
fmul
je
(bad)
inc
dec
jl
pushf
adc
nop
out
mov
fld
sbb
xor
pop
push
repnz
call
cmp
dec
inc
push
xor
pop
push
repnz
mov
movups
adc
xor
pop
push
repnz
xchg
jecxz
adc
jb
pop
jo
xor
mov
movups
xor
pop
push
repnz
mov
pop
mov
movups
jb
pop
push
loop
push
iret
mov
movups
xor
dec
push
repnz
mov
setge
adc
push
cli
xor
mov
movups
xor
pop
push
repnz
mov
push
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
jo
xor
mov
movups
xor
adc
repnz
mov
(bad)
stc
pusha
imul
pushf
cmc
xor
mov
movups
xor
pop
push
repnz
mov
outs
aas
push
or
xor
mov
pop
mov
movups
adc
xor
pop
push
repnz
mov
dec
aas
jmp
add
push
repnz
mov
pop
mov
movups
adc
xor
pop
push
repnz
mov
dec
adc
xor
pop
push
repnz
mov
movups
xor
pop
push
div
push
stos
mov
movlps
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
pmaxub
xor
inc
dec
loope
inc
(bad)
rcr
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fistp
adc
movs
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fs
mov
fst
xor
push
fistp
adc
movs
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
jecxz
adc
xor
pop
push
bnd
fistp
adc
add
sbb
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
mov
sti
adc
movs
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
movs
xor
pop
push
repnz
mov
sbb
mov
out
xchg
pop
cmp
repnz
mov
str
xor
inc
push
repnz
mov
sysenter
lea
and
repnz
mov
movaps
xor
sbb
repnz
mov
cvtps2pd
xor
movmskps
xor
fistp
dec
lea
and
push
repnz
mov
packsswb
xor
and
fistp
call
and
push
repnz
fistp
mov
movs
xor
out
repnz
lock
data16
out
xchg
mov
int3
sbb
lods
fsub
xchg
or
(bad)
mov
mov
mov
cmp
jne
sbb
inc
add
stc
dec
call
int
cmps
mov
outs
jnp
sub
hlt
jnp
cmp
sbb
inc
or
cmp
in
jbe
jg
test
cld
and
inc
xor
or
movs
mov
xchg
xchg
push
sub
int
inc
jns
inc
test
mov
and
int
mov
and
inc
test
push
out
jb
push
jbe
data16
xchg
inc
imul
cli
push
and
scas
in
jb
out
imul
or
jns
or
scas
or
xchg
pop
mov
add
and
xor
mov
movups
xor
pop
js
xor
mov
movups
xor
pop
ins
repnz
mov
movups
add
and
xor
mov
movups
mov
mov
sub
sub
pusha
adc
cmp
sbb
mov
cmp
into
sbb
lods
repz
xchg
dec
cmp
dec
loopne
in
shr
mov
mov
xlat
sbb
shl
dec
jno
out
jo
(bad)
ds
jnp
sub
hlt
push
mov
or
or
sar
jp
cs
hlt
mov
aaa
adc
pop
sbb
inc
imul
mov
push
test
stos
jne
sbb
dec
hlt
or
dec
cdq
dec
adc
cmps
lods
push
pusha
mov
jmp
dec
in
sbb
xor
push
push
repnz
mov
invd
lea
and
xor
mov
(bad)
lea
and
loope
outs
sbb
imul
push
cmp
dec
in
mov
test
in
push
mov
sbb
inc
imul
mov
sub
sbb
push
adc
sub
fisub
shl
push
scas
cs
jne
sbb
inc
js
ror
xchg
dec
inc
movs
enter
ror
dec
(bad)
jecxz
ja
out
cmp
mov
dec
mov
push
jmp
or
shl
push
xchg
into
jno
out
ds
jnp
sub
hlt
push
adc
cmps
leave
xor
call
xor
cmp
pop
mov
das
inc
fbld
ja
movs
and
xor
mov
unpckhps
xor
mov
(bad)
scas
xchg
inc
sbb
out
xchg
push
sbb
aas
cmp
retf
and
push
mov
or
jns
or
cmps
scas
or
mov
adc
add
sub
pop
mov
or
lea
or
adc
pop
push
mov
or
cs
out
xchg
test
retf
xchg
sbb
fidivr
adc
scas
sub
outs
pop
inc
imul
pop
cmp
movs
xor
fcom
xor
inc
jle
test
daa
xchg
and
add
mov
xchg
test
xor
mov
mov
stos
lock
mov
out
xchg
mov
ds
jmp
dec
inc
addr16
or
test
test
daa
xchg
and
xor
xchg
mov
mov
(bad)
sbb
fdivr
push
fisub
retf
mov
rdtsc
adc
and
cmp
mov
aaa
int
cli
out
jno
sub
pop
push
mov
add
sahf
add
scas
pop
int
inc
pop
call
mov
fstp
lods
dec
call
xor
pushf
popa
pop
mov
das
out
mov
and
(bad)
xor
pushf
push
mov
aad
cmp
add
ins
test
and
adc
mov
xchg
add
pop
push
mov
or
out
cld
out
xchg
mov
jmp
dec
clc
add
addr16
or
test
mov
enter
cmp
movs
xor
das
push
repnz
xchg
pop
mov
add
scas
or
jns
or
movs
scas
or
sahf
fisub
sar
mov
sub
retf
xor
pop
lods
jmp
add
enter
in
adc
scas
xchg
pop
sbb
out
cdq
test
push
ss
fadd
push
jmp
test
pop
jmp
and
mov
cli
out
jne
aas
cmp
retf
and
push
lods
rol
sahf
add
(bad)
pop
int
dec
pop
jmp
dec
sbb
or
and
ret
or
test
mov
add
imul
xor
movs
xchg
pop
mov
push
sbb
aaa
sbb
test
int3
jbe
push
dec
push
lea
xchg
jae
xor
inc
fyl2xp1
xchg
jecxz
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
test
lea
mov
push
pop
mov
mov
push
xor
push
fistp
adc
push
and
push
(bad)
mov
movups
xor
pop
inc
repnz
mov
movups
aas
xor
or
and
and
call
dec
jnp
sub
hlt
pop
mov
add
cmp
adc
xor
jbe
(bad)
cmp
fidivr
adc
xor
pop
inc
repnz
mov
sbb
mov
out
xchg
pop
sub
stos
dec
clc
sbb
enter
div
ss
dec
push
retf
and
jne
jmp
xchg
cs
jo
fdivr
ja
and
push
fistp
sbb
mov
or
mov
icebp
out
jb
adc
aaa
and
push
repnz
test
mov
out
adc
adc
pop
push
repnz
mov
movups
sbb
shl
jne
adc
add
mov
push
adc
xor
jl
lock
adc
mov
and
xor
bound
adc
xor
cwde
push
repnz
pop
mov
and
lea
daa
adc
pop
(bad)
stc
xchg
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
fistp
aaa
cmps
push
sbb
push
adc
mov
movups
and
pop
push
out
push
fbld
movups
adc
pop
push
out
outs
scas
inc
imul
cs
pop
ds
jnp
sub
hlt
push
mov
cld
add
ins
adc
mov
sbb
mov
xor
xchg
adc
aaa
push
jb
out
ins
loope
and
xor
mov
pop
mov
movups
and
pop
push
in
aas
pop
out
imul
cs
mov
rol
(bad)
dec
(bad)
xchg
jl
mov
cli
out
xchg
mov
add
jge
cmps
mov
rol
sub
test
inc
mov
pop
stos
sbb
jno
or
mov
iret
mov
pcmpeqw
add
and
div
(bad)
fnstsw
or
and
pop
push
loopne
push
fild
xchg
pop
mov
movups
jp
pop
push
push
xchg
pop
mov
movups
das
and
xor
mov
movups
mov
pop
push
loopne
push
fbld
xchg
pop
mov
sbb
xchg
push
pop
inc
or
and
push
fidivr
adc
xor
pop
inc
repnz
mov
movups
sub
movs
dec
(bad)
sbb
mov
out
or
sub
aas
dec
shr
lock
test
push
xor
pop
push
repnz
fistp
adc
xor
push
inc
hlt
or
inc
imul
cli
push
cmps
test
dec
(bad)
inc
int3
mov
sub
jb
push
inc
push
and
fiadd
push
lea
popf
pop
adc
xor
jl
icebp
xor
test
shr
add
mov
sub
adc
dec
or
push
repnz
jbe
loop
pop
(bad)
and
cmp
xor
xor
adc
xor
jl
repz
adc
adc
xor
jmp
mov
xchg
out
jb
iret
inc
adc
adc
fdivr
pop
xchg
aas
je
repz
pushf
xlat
pop
mov
das
sub
xor
pop
mov
sub
lods
xchg
sbb
add
and
xor
mov
movups
xor
pop
pop
repnz
mov
movups
add
and
xor
mov
movups
and
ja
jecxz
adc
mov
movups
xor
pop
inc
repnz
mov
movups
mov
sub
hlt
dec
mov
adc
sbb
sub
ds
int3
mov
lock
add
push
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
xor
mov
call
sbb
test
sbb
inc
fisub
and
jb
or
sub
mov
(bad)
dec
hlt
push
mov
in
push
xchg
add
and
xor
fidivr
aas
lea
and
div
cmps
fstp
push
sahf
push
sbb
ja
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
xacquire
mov
xchg
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
adc
lea
xor
repnz
mov
sbb
test
xor
jecxz
push
fbstp
movups
daa
and
xor
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
int
push
(bad)
xchg
pop
mov
movups
or
mov
hlt
dec
mov
adc
(bad)
call
cmp
jmp
mov
retf
cmp
dec
call
mov
(bad)
xchg
pop
cmp
dec
(bad)
dec
mov
add
jge
cmp
in
or
popf
pop
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
dec
mov
cli
push
dec
pop
ds
jnp
sub
hlt
push
mov
or
cmp
xor
das
or
shl
push
call
mov
hlt
push
mov
or
(bad)
mov
fldln2
dec
hlt
mov
xor
sbb
scas
and
inc
inc
loope
outs
clc
inc
imul
add
sub
push
repnz
mov
sbb
lea
ds
inc
cli
or
inc
imul
cli
(bad)
test
ja
in
and
jne
clc
sbb
xchg
adc
bound
cmp
cs
mov
pop
cmps
in
push
addr16
(bad)
cmp
out
and
mov
pop
lods
hlt
sbb
mov
in
xchg
pop
or
hlt
push
mov
sti
and
xchg
cs
adc
xor
pop
jo
xor
pushf
in
mov
daa
sub
xor
pop
jo
xor
xchg
aas
pop
mov
das
xchg
fbld
jo
movs
and
xor
dec
mov
rdtsc
mov
popf
and
push
push
fistp
cmp
xor
rcl
xor
mov
push
adc
ss
inc
hlt
sub
int3
mov
push
sbb
push
add
adc
cmp
jg
in
ds
mov
in
pop
add
adc
cmp
ins
push
repnz
mov
movups
and
dec
pop
mov
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
pop
mov
out
lea
and
arpl
mov
in
lea
lds
movs
push
fistp
adc
xor
push
bnd
fistp
adc
xor
pop
push
repnz
int3
mov
aaa
imul
das
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
push
xor
pop
push
repnz
pop
mov
cmp
lea
ds
inc
sti
or
inc
imul
cli
push
cmps
test
ja
in
and
stos
mov
icebp
xchg
or
mov
sub
test
sbb
mov
iret
push
jge
hlt
cmp
call
xchg
or
adc
mov
repnz
mov
movups
xor
pop
dec
repnz
scas
popf
data16
lock
xchg
cs
mov
rol
(bad)
dec
iret
xchg
jle
stos
enter
cs
xor
or
and
inc
cdq
adc
sbb
sub
mov
(bad)
dec
hlt
pop
lea
jmp
add
mov
mov
fistp
sbb
add
and
repnz
mov
push
sub
sti
out
xchg
mov
fld
dec
lds
adc
cmps
loop
addr16
ds
inc
sti
or
and
inc
mov
cs
je
fdivr
mov
scas
xchg
inc
mov
or
dec
pop
int
dec
jnp
and
mov
enter
out
inc
movs
xor
sbb
fistp
enter
mov
xor
jg
repnz
xchg
inc
and
(bad)
cmps
add
xor
xor
mov
js
jecxz
inc
mov
and
repnz
mov
psubd
and
mov
(bad)
mov
and
fidivr
movs
mov
and
fistp
out
add
and
repnz
mov
movaps
and
push
repnz
mov
pmuludq
and
fistp
loopne
add
and
mov
add
mov
int
jge
(bad)
or
and
dec
call
push
xor
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
loopne
cli
out
jne
sbb
inc
inc
fld
dec
hlt
push
mov
or
xor
shl
ja
jmp
mov
xchg
dec
dec
cdq
xor
push
data16
cld
ds
jnp
sub
hlt
jp
dec
cdq
and
cmp
sbb
inc
pop
sub
ds
fistp
daa
push
test
int3
fisub
sti
scas
mov
out
pushf
sbb
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
wbinvd
sahf
xor
or
fiadd
fld
dec
ret
inc
mov
cs
jne
sbb
inc
jnp
sub
mov
sbb
xchg
and
pop
pushf
add
sbb
out
and
nop
div
(bad)
cmp
call
mov
adc
and
push
and
sub
mov
int
dec
dec
in
and
test
dec
sbb
sbb
mov
sbb
iret
stc
xchg
pop
mov
push
adc
xor
pop
push
repnz
fistp
push
sahf
xor
stos
pop
int
inc
jne
(bad)
dec
(bad)
xchg
gs
xchg
enter
cs
jne
sbb
inc
inc
fisubr
int3
mov
xchg
loopne
(bad)
fdivr
push
jnp
sub
jne
stc
sbb
xchg
or
inc
mov
(bad)
into
test
test
in
cmps
in
or
sub
mov
fstp
sub
mov
int
dec
inc
in
dec
shl
and
pop
adc
jle
mov
movups
xor
es
repnz
mov
sub
mov
xor
pop
sbb
xor
mov
movups
adc
xor
pop
add
xor
mov
movups
push
adc
xor
pop
test
xor
mov
movups
add
push
xor
pop
pushf
repz
mov
movups
add
push
xor
pop
inc
lock
mov
movups
xor
pop
aam
xor
mov
movups
add
push
xor
pop
sbb
xor
mov
movups
add
push
xor
pop
(bad)
repz
mov
movups
xor
pop
out
icebp
xor
mov
movups
xor
pop
stc
lock
mov
movups
xor
pop
mov
mov
movups
add
push
xor
pop
fdiv
xor
movs
xchg
stc
sbb
mov
out
xchg
pop
and
sbb
xor
mov
movups
and
xor
mov
movups
xor
pop
jp
xor
mov
movups
xor
pop
outs
repnz
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
mov
and
jne
cld
and
pusha
sbb
inc
dec
sub
mov
ret
inc
pushf
enter
fisttp
fs
out
dec
jnp
sub
hlt
jo
push
cdq
sub
push
cmps
rol
gs
and
mov
adc
cmp
cmp
mov
xlat
sbb
shl
xchg
aaa
cmp
mov
fldenv
inc
mov
push
and
mov
out
jbe
fistp
sbb
xor
dec
push
repnz
mov
(bad)
jge
xor
jp
repnz
xchg
jo
jecxz
and
xor
inc
inc
(bad)
or
cdq
adc
push
pop
(bad)
fdivr
imul
xchg
cld
sub
push
sbb
jg
add
in
add
mov
aas
cmp
or
jne
call
imul
mov
(bad)
dec
rcl
rol
cmps
(bad)
jle
jmp
shr
fist
and
inc
inc
(bad)
or
and
inc
mov
push
cmp
and
sbb
lods
rcr
jecxz
sbb
xor
dec
push
repnz
mov
prefetchw
xor
inc
inc
loope
outs
inc
mov
xchg
adc
fwait
mov
(bad)
dec
clc
xchg
jb
fwait
enter
cs
jne
and
inc
dec
loope
outs
es
imul
or
xchg
adc
cwde
jne
cmc
and
xchg
push
or
lods
and
inc
dec
loope
outs
push
inc
imul
out
or
sub
mov
(bad)
xchg
dec
inc
cdq
cmp
xchg
daa
ja
movs
and
cmp
mov
cmp
movs
xchg
adc
and
rcl
xor
mov
movups
push
xor
jbe
test
inc
sti
sbb
xchg
pop
add
inc
frstor
movs
xchg
jmp
pushf
push
frstor
xor
sbb
xchg
or
inc
mov
mov
mov
adc
xor
jl
sbb
pusha
enter
mov
daa
or
xor
pop
jo
xor
xchg
mov
mov
sbb
lahf
or
movs
xor
and
xor
inc
xchg
pop
mov
xchg
adc
xor
push
dec
(bad)
and
dec
outs
mov
movs
sbb
jns
or
cmps
scas
or
mov
retf
sahf
xor
mov
out
repnz
pushf
pop
mov
aad
cmp
add
ins
mov
and
aas
inc
rcl
jle
fbld
jl
movs
and
sub
mov
rdtsc
outs
add
and
ds
rcl
sbb
sub
xor
mov
js
jb
push
jns
sbb
inc
inc
(bad)
or
inc
imul
adc
sahf
sub
jo
pop
sbb
stos
or
mov
mov
rdtsc
jbe
adc
stos
and
xor
(bad)
mov
sbb
push
dec
sub
adc
xor
movups
cmp
xlat
push
repnz
mov
movups
add
push
shl
push
fbld
movups
xor
pop
push
add
xchg
pop
mov
push
adc
xor
pop
push
or
push
fbstp
push
adc
mov
xor
add
adc
push
and
xor
jbe
pop
mov
movups
push
and
xor
push
xchg
pop
mov
push
adc
and
xor
stos
xchg
pop
mov
push
adc
sub
cmp
test
mov
enter
movs
cmp
pop
push
stc
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
push
and
and
movs
imul
cs
mov
push
and
mov
push
cmp
inc
jns
sub
mov
sbb
cdq
xor
pop
cmps
leave
pop
inc
ins
sub
sbb
lock
push
jbe
fisub
fistp
sbb
movs
xor
dec
push
repnz
mov
rdtsc
lea
pop
test
lds
std
push
test
push
sbb
inc
inc
(bad)
dec
lds
ror
test
cmp
and
fs
test
movs
enter
out
or
dec
sub
sbb
stos
lock
jne
and
fs
or
test
mov
prefetcht0
xor
dec
push
repnz
mov
femms
xchg
push
daa
push
xchg
int3
fisub
shr
cld
xchg
or
cmp
sbb
scas
mov
out
xchg
cs
(bad)
fnstsw
ja
in
sbb
movs
lock
adc
pop
mov
xchg
jp
cdq
or
cmp
cmp
jo
xor
pushf
call
mov
lods
xor
pop
dec
fsubr
neg
adc
xchg
sbb
jns
or
pop
int3
xchg
mov
aaa
mov
loopne
add
xor
mov
push
adc
pop
retf
jmp
xchg
and
lds
push
adc
jae
mov
push
adc
xor
lock
repnz
dec
test
cmp
adc
xor
pop
push
repnz
mov
movups
add
push
xor
pop
adc
mov
movups
add
push
xor
pop
jecxz
xor
mov
movups
add
push
xor
pop
push
repnz
mov
movups
xor
pop
shl
xor
mov
movups
adc
xor
pop
sub
xor
mov
movups
xor
pop
pop
repnz
scas
mov
sub
cli
out
xchg
mov
fs
push
repnz
mov
str
xor
inc
push
repnz
mov
sysexit
lea
and
repnz
mov
(bad)
lea
and
repnz
scas
mov
out
xchg
adc
lahf
mov
(bad)
dec
retf
inc
scas
enter
cs
sbb
inc
dec
fldl2t
dec
lds
fisttp
cmps
retf
push
loope
xchg
shr
push
adc
jne
and
mov
test
mov
prefetcht0
xor
push
push
repnz
mov
(bad)
lea
and
loope
outs
jb
imul
test
(bad)
fnstsw
inc
jnp
sub
hlt
pop
mov
add
pop
cmps
fimul
addr16
ds
inc
lds
shl
inc
imul
dec
sub
jbe
fdivr
push
jnp
sub
mov
and
xchg
push
add
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
inc
call
sbb
sbb
ret
aas
ja
in
cmp
mov
sbb
xchg
sbb
pop
pushf
sbb
mov
mov
and
xchg
div
sbb
inc
inc
in
sub
int3
xchg
mov
aam
pop
jae
out
jb
fdivr
ja
call
jno
cdq
add
xor
add
push
shl
pop
push
ficomp
push
mov
or
fadd
adc
add
pop
push
ficom
push
fistp
adc
sahf
xor
lods
pop
int
inc
pop
loope
dec
shr
out
push
cmp
div
and
xor
xchg
or
adc
and
cmp
xor
mov
pop
mov
push
adc
xor
je
repz
mov
mov
push
and
dec
push
mov
adc
add
cmps
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
pop
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
mov
data16
cmp
push
inc
test
movss
aas
and
xor
test
movups
adc
pop
push
(bad)
xor
fwait
xchg
pop
mov
movups
add
pop
push
lds
push
fild
movups
sub
cs
cdq
push
adc
cmps
hlt
push
jnp
fistp
ja
in
daa
jge
mov
push
cmp
cmp
dec
in
sbb
lods
jmp
mov
fpatan
inc
hlt
add
cmp
ja
fisub
fistp
sbb
add
and
repnz
mov
femms
xchg
push
sub
int3
fisub
shl
cld
xchg
adc
cmp
sbb
scas
lock
sub
sti
out
xchg
mov
call
mov
lods
enter
cs
sbb
dec
inc
out
pop
int3
nop
mov
fld
jb
add
aaa
and
xor
mov
pop
mov
movups
and
and
sub
cld
sbb
cwde
mov
std
sbb
lock
cmp
fiadd
fld
inc
hlt
push
mov
stc
and
xchg
or
(bad)
mov
loope
outs
fadd
mov
sahf
cmp
fiadd
adc
mov
or
xor
pop
cs
xor
pushf
inc
pop
mov
das
mov
xor
cmp
mov
repnz
jb
xor
dec
call
xor
ret
mov
adc
cmp
xor
push
dec
std
and
test
jg
jecxz
mov
add
and
repnz
mov
cmovno
and
fidivr
sbb
add
and
push
repnz
mov
movups
xor
sub
xor
fnstsw
loope
add
and
push
repnz
fidivr
jne
add
and
repnz
mov
js
cmps
xor
retf
xor
scas
mov
js
cli
out
jnp
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
cmp
lea
push
pop
push
bnd
fistp
or
out
jne
sbb
inc
pop
fld
dec
int
jns
stos
enter
cs
jne
sbb
inc
inc
fldz
dec
rcl
fiadd
cmps
xlat
push
je
cld
cmp
in
es
mov
sbb
xor
cmp
mov
fild
inc
out
pop
mov
enter
movs
cmp
pop
push
push
push
fild
movups
and
xor
mov
lods
out
jb
push
jo
(bad)
ds
jnp
cs
mov
adc
imul
mov
loope
dec
int3
test
cmps
test
push
sub
mov
(bad)
dec
hlt
pop
xor
and
call
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
int3
test
cmps
repz
jl
sar
xor
mov
or
int
inc
pop
fld
dec
rcl
in
xchg
div
sbb
inc
inc
shr
inc
repnz
xchg
loopne
out
jb
cmp
jnp
das
jge
mov
pop
adc
xor
jl
icebp
xor
call
lea
and
xor
fdivr
test
daa
xchg
sti
push
fisub
fbstp
pop
adc
pop
and
dec
mov
and
movhps
and
xor
pop
xchg
cld
push
adc
xor
adc
imul
xchg
pop
mov
jne
push
xor
inc
xor
and
jo
push
fistp
xor
add
sti
push
fisub
and
cmp
movs
xchg
adc
sub
push
push
fistp
cmp
movs
xchg
adc
adc
mov
sub
mov
push
adc
xor
jns
repnz
push
lea
xor
dec
call
xor
pushf
retf
jecxz
sub
and
add
push
fistp
mov
mov
sub
popf
dec
lahf
sti
sbb
mov
in
xchg
pop
sub
jge
loope
dec
int3
test
mov
xor
test
xor
and
or
lods
push
mov
sub
retf
xor
pop
xchg
or
sub
sub
in
dec
jle
mov
adc
loope
and
xor
lds
adc
xor
pop
push
sbb
xchg
pop
mov
push
adc
imul
push
fild
pop
mov
movups
les
pop
push
jg
push
(bad)
xchg
pop
mov
movups
arpl
pop
push
sub
push
(bad)
xchg
pop
mov
push
adc
les
pop
push
int3
xor
and
lea
and
and
scas
scas
les
out
pushf
sub
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
getsec
lea
and
repnz
mov
movaps
xor
inc
pop
loope
outs
cmc
inc
imul
cs
stos
sbb
inc
dec
(bad)
dec
aam
jb
mov
fiadd
inc
js
or
int
inc
inc
test
ror
(bad)
sbb
inc
jnp
sub
mov
sbb
mov
out
xchg
pop
and
sbb
xor
mov
movups
and
xor
mov
sbb
mov
out
xchg
pop
sub
aas
jge
mov
and
xchg
(bad)
mov
loope
dec
int3
xchg
cmps
test
push
das
or
lds
sbb
fwait
sbb
jns
sub
pushw
test
mov
movups
and
xor
mov
movups
fbld
and
sub
and
nop
cs
jne
sbb
inc
pop
loope
dec
int3
xchg
cmps
test
(bad)
fnstsw
push
jnp
sub
mov
sub
jb
or
dec
scas
or
mov
sti
and
xchg
div
shl
jl
sbb
pusha
ret
pop
mov
das
test
xor
pop
js
xor
mov
push
mov
aas
adc
add
pop
push
or
push
fistp
pop
mov
or
lea
and
xor
or
or
push
cwde
and
xor
outs
xchg
pop
mov
or
push
outs
and
xor
enter
jmp
adc
sbb
pop
push
aam
push
fild
pop
mov
or
push
stc
and
xor
jg
pop
mov
or
push
mov
pop
push
in
xor
sbb
pop
mov
push
adc
aas
and
xor
jecxz
pop
mov
or
push
pop
and
xor
es
pop
mov
or
push
mov
pop
push
repnz
xor
adc
jb
pop
push
xor
test
adc
xor
pop
push
shl
fucomip
xchg
pop
mov
push
add
or
jns
mov
movups
and
pop
push
out
push
fbld
adc
adc
pop
push
aam
push
fist
movups
add
pop
push
enter
adc
inc
adc
js
pop
push
mov
xchg
pop
mov
movups
outs
and
xor
fst
lea
push
inc
and
and
cmp
dec
cld
pop
cmp
cmovno
cmp
in
cmp
movs
mov
push
stos
cs
jne
sbb
inc
dec
ftst
dec
repz
inc
inc
lahf
enter
fidiv
sbb
inc
inc
f2xm1
dec
not
mov
xchg
cmps
jge
xchg
jns
inc
sub
hlt
adc
add
xchg
ds
jnp
sub
hlt
and
jne
cld
sub
sbb
push
inc
sub
jg
out
jns
lahf
xchg
jmp
test
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
pusha
repnz
mov
movups
iret
fisub
rcl
cld
xchg
cmp
dec
les
mov
pushf
mov
enter
mov
dec
ret
sbb
cdq
and
sbb
or
fld
xchg
gs
mov
cs
jne
sbb
inc
jnp
sub
cmps
mov
push
xchg
les
sbb
dec
jnp
sub
mov
sbb
nop
push
xor
and
inc
jae
or
inc
imul
add
and
repnz
mov
wbinvd
lea
and
repnz
mov
xor
fwait
clc
out
xchg
mov
fld
dec
retf
xchg
jp
mov
in
cmps
loop
pop
(bad)
sar
push
jnp
sub
hlt
mov
int3
adc
sahf
sub
inc
fld
dec
rcl
out
lahf
cs
jbe
sar
ja
in
sub
mov
push
add
sub
(bad)
(bad)
jne
cld
add
lea
(bad)
dec
(bad)
xchg
dec
inc
mov
lds
xor
pop
jo
xor
xchg
mov
mov
das
enter
dec
sub
and
xor
pushf
retf
mov
aad
cmp
add
ins
mov
add
xor
mov
push
adc
and
or
int3
test
xchg
lock
ret
stc
out
xchg
mov
add
loope
dec
cld
scas
scas
data16
lock
xchg
push
push
ja
adc
dec
inc
(bad)
dec
sbb
add
cmp
dec
inc
leave
or
inc
imul
adc
sub
dec
mov
sbb
or
gs
mov
sub
dec
mov
sbb
aam
jns
mov
sub
inc
shr
int3
xchg
mov
fdiv
(bad)
jbe
out
jge
shl
jl
sbb
pusha
ret
pop
mov
das
pop
pop
and
xor
mov
dec
movs
cld
sub
xchg
pop
int
dec
jg
adc
test
scas
sbb
mov
mov
dec
mov
or
test
and
and
icebp
mov
or
push
cmp
jne
sub
xor
mov
jle
or
daa
xchg
sub
add
push
repnz
mov
push
adc
xor
jl
icebp
xor
jns
pop
mov
femms
xchg
sub
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
popa
pop
mov
adc
push
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
adc
mov
add
mov
enter
mov
add
and
xor
mov
movups
xor
pop
js
xor
mov
movups
xor
pop
ins
repnz
mov
movups
add
and
xor
mov
movups
add
and
and
jp
mov
js
push
inc
push
sub
ds
mov
and
xchg
and
mov
adc
xchg
sbb
lods
retf
and
xchg
or
mov
dec
out
sbb
hlt
and
xchg
sub
or
dec
aam
clc
shl
push
test
mov
stos
sbb
pop
int3
mov
out
jb
add
cmp
pop
push
sti
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
push
and
xor
mov
cs
jb
push
inc
pop
ds
add
jge
mov
sbb
imul
inc
inc
sub
sub
jne
cld
sbb
pop
sbb
dec
pusha
jmp
push
push
imul
(bad)
fistp
dec
jnp
sub
hlt
pop
mov
add
add
fmul
jnp
jmp
dec
jnp
sub
hlt
ins
xor
sbb
xchg
push
xor
inc
inc
into
or
and
dec
stos
cmps
or
lea
sub
push
fistp
adc
xor
pop
push
repnz
inc
jecxz
adc
cmps
lock
pop
ds
pop
sub
hlt
push
mov
push
adc
outs
sbb
inc
jp
xor
push
loop
mov
jg
pop
inc
dec
sub
mov
stc
sbb
mov
fadd
jns
sub
and
mov
dec
stc
and
call
ja
out
sbb
cdq
adc
lods
pop
adc
adc
pop
push
repnz
xchg
or
daa
fwait
sub
add
pop
mov
push
adc
push
sbb
hlt
dec
mov
rcl
add
int
ja
in
jb
mov
outs
stos
lock
inc
stc
out
xchg
mov
loope
dec
int3
cwde
mov
rcl
add
int
ja
cmc
adc
data16
adc
add
cmp
push
adc
adc
mov
les
jle
mov
movups
xor
repz
repnz
mov
ss
sub
push
adc
push
repnz
mov
add
and
xor
xchg
les
in
xor
xor
pop
push
(bad)
push
fistp
sbb
pushf
cmp
xor
dec
push
repnz
mov
push
pop
and
push
repnz
xchg
lahf
mov
psrad
and
push
repnz
fnstsw
mov
xor
iret
push
repnz
mov
subps
xor
out
push
repnz
fnstsw
lods
mov
and
push
repnz
mov
jle
movs
xor
push
push
repnz
mov
movups
xor
mov
fdivr
mov
xor
cmps
push
repnz
mov
paddusw
xor
loope
repnz
mov
(bad)
jns
xor
cdq
push
repnz
fnstsw
adc
xor
pop
push
repnz
fdivr
xchg
pop
and
push
repnz
mov
paddw
and
repnz
scas
movs
inc
lods
lock
imul
fs
repnz
mov
nop
xor
dec
push
repnz
mov
rdpmc
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
xorps
xor
adc
xor
fistp
dec
lea
and
push
repnz
mov
(bad)
lea
and
push
repnz
fistp
pop
sahf
cmp
aas
pop
int
inc
jnp
sub
hlt
dec
mov
or
push
sub
in
and
mov
and
pop
sbb
inc
ja
or
mov
xchg
movs
enter
(bad)
or
sub
es
stos
mov
mov
xchg
sbb
dec
hlt
push
mov
jge
daa
cmps
lahf
push
dec
(bad)
movs
ds
jnp
sub
hlt
xor
and
dec
fisub
cli
movs
xchg
std
sbb
mov
in
xchg
pop
and
inc
repnz
mov
movups
and
xor
mov
movups
xor
pop
jge
xor
mov
movups
xor
pop
adc
xor
mov
movups
inc
fsub
sub
add
pusha
sbb
ja
in
sub
mov
dec
cmp
inc
jno
push
ja
in
sbb
mov
and
xchg
sub
or
dec
loope
in
ror
and
adc
cmp
movs
mov
push
nop
div
sbb
inc
inc
fldlg2
dec
rcl
push
xchg
cs
sbb
dec
jnp
sub
hlt
je
push
cdq
daa
pop
cmp
inc
sbb
or
dec
sti
sbb
shr
or
nop
(bad)
stc
popf
pop
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
mov
cli
out
jne
sbb
inc
push
ret
xchg
jns
cdq
or
cmps
jecxz
gs
sar
addr16
sub
hlt
mov
xor
push
je
nop
(bad)
xchg
gs
mov
cs
je
aam
dec
jnp
sub
hlt
bound
or
ja
sub
jmp
shl
fdiv
out
jb
push
inc
dec
or
shl
into
xchg
or
mov
sbb
inc
jnp
sub
hlt
ins
mov
cmp
cdq
or
mov
hlt
dec
mov
rcl
setle
sub
jnp
sub
movs
xchg
std
sbb
mov
jmp
loope
dec
shr
adc
sahf
cmp
mov
jnp
xor
out
push
dec
push
lea
outs
arpl
xor
mov
pop
mov
(bad)
adc
and
inc
dec
loope
outs
jnp
imul
xor
je
nop
stos
or
mov
(bad)
push
add
mov
jbe
push
dec
push
lea
outs
arpl
xor
dec
xchg
pop
mov
(bad)
adc
and
or
int3
test
mov
cmp
and
fiadd
jmp
pop
int3
cdq
lea
cld
adc
mov
daa
xchg
pop
int
and
xor
mov
pop
mov
xlat
adc
xor
je
repz
mov
sbb
xchg
sbb
push
pushf
cmp
mov
xor
jne
adc
add
repnz
mov
push
adc
xor
sub
xchg
std
sbb
mov
jmp
pop
and
inc
dec
cld
and
scas
movs
inc
lods
lock
dec
(bad)
out
xchg
mov
hlt
dec
pop
fistp
adc
sbb
pop
push
hlt
cmp
push
dec
push
lea
sbb
dec
outs
mov
push
fistp
adc
movs
xor
repnz
fistp
adc
movs
xor
push
repnz
out
mov
cmc
adc
xor
push
repnz
mov
jns
lea
push
pop
push
repnz
pop
mov
sub
lea
sbb
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
repnz
fistp
adc
add
inc
pop
push
repnz
fistp
adc
movs
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
pop
mov
and
lea
pop
pop
push
bnd
fistp
adc
xor
push
repnz
mov
cmp
lea
cmp
repnz
pop
mov
and
outs
movs
xor
push
repnz
mov
add
mov
ds
inc
int3
or
and
dec
and
push
xor
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
or
test
or
popa
inc
or
push
test
cld
jne
sbb
inc
inc
(bad)
dec
cmc
xchg
jne
jecxz
ror
(bad)
in
dec
jnp
sub
hlt
jb
jne
cld
push
cmp
add
sub
push
jge
mov
adc
sbb
inc
or
or
mov
sbb
adc
es
aas
sub
sbb
rol
popf
xchg
dec
cmp
mov
into
or
and
inc
test
jns
jb
push
inc
pushf
pop
fisub
mov
imul
cli
out
jne
or
scas
or
imul
cli
out
xchg
mov
or
stos
mov
stos
sbb
jns
sub
sbb
div
movups
aas
and
xor
test
movups
sub
xor
fwait
xchg
pop
mov
movups
add
pop
push
les
push
fild
movups
je
pop
push
mov
xchg
pop
mov
movups
or
mov
hlt
dec
mov
adc
cmp
call
or
ror
retf
leave
jne
sbb
inc
adc
jecxz
not
(bad)
push
iret
cs
scas
sbb
inc
inc
(bad)
inc
cdq
push
adc
cmps
mov
dec
(bad)
lahf
ds
inc
shr
sub
cs
mov
int3
inc
jnp
cs
mov
out
push
lods
cs
jne
sbb
inc
inc
(bad)
dec
(bad)
xchg
inc
inc
xchg
enter
fdiv
hlt
aas
ja
out
sbb
lods
stc
and
xchg
or
fidivr
rcr
cli
enter
mov
push
and
and
fs
push
int3
test
mov
prefetcht0
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
mov
add
pop
xchg
int3
test
lods
shl
xchg
dec
cmp
dec
out
mov
test
int3
xchg
push
cmp
dec
mov
mov
and
lods
fisub
mov
sbb
inc
inc
sub
mov
enter
mov
cs
loop
inc
jnp
sub
int3
call
sahf
cmp
push
pop
int
inc
pop
(bad)
dec
aam
jge
mov
out
inc
jnp
sub
in
and
mov
add
inc
sbb
inc
outs
sub
and
mov
daa
xor
xor
pop
jo
xor
xchg
push
pop
mov
das
nop
fbld
jl
movs
and
xor
xchg
mov
rdtsc
add
push
bound
pop
push
in
xchg
fistp
adc
adc
pop
push
repnz
fdivr
pop
sahf
or
sub
or
cmps
inc
mov
(bad)
out
xchg
mov
loope
dec
shr
lock
nop
push
or
and
inc
ja
add
scas
stos
adc
lock
fwait
push
pop
jne
and
inc
inc
loope
outs
dec
inc
imul
or
push
pushf
mov
mov
shl
and
inc
(bad)
shl
xchg
sbb
xchg
and
pop
mov
test
test
ret
loope
adc
sbb
pop
push
hlt
sub
in
mov
dec
mov
xor
jb
push
inc
pop
ds
inc
shr
sub
cs
mov
ds
shr
sub
jmp
jns
sub
adc
in
mov
push
jmp
cli
or
cmp
push
jo
fmul
jecxz
xor
ret
push
fcmovbe
push
fistp
cmp
push
ja
fisub
aad
mov
xchg
lock
push
sbb
fisub
int3
mov
dec
test
adc
mov
mov
push
inc
aam
jno
mov
lea
jnp
and
shl
sar
xchg
scas
stos
cmp
lock
xchg
sbb
lahf
mov
std
and
(bad)
ins
mov
jl
add
sub
cmp
loope
icebp
cmps
dec
sbb
sbb
call
sub
in
adc
in
mov
inc
call
dec
in
cmp
dec
in
sub
test
adc
push
and
or
dec
pop
stos
lock
mov
push
push
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
pop
adc
xor
pop
push
repnz
inc
pop
mov
jge
lea
dec
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
mov
ins
adc
xor
pop
push
repnz
int3
(bad)
mov
fstp
jb
add
cmp
pop
push
sti
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fnsave
push
fisttp
movups
sub
sbb
cdq
push
adc
cmps
hlt
push
inc
dec
sub
and
mov
adc
push
sbb
inc
jle
or
shl
ficom
sbb
dec
inc
aad
pop
int3
(bad)
mov
fucomi
out
jb
add
xor
pop
push
sti
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
mov
jb
push
fs
ds
jnp
das
jge
mov
add
inc
inc
sub
and
es
dec
cld
add
jg
sbb
ja
in
cmp
mov
add
push
adc
jno
and
fs
or
test
mov
prefetcht0
xor
dec
push
repnz
mov
femms
lahf
push
cs
test
sbb
cmps
enter
cs
je
aad
push
inc
shr
loopne
mov
cmp
cmp
jnp
and
cmp
sbb
mov
out
xchg
pop
sub
and
mov
mov
fwait
cs
shl
ja
in
mov
mov
dec
mov
rdtsc
xchg
push
adc
mov
xor
jae
xchg
pop
mov
bswap
pop
and
push
repnz
fistp
adc
xor
push
push
repnz
mov
bndstx
xor
ss
repnz
fnstsw
das
lea
and
xor
sar
sbb
and
repnz
mov
jno
mov
repnz
xchg
pop
mov
bsr
and
dec
repnz
mov
push
adc
xor
loopne
repnz
idiv
sbb
ss
push
repnz
mov
push
sbb
daa
adc
pop
and
xor
aam
pop
mov
movups
daa
and
xor
out
pop
mov
push
adc
shl
pop
push
ins
xor
sub
adc
stos
and
xor
dec
xchg
pop
mov
push
adc
and
push
xor
pop
mov
push
adc
mov
xor
dec
xchg
pop
mov
push
adc
in
pop
push
lock
cmp
adc
sub
push
push
lods
xchg
sbb
add
and
xor
mov
movups
xor
pop
jae
xor
mov
movups
xor
pop
repnz
mov
movups
add
and
cmp
inc
imul
cs
scas
sbb
inc
dec
(bad)
dec
iret
xchg
jb
xchg
enter
cs
jge
jmp
sub
hlt
outs
mov
sub
add
(bad)
cmc
ss
in
cmp
mov
adc
xor
cmp
pop
dec
call
push
dec
repnz
adc
xor
pop
pop
repnz
mov
movups
xor
pop
jo
xor
lods
xchg
jbe
out
jb
push
inc
push
sub
das
jge
mov
and
xchg
and
mov
cmc
sub
int3
mov
xor
pop
cmps
test
ja
in
mov
cdq
add
sbb
mov
call
push
dec
jmp
movs
xor
push
push
repnz
mov
sysret
lea
sbb
or
xor
add
bound
add
dec
sub
mov
cld
and
cmps
xchg
jmp
push
sub
sbb
pop
sbb
mov
xor
or
mov
int3
mov
aaa
into
jo
out
jge
xlat
ss
in
mov
xchg
dec
dec
cdq
cmp
lea
push
je
repz
scas
xchg
jle
or
daa
xchg
sub
add
pop
mov
push
adc
cmp
(bad)
lods
or
mov
aaa
sahf
jo
out
jo
aaa
ds
inc
cmc
sub
int3
mov
and
lock
mov
xor
jl
icebp
xor
and
das
or
fbld
je
movs
and
adc
mov
movups
in
and
loope
inc
aad
mov
jecxz
adc
xor
push
repnz
mov
in
lea
sbb
push
fistp
adc
xor
push
repnz
jecxz
adc
xor
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
sbb
xchg
pop
int
push
adc
mov
pop
mov
movups
and
xor
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
int
push
fbld
and
jb
or
push
sub
sub
mov
add
imul
inc
inc
or
shl
ret
cmp
dec
stc
sbb
lods
mul
call
dec
inc
clc
or
mov
or
lea
sub
push
fistp
adc
xor
dec
inc
clc
or
and
inc
cdq
adc
cmp
dec
out
sbb
test
push
sbb
int3
fisub
hlt
push
lea
clc
and
call
dec
push
in
pop
shr
out
jb
adc
pop
pop
repnz
mov
movups
xor
pop
inc
loope
outs
mov
mov
xchg
cs
(bad)
fnstsw
dec
jnp
sub
hlt
pop
mov
cld
sbb
xchg
pop
int
push
jnp
cs
mov
and
xchg
or
mov
sub
int3
mov
inc
dec
sbb
or
sub
mov
(bad)
dec
hlt
pop
xchg
je
jecxz
push
xchg
add
and
xor
fnstsw
aas
lea
and
div
and
mov
push
sub
push
aaa
fs
repnz
mov
xadd
xor
jle
repnz
fnstsw
mov
movs
xor
inc
push
repnz
mov
movd
and
push
repnz
mov
movups
xor
jo
repnz
mov
(bad)
add
and
repnz
mov
pmulhw
and
push
repnz
fidivr
jnp
add
and
push
repnz
fidivr
stc
mov
and
push
repnz
fnstsw
xchg
mov
and
push
repnz
xchg
std
sbb
mov
out
xchg
pop
sub
sbb
pop
div
movups
cmp
pop
push
cld
xor
scas
xchg
pop
mov
movups
sub
pop
push
shl
push
fistp
movups
add
pop
push
(bad)
xor
test
lea
movs
jbe
pop
push
mov
push
fcomip
xchg
pop
mov
movups
and
and
jnp
mov
fwait
cs
mov
(bad)
dec
rcl
in
push
xchg
cs
ja
out
ds
sub
cdq
xor
sbb
cli
ds
jnp
sub
hlt
jl
jne
clc
and
xchg
and
fdivr
loope
clc
rcr
mov
or
push
adc
push
inc
mul
dec
sbb
add
fbld
fistp
sbb
add
and
repnz
mov
rdtsc
lea
and
xor
mov
femms
stos
push
adc
mov
in
sbb
lods
shl
and
or
rcl
push
xchg
(bad)
jne
sbb
inc
jp
std
dec
shr
aaa
hlt
jo
out
ja
sar
mov
mov
and
xchg
cs
in
ds
jnp
sub
hlt
imul
cmps
retf
movs
xor
jp
jmp
int3
mov
movs
in
jb
or
mov
loope
outs
inc
inc
imul
add
sub
push
repnz
mov
push
adc
xor
jns
test
inc
test
cs
lea
int3
inc
dec
(bad)
dec
(bad)
xchg
jno
mov
push
adc
or
aam
dec
cdq
or
add
sub
mov
shl
push
sahf
add
inc
pop
int
inc
jnp
sub
mov
add
mov
repnz
mov
sbb
mov
in
xchg
pop
and
inc
pop
in
cmp
pop
mov
out
jb
das
imul
xchg
pop
mov
adc
bound
push
movs
xor
push
dec
clc
ds
imul
lock
xchg
or
outs
mov
and
xchg
push
int3
test
lods
in
sbb
call
mov
fistp
cmp
sub
pop
loope
inc
int3
mov
lock
cmps
add
and
push
repnz
mov
movups
and
push
repnz
mov
pshufw
xchg
push
repnz
fnstsw
inc
mov
and
fidivr
les
and
repnz
mov
minps
xor
pop
push
repnz
mov
jns
cmps
xor
sbb
xor
mov
bswap
lea
and
fidivr
xchg
and
push
repnz
mov
sysret
pop
and
repnz
fidivr
rcr
or
retf
and
inc
mov
cli
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
push
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
out
jb
push
jbe
(bad)
ds
jnp
sub
mov
pop
cmp
cmp
or
sti
xchg
dec
inc
xchg
enter
shl
in
inc
jnp
sub
mov
das
cmp
sbb
inc
push
sub
sub
movs
mov
mov
mov
in
cmp
mov
sahf
add
fs
sbb
scas
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
aam
push
fist
push
add
int
ja
out
sbb
lods
jmp
mov
(bad)
dec
not
xlat
push
scas
lds
ss
inc
test
inc
cdq
adc
bound
add
ja
jmp
mov
mov
mov
cmps
fisttp
ja
and
push
fistp
sbb
jns
or
mov
shr
adc
mov
xchg
pop
cmp
repnz
mov
str
xor
inc
push
repnz
mov
or
sbb
pop
or
shl
clc
xchg
sbb
(bad)
mov
loope
push
shl
out
jb
cmp
dec
(bad)
dec
hlt
push
mov
pop
adc
cmps
in
arpl
in
cmp
mov
bound
cmp
jnp
and
cmp
popf
jne
xor
adc
sub
inc
loope
dec
shr
lock
(bad)
push
xor
xor
jl
repz
and
add
int
inc
pop
in
and
mov
std
in
jb
xor
repnz
push
xchg
pop
mov
das
fisttp
xor
pop
js
xor
mov
dec
mov
add
mov
aaa
push
dec
jmp
int3
mov
aaa
movs
jno
out
ins
mov
and
cmc
xor
mov
push
sub
cmp
repnz
mov
psubw
xor
js
repnz
mov
rdtsc
mov
and
repnz
mov
addps
xor
pop
push
repnz
fstp
cmp
cmps
xor
mov
repnz
mov
rsqrtps
xor
xchg
push
repnz
mov
mov
add
and
repnz
mov
vmread
and
fnstsw
xchg
xor
and
add
mov
movlps
xor
mov
fstp
mov
add
and
xor
fstp
pop
pop
and
repnz
mov
(bad)
mov
and
repnz
mov
seta
xor
or
xor
mov
pmaddwd
xor
outs
push
repnz
mov
xadd
sub
retf
and
jle
jmp
lods
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
xor
out
jne
sbb
inc
inc
fld
dec
clc
xchg
jns
cdq
or
and
(bad)
sar
bound
sub
hlt
mov
xor
push
dec
(bad)
cld
ds
jnp
sub
hlt
jp
push
cdq
and
sbb
mov
cmp
in
push
jge
mov
daa
cmp
sbb
sub
and
inc
mov
and
sbb
sub
ja
in
jae
push
mov
sub
push
sbb
pop
pop
int
inc
push
inc
test
mov
push
int3
int
mov
and
inc
nop
fist
jb
sar
daa
jp
loope
dec
out
scas
popf
retw
out
xchg
add
add
push
push
lods
xchg
sbb
add
and
xor
mov
movups
xor
pop
jne
xor
mov
movups
xor
pop
repnz
mov
movups
add
xor
loope
test
inc
cld
adc
jl
es
dec
sub
or
mov
add
inc
jge
xor
in
test
xchg
pop
inc
or
or
idiv
dec
jnp
sub
hlt
add
add
ds
jnp
sub
hlt
push
mov
or
cmp
or
or
dec
call
fisttp
cmps
aam
jns
(bad)
ds
jnp
sub
hlt
jns
push
cdq
and
add
mov
dec
push
repnz
inc
cmps
lock
push
mov
into
fisub
retf
inc
xor
sub
stc
out
xchg
mov
fs
push
repnz
mov
str
xor
inc
push
repnz
mov
sysexit
lea
and
repnz
scas
popf
data16
out
xchg
inc
cmp
dec
mov
mov
mov
cs
sbb
inc
je
jmp
inc
cmc
enter
or
sbb
(bad)
xchg
gs
mov
cs
jne
sbb
inc
dec
(bad)
dec
hlt
bound
sbb
loopne
dec
jnp
sub
dec
mov
cmp
aas
ja
out
sbb
test
jmp
sub
ds
jnp
sub
movs
mov
ficomp
adc
adc
dec
push
out
and
test
sbb
mov
jmp
repnz
fidivr
pop
inc
adc
cmp
and
sub
add
ins
fisub
ror
out
jb
add
daa
xor
and
jmp
dec
ret
jecxz
push
xor
inc
xor
and
in
inc
fisubr
or
sahf
or
dec
pop
int
inc
pop
loope
dec
out
scas
popf
data16
sbb
out
xchg
push
push
jne
and
inc
popa
loope
outs
xlat
inc
imul
and
add
repnz
mov
or
lea
or
repnz
pop
xchg
aaa
movups
xor
jle
mov
je
mov
movups
sbb
push
hlt
ds
in
popf
pushw
sbb
out
xchg
adc
bound
push
leave
test
lods
neg
xchg
xor
arpl
and
scas
xchg
rcr
mov
jmp
pop
xor
out
pop
ror
out
jb
adc
inc
pop
loope
dec
int3
mov
adc
sahf
or
aaa
pop
int
dec
push
jecxz
addr16
mov
inc
jmp
cli
push
jbe
(bad)
ds
inc
cli
sub
int3
mov
arpl
lock
xchg
cs
mov
ds
inc
cli
sub
int3
mov
ja
sbb
push
sub
jbe
xor
dec
push
in
es
xlat
mov
sbb
inc
dec
cmp
dec
pusha
div
jmp
push
sub
add
fs
repnz
xchg
nop
mov
cmove
and
repnz
mov
bsf
and
repnz
mov
rcpps
and
push
repnz
mov
prefetchw
and
repnz
mov
btc
and
repnz
mov
bswap
mov
and
push
repnz
fidivr
mov
and
mov
xadd
sub
gs
mov
cli
out
arpl
and
pop
push
sti
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
push
and
xor
mov
lea
adc
or
xor
cli
xchg
pop
mov
movups
or
mov
sub
sub
arpl
sbb
sub
adc
mov
push
cmp
sbb
ja
in
sub
adc
sub
test
pop
(bad)
inc
mov
add
sub
dec
loope
outs
jg
imul
push
adc
mov
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
dec
inc
test
and
inc
stos
enter
test
ja
call
mov
push
sub
je
sub
or
jne
std
and
xchg
(bad)
mov
adc
pop
hlt
pop
mov
cmp
add
xor
inc
pop
jmp
mov
or
addr16
icebp
int
and
prefetcht0
xor
dec
push
repnz
mov
femms
lods
push
adc
mov
shr
nop
cs
jne
sbb
inc
inc
jmp
int3
mov
lock
sub
mov
jecxz
mov
scas
out
adc
sahf
add
iret
pop
int
inc
pop
in
das
inc
fild
cmp
cmp
jnp
sub
ins
xchg
in
push
xchg
push
jbe
sbb
aam
cwde
inc
mov
cmp
add
das
mov
movups
xor
pop
jo
xor
xchg
mov
mov
and
test
push
repnz
mov
dec
aaa
lea
and
fistp
sub
movs
xor
nop
push
repnz
fidivr
ror
xor
pop
push
repnz
fidivr
xor
add
and
push
repnz
mov
ucomiss
and
repnz
mov
bswap
mov
and
repnz
fidivr
out
add
and
fidivr
jmp
movs
xor
cmp
xor
mov
sbb
jns
or
scas
or
lods
pop
dec
sbb
sbb
pop
adc
cmp
pop
push
stc
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fnsave
push
fisttp
movups
or
pop
push
mov
push
(bad)
xchg
pop
mov
sbb
mov
out
xchg
pop
sub
stos
dec
xlat
sbb
enter
in
or
sub
and
stos
mov
(bad)
xchg
sbb
mov
dec
loop
pushf
ret
xchg
push
inc
xchg
enter
cs
jge
mov
push
jnp
jecxz
fistp
push
adc
push
add
fisub
int3
mov
lock
or
and
xor
lods
xchg
pop
mov
movups
das
and
xor
cdq
xchg
pop
mov
adc
mov
ds
jnp
sub
hlt
dec
mov
push
adc
cmps
in
push
jg
xlat
ds
jnp
sub
hlt
popa
mov
inc
push
adc
push
cwde
int3
fisub
hlt
dec
mov
cmc
and
xchg
div
sbb
inc
pop
fldlg2
dec
hlt
pusha
inc
dec
mov
or
xchg
adc
fbld
shl
aaa
adc
cli
out
jbe
sub
leave
stos
and
push
mov
cmp
sbb
xor
mov
movups
xor
pop
dec
repnz
movs
xchg
sub
out
jb
xor
das
or
shl
not
ss
lods
or
dec
cdq
or
cmp
sbb
sub
mov
shl
sub
push
or
hlt
pop
mov
xor
lea
aaa
jae
sub
and
xlat
imul
mov
sbb
lods
or
div
jecxz
pop
(bad)
push
xor
f2xm1
xor
test
add
xor
push
push
repnz
mov
dec
push
lea
and
repnz
fstp
adc
xor
das
push
repnz
mov
paddusb
xor
push
push
repnz
mov
nop
xor
(bad)
push
repnz
mov
paddq
xor
adc
xor
mov
(bad)
pop
and
repnz
fnstsw
adc
xor
add
xor
mov
getsec
mov
and
fdivr
adc
xor
mov
xor
mov
setno
xor
ja
repnz
mov
paddb
and
repnz
mov
mov
add
and
fidivr
sbb
xor
scas
push
repnz
mov
(bad)
mov
and
repnz
mov
movhps
or
mov
int3
mov
(bad)
dec
sbb
add
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
jecxz
adc
xor
push
repnz
push
fistp
adc
xor
repnz
fistp
adc
cmp
gs
or
popa
inc
xchg
enter
cs
jne
sbb
inc
pop
(bad)
dec
retf
inc
lock
cs
hlt
dec
jnp
sub
hlt
jb
jno
sub
or
(bad)
lock
jnp
sub
cmps
mov
movs
xchg
push
cmp
mov
ficomp
inc
mov
mov
xor
idiv
lds
ret
mov
popf
xchg
xor
loop
sbb
and
popa
mov
push
aam
fisub
and
mov
sbb
ins
mov
gs
test
mov
cmp
xchg
pop
int
pop
adc
mov
pop
mov
movups
daa
and
xor
mov
movups
sbb
pop
push
fidiv
push
fisttp
adc
or
pop
push
int
push
(bad)
xchg
pop
mov
add
int
pusha
jnp
sub
hlt
dec
mov
push
adc
cmps
in
push
push
(bad)
xlat
cmp
mov
and
mov
dec
cmp
cmp
and
sbb
lods
int
rcl
add
out
loop
push
ror
out
jb
cmp
dec
(bad)
dec
(bad)
xchg
jae
mov
cs
jge
out
ds
sub
hlt
push
adc
cmps
leave
push
jnp
cli
ds
jnp
sub
hlt
jl
dec
cdq
pop
adc
cmps
mov
daa
jp
std
and
scas
xchg
inc
xor
sub
stc
out
xchg
mov
daa
inc
inc
cmc
sub
int3
mov
ror
lock
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
cmp
add
out
popa
inc
mov
cs
jne
sbb
inc
jns
(bad)
dec
iret
xchg
jne
xchg
enter
cs
hlt
inc
dec
loope
dec
in
scas
pushf
call
or
fwait
mov
in
mov
cdq
add
sbb
jmp
sub
hlt
outs
mov
in
add
or
cmps
scas
or
mov
stc
xchg
cs
je
sar
push
jnp
and
xchg
add
xor
clc
and
sahf
xchg
and
out
jb
add
add
push
push
iret
xchg
pop
mov
add
pop
mov
sbb
stos
or
xchg
push
mov
nop
sbb
pop
push
hlt
xor
pushf
jecxz
mov
das
mov
and
imul
inc
xlat
test
movs
dec
sbb
add
mov
sbb
aam
xchg
inc
mov
or
fiadd
sub
int3
mov
cmp
xchg
pop
int
pop
inc
jecxz
inc
inc
pushf
jl
mov
das
test
pop
jo
xor
pushf
daa
pop
mov
daa
cmps
mov
daa
inc
inc
cmc
sub
int3
mov
dec
dec
sbb
or
xor
dec
push
in
add
test
dec
sbb
adc
and
aam
fistp
adc
adc
pop
push
repnz
fidivr
add
xor
pop
jo
xor
xchg
add
in
xor
xchg
and
movs
push
fistp
movups
xor
push
push
repnz
(bad)
dec
sbb
push
xchg
push
push
jne
and
fmul
int3
test
mov
or
fiadd
imul
int3
mov
cmp
nop
pop
int
push
jo
xor
pushf
fstp
daa
(bad)
lea
and
sti
adc
fnstsw
adc
pop
daa
pop
push
clc
sub
int3
mov
imul
push
nop
push
push
jne
and
fs
int3
test
mov
or
ficom
xor
pushf
xchg
pop
mov
daa
bound
aaa
ds
inc
hlt
sub
dec
mov
cli
sbb
xor
pop
jo
xor
xchg
out
mov
or
add
and
hlt
xor
mov
push
sub
fs
push
repnz
mov
movzx
xor
sbb
xor
mov
nop
xor
mov
repnz
mov
psrld
xor
rcl
xor
fdivr
or
add
and
fnstcw
and
mov
repnz
fdivr
ret
adc
mov
repnz
fdivr
xchg
mov
and
push
repnz
mov
pcmpeqb
xor
movs
push
repnz
fdivr
out
mov
and
fdivr
xchg
xor
push
push
repnz
mov
cvtpi2ps
xor
fwait
push
repnz
mov
add
and
fnstcw
pop
mov
and
fdivr
call
mov
repnz
mov
clts
mov
and
push
repnz
mov
movntq
xor
mov
repnz
fdivr
cld
test
and
repnz
fdivr
add
xor
mov
fnstcw
movs
mov
and
fnstsw
mov
cmps
xor
sbb
xor
mov
invd
mov
and
repnz
mov
btr
xor
adc
dec
fidivr
loopne
add
and
repnz
fidivr
stos
mov
and
xor
jecxz
nop
mov
and
out
and
inc
imul
pop
int
push
adc
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fidiv
push
fisttp
adc
or
pop
push
int
push
(bad)
xchg
pop
mov
movups
jl
pop
push
mov
xchg
pop
mov
movups
push
and
xor
aad
pop
mov
movups
inc
and
xor
rcl
mov
push
mov
xor
and
lea
and
xor
jle
pop
mov
movups
in
pop
push
das
xor
pop
xchg
pop
mov
movups
retf
and
xor
mov
push
adc
sub
pop
push
shl
push
fist
push
adc
or
pop
push
mov
push
fild
repz
jb
xor
sub
and
xor
adc
push
sub
push
jge
mov
jl
pop
adc
movs
mov
int3
sbb
lods
xchg
and
xchg
dec
cmp
mov
fld
inc
or
push
movs
cs
(bad)
xchg
ds
hlt
and
xor
mov
sub
hlt
xor
push
adc
mov
out
xchg
pop
sub
int3
test
dec
sbb
or
sub
int3
test
dec
sbb
push
cdq
cmp
ds
push
mov
lock
xchg
sbb
push
pop
int
dec
push
mov
lock
xchg
imul
inc
ss
and
sub
sbb
mov
fisub
and
inc
loopne
pop
out
jb
push
jo
xor
mov
and
inc
out
sti
out
jb
push
inc
pushf
(bad)
mov
cmp
mov
jae
out
jne
or
mov
out
push
dec
cld
sbb
inc
sti
out
xchg
mov
or
sub
mov
out
xchg
pop
loop
pop
push
hlt
adc
inc
cmc
lock
sub
cmp
and
das
outs
mov
xchg
add
and
xor
mov
movups
and
xor
mov
movups
xor
pop
repnz
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
xor
stc
enter
(bad)
jne
cld
add
jl
sub
dec
sub
sub
jne
cld
cmp
jae
jge
adc
test
add
mov
push
cmp
inc
popa
sub
push
jge
mov
cmp
cmp
push
ja
in
sub
mov
xor
sub
jl
cmp
push
jge
mov
cmp
add
push
inc
sub
in
jo
mov
rcr
xchg
inc
add
mov
mov
mov
push
cmp
inc
inc
sub
sub
add
and
xchg
sbb
mov
dec
rcr
pushf
(bad)
xchg
push
inc
cdq
daa
adc
(bad)
mov
inc
jnp
sub
hlt
or
cmp
sub
and
mov
aas
cmp
aas
inc
xor
and
mov
and
xchg
adc
adc
inc
repnz
mov
add
xchg
push
jns
or
movs
scas
or
mov
call
sub
pop
mov
push
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
dec
sahf
or
call
fiadd
fld
dec
xchg
xchg
gs
mov
cs
jne
sbb
inc
adc
ror
xchg
dec
inc
mov
(bad)
push
in
les
loopne
push
jnp
sub
hlt
jbe
dec
cdq
and
push
cmp
mov
sbb
sub
int3
mov
sbb
cli
out
jne
sbb
inc
pop
(bad)
dec
ret
xchg
jge
cdq
add
push
inc
(bad)
in
ds
sub
hlt
push
jne
cld
xor
inc
outs
sub
cs
mov
adc
inc
adc
xor
cld
and
sti
xchg
sbb
out
jb
or
mov
(bad)
sbb
cdq
add
cmp
sbb
or
(bad)
xchg
pop
dec
cdq
das
adc
cmps
int
jo
idiv
push
jnp
sub
hlt
add
add
add
sub
loope
dec
shr
add
and
je
push
dec
loope
outs
inc
inc
imul
push
sbb
and
test
lods
in
sbb
xchg
or
popa
mov
test
test
pop
(bad)
sbb
xchg
jbe
pushfw
push
fldenv
aad
cmc
dec
mov
cli
push
fs
sbb
or
daa
inc
imul
fsub
add
ss
and
xor
mov
pop
movs
loope
cmps
lods
stos
adc
adc
pop
push
repnz
fidivr
sub
add
push
dec
mov
pop
out
ins
mov
xchg
pop
jns
sub
int
and
dec
mov
sbb
jns
sub
fldenv
and
movups
sbb
inc
mov
movs
inc
mov
add
dec
mov
sbb
cli
scas
lahf
inc
cmc
lock
xor
cmp
push
dec
cld
and
sti
xchg
inc
clc
out
jb
add
sub
push
dec
cld
and
sti
xchg
jo
out
jb
push
inc
mov
repnz
push
mov
push
sbb
push
xor
add
dec
mov
cmp
ds
inc
sti
sub
int3
mov
push
mov
or
cmp
ficom
in
fsubr
retf
inc
loope
dec
adc
sbb
or
lahf
inc
cmc
lock
mov
and
push
dec
cld
and
sti
xchg
clc
clc
out
jb
sbb
dec
pop
in
cmp
dec
mov
cli
sbb
xor
pop
jo
xor
xchg
and
in
cmp
cmp
pop
inc
cmc
and
push
mov
add
ds
dec
xchg
inc
imul
add
retf
push
pusha
(bad)
fisub
shl
sbb
pop
sub
push
dec
jmp
pop
shl
sbb
pop
and
dec
push
rcl
fistp
cmp
pop
sti
jl
icebp
xor
xchg
adc
sub
je
rol
sbb
cmp
push
inc
stc
sub
int3
mov
or
add
adc
out
fdivr
pop
stos
adc
jl
and
add
jp
jecxz
add
or
stos
scas
or
mov
mov
cli
out
jge
cmp
push
inc
stc
sub
int3
mov
pop
inc
sbb
or
cmp
push
inc
stc
sub
int3
mov
scas
inc
sbb
add
xor
pop
jo
xor
xchg
pop
pop
mov
push
sbb
cmp
pop
push
loope
dec
mov
push
lock
xchg
xor
popa
mov
dec
(bad)
test
mov
sbb
test
mov
int3
mov
inc
mov
push
push
sub
movs
or
nop
dec
mov
add
and
xor
call
lea
or
push
repnz
data16
push
lock
xchg
adc
xor
movs
(bad)
test
mov
sbb
test
addr16
push
dec
adc
xor
inc
pop
loope
dec
(bad)
scas
sahf
inc
mov
push
sbb
mov
out
mov
nop
and
dec
pop
mov
push
fistp
adc
xor
pop
push
repnz
pop
mov
sub
push
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
xacquire
inc
pop
mov
mov
lea
add
repnz
push
fistp
adc
xor
repnz
fistp
adc
xor
push
repnz
fistp
adc
cmp
popa
inc
stc
or
mov
add
sub
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
and
lea
adc
add
pop
mov
xor
lea
addr16
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
repnz
push
fistp
adc
cmp
xor
xchg
popa
dec
cdq
adc
sub
fdivr
inc
jnp
cs
mov
sbb
inc
jae
cmp
jmp
mov
fst
cmp
pushf
dec
retf
sbb
rol
movs
xchg
xor
fidivr
fstp
inc
or
push
mov
mov
sbb
dec
hlt
mov
ins
adc
(bad)
push
inc
(bad)
mov
dec
push
in
pop
rol
out
jb
push
das
stos
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jg
xor
mov
movups
xor
pop
dec
frstor
pop
out
imul
mov
loop
mov
lods
shl
xchg
adc
mov
adc
xchg
in
les
ror
fidiv
ds
ss
hlt
jl
push
mov
push
sub
pop
int
inc
pop
fld
dec
ret
inc
mov
cs
jne
sbb
inc
inc
fldz
dec
aad
dec
inc
cdq
xor
push
jb
cld
ds
jnp
sub
hlt
jp
push
cdq
and
cmp
sbb
inc
pop
sub
pop
dec
loope
inc
int3
mov
arpl
cli
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
cmp
sub
inc
cdq
adc
sbb
jmp
dec
(bad)
fdivr
jg
adc
dec
hlt
pop
mov
cmp
push
jae
cmp
popa
inc
stc
or
and
inc
mov
cs
jbe
fdiv
ja
call
mov
int
cs
es
inc
sti
sub
int3
mov
fimul
lock
sub
retf
inc
jnp
and
jne
cmc
and
xchg
cs
jge
in
push
dec
loope
dec
int3
mov
aaa
dec
jno
out
jge
cmp
popa
inc
stc
or
and
pop
pop
cld
imul
push
adc
repz
lods
push
fistp
imul
push
or
repnz
dec
mov
cli
push
inc
pop
ds
inc
sti
sub
int3
mov
push
dec
sbb
push
xchg
cs
lods
and
dec
inc
sti
sub
int3
mov
cmps
dec
sbb
push
xchg
push
aaa
aas
dec
push
in
pop
rol
out
jb
cmp
inc
cmc
and
(bad)
mov
ret
cli
int3
pop
cmps
xor
pop
inc
and
push
lds
add
cmp
out
xchg
mov
in
pop
rol
out
jb
or
sub
and
add
test
cmc
and
(bad)
mov
jb
jb
or
dec
in
cmp
ja
and
das
pop
mov
and
xor
bound
add
pop
push
repnz
mov
jg
lea
pop
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
add
lea
mov
push
fistp
adc
xor
pop
push
repnz
jecxz
adc
xor
push
inc
clc
sub
int3
mov
sub
lock
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
aaa
adc
xor
dec
inc
dec
jle
inc
imul
adc
(bad)
fdivr
dec
jnp
sub
mov
sbb
push
sbb
inc
jg
or
mov
mov
iret
or
sub
and
scas
sahf
inc
mov
sti
out
xchg
mov
fs
push
repnz
mov
nop
xor
dec
push
repnz
mov
add
ss
out
xchg
mov
xlat
inc
jnp
sub
hlt
push
mov
or
or
sar
dec
pop
in
and
test
cmp
cmp
jnp
and
cmp
or
femms
js
sbb
or
xchg
pop
mov
push
adc
xor
pop
push
repnz
push
fistp
sbb
int
inc
inc
fld
dec
hlt
dec
mov
or
push
jo
aam
dec
pop
in
and
test
sbb
sub
sbb
movs
lock
or
mov
sbb
or
lea
cli
and
call
jbe
fdiv
pop
ret
mov
movups
xor
rcl
dec
fistp
or
xor
push
push
repnz
scas
test
cmps
inc
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
out
pop
mov
outs
adc
xor
pop
push
repnz
push
fistp
adc
movs
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
xchg
pop
mov
repnz
xor
pop
push
repnz
push
fistp
adc
movs
xor
pop
push
repnz
icebp
pop
mov
pop
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
and
imul
mov
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
movs
xor
repnz
fistp
adc
movs
xor
pop
push
bnd
mov
(bad)
adc
xor
inc
inc
cld
sub
int3
lods
lods
loop
sbb
add
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
or
out
jne
sbb
inc
push
ret
xchg
jns
icebp
enter
cs
jne
sbb
inc
sbb
out
dec
cwde
xchg
dec
inc
or
push
sub
in
inc
dec
fsqrt
dec
not
into
(bad)
mov
ds
jnp
sub
hlt
push
mov
dec
adc
cmps
scas
push
push
(bad)
xchg
sbb
sub
hlt
and
cmp
(bad)
mov
sub
hlt
mov
gs
cmp
sbb
fmul
fisub
and
inc
xchg
(bad)
jb
push
sub
adc
inc
imul
cli
out
jne
or
scas
or
mov
cld
sbb
pushf
cmp
xor
loope
push
fbstp
adc
and
xor
mov
movups
adc
pop
push
fdiv
push
fist
movups
or
pop
push
int3
xor
(bad)
xchg
pop
mov
movups
jl
pop
push
call
imul
push
sub
and
mov
and
xchg
and
cli
inc
jae
in
hlt
xchg
inc
inc
(bad)
pushf
fidiv
sbb
inc
addr16
dec
std
xchg
sub
enter
cmps
jne
sbb
dec
std
scas
call
stc
out
xchg
mov
rcr
mov
lods
mul
xchg
and
mov
fldl2t
dec
retf
xchg
inc
inc
mov
fbstp
sbb
inc
pop
fprem1
dec
rcl
mov
popf
cs
jne
sbb
dec
(bad)
xchg
cmp
enter
or
ds
inc
cld
sub
int3
lods
lods
push
dec
sbb
add
xor
pop
push
repnz
mov
sbb
lea
cmp
sub
fistp
adc
xor
dec
inc
retf
and
jne
cld
daa
cmp
add
sub
jns
cmp
cmp
push
sbb
inc
jle
sub
in
and
or
lock
mov
jmp
call
mov
push
xchg
cs
sbb
inc
inc
fld1
dec
hlt
mov
cld
pop
cmp
popa
mov
loope
inc
out
outs
mov
xchg
or
cmp
ror
xchg
dec
inc
cdq
aas
adc
cmps
fisttp
inc
jno
sub
in
ds
xchg
xchg
pop
mov
add
int3
push
add
leave
fisub
shl
add
xor
cmp
mov
or
mov
je
scas
or
xchg
lock
mov
jmp
loopne
pop
shl
add
sub
and
mov
push
lods
(bad)
sbb
xchg
push
add
sub
mov
(bad)
in
jg
test
daa
xchg
es
repnz
popa
mov
xor
push
adc
mov
pop
push
fimul
push
fistp
or
adc
dec
push
fsincos
push
fisub
ins
lods
retf
scas
adc
das
xor
xor
test
lods
lock
mov
jmp
pop
sub
push
dec
out
and
scas
xchg
dec
cmc
out
jb
add
cmp
and
scas
xchg
jne
out
jb
add
and
xor
mov
sbb
pushf
cmp
es
push
fidiv
fistp
add
nop
push
pop
jne
and
xor
int3
test
mov
push
pop
jne
and
fs
or
test
lods
fistp
mov
jmp
pop
sub
and
test
add
sub
push
lods
and
dec
mov
cmp
ds
inc
stc
sub
int3
mov
dec
mov
cli
out
js
sbb
pop
push
hlt
cmp
scas
lahf
inc
scas
lock
sahf
push
add
retf
fisub
fbld
sbb
push
xor
pop
ja
xor
mov
movups
add
push
xor
pop
out
repz
mov
movups
add
push
xor
pop
xchg
repz
mov
movups
adc
xor
pop
inc
repz
mov
movups
xor
pop
in
xor
mov
movups
xor
pop
inc
repz
mov
movups
adc
xor
pop
into
repz
mov
movups
add
and
xor
mov
sbb
xchg
push
add
int
mov
fistp
sbb
add
and
repnz
mov
femms
lea
and
repnz
mov
mov
add
and
repnz
mov
xorps
xor
inc
jb
and
inc
imul
adc
fwait
mov
sbb
hlt
pop
mov
add
push
cmps
fimul
jae
jmp
das
jge
mov
push
cmp
xor
sub
sub
jne
jmp
xchg
cmps
jge
ds
pop
jmp
dec
repnz
adc
xor
pop
pop
repnz
mov
movups
xor
pop
jo
xor
mov
sbb
xchg
mov
loop
cmps
shl
clc
xchg
sbb
(bad)
mov
fldln2
dec
rcl
add
sahf
pop
sub
pop
int
inc
pop
fld
dec
rcl
in
sub
jne
sbb
inc
inc
fldln2
dec
into
xchg
dec
inc
mov
or
jge
and
jp
or
or
sbb
mov
out
xchg
pop
and
sbb
xor
mov
movups
and
xor
mov
sbb
mov
in
xchg
pop
sub
adc
mov
adc
sbb
inc
inc
sub
and
scas
xchg
push
lock
xchg
cs
stos
sbb
inc
jnp
sub
hlt
push
mov
cmc
and
xchg
push
sbb
dec
inc
retf
and
jne
sti
and
xchg
cs
jae
aad
ja
jmp
mov
mov
xchg
adc
xor
jl
lock
adc
or
ja
and
lods
or
mov
fld
jb
or
and
and
inc
imul
add
add
pusha
icebp
xor
xchg
xchg
pop
mov
xchg
adc
or
repnz
pop
mov
(bad)
adc
xor
sub
(bad)
mov
movups
and
jl
sbb
pusha
enter
mov
sbb
lahf
add
movs
xor
push
jo
xor
pushf
dec
pop
mov
daa
aam
add
xor
inc
jecxz
adc
mov
movups
xor
pop
and
xor
mov
movups
add
push
xor
pop
mov
mov
movups
push
xor
pop
mov
mov
movups
add
push
xor
pop
add
xor
mov
movups
xor
pop
adc
xor
mov
movups
add
push
xor
pop
sbb
xor
mov
sbb
call
mov
fistp
sbb
add
and
repnz
mov
femms
lea
and
repnz
xchg
jo
jecxz
and
xor
fs
repnz
scas
xchg
sbb
out
xchg
or
lahf
mov
loope
mov
test
out
pusha
(bad)
in
ds
jnp
sub
mov
and
xchg
fbstp
sbb
inc
inc
fprem1
inc
int3
mov
dec
mov
jmp
sub
push
repnz
mov
movups
xor
pop
dec
repnz
mov
sbb
dec
sti
out
xchg
mov
in
cmps
shl
clc
xchg
or
(bad)
mov
jmp
inc
enter
adc
cmp
dec
(bad)
dec
hlt
push
mov
cld
add
ins
sbb
xor
int3
test
mov
nop
xor
dec
push
repnz
mov
(bad)
sahf
push
sub
int
inc
inc
fld
dec
(bad)
xchg
gs
scas
enter
cs
jne
sbb
inc
pop
loope
inc
int3
scas
lods
pusha
dec
sbb
or
or
(bad)
xchg
jb
mov
adc
jns
adc
mov
(bad)
xchg
jns
cdq
or
cmp
cmp
repnz
mov
shld
and
repnz
xchg
pop
mov
movups
xor
cmps
pop
repnz
mov
push
or
xor
push
push
repnz
scas
call
add
lds
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sti
adc
xor
pop
push
repnz
push
fistp
adc
xor
repnz
mov
call
lea
lock
push
bnd
pop
mov
jbe
lea
xchg
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
outs
adc
xor
pop
push
repnz
rcr
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
adc
sahf
or
inc
pop
int
dec
pop
mov
push
fistp
adc
xor
push
repnz
mov
das
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
dec
adc
xor
push
repnz
push
fistp
adc
xor
inc
inc
cld
or
lods
enter
cs
test
int3
inc
dec
(bad)
dec
hlt
pop
mov
adc
cmps
fisttp
inc
(bad)
jnp
and
jne
cld
push
cmp
or
das
or
rcr
test
mov
fcomp
cli
rcl
mov
sbb
retf
xor
loope
dec
enter
in
lock
pushf
andps
xor
push
push
repnz
mov
lar
xor
inc
push
repnz
mov
getsec
lea
and
repnz
scas
call
cs
pop
ds
jnp
sub
hlt
push
mov
adc
cmps
out
gs
in
cmp
in
sbb
mov
pop
cmp
add
and
into
test
inc
cld
add
pusha
push
cmp
jnp
sub
hlt
pop
mov
adc
push
push
cmp
frndint
dec
int3
mov
dec
mov
adc
fs
pushf
fsub
fdivr
adc
xor
pop
inc
repnz
mov
movups
daa
xor
jo
test
inc
cld
push
cmp
test
(bad)
dec
int3
xchg
ja
mov
push
sbb
or
int3
test
cdq
or
sbb
out
push
gs
aad
dec
jnp
sub
hlt
arpl
add
and
into
test
lods
jmp
cmp
dec
(bad)
dec
hlt
popa
mov
ret
(bad)
cli
push
xor
xor
and
popf
xor
pushf
fistp
jecxz
cmp
call
fisub
mov
dec
push
adc
popf
and
sub
int3
mov
or
push
pushf
push
sbb
fs
push
int3
test
mov
or
stos
pop
int
inc
inc
cli
sub
mov
sbb
mov
in
xchg
pop
and
dec
inc
mul
push
leave
scas
xchg
dec
mov
push
pop
js
xor
cmc
and
pop
xchg
cld
adc
xchg
pop
int
dec
pop
in
and
rol
add
and
iret
test
lods
cmc
sbb
mov
in
xchg
pop
sub
push
dec
loope
dec
enter
std
pop
lock
mov
add
repnz
mov
and
adc
pop
push
repnz
fidivr
retf
mov
xor
push
jo
xor
pushf
hlt
pop
mov
daa
aam
add
ss
pop
jecxz
adc
mov
movups
add
push
xor
pop
mov
xor
mov
movups
xor
pop
pop
repnz
mov
movups
adc
xor
pop
xor
xor
mov
movups
adc
xor
pop
adc
xor
mov
movups
adc
xor
pop
push
repnz
mov
movups
add
push
xor
pop
enter
shl
sub
cli
out
xchg
mov
fs
push
repnz
mov
str
xor
inc
push
repnz
mov
rdmsr
lea
and
repnz
mov
(bad)
lea
and
loope
outs
out
inc
imul
sbb
or
int3
xchg
jb
cdq
add
sbb
fimul
jbe
jmp
sub
hlt
outs
mov
sub
or
cmc
ds
jnp
sub
mov
add
pusha
sti
out
xchg
mov
fs
push
repnz
mov
nop
xor
dec
push
repnz
mov
aaa
xlat
jae
out
jae
les
dec
jnp
sub
hlt
push
mov
or
pop
cmps
jecxz
jp
sar
dec
pop
in
and
sbb
dec
stc
and
call
ja
call
jo
mov
add
push
cmp
pop
push
stc
xor
mov
pop
mov
movups
xor
sahf
int
and
and
xchg
or
test
loopne
mov
scas
cdq
inc
mov
cli
out
jne
sbb
inc
jnp
sub
mov
enter
push
or
test
ret
and
loop
cmps
out
push
inc
inc
and
xor
ret
mov
movups
xor
xchg
push
repnz
mov
push
add
xor
dec
push
repnz
mov
dec
jle
add
and
push
repnz
fidivr
mov
and
push
repnz
mov
pcmpeqb
xor
push
push
repnz
fstp
fmul
xor
or
xor
mov
pshufw
and
push
repnz
fnstcw
les
xor
xor
cmp
mov
paddq
xor
cmp
xor
fdivr
lods
mov
and
push
repnz
fidivr
jmp
movs
xor
aas
push
repnz
mov
setne
xor
ds
repnz
mov
psubw
xor
fst
xor
fstp
movs
mov
and
repnz
fstp
dec
mov
and
push
repnz
mov
setl
xor
jmp
fstp
cmp
xor
xchg
push
repnz
fstp
mov
add
and
push
repnz
mov
xorps
xor
push
push
repnz
mov
rdmsr
pop
and
push
repnz
mov
cmovno
xor
and
xor
mov
(bad)
mov
and
fstp
mov
cmps
xor
out
push
repnz
mov
jle
cmps
xor
add
xor
mov
cmovge
xor
mov
xor
mov
and
jb
push
aas
mov
sbb
or
mov
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
or
lea
xor
push
fistp
inc
sahf
push
sub
int
inc
adc
(bad)
dec
mov
loop
scas
cs
jne
sbb
inc
add
ror
mov
cdq
cmp
pop
sbb
inc
ja
jbe
lahf
in
jge
adc
enter
sub
dec
sbb
sbb
cmp
jne
cld
adc
and
add
sub
adc
mov
sbb
push
sbb
xor
push
jge
mov
and
xchg
cs
jne
or
scas
or
imul
cli
out
jne
or
scas
or
imul
cli
out
xchg
mov
or
imul
cli
out
xchg
mov
or
scas
mov
mov
out
xchg
pop
sub
int3
test
dec
sbb
push
mov
int
jne
in
test
mov
xor
arpl
fiadd
retf
and
push
mov
icebp
out
jb
sub
sbb
inc
and
lock
xchg
xor
mov
fiadd
retf
and
inc
mov
or
call
fs
push
int3
test
lods
neg
mov
jmp
repnz
mov
movups
and
xor
mov
movups
xor
pop
jge
xor
mov
movups
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
dec
fisub
sub
and
inc
dec
sub
bound
mov
add
push
sbb
inc
jno
dec
ja
in
pop
jge
mov
adc
dec
sbb
inc
gs
ds
mov
xor
cmp
dec
inc
or
push
jge
mov
dec
cmp
sbb
ja
in
push
jge
mov
push
add
or
cmps
scas
or
mov
cld
sub
inc
inc
sub
adc
mov
sbb
pop
sbb
ja
in
and
mov
adc
dec
sbb
sbb
ds
mov
cmp
sar
sbb
shl
push
mov
sbb
dec
hlt
xor
jecxz
aaa
xchg
or
arpl
loope
outs
push
inc
imul
push
sbb
and
sub
int3
test
mov
prefetcht0
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
mov
add
and
xor
mov
femms
cmps
push
sbb
enter
leave
sbb
lods
lock
xchg
or
cmp
sbb
movs
enter
cs
jne
sbb
inc
pop
fscale
dec
repz
pop
inc
out
enter
shl
sbb
dec
retf
scas
lahf
push
sbb
out
xchg
sbb
fwait
mov
aad
mov
lods
in
and
xchg
sbb
mov
add
test
in
cmc
xchg
inc
inc
xchg
enter
(bad)
sbb
inc
dec
fyl2x
dec
(bad)
xchg
sub
enter
or
jns
sub
test
push
cdq
or
or
sub
sbb
lods
hlt
and
xchg
pop
cmp
dec
cld
sbb
lods
sti
and
xchg
or
stos
mov
pushf
inc
jnp
jecxz
fistp
push
sahf
push
sbb
cmp
dec
inc
stc
or
es
imul
adc
xor
jb
repnz
push
lods
neg
mov
call
pop
push
repnz
mov
push
adc
and
inc
inc
clc
sub
int3
mov
push
dec
sbb
or
cmp
dec
pop
in
daa
inc
aam
bound
mov
add
and
inc
inc
loope
outs
cmp
scas
lock
push
cwde
push
sbb
and
test
int3
test
test
add
push
pusha
retf
inc
mul
push
inc
mov
jle
loope
adc
sbb
push
leave
scas
popf
inc
xchg
lock
sub
and
inc
inc
loope
outs
dec
inc
imul
push
add
and
inc
inc
loope
outs
pop
inc
imul
push
sbb
and
inc
inc
clc
sub
int3
mov
aaa
dec
sbb
add
cmp
or
sbb
fistp
cmp
movs
xchg
adc
xor
lods
push
repnz
mov
push
adc
xor
push
push
repnz
mov
adc
push
sub
int
inc
adc
scas
sahf
inc
cmps
lock
cdq
std
out
xchg
mov
jmp
pop
lds
add
(bad)
std
out
xchg
mov
cli
sub
int3
mov
dec
mov
cli
out
jne
and
inc
inc
clc
sub
int3
mov
add
or
xor
pop
jo
xor
xchg
aad
mov
push
xor
adc
mov
sbb
fistp
rdtsc
out
adc
or
pop
push
fsub
push
enter
lods
jmp
sbb
(bad)
dec
loope
pop
lds
add
add
xor
pop
fiadd
pop
sar
push
mov
inc
push
sub
daa
inc
aam
repnz
cmps
hlt
push
jo
cmp
ins
inc
stc
or
sub
inc
mov
push
sub
push
int
inc
pop
(bad)
dec
int3
mov
dec
mov
sbb
stos
scas
or
nop
dec
lock
or
cmp
in
daa
inc
aam
sub
add
dec
inc
stc
or
inc
imul
cli
push
nop
push
sbb
and
movs
add
test
movs
lock
or
cmp
mov
rcl
pop
push
sahf
push
sbb
cmp
dec
inc
stc
or
mov
add
and
repnz
mov
movups
ja
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
push
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
or
sub
(bad)
sbb
fdivr
pushf
pop
mov
or
lea
sub
push
repnz
mov
sbb
lea
cmp
pop
out
imul
cs
pop
cmp
jmp
cdq
push
adc
outs
aad
push
xor
jbe
clc
xor
pop
mov
add
and
xor
mov
add
mov
out
xchg
mov
loop
movs
(bad)
xchg
jnp
mov
idiv
sub
int3
test
movs
enter
jmp
inc
dec
sub
mov
call
mov
pop
stos
sbb
sbb
fistp
push
xchg
xor
xor
mov
jp
cmps
xor
xchg
push
repnz
mov
andps
xor
mov
fstp
out
mov
and
repnz
mov
add
and
push
repnz
mov
movnti
xor
adc
xor
mov
psrlq
xor
rcl
xor
jecxz
jecxz
add
and
fnstcw
iret
mov
and
fistp
aas
test
and
push
repnz
mov
mov
add
and
repnz
xchg
lods
mov
wbinvd
mov
and
fstp
call
mov
repnz
mov
bsr
xor
mov
fidivr
add
xor
imul
xchg
add
jecxz
(bad)
pop
and
repnz
mov
psubb
xor
loopne
repnz
fidivr
adc
xor
sub
xor
mov
paddsb
xor
mov
repnz
mov
orps
xor
mov
xor
mov
cvtps2pi
xor
mov
fdivr
aad
add
and
xor
mov
(bad)
mov
and
repnz
mov
imul
xor
ins
push
repnz
fdivr
jns
xor
jp
repnz
mov
(bad)
mov
and
fdivr
rcl
pop
dec
push
retf
and
mov
cli
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
sbb
lea
add
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
or
mov
hlt
dec
mov
cmps
call
ds
hlt
pop
mov
cmps
fmul
xor
and
hlt
jno
sub
ror
(bad)
repz
sub
hlt
add
sbb
aas
sbb
inc
or
cmp
movs
mov
mov
js
retf
dec
movs
sbb
rol
call
or
dec
or
inc
xchg
fstp
jb
push
push
pushf
pop
fisub
mov
cld
aaa
jno
cli
out
jne
or
scas
or
imul
cli
out
xchg
mov
or
imul
cli
out
xchg
mov
or
mov
sub
sub
int3
test
dec
sbb
push
scas
cmp
add
int3
test
dec
sbb
sub
add
ret
inc
mov
or
out
jb
arpl
int3
fisub
and
inc
mov
cli
push
pop
pushf
cld
fbld
sbb
mov
jae
out
jne
or
pop
out
push
dec
cld
outs
sub
sti
out
xchg
mov
or
push
dec
xor
lea
aaa
jne
and
ss
outs
stos
inc
imul
arpl
ins
pushf
push
fisub
sar
add
xor
mov
movups
xor
pop
js
xor
mov
movups
xor
pop
imul
push
loopne
xchg
pop
icebp
jecxz
adc
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
or
ins
(bad)
out
xchg
mov
into
sbb
lods
movs
and
xchg
jb
(bad)
mov
pushf
sbb
lods
cwde
and
xchg
cs
jne
sbb
inc
inc
fyl2xp1
dec
test
int
stc
cs
jne
sbb
dec
mov
mov
jne
sbb
dec
mov
xchg
push
call
inc
fnstcw
push
cdq
adc
cmps
xchg
je
aaa
cmp
or
and
enter
cs
jne
sbb
inc
jnp
sub
mov
cmp
add
jae
adc
in
push
jge
mov
cmp
es
addr16
and
mov
pop
cmp
sbb
inc
or
sbb
shl
mov
or
idiv
jmp
mov
push
xchg
cs
jne
sbb
and
mov
sub
xchg
adc
inc
ss
outs
cmovne
scas
lock
nop
push
adc
ret
fs
or
test
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
jge
add
pop
pop
int
inc
xor
xchg
gs
lock
cs
ja
aam
or
sub
hlt
bound
daa
cmps
ror
dec
(bad)
loopne
push
jnp
sub
hlt
jbe
arpl
(bad)
push
adc
in
push
inc
fld
xor
fistp
je
sbb
hlt
pop
mov
adc
push
sbb
inc
jle
aaa
ja
in
daa
jge
mov
add
inc
sbb
ja
in
or
mov
adc
mov
or
mov
retf
and
jne
cld
add
sbb
inc
inc
das
or
shr
xchg
sbb
mov
jnp
sub
hlt
jne
push
cdq
adc
cmps
les
inc
sbb
sub
mov
sbb
xchg
sbb
outs
mov
popa
retf
test
mov
rdtsc
xchg
adc
mov
pop
push
in
or
xchg
mov
xor
adc
aad
pop
push
fimul
imul
push
and
sub
rol
hlt
mov
or
mov
xor
sbb
xchg
popa
inc
popf
lock
jmp
pop
push
nop
retf
dec
fld
dec
int3
scas
nop
inc
scas
lock
jmp
pop
push
test
fisub
ret
mov
dec
mov
adc
mov
ja
mov
or
xor
adc
xor
je
repz
mov
rdtsc
push
add
and
sub
int3
mov
lock
mov
adc
ret
fs
add
xchg
(bad)
sbb
xchg
arpl
ins
pushf
mov
mov
int3
mov
adc
add
ret
push
int
pop
jo
xor
pushf
jl
mov
daa
cmps
lea
and
xor
xchg
mov
xor
push
adc
or
pop
push
fiadd
cmc
mov
rdtsc
add
adc
push
and
adc
fdivr
adc
and
pop
jge
sub
int3
mov
lock
lods
cs
sahf
and
ss
outs
jecxz
imul
adc
outs
mov
xchg
and
fwait
arpl
fwait
or
jns
sub
push
inc
fld
sbb
sub
adc
fistp
or
lea
or
repnz
pop
mov
out
jb
push
jns
sub
jmp
push
mov
add
or
xor
xchg
cmps
or
xchg
push
cmps
sbb
or
or
push
hlt
dec
mov
out
ja
add
iret
push
int
inc
(bad)
fld
dec
lds
or
jmp
pop
push
xor
fisub
shl
add
or
scas
or
xor
push
stos
push
pop
push
int3
(bad)
fisub
(bad)
scas
xchg
inc
aam
or
aad
out
xchg
mov
jmp
push
shl
pop
mov
out
pop
sub
ds
jmp
sub
and
dec
mov
adc
into
jl
cmp
out
bound
js
or
dec
push
retf
and
push
adc
sbb
aaa
cmp
or
cdq
or
add
push
xor
and
xchg
(bad)
sbb
xchg
arpl
ins
pushf
cmc
aam
scas
in
mov
xchg
xchg
inc
and
and
xor
inc
inc
loope
inc
clc
stc
mov
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
ret
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
inc
int3
mov
aaa
push
jb
out
jnp
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
int
cli
out
jne
sbb
inc
jbe
ret
xchg
jns
cdq
or
add
(bad)
sar
inc
jnp
sub
hlt
lea
cld
pop
cmp
or
sub
sbb
cdq
and
xor
sub
sub
mov
and
jnp
and
outs
mov
repnz
sbb
xor
push
push
repnz
mov
wbinvd
lea
and
xor
mov
(bad)
add
push
fs
or
test
mov
push
sbb
inc
je
aad
retf
inc
mov
fimul
jge
in
inc
jnp
sub
int3
mov
aaa
add
mov
rol
(bad)
dec
hlt
push
(bad)
jne
clc
and
xchg
push
cmp
dec
sti
sbb
cdq
xor
jns
das
xor
(bad)
jno
bound
dec
repnz
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
jecxz
jno
or
dec
cmc
and
xchg
or
cwde
mov
(bad)
sbb
in
and
xchg
push
or
fs
bswap
test
mov
cs
je
aad
dec
jnp
and
dec
scas
lock
movs
push
ss
retf
iret
fisub
hlt
push
mov
hlt
and
nop
cs
rcr
push
repnz
outs
ja
xchg
pop
lods
les
mov
in
xchg
pop
sub
sbb
test
add
xor
fmul
test
lods
jmp
lea
push
fs
bswap
test
mov
or
lea
xor
cdq
lock
nop
xchg
pop
mov
cmp
lea
and
xor
cmc
jle
test
daa
xchg
and
daa
xor
pushf
fs
mov
daa
cmp
call
fidiv
push
fist
adc
xor
pop
jl
sub
int3
fwait
lods
out
dec
sbb
or
mov
sbb
lods
or
mov
cld
add
int
dec
push
in
cmp
mov
sbb
mov
in
xchg
pop
or
pop
push
repnz
int3
xchg
test
mov
adc
(bad)
pop
push
sti
xor
push
xchg
pop
mov
or
push
sbb
pop
push
in
push
fist
xchg
pop
mov
push
adc
xchg
and
xor
cmp
adc
repnz
xor
cmp
adc
push
and
xor
call
adc
repz
xor
pop
xchg
pop
mov
push
adc
dec
and
xor
arpl
adc
xor
pop
push
xor
into
nop
pop
mov
or
push
(bad)
and
xor
dec
xchg
pop
mov
or
lea
and
xor
pop
xchg
pop
mov
or
lea
and
push
(bad)
xchg
pop
mov
or
push
aas
and
aaa
push
fisttp
pop
mov
or
(bad)
in
adc
mov
pop
push
jbe
push
fist
pop
mov
pop
add
or
mov
call
adc
and
pop
push
out
push
fbld
adc
adc
pop
push
aad
push
fist
movups
add
xor
adc
inc
adc
jnp
pop
push
mov
xchg
pop
mov
movups
outs
and
xor
fcom
lea
push
inc
and
xor
les
lea
push
sub
outs
test
inc
mov
push
adc
dec
sub
and
cmps
mov
into
xchg
cmp
dec
fcomp
test
pushf
mov
ficom
or
lahf
inc
fpatan
dec
(bad)
xchg
sub
pop
adc
cmp
push
inc
push
sub
or
mov
adc
das
sbb
ja
in
push
jge
mov
and
add
push
inc
sub
fisttp
sbb
shl
or
das
ds
fimul
cdq
and
dec
mov
add
sub
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
or
pop
hlt
dec
mov
adc
(bad)
fstp
jne
pop
sub
hlt
pop
mov
adc
cmps
fmul
inc
(bad)
out
jge
and
cdq
sub
cmp
cs
sub
out
in
sub
mov
xor
jb
push
jle
ret
cmp
in
sub
mov
adc
outs
sbb
jp
or
shl
push
lahf
fnsave
ds
jnp
sub
hlt
jge
inc
cdq
pop
sbb
test
add
and
inc
dec
retf
out
push
push
test
and
xor
mov
movups
and
xor
mov
movups
(bad)
frstor
sub
push
cmp
push
inc
dec
sub
push
jge
mov
sub
inc
jno
das
dec
dec
in
or
test
mov
jg
sbb
sub
sub
mov
adc
push
sbb
inc
jle
xor
in
cmp
mov
sbb
xchg
cmp
frstor
ret
xchg
jg
mov
cs
sbb
inc
jnp
sub
hlt
fs
jne
cld
add
pop
jnp
push
ss
push
repnz
mov
push
adc
add
je
repz
mov
sbb
cld
sub
add
or
push
adc
sbb
scas
stos
or
mov
adc
sahf
sub
fiadd
fld
dec
int3
scas
mov
(bad)
adc
sahf
sub
fiadd
sbb
inc
xlat
stos
xchg
sbb
xchg
cmp
fisub
mov
ret
push
adc
xor
je
repz
cmc
jle
test
daa
xchg
and
jmp
push
fistp
xor
add
and
xor
xchg
(bad)
pop
mov
jno
lea
push
je
repz
mov
retf
add
and
xor
bnd
test
daa
xchg
and
adc
push
fistp
xor
add
and
out
push
fistp
push
fwait
push
cmp
leave
fisub
rol
jb
sbb
dec
dec
in
or
test
dec
sbb
add
and
inc
dec
retf
out
outs
mov
lea
xor
movs
xor
jl
repz
nop
xchg
pop
mov
dec
sti
push
xor
inc
xor
and
div
push
(bad)
sub
lea
xor
fdiv
xor
or
sahf
sub
fiadd
out
sub
int3
xchg
lods
leave
dec
sbb
or
pop
push
jp
das
ds
fimul
shl
jmp
add
sub
inc
lods
and
and
add
push
sahf
and
add
ins
xchg
pop
mov
les
lea
daa
push
jo
xor
pushf
adc
jecxz
mov
xchg
xor
pop
jo
xor
xchg
cmp
in
adc
sbb
repnz
fidivr
sbb
xor
sub
fidivr
push
mov
and
mov
cmovne
and
repnz
mov
cmovno
and
repnz
mov
pcmpeqb
and
push
repnz
mov
setg
xor
test
fistp
add
xor
std
xor
mov
pop
mov
movups
daa
and
xor
cmps
xchg
pop
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
into
xor
mov
sub
jb
push
jno
(bad)
ds
jnp
sub
hlt
push
mov
clc
and
xchg
sbb
or
lds
fisttp
xchg
sar
ja
in
and
jne
stc
sbb
xchg
push
(bad)
mov
sbb
int3
stc
xchg
pop
mov
push
adc
xor
pop
push
repnz
mov
adc
push
xor
dec
inc
fisttp
jecxz
inc
imul
push
cmp
cmp
dec
sti
sbb
lods
call
(bad)
mov
sbb
scas
or
(bad)
jne
hlt
and
xchg
cs
jge
aad
ja
jmp
popf
dec
mov
add
sub
push
fistp
adc
sbb
or
dec
xor
pop
cmp
add
sub
and
scas
mov
out
xchg
or
cwde
mov
(bad)
dec
rcl
push
add
and
fs
or
test
cdq
push
push
cmp
cmp
xchg
jmp
pop
mov
das
scas
data16
jge
movs
and
adc
push
movups
in
cmp
push
fistp
mov
ds
js
xor
bound
enter
movs
and
xor
cli
xchg
pop
mov
or
push
pop
and
xor
lock
pop
mov
push
adc
xor
pop
push
or
xchg
pop
mov
push
adc
and
xor
push
xchg
pop
mov
push
adc
pop
and
xor
mov
or
push
nop
and
xor
mov
pop
mov
movups
sub
pop
push
jecxz
push
(bad)
xchg
pop
mov
push
adc
mov
xor
push
xchg
pop
mov
or
lea
and
xor
cmc
xchg
pop
mov
push
adc
inc
and
xor
xor
adc
test
xor
inc
xchg
pop
mov
sbb
xchg
sbb
inc
pushf
sub
mov
les
adc
xor
pop
inc
repnz
mov
movups
and
xor
mov
movups
xor
pop
imul
push
loopne
xchg
pop
icebp
jecxz
adc
add
and
xor
mov
movups
add
and
xor
mov
movups
add
xor
outs
int
and
and
jl
cmp
sub
sbb
jne
cld
and
inc
jge
xor
in
test
xchg
pop
inc
mov
cs
jne
sbb
inc
dec
(bad)
cdq
pop
adc
cmp
cmp
ja
jmp
mov
mov
sub
hlt
mov
sti
sbb
shl
push
adc
jne
and
fs
int3
test
mov
prefetcht0
xor
dec
push
repnz
mov
prefetchw
xor
js
repnz
mov
mov
add
and
loope
outs
cmp
mov
xchg
and
fwait
mov
rcr
mov
popf
enter
cs
jne
sbb
inc
ja
in
in
xchg
inc
inc
mov
(bad)
sub
or
and
inc
cdq
adc
add
dec
sub
and
cmp
mov
int
or
mov
and
mov
loop
iret
xchg
pop
inc
mov
femms
arpl
in
sub
int3
xchg
lods
xor
xchg
push
xor
pop
push
repnz
fistp
adc
xor
push
fistp
cs
out
jne
sbb
inc
dec
fld
inc
hlt
push
mov
or
pop
cmps
jecxz
inc
(bad)
sar
outs
jnp
sub
mov
pop
in
jb
push
fs
cmp
in
sbb
lods
jmp
icebp
jne
sbb
inc
pop
loope
dec
shr
and
xchg
mov
(bad)
dec
aam
jb
mov
fimul
inc
js
sub
jmp
xchg
dec
mov
or
lods
mov
or
push
repnz
inc
lods
call
mov
in
xchg
pop
and
dec
cs
xor
mov
lods
adc
es
inc
in
sub
int3
xchg
lods
ror
lock
sahf
femms
arpl
in
sub
int3
xchg
lods
and
mov
pop
inc
js
xor
push
test
popf
add
lea
push
ss
repnz
data16
lock
xchg
push
push
jne
and
fs
push
int3
test
xor
sub
aas
xor
out
and
push
sbb
xor
out
iret
test
cmps
cld
add
xchg
sbb
mov
lds
cmp
add
ins
push
sub
das
inc
cmc
test
sbb
pop
lods
sti
adc
adc
out
fistp
add
xor
pop
js
xor
call
jbe
out
jne
and
inc
dec
loope
outs
imul
push
adc
jne
and
test
test
adc
movups
sbb
jbe
mov
or
push
xor
pop
dec
loopne
jge
xchg
rol
jecxz
mov
and
push
repnz
mov
ud0
xor
xor
xor
mov
cvtps2pd
and
fidivr
jmp
add
and
fistp
inc
mov
and
fidivr
adc
xor
add
fistp
or
sbb
sub
stc
fwait
pop
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
and
lea
adc
push
fistp
sbb
int
dec
jnp
sub
hlt
dec
mov
or
push
fs
aam
push
jnp
cs
cmps
mov
leave
xchg
les
sbb
inc
jnp
sub
hlt
jbe
push
cdq
and
or
and
jl
out
and
pop
push
dec
repnz
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
(bad)
and
pop
push
dec
cld
sbb
js
cmp
inc
(bad)
dec
into
xchg
jae
cdq
pop
adc
lods
sbb
mov
hlt
dec
mov
std
and
xchg
cs
jo
xlat
aas
ja
in
pop
lds
and
cmc
sti
out
xchg
mov
fs
push
repnz
mov
nop
xor
dec
push
repnz
xchg
lods
or
push
xchg
in
pop
ds
jnp
sub
hlt
push
mov
add
or
mov
hlt
dec
mov
cld
push
cmp
cmp
inc
loope
inc
int3
pushf
mov
enter
cli
out
jl
fnsave
ja
in
mov
cdq
add
lea
and
and
nop
sar
jecxz
dec
mov
and
fistp
pop
mov
and
push
repnz
fidivr
inc
mov
and
fistp
inc
mov
and
push
repnz
jecxz
sbb
movs
xor
push
push
repnz
fidivr
pop
mov
and
fidivr
sbb
xor
inc
inc
shr
int3
nop
lods
xor
lock
sub
aas
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
xor
push
xor
dec
inc
fimul
ja
inc
imul
adc
cmps
test
jge
mov
adc
push
sbb
jg
ss
in
sub
jne
stc
and
xchg
sbb
mov
inc
fptan
inc
int3
stos
mov
ret
sahf
sub
mov
int
dec
inc
mov
push
fistp
adc
xor
push
repnz
mov
adc
lea
sbb
scas
or
popa
inc
mov
cs
jb
fdiv
ja
jmp
mov
xor
mov
mov
mov
add
sbb
inc
inc
sub
cmp
mov
sbb
pushf
or
xor
push
push
repnz
mov
(bad)
lea
and
loope
outs
fwait
inc
imul
(bad)
mov
(bad)
dec
lds
adc
pop
int
inc
jnp
sub
mov
enter
jecxz
jns
sub
cmp
mov
sub
xchg
pop
int
inc
jnp
sub
movs
mov
or
xor
push
jmp
pop
mov
das
adc
xor
jl
lock
jp
pop
mov
sbb
lea
push
jne
sub
xor
mov
dec
sti
push
xor
inc
xor
and
cld
xor
pushf
test
jecxz
add
add
and
mov
mov
stos
mov
xor
adc
sti
push
fistp
rdtsc
push
add
and
das
jae
mov
cmp
or
loopne
xor
jl
lock
jns
pop
mov
femms
adc
jnp
ja
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
add
or
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
push
and
xor
adc
daa
out
xchg
pop
sub
sbb
enter
div
ds
jnp
sub
hlt
pusha
mov
cmp
add
loop
ja
in
es
mov
adc
dec
adc
jge
and
inc
dec
loope
outs
add
imul
add
and
repnz
mov
invd
lea
and
xor
scas
mov
out
xchg
push
cmp
dec
out
sbb
scas
enter
cs
sbb
inc
inc
shr
int3
xchg
lods
(bad)
dec
sbb
or
sub
sbb
cdq
add
addr16
xchg
int
and
movups
and
xor
mov
movups
jo
mov
sub
and
xchg
cs
jno
fidivr
push
inc
shr
int3
xchg
lods
jp
sbb
push
test
loopne
(bad)
fdivr
push
jnp
sub
hlt
pop
mov
sti
sbb
xchg
push
xor
and
push
or
test
cdq
movhps
fs
ret
repnz
mov
pop
mov
xor
lea
daa
jl
repz
xor
adc
xor
push
fistp
cmp
xor
pop
jo
(bad)
jecxz
outs
add
pop
push
rol
push
fistp
xor
out
retf
pop
mov
hlt
adc
dec
loop
adc
adc
push
repnz
mov
movhps
xor
push
xor
pop
jo
xor
xchg
push
pop
mov
sbb
lods
jb
push
adc
push
repnz
mov
sbb
pushf
sub
xor
fcom
xor
fidivr
dec
xor
pop
push
repnz
mov
movlps
and
repnz
fidivr
data16
and
fistp
ins
mov
and
fidivr
jne
add
and
push
repnz
mov
cmovl
and
shr
int3
xchg
lods
sub
lock
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
xor
lea
ds
inc
fmul
jg
inc
imul
cli
push
pushf
cs
mov
int3
inc
jnp
sub
hlt
pop
mov
add
cmp
push
inc
jg
cmp
in
and
mov
sbb
inc
sbb
inc
arpl
sbb
mov
push
aas
push
inc
int3
fisub
fistp
sbb
movs
xor
dec
push
repnz
mov
prefetch
int
inc
inc
fld
dec
hlt
dec
mov
or
or
inc
sub
cmp
mov
cdq
out
jb
cmovno
sub
in
cmp
mov
and
xchg
cs
jb
cmp
dec
jae
cmp
test
mov
enter
movs
cmp
pop
push
push
push
fild
movups
sub
jge
and
inc
cdq
push
adc
hlt
push
gs
fistp
inc
jnp
and
cmp
sbb
mov
out
xchg
pop
and
sbb
lods
jmp
mov
ds
inc
shr
int3
xchg
lods
push
dec
sbb
pop
cmps
jmp
inc
dec
and
mov
(bad)
inc
hlt
pop
jmp
push
adc
xor
fnsave
fistp
mov
and
repnz
mov
lgs
xor
pushf
push
repnz
fidivr
or
and
repnz
fidivr
mov
add
and
fidivr
xor
and
push
repnz
fidivr
mov
cmps
xor
pop
push
repnz
xchg
jge
jecxz
cdq
mov
and
xor
fidivr
cmp
and
(bad)
sub
test
mov
enter
movs
cmp
pop
push
stc
xor
mov
pop
mov
movups
sub
pop
push
in
xor
popf
xchg
pop
mov
movups
push
and
xor
mov
lea
adc
or
xor
cli
xchg
pop
mov
sbb
mov
out
xchg
pop
sub
stos
dec
fld
dec
enter
mov
div
sbb
inc
jnp
and
jne
cld
sbb
pop
sbb
inc
jne
sub
popf
in
sub
mov
and
nop
cs
jne
sbb
dec
int3
movs
mov
(bad)
adc
xchg
pop
int
inc
adc
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
in
cs
lock
mov
cmps
lock
popa
pop
cmp
in
es
mov
push
cmp
xor
ja
in
cmp
or
sbb
mov
out
xchg
pop
sub
sbb
cdq
or
cmp
sbb
sub
cmp
mov
sbb
xchg
push
or
and
dec
and
dec
mov
add
sub
push
repnz
mov
push
adc
xor
inc
inc
fisttp
cmps
and
inc
nop
enter
cs
xchg
int3
inc
pop
(bad)
dec
iret
xchg
jno
xchg
enter
push
xor
xchg
lods
or
inc
mov
out
pop
inc
dec
sub
mov
int3
movs
mov
(bad)
adc
xchg
pop
int
ja
in
sbb
cdq
add
cmp
push
shr
jecxz
jecxz
cmp
add
ins
mov
repnz
loop
pop
lods
dec
sti
mov
and
retf
xor
pop
xchg
mov
retf
mov
xor
jl
repz
push
xchg
pop
mov
jmp
dec
mov
and
xor
xchg
loopne
mov
adc
sbb
mov
shl
sub
adc
retf
xchg
jbe
loop
pop
lods
dec
sti
mov
and
xor
pop
xchg
and
cld
movs
xor
jl
lock
sbb
adc
xor
push
sar
xor
bound
xor
and
fdiv
xor
dec
xchg
pop
mov
aaa
adc
xor
jbe
fistp
inc
mov
and
repnz
mov
psllq
xor
int3
push
repnz
fidivr
inc
mov
and
repnz
mov
minps
and
fidivr
mov
and
push
repnz
jecxz
dec
mov
and
xor
fidivr
push
adc
jl
add
sub
cli
stc
fwait
pop
mov
pop
adc
xor
pop
push
repnz
mov
adc
lea
add
adc
fistp
adc
xor
pop
push
repnz
mov
adc
mov
int
dec
jnp
sub
hlt
dec
mov
cld
sbb
sbb
inc
inc
sub
cmp
add
push
cmp
sbb
jbe
xor
sahf
in
sub
jne
cli
and
xchg
shl
sub
out
push
dec
repnz
push
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
scas
movs
pushw
sbb
cmp
dec
(bad)
sbb
test
jmp
inc
inc
sub
and
xor
dec
cld
push
cmp
sbb
sub
sbb
mov
fadd
jns
and
sbb
xor
mov
movups
and
xor
scas
xchg
lods
icebp
out
jb
add
sub
sbb
lods
stc
and
xchg
push
xor
mov
sbb
or
mov
or
cmp
sbb
sub
and
mov
mov
cli
out
jbe
ret
mov
xchg
jae
cdq
pop
das
stc
mov
and
xor
xchg
imul
xor
pop
loope
and
xor
pop
xchg
pop
mov
movups
loop
pop
push
repnz
adc
lea
push
xor
xor
sbb
lea
push
shl
pop
push
inc
xor
push
xchg
pop
mov
movups
xor
jbe
loope
dec
int3
lea
sbb
xor
push
push
repnz
mov
wbinvd
lea
and
xor
mov
femms
adc
push
retf
mov
leave
xchg
inc
mov
cs
jne
sbb
inc
inc
(bad)
dec
hlt
arpl
cmp
or
jbe
loope
inc
(bad)
stc
xchg
pop
mov
push
adc
xor
pop
push
repnz
push
fistp
sbb
int
inc
jnp
sub
hlt
dec
mov
or
push
inc
inc
sub
jp
loope
outs
fld
mov
cmps
cmc
or
or
ret
mov
sbb
nop
push
and
int3
fisub
fistp
adc
mov
int
sbb
fistp
mov
add
and
repnz
xchg
pop
mov
cmovs
and
pop
repnz
mov
push
adc
xor
add
mov
mov
bndstx
xor
jge
repnz
fnstsw
or
movs
xor
pop
push
repnz
mov
(bad)
call
push
push
repnz
mov
(bad)
add
and
repnz
xchg
inc
sub
(bad)
mov
xor
jmp
pop
mov
jno
lea
xor
pusha
leave
xchg
add
in
pushf
mov
xor
jle
mov
movups
xor
stc
push
repnz
push
mov
or
cdq
and
ss
repz
xor
sbb
es
jo
xor
pushf
rcr
jecxz
mov
add
and
xor
xchg
mov
mov
daa
xor
jp
add
pop
lock
fcom
adc
xor
pop
jo
xor
xchg
push
pop
mov
rcl
cmps
sbb
jns
and
sbb
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
das
and
sbb
or
lods
add
xor
pop
push
repnz
fistp
adc
xor
push
fistp
pop
sahf
add
sbb
fiadd
fld
dec
hlt
dec
mov
or
push
fs
aam
ja
in
cmp
mov
adc
lea
aaa
inc
mov
hlt
or
inc
imul
or
lea
sub
push
repnz
mov
sbb
lea
sbb
or
popa
inc
cdq
adc
cmp
cmp
inc
mul
dec
sbb
cmp
cmp
jnp
sub
ins
mov
in
or
or
mov
ret
pop
xchg
leave
movups
xor
xlat
fcomi
adc
xchg
inc
and
pop
mov
xor
jmp
pop
mov
daa
xor
jp
add
mov
xor
inc
xchg
pop
mov
xchg
adc
xor
pop
jo
xor
xchg
push
pop
mov
rcl
cmps
sbb
loope
and
xor
add
lea
adc
scas
and
xor
adc
lea
and
xor
jecxz
pop
mov
movups
push
and
xor
(bad)
xchg
pop
mov
movups
xor
jbe
(bad)
sub
sbb
test
and
xor
mov
movups
xor
pop
dec
jecxz
outs
movs
inc
imul
cs
stos
sbb
inc
pop
(bad)
dec
aam
jae
cdq
pop
adc
cmps
in
je
xor
jp
stc
outs
mov
mov
popf
or
and
ficomp
div
push
fistp
movups
and
pop
push
out
push
fbld
lock
xchg
or
pushf
mov
(bad)
dec
hlt
push
mov
pop
sbb
pop
int
dec
jnp
sub
stos
mov
push
cmps
in
shl
jp
and
je
jecxz
adc
xor
dec
inc
repnz
xchg
inc
sub
xchg
xchg
add
jg
xor
push
push
fisub
push
fistp
or
and
add
(bad)
mov
cmp
push
adc
das
xlat
xor
pop
sbb
xor
mov
movups
xor
pop
div
push
jno
xchg
pop
retf
out
adc
push
xor
pop
xor
xor
mov
movups
push
adc
xor
xor
mov
movups
and
xor
mov
pop
inc
in
adc
adc
xor
pop
xchg
div
push
popa
mov
movups
add
push
and
xor
mov
movups
push
adc
and
xor
mov
movups
add
push
and
xor
mov
movups
adc
and
xor
mov
movups
add
push
xor
pop
push
div
push
push
mov
movups
aaa
and
xor
mov
movups
push
adc
aaa
and
xor
mov
movups
xor
pop
xor
xor
mov
movups
adc
xor
pop
and
mov
movups
push
adc
aaa
and
xor
mov
movups
or
and
xor
mov
movups
push
adc
xor
pop
adc
xor
mov
pop
sub
movups
push
adc
xor
xor
mov
movups
and
xor
mov
movups
add
push
xor
pop
jge
xor
mov
movups
add
push
xor
pop
mov
xor
mov
pop
call
add
push
and
xor
mov
pop
and
movups
adc
and
and
shl
jb
mov
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jg
xor
mov
movups
xor
pop
adc
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
and
xor
mov
movups
add
and
xor
mov
movups
adc
xor
pop
mov
xor
mov
movups
push
xor
pop
push
repz
mov
movups
xor
pop
jp
xor
mov
sbb
mov
in
xchg
pop
sub
sbb
lods
and
xchg
adc
mov
fldlg2
dec
scas
xchg
dec
inc
test
cs
sbb
inc
data16
dec
hlt
je
dec
cdq
daa
adc
lds
push
(bad)
mov
sbb
sub
hlt
or
xor
call
hlt
sbb
sbb
popf
push
sub
bound
hlt
xor
xchg
xchg
dec
sub
add
dec
test
mov
cmp
int
mov
and
inc
fcmovnu
push
out
jb
push
and
fisub
jbe
xchg
inc
imul
cli
out
jne
or
scas
or
imul
cli
out
xchg
mov
or
imul
cli
out
xchg
mov
or
test
mov
out
xchg
pop
sub
int3
test
dec
sbb
push
popf
cmp
ds
pop
int
and
lock
xchg
or
mov
int
inc
aaa
retf
and
push
mov
icebp
out
jb
add
outs
int3
fisub
les
aad
pusha
(bad)
out
xchg
mov
fs
push
repnz
mov
str
xor
inc
push
repnz
mov
sysenter
lea
and
repnz
mov
movaps
xor
sbb
repnz
fistp
pop
lea
and
push
repnz
fistp
jno
add
and
repnz
fistp
lea
sti
fs
out
stos
lods
(bad)
and
xchg
push
cmp
dec
rcr
mov
xchg
mov
int3
xchg
aas
cmp
dec
sti
sbb
test
lds
sub
jne
sbb
inc
jle
lea
xchg
cs
lock
mov
inc
xor
cdq
dec
mov
enter
cs
jne
sbb
dec
mov
or
mov
loope
outs
cs
imul
or
xchg
(bad)
dec
clc
xchg
jbe
test
fimul
inc
(bad)
in
ja
jmp
lods
hlt
and
xchg
xor
scas
mov
fstp
jmp
xchg
mov
movs
xchg
daa
cmp
mov
fstp
inc
cmps
enter
cs
jne
sbb
dec
cmc
xchg
push
inc
xchg
enter
cs
je
push
sub
mov
jl
jb
add
loope
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fnsave
push
fisttp
movups
or
pop
push
mov
push
fbld
sub
jb
push
inc
push
sub
sub
jne
cld
add
inc
inc
sub
sbb
lods
movs
and
nop
shl
in
inc
inc
fsincos
dec
mov
enter
lods
ja
popf
ds
inc
sub
mov
inc
imul
dec
mov
sbb
inc
dec
(bad)
dec
hlt
pop
mov
cmp
push
dec
(bad)
in
ja
in
cmp
mov
adc
dec
sbb
ja
in
and
mov
sbb
xchg
push
mov
fisttp
int3
test
cdq
movups
cmps
in
push
data16
(bad)
ds
jnp
sub
hlt
pusha
mov
cmp
push
cmps
rol
inc
jne
xor
jge
mov
and
xchg
cs
jge
mov
ja
hlt
and
fs
test
retf
mov
xor
dec
dec
in
sub
not
xchg
pop
mov
dec
and
add
sti
fs
int3
test
lods
sti
sbb
mov
call
fmul
pushf
dec
(bad)
scas
dec
mov
out
xchg
or
xor
loope
dec
(bad)
scas
dec
dec
sbb
out
mov
mov
and
jl
sbb
pusha
(bad)
xchg
add
in
xor
adc
jecxz
pop
push
ficomp
push
test
movups
cli
fldenv
jo
mov
(bad)
and
xor
dec
jmp
dec
cld
add
jns
sub
repz
jmp
dec
clc
or
add
sbb
mov
cmps
mov
mov
cmp
adc
xor
pop
repnz
sub
test
cmps
dec
sbb
sbb
stos
push
jb
call
int3
dec
shr
adc
sahf
fild
cmp
inc
pop
loope
dec
into
scas
adc
dec
adc
sahf
fild
push
pop
int
dec
ins
jmp
call
push
mov
not
scas
sbb
out
xchg
and
lds
loop
test
ss
sbb
xchg
sbb
fldenv
shr
push
xchg
push
retf
push
dec
(bad)
inc
into
sub
mov
or
imul
jbe
mov
push
adc
sbb
dec
xchg
scas
dec
or
out
xchg
xor
lds
pop
les
test
push
retf
push
cmp
fisub
into
scas
adc
dec
adc
sahf
fild
loopne
int
dec
ins
shr
push
fistp
cmp
push
and
adc
mov
movups
ds
sub
or
inc
imul
mov
push
jmp
loopne
rol
scas
cmp
lock
mov
out
xchg
mov
jecxz
rol
scas
cmp
lock
movs
repnz
xchg
mov
repz
add
xchg
sub
or
dec
pop
fistp
retf
mov
out
pop
sub
sub
test
dec
sbb
add
sub
shl
call
push
add
mov
and
test
xchg
mov
cmp
movs
xor
inc
sub
(bad)
mov
pop
add
mov
ins
inc
pop
sub
int3
data16
cld
inc
sbb
push
xchg
push
xchg
jno
popf
ds
inc
sub
les
inc
imul
push
push
pushf
push
xchg
jno
popf
ds
inc
sub
sub
inc
imul
pop
lahf
cmp
pop
jne
sbb
dec
int3
out
pop
mov
cli
out
jne
and
outs
mov
mov
xchg
push
mov
fs
xor
push
adc
mov
pop
push
ficom
push
fistp
jo
push
xor
inc
xor
and
in
gs
add
sbb
cmp
call
int3
dec
int3
cmp
add
jmp
test
inc
int3
cmp
add
neg
outs
in
daa
inc
pop
cmps
xchg
lods
sti
sbb
mov
in
pop
and
popa
push
lods
stos
dec
(bad)
jns
adc
mov
mov
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
jmp
lea
rcr
push
fistp
adc
xor
pop
push
repnz
mov
inc
adc
xor
push
repnz
fistp
or
fisubr
push
pop
int
dec
loopne
cmp
pop
mov
add
lea
xor
and
fistp
adc
xor
pop
push
repnz
mov
aas
adc
xor
pop
push
repnz
inc
add
mov
add
pop
aaa
ja
in
and
mov
and
xchg
push
cmp
inc
fldpi
dec
(bad)
xchg
inc
inc
cdq
xor
cmp
sbb
sub
and
(bad)
scas
and
scas
lock
data16
out
xchg
mov
fs
push
repnz
mov
str
xor
dec
push
repnz
xchg
inc
test
sti
out
xchg
mov
loop
cmps
(bad)
xchg
jp
cdq
or
cmp
push
inc
inc
sub
cs
add
xor
sbb
sub
cmp
mov
push
cmp
add
mov
fs
push
repnz
mov
str
xor
inc
push
repnz
scas
dec
rcr
cmp
dec
(bad)
sbb
lods
repnz
xchg
push
mov
adc
test
scas
enter
cs
ja
aad
ja
in
ror
scas
dec
xchg
sbb
mov
fs
or
test
cdq
pop
sbb
ins
adc
mov
sbb
jl
sbb
pusha
lds
adc
and
mov
out
fs
repnz
mov
bswap
mov
and
repnz
mov
paddb
and
push
repnz
jecxz
stos
mov
and
repnz
fidivr
jp
add
and
fnstsw
(bad)
lea
and
fidivr
fmul
and
push
repnz
mov
maxps
and
push
repnz
mov
pop
lea
and
xor
xchg
or
jecxz
or
out
sbb
scas
or
sbb
push
adc
xor
pop
push
repnz
mov
adc
lea
add
adc
pop
mov
and
lea
pop
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
xor
fldcw
(bad)
pop
int
inc
jnp
sub
hlt
dec
mov
cld
sub
data16
inc
and
sbb
lods
cmc
and
xchg
and
mov
dec
in
sbb
lods
shl
sbb
into
xchg
and
enter
cs
dec
loope
adc
test
mov
enter
movs
cmp
pop
push
(bad)
xor
mov
pop
mov
movups
sub
pop
push
in
xor
lahf
xchg
pop
mov
movups
sub
popa
test
inc
mov
cli
and
xchg
sub
or
rcr
into
xchg
and
or
shl
int
sbb
xchg
pop
sub
cmp
mov
add
push
sub
and
mov
and
xchg
(bad)
mov
je
inc
outs
mov
jmp
ss
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
mov
jb
push
gs
ds
jnp
sub
hlt
push
xor
sbb
imul
inc
inc
sub
adc
test
mov
cmps
hlt
or
sub
mov
sti
sbb
scas
enter
or
adc
retf
and
jne
clc
and
xchg
cs
jbe
aam
ja
in
sbb
mov
rdtsc
ret
push
jno
pop
push
rcl
push
fistp
cmp
add
ins
test
lahf
push
fistp
add
or
mov
int3
or
aaa
or
cli
out
jno
mov
dec
loope
adc
test
add
pop
add
mov
or
xchg
lods
rcr
and
je
repnz
mov
sbb
xchg
add
scas
sub
jae
cmc
xchg
pop
mov
pop
adc
xor
dec
push
shl
push
fistp
cmp
add
ds
das
and
mov
or
(bad)
out
adc
sbb
pop
push
jbe
push
(bad)
xchg
pop
mov
movups
xchg
pop
push
dec
xor
pop
xchg
pop
mov
push
adc
mov
pop
push
call
xchg
pop
mov
or
push
lods
and
xor
pop
xchg
pop
mov
push
adc
in
pop
push
aaa
xor
mov
pop
mov
or
push
out
pop
push
inc
xor
dec
xchg
pop
mov
or
push
loope
pop
push
cmp
push
fbld
mov
or
(bad)
retf
movs
and
push
sbb
push
fistp
pop
mov
or
push
mul
pop
push
fidiv
push
fild
pop
mov
or
(bad)
sti
adc
repz
xor
mov
or
push
sub
pop
push
mov
xchg
pop
mov
or
push
and
pop
push
test
push
fistp
adc
push
and
xor
jb
pop
mov
pop
add
push
add
scas
jecxz
adc
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
js
xor
mov
movups
xor
pop
ins
repnz
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
xor
and
xor
inc
dec
sub
adc
stos
mov
iret
xchg
cmp
dec
xlat
sbb
retf
and
xchg
adc
lods
mov
fstp
call
cdq
pop
adc
cmps
mov
js
cmp
jnp
sub
hlt
adc
push
cmps
movs
push
jbe
scas
ds
hlt
sub
cmp
mov
sub
mov
jb
out
jb
mov
dec
loop
and
dec
repnz
adc
xor
pop
pop
repnz
mov
movups
and
xor
mov
movups
xor
pop
repnz
mov
movups
add
and
xor
mov
out
jb
push
inc
push
sub
sub
mov
add
inc
inc
sub
and
stos
mov
ret
xchg
cmp
movs
mov
ficomp
nop
shl
scas
xchg
sub
sar
loope
dec
int3
popa
lods
jns
sbb
or
fnsave
ja
in
mov
lods
mul
nop
cs
jne
sbb
inc
dec
fxam
dec
hlt
outs
mov
sub
or
cmc
ds
jnp
sub
hlt
add
cmp
cmp
fisttp
or
sbb
add
inc
sbb
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
out
sbb
lods
or
popa
inc
cdq
adc
push
cmps
jmp
push
(bad)
fdivr
jge
mov
pop
cmp
add
sub
and
dec
cld
push
cmp
push
inc
dec
sub
sub
jne
cld
add
push
sbb
mov
das
or
shl
or
int
inc
pop
(bad)
dec
rcl
adc
cmps
loope
gs
shl
ja
in
cmp
mov
mov
push
xor
pusha
dec
cld
and
shr
sbb
out
jnp
and
dec
and
shr
out
cli
out
jnp
and
aaa
hlt
shr
sahf
fsubr
mov
int
inc
inc
scas
sub
int3
cmp
int3
mov
jmp
imul
shl
jecxz
jecxz
xor
add
and
lods
push
fistp
shr
sub
out
xchg
mov
xchg
inc
inc
das
or
and
imul
add
push
add
scas
in
and
shl
or
int
dec
ins
jmp
pop
xor
mov
adc
and
push
push
xchg
pop
mov
dec
adc
xor
jl
icebp
xor
mov
add
push
xchg
pop
int
inc
inc
inc
sub
test
add
sbb
fdivr
or
test
mov
mov
jns
or
push
pushf
cwde
mov
aad
cmp
add
ins
push
and
dec
cld
scas
dec
inc
sbb
out
xchg
sbb
fdivr
or
test
lods
lock
mov
int
inc
inc
scas
sub
int3
cmp
int3
mov
jmp
pop
and
push
(bad)
jmp
mov
lea
sbb
pop
and
pop
jne
loope
fistp
cmp
adc
aas
dec
fsubr
and
ins
mov
dec
daa
lea
and
push
repnz
fnstsw
or
xor
pop
push
repnz
mov
movd
and
xor
fidivr
sub
xor
push
push
repnz
mov
bswap
lea
and
fidivr
jns
add
and
fidivr
sub
xor
xor
xor
xchg
sub
add
and
fdivr
add
xor
test
repnz
fdivr
mov
movs
xor
jae
repnz
mov
unpckhps
xor
imul
xchg
add
inc
or
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
push
bnd
fistp
adc
xor
push
repnz
enter
outs
adc
xor
push
repnz
int3
bound
sub
jge
sar
mov
mov
and
outs
sbb
jnp
or
lds
fimul
mov
sbb
inc
jnp
sub
hlt
jle
jns
pop
adc
cmps
mov
ds
inc
sub
hlt
adc
xor
mov
ds
jnp
cs
mov
xchg
adc
xor
pop
pop
repnz
mov
movups
and
xor
mov
movups
xor
pop
repnz
cmps
xchg
jb
sbb
ja
in
push
jge
mov
sub
push
sub
sub
push
mov
and
pop
sbb
ja
in
and
mov
repnz
jb
add
push
das
or
les
jmp
xchg
icebp
jge
out
ds
jnp
sub
hlt
imul
fs
sti
cmp
dec
repnz
add
adc
jbe
in
sbb
lods
or
lea
cld
sbb
sbb
mov
inc
fsub
fdivr
adc
xor
pop
inc
repnz
mov
movups
and
sbb
int3
test
or
push
call
inc
pop
(bad)
dec
retf
xchg
jbe
mov
push
mov
jge
or
inc
stos
enter
cs
jne
sbb
inc
pop
(bad)
dec
hlt
arpl
cdq
xchg
adc
fnstcw
push
int3
test
cdq
movups
fs
ret
adc
jge
lods
test
int3
jmp
mov
lock
and
adc
xor
jl
repz
and
xor
int
inc
inc
inc
das
inc
add
add
xor
and
xchg
lahf
push
iret
push
and
fisub
ret
scas
dec
retfw
out
pushf
cmp
dec
scas
fsincos
push
fisub
dec
mov
push
adc
mov
pop
push
shr
push
fistp
cmp
add
ins
mov
ret
xor
push
mov
cmp
out
jne
and
jnp
inc
imul
xchg
call
inc
lods
or
lea
cld
sub
push
cmp
ds
inc
inc
das
inc
add
sub
jle
ss
repz
mov
sbb
mov
jmp
not
out
mov
movups
adc
pop
push
repnz
fistp
pop
lods
je
push
adc
push
repnz
mov
xor
add
dec
mov
xchg
lods
and
dec
add
sbb
mov
jmp
in
in
scas
dec
data16
lock
call
dec
inc
inc
das
inc
add
sub
mov
adc
fdivr
adc
out
sbb
repnz
jbe
mov
or
lea
xor
(bad)
jecxz
add
(bad)
sbb
xor
mov
movups
adc
xor
pop
psllq
push
adc
movups
adc
xor
pop
xor
xor
mov
movups
pop
adc
xor
pop
or
xor
mov
movups
xor
pop
xchg
repz
mov
movups
adc
xor
pop
adc
xor
mov
movups
xor
pop
add
xor
mov
movups
pop
adc
xor
pop
in
repz
mov
movups
add
push
xor
pop
out
repnz
mov
movups
and
fs
or
dec
mov
prefetcht0
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
sqrtps
xor
adc
repnz
fistp
inc
lea
(bad)
fs
int3
test
stos
enter
push
fnstcw
jnp
adc
lea
cld
sub
push
pop
cmp
dec
in
xchg
mov
xchg
lods
enter
xlat
jne
sbb
inc
jae
lea
xchg
cs
mov
mov
dec
(bad)
popf
ds
pop
sub
dec
push
cld
add
push
cmp
xor
adc
mov
pop
mov
movups
daa
and
xor
mov
movups
sbb
pop
push
fbstp
push
fbld
inc
out
jb
push
jbe
(bad)
ds
jnp
sub
hlt
push
mov
or
xor
(bad)
sar
inc
jnp
sub
hlt
mov
adc
cmps
aam
jns
sub
and
and
jne
cld
add
arpl
sbb
sub
cmp
mov
sbb
push
sbb
inc
jb
or
int3
jecxz
dec
cmp
sbb
jns
or
mov
call
adc
and
pop
push
out
push
fbld
movups
or
je
dec
mov
adc
add
fstp
mov
scas
and
lock
sbb
out
xchg
mov
sbb
mov
hlt
xchg
(bad)
mov
loopne
loop
mov
or
sbb
inc
jnp
sub
hlt
pop
xor
push
cmp
inc
cmp
je
repz
dec
xchg
pop
mov
ficom
lea
daa
jl
sbb
pusha
(bad)
xchg
add
in
adc
movs
adc
pop
push
repnz
mov
aad
fwait
sub
add
sbb
movups
xor
fwait
push
repnz
mov
movups
xor
ins
push
repnz
dec
ins
fucomi
in
jb
push
gs
ds
inc
sub
imul
adc
sahf
mov
addr16
sbb
int3
jecxz
dec
mov
fisubr
fcomp
fiadd
jnp
inc
int3
or
mov
cli
out
js
sbb
pop
push
hlt
and
scas
sbb
push
adc
push
sub
fisub
cld
mov
or
imul
push
fistp
mov
movs
sub
rcl
mov
in
adc
adc
xor
pop
(bad)
xor
mov
movups
xor
pop
shl
push
adc
movups
adc
xor
pop
xchg
div
push
das
mov
movups
push
xor
pop
and
xor
mov
movups
add
push
xor
pop
pop
repnz
mov
movups
aaa
and
xor
mov
pop
mov
movups
add
push
aaa
and
xor
mov
movups
or
and
xor
mov
movups
add
push
and
xor
mov
movups
adc
and
xor
mov
movups
adc
cmp
pop
sub
mov
movups
push
adc
aaa
and
xor
mov
movups
adc
cmp
pop
mov
xor
mov
movups
push
adc
aaa
and
xor
mov
movups
and
xor
mov
movups
add
push
aaa
and
xor
mov
movups
add
push
xor
pop
mov
xor
mov
movups
push
adc
and
xor
mov
movups
push
adc
xor
xor
mov
movups
add
push
xor
pop
push
repnz
mov
movups
adc
xor
pop
fdiv
xor
mov
movups
adc
aaa
and
xor
mov
movups
adc
and
xor
mov
pop
(bad)
out
adc
adc
and
xor
mov
movups
adc
xor
xor
scas
and
lock
sub
out
xchg
mov
fs
push
repnz
mov
sidtd
xor
inc
push
repnz
mov
rdmsr
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
cvtps2pd
xor
movmskps
xor
fistp
dec
lea
and
push
repnz
mov
punpckldq
xor
daa
push
repnz
fistp
or
repnz
fistp
mov
movs
xor
popf
push
repnz
mov
cmpxchg8b
xor
mov
fistp
jmp
movs
xor
pop
push
repnz
mov
invd
mov
and
repnz
mov
cvtps2pi
and
push
repnz
fidivr
jmp
cli
out
jne
sbb
inc
push
fld
dec
mov
jns
hlt
enter
cs
jae
sar
dec
jnp
sub
hlt
mov
xor
push
pop
(bad)
cld
outs
jnp
sub
hlt
jp
jbe
and
push
cmps
mov
sub
sub
hlt
push
mov
dec
adc
(bad)
xchg
ds
push
sub
hlt
and
pop
cmps
xchg
push
aas
(bad)
mov
sub
hlt
mov
cdq
adc
sub
int3
test
dec
sbb
push
fnstsw
ds
xchg
int3
test
out
sbb
out
xchg
dec
sub
pop
int
inc
or
jge
and
js
movs
lock
jb
cmp
in
fisub
and
inc
xchg
fstp
jne
sbb
mov
sti
inc
imul
cli
out
jne
or
mov
out
imul
cli
out
jbe
xor
mov
and
mov
jb
push
and
jbe
aaa
inc
imul
cli
out
jne
or
mov
out
push
dec
cld
ins
sub
out
xchg
mov
or
sub
mov
out
xchg
pop
sub
int3
test
dec
sbb
push
xchg
fwait
jne
and
inc
inc
imul
add
and
repnz
mov
invd
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
ucomiss
xor
sbb
xor
mov
cmovb
xor
push
push
repnz
fistp
ja
add
and
push
repnz
fistp
push
out
and
fs
or
test
lods
(bad)
and
xchg
sbb
or
rol
mov
mov
sbb
inc
jnp
sub
hlt
jae
jge
sub
push
cmps
ret
(bad)
icebp
add
sub
hlt
pop
mov
cdq
push
adc
(bad)
popf
ds
jnp
cs
mov
push
cmp
sub
lds
sbb
shl
pushf
xchg
jl
jecxz
and
(bad)
and
shr
out
jb
aaa
inc
push
sub
sbb
cli
and
xchg
adc
or
shl
fist
sbb
inc
jnp
sub
hlt
jl
push
cdq
pop
adc
pop
sub
hlt
adc
cmp
sbb
ja
in
sub
mov
sub
sbb
or
sub
adc
data16
sbb
out
xchg
or
or
(bad)
and
shr
out
jb
jno
mov
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
pusha
repnz
mov
movups
xor
pop
adc
xor
mov
sbb
mov
call
ja
in
inc
jge
mov
imul
sbb
inc
inc
sub
sbb
lods
xchg
xchg
sub
mov
dec
iret
sbb
mov
rcl
pop
or
dec
mov
loopne
mov
icebp
mov
call
scas
dec
fistp
mov
lods
(bad)
and
xchg
or
mov
cld
sbb
fbld
xchg
and
movs
mov
leave
sbb
lods
fisub
xchg
adc
sar
sti
sbb
shr
movs
xchg
adc
mov
sub
mov
and
xchg
adc
inc
cs
hlt
mov
aaa
adc
(bad)
(bad)
cmp
in
and
mov
add
xor
cmp
mov
out
in
call
daa
xchg
and
xor
xchg
mov
aas
fbld
jb
movs
and
aaa
jbe
mov
or
push
xor
cmp
sub
push
repnz
ds
fidivr
add
jle
pop
int
or
int3
or
dec
jne
out
jge
sar
inc
js
pop
int3
or
pop
jne
out
jne
sbb
inc
inc
xchg
sub
int3
mov
push
adc
sahf
in
pop
pop
int
inc
pop
(bad)
jbe
push
dec
push
lea
xor
xor
jl
lock
nop
xchg
pop
mov
and
push
xor
inc
xor
and
not
xor
and
adc
adc
mov
cs
mov
or
lea
or
push
repnz
push
mov
in
movs
push
int
inc
dec
loope
dec
enter
jae
lock
xchg
adc
loopne
ds
dec
in
mov
or
mov
xchg
push
add
mov
in
mov
and
dec
inc
jns
sub
mov
bound
fwait
jne
and
stos
dec
imul
add
xor
in
sub
mov
sbb
ins
cmp
xor
jecxz
jbe
mov
or
lea
add
push
repnz
mov
push
adc
rcr
jbe
or
and
lock
sub
and
outs
into
dec
imul
adc
mov
ds
mov
cld
add
cmp
push
jns
or
stos
scas
or
cwde
mov
aad
cmp
add
ins
push
and
dec
leave
xchg
ss
mov
lods
pop
sahf
in
mov
jns
xchg
scas
je
unpckhps
out
xchg
sbb
loopne
ds
dec
in
mov
adc
dec
clc
sbb
xchg
adc
fistp
outs
lds
cmp
add
cmp
push
jns
or
push
pushf
cdq
mov
aad
cmp
add
ins
push
and
dec
movs
scas
je
fist
add
mov
xchg
lds
cmp
add
cmp
push
jns
or
scas
or
mov
imul
jge
rcr
data16
or
fs
mov
das
xchg
mov
and
call
xchg
lods
out
sbb
xchg
adc
mov
mov
dec
mov
xor
test
sub
xchg
dec
jmp
je
inc
push
lock
xchg
push
movs
jne
and
fs
scas
push
inc
mov
push
icebp
push
jge
fisub
shl
movs
xchg
adc
mov
cmovle
mov
rdtsc
sub
adc
(bad)
and
ja
fistp
cmp
add
ins
push
sub
movs
mov
pop
cld
sbb
ins
cmp
ds
inc
js
pop
int3
or
imul
jbe
push
ds
inc
js
pop
int3
or
ja
cli
out
jnp
sub
push
mov
sub
sub
sub
and
xor
xchg
test
mov
lods
push
mov
icebp
push
popf
(bad)
fisub
shr
out
jb
add
cs
and
aas
test
sbb
mov
sub
int3
pop
lods
pop
inc
sbb
add
call
xor
push
test
repnz
mov
sbb
mov
add
mov
aam
jb
or
dec
in
and
aas
test
dec
sbb
add
sbb
jns
sub
and
aas
test
stos
dec
sbb
sub
movs
adc
pop
push
repnz
fistp
push
xchg
push
fwait
jne
and
dec
dec
imul
add
ds
inc
adc
mov
out
pop
mov
or
(bad)
jecxz
push
push
and
push
fild
pop
mov
or
push
mov
push
xor
add
or
push
xchg
and
xor
or
adc
stos
and
xor
mov
or
push
(bad)
and
push
fist
or
lea
adc
movs
dec
and
xor
pop
mov
or
push
aas
and
xor
adc
adc
stc
and
xor
xor
adc
xor
xor
adc
adc
lods
and
aaa
push
fisttp
pop
mov
or
push
out
and
aaa
push
(bad)
xchg
pop
mov
or
push
xchg
and
push
pop
xor
xor
adc
retf
push
pop
aaa
push
fistp
xchg
pop
mov
or
lea
push
sub
push
cmps
aaa
push
fild
xchg
pop
mov
or
lea
push
js
pop
push
imul
pop
mov
or
(bad)
lds
pop
push
sti
aaa
push
fistp
pop
mov
or
(bad)
fist
push
jmp
pop
push
push
xor
mov
or
(bad)
hlt
adc
mov
aaa
push
fild
xchg
pop
mov
or
lea
or
sub
mov
and
call
lea
push
aas
and
xor
test
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
push
and
xor
adc
inc
adc
jp
pop
push
mov
xchg
pop
mov
movups
push
xor
ficom
lea
movs
pop
and
xor
leave
xchg
pop
mov
movups
mov
pop
push
jns
push
fild
xchg
pop
mov
movups
xchg
and
xor
or
(bad)
(bad)
adc
sti
and
xor
imul
sbb
jns
or
imul
adc
pop
cmps
call
arpl
sub
hlt
pop
mov
adc
jb
jo
sub
jge
mov
dec
cmp
xor
sub
out
in
jo
mov
cmp
sbb
inc
or
or
dec
fstp
inc
out
scas
push
cmps
cwde
push
and
addr16
hlt
sub
adc
mov
ja
mov
jno
mov
test
lds
out
xchg
push
sub
pop
int
inc
pop
retf
and
or
sbb
dec
fisub
and
je
lods
lock
jb
pop
push
jecxz
fisub
and
inc
call
cli
push
arpl
pop
outs
hlt
inc
imul
cli
out
jl
sub
mov
push
mov
das
add
xchg
pop
int
xlat
adc
mov
pop
mov
movups
and
xor
cmps
xchg
pop
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
int3
xor
(bad)
xchg
pop
mov
movups
jl
pop
push
mov
xchg
pop
mov
movups
or
scas
or
ret
jne
cld
xor
arpl
sub
mov
shl
retf
cmp
dec
ficomp
cdq
shl
xchg
lods
retf
xchg
cs
loope
loope
(bad)
xchg
sub
cmps
enter
mov
inc
jle
fwait
dec
enter
cwde
lock
push
mov
out
sbb
movs
enter
div
sbb
inc
dec
fldln2
dec
int3
xchg
dec
inc
cwde
enter
cs
jne
sbb
inc
jb
stc
dec
std
xchg
push
inc
lods
enter
cs
jne
sbb
dec
hlt
jnp
push
cmps
scas
push
inc
(bad)
xchg
ds
jnp
sub
hlt
and
add
sbb
jns
sub
scas
lods
and
aas
imul
movups
aas
and
xor
test
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
pop
and
xor
mov
push
jmp
ds
jnp
sub
hlt
push
mov
cdq
or
push
cmps
loopne
push
(bad)
sar
jnp
das
sub
hlt
mov
adc
cmps
aam
and
cmp
hlt
jns
dec
add
das
add
xchg
pop
int
ja
in
sbb
mov
sub
imul
inc
inc
sub
ds
mov
adc
pop
sbb
movs
mov
fsincos
dec
hlt
jns
push
mov
mov
dec
mov
sbb
hlt
push
mov
or
add
and
mov
shr
push
sub
jne
sbb
inc
pop
fsqrt
dec
rcl
into
push
xchg
mov
mov
imul
and
sub
cmp
xor
or
jb
dec
mov
cld
add
jns
or
scas
or
xchg
lods
jmp
add
mov
scas
leave
test
movs
call
adc
inc
sub
push
clc
and
sar
add
sbb
inc
or
cmps
scas
or
mov
add
cmp
out
jnp
adc
les
jle
mov
movups
add
je
repz
mov
dec
adc
xor
jl
repz
add
add
xchg
pop
int
dec
out
adc
test
sbb
add
sbb
jns
sub
jecxz
and
dec
sar
add
jns
sub
(bad)
scas
and
and
cmp
pop
movs
xchg
adc
aas
cmp
xor
cmp
mov
das
add
xchg
pop
int
popa
inc
and
imul
cmc
inc
mov
push
lock
and
fisub
shl
lock
call
dec
outs
jl
imul
sbb
mov
call
dec
out
adc
test
cmps
dec
sbb
add
mov
ds
adc
adc
mov
push
call
loope
outs
icebp
inc
imul
xor
inc
xor
and
rol
push
fistp
cmp
add
add
repnz
int3
pop
lods
pop
dec
sbb
push
mov
and
cmps
or
test
mov
push
lock
inc
retf
inc
loope
dec
aad
pop
inc
mov
push
lock
jbe
fisub
jmp
jecxz
outs
test
retf
xchg
sbb
fidivr
adc
xor
sbb
xor
pop
xchg
ds
stc
lea
leave
xchg
sbb
fidivr
adc
xor
not
xor
pop
mov
adc
ins
cmp
ds
inc
inc
sub
int3
pop
lods
cmp
adc
xchg
inc
jo
shr
inc
imul
push
call
loope
outs
loope
imul
fild
sub
repnz
scas
jbe
push
cmps
xor
lea
arpl
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
mov
ficom
lea
and
inc
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
fist
lea
ds
inc
adc
stos
and
dec
add
add
sub
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
repnz
push
fistp
adc
rcr
sub
xchg
popa
dec
cdq
adc
add
fdivr
dec
jnp
sub
hlt
pop
mov
cmp
push
dec
(bad)
in
dec
jnp
sub
hlt
jb
jne
cld
cmp
dec
sbb
inc
addr16
push
jge
mov
cmp
inc
or
adc
jne
cld
pop
cmp
sbb
inc
aas
sub
les
cmps
dec
hlt
mov
cld
add
inc
and
ror
dec
shr
out
pushf
mov
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
xor
mov
cvtps2pi
and
fs
bswap
test
lods
repz
xchg
cmp
dec
out
mov
popf
mov
push
xchg
retf
jne
sbb
inc
jns
loope
in
xchg
pop
inc
movs
enter
xlat
jne
sbb
inc
inc
loope
dec
shr
out
xchg
or
fwait
mov
(bad)
inc
hlt
pop
(bad)
jne
cld
sbb
ins
sbb
inc
js
ss
in
daa
jge
mov
and
xchg
(bad)
mov
fyl2x
inc
int3
fimul
cmps
xchg
sbb
mov
push
adc
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
dec
loope
outs
sub
imul
cs
mov
(bad)
dec
call
in
push
stos
cs
jne
sbb
inc
inc
loope
dec
shr
out
xchg
or
fwait
mov
loop
mov
lods
sti
and
xchg
sbb
mov
cmp
test
sbb
scas
lock
push
xor
fisub
shl
not
sbb
dec
jnp
cs
mov
push
sbb
and
add
push
repnz
mov
or
lea
or
push
repnz
pop
xchg
std
or
lea
ss
fsubr
and
shl
out
jb
add
mov
loope
outs
hlt
inc
imul
push
repz
mov
jg
push
fistp
mov
push
scas
into
fisub
xchg
push
dec
push
lea
mov
cwde
and
aaa
hlt
rol
out
jb
add
mov
sub
test
scas
lock
push
imul
mov
int3
xor
add
lods
xchg
pop
int
pusha
dec
ror
mov
and
movhps
adc
jae
cmp
pop
push
push
sub
int3
pop
lods
ret
lock
nop
push
cmps
jne
and
fisttp
int3
test
mov
out
jmp
das
inc
push
mov
sbb
mov
jmp
jecxz
int3
jge
test
jmp
movups
sbb
jb
mov
sbb
mov
jmp
in
sub
movs
dec
sbb
sbb
sub
sbb
mov
sysenter
xchg
sub
pop
mov
cmp
push
mov
out
mov
sbb
pop
push
fnstenv
push
ffreep
xchg
pop
mov
movups
popf
and
xor
lahf
xchg
pop
mov
push
adc
and
xor
mov
adc
jbe
pop
push
(bad)
xor
xchg
xchg
pop
mov
movups
xor
pop
push
das
xor
lods
xchg
pop
mov
or
push
push
and
xor
cmc
xchg
pop
mov
or
push
aad
pop
push
stos
xor
jb
pop
mov
push
adc
and
xor
inc
xchg
pop
mov
push
adc
scas
and
xor
mov
push
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jg
xor
mov
movups
xor
pop
adc
xor
mov
movups
add
and
xor
scas
ja
pop
sbb
cmp
dec
loope
mov
lods
shl
cs
sbb
inc
dec
fldl2t
dec
rcl
fisttp
stos
fbstp
sbb
inc
jnp
sub
mov
mov
sub
jne
sbb
dec
ret
xchg
cmp
enter
inc
sbb
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sub
lea
subps
sub
int3
pop
lods
add
or
push
and
lods
dec
loop
mov
lods
in
and
xchg
and
or
shl
rcl
ret
or
test
lods
icebp
and
xchg
cs
jne
sbb
inc
jnp
sub
hlt
arpl
add
jo
xor
in
cmp
cmps
sbb
jecxz
add
ds
dec
jecxz
mov
push
imul
xchg
and
retf
xor
inc
mov
out
mov
pop
loope
dec
into
scas
ja
or
lock
pushf
push
ins
movs
xor
push
push
repnz
mov
syscall
lea
and
repnz
scas
ja
and
lock
xchg
or
lahf
mov
(bad)
dec
aad
jle
scas
enter
cs
mov
dec
inc
adc
and
cdq
adc
cmp
sbb
and
mov
(bad)
dec
rcl
adc
mov
sbb
lods
or
xor
and
xchg
cs
jb
sar
push
jnp
and
ret
mov
lods
or
mov
dec
inc
adc
jne
inc
imul
das
sub
mov
inc
mov
cld
push
add
adc
dec
fucomp
aas
inc
addr16
push
(bad)
in
jb
add
dec
sub
xchg
inc
jecxz
test
ss
adc
xor
hlt
push
repnz
data16
lock
xchg
push
add
mov
xor
test
lods
out
sbb
xchg
adc
mov
and
mov
push
repnz
cmp
fisub
fidivr
adc
sbb
dec
lods
mov
movhps
push
arpl
retf
fbstp
xchg
pop
mov
or
lea
and
xor
outs
xchg
pop
mov
or
push
sub
pop
push
repnz
jns
pop
mov
movups
xor
pop
push
bound
push
fcomip
xchg
pop
mov
or
push
xchg
and
xor
add
adc
push
and
xor
mov
adc
mov
pop
push
pop
xor
dec
xchg
pop
mov
or
push
push
xor
push
xchg
pop
mov
push
adc
inc
and
xor
cmp
adc
sbb
xor
fist
adc
inc
and
xor
and
adc
aas
and
xor
mov
add
and
inc
or
out
call
adc
and
pop
push
out
push
fbld
adc
push
and
xor
xchg
xchg
pop
mov
movups
add
pop
push
enter
adc
inc
adc
js
pop
push
mov
xchg
pop
mov
movups
ins
and
xor
ficom
lea
push
sub
mov
dec
cdq
push
adc
jg
cmp
sub
sbb
jne
cld
das
cmp
cmp
dec
jmp
test
fnstenv
sbb
inc
inc
fpatan
dec
repz
sub
enter
movs
jne
sbb
dec
enter
fwait
enter
cs
mov
mov
dec
clc
xchg
add
enter
mov
gs
imul
imul
add
lea
sub
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
jl
pop
aaa
ret
out
jne
sbb
inc
dec
fld
inc
hlt
push
mov
or
pop
cmps
jecxz
inc
inc
sub
mov
ror
lds
das
or
shr
cmc
mov
in
xchg
pop
sub
scas
inc
(bad)
dec
into
xchg
jg
mov
cs
sar
ja
in
and
mov
and
xchg
push
cmp
fxtract
dec
int3
fmul
add
and
inc
or
scas
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
aad
push
fbld
repnz
jb
cmp
sub
scas
dec
lds
mov
lods
cli
and
xchg
and
mov
jmp
mov
test
xor
mov
ds
mov
and
xchg
adc
mov
sti
sbb
lods
lock
xchg
cs
mov
sub
int3
pop
lods
loope
sbb
pop
cmps
jmp
data16
fdivr
ja
out
sbb
cdq
cmp
or
sub
mov
and
int3
mov
dec
(bad)
clc
sbb
xchg
or
sar
jnp
test
repnz
in
cli
or
mov
int3
add
aaa
jp
cli
out
jne
and
dec
jmp
out
nop
push
jne
mov
ds
inc
dec
sub
int3
pop
lods
sbb
lock
xchg
fst
push
or
gs
sub
inc
mov
and
xor
stos
aam
stos
jecxz
push
adc
push
mov
fisub
ror
out
jb
add
mov
(bad)
and
dec
clc
sbb
xchg
push
lahf
jne
and
fs
mov
out
(bad)
sbb
mov
jmp
in
inc
sahf
scas
fwait
data16
sti
movups
ja
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
movups
xor
push
repnz
fistp
adc
xor
push
repnz
mov
jb
lea
mov
push
fistp
adc
xor
repnz
fistp
adc
xor
push
repnz
mov
jp
jb
add
loope
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fbstp
push
fisttp
movups
mov
push
in
es
cmp
sbb
pop
ds
jnp
sub
hlt
push
mov
push
sbb
outs
sbb
mov
sbb
inc
inc
fldpi
inc
hlt
imul
pusha
(bad)
sti
ds
jnp
sub
hlt
jge
dec
cmp
push
add
scas
jecxz
adc
mov
movups
xor
pop
inc
repnz
mov
movups
mov
mov
sub
and
xchg
cs
jne
sbb
inc
dec
fnop
dec
(bad)
scas
cs
mov
sti
out
xchg
mov
sti
sbb
lods
jmp
mov
loope
dec
aam
cs
mov
sti
out
xchg
mov
fs
push
repnz
mov
sidtd
xor
dec
push
repnz
scas
jno
stc
sbb
cmp
jnp
sub
hlt
push
mov
add
sbb
mov
sbb
or
mov
cld
add
xor
das
inc
mov
add
jb
or
sub
mov
(bad)
dec
hlt
pop
mov
ret
jo
push
xor
inc
xor
and
loop
inc
shl
mov
mov
rdtsc
arpl
push
movs
and
push
push
fistp
cmp
add
ins
mov
cmp
jecxz
adc
mov
movups
xor
pop
cmp
xor
mov
movups
xor
pop
pop
repnz
mov
movups
xor
pop
and
xor
mov
movups
xor
pop
daa
repz
mov
movups
add
push
xor
pop
mov
xor
mov
movups
add
push
xor
pop
cmp
xor
mov
movups
xor
pop
fdiv
xor
mov
in
lock
xchg
mov
fs
push
repnz
mov
sidtd
xor
inc
push
repnz
mov
rdmsr
lea
and
repnz
mov
(bad)
lea
and
repnz
fistp
pop
sahf
jecxz
js
int
inc
pop
fld
dec
int
gs
lods
enter
cs
jl
aam
jl
adc
hlt
bound
or
ror
gs
loopne
jge
cmp
jge
mov
and
xchg
or
stos
mov
out
out
ret
scas
add
mov
jecxz
test
int
dec
shl
pop
mov
add
lea
xor
push
fistp
adc
aam
retf
int3
dec
hlt
dec
mov
adc
sbb
fdiv
ja
out
sbb
stos
lock
sahf
jecxz
sbb
fiadd
add
jge
mov
in
sub
je
sar
ja
call
das
inc
mov
cli
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
int3
pop
lods
je
sbb
push
xchg
in
pop
ds
jnp
sub
hlt
push
mov
add
add
jmp
mov
cli
xchg
or
lea
bound
int3
pop
mov
fnsetpm(287
in
jb
or
sub
mov
(bad)
dec
hlt
pop
lea
repnz
push
test
xor
pop
jo
xor
pushf
dec
pop
mov
daa
mov
add
and
xor
xchg
movs
pop
mov
sbb
xchg
sbb
mov
and
mov
repnz
jb
add
mov
loope
outs
push
inc
imul
and
mov
repz
and
push
push
adc
add
cmp
mov
outs
adc
xor
push
repnz
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
mov
dec
mov
pop
test
div
movups
aas
and
xor
test
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
push
and
xor
adc
inc
adc
sub
sub
cdq
push
adc
cmps
hlt
push
jno
fistp
inc
jnp
sub
hlt
pop
mov
add
pop
cmps
fmul
jbe
jmp
inc
jnp
sub
hlt
ins
mov
cld
push
cmp
cmovno
aaa
ja
in
and
jne
hlt
sbb
xchg
or
(bad)
mov
(bad)
fs
or
test
mov
nop
xor
dec
push
repnz
mov
prefetchw
xor
inc
inc
adc
imul
cli
push
call
inc
pop
(bad)
dec
call
adc
cmps
fisttp
jns
and
int
and
and
call
ja
jmp
mov
mov
je
scas
or
xchg
pop
mov
movups
and
pop
push
loope
push
fild
add
push
and
pop
sub
mov
and
xchg
cs
jo
mov
dec
mov
es
inc
mov
cld
add
inc
dec
sub
mov
stc
sbb
mov
loop
sahf
pop
int
inc
jnp
sub
movs
mov
or
test
and
cmps
push
fistp
xor
push
adc
mov
add
mov
sahf
or
int
inc
pop
loope
inc
int3
pop
lods
repnz
sbb
iret
scas
and
xor
icebp
xor
and
sbb
push
adc
pop
push
ficomp
pop
lods
sti
sbb
pushf
in
push
jne
xor
push
push
repnz
mov
bswap
lea
and
push
repnz
fidivr
dec
xor
mov
repnz
mov
(bad)
mov
and
fidivr
data16
and
push
repnz
fidivr
xchg
mov
and
fidivr
sbb
add
and
aad
sub
lock
std
cli
out
xchg
mov
fs
push
repnz
mov
nop
xor
dec
push
repnz
mov
rdpmc
lea
and
repnz
mov
(bad)
lea
and
repnz
scas
jl
xchg
sbb
out
nop
cs
pop
ds
jnp
sub
hlt
push
mov
add
add
sub
and
mov
sbb
pop
sbb
inc
push
in
sub
stos
mov
setle
sbb
dec
stc
xchg
pop
mov
pop
adc
xor
pop
push
repnz
mov
adc
jns
or
pop
hlt
dec
mov
cld
add
arpl
push
inc
dec
sub
mov
shl
stc
mov
out
xchg
pop
sub
cmp
movs
mov
not
cmp
or
inc
int3
push
lods
das
dec
sbb
add
inc
adc
movs
xor
pop
push
repnz
push
fistp
adc
xor
dec
inc
sbb
sbb
inc
imul
adc
cmps
test
inc
jnp
sub
hlt
pop
or
adc
gs
ds
jnp
and
xor
out
cmps
loopne
jns
sub
loope
out
and
dec
sti
and
xchg
cs
jb
fstp
ja
jmp
push
jecxz
pop
push
add
xor
fistp
pop
mov
or
lea
and
push
fist
or
lea
and
push
inc
aaa
push
fbstp
nop
pop
mov
or
lea
push
icebp
and
xor
push
xchg
pop
mov
movups
lahf
and
xor
pop
mov
or
push
mov
pop
push
xor
xchg
pop
mov
or
lea
and
push
pusha
xor
mov
pop
mov
or
lea
and
xor
ja
pop
mov
or
lea
adc
movs
cld
and
xor
sub
adc
aad
pop
push
shl
pop
mov
or
push
cmc
and
push
fistp
mov
or
lea
and
xor
aam
pop
mov
or
lea
daa
pop
push
jne
push
fist
or
lea
movs
(bad)
and
xor
pop
mov
or
(bad)
fst
push
call
xor
imul
push
dec
and
push
(bad)
nop
pop
mov
or
lea
push
int3
and
xor
leave
xchg
pop
mov
or
(bad)
int3
adc
jecxz
pop
push
cmp
push
fild
xchg
pop
mov
or
lea
adc
movs
or
pop
push
call
xchg
pop
mov
or
jns
sub
dec
test
inc
test
test
adc
aas
and
xor
test
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
push
and
xor
adc
inc
adc
jp
pop
push
mov
xchg
pop
mov
movups
outs
and
xor
fcom
lea
push
inc
and
xor
retf
xchg
pop
mov
movups
mov
pop
push
jg
push
fild
xchg
pop
mov
movups
call
fisttp
xchg
pop
mov
movups
clc
and
xor
imul
loopne
push
sub
xchg
cdq
push
adc
cmps
hlt
push
push
(bad)
fistp
sbb
sub
hlt
pop
mov
cdq
add
sub
fmul
push
(bad)
jmp
ja
in
cmp
jne
cld
push
cmp
add
sub
pusha
jge
mov
xor
inc
push
sub
aas
jge
mov
cmp
das
sbb
ja
in
jle
dec
mov
and
xchg
ss
mov
loope
aad
call
test
fs
pop
int
sbb
int3
test
aad
lock
call
push
push
mov
lock
xchg
xor
es
int
inc
sbb
jbe
and
outs
mov
lock
jb
sub
int
inc
inc
retf
and
cwd
sbb
out
xchg
sub
int
inc
inc
retf
and
dec
mov
lock
jb
push
jns
sub
sub
mov
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
lahf
xchg
pop
mov
movups
sbb
xor
mov
lea
adc
jo
pop
push
mov
push
fcomip
xchg
pop
mov
movups
and
xor
movs
xchg
jb
aas
inc
push
sub
sub
mov
add
push
sub
or
mov
std
mov
ret
nop
fidiv
sbb
inc
(bad)
fxtract
dec
rcl
mov
fldcw
stos
jne
sbb
dec
(bad)
xchg
cmp
enter
cs
mov
add
lea
scas
jge
inc
sbb
out
xchg
pop
cmp
dec
(bad)
dec
lds
adc
cmps
fimul
dec
(bad)
jnp
sub
hlt
outs
mov
cld
and
inc
ins
and
cdq
dec
aad
xchg
rcr
test
sbb
fistp
fstp
inc
cdq
inc
adc
int
xor
dec
shl
call
mov
out
jb
js
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
and
xor
mov
sbb
mov
jmp
in
or
jne
cld
sub
sbb
inc
inc
sub
jno
add
adc
pop
sbb
jne
pop
ja
in
bound
mov
adc
fs
ds
jnp
sub
hlt
push
mov
sti
and
xchg
or
mov
fistp
(bad)
ret
inc
lods
enter
shl
in
inc
je
sti
inc
int3
das
mov
pop
adc
sahf
in
sub
pop
(bad)
inc
hlt
push
mov
add
push
jns
in
ss
in
mov
xchg
inc
inc
cdq
xor
add
clc
aaa
ja
jecxz
jbe
mov
or
push
xor
ror
xor
or
ja
out
jnp
and
adc
sub
sbb
mov
sbb
stos
or
pop
inc
xchg
lock
xchg
push
clc
push
cli
enter
loope
dec
int3
das
mov
pop
adc
sahf
in
sub
pop
int
dec
ins
in
pop
fistp
xor
sbb
dec
xchg
scas
jge
cwde
sbb
out
xchg
sbb
xor
and
sbb
xchg
sbb
sbb
aas
lds
mov
xchg
push
clc
push
pop
retf
fisub
(bad)
mov
xor
mov
lock
sub
shr
mov
in
sub
pop
loope
dec
(bad)
scas
sub
lock
dec
cld
out
xchg
mov
loope
dec
shr
out
xchg
push
xor
lahf
inc
dec
loope
outs
jge
imul
add
and
xor
xchg
mov
mov
sub
mov
repz
dec
xchg
pop
mov
mov
jbe
fistp
aaa
test
scas
sub
lock
sar
out
xchg
mov
shl
call
mov
add
mov
loope
dec
shr
out
pushf
adc
or
push
repnz
pop
mov
xor
mov
xor
dec
call
xor
push
mov
call
mov
call
dec
out
in
sub
cmps
dec
sbb
sbb
sub
sub
cmps
dec
sbb
sub
movs
or
adc
data16
adc
fistp
xchg
test
int3
dec
hlt
scas
sub
lock
xor
out
xchg
mov
shl
call
mov
out
jb
add
mov
loope
dec
shr
out
pushf
cmp
adc
xor
pop
repnz
dec
push
daa
xchg
xor
and
adc
fs
ds
inc
popa
sub
int3
add
dec
jne
out
jo
pop
cmp
in
adc
mov
inc
jmp
mov
into
adc
adc
movups
sbb
dec
lahf
scas
jge
nop
sbb
out
xchg
adc
xor
and
scas
xchg
sbb
sbb
push
fistp
adc
sbb
inc
shl
add
cmp
xor
push
repnz
outs
pop
mov
push
push
xor
pop
push
repnz
ins
pop
mov
pusha
adc
xor
pop
push
repnz
pop
pop
mov
pop
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
stos
pop
mov
pop
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
scas
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
in
xor
lahf
xchg
pop
mov
movups
sbb
pop
push
shl
fisttp
movups
or
xor
cli
xchg
pop
mov
movups
arpl
pop
push
in
mov
dec
cld
cmp
add
mov
stc
sbb
cmc
and
xchg
or
mov
sub
xchg
sbb
test
ror
fidiv
cli
ss
call
sub
enter
cmps
jb
xchg
js
inc
sub
hlt
adc
adc
adc
mov
sub
pop
adc
sbb
xchg
push
sti
push
(bad)
fisub
shr
aaa
jge
cli
out
jnp
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
dec
int3
push
lods
push
sbb
push
xchg
cs
mov
(bad)
dec
rcl
jmp
sbb
inc
inc
fldl2e
dec
hlt
push
jne
call
xchg
push
sti
push
cmps
int3
fisub
hlt
dec
mov
cld
pop
cmp
inc
inc
sub
cmp
mov
and
xchg
cs
pop
cmp
(bad)
in
cmp
mov
sub
jnp
mov
repnz
mov
movups
xor
pop
dec
repnz
mov
mov
inc
repnz
jb
aaa
inc
push
sub
sbb
mov
sbb
push
sub
jecxz
loope
outs
pop
inc
imul
cs
jl
fidivr
push
jnp
sub
hlt
pop
mov
add
add
sbb
jns
sub
mov
lods
into
test
scas
enter
in
or
sub
mov
jecxz
jmp
push
test
and
bound
inc
imul
das
sub
daa
jge
movs
and
sub
mov
sbb
mov
in
xchg
pop
sub
and
repnz
repz
push
nop
xor
jecxz
dec
movs
mov
movhps
sbb
jns
or
mov
pusha
cmps
xchg
sbb
(bad)
mov
loope
outs
adc
mov
sahf
xchg
push
fs
cmp
retf
and
bound
and
or
push
repnz
pop
xchg
ret
lods
adc
xor
je
repnz
mov
push
cli
enter
movs
add
pop
push
repnz
mov
or
push
pop
and
xor
retf
mov
or
push
pop
and
xor
daa
xchg
pop
mov
push
adc
xor
pop
push
int
push
fistp
xchg
pop
mov
or
push
and
push
or
push
(bad)
xchg
pop
mov
or
push
(bad)
and
xor
cld
xchg
pop
mov
or
push
xchg
and
xor
mov
adc
mov
xor
ds
pop
mov
or
lea
and
xor
adc
pop
mov
push
adc
scas
and
xor
push
xchg
pop
mov
push
adc
shl
pop
push
jnp
push
fbld
pop
mov
or
push
or
pop
push
in
ds
pop
mov
add
jb
add
push
sti
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fnsave
push
fisttp
movups
or
xor
sti
xchg
pop
mov
movups
popa
and
xor
in
pop
mov
movups
push
and
xor
(bad)
xchg
pop
mov
add
adc
dec
mov
cld
sub
sbb
sub
add
jne
cli
and
xchg
sbb
mov
dec
rcr
ror
rcl
cmp
out
ficomp
loope
xchg
mov
mov
(bad)
fwait
cmp
in
es
mov
and
xchg
mov
sbb
inc
int3
jl
push
mov
cli
out
jnp
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
fstp
mov
xchg
popa
inc
mov
cs
jne
sbb
inc
pop
(bad)
dec
rcl
push
mov
sbb
inc
jno
loop
rcl
push
mov
repnz
inc
sbb
shl
imul
adc
cmps
jmp
popa
(bad)
fdiv
ja
out
sbb
test
fisttp
jo
in
ja
in
cmp
mov
sbb
dec
sbb
mov
inc
loope
outs
test
mov
xchg
or
sbb
xchg
pop
mov
add
and
xor
mov
movups
xor
pop
js
xor
xchg
xchg
jb
cmp
out
sbb
lods
repz
xchg
xor
mov
sti
sbb
jmp
pushf
fcmovnu
mov
cs
mov
sti
xchg
adc
mov
fldlg2
dec
hlt
pusha
mov
cmp
cmp
sbb
sub
cmp
mov
cmps
call
sub
call
mov
push
test
leave
jne
sbb
inc
pop
(bad)
inc
shr
sbb
xchg
push
test
and
inc
pop
loope
outs
mov
in
push
push
mov
not
mov
inc
mov
and
pop
sahf
out
sub
pop
loope
dec
leave
scas
push
inc
mov
stc
out
xchg
mov
addr16
int3
jl
push
mov
cli
out
mov
icebp
and
adc
data16
adc
xor
jl
lock
push
xchg
pop
mov
dec
inc
xor
retf
push
int3
test
lods
in
sbb
mov
jmp
in
and
dec
pop
fninit
jmp
xor
dec
in
xchg
shl
out
jb
pop
in
and
daa
outs
call
std
pushf
jmp
and
repnz
mov
lgs
and
fidivr
je
add
and
fidivr
jae
add
and
repnz
fistp
cmc
lea
and
push
repnz
mov
cmovp
and
fistp
inc
mov
and
fidivr
pop
sahf
jmp
fimul
mov
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
adc
jmp
fiadd
add
inc
hlt
dec
mov
or
push
jno
aam
push
jnp
sub
hlt
bound
add
(bad)
loopne
ja
in
cs
mov
and
xchg
shl
sbb
push
stos
xchg
jb
xchg
mov
repnz
mov
movups
xor
pop
dec
repnz
scas
xchg
jb
or
sub
and
stos
mov
push
cwde
cs
repz
dec
mov
inc
mov
adc
bound
cmp
pop
(bad)
inc
hlt
pop
or
sbb
fwait
push
std
push
int3
int3
fisub
fistp
sbb
add
and
repnz
mov
jecxz
leave
sti
out
xchg
mov
stc
sbb
lods
enter
div
and
dec
inc
push
or
inc
imul
std
(bad)
jmp
mov
scas
add
lock
test
out
xchg
mov
push
or
cdq
add
cmp
cmp
jnp
adc
xor
jne
adc
and
dec
inc
push
or
mov
push
adc
mov
pop
push
fisub
mov
rdtsc
cmp
test
pop
push
loope
dec
shr
adc
lea
pop
push
repnz
push
fistp
adc
xor
repnz
pop
mov
jecxz
lea
xchg
pop
push
repnz
push
fistp
adc
xor
pop
push
bnd
pop
mov
add
lea
and
rcl
retf
pop
mov
dec
adc
xor
push
repnz
mov
popa
adc
xor
dec
xchg
in
and
test
mov
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
in
xor
popf
xchg
pop
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
das
xor
and
pop
cmp
test
(bad)
dec
enter
cdq
add
cmp
cmp
pop
fchs
dec
hlt
ins
mov
pop
cmp
lods
mov
loope
dec
int3
scas
jns
push
sbb
push
ins
movs
xor
push
push
repnz
mov
(bad)
lea
and
repnz
scas
jns
or
cmp
dec
sti
sbb
lods
cmc
and
xchg
or
mov
loope
outs
dec
inc
imul
jmp
dec
(bad)
inc
hlt
pop
mov
repnz
adc
xor
pop
pop
repnz
mov
movups
sub
mov
lods
int
and
and
xchg
cs
jne
sbb
inc
dec
(bad)
dec
int3
jle
dec
mov
cli
out
jno
sar
jnp
sub
mov
add
outs
pop
add
mov
loope
mov
dec
stc
and
xchg
cs
jo
fidivr
ja
call
mov
mov
rdtsc
into
pop
adc
jno
pop
push
rcr
mov
(bad)
sub
ins
test
cdq
push
fistp
add
in
mov
shr
out
jb
add
jl
repz
gs
pop
mov
xchg
adc
cmp
jbe
fistp
xchg
mov
and
push
repnz
fistp
inc
mov
and
push
repnz
mov
jb
movs
xor
xchg
push
repnz
fistp
sbb
and
push
repnz
fidivr
sbb
and
fidivr
ja
add
and
push
repnz
mov
movups
xor
pop
push
repnz
scas
push
inc
mov
cli
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
cmp
lea
sbb
push
fistp
out
jb
push
dec
pop
ds
jnp
sub
hlt
push
mov
or
or
shl
ja
in
(bad)
shr
ret
shl
in
inc
dec
fsincos
dec
hlt
jns
inc
cdq
and
xor
add
mov
loope
outs
adc
mov
lea
and
repnz
mov
invd
lea
and
repnz
scas
jp
adc
cmp
dec
in
mov
lods
sti
and
xchg
adc
mov
loope
dec
int3
push
lods
daa
dec
sbb
or
push
or
hlt
pop
mov
cld
push
cmp
add
and
inc
inc
sbb
add
inc
imul
or
lea
sub
cmp
fistp
adc
or
mov
sub
and
xchg
pop
cmp
pop
loope
dec
int3
push
lods
dec
dec
sbb
or
test
(bad)
fnstsw
ja
in
mov
mov
jmp
xchg
pop
int
inc
pop
loope
dec
int3
push
lods
mov
sbb
or
inc
or
test
xchg
sub
adc
xor
pop
push
repnz
pop
xchg
pop
or
imul
dec
into
scas
jp
add
lock
xchg
or
test
hlt
bswap
test
scas
loop
adc
sbb
inc
(bad)
out
jl
test
daa
xchg
and
xor
xchg
mov
cmp
mov
jbe
mov
or
push
xor
aaa
mov
sub
adc
xor
je
repnz
test
rdtsc
aad
adc
sahf
and
xor
scas
jnp
pop
cmps
das
adc
xor
pop
push
repnz
push
fistp
adc
xor
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
pop
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
(bad)
out
jb
add
push
cli
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
movups
sbb
pop
push
fbstp
push
fisttp
adc
push
and
xor
stos
xchg
jb
or
sub
and
mov
pop
cmp
cmp
inc
fld1
inc
hlt
mov
aaa
sbb
pop
sbb
inc
imul
mov
or
sub
out
and
(bad)
mul
movups
aas
and
xor
test
movups
adc
pop
push
in
cs
xor
sbb
lock
jle
ret
ds
jnp
sub
hlt
push
mov
push
adc
cmps
in
inc
jp
xor
out
push
dec
stc
and
xchg
or
test
sbb
hlt
pop
mov
std
and
xchg
push
jle
lods
and
inc
dec
loope
outs
test
mov
lea
and
repnz
mov
clts
lea
into
fs
test
lods
std
and
nop
push
fnstcw
inc
sbb
push
out
jb
or
push
and
mov
(bad)
dec
rcl
jmp
sahf
pushf
or
dec
mov
inc
xor
and
fwait
cs
jl
aam
ja
sar
fistp
cmp
add
or
and
mov
or
lea
push
scas
and
xor
add
adc
xor
push
fistp
or
lea
push
popf
and
ss
fild
or
lea
and
xor
rcl
adc
inc
and
xor
les
adc
mov
xor
retf
mov
or
lea
adc
movs
data16
aaa
push
fild
or
lea
and
xor
ja
pop
mov
or
lea
and
push
loope
push
fild
or
push
imul
fbld
xchg
pop
mov
or
lea
push
cs
pop
push
push
xor
fist
adc
aas
and
xor
pop
mov
or
push
cmp
pop
push
mov
push
(bad)
xchg
pop
mov
or
push
mov
xor
cmp
or
push
push
and
xor
push
xchg
pop
mov
or
lea
and
push
fist
or
push
sahf
and
xor
mov
or
lea
and
aaa
push
fistp
nop
pop
mov
sub
dec
sbb
jns
or
xchg
call
adc
and
pop
push
out
push
fbld
adc
push
and
xor
xchg
xchg
pop
mov
movups
push
and
xor
adc
inc
adc
jp
pop
push
mov
xchg
pop
mov
movups
imul
push
(bad)
xchg
pop
mov
movups
pop
and
xor
retf
mov
movups
mov
pop
push
jle
push
fild
xchg
pop
mov
movups
call
fisttp
xchg
pop
mov
movups
stc
and
xor
mov
retf
in
jb
pop
inc
push
sub
sub
jne
cld
pop
cmp
sbb
inc
sub
sbb
cdq
adc
aam
inc
push
push
ja
in
cmp
jne
cld
cmp
sbb
push
sub
add
mov
and
xchg
push
cmp
mov
fst
inc
mov
xchg
push
cdq
test
sbb
dec
(bad)
xchg
sbb
xchg
enter
cmp
adc
int3
test
fstp
out
xchg
and
add
fiadd
retf
and
push
mov
and
int
mov
and
inc
loope
dec
out
jb
push
inc
pushf
or
mov
call
jmp
test
or
inc
cmps
xchg
mov
in
xchg
pop
and
push
(bad)
mov
movups
and
xor
mov
movups
xor
pop
jl
xor
mov
movups
xor
pop
adc
xor
mov
movups
add
and
xor
mov
sbb
mov
in
xchg
pop
sub
push
jge
mov
cmp
sbb
ja
in
arpl
mov
and
xchg
adc
mov
dec
aam
pushf
rcl
rcl
and
out
mov
mov
mov
mov
loope
dec
out
fs
pop
lock
call
inc
jnp
sub
hlt
pop
mov
pop
cmp
sbb
js
or
ret
xchg
inc
inc
mov
(bad)
sbb
inc
dec
fyl2x
dec
rcl
mov
xchg
cmps
jne
sbb
dec
hlt
pop
mov
inc
adc
std
sbb
jns
sub
cdq
dec
retf
and
dec
bnd
add
xor
mov
movups
xor
pop
jo
xor
mov
movups
xor
pop
repnz
nop
xchg
jb
pop
inc
push
sub
adc
mov
and
xchg
cmp
dec
mov
mov
(bad)
mov
ret
xchg
cmp
(bad)
and
mov
or
ja
in
adc
mov
and
xchg
and
cli
inc
dec
ftst
dec
int
inc
inc
mov
fidiv
sbb
inc
pop
loope
dec
int3
jns
addr16
push
jbe
out
jae
fnstsw
ja
in
mov
stos
enter
fimul
data16
jnp
sub
hlt
outs
mov
sti
and
xchg
push
cmp
push
repnz
mov
movups
xor
dec
ins
jecxz
inc
push
jl
test
daa
xchg
xor
mov
add
mov
pop
int
push
inc
push
lods
dec
inc
fistp
pusha
mov
bound
or
and
lock
or
ret
stos
or
jmp
cmp
dec
cwde
(bad)
push
fisub
inc
push
jmp
(bad)
out
xchg
mov
retf
and
dec
cld
add
pop
sbb
push
or
cmps
scas
or
lods
dec
inc
(bad)
jmp
cli
or
sub
and
mov
cmc
out
jb
sub
pop
push
push
and
mov
adc
sahf
cmc
sub
jno
test
fs
sbb
out
xchg
push
mov
idiv
gs
add
mov
inc
imul
adc
sahf
lahf
or
sub
jecxz
and
bound
and
or
push
repnz
pop
xchg
neg
movs
xor
jl
repnz
or
sahf
cmc
sub
pop
int
inc
inc
loope
dec
out
fs
lock
xchg
push
mov
idiv
gs
add
sub
inc
imul
adc
sahf
lahf
or
sub
pop
scas
and
shr
cmp
push
mov
outs
mov
les
jle
mov
xor
repz
push
nop
or
or
call
push
xchg
retf
fisub
lds
jmp
stos
cld
out
xchg
mov
loope
dec
int3
jns
addr16
add
jnp
sub
pusha
mov
sub
sub
movs
add
ret
outs
sub
lock
push
loope
inc
retf
dec
clc
and
lds
jmp
pop
std
out
xchg
mov
loope
dec
clc
scas
fs
lock
xchg
push
aam
popf
and
fs
jle
or
daa
xchg
sub
add
test
fs
lock
pushf
cmp
jnp
nop
aaa
dec
retf
xchg
rol
out
jb
sbb
sub
and
mov
sub
pop
jo
xor
xchg
sub
mov
daa
xor
mov
retf
and
dec
les
lea
and
xor
xchg
or
or
xor
pusha
inc
into
and
push
lea
mov
test
ror
mov
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
jno
mov
out
adc
xor
push
repnz
pop
mov
add
lea
jmp
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
adc
add
dec
pop
push
repnz
mov
or
lea
enter
popa
push
fistp
add
ret
push
jo
ret
sbb
or
sbb
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
repnz
int3
dec
lods
xchg
dec
sbb
or
sar
jnp
sub
hlt
push
mov
add
push
dec
(bad)
in
ds
jnp
das
jge
mov
push
cmp
cmp
inc
fdecstp
dec
(bad)
xchg
push
inc
fwait
enter
cs
xchg
xchg
inc
inc
fld
inc
test
cs
test
loope
dec
int3
jp
inc
mov
cli
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
or
sbb
inc
mov
cli
out
jne
sbb
inc
jnp
sub
hlt
push
mov
cld
and
push
push
inc
inc
sub
adc
xchg
das
cmp
dec
loope
outs
xor
mov
xchg
(bad)
mov
(bad)
dec
rcl
adc
(bad)
in
ja
in
sbb
movs
lock
sahf
sahf
or
sub
xchg
mul
movups
and
xor
scas
xchg
pop
mov
movups
sub
mov
jne
cmc
and
xchg
or
test
out
mov
xchg
mov
xlat
xchg
pop
add
scas
in
cmp
stos
mov
push
sub
jne
sbb
inc
pop
fldlg2
dec
int3
daa
mov
cld
adc
xchg
pop
int
ja
call
jge
cdq
add
cmp
pop
repnz
stos
xchg
stos
lock
push
xchg
push
loopne
mov
into
sub
push
dec
push
lea
mov
mov
bswap
test
mov
hlt
sub
inc
imul
dec
inc
fucomi
in
jb
add
dec
sub
xchg
inc
jecxz
test
adc
adc
xor
hlt
push
repnz
scas
mov
out
jb
add
inc
iret
test
stos
lock
push
xchg
push
loopne
pop
into
fisub
int3
scas
push
inc
test
(bad)
sub
stc
out
xchg
mov
xor
dec
int3
dec
lods
fimul
lock
sbb
jb
mov
or
lea
or
push
repnz
dec
inc
repnz
push
mov
xor
pop
test
xor
mov
movups
adc
xor
pop
push
repnz
mov
movups
xor
pop
pop
repnz
mov
movups
pop
adc
xor
pop
(bad)
xor
mov
movups
add
push
xor
pop
adc
xor
mov
movups
pop
adc
xor
pop
jbe
xor
mov
movups
pop
adc
xor
pop
or
mov
movups
add
push
xor
pop
pop
lock
mov
movups
add
push
xor
pop
mov
xor
mov
movups
xor
pop
push
repnz
mov
movups
and
fs
int3
test
mov
nop
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
xchg
pusha
mov
(bad)
lea
and
fistp
inc
lea
and
push
repnz
lods
loopne
sbb
push
xchg
cs
(bad)
sbb
inc
jne
fimul
xchg
jge
cdq
add
push
dec
(bad)
in
ds
jnp
sub
hlt
push
jne
cld
sbb
inc
sbb
inc
outs
sub
push
jge
cmps
mov
lods
xchg
sub
sar
sti
sbb
shr
mov
mov
loope
dec
int3
jnp
dec
inc
fistp
jb
add
loope
and
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fnsave
push
fbld
adc
jb
push
pop
pop
ds
add
jge
movs
mov
not
adc
or
(bad)
shl
ret
cmp
inc
add
mov
inc
imul
std
or
sub
and
cmps
mov
pop
cmps
fimul
pusha
(bad)
in
push
jnp
sub
hlt
jae
dec
sar
lea
rcr
lods
or
pushf
pop
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
sub
sbb
cmp
ret
ds
jnp
sub
hlt
push
mov
push
cmp
sbb
xchg
and
out
lock
xchg
cs
mov
into
inc
jnp
sub
hlt
push
mov
pop
adc
cmps
in
jl
out
cmp
jmp
retf
xchg
sbb
lods
mov
bswap
test
cdq
pop
push
cmp
mov
sbb
inc
jnp
sub
hlt
push
sbb
pop
push
add
dec
inc
add
mov
mov
push
add
scas
jecxz
inc
pushf
and
dec
sbb
add
int
dec
inc
xor
pop
mov
sahf
cdq
or
arpl
xor
and
xchg
or
ret
push
or
inc
jne
xchg
dec
mov
sbb
push
xor
pop
inc
rcl
push
fistp
cmp
add
pop
push
push
repnz
int3
dec
test
lea
and
xor
dec
xchg
pop
mov
push
adc
into
and
xor
enter
in
adc
xor
pop
push
xor
fild
pop
mov
push
adc
cmp
pop
push
jge
push
fistp
adc
xchg
and
xor
push
xchg
pop
mov
push
adc
cmp
pop
push
push
xor
rcl
adc
pop
and
cmp
mov
arpl
jb
add
push
cli
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
or
pop
push
int3
xor
stos
xchg
jb
add
scas
dec
in
mov
test
call
jne
sbb
inc
inc
fld1
dec
into
xchg
inc
inc
test
aad
inc
imul
nop
enter
cdq
and
adc
add
push
lods
or
mov
movups
and
xor
mov
movups
xor
pop
dec
in
movs
out
push
dec
cli
and
xchg
or
cwde
mov
(bad)
dec
hlt
push
mov
pop
adc
cmps
in
jns
sub
mov
and
push
cdq
adc
inc
dec
sub
sbb
mov
jbe
addr16
ds
inc
add
or
shl
push
xor
push
repnz
mov
push
adc
rcr
scas
or
popa
inc
mov
cs
jne
sbb
inc
pop
(bad)
dec
shr
cld
sub
sbb
inc
pop
(bad)
dec
rcl
adc
imul
jmp
outs
sub
mov
cmps
jmp
or
int3
mov
movups
xor
sbb
xor
dec
mov
rdtsc
add
mov
sub
mov
or
push
xor
pop
dec
xchg
and
mov
cmpxchg8b
xor
xchg
push
repnz
mov
movups
xor
arpl
xor
fdivr
sbb
and
xor
mov
pcmpgtw
xor
mov
repnz
mov
movq
xor
mov
xor
fdivr
mov
mov
repnz
mov
clts
mov
and
(bad)
mov
psubd
xor
jbe
repnz
xlat
mov
pcmpgtb
xor
jmp
xchg
shl
adc
xor
mov
fstp
push
mov
and
push
repnz
fdivr
in
add
and
push
repnz
mov
cmovno
and
push
repnz
mov
ucomiss
and
(bad)
mov
femms
mov
and
push
repnz
fstp
or
and
fstp
push
test
and
push
repnz
fdivr
push
mov
and
push
repnz
mov
setb
xor
adc
xor
fdivr
ror
xor
rcpps
xor
jecxz
aas
test
and
push
repnz
fdivr
js
add
and
pop
repnz
fdivr
call
and
push
repnz
fdivr
pop
mov
and
push
repnz
fdivr
or
xor
inc
imul
pusha
data16
lock
pushf
int3
push
push
movs
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
add
and
repnz
mov
cvtps2pi
xor
sbb
xor
fistp
inc
lea
and
repnz
fistp
jb
add
and
push
repnz
fistp
lea
and
push
repnz
fistp
test
xor
(bad)
push
repnz
fistp
cmps
lea
and
fistp
leave
lea
and
fistp
jmp
and
repnz
mov
(bad)
mov
and
repnz
mov
ucomiss
and
push
repnz
scas
pusha
data16
lock
xchg
inc
cmp
dec
popf
sbb
lods
fisub
xchg
or
mov
xlat
sbb
lods
shl
cmp
dec
fprem1
dec
jecxz
push
inc
fxch
mov
in
stos
jne
sbb
dec
retf
inc
in
enter
cs
sbb
dec
jnp
sub
hlt
daa
mov
cdq
je
cmps
xchg
push
push
(bad)
mov
sub
hlt
cmp
and
sub
int3
test
dec
sbb
push
mov
jbe
pop
int
push
push
mov
lock
xchg
imul
inc
sbb
js
and
neg
out
xchg
popa
sub
fiadd
retf
and
lock
xchg
push
sub
int
inc
jbe
adc
mov
lock
jb
pop
push
mov
fisub
and
inc
jmp
push
pushf
xor
mov
es
imul
cli
push
pushfw
(bad)
mov
cmp
mov
jb
push
pop
pushf
jmp
push
inc
imul
cli
out
jne
or
mov
out
push
dec
cld
dec
sub
sti
out
xchg
mov
or
or
lock
push
call
in
add
fisub
fistp
sbb
add
and
repnz
mov
wrmsr
lea
and
repnz
mov
(bad)
lea
and
repnz
fistp
pop
lea
and
repnz
mov
cmovp
xor
aas
push
repnz
fistp
jle
add
aad
js
int3
test
lods
mov
cmp
dec
fcomp
mov
jmp
mov
xchg
adc
mov
and
mov
sbb
movs
enter
xlat
jne
sbb
inc
sbb
lea
xchg
cs
ror
mov
je
popf
ds
jnp
sub
hlt
sbb
dec
cmps
call
jnp
sub
hlt
das
mov
ins
adc
inc
sbb
push
or
je
dec
mov
push
pop
cmp
sub
sub
sbb
cdq
cmp
and
jecxz
pusha
jnp
sub
hlt
jne
push
cdq
adc
cmps
les
gs
(bad)
ds
jnp
sub
hlt
or
or
sub
sbb
mov
cmp
pop
sbb
inc
xor
adc
dec
(bad)
cld
sbb
adc
and
sub
add
sub
icebp
movups
aas
and
xor
test
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
push
and
xor
adc
inc
adc
jp
pop
push
mov
int
inc
fcmovnbe
call
pop
xor
sub
hlt
push
mov
or
cmp
sar
jle
das
sub
hlt
mov
cld
imul
push
push
ja
in
pop
jge
mov
inc
cmp
sbb
ja
in
das
jge
mov
jge
jns
fwait
xchg
pop
int
dec
jnp
sub
hlt
push
mov
or
add
loopne
arpl
das
and
jne
cld
and
pop
sbb
movs
mov
in
sbb
test
iret
(bad)
mov
ds
jnp
sub
hlt
or
adc
sahf
int3
push
sbb
or
jns
mov
cs
je
sar
ja
jmp
mov
shl
in
dec
jnp
sub
hlt
jp
dec
cdq
and
add
mov
ds
jnp
sub
hlt
push
mov
jl
lea
and
loope
dec
out
scas
pop
inc
shl
sub
out
xchg
fisub
and
adc
mov
mov
(bad)
xor
adc
or
push
repnz
mov
movhps
aad
clc
or
test
lods
xchg
sbb
mov
jmp
dec
into
in
add
mov
test
jb
outs
jns
xor
push
dec
xchg
pop
mov
mov
lea
push
dec
mov
iret
xor
xchg
cs
mov
adc
sahf
jno
sub
or
pop
inc
shl
sub
std
out
xchg
mov
ret
ror
stos
mov
imul
jb
add
add
push
repnz
mov
movups
adc
out
repnz
inc
xchg
lock
sub
sbb
xchg
dec
and
out
ins
mov
adc
and
sub
shl
jecxz
xor
adc
fisub
pop
push
fimul
mov
cmp
or
adc
pop
push
repnz
mov
movhps
mov
mov
push
mov
mov
addr16
ds
inc
cmp
int3
dec
lods
ret
inc
sbb
push
adc
jne
and
dec
lods
scas
pusha
data16
out
repz
adc
fistp
repnz
lods
xchg
pop
mov
add
and
xor
scas
xchg
pop
mov
icebp
pop
nop
add
and
cmp
fistp
cmp
add
xor
and
jge
jns
and
into
in
add
mov
sub
jnp
inc
ds
inc
ins
sub
int3
jne
sub
pop
aaa
sbb
cli
out
adc
xor
pop
inc
or
jg
mov
bndstx
adc
pop
push
repnz
fistp
adc
mov
adc
mov
movups
sub
cmc
mov
mov
icebp
sub
push
int
inc
pop
loope
dec
out
scas
pop
inc
shl
sub
and
sub
and
ror
mov
out
pop
dec
xor
adc
mov
movups
and
xor
mov
movups
push
xor
out
bound
adc
and
sub
jge
and
dec
mov
or
jns
adc
aad
pop
push
fimul
jle
jecxz
adc
sbb
push
hlt
sub
mov
adc
jb
push
pop
mov
ds
push
or
inc
imul
xchg
push
mov
and
fs
add
test
mov
das
out
pop
and
xor
pushf
xor
add
ins
mov
and
cs
sub
or
(bad)
sbb
int3
and
arpl
int
inc
pop
loope
dec
leave
scas
or
lock
push
call
in
add
fisub
fistp
cmp
xor
pop
jbe
adc
stos
dec
sbb
add
xor
pop
jo
xor
xchg
rcr
in
add
sbb
jns
sub
ins
mov
mov
int3
push
sbb
or
xchg
pop
xchg
test
adc
xor
sbb
xor
pop
mov
fbld
jbe
movs
and
adc
jne
movups
and
push
dec
clc
and
dec
cld
pop
cmp
cmp
ins
sub
leave
mov
inc
hlt
sbb
xchg
xor
xor
and
add
stc
sbb
jns
sub
loope
and
dec
mov
int3
push
sbb
or
jmp
sbb
in
xor
pop
push
in
dec
fistp
pop
lods
mov
xchg
pop
push
repnz
fidivr
adc
pop
inc
js
xor
stos
mov
(bad)
daa
mov
in
xor
and
mov
nop
xor
push
push
repnz
mov
movups
xor
pop
push
repnz
fistp
xchg
mov
and
push
repnz
fidivr
js
add
and
push
repnz
fidivr
in
lea
and
repnz
mov
(bad)
mov
and
push
repnz
mov
(bad)
mov
and
loope
inc
int3
dec
lods
xor
lock
push
push
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
dec
inc
pop
or
inc
imul
cli
push
sub
jne
sbb
inc
inc
(bad)
dec
hlt
pop
mov
adc
(bad)
jnp
sub
hlt
outs
mov
sub
or
sub
das
jge
cmps
xchg
test
lds
sahf
lock
iret
mov
push
fistp
adc
xor
push
fistp
adc
(bad)
sbb
scas
or
popa
inc
cdq
adc
add
jmp
jb
fdivr
dec
jnp
sub
hlt
pop
lea
cld
add
inc
adc
lahf
pushf
mov
mov
sub
out
and
xchg
or
lea
(bad)
dec
hlt
popa
or
push
add
jae
pop
int
sub
mov
pop
mov
movups
and
pop
push
in
push
fild
icebp
out
jb
sbb
push
das
or
shl
neg
(bad)
sbb
or
mov
or
cmp
sbb
sub
mov
int3
jbe
dec
inc
fisttp
inc
push
sub
mov
(bad)
inc
hlt
pop
mov
popf
sbb
lea
xor
xor
jl
icebp
xor
cli
xchg
pop
mov
sub
lods
inc
adc
adc
push
repnz
fidivr
adc
xor
je
repnz
mov
lar
out
jns
and
xor
mov
pop
dec
call
adc
cmp
pop
dec
cli
xor
mov
pop
mov
adc
and
xor
mov
pop
xlat
jmp
adc
or
and
xor
mov
pop
jnp
movups
cmp
pop
dec
loop
push
daa
mov
movups
push
adc
cmp
pop
xor
xor
mov
pop
pushf
in
movups
adc
and
pop
mov
xor
mov
pop
jbe
movups
adc
cmp
pop
in
push
push
or
movups
adc
cmp
pop
inc
cli
xor
lods
xchg
pop
mov
movups
xor
xor
mov
movups
pop
adc
xor
xor
mov
pop
jno
movups
adc
cmp
pop
jnp
xor
scas
xchg
pop
sbb
movups
or
push
and
pop
xchg
xor
mov
pop
mov
movups
pop
adc
and
xor
mov
pop
pop
in
adc
adc
cmp
pop
push
stc
xor
mov
pop
in
jmp
adc
cmp
pop
loop
xor
mov
movups
pop
adc
cmp
pop
cmc
jecxz
push
test
movsd
adc
cmp
pop
jmp
pop
movs
jmp
adc
cmp
pop
js
xor
mov
pop
sub
adc
cmp
pop
fs
push
jecxz
xchg
pop
mov
movups
or
push
cmp
pop
pop
stc
xor
mov
movups
push
adc
and
xor
mov
movups
adc
and
pop
dec
stc
xor
mov
pop
sbb
push
adc
cmp
pop
popa
jecxz
push
out
xchg
pop
inc
in
adc
cmp
pop
or
xor
mov
pop
or
movups
adc
cmp
pop
xchg
cli
xor
mov
pop
in
movups
xor
pop
push
stc
xor
lods
xchg
pop
cli
movss
adc
push
cmp
pop
mov
xor
lods
xchg
pop
mov
movups
and
xor
scas
xchg
pop
lock
movups
or
push
cmp
pop
mov
xor
lods
xchg
pop
xor
movups
aaa
and
xor
mov
pop
push
in
adc
cmp
pop
outs
(bad)
xor
mov
movups
cmp
pop
inc
stc
xor
scas
xchg
pop
shr
movups
movups
and
xor
mov
pop
add
movups
or
push
aas
and
xor
mov
pop
inc
jmp
adc
cmp
pop
push
xor
lods
xchg
pop
xor
adc
cmp
pop
sar
xor
mov
pop
outs
in
adc
or
and
xor
mov
pop
pop
jmp
adc
and
xor
mov
pop
jns
movups
movups
cmp
pop
xor
push
add
xchg
pop
and
movups
adc
cmp
pop
push
loop
push
mov
jmp
adc
cmp
pop
loopne
xor
lods
xchg
pop
stc
jmp
adc
cmp
pop
push
clc
xor
mov
pop
push
jmp
adc
and
pop
addr16
xor
lods
xchg
pop
xchg
jmp
adc
and
xor
fiadd
out
jge
xchg
pop
and
sbb
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
imul
xchg
pop
cmc
jecxz
adc
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
adc
xor
pop
mov
mov
movups
xor
pop
inc
repz
mov
movups
and
xor
mov
movups
add
push
xor
pop
xor
xor
mov
movups
add
push
xor
pop
(bad)
repz
mov
movups
add
push
xor
pop
cld
repz
mov
movups
adc
xor
pop
xor
push
add
movups
adc
xor
pop
stos
repz
mov
movups
xor
pop
jb
xor
mov
movups
pop
adc
xor
pop
add
xor
mov
movups
pop
adc
xor
pop
daa
lock
mov
movups
pop
adc
xor
pop
div
xor
mov
movups
pop
adc
xor
pop
xor
push
add
movups
adc
xor
pop
scas
lock
mov
movups
and
xor
mov
movups
push
adc
xor
pop
or
xor
mov
movups
enter
pop
xor
xchg
inc
fcmovne
loope
sub
jne
sbb
inc
push
xchg
dec
jle
jecxz
adc
xor
ja
in
sub
pushf
or
jecxz
aam
xchg
adc
sbb
jbe
mov
adc
stos
push
inc
(bad)
cdq
and
adc
fistp
adc
inc
or
dec
mov
mov
adc
xor
pop
push
pushf
and
jecxz
arpl
out
dec
daa
xor
pop
push
mov
lock
lods
mov
push
or
scas
or
xchg
call
out
lods
xchg
adc
or
scas
or
imul
cli
out
xchg
test
sbb
mov
lock
jb
and
mov
and
jle
jecxz
adc
sub
int3
test
mov
hlt
out
jb
push
jno
(bad)
fbld
xor
mov
lea
ds
push
mov
lock
xchg
jbe
movs
pop
int
inc
xor
hlt
test
inc
mov
mov
movaps
sti
out
xchg
test
and
sub
dec
icebp
out
jb
add
mov
fild
sub
sub
int3
test
dec
sbb
push
sar
ds
push
mov
lock
xchg
pop
sub
pop
int
jl
repnz
fsubr
dec
cld
adc
aam
out
xchg
mov
or
xchg
pop
mov
inc
push
in
fisub
and
inc
mov
cli
xor
movs
xor
fs
int3
test
mov
adc
jb
push
adc
sub
mov
into
inc
imul
cli
out
dec
adc
and
int
and
lock
fidivr
add
ss
imul
cli
xor
mov
int3
test
mov
shr
cli
xor
movs
xor
fs
bswap
test
dec
sbb
xor
add
fsub
jb
imul
cli
out
jne
or
xor
dec
ret
test
in
int
jl
repnz
cmp
dec
ret
aad
lea
fiadd
retf
and
shl
clc
out
xchg
test
ins
stos
and
add
mov
xchg
xor
adc
test
mov
lea
fisub
fild
mov
add
fisub
fild
sbb
sub
int3
test
mov
or
jb
push
and
xchg
push
fistp
xor
add
frstor
fistp
xor
jmp
push
inc
imul
cmp
add
push
repnz
inc
imul
cli
out
dec
arpl
and
iret
test
pop
pop
lock
lods
rcl
push
or
inc
int3
sbb
jge
sub
pop
sahf
repz
int
dec
lock
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
or
lea
cmp
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
int3
dec
lods
or
sbb
xor
add
ds
jnp
sub
hlt
push
mov
add
push
push
(bad)
in
ds
sub
hlt
push
popf
mov
(bad)
and
or
or
adc
test
int
repnz
pushf
sub
jecxz
mov
xchg
sbb
dec
retf
inc
repz
add
ds
pop
mov
mov
lea
fiadd
retf
and
(bad)
mov
movaps
cli
out
xchg
mov
or
xchg
jmp
mov
push
or
scas
or
imul
add
fiadd
retf
and
push
mov
lock
jb
add
int
mov
and
inc
out
adc
sub
aas
outs
rol
mov
jb
out
dec
xor
and
int
and
loopne
cli
out
dec
adc
and
int
and
int3
jae
out
jne
or
mov
out
push
dec
ret
mov
scas
pop
int
inc
ins
retf
and
les
sti
out
xchg
test
and
cdq
test
inc
mov
mov
movaps
lock
movs
test
inc
mov
mov
jb
daa
push
sub
fisub
shl
test
aaa
sti
out
jb
or
push
sub
sub
mov
push
cmp
inc
jns
or
shl
mov
cmp
dec
sahf
sbb
jmp
xchg
xor
fdivr
scas
sbb
shl
hlt
lods
fldenv
xchg
xor
or
dec
out
int3
rcl
enter
adc
or
dec
(bad)
sbb
sar
and
lock
popf
cmp
ds
push
mov
lock
xchg
inc
sub
pop
int
inc
add
outs
test
mov
xor
int
mov
and
inc
mov
sub
int
inc
add
pop
test
mov
lock
jb
push
push
or
mov
and
inc
(bad)
fist
out
jb
push
sub
push
outs
aad
imul
cli
out
jne
or
mov
out
push
dec
cld
cmp
arpl
out
xchg
mov
or
je
dec
sbb
sub
sub
(bad)
scas
or
mov
adc
sahf
into
push
es
sbb
mov
stc
mov
jecxz
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
or
out
jne
sbb
jl
repnz
push
mov
or
dec
cmps
jecxz
ss
rol
mov
xor
mov
jbe
pop
sbb
imul
pop
push
repnz
mov
into
xor
adc
mov
ja
in
dec
jge
mov
inc
cmp
and
or
jo
xor
xchg
or
enter
add
cmp
jge
pushf
sub
jecxz
xchg
xchg
sbb
pop
pop
int
jl
repnz
iret
imul
cli
out
xchg
test
and
push
test
mov
movaps
cli
out
xchg
test
and
jge
and
add
sahf
repz
push
int
inc
inc
fld
dec
lea
out
test
hlt
jne
sbb
inc
push
fldz
dec
mov
enter
shl
in
inc
jnp
sub
hlt
jp
adc
mov
ds
jnp
sub
hlt
push
mov
dec
adc
cmps
scas
push
push
(bad)
xchg
ds
jnp
sub
hlt
and
pop
cmps
xchg
push
dec
(bad)
mov
sub
hlt
mov
cdq
adc
jp
xchg
pop
sub
adc
mov
aam
jb
push
je
fistp
push
jnp
sub
hlt
pop
xor
and
xchg
cmp
pop
(bad)
dec
ret
inc
xchg
enter
fnstenv
sbb
inc
jnp
sub
hlt
add
cmp
cmp
jnp
sub
hlt
adc
adc
cmps
movs
push
jg
scas
imul
test
cld
das
cmp
sbb
cs
add
inc
imul
add
jge
xor
dec
push
fidivr
and
movhps
xor
mov
repnz
mov
push
push
stos
push
out
xchg
ret
fisub
rcl
out
and
xchg
pop
sub
cmp
jg
mov
jns
inc
add
push
fwait
pop
int
push
int3
retf
mov
into
push
es
sbb
into
xchg
jge
push
or
daa
fwait
sub
pop
push
push
repnz
sub
mov
movups
xor
pusha
push
repnz
mov
push
adc
xor
and
xchg
movs
xchg
adc
and
stc
push
repnz
mov
movups
and
rol
test
lods
jmp
add
in
push
jge
mov
sub
inc
sbb
push
or
scas
or
mov
cld
imul
sbb
push
or
scas
or
mov
sub
pop
sahf
repz
int
inc
jnp
adc
call
push
add
and
adc
fdivr
push
fisub
push
mov
or
imul
retf
pop
mov
mov
push
hlt
and
pop
xchg
jmp
adc
xor
outs
pop
in
jae
sub
sub
stc
adc
or
enter
push
mov
xchg
jmp
push
imul
push
add
sub
cld
dec
shl
popf
shl
test
dec
loopne
jb
cmp
push
repnz
jle
mov
in
mov
xor
je
repnz
setbe
ret
fcom
lea
daa
dec
outs
loopne
jle
mov
movups
xor
jmp
repnz
mov
adc
sahf
repz
int
inc
adc
clc
dec
xchg
scas
bound
or
out
xchg
sbb
retf
xor
out
jnp
dec
stc
sbb
xchg
pop
add
mov
mov
jnp
dec
repnz
pop
out
retf
pop
mov
hlt
sbb
mov
xor
popf
add
retf
in
rcr
xchg
jbe
jecxz
pop
lods
inc
adc
adc
pop
push
repnz
mov
dec
cmp
cmp
pop
push
in
push
inc
neg
adc
scas
push
out
ins
(bad)
mov
shl
test
pop
loope
jb
or
sub
jg
sub
add
sbb
jns
sub
jg
sub
pushf
xchg
add
xor
jecxz
hlt
into
add
das
and
xor
and
out
ins
call
lock
adc
mov
pop
push
push
gs
ds
inc
push
sub
int3
ja
adc
cli
out
jnp
sub
xor
sub
pop
mov
push
sub
movs
add
lds
push
imul
dec
add
in
aas
inc
jg
mov
jns
inc
add
adc
test
int3
sbb
jge
sub
pop
sahf
repz
call
nop
cld
mov
jl
shl
sub
mov
(bad)
cld
jb
push
push
mov
adc
or
xor
inc
test
scas
push
scas
push
fidiv
and
fs
pop
int3
test
mov
or
add
and
cld
push
fistp
add
xor
pop
cs
xor
pushf
loope
mov
das
add
and
jmp
lods
xor
sbb
push
aam
fidiv
and
fs
xchg
xchg
lods
rcr
dec
add
in
and
mov
sub
inc
sbb
push
or
mov
or
xchg
pop
mov
loop
lea
daa
jl
repz
in
pop
mov
xor
lea
xor
cmps
xor
jl
icebp
xor
adc
push
xchg
out
pop
(bad)
mov
shl
test
adc
out
jb
pop
jns
sub
jg
sub
add
xchg
ds
cmp
int3
dec
lods
xchg
pop
sbb
add
xor
and
xchg
movs
xchg
adc
and
les
xor
mov
movups
and
lds
int3
test
mov
std
push
enter
call
push
int3
test
lods
neg
xchg
add
push
mov
add
sti
sbb
jns
sub
jg
sub
add
and
cmp
clc
dec
xchg
scas
bound
(bad)
out
pushf
inc
xor
call
xor
stos
mov
mov
rdtsc
mov
cwde
and
add
jb
pop
mov
stc
sub
or
xchg
scas
bound
(bad)
out
xchg
cs
test
loope
dec
xchg
scas
bound
or
out
xchg
sbb
push
inc
dec
loope
dec
cld
scas
pop
inc
(bad)
lock
sub
out
xchg
mov
push
cwde
pop
mov
sub
test
add
pop
mov
das
lods
mov
and
xor
stos
cmps
push
lods
jmp
pop
adc
movs
rcr
out
cmp
ja
in
adc
dec
jns
inc
add
jle
pop
int
ja
out
and
shl
ficom
push
mov
ss
xchg
cmp
sub
jecxz
adc
jecxz
out
xor
xchg
pop
sub
jg
sub
xor
stc
adc
or
inc
imul
jns
xchg
push
mov
xchg
jmp
push
imul
in
retf
pop
mov
mov
push
hlt
xchg
inc
jecxz
jmp
push
add
in
push
inc
adc
fmul
fcmovnu
sti
jb
pop
jns
sub
jg
sub
add
sbb
jns
sub
jg
sub
sub
push
sub
adc
mov
cwde
sti
jb
add
dec
sub
xchg
dec
(bad)
scas
loop
test
scas
push
scas
push
fidiv
and
sub
int3
test
movs
jns
sbb
push
add
push
repnz
mov
movups
xor
sbb
mov
pop
cmp
or
and
scas
push
repnz
mov
movups
xor
inc
outs
loope
outs
cli
push
imul
dec
add
out
and
rcr
out
or
xor
inc
jg
mov
jns
inc
add
loop
pop
int
inc
retf
push
fistp
(bad)
mov
(bad)
cmp
je
repz
pushf
cmp
mov
push
xor
pop
inc
mov
jl
mov
lar
cmps
sbb
adc
cmp
int3
dec
lods
hlt
pop
sbb
push
xchg
push
mov
xchg
jmp
push
imul
pop
add
mov
mov
jge
dec
neg
(bad)
xor
pop
jo
xor
xchg
mov
iret
fbld
jge
movs
and
xchg
mov
(bad)
cmp
and
adc
lods
arpl
xchg
jecxz
adc
adc
xor
pop
add
xor
mov
movups
add
push
xor
pop
or
xor
mov
movups
xor
pop
xor
xor
mov
movups
add
push
xor
pop
hlt
repnz
mov
movups
add
and
xor
mov
movups
add
push
xor
pop
pop
repz
mov
movups
add
push
xor
pop
push
repnz
scas
pop
inc
mov
cli
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
push
xor
pop
push
repnz
pop
mov
cmp
lea
sbb
push
bnd
fistp
or
out
jbe
les
dec
jnp
sub
hlt
push
lea
cld
pop
cmp
cmp
dec
out
mov
mov
xchg
push
cmp
dec
out
sahf
enter
cmps
enter
mov
xor
push
inc
imul
add
and
repnz
mov
wbinvd
lea
and
xor
scas
arpl
sbb
out
mov
rol
(bad)
dec
rcl
push
xchg
cs
sbb
inc
inc
sub
test
mov
jle
sbb
mov
clc
sbb
mov
fild
jns
and
push
repnz
mov
movups
xor
pop
inc
repnz
mov
test
jb
cmp
(bad)
dec
(bad)
xchg
jg
mov
leave
or
or
mov
hlt
dec
lea
clc
and
xchg
or
cmp
and
adc
icebp
out
jb
cmp
jnp
sub
movs
mov
xor
pop
and
scas
push
fistp
dec
cmp
cs
inc
add
imul
ret
or
int
inc
inc
push
and
adc
repnz
jb
rep
movs
xor
xchg
icebp
xor
arpl
adc
out
leave
xchg
sbb
fidivr
adc
xchg
sub
retf
xor
pop
xchg
mov
imul
jo
pop
jl
test
daa
xchg
and
shl
push
fistp
cmp
add
mov
scas
into
inc
rol
jecxz
jp
add
and
push
repnz
fidivr
loopne
add
and
repnz
mov
jle
movs
xor
mov
repnz
fidivr
adc
and
fistp
dec
mov
and
fidivr
pop
mov
and
fistp
setle
push
js
retf
scas
or
fwait
pop
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
pop
add
cmp
jnp
sub
hlt
dec
mov
push
adc
sbb
inc
inc
sub
sub
mov
and
xchg
adc
mov
dec
loope
popf
(bad)
xchg
pop
inc
mov
sar
nop
ss
popf
in
and
test
dec
sbb
mov
add
push
cmp
pop
push
push
push
fild
movups
sub
pop
push
in
sub
test
mov
cmps
lock
pop
ds
jnp
sub
stos
mov
or
retf
scas
or
mov
clc
and
xchg
cs
jb
aam
ja
in
cs
scas
pop
inc
mov
sti
out
xchg
mov
fs
push
repnz
mov
sidtd
xor
dec
push
repnz
scas
ins
data16
lock
xchg
sbb
lahf
mov
sbb
mov
add
sbb
retf
scas
or
mov
adc
data16
cmp
and
adc
sbb
jb
or
sub
mov
(bad)
dec
hlt
pop
mov
nop
sbb
jne
cmp
jbe
fistp
jg
add
and
repnz
fidivr
sti
lea
and
push
repnz
mov
packssdw
and
fidivr
dec
mov
and
push
repnz
mov
jae
movs
xor
adc
sbb
mov
nop
xor
sub
fistp
or
int
dec
sahf
mov
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
sbb
or
fistp
cmp
out
jne
sbb
inc
pop
fld
dec
hlt
push
mov
or
add
sar
ja
in
and
mov
add
pop
sbb
inc
imul
jge
mov
sbb
leave
mov
out
inc
dec
loope
outs
aas
inc
imul
add
and
repnz
mov
clts
lea
and
loope
outs
addr16
imul
test
(bad)
fnstsw
push
jnp
sub
hlt
pop
xor
sbb
xchg
pop
add
scas
jmp
jnp
cdq
unpcklps
adc
mov
mov
dec
fstp
jb
add
loope
and
xor
mov
pop
mov
movups
and
and
dec
cld
pop
cmp
cmp
dec
cld
sbb
sub
sub
int
inc
jnp
sub
hlt
push
mov
or
sbb
sar
dec
repz
cwde
shl
out
jb
cmp
jnp
sub
movs
mov
or
and
add
push
repnz
mov
shl
and
add
push
repnz
mov
das
int
fbld
je
movs
and
cmp
mov
cmp
mov
xlat
xor
xchg
mov
mov
sub
sub
retf
pop
mov
hlt
sbb
mov
or
push
push
repnz
pop
xchg
stc
push
adc
ja
pop
push
repnz
jle
mov
cld
or
movs
xor
jl
mov
arpl
lea
std
jns
repnz
dec
mov
dec
xor
movs
xor
jg
repnz
inc
fistp
or
xor
repnz
jnp
mov
jle
lea
push
push
repnz
jae
mov
dec
xor
xor
jl
repnz
inc
dec
mov
cmp
xor
push
repnz
jb
jecxz
cmp
xor
inc
push
repnz
mov
lea
pop
dec
push
repnz
mov
cmp
xor
push
repnz
jo
mov
add
lea
adc
repnz
fistp
add
xor
dec
push
repnz
jb
mov
movs
cmp
xor
dec
fistp
add
xor
dec
push
repnz
mov
icebp
add
xor
dec
fistp
or
xor
dec
push
repnz
mov
mov
lea
or
push
repnz
mov
cwde
cmp
xor
inc
push
repnz
jnp
jecxz
xor
xor
push
repnz
mov
push
cmp
movs
xor
fistp
add
xor
push
repnz
mov
sub
lea
icebp
inc
push
repnz
fistp
or
xor
jo
repnz
mov
das
jge
xor
dec
push
repnz
inc
fistp
xor
xor
dec
push
repnz
mov
retf
add
xor
inc
push
repnz
mov
xor
dec
movs
xor
push
repnz
jl
mov
jnp
lea
mov
push
bnd
mov
gs
loop
push
repnz
fistp
add
xor
inc
push
repnz
inc
fistp
or
xor
jbe
repnz
inc
fistp
push
lea
cdq
inc
push
repnz
dec
fistp
or
add
xor
repnz
inc
fistp
xor
xor
dec
fistp
push
lea
inc
dec
push
repnz
sahf
dec
mov
add
jnp
xor
inc
fistp
push
lea
sub
repnz
inc
fistp
xor
xor
jno
repnz
dec
fistp
or
xor
inc
fistp
or
add
mov
repnz
dec
fistp
or
xor
inc
push
repnz
jo
mov
and
jno
xor
jno
mov
fmul
lea
call
dec
fistp
xor
add
aas
jne
repnz
inc
mov
aam
lea
pusha
inc
push
repnz
dec
fistp
or
add
jnp
push
bnd
fistp
add
xor
push
repnz
mov
sbb
lea
xor
repnz
ja
mov
mov
inc
movs
xor
jbe
mov
movups
xor
inc
push
repnz
jo
mov
daa
add
xor
inc
push
repnz
mov
mov
lea
dec
dec
push
repnz
jae
jecxz
or
xor
inc
push
repnz
fistp
cmp
xor
inc
push
repnz
mov
push
add
xor
push
bnd
fistp
add
xor
fistp
adc
xor
jns
bnd
fistp
jge
xor
push
repnz
dec
fistp
jge
xor
jle
repnz
jg
jecxz
sbb
xor
dec
fistp
xor
xor
jp
repnz
fistp
add
xor
jnp
repnz
dec
fistp
add
xor
push
repnz
jb
mov
adc
lea
js
push
repnz
mov
add
lea
pop
inc
push
repnz
inc
fistp
add
xor
push
repnz
fistp
or
xor
dec
push
repnz
inc
fistp
add
xor
jbe
repnz
jb
mov
adc
lea
jnp
push
repnz
inc
fistp
xor
xor
push
repnz
inc
fistp
add
xor
inc
fistp
add
xor
push
repnz
inc
mov
or
lea
ror
repnz
inc
fistp
or
xor
jne
mov
shl
lea
popf
ja
repnz
jge
mov
(bad)
jge
xor
repnz
dec
mov
sub
lea
sbb
push
repnz
inc
fistp
or
xor
dec
push
repnz
mov
dec
push
lea
leave
ja
repnz
mov
jbe
lea
cmps
inc
push
repnz
jp
mov
cld
xor
movs
xor
repnz
jo
mov
cmp
lea
inc
dec
push
bnd
fistp
push
lea
mov
repnz
dec
fistp
or
xor
dec
fistp
xor
xor
dec
push
bnd
fistp
add
xor
push
repnz
fistp
push
lea
scas
dec
push
repnz
fistp
cmp
xor
push
repnz
fistp
add
xor
inc
fistp
or
add
inc
dec
push
repnz
mov
lar
bound
or
movs
scas
or
xchg
pop
mov
movups
and
xor
cdq
xchg
pop
mov
movups
or
pop
push
mov
push
fcomip
xchg
pop
mov
movups
imul
push
xchg
xor
fist
lea
push
dec
and
xor
sub
pop
mov
movups
cdq
and
xor
add
(bad)
aad
push
call
xor
push
xchg
pop
mov
movups
cmp
pop
push
loope
push
fbld
push
adc
pop
and
xor
call
adc
ins
and
xor
rcl
adc
mov
xor
sbb
push
adc
mov
pop
push
xor
push
fbstp
pop
mov
push
adc
xlat
and
xor
dec
xchg
pop
mov
or
push
and
xor
cdq
xchg
pop
mov
or
push
jb
pop
push
mov
xchg
pop
mov
or
push
pop
and
xor
ret
xchg
pop
mov
or
push
movs
and
xor
pop
xchg
pop
mov
or
push
sti
and
xor
imul
(bad)
out
adc
shl
push
or
push
fistp
or
lea
adc
sub
pop
push
xlat
xor
nop
xchg
pop
mov
or
lea
adc
jbe
pop
push
mov
xchg
pop
mov
or
lea
push
inc
and
xor
ss
pop
mov
or
lea
and
xor
or
adc
jecxz
pop
push
sub
push
fistp
pop
mov
or
(bad)
repz
xor
push
fild
or
lea
and
push
(bad)
nop
pop
mov
or
lea
push
push
and
push
(bad)
nop
pop
mov
or
lea
and
push
fistp
or
lea
and
push
fild
mov
or
(bad)
in
push
fldenv
push
fild
pop
mov
or
lea
adc
movs
es
push
jmp
xchg
pop
mov
or
lea
push
jno
pop
push
mov
xchg
pop
mov
or
lea
push
inc
and
push
mov
push
fistp
xchg
pop
mov
or
lea
and
push
pop
ss
fisttp
xchg
pop
mov
or
(bad)
ret
adc
movs
jmp
push
and
push
fbld
pop
mov
or
(bad)
jmp
push
retf
push
or
xchg
pop
mov
or
lea
pop
push
adc
pop
push
fidiv
pop
mov
or
lea
push
jle
pop
push
mov
xchg
pop
mov
or
lea
push
dec
daa
pop
push
jo
push
fbstp
xchg
pop
mov
or
lea
daa
pop
push
pop
xor
pop
mov
or
(bad)
int
push
loopne
pop
push
sub
pop
mov
or
(bad)
not
push
iret
daa
pop
push
cmc
xor
fild
or
lea
push
push
push
es
push
les
(bad)
xchg
pop
mov
or
lea
push
ins
es
push
xchg
xor
(bad)
xchg
pop
mov
or
lea
push
mov
pop
push
jl
push
fbld
pop
mov
or
lea
es
push
dec
xor
fistp
jmp
dec
in
pop
sub
xor
mov
push
adc
xor
pop
jnp
adc
fidivr
adc
jp
pop
push
fprem
jbe
mov
das
xchg
lea
push
pop
push
repnz
leave
xchg
daa
jle
loop
adc
xor
ja
shr
fistp
adc
xor
pop
jnp
adc
cmp
stc
adc
int
jl
repz
leave
imul
cli
out
xchg
test
and
push
test
mov
movaps
cli
out
xchg
test
pop
push
retf
and
pop
mov
pop
imul
jbe
mov
lock
jb
push
imul
jbe
mov
lock
jb
pop
push
mov
(bad)
push
fild
mov
add
fisub
fild
inc
mov
fisub
fild
xchg
lea
fisub
and
inc
cdq
fcmovnu
out
jb
push
pop
pushf
sti
fbld
sbb
in
adc
int
add
int
and
mov
cli
out
dec
add
and
int
and
lock
lods
std
adc
or
call
xor
adc
or
scas
or
xchg
data16
adc
or
scas
or
push
dec
ret
(bad)
adc
int
jl
repz
cmc
push
dec
cld
je
iret
sti
out
xchg
test
or
mov
movaps
je
jnp
or
mov
dec
sbb
ror
fisub
and
jle
jecxz
adc
adc
pop
push
repnz
inc
jecxz
adc
sub
int3
test
mov
out
in
jb
xor
xchg
int3
test
mov
ret
in
jb
push
xor
scas
rcr
dec
sbb
or
adc
pop
push
repnz
and
jle
loop
adc
adc
shl
imul
lahf
in
jb
xor
movs
xor
fs
bswap
test
dec
sbb
xor
inc
fsub
mov
imul
cmp
add
push
repnz
inc
imul
cmp
add
push
repnz
inc
imul
cmp
and
into
test
pushf
push
lock
lods
and
push
or
rcr
mov
lock
xchg
adc
jns
int
inc
and
aas
stos
and
aad
jecxz
sub
and
retf
stos
and
xor
stc
out
xchg
mov
or
je
dec
sbb
pop
mov
in
xchg
pop
sub
int3
test
dec
sbb
xor
add
push
repz
fistp
xor
adc
lahf
frstor
fistp
xor
frstor
fistp
xor
add
frstor
fistp
xor
add
frstor
mov
imul
cmp
xor
iret
test
mov
aaa
pop
jno
out
jne
or
scas
or
xchg
data16
lock
lods
mov
push
or
out
mov
lock
xchg
jne
dec
pop
int
jl
repnz
movs
push
adc
int
jl
repz
mov
cdq
adc
int
jl
repnz
dec
outs
mov
lea
fidivr
xor
popa
outs
mov
lea
fidivr
xor
jne
mov
lea
fidivr
xor
or
dec
ret
xchg
adc
int
inc
dec
retf
and
outs
mov
movaps
(bad)
out
xchg
test
and
mov
outs
mov
out
jb
jp
movs
xor
and
test
movs
dec
sbb
mov
add
fisub
fild
(bad)
leave
fisub
fild
or
mov
and
imul
movups
adc
pop
push
repnz
inc
imul
sub
jb
xor
movs
xor
fs
or
test
mov
pop
jmp
fisub
fld
mov
lea
ds
and
lock
lods
fcom
push
or
cmps
scas
or
xchg
fs
out
lods
or
push
or
cmps
scas
or
xchg
data16
lock
lods
jnp
push
or
enter
data16
lock
lods
mov
push
or
inc
out
outs
mov
lea
fidivr
xor
xor
adc
lea
fidivr
xor
leave
outs
mov
jecxz
out
xchg
mov
or
xchg
pop
mov
jns
movs
xor
rsm
or
xchg
pop
mov
shr
sbb
or
lods
movs
dec
sbb
sub
and
sbb
ret
jb
aas
imul
jbe
mov
cmc
out
jb
inc
push
mov
pop
xor
test
dec
sbb
cmc
lea
fisub
es
imul
jmp
jb
push
arpl
or
mov
movups
adc
pop
push
repnz
jg
movups
sub
int3
test
dec
sbb
xor
add
push
xchg
fsub
fistp
xor
adc
mov
in
push
fistp
xor
dec
fsub
fistp
push
out
cmp
add
push
repnz
inc
imul
cli
out
dec
ins
xor
pop
push
pushf
push
pop
mov
aaa
push
je
out
jae
psubusb
fistp
or
sub
xchg
pop
adc
jne
inc
imul
movups
sub
int3
test
mov
pop
call
movs
xor
fs
or
test
mov
sti
jmp
pushf
(bad)
mov
fistp
xor
add
fldenv
fistp
xor
fldenv
fistp
xor
sbb
scas
rol
fistp
push
scas
cmp
add
push
repnz
inc
imul
cli
out
jne
or
ret
fidivr
out
xchg
sbb
sbb
cmp
xor
shr
std
aaa
jbe
cli
out
dec
xor
pop
push
pushf
pop
pop
mov
aaa
inc
jne
out
dec
pop
xor
pop
push
mov
lock
xchg
sbb
and
cld
dec
lods
scas
outs
data16
lock
pushf
mov
and
repnz
mov
wrmsr
lea
and
repnz
mov
comiss
xor
adc
xor
mov
cmovg
xor
xor
repnz
fistp
ins
lea
and
push
repnz
fistp
mov
movs
xor
lahf
push
repnz
mov
bswap
lea
and
fistp
sbb
and
repnz
mov
(bad)
mov
and
push
repnz
fidivr
jae
add
and
push
repnz
fidivr
lahf
mov
and
push
repnz
fidivr
lods
mov
and
fidivr
dec
and
repnz
mov
wrmsr
pop
and
repnz
mov
subps
xor
cmp
fnstsw
push
cmps
xor
(bad)
push
repnz
fnstsw
mov
xor
out
push
repnz
fnstsw
fisttp
xor
mov
fnstsw
out
add
and
repnz
mov
(bad)
add
and
repnz
fdivr
dec
mov
and
push
repnz
fdivr
fwait
mov
and
push
repnz
fdivr
test
add
and
xor
inc
lods
jmp
adc
rol
push
repnz
pushf
inc
pop
mov
and
lods
jmp
daa
fldl2e
jbe
mov
adc
cmps
retf
xor
xchg
sar
sahf
xchg
or
lea
test
cwde
xor
pop
jnp
sub
hlt
adc
sub
cmp
test
scas
jbe
mov
das
add
xor
push
repnz
(bad)
js
pop
mov
jno
jb
xor
movs
xor
fs
int3
test
mov
gs
jb
xor
movs
xor
xor
xchg
pop
mov
pop
out
jb
xor
movs
xor
fs
int3
test
mov
dec
out
jb
xor
movs
xor
fs
sub
jb
push
adc
jbe
fistp
xor
add
fisub
rol
mov
jb
out
dec
adc
and
int
and
lock
lods
pushf
adc
or
mov
fidivr
out
xchg
inc
sub
mov
jae
mov
inc
sti
out
xchg
test
and
lea
mov
movaps
sti
out
xchg
mov
or
xchg
pop
mov
out
jb
ins
push
cmp
fisub
fild
or
fisub
and
jle
loop
adc
adc
cmp
inc
imul
imul
movs
xor
fs
int3
test
mov
pop
out
jb
xor
movs
xor
sbb
test
mov
xor
jb
xor
movs
xor
fs
test
mov
and
and
or
test
mov
sbb
jb
xor
movs
xor
fs
or
test
mov
or
cwde
movs
xor
fs
int3
test
mov
loope
jb
xor
movs
xor
fs
int3
test
mov
aad
jb
xor
movs
xor
or
test
dec
sbb
xor
fsub
addr16
imul
cmp
add
repnz
inc
imul
cmp
ds
popa
into
test
ds
lock
lods
js
push
or
cmp
(bad)
imul
mov
or
repnz
lea
fisub
fild
mov
fisub
and
jle
jecxz
adc
adc
pop
push
repnz
inc
imul
movups
sub
int3
test
dec
sbb
push
xchg
add
push
repnz
inc
imul
cmp
add
push
repnz
inc
imul
cmp
add
repnz
inc
imul
cmp
add
pop
inc
imul
cli
out
dec
aaa
xor
pop
push
pushf
adc
mov
shl
pop
push
pushf
retf
pop
mov
aaa
mov
out
dec
lds
and
iret
test
mov
aaa
xchg
jno
out
dec
dec
xor
pop
push
mov
lock
lods
lods
adc
or
scas
or
xchg
data16
lock
lods
inc
adc
or
scas
or
xchg
data16
pop
lock
lods
push
adc
or
scas
or
push
adc
inc
xor
and
and
xchg
sub
add
jbe
mov
adc
fisttp
pop
(bad)
out
repz
repnz
mov
retf
adc
pop
or
jo
xor
xchg
and
enter
cs
pop
jnp
sub
hlt
sbb
mov
cmp
repnz
call
xchg
pop
mov
test
mov
sbb
test
mov
movaps
cli
out
xchg
test
and
pop
test
mov
movaps
cli
out
xchg
mov
or
les
mov
out
xchg
pop
adc
imul
(bad)
out
jb
push
pop
pushf
add
mov
fistp
xor
add
fisub
leave
inc
imul
cmp
ds
test
dec
sbb
sub
push
mov
lock
lods
xchg
adc
or
mov
out
push
dec
cld
sub
pop
sti
out
xchg
mov
or
push
mov
mov
out
xchg
pop
sub
int3
test
mov
mov
jmp
int3
test
mov
xchg
out
jb
xor
movs
xor
fimul
test
dec
sbb
push
jmp
int
xchg
push
repnz
inc
imul
cli
out
jne
or
scas
or
push
dec
ret
aam
lea
fidivr
xor
icebp
push
dec
cld
push
sub
sti
out
xchg
test
and
push
and
cmp
sbb
mov
fisub
and
inc
in
das
out
jb
xor
movs
xor
fs
or
test
mov
add
jb
push
and
scas
in
outs
outs
and
mov
jo
out
dec
data16
pop
push
pushf
sbb
jecxz
bnd
out
dec
cmp
and
into
test
mov
aaa
fidiv
out
jne
or
mov
fistp
out
lods
leave
adc
or
int3
fistp
out
xchg
sbb
leave
pop
int
inc
add
scas
stos
and
imul
iret
fisub
and
inc
sti
fisttp
mov
xor
fs
test
mov
arpl
jb
xor
movs
xor
xor
int3
test
mov
push
in
jb
xor
movs
xor
fs
bswap
test
dec
sbb
push
lds
ds
push
mov
lock
lods
rcl
push
or
mov
out
imul
pop
int
jl
repnz
mov
mov
mov
out
xchg
test
and
iret
stos
and
add
and
sbb
leave
test
dec
sbb
dec
mov
in
xchg
pop
adc
test
inc
imul
movups
sub
int3
test
mov
mov
jb
push
jns
sbb
scas
in
inc
outs
jne
imul
push
mov
imul
sub
int3
inc
lods
ficom
lock
inc
sub
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
lar
pushf
mov
add
push
repnz
pushf
fstp
jecxz
cli
lods
xchg
adc
sbb
inc
pop
(bad)
jbe
mov
das
mov
jbe
js
push
repnz
mov
retf
xor
add
push
(bad)
ds
dec
adc
add
mov
rol
jbe
mov
adc
pushf
xor
movs
xor
ja
shr
aad
and
adc
or
or
xchg
rcr
lods
fwait
adc
or
scas
or
xchg
in
sbb
out
lods
jmp
je
scas
or
xchg
data16
sbb
out
lods
into
adc
or
scas
or
xchg
test
out
lods
cdq
adc
or
scas
or
xchg
xchg
sbb
out
lods
or
push
or
mov
fidivr
out
xchg
xor
bound
fidivr
xor
inc
push
dec
ret
xor
lea
fidivr
xor
push
push
dec
cld
dec
sub
out
xchg
test
and
jmp
jecxz
sub
out
xchg
test
imul
mov
movaps
sti
out
xchg
test
sub
jecxz
sub
sti
out
xchg
test
and
scas
test
inc
mov
jne
out
jb
inc
imul
dec
stos
test
mov
lea
fisub
fild
push
mov
fisub
and
jle
jecxz
adc
adc
sbb
inc
imul
movups
adc
pop
push
repnz
inc
imul
ds
jb
push
sub
scas
in
push
outs
cld
inc
imul
cmp
ds
cmp
lods
(bad)
push
sbb
push
shr
loopne
out
int3
jl
repnz
pop
mov
mov
(bad)
sbb
jg
lock
push
repnz
lods
and
fwait
repnz
add
pusha
cmps
mov
inc
pop
sub
in
dec
fstp
cli
shl
lea
mov
aas
xor
pop
jnp
adc
and
mov
out
out
and
mov
dec
mov
lock
jb
push
ror
fisub
and
jle
jecxz
adc
adc
mov
imul
movups
adc
adc
inc
imul
movups
sub
int3
test
mov
and
sub
scas
shr
push
fistp
push
mov
add
push
repnz
inc
imul
cli
out
dec
imul
pop
push
mov
lock
lods
mov
(bad)
mov
out
push
dec
cld
inc
sub
out
xchg
mov
or
pop
mov
lea
fisub
fild
inc
mov
out
xchg
pop
adc
repz
jle
jecxz
adc
sub
int3
test
mov
test
jb
xor
movs
xor
ror
test
dec
sbb
push
fdivr
ds
cdq
int
and
jo
cli
out
jne
or
scas
or
push
dec
cld
sbb
sub
xor
out
dec
mov
sbb
inc
inc
sub
or
mov
adc
pop
sbb
jbe
or
sahf
in
push
jge
cmps
mov
rcl
sbb
out
mov
mov
mov
mov
mov
mov
mov
jae
iret
dec
rcr
fld
repz
xchg
xchg
cs
jne
or
or
imul
cli
out
xchg
mov
or
cmc
mov
mov
out
xchg
pop
sub
int3
test
dec
sbb
push
leave
cmp
ds
push
mov
lock
xchg
dec
sub
int
inc
je
sbb
mov
lock
jb
sub
int
inc
push
mov
lock
xchg
cmp
bound
fiadd
retf
and
outs
mov
icebp
out
jb
inc
push
push
int3
fisub
and
inc
loopne
jmp
in
fbld
or
mov
jae
out
jne
or
mov
out
push
dec
cld
sub
ss
out
xchg
mov
or
dec
push
lea
cmp
xor
jp
jg
push
fistp
sbb
add
retf
pop
mov
hlt
sub
rol
mov
and
(bad)
int3
test
lods
nop
sbb
mov
iret
xchg
pop
sub
(bad)
push
fistp
jmp
push
iret
xchg
pop
sub
outs
inc
jnp
pop
pop
mov
sbb
xchg
jbe
nop
pushf
or
mov
push
jle
test
daa
xchg
cmp
fisub
push
fistp
movups
int
jl
repnz
jae
sub
push
cli
out
jno
xchg
add
adc
dec
jb
push
pusha
mov
add
adc
jge
jl
ja
enter
xor
shr
mov
and
movhps
adc
jo
and
and
cld
add
bound
or
int3
sbb
inc
sbb
pop
or
inc
int3
(bad)
mov
mov
add
push
dec
stos
retf
and
bound
and
or
push
repnz
dec
scas
ret
outs
adc
xor
je
repz
inc
xchg
pop
mov
cmc
sub
fsubr
xchg
mov
and
mov
sub
xor
out
dec
mov
neg
dec
jns
adc
pop
push
repnz
mov
shr
jb
or
mov
sahf
xor
xchg
and
in
xor
retf
pop
mov
hlt
dec
pop
fistp
daa
xchg
sub
xor
repz
pushf
retf
pop
mov
das
pop
mov
and
and
push
fistp
push
lea
and
das
mov
fistp
retf
mov
xor
dec
jo
xor
pushf
addr16
mov
daa
mov
xchg
add
and
sbb
cwde
lea
ds
lahf
in
inc
inc
and
sbb
sub
adc
pop
push
repnz
mov
inc
inc
dec
sub
outs
inc
jnp
pop
pop
mov
sbb
xchg
jbe
nop
pushf
je
mov
cmp
cmp
add
ins
mov
and
xor
pop
mov
sbb
lods
dec
adc
and
fs
cs
test
lods
nop
sbb
mov
int
pop
sub
(bad)
push
fistp
jmp
dec
xchg
pop
sub
outs
inc
jnp
pop
pop
mov
sbb
xchg
jbe
nop
pushf
sar
mov
imul
lea
aaa
ins
pop
in
pop
inc
and
sbb
scas
mov
clc
pop
push
repnz
mov
out
jb
ins
inc
push
sub
(bad)
push
fistp
jmp
xchg
retf
sub
and
loope
cli
xchg
movups
and
sub
int3
test
xchg
ret
mov
lea
and
xor
popf
(bad)
shr
cmp
push
mov
dec
mov
les
dec
mov
out
adc
jo
mov
adc
cmp
jb
push
jo
xchg
add
adc
cs
push
jge
dec
add
adc
jge
jl
ja
sbb
inc
mov
push
fistp
or
pop
cmps
xor
movs
xor
dec
stos
retf
and
dec
jge
jl
ja
lock
int
dec
inc
push
adc
jge
jl
ja
fdiv
inc
mov
int3
sbb
inc
sbb
pop
or
mov
pop
mov
lods
add
xor
pop
jo
xor
xchg
or
in
xor
sbb
mov
xchg
pop
mov
jmp
push
jle
fiadd
loope
jbe
mov
adc
jmp
add
fiadd
loope
dec
sub
adc
enter
or
jle
mov
das
mov
xor
pop
js
xor
call
sub
xor
and
ficom
and
mov
dec
mov
lea
daa
dec
arpl
adc
mov
cli
enter
sub
shl
xchg
lods
nop
sbb
mov
enter
inc
ja
in
repnz
pop
mov
ror
push
jmp
arpl
fisub
shl
mov
enter
and
inc
and
leave
outs
je
imul
mov
push
xor
pusha
inc
into
and
push
lea
mov
cwde
and
aaa
hlt
jmp
xchg
pop
mov
cmc
sub
fsubr
xchg
mov
and
mov
sub
xor
out
dec
mov
neg
dec
jns
adc
pop
push
repnz
mov
sub
inc
sub
(bad)
mov
sbb
ja
cmp
push
repnz
mov
push
enter
dec
mov
add
adc
or
jb
push
pop
mov
add
adc
jge
jl
ja
cld
mov
int
pusha
dec
shl
mov
and
movhps
adc
dec
and
and
xor
xchg
sub
mov
daa
xor
jns
jne
push
hlt
sub
rcr
inc
call
sub
push
repnz
dec
dec
fld
shl
inc
inc
and
sbb
dec
sahf
mov
and
in
inc
inc
and
sbb
xor
xchg
add
adc
push
jb
pop
jge
and
jl
icebp
xor
dec
xchg
pop
mov
iret
adc
xor
jl
icebp
xor
adc
lea
cmp
cmps
push
pushf
popa
pop
mov
and
lods
adc
inc
and
leave
outs
les
lods
out
and
xchg
push
add
test
and
cld
dec
lods
scas
outs
data16
lock
xchg
and
cmp
and
push
pop
mov
ror
push
jmp
inc
in
mov
push
movs
xchg
pop
mov
xor
mov
xor
dec
call
xor
push
test
popf
push
adc
and
fs
int3
test
mov
ror
push
jmp
pmulhw
mov
shl
movs
mov
out
jb
fsubr
xor
xchg
dec
and
mov
neg
dec
jns
adc
pop
push
repnz
mov
sub
inc
sub
(bad)
mov
jae
lea
mul
fistp
jmp
dec
(bad)
xchg
pop
sub
(bad)
push
fistp
jmp
xor
xchg
pop
sub
outs
inc
jnp
pop
pop
mov
sbb
xchg
jbe
nop
pushf
sub
mov
leave
pushf
cmp
in
lea
and
jecxz
jbe
mov
push
adc
xor
js
repnz
pop
mov
cmc
sub
out
xchg
test
cld
dec
lods
scas
outs
gs
xchg
and
and
cld
dec
lods
scas
outs
data16
lock
xchg
push
imul
test
xor
jae
sub
pop
cli
out
jnp
adc
mov
sub
mov
movups
xor
iret
push
repnz
mov
adc
sahf
jg
out
movs
xor
dec
stos
retf
and
hlt
mov
lar
bound
or
scas
or
mov
mov
lar
bound
or
or
lock
aad
cmp
add
ins
mov
and
and
into
hlt
and
jecxz
adc
mov
sbb
adc
or
pop
adc
and
fs
and
test
shl
sub
or
xor
scas
pop
inc
shl
sub
out
xchg
mov
scas
and
push
pop
mov
ror
push
jmp
jnp
fisub
mov
retf
cdq
adc
xor
pop
inc
mov
pushf
pop
mov
lods
add
adc
pop
jo
xor
xchg
sub
in
mov
or
jae
sub
pop
cli
out
jne
and
push
int3
jae
sub
pop
cli
out
jne
and
or
mov
adc
jmp
add
fimul
out
and
data16
adc
xor
dec
sbb
jnp
fldenv
add
movs
adc
push
repnz
fistp
adc
int
jl
repnz
jae
sub
pop
cli
out
jne
and
push
int3
jae
sub
pop
cli
out
jne
and
or
mov
adc
jmp
call
adc
data16
adc
xor
dec
inc
out
jbe
mov
push
adc
xor
jl
repz
inc
lods
loop
sbb
xor
add
ds
inc
or
cli
or
inc
mov
stos
xor
adc
std
ds
inc
or
into
or
inc
test
jne
rcl
mov
imul
sub
int3
inc
lods
fisub
lock
lods
(bad)
adc
adc
out
mov
unpckhps
xor
pop
inc
shl
jbe
push
dec
push
lea
pop
out
xor
pop
inc
out
dec
mov
mov
pop
call
jl
lock
adc
adc
xor
jl
repz
jge
pop
mov
dec
adc
xor
je
repnz
mov
int3
mov
lar
adc
push
repnz
mov
sbb
mov
ret
sub
add
pushf
pop
pop
mov
sbb
xchg
jbe
nop
pushf
in
mov
xor
cld
push
add
and
xor
out
inc
mov
imul
test
xchg
sbb
fidivr
adc
rcr
xor
lods
fmul
ret
pop
adc
xor
je
repnz
cmc
fistp
repnz
pop
mov
hlt
and
jbe
jecxz
pop
fwait
ss
pop
inc
or
push
or
imul
movups
std
ds
inc
or
adc
imul
dec
nop
push
mov
imul
sub
int3
inc
lods
jb
sbb
push
mov
dec
add
adc
jge
jl
ja
add
jnp
adc
aaa
data16
adc
xor
pop
inc
push
xchg
dec
xchg
cld
cmp
mov
push
repnz
mov
(bad)
ret
jb
or
pop
push
repnz
mov
add
mov
aas
xor
scas
pop
inc
shl
sub
xlat
out
xchg
mov
add
cmp
xchg
pop
call
data16
leave
outs
push
outs
imul
mov
push
and
inc
and
leave
outs
movs
outs
imul
cmp
into
test
and
cld
dec
lods
scas
outs
shl
lock
xchg
push
cmp
dec
scas
and
push
pop
mov
ror
push
jmp
jecxz
fisub
stc
pushf
mov
das
je
add
and
(bad)
sub
(bad)
mov
push
sub
jle
cmp
xor
pushf
loopne
mov
sbb
mov
ret
xchg
pop
sub
inc
inc
and
sbb
jb
mov
and
in
inc
inc
and
sbb
cmp
xchg
add
adc
fcmovb
jb
add
dec
sub
xchg
inc
jecxz
xchg
dec
sub
inc
sahf
jmp
(bad)
jne
fiadd
loope
dec
lods
scas
outs
sbb
out
xchg
addr16
test
and
cld
dec
lods
scas
outs
sub
lock
xchg
xor
adc
aas
xor
scas
pop
inc
shl
sub
aam
xchg
mov
cmp
pop
repnz
lods
test
movs
ret
rcl
lea
and
xor
mov
push
shl
jns
sub
bound
mov
add
push
dec
stos
retf
and
jl
cdq
das
mov
sub
sbb
mov
add
push
dec
stos
retf
and
bound
and
or
push
repnz
pop
xchg
cld
add
neg
dec
jns
sub
fiadd
mov
lar
bound
or
mov
pushf
ss
mov
das
mov
xor
and
sar
int3
inc
lods
sahf
bound
xor
add
push
rol
push
repnz
mov
cmps
shl
pusha
pop
ds
fistp
add
cmp
sbb
int3
(bad)
mov
mov
add
push
dec
stos
retf
and
inc
cdq
add
adc
push
xor
rcl
mov
pop
das
adc
jge
cmp
pop
push
push
adc
fistp
shl
dec
mov
ds
inc
or
outs
cmovae
mov
add
ds
inc
or
jb
inc
imul
jne
rcl
mov
imul
sub
int3
inc
lods
push
bound
add
nop
xor
mov
push
fistp
movups
int
inc
dec
loope
dec
lods
scas
outs
push
sub
out
xchg
inc
add
test
and
cld
dec
lods
scas
outs
data16
lock
xchg
add
mov
aas
xor
scas
pop
inc
shl
sub
retf
mov
cmp
jmp
pop
mov
lods
add
xor
lds
xor
mov
movups
xor
pop
dec
push
xchg
jle
loope
adc
and
sbb
sbb
mov
mov
nop
pushf
push
out
mov
ror
movs
mov
dec
jns
adc
pop
push
repnz
mov
or
sub
(bad)
push
fistp
jmp
das
ficom
inc
(bad)
adc
or
movups
sbb
inc
fnstsw
adc
push
sub
push
int3
inc
lods
stos
jl
lock
test
in
xchg
and
inc
and
leave
outs
cmp
imul
push
and
push
int3
jae
sub
inc
cli
out
jne
sbb
inc
jns
dec
dec
sub
adc
enter
or
jb
aas
sti
movups
add
mov
sub
sub
movs
add
leave
outs
mov
mov
ficom
inc
out
mov
jnp
pop
pop
mov
sbb
xchg
jbe
nop
pushf
ins
out
mov
movs
mov
ret
add
xor
and
xchg
mov
cmp
adc
xor
pop
repnz
movs
mov
shr
sbb
imul
cwde
and
arpl
add
push
dec
stos
retf
and
dec
enter
sub
xor
out
pop
mov
fwait
and
add
push
repnz
mov
xor
xchg
sbb
sbb
and
(bad)
xor
call
ja
shl
inc
cmp
lods
jmp
mov
imul
sub
int3
inc
lods
(bad)
jg
lock
adc
jne
and
push
int3
jae
sub
inc
cli
out
jnp
adc
mov
sub
mov
movups
xor
call
xor
mov
adc
sahf
jg
fbld
data16
and
lea
sbb
pop
or
or
mov
mov
lar
bound
or
xchg
scas
or
xchg
pop
mov
and
aaa
je
repz
lods
test
int3
jmp
movs
xor
dec
stos
retf
and
outs
mov
jmp
xchg
push
loope
jbe
mov
adc
jmp
mov
fiadd
loope
dec
sub
adc
enter
or
xchg
dec
sub
sub
movs
add
leave
outs
ins
jo
mov
lea
fidiv
and
fs
test
xchg
movups
and
fistp
int3
test
lods
mov
adc
and
inc
and
leave
outs
test
imul
adc
xor
pop
inc
js
xor
stos
sbb
jecxz
add
movs
xor
jl
repnz
jmp
pop
mov
jbe
lea
and
xor
stc
xchg
call
dec
mov
sbb
or
pop
inc
shl
sub
imul
push
fild
cmc
sub
daa
xor
dec
scas
and
push
pop
mov
ror
push
jmp
push
stc
fisub
shl
push
mov
or
test
out
mov
push
repnz
jge
test
daa
xchg
and
mov
mov
pop
int
add
adc
lods
out
pop
mov
lea
xor
and
ret
add
xor
and
push
add
and
xor
out
pop
mov
mov
cmp
xor
leave
push
repnz
mov
push
adc
adc
repnz
fdivr
pop
lods
xchg
push
adc
jge
mov
movups
sbb
push
hlt
and
int
mov
mov
rdtsc
mov
adc
jecxz
pop
push
and
jne
gs
adc
stc
fisub
ror
movs
mov
jl
add
in
pop
push
repnz
mov
(bad)
sbb
jns
sub
(bad)
push
fistp
jmp
iret
fist
lock
lahf
xchg
pop
mov
dec
adc
adc
and
xchg
mov
mov
rdtsc
and
push
(bad)
and
sbb
mov
or
push
xor
dec
push
repnz
pushf
mov
jle
das
xor
and
xor
mov
hlt
push
xchg
add
and
xor
mov
movups
add
push
xor
pop
sbb
xor
mov
movups
adc
xor
pop
xor
xor
mov
movups
adc
xor
pop
push
repz
mov
movups
xor
pop
shl
xor
mov
movups
xor
pop
xor
mov
movups
xor
pop
dec
clc
and
mov
shr
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jle
xor
mov
movups
xor
pop
adc
xor
stos
xchg
jb
cmp
(bad)
dec
ret
xchg
jg
mov
cs
sar
dec
jnp
sub
hlt
mov
aaa
adc
cmps
aad
jl
(bad)
ds
jnp
sub
mov
push
cmp
adc
iret
mov
icebp
inc
dec
loope
outs
or
mov
lea
and
repnz
mov
invd
lea
and
loope
outs
jb
imul
or
fwait
mov
loopne
mov
lods
in
and
xchg
push
shl
fisub
int3
test
cdq
or
cmp
cmp
jnp
and
movs
cmps
xchg
mov
out
xchg
pop
and
push
repnz
mov
movups
xor
pop
inc
repnz
scas
outs
neg
out
pop
cmp
in
cmp
mov
add
pop
sbb
jns
or
mov
sub
cld
add
sbb
inc
inc
das
or
int3
ins
mov
sbb
pop
jae
out
jb
fnstsw
ja
jmp
cdq
add
or
cmps
xor
dec
ja
bound
mov
movups
xor
push
dec
shr
imul
pop
cmp
arpl
mov
js
xchg
pop
call
dec
test
and
mov
mov
or
mov
sbb
pop
push
hlt
in
push
rcr
mov
lea
and
repnz
mov
paddsw
xor
js
repnz
xlat
mov
(bad)
xchg
and
pop
repnz
sar
je
add
and
repnz
mov
add
and
repnz
mov
sidtd
xor
sub
repnz
mov
mov
add
and
(bad)
mov
setae
xor
out
repnz
mov
vmread
xor
mov
fnstcw
rol
xor
and
xor
mov
add
and
pop
repnz
mov
add
and
push
repnz
xchg
stos
mov
add
and
repnz
mov
setg
and
push
repnz
fdivr
mov
add
and
sar
jmp
mov
repnz
mov
vmwrite
xor
movs
push
repnz
mov
jnp
mov
repnz
(bad)
mov
pmulhw
xor
mov
fidivr
test
and
xor
mov
movups
xor
js
repnz
mov
add
and
push
repnz
mov
psubusw
and
xlat
mov
unpckhps
xor
test
xor
fnstcw
xchg
xor
xchg
pop
repnz
mov
psubd
xor
push
pop
repnz
mov
pop
mov
and
fnstcw
lock
and
push
repnz
mov
add
and
pop
repnz
fdivr
jecxz
add
and
push
repnz
mov
add
and
repnz
jecxz
adc
xor
push
pop
repnz
mov
syscall
mov
and
push
repnz
mov
sete
xor
sbb
repnz
mov
lar
xor
out
pop
repnz
xchg
(bad)
mov
pandn
xor
dec
pop
repnz
scas
inc
inc
(bad)
lock
jecxz
add
repnz
mov
clts
lea
and
repnz
mov
mov
add
and
repnz
mov
cvtdq2ps
xor
or
fistp
jno
add
and
repnz
fistp
lea
and
push
repnz
fistp
mov
add
and
push
repnz
fistp
fimul
xor
test
xor
mov
paddw
xor
mov
fidivr
add
movs
xor
je
repnz
mov
ucomiss
and
repnz
mov
vmwrite
and
fidivr
or
ret
push
repnz
fidivr
movs
mov
and
fidivr
retf
mov
and
fidivr
adc
xor
dec
push
repnz
mov
getsec
pop
and
repnz
mov
addps
xor
or
xor
fnstsw
jp
add
and
or
and
imul
movups
fdivr
cmp
sub
hlt
pop
mov
mov
(bad)
sbb
mov
scas
and
out
dec
mov
adc
(bad)
hlt
add
push
repnz
mov
and
xchg
cmp
fidivr
push
xor
xchg
cmp
push
scas
cs
mov
fldcw
jle
jecxz
adc
xor
ja
rcr
and
lock
add
fisub
mov
imul
cmp
add
push
repnz
inc
imul
cli
out
dec
add
and
int3
test
repnz
out
xchg
cmp
sbb
int3
test
dec
sbb
or
sub
int3
test
dec
sbb
xor
add
fisub
and
inc
pushf
fisttp
ret
movs
xor
fs
int3
test
dec
sbb
xor
add
fbld
fistp
or
pop
adc
fwait
and
inc
test
leave
out
jb
xor
movs
xor
fs
or
test
dec
sbb
xor
add
fbld
jnp
imul
cli
out
dec
cmp
and
int
and
lock
xchg
adc
fiadd
retf
and
retf
movaps
sti
out
xchg
mov
or
repnz
mov
out
xchg
pop
sub
int3
test
dec
sbb
push
aam
pop
xchg
pop
int
adc
int
and
sub
out
jne
or
mov
out
push
dec
cld
jo
test
xchg
and
sub
mov
movaps
dec
sbb
or
xchg
mov
mov
in
xchg
pop
sub
int3
test
dec
sbb
push
leave
cmp
ds
sub
mov
push
lock
xchg
inc
sub
sbb
inc
mov
mov
repnz
jb
push
push
sbb
fisub
and
inc
mov
cli
or
iret
fisub
and
inc
fcmovu
xchg
in
jb
push
popa
pushf
mov
adc
mov
xor
jno
das
xchg
pop
int
cli
adc
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
xor
mov
lea
adc
jno
pop
push
mov
push
fcomip
xchg
pop
mov
movups
and
xor
jecxz
pop
mov
movups
pop
and
xor
retf
mov
movups
mov
xor
and
lea
and
xor
je
pop
mov
movups
out
and
xor
push
xchg
pop
mov
movups
xor
pop
push
shl
mov
jb
and
sub
dec
jge
mov
jl
push
sub
mov
fistp
ret
xchg
push
cmp
test
nop
ror
scas
xchg
sbb
sar
sbb
shl
mov
test
lods
dec
mov
enter
xor
scas
jl
repnz
xor
aad
jecxz
sub
cli
out
xchg
mov
or
in
dec
sbb
xchg
lea
fisub
fild
inc
mov
out
xchg
pop
sub
int3
test
dec
sbb
xor
add
fisub
jmp
mov
ds
out
jne
or
mov
out
imul
cli
out
xchg
test
and
mov
lock
jb
push
cmps
int
mov
and
inc
scas
lock
mov
in
push
aam
fisub
shr
mov
mov
cmp
dec
les
mov
(bad)
mov
les
jbe
xchg
dec
fyl2xp1
dec
xchg
xchg
push
inc
std
enter
cs
jne
sbb
dec
out
xchg
es
loope
mov
jne
sbb
dec
mov
xchg
push
cmps
xchg
sbb
dec
sti
xchg
push
inc
mov
cmp
sbb
int3
test
ret
sbb
out
xchg
inc
sub
pop
int
inc
dec
retf
and
inc
mov
push
push
icebp
int
mov
and
inc
mov
dec
out
jb
push
jo
jb
mov
out
imul
cli
out
jne
or
mov
out
imul
cli
out
xchg
mov
or
mov
adc
aam
push
mov
sbb
cmps
or
sbb
add
lea
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
rcl
xor
test
push
cmps
lock
sub
repnz
pushf
or
repnz
lea
push
sbb
inc
inc
fldpi
dec
sti
xchg
inc
inc
mov
fbstp
syscall
adc
sti
ds
jnp
adc
fistp
adc
pop
or
jo
xor
xchg
cmp
jecxz
adc
xchg
ds
outs
sub
hlt
and
adc
xchg
xor
movs
xor
ja
in
cmp
pop
cmps
xchg
mov
in
pop
sub
and
mov
add
push
sub
or
mov
and
pop
sbb
inc
imul
xchg
sti
and
fwait
cs
jne
sbb
jnp
or
sbb
lods
push
inc
add
and
shl
(bad)
lods
ficomp
pop
sub
mov
jmp
cdq
pop
adc
in
jns
out
ss
in
adc
mov
sub
inc
ins
sub
call
sub
enter
cmps
ja
xchg
ja
in
sbb
stos
mov
push
cdq
cs
adc
pop
push
repnz
hlt
loop
pop
inc
adc
and
jl
sbb
pusha
(bad)
xchg
add
in
sbb
xor
pop
jo
xor
xchg
les
in
push
fwait
push
in
push
add
fisub
rol
out
jb
or
dec
sub
push
stos
dec
sbb
add
mov
ds
int3
inc
lods
xor
lock
sub
fist
repnz
stos
xchg
rol
add
and
xor
out
xchg
jb
pop
jns
sub
add
push
mov
aam
push
mov
sbb
or
call
push
les
shl
frstor
int3
test
mov
add
lock
and
or
xchg
mov
or
xchg
lahf
xor
xor
jl
lock
ja
pop
mov
push
inc
lods
stos
adc
adc
pop
push
repnz
fidivr
adc
xor
je
repz
movs
mov
call
int3
mov
iret
and
dec
cld
add
icebp
sbb
jns
sub
push
inc
and
cmp
adc
push
repnz
xchg
jecxz
pop
sahf
sub
ds
inc
push
or
sub
imul
push
adc
xor
pop
jo
xor
xchg
scas
pop
mov
sbb
and
shr
jecxz
jecxz
sbb
mov
push
mov
sub
sub
pop
jns
sub
sub
inc
cdq
push
adc
icebp
sbb
jns
sub
push
inc
and
sbb
sub
pop
push
jecxz
inc
cmc
pushf
rcr
jecxz
ja
add
and
jecxz
jbe
mov
or
push
xor
jl
lock
cwde
xchg
pop
mov
pop
adc
xor
dec
lods
retf
and
push
mov
stc
sub
push
int
inc
jbe
xchg
dec
xchg
scas
inc
inc
(bad)
lock
imul
xchg
mov
loope
outs
dec
dec
imul
dec
add
push
lods
mov
inc
movs
pop
adc
and
inc
add
inc
jle
mov
movups
je
cmp
mov
push
fldenv
inc
jecxz
cli
push
push
mov
ds
inc
push
or
sub
lock
jne
and
fs
add
test
mov
rdtsc
test
adc
ja
pop
push
jecxz
jbe
mov
or
imul
inc
in
ret
mov
aad
cmp
add
ins
mov
pop
pop
push
repnz
fdivr
pop
fwait
ss
pop
inc
push
or
aas
jecxz
adc
jecxz
popa
inc
push
or
cmps
enter
push
mov
in
and
inc
ins
loope
outs
imul
lods
cmc
and
fwait
push
ins
jne
and
dec
loop
push
out
xchg
or
add
rcr
xchg
jbe
jecxz
pop
stos
sbb
int3
mov
iret
and
dec
ds
and
add
enter
sbb
fidivr
adc
xor
push
repnz
inc
mov
cli
out
jo
les
adc
sub
int3
inc
lods
addr16
sbb
or
test
adc
int3
inc
lods
jnp
sbb
push
xchg
cs
jno
dec
ds
inc
push
sub
int3
ins
mov
pop
aaa
sbb
cli
out
jge
fsub
dec
retf
inc
mov
cmp
add
ins
mov
adc
repnz
mov
movhps
and
mov
int3
test
lods
lock
mov
in
push
push
in
cmps
shl
rcl
shl
xor
mov
dec
add
push
mov
sub
lea
int3
xor
add
push
mov
and
movhps
or
pop
push
in
pop
ror
out
jb
push
inc
push
sub
push
inc
and
cmp
sbb
sub
jge
and
pop
mov
stc
sub
push
int
inc
pop
(bad)
dec
retf
inc
test
test
jne
and
fs
int3
test
call
jne
sbb
pop
push
hlt
out
mov
mov
ret
stc
push
xor
inc
xor
and
in
or
xchg
scas
pop
mov
sbb
sub
push
dec
xor
and
xor
jno
iret
test
ds
inc
push
sub
int3
ins
mov
pop
aaa
fsub
out
jo
dec
ds
inc
push
sub
int3
ins
mov
pop
aaa
test
cli
out
jl
adc
pop
push
mov
and
push
adc
and
ficom
mov
mov
(bad)
mov
sub
mov
and
bound
stc
sub
dec
int
inc
dec
loope
dec
xchg
scas
inc
inc
(bad)
lock
jmp
push
shl
push
fistp
int3
scas
adc
or
jne
sub
pop
mov
das
repnz
and
xor
stos
aam
nop
jecxz
push
mov
fstp
mov
rol
out
jb
push
jns
sub
push
inc
and
pop
sahf
jns
jo
xchg
ds
int3
inc
lods
stos
pop
sbb
add
mov
ds
int3
inc
lods
mov
call
jl
repnz
not
stc
push
xor
inc
xor
and
and
push
pop
mov
daa
(bad)
mov
and
and
mov
(bad)
mov
and
repnz
fidivr
dec
mov
and
push
repnz
mov
unpcklps
and
fidivr
popf
mov
and
push
repnz
xchg
pop
mov
packsswb
and
repnz
mov
jns
movs
xor
out
push
repnz
fistp
or
rcl
xor
mov
adc
sahf
clc
sub
pop
int
dec
xor
pop
mov
add
lea
xor
push
repnz
mov
das
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
iret
sbb
or
popa
inc
scas
enter
cs
jne
sbb
inc
dec
(bad)
inc
hlt
pop
mov
cmp
push
popa
(bad)
in
inc
jnp
sub
hlt
jb
inc
cdq
sub
add
lock
dec
sub
hlt
push
mov
push
adc
sub
add
push
lods
xor
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
dec
loope
outs
dec
inc
imul
(bad)
mov
in
mov
cdq
add
mov
push
cmps
mov
push
popf
cs
jne
sbb
inc
jnp
sub
hlt
pop
(bad)
jne
hlt
sbb
xchg
push
add
push
lods
jmp
adc
xor
pop
pop
repnz
mov
movups
int3
fisub
(bad)
xchg
inc
cmps
enter
out
push
jne
aad
dec
sub
inc
and
cmp
pop
inc
dec
sub
sbb
test
xlat
push
jb
iret
sbb
hlt
push
(bad)
jne
clc
and
xchg
div
shl
dec
retf
push
fistp
cmp
adc
dec
pop
fisub
push
fistp
repnz
and
inc
dec
loope
outs
jnp
imul
xlat
push
jb
iret
sbb
lods
or
xchg
pop
xchg
ret
imul
add
and
xor
xchg
mov
pop
cmp
or
mov
not
je
data16
adc
xor
outs
push
repnz
mov
movups
call
xor
xchg
mov
mov
sub
mov
adc
sbb
pop
push
(bad)
push
fistp
sysret
sahf
sti
add
repnz
cld
xchg
pop
mov
movups
leave
and
xor
jmp
lea
push
xor
pop
push
scas
xor
in
xchg
pop
mov
push
adc
imul
push
sub
push
fist
pop
mov
movups
cmp
pop
push
mov
xchg
pop
mov
push
adc
inc
and
xor
in
pop
mov
movups
pop
and
cmp
mov
jnp
jb
add
push
cli
xor
mov
pop
mov
movups
and
pop
push
jmp
push
fbld
movups
sbb
pop
push
fidiv
push
fist
movups
or
pop
push
out
and
dec
(bad)
and
xchg
adc
cwde
mov
(bad)
dec
hlt
push
mov
cld
sbb
ins
sbb
inc
jns
cmp
mov
and
mov
ror
fidiv
sbb
inc
pop
f2xm1
dec
int3
adc
dec
popa
cld
adc
jae
cmc
xchg
pop
int
hlt
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
add
jae
lods
xchg
pop
int
ja
in
and
cmps
mov
cli
xchg
adc
lea
loope
dec
les
lock
xchg
or
fwait
mov
sbb
hlt
pop
mov
stc
and
fwait
push
outs
jne
and
inc
dec
loope
outs
test
popf
dec
adc
add
and
repnz
mov
sysret
lea
sbb
scas
or
mov
adc
add
jmp
inc
dec
sub
aas
inc
or
(bad)
dec
dec
fstp
out
jb
or
mov
(bad)
inc
hlt
push
mov
push
add
sub
mov
and
jecxz
cmps
in
or
sub
mov
aad
movs
inc
mov
inc
punpckhdq
mov
pop
mov
loop
lea
int3
pop
push
repnz
pop
mov
xchg
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
dec
test
cs
and
(bad)
adc
cmp
pop
push
stc
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
and
int3
test
lods
in
and
xchg
adc
test
sbb
jne
cmc
and
call
inc
inc
fchs
inc
hlt
ins
mov
das
adc
cmps
int
jge
div
dec
stc
jmp
xchg
jb
mov
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
scas
xchg
jb
sbb
scas
dec
jmp
jg
cdq
or
mov
push
stos
mov
push
test
cli
jne
sbb
inc
pop
fnop
inc
hlt
pop
lea
bnd
mov
and
xor
mov
movups
cmp
mov
and
and
xchg
adc
or
enter
scas
lock
sti
out
xchg
mov
cld
sbb
cdq
add
sbb
out
jns
sub
mov
and
dec
sti
and
xchg
cs
jb
fstp
ja
jmp
sub
and
lea
and
xor
xchg
mov
adc
cli
sub
aaa
xlat
adc
mov
movups
and
jl
sbb
pusha
les
sbb
(bad)
push
fisub
xor
in
adc
cli
and
pop
push
fistp
aad
xchg
sub
or
repnz
pop
mov
jle
lea
daa
xor
xchg
pop
mov
add
mov
sbb
pop
push
repnz
pop
fistp
or
xor
push
repnz
mov
xchg
push
lea
lods
dec
push
repnz
dec
fistp
push
lea
add
repz
fistp
push
lea
rol
repnz
inc
fistp
pop
lea
js
push
repnz
dec
mov
add
lea
add
inc
fistp
or
xor
pop
push
repnz
fistp
sbb
movs
xor
repnz
fistp
or
xor
push
repnz
fistp
push
lea
loop
push
repnz
mov
outs
sbb
add
adc
dec
fistp
or
xor
push
push
repnz
inc
fistp
add
xor
pop
fistp
jge
xor
inc
push
bnd
fistp
add
add
jmp
push
repnz
mov
push
lea
jl
push
repnz
dec
fistp
jge
xor
dec
fistp
sbb
movs
xor
dec
fistp
sbb
add
mov
push
repnz
pop
fistp
pop
lea
push
dec
push
repnz
dec
fistp
jge
xor
inc
push
repnz
fistp
add
xor
push
push
repnz
mov
push
add
xor
push
repnz
inc
fistp
add
xor
dec
push
repnz
fistp
push
lea
pop
push
push
repnz
fistp
add
xor
inc
push
repnz
fistp
add
movs
xor
push
repnz
dec
fistp
adc
xor
dec
fistp
add
xor
inc
push
repnz
std
dec
mov
dec
sbb
movs
xor
inc
push
repnz
mov
dec
add
xor
push
push
repnz
pop
fistp
sbb
add
pop
dec
push
repnz
inc
fistp
add
xor
dec
push
bnd
fistp
add
xor
pop
fistp
add
movs
xor
push
bnd
inc
mov
pop
or
xor
push
repnz
mov
cmp
movs
xor
inc
fistp
add
xor
inc
push
repnz
mov
aad
lea
inc
push
push
repnz
fistp
sbb
add
adc
push
repnz
mov
sbb
lea
cli
inc
push
repnz
mov
and
lea
fadd
repnz
fistp
add
movs
xor
dec
push
repnz
inc
fistp
or
xor
push
repnz
inc
mov
mov
lea
cmp
push
repnz
mov
loopne
lea
sbb
push
repnz
dec
fistp
sbb
add
or
push
repnz
inc
fistp
add
xor
pop
fistp
add
xor
push
push
repnz
fistp
add
xor
dec
push
repnz
inc
fistp
sbb
add
daa
inc
push
repnz
inc
fistp
add
xor
pop
fistp
add
xor
inc
push
bnd
fistp
or
xor
push
repnz
mov
pop
sbb
movs
xor
push
repnz
inc
fistp
or
xor
inc
push
repnz
mov
aas
push
lea
push
dec
push
repnz
fistp
sbb
add
push
dec
push
repnz
mov
retf
add
add
repnz
inc
fistp
add
xor
inc
fistp
sbb
movs
xor
dec
fistp
sbb
add
fimul
repnz
fistp
add
xor
dec
push
repnz
mov
aaa
sbb
add
ins
dec
push
repnz
mov
nop
xor
dec
push
repnz
mov
adc
sahf
ror
adc
and
ds
test
adc
movups
xor
pop
inc
repnz
mov
movups
xor
pop
arpl
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
push
xor
pop
lahf
repnz
mov
movups
adc
xor
pop
movs
repnz
mov
movups
xor
pop
dec
repz
mov
movups
xor
pop
sbb
xor
mov
movups
add
push
xor
pop
sub
xor
mov
movups
add
push
xor
pop
sti
repz
mov
movups
adc
xor
pop
test
xor
mov
movups
adc
xor
pop
push
lock
mov
movups
xor
pop
jg
xor
mov
movups
pop
adc
xor
pop
or
xor
mov
movups
pop
adc
xor
pop
shl
xor
mov
movups
pop
adc
xor
pop
cli
lock
mov
movups
adc
xor
pop
xchg
xor
mov
movups
adc
xor
pop
push
icebp
xor
mov
movups
xor
pop
jge
xor
mov
movups
push
adc
xor
pop
or
xor
mov
movups
push
adc
xor
pop
aad
xor
mov
movups
push
adc
xor
pop
loope
xor
mov
movups
adc
xor
pop
mov
xor
mov
movups
and
xor
mov
movups
and
xor
mov
movups
add
push
and
xor
mov
movups
add
push
and
xor
mov
movups
add
push
and
xor
mov
movups
push
and
xor
mov
movups
aaa
and
xor
mov
movups
add
push
aaa
and
xor
fisubr
mov
aaa
aas
jne
out
dec
adc
and
sub
hlt
push
mov
mov
(bad)
sbb
inc
inc
sub
out
fistp
adc
sbb
jl
repz
js
cmp
cmps
mov
cmp
adc
pop
cld
ins
cmp
pop
inc
add
cmp
fistp
adc
sbb
push
hlt
xor
inc
cdq
adc
mov
out
xchg
pop
sub
int3
test
mov
arpl
jb
or
int
mov
fild
mov
add
fisub
and
jle
loop
adc
sub
int3
test
dec
sbb
push
xchg
cmp
add
push
repnz
inc
imul
cli
out
jne
or
and
mov
mov
mov
out
xchg
mov
or
ins
mov
mov
out
xchg
pop
adc
pop
push
repnz
test
fsubr
xchg
pop
adc
pop
push
repnz
movs
fcmovnb
out
jb
xor
movs
xor
fs
or
test
mov
mov
jb
xor
dec
test
mov
stos
out
jb
xor
movs
xor
fs
test
mov
lahf
out
jb
xor
(bad)
or
test
mov
jae
jb
push
xor
adc
mov
lock
push
fbld
fistp
xor
add
fbld
cdq
inc
imul
cli
out
dec
add
and
int
and
lock
lods
inc
adc
or
inc
fidivr
out
lods
test
push
or
mov
out
push
dec
ret
and
lea
fiadd
retf
and
jecxz
jecxz
sub
out
xchg
test
pop
push
retf
and
out
jecxz
sub
out
xchg
mov
or
xchg
pop
mov
repnz
jb
out
movs
xor
jecxz
or
sub
dec
sbb
sbb
pop
sub
int3
test
dec
sbb
push
sti
cmp
add
repnz
inc
imul
cmp
ds
jae
test
mov
aaa
data16
out
dec
sahf
xor
pop
push
mov
lock
xchg
push
sub
jo
imul
jecxz
sub
clc
out
xchg
mov
or
xchg
pop
mov
repnz
jb
or
xor
outs
lods
or
mov
sub
fisub
fild
add
add
fisub
and
jle
loop
adc
sub
stos
lods
or
xchg
pop
mov
repz
jb
add
into
fisub
fild
ss
in
xchg
pop
adc
popf
and
jle
jecxz
adc
sub
int3
test
dec
sbb
xor
frstor
jge
imul
cmp
add
push
repnz
inc
imul
cli
out
dec
mov
(bad)
iret
test
mov
aaa
bound
out
jne
or
scas
or
push
adc
int
jl
repz
in
push
adc
int
jl
repz
sub
lea
fidivr
xor
xchg
push
adc
int
jl
repz
test
scas
adc
int
jl
repnz
mov
in
adc
int
inc
and
inc
mov
mov
movaps
out
xchg
test
pop
push
retf
and
loopne
jecxz
sub
out
xchg
test
and
sti
lods
and
push
mov
hlt
out
jb
xchg
push
xor
jmp
or
xchg
pop
mov
out
jb
pop
imul
jbe
mov
hlt
out
jb
push
push
ss
fisub
fild
add
fcmove
fisub
fild
cmp
fisub
and
imul
movups
adc
pop
push
repnz
and
imul
movups
adc
ins
and
imul
cmp
jb
push
cs
pop
fisub
fistp
xor
adc
sub
mov
int
imul
cmp
add
repnz
inc
imul
cmp
add
repnz
inc
imul
cli
out
dec
lods
xor
pop
push
pushf
jbe
mov
aaa
fidiv
out
dec
adc
and
leave
test
or
lock
lods
cli
adc
or
pusha
out
outs
mov
sub
out
xchg
mov
mov
add
push
mov
aaa
fstp
out
jnp
ja
pop
push
repnz
pop
mov
push
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sub
imul
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
not
lea
es
push
repnz
pop
mov
adc
lea
adc
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
mov
repnz
retf
adc
out
xchg
cmp
push
(bad)
jbe
mov
adc
in
mov
xor
ja
shr
lea
fnsave
sbb
inc
jne
test
jecxz
cmp
and
or
jo
xor
xchg
cmp
loop
adc
xchg
add
repnz
mov
pushf
adc
leave
and
mov
pop
mov
movs
push
xor
sub
mov
lock
jb
cmp
xor
cmp
or
xchg
pop
mov
sub
jmp
fisub
and
inc
fcomp
dec
out
jb
push
sbb
xor
fistp
xor
add
fisub
fistp
xor
and
mov
fistp
xor
int3
fbld
sub
mov
lea
add
cmp
imul
cli
out
jne
or
mov
fistp
out
lods
mov
push
or
mov
fistp
out
xchg
xor
fidivr
xor
sbb
dec
ret
or
lea
fidivr
xor
cs
dec
cld
ja
push
sti
out
xchg
test
and
mov
and
in
mov
movaps
sti
out
xchg
mov
or
xchg
pop
mov
xor
xor
add
test
mov
mov
fisub
fild
sub
sub
add
mov
icebp
out
jb
and
mov
fild
sub
outs
sbb
or
xchg
mov
mov
in
xchg
pop
sub
int3
test
dec
sbb
xor
aam
mov
add
mov
lea
or
into
test
jne
lock
lods
xlat
adc
or
out
imul
pop
int
jl
repnz
push
imul
pop
int
jl
repnz
xor
dec
ret
movs
adc
int
jl
repnz
(bad)
imul
stos
xor
fs
daa
xchg
pop
mov
jecxz
mov
sbb
inc
sub
shl
mov
das
nop
lea
scas
pop
push
repnz
lods
retf
xchg
inc
cmp
mov
(bad)
sbb
rcl
in
lods
mov
adc
sbb
dec
test
jle
jp
pushf
push
add
repnz
mov
push
cmp
sbb
fcmovne
fisub
and
inc
ret
fstp
jb
push
and
adc
inc
imul
cli
out
jne
or
or
imul
cli
out
xchg
mov
or
lods
mov
lea
fisub
and
inc
(bad)
fld
out
jb
xor
movs
xor
fs
or
lods
dec
dec
sbb
xor
add
fisub
and
mov
jb
push
dec
pushf
rcr
scas
shl
mov
sbb
push
mov
lock
pop
int
push
sub
test
popa
sbb
sub
pusha
retf
and
cmp
pop
icebp
out
jb
sbb
mov
and
inc
mov
cmps
out
jb
push
aas
pushf
nop
fbld
fistp
xor
fbld
pop
inc
imul
cli
push
or
scas
in
push
outs
lods
inc
imul
cli
out
jne
or
or
push
dec
cld
and
xchg
test
jle
and
(bad)
mov
movaps
sti
out
xchg
mov
or
push
dec
cld
push
sub
dec
sbb
int3
dec
mov
popf
lea
fisub
fild
lea
int3
fisub
fild
sub
imul
xchg
pop
sub
int3
test
dec
sbb
or
das
xor
dec
mov
xchg
lea
test
int
dec
shl
call
add
add
adc
fistp
adc
xor
push
bnd
fistp
adc
xor
repnz
push
fistp
adc
xor
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
pop
push
bnd
fistp
fisttp
xor
fs
push
int3
test
xchg
fimul
adc
xor
pop
jnp
adc
ins
cld
and
push
and
or
fist
movups
xor
ja
rcr
push
fistp
mov
test
fwait
jbe
mov
das
cmc
lea
sub
(bad)
rcr
push
fistp
adc
xor
pop
push
pushf
xor
mov
aaa
gs
out
dec
mov
cwde
int3
test
mov
aaa
jno
cli
out
jne
or
scas
or
xchg
data16
sbb
out
lods
rcl
push
or
or
xchg
mov
out
lods
adc
movs
or
mov
fidivr
out
xchg
and
dec
pop
int
jl
repz
stos
imul
add
fidivr
xor
mov
lea
lea
fidivr
xor
push
push
dec
cld
adc
xchg
mov
or
dec
mov
mov
fisub
fild
fmul
int3
fisub
and
inc
xor
push
hlt
sti
pop
push
or
push
push
mov
cdq
or
inc
cmps
loop
in
xor
ja
in
inc
jge
mov
jno
pop
and
or
rcr
fwait
xchg
jge
adc
sbb
jbe
mov
das
or
push
ja
in
jl
jg
fidiv
cld
push
cmp
xor
int
mov
mov
xchg
xchg
or
adc
int
inc
push
retf
and
inc
mov
rsqrtps
int
mov
and
jle
jecxz
adc
sub
int3
test
mov
dec
out
jb
push
adc
outs
out
imul
cli
out
jne
or
mov
out
imul
cli
out
xchg
mov
or
fwait
mov
mov
out
xchg
pop
sub
int3
test
lods
cwde
sbb
xchg
jl
movs
xor
out
mov
xchg
jg
mov
cs
sbb
inc
adc
call
inc
mov
fidiv
sbb
inc
inc
fxtract
dec
popf
xchg
push
inc
movs
enter
cs
jne
sbb
dec
rcl
push
mov
mov
xchg
add
lods
dec
aam
cmovno
xor
scas
inc
inc
fnstcw
inc
mov
mov
movs
cmp
ds
xchg
test
fcomp
out
xchg
sub
retfw
and
callw
out
xchg
sbb
fiadd
retf
and
jge
cmps
lock
jb
sub
int
mov
and
inc
cld
fstp
out
jb
push
inc
pushf
sbb
mov
and
jle
or
daa
fwait
sub
or
repnz
pop
mov
jae
lea
and
xor
sbb
adc
xor
jl
sbb
pusha
(bad)
xchg
add
in
imul
jl
movs
and
mov
fistp
cmp
jmp
cmp
mov
sbb
gs
ror
adc
and
sbb
and
sbb
xchg
jl
movs
xor
add
scas
adc
push
movs
push
not
les
int3
das
pop
push
retf
and
rcr
cmp
movs
xchg
adc
adc
xlat
fidivr
pop
lods
dec
sti
mov
cs
push
repnz
pop
mov
das
jb
fbld
jl
movs
and
jno
test
push
cmp
pop
push
pushf
add
jecxz
les
xor
mov
out
scas
ds
leave
lock
hlt
sti
pop
push
or
mov
int3
cmp
adc
ror
adc
and
dec
aam
and
out
adc
xor
je
repz
pusha
jl
test
daa
xchg
and
rcr
jmp
jecxz
add
cmp
fs
repnz
mov
movups
xor
sbb
repnz
mov
movups
xor
mov
mov
mov
xchg
jl
movs
xor
sbb
scas
ds
leave
lock
hlt
sti
pop
push
or
mov
int3
cmp
adc
ror
adc
and
out
aam
and
aad
call
out
repnz
mov
movups
xor
cwde
push
repnz
mov
or
push
push
repnz
pop
xchg
inc
or
push
xor
(bad)
push
repnz
mov
push
adc
xor
mov
push
imul
sti
pop
push
or
popa
int3
push
mov
jae
adc
cmps
(bad)
mov
pop
mov
cmp
add
mov
rol
push
mov
aaa
arpl
out
jl
add
je
jb
sbb
push
mov
jae
adc
push
mov
in
mov
(bad)
repz
retf
repnz
xchg
loope
pop
xchg
ds
pop
jo
(bad)
jecxz
xor
out
retf
pop
mov
mov
push
hlt
adc
loopne
adc
adc
mov
sub
mov
and
hlt
sub
or
pop
fistp
lock
ret
inc
daa
sub
and
jmp
xor
mov
out
cld
rol
mov
add
rol
fiadd
(bad)
dec
iret
scas
adc
push
movs
push
not
les
int3
das
pop
push
retf
and
jne
retf
sub
lea
add
in
outs
inc
rcl
fidivr
out
add
mov
shr
mov
add
add
fiadd
(bad)
dec
int3
push
mov
jae
adc
les
xor
xchg
lods
scas
sbb
xchg
jle
mov
push
repz
imul
call
push
or
inc
mov
sub
cmp
and
xor
stos
cmps
push
xchg
pop
movups
or
mov
fistp
adc
dec
fist
repz
enter
push
mov
inc
sub
mov
cmps
out
push
fs
adc
sub
int3
imul
xchg
pop
sub
sub
neg
cmp
call
sbb
sub
stc
mov
and
xor
stos
cmps
push
lods
(bad)
icebp
pop
lea
adc
fidivr
xor
dec
mov
mov
or
imul
jge
movs
xchg
lods
cwde
sbb
xchg
jl
movs
xor
adc
jg
stos
lock
push
rcl
jne
and
inc
sub
mov
cmps
loop
out
xor
pop
inc
into
and
pushf
xor
push
and
push
fistp
mov
mov
pxor
(bad)
fisub
cmps
inc
call
cli
push
fs
ds
inc
daa
sub
and
in
out
jb
xor
sub
dec
test
mov
lock
xchg
dec
add
mov
mov
pop
fistp
lock
call
xor
push
test
popf
push
adc
int3
das
pop
push
retf
and
shl
push
fs
int3
test
lods
cwde
sbb
xchg
jl
movs
xor
cs
int3
dec
les
movs
push
not
les
int3
das
pop
push
retf
and
bound
adc
jno
cmp
pop
push
push
cs
mov
lock
xchg
xor
mov
push
repz
imul
movs
push
not
les
int3
das
pop
push
retf
and
push
mov
scas
push
adc
cld
xor
mov
mov
jns
adc
shl
push
fisubr
fistp
in
mov
xor
dec
fs
das
inc
jne
(bad)
mov
push
out
xchg
mov
mov
pop
fistp
lock
xor
cmp
xor
mov
adc
mov
ds
inc
daa
sub
and
in
out
jb
add
and
dec
movs
scas
inc
inc
retf
sbb
xchg
mov
xor
inc
movs
test
jle
or
daa
xchg
sub
add
add
push
adc
int3
das
pop
push
retf
and
ja
adc
mov
add
pop
mov
sahf
pop
imul
push
mov
inc
sub
mov
cmps
out
push
jae
mov
adc
sub
int3
imul
xchg
pop
sub
pop
inc
jmp
out
repnz
and
xor
scas
mov
push
rcl
les
int3
das
pop
push
retf
and
adc
ror
adc
and
shr
fs
setle
ds
inc
daa
sub
and
out
out
jb
inc
jnp
mov
mov
mov
aaa
mov
jne
sbb
inc
jg
out
cmps
inc
call
cli
xor
movs
xor
ja
in
jg
jne
out
dec
addr16
jbe
add
mov
rcr
mov
mov
repz
inc
imul
call
imul
jle
mov
sbb
aad
add
mov
jmp
push
fild
pop
mov
sub
jb
push
adc
cld
xor
test
mov
aad
add
mov
and
add
mov
and
int3
test
lods
call
inc
int
inc
dec
loope
dec
movs
scas
inc
inc
retf
sbb
fimul
inc
jb
sbb
push
mov
jae
adc
mov
mov
into
mov
dec
mov
das
or
mov
sbb
mov
pop
mov
out
jb
add
sub
xor
pop
imul
jle
mov
push
repz
aas
inc
imul
(bad)
push
rcl
jne
and
inc
sub
mov
xchg
adc
jnp
adc
pop
push
repnz
fnstsw
pop
add
adc
adc
pop
push
repnz
push
loop
pop
das
and
fist
repz
inc
imul
adc
or
imul
dec
jmp
xchg
xor
dec
mov
add
push
mov
aaa
out
cli
out
jo
mov
dec
scas
cld
xor
push
dec
mov
daa
sbb
jno
pop
mov
or
mov
mov
fdivr
push
fisub
inc
lods
into
daa
lea
and
xor
xchg
enter
lods
xor
add
and
outs
in
test
addr16
jbe
add
mov
rol
mov
add
adc
fiadd
loope
dec
xchg
scas
ds
leave
lock
hlt
sti
pop
push
or
scas
or
popf
pop
mov
lods
add
xor
in
repnz
mov
das
fwait
lea
pop
mov
jmp
(bad)
sahf
pop
push
dec
mov
ds
inc
daa
sub
and
shr
jb
add
mov
mov
add
push
mov
aaa
pop
push
cli
out
jnp
and
out
cmp
mov
pop
mov
shr
jb
lods
push
xor
lods
dec
int
add
push
mov
aaa
iret
push
cli
out
dec
and
and
sub
int3
push
mov
jae
adc
idiv
mov
les
movs
push
not
les
int3
das
pop
push
retf
and
inc
cdq
add
and
xor
cmps
cmps
xor
jl
icebp
xor
retf
mov
sub
lea
aaa
jne
and
dec
cmps
inc
call
cli
push
daa
mov
ds
inc
daa
sub
and
shr
jb
inc
dec
ret
fdivr
push
fisub
jle
loop
adc
sbb
push
hlt
and
pop
mov
icebp
pop
lea
push
jp
fiadd
push
adc
fistp
out
add
mov
sar
hlt
lods
cwde
sbb
xchg
jl
movs
xor
push
mov
jg
xchg
lock
push
rcl
jne
and
inc
sub
or
cmp
and
daa
inc
retf
int3
push
xchg
pop
mov
xchg
lea
daa
jl
lock
hlt
xchg
pop
mov
js
lea
xor
and
popaw
imul
push
les
int3
das
pop
push
retf
and
dec
sbb
je
pop
sbb
stos
xor
lds
int3
test
lods
scas
sbb
xchg
jle
mov
push
repz
add
dec
out
iret
stc
push
xor
inc
xor
and
ror
fistp
cmp
add
ins
mov
das
jl
repnz
mov
pop
mov
push
inc
push
sub
dec
test
mov
lock
xchg
pop
cmp
dec
mov
add
push
mov
aaa
aaa
push
cli
out
jne
sbb
inc
pop
loope
dec
xchg
scas
ds
leave
lock
hlt
sti
pop
push
or
sub
cli
xchg
pop
lods
adc
movs
adc
pop
push
repnz
lock
xor
and
adc
test
addr16
jbe
add
mov
rol
mov
add
aam
int
dec
add
mov
pop
fwait
and
add
xor
mov
add
mov
cmp
pop
push
pushf
jb
mov
and
xchg
pusha
add
push
repz
inc
imul
loopne
mov
and
inc
sub
or
cmp
mov
adc
sub
int3
imul
xchg
pop
sub
add
es
mov
rdtsc
stos
add
push
dec
and
sub
int3
cmp
mov
lods
fldz
xchg
mov
or
push
fiadd
pop
sahf
scas
push
adc
cld
xor
mov
pop
xor
sbb
jbe
mov
push
adc
xor
outs
pop
in
sbb
sar
out
xchg
adc
cdq
mov
mov
pop
fistp
lock
xlat
cs
jne
and
dec
cmps
inc
call
cli
push
and
jb
sbb
push
mov
jae
adc
mov
adc
cmp
das
sti
pop
and
xor
popa
sbb
jecxz
xor
adc
mov
or
xchg
(bad)
icebp
pop
mov
movs
xor
repnz
mov
setle
and
push
repnz
fnstsw
mov
adc
push
repnz
fidivr
pop
pop
and
repnz
mov
sete
and
push
repnz
mov
nop
xor
retf
xor
jecxz
mov
movs
xor
mov
fdivr
je
add
and
fistp
adc
xor
inc
push
repnz
fidivr
enter
sbb
repnz
fidivr
pop
and
push
repnz
mov
or
imul
adc
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jp
xor
mov
movups
xor
pop
outs
repnz
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
icebp
pop
mov
int
int
inc
dec
fld
dec
cld
xchg
jnp
mov
in
push
inc
(bad)
(bad)
ds
jnp
sub
hlt
pusha
mov
cmp
add
loop
jb
ds
hlt
je
jl
daa
adc
cmps
lds
data16
mov
ja
in
and
mov
and
and
or
sub
sbb
mov
cmp
cmp
mov
mov
and
inc
and
icebp
out
jb
mov
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
and
xor
mov
icebp
pop
mov
cdq
pop
int
inc
jnp
ror
mov
nop/reserved
sbb
inc
sub
and
mov
and
xchg
and
mov
dec
ficomp
pushf
(bad)
scas
inc
inc
cmps
sbb
test
ja
in
cmp
mov
sbb
imul
or
hlt
imul
sbb
inc
push
in
xlat
shl
push
cwde
sti
pop
imul
and
call
adc
and
pop
push
in
push
fbld
movups
sub
xor
inc
imul
push
cmp
dec
out
mov
fwait
mov
into
xchg
sbb
mov
cmp
mov
int
fidivr
lock
sub
jne
sbb
inc
inc
(bad)
dec
leave
xchg
ja
mov
cs
sbb
inc
inc
pop
and
mov
jg
out
xchg
mov
int3
inc
jnp
das
jge
mov
and
nop
cs
jne
sbb
inc
fucomp
xor
scas
test
mov
das
sub
daa
jae
movs
and
and
ret
mov
lods
or
adc
sbb
scas
in
and
or
push
sub
stc
out
xchg
mov
loope
dec
retf
pop
mov
lahf
in
jb
or
dec
sti
in
add
push
mov
aaa
push
cli
out
jnp
sub
dec
retf
test
mov
lock
pushf
cmp
adc
xor
pop
repnz
es
or
push
sub
stc
out
xchg
mov
and
inc
and
repz
jb
add
mov
loope
dec
retf
pop
mov
and
jb
add
and
jl
repnz
fs
pop
mov
xor
lea
mov
cwde
adc
pop
push
repnz
mov
movhps
adc
mov
sub
mov
xchg
adc
movs
xor
mov
int3
pop
or
sbb
add
jb
fisub
call
mov
sub
xor
gs
xor
pushf
jl
mov
daa
out
lea
fist
repz
fnstsw
psubsb
xor
aaa
push
repnz
mov
nop
xor
fcom
xor
fidivr
pop
mov
and
push
repnz
mov
nop
and
fistp
dec
mov
and
push
repnz
mov
setnp
and
repnz
mov
punpckhdq
cmp
mov
imul
add
and
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
xchg
pusha
mov
(bad)
lea
das
pop
push
retf
and
push
cdq
adc
sbb
fnstcw
push
jnp
sub
hlt
pop
mov
cld
push
cmp
add
sub
sub
jne
cld
add
inc
sbb
inc
pusha
das
or
enter
mov
pop
adc
int3
fisub
fistp
pop
lea
and
repnz
mov
rdtsc
lea
das
pop
push
retf
and
jne
cld
push
cmp
cmp
dec
(bad)
dec
enter
mov
ror
xchg
stos
xor
ror
test
cdq
or
cmp
dec
stc
sbb
mov
add
push
cmp
pop
push
std
xor
scas
xchg
pop
mov
movups
sub
xor
inc
imul
adc
int
pop
(bad)
dec
hlt
pop
(bad)
dec
gs
icebp
pop
pop
dec
pop
int
inc
pop
fld
dec
hlt
push
mov
or
sbb
loopne
data16
shl
dec
cld
call
call
cli
pop
inc
dec
and
mov
(bad)
dec
hlt
pop
(bad)
jne
ret
hlt
adc
xor
je
repnz
mov
or
jae
adc
das
and
xor
mov
pop
mov
push
adc
(bad)
and
xor
rcl
adc
pop
and
xor
int3
xchg
pop
mov
push
adc
aad
pop
push
sbb
push
(bad)
xchg
pop
mov
movups
fsub
pop
push
mov
xchg
pop
mov
push
adc
push
and
xor
dec
xchg
pop
mov
movups
sub
test
cmp
mov
enter
movs
cmp
pop
push
push
push
fild
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
xor
jno
or
mov
adc
cmp
cmp
jnp
das
jge
mov
and
xchg
adc
repnz
dec
frndint
dec
(bad)
xchg
pop
inc
mov
test
jns
and
or
pop
cmps
or
lea
cs
push
repnz
mov
adc
push
xor
dec
scas
cld
xor
jg
mov
jle
cmp
dec
std
sbb
test
out
or
xor
fs
test
stos
enter
cs
jb
aam
ja
jmp
xor
sbb
xor
pop
push
repnz
mov
push
adc
cmp
pop
push
mov
and
xchg
cs
jne
sbb
inc
inc
(bad)
dec
int3
and
sti
out
xchg
mov
rol
(bad)
dec
aam
jge
mov
out
jns
sub
test
cmp
mov
arpl
cmp
jnp
and
push
dec
in
or
jae
adc
pop
push
jecxz
push
fbstp
pop
mov
movups
fbld
pop
push
mov
push
fbstp
pop
mov
movups
dec
and
xor
mov
push
adc
jmp
pop
push
dec
xor
add
(bad)
jmp
and
sub
fistp
(bad)
pop
jae
adc
test
mov
pop
mov
movups
and
pop
push
call
xchg
pop
mov
movups
sbb
pop
push
in
and
rcr
out
xchg
or
cdq
mov
(bad)
dec
rcl
push
cmp
sbb
jp
sub
jge
ins
mov
in
(bad)
or
mov
jno
cdq
mov
lods
cli
out
xchg
mov
fs
push
repnz
mov
str
xor
inc
push
repnz
inc
call
cli
push
inc
push
or
(bad)
xchg
jle
cdq
add
add
mov
or
mov
clc
and
xchg
cs
jl
xlat
icebp
inc
push
repnz
dec
dec
in
or
mov
out
xchg
pop
sbb
inc
push
repnz
dec
dec
in
or
mov
out
xchg
pop
sbb
sbb
fistp
cmp
xor
jg
repnz
xchg
pop
mov
pshufw
and
repnz
mov
push
adc
xor
and
ret
jge
jecxz
sbb
xor
cmp
sar
sub
xor
pop
push
repnz
mov
pop
mov
xor
push
push
repnz
mov
cmovnp
xor
jg
repnz
xchg
pop
mov
xsaveopt
xor
data16
xor
fstp
adc
xor
push
inc
repnz
mov
bndstx
xor
popa
or
xor
jecxz
lea
and
xor
mov
(bad)
add
and
repnz
mov
cmovg
and
fistp
push
loop
adc
xor
sub
repnz
mov
push
adc
xor
jp
repnz
mov
jecxz
sbb
xor
jbe
repnz
fnstsw
jbe
add
and
xor
mov
movups
add
and
repnz
mov
maxps
xor
inc
push
repnz
xchg
pop
mov
shld
push
cmps
xor
jne
repnz
fistp
adc
xor
dec
push
repnz
xor
sbb
xor
in
repz
xchg
mov
loop
xor
xor
pop
push
repnz
mov
movzx
xor
push
push
repnz
mov
sysret
lea
and
jbe
fistp
stc
mov
and
repnz
mov
cvtps2pi
xor
sbb
xor
fnstsw
cmps
mov
and
push
repnz
mov
str
xor
(bad)
push
repnz
mov
invd
mov
and
fdivr
popf
pop
and
push
repnz
fnstsw
jno
add
and
repnz
mov
pxor
xor
push
fidivr
jae
add
and
push
repnz
mov
nop
xor
push
push
repnz
fstp
jno
add
and
repnz
mov
(bad)
mov
and
repnz
fdivr
xchg
xor
pop
push
repnz
fdivr
pop
pop
and
push
repnz
fstp
stos
mov
and
fnstsw
pop
stos
sbb
mov
int3
mov
jmp
sbb
add
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
jecxz
adc
xor
push
repnz
push
fistp
adc
xor
repnz
fistp
adc
xor
push
fistp
add
out
jne
sbb
inc
jl
ret
xchg
jns
test
cs
jne
sbb
inc
jae
out
dec
repnz
dec
inc
test
push
pop
(bad)
cld
ds
sub
hlt
jp
inc
cdq
and
and
mov
jns
inc
sub
mov
and
xchg
xor
ret
or
dec
loope
test
mov
mov
jae
int3
dec
fnstcw
inc
cli
enter
jp
xchg
pop
sub
int3
test
dec
sbb
push
retf
cmp
ds
xchg
int3
test
out
sbb
out
xchg
sub
fimul
mov
sub
xchg
pop
int
dec
inc
cli
sub
int3
mov
adc
lock
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
adc
xor
push
bnd
fistp
xor
int
inc
sbb
(bad)
dec
hlt
dec
mov
or
push
pop
(bad)
aam
ja
in
daa
jge
mov
and
xchg
inc
cmp
(bad)
fsin
dec
leave
xchg
pop
inc
movs
enter
shl
sbb
pushf
xchg
and
lock
push
scas
push
sbb
into
fisub
shl
push
test
div
sbb
inc
inc
fldln2
dec
(bad)
xchg
dec
inc
cdq
xor
xor
std
cmp
jge
stos
mov
push
test
sbb
dec
(bad)
xchg
mov
sbb
jns
sub
jge
and
dec
mov
or
sub
fimul
cmc
sub
int3
mov
jl
jmp
mov
repnz
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
int3
mov
cmps
dec
sbb
push
sub
jne
sbb
inc
inc
(bad)
dec
rcl
push
xchg
lock
sbb
inc
dec
fldl2e
dec
lock
inc
inc
mov
push
sbb
and
fs
or
test
lods
in
and
xchg
push
cmp
dec
in
sbb
mov
ror
addr16
loope
ja
in
aas
inc
fsub
sub
xchg
pop
int
ja
in
ds
mov
and
nop
cs
jne
sbb
inc
jnp
sub
hlt
imul
push
xor
inc
inc
hlt
sub
dec
mov
cmp
push
dec
push
repnz
mov
sbb
mov
jmp
lock
pop
xchg
pop
mov
inc
adc
xor
and
sub
das
sahf
or
jg
int
inc
dec
loope
dec
std
scas
popf
mov
out
xchg
push
push
jne
and
inc
jb
cmp
inc
imul
add
js
cmp
jle
sti
or
mov
sbb
jns
sub
loope
and
dec
mov
sbb
xchg
push
push
jne
and
inc
jb
cmp
inc
imul
or
js
adc
mov
les
jle
mov
or
lea
or
xchg
mov
or
imul
outs
pop
inc
imul
daa
add
inc
(bad)
shr
sbb
and
xor
int
pushf
inc
nop
lock
sub
(bad)
out
xchg
mov
mov
cs
fldenv
sbb
xchg
daa
add
add
aaa
inc
fidiv
and
adc
test
ds
jnp
sub
mov
sbb
jb
push
jno
ret
ds
inc
cmc
sub
int3
mov
jl
jmp
(bad)
fdivr
push
inc
hlt
sub
dec
mov
cmp
cmp
cli
sbb
mov
clts
lea
and
jbe
fistp
ror
and
xlat
mov
lsl
xor
gs
repnz
mov
add
and
push
repnz
xchg
pop
mov
ucomiss
xor
popa
push
repnz
xlat
mov
push
test
and
repnz
fstp
cmp
and
push
repnz
mov
setb
xor
mov
fidivr
push
mov
and
push
repnz
aad
xchg
adc
add
and
push
repnz
fdivr
ror
and
push
repnz
fidivr
pop
test
and
push
repnz
mov
por
and
push
repnz
fdivr
mov
and
push
repnz
mov
(bad)
mov
and
push
repnz
fstp
dec
xchg
and
xor
fstp
push
mov
and
push
repnz
mov
movzx
xor
xor
fdivr
mov
and
xlat
mov
movq
xor
in
push
repnz
fstp
jle
add
and
(bad)
mov
sidtd
xor
not
xor
mov
add
and
push
repnz
mov
add
and
fstp
or
and
push
repnz
mov
bts
xor
or
fistp
popa
mov
and
xlat
mov
psubw
xor
mov
xor
pushf
adc
jecxz
adc
(bad)
in
xchg
pop
adc
push
out
imul
lods
xor
pop
pop
repnz
mov
movups
xor
pop
jb
xor
mov
movups
xor
pop
repnz
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
adc
xor
pop
xor
push
add
jecxz
adc
adc
xor
pop
cmps
repnz
mov
movups
xor
pop
dec
repz
mov
movups
xor
pop
ins
repz
mov
movups
add
push
xor
pop
psllq
push
mov
loop
adc
add
push
xor
pop
dec
scas
and
adc
dec
cld
pop
cmp
inc
inc
push
adc
mov
cdq
pop
adc
cmps
in
inc
jns
js
mov
cs
mov
pusha
cmp
push
inc
ins
sub
mov
fistp
stos
xchg
cmp
fdivr
rcr
clc
rcl
hlt
lods
mov
cmp
mov
xchg
sbb
shl
adc
stos
inc
add
mov
xchg
xchg
pop
inc
mov
cli
push
and
inc
fisub
mov
imul
cli
out
jne
or
scas
or
imul
cli
out
xchg
mov
or
shl
mov
out
xchg
pop
sub
int3
test
dec
sbb
push
cmc
cmp
ds
push
mov
lock
xchg
inc
sub
int
inc
add
aas
test
mov
lock
jb
pop
push
pop
int3
fisub
and
inc
sahf
(bad)
out
jb
push
pop
pushf
fcmovnu
mov
cmp
xchg
aaa
retf
out
jne
or
mov
out
push
dec
cld
aas
sub
out
xchg
mov
or
sub
dec
sbb
jne
mov
xchg
pop
sub
int3
test
dec
sbb
push
(bad)
cmp
ds
push
stos
lods
ror
xor
mov
mov
mov
ret
mov
push
sub
test
inc
mov
or
icebp
push
adc
mov
fisub
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
aaa
sbb
stos
or
popa
jle
jecxz
adc
fdivr
sbb
adc
pop
hlt
pop
mov
cmp
push
jg
and
hlt
jb
jne
cld
sub
dec
sbb
addr16
jl
mov
cmp
sbb
or
and
mov
inc
cmp
sbb
aas
sub
dec
jge
mov
and
xchg
sub
loop
je
fmul
or
and
inc
loope
jns
jb
push
adc
pop
fisub
(bad)
loope
jb
or
and
sbb
lods
shl
xchg
sub
mov
sbb
inc
je
jmp
repnz
inc
inc
cmps
enter
enter
sti
ds
hlt
jge
jne
cmc
and
xchg
sbb
fnstsw
iret
sbb
shr
mov
es
mov
aam
int
mov
and
xchg
cmp
or
dec
fstp
rol
cmp
jb
out
jne
or
or
xchg
js
out
adc
sahf
add
push
mov
sbb
shl
jae
mov
sub
inc
repnz
mov
movups
and
xor
mov
movups
xor
pop
jge
xor
mov
movups
and
xor
mov
movups
(bad)
scas
in
push
jge
mov
cmp
pusha
sbb
sub
imul
cld
xor
inc
jno
cmp
in
arpl
mov
outs
cmp
push
inc
gs
inc
jge
mov
daa
add
or
pusha
hlt
dec
mov
push
adc
(bad)
xlat
imul
mov
cmp
pop
cmps
ror
jne
jecxz
push
jnp
sub
hlt
jne
imul
(bad)
ds
jnp
sub
hlt
or
sbb
and
outs
mov
mov
test
cld
sbb
sbb
lea
(bad)
dec
les
adc
ror
jae
jecxz
dec
jnp
sub
hlt
jne
jne
cld
sbb
dec
sbb
inc
sbb
or
inc
(bad)
mov
sbb
jnp
imul
int3
mov
lock
adc
mov
push
repnz
fidivr
pop
lods
das
adc
adc
push
repnz
fistp
cmp
fbld
pop
push
rcl
push
fistp
cmp
mov
or
lea
cld
jae
mov
ds
shl
jae
mov
ds
jnp
sub
shl
sbb
xchg
jns
outs
pushf
dec
(bad)
mov
xor
jmp
pop
adc
cdq
and
or
mov
daa
mov
sub
and
xor
xchg
mov
pop
fbld
ja
movs
and
dec
push
fistp
cmp
add
ins
test
xchg
sbb
fidivr
adc
sbb
int3
mov
lock
xchg
push
adc
fs
add
cdq
inc
xchg
lock
icebp
push
adc
push
(bad)
fisub
shl
in
out
cli
push
dec
mov
and
or
mov
cmps
adc
adc
outs
fistp
adc
sbb
inc
call
mov
scas
adc
xor
jbe
mov
push
fistp
rdtsc
sub
and
add
mov
(bad)
es
and
sub
mov
xor
pop
and
xchg
mov
sbb
mov
out
pop
sub
cmp
mov
dec
out
cli
push
pop
pop
ds
pop
in
adc
(bad)
and
jb
cmovno
cs
dec
cld
and
rol
jb
push
addr16
mov
push
out
bound
(bad)
jnp
push
add
pop
mov
movups
xor
std
push
repnz
mov
or
lea
or
repnz
push
lea
xor
movs
xor
jl
repnz
adc
sti
push
xor
inc
xor
and
mov
neg
adc
sahf
add
not
fiadd
sub
int3
mov
lock
popf
or
dec
mov
and
or
sub
inc
mov
sbb
jns
sub
pop
mov
mov
or
jo
adc
shl
pop
push
fimul
push
fistp
rdtsc
xchg
push
hlt
and
and
popf
mov
movhps
xor
jle
mov
or
push
push
repnz
pop
xchg
sbb
push
xor
inc
push
repnz
mov
push
adc
and
test
int3
test
lods
retf
xchg
jns
outs
pushf
aad
mov
mov
sbb
xchg
jns
outs
pushf
loope
mov
xor
adc
sahf
add
push
mov
sbb
movs
or
jg
int3
movss
xor
fist
xor
mov
or
lea
or
push
mov
or
push
xor
push
mov
sub
adc
xor
je
repnz
ret
jle
test
daa
xchg
and
xor
xchg
pop
pop
mov
add
fist
adc
in
(bad)
fisub
rol
pop
mov
sti
out
jb
sbb
and
inc
sub
outs
repz
imul
sbb
jns
sub
sub
mov
or
popf
sbb
pop
jo
xor
pushf
push
pop
mov
daa
xlat
lea
jecxz
push
repnz
call
jp
xor
push
inc
push
adc
xor
jl
repz
push
xchg
pop
mov
iret
adc
xor
je
repz
jo
pop
mov
mov
mov
inc
inc
fiadd
sbb
ss
or
sub
imul
adc
sbb
jns
sub
dec
movs
and
push
cdq
or
sbb
and
inc
sub
outs
mov
enter
adc
mov
push
repnz
fistp
pop
lods
cmp
push
adc
mov
shl
movups
sbb
push
hlt
adc
call
push
xor
out
repnz
mov
in
mov
xor
jl
lock
ss
pop
mov
push
adc
and
mov
cdq
xchg
lahf
sbb
mov
jecxz
pop
sub
and
rol
jb
sbb
jnp
imul
int3
mov
lock
popf
add
and
std
push
fistp
xor
push
adc
hlt
and
imul
movups
xor
inc
pusha
div
rcr
mov
push
xor
pop
adc
cmp
pop
push
fiadd
int3
mov
rdtsc
and
and
cs
fbld
or
push
sbb
xchg
repz
pushf
mov
mov
das
sbb
popa
xor
pop
mov
sbb
mov
dec
mov
(bad)
lea
and
fistp
push
lea
and
push
repnz
fistp
imul
repnz
mov
paddq
xor
mov
xor
fistp
shr
cmp
dec
sti
ds
mov
push
mov
movhps
xor
push
push
repnz
mov
invd
lea
and
repnz
mov
fs
jb
push
pusha
pop
aaa
ja
out
sbb
lods
repnz
xchg
or
mov
fldz
dec
iret
xchg
dec
mov
sbb
cdq
int
mov
aad
lods
ins
dec
sbb
push
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
int3
test
inc
cld
add
jg
pop
inc
dec
sub
mov
(bad)
dec
shl
icebp
out
jb
cmp
jnp
sub
cmps
mov
adc
cmp
test
test
mov
sub
sbb
fbld
iret
mov
(bad)
add
and
cmc
xor
retf
inc
mov
push
sub
adc
sub
repnz
mov
pop
mov
and
push
repnz
fnstsw
adc
xor
inc
push
repnz
fidivr
push
pop
and
fnstsw
mov
xor
xor
xor
fnstsw
nop
mov
and
push
repnz
fnstsw
pop
pop
and
push
repnz
xchg
sub
add
and
push
repnz
fnstsw
push
mov
and
push
repnz
mov
psubw
xor
sub
fidivr
jns
add
and
push
repnz
fnstsw
shr
pop
dec
dec
retf
and
jnp
stc
aaa
add
out
jnp
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
aaa
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
mov
out
jne
sbb
inc
jne
ret
xchg
jns
cmps
enter
cs
jne
sbb
inc
pop
fldz
dec
int3
xchg
dec
inc
xchg
enter
shl
in
inc
jnp
sub
hlt
jp
jne
cld
daa
cmp
sbb
inc
pop
sub
sbb
mov
sbb
sbb
inc
add
ds
mov
and
xchg
xor
and
and
int3
mov
sub
popa
mov
ds
inc
call
imul
add
lea
sub
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
int3
cmps
lods
mov
lock
xchg
in
test
rol
(bad)
dec
repnz
jge
movs
enter
cs
in
ds
sub
jge
mov
and
inc
sbb
xor
sti
and
imul
mov
out
mov
test
mov
xchg
or
mov
sbb
inc
inc
fchs
dec
aam
pop
inc
mov
cs
mov
jbe
cmp
mov
push
add
int
dec
pop
in
ds
int3
mov
dec
in
jb
add
xor
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
adc
xchg
cmp
cmp
in
das
jge
mov
cmp
sbb
ja
in
adc
mov
push
add
int
ja
in
sub
mov
sbb
mov
das
sub
mov
push
add
int
ja
jmp
cdq
push
sbb
outs
adc
mov
sbb
mov
xor
stos
xchg
neg
xchg
or
jo
lods
frstor
shl
or
dec
xor
pop
ror
out
jb
cmp
loope
outs
scas
inc
imul
push
sbb
inc
pop
loope
outs
add
scas
enter
add
jns
sub
cmp
test
mov
adc
adc
xor
pop
inc
mul
push
(bad)
jge
pop
mov
lea
lea
daa
inc
inc
loope
inc
(bad)
stc
mov
adc
xor
fistp
adc
xor
pop
push
repnz
mov
les
lea
and
jns
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
scas
pop
mov
add
lea
outs
pop
push
bnd
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
bnd
pop
mov
push
adc
xor
push
repnz
mov
dec
out
jb
add
daa
and
xor
mov
pop
mov
movups
sub
pop
push
jmp
xchg
pop
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
mov
push
mov
push
(bad)
xchg
pop
mov
movups
arpl
pop
push
cmps
xor
mov
shr
jb
push
dec
pop
cmp
in
and
mov
and
xchg
adc
rol
out
dec
aam
dec
inc
xchg
enter
shl
in
inc
jnp
sub
hlt
jns
dec
cdq
and
or
mov
ds
inc
sub
hlt
or
adc
cmps
lods
or
sub
sub
test
mov
enter
movs
cmp
pop
push
(bad)
xor
mov
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
movups
sub
inc
push
mov
and
xchg
sbb
test
(bad)
dec
les
ror
sub
jne
sbb
inc
js
loopne
shr
adc
sahf
sti
out
xchg
mov
cld
sbb
lods
lock
xchg
adc
mov
fldl2t
dec
hlt
imul
pop
pop
add
xor
adc
test
lods
jmp
pushf
loopne
mov
fnstcw
adc
xor
pop
inc
repnz
mov
movups
cwde
fsub
sub
and
nop
cs
jne
sbb
inc
jnp
sub
mov
xchg
jb
or
ja
in
cmp
mov
and
xchg
pop
cmp
pop
loope
dec
(bad)
scas
(bad)
rcr
lock
call
ja
in
mov
xchg
jbe
cdq
cmp
add
jmp
jb
and
dec
cmps
cld
push
add
int
dec
pop
in
cmp
mov
sub
jb
push
jns
sub
dec
dec
jmp
dec
out
imul
mov
hlt
into
test
mov
adc
jae
sub
test
or
xchg
pop
lods
jmp
push
push
movs
xor
jo
repnz
fnstsw
xor
add
and
push
repnz
mov
movzx
and
xor
fnstsw
xchg
mov
and
repnz
fnstsw
xchg
and
push
repnz
mov
xcrypt-ecb
cmps
mov
and
fidivr
ja
add
and
push
repnz
mov
(bad)
pop
and
repnz
mov
nop
xor
daa
push
repnz
fidivr
mov
and
repnz
fdivr
call
cmps
xor
xlat
push
repnz
mov
cmove
xor
rcl
xor
scas
add
cli
out
xchg
mov
fs
push
repnz
mov
str
xor
inc
push
repnz
mov
rdmsr
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
cvtps2pd
xor
movmskps
xor
fistp
dec
lea
and
push
repnz
mov
femms
adc
fisub
shr
mov
sbb
dec
jnp
sub
hlt
arpl
pop
cmps
ror
fs
loope
dec
jnp
sub
hlt
ja
jns
and
cmp
lea
jb
dec
sub
hlt
or
and
cdq
ds
jnp
cs
mov
add
adc
cmp
ja
in
das
jge
stos
xchg
lock
stos
push
or
mov
fistp
sbb
movs
xor
dec
push
repnz
mov
rdtsc
lea
and
xor
mov
mov
add
and
loope
outs
or
mov
sub
jne
sbb
inc
addr16
dec
not
in
push
cmps
cs
jne
sbb
inc
pop
fxam
dec
hlt
outs
mov
cld
das
cmp
cmovno
dec
inc
in
adc
mov
cmps
hlt
push
fs
fistp
push
jnp
sub
hlt
pop
mov
add
cmp
pop
inc
jle
das
ja
in
daa
jge
mov
add
inc
sbb
inc
bound
and
scas
call
sbb
cmp
fimul
mov
push
fistp
adc
xor
push
fistp
adc
xor
push
out
or
inc
imul
cli
or
fdiv
ja
in
es
mov
sub
push
pop
cmp
jbe
das
outs
daa
inc
imul
push
sbb
inc
pop
(bad)
dec
hlt
pop
xor
and
xchg
pop
cmp
inc
out
jo
mov
lock
cmps
jmp
dec
(bad)
sbb
mov
fiadd
inc
jl
and
cmp
mov
dec
cmps
cld
sub
xchg
cmp
es
inc
lock
pop
mov
jecxz
lea
daa
inc
inc
cmc
sub
int3
mov
lock
popf
push
add
and
and
int3
test
scas
lock
jmp
and
jbe
das
outs
xchg
mov
lea
cmp
xor
dec
cs
push
fistp
pop
and
stos
xor
pushf
mov
cmps
mov
cmp
test
lods
lds
pop
sub
push
dec
loope
dec
stc
scas
mov
pop
lock
xchg
push
push
jo
cmp
dec
inc
in
adc
movs
dec
sbb
pop
lea
and
xor
xchg
aas
pop
mov
or
rol
adc
aaa
and
icebp
push
fistp
adc
movs
cmp
push
test
jl
repnz
pusha
xchg
pop
mov
inc
adc
and
test
lods
lds
pop
sub
push
dec
loope
dec
stc
scas
mov
sbb
out
xchg
push
push
jo
cmp
dec
inc
in
adc
movs
dec
sbb
xor
pop
adc
iret
and
test
mov
pop
adc
cmp
xor
inc
mov
add
and
xor
fidivr
add
xor
jnp
repnz
mov
movd
and
push
repnz
mov
vmread
xor
or
xor
fidivr
ins
pop
and
repnz
mov
cmovs
xor
clc
push
repnz
mov
(bad)
pop
and
push
repnz
mov
punpckldq
and
xor
mov
psubq
xor
and
xor
fidivr
pushf
pop
and
repnz
jecxz
push
call
fs
int3
test
mov
prefetcht0
xor
dec
push
repnz
mov
prefetchw
xor
js
repnz
mov
mov
add
and
repnz
mov
rsqrtps
xor
pop
push
repnz
fistp
inc
lea
and
push
repnz
mov
adc
xor
sub
sbb
movs
enter
div
sbb
inc
inc
fldln2
dec
rcl
push
xchg
cs
jne
sbb
inc
jnp
sub
hlt
jnp
push
cdq
and
or
(bad)
jnp
sub
hlt
jle
cmp
sbb
inc
or
push
ja
in
sub
jne
std
sbb
xchg
adc
jl
pop
xor
mov
fwait
sbb
add
and
xor
mov
movups
xor
pop
je
xor
mov
movups
daa
xor
std
int
and
add
jl
cmp
stc
sbb
lods
shl
cs
sbb
inc
jns
loopne
into
xchg
pop
inc
mov
push
or
jl
fisub
hlt
push
mov
or
sbb
sar
dec
jnp
sub
hlt
mov
xor
sbb
std
ds
jnp
das
inc
xlat
mov
adc
nop
cmp
ds
inc
in
jae
mov
lock
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
dec
scas
fld
jb
push
dec
pop
ds
jnp
sub
hlt
push
mov
cld
and
imul
mov
loopne
inc
rcr
out
jb
cmp
dec
stc
sbb
enter
cs
jne
sbb
dec
inc
std
sub
int3
stos
mov
(bad)
aaa
add
cli
out
jne
sbb
dec
jnp
and
cmp
out
or
dec
xor
pop
(bad)
scas
mov
pop
lock
xchg
adc
aaa
inc
jne
outs
aas
inc
imul
push
push
jne
and
inc
jne
outs
adc
mov
sahf
or
ds
out
or
and
inc
mov
push
pop
jne
and
clc
push
int3
test
movs
jecxz
adc
movs
adc
push
repnz
nop
(bad)
das
xlat
mov
and
xor
mov
xor
add
push
mul
pop
push
sub
dec
retf
dec
lods
cmps
sub
imul
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
adc
add
sub
push
repnz
fistp
adc
xor
push
fistp
sbb
sub
cmp
stc
test
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
dec
dec
retf
and
inc
cdq
push
adc
cmps
hlt
push
jl
fistp
push
jnp
das
jge
movs
mov
into
xchg
cs
(bad)
jmp
ja
jmp
test
xchg
inc
inc
cmps
enter
int3
push
pusha
(bad)
idiv
push
jnp
sub
hlt
add
call
mov
call
adc
and
pop
push
out
push
fild
movups
adc
pop
push
in
cmp
rol
jnp
or
sub
sbb
lods
ret
call
inc
inc
in
dec
int3
mov
lock
xchg
loopne
scas
sbb
inc
jnp
sub
mov
out
push
popf
cs
jne
sbb
dec
inc
sti
and
mov
movups
and
pop
push
out
push
fild
add
xchg
cmp
ds
jnp
sub
jne
clc
and
xchg
and
ss
dec
loope
outs
aam
imul
cs
jl
fnstenv
ja
jmp
mov
push
rsqrtps
fisub
hlt
push
xor
and
nop
cs
and
and
mov
(bad)
in
jb
pop
pusha
mov
loope
dec
les
lock
lods
icebp
adc
adc
pop
push
repnz
mov
push
push
jnp
ja
pop
push
repnz
mov
xchg
lea
js
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
sti
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
mov
add
xchg
cmp
xor
xor
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
pop
and
xor
nop
xchg
pop
mov
movups
add
pop
push
enter
mov
lock
jb
cmp
out
mov
stos
enter
cs
sar
push
jnp
sub
hlt
mov
sti
and
xchg
push
cmp
fxtract
dec
hlt
js
dec
mov
or
jne
rcr
mov
fdivr
adc
xor
pop
inc
repnz
mov
movups
and
fs
int3
test
lods
icebp
and
xchg
adc
xchg
jmp
lods
std
and
nop
push
or
and
fisttp
test
cdq
or
cmp
cmp
pop
(bad)
dec
hlt
arpl
push
mov
and
xor
mov
movups
and
add
test
scas
enter
push
sbb
inc
jnp
and
dec
lods
fstp
out
jb
or
and
sbb
stos
enter
adc
jns
sub
es
inc
xor
and
fwait
cs
jno
aam
ja
jecxz
jbe
mov
push
adc
xor
inc
inc
shl
jbe
mov
push
adc
out
and
xor
out
xchg
pop
mov
movups
(bad)
and
xor
repz
pop
mov
push
adc
shl
push
lock
rcl
adc
inc
and
xor
(bad)
xchg
pop
mov
movups
inc
and
xor
mov
pop
mov
movups
retf
push
sbb
push
fbstp
sbb
xchg
sbb
dec
pushf
inc
fisub
sar
adc
xor
pop
inc
repnz
mov
movups
xor
pop
js
xor
mov
movups
xor
pop
push
xor
mov
sbb
mov
out
xchg
pop
and
sbb
repnz
xchg
sbb
mov
in
mov
movs
mov
push
fwait
cs
sbb
inc
jnp
sub
hlt
je
inc
cdq
daa
push
cmp
js
and
inc
dec
loope
outs
cmp
icebp
dec
pop
lea
and
repnz
mov
clts
lea
and
or
and
inc
movs
enter
cs
(bad)
fdivr
push
jnp
cs
mov
sbb
xchg
sbb
dec
pushf
stos
fbld
shl
or
and
mov
shr
das
sub
sti
out
xchg
mov
fs
push
repnz
mov
sidtd
xor
inc
push
repnz
scas
mov
loopne
lock
xchg
or
lahf
mov
(bad)
dec
aad
jle
cmps
enter
push
or
and
bound
test
cdq
or
sbb
sub
and
lea
lock
sub
sbb
inc
jnp
sub
movs
mov
pop
cmps
add
and
xor
aam
xchg
sub
add
and
repnz
mov
cmpxchg
xor
pop
push
repnz
xchg
pop
mov
bswap
mov
and
inc
repnz
mov
lar
xor
inc
push
repnz
mov
dec
xor
add
and
repnz
mov
psadbw
and
push
repnz
mov
btc
and
push
repnz
fidivr
jnp
add
and
repnz
mov
ud2
mov
and
fidivr
push
lea
and
push
repnz
fidivr
lds
and
push
repnz
mov
(bad)
mov
and
xor
xchg
(bad)
sbb
mov
out
xchg
pop
sub
jge
and
sbb
add
and
xor
mov
movups
xor
pop
je
xor
mov
movups
xor
pop
repnz
mov
movups
add
and
xor
cmps
xchg
adc
out
jb
sbb
push
sub
daa
jge
mov
and
xchg
pop
cmp
dec
in
sbb
enter
fidiv
sbb
inc
inc
fxtract
dec
leave
xchg
push
inc
mov
cs
jne
sbb
xchg
mov
add
fwait
push
adc
mov
fild
push
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
sbb
mov
out
xchg
pop
and
ror
jnp
mov
div
(bad)
ds
jnp
sub
mov
or
int
out
xchg
mov
fld
dec
rcl
out
test
cmc
jl
sar
push
jnp
sub
hlt
gs
jp
jecxz
aaa
xchg
sbb
outs
pushf
and
mov
shr
icebp
out
jb
sbb
pop
push
mov
nop
xor
dec
push
repnz
mov
(bad)
setle
sub
pop
fld
dec
aam
gs
xchg
enter
cs
jne
sbb
inc
pop
in
push
out
imul
mov
int3
inc
inc
(bad)
dec
rcl
add
sahf
add
neg
fiadd
add
jge
movs
mov
or
xor
jp
jmp
mov
xchg
or
addr16
and
test
mov
or
scas
add
and
div
mov
mov
push
sub
add
fs
repnz
mov
movaps
and
push
repnz
mov
wbinvd
lea
and
fistp
mov
and
fidivr
adc
xor
mov
xor
fistp
scas
mov
and
fidivr
lods
mov
and
repnz
fidivr
retf
mov
and
fistp
test
add
and
in
and
stc
test
mov
sahf
and
and
fimul
mov
push
fistp
adc
xor
push
repnz
mov
adc
lea
pop
pop
push
repnz
mov
cmp
push
xor
pop
push
repnz
pop
mov
dec
adc
xor
dec
inc
aam
cmps
and
inc
xchg
enter
cs
mov
int3
inc
jnp
sub
mov
cmp
cmp
dec
out
add
mov
fst
adc
cwde
dec
stc
sbb
scas
enter
mov
dec
movs
xor
jp
jmp
dec
ret
cs
xchg
adc
pop
ror
into
scas
rcl
jecxz
sbb
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
sub
sar
out
xchg
mov
loopne
cmps
(bad)
xchg
jp
cdq
or
sbb
sar
dec
jnp
sub
hlt
mov
xor
add
sbb
and
movs
mov
cli
xchg
(bad)
mov
adc
jge
mov
add
pop
aad
push
xor
dec
inc
loopne
inc
ret
mov
repnz
jb
add
and
mov
mov
add
sub
push
fistp
adc
adc
xchg
lods
or
mov
adc
or
fdivr
jle
adc
inc
ret
mov
repnz
jb
cmp
jnp
sub
hlt
push
mov
std
sbb
call
shr
dec
mov
cli
and
xchg
div
(bad)
icebp
jns
repnz
inc
mov
sbb
dec
pushf
push
fsub
fistp
sbb
mov
in
xchg
pop
sub
dec
inc
loope
dec
int3
call
mov
add
push
repnz
mov
sbb
pushf
and
xor
mov
fistp
push
mov
and
repnz
mov
packuswb
and
push
repnz
mov
nop
xor
sub
repnz
mov
punpckldq
and
push
repnz
fistp
call
movs
xor
or
xor
mov
paddb
and
pop
loope
outs
cmps
inc
imul
add
and
repnz
mov
invd
lea
and
xor
mov
(bad)
lea
and
repnz
mov
cvttps2pi
and
fs
int3
test
lods
call
cmp
dec
(bad)
dec
rcl
adc
push
sbb
inc
jl
sub
in
cmp
mov
and
xchg
adc
scas
mov
loope
dec
int3
mov
aaa
hlt
jae
out
jnp
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
mov
aaa
lods
jae
out
jne
sbb
inc
dec
fld
inc
hlt
push
mov
adc
push
push
inc
inc
xor
jmp
jno
daa
push
dec
jmp
xchg
cs
jno
fidivr
mov
xchg
ja
mov
sbb
or
mov
call
adc
cmp
xor
stos
xchg
pop
mov
sbb
mov
out
xchg
pop
sub
sbb
cli
and
nop
div
and
pop
loope
outs
out
imul
cs
jge
fnstcw
mov
cmps
xchg
lock
adc
push
mov
(bad)
dec
hlt
push
(bad)
jne
clc
and
xchg
cs
xor
pop
imul
daa
push
xchg
add
and
xor
mov
movups
add
push
xor
pop
or
xor
mov
movups
add
push
xor
pop
enter
sub
jecxz
adc
xor
pop
cmp
mov
movups
add
push
xor
pop
adc
xor
mov
movups
xor
pop
push
repz
mov
movups
adc
and
inc
inc
loope
outs
stos
inc
imul
add
and
repnz
mov
(bad)
lea
and
repnz
mov
sysenter
lea
and
repnz
mov
(bad)
lea
sbb
or
mov
sti
and
xchg
adc
enter
(bad)
dec
hlt
pop
mov
clc
and
xchg
cs
hlt
inc
jnp
sub
hlt
jb
push
cdq
sub
cmp
add
and
inc
inc
loope
outs
ss
imul
add
and
repnz
mov
wbinvd
lea
and
repnz
scas
mov
out
xchg
or
lahf
mov
(bad)
dec
retf
xchg
jle
movs
enter
out
pusha
(bad)
in
ds
inc
in
sub
int3
xchg
lods
enter
push
sub
jb
fdivr
push
jnp
sub
hlt
pop
mov
add
sbb
fisttp
fs
pop
jecxz
adc
mov
movups
xor
pop
inc
repnz
mov
sbb
mov
out
xchg
pop
sub
and
mov
and
xchg
adc
mov
jecxz
jle
mov
dec
cli
and
xchg
or
test
(bad)
dec
hlt
pop
lea
clc
sbb
xchg
adc
inc
pushf
fbld
(bad)
xchg
js
cdq
or
cmp
cmp
push
ror
mov
es
ins
mov
dec
pop
push
repnz
mov
movhps
xor
or
and
xor
xchg
or
xor
adc
fldenv
pop
push
ficomp
pop
scas
lock
jnp
push
bnd
mov
adc
add
push
push
repnz
mov
cli
adc
xor
push
repnz
mov
and
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
xchg
adc
xor
pop
push
repnz
pop
mov
push
add
or
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
adc
adc
pop
push
aad
push
fist
movups
add
pop
push
enter
mov
cmp
jb
or
sub
cmp
jne
cld
add
imul
mov
in
(bad)
les
fisttp
fwait
shl
in
inc
inc
fsincos
dec
(bad)
xchg
push
inc
mov
sbb
jns
or
mov
call
adc
and
pop
push
out
push
fbld
adc
or
mov
hlt
dec
mov
cld
push
cmp
add
ja
in
mov
scas
mov
lock
sti
out
xchg
mov
sbb
mov
push
test
repz
cmp
push
adc
mov
pop
mov
movups
daa
and
xor
mov
(bad)
out
jb
push
popa
pop
ds
jnp
sub
hlt
push
mov
cld
pop
cmp
add
cmp
int
and
loopne
cmps
jmp
sub
jmp
mov
lock
sbb
inc
jnp
sub
cmps
mov
outs
fwait
add
and
push
push
fistp
add
mov
push
xor
pushf
das
pop
mov
daa
mov
and
scas
push
fistp
iret
lea
add
sbb
repnz
mov
movntq
xor
rcl
fidivr
mov
add
and
fistp
sbb
movs
xor
aas
push
repnz
mov
emms
mov
and
fidivr
out
add
and
push
repnz
fidivr
loop
add
and
push
repnz
pushf
mov
aaa
fs
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
cmp
lea
sbb
push
bnd
fistp
xor
cli
out
jae
les
inc
jnp
sub
hlt
push
mov
or
sbb
sub
sbb
lods
sti
and
nop
shl
in
inc
pop
fsqrt
dec
(bad)
xchg
push
inc
mov
mov
sub
in
cmp
test
dec
sbb
pop
enter
movs
cmp
pop
push
push
push
fild
movups
das
and
es
cmc
test
mov
cmps
lock
jl
ret
ds
jnp
sub
hlt
push
mov
push
adc
cmps
in
jns
sub
mov
jne
cli
and
xchg
cs
jae
fstp
push
jnp
and
cmp
out
sbb
xchg
lar
pop
fbld
fidivr
adc
xor
pop
inc
repnz
mov
sbb
mov
out
xchg
pop
sub
and
cmps
mov
sti
xchg
adc
mov
loope
outs
test
loopne
push
cmp
in
cmp
cmps
xchg
jmp
add
xor
sbb
cdq
or
push
and
cmps
push
fistp
cmp
add
ins
jp
add
push
lock
loopne
pop
mov
xchg
adc
xor
pop
jo
xor
xchg
cmp
in
adc
sbb
repnz
mov
(bad)
mov
and
fistp
pop
mov
and
push
repnz
mov
jbe
movs
xor
add
xor
mov
(bad)
mov
and
repnz
mov
paddd
xor
addr16
repnz
fidivr
dec
mov
add
(bad)
sub
inc
imul
add
lea
sub
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
sbb
int
inc
inc
fld
dec
rcl
loop
cmps
out
push
arpl
adc
hlt
bound
add
ror
addr16
loopne
ja
in
cmp
mov
and
xchg
push
push
jbe
adc
dec
jnp
shr
in
adc
and
xor
scas
xchg
pop
mov
movups
sub
ja
cmp
test
inc
std
and
xchg
adc
test
in
mov
scas
mov
xor
int3
fisub
ret
inc
cdq
movups
cmps
in
push
arpl
adc
mov
movups
xor
pop
pop
repnz
mov
movups
int3
fisub
int3
xchg
inc
cdq
or
or
aad
push
inc
shr
inc
hlt
test
mov
jle
cmp
dec
clc
sbb
mov
push
add
sbb
sbb
cdq
or
cmp
cmp
pop
jb
push
fistp
and
adc
xor
pop
push
lock
mov
movups
xor
pop
and
xor
mov
movups
add
push
xor
pop
iret
repz
mov
movups
and
xor
mov
movups
add
push
xor
pop
test
mov
movups
adc
xor
pop
cmp
xor
mov
movups
adc
xor
pop
mov
xor
mov
movups
pop
adc
xor
pop
call
mov
movups
xor
pop
lock
mov
movups
xor
pop
fcomi
xor
mov
movups
sbb
jo
fcmove
test
stos
jecxz
adc
and
xor
mov
movups
xor
pop
jne
xor
mov
movups
xor
pop
push
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
sbb
mov
out
xchg
pop
sub
cmp
mov
add
sbb
ja
in
adc
mov
and
xchg
sub
mov
dec
rcr
pushf
rcl
rcl
sbb
dec
hlt
or
cmp
sbb
inc
or
in
adc
mov
add
jns
sub
js
and
inc
imul
movups
and
xor
test
pop
mov
movups
adc
pop
push
(bad)
xor
xchg
xchg
pop
mov
movups
push
and
and
mov
mov
js
cmp
sub
daa
jge
mov
adc
ins
sbb
inc
jns
xor
in
sub
mov
sbb
mov
jp
pop
outs
push
inc
imul
jmp
mov
mov
and
call
dec
jnp
das
jge
mov
add
sbb
ds
fimul
shl
imul
or
lea
sub
push
repnz
mov
push
adc
xor
pop
push
repnz
int3
nop
lods
xor
sbb
push
xchg
in
mov
rol
(bad)
dec
(bad)
xchg
jge
xchg
enter
out
jge
in
aas
dec
jb
sbb
test
mov
jg
add
sub
and
mov
add
push
sbb
jle
xor
and
mov
add
jns
or
mov
cmp
and
xchg
cs
sbb
inc
jnp
das
jge
ret
mov
and
xchg
add
fcmovu
mov
sub
and
xchg
pop
int
push
jnp
sub
dec
nop
cld
and
xchg
pop
int
ja
out
and
scas
mov
lock
push
or
fisub
int3
mov
push
adc
xor
sbb
xor
pop
mov
sbb
nop
push
or
and
inc
jp
pop
outs
mov
mov
adc
mov
stos
push
fistp
or
push
push
repnz
fidiv
add
push
mul
pop
push
loope
dec
leave
mov
movhps
push
pop
mov
xor
lds
push
fisttp
push
adc
daa
and
xor
sub
adc
cmp
pop
push
jnp
push
fistp
mov
or
push
and
push
nop
xor
hlt
xchg
pop
mov
or
push
mov
pop
push
xlat
xor
sbb
push
adc
aas
and
xor
sbb
adc
cld
and
xor
bound
adc
and
mov
xchg
pop
mov
push
adc
test
pop
push
xor
fisttp
pop
mov
or
push
dec
and
xor
jnp
pop
mov
or
push
dec
and
xor
mov
adc
adc
pop
push
or
push
fbld
sbb
mov
int
jg
out
xor
mov
pop
mov
movups
daa
and
xor
mov
movups
sbb
pop
push
fbstp
push
fisttp
adc
push
and
xor
call
lea
push
jl
pop
push
mov
xchg
pop
mov
movups
push
and
xor
(bad)
xchg
pop
mov
movups
sub
mov
jg
push
adc
cmps
hlt
push
data16
fistp
inc
jnp
sub
hlt
pop
mov
add
daa
cmps
fmul
jnp
jmp
ins
jnp
sub
mov
add
inc
sbb
inc
bound
lahf
dec
jmp
lods
enter
movs
jne
sbb
dec
repz
cmp
call
jne
sbb
dec
cld
xchg
add
enter
cs
jne
and
inc
pop
loope
dec
enter
mov
sbb
movs
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
cvtpi2ps
and
call
inc
xchg
enter
push
sbb
inc
dec
(bad)
inc
hlt
pop
mov
cmp
sbb
fimul
jl
in
jl
and
hlt
jae
push
cdq
sub
or
icebp
ds
inc
shr
int3
xchg
lods
(bad)
lock
cwde
cs
mov
int3
inc
pop
(bad)
dec
retf
xchg
jno
mov
cs
jne
sbb
inc
jnp
sub
hlt
outs
mov
cld
add
inc
sbb
cwde
dec
loop
xchg
ret
dec
mov
es
jge
pop
sbb
or
pushf
pop
mov
push
adc
xor
pop
push
repnz
mov
adc
lea
add
sub
int3
xchg
lods
push
dec
sbb
pop
cmps
repz
sub
sbb
mov
adc
outs
sbb
inc
jnp
or
enter
push
pop
lock
xchg
adc
fwait
mov
iret
inc
inc
(bad)
dec
les
in
push
xchg
cs
jne
sbb
inc
jnp
sub
int3
movs
mov
rcl
sahf
sub
fstp
fiadd
(bad)
dec
hlt
push
mov
add
sbb
and
or
mov
mov
mov
sti
movups
add
mov
or
lea
pop
dec
push
repnz
sub
mov
movups
xor
push
push
repnz
mov
or
lea
or
repnz
pop
mov
sbb
xchg
or
dec
mov
retf
iret
test
movs
lock
push
adc
jne
and
jbe
int3
test
mov
sub
lea
aaa
adc
xor
pop
jge
sub
test
and
lock
sub
iret
lods
and
inc
cdq
adc
add
ss
jge
fld
pop
call
xchg
push
add
and
enter
xchg
out
sbb
xchg
adc
inc
pushf
neg
mov
leave
mov
aas
mov
clts
xchg
dec
push
xchg
icebp
xor
adc
pop
mov
retf
adc
mov
pop
push
mul
pop
mov
data16
xor
cmp
jo
int
push
lea
and
xor
fistp
mov
and
push
repnz
mov
jbe
movs
xor
push
push
repnz
mov
psubd
xor
mov
fidivr
inc
mov
and
fidivr
push
mov
and
push
repnz
mov
(bad)
mov
and
(bad)
sub
int3
xchg
lods
das
dec
sbb
add
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
push
repnz
int3
xchg
lods
jg
sbb
push
test
in
mov
rol
sbb
jge
mov
add
outs
adc
mov
fldl2e
dec
lds
fimul
test
fdiv
sbb
inc
pop
fdecstp
dec
hlt
jle
dec
cdq
pop
sbb
xchg
sbb
xor
and
mov
mov
movups
and
xor
mov
movups
xor
pop
dec
cld
and
pop
push
dec
cmc
and
xchg
cs
mov
into
inc
pop
(bad)
dec
rcl
or
sub
mov
and
jne
stc
and
xchg
or
cmp
xchg
je
mov
adc
ds
inc
fmul
or
inc
imul
or
lea
sub
push
repnz
mov
pop
adc
sbb
gs
or
popa
inc
mov
jmp
pusha
(bad)
fdivr
dec
jnp
sub
mov
adc
inc
push
sub
sbb
lods
in
and
call
inc
inc
fmul
scas
and
dec
cdq
or
cmp
cmp
jnp
and
rcl
lea
daa
or
jns
xchg
rol
jecxz
ja
add
and
push
repnz
fidivr
sti
lea
and
fistp
push
mov
and
xor
mov
punpckhdq
and
repnz
mov
psrad
xor
mov
fidivr
sbb
and
fistp
add
int
dec
jne
cmp
fistp
adc
xor
push
repnz
mov
das
adc
xor
pop
push
repnz
mov
cmp
lea
sbb
or
push
mov
cli
out
jne
sbb
inc
inc
fld
dec
into
xchg
jns
movs
enter
jecxz
fs
sar
inc
jnp
sub
mov
add
pop
sbb
inc
imul
jge
mov
and
fwait
push
or
and
inc
loope
outs
cmp
mov
lea
and
repnz
mov
clts
lea
and
loope
outs
arpl
mov
sub
jbe
fnstsw
dec
jnp
sub
hlt
pop
mov
hlt
sbb
xchg
pop
add
test
sbb
nop/reserved
adc
mov
jecxz
inc
cli
mov
jne
jb
add
aaa
and
xor
mov
pop
mov
movups
sub
pop
push
in
cmp
test
mov
cmps
lock
jno
ret
cmp
in
and
mov
sbb
xchg
pop
add
add
sbb
enter
in
push
popa
(bad)
(bad)
cmp
in
ds
cli
mov
sbb
jb
or
sub
mov
(bad)
dec
hlt
pop
(bad)
jne
in
push
and
and
fnstsw
xor
xor
pop
push
repnz
mov
wbinvd
test
and
repnz
mov
wrmsr
pop
and
repnz
xchg
pop
mov
(bad)
add
scas
inc
repnz
mov
push
adc
xor
adc
into
mov
bndstx
xor
outs
inc
repnz
fstp
aas
lea
and
repnz
mov
add
and
xor
mov
push
stos
jecxz
or
xor
pop
inc
jecxz
js
mov
addps
xor
mov
fistp
jbe
add
and
repnz
fidivr
xchg
mov
and
push
repnz
fidivr
xchg
mov
and
push
repnz
fidivr
push
lea
and
push
repnz
mov
prefetcht0
xor
and
xor
mov
pmulhuw
xor
inc
push
repnz
mov
cmovb
and
repnz
xchg
mov
add
and
fidivr
shr
xor
inc
retf
and
dec
mov
cli
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
cmp
int
dec
jnp
sub
hlt
dec
mov
or
push
jne
aam
inc
jnp
sub
hlt
bound
or
loopne
ja
in
cmp
mov
sub
dec
sbb
ja
in
adc
mov
sub
and
xor
sub
sbb
setp
sahf
or
dec
mov
sbb
shr
push
sub
sti
out
xchg
mov
fs
push
repnz
mov
sidtd
xor
dec
push
repnz
mov
rdmsr
lea
and
repnz
scas
test
sbb
out
lods
sbb
inc
jnp
sub
hlt
push
mov
add
or
in
ds
jnp
sub
hlt
imul
sahf
or
dec
mov
sbb
rcl
loop
lahf
cs
jne
sbb
inc
pop
(bad)
dec
rcl
adc
cmps
ror
jns
loopne
dec
jnp
jecxz
fistp
or
and
stc
lods
or
mov
cld
add
xor
xor
mov
pop
mov
movups
daa
and
xor
mov
add
pushf
cmp
ds
pop
sub
hlt
dec
mov
push
push
cmp
xor
das
or
(bad)
scas
test
push
lock
xchg
or
fwait
mov
sbb
hlt
pop
mov
(bad)
and
xchg
push
sbb
cmp
jge
jecxz
jg
inc
imul
adc
popa
sbb
mov
ins
mov
mov
sub
movs
push
add
iret
fisub
retf
inc
xchg
lock
sub
out
xchg
mov
cld
sub
int3
lods
lods
mov
sbb
outs
fwait
add
cmp
stos
and
dec
mov
cmp
aaa
dec
pop
call
xchg
pop
repz
jb
add
and
fs
int3
test
mov
adc
iret
pop
int
fs
xor
mov
dec
movs
lea
and
repnz
fnstcw
clc
mov
and
xor
sar
stc
mov
and
xor
mov
add
and
pop
repnz
mov
cmpxchg8b
xor
sbb
aam
xchg
in
jecxz
dec
mov
and
sar
mov
movs
xor
mov
repnz
mov
ucomiss
xor
lds
xor
mov
add
and
push
repnz
fnstcw
stos
xchg
and
fdivr
cld
add
in
pop
repnz
mov
(bad)
add
and
repnz
mov
add
and
pop
repnz
sar
jnp
xor
adc
repnz
mov
add
and
repnz
mov
mov
add
and
pop
repnz
mov
psubusw
xor
popa
push
repnz
mov
cvtps2pd
xor
mov
xor
sar
scas
add
jle
repnz
mov
psubq
xor
loop
repnz
mov
add
and
push
repnz
xlat
mov
paddsw
xor
mov
fidivr
xchg
xor
mov
fnstcw
cmps
mov
and
push
repnz
xlat
mov
ud2
mov
and
aad
xchg
push
mov
psubsw
xor
or
xor
mov
btc
xor
xchg
pop
repnz
sar
xlat
mov
and
xlat
mov
pmuludq
xor
mov
xor
sar
stos
mov
and
repnz
mov
movhps
xor
cmp
aad
xchg
jo
jecxz
icebp
add
pop
pop
repnz
fidivr
mov
add
and
fidivr
int3
mov
and
xlat
mov
psubsb
and
aad
xchg
xor
adc
lods
xor
and
aad
xchg
cmps
mov
prefetchnta
cs
sub
and
inc
imul
add
and
repnz
mov
prefetchw
xor
jnp
repnz
mov
mov
add
and
repnz
mov
subps
xor
or
xor
fistp
jo
add
and
push
repnz
mov
punpckhdq
xor
ficom
xor
fistp
mov
xor
lock
repnz
fistp
ror
xor
lea
xor
mov
paddw
xor
cmps
push
repnz
mov
nop
and
xor
mov
(bad)
mov
and
fidivr
dec
mov
and
push
repnz
mov
setno
and
push
repnz
fidivr
mov
add
and
push
repnz
mov
movnti
and
fidivr
out
mov
and
repnz
mov
wrmsr
pop
and
repnz
mov
cvtdq2ps
xor
pop
push
repnz
jecxz
push
test
add
leave
fisub
jmp
xchg
pop
mov
loope
ret
cs
jne
sbb
jl
repnz
arpl
add
loope
or
cmp
mov
mov
(bad)
sbb
fs
call
repnz
xchg
or
(bad)
mov
mov
mov
adc
xor
pop
jnp
sub
hlt
xor
sub
or
(bad)
mov
push
push
mov
lock
xchg
dec
sub
int
inc
pop
retf
and
jb
xor
jb
mov
or
test
mov
(bad)
cli
out
xchg
mov
or
xchg
pop
mov
lock
jb
ins
push
xchg
int
mov
fild
dec
mov
out
xchg
pop
adc
inc
and
inc
lahf
fild
out
jb
push
jle
cmp
mov
fiadd
mov
jae
out
jne
or
mov
fistp
out
xchg
sub
mov
fiadd
retf
and
xor
sbb
push
imul
xor
test
dec
sbb
test
int3
fisub
and
inc
movs
(bad)
pushf
xchg
fbld
inc
inc
imul
cli
out
jne
or
sbb
dec
cli
aaa
xchg
jae
out
jne
or
scas
or
xchg
retw
sbb
sub
pop
int
inc
retfw
and
jp
mov
mov
push
scas
or
xchg
pop
mov
pop
push
in
fisub
and
jle
jecxz
adc
sub
int3
test
mov
adc
jb
xor
movs
xor
fs
or
test
dec
sbb
xor
fbld
and
mov
jo
out
jne
or
mov
out
imul
mov
or
inc
mov
mov
in
xchg
pop
adc
xchg
and
jle
jecxz
adc
sub
int3
test
mov
test
jb
push
jl
xchg
fsub
inc
inc
imul
cli
out
jl
ds
std
sub
int3
scas
lods
outs
dec
sbb
add
xor
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
adc
add
fistp
adc
xor
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
or
lea
and
retf
and
inc
cdq
push
adc
cmps
hlt
push
dec
(bad)
fistp
inc
jnp
sub
hlt
pop
xor
add
push
sbb
jle
dec
ja
in
push
jge
mov
dec
cmp
mov
lahf
dec
cdq
sbb
call
xchg
pop
mov
mov
push
add
add
push
repnz
mov
dec
cmp
sbb
inc
cmp
inc
jge
mov
aas
cmp
sbb
cs
stos
push
fistp
push
fdivr
ds
pushf
int3
test
aad
lock
xchg
ins
sub
pop
int
inc
add
push
and
je
mov
out
jb
xchg
push
xor
adc
or
aad
dec
sbb
popa
mov
out
xchg
pop
adc
and
jle
jecxz
adc
sub
int3
test
mov
sbb
jb
or
int
mov
and
inc
call
cli
push
sbb
push
inc
shl
ins
out
cli
push
inc
pop
or
sub
hlt
push
mov
push
adc
in
push
(bad)
out
ds
jnp
sub
hlt
imul
inc
(bad)
sti
ds
jnp
sub
hlt
jge
jp
pop
adc
cmps
mov
or
sub
hlt
adc
cmp
sbb
push
sub
jo
inc
mov
cmp
sbb
sub
and
mov
lock
xchg
inc
sub
pop
int
inc
jbe
inc
test
fstp
out
xchg
or
push
pop
int
inc
ins
retf
and
push
mov
push
push
jmp
fisub
and
inc
mov
dec
out
jb
or
int
mov
and
inc
hlt
(bad)
out
jb
push
inc
pushf
adc
mov
rol
movs
fist
out
jb
push
jl
cmp
jl
(bad)
sub
int3
mov
and
jnp
out
jnp
ja
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
sbb
push
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
dec
inc
retf
and
sub
hlt
push
sbb
repnz
mov
push
push
xor
mov
xor
xchg
inc
inc
mov
fnstenv
sbb
jl
repnz
add
cmp
or
jo
xor
xchg
cmp
cdq
inc
adc
cmps
movs
push
dec
(bad)
scas
add
push
repnz
pushf
es
mov
and
lods
adc
movs
sbb
inc
out
imul
sbb
mov
pop
test
hlt
dec
mov
cld
pop
cmp
and
inc
sub
jle
add
push
cmp
sub
sub
sbb
lods
sti
and
xchg
adc
aad
data16
dec
rcr
rcl
mov
sbb
dec
iret
xchg
xor
cdq
jle
xor
cmp
or
inc
imul
adc
data16
inc
inc
sub
sbb
mov
sbb
pop
sbb
inc
ja
sub
in
call
retf
shl
mov
jge
mov
push
cmp
sbb
inc
cvtps2pi
ja
in
adc
mov
sub
push
ss
dec
xchg
inc
out
pusha
mov
lea
xor
mov
inc
out
pusha
mov
jl
push
jns
sub
dec
inc
int
push
stos
dec
sbb
cmp
add
push
xor
mov
inc
out
pusha
mov
sbb
pop
dec
inc
retf
and
jne
ds
jl
xor
push
call
xchg
pop
mov
int
lea
pop
xchg
cmps
push
sub
loope
outs
jmp
imul
cs
xchg
and
inc
sub
and
dec
imul
and
mov
dec
push
mov
je
lahf
cmp
ds
jnp
sub
int3
mov
jle
out
adc
sahf
or
adc
or
jmp
push
adc
cwde
and
cwde
push
fistp
rdtsc
movs
push
adc
jl
pop
push
in
inc
or
popf
pop
mov
(bad)
adc
fs
add
test
leave
lock
xchg
mov
loope
dec
movs
scas
xchg
adc
out
xchg
push
add
adc
push
dec
shl
pop
rol
dec
mov
pop
push
add
repnz
mov
push
adc
ss
and
xor
or
adc
sbb
push
hlt
cmp
mov
aaa
sub
cli
out
jne
and
inc
sub
and
dec
imul
add
dec
xor
in
shr
ret
sbb
xchg
add
dec
xor
stc
shr
ret
mov
js
leave
shl
sub
je
lahf
cmp
ds
add
mov
pop
sub
jnp
sub
int3
mov
jle
out
adc
sahf
or
adc
or
jge
movs
jecxz
adc
mov
repz
xchg
xchg
pop
mov
mov
jge
xor
push
push
adc
aaa
or
repnz
pop
lods
test
jl
mov
push
push
sub
loope
outs
mov
imul
cs
stos
and
inc
sub
and
dec
imul
adc
xor
mov
inc
out
mov
pusha
sbb
arpl
shl
pop
rol
dec
mov
std
out
jb
sbb
dec
dec
ss
push
not
xchg
fdivr
adc
dec
xor
sbb
mov
or
lea
and
jmp
push
aad
mov
mov
lar
int
inc
inc
std
sub
int3
scas
lods
xchg
lock
call
inc
sub
and
dec
imul
and
xor
mov
inc
out
mov
add
push
and
dec
push
in
(bad)
mov
or
movs
adc
pop
push
repnz
fidivr
adc
sbb
fnstsw
adc
sub
adc
mov
je
lahf
cmp
sub
xor
rcl
lea
daa
jp
in
push
fistp
push
pop
and
loope
outs
test
push
xchg
jle
js
sub
mov
shl
je
lahf
cmp
ds
inc
sti
sub
int3
mov
jge
in
adc
pop
sub
push
repnz
xchg
pop
mov
das
cdq
pop
and
xor
movs
cmps
push
lods
fstp
mov
loope
pop
sub
or
mov
mov
jb
push
sub
(bad)
sub
int3
mov
and
jge
out
jne
sbb
inc
pop
loope
dec
call
sub
cmc
out
xchg
mov
shl
pop
rol
dec
mov
out
jb
sbb
dec
ss
push
div
push
mov
or
mov
push
out
xor
pop
repnz
inc
call
pop
mov
mov
lea
daa
sub
xor
mov
movups
and
xor
into
mov
movups
sbb
pop
push
hlt
daa
jbe
push
dec
push
lea
pop
out
xor
pop
inc
out
dec
in
mov
movhps
adc
fistp
adc
sbb
push
hlt
adc
fistp
(bad)
jb
push
jne
cmp
or
mov
or
adc
or
popf
inc
xchg
lock
scas
push
push
jne
and
fs
int3
test
lods
ret
sbb
xchg
add
dec
xor
imul
pop
mov
das
xchg
lea
and
xor
pushf
(bad)
pop
mov
das
pop
mov
and
in
adc
dec
mov
cli
push
dec
mov
ds
inc
loopne
or
inc
imul
add
pop
add
sbb
mov
xchg
popa
inc
cmc
lock
not
add
fstp
mov
shr
add
sub
dec
inc
int
mov
cmps
loope
jns
sub
adc
mov
or
jb
push
js
(bad)
or
in
push
(bad)
movups
sbb
push
hlt
and
sub
push
adc
xor
lea
cdq
mov
mov
rdtsc
and
and
aaa
jbe
mov
or
push
dec
fldenv
inc
into
scas
shr
jecxz
jl
add
and
push
repnz
fidivr
or
cmp
xor
fnstsw
add
xor
pop
push
repnz
fidivr
call
and
repnz
xchg
sub
jecxz
push
movs
xor
and
xor
fnstsw
sub
xor
add
repnz
fidivr
sbb
xor
mov
repnz
fnstsw
xchg
mov
and
fidivr
cmp
xor
test
xor
mov
nop
xor
push
push
repnz
xchg
inc
mov
push
sub
int
dec
inc
mov
push
fistp
adc
xor
push
repnz
mov
das
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
int3
scas
lods
out
sbb
push
sub
jne
sbb
inc
pop
(bad)
dec
int
jge
cdq
add
push
jp
in
ds
jnp
sub
hlt
push
inc
cdq
xor
xor
clc
cmp
in
sub
mov
sbb
sbb
sar
ret
rcl
mov
mov
fldcw
inc
mov
push
add
int3
fisub
fistp
sbb
add
and
repnz
mov
rdtsc
lea
and
xor
mov
(bad)
lea
xor
int3
test
lods
sti
and
fwait
push
sbb
inc
jbe
aad
retf
xchg
jbe
movs
enter
cs
jne
sbb
inc
jae
loope
rcl
lds
call
or
test
lods
out
and
xchg
adc
cmp
sbb
stos
enter
ror
jp
loope
push
jnp
sub
hlt
ja
push
cdq
and
add
cmp
dec
dec
(bad)
and
xor
dec
repnz
push
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
scas
xchg
push
lock
xchg
and
lahf
mov
(bad)
dec
std
xchg
jle
popf
enter
cs
sbb
inc
pop
loope
dec
sti
scas
xchg
push
lock
xchg
pop
cmp
pop
(bad)
dec
leave
xchg
jb
cdq
add
cmp
add
and
and
cwde
xchg
lock
jb
cmp
sbb
jge
mov
and
xchg
push
cmp
push
not
xchg
(bad)
mov
movups
sbb
pop
push
hlt
sbb
mov
sbb
mov
in
xchg
pop
sub
and
cwde
xchg
and
out
jb
sbb
push
dec
clc
and
cwde
xchg
dec
repz
jb
cmp
jmp
int3
lods
mov
lock
mov
out
jae
fstp
shr
xchg
pop
mov
push
add
sub
dec
stos
and
mov
lock
xchg
add
and
push
repnz
mov
rdmsr
lea
and
hlt
xor
mov
push
pop
movs
daa
adc
dec
xor
adc
fnstsw
adc
adc
cmps
fidivr
pop
repz
push
and
xor
mov
movups
ss
jl
icebp
xor
in
xchg
pop
mov
int3
adc
adc
push
repnz
fdivr
pop
xchg
add
repnz
mov
jno
lea
and
xor
xchg
lods
pop
mov
das
iret
pop
and
xor
ret
mov
sbb
or
and
sahf
push
fistp
or
lods
pop
adc
adc
pop
push
repnz
nop
(bad)
das
fmul
and
xor
mov
inc
mov
rdtsc
mov
adc
sahf
and
xor
push
dec
push
lea
outs
movs
xor
push
inc
lods
adc
call
xor
pushf
adc
das
repz
and
in
jbe
mov
or
lea
pop
xor
xchg
fnstsw
adc
add
adc
dec
movups
and
dec
pop
mov
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
cli
adc
xor
pop
push
repnz
mov
jbe
lea
mov
push
repnz
mov
(bad)
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
mov
adc
xor
ror
and
movups
and
xor
mov
movups
xor
pop
je
xor
mov
movups
xor
pop
push
mov
movups
add
and
xor
mov
movups
add
and
xor
test
push
mov
add
ja
in
mov
lods
std
and
xchg
push
cmp
dec
rcr
mov
cdq
mov
ret
xchg
das
cmp
out
nop
shl
scas
xchg
sub
sar
fld
inc
scas
enter
cs
(bad)
xchg
ds
jnp
sub
cmps
xchg
lock
sar
out
xchg
mov
fs
push
repnz
mov
sidtd
xor
inc
push
repnz
mov
rdmsr
lea
and
repnz
mov
add
scas
sti
out
xchg
mov
fld
dec
std
xchg
jp
cdq
enter
div
sbb
dec
jnp
sub
hlt
mov
cld
add
inc
je
aaa
dec
pop
out
and
push
imul
mov
out
mov
mov
mov
lahf
cs
test
(bad)
dec
iret
xchg
inc
inc
mov
add
jns
sub
xchg
mov
scas
in
xchg
pop
and
sbb
xor
mov
movups
and
xor
mov
sbb
mov
in
xchg
pop
sub
and
mov
adc
sbb
ja
in
aas
inc
(bad)
mov
repnz
jb
sbb
or
rcl
push
pushf
cs
jbe
xor
and
xchg
dec
(bad)
and
fwait
cs
jo
fdivr
ja
call
jne
mov
or
inc
mov
sbb
int3
dec
hlt
dec
mov
call
mov
in
xchg
pop
sub
scas
dec
sti
and
scas
popf
inc
mov
cli
out
jae
ret
push
jmp
lahf
push
pop
lock
xchg
push
push
jo
cmp
stos
and
jne
popf
add
lea
xor
cmps
xor
jl
lock
or
out
mov
and
xor
pushf
fdiv
add
ins
fidiv
pop
push
rcl
add
loop
pop
lods
sbb
push
adc
push
repnz
mov
movups
sbb
push
hlt
in
je
pushf
in
mov
das
or
xor
pop
pop
shl
push
fistp
cmp
adc
pop
dec
push
repnz
dec
mul
movhps
adc
pop
push
repnz
outs
or
daa
xchg
sub
ss
repz
or
adc
xor
jo
gs
pop
mov
adc
jb
jbe
mul
pop
push
loope
jbe
mov
or
push
jo
fimul
jecxz
outs
add
pop
push
shl
push
fistp
xor
out
retf
pop
mov
hlt
adc
fnstsw
adc
and
dec
jo
xor
pushf
scas
pop
mov
daa
jae
add
add
(bad)
icebp
xor
inc
xchg
pop
mov
xor
outs
test
and
jle
fistp
iret
lea
add
and
add
xor
pop
in
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
adc
sbb
mov
dec
mov
inc
sbb
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sbb
cmp
and
sub
cld
add
sbb
inc
inc
sub
mov
(bad)
xchg
dec
mov
das
push
jns
sub
or
and
push
mul
movups
and
xor
scas
xchg
pop
mov
movups
fisub
sub
loopne
sub
jne
sbb
inc
inc
clc
sub
test
dec
sbb
cmp
cmp
jnp
sub
ins
mov
mov
sub
sahf
(bad)
jns
or
mov
clc
mov
sbb
mov
out
xchg
pop
sbb
sbb
fistp
pop
lea
and
repnz
xchg
pop
mov
pcmpgtd
xor
call
xchg
push
mov
push
adc
xor
adc
xor
mov
bndstx
xor
add
repnz
fdivr
xor
xor
pop
push
repnz
mov
cmovno
xor
push
push
repnz
mov
maxps
xor
jg
repnz
xchg
dec
and
and
xor
mov
push
fistp
mov
add
and
fsubr
shl
mov
movs
xor
hlt
push
repnz
fistp
(bad)
lea
and
push
repnz
fistp
dec
lea
and
push
repnz
fistp
adc
xor
add
xor
xchg
leave
adc
call
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
lea
fisub
shr
push
pushf
cs
ja
fstp
push
jnp
sub
mov
daa
adc
cmp
push
pop
retf
and
sbb
add
and
xor
mov
movups
int
inc
inc
fld
dec
rcl
push
cmp
cmp
push
mov
std
or
das
or
fstp
movhps
or
mov
out
mov
str
xor
pop
jp
cmp
stc
xchg
jecxz
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
fistp
or
cmp
pop
push
cmc
xor
mov
pop
mov
movups
and
pop
push
jmp
push
fbld
movups
int
mov
shr
push
sub
jbe
fidiv
ja
jmp
mov
adc
sub
test
mov
or
lea
das
pop
push
repnz
mov
adc
pop
sub
stos
dec
(bad)
sbb
lods
call
stc
jo
sub
test
cdq
adc
cmp
cmp
jns
xor
stos
lahf
inc
mov
cli
cmp
jbe
xor
mov
str
xor
pop
dec
fisubr
fistp
pop
push
lahf
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
and
xor
mov
movups
sub
xor
(bad)
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
ja
xor
mov
data16
xchg
push
cmp
loop
mov
scas
enter
cs
sbb
inc
pop
fld1
dec
rcl
movhps
ja
pop
push
repnz
fistp
adc
xor
push
repnz
cdq
imul
cs
mov
rol
(bad)
dec
hlt
push
mov
out
add
xchg
out
xchg
mov
add
scas
enter
add
sub
dec
mov
(bad)
leave
movups
ds
test
and
lahf
lea
xor
jmp
adc
adc
xor
push
aad
mov
out
xor
out
retf
pop
mov
hlt
dec
dec
fistp
adc
xor
push
fstp
rdtsc
aas
push
adc
pushf
and
mov
add
loop
pop
lods
mov
push
adc
pop
push
repnz
fistp
adc
movs
xor
jbe
fnstenv
push
fstp
movhps
xor
jp
repnz
mov
(bad)
jge
and
dec
pop
mov
push
fistp
adc
movs
xor
pop
push
repnz
mov
cmps
adc
xor
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
ds
add
(bad)
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
add
ficomp
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
movs
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
movs
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
bnd
pop
mov
inc
adc
movs
xor
push
fistp
adc
movs
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
inc
(bad)
sub
int3
mov
es
sbb
add
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
pop
mov
ins
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
int3
mov
out
dec
sbb
push
cmps
cs
pop
ds
sbb
jb
push
mov
add
push
jne
in
ds
jnp
sub
hlt
push
jo
xor
sub
retf
push
pop
(bad)
clc
ds
xor
fs
jle
sbb
mov
sbb
cs
mov
daa
cmp
adc
into
mov
mov
mov
test
jae
ror
sbb
shr
fisubr
cli
out
jne
or
scas
or
imul
cli
out
xchg
mov
or
into
mov
mov
out
xchg
pop
sub
int3
test
dec
sbb
push
iret
cmp
ds
int3
test
sbb
xchg
sbb
inc
pop
int
inc
outs
retf
and
sbb
jb
xor
int
mov
rcl
pop
mov
in
xchg
pop
and
sbb
xor
mov
movups
and
xor
mov
movups
xor
pop
jl
xor
mov
movups
xor
pop
adc
xor
mov
movups
add
and
xor
mov
movups
pusha
frstor
sub
and
inc
dec
sub
aas
jge
mov
and
xchg
sbb
mov
dec
mov
cwde
shl
xchg
lods
mov
cmp
dec
loopne
in
shl
call
xchg
cs
inc
sbb
xchg
dec
mov
add
(bad)
push
pop
push
dec
leave
fisub
rcl
clc
xchg
adc
(bad)
mov
fldln2
dec
rcl
(bad)
lahf
cs
jno
std
ds
jnp
das
jge
mov
sbb
dec
sbb
inc
sbb
es
mov
push
cmp
sbb
inc
or
or
dec
call
test
jmp
push
and
or
cdq
pop
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
int3
mov
sbb
lock
xchg
cs
cld
sbb
inc
inc
(bad)
dec
mov
jmp
sbb
inc
data16
dec
call
fimul
(bad)
clc
ds
jnp
and
dec
mov
cli
push
dec
pop
ds
pop
sub
hlt
push
mov
push
adc
cmps
in
jns
out
ds
jnp
sub
hlt
imul
jb
sti
cmp
in
adc
mov
and
sbb
loopne
scas
or
mov
adc
imul
mov
std
sbb
movs
enter
shl
ds
jnp
sub
hlt
jns
jne
retf
adc
xor
jae
repnz
pop
mov
das
dec
mov
and
in
fs
rol
cmp
or
and
or
sahf
inc
cdq
lock
(bad)
push
pop
push
out
enter
sti
and
scas
sahf
inc
cdq
lock
(bad)
push
pop
push
xchg
enter
lock
fdivr
adc
xor
push
repnz
sub
dec
loop
ins
nop
add
and
adc
mov
movups
and
jge
rcr
cld
fistp
sbb
xor
pop
dec
shr
imul
xchg
pop
mov
icebp
adc
sub
je
cmp
mov
dec
mov
out
adc
or
stos
pop
int
inc
pop
fld
dec
int3
mov
jne
out
adc
or
(bad)
pop
int
inc
jnp
sub
cmps
xchg
sbb
xchg
dec
add
fsub
add
pop
mov
sbb
push
adc
pop
push
repnz
fistp
adc
adc
pop
push
in
cmp
mov
outs
call
mov
ds
inc
cld
or
es
imul
adc
sahf
or
and
or
loop
mov
das
sub
xor
pop
inc
cmc
dec
dec
fistp
adc
sub
sub
mov
cmp
cmp
in
sbb
mov
bnd
mov
imul
mov
or
mov
dec
push
in
aam
data16
adc
xor
push
repnz
data16
lock
call
fs
int3
test
lods
mov
jmp
dec
pop
in
jns
rol
add
sbb
push
dec
mov
ins
mov
lods
pop
cli
mov
sub
retf
xor
push
xchg
mov
push
push
repnz
push
mov
add
js
push
push
mov
and
sbb
pusha
movs
scas
or
xchg
sbb
xchg
dec
add
fldenv
jmp
jg
test
daa
xchg
xor
mov
ins
mov
(bad)
jns
push
ss
jg
repnz
hlt
(bad)
scas
sahf
inc
cdq
lock
(bad)
push
pop
push
push
(bad)
dec
loope
dec
int3
mov
jne
out
adc
or
mov
fimul
out
adc
data16
adc
add
pop
push
rol
push
fistp
sbb
adc
pop
add
addr16
push
adc
sub
xor
mov
add
adc
xor
pop
push
repnz
mov
movups
xor
pop
jnp
xor
mov
movups
xor
pop
pop
repz
mov
movups
add
push
xor
pop
dec
repz
mov
movups
add
push
xor
pop
in
xor
mov
movups
add
push
xor
pop
and
mov
movups
add
push
xor
pop
push
repnz
mov
movups
add
xor
jecxz
pop
out
imul
add
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
popa
repnz
mov
movups
xor
pop
adc
xor
scas
fwait
mov
out
xchg
cs
mov
(bad)
dec
std
xchg
jle
lods
enter
out
ja
in
ds
jnp
sub
hlt
imul
pop
sbb
inc
push
out
sbb
lods
mul
xchg
pop
cmp
mov
jmp
int3
mov
loopne
sbb
add
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
out
jb
push
gs
ds
jnp
sub
hlt
push
mov
or
or
sar
ja
in
cmp
mov
fs
jb
push
popa
pop
ds
jnp
sub
hlt
push
mov
push
adc
mov
cmp
xchg
cmp
mov
dec
mov
cli
out
jnp
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
mov
aaa
or
out
jne
sbb
inc
inc
fld
dec
hlt
push
mov
or
cmp
cmp
dec
jecxz
pop
out
imul
mov
retf
sbb
hlt
pop
mov
pop
add
or
mov
shl
(bad)
in
jb
or
sub
mov
hlt
popa
mov
stc
and
lods
jg
mov
and
retf
xor
pop
scas
jecxz
adc
xor
push
pop
repnz
mov
bndstx
and
repnz
mov
push
sbb
sbb
push
mov
xor
cmp
adc
push
pop
push
repnz
fst
adc
mov
pop
push
add
push
fistp
xchg
pop
mov
push
adc
jbe
pop
push
mov
push
fist
pop
mov
movups
imul
push
fistp
pop
mov
movups
(bad)
pop
push
mov
push
fist
movups
and
sub
rcl
jecxz
sbb
xor
push
push
repnz
xchg
dec
mov
invd
lea
and
xor
mov
(bad)
add
and
repnz
mov
push
sub
sbb
dec
jnp
and
das
mov
and
fwait
div
sbb
inc
inc
fldln2
dec
hlt
mov
xor
add
std
aaa
ja
in
cmp
stos
xchg
lock
sahf
or
cdq
pop
int
dec
push
mov
push
fistp
adc
xor
push
fistp
or
int
inc
jnp
sub
hlt
dec
mov
or
push
jnp
aam
dec
jnp
sub
int3
mov
cmps
out
jb
push
addr16
ds
jnp
sub
hlt
push
mov
cld
add
outs
pop
cmp
push
repnz
mov
movups
xor
pop
dec
repnz
cmps
xchg
mov
out
jb
add
push
sub
scas
dec
sti
sbb
lods
in
and
xchg
lar
and
fs
or
test
cdq
adc
sbb
sub
mov
int3
mov
aas
out
jb
push
inc
push
and
fld
pop
xor
je
lea
and
xor
xchg
mov
or
or
mov
jmp
jge
test
daa
xchg
and
xor
xchg
and
in
iret
mov
xor
jl
repz
and
das
js
fbld
jge
movs
and
adc
fnstsw
adc
in
and
clc
and
xchg
pop
mov
movups
jmp
pop
push
lds
push
fisttp
adc
xor
pop
push
test
push
fist
mov
movups
mov
pop
push
movs
xor
jmp
pop
mov
push
adc
data16
xor
xchg
adc
arpl
pop
push
(bad)
xor
mov
pop
mov
movups
jo
pop
push
in
cmp
mov
jae
jb
add
aas
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
or
mov
hlt
dec
mov
adc
cmps
call
aas
ja
in
sub
mov
sbb
mov
pop
(bad)
dec
rcl
(bad)
or
sub
retf
test
inc
test
in
adc
and
xor
scas
xchg
pop
mov
movups
sub
jecxz
and
jne
jmp
fwait
cs
(bad)
fistp
inc
jnp
sub
hlt
pop
lea
cld
pop
add
int
ja
jmp
mov
cdq
or
cmp
cmp
push
mov
push
fistp
adc
xor
pop
push
repnz
fistp
data16
out
jo
les
dec
jnp
sub
mov
pop
cmp
add
sub
push
push
mov
and
xchg
push
cmp
pop
fnop
inc
int3
mov
pop
add
int
ja
in
mov
cdq
add
cmp
mov
repnz
mov
rdpmc
pop
and
repnz
mov
femms
lea
xor
mov
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
jne
lea
test
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
je
mov
inc
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
movs
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
cmp
jo
loop
mov
inc
imul
adc
xor
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
pop
mov
xor
lea
fs
push
bnd
fistp
adc
xor
push
repnz
pop
mov
ins
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
pop
jae
out
jne
sbb
inc
jb
ret
xchg
jns
cdq
or
xor
jecxz
jbe
sar
ja
jmp
mov
movs
mov
lds
sbb
sbb
lods
(bad)
and
call
ja
in
pop
jge
mov
cmp
sbb
inc
add
sbb
mov
sbb
sbb
and
sub
sbb
jne
cld
sbb
push
sbb
fmul
fisub
and
dec
mov
sbb
mov
call
adc
and
pop
push
out
push
fbld
movups
push
and
xor
nop
xchg
pop
mov
movups
or
pop
push
into
xor
cld
xchg
pop
mov
movups
sub
push
stos
and
dec
cdq
push
adc
cmps
hlt
push
dec
(bad)
fistp
jge
sbb
hlt
pop
mov
cld
and
inc
jle
cmp
in
adc
or
cld
aas
cmp
sbb
sub
cmp
popa
mov
cmp
sbb
jns
sub
es
and
push
cdq
adc
or
sub
sub
mov
sbb
inc
jb
aas
ja
in
das
jge
mov
adc
inc
data16
jecxz
(bad)
inc
cdq
push
pop
add
sub
push
dec
fisub
inc
out
push
push
test
and
xor
mov
movups
and
xor
mov
movups
mov
adc
jne
cld
push
cmp
push
inc
dec
sub
sub
jne
stc
and
xchg
cmp
loope
outs
add
lods
hlt
and
xchg
or
xchg
(bad)
dec
rcl
adc
cmps
fimul
jnp
in
inc
jnp
sub
int3
mov
dec
mov
cmp
ds
jnp
sub
hlt
push
mov
add
add
sub
sbb
cdq
xor
add
xor
loope
dec
repz
test
sbb
out
lods
cli
adc
mov
aas
pop
not
push
cmp
sbb
jns
or
cmps
scas
or
mov
cld
and
popf
cmp
cmp
mov
scas
call
(bad)
out
xchg
mov
into
inc
inc
clc
sub
int3
mov
dec
mov
cmp
cmp
ror
add
loop
pop
xchg
add
mov
sbb
mov
movups
and
and
int3
test
mov
adc
fidiv
xor
mov
sbb
xchg
push
pop
jne
and
sbb
int3
test
call
jns
sub
pop
inc
iret
test
pop
sahf
or
jns
sub
adc
and
pop
lods
and
cs
push
repnz
mov
cmp
popf
cmp
and
cli
and
stos
test
iret
movups
cmp
jo
loop
mov
inc
imul
add
sahf
or
inc
mov
sbb
int3
mov
push
mov
sbb
cmps
scas
or
mov
jle
adc
xor
jns
adc
push
fistp
mov
mov
push
repnz
fnstsw
pop
push
add
xor
shl
push
fbstp
movups
xchg
and
xor
mov
push
adc
mov
pop
push
cli
xor
cmp
adc
xchg
and
xor
in
pop
mov
push
adc
outs
and
xor
xor
adc
fsub
pop
push
pop
xor
xor
pop
mov
push
adc
int3
and
xor
inc
xchg
pop
mov
push
adc
and
dec
push
lods
fwait
sbb
add
and
xor
mov
movups
xor
pop
jb
xor
mov
movups
xor
pop
repnz
mov
movups
add
xor
out
int3
test
lods
repz
xchg
cs
jne
sbb
inc
dec
(bad)
dec
hlt
pop
mov
add
cmp
or
sub
es
mov
add
lods
mov
in
sbb
(bad)
scas
cdq
inc
mov
cmp
xor
cmc
xor
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
or
dec
hlt
dec
xor
and
xchg
sbb
cmp
xchg
je
mov
cmp
cmp
jmp
jns
cdq
or
cmp
sbb
inc
and
cmp
stc
xchg
pop
mov
push
adc
xor
pop
push
repnz
fistp
adc
and
pop
scas
or
popa
inc
mov
cs
jne
sbb
inc
inc
(bad)
dec
hlt
pop
mov
cmc
sbb
mov
out
xchg
pop
sub
cmp
xor
and
xchg
cs
jne
sbb
inc
inc
jmp
inc
shr
repnz
jb
cmp
jnp
sub
stos
mov
adc
mov
push
xor
retf
xor
mov
movups
xor
sbb
fistp
inc
mov
and
repnz
xchg
inc
and
fnstsw
xor
xor
mov
push
mov
pand
xor
ficom
xor
mov
pmulhuw
and
push
repnz
fnstsw
loopne
add
and
push
repnz
fdivr
lods
pop
and
mov
ud0
and
fnstsw
jg
xor
test
fdivr
mov
xor
pop
push
repnz
mov
shld
and
repnz
fdivr
cli
mov
and
fidivr
pushf
mov
and
push
repnz
xchg
mov
jecxz
icebp
mov
and
push
repnz
fnstsw
xor
and
push
repnz
jecxz
cmc
mov
and
repnz
mov
movhps
or
mov
int3
mov
mov
xchg
push
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
pop
mov
ins
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
int3
mov
or
push
mov
in
mov
rol
(bad)
dec
ret
inc
lods
enter
cs
sbb
inc
pusha
fldl2e
inc
hlt
push
jnp
xor
cmps
retf
push
dec
(bad)
clc
ds
jnp
sub
hlt
jle
arpl
mov
ss
in
das
jge
mov
sbb
sub
push
inc
pop
sub
pop
jge
mov
sub
push
sbb
inc
sub
or
mov
push
sub
cli
out
xchg
je
and
cs
aam
xchg
and
out
jb
or
scas
sub
push
push
lods
pushf
sbb
adc
xor
pop
inc
repnz
mov
movups
xor
pop
je
xor
mov
movups
xor
pop
push
mov
sbb
mov
in
xchg
pop
sub
and
jne
cld
and
sbb
inc
inc
or
rol
(bad)
xchg
sub
or
les
int3
push
xchg
push
sbb
cmp
int3
dec
rcl
loope
xchg
cs
jne
sbb
inc
pop
(bad)
dec
into
xchg
dec
inc
movs
enter
cs
jno
loope
ja
out
sbb
lods
mul
xchg
sar
jbe
cmp
mov
sbb
mov
in
xchg
pop
xor
and
addr16
add
std
frstor
xlat
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
dec
loope
outs
jg
imul
cs
nop
sbb
inc
jns
(bad)
pop
mov
add
inc
js
cmp
jmp
pop
out
push
cmp
sbb
sub
sbb
lods
in
and
xchg
adc
mov
sub
mov
and
mov
push
stos
lock
vpmaxsw
jnp
sub
mov
sub
je
out
ss
and
inc
mov
or
ja
int
dec
inc
imul
int3
mov
dec
dec
sbb
or
cmp
int3
dec
(bad)
scas
lahf
inc
mov
cli
out
push
push
mov
push
fistp
rdtsc
rol
adc
xchg
pop
push
stc
xor
ret
pop
leave
(bad)
movups
xor
ds
repnz
mov
movups
or
inc
aam
xchg
dec
hlt
out
jb
add
cmp
push
dec
loope
outs
inc
inc
imul
or
cmp
retf
and
jb
cld
push
add
int
jp
pop
and
aam
xchg
mov
out
jb
cmp
dec
sti
and
scas
fwait
data16
sbb
out
nop
cs
jb
aaa
cmp
in
cmp
movs
xchg
movs
hlt
out
jb
cmp
pop
jmp
pop
out
outs
mov
xchg
xor
jbe
fidivr
xchg
fwait
add
and
repnz
cmps
jecxz
out
add
and
jb
xor
mov
pxor
xor
cwde
inc
repnz
xchg
jo
jecxz
mov
add
and
dec
repnz
lods
jecxz
rcl
and
mov
bsf
xor
xchg
inc
repnz
int
xchg
ins
lods
jecxz
sti
lahf
add
and
repnz
mov
sets
xor
bound
xor
int
xchg
sbb
jecxz
add
mov
and
(bad)
mov
seta
xor
add
xor
iret
mov
(bad)
xchg
add
and
jo
xor
mov
(bad)
call
mov
xor
retf
outs
lods
jecxz
retf
adc
mov
and
ret
push
stos
jecxz
gs
add
and
repnz
std
mov
nop
xor
into
dec
repnz
mov
maxps
xor
lea
xor
lods
jecxz
mov
mov
and
repnz
mov
movlps
xor
pop
inc
repnz
mov
psllq
and
les
inc
fwait
add
and
mov
jle
test
and
inc
repnz
(bad)
mov
psraw
xor
push
jb
xor
sar
pushf
add
and
(bad)
mov
setg
xor
rol
push
int
xchg
sbb
adc
xor
sub
(bad)
leave
mov
bswap
call
adc
ret
cdq
movs
jecxz
mov
mov
repnz
mov
add
and
dec
repnz
test
cmovge
xor
push
dec
repnz
ret
imul
xor
jbe
repnz
enter
mov
add
and
inc
repnz
(bad)
mov
cmovg
xor
sbb
xor
jecxz
xor
xor
call
xchg
mov
adc
xor
out
inc
repnz
mov
prefetch
xor
int3
inc
repnz
aad
xchg
int3
lods
jecxz
adc
xor
cmp
leave
mov
clts
scas
add
and
leave
mov
psubb
xor
daa
inc
repnz
movs
jecxz
jno
add
and
repnz
(bad)
mov
packsswb
xor
adc
xor
stos
jecxz
cmp
and
mov
(bad)
lods
add
and
sar
xchg
add
and
std
mov
cmovne
xor
and
xor
movs
jecxz
lods
lods
add
and
inc
repnz
cmps
jecxz
rcr
xor
ds
repnz
iret
mov
cmovae
xor
ss
xor
int
xchg
cmp
adc
mov
repnz
(bad)
mov
setl
xor
and
xor
cmps
jecxz
xchg
xor
inc
inc
repnz
test
add
and
repnz
lods
jecxz
std
xchg
add
and
repnz
cmps
jecxz
lods
xchg
add
and
dec
repnz
(bad)
mov
(bad)
pushf
add
and
inc
repnz
mov
cmovns
and
inc
repnz
mov
setle
xor
lds
xor
mov
add
and
repnz
mov
bswap
cwde
add
and
std
mov
pslld
xor
lock
repnz
scas
jecxz
add
and
mov
setae
xor
outs
inc
repnz
iret
mov
mulps
and
repnz
mov
(bad)
xchg
add
and
dec
repnz
mov
andps
xor
stos
dec
repnz
mov
pmaxsw
xor
les
xor
retf
je
jecxz
jmp
and
jb
xor
(bad)
mov
push
fwait
add
and
sar
lods
add
and
repnz
mov
bt
xor
movs
dec
repnz
(bad)
mov
sets
xor
ret
xor
mov
add
and
inc
repnz
(bad)
mov
pavgb
xor
pop
dec
repnz
jecxz
mov
mov
and
repnz
int
xchg
mov
add
and
dec
repnz
xchg
and
adc
xor
mov
(bad)
mov
pcmpgtw
and
retf
(bad)
mov
add
and
repnz
sar
scas
add
and
repnz
leave
mov
shld
and
xor
ret
dec
test
add
and
inc
repnz
test
add
and
inc
repnz
lods
jecxz
pop
popf
add
and
int
xchg
loope
jecxz
repnz
add
and
inc
repnz
mov
(bad)
popf
add
and
xor
mov
fbstp
cmp
xor
and
push
fbstp
movups
adc
pop
push
fidiv
push
fist
movups
jae
pop
push
mov
push
fcomip
xchg
pop
mov
movups
imul
push
(bad)
xchg
pop
mov
movups
dec
and
xor
xor
movups
xchg
and
xor
or
(bad)
rcl
movs
(bad)
and
xor
xchg
pop
mov
movups
(bad)
and
xor
mov
pop
mov
push
adc
push
and
xor
test
adc
bound
pop
push
movs
xor
loop
pop
mov
push
adc
dec
and
xor
ss
pop
mov
push
adc
xchg
and
xor
setne
pop
push
adc
cld
and
xor
pop
xchg
pop
mov
push
adc
iret
and
xor
lods
xchg
pop
mov
or
push
sbb
xor
adc
push
push
pop
push
nop
xor
aad
pop
mov
or
push
mov
pop
push
jl
push
fild
xchg
pop
mov
or
push
and
push
fistp
pop
mov
or
push
shl
pop
push
sbb
push
fisttp
pop
mov
or
push
and
pop
push
in
push
fbld
or
lea
push
or
pop
push
mov
push
fcomip
xchg
pop
mov
or
lea
push
pop
and
xor
cmp
or
lea
and
xor
seta
pop
or
(bad)
rcl
movs
cld
and
xor
arpl
adc
iret
and
aaa
push
fild
or
lea
adc
pop
push
les
push
fild
or
lea
push
addr16
push
(bad)
nop
pop
mov
or
lea
push
mov
pop
push
jl
push
fild
nop
pop
mov
or
lea
and
push
fistp
pop
mov
or
(bad)
rcl
pop
push
sbb
push
fisttp
pop
mov
or
lea
adc
movs
cmp
push
out
push
fbld
or
lea
adc
movs
add
ss
(bad)
xchg
pop
mov
or
lea
push
ins
and
push
fwait
ss
(bad)
xchg
pop
mov
or
lea
pop
push
pusha
ss
fbld
xchg
pop
mov
or
lea
and
push
xor
push
fbstp
mov
or
(bad)
fst
movs
aam
pop
push
add
push
fisttp
pop
mov
or
lea
daa
pop
push
jmp
push
fistp
or
lea
pop
push
or
pop
push
mov
push
fcomip
xchg
pop
mov
or
lea
push
pop
daa
pop
push
xor
mov
or
lea
daa
pop
push
outs
xor
pop
mov
or
lea
daa
pop
push
ds
pop
mov
or
(bad)
loope
push
fldenv
pop
push
pop
xor
pop
mov
or
lea
push
push
das
es
push
ror
dec
mov
stc
out
jb
imul
push
fist
movups
xor
ja
shl
xchg
je
adc
sbb
jl
repnz
js
cs
and
fimul
sub
inc
jge
pushf
sbb
jecxz
mov
movs
sbb
push
hlt
and
cmp
xor
ja
shl
push
fistp
adc
int
jge
xchg
test
dec
sbb
xor
add
fisub
fistp
xor
adc
arpl
mov
xchg
inc
imul
cmp
ds
retf
int3
test
sbb
xchg
push
fidivr
xor
popf
imul
add
fiadd
retf
and
mov
jecxz
sub
sti
and
iret
test
inc
mov
mov
movaps
out
xchg
test
and
fld
mov
icebp
out
jb
imul
jbe
mov
icebp
out
jb
push
push
(bad)
int3
fisub
and
jle
loop
adc
sub
int3
test
dec
sbb
xor
add
push
scas
fbld
fistp
push
test
int
inc
push
pushf
fistp
jecxz
push
cli
out
jne
or
scas
or
xchg
data16
adc
or
scas
or
push
dec
cld
cmp
(bad)
out
xchg
test
and
jnp
and
mov
jecxz
sub
dec
sbb
or
xchg
pop
mov
icebp
out
jb
dec
imul
jbe
mov
icebp
out
jb
rsqrtps
mov
push
fild
xor
fisub
fild
stc
lea
fisub
fild
xchg
mov
fisub
and
inc
jmp
cli
xor
movs
xor
fs
bswap
test
mov
mov
pop
pushf
lahf
fsub
fistp
push
xchg
cmp
add
dec
inc
imul
cli
out
dec
pop
xor
pop
push
pushf
outs
pop
mov
aaa
data16
out
jne
or
scas
or
xchg
data16
lock
lods
jb
push
or
scas
or
xchg
data16
lock
lods
pop
adc
or
scas
or
xchg
data16
lock
lods
lahf
adc
or
outs
icebp
inc
imul
cmp
add
push
repnz
inc
imul
cmp
cmp
into
test
mov
aaa
out
jno
out
dec
ret
pop
push
cmps
lods
mov
sbb
push
mov
stc
xchg
pop
int
rcl
outs
add
mov
lea
add
adc
in
adc
int
cmp
xor
inc
imul
cmp
add
jge
imul
cmp
add
push
inc
imul
cmp
add
repnz
inc
imul
cmp
add
mov
push
movups
int
push
lea
mov
lea
ds
push
pushf
ret
pop
mov
aaa
es
out
dec
xor
pop
push
mov
lock
lods
cdq
adc
or
xchg
mov
lock
lods
mov
push
or
mov
fistp
out
lods
push
adc
or
cmps
scas
or
xchg
pop
sbb
out
lods
xchg
adc
or
cmps
scas
or
xchg
data16
out
xchg
pop
sub
jge
sti
lods
and
outs
mov
hlt
out
jb
adc
xor
jmp
or
and
dec
sbb
mov
fisub
fild
sbb
fisub
fild
add
adc
push
repnz
and
imul
jg
jb
xor
ss
test
dec
sbb
push
idiv
add
repnz
inc
imul
cmp
add
repnz
inc
imul
cmp
add
push
repnz
inc
imul
cmp
add
push
repnz
inc
imul
cmp
ds
push
mov
lock
lods
push
adc
or
cmps
scas
or
xchg
push
sbb
out
xchg
push
sub
adc
jmp
and
mov
(bad)
out
xchg
mov
or
outs
mov
lea
fiadd
retf
and
fnsave
(bad)
out
xchg
test
scas
lods
and
adc
sbb
sub
fisub
fild
out
add
fisub
and
loop
adc
adc
pop
push
repnz
and
loop
adc
adc
pop
push
repnz
in
fisttp
jb
push
sub
and
ins
dec
sbb
xor
add
(bad)
fistp
xor
adc
daa
(bad)
rol
mov
ja
out
dec
call
bswap
test
inc
sbb
out
lods
data16
or
movs
scas
or
xchg
push
sbb
out
lods
dec
adc
or
movs
scas
or
ins
mov
inc
cld
out
xchg
mov
or
xchg
pop
mov
out
jb
cmp
xor
repz
mov
imul
jb
retf
push
xor
(bad)
test
test
cmps
dec
sbb
push
mov
call
pop
push
repnz
es
imul
movups
adc
push
repnz
es
imul
addr16
pushf
push
fsub
fistp
xor
adc
jg
mov
fistp
xor
add
push
or
mov
in
inc
imul
cli
out
dec
test
ror
test
test
lock
lods
xchg
push
or
movs
scas
or
xchg
data16
lock
lods
dec
adc
or
movs
scas
or
xchg
inc
sbb
out
lods
lods
adc
or
movs
scas
or
xchg
data16
sbb
out
xchg
push
add
push
xor
jae
push
fild
lock
pushf
or
add
xor
mov
wrmsr
lea
and
repnz
mov
(bad)
lea
and
push
repnz
mov
cmovg
xor
xor
xor
mov
seto
xor
leave
push
repnz
fistp
mov
movs
xor
fwait
push
repnz
mov
bswap
lea
and
mov
bndldx
and
repnz
mov
(bad)
mov
and
repnz
mov
emms
mov
and
push
repnz
fidivr
or
cli
push
repnz
fidivr
aad
add
and
fidivr
loop
add
and
repnz
mov
rdpmc
pop
and
repnz
fnstsw
inc
pop
and
push
repnz
fnstsw
push
cmps
xor
fist
xor
fnstsw
mov
add
and
push
repnz
mov
xadd
xor
mov
fnstsw
adc
xor
dec
push
repnz
mov
mov
add
and
push
repnz
fdivr
dec
mov
and
push
repnz
fdivr
xchg
mov
and
or
inc
imul
movups
xor
ja
ror
mov
lods
mov
push
sbb
jl
repnz
outs
mov
mov
(bad)
and
or
(bad)
cmp
xor
push
add
push
repnz
mov
popf
adc
add
pop
push
fldcw
pop
cdq
jno
mov
das
adc
repnz
(bad)
out
xchg
pop
mov
jne
jb
xor
movs
xor
and
xchg
pop
mov
imul
movs
xor
fs
int3
test
mov
pop
out
jb
xor
sbb
xchg
pop
mov
xor
jb
push
inc
pushf
add
(bad)
push
fistp
push
mov
int
jb
in
int3
test
mov
aaa
add
cli
out
dec
mov
stc
int3
test
mov
aaa
adc
out
jne
or
mov
out
push
dec
ret
aas
adc
int
jl
repnz
arpl
dec
cld
adc
push
sti
out
xchg
mov
or
xchg
pop
mov
out
jb
push
imul
jbe
mov
icebp
out
jb
fld
xor
cmc
scas
or
xchg
pop
mov
jb
sub
int3
fisub
fild
push
mov
out
xchg
pop
adc
pop
push
repnz
and
jle
jecxz
adc
adc
aas
and
jle
jecxz
adc
adc
pop
push
repnz
and
jle
loop
adc
adc
push
repnz
and
inc
out
(bad)
aad
xor
fs
or
test
mov
sub
jb
xor
movs
xor
fs
or
test
mov
sbb
push
movs
xor
fs
or
test
mov
icebp
in
jb
xor
xor
movs
bswap
test
dec
sbb
xor
rcr
mov
fistp
xor
add
fsub
fistp
xor
adc
mov
mov
imul
lods
lods
aaa
mov
cdq
or
jb
mov
lock
lods
adc
movs
or
outs
push
inc
imul
cli
out
jne
or
scas
or
xchg
data16
push
lock
lods
lea
push
or
scas
or
xchg
data16
lock
lods
xor
push
or
scas
or
xchg
data16
push
lock
xchg
or
das
pop
int
inc
daa
retf
and
shl
out
xchg
test
and
sbb
mov
movaps
mov
and
mov
cmp
and
xor
mov
movaps
out
xchg
mov
or
xchg
pop
mov
out
jb
cwde
push
xor
sub
repz
jb
je
push
jne
push
fild
mov
sbb
fisub
and
inc
mov
cli
push
or
hlt
push
fistp
xor
add
push
mov
mov
fistp
push
xchg
cmp
add
push
repnz
inc
imul
test
push
and
rcr
test
lods
xchg
and
lods
adc
movs
sbb
jl
repnz
pusha
mov
cmp
xsha256
cmps
shl
shl
pop
jge
mov
retf
add
or
jo
xor
xchg
daa
inc
xchg
mov
dec
das
xor
pop
jnp
sub
hlt
sbb
call
dec
inc
xor
test
sbb
rol
aam
xchg
lods
mov
push
or
scas
or
xchg
data16
xchg
cmp
and
int3
test
in
sbb
out
lods
mov
push
or
scas
or
imul
add
fidivr
xor
test
dec
cld
sub
mov
sbb
or
xchg
pop
mov
lock
jb
pop
push
mov
dec
inc
and
jle
jecxz
adc
sub
int3
test
dec
sbb
xor
add
fbld
xor
fidiv
bnd
out
jne
or
mov
fistp
out
xchg
dec
sub
loop
xor
jge
mov
lea
fidivr
xor
adc
dec
cld
jg
sub
out
xchg
test
scas
test
inc
mov
mov
movaps
sti
out
xchg
mov
or
adc
lea
fisub
and
jle
jecxz
adc
adc
or
inc
imul
movups
adc
sbb
nop
fisttp
jb
push
sub
and
inc
imul
cli
out
dec
outs
xor
pop
push
mov
lock
xchg
imul
inc
jns
and
mov
icebp
out
jb
ins
push
cmps
int3
fisub
fild
nop
lea
fisub
and
jle
jecxz
adc
adc
pop
push
repnz
pop
jecxz
adc
sub
int3
test
mov
mov
jb
push
jae
sbb
scas
in
outs
jne
imul
cmp
cmp
int3
test
dec
sbb
push
cmp
bound
into
test
int3
push
lock
xchg
cmp
sbb
push
pushf
cmp
jbe
cli
out
dec
cmp
and
into
test
mov
aaa
inc
jo
out
dec
ins
xor
pop
push
mov
lock
xchg
xor
push
pop
int
inc
adc
pop
stos
and
xlat
mov
movaps
call
and
sub
and
sbb
or
pushf
mov
lea
fisub
and
inc
sbb
push
dec
pushf
fcmovnu
mov
cmp
mov
out
jne
and
inc
dec
loope
dec
jmp
cwde
jle
loop
adc
int
dec
push
mov
push
fistp
adc
xor
pop
push
repnz
mov
aas
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
pop
mov
imul
movs
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
das
les
or
adc
dec
mov
mov
(bad)
sbb
adc
mov
in
pop
mov
shl
iret
add
push
out
sqrtps
xor
mov
sub
dec
and
or
dec
leave
sbb
(bad)
cmp
cmps
mov
stc
movs
xor
ja
in
jne
jns
es
mov
and
lods
ins
adc
sbb
push
hlt
sub
(bad)
and
or
jo
xor
test
mov
lea
fisub
fild
push
add
fisub
fild
lock
fisub
fild
sub
test
pop
push
retf
and
jle
(bad)
jb
sub
int
mov
fild
add
sub
int3
test
mov
repnz
jb
xor
xor
mov
and
pop
mov
out
jb
xor
(bad)
or
test
mov
(bad)
jb
xor
or
test
mov
into
out
jb
push
jle
ds
push
repnz
test
mov
lea
out
pop
push
repnz
mov
shl
cs
ds
jnp
sub
hlt
jb
loope
jecxz
cmp
cmp
adc
jmp
mov
jge
pushf
cmp
sti
in
sbb
pushf
push
pop
mov
and
lods
adc
movs
sbb
jbe
mov
adc
(bad)
push
jbe
mov
jb
(bad)
int3
test
retf
out
lods
stos
adc
or
scas
or
imul
add
fidivr
xor
out
imul
cli
out
xchg
test
jno
and
cmp
jb
pushf
push
xor
ins
scas
or
xchg
pop
mov
lock
jb
jo
test
fisub
and
inc
xchg
fistp
jge
cmp
mov
fistp
push
jmp
jmp
pop
int
dec
push
mov
lock
xchg
xor
(bad)
pop
int
jl
repnz
addr16
dec
cld
inc
add
mov
inc
out
ja
dec
cld
cmp
sbb
inc
inc
sub
and
mov
push
cmp
dec
inc
jbe
or
sahf
in
sbb
mov
push
cmp
cmp
sub
jne
imul
add
ja
in
jo
jge
into
jne
cld
adc
pop
sbb
ja
jmp
mov
xchg
xchg
xor
jmp
scas
or
imul
cli
out
xchg
mov
or
cmc
mov
mov
out
xchg
pop
sub
int3
test
dec
sbb
push
test
int
outs
push
mov
lock
xchg
push
sub
int
inc
push
mov
lock
mov
sbb
sbb
jl
repnz
lods
lods
pop
push
sbb
xor
add
push
sar
inc
(bad)
adc
fidivr
repz
push
es
fdivr
jne
sti
sub
int3
mov
fbstp
cmp
ds
sbb
int3
mov
adc
movs
xor
dec
inc
retf
and
jne
jmp
movs
xor
dec
inc
retf
and
sub
add
mov
inc
out
jne
dec
ret
int
lea
xor
(bad)
and
cmp
pop
sub
out
xchg
mov
out
and
cmps
xchg
xlat
sbb
lods
test
push
and
fs
adc
test
lods
xchg
and
xchg
jnp
jp
test
(bad)
push
fistp
sbb
movs
and
fs
int3
test
lods
mov
sbb
mov
pop
push
loope
outs
mov
imul
sbb
xor
(bad)
and
cmp
pop
sub
in
xchg
mov
sbb
out
jb
(bad)
push
xor
scas
dec
xchg
and
cmp
pop
sub
pop
or
ror
adc
rcr
mov
rcr
sbb
mov
pop
push
loope
outs
sub
scas
enter
jno
data16
and
and
pop
imul
cs
add
and
adc
fidivr
icebp
jb
push
xor
fdivr
pop
inc
sti
sub
int3
mov
fbstp
cmp
aaa
ja
in
cmp
dec
mov
and
xor
shr
mov
and
xor
shr
mov
and
lods
mov
sub
push
int3
lods
lods
cmp
lock
xchg
push
and
inc
fs
jbe
mov
aaa
pop
ins
cli
out
jne
sbb
inc
pop
loope
dec
les
add
or
adc
and
ins
mov
int3
dec
hlt
pop
popf
inc
(bad)
int
xor
and
inc
mov
int3
dec
mov
add
or
adc
and
push
mov
int3
dec
xchg
push
push
mov
xor
pop
inc
loop
cmps
add
inc
stc
enter
push
pop
jne
and
inc
fs
jbe
mov
aaa
les
out
ja
aad
inc
daa
fdivr
dec
int3
lods
lods
fwait
ins
sbb
xor
add
add
push
repnz
pushf
adc
add
sub
push
inc
(bad)
mov
mov
lea
(bad)
mov
xor
clc
sbb
xchg
xor
data16
and
arpl
scas
enter
jge
data16
and
arpl
stos
enter
add
add
push
repnz
test
or
adc
sub
pop
inc
rcr
add
sub
sub
dec
mov
and
xor
in
test
mov
and
xor
in
test
inc
cld
and
and
in
test
mov
and
xchg
or
arpl
jae
push
fild
lock
xchg
bound
cmp
and
mov
adc
in
fisub
rol
push
xchg
push
movups
in
fisub
fist
das
nop
mov
scas
sub
mov
jmp
movs
xor
dec
inc
retf
and
jne
cld
add
jns
sub
mov
fistp
out
jb
cmp
pop
in
dec
inc
iret
test
or
jmp
add
inc
dec
pop
shl
dec
mov
shr
jb
and
sub
pop
inc
rcr
add
sub
ds
fldenv
cmp
and
out
test
mov
and
xor
out
test
mov
and
xchg
push
add
mov
pop
push
loope
outs
or
mov
xchg
and
arpl
jae
push
fild
lock
xchg
inc
cmp
dec
loope
dec
jmp
cwde
jle
loop
adc
int
inc
jnp
cmp
xchg
popf
inc
in
lock
sub
sbb
pop
push
fld
dec
clc
scas
cwde
jle
loop
adc
int
inc
jnp
sub
int3
mov
push
out
das
nop
mov
inc
sub
cld
adc
test
and
pop
push
repnz
sti
dec
mov
test
and
fbld
pop
push
loope
outs
jmp
imul
cs
xor
pop
inc
(bad)
adc
fidivr
int3
jb
xor
movs
xor
ja
in
outs
inc
(bad)
mov
mov
lea
std
mov
xor
clc
sbb
xchg
xor
data16
and
pusha
imul
jl
mov
sub
retf
xor
pop
mov
mov
lea
and
xor
les
test
daa
xchg
and
xor
xchg
mov
mov
add
push
adc
pop
(bad)
mov
pop
sub
fldz
xchg
test
ror
cwde
jle
loop
adc
int
inc
jo
fisttp
mov
push
out
das
nop
mov
jg
scas
or
mov
in
or
ds
push
repnz
test
or
cmp
xor
movs
xor
jb
shl
dec
mov
shr
jb
push
inc
push
sub
mov
fistp
out
jb
pusha
inc
dec
sub
push
dec
(bad)
and
cmp
pop
sub
sbb
inc
jne
xor
inc
xchg
add
or
adc
and
mov
hlt
pop
popf
jle
jecxz
adc
xor
dec
inc
retf
and
into
mov
(bad)
sbb
test
mov
inc
out
dec
mov
xchg
push
add
push
xor
jae
push
fild
lock
xchg
cs
jge
xor
inc
inc
sti
sub
int3
mov
fbstp
cmp
aas
ja
sti
sub
icebp
mov
or
cli
out
dec
(bad)
xor
pop
jnp
sub
int3
mov
fbstp
cmp
add
push
repnz
mov
cmp
and
call
jne
cld
add
mov
or
sub
mov
fistp
out
jb
cmp
push
repnz
pop
mov
pop
sub
bound
test
(bad)
cmp
pop
sub
out
xchg
mov
lods
and
mov
adc
call
sbb
clc
sbb
xchg
xor
data16
and
imul
adc
arpl
inc
jmp
pop
mov
and
xchg
jno
data16
and
imul
xor
xor
jae
push
fild
lock
xchg
popa
cmp
dec
jmp
xchg
bound
adc
call
aam
call
xchg
pop
mov
add
mov
adc
and
or
xchg
popa
inc
shl
add
or
adc
and
sbb
out
xchg
jp
loope
push
push
mov
xor
pop
inc
loop
jg
inc
imul
in
xchg
pop
jne
and
inc
fs
jbe
mov
aaa
sbb
cli
out
je
aad
jl
repnz
mov
jae
jecxz
add
int
repz
repnz
mov
mov
lea
clc
mov
xor
cmp
and
jmp
cld
sub
mov
or
sub
mov
fistp
out
jb
cmp
push
repnz
xchg
xchg
pop
mov
pop
sub
fsubr
xchg
test
pop
push
fld
jbe
mov
das
nop
mov
pop
test
push
mov
mov
or
jmp
xor
dec
inc
retf
and
sbb
sbb
jns
sub
mov
fistp
out
jb
add
adc
mov
and
dec
mov
rcl
sub
push
int3
lods
lods
jg
sbb
push
mov
xor
pop
inc
(bad)
adc
fidivr
enter
fsub
push
inc
(bad)
mov
mov
lea
stc
mov
xor
cld
adc
test
and
pop
push
repnz
outs
dec
mov
lods
pop
cli
mov
cs
push
repnz
pop
mov
adc
or
mov
popf
mov
inc
mov
mov
(bad)
and
xor
jae
push
fild
lock
xchg
dec
cmp
(bad)
and
cmp
pop
sub
fucomp
xchg
mov
(bad)
and
cmps
xchg
xlat
sbb
lods
test
push
and
xor
int3
test
mov
and
xor
jmp
and
jecxz
xchg
adc
and
push
int3
lods
lods
outs
push
lock
xchg
push
and
inc
fs
jbe
mov
aaa
or
out
jne
sbb
inc
pop
loope
dec
les
add
or
adc
and
mov
les
movups
add
je
repz
push
rcl
lea
daa
jo
rcl
fistp
out
jb
int3
push
xor
scas
dec
loope
jbe
mov
aaa
movs
pop
cli
out
dec
xor
pop
jnp
sub
int3
mov
push
out
das
nop
mov
mov
push
hlt
push
mov
adc
sahf
or
pop
mov
add
push
repnz
test
mov
adc
cmps
jecxz
adc
js
xor
mov
push
mov
or
jmp
xor
dec
inc
retf
and
lods
mov
rdtsc
(bad)
jmp
pop
mov
hlt
cmp
mov
sbb
mov
pop
mov
mov
pop
add
xor
dec
push
mov
inc
add
mov
inc
out
inc
mov
sbb
jns
sub
pop
inc
rcr
add
sub
js
add
loop
pop
xchg
bound
xor
jo
rol
fistp
out
jb
jno
movs
xor
scas
jo
xor
scas
cwde
jle
loop
adc
int
jl
repnz
push
mov
jmp
movs
xor
dec
inc
retf
and
pop
cdq
or
aaa
sahf
add
jno
cmp
push
fidivr
(bad)
jb
or
xor
push
rol
add
bswap
nop
cmps
xor
pop
call
mov
movups
xor
push
push
repnz
mov
ss
pop
xor
mov
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
jmp
mov
and
lea
test
repnz
push
fistp
adc
xor
push
fistp
sbb
and
add
stc
test
jecxz
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
pop
mov
and
lea
adc
add
fistp
adc
xor
inc
retf
and
jne
cld
pop
cmp
or
ja
jmp
mov
cmps
mov
into
xchg
or
mov
sbb
inc
jnp
sub
jne
cld
add
inc
sbb
inc
bound
sub
popa
mov
sbb
xchg
or
addr16
dec
int
and
movups
xor
pop
pop
repnz
mov
movups
xor
pop
jb
xor
scas
test
sbb
out
xchg
rol
(bad)
inc
hlt
push
mov
add
xor
in
ds
jnp
sub
int3
mov
dec
mov
cli
out
jne
sbb
inc
jnp
sub
mov
and
fwait
cs
in
cmp
call
xchg
fyl2x
out
jb
push
das
mov
repnz
mov
movups
xor
pop
dec
std
and
stos
push
dec
cld
push
cmp
sbb
sub
sub
mov
add
sbb
jns
or
mov
sub
cld
add
lea
clc
sub
int3
mov
dec
mov
cli
out
jo
fdivr
ja
out
sbb
cdq
add
xor
push
call
fistp
add
jne
and
fs
test
mov
add
push
in
and
jns
fistp
daa
aam
add
ds
xchg
sbb
mov
or
xchg
add
and
adc
fdiv
push
add
fsub
shl
inc
in
jb
or
sub
and
mov
xchg
cmp
push
cmps
xor
adc
inc
into
scas
rcr
jecxz
and
xor
pop
push
repnz
mov
movups
cmp
push
adc
mov
movups
cmp
pop
push
jecxz
push
fild
sbb
je
cmp
add
pop
scas
jecxz
adc
xor
jmp
repnz
icebp
mov
bndstx
xor
pop
inc
repnz
mov
sbb
sahf
inc
xor
xor
push
repnz
mov
or
lea
jp
push
bnd
mov
pop
adc
xor
push
repnz
xchg
pop
mov
push
adc
xor
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
js
lea
sbb
push
fistp
add
and
sbb
xor
mov
movups
and
xor
mov
movups
xor
pop
jge
xor
mov
movups
and
xor
mov
lock
jb
sbb
sub
sub
mov
add
push
sub
es
mov
adc
pop
sbb
inc
imul
cdq
jne
cld
adc
xor
xor
loope
outs
or
mov
lea
and
repnz
mov
clts
lea
and
repnz
scas
xchg
sbb
out
mov
sbb
mov
adc
imul
dec
inc
loope
fisub
inc
imul
cmp
cmp
dec
stc
sbb
stos
enter
or
and
xor
mov
pop
mov
movups
sub
pop
push
in
and
int3
test
mov
cmps
lock
jl
ret
aas
ja
in
cmp
mov
call
mov
leave
xchg
jnp
cdq
movlps
sbb
push
dec
cld
and
scas
xchg
sbb
(bad)
jo
fidivr
ja
call
ja
mov
adc
lea
xor
xor
jl
icebp
xor
nop
xchg
pop
mov
adc
lea
pop
jns
sub
out
and
push
mov
cmp
(bad)
jle
ror
clc
mov
(bad)
adc
adc
arpl
repnz
jecxz
pop
push
add
xor
ja
push
ffreep
xchg
pop
mov
or
lea
es
push
je
push
(bad)
xchg
pop
mov
pop
adc
fwait
daa
pop
push
and
push
(bad)
xchg
pop
mov
or
lea
sub
ss
(bad)
xchg
pop
mov
or
lea
and
aaa
push
fistp
adc
mov
pop
push
call
xchg
pop
mov
or
lea
adc
movs
pop
and
push
cmp
push
fistp
pop
mov
or
lea
adc
movs
cmp
push
fbstp
or
(bad)
icebp
adc
movs
pop
and
push
mov
push
fbstp
or
lea
and
push
out
aaa
push
fisttp
or
lea
and
push
fild
pop
mov
pop
adc
fisub
pop
push
mov
pushf
pop
mov
or
lea
movs
in
pop
push
ins
xor
fild
xchg
pop
mov
or
(bad)
icebp
adc
dec
daa
pop
push
shl
push
fbstp
pop
mov
or
lea
push
push
call
fild
or
lea
push
sbb
pop
push
in
push
fist
pop
mov
or
(bad)
fist
push
js
pop
push
and
push
fbstp
pop
mov
or
push
mov
pop
push
shl
pop
mov
or
(bad)
not
push
ss
push
fisttp
or
lea
push
inc
and
push
mov
xchg
pop
mov
pop
adc
ret
push
lods
cmp
jecxz
pop
mov
or
lea
push
std
es
push
retf
fistp
or
lea
push
cmps
daa
pop
push
mov
push
fbstp
pop
adc
mov
ss
fild
pop
mov
movups
dec
and
push
adc
push
fild
or
(bad)
retf
movs
and
xor
(bad)
xchg
pop
mov
or
(bad)
stc
adc
cmp
pop
push
(bad)
aaa
push
fbstp
pop
mov
or
lea
dec
inc
in
adc
test
sbb
add
inc
adc
cmp
pop
push
loop
push
fild
movups
sub
xor
fwait
xchg
pop
mov
movups
add
pop
push
les
push
fild
movups
je
pop
push
mov
xchg
pop
mov
movups
push
pop
push
scas
xor
fcom
lea
push
pop
and
xor
enter
xchg
movups
dec
and
xor
xor
lea
and
xor
adc
lea
and
xor
ins
xchg
pop
mov
movups
aam
pop
push
pop
xor
dec
xchg
pop
mov
movups
and
xor
cmps
xchg
pop
mov
push
adc
sbb
xor
adc
push
arpl
pop
push
stos
xor
jecxz
pop
mov
push
adc
inc
and
bound
test
sbb
xchg
lea
or
shl
repnz
data16
dec
mov
add
enter
fnsave
sbb
inc
xor
xchg
push
inc
jecxz
mov
cmps
mov
add
jge
mov
adc
inc
push
sub
cmp
mov
push
cmp
sbb
inc
sub
or
dec
mov
rol
fwait
mov
ins
jb
out
jne
or
or
imul
cli
out
xchg
mov
or
int
dec
sbb
sub
cli
out
xchg
mov
or
imul
cli
out
xchg
mov
or
movs
mov
mov
out
xchg
pop
sub
int3
test
dec
sbb
push
jecxz
add
pop
int
fcom
xor
inc
imul
cli
out
jne
or
mov
out
push
dec
cld
jle
(bad)
sti
out
xchg
mov
or
jne
dec
sbb
addr16
out
xchg
pop
sub
int3
test
dec
sbb
push
cmps
cmp
ds
dec
int
and
lock
repz
or
int
and
lock
xchg
inc
sub
pop
int
inc
ss
and
imul
int3
fisub
rcr
add
pop
and
push
(bad)
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
pusha
repnz
mov
movups
xor
pop
adc
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
sbb
mov
jmp
pop
sub
mov
fistp
sti
xchg
aas
cmp
loopne
mov
retf
mov
(bad)
xchg
dec
cmp
dec
nop
sbb
mov
rcl
sbb
dec
(bad)
xchg
daa
inc
mov
cs
inc
adc
nop
dec
repz
or
enter
add
ds
jnp
sub
hlt
xor
aas
cmps
or
mov
test
mov
jle
cli
out
jne
and
inc
jae
daa
outs
lds
mov
xchg
sbb
xchg
(bad)
dec
call
enter
cs
ja
in
ja
in
sbb
mov
cmp
sub
ja
in
or
mov
sub
cmp
add
adc
sbb
cld
in
adc
mov
pop
cmp
sub
and
dec
mov
sub
inc
sub
popa
ja
in
sub
inc
imul
cli
out
jne
and
inc
inc
loope
dec
(bad)
scas
test
lock
or
out
xchg
mov
fs
push
repnz
mov
str
xor
inc
push
repnz
mov
(bad)
lea
and
xor
mov
cvtps2pi
xor
sbb
xor
fistp
push
mov
retf
fisub
rcl
lea
sti
jne
sbb
inc
sbb
ror
xchg
dec
inc
xchg
enter
cs
jne
sbb
inc
sub
std
dec
ret
xchg
pop
inc
lahf
enter
shl
sbb
dec
mov
and
enter
adc
sbb
int
gs
mov
cs
jne
sbb
inc
fs
dec
into
xchg
dec
inc
cdq
cmp
add
loopne
inc
jnp
sub
hlt
jbe
imul
push
gs
mov
dec
jnp
sub
hlt
or
sbb
mov
jg
test
lods
cli
and
call
inc
jnp
sub
hlt
pusha
mov
adc
ror
inc
jne
aas
ja
in
pushf
(bad)
xchg
push
inc
cmps
enter
cs
ja
mov
inc
jnp
sub
hlt
or
push
lahf
push
sbb
inc
jae
daa
outs
in
imul
or
jns
sub
jg
retf
test
xor
sbb
or
xchg
pop
mov
push
xchg
jb
and
cmp
dec
push
mov
sbb
xchg
add
ret
(bad)
mov
mov
add
or
stos
scas
or
lea
cld
sbb
jns
sub
mul
cdq
or
sbb
sbb
mov
dec
dec
shl
inc
out
arpl
mov
ss
loop
jne
test
leave
inc
sbb
add
xor
mov
repnz
mov
push
push
out
add
mov
rcl
mov
out
pop
sub
daa
inc
shl
sub
cdq
cmp
ds
jnp
sub
dec
mov
sbb
jns
or
jge
mov
unpckhps
xor
fst
xor
mov
push
adc
ss
dec
pop
in
inc
retf
test
sbb
mov
sbb
int
cwde
inc
in
sbb
jg
out
xchg
mov
shl
inc
out
bound
xchg
add
add
push
repnz
mov
push
adc
ss
pop
in
jp
retf
test
test
sbb
or
mov
sbb
cmps
or
cwde
inc
xchg
lock
push
scas
push
add
mov
mov
repnz
adc
and
and
cmp
add
test
add
sub
adc
test
test
sbb
push
pop
or
dec
pop
xor
pop
popa
sti
sub
int3
test
or
push
mov
in
popf
and
inc
jae
daa
outs
cdq
dec
imul
or
mov
dec
dec
shl
inc
out
bound
xchg
or
arpl
shl
inc
rcr
out
jb
cmp
push
repnz
rol
jb
cmp
shl
inc
out
popa
mov
jl
add
adc
dec
dec
shl
inc
out
popa
mov
pusha
adc
arpl
shl
inc
rcr
out
jb
push
inc
dec
and
jl
mov
xchg
and
lods
xchg
push
adc
fidivr
push
mov
(bad)
fisub
les
sbb
pop
lock
xchg
mov
loope
dec
(bad)
scas
test
lock
sti
lock
xchg
mov
loop
pop
shr
add
outs
aam
scas
in
cmp
mov
unpckhps
xor
push
(bad)
jnp
pop
mov
les
lea
add
adc
pop
push
repnz
test
(bad)
lock
adc
sub
das
mov
mov
adc
gs
int
inc
dec
loope
dec
(bad)
scas
test
lock
jae
out
xchg
mov
loopne
pop
rcr
add
pop
xor
push
repnz
push
movs
cmps
xchg
pop
mov
das
adc
xor
je
repz
pushf
rcr
das
inc
mov
and
loope
dec
int
cwde
inc
xchg
lock
push
scas
push
add
mov
fistp
cmp
xor
sbb
xor
mov
or
jne
and
fistp
adc
xor
push
repnz
fistp
adc
xor
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
mov
inc
adc
xor
pop
push
bnd
push
fistp
adc
xor
pop
push
repnz
push
fistp
add
int
dec
inc
mov
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
es
jb
push
gs
ds
jnp
sub
hlt
push
lea
hlt
and
xchg
cs
ja
sar
dec
jnp
sub
hlt
mov
adc
pop
sbb
push
cmp
in
sbb
mov
sbb
jns
or
mov
call
adc
and
pop
push
out
push
fbld
movups
or
hlt
dec
mov
adc
add
fstp
ja
in
and
mov
sbb
mov
out
xchg
pop
or
hlt
push
mov
jmp
xchg
or
mov
jecxz
inc
int3
test
lock
xor
pop
push
repnz
fistp
adc
xor
inc
inc
out
add
inc
imul
cli
push
sub
jne
sbb
inc
jnp
sub
stos
xchg
repz
mov
out
xchg
pop
sub
cmp
cmps
mov
or
sub
dec
dec
loop
inc
out
push
dec
clc
and
xchg
cs
jno
fstp
ja
jmp
xchg
cmc
dec
add
xor
loop
repnz
fistp
test
movs
xor
aaa
push
repnz
fistp
jge
add
and
repnz
mov
sidtd
xor
jmp
fistp
pop
stos
das
push
jns
sub
xchg
inc
int
pushf
pop
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
int3
stos
lods
das
dec
sbb
push
sub
rol
(bad)
inc
hlt
push
mov
add
cmp
add
push
fstp
dec
out
jb
cmp
cmp
push
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
lock
jb
add
sub
scas
dec
loop
mov
cdq
or
add
or
mov
sub
enter
in
or
pop
push
hlt
adc
pop
mov
adc
lahf
sbb
jns
or
mov
jmp
xchg
pop
mov
movups
xor
popa
push
repnz
xchg
push
mov
push
adc
xor
push
pop
repnz
sar
sbb
xor
push
push
repnz
test
jecxz
adc
das
pop
push
repnz
mov
jecxz
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
mov
jbe
lea
scas
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
repnz
fistp
adc
xor
push
repnz
mov
or
xchg
adc
lods
int
mov
fild
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
pop
mov
xor
lea
addr16
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
repnz
push
fistp
out
jb
push
dec
pop
ds
jnp
and
jne
cld
sbb
push
xor
sub
sbb
lods
(bad)
and
xchg
cmp
dec
retf
shl
xchg
sub
(bad)
mov
loop
loop
scas
mov
mov
mov
fstp
test
mov
push
mov
sbb
outs
fistp
or
int
push
pop
jmp
outs
and
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
adc
add
fistp
in
jb
push
pop
pop
ds
add
hlt
push
mov
or
pop
cmps
jecxz
jg
sar
jge
mov
add
inc
imul
jge
mov
aaa
ins
jo
out
jne
sbb
inc
inc
fld
dec
hlt
push
xor
and
xchg
adc
mov
(bad)
dec
(bad)
xchg
dec
inc
mov
aam
fs
push
ja
and
push
fistp
adc
cmp
push
pop
jmp
outs
jmp
imul
sbb
push
mov
fisub
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
cmp
or
test
inc
cld
cmp
jg
cmp
dec
call
mov
cmps
mov
into
xchg
sbb
mov
and
stos
and
dec
cdq
pop
adc
inc
dec
sub
sbb
stos
enter
cs
sub
or
and
inc
cdq
adc
cmp
cmp
jnp
sub
movs
mov
shl
sub
(bad)
sub
ret
push
sbb
or
scas
or
mov
mul
movups
sub
iret
test
inc
cli
add
cmp
dec
jnp
sub
aam
cwde
push
stos
out
aaa
sub
cli
out
ja
sar
dec
sti
cmp
mov
push
mov
repz
jb
cmp
pop
in
aas
pop
(bad)
mov
inc
dec
sbb
adc
adc
push
repnz
mov
adc
xchg
sbb
movs
stos
or
xchg
mov
jecxz
xor
and
dec
push
mov
push
fistp
adc
xor
pop
push
repnz
pop
mov
rcl
add
jns
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
mov
inc
adc
xor
push
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
rcr
sti
adc
xor
pop
push
repnz
push
fistp
sbb
add
dec
mov
sbb
or
sbb
push
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
and
lea
adc
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
repnz
int3
mov
lock
pushf
cs
sbb
fimul
xchg
jge
cdq
add
xor
das
or
rcr
push
movs
fdiv
sbb
inc
jno
test
push
inc
cmps
enter
mov
ds
jnp
sub
hlt
adc
sbb
nop
cmp
out
push
rcr
out
jb
push
pusha
movs
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
loope
outs
hlt
inc
imul
and
fwait
mov
ficomp
mov
mov
cs
jne
sbb
inc
pop
fxam
dec
enter
movs
lock
scas
push
pop
push
push
iret
fisub
ret
dec
cdq
or
sbb
sub
cmp
xchg
adc
mov
dec
out
push
rcr
out
jb
push
ins
movs
xor
push
push
repnz
mov
lar
xor
inc
push
repnz
mov
lock
cmps
cs
stos
sbb
inc
jnp
sub
hlt
push
lea
cld
sbb
outs
adc
outs
mov
mov
test
inc
cli
and
xchg
push
cmp
dec
(bad)
sbb
out
adc
add
dec
mov
sbb
lods
or
jp
cdq
or
(bad)
mov
fldln2
push
(bad)
mov
cmps
push
adc
xor
jno
hlt
or
inc
imul
cli
push
sahf
push
adc
fs
bswap
test
mov
sbb
jns
or
scas
or
sahf
inc
cmps
lock
scas
push
pop
push
push
into
fisub
fld
add
add
dec
mov
sbb
hlt
lea
adc
add
dec
mov
sbb
jp
pop
mov
adc
add
daa
jbe
loope
push
into
mov
cmovb
and
fidivr
aam
add
and
repnz
mov
mov
add
and
repnz
mov
psrad
and
repnz
fidivr
add
movs
xor
jo
repnz
fidivr
movs
lea
and
push
repnz
mov
pavgw
and
push
repnz
fidivr
lods
lea
and
push
repnz
xchg
leave
adc
sahf
add
jnp
xor
int3
inc
(bad)
xchg
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
loopne
cli
out
jne
sbb
inc
jnp
sub
hlt
push
mov
or
add
sub
mov
hlt
mov
xor
push
addr16
cld
aaa
ja
in
pop
jge
mov
adc
(bad)
mov
jmp
loop
test
sbb
jns
sub
movs
test
inc
popf
sbb
add
and
xor
mov
movups
xor
pop
je
xor
movs
xchg
test
out
jb
sbb
sub
and
jne
cld
add
mov
fld1
dec
shr
or
mov
out
xchg
mov
(bad)
dec
hlt
push
mov
add
sbb
inc
sub
or
xchg
pop
xchg
cld
add
mov
add
or
mov
aam
xchg
repnz
mov
in
xchg
pop
xor
xor
mov
sidtd
xor
inc
push
repnz
scas
xchg
data16
push
lock
xchg
or
lahf
mov
(bad)
dec
cli
xchg
jle
xchg
enter
add
jnp
xor
int3
dec
hlt
dec
mov
or
push
addr16
aam
ja
jmp
xchg
inc
mov
clc
out
xchg
mov
push
sub
cmps
mov
shl
dec
push
retf
and
push
lods
in
sbb
xchg
adc
ins
pushf
pop
fsub
and
loopne
mov
xor
inc
inc
loope
inc
fyl2xp1
mov
adc
xor
pop
push
repnz
mov
hlt
adc
xor
pop
push
bnd
mov
mov
lea
inc
pop
push
repnz
fistp
adc
xor
push
repnz
pop
mov
movups
xor
push
bnd
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
add
xor
fs
or
sbb
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
jbe
hlt
or
movs
enter
cs
(bad)
fdivr
ja
in
sub
jne
cld
add
push
sbb
inc
jg
add
in
sub
mov
cmp
aaa
inc
arpl
pop
jge
mov
and
fidivr
loope
cli
ret
inc
cdq
inc
sbb
and
fs
or
test
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
sahf
add
push
pop
int
inc
inc
fld
dec
(bad)
xchg
gs
scas
enter
cs
jne
sbb
inc
dec
(bad)
dec
not
(bad)
push
cmps
ror
jae
loopne
push
inc
imul
int3
mov
lock
cwde
cs
test
(bad)
dec
int
jno
cdq
add
cmp
sbb
sub
sbb
test
adc
and
fs
bswap
test
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
hlt
lods
or
popa
inc
cdq
adc
or
jmp
inc
dec
sub
mov
call
mov
scas
nop
inc
xchg
lock
or
out
xchg
mov
(bad)
dec
hlt
push
mov
add
sbb
inc
sub
and
inc
mov
add
ss
int
inc
jnp
sub
mov
ror
cmps
(bad)
inc
jge
and
fidivr
adc
add
mov
sub
sbb
mov
in
xchg
pop
sub
aas
dec
int3
mov
aaa
add
out
jno
ret
dec
(bad)
sub
mov
repnz
jb
or
sub
inc
inc
loope
dec
clc
scas
xchg
pop
pop
lock
nop
or
jns
sub
out
stos
and
jle
loope
adc
sbb
hlt
sbb
mov
movups
adc
pop
push
fnstenv
push
fild
xchg
pop
mov
push
adc
mul
pop
push
cmc
xor
xchg
xchg
pop
mov
movups
stos
and
xor
mov
pop
mov
push
adc
sub
pop
push
pop
xor
jnp
pop
mov
push
adc
mov
xor
sub
adc
fwait
and
xor
mov
push
adc
xchg
and
xor
cwde
xchg
pop
mov
push
adc
xor
jbe
loop
push
shl
out
jb
adc
mov
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jle
xor
mov
movups
xor
pop
adc
xor
mov
movups
xor
mov
sub
and
xchg
cs
jne
sbb
inc
dec
fnop
dec
aam
dec
inc
cdq
aas
adc
cmps
fisttp
ja
out
inc
jnp
sub
hlt
jo
inc
cdq
sub
or
repnz
in
cmp
mov
xor
inc
mov
in
aas
inc
fadd
push
mov
and
xor
mov
movups
xor
pop
dec
repnz
mov
pop
mov
pop
inc
push
sub
das
jge
stos
mov
not
sar
push
inc
imul
int3
mov
lock
sub
aas
jge
mov
and
fwait
cs
mov
jbe
and
mov
pop
mov
icebp
out
jb
or
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
int3
mov
lock
lods
cs
xchg
rol
(bad)
dec
retf
inc
movs
enter
add
data16
sbb
rcl
loop
cmps
out
cmovno
sub
jmp
mov
cli
out
jo
ret
mov
xchg
jae
cdq
pop
fild
lea
and
pop
loope
outs
jns
imul
cli
adc
xor
mov
repnz
test
jecxz
adc
jg
push
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
aaa
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fistp
sub
aas
sbb
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
adc
adc
pop
push
aad
push
fist
movups
add
xor
adc
inc
adc
js
pop
push
mov
xchg
pop
mov
movups
push
xor
ficom
lea
push
sub
int
and
and
jg
or
dec
sub
sbb
lods
sti
and
xchg
cmp
dec
loop
test
mov
xchg
lods
clc
and
xchg
xor
lods
mov
(bad)
sbb
leave
xchg
sub
enter
movs
jo
cmp
les
stos
push
mov
sbb
dec
ret
xchg
add
stos
sbb
mov
dec
scas
or
mov
call
push
movs
xor
pop
push
repnz
mov
lar
xor
inc
push
repnz
mov
getsec
lea
and
repnz
xchg
push
cmp
jp
add
jg
dec
mov
or
push
jo
aam
jl
adc
hlt
bound
cmp
add
sub
and
adc
call
or
out
int
inc
inc
fld
dec
leave
xchg
fs
mov
cs
jo
xlat
ds
jnp
sub
hlt
popa
mov
cld
add
pop
sbb
ja
in
popf
enter
mov
movhps
das
sub
sbb
int3
test
mov
clc
out
xchg
mov
repnz
mov
add
lea
ss
push
repnz
mov
sub
lea
xor
hlt
dec
mov
cld
and
bound
cmp
sub
cmp
cmp
mov
ins
cld
cmp
push
sbb
ja
or
mov
hlt
dec
mov
adc
cmp
cmp
dec
jmp
mov
test
and
xchg
or
ja
das
sub
nop
push
int3
test
lods
out
and
xchg
cs
jne
sbb
inc
jnp
sub
stos
mov
shl
sub
in
sub
das
push
or
cmp
and
setp
movups
inc
frstor
sub
imul
pop
ds
pop
out
aas
dec
rol
sbb
cmp
dec
dec
adc
inc
imul
sbb
xchg
push
or
mov
or
xchg
pop
mov
xchg
adc
xor
jbe
clc
sub
push
mov
repz
jb
adc
xor
ficom
je
mov
movups
(bad)
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
fist
lea
sbb
repnz
fistp
adc
xor
pop
push
repnz
mov
mov
push
push
repnz
pop
mov
scas
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
inc
pop
mov
adc
add
jns
push
repnz
adc
jmp
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
jp
fnstsw
outs
xor
mov
imul
ds
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
repnz
push
fistp
adc
xor
push
repnz
push
fistp
out
jb
push
push
pop
ds
jnp
sub
hlt
push
mov
or
add
sar
data16
sub
hlt
mov
xor
push
pop
(bad)
cld
ds
jnp
sub
hlt
jp
jne
cld
cmp
sbb
pop
sub
and
out
lods
fbld
stos
sbb
enter
nop
enter
xchg
pop
inc
aaa
sub
adc
push
mov
push
cmp
aad
push
xor
inc
inc
(bad)
sub
outs
imul
pop
int
sbb
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jp
xor
mov
movups
xor
pop
ins
repnz
mov
out
xchg
push
cmp
(bad)
sbb
stos
enter
loope
popa
(bad)
sar
jns
cs
hlt
mov
adc
cmps
aad
inc
(bad)
(bad)
cmp
jge
mov
adc
pop
int
inc
inc
fld
dec
hlt
dec
mov
push
adc
cmps
in
push
jae
xlat
cmp
in
mov
mov
test
lds
sbb
inc
pop
fcos
dec
hlt
jne
inc
cdq
sbb
dec
aad
push
xor
inc
pop
in
cs
lds
lock
xchg
push
ja
sub
mov
stc
popf
pop
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
in
jb
push
jns
les
outs
jnp
sub
hlt
push
mov
or
cmp
jecxz
inc
(bad)
sar
push
sub
jo
mov
xor
sbb
sub
fisub
(bad)
xchg
gs
mov
cs
jo
aam
dec
jnp
sub
hlt
bound
sbb
scas
sub
or
and
inc
mov
cs
jne
sbb
inc
pop
(bad)
inc
hlt
pop
mov
cld
add
push
sbb
inc
jae
sub
and
push
fistp
ss
and
xchg
pop
sub
inc
dec
(bad)
sub
cmps
push
jo
dec
dec
das
cmps
xor
pop
pop
repnz
mov
add
(bad)
stc
out
xchg
mov
rcr
movs
shl
jmp
or
shl
lock
xchg
or
fwait
mov
jmp
mov
and
out
jb
cmp
pop
jmp
mov
push
hlt
out
jb
xor
xlat
repz
addr16
pop
mov
or
push
fsub
pop
push
(bad)
push
fistp
add
nop
or
addr16
mov
mov
out
mov
rdpmc
lea
and
or
mov
das
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
aam
lea
test
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
gs
mov
fist
lea
imul
mov
lea
lea
lea
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
aam
lea
daa
jp
sar
outs
xlat
inc
imul
cli
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
push
xor
pop
push
repnz
pop
mov
cmp
lea
sbb
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
or
pusha
hlt
dec
mov
adc
inc
dec
sub
mov
std
sbb
lods
in
and
xchg
(bad)
mov
(bad)
dec
rcl
or
lock
jnp
sub
hlt
push
mov
push
adc
(bad)
pushf
ds
jnp
sub
hlt
sbb
xor
test
jno
fs
hlt
cs
jne
xor
adc
ds
pop
retf
and
push
mov
(bad)
in
xchg
pop
xor
xor
mov
nop
xor
dec
push
repnz
mov
rdmsr
lea
and
repnz
mov
(bad)
lea
fwait
mov
hlt
dec
mov
adc
add
(bad)
fdivr
imul
jge
pop
mov
cmp
push
addr16
in
ja
in
push
jge
mov
adc
dec
sbb
and
xchg
addr16
movs
enter
cs
jne
sbb
inc
jnp
sub
hlt
pop
lea
cld
add
push
adc
mov
dec
in
cwde
enter
cdq
sub
sub
add
ds
pop
in
add
xchg
dec
cld
add
jne
aas
sbb
or
xchg
pop
mov
movups
cmp
pop
push
loopne
push
fild
movups
adc
pop
push
in
and
inc
push
out
cs
sbb
inc
dec
(bad)
dec
rcl
jmp
nop
cs
jne
sbb
inc
inc
(bad)
sub
rol
add
fnstsw
push
jnp
sub
movs
mov
lock
adc
mov
sub
test
cmp
mov
ins
mov
cli
cmovno
sub
mov
lods
jmp
mov
sub
imul
xchg
js
jmp
add
add
sub
int3
test
jmp
push
adc
xor
jae
retf
and
push
cdq
adc
and
popa
frstor
leave
mov
jp
fisttp
jb
push
jp
sub
iret
test
test
adc
xchg
add
add
js
int3
test
mov
adc
sbb
or
adc
jecxz
into
mov
and
jmp
mov
stc
jmp
xor
sar
aaa
inc
imul
push
adc
xor
jle
repnz
mov
xor
imul
push
fistp
adc
xor
pop
push
repnz
mov
imul
movs
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
xacquire
mov
adc
xor
push
repnz
mov
or
xchg
adc
push
mov
aad
outs
and
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
adc
add
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
cmp
int
inc
jnp
sub
mov
aas
cmp
push
inc
inc
sub
sub
mov
cmp
pop
sbb
ja
or
in
adc
mov
adc
dec
sbb
ja
in
adc
jne
cld
sub
inc
cvtps2pi
ja
out
sbb
rcl
lea
adc
enter
mov
mov
cdq
pop
cmp
push
adc
push
pop
in
add
out
imul
dec
iret
fisub
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
add
adc
fistp
adc
xor
inc
pop
retf
and
jne
cld
sbb
jle
cmp
inc
(bad)
dec
jmp
add
cmp
sbb
jg
or
in
pop
jge
mov
cmp
add
add
int3
test
mov
cs
jne
sbb
inc
jnp
sub
sub
out
push
jnp
sub
hlt
jno
dec
cdq
sub
das
lea
ds
pop
in
add
out
imul
pop
int
inc
inc
(bad)
sub
rol
push
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
aaa
cld
jno
out
jne
sbb
inc
popa
fld
dec
ret
xchg
jp
fwait
enter
div
sbb
inc
pop
fldln2
dec
hlt
mov
cld
cmp
sub
sbb
lods
clc
and
xchg
adc
or
xchg
dec
dec
mov
xor
cmp
fisub
(bad)
xchg
jns
cdq
or
sbb
sar
ja
jmp
mov
xchg
dec
mov
sbb
sub
iret
test
cmps
out
adc
cmp
pop
xor
sbb
call
adc
jne
mov
sub
add
mov
out
xchg
mov
stc
cmp
mov
imul
sub
inc
pop
in
es
ror
out
call
inc
dec
push
and
inc
mov
xor
pop
leave
fisub
fistp
cmp
ins
mov
sub
in
es
ror
out
lea
and
xor
test
jecxz
adc
ss
push
repnz
mov
mov
lea
icebp
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
aas
adc
xor
push
repnz
mov
not
lea
ret
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
mov
lea
gs
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
fistp
adc
xor
push
fistp
lea
sub
push
or
lods
mov
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
lahf
xchg
pop
mov
movups
sbb
xor
mov
lea
adc
jo
pop
push
mov
push
fcomip
xchg
pop
mov
movups
and
xor
loope
pop
mov
movups
pop
and
xor
int3
xchg
pop
mov
movups
dec
fbld
sub
and
arpl
add
ja
in
mov
xchg
mov
retf
cmp
dec
loopne
cdq
shl
(bad)
xchg
xor
test
dec
(bad)
inc
mov
mov
jne
sbb
inc
hlt
sbb
cmp
sbb
ds
sbb
mov
daa
cmp
aad
push
xor
inc
pop
in
cmp
out
imul
pop
int
pop
adc
mov
pop
mov
movups
and
xor
cmps
xchg
pop
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
sub
into
test
inc
cld
cmp
jg
pop
inc
dec
sub
sbb
lods
shl
sbb
mov
add
mov
sbb
stos
enter
fnstenv
ds
pop
retf
and
jne
cld
sbb
jge
add
sub
mov
out
mov
movs
mov
push
xchg
retf
jne
sbb
inc
jnp
das
jge
mov
add
inc
aad
push
xor
inc
pop
in
es
shl
out
xchg
bndldx
aas
sbb
or
mov
fist
das
lods
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
into
fisub
ror
xchg
push
cmp
dec
aad
mov
xchg
dec
inc
cdq
aas
adc
sbb
frstor
sub
(bad)
jne
cld
add
sbb
mov
call
mov
push
xchg
push
jg
sub
iret
test
scas
enter
cs
jb
aad
ja
in
cmp
mov
and
pop
cmp
push
adc
push
dec
stc
sub
shl
repz
jb
adc
mov
repnz
mov
add
(bad)
out
xchg
mov
(bad)
sub
rol
pop
cmps
test
scas
sub
outs
out
inc
imul
femms
data16
cs
push
mov
adc
cmp
ja
jmp
lods
in
add
(bad)
stc
out
xchg
cmps
adc
pop
push
repnz
fidivr
pop
cmps
sbb
ds
pop
retf
and
push
lods
test
or
mov
pusha
hlt
xor
mov
push
sub
adc
ja
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
fist
lea
js
push
repnz
fistp
adc
xor
pop
push
repnz
sbb
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
push
lea
sub
pop
or
cdq
data16
lock
test
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
jecxz
adc
xor
push
repnz
push
fistp
add
int
jl
add
je
dec
mov
or
push
pop
(bad)
aam
dec
jnp
sub
hlt
bound
push
cmps
ror
data16
loopne
jne
cmp
pop
hlt
jbe
jne
cld
add
inc
sbb
loopne
fstp
out
rcr
mov
mov
aam
repnz
xchg
mov
sbb
(bad)
xchg
sbb
stos
adc
pop
scas
or
mov
sbb
out
jb
push
movs
xor
push
push
repnz
mov
lar
xor
inc
push
repnz
mov
sysenter
lea
and
repnz
mov
femms
test
int
dec
jnp
sub
hlt
dec
mov
or
cmp
pop
inc
dec
das
or
rcl
xchg
xor
mov
gs
dec
out
pop
inc
mov
cmp
ds
jnp
sub
hlt
push
mov
or
push
cmps
loop
jae
sar
inc
jnp
sub
hlt
mov
cld
sbb
pop
pop
cmp
dec
fyl2xp1
dec
retf
xchg
push
mov
jecxz
pop
stos
sbb
jge
sub
into
test
movs
out
adc
cmp
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
aas
sbb
or
mov
adc
cmps
jmp
jnp
sub
hlt
pop
mov
cmp
or
sub
iret
test
inc
cld
adc
bound
or
sub
cmp
movs
mov
push
lahf
cs
sub
test
lods
out
aaa
mov
cli
out
jne
sbb
inc
jnp
sub
hlt
pop
(bad)
jne
cld
add
mov
sbb
inc
pop
(bad)
xchg
cld
add
xchg
sbb
fmul
fisub
aam
cwde
inc
lods
out
aaa
js
cli
out
mov
(bad)
push
fidivr
adc
into
fisub
ret
mov
inc
mov
cli
push
jp
sar
inc
(bad)
sub
rol
sbb
cmp
dec
pop
in
sub
out
push
(bad)
xchg
femms
arpl
dec
pop
and
pop
mov
or
stos
add
push
jp
pop
push
ficomp
fistp
push
sbb
or
cmps
scas
or
xchg
test
lea
and
or
mov
out
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
add
lea
inc
pop
push
repnz
std
pop
mov
mov
push
xor
push
repnz
push
fistp
adc
xor
push
repnz
clc
pop
mov
retf
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
fistp
mov
lea
rcr
repnz
push
fistp
adc
xor
push
fistp
push
lea
sub
pop
or
cdq
data16
lock
test
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
adc
xor
push
bnd
fistp
adc
xor
push
repnz
enter
outs
adc
xor
push
repnz
push
fistp
out
jb
push
dec
pop
ds
jnp
sub
hlt
push
mov
or
cmp
sar
(bad)
in
mov
xchg
dec
inc
xchg
enter
shl
in
inc
js
cli
dec
hlt
xchg
push
inc
cdq
and
and
mov
jge
inc
sub
hlt
push
mov
adc
cmps
scas
push
popa
(bad)
xchg
ds
jnp
sub
hlt
and
cmp
sbb
inc
aaa
loop
pop
push
hlt
adc
push
mov
icebp
out
jb
or
sub
pop
or
test
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
rol
sbb
repz
ja
sar
jnp
sub
hlt
push
mov
cld
sbb
outs
sbb
inc
jnp
or
in
add
or
cmp
inc
sbb
inc
outs
sub
cmp
cmps
cdq
data16
lock
xchg
sbb
cdq
mov
(bad)
dec
rcl
jmp
cmps
in
data16
out
ds
jnp
sub
hlt
imul
popa
(bad)
sti
ds
jnp
jecxz
fistp
add
jno
mov
int3
mov
inc
mov
cli
pop
das
lods
xor
pop
push
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
int
inc
dec
fld
dec
hlt
dec
mov
or
cmp
xor
sub
push
jge
mov
add
inc
into
fisub
shr
pop
cmps
in
push
inc
inc
sub
and
mov
adc
sbb
frstor
ret
xchg
jp
cdq
or
cmp
cmp
jnp
sub
ins
aad
mov
sub
xchg
sbb
ds
pop
retf
and
pop
sar
gs
enter
movs
cmp
pop
push
in
pop
pop
out
push
cmp
sbb
sub
xor
int3
test
mov
push
in
xchg
pop
sub
outs
xchg
inc
imul
sbb
jne
ds
pop
retf
and
jne
cmc
add
mov
fs
int3
test
call
jl
sub
inc
inc
(bad)
sub
rol
add
xor
jg
repnz
scas
xchg
dec
mov
and
lea
jae
push
repnz
pop
mov
push
adc
xor
push
fistp
adc
xor
bnd
pop
mov
pusha
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
bnd
mov
sahf
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
int3
mov
aaa
and
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
cmp
lea
sbb
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
dec
inc
hlt
or
mov
test
inc
jnp
sub
hlt
pop
mov
cld
sub
push
adc
mov
pop
or
sahf
mov
push
pushf
fdiv
sbb
dec
jnp
sub
mov
add
cmp
or
dec
(bad)
sbb
rcr
push
scas
cs
test
xor
push
in
sub
test
mov
xchg
and
xor
mov
movups
and
xor
mov
movups
xor
pop
dec
in
push
out
push
dec
cld
sub
js
cmp
sub
and
mov
sbb
ins
sbb
inc
jns
or
add
mov
fist
sub
pop
push
mov
sbb
pusha
sbb
inc
dec
sub
and
mov
push
cmp
inc
jno
or
hlt
jo
push
movs
out
adc
add
jae
xor
lock
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
adc
or
hlt
dec
(bad)
jne
cld
sbb
inc
dec
sub
cs
mov
sbb
mov
in
xchg
pop
and
scas
dec
clc
sbb
movs
enter
cs
sbb
inc
pop
(bad)
sub
int3
mov
aaa
sub
(bad)
fnstsw
ja
in
cmp
mov
in
push
xchg
iret
outs
cmps
push
ds
mov
push
fistp
add
int
jbe
pop
sub
int3
mov
aaa
adc
out
je
sar
dec
out
push
shl
out
jb
cmp
inc
imul
int3
mov
lock
sbb
cmp
retf
and
jne
sti
add
jne
and
fs
int3
test
mov
add
(bad)
pop
int
pop
jo
xor
pushf
movs
pop
mov
daa
inc
mov
xor
cmc
jbe
fistp
sbb
and
fidivr
mov
movs
xor
pop
push
repnz
fidivr
fisttp
and
push
repnz
fidivr
mov
movs
xor
loopne
repnz
fistp
or
and
push
repnz
fidivr
add
movs
xor
jnp
repnz
fidivr
mov
adc
movs
xor
pop
push
repnz
mov
jo
out
and
fsubr
int3
mov
pop
out
jb
add
and
pop
push
sti
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
push
and
xor
mov
lea
adc
or
xor
sti
xchg
pop
mov
add
mov
ds
jnp
sub
hlt
dec
mov
cld
pop
cmp
push
inc
inc
sub
cmp
mov
sub
pop
sbb
inc
jbe
sub
sahf
in
pop
jge
mov
and
xchg
adc
aad
and
out
(bad)
pop
xchg
leave
adc
nop
push
adc
mov
sbb
scas
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
adc
adc
pop
push
in
push
out
push
dec
cld
adc
inc
push
sub
cmp
mov
and
xchg
sbb
mov
sbb
inc
pop
loope
dec
int3
mov
lock
push
or
hlt
pop
mov
add
inc
js
arpl
adc
call
adc
ins
loope
and
xor
mov
pop
mov
movups
sub
pop
push
in
sub
fadd
push
cmps
lock
je
ret
cmp
in
cs
mov
sbb
xchg
push
push
push
inc
iret
fisub
hlt
dec
xor
and
xchg
or
mov
cmc
or
mov
cmp
cmp
jmp
cdq
cmp
cmp
push
push
xor
inc
pop
out
and
scas
xchg
cs
lock
cmps
cmp
and
icebp
xor
mov
push
sub
adc
ja
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
mov
lea
sbb
mov
mov
or
xchg
or
test
fisub
fild
mov
lea
sub
cmp
fistp
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
rol
cmp
or
sub
and
mov
and
xchg
and
or
rcl
push
sub
ds
jnp
sub
hlt
jle
dec
cdq
pop
adc
cmps
mov
ds
jnp
sub
hlt
adc
or
nop
imul
mov
jne
add
xor
jp
stc
aas
dec
lock
dec
dec
sbb
push
test
push
inc
test
or
xchg
pop
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jbe
xor
mov
movups
xor
pop
dec
dec
xchg
and
inc
mov
cs
scas
sbb
inc
jnp
sub
hlt
pop
mov
add
pop
cmps
fimul
dec
(bad)
jnp
sub
hlt
outs
mov
sub
and
(bad)
cmc
ds
pop
in
sbb
out
imul
dec
sub
mov
(bad)
dec
aad
jno
cmps
enter
fisttp
arpl
and
inc
hlt
outs
mov
cld
add
mov
push
aam
inc
rol
sbb
aas
sbb
or
test
int3
add
mov
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
and
hlt
dec
mov
adc
cmp
dec
sub
add
mov
cmp
mov
mov
int3
test
cmps
enter
call
ds
jnp
sub
mov
sbb
push
adc
jne
ds
retf
and
jne
clc
and
xchg
cs
jge
fidiv
ja
jmp
mov
xchg
dec
dec
cdq
aas
fist
add
ds
pop
in
and
xchg
cdq
data16
lock
mov
jo
cli
imul
xor
mov
aaa
js
cli
out
jne
sbb
inc
pop
in
sbb
out
push
cmp
sbb
ds
retf
and
push
cdq
adc
sbb
ds
retf
and
jne
clc
add
jnp
sub
iret
test
mov
rdtsc
mov
adc
out
and
sub
lahf
inc
mov
cmp
and
hlt
xor
mov
push
sub
adc
ja
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
fist
lea
sbb
xor
mov
pop
adc
xor
pop
push
repnz
mov
in
adc
xor
pop
push
repnz
pop
mov
mov
lea
movs
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
jp
fstp
outs
fild
mov
jno
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
cmp
lea
pop
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
repnz
push
fistp
adc
xor
outs
pop
retf
and
dec
cdq
adc
push
jl
fdivr
outs
jnp
sub
hlt
pop
xor
and
inc
jg
or
mov
mov
cmp
dec
rcr
xchg
rcr
test
mov
jecxz
cli
shr
call
inc
dec
fldcw
dec
cdq
jno
sbb
mov
jle
mov
xor
jne
fcomi
in
jb
push
jns
sub
into
test
mov
nop
xor
dec
push
repnz
mov
ud2
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
repz
sbb
push
mov
sbb
inc
jnp
and
jne
cld
adc
imul
jmp
inc
cmps
enter
fbstp
sbb
inc
inc
(bad)
sub
rol
cmp
add
sub
mov
cld
sbb
lods
repnz
xchg
push
cmp
dec
fxam
dec
rcl
adc
(bad)
cmc
icebp
sbb
xor
dec
mov
sub
xchg
pop
sub
aas
dec
hlt
mov
jg
sbb
pop
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
lahf
xchg
pop
mov
adc
mov
in
xchg
pop
sub
pop
jge
mov
aaa
cmp
and
mov
rcr
cmps
or
mov
inc
fld
dec
rcl
in
xchg
div
(bad)
ds
jnp
sub
mov
add
lahf
or
inc
test
or
lahf
jne
clc
and
xchg
div
(bad)
cmp
jmp
bound
or
mov
push
int3
test
lods
icebp
add
cmps
or
addps
ficom
cld
aaa
aaa
rcr
test
sub
sbb
int3
test
scas
out
adc
cmp
dec
jnp
and
inc
cdq
out
aaa
cmp
cli
out
jne
sbb
inc
pop
out
cmp
mov
jne
fist
inc
dec
and
sub
rol
sbb
into
fisub
hlt
mov
stos
dec
sbb
adc
xor
pop
jo
xor
xchg
movs
pop
mov
and
jne
ds
retf
and
dec
and
or
xor
fs
xor
stc
lods
pop
mov
mov
imul
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
jmp
xor
pop
push
repnz
mov
bound
lea
sbb
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
loopne
mov
push
adc
xor
sbb
xor
mov
out
xchg
and
fisub
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
sbb
or
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
jnp
retf
and
jl
adc
push
jne
fdivr
jne
sbb
hlt
pop
mov
cld
adc
push
sbb
ja
in
sbb
jne
cld
sbb
inc
sbb
inc
arpl
pop
jge
mov
sub
cmp
cmp
mov
retf
shl
mov
sub
retf
or
dec
ficomp
into
shr
adc
aam
pop
shl
icebp
out
jb
sbb
movs
lods
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
add
pop
push
in
adc
or
dec
(bad)
and
xchg
or
cdq
mov
fcomp
mov
test
jmp
cmps
in
pusha
(bad)
out
outs
jnp
and
or
fisttp
mov
ds
pop
retf
and
dec
cdq
adc
cmp
or
sub
cmp
mov
and
xchg
cs
jne
sbb
dec
jnp
cs
mov
sbb
inc
aad
push
xor
inc
pop
in
sub
movs
cdq
data16
lock
xchg
or
jne
ds
pop
retf
and
sbb
add
and
xor
mov
movups
xor
pop
jae
xor
scas
cdq
data16
lock
xchg
adc
pushf
mov
loop
mov
scas
enter
cs
sbb
inc
addr16
dec
shl
repz
jb
add
ja
jmp
jge
mov
cs
sbb
inc
jnp
sub
aam
mov
cli
add
and
out
xchg
mov
sbb
pop
hlt
push
mov
add
push
arpl
sub
jge
ins
rcr
in
or
ds
pop
retf
and
pop
sar
pop
dec
enter
movs
cmp
pop
push
in
push
pop
out
push
cmp
sbb
sub
add
int3
test
movs
call
or
jno
mov
enter
mov
ss
xchg
pop
and
sub
rol
cmp
sbb
sub
iret
test
lods
cli
add
cmp
pop
pop
push
repnz
mov
movhps
sub
outs
xor
mov
mov
xor
jg
repnz
mov
movups
imul
push
fistp
push
adc
(bad)
and
xor
mov
or
push
frstor
pop
push
int
push
(bad)
xchg
pop
mov
push
adc
clc
and
xor
add
adc
lock
xor
cli
xchg
pop
mov
push
adc
push
pop
push
mov
push
fild
pop
mov
push
adc
cli
and
xor
icebp
xchg
pop
mov
movups
or
pop
push
(bad)
push
fisttp
pop
mov
push
adc
push
and
xor
mov
adc
pushf
pmaxub
leave
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
ja
xor
mov
movups
xor
pop
imul
push
loopne
xchg
pop
lock
adc
add
and
xor
mov
movups
add
xor
daa
int
and
and
xchg
sbb
test
call
mov
xchg
ja
xchg
enter
cs
sbb
inc
jae
loopne
sti
xchg
pop
inc
mov
cs
jne
sbb
inc
jnp
sub
hlt
add
aaa
cmps
mov
pop
std
in
cmp
mov
add
sahf
add
dec
mov
sbb
scas
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
movups
adc
pop
push
aad
push
fist
and
mov
ds
jnp
sub
hlt
dec
mov
push
adc
cmps
in
or
sub
sbb
movs
enter
lds
and
outs
aad
imul
push
sbb
inc
inc
(bad)
dec
hlt
pop
mov
adc
push
sbb
inc
jl
xor
out
sbb
movs
lock
scas
push
pop
push
jb
fisub
fistp
adc
xor
push
repnz
mov
adc
sahf
add
lds
fiadd
fld
dec
retf
inc
call
jne
sbb
inc
inc
(bad)
dec
shr
or
pop
clc
out
xchg
mov
rol
(bad)
dec
rcl
adc
inc
das
sub
je
mov
lock
test
(bad)
ja
fidivr
ja
in
sbb
cdq
add
adc
sbb
xor
xor
pop
push
sti
xor
loope
pop
mov
or
lea
add
mov
sub
sub
xchg
pop
int
push
jnp
sub
scas
nop
inc
nop
lock
lahf
clc
out
xchg
mov
in
inc
int3
mov
aaa
out
jno
out
jno
fdivr
push
dec
loope
dec
std
scas
xchg
pop
pop
lock
fwait
or
jns
sub
shr
cmp
movups
sbb
pop
push
hlt
sbb
scas
xchg
dec
mov
and
lea
cld
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
pop
adc
xor
push
repnz
pop
mov
loopne
lea
jnp
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
in
lea
inc
pop
push
repnz
pop
mov
and
lea
inc
pop
push
repnz
push
fistp
adc
xor
jp
jmp
xchg
sbb
add
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
(bad)
lea
and
repnz
xchg
push
lea
and
fistp
pop
lea
and
push
repnz
fistp
or
int
inc
inc
fld
dec
aad
gs
mov
cs
jne
sbb
inc
jnp
sub
hlt
bound
add
loopne
ja
in
and
jne
cld
add
dec
adc
stos
mov
aad
out
shr
mov
mov
rcr
repnz
adc
sub
pop
dec
loope
outs
test
mov
lea
sub
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
int3
dec
les
dec
xchg
cs
jne
sbb
inc
jns
(bad)
dec
sti
xchg
jne
cdq
cmp
push
fs
in
ja
and
pop
mov
repnz
jb
sbb
sub
mov
loop
mov
lods
mul
call
inc
inc
fldpi
dec
rcl
ffreep
retf
add
xor
push
jmp
imul
movs
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
in
jb
push
jle
(bad)
ds
jnp
sub
hlt
push
mov
adc
cmps
loopne
inc
inc
sub
aas
inc
fisub
repnz
jb
add
ja
in
and
mov
and
fwait
cs
jbe
out
aaa
push
dec
loope
dec
int3
mov
lock
cmps
hlt
or
mov
sti
sbb
test
fadd
sub
xor
jp
jmp
inc
fisub
repnz
jb
adc
xor
pop
jo
xor
xchg
jbe
mov
and
push
adc
pop
push
repnz
fistp
out
jb
adc
ss
push
repnz
mov
or
mov
push
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
repnz
xor
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
xor
lea
inc
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
inc
adc
xor
push
repnz
int3
mov
aaa
and
mov
repnz
mov
pop
adc
xor
pop
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
fistp
add
int
dec
jnp
sub
hlt
dec
mov
cld
sub
sbb
mov
(bad)
dec
(bad)
xchg
dec
inc
scas
enter
les
sbb
inc
pop
fsin
dec
aam
pop
inc
lods
enter
shl
sbb
retf
xchg
and
enter
cs
push
jnp
das
pop
shr
pop
mov
out
xchg
pop
cmp
repnz
mov
nop
xor
dec
push
repnz
mov
rdmsr
lea
and
repnz
scas
xchg
sbb
pop
ds
jnp
sub
hlt
push
mov
add
cmp
out
dec
(bad)
in
cmp
mov
cmp
pop
mov
sbb
xchg
das
add
fbld
mov
add
inc
inc
sub
sbb
cdq
cmp
add
ror
jp
loop
push
dec
in
and
outs
imul
mov
daa
fs
bswap
test
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
shr
popa
inc
xchg
enter
cs
jne
sbb
inc
inc
(bad)
dec
(bad)
xchg
jne
mov
add
adc
fiadd
fld
dec
rcl
adc
cmps
jecxz
inc
inc
sub
aas
dec
into
scas
nop
inc
cwde
lock
fdivrp
out
xchg
mov
push
and
ss
mov
or
in
outs
lds
xor
mov
pop
mov
add
int
dec
jnp
sub
int3
mov
aaa
or
out
jo
sar
pop
in
and
mov
or
jb
cmovno
sub
in
and
mov
(bad)
in
jb
or
sub
inc
inc
hlt
or
mov
sbb
jns
or
mov
call
pop
adc
xor
jbe
(bad)
and
mov
shrd
and
fidivr
mov
and
repnz
fidivr
mov
add
and
repnz
xchg
loopne
jecxz
lds
and
push
repnz
fistp
xor
add
and
push
repnz
fidivr
mov
movs
xor
or
repnz
fistp
test
and
push
repnz
mov
(bad)
mov
and
xchg
mov
out
add
int
pop
adc
mov
pop
mov
movups
and
xor
cmps
xchg
pop
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
int3
xor
(bad)
xchg
pop
mov
movups
sub
leave
test
inc
mov
push
pop
cmp
or
and
mov
in
mov
cmps
mov
into
xchg
sbb
mov
and
mov
out
(bad)
xchg
inc
inc
stos
enter
fnstenv
sbb
inc
dec
fpatan
dec
rcl
adc
cmps
mov
sub
inc
loope
outs
ja
imul
add
mov
xlat
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
dec
shl
push
out
push
dec
cld
add
js
add
ja
out
sbb
enter
in
jns
out
aaa
dec
push
out
and
jmp
dec
clc
and
fwait
cs
(bad)
fistp
push
jnp
sub
hlt
pop
mov
add
cmp
cmp
push
aam
pop
int3
mov
sbb
jb
cmp
xor
xor
mov
sidtd
xor
inc
push
repnz
mov
lock
xchg
cs
xchg
rol
(bad)
dec
enter
lods
enter
push
adc
mov
sbb
rcl
loope
cmps
out
or
mov
fisub
repnz
jb
cmp
jnp
sub
mov
movups
and
inc
cmc
or
and
je
movs
cmc
out
jb
adc
ss
push
repnz
mov
push
pop
enter
movs
loopne
pop
push
test
xchg
pop
mov
push
adc
dec
and
xor
mov
push
adc
data16
xor
fcom
adc
pop
and
xor
pop
xchg
pop
mov
or
push
cmp
pop
push
test
xchg
pop
mov
push
adc
adc
pop
push
mov
xchg
pop
mov
push
adc
loop
pop
push
sbb
push
fcomip
xchg
pop
mov
or
push
out
and
xor
gs
pop
mov
movups
(bad)
and
xor
mov
or
push
pop
and
es
(bad)
cmp
jb
add
and
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fnsave
push
fisttp
movups
or
pop
push
mov
push
(bad)
xchg
pop
mov
movups
bound
pop
push
cmps
xor
in
pop
mov
movups
or
mov
hlt
dec
mov
cld
add
arpl
cmp
dec
rcr
mov
mov
and
xchg
adc
mov
dec
fcomp
cdq
enter
lahf
enter
cs
(bad)
repz
ja
in
sub
mov
adc
aas
sbb
ja
in
sub
jne
stc
add
popf
push
adc
xor
test
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
sbb
int
inc
jnp
sub
hlt
dec
mov
adc
cmps
out
push
inc
(bad)
aam
push
jnp
sub
hlt
bound
cmp
or
dec
push
in
adc
mov
cmps
hlt
push
gs
fistp
ja
in
and
mov
add
push
sbb
inc
jle
sub
in
and
xchg
movs
jmp
pop
push
(bad)
iret
fisub
rcr
out
jb
push
ins
movs
xor
push
push
repnz
mov
syscall
lea
and
repnz
scas
xchg
data16
lock
fwait
cs
mov
rol
(bad)
dec
cld
xchg
jle
mov
cs
ss
hlt
or
and
inc
mov
jmp
js
fdivr
push
jnp
cs
mov
add
popf
push
adc
sbb
int3
test
cdq
unpcklps
sbb
mov
fldlg2
push
fcmovnu
mov
jmp
push
adc
xor
inc
inc
hlt
or
inc
imul
cli
or
xor
push
lods
or
mov
repz
xchg
and
ins
pushf
iret
frstor
(bad)
mov
push
lods
repz
xchg
and
ins
pushf
fcmovnu
mov
enter
mov
add
mov
pop
in
and
mov
(bad)
in
jb
adc
and
push
push
fistp
cmp
ja
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
adc
lea
loop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
mov
imul
push
fistp
adc
xor
push
fistp
adc
xor
fistp
aaa
cmps
sbb
jns
and
int3
test
mov
add
and
xor
mov
movups
xor
pop
jae
xor
mov
movups
xor
pop
repnz
mov
movups
add
and
xor
scas
xchg
dec
sbb
cmp
dec
jmp
lods
jmp
mov
inc
fldl2t
dec
aad
inc
inc
xchg
enter
fbstp
stc
ds
jnp
sub
hlt
jg
push
cdq
pop
adc
xor
push
inc
sbb
das
ja
and
fistp
adc
ins
pushf
xchg
fbld
fistp
sbb
movs
xor
dec
push
repnz
mov
rdtsc
lea
and
loope
outs
test
imul
cs
xchg
iret
inc
inc
(bad)
dec
ret
inc
mov
cs
jne
sbb
inc
pop
loope
inc
int3
mov
lock
pushf
cs
mov
iret
inc
jnp
sub
hlt
pop
(bad)
jne
cld
add
ins
sbb
inc
js
xor
and
fistp
adc
add
jns
or
mov
fidivr
adc
xor
pop
inc
repnz
mov
sbb
mov
in
xchg
pop
sub
adc
movs
mov
sti
xchg
pop
cmp
cmc
or
cdq
adc
cmp
sbb
sub
sbb
mov
sbb
mov
in
xchg
pop
das
or
hlt
push
mov
(bad)
and
pop
dec
adc
adc
push
dec
loope
inc
int3
mov
lock
xor
dec
pusha
icebp
xor
mov
push
sub
adc
ja
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
(bad)
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
iret
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
repnz
pop
mov
mov
push
xor
push
fistp
aaa
xchg
sbb
test
fisub
fild
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
rol
aaa
cmps
repz
popa
pop
ds
jnp
sub
hlt
push
mov
add
push
jo
in
ds
jnp
sub
hlt
push
jne
cld
daa
cmp
push
inc
outs
sub
and
mov
sbb
sbb
inc
adc
or
dec
in
sbb
ror
mov
mov
fstp
retf
mov
test
jnp
pop
push
aam
pop
ror
out
xchg
or
pop
scas
or
xchg
pop
mov
movups
and
pop
push
loope
push
fild
movups
adc
pop
push
aad
push
fist
movups
add
pop
push
in
es
out
imul
push
and
sbb
lods
sti
and
xchg
or
mov
and
xchg
jmp
(bad)
xchg
inc
inc
xchg
enter
fnsave
sbb
inc
pop
(bad)
sub
rol
or
fnstsw
push
jnp
sub
hlt
pop
mov
add
ins
sbb
mov
cmp
test
sbb
lods
cmc
and
xchg
or
mov
sbb
xor
mov
cmp
xchg
pop
sub
in
add
mov
dec
in
sbb
xor
push
push
repnz
mov
sysret
lea
and
repnz
mov
aaa
sbb
out
jne
sbb
inc
jnp
sub
hlt
push
mov
cld
and
gs
ret
inc
arpl
in
dec
shl
repz
jb
push
inc
push
and
lods
dec
(bad)
dec
hlt
push
mov
add
push
popa
(bad)
in
ds
jnp
and
ret
mov
ins
mov
cli
push
arpl
in
mov
mov
in
inc
jp
or
fstp
add
sbb
cmp
inc
pop
in
add
aas
push
jo
inc
dec
das
movs
xor
pop
pop
repnz
mov
out
xchg
sbb
pushf
mov
dec
or
inc
imul
push
sbb
or
scas
or
mov
add
sbb
frstor
les
add
mov
int
pop
jo
xor
pushf
add
mov
daa
pusha
lea
ds
pop
out
aas
dec
in
mov
push
dec
sbb
add
xor
jle
repnz
mov
adc
xor
pop
push
repnz
inc
pop
mov
xchg
adc
xor
pop
push
repnz
mov
mov
imul
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
sbb
mov
add
test
out
xchg
mov
sbb
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
aam
push
fist
movups
add
pop
push
retf
xor
adc
movs
jp
pop
push
mov
xchg
pop
mov
movups
imul
push
(bad)
xchg
pop
mov
movups
sub
fmul
test
lods
shl
sub
test
out
sbb
lods
ret
and
xchg
cs
sbb
inc
jbe
loopne
rcl
les
(bad)
idiv
outs
jnp
das
jge
mov
adc
fdivr
jmp
mov
mov
sub
hlt
mov
push
jge
ins
ficomp
in
push
xchg
or
dec
test
or
cdq
mov
out
mov
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
add
int
push
jnp
sub
hlt
dec
mov
or
push
ja
aam
ja
adc
hlt
bound
cmps
ror
arpl
cmp
(bad)
hlt
jbe
jae
and
xor
pushf
mov
mov
lds
loop
xchg
cs
jne
sbb
inc
inc
(bad)
dec
(bad)
xchg
dec
inc
mov
ror
popa
(bad)
loopne
push
jnp
sub
hlt
jbe
push
cdq
and
pop
dec
mov
ds
pop
in
push
pop
out
imul
pushf
iret
fisub
cli
mov
jae
sbb
pop
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
lahf
xchg
pop
mov
cs
cli
in
xchg
pop
sub
pop
jge
mov
adc
sbb
inc
inc
sub
sbb
lods
out
add
test
sub
jnp
sub
mov
push
cmp
inc
inc
sub
cmp
test
sbb
pushf
cdq
frstor
das
movs
mov
push
cmps
loop
pusha
(bad)
sar
push
jnp
sub
hlt
mov
xor
lea
aaa
jbe
sub
inc
inc
(bad)
sub
rol
adc
std
ja
pop
push
repnz
mov
ins
in
jb
push
pop
pop
ds
pop
in
push
pop
out
push
in
push
push
jl
sub
iret
test
stos
jmp
sbb
ins
lods
or
mov
adc
cmp
dec
pop
in
push
pop
out
push
adc
movs
adc
popa
fnstsw
sbb
aas
sbb
out
mov
rdpmc
lea
and
or
mov
into
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
js
lea
mov
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
and
jecxz
adc
xor
push
fistp
adc
xor
pop
push
repnz
jecxz
pop
lea
sub
pop
or
cdq
data16
lock
test
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
adc
xor
push
bnd
fistp
adc
xor
repnz
fistp
adc
xor
push
repnz
push
fistp
out
jb
push
dec
pop
ds
add
hlt
push
mov
or
cmp
and
sbb
mov
shl
in
inc
dec
fsqrt
dec
int3
xchg
push
inc
stos
enter
lods
jne
sbb
dec
lds
mov
jne
sbb
(bad)
xchg
or
enter
test
sbb
push
stc
mov
add
popf
sti
out
xchg
mov
dec
push
and
pop
imul
movups
cmp
pop
push
std
xor
scas
xchg
pop
mov
movups
sub
pop
push
shl
push
fistp
movups
add
pop
push
les
push
fbld
lock
xchg
adc
or
lds
call
jne
sbb
inc
pop
fld1
dec
rcl
fmul
mov
sbb
inc
dec
fxtract
dec
shl
repnz
jb
sbb
sub
sbb
mov
cs
in
ds
jnp
das
jge
cmps
mov
rcl
mov
repnz
mov
adc
cmp
push
pop
in
and
data16
lock
mov
push
xor
pop
push
repnz
mov
sbb
push
xor
pop
push
repnz
pop
mov
adc
mov
in
xchg
pop
sub
sbb
lods
std
and
xchg
xor
lea
stc
sbb
lods
out
adc
cmp
push
jnp
sub
hlt
push
mov
cld
adc
inc
inc
sub
and
mov
add
fwait
or
jl
or
jge
cmps
mov
or
(bad)
ss
in
cmp
mov
inc
adc
sub
iret
test
movs
out
adc
cmp
pop
xor
cmp
call
adc
into
fisub
shl
dec
jno
out
jne
sbb
inc
pop
stc
sub
shl
repz
jb
cmp
dec
in
dec
leave
mov
imul
or
cmp
dec
pop
in
and
mov
mov
inc
and
in
push
fistp
add
fwait
or
jl
or
mov
out
mov
rdpmc
lea
and
jo
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
movs
adc
xor
pop
push
repnz
mov
loopne
lea
sub
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
mov
cli
adc
xor
push
repnz
sahf
pop
mov
adc
add
nop
pop
push
repnz
push
fistp
adc
xor
repnz
pop
mov
movlps
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
jecxz
adc
xor
pop
push
repnz
fistp
adc
xor
jp
into
outs
aas
inc
imul
sti
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
or
sbb
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
or
scas
or
mov
adc
xor
fdivr
ja
in
or
mov
add
push
sbb
inc
jae
pop
ja
in
add
adc
adc
dec
sbb
inc
addr16
sbb
rol
push
xchg
mov
inc
pop
fstp
jne
inc
adc
cmps
fwait
push
pop
(bad)
jnp
sub
mov
adc
push
sbb
ja
in
adc
inc
imul
cli
out
mov
jbe
sub
mov
data16
lock
xchg
push
sbb
stc
lods
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
adc
adc
pop
push
aad
push
fist
movups
add
pop
push
enter
adc
pop
in
xchg
pop
sub
pop
jge
mov
xor
sbb
lea
out
mov
popf
mov
push
lahf
lds
sbb
inc
ja
dec
xchg
pop
inc
movs
enter
shl
ds
pop
retf
and
dec
cdq
adc
add
fnstcw
dec
jnp
sub
hlt
pop
(bad)
jne
cld
push
cmp
cmp
dec
fabs
dec
aam
pop
inc
stos
enter
xlat
jbe
icebp
ds
jnp
jecxz
fistp
sub
out
xchg
mov
in
ds
out
push
sbb
or
adc
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
ja
xor
mov
ss
lock
xchg
cmp
or
rcl
push
popf
cs
sbb
inc
jge
call
inc
cmps
out
adc
cmp
aas
ja
in
and
das
movs
mov
clc
xchg
or
(bad)
mov
call
mov
lods
mov
les
aas
sub
js
int3
test
cdq
or
cmp
sbb
dec
sub
mov
hlt
arpl
enter
push
adc
push
dec
out
aas
dec
shl
lock
test
push
pop
test
or
cdq
push
sbb
out
add
outs
lds
xor
mov
pop
mov
movups
cmc
fisub
sub
add
adc
fisub
(bad)
xchg
fs
mov
or
retf
pop
int
inc
pop
fld
dec
hlt
push
adc
or
mov
sbb
mov
or
addr16
or
call
and
or
push
repnz
pop
mov
add
and
xor
xchg
lea
add
or
push
pop
int
inc
pop
stc
sub
mov
data16
out
lea
and
push
repnz
mov
or
mov
push
xor
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
fst
lea
push
push
repnz
mov
pop
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
leave
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
dec
inc
mul
dec
sbb
adc
movs
cmp
pop
push
push
push
fild
movups
das
and
xor
cdq
xchg
pop
mov
movups
add
pop
push
(bad)
xor
mov
lea
adc
jno
pop
push
mov
push
fcomip
xchg
pop
mov
movups
and
xor
mov
fsubrp
jb
push
jne
(bad)
ds
jnp
sub
hlt
push
mov
or
xor
loopne
dec
(bad)
sar
inc
jnp
sub
hlt
mov
adc
cmps
aam
inc
push
or
rcr
scas
xchg
sbb
sar
loop
in
xchg
and
mov
lods
push
jg
xchg
cmp
loopne
push
enter
fstp
sbb
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
int3
mov
lock
xchg
cs
scas
sbb
inc
dec
(bad)
dec
rcl
jmp
sbb
inc
pop
fldl2e
dec
leave
xchg
inc
inc
mov
retf
push
jns
and
into
test
inc
cld
push
cmp
cmp
dec
(bad)
inc
hlt
pop
mov
adc
cmps
fmul
data16
out
ja
in
cdq
les
sbb
call
mov
fistp
adc
xor
push
fistp
add
int
inc
jno
(bad)
dec
lds
pop
cmp
aaa
inc
inc
sub
and
scas
xchg
data16
lock
xchg
push
cmp
inc
(bad)
dec
rcl
adc
ins
sbb
dec
inc
hlt
or
and
inc
cdq
adc
cmp
cmp
jnp
sub
aas
lods
lods
push
push
mov
and
and
mov
dec
stc
and
xchg
push
adc
js
or
dec
mov
adc
ins
pushf
and
mov
(bad)
mov
push
lods
icebp
sbb
call
mov
aad
cwde
inc
mov
add
xchg
ficomp
ror
fistp
cmp
add
ins
mov
xor
cmc
jbe
fistp
scas
lea
and
repnz
mov
movups
xor
in
push
repnz
fidivr
mov
and
push
repnz
fidivr
mov
add
and
mov
paddusw
xor
jne
repnz
mov
bts
and
repnz
fidivr
cmp
add
and
push
repnz
fidivr
iret
mov
and
fsubr
int3
mov
aaa
inc
jb
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
or
mov
hlt
dec
mov
adc
(bad)
(bad)
ja
in
mov
mov
ror
cwde
cs
jne
sbb
inc
jae
jecxz
hlt
jno
push
cdq
sub
xor
(bad)
repz
dec
sub
hlt
add
inc
adc
and
fs
or
test
mov
add
repz
int
push
adc
mov
pop
mov
movups
daa
and
xor
mov
movups
sub
pop
test
inc
mov
adc
cmps
hlt
push
jne
fistp
ja
in
and
mov
adc
push
sbb
mov
cmp
pop
dec
jmp
dec
hlt
and
xchg
or
test
sti
sbb
lods
jmp
retf
sbb
mov
stos
xchg
sti
sbb
mov
out
xchg
pop
sbb
push
push
mov
push
fistp
adc
xor
push
repnz
mov
aaa
clc
jo
out
jne
sbb
inc
pop
fld
dec
call
out
cmps
jecxz
jns
sub
stc
stos
and
jne
jmp
xchg
or
cmp
mov
sbb
mov
in
xchg
pop
sub
lods
dec
(bad)
dec
hlt
push
(bad)
jne
sti
and
pop
dec
adc
adc
push
dec
loope
dec
(bad)
scas
xchg
data16
lock
cmps
cmp
and
icebp
xor
mov
push
sub
adc
ja
pop
push
repnz
push
fistp
adc
xor
repnz
mov
sbb
lea
test
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
mov
inc
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
aaa
xchg
or
test
fisub
fild
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
adc
add
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
rol
sbb
sub
add
mov
add
inc
jnp
add
in
and
mov
sbb
inc
sbb
inc
outs
sub
cmp
stos
mov
lods
xchg
sbb
sar
fld
inc
fwait
enter
cs
(bad)
nop
ds
jnp
sub
hlt
es
jne
hlt
and
pop
dec
adc
adc
push
dec
dec
inc
and
inc
mov
sti
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
or
mov
hlt
dec
mov
adc
and
fdivr
dec
jnp
sub
hlt
pop
mov
cmp
push
dec
(bad)
in
outs
jnp
sub
hlt
jb
jp
sub
or
das
sub
fmul
int3
test
stos
enter
cs
jne
sbb
inc
jnp
sub
hlt
pop
mov
cld
sbb
inc
jae
cs
in
cmp
adc
and
pop
dec
adc
adc
push
pop
in
and
mov
pop
dec
sbb
or
aas
sbb
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
in
pop
pop
out
imul
mov
std
sbb
cdq
push
adc
cmps
in
addr16
out
ds
pop
out
outs
aaa
inc
imul
cs
mov
(bad)
dec
(bad)
xchg
jno
cdq
add
pop
cmps
fild
inc
jg
sub
(bad)
cs
out
push
jecxz
cs
jl
fidivr
ja
call
ja
cdq
add
sbb
xor
jp
clc
and
shr
in
jb
adc
add
fbstp
sbb
jle
xchg
pop
sub
cmp
mov
xor
lock
and
stos
and
push
cdq
adc
sbb
das
sub
sbb
int3
test
mov
cmp
xchg
pop
and
cs
out
push
in
add
and
xor
xchg
(bad)
push
movs
call
sbb
mov
fisub
out
mov
rdpmc
lea
and
or
mov
ja
lea
jmp
push
repnz
pop
mov
movs
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
pop
mov
jae
lea
mov
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
push
adc
xor
push
fistp
adc
xor
repnz
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
pop
lea
sub
pop
or
cdq
data16
lock
test
push
xor
pop
push
repnz
mov
sbb
lea
cmp
sub
pop
mov
sub
lea
subps
add
mov
xor
push
xor
push
bnd
fistp
adc
xor
repnz
enter
outs
adc
xor
push
repnz
push
fistp
out
jb
or
sub
cmp
mov
and
push
cmp
dec
fcomp
mov
stos
mov
lds
sub
nop
dec
stc
sbb
movs
enter
lods
jne
sbb
dec
rcl
mov
inc
(bad)
xchg
ds
jnp
sub
hlt
and
sbb
xchg
push
je
mov
xor
inc
mov
cli
out
jne
ds
pop
retf
and
sbb
add
and
xor
mov
movups
xor
pop
jb
xor
mov
movups
xor
pop
repnz
mov
out
xchg
cs
mov
rol
(bad)
dec
hlt
push
mov
or
add
sar
jge
mov
and
pop
sbb
inc
imul
aas
dec
int3
mov
xlat
dec
sbb
push
xchg
cs
mov
push
sub
jne
cld
sbb
ins
sbb
inc
jns
cmp
out
sbb
stos
enter
fidiv
icebp
adc
xor
push
mov
inc
in
xchg
pop
sub
inc
pop
(bad)
sub
rol
push
test
and
xor
mov
movups
xor
pop
jo
xor
mov
add
cmp
or
shl
sti
xchg
pop
cmp
out
mov
mov
adc
cmp
push
jnp
sub
hlt
push
mov
or
push
cmps
loop
js
sar
ja
in
cmp
jne
cld
add
xchg
or
jmp
hlt
dec
xor
and
xchg
push
cmp
jnp
sub
hlt
popa
mov
xor
lea
aaa
jb
sub
aas
dec
int3
mov
fisttp
lock
fs
cmp
ja
pop
push
repnz
fistp
out
jb
cmp
sub
outs
mov
enter
sbb
add
int3
test
mov
or
popa
lods
or
mov
add
mov
cmp
inc
pop
(bad)
sub
rol
adc
adc
pop
push
repnz
stos
jmp
sbb
fs
push
int3
test
and
add
movs
xor
fs
xor
stc
mov
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
add
lea
test
push
repnz
push
fistp
adc
xor
push
repnz
fistp
aaa
xchg
pop
sbb
mov
scas
inc
imul
add
sub
cmp
pop
mov
sbb
lea
cmp
push
fistp
adc
xor
pop
push
repnz
mov
and
jb
cmovno
or
shr
or
sar
push
jnp
sub
hlt
mov
xor
cmovno
ss
and
fistp
push
sbb
pop
sub
inc
inc
dec
mov
inc
imul
movups
cmp
pop
push
std
xor
scas
xchg
pop
mov
movups
sub
pop
push
shl
push
fbld
icebp
out
jb
cmp
dec
call
js
cmps
enter
cs
jne
sbb
inc
pop
(bad)
inc
aam
test
ins
icebp
out
jb
cmp
jnp
sub
hlt
push
xor
add
inc
jnp
sub
and
fistp
add
pushf
or
or
ficomp
xchg
sub
xchg
xchg
pop
mov
or
lea
fbld
sub
aaa
sub
cli
out
jo
(bad)
aaa
push
dec
out
aas
outs
out
inc
imul
cmp
cmp
in
dec
enter
dec
sbb
or
cmp
xor
mov
or
lea
or
jmp
dec
sbb
add
xor
dec
push
repnz
mov
adc
lea
gs
push
repnz
mov
jge
lea
mov
push
fistp
adc
xor
pop
push
repnz
mov
lock
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
movups
xor
pop
push
repnz
fistp
cmp
sbb
pushfw
dec
fisub
fistp
sbb
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
retf
and
dec
cdq
adc
sbb
or
hlt
pop
lea
jmp
xchg
sbb
mov
sbb
inc
dec
(bad)
dec
rcl
fild
add
sub
int
and
push
stos
out
aaa
in
cli
out
ins
loope
and
xor
mov
pop
mov
movups
and
xor
mov
movups
cmc
fbld
shr
xchg
push
cmp
dec
call
mov
retf
sbb
or
jge
stos
mov
or
sub
sbb
jecxz
pop
stos
pop
sbb
cmp
push
push
mov
pop
sar
pop
dec
enter
movs
cmp
pop
push
in
es
out
push
dec
cld
sbb
popa
mov
or
adc
or
int
ja
call
mov
int3
icebp
out
jb
adc
mov
pop
push
rol
push
fistp
cmp
sub
test
and
mov
add
xor
loope
inc
(bad)
sbb
imul
movs
xor
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
cmc
adc
xor
pop
push
repnz
mov
pop
cdq
jbe
push
xchg
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
inc
loope
outs
test
mov
cmps
test
(bad)
fnstsw
dec
jnp
cs
stos
mov
or
(bad)
mov
sbb
lods
out
sbb
mov
out
xchg
pop
xor
pop
push
repnz
mov
sidtd
xor
dec
push
repnz
mov
or
mov
out
xchg
mov
fld
dec
hlt
push
mov
or
sbb
loop
fs
sar
push
dec
(bad)
and
pop
push
dec
(bad)
and
nop
cs
(bad)
fistp
push
jnp
cs
mov
add
loope
and
xor
movs
xchg
push
icebp
out
jb
push
inc
push
sub
outs
js
imul
(bad)
jns
or
pop
shl
out
jb
cmp
dec
(bad)
and
ret
dec
loope
adc
movs
xor
sbb
xor
mov
add
das
mov
and
xor
mov
movups
add
and
xor
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
repz
mov
movups
and
cmp
fdivr
adc
xor
pop
inc
repnz
mov
movups
cmp
pop
push
mov
push
cmp
test
sbb
jge
cmps
mov
adc
aaa
sbb
scas
or
xchg
sbb
add
and
xor
mov
movups
add
mov
shl
call
fidivr
push
inc
loope
outs
retf
mov
cmps
hlt
or
sub
mov
(bad)
xchg
leave
aaa
dec
jo
out
jns
xor
test
repnz
mov
movups
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
hlt
adc
xor
pop
push
repnz
mov
dec
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
adc
jecxz
adc
xor
push
repnz
push
fistp
aaa
xchg
or
push
push
mov
nop
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
addr16
sbb
push
xchg
cs
mov
rol
(bad)
dec
leave
xchg
jle
cdq
add
sbb
in
cmp
in
and
pop
mov
fisttp
xchg
fbstp
sbb
mov
repnz
mov
cmc
out
jb
or
mov
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
in
sub
jg
mov
xchg
adc
cdq
mov
(bad)
dec
rcl
jmp
sub
std
inc
pop
out
aas
outs
inc
inc
imul
test
dec
(bad)
inc
hlt
pop
mov
cld
add
push
xor
inc
pop
call
out
dec
sbb
adc
add
xchg
imul
xor
mov
push
out
jb
push
addr16
ss
dec
dec
sbb
inc
imul
sti
or
or
mov
sub
sahf
inc
mov
sti
out
xchg
cmps
xor
push
fistp
in
add
cmp
dec
inc
and
dec
and
jmp
add
xor
xor
stc
(bad)
pop
mov
repz
xor
push
fistp
adc
xor
push
repnz
jecxz
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
lock
xor
pop
push
repnz
mov
pop
adc
xor
or
xor
jne
cld
add
mov
out
xchg
pop
xor
xor
mov
nop
xor
dec
push
repnz
xchg
inc
mov
rdpmc
lea
and
repnz
mov
(bad)
lea
sbb
or
mov
adc
sbb
fnstcw
ja
in
sub
mov
add
push
sbb
inc
jl
or
lds
vpsubusw
sub
dec
scas
and
inc
mov
jmp
push
repnz
mov
nop
xor
dec
push
repnz
mov
femms
lea
sbb
hlt
dec
mov
hlt
and
fwait
push
sbb
inc
jnp
sub
hlt
pop
mov
cmp
sbb
int3
fisub
lds
push
cmp
cmp
dec
(bad)
dec
hlt
popa
inc
or
femms
scas
sub
int
and
push
push
mov
and
aas
outs
xchg
mov
xchg
push
sbb
sbb
hlt
dec
adc
push
popf
or
push
pop
int
inc
jnp
sub
lahf
inc
mov
cli
out
push
push
shl
mov
xchg
femms
scas
sub
int
and
pop
pop
xor
xor
stc
mov
jecxz
adc
xor
repnz
push
fistp
adc
xor
pop
push
repnz
mov
arpl
lea
and
repnz
pop
mov
in
lea
das
pop
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
dec
adc
xor
pop
push
repnz
fistp
inc
lea
sub
test
dec
sbb
push
enter
movs
xor
xor
mov
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
movups
sbb
pop
push
ret
xor
mov
mov
daa
or
shr
xchg
or
mov
fldlg2
dec
ret
inc
cmps
enter
cs
loop
ja
in
cmp
ins
rcr
sub
xchg
sbb
mov
out
push
dec
in
sbb
xor
push
push
repnz
mov
sysret
lea
and
repnz
xchg
inc
mov
cli
out
ja
lds
inc
jnp
sub
hlt
push
xor
add
sbb
inc
inc
sub
and
mov
sub
push
das
or
hlt
push
mov
sti
and
xchg
cs
sbb
mov
cmps
sahf
inc
cmps
out
aaa
je
cli
out
jae
sub
test
(bad)
mov
adc
xor
inc
dec
dec
adc
inc
imul
stc
or
int3
fisub
aad
cwde
data16
sbb
or
adc
mov
les
sbb
jb
or
sbb
or
mov
mov
adc
cmp
push
push
mov
movhps
xor
fs
xor
stc
mov
jecxz
adc
xor
pop
push
repnz
mov
dec
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
xchg
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
repnz
fistp
sub
cli
out
xchg
mov
or
cdq
pop
mov
pop
adc
xor
pop
push
repnz
mov
adc
lea
add
adc
fistp
adc
xor
pop
push
repnz
rol
add
shl
mov
mov
sbb
outs
sbb
inc
jnp
sub
in
and
stos
mov
rcl
call
push
stc
stos
lahf
inc
mov
cli
out
jne
cmp
push
pop
retf
and
sbb
add
and
xor
mov
movups
and
xor
mov
out
sbb
push
cwde
cs
mov
rol
sbb
mov
cld
add
imul
or
rol
cmp
sbb
ja
in
cmp
cmps
mov
lock
cs
jl
jmp
xor
aaa
dec
sbb
push
xchg
sbb
sbb
scas
or
mov
mul
movups
sub
test
lods
jmp
pop
int
inc
jnp
cs
les
and
inc
push
and
cmp
cmps
push
dec
loope
fwait
pop
and
xor
xchg
adc
sbb
int
dec
pusha
sti
xor
mov
push
sub
ja
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
jle
lea
sub
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
or
xor
retfw
out
xchg
pop
sbb
mov
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
add
adc
pop
mov
and
lea
cmp
push
mov
adc
test
(bad)
inc
hlt
pop
mov
cld
pop
cmp
cmp
jnp
sub
hlt
ins
lea
xor
lea
aaa
jge
sub
int
and
aaa
clc
jae
out
ins
loope
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
movups
mov
mov
sub
sbb
arpl
push
inc
dec
sub
sbb
lods
in
and
xchg
push
push
jg
or
pop
hlt
dec
mov
jmp
xchg
cs
je
aad
ja
in
cmp
mov
movups
cmp
inc
inc
dec
xor
inc
imul
or
jae
das
movs
xor
pop
pop
repnz
test
data16
sbb
cmp
retf
and
push
cdq
adc
sbb
sbb
or
adc
sub
cmp
inc
inc
dec
inc
and
pop
mov
or
mov
adc
mov
fcmovb
push
fistp
sbb
mov
in
xchg
pop
sub
aas
outs
xor
mov
mov
xor
dec
push
repnz
mov
adc
lea
fstp
ds
fistp
adc
xor
push
repnz
mov
dec
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
aaa
xchg
or
pop
pop
int
inc
inc
dec
and
inc
imul
movups
and
xor
scas
xchg
pop
mov
movups
sub
xor
fwait
xchg
pop
mov
movups
add
pop
push
les
push
fbld
lock
jb
add
sub
scas
dec
jmp
lods
sti
and
xchg
adc
or
ret
xchg
dec
inc
test
shl
in
inc
pop
fsincos
xchg
cli
add
or
fwait
pop
int
inc
pop
stc
sub
rol
push
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
aaa
test
cli
out
jl
lds
ja
in
cmp
mov
sbb
sbb
inc
inc
sub
mov
shl
xor
je
(bad)
aas
ja
out
sbb
lods
jmp
bnd
sbb
inc
jnp
jecxz
fistp
sbb
pop
sub
aas
outs
add
mov
outs
or
movs
xor
pop
push
repnz
rol
cmp
sbb
sbb
or
mov
add
or
inc
pop
int
inc
jnp
sub
lahf
inc
mov
cli
out
push
js
xor
xchg
mov
add
or
imul
dec
pusha
lock
fnstsw
sub
ja
pop
push
repnz
mov
lods
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pandn
sub
cli
out
xchg
mov
or
test
jecxz
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
push
mov
sbb
jg
sbb
and
mov
std
sbb
lods
jmp
xchg
cs
mov
stc
inc
jnp
and
jne
cld
add
inc
sbb
inc
bound
or
(bad)
xchg
sub
stos
adc
ja
or
pop
ret
out
dec
sbb
pop
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
cwde
xchg
pop
mov
movups
sub
int
and
pop
cmp
add
dec
sub
sub
mov
add
push
sbb
inc
jle
das
ja
in
cmp
mov
inc
out
jb
cmovno
or
hlt
push
mov
clc
and
xchg
adc
or
hlt
fs
pop
mov
or
xchg
femms
pusha
scas
das
sub
test
lea
adc
xor
push
push
repnz
mov
aaa
call
mov
add
hlt
push
mov
inc
sub
out
xchg
mov
fld
inc
hlt
push
lea
add
cmp
sbb
mov
or
rcr
fidivr
xor
icebp
xchg
pop
mov
dec
adc
xor
pop
jo
xor
xchg
aam
mov
and
push
in
pop
push
fisubr
fistp
add
pop
pop
int
dec
pusha
lock
mov
push
sub
add
cmp
cmp
mov
add
lea
inc
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
mov
fisttp
add
sub
pop
out
imul
add
and
repnz
mov
clts
lea
and
repnz
mov
(bad)
lea
and
repnz
xchg
inc
mov
cli
out
jne
sbb
inc
jnp
sub
hlt
push
mov
or
cmp
cmp
inc
fldln2
dec
hlt
mov
cld
add
pop
sbb
inc
je
or
fstp
add
jno
out
xchg
mov
retf
and
sbb
add
and
xor
mov
movups
xor
pop
jno
xor
mov
fwait
dec
sbb
push
xchg
cs
scas
sbb
inc
inc
(bad)
dec
rcl
push
cmp
add
inc
and
or
lods
ret
dec
sbb
push
xchg
loop
pop
cmp
in
cmp
mov
push
cmp
mov
sbb
mov
repnz
stos
sahf
inc
mov
cmp
and
in
jns
call
adc
fbld
sub
aaa
pop
jae
out
jo
(bad)
aaa
push
dec
stc
cmp
mov
addr16
sbb
or
cmp
inc
inc
dec
jg
inc
imul
movups
sbb
push
hlt
sbb
mov
add
cmp
and
div
sti
fnstsw
push
pushf
push
adc
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
not
lea
out
pop
push
repnz
fistp
adc
xor
push
bnd
mov
adc
(bad)
stos
sub
pop
repnz
mov
movups
and
xor
mov
movups
xor
pop
js
xor
mov
sbb
mov
out
xchg
pop
sub
ds
mov
and
xchg
div
(bad)
ds
jnp
sub
movs
mov
(bad)
xchg
cs
sub
outs
hlt
inc
imul
add
sub
push
fistp
adc
xor
dec
push
retf
and
dec
cdq
push
adc
cmps
hlt
push
gs
fbstp
ja
in
sbb
movs
out
adc
sahf
add
mov
fimul
add
jge
cmps
mov
or
loop
inc
inc
cmp
pop
xor
jne
call
adc
or
pop
hlt
dec
mov
add
xchg
pop
int
ja
call
sahf
dec
mov
xchg
out
jb
or
and
inc
pop
in
cmp
test
adc
xor
(bad)
push
repnz
mov
sbb
pushf
add
xor
ret
xor
fistp
mov
add
and
push
repnz
mov
psubusw
xor
fwait
push
repnz
mov
movhps
xor
in
push
repnz
fistp
rcl
adc
cmp
loope
jge
mov
push
mov
prefetcht0
xor
push
push
repnz
mov
invd
lea
and
repnz
scas
xchg
data16
sbb
out
xchg
cs
pop
ds
jnp
sub
mov
and
xchg
or
mov
xor
xchg
mov
in
sbb
mov
out
xchg
pop
xor
xor
mov
nop
xor
dec
push
repnz
mov
lock
test
in
pop
ds
jnp
sub
hlt
push
xor
add
add
arpl
fiadd
push
sub
mov
in
cmps
in
shl
xor
jp
jmp
inc
fiadd
sub
clc
out
xchg
movs
xor
dec
pusha
icebp
xor
mov
push
sub
ja
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
or
lea
outs
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
add
xor
retfw
out
xchg
sbb
fisub
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
add
push
fistp
adc
xor
dec
pop
retf
and
push
cdq
adc
add
dec
and
mov
call
mov
test
fisttp
jg
ss
in
ds
mov
sbb
inc
aad
push
xor
inc
pop
in
aas
pop
out
push
dec
sti
add
or
ficomp
cli
xor
mov
movups
and
pop
push
in
push
fbld
movups
sub
test
lods
stc
and
xchg
(bad)
mov
jmp
mov
lods
mov
iret
xchg
cs
sub
int
and
and
xchg
cs
ja
fdivr
ja
in
aas
jge
mov
and
pop
pop
adc
adc
push
push
mov
add
pop
and
fidivr
adc
int
inc
inc
fld
inc
aam
cwde
push
mov
icebp
out
jb
cmp
dec
(bad)
aas
outs
test
or
pop
sbb
sbb
or
xchg
pop
mov
out
lea
daa
jbe
clc
sub
rol
sbb
iret
fisub
out
mov
sysexit
lea
and
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
jo
mov
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
adc
(bad)
scas
sub
pop
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jne
xor
scas
nop
data16
lock
xchg
cs
pop
aaa
ja
in
cmp
cmps
mov
or
in
aaa
ja
in
pop
mov
push
lods
lock
mov
out
xchg
pop
xor
pop
push
repnz
mov
sidtd
xor
inc
push
repnz
mov
or
sahf
cli
out
xchg
mov
fld
dec
retf
xchg
jp
mov
loop
js
sar
push
dec
loope
push
out
push
dec
sti
and
xchg
cs
lods
sbb
inc
jnp
sub
hlt
pop
mov
in
or
sbb
loope
and
xor
mov
retf
cli
push
gs
cmp
dec
loope
push
out
push
dec
cmc
and
fwait
invd
mov
pop
push
cmps
mov
sbb
pushf
movs
fbld
inc
xchg
pop
mov
push
adc
xor
jbe
loope
inc
(bad)
xchg
jecxz
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
fistp
adc
xor
push
repnz
fistp
push
xchg
adc
push
cmp
repnz
mov
sidtd
xor
inc
push
repnz
mov
rdmsr
lea
and
and
bound
enter
push
sbb
inc
inc
(bad)
dec
iret
xchg
jbe
cdq
cmp
sbb
faddp
aaa
movs
xor
jp
jecxz
push
out
imul
inc
adc
movs
xor
pop
push
repnz
push
fistp
adc
xor
push
inc
test
inc
cdq
adc
cmp
dec
(bad)
inc
shl
or
jb
pop
inc
push
and
lods
dec
(bad)
dec
hlt
push
(bad)
jne
xor
lea
aaa
jno
sub
(bad)
test
inc
mov
out
lea
and
push
repnz
mov
or
mov
push
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
retf
add
and
xchg
mov
jmp
xor
fistp
adc
xor
pop
push
repnz
pop
cdq
jle
push
xchg
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
cmp
pop
push
mov
and
call
push
jnp
sub
movs
mov
iret
xchg
pop
cmp
pop
in
dec
(bad)
scas
nop
test
out
mov
push
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
test
sbb
ret
ds
jnp
cs
mov
and
xchg
or
arpl
or
inc
cdq
or
cmp
cmp
jnp
ss
mov
loop
adc
and
pop
push
mov
add
test
adc
mov
aad
cwde
inc
mov
sti
out
xchg
mov
in
dec
(bad)
scas
nop
and
out
pop
xor
stc
repz
out
xchg
pop
mov
adc
mov
das
mov
and
xor
mov
movups
add
and
xor
mov
movups
xor
pop
xchg
repnz
mov
movups
adc
xor
pop
cmp
xor
mov
movups
adc
adc
dec
pop
in
and
pop
popf
sbb
add
and
xor
mov
movups
xor
pop
dec
repnz
scas
xchg
data16
sbb
out
xchg
cs
stos
sbb
inc
jnp
cs
movs
mov
push
xchg
repz
in
icebp
add
xor
inc
mov
cli
out
xchg
mov
repnz
mov
add
lea
ss
push
repnz
inc
fiadd
cmp
sbb
sub
cmp
mov
add
sahf
add
pusha
pop
int
inc
jnp
sub
mov
in
cmps
in
shl
daa
jp
jmp
mov
out
clc
out
xchg
movs
xor
dec
pusha
div
repnz
push
fwait
push
adc
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
cld
pop
mov
retf
add
sub
push
bnd
mov
jnp
lea
and
repnz
pop
pop
mov
movups
and
pop
fistp
sbb
add
and
repnz
mov
(bad)
jge
xor
jns
repnz
mov
femms
xchg
adc
mov
leave
xchg
inc
mov
out
or
sub
sbb
movs
enter
cs
jno
loope
push
dec
(bad)
das
inc
fild
push
mov
and
xor
mov
movups
xor
pop
dec
out
push
out
imul
pop
cmp
pop
(bad)
dec
retf
inc
mov
sbb
outs
pushf
rcr
mov
les
loop
cmps
out
push
pusha
(bad)
aam
ja
div
aaa
leave
in
pop
mov
nop
ss
scas
or
adc
or
es
out
xchg
mov
in
and
test
mov
xchg
push
adc
mov
aad
cwde
inc
mov
cli
out
push
push
repnz
inc
jecxz
pop
cmps
sbb
jns
and
inc
repnz
mov
movups
xor
pop
jecxz
xor
mov
movups
add
and
xor
mov
movups
xor
pop
out
repnz
mov
movups
adc
adc
dec
pop
jmp
mov
add
and
xor
mov
movups
xor
pop
jno
xor
scas
xchg
retfw
sbb
out
xchg
adc
rol
(bad)
dec
rcl
adc
cmps
out
inc
inc
sub
ins
push
fistp
or
adc
xor
pop
pop
repnz
mov
movups
and
popa
or
bound
enter
jmp
dec
jmp
inc
fiadd
cmp
cmp
jnp
sub
ins
retf
pop
mov
sub
sbb
mov
and
dec
and
inc
pop
xor
xor
stc
mov
mov
test
push
xor
pop
push
repnz
fwait
pop
mov
lea
lea
cmp
repnz
mov
popa
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
cmp
repnz
xor
lock
xchg
or
cvtdq2ps
ficomp
std
xor
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
adc
pop
push
fdiv
push
fist
movups
or
pop
push
int3
xor
mov
lock
jb
or
sub
sbb
lods
cld
and
xchg
sbb
mov
(bad)
dec
retf
inc
mov
shl
in
inc
pop
fsincos
dec
rcl
fbstp
add
ds
pop
retf
and
push
mov
ret
pop
xor
push
push
repnz
mov
nop
xor
dec
push
repnz
xchg
inc
mov
rdtsc
lea
and
dec
ret
and
inc
cdq
adc
sbb
fnstsw
mov
mov
in
push
sub
je
jmp
aas
pop
out
push
dec
clc
and
xchg
or
call
sub
hlt
pop
mov
sti
and
nop
cs
jne
sbb
mov
repnz
stos
sahf
inc
mov
cmp
and
setp
movups
sub
int
and
sbb
jg
sbb
fs
or
test
lods
enter
sbb
popa
mov
bswap
test
cdq
or
sbb
sbb
push
pop
mov
xchg
adc
xor
jbe
in
jg
les
push
xchg
or
mov
shl
out
lea
and
repnz
mov
movups
xor
push
repnz
fistp
adc
xor
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
jo
add
sbb
scas
or
lods
sub
lock
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
movups
pop
and
xor
mov
mov
out
xchg
pop
sub
and
sub
cld
add
addr16
cmp
dec
(bad)
dec
rcl
xlat
or
ror
inc
jbe
xor
jge
ins
cmc
pop
mov
sub
xchg
sbb
pushf
rcr
scas
call
lods
mov
sbb
pop
enter
movs
cmp
pop
push
stc
xor
mov
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
push
sbb
pop
or
shr
cli
xchg
or
lea
(bad)
dec
into
xchg
dec
inc
mov
cmp
ds
jnp
sub
mov
add
(bad)
mov
fldln2
dec
hlt
addr16
aas
mov
or
nop
ud2
pushfw
push
fbld
shl
lock
ja
pop
push
repnz
mov
dec
out
jb
push
js
les
push
dec
(bad)
aas
outs
out
imul
adc
jne
sbb
or
mov
adc
cmp
add
ins
mov
push
adc
cmp
push
pop
retf
and
dec
and
jmp
xor
xor
stc
mov
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
or
lea
mov
push
bnd
fistp
adc
xor
repnz
fistp
sub
cli
out
xchg
mov
or
cdq
pop
mov
or
lea
sub
push
repnz
mov
push
adc
xor
pop
push
repnz
mov
adc
xor
pop
push
repnz
mov
xchg
cs
mov
rol
(bad)
dec
iret
xchg
jl
movs
enter
in
inc
jp
or
rcl
adc
movs
xor
jp
stc
and
out
push
dec
inc
cmp
xor
mov
movups
xor
pop
inc
repnz
mov
movups
cmp
test
cdq
pop
adc
cmps
cmc
push
jg
fidivr
push
jnp
sub
hlt
pop
mov
add
or
ds
scas
or
mov
cld
add
inc
dec
sub
mov
hlt
pop
xor
ins
adc
and
pop
test
inc
nop
pop
sar
jnp
enter
movs
cmp
pop
push
in
and
jmp
mov
xchg
push
push
pushfw
jns
mov
sub
add
mov
out
xchg
mov
rol
in
inc
rol
xor
push
and
les
mov
pop
sbb
pop
and
cmp
and
adc
xor
fs
xor
stc
mov
jecxz
adc
xor
pop
push
repnz
mov
sbb
lea
je
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
lock
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
mov
or
push
xor
pop
push
repnz
fistp
ins
jb
out
je
or
scas
or
xchg
pop
mov
add
and
xor
mov
movups
xor
pop
jne
xor
mov
movups
and
aas
outs
jmp
imul
icebp
push
jb
ret
jnp
sub
hlt
push
mov
pop
adc
ins
sbb
inc
jns
xor
jge
mov
push
cmp
add
ins
loop
pop
push
hlt
adc
inc
sbb
or
(bad)
mov
fistp
sbb
xor
dec
push
repnz
mov
(bad)
lea
and
dec
jmp
inc
imul
adc
test
(bad)
fnstsw
ja
out
sbb
lods
lock
xchg
adc
mov
cmp
push
push
stos
mov
or
and
mov
(bad)
inc
hlt
pop
mov
xor
add
ja
sub
or
and
push
mov
outs
push
mov
xor
push
push
repnz
mov
or
push
sub
jne
cmp
push
push
movs
mov
sbb
int3
fisub
aad
adc
icebp
out
jb
sbb
sbb
or
mov
mov
rdtsc
fild
adc
mov
cs
shl
out
jb
adc
xor
dec
push
repnz
mov
movups
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
inc
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
or
push
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
cmp
xor
data16
sbb
out
xchg
nop
int
mov
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
aas
adc
xor
dec
pop
retf
and
inc
cdq
adc
push
jae
fdivr
push
jnp
das
jge
stos
mov
push
xchg
cs
jne
sbb
inc
dec
(bad)
inc
hlt
outs
mov
sub
ror
xor
jp
stc
cs
out
push
dec
cld
add
mov
ficomp
cli
xor
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
sub
int
and
add
jg
cmp
dec
loopne
mov
xchg
jo
mov
cs
scas
das
sub
test
cdq
adc
xchg
(bad)
dec
hlt
pop
mov
xor
lea
aaa
jne
sbb
scas
or
mov
mov
sbb
or
scas
or
in
mul
movups
sub
fs
or
test
scas
call
out
xchg
pop
sub
cmp
mov
lock
xchg
cs
scas
sub
int
and
add
dec
add
and
xor
xchg
hlt
pop
mov
and
ja
or
mov
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
pop
mov
or
lea
int
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
pop
adc
xor
push
repnz
push
fistp
adc
xor
repnz
mov
jb
lea
icebp
cmp
xor
data16
sbb
out
fwait
or
pop
pop
int
pop
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
adc
pop
push
(bad)
push
fist
movups
sub
int3
test
lods
out
and
xchg
or
test
loope
mov
lods
mov
into
call
inc
jnp
sub
hlt
ins
mov
adc
cmps
int3
ror
xor
jp
stc
sub
rol
sbb
int3
fisub
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
push
mov
sbb
jg
cmp
pop
(bad)
dec
(bad)
xchg
jo
mov
fmul
pusha
scas
sub
int
and
add
inc
dec
das
or
mov
mov
xchg
enter
and
in
ds
out
push
dec
cli
add
pushfw
imul
aaa
rol
adc
sbb
scas
or
bound
cld
sbb
xchg
pop
sub
test
clc
sub
scas
cwde
call
cs
scas
sub
inc
inc
dec
dec
and
pop
mov
inc
push
hlt
sub
or
jmp
dec
int
lods
pop
dec
sbb
add
xor
dec
push
repnz
mov
adc
lea
sub
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
push
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
bnd
fistp
aaa
xchg
pop
sbb
mov
and
pop
imul
movups
cmp
pop
push
cld
xor
scas
xchg
pop
mov
movups
das
and
xor
cdq
xchg
pop
mov
movups
add
pop
push
(bad)
xor
mov
lock
jb
cmp
pop
fld
dec
hlt
push
mov
or
pop
cmps
loopne
popa
(bad)
sar
dec
jnp
sub
hlt
mov
adc
pop
sbb
inc
push
ss
and
fistp
sbb
pop
sub
inc
inc
dec
mov
imul
movups
and
xor
test
pop
mov
movups
sub
pop
push
shl
push
fbld
icebp
out
jb
or
sub
sub
mov
and
xchg
cs
jge
sar
dec
jnp
sub
test
es
xchg
cs
scas
sbb
inc
pop
(bad)
dec
aad
jl
cdq
push
adc
inc
jp
sub
and
fistp
add
cdq
or
cvtps2pd
ficomp
xchg
sub
xchg
xchg
pop
mov
or
lea
fbld
sub
add
int
out
xchg
mov
call
imul
cmp
cmp
call
adc
icebp
out
jb
xor
fwait
lock
inc
xchg
pop
mov
adc
jle
or
mov
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
pop
push
repnz
mov
mov
add
lea
pop
pop
push
repnz
pop
mov
lods
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
repnz
fistp
adc
xor
push
repnz
push
fistp
jbe
add
sbb
shl
lock
enter
movs
xor
xor
mov
pop
mov
movups
sub
pop
push
out
xor
popf
xchg
pop
mov
movups
push
and
xor
(bad)
xchg
pop
mov
movups
das
sub
test
mov
cs
jne
sbb
inc
pop
(bad)
dec
hlt
pop
mov
add
cmp
push
inc
jge
xor
out
sbb
repnz
xchg
or
lods
mov
repnz
movs
lahf
inc
stos
out
aaa
enter
jo
sub
int
and
nop
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
aaa
mov
out
jl
lds
dec
jnp
sub
hlt
push
mov
or
add
loop
arpl
sub
mov
push
xchg
or
sbb
fiadd
push
sub
mov
and
xchg
or
mov
fldlg2
dec
hlt
pusha
mov
xor
lea
aaa
jge
sub
aas
outs
lahf
inc
imul
pop
push
push
push
repnz
mov
sub
jb
push
pop
ds
jnp
das
pop
shl
nop
cs
test
in
cmp
movs
cwde
data16
lock
xchg
cs
(bad)
fdiv
push
dec
sti
cmp
mov
mov
sbb
adc
adc
repnz
fidivr
adc
xor
je
repz
stos
sahf
inc
mov
cmp
and
icebp
xor
mov
push
sub
add
cmp
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
jp
dec
sub
inc
imul
aaa
fs
out
ins
loope
and
xor
mov
pop
mov
movups
daa
and
xor
mov
movups
sbb
pop
push
fbstp
push
fisttp
movups
add
mov
shr
(bad)
call
ds
jnp
sub
hlt
pop
mov
adc
cmps
fmul
jb
out
push
jnp
sub
hlt
jno
push
cdq
sub
jns
add
ds
pop
retf
and
push
lods
stc
add
gs
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
fwait
mov
hlt
dec
mov
adc
add
(bad)
fdiv
ja
in
sub
mov
push
cmp
sbb
ds
scas
or
mov
jmp
xchg
cs
jbe
fidivr
mov
sbb
mov
adc
pop
fbld
aam
mov
mov
adc
mov
repnz
mov
add
(bad)
xchg
mov
(bad)
inc
pop
stc
sub
rol
cmp
sbb
sub
int
and
adc
push
mov
shl
fidiv
add
sub
in
sub
inc
imul
cmps
xor
dec
push
repnz
mov
adc
lea
cs
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
pop
mov
sbb
lea
ds
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
xor
ret
das
dec
sbb
push
fwait
or
add
ficomp
std
xor
mov
movups
and
pop
push
in
push
fbld
movups
adc
pop
push
fdiv
push
fist
movups
or
pop
push
into
xor
cmps
cwde
xchg
sbb
out
xchg
adc
pushf
mov
in
mov
lods
out
and
xchg
sbb
or
retf
xchg
inc
inc
mov
aad
gs
(bad)
aaa
ja
in
aas
jge
cmps
mov
adc
cmp
mov
test
mov
cli
out
ins
loope
and
xor
mov
pop
mov
movups
daa
and
xor
mov
movups
sub
test
lods
cli
and
xchg
cs
jae
fidivr
dec
jnp
sub
hlt
pop
mov
add
add
jmp
out
push
dec
cld
push
cmp
cmp
jnp
sub
mov
and
fwait
cs
je
call
xor
push
lods
in
add
int
out
xchg
cmps
xor
gs
jbe
fistp
sbb
mov
sbb
or
bound
enter
push
push
fs
xor
sub
adc
xchg
or
mov
hlt
push
(bad)
push
scas
call
call
push
repnz
mov
or
sbb
lock
mov
adc
nop
push
push
fs
jecxz
scas
or
xchg
push
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
pop
push
repnz
mov
inc
adc
xor
push
repnz
mov
add
lea
inc
pop
push
repnz
push
fistp
adc
xor
repnz
mov
push
lea
test
push
repnz
mov
adc
lea
mov
cmp
mov
add
cmc
cli
out
xchg
mov
or
cdq
pop
mov
pop
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
pop
mov
and
lea
adc
push
repnz
rol
or
pop
cmp
mov
stos
mov
cmc
xchg
or
mov
fldl2e
dec
lds
fimul
cdq
fdiv
sbb
mov
repnz
mov
loope
jb
punpcklwd
int3
push
call
adc
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
in
sub
or
dec
cld
adc
jnp
cmp
dec
(bad)
sbb
stos
enter
cs
jne
sbb
inc
pop
jmp
movs
enter
test
ja
in
sbb
mov
fcmovnb
add
aas
outs
mov
imul
cmp
cmp
dec
dec
add
inc
imul
adc
inc
adc
xor
pop
push
repnz
pop
out
push
dec
std
and
xchg
or
jb
or
mov
sub
add
test
sbb
inc
pop
out
cmp
test
xor
adc
xor
mov
or
int
dec
pusha
div
pop
fdivr
push
cdq
push
adc
pop
push
repnz
mov
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
sub
lea
popf
pop
push
repnz
mov
movups
and
pop
fistp
sbb
movs
xor
dec
push
repnz
mov
femms
lea
and
repnz
mov
wbinvd
sahf
add
ss
int
inc
inc
fld
dec
into
xchg
gs
mov
out
push
jl
aam
push
jnp
sub
mov
and
xchg
les
sbb
dec
pop
in
aas
dec
int3
mov
lock
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
out
and
mov
sbb
js
push
inc
push
sub
cmp
mov
and
xchg
or
jns
or
mov
sub
loope
xchg
sti
jge
aad
ja
div
aaa
rcl
adc
and
xor
mov
pop
mov
out
jb
cmp
retf
and
push
cdq
adc
sbb
int3
fisub
fild
cmp
sbb
xor
mov
test
sar
and
ins
mov
xor
div
fistp
jmp
add
and
push
repnz
mov
nop
and
fistp
clc
lea
and
repnz
mov
psubw
xor
jmp
fistp
fmul
xor
pop
jbe
sub
pop
cdq
jno
push
xchg
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
and
or
int3
test
mov
push
fnstenv
ja
in
sbb
mov
fimul
popa
(bad)
in
aaa
push
repnz
pop
mul
movups
and
xor
scas
xchg
pop
mov
movups
sub
and
mov
add
js
sbb
mov
out
mov
lods
jmp
mov
test
inc
cdq
adc
cmp
cmp
dec
(bad)
dec
(bad)
xchg
jbe
cdq
cmp
jp
add
ds
inc
test
je
loopne
xchg
pop
and
xor
xchg
xchg
pop
xchg
jmp
and
xor
rcl
xor
mov
mov
xor
dec
push
repnz
mov
adc
lea
dec
pop
push
repnz
mov
movups
xor
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
mov
scas
adc
xor
push
repnz
mov
jecxz
lea
aam
push
repnz
mov
or
xchg
or
mov
stos
inc
imul
add
sub
push
fistp
adc
xor
pop
push
repnz
mov
sub
lea
push
pop
push
repnz
mov
cmp
pusha
pop
ds
jnp
sub
hlt
push
mov
or
cmp
cmp
jnp
das
jge
mov
add
pop
sbb
inc
imul
push
fistp
adc
mov
out
xchg
pop
sub
inc
pop
retf
and
sbb
add
and
xor
mov
movups
xor
pop
jae
xor
movs
cwde
pushw
sbb
cmp
(bad)
dec
retf
xchg
jg
mov
cs
sbb
inc
jnp
das
pop
les
lock
lock
and
fisttp
push
mov
stc
and
xchg
cs
mov
jbe
and
mov
test
or
push
fbld
shl
sbb
add
sub
test
lods
call
das
xchg
pop
int
push
jnp
and
inc
mov
cli
push
inc
push
das
sub
stc
sub
mov
das
and
and
xor
xchg
mov
add
cmp
xor
mov
push
push
adc
jnp
ja
pop
push
repnz
mov
not
lea
and
push
repnz
push
pop
mov
sbb
lea
repz
push
repnz
mov
adc
lea
and
or
mov
mov
lea
out
pop
push
repnz
mov
loop
lea
ds
pop
in
daa
inc
fist
movups
cmp
pop
push
cld
xor
scas
xchg
pop
mov
movups
das
and
xor
cwde
xchg
pop
mov
movups
and
int3
test
movs
enter
cs
jne
sbb
inc
inc
(bad)
inc
hlt
pop
mov
add
push
sbb
mov
sbb
dec
jnp
sub
mov
out
xor
loope
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
repnz
jb
push
jnp
(bad)
ds
jnp
das
jge
mov
sbb
inc
inc
sub
outs
add
imul
cmc
or
sub
mov
sti
sbb
mov
outs
push
xchg
pop
push
imul
dec
leave
scas
nop
sbb
out
xchg
cs
test
xor
test
inc
xor
add
(bad)
pop
int
inc
pop
in
daa
inc
fild
cmp
jne
and
test
mov
cli
out
push
push
shl
push
fistp
cmp
ja
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
xacquire
mov
mov
lea
cs
push
repnz
push
fistp
adc
xor
jp
in
dec
shr
dec
sbb
xor
push
push
repnz
mov
wbinvd
lea
and
repnz
xchg
inc
mov
cli
out
xchg
mov
fld
dec
(bad)
xchg
jp
mov
loop
popa
(bad)
sar
ja
in
aas
jge
ins
stc
pop
mov
sub
sahf
add
and
fidiv
stc
xor
fidivr
adc
xor
pop
inc
repnz
mov
or
scas
cli
out
xchg
mov
fld
dec
hlt
push
mov
adc
cmps
loop
addr16
hlt
int3
test
scas
enter
call
or
fstp
sbb
mov
out
xchg
pop
sbb
lods
or
xchg
push
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
xor
xor
data16
sbb
out
xchg
push
sbb
mov
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
ds
pop
retf
and
jne
cld
sbb
jle
push
inc
dec
sub
and
mov
sbb
push
sbb
inc
jg
sub
jge
mov
sbb
inc
sbb
arpl
dec
pop
push
hlt
adc
push
mov
out
jb
sbb
sbb
call
adc
cmp
pop
push
loopne
push
fild
movups
adc
pop
push
in
and
or
dec
stc
and
fwait
cs
scas
sbb
inc
dec
(bad)
dec
hlt
push
xor
push
cmp
cmp
pop
retf
and
push
cdq
adc
cmp
sbb
sub
mov
(bad)
sbb
cdq
cmp
sbb
xor
jp
in
outs
mov
imul
push
sbb
mov
mov
loop
adc
cs
test
test
adc
cmp
cmp
mov
icebp
out
jb
cmp
dec
jmp
imul
pop
adc
adc
pop
push
repnz
jmp
sbb
mov
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
inc
adc
xor
pop
push
repnz
mov
movups
xor
jp
in
jge
mov
lock
jb
push
movs
xor
pop
push
repnz
xchg
push
mov
lsl
xor
inc
push
repnz
mov
rdmsr
lea
and
repnz
mov
invd
cmp
cmp
sub
cdq
jne
sti
and
xchg
or
cmp
ror
mov
cmp
cmp
cmp
inc
fsin
xchg
sti
add
xchg
or
xchg
pop
int
inc
pop
in
sub
dec
push
dec
in
sbb
xor
push
push
repnz
mov
clts
lea
and
repnz
mov
aaa
aam
cli
out
jne
sbb
inc
pop
fld
dec
aam
jp
cdq
or
sbb
(bad)
sar
dec
jnp
sub
hlt
mov
cli
add
adc
out
xchg
mov
stc
sbb
cdq
or
cmp
cmp
pop
(bad)
xchg
clc
add
jae
or
scas
or
scas
pop
mul
movups
cs
test
lods
out
add
xchg
or
and
fiadd
push
sub
lahf
inc
stos
out
aaa
sub
out
jb
ret
cmp
clc
cmp
mov
ja
sbb
adc
adc
pop
push
repnz
test
sbb
pushfw
cmp
mov
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
stos
adc
xor
repnz
push
fistp
adc
xor
push
repnz
pop
mov
xor
lea
icebp
sub
repnz
data16
sbb
out
xchg
or
mov
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
ds
pop
retf
and
dec
cdq
adc
push
arpl
sbb
hlt
pop
mov
add
add
sub
and
mov
add
inc
arpl
push
pop
push
hlt
adc
inc
sbb
sbb
or
mov
xlat
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
dec
(bad)
aas
outs
addr16
imul
icebp
or
sub
cmp
mov
and
xchg
cs
jo
sub
test
cdq
adc
cmp
cmp
dec
(bad)
dec
hlt
pop
mov
xor
lea
aaa
jo
and
inc
pop
retf
and
pop
sar
push
dec
enter
movs
cmp
pop
push
in
sub
out
push
dec
cld
sbb
popa
mov
or
adc
sbb
pop
sub
scas
dec
clc
sub
rol
sbb
int
pop
dec
in
imul
stc
add
push
test
fisub
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
not
lea
ins
pop
push
repnz
pop
mov
lock
xor
pop
push
repnz
pop
mov
jmp
imul
push
fistp
adc
xor
jp
out
jge
stos
cwde
data16
sbb
out
mov
push
xor
pop
push
repnz
mov
sbb
lea
cmp
sub
pop
mov
sub
lea
or
sbb
fistp
sbb
pop
sub
and
mov
and
xchg
pop
cmp
dec
(bad)
dec
(bad)
xchg
dec
dec
cdq
cmp
pop
sbb
inc
jbe
cs
jmp
popf
bswap
xchg
pop
mov
push
sbb
int
inc
pop
in
outs
sub
mov
lea
sub
push
fistp
adc
xor
push
repnz
mov
leave
out
jb
push
arpl
out
sbb
mov
cs
jo
sar
dec
jnp
cs
enter
dec
sbb
push
cmps
lock
popa
pop
ds
jnp
sub
hlt
push
mov
cld
add
inc
jp
or
fstp
sbb
pop
and
fidivr
adc
int3
fisub
lds
icebp
out
jb
cmp
inc
dec
pop
and
inc
cdq
adc
pushfw
add
mov
fistp
adc
sbb
push
inc
stc
and
out
push
dec
jecxz
add
xor
dec
push
repnz
mov
das
adc
xor
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
adc
xor
fistp
sub
cli
out
xchg
mov
or
fwait
pop
mov
pop
adc
xor
pop
push
repnz
mov
adc
lea
add
adc
pop
mov
and
lea
adc
push
fistp
sbb
cmp
aaa
ja
in
and
mov
push
cmp
add
sub
sbb
scas
enter
les
loopne
inc
jnp
sub
hlt
jbe
inc
cdq
and
rcr
xor
jp
stc
sub
rol
sbb
int3
fisub
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
pop
pop
push
repnz
pop
out
push
dec
sti
and
xchg
push
cmp
dec
out
mov
lods
(bad)
and
xchg
push
cmp
dec
fldpi
dec
shl
gs
jb
or
lods
dec
(bad)
dec
rcl
jmp
inc
inc
sub
sbb
mov
adc
xchg
sbb
fisub
rol
pop
add
jne
imul
xor
mov
femms
call
inc
inc
fld
dec
hlt
dec
mov
cld
add
pop
and
test
fld
dec
aad
lahf
inc
mov
cli
out
ja
shl
mov
mov
repnz
jb
adc
cmp
jl
lock
pop
xchg
pop
mov
or
push
push
rol
shl
adc
sub
cmp
mov
mov
xor
jle
repnz
mov
push
mov
cmovp
xor
pop
push
repnz
fistp
dec
lea
and
repnz
mov
(bad)
xchg
sbb
pop
push
repnz
mov
bndstx
xor
dec
push
repnz
mov
movs
or
sub
sbb
scas
enter
fs
and
push
repnz
push
fistp
cmp
sbb
or
scas
or
sahf
dec
mov
cli
adc
xor
pop
jo
xor
xchg
add
or
xor
pop
push
repnz
fistp
push
lea
and
repnz
mov
xadd
add
cmp
mov
push
fistp
adc
xor
push
repnz
mov
sbb
ja
cmp
jnp
cs
ins
out
mov
sub
sub
inc
pushf
fcomp
mov
out
mov
rdpmc
lea
fs
push
repnz
fistp
jo
add
and
push
repnz
mov
(bad)
lea
and
xor
mov
add
inc
add
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
xchg
xor
sbb
cmp
cmp
jnp
sub
hlt
push
call
inc
adc
xor
pop
push
repnz
mov
fwait
clts
pushfw
inc
fisub
lds
lock
jb
adc
ret
push
rcr
inc
mov
or
call
pop
push
repnz
mov
movups
add
and
xor
mov
movups
adc
adc
inc
pop
cmc
jbe
fistp
push
lea
and
repnz
mov
mov
inc
push
sub
test
fld
dec
hlt
push
inc
sub
or
lock
shl
mov
sysenter
lea
fs
push
repnz
fistp
mov
add
and
repnz
fistp
jno
add
and
repnz
mov
movzx
xor
pop
jbe
cmp
mov
dec
sbb
xor
pop
push
repnz
xchg
push
mov
sidtd
xor
dec
push
repnz
mov
add
push
sub
test
fld
dec
hlt
push
(bad)
jne
hlt
and
xchg
cs
mov
jbe
cmp
mov
cmp
lock
mov
jo
xchg
imul
xor
mov
aaa
pop
jb
out
jl
lds
dec
sti
cmp
inc
imul
sbb
popa
pushf
push
fisub
call
xchg
pop
mov
stos
adc
xor
jbe
clc
sub
aam
and
add
mov
and
mov
movups
xor
or
fistp
sahf
lea
and
push
repnz
fistp
sbb
xor
es
repnz
xchg
cld
add
popa
pop
xor
mov
movups
xor
pop
inc
repnz
mov
movups
or
dec
fxch
inc
hlt
dec
(bad)
jne
cli
and
xchg
push
cmp
jmp
mov
adc
xchg
push
sub
int
pop
push
xchg
sub
xchg
xchg
pop
mov
pop
adc
or
scas
or
sahf
inc
mov
cli
or
sub
inc
pop
retf
and
pop
xchg
pop
or
lea
or
push
repnz
push
mov
lock
jb
adc
xor
dec
push
repnz
test
jmp
sbb
xor
pop
push
repnz
mov
cmovne
xor
push
repnz
fistp
jbe
add
sub
push
fistp
push
lea
and
repnz
mov
(bad)
jno
enter
in
mov
cdq
or
adc
mov
mov
push
fistp
sbb
pop
and
inc
pop
retf
and
jne
clc
add
xchg
pop
int
pop
push
imul
rol
inc
mov
or
xchg
or
das
lods
xor
pop
adc
xor
mov
movups
xor
pop
push
repnz
mov
movups
adc
adc
dec
pop
cmc
jbe
fistp
push
lea
and
repnz
mov
mov
inc
push
sub
test
fld
inc
hlt
push
inc
sub
or
lock
int3
mov
out
mov
sysenter
lea
fs
push
repnz
fistp
jne
add
and
push
repnz
mov
cmovne
xor
push
push
repnz
mov
nop
xor
pop
jbe
cmp
pop
mov
push
or
adc
xor
pop
push
repnz
mov
movups
xor
pop
dec
repnz
mov
and
xchg
cs
pop
ds
jnp
sub
hlt
push
xor
and
nop
div
sbb
mov
repnz
stos
sahf
inc
mov
cli
out
outs
mov
mov
push
fistp
sbb
sub
stos
inc
clc
sub
aam
stos
mov
jns
sbb
cmp
outs
scas
or
dec
pop
mov
das
ror
and
in
dec
shl
lock
xor
jle
repnz
mov
sbb
add
and
xor
mov
movups
add
and
xor
mov
movups
add
cmp
cmp
pop
mov
movups
xor
pop
pop
repnz
mov
movups
sbb
inc
jnp
sub
cmps
mov
or
sub
push
repnz
mov
aaa
outs
jb
out
je
lds
push
dec
dec
and
cdq
push
sbb
xchg
or
or
push
in
or
xchg
pop
mov
adc
inc
push
push
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
or
cmps
pop
sbb
aaa
and
xor
mov
movups
and
pop
push
jmp
jge
movs
mov
or
sub
mov
mov
push
fstp
lock
lea
and
repnz
mov
dec
push
lea
and
push
repnz
mov
nop
xor
out
repnz
fistp
push
lea
and
push
repnz
fistp
jge
add
and
jmp
jge
mov
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
int
inc
jnp
das
jge
stos
mov
or
das
or
rcl
movhps
cmp
push
scas
or
mov
jmp
or
push
xor
pop
aam
mov
sbb
and
inc
pop
stc
or
inc
imul
cmp
jne
cmp
dec
scas
or
mov
mov
das
and
and
lock
mov
movhps
cmp
mov
or
xchg
mov
jecxz
xor
add
fs
push
repnz
fistp
sbb
xor
or
fistp
dec
lea
and
push
repnz
mov
movups
xor
pop
jbe
cmp
movs
lahf
jne
in
sbb
xor
pop
push
repnz
mov
str
xor
dec
push
repnz
xchg
inc
mov
dec
arpl
in
cmps
leave
xchg
jns
cdq
or
push
cmp
push
aam
pop
shl
out
mov
jo
call
pop
fistp
pop
jb
out
jbe
lds
push
dec
clc
cmp
inc
imul
sbb
popa
pushf
push
fisub
fnstsw
adc
sbb
dec
clc
cmp
inc
imul
add
and
jge
mov
setnp
xor
cmp
xor
fistp
mov
add
and
xor
xchg
push
mov
setno
xor
retf
push
repnz
xchg
hlt
add
xor
fs
push
repnz
mov
bndldx
xor
dec
push
repnz
mov
(bad)
lea
scas
inc
pop
fxch
dec
hlt
dec
lea
cld
add
bound
sbb
sub
sbb
bound
push
pusha
mov
or
xchg
aas
lods
std
push
push
mov
and
cmp
inc
imul
sbb
popa
pushf
push
fisub
enter
mov
cli
adc
sub
mov
dec
mov
sbb
and
div
ja
mov
push
or
movs
xor
ds
repnz
mov
(bad)
lea
and
push
repnz
mov
movq
xor
pop
push
repnz
mov
or
adc
xor
pop
push
repnz
mov
movups
xor
pop
inc
(bad)
sbb
leave
xchg
outs
dec
cdq
adc
cmp
cmp
jnp
cmp
(bad)
jmp
push
adc
xor
push
cmps
mov
sbb
int
ja
in
dec
(bad)
mov
cmp
sbb
adc
xor
jl
icebp
xor
das
xchg
pop
mov
sbb
inc
sbb
xor
pop
push
repnz
fistp
adc
xor
push
repnz
pop
mov
fild
pop
dec
mov
pop
adc
mov
movups
aas
and
xor
movs
cdq
jne
cli
and
nop
cs
pop
cmp
out
sbb
mov
adc
lahf
cmp
int3
fisub
out
mov
sysenter
lea
fs
push
repnz
fistp
jae
add
and
repnz
fistp
inc
lea
and
push
repnz
fistp
cdq
lea
and
in
cmp
pop
mov
push
or
adc
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
and
xchg
cs
pop
cmp
jmp
mov
loop
data16
shl
and
xor
push
mov
adc
mov
repnz
mov
add
sar
xchg
mov
(bad)
inc
pop
call
imul
pop
sbb
int
mov
fistp
cmp
and
inc
pop
retf
and
dec
and
repz
xor
cmc
jbe
fistp
sbb
xor
aam
repnz
mov
jae
movs
xor
ds
repnz
mov
nop
xor
mov
repnz
stos
lahf
jne
std
add
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
ud2
xchg
lahf
jne
sbb
inc
jnp
sub
mov
and
xchg
cs
je
aam
ja
and
mov
add
mov
out
xchg
pop
and
fidivr
adc
int
inc
jnp
sub
lahf
data16
out
call
push
push
mov
je
lea
cmp
sub
int3
test
and
stc
lea
xor
cmc
jbe
fistp
or
and
xor
mov
seta
xor
or
xor
fistp
jne
add
and
stos
lahf
jne
cld
add
cmps
mov
das
lods
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
sbb
inc
pop
fld
dec
hlt
dec
mov
or
cmp
sbb
and
sbb
mov
adc
xchg
push
sub
pop
int
pop
push
xchg
sub
xchg
xchg
pop
mov
or
lea
fisub
leave
mov
push
mov
cmp
push
mov
rdtsc
fiadd
adc
das
and
sub
lods
inc
dec
sbb
add
xor
jle
repnz
mov
push
mov
cmovs
xor
xor
xor
fistp
jae
add
and
push
repnz
mov
cvtps2pi
sub
push
fistp
sbb
xor
push
push
repnz
xchg
dec
mov
femms
xchg
cmp
mov
add
sahf
jne
jmp
xchg
cs
outs
cmps
push
imul
xor
mov
stos
adc
dec
fisub
les
lock
jb
cmp
push
mov
rdtsc
ins
add
and
das
pop
(bad)
stc
popf
pop
mov
dec
adc
xor
push
repnz
mov
inc
adc
xor
push
repnz
mov
or
cmps
pop
sbb
xor
pop
push
div
push
fistp
movups
and
pop
push
loope
push
fild
and
xchg
cs
pop
aaa
ja
in
mov
xor
movhps
sbb
xor
xor
pop
mov
mov
xor
jns
repnz
mov
ud1
xor
push
push
repnz
fistp
sbb
xor
repnz
repnz
fistp
lea
and
fistp
mov
movs
xor
mov
repnz
cmps
lahf
jne
cli
add
and
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
getsec
lea
and
stc
or
inc
imul
stc
push
sub
iret
inc
pop
(bad)
dec
rcl
adc
inc
js
or
pop
mov
add
xchg
pop
int
pop
xor
inc
setp
movups
cmp
pop
push
out
cmp
inc
imul
cs
pop
cmp
stc
or
inc
imul
push
cmp
cmp
push
mov
rdtsc
adc
push
cmp
xor
mov
or
imul
push
aad
mov
aaa
(bad)
out
jns
and
fistp
sbb
add
and
push
repnz
mov
bndstx
xor
cmp
fistp
adc
xor
daa
push
repnz
fistp
pop
stos
pop
sbb
sub
hlt
jbe
fistp
push
lea
and
repnz
mov
sysret
lea
and
fnstcw
jne
std
and
xchg
cs
(bad)
fdivr
mov
mov
mov
mov
pop
pusha
mov
or
cmc
inc
jecxz
dec
adc
xor
inc
pop
stc
or
and
dec
cdq
adc
sbb
int
mov
aad
sahf
push
mov
lock
jb
adc
xor
pop
jo
xor
xchg
mov
in
pop
xchg
sbb
sub
mov
out
mov
sysenter
lea
fs
push
repnz
mov
sidtd
xor
int
repnz
fistp
mov
xor
cmc
push
repnz
fistp
mov
movs
xor
push
push
repnz
xchg
cld
add
cmps
mov
popa
scas
sbb
push
fistp
movups
and
pop
push
out
push
fbld
adc
push
and
cmp
inc
imul
cs
lods
sbb
inc
jnp
sub
mov
push
cmp
inc
jns
sub
mov
mov
fistp
add
sar
xchg
mov
stos
jbe
fistp
sbb
or
mov
sub
pop
sbb
sub
test
aad
lahf
cmps
sbb
out
(bad)
and
add
push
repnz
mov
das
iret
lea
and
xor
xchg
adc
sti
jae
out
jns
aaa
and
xor
test
jmp
sbb
xor
pop
push
repnz
xchg
fs
cmovne
xor
add
xor
fistp
inc
lea
sub
push
fistp
push
lea
and
repnz
mov
invd
sub
aaa
ja
out
sbb
cdq
or
adc
add
fistp
push
sbb
pop
sub
inc
pop
retf
and
jne
cmc
add
xchg
pop
int
pop
push
ror
push
fistp
cmp
pop
adc
sub
adc
mov
movups
jae
pop
push
cmc
xor
mov
movups
loop
pop
push
hlt
adc
sbb
add
and
xor
mov
movups
sbb
dec
jnp
cs
movs
mov
ror
adc
sub
retf
mov
and
jl
xor
inc
pop
cli
jbe
fistp
pop
lea
and
push
repnz
mov
cvtpi2ps
xor
or
xor
fistp
or
xor
pop
push
repnz
mov
bndstx
xor
dec
push
repnz
mov
test
inc
push
sub
test
clc
sbb
cdq
or
adc
loope
and
xor
movs
cwde
iretw
sbb
out
xchg
or
pushf
mov
or
and
sbb
pop
xor
jl
icebp
xor
adc
lea
cmp
cmp
repnz
mov
(bad)
lea
and
xor
mov
movups
xor
pop
jbe
sub
stc
xchg
pop
mov
or
lea
sub
ds
fistp
sbb
mov
inc
pop
and
(bad)
dec
hlt
dec
(bad)
jne
xor
jge
sbb
test
and
test
cmc
jbe
fistp
mov
add
and
push
repnz
fistp
sbb
xor
daa
push
repnz
fistp
inc
lea
and
mov
add
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
femms
xchg
cmp
mov
fld
dec
hlt
dec
(bad)
jne
hlt
and
fwait
cs
jo
aad
ja
and
mov
cli
out
xchg
mov
stos
jbe
fistp
jbe
int
push
jnp
and
sbb
sbb
or
cmp
push
or
xchg
pop
mov
mov
lea
daa
jbe
clc
cs
out
imul
push
adc
push
repnz
mov
seta
xor
pop
push
repnz
fistp
ins
lea
and
push
repnz
fistp
jne
add
and
push
repnz
xchg
cld
add
cmps
mov
xchg
pop
adc
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
sub
sub
hlt
inc
mov
cli
and
xchg
or
test
sbb
jge
movs
mov
adc
cmp
ds
or
mov
jmp
push
adc
xor
push
push
stos
mov
sbb
das
or
out
imul
add
and
xor
xchg
adc
or
out
jns
xor
inc
push
repnz
mov
dec
push
lea
and
push
repnz
fistp
mov
xor
push
push
repnz
fistp
popa
lea
and
repnz
fistp
stos
lea
and
out
cmp
mov
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
int
mov
rcl
loopne
sub
ds
jnp
sub
sub
adc
sub
stc
or
and
pop
mov
adc
aam
adc
xor
pop
push
repnz
mov
lock
jb
cmp
pop
in
cmp
cwde
imul
cs
scas
sub
int3
test
mov
rdtsc
add
adc
dec
and
xor
mov
or
push
pop
in
cmp
push
push
dec
jecxz
add
xor
jle
repnz
mov
sbb
add
and
xor
mov
movups
add
and
xor
mov
movups
(bad)
daa
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
and
xchg
cs
pop
cmp
call
jp
cdq
or
adc
loope
and
xor
mov
and
call
mov
leave
mov
push
mov
adc
xor
pop
jo
xor
xchg
mov
and
bound
xor
mov
movups
xor
sbb
fistp
rol
adc
ss
push
mov
push
fistp
adc
xor
push
repnz
mov
sbb
ja
cmp
jnp
sub
ins
push
pop
mov
sub
mov
fcomp
mov
out
mov
sysenter
lea
fs
push
repnz
mov
jno
movs
xor
daa
push
repnz
mov
pshufw
and
push
repnz
mov
setne
xor
pop
jbe
cmp
mov
dec
sbb
xor
pop
push
repnz
xchg
push
mov
sidtd
xor
inc
push
repnz
mov
or
push
das
or
aam
jns
mov
jecxz
inc
inc
loop
pop
push
hlt
adc
data16
sbb
out
mov
jo
imul
pop
push
repnz
mov
inc
out
jb
push
pop
aaa
push
dec
stc
or
inc
imul
pop
sbb
int
pop
push
ror
push
fistp
cmp
pop
adc
sub
retf
and
dec
and
dec
xor
ja
cmc
jbe
fistp
outs
lea
and
push
repnz
fistp
cwde
lea
and
push
repnz
fistp
pop
lea
and
stos
lahf
jne
stc
add
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
(bad)
xchg
lahf
jne
sbb
inc
jnp
sub
hlt
dec
(bad)
jne
cli
and
xchg
or
cmp
sbb
mov
sbb
xchg
bndldx
int
mov
rcl
sbb
add
sbb
scas
or
mov
add
mov
out
xchg
mov
in
cmp
mov
dec
loope
adc
movs
adc
pop
push
repnz
mov
adc
xchg
and
lock
fistp
cmp
xor
js
repnz
mov
sysexit
lea
and
xor
mov
xadd
add
sub
div
aaa
shl
adc
cmp
loope
fxch
dec
aad
and
sub
ja
sbb
int3
fistp
push
xchg
push
ins
movs
xor
jno
repnz
mov
rdpmc
lea
and
xor
fisttp
adc
xor
push
bnd
fistp
sbb
and
xor
cld
mov
add
enter
movs
xor
xor
mov
movups
cmp
xor
mov
adc
cmps
xor
push
repnz
sti
jnp
jecxz
cmp
xor
jbe
xchg
int3
test
and
js
add
xor
hlt
jbe
fistp
and
xor
jnp
repnz
xchg
addr16
(bad)
lea
and
repnz
xchg
stc
add
or
repnz
mov
movups
sbb
dec
jnp
sub
xchg
jbe
jecxz
sbb
xor
jbe
clc
sbb
fistp
inc
lea
xor
hlt
jbe
fistp
xor
movs
xor
push
push
repnz
mov
bndstx
xor
mov
repnz
mov
or
xchg
push
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
pop
fsubr
pop
hlt
pop
xchg
dec
and
inc
lea
xor
hlt
jbe
fistp
adc
xor
pop
push
repnz
xchg
jne
jecxz
adc
xor
mov
repnz
cmps
sahf
jne
out
jo
dec
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
pop
fsubr
pop
hlt
pop
xchg
dec
and
jbe
add
xor
hlt
jbe
fistp
or
xor
jge
repnz
xchg
dec
mov
unpcklps
ja
pop
push
repnz
push
fistp
cmp
sbb
xor
je
repnz
lahf
pop
mul
movups
xor
pop
push
cmc
xor
mov
movups
xor
jbe
imul
out
mov
getsec
lea
fs
push
repnz
xchg
jne
jecxz
sub
xor
push
push
repnz
mov
(bad)
add
and
cmps
sahf
jne
out
jo
das
dec
das
cmps
xor
pop
push
repnz
mov
and
nop
cs
pop
cmp
pop
xor
repz
pusha
cmp
add
or
push
repnz
mov
getsec
lea
fs
push
repnz
mov
bndstx
xor
jge
repnz
mov
movups
xor
pop
jbe
cmp
mov
pop
sar
add
add
push
and
cmp
mov
and
pop
adc
push
jp
cmp
mov
vmread
xor
inc
pop
hlt
jbe
fistp
adc
xor
inc
push
repnz
mov
nop
imul
xor
mov
ror
dec
pusha
(bad)
cmc
and
popf
sbb
fbstp
dec
adc
add
and
xor
mov
movhps
xor
pop
jbe
sbb
fistp
lea
xor
hlt
jbe
fistp
jge
xor
inc
push
repnz
mov
unpckhps
ja
pop
push
repnz
push
fistp
sbb
sub
ja
lock
data16
push
mov
and
xor
mov
movups
xor
pop
and
call
xchg
cmp
movs
xor
dec
pusha
lock
fistp
cmp
xor
jl
repnz
xchg
jle
jecxz
xor
movs
xor
pop
push
repnz
mov
xadd
add
sub
div
aaa
shl
sbb
add
or
dec
fxch
inc
aad
and
movups
cdq
and
lock
fistp
cmp
xor
push
push
repnz
mov
movups
xor
js
repnz
mov
xadd
and
ja
div
aaa
rcl
adc
cmp
loope
fxch
inc
aad
and
movups
cdq
and
lock
fistp
cmp
xor
pop
push
repnz
mov
mov
add
and
repnz
xchg
pop
mov
(bad)
lea
and
out
cmp
mov
push
push
pop
and
xor
mov
jmp
enter
repnz
push
test
adc
xor
xor
xor
mov
dec
pop
lea
and
repnz
mov
prefetchw
xor
push
push
cld
xor
sbb
add
or
aad
push
pop
mov
or
mov
adc
xchg
xor
push
jp
cmp
mov
movups
xor
xor
mov
xchg
adc
mov
xor
fistp
cmp
xor
jo
repnz
mov
bndstx
xor
js
repnz
xchg
jle
jecxz
rcl
adc
sub
div
aaa
rcr
adc
cmp
loope
fxch
dec
aad
and
cmp
lea
cmp
sbb
aas
fistp
cmp
xor
push
push
repnz
mov
(bad)
add
and
repnz
mov
movaps
xor
pop
jbe
cmp
mov
push
push
pop
and
xor
mov
jmp
enter
repnz
pusha
(bad)
cdq
and
push
mov
add
rep
xor
dec
pusha
lock
fistp
or
xor
dec
push
repnz
mov
movups
xor
pop
push
repnz
fisttp
adc
and
ja
call
mov
adc
xor
xor
mov
movhps
xor
pop
push
repnz
xchg
leave
and
lea
and
push
repnz
mov
dec
pop
lea
and
repnz
xchg
dec
mov
ud2
lea
and
xchg
sub
xchg
xchg
pop
mov
or
lea
cmp
in
jge
mov
bndstx
aaa
and
xor
mov
movups
xor
lods
push
fistp
lar
xor
jp
repnz
mov
sysexit
lea
and
repnz
mov
movups
xor
push
push
repnz
xchg
inc
or
repnz
mov
and
xchg
cs
scas
sbb
push
aad
mov
lar
xor
jns
repnz
mov
ud2
lea
and
repnz
mov
ud2
lea
outs
or
nop
pop
mov
adc
inc
pop
sub
ja
lock
loop
xchg
push
cwde
cmc
add
enter
movs
xor
pop
push
repnz
mov
movups
loop
pop
push
hlt
adc
dec
sub
jne
add
xor
hlt
jbe
fistp
xor
xor
fs
repnz
mov
getsec
lea
and
cmps
sahf
jne
in
push
pop
test
std
ja
pop
push
repnz
push
fistp
cmp
sbb
xor
pop
push
cld
aaa
pop
fidiv
xor
lea
cmp
sbb
aas
fistp
cmp
xor
outs
push
repnz
xchg
ins
mov
(bad)
add
and
repnz
mov
(bad)
lea
and
out
cmp
mov
push
push
pop
and
xor
mov
jmp
enter
repnz
(bad)
cdq
and
outs
repnz
sti
push
mov
add
rep
xor
dec
pusha
lock
fistp
pop
xchg
push
ins
movs
xor
pop
push
repnz
xchg
inc
mov
sysret
lea
and
xor
fisttp
adc
xor
push
jnp
and
and
loope
push
lea
sbb
xor
mov
movups
xor
pop
push
repnz
pop
xchg
pop
mov
and
jns
xor
xor
mov
dec
sbb
xor
jle
repnz
xchg
js
jecxz
daa
lea
and
xor
mov
movhps
cmp
push
push
xchg
sub
xchg
xchg
pop
mov
or
lea
cmp
jmp
mov
or
mov
pop
inc
out
and
jmp
and
inc
lea
xor
hlt
jbe
fistp
xor
movs
xor
ja
repnz
xchg
pop
mov
(bad)
add
and
cmps
sahf
jne
out
jo
dec
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
pop
fsubr
pop
hlt
pop
xchg
dec
and
dec
lea
xor
hlt
jbe
fistp
xor
add
and
repnz
mov
wrmsr
lea
and
movs
sahf
jne
in
or
sbb
xor
xor
pop
push
div
push
fbld
and
xchg
(bad)
cmps
xor
pop
cmc
movs
sahf
jne
jecxz
add
xor
jp
repnz
mov
rdtsc
lea
and
xor
mov
sysexit
lea
and
repnz
xchg
inc
or
repnz
mov
and
xchg
cs
scas
sbb
push
aad
mov
lar
xor
jp
repnz
mov
rdtsc
lea
and
xor
mov
bndstx
xor
js
repnz
xchg
clc
add
or
repnz
mov
and
nop
cs
scas
sbb
push
aad
(bad)
push
cdq
dec
lar
xor
jp
repnz
mov
rdtsc
lea
and
repnz
mov
sysexit
lea
and
repnz
xchg
sti
add
or
repnz
mov
and
xchg
cs
scas
sbb
push
aad
mov
lar
xor
jle
repnz
mov
xor
lea
pop
pop
push
repnz
mov
ficom
lea
std
pop
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
ficom
lea
mov
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
push
adc
xor
pop
push
repnz
mov
ret
add
add
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
mov
mov
or
cdq
dec
sbb
punpckhdq
aas
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
xor
lea
bound
jne
fistp
adc
xor
push
repnz
enter
push
adc
xor
push
repnz
push
fistp
adc
xor
push
pop
retf
and
inc
cdq
adc
push
jno
fdivr
jae
sbb
push
cld
push
cmp
or
sub
sub
mov
add
inc
sbb
inc
arpl
adc
movs
mov
test
xchg
sbb
jge
push
mov
adc
sbb
inc
cmp
sub
mov
cmp
sbb
ja
and
inc
mov
jmp
dec
retf
cmp
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
adc
add
fistp
in
jb
push
dec
pop
ds
jnp
sub
hlt
push
xor
cmp
push
aas
inc
inc
sub
add
add
mov
cld
and
pop
sbb
inc
imul
sahf
shl
je
cli
out
jne
sbb
inc
jnp
sub
hlt
push
mov
cld
push
cmp
cmp
dec
(bad)
sbb
enter
fidiv
sbb
inc
inc
fxtract
xchg
xchg
pop
xchg
cld
push
sbb
aas
sbb
or
adc
add
cdq
clc
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
or
mov
hlt
dec
mov
adc
and
fdivr
inc
jnp
sub
hlt
pop
mov
cmp
or
fs
push
int3
test
stos
enter
cs
jne
sbb
inc
pop
(bad)
dec
hlt
pop
mov
adc
cmps
fmul
scas
sub
outs
dec
inc
imul
jmp
inc
dec
sub
mov
(bad)
sbb
cdq
cmp
mov
inc
pop
(bad)
sub
rol
sbb
sub
iret
test
sar
push
push
mov
and
outs
lahf
inc
imul
or
push
test
or
lahf
inc
sub
xor
cli
out
jne
ds
retf
and
push
cdq
or
sbb
or
mov
shr
in
jbe
out
ja
xlat
cmp
stc
sub
shl
hlt
out
jb
adc
data16
ss
fistp
cmp
sub
enter
lahf
inc
cmps
out
adc
cmp
dec
pusha
icebp
xor
mov
push
sub
ja
pop
push
repnz
mov
cdq
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
jecxz
lea
loopne
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
dec
pop
mov
retf
add
add
repnz
push
fistp
adc
xor
fistp
adc
xor
push
repnz
cmps
pop
mov
jmp
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
les
lea
ss
push
repnz
fistp
adc
xor
pop
push
repnz
aas
pop
mov
adc
push
push
repnz
fistp
adc
xor
jp
int
outs
pop
inc
imul
sti
out
xchg
lods
ja
pop
push
repnz
mov
add
lea
ss
push
repnz
mov
sub
push
xor
pop
push
repnz
pop
mov
cmp
lea
pop
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
out
jb
or
sub
adc
mov
dec
cmp
cmp
dec
in
sbb
lods
in
and
xchg
cmp
or
rol
push
fwait
lods
jne
sbb
dec
loop
and
push
mov
sbb
hlt
and
cmp
sbb
inc
aaa
sub
push
jge
mov
sbb
push
push
sub
pop
int
inc
inc
retf
and
jg
mov
out
jb
push
push
int3
int
mov
and
mov
jecxz
pop
stos
sbb
and
into
mov
push
mov
cli
push
das
mov
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
pusha
repnz
mov
movups
xor
pop
adc
xor
mov
add
xchg
clc
out
xchg
mov
sti
sbb
hlt
and
xchg
xor
mov
loopne
mov
mov
and
xchg
inc
cmp
dec
fistp
pushf
shl
push
stos
cs
jne
sbb
dec
shl
repz
jb
or
sub
cs
mov
and
xchg
or
mov
loopne
mov
cmps
mov
rcl
call
dec
int3
xchg
push
inc
mov
cs
mov
xchg
mov
repnz
mov
adc
cmp
push
dec
(bad)
sub
rol
push
xchg
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
sub
push
cwde
mov
push
mov
(bad)
jne
sbb
inc
pop
(bad)
dec
(bad)
xchg
ja
cwde
enter
cs
sbb
inc
adc
loopne
leave
mov
push
mov
cli
push
dec
pop
cmp
mov
lods
enter
cs
sbb
inc
jnp
and
jne
cld
add
xchg
or
pusha
test
or
mov
push
adc
cmps
in
push
popa
(bad)
xlat
ds
jnp
sub
mov
add
pop
adc
mov
sti
repnz
mov
add
sub
cmp
inc
pop
call
lods
iret
dec
sbb
adc
std
ja
pop
push
repnz
mov
pop
adc
or
scas
or
mov
adc
cmp
test
sub
test
mov
cld
add
bound
or
sub
inc
pop
in
cmp
jmp
dec
jmp
call
inc
pop
out
cmp
sahf
push
mov
hlt
out
jb
cmp
jnp
sub
aad
lahf
inc
mov
cli
out
jo
sub
enter
mov
mov
rdtsc
cmps
push
adc
hlt
and
xor
mov
or
push
xor
pop
jo
xor
pushf
and
std
mov
sub
call
lods
xchg
dec
sbb
add
xor
jg
repnz
scas
xchg
dec
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
jns
lea
mov
push
fistp
adc
xor
push
repnz
pop
mov
push
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
pop
sahf
add
jg
xor
je
or
sbb
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
repnz
fld
cmp
ret
ds
jnp
sub
hlt
push
mov
push
adc
in
inc
(bad)
out
ds
sub
jne
cld
das
cmp
or
ja
in
daa
jge
mov
adc
aaa
sbb
inc
adc
and
movs
mov
mov
sbb
leave
mov
add
mov
pop
out
jb
sbb
scas
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jge
xor
scas
xchg
test
out
xchg
cs
mov
rol
(bad)
dec
hlt
push
mov
add
cmp
push
inc
inc
sub
sub
mov
sub
outs
mov
adc
test
inc
cld
add
pusha
sbb
inc
dec
sub
sbb
enter
fld
inc
jno
xor
in
es
movs
sahf
inc
mov
clc
out
xchg
mov
loope
dec
retf
adc
lock
mov
push
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
int3
mov
lock
scas
cs
pop
cmp
in
pop
jge
mov
cmp
add
dec
push
retf
and
push
cdq
adc
sbb
sub
mov
(bad)
xchg
je
mov
add
jg
xor
push
aad
jp
cdq
or
sbb
das
or
fstp
mov
cmps
or
lea
mov
push
fistp
and
int
inc
pop
fld
dec
shr
or
data16
out
xchg
mov
in
and
mov
(bad)
in
jb
or
inc
dec
loope
outs
adc
imul
push
pop
push
sbb
fisub
shr
out
jb
cmp
push
in
es
fld
sbb
sub
mov
sub
push
adc
mul
pop
push
fsubr
not
movups
sub
xor
mov
pop
mov
or
push
add
pop
push
cmc
xor
lock
pop
mov
push
adc
xor
pop
push
cdq
xor
out
pop
mov
or
push
in
and
xor
pop
xchg
pop
mov
push
adc
inc
and
xor
fist
adc
sbb
pop
push
fnsave
push
ffreep
xchg
pop
mov
movups
adc
pop
push
jnp
push
fnstsw
xchg
pop
mov
push
adc
leave
and
xor
lods
xchg
pop
mov
push
adc
pop
and
xor
dec
xchg
pop
mov
push
adc
shl
push
xor
ffreep
xchg
pop
mov
mov
inc
mov
jmp
push
out
imul
add
and
xor
mov
movups
and
xor
mov
movups
xor
pop
repnz
mov
movups
xor
pop
pop
repnz
mov
movups
add
and
xor
mov
movups
sbb
scas
in
sbb
jne
cld
adc
pusha
sbb
inc
dec
sub
adc
mov
adc
push
sbb
inc
jno
or
rcr
push
popf
shl
sbb
dec
(bad)
xchg
and
enter
mov
inc
or
sbb
rcr
shl
adc
aas
push
inc
loope
dec
(bad)
scas
xchg
lock
test
push
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
int3
mov
lock
call
inc
jl
fimul
xchg
jge
cmps
enter
cs
sbb
inc
ja
jmp
enter
fdiv
and
dec
loope
outs
adc
mov
xchg
push
sbb
inc
pop
(bad)
dec
int3
xchg
jbe
mov
cs
ja
in
dec
jnp
and
bt
adc
cmp
sbb
xor
mov
movups
and
xor
mov
movups
xor
lahf
into
test
inc
cld
sbb
jl
xor
ja
in
cmp
mov
and
xchg
sub
xor
jmp
push
out
imul
mov
(bad)
dec
(bad)
xchg
ja
cdq
add
push
cmps
(bad)
jle
jmp
(bad)
scas
xchg
data16
push
lock
xchg
or
test
sbb
jge
mov
out
pop
cmps
fadd
inc
jle
lea
adc
inc
stos
lock
addr16
out
xchg
mov
add
repnz
mov
movhps
xor
pop
push
repnz
mov
adc
xor
je
repnz
test
add
xor
jle
repnz
mov
xor
lea
inc
pop
push
repnz
mov
fcom
lea
jmp
push
fistp
adc
xor
repnz
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
pop
pop
push
bnd
fistp
adc
xor
push
repnz
mov
movs
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
repnz
pop
mov
mov
push
push
repnz
mov
sbb
lea
neg
repnz
push
fistp
adc
xor
pop
push
repnz
mov
fistp
aas
sbb
or
lods
cmps
dec
sbb
sbb
sbb
push
xor
xor
mov
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
movups
sbb
pop
push
shl
fisttp
movups
jo
pop
push
mov
push
fcomip
xchg
pop
mov
movups
and
xor
out
pop
mov
movups
push
and
xor
rcl
lea
sbb
fmul
fisub
cmc
xchg
addr16
mov
cs
jne
sbb
inc
push
xchg
dec
inc
mov
cs
jne
sbb
inc
ja
cld
dec
call
enter
shl
sbb
dec
(bad)
xchg
and
push
adc
cmp
sbb
sub
test
lock
push
mov
sbb
dec
(bad)
xchg
sbb
enter
add
sub
scas
and
inc
mov
cmp
sbb
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jl
xor
mov
movups
adc
cld
bswap
test
lods
in
and
xchg
sub
test
out
mov
nop
mov
iret
xchg
adc
mov
sub
mov
sbb
enter
cs
jne
ds
pop
retf
and
jne
cld
push
cmp
cmp
dec
out
mov
mov
mov
call
inc
dec
fabs
dec
hlt
jae
push
cdq
sub
or
xor
jp
stc
sub
shl
repnz
jb
sbb
ds
pop
retf
and
sbb
add
and
xor
mov
movups
xor
pop
jae
xor
mov
lock
xchg
xor
pushf
mov
(bad)
dec
hlt
xchg
jg
fwait
enter
cs
sbb
inc
inc
fld1
inc
shl
repz
jb
cmp
inc
(bad)
dec
leave
xchg
jge
mov
out
addr16
in
ds
jnp
cs
shr
mov
out
jl
ret
aaa
ja
out
sbb
mov
cs
jne
sbb
inc
jnp
jecxz
fistp
add
sbb
addr16
pop
frstor
shr
jo
cli
out
mov
stos
jbe
fistp
push
test
sub
pop
int
inc
jnp
sub
shl
repz
jb
add
inc
inc
(bad)
sub
rol
cmp
jne
aas
sbb
or
mov
adc
xchg
pop
sub
mov
out
push
sbb
aas
sbb
fdivr
rdtsc
std
push
adc
sbb
pop
push
fsubr
pop
(bad)
mov
inc
mov
cli
push
arpl
call
imul
add
pusha
mov
repnz
mov
aaa
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
jecxz
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
repnz
repnz
mov
out
xchg
xor
mov
mov
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
retf
and
ins
cdq
adc
push
inc
(bad)
fdivr
jge
sbb
hlt
pop
mov
add
xor
(bad)
jnp
sub
hlt
outs
mov
sub
push
jne
hlt
imul
mov
pop
sbb
cmp
or
sub
sbb
rcr
mov
xor
retf
or
dec
in
sbb
rcr
adc
aam
pop
shl
out
xchg
or
ja
or
mov
sar
adc
xor
pop
inc
repnz
mov
movups
xor
pop
jne
xor
mov
movups
and
outs
arpl
mov
popf
cs
pop
ds
jnp
sub
hlt
push
mov
pop
adc
ins
sbb
inc
jns
add
in
ds
mov
and
xchg
or
mov
dec
dec
xlat
and
inc
mov
cs
jne
sbb
inc
pop
(bad)
dec
hlt
pop
mov
cmc
and
xchg
adc
mov
sbb
inc
jnp
sub
mov
pop
cmp
push
xor
inc
pop
in
and
mov
lock
xchg
push
push
jnp
sub
into
test
mov
nop
xor
push
push
repnz
xchg
dec
mov
invd
lea
and
repnz
mov
pop
dec
sbb
or
push
sub
cmp
movs
mov
hlt
xchg
sub
mov
(bad)
sub
rol
or
sub
cmp
mov
xchg
or
mov
sbb
inc
pop
in
and
mov
lock
xchg
cs
(bad)
fdivr
mov
cdq
add
cmp
cmp
push
aam
pop
shl
or
cmp
and
xor
jo
call
adc
pop
frstor
sub
add
in
stc
out
xchg
mov
stc
sub
shl
repz
jb
sbb
das
sub
stc
sub
shl
repz
jb
cmp
in
and
mov
lock
pop
xor
fdivp
xor
(bad)
xchg
pop
mov
adc
xchg
sbb
sbb
or
mov
cld
adc
xor
dec
pusha
div
data16
sub
adc
ja
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
jno
lea
pop
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
jp
fidivr
outs
fild
mov
jno
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
push
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
repnz
push
fistp
adc
xor
gs
retf
and
jle
adc
push
fs
fdiv
ja
in
cmp
mov
and
nop
cs
jne
sbb
inc
jb
out
clc
xchg
inc
inc
mov
fdiv
sbb
inc
pop
fptan
dec
jmp
push
xchg
movs
jne
sbb
dec
cld
xchg
cmp
push
lods
cs
lea
mov
dec
int3
xchg
add
enter
cs
jne
sbb
push
stc
mov
add
jne
out
xchg
mov
retf
and
sbb
add
and
xor
mov
movups
and
xor
mov
movups
xor
pop
arpl
xor
mov
repz
sbb
pop
cmps
repnz
sub
daa
jge
mov
and
xchg
pop
cmp
jg
jmp
inc
xchg
fisttp
call
inc
pop
in
add
mov
jle
sbb
ja
in
sub
mov
sbb
push
sbb
inc
jg
or
xchg
inc
inc
mov
iret
or
loop
pop
push
hlt
adc
push
mov
sub
xchg
pop
and
sub
rol
push
test
and
xor
mov
movups
xor
pop
jo
xor
mov
add
jns
out
xchg
mov
lds
movs
rcl
sti
xchg
xor
or
shr
push
mov
int
inc
dec
fld
dec
hlt
dec
mov
movups
cmps
in
pop
inc
inc
sub
mov
ret
inc
mov
xor
add
fisub
hlt
push
mov
hlt
and
xchg
or
mov
fldz
dec
hlt
inc
icebp
mov
or
fwait
femms
jle
sub
iret
test
mov
cmp
das
pop
push
xchg
sub
xchg
xchg
pop
mov
pop
adc
or
scas
or
mov
cmp
sub
cmp
mov
push
jb
cmovno
sub
(bad)
sub
rol
sbb
aas
sbb
or
adc
sub
cmp
push
pop
in
add
mov
lods
push
adc
adc
pop
push
repnz
movs
jmp
sbb
mov
mov
rdmsr
lea
xor
fbstp
push
fist
pop
mov
or
push
lds
pop
push
adc
push
(bad)
xchg
pop
mov
movups
adc
pop
push
add
push
fucomip
xchg
pop
mov
or
push
push
xor
scas
xchg
pop
mov
push
adc
outs
and
xor
jmp
push
adc
loope
pop
push
mov
push
fisttp
push
adc
shl
pop
push
mov
xchg
pop
mov
push
adc
jne
pop
push
xor
(bad)
xchg
pop
mov
push
adc
std
and
xor
add
adc
aas
and
xor
mov
and
mov
xor
in
push
fbstp
adc
and
xor
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
iret
xor
std
xchg
pop
mov
movups
jle
pop
push
mov
xchg
pop
mov
movups
jecxz
mov
sub
adc
pusha
sbb
inc
dec
sub
cmp
stos
mov
retf
xchg
daa
cmp
frndint
dec
ret
xchg
pop
inc
test
ror
(bad)
repnz
jnp
sub
mov
and
xchg
push
cmp
mov
fst
mov
and
mov
sub
pop
repnz
mov
movups
and
xor
mov
movups
xor
pop
jl
xor
fwait
xchg
(bad)
out
jb
xor
push
sub
adc
mov
sbb
push
sub
sbb
icebp
and
xchg
adc
outs
mov
test
lods
lods
mul
call
ja
out
sbb
enter
fisttp
jp
out
push
dec
(bad)
sub
int3
mov
aaa
ret
out
ins
loope
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
mov
inc
pop
ds
jnp
sub
hlt
push
mov
adc
(bad)
sar
dec
push
in
sbb
test
dec
sbb
sbb
fistp
mov
scas
mov
into
xchg
or
jne
and
outs
mov
enter
cs
ja
fidivr
mov
sbb
loopne
push
fcomp
movs
xor
push
push
repnz
scas
xchg
data16
lock
xchg
adc
lahf
mov
fldenv
push
out
imul
mov
ds
hlt
or
inc
imul
adc
jne
and
fs
bswap
test
mov
add
cdq
pop
int
inc
jnp
sub
(bad)
dec
mov
jmp
jb
push
fs
ds
hlt
or
xchg
jecxz
adc
xor
lea
xor
pop
mov
add
and
repnz
fidivr
and
and
push
repnz
mov
push
mov
and
push
repnz
mov
jbe
movs
xor
adc
fistp
adc
xor
pushf
push
repnz
mov
syscall
lea
and
repnz
fidivr
mov
and
push
repnz
mov
bsf
and
xchg
mov
out
or
int
dec
push
mov
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
test
inc
mov
push
adc
cmps
hlt
or
ja
jmp
scas
enter
fadd
inc
jle
add
in
adc
mov
and
xchg
pop
cmp
dec
fpatan
dec
hlt
add
mov
mov
dec
inc
imul
int3
mov
lock
or
and
xor
lods
xchg
pop
mov
movups
and
xor
cwde
xchg
pop
mov
sbb
mov
out
xchg
pop
sub
sub
jne
cld
sbb
sbb
ja
in
and
test
sbb
fbld
cs
mov
or
(bad)
(bad)
cmp
out
sbb
add
movhps
and
dec
loope
outs
inc
mov
lea
sub
push
repnz
mov
push
adc
xor
int3
dec
retf
xchg
popa
inc
mov
cs
jne
sbb
inc
dec
(bad)
dec
shr
or
push
clc
out
xchg
mov
(bad)
dec
hlt
push
mov
add
add
and
dec
loope
outs
arpl
mov
cmps
call
or
outs
mov
add
sahf
add
jb
xor
int3
jl
out
outs
mov
mov
xor
jle
repnz
mov
xor
imul
push
mov
pop
adc
xor
push
repnz
mov
pop
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
les
lea
sbb
mov
dec
adc
xor
pop
push
xacquire
mov
ja
lea
clc
pop
push
repnz
or
jecxz
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
aaa
xchg
sub
fisub
and
mov
lea
sub
cmp
pop
mov
sbb
lea
aas
pop
push
repnz
mov
and
push
xor
pop
push
repnz
pop
mov
xor
lea
fs
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
out
jb
cmp
dec
retf
sbb
lods
cld
and
xchg
push
cmp
dec
les
(bad)
rcl
ret
cmp
dec
fsincos
dec
repz
push
inc
xchg
enter
lods
jne
sbb
dec
repnz
and
nop
enter
cs
inc
jnp
sub
hlt
and
push
cmps
nop
pop
inc
ss
rol
call
mov
out
xchg
mov
dec
scas
and
pop
imul
movups
and
xor
test
pop
mov
movups
adc
pop
push
(bad)
xor
xchg
xchg
pop
mov
movups
add
pop
push
lds
push
fbld
repnz
jb
add
sub
sub
mov
and
imul
inc
inc
sub
adc
mov
and
xchg
adc
movs
mov
rcr
shr
push
pop
ds
jnp
sub
hlt
push
mov
or
pop
cmps
loope
addr16
sar
dec
jnp
sub
hlt
mov
aaa
adc
cmps
aad
jo
(bad)
ds
jnp
sub
ins
and
or
sbb
mov
fs
test
mov
and
xchg
pop
xor
push
push
repnz
mov
nop
xor
dec
push
repnz
xchg
inc
mov
wrmsr
lea
(bad)
hlt
dec
mov
adc
or
jmp
inc
dec
sub
sbb
lods
les
test
or
mov
cld
add
inc
dec
sub
and
mov
aad
xchg
pop
mov
fs
push
int3
test
test
cs
jl
aam
ja
jmp
stos
enter
add
sub
in
add
mov
xchg
and
push
aam
fisub
and
pop
mov
nop
aas
sbb
in
xchg
bound
cld
cs
dec
in
xchg
pop
sub
aas
pop
shr
sub
out
jo
ret
cmp
dec
std
aas
dec
(bad)
mov
ja
sbb
jbe
adc
dec
push
int3
test
mov
or
dec
test
or
xchg
pop
xchg
sbb
imul
pop
out
outs
mov
fwait
or
dec
test
or
xchg
in
mov
rdpmc
lea
and
jb
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
cli
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
repnz
pop
mov
jmp
push
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
stos
adc
xor
push
repnz
mov
into
adc
xor
pop
push
bnd
mov
retf
adc
xor
pop
push
repnz
int3
pop
mov
sbb
lea
icebp
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
in
mov
or
xchg
es
dec
int3
fisub
aas
inc
imul
add
sub
cmp
fistp
adc
xor
pop
push
repnz
mov
and
lea
adc
add
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
repnz
push
fistp
adc
xor
push
fistp
out
jb
pop
inc
push
sub
and
mov
dec
cmp
or
sub
(bad)
add
mov
cmp
cmp
sub
adc
mov
and
xchg
sub
(bad)
mov
loop
loop
mov
and
xchg
aas
cmp
mov
test
fst
inc
mov
xchg
push
mov
test
sbb
dec
loop
sbb
es
out
xchg
pop
sub
int3
test
dec
sbb
sar
adc
sub
jecxz
inc
imul
adc
cmp
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jp
xor
mov
movups
xor
pop
ins
repnz
mov
aas
dec
sbb
push
sub
ds
hlt
push
mov
adc
cmps
out
pop
(bad)
in
ds
jnp
sub
hlt
imul
cmps
retf
(bad)
stc
cmp
jge
mov
add
xchg
cmp
fisub
shl
cli
xchg
adc
or
(bad)
xchg
dec
inc
mov
ror
popa
(bad)
jecxz
dec
jnp
sub
mov
adc
dec
sbb
inc
sbb
xchg
pop
push
hlt
adc
push
lods
fild
sub
out
xchg
mov
in
or
jg
mov
lea
and
repnz
mov
clts
lea
and
repnz
xchg
js
jecxz
push
test
sub
pop
int
inc
pop
fld
dec
hlt
dec
mov
or
and
aad
jne
adc
jge
mov
adc
push
sbb
mov
fs
int3
test
lods
hlt
and
xchg
and
leave
inc
pop
(bad)
dec
retf
xchg
je
mov
cs
jbe
out
push
dec
out
aas
dec
out
lods
imul
or
hlt
or
dec
or
hlt
pop
(bad)
jne
cli
and
fwait
cs
scas
sbb
mov
repnz
movs
cwde
inc
mov
aaa
sbb
out
jb
sub
inc
dec
(bad)
sub
rol
adc
sbb
pop
push
cli
xor
mov
pop
mov
and
xchg
pop
sub
cmp
sub
out
aaa
fdiv
out
jne
sbb
inc
dec
(bad)
dec
shl
aaa
sbb
mov
xchg
pop
sub
lods
dec
cld
sbb
lods
inc
push
mov
sub
pop
int
inc
jnp
and
xor
sbb
sub
fisub
fistp
js
add
and
dec
push
fistp
cmp
sub
enter
lahf
inc
scas
out
adc
cmp
dec
pusha
div
dec
fstp
sub
adc
ja
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
adc
lods
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
mov
movlps
xor
push
bnd
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
adc
jp
lea
ins
pop
push
repnz
pop
mov
mov
push
push
repnz
push
fistp
adc
xor
jp
sar
fild
mov
jno
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
outs
pop
retf
and
dec
cdq
adc
push
gs
fdivr
push
jnp
sub
hlt
pop
mov
add
xor
call
sub
hlt
outs
mov
sub
push
jle
hlt
ds
xor
loop
sti
and
xchg
sub
fidivr
jecxz
cli
rcr
mov
adc
retf
or
dec
sti
sbb
shl
adc
inc
xor
call
jo
out
jne
cmp
sbb
rcl
jecxz
sbb
xor
push
push
repnz
mov
ud2
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
repz
sbb
push
nop
cs
pop
ds
jnp
sub
hlt
push
xor
cmp
imul
pop
ja
jmp
pop
xchg
inc
inc
fwait
enter
fbstp
sbb
inc
pop
(bad)
sub
iret
imul
push
or
shl
pop
cmps
fimul
jbe
jmp
sub
hlt
outs
mov
sub
sbb
cmc
icebp
out
push
repnz
push
stos
out
aaa
and
out
jne
cmp
push
dec
dec
jae
inc
imul
movups
and
xor
test
pop
mov
movups
sub
xor
mov
repz
jb
or
sub
add
cmps
mov
not
cmp
or
(bad)
shr
in
jb
push
jno
(bad)
ds
jnp
sub
hlt
push
mov
or
add
shl
ja
in
ds
mov
add
sub
out
xchg
mov
(bad)
dec
hlt
push
xor
and
nop
cs
shl
ja
and
dec
mov
or
adc
fiadd
jmp
mov
outs
push
movs
pop
push
imul
dec
repnz
pop
dec
sbb
push
xchg
cs
lods
cmp
mov
mov
sbb
pop
int
inc
pop
fld
dec
aad
xchg
out
aaa
cmp
cli
out
jo
sub
stos
and
jne
cmc
add
jb
or
mov
jmp
pop
mov
mov
lea
daa
jbe
clc
das
pop
(bad)
mov
stos
dec
sbb
or
or
cmps
scas
or
xchg
addr16
rdpmc
lea
and
jnp
fistp
adc
xor
push
xacquire
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
scas
pop
mov
add
lea
xchg
pop
push
repnz
pop
mov
cmp
lea
xchg
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fs
mov
dec
adc
xor
repnz
pop
mov
add
lea
sbb
repnz
popf
pop
mov
out
lea
stc
pop
push
repnz
ja
mov
inc
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
mov
lea
mov
push
fistp
adc
xor
jp
sar
outs
adc
mov
dec
sti
out
xchg
lods
ja
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
sub
push
xor
pop
push
repnz
pop
mov
cmp
lea
pop
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
out
jb
or
sub
jae
xor
and
xchg
sub
mov
sti
sbb
lods
jmp
cmp
dec
retf
sbb
lods
movs
and
xchg
inc
cmp
mov
int3
sbb
sar
icebp
stos
enter
cs
dec
jnp
sub
hlt
and
sub
mov
sub
hlt
xor
adc
repnz
out
xchg
mov
or
in
dec
sbb
xor
sub
int3
test
dec
sbb
sar
adc
cmp
outs
cmps
inc
imul
or
pop
pop
int
pop
adc
mov
pop
mov
movups
and
xor
cmps
xchg
pop
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
int3
xor
(bad)
xchg
pop
mov
movups
sub
mov
sub
sbb
arpl
cmp
dec
stc
sbb
lods
std
and
xchg
xor
mov
dec
ficomp
cdq
shr
(bad)
xchg
cs
sbb
inc
ins
(bad)
inc
movs
out
adc
cmp
push
jnp
sub
jne
cld
add
sbb
inc
sub
sub
add
and
xchg
adc
mov
dec
loop
lahf
shr
push
sub
jne
sbb
xchg
xchg
pop
xchg
sti
add
xchg
or
dec
test
or
(bad)
push
lods
les
sub
stc
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
rol
or
pop
sbb
sub
hlt
push
mov
sbb
outs
sbb
inc
jnp
sub
mov
adc
mov
add
stos
or
outs
pop
int
dec
jnp
sub
mov
sbb
sbb
mov
sub
hlt
pusha
mov
cmp
pop
cmps
ror
popa
mov
dec
and
inc
mov
call
sub
mov
sbb
mov
cs
jne
sbb
inc
pop
(bad)
xchg
xchg
pop
xchg
std
add
addr16
lods
fisub
les
popf
jmp
sub
fbstp
adc
sub
enter
mov
loop
das
cmp
ja
or
and
imul
cld
push
lahf
cs
jne
sbb
inc
inc
stc
sub
shl
hlt
out
jb
cmp
pop
(bad)
dec
aad
lahf
inc
test
cmp
ds
jnp
and
xor
mov
sbb
aas
sbb
or
mov
sub
add
and
lock
mov
movups
xor
pop
push
rcr
push
fistp
cmp
adc
sub
in
sub
fwait
cdq
data16
lock
lea
and
fistp
add
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
out
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
rcl
lea
clc
pop
push
repnz
sbb
adc
xor
pop
push
repnz
jmp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
fst
lea
inc
pop
push
repnz
push
fistp
adc
xor
int3
mov
aaa
and
mov
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
xchg
scas
or
popa
inc
cmps
enter
jmp
inc
(bad)
fdivr
dec
jnp
sub
hlt
pop
mov
adc
push
sbb
inc
jae
add
in
adc
mov
adc
inc
addr16
cmp
jne
cld
das
cmp
sbb
inc
or
push
jge
mov
and
call
jbe
hlt
or
and
push
imul
movups
aas
and
xor
test
pop
mov
movups
adc
pop
push
(bad)
xor
xchg
xchg
pop
mov
movups
sub
push
test
inc
mov
push
adc
jg
sbb
sub
sbb
mov
adc
push
sbb
inc
jle
cmp
xchg
sbb
lods
jmp
pushf
(bad)
mov
mov
and
xchg
or
mov
loopne
mov
lods
mov
(bad)
xchg
cs
loop
dec
jnp
and
push
mov
add
ficomp
ficomp
hlt
xor
mov
pop
mov
movups
daa
and
xor
mov
adc
mov
ds
pop
sub
hlt
dec
mov
adc
sbb
or
cmc
scas
xchg
data16
lock
xchg
cs
(bad)
fnstsw
push
jnp
sub
hlt
pop
mov
add
cmp
sbb
inc
jp
xor
mov
cmps
jmp
or
hlt
pop
xchg
pop
sar
sub
enter
movs
cmp
pop
push
in
cmp
test
cmp
pop
jns
sub
ds
and
dec
cdq
adc
sbb
sub
retf
inc
mov
pop
sbb
and
fs
int3
test
mov
add
mov
int
inc
jnp
and
push
mov
add
scas
pop
int
pop
push
shl
mov
(bad)
inc
add
ins
mov
xor
cli
mov
movups
adc
xor
pop
pop
repz
mov
movups
add
push
xor
pop
jmp
pop
loop
movups
add
and
xor
mov
movups
add
push
xor
pop
nop
repz
mov
movups
xor
pop
repz
mov
movups
xor
pop
cld
repnz
mov
movups
add
push
xor
pop
arpl
xor
mov
movups
xchg
pop
push
aam
dec
int3
mov
aaa
inc
jb
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
or
sbb
pop
mov
cmp
lea
sbb
push
fistp
adc
or
mov
hlt
dec
mov
adc
sbb
(bad)
ja
in
and
mov
and
xchg
cmp
dec
jmp
pop
dec
cdq
sub
push
cmps
ror
sub
out
in
sub
jmp
mov
cmp
sub
pop
dec
out
push
out
push
dec
jmp
movs
xor
push
push
repnz
mov
wbinvd
lea
and
repnz
mov
aaa
addr16
out
jne
sbb
inc
jb
ret
xchg
jns
mov
cs
ja
sar
jge
sub
inc
hlt
mov
out
add
add
and
fiadd
fld
dec
aad
jns
mov
cs
jne
sbb
inc
pop
fldz
dec
into
xchg
dec
inc
cdq
xor
pop
dec
mov
sub
loope
dec
retf
cmps
sbb
adc
movs
xor
pop
push
repnz
push
fistp
adc
xor
stos
and
inc
cdq
push
adc
cmps
hlt
or
sub
cmp
pop
lods
neg
mov
in
xchg
pop
and
sbb
lods
in
and
xchg
cs
sub
pop
dec
out
push
out
imul
(bad)
fdiv
ja
out
sbb
mov
adc
xchg
pop
int
push
dec
loope
dec
retf
cmp
lock
cmps
cmp
and
icebp
xor
mov
push
sub
adc
ja
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
test
push
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
repnz
pop
mov
mov
lea
xchg
pop
push
repnz
pop
mov
mov
lea
push
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
mov
fsub
outs
fild
mov
jno
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
repnz
push
fistp
adc
or
scas
or
mov
adc
xor
fdivr
ins
jnp
sub
hlt
pop
mov
cmp
push
inc
(bad)
in
dec
jnp
sub
hlt
jb
cwd
sub
cmp
and
sub
sub
mov
and
xchg
and
fidivr
fistp
inc
mov
cli
lods
aad
mov
mov
sbb
dec
iret
xchg
add
sar
adc
sub
push
and
inc
mov
cmp
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jp
xor
mov
movups
aas
sub
in
int3
test
lods
int
jecxz
cs
jne
sbb
inc
dec
(bad)
dec
out
ja
xchg
enter
(bad)
jno
jmp
hlt
ins
mov
das
adc
int
jg
sub
into
test
inc
clc
and
xchg
or
xchg
clc
sbb
lods
jmp
mov
(bad)
dec
(bad)
xchg
pop
inc
movs
enter
cs
adc
and
jmp
mov
cli
push
pusha
scas
sub
outs
sti
inc
imul
add
sub
push
fistp
adc
xor
pop
push
repnz
mov
stc
in
jb
push
jns
les
jo
add
lods
shl
xchg
adc
mov
rcr
mov
cmps
cwde
inc
lods
out
aaa
fdiv
out
jne
sbb
inc
jnp
sub
hlt
push
lea
cld
push
cmp
add
sub
sbb
fld
jge
sub
iret
test
pop
cli
and
xchg
or
mov
fldl2t
dec
aad
inc
inc
cdq
xor
pop
aad
push
xor
inc
pop
in
aas
pop
shl
out
call
mov
shl
repz
jb
adc
mov
repnz
mov
add
int
out
xchg
mov
stc
aas
dec
shl
pop
cmps
icebp
push
popa
scas
sub
outs
inc
mov
xchg
sbb
ds
pop
retf
and
jne
cli
add
mov
lods
or
test
mov
das
test
add
and
jmp
inc
aam
adc
add
push
(bad)
out
xchg
movs
xor
dec
pusha
icebp
xor
mov
push
sub
adc
ja
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
lds
lea
sbb
repnz
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
cmps
lea
sub
pop
or
cdq
data16
lock
test
push
xor
pop
push
repnz
mov
sbb
push
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
cmp
lea
push
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
out
jb
or
sub
sbb
test
cs
jne
sbb
inc
jne
out
dec
repz
dec
inc
cmps
enter
shl
aas
ja
in
sbb
sbb
sbb
xor
cmp
sub
or
mov
and
sbb
inc
add
and
jne
cld
aas
cmp
adc
(bad)
je
and
cs
shr
out
xchg
or
pop
scas
or
xchg
pop
mov
movups
and
pop
push
loope
push
fild
movups
adc
pop
push
aad
push
fist
movups
add
sub
jg
mov
jnp
and
and
mov
rcr
mov
lods
jmp
cmp
dec
loopne
add
retf
xchg
and
mov
dec
cld
aas
dec
enter
dec
sbb
push
xchg
loop
mov
(bad)
dec
rcl
in
push
xchg
into
jne
sbb
inc
jnp
sub
hlt
push
adc
inc
sbb
ja
and
mov
adc
in
fisub
shl
repnz
jb
push
bound
xor
mov
syscall
lea
and
repnz
mov
femms
or
outs
pop
int
inc
popa
fld
dec
cld
xchg
inc
or
sti
jne
sbb
inc
jbe
ror
xchg
dec
inc
mov
sbb
addr16
jmp
and
mov
sbb
cmp
sbb
test
adc
in
lods
or
mov
or
sbb
das
or
shl
leave
pop
mov
push
adc
push
dec
stc
and
data16
lock
mov
jo
into
imul
xor
mov
gs
jb
or
sub
outs
add
stos
enter
push
pop
mov
fs
int3
test
mov
cmp
xchg
pop
sub
dec
pop
in
and
out
push
stc
xchg
(bad)
punpcklwd
retf
and
jle
loope
adc
sbb
pop
push
hlt
sbb
mov
or
jb
pop
mov
lods
or
test
and
add
xor
fs
xor
stc
lods
pop
mov
mov
imul
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
xchg
adc
xor
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
aam
lea
icebp
in
repnz
mov
out
xchg
sbb
push
movs
int
mov
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
pop
pop
push
repnz
mov
adc
xor
pop
push
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
mov
push
cmp
add
or
rcr
into
xchg
pop
cmp
inc
(bad)
dec
enter
cdq
adc
cmps
int3
push
data16
idiv
imul
inc
hlt
add
cmp
sbb
inc
push
sub
repz
out
sbb
rcl
mov
or
cmc
mov
out
sbb
rcl
pop
mov
ss
dec
(bad)
outs
xlat
inc
imul
cmp
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jp
xor
mov
movups
pop
sub
in
bswap
test
lods
in
and
xchg
adc
test
(bad)
dec
aad
ja
xchg
enter
cs
jmp
push
mov
sub
inc
push
sbb
(bad)
xchg
addr16
movs
enter
cs
jne
sbb
inc
pop
fnop
dec
hlt
pop
mov
aas
adc
(bad)
out
push
jnp
das
jge
mov
adc
push
xor
inc
pop
stc
sub
cwde
cdq
data16
lock
xchg
or
jb
sub
into
test
mov
nop
xor
dec
push
repnz
mov
prefetchw
xor
js
repnz
mov
pop
dec
sbb
push
sub
jne
sbb
inc
(bad)
(bad)
dec
call
jmp
jne
sbb
inc
jnp
sub
shl
repz
jb
add
sub
and
mov
sbb
outs
sbb
mov
stc
sbb
mov
scas
in
xchg
pop
sub
sbb
mov
loope
arpl
out
sbb
lds
sbb
aas
sbb
lods
or
cwde
inc
xchg
out
aaa
pusha
jno
out
outs
cmps
push
sub
mov
push
fistp
push
cmp
dec
jnp
cs
rcr
out
xchg
or
cdq
mov
in
pop
pop
out
push
jecxz
femms
inc
test
or
mov
fld
inc
dec
and
inc
pop
jmp
dec
sbb
adc
adc
pop
push
repnz
fistp
sbb
or
cmps
scas
or
xchg
pusha
mov
rdpmc
lea
and
or
mov
mov
imul
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
pop
mov
(bad)
adc
xor
pop
push
repnz
pop
mov
or
lea
xchg
pop
push
repnz
mov
std
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
sub
aas
sbb
call
adc
and
pop
push
loope
push
fild
movups
adc
pop
push
aad
push
fist
movups
add
xor
adc
inc
adc
jns
pop
push
mov
xchg
pop
mov
movups
ins
and
xor
fst
lea
push
inc
and
xor
mov
icebp
out
jb
ds
push
sub
sbb
lods
fldenv
xchg
push
cmp
dec
call
(bad)
shl
ret
cmp
dec
std
sbb
lods
shl
xchg
and
sar
fcomp
in
test
mov
mov
test
push
sub
hlt
and
cmp
nop
push
dec
(bad)
mov
sub
ins
sub
push
xchg
or
pop
test
or
mov
out
jb
push
movs
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
(bad)
lea
and
repnz
xchg
push
sahf
or
ret
pop
int
inc
pusha
fld
dec
out
xchg
inc
xchg
loope
mov
sbb
inc
jnp
ror
xchg
dec
inc
mov
aad
mov
loope
ja
in
das
jge
mov
add
enter
dec
sti
sbb
lods
in
and
xchg
adc
lea
jecxz
mov
mov
test
ror
jl
jecxz
dec
jnp
and
jne
xor
jno
sub
outs
test
sbb
sub
mov
fistp
sbb
xor
dec
push
repnz
mov
(bad)
jge
xor
inc
dec
mov
cdq
adc
cmp
sbb
sub
sbb
mov
cmp
ins
sbb
inc
js
das
push
dec
(bad)
outs
sbb
mov
xchg
cs
(bad)
fistp
mov
mov
mov
popf
cs
test
ds
pop
in
push
pop
out
push
loopne
push
fnstcw
push
jnp
sub
hlt
pop
mov
push
cmp
sbb
pop
push
hlt
adc
das
dec
sbb
or
mov
dec
aaa
and
pop
mov
adc
aam
adc
xor
pop
push
repnz
rol
cmp
pop
sub
ins
push
int3
test
movs
call
and
pushf
sbb
mov
enter
lods
(bad)
add
xchg
stc
out
xchg
mov
(bad)
sub
rol
cmp
sbb
ds
mov
cld
ss
imul
xchg
pop
sub
outs
aaa
inc
imul
add
and
xor
mov
adc
sbb
fisub
out
mov
rdmsr
lea
daa
dec
push
mov
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
mov
inc
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
fcom
lea
jnp
push
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
push
bnd
fistp
add
int
pop
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
pop
and
xor
nop
xchg
pop
mov
movups
add
xor
adc
inc
adc
js
pop
push
mov
xchg
pop
mov
movups
loopne
mov
sub
and
xchg
cmp
dec
fnop
dec
stc
xchg
dec
dec
cdq
aas
adc
cmps
fld
inc
jno
das
ja
jmp
scas
enter
shl
sbb
dec
(bad)
xchg
and
enter
mov
jp
sahf
ds
jnp
sub
shl
sbb
mov
out
xchg
pop
cmp
repnz
mov
sidtd
xor
inc
push
repnz
mov
sysexit
lea
and
repnz
mov
aaa
sub
out
jne
sbb
inc
jl
ret
xchg
jns
cmps
enter
cs
jne
sbb
inc
jns
out
dec
leave
xchg
dec
inc
call
jne
sbb
inc
inc
imul
inc
fld
pop
cmps
test
mov
lods
lock
xchg
adc
mov
sbb
dec
jnp
sub
hlt
outs
mov
hlt
add
jns
das
xor
cmp
test
mov
prefetcht0
xor
dec
push
repnz
mov
(bad)
lea
daa
fs
test
lods
icebp
and
xchg
sbb
xchg
in
sbb
mov
cmp
ds
jnp
sub
hlt
push
mov
cld
add
push
add
sub
mov
int3
mov
push
in
jb
pop
inc
push
sub
mov
(bad)
dec
(bad)
xchg
jb
mov
cs
outs
mov
mov
push
fistp
adc
xor
pop
push
repnz
fistp
xor
out
jne
sbb
inc
pop
loope
dec
int3
mov
lock
test
jecxz
test
xor
out
and
inc
push
loope
(bad)
mov
pop
dec
loope
outs
xor
imul
sbb
inc
inc
hlt
or
mov
add
lea
and
xor
mov
or
adc
xor
pop
and
mov
movups
pop
adc
xor
pop
mov
mov
movups
pop
adc
xor
pop
clc
lock
mov
movups
adc
xor
pop
pop
lock
mov
movups
xor
pop
shl
xor
mov
movups
add
push
xor
pop
imul
push
dec
mov
movups
add
push
xor
pop
and
xor
mov
movups
adc
xor
pop
fcomip
xor
mov
movups
pop
adc
xor
pop
(bad)
push
inc
mov
movups
adc
xor
pop
inc
repnz
mov
movups
pop
adc
xor
pop
aam
xor
mov
movups
pop
adc
mov
pop
push
aam
dec
iret
scas
xchg
inc
pushf
lock
test
out
xchg
mov
fs
push
repnz
mov
nop
xor
dec
push
repnz
mov
wrmsr
lea
and
repnz
mov
(bad)
lea
and
repnz
fistp
push
lea
and
push
repnz
mov
cmovnp
xor
cmp
fistp
xor
jae
les
push
jnp
sub
hlt
push
xor
and
xchg
and
mov
rcr
ror
lds
adc
nop
dec
aad
sahf
shl
rcl
mov
out
sub
ins
mov
adc
sbb
inc
add
or
dec
les
test
mov
mov
adc
adc
dec
inc
cmc
or
imul
add
or
mov
sar
adc
xor
pop
inc
repnz
mov
movups
xor
pop
js
xor
mov
movups
xor
pop
dec
out
push
out
imul
push
sub
sbb
mov
and
xchg
das
cmp
fstp
add
mov
fist
sbb
call
xchg
and
lock
xchg
cs
(bad)
fnstsw
ja
in
daa
jge
stos
mov
push
cwde
cs
jne
sbb
dec
jnp
sub
hlt
outs
mov
sub
sbb
loop
pop
push
hlt
adc
sbb
add
and
xor
mov
movups
xor
pop
je
xor
mov
sbb
mov
in
xchg
pop
sub
push
jge
cmps
mov
sti
xchg
aaa
cmp
call
mov
(bad)
xchg
sbb
outs
mov
or
test
lods
sti
and
xchg
adc
cmp
sbb
enter
cs
jne
sbb
inc
pop
jmp
inc
fisub
enter
push
inc
push
sub
mov
stc
sbb
mov
fimul
data16
jnp
sub
ins
cs
mov
sub
mov
into
fisub
cmp
jp
movs
xor
pop
push
shl
push
fistp
cmp
add
and
xor
push
xchg
pop
mov
call
lea
cmp
adc
ret
xchg
jbe
jecxz
pop
cmps
cmp
and
div
loope
mov
push
push
pushf
push
pop
jnp
ja
pop
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
repnz
xchg
pop
mov
rcl
lea
pop
pop
push
repnz
mov
(bad)
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
sbb
xor
ins
scas
or
sbb
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
dec
push
retf
and
inc
cdq
push
adc
cmps
hlt
push
inc
(bad)
fistp
dec
jnp
sub
hlt
pop
mov
add
xor
sub
sbb
cmps
enter
fnstenv
sbb
inc
inc
fpatan
dec
ret
inc
stos
enter
movs
jne
sbb
dec
les
stos
or
sbb
pop
push
mov
push
mov
prefetcht0
xor
dec
push
repnz
mov
prefetchw
xor
js
repnz
mov
(bad)
lea
daa
fs
int3
test
lods
(bad)
and
fwait
push
sbb
inc
pop
(bad)
dec
iret
xchg
jbe
lods
enter
cs
jo
in
push
jnp
das
jge
cmps
xchg
enter
repz
xchg
pop
sub
scas
dec
std
sbb
cdq
or
cmp
add
sub
cmp
cmps
mov
push
popf
fidiv
cs
jge
mov
lock
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
jmp
dec
cld
daa
cmp
xor
das
or
rcl
in
push
cdq
push
adc
fs
bswap
test
lods
in
and
xchg
push
cmp
inc
(bad)
dec
rcl
adc
sahf
add
ds
int
inc
inc
imul
dec
sbb
(bad)
loop
inc
inc
sub
sbb
cdq
xor
adc
loope
and
xor
mov
adc
jb
push
addr16
ds
inc
imul
dec
sbb
or
test
inc
jnp
xor
mov
xchg
sbb
fs
scas
nop
inc
cdq
lock
push
stc
out
xchg
mov
out
aas
dec
int3
mov
aaa
fnsave
out
push
push
repnz
ins
loop
pop
cmps
sbb
sbb
xor
mov
movups
xor
pop
int
xor
mov
movups
xor
pop
cwde
repz
mov
movups
xor
pop
js
xor
mov
movups
add
push
xor
pop
aam
xor
mov
movups
xor
pop
lock
mov
movups
add
push
xor
pop
jmp
pop
cdq
loop
adc
add
push
xor
pop
div
xor
mov
movups
adc
adc
inc
pop
loope
inc
int3
mov
lock
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
adc
xor
push
bnd
fistp
out
jae
out
jne
sbb
inc
jnp
sub
hlt
push
mov
adc
jecxz
je
sar
jg
sub
inc
hlt
lea
hlt
and
xchg
daa
cmp
dec
fsqrt
dec
lds
into
or
mov
out
repnz
inc
mov
cmp
sub
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
and
pop
push
mov
and
xchg
or
test
(bad)
sbb
movs
enter
cs
aaa
aaa
dec
push
retf
and
jne
cld
add
bound
cmp
jnp
and
mov
ss
cmp
mov
push
fistp
adc
xor
push
fistp
out
jb
push
dec
pop
ds
jnp
sub
hlt
push
mov
or
add
aaa
aaa
dec
push
retf
and
push
cdq
adc
sbb
dec
sub
mov
loop
mov
mov
dec
mov
fsubr
jb
or
and
pop
push
stos
mov
or
out
inc
inc
sub
add
in
mov
test
loope
outs
inc
inc
imul
cli
adc
and
fistp
add
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
dec
push
in
sub
mov
enter
movs
cmp
pop
push
push
push
fild
movups
and
xor
lahf
xchg
pop
mov
movups
sbb
xor
mov
lea
adc
jo
pop
push
mov
push
fcomip
xchg
pop
mov
movups
and
and
test
dec
sbb
aaa
cmps
lock
jns
ret
ds
jnp
sub
hlt
push
mov
cmc
and
xchg
sub
mov
or
rcl
ficom
cmp
fwait
dec
fincstp
dec
not
mov
xchg
cs
inc
jb
or
cmp
enter
sbb
outs
mov
test
test
mov
prefetcht0
xor
dec
push
repnz
mov
prefetchw
xor
js
repnz
mov
femms
test
int3
fisub
(bad)
xchg
inc
mov
cs
jne
sbb
inc
inc
(bad)
dec
cli
xchg
dec
inc
mov
ror
jno
loope
push
inc
imul
int3
mov
lock
test
loopne
(bad)
fdivr
push
jnp
sub
mov
and
xchg
or
mov
cmp
test
sbb
mov
add
je
xor
test
mov
movups
and
pop
push
out
push
fild
movups
sbb
scas
in
aas
jge
mov
sbb
pusha
sbb
cmp
ror
mov
in
xor
ds
jnp
sub
hlt
push
mov
adc
cmps
out
inc
jnp
sub
dec
int3
mov
lock
cmc
pop
inc
dec
sub
mov
(bad)
dec
hlt
pop
mov
out
jo
push
dec
das
cmps
xor
pop
pop
repnz
mov
sbb
mov
in
xchg
pop
sub
and
mov
and
jb
push
addr16
cmp
loope
dec
shr
out
xchg
cs
scas
and
sub
int3
mov
lock
das
xor
or
test
lods
lock
(bad)
stc
out
xchg
mov
loope
outs
cmp
imul
add
and
xor
xchg
mov
in
push
enter
movs
imul
push
dec
xor
hlt
xchg
pop
mov
push
adc
or
pop
push
inc
xor
in
pop
mov
or
push
jb
pop
push
mov
xchg
pop
mov
push
adc
jl
pop
push
hlt
xor
popa
xchg
pop
mov
push
adc
jbe
pop
push
sub
push
fisttp
xchg
pop
mov
push
adc
push
and
xor
dec
xchg
pop
mov
movups
repz
xor
dec
xchg
pop
mov
push
adc
pushf
and
xor
imul
retf
adc
loop
pop
push
hlt
adc
pop
lods
lock
mov
out
xchg
pop
and
inc
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jp
xor
mov
movups
xor
pop
outs
repnz
mov
movups
add
and
xor
mov
icebp
out
jb
ss
push
and
sbb
scas
enter
cs
sbb
inc
pop
fld1
dec
hlt
mov
aaa
adc
aad
jnp
(bad)
ds
jnp
sub
hlt
js
js
and
or
mov
ds
inc
sub
hlt
or
inc
cdq
dec
fild
mov
inc
pop
loope
dec
int3
scas
xchg
data16
sbb
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
int3
dec
hlt
dec
mov
adc
sbb
fdivr
ja
in
cmp
mov
sbb
push
sbb
inc
jae
xor
loope
push
out
push
dec
cld
add
jl
pop
inc
dec
sub
cmp
mov
ror
lahf
cs
sbb
inc
jnp
jecxz
fistp
push
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
jmp
push
out
imul
push
or
shr
repz
dec
int3
test
cdq
or
cmp
cmp
dec
stc
sbb
mov
add
loope
int
dec
jnp
sub
mov
jmp
inc
inc
loop
pop
push
hlt
adc
inc
mov
clc
out
xchg
mov
and
xor
pop
xchg
pop
mov
xor
lea
cmp
enter
repnz
mov
rdmsr
lea
xor
fnsave
push
fisttp
pop
mov
movups
jno
pop
push
(bad)
xor
inc
xchg
pop
mov
push
adc
dec
and
xor
loope
pop
mov
or
push
sbb
pop
push
ja
push
(bad)
xchg
pop
mov
push
adc
in
pop
push
sahf
xor
stc
xchg
pop
mov
movups
push
and
xor
outs
xchg
pop
mov
push
adc
add
pop
push
je
push
fnstsw
xchg
pop
mov
push
adc
xor
pop
push
mov
xchg
pop
mov
push
adc
jge
pop
push
das
xor
jecxz
pop
mov
movups
les
pop
push
shl
push
(bad)
xchg
pop
mov
push
adc
sub
pop
push
lods
nop
sbb
add
and
xor
mov
movups
xor
pop
je
xor
mov
movups
xor
pop
push
mov
movups
add
and
xor
mov
movups
add
and
xor
test
icebp
out
jb
or
sub
scas
dec
in
sbb
lods
jmp
xchg
sub
or
rcl
ret
xchg
sub
movs
mov
xlat
sbb
fwait
enter
mov
ds
inc
sub
hlt
or
jne
cmc
and
xchg
adc
int3
mov
sti
aas
dec
shr
aaa
dec
jae
out
(bad)
cmp
pop
push
cli
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fnsave
push
fbld
icebp
out
jb
aaa
inc
push
sub
sbb
lods
jmp
cmp
dec
(bad)
sbb
clc
and
xchg
or
movs
mov
loope
outs
xor
mov
xchg
(bad)
mov
sbb
hlt
pop
mov
clc
and
xchg
cs
sbb
inc
pop
fchs
dec
(bad)
xchg
pop
inc
mov
push
adc
jmp
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
movups
or
jne
dec
mov
adc
add
fstp
jnp
pop
das
jge
movs
xchg
lock
jecxz
out
xchg
mov
(bad)
inc
hlt
push
mov
or
sbb
loope
jp
sar
push
dec
cld
and
scas
xchg
data16
push
lock
nop
cs
scas
sbb
inc
jnp
sub
movs
mov
into
mov
jo
clc
imul
xor
mov
or
xchg
clc
out
xchg
mov
loope
dec
int3
mov
lock
pushf
cs
test
das
dec
push
call
push
loope
(bad)
pcmpgtd
pop
iret
test
mov
sbb
mov
in
xchg
pop
sub
mov
(bad)
repz
jb
sbb
inc
inc
hlt
or
mov
dec
push
fisubr
or
loope
inc
fdivr
mov
mov
adc
imul
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
xchg
adc
xor
pop
push
repnz
pop
mov
mov
imul
push
fistp
adc
xor
push
fistp
adc
xor
jp
in
cmp
mov
pop
out
jb
add
and
pop
push
sti
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
mov
push
mov
push
(bad)
xchg
pop
mov
movups
or
mov
hlt
dec
mov
adc
cmp
cmp
inc
(bad)
dec
rcl
ror
fwait
cs
jne
sbb
inc
dec
(bad)
dec
hlt
jno
jle
sub
montmul
cmovno
xor
out
jmp
sub
pavgw
pop
stos
das
or
mov
loope
outs
js
imul
add
sub
push
fistp
adc
xor
pop
push
repnz
mov
aaa
imul
ds
jnp
sub
movs
mov
stc
xchg
sbb
mov
rcr
mov
scas
xchg
inc
mov
sti
out
xchg
mov
loop
mov
cdq
add
cmp
add
sub
sbb
mov
and
outs
mov
in
int
and
prefetcht0
xor
dec
push
repnz
mov
femms
adc
fisub
shl
cld
xchg
adc
cmp
and
mov
pop
mov
repnz
jb
pop
inc
push
sub
sbb
enter
sbb
outs
mov
dec
into
test
movs
enter
out
push
inc
inc
and
xor
call
test
push
push
xor
fisub
and
dec
and
add
xor
cmps
repnz
stc
lods
pop
mov
inc
adc
xor
push
repnz
jne
mov
leave
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
cld
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
loop
repnz
push
dec
sbb
push
cdq
or
imul
push
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
int3
xor
(bad)
xchg
pop
mov
movups
jl
pop
push
mov
xchg
pop
mov
movups
push
and
xor
(bad)
xchg
pop
mov
movups
mov
mov
sub
and
xchg
sbb
cmp
cmps
mov
retf
cmp
dec
out
sbb
test
cs
mov
loope
dec
(bad)
inc
mov
mov
inc
jbe
fwait
dec
(bad)
xchg
xor
enter
lea
sbb
dec
hlt
sub
or
xchg
pop
sbb
push
scas
or
mov
fisttp
das
test
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
pusha
repnz
mov
movups
iret
fisub
ror
call
push
or
shl
retf
xchg
sbb
mov
dec
ficomp
cwde
rcl
xlat
xchg
or
(bad)
xchg
addr16
mov
cs
jge
fidivr
push
jnp
sub
hlt
pop
mov
aas
adc
cmps
fisttp
inc
jno
ss
in
cmp
jne
cmc
and
pop
mov
cmp
loop
dec
out
mov
arpl
lock
xchg
push
jp
sub
into
test
mov
nop
xor
push
push
repnz
mov
ud2
lea
and
repnz
mov
pop
dec
sbb
push
cmps
repnz
pop
pop
ds
sbb
test
(bad)
and
xchg
sub
mov
(bad)
sub
rol
add
fnstsw
push
jnp
sub
hlt
pop
mov
cld
sbb
ins
sbb
mov
sbb
inc
pop
stc
sub
shl
repz
jb
cmp
dec
(bad)
inc
hlt
pop
xor
add
mov
sbb
mov
repnz
stos
sahf
inc
mov
sbb
addr16
dec
frstor
rol
sbb
add
sub
cmp
int3
test
scas
out
adc
cmp
dec
jnp
sub
aam
test
rol
sub
stc
out
xchg
mov
in
cmp
lods
cwde
inc
sub
and
cli
out
jl
fdiv
push
dec
dec
jg
inc
imul
adc
sbb
frstor
fidivr
adc
sbb
push
dec
sti
cmp
mov
mov
popf
or
pop
test
or
xchg
in
jecxz
xor
xor
pop
adc
cli
xchg
pop
mov
movups
js
pop
push
mov
xchg
pop
mov
or
push
jno
pop
push
add
push
fbstp
mov
push
adc
(bad)
and
xor
cwde
xchg
pop
mov
push
adc
arpl
pop
push
shl
fbstp
push
adc
adc
pop
push
scas
xor
(bad)
xchg
pop
mov
or
push
jmp
fistp
mov
or
push
data16
xor
mov
or
push
les
pop
push
pop
xor
push
xchg
pop
mov
movups
push
pop
push
xor
mov
sbb
mov
xor
in
push
fbstp
movups
daa
and
xor
mov
movups
sbb
pop
push
fnstenv
push
fist
movups
or
pop
push
int
push
(bad)
xchg
pop
mov
movups
jge
pop
push
mov
xchg
pop
mov
movups
or
mov
hlt
dec
mov
adc
push
cmps
call
ds
jnp
sub
hlt
pop
mov
cld
add
push
sbb
mov
dec
std
sbb
lods
(bad)
and
xchg
and
test
dec
call
mov
mov
mov
fistp
icebp
ret
inc
mov
adc
ins
pushf
pop
fbld
fistp
sbb
add
and
repnz
mov
(bad)
lea
and
repnz
mov
or
mov
and
test
hlt
push
lea
stc
and
xchg
pop
cmp
dec
fstp
mov
movs
mov
push
pushf
push
adc
fs
or
test
scas
enter
cs
jne
sbb
inc
jnp
sub
mov
add
push
sbb
repz
pop
out
aas
dec
int3
mov
aaa
ret
out
ins
loope
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
mov
addr16
ds
jnp
sub
hlt
push
mov
adc
cmps
loopne
inc
inc
sub
daa
inc
fld
cmp
sbb
dec
sub
and
mov
and
xchg
or
jo
ss
inc
hlt
or
cdq
adc
cmp
cmp
dec
sti
sbb
in
or
push
dec
das
movs
xor
pop
pop
repnz
cwde
xchg
(bad)
repnz
jb
sbb
dec
push
in
daa
inc
fld
cmp
sbb
dec
inc
hlt
or
inc
imul
sbb
xchg
or
jae
xor
pop
lods
or
mov
in
out
cli
out
jb
xlat
cmp
(bad)
sub
mov
jmp
jb
adc
aaa
das
pop
pop
not
adc
mov
movups
sbb
push
jecxz
adc
mov
movups
adc
xor
pop
loopne
xor
mov
movups
xor
pop
push
repnz
mov
movups
add
push
xor
pop
iret
repz
mov
movups
xor
pop
xchg
repz
mov
movups
add
push
xor
pop
call
pop
nop
loop
adc
xor
pop
repz
mov
movups
xor
pop
adc
xor
mov
movups
add
push
lea
pop
push
aam
dec
int3
mov
aaa
inc
jb
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
or
sbb
fistp
adc
xor
pop
push
bnd
fistp
adc
or
mov
hlt
dec
mov
adc
sbb
sub
daa
jge
mov
sbb
push
sbb
ja
in
adc
mov
add
dec
sbb
inc
sub
out
jmp
lods
jmp
adc
adc
dec
pop
in
cmp
mov
nop
out
jb
sbb
lods
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
inc
fbld
sub
and
xchg
or
cmp
ror
xchg
dec
inc
lods
enter
add
jnp
xor
int3
dec
hlt
dec
(bad)
jne
cld
add
data16
inc
inc
and
mov
hlt
bound
scas
lea
sub
imul
int3
mov
lock
enter
movs
cmp
pop
push
stc
xor
mov
pop
mov
movups
sub
pop
push
stos
mov
jecxz
and
or
shr
mov
in
xchg
pop
sub
sbb
test
call
jno
sub
test
mov
add
rcr
inc
jnp
sub
cmps
mov
or
xor
jp
jmp
int3
mov
aaa
xchg
jo
out
inc
pushf
je
mov
out
mov
inc
mov
rdpmc
lea
and
or
mov
jo
lea
movs
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
xchg
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fistp
adc
xor
jp
aam
outs
xlat
inc
imul
cli
out
vsubss
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fnsave
push
fisttp
movups
or
xor
sti
xchg
pop
mov
movups
pusha
and
xor
in
pop
mov
movups
push
and
xor
xlat
xchg
pop
mov
movups
mov
mov
sub
pop
cmp
cmp
dec
in
mov
test
retf
cmp
dec
clc
sbb
lods
mul
xchg
and
test
dec
rcr
lds
mov
jne
sbb
jge
mov
and
xchg
or
icebp
mov
fldenv
mov
movhps
sbb
pop
or
test
cdq
out
aaa
in
jo
out
ins
loope
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
mov
mov
sub
sbb
inc
dec
sub
sbb
popf
enter
cs
jne
sbb
inc
pop
(bad)
dec
rcl
push
sbb
fsub
sub
mov
std
xchg
adc
or
shr
leave
xchg
or
mov
dec
call
mov
ror
ins
sub
test
lods
out
adc
cmp
push
dec
(bad)
sub
rol
push
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
add
jne
out
xchg
mov
fistp
movs
shr
sti
xchg
div
sbb
inc
jae
in
dec
clc
xchg
dec
inc
stos
out
adc
cmp
inc
jnp
and
jne
sti
and
xchg
adc
(bad)
mov
fldln2
dec
hlt
mov
std
add
cmps
or
iret
pop
int
inc
jnp
sub
hlt
push
mov
cld
add
mov
sub
jge
ins
push
pop
mov
sub
pop
sbb
or
test
test
mov
inc
adc
xor
pop
push
repnz
rol
sbb
sbb
add
int3
test
scas
call
sbb
in
fisub
les
adc
cmp
ja
out
cmp
cwde
inc
cdq
out
aaa
or
cli
out
push
push
cld
ss
fnstenv
movups
sbb
pop
push
hlt
sbb
mov
add
jns
out
xchg
mov
fnstcw
outs
aaa
inc
imul
add
inc
mov
repnz
mov
xor
push
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
mov
test
imul
push
fistp
aaa
xchg
adc
mov
jmp
mov
add
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
pop
mov
xor
lea
addr16
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
or
int
inc
jnp
sub
hlt
dec
mov
or
push
dec
(bad)
aam
ja
in
sub
mov
and
xchg
sbb
mov
dec
aad
call
and
xchg
sub
or
dec
ficomp
out
ror
xchg
adc
(bad)
mov
rcr
repnz
lea
pop
or
dec
rcr
mov
mov
cdq
pop
les
push
adc
push
dec
loop
outs
daa
inc
imul
or
xchg
ficomp
push
push
fbstp
adc
and
xor
cmps
xchg
pop
mov
movups
adc
pop
push
fdiv
push
fist
movups
sub
into
test
inc
cld
cmp
jg
or
dec
sub
sbb
movs
enter
cs
lods
sbb
inc
jbe
out
cli
xchg
inc
inc
mov
fnstenv
sub
into
test
test
dec
cdq
cs
jl
fdivr
inc
jnp
sub
hlt
pop
mov
cmp
push
jge
in
ja
in
cmp
cmps
mov
ror
sub
inc
dec
(bad)
sub
rol
sbb
aas
sbb
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
jmp
lods
lock
xchg
adc
cwde
mov
fistp
mov
lods
out
and
xchg
adc
mov
aas
or
iret
mov
xchg
dec
sbb
push
xchg
loop
mov
into
dec
jnp
cs
mov
sbb
inc
jns
xor
in
cmp
cmps
cwde
inc
mov
cli
out
ja
ret
ds
jnp
sub
mov
and
nop
cs
jb
out
cmp
push
fistp
daa
sbb
jbe
xchg
pop
sub
inc
dec
(bad)
sub
rol
adc
loope
and
xor
cmps
cdq
data16
lock
xchg
cmp
sub
pop
and
inc
cdq
pop
sbb
xchg
pop
sbb
ins
lods
or
mov
add
popf
or
dec
pop
int
inc
pop
in
sub
lods
cdq
data16
pop
lock
call
inc
dec
(bad)
sub
rol
adc
adc
mov
mov
adc
sbb
fisub
lds
fldl2e
jb
adc
xor
push
push
repnz
test
jecxz
adc
push
pop
push
repnz
pop
mov
mov
push
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
jle
lea
pop
pop
push
repnz
jno
mov
dec
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
or
xchg
sub
lods
int
mov
fild
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
out
jb
push
inc
pop
ds
jnp
cs
movs
mov
stc
xchg
or
mov
in
sbb
movs
enter
shl
in
inc
jnp
sub
hlt
jp
jnp
and
sbb
mov
dec
jnp
sub
hlt
push
mov
dec
adc
cmps
scas
push
jle
xchg
outs
jnp
and
jne
cld
cmp
sbb
and
sub
icebp
push
fistp
adc
cmp
inc
pop
in
sbb
out
imul
movs
xor
push
push
repnz
mov
clts
lea
and
repnz
xchg
js
jecxz
cmp
xor
ins
push
repnz
mov
aaa
test
cli
out
jbe
lds
imul
mov
or
xor
sar
ja
in
es
mov
and
xchg
or
mov
dec
in
sbb
popf
out
aaa
ins
jo
out
jbe
(bad)
ds
jnp
sub
mov
and
xchg
or
mov
fld1
dec
(bad)
xchg
inc
inc
mov
aad
inc
imul
mov
mov
or
push
pop
int
inc
pop
call
lods
outs
dec
sbb
pop
enter
movs
xor
xor
mov
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
add
mov
out
xchg
mov
fld
dec
enter
cwde
enter
div
sbb
inc
jnp
in
dec
jmp
out
adc
cmp
dec
jnp
sub
hlt
push
xor
and
xchg
adc
(bad)
mov
loopne
mov
test
add
sbb
frstor
cmps
mov
or
in
or
sub
mov
hlt
pusha
inc
pushf
mov
or
xchg
femms
arpl
jno
test
mov
jb
xchg
pop
and
fidivr
adc
into
fisub
shl
inc
jno
out
jne
sbb
inc
pop
stc
sub
xchg
cdq
repnz
lock
xchg
cs
scas
sub
dec
and
inc
mov
and
xchg
pop
sub
mov
clc
das
pop
lds
sbb
jb
adc
xor
pop
jo
xor
xchg
push
pop
mov
and
jo
sub
enter
xchg
dec
and
sbb
xor
movs
repnz
stc
lods
pop
mov
repz
xor
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
pop
adc
xor
push
fistp
adc
xor
jp
sti
outs
rol
mov
mov
out
xchg
lods
ja
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
das
adc
xor
pop
push
repnz
mov
cmp
lea
sbb
or
pop
mov
dec
adc
xor
repnz
mov
push
adc
xor
push
repnz
push
fistp
adc
mov
mov
sub
and
xchg
sbb
cmp
pop
mov
adc
cmps
fmul
jb
das
ja
in
sub
xchg
lods
into
and
xchg
das
cmp
dec
ficomp
in
ret
xchg
sub
mov
mov
inc
dec
fstp
dec
cdq
inc
adc
cmps
cwde
push
pop
(bad)
stos
ds
addr16
hlt
sub
or
xchg
adc
push
scas
or
mov
fisttp
das
test
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jg
xor
mov
movups
iret
fisub
rcr
call
sbb
inc
inc
fnop
dec
not
aam
mov
sbb
inc
jnp
cld
dec
jmp
pop
inc
mov
or
pop
test
or
mov
adc
popa
sbb
inc
dec
sub
mov
into
xchg
dec
inc
test
cs
je
loope
ja
in
and
adc
movups
es
pop
and
inc
mov
xor
push
nop
iret
fisub
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
ds
retf
and
jne
cld
adc
jle
aaa
inc
dec
sub
mov
les
mov
lods
aam
icebp
xchg
sub
mov
sub
mov
inc
imul
cld
or
fidivr
dec
jnp
cs
mov
add
push
sbb
inc
jge
sub
(bad)
sub
rol
cmp
test
sbb
jge
mov
rol
cmps
fld
test
dec
clc
sub
shl
repz
jb
sbb
ds
pop
retf
and
pop
sar
push
dec
enter
movs
cmp
pop
push
in
and
fild
dec
cld
daa
cmp
sbb
add
add
int3
test
lods
jmp
test
or
mov
adc
pushf
sbb
sbb
lods
test
ja
int
pop
jo
xor
pushf
or
jecxz
inc
mov
cmp
out
dec
out
mov
mov
mov
xor
js
repnz
mov
movups
dec
and
xor
ins
xchg
pop
mov
movups
cli
and
xor
mov
push
adc
cmp
pop
push
cmp
push
fbstp
pop
mov
movups
and
xor
xchg
adc
and
xor
lods
xchg
pop
mov
push
sbb
(bad)
mov
xor
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jns
xor
mov
or
(bad)
out
xchg
mov
fld
dec
iret
xchg
jp
mov
div
sbb
inc
inc
fldln2
dec
hlt
xor
and
xchg
push
cmp
dec
stc
and
popf
imul
add
and
repnz
mov
sysret
lea
and
test
and
inc
cdq
adc
push
jl
fdivr
jge
mov
add
xchg
adc
mov
hlt
dec
mov
sti
and
xchg
div
(bad)
and
xor
sub
call
adc
or
jge
mov
sbb
mov
out
xchg
pop
sub
scas
dec
clc
sub
int3
mov
lock
or
jge
cmps
sahf
inc
mov
cli
out
je
sub
inc
test
inc
xchg
pop
xchg
(bad)
or
push
push
repnz
pop
mov
add
and
push
repnz
fistp
mov
add
and
push
repnz
mov
movhps
xor
pop
push
repnz
fistp
dec
lea
and
push
repnz
xchg
leave
adc
push
adc
add
fs
push
repnz
mov
sidtd
xor
dec
push
repnz
mov
rdmsr
lea
and
sub
mov
or
fnstcw
push
jnp
sub
hlt
pop
mov
cmp
add
xor
jp
in
push
call
adc
cmp
pop
push
jecxz
push
fild
sbb
mov
out
xchg
pop
sub
stos
dec
fld
inc
hlt
dec
mov
movups
cmps
in
or
and
inc
or
pusha
inc
cdq
adc
cmp
cmp
xchg
repnz
movs
cdq
inc
mov
cli
out
inc
pushf
je
mov
out
mov
sysexit
lea
and
push
fistp
adc
xor
pop
push
repnz
mov
les
lea
add
repnz
mov
retf
add
call
mov
retf
add
lahf
pop
push
repnz
mov
movups
xor
push
dec
cld
and
sub
test
and
xor
mov
movups
and
xor
mov
movups
and
test
mov
jmp
mov
xchg
jbe
cmps
enter
fiadd
inc
jl
or
shl
out
jb
push
ins
movs
xor
push
push
repnz
mov
(bad)
lea
and
repnz
scas
nop
data16
lock
xchg
or
lahf
mov
in
mov
movs
enter
out
mov
pop
push
mov
dec
xchg
std
jb
fstp
ja
in
cmp
mov
push
push
pop
and
xor
mov
pop
mov
out
jb
add
sub
outs
jl
imul
sbb
jns
or
shl
out
jb
cmp
dec
cld
and
(bad)
push
dec
ret
ret
add
and
xor
mov
dec
add
movs
xor
cmp
xor
mov
pminub
xor
mov
fistp
mov
movs
xor
mov
fistp
push
lea
and
push
repnz
fistp
push
lea
and
fsubr
pop
shr
push
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
push
fisub
enter
mov
jmp
or
hlt
pop
mov
aas
(bad)
lea
sub
test
pop
mul
movups
aas
and
xor
test
pop
mov
movups
sub
and
cdq
push
adc
cmps
hlt
pop
inc
dec
sub
ds
mov
add
sahf
push
adc
push
int3
fisub
hlt
dec
mov
clc
and
xchg
div
(bad)
icebp
cdq
push
repnz
dec
mov
cli
out
inc
mov
repnz
test
add
xor
dec
push
repnz
mov
sub
lea
or
push
repnz
cmp
jecxz
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
xchg
adc
xor
pop
push
repnz
mov
adc
lea
(bad)
pop
push
repnz
push
fistp
adc
xor
jp
loop
outs
mov
clc
add
aad
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
push
xor
pop
push
repnz
pop
mov
cmp
lea
sbb
push
bnd
fistp
jno
int
push
jnp
sub
hlt
dec
mov
cld
das
cmp
cmp
dec
in
sbb
lods
cld
and
xchg
or
mov
dec
std
sbb
stos
enter
shl
sbb
sbb
push
scas
or
fistp
fiadd
in
adc
pop
push
dec
in
sbb
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
add
sbb
scas
or
xor
and
xchg
pop
cmp
dec
out
sbb
lods
call
cmp
dec
loop
dec
std
mov
sbb
push
sub
jne
sbb
inc
pop
(bad)
dec
aad
jae
mov
in
data16
out
ds
jnp
and
mov
movups
cmp
inc
jb
or
inc
imul
adc
inc
adc
xor
pop
push
repnz
mov
adc
pop
sub
sub
mov
add
scas
or
mov
int
dec
jnp
sub
hlt
dec
mov
inc
dec
test
jecxz
scas
or
popf
jne
cmc
and
xchg
femms
popa
scas
sub
into
test
lods
aad
std
mov
xchg
pop
push
repnz
fdivr
pop
cmps
pop
xor
movs
xor
jl
repz
out
pop
mov
adc
xchg
push
sbb
sbb
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
mov
icebp
adc
xor
pop
push
repnz
mov
call
xor
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
jp
in
jge
mov
lock
jb
push
movs
xor
push
push
repnz
mov
lar
xor
inc
push
repnz
mov
sysenter
lea
and
repnz
mov
femms
pushf
or
push
pop
int
inc
inc
fld
inc
hlt
dec
mov
adc
cmps
out
push
jp
aad
ja
jmp
mov
movs
mov
enter
jne
sbb
inc
inc
fscale
dec
lds
movhps
sbb
aam
call
add
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
femms
cdq
or
stos
pop
int
inc
inc
fld
dec
rcl
loope
xchg
sti
je
aad
dec
jnp
sub
hlt
arpl
push
or
repz
int
inc
jnp
sub
movs
mov
or
sub
mov
sbb
push
xchg
pop
pushfw
pop
fbld
rcr
adc
sub
test
mov
cmp
aaa
ja
out
cmp
mov
icebp
out
jb
cmp
dec
cld
aas
outs
repz
imul
add
and
xor
cmps
sahf
dec
mov
or
xchg
pop
xor
dec
pusha
icebp
xor
mov
push
cmp
or
and
repnz
fidivr
adc
xor
pop
push
repnz
mov
movlps
and
push
repnz
fidivr
mov
add
and
xor
mov
paddsb
xor
dec
push
repnz
mov
psubsb
xor
adc
fidivr
pop
stos
adc
push
push
mov
nop
xor
dec
push
repnz
mov
prefetchw
xor
js
repnz
mov
(bad)
lea
and
repnz
mov
fs
sbb
push
xchg
out
scas
sbb
inc
inc
(bad)
dec
rcl
jmp
jne
sbb
inc
pop
fldl2t
dec
int3
xchg
inc
inc
cdq
xor
sbb
stc
ds
jnp
jecxz
fistp
push
pushf
or
pushf
pop
int
inc
pop
in
and
push
push
dec
in
sbb
xor
push
push
repnz
mov
clts
lea
and
repnz
mov
aaa
scas
jae
out
jbe
lds
dec
jnp
sub
hlt
push
mov
or
cmp
cmp
dec
fldln2
dec
aam
test
jnp
out
jb
cmp
inc
(bad)
dec
hlt
push
mov
add
or
sub
sti
push
fistp
add
pushf
or
add
ficomp
xchg
sub
xchg
xchg
pop
mov
pop
adc
or
scas
or
mov
repnz
enter
mov
out
cmp
mov
push
cmps
test
dec
pop
retf
and
jle
loop
adc
sbb
inc
aad
lahf
inc
mov
cli
out
jns
xor
not
xor
mov
push
adc
movs
cmc
and
xor
pop
xchg
pop
mov
movups
mul
pop
push
xchg
xor
add
lea
adc
sub
pop
push
cmc
xor
dec
xchg
pop
mov
push
adc
clc
and
xor
into
xchg
pop
mov
movups
cmp
pop
push
pop
xor
stos
cwde
inc
cmps
lock
adc
push
pusha
movs
xor
push
push
repnz
mov
lsl
xor
inc
push
repnz
mov
getsec
lea
and
test
and
dec
cdq
adc
sbb
sub
ds
mov
add
inc
jg
cs
in
and
cmps
sahf
inc
mov
add
inc
pop
int
pop
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
sbb
mov
ds
jnp
sub
mov
and
xchg
cs
jl
xlat
aas
push
dec
out
push
out
push
dec
(bad)
and
xchg
cs
(bad)
fistp
ja
out
sbb
mov
or
gs
das
movs
xor
pop
pop
repnz
lods
xchg
pop
icebp
out
jb
sbb
inc
inc
loope
outs
jno
imul
sbb
mov
pop
push
movs
mov
sbb
int
inc
pop
(bad)
sub
int3
mov
lock
xor
pop
jo
xor
xchg
out
mov
and
jnp
ja
pop
push
repnz
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
jecxz
fmul
sub
inc
neg
icebp
(bad)
stc
pushf
pop
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
pop
int3
mov
lock
sub
rol
(bad)
dec
(bad)
xchg
jge
mov
cs
in
ds
jnp
jecxz
fistp
push
enter
movs
cmp
pop
push
(bad)
xor
mov
pop
mov
movups
sub
pop
push
mov
and
fwait
cs
jne
sbb
inc
pop
(bad)
dec
shl
lock
jb
cmp
jnp
cs
mov
movups
and
mov
test
mov
mov
xor
dec
push
repnz
mov
adc
lea
and
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
cld
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
cmp
sbb
pushfw
dec
fisub
fistp
sbb
xor
dec
push
repnz
mov
prefetchw
xor
jg
repnz
mov
(bad)
lea
and
or
cdq
adc
or
dec
sub
sbb
mov
fisttp
data16
jnp
sub
hlt
outs
mov
cld
push
cmp
fld
xor
inc
pop
stc
sub
rol
sbb
int3
fisub
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
aaa
push
push
mov
add
jg
cmp
inc
(bad)
dec
int
jo
stos
enter
cs
scas
sub
int
and
and
xchg
(bad)
mov
adc
jge
movs
mov
rol
ins
and
pop
out
push
dec
out
jo
dec
dec
das
movs
xor
pop
pop
repnz
lods
cwde
jmp
adc
pushf
mov
retf
and
jne
cli
add
pushfw
or
mov
enter
lods
test
xchg
cmps
xor
(bad)
push
repnz
mov
or
pusha
mov
retf
and
dec
and
imul
xor
loope
inc
(bad)
sbb
add
inc
pop
push
repnz
mov
in
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
cmp
pop
jnp
cmp
aad
xchg
pop
mov
add
and
xor
mov
movups
xor
pop
jae
xor
mov
or
jmp
inc
inc
fld
dec
retf
xchg
jp
mov
loop
inc
inc
sub
mov
rcl
(bad)
xchg
sbb
fs
xchg
pop
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
sbb
int3
dec
hlt
dec
mov
adc
add
fdiv
ja
out
sbb
mov
cli
out
jl
sar
mov
xchg
jle
cdq
add
cmp
adc
mov
repnz
mov
sbb
mov
out
xchg
pop
sub
stos
dec
(bad)
sub
int3
mov
lock
cmps
test
mov
test
and
inc
cdq
adc
arpl
or
xchg
pop
mov
mov
daa
cmps
xor
jbe
clc
and
mov
bsf
xor
push
push
repnz
fistp
dec
lea
and
push
repnz
mov
movups
xor
or
xor
fistp
mov
xor
pop
jbe
sub
scas
xchg
jne
jmp
movs
xor
push
push
repnz
mov
syscall
lea
and
repnz
scas
xchg
jne
cmc
and
xchg
or
lahf
mov
(bad)
dec
(bad)
xchg
jle
mov
out
mov
jp
cmp
mov
movups
and
pop
push
out
push
fbld
adc
cmp
xchg
pop
sub
cmp
mov
add
fs
cmp
retf
and
jne
cmc
and
xchg
push
fnstenv
ja
and
push
fistp
repnz
jb
adc
xor
sbb
xor
mov
movups
xor
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
xchg
lea
push
pop
push
repnz
mov
adc
lea
aaa
pop
push
repnz
mov
dec
adc
xor
pop
push
repnz
fistp
aaa
xchg
adc
fisub
and
pop
imul
movups
cmp
pop
push
cld
xor
lods
xchg
pop
mov
movups
and
xor
cwde
xchg
pop
mov
movups
pop
and
xor
mov
lea
sbb
mov
rcl
sbb
fidivr
jge
mov
and
xchg
cs
jl
out
push
jnp
sub
hlt
jo
inc
cdq
sub
or
xor
jp
stc
sub
imul
inc
cmp
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
dec
jmp
imul
sbb
cwde
mov
jmp
mov
movs
enter
cs
jne
sbb
inc
inc
ftst
dec
shl
icebp
out
jb
sbb
sub
sbb
cdq
add
cmp
sbb
inc
sub
ds
ins
pop
pop
mov
sub
xchg
sbb
or
cmp
test
adc
sbb
xor
xor
pop
push
cmc
xor
mov
pop
mov
add
xchg
sti
out
xchg
mov
out
sbb
fild
inc
push
sub
scas
dec
clc
and
(bad)
mov
cmps
dec
sbb
or
sub
dec
pop
jmp
mov
adc
out
pop
push
jo
xor
pushf
jbe
mov
daa
pop
pop
ss
dec
dec
xchg
and
dec
and
pop
pop
xor
xor
stc
mov
jecxz
adc
xor
fistp
adc
xor
push
repnz
mov
cmc
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
stc
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fistp
ins
jb
out
jb
or
scas
or
xchg
pop
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
je
xor
mov
movups
xor
pop
dec
dec
arpl
inc
imul
sbb
(bad)
fnstsw
inc
jnp
sub
hlt
pop
mov
add
cmp
cmp
dec
sti
sbb
cdq
sub
add
xor
jp
stc
cmp
mov
stos
dec
sbb
pop
xchg
sbb
pushf
(bad)
mov
fistp
sbb
xor
dec
push
repnz
mov
(bad)
jge
xor
inc
pop
retf
and
dec
cdq
adc
or
sub
es
mov
pop
cmp
add
sub
aas
outs
dec
inc
imul
(bad)
mov
(bad)
dec
hlt
pop
lea
stc
and
xchg
cs
imul
cmp
mov
icebp
out
jb
adc
mov
repnz
mov
add
(bad)
out
xchg
mov
stc
sub
rol
cmp
sbb
sub
int
and
sbb
xchg
or
mov
fistp
cmp
add
ins
mov
sub
dec
pop
and
dec
mov
cli
in
xchg
pop
xor
dec
pusha
hlt
xor
mov
push
cmp
or
and
push
repnz
mov
packssdw
and
repnz
mov
movups
xor
movs
push
repnz
mov
jg
movs
xor
push
push
repnz
fidivr
sbb
and
repnz
fidivr
add
and
fistp
pop
stos
push
sbb
push
push
mov
nop
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
fs
sbb
push
xchg
out
test
rol
(bad)
inc
hlt
push
mov
add
or
sub
and
movs
mov
rcl
jmp
sahf
repnz
mov
aaa
jmp
cli
out
jl
sub
int
and
movhps
xor
push
push
repnz
xchg
dec
mov
invd
lea
and
repnz
test
dec
sbb
or
sub
cmp
mov
and
xchg
adc
mov
stc
sub
rol
cmp
cmp
jnp
sub
cmps
mov
pop
cmps
fcmovb
movs
movs
xor
jp
clc
sub
aam
xchg
xchg
icebp
out
jb
adc
mov
mov
push
fistp
pop
cmp
sub
scas
cwde
data16
sbb
cmp
pop
in
and
test
dec
cmc
and
nop
femms
pusha
scas
sub
int
and
jmp
mov
xor
xor
mov
adc
cmp
xor
mov
push
sub
add
cmp
mov
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
add
lea
xlat
pop
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
mov
(bad)
lea
sub
pop
out
imul
add
and
repnz
mov
sysret
lea
and
repnz
xchg
jnp
jecxz
cmp
xor
ins
push
repnz
mov
xor
jg
les
mov
mov
adc
inc
inc
sub
sbb
lods
icebp
and
xchg
sar
ja
and
push
fistp
pop
sbb
pop
sub
dec
cmps
and
pop
imul
movups
cmp
pop
push
push
push
fild
movups
das
and
xor
mov
lock
xchg
cs
pop
ds
jnp
sub
hlt
push
mov
or
sbb
and
sub
rol
cmp
cmp
jnp
and
aaa
stos
mov
or
xor
jp
clc
sub
aam
test
nop
icebp
out
jb
adc
mov
repnz
mov
add
sar
out
xchg
mov
stc
sub
rol
sbb
cmp
inc
inc
dec
imul
imul
push
sbb
sbb
or
xchg
pop
mov
mov
lea
daa
jbe
clc
sub
aam
test
in
icebp
out
jb
adc
aaa
and
repnz
mov
movups
xor
push
repnz
mov
lea
lea
mov
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
jno
lea
sub
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
pop
mov
ffreep
lea
sub
test
dec
sbb
push
enter
movs
xor
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
movups
sbb
pop
push
fbstp
push
fisttp
sub
sbb
inc
pop
fld
inc
hlt
dec
mov
cld
sbb
inc
inc
sub
mov
leave
xchg
dec
inc
cdq
cmp
or
and
xor
call
jne
out
xchg
mov
dec
mov
imul
movups
and
xor
scas
xchg
pop
mov
movups
sub
pop
push
shl
push
fbld
icebp
out
jb
add
sub
sbb
lods
enter
cs
jne
sbb
inc
pop
(bad)
dec
shl
cdq
out
jb
push
arpl
jmp
mov
lods
out
and
xchg
cs
sbb
inc
jnp
jecxz
fistp
sub
sti
out
xchg
mov
cmp
outs
mov
out
jo
je
das
movs
xor
pop
pop
repnz
stos
cwde
data16
sbb
out
scas
sub
int
and
adc
xchg
push
sbb
mov
aad
lahf
inc
test
cli
out
push
dec
jmp
xchg
je
jmp
sbb
mov
out
mov
sysexit
lea
xor
in
push
fisttp
pop
mov
push
adc
inc
and
xor
mov
movups
and
pop
push
cmp
push
fild
pop
mov
movups
stc
and
xor
jle
pop
mov
movups
cld
and
xor
jns
pop
mov
movups
and
pop
fistp
sbb
movs
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
prefetch
int
inc
pop
fld
dec
into
xchg
gs
cdq
or
or
mov
rcl
sbb
sub
inc
pop
in
es
fild
push
mov
and
xor
mov
movups
and
and
mov
sbb
js
push
inc
push
sub
cmp
mov
add
ins
sbb
fs
int3
test
cdq
adc
cmp
cmp
jnp
aaa
push
mov
jecxz
adc
and
test
mov
add
rcr
dec
jnp
sub
mov
out
mov
out
jb
ret
cmp
(bad)
sub
int3
mov
lock
fsub
pop
push
fsubr
int3
mov
movups
and
push
pop
xor
jmp
pop
mov
movups
and
xor
fist
lea
and
xor
push
xchg
pop
mov
movups
push
and
xor
ins
inc
pop
mov
sub
xchg
or
jns
sbb
push
fbstp
adc
and
pop
push
in
push
fbld
movups
xor
xchg
test
lods
repnz
xchg
adc
retf
sbb
mov
pop
aam
push
adc
dec
inc
test
je
call
adc
xor
pop
pop
repnz
mov
movups
and
jbe
int3
test
lods
out
and
xchg
cs
jge
fnstcw
push
jnp
cs
leave
scas
xchg
mov
out
fwait
cs
pop
cmp
mov
xchg
jl
arpl
movhps
aaa
sbb
out
imul
cmps
xor
dec
push
repnz
mov
adc
lea
mov
push
repnz
mov
add
lea
or
repnz
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
ret
lea
sbb
rol
push
add
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
and
xor
mov
add
mov
sbb
inc
pop
fld
dec
(bad)
xchg
jnp
mov
div
(bad)
ds
jnp
sub
hlt
pusha
xor
and
xchg
push
cmp
dec
fprem
xchg
std
add
cmp
or
imul
movups
and
xor
test
pop
mov
movups
sub
xor
mov
icebp
out
jb
add
ja
in
cmp
jne
sti
and
xchg
push
cmp
dec
stc
sbb
mov
out
jb
cmp
dec
(bad)
dec
(bad)
xchg
jle
cdq
add
sbb
inc
sub
loope
fistp
aaa
js
cli
out
jbe
sub
inc
pop
retf
and
pop
sar
jbe
enter
movs
cmp
pop
push
in
and
sti
push
dec
cld
add
jnp
sbb
sbb
or
mov
push
sbb
pop
das
or
(bad)
mov
inc
dec
sbb
adc
adc
mov
mov
adc
cmp
cmp
dec
scas
and
dec
and
sbb
movs
xor
fs
xor
stc
mov
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
add
push
xor
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
jl
lea
ja
push
repnz
fistp
sub
cli
out
xchg
mov
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
push
and
aas
pop
out
imul
adc
cdq
mov
out
mov
mov
in
jae
out
aas
ja
in
es
mov
adc
inc
sbb
inc
outs
loop
pop
push
hlt
adc
push
mov
icebp
out
jb
sbb
sbb
call
adc
and
pop
push
loope
push
fild
movups
adc
pop
push
in
and
mov
jnp
or
sub
mov
loop
mov
lods
jmp
cmp
dec
(bad)
cmp
mov
iret
dec
sbb
push
cmps
icebp
or
push
and
sbb
enter
in
data16
out
icebp
(bad)
push
repnz
aaa
dec
sbb
pop
xchg
sbb
cmp
test
mov
adc
xor
inc
inc
dec
adc
inc
imul
sbb
add
sbb
mov
and
xchg
pop
and
sub
aam
lahf
push
mov
icebp
out
jb
xor
push
xor
xor
pop
mov
sbb
xchg
or
jne
sbb
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
mov
mov
lea
sbb
call
add
es
push
repnz
mov
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
mov
xor
data16
sbb
out
nop
or
pop
pop
int
pop
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
pop
and
xor
xchg
xchg
pop
mov
movups
sub
int3
test
inc
cld
push
cmp
cmp
inc
(bad)
dec
hlt
pop
mov
add
add
jmp
dec
jnp
sub
hlt
ins
(bad)
jne
cld
push
cmp
lds
xor
inc
pop
jmp
outs
sub
mov
cmp
xor
mov
movups
xor
pop
dec
repnz
mov
movups
cmp
fs
or
test
lods
sti
and
xchg
push
cmp
jmp
mov
mov
mov
xchg
adc
mov
cmp
push
push
movs
mov
or
(bad)
fnstcw
jge
mov
and
pop
rcl
push
adc
push
dec
dec
aas
and
inc
mov
sti
out
xchg
mov
stos
jbe
fistp
push
xchg
or
and
fimul
add
lods
arpl
push
xchg
in
scas
sub
inc
pop
retf
and
jne
inc
push
test
fisub
fistp
cmp
ins
mov
sub
jmp
outs
fild
mov
mov
xor
dec
push
repnz
mov
adc
lea
mov
push
fistp
adc
xor
pop
push
repnz
pop
mov
pop
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
clc
adc
xor
push
repnz
mov
add
lea
push
pop
push
repnz
fistp
cmp
sbb
mov
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
add
push
fistp
adc
xor
push
pop
retf
and
jne
cld
add
jle
or
or
shl
push
cmps
fisttp
arpl
and
inc
hlt
outs
mov
hlt
and
pop
rcl
push
adc
push
dec
jecxz
outs
and
mov
cmp
xor
mov
movups
xor
pop
inc
repnz
mov
movups
sub
test
mov
cs
jne
sbb
inc
inc
(bad)
dec
retf
xchg
ja
cdq
add
push
pop
sbb
ds
scas
or
mov
stc
and
xchg
(bad)
mov
fnop
dec
hlt
pop
mov
xor
adc
sub
aas
outs
scas
inc
imul
pop
push
imul
dec
leave
mov
pop
dec
sbb
push
cwde
cs
lods
cmp
dec
pop
retf
and
jne
cmc
add
jnp
or
mov
cmps
sahf
inc
mov
cmp
and
cmps
sub
test
sbb
sbb
or
xchg
cmps
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
jp
std
aas
jge
stos
cwde
data16
sbb
out
mov
push
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sub
lea
or
push
repnz
mov
adc
cmp
sub
hlt
dec
mov
or
pop
inc
inc
and
sbb
mov
les
loopne
ja
in
and
ins
inc
pop
mov
sub
xchg
add
pushf
leave
fbld
retf
scas
dec
sbb
pop
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
lahf
xchg
pop
mov
add
pop
sub
sub
mov
add
sbb
inc
inc
or
shr
add
cmp
cmp
jmp
jp
cdq
or
cmp
cmp
jnp
jecxz
fistp
sbb
pop
fbld
rcl
adc
sbb
hlt
dec
mov
cld
sbb
pop
sub
cmp
mov
dec
mov
cli
or
sub
stc
sub
rol
xor
push
adc
and
pop
push
fiadd
fistp
add
push
test
fisub
out
mov
sysexit
lea
and
push
fistp
adc
xor
pop
push
repnz
mov
or
lea
xchg
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sbb
push
xor
pop
push
repnz
mov
mov
lea
and
pop
fistp
sbb
xor
dec
push
repnz
mov
(bad)
jge
xor
jp
repnz
xchg
jo
jecxz
pop
sahf
add
or
fiadd
sub
hlt
dec
xor
add
data16
inc
inc
sub
and
mov
sbb
pop
sbb
inc
ja
das
ja
jmp
mov
lock
jb
push
ins
movs
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
lock
cwde
cs
scas
sbb
inc
inc
(bad)
dec
rcl
adc
cmps
out
mov
fs
int3
test
cdq
adc
cmp
cmp
jnp
ss
mov
loop
adc
sub
pop
push
stos
mov
add
int
ja
in
dec
shl
icebp
out
jb
cmp
dec
loope
outs
push
inc
imul
imul
movs
xor
jbe
loope
inc
(bad)
test
jecxz
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
mov
xor
dec
mov
inc
sbb
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
sbb
int
inc
jnp
sub
stos
mov
or
(bad)
aam
push
jnp
das
jge
ins
inc
pop
mov
sub
fwait
push
push
das
mov
repnz
mov
movups
xor
pop
dec
cld
and
mov
dec
stc
and
xchg
(bad)
mov
push
sub
hlt
push
adc
or
call
inc
jnp
sub
movs
mov
rcr
ins
sub
dec
inc
test
je
(bad)
repnz
jb
adc
cmp
pop
push
repnz
mov
movups
xor
pop
push
repnz
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
mov
call
xor
pop
push
repnz
mov
dec
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
aaa
xchg
adc
push
push
mov
nop
xor
push
push
repnz
mov
ud2
lea
and
xor
mov
(bad)
add
and
repnz
mov
addr16
sbb
or
sar
jnp
sub
hlt
push
mov
hlt
and
nop
cs
in
ds
jnp
sub
hlt
imul
cmps
retf
(bad)
stc
icebp
test
xor
inc
cmps
out
aaa
call
scas
sub
int
and
nop
xor
push
push
repnz
mov
invd
lea
and
xor
mov
lahf
dec
sbb
push
sub
jl
sar
jnp
sub
mov
and
xchg
cs
sbb
inc
pop
in
es
out
push
dec
clc
and
xchg
cs
(bad)
fdivr
mov
xchg
jno
cdq
add
cmp
leave
push
xor
inc
pop
in
aas
pop
shr
out
or
lds
xor
mov
pop
mov
add
pop
sub
cmp
test
lock
xchg
cs
scas
sub
aas
outs
out
imul
sbb
fs
int3
test
mov
add
ins
test
pop
push
shl
fistp
cmp
sub
into
test
and
adc
xor
fs
xor
stc
mov
jecxz
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
jne
lea
int
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
sub
cli
out
xchg
mov
or
cdq
pop
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
rol
or
sar
jnp
sub
hlt
push
(bad)
jne
cld
sbb
outs
sbb
inc
jnp
xor
mov
daa
jge
mov
and
xchg
fdiv
sbb
mov
stos
lahf
dec
mov
cli
push
arpl
or
test
mov
pop
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
rol
cmp
pop
inc
push
sub
sub
mov
and
call
push
inc
dec
ret
and
dec
cdq
push
adc
jg
cmp
pop
(bad)
dec
aam
jo
mov
fadd
mov
xor
jp
out
outs
mov
imul
or
or
ficomp
xchg
sub
xchg
xchg
pop
mov
or
lea
fbld
sub
aaa
sub
cli
out
jb
(bad)
cmp
stc
and
mov
xchg
(bad)
popa
mov
sbb
or
xchg
pop
mov
cmp
lea
daa
jbe
clc
sub
mov
pop
dec
sbb
add
xor
dec
push
repnz
mov
adc
lea
fcomp
sub
pop
mov
movups
xor
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
dec
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
retf
lea
sbb
rol
push
add
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
and
xor
mov
add
mov
sub
stos
dec
std
sbb
cli
and
xchg
div
sbb
inc
inc
fldlg2
dec
hlt
pusha
lea
cld
pop
cmp
sbb
sub
sub
ins
dec
pop
mov
sub
xchg
sbb
mov
out
push
dec
in
sbb
xor
push
push
repnz
mov
sysret
lea
and
repnz
xchg
inc
cmps
out
aaa
test
cli
out
jne
sbb
inc
inc
fld
inc
hlt
push
xor
sbb
inc
inc
sub
das
jge
stos
lahf
inc
mov
cli
or
or
hlt
push
(bad)
jne
cmc
and
xchg
cs
shl
xchg
xor
push
mov
sti
out
xchg
mov
stos
jbe
fistp
push
pushf
or
cmp
fiadd
fld
dec
aam
cwde
data16
cmp
pop
jmp
imul
sbb
mov
rol
push
ret
inc
fnsave
and
out
cmp
mov
push
dec
sbb
push
xchg
or
int
mov
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
repnz
fistp
adc
xor
jp
dec
cmp
inc
imul
aaa
je
cli
out
ins
loope
and
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
push
and
and
cmps
imul
sbb
inc
push
sub
mov
jmp
lods
in
and
xchg
push
cmp
pop
fldpi
dec
rcl
adc
cmps
enter
sub
sub
ins
dec
pop
mov
sub
or
pushfw
loope
mov
lds
lock
enter
movs
cmp
pop
push
(bad)
xor
mov
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
movups
movs
fbld
sub
and
fwait
cs
jne
sbb
inc
inc
(bad)
dec
rcl
push
test
leave
jb
sub
test
mov
jmp
arpl
adc
jge
mov
and
xchg
cs
and
call
lods
arpl
or
int3
fisub
test
rcr
movhps
xor
inc
pop
retf
and
push
cdq
adc
or
mov
or
pusha
inc
cdq
adc
sbb
(bad)
scas
jmp
mov
cmp
and
xor
mov
adc
inc
and
push
push
fistp
cmp
ds
lods
or
xchg
scas
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
daa
jp
clc
aas
jge
mov
lock
jb
push
movs
xor
pop
push
repnz
xchg
push
mov
lsl
xor
inc
push
repnz
mov
sysenter
lea
and
repnz
mov
wbinvd
cmp
and
mov
and
xchg
adc
cmp
sbb
test
(bad)
or
or
pusha
xchg
pop
mov
adc
xchg
pop
int
dec
pop
jmp
outs
sub
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
leave
out
jb
push
jae
les
dec
jnp
sub
hlt
push
mov
or
cmp
pop
inc
inc
and
sbb
mov
jb
cmp
jnp
cs
stos
mov
push
cmps
out
inc
inc
loop
pop
push
hlt
adc
push
stos
out
aaa
fs
out
outs
cmps
push
ds
mov
push
fistp
or
int
dec
jnp
sub
aam
cwde
data16
lock
xchg
cs
scas
sub
or
and
inc
cdq
adc
sbb
or
mov
sar
or
lea
or
in
cmp
mov
dec
dec
sbb
add
xor
js
repnz
mov
movups
xor
xor
inc
xchg
pop
mov
movups
cmp
pop
push
xor
mov
push
adc
inc
and
xor
jge
pop
mov
movups
mov
pop
push
cld
xor
dec
xchg
pop
mov
movups
mov
pop
push
out
aas
inc
int3
mov
add
push
xor
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
sbb
scas
or
popa
inc
mov
cs
jae
fdivr
push
jnp
sub
hlt
pop
mov
cmp
or
ja
jmp
or
aas
out
jb
pop
das
mov
repnz
mov
movups
xor
pop
dec
repnz
mov
pop
mov
lock
jb
cmp
out
mov
scas
enter
cs
and
int
and
dec
cmps
jmp
inc
dec
and
mov
(bad)
push
fcmovnu
mov
lea
cmp
retf
and
jne
sti
add
sahf
add
fstp
fiadd
push
and
dec
mov
cli
out
jae
ret
cmp
loope
outs
dec
inc
imul
add
loope
int
pop
push
in
push
dec
pushf
xchg
push
pop
mov
and
jnp
ja
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
int3
lea
sub
inc
neg
icebp
(bad)
stc
pushf
pop
mov
pop
adc
xor
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
fiadd
cmp
cmp
dec
stc
sbb
mov
cs
jne
sbb
mov
xchg
mov
cmps
or
lea
sub
cmp
pop
mov
sbb
lea
adc
sub
and
xchg
cs
jae
fstp
push
dec
loope
outs
enter
scas
enter
hlt
or
or
add
or
add
xchg
pop
int
jbe
cwde
into
test
and
push
pop
xor
xor
stc
mov
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
fistp
aaa
xchg
adc
mov
scas
inc
imul
add
sub
cmp
pop
mov
sbb
lea
cmp
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
out
jb
add
sub
scas
inc
fld
dec
ret
xchg
js
mov
cs
jne
sbb
inc
pop
(bad)
dec
iret
xchg
dec
inc
mov
aam
jb
(bad)
ds
jnp
jecxz
fistp
sbb
pop
sub
dec
pop
retf
and
sbb
add
and
xor
mov
movups
and
xor
cmps
cwde
data16
cmp
(bad)
dec
hlt
push
mov
cld
push
cmp
push
inc
inc
sub
cmp
test
mov
cmps
icebp
push
arpl
push
sub
mov
and
xchg
cs
jno
out
icebp
adc
jo
mov
push
mov
sti
out
xchg
mov
stos
jbe
fistp
jno
int
ja
out
cmp
test
mov
js
sbb
sbb
or
adc
icebp
out
jb
cmp
pop
in
outs
ret
inc
imul
add
and
xor
xchg
mov
add
(bad)
sti
out
xchg
mov
retf
and
dec
and
or
xor
cmc
jbe
fistp
jle
add
and
push
repnz
fistp
test
add
and
push
repnz
fistp
(bad)
lea
and
xor
mov
movhps
xor
adc
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jae
xor
mov
and
lock
xchg
out
lods
sbb
inc
jnp
sub
mov
and
xchg
cs
sbb
dec
jnp
jecxz
fistp
sbb
int
pop
xor
push
fnstsw
adc
cmp
push
or
mov
cmc
add
dec
pop
int
dec
jnp
das
jge
mov
aaa
pop
jb
out
push
push
rol
fistp
cmp
xor
scas
push
repnz
mov
add
sbb
dec
pusha
icebp
xor
mov
push
cmp
add
xor
clc
push
repnz
fistp
push
lea
and
push
repnz
fistp
je
add
and
push
repnz
mov
xadd
adc
sub
dec
sub
sbb
add
and
xor
mov
movups
xor
pop
dec
repnz
mov
jne
std
and
xchg
(bad)
mov
(bad)
dec
hlt
push
mov
adc
cmps
loope
inc
inc
loop
pop
push
hlt
adc
rcr
out
mov
jo
stos
imul
xor
mov
inc
out
jb
or
sub
inc
pop
retf
and
jne
cli
add
xchg
pop
int
jl
lock
mov
or
lea
cmp
sub
fs
or
xchg
dec
and
clc
lea
xor
cmc
jbe
fistp
outs
lea
and
repnz
fistp
inc
lea
and
push
repnz
fistp
sbb
xor
mov
mov
pop
sbb
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
or
hlt
dec
mov
std
and
xchg
or
xor
rol
xchg
cli
add
xchg
pop
int
pop
xor
cmp
call
adc
jle
mov
ret
mov
push
mov
cmp
push
mov
movups
sbb
push
hlt
sbb
movs
lahf
stos
sbb
out
lea
and
repnz
mov
dec
push
lea
and
repnz
mov
jb
movs
xor
loope
repnz
fistp
lea
xor
ds
repnz
fistp
mov
xor
pop
jbe
cmp
mov
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
int
mov
shl
call
cmp
mov
hlt
pop
mov
cld
add
push
aad
push
xor
inc
pop
jmp
mov
outs
push
lock
push
push
push
repnz
mov
cmp
jb
push
arpl
add
pop
(bad)
mov
jl
sbb
or
lock
inc
pop
retf
and
pop
xchg
add
adc
xor
add
xor
xchg
pop
adc
outs
and
sub
mov
mov
xor
jns
repnz
mov
movd
xor
or
xor
fistp
ins
lea
and
push
repnz
fistp
cwde
lea
and
push
repnz
xchg
hlt
add
xor
sbb
test
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
cmp
ror
sbb
scas
enter
jmp
dec
stc
sbb
bound
movups
cmp
ds
or
mov
cmps
push
adc
xor
push
push
mov
adc
xchg
pop
sub
test
out
imul
add
and
xor
xchg
mov
aaa
or
out
jns
xor
mov
fistp
sbb
add
and
repnz
fistp
mov
add
and
repnz
mov
jae
movs
xor
and
xor
push
jecxz
pop
stos
adc
inc
sbb
ja
hlt
jbe
fistp
sbb
xor
push
push
repnz
xchg
dec
mov
invd
lea
and
stc
sbb
rcl
sbb
sub
mov
(bad)
sbb
cdq
add
cmc
lea
cmp
test
lods
aad
push
mov
and
cmp
inc
imul
prefetch
jb
mov
(bad)
mov
push
mov
lock
jb
sub
xor
add
xor
mov
add
xchg
pop
int
dec
pusha
cli
xor
mov
push
or
or
and
push
repnz
fistp
jp
add
and
push
repnz
mov
setae
xor
or
xor
cmps
cwde
jne
in
pop
lea
and
repnz
xchg
push
mov
sidtd
xor
inc
pop
fst
jne
clc
and
xchg
cs
(bad)
fdivr
ja
cld
xor
(bad)
mov
jmp
push
adc
xor
push
pop
retf
and
jne
sti
add
xchg
pop
int
ja
in
dec
rol
adc
aaa
add
push
repnz
mov
movups
ja
pop
push
repnz
fistp
adc
xor
push
repnz
fistp
hlt
lea
sub
div
push
fistp
movups
aas
and
xor
stos
cdq
jne
hlt
and
xchg
cs
pop
ss
call
xchg
pop
mov
and
xchg
movs
xor
dec
pusha
icebp
xor
mov
push
cmp
add
xor
add
xor
mov
nop
xor
rcl
xor
fistp
lea
xor
lds
xor
fistp
pushf
lea
and
cmps
lahf
jne
cld
add
cmps
stos
pop
das
lods
xor
pop
push
repnz
mov
movups
and
xor
mov
movups
sbb
scas
or
mov
cld
add
jge
sbb
mov
(bad)
dec
hlt
pop
mov
sti
and
pop
jecxz
push
adc
push
dec
stc
or
inc
imul
adc
enter
movs
cmp
pop
push
stc
xor
mov
lock
jb
cmp
inc
clc
sub
xchg
imul
cs
scas
sub
fs
or
push
pop
mov
das
jmp
add
and
lock
fdivr
adc
sbb
push
dec
stc
or
sub
xor
xor
cli
jbe
fistp
inc
lea
and
push
repnz
fistp
adc
xor
movmskps
xor
fistp
cmp
push
ins
movs
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
xchg
ds
cdq
sbb
cmp
cmp
jnp
sub
mov
push
mov
adc
aam
adc
xor
pop
hlt
aas
mov
sbb
sbb
int
inc
jnp
and
xor
sbb
adc
cmp
push
push
rcl
push
fistp
cmp
add
ins
mov
sub
adc
std
xchg
pop
mov
movups
jb
pop
push
les
push
(bad)
xchg
pop
mov
movups
loop
pop
push
hlt
adc
sbb
add
and
xor
mov
movups
sbb
dec
jnp
and
scas
test
loope
push
adc
sub
retf
mov
inc
imul
psadbw
xor
ja
cmc
jbe
fistp
pop
lea
and
repnz
mov
pshufw
and
push
repnz
fistp
ins
lea
and
movs
lahf
jne
inc
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
femms
xchg
cmp
mov
fild
add
mov
or
dec
sub
fist
mov
add
call
xor
je
jbe
fistp
push
xchg
sub
int
inc
pop
fld
dec
aad
lahf
data16
out
xchg
cs
scas
sub
fs
add
mov
xor
pop
jp
cmp
(bad)
mov
mov
xor
jle
repnz
mov
push
mov
(bad)
lea
and
push
repnz
mov
movups
xor
sub
xor
fistp
dec
lea
sub
xor
xchg
pop
mov
movups
xor
pop
pop
repnz
mov
movups
fisttp
add
mov
or
sub
xor
mov
add
lock
out
xchg
mov
in
cmp
int3
imul
femms
arpl
or
lods
jbe
loope
pop
cmps
sbb
arpl
xor
xor
mov
movups
mov
push
sti
xor
mov
out
lea
aaa
inc
mov
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
jmp
cmps
repnz
sub
lods
dec
(bad)
xchg
mov
aaa
loope
cli
out
jns
aaa
and
repnz
mov
dec
push
lea
and
push
repnz
fistp
push
lea
and
push
repnz
fistp
sbb
xor
add
xor
fistp
jne
add
and
in
cmp
jp
push
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
int
mov
les
push
cmp
cmp
jnp
sub
hlt
pop
lea
xor
adc
sub
add
xchg
aas
lods
aam
push
pop
and
xor
mov
push
cmps
repnz
push
das
sub
retf
and
jne
clc
and
xchg
ud2
popa
pushf
sub
mov
jmp
adc
sbb
xor
jbe
icebp
aaa
jbe
mov
push
adc
xor
inc
pop
call
imul
push
adc
xor
jle
repnz
mov
push
mov
(bad)
lea
and
xor
mov
packuswb
xor
aas
push
repnz
mov
(bad)
lea
sub
push
fistp
sbb
xor
push
push
repnz
xchg
dec
mov
clts
sub
fmul
add
pop
hlt
dec
mov
clc
and
xchg
(bad)
mov
stos
jbe
fistp
push
test
sub
pop
int
inc
jnp
sub
lods
xor
lock
sbb
scas
or
mov
call
lods
ja
pop
push
repnz
pop
mov
or
lea
and
cmp
mov
dec
adc
xor
jp
jmp
mov
movups
cmp
pop
push
push
push
fild
cmp
sbb
nop
mov
(bad)
dec
jnp
cs
movs
mov
adc
test
fs
int3
test
and
pop
mov
xor
cli
jbe
fistp
sub
movs
xor
pop
push
repnz
fistp
pop
lea
and
push
repnz
fistp
cmp
push
ins
movs
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
xchg
ds
cdq
sbb
sbb
and
fimul
xchg
jge
mov
adc
inc
adc
xor
pop
hlt
aas
mov
clc
add
xchg
pop
int
ja
jmp
dec
sbb
xor
add
push
aas
and
and
fistp
dec
push
lea
and
repnz
mov
(bad)
lea
and
repnz
xchg
leave
sbb
mov
push
xor
push
fistp
adc
xor
push
jnp
sub
movs
mov
or
loop
pop
push
hlt
adc
mov
mov
xor
jns
repnz
mov
bndstx
xor
and
xor
fistp
mov
xor
ret
push
repnz
fistp
pop
lea
and
push
repnz
xchg
cmc
add
xor
sbb
xor
push
push
repnz
mov
bndstx
xor
dec
push
repnz
mov
prefetchw
sbb
jge
mov
and
xchg
or
xchg
(bad)
dec
hlt
pop
inc
mov
jecxz
aaa
xchg
femms
pusha
scas
or
scas
or
test
adc
sub
int3
test
stos
jmp
cs
pop
int
ja
jmp
dec
aad
lods
ins
dec
sbb
adc
mov
sub
lahf
scas
sbb
out
lea
and
repnz
test
jmp
sbb
xor
pop
push
repnz
mov
movhps
xor
cmp
repnz
fistp
jb
add
and
call
rcr
jecxz
adc
movs
xor
push
push
repnz
mov
clts
lea
xchg
fxch
dec
(bad)
xchg
popa
inc
cdq
adc
sbb
fdivr
ja
div
aaa
rol
mov
sbb
scas
or
adc
jg
cli
out
jl
(bad)
cmp
dec
xor
inc
imul
adc
xor
call
xor
sbb
add
and
xor
mov
movups
xor
pop
repnz
push
xchg
pop
mov
and
outs
movs
xor
pop
push
repnz
mov
nop
xor
inc
pop
fld
jne
(bad)
and
nop
cs
(bad)
fdiv
mov
repnz
les
cli
adc
xor
mov
repnz
mov
dec
sbb
add
and
repnz
fistp
push
lea
and
push
repnz
fistp
sbb
xor
and
xor
fistp
pop
stos
sbb
popa
(bad)
jnp
xor
pop
mov
movups
xor
pop
pop
repnz
mov
movups
xor
pop
dec
stc
sbb
rcl
push
sub
cmp
jmp
cdq
add
dec
cmp
push
push
mov
push
push
mov
and
cmp
inc
imul
clts
popa
pushf
jb
mov
leave
mov
push
mov
lock
jb
xor
xor
push
div
xchg
pop
mov
sbb
call
dec
pusha
div
sbb
mov
push
pop
or
xor
fistp
pop
lea
and
push
repnz
mov
pcmpeqd
xor
inc
pop
jmp
jge
mov
unpckhps
xor
push
push
repnz
mov
lar
sbb
jge
stos
mov
push
cmps
jmp
inc
dec
aaa
and
adc
mov
movups
add
and
or
inc
imul
sbb
xchg
or
add
int
inc
jnp
sub
lods
cmp
sbb
adc
xor
pushf
push
repnz
mov
add
enter
movs
jns
pop
push
scas
xor
mov
movups
xor
xor
mov
movups
loop
pop
push
hlt
adc
sbb
add
and
xor
mov
movups
xor
pop
dec
call
cmc
enter
cdq
adc
cmp
cmp
jnp
sub
ins
fs
mov
sub
pop
xor
xor
jl
lock
xor
loop
adc
sbb
call
out
mov
sysenter
lea
fs
push
repnz
mov
seta
xor
aad
repnz
fistp
jb
add
and
push
repnz
mov
bndldx
xor
pop
jbe
aas
pop
hlt
pop
mov
push
or
adc
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
and
call
ja
in
cmps
ret
inc
cdq
or
sbb
shl
lods
push
repnz
push
mov
cli
adc
add
fistp
add
sar
xchg
mov
in
cmp
cld
imul
femms
pusha
scas
or
mov
sub
or
lea
or
in
cmp
movs
imul
add
test
and
mov
setg
xor
and
xor
mov
cmova
xor
rcl
xor
fistp
push
lea
and
push
repnz
xchg
stc
add
xor
sbb
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
cmp
ror
sbb
scas
enter
push
sbb
inc
jnp
sub
mov
std
adc
sub
int3
test
lods
scas
push
push
mov
and
or
inc
imul
pop
sbb
int
mov
aad
sahf
push
mov
lock
jb
adc
xor
pop
jo
xor
xchg
in
pop
mov
and
popa
pushf
fisub
out
mov
rdpmc
lea
fs
push
repnz
fistp
inc
lea
and
repnz
mov
movhps
xor
and
xor
fistp
cmp
push
ins
movs
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
xor
sbb
inc
push
and
lods
dec
(bad)
dec
hlt
push
call
pop
push
imul
dec
rol
sbb
sbb
scas
or
adc
jae
cli
out
push
cmps
repnz
sbb
lea
cmp
fs
push
repnz
mov
movhps
xor
push
repnz
mov
xadd
adc
cmp
mov
push
fistp
adc
xor
push
repnz
mov
sbb
ja
cmp
jnp
sub
ins
addr16
mov
sub
mov
out
xchg
pop
xor
dec
pusha
hlt
xor
mov
push
cmp
add
xor
fst
xor
fistp
adc
xor
fist
xor
mov
pcmpeqb
xor
push
push
repnz
fistp
sar
ins
sub
pop
hlt
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
jne
cld
push
cmp
inc
push
sub
scas
dec
(bad)
dec
hlt
push
mov
or
cmp
sbb
pop
push
hlt
adc
rcr
out
add
outs
lds
xor
mov
add
(bad)
cli
out
xchg
mov
clc
sub
sub
(bad)
and
xchg
wbinvd
popa
pushf
add
mov
ficomp
xchg
xor
pop
jp
cmp
test
add
xor
jns
repnz
mov
setbe
xor
pop
push
repnz
fistp
jno
add
and
fistp
sbb
xor
aad
repnz
xchg
cld
add
popa
pop
xor
mov
movups
xor
pop
inc
repnz
mov
movups
or
dec
fxch
dec
hlt
dec
xor
and
xchg
push
fnstcw
mov
dec
xchg
pop
mov
adc
xchg
push
sub
int
push
pop
cld
xor
rol
sbb
add
sbb
scas
or
mov
aaa
push
jb
out
jl
(bad)
cmp
dec
stc
or
inc
imul
pop
mov
adc
mov
repnz
fnstsw
pop
cmps
sbb
jbe
or
mov
out
mov
rdpmc
lea
fs
push
repnz
fistp
lea
and
fistp
pop
lea
and
push
repnz
fistp
cmp
push
ins
movs
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
xchg
xor
sbb
cmp
cmp
jnp
sub
aas
lods
mov
push
mov
and
aas
outs
mov
jmp
or
pushf
inc
fisub
(bad)
mov
push
mov
adc
sub
inc
push
repnz
sbb
add
and
xor
mov
movups
xor
pop
add
fstp
dec
adc
add
and
repnz
xchg
push
mov
sidtd
sbb
jge
stos
mov
push
cmps
jmp
pushf
movs
xor
jp
retf
and
dec
and
sti
lea
xor
cmc
jbe
fistp
ins
lea
and
xor
mov
bndstx
xor
clc
push
repnz
mov
bndstx
xor
mov
mov
add
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
ud2
xchg
lahf
jne
sbb
inc
pop
fld
dec
hlt
dec
mov
pop
cmp
cmp
jnp
jecxz
fistp
sbb
int
pop
xor
cmp
call
adc
int
mov
aad
popf
push
mov
cmp
pop
retf
and
jle
loop
adc
sbb
dec
aad
popf
push
mov
lock
jb
adc
xor
mov
fistp
sbb
add
and
push
repnz
fistp
inc
lea
and
push
repnz
xchg
and
lea
and
push
repnz
mov
movhps
sub
xor
pop
mov
movups
xor
pop
pop
repnz
mov
movups
xor
pop
dec
stc
sbb
lds
pop
cmp
cmp
pop
(bad)
dec
hlt
pop
mov
xor
adc
sub
int3
test
test
dec
adc
xor
inc
pop
stc
or
and
inc
cdq
adc
sbb
int
mov
aad
sahf
push
mov
lock
jb
push
jp
dec
or
repnz
push
mov
cli
adc
xor
mov
repnz
mov
dec
sbb
add
and
push
repnz
fistp
add
xor
into
push
repnz
fistp
cwde
lea
and
repnz
fistp
pop
stos
sbb
popa
(bad)
pop
fld
pop
mov
movups
cmp
pop
push
push
push
fild
movups
sub
pop
push
in
jge
mov
clc
or
icebp
push
arpl
in
mov
movs
enter
add
sub
retf
and
pop
sar
dec
dec
enter
movs
xor
cmp
inc
imul
ud2
popa
pushf
jb
mov
ret
mov
push
mov
lock
jb
xor
cmps
xor
jl
lock
xor
sbb
int
dec
pusha
hlt
xor
mov
push
cmp
add
xor
pop
push
repnz
xchg
push
mov
jae
movs
xor
ficom
xor
fistp
inc
lea
and
push
repnz
mov
xadd
adc
sub
call
rcl
jecxz
adc
movs
xor
push
push
repnz
mov
sysret
lea
and
repnz
xchg
sbb
enter
cs
pop
cmp
in
cmp
mov
jmp
xor
jp
clc
sub
fsubr
dec
in
or
mov
std
ja
pop
push
repnz
fistp
out
jb
cmp
push
cmps
mov
sbb
xor
pop
push
rol
mov
(bad)
xchg
pop
adc
sub
and
and
dec
and
stc
lea
xor
cmc
jbe
fistp
sbb
xor
or
xor
fistp
pop
lea
and
push
repnz
fistp
cwde
lea
and
stos
lahf
jne
std
add
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
femms
test
cmp
mov
fild
add
mov
or
cmp
cmp
pop
(bad)
xchg
xchg
pop
xchg
hlt
add
xchg
pop
int
pop
xor
setp
movups
int
mov
(bad)
mov
push
mov
cmp
push
mov
rdtsc
push
add
and
and
ret
mov
inc
dec
sbb
add
xor
jns
repnz
mov
setp
xor
push
push
repnz
mov
movd
xor
stc
push
repnz
fistp
inc
lea
and
push
repnz
xchg
sti
add
xor
sbb
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
cmp
ja
in
aas
jge
stos
mov
pop
cmps
cmc
push
popa
(bad)
fidivr
push
jnp
sub
hlt
pop
mov
add
in
lea
cmp
test
lods
mov
adc
xor
pop
dec
stc
or
inc
imul
push
sbb
int
inc
jnp
cs
ret
mov
ins
dec
sbb
adc
adc
push
repnz
fistp
sbb
xor
dec
pusha
lock
fistp
push
xchg
push
ins
movs
xor
inc
push
repnz
mov
sysret
lea
and
repnz
fisttp
adc
xor
push
jnp
and
jne
loope
pop
lea
sbb
xor
mov
movups
xor
pop
push
repnz
inc
xchg
pop
mov
and
jns
xor
fcom
xor
mov
dec
pop
lea
and
repnz
xchg
jl
jecxz
adc
xor
pop
push
xchg
sub
xchg
xchg
pop
mov
or
lea
arpl
and
hlt
jnp
jne
clc
add
push
cmp
inc
pop
cmc
jbe
fistp
add
xor
dec
push
repnz
mov
movhps
xor
pop
jbe
sbb
call
push
pop
int
dec
pusha
lock
fistp
cmp
xor
ins
push
repnz
mov
(bad)
lea
and
repnz
mov
movups
xor
pop
jbe
cmp
mov
dec
adc
xor
pop
push
repnz
xchg
and
sbb
cmp
sbb
xor
push
repnz
ficomp
jmp
mov
xor
cmp
xor
mov
dec
pop
lea
and
repnz
mov
ud2
lea
and
xchg
sub
xchg
xchg
pop
mov
or
lea
ss
jmp
jge
mov
add
das
mov
repnz
mov
movups
xor
pop
xor
push
fstp
lar
xor
jp
repnz
mov
bndstx
xor
js
repnz
mov
(bad)
add
and
xor
xchg
cmc
add
or
repnz
mov
and
call
pop
aas
mov
adc
add
xor
jp
repnz
mov
sysexit
lea
and
repnz
mov
sysexit
lea
and
repnz
xchg
sti
add
or
repnz
mov
and
xchg
cs
scas
sbb
push
fbstp
movs
add
xor
jns
repnz
mov
movups
xor
inc
push
repnz
xchg
inc
mov
movups
push
and
mov
push
fistp
sbb
and
ja
lock
add
mov
or
adc
xor
pop
push
repnz
mov
movups
xor
pop
push
aam
jge
mov
vmread
xor
dec
pop
hlt
jbe
fistp
adc
xor
dec
push
repnz
mov
nop
imul
xor
mov
ror
inc
pusha
(bad)
cmc
and
popf
pusha
push
fbstp
dec
adc
add
and
repnz
mov
movhps
xor
pop
jbe
sbb
fistp
inc
lea
xor
hlt
jbe
fistp
xor
xor
inc
push
repnz
mov
(bad)
lea
and
cmps
sahf
jne
out
jo
pop
push
imul
dec
aad
sub
sbb
cmps
mov
add
jp
cmp
mov
packssdw
xor
inc
pop
hlt
jbe
fistp
push
lea
and
xor
mov
nop
imul
xor
mov
sysret
xchg
fstp
enter
xor
push
fcmovnbe
rcr
and
ins
movs
xor
pop
push
repnz
mov
movhps
xor
pop
push
repnz
xchg
leave
or
push
cmp
ja
repnz
mov
getsec
lea
fs
push
repnz
mov
movups
xor
push
push
repnz
mov
bndstx
xor
pop
jbe
cmp
mov
push
push
mov
and
sbb
leave
xchg
outs
inc
mov
push
adc
sbb
jnp
xor
mov
getsec
lea
fs
push
repnz
mov
movups
xor
jp
repnz
mov
rdpmc
lea
and
jmp
jge
mov
push
mov
adc
aam
adc
xor
pop
hlt
pop
mov
cli
add
outs
mov
clc
sbb
xchg
xor
loope
ja
add
xor
hlt
jbe
fistp
or
xor
inc
push
repnz
xchg
dec
mov
unpckhps
ja
pop
push
repnz
push
fistp
cmp
sbb
xor
add
enter
mov
movups
xor
pop
push
repnz
mov
movups
adc
adc
ja
repnz
mov
getsec
lea
fs
push
repnz
mov
movups
xor
js
repnz
mov
rdtsc
lea
and
out
cmp
mov
push
push
mov
and
sbb
lds
mov
push
cmp
inc
pop
fstp
or
add
fs
push
repnz
mov
rdtsc
lea
and
xor
mov
sysexit
lea
and
in
jge
mov
push
push
mov
and
sbb
ret
dec
mov
pop
adc
sbb
push
jnp
xor
mov
getsec
lea
fs
push
repnz
xchg
push
mov
movups
xor
jl
repnz
mov
sysexit
lea
and
in
jge
mov
push
push
mov
and
sbb
ret
dec
mov
pop
adc
sbb
push
jnp
xor
mov
getsec
lea
fs
push
repnz
mov
sysexit
lea
and
xor
mov
bndstx
xor
pop
jbe
cmp
mov
push
push
mov
and
sbb
(bad)
xchg
outs
inc
mov
pop
adc
sbb
jnp
xor
mov
getsec
lea
fs
push
repnz
mov
rdtsc
lea
and
xor
xchg
jp
jecxz
xor
xor
pop
jbe
cmp
mov
push
push
mov
and
sbb
ret
xchg
outs
inc
mov
pop
adc
sbb
push
jnp
xor
mov
getsec
lea
fs
push
repnz
xchg
push
mov
(bad)
lea
and
repnz
mov
orps
xor
jb
repnz
xchg
cmc
add
or
repnz
mov
bndldx
cmp
icebp
dec
fxch
dec
hlt
dec
xor
add
xor
push
popf
push
push
fbstp
movups
mov
dec
pusha
icebp
xor
mov
push
cmp
xor
jge
repnz
mov
(bad)
lea
and
repnz
mov
xadd
sub
ja
cld
aaa
push
mov
loop
adc
sub
ja
call
mov
cmp
add
sub
repnz
mov
getsec
lea
fs
push
repnz
mov
sysexit
lea
and
xor
mov
bndstx
xor
pop
jbe
cmp
mov
push
push
mov
and
sbb
ret
xchg
outs
inc
mov
adc
sbb
jnp
xor
mov
getsec
lea
fs
push
repnz
mov
rdtsc
lea
and
xor
mov
sysexit
lea
and
jmp
jge
mov
push
push
mov
and
sbb
ret
inc
mov
add
sub
repnz
mov
getsec
lea
fs
push
repnz
mov
sysexit
lea
and
repnz
mov
rdtsc
lea
and
call
xchg
aas
lods
aam
push
mov
and
sbb
(bad)
xchg
outs
inc
mov
pusha
adc
sbb
push
jnp
xor
mov
getsec
lea
fs
push
repnz
mov
bndstx
xor
pop
push
repnz
xchg
jp
jecxz
xor
xor
pop
jbe
cmp
mov
push
push
mov
and
sbb
(bad)
xchg
outs
inc
mov
push
push
cmp
inc
pop
fstp
or
add
fs
push
repnz
xchg
jne
jecxz
sbb
xor
jg
repnz
mov
movups
xor
pop
jbe
cmp
mov
dec
adc
xor
inc
pop
(bad)
push
cdq
push
or
push
sbb
push
jnp
xor
mov
getsec
lea
fs
push
repnz
mov
sysexit
lea
and
repnz
xchg
jle
jecxz
cmp
xor
pop
jbe
cmp
mov
push
push
mov
and
sbb
(bad)
xchg
outs
inc
mov
ins
adc
sbb
push
jnp
xor
mov
getsec
lea
fs
push
repnz
mov
(bad)
add
and
repnz
mov
bndstx
xor
pop
jbe
cmp
mov
push
push
mov
and
sbb
leave
xchg
outs
inc
mov
ins
adc
sbb
jnp
xor
mov
sysenter
lea
fs
push
repnz
xchg
jle
jecxz
or
xor
inc
push
repnz
mov
adc
inc
adc
xor
pop
hlt
jae
jne
cli
add
add
xor
fidivr
adc
xor
pop
push
repnz
mov
push
adc
xor
dec
pusha
lock
fistp
cmp
xor
pop
push
repnz
mov
bndstx
xor
js
repnz
mov
xadd
sub
div
aaa
rcl
sbb
add
or
dec
fxch
dec
aad
and
movups
cdq
and
icebp
xor
fistp
push
xchg
push
ins
movs
xor
inc
push
repnz
mov
rdmsr
lea
and
repnz
mov
dec
adc
xor
inc
pop
fscale
inc
hlt
inc
adc
adc
cmp
inc
pop
cmc
jbe
fistp
push
lea
and
xor
mov
movhps
xor
dec
pusha
lock
fistp
push
xchg
push
ins
movs
xor
jge
repnz
mov
sysret
lea
and
xor
fisttp
adc
xor
push
jnp
sub
stos
sahf
jne
loope
cmp
add
sub
div
push
fistp
adc
xor
xor
ins
(bad)
pop
mov
sub
cmps
pushf
adc
xor
add
repnz
mov
dec
sbb
xor
push
push
repnz
mov
movups
xor
js
repnz
mov
movhps
aaa
and
adc
mov
movups
sbb
inc
pop
fld
pop
mov
and
jns
xor
cmp
xor
mov
dec
pop
lea
and
xor
xchg
dec
mov
movups
xor
pop
push
xchg
sub
xchg
xchg
pop
mov
or
lea
cmp
call
xchg
xor
jecxz
sbb
aaa
and
xor
mov
movups
xor
cs
fistp
setg
cmp
mov
xor
xchg
inc
inc
mov
or
cmps
aad
imul
push
fstp
setae
xor
fs
repz
lock
mov
psubq
xor
inc
push
repnz
mov
pxor
and
fstp
sti
mov
and
push
repnz
fnstsw
int3
mov
and
repnz
mov
pand
and
xor
mov
por
and
mov
movd
xor
jle
repnz
fnstsw
fisttp
and
repnz
mov
rdmsr
mov
and
push
repnz
mov
pmaddwd
and
push
repnz
mov
setp
xor
jmp
repnz
fidivr
sub
and
repnz
fnstsw
xor
xor
mov
repnz
fnstsw
rcl
ss
sbb
aad
and
inc
mov
cli
out
jnp
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
inc
jae
out
jne
sbb
inc
outs
fld
inc
hlt
push
mov
or
and
sar
ja
in
add
mov
cmp
pop
sbb
inc
imul
jge
mov
adc
xor
cmp
mov
fld
outs
cdq
dec
adc
cmps
scas
push
inc
(bad)
xchg
ds
jnp
sub
hlt
and
sub
mov
sub
hlt
mov
adc
push
aad
imul
dec
int3
lock
xchg
dec
sbb
push
pushf
push
sub
jle
loope
or
fwait
pop
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
and
dec
sub
pop
int
inc
inc
fld
dec
cld
xchg
gs
cdq
or
push
push
(bad)
aam
push
jnp
sub
hlt
bound
and
loopne
js
cmp
pop
hlt
jbe
inc
cdq
and
push
jae
mov
sbb
xchg
imul
dec
sub
sbb
lods
call
int
(bad)
jmp
ja
jmp
test
xchg
inc
inc
cdq
adc
inc
sbb
ja
and
fistp
adc
cmp
jns
or
mov
stc
mov
sbb
mov
in
xchg
pop
and
sbb
xor
mov
movups
and
xor
mov
movups
xor
push
mov
adc
test
enter
xchg
mov
iret
xchg
sub
mov
daa
xor
loope
outs
cmps
inc
imul
or
test
(bad)
dec
(bad)
xchg
ja
movs
enter
cs
sbb
inc
inc
aam
dec
int3
test
jb
or
sub
mov
(bad)
dec
hlt
pop
mov
cld
add
mov
cmp
test
call
sar
dec
inc
in
cmp
dec
mov
sbb
mov
in
xchg
pop
adc
pop
push
repnz
fdivr
pop
mov
sbb
sub
(bad)
mov
cmp
ds
inc
aam
dec
int3
test
jb
or
dec
jbe
cs
out
xchg
mov
jb
hlt
imul
jle
mov
movups
xor
retf
push
repnz
pop
mov
xor
sar
push
inc
retf
sub
test
movs
dec
sbb
sbb
or
dec
sbb
inc
lods
and
dec
mov
cmp
ds
inc
aam
dec
int3
test
jb
xor
and
xor
adc
sti
push
xor
xor
and
in
xlat
fidivr
adc
aas
ds
inc
mov
imul
or
int
inc
inc
aam
dec
int3
test
jb
pop
jns
sub
adc
leave
test
xchg
std
sbb
mov
jmp
pop
sub
and
out
outs
mov
sahf
adc
jns
sub
and
out
outs
mov
loop
retf
pop
mov
hlt
and
pop
xchg
pop
movups
xor
sbb
cmc
xor
lods
xchg
mov
add
and
push
repnz
fidivr
imul
xor
fidivr
or
repnz
mov
psllq
xor
rcl
push
fistp
in
lea
and
push
repnz
fistp
js
add
and
push
repnz
fidivr
inc
mov
and
push
repnz
xchg
jl
cli
out
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
int3
icebp
lods
jg
sbb
or
sar
mov
xchg
jge
cmps
enter
cs
sbb
inc
inc
fldl2e
dec
(bad)
xchg
inc
inc
mov
retf
cmovno
xor
xchg
jmp
mov
dec
sub
ja
xor
fistp
adc
xor
pop
push
repnz
fistp
adc
jg
in
scas
or
mov
adc
cmp
sbb
sub
aas
jge
mov
sbb
xchg
pop
add
pushf
mov
cmp
cmps
mov
sti
xchg
(bad)
mov
fldlg2
dec
hlt
pusha
lea
repnz
adc
xor
pop
pop
repnz
mov
movups
xor
push
mov
adc
jl
or
sub
sbb
mov
sti
out
xchg
mov
ror
sbb
mov
hlt
xchg
push
ss
and
or
test
mov
sti
out
xchg
mov
adc
jge
movs
mov
outs
popf
add
and
mov
fistp
push
xchg
sbb
rdmsr
and
xchg
(bad)
jecxz
xor
out
retf
pop
mov
mov
push
hlt
sub
rcr
(bad)
mov
or
nop
and
popa
mov
repnz
pop
mov
das
mov
add
and
repnz
int3
repnz
test
adc
std
and
xor
jl
pop
mov
push
adc
cmp
pop
push
retf
fbstp
pop
mov
push
adc
sbb
pop
push
dec
xor
mov
push
adc
or
pop
push
int
push
fbstp
pop
mov
movups
xor
pop
push
outs
xor
pushf
xchg
pop
mov
push
adc
adc
pop
push
call
xchg
pop
mov
push
adc
and
xor
xchg
xchg
pop
mov
or
push
xchg
and
xor
push
xchg
pop
mov
push
add
or
scas
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
aam
push
fist
movups
push
and
xor
adc
inc
adc
jne
pop
push
mov
lea
(bad)
out
jb
push
inc
push
sub
scas
dec
out
sbb
lods
in
and
call
inc
pop
(bad)
dec
into
xchg
dec
inc
stos
enter
aam
inc
push
add
in
and
mov
sbb
sar
jmp
mov
add
int
dec
js
cmp
mov
add
lea
xor
push
repnz
mov
adc
xor
pop
push
repnz
int3
repnz
xor
call
inc
dec
(bad)
dec
aam
jge
xchg
enter
cs
in
cmp
mov
and
mov
sbb
mov
out
xchg
pop
sub
scas
inc
(bad)
dec
int
jg
cdq
or
pop
cmps
loope
data16
shl
ja
in
sbb
lock
sahf
sub
xor
retf
and
dec
mul
movups
aas
and
xor
test
pop
mov
movups
sub
xlat
stos
and
dec
cdq
push
adc
dec
sub
adc
jne
stc
sbb
xchg
push
add
repz
mov
in
sub
jne
sbb
dec
jnp
das
inc
mul
sbb
mov
in
xchg
pop
or
hlt
push
mov
jmp
xchg
cs
arpl
repnz
mov
push
adc
xor
rcl
xor
mov
adc
dec
sub
inc
loope
dec
int3
scas
fisub
push
lock
xchg
push
cmp
or
dec
inc
mov
imul
adc
movs
sbb
push
mov
ret
into
test
cmp
movups
adc
clc
fistp
pop
pushf
dec
push
je
xor
bound
xor
mov
pmuludq
xor
mov
fistp
mov
adc
movs
xor
ss
repnz
jecxz
retf
lea
and
mov
paddw
xor
add
repnz
fidivr
pop
mov
and
xor
fidivr
adc
xor
inc
pop
loope
dec
int3
rep
sub
lock
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sub
lea
subps
add
mov
aaa
adc
xor
dec
pop
retf
and
inc
cdq
push
adc
inc
dec
sub
mov
call
mov
into
xchg
or
mov
and
mov
sbb
lods
enter
int3
push
jp
idiv
push
jnp
sub
stos
xchg
lock
sub
out
xchg
mov
fs
push
repnz
mov
sidtd
xor
dec
push
repnz
mov
inc
sub
sti
out
xchg
mov
fld
dec
int
jp
cdq
or
sbb
das
xor
loope
outs
inc
inc
imul
cs
ja
fidivr
mov
xchg
ja
mov
cmp
jns
or
scas
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
pop
mov
out
xchg
pop
sub
and
mov
push
cmp
inc
inc
xor
loope
outs
out
imul
cs
jne
sbb
inc
pop
(bad)
dec
aam
ja
mov
sbb
fbld
lds
adc
mov
repnz
mov
push
adc
xor
mov
dec
xchg
pop
mov
xchg
adc
jnp
or
fldenv
pop
mov
sub
syscall
adc
stos
and
stos
push
fistp
sbb
lea
add
repnz
mov
or
push
push
repnz
pop
stos
lock
add
inc
ss
xor
pop
push
repnz
pop
pop
mov
movups
xor
pop
push
repnz
mov
cmp
lea
neg
repnz
mov
lods
adc
xor
pop
push
repnz
jecxz
adc
xor
push
repnz
mov
adc
xor
pop
push
xacquire
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
sub
bound
div
movups
cmp
pop
push
std
xor
scas
xchg
pop
mov
movups
das
and
xor
cdq
xchg
pop
mov
movups
add
pop
push
(bad)
xor
test
lea
push
jbe
pop
push
mov
push
fcomip
xchg
pop
mov
sbb
mov
out
xchg
pop
sub
stos
dec
jmp
movs
shl
cmps
in
push
jae
(bad)
ds
jnp
sub
hlt
pusha
mov
cmp
sbb
sub
es
mov
adc
dec
sbb
out
jecxz
loopne
mov
in
scas
lock
jne
and
iret
or
test
mov
prefetcht0
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
pop
sub
sti
out
xchg
mov
rcr
cmps
shr
clc
xchg
and
(bad)
mov
sub
mov
xor
add
or
scas
or
mov
push
adc
cmps
in
push
gs
xlat
ds
jnp
sub
hlt
popa
mov
cld
sbb
mov
inc
fsubr
int3
or
jnp
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
in
jb
push
jns
(bad)
ds
jnp
sub
hlt
push
mov
or
sbb
sub
popa
dec
shl
push
out
imul
mov
retf
sbb
hlt
pop
mov
add
add
sub
stos
stos
and
jne
(bad)
and
fwait
cs
jl
xlat
aaa
ja
in
mov
lods
mov
pop
cmp
or
mov
repnz
mov
movups
adc
or
lods
into
test
lods
ret
sbb
mov
in
xchg
pop
and
and
pushf
xchg
mov
add
and
inc
pop
loope
dec
jmp
lock
lods
lea
push
adc
pop
push
repnz
fidivr
pop
xchg
push
add
mov
fs
repnz
fistp
call
and
repnz
fidivr
or
and
push
repnz
mov
psubd
xor
out
repnz
mov
setns
and
xor
mov
(bad)
mov
and
repnz
fidivr
inc
mov
and
push
repnz
fidivr
popa
mov
pop
inc
inc
loope
outs
mov
imul
add
and
repnz
mov
sysret
lea
and
repnz
mov
(bad)
lea
and
repnz
xchg
push
lea
and
mov
imul
cli
push
test
loopne
(bad)
fdivr
ja
in
mov
mov
cs
ja
call
cs
mov
sbb
inc
arpl
sbb
mov
push
sub
jnp
xor
fistp
adc
xor
push
repnz
mov
adc
arpl
stc
scas
or
popa
inc
scas
enter
cs
jne
sbb
inc
dec
(bad)
dec
rcl
add
or
scas
or
mov
or
sub
mov
int3
movs
mov
cld
pop
add
cmp
xor
xor
mov
pop
mov
movups
and
pop
push
in
push
fbld
cmp
jb
or
and
sbb
lods
cmc
and
xchg
or
push
mov
in
test
lods
jmp
mov
fnop
dec
int3
xchg
or
pop
add
cmp
cmp
jmp
jge
cdq
add
pop
push
add
mov
push
adc
or
mov
hlt
stos
xchg
repz
mov
in
xchg
pop
adc
pop
push
repnz
push
jecxz
pop
push
xor
add
xor
mov
push
adc
cmp
dec
jl
cmp
mov
pop
push
cmps
add
and
xor
mov
movups
xor
pop
popa
repz
mov
movups
xor
pop
jae
xor
mov
movups
pop
adc
xor
pop
in
repz
mov
movups
xor
pop
ja
xor
mov
movups
adc
xor
pop
sbb
xor
mov
movups
adc
xor
pop
repz
mov
movups
adc
xor
pop
lahf
repz
mov
movups
xor
pop
cwde
repz
mov
dec
add
add
and
repnz
mov
invd
lea
and
xor
mov
(bad)
lea
and
repnz
mov
sqrtps
xor
adc
repnz
fistp
inc
lea
and
loope
outs
ss
imul
or
fwait
mov
in
sbb
mov
cs
jne
sbb
inc
inc
fxam
dec
into
xchg
inc
inc
nop
enter
(bad)
sbb
inc
jp
icebp
dec
(bad)
xchg
sub
enter
cmps
jne
sbb
dec
rcl
test
push
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
inc
mov
imul
cli
pop
cmps
test
ja
in
cmp
mov
add
push
adc
mov
sub
test
sbb
stos
lock
sub
and
lods
dec
call
mov
cdq
add
cmp
cmp
jnp
sub
mov
add
(bad)
xlat
inc
and
xor
mov
add
fistp
cmp
in
cmp
mov
shr
jb
add
xor
pop
push
cli
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
repnz
jb
add
sub
adc
mov
cmp
cmp
dec
jmp
add
sub
dec
cld
add
jl
sbb
mov
clc
sbb
mov
sub
arpl
mov
imul
pop
cmp
cmp
jnp
and
add
daa
add
cmp
ds
jnp
sub
int3
or
jo
out
jne
sbb
dec
inc
fisubr
int3
or
jo
out
jne
sbb
inc
inc
jmp
inc
repz
push
add
cmp
ss
sar
fistp
cmp
add
and
stc
push
fistp
iret
lea
add
mov
fs
repnz
mov
(bad)
mov
and
push
repnz
fidivr
adc
xor
rcl
xor
mov
jle
movs
xor
lds
xor
fidivr
mov
movs
xor
pop
push
repnz
mov
por
xor
fst
xor
mov
bsr
and
fidivr
or
inc
push
jp
popa
sbb
scas
or
test
jecxz
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
popa
sbb
or
popa
inc
test
cs
jne
sbb
inc
jnp
sub
hlt
pop
mov
cmp
push
jb
in
inc
jnp
sub
hlt
jb
push
cdq
sub
cmp
cmp
dec
jecxz
jmp
adc
sahf
push
sub
jge
xor
fistp
adc
xor
push
fistp
adc
popa
sbb
scas
or
popa
inc
cdq
adc
or
sub
sbb
lods
jmp
add
pushf
dec
fbld
enter
mov
div
sbb
dec
jnp
and
inc
mov
add
and
repnz
mov
clts
lea
jb
adc
test
lods
jmp
push
fnstcw
push
jnp
sub
mov
sub
arpl
pop
sub
hlt
push
mov
push
adc
outs
adc
inc
mov
loope
outs
fild
mov
cmps
jmp
or
ret
mov
or
lea
and
add
mov
push
sub
jo
xor
pushf
test
mov
daa
sub
and
add
adc
mov
push
lea
and
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
dec
adc
sub
test
mov
enter
movs
cmp
pop
push
push
push
fild
movups
das
and
xor
cdq
xchg
pop
mov
movups
add
pop
push
(bad)
xor
test
lea
push
jbe
pop
push
in
cmp
mov
add
lock
je
ret
ds
jnp
sub
hlt
push
mov
push
adc
cmps
in
jnp
out
ds
jnp
sub
hlt
imul
inc
outs
sub
and
mov
add
aaa
pop
add
pusha
inc
dec
loope
outs
adc
imul
add
and
repnz
mov
wbinvd
lea
and
repnz
scas
shl
lock
xchg
cs
mov
(bad)
dec
ret
xchg
jle
cdq
add
add
in
ds
inc
mov
dec
int3
call
lock
(bad)
fdiv
ja
in
mov
scas
enter
fisttp
jns
and
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
or
sbb
pushf
mov
(bad)
inc
hlt
push
mov
or
push
sahf
inc
push
jb
sbb
or
gs
mov
cs
jne
sbb
dec
jnp
sub
mov
sbb
mov
in
xchg
pop
sub
mov
(bad)
dec
hlt
push
(bad)
jne
clc
and
(bad)
adc
mov
pop
push
imul
int3
call
lock
lahf
add
imul
and
movs
nop
jge
lea
sbb
dec
adc
sub
test
xor
add
push
jae
pop
push
fimul
push
fistp
push
pop
movs
xor
je
repz
mov
xlat
mov
rdtsc
sbb
adc
sahf
and
xor
scas
ror
sub
imul
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
sbb
inc
push
fs
sbb
scas
or
test
jecxz
adc
xor
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
mov
and
lea
adc
add
fistp
adc
sbb
or
mov
cli
and
fwait
cs
jne
sbb
inc
jnp
sub
jne
cld
adc
push
sbb
inc
jae
add
in
cmp
adc
pop
cmp
add
sub
and
mov
sbb
in
sbb
mov
out
xchg
pop
and
sbb
xor
mov
movups
xor
pop
dec
repnz
mov
movups
lods
fbld
shr
call
and
mov
shr
push
adc
push
ror
fisub
hlt
push
mov
cld
add
gs
ret
inc
jnp
and
sbb
add
and
xor
mov
movups
or
mov
sub
and
nop
cs
jno
fidivr
adc
cmp
mov
jg
sbb
sub
mov
(bad)
dec
rcl
adc
sahf
push
sub
int
inc
pop
loope
dec
shr
lock
xchg
cs
jae
sar
ja
jmp
mov
xchg
dec
dec
mov
or
aas
pushf
in
mov
add
loop
pop
xchg
or
mov
lock
add
fdivr
pop
push
push
repnz
outs
stos
mov
pop
add
inc
xor
xor
fistp
adc
xor
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
jge
lea
fstp
xor
mov
xchg
adc
xor
push
repnz
mov
or
lea
dec
pop
push
repnz
mov
add
lea
xor
push
lods
xlat
sbb
add
and
xor
mov
movups
xor
pop
jno
xor
mov
movups
xor
pop
repnz
mov
movups
xor
pop
inc
loope
outs
int3
inc
imul
adc
fwait
mov
(bad)
dec
hlt
pop
mov
add
cmp
add
sub
test
sbb
lods
hlt
and
(bad)
sbb
inc
dec
fyl2x
dec
rcl
push
sahf
xor
xor
push
lods
movs
sbb
add
and
xor
mov
movups
xor
pop
jb
xor
test
or
adc
pushf
mov
sti
sbb
stos
enter
cs
sar
inc
jnp
and
pushf
mov
icebp
out
jb
pop
inc
push
and
fild
push
mov
cld
push
cmp
cmp
inc
out
sub
int3
dec
out
jb
add
aaa
and
xor
mov
pop
mov
movups
sub
pop
push
in
sub
test
(bad)
lock
js
ret
cmp
in
cmp
jne
stc
sbb
nop
push
inc
push
cmps
int3
fisub
shl
or
(bad)
cmp
pusha
in
adc
push
push
lock
nop
cs
(bad)
fistp
mov
xchg
jo
dec
in
adc
xor
jl
icebp
xor
adc
lea
push
inc
xchg
and
rcl
jbe
mov
or
lea
xor
pop
xor
pushf
jns
mov
daa
mov
movs
sub
fs
mov
movups
add
push
xor
pop
push
repz
mov
movups
xor
pop
das
repz
mov
movups
adc
xor
pop
cmp
xor
mov
movups
add
push
xor
pop
psllq
push
sar
adc
add
push
xor
pop
push
repz
mov
movups
add
push
xor
pop
div
xor
mov
movups
cmp
sbb
and
out
imul
add
and
xor
mov
movups
xor
pop
jo
xor
mov
movups
xor
pop
(bad)
xor
mov
movups
xor
pop
dec
in
and
out
imul
sbb
or
shl
repz
inc
dec
ftst
dec
rcl
xsha1
cmps
leave
push
inc
ins
or
rcl
add
sbb
jns
or
mov
call
adc
and
pop
push
out
push
fbld
adc
sub
xchg
test
inc
mov
push
adc
jg
sbb
sub
sbb
test
inc
push
jns
gs
scas
or
mov
cld
add
data16
cmp
cs
stos
xchg
out
sbb
xchg
push
add
scas
jecxz
adc
mov
movups
xor
pop
inc
repnz
mov
pop
sub
or
shr
push
sub
jbe
jbe
dec
inc
movs
or
imul
dec
cmps
jmp
inc
dec
sub
mov
cld
sbb
mov
push
sub
jnp
and
xor
jmp
and
xor
sbb
adc
xor
jl
icebp
xor
adc
aad
dec
das
test
and
xor
mov
movups
add
push
xor
pop
pop
repnz
mov
movups
xor
pop
mov
mov
movups
xor
pop
retf
push
mov
loop
adc
add
push
xor
pop
scas
repnz
mov
movups
xor
pop
jb
xor
mov
movups
xor
pop
inc
repz
mov
dec
or
int
dec
adc
mov
add
lea
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
push
sahf
pop
sub
fiadd
fld
dec
rcl
loop
xchg
cs
jne
sbb
inc
inc
(bad)
dec
ret
inc
stos
enter
ror
data16
loopne
push
jnp
sub
hlt
jbe
inc
cdq
and
push
js
mov
dec
jnp
sub
mov
sbb
mov
out
xchg
pop
and
sbb
xor
mov
movups
and
xor
mov
movups
xchg
fbld
sub
and
call
inc
dec
fnop
dec
rcl
or
int
inc
pop
fld
dec
hlt
push
mov
or
pop
cmps
loop
popa
(bad)
shl
ja
in
mov
scas
mov
cmps
adc
aad
inc
xchg
pop
int
inc
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
cmp
jb
or
sub
sbb
scas
enter
inc
or
or
mov
hlt
dec
mov
std
and
xchg
or
cmp
sub
int3
stc
(bad)
dec
jmp
inc
dec
sub
mov
(bad)
inc
hlt
pop
(bad)
jne
in
mov
loope
outs
or
mov
pop
js
or
cwde
pop
mov
jle
lea
and
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
cdq
adc
xor
push
fistp
adc
xor
pop
int3
cli
or
push
jb
add
and
pop
push
sti
xor
mov
pop
mov
movups
sub
pop
push
out
xor
popf
xchg
pop
mov
movups
pop
and
xor
mov
lea
adc
jae
pop
push
mov
push
fcomip
xchg
pop
mov
cs
cmp
ds
jnp
sub
hlt
dec
mov
adc
cmps
in
push
fs
xlat
ds
jnp
sub
hlt
popa
mov
cmp
add
ror
dec
(bad)
jecxz
inc
jnp
sub
hlt
jne
dec
cdq
adc
cmps
les
jb
(bad)
ds
jnp
sub
hlt
or
push
fwait
push
dec
push
sbb
fisub
fistp
sbb
movs
xor
dec
push
repnz
mov
rdtsc
lea
js
ret
or
test
mov
push
sbb
inc
pop
(bad)
dec
int3
xchg
jbe
mov
inc
pop
jns
or
or
(bad)
jne
clc
and
xchg
cs
jno
aam
ja
in
cmp
add
dec
pop
sahf
pop
sub
pop
int
dec
jo
ss
fistp
adc
xor
pop
push
repnz
dec
mov
cli
out
jb
les
inc
jnp
das
jge
mov
and
xchg
push
push
jl
imul
scas
or
inc
mov
cs
jb
aad
push
jnp
sub
stos
xchg
movs
lock
sub
out
xchg
mov
rol
pop
sub
movs
mov
push
nop
sbb
adc
and
adc
push
fistp
mov
adc
and
xor
xchg
scas
pop
mov
daa
adc
and
repz
test
mov
cli
out
jl
add
dec
push
in
movntq
imul
movs
adc
pop
push
repnz
fidivr
adc
xor
je
repnz
mov
push
dec
enter
movs
and
xor
dec
xchg
pop
mov
or
(bad)
out
push
std
and
xor
jg
pop
mov
push
adc
pop
and
xor
adc
adc
xor
pop
push
pop
xor
ds
pop
mov
or
push
stos
and
xor
ins
xchg
pop
mov
or
push
(bad)
and
xor
imul
push
push
and
xor
jp
pop
mov
push
adc
mov
pop
push
cmp
push
fbstp
xchg
pop
mov
push
adc
scas
and
xor
inc
xchg
pop
mov
movups
in
and
xor
or
adc
scas
and
xor
sbb
adc
clc
and
xor
jb
pop
mov
push
adc
out
and
xor
outs
xchg
pop
mov
push
adc
sub
and
push
push
dec
repnz
push
lods
add
and
xor
mov
movups
xor
pop
jo
xor
mov
movups
xor
pop
repnz
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
scas
into
callw
out
xchg
sbb
lahf
mov
in
sbb
lods
(bad)
and
xchg
sub
mov
out
pop
lea
rcl
or
rcr
lods
xchg
or
sar
inc
and
outs
mov
cmp
sub
std
dec
rcr
shr
test
and
rol
mov
inc
mov
cli
push
jae
dec
fisub
shl
sub
out
xchg
mov
fs
push
repnz
mov
str
xor
inc
push
repnz
mov
sysenter
lea
and
repnz
mov
movaps
xor
sbb
repnz
scas
into
data16
push
lock
xchg
cmp
lahf
mov
rcr
mov
lods
fisub
xchg
adc
mov
call
pop
cmp
xchg
fbstp
sbb
inc
pop
fprem1
dec
lds
mov
pushf
push
push
jl
push
int3
dec
ret
inc
mov
cs
jne
sbb
inc
jnp
sub
hlt
arpl
cmp
cmp
dec
(bad)
sbb
lods
jmp
(bad)
lea
inc
test
sbb
jne
dec
or
xlat
stos
and
jg
jmp
adc
aas
and
xor
test
movups
adc
pop
push
xlat
xor
mov
mov
pop
pop
ds
jnp
sub
hlt
push
mov
or
and
sar
dec
jnp
sub
hlt
mov
cmc
sbb
mov
in
xchg
pop
das
or
shr
xchg
or
mov
(bad)
dec
rcl
adc
sahf
inc
pop
jns
or
scas
or
cwde
jne
cld
add
mov
fldz
dec
hlt
data16
jne
in
and
pop
frstor
shr
sub
sbb
inc
inc
(bad)
sub
int3
sti
or
sbb
jb
pop
inc
dec
sub
jge
sti
and
mov
sbb
out
xchg
mov
fisub
fistp
add
lods
mov
push
adc
pop
push
repnz
xchg
dec
pushf
jmp
pop
int
inc
jl
(bad)
dec
int3
sti
or
retf
jmp
cmp
fs
cmp
stos
xchg
push
hlt
out
jb
sbb
dec
and
je
int3
out
ror
push
test
and
dec
inc
test
fldenv
imul
push
sbb
and
cmp
push
mov
repnz
push
pop
adc
mov
sti
push
fistp
or
xchg
sub
fisub
cwde
stos
xchg
scas
hlt
out
jb
add
cmp
sbb
imul
lock
test
and
dec
inc
test
jge
inc
imul
jecxz
adc
movs
sub
push
pop
mov
movups
xor
pop
mov
mov
movups
add
push
xor
pop
aas
repz
mov
movups
xor
pop
sub
xor
mov
movups
add
push
xor
pop
cmp
xor
mov
movups
push
xor
pop
inc
lock
mov
movups
add
push
xor
pop
jno
xor
mov
movups
xor
pop
ja
xor
mov
movups
and
xor
mov
movups
adc
xor
pop
dec
lock
mov
movups
add
push
xor
pop
and
xor
mov
inc
push
sahf
push
dec
push
or
jbe
fistp
sbb
add
and
repnz
mov
femms
lea
and
repnz
mov
mov
add
and
repnz
mov
orps
xor
adc
xor
mov
cmovnp
xor
ds
repnz
scas
iret
popw
sbb
cmp
inc
(bad)
dec
hlt
push
mov
add
cmp
in
ds
jnp
sub
hlt
imul
cmps
retf
(bad)
stc
ds
jnp
sub
hlt
jg
push
cdq
pop
adc
cmps
mov
ds
inc
sub
hlt
adc
cmp
sub
sub
imul
add
pushf
jp
mov
aam
xchg
pop
mov
add
and
xor
mov
movups
xor
pop
ja
xor
mov
movups
fbld
sub
and
xchg
adc
cmp
ror
xchg
dec
inc
pushf
enter
cs
jne
sbb
inc
jge
cld
dec
enter
mov
clc
out
xchg
mov
clc
sbb
mov
cs
sbb
inc
inc
fldl2t
dec
leave
xchg
inc
inc
movs
enter
fbstp
sbb
dec
inc
shr
int3
mov
add
int
dec
jb
xor
fistp
adc
xor
pop
push
repnz
fistp
adc
imul
dec
hlt
dec
mov
adc
cmp
sbb
ja
in
add
mov
sbb
xchg
push
add
pushf
jbe
mov
shl
sti
xchg
div
(bad)
ss
in
aas
jge
cmps
xchg
(bad)
sbb
mov
in
xchg
pop
sub
and
test
cmp
cmp
jnp
and
push
movs
mov
outs
popf
add
and
mov
mov
or
cli
add
push
js
pop
push
(bad)
push
fistp
or
(bad)
out
retf
pop
mov
hlt
dec
push
fistp
adc
sbb
pop
push
hlt
adc
xor
jne
adc
sbb
pop
push
hlt
adc
xor
jne
adc
add
adc
movups
add
je
repz
cmp
adc
xor
dec
jo
xor
pushf
cli
pop
mov
daa
pop
mov
cmp
retf
and
ja
push
adc
sahf
dec
push
jns
imul
dec
rcl
adc
sahf
pop
sub
fiadd
loope
dec
int3
scas
iret
xchg
pop
lock
nop
cs
jge
adc
dec
inc
mov
lods
push
dec
sbb
push
xchg
and
mov
imul
inc
imul
add
and
xchg
push
fistp
xor
add
push
mov
cmc
push
fistp
or
lods
hlt
adc
adc
pop
push
repnz
mov
unpckhps
and
xor
pop
xchg
hlt
or
push
push
repnz
push
lea
xor
movs
xor
jl
repz
je
pop
mov
adc
add
and
xor
mov
movups
sbb
pop
push
hlt
and
retf
call
jne
and
or
sbb
fistp
adc
xor
push
repnz
pop
mov
not
lea
jbe
push
repnz
push
fistp
adc
xor
push
repnz
mov
mov
or
lea
addr16
push
repnz
dec
pop
mov
hlt
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
mov
out
adc
jnp
push
inc
scas
or
inc
imul
sbb
lea
sub
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
jns
mov
out
jne
sbb
inc
pop
fld
dec
(bad)
xchg
jns
cdq
enter
cs
jne
sbb
inc
jae
out
inc
hlt
mov
xor
push
dec
(bad)
cld
cmp
sahf
enter
cdq
and
cmp
sub
sbb
mov
sub
sbb
inc
add
cmp
mov
add
sar
xor
stc
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fnstenv
push
fist
sbb
xchg
pop
int
inc
jnp
sub
jne
cld
sbb
sbb
inc
inc
sub
aas
jge
mov
and
xchg
and
mov
dec
loopne
pop
shl
out
jb
add
sub
sbb
jmp
into
jne
sbb
inc
pop
ftst
dec
hlt
push
adc
cmps
leave
pop
jns
das
xor
sti
and
shl
out
jb
xor
mov
repnz
mov
movups
xor
pop
dec
repnz
mov
sbb
mov
in
xchg
pop
sub
adc
mov
add
fs
cmp
clc
sbb
mov
clc
out
xchg
mov
sbb
mov
cld
sbb
imul
xor
jmp
lods
out
sbb
mov
in
xchg
pop
sub
mov
(bad)
dec
hlt
push
mov
clc
and
xchg
cs
jb
out
pop
dec
push
repnz
jbe
mov
movups
xor
call
xor
mov
movups
add
mov
sub
adc
xor
jl
repz
je
pop
mov
jb
push
xor
xor
and
shl
push
fistp
lea
sti
push
fisub
push
mov
or
or
and
imul
cmp
or
xchg
adc
adc
push
repnz
mov
movhps
xor
enter
jle
mov
adc
pop
int
inc
dec
fld
dec
int3
cmc
mov
mov
out
jne
sbb
inc
inc
les
int3
cmc
mov
mov
out
jge
fdivr
dec
jae
and
mov
pop
lods
out
sbb
mov
in
xchg
pop
sub
mov
loop
push
fistp
cmp
xor
pop
jo
xor
pushf
push
pop
mov
daa
std
mov
and
shl
push
fistp
cmp
add
ins
fidiv
pop
push
sar
add
loop
pop
repz
push
adc
push
repnz
fnstsw
pop
lods
inc
sti
mov
sub
retf
xor
pop
xchg
and
imul
jbe
mov
push
adc
jns
pop
push
rcl
push
fistp
add
xor
out
push
repnz
mov
adc
sahf
pop
add
loope
and
xor
mov
movups
outs
and
xor
in
pop
mov
push
adc
dec
and
xor
rcl
lea
and
xor
push
xchg
pop
mov
movups
and
xor
fcom
adc
mov
xor
out
xchg
pop
mov
push
adc
les
pop
push
in
cmp
mov
jnp
jb
add
loope
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
mov
push
in
sub
test
cmps
lock
jg
ret
ds
jnp
sub
hlt
push
lea
cli
and
nop
cs
jne
sbb
inc
dec
fldpi
dec
int
inc
inc
movs
enter
fnsave
sbb
inc
jnp
sub
hlt
jge
dec
test
sbb
xchg
or
aaa
pushf
rcr
mov
fnstcw
adc
xor
pop
inc
repnz
mov
movups
mov
mov
shr
nop
cs
jne
sbb
inc
jnp
sub
int3
test
jae
out
jne
sbb
inc
pop
(bad)
dec
aad
jge
mov
out
pusha
(bad)
in
cmp
out
and
mov
add
adc
das
mov
repnz
mov
movups
xor
pop
dec
jmp
push
dec
cld
adc
inc
push
or
leave
xchg
jae
mov
pop
sub
int
inc
pop
fld
dec
hlt
push
mov
or
cmp
sbb
sub
imul
dec
shr
lock
xchg
cs
jae
fidivr
ja
jmp
mov
xchg
ja
scas
(bad)
adc
cmp
push
xor
dec
inc
shr
push
fistp
cmp
adc
ds
inc
lods
and
call
adc
xor
pop
push
stc
xor
inc
xchg
pop
mov
movups
imul
push
mov
xchg
pop
mov
push
adc
xor
pop
push
movs
xor
aad
pop
mov
push
adc
inc
and
xor
pusha
xchg
pop
mov
push
adc
popa
and
xor
aas
xchg
pop
mov
push
adc
cmp
pop
push
pop
xor
dec
xchg
pop
mov
push
adc
and
and
rcl
jecxz
sbb
xor
dec
push
repnz
mov
prefetchw
xor
jg
repnz
mov
(bad)
lea
and
repnz
mov
femms
test
dec
push
or
mov
shr
cld
call
inc
pop
(bad)
dec
hlt
arpl
sbb
loope
inc
jnp
sub
hlt
ja
push
cdq
and
add
lea
dec
push
scas
retf
sbb
push
ins
movs
xor
push
push
repnz
mov
lar
xor
inc
push
repnz
scas
retf
sbb
out
mov
rol
sbb
mov
cld
pop
cmp
add
mov
or
test
scas
enter
jmp
cmp
jge
cmps
xchg
jmp
dec
push
(bad)
int3
fisub
fistp
sbb
movs
xor
dec
push
repnz
mov
push
sub
sti
out
xchg
mov
fld
dec
leave
xchg
jp
mov
loop
jns
sub
add
int
and
and
call
push
jnp
sub
mov
sbb
jb
pop
jns
sub
add
int
and
jmp
cmps
in
inc
jp
or
and
adc
xor
adc
xor
fdivr
sbb
xor
cmc
pop
repnz
xchg
in
jecxz
xor
xor
pop
push
repnz
fdivr
retf
adc
xor
push
push
repnz
mov
cmovl
xor
ins
push
repnz
xchg
pop
mov
xadd
xor
imul
xchg
push
mov
push
adc
xor
push
push
repnz
mov
bndstx
xor
shl
sub
mov
rdmsr
lea
and
xor
mov
movsx
xor
push
push
repnz
mov
(bad)
mov
and
repnz
xchg
pop
mov
emms
lods
add
and
repnz
mov
push
add
xor
dec
push
repnz
mov
add
push
xor
push
repnz
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
xor
sub
fst
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
in
and
retf
imul
push
cmp
pop
(bad)
dec
aam
jl
mov
cs
ja
out
icebp
jl
repnz
pop
mul
movups
cmp
pop
push
cld
xor
scas
xchg
pop
mov
movups
int
mov
iret
xchg
addr16
mov
jmp
cmp
dec
inc
and
inc
cdq
push
adc
jg
cmp
jnp
jecxz
fidivr
sbb
pop
sbb
jl
repnz
pop
sbb
adc
xor
imul
dec
jecxz
adc
add
repnz
push
fistp
adc
xor
push
repnz
mov
hlt
adc
xor
push
repnz
pop
mov
(bad)
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
std
pop
mov
lea
lea
in
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
bnd
pop
mov
mov
imul
push
fistp
xor
sub
push
or
cdq
dec
sbb
or
movs
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
jecxz
adc
xor
push
repnz
push
fistp
adc
or
scas
or
mov
adc
sbb
fdivr
push
jnp
sub
hlt
pop
mov
cmp
push
pop
(bad)
in
inc
jnp
sub
hlt
jb
inc
cdq
sub
cmp
xor
addr16
adc
mov
and
xchg
and
fidivr
loope
inc
xchg
xor
adc
cmps
fwait
push
dec
(bad)
jnp
sub
mov
sbb
push
aad
imul
jbe
test
dec
sbb
sbb
sbb
addr16
fstp
mov
fistp
sbb
movs
xor
dec
push
repnz
mov
femms
lea
and
repnz
mov
mov
add
and
dec
sti
and
inc
cmps
enter
cs
sbb
inc
jnp
sub
hlt
pop
mov
add
cmp
fimul
inc
(bad)
jnp
sub
hlt
outs
mov
sub
cmp
or
sub
outs
scas
inc
imul
or
test
jmp
mov
into
xchg
sbb
mov
sbb
inc
dec
(bad)
dec
rcl
ret
push
xchg
fnstenv
sbb
mov
xor
mov
add
lods
or
inc
pop
int
inc
pop
in
and
pushf
cdq
data16
push
lock
mov
push
xor
pop
push
repnz
mov
sbb
lea
cmp
sub
fistp
sbb
jmp
cmps
in
and
mov
adc
sbb
inc
inc
sub
aas
jge
mov
add
lods
or
scas
pop
int
inc
jnp
sub
hlt
dec
mov
nop/reserved
fs
cmp
fldlg2
dec
enter
mov
and
fisub
hlt
push
mov
std
and
xchg
or
mov
fldz
dec
hlt
inc
jg
jecxz
aaa
fwait
femms
jnp
sub
iret
test
mov
cmp
das
pop
pop
not
lahf
in
pop
mov
nop
aas
sbb
retf
inc
mov
ds
xchg
pop
sub
cmp
mov
jle
(bad)
pop
cmp
stc
sub
shl
repz
jb
cmp
dec
loop
dec
push
lock
xor
pop
jo
xor
xchg
dec
pop
mov
and
mov
fs
int3
test
mov
hlt
out
jb
add
adc
or
test
and
mov
movs
xor
fs
repz
stc
(bad)
pop
mov
rcl
lea
in
pop
push
repnz
mov
xchg
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
mov
daa
adc
xor
pop
push
repnz
mov
sahf
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
aaa
pop
mov
cmp
push
push
repnz
fistp
adc
xor
jp
retf
cmp
mov
push
sti
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
xor
cmp
ds
jnp
sub
hlt
dec
mov
or
push
jbe
aam
ja
in
sbb
mov
sub
pop
sbb
inc
ja
popa
ja
in
cmp
adc
mov
cmp
or
das
or
dec
in
out
rol
mov
xchg
sbb
dec
hlt
push
mov
jge
or
movs
cmp
in
adc
jne
cld
sub
or
push
inc
daa
sub
int3
test
mov
adc
fs
fisub
shl
lock
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
lahf
xchg
pop
mov
movups
sbb
xor
mov
lea
adc
sub
into
test
inc
cld
cmp
jg
push
inc
dec
sub
add
cmp
and
xchg
pop
cmp
dec
loopne
test
test
ret
push
pushf
fnstenv
ds
jnp
sub
shl
repnz
jb
cmovno
sub
in
sub
movs
mov
cmc
xchg
or
mov
loopne
mov
stos
mov
rcl
or
mov
sahf
lods
out
and
pop
daa
adc
adc
push
pop
call
lods
xchg
lock
stos
aas
sbb
call
adc
and
pop
push
out
push
fbld
adc
adc
pop
push
aad
push
fbld
repz
jb
xor
sub
cs
mov
pop
cmp
das
inc
inc
sub
or
(bad)
rol
push
or
pop
pop
int
inc
dec
fld
dec
into
xchg
jnp
stos
enter
in
push
jns
(bad)
ds
jnp
sub
hlt
pusha
(bad)
jne
cld
pop
cmp
sbb
sub
iret
test
scas
enter
jmp
ds
jnp
sub
hlt
pop
mov
aas
adc
inc
jno
add
hlt
adc
push
lods
in
add
cmp
sub
in
cmp
mov
xchg
push
dec
das
cmps
xor
pop
pop
repnz
mov
add
imul
or
shl
shl
jne
sbb
inc
jnp
and
rol
out
xchg
or
fs
or
mov
sbb
xchg
fisub
shl
lock
inc
and
sub
mov
data16
out
(bad)
sbb
pop
mov
pop
push
fdiv
jbe
mov
or
push
xor
dec
pop
in
cmp
mov
push
mov
cli
adc
ss
push
repnz
test
loop
adc
mov
repnz
mov
adc
xor
pop
push
repnz
pop
mov
sub
lea
fcomp
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
outs
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
sbb
(bad)
adc
xor
push
bnd
pop
mov
dec
adc
xor
push
fistp
adc
xor
repnz
fidivr
sub
out
xchg
mov
or
test
mov
or
lea
cs
push
repnz
mov
adc
lea
add
adc
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
push
mov
sub
jg
and
dec
sub
(bad)
cmp
aaa
cmp
cmp
sub
or
or
cld
add
inc
sbb
inc
bound
adc
mov
cmp
cmp
cmp
mov
clc
sbb
shl
mov
cmp
cmc
mov
imul
sub
and
mov
sub
out
imul
cli
out
xchg
je
and
sub
shl
repnz
jb
add
aas
sub
loopne
int3
test
mov
pop
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
add
pop
int
ja
in
sub
mov
cmp
cmp
inc
(bad)
dec
hlt
bound
cmp
ror
pop
(bad)
loopne
jnp
cmp
dec
hlt
jbe
jl
and
push
jge
sub
into
test
lods
mul
xchg
(bad)
mov
(bad)
dec
int3
xchg
jne
mov
cs
cmp
jge
cmps
mov
fst
and
xor
call
or
mov
int
inc
pop
in
add
jae
mov
or
scas
pop
int
pop
adc
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
in
sbb
mov
jnp
add
sub
sub
jne
cld
and
outs
sbb
inc
jp
pop
ja
in
add
out
aaa
je
cli
out
jne
sbb
inc
dec
(bad)
dec
rcl
or
sar
inc
jnp
sub
mov
sbb
pushf
add
sbb
enter
in
push
addr16
(bad)
ds
jnp
sub
movs
mov
(bad)
pop
adc
adc
push
dec
(bad)
outs
xlat
inc
imul
push
sbb
movs
stos
or
mov
mul
movups
and
sub
arpl
dec
cld
cmp
cmp
pop
dec
fwait
and
imul
cld
push
test
(bad)
jge
sub
out
and
imul
adc
bound
sbb
cmp
push
dec
(bad)
outs
jnp
imul
jmp
sub
dec
(bad)
and
imul
add
xor
jl
icebp
xor
xchg
xchg
pop
mov
inc
adc
adc
call
movhps
cmp
push
dec
(bad)
outs
mov
mov
mov
xor
jle
repnz
mov
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
mov
imul
push
fistp
adc
xor
push
repnz
mov
jg
lea
sbb
daa
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
leave
pop
mov
mov
lea
out
push
repnz
fidivr
sub
and
push
or
mov
jecxz
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
pop
mov
and
lea
pop
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
repnz
push
fistp
adc
xor
push
repnz
rol
cmp
sbb
sub
sbb
lods
cld
and
xchg
sbb
mov
out
mov
mov
mov
pop
cmp
dec
ficomp
xchg
rcr
push
nop
cs
mov
fld
inc
mov
cs
mov
fldcw
inc
mov
xor
js
repnz
inc
cwde
out
aaa
adc
cli
out
jo
sub
into
test
mov
nop
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
out
sbb
push
cdq
cs
sbb
inc
dec
(bad)
inc
hlt
push
mov
add
xor
in
ss
in
sub
cmps
mov
rcl
or
cmc
mov
and
lock
xchg
cs
mov
into
inc
pop
(bad)
dec
aad
jae
test
in
push
sub
jbe
out
ds
jnp
das
jge
mov
add
inc
ins
sub
call
mov
cli
add
cmps
or
push
pop
int
inc
pop
jmp
dec
cmc
mov
jae
sbb
pop
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
in
xor
lahf
xchg
pop
mov
and
sub
sbb
sub
cli
and
xchg
sub
lea
xlat
sbb
scas
out
adc
cmp
push
jnp
and
jne
cld
adc
sbb
mov
int
dec
dec
mov
or
(bad)
pop
int
inc
pop
fld
dec
hlt
push
mov
or
mov
sub
jge
ins
mov
mov
sub
xchg
pop
mov
ror
int3
test
lods
leave
add
stc
stc
out
xchg
mov
stos
jbe
fistp
push
mov
int
inc
jno
lds
mov
je
fild
jb
push
jl
sar
dec
(bad)
sub
rol
sbb
cmp
push
dec
fdivr
outs
repz
imul
sbb
addr16
sub
cmp
mov
repz
jb
xor
cmps
xor
jl
icebp
xor
addr16
pop
mov
sbb
xchg
push
or
sbb
movs
or
test
and
mov
movs
xor
fs
repz
stc
aam
mov
loop
lea
and
enter
jge
mov
adc
lea
daa
pop
push
repnz
mov
and
lea
cld
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
ficom
lea
rcr
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
bnd
fistp
adc
xor
push
fistp
aaa
xchg
sub
fisub
and
push
test
adc
and
xor
test
pop
mov
movups
adc
pop
push
(bad)
xor
fwait
xchg
pop
mov
movups
add
pop
push
lds
push
fild
movups
je
pop
push
mov
xchg
pop
mov
movups
imul
push
scas
xor
fcom
lea
push
pop
and
xor
enter
fwait
movups
mov
pop
push
in
add
jmp
mov
jnp
ss
push
sub
push
jge
mov
adc
outs
sbb
xchg
sbb
lods
mul
xchg
sub
mov
dec
in
sbb
test
mov
xchg
test
bound
sub
hlt
adc
pop
cmps
mov
sbb
in
sbb
inc
mov
push
cmp
sbb
inc
sub
sbb
mov
lock
xchg
or
adc
fimul
mov
add
dec
clc
out
xchg
mov
dec
out
and
pop
imul
movups
and
xor
scas
xchg
pop
mov
movups
sub
xor
fwait
xchg
pop
mov
movups
add
pop
push
les
push
fild
movups
pop
fsub
sub
and
xchg
sub
cmp
mov
sub
sbb
inc
dec
(bad)
dec
cli
xchg
pop
inc
cdq
sub
sub
(bad)
repz
dec
sar
repz
imul
cs
test
int
dec
(bad)
dec
ret
inc
mov
cs
mov
daa
sub
mov
add
inc
sbb
inc
bound
sbb
setns
sbb
add
mov
int3
test
mov
cmp
daa
sbb
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
dec
loope
outs
jg
imul
xor
cwde
mov
jecxz
mov
lods
stc
and
xchg
sbb
mov
aas
or
shr
pusha
jno
out
jne
sbb
inc
jnp
and
xor
and
xchg
adc
mov
fld1
dec
rcl
sbb
jno
mov
das
mov
and
xchg
or
(bad)
mov
fldln2
dec
hlt
mov
xor
sbb
movs
xor
jp
std
aas
dec
in
mov
dec
dec
sbb
or
sbb
popa
mov
dec
push
and
push
mov
outs
push
jmp
xor
pop
push
repnz
mov
jmp
pop
pop
aas
ja
in
and
(bad)
cdq
data16
out
xchg
push
cmp
pop
stc
sub
shl
hlt
out
jb
cmp
pop
in
cmp
mov
inc
sub
out
jo
fdivr
dec
aad
mov
cmp
mov
jmp
iret
xor
pushf
stos
pop
mov
daa
(bad)
and
push
push
(bad)
adc
sub
aas
dec
in
mov
add
lock
xor
jle
repnz
mov
aaa
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
jp
repnz
mov
out
xchg
xor
mov
mov
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
sbb
or
pop
mov
dec
adc
xor
repnz
mov
push
adc
xor
push
repnz
push
fistp
adc
or
jl
dec
mov
adc
cmps
jmp
addr16
fdivr
inc
jnp
sub
hlt
pop
mov
cmp
aaa
inc
jae
add
in
add
mov
push
cmp
cmp
je
mov
xchg
sub
push
mov
sbb
in
xchg
xor
enter
mov
sbb
dec
aad
add
pop
stos
sbb
mov
shl
lock
mov
push
xor
pop
push
repnz
mov
sbb
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
sbb
ret
pop
sub
sbb
movs
mov
cli
xchg
cs
jb
xlat
ds
jnp
sub
hlt
popa
mov
adc
ror
dec
(bad)
jecxz
push
jnp
sub
hlt
jne
push
mov
clc
out
xchg
mov
add
hlt
push
mov
or
sbb
sub
and
movs
mov
lds
and
nop
dec
out
sahf
setp
sbb
or
scas
or
cdq
push
test
cli
out
ins
loope
and
xor
mov
pop
mov
movups
and
xor
mov
movups
cmp
and
mov
and
xchg
sbb
cmp
mov
sub
or
mov
sub
sbb
pusha
sbb
inc
dec
sub
cmp
mov
and
fwait
push
push
addr16
sub
in
push
int3
test
lods
enter
cs
jne
sbb
inc
jnp
and
sub
ins
and
pop
in
ds
les
lock
std
ja
pop
push
repnz
mov
jns
jb
push
pop
pop
ds
pop
jmp
imul
sbb
mov
or
mov
adc
push
sbb
in
into
fisub
aad
lahf
inc
mov
xor
xchg
pop
xor
push
repnz
mov
push
adc
sub
int3
test
mov
stc
out
xchg
movs
xor
dec
pusha
lock
mov
push
sub
adc
ja
pop
push
bnd
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
mov
xor
lea
pop
pop
push
repnz
mov
lds
lea
call
mov
mov
lea
sbb
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
mov
lea
sahf
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fidivr
sub
sbb
pop
or
(bad)
pop
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
dec
pop
retf
and
push
adc
push
jnp
fdivr
jne
sbb
hlt
pop
mov
add
pop
cmps
fisttp
dec
(bad)
jnp
sub
mov
and
inc
sbb
arpl
sub
mov
aas
cmp
sbb
ja
in
add
mov
and
xchg
(bad)
mov
in
sbb
shl
shr
sub
inc
and
dec
mov
push
out
xchg
pop
xor
xor
mov
sidtd
xor
inc
push
repnz
mov
sysexit
lea
and
repnz
mov
(bad)
lea
sbb
int
bound
enter
push
sbb
inc
jb
aad
rcl
push
test
in
push
jnp
sub
hlt
jae
dec
cdq
sub
cmp
test
add
jns
test
inc
cld
push
cmp
cmp
dec
(bad)
dec
iret
xchg
jne
mov
cs
hlt
inc
jnp
and
adc
push
cmp
imul
inc
shl
repnz
jb
sbb
ds
retf
and
sbb
add
and
xor
mov
movups
and
xor
mov
push
dec
sbb
push
xchg
cs
test
rol
sbb
xor
cmp
imul
or
push
lock
xchg
cs
pop
ds
jnp
cs
mov
add
ins
sbb
mov
cmp
xchg
sub
shl
repz
jb
cmp
dec
(bad)
dec
hlt
pop
mov
add
sbb
sub
test
call
sbb
frstor
rcl
sbb
add
sub
and
int3
test
lods
in
add
lods
or
addps
fiadd
sub
aam
adc
add
fyl2xp1
out
xchg
mov
ror
out
cmp
mov
jle
fisttp
jb
or
inc
pop
in
and
data16
out
lods
sbb
push
adc
push
repnz
fistp
sbb
aas
sbb
or
xchg
push
mov
rdpmc
lea
and
or
mov
(bad)
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
sti
adc
xor
push
bnd
fistp
adc
xor
repnz
mov
cmp
lea
dec
pop
push
repnz
mov
pop
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
fistp
mov
sub
pop
or
cdq
data16
lock
test
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
xor
push
xor
push
bnd
fistp
adc
xor
push
repnz
iret
pop
mov
push
adc
xor
push
repnz
push
fistp
pop
cmp
outs
jnp
sub
hlt
dec
mov
or
push
jl
aam
ins
jnp
sub
mov
sbb
inc
ja
add
lahf
in
pop
jge
cmps
mov
aad
adc
stos
mov
ficomp
out
ret
xchg
and
enter
stos
push
inc
(bad)
cwde
ss
out
sbb
rcr
lea
cmp
enter
(bad)
sete
pop
sbb
fbld
shl
out
mov
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
adc
pop
int
jbe
add
dec
hlt
dec
mov
or
push
dec
(bad)
aam
inc
jnp
sub
hlt
bound
cmp
or
sub
cmp
mov
add
test
sub
pop
int
inc
jnp
sub
hlt
dec
mov
nop
sbb
inc
inc
sub
and
add
fmul
popf
cs
sbb
inc
dec
fprem
dec
int
push
mov
sbb
popa
mov
dec
imul
imul
add
xchg
iret
fisub
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
dec
pop
retf
and
push
cdq
adc
pop
inc
dec
sub
add
mov
cmp
add
sub
inc
pop
dec
(bad)
and
inc
cmps
enter
cmc
or
sub
sbb
stos
enter
cs
cmp
push
pop
in
cmp
adc
dec
std
and
xchg
cs
jge
fnstcw
ja
jmp
mov
xchg
jbe
cdq
cmp
sbb
xor
jp
clc
sub
aam
cwde
push
lods
jmp
mov
stos
jbe
fistp
push
xchg
or
add
fiadd
fld
dec
(bad)
mov
push
mov
cli
push
jnp
shl
dec
(bad)
aas
dec
(bad)
mov
pop
dec
sbb
or
sub
(bad)
sub
rol
cmp
sbb
ds
pop
retf
and
push
mov
or
push
mov
ror
fistp
cmp
add
ins
mov
sub
stc
sub
shl
hlt
out
jb
adc
xor
inc
push
repnz
test
jecxz
adc
pop
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
scas
pop
mov
mov
push
push
repnz
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
repnz
mov
mov
lea
push
pop
push
repnz
push
fistp
cmp
sub
push
or
cdq
dec
sbb
or
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
xor
lea
bound
je
fistp
adc
xor
repnz
fistp
adc
xor
push
repnz
push
fistp
daa
cmp
jp
add
pop
hlt
dec
mov
or
push
inc
(bad)
aam
js
adc
hlt
bound
or
(bad)
loopne
ja
in
add
mov
cmp
dec
sbb
inc
sbb
pop
jge
mov
and
xchg
cs
inc
inc
fst
inc
movs
enter
lahf
push
addr16
movs
ds
pusha
sub
hlt
xor
jecxz
aaa
xchg
or
pop
scas
or
mov
out
jb
push
movs
xor
pop
push
repnz
mov
lar
xor
inc
push
repnz
mov
getsec
lea
and
repnz
xchg
push
cmp
push
jnp
sub
hlt
dec
mov
or
cmovno
ds
in
sub
mov
adc
pop
sbb
inc
ja
adc
in
cmp
mov
add
movs
or
adc
fiadd
fld
dec
hlt
dec
mov
movups
cmps
in
push
jle
(bad)
ds
jnp
sub
mov
and
call
ja
call
xchg
pop
mov
adc
pop
int
push
dec
in
dec
div
lock
mov
bswap
test
mov
pop
adc
xor
pop
push
repnz
mov
adc
lea
add
sub
rol
xor
sar
mov
mov
sbb
outs
sbb
inc
jnp
ss
in
and
xchg
cdq
data16
lock
xchg
or
cdq
mov
call
mov
repnz
sbb
mov
and
xchg
jmp
aam
adc
add
sub
sbb
inc
pop
(bad)
dec
hlt
push
mov
cli
and
xchg
cs
in
cmp
push
fistp
add
xchg
or
pop
pop
int
inc
inc
(bad)
sub
rol
adc
sbb
movs
xor
pop
push
repnz
mov
or
lock
sub
iret
test
movs
call
cmp
add
aas
jge
movs
sahf
inc
mov
cmp
cmp
in
dec
div
lock
cmp
dec
pop
in
sbb
mov
das
out
add
and
xor
xchg
mov
adc
sbb
fisub
out
mov
rdpmc
lea
and
or
mov
mov
imul
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
cmp
sub
pop
or
cdq
data16
lock
test
push
xor
pop
push
repnz
mov
sbb
push
xor
pop
push
repnz
pop
mov
sub
lea
subps
add
mov
xor
push
xor
push
bnd
fistp
adc
xor
push
repnz
jecxz
adc
xor
push
repnz
push
fistp
sbb
sub
pop
sub
sbb
lods
shl
xchg
or
lea
in
mov
cmps
mov
(bad)
xchg
sub
mov
dec
out
sbb
lods
out
and
xchg
xor
aad
das
or
dec
(bad)
sbb
rcl
mov
mov
jecxz
cmc
shr
mov
add
iret
dec
fldenv
mov
sbb
push
scas
or
mov
mov
out
jb
push
movs
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
getsec
lea
and
repnz
mov
femms
xchg
or
xlat
pop
int
inc
jl
lds
xchg
inc
cwde
enter
cs
jne
sbb
inc
jae
ror
arpl
enter
mov
inc
fscale
dec
hlt
ja
push
lods
mov
xchg
mov
fld
dec
hlt
push
mov
or
cmp
add
ja
in
and
add
out
and
xchg
shl
in
inc
pop
fsincos
xchg
mov
add
lahf
or
dec
test
or
cwde
inc
xchg
out
aaa
and
cli
out
ins
loope
and
xor
mov
pop
mov
movups
and
xor
mov
movups
xor
cmp
mov
cmp
arpl
cmp
dec
rcr
mov
xchg
mov
retf
push
dec
test
or
mov
or
cmp
pop
inc
dec
sub
and
mov
and
xchg
or
jne
ds
retf
and
jne
cld
push
cmp
cmp
pop
fnop
dec
hlt
pop
xor
push
cmp
imul
dec
int
mov
fisttp
outs
mov
mov
push
fistp
push
cmp
dec
jnp
sub
shl
repz
jb
or
das
sub
(bad)
sub
rol
sbb
ds
retf
and
push
lods
icebp
add
test
int
inc
jnp
and
dec
mov
push
in
xchg
pop
xor
pop
jo
xor
pushf
in
mov
daa
jb
add
cmp
loopne
dec
sti
mov
cmps
dec
sbb
add
xor
jle
repnz
mov
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fcomp
mov
imul
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fidivr
sub
aas
sbb
or
xchg
pop
mov
movups
and
pop
push
loope
push
fild
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
push
and
xor
adc
inc
adc
jne
pop
push
mov
xchg
pop
mov
movups
imul
push
(bad)
xchg
pop
mov
movups
pop
and
xor
mov
icebp
out
jb
add
push
sub
sbb
mov
cs
jo
sar
ins
jnp
sub
hlt
mov
cld
push
cmp
or
ja
in
pop
jge
mov
and
xchg
and
or
dec
std
sbb
shl
mov
mov
fst
inc
call
jne
sbb
xchg
mov
add
movs
int3
fisub
jmp
sbb
push
enter
movs
xor
xor
mov
pop
mov
movups
sub
pop
push
in
xor
lahf
xchg
pop
mov
movups
sbb
pop
push
shl
fisttp
add
cmp
out
xchg
mov
fistp
movs
shr
sti
xchg
sbb
mov
jmp
lods
repz
xchg
cs
sbb
inc
dec
fprem
dec
ret
inc
mov
jb
xchg
pop
or
shl
stc
xchg
sbb
or
stos
mov
lds
or
shl
adc
ds
retf
and
push
mov
or
dec
pop
int
pop
adc
mov
pop
mov
movups
and
xor
cmps
xchg
pop
mov
movups
sub
iret
test
inc
cld
sub
inc
dec
sub
sbb
xchg
enter
cs
mov
ds
retf
and
jne
cld
add
jge
add
dec
sub
mov
(bad)
sbb
movs
enter
cs
jo
sub
repz
inc
mov
jmp
inc
dec
sub
sbb
test
ror
test
enter
and
in
and
retfw
out
fwait
femms
jae
sub
iret
test
test
cmp
and
setp
movups
jne
mov
sub
add
mov
out
xchg
mov
jmp
lods
ja
sbb
push
cmps
test
inc
pop
in
add
mov
fwait
femms
scas
sub
push
and
pop
xchg
sbb
lea
or
leave
mov
push
mov
or
(bad)
pop
int
dec
pusha
icebp
xor
fidivr
sub
add
push
ja
pop
push
repnz
pop
mov
sbb
lea
outs
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
movs
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
mov
lea
cmp
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
movs
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
mov
lea
push
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
jl
lea
dec
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
mov
aaa
adc
movs
xor
repnz
fidivr
sub
sti
out
xchg
mov
or
test
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
fistp
in
jb
push
jbe
les
push
add
hlt
push
mov
or
push
cmps
jecxz
data16
sar
jno
sub
inc
hlt
mov
xor
push
pop
(bad)
cld
ds
jnp
sub
hlt
jp
jnp
and
cmp
sbb
ja
in
pop
jge
mov
sbb
inc
add
jo
inc
mov
and
sbb
cmp
sub
adc
(bad)
lods
fsub
pop
int
pushw
test
ret
out
xchg
inc
sub
pop
int
inc
dec
retf
and
data16
sbb
out
xchg
or
aas
pop
int
inc
sbb
inc
mov
lock
jb
cmp
inc
dec
(bad)
and
mov
fwait
or
inc
pop
int
pop
adc
mov
pop
mov
movups
and
xor
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
int
push
(bad)
xchg
pop
mov
movups
jge
pop
push
in
jno
out
push
cmp
push
inc
push
sub
jnp
xor
stc
and
xchg
or
mov
sub
sbb
lods
shl
xchg
or
mov
dec
mov
xchg
shl
stos
xchg
xor
fnstsw
mov
stc
shl
in
jb
push
dec
pop
ds
add
hlt
push
mov
sti
and
xchg
or
mov
fld1
dec
stc
xchg
inc
inc
lods
enter
aad
jl
(bad)
cmp
in
sub
mov
add
xor
add
ja
in
sub
pop
mov
sub
xchg
add
aas
sbb
or
mov
out
jb
add
aas
sbb
or
xchg
pop
mov
movups
cmp
pop
push
loopne
push
fild
movups
adc
pop
push
aam
push
fist
movups
leave
fisub
leave
xchg
addr16
nop
enter
cs
jne
sbb
inc
sbb
ror
xchg
dec
inc
test
cs
jge
out
inc
jnp
and
sti
dec
sbb
push
scas
cs
lods
sbb
inc
inc
(bad)
dec
into
xchg
jl
cdq
push
adc
inc
jp
add
in
sub
mov
das
cmp
sbb
ds
push
push
mov
pop
cmp
cmp
jnp
sub
hlt
pop
mov
(bad)
and
xchg
or
mov
jnp
jecxz
fidivr
sbb
aas
sbb
or
mov
or
lea
sub
push
fistp
pop
cmp
jg
add
inc
hlt
dec
mov
or
push
ja
and
fs
int3
test
mov
cs
ja
fdiv
push
dec
loope
inc
rol
add
fistp
push
jnp
sub
hlt
pop
mov
add
sahf
or
addr16
(bad)
(bad)
leave
xchg
js
cdq
or
cmp
sbb
cmp
dec
pop
in
outs
jnp
imul
add
and
xor
mov
rdtsc
inc
add
and
xor
mov
push
adc
xor
pop
jo
xor
pushf
cli
pop
mov
daa
xchg
lea
ds
pop
in
and
mov
cmovs
add
xor
jle
repnz
mov
xor
imul
push
fistp
adc
xor
push
repnz
push
pop
mov
outs
adc
xor
push
repnz
mov
dec
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
aaa
xchg
nop
int
mov
and
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
adc
add
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
repnz
push
fistp
sub
int
outs
jnp
sub
hlt
dec
mov
or
push
data16
aam
jb
adc
imul
add
sub
pop
jge
mov
aaa
cmp
daa
inc
sbb
add
mov
sub
and
cmp
mov
loope
repnz
lea
sbb
hlt
xor
cmp
add
ds
pop
retf
and
inc
mov
jmp
push
repnz
mov
sidtd
xor
dec
push
repnz
mov
rdmsr
lea
and
repnz
mov
(bad)
lea
sbb
lods
or
bound
enter
jmp
jnp
sub
hlt
pop
mov
adc
(bad)
in
inc
jnp
sub
xchg
lods
jmp
xchg
push
sbb
sub
rcl
adc
cmps
jmp
ds
jnp
sub
mov
add
push
push
cmp
and
hlt
jo
dec
cdq
sub
cmp
add
ds
pop
in
and
out
imul
test
or
xchg
pop
mov
add
and
xor
mov
movups
xor
pop
dec
retf
outs
sub
mov
xchg
cs
mov
(bad)
dec
hlt
push
mov
pop
adc
cmps
in
arpl
in
and
out
push
in
(bad)
mov
int3
inc
dec
(bad)
dec
retf
inc
cdq
add
or
call
aas
dec
enter
dec
sbb
(bad)
hlt
or
dec
sub
mov
(bad)
dec
hlt
pop
xor
and
call
pop
jbe
cmp
mov
inc
mov
jbe
xchg
pop
aaa
and
adc
mov
movups
int
inc
jl
lds
mov
dec
mov
cli
push
jl
sar
pop
in
sub
stos
cdq
data16
lock
xchg
or
call
outs
repz
imul
or
jge
or
mov
cmp
adc
sbb
frstor
xor
xchg
pop
xchg
xor
je
movs
xor
inc
pop
in
and
shr
out
xchg
push
sbb
aas
sbb
lds
fldl2e
jb
adc
xor
jb
repnz
test
jecxz
adc
addr16
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
push
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
loope
mov
test
lea
popf
pop
push
repnz
mov
call
imul
push
fistp
adc
xor
push
fistp
adc
xor
jp
dec
push
and
inc
mov
aaa
call
loope
and
xor
mov
pop
mov
movups
and
pop
push
jmp
push
fbld
movups
sbb
pop
push
fidiv
push
fist
movups
or
pop
push
int
push
(bad)
xchg
pop
mov
movups
jg
pop
push
mov
xchg
pop
mov
movups
push
and
xor
aad
pop
mov
movups
sub
sub
test
lods
retf
and
xchg
cs
jne
sbb
inc
jnp
sub
hlt
pop
mov
add
sbb
(bad)
test
sbb
shl
adc
lods
mov
retf
rcl
or
cmp
jnp
sub
hlt
adc
outs
cdq
inc
adc
cmps
movs
push
dec
(bad)
scas
imul
mov
jae
xor
xor
jp
std
aas
dec
leave
mov
cmps
dec
sbb
push
or
jl
or
mov
sar
adc
xor
pop
inc
repnz
mov
movups
xor
pop
js
xor
mov
movups
xor
pop
dec
out
outs
jae
imul
and
cwde
mov
call
mov
lods
retf
xchg
sbb
or
rcr
fist
add
call
cli
mov
cmps
test
push
and
sbb
mov
fimul
jno
jmp
sub
hlt
outs
mov
adc
inc
sbb
inc
ins
loop
pop
push
hlt
adc
inc
movs
out
aaa
cmp
cli
out
jae
sub
ja
inc
imul
movups
cmp
pop
push
cld
xor
scas
xchg
pop
mov
movups
sub
pop
push
shl
push
fbld
repz
jb
cmp
inc
fld
dec
lds
out
mov
cmc
jne
sbb
inc
jl
out
dec
shl
repz
jb
cmp
dec
jecxz
mov
lods
stc
and
xchg
push
cmp
dec
fldl2e
dec
(bad)
mov
push
lods
cmc
add
sub
sbb
inc
pop
(bad)
dec
aad
jle
cdq
add
cmp
cmp
jnp
jecxz
fidivr
pop
cmp
push
dec
dec
cmp
inc
imul
add
fwait
or
or
ficomp
xchg
sub
xchg
xchg
pop
mov
pop
adc
or
scas
or
mov
cld
sbb
sub
aas
pop
les
and
inc
push
sub
inc
pop
in
and
cmps
push
push
fwait
or
jnp
int
inc
jnp
and
push
lods
cmc
add
(bad)
stc
out
xchg
cmps
adc
pop
push
repnz
std
loop
pop
cmps
adc
jge
sub
enter
lahf
inc
mov
shr
xchg
pop
xor
dec
pusha
icebp
xor
mov
push
sub
adc
ja
pop
push
repnz
pop
mov
sbb
lea
loope
push
repnz
push
fistp
adc
xor
repnz
pop
mov
mov
lea
jle
push
repnz
pop
mov
or
lea
fs
push
repnz
jecxz
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
repnz
fistp
adc
xor
pop
push
repnz
or
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
jp
clc
outs
fild
mov
jno
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
or
scas
or
mov
adc
or
fdivr
outs
jnp
sub
hlt
pop
mov
cmp
push
jg
in
jno
and
hlt
jb
jne
clc
and
xchg
or
scas
mov
aam
jmp
mov
jl
pushf
imul
mov
inc
adc
cmps
fwait
or
sub
sbb
shl
adc
sub
push
or
test
mov
cli
push
das
test
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
pusha
repnz
mov
movups
iret
fisub
rcr
call
sbb
mov
shl
retf
xchg
adc
mov
dec
fstp
cwde
rol
xchg
pop
sbb
mov
sub
and
fwait
cs
jne
sbb
inc
jnp
sub
hlt
pop
mov
aas
adc
cmps
fisttp
popa
(bad)
out
push
jnp
sub
hlt
jo
dec
cdq
sub
mov
ds
pop
jmp
lods
jmp
sub
int
inc
inc
(bad)
sub
lahf
imul
movs
xor
push
push
repnz
mov
clts
lea
and
repnz
mov
aaa
in
cli
out
jne
sbb
inc
jnp
sub
hlt
push
mov
adc
cmps
loop
dec
(bad)
sar
ins
jnp
sub
hlt
mov
out
aaa
fdiv
out
jne
sbb
inc
dec
fld
dec
into
xchg
js
mov
cs
jae
sar
ja
in
daa
jge
mov
add
sub
out
xchg
mov
retf
and
jne
cld
add
mov
das
cs
mov
and
pop
sub
push
adc
push
dec
stc
sub
shl
out
mov
jo
cmc
imul
xor
mov
pop
in
jb
push
pop
pop
ds
pop
jmp
movs
enter
sbb
mov
lods
or
mov
add
cmp
push
dec
in
dec
rol
cmp
sbb
sub
or
inc
imul
adc
xor
cmp
xor
push
lods
cmc
add
cmp
dec
pusha
lock
mov
push
sub
ja
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
pop
mov
je
lea
mov
push
fistp
adc
xor
pop
push
repnz
pop
mov
movups
xor
ins
push
repnz
data16
lock
xchg
adc
pop
int3
fisub
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
push
cmps
mov
push
xchg
cs
test
(bad)
inc
hlt
pop
mov
add
or
jmp
jns
daa
sub
mov
sbb
inc
sbb
ja
jmp
scas
enter
movs
jne
sbb
jbe
adc
adc
movs
push
inc
(bad)
scas
ds
jnp
sub
hlt
sub
and
sub
push
and
inc
mov
cmp
sbb
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jnp
xor
mov
movups
add
in
int3
test
lods
std
and
xchg
xor
test
out
mov
xchg
mov
push
xchg
cs
sbb
inc
jnp
sub
hlt
ins
mov
das
adc
cmps
int
mov
sub
int3
test
mov
cs
jne
sbb
inc
jnp
sub
hlt
pop
mov
pop
cmp
sbb
sub
(bad)
dec
(bad)
dec
lds
mov
sub
test
lods
sti
add
xchg
sub
int
inc
pop
in
sub
mov
xchg
push
lock
mov
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
pop
cmp
jo
add
jb
dec
mov
or
push
jae
aam
push
jnp
sub
hlt
bound
sbb
ins
into
fisub
shl
cli
xchg
push
cmp
jnp
sub
hlt
popa
mov
cmp
sbb
aas
sbb
lods
or
fs
cdq
push
push
cmp
cmp
pop
(bad)
inc
hlt
popa
mov
cmp
and
ds
pop
in
sub
mov
data16
lock
mov
jo
repz
xor
mov
aaa
inc
jno
out
jne
sbb
inc
pop
in
cmp
sti
push
in
push
push
jbe
or
mov
shl
repz
jb
cmp
pop
in
cmp
mov
add
jne
aas
sbb
or
adc
push
xchg
or
pusha
test
or
xchg
jle
loope
adc
sbb
push
dec
enter
inc
imul
or
pusha
test
or
xchg
pushf
mov
rdpmc
lea
and
jno
fistp
adc
xor
push
fistp
adc
xor
push
bnd
pop
mov
call
push
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
je
mov
das
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
and
sub
mov
int3
test
outs
sbb
xor
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
xor
lea
arpl
jne
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
repnz
fistp
aaa
cmp
inc
jnp
sub
hlt
dec
mov
or
push
pop
(bad)
aam
jp
adc
hlt
bound
cmp
push
inc
ja
sbb
jge
mov
and
xchg
(bad)
mov
mov
out
rol
mov
mov
fst
inc
nop
enter
mov
sbb
retf
xchg
sbb
enter
cs
jne
or
scas
or
imul
cli
out
mov
jbe
aas
dec
shl
lock
sbb
fsub
fistp
sbb
movs
xor
dec
push
repnz
mov
rdtsc
lea
and
repnz
mov
mov
add
and
repnz
mov
aaa
dec
jo
out
jne
sbb
inc
imul
dec
cmc
xchg
jp
mov
div
sbb
inc
jg
in
dec
hlt
mov
xor
cmp
std
ds
jnp
sub
hlt
jnp
jbe
and
sub
sub
into
test
inc
cld
add
bound
cmovno
ds
in
and
mov
add
push
sbb
inc
jae
xor
out
sbb
mov
ret
push
addr16
lock
jnp
jecxz
fidivr
push
test
push
test
mov
aam
popf
push
lods
out
add
xor
out
xchg
mov
repnz
mov
add
lea
aaa
pop
push
repnz
mov
sub
push
xor
ja
retf
and
jne
cld
sub
jle
xor
sub
mov
call
mov
lods
repz
xchg
push
cmp
dec
jmp
lods
add
lock
sahf
cs
pop
cmp
mov
mov
adc
inc
jns
or
(bad)
mov
push
mov
sub
xchg
pop
sub
lods
dec
(bad)
sbb
cdq
add
cmp
cmp
pop
fldl2t
dec
hlt
imul
or
xchg
or
test
mov
ret
push
mov
imul
xchg
pop
and
fistp
sbb
xchg
aas
sbb
call
adc
sbb
fisub
sub
xor
add
xchg
or
jne
aas
sbb
stos
or
mov
cli
add
mov
fs
or
test
cdq
prefetcht2
xchg
sbb
aad
or
popf
push
lods
out
add
icebp
(bad)
out
xchg
cmps
adc
push
repnz
mov
movhps
xor
jl
icebp
xor
fist
xchg
inc
sbb
hlt
leave
fisub
shl
hlt
out
jb
adc
xor
test
repnz
test
jecxz
adc
xchg
pop
push
bnd
fistp
adc
xor
pop
push
repnz
pop
mov
pop
adc
xor
push
fistp
adc
xor
push
repnz
mov
mov
lea
xor
repnz
pop
mov
and
lea
push
push
repnz
mov
scas
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
pop
mov
dec
adc
xor
push
fistp
adc
xor
pop
push
repnz
fidivr
sub
sbb
fs
or
(bad)
pop
mov
pop
adc
xor
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
dec
pop
retf
and
jne
cli
and
xchg
or
call
fimul
pop
mov
add
xor
call
sub
hlt
outs
mov
sub
push
dec
(bad)
hlt
ds
jnp
sub
mov
sub
cmp
add
das
or
dec
jecxz
cli
ror
mov
or
retf
or
dec
fstp
into
shr
adc
cs
inc
or
test
mov
cli
push
das
test
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jg
xor
mov
movups
iret
fisub
ror
call
sub
mov
ror
retf
xchg
aaa
cmp
frndint
dec
lds
enter
or
mov
sub
and
xchg
adc
xor
sub
hlt
arpl
sbb
loope
push
jnp
sub
hlt
ja
push
cdq
and
and
sub
(bad)
das
pop
out
imul
pushf
or
mov
fistp
sbb
movs
xor
dec
push
repnz
mov
(bad)
jge
xor
inc
inc
dec
pop
and
inc
test
test
(bad)
fnsave
ja
in
push
jge
mov
push
cmp
push
inc
js
sub
stos
and
inc
cdq
pop
adc
cmc
push
gs
fidivr
mov
mov
and
xchg
cs
sub
or
and
inc
cdq
adc
sbb
sub
mov
(bad)
dec
hlt
pop
(bad)
jne
(bad)
and
pop
aaa
adc
adc
push
inc
stc
sub
shl
lock
mov
jo
xchg
imul
xor
mov
aaa
push
nop
sbb
inc
dec
(bad)
das
pop
out
push
cmp
sbb
inc
pop
retf
and
jne
hlt
add
mov
adc
hlt
dec
mov
adc
cmp
push
pop
out
outs
out
inc
imul
add
and
xor
mov
add
jnp
int
dec
pusha
icebp
xor
mov
push
sub
adc
ja
pop
push
repnz
mov
mov
push
push
bnd
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
stos
adc
xor
pop
push
repnz
mov
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
aaa
xchg
sub
test
fisub
fild
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
pop
mov
xor
lea
addr16
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
rol
sbb
repz
je
sar
xor
xor
cmp
cmp
sub
or
mov
cmps
mov
rcl
or
mov
sahf
lods
iret
and
xchg
cs
pop
inc
hlt
adc
and
nop
ds
ins
sub
mov
sub
push
aad
imul
pop
out
push
dec
inc
push
scas
or
arpl
ficomp
push
push
fbstp
adc
and
xor
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
sub
into
test
inc
cld
push
cmp
ds
dec
sub
add
cmp
and
xchg
xor
mov
push
or
ror
ficomp
ds
retf
and
jne
(bad)
and
xchg
push
sbb
inc
inc
(bad)
dec
rcl
ror
sahf
cs
jne
sbb
inc
jnp
sub
hlt
jae
jne
stc
and
pop
adc
adc
push
dec
cld
aas
dec
cld
mov
pop
dec
sbb
pop
xchg
pop
mov
fs
bswap
test
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
rol
sbb
sar
jnp
and
xor
call
sbb
inc
jnp
or
cld
mov
mov
lahf
cs
pop
ds
jnp
sub
hlt
push
mov
pop
sbb
ins
sbb
jns
or
shl
mov
jb
pop
inc
push
sub
mov
(bad)
dec
aad
jae
cdq
pop
adc
mov
sbb
mov
xor
stos
sahf
inc
mov
es
sub
fisub
icebp
in
pop
mov
movhps
or
scas
or
mov
cld
sub
mov
in
xchg
pop
sub
cmp
mov
inc
xchg
out
aaa
inc
jno
out
jne
sbb
inc
pop
out
cmp
mov
jge
fisttp
jb
push
inc
dec
and
inc
pop
in
cmp
data16
out
(bad)
and
add
mov
add
addr16
and
mov
rcr
out
lea
and
fistp
adc
rcr
cwde
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
pop
pop
mov
inc
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
pop
mov
scas
adc
xor
push
repnz
mov
fist
lea
push
pop
push
repnz
push
fistp
adc
xor
(bad)
fidivr
sub
es
push
or
(bad)
pop
mov
pop
adc
xor
pop
push
repnz
mov
adc
lea
add
adc
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
repnz
push
fistp
adc
xor
jb
retf
and
jbe
adc
cmp
dec
sub
cmp
mov
sbb
push
sbb
inc
jg
add
in
and
mov
adc
inc
sbb
inc
arpl
daa
jge
mov
cmp
adc
fidivr
(bad)
sbb
(bad)
xchg
cmp
push
scas
cs
stos
sbb
in
xchg
add
enter
add
ins
sub
outs
iret
inc
imul
cmp
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
and
xor
mov
movups
push
sub
xchg
bswap
test
scas
enter
cmc
push
jne
fidivr
ja
sbb
jge
mov
sub
push
sbb
jge
add
in
cmp
mov
sbb
mov
fmul
int3
test
mov
cs
jne
sbb
inc
inc
(bad)
dec
hlt
pop
mov
sbb
push
sbb
inc
jb
or
into
xchg
pop
inc
mov
add
ins
sub
dec
rol
sbb
sbb
xlat
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
dec
dec
pop
and
inc
xchg
enter
cs
sbb
(bad)
xchg
jb
cdq
add
or
(bad)
pop
in
sub
pop
push
in
cs
test
int3
inc
jnp
sub
hlt
pop
mov
add
sbb
fisttp
jae
call
sub
rol
cmp
cmp
jnp
sub
mov
cmps
fadd
pop
movs
xor
jp
clc
sub
aam
cwde
inc
stos
out
aaa
pushf
jno
out
outs
cmps
push
ds
mov
push
fistp
and
cmp
ds
add
inc
shl
repz
jb
add
sub
dec
mov
imul
push
sbb
dec
in
xchg
pop
das
or
aam
cwde
inc
stos
out
aaa
sub
cli
out
jo
fnsave
push
dec
(bad)
cmp
mov
repz
jb
xor
repnz
push
sbb
xchg
or
jae
sub
iret
test
and
add
add
xor
xor
stc
lods
pop
mov
dec
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
push
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
bnd
pop
mov
push
adc
xor
pop
push
repnz
pop
mov
add
lea
sbb
inc
push
fistp
adc
xor
push
repnz
lds
cmp
lea
icebp
imul
cdq
mov
out
xchg
sub
push
movs
int
mov
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
cmp
push
xor
pop
push
repnz
pop
mov
dec
adc
xor
repnz
mov
push
adc
xor
push
repnz
push
fistp
adc
xor
push
pop
retf
and
dec
cdq
adc
or
ja
in
adc
mov
push
cmp
add
sub
sbb
lods
retf
xchg
xor
or
ret
inc
xchg
enter
movs
jne
sbb
jns
push
mov
inc
adc
sbb
inc
cmp
sbb
shr
sbb
ds
pop
in
sub
mov
add
xchg
or
xchg
pop
int
pop
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
adc
xor
xchg
xchg
pop
mov
movups
sub
into
test
inc
cld
and
jg
cmp
dec
fcomp
mov
stos
mov
into
xchg
xor
mov
sub
mov
sbb
lods
cmc
and
xchg
or
lods
mov
dec
sub
inc
imul
cld
push
cdq
cs
jb
fidivr
ja
in
sub
mov
add
push
sbb
inc
jge
or
iret
xchg
pop
inc
cdq
das
sbb
inc
aad
imul
pop
shl
out
call
push
push
mov
nop
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
pop
dec
sbb
push
xchg
out
mov
sbb
mov
add
daa
cmps
out
pusha
(bad)
in
ds
sub
pushw
lock
xchg
cs
mov
rol
(bad)
dec
rcl
jmp
cmps
in
arpl
out
cmp
mov
inc
mov
cli
push
pop
ds
jnp
and
mov
in
or
and
xor
call
cmp
push
pop
in
cmp
shl
out
mov
jo
pushf
imul
xor
mov
push
in
jb
push
dec
pop
ds
pop
in
sub
repz
cmp
sbb
ds
pop
retf
and
jne
inc
xchg
pop
int
push
pop
in
cmp
shl
out
xchg
div
sub
aas
dec
les
lock
adc
pop
push
repnz
fistp
sbb
sub
mov
mov
cmpxchg
xor
inc
ja
xor
pop
mov
call
lea
adc
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
rcr
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sub
push
push
bnd
fistp
adc
xor
push
bnd
fistp
push
sahf
add
dec
mov
sbb
int3
inc
(bad)
sbb
push
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
pop
mov
and
lea
pop
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
inc
hlt
or
cdq
adc
cmp
dec
in
sbb
lods
sti
and
xchg
and
mov
adc
test
sbb
lods
ret
and
xchg
fdiv
sbb
inc
dec
fptan
dec
(bad)
xchg
sub
enter
movs
jne
sbb
dec
int3
xchg
cmp
jno
sub
pop
test
inc
pushf
sbb
add
and
xor
mov
movups
xor
pop
je
xor
mov
movups
add
mov
shl
call
sbb
mov
shr
retf
xchg
adc
mov
dec
cld
and
cdq
xchg
loope
out
jb
cmp
jnp
sub
hlt
push
mov
pop
pop
cmp
mov
sbb
inc
pop
ftst
dec
hlt
push
add
cwde
push
adc
fs
bswap
test
mov
pop
adc
xor
pop
push
repnz
mov
adc
lea
mov
sub
add
arpl
push
inc
dec
sub
pop
jge
mov
sub
mov
ds
jnp
sub
hlt
push
mov
or
cmp
cmp
pop
in
es
(bad)
outs
in
jb
or
sub
mov
(bad)
dec
hlt
pop
xor
and
mov
jo
out
fs
push
repnz
mov
or
mov
sub
aaa
dec
cli
scas
xchg
xchg
push
lock
xchg
(bad)
mov
imul
int3
mov
lock
cmp
dec
cli
scas
xchg
dec
pop
lock
fwait
cs
jo
sub
ret
inc
mov
cld
sbb
mov
xor
mov
or
xchg
pop
xchg
or
adc
xor
inc
inc
cmc
and
cwde
xchg
pop
mov
push
adc
sub
xor
cmps
xchg
pop
mov
push
adc
mov
xor
mov
adc
cld
and
xor
xor
adc
mov
xor
movs
xchg
pop
mov
push
adc
xchg
and
xor
test
pop
mov
movups
xchg
and
xor
fwait
xchg
pop
mov
push
adc
adc
pop
push
dec
xor
adc
adc
xor
jbe
jmp
push
shl
jb
adc
mov
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jle
xor
mov
movups
xor
pop
adc
xor
mov
sbb
mov
out
xchg
pop
sub
sbb
movups
cmps
in
push
data16
(bad)
ds
jnp
sub
hlt
pusha
mov
cmp
xor
loop
jg
ds
hlt
je
dec
cdq
daa
adc
(bad)
mov
jle
dec
jecxz
fidivr
push
adc
jne
and
fs
or
test
mov
pop
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
mov
cmps
lock
sub
mov
std
sbb
lods
mul
xchg
pop
cmp
dec
(bad)
and
movs
xchg
mov
out
jb
cmp
dec
loop
mov
lods
jmp
into
jne
sbb
inc
pop
ftst
xchg
mov
push
sbb
xor
pop
push
repnz
fistp
adc
xor
dec
inc
cmc
or
inc
imul
cli
push
sub
ja
fdivr
dec
jnp
sub
hlt
pop
mov
out
or
int
inc
jnp
and
mov
enter
jecxz
addr16
jmp
dec
hlt
and
xchg
cs
jno
fstp
ja
in
mov
mov
sbb
int
dec
pop
in
cmp
fisub
xchg
in
jb
cmp
enter
repnz
mov
rdpmc
lea
and
or
mov
rcl
lea
call
mov
lods
adc
xor
push
repnz
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
sbb
push
push
repnz
mov
jmp
push
push
repnz
fistp
adc
xor
push
repnz
fistp
mov
sbb
or
lods
pop
dec
sbb
sbb
sbb
push
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
cwde
xchg
pop
mov
movups
sbb
xor
mov
lea
adc
jo
pop
push
mov
push
fcomip
xchg
pop
mov
movups
and
xor
loop
pop
mov
movups
pop
and
xor
into
xchg
pop
mov
and
sub
and
mov
cmp
sbb
inc
inc
sub
adc
mov
and
xchg
sbb
mov
jae
dec
xchg
pop
inc
cmps
enter
shl
sbb
dec
stc
xchg
and
enter
cs
inc
fst
inc
cmps
enter
mov
sbb
dec
std
xchg
sbb
stos
sbb
mov
fs
or
test
sub
in
jo
out
ins
loope
and
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fidiv
push
fisttp
adc
mov
mov
sub
and
xchg
or
cmp
movs
mov
or
sub
sbb
mov
sbb
and
fisub
shr
push
fwait
cs
jno
xlat
ds
jnp
sub
hlt
popa
mov
cmp
cmp
add
ja
in
popf
shl
adc
aas
sub
imul
imul
sbb
xchg
iret
fisub
fistp
adc
xor
push
fistp
adc
xor
push
retf
and
outs
cdq
adc
push
jne
fdivr
js
sbb
jne
cld
sub
push
sbb
inc
jg
sub
ret
outs
pop
inc
imul
cs
stos
sbb
inc
jnp
sub
hlt
pop
mov
jmp
xchg
(bad)
mov
(bad)
sub
rol
sbb
fidivr
ja
in
cmp
movs
mov
or
loop
pop
push
hlt
adc
inc
mov
cmp
and
setp
movups
push
frstor
sub
add
aad
out
xchg
mov
sti
cmp
mov
outs
mov
cli
cmovno
sub
in
ds
ror
out
nop
cs
jb
and
or
inc
imul
add
mov
rcr
push
fistp
cmp
adc
sub
in
ds
ror
out
lea
and
repnz
mov
movups
xor
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
movups
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
inc
adc
xor
jp
dec
das
and
inc
mov
cli
out
ins
loope
and
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fbstp
push
fisttp
movups
sbb
cmp
sub
and
xchg
sbb
leave
inc
dec
(bad)
dec
retf
xchg
je
cdq
adc
(bad)
out
push
jnp
sub
jne
xor
adc
cmp
dec
pop
retf
and
push
mov
out
xchg
pop
xor
push
push
repnz
mov
nop
xor
dec
push
repnz
xchg
inc
mov
wrmsr
lea
sbb
scas
or
mov
adc
sbb
fnstcw
ja
in
cmp
stos
mov
or
mov
aas
jge
mov
and
xchg
or
cmp
ror
bound
adc
sub
inc
inc
dec
aaa
and
pop
mov
adc
inc
adc
xor
pop
push
repnz
out
push
dec
cld
add
jne
sbb
or
mov
adc
cmp
cmp
test
sbb
int3
fisub
fidivr
adc
sbb
push
dec
dec
stos
and
inc
mov
imul
xchg
pop
xor
dec
pusha
div
pop
fnstsw
sub
ja
pop
push
repnz
pop
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
gs
repnz
retfw
out
xchg
or
sbb
ficomp
push
push
fistp
movups
and
pop
push
out
push
fbld
adc
push
and
xor
xchg
xchg
pop
mov
movups
sub
fs
or
mov
or
sub
sub
mov
add
push
sbb
mov
loopne
int
pop
inc
mov
add
ins
sub
inc
dec
dec
cmps
and
inc
mov
loop
xchg
pop
xor
push
push
repnz
mov
nop
xor
dec
push
repnz
xchg
inc
mov
rdpmc
lea
fwait
mov
hlt
dec
mov
adc
or
(bad)
fdivr
mov
and
mov
and
nop
push
push
jae
or
jge
mov
and
xchg
cs
jno
aad
ja
jmp
dec
mov
sbb
jl
sub
int
and
push
push
mov
and
aas
outs
pop
mov
xchg
push
push
jae
or
scas
or
sahf
inc
mov
cli
out
jl
sub
int
and
sbb
xchg
sbb
push
mov
icebp
adc
fnstsw
adc
sbb
dec
loopne
outs
fild
mov
cmp
xor
mov
push
sub
add
cmp
push
fistp
adc
xor
bnd
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
jp
dec
sub
inc
imul
jns
jb
push
das
test
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jl
xor
mov
movups
int
inc
dec
fld
dec
rcl
loope
sub
jl
aad
push
jnp
sub
hlt
arpl
xchg
or
mov
inc
fscale
dec
hlt
ja
fs
or
xchg
push
push
jl
or
mov
shr
out
mov
push
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
add
int
push
jnp
sub
hlt
dec
mov
cld
sbb
data16
inc
inc
sub
cmp
mov
adc
cmp
sbb
lods
jmp
cmp
dec
fldln2
dec
hlt
addr16
fs
or
fwait
wbinvd
pushfw
pop
fbld
leave
mov
aas
dec
sbb
pop
mov
jo
cmc
imul
xor
mov
inc
out
jb
push
jae
les
push
pop
in
and
mov
xchg
(bad)
popa
mov
or
test
mov
or
ja
int
pop
push
not
push
fnstsw
adc
sbb
push
dec
stc
sub
rol
add
xor
dec
push
repnz
mov
adc
lea
xor
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
mov
add
lea
aaa
pop
push
repnz
mov
icebp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
aaa
xchg
or
mov
stos
inc
imul
add
sub
cmp
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
lock
jb
add
ja
jmp
js
movs
enter
loopne
jno
sar
push
jnp
and
jne
jmp
xchg
or
movs
mov
leave
xor
call
jns
out
xchg
mov
retf
and
sbb
add
and
xor
mov
movups
and
xor
lods
cwde
pushw
sbb
out
pop
ds
jnp
sub
hlt
push
mov
cld
add
push
sub
aas
pop
shr
xchg
push
cmp
dec
(bad)
sbb
mov
in
inc
jp
or
fstp
adc
cmp
and
call
adc
jge
mov
sub
aaa
push
jae
out
jne
sbb
dec
pop
out
cmp
mov
outs
dec
sbb
push
cmps
test
dec
pop
retf
and
pop
xchg
pop
movups
xor
fist
xor
dec
mov
cli
or
lods
bswap
test
and
out
add
xor
xor
stc
mov
jecxz
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
cdq
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fidivr
sub
cli
out
xchg
mov
or
xchg
pop
mov
movups
cmp
pop
push
loopne
push
fild
movups
adc
pop
push
aam
push
fist
movups
push
and
aas
outs
jmp
imul
cs
mov
into
inc
pop
(bad)
dec
leave
xchg
jae
mov
cs
jne
sbb
inc
inc
ftst
inc
hlt
push
sbb
mov
push
aam
pop
aam
cwde
inc
sbb
or
mov
fistp
sbb
xor
dec
push
repnz
mov
(bad)
jge
xor
inc
pop
retf
and
push
cdq
adc
add
dec
sub
cmp
mov
and
xchg
or
mov
cmp
inc
pop
retf
and
jne
jmp
xchg
cs
jbe
fidivr
ja
out
sbb
lods
enter
add
ins
and
pop
out
aas
outs
mov
imul
pop
push
imul
dec
lds
lock
sbb
aam
pusha
inc
mov
cmp
ss
in
dec
aam
cwde
data16
sbb
push
jne
sbb
hlt
sbb
mov
icebp
out
jb
sbb
or
mov
out
mov
std
mov
sysexit
lea
xor
out
push
fistp
adc
pushf
and
xor
jns
pop
mov
movups
lea
pop
push
pop
xor
mov
push
adc
lock
xor
add
movups
daa
and
xor
mov
pop
mov
add
cdq
push
adc
push
push
repnz
mov
str
xor
inc
push
repnz
mov
sysexit
lea
and
repnz
scas
nop
data16
lock
xchg
(bad)
mov
(bad)
dec
iret
xchg
jle
mov
cs
sbb
inc
inc
fldl2t
dec
int
inc
inc
cdq
xor
jne
and
test
mov
pop
adc
xor
pop
push
repnz
mov
push
adc
or
pop
hlt
dec
mov
std
and
xchg
or
cmp
mov
jecxz
jb
pop
inc
push
and
lods
dec
(bad)
dec
hlt
push
lea
std
and
or
lds
xor
mov
pop
mov
sbb
mov
out
xchg
pop
sub
aas
dec
retf
scas
nop
data16
loop
scas
sub
and
sbb
and
xchg
femms
arpl
retf
and
pop
mov
add
stos
xor
xor
mov
push
adc
aaa
xor
jecxz
push
fist
movups
xchg
and
xor
adc
lea
adc
lea
pop
push
pop
xor
pop
xchg
pop
mov
movups
movs
and
xor
jl
pop
mov
movups
xor
jbe
jmp
inc
ficom
movups
aas
and
xor
test
movups
sub
xor
mov
ja
jb
push
arpl
add
hlt
push
mov
cld
push
cmp
cmp
pop
(bad)
xchg
mov
adc
push
xor
pop
push
repnz
push
fistp
adc
xor
push
inc
test
inc
cdq
adc
add
and
mov
(bad)
inc
shl
lock
jb
cmp
jnp
and
mov
fimul
adc
and
cmps
or
test
dec
sbb
add
xor
js
repnz
scas
nop
dec
mov
sbb
lea
out
push
repnz
mov
or
lea
pushf
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
dec
jmp
push
hlt
and
test
and
xor
mov
movups
xor
pop
je
xor
mov
movups
push
fisub
sub
sbb
pusha
sbb
inc
dec
sub
sbb
repnz
fwait
cs
jne
sbb
inc
pop
out
aas
dec
shr
lock
mov
push
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
int3
mov
lock
xchg
in
pop
cmp
mov
cdq
add
add
(bad)
mov
leave
xchg
fs
cdq
push
adc
addr16
lea
xchg
das
setp
movups
or
mov
hlt
dec
mov
cld
add
mov
aas
ja
in
dec
shl
stos
out
jb
push
inc
push
sub
inc
pop
in
ds
fild
adc
adc
pop
push
repnz
fidivr
add
xor
push
fistp
adc
xor
pop
push
repnz
in
mov
imul
movs
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
jp
out
ds
shr
dec
sbb
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
aaa
popa
jb
out
jge
les
mov
mov
mov
jmp
cmp
jnp
jecxz
fidivr
sub
cli
out
xchg
mov
sub
test
pop
mul
movups
and
xor
test
pop
mov
movups
sub
mov
sub
add
pusha
sbb
xor
cmp
mov
jle
cmp
jnp
sub
ins
stos
pop
mov
sub
sbb
jns
or
mov
mov
mov
mov
xor
dec
push
repnz
mov
adc
lea
mov
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
mov
lea
and
repnz
mov
or
xchg
adc
mov
and
pop
imul
movups
cmp
pop
push
cld
xor
lods
xchg
pop
mov
movups
and
xor
lahf
xchg
pop
mov
movups
sbb
xor
mov
lock
jb
cmp
jnp
sub
hlt
push
lea
cld
pop
cmp
cmp
dec
jmp
lods
sti
and
xchg
shl
icebp
arpl
xor
dec
mov
cli
or
daa
sub
test
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
rol
or
sar
jnp
sub
hlt
push
mov
cld
adc
mov
stc
sub
rol
cmp
cmp
jnp
sub
mov
in
or
fcmovb
push
movs
xor
jp
clc
sub
test
lock
add
or
xor
mov
aaa
inc
jae
out
jne
sbb
dec
pop
in
es
out
push
dec
cld
add
jle
sbb
sub
int
and
adc
cmp
aas
outs
inc
mov
jl
adc
jmp
fistp
add
cwde
or
imul
dec
pusha
icebp
xor
mov
push
sub
add
cmp
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
hlt
adc
xor
jp
loop
outs
mov
out
add
stc
cli
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
push
xor
pop
push
repnz
push
fistp
adc
or
mov
hlt
dec
mov
adc
pop
cmps
jmp
inc
dec
sub
sbb
stos
enter
cs
hlt
inc
dec
(bad)
dec
int3
xchg
pop
inc
mov
add
ins
and
cmps
and
inc
mov
loop
xchg
pop
xor
push
push
repnz
mov
nop
xor
dec
push
repnz
mov
(bad)
jge
or
jge
stos
mov
loope
cs
jne
sbb
inc
jnp
sub
mov
add
xchg
or
call
fiadd
sub
mov
enter
in
or
das
or
lahf
mov
adc
xchg
pop
and
inc
pop
in
sub
fild
dec
out
jo
imul
xor
pop
pop
repnz
test
lock
xchg
push
cmp
retf
and
push
cdq
adc
sbb
cpuid
scas
or
sahf
inc
mov
sbb
xchg
pop
xor
pop
push
repnz
mov
push
adc
cmp
inc
pop
retf
and
dec
and
sbb
xor
fs
xor
stc
mov
jecxz
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
adc
xor
repnz
fidivr
sub
cli
out
xchg
mov
or
cdq
pop
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
and
lea
adc
push
repnz
rol
pop
cmps
repz
jns
sar
jnp
das
jge
mov
and
xchg
or
mov
fldl2e
dec
enter
stos
enter
fdiv
sbb
mov
repz
cmps
lahf
inc
mov
cli
out
jbe
sub
int
and
nop
xor
push
push
repnz
mov
invd
lea
and
repnz
mov
out
sbb
push
popf
cs
pop
ds
jnp
sub
movs
mov
or
out
inc
inc
sub
inc
inc
dec
ret
and
inc
cdq
pop
adc
(bad)
fidivr
push
jnp
sub
hlt
pop
mov
add
sbb
jge
pusha
pop
push
hlt
adc
inc
mov
cli
out
outs
cmps
push
ds
or
pushf
pop
mov
adc
cmp
sub
lods
cwde
repnz
xchg
cs
scas
and
inc
inc
dec
and
dec
cdq
adc
sbb
int3
fisub
rol
xor
add
and
je
fistp
add
pushf
or
xchg
pop
int
dec
pusha
div
test
mov
push
sub
add
cmp
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
dec
adc
xor
pop
push
repnz
pop
mov
dec
adc
xor
push
fistp
adc
xor
jp
dec
sub
inc
imul
aaa
fs
out
ins
loope
and
xor
mov
pop
mov
movups
and
pop
push
jmp
push
fbld
movups
sbb
pop
push
fnstenv
push
fist
movups
int
mov
shr
push
lahf
cs
ja
fidivr
dec
jnp
sub
mov
pop
cmp
mov
dec
loop
cwde
shr
adc
sub
movs
or
test
mov
icebp
out
jb
push
bound
xor
mov
lsl
xor
inc
push
repnz
mov
ud2
cmp
and
sub
popf
jne
cld
add
inc
inc
sub
sub
mov
add
cmp
aas
jge
stos
mov
or
inc
and
mov
popf
mov
add
push
enter
push
not
test
jecxz
sbb
sbb
scas
or
bound
std
add
(bad)
xchg
mov
clc
sub
addr16
sbb
push
cmps
test
mov
or
cwde
xchg
sbb
xor
retf
push
not
xchg
pop
mov
pop
sbb
xor
xor
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
test
lea
dec
pop
push
repnz
mov
adc
add
and
push
repnz
pop
mov
xchg
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
add
lea
daa
jp
in
aas
outs
mov
imul
cli
out
xchg
mov
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
out
imul
cs
scas
sbb
inc
inc
(bad)
dec
retf
inc
mov
cs
jge
out
ds
jnp
sub
hlt
imul
fs
sti
ds
jnp
sub
ins
xlat
pop
mov
sub
xchg
push
jl
or
mov
aam
adc
icebp
out
jb
push
arpl
xor
mov
syscall
lea
and
repnz
mov
sysenter
lea
sbb
scas
or
bound
enter
push
sbb
dec
jnp
cs
movs
mov
int3
xchg
cs
jl
sub
int
and
and
fwait
cs
jae
fdivr
ja
call
mov
int
or
mov
jno
pop
push
aam
pop
les
lock
add
mov
ror
test
and
aas
outs
mov
out
adc
cwde
mov
retf
and
push
cdq
adc
cmp
sbb
sub
into
test
scas
enter
push
sbb
sbb
push
xchg
pop
mov
pop
adc
xor
jbe
sar
call
adc
sub
in
and
mov
mov
xor
dec
push
repnz
mov
adc
lea
retf
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
sbb
push
sbb
mov
and
pop
imul
movups
cmp
pop
push
cld
xor
lods
xchg
pop
mov
movups
and
xor
cwde
xchg
pop
mov
movups
sbb
xor
cmps
cwde
data16
out
xchg
or
pushf
mov
add
hlt
push
mov
cld
push
cmp
add
sub
sbb
repz
nop
fidiv
(bad)
icebp
sbb
xor
push
mov
cli
or
aas
sub
test
mov
or
lea
cs
push
repnz
mov
adc
lea
add
and
out
push
dec
cld
push
cmp
or
sub
cmp
mov
add
outs
sbb
inc
jp
ss
jmp
dec
sbb
push
xchg
loop
pop
ds
jnp
sub
hlt
push
mov
sti
and
xchg
or
mov
sbb
mov
xor
mov
icebp
out
jb
sbb
cmp
push
pop
retf
and
pop
sar
dec
dec
enter
movs
xor
aas
outs
xchg
inc
imul
push
push
addr16
sbb
hlt
dec
mov
add
or
inc
pop
int
dec
jnp
sub
lahf
inc
mov
cli
out
dec
daa
xor
pop
jo
xor
xchg
bound
in
or
aas
sub
test
and
movs
pop
xor
loope
inc
(bad)
mov
jecxz
adc
xor
pop
push
repnz
mov
in
lea
adc
repnz
push
fistp
adc
xor
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
adc
lea
and
les
mov
sbb
cmps
xchg
sbb
scas
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jle
xor
mov
pop
mov
sbb
sub
and
mov
push
cmp
cmp
inc
fld1
dec
rcl
adc
mov
test
and
pop
mul
movups
and
xor
scas
xchg
pop
mov
movups
xor
or
test
inc
cld
add
test
sbb
jge
mov
or
push
sti
out
xchg
mov
add
jge
mov
call
imul
repz
mov
pop
mov
sbb
mov
out
xchg
pop
sub
cmp
mov
pop
mov
out
jb
cmp
inc
test
and
inc
mov
cmp
cmp
jmp
nop
leavew
sbb
push
data16
sbb
or
mov
call
jns
and
inc
repnz
mov
movups
xor
pop
cli
repnz
mov
movups
add
and
xor
mov
movups
xor
pop
xchg
repnz
mov
movups
adc
adc
dec
pop
in
aas
inc
ficom
movups
and
xor
scas
xchg
pop
mov
movups
das
and
xor
mov
lock
jb
add
das
or
shl
or
sar
ja
and
fistp
or
adc
xor
pop
pop
repnz
mov
movups
cmp
int3
test
lods
jmp
(bad)
fidivr
push
jnp
sub
mov
pop
mov
lock
jb
cmp
jnp
sub
stos
mov
adc
xor
push
int
and
lock
xor
js
repnz
scas
nop
dec
mov
sbb
lea
cmp
repnz
mov
(bad)
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
mov
push
xor
pop
push
repnz
sub
adc
xor
push
fistp
adc
scas
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
dec
clc
and
loop
mov
xchg
(bad)
mov
(bad)
dec
hlt
push
mov
cmc
and
xchg
cs
jne
sbb
inc
inc
ftst
dec
aad
cwde
inc
mov
cli
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
mov
push
out
jb
push
fs
ds
jnp
sub
mov
sbb
imul
inc
inc
sub
outs
cmp
mov
cmps
cmc
or
sub
mov
(bad)
dec
hlt
pop
nop
pop
sar
adc
add
push
cmp
pop
push
in
daa
inc
fild
push
cmps
lock
arpl
retf
and
jne
hlt
add
jns
or
cmps
sahf
inc
mov
cli
out
jbe
sub
mov
and
jle
jecxz
adc
sbb
pop
push
hlt
sbb
scas
xchg
dec
mov
pop
adc
xor
push
fistp
adc
xor
push
repnz
pop
mov
test
push
xor
push
fistp
adc
xor
sbb
xor
inc
mov
or
ins
movs
xor
pop
push
repnz
mov
str
xor
dec
push
repnz
xchg
inc
mov
or
xchg
mov
cld
sbb
cdq
or
cmp
sbb
loop
pop
push
hlt
adc
sbb
add
and
xor
mov
movups
or
mov
sub
loopne
cmps
jmp
ss
dec
clc
and
sahf
imul
cs
(bad)
fbstp
ja
jmp
mov
and
xchg
movs
xor
dec
pusha
cmc
xor
mov
push
sub
add
cmp
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
jns
lea
das
pop
push
bnd
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
jp
cld
aas
outs
mov
lock
stc
cli
out
xchg
mov
repnz
mov
add
lea
ss
push
repnz
mov
sub
push
xor
pop
push
repnz
push
fistp
adc
or
mov
sub
push
cmp
sbb
ja
in
sbb
lods
lock
xchg
or
mov
sbb
inc
dec
(bad)
dec
iret
xchg
pop
inc
mov
add
ins
sub
inc
inc
dec
cmps
and
inc
mov
cmp
daa
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
sbb
scas
or
lea
cld
sbb
jge
or
sub
cmp
mov
and
xchg
push
push
jl
or
pop
hlt
dec
mov
or
cmp
sbb
mov
hlt
arpl
push
mov
sbb
aad
popf
push
lods
cmc
add
sar
out
xchg
stos
xor
pop
xor
inc
setp
movups
jno
mov
sub
add
mov
sbb
inc
pop
in
cmp
stos
cwde
xchg
sbb
loopne
scas
sub
aas
outs
retf
inc
imul
add
ret
movs
xor
jl
repnz
int3
xchg
pop
mov
push
sbb
sbb
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
pop
mov
loop
lea
das
pop
push
repnz
fistp
adc
xor
adc
repnz
data16
sbb
out
xchg
or
mov
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
and
lea
cmp
ror
and
and
fwait
cs
(bad)
fistp
dec
jnp
sub
mov
and
xchg
sbb
mov
or
retf
xchg
inc
inc
stos
enter
add
ins
sub
outs
sub
mov
cmp
xor
mov
movups
xor
pop
dec
repnz
mov
movups
daa
sub
test
lods
jmp
cmp
jmp
mov
push
sub
je
sub
int
and
and
xchg
cs
jno
fdiv
ja
out
sbb
mov
add
ins
sub
inc
inc
dec
aas
and
inc
mov
cmp
and
adc
mov
movups
int3
fisub
aam
xchg
fdiv
out
jb
cmp
pop
in
and
xchg
push
dec
cli
and
xchg
femms
pusha
scas
sub
int
and
rdtsc
xor
inc
and
sub
lahf
inc
mov
cli
out
jns
xor
xlat
push
repnz
mov
or
mov
push
xor
pop
push
repnz
mov
or
lea
xchg
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
cmp
or
and
repnz
mov
syscall
lea
and
repnz
mov
(bad)
lea
and
loope
outs
mov
repnz
xchg
cs
test
iret
inc
jnp
sub
hlt
pop
mov
add
sbb
jmp
sub
hlt
outs
mov
push
add
int
sbb
xor
mov
movups
xor
pop
dec
repnz
mov
sbb
mov
out
xchg
pop
sub
stos
dec
clc
sbb
icebp
and
fwait
div
(bad)
cmp
loope
outs
xor
imul
hlt
or
sub
mov
(bad)
dec
hlt
pop
nop
pop
sar
ja
enter
movs
cmp
pop
push
in
push
out
push
dec
cld
add
js
sbb
call
hlt
dec
adc
add
int
ja
jmp
mov
out
jb
xor
cmps
xor
jl
icebp
xor
push
xchg
pop
mov
pop
add
xor
pop
push
xor
mov
movups
add
and
xor
mov
movups
and
xor
mov
movups
xor
pop
enter
ins
mov
push
adc
sub
xchg
pop
call
adc
cmp
xor
stos
xchg
pop
mov
movups
and
int3
test
lods
repz
xchg
cs
jne
sbb
inc
pop
(bad)
inc
hlt
pop
mov
xor
lea
aaa
jne
and
add
movs
lahf
pop
mul
movups
and
xor
test
pop
mov
movups
or
mov
sub
add
inc
dec
and
mov
int3
mov
lock
push
or
hlt
pop
inc
pop
mov
or
cmps
cmp
and
icebp
xor
jecxz
sub
add
or
loop
fistp
adc
xor
push
repnz
mov
push
adc
xor
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
fistp
adc
xor
push
bnd
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
repnz
fidivr
sub
cli
out
xchg
mov
or
xchg
jecxz
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
pop
mov
and
lea
adc
push
fistp
adc
xor
push
bnd
fistp
out
jb
push
gs
aaa
ja
in
cmp
movs
mov
stc
xchg
or
mov
aam
mov
xchg
dec
inc
cdq
xor
push
jno
cld
ds
cmp
hlt
jp
jne
cld
sub
inc
pop
sub
es
ins
ficomp
in
pop
xchg
add
mov
cmp
mov
xlat
dec
sbb
pop
enter
movs
xor
xor
mov
pop
mov
movups
sub
pop
push
in
xor
lahf
xchg
pop
mov
movups
sbb
pop
push
in
outs
pop
mov
xchg
pop
cmp
dec
jecxz
mov
lods
lock
xchg
sbb
mov
adc
xchg
in
rcl
adc
pushf
sub
mov
ret
inc
cdq
or
sbb
ja
in
cmp
add
(bad)
push
sub
lock
repz
movs
sahf
dec
mov
out
xchg
pop
and
fstp
adc
xor
pop
inc
repnz
mov
lock
xchg
sbb
pushf
mov
jmp
mov
cmp
cmp
jge
mov
and
xchg
femms
dec
test
scas
mov
shr
xchg
(bad)
mov
adc
dec
mov
outs
in
xchg
pop
xor
leave
push
repnz
mov
movups
xor
pop
jo
xor
xchg
push
pop
mov
and
push
adc
aam
mov
adc
lea
and
xor
movs
sahf
dec
mov
push
in
xchg
pop
xor
dec
pusha
div
push
fnstsw
sub
add
add
ss
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
lock
mov
pusha
adc
xor
push
repnz
push
fistp
adc
xor
fistp
pop
mov
sbb
scas
or
lods
cmp
lock
enter
movs
cmp
pop
push
stc
xor
mov
pop
mov
movups
sub
pop
push
in
xor
popf
xchg
pop
mov
movups
pop
and
xor
mov
lea
adc
sub
int3
test
lods
out
and
xchg
adc
test
fisttp
xchg
jo
cdq
add
add
jmp
inc
jnp
sub
hlt
ins
mov
adc
cmps
int3
push
jb
idiv
push
jnp
jecxz
fidivr
pop
cmp
cmp
mov
lea
and
repnz
mov
sysret
lea
and
repnz
mov
sysret
cmp
and
mov
add
data16
inc
sub
sbb
test
(bad)
or
pop
fbld
sub
cdq
jne
std
and
xchg
cs
jne
sbb
inc
pop
(bad)
dec
(bad)
xchg
dec
inc
cdq
cmp
cmp
pop
imul
dec
shl
lock
mov
jo
cmc
imul
xor
mov
femms
cwde
or
ja
int
inc
inc
fld
dec
hlt
dec
mov
cld
add
pop
and
ret
movs
lahf
inc
mov
cli
out
ja
shl
mov
mov
repnz
jb
adc
popa
and
push
push
fistp
cmp
xor
pop
jo
xor
xchg
jle
mov
and
pushfw
test
mov
shl
lock
xor
dec
push
repnz
mov
das
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
add
lea
cmp
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
mov
mov
lea
xor
repnz
fidivr
sub
cli
out
xchg
mov
or
fwait
pop
mov
or
lea
cs
push
repnz
mov
adc
push
xor
pop
push
repnz
pop
mov
and
lea
adc
push
fistp
sbb
pop
sub
sub
mov
sbb
sbb
lea
loope
mov
mov
xlat
push
cwde
lds
jecxz
inc
jnp
sub
hlt
jne
dec
cdq
es
imul
pop
out
push
dec
cmc
add
xchg
or
mov
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
adc
pop
push
in
cmp
sub
dec
sti
and
fwait
cs
mov
rol
(bad)
dec
iret
xchg
jl
scas
enter
cs
jne
sbb
inc
jnp
sub
aam
mov
mov
out
jb
cmp
jnp
sub
hlt
push
mov
add
or
jnp
sub
in
aas
jge
ins
fcomp
in
push
xchg
sbb
sbb
or
mov
jmp
or
push
xor
pop
push
repnz
mov
jnp
cmp
pop
retf
and
push
cdq
adc
jno
sub
into
test
stos
enter
sbb
pushf
(bad)
mov
shl
adc
sbb
push
hlt
sbb
sti
pop
mov
das
daa
mov
and
in
dec
aam
mov
push
repnz
jb
adc
and
repnz
mov
movups
xor
pop
push
repnz
mov
cli
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
bnd
fistp
adc
xor
push
repnz
fistp
pop
mov
sub
test
dec
sbb
push
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
in
xor
popf
xchg
pop
mov
movups
sbb
pop
push
fnsave
push
fisttp
pop
sbb
pop
sub
daa
jge
mov
pop
cmp
cmp
jnp
sub
mov
and
xchg
adc
mov
pop
fcos
xchg
inc
call
inc
pop
stc
sub
rol
push
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
aaa
lods
jae
out
jae
lds
inc
jnp
sub
hlt
push
mov
or
cmp
sbb
inc
sub
sub
cmps
lahf
inc
movs
out
aaa
test
out
ja
(bad)
ds
jnp
sub
mov
and
xchg
cs
sbb
inc
jnp
jecxz
fidivr
sbb
int3
fisub
shl
rcr
jecxz
sbb
sbb
(bad)
xchg
bound
cld
sbb
pop
and
cs
out
push
dec
sti
add
call
dec
jnp
das
pop
(bad)
mov
dec
mov
cli
adc
push
and
jl
fistp
cmp
and
int3
test
and
add
xor
fs
xor
stc
mov
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
fistp
aaa
xchg
or
mov
and
pop
imul
movups
and
xor
test
pop
mov
movups
sub
pop
push
shl
push
fistp
movups
add
pop
push
(bad)
xor
mov
lock
jb
sbb
sub
cmp
stos
mov
push
cdq
cs
jbe
sar
ja
in
ds
mov
add
pop
sbb
inc
push
or
fstp
add
jge
out
xchg
mov
retf
and
sbb
add
and
xor
mov
movups
and
xor
mov
out
sbb
push
call
inc
jnp
and
jne
cld
sbb
inc
inc
sub
cmp
mov
lock
nop
cs
scas
sbb
inc
jnp
sub
mov
and
nop
cs
jne
sbb
mov
repz
movs
sahf
inc
mov
out
xchg
pop
and
fidivr
adc
int3
fisub
(bad)
mov
inc
mov
cli
cmovno
sub
in
das
pop
out
push
dec
jmp
xchg
femms
gs
add
shl
out
(bad)
and
add
push
repnz
mov
add
xchg
pop
int
inc
pop
in
das
pop
out
imul
movs
xor
dec
push
repnz
mov
inc
mov
psubw
xor
movs
push
repnz
xchg
pop
mov
cmovb
and
push
repnz
mov
cmovns
and
repnz
mov
pmulhuw
xor
dec
push
repnz
fidivr
inc
mov
and
xor
fistp
jecxz
add
and
movs
cwde
jne
cld
pop
sbb
pop
xor
xor
mov
nop
xor
dec
push
repnz
mov
rdtsc
lea
and
repnz
mov
mov
add
sbb
sub
and
nop
cs
jne
sbb
inc
inc
(bad)
dec
rcl
adc
cmps
fisttp
jle
in
inc
jnp
sub
hlt
jb
dec
cdq
sub
pop
mov
sub
dec
lods
and
inc
mov
cmc
out
xchg
pop
xor
push
push
repnz
mov
nop
xor
dec
push
repnz
xchg
inc
mov
wrmsr
lea
loop
scas
or
mov
adc
cmp
sbb
sub
sub
cmps
mov
pop
xchg
add
scas
fbld
(bad)
xchg
gs
cdq
or
pop
inc
inc
sub
mov
shl
adc
cmp
dec
pop
retf
and
pop
sar
and
add
push
cmp
pop
push
in
cmp
mov
jnp
sbb
sbb
scas
or
mov
adc
cmp
cmp
mov
icebp
out
jb
xor
movs
xor
jl
repz
inc
xchg
pop
mov
sbb
xchg
push
push
jnp
or
mov
out
mov
sysexit
lea
xor
in
push
fistp
movups
aam
pop
push
cmc
xor
mov
push
adc
hlt
and
xor
jbe
pop
mov
movups
push
and
xor
dec
xchg
pop
mov
push
adc
aam
pop
push
or
xchg
pop
mov
movups
ss
pop
mov
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
aaa
jb
cli
out
jne
sbb
dec
jnp
sub
hlt
push
xor
add
push
add
sub
cmp
add
xchg
jmp
mov
and
test
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
sbb
or
popa
inc
cdq
adc
pop
cmps
jmp
jg
fdivr
mov
sbb
mov
jecxz
jb
push
arpl
jmp
jle
mov
cs
stos
jbe
fistp
or
int
inc
inc
fld
dec
shr
icebp
out
jb
cmp
inc
loope
outs
jge
imul
adc
iret
scas
or
mov
mov
lea
cmp
and
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
adc
xor
push
fistp
inc
mov
sub
inc
neg
std
(bad)
stc
xchg
pop
mov
or
lea
sub
push
fistp
adc
xor
dec
push
fnstenv
push
cdq
push
adc
inc
dec
sub
cmp
cmp
push
adc
xor
xor
mov
nop
xor
dec
push
repnz
mov
lock
xchg
in
pop
cmp
mov
xchg
jge
mov
and
xchg
pop
sub
test
fld
dec
hlt
push
lea
clc
and
pop
push
adc
adc
fisttp
int3
test
and
loopne
add
xor
xor
stc
(bad)
pop
mov
hlt
adc
xor
push
repnz
push
fistp
adc
xor
repnz
mov
or
lea
rcr
jno
fistp
adc
xor
pop
push
repnz
mov
adc
lea
jo
push
repnz
push
fistp
adc
xor
or
shl
icebp
cli
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
cmp
lea
sbb
hlt
dec
mov
adc
add
fdivr
push
jnp
cs
mov
sbb
inc
jae
or
shl
rcr
adc
sub
dec
scas
and
dec
mov
sti
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
mov
adc
or
mov
hlt
dec
mov
adc
push
cmps
jmp
inc
dec
sub
mov
stc
sbb
test
ror
sbb
mov
hlt
dec
mov
(bad)
and
xchg
cs
je
aam
ja
in
sbb
mov
sbb
xchg
or
je
or
scas
or
lea
mul
movups
and
int3
test
test
adc
pop
sub
test
aam
cwde
repnz
xchg
cs
scas
sub
or
inc
imul
adc
xor
movs
push
repnz
push
mov
sti
out
xchg
movs
xor
dec
pusha
icebp
xor
mov
push
sub
add
cmp
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
mov
sbb
lea
jl
push
repnz
mov
inc
adc
xor
pop
push
repnz
pop
mov
clc
adc
xor
push
repnz
sahf
pop
mov
cdq
adc
xor
jp
loopne
outs
mov
clc
add
stc
cli
out
xchg
mov
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
mov
cmp
pushfw
add
mov
shl
xchg
cs
jne
sbb
inc
inc
(bad)
dec
rcl
adc
cmps
fmul
jb
or
shr
adc
daa
sub
test
mov
cli
pop
das
lods
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
int3
fisub
shl
push
sub
jne
sbb
inc
pop
fnop
dec
hlt
pop
mov
aas
adc
xchg
add
pushf
mov
cmp
mov
add
cmp
ror
bound
adc
sub
aas
outs
mov
loopne
push
lods
pop
push
imul
inc
rol
add
daa
sub
test
mov
adc
mov
aad
popf
push
lods
test
lods
sti
out
xchg
cmps
sub
ficom
mov
add
cmp
sub
dec
push
and
dec
and
mov
movs
xor
inc
pop
loope
inc
(bad)
sbb
fcom
lea
sub
repnz
mov
not
lea
or
repnz
mov
pop
adc
xor
repnz
push
fistp
adc
xor
pop
push
xacquire
mov
mov
lea
cmp
stc
and
and
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jno
xor
mov
movups
and
test
lods
in
and
xchg
or
xchg
adc
test
cmc
and
xchg
cs
jl
in
push
jnp
and
push
mov
cli
out
ins
loope
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
mov
or
jb
push
jle
(bad)
ds
jnp
sub
hlt
push
mov
or
add
loopne
jnp
sar
dec
stc
and
pop
push
dec
(bad)
and
xchg
(bad)
mov
sbb
jge
mov
or
xchg
dec
dec
das
movs
xor
pop
pop
repnz
scas
nop
add
out
xchg
cs
test
sub
retf
and
jne
sti
add
jns
or
jge
stos
sahf
dec
mov
cmp
and
xor
and
adc
and
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
sqrtps
xor
inc
mov
or
bound
xor
mov
str
xor
dec
push
repnz
xchg
inc
mov
ud2
sahf
add
push
pop
int
inc
jnp
sub
cmps
mov
or
sub
sbb
mov
and
outs
pushf
js
mov
fistp
sbb
movs
xor
dec
push
repnz
mov
or
stos
cli
out
xchg
mov
add
hlt
push
mov
or
cmp
sbb
mov
and
pop
or
addr16
cdq
adc
cmp
cmp
add
xor
cmps
cdq
inc
mov
sti
out
xchg
mov
je
scas
or
xchg
push
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
pop
mov
add
push
xor
push
repnz
fistp
adc
xor
pop
push
repnz
mov
sbb
lea
inc
pop
push
repnz
adc
jecxz
adc
xor
push
repnz
fistp
adc
xor
or
xor
and
lock
xchg
or
pop
pop
int
pop
adc
mov
pop
mov
movups
and
xor
cmps
xchg
pop
mov
movups
pop
and
xor
xchg
xchg
pop
mov
movups
sub
int3
test
inc
cld
add
jg
push
inc
dec
sub
sbb
cdq
add
or
jmp
dec
jnp
sub
mov
sbb
imul
pop
out
push
dec
hlt
add
cwde
or
sbb
pop
adc
mov
movups
and
pop
push
in
push
fbld
movups
sub
test
lods
clc
and
xchg
push
cmp
(bad)
inc
hlt
pop
mov
add
cmp
sbb
ds
scas
or
mov
hlt
and
call
ja
jmp
mov
adc
cmp
inc
inc
dec
aas
and
pop
mov
adc
inc
adc
xor
pop
push
repnz
rol
push
cmps
repz
pusha
scas
sub
int
and
adc
cmp
es
out
push
dec
jmp
xchg
femms
arpl
jmp
mov
mov
rdtsc
push
adc
frstor
pop
push
fsubr
pop
shl
in
jo
out
jns
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
and
push
xor
push
fistp
adc
xor
pop
push
repnz
mov
or
lea
add
bnd
fistp
adc
xor
push
fistp
adc
xor
push
fistp
inc
mov
sbb
scas
or
lods
sub
lock
enter
movs
cmp
pop
push
stc
xor
mov
pop
mov
movups
sub
pop
push
in
xor
lahf
xchg
pop
mov
movups
sbb
xor
mov
mov
out
xchg
pop
sub
stos
dec
std
sbb
lods
out
and
xchg
adc
lea
loopne
mov
cmps
mov
(bad)
xchg
pop
cmp
dec
stc
sbb
out
movhps
or
mov
shl
pop
enter
movs
xor
xor
mov
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
add
xor
out
xchg
mov
jmp
mov
sti
xchg
sbb
mov
fldlg2
dec
(bad)
xchg
dec
inc
mov
xchg
out
xchg
pop
sub
sbb
cdq
or
cmp
cmp
pop
fldln2
xchg
stc
add
add
fiadd
in
aas
outs
mov
loopne
push
call
movs
xor
push
push
repnz
mov
pop
dec
sbb
push
cwde
cs
scas
sub
fs
or
test
stos
jmp
sub
int
dec
jnp
sub
mov
cld
icebp
out
jb
xor
xor
jl
repz
inc
xchg
pop
mov
adc
pushfw
xor
mov
out
mov
sysexit
lea
xor
in
push
(bad)
xchg
pop
mov
movups
cmc
and
xor
mov
movups
int
pop
push
and
push
fild
mov
movups
cmp
pop
push
(bad)
push
fistp
pop
mov
push
adc
leave
and
xor
xchg
xchg
pop
mov
movups
aas
xor
push
adc
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jbe
xor
mov
movups
int
mov
shr
cld
xchg
adc
mov
xchg
dec
inc
cdq
cmp
cmp
add
and
lea
cs
shl
out
jb
push
ins
movs
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
lock
xchg
in
stos
sbb
inc
inc
(bad)
dec
hlt
push
mov
sti
and
xchg
or
addr16
sbb
hlt
dec
mov
hlt
and
xchg
cs
jne
sbb
dec
jnp
ss
mov
loop
adc
sub
mov
cdq
push
adc
xchg
or
outs
pushf
fbld
lds
sbb
mov
out
xchg
pop
sub
lods
inc
clc
cs
shl
out
jb
adc
xor
pop
jo
xor
xchg
fstp
and
outs
loope
and
xor
sbb
pop
mov
movups
xor
pop
push
pop
xor
adc
lea
and
xor
pop
xchg
pop
mov
movups
repz
xor
mov
pop
adc
aas
ds
inc
neg
lock
stc
pushf
pop
mov
pop
adc
xor
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
fiadd
cmp
sbb
mov
(bad)
dec
hlt
push
mov
cli
and
xchg
or
mov
and
sbb
mov
prefetcht0
xor
dec
push
repnz
mov
femms
adc
push
xchg
int
mov
aam
inc
mov
out
push
arpl
jmp
push
out
imul
cs
(bad)
fistp
ja
in
mov
jmp
xchg
or
outs
pushf
(bad)
fbld
and
dec
and
mov
add
xor
loope
inc
(bad)
sbb
mov
lea
into
pop
push
repnz
mov
not
lea
es
push
repnz
mov
adc
lea
in
push
repnz
mov
or
lea
out
push
repnz
push
fistp
adc
xor
pop
push
repnz
scas
nop
jne
jmp
sbb
xor
push
push
repnz
mov
sysret
lea
and
repnz
mov
(bad)
add
sbb
or
popa
inc
cdq
adc
pop
cmps
jmp
inc
dec
sub
sbb
lods
jmp
cmp
dec
clc
das
pop
ret
popfw
sbb
out
mov
push
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
int3
mov
lock
test
in
pop
aaa
ja
in
ds
mov
add
outs
adc
mov
or
mov
std
and
fwait
cs
je
fidivr
ja
div
aaa
ror
adc
and
test
stos
out
adc
mov
cmp
jmp
dec
sbb
or
pushf
test
mov
(bad)
mov
dec
mov
cli
out
jbe
das
xor
jo
test
cmps
loop
adc
sbb
inc
int3
mov
movups
xor
pop
push
movs
xor
add
(bad)
lds
push
pushf
and
xor
adc
pop
mov
movups
lods
and
xor
pop
xchg
pop
mov
movups
repnz
fs
fistp
adc
lods
ja
pop
push
repnz
mov
add
lea
xor
push
fistp
adc
or
scas
or
mov
or
sub
sbb
in
movhps
ja
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
int3
mov
lock
xchg
in
stos
sbb
inc
jnp
sub
jne
inc
push
adc
fisub
hlt
dec
lea
jmp
xchg
idiv
jbe
ds
shr
lock
cmps
cmp
and
div
sub
mov
push
push
sahf
add
outs
loope
and
xor
mov
movups
mul
pop
push
icebp
xor
pop
xchg
pop
mov
movups
push
and
xor
jnp
pop
mov
movups
mov
pop
push
dec
xor
pop
xchg
pop
mov
movups
push
and
xor
pop
xchg
pop
mov
add
sahf
add
lock
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
int3
mov
lock
sahf
cs
pop
ds
jnp
sub
hlt
push
mov
sbb
outs
sbb
mov
fldl2e
dec
rcl
add
sahf
add
pop
pop
int
pop
adc
mov
pop
mov
movups
daa
and
xor
mov
pop
add
int
dec
jnp
sub
hlt
dec
mov
push
adc
cmps
in
cmovno
or
fild
cmp
cmp
jnp
sub
cmps
mov
push
leave
pop
push
imul
dec
int3
mov
lock
sub
pop
push
mov
adc
mov
ss
dec
loope
outs
inc
inc
imul
adc
shr
pushf
mov
push
mov
and
jmp
mov
jnp
movs
xor
pop
push
repnz
fistp
cwde
lea
and
repnz
fistp
push
lea
and
push
repnz
fistp
mov
cld
xor
pop
jbe
sub
mov
pop
cdq
dec
push
push
mov
and
xor
mov
movups
xor
pop
dec
repnz
scas
xchg
jne
hlt
and
call
dec
jnp
das
jge
mov
and
pop
pop
adc
adc
dec
pop
cmc
jbe
fistp
sbb
movs
xor
dec
push
repnz
mov
aaa
push
jb
out
jne
sbb
inc
jnp
and
jne
std
and
xchg
or
pusha
mov
sbb
or
mov
jmp
xchg
cs
jbe
aad
add
repnz
mov
mov
xor
dec
push
repnz
mov
adc
lea
pop
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
adc
jecxz
adc
xor
push
fistp
adc
xor
pop
push
repnz
retf
pop
mov
inc
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
aaa
xchg
adc
fisub
and
pop
imul
movups
cmp
pop
push
std
xor
scas
xchg
pop
mov
movups
das
and
xor
cdq
xchg
pop
mov
movups
sbb
xor
mov
lock
xchg
adc
pushf
mov
(bad)
dec
aam
jg
cdq
or
add
(bad)
sar
inc
jnp
sub
mov
and
xchg
or
movs
mov
jmp
mov
aaa
in
cli
out
jno
sub
int
and
nop
xor
push
push
repnz
xchg
dec
mov
ud2
lea
and
repnz
mov
jecxz
sbb
push
xchg
cs
pop
cmp
jge
mov
and
xchg
sbb
or
shl
lock
xchg
loop
scas
sbb
inc
pop
(bad)
inc
hlt
push
xor
add
ins
sbb
inc
jns
or
fstp
adc
cmp
adc
call
adc
jge
mov
sub
aaa
push
jae
out
jo
(bad)
cmp
stc
sub
rol
cmp
sbb
sub
int
and
rdtsc
xor
adc
leave
and
cs
shl
out
xchg
push
push
gs
fbld
out
mov
sysenter
lea
fs
push
repnz
fistp
push
add
and
push
repnz
fistp
jae
add
and
repnz
fistp
dec
lea
and
in
cmp
pop
mov
push
or
adc
xor
pop
pop
repnz
mov
movups
and
xor
mov
and
xchg
(bad)
mov
add
jge
cmps
mov
or
loop
pop
push
hlt
adc
push
mov
adc
mov
repnz
mov
aaa
pop
jb
out
jl
lds
push
dec
sti
cmp
inc
imul
sbb
popa
pushf
push
fisub
fdivr
adc
sbb
push
dec
sti
cmp
inc
imul
add
and
jge
mov
bndstx
xor
fst
xor
mov
punpckhdq
xor
aam
repnz
fistp
jae
add
and
repnz
xchg
cmc
add
xor
sbb
test
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
cmp
ror
inc
hlt
dec
mov
adc
jge
cmp
jnp
sub
pop
mov
sub
xchg
sbb
mov
rcr
sbb
add
sbb
scas
or
mov
add
int3
cli
out
xchg
mov
in
aas
pop
out
imul
add
push
leave
and
test
fistp
add
mov
out
xchg
pop
xor
dec
pusha
icebp
xor
mov
push
cmp
add
xor
in
repnz
fistp
mov
xor
xchg
push
repnz
fistp
mov
xor
pop
push
repnz
mov
ud1
xor
mov
xor
mov
add
cmp
xor
push
push
repnz
mov
lsl
xor
inc
push
repnz
mov
rdpmc
lea
sbb
scas
or
bound
adc
cmp
cmp
jnp
sub
mov
and
pop
pop
adc
adc
push
dec
stc
cmp
inc
imul
pop
push
push
push
repnz
mov
aaa
daa
jb
out
jo
lds
ja
jmp
dec
sbb
or
icebp
or
sub
inc
pop
stc
or
inc
imul
adc
xor
rcl
jl
pushf
sbb
add
and
in
cmp
mov
mov
sbb
add
xor
jns
repnz
mov
setnp
xor
aas
push
repnz
fistp
ins
lea
and
push
repnz
mov
setbe
xor
push
push
repnz
xchg
cld
add
cmps
mov
daa
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
cmp
rol
leave
inc
hlt
dec
mov
adc
cmp
sbb
sub
mov
(bad)
inc
hlt
pop
inc
add
femms
popa
scas
or
scas
or
mov
mul
movups
sub
fs
mov
test
jmp
cs
pop
int
ja
jmp
dec
aam
lods
ins
dec
sbb
adc
adc
pop
push
repnz
fnstsw
sbb
int
dec
pusha
div
mov
mov
push
cmp
add
xor
daa
push
repnz
fistp
or
and
push
repnz
fistp
xchg
lea
and
repnz
mov
xadd
add
ins
sub
pop
hlt
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
shr
repnz
sub
lods
dec
(bad)
dec
hlt
push
xor
and
pop
pop
adc
adc
push
dec
sti
cmp
inc
imul
das
dec
das
movs
xor
pop
push
repnz
mov
adc
lock
repnz
cmp
adc
pusha
inc
mov
xor
xchg
pop
xor
pop
jo
xor
pushf
imul
add
ds
pop
retf
and
dec
and
hlt
lea
xor
cmc
jbe
fistp
or
and
fistp
sbb
xor
aam
repnz
fistp
jo
add
and
mov
add
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
invd
xchg
lahf
je
enter
in
cmp
stos
mov
push
cmps
out
or
sub
mov
fstp
add
call
ss
dec
into
push
fidivr
adc
int
inc
jnp
sub
lahf
data16
out
xchg
cs
scas
sub
int3
test
lods
ret
adc
adc
sbb
outs
ret
mov
mov
xor
jns
repnz
mov
pshufw
and
push
repnz
mov
setbe
xor
push
push
repnz
xchg
fidiv
add
and
push
repnz
xchg
std
add
xor
sbb
xor
push
push
repnz
mov
bndldx
xor
dec
push
repnz
mov
ud2
lea
scas
inc
pop
fxch
dec
hlt
dec
mov
sti
and
call
ja
in
cmp
ins
hlt
pop
mov
sub
xchg
sbb
int
mov
sahf
in
pop
mov
movhps
or
scas
or
mov
aaa
push
jb
out
jb
(bad)
cmp
stc
or
inc
imul
adc
xor
xor
xor
push
mov
lock
jb
adc
xor
mov
fistp
sbb
add
and
push
repnz
fistp
xchg
lea
and
repnz
fistp
lahf
lea
and
fistp
pop
stos
sbb
popa
(bad)
jnp
xor
pop
mov
movups
xor
pop
pop
repnz
mov
movups
xor
pop
dec
stc
sbb
ret
inc
cdq
adc
cmp
cmp
jnp
sub
cmps
mov
adc
cmp
cmp
fisttp
adc
sub
int3
test
scas
jmp
out
xchg
pop
and
test
out
imul
add
and
xor
xchg
adc
(bad)
cli
out
jns
xor
mov
repnz
mov
dec
sbb
add
and
push
repnz
mov
(bad)
lea
and
push
repnz
fistp
test
xor
push
push
repnz
mov
movhps
mov
push
jnp
xor
pop
mov
movups
xor
pop
pop
repnz
mov
movups
xor
pop
dec
stc
sbb
leave
xchg
outs
inc
cdq
adc
cmp
sbb
sub
mov
(bad)
inc
hlt
pop
xor
ins
adc
sub
int3
test
mov
adc
inc
adc
xor
pop
push
repnz
lock
femms
scas
or
mov
sub
aaa
and
out
push
div
xor
sbb
pop
mov
mov
lea
cmp
sub
int3
test
and
sti
lea
xor
cmc
jbe
fistp
ins
lea
and
push
repnz
mov
lgs
xor
pop
push
repnz
mov
jne
movs
xor
mov
repz
cmps
lahf
jne
cmc
add
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
ud2
xchg
lahf
jae
enter
add
jge
mov
and
xchg
push
cmp
jnp
jecxz
fidivr
sbb
int
pop
xor
jbe
call
adc
int
mov
ret
mov
push
mov
cli
or
das
sub
stc
or
imul
movups
sbb
pop
push
hlt
sbb
mov
lock
jb
adc
xor
mov
fistp
sbb
add
and
push
repnz
mov
nop
xor
fist
xor
mov
movups
xor
push
push
repnz
mov
movhps
mov
jnp
xor
pop
mov
movups
xor
pop
pop
repnz
mov
movups
xor
pop
inc
stc
sbb
rcl
cmp
sbb
sub
sbb
mov
add
ins
and
test
sar
push
push
mov
and
or
and
dec
cdq
adc
sbb
int
inc
jnp
and
lds
lock
adc
push
repnz
fnstsw
sbb
xor
dec
pusha
icebp
xor
mov
push
cmp
add
xor
add
xor
fistp
adc
xor
ret
push
repnz
fistp
fwait
lea
and
xor
mov
xadd
add
ins
sub
pop
aam
and
jmp
adc
xor
xor
mov
pop
mov
movups
and
xor
cmps
lahf
jne
hlt
and
xchg
cs
lods
sbb
inc
jnp
sub
mov
jmp
shl
pop
jbe
cmp
mov
cmp
sbb
adc
std
ja
pop
push
repnz
fistp
out
jb
cmp
pop
retf
and
jne
sti
add
pop
pop
int
pop
dec
sahf
sub
imul
pop
sbb
int
mov
out
mov
sysenter
lea
fs
push
repnz
mov
setbe
xor
and
xor
fistp
fwait
lea
and
push
repnz
fistp
mov
add
and
out
cmp
cmps
lahf
jne
in
sbb
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
or
lods
sbb
inc
pop
fld
dec
(bad)
xchg
jns
cdq
or
sbb
sar
ja
and
fistp
add
in
cli
out
xchg
mov
stos
jbe
fistp
or
int
ja
in
dec
aam
stos
mov
js
sbb
or
mov
call
pop
mov
int3
adc
xor
jbe
clc
sub
movs
imul
push
adc
xor
jle
repnz
mov
sbb
add
and
xor
mov
movups
add
and
xor
mov
movups
(bad)
daa
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
and
call
ja
in
cmps
(bad)
xchg
jp
cdq
or
adc
sbb
xor
xor
pop
push
div
push
fbld
and
xchg
sysret
pushfw
dec
fisub
lds
lock
jb
xor
movs
xor
jl
repz
and
test
push
xor
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
jbe
add
sub
div
push
fistp
movups
aas
and
xor
cmps
cdq
jne
stc
and
xchg
cs
pop
cmp
in
mov
mov
sbb
lahf
cmp
int3
fisub
out
mov
rdpmc
lea
fs
push
repnz
fistp
sub
xor
push
push
repnz
mov
movups
xor
or
aad
cwde
jne
in
pop
lea
and
repnz
xchg
push
mov
sidtd
xor
inc
pop
fstp
jne
sti
and
call
ja
div
aaa
shr
adc
cmp
lods
lds
lock
jb
cmp
push
mov
movups
sbb
pop
push
hlt
sbb
mov
pop
mov
movups
xor
pusha
push
repnz
mov
movups
xor
mov
repz
xchg
mov
cmps
or
lea
es
push
repnz
mov
pop
adc
test
mov
cdq
adc
cmp
jns
movs
xor
jbe
add
test
and
repnz
xor
cmc
jbe
fistp
(bad)
lea
and
push
repnz
fistp
or
and
push
repnz
mov
movups
xor
mov
repz
mov
adc
das
lods
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
sub
cmps
dec
fld
dec
aad
addr16
cdq
adc
sbb
sub
mov
pmullw
sbb
int
pop
push
xchg
sub
xchg
xchg
pop
mov
or
lea
fisub
enter
mov
cmp
push
mov
sbb
inc
adc
sub
sub
and
dec
and
cli
lea
xor
cmc
jbe
fistp
xchg
lea
and
push
repnz
fistp
or
and
fistp
call
and
mov
add
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
femms
test
cmp
mov
add
mov
or
sub
pop
push
fistp
add
call
aaa
das
pop
xor
adc
call
adc
jle
mov
les
lock
jb
cmp
push
mov
scas
adc
xor
je
repz
cmps
sahf
inc
mov
cli
adc
and
mov
dec
sbb
add
and
fistp
adc
xor
push
push
repnz
fistp
fwait
lea
and
push
repnz
fistp
pop
stos
sbb
sub
hlt
jbe
fistp
push
lea
and
repnz
xchg
dec
mov
invd
lea
and
fnstcw
push
cdq
adc
sbb
sub
sbb
cdq
add
jp
add
cmp
test
lods
mov
adc
xor
pop
dec
(bad)
cmp
inc
imul
sbb
push
in
fisub
aad
lahf
xchg
out
pop
xor
iret
repz
test
pop
mov
sbb
xchg
push
sub
int
dec
pusha
clc
xor
mov
push
or
movs
xor
push
push
repnz
fistp
adc
xor
cmp
xor
mov
pshufw
and
jmp
mov
unpckhps
xor
push
push
repnz
mov
sysret
lea
mov
or
hlt
dec
mov
adc
sbb
sub
mov
sti
cmp
pop
mul
movups
and
int3
test
mov
cli
out
xchg
mov
aam
pop
jmp
mov
or
add
outs
stos
xor
pop
jo
xor
pushf
js
mov
daa
add
mov
repnz
mov
movups
xor
pop
push
repnz
mov
movups
pop
and
sbb
mov
unpckhps
xor
push
push
repnz
mov
prefetch
enter
out
sbb
cdq
or
pop
dec
mov
retf
and
dec
and
or
xor
cli
jbe
fistp
jns
add
and
push
repnz
fistp
jns
add
and
push
repnz
mov
push
sbb
mov
repnz
mov
movups
xor
pop
inc
repnz
mov
imul
or
lods
dec
(bad)
dec
hlt
push
xchg
pop
sar
cmp
add
push
and
aas
jge
movs
mov
sbb
int
ja
in
dec
(bad)
mov
xor
sbb
adc
xor
push
push
repnz
mov
add
enter
movs
jb
pop
push
cmc
xor
mov
movups
jb
pop
push
mov
push
fisttp
bound
lea
aaa
inc
mov
repnz
mov
movups
xor
pop
inc
repnz
mov
in
movs
enter
repnz
lods
dec
(bad)
xchg
cmc
add
pop
das
sub
pusha
icebp
xor
jecxz
cmp
add
xor
push
push
repnz
fistp
call
and
push
repnz
mov
cmove
xor
enter
sub
mov
xadd
add
ins
sub
ja
in
aas
pop
hlt
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
shr
cs
pop
ds
jnp
sub
mov
and
xchg
(bad)
je
and
sub
lods
cmp
sbb
adc
std
ja
pop
push
repnz
mov
inc
out
jb
push
arpl
stc
or
inc
imul
adc
fwait
push
sub
int
pop
jo
xor
pushf
test
mov
cmp
push
push
mov
psubw
xor
ja
cmc
jbe
fistp
ins
lea
and
repnz
mov
(bad)
lea
and
push
repnz
mov
sete
xor
mov
repz
cmps
lahf
jne
inc
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
sysret
xchg
lahf
jl
enter
in
sbb
cdq
or
push
pusha
(bad)
aam
push
jnp
jecxz
fidivr
sbb
aaa
and
adc
mov
movups
int
inc
pop
fld
dec
aad
lahf
data16
out
xchg
cs
scas
sub
fs
mov
mov
rdtsc
jl
adc
daa
and
and
lds
lock
xor
jns
repnz
mov
setg
xor
dec
push
repnz
fistp
adc
xor
retf
push
repnz
fistp
inc
lea
and
push
repnz
xchg
cld
push
sbb
sbb
push
fistp
movups
cmp
xor
stos
xchg
pop
mov
movups
sub
das
jge
mov
and
nop
cs
scas
sbb
inc
pop
(bad)
inc
hlt
pop
mov
fbld
add
cmp
xchg
int3
test
mov
adc
inc
adc
xor
pop
push
repnz
hlt
imul
sbb
jb
or
mov
sub
and
jb
adc
aaa
das
pop
jo
xor
pushf
or
mov
daa
add
add
cmp
loop
test
and
clc
lea
xor
cmc
jbe
fistp
inc
lea
and
repnz
fistp
adc
xor
and
xor
fistp
jne
add
and
movs
lahf
jne
cld
add
cmps
mov
das
lods
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
sbb
inc
jnp
sub
hlt
dec
mov
or
sbb
sub
sbb
mov
adc
or
ficomp
xchg
sub
xchg
xchg
pop
mov
or
lea
fisub
sub
xor
jb
or
sub
inc
pop
retf
and
jle
loope
adc
sbb
dec
aad
lahf
stos
sbb
out
lea
and
repnz
test
jmp
sbb
xor
aas
push
repnz
fistp
sub
movs
xor
xor
xor
fistp
outs
lea
and
jmp
rcr
jecxz
adc
movs
xor
push
push
repnz
mov
(bad)
lea
xchg
or
jge
mov
push
cmp
cmp
push
cld
aaa
aaa
shl
adc
sbb
scas
or
mov
aaa
jg
cli
out
jo
(bad)
cmp
dec
xor
inc
imul
xor
add
push
xchg
pop
push
fidivr
inc
mov
add
and
repnz
mov
movhps
xor
pop
push
repnz
mov
movhps
ja
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
hlt
jb
out
cs
pop
cmp
mov
mov
xchg
cmp
xor
dec
pusha
icebp
xor
mov
push
cmp
add
xor
pop
push
repnz
fistp
add
xor
aad
repnz
fistp
xchg
lea
and
push
repnz
mov
xadd
add
ins
sub
pop
aam
and
jmp
adc
cmp
pop
push
stc
xor
mov
pop
mov
movups
sub
pop
push
out
xor
cmps
lahf
jne
cld
add
je
cmp
(bad)
dec
aad
jg
cdq
or
cmp
cmp
push
aam
pop
(bad)
mov
cmp
sbb
adc
std
ja
pop
push
repnz
fistp
out
jb
cmp
push
stos
mov
sbb
xor
adc
xor
mov
push
adc
cmp
inc
scas
or
xchg
mov
jecxz
xor
add
fs
push
repnz
xchg
cmp
add
and
push
repnz
fistp
popf
lea
and
repnz
fistp
xchg
xor
pop
jbe
cmp
stos
lahf
jne
in
sbb
xor
push
push
repnz
mov
lsl
xor
inc
push
repnz
mov
or
scas
sbb
dec
jnp
sub
mov
add
push
sbb
mov
fstp
add
in
cli
out
xchg
mov
stos
jbe
fistp
or
int
push
jnp
cs
shl
out
xchg
cs
scas
sub
int3
test
mov
rdtsc
sbb
adc
inc
and
sub
lahf
cmps
sbb
out
lea
and
fistp
sbb
add
and
repnz
fistp
cwde
lea
and
xor
fistp
pop
lea
and
push
repnz
fistp
pop
stos
adc
inc
sbb
ja
hlt
jbe
fistp
sbb
xor
dec
push
repnz
mov
(bad)
lea
and
stc
sbb
shl
push
xchg
jecxz
scas
sbb
inc
pop
(bad)
inc
hlt
pop
mov
pop
cmp
imul
pop
out
imul
addr16
das
movs
xor
pop
push
repnz
mov
adc
sbb
or
cmp
fs
or
pusha
inc
mov
xor
add
repnz
mov
or
pusha
mov
or
xchg
dec
and
or
movs
xor
inc
pop
cli
jbe
fistp
dec
lea
and
repnz
fistp
jns
add
and
xor
fistp
pop
xchg
pop
push
repnz
mov
bndstx
xor
dec
push
repnz
mov
test
inc
push
or
ret
inc
cdq
or
adc
movs
xor
pop
push
repnz
mov
and
lock
cmps
repnz
sbb
scas
or
adc
ja
cli
out
push
push
repnz
fnstsw
pop
cmps
adc
loope
and
xor
mov
pop
mov
movups
jae
pop
push
cmc
xor
mov
movups
xor
jbe
stc
xor
fidivr
adc
xor
pop
pop
repnz
mov
and
xchg
cs
pop
cmp
jmp
(bad)
stos
sbb
inc
sbb
mov
out
mov
test
lea
fs
push
repnz
mov
bndstx
xor
and
xor
fistp
xchg
lea
and
push
repnz
mov
je
shl
and
jmp
cdq
push
or
adc
xor
pop
push
repnz
mov
movups
and
xor
mov
and
xchg
cs
pop
ss
in
cmp
cmps
mov
or
loop
pop
push
hlt
adc
push
mov
sbb
ds
or
xchg
pop
mov
adc
xchg
pop
sub
cmp
mov
pusha
dec
sbb
or
cmp
fs
or
nop
pop
mov
add
ins
test
and
jecxz
fistp
cmp
sub
out
mov
sysenter
lea
fs
push
repnz
fistp
push
lea
and
repnz
mov
cmova
xor
cmp
xor
fistp
(bad)
lea
and
call
popf
push
cdq
push
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
and
xchg
(bad)
mov
clc
sbb
cdq
or
sbb
sar
push
fistp
add
in
cli
out
xchg
mov
stos
jbe
fistp
push
xchg
cmp
call
stos
mov
js
sbb
or
mov
mov
loop
pop
cmps
adc
jb
or
mov
out
mov
sysenter
lea
fs
push
repnz
mov
sets
xor
push
push
repnz
mov
movups
xor
ficom
xor
mov
lss
xor
pop
jbe
cmp
pop
(bad)
push
cdq
push
or
adc
xor
pop
push
repnz
mov
movups
xor
pop
dec
repnz
mov
and
call
inc
pop
fld
dec
hlt
push
mov
clc
and
xchg
push
cmp
sub
xor
cmps
sahf
inc
mov
cli
adc
add
fistp
add
sar
xchg
mov
clc
sub
cld
imul
ud2
popa
pushf
push
fisub
fidivr
adc
sbb
push
dec
stc
or
imul
psubb
xor
ja
cmc
jbe
fistp
outs
lea
and
push
repnz
xchg
push
mov
lgs
xor
and
xor
fistp
mov
add
and
cmps
lahf
jne
cld
push
sbb
xor
pop
push
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
das
or
shl
call
cmp
mov
hlt
pop
inc
and
jecxz
aaa
xchg
(bad)
popa
pushf
push
fisub
shl
pop
mov
movhps
or
scas
or
sahf
inc
mov
cli
or
inc
pop
retf
and
jle
loope
adc
sbb
hlt
sbb
lahf
stos
sbb
out
lea
and
fistp
sbb
add
and
push
repnz
mov
cmpxchg
xor
and
xor
fistp
or
and
xor
mov
movhps
sub
xor
pop
mov
movups
xor
pop
pop
repnz
mov
movups
and
sbb
shl
push
cmps
test
(bad)
fnstsw
push
jnp
sub
mov
test
and
pop
retf
and
pop
sar
das
dec
enter
movs
xor
cmp
inc
imul
sbb
fisub
aad
lahf
xchg
out
lods
hlt
adc
adc
inc
fnstsw
sbb
xor
dec
pusha
icebp
xor
mov
push
cmp
add
xor
ret
xor
fistp
dec
lea
and
repnz
fistp
ror
xor
pop
push
repnz
fistp
lea
xor
mov
xor
movs
lahf
jne
cld
push
sbb
xor
pop
push
repnz
mov
movups
and
xor
mov
movups
sbb
scas
or
mov
adc
cmp
cmp
pop
(bad)
dec
hlt
pop
mov
cli
and
pop
jns
push
adc
push
dec
stc
or
inc
imul
adc
inc
adc
xor
pop
push
repnz
mov
lock
jb
pop
inc
push
or
out
imul
cs
scas
sub
fs
or
add
mov
das
mov
push
xor
pop
jp
sub
rol
cld
mov
or
call
mov
out
mov
sysenter
lea
fs
push
repnz
mov
wrmsr
lea
and
repnz
mov
adc
inc
adc
xor
pop
hlt
jae
jne
cmc
add
add
jp
cmp
mov
movups
xor
pop
push
repnz
mov
jb
lea
aaa
inc
(bad)
stos
and
lock
fistp
cmp
xor
jl
repnz
mov
(bad)
add
and
repnz
mov
xadd
add
ins
sub
ja
div
aaa
shl
adc
cmp
loope
fxch
dec
aad
and
movups
cdq
and
icebp
xor
mov
push
cmp
xor
jb
repnz
mov
sysenter
lea
and
repnz
mov
xadd
add
ins
sub
ja
cld
aaa
push
mov
loop
adc
sub
jmp
lods
lds
or
cli
add
sub
repnz
mov
getsec
lea
fs
push
repnz
mov
(bad)
lea
and
repnz
xchg
jb
jecxz
cmp
and
and
jmp
nop
aas
lods
lds
mov
and
sbb
lds
mov
push
cmp
inc
pop
fstp
or
add
fs
push
repnz
xchg
jp
jecxz
adc
xor
jbe
repnz
mov
rdtsc
lea
and
jmp
jge
mov
push
push
mov
and
sbb
les
mov
pusha
mov
sub
repnz
mov
getsec
lea
fs
push
repnz
mov
rdtsc
lea
and
repnz
xchg
jle
jecxz
xor
xor
pop
jbe
cmp
mov
push
push
mov
and
sbb
enter
mov
jg
push
sbb
push
jnp
xor
mov
getsec
lea
fs
push
repnz
xchg
jle
jecxz
xor
movs
xor
pop
push
repnz
mov
sysexit
lea
and
jmp
jge
mov
push
push
mov
and
sbb
(bad)
xchg
outs
inc
mov
add
sub
repnz
mov
getsec
lea
fs
push
repnz
xchg
ins
mov
(bad)
add
and
xor
xchg
jns
jecxz
lea
and
stos
sahf
jne
out
jo
gs
das
cmps
xor
pop
push
repnz
mov
and
xchg
cs
pop
aaa
push
jnp
xor
mov
loope
ins
lea
or
push
repnz
mov
sysenter
lea
fs
push
repnz
mov
movups
xor
inc
push
repnz
mov
or
inc
dec
das
movs
xor
pop
push
repnz
mov
xchg
test
xlat
push
push
cld
ss
(bad)
jmp
add
xor
pop
push
repnz
mov
movups
xor
mov
repz
xchg
mov
add
xor
jp
repnz
mov
wrmsr
lea
and
repnz
mov
(bad)
lea
and
repnz
xchg
inc
mov
repz
mov
add
nop
mov
icebp
aaa
push
test
adc
cmps
mov
and
push
repnz
mov
dec
sbb
xor
pop
push
repnz
xchg
outs
mov
getsec
lea
and
repnz
mov
movhps
cmp
push
push
xchg
sub
xchg
xchg
pop
mov
or
lea
cmp
jge
mov
(bad)
adc
sbb
add
mov
push
cmp
xor
ja
repnz
mov
bndstx
xor
pop
push
repnz
mov
xadd
sub
ja
div
aaa
shr
sbb
add
or
dec
fxch
dec
aad
and
movups
cdq
and
div
cmp
mov
push
or
xor
inc
push
repnz
mov
prefetchw
xor
inc
push
repnz
mov
aas
lods
cli
push
push
mov
and
sbb
mov
add
jp
cmp
mov
movups
xor
xor
mov
xchg
lea
aaa
inc
(bad)
cmps
and
lock
fistp
cmp
xor
pop
push
repnz
mov
movups
xor
js
repnz
mov
xadd
add
ins
sub
ja
div
aaa
rol
mov
or
dec
fxch
dec
aad
and
movups
cdq
and
lock
fistp
cmp
xor
pop
push
repnz
mov
bndstx
xor
push
push
repnz
mov
xadd
add
ins
sub
ja
div
aaa
ror
sbb
add
or
dec
fxch
dec
aad
and
movups
cdq
and
lock
fistp
cmp
xor
ja
repnz
xchg
pop
mov
bndstx
xor
js
repnz
mov
xadd
add
ins
sub
ja
div
aaa
shl
mov
or
dec
fxch
dec
aad
and
movups
cdq
and
div
cmp
mov
push
or
xor
jns
repnz
mov
prefetchw
xor
inc
push
repnz
mov
aas
lods
mov
push
mov
and
sbb
mov
add
jp
cmp
mov
movups
xor
pop
push
repnz
mov
adc
add
inc
(bad)
cmps
and
lock
fistp
cmp
xor
jl
repnz
mov
sysexit
lea
and
xor
xchg
jp
jecxz
rol
adc
sub
div
aaa
rcl
adc
cmp
loope
fxch
dec
aad
and
movups
cdq
and
lock
fistp
cmp
xor
push
push
repnz
mov
rdtsc
lea
and
repnz
mov
xadd
add
ins
and
xor
aaa
rcr
adc
cmp
loope
fxch
inc
aad
and
movups
cdq
and
lock
fistp
cmp
xor
jl
repnz
mov
movups
xor
js
repnz
xchg
push
mov
xadd
das
sub
div
aaa
rol
adc
cmp
loope
fxch
dec
aad
and
movups
cdq
and
lock
fistp
or
xor
jl
repnz
xchg
pop
mov
ud2
lea
and
repnz
fisttp
adc
xor
push
jnp
sub
movs
sahf
jne
loope
fwait
lea
sbb
xor
mov
movups
xor
pop
push
repnz
sub
and
jns
xor
push
push
repnz
mov
dec
sbb
xor
push
push
repnz
mov
sysenter
lea
and
repnz
mov
movhps
cmp
pop
xor
cmp
call
adc
sub
cmps
inc
clc
sbb
fnstsw
bndstx
xor
dec
pusha
icebp
xor
fistp
push
xchg
push
ins
movs
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
dec
adc
xor
dec
pop
fscale
dec
hlt
inc
adc
adc
cmp
dec
pop
cmc
jbe
fistp
adc
xor
pop
push
repnz
mov
movhps
xor
dec
pusha
lock
fistp
cmp
xor
pop
push
repnz
mov
movups
xor
ja
repnz
xchg
jns
jecxz
sbb
xor
pop
jbe
cmp
mov
push
push
pop
and
xor
mov
jmp
enter
(bad)
(bad)
cdq
and
(bad)
xor
sti
shl
(bad)
movs
xor
dec
pusha
div
sbb
xchg
jbe
jecxz
push
pushf
push
pop
jnp
ja
pop
push
repnz
cmp
adc
xor
pop
push
repnz
cli
pop
mov
lahf
adc
xor
push
fistp
adc
xor
fistp
adc
xor
push
repnz
pop
mov
mov
imul
std
pop
mov
xchg
adc
xor
pop
push
repnz
mov
push
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
add
int
dec
push
mov
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
sbb
or
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
jno
hlt
or
and
inc
sahf
enter
test
ja
in
sbb
jne
cld
add
push
sbb
inc
jg
cmp
in
pop
jge
mov
cmp
inc
sbb
inc
arpl
pop
jge
mov
adc
cmp
push
inc
pop
sub
daa
jge
mov
adc
sbb
inc
cmp
or
dec
stc
sbb
shl
adc
imul
dec
sbb
sbb
or
push
cmp
pop
push
(bad)
xor
mov
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
movups
pop
and
xor
mov
lea
ss
or
mov
sub
and
xchg
xor
cmp
xchg
je
or
push
xchg
cs
jl
out
push
jnp
sub
hlt
jno
inc
cdq
sub
sbb
sub
mov
jne
cld
sbb
arpl
or
sub
mov
shl
retf
leave
jae
out
ja
in
es
mov
and
xchg
cs
scas
sub
dec
int3
scas
xchg
data16
push
lock
mov
push
xor
pop
push
repnz
fistp
adc
xor
push
fistp
or
xchg
sbb
inc
jnp
sub
hlt
push
mov
or
xor
jecxz
inc
(bad)
sar
jle
sub
inc
int3
mov
aaa
in
cli
out
jge
sar
jnp
sub
hlt
push
mov
add
push
popa
(bad)
in
ds
jnp
sub
shl
sbb
mov
ds
jnp
das
jge
mov
add
outs
adc
mov
fldl2e
jbe
mov
movups
and
push
(bad)
out
xchg
pop
mov
sub
lea
xchg
jne
xor
push
fidiv
aaa
ins
jno
out
jb
ss
inc
hlt
or
and
inc
mov
add
jns
xor
cmp
or
xor
jecxz
or
and
outs
cwde
inc
imul
add
add
mov
jl
pushf
adc
mov
(bad)
push
in
jb
or
sub
pop
dec
loope
push
out
push
or
sub
retf
inc
xchg
inc
xchg
adc
adc
(bad)
sub
sub
int3
mov
lock
xchg
and
mov
dec
int3
scas
xchg
data16
lock
xchg
or
jno
ss
inc
hlt
or
and
imul
push
xchg
push
adc
fs
or
test
cdq
jecxz
mov
ss
inc
hlt
or
and
imul
pop
adc
xor
inc
(bad)
jbe
jb
pop
jmp
and
scas
xchg
test
out
jb
push
gs
xor
loopne
push
fild
movups
std
and
xor
pop
xchg
pop
mov
movups
xor
xor
add
(bad)
fst
push
push
and
xor
mov
movups
loop
pop
push
hlt
adc
inc
mov
adc
das
lods
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
aas
xor
lahf
int3
test
lods
repz
xchg
adc
test
clc
sbb
cdq
add
add
jmp
cmc
stos
cdq
push
mul
movups
and
xor
scas
xchg
pop
mov
movups
adc
mov
sub
loopne
cmps
jmp
cmp
in
cmp
mov
jg
cmp
jnp
das
jge
ins
add
in
or
mov
sbb
movaps
add
or
mov
out
mov
(bad)
add
and
jbe
fistp
push
mov
and
push
repnz
mov
(bad)
mov
and
push
repnz
mov
wrmsr
mov
and
push
repnz
mov
packuswb
xor
leave
push
repnz
mov
(bad)
add
and
push
repnz
mov
minps
xor
sbb
repnz
xchg
int
jecxz
mov
xor
lahf
push
repnz
fdivr
inc
mov
and
repnz
fdivr
call
and
fdivr
add
add
and
push
repnz
mov
(bad)
mov
and
repnz
fnstcw
jns
add
and
push
repnz
fstp
out
add
and
xor
mov
cmpps
and
repnz
mov
cmovns
xor
into
push
repnz
mov
lsl
xor
xor
xor
mov
mov
add
and
push
repnz
fdivr
push
mov
and
repnz
fidivr
or
and
push
repnz
mov
andps
xor
fist
cmc
fnstcw
mov
adc
xor
add
fstp
pop
stos
sbb
test
addr16
sub
int3
mov
arpl
add
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
jecxz
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
not
lea
daa
pop
push
repnz
fistp
cmp
int
inc
jp
(bad)
dec
sahf
xchg
gs
jecxz
loop
lods
cs
jne
sbb
inc
sbb
ror
xchg
dec
inc
or
push
cmps
les
sbb
inc
imul
dec
cli
xchg
pop
inc
(bad)
enter
(bad)
or
sub
pop
jge
mov
xor
and
cmp
mov
mov
mov
lea
push
or
dec
call
lods
cli
and
xchg
sbb
out
mov
or
loop
dec
sbb
inc
mov
out
xchg
pop
sub
int3
test
dec
sbb
sbb
sub
int3
test
dec
sbb
push
sar
ds
push
mov
lock
xchg
or
pop
pop
int
inc
inc
retf
and
pop
mov
lock
jb
sub
int
inc
push
mov
lock
fwait
cmp
add
int3
test
dec
sbb
sub
retfw
and
add
jb
xchg
xor
inc
pusha
loope
dec
int3
mov
imul
push
mov
sbb
or
lea
jecxz
adc
xor
pop
push
repnz
mov
adc
lea
add
adc
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
or
or
fistp
fiadd
sub
hlt
dec
mov
cld
cmp
data16
inc
sub
imul
xor
sbb
inc
ja
xor
jge
mov
sub
inc
sbb
sub
mov
cmp
sbb
cvtps2pi
ja
in
jo
jl
(bad)
jne
cld
dec
cmp
sbb
xor
and
sti
outs
mov
jg
or
sub
adc
cmp
and
push
push
cmp
dec
std
sbb
lods
shl
xchg
xor
lods
mov
fpatan
dec
rcl
mov
cmps
movs
jne
sbb
dec
ret
xchg
cmp
mov
cs
mov
mov
dec
repz
add
stos
push
add
pop
xor
loope
outs
cmovbe
lods
hlt
sbb
xchg
and
popa
mov
or
test
mov
prefetcht0
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
mov
add
and
repnz
mov
add
cmc
(bad)
out
xchg
mov
mov
mov
clc
xchg
cmp
(bad)
mov
cld
sbb
lods
jmp
xchg
or
mov
dec
ficomp
lahf
rol
rcl
and
test
mov
cs
jne
sbb
inc
jp
ror
xchg
dec
inc
movs
enter
cs
jne
sbb
inc
pop
frndint
dec
les
adc
(bad)
repnz
in
push
inc
aam
xchg
or
out
jb
add
sub
daa
jge
mov
and
xchg
adc
mov
sbb
inc
jnp
sub
hlt
ins
mov
adc
int3
or
lahf
dec
in
jmp
mov
adc
sahf
push
or
or
pop
int3
mov
dec
mov
push
add
movs
fsub
xor
add
test
in
jbe
rol
or
or
scas
or
mov
mov
pop
call
push
inc
loope
dec
cli
scas
lahf
inc
mov
cli
out
adc
xor
pop
push
push
popf
inc
mov
cld
out
xchg
mov
loope
dec
int3
mov
ja
sbb
push
scas
cs
mov
loope
dec
int3
mov
dec
dec
sbb
push
cmps
jmp
pop
in
push
inc
aam
xchg
sbb
out
jb
cmp
push
in
(bad)
xchg
inc
jmp
mov
push
push
mov
sbb
mov
jmp
dec
pop
in
push
inc
aam
xchg
and
out
jb
add
and
inc
jne
cmp
mov
out
dec
sbb
sbb
sub
push
and
dec
repnz
mov
adc
push
or
or
push
push
aad
pop
mov
push
sbb
and
test
mov
cli
out
jl
cmp
jns
stc
sub
test
cmps
dec
sbb
add
and
push
dec
xlat
and
scas
cwde
data16
sbb
out
pushf
add
bound
popa
and
mov
push
mov
aam
jne
and
test
test
std
out
xchg
mov
xlat
and
scas
cwde
data16
push
sbb
ds
stc
sub
test
dec
sbb
add
xor
loope
dec
cli
scas
lahf
inc
mov
cli
out
jnp
cmp
pop
jge
sub
int3
mov
mov
lock
(bad)
in
xchg
and
inc
inc
dec
xchg
sub
inc
cdq
adc
sbb
mov
cmp
retf
and
dec
cdq
or
pop
jns
sub
and
daa
arpl
data16
sbb
xor
push
inc
imul
int3
mov
dec
mov
cli
outs
dec
movs
xor
inc
fist
xcrypt-ecb
cmps
mov
xor
xor
stc
(bad)
pop
mov
cwde
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
call
lea
mov
push
repnz
mov
cmp
lea
enter
add
mov
jge
lea
sahf
pop
push
repnz
pop
mov
jmp
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
dec
adc
xor
pop
push
repnz
mov
pop
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
jp
in
outs
cmp
mov
push
sti
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
or
sbb
pop
mov
cmp
lea
pop
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
repnz
push
fistp
adc
xor
push
repnz
push
fistp
sub
pop
int
dec
jnp
sub
hlt
dec
mov
or
or
sub
cmp
mov
add
pop
pop
cmp
dec
int3
sbb
lods
aam
aad
cmp
dec
ret
sbb
rol
mov
mov
mov
fst
inc
mov
mov
sbb
(bad)
xchg
sbb
enter
cs
jne
or
scas
or
imul
and
jle
sub
into
test
test
cli
out
ins
loope
and
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fnsave
push
fisttp
movups
or
pop
push
in
ds
out
imul
mov
mov
mov
lods
ret
and
xchg
sbb
mov
and
xchg
sbb
movs
enter
fnsave
sbb
inc
jae
test
cld
adc
mov
in
xchg
pop
or
leave
xchg
jns
cmps
enter
cs
jne
sbb
inc
pop
fldz
dec
enter
cdq
xor
pop
inc
imul
jge
mov
sbb
xor
xchg
xor
inc
pop
in
sub
cmps
cdq
pushw
lock
xchg
or
jne
ds
pop
retf
and
sbb
add
and
xor
mov
movups
xor
pop
jae
xor
mov
add
adc
or
stos
dec
jmp
lods
shl
fwait
div
sbb
inc
jns
in
dec
int3
xchg
dec
inc
lods
enter
sbb
addr16
pop
frstor
sub
sahf
jne
cld
adc
inc
inc
and
mov
shl
leave
xchg
or
mov
pop
retf
and
inc
mov
ss
xchg
pop
sub
ds
mov
and
nop
cs
sbb
inc
jnp
sub
hlt
ins
mov
das
fild
mov
retf
and
push
movs
call
or
rcr
scas
div
aaa
shl
adc
xor
pop
dec
dec
(bad)
and
imul
stc
push
lahf
cs
mov
retf
and
dec
cdq
adc
cmp
sbb
ds
pop
retf
and
jne
stc
and
xchg
clts
popa
mov
dec
retf
and
imul
sbb
popa
adc
jne
aas
sbb
stos
or
mov
clc
add
or
adc
(bad)
mov
movhps
xor
jl
lock
ja
pop
mov
sbb
call
push
push
mov
bsr
xor
inc
inc
hlt
and
xchg
xchg
pop
mov
push
adc
or
xor
loop
pop
mov
movups
sbb
pop
push
adc
push
fbstp
pop
mov
or
push
jb
pop
push
nop
xor
loopne
pop
mov
push
adc
inc
and
xor
outs
xchg
pop
mov
movups
push
and
xor
jo
pop
mov
push
adc
jl
pop
push
pop
xor
cmps
xchg
pop
mov
push
adc
shl
push
mov
xchg
pop
mov
push
adc
into
and
xor
retf
xchg
pop
mov
push
adc
mul
pop
push
aaa
xor
ret
xchg
pop
mov
or
outs
mov
(bad)
int3
test
movs
jecxz
adc
and
xor
mov
movups
xor
pop
jb
xor
mov
movups
xor
pop
repnz
mov
movups
add
and
xor
mov
movups
add
and
and
jno
mov
xchg
sbb
cwde
mov
call
jae
cdq
pop
adc
cmps
in
inc
(bad)
out
ds
sub
hlt
push
adc
cmps
leave
or
ja
in
adc
mov
add
xor
cmp
mov
rcr
clc
shl
mov
or
arpl
hlt
or
imul
movups
aas
and
xor
test
movups
adc
pop
push
(bad)
xor
xchg
xchg
pop
mov
movups
or
pop
hlt
dec
mov
adc
xor
(bad)
fstp
inc
jnp
and
jne
cld
push
cmp
cmp
dec
out
push
rcr
out
jb
cmp
dec
(bad)
sbb
enter
cs
jne
sbb
inc
pop
ftst
dec
into
xchg
inc
inc
mov
adc
inc
jbe
xor
mov
lea
sub
push
fistp
adc
xor
dec
push
retf
and
dec
cdq
push
adc
cmps
hlt
push
inc
(bad)
fistp
inc
jnp
sub
hlt
pop
mov
add
pop
sahf
add
dec
mov
sbb
lods
or
(bad)
jne
cld
sbb
sbb
mov
(bad)
dec
shl
repnz
jb
sbb
sub
stos
and
jne
clc
and
xchg
cs
in
cmp
jmp
lods
cmps
push
push
mov
and
and
xchg
imul
mov
jmp
test
inc
std
add
test
adc
fs
bswap
test
stos
jmp
sub
pop
in
cmp
mov
out
jb
pop
inc
inc
and
cmp
mov
fucomi
jb
adc
adc
push
repnz
mov
movhps
and
sbb
push
fdivr
adc
xor
pop
ja
xor
mov
movups
add
push
xor
pop
div
xor
mov
movups
add
and
xor
mov
movups
push
xor
pop
inc
repz
mov
movups
add
and
xor
mov
movups
xor
pop
(bad)
xor
mov
movups
and
xor
mov
push
adc
and
pop
loope
outs
mov
mov
lea
and
repnz
mov
wbinvd
lea
and
repnz
mov
(bad)
add
and
repnz
mov
cvtps2pi
xor
sbb
xor
scas
xchg
data16
lock
xchg
sbb
lahf
mov
(bad)
dec
(bad)
xchg
jle
cdq
add
push
cmps
out
jne
in
ds
jnp
sub
hlt
imul
cmps
retf
push
fprem1
dec
rcl
mov
sub
mov
jbe
sub
mov
pop
lods
jmp
out
xchg
pop
cmp
repnz
mov
str
xor
inc
push
repnz
mov
rdpmc
lea
es
scas
mov
loopne
push
sbb
inc
dec
(bad)
dec
hlt
pop
(bad)
jne
cld
push
cmp
sbb
mov
retf
and
jne
jmp
xchg
cs
jne
sbb
inc
pop
(bad)
dec
hlt
pop
mov
jmp
pop
popf
adc
adc
inc
pop
cmc
jbe
fistp
sbb
add
and
repnz
mov
or
cmp
xchg
mov
loop
cmps
shl
clc
xchg
sbb
(bad)
mov
and
pop
loope
outs
xor
mov
sub
jae
fnstcw
push
jnp
sub
hlt
pop
mov
in
sbb
xchg
lar
(bad)
fsub
ret
xchg
js
cdq
or
cmp
cmp
push
aam
pop
shr
out
xchg
or
outs
mov
push
into
test
dec
sbb
add
xor
jg
repnz
scas
xchg
dec
mov
and
lea
(bad)
pop
push
repnz
mov
dec
adc
xor
pop
push
repnz
rcr
jecxz
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
jecxz
adc
xor
push
repnz
mov
outs
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
sub
or
div
movups
aas
and
xor
test
pop
mov
movups
adc
pop
push
(bad)
xor
fwait
xchg
pop
mov
movups
add
pop
push
lds
push
fild
movups
jne
pop
push
mov
xchg
pop
mov
movups
imul
inc
fld
xor
sub
sbb
mov
add
outs
sbb
inc
jp
or
shl
ficom
sbb
fwait
dec
in
xchg
rcr
stos
xchg
push
cmp
mov
out
stc
shl
mov
and
leave
mov
imul
int3
mov
lock
push
adc
cmp
pop
push
stc
xor
mov
pop
mov
movups
sub
pop
push
out
xor
popf
xchg
pop
mov
movups
sbb
pop
push
jmp
dec
std
and
xchg
pop
cmp
dec
fistp
mov
cdq
pop
adc
cmps
in
inc
jns
xor
jmp
add
mov
push
xchg
push
pop
push
pop
iret
fisub
shr
clc
call
push
jnp
sub
hlt
mov
xor
cmp
cmp
inc
clc
sub
shl
adc
mov
daa
sbb
xor
mov
movups
and
xor
mov
sbb
mov
in
xchg
pop
sub
aas
jge
mov
and
xchg
pop
cmp
out
push
shl
out
jb
add
sub
sbb
out
and
xchg
adc
mov
ds
inc
imul
int3
mov
lock
cmps
jmp
dec
(bad)
dec
aad
jbe
cdq
cmp
adc
sbb
xor
xor
pop
push
sti
xor
mov
es
jb
push
dec
pop
cmp
in
sub
fld
cmp
sbb
inc
dec
loope
outs
fadd
mov
xchg
sbb
cmp
and
dec
push
std
call
dec
push
in
sub
fld
xor
add
push
sbb
pop
push
(bad)
push
fistp
or
mov
push
xor
fistp
adc
xor
pop
push
repnz
pop
mov
and
lea
mov
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
mov
push
xor
push
fistp
adc
xor
lds
xor
dec
mov
pop
add
int
pop
adc
mov
pop
mov
movups
and
xor
cmps
xchg
pop
mov
movups
adc
pop
push
(bad)
push
fist
movups
or
pop
push
leave
xor
adc
inc
adc
sub
xor
cdq
push
adc
jg
or
and
sbb
stos
enter
cs
(bad)
jmp
dec
jnp
sub
mov
adc
inc
adc
lods
mov
fpatan
dec
ret
inc
cdq
pop
fisttp
mov
sub
inc
imul
int3
mov
lock
add
push
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
in
xor
mov
icebp
out
jb
pop
inc
push
sub
es
mov
and
xchg
pop
cmp
dec
std
and
movs
xchg
mov
cmp
dec
std
sbb
out
and
xchg
or
mov
cmp
xor
call
xchg
sbb
fbld
fistp
sbb
add
and
repnz
mov
or
mov
out
xchg
mov
rcr
cmps
shl
clc
xchg
sbb
(bad)
mov
and
dec
loope
outs
cmp
mov
cmps
jmp
jnp
sub
inc
mov
add
mov
jnp
sub
movs
mov
or
xor
jp
stc
and
movs
xchg
inc
repnz
jb
sub
pop
int
dec
pusha
icebp
xor
jecxz
sub
adc
ja
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
aaa
xchg
sub
push
test
fisub
fild
mov
lea
sub
cmp
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
pop
mov
ins
adc
xor
push
repnz
rol
cmp
pop
inc
push
sub
lods
dec
(bad)
dec
hlt
xchg
jge
or
lock
sbb
inc
jl
jmp
enter
fdiv
sbb
inc
pop
fdecstp
dec
jmp
add
test
inc
jnp
sub
hlt
adc
cmp
sbb
inc
pop
sub
adc
mov
add
push
aad
imul
pusha
rol
sbb
lods
int3
fisub
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
ds
pop
retf
and
dec
cdq
adc
push
jo
fdivr
je
sbb
hlt
pop
mov
add
sbb
call
sub
jne
cld
sbb
inc
adc
mov
dec
fbld
inc
imul
adc
cmps
cmc
push
jb
fidivr
dec
jnp
sub
mov
and
xchg
or
mov
cmp
mov
loopne
hlt
ins
mov
das
adc
cmps
int
lock
xor
jp
clc
cmp
mov
pop
dec
sbb
or
sbb
addr16
or
cmp
mov
repnz
jb
push
bound
xor
mov
lsl
xor
inc
push
repnz
mov
femms
mov
int
inc
jnp
sub
hlt
dec
xor
and
xchg
or
cmp
sbb
movs
out
adc
cmp
ja
in
cmp
mov
add
gs
(bad)
mov
in
mov
cmps
mov
sbb
adc
fisub
hlt
push
mov
cld
push
cmp
cmp
pop
fldln2
inc
hlt
addr16
les
femms
scas
das
sub
shl
inc
imul
adc
inc
adc
xor
pop
push
repnz
rol
cmps
repz
js
sub
iret
test
inc
inc
sbb
frstor
les
add
mov
int
dec
jnp
sub
lahf
inc
mov
cs
xchg
pop
xor
leave
push
repnz
mov
movups
sub
in
add
mov
mov
xor
jg
repnz
scas
xchg
dec
mov
and
lea
sbb
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
inc
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
bnd
fistp
adc
xor
pop
push
repnz
mov
mov
rcl
lea
cmp
retf
and
pop
div
movups
aas
and
xor
test
pop
mov
movups
adc
pop
push
(bad)
xor
xchg
xchg
pop
mov
movups
add
pop
push
les
push
fild
movups
jbe
pop
push
mov
push
fcomip
xchg
pop
mov
movups
and
sub
test
dec
sbb
cmps
lock
jl
ret
aas
ja
in
adc
mov
adc
outs
sbb
inc
jp
or
or
enter
fnsave
sbb
inc
jnp
das
jge
mov
and
xchg
and
fnstsw
fld
inc
mov
sbb
jns
sub
pop
push
mov
push
mov
nop
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
sbb
int3
dec
enter
cdq
adc
xor
jmp
dec
(bad)
fdivr
push
jnp
sub
hlt
pop
mov
cmp
push
jp
in
push
jnp
sub
hlt
jb
push
mov
cmp
aas
ja
in
and
stos
mov
stc
xchg
cs
jne
sbb
dec
jnp
sub
hlt
mov
xor
sbb
sub
dec
pop
in
and
cmps
xchg
sub
out
jb
push
ins
movs
xor
push
push
repnz
mov
(bad)
lea
and
repnz
scas
xchg
adc
lock
xchg
sbb
lahf
mov
fistp
mov
lods
shl
sub
and
(bad)
and
inc
cdq
adc
add
fnstcw
dec
jnp
sub
hlt
pop
mov
cmp
sbb
mov
bswap
test
cdq
push
adc
cmps
in
push
arpl
jmp
mov
mov
push
adc
xor
jbe
hlt
or
inc
imul
cli
or
or
mov
sub
cwde
inc
mov
add
jp
int
inc
pop
(bad)
inc
aad
cwde
inc
mov
add
xchg
pop
int
inc
jnp
sub
mov
out
add
int
jl
repnz
adc
ret
adc
xor
xor
mov
push
adc
cmp
pop
push
repnz
or
lea
adc
lods
and
xor
sub
adc
das
and
xor
inc
xchg
pop
mov
movups
mov
xor
sub
push
adc
push
and
xor
scas
xchg
pop
mov
push
adc
daa
and
xor
movs
xchg
pop
mov
movups
loop
pop
push
hlt
adc
inc
stos
lock
out
cli
out
xchg
mov
fs
push
repnz
mov
sidtd
xor
inc
push
repnz
mov
rdpmc
lea
and
repnz
mov
(bad)
lea
and
repnz
fistp
add
out
jne
sbb
inc
inc
fld
dec
les
out
cmps
jecxz
inc
inc
sub
and
mov
and
xchg
adc
in
inc
inc
fsqrt
dec
ret
inc
stos
enter
lods
mov
jbe
and
shl
push
mov
out
xchg
pop
cmp
repnz
mov
sidtd
xor
dec
push
repnz
xchg
inc
mov
femms
adc
push
xor
fisub
rcl
adc
popa
sbb
inc
dec
sub
sub
pop
lods
cli
sbb
mov
out
xchg
pop
and
scas
dec
(bad)
dec
rcl
call
fs
sar
push
jnp
jecxz
fidivr
push
enter
movs
cmp
pop
push
push
push
fild
adc
sub
pop
test
inc
mov
pop
cmp
sbb
ja
in
es
movs
xchg
cli
sbb
mov
out
xchg
pop
das
or
rcl
call
addr16
jmp
push
out
imul
(bad)
fstp
ja
jmp
mov
and
xchg
movs
xor
dec
pusha
icebp
xor
mov
push
sub
adc
ja
pop
push
repnz
fistp
adc
xor
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
movups
xor
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
mov
lea
dec
pop
push
xacquire
mov
dec
adc
xor
push
repnz
je
mov
jge
lea
cmps
pop
push
repnz
fidivr
sub
sbb
pop
or
(bad)
pop
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
dec
pop
retf
and
ins
cdq
adc
push
jns
fdivr
ins
jnp
sub
hlt
pop
mov
adc
cmps
fisttp
je
call
sub
hlt
outs
mov
sub
push
js
hlt
ds
jnp
das
jge
cmps
mov
push
lods
movs
jne
sbb
inc
hlt
push
mov
inc
adc
cmps
cmps
push
inc
(bad)
lods
ds
jnp
das
jge
mov
xchg
adc
ds
pop
retf
and
push
mov
push
out
xchg
pop
xor
xor
mov
sidtd
xor
dec
push
repnz
mov
rdmsr
lea
and
repnz
mov
(bad)
lea
sbb
rcl
push
test
push
fnstcw
dec
jnp
sub
hlt
pop
mov
cmp
or
in
jno
and
jge
mov
add
mov
fmul
int3
test
movs
enter
cs
jne
sbb
inc
pop
(bad)
dec
lds
ror
sub
jne
sbb
inc
jnp
sub
hlt
jno
dec
cdq
sub
pop
cmps
rol
movs
xor
jp
stc
sub
shl
repnz
jb
sbb
inc
pop
dec
outs
and
pop
imul
movups
and
xor
test
pop
mov
movups
sub
pop
push
shl
push
fbld
repnz
jb
xor
sub
sbb
xor
and
xchg
cs
jne
sbb
inc
pop
(bad)
dec
shl
repz
jb
add
lods
inc
(bad)
dec
(bad)
xchg
jge
mov
cs
sbb
inc
jnp
sub
mov
inc
mov
cli
out
jne
sbb
inc
jnp
sub
stos
mov
or
sub
xchg
call
or
stos
mov
mov
loop
adc
sub
iret
test
inc
inc
push
or
fiadd
sub
mov
inc
mov
cli
out
jne
sbb
inc
pop
in
cmp
mov
inc
mov
cli
out
jo
fdiv
push
dec
stc
cmp
mov
push
mov
cli
adc
xor
pop
jo
xor
xchg
pop
pop
mov
and
popa
mov
dec
pop
and
dec
and
call
movs
xor
movs
repnz
stc
lods
pop
mov
stc
adc
xor
push
repnz
push
fistp
adc
xor
push
xacquire
mov
mov
lea
sbb
sbb
add
jecxz
adc
xor
pop
push
repnz
inc
pop
mov
adc
xor
pop
push
repnz
mov
test
imul
push
fistp
adc
xor
pop
push
repnz
mov
int3
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
je
lea
mov
push
fistp
adc
xor
jp
(bad)
outs
rol
mov
mov
out
xchg
lods
ja
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
sub
lea
or
sbb
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
sbb
mov
xchg
pop
sub
daa
jge
mov
adc
sbb
inc
inc
sub
and
add
cmp
pop
sbb
inc
jbe
pop
ja
in
and
mov
and
xchg
shl
sbb
dec
lock
and
push
pop
cmp
sbb
sti
dec
lds
cmc
ror
xchg
push
cmp
mov
outs
xor
call
mov
out
xchg
pop
sub
outs
xlat
inc
imul
add
sub
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
in
jb
push
arpl
add
hlt
push
mov
or
or
sar
inc
jnp
sub
hlt
mov
adc
cmps
xlat
cmovno
sub
in
sbb
movs
cwde
inc
lods
out
aaa
cwde
jo
out
jne
sbb
inc
inc
(bad)
dec
aam
jg
cdq
or
cmp
cmp
pop
fld1
dec
(bad)
xchg
inc
inc
mov
aad
inc
imul
mov
mov
or
and
fiadd
stc
das
pop
shl
out
mov
push
xor
pop
push
repnz
mov
sbb
lea
cmp
sub
pop
mov
adc
cmp
ja
in
sbb
jne
cld
sub
data16
inc
inc
sub
mov
shl
push
xchg
or
(bad)
pop
int
inc
pop
fld
dec
rcl
in
cdq
div
sbb
inc
inc
fldlg2
dec
hlt
pusha
mov
cmp
sbb
or
jge
mov
and
xchg
cs
jne
sbb
inc
jnp
sub
jne
xor
jb
and
sub
mov
xchg
adc
and
xor
xchg
cdq
data16
pop
lock
xchg
and
pushf
mov
dec
xor
inc
imul
sbb
frstor
shl
or
out
or
mov
cmp
outs
jecxz
imul
adc
jbe
sub
iret
test
mov
rdtsc
jle
adc
and
fsubr
pop
enter
lods
std
add
cmp
and
hlt
xor
mov
push
push
xchg
push
pop
jnp
ja
pop
push
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
bnd
pop
mov
and
lea
rcr
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
add
int
dec
push
mov
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
or
mov
hlt
dec
mov
adc
cmps
call
ds
jnp
sub
hlt
pop
mov
adc
cmps
fmul
inc
(bad)
out
jge
and
hlt
jno
jp
sub
cmp
cmp
sub
out
in
adc
mov
and
xchg
or
lds
fstp
dec
mov
sbb
jns
or
scas
or
xchg
pop
mov
add
and
xor
mov
movups
xor
pop
js
xor
mov
sbb
mov
out
xchg
pop
sub
es
mov
sub
sbb
inc
inc
sub
mov
shl
push
movs
cs
and
outs
and
mov
xchg
push
fnstcw
dec
jnp
sub
hlt
pop
mov
cmp
sbb
in
ja
jmp
lods
into
sbb
mov
in
xchg
pop
sub
and
test
dec
sbb
push
mov
and
xor
mov
movups
xor
pop
dec
in
and
imul
pop
ds
jnp
sub
hlt
push
mov
adc
mov
add
or
scas
or
mov
push
adc
cmps
in
push
pusha
(bad)
xlat
cmp
in
sbb
mov
add
ds
int
inc
jnp
and
mov
enter
out
inc
inc
cmp
push
push
xchg
sub
xchg
xchg
pop
mov
push
adc
xor
je
or
popa
inc
mov
add
jb
int
inc
pop
fld
dec
shl
pop
add
int
push
jnp
sub
xchg
adc
sbb
inc
inc
loope
outs
cmp
mov
xchg
sbb
inc
inc
loope
outs
or
imul
xchg
adc
adc
pop
push
repnz
lods
rcr
add
xor
jno
repnz
fidivr
int3
mov
and
push
repnz
mov
(bad)
mov
and
repnz
mov
psubusb
and
repnz
mov
syscall
lea
and
fidivr
mov
movs
xor
loope
repnz
mov
lss
and
repnz
fidivr
xor
and
xor
mov
movhps
aaa
ds
inc
cmc
or
and
dec
mov
sbb
push
xor
push
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
bnd
fistp
call
mov
aam
dec
fld
dec
lds
out
xchg
hlt
jne
sbb
inc
dec
fldz
dec
hlt
mov
xor
push
jp
cld
cmp
in
sbb
lods
sti
and
xchg
lods
jne
sbb
enter
js
clc
add
sahf
add
js
xor
int3
pop
call
adc
and
pop
push
out
push
fbld
movups
adc
pop
push
in
sub
mov
cmps
lock
dec
pop
ds
jnp
sub
hlt
push
xor
and
xchg
(bad)
mov
cld
and
scas
xchg
movs
icebp
out
jb
push
inc
push
sub
sbb
enter
cs
jno
out
cmp
and
je
call
push
js
xor
int3
push
call
adc
and
pop
push
out
push
fbld
add
int
dec
jnp
sub
hlt
dec
mov
push
adc
adc
lea
loope
outs
or
mov
xchg
adc
or
hlt
pop
mov
cld
sbb
mov
in
xchg
pop
and
and
pop
imul
(bad)
shl
ja
call
xchg
pop
mov
sbb
push
adc
mov
es
int3
test
dec
sbb
add
xor
jle
repnz
mov
dec
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
repnz
pop
mov
out
adc
xor
push
fistp
adc
xor
pop
push
repnz
sbb
xchg
imul
sbb
or
imul
mov
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
ret
push
repnz
bound
sbb
ins
int3
fisub
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
sbb
or
pop
mov
dec
adc
xor
push
repnz
mov
pop
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
fistp
out
jb
push
jp
les
jg
add
hlt
push
mov
or
or
(bad)
shl
ja
in
daa
jge
mov
cmp
pop
sbb
inc
imul
sahf
rol
push
mov
sbb
dec
hlt
push
mov
dec
pop
cmp
sbb
inc
add
cmp
jne
cld
dec
cmp
sbb
inc
aaa
sub
das
jge
mov
add
push
sbb
push
fmul
fisub
and
inc
cwde
(bad)
jb
push
popa
pushf
push
fisub
fistp
adc
cmp
dec
pop
in
adc
mov
lea
and
repnz
mov
wbinvd
lea
and
xor
mov
(bad)
add
and
repnz
mov
comiss
xor
sbb
xor
mov
jae
sbb
push
mov
out
xchg
sbb
inc
gs
dec
out
xchg
jle
repz
cs
sbb
inc
jnp
sub
hlt
imul
pop
sbb
inc
push
in
add
sbb
adc
inc
sbb
aas
push
dec
aam
outs
aas
inc
imul
sbb
test
(bad)
dec
ret
inc
lods
enter
cs
mov
stc
dec
jnp
sub
mov
ret
pop
cmps
int3
push
jo
idiv
push
jnp
sub
hlt
add
mov
ds
in
adc
mov
xchg
daa
sbb
(bad)
xchg
pop
mov
movups
and
pop
push
out
push
fild
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
and
sub
or
jne
jmp
xchg
sub
lea
(bad)
dec
hlt
popa
mov
cmp
push
cmps
ror
fs
push
int3
test
lods
icebp
and
xchg
sbb
or
ret
inc
cmps
enter
cs
jne
sbb
inc
inc
(bad)
dec
shl
sub
sub
sbb
lods
in
and
xchg
cs
sbb
inc
jnp
sub
hlt
imul
pop
aad
imul
dec
std
mov
js
(bad)
imul
icebp
xor
mov
pop
mov
movups
sub
enter
lods
jne
cld
dec
cmp
xor
inc
jbe
or
and
imul
adc
(bad)
fidivr
push
dec
sar
dec
stc
mov
aas
dec
sbb
push
sub
ss
in
cmp
mov
sub
sub
mov
(bad)
dec
hlt
push
(bad)
push
test
adc
sbb
fisub
fnstsw
adc
sbb
jl
lock
jl
pop
mov
ret
add
push
push
rcr
push
fistp
cmp
adc
mov
and
push
mov
xor
xor
stc
lods
pop
mov
jo
lea
sub
push
repnz
jae
mov
movups
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
(bad)
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
repnz
push
fistp
adc
xor
push
fistp
adc
xor
jp
call
imul
cli
out
vsubss
xor
mov
pop
mov
movups
sub
pop
push
jmp
xchg
pop
mov
movups
sbb
pop
push
fbstp
push
fisttp
movups
push
and
xor
call
lea
push
jge
pop
push
mov
xchg
pop
mov
movups
push
and
xor
xlat
xchg
pop
mov
movups
mov
mov
sub
adc
arpl
cmp
sub
mov
(bad)
xchg
je
mov
fmul
inc
(bad)
out
jae
and
hlt
jno
jb
sub
cmp
cmp
dec
in
in
shl
mov
mov
rcr
icebp
rcr
mov
pop
or
dec
fldenv
mov
loop
pop
stos
sbb
push
scas
or
mov
out
jb
push
movs
xor
pop
push
repnz
mov
lar
xor
inc
push
repnz
mov
(bad)
lea
and
repnz
xchg
push
cmp
jp
add
pop
hlt
dec
mov
or
push
fs
aam
jnp
adc
cdq
cmp
or
ror
popa
(bad)
loopne
ja
in
adc
mov
sbb
push
and
fisub
leave
xchg
fs
movs
enter
cs
jno
xlat
cmp
in
cmp
mov
add
pop
sbb
ja
in
and
jne
xor
jo
sub
outs
lahf
inc
imul
sbb
addr16
add
mov
fistp
sbb
movs
xor
dec
push
repnz
mov
rdtsc
lea
and
dec
push
and
inc
or
push
sub
jne
sbb
inc
inc
(bad)
dec
hlt
xchg
jb
lahf
enter
cs
jne
sbb
inc
inc
(bad)
sub
rol
sbb
fnstsw
ja
in
cmp
aaa
mov
add
ins
sbb
inc
js
cmp
in
aas
pop
shl
mov
pop
ds
jnp
sub
hlt
push
mov
pop
cmp
sbb
sub
sbb
mov
adc
jne
aas
sbb
lods
or
lea
retf
add
std
stc
out
xchg
mov
stos
jbe
fistp
or
int
inc
jnp
sub
xchg
cdq
data16
pop
lock
xchg
cs
scas
sub
outs
jecxz
imul
(bad)
punpcklwd
dec
jg
inc
imul
adc
jae
sub
iret
test
in
loop
adc
sbb
pop
push
hlt
sbb
lahf
inc
stos
out
adc
cmp
dec
pusha
icebp
xor
mov
push
sub
adc
ja
pop
push
repnz
mov
call
lea
lods
pop
push
repnz
stc
pop
mov
mov
imul
fcomp
jns
lea
cs
push
repnz
fistp
adc
xor
push
repnz
mov
xchg
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
retf
adc
xor
repnz
push
fistp
adc
xor
pop
push
repnz
or
jecxz
adc
xor
pop
push
repnz
push
fistp
aaa
xchg
sbb
fisub
fild
mov
lea
sub
cmp
fistp
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
pop
mov
xor
lea
addr16
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
out
jb
cmovno
adc
in
sub
jne
cld
add
push
cmp
sub
pop
jge
movs
mov
lds
cmp
nop
dec
out
sahf
shr
rcl
and
in
lds
loop
xchg
and
push
xchg
cs
ja
in
push
jge
mov
add
sbb
cmp
mov
push
xor
call
mov
out
xchg
pop
cs
push
and
pop
imul
movups
cmp
pop
push
std
xor
scas
xchg
pop
mov
movups
sub
xor
fwait
xchg
pop
mov
movups
add
pop
push
lds
push
fbld
lock
xchg
(bad)
mov
rcr
rcr
not
pop
or
shl
ret
xchg
or
movs
mov
fxtract
dec
enter
mov
cli
or
ja
out
sbb
lods
lock
xchg
or
mov
fldl2t
dec
enter
cdq
xor
or
stc
ds
jnp
jecxz
fidivr
sbb
or
cmp
mov
jo
fstp
das
lods
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
iret
fisub
rcl
call
sub
mov
rcr
retf
xchg
push
sbb
test
addr16
cmps
enter
jmp
ds
jnp
sub
mov
aam
xchg
sbb
sbb
fs
int3
test
cdq
or
cmp
jnp
sub
hlt
bound
adc
sub
aas
dec
icebp
mov
fisttp
lock
std
ja
pop
push
repnz
mov
gs
jb
or
sub
outs
add
movs
enter
push
push
pusha
test
sqrtps
iret
test
test
adc
pushf
or
mov
shl
cmp
cli
out
jbe
sar
dec
clc
cmp
mov
jo
fist
dec
shl
and
xor
xchg
test
mov
and
popa
mov
dec
scas
and
imul
prefetchw
xor
fs
xor
stc
lods
pop
mov
push
lea
retf
pop
push
repnz
mov
lea
dec
pop
push
repnz
pop
mov
ret
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
bnd
push
fistp
adc
xor
push
repnz
mov
jbe
lea
jmp
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
sbb
xchg
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
(bad)
push
repnz
mov
out
xchg
adc
fisub
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
repnz
mov
push
adc
xor
push
repnz
push
fistp
adc
xor
jbe
retf
and
inc
cdq
adc
cmovno
sub
mov
mov
and
xchg
pop
cmp
dec
(bad)
dec
call
ret
fdiv
sbb
inc
inc
fptan
dec
lds
mov
mov
sbb
dec
rcl
push
sahf
cs
mov
mov
pop
hlt
sub
or
xor
jp
loopne
dec
repz
pop
dec
sbb
push
cdq
or
inc
test
or
xchg
pop
mov
add
and
xor
mov
movups
xor
pop
ja
xor
mov
movups
xor
pop
dec
stc
outs
addr16
imul
sub
cwde
mov
xlat
sbb
mul
xchg
cs
jne
sbb
inc
jnp
sub
hlt
push
adc
cmps
leave
push
jno
cli
ds
pop
in
pop
pop
out
imul
dec
sub
sbb
lods
cli
and
xchg
adc
mov
and
test
sbb
lods
stc
and
xchg
adc
mov
repnz
mov
adc
pop
int
push
pop
jmp
lods
repz
mov
int
pop
adc
mov
pop
mov
movups
and
xor
cmps
xchg
pop
mov
movups
sub
iret
test
inc
cld
add
jg
push
inc
dec
sub
sbb
lods
cmc
and
fwait
cs
mov
retf
and
jne
cmc
and
xchg
push
cmp
dec
(bad)
dec
into
xchg
jbe
mov
cs
ja
sub
outs
jg
imul
jmp
popa
(bad)
fdivr
ja
in
cmp
mov
and
xchg
or
mov
nop
and
sub
mov
cld
and
and
fidivr
adc
into
fisub
enter
mov
cli
push
jge
sar
pop
in
and
nop
cdq
data16
lock
xchg
cs
scas
sub
inc
inc
(bad)
sub
rol
cmp
sbb
ds
retf
and
push
lods
repz
mov
int
pop
jo
xor
pushf
into
pop
mov
daa
inc
lea
cmp
loop
dec
repz
mov
sbb
add
xor
jg
repnz
scas
xchg
dec
mov
aas
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
mov
or
imul
push
fistp
adc
xor
push
repnz
pop
mov
xchg
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
repnz
push
fistp
adc
xor
pop
push
repnz
jae
mov
popa
adc
xor
pop
push
repnz
mov
pop
add
int
pop
adc
mov
pop
mov
movups
and
xor
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
int3
xor
(bad)
xchg
pop
mov
movups
jl
pop
push
mov
xchg
pop
mov
movups
push
and
daa
inc
fld
sbb
sub
and
xor
(bad)
and
xchg
and
mov
cmp
xchg
jmp
cli
xchg
inc
inc
cmps
enter
fnsave
sbb
inc
js
test
enter
cs
inc
jnp
sub
hlt
adc
cmp
xchg
ds
jnp
cs
enter
mov
cli
out
(bad)
cmp
pop
push
sti
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fdiv
push
fbld
push
out
jb
push
inc
push
sub
cmp
xor
adc
inc
inc
sub
pop
jge
mov
fisttp
stos
sar
dec
push
retf
and
dec
cdq
adc
cmp
add
sub
and
cmps
mov
int
cs
hlt
inc
pop
(bad)
dec
(bad)
xchg
pop
inc
mov
add
jns
or
fnstcw
adc
xor
pop
inc
repnz
mov
movups
mov
mov
sub
sub
inc
dec
sub
sbb
mov
sbb
mov
in
xchg
pop
sub
sbb
cdq
or
cmp
add
sub
inc
fld
sbb
sub
mov
(bad)
dec
hlt
pop
mov
in
or
sbb
xor
xor
pop
push
sti
xor
mov
sbb
jb
push
ja
(bad)
ds
inc
imul
inc
fld
sbb
and
mov
cdq
adc
sbb
xor
mov
shl
(bad)
in
jb
push
jns
sub
pop
push
stos
mov
sbb
or
enter
mov
cli
out
push
push
repnz
mov
push
adc
xor
xor
or
adc
adc
pop
push
cmp
push
fild
push
adc
xor
xor
and
push
adc
and
pop
push
in
push
fisttp
push
adc
(bad)
pop
push
retf
fistp
xchg
pop
mov
push
adc
mul
pop
push
sbb
push
fisttp
push
adc
xchg
pop
push
pop
xor
je
pop
mov
push
adc
adc
pop
push
xor
or
push
adc
xor
jbe
loope
dec
shr
lock
pushf
add
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
sysenter
lea
and
repnz
mov
movaps
xor
sbb
repnz
fistp
pop
lea
es
or
test
test
std
push
xchg
push
fnstenv
ja
out
sbb
lods
shl
adc
mov
sub
mov
loope
int
pop
inc
cmps
enter
xlat
jne
sbb
inc
inc
(bad)
inc
lods
enter
mov
leave
movs
xor
jp
call
mov
in
mov
out
arpl
cmp
pop
push
sti
xor
mov
pop
mov
movups
and
xor
mov
movups
or
scas
or
lea
cld
add
arpl
cmp
dec
jmp
mov
scas
mov
setle
push
addr16
sbb
scas
or
gs
cdq
or
push
popa
(bad)
aam
ja
in
cmp
add
and
pop
cmps
adc
adc
dec
inc
imul
int3
mov
lock
ds
inc
cmc
or
inc
imul
movups
aas
and
xor
test
movups
or
mov
hlt
dec
mov
adc
sbb
(bad)
fstp
inc
jnp
sub
mov
iret
in
jb
push
fs
ds
jnp
sub
hlt
push
(bad)
jne
cli
and
call
dec
push
retf
and
jne
cli
and
call
ja
and
inc
mov
or
ins
pushf
dec
fsub
and
out
mov
movs
xor
inc
jnp
xor
pop
mov
mov
lea
dec
pop
push
bnd
pop
mov
jg
lea
neg
pop
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
ficomp
jecxz
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
fst
lea
inc
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
sbb
mov
ss
or
mov
call
adc
and
pop
push
out
push
fbld
movups
push
and
xor
nop
xchg
pop
mov
movups
or
pop
push
leave
xor
adc
inc
adc
js
pop
push
mov
xchg
pop
mov
movups
sub
loop
and
push
cdq
push
adc
cmps
hlt
push
dec
(bad)
fistp
inc
jnp
sub
jne
cld
add
push
sbb
inc
jle
sub
in
daa
jge
mov
cmp
cmp
dec
in
jmp
fwait
enter
movs
je
cmp
jnp
sub
hlt
adc
sbb
mov
pushf
int
and
sbb
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
mov
add
daa
arpl
test
lods
sti
and
xchg
sbb
xchg
in
mov
lods
mov
int3
xchg
and
mov
sbb
mov
sbb
mov
push
pop
push
pop
iret
fisub
(bad)
xchg
jp
mov
loop
inc
inc
sub
sbb
cdq
xor
add
std
cmp
(bad)
sub
int3
mov
aaa
aad
cli
out
ins
loope
and
xor
mov
pop
mov
movups
sub
pop
push
jmp
xchg
jge
out
jb
cmovno
xor
in
sub
mov
and
xchg
cs
and
outs
movs
inc
imul
adc
xchg
out
mov
test
and
nop
or
data16
ds
hlt
or
and
inc
cdq
or
cmp
sbb
das
or
(bad)
xchg
dec
push
mov
outs
push
fwait
pop
push
imul
dec
jmp
lock
call
jnp
hlt
or
inc
imul
dec
sbb
push
dec
push
retf
and
push
cdq
or
push
data16
ds
hlt
or
cdq
push
push
sbb
ss
hlt
or
mov
das
fisttp
xor
pop
js
xor
xchg
mov
repnz
adc
xor
pop
out
repz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
shl
push
in
mov
movups
xor
pop
leave
repz
mov
movups
xor
pop
inc
repnz
mov
movups
add
and
xor
mov
movups
xor
pop
jle
xor
mov
movups
push
xor
pop
adc
fstp
adc
add
cmp
int
dec
push
mov
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cmp
push
xor
pop
push
repnz
pop
mov
dec
adc
xor
inc
inc
cmc
or
cdq
adc
push
jns
fdivr
jg
sbb
hlt
pop
mov
add
push
cmps
fisttp
inc
jg
cmp
in
add
mov
fst
sub
cwde
dec
jecxz
xchg
rcr
test
add
and
fsubr
pop
enter
cmps
lock
sub
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
sbb
scas
or
popa
inc
cdq
adc
inc
dec
sub
sub
cmp
cwde
jne
cld
adc
push
sbb
jns
sub
js
and
jne
jmp
xchg
or
cmp
pop
mov
sbb
push
aad
imul
dec
retf
scas
sbb
sbb
aaa
and
xor
mov
pop
mov
movups
sub
pop
push
in
adc
test
dec
sbb
sbb
sub
and
jne
cli
sbb
xchg
adc
ins
pushf
jmp
mov
and
xchg
or
mov
jmp
mov
mov
inc
push
das
or
hlt
pop
lea
xor
ja
and
and
sub
dec
leave
aaa
inc
ja
out
jns
xor
inc
push
repnz
test
jecxz
adc
out
push
repnz
fistp
adc
xor
pop
push
repnz
mov
adc
add
mov
push
repnz
out
pop
mov
cmc
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
push
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
aaa
nop
or
arpl
fiadd
dec
push
and
push
idiv
movups
and
xor
test
pop
mov
movups
adc
pop
push
(bad)
xor
xchg
xchg
pop
mov
movups
add
pop
push
les
push
fild
movups
jbe
pop
push
mov
xchg
pop
mov
movups
and
xor
loop
pop
mov
movups
pop
and
xor
mov
icebp
out
jb
or
push
sub
sbb
jne
cld
sbb
imul
inc
inc
sub
push
jge
stos
mov
push
scas
shl
in
inc
ja
sti
dec
lock
push
dec
cdq
and
cmp
sbb
push
and
jmp
jecxz
in
stos
mov
mov
mov
fst
inc
or
push
sub
jne
sbb
push
stc
stos
cwde
inc
call
jbe
sub
into
test
mov
nop
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
jecxz
sbb
or
sar
jnp
sub
hlt
push
mov
add
sub
in
ds
jnp
sub
hlt
imul
cmps
retf
push
in
and
xchg
cdq
data16
lock
xchg
or
cdq
mov
stc
sbb
scas
enter
cs
jo
out
ds
jnp
sub
hlt
imul
mov
push
xor
call
movs
or
push
pop
int
inc
pop
stc
sub
shl
repnz
jb
push
bound
xor
mov
syscall
lea
and
repnz
mov
femms
xchg
or
imul
inc
data16
dec
(bad)
xchg
inc
xchg
enter
cs
jo
aad
dec
jnp
sub
hlt
arpl
sbb
pushf
in
mov
sub
cdq
jne
cld
adc
data16
inc
inc
sub
sbb
lods
cli
and
xchg
push
push
dec
test
or
mov
out
jb
sbb
sub
mov
rcl
cmp
cmp
cmc
repz
movs
sahf
inc
cmps
out
adc
cmp
push
dec
loopne
dec
div
lock
std
ja
pop
push
repnz
mov
pop
in
jb
push
js
les
dec
pop
in
sbb
jmp
dec
cld
sbb
jle
sbb
and
and
inc
cdq
adc
sbb
or
in
iret
test
stos
jmp
sbb
push
lods
or
xchg
pop
mov
pop
adc
xor
jbe
clc
sub
scas
cwde
inc
call
jns
cmp
xchg
push
repnz
mov
or
mov
push
xor
push
fistp
adc
xor
pop
push
repnz
scas
pop
mov
(bad)
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
outs
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
mov
lea
ins
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
add
or
scas
or
xchg
pop
mov
movups
and
pop
push
loope
push
fild
movups
adc
pop
push
aam
push
fist
movups
add
pop
push
enter
adc
inc
adc
js
pop
push
mov
xchg
pop
mov
movups
sub
pop
push
mov
adc
jl
cmp
aad
mov
stos
mov
iret
xchg
cs
sbb
inc
jg
loopne
call
les
sub
jne
sbb
inc
inc
(bad)
mov
mov
inc
jnp
sub
hlt
adc
js
inc
adc
mov
sbb
scas
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
adc
push
and
xor
nop
xchg
pop
mov
movups
sbb
mov
sub
daa
cmp
xor
ja
in
cmp
jne
cld
pop
cmp
inc
jno
or
lds
aaa
in
cli
out
jne
sbb
inc
pop
(bad)
dec
aam
jle
mov
cs
sbb
inc
jnp
and
mov
or
cmps
mov
hlt
or
mov
cmp
cmp
push
in
push
out
imul
movs
xor
push
push
repnz
mov
wbinvd
lea
and
loope
outs
pop
inc
imul
or
fwait
mov
(bad)
dec
hlt
xchg
jb
mov
add
jns
or
scas
or
mov
adc
sbb
mov
adc
dec
mov
cli
out
jne
sbb
dec
jnp
sub
mov
cmps
in
arpl
stos
jbe
fistp
or
pop
int
inc
inc
fld
dec
int3
scas
nop
dec
mov
cli
out
jne
sbb
inc
pop
in
sbb
fld
add
fcomp
mov
les
or
sahf
add
mov
int
inc
jnp
sub
mov
cmc
sbb
mov
in
xchg
pop
xor
pop
push
cld
aaa
pop
fidiv
xor
lea
and
xor
mov
or
adc
xor
pop
jge
xor
mov
movups
add
push
xor
pop
dec
repz
mov
movups
add
push
xor
pop
ins
repz
mov
movups
xor
pop
iret
repz
mov
movups
adc
xor
pop
enter
cli
mov
movups
add
push
xor
pop
inc
repz
mov
movups
and
xor
mov
movups
adc
xor
pop
adc
call
lahf
push
push
push
icebp
int
mov
fistp
sbb
movs
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
cmc
or
mov
cs
xchg
int3
inc
jnp
sub
cmps
mov
icebp
xchg
sbb
mov
sbb
inc
jno
out
hlt
outs
mov
sub
cmp
dec
loop
xchg
shl
test
mov
out
and
scas
xchg
dec
icebp
out
jb
push
bound
xor
mov
syscall
lea
and
repnz
mov
femms
adc
push
(bad)
fisub
call
loope
fwait
cs
jne
sbb
dec
jnp
sub
hlt
arpl
add
or
scas
or
mov
cld
push
cmp
sbb
ja
in
mov
xchg
dec
dec
cdq
cmp
mov
add
sub
imul
int3
mov
lock
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
enter
mov
cld
sbb
jg
add
sub
sub
mov
sbb
xchg
pop
int
dec
jnp
sub
mov
and
xchg
cs
jge
das
xor
loopne
push
out
imul
(bad)
fdiv
ja
in
mov
sbb
sbb
push
adc
mov
es
bswap
test
dec
sbb
add
xor
jle
repnz
mov
aaa
adc
xor
repnz
cmp
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
int
lea
arpl
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
cmp
lea
and
not
sbb
jecxz
adc
xor
push
fistp
adc
xor
sti
push
repnz
mov
out
xchg
pop
sbb
mov
mov
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
cmp
push
xor
pop
push
repnz
pop
mov
dec
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
push
mov
sbb
jg
xor
sub
cmp
mov
push
cmp
cmp
dec
stc
sbb
lods
shl
xchg
sbb
lods
mov
rcr
jmp
lods
retf
and
xchg
and
fnstcw
fstp
inc
mov
cs
mov
mov
dec
leave
xchg
add
enter
mov
int
xor
jp
(bad)
sub
rol
pop
sbb
fsub
fistp
sbb
movs
xor
dec
push
repnz
mov
(bad)
jge
xor
jp
repnz
xchg
jo
jecxz
and
xor
inc
pusha
dec
jmp
inc
imul
stc
push
sub
jne
sbb
dec
jnp
sub
hlt
pop
lea
cld
adc
ins
sbb
ja
in
sbb
mov
pop
cmp
and
ins
sub
outs
pop
inc
imul
cs
mov
sbb
hlt
pop
mov
add
cmp
pop
inc
jle
sub
in
aas
jge
movs
mov
ficom
xchg
and
cs
shl
sub
cli
out
jne
cmp
push
pop
in
adc
xchg
imul
movs
xor
push
push
repnz
mov
sysret
lea
and
repnz
xchg
inc
sahf
out
aaa
adc
out
jne
sbb
dec
jnp
sub
mov
sub
sbb
inc
inc
sub
sbb
mov
add
push
stc
out
xchg
mov
fld
dec
hlt
push
mov
adc
cmps
loopne
fs
sar
dec
jnp
sub
hlt
lea
in
add
lods
or
(bad)
pop
int
inc
pop
fld
dec
hlt
push
mov
or
sbb
sub
cmp
stos
mov
adc
cmp
inc
pop
(bad)
sub
rol
adc
sbb
xor
pop
push
cmc
xor
movs
cdq
data16
pop
lock
xchg
sub
pushf
mov
ds
retf
and
jne
std
add
or
dec
test
or
mov
add
lods
or
pop
pop
int
inc
pop
stc
sub
shl
repz
jb
cmp
pop
in
cmp
rcr
(bad)
and
add
idiv
add
gs
add
add
test
and
sub
movs
xor
fs
repz
stc
scas
pop
mov
mov
lea
ss
push
repnz
jb
mov
mov
imul
push
fistp
adc
xor
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
repnz
fistp
adc
xor
pop
push
repnz
dec
pop
mov
sub
lea
mov
repnz
pop
mov
call
lea
in
push
repnz
fistp
adc
xor
push
repnz
fistp
aaa
xchg
das
sbb
movs
int
mov
and
push
idiv
movups
and
xor
test
pop
mov
movups
sub
xor
fwait
xchg
pop
mov
movups
add
pop
push
les
push
fild
movups
je
pop
push
mov
xchg
pop
mov
movups
push
pop
push
scas
xor
fcom
lea
push
pop
and
xor
iret
xchg
pop
mov
push
sbb
jb
xchg
pop
sub
push
jge
mov
daa
cmp
sbb
das
or
shr
(bad)
xchg
pop
cmp
pop
fcos
dec
out
xchg
pop
inc
mov
shl
sbb
dec
hlt
or
xor
sub
sbb
movs
mov
mov
sub
sbb
rcl
adc
sub
into
test
lods
lds
sub
out
xchg
mov
repnz
mov
add
lea
ss
push
repnz
mov
sub
push
xor
pop
push
repnz
pop
mov
cmp
lea
mov
sub
sub
bound
ds
dec
sub
sbb
lods
jmp
mov
jmp
mov
fst
aas
sbb
lods
or
addr16
test
loopne
fwait
cs
jne
sbb
inc
pop
fnop
dec
les
adc
cmps
fisttp
jb
out
ja
in
cmp
jne
cld
adc
dec
aad
imul
pop
rcr
out
xchg
push
push
pop
test
or
mov
mov
repnz
jb
push
bound
xor
mov
lar
xor
inc
push
repnz
mov
femms
fwait
or
(bad)
pop
int
inc
imul
inc
cdq
or
xor
out
push
pop
(bad)
aad
outs
jnp
sub
hlt
arpl
sbb
sbb
fisub
aad
fs
mov
cs
jne
sbb
inc
inc
(bad)
dec
int3
xchg
dec
inc
cdq
cmp
sbb
aas
sbb
lods
or
fs
cdq
push
adc
sbb
inc
inc
or
ret
xchg
dec
inc
cdq
cmp
mov
mov
in
adc
mov
popf
or
dec
test
or
fld
mul
movups
sub
iret
test
inc
cmc
add
stos
or
pop
pop
int
inc
pop
fld
dec
aam
test
lds
sub
sbb
inc
pop
in
or
scas
push
push
popf
or
dec
test
or
sahf
inc
mov
cmp
aaa
push
dec
loop
dec
stc
mov
mov
sbb
adc
adc
xchg
mov
sbb
xchg
adc
sbb
out
mov
rdpmc
lea
and
or
mov
call
xor
push
repnz
mov
dec
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
xor
lea
inc
pop
push
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
mov
adc
add
cmps
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
jp
jecxz
outs
xlat
inc
imul
cli
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
imul
test
inc
mov
adc
push
addr16
fdivr
jns
sbb
hlt
pop
mov
add
cmp
or
sub
and
or
call
sbb
or
shl
test
mov
fstp
inc
xchg
enter
cs
(bad)
lods
ds
jnp
sub
hlt
sub
cmps
mov
jb
mov
xor
inc
mov
cli
out
jbe
sub
into
test
mov
movhps
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
test
mov
cmps
repz
pop
pop
ds
jnp
sub
hlt
push
mov
add
xor
sub
or
mov
mov
and
xchg
aaa
cmp
pop
(bad)
sub
rol
add
sub
cmp
aaa
mov
and
xchg
or
mov
sbb
inc
dec
fxam
dec
rcl
adc
inc
sbb
pop
push
hlt
adc
dec
mov
ss
xchg
pop
sub
inc
inc
(bad)
sub
rol
push
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
add
jne
out
xchg
mov
push
sub
hlt
dec
mov
movups
cmps
in
push
arpl
adc
hlt
pusha
(bad)
push
lods
call
out
xchg
mov
stc
sbb
lods
sti
and
xchg
pop
cmp
dec
(bad)
dec
into
xchg
dec
inc
mov
sbb
addr16
xchg
frstor
ret
inc
mov
loop
inc
inc
sub
sbb
sbb
movhps
sub
outs
stos
inc
imul
pop
push
imul
dec
std
mov
add
lock
mov
sub
iret
test
scas
call
sbb
or
sbb
lods
test
xchg
sub
int
dec
jnp
sub
cwde
inc
mov
cli
out
jge
sub
outs
iret
inc
imul
add
and
xor
xchg
mov
add
xchg
sub
pop
in
es
shl
out
lea
and
push
repnz
mov
push
pop
enter
movs
xor
pop
push
das
xor
inc
xchg
pop
mov
push
adc
pop
and
xor
add
movups
jmp
pop
push
shl
fistp
adc
outs
and
xor
xchg
adc
mul
pop
push
mov
xchg
pop
mov
push
adc
add
pop
push
shl
fisttp
mov
push
adc
je
pop
push
cmps
xor
ds
pop
mov
or
push
push
and
xor
out
xchg
pop
mov
push
adc
and
xor
je
pop
mov
push
adc
fbld
pop
push
jmp
push
shr
out
pushf
add
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
add
and
xor
mov
movntps
xor
push
push
repnz
fistp
pop
lea
and
push
repnz
mov
femms
nop
push
pop
push
outs
int3
fisub
rcl
cld
xchg
sbb
cmp
sbb
lods
jmp
cmp
jnp
sub
hlt
ja
jne
cld
pop
cmp
xor
fs
cmp
mov
das
cmp
sub
sub
movs
mov
sbb
mov
or
xchg
pop
mov
add
and
xor
mov
movups
xor
pop
js
xor
mov
sbb
mov
out
xchg
pop
sub
es
mov
and
xchg
sub
or
rcr
(bad)
xchg
cs
and
lods
and
inc
mov
push
sbb
inc
pop
(bad)
dec
aad
jbe
cdq
cmp
add
jl
aaa
ja
jmp
mov
out
sbb
xchg
push
pop
push
(bad)
iret
fisub
fistp
adc
xor
push
fistp
add
int
dec
jnp
sub
hlt
dec
mov
push
adc
cmps
in
push
dec
(bad)
xlat
ds
adc
inc
(bad)
repnz
jb
sbb
and
fisttp
xchg
jl
mov
in
mov
pop
dec
loope
outs
test
mov
cmps
call
or
hlt
pop
xchg
pop
sar
sbb
push
cmp
pop
push
in
adc
test
cmps
lock
sub
pop
push
mov
add
adc
sbb
or
jnp
mov
sbb
ins
pushf
iret
frstor
shr
aaa
(bad)
jno
out
jge
shl
push
dec
jmp
push
shr
out
nop
or
data16
aas
dec
push
retf
and
pop
xchg
or
and
or
repnz
pop
mov
add
and
push
repnz
fidivr
aaa
mov
and
push
repnz
fidivr
cmp
add
and
fistp
xor
and
push
repnz
fidivr
lea
and
repnz
fistp
or
movs
xor
repnz
repnz
fistp
push
mov
and
fidivr
xchg
mov
and
push
repnz
xchg
leave
adc
add
data16
sbb
(bad)
test
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
and
lea
adc
push
repnz
mov
xor
lea
ds
inc
cmc
or
mov
test
jge
sbb
jne
cld
add
push
sbb
mov
das
or
xchg
inc
inc
xchg
enter
iret
push
jl
hlt
aaa
ja
in
sub
mov
movs
adc
aas
ds
inc
imul
int3
mov
lock
or
and
xor
lods
xchg
pop
mov
movups
and
xor
lahf
xchg
pop
mov
sbb
mov
out
xchg
pop
sub
sub
mov
das
cmp
inc
inc
sub
mov
shl
push
adc
fisub
aad
jp
mov
loop
inc
inc
or
shl
adc
xor
int3
jl
mov
jp
in
or
out
ins
loope
and
xor
mov
pop
mov
movups
sub
pop
push
in
adc
test
dec
sbb
add
sub
ds
mov
sbb
xchg
or
ins
pushf
in
mov
movs
mov
sti
call
push
dec
loop
push
shl
out
jb
cmp
jnp
das
jge
stos
mov
adc
and
pop
dec
(bad)
and
das
imul
xchg
xor
inc
push
repnz
test
jecxz
adc
test
repnz
pop
mov
or
lea
pop
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
loope
mov
ja
lea
fcomp
repnz
mov
jecxz
adc
xor
pop
push
repnz
mov
add
lea
xchg
pop
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
xchg
pop
mov
rcl
lea
lods
pop
push
repnz
pop
mov
lea
lea
repnz
push
repnz
push
fistp
adc
xor
pop
push
xacquire
push
pop
mov
fistp
mov
or
cdq
dec
sbb
or
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
jecxz
adc
xor
push
repnz
push
fistp
or
int
ins
jnp
sub
hlt
dec
mov
adc
cmps
out
push
dec
(bad)
aam
push
adc
cdq
cmp
cmps
ror
jle
loopne
je
cmp
jge
jbe
inc
cdq
and
or
sub
and
mov
add
and
cmp
mov
std
sbb
shr
lea
sbb
out
xchg
sbb
stos
pop
sbb
mov
shl
out
mov
push
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sub
lea
subps
add
mov
adc
cmp
ds
add
jge
mov
cmp
adc
cmp
sbb
lods
(bad)
and
xchg
or
mov
inc
fsin
dec
out
pop
inc
stos
out
pop
sbb
jle
xchg
pop
das
or
aam
jp
mov
loop
jg
sar
inc
jnp
sub
mov
and
xchg
or
mov
dec
std
sbb
mov
adc
sub
inc
inc
(bad)
sub
(bad)
cmc
add
pushf
or
addr16
adc
jbe
fistp
sbb
movs
xor
dec
push
repnz
mov
rdtsc
lea
and
dec
scas
and
inc
xchg
stc
push
stos
cs
mov
(bad)
dec
iret
xchg
jb
xchg
in
push
xchg
iret
jne
sbb
dec
pop
jmp
lods
stc
and
xchg
cs
(bad)
fdivr
dec
jnp
sub
hlt
pop
mov
add
cmp
or
and
sub
sbb
dec
cmc
and
xchg
cs
jne
sbb
inc
jnp
and
jne
hlt
and
xchg
cs
xor
pop
jbe
cmp
mov
dec
mov
stc
out
xchg
mov
stos
jbe
fistp
push
mov
sub
pop
int
inc
dec
fld
dec
(bad)
mov
push
mov
add
sub
inc
inc
(bad)
sub
jmp
dec
cld
add
jl
sbb
cmp
ror
and
add
cmp
ja
call
lods
inc
dec
sbb
push
xchg
push
jnp
sub
pop
push
int3
test
mov
das
cmp
xor
pop
jp
cmp
mov
dec
mov
(bad)
out
xchg
movs
xor
dec
pusha
icebp
xor
fidivr
push
movs
push
pop
jnp
ja
pop
push
repnz
mov
and
lea
addr16
push
repnz
fistp
adc
xor
push
bnd
push
fistp
adc
xor
push
bnd
pop
mov
(bad)
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
popa
adc
xor
push
repnz
push
fistp
adc
xor
repnz
mov
push
adc
xor
push
repnz
push
fistp
sbb
int
dec
push
mov
push
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
dec
adc
xor
repnz
mov
push
adc
xor
nop
scas
or
popa
inc
mov
cs
jne
sbb
inc
jnp
(bad)
dec
enter
cdq
cmp
push
jb
in
ja
in
and
xchg
lods
lds
xchg
adc
or
xchg
sub
push
test
mov
inc
dec
fstp
push
scas
lock
xchg
pop
push
iret
int3
fisub
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
pop
pop
push
repnz
mov
sbb
mov
cmp
in
sbb
lods
shl
pop
cmp
dec
out
mov
cwde
mov
(bad)
xchg
sub
mov
dec
loope
dec
aam
xchg
dec
push
lock
call
inc
pop
(bad)
dec
rcl
adc
cmps
fimul
js
or
shr
fcomp
and
outs
sbb
imul
add
sub
push
repnz
mov
pop
adc
xor
inc
inc
hlt
or
and
inc
xchg
enter
cs
mov
int3
inc
jnp
sub
hlt
pop
mov
add
jns
or
scas
or
xor
add
inc
inc
sub
sbb
mov
add
ds
int
inc
jnp
sub
hlt
push
mov
stc
and
xchg
cs
shl
setp
movups
or
mov
hlt
dec
mov
out
sbb
int
inc
inc
fld
dec
aad
mov
cld
add
mov
cmp
jmp
xchg
call
in
xchg
pop
sub
mov
clc
sub
pop
mov
repz
jb
add
cmp
pop
push
mov
rdtsc
xor
and
sub
int3
mov
movups
xchg
and
xor
add
adc
mov
xor
es
pop
mov
push
adc
xchg
and
xor
popf
xchg
pop
mov
push
adc
sub
pop
push
je
push
(bad)
xchg
pop
mov
movups
xchg
and
xor
xchg
xchg
pop
mov
push
adc
sbb
pop
push
jmp
xchg
pop
mov
push
adc
pop
and
xor
adc
movups
xor
jbe
jmp
push
rcr
out
jb
adc
mov
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jg
xor
mov
movups
and
xor
mov
sbb
mov
out
xchg
pop
sub
adc
mov
add
adc
mov
rcr
mov
mov
and
fwait
cs
sbb
inc
jnp
sub
mov
and
xchg
(bad)
mov
pop
xor
call
xchg
daa
add
sbb
scas
sti
jbe
fistp
sbb
add
and
repnz
mov
femms
lea
and
loope
outs
pop
inc
imul
cs
mov
sbb
hlt
pop
mov
add
or
sub
pop
dec
shl
push
out
push
dec
cld
add
jl
cmp
sbb
hlt
pop
xor
and
xchg
or
mov
sahf
and
sbb
mov
prefetcht0
xor
dec
push
repnz
mov
femms
lahf
push
push
push
mov
fisub
shl
cld
xchg
adc
cmp
and
sahf
xchg
adc
out
jb
pop
inc
push
sub
mov
(bad)
dec
hlt
push
mov
clc
add
mov
sbb
hlt
dec
xor
and
fwait
idiv
(bad)
icebp
lock
repnz
dec
mov
sub
xchg
pop
int
fs
or
test
and
sbb
xor
fs
xor
stc
lods
pop
mov
into
adc
xor
push
fistp
adc
xor
push
repnz
xor
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
icebp
push
repnz
mov
out
xchg
sub
movs
int
mov
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cmp
push
xor
pop
push
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
or
pop
hlt
dec
mov
adc
sbb
jmp
jp
fdivr
push
jnp
sub
hlt
pop
mov
cmp
push
inc
jae
add
jmp
mov
pop
cmps
ret
push
js
lock
jnp
sub
hlt
push
mov
cld
and
sbb
or
sbb
cli
lods
leave
and
xchg
mov
sbb
xchg
xchg
pop
xchg
cld
sbb
push
mov
fisub
in
mov
pop
dec
sbb
push
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
in
xor
lahf
xchg
pop
mov
movups
sbb
pop
push
shl
fisttp
cmp
sub
and
jne
cld
daa
cmp
cmp
dec
jmp
stos
enter
lds
sbb
inc
pop
fcos
dec
not
adc
cmp
ja
in
aas
jge
mov
and
xchg
or
(bad)
mov
call
mov
les
sbb
inc
dec
fyl2xp1
dec
rcl
movhps
sub
into
test
test
cli
out
jo
sub
into
test
mov
nop
xor
dec
push
repnz
mov
prefetchw
xor
js
repnz
mov
pop
dec
sbb
push
mov
sbb
inc
inc
(bad)
dec
ret
inc
or
push
mov
sbb
inc
dec
fldl2t
dec
shl
repz
jb
cmp
inc
(bad)
dec
retf
xchg
jge
movs
enter
cs
in
ds
jnp
sub
ins
mov
cli
push
arpl
out
sbb
lods
call
icebp
jne
sbb
inc
jnp
jecxz
fidivr
sbb
into
fisub
rol
adc
std
ja
pop
push
repnz
mov
push
in
jb
push
jbe
les
dec
pop
in
add
repz
cmp
sbb
sub
iret
test
inc
inc
jne
aas
sbb
or
adc
sbb
mov
icebp
aaa
jbe
mov
push
adc
xor
dec
pop
in
dec
shl
hlt
out
jb
adc
xor
xchg
push
repnz
test
loop
adc
hlt
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
movs
xor
pop
push
repnz
mov
jl
lea
pusha
pop
push
repnz
mov
and
lea
aaa
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
or
push
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
jp
lea
xor
repnz
fidivr
sub
jbe
fs
test
mov
pop
adc
xor
pop
push
repnz
mov
adc
lea
add
adc
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
in
jb
or
sub
sbb
mov
cmp
cmp
sub
jge
add
mov
cmp
push
inc
imul
jge
mov
and
xchg
and
(bad)
mov
retf
sbb
rcl
mov
mov
in
test
mov
mov
sub
int3
dec
rcr
rcl
xchg
xchg
daa
sub
pop
int
inc
pop
retf
and
push
mov
push
int3
int
mov
and
inc
mov
cli
push
dec
pushf
popa
fisub
xchg
inc
imul
cli
out
mov
jbe
and
shr
out
xchg
and
jne
aas
sbb
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
aad
push
fist
movups
add
xor
adc
inc
adc
js
pop
push
mov
movs
push
mov
repz
jb
cmp
dec
ficomp
mov
lods
mov
cmp
dec
retf
rol
ret
cmp
dec
jmp
mov
push
int
lods
jne
sbb
dec
hlt
or
sbb
sub
adc
jne
cld
sbb
push
sbb
sub
mov
rcr
lds
push
or
rcr
rcl
sub
in
out
sbb
rcr
mov
mov
in
aas
dec
retf
mov
inc
dec
sbb
or
es
pop
push
int3
test
mov
pop
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
pop
mov
and
lea
repz
scas
or
mov
cld
inc
cmp
or
sub
mov
loopne
mov
std
mov
int
or
mov
or
shl
mov
out
je
(bad)
ds
add
hlt
push
mov
cld
push
cmp
or
sub
ds
stos
mov
push
xchg
fidiv
cmp
inc
pop
in
daa
pop
out
outs
mov
jge
sbb
ja
in
aas
jge
movs
mov
int3
nop
cs
jo
in
ja
in
and
mov
mov
ja
sub
aas
dec
retf
mov
ja
sbb
adc
ja
pop
push
repnz
mov
pop
adc
xor
push
pop
retf
and
js
adc
push
jne
fdiv
ja
in
es
shr
out
xchg
adc
cdq
mov
(bad)
dec
rcl
adc
je
fisub
rcl
out
pushf
cs
jbe
sub
outs
imul
lods
std
add
cdq
or
ret
pop
int
inc
jnp
sub
movs
mov
int
femms
jnp
or
inc
aam
mov
test
xchg
mov
stos
xor
xchg
mov
mov
rdtsc
lock
adc
imul
push
fcom
xchg
fnstsw
adc
sbb
icebp
push
repnz
mov
or
pusha
mov
(bad)
sub
rol
add
xor
jle
repnz
mov
aaa
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
call
adc
xor
pop
push
repnz
mov
stos
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
add
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
repz
repnz
mov
out
xchg
xor
mov
mov
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
cmp
push
xor
pop
push
repnz
pop
mov
dec
adc
xor
repnz
mov
push
adc
xor
push
repnz
push
fistp
adc
xor
dec
pop
retf
and
jp
adc
or
dec
sub
push
jge
mov
and
xchg
and
mov
sbb
test
sbb
lods
mul
mov
call
mov
test
nop
sbb
dec
(bad)
xchg
cmp
push
mov
sbb
into
xchg
add
enter
cs
mov
jbe
aas
inc
rol
add
int3
fisub
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
ds
pop
retf
and
jge
adc
cmp
sub
sbb
cmp
add
push
sbb
inc
jg
or
in
sub
jne
stc
and
xchg
sub
mov
pop
retf
and
dec
cdq
pop
adc
cmps
cmc
push
jb
fidivr
push
jnp
sub
hlt
pop
mov
add
cmp
push
inc
jge
das
ja
in
and
mov
push
cmp
lods
je
and
sub
aam
cwde
dec
mov
cli
or
ds
push
mov
nop
xor
dec
push
repnz
mov
ud2
lea
and
repnz
mov
pop
dec
sbb
push
mov
sbb
dec
jnp
sub
mov
cmp
imul
or
rol
push
cmps
icebp
push
jl
ret
jnp
and
mov
xchg
adc
mov
aas
or
shr
lock
xchg
cs
lods
sbb
inc
jnp
das
jge
movs
mov
or
jns
mov
hlt
adc
push
movs
out
aaa
cwde
jno
out
jne
cmp
push
inc
dec
sub
inc
imul
adc
aam
adc
xor
pop
push
repnz
pop
out
push
cmp
sbb
aas
sbb
iret
xchg
pusha
inc
mov
or
and
fiadd
add
pop
shl
sub
sbb
dec
pop
in
aas
pop
(bad)
mov
push
mov
repz
jb
adc
jb
or
repnz
push
mov
cmp
and
lock
mov
push
sub
adc
ja
pop
push
repnz
mov
movups
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
mov
push
push
repnz
pop
mov
out
lea
mov
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
pop
push
repnz
pop
mov
xlat
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
xlat
adc
xor
push
fistp
mov
mov
or
cdq
data16
lock
test
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
out
jb
push
inc
pop
ds
add
hlt
push
mov
or
sub
sar
push
jnp
sub
hlt
mov
adc
cmps
xlat
push
ja
cld
ds
jnp
sub
hlt
jp
jno
and
add
mov
js
inc
sub
hlt
push
mov
dec
adc
(bad)
xchg
ds
push
sub
mov
cmp
sbb
or
sub
adc
mov
mov
push
out
xchg
pop
sub
outs
fild
mov
lea
sub
cmp
fistp
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
push
fistp
in
jb
or
sub
sbb
mov
aas
cmp
cmp
dec
call
mov
lods
mov
push
xchg
shl
in
inc
jnp
sub
shl
repnz
jb
pop
inc
push
sub
and
mov
push
cmp
push
inc
jnp
sub
in
es
mov
sbb
inc
sbb
cmps
mov
fdecstp
xchg
xchg
pop
xchg
inc
xchg
or
arpl
or
cwde
inc
mov
cli
out
ins
loope
and
xor
mov
pop
mov
movups
and
pop
push
call
xchg
pop
mov
movups
xor
mov
sub
and
call
inc
dec
(bad)
dec
clc
xchg
je
mov
sbb
addr16
jmp
sub
mov
and
xchg
or
cmp
sbb
cdq
cmp
sbb
cmp
loopne
int3
test
cdq
or
cmp
inc
(bad)
dec
hlt
bound
adc
sub
aas
dec
(bad)
mov
fisttp
lock
ja
pop
push
repnz
mov
gs
jb
cmovno
xor
sti
outs
add
movs
enter
push
push
jb
sub
iret
test
movs
jmp
das
xchg
pop
int
push
pop
in
sub
mov
data16
out
call
push
dec
jmp
dec
sbb
xor
push
adc
retf
push
fisubr
fistp
add
xchg
xor
push
movs
into
fisub
(bad)
mov
stos
dec
sbb
add
xor
jle
repnz
mov
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
jb
lea
jp
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
stos
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
sub
lea
dec
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
out
mov
add
test
out
xchg
mov
or
mov
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
repnz
push
fistp
adc
xor
push
repnz
push
fistp
out
jb
push
jge
les
inc
jnp
sub
hlt
push
mov
or
aaa
cmps
jecxz
pop
(bad)
sar
jbe
sub
outs
hlt
mov
xor
pop
inc
imul
sahf
ror
rcl
pop
or
dec
sti
sbb
enter
cmps
enter
cs
inc
pop
fst
inc
pushf
enter
xchg
push
dec
(bad)
mov
sub
hlt
ss
out
mov
or
xchg
push
sbb
mov
enter
mov
cli
push
das
test
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jge
xor
mov
movups
int
inc
dec
fld
dec
out
xchg
inc
xchg
enter
out
push
je
aad
push
jnp
sub
hlt
arpl
cmp
and
ja
in
cmp
mov
add
ror
fisub
shl
cli
xchg
adc
lea
sti
sbb
lods
hlt
and
xchg
pop
cmp
dec
jmp
mov
add
ins
sub
inc
pop
(bad)
sub
rol
sbb
aas
sbb
or
xchg
pop
mov
movups
and
pop
push
out
push
fild
movups
adc
pop
push
in
sub
out
push
cmp
xor
sub
sbb
lods
enter
sub
mov
adc
xchg
aas
dec
sti
mov
xchg
dec
sbb
or
pop
ds
jnp
and
jne
cld
pop
cmp
mov
sbb
dec
pop
in
cmp
cwde
cdq
data16
lock
fwait
cs
scas
sbb
inc
jnp
sub
mov
cmps
fild
inc
jg
nop
pop
push
hlt
adc
push
lods
mov
xchg
mov
in
pop
pop
out
push
jo
cmp
movs
xor
pop
pop
repnz
cmps
cdq
data16
lock
xchg
cs
test
add
test
lods
jmp
push
dec
test
or
sahf
inc
mov
cmp
cmp
stc
aas
dec
sti
mov
dec
dec
sbb
or
mov
in
pop
pop
out
push
out
add
and
xor
xchg
mov
adc
sbb
fisub
out
mov
rdpmc
lea
and
or
mov
mov
lea
xchg
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
add
lea
mov
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
jmp
mov
inc
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
jbe
lea
loopne
push
repnz
push
fistp
mov
mov
or
lods
pop
dec
sbb
sbb
push
adc
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
cwde
xchg
pop
mov
movups
add
pop
push
(bad)
xor
test
lea
adc
jno
pop
push
mov
push
fcomip
xchg
pop
mov
movups
and
xor
jecxz
pop
mov
movups
pop
and
xor
mov
icebp
out
jb
and
sub
sub
mov
add
imul
inc
inc
sub
sbb
mov
adc
pop
sbb
inc
push
das
ja
in
pop
jge
mov
and
xchg
or
sar
out
sbb
shl
mov
mov
ficomp
leave
ror
xchg
xor
or
add
fstp
adc
sub
outs
fild
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
push
fistp
in
jb
push
inc
pop
ds
jnp
sub
mov
and
xchg
xor
mov
xlat
sbb
lods
cli
and
nop
sar
imul
mov
fs
jb
add
sub
ds
mov
add
outs
sbb
inc
jnp
cmp
in
sub
mov
and
xchg
adc
cmps
mov
fdecstp
xchg
xchg
pop
xchg
hlt
add
sbb
fsub
shl
repnz
jb
push
bound
xor
mov
lar
xor
inc
push
repnz
mov
femms
xchg
or
arpl
fiadd
fld
inc
hlt
dec
mov
adc
cmps
out
push
inc
(bad)
aad
ja
in
pop
jge
mov
add
inc
into
fisub
shl
cli
xchg
adc
lea
(bad)
inc
hlt
popa
mov
cld
add
xchg
or
ja
or
pop
hlt
dec
mov
cmc
and
xchg
(bad)
mov
(bad)
dec
hlt
popa
lea
xor
jb
sub
sub
rol
adc
sbb
loope
and
xor
mov
repz
jb
add
push
dec
out
outs
mov
enter
sbb
or
rcl
push
sbb
or
mov
xor
xor
int
push
dec
out
outs
sti
inc
imul
add
and
xor
movs
sahf
inc
mov
sbb
mov
repnz
mov
rdpmc
lea
and
or
mov
mov
lea
out
push
repnz
push
fistp
adc
xor
push
repnz
mov
jnp
lea
lds
repnz
mov
pop
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
pop
mov
movups
xor
push
repnz
pop
mov
jnp
lea
imul
mov
mov
push
push
repnz
test
adc
xor
out
push
repnz
data16
lock
xchg
adc
fisub
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
cmp
push
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
push
adc
xor
push
repnz
push
fistp
adc
xor
inc
pop
retf
and
jne
cld
add
jle
cmp
sub
aas
jge
mov
sub
push
sbb
inc
jg
sub
jmp
lods
icebp
and
xchg
fdiv
sbb
inc
jnp
sub
hlt
add
xor
cmp
jnp
sub
hlt
push
mov
inc
adc
cmps
cmps
push
dec
(bad)
lods
cmp
in
daa
jge
mov
and
add
mov
inc
inc
(bad)
sub
rol
or
(bad)
scas
cmc
jbe
fistp
sbb
movs
xor
dec
push
repnz
mov
femms
lea
and
repnz
mov
mov
add
and
dec
jecxz
inc
imul
stc
push
lods
cs
sbb
inc
pop
(bad)
dec
hlt
pop
mov
add
add
jmp
and
or
and
inc
sbb
inc
ins
sub
outs
cmps
inc
imul
cs
(bad)
fistp
dec
jnp
cs
mov
add
push
sbb
inc
jle
or
(bad)
xchg
inc
inc
cdq
adc
inc
aad
imul
inc
shl
repnz
jb
sbb
aas
sbb
or
mov
fld
das
lods
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
into
fisub
shl
call
sbb
inc
gs
dec
out
dec
inc
xchg
enter
or
dec
test
or
mov
or
sbb
sub
sub
mov
sbb
push
sbb
jne
ds
retf
and
jne
clc
and
xchg
cs
jb
fidivr
ja
jmp
dec
inc
cdq
aas
fbld
mov
aam
outs
stos
inc
imul
sbb
addr16
push
frstor
shr
sbb
add
sbb
retf
inc
mov
inc
in
xchg
pop
sub
cmp
mov
js
fstp
popa
pop
aaa
push
inc
stc
sub
shl
repz
jb
cmp
dec
loope
dec
stc
mov
push
dec
sbb
adc
adc
pop
push
repnz
test
sbb
xchg
adc
push
leave
fisub
stc
mov
mov
mov
xor
jle
repnz
mov
xor
lea
mov
repnz
mov
xor
lea
xchg
repnz
jecxz
adc
xor
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
mov
in
lea
sbb
mov
call
imul
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
xacquire
mov
pop
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
movs
mov
sub
push
or
cdq
dec
sbb
or
movs
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sub
lea
subps
add
mov
adc
xor
push
bnd
fistp
adc
xor
push
repnz
enter
outs
adc
xor
push
repnz
push
fistp
adc
or
scas
or
mov
adc
or
dec
sub
mov
ficomp
mov
mov
mov
xchg
(bad)
mov
(bad)
dec
not
(bad)
push
xchg
cs
sbb
mov
xchg
sub
push
cmps
mov
jg
pushf
ds
jnp
sub
hlt
sbb
cmps
fwait
push
inc
(bad)
jnp
sub
hlt
mov
ins
adc
cmps
pop
fisub
(bad)
sub
rol
add
(bad)
mov
fistp
sbb
movs
xor
dec
push
repnz
mov
femms
lea
and
repnz
xchg
jo
jecxz
and
xor
inc
jle
or
and
inc
test
stc
push
sub
jbe
fnstsw
push
jnp
sub
hlt
pop
mov
add
cmp
sub
sub
(bad)
lods
jmp
mov
retf
and
jne
cld
adc
xchg
(bad)
dec
int
jbe
movs
enter
cs
jl
in
inc
jnp
sub
hlt
jae
dec
cdq
sub
sbb
ret
movs
xor
jp
stc
sub
shl
repnz
jb
sbb
ds
pop
retf
and
sbb
add
and
xor
mov
movups
xor
pop
jb
xor
mov
scas
dec
sbb
push
call
inc
jnp
sub
hlt
push
mov
adc
(bad)
in
imul
pop
shr
out
xchg
or
cdq
mov
stc
sbb
scas
enter
cs
ja
out
cmp
out
cmp
mov
dec
mov
cli
or
mov
(bad)
dec
hlt
push
mov
(bad)
and
fwait
cs
jo
out
icebp
call
ret
mov
push
lods
icebp
add
stc
stc
out
xchg
mov
retf
and
inc
mov
pop
in
xchg
pop
aaa
and
adc
mov
movups
into
fisub
shl
sub
out
jne
sbb
inc
pop
stc
sub
shl
repz
jb
sbb
das
sub
dec
dec
and
inc
mov
pop
sbb
test
fisub
aad
lahf
inc
stos
out
adc
cmp
pop
jo
xor
pushf
add
mov
daa
push
mov
ds
pop
in
and
outs
mov
xchg
or
js
or
cmps
scas
or
xchg
shl
add
and
jae
fistp
adc
xor
pop
push
repnz
mov
or
imul
(bad)
pop
mov
retf
add
sbb
repnz
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
adc
xor
push
fistp
adc
xor
pop
push
repnz
rcl
lea
scas
pop
push
repnz
sbb
pop
adc
xor
pop
push
repnz
pop
mov
xlat
adc
xor
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
fidivr
sub
out
xchg
mov
or
test
mov
or
lea
das
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
pop
mov
and
lea
pop
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
imul
jge
movs
mov
(bad)
xchg
daa
cmp
dec
loop
mov
test
sub
and
(bad)
dec
loopne
cdq
shl
(bad)
xchg
sbb
test
dec
aad
in
rol
xchg
or
lds
leave
sbb
rcl
mov
sub
retf
dec
out
sbb
ror
call
movs
inc
arpl
dec
test
mov
or
xchg
sbb
xchg
lods
or
mov
fcmovne
in
jb
push
das
stos
xor
pop
push
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
jle
xor
mov
movups
and
or
and
inc
mov
test
(bad)
fnstsw
jg
sbb
hlt
pop
mov
add
xor
jmp
sub
hlt
outs
mov
sub
cmp
cmp
sub
sub
pop
mov
aaa
and
cli
out
jge
(bad)
ds
jnp
cs
mov
and
call
inc
jnp
sub
mov
fidiv
(bad)
cmp
in
and
sbb
mov
sub
xchg
add
pop
sub
mov
mov
inc
mov
cmp
daa
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
dec
std
outs
outs
inc
imul
cs
nop
sbb
inc
inc
(bad)
dec
(bad)
xchg
jae
test
in
push
cmps
cs
jne
sbb
inc
ins
ftst
dec
lds
(bad)
in
jb
or
ja
in
es
mov
sbb
imul
or
shr
add
popa
frstor
shl
clc
xchg
div
sbb
inc
jnp
cs
movs
mov
les
adc
adc
push
dec
stc
sub
rol
add
and
xor
sar
sbb
add
and
outs
and
mov
xchg
cs
mov
ds
retf
and
dec
cdq
adc
sbb
jmp
dec
fistp
outs
or
mov
xchg
cs
jb
sub
inc
inc
(bad)
sub
rol
cmp
cmp
dec
loopne
dec
repnz
test
adc
adc
adc
mov
push
adc
xor
je
repz
mov
sbb
push
fmul
fisub
out
mov
rdmsr
lea
daa
dec
push
mov
push
fistp
adc
xor
pop
push
repnz
mov
add
lea
push
pop
push
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
bnd
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
in
lea
in
pop
push
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
dec
mov
cmp
xor
in
push
fbstp
adc
and
xor
cmps
xchg
pop
mov
movups
adc
pop
push
fdiv
push
fist
movups
or
pop
push
int3
xor
(bad)
xchg
pop
mov
movups
jg
pop
push
mov
xchg
pop
mov
movups
loopne
mov
sub
push
cmp
cmp
dec
fnop
dec
cli
xchg
dec
inc
mov
cs
jne
sbb
inc
js
cld
dec
aam
pop
inc
cdq
enter
shl
sbb
dec
rcl
adc
cmps
mov
je
sahf
ds
jnp
sub
hlt
sbb
xchg
push
pop
push
retf
int3
fisub
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
ss
jb
cmovno
or
in
adc
mov
sub
imul
inc
inc
sub
aas
jge
mov
sub
pop
sbb
jns
xor
hlt
int
and
sbb
arpl
sbb
sub
and
mov
and
xchg
(bad)
mov
(bad)
dec
aad
cwde
inc
cmps
lock
pop
int
pop
adc
mov
pop
mov
movups
daa
and
xor
mov
push
add
int
jl
pop
sub
hlt
dec
mov
push
adc
cmps
in
push
dec
(bad)
xlat
cmp
in
push
ret
scas
xchg
xor
out
xchg
cs
pop
ds
jnp
sub
hlt
push
lea
(bad)
and
xchg
or
jle
ss
stos
and
jne
cld
push
cmp
cmp
jnp
sub
hlt
arpl
push
clc
pop
push
imul
dec
lds
lock
nop
cs
test
and
jle
inc
imul
sbb
mov
bswap
test
mov
push
pop
push
mov
out
push
ret
scas
xchg
dec
pop
lock
xchg
cs
jo
das
sub
dec
int3
mov
lock
xor
pop
jo
xor
xchg
(bad)
pop
mov
and
jnp
ja
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
movups
xor
push
fistp
adc
xor
push
fistp
aaa
cmps
adc
outs
mov
movs
int3
test
mov
add
and
xor
mov
movups
xor
pop
jo
xor
mov
movups
xor
pop
arpl
xor
mov
movups
xor
pop
dec
loope
outs
fadd
mov
cmps
test
push
sub
sbb
lods
icebp
and
xchg
daa
cmp
dec
sti
sbb
scas
enter
into
push
popa
(bad)
cmc
cmp
xchg
in
cmp
pop
mov
mov
inc
mov
cmp
in
daa
inc
fadd
push
test
and
xor
mov
movups
and
xor
mov
sbb
mov
out
xchg
pop
sub
adc
mov
adc
sbb
inc
inc
sub
sbb
stos
lock
cdq
push
push
push
repz
fisub
(bad)
xchg
jp
cdq
or
cmp
sbb
or
rcl
movhps
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
int3
mov
lock
cmps
repz
dec
pop
ds
jnp
sub
hlt
push
mov
add
push
jle
xor
int3
dec
rcl
adc
cmps
out
push
data16
aam
ja
call
lods
mov
lock
xor
int3
inc
hlt
push
mov
stc
and
xchg
cs
jl
out
icebp
jmp
mov
cld
sbb
mov
or
int3
test
and
stos
mov
xor
hlt
and
xchg
xchg
pop
mov
push
adc
mov
xor
mov
movups
je
pop
push
xor
pop
mov
push
adc
out
pop
push
mov
push
(bad)
xchg
pop
mov
or
push
imul
push
mov
xchg
pop
mov
or
push
outs
and
xor
ficom
adc
dec
and
xor
cmc
xchg
pop
mov
push
adc
push
and
xor
fst
adc
and
xor
fs
pop
mov
push
adc
and
xor
ss
pop
mov
push
adc
sub
pop
test
div
movups
and
xor
test
pop
mov
movups
adc
pop
push
(bad)
xor
xchg
xchg
pop
mov
movups
add
pop
push
lds
push
fild
movups
ja
pop
push
mov
xchg
pop
mov
movups
imul
push
scas
xor
mov
(bad)
out
jb
or
ja
in
sub
mov
sbb
imul
inc
inc
sub
adc
mov
or
movs
mov
fsincos
dec
retf
inc
cdq
and
add
mov
dec
jnp
sub
hlt
or
adc
lods
push
inc
(bad)
xchg
ds
push
sub
shl
add
mov
sub
pop
repnz
mov
movups
and
xor
mov
movups
xor
pop
jl
xor
mov
sbb
mov
out
xchg
pop
sub
sbb
stos
mov
sti
xchg
daa
cmp
clc
sbb
lods
retf
and
xchg
cs
sbb
inc
inc
imul
dec
sbb
push
test
loopne
(bad)
fdivr
dec
jnp
sub
hlt
pop
mov
cld
sbb
push
sbb
inc
jg
sub
jmp
cdq
sub
push
jp
ss
inc
hlt
or
and
pop
mul
movups
aas
and
xor
test
pop
mov
movups
sub
mov
push
cdq
push
adc
cmps
hlt
or
sub
and
mov
sbb
xchg
push
add
fsub
mov
and
xchg
or
mov
fldlg2
inc
shl
add
mov
cmp
in
cmp
cmps
mov
or
and
fidivr
adc
iret
fisub
(bad)
scas
nop
inc
mov
clc
out
xchg
mov
(bad)
sub
int3
mov
aaa
jmp
cmp
loope
dec
aam
xchg
pop
pop
lock
xchg
or
jp
ss
inc
hlt
or
cdq
add
xchg
or
jp
ss
inc
hlt
or
xchg
cli
or
push
push
repnz
pop
mov
add
and
push
repnz
fidivr
sub
and
repnz
mov
(bad)
mov
and
push
repnz
mov
bsf
xor
stc
push
repnz
mov
rdtsc
mov
and
xor
fistp
adc
xor
pop
push
repnz
mov
(bad)
mov
and
push
repnz
fidivr
or
add
and
xchg
or
add
xchg
pop
int
pop
adc
mov
pop
mov
movups
daa
and
xor
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
or
pop
push
int3
xor
std
xchg
pop
mov
movups
or
mov
hlt
dec
mov
adc
pop
cmps
call
cmp
in
and
movs
mov
retf
cmp
dec
in
cdq
rcr
(bad)
xchg
cs
(bad)
repz
jnp
das
jge
ins
and
in
cmp
aaa
ds
inc
cmc
or
and
push
imul
movups
and
xor
scas
xchg
pop
mov
movups
sub
pop
push
shl
push
fbld
jno
jb
or
push
sub
scas
dec
rcr
mov
lods
hlt
and
xchg
cs
jne
sbb
inc
pop
(bad)
dec
shr
or
fsincos
out
xchg
mov
std
sbb
mov
out
arpl
sub
hlt
imul
or
cmps
pop
sbb
aaa
and
xor
mov
pop
mov
movups
sub
pop
push
in
cmp
fadd
sbb
ret
aaa
ja
in
adc
mov
sbb
xchg
lar
(bad)
mov
cs
mov
sti
nop
div
sbb
inc
pop
in
cmp
mov
(bad)
cli
or
sub
mov
(bad)
dec
hlt
pop
(bad)
jne
xor
jne
and
fs
bswap
test
mov
add
neg
fidiv
mov
test
and
adc
xor
movs
repnz
stc
lods
pop
mov
jge
lea
popa
pop
push
xacquire
inc
pop
mov
mov
imul
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
xchg
jecxz
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
pop
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
jp
sar
outs
rol
mov
mov
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
or
sbb
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
sbb
cmp
ds
add
jle
dec
mov
or
or
sub
adc
jne
cld
sub
pop
sbb
inc
ja
pop
ja
in
es
mov
sbb
dec
sbb
stos
mov
(bad)
inc
cdq
push
adc
cmps
stos
push
jo
cwde
ds
jnp
sub
hlt
push
mov
jge
pop
cmps
lahf
push
dec
(bad)
movs
ds
jnp
jecxz
fidivr
sbb
int
push
pop
in
cmp
mov
dec
sbb
add
and
repnz
mov
clts
lea
and
repnz
xchg
js
jecxz
cmp
xor
ins
push
repnz
mov
aaa
aam
cli
out
jne
sbb
inc
jnp
sub
hlt
push
mov
or
cmp
cmp
inc
sub
sub
cmps
mov
les
pop
or
les
test
jb
pop
inc
push
sub
cmp
mov
sbb
imul
das
ja
in
and
mov
add
pop
sbb
inc
push
in
xchg
(bad)
xchg
pop
mov
adc
xchg
or
sbb
mov
add
mov
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
sub
hlt
dec
mov
adc
cmp
ds
dec
sub
sbb
mov
sbb
push
sbb
sbb
hlt
dec
mov
push
cmp
sbb
ja
in
cmp
stos
mov
retf
xchg
bndldx
aas
sbb
lods
or
mov
(bad)
inc
dec
sub
mov
shl
or
and
mov
call
sbb
frstor
shl
sbb
add
sbb
int
bound
push
sbb
pop
in
xchg
pop
sub
aas
pop
shl
pop
jno
out
jne
sbb
inc
pop
jmp
mov
fstp
in
jb
pop
inc
dec
sub
inc
pop
in
ds
shl
out
(bad)
and
add
push
repnz
mov
add
mov
fs
push
int3
test
and
adc
xor
movs
repnz
stc
lods
pop
mov
movs
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
repnz
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
jp
cld
outs
rol
mov
mov
out
xchg
lods
ja
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sub
lea
or
sbb
pop
mov
cmp
lea
pop
pop
push
bnd
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
or
pop
int
jge
add
jo
dec
mov
or
or
sub
cmp
mov
and
xchg
adc
mov
dec
sti
sbb
lods
ret
and
xchg
xor
stos
mov
rcr
out
rcr
mov
mov
(bad)
sbb
rcl
lea
adc
enter
(bad)
syscall
xchg
pop
mov
adc
pushf
cmp
aas
dec
in
mov
pop
dec
sbb
push
enter
movs
xor
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
fnsave
push
fisttp
add
dec
clc
out
xchg
mov
fld
dec
into
xchg
jnp
mov
in
push
pop
(bad)
(bad)
cmp
in
mov
cdq
mov
(bad)
xchg
xor
mov
dec
call
cwde
inc
sub
out
jne
sbb
inc
dec
(bad)
dec
aad
jg
cdq
or
cmp
cmp
dec
in
mov
mov
mov
adc
movs
mov
cmp
out
fidivr
add
pushf
jne
mov
shr
sub
out
ins
loope
and
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
cmp
mov
sub
cmp
arpl
add
ja
in
sbb
stos
mov
retf
push
pop
test
or
xor
push
cmp
sbb
sub
mov
shr
enter
jne
ds
pop
retf
and
push
cdq
adc
cmp
sbb
and
ror
pop
mov
aas
sbb
push
aad
imul
dec
retf
mov
ins
mov
cli
adc
add
fbstp
sbb
push
xchg
pop
sub
stos
dec
(bad)
sub
rol
add
es
pop
and
inc
cdq
adc
sbb
or
scas
or
cmps
push
mov
repz
jb
cmp
dec
out
dec
in
mov
jnp
sbb
adc
adc
pop
push
repnz
scas
jmp
sbb
pop
lods
or
xchg
push
mov
rdpmc
lea
and
or
mov
cmp
lea
addr16
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
mov
imul
push
fistp
adc
xor
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
jp
ret
xlat
inc
imul
cli
out
vsubss
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
mov
push
mov
push
(bad)
xchg
pop
mov
movups
bound
pop
push
mov
xchg
pop
mov
movups
push
and
xor
aad
pop
mov
movups
mov
mov
sub
(bad)
xchg
or
cmp
lea
retf
cmp
jnp
sub
hlt
jno
push
cdq
sub
and
repz
dec
sub
hlt
add
sbb
aas
sbb
lds
jmp
xchg
enter
lea
stos
ds
hlt
sub
or
xchg
sbb
jne
aas
sbb
or
mov
fcomi
in
jb
push
das
test
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
pusha
repnz
mov
movups
iret
fisub
shr
call
cmp
mov
rcl
retf
xchg
adc
or
shl
xlat
fwait
or
jbe
or
scas
or
xchg
cld
add
popa
sbb
inc
dec
sub
daa
jge
mov
adc
push
sbb
inc
jo
xor
in
fwait
shl
aam
mov
cmp
(bad)
sub
rol
sbb
or
mov
xlat
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
inc
dec
push
and
inc
nop
enter
cs
(bad)
fnstsw
dec
jnp
sub
hlt
pop
mov
add
xor
(bad)
pop
in
das
pop
out
push
in
sbb
int3
inc
pop
(bad)
dec
retf
inc
cdq
add
cmp
cmp
dec
out
outs
outs
inc
imul
jmp
dec
(bad)
dec
hlt
pop
mov
hlt
and
pop
mov
cmp
(bad)
aas
dec
ret
mov
fisttp
lock
aas
sbb
(bad)
mov
jmp
push
adc
xor
inc
pop
retf
and
jne
cld
sbb
lock
fisub
leave
mov
push
lods
inc
sub
stc
out
xchg
mov
clc
sub
inc
mov
cli
or
sub
inc
jne
or
inc
imul
add
xchg
or
jae
int
pop
jo
xor
pushf
push
pop
mov
daa
aas
pop
aas
push
dec
(bad)
sub
rol
add
xor
jle
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
scas
pop
mov
dec
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fidivr
sub
cmp
push
or
mov
jecxz
adc
xor
pop
push
repnz
mov
adc
lea
add
adc
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
repnz
push
fistp
adc
xor
push
repnz
rol
add
push
sub
cmp
jne
cld
adc
outs
sbb
jnp
xor
in
sub
mov
daa
cmp
xor
sub
xchg
dec
ret
shr
push
mov
sbb
call
cmps
push
mov
sbb
dec
cli
xchg
or
push
lahf
xor
icebp
out
repnz
jge
fisttp
out
jb
push
jp
sub
into
test
mov
nop
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
out
sbb
or
sar
jnp
sub
hlt
push
mov
add
or
in
ds
sub
hlt
imul
cmps
retf
(bad)
stc
cmp
in
dec
cld
mov
and
lock
ret
jnp
sub
hlt
push
mov
adc
cmps
in
js
out
ds
jnp
cs
mov
ror
leave
pop
inc
ins
loop
pop
push
hlt
adc
pop
dec
sbb
or
adc
fs
test
mov
and
xchg
pop
xor
push
push
repnz
mov
nop
xor
dec
push
repnz
xchg
inc
mov
rdpmc
lea
(bad)
hlt
dec
mov
adc
push
cmps
jmp
inc
dec
sub
cmp
cmp
lods
jne
cld
add
push
sbb
or
test
lods
jmp
cmp
dec
(bad)
dec
hlt
pop
mov
adc
cmps
fadd
popa
mov
dec
repz
dec
cdq
adc
sbb
dec
sub
sbb
mov
fadd
shl
clc
sub
aam
adc
add
stc
stc
out
xchg
stos
aaa
das
pop
xor
jl
call
adc
imul
jge
mov
add
sar
xchg
mov
stc
sub
shl
repz
jb
cmp
pop
in
adc
xchg
push
sbb
aas
sbb
or
mov
add
call
mov
fstp
rdtsc
popf
add
push
cld
and
sub
lahf
inc
movs
out
adc
cmp
dec
pusha
sti
xor
mov
push
sub
adc
ja
pop
push
repnz
push
fistp
adc
xor
repnz
pop
pop
mov
pop
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
xchg
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
aaa
xchg
push
sbb
test
fisub
fild
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
push
fistp
adc
xor
bnd
fistp
adc
xor
push
repnz
jecxz
adc
xor
push
repnz
push
fistp
out
jb
push
pop
pop
ds
jnp
and
jne
clc
and
xchg
sbb
mov
fcomp
mov
mov
fimul
mov
sbb
inc
pop
fsqrt
dec
int3
xchg
push
inc
mov
lods
jne
sbb
inc
hlt
push
mov
dec
adc
ret
or
dec
aad
test
mov
mov
sub
int3
or
fstp
cmp
sub
outs
fild
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
in
jb
push
dec
pop
ds
add
hlt
push
mov
or
sbb
sar
push
sub
dec
hlt
mov
xor
push
jge
cld
ds
jnp
sub
hlt
jp
dec
mov
jp
xchg
pop
sub
test
fld
dec
(bad)
xchg
jns
cdq
or
sbb
inc
sub
cmp
cmps
mov
push
lahf
shl
in
inc
pop
fsqrt
xchg
xchg
pop
xchg
cld
add
xchg
adc
popa
lods
or
adc
add
mov
ja
pop
push
repnz
mov
add
lea
ss
push
repnz
mov
sub
jp
or
mov
hlt
dec
mov
cld
cmp
and
mov
(bad)
sbb
lods
jmp
push
pop
test
or
mov
or
add
aad
ja
in
mov
test
sub
push
mov
fs
int3
test
cdq
or
sbb
sub
mov
hlt
bound
adc
sub
outs
pop
inc
imul
or
pop
test
or
cmc
inc
lock
adc
xor
inc
jb
or
and
inc
cwde
enter
sbb
addr16
jge
mov
sub
lahf
inc
movs
out
adc
cmp
ja
jmp
dec
(bad)
mov
dec
mov
cs
xchg
pop
and
mov
clc
sub
aam
adc
add
xchg
stc
out
xchg
cmps
xor
push
sar
rdtsc
imul
pop
push
fsub
shl
cmp
dec
pusha
icebp
xor
mov
push
sub
ja
pop
push
repnz
mov
(bad)
adc
xor
pop
push
repnz
fistp
adc
xor
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
fcom
lea
sub
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
pop
mov
movups
xor
push
repnz
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
loope
repnz
data16
lock
xchg
adc
pop
int3
fisub
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
push
adc
xor
push
repnz
push
fistp
adc
xor
inc
pop
retf
and
dec
cdq
adc
push
jo
fdivr
push
jnp
sub
hlt
pop
mov
add
sub
sub
sbb
scas
enter
fdiv
sbb
inc
pop
fptan
dec
hlt
add
add
cmp
jnp
sub
hlt
push
mov
inc
adc
cmps
cmps
push
arpl
push
mov
jno
xsha1
cmps
mov
xlat
movs
xor
jp
(bad)
sub
rol
add
rcr
scas
cmc
jbe
fistp
sbb
movs
xor
dec
push
repnz
mov
rdtsc
lea
and
xor
mov
mov
add
and
dec
out
inc
imul
stc
push
pushf
cs
mov
iret
inc
popa
(bad)
dec
retf
inc
mov
cs
jne
sbb
inc
data16
dec
hlt
outs
mov
sub
cmp
sub
outs
stos
inc
imul
cs
stos
sbb
inc
pop
(bad)
dec
retf
inc
stos
enter
cs
mov
stc
inc
dec
(bad)
dec
rcl
adc
(bad)
div
loope
repnz
dec
mov
sub
xchg
pop
sub
outs
sti
inc
imul
or
jae
int
pop
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
sub
iret
test
lods
shl
xchg
cmp
dec
aam
mov
mov
into
xchg
or
mov
ds
retf
and
push
cdq
adc
cmp
push
inc
dec
sub
and
mov
add
push
sbb
mov
cmp
dec
pop
in
or
sub
dec
(bad)
and
xchg
push
fnstenv
ja
in
mov
mov
mov
call
pop
jbe
sub
shr
dec
inc
mov
xor
int3
test
sar
ins
movs
xor
dec
pop
retf
and
dec
cdq
adc
sub
or
mov
lds
aaa
sbb
cs
xchg
pop
sub
lods
dec
clc
and
inc
mov
aaa
or
out
jno
fnstsw
dec
out
lods
push
dec
sbb
pop
xchg
sbb
movs
into
fisub
out
lods
stos
dec
sbb
adc
adc
pop
push
repnz
fistp
sbb
aas
sbb
out
mov
rdmsr
lea
daa
dec
push
mov
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
pop
adc
xor
pop
push
repnz
fstp
jecxz
adc
xor
repnz
repnz
mov
inc
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
bnd
pop
mov
push
adc
xor
repnz
mov
iret
adc
xor
push
fistp
adc
xor
push
fistp
sbb
or
scas
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
adc
adc
pop
push
aad
push
fist
movups
add
pop
push
enter
adc
inc
adc
jnp
pop
push
mov
xchg
pop
mov
movups
outs
and
sbb
test
dec
sbb
pop
cmps
lock
jge
ret
ds
jnp
sub
jne
(bad)
and
xchg
cmp
dec
call
mov
ficomp
sbb
inc
inc
fincstp
inc
hlt
jge
dec
cdq
pop
adc
cmps
mov
ds
jnp
sub
hlt
adc
cmp
mov
sub
inc
fld
push
xchg
and
xor
mov
movups
and
xor
mov
movups
adc
pop
push
mov
add
jl
add
dec
sub
sbb
lods
jmp
mov
fchs
dec
int
nop
inc
mov
cli
out
jne
sbb
inc
jnp
sub
hlt
push
mov
adc
imul
sub
out
sbb
lods
jmp
mov
sbb
shl
or
xor
out
xchg
mov
repnz
mov
push
adc
xor
pop
push
repnz
push
fistp
mov
out
jne
sbb
inc
dec
fld
dec
hlt
push
mov
or
or
jecxz
jbe
sar
dec
inc
imul
inc
fld
cmp
cmp
dec
in
mov
lods
repnz
xchg
or
jae
cmp
retf
and
jne
cld
push
cmp
cmp
pop
fnop
dec
hlt
pop
xchg
pop
sar
xor
add
push
cmp
pop
push
in
sbb
test
xor
sub
pop
push
movs
mov
add
xor
mov
leave
mov
push
stos
lock
sahf
add
sahf
pop
int
inc
jnp
sub
nop
inc
mov
cli
out
jge
sub
pop
dec
loope
outs
or
mov
mov
and
xor
xchg
mov
in
push
enter
movs
sbb
pop
push
push
xor
cmp
adc
int
pop
push
in
push
fild
adc
mov
xor
mov
push
adc
xchg
and
xor
sbb
pop
mov
push
adc
pop
and
xor
pop
xchg
pop
mov
push
adc
dec
and
xor
movs
xchg
pop
mov
push
adc
xchg
and
xor
pop
xchg
pop
mov
push
adc
xor
jbe
loope
dec
int3
mov
lock
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
adc
xor
push
bnd
fistp
sbb
out
jne
sbb
inc
inc
fld
inc
hlt
push
mov
or
(bad)
jecxz
jbe
sar
(bad)
shr
lds
sbb
inc
inc
fsqrt
dec
iret
xchg
push
inc
xchg
enter
lods
jne
sbb
push
stc
xchg
mov
in
sbb
xchg
push
push
push
adc
fisub
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
lods
mov
hlt
dec
lea
cld
push
cmp
cmp
dec
cld
sbb
lods
jmp
ret
mov
shl
or
(bad)
ds
jnp
das
jge
ins
sub
in
cmp
sub
pop
push
mov
prefetcht0
xor
dec
push
repnz
mov
femms
cdq
push
push
push
mov
fisub
shl
cld
xchg
cs
jne
sbb
inc
pop
loope
dec
int3
mov
lock
sub
jl
fnstsw
push
jnp
sub
hlt
pop
mov
sti
add
adc
je
xor
int3
dec
hlt
dec
mov
cli
and
xchg
div
(bad)
icebp
loop
repnz
movs
dec
sbb
add
xor
jg
repnz
scas
xchg
dec
mov
and
lea
jnp
push
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
repnz
pop
mov
adc
lea
lahf
pop
push
repnz
mov
retf
add
lahf
pop
push
repnz
pop
mov
movups
xor
pop
push
repnz
mov
push
imul
push
fistp
adc
xor
pop
push
repnz
mov
adc
mov
or
mov
call
adc
and
pop
push
loope
push
fild
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
pop
and
xor
adc
movs
jne
pop
push
mov
xchg
pop
mov
movups
or
mov
sub
and
xchg
daa
cmp
jnp
sub
hlt
pop
mov
adc
(bad)
out
push
jnp
sub
hlt
jno
push
cdq
sub
add
sub
jecxz
aad
in
rcr
mov
mov
(bad)
sub
int3
mov
aaa
ins
jae
out
(bad)
cmp
pop
push
sti
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
sbb
pop
push
in
sbb
test
mov
cmps
lock
dec
pop
ds
jnp
cs
mov
sbb
outs
sbb
ja
jmp
mov
push
xchg
push
pop
push
mov
fisub
shr
clc
xchg
div
sar
push
jnp
sub
hlt
mov
hlt
and
xchg
pop
cmp
dec
shl
push
out
imul
mov
or
xchg
pop
mov
add
and
xor
mov
movups
pushf
fsub
sub
pop
cmp
cmovno
or
in
mov
scas
nop
inc
scas
lock
push
clc
out
xchg
mov
(bad)
dec
aam
jle
mov
cs
sbb
dec
pop
in
cmp
mov
push
jb
push
inc
dec
sub
mov
(bad)
inc
hlt
pop
mov
stc
and
mov
jo
lods
imul
xor
mov
or
mov
out
xchg
mov
(bad)
and
mov
repnz
jb
add
sub
dec
ret
scas
xchg
movs
push
lock
fwait
cs
jo
das
sub
dec
ret
scas
xchg
data16
lock
call
inc
pop
loope
dec
ret
scas
xchg
pop
pop
lock
pop
xor
movs
xor
jl
repz
loop
pop
mov
adc
sahf
add
ins
loope
and
xor
adc
adc
adc
pop
push
cmp
push
fbstp
pop
mov
push
adc
loop
pop
push
inc
xor
mov
movups
adc
pop
push
push
xor
mov
adc
add
pop
push
xor
test
adc
and
pop
push
xor
js
pop
mov
push
adc
aad
pop
push
cmc
xor
in
xchg
pop
mov
movups
or
pop
push
pop
xor
or
adc
and
dec
loope
outs
lea
mov
lea
and
repnz
mov
wbinvd
lea
and
repnz
mov
(bad)
add
and
repnz
mov
cvttps2pi
xor
sbb
xor
fistp
push
lods
push
push
push
push
int3
fisub
leave
xchg
inc
xchg
enter
cs
jae
aad
push
jnp
sub
hlt
arpl
or
ror
ja
jmp
lods
cli
and
xchg
sbb
stos
mov
(bad)
inc
cdq
push
fild
mov
inc
inc
imul
int3
mov
lock
or
and
xor
mov
pop
mov
movups
sub
pop
push
in
xor
lahf
xchg
pop
mov
sbb
mov
cmp
cmps
call
mov
cli
xchg
push
cmp
dec
out
mov
cmps
mov
push
xchg
push
push
push
out
fisub
hlt
push
mov
or
add
sar
ja
in
mov
xchg
dec
mov
sbb
dec
push
retf
and
inc
mov
sbb
fbld
fistp
sbb
add
and
repnz
mov
or
outs
clc
out
xchg
mov
rcr
cmps
shr
push
xchg
div
aaa
ds
inc
cmc
or
mov
cs
jne
sbb
inc
pop
(bad)
dec
aad
jne
mov
sbb
fsub
lds
adc
push
cmp
push
aam
pop
lds
or
repz
out
xchg
mov
ins
cmps
scas
or
xchg
movs
mov
rdpmc
lea
and
or
mov
fwait
adc
xor
push
repnz
push
fistp
adc
xor
repnz
push
fistp
adc
xor
pop
push
repnz
test
jecxz
adc
xor
bnd
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
ror
sub
pop
or
cdq
data16
lock
test
push
xor
pop
push
repnz
mov
sbb
lea
cmp
sub
fistp
adc
xor
pop
push
repnz
mov
xor
lea
arpl
jbe
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
out
jb
or
ja
in
sbb
xor
add
push
or
sub
das
jge
mov
sbb
inc
imul
jge
mov
and
xchg
lods
jne
sbb
dec
hlt
push
(bad)
jne
cld
cmp
inc
add
or
dec
call
test
mov
mov
repnz
sub
shl
icebp
out
jb
sbb
push
scas
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
aam
push
fist
movups
add
pop
push
in
sub
jnp
mov
jnp
cmp
dec
xlat
sbb
stos
enter
cs
jne
sbb
inc
jl
jmp
hlt
xchg
inc
inc
xchg
enter
fnsave
sbb
inc
inc
(bad)
sub
rol
add
test
(bad)
fnstsw
dec
jnp
sub
hlt
pop
mov
cld
add
ins
sbb
inc
js
sub
in
and
mov
and
xchg
(bad)
mov
xor
push
fstp
add
xchg
or
das
pop
int
inc
pop
in
aas
dec
shl
pop
enter
movs
cmp
pop
push
(bad)
xor
mov
pop
mov
movups
sub
pop
push
in
xor
lahf
xchg
pop
mov
sub
sub
sbb
lods
(bad)
and
xchg
push
cmp
dec
lds
mov
mov
test
or
mov
fiadd
fld
dec
hlt
dec
mov
cld
add
sbb
inc
inc
and
sbb
mov
sbb
sbb
fisub
aam
jp
mov
div
sar
ja
jmp
mov
mov
xchg
push
adc
cmp
dec
pop
retf
and
push
lods
cld
add
or
xor
sub
mov
femms
stos
or
add
fiadd
fld
dec
retf
mov
inc
mov
cli
or
and
inc
pop
in
sub
out
push
jecxz
(bad)
popa
mov
retf
and
jne
inc
jne
aas
sbb
or
xchg
pop
mov
into
adc
xor
jbe
clc
cs
shl
in
jb
adc
and
xor
test
jecxz
adc
xchg
pop
push
repnz
rcr
cmps
adc
xor
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
cld
adc
xor
push
repnz
mov
xor
lea
and
repnz
mov
out
adc
xor
push
repnz
mov
inc
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
fidivr
sub
push
sub
push
or
(bad)
pop
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
dec
adc
xor
push
bnd
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
pop
retf
and
outs
cdq
adc
push
gs
fdivr
push
jnp
sub
mov
das
cmp
push
inc
jg
adc
xchg
and
mov
sub
inc
sbb
inc
arpl
sub
mov
add
cmp
cmp
sub
sbb
je
mov
mov
and
retf
or
dec
(bad)
sbb
rcr
sbb
ds
pop
in
and
mov
mov
xchg
pop
sbb
mov
mov
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
adc
xor
jle
retf
and
jne
cld
and
jle
sbb
sub
cmp
mov
and
xchg
aaa
cmp
inc
(bad)
dec
ret
inc
test
ret
fdiv
sub
into
test
lods
icebp
and
xchg
cs
jne
sbb
inc
inc
(bad)
dec
hlt
pop
mov
adc
push
sbb
inc
jae
cmp
in
cmp
movs
mov
ror
sub
pop
(bad)
sub
rol
sbb
aas
sbb
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
in
ds
out
imul
mov
(bad)
dec
hlt
push
mov
push
adc
cmps
in
jae
out
ds
pop
in
and
pop
push
cmp
or
sub
and
cmp
and
xchg
cs
jl
call
aas
dec
int
lods
out
sbb
or
sub
mov
(bad)
dec
hlt
pop
mov
cld
add
mov
repz
sub
lahf
inc
mov
cmp
and
xor
arpl
call
adc
inc
frstor
(bad)
mov
dec
mov
cli
push
arpl
clc
aas
dec
int
lods
or
lock
cmp
inc
pop
(bad)
sub
rol
cmp
sbb
aas
sbb
or
mov
sbb
xchg
pop
xor
jl
repz
jg
pop
mov
xlat
adc
sub
aas
dec
int
lods
pop
dec
sbb
add
xor
jle
repnz
mov
aaa
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
sahf
push
repnz
mov
out
xchg
pop
sbb
mov
mov
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
cmp
lea
sbb
or
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
or
inc
hlt
dec
mov
adc
cmp
cmovno
or
in
adc
mov
sbb
push
sbb
inc
jae
sub
in
push
jge
mov
sub
dec
sbb
addr16
pop
jge
mov
cmp
ds
or
dec
(bad)
sbb
shl
mov
push
cmp
mov
call
ret
mov
adc
adc
inc
or
test
xchg
out
aaa
adc
cli
out
ins
loope
and
xor
mov
pop
mov
movups
and
pop
push
call
xchg
pop
mov
movups
sbb
pop
push
fdiv
push
fisttp
movups
iret
fisub
std
xchg
addr16
xchg
enter
cs
jne
sbb
inc
pop
fnop
dec
clc
xchg
dec
inc
mov
cs
jne
sbb
inc
data16
dec
in
xchg
pop
inc
mov
or
dec
test
or
mov
or
sbb
aad
dec
jnp
sub
hlt
arpl
push
sbb
inc
jo
sub
jge
mov
and
pop
(bad)
adc
adc
push
dec
(bad)
aas
dec
cld
mov
pop
dec
sbb
push
test
push
addr16
add
ror
and
movhps
xor
push
push
repnz
xchg
dec
mov
ud2
lea
and
repnz
test
cmp
or
sub
and
jne
clc
and
xchg
sbb
mov
out
dec
cld
mov
or
(bad)
icebp
push
jns
ret
jnp
and
mov
add
ins
pop
cmp
stc
sub
shl
repz
jb
sbb
ja
out
sbb
mov
cs
jne
sbb
inc
pop
fxam
xchg
cld
aas
sbb
sub
pop
sub
inc
pop
stc
sub
shl
repz
jb
adc
mov
repnz
mov
add
in
stc
out
xchg
mov
call
lods
cmovle
or
aas
sub
pop
and
inc
cdq
adc
sbb
ds
retf
and
jne
stc
add
addr16
add
jmp
mov
mov
rdtsc
jl
adc
jp
pop
push
fsubr
pop
shl
xor
int
dec
pusha
div
neg
mov
push
push
cmps
push
pop
jnp
ja
pop
push
repnz
fistp
adc
xor
push
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
repnz
push
fistp
adc
xor
repnz
mov
cmps
adc
xor
pop
push
repnz
pop
mov
jmp
xor
pop
push
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
push
inc
imul
int3
mov
lock
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
mov
aaa
adc
xor
push
bnd
fistp
adc
xor
push
repnz
fld
add
ret
ds
jnp
sub
hlt
push
mov
cld
das
cmp
xor
jp
cmp
mov
sbb
xchg
enter
enter
sti
ds
jnp
sub
hlt
jge
dec
cdq
pop
adc
cmps
mov
ds
jnp
sub
hlt
adc
sbb
mov
daa
sub
test
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
aaa
sahf
add
cs
int
inc
jns
(bad)
dec
(bad)
xchg
gs
call
inc
inc
sub
mov
clc
xchg
dec
inc
cmps
enter
les
and
outs
int3
inc
imul
jmp
jnp
sub
hlt
pop
mov
cmp
cmp
cmp
inc
fabs
dec
aad
cwde
inc
mov
add
mov
ficomp
hlt
xor
mov
pop
mov
movups
daa
and
xor
mov
adc
mov
ds
jnp
sub
hlt
dec
mov
push
adc
cmps
in
push
dec
(bad)
xlat
ds
jnp
sub
int3
mov
aaa
test
out
jne
sbb
inc
jnp
sub
hlt
push
mov
add
push
inc
jnp
sub
inc
int3
mov
lock
sub
mov
(bad)
dec
hlt
pop
xor
or
sbb
loope
and
xor
mov
dec
in
jb
push
dec
pop
ds
inc
imul
int3
mov
lock
test
pop
push
movs
xchg
repz
mov
in
xchg
pop
sub
mov
(bad)
scas
nop
inc
mov
clc
out
xchg
mov
out
aas
dec
int3
mov
aaa
in
cli
out
push
push
repnz
mov
push
adc
and
sbb
xor
mov
movups
add
push
xor
pop
(bad)
repz
mov
movups
xor
pop
push
repnz
mov
movups
adc
xor
pop
jo
xor
mov
movups
xor
pop
push
xor
mov
movups
add
push
xor
pop
ja
xor
mov
movups
and
xor
mov
movups
adc
xor
pop
push
repz
mov
movups
adc
adc
dec
inc
imul
inc
fadd
adc
pop
adc
cmp
pop
push
push
push
fild
movups
and
xor
cwde
xchg
pop
mov
movups
sbb
pop
push
shl
fisttp
movups
jo
pop
push
mov
push
fcomip
xchg
pop
mov
sbb
mov
ds
pop
sub
hlt
dec
mov
push
adc
sbb
inc
inc
sub
adc
movs
mov
(bad)
xchg
lds
sbb
inc
dec
fcos
dec
ret
inc
nop
enter
shl
sbb
dec
rcl
pop
stos
das
or
and
pop
dec
loope
outs
jle
imul
add
sub
push
repnz
mov
push
adc
xor
pop
push
repnz
mov
aaa
arpl
out
jne
sbb
inc
pop
fld
dec
lds
out
xchg
cs
ja
shl
ja
in
and
mov
sbb
mov
out
xchg
pop
sub
scas
dec
fld
dec
rcl
out
cmps
loopne
inc
inc
sub
and
ins
push
pop
mov
sub
cdq
push
push
push
mov
in
dec
int3
mov
add
jb
push
das
mov
repnz
mov
movups
xor
pop
dec
loope
outs
xor
mov
fwait
cs
mov
iret
inc
pop
(bad)
dec
rcl
or
sahf
add
movs
pop
int
inc
jnp
sub
hlt
push
mov
std
and
xchg
(bad)
mov
imul
inc
fadd
cmp
cmp
jnp
sub
ins
push
pop
mov
sub
sbb
jns
sub
pop
push
xchg
lods
ds
sbb
add
xor
js
repnz
scas
nop
dec
mov
sbb
lea
out
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
jl
lea
aad
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
daa
pop
push
repnz
push
fistp
cmp
or
and
xor
mov
lsl
xor
inc
push
repnz
mov
sysexit
lea
and
repnz
mov
lock
sub
cmp
xor
mov
push
sub
jne
sbb
inc
inc
fldl2e
dec
hlt
push
jne
stc
add
outs
pushf
sbb
mov
fistp
sbb
movs
xor
dec
push
repnz
mov
sysret
sahf
add
outs
pop
int
inc
pop
fld
dec
rcl
adc
data16
mov
int3
mov
lock
test
loop
lods
sbb
inc
jnp
sub
mov
and
mov
jo
iret
imul
xor
mov
or
cmp
out
xchg
mov
(bad)
sub
mov
jns
sbb
sub
pop
push
stos
mov
sbb
add
out
int
inc
pop
in
and
ds
dec
loope
mov
add
and
xor
xchg
mov
out
adc
adc
push
ins
and
xor
in
xchg
pop
mov
movups
xchg
and
xor
or
lea
and
xor
adc
lea
and
xor
ins
push
pop
mov
sub
xchg
or
pusha
mov
or
pop
mov
push
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
pop
mov
hlt
dec
mov
adc
cmp
cmp
jnp
sub
hlt
pop
inc
call
adc
repnz
mov
call
adc
cmp
pop
push
jecxz
push
fild
sbb
mov
out
xchg
pop
sub
stos
dec
fld
dec
hlt
dec
mov
movups
in
or
pop
push
mov
dec
cmps
call
or
fstp
lock
lea
and
fistp
or
xor
inc
push
repnz
mov
bndstx
xor
mov
fidivr
jmp
add
and
repnz
mov
ja
movs
xor
push
push
repnz
mov
(bad)
mov
and
push
repnz
mov
seta
xor
pop
push
repnz
xchg
stc
add
or
add
mov
fistp
sbb
movs
xor
dec
push
repnz
mov
femms
lea
and
repnz
xchg
jo
jecxz
and
xor
inc
dec
dec
ins
and
inc
mov
test
(bad)
fnstsw
dec
jnp
sub
hlt
pop
mov
add
push
cmps
fimul
inc
js
xor
jge
mov
pop
cmp
or
loop
pop
push
hlt
adc
push
mov
icebp
out
jb
sbb
sbb
call
adc
cmp
pop
push
loopne
push
fild
movups
adc
pop
push
jmp
imul
cs
lods
sbb
inc
jnp
sub
hlt
push
lea
cld
push
cmp
inc
jns
sub
dec
int3
and
dec
cdq
pop
push
cmp
inc
dec
sub
mov
(bad)
dec
hlt
pop
lea
sti
and
pop
rcl
mov
stc
sub
rol
adc
sbb
xor
xor
pop
push
cmc
xor
mov
lock
xchg
or
pushf
mov
dec
sbb
inc
imul
adc
popa
test
sbb
sub
cld
add
mov
out
xchg
pop
xor
scas
push
repnz
mov
push
adc
cmp
push
pop
retf
and
dec
and
jmp
add
xor
xor
stc
mov
jecxz
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
xchg
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
mov
xchg
adc
xor
pop
push
repnz
fidivr
sub
cli
out
xchg
mov
or
cdq
pop
mov
or
lea
das
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
pop
mov
and
lea
adc
push
repnz
mov
xchg
adc
cdq
mov
call
mov
repnz
push
cmp
dec
jmp
stos
enter
fnsave
sti
icebp
call
lahf
inc
mov
cli
push
popa
scas
sub
test
mov
or
lea
cs
push
repnz
mov
adc
push
xor
pop
push
repnz
out
push
dec
cld
sbb
jnp
add
push
sub
mov
jmp
mov
push
call
inc
pop
stc
sub
das
push
dec
stc
and
xchg
or
fwait
mov
sbb
jne
stc
and
xchg
or
mov
hlt
and
sub
lea
test
out
jb
adc
mov
repnz
mov
aaa
inc
jae
out
jne
sbb
dec
pop
jmp
outs
fwait
inc
imul
sbb
pushfw
add
cmp
test
cmp
sbb
sub
test
call
pusha
mov
stc
int
and
lea
xor
fs
repnz
stc
mov
mov
cmp
lea
aad
push
repnz
jecxz
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
jp
clc
aas
outs
add
lods
test
fsqrt
out
xchg
mov
repnz
fistp
adc
xor
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
sbb
pop
sub
stos
dec
loope
movs
ret
inc
mov
cs
jne
sbb
inc
dec
(bad)
dec
retf
xchg
dec
inc
mov
lds
sbb
inc
pop
fcos
dec
hlt
jne
jge
adc
les
inc
sbb
or
xor
push
mov
mov
xchg
pop
and
inc
dec
dec
jmp
inc
imul
movups
and
xor
test
pop
mov
movups
sub
xor
cdq
xchg
pop
mov
movups
inc
fbld
sub
push
cmp
or
sub
sbb
cdq
adc
cmps
fmul
ja
out
push
dec
jmp
lods
out
and
xchg
cs
(bad)
fbstp
ja
out
sbb
scas
enter
fmul
jle
sub
xchg
hlt
push
fistp
add
xchg
sbb
fisub
retf
pop
mov
nop
xor
dec
push
repnz
mov
scas
dec
sbb
push
popf
cs
mov
sbb
cwde
data16
push
lock
xchg
cs
mov
rol
pop
and
shl
aam
cli
out
jo
ret
ds
jnp
sub
movs
sahf
inc
movs
out
aaa
mov
scas
cmp
inc
pop
retf
and
pop
lods
test
adc
sbb
pop
jo
xor
pushf
push
pop
mov
daa
repz
add
xor
or
pusha
mov
dec
aas
and
dec
and
push
pop
xor
xor
stc
mov
jecxz
adc
xor
push
xacquire
mov
bound
lea
das
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
xchg
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
xchg
pop
push
repnz
mov
(bad)
adc
xor
jp
in
outs
scas
inc
imul
cli
out
xchg
mov
repnz
mov
add
lea
aaa
pop
push
repnz
mov
sub
push
xor
pop
push
repnz
pop
mov
cmp
lea
sbb
pop
rol
cmp
add
ja
jmp
mov
lods
out
and
xchg
sbb
or
shr
push
xchg
fdivr
ds
jnp
sub
hlt
jle
xchg
mov
or
xchg
or
jne
sbb
shl
(bad)
cli
pop
das
lods
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
and
fs
shl
jecxz
push
cmp
(bad)
dec
retf
inc
mov
cs
sbb
inc
pop
in
cs
out
push
dec
stc
and
xchg
cs
(bad)
fdivr
ja
in
cmp
mov
out
or
call
xor
push
lods
inc
sub
ss
dec
stos
jbe
fistp
sbb
sbb
or
mov
inc
nop
or
jnp
int
inc
pop
fld
inc
hlt
dec
mov
adc
cmp
ss
out
sbb
lods
inc
sub
out
xchg
cmps
xor
push
jmp
jmp
lea
cmp
ss
dec
mov
mov
mov
push
sbb
iret
fisub
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fidivr
sub
cli
out
xchg
mov
or
xchg
pop
mov
movups
cmp
pop
push
loopne
push
fild
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
pop
and
xor
adc
push
out
xchg
pop
sub
stos
dec
fld
dec
rcl
jecxz
cmps
in
push
js
xlat
ds
jnp
sub
hlt
popa
mov
cmp
add
jecxz
dec
jnp
sub
mov
and
pop
int3
adc
adc
push
pop
in
cmp
ja
mov
xchg
sub
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
movups
adc
pop
push
in
cmp
xor
dec
cld
adc
jnp
or
das
or
shl
repnz
cs
jne
sbb
inc
inc
fldpi
dec
aam
sahf
push
mov
cmp
jnp
cs
mov
jmp
sub
add
mov
(bad)
pusha
mov
dec
jnp
inc
imul
adc
inc
adc
xor
pop
push
repnz
mov
icebp
out
jb
xor
sub
cmp
mov
data16
lock
xchg
or
cdq
mov
in
and
push
imul
inc
iret
fisub
hlt
pop
adc
les
out
jne
cmp
push
pop
retf
and
jle
loopne
adc
sbb
pop
push
hlt
sbb
xchg
pop
mov
adc
mov
sub
aam
sahf
push
mov
out
jb
adc
ss
push
repnz
mov
push
adc
movs
xor
pop
push
xor
jp
pop
mov
movups
pop
and
xor
xchg
xchg
pop
mov
movups
repnz
xor
mov
movups
cmp
pop
push
xor
push
fist
pop
mov
movups
std
and
xor
movs
cwde
inc
mov
or
and
xor
mov
lar
xor
inc
push
repnz
mov
rdmsr
lea
and
repnz
mov
lock
cdq
cs
pop
ds
jnp
sub
mov
jmp
in
ds
jnp
sub
hlt
push
dec
cdq
xor
sbb
sbb
or
xchg
pop
mov
movups
and
pop
push
out
push
fild
movups
or
inc
hlt
dec
mov
adc
cmp
mov
jmp
jb
push
inc
push
or
push
(bad)
jne
clc
and
mov
jo
xchg
imul
xor
mov
or
aaa
sti
out
xchg
mov
sti
aas
dec
shr
lock
xchg
cs
scas
das
sub
outs
inc
inc
imul
sbb
fimul
test
mov
rdtsc
movs
pop
adc
ret
and
sub
int3
mov
movups
lods
and
xor
adc
lea
push
lods
and
xor
or
lea
adc
xor
pop
push
inc
xor
out
pop
mov
movups
and
push
fild
mov
sub
xchg
or
pusha
mov
or
pop
mov
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
inc
test
inc
cdq
adc
cmp
inc
(bad)
dec
rcl
out
push
sub
mov
jbe
and
cmc
imul
inc
adc
movs
xor
pop
push
repnz
push
fistp
adc
xor
test
cdq
push
push
cmp
sbb
ja
call
mov
aaa
push
jb
out
jb
shl
mov
xchg
jle
cdq
add
fisttp
ds
inc
test
je
mov
out
jb
adc
xor
or
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
repnz
fistp
adc
xor
pop
push
repnz
mov
sbb
lea
sbb
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
adc
lea
xor
push
repnz
mov
or
xchg
pop
sbb
mov
and
pop
imul
movups
cmp
pop
push
std
xor
scas
xchg
pop
mov
movups
sub
pop
push
shl
push
fistp
movups
add
pop
push
(bad)
xor
mov
lea
add
sub
mov
shr
(bad)
xchg
adc
cmp
xchg
je
mov
fmul
jge
out
ja
in
cmp
cmps
mov
(bad)
xchg
cs
outs
xor
pop
jbe
cmp
mov
mov
or
sbb
pushfw
stc
fbld
fistp
sbb
xor
dec
push
repnz
mov
(bad)
jge
xor
jp
repnz
test
mov
cmps
repz
jne
sar
jnp
cs
mov
adc
outs
sbb
inc
jnp
cs
in
and
mov
aaa
jl
cli
out
jbe
(bad)
cmp
jge
cmps
mov
or
loope
inc
inc
sub
sbb
lds
add
pop
int
push
dec
clc
cmp
mov
imul
mov
loope
and
xor
mov
pop
mov
add
xchg
sti
out
xchg
mov
fld
dec
aam
mov
fild
inc
push
sub
cmp
mov
inc
mov
cli
or
push
and
mov
clc
sub
aam
mov
add
out
jb
xor
mov
arpl
add
push
mov
in
push
fistp
add
push
adc
fisub
out
mov
sysexit
lea
xor
in
push
fisttp
xchg
pop
mov
movups
cli
and
xor
add
lea
and
xor
movs
xchg
pop
mov
movups
pop
and
xor
mov
pop
mov
movups
pop
and
xor
les
lea
sbb
ja
cli
jbe
fistp
sbb
add
and
repnz
mov
(bad)
jge
xor
jns
repnz
mov
femms
adc
push
cli
int
mov
shl
or
(bad)
aad
ja
in
ds
movs
mov
push
cdq
cs
jne
sbb
inc
pop
in
cmp
mov
pop
mov
lock
jb
push
ins
movs
xor
push
push
repnz
mov
lar
xor
inc
push
repnz
mov
lock
sar
jnp
sub
mov
and
xchg
or
gs
sbb
aad
inc
cdq
or
cmp
cmp
jnp
aaa
push
mov
loop
adc
sub
mov
inc
sti
add
adc
push
push
int3
fisub
aad
popf
push
lods
in
sbb
mov
out
xchg
pop
sub
lods
dec
clc
sub
shl
xchg
jb
adc
xor
pop
jo
xor
xchg
repz
mov
and
outs
loope
and
xor
adc
movups
xor
pop
push
cmp
push
(bad)
xchg
pop
mov
movups
pop
and
xor
and
(bad)
int3
adc
mov
pop
push
inc
xor
jne
pop
mov
movups
xor
jbe
jmp
inc
ficom
movups
and
xor
scas
xchg
pop
mov
movups
das
and
xor
mov
jnp
jb
or
scas
dec
fld
dec
rcl
out
cmps
loopne
jnp
sar
dec
jnp
jecxz
fidivr
sub
cli
out
xchg
mov
pop
adc
mov
pop
mov
movups
and
pop
push
in
push
fbld
sub
jb
push
inc
push
sub
sbb
lods
out
and
xchg
or
jns
or
mov
sub
loope
cmps
out
or
loop
pop
push
hlt
adc
pop
mov
icebp
out
jb
sub
pop
int
dec
pusha
icebp
xor
fnstsw
sub
ja
pop
push
bnd
pop
mov
xor
lea
jl
push
bnd
fistp
adc
xor
pop
push
repnz
mov
mov
imul
push
fistp
adc
xor
pop
push
repnz
mov
adc
lea
mov
pushf
push
fistp
adc
xor
push
fistp
adc
xor
fidivr
sub
cli
out
xchg
mov
or
test
jecxz
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
pop
retf
and
dec
cdq
adc
or
dec
sub
mov
in
mov
lods
clc
and
xchg
cs
jne
sbb
dec
jnp
sub
hlt
outs
mov
adc
inc
sbb
inc
arpl
adc
mov
ret
add
je
sub
int
and
aaa
mov
loope
and
xor
mov
pop
mov
movups
sub
pop
push
jmp
xchg
pop
mov
movups
sbb
pop
push
in
and
mov
jnp
add
ja
in
sub
mov
and
xchg
cs
jne
sbb
dec
jnp
sub
hlt
imul
xchg
pop
sub
aas
jge
mov
and
xchg
push
cmp
pop
fldz
dec
hlt
mov
cld
add
pop
aad
imul
dec
(bad)
mov
dec
dec
sbb
adc
std
ja
pop
push
repnz
fistp
adc
rcr
scas
in
cmp
sub
and
xchg
push
push
arpl
or
mov
or
sbb
out
push
arpl
dec
xchg
and
inc
cdq
adc
cmp
cmp
dec
sti
aas
outs
outs
inc
imul
sub
or
std
xor
pushf
loopne
mov
daa
sub
adc
loopne
mov
movhps
sub
into
test
and
lea
xor
dec
inc
mul
push
call
adc
jmp
pop
push
inc
xor
dec
xchg
pop
mov
movups
xor
pop
push
and
push
fild
pop
mov
movups
mul
pop
push
xor
push
fild
xchg
pop
mov
movups
dec
and
xor
fwait
xchg
pop
mov
movups
sub
int3
xlat
stc
lahf
pop
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
sbb
scas
or
popa
inc
mov
cs
jne
sbb
inc
pop
(bad)
dec
hlt
pop
mov
cmp
cmovno
sub
in
cmp
cmps
sahf
inc
mov
sub
xchg
pop
xor
pop
push
repnz
mov
sidtd
xor
inc
push
repnz
mov
aaa
adc
out
jne
sbb
inc
pop
fld
dec
rcl
out
cmps
jecxz
inc
inc
sub
inc
inc
test
and
inc
cdq
pop
adc
jl
cmp
sbb
pop
sar
ja
enter
movs
cmp
pop
push
in
es
fild
cmp
sbb
and
test
mov
add
icebp
pop
int
dec
jnp
sub
(bad)
dec
mov
sub
cli
adc
adc
push
repnz
mov
movhps
aaa
fs
push
repnz
fistp
mov
movs
xor
pop
push
repnz
fistp
mov
add
and
push
repnz
fistp
scas
lea
and
push
repnz
fistp
rol
ins
sbb
push
inc
loope
jge
mov
push
mov
nop
xor
dec
push
repnz
mov
invd
lea
and
repnz
mov
lock
sub
rol
sbb
jge
cmps
mov
or
loop
pop
push
hlt
adc
sbb
add
and
xor
mov
movups
add
mov
sub
and
xchg
or
cmp
and
fiadd
cmp
cmp
jnp
sub
ins
pop
pop
mov
sub
adc
outs
pushf
(bad)
scas
fmul
xor
inc
imul
movsx
xor
inc
inc
mul
push
call
adc
lock
xor
jae
pop
mov
movups
xor
xor
or
push
adc
lea
pop
push
cmp
push
fbstp
mov
push
adc
enter
out
push
fist
pop
mov
movups
cmp
pop
push
out
aas
dec
int3
mov
add
lea
sub
push
fistp
adc
xor
push
repnz
mov
daa
adc
xor
dec
push
retf
and
dec
cdq
push
sbb
jg
cmp
dec
(bad)
dec
aad
jo
cdq
add
push
cmps
fmul
jl
jmp
ja
in
and
cmps
sahf
inc
mov
sub
xchg
pop
xor
pop
push
repnz
mov
str
xor
dec
push
repnz
mov
or
(bad)
cli
out
xchg
mov
(bad)
sbb
cdq
or
pop
cmps
loop
addr16
sar
push
pop
out
and
pop
push
dec
clc
and
xchg
cs
(bad)
fdivr
ja
in
sbb
mov
popa
dec
das
movs
xor
pop
pop
repnz
scas
xchg
push
icebp
out
jb
add
sub
aaa
outs
jns
imul
sbb
ja
ss
scas
or
(bad)
push
lods
neg
pop
sub
sub
inc
imul
fisttp
xor
pop
js
xor
xchg
or
or
adc
xor
pop
push
repnz
mov
movups
add
and
xor
mov
movups
and
xor
mov
movups
add
and
xor
mov
push
adc
das
xor
push
cmp
fdivr
adc
xor
pop
inc
repnz
mov
movups
and
sub
mov
push
xchg
push
sbb
inc
jnp
sub
movs
mov
adc
or
scas
or
lahf
dec
mov
dec
out
jb
push
das
mov
repnz
mov
movups
xor
pop
dec
loop
push
out
imul
sbb
inc
push
sub
mov
jecxz
mov
stos
out
adc
mov
cmp
cmps
(bad)
xchg
jp
cdq
or
cmp
fisubr
xor
jbe
mov
xchg
dec
and
add
xor
xlat
repnz
stc
mov
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
pop
push
repnz
mov
add
lea
xor
push
fistp
adc
xor
push
repnz
mov
or
xchg
or
adc
fiadd
retf
and
sbb
add
and
xor
mov
movups
xor
pop
jno
xor
mov
movups
xor
pop
repnz
cmps
cwde
data16
xchg
pop
cmp
(bad)
dec
aam
jg
cdq
or
add
loope
inc
inc
sub
sub
mov
add
pop
sbb
inc
imul
mov
mov
jmp
inc
dec
mov
inc
imul
movups
cmp
pop
push
push
push
fild
movups
and
xor
mov
lock
xchg
cs
pop
ds
jnp
sub
mov
push
cmp
add
sub
cmp
stos
cwde
data16
cmp
pop
(bad)
dec
hlt
push
(bad)
jne
std
and
xchg
or
mov
sbb
mov
mov
icebp
out
jb
sbb
sbb
scas
or
mov
fistp
jb
adc
sbb
xor
mov
add
mov
out
xchg
mov
stc
sub
rol
sbb
cmp
inc
inc
dec
dec
and
inc
cdq
adc
jne
sbb
or
mov
call
pusha
mov
dec
mov
and
inc
pop
xor
xor
stc
mov
mov
dec
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
add
lea
cmp
repnz
mov
test
lea
das
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
lea
xor
data16
out
xchg
nop
int
mov
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
adc
jge
les
ja
in
cmps
leave
xchg
jns
mov
cs
jge
sar
dec
jnp
sub
hlt
mov
adc
(bad)
cld
ds
jnp
das
jge
movs
mov
adc
sub
test
mov
cli
pop
das
lods
xor
pop
push
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
ds
scas
or
bound
enter
push
sbb
inc
inc
(bad)
dec
aam
jbe
scas
enter
cs
ja
in
push
dec
jmp
scas
enter
hlt
or
or
hlt
pop
mov
stc
and
xchg
or
mov
jecxz
pop
push
aam
pop
rol
sbb
sbb
or
mov
or
push
xor
pop
push
repnz
cmps
push
dec
std
and
xchg
sbb
cdq
mov
ds
pop
retf
and
jne
cld
add
jge
sbb
cmp
inc
pop
retf
and
jne
std
and
xchg
femms
scas
sub
into
test
mov
rdtsc
addr16
and
xor
mov
or
push
pop
in
aas
pop
shl
lea
and
repnz
mov
movups
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
popa
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
in
lea
sbb
push
fistp
adc
xor
push
repnz
fistp
ret
mov
sbb
scas
or
lods
sub
lock
enter
movs
xor
xor
mov
pop
mov
movups
sub
pop
push
out
xor
popf
xchg
pop
mov
movups
sbb
pop
push
fnsave
push
fisttp
add
mov
sub
stos
dec
fld
dec
hlt
dec
mov
movups
cmps
in
push
jnp
(bad)
ds
jnp
cs
cmps
mov
(bad)
xchg
or
mov
dec
fprem
xchg
stc
add
xchg
sub
pop
stc
sub
rol
push
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
add
xor
out
xchg
mov
fld
dec
hlt
dec
mov
movlps
sbb
inc
inc
sub
cmp
cmps
lahf
inc
mov
cli
out
jb
(bad)
cmp
in
cmp
mov
call
inc
inc
sub
loope
fistp
add
xchg
push
sbb
mov
mov
jecxz
sbb
sbb
hlt
dec
lea
call
out
xchg
mov
aad
pop
in
aas
pop
shl
out
fwait
cs
scas
sub
int
and
add
xchg
sti
out
xchg
cmps
adc
pop
push
repnz
mov
movhps
cmp
push
pop
retf
and
dec
and
add
movs
xor
fs
xor
stc
mov
jecxz
adc
xor
push
repnz
pop
mov
push
adc
xor
push
repnz
mov
and
lea
test
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
arpl
lea
fistp
mov
lea
pop
sbb
mov
scas
inc
imul
add
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
dec
mov
cli
push
fs
ds
jnp
sub
hlt
push
mov
or
cmp
or
and
sbb
lods
jmp
cmp
dec
stc
sbb
mov
adc
xchg
sbb
fisub
(bad)
mov
mov
enter
movs
xor
xor
mov
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
add
cmp
out
xchg
mov
out
movs
les
in
lahf
div
sbb
inc
inc
fldlg2
dec
hlt
pusha
mov
sti
add
add
out
xchg
mov
aad
pop
fld
dec
hlt
push
mov
cli
and
xchg
or
mov
das
jecxz
fidivr
je
cli
out
jge
sub
inc
dec
dec
mov
imul
adc
inc
adc
xor
pop
push
repnz
jmp
dec
(bad)
and
xchg
or
jne
sbb
or
addr16
mov
and
xchg
pop
sub
inc
dec
dec
dec
and
inc
cdq
or
sbb
or
mov
out
mov
push
adc
xor
dec
pop
call
lods
scas
dec
sbb
add
xor
js
repnz
mov
movups
dec
and
xor
jo
pop
mov
movups
pop
and
xor
mov
push
adc
lock
xor
mov
pop
mov
movups
cmp
pop
push
push
xor
jo
pop
mov
movups
sti
and
xor
cmps
cwde
inc
mov
or
and
xor
mov
lar
xor
inc
push
repnz
mov
getsec
lea
and
repnz
mov
lock
cmps
repz
gs
ds
jnp
sub
hlt
push
mov
cld
sbb
outs
sbb
inc
jnp
sub
out
sbb
lods
mul
xchg
sysret
mov
pop
push
mov
prefetcht0
xor
dec
push
repnz
mov
(bad)
lea
and
test
mov
jmp
jnp
sub
stos
cwde
inc
mov
sti
out
xchg
mov
(bad)
dec
hlt
push
xor
push
cmp
cmp
xor
add
call
adc
sbb
scas
in
and
mov
sbb
mov
out
xchg
pop
sub
scas
dec
clc
sub
int3
mov
lock
sbb
test
jge
movs
sahf
dec
mov
cmp
and
idiv
pop
xchg
leave
or
lea
or
(bad)
scas
xchg
dec
mov
sbb
push
xor
push
fistp
adc
xor
pop
push
xacquire
mov
mov
push
xor
push
repnz
fistp
adc
xor
push
fistp
aaa
cmps
sbb
jne
and
repnz
jbe
fistp
sbb
movs
xor
dec
push
repnz
mov
rdtsc
lea
and
loope
outs
lods
inc
imul
cs
mov
iret
inc
pop
(bad)
dec
rcl
in
push
sub
jb
jmp
xor
inc
mov
cli
out
ins
loope
and
xor
mov
pop
mov
movups
and
pop
push
in
cmp
test
cmp
cmp
dec
(bad)
inc
hlt
push
adc
sbb
mov
out
xchg
pop
sub
scas
dec
fld
inc
hlt
push
mov
cmc
and
pop
rcl
push
adc
push
dec
(bad)
and
pop
push
dec
leave
aaa
sub
out
jns
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
add
lea
jae
push
repnz
mov
outs
adc
xor
push
repnz
mov
ffreep
mov
sub
test
(bad)
sbb
out
mov
push
xor
pop
push
repnz
mov
sbb
push
xor
pop
push
repnz
pop
mov
sub
lea
or
push
fistp
sbb
pop
sub
stos
dec
out
movs
shl
cli
xchg
adc
lea
in
mov
xchg
dec
inc
mov
ror
data16
jecxz
ja
in
sbb
mov
adc
xchg
or
lahf
pop
int
inc
pop
jmp
outs
xor
mov
lea
sub
push
fistp
adc
xor
pop
push
repnz
mov
mov
jb
push
pusha
pop
ds
jnp
sub
hlt
push
xor
sbb
push
sbb
sub
sub
mov
cdq
out
jb
push
pusha
pop
ds
jnp
sub
mov
call
inc
inc
sub
add
mov
add
cmp
sub
call
adc
int3
fisub
aam
lea
movs
icebp
out
jb
cmp
pop
jmp
outs
out
imul
sbb
popa
mov
or
xchg
pop
mov
push
adc
xor
jbe
clc
and
out
push
dec
cld
push
sbb
fimul
lock
mov
push
sub
add
cmp
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
mov
outs
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
mov
or
lea
stos
pop
push
repnz
fistp
adc
xor
jp
out
outs
mov
repnz
stc
cli
out
xchg
mov
repnz
mov
add
lea
ss
push
repnz
mov
sub
lea
or
sbb
fistp
adc
or
mov
hlt
dec
(bad)
jne
cld
push
cmp
add
ja
in
sub
mov
add
push
sbb
inc
jae
cs
call
mov
fstp
adc
adc
push
dec
loopne
outs
das
inc
imul
cmp
daa
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
ds
scas
or
bound
adc
cmp
cmp
dec
jmp
mov
mov
mov
xchg
add
mov
sbb
mov
out
or
sub
mov
(bad)
xchg
dec
mov
pop
stos
sbb
jne
cmp
dec
pop
retf
and
pop
sar
and
enter
movs
cmp
pop
push
in
ds
out
push
dec
jmp
xchg
bndldx
sbb
hlt
dec
mov
add
mov
cmp
inc
inc
dec
jg
inc
imul
push
sbb
sbb
or
xchg
pop
xchg
cmp
jecxz
movs
xor
inc
pop
in
cmp
scas
cwde
dec
push
lock
lea
and
push
repnz
mov
or
mov
push
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
push
fistp
add
cmp
pop
push
sti
xor
mov
pop
mov
movups
and
xor
mov
movups
sbb
pop
push
in
es
fild
cmp
cmp
dec
clc
sbb
mov
in
addr16
out
cmp
jge
movs
sahf
inc
mov
cmp
daa
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
or
xchg
out
xchg
mov
fld
dec
hlt
push
mov
or
sbb
inc
inc
das
sub
outs
xor
imul
cmc
or
dec
sub
mov
(bad)
dec
hlt
pop
xchg
pop
sar
sub
add
push
cmp
pop
push
in
and
jle
mov
js
sbb
fs
int3
test
mov
push
adc
mov
aad
sahf
dec
mov
call
and
pop
push
mov
movups
sbb
push
hlt
sbb
scas
xchg
dec
mov
sbb
push
xor
push
fistp
adc
xor
repnz
pop
mov
push
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
aaa
cmps
sbb
mov
or
pop
mov
push
fistp
adc
xor
push
repnz
mov
das
adc
aaa
sbb
or
popa
inc
mov
cs
jne
sbb
inc
pop
(bad)
dec
hlt
pop
mov
ffreep
mov
sub
test
pop
mul
movups
and
xor
scas
xchg
pop
mov
movups
sbb
mov
sub
and
xchg
adc
(bad)
dec
pop
out
and
mov
mov
fwait
cs
(bad)
fdiv
ja
jmp
mov
mov
adc
sahf
add
call
into
test
and
sbb
add
xor
xor
stc
mov
jecxz
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
mov
sti
adc
xor
pop
push
repnz
mov
cdq
adc
xor
push
repnz
pop
mov
movups
xor
pop
push
repnz
push
fistp
aaa
xchg
adc
mov
scas
inc
imul
add
sub
cmp
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
lock
jb
add
sub
sbb
lods
enter
loopne
jle
sar
push
jnp
and
jne
cld
sbb
pop
sbb
inc
push
sub
and
push
fistp
add
jge
out
xchg
mov
adc
rcl
jecxz
sbb
xor
push
push
repnz
mov
ud2
lea
and
repnz
mov
out
sbb
or
sar
jnp
sub
hlt
push
mov
cld
pop
cmp
add
sub
cmp
test
mov
js
cmp
pop
(bad)
dec
hlt
push
mov
pop
adc
mov
jmp
shl
out
jb
adc
lds
xor
mov
pop
mov
add
pop
sub
stos
dec
stc
and
out
push
dec
hlt
and
xchg
femms
pusha
test
pop
mov
aam
cwde
data16
sbb
sti
jbe
sub
test
mov
cli
adc
popa
and
adc
fistp
cmp
and
int3
test
and
cld
pop
xor
loope
inc
(bad)
sbb
jns
lea
lahf
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
not
lea
adc
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
test
pop
cdq
jbe
push
xchg
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
dec
loope
outs
test
mov
cmps
test
push
sub
mov
(bad)
dec
rcl
in
push
fwait
cs
jne
sbb
inc
inc
fxam
dec
(bad)
xchg
inc
inc
mov
push
adc
mov
fistp
adc
xor
pop
push
repnz
fistp
add
add
push
int
dec
jnp
sub
mov
loop
sahf
cs
jno
aam
push
dec
out
push
out
push
dec
clc
and
nop
cs
(bad)
fbstp
ja
in
cmp
cmps
mov
jo
pop
dec
das
cmps
xor
pop
pop
repnz
mov
or
ds
out
xchg
mov
(bad)
sub
int3
mov
lock
xchg
jecxz
scas
sub
cmps
test
inc
mov
neg
pop
sub
mov
clc
sub
test
pop
mov
adc
jo
pop
push
sar
fistp
cmp
aaa
fs
push
repnz
fistp
fimul
xor
(bad)
push
repnz
fistp
lods
lea
and
fistp
ret
adc
movs
xor
adc
pop
fistp
scas
lea
and
xor
xchg
leave
adc
xchg
or
outs
(bad)
pop
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
and
outs
mov
imul
or
fwait
mov
(bad)
dec
hlt
pop
xor
add
ins
push
cmp
sub
push
fstp
xor
jno
xor
xor
mov
sidtd
xor
inc
push
repnz
mov
or
popf
cli
out
xchg
mov
fld
dec
into
xchg
jp
mov
loop
inc
inc
sub
pop
loope
outs
das
inc
imul
cmc
cmovno
or
hlt
pop
inc
xchg
or
gs
sbb
fnstsw
movups
sbb
pop
push
hlt
sbb
inc
imul
add
sahf
movs
xor
dec
push
repnz
mov
inc
mov
emms
mov
and
push
repnz
mov
seto
xor
pop
push
repnz
mov
cmovnp
and
fidivr
adc
xor
bound
xor
mov
pcmpgtw
and
fistp
push
mov
and
cmps
cwde
jne
sti
add
lock
out
xchg
mov
repnz
fistp
adc
xor
pop
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
adc
push
fisub
sub
(bad)
xchg
or
cmp
xchg
je
mov
fmul
jb
out
dec
jnp
and
xchg
bound
push
adc
and
int3
test
movs
out
aaa
jecxz
cli
out
ins
loope
and
xor
mov
pop
mov
movups
and
xor
mov
movups
neg
mov
sub
and
xchg
push
cmp
inc
(bad)
dec
hlt
pop
mov
cld
add
xchg
adc
mov
leave
xchg
fs
mov
cs
jne
sbb
dec
jnp
sub
hlt
popa
mov
cmp
retf
mov
cmp
in
outs
mov
imul
sbb
loope
and
xor
mov
icebp
out
jb
sbb
push
das
sub
dec
adc
inc
imul
sbb
or
mov
sub
cld
sbb
pop
xor
pop
push
in
dec
dec
test
or
sbb
or
xchg
pop
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
mov
add
lea
jo
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
xchg
xor
and
lock
xchg
or
pop
pop
int
pop
adc
mov
movups
and
pop
push
in
push
fbld
movups
pop
and
xor
xchg
xchg
pop
mov
movups
sub
test
lods
repz
fwait
cs
jne
sbb
inc
dec
(bad)
dec
retf
dec
cdq
add
add
sub
mov
sbb
cmc
and
pop
ficom
push
adc
push
dec
sti
aas
outs
sub
mov
cmp
xor
mov
movups
xor
pop
inc
repnz
mov
movups
sbb
scas
or
bound
enter
push
fnstcw
push
jnp
and
cmp
add
push
sbb
les
test
cdq
adc
cmp
cmp
pop
(bad)
dec
hlt
pop
lea
xor
adc
sbb
scas
or
lahf
inc
mov
cli
out
outs
cmps
push
bound
mov
push
fistp
add
int
push
jnp
sub
data16
in
scas
and
inc
pop
dec
jnp
inc
imul
sbb
or
mov
push
mov
movups
xor
inc
pop
in
dec
(bad)
mov
pop
dec
sbb
add
xor
dec
push
repnz
mov
adc
lea
fstp
int3
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
bnd
fistp
adc
xor
push
fistp
aaa
nop
or
pop
pop
int
inc
dec
dec
and
inc
imul
movups
cmp
pop
push
cld
xor
scas
xchg
pop
mov
movups
das
and
xor
cwde
xchg
pop
mov
movups
add
pop
push
shl
fbld
lock
jb
cmp
inc
fld
dec
hlt
push
mov
adc
cmps
loopne
inc
inc
sub
sub
mov
push
cmp
cmp
sub
push
fstp
add
jns
out
xchg
mov
dec
mov
imul
movups
and
xor
test
pop
mov
movups
sub
pop
push
shl
push
fbld
icebp
out
jb
add
push
sub
cmp
xor
push
xchg
cs
jne
sbb
inc
jnp
sub
scas
cwde
es
xchg
cs
pop
cmp
jmp
jl
mov
in
data16
out
icebp
adc
jo
mov
xor
or
and
test
in
mov
adc
xor
inc
inc
dec
pop
and
inc
cdq
adc
sbb
int3
fisub
aad
popf
push
lods
icebp
add
mov
sbb
inc
pop
in
cmp
scas
cwde
data16
sbb
in
push
xor
lods
push
repnz
mov
add
js
or
mov
out
mov
sysexit
lea
xor
in
push
fbstp
adc
pop
and
xor
mov
movups
pop
and
xor
or
lea
and
xor
mov
pop
mov
movups
mul
pop
push
add
push
fild
pop
mov
movups
and
pop
fistp
sbb
movs
xor
dec
push
repnz
mov
prefetchw
xor
jg
repnz
mov
aaa
jb
cli
out
jne
sbb
inc
jnp
sub
hlt
push
mov
cmc
and
xchg
cs
je
sar
dec
jnp
sub
hlt
mov
xor
push
gs
sbb
or
xchg
pop
mov
movups
and
pop
push
out
push
fbld
adc
or
pop
hlt
dec
mov
adc
sbb
or
shl
cli
jae
out
je
shl
mov
xchg
jle
cdq
add
cmp
adc
mov
repnz
mov
sbb
mov
out
xchg
pop
sub
stos
dec
sti
aas
dec
shr
lock
xchg
cs
scas
sub
xchg
test
inc
mov
in
sbb
mov
out
xchg
pop
and
das
pop
shl
out
jb
xor
xor
jl
repz
push
xchg
pop
mov
pop
add
xor
pop
or
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
push
adc
das
xor
push
cmp
xlat
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
dec
loope
outs
cmps
inc
imul
cs
(bad)
fnstsw
ja
in
aas
jge
stos
mov
or
xor
jp
in
push
call
adc
and
pop
push
out
push
fbld
add
int
dec
jnp
sub
hlt
dec
mov
cld
push
cmp
sbb
and
or
inc
imul
sbb
jl
cmp
sbb
mov
mov
adc
mov
or
int3
test
and
xchg
xor
dec
inc
mul
push
call
adc
ret
push
xor
push
fild
pop
mov
movups
mov
pop
push
xchg
xor
or
(bad)
lds
push
cmp
pop
push
inc
xor
push
xchg
pop
mov
movups
icebp
and
xor
jp
pop
mov
push
adc
and
pop
fistp
sbb
xor
dec
push
repnz
mov
prefetchw
xor
js
repnz
mov
aaa
jbe
cli
out
je
les
ja
out
sbb
scas
enter
cs
jne
sbb
inc
inc
fldz
dec
hlt
data16
sti
add
jns
or
mov
fnstcw
adc
xor
pop
inc
repnz
mov
movups
and
mov
sub
and
xchg
cs
jne
sbb
inc
jnp
cs
shl
out
jb
cmp
jnp
sub
movs
mov
adc
fs
adc
ja
pop
push
repnz
mov
(bad)
out
jb
push
fs
aas
push
dec
(bad)
and
add
push
cmp
sbb
sub
fwait
test
inc
lea
sti
add
jns
or
push
rcr
pop
cmps
sbb
sbb
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
xor
pop
or
xor
mov
movups
push
in
and
sbb
cmps
xchg
inc
push
push
test
and
xor
mov
movups
xor
pop
dec
repnz
mov
sbb
mov
out
xchg
pop
and
sbb
enter
div
sbb
inc
pop
fldlg2
dec
hlt
pusha
inc
xor
sbb
aaa
sbb
scas
or
xchg
pop
mov
movups
cmp
pop
push
loopne
push
fild
sbb
mov
out
xchg
pop
sub
stos
dec
fld
dec
aam
jnp
mov
div
sub
pop
push
movs
mov
or
sub
mov
sub
push
fstp
or
fs
out
xchg
mov
dec
mov
out
mov
str
cmp
repnz
fistp
(bad)
lea
and
repnz
mov
pminsw
xor
push
push
repnz
mov
pcmpeqw
and
fidivr
adc
and
push
repnz
fistp
mov
adc
xor
pop
push
repnz
mov
xadd
adc
sub
pop
out
imul
add
and
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
repnz
mov
xor
jb
push
fs
aaa
ja
jmp
lods
jmp
scas
sbb
inc
jnp
sub
hlt
mov
xor
push
arpl
cmp
mov
mov
add
call
inc
pop
in
and
out
push
dec
in
sbb
xor
push
push
repnz
mov
clts
lea
and
repnz
xchg
inc
mov
cli
out
jne
sbb
inc
inc
fld
dec
hlt
push
mov
adc
loop
inc
inc
sub
sbb
movs
out
aaa
mov
out
jne
sbb
inc
jnp
sub
cmps
mov
push
xchg
bnd
sbb
inc
jnp
jecxz
fidivr
sbb
int3
fisub
mov
jecxz
sbb
sbb
scas
or
bound
cld
sbb
pop
das
or
shr
out
xchg
cs
scas
sub
inc
inc
dec
jl
inc
imul
adc
xor
je
repz
movs
sahf
inc
mov
or
xchg
pop
xor
dec
pusha
icebp
xor
fnstsw
setle
add
daa
and
xor
dec
xchg
pop
mov
movups
mul
pop
push
inc
xor
mov
movups
int3
and
xor
jns
pop
mov
movups
int3
and
xor
pop
xchg
pop
mov
movups
xor
pop
push
dec
xor
movs
cwde
inc
mov
inc
sbb
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
sub
lea
cmp
push
retf
and
push
cdq
push
sbb
jg
cmp
dec
clc
sbb
movs
enter
cs
scas
sbb
inc
jnp
sub
lea
(bad)
out
jb
pop
das
mov
repnz
mov
movups
xor
pop
dec
repnz
lods
xchg
repnz
jb
cmp
jecxz
mov
lods
out
and
xchg
push
cmp
inc
test
and
inc
cdq
pop
adc
jl
cmp
sbb
hlt
pop
nop
pop
sar
inc
dec
enter
movs
cmp
pop
push
in
and
test
dec
sbb
sbb
lock
mov
fs
int3
test
mov
add
int
int
dec
jnp
sub
lea
fist
jne
sub
xor
cmps
xchg
out
add
xor
in
repnz
mov
bsr
xor
xor
fistp
push
lea
and
push
repnz
mov
paddusb
xor
nop
push
repnz
fistp
pop
stos
das
or
cmp
cmp
xlat
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
dec
(bad)
and
iret
imul
sbb
inc
push
sub
cmp
mov
sub
jbe
out
icebp
mov
ret
scas
xchg
data16
sbb
out
cmps
adc
ins
loope
and
xor
mov
pop
mov
movups
and
and
lahf
imul
push
cmp
dec
call
mov
test
add
outs
pop
int
inc
jnp
sub
stos
mov
or
xor
jp
jmp
int3
mov
lock
xor
dec
pusha
icebp
xor
mov
push
sub
add
cmp
jo
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
fcomip
mov
sub
outs
mov
cmps
add
lea
sub
cmp
pop
mov
sbb
lea
cmp
push
fistp
adc
xor
pop
push
repnz
push
fistp
out
jb
or
or
lds
out
cmps
jecxz
addr16
sar
dec
jnp
sub
hlt
mov
xor
push
gs
cld
ds
jnp
jecxz
fidivr
or
int
push
dec
jmp
outs
das
inc
imul
add
sub
cmp
pop
mov
sbb
lea
cmp
sub
fistp
out
jb
sbb
sub
scas
dec
fld
dec
retf
xchg
js
cdq
or
cmp
sbb
sub
cmp
movs
cwde
cs
xchg
cs
scas
sbb
inc
jnp
cs
mov
jmp
xchg
icebp
je
out
icebp
mov
leave
mov
push
lods
cli
add
std
sti
out
xchg
mov
stos
jbe
fistp
push
pushf
or
xor
fimul
add
lea
test
out
jb
sbb
inc
pop
in
sub
xchg
dec
(bad)
and
fwait
invd
popa
mov
or
test
mov
das
jae
add
and
in
dec
aam
lea
in
icebp
out
jb
adc
xor
adc
jb
mov
push
adc
movs
sbb
pop
push
call
mov
movups
(bad)
and
xor
mov
movups
lock
xor
ins
xchg
pop
mov
movups
and
pop
push
inc
xor
inc
xchg
pop
mov
push
adc
hlt
and
xor
mov
or
adc
push
popa
movs
xor
push
push
repnz
mov
str
xor
inc
push
repnz
mov
sysexit
lea
and
repnz
mov
lock
or
scas
mov
push
sahf
cs
sbb
dec
jnp
sub
hlt
push
jne
sti
add
jns
or
adc
mov
movups
xor
pop
inc
repnz
mov
movups
aaa
fisub
sub
sbb
pusha
sbb
dec
sub
mov
les
aaa
bnd
out
jne
sbb
inc
pop
(bad)
dec
hlt
push
(bad)
jne
cld
add
mov
stos
jbe
fistp
xchg
mov
and
test
stos
out
adc
add
leave
pop
int
inc
jnp
and
push
mov
cli
out
jge
ret
cmp
(bad)
sub
int3
mov
lock
adc
pop
push
repnz
fistp
adc
add
xor
xchg
push
repnz
mov
punpcklbw
xor
cmp
xor
mov
paddb
xor
pop
push
repnz
fistp
ror
xor
repz
repnz
mov
(bad)
lea
and
xchg
mov
in
sbb
cmps
lahf
sbb
lods
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
and
pop
push
movs
mov
push
lahf
cs
jge
fidivr
dec
jnp
and
mov
sahf
cs
xor
pop
jbe
sub
scas
xchg
data16
out
mov
push
xor
pop
push
repnz
mov
sbb
lea
cmp
sub
test
cmp
sbb
ja
in
ds
mov
and
xchg
or
fs
sbb
hlt
dec
lea
std
and
xchg
cs
je
aad
ja
and
push
fistp
add
mov
or
sub
and
jecxz
xchg
adc
mov
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
mov
lock
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
pop
mov
pop
adc
xor
mov
shr
out
xchg
pop
sbb
mov
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cmp
push
xor
inc
pop
retf
and
dec
cdq
adc
push
js
fdivr
push
jnp
sub
hlt
pop
mov
cld
add
inc
jg
cmp
in
and
mov
(bad)
je
and
sub
mov
scas
dec
sbb
push
test
or
aad
mov
fistp
sbb
xor
dec
push
repnz
mov
prefetchw
xor
inc
pop
retf
and
jne
cld
sbb
jle
cmp
dec
jmp
mov
cdq
add
push
cmps
fild
popa
mov
or
pusha
inc
cdq
adc
cmp
sbb
or
les
fcomip
mov
cmp
dec
aas
and
pop
mov
adc
inc
adc
xor
pop
push
repnz
rol
cmp
sbb
or
scas
or
sahf
inc
mov
sti
out
xchg
mov
out
aas
outs
repz
imul
es
xchg
pop
xor
jl
lock
push
pop
mov
dec
adc
sub
inc
pop
retf
and
dec
and
or
movs
xor
ja
cmc
jbe
fistp
lahf
lea
and
push
repnz
xchg
(bad)
mov
cmovl
xor
xor
xor
fistp
mov
movs
xor
out
repnz
mov
movhps
sub
ja
hlt
jbe
fistp
sbb
xor
dec
push
repnz
mov
ud2
lea
and
repnz
test
mov
jp
sbb
and
lods
dec
(bad)
dec
hlt
push
lea
cld
add
outs
sbb
jnp
or
fstp
add
fdivr
out
xchg
stos
ss
dec
stos
push
fnstsw
adc
cmp
push
or
mov
cli
add
dec
pop
int
dec
jnp
cs
stos
sahf
inc
mov
cli
out
push
push
repnz
mov
or
imul
mov
movhps
cmp
mov
out
mov
sysenter
lea
fs
push
repnz
fistp
ins
lea
and
push
repnz
fistp
sbb
xor
push
push
repnz
mov
lgs
xor
pop
jbe
cmp
mov
or
adc
xor
pop
push
repnz
mov
movups
and
xor
mov
and
xchg
cs
test
xlat
inc
jnp
sub
mov
and
fwait
div
shl
mov
lds
ins
out
jb
adc
add
fistp
add
sar
xchg
mov
in
cmp
cld
imul
femms
arpl
or
xchg
pop
xchg
aad
adc
xor
inc
pop
in
cmp
movs
imul
add
test
and
mov
bndstx
xor
push
push
repnz
mov
sets
xor
add
xor
fistp
inc
lea
and
push
repnz
xchg
cmc
add
xor
sbb
xor
push
push
repnz
mov
nop
xor
dec
push
repnz
mov
(bad)
jge
cmp
ror
sbb
lods
call
push
sbb
inc
jnp
and
cmp
jmp
jae
sub
xor
call
add
push
xor
cmp
inc
imul
sbb
fisub
aad
lahf
sbb
pop
adc
pop
push
shl
fistp
cmp
fisub
out
mov
sysenter
lea
fs
push
repnz
fistp
adc
xor
hlt
push
repnz
fistp
xchg
xor
or
xor
fistp
fwait
lea
and
jmp
jge
mov
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
add
add
cmp
jnp
sub
hlt
dec
mov
movups
cmps
in
push
pusha
(bad)
(bad)
cmp
mov
aam
fistp
add
mov
out
xchg
pop
and
fidivr
adc
int
inc
pop
fld
inc
aad
lahf
push
mov
lock
jb
cmp
pop
retf
and
jle
jecxz
adc
sbb
push
hlt
sbb
mov
lock
jb
adc
xor
mov
fistp
sbb
add
and
push
repnz
mov
(bad)
lea
and
repnz
fistp
adc
xor
aam
repnz
fistp
pop
stos
sbb
inc
sbb
sub
hlt
jbe
fistp
sbb
xor
dec
push
repnz
mov
ud2
lea
and
fnstcw
inc
mov
cs
test
int3
inc
jnp
and
mov
gs
ins
sub
inc
pop
retf
and
pop
sar
push
dec
enter
movs
xor
cmp
inc
imul
sbb
push
in
fisub
aad
lahf
xchg
out
(bad)
and
add
mov
inc
xchg
pop
int
dec
pusha
icebp
xor
mov
push
cmp
add
xor
pop
push
repnz
fistp
xchg
lea
and
push
repnz
mov
cmpxchg
xor
fcom
xor
fistp
shl
sub
ja
in
cmp
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
shl
repnz
das
or
hlt
push
mov
add
cmp
clc
imul
outs
mov
loopne
push
stc
pop
push
imul
dec
aam
(bad)
cmps
repz
cmp
push
scas
or
mov
aaa
daa
jb
out
push
push
rol
fistp
cmp
fisub
out
mov
rdpmc
lea
fs
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
push
repnz
fistp
cmp
push
ins
movs
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
xchg
xor
sbb
cmp
cmp
pop
(bad)
dec
hlt
push
call
inc
adc
xor
pop
push
repnz
out
imul
adc
jo
or
scas
or
sahf
inc
mov
cli
adc
adc
pop
push
repnz
mov
movhps
cmp
pop
push
cmc
xor
mov
movups
xor
pop
push
les
push
fisttp
movups
xor
jbe
stc
xor
fidivr
adc
xor
pop
pop
repnz
mov
and
xchg
cs
pop
cmp
jmp
pop
loop
pop
stos
sbb
sbb
mov
rdpmc
lea
fs
push
repnz
fistp
sub
xor
cmp
repnz
xchg
or
jecxz
adc
xor
push
push
repnz
stos
cwde
jne
in
pop
lea
and
repnz
xchg
push
mov
sidtd
xor
inc
pop
fstp
jne
cmc
and
xchg
cs
(bad)
fdivr
ja
cld
aaa
push
mov
loop
adc
sub
sub
stos
sahf
dec
mov
cli
or
sub
dec
pop
retf
and
pop
mov
rcl
lea
and
xor
stos
cdq
push
mul
movups
xor
xor
mov
lea
adc
xor
pop
push
and
push
fistp
or
adc
xor
pop
push
repnz
mov
movups
aas
or
dec
fxch
dec
hlt
dec
lea
clc
and
xchg
cs
mov
jbe
or
and
sub
xor
cmc
jbe
fistp
mov
movs
xor
push
push
repnz
xchg
xor
adc
movs
xor
out
repnz
fistp
movs
lea
and
fistp
adc
xor
pop
jbe
cmp
mov
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
cmp
cs
or
bound
adc
cmp
cmp
pop
(bad)
dec
hlt
pop
mov
cld
add
push
sbb
inc
jl
int
push
hlt
adc
push
mov
adc
mov
repnz
mov
movups
cmp
int3
test
mov
cmc
pop
pusha
mov
or
xor
and
xchg
or
jae
or
mov
mov
or
lea
or
push
xor
pushf
jnp
mov
daa
dec
pop
mov
push
clc
sbb
mov
push
mov
icebp
out
jb
adc
xor
jb
repnz
test
jmp
sbb
xor
pop
push
repnz
fistp
dec
lea
and
push
repnz
xchg
pop
mov
movhps
xor
dec
pop
in
jge
mov
unpckhps
xor
push
push
repnz
mov
lar
sbb
jge
movs
mov
or
dec
and
fnstsw
adc
sbb
scas
or
bound
hlt
add
loopne
out
xchg
mov
in
outs
mov
ret
aam
lea
and
xor
stos
cdq
push
imul
movups
xor
pop
push
hlt
xor
adc
movs
jns
pop
push
repnz
not
lea
aaa
inc
mov
repnz
mov
movups
xor
pop
inc
repnz
mov
and
fwait
cs
pop
aaa
ja
out
sbb
cdq
or
cld
mov
or
push
repnz
push
dec
jecxz
add
xor
jle
repnz
mov
push
mov
movups
xor
aaa
push
repnz
mov
movups
xor
pop
push
repnz
mov
wbinvd
xchg
sbb
pop
push
repnz
mov
bndldx
xor
dec
push
repnz
mov
and
xchg
cs
pop
ds
jnp
sub
mov
and
mov
jo
imul
pop
push
repnz
mov
jo
jb
push
inc
push
and
inc
test
inc
sti
add
xchg
pop
int
jl
repz
outs
xchg
pop
mov
repnz
cmp
repnz
fistp
push
lea
and
repnz
mov
movups
xor
pop
jbe
and
pop
mov
or
lea
sub
ds
fistp
sbb
mov
inc
pop
sub
stos
dec
fld
dec
hlt
dec
xor
loope
lea
aaa
jl
sbb
test
and
test
xor
cmc
jbe
fistp
or
and
push
repnz
xchg
or
add
and
xor
fistp
jne
add
and
mov
add
cmps
mov
das
lods
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
cmp
movs
dec
(bad)
sbb
cdq
or
sbb
(bad)
aad
ja
jmp
xchg
pop
mov
sbb
xchg
push
sub
pop
int
pop
push
xchg
sub
xchg
xchg
pop
mov
or
lea
fisub
(bad)
mov
push
mov
cmp
push
pushf
and
loop
add
and
in
dec
aam
(bad)
mov
mov
xor
jns
repnz
mov
jne
movs
xor
cmc
push
repnz
xchg
pop
mov
setns
xor
or
xor
mov
setp
xor
cmp
xor
xchg
cli
add
xor
sbb
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
cmp
rol
leave
dec
rcl
std
push
xchg
(bad)
jl
fnstcw
mov
mov
mov
mov
push
pusha
mov
or
cmc
inc
call
bound
or
inc
imul
push
sbb
int
inc
jnp
and
shl
adc
xor
jl
lock
mov
pop
mov
sbb
xchg
push
sub
fimul
div
dec
fidivr
push
or
xor
mov
(bad)
lea
and
push
repnz
mov
(bad)
lea
and
aas
jge
mov
unpckhps
xor
push
push
repnz
mov
(bad)
lea
mov
fxch
dec
hlt
dec
xor
push
cmp
cmp
push
not
cdq
in
pop
mov
movhps
or
scas
or
sahf
inc
mov
cli
or
sub
inc
pop
retf
and
pop
xchg
jp
adc
xor
dec
push
repnz
sbb
add
and
xor
mov
movups
add
and
xor
dec
xchg
pop
mov
and
outs
movs
xor
pop
push
repnz
mov
nop
xor
inc
pop
fld
jne
clc
and
xchg
cs
(bad)
fdiv
lods
push
repnz
les
cli
adc
xor
mov
fistp
sbb
add
and
push
repnz
fistp
pop
lea
and
push
repnz
fistp
outs
lea
and
xor
fistp
pop
stos
push
sbb
sub
ja
hlt
jbe
fistp
sbb
xor
dec
push
repnz
mov
ud2
lea
and
stc
sbb
shl
push
sub
iret
inc
jnp
sub
mov
and
pop
not
push
adc
push
inc
stc
or
inc
imul
adc
adc
xor
pop
push
repnz
aam
fbld
jp
sbb
push
mov
sub
cmp
jb
push
jno
dec
or
push
repnz
push
mov
lock
jb
adc
and
xor
test
jmp
sbb
xor
ss
repnz
mov
cmove
xor
aas
push
repnz
fistp
jb
add
and
aas
jge
mov
unpcklps
xor
push
push
repnz
mov
(bad)
lea
or
inc
fxch
inc
hlt
dec
mov
adc
jge
cmp
push
xchg
sub
xchg
xchg
pop
mov
or
lea
fisub
les
lock
jb
cmp
push
mov
sub
pushf
pop
adc
sub
adc
mov
movups
cmp
pop
push
mov
push
(bad)
xchg
pop
mov
movups
loop
pop
push
hlt
adc
sbb
add
and
xor
mov
movups
sbb
inc
jnp
sub
cmps
mov
sar
ins
sub
ja
fmul
mov
and
cli
lea
xor
cmc
jbe
fistp
push
lea
and
push
repnz
fistp
outs
lea
and
push
repnz
fistp
test
xor
mov
sahf
push
cdq
pop
adc
das
lods
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
fild
add
mov
or
sbb
aad
ja
in
sbb
mov
sbb
call
pop
push
xchg
sub
xchg
xchg
pop
mov
pop
adc
or
scas
or
mov
aaa
das
jb
out
jb
(bad)
ss
inc
stc
or
imul
adc
xor
je
repz
stos
sahf
dec
mov
cli
adc
xor
mov
repnz
mov
dec
sbb
add
and
repnz
mov
cmovo
xor
daa
push
repnz
fistp
cdq
lea
and
fistp
pop
stos
adc
inc
sbb
sub
hlt
jbe
fistp
push
lea
and
repnz
mov
sysret
lea
and
fnstcw
jne
clc
and
xchg
cs
(bad)
fdivr
ja
in
cmp
stos
mov
adc
cmp
fs
mov
dec
adc
xor
inc
pop
retf
and
push
cdq
adc
sbb
int
mov
aad
sahf
push
mov
lock
jb
xor
jmp
xor
ds
pop
mov
sbb
xchg
bndldx
int
mov
out
mov
sysenter
lea
fs
push
repnz
mov
setl
xor
push
push
repnz
fistp
ja
add
and
push
repnz
fistp
fwait
lea
and
call
lahf
jne
in
sbb
xor
push
push
repnz
mov
(bad)
lea
and
repnz
mov
and
xchg
(bad)
mov
clc
sbb
lods
jmp
(bad)
sar
ja
and
push
fistp
add
mov
out
xchg
pop
xor
cmp
fidivr
adc
int
inc
pop
fld
dec
aad
lahf
push
mov
lock
jb
cmp
pop
retf
and
mov
or
and
das
pop
shl
out
lea
and
fistp
sbb
add
and
push
repnz
mov
cmovp
xor
fcom
xor
mov
movups
xor
std
push
repnz
mov
movhps
mov
push
jnp
xor
pop
mov
movups
xor
pop
pop
repnz
mov
movups
xor
pop
dec
stc
sbb
(bad)
xchg
outs
inc
mov
test
push
sub
mov
(bad)
dec
aad
jb
cdq
add
out
add
aas
push
push
mov
push
push
mov
and
or
and
inc
cdq
adc
sbb
int
inc
jnp
sub
lods
push
lods
push
adc
adc
push
repnz
fistp
sbb
xor
dec
pusha
icebp
xor
mov
push
cmp
add
xor
fst
xor
mov
nop
xor
int
repnz
mov
setns
xor
push
push
repnz
mov
xadd
adc
sub
dec
sub
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
shr
cs
pop
ds
jnp
sub
cmps
mov
or
xor
jp
clc
sub
fsubr
dec
out
jo
dec
dec
das
movs
xor
pop
pop
repnz
mov
call
out
fwait
cs
scas
sub
adc
popa
inc
mov
cli
out
xchg
cmps
adc
clc
fdivr
pop
cmps
sbb
jae
or
mov
out
mov
sysenter
lea
fs
push
repnz
mov
jo
movs
xor
push
push
repnz
mov
setns
xor
fst
xor
mov
movq
xor
pop
jbe
cmp
mov
or
adc
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
and
xchg
cs
pop
cmp
jmp
mov
or
shl
movs
push
repnz
push
mov
adc
mov
repnz
mov
add
sar
xchg
mov
out
cmp
inc
imul
sbb
push
xchg
int
mov
fistp
cmp
pop
adc
sub
retf
and
dec
and
hlt
lea
xor
cmc
jbe
fistp
mov
add
and
push
repnz
fistp
sahf
lea
and
push
repnz
mov
movups
xor
mov
mov
adc
das
lods
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
sbb
inc
jnp
das
jge
cmps
mov
(bad)
out
or
mov
fstp
aaa
ja
cli
out
outs
cmps
push
ds
or
pushf
pop
mov
adc
pop
int
ja
in
inc
aam
xlat
mov
js
sbb
push
mov
dec
mov
push
adc
xor
inc
pop
in
outs
ret
mov
mov
xor
jns
repnz
mov
setnp
xor
push
push
repnz
fistp
pop
lea
and
push
repnz
fistp
fwait
lea
and
push
repnz
xchg
sti
add
xor
sbb
xor
push
push
repnz
mov
nop
xor
dec
push
repnz
mov
femms
lea
or
dec
stc
sbb
lods
out
and
xchg
push
sbb
inc
pop
(bad)
dec
hlt
pop
mov
xor
adc
sub
xor
cmc
inc
out
mov
adc
xor
inc
pop
retf
and
jne
clc
add
xchg
pop
int
ja
out
cmp
test
xor
adc
ret
and
and
mov
sub
and
icebp
xor
jecxz
cmp
add
xor
aam
repnz
mov
emms
lea
and
push
repnz
mov
movd
xor
xlat
push
repnz
fistp
shl
ins
sub
ja
jmp
jge
mov
unpcklps
xor
push
push
repnz
mov
wbinvd
lea
and
repnz
mov
shr
(bad)
mov
stc
sbb
cdq
add
sbb
in
icebp
mov
les
lock
jb
adc
mov
repnz
mov
aaa
pop
jb
out
jl
lds
push
cdq
push
adc
xchg
push
sub
int
pop
jo
xor
pushf
or
sbb
mov
jmp
and
cli
lea
xor
cmc
jbe
fistp
popf
lea
and
push
repnz
fistp
xchg
lea
and
push
repnz
fistp
mov
movs
xor
mov
stos
lahf
jne
cld
add
cmps
mov
das
lods
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
sub
cmp
stos
mov
push
test
cli
jne
sbb
inc
pop
fnop
dec
rcl
movhps
or
scas
or
mov
mul
movups
sub
int3
test
mov
cli
out
xchg
mov
jmp
imul
add
and
xor
mov
sbb
jb
adc
xor
mov
repnz
mov
dec
sbb
add
and
push
repnz
mov
(bad)
lea
and
push
repnz
fistp
or
and
push
repnz
mov
movhps
sub
ja
hlt
jbe
fistp
sbb
xor
push
push
repnz
mov
wbinvd
lea
and
fnstcw
inc
cdq
adc
cmp
dec
(bad)
dec
aad
jno
cdq
add
out
mov
ds
pop
retf
and
pop
sar
pop
dec
enter
movs
xor
cmp
inc
imul
sbb
mov
(bad)
mov
push
mov
cli
xor
and
xor
aam
pop
mov
push
sbb
int
mov
out
mov
sysenter
lea
fs
push
repnz
fistp
jb
add
and
push
repnz
fistp
sbb
xor
push
push
repnz
mov
setbe
xor
pop
jbe
cmp
mov
dec
sbb
xor
pop
push
repnz
mov
lsl
xor
inc
push
repnz
mov
add
pop
ds
jnp
das
jge
mov
and
xchg
cs
jl
shl
mov
ret
mov
push
mov
cli
adc
add
fistp
add
sar
xchg
mov
clc
sub
aam
stos
mov
jns
sbb
cmp
outs
scas
or
xchg
pop
mov
lds
lea
daa
jbe
clc
sub
aam
and
pop
adc
xor
jns
repnz
mov
nop
xor
hlt
push
repnz
fistp
sbb
xor
rcl
(bad)
fistp
mov
xor
xor
xor
mov
xadd
sub
ja
in
aas
pop
hlt
adc
adc
xor
pop
pop
repnz
mov
movups
and
xor
mov
aaa
outs
jb
out
jne
sbb
dec
jnp
sub
mov
add
sbb
inc
sub
sbb
mov
movhps
or
scas
or
iret
pop
mul
movups
cmp
pop
push
in
cmp
inc
imul
cs
scas
and
fs
int3
test
cdq
adc
sbb
int
jl
icebp
xor
aas
xchg
pop
mov
xchg
adc
xor
pop
jo
xor
xchg
or
or
int3
fisub
out
mov
sysenter
lea
fs
push
repnz
mov
nop
xor
pop
push
repnz
mov
cmovb
xor
int3
push
repnz
mov
setne
xor
pop
jbe
cmp
pop
mov
push
or
adc
xor
pop
push
repnz
mov
movups
and
xor
mov
and
xchg
cs
pop
ds
jnp
sub
movs
mov
push
cmps
loop
arpl
repnz
push
mov
adc
mov
repnz
mov
inc
out
jb
push
pop
cmp
stc
or
inc
imul
sbb
xchg
push
sub
ficomp
cld
xor
pushf
fistp
jecxz
jnp
add
cmp
out
int3
test
and
mov
xor
cmc
jbe
fistp
aad
add
and
push
repnz
xchg
pop
mov
bndstx
xor
(bad)
push
repnz
fistp
xchg
xor
cmp
xor
fistp
pop
stos
pop
sbb
sub
xor
pop
mov
add
and
xor
mov
movups
xor
pop
ja
xor
mov
iretw
sbb
out
xchg
or
pushf
mov
(bad)
dec
rcl
call
jne
sbb
inc
pop
fld1
dec
rcl
movhps
or
scas
or
cmc
inc
xchg
mov
adc
xor
push
push
repnz
mov
jo
sbb
or
sub
retf
and
jne
stc
and
xchg
(bad)
popa
pushf
and
mov
fidiv
movups
sbb
push
hlt
sbb
xchg
push
mov
cmp
lea
and
xor
cmps
sahf
inc
mov
cli
adc
xor
or
xor
mov
dec
sbb
xor
push
push
repnz
mov
rdtsc
lea
and
repnz
xchg
mov
sbb
inc
je
and
fidivr
adc
sbb
inc
pop
fld
pop
mov
scas
adc
xor
or
xor
mov
dec
sbb
xor
pop
push
repnz
mov
sysexit
lea
and
repnz
mov
movhps
and
fidivr
adc
sbb
inc
pop
fld
pop
mov
scas
adc
xor
cmp
xor
mov
dec
pop
lea
and
repnz
mov
ud2
lea
and
xchg
sub
xchg
xchg
pop
mov
or
lea
ss
jmp
jge
mov
bndstx
aaa
and
xor
mov
movups
xor
ss
fistp
lar
xor
jp
repnz
mov
bndstx
xor
pop
push
repnz
mov
(bad)
lea
and
repnz
mov
movhps
and
fnstsw
adc
cmp
jmp
hlt
dec
adc
cmp
add
or
push
repnz
mov
add
xor
jp
repnz
mov
rdtsc
lea
and
xor
xchg
jp
jecxz
sbb
xor
pop
push
repnz
xchg
inc
or
repnz
mov
and
xchg
cs
scas
sbb
push
aad
mov
lar
xor
jp
repnz
mov
movups
xor
js
repnz
mov
movups
xor
js
repnz
xchg
inc
or
repnz
mov
and
nop
cs
scas
sbb
push
fbstp
movs
add
xor
jp
repnz
mov
(bad)
lea
and
repnz
mov
bndstx
xor
inc
push
repnz
xchg
clc
add
or
repnz
mov
mov
cmps
dec
pusha
pop
xor
sahf
jne
jecxz
add
xor
jp
repnz
mov
sysexit
lea
and
repnz
mov
movups
xor
pop
push
repnz
xchg
sti
add
or
repnz
mov
and
fwait
cs
scas
sbb
push
fbstp
movs
add
xor
jp
repnz
mov
(bad)
add
and
xor
mov
(bad)
add
and
repnz
xchg
stc
add
or
repnz
mov
and
xchg
cs
scas
sbb
push
aad
mov
lar
xor
jns
repnz
mov
movups
xor
jge
repnz
mov
sysret
lea
sbb
mov
push
fistp
sbb
and
ja
lock
inc
mov
add
enter
movs
xor
xor
mov
movups
loop
pop
push
hlt
adc
dec
and
inc
lea
xor
hlt
jbe
fistp
xor
movs
xor
push
push
repnz
mov
sysexit
lea
and
movs
sahf
jne
out
jo
pop
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
pop
fsubr
pop
hlt
pop
xchg
dec
and
js
add
xor
hlt
jbe
fistp
xor
xor
pop
push
repnz
mov
nop
imul
xor
mov
ror
dec
pusha
(bad)
cmc
and
popf
lods
push
fbstp
dec
adc
add
and
repnz
mov
movhps
xor
pop
jbe
sbb
fistp
dec
lea
xor
hlt
jbe
fistp
adc
xor
pop
push
repnz
mov
bndstx
xor
mov
xor
mov
or
sbb
xor
xor
pop
push
div
push
fbld
and
xchg
(bad)
cmps
xor
pop
cmc
mov
lar
xor
jns
repnz
mov
movups
xor
dec
push
repnz
mov
movups
push
cmp
adc
mov
add
nop
mov
icebp
pop
neg
mov
or
adc
xor
pop
push
repnz
mov
movups
and
pop
push
aam
jge
mov
pcmpeqd
xor
dec
pop
hlt
jbe
fistp
or
xor
pop
push
repnz
xchg
dec
mov
unpcklps
ja
pop
push
repnz
push
fistp
cmp
sbb
xor
xor
repnz
lahf
pop
mul
movups
xor
pop
push
cmc
xor
mov
movups
xor
jbe
imul
out
mov
getsec
lea
fs
push
repnz
mov
sysexit
lea
and
xor
xchg
push
mov
sysexit
lea
and
jmp
xchg
aas
lods
call
adc
xor
pop
inc
clc
sbb
(bad)
xchg
outs
inc
mov
cmps
adc
sbb
push
jnp
xor
mov
sysenter
lea
fs
push
repnz
mov
ud2
lea
and
repnz
mov
adc
aam
adc
xor
pop
hlt
jae
jne
cmc
add
add
jp
cmp
mov
movups
xor
pop
push
cmc
xor
mov
sbb
lea
aaa
inc
(bad)
stos
and
cli
xor
mov
push
or
xor
inc
push
repnz
mov
wbinvd
lea
and
xor
mov
aas
lods
mov
adc
xor
pop
dec
clc
sbb
mov
add
mov
cld
xor
jnp
xchg
push
cwde
cmc
add
enter
movs
xor
pop
push
repnz
mov
movups
loop
pop
push
hlt
adc
dec
and
dec
lea
xor
hlt
jbe
fistp
adc
xor
outs
push
repnz
xchg
ins
mov
getsec
lea
and
movs
sahf
jne
in
or
mov
std
ja
pop
push
repnz
push
fistp
cmp
sbb
xor
pop
push
cld
aaa
cmp
xchg
push
cwde
sti
add
jns
xor
or
xor
mov
dec
sbb
xor
jbe
repnz
mov
rdtsc
lea
and
repnz
mov
movhps
xor
cmp
fidivr
adc
sbb
inc
pop
fld
push
cwde
inc
jns
xor
cmp
xor
mov
dec
pop
lea
and
xor
mov
movups
xor
pop
push
xchg
sub
xchg
xchg
pop
mov
or
lea
aaa
ja
call
sti
stc
mov
add
das
mov
repnz
mov
movups
xor
pop
and
push
fstp
lar
xor
jns
repnz
mov
sysret
lea
and
repnz
xchg
inc
mov
movups
push
ds
mov
push
fistp
sbb
and
xor
ja
xchg
push
cwde
stc
add
enter
movs
xor
xor
mov
movups
loop
pop
push
hlt
adc
dec
and
dec
lea
xor
hlt
jbe
fistp
and
xor
pop
push
repnz
mov
bndstx
xor
mov
xor
mov
or
mov
std
ja
pop
push
repnz
push
fistp
cmp
sbb
xor
pop
push
popf
call
enter
add
add
and
mov
wbinvd
lea
and
xor
mov
wbinvd
lea
and
adc
mov
movups
sbb
dec
pop
fprem1
push
fdivr
bndstx
aaa
and
xor
mov
movups
xor
pop
push
and
push
fistp
lar
xor
jp
repnz
mov
mov
add
and
repnz
mov
movups
xor
ja
repnz
xchg
mov
sbb
inc
push
loope
adc
mov
movups
cmp
jmp
hlt
dec
mov
or
push
sbb
pop
aas
pop
xor
xchg
mov
lar
xor
jp
repnz
mov
bndstx
xor
js
repnz
mov
movups
xor
js
repnz
xchg
cmc
add
or
repnz
mov
and
nop
cs
scas
sbb
push
aad
adc
add
xor
jp
repnz
mov
sysexit
lea
and
repnz
mov
bndstx
xor
pop
push
repnz
xchg
clc
add
or
repnz
mov
and
call
pop
aas
pop
xor
xchg
(bad)
push
cdq
dec
lar
xor
jns
repnz
mov
movups
xor
dec
push
repnz
xchg
inc
mov
movups
push
and
mov
push
fistp
sbb
and
ja
lock
jo
xchg
push
cwde
cmc
add
enter
movs
xor
pop
push
cmc
xor
mov
movups
loop
pop
push
hlt
adc
dec
and
dec
lea
xor
hlt
jbe
fistp
sbb
xor
jge
repnz
mov
(bad)
lea
and
stos
sahf
jne
in
or
sbb
xor
xor
pop
push
div
push
fbld
and
call
xor
repnz
sahf
jne
jecxz
add
xor
dec
push
repnz
mov
adc
lea
jne
push
repnz
mov
adc
xor
pop
push
repnz
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
pop
adc
xor
fnstsw
cmp
sbb
pushfw
dec
fisub
fistp
sbb
xor
dec
push
repnz
mov
(bad)
lea
and
repnz
mov
(bad)
lea
and
retf
and
jne
(bad)
and
xchg
cs
(bad)
fdivr
dec
jnp
sub
hlt
pop
xor
sbb
push
sbb
mov
or
cmps
mov
shr
sub
dec
stos
and
inc
mov
cmp
daa
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
sub
test
movs
enter
cs
jb
fidivr
ja
in
cmp
jne
cld
sbb
push
sbb
jne
ds
scas
or
addr16
cdq
adc
cmp
sbb
das
or
hlt
pop
mov
xor
adc
sub
inc
pop
dec
daa
and
pop
mov
adc
movs
xor
pop
push
repnz
out
mov
jnp
sbb
aas
sub
test
mov
or
push
pop
int
dec
jnp
sub
mov
(bad)
out
jb
adc
xor
pop
jo
xor
xchg
leave
pop
mov
and
jne
sbb
or
xchg
cmps
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
cli
adc
xor
pop
push
repnz
mov
jp
lea
daa
jp
(bad)
aas
jge
mov
lock
jb
push
movs
xor
push
push
repnz
mov
syscall
lea
and
repnz
mov
getsec
lea
and
repnz
xchg
push
or
push
pop
int
inc
inc
fld
dec
(bad)
xchg
inc
stos
enter
cs
jl
aad
ja
in
daa
jge
mov
sbb
push
sbb
inc
jo
aaa
ja
in
cmp
mov
adc
cmp
dec
pop
retf
and
push
lods
lock
popa
sti
out
xchg
mov
repnz
mov
add
lea
xor
push
repnz
mov
das
adc
or
inc
hlt
dec
(bad)
jne
(bad)
and
xchg
cs
jne
sbb
inc
jnp
sub
hlt
pop
xor
add
sahf
or
repz
int
inc
jnp
sub
mov
enter
div
(bad)
cmp
out
sbb
mov
sbb
xchg
or
jne
sbb
scas
or
mov
cmps
push
adc
xor
push
push
movs
mov
add
int
ja
jmp
mov
cli
or
and
sub
rol
xor
add
push
shl
pop
push
fcmovu
push
fistp
push
sbb
int3
fisub
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
push
repnz
or
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
pop
adc
xor
push
fistp
adc
xor
jp
call
cwde
push
mov
push
movs
xor
push
push
repnz
mov
lar
xor
inc
push
repnz
mov
(bad)
lea
and
repnz
xchg
push
or
push
pop
int
inc
pop
fld
dec
int
inc
cdq
or
pop
cmps
out
push
jle
aad
push
jnp
sub
hlt
arpl
add
loope
ja
in
es
mov
sub
jno
and
fs
int3
test
mov
out
jb
push
bound
xor
mov
lar
xor
inc
push
repnz
mov
femms
or
stos
pop
int
inc
inc
fld
dec
(bad)
xchg
inc
cdq
or
add
aad
ja
in
sub
mov
add
fwait
or
repz
int
inc
jnp
sub
stos
mov
cli
xchg
push
cmp
dec
(bad)
dec
hlt
popa
inc
jl
jecxz
aaa
nop
(bad)
popa
mov
sbb
scas
or
mov
jmp
push
adc
xor
push
pop
retf
and
jne
stc
add
cmp
sub
adc
icebp
out
jb
cmp
inc
dec
jnp
inc
imul
adc
xor
mov
repnz
push
movs
out
aaa
add
out
jns
and
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
pop
mov
clc
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
mov
sti
adc
xor
pop
push
repnz
mov
or
xchg
or
inc
daa
sub
test
mov
or
lea
das
pop
push
repnz
mov
push
adc
xor
pop
push
repnz
mov
and
push
xor
pop
push
repnz
xchg
dec
clc
and
xchg
pop
cmp
pop
(bad)
dec
retf
dec
cdq
push
adc
cmps
in
inc
jp
or
shl
xsha1
ror
daa
jp
stc
sub
rol
sbb
int3
fisub
fistp
adc
xor
push
fistp
adc
xor
dec
pop
retf
and
dec
cdq
adc
push
addr16
fdivr
ja
in
cmp
cmp
add
push
sbb
inc
inc
dec
retf
and
inc
cdq
pop
adc
jl
cmp
(bad)
dec
hlt
pop
(bad)
jne
hlt
and
pop
adc
adc
push
dec
sti
cmp
mov
das
dec
sbb
adc
fs
xor
ja
pop
push
repnz
mov
push
out
jb
or
sub
inc
inc
dec
sbb
inc
imul
sbb
sbb
or
(bad)
push
lods
jmp
pop
int
pop
push
shl
fistp
cmp
ins
mov
sub
stc
sub
rol
add
xor
dec
push
repnz
mov
adc
lea
cs
push
repnz
mov
scas
adc
xor
fistp
adc
xor
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
add
lea
das
pop
push
repnz
fistp
aaa
xchg
sbb
fisub
stos
inc
imul
add
sub
cmp
fistp
adc
xor
push
repnz
mov
daa
adc
xor
pop
push
repnz
mov
cmp
inc
push
sub
sbb
lods
icebp
and
xchg
cs
jbe
sar
dec
jnp
sub
hlt
data16
cld
add
pop
sbb
inc
imul
nop
adc
push
fstp
push
sbb
pop
sub
dec
mov
imul
movups
cmp
pop
push
cld
xor
scas
xchg
pop
mov
movups
sub
pop
push
shl
push
fbld
icebp
out
jb
cmp
inc
fld
dec
enter
mov
cs
jne
sbb
dec
jnp
sub
aam
popf
push
mov
out
jb
cmp
dec
stc
sbb
stos
enter
out
inc
jnp
or
fstp
gs
jb
or
mov
dec
or
inc
imul
adc
inc
adc
xor
pop
push
repnz
rol
or
cmp
test
mov
or
push
mov
fisub
aad
popf
push
lods
jmp
cmps
xor
std
push
repnz
mov
movups
cmp
inc
pop
dec
scas
and
dec
and
mov
xor
inc
pop
loope
inc
(bad)
sbb
jl
lea
inc
pop
push
repnz
mov
retf
add
and
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
mov
lea
cmp
jge
mov
push
mov
nop
xor
push
push
repnz
mov
wbinvd
lea
and
repnz
mov
(bad)
lea
sbb
or
xor
and
xchg
or
xchg
(bad)
dec
hlt
pop
mov
cmp
pop
inc
jae
or
shl
lock
jb
push
ins
movs
xor
push
push
repnz
mov
lar
xor
inc
push
repnz
scas
nop
data16
lock
xchg
adc
lahf
mov
sbb
test
cld
push
cmp
sbb
mov
or
mov
std
and
xchg
cs
ja
fidivr
ja
div
aaa
ror
adc
xor
dec
int
and
add
sahf
add
ficomp
fiadd
push
and
inc
mov
cli
out
jno
ret
ss
dec
sti
aas
dec
int3
mov
lock
xor
push
push
repnz
mov
add
mov
das
mov
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
movups
add
and
xor
mov
or
jl
sub
pop
jnp
cmp
xlat
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
inc
loope
outs
cmps
inc
imul
cs
(bad)
fnstsw
push
jnp
sub
mov
and
xchg
cs
mov
jbe
sub
stc
xchg
pop
mov
push
adc
xor
pop
push
repnz
push
fistp
sbb
int
inc
inc
fld
dec
rcl
adc
inc
inc
cs
inc
test
inc
cdq
pop
push
cmp
test
sbb
jae
mov
adc
mov
or
int3
test
and
mov
add
xor
mul
push
call
adc
fbld
pop
push
cmp
push
fistp
pop
mov
movups
and
push
repnz
ins
xchg
pop
mov
movups
repnz
xor
mov
pop
mov
movups
(bad)
and
xor
xchg
xchg
pop
mov
movups
das
sub
int3
xlat
stc
lahf
pop
mov
pop
adc
xor
pop
push
repnz
mov
adc
lea
add
push
push
fistp
adc
or
scas
or
call
sbb
inc
dec
sub
and
stos
mov
push
cwde
cs
jno
out
push
jnp
and
shl
cmp
out
ins
loope
and
xor
mov
pop
mov
movups
and
xor
mov
lock
jb
add
sub
sbb
stos
enter
cs
ds
test
inc
xor
add
xchg
(bad)
dec
hlt
pop
call
inc
adc
xor
pop
push
repnz
test
dec
sbb
push
cmps
lock
and
test
mov
push
adc
mov
aad
popf
push
scas
lock
pop
sti
out
xchg
cmps
xor
push
dec
xchg
pop
mov
in
lea
cmp
aaa
xor
jecxz
push
fistp
mov
movups
push
xor
or
pop
mov
movups
cwde
and
xor
fst
lea
pop
push
test
push
fistp
xchg
pop
mov
movups
xor
jbe
jmp
inc
ficom
movups
aas
and
xor
scas
xchg
pop
mov
movups
sub
pop
push
shl
push
fbld
ja
jb
push
addr16
aaa
ja
jmp
mov
neg
sbb
inc
pop
(bad)
xchg
mov
adc
push
xor
pop
push
repnz
push
fistp
adc
xor
test
cdq
push
adc
cmps
hlt
push
gs
fistp
ja
in
mov
mov
dec
mov
sbb
jb
or
sub
lods
dec
(bad)
dec
hlt
push
mov
xor
adc
das
xor
pop
int
and
lock
xor
dec
push
repnz
mov
adc
lea
and
repnz
pop
mov
sbb
lea
gs
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
pop
push
repnz
pop
mov
push
adc
xor
push
repnz
pop
mov
cwde
adc
xor
pop
push
repnz
push
fistp
aaa
xchg
adc
push
fmul
fisub
stos
inc
imul
add
sub
cmp
pop
mov
sbb
lea
aas
pop
push
repnz
mov
daa
adc
xor
pop
push
repnz
push
fistp
out
jb
cmp
dec
out
mov
lods
in
and
xchg
push
cmp
jnp
sub
hlt
mov
adc
aam
jns
(bad)
ds
jnp
jecxz
fnstsw
sbb
pop
sub
retf
and
sbb
add
and
xor
mov
movups
xor
pop
jae
xor
mov
pushw
sbb
cmp
jmp
mov
push
test
bnd
sbb
inc
inc
fld1
dec
shl
icebp
out
jb
cmp
jnp
sub
mov
add
imul
or
fstp
gs
jb
pop
pusha
mov
lods
int
and
push
push
mov
and
or
and
inc
cdq
adc
sbb
int3
fisub
aad
lahf
inc
mov
cli
or
inc
pop
call
imul
add
and
xor
stos
sahf
inc
mov
sti
out
xchg
movs
xor
dec
pusha
div
push
fnstsw
sub
add
cmp
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
mov
push
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
lock
xor
push
repnz
pop
mov
imul
cmps
xor
jp
jmp
outs
mov
icebp
add
stc
cli
out
xchg
mov
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
pop
mov
cmp
lea
adc
hlt
dec
mov
adc
push
cmps
jmp
fs
fdivr
inc
jnp
sub
hlt
pop
mov
cmp
or
sub
mov
sbb
mov
pop
adc
sub
cmps
and
inc
mov
loop
xchg
pop
xor
push
push
repnz
mov
nop
xor
dec
push
repnz
xchg
inc
mov
rdpmc
lea
sbb
scas
or
bound
adc
pop
cmps
jmp
mov
mov
sbb
push
sbb
jno
or
jge
mov
add
cmp
ror
pop
mov
aas
fistp
pop
cmp
dec
xor
inc
imul
outs
push
mov
xor
push
push
repnz
mov
adc
push
sub
jno
sub
test
mov
cmp
aaa
ja
out
cmp
cmps
cwde
xchg
sbb
adc
pop
jo
xor
xchg
retf
pop
mov
and
push
lods
int3
fisub
out
imul
movs
xor
dec
push
repnz
mov
adc
lea
and
repnz
push
fistp
adc
xor
pop
push
repnz
mov
pop
adc
xor
push
fistp
adc
xor
push
bnd
mov
adc
lea
xor
bound
mov
dec
adc
xor
pop
push
repnz
fnstsw
cmp
sbb
pushfw
dec
fisub
fistp
sbb
xor
dec
push
repnz
mov
prefetchw
xor
jle
repnz
mov
(bad)
lea
and
retf
and
dec
cdq
adc
or
sub
sbb
cdq
add
cmp
add
sub
test
sbb
movs
enter
pop
adc
sub
dec
stos
and
inc
mov
imul
xchg
pop
xor
push
push
repnz
mov
sidtd
xor
inc
push
repnz
mov
rdpmc
lea
sbb
into
xchg
bound
enter
push
sbb
inc
dec
(bad)
inc
hlt
pop
(bad)
jne
std
and
xchg
push
sbb
ds
scas
or
addr16
cdq
adc
cmp
cmp
jnp
and
mov
or
pusha
mov
retf
and
pop
sar
jae
enter
movs
xor
aas
outs
add
lods
sti
and
xchg
bndldx
sbb
scas
or
addr16
mov
or
push
pop
int
inc
jnp
sub
mov
(bad)
out
jb
adc
xor
pop
jo
xor
xchg
ja
mov
and
jne
sbb
or
xchg
pop
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
fistp
adc
xor
pop
push
repnz
mov
xor
lea
xor
push
repnz
pop
mov
lock
xor
push
bnd
mov
or
imul
push
fistp
adc
xor
jbe
repnz
and
lock
cdq
or
pop
pop
int
pop
adc
mov
pop
mov
movups
and
xor
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
sub
int3
test
inc
cld
add
jg
sbb
ja
in
sub
mov
and
xchg
push
cmp
dec
in
test
stos
mov
ficom
sbb
pop
push
aam
pop
aam
cdq
push
mov
out
jb
sbb
fs
int3
test
mov
pop
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
rol
cmp
or
sub
es
movs
mov
(bad)
out
inc
jnp
sub
dec
(bad)
and
inc
cdq
pop
adc
jl
cmp
sbb
jne
std
and
pop
das
adc
adc
push
inc
stc
sub
rol
adc
sbb
loope
and
xor
mov
icebp
out
jb
add
sub
inc
pop
dec
pop
and
inc
cdq
pop
pop
sbb
or
mov
sub
fld
out
jb
pop
popa
mov
or
test
mov
das
sbb
xor
pop
jp
cmp
mov
repnz
jb
adc
xor
test
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
mov
sbb
lea
movs
pop
push
repnz
push
fistp
adc
xor
bnd
fistp
adc
xor
pop
push
repnz
push
fistp
aaa
xchg
push
sbb
fs
int3
test
mov
pop
adc
xor
pop
push
repnz
mov
adc
lea
add
adc
pop
mov
and
lea
adc
push
repnz
rol
or
sub
cmp
xor
sahf
jne
cld
add
outs
sbb
mov
fldl2e
dec
into
xchg
inc
inc
stos
enter
fdivr
clc
icebp
ja
repnz
dec
mov
cli
push
pusha
scas
sub
int
and
movhps
xor
push
push
repnz
mov
ud2
lea
and
repnz
test
dec
sbb
add
sar
jnp
sub
jne
cld
sbb
outs
sbb
mov
stc
cmp
mov
(bad)
dec
sbb
push
xchg
loop
lods
sbb
dec
jnp
sub
hlt
push
mov
pop
adc
(bad)
out
ds
jnp
jecxz
fnstsw
sbb
int3
fisub
shl
rcr
jecxz
sbb
sbb
hlt
dec
mov
lock
leave
sti
out
xchg
mov
in
dec
int3
mov
imul
cmps
test
pop
retf
and
inc
lods
mov
pop
inc
mov
loope
outs
iret
inc
imul
push
adc
xor
dec
push
repnz
mov
adc
lea
and
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
mov
loopne
lea
inc
pop
push
repnz
pop
mov
push
adc
xor
repnz
pop
mov
lea
lea
das
pop
push
repnz
jb
jecxz
aaa
xchg
pop
sbb
mov
stos
inc
imul
add
sub
push
fistp
adc
xor
pop
push
repnz
mov
and
lea
adc
add
fistp
out
jb
push
jb
les
ja
in
cmp
mov
adc
push
or
sub
ds
mov
pop
cmp
push
inc
imul
jge
ins
mov
push
xchg
push
jnp
or
mov
shr
out
mov
push
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
pop
cmp
sub
mov
and
xchg
cs
jne
sbb
inc
jnp
sub
push
lods
repnz
sbb
sbb
inc
pop
fld
dec
hlt
push
mov
cld
push
cmp
sbb
or
lea
nop
xchg
pop
mov
adc
cmp
cmp
stc
sub
rol
adc
sbb
xor
pop
push
cmc
xor
movs
cwde
data16
out
scas
sub
int
and
push
sbb
int3
fisub
aad
lahf
inc
mov
cli
out
push
push
ror
push
fistp
cmp
and
test
and
in
mov
xor
xor
stc
mov
jecxz
adc
xor
pop
push
repnz
pop
mov
hlt
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fnstsw
ins
jb
out
jne
sbb
scas
or
xchg
pop
mov
movups
cmp
xor
stos
xchg
pop
mov
movups
adc
pop
push
xlat
xor
xchg
xchg
pop
mov
movups
pop
and
and
(bad)
imul
adc
rol
(bad)
dec
aad
jl
test
jmp
cmps
in
jns
out
ds
jnp
sub
hlt
imul
jno
sti
icebp
jno
repnz
push
mov
icebp
out
jb
sbb
or
mov
xlat
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
dec
out
outs
arpl
mov
sub
jno
ret
jnp
sub
hlt
push
mov
adc
cmps
in
inc
jns
sub
retf
and
push
cdq
pop
push
cmp
test
sbb
hlt
pop
mov
stc
and
pop
sub
push
adc
push
dec
stc
cs
out
push
dec
loopne
jo
inc
dec
das
movs
xor
pop
pop
repnz
movs
cwde
data16
lock
xchg
cs
scas
das
sub
test
scas
jmp
sub
dec
and
dec
cdq
or
sbb
adc
mov
fistp
cmp
adc
sub
out
aas
outs
xlat
inc
imul
push
adc
push
repnz
mov
adc
lea
imul
je
fistp
adc
xor
push
repnz
mov
xchg
adc
xor
push
fistp
adc
xor
push
repnz
pop
mov
or
imul
push
fistp
adc
xor
pop
push
repnz
push
fistp
aaa
xchg
pop
sbb
mov
stos
inc
imul
add
sub
cmp
fistp
adc
xor
pop
push
repnz
mov
adc
xor
pop
push
repnz
push
fistp
out
jb
or
sub
sub
mov
push
cmp
cmp
dec
fldz
dec
int
dec
inc
test
shl
in
inc
pop
fsqrt
xchg
mov
add
pushf
or
fwait
pop
int
dec
pop
in
and
pop
push
dec
in
sbb
xor
push
push
repnz
mov
clts
lea
and
repnz
xchg
inc
mov
cli
out
je
lds
dec
jnp
sub
hlt
push
mov
or
sbb
sub
daa
jge
movs
lahf
inc
mov
cli
out
jae
(bad)
cmp
mov
xchg
jg
cdq
or
cmp
cmp
sbb
push
fstp
adc
cmp
je
call
adc
int3
fisub
aam
test
mov
cmp
pop
retf
and
push
lods
repnz
mov
sbb
inc
pop
in
dec
into
mov
inc
dec
sbb
adc
push
and
das
pop
enter
mov
cli
adc
xor
mov
fistp
or
xor
push
push
repnz
xchg
inc
mov
lsl
xor
lods
push
repnz
fidivr
cwde
lea
and
fistp
xchg
lea
and
repnz
mov
jp
movs
xor
into
push
repnz
fidivr
sbb
and
push
repnz
xchg
sti
add
or
add
pushf
dec
fisub
fistp
sbb
movs
xor
dec
push
repnz
mov
femms
lea
and
repnz
mov
(bad)
lea
and
dec
ins
and
inc
mov
cs
mov
iret
inc
jnp
sub
hlt
pop
mov
add
cmp
add
das
or
hlt
outs
mov
sub
or
xor
jp
stc
sub
inc
push
dec
cli
add
cmp
xor
mov
movups
xor
pop
inc
repnz
mov
movups
sub
test
mov
cmc
push
popa
(bad)
fidivr
push
jnp
sub
hlt
pop
mov
add
cmp
sbb
ret
int3
dec
hlt
dec
lea
cld
add
inc
dec
and
mov
aad
je
cdq
fistp
pop
cmp
dec
and
inc
imul
adc
inc
adc
xor
pop
push
repnz
loopne
mov
jnp
sbb
sbb
scas
or
mov
adc
xchg
pop
das
or
lds
lock
mov
push
fsub
les
icebp
out
jb
adc
xor
stos
push
repnz
mov
movups
xor
push
repnz
fistp
adc
xor
pop
push
repnz
mov
cld
adc
xor
pop
push
repnz
mov
or
lea
sub
repnz
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
push
fistp
aaa
xchg
adc
inc
daa
das
sub
test
mov
pop
adc
xor
pop
push
repnz
mov
adc
push
xor
pop
push
repnz
pop
mov
and
lea
adc
inc
rol
cmp
add
das
or
stos
mov
cmc
xchg
pop
cmp
dec
fldl2e
dec
int3
xchg
inc
inc
cdq
xor
or
loop
pop
push
hlt
adc
dec
sbb
sbb
or
mov
xlat
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
inc
dec
xchg
and
inc
mov
test
mov
mov
mov
xchg
or
mov
cmp
inc
pop
retf
and
jne
cld
add
jl
cmp
(bad)
dec
aam
ja
cdq
add
sbb
xor
jp
clc
das
pop
(bad)
mov
das
dec
sbb
pop
mov
adc
sbb
xor
mov
add
aad
out
xchg
mov
stc
sub
imul
dec
cld
add
jns
sbb
sub
test
mov
cmp
and
not
inc
fidivr
adc
sbb
push
dec
stc
sub
mov
mov
mov
xor
dec
push
repnz
mov
adc
lea
and
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
push
repnz
mov
movups
xor
pop
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
repnz
push
fistp
aaa
nop
or
pop
pop
int
inc
pop
dec
and
inc
imul
movups
cmp
pop
push
push
push
fild
movups
and
xor
cwde
xchg
pop
mov
movups
sbb
xor
cmps
cwde
data16
out
xchg
cs
pop
ds
jnp
and
jne
cld
add
push
sub
sbb
jmp
mov
lock
mov
aaa
in
cli
out
jo
sub
test
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
rol
add
sar
jnp
sub
hlt
push
mov
sbb
outs
sbb
mov
stc
sub
sub
dec
clc
and
xchg
or
fwait
mov
sbb
mov
cmps
fcmovb
pop
cmps
xor
jp
clc
sub
mov
xor
adc
xor
pop
push
cli
xor
mov
icebp
out
jb
or
das
sub
retf
and
jne
cli
add
xchg
pop
int
push
dec
dec
arpl
inc
imul
pop
sbb
fbld
fistp
cmp
adc
sub
jmp
imul
push
adc
xor
dec
push
repnz
mov
adc
lea
pop
pop
push
bnd
fistp
adc
xor
pop
push
repnz
pop
mov
movups
xor
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
push
repnz
push
fistp
and
sbb
ret
mov
das
dec
sbb
push
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
sahf
xchg
pop
mov
movups
sbb
pop
push
ret
xor
mov
mov
out
xchg
pop
sub
cmp
mov
add
sbb
inc
inc
sub
mov
retf
inc
mov
lds
jecxz
ja
in
and
ins
cmps
pop
mov
sub
xchg
push
pushfw
fstp
mov
enter
dec
sbb
pop
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
and
xor
lahf
xchg
pop
mov
add
pop
sub
and
jne
cld
add
sbb
inc
inc
sub
sbb
mov
cmp
aas
ja
out
sbb
cdq
or
sbb
sub
cmp
ins
cmps
pop
mov
sub
xchg
sbb
xor
test
in
mov
adc
xor
inc
dec
dec
pop
and
inc
cmps
enter
sbb
pushfw
or
mov
ret
push
mov
cs
xchg
pop
sub
lods
inc
clc
sub
rol
sbb
pushf
and
mov
fnstsw
adc
sbb
push
dec
clc
aas
outs
daa
inc
imul
or
xchg
fimul
div
inc
fnstsw
sub
add
cmp
push
repnz
fistp
adc
xor
push
repnz
mov
scas
adc
xor
push
repnz
mov
push
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
push
fistp
adc
xor
push
repnz
fistp
adc
xor
outs
push
repnz
daa
dec
sbb
or
int
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
xor
pop
jp
xor
mov
movups
cmp
int3
test
scas
enter
cs
jne
sbb
inc
jnp
sub
hlt
pop
mov
add
push
cmps
(bad)
jns
jmp
push
movs
mov
fistp
adc
adc
push
pop
in
cmp
push
push
dec
cmc
add
xchg
sub
adc
mov
movups
and
pop
push
in
push
fbld
movups
cs
test
lods
icebp
and
xchg
pop
cmp
(bad)
dec
leave
xchg
ja
mov
cs
sub
int
and
inc
cmps
jmp
data16
fdiv
ja
jmp
cdq
cmp
pop
dec
mov
stc
aas
outs
mov
out
push
ficomp
movs
xor
pop
push
repnz
test
mov
cmps
repz
cmp
test
stos
jmp
out
xchg
pop
and
or
inc
imul
adc
popa
test
cmp
(bad)
jl
pop
mov
jmp
xor
jbe
clc
sub
inc
imul
pop
int
dec
pusha
div
fcomp
mov
push
push
xchg
adc
pop
push
repnz
mov
pop
adc
xor
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
pusha
adc
xor
pop
push
bnd
push
fistp
sbb
(bad)
stos
sub
pop
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
and
xor
scas
nop
rcr
out
xchg
pop
cmp
dec
(bad)
dec
hlt
push
mov
adc
imul
sub
pop
scas
mov
sbb
pushf
add
mov
fistp
sbb
movs
xor
dec
push
repnz
mov
clts
sahf
add
pop
int
inc
pop
fld
dec
iret
xchg
gs
cdq
or
pop
inc
inc
sub
cmp
mov
pop
mov
icebp
out
jb
cmp
pop
(bad)
dec
hlt
push
mov
push
push
cmp
adc
pop
push
repnz
mov
aaa
shl
out
jne
sbb
inc
pop
in
cmp
test
cmp
sbb
sub
xchg
test
inc
xor
add
jns
or
push
dec
xchg
pop
mov
xchg
lea
daa
jbe
loope
inc
(bad)
test
jecxz
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
bnd
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
cmc
stos
cdq
inc
mov
or
ins
movs
xor
push
push
repnz
mov
str
xor
dec
push
repnz
mov
aaa
ins
jb
out
jo
les
ja
out
sbb
cdq
or
sbb
loop
pop
push
hlt
adc
push
dec
sbb
cmp
xor
pop
pop
repnz
mov
movups
xor
pop
dec
clc
and
mov
dec
cld
add
js
push
inc
push
and
sbb
cld
add
mov
cmp
jmp
cdq
or
push
and
jbe
or
and
scas
pop
xor
loope
inc
(bad)
sbb
sub
lea
cmp
push
repnz
fistp
adc
xor
pop
push
bnd
push
fistp
adc
xor
pop
push
repnz
cli
pop
mov
cmp
lea
cmp
repnz
mov
into
adc
xor
pop
push
repnz
shl
fwait
sbb
push
adc
cmp
pop
push
push
push
fild
movups
das
and
xor
lahf
xchg
pop
mov
movups
sbb
cmp
mov
cmps
lock
jnp
ret
ds
jnp
sub
hlt
push
mov
sbb
outs
adc
mov
cmp
xchg
sbb
lods
in
and
fwait
femms
arpl
retf
and
sbb
adc
xor
pop
pop
repnz
mov
movups
and
test
mov
push
fnstcw
ja
call
mov
out
int
cli
out
ja
sar
in
sbb
cdq
add
cmp
push
mov
mov
push
fistp
add
int
push
jnp
and
pop
mov
out
jb
cmp
inc
test
and
inc
mov
add
loop
int
inc
jnp
and
inc
movs
lock
cli
sti
out
xchg
cmps
xor
push
rol
adc
aaa
xor
loopne
push
(bad)
xchg
pop
mov
movups
push
and
xor
fist
lea
and
xor
in
pop
mov
movups
push
pop
push
inc
xor
adc
lea
adc
push
hlt
adc
dec
mov
lods
sbb
or
and
xor
lods
xchg
pop
mov
movups
sub
pop
push
out
xor
popf
xchg
pop
mov
add
mov
aaa
ja
in
and
cmps
mov
or
xlat
ds
jnp
sub
ins
mov
pop
sahf
add
and
fidiv
stc
xor
fidivr
adc
xor
pop
inc
repnz
mov
or
stos
cli
out
xchg
mov
fld
dec
rcl
in
cmps
loop
addr16
and
pop
or
pusha
inc
cdq
adc
cmp
cmp
lock
cmps
cdq
dec
mov
cli
out
inc
pushf
jo
mov
out
mov
str
xor
pop
pop
mov
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
push
repnz
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
mov
or
lea
push
pop
push
repnz
pop
mov
and
lea
icebp
push
repnz
and
lock
or
pop
pop
int
pop
adc
mov
pop
mov
movups
and
xor
mov
movups
adc
xor
xchg
xchg
pop
mov
movups
sub
int3
test
inc
cld
sbb
jg
or
sub
cmp
cmp
and
xchg
sbb
or
les
adc
cmps
xor
jp
stc
sub
rol
sbb
int3
fisub
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
inc
pop
retf
and
dec
cdq
adc
cmp
inc
(bad)
dec
into
xchg
jno
mov
fisttp
arpl
popa
int
and
and
xchg
push
cmp
jnp
sub
hlt
pop
xor
and
pop
xor
push
adc
push
dec
out
outs
mov
imul
cmp
das
pop
push
xchg
sub
xchg
xchg
pop
mov
pop
adc
or
scas
or
mov
add
mov
out
xchg
pop
and
test
clc
das
pop
shl
out
xchg
cs
scas
sub
dec
dec
and
pop
mov
adc
imul
dec
aam
lods
pop
dec
sbb
add
xor
dec
push
repnz
mov
adc
lea
mov
push
repnz
mov
push
adc
xor
push
repnz
mov
cmc
adc
xor
pop
push
repnz
push
fistp
adc
xor
push
fistp
adc
xor
pop
push
repnz
fistp
adc
xor
pop
push
repnz
pop
mov
fbld
pop
sub
test
dec
sbb
push
enter
movs
cmp
pop
push
(bad)
xor
mov
pop
mov
movups
sub
pop
push
out
xor
pushf
xchg
pop
mov
movups
push
and
xor
(bad)
xchg
pop
mov
pop
sbb
pop
sub
sbb
scas
enter
in
push
jp
xlat
cmp
in
cmp
mov
push
cmp
add
and
sbb
mov
adc
xchg
pop
pushfw
fstp
mov
leave
mov
mov
enter
movs
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
in
xor
sahf
xchg
pop
mov
add
pop
sub
cmp
mov
and
xchg
adc
lea
(bad)
dec
retf
xchg
dec
inc
mov
mov
xchg
pop
or
rcl
adc
inc
sub
mov
call
std
add
in
out
xchg
mov
ds
pop
in
and
mov
in
sbb
loope
and
xor
stos
cwde
data16
cmp
retf
and
jne
cli
add
jl
or
mov
cs
sahf
inc
mov
cli
out
jne
cmp
dec
pop
retf
and
pop
mov
adc
lea
and
xor
stos
sahf
inc
mov
cmp
and
lock
mov
push
push
or
xor
mov
(bad)
lea
and
push
repnz
fistp
pop
lea
and
repnz
cwde
jne
in
pop
lea
and
repnz
xchg
push
mov
sidtd
xor
inc
pop
fst
jne
jmp
(bad)
fdivr
ja
icebp
xor
rol
sbb
add
and
or
inc
imul
stc
pop
xchg
sbb
mov
aad
cwde
rcr
out
lods
adc
adc
push
repnz
scas
out
push
push
test
and
xor
mov
movups
xor
pop
ins
repnz
mov
or
jl
xor
xor
mov
bndstx
xor
dec
push
repnz
mov
mov
inc
push
sub
test
fld
dec
hlt
push
(bad)
jne
xor
adc
and
pop
fmul
mov
inc
imul
movaps
xor
cmc
jbe
fistp
repnz
and
push
repnz
fistp
mov
movs
xor
out
repnz
fistp
adc
xor
push
push
repnz
fistp
lea
and
in
aas
pop
hlt
pop
lea
inc
or
adc
xor
pop
pop
repnz
mov
movups
xor
pop
dec
repnz
mov
movups
cmp
cs
or
mov
adc
xchg
adc
mov
jmp
xchg
cs
mov
jbe
cmp
mov
sbb
sbb
adc
std
ja
pop
push
repnz
fistp
adc
push
fisub
sub
and
xchg
femms
scas
or
mov
sub
loope
xchg
sbb
pushf
into
fbld
fnstsw
adc
sbb
jl
icebp
xor
rcl
lea
cmp
and
pop
fsubr
pop
shl
out
lea
and
repnz
test
dec
sbb
xor
cmp
xor
xchg
cmp
add
and
push
repnz
mov
movntps
das
sub
push
fistp
push
lea
and
repnz
mov
wbinvd
sub
cmp
mov
cdq
or
adc
mov
repnz
mov
and
xchg
cs
scas
das
sub
test
mov
cli
out
xchg
cmps
adc
mov
mov
movhps
cmp
pop
push
sti
xor
mov
movups
xor
pop
push
mov
push
fistp
movups
xor
jbe
stc
xor
fidivr
adc
xor
pop
pop
repnz
mov
and
xchg
cs
pop
cmp
out
sbb
mov
movhps
sbb
mov
or
xchg
outs
mov
rdpmc
lea
sub
pop
repnz
mov
movups
xor
pop
or
xor
mov
movups
add
and
xor
mov
pop
sbb
mov
repnz
mov
movups
xor
pop
inc
repnz
mov
clc
lods
enter
cs
pop
aas
ja
in
mov
mov
adc
aam
adc
xor
pop
push
repnz
push
fistp
out
jb
cmp
push
stos
mov
sbb
pop
xor
jl
repnz
inc
xchg
pop
mov
jb
lea
cmp
fs
push
repnz
mov
andnps
xor
pop
push
repnz
mov
prefetcht0
xor
mov
xor
xchg
mov
cmps
or
lea
es
push
repnz
mov
pop
adc
xor
push
jnp
sub
movs
mov
or
sub
mov
leave
xor
call
lea
cmp
int3
fisub
out
mov
sysenter
lea
fs
push
repnz
fistp
imul
and
repnz
fistp
sbb
xor
fist
xor
xchg
(bad)
mov
setb
xor
pop
jbe
cmp
mov
dec
sbb
xor
pop
push
repnz
xchg
push
mov
sidtd
xor
dec
push
repnz
xchg
inc
mov
dec
test
fld
dec
hlt
push
mov
or
cmp
cmp
push
aam
pop
lds
lock
std
ja
pop
push
repnz
fistp
out
jb
sbb
sub
inc
pop
retf
and
jne
hlt
add
xchg
pop
int
jl
repnz
cmp
lea
cmp
sub
fs
or
xchg
dec
and
test
xor
cmc
jbe
fistp
inc
lea
and
push
repnz
fistp
outs
lea
and
push
repnz
mov
(bad)
lea
and
cmps
lahf
jne
inc
xor
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
mov
clts
xchg
lahf
jge
enter
add
pop
hlt
dec
mov
hlt
and
nop
cs
jo
aam
push
jnp
jecxz
fnstsw
sbb
and
fidivr
adc
int
mov
aad
lahf
data16
out
xchg
cs
scas
and
fs
sti
pop
mov
das
das
mov
and
jmp
(bad)
mov
mov
xor
jns
repnz
mov
seta
xor
and
xor
fistp
push
lea
and
push
repnz
fistp
ins
lea
and
xor
xchg
cld
add
cmps
mov
daa
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
cmp
ja
out
sbb
enter
cmc
push
arpl
call
ja
mov
movhps
or
scas
or
jmp
mul
movups
sub
int3
test
movs
jmp
out
xchg
pop
sub
test
out
imul
add
and
xor
xchg
mov
aaa
or
out
jns
and
repnz
test
jmp
sbb
xor
cmp
xor
mov
(bad)
lea
and
push
repnz
fistp
push
lea
sub
cmp
pop
mov
movups
xor
pop
pop
repnz
mov
movups
sbb
inc
jnp
and
sub
loope
cmps
out
adc
lds
xor
mov
movups
int
mov
aad
popf
push
mov
cmp
pop
retf
and
pop
xchg
lods
or
push
push
repnz
sbb
add
and
xor
mov
movups
add
and
xor
mov
or
jl
xor
xor
mov
bndstx
xor
dec
push
repnz
mov
movs
push
cmps
dec
inc
push
and
test
fld
dec
hlt
push
xor
xor
lea
aaa
inc
cmps
xor
push
repnz
push
dec
jecxz
add
xor
jns
repnz
mov
bsf
xor
xchg
push
repnz
fistp
mov
add
and
fistp
lods
lea
and
fistp
jle
add
and
stos
lahf
jne
cld
add
cmps
mov
and
xor
mov
movups
xor
pop
dec
repnz
mov
movups
xor
pop
dec
stc
or
inc
imul
stc
push
xchg
jecxz
scas
sbb
inc
jnp
sub
mov
and
xchg
or
mov
cmp
test
sbb
mov
adc
xchg
sbb
int
mov
in
in
pop
mov
movhps
xor
push
push
repnz
test
add
sub
lods
inc
clc
sub
mov
mov
xchg
cs
(bad)
fnstsw
push
pop
call
imul
and
or
push
repnz
pop
mov
or
lea
daa
jbe
inc
xor
xchg
mov
stc
add
inc
sti
out
xchg
movs
xor
dec
pusha
icebp
xor
mov
push
cmp
add
xor
(bad)
push
repnz
fistp
pushf
lea
and
push
repnz
mov
jnp
movs
xor
xchg
push
repnz
fistp
pop
lea
and
movs
lahf
jne
clc
add
cmp
xor
pop
push
repnz
xchg
push
mov
str
xor
inc
push
repnz
mov
wrmsr
lea
pop
mov
sub
and
xchg
push
cmp
jnp
sub
stos
mov
ror
adc
sub
stc
or
inc
imul
adc
inc
adc
xor
pop
push
repnz
mov
lock
jb
pop
inc
push
and
scas
dec
clc
sub
aam
mov
dec
sbb
cmp
cmp
pop
retf
and
jle
loopne
adc
sbb
pop
push
hlt
sbb
xchg
pop
mov
jo
lea
daa
jbe
clc
sub
aam
jg
dec
sbb
add
xor
jns
repnz
mov
setne
xor
int
repnz
fistp
mov
add
and
push
repnz
fistp
or
and
repnz
xchg
cld
push
sbb
test
sbb
xor
mov
movups
xor
pop
inc
repnz
mov
movups
or
dec
fxch
inc
hlt
dec
lea
hlt
and
xchg
push
fnstcw
ja
in
sbb
mov
adc
xchg
or
push
ror
mov
stc
in
pop
mov
movhps
or
scas
or
sahf
inc
mov
cli
out
jl
(bad)
cmp
dec
(bad)
cmp
inc
imul
add
and
xor
mov
aaa
or
out
jns
and
fistp
sbb
add
and
repnz
fistp
outs
lea
and
xor
fistp
test
xor
push
push
repnz
fistp
pop
stos
adc
inc
sbb
ja
hlt
jbe
fistp
sbb
xor
push
push
repnz
mov
ud2
lea
and
stc
sbb
shl
or
fnsave
ja
in
cmp
mov
and
pop
inc
adc
adc
push
dec
stc
cmp
inc
imul
pop
push
imul
dec
aam
fbld
jp
sbb
cmp
bound
dec
mov
add
mov
xor
out
repnz
mov
push
adc
cmp
fs
or
xchg
dec
and
sti
lea
xor
cmc
jbe
fistp
adc
xor
cmp
xor
fistp
sbb
xor
push
push
repnz
fistp
inc
lea
and
mov
add
xor
xor
pop
push
repnz
mov
sidtd
xor
dec
push
repnz
xchg
inc
mov
femms
xchg
cmp
mov
fld
dec
aam
inc
cdq
or
cmp
sbb
sub
mov
psubb
sbb
int
pop
push
xchg
sub
xchg
xchg
pop
mov
pop
adc
or
scas
or
sahf
inc
mov
cli
or
sub
retf
and
pop
xchg
xor
retf
xor
push
push
repnz
push
mov
lock
jb
adc
xor
mov
fistp
sbb
add
and
xor
fistp
adc
xor
push
push
repnz
xchg
push
mov
cmovb
xor
fst
xor
mov
movhps
sub
ja
hlt
jbe
fistp
sbb
xor
push
push
repnz
mov
clts
lea
and
stc
sbb
(bad)
xchg
outs
dec
cdq
adc
cmp
cmp
jnp
sub
hlt
pop
mov
fist
pop
dec
mov
xchg
int3
test
lods
lods
push
push
mov
and
or
and
inc
mov
sbb
push
in
fisub
aad
lahf
xchg
out
(bad)
and
add
mov
stc
add
xchg
pop
int
dec
pusha
div
mov
mov
push
cmp
add
xor
pop
push
repnz
xchg
retf
movzx
xor
or
xor
fistp
inc
lea
and
repnz
fistp
ror
adc
sub
call
rcl
jecxz
adc
movs
xor
push
push
repnz
mov
lar
xor
inc
push
repnz
xchg
sbb
sbb
cmp
cmp
jnp
das
jge
movs
mov
cmc
pop
inc
adc
adc
push
dec
clc
cmp
inc
imul
sub
das
movs
xor
pop
pop
repnz
mov
call
out
xchg
or
pushf
mov
retf
and
jne
cli
add
pop
pop
int
pop
push
not
and
mov
movups
sbb
push
dec
clc
cmp
inc
imul
push
adc
repnz
mov
jno
movs
xor
fist
xor
xchg
pop
mov
nop
xor
or
fistp
ins
lea
and
push
repnz
xchg
cli
add
xor
sbb
xor
push
push
repnz
mov
bndstx
xor
dec
push
repnz
mov
invd
lea
scas
dec
jnp
and
stos
scas
enter
jmp
inc
dec
sub
mov
sti
sbb
mov
adc
xchg
push
sub
int
pop
push
xchg
sub
xchg
xchg
pop
mov
pop
adc
or
scas
or
(bad)
push
test
cli
out
jl
(bad)
cmp
pusha
and
pop
xchg
imul
movs
xor
int
repnz
push
mov
lock
jb
adc
and
fistp
sbb
add
and
push
repnz
fistp
push
lea
and
push
repnz
fistp
ins
lea
and
repnz
fistp
pop
stos
sbb
popa
(bad)
jnp
xor
pop
mov
movups
xor
pop
pop
repnz
mov
movups
xor
pop
inc
stc
sbb
rcl
cmp
cmp
inc
(bad)
inc
hlt
pop
mov
fistp
add
cmp
xchg
int3
test
lods
cwde
push
push
mov
and
or
and
inc
cdq
adc
sbb
int
inc
jnp
sub
lods
push
mov
add
repnz
mov
add
xchg
pop
int
dec
pusha
div
inc
fidivr
or
or
and
repnz
fistp
dec
lea
and
push
repnz
fistp
jp
add
and
aas
jge
mov
unpcklps
xor
push
push
repnz
mov
sysret
lea
or
dec
fxch
dec
hlt
dec
mov
adc
cmp
sbb
sub
mov
not
mov
rcr
jecxz
push
lea
pop
mov
sub
jl
jb
pop
inc
push
sub
dec
pop
retf
and
pop
xchg
push
or
push
push
repnz
sbb
add
and
xor
mov
movups
and
xor
call
lea
and
repnz
xchg
push
mov
sidtd
sbb
jge
cmps
mov
or
xor
jp
retf
and
dec
and
pop
mov
xor
cli
jbe
fistp
adc
xor
add
xor
mov
movntps
xor
pop
push
repnz
fistp
cmp
push
ins
movs
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
xchg
ds
cdq
sbb
cmp
cmp
jnp
and
aas
lods
mov
mov
and
aas
jge
cmps
mov
sbb
pop
sub
test
out
imul
add
and
ins
push
fistp
dec
sbb
xor
sbb
fistp
push
lea
and
repnz
mov
movhps
ja
pop
push
repnz
push
fistp
adc
xor
pop
push
repnz
jl
out
cs
pop
cmp
and
fistp
xchg
cmp
xor
dec
pusha
icebp
xor
mov
push
cmp
add
xor
aad
repnz
mov
seta
xor
add
xor
fistp
add
xor
call
xor
mov
xadd
pop
adc
sub
dec
sub
aam
and
jmp
adc
cmp
pop
push
(bad)
xor
lods
xchg
pop
mov
movups
sub
pop
push
out
xor
mov
sbb
ja
sbb
sub
sbb
cdq
or
cmp
cmp
push
aam
pop
shl
adc
std
ja
pop
push
repnz
fistp
out
jb
cmp
push
movs
mov
sbb
xor
ret
xor
mov
or
pusha
mov
or
xchg
mov
lea
fs
push
repnz
mov
(bad)
lea
and
push
repnz
mov
setne
xor
push
push
repnz
mov
setbe
xor
pop
jbe
cmp
pop
mov
push
or
adc
xor
pop
push
repnz
mov
movups
xor
pop
dec
repnz
mov
and
xchg
cs
test
xlat
inc
jnp
sub
hlt
push
xor
and
xchg
div
shl
adc
xor
push
mov
adc
sbb
xor
mov
aaa
pop
jb
out
ja
lds
push
dec
stc
or
inc
imul
pop
sbb
int
pop
push
shl
push
fistp
cmp
sub
inc
pop
retf
and
dec
and
pop
mov
xor
cli
jbe
fistp
jbe
add
and
xor
mov
movhps
xor
add
xor
fistp
cmp
push
ins
movs
xor
pop
push
repnz
mov
nop
xor
dec
push
repnz
xchg
ds
cdq
sbb
cmp
cmp
pop
(bad)
dec
(bad)
xchg
jge
mov
adc
inc
adc
xor
pop
hlt
aas
mov
stc
add
xchg
pop
int
ja
in
dec
rol
xor
(bad)
and
xor
mov
dec
push
lea
and
repnz
mov
movhps
xor
pop
push
repnz
xchg
leave
adc
push
xor
push
fistp
adc
xor
push
jnp
and
and
enter
hlt
push
inc
dec
loop
pop
push
hlt
adc
mov
mov
xor
jns
repnz
mov
movups
xor
(bad)
push
repnz
fistp
fisttp
xor
not
xor
xchg
into
mov
nop
xor
xor
xor
mov
xadd
pop
adc
sub
in
aas
pop
hlt
adc
adc
xor
pop
pop
repnz
mov
movups
and
xor
mov
add
lock
out
xchg
mov
(bad)
inc
pop
fld
inc
hlt
dec
xor
add
sbb
mov
adc
hlt
pusha
inc
adc
femms
pusha
scas
or
scas
or
loopne
mul
movups
cmp
pop
push
in
cmp
mov
dec
sti
and
xchg
cs
scas
sub
int3
test
stos
enter
sbb
popa
pushf
fisub
fidivr
adc
sbb
jl
lock
icebp
xchg
pop
mov
pushf
adc
sub
int
and
test
cmc
jbe
fistp
adc
xor
and
xor
fistp
test
xor
push
push
repnz
fistp
inc
lea
and
mov
push
sbb
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
sub
cmps
dec
sti
sbb
test
jmp
cmp
out
sbb
lds
sbb
int
push
push
not
scas
in
pop
mov
movhps
or
scas
or
mov
aaa
das
jb
out
ja
(bad)
ss
dec
stc
or
imul
gs
jle
(bad)
movs
xor
jbe
clc
cs
out
imul
push
adc
repnz
mov
bndstx
xor
fcom
xor
fistp
ins
lea
and
repnz
mov
(bad)
lea
and
xor
xchg
cmc
add
xor
sbb
xor
push
push
repnz
mov
bndstx
xor
dec
push
repnz
mov
(bad)
lea
scas
inc
jnp
and
sub
and
xchg
cs
jae
fdivr
push
jnp
das
jge
ins
les
sub
xchg
sbb
int
mov
mov
jecxz
sbb
cmp
adc
dec
lea
aaa
push
jb
out
jno
(bad)
aaa
push
dec
stc
or
inc
imul
adc
xor
push
push
repnz
push
mov
lock
jb
adc
aaa
and
repnz
test
jmp
sbb
xor
or
xor
fistp
jo
add
and
push
repnz
xchg
pop
mov
cmovg
xor
inc
pop
in
aas
jge
mov
unpckhps
xor
push
push
repnz
mov
lar
sbb
jge
cmps
mov
or
cmp
pop
xor
push
setp
movups
int
mov
(bad)
mov
push
mov
cmp
push
mov
push
adc
xor
leave
push
repnz
sbb
add
and
xor
mov
movups
add
and
xor
in
xchg
pop
mov
and
outs
movs
xor
pop
push
repnz
mov
nop
xor
inc
pop
fld
jne
(bad)
and
xchg
cs
(bad)
fdiv
or
les
out
out
jb
adc
aaa
and
repnz
test
jmp
sbb
xor
sub
xor
fistp
sub
xor
add
xor
fistp
pop
lea
and
jmp
rcr
jecxz
adc
movs
xor
push
push
repnz
mov
lar
sbb
jge
stos
mov
or
cmp
pop
xor
adc
pop
mov
movups
int
mov
aad
cwde
retw
sbb
out
xchg
cs
scas
sub
test
lods
cld
daa
adc
mov
repnz
mov
movups
xor
pop
push
repnz
mov
movups
adc
adc
inc
pop
cmc
jbe
fistp
push
lea
and
repnz
mov
mov
inc
push
or
hlt
push
inc
or
jecxz
aaa
cmps
cmp
and
div
dec
fidivr
or
movs
xor
es
repnz
fistp
js
add
and
push
repnz
mov
packssdw
xor
cmp
repnz
movs
cwde
jne
in
pop
lea
and
repnz
xchg
push
mov
sidtd
xor
inc
pop
fst
jne
stc
and
call
push
jnp
ss
mov
loop
adc
das
sub
test
mov
cli
out
xchg
mov
jmp
mov
das
adc
add
and
xor
xchg
adc
pop
adc
xor
push
repnz
fistp
adc
xor
push
repnz
fistp
aaa
cmps
sbb
and
xor
mov
movups
and
pop
push
jmp
jge
stos
mov
or
sub
mov
mov
(bad)
push
cdq
jns
sub
out
xchg
movs
xor
dec
pusha
icebp
xor
mov
push
cmp
add
xor
les
xor
mov
bndstx
xor
rcl
xor
fistp
adc
xor
xor
xor
fistp
mov
xor
mov
xor
movs
lahf
jne
cld
add
das
lods
xor
pop
push
repnz
mov
movups
xor
pop
inc
repnz
mov
movups
cmp
and
dec
mov
jmp
xchg
or
xchg
(bad)
dec
aad
jbe
mov
faddp
cmps
xor
jp
clc
cs
out
imul
push
dec
das
cmps
xor
pop
push
repnz
mov
aaa
daa
jb
out
jl
lds
push
jnp
sub
lods
js
sbb
pop
cmps
lock
sub
retf
and
inc
call
pop
adc
add
push
repnz
mov
or
pusha
mov
or
xchg
mov
jecxz
xor
add
fs
push
repnz
mov
movd
xor
push
push
repnz
fistp
ins
lea
and
push
repnz
fistp
cwde
lea
and
call
lahf
push
cdq
push
or
adc
xor
pop
pop
repnz
mov
movups
and
xor
mov
and
xchg
(bad)
mov
add
jge
mov
and
xchg
(bad)
mov
cmps
xor
call
jb
out
outs
mov
mov
push
fistp
sbb
sub
stos
inc
clc
and
out
imul
clts
popa
pushf
push
fisub
clc
mov
or
lea
or
in
outs
mov
mov
lar
xor
jle
repnz
mov
push
mov
emms
lea
and
repnz
xchg
cmp
add
and
xor
fistp
or
xor
pop
push
repnz
mov
bndstx
xor
dec
push
repnz
mov
movs
or
sub
test
fld
dec
hlt
push
xor
or
xchg
sub
movs
xor
pop
push
repnz
mov
fld
wbinvd
pushfw
dec
fisub
(bad)
mov
push
mov
xor
and
xor
ficom
sbb
inc
push
push
xor
pop
push
repnz
pop
mov
or
lea
sub
push
push
fistp
aaa
cmps
sbb
ins
loope
and
xor
mov
movups
and
pop
push
in
jge
mov
clc
or
push
or
fstp
lock
lea
and
mov
dec
sbb
add
and
push
repnz
fistp
mov
add
and
xor
fistp
imul
and
repnz
fistp
pop
stos
sbb
inc
sbb
sub
hlt
jbe
fistp
push
lea
and
repnz
mov
sysret
lea
and
fnstcw
jne
clc
and
nop
cs
(bad)
fdivr
ja
jmp
mov
in
movhps
cmp
cmp
fisttp
adc
xor
push
pop
retf
and
jne
inc
sub
fiadd
push
and
shl
out
(bad)
and
add
fidivr
add
jo
int
dec
pusha
icebp
xor
fistp
cmp
xor
je
repnz
xchg
push
mov
movups
xor
bound
xor
mov
bndstx
xor
pop
jbe
cmp
mov
pop
sar
push
dec
enter
movs
and
xor
stos
sahf
jne
stc
and
xchg
cs
scas
sbb
loopne
mov
or
cmp
sub
repnz
mov
getsec
lea
fs
push
repnz
mov
movups
xor
js
repnz
mov
(bad)
add
and
out
cmp
mov
push
push
mov
and
sbb
lds
mov
push
sbb
inc
out
mov
getsec
lea
fs
push
repnz
mov
cvtpi2ps
xor
pop
push
repnz
mov
(bad)
lea
and
repnz
xchg
cld
push
sbb
sub
xor
mov
movups
and
ja
out
sbb
pop
adc
xchg
(bad)
and
xor
gs
pusha
stos
lea
sub
repnz
mov
getsec
lea
fs
push
repnz
mov
rdtsc
lea
and
repnz
mov
rdtsc
lea
and
out
cmp
mov
push
push
mov
and
sbb
les
mov
push
cmp
inc
pop
fstp
and
add
fs
push
repnz
mov
rcpps
xor
jb
repnz
mov
mov
add
and
repnz
xchg
inc
or
repnz
mov
movups
cmp
icebp
inc
fxch
dec
hlt
dec
mov
inc
add
jp
xor
popa
mov
or
xor
sub
repnz
mov
getsec
lea
fs
push
repnz
xchg
jle
jecxz
xor
movs
xor
js
repnz
mov
sysexit
lea
and
in
jge
mov
push
push
mov
and
sbb
ret
xchg
outs
dec
mov
lds
push
sbb
push
jnp
xor
mov
getsec
lea
fs
push
repnz
mov
andnps
xor
bound
xor
mov
mov
add
and
xor
xchg
hlt
add
or
repnz
mov
movups
cmp
icebp
dec
fxch
dec
hlt
dec
mov
hlt
add
push
cmp
je
repnz
push
pop
mov
and
jns
xor
cmp
xor
mov
dec
pop
lea
and
xor
xchg
pop
mov
sysret
lea
and
xchg
sub
xchg
xchg
pop
mov
or
lea
cmp
jmp
xchg
xor
bndstx
aaa
and
xor
mov
movups
xor
pop
push
and
mov
lar
xor
jp
repnz
mov
movaps
xor
outs
push
repnz
mov
mov
add
and
repnz
mov
movhps
and
fnstsw
adc
cmp
jmp
hlt
dec
adc
cmp
adc
xor
call
mov
add
xor
jp
repnz
mov
movups
xor
push
push
repnz
xchg
jb
jecxz
xor
movs
xor
jl
repnz
xchg
inc
or
repnz
mov
and
xchg
cs
scas
sbb
push
fbstp
movs
add
xor
jns
repnz
mov
sysret
lea
and
repnz
mov
movups
push
add
mov
push
fistp
sbb
sub
ja
lock
movs
call
adc
xor
pop
push
repnz
mov
movups
push
and
sbb
mov
cmovbe
xor
ja
hlt
jbe
fistp
cmp
xor
ja
repnz
mov
rdtsc
lea
and
stos
sahf
jne
out
jo
outs
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
pop
fsub
dec
and
inc
lea
xor
hlt
jbe
fistp
cmp
xor
jl
repnz
xchg
jne
jecxz
xor
xor
mov
xor
cmps
sahf
jne
out
jo
dec
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
pop
fsubr
pop
hlt
pop
xchg
dec
and
inc
lea
xor
hlt
jbe
fistp
sbb
xor
js
repnz
xchg
jle
jecxz
cmp
xor
mov
stos
sahf
jne
loopne
jo
inc
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
inc
outs
xor
push
jp
cmp
mov
cmova
xor
ja
hlt
jbe
fistp
xor
movs
xor
push
push
repnz
xchg
jp
jecxz
xor
xor
mov
lock
movs
sahf
jne
loopne
jo
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
inc
push
jmp
jge
mov
cmovbe
xor
ja
hlt
jbe
fistp
sbb
xor
ja
repnz
mov
rdtsc
lea
and
mov
or
xchg
pusha
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
pop
fsubr
pop
hlt
pop
xchg
dec
and
inc
lea
xor
hlt
jbe
fistp
adc
xor
jl
repnz
mov
(bad)
lea
and
movs
sahf
jne
loopne
jo
xor
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
inc
push
and
jmp
and
inc
lea
xor
hlt
jbe
fistp
sbb
xor
ja
repnz
mov
rdtsc
lea
and
stos
sahf
jne
out
jo
cmp
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
pop
fsub
hlt
pop
xchg
dec
and
inc
lea
xor
hlt
jbe
fistp
xor
xor
ja
repnz
mov
sysexit
lea
and
mov
or
xchg
inc
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
pop
fsubr
pop
hlt
pop
xchg
dec
and
lea
xor
hlt
jbe
fistp
push
lea
and
repnz
xchg
ja
jecxz
cmp
add
and
repnz
xchg
cli
add
mov
mov
push
fistp
adc
cmp
div
add
movs
xor
jbe
icebp
aaa
push
sar
add
out
xor
dec
pusha
lock
fistp
or
xor
inc
push
repnz
xchg
pop
mov
rdtsc
lea
and
repnz
fisttp
adc
xor
push
jnp
and
jne
loope
ret
sbb
cmp
sbb
xor
mov
movups
xor
pop
push
repnz
rcl
cmp
add
and
push
repnz
mov
dec
sbb
xor
push
push
repnz
mov
(bad)
add
and
xor
mov
movhps
and
fidivr
adc
sbb
dec
pop
fld
pop
mov
scas
adc
xor
push
push
repnz
mov
dec
sbb
xor
push
push
repnz
mov
(bad)
lea
and
repnz
xchg
mov
loope
pop
stos
sbb
inc
je
and
setp
movups
sub
cmps
dec
clc
sbb
fnstsw
bndstx
xor
dec
pusha
lock
fistp
cmp
xor
js
repnz
xchg
jle
jecxz
sbb
xor
jl
repnz
mov
xadd
pop
adc
sub
div
aaa
shl
adc
cmp
loope
fxch
inc
aad
and
movups
cdq
and
lock
fistp
cmp
xor
js
repnz
mov
sysexit
lea
and
repnz
xchg
pop
mov
xadd
pop
adc
sub
div
aaa
shl
sbb
add
or
dec
fxch
dec
aad
and
movups
cdq
and
lock
fistp
cmp
xor
jl
repnz
mov
(bad)
lea
and
repnz
mov
xadd
pop
adc
sub
div
aaa
rcl
adc
cmp
loope
fxch
dec
aad
and
fcom
lea
cmp
sbb
push
fistp
cmp
xor
jl
repnz
mov
sysexit
lea
and
repnz
mov
xadd
pop
adc
sub
div
aaa
rcr
sbb
add
or
dec
fxch
dec
aad
and
xlat
adc
sbb
add
mov
push
cmp
xor
push
push
repnz
mov
movups
xor
js
repnz
mov
xadd
pop
adc
sub
div
aaa
shr
sbb
add
or
dec
fxch
inc
aad
and
movups
cdq
and
lock
fistp
cmp
xor
pop
push
repnz
mov
femms
lea
and
repnz
xchg
inc
mov
xadd
pop
adc
sub
div
aaa
vpsrlw
jecxz
adc
scas
sbb
pop
hlt
or
sbb
xor
dec
pusha
lock
fistp
cmp
xor
jl
repnz
mov
(bad)
add
and
repnz
xchg
jne
jecxz
sar
adc
sub
div
aaa
shl
adc
cmp
loope
fxch
dec
aad
and
movups
cdq
and
icebp
xor
fistp
cmp
xor
imul
xchg
pop
mov
bndstx
xor
bound
xor
mov
bndstx
xor
pop
jbe
cmp
mov
pop
sar
jb
enter
movs
and
xor
stos
sahf
jne
(bad)
and
fwait
cs
scas
sbb
mov
mov
or
push
add
sub
repnz
mov
getsec
lea
fs
push
repnz
mov
(bad)
add
and
repnz
xchg
pop
mov
(bad)
add
and
jmp
xchg
aas
lods
mov
push
mov
and
sbb
(bad)
xchg
outs
inc
mov
fist
push
sbb
push
jnp
xor
mov
getsec
lea
fs
push
repnz
xchg
jp
jecxz
cmp
movs
xor
pop
push
repnz
mov
sysexit
lea
and
out
cmp
mov
push
push
mov
and
sbb
enter
mov
push
push
cmp
inc
pop
fstp
add
lea
fs
push
repnz
mov
bndstx
xor
jns
repnz
mov
(bad)
lea
and
jmp
mov
adc
add
push
and
cmp
cmps
mov
movs
pop
adc
pop
pop
fsubr
pop
hlt
sbb
lea
xor
hlt
jbe
fistp
sbb
xor
pop
push
repnz
mov
rdtsc
lea
and
stos
sahf
jne
out
jo
or
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
push
clc
sbb
xchg
ds
and
inc
lea
xor
hlt
jbe
fistp
xor
xor
jl
repnz
mov
sysexit
lea
and
mov
or
xchg
aas
dec
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
pop
fsubr
pop
hlt
pop
xchg
dec
and
js
add
xor
hlt
jbe
fistp
adc
xor
inc
push
repnz
mov
nop
imul
xor
mov
ror
inc
pusha
(bad)
cmc
and
popf
rcl
mov
dec
mov
add
and
repnz
mov
movhps
xor
pop
jbe
sbb
fistp
js
add
xor
hlt
jbe
fistp
cmp
xor
outs
push
repnz
mov
bndstx
xor
pop
push
repnz
xchg
inc
or
repnz
mov
movups
sbb
inc
jnp
das
pop
hlt
pop
xchg
xor
bndstx
xor
jbe
clc
sbb
fistp
dec
lea
xor
hlt
jbe
fistp
xor
xor
js
repnz
xchg
jp
jecxz
xor
movs
xor
mov
lock
cmps
sahf
jne
out
jo
jns
das
movs
xor
pop
push
repnz
mov
jecxz
enter
cmps
push
push
clc
sbb
ds
mov
movups
xor
pop
push
xchg
sbb
(bad)
mov
je
movs
xor
pop
push
cmp
push
fistp
daa
fbld
xor
pop
push
icebp
xor
repnz
icebp
mov
add
push
mov
xor
cmp
adc
repz
js
xor
mov
pop
out
movs
(bad)
cmp
call
pop
fistp
pop
xchg
retf
push
stc
xor
push
mov
mov
(bad)
mov
popf
pop
das
sbb
cmc
imul
adc
fwait
sub
(bad)
cmp
sbb
sbb
and
or
pop
cdq
and
cmp
mov
mov
hlt
jl
xchg
dec
das
lds
popa
adc
xlat
cmp
xor
test
das
cmp
jg
xor
xchg
dec
mov
imul
add
cmc
std
stos
std
mov
test
stos
lods
call
or
pop
mov
xor
cmps
ret
xor
push
repnz
hlt
push
int
jl
lea
xor
jmp
jl
xor
mov
adc
lods
clc
or
jp
or
pop
mov
daa
xchg
cmps
inc
das
ret
pop
or
adc
xchg
xchg
pop
mov
and
mov
jo
cmp
mov
aad
inc
cmp
test
sbb
mov
sbb
outs
bound
mov
sti
mov
int3
movs
mov
xor
mov
aam
cmp
mov
sbb
push
sti
xor
shr
cmps
xor
lods
clc
or
jp
or
pop
mov
push
shl
and
fistp
and
lea
adc
cld
add
mov
daa
xchg
cmps
pop
das
leave
lods
out
add
adc
xlat
mov
paddd
call
jmp
(bad)
cmps
inc
das
enter
pop
push
repnz
loope
xchg
pop
mov
ud0
xor
fld
sbb
mov
and
lea
adc
jecxz
in
and
fdiv
lahf
xchg
pop
mov
shrd
xor
pop
push
jp
jae
mov
and
dec
movs
and
or
pop
cdq
les
adc
lods
in
pop
push
jnp
adc
mov
xor
xchg
inc
movs
xor
pop
push
mov
enter
pop
mov
bswap
lods
adc
xor
retf
sbb
cmc
jmp
cmps
fnstenv
loope
out
or
cmc
xor
jno
rcr
int
das
(bad)
lods
add
call
mov
shl
mov
sbb
loope
popf
xchg
mov
mov
outs
dec
cmp
xchg
jnp
shl
sbb
pop
push
repnz
xchg
xchg
push
mov
jle
(bad)
mov
(bad)
pop
daa
sbb
cmc
loope
sti
mov
xor
and
dec
prefetch
xor
(bad)
jo
cmp
mov
in
jl
les
sbb
loope
popf
mov
lods
scas
sbb
outs
shl
fistp
xor
mov
pop
outs
dec
cmp
xchg
gs
(bad)
lahf
sub
push
pushf
sbb
sbb
jo
cmp
mov
fnstenv
mov
sbb
mov
cmps
or
test
repnz
push
popf
mov
lods
test
sahf
mov
xor
pop
popf
pushf
mov
adc
xor
mov
sbb
mov
and
lods
sahf
sbb
push
repnz
jmp
pushf
test
add
or
jp
or
pop
mov
daa
sub
push
adc
mov
cmp
mov
xor
stos
add
pop
int
pop
fistp
pop
cmps
xchg
icebp
lods
out
or
jp
or
push
mov
movups
xor
pop
push
xchg
sbb
(bad)
(bad)
xchg
pop
mov
shld
xor
pop
push
jbe
mov
clc
xchg
push
mov
paddsw
fwait
sub
push
sbb
xchg
cmp
call
sub
add
cwde
mov
sbb
push
icebp
xor
add
pop
lea
adc
neg
add
adc
cwde
test
adc
imul
jo
xor
mov
pop
iret
movs
dec
adc
xor
ret
pop
cmp
fprem1
cmc
stos
adc
fidivr
out
mov
out
xor
or
cmp
lea
and
repnz
loope
popf
adc
mov
or
jo
xor
mov
and
lods
push
adc
xor
sub
adc
xlat
addr16
mov
(bad)
xchg
add
pop
add
xchg
pop
mov
jb
mov
push
push
repnz
xlat
imul
int
cmp
nop
cmc
shr
lea
adc
dec
fnstcw
or
push
mov
lfs
neg
sbb
adc
xlat
pusha
mov
scas
test
and
or
or
mov
and
repnz
mov
cmovnp
xor
fnsave
xor
mov
daa
call
and
loope
popf
lea
adc
mov
neg
xor
mov
push
shl
xor
loop
xor
pop
mov
psllw
xor
pop
push
sbb
inc
pushf
cmp
loop
adc
xor
pop
push
push
xchg
pop
mov
paddusb
and
sbb
loope
popf
cwde
mov
sbb
outs
jno
mov
mov
packssdw
popa
or
jo
cmp
mov
fnstenv
xor
pop
push
imul
loope
mov
adc
pop
and
repnz
(bad)
xchg
pop
mov
movnti
xor
xchg
pop
sahf
xor
xchg
sahf
call
push
mov
cmp
xchg
lea
aaa
lea
sub
push
sbb
sbb
jo
cmp
idiv
mov
shl
std
sub
loope
popf
mov
sbb
outs
dec
cmp
xchg
cs
jle
or
sub
and
xchg
jne
dec
movs
xor
cwde
outs
lods
sbb
(bad)
jge
sbb
sbb
call
xchg
xor
xchg
repz
js
sbb
pop
popf
enter
(bad)
lods
retf
mov
cmp
loope
xchg
pop
mov
prefetch
cli
or
push
icebp
xor
inc
mov
mov
push
adc
fsubr
jmp
fbstp
mov
fcomp
inc
jnp
adc
xlat
leave
xchg
push
mov
bswap
cmps
adc
pop
push
jnp
adc
mov
movups
xor
pop
push
arpl
fbstp
xor
mov
or
jp
or
daa
mov
movups
pushf
sub
jp
sbb
test
adc
xor
push
push
repnz
in
xchg
movs
jo
sar
and
and
repnz
mov
(bad)
adc
mov
and
xchg
mov
out
mov
(bad)
in
adc
xor
jg
cmps
jp
fistp
push
add
ds
repnz
mov
movups
xor
or
lock
mov
cmp
fwait
add
and
push
repnz
xchg
jnp
jecxz
outs
pop
and
fistp
adc
xor
pop
push
repnz
xchg
push
mov
movups
xor
pop
push
repnz
mov
movups
xor
in
push
cmps
xor
jo
mov
cmp
ins
movs
js
gs
clc
xor
fsubp
xchg
dec
mov
push
mov
and
sub
outs
fidivr
movhps
xor
ins
push
cmps
xor
cld
xchg
or
push
adc
and
push
hlt
xor
fsubr
xchg
dec
mov
or
mov
adc
push
cmp
std
fdivr
movhps
xor
dec
push
lock
push
fbld
(bad)
mov
ins
movs
push
and
adc
mov
or
lea
adc
mov
(bad)
aaa
or
stos
xchg
fdiv
mov
cmc
push
scas
xor
seto
mov
pop
mov
adc
jecxz
lds
xor
adc
dec
lea
adc
push
in
jns
mov
movhps
cmp
cld
push
dec
ss
fistp
add
inc
adc
leave
and
push
hlt
xor
scas
xchg
pop
mov
or
adc
mov
and
xchg
mov
lea
and
imul
fild
(bad)
mov
lds
xor
mov
or
mov
adc
stc
and
lahf
xor
fidivr
or
(bad)
rcl
movs
cmp
mov
fist
add
(bad)
push
ins
movs
and
gs
hlt
xor
jmp
pop
inc
lea
adc
lods
and
push
cmp
fidiv
or
lea
movs
xor
fistp
xor
sahf
out
icebp
cvtdq2ps
mov
sbb
hlt
xor
jmp
add
lea
adc
scas
and
xchg
cmp
fbstp
or
(bad)
in
sbb
xor
adc
adc
aad
pop
mov
pcmpgtd
mov
in
clc
xor
mov
add
add
repnz
pop
ds
scas
xchg
xchg
mov
ficomp
movs
leave
and
fistp
cmpxchg
inc
or
xor
iret
cld
xchg
push
mov
pop
cmp
stos
and
add
mov
add
lea
ds
cmps
ds
fidivr
adc
xor
dec
push
pop
xor
fistp
movups
and
pop
push
call
xchg
pop
mov
or
je
cwde
and
repnz
shr
(bad)
jl
and
xor
sub
xchg
pop
and
push
div
push
fnstsw
xchg
pop
mov
rdpmc
lea
and
repnz
ficomp
push
adc
aaa
and
shl
inc
fisttp
xchg
dec
mov
imul
mul
dec
push
in
mov
scas
xchg
dec
mov
lar
and
dec
push
or
inc
fild
sysret
lea
adc
and
push
push
call
xchg
inc
mov
(bad)
mov
adc
and
in
jg
mov
push
xor
pop
and
mov
inc
fild
str
and
lock
call
xchg
dec
mov
bts
and
jecxz
mov
mov
push
add
xor
push
sbb
inc
fistp
movups
add
jne
lea
fist
xchg
and
xchg
movs
call
ffreep
call
push
adc
cmps
mov
pop
push
cmps
xor
shr
mov
mov
lldt
xor
pop
push
repnz
fild
movups
mov
dec
jo
xor
fistp
setno
push
and
repnz
cmp
dec
xchg
call
movs
xor
fcom
adc
fnstsw
movups
jmp
fistp
in
(bad)
movs
xor
pop
push
jb
inc
push
xchg
retf
(bad)
movs
add
and
fild
pop
mov
sysret
lea
and
jge
xor
stos
xchg
in
es
(bad)
lds
push
xor
dec
push
retf
xor
mov
movups
and
push
push
fistp
and
sbb
mov
and
xor
fisttp
adc
ins
and
scas
mov
jae
movs
jmp
fistp
xchg
cmp
add
and
push
xor
pusha
call
pop
(bad)
fst
cmps
movs
push
and
stos
xchg
xor
xor
dec
push
add
inc
ficomp
movups
and
xchg
push
fistp
and
xor
pop
push
in
sbb
in
xchg
jbe
movs
adc
pop
and
sub
pop
mov
minps
xchg
hlt
pop
push
repnz
out
nop
(bad)
mov
jns
movs
and
push
push
mov
dec
pop
mov
sysret
lea
adc
mov
repz
stos
xchg
repnz
or
xor
dec
push
movs
ss
movups
or
push
fistp
ja
xor
and
xor
fcmove
nop
outs
mov
sub
lea
and
push
shl
lahf
mov
pavgb
dec
jns
push
repnz
push
xchg
push
mov
sqrtps
pop
adc
and
cs
add
fs
cmc
pop
mov
sldt
add
hlt
xor
xor
lods
pushf
retf
or
xor
pop
dec
or
sbb
mov
lea
(bad)
movs
es
push
repnz
cmp
dec
xchg
cmp
ja
cmp
push
xor
fcom
adc
mov
movups
sahf
and
push
mov
push
fistp
mov
movs
xor
pop
push
jb
inc
call
xchg
fbstp
add
add
push
fnsave
adc
mov
movups
jbe
sub
lock
mov
or
shl
xor
dec
push
jge
xor
clc
xchg
(bad)
leave
loope
adc
mov
sbb
sahf
push
fistp
pop
lea
mov
push
loope
mov
setno
mov
int
lea
and
pop
mov
minps
mov
pop
push
repnz
cmc
xchg
test
pop
adc
and
gs
adc
add
lods
inc
pop
mov
lar
and
lock
scas
xchg
xor
xor
dec
push
dec
xor
push
loope
adc
xor
add
aam
fistp
push
mov
mov
and
xor
mov
(bad)
adc
shl
push
cdq
xor
mov
bsr
fistp
repnz
fst
sub
movs
and
jle
into
xor
pop
mov
lar
dec
and
pop
icebp
xor
scas
xchg
daa
mov
or
sub
and
push
xor
cmps
loopne
adc
push
daa
fst
sub
mov
or
(bad)
adc
mov
loope
mov
(bad)
xchg
shl
add
es
push
xor
xchg
pop
mov
setno
retf
push
repnz
cmp
sbb
movs
and
sub
xor
pop
mov
lar
xchg
and
xor
scas
xchg
div
in
imul
xchg
mov
lea
adc
mov
sbb
push
fistp
cmc
mov
and
xor
fcom
in
sti
xor
lea
and
lahf
mov
setb
arpl
repnz
cmp
dec
mov
pmaddwd
push
adc
and
loop
in
call
lar
cld
and
sbb
xor
scas
xchg
lods
mov
or
(bad)
int
imul
xchg
and
loopne
adc
jae
xchg
bound
mov
or
ficom
mov
xor
pop
push
loope
loope
call
pop
adc
into
and
push
adc
sbb
lock
test
and
inc
fcomip
nop
xor
push
adc
and
and
fbstp
pop
mov
lar
shl
xor
xor
scas
xchg
fnstenv
test
and
test
pop
xlat
loopne
adc
stos
mov
fistp
mov
xor
pop
push
loope
das
fstp
xchg
pop
mov
adc
shl
push
div
ret
xchg
pop
mov
(bad)
test
push
pop
push
repnz
xchg
inc
adc
and
loop
icebp
xor
pop
mov
lar
daa
and
daa
icebp
xor
scas
xchg
pop
mov
mov
and
mov
xchg
dec
loopne
adc
dec
daa
inc
push
dec
fistp
ror
xor
pop
push
loope
or
jbe
jbe
mov
adc
fldenv
test
xor
pop
mov
shrd
mov
inc
fistp
xchg
mov
push
push
adc
and
gs
sbb
adc
jecxz
add
jb
and
icebp
xor
scas
xchg
adc
cdq
xchg
imul
xchg
retf
movups
push
daa
pop
push
jle
push
fistp
pop
test
(bad)
sub
loope
(bad)
xlat
popf
pushf
or
add
sub
stos
xor
push
mov
cmpxchg
cmps
lods
pop
push
repnz
je
bound
adc
and
mov
cmp
fisub
add
push
and
xor
scas
xchg
cmp
sub
and
mov
xchg
push
and
movups
jbe
sub
jbe
push
fistp
dec
test
adc
xor
pop
push
loope
mov
mov
call
shr
push
mov
ret
xchg
pop
mov
(bad)
dec
pop
pop
movs
mov
inc
fistp
xchg
xor
adc
and
cmp
xor
ficom
add
mov
xor
scas
xchg
or
mov
imul
xchg
jb
loopne
adc
mov
test
fistp
lea
xor
pop
push
loope
(bad)
fst
pushf
aam
mov
jns
outs
and
pop
js
mov
mov
rsm
test
mov
inc
fistp
push
rcl
push
adc
and
sbb
(bad)
clc
or
jecxz
add
mov
xor
scas
xchg
sbb
mov
mov
xor
dec
push
jmp
sub
push
adc
sub
push
push
lods
push
fistp
pop
test
and
xor
call
lea
sub
js
sbb
xchg
pop
mov
cmpxchg
repnz
xor
cs
adc
das
push
adc
and
push
push
cmps
cmp
fisub
pop
mov
lar
mov
xor
scas
xchg
(bad)
mov
or
movs
xor
dec
push
lods
xor
ss
stos
adc
movups
les
(bad)
push
xchg
xchg
push
fistp
and
xor
pop
push
loope
rcr
fs
aam
shr
jns
cmp
xor
jp
xchg
pop
mov
getsec
xchg
loopne
retf
push
repnz
xchg
lahf
cmp
push
adc
and
rcl
cmp
fimul
pop
mov
lar
mov
xor
scas
xchg
mov
mov
cmps
imul
xchg
jp
loopne
adc
jecxz
lds
mov
mov
add
mov
and
xor
fbld
cld
mov
(bad)
adc
xor
mov
adc
xsha1
cmps
mov
repz
push
repnz
xchg
pop
pop
push
adc
and
jmp
add
clc
fisubr
dec
pop
mov
lar
and
mov
xor
scas
xchg
mov
mov
and
mov
fcmovbe
add
movups
cmp
loopne
push
ficom
mov
movzx
xor
pop
push
loope
iret
xlat
or
not
lea
sub
xor
scas
and
cmovbe
ret
push
repnz
int
or
add
push
and
lods
push
dec
xor
fisub
pop
mov
lar
out
clc
inc
div
push
fild
push
int3
mov
or
xor
dec
push
mov
xchg
push
scas
out
adc
adc
adc
mov
push
lock
adc
and
xor
xlat
mov
adc
movs
xor
pushf
pop
pop
xor
mov
setle
mov
xor
lds
test
and
push
fisub
add
xor
or
div
push
fild
add
outs
movs
xor
dec
push
test
or
adc
scas
mov
push
push
fimul
push
fistp
inc
xchg
and
xor
mov
xor
movs
dec
and
sahf
mov
rcpps
outs
bound
repnz
xchg
lahf
test
add
push
and
fist
cmp
cwde
fcomp
jecxz
add
adc
xor
scas
xchg
mov
(bad)
movs
xor
dec
push
leave
cmp
cld
out
adc
xor
ins
push
cmps
arpl
mov
pop
inc
test
adc
push
loope
call
mov
pop
adc
movs
inc
sub
pop
mov
inc
mov
cvtpi2ps
sbb
push
repnz
in
pushf
mov
(bad)
add
push
and
adc
ffree
leave
pop
mov
lar
jl
jl
div
push
fild
or
cmp
movs
xor
dec
push
(bad)
cmp
aad
xchg
ds
movups
cmp
add
fistp
clc
mov
cmp
and
xor
(bad)
ds
imul
pop
xchg
xor
mov
lock
push
dec
pop
push
repnz
xchg
lahf
mov
in
adc
and
or
cmp
fst
(bad)
pop
mov
lar
inc
and
scas
xchg
sbb
push
add
outs
movs
xor
dec
push
xchg
lahf
fidivr
mov
out
adc
repz
push
loop
push
fistp
fild
and
xor
mov
jle
lea
sub
lods
mov
psubusw
inc
push
pop
push
repnz
(bad)
lahf
mov
stc
add
push
and
sub
xor
fnstsw
mov
lar
test
xor
scas
xchg
daa
mov
push
(bad)
(bad)
mov
outs
movs
xor
dec
push
sbb
xchg
fstp
xchg
or
movups
loop
hlt
push
sub
fistp
out
stos
adc
push
loope
(bad)
aam
xchg
jmp
lea
sub
push
dec
xor
mov
bswap
test
pop
pop
push
repnz
pop
lahf
in
and
push
and
and
xor
pop
mov
lar
clc
and
shl
xor
scas
xchg
jmp
nop
outs
movs
xor
dec
push
sub
xchg
jp
out
adc
repnz
mov
or
inc
daa
and
xor
fist
mov
add
and
pop
mov
cmovne
push
movs
pop
push
repnz
xchg
xchg
adc
add
push
and
ins
push
shl
in
adc
jecxz
add
loop
call
fild
add
(bad)
cmp
dec
push
push
jnp
ins
xchg
(bad)
xor
movups
sbb
mov
mov
fistp
das
xchg
adc
and
and
xor
mov
mov
movs
adc
push
pop
and
adc
xchg
pop
mov
(bad)
mov
pop
mov
push
repnz
jmp
jne
xor
push
and
lock
inc
cmp
mov
lar
loop
movs
fdecstp
xor
scas
xchg
scas
mov
gs
outs
movs
xor
dec
push
shl
and
ins
xchg
call
adc
movs
mov
mov
mov
dec
mov
or
xchg
adc
das
and
xor
mov
test
movs
mov
xor
push
mov
js
cmps
mov
inc
fisttp
or
push
and
in
push
cmp
xchg
sub
pop
mov
lar
loop
test
div
push
fild
or
(bad)
movs
xor
dec
push
jmp
cmp
movups
jbe
mov
mov
dec
mov
add
shr
and
sub
mov
adc
xchg
sub
push
and
ss
mov
pop
lods
sbb
mov
xor
xchg
xchg
aas
mov
add
push
and
jne
cmps
xor
fnsave
inc
pop
mov
lar
jmp
xor
scas
xchg
loopne
leave
pop
into
(bad)
movs
xor
dec
push
(bad)
cmp
pop
xchg
jle
out
adc
add
mov
fistp
dec
mov
adc
and
xor
mov
loop
lea
es
push
sbb
xchg
pop
mov
(bad)
mov
cwde
cmps
mov
pop
push
repnz
pushf
nop
xor
je
adc
and
out
iret
cmp
jecxz
add
iret
and
push
div
push
fild
add
mov
push
outs
movs
xor
dec
push
sub
rcr
mov
movups
inc
sub
push
fistp
sahf
mov
jb
aaa
and
xor
(bad)
pushf
push
mov
push
adc
add
and
ret
pop
mov
cvtpi2ps
push
add
repnz
mov
sub
add
push
and
dec
push
int3
cmp
mov
lar
sub
inc
jg
xor
scas
xchg
in
pushf
add
mov
and
xor
dec
push
sub
int3
aam
xchg
push
and
adc
lahf
sub
sahf
push
push
fistp
push
test
adc
xchg
aaa
and
xor
fidiv
cwde
jno
imul
lea
and
pop
shl
jecxz
xchg
pop
mov
rdtsc
mov
sbb
(bad)
pop
pop
push
repnz
mov
stc
mov
add
push
and
lock
mov
xlat
pop
mov
lar
jp
je
div
push
fild
add
mov
push
outs
movs
xor
dec
push
es
xlat
repz
retf
movups
sub
fistp
ror
aaa
and
xor
fidiv
or
add
and
pop
test
jle
mov
bswap
mov
sbb
pop
push
repnz
push
xchg
mov
add
push
and
adc
fdiv
pop
mov
lar
pop
and
xor
scas
xchg
imul
dec
outs
movs
xor
dec
push
inc
xor
ror
xchg
(bad)
shl
movups
in
sub
push
push
fistp
inc
xchg
stos
shl
pop
push
loope
sbb
pushf
and
add
and
adc
lock
dec
pop
push
repnz
dec
xchg
inc
mov
or
loop
adc
and
gs
adc
fstp
pushf
in
mov
lar
mov
xor
scas
xchg
aam
dec
pop
or
and
leave
cmp
fldcw
xchg
into
retf
adc
mov
dec
push
fistp
test
aaa
and
xor
aam
xchg
(bad)
mov
jno
lea
and
push
xor
mov
shufps
mov
inc
fist
in
mov
or
or
adc
and
xchg
cmp
fmul
lar
and
shl
xor
scas
xchg
lods
mov
sbb
dec
push
xchg
and
push
xchg
push
aaa
out
adc
ins
sub
push
cli
mov
fistp
xchg
xchg
adc
aaa
and
xor
mov
mov
dec
sub
pop
cmp
mov
mov
cmovnp
shr
inc
fbld
jae
sub
adc
movs
and
gs
sbb
sbb
jecxz
add
in
dec
(bad)
xor
scas
xchg
addr16
add
mov
and
mov
xchg
mov
lea
adc
cmps
sub
push
fistp
sub
jmp
ds
loope
cmc
aam
popf
lods
mov
popf
adc
add
and
pop
pop
xor
dec
mov
cmovb
jb
pop
push
repnz
scas
call
add
push
and
adc
push
fcmovnbe
add
jecxz
add
cmp
push
fild
or
movs
xor
dec
push
ret
aad
nop
or
out
adc
sub
mov
dec
mov
or
adc
pop
push
loope
ins
rol
sahf
jle
xchg
xchg
adc
add
das
xchg
aaa
xor
xchg
pop
mov
maxps
outs
mov
inc
fild
xchg
dec
mov
or
add
push
and
add
jge
jge
shl
mov
lar
sbb
mov
fild
add
mov
outs
movs
xor
dec
push
pop
xor
rcl
movups
loope
jb
loop
push
fistp
or
sub
pop
push
loope
(bad)
fisttp
jo
cmp
jns
call
jl
xchg
pop
mov
rsm
test
sbb
xor
cdq
xchg
sti
mov
add
push
and
outs
push
lods
cmp
and
pop
mov
lar
sbb
pop
cmc
div
push
fild
add
mov
outs
movs
xor
dec
push
sub
nop
mov
lea
adc
call
xchg
push
fistp
retf
adc
pop
push
loope
jp
pop
popf
jo
out
test
lea
sub
js
xchg
pop
mov
cmpxchg
fiadd
inc
fild
xchg
in
int
pop
and
and
xlat
push
std
xor
pop
mov
lar
sbb
js
div
push
fild
or
mov
and
stc
xor
xchg
nop
pop
sbb
movups
jle
jb
mov
iret
stos
out
inc
lea
adc
pop
push
loope
cli
fild
mov
lea
and
pop
ret
bound
bswap
(bad)
mov
pop
mov
repnz
call
or
movs
and
adc
ins
fistp
lar
or
int3
xor
push
fild
pop
push
mov
and
jbe
mov
clc
nop
ret
movups
or
sbb
push
fistp
outs
test
inc
and
xor
(bad)
pushf
push
mov
out
lea
and
pop
cmps
aaa
sahf
xor
jae
mov
repnz
call
or
jp
adc
and
jno
in
or
adc
mov
lar
push
and
push
fild
add
lods
push
ins
movs
xor
dec
push
push
xor
aad
nop
xchg
mov
push
adc
cmps
mov
push
loop
push
fistp
push
xchg
sub
loope
add
sbb
jns
mul
sub
aaa
sar
dec
mov
call
push
repnz
adc
stos
add
push
and
lock
jecxz
(bad)
je
pop
mov
lar
mov
xor
scas
xchg
scas
mov
or
movs
xor
dec
push
pop
xor
in
adc
aam
leave
push
fimul
dec
mov
push
xor
xor
pop
push
loope
(bad)
fst
lds
add
adc
aaa
bound
bsr
jmp
fistp
or
movs
and
jne
inc
cmp
fisttp
pop
mov
lar
pushf
and
push
fild
add
mov
jae
movs
xor
dec
push
imul
aad
nop
pop
aad
movups
les
out
(bad)
pop
push
fistp
cmp
xor
pop
push
loope
fstp
push
cwde
cwde
mov
jnp
lea
and
movs
mov
sysenter
mov
sbb
mov
repnz
and
or
lsl
push
and
jo
cmp
sbb
adc
jecxz
add
jmp
fild
add
ins
movs
xor
dec
push
shl
and
movups
pop
sub
fistp
loopne
jecxz
xor
and
xor
fcom
cwde
mov
fist
jns
or
rcr
loop
mov
cmovno
inc
mov
inc
fbld
or
adc
adc
and
push
(bad)
pop
mov
lar
into
and
push
fild
or
mov
mov
movs
xor
dec
push
(bad)
inc
xlat
mov
movups
mov
fistp
ret
or
outs
or
pop
push
loope
push
fdivr
push
mov
mov
jns
mov
jge
loopne
outs
ins
mov
pavgb
ds
pop
push
repnz
and
or
xor
and
fist
ds
mov
pop
mov
lar
adc
in
hlt
xor
scas
xchg
push
mov
add
mov
and
shl
dec
aam
xchg
mov
lea
adc
push
sub
push
fistp
cmp
xor
pop
push
loope
xchg
fisttp
(bad)
pop
lea
and
into
ss
cmpxchg
inc
in
pop
push
repnz
mov
inc
mov
add
push
and
push
push
cmp
adc
mov
lar
js
jl
hlt
xor
scas
xchg
aad
fisttp
pop
mov
(bad)
ins
movs
xor
dec
push
(bad)
retf
fldlg2
xchg
inc
imul
adc
pop
sub
push
fistp
cmp
pop
adc
jg
and
xor
ficom
rcl
lea
sub
pop
nop
data16
shufps
call
repnz
pop
pushf
test
add
push
and
(bad)
push
out
cmp
mov
lar
inc
and
mov
xor
scas
xchg
and
mov
and
cmp
push
push
in
adc
call
(bad)
push
fistp
cmp
xor
pop
push
loope
ins
aam
cdq
fidiv
add
movs
pop
ja
jbe
mov
imul
and
pop
push
repnz
sahf
xchg
push
mov
add
push
and
fist
cmp
ficom
lar
mov
xor
scas
xchg
ja
push
add
movs
xor
dec
push
push
cmp
pop
in
adc
pusha
sub
push
cli
fcom
mov
add
sbb
xor
aam
pushf
push
add
sub
push
push
ss
mov
jae
mov
repnz
and
leave
jle
adc
and
addr16
test
pusha
pop
mov
lar
popf
and
movs
hlt
xor
scas
xchg
push
jl
mov
movs
xor
dec
push
inc
cmp
fmul
xchg
mov
lea
adc
movs
dec
daa
jmp
out
push
fistp
sbb
xor
pop
push
loope
(bad)
fld
cdq
loopne
aas
not
lea
and
dec
ss
and
lock
cli
fistp
repnz
xchg
xchg
pushf
mov
add
push
and
add
lea
call
mov
lar
mov
stos
hlt
xor
scas
xchg
xchg
pop
in
ins
movs
xor
dec
push
shl
mov
add
adc
jae
loop
ret
fistp
retf
adc
pop
xor
pop
push
loope
out
or
loopne
out
icebp
pop
lea
and
and
psubq
fcmovu
pop
push
repnz
inc
xchg
push
mov
add
push
and
loop
xor
jl
pop
mov
lar
mov
push
cmc
xor
scas
xchg
and
mov
ins
movs
xor
dec
push
or
in
rol
xchg
jle
in
adc
and
xor
mov
push
ret
xchg
and
xor
fdivp
xchg
loopne
(bad)
or
jns
mov
pop
push
dec
ss
xchg
pop
mov
paddsw
jle
pop
push
repnz
or
aad
add
push
and
cmc
push
sar
call
mov
lar
mov
push
cmc
xor
scas
xchg
jae
lods
or
movs
xor
dec
push
movs
ss
add
adc
and
fistp
fild
xor
xor
frstor
call
adc
jmp
ss
mov
pavgb
mov
xor
icebp
xchg
cmps
mov
or
movs
and
xchg
ds
pop
sbb
lar
jmp
fild
push
retf
or
xor
dec
push
sub
xchg
pop
test
push
adc
push
jmp
mov
setne
xor
xor
pop
cwde
mov
xlat
cs
lea
and
pop
sbb
push
cld
mov
minps
jle
pop
push
repnz
fst
push
stos
add
push
and
xchg
xor
pop
mov
lar
retf
and
jnp
xor
scas
xchg
pop
mov
add
ins
movs
xor
dec
push
sub
xchg
rcr
push
adc
mov
fiadd
push
fistp
out
test
pop
sahf
nop
xor
xor
mov
cmp
lea
and
push
loope
jle
mov
(bad)
mov
sbb
outs
sbb
repnz
push
xchg
and
add
push
and
lods
push
sbb
dec
fnstcw
pop
mov
lar
adc
pop
outs
cmc
xor
scas
xchg
loopne
pop
add
movs
xor
dec
push
or
fcmovbe
fwait
xchg
mov
in
adc
enter
adc
fistp
add
out
and
xor
xchg
add
and
fwait
mov
pmaxsw
dec
fs
push
repnz
push
xchg
ret
mov
or
add
push
and
push
push
lea
imul
rcr
jecxz
add
jae
cmp
cmc
xor
scas
xchg
loopne
inc
add
gs
ins
movs
xor
dec
push
inc
xor
xlat
cmc
xchg
or
in
adc
loope
adc
js
fistp
mov
call
loope
push
fidiv
xchg
or
adc
sub
jnp
stos
xor
pop
mov
pslld
inc
outs
pop
push
repnz
pop
popf
adc
add
push
and
outs
push
dec
cmp
add
pop
mov
lar
push
daa
lock
xor
scas
xchg
inc
mov
or
movs
inc
ins
movs
xor
dec
push
or
dec
fcom
xchg
xchg
out
movups
add
cs
sbb
fistp
push
mov
jle
xor
xor
call
push
push
lea
and
push
mov
pop
mov
rsqrtps
jnp
push
repnz
arpl
sub
add
push
and
fcom
aas
fcompp
or
pop
mov
lar
mov
xor
scas
xchg
div
mov
and
ret
xor
out
in
adc
ret
sub
push
data16
push
fistp
cwde
xchg
and
xor
fild
push
push
lea
and
push
jp
cmps
cmp
push
loop
pop
jle
push
repnz
loopne
and
add
push
and
jo
and
fcompp
cld
hlt
pop
mov
lar
mov
xor
scas
xchg
sub
sub
cdq
mov
and
jmp
xchg
xor
in
adc
sub
fistp
int
lea
pop
(bad)
xor
xor
(bad)
xchg
(bad)
mov
ins
push
lea
and
push
jp
stos
mov
lock
mov
inc
pop
push
repnz
mov
and
imul
out
add
push
and
dec
push
cmp
fcompp
in
pop
mov
lar
mov
xor
scas
xchg
int3
mov
push
cdq
mov
je
movs
xor
dec
push
aaa
xor
fdiv
(bad)
xlat
in
adc
aam
aam
push
push
push
fistp
rol
pop
push
loope
or
inc
cwde
(bad)
mov
imul
movs
bound
cmps
push
jp
dec
mov
lock
mov
repnz
mov
inc
mov
or
jmp
push
push
xor
fcompp
loopne
pop
mov
lar
mov
xor
scas
xchg
daa
mov
push
cdq
mov
js
movs
xor
dec
push
aam
xchg
xor
rcr
in
adc
frstor
aam
add
fistp
cmp
xor
xor
fsubr
pushf
(bad)
mov
gs
lea
sub
mov
xchg
pop
mov
setle
xor
pop
push
pop
xor
mov
movlps
xor
jno
repnz
lea
mov
movs
and
xor
fnstsw
adc
xor
pop
push
jb
push
(bad)
mov
movlps
ss
push
repnz
mov
pop
mov
jae
movs
stos
and
xor
fnstsw
adc
xor
pop
push
cmps
xor
mov
movlps
xor
lock
repnz
lea
xchg
pop
and
xor
fnstsw
adc
xor
pop
push
jb
push
fistp
movups
xor
add
repnz
xchg
pop
mov
cmovns
in
and
xor
mov
movups
xor
pop
push
pop
xor
mov
movlps
xor
hlt
push
repnz
in
pop
mov
mov
add
and
xor
fnstsw
adc
xor
pop
push
(bad)
push
fistp
movups
xor
ins
push
repnz
xchg
pop
mov
cmovge
sub
pop
push
div
jae
mov
or
lea
adc
xor
pop
push
(bad)
push
fistp
movlps
xor
or
xor
xchg
pop
mov
cmovne
call
fnstsw
adc
xor
pop
push
fbstp
push
fistp
movups
xor
lock
repnz
arpl
mov
movs
pop
and
xor
fnstsw
adc
xor
pop
push
ret
xor
mov
movlps
xor
add
repnz
in
pop
mov
bsr
and
xor
mov
or
pop
cmps
xor
pop
push
(bad)
push
fistp
movlps
xor
ins
push
repnz
arpl
xchg
pop
and
xor
fistp
adc
xor
pop
push
pop
xor
mov
movlps
xor
add
repnz
xchg
pop
mov
bswap
pop
and
xor
fistp
adc
xor
pop
push
stos
xor
mov
unpckhps
aaa
and
push
repnz
arpl
into
pop
and
xor
fnstsw
adc
xor
pop
push
stos
xor
mov
movlps
xor
fcom
xor
adc
pop
and
xor
fnstsw
adc
xor
pop
push
fbstp
push
fistp
movups
xor
fcom
xor
arpl
mov
movs
sbb
pop
push
repz
mov
or
(bad)
movs
xor
pop
push
ret
xor
mov
movlps
xor
jno
repnz
in
pop
mov
bsr
and
xor
mov
or
pop
cmps
xor
pop
push
stos
xor
mov
movups
xor
fcom
xor
arpl
dec
pop
and
xor
mov
or
mov
xor
pop
push
jb
push
fistp
unpckhps
xor
fcom
xor
xchg
pop
mov
bswap
pop
and
xor
fnstsw
adc
xor
pop
push
sub
xchg
add
mov
push
xor
test
xor
in
pop
mov
mov
add
and
xor
fnstsw
adc
xor
pop
push
pop
xor
mov
movlps
xor
hlt
push
repnz
xchg
pop
mov
setno
push
pop
push
lock
mov
or
cmps
xor
pop
push
pop
xor
mov
unpckhps
aaa
and
fbld
rdpmc
mov
and
push
sti
xor
mov
or
(bad)
movs
xor
pop
push
stos
xor
mov
movlps
xor
adc
push
fist
setno
and
xor
mov
or
cmps
xor
pop
push
stos
xor
mov
movlps
xor
jno
repnz
xchg
pop
mov
cmovns
mov
pop
push
div
or
mov
movups
xor
pop
push
sub
xchg
jae
jecxz
adc
xor
lock
repnz
xchg
xchg
pop
mov
mov
add
and
xor
fnstsw
adc
xor
pop
push
jb
push
fistp
movlps
xor
or
xor
xchg
xchg
pop
mov
mov
add
and
xor
fistp
adc
xor
pop
push
pop
xor
mov
movups
xor
add
repnz
xchg
xchg
pop
mov
ud1
pop
and
xor
fnstsw
adc
xor
pop
push
(bad)
push
fistp
movups
xor
ins
push
repnz
arpl
inc
pop
and
xor
mov
or
mov
xor
pop
push
pop
xor
mov
movlps
ss
push
repnz
arpl
mov
movs
pop
and
xor
mov
or
pop
cmps
xor
pop
push
pop
xor
mov
movlps
and
push
repnz
call
xor
add
and
xor
fnstsw
adc
xor
pop
push
sub
xchg
push
mov
movups
xor
fcom
xor
adc
pop
mov
cmovns
in
and
xor
fnstsw
adc
xor
pop
push
imul
fistp
movups
xor
hlt
push
repnz
cmp
pop
mov
(bad)
pop
and
xor
fistp
adc
xor
pop
push
jb
push
fistp
movlps
and
repnz
adc
pop
and
xor
fistp
adc
xor
pop
push
sub
xchg
repnz
unpckhps
aaa
and
push
repnz
lea
dec
pop
and
xor
fistp
adc
xor
pop
push
stos
xor
mov
unpckhps
xor
ins
push
repnz
xchg
pop
mov
setno
in
and
xor
fnstsw
adc
xor
pop
push
jb
push
fistp
movlps
ss
push
repnz
xchg
xchg
pop
mov
(bad)
add
and
xor
fnstsw
adc
xor
pop
push
cmps
xor
mov
movlps
xor
jne
repnz
xchg
pop
mov
setno
sahf
and
xor
mov
or
ret
and
jb
push
fistp
movups
xor
add
repnz
adc
pop
and
xor
mov
movups
xor
pop
push
(bad)
push
fistp
movups
xor
hlt
push
repnz
arpl
cmp
add
pop
push
repz
fistp
adc
xor
pop
push
pop
xor
mov
movlps
xor
add
repnz
in
pop
mov
bswap
pop
and
xor
fnstsw
adc
xor
pop
push
pop
xor
mov
movlps
and
push
repnz
lea
xchg
pop
and
xor
mov
or
cmps
xor
pop
push
(bad)
push
fistp
unpcklps
xor
fcom
xor
xchg
pop
mov
cmovne
add
pop
push
div
(bad)
fistp
adc
xor
pop
push
pop
xor
mov
movlps
xor
adc
push
fist
xchg
pop
mov
setno
call
fnstsw
adc
xor
pop
push
pop
xor
mov
movups
xor
jne
repnz
arpl
inc
pop
and
xor
fistp
adc
xor
pop
push
sub
xchg
repnz
movlps
xor
lock
repnz
xchg
pop
mov
setno
add
pop
push
icebp
xor
mov
movups
xor
pop
push
sub
xchg
or
sub
push
xor
hlt
push
repnz
xchg
pop
mov
(bad)
pop
and
xor
fistp
adc
xor
pop
push
ret
xor
mov
movlps
xor
lock
repnz
xchg
pop
mov
ud1
and
xor
mov
or
jmp
xor
mov
unpckhps
xor
hlt
push
repnz
xchg
pop
mov
bsr
pop
and
xor
mov
or
cmps
xor
pop
push
pop
xor
mov
movlps
xor
jno
repnz
cmp
pop
mov
bswap
pop
and
xor
mov
or
pop
cmps
xor
pop
push
jb
push
fistp
unpcklps
xor
jno
repnz
adc
lea
and
xor
mov
movups
xor
pop
push
(bad)
push
fistp
movhps
cmp
lock
repnz
call
cmovge
add
pop
push
lock
fistp
adc
xor
pop
push
sub
xchg
fidiv
test
and
fistp
pop
mov
(bad)
pop
and
xor
fistp
adc
xor
pop
push
stos
xor
mov
movups
xor
ins
push
repnz
in
pop
mov
cmovne
add
pop
push
icebp
xor
mov
or
(bad)
movs
xor
pop
push
pop
xor
mov
movlps
xor
or
xor
loopne
pop
mov
(bad)
test
sub
xor
fnstsw
adc
xor
pop
push
pop
xor
mov
movlps
xor
jno
repnz
arpl
dec
pop
and
xor
fnstsw
adc
xor
pop
push
pop
xor
mov
movlps
and
push
repnz
and
bswap
pop
and
xor
fnstsw
adc
xor
pop
push
stos
xor
mov
unpckhps
aaa
and
push
repnz
adc
pop
and
xor
fistp
adc
xor
pop
push
fbstp
push
fistp
movlps
xor
ins
push
repnz
xchg
pop
mov
cmovns
add
pop
push
lock
mov
or
jmp
xor
mov
movlps
xor
jno
repnz
xchg
pop
mov
ud1
push
pop
push
repz
fidivr
adc
xor
pop
push
jb
push
fistp
movhps
xor
xor
sahf
xchg
pop
mov
pavgw
sub
xor
fistp
adc
xor
pop
push
fbstp
push
fistp
movlps
xor
jno
repnz
xchg
pop
mov
(bad)
add
and
xor
mov
or
pop
cmps
xor
pop
push
sub
xchg
fidiv
lods
adc
xor
add
repnz
xchg
pop
mov
cmovne
mov
pop
push
repz
fnstsw
adc
xor
pop
push
fbstp
push
fistp
movlps
xor
jno
repnz
xchg
pop
mov
(bad)
add
and
xor
fnstsw
adc
xor
pop
push
cmps
xor
mov
movlps
xor
adc
push
fist
bswap
pop
and
xor
mov
or
mov
xor
pop
push
jb
push
fistp
movhps
cmp
hlt
push
repnz
arpl
dec
pop
and
xor
fistp
adc
xor
pop
push
jb
push
fistp
movhps
xor
xor
xchg
xchg
pop
mov
(bad)
add
and
xor
mov
or
jmp
xor
mov
movups
xor
jno
repnz
cmp
pop
mov
ud1
in
and
xor
mov
or
jmp
xor
mov
movlps
xor
jne
repnz
xchg
pop
mov
ud1
push
pop
push
lock
fistp
adc
xor
pop
push
pop
xor
mov
movups
xor
adc
push
fist
xchg
pop
mov
mov
add
and
xor
mov
or
ret
and
sub
xchg
push
mov
unpckhps
xor
add
repnz
xchg
pop
mov
ud1
add
pop
push
div
jg
mov
or
pop
cmps
xor
pop
push
pop
xor
mov
unpckhps
aaa
and
push
repnz
adc
pop
and
xor
mov
or
(bad)
movs
xor
pop
push
stos
xor
mov
nop
cmp
fcom
xor
adc
pop
mov
bsr
mov
pop
push
div
jnp
mov
or
inc
cmps
xor
pop
push
pop
xor
mov
movlps
xor
or
xor
in
pop
mov
bsr
pop
and
xor
mov
or
mov
xor
pop
push
pop
xor
mov
movhps
xor
lock
repnz
xchg
pop
mov
(bad)
add
and
xor
fistp
adc
xor
pop
push
fbstp
push
fistp
movlps
xor
fcom
xor
xchg
xchg
pop
mov
cmovns
in
and
xor
mov
or
(bad)
movs
xor
pop
push
jb
push
fistp
movlps
and
push
repnz
lea
xchg
pop
and
xor
mov
or
jmp
xor
mov
movups
xor
ins
push
repnz
call
setno
sahf
and
xor
fistp
adc
xor
pop
push
stos
xor
mov
movlps
xor
or
xor
xchg
pop
mov
bswap
pop
and
xor
mov
or
mov
xor
pop
push
fbstp
push
fistp
movlps
xor
or
xor
arpl
cmp
sahf
and
xor
fnstsw
adc
xor
pop
push
stos
xor
mov
movlps
xor
lock
repnz
adc
pop
and
xor
fistp
adc
xor
pop
push
pop
xor
mov
movups
xor
fcom
xor
xchg
xchg
pop
mov
(bad)
pop
and
xor
fistp
adc
xor
pop
push
stos
xor
mov
movlps
xor
hlt
push
repnz
adc
pop
mov
bswap
pop
and
xor
fnstsw
adc
xor
pop
push
fbstp
push
fistp
movlps
xor
jne
repnz
cmp
pop
mov
bswap
pop
and
xor
mov
movups
xor
pop
push
pop
xor
mov
movlps
ss
push
repnz
cmp
pop
mov
(bad)
add
and
xor
fdivr
adc
xor
pop
push
mov
xchg
xchg
xor
(bad)
push
repnz
push
xchg
pop
mov
pop
mov
sub
xor
fnstsw
adc
xor
pop
push
fbstp
push
fistp
movlps
xor
lock
repnz
adc
pop
mov
cmovge
add
pop
push
lock
fnstsw
adc
xor
pop
push
sub
xchg
outs
mov
movups
xor
lock
repnz
cmp
pop
mov
(bad)
add
and
xor
fistp
adc
xor
pop
push
(bad)
push
fistp
movlps
xor
adc
push
fist
cmovns
call
fnstsw
adc
xor
pop
push
or
xchg
loopne
jecxz
pop
lea
adc
xor
xor
in
pop
mov
bswap
pop
and
xor
fnstsw
adc
xor
pop
push
pop
xor
mov
movlps
xor
ins
push
repnz
xchg
pop
mov
(bad)
pop
and
xor
fnstsw
adc
xor
pop
push
jb
push
fistp
movups
xor
jne
repnz
call
ud1
sbb
pop
push
lock
fnstsw
adc
xor
pop
push
ret
xor
mov
movups
xor
lock
repnz
cmp
pop
mov
mov
add
and
xor
fnstsw
adc
xor
pop
push
pop
xor
mov
movlps
xor
hlt
push
repnz
xchg
pop
mov
setno
in
and
xor
fistp
adc
xor
pop
push
fbstp
push
fistp
movups
xor
jno
repnz
call
bswap
pop
and
xor
mov
or
inc
cmps
xor
pop
push
sub
xchg
outs
mov
movlps
ss
push
repnz
xchg
xchg
pop
mov
cmovns
add
pop
push
repz
mov
or
xor
pop
xor
mov
movlps
and
fucomip
xchg
pop
mov
mov
add
and
xor
fistp
adc
xor
pop
push
pop
xor
mov
movlps
and
repnz
arpl
and
mov
pop
push
icebp
xor
mov
or
ret
and
ret
xor
mov
movlps
xor
lock
repnz
xchg
pop
mov
cmovne
push
pop
push
lock
mov
or
jmp
xor
mov
movups
xor
adc
push
fisttp
ud1
mov
pop
push
repz
mov
or
(bad)
movs
xor
pop
push
ret
xor
mov
movlps
ss
push
repnz
adc
pop
mov
cmovns
sahf
and
xor
fnstsw
adc
xor
pop
push
fbstp
push
fistp
movlps
xor
or
xor
cmp
pop
mov
(bad)
pop
and
xor
fnstsw
adc
xor
pop
push
(bad)
push
fistp
movlps
xor
hlt
push
repnz
lea
mov
movs
pop
and
xor
fistp
adc
xor
pop
push
cmps
xor
mov
nop
cmp
jne
repnz
xchg
pop
mov
ud1
mov
pop
push
icebp
xor
fnstsw
adc
xor
pop
push
cmps
xor
mov
movups
xor
fcom
xor
in
pop
mov
ud1
mov
pop
push
lock
fnstsw
adc
xor
pop
push
(bad)
push
fistp
movhps
xor
jne
repnz
xchg
pop
mov
setno
sbb
pop
push
lock
fnstsw
adc
xor
pop
push
pop
xor
mov
movups
xor
jno
repnz
arpl
mov
movs
and
xor
mov
movups
xor
pop
push
fbstp
push
fistp
movlps
xor
hlt
push
repnz
xchg
xchg
pop
mov
cmovne
mov
pop
push
icebp
xor
mov
movups
xor
pop
push
stos
xor
mov
nop
cmp
adc
pop
fnstsw
xchg
pop
mov
mov
add
and
xor
mov
or
(bad)
movs
xor
pop
push
sub
xchg
xor
xor
jno
repnz
adc
pop
and
xor
fistp
adc
xor
pop
push
stos
xor
mov
movlps
xor
adc
push
fist
pop
mov
bswap
pop
and
xor
mov
movups
xor
pop
push
ret
xor
mov
movups
xor
lock
repnz
in
pop
mov
cmovns
sbb
pop
push
icebp
xor
mov
or
xor
pop
xor
mov
movlps
xor
add
repnz
arpl
inc
pop
and
xor
fistp
adc
xor
pop
push
(bad)
push
fistp
movlps
xor
jne
repnz
xchg
pop
mov
(bad)
pop
and
xor
mov
or
mov
xor
pop
push
sub
xchg
push
mov
movlps
xor
hlt
push
repnz
xchg
pop
mov
cmovns
in
and
xor
mov
or
inc
cmps
xor
pop
push
pop
xor
mov
unpcklps
xor
fcom
xor
xchg
pop
mov
cmovns
sbb
pop
push
lock
mov
or
ret
and
sub
xchg
outs
mov
movhps
cmp
or
xor
adc
pop
and
xor
mov
or
cmps
xor
pop
push
stos
xor
mov
movups
xor
lock
repnz
call
(bad)
pop
and
xor
mov
movups
xor
pop
push
fbstp
push
fistp
movlps
xor
add
repnz
xchg
pop
mov
mov
add
and
xor
fistp
adc
xor
pop
push
(bad)
push
fistp
movlps
xor
add
repnz
xchg
pop
mov
bswap
pop
and
xor
fistp
adc
xor
pop
push
sub
xchg
jae
jecxz
adc
xor
fcom
xor
xchg
xchg
pop
mov
bswap
pop
and
xor
fistp
adc
xor
pop
push
(bad)
push
fistp
movups
xor
jno
repnz
arpl
cmp
add
and
xor
fistp
adc
xor
pop
push
ret
xor
mov
movlps
xor
jne
repnz
xchg
xchg
pop
mov
bsr
push
pop
push
repz
mov
or
inc
cmps
xor
pop
push
fbstp
push
fistp
movlps
xor
fcom
xor
xchg
pop
mov
mov
add
and
xor
fistp
adc
xor
pop
push
jb
push
fistp
unpckhps
aaa
and
repnz
call
bsr
push
pop
push
sti
xor
fistp
adc
xor
pop
push
pop
xor
mov
movlps
xor
ins
push
repnz
cmp
pop
mov
(bad)
add
and
xor
fnstsw
adc
xor
pop
push
pop
xor
mov
movups
xor
or
xor
xchg
xchg
pop
mov
cmovns
mov
pop
push
lock
mov
or
inc
cmps
xor
pop
push
pop
xor
mov
unpckhps
aaa
and
repnz
adc
pop
mov
mov
add
and
xor
fistp
adc
xor
pop
push
sub
xchg
repnz
movlps
xor
or
xor
xchg
pop
mov
cmovns
mov
pop
push
repz
mov
or
cmps
xor
pop
push
fbstp
push
fistp
movups
xor
add
repnz
xchg
xchg
pop
mov
cmovne
sahf
and
xor
fnstsw
adc
xor
pop
push
(bad)
push
fistp
movups
xor
fcom
xor
xchg
xchg
pop
mov
(bad)
add
and
xor
fnstsw
adc
xor
pop
push
sub
xchg
outs
mov
unpcklps
xor
hlt
push
repnz
xchg
pop
mov
bswap
pop
and
xor
fnstsw
adc
xor
pop
push
jb
push
fistp
movlps
xor
adc
push
(bad)
xchg
pop
mov
mov
add
and
xor
mov
or
cmps
xor
pop
push
scas
xor
mov
movlps
ss
push
repnz
or
pop
mov
js
movs
jmp
fstp
adc
xor
pop
push
sub
xchg
jae
jecxz
adc
xor
fcom
xor
call
cmovns
add
pop
push
div
mov
mov
or
jmp
xor
mov
movups
xor
ins
push
repnz
xchg
xchg
pop
mov
bswap
pop
and
xor
fistp
adc
xor
pop
push
scas
xor
mov
movhps
xor
add
repnz
xchg
pop
mov
setno
and
xor
mov
movups
xor
pop
push
cmps
xor
mov
movups
xor
adc
push
fist
cmovne
sahf
and
xor
mov
or
mov
xor
pop
push
jb
push
fistp
movlps
xor
add
repnz
xchg
pop
mov
setno
and
xor
mov
or
(bad)
movs
xor
pop
push
ret
xor
mov
unpckhps
xor
ins
push
repnz
xchg
pop
mov
cmovne
pop
and
xor
fistp
adc
xor
pop
push
(bad)
push
fistp
movlps
xor
jne
repnz
call
mov
add
and
xor
mov
or
ret
and
sub
xchg
jae
jecxz
adc
xor
adc
push
(bad)
xchg
pop
mov
bsr
and
xor
mov
or
pop
cmps
xor
pop
push
pop
xor
mov
movlps
xor
add
repnz
lea
cmp
sahf
and
xor
fistp
adc
xor
pop
push
pop
xor
mov
movups
xor
or
xor
xchg
xchg
pop
mov
setno
add
pop
push
repz
mov
or
xor
jb
push
fistp
movups
xor
hlt
push
repnz
cmp
pop
mov
bswap
pop
and
xor
mov
or
inc
cmps
xor
pop
push
stos
xor
mov
movups
xor
fcom
xor
adc
pop
mov
bswap
pop
and
xor
mov
or
(bad)
movs
xor
pop
push
jb
push
fistp
movlps
xor
lock
repnz
lea
xchg
pop
and
xor
mov
or
(bad)
movs
xor
pop
push
pop
xor
mov
movlps
xor
add
repnz
xchg
pop
mov
mov
add
and
xor
mov
movups
xor
pop
push
pop
xor
mov
movups
xor
fcom
xor
lea
into
pop
and
xor
fistp
adc
xor
pop
push
pop
xor
mov
movups
xor
ins
push
repnz
call
setno
call
fnstsw
adc
xor
pop
push
stos
xor
mov
movups
xor
lock
repnz
xchg
xchg
pop
mov
(bad)
pop
and
xor
fnstsw
adc
xor
pop
push
pop
xor
mov
movups
xor
or
xor
lea
into
pop
and
xor
fnstsw
adc
xor
pop
push
cmps
xor
mov
movlps
ss
push
repnz
loopne
pop
mov
(bad)
add
and
xor
fnstsw
adc
xor
pop
push
fbstp
push
fistp
unpcklps
xor
jno
repnz
xchg
pop
mov
bsr
sahf
and
xor
mov
or
ret
and
fbstp
push
fistp
movlps
xor
jno
repnz
call
setno
add
pop
push
lock
fistp
adc
xor
pop
push
sub
xchg
fidiv
test
and
push
repnz
in
pop
mov
cmovge
popa
and
mov
mov
movups
xor
pop
push
pop
xor
mov
movlps
xor
add
repnz
xchg
pop
mov
setno
call
fnstsw
adc
xor
pop
push
pop
xor
mov
movlps
xor
jle
repnz
add
xchg
mov
es
push
cmc
xor
retf
lea
jmp
xor
mov
unpckhps
aaa
and
push
repnz
adc
pop
mov
bsr
mov
pop
push
div
mov
mov
or
xor
(bad)
push
fistp
movlps
xor
add
repnz
xchg
xchg
pop
mov
mov
add
and
xor
fnstsw
adc
xor
pop
push
cmps
xor
mov
movlps
xor
adc
push
fist
bswap
pop
and
xor
mov
or
xor
sub
xchg
push
mov
movlps
ss
push
repnz
adc
pop
mov
cmovne
push
pop
push
lock
mov
or
jmp
xor
mov
movups
xor
jno
repnz
cmp
pop
mov
ud1
add
pop
push
lock
mov
or
(bad)
movs
xor
pop
push
pop
xor
mov
movlps
xor
jne
repnz
xchg
pop
mov
ud1
mov
pop
push
div
fnstsw
mov
or
ret
and
jb
push
fistp
movlps
xor
add
repnz
cmp
pop
mov
cmovns
in
and
xor
fistp
adc
xor
pop
push
fbstp
push
fistp
unpckhps
xor
hlt
push
repnz
xchg
pop
mov
cmovns
push
pop
push
lock
mov
movups
xor
pop
push
ret
xor
mov
movlps
xor
jne
repnz
xchg
pop
mov
bswap
pop
and
xor
fistp
adc
xor
pop
push
sub
xchg
xor
xor
lock
repnz
in
pop
mov
setno
and
xor
mov
or
xor
pop
xor
mov
unpckhps
aaa
and
push
repnz
xchg
xchg
pop
mov
cmovne
in
and
xor
fistp
adc
xor
pop
push
(bad)
push
fistp
movlps
xor
hlt
push
repnz
in
pop
mov
mov
add
and
xor
fnstsw
adc
xor
pop
push
jb
dec
fild
sbb
dec
adc
movs
retf
and
push
fwait
xor
mov
push
pop
lea
adc
cmps
mov
xor
fidivr
push
push
(bad)
cld
adc
movs
mov
movs
push
ss
fist
pop
mov
psubsb
and
push
xchg
outs
mov
push
pop
lea
xchg
movs
fisub
inc
push
or
mov
mov
psubb
xor
movs
push
add
scas
fild
mov
mov
fwait
movs
jle
jo
retf
xor
mov
push
ror
and
or
sbb
in
xchg
cmps
mov
pshufw
movs
push
mov
xchg
adc
ror
movs
test
stos
movs
std
sub
push
xor
lods
xlat
enter
loop
imul
sub
push
fidivr
sub
adc
pop
cmp
add
sub
(bad)
popf
fdivr
xchg
sbb
mov
xor
(bad)
or
test
adc
lods
repz
xlat
lea
(bad)
fistp
movs
shl
mov
fild
mov
in
sbb
movs
sub
aad
pushf
scas
mov
add
icebp
mov
imul
sub
arpl
rcr
cmp
and
or
retf
movs
mov
push
push
push
xor
mov
add
mov
sbb
ret
(bad)
dec
xchg
cmps
mov
pop
sbb
lods
imul
pop
push
cmp
fidiv
adc
dec
push
xchg
xchg
mov
push
mov
xchg
in
xchg
daa
mov
add
lea
popf
push
or
loop
xchg
xchg
movs
mov
add
sub
cmp
mov
dec
adc
pop
ret
xor
lods
lahf
scas
mov
add
xchg
adc
test
sub
push
test
xchg
movs
mov
jp
call
cmp
fild
cwde
adc
sbb
call
rcr
lahf
addr16
add
test
and
push
sub
in
sbb
add
(bad)
std
sbb
pop
pop
mov
dec
fild
rdmsr
adc
call
xor
xchg
outs
mov
add
scas
jle
jne
or
loope
test
mov
scas
add
fcomp
cmp
aaa
cdq
mov
dec
sbb
mov
and
scas
fsubrp
cwde
xlat
mov
push
stc
mov
adc
push
nop
cmp
sub
(bad)
jnp
ins
test
loop
scas
fidiv
call
and
cmps
sub
add
(bad)
ror
and
pop
sub
push
es
test
pop
fisubr
ds
fild
call
mov
rep
iret
das
call
shl
cdq
btr
add
test
jns
push
sub
push
out
cmp
shl
cmpxchg
mov
ds
fsubrp
fwait
test
or
xor
stos
movs
retf
and
pop
mov
sub
pop
cdq
(bad)
mov
add
mov
adc
push
dec
cmp
fimul
add
lea
call
cmp
popa
fwait
mov
add
movs
mov
xor
js
pop
mov
xchg
stos
jne
jne
imul
ror
jae
inc
inc
sar
sbb
mov
mov
pop
mov
gs
xchg
call
xor
ds
das
lods
push
cwde
cmp
(bad)
xchg
cmp
jne
ds
ret
and
scas
cmp
cmp
pop
arpl
jae
ror
xlat
call
ins
adc
mov
das
movs
push
pop
and
fistp
push
loopne
inc
sbb
fwait
inc
add
scas
frstor
dec
mov
psraw
enter
jae
scas
iret
and
daa
mov
push
repz
shr
shr
add
lea
hlt
stos
repz
inc
ins
cmp
sar
jecxz
pop
xor
pop
xor
into
stos
xchg
xlat
mov
push
push
mov
adc
mov
sub
loope
and
test
mov
cmp
out
pop
cmp
adc
mov
adc
jmp
call
mov
xchg
mov
das
in
push
jmp
sbb
lea
mov
and
es
adc
dec
adc
movs
add
push
shl
arpl
not
adc
xchg
sub
rol
or
lea
mov
sbb
mov
push
or
stos
movs
lahf
xor
iret
call
add
adc
mov
cs
and
push
ror
or
(bad)
call
and
fadd
adc
dec
adc
retf
and
fdiv
sbb
mov
or
mov
and
stos
fistp
mov
or
lea
jns
pop
and
lahf
xor
rcl
lea
sbb
cmp
mov
movzx
sub
ja
leave
xor
fsubp
xchg
xor
out
adc
and
iret
xor
(bad)
xchg
clc
mov
or
mov
adc
out
push
sub
pop
fimul
or
mov
cmp
aam
cdq
leave
mov
test
out
mov
xor
mov
or
ins
movs
pop
and
mov
pop
(bad)
xchg
pop
mov
push
sbb
jno
push
push
xor
call
adc
xor
pop
push
mov
inc
fild
push
dec
lea
pop
imul
xchg
add
inc
adc
push
mov
aaa
(bad)
xchg
pop
mov
push
jb
rcl
movs
jno
cmp
xor
pop
mov
unpckhps
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
je
jecxz
adc
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
add
add
imul
xchg
pop
mov
nop
xor
pop
adc
std
cmp
cmp
sub
xor
xor
out
rcr
add
push
mov
out
aam
and
jbe
or
jo
das
cmp
loopne
(bad)
pop
js
popa
jle
xlat
sbb
xor
lahf
inc
push
mov
out
xlat
mov
inc
hlt
jbe
bswap
sbb
xor
cmc
sub
sub
aaa
aas
push
enter
xor
(bad)
cmps
pop
(bad)
nop
push
mov
pop
and
and
in
rcl
jne
enter
aas
xchg
inc
cmp
push
(bad)
xsha256
cmps
adc
and
rcl
outs
pop
push
sti
mov
lea
inc
mov
mov
stos
enter
mov
(bad)
stc
pusha
jl
lock
push
cmp
xchg
pop
cmp
add
fiadd
mov
xor
push
out
xchg
cmp
mov
out
cmp
popa
mov
mov
add
aam
pop
push
jmp
ins
xchg
mov
mov
icebp
pop
fadd
bound
rcr
pop
repnz
push
movs
data16
push
gs
push
dec
pop
adc
icebp
sub
scas
data16
push
add
cmp
cmc
sub
call
inc
and
ins
mov
lea
inc
mov
pop
add
out
loope
jl
call
push
inc
xor
add
xor
xchg
sub
shl
cmc
ds
cmp
ins
je
shl
jb
and
icebp
sub
sbb
dec
add
(bad)
out
xchg
and
shl
push
icebp
fnstsw
xor
jecxz
push
(bad)
push
push
xor
repnz
jg
push
sti
mov
bound
jl
add
aaa
mov
push
cli
push
popa
mov
push
mov
pop
mov
xchg
push
xchg
enter
stos
popa
ja
ja
or
pop
dec
xor
sbb
out
push
popa
cmps
lock
adc
rcr
mov
add
stc
inc
arpl
rcl
sbb
int3
loopne
fisttp
mov
mov
pop
sbb
fadd
jecxz
xchg
sub
shl
push
ds
xor
lock
call
and
pop
cmp
test
loopne
gs
pop
pusha
pop
mov
fwait
mov
sbb
sbb
xchg
dec
jle
pusha
jbe
retf
inc
dec
cmp
fwait
pop
xor
inc
out
xchg
cs
cmp
jecxz
ficom
arpl
sbb
jne
add
dec
je
push
js
rcr
xor
sti
icebp
sub
mov
loop
inc
paddusb
cmp
xchg
inc
ds
mov
jg
in
jg
out
dec
xor
ds
xor
push
in
jno
ds
inc
pop
mov
fwait
mov
or
mov
cs
dec
xor
mov
ds
mov
xor
cmp
inc
push
cmp
shl
cmp
(bad)
sub
retf
xor
lods
fucomp
pop
xrelease
fldcw
sbb
push
pop
pop
mov
nop
mov
adc
sbb
mov
stc
ja
or
xor
and
(bad)
mov
jmp
sbb
pop
dec
pop
add
xchg
sbb
call
pop
ins
xor
xor
add
out
xchg
and
jnp
sub
xchg
test
out
mov
lea
in
push
cmp
out
in
sub
fbld
push
rcl
aas
pushf
xor
mov
loope
xlat
jecxz
push
es
rcr
bnd
lods
fincstp
sub
xchg
jbe
jecxz
jle
inc
mov
mov
stos
into
std
xor
jecxz
js
pusha
pop
add
rcr
aam
mov
lea
inc
mov
pop
add
inc
xor
or
popa
pop
das
and
pop
js
fchs
pop
cmc
xchg
outs
popa
in
jb
movs
jo
sub
fpatan
aaa
rcl
push
pop
inc
cs
sbb
sar
push
lds
xor
fst
call
dec
inc
cmp
inc
xor
xchg
jnp
leave
fs
push
inc
cmp
test
call
jg
imul
xchg
mov
clc
cmp
jecxz
jle
imul
push
inc
xor
mov
clc
sub
test
jg
add
mov
arpl
pop
je
jae
or
bound
es
push
xor
xchg
push
mov
inc
dec
sub
fdiv
cmps
int3
loopne
aad
outs
popa
in
adc
and
mov
lea
inc
mov
pop
mov
fwait
mov
add
lea
or
push
inc
cmp
(bad)
fdivr
fild
dec
pop
movs
ja
cmp
xchg
mov
and
fs
(bad)
xchg
pop
xor
xchg
call
pop
inc
sub
xor
mov
out
ror
rcl
push
xor
sti
xor
mov
call
sbb
pop
inc
cmp
repnz
cmp
(bad)
clc
xor
mov
pop
loop
bound
pop
inc
das
add
icebp
daa
shl
je
addr16
(bad)
push
and
and
pop
cmp
xchg
lea
sbb
push
dec
jb
xchg
dec
and
pop
push
jmp
ins
xchg
mov
ins
mov
lea
retf
xor
jbe
(bad)
icebp
sub
xchg
loop
arpl
test
aaa
scas
jmp
(bad)
pusha
push
pop
xor
into
lock
call
or
mov
and
test
push
shl
fdivrp
adc
aas
shl
jle
jno
add
push
and
add
std
sub
jmp
adc
inc
cmp
nop
jp
loope
jo
int
movups
mov
idiv
shl
je
jae
sbb
pop
dec
sub
xchg
fucomip
icebp
sub
enter
retf
sub
shl
xor
xchg
andps
data16
int
inc
pop
add
out
fld
push
add
push
ja
and
cli
cmp
jecxz
arpl
data16
xlat
popa
push
cmp
mov
mov
jbe
add
push
dec
sub
xchg
mov
xchg
fidiv
push
rol
xor
sti
sub
xchg
addr16
push
jle
iret
push
push
pop
add
shl
rol
mov
and
rcl
aam
mov
lea
int
push
sub
out
fist
push
add
push
dec
pop
mov
xchg
mov
sbb
mov
sub
mov
repnz
mov
fidivr
rcr
ss
xor
add
out
xchg
ds
fisub
inc
push
xchg
shl
cmp
jecxz
jl
bound
inc
dec
cmp
lods
enter
cmps
jge
cli
ins
jg
mov
cmp
fucomip
icebp
es
mov
js
pusha
arpl
inc
inc
xor
in
sub
ins
xchg
mov
ins
mov
lea
inc
mov
pop
mov
xchg
mov
sbb
and
mov
cmp
mov
jmp
pop
inc
pop
mov
xchg
mov
pop
xchg
sbb
xchg
data16
imul
ja
and
sar
test
(bad)
in
iret
inc
mov
pop
mov
xchg
mov
or
xor
push
sub
rcl
ret
sbb
inc
jae
xor
xchg
mov
ds
push
cmp
repnz
arpl
out
mov
lea
inc
mov
mov
pop
add
pop
jecxz
xchg
xor
xchg
retf
dec
xor
xchg
inc
push
lods
fchs
add
xchg
push
stc
pusha
pop
add
aas
test
and
rol
das
fcom
sub
xor
xlat
xchg
call
push
dec
cmp
adc
enter
jecxz
je
pop
inc
xadd
cmp
xchg
mov
xchg
jmp
push
pop
dec
sub
shl
pop
loope
jge
jecxz
bound
inc
inc
aas
xor
into
loopne
hlt
xchg
pusha
jl
push
addr16
lods
aad
cmp
(bad)
arpl
jge
push
push
push
add
fwait
push
and
mov
jns
movs
jno
cmp
xchg
stos
(bad)
cmp
jecxz
xchg
cmp
xchg
ret
push
cmp
mov
xchg
pusha
arpl
pusha
jo
call
mov
jne
add
bound
jle
das
and
inc
aas
stos
fld
aaa
fild
dec
rcr
repnz
xor
fisttp
jbe
jno
rcl
xchg
mov
or
pop
jecxz
je
dec
jo
shl
xor
pop
xor
lock
sub
mov
gs
in
fld
sbb
add
mov
lea
pop
aam
dec
cmp
xchg
add
(bad)
dec
jle
jne
add
pop
push
adc
xchg
push
cmp
clc
std
sub
(bad)
in
fld
popf
pop
pop
sbb
std
clc
xor
call
(bad)
push
inc
xor
push
and
xchg
pusha
gs
cmp
popa
aaa
mov
std
xor
cmps
jns
jecxz
bound
push
push
cmp
xchg
pop
cmp
fcomi
sub
movs
data16
inc
je
mov
cmp
fcomi
sub
movs
data16
dec
jo
shl
cmp
inc
xor
lock
sub
movs
push
lea
push
repnz
push
das
cmp
sti
pop
cmc
xchg
in
imul
mov
loopne
icebp
mov
call
inc
dec
xor
xchg
inc
xor
mov
sub
mov
(bad)
in
mov
sahf
mov
sbb
mov
and
mov
sti
ds
pop
repz
jg
in
inc
push
fstp
pop
adc
pop
push
repz
popa
mov
into
push
adc
pop
pop
cmp
loopne
fisttp
lock
in
adc
sub
mov
jne
ja
or
popa
push
cmp
mov
xchg
(bad)
ud1
call
in
adc
out
push
popa
lods
lock
cmps
adc
repz
cmp
xchg
cmovno
push
(bad)
inc
gs
mov
cmc
sub
xchg
pusha
jnp
data16
(bad)
inc
dec
cs
mov
xor
mov
adc
lds
cmp
call
push
call
inc
jno
aas
cwde
push
xor
fst
jg
out
dec
das
xor
fst
stc
fs
lds
adc
(bad)
icebp
xor
xchg
push
clc
addr16
paddusw
cmp
inc
xor
jecxz
jg
ins
arpl
and
je
stos
cli
sti
xor
xchg
in
jno
push
inc
inc
aas
cmp
lock
jecxz
jle
ins
gs
cmp
out
(bad)
mov
lea
and
and
jg
mov
xchg
pop
arpl
data16
xlat
jo
adc
stos
jecxz
cmp
jl
(bad)
xor
xor
icebp
es
jecxz
jle
push
(bad)
xor
and
inc
aaa
mov
jecxz
jg
ins
arpl
cmp
out
loopne
fisttp
mov
cmp
aad
xor
jecxz
je
pop
inc
sbb
pop
inc
sub
cli
pop
aad
jnp
leave
ins
arpl
mov
and
fucom
cmp
lea
imul
push
inc
sub
mov
xlat
shl
test
cmp
in
rcl
bswap
sbb
sub
xchg
mov
xchg
data16
ja
(bad)
inc
dec
aas
xor
aad
aaa
ror
arpl
lds
(bad)
xor
mov
dec
imul
jae
or
adc
out
loopne
rcl
push
pushaw
or
adc
std
loopne
ror
xor
xor
pop
or
nop
jl
loop
push
add
pop
dec
cmp
std
out
shl
jle
jne
sbb
jg
sub
popf
push
push
cwde
fchs
or
xchg
bound
fs
in
pop
inc
cmp
enter
xchg
js
jmp
push
(bad)
push
inc
xor
mov
ds
push
lock
push
adc
mov
push
lock
push
adc
mov
push
lock
push
adc
mov
push
lock
push
mov
cmp
add
xor
and
pop
xor
scas
outs
gs
dec
cmp
push
xor
test
jle
pop
push
adc
pop
dec
aas
cmp
out
rcl
or
inc
inc
adc
lahf
push
and
loope
ins
pop
call
push
push
pop
adc
sti
xor
cmp
imul
int3
push
dec
xor
inc
cmp
xchg
push
push
sti
fs
lds
cmp
inc
aas
stos
fst
hlt
jno
push
pop
push
push
mov
mov
push
js
shl
xor
popf
pop
cmp
xchg
int3
jbe
bswap
push
dec
and
scas
fucom
cmp
and
rcl
pop
add
std
sub
lea
jecxz
inc
or
pop
inc
ds
xor
mov
mov
(bad)
pusha
push
pop
aaa
xchg
inc
or
ins
jp
push
jo
rcl
and
mov
xchg
jge
jecxz
inc
sbb
inc
and
xchg
fistp
out
push
popa
lods
lock
adc
repz
out
push
popa
lods
lock
mov
add
repz
sub
scas
push
(bad)
fs
movs
push
inc
cmp
mov
loopne
rcl
je
rcl
pop
aaa
xchg
inc
or
xchg
push
call
pop
dec
cmp
pop
and
cmps
outs
gs
add
inc
adc
pushf
push
push
mov
loopne
ror
je
retf
inc
inc
pop
and
out
(bad)
mov
lea
push
sti
je
xor
mov
pop
je
inc
jle
aam
inc
and
mov
and
lea
loope
jl
ret
push
and
xor
into
icebp
xor
mov
jle
pusha
bound
movs
gs
xor
stos
fst
jmp
sub
xchg
push
push
mov
xchg
les
add
shld
mov
call
shl
pusha
sub
sahf
pop
xor
fsub
dec
jle
jae
add
inc
and
aas
pushf
inc
xor
jecxz
je
add
fs
cmc
or
sub
pusha
jne
ret
push
push
add
enter
xchg
stc
ins
adc
rol
xor
retf
or
test
stc
ja
push
push
push
add
mov
dec
jge
jbe
(bad)
pusha
dec
xor
push
xor
and
data16
retf
sbb
(bad)
pop
loope
outs
arpl
jbe
add
pop
and
aas
pushf
inc
aaa
mov
out
test
inc
sub
mov
cmp
mov
les
add
xstore-rng
cmps
inc
xor
jecxz
jle
push
inc
cmp
std
xor
lods
outs
jl
add
dec
xor
xchg
push
and
stc
in
aaa
rcl
das
aad
inc
xor
xchg
mov
out
xlat
mov
call
push
inc
cmp
mov
sti
xor
lea
jecxz
adc
retf
jo
das
xor
into
std
xor
jecxz
je
push
arpl
xor
enter
nop
data16
jg
jecxz
push
(bad)
adc
mov
inc
inc
(bad)
sbb
pop
dec
pop
aaa
xchg
inc
or
and
bound
popa
push
cmp
mov
lea
fbld
bswap
inc
inc
pop
aaa
xchg
inc
or
pop
loopne
adc
aas
xor
enter
xchg
push
pop
in
ins
jg
retf
push
push
xor
fdivr
sub
mov
loope
jle
aam
push
cmp
nop
pop
xor
jle
in
imul
xor
mov
xchg
outs
arpl
dec
jae
rcl
and
icebp
sub
and
enter
aaa
xchg
inc
or
dec
js
inc
jle
rcl
sub
fsqrt
sbb
mov
imul
pop
dec
xor
fchs
add
and
ins
jg
retf
inc
jne
and
push
push
mov
xchg
pusha
jb
jbe
and
pop
inc
pop
adc
icebp
push
rcl
popa
sbb
push
push
das
sbb
aad
(bad)
xchg
data16
jno
push
inc
dec
sub
lahf
push
adc
(bad)
mov
loope
gs
inc
push
cmp
xlat
xor
xchg
data16
jno
add
xor
cli
sub
in
fs
shl
inc
adc
fcmovu
cmps
loope
scas
or
xchg
test
push
jmp
mov
mov
popa
in
pushf
push
les
xor
dec
pop
lock
push
mov
sbb
jg
xor
push
push
hlt
and
mov
sbb
outs
lods
xor
cmp
mov
jle
loop
adc
xor
pop
push
repz
nop
push
stos
jmp
sbb
xor
push
pop
loop
pop
ficomp
pop
pop
popf
or
jp
and
dec
pop
loop
pop
fdivr
sbb
xor
inc
inc
cld
cmp
mov
or
movs
or
and
stc
xor
shr
pop
sbb
cmp
pop
pop
out
and
mov
push
mov
add
push
adc
cmp
ja
retf
nop
or
inc
mov
das
dec
jns
cmp
push
mov
or
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
cs
pop
cld
and
lea
test
and
pop
cli
cmp
mov
add
xchg
add
cmp
push
pop
cli
cmp
mov
or
add
bound
ss
sar
pop
sbb
and
inc
cmc
cmp
test
add
sub
es
out
mov
ret
push
adc
das
xor
xor
xchg
push
movs
in
or
sbb
in
add
out
ss
sahf
scas
mov
mov
and
xor
fisub
push
add
adc
bound
and
cdq
pop
mov
or
sub
xor
movs
xchg
dec
mov
pop
cmp
cmp
push
pop
cli
cmp
mov
push
mov
push
push
jp
cmp
jne
cld
cmp
mov
push
mov
adc
data16
cmp
pop
ret
push
scas
icebp
push
sbb
xor
push
fdiv
adc
cmp
push
push
repnz
xchg
in
add
or
loopne
dec
shl
sbb
cmp
push
pop
cli
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
popa
mov
cld
cs
xlat
mov
pop
mov
push
or
and
out
and
scas
lea
retf
lahf
sub
js
and
cmp
and
mov
ja
retf
test
add
sbb
jne
(bad)
jg
mov
sbb
outs
mov
cld
and
shr
jp
movs
sbb
mov
xor
inc
fstp
inc
cmps
mov
push
mov
or
ja
cmp
dec
cld
cmp
movs
pushf
dec
stos
in
add
nop
sbb
pop
mov
xor
inc
(bad)
and
into
rol
pushf
test
inc
pop
cli
cs
xlat
mov
push
mov
or
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
and
cmc
adc
adc
mov
or
and
arpl
(bad)
pop
mov
or
mov
pop
js
stos
das
pop
pop
out
ss
xlat
mov
pop
mov
add
or
ins
mov
das
push
pop
cli
cmp
mov
or
mov
push
pop
pop
aad
ja
scas
mov
fwait
icebp
add
cmp
push
pop
cli
cmp
mov
push
mov
or
sub
xor
mov
or
outs
movs
xor
push
imul
xchg
retf
lahf
sub
inc
mov
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
cmp
imul
pushf
dec
fwait
dec
or
sbb
push
pop
cli
cmp
mov
pop
xchg
loop
add
daa
es
inc
(bad)
jg
xchg
xchg
retf
test
sub
repz
mov
(bad)
mov
add
push
ss
dec
rcr
push
into
cwde
pushf
pop
mov
(bad)
mov
movs
xor
ss
pop
or
lea
sbb
and
cli
aaa
push
fidivr
add
xchg
pop
or
das
das
push
pop
cli
cmp
mov
push
mov
sbb
cmp
push
jmp
mov
or
and
dec
fsubr
push
xchg
and
sbb
cmp
push
pop
cli
cmp
mov
push
mov
push
pop
pushf
test
pop
cli
and
jb
pushf
dec
fwait
repnz
mov
lods
cmp
push
pop
cli
cmp
mov
pop
mov
pop
sbb
and
pop
xlat
mov
push
mov
or
and
fwait
cmp
mov
retf
add
imul
movs
pushf
push
mov
pop
xchg
mov
push
icebp
sub
mov
pop
mov
sbb
push
cmp
jge
idiv
pop
xlat
mov
pop
mov
pop
add
or
and
cli
cmp
scas
adc
mov
add
das
push
pop
cli
cmp
scas
adc
mov
push
adc
cmp
push
push
div
inc
(bad)
scas
adc
mov
add
jmp
cmp
scas
adc
mov
add
and
xor
mov
or
test
adc
and
pop
into
cmp
push
mov
pop
xchg
(bad)
cmps
cmp
push
push
icebp
cmp
pushf
push
mov
ins
sbb
xor
cmp
pop
mov
adc
xchg
cmp
mov
push
mov
push
add
sub
hlt
cmp
xchg
push
mov
push
add
cmp
push
push
icebp
cmp
push
mov
test
bound
and
shl
sbb
bound
cld
cmp
mov
or
(bad)
pop
or
and
loopne
mov
mov
or
sub
push
repz
es
ror
pop
sbb
and
cli
cmp
mov
pop
pop
lea
adc
es
push
loopne
push
xlat
mov
pop
mov
add
xor
inc
(bad)
cmp
mov
pop
mov
sbb
push
xor
inc
pop
cli
xor
fdiv
pop
adc
cmp
pop
push
icebp
cmp
mov
pop
mov
(bad)
fadd
and
pop
(bad)
mov
ficom
test
cmp
push
fisubr
unpcklps
and
pop
fistp
adc
test
adc
pop
push
dec
jecxz
ret
xlat
mov
pop
mov
adc
and
jecxz
pop
xlat
mov
pop
mov
jbe
hlt
or
bound
outs
pop
xlat
mov
pop
mov
add
or
sbb
xor
push
inc
jae
pop
xlat
mov
add
test
adc
mov
dec
shl
cmp
mov
pop
push
lea
pop
bound
icebp
xor
pushf
push
mov
sbb
bound
ss
xlat
mov
pop
mov
sbb
imul
mov
or
mov
sbb
aaa
and
jmp
push
fistp
pop
push
lea
sbb
icebp
and
int
ins
push
mov
or
ins
movs
and
cli
cmp
mov
pop
add
adc
dec
sub
and
xor
jle
lock
push
add
pop
push
jecxz
inc
pop
dec
pushf
push
mov
or
lahf
cmp
bound
cmp
dec
jmp
adc
std
and
push
push
out
and
shl
sbb
dec
movs
and
push
into
cmp
dec
retf
in
pop
sbb
xor
pop
pop
out
cmp
mov
sub
test
adc
cmp
pop
pop
repnz
push
shl
das
adc
pop
dec
rcr
cmp
mov
or
bound
out
das
dec
shl
or
jbe
imul
dec
out
cmp
pop
mov
pop
add
imul
dec
out
cmp
pop
mov
push
add
xor
push
int
xchg
pop
mov
or
test
and
xor
lds
adc
pop
adc
cmp
pop
inc
mov
das
sar
or
lahf
sbb
bound
cmp
mov
pop
sbb
cmp
push
push
repnz
push
shl
or
lahf
and
bound
outs
pop
xlat
mov
pop
mov
pop
or
dec
dec
loopne
(bad)
mov
pop
mov
adc
cmps
das
and
jno
cmp
mov
pop
sbb
jae
pop
pop
cli
cmp
mov
bound
test
xor
cli
xor
fdiv
add
mov
and
cmp
mov
fild
push
or
pop
push
icebp
cmp
mov
pop
sbb
jecxz
fcomp
mov
pop
sbb
dec
sub
cmp
int
push
mov
adc
push
lods
cmp
pop
push
out
and
int
pushf
push
mov
sbb
bound
inc
pop
xlat
mov
pop
mov
(bad)
push
push
cmp
sbb
aaa
push
fidiv
add
or
adc
mov
push
sbb
cmp
jl
repz
int
imul
add
push
push
div
inc
cmps
mov
push
mov
adc
and
jp
xlat
mov
add
add
imul
mov
pop
or
or
cmp
pop
cli
ss
fisubr
(bad)
lahf
pop
pop
push
cmp
push
push
not
push
int
jno
mov
sbb
bound
sbb
mov
pop
sbb
aas
sub
xor
mov
pop
scas
icebp
pop
pop
test
das
push
push
idiv
push
mov
or
cmp
pop
sar
sbb
outs
movs
xor
push
pop
hlt
adc
scas
adc
fucom
push
sbb
and
dec
dec
loopne
inc
idiv
sbb
js
and
dec
jns
and
mov
push
mov
or
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
sub
cmp
mov
push
mov
or
sub
xor
mov
pop
mov
or
bound
loopne
xor
mov
add
pushf
test
lods
cmp
pop
pop
cld
cmp
pop
mov
sbb
push
cmp
fcomp
mov
pop
scas
icebp
pop
add
or
and
stos
cmp
inc
mov
or
cmp
pop
xlat
mov
sahf
sbb
mov
dec
ror
cmp
cmp
or
mov
sub
sub
mov
push
mov
sbb
bound
mov
xlat
mov
pop
mov
sbb
bound
cmp
pushf
xchg
inc
mov
sbb
pop
push
lock
mov
pop
mov
(bad)
in
mov
sub
xor
mov
cli
adc
test
cli
cmp
cmp
dec
xor
push
adc
add
push
pop
repnz
dec
shl
pushw
lods
push
adc
cmp
pop
push
repz
mov
das
adc
cs
push
fidiv
or
nop
push
adc
and
out
cmp
mov
pop
sbb
cmp
push
dec
icebp
cmp
push
mov
add
imul
xor
mov
in
adc
xor
sub
mov
or
test
xor
pop
cli
xor
push
mov
jl
push
cmp
push
pop
cli
cmp
mov
das
adc
and
xor
mov
or
and
icebp
ss
mov
or
dec
movs
xor
pop
jo
xor
mov
push
pop
nop
sbb
mov
stc
adc
cmp
push
mov
add
push
sub
push
(bad)
mov
pop
sbb
and
inc
cmps
mov
jle
icebp
mov
mov
clc
pop
jo
cmp
mov
push
xchg
and
pop
js
and
cld
cmp
push
mov
add
add
cld
ss
scas
adc
mov
or
push
xor
fcom
scas
lea
jecxz
xchg
sbb
xor
mov
pop
push
repnz
fidivr
ficomp
lods
add
ja
cmp
dec
rcr
xor
mov
jle
icebp
(bad)
fmul
and
repz
dec
fistp
adc
xor
dec
pop
cld
ss
mov
push
or
sbb
movs
xor
pop
add
and
adc
lea
out
pusha
popa
push
int
dec
or
sbb
nop
jle
loop
sbb
and
xor
xor
movups
xor
xor
mov
movups
xor
pop
push
repnz
mov
movups
ins
bound
and
std
xor
ja
jp
repnz
inc
mov
xchg
mov
adc
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
wbinvd
lea
mov
push
fistp
adc
xor
ins
push
repnz
fistp
adc
movs
xor
pop
push
repnz
fistp
test
pop
push
repnz
(bad)
stc
xor
ins
jle
cdq
adc
jb
rcl
xor
lea
scas
push
inc
sub
or
jl
xchg
mov
xchg
xor
pusha
bound
or
push
ins
xchg
inc
and
retf
ret
ja
loope
bound
inc
push
xor
push
ds
mov
jmp
add
aas
lahf
or
lods
sar
jl
imul
inc
push
or
shr
xor
push
inc
das
and
fnstsw
xlat
lea
stc
jl
sbb
inc
push
xor
out
xchg
movs
jo
int
xor
lsl
sub
idiv
(bad)
mov
mov
sbb
adc
into
loope
(bad)
stos
popa
ja
and
push
popa
jb
inc
cmp
iret
div
xlat
mov
mov
pop
push
xor
xchg
xor
ror
scas
adc
jl
into
inc
xor
xor
and
add
xchg
inc
and
mov
js
ins
jge
ret
push
push
jl
lahf
pop
cmp
xor
pop
lds
xor
xchg
inc
cmp
pusha
jl
bound
mov
outs
(bad)
cmp
pushf
mov
xchg
ret
das
sub
rol
xor
dec
xor
inc
je
pusha
jge
enter
cmp
adc
lods
cmc
cli
sub
mov
scas
and
inc
cmp
or
sub
or
dec
test
add
inc
xor
xchg
jmp
enter
and
ds
call
je
jo
add
dec
pop
push
pop
rcl
push
enter
xchg
inc
jg
push
scas
push
push
cmp
mov
jmp
push
and
jne
add
mov
adc
cmps
dec
pop
ret
inc
dec
xor
jae
sbb
mov
rcl
cld
movs
push
dec
fld
in
jl
or
mov
pop
xchg
sti
int3
push
loop
dec
push
les
cmp
jbe
adc
(bad)
std
rcr
sti
lods
dec
inc
int3
inc
push
and
jne
add
mov
adc
cmps
dec
pop
ret
inc
dec
xor
jae
sbb
mov
rcl
cld
movs
push
dec
fld
in
jl
or
mov
pop
xchg
sti
int3
push
loop
dec
push
les
cmp
jbe
adc
(bad)
std
rcr
sti
lods
dec
inc
int3
inc
push
and
jne
add
mov
adc
cmps
dec
pop
ret
inc
dec
xor
jae
sbb
mov
rcl
cld
movs
push
dec
fld
in
jl
or
mov
pop
xchg
sti
int3
push
loop
dec
push
les
cmp
jbe
adc
(bad)
std
rcr
sti
lods
dec
inc
int3
inc
push
and
jne
add
mov
adc
cmps
dec
pop
ret
inc
dec
xor
jae
sbb
mov
rcl
cld
movs
push
dec
fld
in
jl
or
mov
pop
xchg
sti
int3
push
loop
dec
push
les
cmp
jbe
adc
(bad)
std
rcr
sti
lods
dec
inc
int3
inc
push
and
jne
add
mov
adc
cmps
dec
pop
ret
inc
dec
xor
jae
sbb
mov
rcl
cld
movs
push
dec
fld
in
jl
or
mov
pop
xchg
sti
int3
push
loop
dec
push
les
cmp
jbe
adc
(bad)
std
rcr
sti
lods
dec
inc
int3
inc
push
and
jne
add
mov
adc
cmps
dec
pop
ret
inc
dec
xor
jae
sbb
mov
rcl
cld
movs
push
dec
fld
in
jl
pop
mov
xor
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
movups
xor
pop
push
repnz
mov
sldt
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
adc
add
push
je
imul
add
inc
add
sub
push
add
add
adc
add
and
dec
inc
add
add
add
mov
add
and
outs
bound
add
add
add
add
add
push
xor
add
add
add
add
add
add
add
add
add
add
cmp
add
xor
add
mov
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
or
add
add
cmp
add
add
add
or
dec
add
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
add
mov
push
add
add
add
or
or
add
or
or
add
or
cmp
jp
push
or
adc
push
add
or
cld
or
sbb
mov
push
add
push
mov
or
push
push
adc
push
add
add
add
add
push
mov
push
add
push
mov
push
add
ud0
push
add
add
or
push
or
mov
or
imul
or
mov
adc
fmul
leave
clts
add
adc
push
add
adc
adc
push
add
dec
adc
add
add
add
add
adc
adc
adc
adc
push
add
add
add
add
mov
mov
push
add
add
adc
adc
add
adc
fild
cmp
add
push
add
jb
push
add
add
adc
or
add
push
add
adc
or
fmul
jb
add
add
add
add
add
add
add
add
add
sub
aaa
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
xor
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
cmps
add
add
add
add
add
pop
add
add
add
mov
add
and
pop
add
add
add
mov
add
and
pop
add
add
add
mov
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
aad
add
or
add
add
add
add
add
add
add
add
add
fild
add
and
pop
add
add
add
loop
add
and
pop
add
add
add
out
add
and
pop
add
add
add
jmp
add
add
add
out
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
sbb
add
add
add
add
add
add
xchg
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
stos
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
and
and
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
into
add
add
add
add
rol
add
add
test
add
or
add
add
add
add
fiadd
add
add
pop
add
and
sub
fiadd
add
add
xchg
add
add
add
add
add
add
jecxz
add
add
popf
add
add
add
add
add
add
out
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fild
add
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
adc
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
loopne
adc
add
add
cwde
add
test
add
add
sub
add
add
ss
dec
add
add
add
pop
sbb
add
fild
loopne
add
cli
pop
xor
add
adc
mov
or
add
inc
or
or
add
xchg
or
or
add
add
or
add
call
add
or
or
add
jg
jge
add
sahf
or
add
add
add
add
jge
add
xor
add
or
add
and
add
and
jge
add
sub
cdq
add
add
loopne
add
fs
add
add
inc
add
add
jmp
add
jg
inc
add
add
add
or
or
add
add
add
add
jle
xor
add
xchg
or
add
add
add
push
sbb
add
add
add
add
sbb
add
add
add
add
adc
xchg
add
add
add
adc
sahf
add
add
add
add
or
add
add
add
and
add
add
or
add
and
add
add
or
add
add
add
add
add
inc
add
arpl
add
and
add
add
inc
add
push
and
add
add
add
add
add
add
inc
add
jno
add
jo
add
add
adc
jl
js
add
cwde
and
add
add
add
add
add
sbb
add
les
add
add
add
scas
add
and
add
add
sbb
add
add
add
add
adc
xchg
add
add
pop
and
add
add
add
add
add
add
push
add
add
add
add
and
add
add
add
scas
add
fsub
add
add
push
add
mov
and
add
add
add
pop
add
add
push
add
leave
add
add
and
push
add
add
and
push
add
add
add
add
and
add
add
add
add
add
add
push
add
add
add
add
push
add
add
daa
add
add
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
pusha
daa
add
add
push
add
add
add
add
add
add
js
add
add
push
add
add
add
add
add
xor
cmp
movs
daa
add
add
push
add
aaa
add
add
add
add
add
mov
add
add
add
daa
add
add
push
add
add
add
add
push
add
add
add
add
push
add
pusha
xor
add
add
sbb
add
je
add
add
push
add
add
push
add
add
pusha
aaa
add
add
push
sbb
add
je
add
add
push
add
add
js
add
add
push
add
add
jl
add
add
push
add
add
mov
add
sbb
add
mov
add
add
push
add
jg
push
add
add
add
sbb
add
jo
add
add
push
sbb
add
mov
add
add
push
add
push
mov
push
add
add
add
push
pop
push
add
add
add
add
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
movs
add
add
add
add
inc
add
push
stos
add
add
add
add
push
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
mov
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
xchg
push
retf
add
add
add
add
retf
push
fiadd
jp
add
add
add
inc
add
push
in
jnp
mov
add
sbb
add
add
add
sbb
add
add
add
xchg
push
hlt
add
add
add
retf
push
fiadd
mov
add
add
add
inc
add
push
inc
mov
add
add
add
push
sbb
add
add
add
xchg
push
push
add
add
add
retf
push
adc
xchg
add
add
add
add
jmp
add
add
add
add
sbb
add
add
add
xchg
push
and
popf
add
add
add
add
retf
push
sub
add
add
add
jmp
add
add
add
add
sbb
add
add
add
xchg
push
cmp
test
add
add
add
inc
add
push
dec
add
add
add
jmp
add
push
sbb
add
add
pop
pop
add
add
add
sbb
add
add
add
xchg
push
add
add
inc
add
push
sub
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
add
xchg
push
jnp
leave
add
add
add
add
retf
push
sub
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
add
xchg
push
xchg
add
add
add
add
add
retf
push
lahf
add
add
add
add
add
jmp
add
add
sbb
add
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
add
xchg
push
mov
jecxz
add
add
add
inc
add
push
mov
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
add
xchg
push
int
repnz
add
add
add
retf
push
sub
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
add
xchg
push
jecxz
add
add
add
add
inc
add
push
repnz
add
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
add
xchg
push
add
add
add
add
retf
push
mov
add
add
add
jmp
add
xor
add
add
sbb
add
add
xor
add
add
add
add
add
add
add
sbb
add
add
add
add
add
xchg
push
pop
add
add
add
add
inc
add
push
sub
add
add
add
jmp
add
push
sbb
add
add
add
sbb
add
add
aaa
add
add
push
add
pop
daa
add
add
aaa
add
add
push
add
pop
xor
and
hlt
aaa
add
add
push
sbb
add
add
add
add
push
add
or
add
add
add
add
add
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
sub
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
add
xchg
push
push
add
add
add
add
add
retf
push
mov
add
add
add
jmp
add
cmp
add
add
sbb
add
add
cmp
add
add
add
add
add
cmp
add
add
add
adc
inc
add
cmp
add
add
add
ins
add
or
add
add
push
sbb
add
sub
add
add
push
add
je
inc
add
add
add
push
sbb
add
ins
xor
add
add
add
add
add
add
push
sbb
add
shl
add
add
push
add
add
add
add
push
add
add
add
add
add
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
sub
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
sub
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
sub
add
add
add
jmp
add
cmp
add
add
sbb
add
add
add
add
and
or
cmp
add
add
sbb
add
sbb
add
add
push
add
or
add
and
add
add
push
add
or
add
and
add
add
push
add
or
add
add
add
add
push
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
sub
add
add
add
jmp
add
add
add
add
sbb
add
add
add
xchg
push
out
add
add
add
add
retf
push
lock
add
add
jmp
add
add
add
push
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
sbb
add
add
push
sbb
add
add
push
sbb
add
add
and
or
add
add
add
add
sbb
add
add
add
xchg
push
or
add
add
add
retf
push
movs
add
add
add
jmp
add
cmp
add
add
sbb
add
add
push
add
add
cmp
add
add
sbb
add
add
push
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
mov
add
add
sbb
add
add
add
xchg
push
cmp
add
add
add
add
retf
push
sub
add
add
add
jmp
add
xor
add
add
sbb
add
add
and
or
add
add
add
sbb
add
add
add
add
or
mov
add
add
add
push
sbb
add
add
add
xchg
push
bound
add
add
add
add
retf
push
sub
add
add
add
jmp
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
add
xchg
push
jp
lds
add
add
add
inc
add
push
sub
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
add
xchg
push
xchg
add
add
add
add
add
retf
push
adc
fld
add
add
add
inc
add
push
popf
add
add
push
sbb
add
add
add
add
or
add
add
and
nop
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
add
xchg
push
mov
add
add
add
retf
push
sub
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
add
xchg
push
int
repz
add
add
add
retf
push
fadd
add
add
add
add
jmp
add
xor
add
add
sbb
add
add
xor
add
add
sbb
add
add
add
add
or
add
add
xor
add
add
sbb
add
add
xor
add
add
add
or
add
add
push
sbb
add
add
add
add
or
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
push
add
or
add
add
add
add
add
or
add
add
add
add
add
sbb
add
add
add
add
add
xchg
push
add
add
add
inc
add
push
or
add
add
inc
add
push
adc
add
add
push
sbb
add
add
add
add
add
xchg
push
pop
add
add
add
add
add
retf
push
sub
add
add
add
jmp
add
add
sbb
add
enter
add
push
add
or
add
add
add
push
add
pop
add
add
add
push
add
and
xor
add
add
sbb
add
dec
xor
add
add
sbb
add
sub
add
add
push
sbb
add
xor
add
add
push
add
add
add
add
push
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
xchg
push
xor
add
add
inc
add
push
sub
add
add
add
jmp
add
add
add
push
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
xchg
push
dec
add
add
add
inc
add
push
lahf
add
add
add
add
add
jmp
add
xor
add
add
sbb
add
add
xor
add
add
add
or
add
add
add
or
cmp
sbb
add
add
push
sbb
add
add
add
add
push
add
or
add
add
add
add
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
fadd
add
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
xchg
push
mov
add
add
add
retf
push
sub
add
add
add
jmp
add
add
add
push
sbb
add
sub
add
add
push
add
or
add
add
add
push
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
enter
add
add
add
inc
add
push
into
add
add
add
push
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
mov
add
add
add
jmp
add
add
add
add
sbb
add
add
add
add
inc
add
add
add
add
add
retf
push
lock
add
add
inc
add
push
test
add
add
sbb
add
js
add
add
push
sbb
add
nop
xor
add
add
add
cld
add
add
add
push
sbb
add
add
add
xchg
push
add
add
add
add
add
retf
push
fadd
add
add
add
add
jmp
add
add
add
sbb
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
pop
add
add
add
add
add
add
jne
add
add
jns
add
add
jge
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
adc
adc
add
add
sbb
and
es
sub
add
add
cmp
add
add
inc
add
inc
add
inc
add
dec
add
push
add
push
add
add
add
outs
add
jne
add
add
mov
lea
mov
add
add
add
add
add
add
leave
add
int3
add
fiadd
fld
out
add
add
jmp
add
add
out
add
cli
add
std
add
add
add
add
or
add
add
adc
add
add
push
push
add
add
sbb
add
add
add
xor
add
add
xor
add
add
inc
push
add
add
pop
push
add
add
imul
add
add
add
add
add
add
push
add
add
lahf
push
add
add
movs
push
add
add
pop
push
add
add
imul
add
add
push
add
add
repz
add
add
test
add
cmps
push
add
add
add
add
push
add
add
lock
add
add
repz
add
add
test
add
add
add
add
imul
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
pop
add
or
adc
add
pop
add
or
and
add
or
cmps
push
add
or
mov
add
push
add
add
mov
add
push
add
add
inc
add
add
add
add
add
add
add
add
pop
add
or
adc
add
pop
add
or
and
add
add
pop
push
add
add
imul
add
add
add
push
add
add
cmps
push
add
add
mov
add
push
add
add
mov
add
push
add
add
pop
push
add
add
imul
add
add
add
add
xor
add
add
aaa
pop
add
add
cmp
add
add
add
add
add
push
add
add
sub
add
add
xor
add
add
aaa
pop
add
add
cmp
add
add
pop
push
add
add
imul
add
add
pop
add
add
inc
pop
add
add
dec
pop
add
add
cmps
push
add
add
add
add
push
add
add
aas
pop
add
add
inc
pop
add
add
dec
pop
add
add
pop
push
add
add
imul
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
push
add
add
or
add
add
aad
add
add
mov
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
pusha
pop
add
add
pop
push
add
add
imul
add
add
add
add
je
add
add
js
add
add
jge
add
add
add
add
add
push
add
add
ins
pop
add
add
je
add
add
js
add
add
jge
add
add
pop
push
add
add
imul
add
add
xchg
add
add
mov
add
add
pop
add
add
add
add
add
add
push
add
add
test
add
add
xchg
add
add
mov
add
add
pop
add
add
add
add
add
add
imul
add
add
add
push
add
add
cmps
push
add
add
mov
add
push
add
add
mov
add
push
add
add
pushf
pop
add
add
lahf
pop
add
add
pop
push
add
add
imul
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
push
add
add
mov
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
mov
add
add
add
push
add
add
cmps
pop
add
add
stos
pop
add
add
scas
pop
add
add
mov
add
add
add
add
add
add
imul
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
pop
add
add
aad
add
add
mov
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
push
add
add
mov
add
add
pop
add
add
leave
pop
add
add
into
pop
add
add
pop
push
add
add
imul
add
add
add
add
push
add
add
in
add
add
out
add
add
in
pop
add
add
lock
add
add
add
add
or
add
add
or
add
add
or
add
push
or
add
add
add
add
and
add
add
sub
add
add
sub
add
add
pop
push
add
add
imul
add
add
or
add
add
add
or
add
cmps
push
add
add
add
add
push
add
add
das
or
add
add
add
or
add
add
add
add
imul
add
add
add
add
cmps
push
add
add
mov
add
push
add
add
cmp
add
add
dec
or
add
add
add
add
push
or
add
pop
or
add
add
add
add
add
jno
add
add
jbe
add
add
jge
add
add
or
xchg
add
add
movs
or
add
add
add
mov
add
add
add
imul
add
add
ror
add
add
or
add
(bad)
or
add
add
add
add
push
add
add
mov
add
or
add
add
or
add
(bad)
or
add
add
add
add
imul
add
add
or
add
add
or
add
add
or
add
fisttp
add
add
add
add
add
add
push
add
add
leave
or
add
add
or
add
add
or
add
fisttp
add
add
add
add
add
add
imul
add
add
add
add
push
add
add
repnz
add
add
or
and
add
or
and
add
add
add
and
add
add
or
add
add
add
add
or
add
add
add
add
inc
or
add
add
add
add
imul
add
add
add
add
cmps
push
add
add
mov
add
push
add
add
dec
or
add
add
add
add
imul
add
add
add
add
push
or
add
add
add
add
push
add
add
dec
or
add
add
add
add
pop
or
add
add
add
add
or
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
imul
add
add
or
add
add
or
add
add
or
add
cmps
push
add
add
add
add
push
add
add
ror
add
add
(bad)
or
add
add
or
add
add
or
add
add
or
add
add
or
add
hlt
or
add
add
add
add
add
sbb
add
add
and
add
add
sub
add
add
add
add
add
add
imul
add
add
or
add
add
add
add
dec
or
add
dec
or
add
add
add
add
push
add
add
aas
or
add
add
add
add
dec
or
add
dec
or
add
add
add
add
imul
add
add
add
add
pop
or
add
add
add
add
pop
or
add
add
add
add
add
push
add
add
push
or
add
add
add
add
pop
or
add
pop
or
add
add
add
add
add
imul
add
add
add
add
ins
or
add
add
add
add
cmps
push
add
add
add
add
push
add
add
imul
ins
or
add
add
add
add
jle
add
add
test
add
add
mov
add
add
mov
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
or
add
add
add
add
push
add
add
mov
add
add
mov
add
add
mov
add
or
add
add
add
add
imul
add
add
or
add
add
or
add
add
or
add
cmps
push
add
add
add
add
push
add
add
leave
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
pop
or
add
add
add
add
add
imul
add
add
add
or
add
add
add
add
push
add
add
and
add
or
add
add
add
add
imul
add
add
add
add
push
add
add
or
add
add
or
add
add
or
add
or
add
add
add
add
dec
or
add
add
add
add
add
add
jns
add
add
pop
push
add
add
imul
add
add
add
add
add
add
push
add
add
mov
add
add
nop
or
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
cmps
push
add
push
add
add
push
add
add
lods
or
add
add
add
add
into
or
add
add
or
add
add
or
and
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
pop
push
add
add
imul
add
add
or
add
add
add
add
push
add
add
pop
or
add
add
add
add
imul
add
add
or
add
add
or
add
add
add
add
sbb
add
add
add
add
push
add
add
or
add
add
or
add
add
add
add
sbb
add
add
add
add
imul
add
add
or
add
add
or
add
add
add
add
cmps
push
add
add
add
add
push
add
add
and
add
add
or
add
add
add
add
xor
add
add
or
add
add
or
add
inc
or
add
add
add
add
imul
add
add
add
add
cmps
push
add
add
mov
add
push
add
add
inc
or
add
add
add
add
imul
add
add
add
add
push
or
add
add
add
add
cmps
push
add
add
add
add
push
add
add
dec
or
add
add
add
add
push
or
add
add
add
add
imul
add
add
add
add
add
add
cmps
push
add
add
mov
add
push
add
add
pop
or
add
add
add
add
jbe
add
add
jp
add
add
pop
push
add
add
imul
add
add
mov
add
add
add
add
add
push
add
add
test
add
add
add
add
add
pop
add
add
jno
pop
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
scas
add
add
add
add
add
add
add
push
cdq
add
push
ret
add
arpl
sbb
pop
add
sub
sub
iret
push
sbb
jae
jno
test
push
sbb
pop
add
add
push
dec
add
add
pop
rol
add
add
add
add
add
push
jne
rol
in
push
push
jp
xor
pop
add
shld
jmp
pop
loope
cmpxchg
stc
add
add
add
mov
xadd
icebp
add
xchg
movlps
stc
add
add
add
pmaxsw
sbb
out
push
syscall
or
add
(bad)
or
add
(bad)
or
add
(bad)
or
add
adc
jmp
or
add
adc
or
xor
add
push
or
add
pop
or
fwait
adc
inc
add
push
push
pop
add
add
pop
add
push
add
adc
mov
cmp
add
nop
or
add
adc
imul
or
jae
call
or
pop
adc
adc
adc
cmp
js
mov
adc
adc
add
xchg
cdq
add
adc
or
jae
jno
mov
retf
add
add
adc
or
add
adc
add
or
or
add
adc
adc
or
or
add
push
leave
add
add
add
pop
add
or
add
or
add
add
add
push
and
and
inc
push
sub
mov
jl
cs
add
or
add
add
or
add
add
or
add
add
or
xor
inc
push
inc
add
add
push
inc
add
add
push
inc
add
add
push
dec
add
add
add
arpl
sbb
sub
arpl
adc
sbb
imul
add
add
add
add
push
add
add
add
add
mov
mov
scas
push
mov
push
mov
push
mov
push
mov
push
mov
push
rol
add
ret
add
add
ret
add
add
push
loopne
xor
inc
push
jecxz
jnp
inc
push
add
adc
sbb
add
xor
inc
push
and
adc
sbb
and
xor
inc
push
inc
add
add
inc
add
add
push
pusha
add
add
push
pusha
add
add
add
add
mov
push
rol
add
rol
add
push
loopne
xor
inc
push
add
adc
sbb
add
xor
inc
push
pusha
add
mov
push
mov
push
ror
add
or
inc
push
or
add
inc
adc
add
loopne
and
inc
push
pusha
push
and
inc
push
adc
add
mov
push
rcr
add
inc
sbb
add
pusha
sbb
add
mov
push
loopne
and
inc
push
and
and
inc
push
pusha
pop
and
inc
push
mov
push
rcr
add
and
add
mov
push
pusha
and
add
loope
lds
jecxz
lds
ja
lds
arpl
push
push
mov
fild
jmp
pop
mov
xchg
pop
mov
fld
clc
pop
add
adc
and
cmp
inc
or
or
retf
push
mov
test
retf
push
bound
ins
or
jnp
test
mov
xchg
or
or
or
push
into
or
or
or
or
fild
jmp
or
push
add
fild
fild
retf
push
dec
or
or
push
push
or
pop
or
pop
add
add
add
push
add
add
add
add
add
outs
or
add
cdq
add
add
loopne
dec
add
add
ja
cdq
add
cdq
add
add
add
add
or
loopne
cdq
add
ins
or
xor
xor
push
or
add
add
cdq
add
jecxz
mov
pop
add
add
add
outs
or
or
or
add
cdq
or
add
cdq
add
add
or
cdq
add
add
or
or
cmps
or
add
cdq
add
add
add
dec
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
sbb
jmp
pop
add
add
add
add
add
add
add
jecxz
pop
add
add
add
add
add
add
add
add
ins
or
add
add
add
cdq
add
add
or
add
add
add
jge
cdq
add
add
add
add
add
add
add
jecxz
loopne
jmp
xor
dec
add
add
loopne
loopne
cdq
add
add
add
add
add
add
add
cmp
push
add
add
add
add
inc
add
add
rol
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
push
addr16
push
or
cld
or
or
or
jne
jne
mov
jne
inc
push
dec
push
push
push
pop
push
pop
pop
push
or
add
add
add
add
add
jno
add
inc
add
cmp
add
add
inc
add
or
inc
add
ins
or
add
or
add
scas
add
pop
add
mov
pushf
or
add
leave
add
or
add
rol
add
add
inc
add
add
or
add
xor
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
mov
add
add
add
add
or
leave
sldt
add
add
add
add
add
mov
add
add
add
or
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
or
and
add
add
add
add
add
add
add
add
add
add
add
add
and
sub
add
add
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
cmp
inc
add
add
cmp
inc
add
add
add
cmp
inc
add
add
add
add
inc
add
inc
add
inc
add
add
inc
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
add
pop
add
pop
add
add
add
pop
add
adc
sbb
pop
add
add
sbb
pop
add
add
cmp
lods
add
add
push
das
add
imul
push
cmp
ror
add
or
add
or
add
or
add
or
add
or
add
or
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
add
inc
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
ja
xor
add
gs
ins
xor
add
js
push
arpl
js
js
data16
add
jno
add
add
push
xor
jo
imul
je
pop
bound
add
add
pop
cmp
add
add
jno
xor
add
add
add
je
ss
push
jo
add
jae
jo
imul
je
add
xor
push
ss
push
aaa
imul
add
jb
outs
aaa
add
push
ins
add
add
jne
add
jno
bound
jp
xor
jo
ins
cmp
xor
add
jp
add
jno
outs
add
cmp
push
imul
jb
bound
ins
add
xor
push
ins
jb
imul
ja
ins
xor
jne
add
jno
je
push
add
xor
jae
add
outs
jne
add
xor
add
add
add
add
fs
add
outs
jbe
bound
jb
js
cmp
add
add
bound
add
add
outs
imul
add
add
ja
add
jo
push
add
je
jae
add
xor
outs
add
add
xor
push
add
xor
fs
imul
js
jno
ja
imul
xor
outs
cmp
outs
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
jo
imul
inc
popa
jae
add
arpl
add
arpl
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
bound
jb
imul
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
popa
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
je
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
jno
add
add
jne
cmp
ins
pop
xor
ins
popa
add
aaa
add
imul
jae
add
imul
xor
pop
add
jb
ja
imul
xor
jo
ins
xor
je
outs
jns
jns
ja
jb
add
add
xor
inc
popa
je
push
imul
push
imul
add
xor
add
jb
jp
xor
gs
jbe
jp
imul
push
jp
push
inc
outs
xor
add
jo
add
add
xor
imul
bound
add
ins
je
ins
jp
ins
jo
xor
push
jo
add
jp
js
add
fs
jb
pop
data16
add
outs
add
cmp
jb
cmp
fs
aaa
ins
jne
bound
add
popa
je
pop
add
arpl
fs
jp
fs
outs
add
ja
cmp
ja
xor
ins
je
xor
add
bound
add
xor
data16
add
xor
outs
bound
jp
aaa
jb
add
xor
imul
ja
jo
cmp
imul
xor
data16
ja
add
ins
add
xor
ins
jae
popa
cmp
jp
jae
add
add
jbe
xor
js
jno
push
je
jp
xor
addr16
add
jp
add
add
add
add
add
outs
add
jns
ja
jo
je
jb
arpl
jo
add
bound
xor
push
ins
pop
add
add
jae
add
xor
dec
popa
imul
gs
fs
arpl
xor
add
xor
imul
imul
ja
ins
pop
ss
add
add
xor
popa
jb
ins
je
jne
push
imul
add
add
outs
jns
cmp
jo
imul
add
add
add
add
jns
add
jb
ins
xor
jne
outs
jae
je
push
je
popa
popa
addr16
push
xor
push
imul
je
add
add
je
jns
jbe
jne
pop
jbe
add
add
jne
xor
dec
jne
je
arpl
je
gs
gs
je
add
addr16
bound
arpl
popa
jb
gs
gs
outs
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
imul
add
addr16
add
inc
gs
gs
je
inc
popa
ins
ins
bound
imul
gs
gs
je
inc
jae
outs
arpl
popa
je
add
fs
outs
jbe
imul
gs
gs
je
inc
jae
outs
arpl
jae
ins
je
dec
outs
jbe
imul
ja
jo
add
data16
cmp
bound
jno
jne
jo
jbe
jne
add
jne
add
add
aaa
add
jbe
fs
add
add
popa
fs
add
popa
addr16
outs
xor
imul
outs
add
cmp
ja
jno
bound
add
ins
ins
add
cmp
data16
jns
je
aaa
pop
outs
jno
jno
gs
add
jns
xor
je
jo
jbe
xor
imul
jb
add
add
ins
add
add
xor
data16
add
xor
add
xor
ins
jbe
add
cmp
add
ja
push
add
je
ja
jbe
imul
je
arpl
jb
ja
arpl
bound
jp
jne
js
js
add
add
outs
add
jno
jns
jp
ins
add
outs
add
add
add
gs
jp
jns
add
add
bound
jb
arpl
push
imul
data16
xor
add
push
push
jno
cmp
popa
add
js
add
imul
outs
xor
add
jne
bound
jbe
addr16
add
jae
outs
xor
add
outs
imul
data16
jp
xor
addr16
js
add
push
imul
ins
imul
aaa
add
ja
aaa
add
jne
add
imul
imul
xor
add
xor
imul
add
jne
add
add
aaa
add
add
add
add
ins
js
add
imul
gs
add
gs
add
cmp
push
jb
outs
add
push
add
jp
outs
pop
jae
add
xor
add
push
add
add
xor
je
arpl
jns
imul
add
outs
jp
cmp
jns
xor
jo
xor
data16
arpl
add
imul
xor
jno
xor
add
jno
js
cmp
jns
add
ins
jo
jne
add
jo
addr16
add
add
ins
outs
add
push
imul
jb
jb
jo
add
add
je
add
xor
ja
xor
jns
imul
bound
imul
jo
xor
imul
aaa
jae
ja
add
xor
add
add
ins
jo
add
outs
push
push
outs
add
xor
jns
cmp
je
outs
add
jns
pop
add
add
imul
jo
push
imul
xor
add
arpl
popa
add
outs
jae
outs
outs
ins
add
ss
jo
jno
add
cmp
add
ja
ja
push
add
jo
imul
ins
outs
xor
add
data16
add
add
xor
imul
cmp
xor
jp
je
bound
imul
add
add
add
je
jb
cmp
add
jbe
outs
ins
cmp
cmp
add
ins
aaa
outs
add
outs
ins
ins
add
jns
ins
add
data16
add
add
xor
add
jb
jae
jno
pop
add
xor
add
ins
jo
ja
ins
fs
add
arpl
je
addr16
jno
pop
imul
add
imul
aaa
add
add
aaa
add
xor
ja
outs
jae
popa
jb
add
add
cmp
add
imul
jb
push
cmp
add
jbe
imul
outs
jns
arpl
ja
addr16
add
popa
add
add
imul
jp
add
bound
push
pop
jbe
add
popa
add
popa
add
bound
outs
add
cmp
add
cmp
add
add
add
add
arpl
outs
push
ins
push
jne
cmp
bound
je
add
arpl
jb
addr16
ins
push
bound
jbe
add
ja
jno
jae
jns
add
add
add
ja
je
add
outs
jbe
add
push
cmp
jns
xor
push
ins
add
jp
add
fs
add
xor
add
imul
add
ss
add
add
je
add
ins
gs
add
arpl
jp
imul
ss
popa
ja
bound
outs
add
jae
jo
xor
add
add
ja
jno
add
add
ja
xor
popa
jbe
gs
jo
add
jne
ja
add
xor
add
ja
add
add
add
bound
ins
add
xor
add
outs
jae
add
add
bound
xor
xor
outs
jne
js
arpl
jp
xor
jae
add
jo
add
bound
push
xor
arpl
ja
ja
jo
push
xor
jns
jne
js
xor
jp
add
jae
add
xor
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
imul
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
dec
jns
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
je
dec
outs
ja
push
je
imul
pop
dec
outs
addr16
add
je
inc
push
inc
jns
add
jae
gs
cs
gs
add
arpl
imul
pop
push
push
inc
cmp
inc
outs
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
push
je
imul
arpl
jae
push
jb
push
arpl
je
add
gs
jb
jb
push
arpl
jb
jb
inc
push
outs
outs
jbe
jb
imul
inc
push
jo
imul
outs
arpl
jae
jae
jns
popa
ins
add
ins
ins
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
inc
jb
popa
je
push
jb
push
arpl
jb
jb
push
jns
je
ins
cs
jb
ja
outs
add
ins
outs
jb
inc
jb
ins
inc
jb
bound
push
outs
inc
jb
bound
addr16
inc
add
je
inc
add
je
push
add
je
inc
add
jb
push
gs
gs
je
add
je
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
outs
inc
outs
gs
arpl
jb
ins
gs
jb
push
jns
je
ins
cs
gs
arpl
outs
add
je
outs
fs
outs
outs
add
jae
ins
bound
dec
outs
popa
add
je
inc
outs
je
jns
outs
imul
push
jae
add
jb
ins
gs
jb
outs
outs
add
je
popa
jb
ins
gs
jb
add
jae
gs
cs
push
imul
gs
add
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
popa
jb
ins
outs
je
je
je
add
je
jo
jb
ins
outs
je
je
je
add
popa
jb
add
je
outs
je
jns
jae
gs
bound
addr16
dec
outs
arpl
imul
imul
je
addr16
push
jns
je
ins
inc
imul
jns
inc
outs
outs
arpl
add
jae
gs
cs
dec
add
arpl
jns
inc
js
jae
jae
inc
gs
imul
imul
outs
ja
jb
dec
imul
add
outs
je
imul
xor
add
je
outs
outs
jbe
jb
gs
push
outs
dec
outs
je
add
je
je
add
outs
je
xor
inc
jne
data16
inc
jb
popa
jns
inc
ins
outs
arpl
outs
jo
add
outs
je
xor
inc
gs
jb
arpl
jae
jns
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
inc
gs
js
arpl
imul
ins
bound
inc
gs
bound
arpl
outs
add
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
jb
outs
outs
jo
outs
outs
je
outs
ins
add
jb
gs
inc
push
arpl
inc
ins
ins
dec
ins
jo
jb
inc
je
jb
bound
add
jb
gs
xor
cs
ins
add
je
outs
fs
gs
popa
outs
fs
add
je
jb
arpl
fs
jae
add
inc
push
push
inc
je
jb
bound
add
jb
add
xor
cs
jae
jne
arpl
add
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
imul
jne
add
jae
xor
js
imul
js
gs
add
add
add
jns
pop
add
add
dec
add
outs
add
add
add
add
das
add
add
das
add
add
or
add
je
add
add
push
add
inc
add
push
add
dec
add
add
add
das
add
pop
add
pop
add
add
popa
add
dec
add
add
dec
add
dec
add
inc
add
push
add
push
add
add
add
dec
add
cmp
jno
dec
add
add
add
arpl
add
ja
push
add
add
inc
add
push
add
dec
add
jbe
dec
add
add
add
jae
xor
js
push
add
add
inc
add
inc
add
add
add
jns
push
add
add
dec
add
jae
add
ins
add
add
add
add
cmp
adc
sub
cmp
push
add
dec
add
add
cmp
push
add
imul
dec
add
add
inc
add
aaa
add
add
add
cmp
dec
add
add
dec
add
outs
add
add
push
add
add
pop
push
add
push
add
add
add
push
add
ins
add
das
add
cmp
push
add
inc
add
data16
aaa
add
arpl
push
add
add
xor
push
add
cmp
inc
add
dec
add
add
dec
add
xor
sub
pop
add
add
adc
dec
add
arpl
inc
add
dec
add
add
add
push
add
dec
add
add
ins
add
cmp
add
inc
add
push
add
imul
add
push
add
jae
outs
add
aaa
add
push
add
add
inc
add
xor
push
add
pop
add
push
add
xor
xor
dec
add
add
inc
add
push
add
imul
add
push
add
jae
ins
add
outs
add
inc
add
add
popa
add
inc
add
push
add
xor
inc
add
add
add
dec
add
cmp
dec
inc
add
inc
add
push
add
imul
add
push
add
jae
push
add
xor
dec
add
dec
add
pop
add
dec
add
add
dec
add
ja
push
add
add
dec
add
imul
add
dec
inc
add
inc
add
push
add
add
jbe
inc
add
inc
add
add
xor
dec
add
push
add
popa
add
bound
inc
add
xor
dec
add
js
xor
pop
add
dec
add
xor
cmp
add
inc
add
push
add
imul
add
push
add
jae
imul
ins
add
jae
add
pop
add
add
add
pop
add
dec
add
push
add
cmp
add
inc
add
push
add
imul
add
push
add
jae
imul
cmp
dec
add
add
data16
aaa
add
pop
add
dec
add
add
add
dec
add
dec
add
dec
inc
add
inc
add
push
add
imul
add
push
add
jae
push
dec
add
add
je
jno
push
add
outs
add
add
outs
add
inc
add
add
add
dec
add
cmp
cmp
arpl
inc
add
push
add
imul
add
push
add
jae
push
add
outs
add
cmp
sub
inc
add
xor
outs
add
add
dec
add
dec
add
adc
add
xor
add
data16
sbb
add
pop
add
inc
add
add
ins
add
add
cmp
add
sub
add
(bad)
add
pop
add
and
add
adc
pop
add
add
push
add
push
add
add
add
pop
add
cmp
dec
add
add
data16
or
add
add
jns
push
add
inc
add
dec
add
add
pusha
add
push
jge
push
add
bound
aas
add
and
inc
add
add
add
sub
cmp
dec
add
add
add
jae
xor
dec
add
add
add
pop
dec
add
jo
inc
add
outs
add
push
add
jnp
cmp
add
inc
add
add
add
push
add
add
and
pop
add
xor
add
and
bound
pusha
add
pop
add
and
add
sub
pop
add
add
add
add
dec
add
add
add
cld
jb
test
dec
push
mov
div
jmp
jp
push
sbb
mov
mov
pop
jg
aad
cmp
and
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
or
adc
or
adc
add
add
adc
add
adc
and
add
and
or
add
adc
add
add
adc
add
add
add
xor
add
adc
add
adc
add
add
add
push
adc
add
add
add
push
or
add
add
adc
adc
adc
add
add
or
push
adc
adc
or
adc
add
pop
or
add
or
add
add
push
add
or
add
push
add
push
add
push
push
add
or
or
adc
add
add
or
push
add
add
adc
add
or
add
add
sbb
add
add
add
add
add
add
push
add
or
add
add
or
add
add
or
push
pop
add
add
sbb
add
add
pop
pop
push
or
and
or
sbb
add
or
pop
and
push
push
push
or
adc
or
or
add
sbb
push
add
add
add
or
sbb
and
and
sbb
and
adc
add
sbb
add
pop
adc
sbb
and
or
and
or
or
and
add
sbb
sbb
sub
and
push
push
sbb
add
sbb
sbb
and
and
sub
and
add
sbb
adc
or
sub
and
add
or
add
push
adc
sbb
and
add
and
add
push
push
and
adc
sbb
sbb
sub
and
add
sbb
sbb
and
sbb
adc
sbb
sbb
add
add
push
adc
or
and
add
sbb
or
and
or
adc
sbb
and
sbb
and
and
sbb
and
or
and
sbb
add
push
or
pop
adc
or
sub
and
sbb
sbb
or
pop
adc
or
sub
and
add
adc
sbb
sbb
sub
and
add
sbb
and
sbb
sbb
or
add
and
add
add
sbb
and
add
adc
pop
add
or
and
adc
and
or
add
or
and
push
or
add
push
add
and
or
and
add
or
and
add
add
or
and
or
push
and
or
add
sbb
add
or
add
add
push
pop
and
add
or
push
adc
adc
sbb
and
or
adc
pop
adc
sbb
and
or
or
add
or
add
push
and
add
or
add
sbb
sbb
or
and
adc
add
add
or
and
and
sbb
and
or
and
add
add
add
add
adc
add
or
pop
adc
push
adc
sbb
and
add
push
add
add
push
pop
adc
add
add
or
or
add
pop
push
adc
sbb
and
add
sbb
push
or
add
sbb
push
or
or
or
adc
adc
sbb
and
adc
or
pop
or
sbb
sbb
and
sbb
add
or
sub
and
push
or
or
add
or
sbb
add
or
and
push
or
and
adc
adc
sbb
and
add
and
push
adc
sbb
and
push
adc
or
push
add
or
and
add
add
or
add
push
adc
and
sbb
and
add
add
add
adc
and
or
push
push
and
or
adc
sbb
or
add
and
sbb
and
add
or
and
pop
adc
and
adc
and
or
sbb
and
add
or
adc
or
or
and
add
and
add
and
adc
sbb
sub
and
or
or
add
or
sub
and
add
add
push
or
add
and
sbb
and
or
add
add
or
sub
and
or
or
or
add
and
sbb
and
pop
adc
or
add
add
or
sub
and
push
or
or
xor
add
add
add
add
add
push
pop
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
add
adc
or
adc
or
adc
adc
adc
adc
pop
add
or
pop
add
or
add
adc
add
adc
and
add
adc
add
dec
jns
inc
outs
ins
jo
je
jb
add
add
dec
jns
push
jae
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
adc
add
dec
jns
push
bound
jb
imul
add
sbb
add
add
add
add
push
add
adc
add
adc
add
add
add
add
add
add
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
add
add
add
sbb
or
pop
add
or
add
or
pop
add
sbb
sbb
adc
or
sbb
sbb
or
add
add
jno
add
sbb
add
sbb
push
pop
or
add
push
push
and
sbb
add
sbb
add
add
or
mov
adc
or
sbb
jns
or
or
add
or
pop
add
or
adc
or
or
adc
or
sbb
push
add
or
push
or
or
add
or
add
adc
push
adc
add
add
pop
add
add
sbb
pop
add
add
add
add
adc
and
adc
sbb
and
sbb
sbb
adc
or
add
sub
xor
add
popf
add
add
add
add
add
push
add
add
push
add
push
add
add
push
push
add
push
sbb
add
or
add
cmp
or
adc
add
push
add
add
pusha
add
add
push
jo
add
or
adc
or
add
je
add
adc
xor
and
test
sbb
add
push
sbb
sbb
or
adc
sbb
push
sbb
sbb
sbb
or
pop
and
add
adc
sbb
or
add
sbb
sbb
sbb
add
add
sbb
sbb
sbb
pop
or
adc
pop
adc
adc
or
or
pop
add
or
pop
push
add
adc
or
add
sbb
add
adc
or
pop
push
or
or
add
sbb
or
or
pop
push
push
or
sbb
adc
or
or
or
add
or
or
pop
or
add
push
or
push
or
pop
or
add
add
or
or
pop
add
or
add
add
push
or
pop
add
adc
add
add
or
pop
add
add
add
sbb
adc
add
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
cmp
fs
xor
xor
sub
sub
sub
arpl
xor
add
push
adc
push
adc
add
adc
add
adc
push
adc
add
add
push
sbb
push
add
sbb
adc
push
adc
push
adc
sbb
push
sbb
add
adc
sbb
push
sbb
jo
push
adc
or
dec
data16
add
add
inc
data16
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
dec
dec
dec
push
add
add
add
add
inc
add
add
or
sbb
or
push
push
inc
push
xchg
std
and
and
lods
inc
sahf
scas
xchg
in
(bad)
shl
add
pop
push
jae
jb
pop
jb
popa
fs
inc
jo
inc
popa
je
pop
dec
outs
arpl
pop
push
gs
jo
imul
js
jo
bound
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
or
dec
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
lods
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
mov
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
sub
add
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
or
add
je
add
outs
add
ins
add
popa
add
add
add
xor
add
add
jp
js
add
js
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
and
add
inc
add
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
imul
add
popa
add
add
jp
js
add
js
add
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
pusha
or
or
add
pusha
add
aam
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
lods
leave
out
add
add
jecxz
add
and
pop
add
add
add
add
add
arpl
add
add
je
add
add
add
add
jne
and
jne
ins
imul
jae
outs
and
gs
imul
outs
and
ja
jns
jne
jne
and
jge
or
push
outs
jb
popa
je
outs
outs
and
jne
jae
outs
and
ins
ins
and
ins
jo
jne
and
imul
and
and
ins
imul
jns
popa
outs
and
jb
outs
jb
popa
outs
arpl
outs
data16
jge
or
data16
jne
popa
arpl
jo
sub
jnp
jge
ja
ins
ins
and
je
ins
popa
je
arpl
ins
jns
jae
outs
and
jge
imul
je
outs
outs
and
outs
jne
and
and
popa
je
jb
jae
je
popa
je
jns
jne
jne
gs
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
scas
or
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
