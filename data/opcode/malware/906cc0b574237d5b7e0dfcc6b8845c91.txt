mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
or
push
imul
inc
mov
inc
nop
inc
add
add
(bad)
jmp
pop
add
push
push
outs
je
adc
das
jo
fld
ins
scas
ins
add
cs
fistp
pop
dec
and
addr16
push
xor
mov
jns
mov
push
mov
das
push
dec
add
inc
js
cmp
add
jle
inc
popa
inc
int3
(bad)
add
out
ss
into
adc
add
or
out
mov
push
pusha
adc
ficomp
mov
dec
repz
outs
jne
add
push
gs
add
jg
inc
outs
ins
jo
(bad)
pop
(bad)
jne
jb
lock
jge
jns
nop
push
push
add
jb
call
push
iret
out
pop
fisub
jg
adc
dec
nop
and
movs
xor
movs
mov
mov
add
fild
and
or
or
popa
jg
push
jg
cld
or
push
popa
push
fld
pop
in
je
push
adc
or
and
ficomp
add
add
test
out
pop
nop
push
xchg
cwde
mov
ds
and
pop
push
dec
bound
arpl
pop
sbb
inc
jns
xor
nop
pop
hlt
cmp
dec
adc
popa
arpl
add
loop
rcr
movs
rcr
cs
imul
push
or
mov
lock
or
imul
pop
xchg
cmp
mov
inc
mov
dec
add
jmp
pushf
inc
jo
sti
mov
int3
sbb
xor
nop
adc
cmp
sbb
mov
add
or
sbb
fldenv
cmps
dec
jno
jno
jno
sbb
dec
adc
mov
(bad)
jle
xor
ins
or
or
inc
cmp
aam
popf
pop
or
cmps
or
xchg
dec
mov
mov
outs
jmp
xor
add
push
inc
popa
push
push
imul
shr
test
jl
jb
jb
je
ins
push
fs
pop
pop
jb
jb
cwde
push
push
dec
jb
jb
xchg
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
and
jb
jb
sbb
nop
adc
jb
jb
or
movs
jb
jb
mov
jb
jb
mov
cld
mov
cmp
sbb
hlt
lock
jae
mov
add
mov
cmp
idiv
add
mov
and
mov
ss
pop
ret
addr16
in
loopne
(bad)
fcom
fild
dec
ror
push
mov
ds
pop
frndint
add
push
loopne
enter
add
(bad)
(bad)
out
outs
mov
mov
ret
lea
mov
mov
mov
mov
cmp
jne
mov
mov
mov
push
nop
mov
add
scas
mov
outs
(bad)
fcmovnu
mov
xchg
push
and
mov
mov
or
adc
pusha
pop
adc
add
or
pop
xor
adc
ret
mov
push
mov
mov
adc
mov
mov
add
rcr
mov
cmp
push
or
push
or
ret
and
test
inc
mov
or
inc
add
adc
or
iret
sub
jne
(bad)
mov
cmp
mov
pop
pop
push
fbstp
je
sti
mov
xchg
cmp
jb
mov
add
call
mov
bound
jne
mov
or
jge
pop
mov
cmp
dec
ret
jmp
pop
mov
add
shl
mov
repnz
sub
jbe
scas
aaa
inc
jnp
push
sub
mov
lock
js
(bad)
push
aam
or
or
jmp
aas
cwde
mov
jne
sbb
nop
es
mov
popa
jae
ret
jbe
jge
mov
in
mov
ds
and
add
and
push
cmp
call
lock
mov
test
je
mov
mov
frstor
(bad)
mov
push
dec
clc
mov
add
push
mov
data16
dec
std
shl
push
pop
icebp
shr
push
push
dec
pushf
cmp
in
xchg
sub
mov
in
mov
or
mov
or
mov
push
and
call
sub
mov
mov
push
in
es
ja
mov
add
cmp
ja
cmp
jp
sub
mov
sbb
xlat
push
shl
jo
or
mov
fild
mov
jmp
mov
mov
adc
xor
dec
pusha
sbb
pop
push
adc
inc
mov
mov
and
ffree
pop
add
add
sbb
rcr
mov
or
sub
mov
pop
cmp
mov
jp
or
sti
and
mov
cmp
or
or
fwait
push
sub
jbe
scas
adc
sti
push
push
add
jmp
ss
dec
rol
mov
sub
dec
push
jb
inc
add
cmp
xor
jmp
sahf
sbb
sub
or
inc
shr
sbb
jae
mov
cmp
jae
std
add
and
sbb
inc
or
daa
lods
add
dec
fistp
fwait
dec
push
ja
clc
mov
mov
or
add
repnz
shl
cmp
jg
(bad)
cli
dec
dec
inc
xlat
mov
or
je
mov
in
dec
cdq
inc
ds
adc
jne
push
(bad)
pop
pop
les
mov
jge
sti
push
jne
cmp
movs
and
push
js
fs
and
mov
pusha
jp
mov
cli
jl
mov
ret
je
cmp
adc
jle
sub
push
stos
mov
clc
call
or
call
sub
mov
fcom
or
fwait
push
inc
scas
mov
lea
test
imul
imul
mov
xchg
cmp
jge
xchg
inc
cmp
sub
inc
inc
xchg
cmp
cmovg
inc
in
mov
aaa
jecxz
mov
mov
adc
fidiv
mov
out
ror
or
xchg
mov
xchg
loopne
ficomp
test
je
imul
adc
jmp
jmp
cmp
popa
push
jecxz
pop
xor
hlt
pop
add
sbb
in
ss
push
fstp
xchg
push
mov
push
or
(bad)
adc
or
mov
sub
push
fbld
xchg
mov
or
mov
sbb
leave
jle
hlt
inc
cmp
in
mov
cmp
add
les
pop
jo
ds
pop
pop
push
adc
sub
jg
sub
int3
jmp
mov
into
sbb
test
rcr
inc
mov
mov
xor
add
lods
rol
add
test
imul
outs
mov
adc
je
bound
nop
inc
lock
mov
push
mov
sbb
pop
mov
fcom
add
adc
clc
dec
or
adc
test
jns
add
rol
stc
add
and
ins
aaa
daa
dec
mov
sub
mov
mov
sbb
cmp
pop
adc
dec
fadd
jb
add
or
sub
pusha
test
(bad)
jmp
retf
add
sbb
cmp
jl
mov
inc
push
mov
or
(bad)
outs
inc
or
mov
and
add
sub
adc
or
test
cld
mov
fcomip
hlt
fcmovne
cli
jbe
or
push
or
push
rol
repnz
pop
unpcklps
and
addr16
fsubp
push
(bad)
xor
adc
addr16
inc
je
add
cmps
(bad)
sub
sub
inc
aas
sti
or
pop
xor
add
dec
jb
sub
cmp
cmp
test
add
test
mov
fdiv
add
mov
mov
add
and
repz
push
and
scas
test
sub
pop
sub
add
dec
mov
jo
cmc
cmp
xor
into
push
lea
sub
cld
jg
js
std
(bad)
sub
sub
cmp
jge
mov
mov
and
adc
xlat
cld
pop
sub
lea
and
in
mov
aad
(bad)
scas
inc
aad
(bad)
clc
add
pop
sbb
shl
pop
add
lock
xchg
(bad)
cmc
push
sub
mov
add
sub
pop
cmp
aaa
adc
ds
enter
push
sbb
sbb
cmp
inc
cmp
inc
adc
push
pop
add
sub
cmp
in
cmp
or
add
pop
(bad)
sub
mov
sbb
inc
adc
or
mov
push
mov
daa
or
adc
sub
or
mov
sbb
out
scas
sub
lock
mov
dec
adc
clc
adc
xlat
imul
mov
cmp
pusha
xchg
loope
movs
clc
pusha
sub
add
adc
repz
popa
popf
mov
shr
sub
xor
gs
outs
add
push
mov
and
sbb
leave
aam
loopne
in
cmp
mov
sbb
add
enter
pusha
pop
pop
inc
jmp
pop
int3
(bad)
rol
popa
cld
push
lods
fimul
mov
mov
add
call
shl
jmp
inc
mov
mov
adc
sbb
mov
pop
movd
lods
push
ins
pop
cmp
jg
pop
mov
pop
je
pop
jmp
mov
rcr
js
dec
sbb
add
pusha
sbb
pop
jle
xchg
cmp
mov
sub
cmp
adc
ret
pop
cmp
inc
add
xor
jae
loope
sub
xor
or
pop
mov
and
leave
jmp
inc
add
jne
js
mov
or
pop
rcl
adc
test
xor
movs
pusha
or
je
push
scas
push
int3
sti
clc
stos
jle
inc
cld
jbe
cld
add
adc
push
mov
xchg
push
in
cli
add
or
sti
mov
mov
mov
daa
jg
push
movs
pop
or
mov
cmp
or
shl
push
or
jns
mov
jmp
mov
jge
xor
pop
sub
or
push
jecxz
call
inc
jae
and
jmp
mov
cmp
sbb
psubusb
push
shl
icebp
mov
shr
ret
adc
ins
popa
add
pop
popa
jne
pop
push
push
sbb
mov
sub
jne
out
push
pop
cmp
xor
sar
pop
lock
test
jne
test
jne
or
fstp
add
add
add
mov
lock
loope
push
or
test
(bad)
jge
jb
push
inc
das
add
push
pop
cmp
ret
mov
cmp
jl
jne
stos
in
or
or
ror
ret
sbb
add
loope
cli
test
aaa
or
jmp
mov
cmp
clc
push
or
pop
fist
or
adc
xor
and
cmp
add
dec
lds
pop
push
hlt
aaa
push
jg
add
out
ret
sub
mov
(bad)
jge
sub
scas
loope
add
mov
(bad)
lock
add
sbb
sbb
bound
(bad)
into
test
sbb
adc
rcl
cmp
dec
push
shl
das
neg
xchg
mov
sbb
sub
and
jnp
punpckhwd
(bad)
scas
pop
cmp
pop
cmp
ins
lea
iret
adc
xor
fnstcw
xor
call
add
rol
add
loop
rcr
dec
add
push
dec
stos
ror
sbb
cmp
loopne
pop
mov
loop
sub
cmp
or
popf
add
add
cmps
jmp
add
push
and
ret
or
cmp
in
or
(bad)
adc
adc
dec
push
xor
cmc
jecxz
and
adc
sbb
nop
inc
ds
sbb
push
int3
add
ss
adc
xchg
ret
(bad)
mov
fisttp
jge
ss
adc
mov
jbe
mov
aas
and
jb
sub
mov
adc
pop
or
repz
jmp
xor
mov
ds
cmp
or
in
rcr
sbb
enter
or
add
push
jmp
push
xor
stc
pop
repz
add
shl
arpl
sub
mov
adc
mov
mov
mov
ret
rol
test
aas
add
inc
mov
xor
mov
or
xor
or
mov
lds
cmp
fidivr
dec
dec
cmp
cmp
mov
cwde
add
jo
mov
(bad)
push
out
mov
cmp
pusha
hlt
and
adc
jl
push
push
push
xor
xchg
fidiv
jl
mov
mov
xchg
inc
sbb
mov
inc
or
je
pop
jle
cmp
jg
sub
inc
fdivr
(bad)
(bad)
jl
cmp
jg
add
mov
inc
rep
jmp
mov
leave
jmp
mov
sub
hlt
jmp
mov
cmp
xchg
jp
stos
nop
sbb
dec
clc
adc
cmp
div
je
dec
js
fldln2
sub
movs
xchg
inc
je
cld
lea
xor
std
xor
and
pop
jmp
sar
inc
add
adc
and
cmp
xchg
cmp
push
ret
add
out
in
mov
jmp
cmp
xor
lods
(bad)
std
dec
push
shr
rol
jmp
lds
in
sbb
ja
fisubr
push
push
ds
jmp
outs
cmp
jmp
(bad)
gs
mov
mov
inc
inc
adc
cmc
aaa
push
arpl
loope
pop
into
test
push
xchg
lods
test
jmp
int
jl
iret
fmul
test
bound
cmp
retf
jmp
sub
ss
ds
mov
inc
nop
pushf
pop
cmps
add
sbb
push
inc
test
jne
cmp
rol
add
cld
fldpi
jge
mov
cmp
push
std
sub
jecxz
shl
jmp
fimul
call
js
mov
stos
adc
sub
or
cdq
add
fcomp
das
cmp
jb
cmp
ja
sub
data16
std
cs
fldcw
cmp
pop
push
fcos
mov
pop
hlt
fnstsw
sahf
jp
fstp
fldz
out
add
mov
bound
fwait
or
ins
frndint
fldcw
xor
(bad)
pop
fld
shl
arpl
jmp
fwait
pop
sub
dec
pop
mov
fistp
pop
test
inc
fs
pop
push
rcr
mov
mov
ror
mov
mov
jg
cmp
pop
mov
pop
stos
and
push
sub
dec
add
cmp
or
pop
mov
sbb
scas
mov
add
sbb
jge
mov
sbb
out
push
push
(bad)
push
mov
push
lods
mov
or
lea
push
inc
pop
add
sbb
adc
pop
enter
test
in
clc
ins
jne
push
cwde
pop
clc
add
push
rcr
jae
ficomp
hlt
push
dec
es
push
adc
pop
cwde
shl
or
idiv
sub
fsub
(bad)
jo
addr16
jle
pop
inc
test
nop
push
or
or
add
data16
sub
mov
and
jle
clc
pop
jmp
add
sbb
xchg
outs
ror
dec
jmp
das
inc
add
sbb
out
push
ror
or
jmp
cmp
mov
pop
mov
push
push
push
push
lea
push
ror
call
mov
push
pop
inc
cmp
dec
dec
dec
push
adc
push
inc
inc
out
sub
jbe
out
jle
in
xchg
push
aaa
test
mov
loop
shl
ss
inc
ins
pop
dec
mov
outs
ins
cmp
jae
cmp
out
push
xchg
std
outs
mov
sub
jp
jl
jne
jmp
lea
pop
nop
or
sahf
and
dec
popa
shr
push
hlt
mov
fisub
pop
adc
cmp
hlt
jmp
cmc
mov
ds
popf
mov
pop
push
inc
mov
adc
add
push
int3
push
pushf
and
pop
ret
xor
xchg
jne
mov
iret
frstor
inc
and
hlt
xor
mov
push
mul
lea
cmps
dec
pusha
in
push
cmp
and
push
push
cld
out
das
sub
stos
inc
sbb
cmovae
jecxz
das
sub
inc
add
aas
fdiv
jmp
sub
shr
out
(bad)
sar
xchg
mov
sbb
enter
and
mov
push
rcl
pop
and
inc
neg
mov
ja
sbb
adc
sub
adc
cld
adc
xor
aad
mov
adc
or
mov
(bad)
xchg
mov
mov
xor
(bad)
lock
dec
jb
cmp
ja
mov
mov
mov
inc
add
mov
lock
enter
test
or
mov
sbb
retf
test
mov
inc
inc
and
mov
sbb
push
xchg
inc
inc
dec
ja
add
push
shr
je
cs
jmp
mov
mov
cmp
jne
dec
je
mov
add
aaa
add
cmp
sar
(bad)
or
loop
push
adc
add
and
je
mov
cmp
jne
ret
xor
mov
add
dec
add
adc
add
mov
add
adc
cmp
jne
shr
shr
sbb
out
add
add
push
mov
shr
scas
xor
out
mov
inc
dec
dec
pop
cmp
outs
ret
rol
pop
and
mov
cmp
out
cmp
jne
dec
dec
dec
and
(bad)
dec
sbb
fistp
std
add
add
cmp
stc
dec
mov
je
rcr
mov
jo
push
mov
pop
jmp
icebp
inc
pusha
out
inc
ror
aas
mov
sub
cmp
fld
xor
jmp
ja
and
shr
and
dec
mov
sbb
and
fild
mov
fld
out
mov
arpl
lock
or
sbb
mov
mov
mov
adc
cmps
je
cmp
sti
dec
retf
or
add
or
btr
and
mov
je
fwait
jne
lea
lea
jbe
mov
mov
jmp
sbb
xor
shr
mov
mov
and
enter
data16
mul
inc
dec
(bad)
or
stos
adc
adc
pop
out
xor
imul
sub
ror
stmxcsr
out
push
lods
fimul
add
add
push
push
inc
sub
call
pop
je
cmp
call
adc
test
adc
or
je
cmp
jmp
ss
ins
ret
push
dec
in
sbb
iret
icebp
inc
addr16
pop
enter
inc
adc
int
push
cmp
mov
mov
bound
jo
aad
xor
pop
mov
lods
jle
mov
(bad)
jg
bound
sub
add
dec
jl
mov
inc
cmp
push
cmp
je
fst
push
stos
dec
jg
jmp
into
inc
bnd
cmp
sub
fmul
push
loopne
sbb
mov
mov
mov
sub
xchg
pop
mov
aas
rcr
or
adc
jle
sub
addr16
loop
(bad)
cmp
sbb
inc
rol
push
cmp
out
psubusw
inc
and
cwde
pop
popa
call
iret
add
jmp
or
pop
es
jb
icebp
push
push
adc
inc
adc
add
xchg
inc
or
cmp
sbb
scas
dec
fild
in
daa
or
xor
out
(bad)
push
push
iret
inc
adc
xor
pop
mov
sbb
jp
icebp
xor
mov
inc
(bad)
adc
clc
jge
ins
sbb
inc
mov
inc
mov
push
mov
jecxz
mov
sub
jle
dec
push
sbb
add
pushf
outs
jl
jne
les
or
xlat
retf
ins
(bad)
outs
aaa
cmp
mov
push
inc
cmp
je
mov
or
je
or
mov
and
je
hlt
mov
or
jne
dec
and
dec
sar
div
je
jmp
or
or
cmp
ja
lea
xchg
icebp
in
(bad)
outs
add
push
mov
dec
je
sar
jmp
inc
sahf
jle
(bad)
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
test
push
je
xor
and
jbe
push
adc
or
int3
mov
stos
aad
cwde
pop
xor
add
sbb
mov
or
pusha
enter
nop
dec
sub
mov
jge
hlt
nop
sub
out
jne
call
pop
jg
xor
js
sub
add
test
dec
shl
movs
ret
add
test
ficom
or
fwait
jno
jae
inc
mov
inc
jle
sub
fs
inc
jmp
aad
jg
fild
ret
and
test
jg
xor
daa
test
sbb
sub
mov
or
in
inc
adc
add
xor
(bad)
aas
and
add
ja
scas
push
xchg
lahf
sub
push
push
out
jmp
xchg
jbe
sbb
push
inc
mov
dec
jne
pop
ins
icebp
push
cmp
add
cmps
fisttp
push
fistp
rcl
rol
add
fnstenv
or
pop
jge
adc
repz
dec
hlt
mov
jp
cwde
sub
sub
leave
push
mov
retf
xchg
icebp
sub
pusha
jg
mov
sub
push
scas
jmp
test
nop
cmp
mov
push
(bad)
int3
mov
and
lea
fld
out
push
add
je
das
imul
je
data16
jmp
sub
cmp
stc
xor
dec
gs
stc
sbb
jmp
fstp
add
cdq
out
fld
in
mov
and
jg
aas
daa
pop
jns
mov
cli
or
jl
leave
pushf
or
ret
mov
adc
repnz
push
and
sbb
add
stc
retf
xchg
and
inc
mov
nop
imul
imul
fbld
sub
test
out
sub
pop
jecxz
jg
in
add
leave
sbb
mov
cmp
jg
out
fidivr
call
mov
bound
mov
jp
mov
xlat
fadd
outs
xor
xchg
push
or
push
push
test
into
sbb
ror
mov
push
pop
test
enter
(bad)
(bad)
out
lods
movs
outs
movs
push
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
(bad)
push
xlat
pop
(bad)
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
lods
lds
iret
dec
js
inc
mov
stos
mov
cmp
or
(bad)
(bad)
inc
xchg
test
stos
pop
out
sub
imul
(bad)
div
jl
xor
cmp
call
icebp
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
(bad)
(bad)
jmp
das
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
(bad)
(bad)
(bad)
dec
repz
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
(bad)
jmp
add
cmp
xor
in
cmp
sahf
xchg
pop
call
jmp
push
movs
mov
popa
mov
and
addr16
repz
mov
(bad)
(bad)
(bad)
fld
mov
push
pusha
les
outs
bound
xor
jmp
sub
pusha
cmp
add
sti
pop
jne
push
pop
and
push
arpl
mov
outs
or
movzx
adc
inc
clc
push
push
push
mov
push
mov
dec
or
lahf
mov
data16
test
sahf
cmps
add
and
or
add
add
outs
cli
out
loope
and
push
clc
pop
aas
or
(bad)
mov
adc
push
dec
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
mov
(bad)
jmp
pop
inc
gs
jo
imul
push
dec
popa
jae
push
popa
ins
jne
cmp
lods
jg
jecxz
xchg
(bad)
mov
jmp
in
addr16
mov
jnp
scas
mov
jo
push
mov
inc
inc
xchg
jmp
scas
cs
mov
or
dec
cld
jne
dec
mov
das
sar
add
cmp
and
jne
pop
repnz
mov
pop
ret
cs
fcom
add
icebp
cs
or
ins
mov
sbb
cmp
neg
or
rcr
mov
ror
call
setns
popa
fcom
hlt
fs
jno
add
add
add
jo
adc
mov
or
push
cld
ds
fwait
aaa
add
dec
fcom
jmp
pop
adc
mov
mov
sub
sub
push
mov
push
add
sbb
in
cmp
je
pop
mov
add
add
outs
shl
mov
jnp
mov
push
sbb
sti
mov
jecxz
lods
(bad)
mov
mov
mov
or
dec
add
or
fadd
sti
movs
mov
cmp
(bad)
jb
je
add
jmp
sub
ret
or
rol
adc
pusha
loopne
adc
rcr
jnp
retf
dec
pop
jb
imul
mov
mov
pop
inc
jne
xor
xor
ficom
jl
add
add
mov
mov
push
mov
push
add
pop
lea
push
dec
or
mov
ja
cmp
setne
pop
fucomp
mov
enter
xchg
inc
xchg
test
jae
adc
movs
jb
cmp
fmul
or
jne
loope
add
or
push
inc
inc
fmul
and
mov
xor
add
xor
test
(bad)
mov
mov
mov
cmp
je
mov
leave
jne
mov
pop
jle
or
add
jle
push
push
push
fmul
mov
or
mov
dec
add
sub
mov
pop
ficom
in
retf
lock
out
mov
cmp
outs
lahf
cs
xor
das
mov
(bad)
cmp
into
pop
out
es
ja
jmp
or
mov
cmps
popa
pop
push
hlt
xor
cmp
outs
pop
inc
xchg
jb
push
push
stos
fiadd
movs
pop
adc
lock
jge
mov
sbb
mov
mov
test
add
sbb
add
dec
jne
icebp
fwait
cmps
push
fucomi
sbb
add
sbb
jecxz
dec
xor
add
sahf
iret
outs
fdivr
outs
pop
leave
lahf
adc
push
add
push
in
addr16
fisttp
push
jae
rcl
sbb
sbb
xchg
adc
sbb
pop
loopne
(bad)
adc
repnz
sbb
jmp
cmps
mov
push
pop
add
lahf
push
push
push
bnd
jo
jl
in
xor
push
adc
mov
mov
or
inc
add
inc
sbb
int3
or
ret
shl
jbe
mov
or
or
jmp
lea
adc
push
clc
fdivr
rol
enter
rcr
pop
pop
push
sub
jo
pop
push
jl
cli
fwait
ret
in
push
call
pop
push
sbb
les
push
xchg
in
cmp
ins
enter
cs
add
or
jae
pop
xchg
cmp
pop
push
push
and
sbb
outs
dec
jmp
jne
movsx
inc
inc
jmp
mov
stos
mov
sbb
shl
xchg
push
jecxz
ret
sbb
aas
loop
mov
xchg
jecxz
outs
loope
fstp
test
inc
add
xchg
loop
test
mov
mov
cli
add
aas
push
pop
mov
sub
loopne
test
pop
movs
adc
rcr
or
cmp
cli
out
push
je
dec
xor
das
loop
sub
test
push
mov
fimul
stos
(bad)
int
stc
cmc
enter
adc
push
push
push
jne
push
lea
loopne
adc
push
jns
jo
dec
add
popa
xchg
jo
push
push
sbb
add
sub
hlt
sub
mov
lods
xor
dec
dec
ins
pop
outs
or
inc
fadd
add
jo
add
addr16
sti
std
mov
mov
das
xor
jmp
sbb
push
add
mov
pop
inc
xchg
add
push
or
ja
xchg
mov
jno
mov
clc
mov
inc
mov
or
jb
fadd
cmp
jne
and
push
aas
jmp
or
and
je
int
ins
mov
push
push
dec
jne
push
sbb
mov
mov
out
daa
and
sbb
mov
adc
adc
test
add
inc
mov
lds
pop
adc
loop
xchg
mov
ins
jmp
pop
loope
mov
popf
pop
sar
add
inc
loope
ja
ret
push
sub
lds
jg
jg
outs
xor
dec
pusha
cmc
dec
xchg
je
jg
adc
or
ins
push
jo
out
out
and
sti
jp
ins
sub
clc
fld
nop
loop
and
mov
pop
mov
(bad)
cdq
lock
push
loopne
push
push
call
mov
mov
push
add
sar
xchg
shl
xchg
rol
(bad)
cmp
push
push
push
inc
pop
out
push
sbb
cmp
xor
inc
mov
push
jbe
lahf
call
or
pusha
add
jg
sbb
or
mov
adc
shl
mov
mov
jge
xchg
sbb
shr
sub
arpl
xor
je
fsub
sar
jmp
add
ret
das
add
xchg
xchg
enter
pop
sub
mov
adc
push
sub
call
dec
dec
jmp
add
call
xor
push
cmp
mov
ins
ss
adc
jmp
sub
(bad)
jmp
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
icebp
jmp
mov
jl
cli
mov
jmp
mov
jmp
or
retf
call
push
or
pop
into
sbb
and
add
or
or
pop
xor
je
xchg
push
push
sbb
(bad)
cli
sub
pop
xchg
out
push
int3
imul
fmul
mov
pop
fsub
mov
pop
ret
loopne
into
jmp
jo
push
jmp
icebp
out
enter
push
aas
mov
adc
enter
test
inc
push
add
sub
das
loop
xor
mov
cli
pop
or
pop
or
jo
mov
dec
mov
clc
std
test
jle
dec
mov
inc
fiadd
call
and
or
and
push
fild
ins
inc
push
jo
adc
mov
mov
pop
bnd
cmp
mov
fld
sti
or
mov
jg
mov
mov
sbb
inc
sub
or
fwait
mov
xor
cmp
jg
cmp
mov
ret
xchg
mov
sbb
push
cld
aam
push
push
add
add
gs
add
jne
pop
or
sbb
gs
dec
jmp
dec
inc
ficomp
add
mov
xchg
or
add
xor
mov
(bad)
sub
(bad)
lock
mov
cmc
inc
(bad)
or
mov
jnp
lock
mov
es
sti
mov
dec
scas
(bad)
rcl
fadd
adc
mov
push
push
mov
inc
push
out
rcl
push
add
rol
mov
outs
adc
ja
add
mov
mov
test
push
leave
aas
push
fimul
add
cmp
xor
fimul
mov
push
les
or
push
test
xor
mov
bnd
xor
inc
pop
ret
mov
ret
push
ins
adc
cmps
fwait
jge
cmp
cld
or
pop
ins
shl
cmp
je
cmp
test
or
adc
shl
and
mov
call
and
dec
and
jle
icebp
jge
cmp
daa
push
jne
enter
mov
shr
arpl
add
jmp
adc
sbb
or
or
xor
ins
aam
cmp
jne
test
xor
jbe
retf
es
dec
xor
pop
cmp
test
fst
mov
mov
push
push
sti
sbb
lods
outs
ret
pop
mov
sti
mov
popf
aas
mov
dec
pop
sahf
push
jmp
mov
push
cdq
mov
push
fs
stos
cmc
pop
pop
jb
pop
loope
xor
push
out
rcl
loopne
inc
or
inc
cli
sbb
push
push
icebp
pop
pop
mov
rcl
or
mov
push
pop
mov
cmp
jge
cmp
loopne
xor
add
push
popa
and
mov
mov
push
jecxz
pop
cmps
lods
in
or
lods
(bad)
stos
xchg
inc
push
push
ins
(bad)
jg
fisub
mov
dec
jl
lock
push
lea
std
pop
push
stc
mov
push
sbb
add
loopne
test
push
inc
dec
jne
stos
icebp
jnp
jle
and
inc
jg
inc
inc
or
add
push
dec
mov
push
ins
xchg
adc
xchg
das
rcl
icebp
cmp
push
add
loopne
push
add
call
mov
loop
and
mov
enter
mov
clc
das
stc
mov
call
mov
mov
cmp
dec
mov
mov
push
sub
add
xchg
jo
push
adc
ret
sbb
ins
mov
add
cld
mov
cmp
sar
or
jmp
lea
cmp
ds
sub
dec
mov
into
aaa
ins
ds
mov
ret
(bad)
mov
movs
sub
mov
stos
push
fistp
mov
pop
pop
sbb
add
cmp
mov
push
mov
out
dec
or
cpuid
xor
cmp
je
xor
out
add
jle
inc
xor
push
jmp
inc
add
jmp
jge
pop
sub
and
fnstsw
or
push
or
addr16
in
popf
mov
jae
ja
mov
push
xchg
fimul
inc
xchg
mov
out
add
repnz
rcl
add
pop
pop
xor
scas
jne
mov
push
js
xchg
jle
mov
push
cmp
jl
(bad)
mov
pop
clc
mov
mov
inc
cld
ret
push
aas
test
outs
clc
adc
jmp
jns
push
cld
add
cmp
pop
xor
and
dec
and
mov
mov
sar
je
shr
popa
sub
je
cmp
ficomp
or
iret
mov
fstp
mov
ror
std
jno
add
(bad)
xchg
fmul
retf
cli
lds
push
sbb
out
out
in
out
clc
mov
mov
jmp
fwait
arpl
jmp
test
or
movs
pop
mov
outs
dec
loope
dec
jmp
sub
add
cmp
add
dec
jne
mov
dec
lock
jge
aaa
add
dec
jmp
maxps
pushf
sbb
lock
into
pop
dec
jne
mov
sbb
add
scas
lds
pop
and
lea
jmp
outs
cmp
shl
(bad)
push
dec
push
push
ret
mov
mov
xchg
dec
and
mov
pop
cmps
cmp
and
push
and
loope
push
retf
jmp
aam
out
jmp
sub
push
jmp
add
loopne
push
jp
cmp
adc
inc
or
dec
gs
pop
adc
dec
inc
jecxz
jecxz
es
mov
out
inc
pop
adc
jbe
fisubr
inc
es
jl
cmp
jge
sub
out
xchg
inc
xchg
add
push
adc
shr
in
jmp
and
cmc
and
dec
inc
ins
popa
ror
xchg
retf
jl
sub
rcr
mov
icebp
mov
add
stc
add
lea
inc
pop
xor
fmul
push
push
cli
mov
repz
mov
cld
std
clc
sub
inc
dec
jge
cmp
adc
imul
sbb
jbe
add
gs
cmp
mov
mov
lea
or
push
add
fistp
jmp
js
xchg
xor
mov
push
ins
xlat
mov
dec
sbb
adc
mov
cmp
xchg
inc
retf
mov
loopne
ss
pop
mov
bound
jbe
inc
xlat
push
jmp
and
dec
out
and
sbb
test
adc
cs
lods
push
push
sbb
(bad)
dec
rcr
es
jmp
out
(bad)
arpl
cli
pop
adc
icebp
(bad)
aas
cmp
jno
lahf
enter
mov
push
in
fld
and
push
fwait
push
push
rcl
jp
je
ds
xchg
sub
mov
ror
repnz
(bad)
and
ret
pop
and
ret
call
add
ins
sbb
ins
in
pop
ss
cmp
inc
in
out
mov
sbb
and
cmps
inc
push
or
fstp
push
mov
jbe
outs
loopne
in
inc
push
push
mov
inc
pop
push
push
xor
push
sub
test
gs
push
cmp
int
mov
call
popf
jmp
push
stos
adc
push
fsub
jl
add
jno
inc
popa
shl
in
sbb
ja
mov
shl
jae
xchg
or
dec
ror
jae
push
add
or
push
aas
(bad)
rcr
and
lock
mov
xor
mov
xchg
repz
jl
aam
and
mov
cmp
xor
scas
xor
les
imul
mov
(bad)
cmp
or
fdivr
mov
inc
mov
mov
iret
sbb
xchg
bound
push
dec
jge
push
lea
(bad)
jle
lea
mov
inc
mov
inc
test
shl
lahf
add
push
xchg
pop
jmp
mov
add
int3
mov
aam
jle
enter
push
leave
push
aas
into
adc
in
mov
sbb
xlat
pop
fdivr
clc
retf
adc
jae
push
test
xor
push
test
mov
into
ret
pop
popa
(bad)
pop
or
sub
mov
nop
adc
dec
jne
mov
dec
push
adc
cmp
cmp
je
xor
inc
ror
es
sub
pop
data16
sbb
push
cvtps2pd
or
arpl
xor
adc
movups
cmp
jge
adc
dec
cmp
aam
push
mov
sub
cmp
push
mov
dec
or
xor
inc
sub
xchg
call
outs
mov
mov
cmp
jl
ss
dec
int3
xchg
sub
aad
pop
call
adc
pop
jmp
es
loop
ret
stc
xor
aam
xchg
stc
jle
sub
sbb
xor
push
pop
dec
lds
rcr
shl
mov
nop
sub
out
sahf
sub
clc
out
fbstp
mov
inc
call
in
jns
ja
push
in
pop
push
in
sbb
repz
das
push
pop
(bad)
neg
mov
sbb
cmp
data16
dec
ds
jmp
inc
shr
dec
js
mov
dec
push
mov
dec
cmps
cmp
iret
dec
push
jmp
mov
inc
or
mov
push
adc
out
pusha
xor
cs
sub
das
sbb
sub
pop
int3
dec
pop
dec
pushf
stc
cmp
inc
aas
loope
mov
pop
lea
jl
movs
and
adc
lods
dec
int3
adc
cmc
push
dec
dec
or
pop
or
out
add
mov
mov
scas
mov
fcom
or
and
xor
pop
push
xor
je
cmp
je
cmp
data16
test
sub
mov
adc
or
adc
push
jl
jmp
push
mov
push
or
mov
cs
adc
call
xor
sub
aas
push
in
add
jmp
inc
or
jno
fstp
mov
ret
mov
sub
cmp
jo
and
fs
jns
adc
ds
pop
or
nop
cdq
jbe
test
test
and
test
int3
jg
dec
ja
(bad)
and
cmp
push
imul
adc
xor
jmp
es
inc
outs
clc
adc
sub
jmp
adc
inc
nop
mov
inc
dec
mov
mov
test
test
ret
int3
lods
sbb
cmp
pop
shl
jmp
xchg
retf
ins
lods
call
xchg
dec
ret
xchg
nop
jle
adc
lock
pop
cmp
inc
ret
es
sub
repz
pop
outs
jp
xchg
inc
or
movs
dec
adc
cmp
sub
js
nop
jb
push
push
mov
shl
inc
cmp
sbb
pushf
mov
sbb
pop
inc
add
cld
jb
clc
push
in
mov
push
add
sar
add
xor
popw
sbb
pusha
add
in
cmp
mov
add
jo
cmovle
ret
sahf
popa
adc
dec
cmc
sbb
push
pop
or
adc
ins
inc
pop
add
jmp
and
stos
repnz
and
push
mov
mov
add
jnp
in
stos
or
test
inc
push
test
cmp
cs
les
push
push
int3
inc
push
pusha
loopne
ds
push
imul
adc
dec
add
rol
sbb
outs
shl
sbb
in
inc
push
fs
dec
movs
popa
jge
pushf
push
pop
outs
and
jmp
or
adc
dec
jne
sub
outs
neg
adc
mov
adc
push
imul
cmp
cmp
or
ja
sti
add
add
inc
jmp
mov
icebp
mov
sahf
sbb
fidiv
cmp
add
in
retf
xchg
cmps
sbb
popa
adc
inc
and
pop
je
add
in
mov
cdq
int
dec
clc
adc
pop
imul
ds
sbb
push
cs
xchg
xchg
jg
xchg
mov
pop
sar
add
mov
add
inc
aas
xor
sti
mov
add
into
push
push
lods
pop
daa
mov
std
daa
push
call
les
jo
(bad)
cmp
adc
and
adc
and
mov
sub
fs
add
dec
adc
pop
pop
ret
inc
sub
xor
pop
out
mov
sbb
leave
jne
hlt
pop
or
je
jg
push
fisttp
jns
neg
mul
add
fincstp
fild
fincstp
add
not
loopne
jg
call
rcl
(bad)
rcl
cmp
jb
cmp
jb
sub
sbb
inc
loop
pop
test
inc
adc
inc
mov
div
call
mov
push
jbe
push
sub
or
push
out
xchg
ret
jne
test
pop
(bad)
cmp
mov
loopne
or
and
jl
and
or
pop
mov
add
pop
popa
push
mov
sbb
imul
push
xor
in
jbe
bound
jl
or
add
fild
fcmovbe
loop
shld
loopne
pop
clc
cmps
mov
aas
ror
lods
rcl
jmp
fdivr
jmp
push
or
add
pushf
ror
add
hlt
jnp
rcr
sar
add
push
sar
lods
std
mov
inc
dec
cmps
mov
dec
rcl
shl
jge
pop
mov
inc
cmp
xchg
mov
sar
cmp
jge
cs
adc
inc
add
scas
dec
or
(bad)
pop
sbb
jnp
mov
add
shl
cmc
lock
inc
push
sub
sbb
call
lock
xor
jp
xor
sub
push
and
in
cmps
push
jecxz
cs
mov
inc
push
cmp
mov
mov
stos
sbb
inc
jmp
cmp
jne
mov
inc
and
sub
lods
push
cmp
sub
test
inc
mov
es
add
sub
cmp
test
dec
jnp
or
push
stc
push
jb
out
mov
cli
and
jmp
daa
xor
jmp
push
in
loope
out
or
jb
jmp
jl
and
jmp
sub
jbe
jmp
jg
mov
cdq
adc
xchg
nop
pop
xor
mov
retf
mov
xchg
pop
xchg
sub
js
js
inc
fsubr
push
xchg
inc
push
pop
leave
mov
inc
xor
inc
fmul
or
xor
sub
dec
inc
cmp
js
sub
or
cs
jg
inc
add
push
or
rol
or
jmp
sub
sub
add
rcr
cmp
icebp
fiadd
dec
add
fcom
jmp
mov
or
adc
mov
xor
xor
mul
js
stos
pop
push
cmp
push
and
addr16
repnz
pop
add
or
test
jg
(bad)
movs
push
js
pop
mov
je
movs
and
cmp
xchg
scas
lock
sub
adc
sbb
push
out
add
mov
jb
or
pop
fst
cdq
jl
test
call
dec
in
in
cmp
je
std
push
push
cmp
jne
mov
cmp
jge
inc
or
or
add
fcmovnb
imul
sub
add
loopne
mov
stos
inc
in
mov
pop
dec
stos
sbb
xchg
retf
in
jge
scas
cmp
sub
fwait
mov
mov
push
dec
in
push
mov
mov
stos
inc
or
dec
nop
or
outs
adc
dec
mov
or
js
enter
test
add
xchg
fidiv
jle
cwde
or
xchg
push
(bad)
jl
inc
fiadd
sbb
push
call
dec
loopne
test
dec
jne
enter
push
lods
fcom
add
out
push
mov
inc
nop
cmp
mov
pop
sub
lds
pop
jo
push
or
rcl
clc
outs
out
test
cld
or
jp
lock
mul
sbb
clc
test
push
bnd
repnz
xor
sub
mov
jle
inc
or
loope
adc
or
(bad)
adc
sub
push
adc
jo
loopne
xor
hlt
add
test
push
(bad)
xor
fsub
rcl
pop
xchg
dec
push
xchg
mov
loopne
sub
add
xchg
push
cmp
sub
(bad)
jl
xchg
hlt
dec
clc
jne
(bad)
std
push
adc
mov
inc
pop
mov
cld
mov
add
inc
scas
sbb
ud0
dec
push
push
push
mov
inc
movs
dec
inc
rcr
call
mov
in
sbb
test
mov
jns
sbb
fadd
xchg
adc
xchg
daa
push
jne
jnp
inc
and
jne
addr16
inc
sub
add
test
dec
int3
xchg
xor
test
xchg
xor
cmps
adc
test
pop
sbb
scas
add
cmp
or
ret
adc
jecxz
jmp
pushf
mov
int
ja
cmp
out
das
nop
mov
jbe
add
xchg
clc
nop
push
add
maskmovq
div
mov
das
ds
add
test
shr
(bad)
ds
adc
mov
pop
xor
mov
mov
cmp
js
pop
jne
fistp
int
add
pop
and
int3
mov
fsub
and
imul
jne
mov
sub
jnp
fmul
(bad)
mov
xor
(bad)
sub
cmp
mov
(bad)
repnz
push
push
gs
in
shl
imul
int3
out
fnstcw
je
sbb
shl
cmp
push
add
out
mov
fwait
jg
mov
imul
in
ret
dec
push
push
mov
or
neg
add
loop
popf
add
jg
imul
gs
xor
cs
retf
inc
sar
sbb
gs
push
popa
je
dec
popa
ins
gs
retf
dec
outs
loopne
mov
sub
jecxz
ffreep
inc
out
fldenv
and
push
and
dec
xor
fs
xchg
and
in
icebp
sub
pusha
xor
aaa
cmp
or
repz
pop
sub
out
and
int
pusha
pusha
cmps
fstp
iret
pop
cmp
mov
repnz
ins
inc
jecxz
push
(bad)
iret
sti
xor
rcr
mov
sbb
hlt
jb
mov
jl
jecxz
jge
jle
push
pop
retf
test
adc
and
iret
dec
mov
dec
cmp
stos
pop
cmp
jne
div
inc
and
sbb
sbb
sub
sbb
dec
sbb
adc
jbe
je
das
outs
repz
les
or
adc
add
(bad)
lea
outs
data16
popa
jb
call
popa
ins
gs
aaa
(bad)
mov
inc
cdq
jo
or
pop
ins
ja
mov
pushf
add
jo
add
mov
(bad)
xor
push
loopne
jo
out
sbb
mov
xchg
sbb
outs
(bad)
jp
mov
in
jg
add
add
adc
icebp
mov
mov
dec
dec
or
fldcw
cs
iret
psubd
scas
mov
cmp
sub
adc
dec
inc
dec
add
cmp
jecxz
or
inc
xchg
mov
(bad)
pop
or
retf
pushf
cmp
inc
pop
sub
or
aaa
jns
shl
out
inc
or
sbb
cmp
iret
or
and
or
jo
adc
push
cld
jne
fwait
inc
(bad)
(bad)
shl
xchg
icebp
and
faddp
call
or
or
sub
jp
loop
mov
jo
mov
(bad)
jo
sbb
arpl
pushf
mov
cmps
mov
add
mov
xchg
push
push
mov
inc
mov
pop
scas
pop
sbb
div
push
pop
ret
sbb
retf
in
xchg
push
mov
in
jns
sbb
adc
pop
xchg
inc
pop
pop
or
sbb
(bad)
xor
pop
xor
or
mov
scas
sub
loope
cmp
fadd
js
inc
(bad)
xor
mov
adc
ins
jns
and
outs
add
add
sbb
cmp
fisttp
sbb
push
dec
imul
push
fidiv
leave
rol
add
dec
inc
cmp
ja
mov
inc
jmp
cmp
sub
lea
cmp
ja
std
in
fnstsw
jmp
or
mov
adc
sbb
and
and
cmps
adc
push
xor
mov
and
sbb
in
push
and
rol
idiv
gs
jae
cmp
jb
or
je
das
je
mov
and
sbb
cmp
dec
jbe
pop
add
cmp
inc
lahf
shl
ret
rcl
xor
push
add
arpl
(bad)
push
pop
inc
pusha
sub
and
xchg
movs
sub
xor
cld
or
xor
rol
sbb
fdiv
out
aas
and
je
cmp
adc
xor
cmp
jne
in
aas
rol
shl
or
mov
pop
jecxz
mov
dec
cld
mov
iret
add
jne
push
adc
inc
call
jo
jo
adc
or
shr
sub
mov
adc
jne
ret
xor
les
cli
xor
sbb
data16
fisttp
(bad)
jb
inc
mov
sub
and
shl
dec
rcr
nop
pop
dec
stos
je
jp
push
xchg
rol
test
dec
ds
dec
mov
push
fsub
cs
push
and
sub
cmp
(bad)
popa
add
or
dec
cmp
or
xor
sbb
and
push
sbb
jns
jne
aam
shl
test
test
and
cmp
pusha
pop
inc
inc
and
dec
ds
(bad)
shr
mov
inc
inc
cmp
cmp
inc
lahf
jnp
jbe
pop
cmps
inc
loopne
or
cmps
out
add
dec
pusha
xor
cmp
sbb
sub
add
push
cmp
add
rcl
(bad)
or
out
ds
push
clc
inc
push
xchg
push
imul
test
in
jbe
pop
lea
push
push
das
adc
dec
stos
fisttp
pop
cld
add
cwde
test
daa
mov
inc
inc
sahf
inc
push
jno
lock
xchg
out
ret
add
add
mov
inc
xor
jge
xor
or
dec
push
mul
clc
sub
stos
fwait
call
add
sub
mov
xor
and
inc
mov
push
bnd
data16
adc
xor
mul
inc
dec
cmp
mov
push
cmp
movs
and
mov
sub
clc
add
add
lods
jbe
rcr
sti
cmp
jmp
mov
data16
lea
xor
pushf
add
xchg
fcmovne
pinsrw
push
pop
movs
fisttp
test
(bad)
and
xchg
icebp
lock
inc
cmp
loope
dec
loop
addr16
frstor
mov
sub
cmp
and
mov
std
mov
push
mov
add
mov
ret
mov
dec
xchg
outs
jae
or
arpl
addr16
jnp
mov
or
mov
adc
fstp
js
jle
aam
add
test
js
add
push
mov
or
adc
jae
cs
adc
adc
jbe
inc
push
aam
inc
pop
or
add
push
add
sbb
pop
mov
or
dec
stc
sbb
adc
pushf
neg
adc
enter
or
pop
clc
daa
ret
jbe
push
daa
ss
or
ins
sbb
in
pop
mov
mov
push
cmp
inc
jnp
mov
push
xchg
pop
or
invd
adc
sbb
push
leave
adc
mov
push
mov
push
or
add
scas
or
pop
fadd
lahf
mov
sahf
dec
imul
adc
push
xor
test
sub
pop
pop
daa
xchg
mov
cld
(bad)
xor
sar
adc
inc
jnp
mov
push
or
es
hlt
dec
xlat
mov
cld
xor
inc
add
pop
imul
shr
sti
inc
repz
add
add
and
test
xor
clc
or
pop
xchg
add
sub
loopne
mov
rol
push
add
jno
aaa
int3
(bad)
retf
add
sbb
or
jns
aaa
xor
cs
jb
nop
jl
mov
cs
xor
outs
fs
ins
push
(bad)
push
gs
arpl
or
push
add
add
adc
test
ins
rcr
cmp
inc
outs
arpl
(bad)
dec
jne
inc
gs
jne
je
dec
outs
je
imul
call
ds
outs
inc
arpl
or
imul
sbb
jb
fs
mov
push
(bad)
outs
ins
bound
js
push
cmp
arpl
outs
outs
ja
push
jge
push
jo
mov
shl
ja
adc
xor
dec
add
pushf
jl
(bad)
mov
prefetcht1
pushf
pushf
pushf
pushf
or
add
dec
dec
inc
sahf
cld
mov
hlt
lock
inc
dec
in
call
in
(bad)
aam
and
dec
or
or
sbb
add
mov
hlt
push
in
call
push
push
adc
add
rol
mov
and
lds
nop
outs
in
pushf
fmul
paddusb
aam
pushf
pushf
pushf
ror
enter
pushf
pushf
sar
mov
test
leave
leave
leave
movs
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
ins
push
fs
pop
pop
pushf
pushf
pushf
pop
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
test
leave
leave
leave
leave
sub
sbb
pop
enter
adc
pushf
pushf
pushf
or
cld
mov
dec
dec
inc
clc
hlt
lock
dec
dec
dec
dec
call
dec
dec
dec
fcom
ror
dec
dec
dec
dec
enter
dec
dec
dec
dec
mov
in
inc
dec
test
aas
mov
pushf
cwde
xchg
nop
leave
leave
leave
leave
mov
leave
leave
jl
je
leave
leave
leave
leave
ins
push
leave
leave
pop
pop
push
push
leave
leave
leave
leave
dec
dec
inc
inc
leave
leave
leave
leave
cmp
xor
in
leave
leave
sub
and
mov
xchg
xchg
fisttp
sub
pushf
mov
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
mov
dec
dec
dec
dec
hlt
lock
call
in
(bad)
dec
dec
dec
dec
aam
int3
enter
dec
(bad)
sar
pop
mov
xchg
xchg
xchg
xchg
test
mov
xchg
cwde
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
push
dec
xchg
xchg
xchg
xchg
dec
inc
inc
cmp
ins
nop
xchg
cmp
pcmpeqb
jbe
jae
andps
dec
leave
leave
lds
pop
cmovs
pushf
pop
enter
push
inc
fs
leave
leave
leave
cmp
sub
leave
leave
leave
sub
sbb
leave
leave
leave
sbb
or
leave
leave
leave
or
cld
mov
clc
hlt
lock
in
in
call
in
in
aam
int3
leave
leave
leave
in
enter
mov
mov
leave
leave
leave
test
mov
leave
cwde
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
leave
leave
leave
sub
sbb
leave
leave
leave
sbb
or
leave
leave
leave
or
cld
mov
mov
hlt
(bad)
in
xchg
or
cmp
in
xchg
xchg
xchg
xchg
(bad)
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwde
xchg
nop
cmp
test
jl
je
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
xchg
xchg
xchg
xchg
push
dec
dec
inc
xchg
xchg
xchg
xchg
inc
cmp
xor
xchg
xchg
xchg
xor
and
xchg
xchg
xchg
and
adc
xchg
xchg
xchg
adc
add
leave
enter
mov
hlt
leave
leave
leave
leave
lock
call
leave
loopne
fcom
leave
leave
leave
leave
ror
enter
leave
leave
sar
mov
test
leave
leave
leave
leave
mov
leave
leave
leave
nop
mov
call
push
(bad)
shr
ror
mov
data16
scas
add
xor
es
inc
(bad)
xor
fmul
mov
push
push
adc
cdq
mov
and
pop
dec
leave
call
call
outs
push
movs
sub
inc
jo
scas
dec
ror
sbb
sbb
and
fsubp
cmps
inc
mov
loope
es
adc
pop
xchg
fisubr
in
pop
inc
dec
sub
mov
mov
mov
lea
(bad)
dec
cli
or
and
push
or
je
fcom
fisubr
jmp
neg
sbb
pop
xor
clc
shl
push
clc
aam
and
cmp
cmp
pop
mov
or
ja
movsx
or
xchg
mov
lods
pop
sbb
not
inc
add
lods
mov
ja
nop
test
push
inc
push
mov
dec
clc
sub
sbb
jge
inc
pop
xlat
in
push
pushf
jns
add
shr
iret
or
adc
jns
out
sbb
and
push
js
pop
push
pusha
out
inc
or
out
mov
fcmove
and
pusha
adc
inc
nop
lods
inc
add
xchg
mov
add
lock
jl
in
nop
or
jmp
repz
push
call
dec
sahf
imul
adc
test
mov
fdiv
jmp
add
sbb
loopne
cdq
or
push
(bad)
add
dec
popa
gs
mov
std
mov
push
dec
inc
inc
dec
cmp
outs
(bad)
div
and
dec
push
inc
push
dec
pop
and
fidivr
dec
push
push
pop
sub
push
inc
dec
pushf
pop
popa
mov
inc
push
das
out
(bad)
cs
xchg
nop
js
loopne
push
sub
ins
pushf
pushf
pushf
je
icebp
repnz
pushf
pushf
pushf
pushf
cmc
div
clc
pushf
pushf
pushf
pushf
stc
cli
sti
cld
pushf
pushf
pushf
pushf
std
(bad)
jmp
pushf
pushf
pushf
pushf
loope
jecxz
pushf
pushf
pushf
pushf
in
out
pushf
pushf
pushf
pushf
jmp
pushf
pushf
pushf
in
out
out
rcr
rcl
pushf
pushf
pushf
pushf
aad
xlat
fcomp
fcmovnu
pushf
pushf
pushf
pushf
fstp
ffreep
pushf
pushf
pushf
pushf
rol
les
(bad)
enter
pushf
leave
retf
pushf
pushf
pushf
pushf
int
iret
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
movs
cmps
cmps
test
pushf
pushf
pushf
test
pushf
pushf
pushf
lods
scas
scas
nop
pushf
pushf
pushf
pushf
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
xchg
xchg
xchg
cwde
repnz
pushf
cdq
call
or
jl
mov
pop
movs
or
push
inc
imul
clc
jg
push
or
popa
jb
push
sar
mov
sbb
daa
enter
cs
lock
arpl
out
aaa
and
mov
inc
js
gs
imul
mov
sbb
xchg
mov
push
and
jae
test
in
inc
pop
test
xchg
push
ins
xor
push
inc
inc
bound
inc
jmp
adc
inc
dec
adc
and
jo
nop
pop
xchg
mov
push
leave
out
ds
xchg
or
dec
jne
dec
dec
gs
test
mov
sub
push
pusha
outs
mov
or
outs
mov
or
scas
inc
xchg
sbb
pushf
push
xor
dec
pop
mov
scas
rcl
xlat
les
les
push
dec
and
xor
outs
sbb
jmp
xchg
or
imul
shl
scas
je
pop
mov
outs
addr16
scas
fsub
or
int3
or
dec
jbe
pop
push
dec
clc
ins
outs
ja
sub
ds
pop
data16
nop
sub
fcom
jl
imul
sub
and
ins
jle
xor
inc
ds
push
popa
jo
rol
add
mov
outs
fs
loopne
ds
popa
or
(bad)
movsx
loope
outs
imul
adc
ds
or
mov
popa
jae
cwde
mov
cli
or
cwde
or
rol
mov
pop
ret
xchg
adc
jae
add
jae
adc
jbe
leave
adc
push
fwait
ds
fld
jl
push
jb
ins
loop
lods
scas
loope
enter
inc
mov
ror
mov
or
or
sbb
inc
(bad)
pusha
scas
dec
or
pop
ds
in
mov
sub
and
mov
push
mov
popa
fsub
xchg
mov
out
and
push
mov
pop
ins
add
js
add
jo
pop
and
mov
ds
or
stos
or
dec
ds
sub
ds
xchg
jno
adc
(bad)
popa
data16
jg
add
add
xor
and
pop
jmp
das
xor
xor
sbb
mov
iret
nop
mov
inc
leave
jnp
stos
cwde
ins
push
push
gs
outs
addr16
inc
or
mov
fisttp
(bad)
adc
adc
sbb
daa
daa
sbb
mov
fisub
pop
push
jo
mov
push
sbb
adc
xor
arpl
outs
mov
xchg
inc
inc
cmp
mov
stos
sbb
add
inc
aaa
in
cld
jg
cs
add
push
push
push
xlat
into
(bad)
das
push
je
mov
add
jmp
mov
pop
push
outs
inc
and
fiadd
mov
in
(bad)
test
add
frstor
in
(bad)
inc
cs
mov
jnp
sbb
push
loopne
sbb
pop
(bad)
imul
ja
push
sub
add
inc
mov
inc
xor
push
jecxz
xor
push
dec
push
imul
shr
inc
push
inc
mov
loopne
ret
arpl
dec
cmp
jp
(bad)
fimul
jg
ret
adc
repz
add
xchg
retf
xor
div
outs
dec
jge
mov
call
mov
or
int3
and
fs
fadd
call
mov
push
and
lods
daa
ins
imul
mov
xchg
leave
ror
aam
lds
aaa
out
lea
xlat
cmp
mov
fwait
mov
mov
(bad)
mov
test
inc
lock
sbb
nop
out
mov
mov
adc
fidiv
lahf
dec
xor
fwait
aam
add
cs
dec
hlt
dec
mov
shr
adc
or
retf
push
jge
lea
sub
dec
mov
xor
mov
or
and
and
fs
fwait
aad
test
mov
push
adc
imul
cmp
das
mov
xchg
pop
inc
adc
stos
cmps
sbb
mov
adc
push
call
mov
in
xchg
jecxz
or
mov
popf
das
icebp
fistp
inc
test
add
ins
neg
mov
mov
mov
(bad)
ds
dec
pop
jne
mov
jns
adc
xlat
inc
pop
inc
movs
pop
push
sub
jmp
pop
bndstx
addr16
cmp
jbe
(bad)
dec
cmp
repz
je
movzx
push
push
call
push
adc
mov
shl
push
mov
or
cmps
jne
inc
imul
bnd
inc
inc
ds
mov
sub
or
sub
xor
push
(bad)
call
push
out
and
sti
je
loopne
add
in
out
fisubr
cmps
test
mov
mov
or
xchg
or
pop
inc
clc
add
dec
inc
aas
hlt
ja
rcl
aas
cmp
jle
and
push
idiv
aad
(bad)
sub
xor
jb
fstp
add
js
aas
add
adc
cmp
and
xchg
cdq
pusha
add
add
jmp
aad
xchg
pusha
pusha
xchg
push
mov
ja
or
adc
cld
scas
div
pcmpeqw
xlat
imul
add
lock
or
cmp
aas
xchg
ins
pop
jbe
add
mov
js
aaa
jge
cmp
call
lods
add
sbb
adc
or
or
jl
lock
add
push
(bad)
not
or
jmp
inc
out
jmp
or
or
aaa
xlat
cmp
ss
add
pop
ror
in
inc
mov
xchg
mov
or
jmp
adc
add
fdivr
cmp
mov
hlt
mov
dec
inc
in
mov
inc
pop
xor
pop
idiv
push
pop
cmp
out
jne
jo
test
dec
cmp
(bad)
outs
xor
jne
add
and
(bad)
loopne
sbb
mov
sub
ss
lahf
mov
adc
add
hlt
stc
mov
fild
sub
in
push
jp
add
mov
ds
pop
imul
ja
jnp
pusha
and
mov
xchg
(bad)
sub
add
jmp
pop
cmp
outs
sbb
jmp
scas
mov
(bad)
loope
lds
push
inc
rol
cmp
fnstcw
cmp
jne
scas
movs
push
add
sbb
inc
or
sub
xor
jne
and
pop
xchg
sbb
fnsave
prefetchwt1
or
fcmovnu
cmp
dec
jle
inc
sub
call
or
lock
lock
mov
dec
adc
sub
or
call
sbb
lock
movs
mov
mov
loopne
mov
push
push
pop
add
pop
out
xchg
stos
(bad)
inc
nop
inc
imul
out
sbb
out
cld
jecxz
add
sbb
pop
fdiv
push
mov
je
sub
je
jmp
cmp
dec
mov
jmp
adc
cmp
add
cs
cmps
push
sbb
or
xor
add
je
xor
sahf
fstp
lea
xchg
adc
in
ror
pushf
push
mov
xor
pop
outs
repnz
jo
xchg
jae
jmp
into
sti
clc
jmp
or
mov
or
cmp
dec
dec
dec
fwait
daa
adc
loopne
xor
retf
(bad)
fst
loopne
or
movs
mov
add
das
jmp
add
test
and
cmp
mov
stos
add
push
cld
or
add
sub
jb
sub
fiadd
ror
adc
inc
push
jl
inc
rcr
cli
cmps
imul
mov
jb
add
outs
or
lock
loop
jne
enter
inc
push
test
sar
push
popf
mov
sub
add
mov
ret
ret
push
push
dec
outs
mov
adc
cmp
jb
push
pop
mov
push
jne
pop
pop
mov
icebp
sub
jbe
add
mov
sub
into
mov
dec
jne
push
inc
loope
iret
sbb
mov
cmp
add
and
outs
movs
mov
stos
add
pop
dec
scas
in
jmp
xor
sub
dec
fiadd
mov
mov
sub
xor
push
mov
cld
adc
mov
les
pop
xchg
xor
xor
js
mov
push
and
loopne
sbb
add
xor
and
fiadd
add
adc
or
mov
mov
push
add
mov
in
(bad)
cmp
(bad)
fild
fistp
(bad)
imul
ret
or
add
sub
add
shr
stc
adc
mov
add
cmp
or
ret
add
fcom
inc
sbb
jg
sahf
jae
fnstcw
add
ret
ffree
ffree
ffree
pop
std
or
pusha
or
add
enter
nop
(bad)
xor
test
aas
sbb
ins
jo
jb
cdq
dec
mov
or
add
leave
adc
xor
loope
add
call
movs
and
mov
stos
lahf
push
and
pop
push
and
inc
push
mov
xchg
cmp
or
push
pop
movs
cmp
jle
rcl
daa
test
mov
mov
ret
bound
daa
mov
and
es
adc
loop
mov
cmc
ret
mov
push
out
inc
mov
out
and
or
mov
push
loopne
popf
add
add
js
in
and
in
in
inc
cmps
cdq
mov
xchg
ror
mov
or
pop
mov
push
or
and
ret
add
mov
lea
rcl
pop
mov
push
mov
sbb
jnp
test
jecxz
lock
mov
pop
jnp
call
add
mov
push
nop
call
inc
inc
sbb
xor
xchg
inc
push
xchg
dec
test
les
cmps
inc
arpl
jmp
adc
or
adc
adc
clc
xchg
push
pop
push
cld
adc
cs
in
jne
pop
movs
and
jo
daa
call
add
lods
fld
fcomp
movs
xchg
inc
add
inc
mov
xchg
cmp
rcl
mov
lods
std
push
scas
mov
daa
push
mov
sbb
mov
add
add
adc
push
xor
inc
and
or
pop
cs
cdq
jp
fcomp
push
lea
pop
not
adc
mov
popf
jmp
and
(bad)
(bad)
ds
inc
push
arpl
ja
inc
cmp
lock
test
add
lock
dec
cld
ja
adc
mov
loope
ja
and
mov
xor
push
mov
shl
sbb
or
adc
fwait
xchg
or
and
mov
cmp
imul
loop
test
dec
or
cdq
pop
and
add
jb
cmps
mov
sbb
scas
cs
xchg
xor
sbb
hlt
and
cs
push
cld
jne
and
push
(bad)
int
mov
into
lods
push
lea
inc
sbb
out
mov
je
adc
outs
in
dec
adc
fsubrp
and
call
push
(bad)
in
and
cdq
loopne
jge
or
sub
movs
sub
sbb
add
les
test
rcl
aas
push
movs
inc
icebp
pop
shufps
lods
mov
jmp
push
jno
jge
push
je
or
fmul
jmp
xor
adc
xchg
shl
sub
pop
cmp
nop
lock
mov
cmp
into
(bad)
dec
stos
add
mov
sbb
iret
adc
not
push
push
adc
sub
inc
mov
hlt
xor
sbb
xchg
mov
and
shr
test
xchg
movs
and
clc
jns
aaa
popa
faddp
imul
push
ja
push
(bad)
or
popa
mov
jno
mov
sub
imul
cmp
and
call
add
lea
aaa
pusha
ret
clc
aas
sub
mov
cmp
ds
push
out
push
icebp
scas
cmp
and
mov
clc
jne
adc
jg
mov
mov
jns
adc
sbb
cld
aad
cs
ja
cmp
enter
inc
daa
or
cmp
push
cmc
xchg
xor
inc
cs
cmp
xor
out
adc
add
inc
leave
scas
jl
mov
push
jle
(bad)
nop
and
dec
dec
add
and
adc
xchg
and
imul
push
les
cmp
in
shl
pop
xchg
cli
stos
jnp
mov
popa
or
arpl
(bad)
pusha
dec
push
inc
sbb
and
jge
ins
mov
cmp
push
sub
retf
xor
pop
xchg
dec
sbb
sahf
push
pop
mov
lods
mov
push
xor
ret
and
(bad)
lods
inc
dec
and
arpl
pop
leave
jne
sub
add
lock
add
push
push
aas
stos
push
enter
jl
sbb
xor
push
jg
mov
retf
hlt
scas
aad
dec
add
or
fmul
cmps
pop
sub
int3
movs
iret
sbb
in
xchg
cdq
mov
mov
push
jns
loop
mov
cmp
or
and
xor
adc
in
ror
adc
clc
(bad)
imul
add
sub
mov
jle
add
shr
inc
jmp
aas
xchg
or
fmul
fadd
(bad)
push
push
in
test
mov
adc
mov
jg
popa
sbb
ret
push
mov
pusha
dec
aaa
mov
dec
lods
loopne
sbb
sub
pop
add
pop
mov
or
fprem
pop
pusha
inc
inc
test
(bad)
cmp
mov
pushf
lods
test
mov
adc
xchg
xor
jecxz
cmp
lods
sbb
in
shl
add
xor
dec
loopne
xlat
xor
repz
mov
mov
mov
je
dec
jns
mov
cli
in
cli
into
and
imul
and
(bad)
dec
or
mov
dec
adc
(bad)
(bad)
iret
cmp
add
xlat
test
daa
cmp
lods
loope
jmp
cmp
add
add
cmc
add
pop
in
inc
ror
mov
add
dec
jle
fstp
pop
sub
fistp
sub
jbe
pop
cmp
lods
(bad)
lods
in
mov
push
js
xchg
or
shl
sbb
xor
and
and
add
lods
movs
inc
jg
sub
scas
rol
pusha
lods
es
ret
sub
call
sbb
lock
and
push
dec
dec
icebp
sub
cmp
jno
sbb
push
push
cmp
je
retf
adc
daa
int3
xchg
cmp
inc
js
jbe
or
dec
jecxz
cmp
(bad)
sub
xlat
clc
cld
mov
push
jecxz
in
sub
mov
lea
mov
sbb
sbb
and
mov
sub
add
sbb
int
adc
cdq
daa
call
jg
xor
inc
mov
inc
mov
or
lock
ret
cmp
(bad)
test
mov
sbb
adc
loopne
jb
cmc
pop
xor
out
or
and
jne
repnz
rcl
sub
mov
repz
or
push
inc
out
neg
push
ss
mov
cmp
jne
cs
and
lods
jmp
cmp
mov
inc
(bad)
or
je
fcom
sbb
pop
mov
repnz
mov
xchg
or
retf
add
sahf
movs
xchg
pop
mov
xor
or
mov
pop
pop
mov
adc
xor
cmp
ja
out
call
imul
mov
add
and
cmps
jnp
fucom
pop
dec
(bad)
leave
or
jge
stos
or
jl
push
sbb
je
ds
pop
xchg
ret
and
mov
sbb
rcl
pop
jne
lea
mov
call
cmp
mov
stos
push
jb
cmp
ds
fist
ret
das
pop
in
pushf
ja
out
pop
outs
push
mov
inc
cmp
in
xchg
sub
xchg
push
ret
scas
pushf
lea
and
rep
sar
scas
mov
test
mov
sub
ret
in
cmps
jge
retf
or
jmp
push
cmp
pop
outs
adc
jmp
xor
in
jmp
jmp
jmp
test
call
push
add
test
loopne
push
aad
push
inc
add
ins
xor
inc
inc
les
enter
mov
add
jne
lods
push
mov
sbb
call
and
add
or
in
dec
fdiv
or
xchg
(bad)
ds
jecxz
pusha
loope
sbb
stc
add
push
add
xor
or
out
sbb
outs
fbstp
dec
inc
je
mov
or
je
mov
inc
aas
in
ins
fwait
(bad)
mov
or
je
dec
jl
mov
mov
adc
fdivr
ret
jmp
add
shl
adc
push
mov
xchg
adc
mov
fstp
inc
sti
loopne
mov
inc
iret
dec
rcr
sar
ret
xor
pop
js
les
mov
add
hlt
imul
jns
mov
mov
enter
inc
out
mov
pushf
add
mov
mov
sub
mov
xor
(bad)
popf
jnp
out
and
push
push
push
retf
stos
(bad)
das
pop
dec
sahf
out
fs
out
imul
outs
cli
push
mov
out
mov
mov
sbb
jp
ins
jmp
mov
add
jb
out
cdq
cwde
push
test
nop
mov
pop
shr
or
push
mov
inc
daa
fistp
mov
xor
lods
pop
mov
dec
adc
je
mov
test
ins
mov
cmps
mov
mov
movs
xor
movs
mov
push
jnp
ins
dec
xchg
mov
sub
add
inc
dec
xor
dec
jnp
and
mov
or
test
xchg
mov
jge
sbb
xor
shl
push
inc
in
dec
psraw
ds
or
dec
jbe
fisubr
retf
mov
ficom
lock
jle
dec
jno
mov
xchg
or
inc
xchg
mov
xchg
adc
or
mov
and
daa
pop
jmp
or
xchg
pop
shr
sub
adc
stc
loope
add
scas
adc
pop
inc
lock
add
or
fucom
xchg
xchg
ror
test
pop
ret
cmp
cwde
sbb
sub
lahf
push
pop
mov
adc
dec
outs
mov
or
mov
stos
dec
jne
or
inc
sub
inc
add
lock
pop
cld
add
je
jl
push
sub
mov
aam
mov
mov
push
jmp
adc
cwde
mov
cs
stos
call
sub
pop
data16
dec
sti
adc
movs
adc
and
and
cmp
adc
pusha
je
sub
or
add
cmp
pop
jecxz
ja
and
and
mov
nop
cmp
rol
sub
ins
dec
sub
int
mov
movs
int
mov
mov
idiv
pushf
das
pop
pop
push
jecxz
loope
jns
mov
push
aam
adc
xor
mov
jg
sbb
(bad)
mov
sub
push
test
xor
test
shl
lock
xchg
loope
sbb
mov
mov
in
cmp
loopne
mov
add
pop
(bad)
fcomp
dec
ins
lock
cmp
nop
pop
dec
mov
aaa
daa
sub
mov
inc
mov
mov
cmp
in
aas
or
icebp
les
pop
outs
xor
das
pop
in
(bad)
mov
cmp
xchg
movs
xor
iret
push
cmp
pop
push
dec
push
xor
int3
arpl
stos
jb
xor
pop
ins
imul
lock
xor
pop
jae
pop
sub
add
xchg
mov
fcomp
xor
mov
cmp
mov
idiv
ror
or
ins
cmp
hlt
es
and
pop
mov
lock
(bad)
rol
push
in
pop
mov
(bad)
mov
jo
dec
rol
(bad)
fild
(bad)
pushf
push
push
xor
fwait
or
stos
or
bound
dec
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
add
mov
or
xchg
ret
mov
inc
dec
mov
jmp
jnp
cs
cmp
jne
pop
pop
daa
aam
sar
xchg
mov
mov
cs
mov
repnz
xchg
in
add
clc
jle
pop
pop
in
les
cmp
jle
cmp
or
add
scas
aas
adc
aaa
dec
or
mov
repnz
push
jae
adc
call
lea
push
adc
sub
xor
add
ja
pop
pop
lea
aam
jle
mov
sbb
clc
cs
rcr
sbb
call
xor
jns
xcrypt-cbc
cmps
push
sahf
ret
xchg
add
cmp
ror
inc
dec
inc
dec
lods
or
inc
sub
es
scas
aaa
sbb
std
mov
aam
lods
or
sbb
cmp
jl
pop
sbb
ds
cmp
stos
mov
xor
stos
jmp
loope
mov
mov
clc
movlps
pop
pop
inc
clc
dec
cs
shr
mov
fild
gs
sbb
sbb
sub
or
add
leave
mov
mov
adc
idiv
mov
push
push
das
push
adc
mov
inc
push
scas
je
mov
dec
mov
test
jg
repz
inc
test
jne
sbb
cmp
ss
stos
xor
call
out
dec
sti
add
je
inc
jne
pop
pop
push
call
repz
or
repnz
loope
push
je
retf
sahf
lea
jg
mov
push
push
push
cmp
push
inc
mov
sbb
out
add
into
jb
movs
mov
fadd
push
mov
cmp
add
mov
and
inc
add
and
and
adc
and
into
outs
mov
sub
inc
sub
sub
out
jne
push
sbb
and
sub
mov
out
adc
xor
sub
mov
sub
ret
std
call
adc
stos
inc
aas
test
or
adc
add
xor
adc
xchg
add
repz
out
in
adc
cmp
mov
div
aam
nop
cli
aam
sub
adc
pop
aam
mov
out
adc
mov
scas
or
and
and
inc
scas
pop
scas
in
push
jb
aad
dec
les
adc
inc
pop
clc
ins
xchg
xor
div
sbb
xchg
mov
or
je
sti
cs
push
repnz
jmp
xor
or
add
es
cmps
je
or
loope
mov
ja
nop
fsubr
mov
fist
inc
loopne
sar
rcl
cmp
or
test
outs
je
into
jne
adc
jle
jno
adc
punpckhdq
(bad)
fld
fsubrp
outs
lods
cmp
push
xor
cmc
xlat
cmp
cmp
dec
(bad)
mov
test
fs
sbb
and
mov
cmp
out
loop
mov
push
add
inc
clc
call
ret
mov
lods
cmp
je
out
jmp
inc
push
cmps
data16
mov
rcr
mov
retf
add
std
xchg
adc
cmp
sub
je
cmp
je
push
xor
je
xchg
je
mov
jmp
inc
jmp
jo
test
cmp
mov
or
pusha
sub
jmp
jb
jne
jbe
std
fwait
clc
jmp
mov
jmp
loope
adc
test
in
sub
out
add
mov
cmp
enter
push
cwde
nop
les
fdivr
sbb
and
push
add
mov
adc
sar
adc
add
pop
xor
dec
inc
ror
dec
mov
jo
sahf
call
push
or
sahf
jne
sahf
out
sbb
push
push
sahf
out
sbb
push
inc
dec
dec
lock
int
(bad)
loopne
std
out
cmp
mov
cmp
cld
or
stos
push
jnp
add
mov
add
mov
sbb
add
pop
jmp
add
mov
mov
push
idiv
add
xchg
jle
jmp
mov
inc
popa
stos
mov
and
jle
mov
cmps
add
cmp
inc
jmp
stos
sub
pushf
retf
outs
mov
out
adc
stos
push
fmul
ret
rol
loopne
add
push
add
jl
add
cmp
retf
or
adc
in
xchg
inc
mov
mov
(bad)
repz
push
cmp
inc
push
pop
adc
or
jnp
add
mov
push
call
or
rcl
xor
adc
or
fabs
push
(bad)
clc
loop
and
je
frndint
push
fld
jle
std
fstp
mov
add
or
mov
or
std
(bad)
pop
fbstp
lea
mov
inc
sub
jmp
add
in
clc
xor
xor
stos
sar
outs
mov
add
jns
sbb
adc
jge
mov
or
cmp
jb
mov
js
(bad)
push
xchg
clc
out
push
and
pop
adc
xor
data16
leave
hlt
mov
pop
or
push
mov
shr
rol
outs
fimul
ret
mov
push
sbb
mov
(bad)
mov
ror
je
add
mov
ins
pop
cmp
pop
or
or
adc
add
pop
(bad)
outs
xchg
cmps
sbb
jae
dec
add
and
aad
ins
or
mov
add
or
mov
neg
inc
add
fwait
sbb
push
push
sub
mov
and
jne
dec
jne
jmp
mov
add
jae
fdiv
stos
aas
and
inc
jmp
dec
adc
mov
sub
(bad)
div
jmp
mov
iret
mov
ror
xchg
shl
mov
f2xm1
fwait
call
mov
mov
cmp
adc
push
add
icebp
daa
cmps
loope
adc
adc
int
cmp
icebp
cwde
and
ffreep
jne
inc
push
sub
jnp
pop
add
jg
test
mov
xchg
test
jle
les
mov
or
aas
jmp
fstp
inc
in
rcl
and
test
pop
xor
mov
and
push
lods
aaa
pop
lock
mov
sub
pusha
iret
js
add
jae
fimul
sbb
aaa
mov
neg
push
cld
daa
push
es
push
inc
imul
push
cmp
mov
push
sub
daa
push
pop
cmp
int3
mov
sub
sbb
sub
xlat
jle
popa
or
rol
pop
lea
or
cld
mov
push
mov
and
sar
sub
in
mov
inc
out
add
add
add
cmps
in
xchg
mov
cld
dec
inc
or
sub
inc
fisub
sub
jnp
mov
cmp
in
jb
jmp
loope
push
sahf
loope
cmp
les
mov
xlat
sub
popa
and
arpl
(bad)
sbb
ins
nop
scas
pop
scas
imul
(bad)
and
xor
inc
adc
in
cld
test
sub
call
push
les
ins
fnstsw
mov
(bad)
call
xor
loopne
loopne
add
or
push
inc
pop
cwde
mov
fist
dec
clc
loopne
adc
sbb
fild
sbb
ret
dec
aas
mov
aas
fild
test
hlt
mov
fst
mov
cmps
shl
fnsave
push
adc
push
inc
aaa
mov
pop
pop
inc
jl
push
icebp
gs
mov
sub
inc
retf
adc
push
mov
inc
add
inc
and
gs
xchg
cvttps2pi
pushf
(bad)
loopne
iret
or
imul
add
fiadd
sbb
add
add
clc
xor
mov
les
add
xchg
mov
push
dec
ds
ret
(bad)
dec
inc
xchg
cli
dec
mov
stc
add
sbb
or
cmp
add
outs
sahf
dec
cli
inc
cmp
jae
ficom
jg
imul
fs
pop
add
ret
xor
(bad)
add
xor
lea
sbb
stc
enter
or
push
addr16
les
sub
cmp
pop
stos
xchg
sbb
inc
xchg
mov
push
add
sub
call
dec
repnz
je
je
mov
sub
mov
cmp
mov
sqrtps
xor
add
call
and
bound
add
js
and
and
mov
xor
push
pop
xchg
ss
popf
mov
sub
(bad)
fcomp
out
add
jb
in
idiv
push
sub
cmps
adc
loopne
and
nop
push
sar
mov
scas
inc
inc
xchg
cmp
jb
and
xor
xor
adc
sar
add
in
jne
xchg
clc
sub
cdq
idiv
imul
retf
inc
jle
mov
sti
add
outs
cli
or
push
cmp
sub
mov
pop
adc
xlat
int
inc
pop
pop
rol
fcomp
ret
xchg
mov
mov
sbb
and
sbb
(bad)
icebp
and
pushf
fmul
hlt
or
add
aad
retf
pop
imul
fld
mov
lock
push
sub
js
fisubr
jge
pushf
sahf
adc
mov
mov
jnp
loopne
add
data16
pop
in
xor
inc
jmp
lock
inc
in
pusha
mov
pop
xor
push
loopne
cmp
cmp
sub
pop
lock
inc
test
jecxz
shl
out
add
out
imul
or
push
ret
popa
jnp
jb
mov
sbb
inc
jmp
dec
mov
in
adc
out
push
inc
in
mov
mov
and
push
js
pushf
popa
icebp
push
aam
mov
xchg
add
dec
hlt
inc
push
stos
(bad)
jo
fcmovne
push
inc
push
xchg
popa
das
pop
sbb
out
jb
adc
mov
pop
clc
frstor
push
aaa
cmp
push
inc
test
dec
mov
loopne
fwait
sbb
mov
or
out
out
pop
(bad)
loop
jmp
nop
cld
add
sbb
dec
clc
jle
loopne
jno
adc
cmp
int3
aas
out
xchg
lods
sub
test
and
movs
sub
fadd
push
push
jo
and
add
add
movs
rol
push
cdq
add
adc
call
(bad)
fstp
pop
out
push
push
adc
call
and
cmp
je
pop
push
inc
inc
hlt
ins
out
mov
js
add
cmp
fstp
test
lea
or
mov
scas
pop
imul
mov
outs
mov
xor
push
jge
out
mov
and
mov
fsubr
in
inc
test
xor
xor
jns
adc
xor
dec
xor
in
add
movs
xchg
mov
jne
loope
xor
std
lea
push
mov
dec
loop
test
pop
cmps
xchg
mov
call
jmp
in
jg
mov
mov
and
push
cmp
popa
xor
pop
imul
fcom
dec
jo
add
ret
pop
xor
sub
mov
sbb
xor
mov
xchg
addr16
pop
(bad)
adc
addr16
push
or
or
in
mov
inc
in
cmp
pop
add
pop
mov
jmp
and
test
sbb
mov
in
inc
sbb
or
jne
ret
imul
lods
enter
bound
cld
or
lock
fadd
sbb
and
loopne
test
int
sub
inc
mov
push
xchg
mov
pop
inc
shl
jecxz
loopne
push
cmp
punpckhwd
shr
push
test
imul
loop
xchg
inc
mov
xchg
loop
test
and
mov
dec
lods
mov
outs
sti
loope
jne
jbe
dec
xor
or
aaa
jmp
ja
mov
add
test
pop
push
or
outs
mov
fiadd
add
or
or
mul
add
pop
xor
in
push
xchg
shl
repnz
inc
dec
repz
jae
fstp
mov
out
inc
call
js
or
mov
xchg
hlt
and
outs
repnz
mov
adc
fist
popf
fidivr
adc
dec
push
lea
shl
or
pop
add
fldcw
hlt
dec
pop
sub
loopne
xor
jmp
sbb
sub
test
mov
aam
mov
enter
add
jmp
out
or
addr16
jo
push
mov
mov
add
dec
and
in
mov
les
and
pop
rcr
ja
sub
int3
fdiv
adc
inc
ins
pop
or
movzx
mov
ds
or
push
aaa
shl
popa
je
or
je
jmp
sahf
mov
jns
(bad)
lods
fidivr
scas
out
clc
sub
sub
push
shld
mov
and
into
push
arpl
jmp
push
fbstp
(bad)
xor
popa
cmp
adc
or
ds
fsub
add
(bad)
out
and
out
dec
add
or
add
imul
sub
push
popa
inc
xchg
call
xor
jne
imul
retf
lods
fs
add
push
mov
add
jne
lods
add
jp
or
and
push
enter
xchg
fmul
fwait
push
jg
test
add
shr
test
fild
movs
jmp
and
add
xor
int3
pop
stos
imul
or
movs
in
fwait
sti
test
and
sub
out
shl
or
popa
mov
int3
xor
add
stos
push
enter
imul
xor
push
adc
push
dec
ins
dec
dec
cmp
je
ja
mov
movs
mov
push
fsubr
dec
pop
pop
mov
adc
push
adc
jbe
mov
jns
in
mov
dec
add
das
push
dec
cmpps
or
adc
test
xchg
or
jnp
push
cld
jecxz
mov
inc
or
icebp
xchg
retf
push
mov
lea
gs
lea
and
mov
inc
xlat
push
pop
stos
fst
mov
pop
dec
aas
inc
imul
movs
xor
aaa
sub
inc
mov
inc
inc
daa
clc
push
adc
jl
push
push
dec
je
mov
lea
outs
out
shl
push
jmp
push
pop
sub
call
adc
cmps
les
adc
mov
or
ret
xchg
mul
sbb
lea
loope
jae
(bad)
jmp
call
and
sub
mov
add
xor
xchg
xchg
int3
(bad)
adc
(bad)
push
jg
nop
shl
cmc
pop
inc
daa
out
movs
adc
imul
jecxz
fdiv
jbe
lea
dec
inc
add
stc
sbb
loope
test
add
xchg
fadd
rol
outs
test
jl
add
sub
inc
stos
dec
sub
jo
data16
ja
xchg
mov
and
xchg
ins
and
sub
je
dec
push
idiv
(bad)
stos
sub
adc
je
jmp
push
add
or
ins
adc
das
push
sbb
dec
add
mov
or
jmp
xor
cmp
and
fcomp
jmp
imul
in
pop
pop
lahf
xchg
ss
or
pop
rol
cmp
dec
test
fild
cs
add
pop
pop
xor
bound
push
ror
call
or
cdq
dec
cmp
adc
in
arpl
not
lahf
hlt
test
mov
xchg
cdq
xor
sub
add
shr
shr
add
jle
adc
xchg
lea
sbb
push
pop
les
pop
enter
mov
aam
dec
out
enter
cli
outs
out
sahf
jne
or
loop
fiadd
out
add
cmp
mov
push
(bad)
cmp
cmp
cmp
dec
in
shl
or
ins
mov
lea
adc
test
mov
(bad)
fs
sbb
add
ret
loopne
mov
inc
lods
pop
out
loope
mov
sub
mov
jecxz
test
arpl
or
pop
jb
dec
cmp
inc
and
adc
add
call
adc
out
sub
jb
les
jge
inc
jmp
pop
and
fimul
leave
rcr
ds
jmp
adc
loope
ror
jle
push
inc
out
jecxz
in
cmp
pop
push
jmp
cmp
ja
xor
push
imul
jbe
xor
data16
(bad)
xor
add
lea
inc
jge
and
fcomp
mov
and
sub
jmp
popf
jp
inc
inc
pop
aas
mov
scas
xor
pusha
aam
les
pusha
mov
pop
mov
mov
lods
push
and
push
hlt
clc
hlt
pop
or
je
sbb
mov
fucom
push
pusha
fs
aad
pusha
and
push
fsub
dec
int3
aaa
push
in
or
je
pop
enter
add
test
pop
movd
loop
out
call
lds
cs
add
adc
iret
lahf
gs
inc
sbb
xchg
loopne
loopne
inc
fs
jae
rol
pop
push
outs
shl
mov
rcr
aam
inc
daa
je
into
mov
pop
pushf
test
mov
add
dec
jl
aad
push
out
xlat
mov
add
or
sbb
jns
js
call
and
adc
(bad)
enter
pop
xchg
in
xchg
pop
mov
jge
pop
mov
add
or
test
arpl
adc
xor
arpl
call
sub
and
mov
push
xchg
iret
push
and
adc
rcr
and
sub
ret
mov
xor
mov
push
xor
in
leave
mov
(bad)
out
adc
and
cmps
add
aas
sub
xor
pop
pop
sbb
and
dec
jne
retf
lods
xchg
cmc
xor
sub
add
movs
(bad)
jb
sbb
mov
or
gs
movs
xor
lea
movs
daa
mov
jnp
jne
ret
xor
push
sbb
iret
sar
std
and
sub
jb
sub
je
mov
cmps
shl
mov
daa
adc
xchg
icebp
outs
in
sub
test
cld
fnstcw
push
xchg
push
or
sbb
popf
aas
push
push
movs
dec
ret
inc
mov
dec
or
jno
jmp
push
neg
loop
movs
outs
out
add
or
sub
out
fadd
sbb
cmp
jns
add
add
xor
cwde
adc
xchg
mov
pop
pop
push
add
add
add
ror
push
pop
rol
adc
dec
retf
mov
nop
out
ins
xor
inc
inc
push
sbb
in
aam
mov
or
call
sahf
push
xchg
aam
imul
enter
call
fnstcw
clc
ficomp
in
stc
or
pop
out
xor
push
and
inc
out
xchg
and
scas
sbb
in
inc
and
fsub
or
cli
hlt
in
mov
hlt
icebp
sbb
lock
sti
call
nop
inc
call
lock
(bad)
sti
loope
xor
lahf
hlt
lahf
lock
leave
xchg
sti
popf
in
mov
fidiv
adc
sbb
sbb
pushf
xchg
retf
imul
inc
jmp
out
(bad)
sub
sub
adc
jp
fstp
test
movs
jmp
or
jmp
gs
mov
ss
call
ins
mov
mov
inc
and
mov
stos
ins
mov
inc
inc
pop
pop
pop
jns
jns
add
and
add
mov
sbb
ror
dec
popa
std
and
and
push
iret
imul
mov
mov
mov
cld
jmp
or
mov
test
and
adc
xor
or
ret
mov
push
push
repnz
es
adc
in
push
or
adc
inc
dec
popf
ret
cmovo
add
mov
jmp
jge
add
xor
cmp
sub
je
outs
add
dec
pop
sub
adc
and
ret
inc
and
xchg
push
test
adc
arpl
pop
pop
hlt
daa
xor
ja
mov
dec
or
fcomp
jnp
rcl
mov
nop
push
cmp
push
mov
add
mov
add
repz
out
push
jo
sbb
ds
imul
inc
add
mov
xor
mov
movs
xor
mov
je
jne
dec
fsubr
(bad)
nop
and
fcomp
jge
mov
fild
cmp
add
pop
lods
mov
cmp
daa
add
(bad)
in
pop
test
test
(bad)
nop
sti
mov
mov
and
enter
sbb
mov
std
inc
test
sub
aaa
les
int3
mov
fcomp
jbe
ins
pop
jmp
sbb
jno
pop
mov
jmp
jbe
movs
push
rol
fstp
fistp
inc
ret
lods
test
mov
xor
loopne
call
js
in
xor
mov
xor
xor
stos
mov
pop
cmp
in
loopne
jg
dec
or
dec
fmul
mov
cmp
test
inc
xchg
sub
sbb
cmovnp
push
test
jae
and
pushf
dec
loopne
dec
sbb
mov
test
mov
push
mov
stos
or
push
lea
mov
mov
sbb
out
mov
jg
cs
outs
mov
mov
xchg
loop
pop
dec
mov
sbb
or
or
adc
addr16
in
push
push
or
and
push
push
and
cmp
sbb
pshufw
and
sbb
enter
xchg
xor
push
xor
jmp
push
jo
nop
psubusb
push
inc
scas
nop
mov
fnstsw
jns
iret
sahf
push
add
fcomp
sbb
movs
adc
lahf
and
or
dec
aaa
enter
ins
inc
mov
or
lea
cmp
jbe
push
add
xor
add
sbb
add
or
mov
iret
add
fwait
popf
cmp
imul
sbb
dec
ja
(bad)
lock
cmp
inc
jnp
cmps
or
std
adc
xor
lea
sbb
scas
gs
inc
sub
and
inc
sub
ror
inc
push
or
pop
jp
in
adc
movs
or
push
xchg
test
push
or
imul
js
arpl
jo
hlt
pop
push
or
or
jl
rol
add
mov
dec
nop
sbb
adc
nop
mov
sub
repnz
sbb
jne
sub
or
xor
loopne
rcr
xchg
stc
mov
pop
(bad)
inc
cmps
popf
pop
call
pop
dec
cli
fadd
push
and
pusha
inc
cwde
or
push
inc
mov
pop
push
inc
xchg
mov
push
adc
push
jb
jo
rcl
cmp
cmp
adc
xchg
push
lea
ins
rol
ror
push
pop
dec
or
cli
jl
cld
or
jne
hlt
loope
clc
jno
pop
ror
mov
retf
or
aam
or
jecxz
loopne
and
cdq
call
or
fsub
jl
add
inc
int3
aam
sbb
in
pusha
shl
push
jo
fdiv
inc
outs
out
jmp
and
lock
les
ins
add
push
mov
xor
jmp
fcmovbe
rcr
push
shr
daa
fcomp
jo
rcr
iret
pushf
pop
inc
ret
jae
bound
nop
jg
push
dec
je
jmp
cmp
inc
jmp
pop
scas
pop
dec
dec
cmp
push
inc
loop
or
cmp
inc
fs
inc
or
sub
jmp
push
mov
pop
jmp
stc
stc
stc
stc
or
and
jmp
or
push
or
adc
stc
stc
or
add
cmp
add
cmp
test
inc
test
pop
call
movs
mov
jnp
pop
adc
adc
add
stos
cmps
iret
jmp
sfence
in
scas
(bad)
jbe
out
cs
sbb
sbb
and
sbb
push
and
cmp
rcr
iret
sub
push
pop
fmul
fwait
imul
(bad)
aam
or
jge
or
popa
mov
and
stos
or
mov
stos
rol
int
push
mov
cmp
in
int
mov
or
pop
or
push
push
cmp
xchg
outs
mov
jae
mov
add
enter
sbb
push
je
jno
leave
inc
xor
int
push
jo
aad
add
call
dec
in
adc
xor
and
sub
jl
fimul
or
fnsave
and
clc
jmp
pop
jmp
sti
scas
call
pop
xor
push
jns
pop
in
call
or
loop
bsf
xchg
sbb
shl
or
or
adc
fcom
in
adc
jecxz
sub
mov
cmp
call
pop
mov
pushf
sub
pop
xchg
cdq
ja
lock
or
sbb
lods
ins
adc
adc
adc
test
xor
inc
adc
add
mov
ds
push
mov
mov
and
sbb
or
repz
inc
call
(bad)
pushf
push
ss
add
cmp
fsubp
movs
sbb
adc
sahf
xor
inc
aas
lock
(bad)
adc
adc
ins
sub
lea
rcr
adc
add
scas
xchg
add
xchg
pushf
shl
mov
movs
rcl
shl
pushf
adc
aaa
sub
js
mov
mov
cmp
mul
sbb
mov
test
fstp
jg
adc
sbb
scas
adc
clc
jge
loopne
dec
movs
inc
lahf
hlt
pop
mov
and
jmp
mov
mov
fwait
add
jp
std
push
idiv
pop
call
sbb
data16
and
cmp
fsubr
pusha
push
xor
movs
add
push
xchg
sbb
jg
nop
retf
mov
jl
pop
pop
mov
push
cmps
or
dec
cmp
mov
and
sbb
loop
or
data16
push
jle
add
add
pop
imul
pop
jb
inc
mov
and
pop
xchg
sbb
inc
push
mov
jmp
xchg
fisubr
dec
push
dec
push
inc
rol
popf
std
je
test
mov
add
mov
mov
ret
sub
or
push
add
pop
fcmovnb
pop
push
ins
jle
lea
and
in
dec
test
pop
mov
jg
push
adc
aad
adc
push
loopne
imul
push
nop
mov
mov
jno
jmp
jl
ror
dec
call
test
sbb
into
fnstsw
jne
das
daa
xchg
add
sbb
(bad)
call
jo
ja
dec
or
ds
adc
loopne
sbb
pushf
adc
xor
jg
or
or
jle
or
push
pop
push
cmc
stc
sub
mov
xchg
imul
adc
out
fwait
inc
mov
retf
inc
outs
ret
or
pop
frstor
ins
stos
shr
shl
push
add
jecxz
dec
inc
cdq
gs
sbb
bound
mov
mov
inc
dec
xor
lahf
das
pop
lds
outs
adc
push
in
sbb
test
sbb
or
test
add
or
mov
mov
jle
mov
sub
(bad)
sub
mov
stos
xchg
scas
sbb
or
add
xchg
inc
int3
add
and
or
fidiv
sbb
adc
mov
das
fidiv
jne
sub
push
movs
addr16
sub
push
sub
inc
jo
pusha
xchg
dec
jmp
dec
jae
cmp
cs
and
dec
add
mov
jb
push
push
mov
push
jo
jmp
sbb
dec
xor
ret
xlat
pop
sub
jg
jle
jmp
adc
xchg
int3
pop
cmps
dec
and
lahf
ins
test
and
sub
push
in
mov
pop
cs
jnp
sub
lahf
clc
xchg
fsubr
test
inc
mov
adc
call
push
adc
pop
pop
jle
fcom
lods
add
dec
adc
clc
(bad)
rol
add
dec
clc
pop
xor
into
xor
cmps
hlt
adc
or
push
call
in
jae
jl
inc
rcr
or
test
aad
mov
mov
inc
fwait
and
push
cmp
mov
lods
sbb
leave
push
mov
je
jmp
pop
rol
pop
hlt
jne
dec
in
bound
adc
mov
icebp
push
fwait
push
and
or
add
icebp
push
popf
inc
aad
in
xor
test
ret
mov
movaps
jg
and
cmp
movs
xchg
pop
adc
xchg
cmp
pop
repnz
pop
lock
or
sub
mov
push
scas
fldcw
cli
ja
(bad)
xor
sbb
dec
cli
jne
add
ins
push
in
jge
jg
inc
jne
aad
add
outs
push
repz
pop
ja
test
mov
mov
ins
ins
cmc
adc
rcl
in
shl
push
mov
add
adc
lods
bound
call
ret
nop
je
sbb
pusha
add
mov
test
shr
mov
dec
sbb
xor
mov
ret
add
lds
jne
ss
push
pushf
pop
(bad)
adc
add
jmp
shl
cmp
mov
xchg
add
mov
pop
and
loopne
aas
push
mov
mov
dec
call
cmp
test
xor
call
pop
pop
mov
rol
mov
hlt
add
pop
std
clc
mov
jmp
jmp
push
(bad)
movs
dec
mov
sub
(bad)
pop
or
pop
pop
scas
pop
pop
pop
jp
test
add
fst
pop
loopne
jne
pop
pop
and
sub
in
xchg
dec
or
je
inc
push
sbb
or
mov
jbe
sbb
sbb
adc
add
jb
xchg
in
in
shrd
xchg
mov
mov
sbb
mov
push
xchg
daa
sbb
mov
das
mov
add
in
inc
fdiv
mov
pop
xchg
les
cmp
nop
mov
mov
imul
dec
repnz
mov
sub
pushf
clc
dec
add
sub
cld
les
les
cld
enter
mov
les
daa
sub
add
movs
dec
inc
(bad)
mov
cmp
sar
mov
or
push
ja
inc
(bad)
hlt
mov
and
mov
cmp
movs
push
mov
in
or
and
jecxz
sbb
fs
or
or
or
mov
loop
adc
in
pop
push
ins
das
fs
xor
ins
add
fs
(bad)
cdq
test
mov
xor
pop
aaa
xchg
push
push
lea
and
pop
iret
cmps
xchg
call
int3
pop
and
cmp
or
aas
jo
retf
(bad)
or
push
mov
rol
lock
xchg
or
or
mov
in
ret
call
out
or
and
call
gs
mov
dec
fcomp
jmp
cmp
sub
dec
sub
sahf
add
nop
xchg
fcomp
fdivr
je
stos
add
jne
imul
pop
idiv
dec
mov
jb
int3
int3
adc
frstor
push
xchg
lea
iret
adc
inc
pusha
sub
in
and
sbb
pushf
xor
cs
or
xchg
ins
daa
enter
sbb
jle
and
jbe
sbb
pop
and
enter
in
mov
ds
adc
push
mov
cmp
sbb
cmp
and
inc
sub
daa
mov
and
push
or
rol
ret
mov
add
xor
sub
inc
or
je
rcl
dec
sub
iret
jae
jmp
clc
adc
sub
les
shr
or
in
mov
je
adc
popa
or
and
lods
in
push
hlt
rcr
pop
inc
inc
jl
loopne
inc
and
add
xchg
push
mov
xor
add
outs
cmp
(bad)
jmp
fisttp
ret
std
test
shl
stc
or
loopne
inc
icebp
pusha
sbb
jecxz
or
in
movntps
add
mov
cmp
and
mov
sub
jmp
adc
adc
add
mov
loopne
test
in
rcr
inc
dec
mov
add
cmp
jae
and
push
cmps
mov
call
sbb
imul
cmp
std
jecxz
dec
je
neg
or
adc
cmp
pop
out
adc
inc
outs
fdiv
cmp
add
es
out
cmps
imul
in
hlt
xchg
or
ror
jne
mov
popf
xchg
push
cmp
nop
cmc
add
sub
mov
out
sub
jno
mov
jae
push
sbb
push
xchg
mov
pop
in
pop
dec
sbb
out
pop
jae
inc
hlt
mov
sbb
jae
or
fs
arpl
or
call
or
call
test
adc
jmp
ins
mov
mov
or
cmp
xor
adc
push
add
or
sar
push
ror
and
or
sub
xchg
loope
adc
hlt
mov
push
push
adc
adc
sbb
mov
push
sti
cwde
sbb
fistp
aaa
imul
inc
add
sbb
test
sbb
pop
inc
push
inc
dec
inc
dec
pop
fisubr
pushf
loope
shld
add
mov
adc
and
sbb
or
ds
sub
dec
xchg
(bad)
push
push
or
call
pushf
add
push
sub
adc
mov
xchg
retf
sbb
adc
push
dec
loopne
sbb
lds
rol
out
jmp
mov
dec
dec
push
pop
sti
shl
xor
cmp
or
ret
dec
enter
ret
mov
(bad)
push
add
sti
add
pop
mov
fnstsw
mov
popf
mov
push
(bad)
fld
adc
push
pop
mov
cmp
sbb
pop
and
inc
(bad)
mov
imul
gs
jo
inc
js
fisttp
call
cmps
xchg
lock
inc
ret
mov
ja
call
sbb
adc
jge
sbb
aad
inc
nop
add
rcl
sbb
into
sbb
lds
dec
sbb
mov
movs
xacquire
ss
shl
ret
jne
jo
pusha
mov
das
and
fwait
pop
call
mov
cmc
xlat
sub
outs
mov
add
fsub
lahf
cmp
and
aaa
push
fdiv
sahf
add
arpl
sub
fcomi
push
cld
sbb
and
sub
hlt
aam
and
out
push
test
shl
or
xchg
sub
pop
mov
mov
arpl
and
call
dec
xor
push
add
dec
xor
mov
mov
dec
xor
push
cs
xchg
fisub
push
adc
pusha
je
std
mov
dec
dec
leave
das
(bad)
mov
(bad)
movs
mov
aaa
dec
add
push
mov
adc
or
adc
sbb
ds
or
mov
mov
and
xor
out
iret
neg
test
jge
dec
mov
adc
dec
dec
(bad)
and
push
xchg
test
das
pop
enter
adc
cmps
mov
mov
ins
jb
xchg
adc
fst
es
unpcklps
and
test
sbb
in
sar
js
lock
mov
enter
seta
sbb
sbb
out
shl
xor
and
mov
mul
inc
neg
out
xor
push
jne
jmp
shl
and
xchg
pop
and
sbb
es
dec
dec
sbb
lea
out
shr
retf
and
adc
or
push
sha256msg1
mov
jae
mov
add
xlat
clc
and
inc
add
lds
not
fwait
cmp
jne
shr
call
adc
push
fisubr
pop
daa
stos
and
mov
add
daa
pusha
aad
push
ds
jnp
adc
rol
or
sbb
lods
pop
fidiv
mov
inc
mov
and
push
retf
lds
outs
add
sbb
xchg
cmps
adc
jo
or
xor
stos
xchg
inc
daa
call
add
icebp
out
jno
gs
icebp
add
enter
lods
sbb
push
fidiv
and
jne
inc
jne
adc
mov
xchg
mov
loope
sbb
adc
and
xor
arpl
jl
mov
and
push
mov
(bad)
div
xor
(bad)
in
cmp
loopne
pop
mov
push
js
fst
and
shr
add
xor
loope
cs
cmp
push
sub
or
in
adc
adc
loop
hlt
clc
jl
or
sbb
sahf
push
clc
shld
(bad)
loopne
dec
fdivr
fmul
shl
sar
push
enter
nop
adc
les
mov
mov
pop
into
nop
call
loopne
jle
push
js
sahf
out
cld
jo
push
xor
pusha
out
mov
push
int
stc
sahf
in
dec
pop
lock
or
inc
popf
idiv
xor
out
mov
and
add
and
stc
mov
sbb
or
jns
aaa
repnz
push
adc
pop
adc
enter
or
fcom
or
fadd
pop
add
mov
leave
xor
hlt
sub
fstp
cmps
in
push
int3
jns
ds
mov
or
test
addr16
loopne
in
fcomp
iret
fcomp
aam
pop
shr
cmp
int3
push
mov
stc
mov
mov
in
repnz
daa
iret
enter
cmpxchg
iret
enter
pop
test
ins
and
or
aam
pushf
cmp
mov
push
xor
xchg
ins
adc
push
jmp
nop
pop
dec
add
push
and
xlat
sbb
mov
add
push
or
xchg
push
jnp
sub
pop
lock
icebp
add
mov
aad
sub
fisttp
pop
adc
fcmovne
and
jge
iret
add
or
ss
push
jb
test
mov
pusha
and
cmp
nop
cwde
nop
mov
add
enter
sub
les
jno
and
cmp
inc
pop
jns
or
add
popf
or
xchg
cmp
aas
sub
adc
cmp
mov
jo
inc
xor
or
and
ds
adc
rcl
ins
in
cs
and
xor
cmp
imul
enter
cmp
cmp
inc
cli
or
pop
adc
pushf
jmp
data16
or
add
mov
or
add
fdiv
ss
or
pop
pop
and
out
or
xchg
inc
enter
and
pusha
mov
cmp
or
pop
aam
dec
clc
mov
sub
mov
ror
cwde
add
inc
hlt
rcr
cmp
movs
ret
cmp
pop
jmp
out
cmp
mov
aaa
cmp
nop
or
stos
in
enter
out
adc
adc
or
cmp
inc
shl
xchg
add
lea
ds
jg
mov
hlt
lea
popa
and
add
enter
mov
sbb
cmps
je
dec
pop
cmps
pop
imul
sbb
sub
cmp
rcl
js
ja
push
or
cmc
jecxz
ds
adc
test
add
or
sub
aas
or
and
pop
cmp
je
nop
sub
in
in
xchg
leave
leave
mov
test
push
mov
retf
mov
and
inc
jge
rol
push
popf
pop
push
les
lock
in
mov
aam
addr16
loopne
mov
cmp
pop
es
movs
inc
test
xchg
dec
es
es
fs
mov
cdq
fs
pusha
mov
xchg
dec
jo
js
xchg
dec
les
cdq
mov
inc
nop
es
cwde
aam
es
inc
cmp
pop
es
fdiv
loopne
cmp
stos
pop
pushf
call
mov
dec
repnz
in
sub
inc
dec
repnz
sbb
rcl
faddp
jne
push
nop
sbb
lea
mov
or
in
out
inc
js
dec
add
outs
je
fs
sub
push
jne
mov
out
jle
adc
cmovns
out
fst
outs
dec
jb
pop
outs
jb
in
jg
inc
ins
jo
inc
jb
ins
push
je
pop
push
enter
cmp
and
mov
jbe
inc
jae
pop
pop
cwde
sbb
outs
test
or
dec
inc
clc
push
sbb
mov
sub
sbb
xor
sub
jb
lahf
pop
(bad)
ins
push
fdivrp
and
pop
ret
push
adc
pop
cmps
into
jnp
jp
test
mov
or
or
and
test
mov
sbb
dec
jo
push
lods
push
loopne
sti
cmp
push
rcr
test
into
push
mov
jnp
fwait
iret
cmp
inc
inc
push
hlt
ss
popa
xor
adc
jne
push
lods
div
fmul
nop
pop
test
fdiv
sbb
sub
jno
dec
fisttp
fimul
and
adc
shr
inc
xchg
ret
add
and
sbb
leave
cmp
hlt
hlt
mov
loopne
adc
int3
jmp
inc
push
mov
js
test
mov
push
mov
dec
mov
jg
push
mov
pop
sbb
not
sub
add
mov
mov
inc
push
fcom
les
fstp
jmp
push
mov
gs
inc
call
inc
pop
add
or
dec
push
cwde
mov
push
inc
adc
inc
fiadd
lods
(bad)
lods
dec
bound
xchg
push
adc
ds
movs
pusha
(bad)
pop
and
int
(bad)
je
push
push
nop
pop
mov
fisub
fadd
fsub
out
cmovb
fisub
cmp
and
jbe
ds
jo
or
adc
or
mov
mov
sbb
dec
lods
mov
or
and
cwde
and
push
cmp
jb
or
jo
scas
inc
cs
leave
adc
ins
xchg
aam
add
aam
cmp
inc
(bad)
push
lahf
test
and
mov
push
mov
(bad)
imul
mov
ds
cld
inc
inc
clc
test
ins
and
sub
mov
std
and
cld
mov
xchg
pop
pop
popa
pusha
mov
adc
mov
sub
data16
mov
push
push
jb
out
add
xchg
and
loope
lea
in
inc
stos
ss
cmp
clc
(bad)
daa
call
enter
cmp
daa
popf
nop
xchg
sbb
cli
add
dec
pop
add
in
jmp
add
jecxz
pop
dec
cmp
sbb
fbld
cmps
jb
cmp
dec
jb
in
mov
inc
dec
nop
add
inc
cwde
sbb
adc
daa
dec
dec
sahf
dec
fild
jns
pop
push
mov
repnz
dec
outs
cmp
in
dec
push
cmp
cli
add
cmp
add
sbb
push
es
xchg
fprem
sub
add
aas
jno
or
bound
jo
add
pop
call
jbe
add
cmp
shl
pop
mov
pop
cmp
mov
ret
dec
clc
mov
pop
cmp
je
out
sbb
cmp
push
repnz
lock
in
repnz
dec
in
mov
add
call
ror
call
outs
pmulhuw
cs
jae
loopne
mov
and
lock
mov
or
or
adc
aam
loopne
push
pop
add
pop
les
jnp
sub
mov
push
mov
cmp
hlt
dec
nop
clc
xchg
or
push
sbb
jp
xor
cmp
(bad)
jmp
jne
xor
fld
aad
jmp
adc
cmp
jmp
push
fs
adc
dec
sub
adc
leave
fwait
std
push
inc
add
push
dec
in
adc
xchg
mov
jmp
inc
dec
call
test
sbb
jecxz
add
mov
or
in
push
fmul
push
pop
pushf
push
enter
cmc
xor
test
in
ja
popa
aaa
adc
icebp
aaa
jp
push
rol
shl
xchg
adc
lahf
ret
inc
dec
mov
push
jge
mov
repnz
jnp
mov
push
add
lods
ins
fistp
xchg
add
shr
sbb
out
mov
inc
push
pop
stc
inc
call
imul
cld
loope
xchg
jp
cld
mov
test
and
loope
xchg
push
add
pop
aas
clc
sub
inc
dec
inc
xor
add
mov
call
(bad)
jge
xchg
pop
les
adc
fsub
clc
jmp
and
mov
ds
movd
dec
call
or
inc
add
ins
sbb
pushf
and
ror
and
movs
pop
or
sub
inc
pop
dec
inc
push
jbe
daa
adc
lea
lods
sub
inc
and
xor
repz
dec
mov
jecxz
jnp
and
sub
in
aaa
sbb
int3
cmp
fst
push
jne
push
cld
in
mov
sub
(bad)
sbb
sub
daa
movs
xor
cmp
jae
push
aas
jmp
push
add
iret
inc
xchg
push
data16
push
jmp
sub
or
add
div
and
sbb
mov
and
add
mov
dec
dec
cs
pusha
ret
dec
inc
mov
or
iret
jb
mov
dec
mov
add
jg
pop
dec
inc
mov
inc
sub
loop
or
or
pop
js
in
adc
mov
les
mov
add
add
add
sbb
mov
pop
pop
push
(bad)
hlt
(bad)
cmp
inc
or
sbb
sbb
retf
jmp
sub
ret
cld
jne
cmp
in
push
stos
iret
or
out
call
ds
add
retf
inc
sbb
(bad)
into
dec
add
dec
(bad)
inc
and
adc
jne
sbb
or
aam
sahf
inc
test
scas
arpl
xor
leave
test
clc
loopne
lea
mov
mov
jae
or
jo
aas
jmp
sbb
sbb
loopne
and
dec
add
imul
and
fwait
or
jns
adc
jmp
data16
adc
inc
cdq
push
movs
test
call
inc
cmp
push
retf
sub
mov
xchg
pop
aad
push
test
jmp
push
jecxz
pushf
xchg
pop
enter
nop
mov
inc
cmp
jmp
dec
push
sbb
data16
jns
pop
add
clc
movs
cmp
jl
mov
(bad)
aad
add
sub
mov
dec
in
inc
sub
cmp
inc
(bad)
std
cmp
push
dec
(bad)
mov
jl
(bad)
leave
pop
daa
or
cs
and
sti
outs
sub
or
pop
neg
cld
add
cmp
je
pop
jne
sbb
add
cmp
jb
and
or
std
ds
inc
inc
sub
fidivr
(bad)
test
shr
mov
sub
fs
or
push
inc
add
inc
pop
jmp
push
push
add
(bad)
push
cmp
add
mov
pop
out
dec
pop
pop
mov
sub
int
into
fwait
cs
xchg
mov
imul
pop
pop
or
xor
push
arpl
(bad)
fidiv
ins
jns
cld
outs
cmps
mov
enter
jns
jmp
cld
or
mov
mov
jl
mov
and
pop
fst
mov
xor
and
fstp
sub
ret
sub
xor
scas
mov
loopne
ficomp
rol
arpl
movsx
(bad)
jmp
and
and
add
scas
fst
ja
pop
dec
fidivr
jecxz
shr
aaa
(bad)
(bad)
(bad)
rcr
jl
sub
jmp
fimul
lea
inc
shr
xchg
inc
xor
outs
dec
aas
push
mov
or
hlt
das
push
test
jne
jae
jl
rcl
push
or
jne
icebp
dec
lds
add
sbb
push
or
jp
popa
ret
lock
test
ror
adc
xchg
mov
dec
sbb
sar
cld
mov
fwait
ds
push
xor
leave
and
addr16
sub
xchg
xchg
pop
test
xchg
(bad)
inc
push
cmp
mov
call
enter
pop
xchg
in
xchg
dec
out
ins
ror
aam
adc
sub
xor
push
dec
push
push
mov
sbb
push
mov
push
dec
icebp
sbb
pop
push
and
or
pop
sub
add
mov
mov
sahf
xor
nop
jmp
push
lds
push
clc
xlat
fidiv
(bad)
aaa
pop
sub
and
xor
or
add
sbb
cmp
jne
xor
aam
cmp
push
ss
dec
ds
out
mov
mov
(bad)
jl
loopne
add
xor
dec
xor
out
fs
adc
mov
daa
mov
dec
iret
repz
data16
cmp
rcl
cmp
inc
adc
or
push
test
mov
push
fsubr
dec
daa
jns
lock
push
mov
ins
neg
sbb
fwait
pop
cld
xor
clc
fst
and
fistp
add
ins
dec
outs
and
ror
mov
popa
pushf
adc
cmc
sub
mov
fdiv
jmp
and
push
jmp
lock
pop
push
jo
push
pop
mov
add
xchg
jmp
adc
dec
mov
sub
clc
int
or
dec
jmp
data16
and
sbb
dec
test
pop
rcl
jne
dec
rcr
mov
push
jmp
adc
inc
fsubrp
or
and
std
jg
sub
xor
faddp
cld
sub
or
or
inc
push
sahf
push
data16
nop
out
test
repnz
inc
cmp
clc
and
cld
push
rcr
push
adc
aad
mov
add
push
fisubr
adc
or
xchg
scas
cmp
mov
adc
or
in
cmp
add
call
movs
add
pusha
das
aaa
inc
mov
cli
movs
push
push
scas
dec
sub
je
push
aad
xlat
outs
lea
mov
call
movs
in
xchg
and
push
or
stc
adc
gs
mov
cmp
cmp
arpl
adc
push
jno
stc
cmp
repz
(bad)
leave
jnp
cmps
cmp
fisttp
mov
pop
push
data16
aad
pop
popf
fwait
shl
imul
or
xchg
lods
outs
call
mov
sbb
mov
fld
mov
call
or
clc
pop
cmp
pop
cs
clc
inc
fild
fdiv
mov
shl
ins
sbb
or
fs
mov
(bad)
push
and
pop
xchg
and
sub
mov
dec
clc
ins
inc
test
cwde
je
dec
je
jmp
outs
(bad)
sbb
je
mov
push
or
mov
aaa
arpl
fs
iret
repz
push
lods
iret
repnz
cmps
jge
ds
dec
push
rol
jnp
cmps
pop
jo
mov
pop
mov
jns
mov
fisttp
shl
sub
xchg
adc
test
mov
int
sbb
rcl
adc
push
jbe
and
sub
xchg
cmp
daa
add
(bad)
sbb
cmp
adc
add
push
outs
mov
mov
pop
and
inc
cmp
and
jp
sbb
sbb
fwait
adc
mov
jb
mov
or
pop
or
(bad)
jmp
dec
mov
push
rcl
xor
ins
(bad)
fcomp
jmp
rcpps
mov
sub
fadd
test
and
add
add
adc
outs
pop
pop
jb
push
pop
push
je
retf
sbb
leave
arpl
dec
xlat
pop
leave
add
arpl
out
jmp
scas
aam
ror
cs
add
ror
push
and
out
movs
ds
push
std
push
push
(bad)
clc
popa
out
sbb
in
jae
add
cmp
in
into
mov
adc
adc
enter
cmp
add
mov
and
pop
and
ja
xor
add
or
jb
jae
pusha
cmp
jmp
(bad)
push
jmp
hlt
std
jmp
push
cmp
pop
jb
ins
or
push
call
xchg
data16
sbb
or
sub
push
jns
out
mov
fsub
jmp
pop
xor
adc
and
or
push
adc
dec
xlat
inc
sbb
pop
sub
and
iret
adc
mov
xchg
or
xor
(bad)
sbb
xchg
hlt
test
pushf
cdq
sbb
push
mov
xor
add
sbb
retfw
pop
aaa
mov
jnp
stc
xor
aaa
sbb
push
mov
adc
sub
movs
sbb
xlat
out
in
jl
rcl
push
fisubr
or
hlt
cdq
inc
xchg
add
cmp
jle
mov
xchg
lea
call
push
add
lock
jbe
in
jnp
add
call
ss
mov
mov
sbb
ret
push
enter
fucom
push
hlt
lock
ror
mov
addr16
aaa
sbb
or
nop
out
jecxz
ins
dec
imul
js
xchg
ror
push
enter
adc
mov
sbb
test
mov
outs
fiadd
cmp
ins
push
ds
out
addr16
mov
out
jmp
cmp
leave
jb
pop
adc
aaa
sbb
iret
dec
pop
clc
lock
xchg
pop
repnz
adc
adc
int3
mov
push
cmp
mov
nop
mov
mov
arpl
adc
pop
call
les
mov
xchg
mov
mov
and
mov
sbb
nop
dec
jmp
cmp
push
pop
xor
jl
xor
jno
xchg
mov
cmps
cmp
jns
pop
dec
outs
fs
outs
(bad)
jns
(bad)
fisubr
icebp
push
out
cmps
sub
push
movs
sbb
rcr
lods
mov
xchg
das
xor
add
(bad)
xchg
loop
pop
xchg
or
adc
mov
push
movs
jmp
and
dec
gs
mul
adc
add
inc
out
push
push
daa
mov
test
mov
inc
push
push
push
cmp
and
mov
xchg
add
retf
outs
mov
mov
push
repnz
jo
fcom
adc
test
xor
call
movs
test
loopne
add
mov
add
fdivr
add
enter
lock
mov
or
xchg
or
mov
dec
jno
dec
cvttps2pi
pop
out
inc
jno
dec
inc
cs
out
out
sub
dec
pusha
das
add
push
add
or
or
xchg
push
or
jns
adc
imul
mov
pop
out
sahf
out
inc
push
data16
sar
movs
push
jae
mov
push
jae
neg
es
(bad)
rol
fsubrp
rcl
jns
in
mov
xchg
lods
mov
fimul
cmp
pop
jnp
xchg
sbb
clc
pop
in
sbb
fld
fcomp
sbb
sub
fild
mov
and
mov
mul
sti
push
inc
int3
dec
or
jne
xchg
xchg
sub
icebp
pusha
rcl
lods
sbb
das
add
in
pop
xchg
add
jl
jnp
pop
add
loopne
out
push
fidiv
xor
je
pop
push
scas
iret
repz
pop
imul
cmp
cmp
add
push
sbb
pop
stos
adc
add
sbb
fidiv
mov
jne
adc
mov
dec
sbb
push
into
mov
inc
shl
stos
call
mov
aas
jmp
cmp
dec
cwde
dec
jmp
shl
ins
imul
and
push
pusha
sub
add
cs
pop
jne
push
xor
shr
bound
div
outs
cmp
adc
or
gs
enter
jo
fwait
rcr
and
and
mov
(bad)
das
pop
jbe
push
pop
and
and
mov
pusha
and
sub
pop
add
pop
add
imul
sub
sar
and
push
xor
outs
jl
out
jp
sahf
mov
js
es
pop
rcr
js
aad
out
imul
push
add
adc
pop
pop
pop
arpl
push
jmp
inc
fild
stc
test
sahf
aam
fcmovnu
daa
loope
dec
xchg
fs
and
xor
inc
out
mov
push
mov
lock
movsx
in
ds
push
sub
ret
mov
bound
cmp
in
fild
inc
dec
repnz
repz
and
push
gs
mov
dec
div
loopne
pop
xchg
fstp
je
lods
sahf
out
mov
add
sbb
jns
push
addr16
ja
out
out
mov
mov
or
sahf
retf
loope
and
cmp
sbb
pop
lods
js
test
and
sbb
mov
cmc
fisubr
arpl
icebp
sub
dec
dec
test
mov
push
pop
icebp
sbb
ds
adc
inc
gs
pop
jmp
imul
pushf
and
xor
mov
clc
dec
adc
push
sbb
fisttp
adc
sub
cmp
popa
outs
inc
ret
in
sti
aad
nop
out
jnp
sbb
shl
fisubr
push
inc
push
push
jnp
stos
jp
mov
retf
xor
fstp
and
out
lea
fild
mov
inc
push
xor
rcl
push
mov
enter
mov
sub
push
push
movs
out
dec
xchg
aaa
sub
fild
dec
xchg
pop
cmp
lods
inc
xor
jnp
nop
or
shl
add
es
mov
push
test
loopne
mov
(bad)
in
xorps
cmp
inc
inc
fmul
loopne
jecxz
mov
or
pop
ins
popf
nop
and
mov
push
dec
sbb
test
mov
jg
pop
mov
out
inc
inc
push
dec
jl
add
jl
or
sbb
lock
cmps
nop
mov
pop
and
leave
jge
xchg
inc
xor
sar
iret
imul
mov
push
mov
cmp
fsubrp
add
jnp
cmps
stos
mov
lock
cmps
and
jg
xchg
cmp
fbstp
pop
dec
mov
outs
inc
fist
fisttp
imul
pop
test
outs
mov
xchg
mov
test
mov
adc
xor
sub
test
mov
adc
xchg
pop
jo
and
ficomp
or
push
ins
push
jnp
xlat
sahf
dec
mov
jnp
xor
(bad)
fld
icebp
add
loope
cmp
push
adc
cmp
fsubr
dec
leave
jns
dec
bound
push
test
es
loope
xchg
xchg
xchg
cmp
aam
xchg
sub
pushf
ret
and
push
pop
das
add
leave
outs
cwde
xchg
lock
in
push
nop
out
sbb
daa
xor
add
fild
push
mov
and
mov
iret
push
push
xchg
add
add
sub
adc
add
jge
sbb
push
mov
test
cld
push
or
inc
push
bound
repz
dec
test
cmp
daa
scas
retf
add
es
loopne
test
ja
push
jnp
fmul
into
fmul
repnz
(bad)
xor
rcl
jo
jl
stos
pop
mov
pop
pusha
push
ins
mov
inc
add
in
inc
add
ror
stos
inc
iret
pop
fdivr
pushf
jle
cmp
pusha
and
pop
add
xchg
sub
dec
pop
xchg
mov
push
daa
mov
loopne
fdivrp
xchg
pop
dec
push
pushf
fild
lods
pop
or
cmp
or
xchg
and
mov
cmp
mov
add
mov
jae
xor
inc
jmp
push
dec
test
fsub
jmp
bound
(bad)
sub
pop
add
dec
fmul
(bad)
outs
in
adc
nop
mov
xchg
jle
rcr
push
mov
pop
dec
pusha
jne
pusha
(bad)
and
push
icebp
mov
and
adc
xor
add
dec
(bad)
movs
inc
loopne
es
lock
mov
xor
movs
test
mov
test
leave
lock
xchg
dec
mov
sub
push
dec
inc
inc
rol
sub
repz
inc
loopne
dec
pop
inc
fs
or
sub
jg
dec
ret
cmp
inc
mov
and
jno
mov
push
dec
enter
jnp
cdq
inc
adc
xchg
mov
sub
sbb
xchg
or
pop
or
lds
xchg
fsub
adc
or
or
adc
outs
push
add
mov
sbb
daa
enter
test
jns
cmp
fsub
sti
jno
cmp
inc
cmp
ja
leave
mov
mov
push
fld
mov
out
sahf
ss
js
mov
mov
loop
mov
cmp
xor
dec
ins
leave
and
dec
pushf
jg
ror
adc
popf
pusha
mov
mov
adc
scas
mov
jecxz
fisub
sahf
dec
sbb
mov
push
inc
test
xlat
mov
int
jmp
(bad)
enter
push
add
pusha
jmp
push
stc
cmp
and
call
ds
xchg
into
push
or
cmps
sbb
out
push
fcomp
or
neg
es
test
mov
inc
mov
mov
adc
ins
mov
int3
mov
movs
int3
enter
pop
imul
and
add
dec
mov
fwait
mov
push
or
sar
shr
mov
mov
(bad)
ficomp
pop
popa
push
jle
call
(bad)
ds
pop
jns
mov
das
fcomp
pop
dec
imul
mov
mov
in
xchg
mov
mov
(bad)
loope
stc
mov
inc
fnsave
or
shl
ficom
test
ss
mov
and
aam
mov
movs
rol
inc
mov
cmp
pushf
cwde
mov
ja
xor
stos
xchg
jno
jb
and
push
jmp
mov
mov
inc
sub
movs
lods
sub
push
mov
xor
cmp
adc
test
lds
iret
cdq
or
adc
fdivr
add
push
in
out
pop
nop
pop
and
cs
adc
or
mov
xchg
iret
sbb
hlt
cmp
sbb
cmps
xchg
push
adc
xchg
nop
and
loopne
cs
leave
adc
enter
and
or
xchg
or
sub
out
xor
loopne
mov
in
xchg
cmp
push
cs
dec
nop
mov
xchg
xchg
xor
add
sub
and
(bad)
repz
leave
cmps
xchg
pop
sbb
xor
dec
rcl
ins
push
jnp
push
inc
loopne
push
ins
test
xor
ins
and
push
inc
push
add
ins
and
ins
stos
or
inc
cmp
push
cmp
cmp
sbb
in
in
imul
loopne
xor
and
mov
ret
fdiv
fdiv
or
aam
aam
push
xor
dec
aaa
rcl
iret
xor
pop
xchg
push
enter
xor
and
mov
outs
cmp
cmp
test
fisubr
push
call
frndint
sbb
mov
dec
dec
push
clc
pop
push
iret
repz
mov
shl
or
rcl
mov
xor
bound
mov
sbb
pop
inc
ja
mov
mov
jne
ret
mov
aaa
mov
mov
test
add
test
aaa
movs
xchg
dec
dec
add
jno
xor
dec
adc
cwde
dec
pop
adc
aaa
outs
daa
add
outs
aaa
dec
mov
mov
retf
cdq
lock
aaa
sbb
mov
ror
cmp
(bad)
mov
es
repnz
mov
add
nop
ss
int3
or
mov
adc
hlt
mov
rol
mov
or
mov
adc
lock
loopne
cmp
out
mul
jg
je
push
push
je
or
jmp
bound
or
or
cmp
outs
ss
ins
pusha
enter
mov
shl
or
(bad)
adc
sbb
shl
xor
and
sbb
cld
data16
or
cli
inc
or
and
ja
retf
ret
repnz
movs
outs
mov
lock
pop
lea
sub
outs
sub
or
or
xchg
dec
inc
pop
pmulhuw
test
or
mov
push
adc
clc
test
mov
addr16
pop
daa
rol
mov
jg
mov
jmp
mov
ja
shr
mov
and
add
in
mov
mov
dec
and
in
mov
leave
adc
in
pop
in
xchg
adc
mov
xor
or
push
in
dec
xchg
sub
or
xchg
push
pusha
lahf
sub
lock
or
or
stos
repnz
dec
add
xor
fst
or
and
sbb
js
scas
pop
dec
(bad)
push
jne
xchg
mov
pop
xchg
lahf
movs
sub
lods
jnp
dec
retf
dec
inc
rcl
jmp
or
ins
idiv
not
shl
outs
pushf
push
test
fisub
mov
mov
push
or
xchg
push
mov
xchg
mov
xchg
cmp
sub
pushf
pop
inc
or
mov
pushf
sub
popf
sbb
fmul
and
adc
test
lea
mov
imul
add
mov
movzx
js
add
add
jbe
adc
sbb
mov
jge
or
leave
(bad)
sar
sub
sbb
idiv
xor
push
add
es
xchg
or
pop
ja
jmp
and
mov
xchg
call
jb
and
adc
jne
cs
mov
gs
(bad)
std
and
pop
pop
repnz
rcr
hlt
sbb
sbb
mov
and
hlt
xchg
cmp
jmp
inc
imul
cmp
nop
ja
or
sbb
enter
ror
inc
jb
push
js
sti
clc
xchg
sbb
pop
mov
xchg
and
sub
xchg
sub
xchg
ja
pop
lock
dec
js
aaa
and
push
hlt
pop
loop
push
ins
loope
out
clc
xchg
int3
ret
fcom
daa
push
loop
push
push
or
sbb
jl
(bad)
inc
mov
mov
pop
icebp
xchg
imul
pop
js
lods
add
fstp
cmp
pop
xchg
fsubr
mov
dec
bnd
pop
(bad)
push
dec
mov
mov
ret
out
popa
ins
xchg
lea
fiadd
jmp
mov
mov
out
clc
and
sbb
(bad)
adc
pushf
sub
popa
test
push
in
ret
xor
cmp
sub
dec
and
lock
mov
add
addr16
adc
xlat
add
mov
aas
sub
sar
out
nop
loopne
cmp
arpl
mov
push
addr16
add
ins
and
retf
xchg
and
arpl
call
jg
dec
mov
push
mov
adc
or
jbe
loopne
dec
sbb
dec
adc
mov
and
addr16
inc
mov
cmp
add
mov
pop
or
lea
pushf
sbb
jbe
xchg
inc
and
push
daa
adc
add
add
xchg
adc
sbb
adc
(bad)
sub
xor
fcom
jmp
fs
dec
and
movs
jb
je
test
sub
leave
ds
cwde
outs
retf
fwait
mov
outs
and
daa
add
por
sbb
dec
jb
xor
xchg
mov
movs
repz
mov
mov
xchg
repz
xchg
push
mov
iret
repz
loop
repnz
sahf
nop
xchg
stc
add
and
ins
and
pop
sbb
enter
dec
push
inc
sub
idiv
and
pop
push
fisubr
shl
and
retf
inc
adc
into
repz
inc
imul
or
aaa
int3
inc
out
cld
pop
aas
adc
mov
call
and
(bad)
sbb
sbb
inc
jo
xchg
mov
repz
pop
dec
cmps
dec
imul
enter
std
or
nop
cmps
cwde
pop
pop
je
dec
je
rcr
or
xor
in
add
adc
jmp
daa
sub
pop
sub
gs
push
add
xor
cmps
pop
popa
retf
(bad)
xchg
icebp
and
add
xor
loop
jo
mov
add
iret
fisubr
push
and
lods
add
aaa
push
xor
xor
inc
ret
enter
adc
pop
push
or
and
sub
int
and
xor
add
adc
(bad)
pop
lods
cmps
int3
sub
mov
(bad)
adc
loope
cmps
push
xor
leave
mov
in
add
sbb
pop
sub
dec
je
(bad)
xchg
xlat
cmps
add
or
or
jl
gs
push
adc
jae
test
aas
mov
mov
cmp
dec
aam
enter
jne
and
jb
jne
adc
cld
xchg
jno
loopne
sub
jb
jmp
push
add
xchg
loopne
lock
jno
inc
clc
mov
stc
sbb
rcl
loopne
lds
mov
cs
push
jmp
ret
mov
rcl
movs
cmp
fistp
add
adc
lock
ds
fabs
std
cmps
sbb
or
mov
or
stc
add
mov
leave
fdiv
push
stc
push
sti
icebp
fmul
imul
cmp
pop
popa
fmul
push
jmp
add
fstp
fwait
add
lods
fcmovnb
jmp
lahf
sbb
xor
mov
or
xchg
sub
pop
or
mov
loope
cli
pusha
lea
jmp
push
mov
nop
data16
and
or
sbb
mov
or
stc
add
mov
imul
add
add
lods
pop
add
div
push
mov
movs
xchg
mov
xor
out
(bad)
adc
dec
cmc
lock
out
lods
imul
push
or
data16
in
cmp
jne
sub
adc
jbe
icebp
dec
add
sub
rcl
imul
arpl
cwde
jl
in
jne
daa
cwde
mov
mov
jge
in
aad
out
jp
in
or
xor
mov
shl
pop
add
pop
popf
add
scas
dec
jne
mov
fwait
xor
ror
ds
das
loopne
push
cmp
jne
test
and
or
push
loop
mov
ds
push
(bad)
sub
inc
jmp
rcl
cmp
xchg
or
das
lods
aaa
mov
or
cli
or
(bad)
(bad)
add
popa
jmp
push
ret
addr16
jno
sub
inc
pop
cmp
inc
or
sub
cmps
mul
stos
or
(bad)
pop
push
mov
fdivr
push
xlat
lods
or
sbb
and
xor
popa
pop
push
outs
fistp
shl
sub
cmp
js
movs
(bad)
int
bound
rcl
add
add
lods
and
pop
ds
cli
and
add
jbe
push
push
push
mov
mov
push
outs
inc
pop
jmp
sbb
add
or
sahf
aam
adc
push
or
retf
iret
(bad)
mov
sub
ja
adc
adc
loopne
dec
add
daa
pop
xor
movs
in
cmp
jnp
call
scas
sub
adc
js
movs
jge
test
push
out
xchg
movhlps
sub
sbb
hlt
hlt
jp
push
stos
adc
mov
mov
xchg
pop
lahf
cmp
jle
sub
in
jge
add
mov
or
pop
cmp
or
cdq
sbb
jbe
outs
dec
shr
sbb
fld
pop
or
mov
fst
push
nop
dec
neg
in
sub
ins
adc
fcompp
test
push
mov
mov
stc
sub
test
in
iret
xchg
adc
xchg
mov
dec
loopne
xor
mov
or
add
cmp
and
adc
mov
imul
add
out
sbb
adc
repz
jnp
cdq
push
movs
mov
stc
out
jns
out
mov
jo
frstor
(bad)
ror
xor
popf
in
int
clc
xor
push
add
dec
imul
(bad)
loope
adc
dec
mov
xchg
outs
in
inc
sbb
xor
pop
imul
sbb
jmp
inc
add
ficom
or
cdq
lahf
lods
jmp
and
adc
or
adc
pop
add
xchg
lods
sub
fcomp
or
ins
xor
adc
cwde
mov
ins
pop
mov
jecxz
dec
mov
not
mov
(bad)
or
ss
push
clc
push
and
mov
imul
arpl
push
xchg
hlt
je
mov
push
dec
lods
and
das
lea
aaa
(bad)
jne
xchg
inc
es
ret
push
or
adc
imul
add
in
lods
in
mov
int3
adc
inc
mov
sub
or
add
mov
push
xchg
movs
mov
in
mov
into
std
retf
ret
and
mov
xchg
xchg
sbb
in
or
xchg
add
mov
(bad)
pop
mov
pop
xor
push
shl
or
jne
push
ss
push
fdivr
jae
fcmovnbe
mov
or
rcr
lahf
or
inc
push
and
mov
and
mov
stos
mov
test
push
push
push
xor
pop
cmps
cmp
les
dec
jne
sbb
cmp
cmp
push
out
mov
and
retf
ins
xor
out
add
add
mov
or
div
xor
cld
sbb
dec
ret
not
and
dec
jmp
dec
dec
movs
enter
and
repnz
xor
add
mov
dec
fadd
and
or
iret
and
stc
or
or
inc
push
adc
inc
pusha
js
adc
test
lock
add
mov
sub
sbb
dec
mov
mov
sahf
mov
and
cmp
add
cmps
in
popa
push
add
test
xchg
add
ins
or
jmp
or
add
imul
outs
jno
idiv
lea
xchg
or
push
jns
repnz
ins
jae
js
push
shl
out
mov
pop
mov
movs
stos
mov
mov
or
movs
xor
mov
or
jns
and
jmp
cmp
out
inc
clc
mov
fsub
shl
or
out
fnstenv
inc
mov
and
mov
loop
push
js
pop
fcom
sub
das
pop
rcr
out
dec
xor
jne
mov
pop
jns
xchg
push
test
ja
inc
mov
rcl
jl
cmp
push
pop
push
push
push
xor
aaa
xlat
ror
mov
adc
xor
fstp
test
adc
(bad)
lea
or
mov
idiv
add
sub
adc
pop
jge
ror
sbb
es
dec
lea
in
cmp
mov
sbb
cmps
shl
adc
push
push
mov
or
or
add
xchg
cmp
rol
fwait
mov
(bad)
icebp
pop
xor
je
sub
test
xor
mov
pop
mov
mov
mov
inc
push
pop
arpl
xor
iret
add
and
dec
ins
ss
pop
push
adc
pop
(bad)
mov
push
ret
pop
push
outs
imul
or
loopne
aas
inc
arpl
movs
lods
mov
dec
and
inc
fbstp
inc
xor
push
push
pusha
pop
cmp
adc
xor
add
ins
arpl
ja
repnz
xchg
adc
add
mov
jmp
xlat
shl
into
cwde
cmc
ja
xlat
sbb
mov
jne
cmp
or
enter
jmp
xor
adc
jmp
cmp
and
xchg
cld
std
jmp
bound
outs
pop
mov
fstp
add
push
rol
ret
or
popa
mov
clc
push
sbb
and
mov
inc
push
cmp
xchg
push
or
pop
mov
push
add
and
cld
(bad)
cdq
je
sbb
jg
sub
lahf
dec
or
outs
loop
xchg
sub
jne
inc
push
push
xor
inc
fsub
push
mov
jmp
clc
cmp
adc
add
(bad)
retf
imul
mov
jge
dec
aaa
add
scas
add
movs
add
adc
adc
push
sub
fs
or
cmp
add
or
dec
pop
push
addr16
push
inc
add
mov
cmc
(bad)
scas
push
dec
dec
cmp
sar
adc
push
popf
je
add
xor
push
scas
ins
dec
cld
mov
daa
sub
das
xor
das
sub
fild
out
pop
clc
or
cmp
lods
cdq
js
push
xchg
imul
mov
sub
add
cwde
mov
cli
dec
mov
jae
lods
jae
mov
pop
or
leave
mov
mov
mov
into
push
scas
adc
or
inc
cmp
xchg
add
sub
mov
and
pop
(bad)
(bad)
shl
ret
ret
loopne
xor
jno
retw
data16
sbb
mov
mov
sub
(bad)
and
sbb
adc
shl
retf
test
call
pop
or
ds
inc
inc
mov
pop
or
xchg
call
stos
lods
fs
mov
push
test
inc
and
cmp
shl
or
cmp
adc
or
add
ss
lahf
inc
adc
cmp
jg
add
aaa
cmc
push
add
or
sti
movs
rcl
add
xor
and
jg
retf
mov
add
ss
sub
inc
mov
ds
jl
xchg
dec
jne
add
arpl
pop
sbb
pusha
mov
fdivr
adc
fsub
dec
dec
jmp
sbb
mov
aas
pop
or
lahf
int3
sti
ret
xlat
mov
sbb
xor
adc
cs
push
adc
inc
mov
dec
scas
push
adc
in
xor
push
xchg
xchg
mov
inc
push
jbe
push
inc
aas
lods
ret
jb
push
inc
cmp
mov
mov
ret
loope
test
pop
or
in
inc
inc
(bad)
sub
and
mov
mov
push
jae
pushf
xor
enter
push
jge
cmp
add
push
cmp
shl
repz
pop
mov
fisub
lods
push
adc
jl
add
adc
xor
test
pop
out
pop
xchg
push
ret
and
es
pop
je
push
pop
ret
sub
ret
xchg
arpl
pop
jmp
in
ror
rcl
sub
in
jmp
dec
clc
mov
imul
or
aad
dec
push
ja
out
stos
or
call
retf
inc
jle
push
dec
jns
push
dec
pop
fnstenv
fs
iret
(bad)
leave
adc
or
out
scas
cmp
mov
and
les
je
cli
inc
mov
ins
push
or
enter
(bad)
xor
or
mov
fadd
mov
adc
dec
mov
ja
leave
mov
and
cmp
add
xor
add
cmp
inc
push
lea
mov
enter
les
mov
fisttp
aas
repz
dec
sbb
push
fst
add
retf
mov
pop
push
push
push
fs
jge
lds
mov
cmp
jge
dec
pop
or
push
sahf
xor
fidivr
je
lods
cmc
mov
inc
cmp
jle
mov
dec
jg
add
cmps
je
adc
jmp
mov
leave
adc
fbld
cmp
inc
loop
dec
dec
add
icebp
fmul
add
mov
icebp
stos
add
pushf
(bad)
rcl
dec
lahf
cmp
aas
push
fdivr
jb
xor
mov
add
lods
inc
fadd
adc
dec
std
imul
sar
push
xchg
mov
rol
pop
pop
ins
sub
call
ret
dec
pop
add
(bad)
test
int3
xor
cmps
(bad)
lds
dec
ins
stos
or
jl
inc
xor
fistp
push
add
mov
mov
call
mov
cmp
test
jl
mov
cmp
cmp
dec
jne
into
fbld
add
inc
dec
jl
mov
sub
pop
xor
pop
dec
movs
adc
in
enter
xor
dec
pop
inc
ret
sub
add
lock
or
popa
adc
jge
mov
in
loop
fisubr
mov
add
test
sbb
pop
out
sti
cmp
jl
pop
scas
mov
adc
scas
sub
movs
push
mov
mov
ins
dec
outs
dec
mov
adc
jle
or
call
jle
les
sbb
xor
or
pop
ja
mov
cld
dec
ins
and
in
adc
lods
clc
arpl
sbb
loope
test
mov
mov
and
(bad)
call
les
sbb
inc
pop
jle
push
ss
je
jle
add
sbb
mov
mov
lock
xor
daa
jmp
cmc
pop
stos
adc
mov
fdiv
xor
rol
push
lahf
add
imul
xor
inc
add
pop
adc
bound
or
sbb
mov
daa
cmc
dec
xchg
mov
retf
sahf
out
call
mov
outs
jge
adc
aas
adc
push
call
jecxz
xor
shl
out
xchg
inc
call
push
push
push
mov
or
xchg
movsx
dec
jnp
xor
mov
test
fld
and
mov
frstor
pop
leave
in
fild
cmp
cdq
or
xor
sbb
mov
xchg
mov
inc
ja
jns
shl
ins
jg
push
test
jmp
sbb
adc
jbe
mov
xchg
xor
(bad)
mov
jmp
adc
or
mov
jmp
shl
xchg
leave
mov
in
ins
cmp
call
sbb
test
inc
mov
aas
popf
cmp
sub
clc
jp
or
pop
dec
or
and
not
add
add
movs
and
movs
int
sub
cwde
lods
or
xor
xchg
hlt
push
loopne
xchg
or
adc
hlt
dec
add
sub
xor
ficomp
pop
mov
and
mov
stos
fist
jp
dec
pop
fs
dec
dec
into
in
rol
daa
cmp
fsub
push
outs
shl
imul
das
scas
or
test
adc
sbb
int
dec
int3
jns
out
pop
outs
jle
sahf
jb
lahf
out
mov
and
xlat
fcomp
out
je
mov
popf
lock
ja
fadd
pop
sbb
push
fstp
fwait
pop
(bad)
nop
pusha
lea
pop
jae
push
gs
xor
adc
jmp
pop
pop
cmps
in
cmp
bound
push
pop
xlat
ficom
jl
cmp
dec
xor
xor
call
pop
and
xor
js
or
or
sub
dec
mov
jl
aaa
fld
clc
lods
cmp
mov
cwde
sbb
cmps
out
nop
mov
add
nop
cmps
xchg
inc
pop
inc
inc
out
jbe
daa
(bad)
mov
or
mov
push
cld
in
ja
test
add
mov
cmp
mov
jno
clc
push
inc
jb
rol
out
and
shl
rol
mov
cmp
push
shl
push
adc
xor
(bad)
lods
push
sbb
sub
les
sbb
(bad)
das
int
or
jnp
je
or
adc
into
mov
test
jo
or
ret
dec
push
mov
sub
push
add
arpl
add
or
lods
add
int3
xchg
push
cmp
adc
dec
ins
or
and
daa
test
mov
test
cmp
cmps
adc
leave
mov
add
sbb
or
(bad)
icebp
rol
test
dec
or
and
or
mov
clc
sub
scas
add
clc
mov
mov
das
cmp
icebp
ret
sub
leave
jl
arpl
push
pmulhuw
fild
ds
ins
cmp
rcr
add
out
sub
fstp
xchg
loopne
enter
xchg
inc
loopne
bound
mov
sub
push
push
int
pop
sub
jl
mov
or
xor
inc
dec
jne
aas
call
stos
jne
leave
and
sub
fcom
push
mov
dec
scas
add
lea
push
cdq
and
ret
adc
push
inc
les
sub
loopne
int
pop
xchg
cli
es
into
enter
stos
sbb
retf
shl
test
sub
clc
jg
ret
jmp
mov
xor
mov
cmps
xchg
jg
pop
push
push
pop
cmp
loopne
sar
jge
pop
cmp
push
adc
cmp
mov
xchg
aaa
add
ror
push
mov
cmps
out
pushf
xor
dec
xor
sti
or
inc
ss
inc
scas
mov
lds
outs
movs
or
sbb
or
sub
adc
mov
adc
aam
mov
cwde
jnp
mov
test
jmp
add
mov
add
inc
adc
pop
js
stc
pop
sti
cli
lods
(bad)
(bad)
enter
or
call
add
push
or
gs
arpl
adc
xchg
add
xlat
in
adc
fsub
pop
pop
fmul
push
mov
nop
fmul
leave
or
nop
(bad)
or
inc
sbb
xcrypt-cbc
cmps
aam
jl
mov
mov
sub
xchg
dec
ret
add
push
mov
lea
jb
frstor
pusha
fwait
pop
(bad)
mov
pop
ret
ss
cmp
lea
das
xchg
sub
enter
cmp
cmps
mov
ins
inc
jl
test
jae
or
or
fstp
add
mov
mov
clc
lahf
fwait
adc
push
pop
mov
push
pop
fnstsw
(bad)
clc
mov
and
or
jo
inc
hlt
adc
or
sub
dec
add
sbb
or
enter
popa
ret
mov
mov
into
add
xor
sbb
jmp
aas
or
imul
xchg
mov
gs
ret
inc
or
inc
jb
lods
hlt
cmp
pop
mov
daa
test
or
cmp
cld
pop
stos
jbe
push
inc
pop
dec
enter
je
in
push
mov
mov
inc
mov
cmp
xchg
mov
add
or
mov
xchg
les
add
or
stos
(bad)
jmp
pop
hlt
sub
les
(bad)
adc
push
es
call
inc
xchg
je
or
movs
xor
es
inc
fstp
push
or
pusha
data16
fist
lea
push
cmp
sbb
or
ret
mov
leave
mov
cmp
jne
pop
dec
xor
rcl
les
jp
lea
repz
lods
out
adc
sub
push
and
jp
cli
dec
enter
xor
sbb
je
fbstp
dec
add
jge
clc
mov
loopne
cmc
jmp
jge
push
ins
xchg
jge
or
jbe
add
js
ret
add
add
inc
pop
mov
jns
lods
popf
cmps
sub
(bad)
cmp
lods
inc
mov
cmp
and
or
sbb
jmp
loop
pusha
repz
push
in
ficom
ds
xor
dec
jne
dec
dec
push
sbb
mov
adc
ins
ret
push
push
cmp
dec
jmp
pusha
test
je
mov
sahf
inc
or
jnp
les
outs
fwait
lock
sbb
push
lods
cld
inc
sbb
(bad)
std
pop
sub
pop
or
push
cmp
cld
push
adc
or
pop
jbe
adc
sar
cwde
sbb
dec
call
movzx
mov
jmp
(bad)
sti
cmp
setg
je
js
mov
push
or
nop
xchg
adc
push
jb
fimul
pop
pop
inc
call
ror
jg
(bad)
cmp
cmp
pop
and
push
or
cs
aam
pop
pushf
inc
sbb
xchg
cmp
fisub
or
es
enter
jecxz
fst
push
sbb
add
pop
xchg
ret
mov
fild
inc
sbb
sbb
fwait
mov
sar
adc
lea
out
add
pop
cmp
cmp
add
jo
adc
adc
adc
aaa
fcomp
jne
ret
sbb
lock
mov
mov
and
mov
dec
dec
mov
adc
inc
dec
mov
jb
jb
sar
fsubr
loope
ins
push
push
sub
mov
xor
mov
mov
and
mov
in
lea
ins
push
retf
retf
jo
sbb
or
push
les
retf
retf
and
push
inc
jo
pop
add
call
push
inc
fwait
in
movs
adc
pushf
popf
sahf
in
in
lahf
add
add
xchg
in
mov
in
jo
jb
in
in
je
jbe
in
in
js
jp
in
in
jl
jle
in
in
pusha
popa
(bad)
out
in
arpl
rcr
fidivr
mov
sbb
xor
mov
sbb
xchg
xchg
and
lock
sbb
lock
nop
lahf
push
test
test
aas
lea
data16
push
lahf
push
cmc
or
xchg
mov
adc
aaa
les
lds
mov
and
ds
inc
jg
mov
xor
(bad)
lods
out
pop
push
push
dec
adc
adc
imul
es
add
sti
and
push
jb
movs
sar
add
je
nop
dec
loopne
xchg
ds
cwde
sbb
outs
aad
push
out
adc
or
add
inc
sub
out
xchg
or
ins
mov
xchg
xor
mov
das
inc
fild
lods
add
call
mov
xor
xor
je
mov
ror
shufps
mov
stos
pusha
mov
jmp
mov
inc
(bad)
and
sbb
mov
int3
jae
loope
push
jl
loope
cmps
stc
int3
pop
icebp
cmps
loop
fs
imul
mov
(bad)
repnz
cmps
jno
sbb
lock
fisttp
(bad)
add
dec
xchg
in
fs
jne
add
or
cmp
mov
(bad)
mov
cmp
xchg
leave
dec
fsubr
fmul
lods
mov
in
int3
sbb
and
dec
mov
jns
mov
cli
movs
jns
js
test
jno
pop
jge
ret
xor
sbb
cmp
shl
dec
push
test
ds
or
mov
jmp
jns
in
call
fcom
adc
ja
jecxz
adc
mov
add
push
cmp
push
push
adc
mov
ud2
cmp
js
jb
pop
add
inc
adc
mov
rcl
and
pop
and
and
and
fdivr
inc
pusha
test
jl
iret
push
cwde
(bad)
cmp
sub
jno
mov
(bad)
test
int
add
loopne
inc
in
mov
imul
in
aas
daa
repz
jnp
pop
push
jbe
pop
xchg
scas
add
cmp
jge
push
xor
sbb
adc
loope
mov
ins
jne
add
in
in
push
push
xor
push
adc
inc
pushf
arpl
push
and
add
repnz
jno
movs
test
test
(bad)
fimul
add
lds
push
adc
push
loopne
cmp
add
fbld
pop
jns
fcomp
fcomp
loop
fsubr
mov
or
and
inc
xchg
icebp
(bad)
shl
sbb
mov
jmp
inc
ror
in
mov
pusha
dec
stc
rcl
sar
test
fcomp
pop
scas
imul
je
pop
adc
xor
lahf
sbb
mov
adc
clc
daa
fmul
je
adc
mov
in
push
pop
jg
fucompp
add
jno
aam
shr
xor
lea
das
sbb
call
lea
fcom
or
shr
ins
jecxz
push
jnp
xor
adc
add
dec
fcmovb
add
ret
push
xchg
or
mov
mul
push
fstp
inc
add
imul
mov
out
aaa
icebp
sbb
mov
int3
dec
fstp
sbb
push
sbb
or
jmp
adc
jmp
xchg
outs
mov
dec
cmp
cmp
dec
sbb
sti
mov
(bad)
adc
pop
aad
or
ror
inc
and
clc
call
mov
xor
test
jne
and
jmp
cs
dec
xor
cmp
jle
or
push
or
retf
test
pop
sub
popa
clc
pusha
pop
jae
inc
mov
and
cdq
rcr
or
mov
jae
sbb
int
lock
lods
add
cmps
push
or
jle
sub
inc
(bad)
dec
add
pop
mov
add
jl
cmp
add
or
pushf
push
outs
jg
retf
je
mov
dec
and
sbb
int3
mov
add
enter
fbstp
loop
mov
add
out
inc
and
cmc
pop
adc
pop
gs
sbb
sbb
mov
cmp
cmp
xor
sub
cmps
adc
push
jnp
ja
(bad)
sbb
jg
fcom
stos
mov
push
fistp
cld
xor
inc
push
or
sbb
pop
sbb
inc
cld
mov
cmp
mov
bndstx
les
imul
mov
test
add
ss
jmp
push
xor
test
jp
dec
ja
jg
or
rol
add
add
adc
addr16
mov
mov
mov
cmp
add
mov
xchg
pop
push
lar
ins
dec
mov
sbb
add
fisttp
leave
mov
add
add
adc
imul
mov
sub
xor
es
add
push
ja
mov
fs
ds
mov
push
push
adc
nop
adc
ja
cmp
ja
jb
add
xchg
out
test
call
(bad)
out
mov
jno
mov
mov
or
xchg
and
hlt
dec
jne
push
rcl
pop
call
daa
aas
mov
mov
cmp
ss
xor
rcr
bound
es
dec
sbb
xor
ja
in
lea
outs
in
jno
inc
pop
addr16
jbe
add
add
frstor
pop
xchg
mov
or
hlt
mov
lock
imul
mov
jge
ret
outs
shr
mov
jne
sbb
out
out
(bad)
sbb
xchg
outs
sub
and
mov
in
lahf
or
sub
pop
das
and
clc
fadd
leave
dec
add
adc
fimul
sub
mov
xor
push
mov
pop
push
out
jmp
push
mov
cmp
sbb
loopne
sbb
jo
xor
sbb
dec
or
push
(bad)
mov
mov
je
in
add
xchg
push
fisttp
std
mov
pop
adc
ret
popa
inc
in
rcl
in
mov
ds
xchg
(bad)
fcomp
inc
mov
ss
add
xchg
cmp
mov
out
aam
loopne
adc
loopne
loopne
xor
cmp
enter
xor
mov
jl
sbb
adc
mov
jle
or
mov
cmps
sbb
les
mov
cmp
pop
sbb
xlat
or
cld
test
mov
mov
or
lods
cmp
or
pop
or
mov
enter
hlt
outs
adc
mov
rcr
fist
and
loope
mov
or
rcr
out
push
clc
xchg
xchg
ja
sub
sbb
add
nop
push
xchg
loopne
iret
push
iret
(bad)
push
bound
push
mov
mov
dec
mov
(bad)
jge
push
xchg
dec
adc
lea
shrd
inc
mov
adc
push
push
and
push
adc
bound
inc
enter
and
neg
cmps
aad
mov
loopne
pop
cld
add
aam
rcl
and
xor
inc
ds
sub
jmp
pop
loopne
jmp
mul
cld
retf
or
pusha
pop
in
or
xchg
push
pop
loope
adc
mov
mov
pop
ret
call
add
or
lea
mov
pop
popf
mov
lea
pop
jl
add
mov
sbb
dec
mov
jnp
pop
push
(bad)
jne
jae
or
adc
add
daa
pop
outs
jmp
cs
cmp
adc
xor
adc
pop
arpl
xchg
loopne
pop
add
push
repnz
imul
sbb
pop
pop
or
push
leave
ret
mov
arpl
sysret
mov
mov
out
sahf
movs
loopne
push
or
rcl
or
(bad)
fdivr
neg
loope
cmc
push
add
aas
cmp
rcl
sub
mov
add
jge
jns
mov
test
retf
sbb
mov
or
je
in
data16
xor
fild
in
scas
and
fcomp
popa
leave
pop
cmps
mov
lahf
fadd
fst
pop
lods
inc
push
lahf
scas
imul
pusha
ins
ret
jmp
jg
aad
sbb
cli
cmp
jne
stos
or
inc
push
push
test
xchg
in
ret
adc
cmp
imul
sub
pop
int3
cmp
cmovg
ja
repz
neg
dec
push
pop
push
(bad)
in
clc
fcmovnu
sbb
call
cmps
leave
fst
(bad)
adc
add
adc
xor
fistp
ins
fmul
xchg
mov
xchg
call
in
jmp
lock
sub
add
sahf
out
lahf
test
dec
pusha
rol
ja
loope
jle
loope
div
sub
frstor
sub
data16
push
fistp
popf
retf
sub
xor
repz
nop
mul
not
jmp
or
cmp
mov
jecxz
imul
lahf
pop
(bad)
call
push
jge
jg
jle
pop
pop
add
jle
fild
sbb
adc
mov
sbb
ror
and
loopne
ret
adc
mov
cmp
enter
fcomp
add
xor
ins
imul
dec
or
push
cmp
daa
jmp
or
pop
loope
ja
scas
mov
ret
lods
stc
and
lds
test
add
pop
mov
loopne
inc
mov
loopne
sub
add
cmp
popa
inc
daa
and
mov
or
mov
sbb
add
adc
jb
mov
add
scas
pop
repnz
(bad)
jmp
pop
inc
jo
push
or
dec
push
dec
push
dec
pop
push
dec
movs
imul
add
fild
xchg
inc
prefetchw
ins
popa
jae
inc
popf
rol
adc
add
pop
inc
push
inc
xor
enter
out
or
gs
imul
inc
mov
pop
push
pop
dec
mov
inc
gs
ins
les
push
add
(bad)
cmp
ss
adc
gs
outs
xor
dec
mov
jne
xor
jae
sbb
into
adc
inc
ja
mov
outs
inc
push
sub
or
or
pop
cwde
dec
jmp
pop
inc
inc
push
pusha
loope
pop
jp
and
inc
ss
and
cld
pop
jle
push
pop
fs
imul
enter
cld
pop
or
or
mov
cmp
call
or
jecxz
adc
sbb
fldln2
lods
mov
arpl
jmp
or
jg
adc
adc
add
fstp
outs
or
dec
mov
sbb
mov
xor
pop
arpl
adc
adc
mov
aaa
and
jg
dec
sbb
scas
xor
sub
(bad)
adc
adc
adc
inc
push
ja
ins
(bad)
fisttp
shr
inc
cmp
in
rcr
fcomip
nop
mov
jg
es
popa
aas
fwait
call
or
jnp
mov
stos
pop
movs
add
xchg
push
cmps
mov
nop
adc
xchg
xchg
xchg
adc
add
leave
enter
mov
leave
leave
lock
call
leave
loopne
fadd
daa
daa
mov
(bad)
cmp
mov
sub
sub
test
adc
add
sahf
mov
loopne
cli
pop
imul
fwait
or
xchg
cmpxchg
aaa
cmc
push
and
fs
cld
dec
jg
ror
inc
ins
imul
dec
pop
mov
or
or
lods
mov
cwde
imul
push
sbb
pop
pop
add
xchg
ret
jae
push
xchg
add
icebp
mov
push
inc
imul
gs
jl
fs
mov
fidivr
sbb
adc
add
imul
and
ins
jns
js
rcl
fwait
repnz
push
in
ss
push
sub
push
mov
inc
out
ins
or
jmp
push
dec
imul
jno
push
or
and
(bad)
pop
rol
pop
cs
push
dec
sbb
mov
and
gs
add
add
rcl
js
out
aaa
pop
jmp
or
dec
gs
outs
fdiv
jb
jae
mov
inc
mov
inc
jne
sbb
sbb
enter
push
fcom
pop
sbb
or
push
sub
enter
jmp
out
add
ds
add
lahf
or
inc
pop
mov
pusha
mov
mov
push
rcl
lock
daa
fmul
add
adc
mov
clc
clc
dec
add
leave
mov
mov
mov
mov
or
outs
mov
sub
ins
shr
jle
or
add
cmps
push
leave
movhps
or
mov
pop
scas
pop
add
enter
imul
jmp
fiadd
mov
or
mov
xor
and
mov
out
mov
sbb
into
dec
scas
iret
sbb
pop
mov
scas
les
xchg
pushf
xor
push
ds
sub
pop
push
rcr
clc
jge
pop
jl
dec
js
jb
cmovne
xchg
add
xchg
push
mov
push
xchg
jl
or
mov
sub
push
stc
cwde
nop
jb
or
push
xor
mov
das
adc
leave
sbb
fiadd
jle
mov
movs
adc
mov
dec
mov
xor
and
lahf
lock
sar
pushf
inc
or
mov
sbb
sbb
push
(bad)
out
(bad)
jo
dec
mov
mov
xor
ror
ret
adc
xchg
mov
and
jmp
(bad)
fs
mov
cmp
fld
xor
pop
das
ins
pop
dec
aaa
adc
fmul
pcmpeqb
lahf
push
cmp
xchg
js
(bad)
cmp
aaa
add
adc
iret
repz
inc
dec
push
repz
repz
gs
jne
iret
repz
test
popa
test
cmp
mov
mov
mov
pop
jbe
add
adc
mov
or
mov
cmp
push
push
sub
test
mov
ret
xor
outs
mov
push
or
push
push
rep
jecxz
add
pop
dec
cwde
dec
push
mov
jg
cmp
(bad)
jl
adc
dec
mov
outs
js
mov
out
shl
or
jo
xor
pop
mov
mov
out
idiv
aas
in
adc
int3
int3
mov
test
cs
test
sbb
(bad)
xchg
add
mov
xchg
and
mov
add
aas
xchg
sbb
mov
push
push
pop
add
and
mov
out
xor
and
cmp
pop
adc
and
addr16
add
sbb
push
mov
(bad)
mov
adc
push
outs
sub
fistp
xchg
sbb
cmp
push
inc
outs
ins
mov
dec
ds
jbe
and
imul
aam
or
fsub
aaa
push
sbb
push
cmp
ss
dec
push
push
dec
pusha
adc
mov
lock
cmp
push
std
(bad)
cld
(bad)
sti
xor
mov
mov
sub
or
and
mov
cmps
or
xlat
pop
test
mov
sbb
or
adc
sub
int3
adc
dec
lods
sbb
inc
xor
or
jns
pop
loope
jbe
and
cmovns
jo
push
das
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
out
sbb
push
(bad)
hlt
sub
(bad)
lock
adc
pop
push
push
adc
xor
pop
nop
pop
mov
in
js
imul
push
imul
fisubr
jo
jbe
push
rcr
test
jge
pop
mov
inc
addr16
jge
mov
rol
push
lock
popa
loopne
fsubr
lock
mov
aaa
sbb
push
and
sbb
inc
and
xor
neg
out
pop
mov
(bad)
movs
aas
pop
sahf
mov
xor
push
jbe
dec
and
jno
jne
in
or
lahf
cld
sbb
jbe
pop
js
rcr
jns
push
jp
jnp
jb
out
dec
ss
jb
jle
xor
sahf
dec
jb
jbe
ja
ja
out
mov
adc
inc
sbb
sar
jp
aas
mov
pusha
and
adc
ja
dec
push
loop
adc
adc
icebp
mov
add
call
fstp
xor
pusha
jl
jge
popa
push
aas
hlt
push
pop
push
ja
das
sbb
cmp
(bad)
push
adc
xchg
or
xchg
jo
dec
jnp
mov
loopne
sahf
or
imul
lods
push
or
xchg
pushf
dec
stos
mov
out
or
add
dec
adc
fiadd
in
xor
ds
xor
inc
movs
mov
repnz
push
leave
shl
fdivp
test
repnz
test
sub
xlat
repz
xor
and
push
pop
daa
bound
data16
or
not
xchg
push
mov
into
mov
or
call
sbb
loopne
inc
je
xor
push
dec
inc
fs
out
(bad)
in
nop
add
fmul
sbb
cmp
sbb
cmp
es
nop
sub
mov
in
in
int3
adc
out
mov
jmp
shl
add
das
cmp
dec
pop
pop
sbb
mov
dec
js
in
call
sbb
and
dec
not
int
stc
mov
push
mov
xchg
add
sub
cmp
fs
push
addr16
push
sbb
je
jbe
add
or
lahf
rcl
js
xchg
push
pusha
lods
imul
xor
dec
sbb
push
xor
and
push
and
add
(bad)
call
mov
xchg
pop
inc
(bad)
int
dec
add
lock
pop
jo
aas
cmp
mov
jp
aas
mov
dec
hlt
mov
imul
aam
repz
mov
fisttp
pop
dec
ss
inc
push
mov
loopne
pusha
xchg
push
movs
jge
int
sub
mov
inc
aad
push
push
ror
jo
fs
pop
xchg
addr16
dec
js
mov
pop
scas
test
rol
sar
mov
pushf
xor
imul
ror
jae
mul
add
push
jp
mov
cmps
aas
xchg
mov
jmp
outs
fs
js
add
dec
sbb
ds
add
stos
mov
jmp
loopne
pop
or
xchg
in
pop
int
jbe
sbb
cdq
(bad)
test
test
and
adc
enter
or
arpl
inc
inc
add
scas
dec
sbb
jno
cmps
jecxz
mov
mov
inc
push
fsubr
nop
idiv
test
pusha
inc
mov
aam
pusha
int3
aad
iret
repz
or
push
in
int
add
imul
xor
add
fidiv
sub
sub
rcr
push
add
sub
pop
add
fs
xor
in
xchg
cli
inc
cmp
inc
xchg
ins
mov
xchg
out
push
hlt
hlt
cmc
push
int3
repz
mov
div
push
xor
in
cmp
inc
jae
cmp
sbb
adc
add
(bad)
stc
(bad)
clc
push
push
push
push
push
push
cmp
icebp
push
call
scas
and
cmp
or
jae
sahf
nop
push
mov
add
idiv
push
push
cld
hlt
push
push
or
nop
xlat
pop
and
cmp
push
ret
sub
xlat
or
call
(bad)
inc
pop
mov
or
pop
imul
test
push
popa
xor
hlt
cmps
and
cmps
inc
ds
sub
push
pop
or
xchg
cld
sti
push
repz
cmps
sbb
mov
lods
es
pop
cmp
and
outs
push
arpl
pop
repnz
dec
imul
pop
and
fsubrp
ss
push
mov
push
jb
std
cmp
inc
sahf
out
sti
pop
push
js
mov
cmp
dec
pusha
or
sub
mov
and
sbb
out
xchg
mov
sbb
or
or
inc
scas
push
lahf
pmulhuw
pop
daa
data16
inc
les
enter
push
les
call
pop
xchg
sbb
nop
add
push
or
xchg
and
gs
pop
and
push
inc
sahf
(bad)
push
push
xor
dec
ins
fs
dec
jb
les
mov
push
inc
test
dec
outs
dec
stc
inc
sahf
cs
dec
dec
add
or
xor
cmp
out
nop
fimul
or
or
push
jns
push
or
add
add
fbld
push
push
dec
das
fdiv
sub
je
cmps
sub
push
fs
retf
sub
push
dec
lea
mov
iret
inc
in
mov
sub
push
pop
or
push
retf
pop
nop
int3
push
push
shl
adc
jbe
ins
sbb
addr16
out
jo
and
scas
push
rol
push
in
sbb
xchg
fwait
sub
xchg
add
es
sub
add
xchg
enter
jl
mov
dec
add
adc
scas
and
sub
inc
das
inc
pop
or
ret
shld
push
cmps
pusha
movs
hlt
add
mov
into
mov
clc
mov
dec
dec
out
xchg
out
cmps
xor
xor
call
adc
xchg
es
jne
sahf
dec
movntps
fwait
sbb
and
sub
stos
inc
jne
mov
repnz
jb
ror
inc
add
pop
jbe
inc
or
hlt
push
sbb
cs
sub
jmp
or
push
jb
push
xor
mov
cmp
sbb
jmp
fld
fsubr
cmp
movs
and
sub
lock
mov
inc
inc
sahf
and
in
xchg
xor
rol
push
or
and
mov
inc
ror
mov
push
test
pop
jne
xor
daa
mov
push
shl
fcmovnbe
adc
push
xor
cdq
(bad)
mov
fmulp
test
lea
test
adc
outs
dec
mov
mov
pop
addr16
push
sbb
jne
push
imul
mov
push
xor
pop
sbb
movs
popa
pop
pop
scas
bts
push
pop
xor
cmps
mov
out
push
adc
fbstp
add
daa
push
sti
hlt
or
test
xchg
scas
in
or
adc
in
jecxz
mov
inc
mov
mov
mov
and
dec
adc
xor
lock
hlt
add
(bad)
in
mov
and
clc
jb
inc
adc
iret
xchg
stos
dec
push
(bad)
stc
pushf
or
xor
or
push
jl
rcl
or
test
adc
cli
hlt
mov
add
shr
pop
shr
loope
sbb
pop
sbb
sar
xlat
jmp
add
jo
pop
loope
addr16
or
rcl
sub
ror
or
rol
inc
sub
or
mov
mov
jae
or
xlat
mov
ss
pop
outs
mov
wrmsr
scas
add
addr16
jg
add
jmp
dec
add
pop
pop
push
sub
nop
pop
(bad)
adc
pop
adc
cmps
and
mov
and
sub
dec
push
add
fsub
jb
leave
cmp
ins
lock
jnp
push
sbb
sub
jmp
pop
ret
inc
aaa
jl
dec
jb
imul
jmp
pop
inc
ds
pop
in
xchg
loopne
loopne
je
call
mov
ficom
xor
mov
lock
aad
mov
adc
add
loopne
dec
fwait
xchg
inc
stos
loop
fmul
and
add
(bad)
push
arpl
lock
sbb
movs
aaa
aad
mov
pop
pop
(bad)
pop
imul
sbb
fidiv
dec
leave
dec
pop
lock
sbb
stos
add
adc
mov
jl
pop
jno
pop
pop
enter
push
dec
imul
mov
xchg
jo
or
pop
add
mov
adc
pushf
fisub
sub
or
jmp
pop
adc
xchg
inc
xor
xor
hlt
icebp
jne
lock
xchg
imul
pop
pusha
dec
mov
cs
fldcw
or
test
push
xchg
mov
test
inc
ins
mov
inc
nop
mov
adc
sbb
sub
mov
pusha
inc
(bad)
push
ret
std
je
cmp
mov
daa
in
int3
out
sub
lods
enter
sub
inc
or
loopne
mov
(bad)
cmp
xchg
xor
push
xor
sub
retf
shl
xor
sbb
clc
jmp
inc
sbb
sbb
fisttp
neg
jb
or
add
hlt
or
pop
mov
int
dec
mov
mov
add
les
out
in
push
ror
sub
xchg
lahf
pop
and
add
xchg
sbb
inc
outs
test
in
clc
scas
push
mov
inc
aaa
test
dec
push
mov
adc
imul
nop
cmp
cs
cmp
push
adc
push
ds
(bad)
pop
mov
inc
mov
add
inc
cmps
cmps
test
add
mov
pop
or
or
pusha
test
sahf
(bad)
add
mov
popf
loopne
mov
ja
test
cmp
es
mov
lock
stos
or
pop
neg
inc
adc
push
in
shr
ja
cmps
sbb
icebp
and
dec
pop
adc
sbb
or
xchg
sbb
and
jo
mov
in
pusha
dec
dec
pop
movs
hlt
movs
rol
push
rol
rcl
ret
pop
add
ins
adc
push
call
add
cmp
mov
dec
ins
push
jge
push
retf
sub
mov
xchg
cmp
mov
inc
cmp
ja
daa
xor
daa
jmp
push
or
jmp
inc
sub
aaa
sub
ret
out
popa
dec
aaa
dec
les
sbb
add
rcr
mov
cmps
sub
jge
push
mov
sbb
mov
sbb
fsubr
setg
pop
pop
pop
inc
imul
arpl
jne
aas
cmp
xor
xor
int
mov
push
sub
inc
std
jns
call
push
jge
je
test
adc
cmps
mov
dec
xor
push
cmp
mov
fadd
and
sbb
inc
sub
nop
mov
ror
dec
sbb
inc
pop
scas
mov
mov
rcr
sub
sub
das
pop
lea
test
push
mov
test
movs
adc
pushf
cld
and
call
ror
and
or
or
sbb
dec
aaa
idiv
jecxz
retf
xchg
lahf
popa
aad
shl
inc
mov
cmp
sub
jns
je
jl
mov
je
jp
ss
rcl
dec
aaa
pop
leave
xchg
addr16
push
popa
pop
jecxz
add
test
ror
xchg
cmp
mov
or
pop
inc
xor
dec
dec
and
addr16
out
or
shl
jno
fisubr
jg
sbb
and
adc
jnp
call
div
add
in
inc
mov
mov
sbb
push
loopne
loop
(bad)
push
aas
add
push
sbb
shr
ins
and
adc
test
mov
jg
sbb
jnp
mov
sbb
mov
out
xchg
popf
sub
mov
jmp
sub
push
(bad)
or
scas
add
adc
inc
clc
adc
mov
jo
bnd
mov
xor
xor
ins
ins
adc
popf
ss
aaa
mov
or
pop
call
and
adc
pop
push
and
adc
adc
jbe
or
jo
jne
cmp
retf
push
xchg
xchg
dec
push
xor
ja
mov
imul
outs
outs
sahf
or
mov
push
(bad)
add
xor
iret
sbb
adc
xchg
jns
inc
jmp
inc
not
xor
aas
add
or
add
adc
sub
or
out
(bad)
jl
call
adc
mov
jo
dec
lods
fild
fs
sub
push
(bad)
jg
cmp
dec
or
sub
sub
enter
(bad)
nop
pop
je
or
and
ror
inc
ins
adc
xor
and
in
push
mov
test
push
in
and
add
dec
mov
cmp
sbb
movs
adc
jp
mov
cmp
in
mov
cmp
movs
and
sbb
imul
sbb
jo
cmc
push
jmp
adc
out
aam
mov
cmps
aaa
clc
cmp
ret
shl
adc
mov
inc
jle
or
add
aaa
pop
(bad)
fnstenv
in
jmp
cmp
jle
clc
pop
mov
lods
adc
mov
add
cmps
push
xlat
mov
jge
jne
adc
mov
aaa
and
loopne
push
dec
dec
add
fs
popf
cmps
scas
call
cwde
xchg
stos
xor
ja
hlt
stos
pop
shl
hlt
inc
iret
adc
pusha
add
add
ret
push
add
je
adc
cmp
cmp
push
and
or
adc
xchg
lock
mov
adc
je
ss
sub
arpl
cmp
and
ins
lods
das
icebp
push
iret
jbe
sbb
or
or
pop
mov
push
dec
or
sbb
dec
jne
jns
fwait
and
aaa
mov
fbld
call
test
popf
test
xchg
retf
and
int
or
aad
cld
sub
add
ins
cmp
ss
jg
dec
push
lock
adc
or
div
das
loopne
ja
adc
call
mov
xchg
mov
pop
call
or
sub
jg
inc
push
inc
inc
jg
gs
add
sbb
and
pop
ret
outs
jle
xor
jge
icebp
stos
popa
cmp
in
xor
push
jg
hlt
jl
sbb
adc
addr16
and
sbb
jo
or
cmps
lahf
das
or
scas
mov
mov
test
cmps
pop
sbb
add
jmp
mov
lsl
and
inc
add
push
(bad)
shl
in
ret
repz
fadd
call
pop
dec
cmps
call
or
cmp
jecxz
xor
pop
enter
js
pushf
imul
call
mov
xor
fdiv
aam
jmp
call
adc
sbb
mov
mov
inc
std
or
and
jl
cmc
loope
push
xor
xor
gs
mov
je
pusha
or
push
in
add
dec
or
pop
push
in
mov
xchg
inc
jb
dec
sub
ret
and
ror
and
and
cmp
cmp
push
push
adc
paddsb
push
adc
add
xchg
std
lea
leave
fcmovb
inc
and
push
sub
pop
add
sub
pop
sbb
add
mov
in
pushf
fadd
push
pop
in
cdq
inc
adc
ret
js
mov
mov
adc
mov
cwde
std
jbe
pop
push
add
adc
cmp
xor
add
jmp
lahf
ror
mov
and
inc
xor
icebp
sbb
sub
inc
pop
out
lods
test
ret
xor
mov
and
mov
int3
test
or
add
jae
ret
jl
hlt
pop
dec
inc
hlt
fsubr
clc
aad
es
js
pop
inc
add
inc
mov
cs
out
fsubr
shl
xchg
mov
ja
xchg
test
adc
or
mov
cmp
sbb
mov
pop
inc
cmp
mov
and
xor
pop
pop
mov
dec
sub
lock
xchg
inc
lds
nop
arpl
movs
mov
adc
push
in
scas
pop
inc
or
xor
jb
inc
lock
fdivp
sub
inc
mov
xor
outs
fdivr
mov
(bad)
lock
sti
loope
mov
push
jne
dec
dec
sbb
test
and
das
test
push
enter
mov
mov
dec
inc
shr
or
dec
scas
adc
and
push
mov
popf
iret
jno
cli
push
lods
idiv
push
lods
nop
iret
or
dec
jno
adc
add
and
scas
imul
or
ret
mov
pusha
dec
imul
mov
push
pop
scas
or
inc
(bad)
jno
or
cmp
nop
cmps
or
gs
js
mov
add
pop
add
mov
mov
lahf
cmp
je
test
cmp
dec
dec
inc
or
pop
sar
js
inc
stos
test
and
adc
sbb
je
fcos
fistp
and
arpl
in
add
sbb
inc
loopne
pop
loop
jnp
jae
mov
in
sbb
sub
add
sub
jle
push
add
cmovs
leave
je
adc
dec
mov
push
cmp
ret
or
push
inc
int
jmp
mov
push
jae
mov
push
xchg
cwde
add
sbb
add
dec
xor
sub
pop
and
fs
or
je
add
(bad)
pop
cmp
jb
mov
add
mov
clc
jl
test
(bad)
push
pop
add
shr
mov
in
and
aaa
pop
mov
dec
adc
cmp
(bad)
pop
ins
and
adc
inc
cmp
and
pop
in
dec
xor
test
imul
inc
daa
pop
int
pop
nop
mov
cmp
jb
in
pop
stos
fsubr
dec
pop
mov
(bad)
mov
jns
bound
add
aam
cdq
test
cmps
cwde
aam
outs
imul
in
mov
and
and
add
dec
add
mov
mov
xor
sub
pop
lods
and
sub
push
(bad)
xor
or
mov
jp
or
push
jecxz
dec
leave
push
fs
aas
fcomip
mov
push
push
and
inc
mov
inc
push
mov
loopne
pop
lea
push
adc
add
jb
xchg
and
and
and
bound
pop
pop
or
pop
adc
mov
leave
pop
add
add
add
push
outs
xchg
mov
jmp
mov
(bad)
pop
dec
add
xor
dec
rcr
mov
loopne
(bad)
test
je
jnp
push
jb
pop
pop
sub
sub
test
js
adc
fwait
jecxz
pusha
test
jmp
(bad)
fcomp
cdq
cld
jmp
mov
add
sbb
or
add
xor
dec
add
cmp
jns
call
jo
mov
jmp
push
sub
cmp
addr16
mov
xor
shr
ds
test
(bad)
popf
mov
mov
fcomip
sub
nop
stos
mov
clc
(bad)
movs
xlat
cs
pop
in
dec
scas
enter
adc
add
push
or
in
push
sbb
pop
ret
mov
std
xor
add
fmul
in
push
xlat
xchg
in
jle
in
arpl
sbb
jae
and
movs
jne
(bad)
mov
sub
mov
dec
shl
adc
dec
inc
xor
inc
sbb
and
inc
movs
mov
jne
ret
bound
sub
add
(bad)
fucomip
ins
mov
inc
sub
jmp
rcr
jnp
rcl
mov
lods
ss
add
test
enter
call
std
or
in
dec
or
xchg
fsub
inc
jae
xchg
jne
and
sub
pusha
leave
fcom
xchg
cmps
and
xchg
xor
adc
push
inc
sbb
jmp
outs
faddp
jmp
dec
jae
mov
fs
or
popf
inc
xor
or
pop
add
push
xchg
jge
js
inc
dec
mov
inc
sbb
shl
mov
jg
dec
test
and
ds
or
lods
mov
clc
push
aaa
or
lahf
or
(bad)
aaa
pop
test
jno
repnz
das
and
bound
add
stos
add
lods
add
cmps
out
lock
push
cmc
adc
and
lock
lea
xchg
push
or
push
(bad)
and
stc
push
mov
int
inc
test
jl
xor
gs
or
cmp
cmps
dec
rol
cmp
test
add
adc
pop
in
leave
inc
xchg
idiv
data16
mov
ficom
add
pop
xchg
pop
inc
stos
jno
add
mov
cli
push
sub
int
mov
pop
jbe
and
jne
das
callw
outs
add
mov
mov
sub
add
pop
mov
inc
add
cld
lock
sbb
xchg
ja
push
sub
aad
add
xor
pop
fs
cmp
pop
loope
test
jmp
pop
or
and
test
adc
sub
or
inc
stos
(bad)
push
lock
mov
pop
pop
sti
xor
jmp
aaa
sub
call
sar
mov
mul
pop
jg
fadd
or
jmp
ror
xchg
aaa
repz
adc
inc
jecxz
adc
test
inc
xchg
jbe
pop
pop
mov
and
xor
adc
mov
out
retf
pusha
lods
xor
stos
iret
cmc
cmp
arpl
sub
and
iret
ss
dec
xchg
test
fiadd
sbb
shr
fs
sbb
jo
inc
xchg
cmp
push
mov
(bad)
or
sbb
sbb
pop
xor
jecxz
inc
pop
rol
add
mov
call
pop
sub
jbe
xlat
pusha
add
jnp
pop
push
mov
test
jb
pop
pop
pop
push
push
inc
xor
inc
jno
inc
call
dec
js
addr16
ds
das
mov
lds
es
sbb
push
sbb
div
pop
in
icebp
adc
(bad)
shl
xor
jmp
push
movs
js
aaa
cmps
lahf
pusha
mov
xchg
jmp
cmp
loopne
adc
pop
push
dec
push
pop
test
imul
scas
pop
inc
ret
and
add
or
or
pop
cmovnp
adc
loop
sub
push
jae
pop
inc
stos
mov
cmps
clc
jne
in
and
ss
mov
push
cmp
fist
xchg
inc
push
repz
in
inc
mov
pop
loopne
adc
jp
jg
add
sar
pop
xchg
dec
and
pop
test
das
fwait
mov
stos
inc
fs
jae
sub
ret
stos
inc
clc
mov
adc
push
stc
push
(bad)
and
(bad)
ins
stos
mov
dec
in
dec
push
test
and
dec
pusha
or
retf
pusha
ss
adc
movs
push
adc
xor
inc
hlt
shl
jae
xchg
in
inc
leave
xchg
pop
inc
or
add
daa
dec
add
mov
dec
dec
je
add
adc
les
jns
in
pusha
push
adc
pop
pop
xchg
mov
mov
lock
mov
inc
jno
cmc
bound
lea
call
adc
sahf
xor
or
fmul
or
mov
dec
icebp
and
aam
inc
jmp
mov
aas
cmp
fsub
(bad)
fsub
loop
sbb
xor
jge
in
mov
sar
jle
lods
lock
mov
mov
inc
bound
or
adc
pop
pop
adc
and
xchg
sub
movs
inc
mov
sub
add
sub
gs
cwde
call
in
cwde
sbb
jg
ror
les
mov
mov
stos
in
test
xor
leave
adc
inc
popa
inc
cld
sub
and
xchg
or
(bad)
add
jns
or
lock
add
inc
mov
hlt
aad
stos
mov
xor
in
jmp
cmp
or
push
shl
out
(bad)
cmps
aam
mov
sub
mov
loopne
inc
inc
cmp
call
test
jo
cwde
pop
fcom
out
add
fadd
hlt
popa
fdiv
sbb
adc
lea
in
fcmovnbe
shr
pop
loopne
jmp
or
loopne
mov
mov
sub
fmul
ret
add
mov
and
inc
add
jo
and
ds
pop
xor
adc
sar
in
or
xor
push
push
add
adc
push
sub
cmp
push
shl
pop
and
stos
loop
push
les
cmp
lods
ds
aad
pop
mov
sub
xchg
pop
das
outs
call
and
stos
add
daa
loop
(bad)
popa
add
mov
cmovae
and
and
sub
and
cmp
pop
push
movs
xchg
xor
arpl
aaa
inc
daa
mov
das
dec
inc
stos
lock
or
adc
daa
pop
push
test
adc
push
(bad)
jno
pop
punpckhbw
sbb
adc
adc
mov
cmp
aaa
xchg
lock
push
in
push
mov
test
js
bound
push
pop
aad
aas
loope
add
sub
dec
mov
enter
mov
xchg
(bad)
rcr
imul
xor
push
inc
sbb
call
adc
imul
pop
(bad)
dec
cmp
int3
pop
lds
pusha
or
push
push
repnz
dec
xchg
mov
add
mov
add
cmp
or
fdivrp
pushw
jo
mov
mov
mov
sbb
add
or
and
push
ret
(bad)
pop
inc
imul
add
inc
dec
xor
lss
sbb
jge
cmp
and
jo
pop
ins
sbb
stos
mov
test
pusha
pop
and
or
mov
push
scas
in
inc
sub
adc
jb
pusha
push
xlat
daa
ins
dec
aad
push
lds
and
ret
mov
mov
ins
sub
jmp
dec
rcr
aaa
ret
pop
jmp
lds
and
jbe
inc
xchg
mov
pusha
mov
add
leave
fstp
out
in
rep
cmp
jne
push
xchg
mov
or
adc
adc
(bad)
test
mov
aas
mov
aad
lds
jo
ror
shl
mov
jo
xchg
loope
sbb
in
out
push
pop
pop
pop
xor
addr16
in
popa
shl
fsubr
test
and
movs
pop
arpl
and
test
mov
mov
or
jl
fild
(bad)
nop
cmp
outs
mov
sub
aas
(bad)
ja
sub
jb
ss
cdq
adc
push
add
adc
ds
movs
cdq
enter
xchg
or
and
daa
sbb
adc
adc
adc
test
lds
test
mov
call
outs
mov
scas
test
sub
into
lds
sub
test
wbinvd
enter
xor
lea
adc
pop
in
pop
out
push
or
add
mov
mov
pop
and
xor
outs
jb
jns
add
hlt
pop
sbb
pop
add
inc
add
and
or
and
inc
inc
test
cmp
in
cmp
pop
aad
and
(bad)
pop
add
adc
and
sub
mov
dec
sub
pop
shl
shr
dec
jmp
xor
dec
push
jno
dec
mov
inc
imul
add
or
inc
mov
inc
mov
ret
lods
cmp
sbb
mov
and
and
add
ins
add
inc
dec
popa
push
fidivr
or
jno
adc
sub
call
and
pusha
outs
loope
pop
mov
cmp
push
sub
movs
mov
or
test
(bad)
fnstenv
mov
(bad)
or
mov
and
repz
mov
bound
xchg
in
inc
rol
imul
lods
loopne
clc
call
imul
inc
xor
add
(bad)
aas
fs
aaa
nop
xchg
add
sbb
xchg
mov
push
fdivr
(bad)
add
pop
add
jl
rcr
adc
cmp
test
and
nop
int
std
jge
ret
push
mov
pop
cmp
shr
push
in
inc
pop
or
call
add
mov
dec
or
and
test
out
dec
pop
push
adc
push
xor
add
retf
mov
movs
jmp
adc
pop
sub
call
outs
or
repz
jp
pop
arpl
lods
ins
adc
aaa
sub
xor
mov
ss
stos
inc
add
and
sbb
add
add
pop
stos
pop
leave
adc
test
jle
shl
inc
movs
sub
dec
or
out
add
je
in
add
bound
popa
jle
ror
fwait
push
or
or
(bad)
jp
cmc
pop
adc
sbb
data16
sahf
cmps
test
ror
jns
cmps
retf
sahf
dec
enter
push
adc
mov
push
in
mov
xchg
cmps
push
test
(bad)
popa
add
test
xchg
hlt
sbb
(bad)
mov
inc
sbb
xchg
call
popa
xor
(bad)
stc
or
ins
das
cld
int
ds
pop
outs
sub
xor
outs
add
into
fwait
cwde
mov
in
jne
pop
push
retf
pop
repnz
cdq
imul
and
or
adc
mov
sbb
inc
sbb
sbb
or
or
dec
sbb
sbb
xchg
outs
pop
or
add
jo
push
cld
xchg
mov
daa
aas
stos
mov
pop
popf
lock
sar
popa
loop
dec
xchg
or
pop
pop
add
mov
pusha
ret
xor
dec
into
stos
aad
xchg
lds
mov
push
xor
cmp
push
je
jge
inc
mov
nop
bound
add
aam
dec
mov
daa
adc
mov
mov
dec
lods
jbe
adc
call
add
add
dec
ror
dec
pop
test
out
call
jmp
jge
jae
and
jge
adc
adc
or
mov
pop
mov
add
sbb
jmp
jo
js
add
dec
push
jbe
loopne
push
lock
fcomp
dec
dec
dec
inc
cmp
xchg
adc
sbb
sbb
jle
push
fdivr
add
xor
and
popf
xor
lock
mov
jo
in
call
psubsb
(bad)
xor
jo
repnz
in
fld
sbb
ret
dec
imul
sti
cdq
arpl
mov
cmp
sub
das
push
rol
pop
ss
sbb
retf
mov
dec
dec
sbb
das
adc
xchg
cli
xchg
gs
pop
push
sbb
out
mov
enter
in
ins
ret
push
shl
ret
movs
data16
sbb
ror
outs
nop
xchg
in
jne
inc
xor
inc
sbb
sbb
or
jge
mov
lods
add
lods
popa
pop
sub
pop
ins
cld
sbb
add
loopne
inc
cdq
sub
jl
sbb
stc
int3
sbb
lea
ss
lahf
xor
repnz
jmp
inc
repnz
icebp
fnstsw
test
jg
inc
hlt
stos
ins
sub
adc
cmp
jne
xchg
sbb
add
shr
inc
xor
xor
and
or
shl
add
fldcw
push
inc
cmps
lahf
sbb
rcr
lock
mov
sbb
cmp
ret
aas
mov
and
adc
dec
cmp
aam
hlt
mov
in
dec
mov
adc
popa
test
mov
out
pop
iret
popa
sbb
call
pop
mov
stos
adc
add
add
das
(bad)
ins
mov
cmp
fcom
cmp
add
ror
repnz
sub
mov
fmul
cmp
jne
out
clc
or
inc
xor
mov
xchg
add
cmp
ins
inc
mov
mov
test
fisttp
(bad)
or
dec
fsubr
adc
pop
sar
or
xchg
add
inc
or
(bad)
rcl
ins
add
sub
push
movs
int
data16
or
sub
rcr
enter
or
and
fwait
loopne
adc
aaa
das
xor
or
cmps
xchg
xor
xor
aam
and
inc
inc
aaa
outs
or
or
lods
add
xchg
inc
outs
mov
rcr
jp
pop
jne
or
sub
add
hlt
inc
pop
adc
ds
stos
or
popa
outs
pop
sub
jne
pop
les
daa
or
int3
daa
mov
xor
xchg
jae
fist
xor
pop
leave
leave
or
ins
movhps
xor
js
push
data16
adc
pop
xchg
sub
or
jle
pop
xor
cmp
retf
aaa
sbb
and
and
cmp
push
adc
jne
(bad)
outs
jecxz
add
pop
shl
push
in
adc
aas
adc
inc
inc
out
jl
shl
aas
jg
sub
test
push
stos
cmp
xor
in
sub
in
push
inc
dec
popf
enter
jle
pop
push
ret
pop
push
(bad)
pop
adc
pop
shr
jg
lds
mov
lods
sub
ins
aas
or
jge
cwde
or
or
fwait
pavgb
mov
or
test
je
add
pop
xchg
ret
out
mov
sub
push
cdq
out
mov
lea
mov
stos
add
xchg
sub
jmp
adc
ret
sub
mov
ret
jne
jmp
(bad)
and
retf
test
or
shl
lds
call
mov
or
popa
and
(bad)
imul
or
jno
push
xlat
rol
data16
(bad)
std
inc
push
sbb
loopne
jecxz
(bad)
and
and
hlt
mov
sbb
adc
dec
mov
hlt
adc
lea
sub
sub
dec
movs
mov
ror
xor
and
jb
adc
push
and
call
and
das
pop
jno
pop
pop
imul
pop
pop
cmp
dec
test
mov
fxch
je
das
inc
test
add
ret
mov
sbb
mov
and
cmps
or
or
pop
lods
push
mov
in
push
or
aaa
pop
mov
pusha
pop
add
add
loopne
enter
sub
add
or
aas
sub
inc
imul
and
fsubr
fcom
mov
out
mov
mov
cdq
xchg
dec
stos
fist
jbe
and
cwde
aad
add
ss
or
jg
(bad)
mov
dec
and
outs
add
cs
ins
popa
pop
test
das
imul
mov
adc
and
les
mov
and
dec
push
jo
pop
jne
lock
sub
push
out
add
push
inc
dec
pop
sub
mov
pop
mov
lods
in
in
(bad)
movs
pop
jmp
and
dec
les
or
or
ret
mov
jg
ret
jne
xchg
in
cdq
shl
std
push
add
sub
out
fs
dec
and
gs
pop
loope
popa
out
mov
fdivr
pusha
ja
ss
fidivr
je
mov
call
ins
loopne
xor
add
inc
fcom
jl
jno
adc
mov
int
js
ret
pop
pop
sbb
or
push
and
daa
and
test
jnp
mov
add
push
xchg
jl
xlat
add
sbb
push
(bad)
fdivr
add
xchg
test
push
lods
mov
pop
dec
shl
mov
sub
sbb
clc
push
adc
ret
les
ins
loope
test
inc
adc
inc
adc
or
test
inc
xor
ret
jmp
jle
push
std
fcomp
mov
leave
aas
loopne
jmp
inc
rcl
mov
and
pop
(bad)
pop
xchg
sbb
or
cld
mov
and
add
call
jg
int
jne
mov
cld
imul
xchg
push
icebp
cli
xchg
fwait
pop
stos
and
sub
xchg
aam
lds
scas
xchg
in
repz
in
scas
mov
mov
jne
popf
adc
push
out
or
xor
adc
or
adc
popa
std
lods
mov
movs
add
mov
xlat
sub
cmp
push
xchg
xchg
xchg
xlat
dec
inc
xchg
inc
pop
xor
and
adc
sub
or
retf
and
mov
pop
cmps
out
push
sar
dec
scas
mov
dec
jmp
inc
push
enterw
jnp
inc
(bad)
in
jmp
inc
bound
adc
sub
or
lea
mov
sbb
ror
or
jnp
js
or
mov
das
loope
sub
iret
xchg
rol
cmp
cld
add
fs
jo
pop
sbb
and
adc
test
nop
clc
ss
push
shl
and
popa
mov
out
out
pop
inc
add
(bad)
or
or
jae
adc
sub
sbb
repz
cmp
sbb
imul
aam
lea
pop
stc
paddsb
aaa
push
sub
test
adc
in
xchg
mov
(bad)
test
mov
cdq
jne
lock
ror
mov
pop
lea
mov
ss
adc
add
push
jno
jmp
push
push
call
shr
pop
data16
ret
out
xlat
hlt
cmp
and
xor
cmp
sbb
pop
push
push
jns
sbb
dec
xor
fisttp
cmp
jne
sbb
adc
test
push
and
add
cwde
xor
mov
cmp
nop
jmp
pop
xor
xchg
dec
data16
cmp
nop
cmp
sub
es
in
adc
cwde
sbb
add
jne
xchg
daa
hlt
pop
cmp
jge
inc
dec
mov
arpl
mov
lods
adc
xor
aaa
sub
jmp
adc
ins
jno
jne
repnz
cwde
mov
mov
pusha
inc
stos
scas
out
sub
inc
dec
mov
clc
movs
jns
mov
pop
mov
popf
or
add
bound
jo
outs
hlt
shl
add
aas
push
add
adc
cmps
(bad)
jmp
and
pop
jge
jge
out
or
inc
mov
push
mov
add
cmps
sub
sbb
out
jne
cdq
jecxz
pop
sbb
pop
jne
stos
jno
pop
cmps
je
inc
je
sbb
mov
std
enter
sub
sbb
clc
xchg
mov
xchg
popa
or
adc
sub
pop
mov
sub
leave
rol
int3
cmp
jle
or
(bad)
mov
mov
adc
adc
dec
adc
mov
(bad)
js
fst
retf
add
inc
fsubr
inc
adc
cmp
retf
arpl
test
fisttp
(bad)
pop
ins
and
xchg
inc
daa
inc
in
dec
(bad)
(bad)
dec
mov
cld
push
cld
sbb
pop
lock
mov
iret
sbb
cmp
gs
dec
dec
jle
jns
add
mov
pop
hlt
call
daa
xor
ins
in
fwait
shl
rcl
inc
sbb
dec
or
add
push
test
shl
ins
jnp
push
push
imul
je
inc
mov
sbb
nop
stos
jne
or
mov
xchg
mov
ss
ss
sbb
hlt
and
es
and
sub
or
push
dec
or
xchg
xor
cld
mov
jne
pop
pop
fisttp
test
test
or
fidiv
inc
loop
push
shl
xchg
js
imul
pop
ins
mov
gs
pop
cmp
loopne
and
data16
or
movs
scas
(bad)
sbb
adc
jbe
fdivp
and
in
push
add
inc
xchg
dec
int3
mov
das
push
(bad)
not
and
sub
mov
or
push
rol
jmp
xchg
movs
adc
add
sbb
test
cli
lea
pop
sbb
test
inc
xlat
adc
mov
inc
test
jg
add
pop
jp
call
jg
loope
ins
leave
mov
shr
rol
in
sub
mov
stos
mov
clc
adc
out
dec
mov
clc
je
in
sub
adc
int3
jb
call
push
xchg
loopne
std
rcl
push
fist
adc
jp
rcl
or
mov
dec
sbb
xchg
pop
xor
mov
push
jae
in
jg
xchg
imul
xor
push
lahf
adc
clc
lds
push
jecxz
in
ins
ins
jo
xor
retf
pop
pop
in
mov
lock
or
jne
in
push
sub
aam
jns
lahf
fmul
push
dec
jb
in
add
xchg
repnz
and
add
push
in
stos
stos
sbb
dec
enter
call
pmuludq
xchg
mov
mov
test
lods
and
and
mov
push
fisub
sub
adc
fcom
add
test
add
je
lock
js
jmp
mov
les
cmp
dec
shl
mov
addr16
mov
mov
pop
jle
test
popf
jne
mov
ds
sbb
ret
add
mov
sbb
ins
xor
pop
sub
inc
ret
es
out
inc
pusha
sbb
push
jl
fist
adc
adc
and
pop
stc
adc
jmp
xor
mov
pop
aaa
cwde
sbb
jne
cmps
adc
push
shr
add
scas
or
dec
out
pop
repz
ss
ret
or
or
out
dec
jno
dec
sahf
mov
mov
rol
push
ret
cmp
dec
(bad)
mov
mov
pop
ja
xchg
test
inc
jnp
mov
adc
jo
dec
scas
push
clc
and
mov
xor
fwait
mov
ds
sub
sub
sub
test
nop
and
jmp
in
sub
lock
adc
not
add
cmp
jmp
fst
adc
xlat
adc
call
sub
loop
xchg
sbb
adc
fs
inc
or
outs
or
lock
mov
sti
es
iret
cmps
adc
or
xlat
mov
fucomp
push
nop
or
ficomp
mov
xchg
push
icebp
sahf
inc
sbb
pop
retf
add
and
push
imul
sbb
cmp
(bad)
xchg
sbb
add
ja
ret
clc
mov
mov
pop
inc
movs
mov
jle
xor
cmp
fcom
cmp
arpl
outs
add
inc
fwait
xchg
imul
pop
adc
or
add
push
xor
inc
scas
movsx
scas
or
dec
add
xor
mov
cmp
push
pop
xor
test
cmp
jne
not
fwait
jno
lahf
setno
not
loopne
ret
test
pop
aas
stos
or
cmps
pop
or
adc
and
cmp
arpl
or
jne
add
loopne
psraw
add
or
push
lea
or
mov
nop
and
xor
sbb
lock
jno
add
pop
inc
lock
sbb
and
sub
jae
lea
rol
(bad)
fmul
mov
loopne
mov
dec
call
mov
jge
hlt
lea
add
lods
sbb
loope
and
jnp
hlt
shl
inc
loop
aas
sbb
rol
pop
repz
mov
sbb
or
xor
leave
add
popa
int
loope
mov
aaa
out
(bad)
or
test
shr
jne
hlt
jne
and
mov
aaa
in
mov
mov
adc
in
xor
xchg
pop
pop
sbb
jne
scas
jo
sbb
dec
xor
mov
jge
mov
pop
adc
push
leave
scas
cwde
and
xor
inc
jnp
inc
jmp
adc
cwde
into
jp
in
fwait
cld
into
int
outs
std
xchg
pop
in
icebp
push
pusha
pop
cmps
jo
inc
or
xor
loop
mov
fsubr
xor
es
out
cmp
push
jns
add
aam
xchg
loopne
js
push
push
out
jecxz
int3
lock
lods
dec
mov
dec
stos
repz
sub
and
in
push
pop
xchg
(bad)
popa
ins
push
mov
hlt
imul
mov
jo
push
sbb
mov
inc
xchg
or
adc
push
test
outs
dec
jmp
outs
(bad)
xchg
xlat
aam
xor
cli
push
lods
nop
lock
xor
popa
xor
nop
push
jbe
push
xor
mov
mov
test
inc
lods
in
jne
sbb
in
aad
inc
sbb
push
jmp
sahf
push
dec
sub
xlat
enter
fdivr
push
mov
stc
stos
test
call
(bad)
mov
ins
sbb
icebp
dec
add
ror
pusha
inc
or
in
push
add
stc
xor
jb
sbb
iret
fidiv
or
adc
jge
sti
mov
pushf
lods
xchg
scas
push
loopne
lods
out
sahf
cmps
push
inc
push
(bad)
leave
sti
ficom
inc
daa
cmps
push
mov
aam
loope
jns
cmc
dec
and
xchg
dec
in
lock
sahf
xlat
cmc
test
cmps
pusha
enter
mov
aaa
test
mov
xchg
mov
(bad)
in
arpl
dec
fdivr
mov
enter
fsub
inc
in
mov
push
sbb
sub
scas
add
inc
push
sbb
sbb
push
xor
pop
stc
clc
inc
xchg
aam
or
cwde
aam
xchg
mov
jmp
test
add
mov
mov
aaa
(bad)
jnp
push
dec
jnp
(bad)
loopne
jmp
lahf
push
push
aas
fs
hlt
sqrtps
scas
inc
inc
arpl
rcr
or
jne
mov
mov
inc
cmps
push
and
fwait
mov
call
push
and
sub
xchg
outs
add
(bad)
mov
pop
jb
pop
ins
sub
movs
(bad)
lea
and
xchg
ror
stos
add
es
test
mov
xchg
jo
pop
cmp
mov
xchg
sbb
adc
cmp
jnp
loopne
sbb
sbb
mov
sub
adc
sbb
pop
cmp
jbe
je
hlt
inc
or
cmp
jg
cmp
and
mov
jl
pop
mov
or
push
clc
or
imul
(bad)
test
mov
mov
adc
jl
imul
xchg
in
xor
into
xchg
dec
mov
lds
ror
mov
lds
leave
adc
arpl
xor
jmp
loope
xchg
xor
cmc
xchg
int3
gs
xor
push
and
cwde
add
pusha
nop
pop
icebp
in
pop
lea
mov
xor
push
xor
dec
(bad)
sub
or
sub
arpl
xor
(bad)
jmp
cmp
cld
and
mov
xchg
and
xor
sbb
loope
hlt
(bad)
sub
(bad)
mov
and
cmp
mov
mov
mov
popf
mov
push
ss
sbb
inc
or
inc
nop
inc
cs
adc
mov
outs
sbb
fucomip
fldcw
mov
shl
loopne
xor
push
and
or
dec
js
or
add
and
(bad)
and
push
lds
cmp
pop
outs
adc
call
pop
jae
sbb
je
push
adc
and
movs
jne
jl
fs
push
fcom
(bad)
mov
mov
hlt
inc
sbb
push
retf
or
lea
lahf
push
push
jne
(bad)
cld
dec
add
xchg
test
adc
xor
mov
outs
popa
dec
adc
movs
mov
leave
imul
pop
outs
mov
or
mov
pop
fnsave
add
pop
xchg
add
(bad)
popa
pop
mov
sub
push
out
(bad)
dec
push
xor
push
push
or
sub
mov
fist
push
ins
arpl
and
out
dec
cmp
jge
push
dec
xor
and
cwde
pop
leave
inc
nop
dec
sahf
test
(bad)
mov
jmp
dec
inc
repz
mov
pushf
push
scas
rcl
out
mov
hlt
push
add
cmp
mov
xor
or
ins
cld
test
push
shr
gs
push
inc
cmp
add
ret
ins
adc
and
jg
push
pop
jmp
jae
ins
das
std
pusha
dec
neg
adc
mov
sbb
sbb
or
fisttp
mov
leave
loope
std
mov
call
jo
lods
xchg
mov
pop
cs
imul
aam
mov
icebp
rcr
adc
lock
add
jne
aaa
lods
pop
in
imul
adc
imul
hlt
pop
mov
(bad)
les
daa
push
aam
loope
mov
stos
test
mov
cdq
(bad)
sub
push
dec
in
pop
imul
cwde
adc
mov
lods
and
add
push
inc
repz
clc
repz
dec
enter
adc
inc
jbe
les
aad
fs
in
xchg
add
cmp
lea
inc
mov
sub
dec
add
xchg
jae
adc
sbb
mov
and
bound
mov
call
mov
cmp
hlt
das
popf
dec
adc
ins
inc
and
sub
idiv
sub
push
call
sub
mov
pop
adc
cmps
loopne
jbe
and
mov
push
(bad)
ins
xor
add
es
sub
push
mov
aaa
xchg
dec
xor
inc
ja
lods
xor
adc
lock
into
or
enter
popa
lahf
mov
hlt
in
in
cmp
mov
js
pop
mov
sbb
loop
or
sbb
and
pushw
jmp
sub
and
loopne
fmul
sbb
mov
pop
ret
call
pushf
arpl
call
adc
(bad)
push
push
mov
sub
aas
sbb
xor
pop
outs
add
mov
inc
push
fidiv
or
fsub
sub
push
pusha
fcomi
mov
gs
sbb
xor
scas
mov
repz
dec
mov
ret
jg
je
pop
outs
dec
sub
rcr
mov
xor
movs
or
xchg
mov
pusha
xchg
mov
sub
xor
daa
scas
xchg
cmp
nop
imul
sbb
jno
outs
inc
test
clc
in
or
ret
jmp
push
mov
movs
les
jmp
aaa
mov
push
inc
or
push
neg
pop
add
cwde
cwde
mov
mov
mov
scas
push
add
pushf
xor
shr
ja
xor
or
pop
out
and
add
es
jbe
outs
outs
imul
xor
mov
sbb
inc
dec
push
test
sbb
or
adc
inc
xchg
and
in
nop
(bad)
sbb
pop
ret
xor
and
dec
jl
xchg
cmps
sbb
fadd
(bad)
dec
or
dec
cli
adc
clc
ret
sbb
sub
push
or
inc
adc
cmp
sub
cwde
scas
pop
adc
pop
pop
adc
packssdw
in
mov
outs
or
and
aad
iret
inc
mov
push
mov
jb
(bad)
in
daa
and
shl
push
push
addr16
js
pop
adc
inc
add
mov
jno
pop
and
or
or
dec
fadd
popa
inc
and
outs
fisub
sub
aam
and
ret
inc
and
jmp
cmp
mov
push
inc
inc
and
or
ror
data16
rol
and
(bad)
mov
fdivr
test
rcr
xchg
jo
adc
fisubr
call
push
xor
mov
cld
arpl
xchg
or
fcmovnbe
sbb
lods
jne
pop
adc
arpl
inc
add
fbstp
add
mov
push
les
adc
mov
ficom
and
dec
sbb
mov
adc
inc
mov
pop
jl
mov
and
dec
and
das
xor
sbb
loop
add
push
lds
ror
xchg
pusha
sbb
inc
jo
in
jo
jb
mov
and
inc
push
out
dec
dec
imul
aam
int3
push
adc
(bad)
addr16
add
sub
and
sbb
and
dec
and
add
lea
movs
xchg
test
mov
mov
ret
xchg
ret
mov
jl
daa
fst
icebp
sbb
and
mov
push
int3
or
fild
jmp
or
or
adc
repz
xor
sbb
and
sbb
xor
xor
aas
dec
and
push
aad
add
mov
and
dec
ins
jb
cmp
test
or
push
sbb
and
push
int3
int3
and
add
lea
aas
xchg
pop
add
jl
das
(bad)
enter
movs
pusha
enter
and
xor
lock
es
or
dec
cmp
xlat
push
dec
dec
mov
stos
or
mov
lahf
cmp
xor
sbb
fcomp
inc
leave
add
xor
scas
and
xchg
outs
ror
(bad)
cld
gs
fadd
xor
sub
or
jle
ins
or
ror
int3
xchg
test
sbb
arpl
icebp
mov
test
jnp
pop
rol
add
sbb
xchg
nop
xchg
enter
pop
sub
adc
adc
adc
sbb
retf
jmp
ss
ja
daa
mov
sbb
push
stos
scas
cmp
ja
dec
add
lods
imul
pop
sbb
test
gs
inc
dec
call
pop
sub
(bad)
add
ret
or
ins
adc
dec
pop
iret
dec
leave
test
(bad)
add
and
jb
or
adc
xchg
pop
adc
mov
or
xchg
mov
cwde
cmp
pop
adc
xor
mov
and
adc
add
push
add
ret
inc
or
cmp
jg
mov
and
ins
sub
mov
test
nop
add
or
add
mov
aaa
push
call
and
adc
out
or
adc
fimul
mov
fld
out
mov
ret
mov
je
nop
push
add
add
add
imul
(bad)
stc
pop
add
mov
mov
add
pop
jae
add
pop
sub
push
dec
push
call
int3
int3
clc
call
add
call
sub
and
pop
fcomp
lahf
int
das
leave
mov
push
sbb
fcomp
mov
xor
sbb
dec
push
and
and
jg
or
rcl
sbb
rol
ja
jb
adc
cmps
jb
xchg
js
pop
adc
sbb
lock
mov
cmps
jmp
xor
rcr
xchg
dec
dec
je
pop
or
retf
outs
pop
xlat
xchg
mov
pop
sqrtps
inc
cmp
pop
mov
(bad)
ds
sbb
sbb
mov
cmps
mov
iret
mov
inc
aad
and
adc
cmp
dec
sahf
not
pop
outs
ror
and
das
jbe
paddb
into
clc
out
js
sbb
loope
js
jne
(bad)
push
push
and
dec
leave
pop
xchg
into
hlt
sub
sbb
stc
cs
mov
sub
in
mov
mov
push
mov
cmp
lock
cmp
call
fldenv
jmp
sbb
sbb
sub
pop
push
adc
mov
cmp
push
pop
or
and
xor
cmp
and
ja
xor
sbb
lahf
or
add
pop
mov
and
loop
in
sbb
mov
shr
(bad)
jno
jg
fnstenv
mov
mov
sbb
push
pop
imul
sub
add
jmp
pop
push
jmp
pop
int3
pop
push
xor
es
pusha
cwde
ret
rol
cld
sbb
mov
adc
aam
cld
dec
int
cmp
xor
add
shr
mov
and
popa
mov
cwde
lock
shr
inc
inc
mov
movs
fst
mov
enter
sub
sub
xchg
or
addr16
hlt
and
leave
mov
call
shl
lock
aad
idiv
pop
lea
lahf
dec
ret
call
cmp
test
sub
das
inc
sbb
imul
fadd
scas
enter
imul
stc
mov
(bad)
and
add
sub
sbb
in
or
and
int3
dec
or
or
scas
imul
sub
cmp
sub
test
mov
inc
cmp
push
inc
adc
jne
push
adc
xlat
cmp
cmps
pop
xor
je
icebp
neg
dec
sub
(bad)
jno
ror
push
or
sbb
and
and
pop
dec
pop
pop
popa
push
jb
jle
movs
mov
pop
nop
inc
retf
mov
push
cmp
mov
ja
fs
lock
mov
pop
or
cld
mov
fstp
jg
out
ret
mov
mov
sbb
mov
fcom
ret
bound
dec
cmp
mov
sbb
aad
hlt
jno
push
or
mov
bound
fbstp
imul
shl
mov
sbb
jne
daa
out
xor
data16
outs
add
dec
mov
pop
add
dec
jp
test
fnstenv
mov
inc
and
mov
aad
les
test
jno
sub
xchg
test
fsub
mov
inc
fcmovne
or
arpl
outs
pop
push
xchg
push
test
adc
in
sahf
nop
inc
lahf
test
pop
in
xchg
movs
adc
jno
and
push
and
lock
inc
cmp
lds
pop
jmp
ret
mov
cwde
push
add
cmp
bound
jbe
inc
or
add
mov
(bad)
lock
dec
rol
cmps
push
dec
outs
lock
sub
jno
xor
aaa
add
dec
mov
fmul
adc
retf
cld
lds
fwait
aam
popa
adc
jecxz
xor
inc
lahf
jmp
mov
xchg
leave
cmp
shl
cwde
pop
pop
mov
mov
pop
mov
and
(bad)
mov
leave
xchg
ss
pop
aas
icebp
add
mov
add
xor
movs
jns
xor
int
addr16
xor
cmp
dec
cmp
sub
(bad)
mov
or
in
or
fsub
cs
es
lock
daa
stos
mov
push
jmp
test
movs
dec
push
ins
dec
mov
movhps
cmp
dec
cmovb
dec
sbb
dec
sbb
cmp
movs
retf
lods
xchg
xor
mov
lock
inc
sbb
retf
mov
add
mov
iret
and
pop
push
hlt
dec
test
jo
xchg
inc
(bad)
sub
mov
push
jne
push
sbb
adc
test
pusha
add
(bad)
fild
xor
ins
cmps
push
add
or
hlt
fadd
loope
test
xor
cmp
stc
and
sahf
es
in
sbb
rol
jmp
pop
mov
push
pop
mov
arpl
sbb
dec
add
(bad)
test
sbb
bound
popf
stc
clc
inc
adc
arpl
pop
adc
mov
shl
loopne
fst
(bad)
dec
cdq
pop
dec
add
mov
xadd
or
xchg
xchg
push
mov
mov
popa
fnsave
bound
and
or
mov
sbb
add
sbb
fisttp
clc
or
sub
add
cmp
loopne
(bad)
sti
add
mov
cld
xor
mul
les
into
mov
mov
and
out
icebp
pop
cs
xor
adc
fild
into
(bad)
push
loopne
(bad)
jmp
sti
pop
pop
mov
add
add
adc
pop
dec
movs
mov
leave
and
int3
mov
aam
mov
cwde
(bad)
retf
in
inc
mov
enter
gs
pop
cmp
jecxz
pop
and
sbb
inc
sbb
and
push
loope
rol
jg
test
xchg
add
push
xlat
cdq
addr16
push
xchg
jmp
cli
jo
jno
je
adc
sub
or
sub
ror
imul
adc
jmp
push
add
cmp
sbb
(bad)
adc
sahf
addr16
pop
sub
aam
aam
dec
call
jl
add
pop
popf
push
fdiv
sub
jnp
push
repnz
cdq
pop
xor
xchg
in
cmps
aaa
nop
cmps
clc
fstp
xchg
pop
fs
punpckhdq
std
xor
xor
es
aam
neg
cmp
xchg
pop
shr
scas
lahf
je
xchg
push
sub
mov
dec
adc
or
or
fs
enter
movs
cmp
cmp
add
es
add
sbb
call
or
mov
repnz
hlt
les
les
xor
dec
xor
call
lods
in
jge
or
lock
dec
mov
adc
cld
mov
data16
lock
and
dec
xor
and
jecxz
les
add
(bad)
add
cdq
inc
movs
xor
and
pop
outs
jno
loope
in
lea
movs
sub
sub
xchg
xchg
out
mov
or
xchg
jp
push
(bad)
fs
mov
inc
(bad)
stos
push
iret
dec
shl
clc
hlt
mov
and
lock
or
pop
shr
or
jnp
pusha
add
add
mov
test
mov
adc
xchg
and
mov
push
adc
aad
push
push
pop
xor
xchg
nop
in
or
test
inc
movs
imul
mov
or
in
ror
xor
jbe
stos
pop
and
mov
xchg
in
mov
loope
(bad)
mov
pop
xchg
(bad)
mov
aas
or
mov
push
cs
dec
hlt
sbb
or
enter
xlat
sub
ret
or
push
dec
je
sub
xor
xchg
adc
sub
sub
psubw
int3
xor
adc
outs
or
ins
pop
jg
xchg
xor
lds
adc
out
push
popf
aaa
jae
adc
ins
mov
add
or
and
dec
sbb
push
add
or
push
or
fwait
jg
mov
popf
xchg
pop
or
push
add
push
xor
mov
xor
sbb
pusha
inc
stc
dec
pushf
mov
or
push
push
cmp
das
jb
popf
mov
xor
lods
pusha
pusha
outs
in
test
nop
pop
xor
outs
call
std
(bad)
adc
add
scas
sub
xor
sbb
mov
jmp
jne
push
inc
shl
adc
push
dec
rol
cmp
mov
or
pop
xor
mov
or
test
ror
mov
sbb
push
nop
dec
pop
sbb
fadd
bound
add
popa
pop
jmp
push
jmp
jl
and
jmp
cmps
xchg
lods
imul
inc
dec
mov
jmp
shl
icebp
push
inc
hlt
inc
push
jmp
xor
add
xor
inc
mov
cld
lods
cmp
lock
call
push
(bad)
push
test
push
dec
sbb
add
jmp
or
(bad)
or
inc
fcom
mov
push
push
adc
and
loopne
add
or
dec
xchg
jo
test
add
adc
adc
xchg
jl
and
add
sub
jmp
aam
and
dec
das
aas
adc
cmp
jo
(bad)
and
pop
and
punpckhbw
jno
mov
jmp
inc
cdq
cmp
xlat
mov
iret
jne
inc
or
lahf
in
in
or
cmp
add
fmul
push
dec
mov
adc
push
push
dec
push
in
inc
and
pop
lea
test
sbb
or
sbb
rol
inc
inc
lahf
inc
adc
xor
cdq
(bad)
lahf
adc
sbb
test
xor
loopne
aam
pushf
std
ss
inc
jno
or
dec
sbb
outs
scas
aad
bound
push
pop
clc
jns
push
sub
inc
cmp
xor
fucomp
or
push
cmp
push
daa
fisttp
xchg
sbb
mov
fs
aam
mov
jle
call
leave
rol
cmp
push
mov
in
cmp
and
add
js
jo
shl
mov
xor
fisttp
pop
adc
add
xor
cmp
sub
or
lea
popa
add
fdiv
jnp
mov
mov
push
popf
ret
mov
pop
out
push
push
add
shr
scas
and
bound
lock
mov
test
data16
test
and
mov
lods
out
pusha
or
idiv
push
push
je
mov
dec
xchg
push
or
push
pop
in
sahf
imul
mov
or
or
outs
mov
add
push
rcr
cmp
and
dec
push
mov
aam
add
and
lahf
outs
or
addr16
aad
push
and
inc
jmp
jne
mov
popa
adc
retf
adc
push
or
pop
sbb
pop
mov
and
add
inc
add
inc
xchg
pop
add
mov
or
xchg
add
mov
push
and
test
add
adc
cmp
and
sbb
loopne
test
idiv
fwait
add
aas
enter
sbb
(bad)
adc
test
add
mov
adc
stos
pusha
and
icebp
popa
sub
adc
cdq
adc
inc
add
push
sub
mov
cmp
jecxz
and
(bad)
out
dec
fs
lea
dec
lods
jmp
mov
fdiv
sub
adc
imul
mov
mov
mov
cmps
jmp
out
stos
daa
jno
das
fdiv
fst
clc
sbb
cld
repnz
sti
and
sbb
adc
xchg
cmp
push
jae
sbb
movs
aam
cmp
add
ret
dec
adc
xor
adc
sbb
adc
bound
inc
std
jno
scas
sbb
inc
cs
fs
adc
jp
arpl
jge
jecxz
adc
adc
cmp
xchg
or
outs
mov
mov
daa
push
mov
loopne
movs
lock
retf
mov
pop
mov
jns
mov
jge
iret
xchg
xchg
inc
cs
dec
hlt
mov
aaa
jnp
adc
cli
cmp
sub
repnz
data16
xor
xor
call
call
sub
in
jmp
mov
xchg
clc
pop
dec
lods
or
and
xlat
jg
outs
jo
sbb
and
shr
loop
iret
pop
push
aad
bound
sub
jg
stos
sub
sub
pop
sub
sbb
mov
test
pop
imul
aaa
cmp
xor
or
inc
xchg
sub
push
xchg
xor
sbb
push
or
dec
ss
movs
loopne
pop
xchg
xor
jo
xchg
daa
push
mov
jle
pusha
xchg
popa
mov
add
mov
xor
pop
(bad)
mov
dec
pop
inc
ror
ss
xor
ins
lods
pop
movs
jg
add
and
sbb
lock
adc
dec
cmp
mov
shl
push
outs
cmp
dec
arpl
sub
and
adc
add
pop
(bad)
sub
aaa
stos
inc
test
call
adc
cs
ins
(bad)
nop
xor
adc
and
jg
sbb
or
push
push
mov
(bad)
out
mov
xor
jo
daa
xchg
jbe
enter
fadd
les
sbb
ret
add
sbb
fld
sar
fldenv
dec
and
add
xchg
(bad)
push
das
xlat
or
adc
or
out
push
add
mov
sub
sub
push
bound
push
mov
adc
dec
dec
push
inc
std
jecxz
cmp
add
pop
outs
aad
sub
pop
popa
loope
dec
add
cmp
dec
pop
aas
xlat
hlt
fcmovb
mov
daa
mov
inc
fbld
ret
cmp
push
sbb
lods
and
in
jg
sub
scas
aad
mov
test
daa
in
bound
xchg
jb
cmp
jmp
inc
add
add
lahf
ficomp
jmp
pop
cmp
cmp
add
add
mov
xor
xor
mov
dec
adc
push
and
push
add
lods
sub
xchg
out
mov
dec
test
jbe
mov
loop
adc
dec
call
lock
mov
push
in
add
mov
fwait
movs
loopne
scas
xor
xchg
adc
or
pop
sbb
sbb
mov
xchg
popa
sub
pop
adc
pusha
fs
sbb
je
je
fbstp
outs
sub
pop
add
fist
adc
aaa
mov
popa
movs
xchg
push
ja
sub
movs
xchg
fist
adc
add
inc
push
jb
push
adc
daa
retf
enter
sbb
inc
mov
int
sub
imul
fmul
sub
fidivr
out
mov
mov
dec
call
retf
mov
adc
inc
je
xchg
movs
xor
mov
push
sbb
jecxz
popa
sbb
fisub
lods
popf
xchg
jmp
and
adc
sbb
out
adc
repz
ficomp
nop
pop
fsub
out
bnd
aaa
mov
fidiv
jge
xor
mov
aas
mov
lods
mov
mov
or
mov
or
add
pop
xor
or
add
cwde
dec
out
mov
imul
adc
cwde
adc
or
add
ds
sti
inc
mov
xor
pop
jp
push
in
jg
inc
pop
add
adc
add
ss
cld
outs
adc
adc
push
enter
es
loopne
add
and
jne
cwde
jl
or
jle
pop
or
movs
add
outs
or
dec
inc
aam
mov
push
push
or
test
xor
add
sbb
mov
adc
out
dec
adc
and
mov
ds
adc
sbb
xor
pusha
dec
imul
add
mov
or
dec
das
enter
repz
movs
sub
fcomp
adc
in
add
adc
test
fist
fdiv
sbb
loope
mov
add
ss
in
add
jg
retf
iret
and
mov
and
test
or
test
xor
inc
lods
mov
sbb
call
sub
sbb
jb
mov
push
in
shr
add
and
cmps
ss
and
sbb
lods
or
sbb
(bad)
fcomp
aaa
dec
pop
das
pop
mov
xor
xor
sar
cmp
sub
jnp
js
cmp
xchg
dec
mov
test
loop
push
imul
mov
mov
out
sub
adc
(bad)
or
add
mov
sbb
cmp
daa
sbb
sub
scas
or
add
daa
pop
cmp
mov
sbb
movs
shl
(bad)
ficomp
pop
mov
shr
inc
or
leave
xchg
add
fmulp
leave
sbb
and
jecxz
pusha
cli
or
daa
push
push
sbb
and
and
lea
pop
lods
das
xchg
lahf
push
popa
adc
ins
mov
sti
ss
cmp
push
mov
mov
adc
loop
inc
ins
sub
mov
ror
pop
or
fild
cmp
add
div
mov
js
jo
dec
xchg
retf
inc
mov
add
nop
pusha
pusha
inc
cmp
sbb
inc
xchg
iret
rol
adc
fs
add
adc
xor
ret
add
nop
bound
jmp
pusha
leave
mov
or
inc
or
jb
add
popa
mov
cmps
pop
xor
xchg
add
jo
cmp
call
or
dec
or
and
movs
inc
shl
out
shr
add
sub
push
or
aad
inc
mov
xor
add
shl
inc
pop
lods
(bad)
retf
outs
mov
xor
cld
pop
mov
xor
xor
movs
add
and
mov
cmps
xor
add
xchg
test
push
sbb
test
xor
xchg
cdq
push
cmp
ja
cmp
movs
fs
cmp
pusha
and
push
xchg
and
sti
inc
shl
in
arpl
jno
ret
dec
or
add
jl
cli
int3
ror
inc
cmp
fmul
mov
enter
lods
nop
and
xchg
or
shl
movs
push
sbb
dec
gs
xchg
shr
mov
adc
imul
popa
ins
dec
data16
pop
push
dec
jnp
mov
arpl
lea
mov
mov
push
mov
loopne
sbb
jl
push
lods
or
push
je
xchg
inc
mov
dec
ins
test
or
int
sar
adc
adc
or
mov
enter
mov
inc
rcl
out
or
jge
and
sar
cmp
push
jb
xor
pop
ins
ffree
xor
cmp
inc
jb
cmp
iret
call
(bad)
adc
xor
adc
add
adc
(bad)
adc
lahf
sbb
cwde
or
mov
pop
hlt
mov
outs
or
call
popa
or
inc
xor
cld
mov
clc
adc
pop
pop
mov
ucomiss
push
idiv
dec
jge
xlat
dec
fld
and
inc
(bad)
fsub
jbe
push
jae
inc
hlt
add
sti
adc
or
fcom
cmp
push
mov
lock
cwde
(bad)
add
addr16
or
adc
daa
adc
ja
fsub
pop
xchg
cld
xchg
push
push
mov
pop
lahf
lock
rcr
push
movs
in
rcl
sbb
push
daa
and
sub
leave
lock
jecxz
fadd
and
or
ins
out
adc
pop
jp
push
shr
jns
adc
mov
adc
addr16
into
mov
cwde
jne
pop
iret
ret
arpl
pop
mov
xor
inc
cs
cmp
and
pop
jne
dec
clc
aam
(bad)
adc
or
cmp
mov
adc
jge
add
sbb
das
icebp
push
loope
clc
sbb
xor
jle
push
cs
ja
mov
xor
ja
jae
imul
fs
fild
xlat
sbb
sbb
cs
push
jno
arpl
xchg
add
(bad)
loopne
mov
push
mov
rcl
mov
popa
jo
jmp
nop
inc
fcom
mov
mov
mov
inc
pusha
aad
js
add
mov
fsub
repz
mov
ja
mov
push
repz
cmps
push
(bad)
fsubr
cld
push
push
iret
repz
and
inc
push
push
cmp
sahf
mov
aam
call
sbb
out
sahf
out
dec
pop
jno
sahf
out
sahf
xchg
cmps
mov
jns
jge
push
out
sbb
sahf
push
arpl
xchg
cmps
jns
out
mov
repz
repz
push
iret
repz
addr16
popf
scas
rcr
repnz
push
jns
out
sub
dec
pop
jo
jns
out
mov
sahf
shl
test
adc
cmp
dec
pop
outs
xor
movs
mov
(bad)
imul
push
and
inc
pop
imul
jns
out
mov
xlat
jmp
repz
push
iret
repz
addr16
popf
scas
rcr
test
out
sub
out
sahf
out
cdq
stos
mov
sahf
loope
add
cmp
repz
pop
jno
xchg
repz
repz
mov
jns
out
pop
adc
jns
pop
ins
jg
mov
jns
fldpi
std
subps
cmp
shl
xor
imul
lea
out
cmp
stc
or
das
jns
out
inc
push
gs
out
sahf
out
lods
mov
xor
cmc
pop
pop
sbb
cmp
cmp
jae
xchg
test
mov
pop
out
sahf
cmps
adc
sahf
out
sahf
outs
adc
in
call
pusha
and
cmp
repz
iret
repz
(bad)
mov
sahf
cmps
stc
cmp
or
jns
out
push
addr16
popf
out
sahf
out
rcl
test
bound
sub
iret
repz
xchg
iret
repz
loope
add
sahf
out
cmp
jno
out
sahf
adc
dec
repz
add
aaa
repz
repz
pop
ins
jg
iret
repz
mov
std
sahf
out
pcmpgtw
xor
jns
out
imul
sahf
out
aad
stc
or
repz
sbb
ja
iret
repz
fwait
lods
mov
repz
pop
sbb
out
sahf
out
dec
popa
jae
sahf
out
sahf
xchg
test
cmp
sar
adc
cmp
repz
outs
adc
in
call
sahf
out
call
jns
out
jge
mov
sahf
out
jmp
iret
repz
xor
addr16
cmp
repz
scas
rcl
jns
out
test
out
sahf
out
arpl
cdq
lahf
out
sahf
stos
mov
ins
cmp
repz
sub
dec
pop
repz
repz
xchg
cmps
mov
retf
fucomp
add
sahf
out
sahf
and
jg
sahf
out
xchg
mov
xor
out
std
movd
xor
repz
inc
push
imul
cmp
ret
aad
stc
jns
cmps
stc
or
sub
out
sahf
out
ins
jg
mov
mov
(bad)
clc
or
iret
repz
cs
push
fs
repz
call
shl
hlt
push
jno
push
sub
cmp
repz
pop
ins
jg
repz
xchg
mov
sahf
cmps
stc
cmp
(bad)
and
inc
jns
out
push
imul
out
ret
jb
jb
jb
sahf
out
jae
sub
pop
out
sahf
out
jg
mov
sahf
(bad)
fldpi
std
pcmpeqb
iret
repz
inc
push
pop
jno
cmp
repz
ds
fucomp
add
and
aaa
dec
pop
ins
jg
setg
jns
mov
aam
mov
repz
push
cs
iret
repz
push
fs
call
shl
hlt
push
ja
sahf
out
sbb
cmp
pusha
out
sahf
out
test
jns
int3
fdivp
add
es
repz
dec
pop
outs
xor
iret
repz
movs
mov
(bad)
imul
jns
xor
out
sahf
inc
pop
push
mov
mov
(bad)
call
repz
push
xor
iret
repz
data16
pushf
scas
rcr
test
sbb
out
sub
push
bound
sahf
out
cwde
stos
mov
sahf
loopne
add
push
sub
cmp
repz
pop
jo
xchg
repz
repz
mov
out
scas
rol
and
dec
jns
out
pop
ins
jle
mov
mov
fsubr
cld
iret
repz
push
jle
xor
cmp
repz
mov
iret
repz
clc
or
out
sahf
out
inc
push
fs
out
sahf
mov
cmp
repz
push
sbb
cmp
cmp
repz
pusha
jb
xchg
iret
repz
test
int3
fdivp
add
adc
cmp
jns
out
outs
adc
out
(bad)
(bad)
adc
and
pop
push
cmp
repz
mov
call
push
xor
jns
out
push
data16
sahf
out
sahf
pushf
scas
rcl
idiv
sar
sbb
push
repz
repz
stos
out
cmp
mov
test
sub
dec
pop
jo
sahf
out
adc
out
out
test
adc
jns
out
dec
pop
ins
jle
out
sahf
nop
mov
cmp
repz
push
xchg
xor
iret
repz
push
repz
mov
aam
clc
or
sbb
inc
push
fs
out
jbe
call
shl
hlt
push
mov
iret
repz
sub
pusha
jb
cmp
repz
test
int3
fidivr
out
lock
jns
out
pop
outs
adc
mov
(bad)
(bad)
cmp
sar
and
pop
repz
repz
mov
iret
(bad)
(bad)
call
out
sahf
push
xor
data16
sahf
out
mov
lahf
out
test
sbb
repz
ds
bound
cmp
repz
mov
sahf
cmps
stc
add
push
sub
dec
out
sahf
out
jo
xchg
cmps
int
jns
mov
(bad)
adc
repz
ss
pop
ins
repz
repz
mov
cmp
fsubr
cld
push
nop
and
inc
push
push
out
sahf
mov
aam
repz
out
or
repz
push
fs
call
shl
hlt
push
xchg
jns
out
sbb
cmp
pusha
out
sahf
out
test
jns
int3
fdivp
add
repz
dec
pop
outs
xor
iret
repz
movs
mov
(bad)
imul
xchg
and
out
sahf
inc
pop
push
mov
mov
(bad)
call
repz
push
xor
iret
repz
data16
pushf
scas
rcr
test
sbb
out
sub
push
bound
sahf
out
cwde
stos
mov
sahf
loopne
add
push
sub
cmp
repz
pop
jo
xchg
repz
repz
mov
cmp
mov
push
adc
dec
iret
repz
pop
ins
jle
mov
cmp
fsubr
cld
push
cdq
jns
out
and
inc
push
push
jp
sahf
mov
dec
repz
aam
clc
or
repz
push
fs
repz
repz
call
cmp
out
sahf
dec
pusha
jb
xchg
test
sahf
out
mov
pushf
repz
rcl
cmp
iret
repz
outs
adc
repz
in
(bad)
adc
jns
inc
pop
push
out
sahf
out
mov
sar
cli
or
push
xor
iret
repz
data16
pushf
repz
repz
rcl
mul
jns
out
lahf
sbb
push
sahf
out
sahf
bound
stos
mov
into
loopne
add
push
repz
repz
dec
pop
jo
repz
adc
stc
cmp
add
sahf
out
dec
pop
ins
jle
out
sahf
out
mov
fsubr
iret
repz
cld
push
mov
cmp
repz
jp
sahf
mov
cmp
repz
clc
or
sbb
inc
push
fs
out
sahf
jbe
call
jns
hlt
push
movs
sbb
repz
repz
pusha
jb
iret
repz
xchg
test
int3
fdivp
sahf
out
add
jns
out
pop
outs
adc
mov
(bad)
dec
repz
adc
push
iret
repz
mov
iret
repz
call
out
sahf
out
inc
push
data16
out
sahf
mov
dec
repz
or
cmp
repz
bound
iret
repz
stos
mov
sahf
out
call
jns
out
jo
xchg
cmps
mov
retf
cwde
push
adc
jns
out
ss
pop
ins
sahf
out
sahf
jle
mov
int
jns
cld
push
stos
and
repz
repz
push
push
cmp
sahf
mov
aam
clc
sahf
out
or
sahf
out
fs
call
shl
hlt
push
lods
iret
repz
sbb
cmp
pusha
jb
iret
repz
xchg
test
int3
jns
iret
repz
add
sahf
out
dec
pop
outs
sbb
mov
(bad)
cmp
repz
adc
cmp
repz
push
mov
mov
(bad)
call
jns
mov
xor
data16
out
js
pushf
scas
rcl
sahf
out
in
or
iret
sub
push
bound
iret
repz
stos
mov
out
repnz
push
sub
pop
add
mov
and
sahf
test
retf
repz
out
add
cmp
repz
ins
jle
mov
mov
fsubr
cld
out
sahf
out
mov
xor
out
sahf
push
ret
out
aam
clc
or
repz
push
fs
repz
mov
sahf
cmps
stc
cmp
push
mov
sub
sahf
out
dec
pusha
jb
xchg
out
sahf
out
mov
repz
add
pop
cmp
repz
adc
repz
adc
and
pop
push
out
sahf
jl
mov
int
jns
cli
or
push
xor
cmp
repz
push
data16
iret
repz
pushf
scas
rcl
neg
mov
jns
out
bound
stos
repz
out
into
loopne
add
iret
repz
push
sub
dec
pop
jo
iret
repz
xchg
cmps
mov
repz
nop
push
adc
cmp
repz
pop
ins
jle
repz
nop
mov
sahf
cmps
stc
cmp
push
mov
sahf
out
push
push
jns
out
ret
clc
iret
repz
or
fs
repz
mov
iret
repz
hlt
push
mov
out
cmp
pusha
jb
out
sahf
test
cmp
out
in
cld
or
sbb
test
repz
arpl
adc
scas
sbb
mov
xchg
dec
out
add
mov
mov
stos
mov
popa
inc
lds
out
scas
mov
pop
cmps
rcl
jle
add
sub
sbb
mov
or
inc
push
jmp
and
xor
test
xchg
inc
jb
pusha
ret
fcom
(bad)
clc
xor
in
lds
(bad)
mov
adc
sub
dec
pop
mov
or
and
in
int3
dec
enter
nop
push
lock
in
cs
dec
cld
or
and
fisubr
and
aam
sbb
nop
cmp
retf
nop
sbb
xchg
mov
sbb
test
sbb
and
retf
imul
mov
push
pusha
inc
cwde
and
mov
int
in
push
dec
and
pop
and
push
push
dec
mov
push
leave
inc
movs
jl
adc
inc
lods
jbe
xchg
dec
ffree
jnp
in
mov
and
xor
mov
dec
inc
pusha
mov
icebp
js
xor
shl
fdiv
in
xchg
add
sbb
in
mov
push
jl
in
mov
movs
mov
mov
hlt
or
and
xor
xor
inc
jb
pop
ins
inc
jb
inc
adc
fdivr
xchg
and
sar
dec
and
xchg
and
and
xchg
ins
js
cmp
enter
and
in
leave
xchg
or
add
sbb
sbb
xchg
sbb
jo
xchg
sbb
xchg
enter
xor
clc
shl
cmp
push
or
inc
sbb
sar
dec
sub
xchg
mov
dec
mov
movs
(bad)
in
repnz
mov
or
sbb
inc
jb
xor
and
jb
mov
clc
or
and
xchg
aad
cmp
xchg
and
dec
pusha
test
cmp
and
xchg
(bad)
fsubr
sbb
nop
cmp
(bad)
adc
xchg
sbb
xchg
cmp
leave
xchg
sbb
pop
js
sbb
xchg
sbb
mov
xchg
lock
pop
adc
sub
retf
pop
(bad)
add
cwde
xlat
daa
stos
in
push
mov
jns
hlt
xlat
adc
and
dec
mov
inc
pop
ins
mov
dec
mov
in
fdivr
jb
inc
repnz
dec
pusha
inc
jb
inc
je
rcl
fidivr
xchg
and
sbb
dec
and
xchg
and
xchg
and
xchg
mov
and
loopne
fld
xchg
sbb
xchg
inc
push
xchg
mov
mov
scas
xchg
and
mov
shl
mov
loope
(bad)
(bad)
in
push
adc
and
mov
xchg
sbb
inc
mov
xchg
sbb
push
and
sbb
xchg
sbb
movs
mov
inc
rcl
inc
jb
hlt
push
push
stos
jecxz
ffree
push
and
xor
dec
leave
xchg
sbb
push
xchg
sbb
test
xor
inc
enter
leave
and
hlt
or
sbb
dec
sbb
fisubr
fs
jl
cmp
xchg
and
xchg
lods
mov
cmp
cld
or
xchg
sbb
nop
sbb
leave
xchg
sbb
inc
pop
push
jl
pushf
xchg
sbb
xchg
lods
(bad)
leave
xchg
sbb
aam
clc
mov
or
sbb
and
hlt
dec
cmp
mov
repz
xlat
pusha
in
sub
je
test
in
mov
call
xor
inc
loope
mov
daa
pop
inc
push
leave
js
xchg
sbb
xchg
sbb
mov
xchg
add
sbb
dec
mov
xor
mov
dec
mov
lods
dec
mov
dec
(bad)
loopne
and
in
sbb
cmp
and
pop
je
dec
shr
or
in
jg
inc
js
inc
jnp
in
cmp
in
push
inc
and
leave
xchg
sbb
lods
mov
int3
in
in
xchg
or
push
add
and
push
xor
and
xor
sub
dec
and
cmp
fs
sbb
shl
hlt
inc
xchg
jp
or
daa
and
cmp
push
push
stos
call
int
xchg
mov
and
pop
ss
mov
mov
and
lods
rcl
call
inc
cmp
xor
inc
and
mov
sbb
sbb
shl
xor
leave
xchg
sbb
xchg
(bad)
in
in
sbb
adc
sub
in
inc
push
jbe
sbb
push
cmp
stos
mov
mov
push
clc
and
repnz
or
sbb
jmp
dec
fwait
js
movs
xchg
jmp
rcr
pop
mov
and
xchg
sbb
mov
in
in
sbb
or
sub
dec
inc
jmp
test
(bad)
ss
adc
mov
lea
and
jb
int3
inc
fs
in
jb
and
dec
mov
and
inc
xor
popa
stos
call
shr
adc
js
mov
fsubr
sbb
and
and
pusha
stos
les
cmp
dec
pop
test
dec
sub
ins
test
push
cmp
add
in
pop
add
ficom
jb
inc
cmp
inc
pop
stos
jbe
inc
ins
mov
xchg
out
pop
mov
ja
inc
stos
xor
pusha
sub
mov
out
test
enter
or
and
xor
pusha
jb
inc
jb
pushf
mov
push
mov
out
movs
clc
inc
and
fisubr
(bad)
and
xchg
xor
pop
lock
call
cmp
ror
push
cmp
in
sub
cld
inc
adc
dec
scas
xchg
test
sub
scas
xchg
test
pop
push
shl
cmp
shr
and
mov
xor
cmp
pop
and
(bad)
in
mov
popf
sbb
push
and
cwde
push
leave
xchg
loopne
repz
mov
(bad)
ins
and
cwde
mov
and
cmp
mov
pop
hlt
mov
push
and
repnz
add
adc
inc
jb
jo
inc
jb
inc
(bad)
fdiv
xchg
and
or
cmp
xchg
and
dec
je
(bad)
cmp
mov
inc
jmp
inc
add
xor
int3
neg
add
mov
xchg
pushf
sub
cmp
dec
mov
dec
pop
push
mov
mov
and
cmp
inc
clc
test
or
pop
push
inc
jb
shl
clc
leave
mov
stc
imul
mov
pusha
xchg
mov
and
sbb
hlt
and
xchg
or
add
dec
nop
sbb
xchg
sbb
call
xchg
add
mov
mov
sti
retf
sbb
push
and
dec
push
leave
xchg
hlt
adc
in
mov
mov
mov
inc
xor
ins
jb
inc
jb
movs
mov
shr
sti
add
xchg
sbb
and
js
xchg
sbb
mov
mov
leave
xchg
in
cld
sub
jecxz
jmp
fcmovbe
mov
push
xchg
and
call
adc
inc
add
push
ins
test
movs
dec
inc
ins
rcr
test
mov
cwde
inc
xor
lods
inc
mov
pop
mov
lock
or
int3
xchg
sbb
sbb
xor
fcmovbe
mov
pop
pusha
inc
jl
inc
cwde
and
pushf
mov
dec
fadd
and
leave
clc
add
adc
dec
mov
add
fwait
sub
push
add
jo
jl
inc
jb
mov
pop
int3
loopne
dec
and
add
stos
jp
cmp
sub
sbb
and
pushf
lods
or
fisub
imul
and
xchg
and
sbb
inc
and
xchg
and
xchg
and
xchg
je
mov
mov
fcom
add
adc
cmp
leave
xchg
sbb
push
xchg
mov
mov
aam
leave
xchg
sbb
clc
adc
dec
mov
cmp
dec
mov
push
push
mov
in
enter
(bad)
in
or
cmp
jp
inc
push
pop
pop
(bad)
push
nop
and
mov
in
shl
and
sbb
xchg
mov
in
or
(bad)
jecxz
inc
adc
or
fwait
test
imul
inc
fcmovbe
cmps
ficom
or
sub
and
add
pop
mov
das
push
stos
js
mov
stos
in
pop
test
les
adc
leave
push
xor
mov
or
js
stos
in
pop
nop
inc
test
dec
scas
xchg
rcr
leave
push
repnz
push
inc
or
jb
pop
push
ficomp
stos
in
aam
xchg
dec
and
adc
pop
push
xlat
aad
sub
push
cmps
mov
push
and
sub
dec
mov
add
aas
mov
xchg
cmps
xstore-rng
cmps
inc
jmp
outs
scas
xchg
stos
mov
mov
mov
mov
pand
inc
xchg
arpl
aas
sub
test
cmps
cmp
shl
mov
leave
push
rcl
shr
(bad)
scas
xchg
test
and
adc
push
or
push
leave
push
mov
mov
rcl
in
cld
pop
push
xor
pop
adc
inc
xor
adc
jo
xlat
push
fwait
stos
cmp
push
adc
rcl
fcomp
push
add
sub
aad
sbb
sub
push
lds
lock
ret
mov
aas
sbb
js
pushf
mov
and
xchg
push
leave
add
in
dec
cmps
sbb
and
scas
xchg
mov
in
mov
jb
xchg
and
jns
adc
xchg
and
les
sti
push
fcmovbe
cmps
mov
inc
inc
pop
and
xchg
and
ins
sbb
mov
aam
hlt
sbb
nop
cmp
pop
adc
sbb
xchg
sub
leave
xchg
sbb
inc
push
fs
xchg
sbb
mov
lods
enter
leave
fdiv
aas
push
sbb
inc
pusha
sbb
mov
dec
js
mov
cwde
xchg
mov
xchg
or
inc
sbb
cmp
xchg
sbb
pop
push
sbb
mov
cmp
leave
xchg
fsubr
sbb
in
shl
and
xchg
sbb
xchg
sbb
inc
cmp
mov
and
in
and
jo
sbb
inc
xor
test
sbb
dec
fdiv
dec
xchg
fs
in
pop
and
inc
hlt
mov
leave
nop
cmp
rol
sbb
ficom
mov
add
and
test
and
jb
enter
and
call
cmp
ss
lahf
pusha
inc
mov
test
fs
push
leave
lock
je
in
mov
dec
mov
or
and
xchg
and
and
xchg
lods
fmul
es
xchg
or
push
je
sbb
xchg
cwde
enter
leave
hlt
sbb
dec
inc
sbb
dec
mov
push
and
repnz
xor
mov
add
inc
rol
(bad)
jbe
and
rol
inc
pop
test
fisub
push
and
sbb
sub
test
mov
inc
sub
pop
mov
add
inc
xchg
mov
ror
and
scas
enter
xchg
and
and
cmp
xchg
and
pop
ins
jl
push
ret
and
push
sub
inc
fs
push
in
cld
and
sub
push
sub
xchg
pop
mov
inc
mov
and
(bad)
cld
sbb
xchg
sbb
shl
sub
leave
xchg
sbb
push
pusha
je
leave
xchg
sbb
mov
cmp
leave
xchg
cld
and
mov
inc
je
(bad)
les
addr16
and
fisub
test
lods
mov
int3
fdiv
xchg
or
and
xor
xchg
sbb
adc
mov
xor
cld
xor
sbb
and
xchg
or
adc
mov
loop
and
xor
dec
add
cmp
test
pop
enter
jmp
cmp
xor
and
jb
pushf
mov
in
inc
rcl
call
ins
and
pushf
leave
xchg
sbb
mov
fadd
add
dec
ins
xor
nop
xor
je
ficom
or
outs
aad
sub
and
cmp
jecxz
adc
mov
sub
xlat
pop
ss
jb
and
shl
leave
or
leave
ror
inc
sub
and
xor
jo
push
add
dec
nop
cmp
xchg
mov
or
and
mov
cmp
iret
cmp
dec
mov
and
mov
adc
xor
jb
ins
mov
and
jb
enter
add
mov
inc
mov
or
sbb
dec
mov
dec
inc
pusha
xor
in
adc
ins
inc
jb
inc
pushf
mov
and
jb
loopne
cmp
and
push
test
in
sbb
shl
pusha
aas
inc
repnz
xchg
mov
dec
mov
rol
and
in
or
inc
mov
adc
fcmovbe
inc
push
and
nop
cmp
cld
sbb
sbb
xchg
sbb
fs
mov
xchg
mov
sbb
inc
loopne
mov
sbb
adc
inc
adc
jae
inc
xor
cmp
ficom
add
inc
jb
inc
cmp
leave
push
cld
or
in
mov
inc
(bad)
in
mov
inc
xchg
inc
xor
adc
mov
sbb
inc
inc
pop
inc
dec
and
inc
inc
lds
add
nop
mov
test
mov
aam
in
xchg
or
and
inc
aad
dec
mov
aas
push
fwait
push
js
iret
pushf
(bad)
leave
mov
mov
int3
(bad)
xchg
and
fimul
and
xor
xchg
and
push
pusha
jl
cmp
and
xchg
int3
loopne
sbb
nop
cmp
dec
je
aad
int3
xchg
mov
inc
mov
jecxz
dec
adc
inc
add
xchg
mov
sub
cmp
add
cmp
and
cmp
imul
jb
inc
jb
mov
inc
in
or
xchg
and
xchg
sub
cmp
nop
and
xchg
and
fdiv
sbb
xchg
or
dec
pusha
xchg
sbb
xchg
js
fs
push
leave
call
in
mov
dec
mov
dec
int3
in
add
xorps
push
dec
inc
pusha
add
dec
and
jbe
cwde
jmp
jne
bound
pop
mov
adc
cmp
pop
mov
jmp
pop
mov
neg
in
int3
or
jno
adc
or
jne
popf
dec
call
push
mov
iret
and
fidivr
or
pusha
adc
inc
ret
xor
and
jne
pop
cmp
rol
mov
clc
push
sbb
xor
mov
push
dec
cs
jne
jae
adc
rol
ror
xchg
jmp
or
cs
jo
jb
jno
(bad)
(bad)
jmp
and
imul
jp
and
jb
popa
push
data16
and
xor
xor
outs
(bad)
jg
ja
ja
imul
imul
push
ins
jo
ja
fs
je
popa
data16
mov
and
outs
and
je
cmps
(bad)
push
jmp
push
jae
jb
bound
ja
and
ss
aaa
and
imul
jnp
(bad)
jp
bound
js
jae
jp
jno
outs
ins
inc
jb
cs
dec
inc
js
outs
and
imul
imul
pop
sub
push
bound
fs
addr16
jno
gs
ins
fcomi
es
outs
jns
xor
xor
jp
ins
ins
mov
es
(bad)
jmp
cmp
or
jge
fs
je
arpl
test
mul
adc
gs
ret
add
mov
je
and
jp
std
add
dec
push
retf
jne
jb
push
xor
addr16
jae
jns
jae
xor
into
push
ins
mov
gs
cmp
addr16
adc
jp
js
jb
jb
push
push
out
lock
dec
and
ja
push
sbb
imul
add
inc
jbe
in
push
sbb
jo
outs
dec
imul
and
(bad)
fsub
push
mov
pop
shl
add
pop
push
test
lds
inc
inc
ins
and
jp
(bad)
(bad)
adc
lea
ins
dec
test
and
arpl
bound
push
push
sbb
popa
ins
je
ja
mov
dec
outs
push
and
es
xchg
cbw
ins
mov
bound
sub
ja
jnp
mov
jno
sahf
jae
dec
and
ins
add
dec
icebp
add
push
fs
imul
mov
inc
ins
push
dec
js
imul
push
cmp
dec
cld
jno
jne
mov
or
pusha
jmp
js
jne
lods
imul
add
push
test
or
jb
in
loopne
fmul
jo
push
ins
outs
aam
sbb
xor
jno
das
mov
push
inc
je
popa
outs
ja
push
jo
add
xor
idiv
xor
and
gs
test
jbe
fdiv
stos
adc
push
dec
arpl
inc
pop
jl
outs
imul
into
inc
jb
jo
outs
push
xor
bound
fs
push
ins
jmp
and
outs
inc
mov
(bad)
sub
(bad)
arpl
jb
out
ja
jo
jb
or
add
fdivr
adc
addr16
pusha
sbb
adc
popa
add
jno
and
test
js
add
imul
es
mov
loop
sahf
push
mov
or
outs
(bad)
arpl
sbb
or
ds
cld
inc
or
jb
js
jae
jns
dec
popa
or
sbb
pusha
je
adc
adc
data16
and
arpl
sub
cmp
and
cmp
cmp
cli
popa
mov
pop
xor
aam
fs
test
jp
repnz
adc
add
inc
mov
adc
(bad)
add
push
jns
xchg
jns
gs
mov
sub
xchg
and
or
sub
call
xor
xor
cmp
inc
jno
cmps
ins
ror
bound
and
xor
or
jno
scas
xchg
lock
dec
stos
es
push
jmp
pushf
arpl
or
push
and
test
inc
fwait
loopne
je
mul
xchg
mov
pop
mov
xor
outs
inc
adc
inc
xlat
int3
shr
cmp
sub
imul
adc
pop
and
sbb
mov
ja
and
je
cwde
ss
dec
adc
outs
bound
push
or
fs
ins
or
sub
fsubr
pushf
aas
jge
leave
push
sbb
js
loop
push
(bad)
jbe
lods
cmp
fs
pop
fidivr
in
push
and
inc
add
cmp
sahf
bound
xor
jo
repnz
sub
push
jl
jl
fs
shl
push
push
add
sahf
mov
push
mov
movs
fsubr
or
(bad)
hlt
jp
imul
fdivr
add
js
ja
ja
mov
push
pusha
pop
cld
cmp
xor
out
gs
adc
aam
adc
and
pushf
or
in
addr16
jmp
in
shl
or
adc
sbb
push
movs
test
cmps
inc
outs
cli
(bad)
push
pusha
sub
or
inc
add
test
jmp
out
pop
or
adc
dec
add
sahf
pop
bound
or
clc
scas
pop
adc
pop
push
aas
not
aas
or
sbb
xor
mov
inc
(bad)
mov
add
xchg
pop
xchg
push
push
push
mov
pop
dec
add
ja
inc
jb
push
or
dec
push
int
push
pop
repz
pop
cmpxchg
or
pop
repz
push
push
dec
push
push
mov
push
adc
ror
push
adc
jmp
mov
les
mov
xchg
jbe
(bad)
jbe
push
retf
mov
ins
and
mov
ins
test
dec
cli
dec
mov
test
mov
ins
dec
mov
sbb
jae
adc
pop
jnp
nop
lock
sar
inc
or
dec
or
ds
or
pop
sbb
mov
dec
inc
adc
dec
pop
add
mov
push
dec
mov
or
pop
or
push
adc
inc
or
mov
dec
mov
push
mov
push
pop
mov
xchg
pop
adc
mov
pop
movsx
or
xchg
fidiv
jle
and
mov
fild
push
add
mov
inc
sbb
or
cmp
inc
ja
inc
xchg
push
pop
or
dec
pop
adc
or
(bad)
pop
push
pop
inc
xchg
out
clc
inc
add
push
pop
or
sbb
into
adc
lahf
getsec
mov
mov
push
pop
or
or
or
pop
adc
dec
push
das
pop
push
inc
mov
fisubr
mov
das
ja
inc
(bad)
sbb
inc
mov
jbe
dec
push
xor
pop
popa
push
ss
mov
pop
push
push
or
clc
scas
js
gs
mov
pop
or
inc
push
inc
cmps
dec
inc
pop
jno
stos
jbe
pop
data16
pop
jbe
adc
mov
xchg
mov
add
bsf
dec
inc
adc
imul
(bad)
sbb
popa
dec
or
aaa
sub
push
inc
inc
add
(bad)
fist
xchg
adc
mov
jge
mov
inc
and
xchg
jae
pop
xchg
mul
mov
adc
outs
or
mov
xchg
out
or
add
add
pop
xchg
aas
mov
push
push
fmul
pop
add
xchg
mov
pop
dec
dec
jno
mov
inc
push
dec
inc
fcom
pop
aad
sbb
sbb
out
add
pop
push
sbb
mov
ss
adc
mov
or
test
xchg
data16
jmp
dec
mov
adc
mov
jg
ins
mov
mov
nop
push
xchg
inc
xor
mov
stos
scas
scas
push
iret
scas
jbe
ins
fwait
data16
out
mov
(bad)
dec
mov
les
mov
out
push
push
mov
inc
pop
(bad)
(bad)
mov
aas
mov
pop
aas
cmps
jnp
aas
mov
pop
aas
mov
inc
aas
mov
sbb
sahf
jnp
aas
mov
scas
popf
ds
or
adc
ja
sub
ds
jne
cs
jle
add
out
or
ret
push
sub
adc
dec
xchg
arpl
push
push
push
cld
add
mov
inc
jmp
inc
sbb
push
push
sbb
pop
stc
std
cmc
push
or
jmp
mov
add
sbb
pop
mov
inc
fisubr
shl
and
dec
or
movs
hlt
outs
cmp
adc
add
arpl
sahf
inc
push
xor
ss
adc
add
movsx
sbb
adc
popf
sbb
inc
outs
cmp
or
je
push
jg
cs
cmp
clc
and
dec
jno
push
(bad)
push
xchg
test
movs
dec
pop
daa
ins
mov
jbe
daa
xor
or
mov
inc
inc
ins
push
pop
dec
fs
xlat
mov
dec
pop
unpcklps
or
mov
push
pop
sbb
push
outs
dec
or
jnp
out
out
or
das
jmp
addr16
add
push
jmp
outs
setg
jge
xchg
xchg
pop
pop
pop
cs
dec
neg
int
ja
cmps
inc
jo
(bad)
inc
add
inc
jecxz
pop
ss
pop
ja
add
cdq
push
cld
jl
cmps
dec
push
add
add
loopne
adc
push
add
cmps
inc
pop
out
(bad)
cs
add
daa
inc
inc
push
sbb
push
push
push
daa
jbe
jle
mov
or
dec
push
adc
inc
pop
mov
jbe
or
mov
inc
pop
pop
mov
mov
out
movs
out
inc
pop
dec
push
out
daa
jbe
jne
mov
push
adc
inc
push
idiv
bsr
dec
cmps
and
cmp
mov
popa
mov
loopne
(bad)
daa
aas
mov
mov
orps
ja
inc
inc
or
pop
adc
clc
add
inc
pop
adc
or
mov
cmp
ja
dec
sbb
inc
stc
jae
mov
inc
adc
push
inc
out
add
icebp
je
out
dec
jecxz
push
cmp
pop
icebp
jb
adc
fdivrp
scas
dec
loopne
xchg
in
adc
pop
and
outs
sbb
add
sbb
inc
and
add
pop
jg
pushf
js
jne
add
inc
push
lock
add
sbb
inc
mov
or
mov
push
(bad)
out
inc
or
push
sub
dec
data16
pop
imul
add
sbb
or
or
push
arpl
iret
jnp
aas
mov
push
mov
pop
(bad)
mov
push
mov
pop
push
mov
daa
adc
ins
push
mov
sti
imul
mov
inc
push
aas
push
push
mov
mov
mov
cmps
adc
push
dec
inc
aas
daa
jg
neg
iret
mov
mov
pop
jbe
jbe
mov
mov
mov
push
push
inc
or
pop
dec
add
pop
push
mov
push
out
push
push
mov
inc
scas
dec
push
adc
or
jl
adc
loopne
scas
xlat
pop
mov
mov
pushf
clc
addr16
push
jg
sbb
jg
idiv
xchg
mov
lds
xchg
mov
or
sbb
dec
data16
cmps
push
mov
imul
push
pop
mov
pop
inc
shl
ret
scas
push
(bad)
or
dec
pop
ja
inc
mov
mov
push
mov
jmp
rol
adc
xlat
push
outs
push
push
mov
pop
shr
pop
add
inc
inc
pop
loope
call
iret
test
sbb
aas
es
std
or
or
or
das
xor
add
or
(bad)
js
mov
mov
pop
xchg
xcrypt-ctr
cmps
pop
lods
lods
jp
mov
mov
push
mov
rol
es
call
adc
inc
pop
shld
icebp
push
push
or
mov
pop
test
xchg
cs
dec
push
outs
pop
enter
cmps
sbb
or
jp
mov
push
push
mov
loopne
sbb
fisttp
mov
push
adc
lahf
aas
mov
mov
daa
mov
pop
pop
mov
inc
inc
neg
test
cmp
es
mov
popa
pop
pop
adc
sbb
addr16
push
inc
adc
movs
aaa
inc
dec
pop
adc
(bad)
hlt
(bad)
xlat
jno
es
sbb
mov
nop
inc
push
add
add
cmp
adc
dec
ficom
mul
aad
inc
jl
lss
push
inc
ret
sbb
adc
inc
adc
popa
(bad)
aas
(bad)
call
push
jnp
aas
sub
aas
xor
ret
jnp
adc
ds
fistp
fdivr
and
xor
push
and
aas
and
xor
jle
jnp
push
(bad)
aas
jmp
push
dec
lock
push
pop
xor
dec
inc
pop
adc
and
xchg
push
(bad)
sub
rol
cs
ja
push
lods
or
cmps
ja
mov
scas
fs
push
pop
mov
adc
mov
dec
(bad)
daa
adc
dec
and
(bad)
xor
shrd
cmps
inc
add
aas
ins
inc
aaa
mov
add
dec
jle
push
cmps
adc
call
sub
add
mov
ds
push
or
std
ja
int3
inc
es
xchg
dec
inc
adc
shr
(bad)
mov
pop
outs
stos
add
inc
push
scas
idiv
sbb
jb
scas
and
jo
mov
das
clc
call
pop
ja
sub
addr16
sti
add
xor
add
das
mov
push
mov
adc
(bad)
ins
and
retf
sub
sub
mov
add
addr16
pop
xchg
dec
inc
or
aaa
adc
xlat
pop
mov
adc
jge
dec
fild
push
aas
dec
jecxz
pop
push
dec
sti
or
jecxz
sbb
push
sbb
test
test
push
pop
push
inc
push
or
iret
push
inc
sbb
mov
ds
std
cs
aad
pop
popa
xchg
push
pop
add
push
mov
push
push
pop
adc
inc
add
mov
push
dec
push
mov
(bad)
outs
dec
inc
aas
xor
ins
in
add
xchg
push
or
adc
lock
hlt
xchg
push
or
scas
add
ja
dec
sbb
test
sbb
ins
jnp
mov
push
jmp
inc
xchg
push
push
mov
ds
add
push
lahf
sbb
jo
outs
inc
push
push
sbb
pusha
data16
unpckhps
lahf
push
dec
adc
pop
xor
out
jle
xor
adc
pushf
nop
data16
pop
cmps
inc
pop
aaa
pop
inc
adc
pop
scas
test
js
adc
xor
inc
(bad)
mov
ins
adc
movs
and
idiv
outs
pop
pop
add
mov
pop
add
pop
mov
dec
inc
std
repnz
push
adc
inc
and
loop
mov
stos
icebp
stos
pop
test
pop
add
(bad)
dec
mov
add
hlt
(bad)
movs
add
push
pop
mov
(bad)
fbstp
inc
xor
shl
push
dec
inc
xchg
mov
out
pop
adc
or
mov
jne
push
pop
mov
pop
mov
mov
push
loop
mov
inc
or
(bad)
pusha
push
add
inc
inc
or
mov
add
mov
out
daa
inc
mov
das
adc
addr16
jo
sub
jecxz
xchg
pop
add
inc
pusha
out
pop
(bad)
sar
xchg
adc
(bad)
pop
push
push
pushf
ficom
jg
add
ss
dec
inc
outs
push
push
mov
push
adc
mov
je
xsha256
cmps
push
div
pop
push
not
ins
or
aas
or
lock
xor
cmp
dec
push
add
jo
inc
fist
add
pop
or
pop
shl
sbb
test
aas
dec
push
add
mov
push
pop
or
jmp
nop
inc
xlat
inc
push
div
jmp
push
nop
je
ja
adc
adc
add
push
dec
pop
xchg
jbe
in
(bad)
push
adc
adc
adc
sub
cmps
adc
lock
or
mov
inc
adc
das
mov
jmp
sbb
test
aad
or
sub
push
dec
xchg
pop
outs
movs
push
push
push
sub
pop
div
loop
push
sbb
test
xchg
inc
gs
pop
out
inc
xor
mov
xchg
ss
adc
xchg
(bad)
sub
and
or
pop
pop
mov
add
inc
add
xor
scas
mov
mov
fistp
adc
pusha
(bad)
rol
xchg
push
inc
addr16
in
adc
inc
ins
jbe
mov
push
(bad)
xor
das
inc
outs
push
inc
pop
add
loopne
movs
push
mov
mov
adc
cmps
(bad)
fisubr
sbb
mov
mov
adc
push
xor
(bad)
outs
sbb
dec
mov
out
mov
inc
outs
addr16
sub
lock
mov
push
mov
jg
lods
clc
adc
and
push
stos
add
or
fistp
mov
in
(bad)
mov
jle
aaa
mov
bound
cmps
mov
sbb
and
aas
or
push
scas
ja
push
int3
jo
inc
mov
sub
sbb
adc
dec
ja
fisttp
mov
js
dec
sti
add
sbb
mov
mov
mov
push
add
cmp
mov
xor
dec
pop
or
icebp
scas
ja
mov
je
xor
adc
push
xchg
das
mov
jl
gs
hlt
xor
imul
jmp
lods
cmps
mov
push
dec
inc
push
or
stc
sgdtd
or
xchg
dec
inc
push
sahf
loopne
mov
jo
sub
add
lods
loop
dec
mov
movs
rcr
es
adc
mov
add
movd
dec
jle
cmps
cmp
cmp
mov
push
adc
add
xor
ret
push
outs
lahf
sbb
data16
mov
pop
jg
xlat
sbb
inc
or
cmps
push
out
or
es
test
inc
cmp
out
inc
outs
dec
or
add
adc
pop
fsubr
add
adc
dec
add
jbe
pop
push
adc
ret
push
dec
inc
inc
or
cmp
mov
push
or
adc
cli
push
sbb
inc
inc
adc
push
fcmovb
icebp
fisttp
aas
push
or
cvtps2pd
add
jg
push
and
ja
iret
aas
out
paddd
add
das
(bad)
xchg
ficom
mov
pop
call
bnd
dec
dec
xor
ficomp
sti
jg
ja
addr16
push
sahf
movs
ficomp
jo
mov
fiadd
mov
push
jecxz
dec
(bad)
push
aaa
addr16
(bad)
xchg
lods
js
inc
adc
push
sahf
icebp
ficomp
mov
scas
mov
fiadd
inc
mov
mov
sahf
mov
jo
loopne
and
icebp
jnp
adc
mov
inc
es
das
data16
cli
pop
aas
cmps
jnp
fdivrp
cmp
push
push
out
fstp
mov
xchg
out
call
mov
fstp
push
movs
fxch
lahf
sub
sti
(bad)
(bad)
jg
add
loopne
add
or
es
add
loopne
add
loopne
add
loopne
jmp
std
jne
adc
add
jmp
test
(bad)
rcl
inc
xchg
xlat
adc
and
ror
icebp
rcr
aas
iret
fisttp
inc
fstp
retf
leave
xlat
lea
retf
fild
pushf
(bad)
jmp
rol
cmp
xlat
inc
and
ror
add
inc
push
outs
icebp
adc
sbb
xchg
add
dec
mov
arpl
test
push
dec
adc
inc
push
adc
push
jbe
adc
push
mov
test
inc
or
push
jne
pop
or
mov
mov
sbb
push
inc
push
push
out
es
or
out
jae
mov
add
inc
scas
daa
outs
loopne
push
add
or
mov
(bad)
push
ja
cmps
jp
bound
cmp
ja
es
popf
dec
inc
adc
xchg
add
and
mov
adc
cmp
add
test
pop
jb
dec
enter
pushf
and
xchg
and
dec
loope
xchg
xor
inc
pop
push
add
cmp
inc
or
dec
pop
sub
pop
xor
test
add
jo
inc
cld
add
popa
dec
add
das
ret
fisub
test
test
sbb
movs
adc
mov
mov
pop
add
sbb
rcr
out
push
sahf
inc
pop
xchg
sbb
pop
adc
aaa
or
push
das
out
pop
das
arpl
das
movq
adc
push
pop
aaa
cli
fisubr
add
aaa
and
dec
mov
add
scas
sbb
jg
loope
adc
jmp
pmuludq
push
push
scas
sbb
(bad)
pop
mov
fld
or
loope
fisub
outs
or
or
(bad)
mov
and
sbb
test
cmps
xor
jo
(bad)
aas
scas
or
movs
jo
adc
cmp
inc
es
and
xchg
jge
mov
inc
pusha
inc
xlat
push
bound
mov
(bad)
in
out
sbb
ficomp
sub
ret
dec
inc
pop
or
(bad)
inc
push
pop
pop
push
test
or
out
movs
out
adc
push
adc
or
xor
aam
xor
popa
cwde
xchg
push
daa
jg
push
and
mov
cmps
(bad)
or
push
xor
emms
add
ss
cdq
outs
add
loopne
aaa
das
dec
adc
mov
mov
ja
pop
inc
xchg
ss
scas
inc
inc
rcr
lahf
pop
pop
push
fbstp
add
jg
es
mov
push
push
std
stos
les
movs
pop
add
adc
or
jle
jle
add
mov
dec
xchg
push
inc
dec
movs
pop
inc
xchg
mov
and
sbb
mov
sub
mov
mul
push
and
pop
inc
add
or
lahf
cwde
and
dec
xchg
scas
and
xchg
mov
pop
push
mov
and
and
aaa
pop
das
sbb
mov
push
jg
inc
cwde
sbb
pop
cmps
(bad)
jmp
pop
push
mov
and
das
mov
loope
add
popa
and
push
push
pop
or
cmps
mov
cmps
inc
push
sahf
bound
mov
mov
pop
push
(bad)
push
inc
dec
sti
xor
or
push
lahf
add
icebp
push
pop
inc
jb
repnz
cmps
or
adc
daa
mov
adc
mov
frstor
gs
jle
sbb
pop
xchg
dec
push
jg
ja
push
movs
push
(bad)
mov
js
adc
adc
sahf
loopne
mov
push
push
int
loope
cs
add
xadd
sub
dec
mov
add
rcl
cmp
das
add
mov
mov
popa
pop
mov
push
push
or
xor
rcl
(bad)
fisttp
xchg
aaa
(bad)
ds
cmp
or
test
xchg
push
add
data16
mov
xchg
fld
xchg
hlt
rcr
int
mov
and
push
cmps
push
icebp
scas
adc
(bad)
or
(bad)
jg
push
(bad)
mov
adc
(bad)
adc
je
push
into
sub
sbb
adc
push
pop
sub
xor
out
adc
pop
xor
pop
inc
xor
add
sbb
shl
xchg
lock
es
lock
out
or
push
test
xor
daa
or
xlat
js
jb
es
inc
dec
mov
mov
push
mov
mov
cmp
das
inc
imul
cld
dec
test
dec
or
ds
lahf
mov
clc
pop
aas
push
xchg
xor
mov
test
adc
movs
push
inc
pop
dec
inc
pop
cmps
or
adc
aad
stos
inc
or
(bad)
mov
push
loope
jg
mov
sbb
outs
or
pop
rol
adc
sbb
push
cs
add
adc
daa
or
(bad)
inc
movs
push
or
outs
out
xchg
jbe
cmps
or
push
sbb
pop
and
push
pop
mov
daa
and
pop
hlt
cmp
and
mov
into
pop
test
dec
jmp
inc
adc
push
lgs
mov
inc
adc
or
adc
mov
push
scas
pop
jp
outs
cli
or
mov
pop
mov
dec
mov
jle
inc
ds
push
dec
adc
sahf
pusha
pop
or
mov
nop
outs
ja
nop
je
and
lahf
mov
mov
sbb
inc
ret
jnp
and
out
test
call
aas
movhps
inc
mov
inc
xchg
inc
dec
xchg
popa
inc
iret
cmp
pop
inc
inc
icebp
add
pop
sahf
xchg
pop
pop
test
mov
sub
pop
sub
cdq
mov
outs
scas
mov
add
pop
push
pop
(bad)
scas
daa
xchg
jo
fcmovu
test
pop
(bad)
scas
in
push
clc
fnsave
push
fild
(bad)
sub
cmps
mov
arpl
mov
pop
dec
lahf
jo
movs
jbe
les
dec
and
sbb
xor
enter
xor
repz
xor
dec
dec
sub
push
or
add
and
push
push
or
into
out
add
push
dec
add
pop
dec
mov
iret
and
inc
(bad)
(bad)
xor
hlt
lock
(bad)
xchg
dec
xor
ja
mov
mov
das
cmps
pop
inc
daa
dec
add
inc
jnp
sbb
dec
test
out
and
mov
inc
(bad)
repz
inc
inc
sbb
stos
retf
and
push
in
dec
ins
xchg
dec
sub
push
xor
adc
and
and
repz
repz
pop
pusha
inc
mov
pop
lahf
inc
sbb
xor
jnp
xchg
push
sub
out
or
xor
movs
mul
loopne
rcl
add
cmps
add
or
mov
js
or
rcl
gs
mov
mov
xchg
pop
push
iret
aas
or
mov
pop
icebp
add
sbb
inc
sbb
scas
add
push
jmp
xor
das
and
mov
inc
cmps
prefetch
ja
lock
and
or
std
aaa
push
(bad)
loop
cmc
adc
or
cmps
push
ror
xchg
mov
in
mov
and
mov
cmp
adc
jnp
cmp
(bad)
adc
cmp
retf
ins
or
iret
mov
pop
mov
inc
pop
mov
sub
adc
pop
push
(bad)
adc
xchg
enter
push
(bad)
pop
sbb
mov
out
inc
jmp
cs
add
or
repz
aas
adc
xor
ds
test
das
(bad)
lock
pop
mov
push
pop
not
inc
outs
adc
mov
pop
mov
jae
and
paddd
das
mov
cwde
in
mov
aaa
xor
mov
add
ins
adc
or
out
dec
outs
pop
mov
push
cmps
push
outs
pusha
xor
daa
jae
add
pusha
aas
jbe
in
push
adc
inc
push
es
sbb
shl
push
cld
faddp
or
add
fist
or
int3
or
inc
jg
add
or
inc
cwde
pusha
adc
inc
pop
mov
(bad)
inc
psllw
add
cld
inc
add
add
mov
mul
std
xor
scas
cmps
dec
push
fidivr
test
push
out
or
push
es
sub
es
dec
ror
mov
ins
push
adc
fild
fsubr
push
out
scas
std
add
pushw
add
inc
pop
push
out
adc
jnp
adc
std
adc
add
adc
pop
(bad)
jg
outs
add
not
jo
xchg
adc
and
fild
call
pop
push
loopne
add
adc
push
cld
pusha
je
in
push
loop
push
push
out
mov
dec
xchg
adc
add
shl
ja
jae
xor
shr
js
or
inc
cmp
mov
push
mov
mov
(bad)
push
ss
das
pusha
jle
xchg
fwait
scas
ja
jbe
out
xlat
xchg
aaa
adc
fcom
or
mov
mov
xor
inc
(bad)
data16
sub
push
cmps
xor
sub
or
mov
add
add
pop
ja
jg
fdivp
call
add
in
or
add
xchg
or
dec
lock
adc
add
pop
inc
icebp
sub
outs
sbb
or
call
or
push
jecxz
pop
and
bound
adc
and
popa
add
lods
pop
sub
mov
xor
out
lock
imul
pop
mov
inc
aaa
mov
mov
mov
arpl
mov
cld
cmc
jno
add
add
popa
das
daa
xchg
sub
sub
test
push
dec
pop
cmp
(bad)
sahf
push
push
adc
clc
xchg
jbe
jp
xchg
gs
jnp
popf
scas
call
data16
mov
sbb
test
mov
cli
arpl
mov
ins
pop
push
sti
(bad)
(bad)
call
popa
dec
or
mov
ins
inc
xor
inc
dec
test
sahf
push
minps
or
pop
dec
bound
push
mov
nop
out
pop
push
push
out
sahf
mov
or
xchg
call
icebp
sub
push
pop
pop
mov
fisubr
(bad)
outs
pop
popf
loop
and
xchg
add
cmps
push
inc
cmovle
add
and
inc
popf
fimul
mov
addr16
inc
enter
(bad)
mov
mov
inc
outs
jbe
mov
xchg
adc
push
add
and
ins
mov
pop
mul
or
cmp
push
test
and
add
add
retf
push
jbe
jbe
das
popf
lahf
or
jnp
movs
jecxz
inc
adc
mov
dec
pop
neg
addr16
push
sub
sbb
neg
push
gs
jg
in
add
adc
movs
inc
jae
sbb
pop
(bad)
dec
push
addr16
pusha
jp
and
mov
xchg
(bad)
jbe
add
fisttp
mov
push
xchg
out
call
push
push
mov
xchg
mov
inc
jae
jg
and
adc
jnp
addr16
push
or
push
inc
dec
das
punpckhbw
and
mov
or
ins
scas
adc
adc
sahf
push
and
es
ins
(bad)
adc
xchg
add
in
adc
mov
scas
out
rcl
adc
shl
or
cmps
push
add
(bad)
gs
push
inc
xchg
(bad)
bound
inc
or
stos
fidiv
(bad)
xchg
jl
pop
shl
scas
or
adc
or
iret
mov
movs
or
aaa
jg
movs
sahf
inc
loopne
mov
mov
cmp
pop
push
mov
inc
outs
(bad)
es
or
push
xor
scas
push
stos
sbb
gs
xor
pop
add
inc
sbb
push
les
push
adc
add
mov
adc
xchg
or
fwait
dec
xchg
mov
mov
or
imul
test
add
pop
mov
movs
mov
add
pop
xor
or
mov
pop
push
or
(bad)
daa
mov
sbb
mov
push
add
push
pop
lahf
dec
add
ret
inc
outs
push
out
mov
dec
shl
add
pusha
cs
inc
mov
aaa
daa
iret
push
add
enter
mov
inc
lahf
or
push
div
fld
and
push
adc
dec
inc
push
mov
inc
cmp
push
push
add
test
add
scas
dec
pop
or
out
mov
mov
mov
push
test
test
push
fcomip
outs
das
add
push
and
pop
adc
adc
imul
cs
cmp
daa
(bad)
pop
add
jecxz
mov
pop
(bad)
daa
(bad)
pop
sbb
add
call
iret
push
aaa
sbb
dec
push
sbb
sbb
or
push
jbe
imul
mov
mul
movs
pop
or
ja
pushf
es
cmc
mov
repnz
fisttp
mov
sub
push
and
sbb
pop
shl
or
mov
jle
aas
cmps
loope
mov
dec
add
inc
adc
push
inc
mov
into
(bad)
out
sub
xor
out
add
daa
adc
fisttp
mov
test
mov
cwde
inc
js
mov
sub
das
dec
fidivr
mov
adc
lahf
pop
mov
mov
movs
push
outs
mov
aaa
inc
inc
inc
lods
(bad)
mov
mov
inc
outs
gs
fs
fisttp
inc
pop
adc
dec
pop
out
cmp
fild
ds
push
mov
cmps
sub
push
sbb
inc
iret
pushw
mov
xor
sbb
push
in
pop
inc
mov
or
div
mov
test
and
jo
xchg
ja
das
push
loop
test
adc
cdq
popa
pusha
and
xor
mov
nop
aas
push
std
xchg
xchg
jbe
sub
jbe
neg
ins
jl
inc
cwde
push
das
push
ror
popf
jno
xor
or
or
mov
adc
inc
std
fwait
jecxz
mov
jmp
push
popw
scas
inc
mov
scas
add
and
mov
not
movs
test
pop
cmp
out
inc
pop
neg
mov
xor
pop
fist
outs
lahf
aaa
inc
ja
fs
jns
test
mov
ror
das
imul
jl
pop
adc
jg
test
call
ja
out
add
sbb
push
or
cmps
add
mov
xlat
xchg
or
imul
or
ficomp
adc
push
lahf
push
inc
push
mov
ins
cwde
aaa
call
jo
dec
adc
fimul
push
inc
daa
inc
push
aad
xchg
fld
ja
xchg
mov
(bad)
out
jae
(bad)
clc
dec
jae
inc
bound
mov
repnz
push
or
or
adc
test
jo
outs
aaa
mov
aaa
loopne
(bad)
(bad)
push
enter
aaa
ja
rol
jb
nop
out
lss
dec
clc
dec
xor
(bad)
adc
mov
cdq
push
xchg
seto
sahf
(bad)
and
or
jo
mov
and
push
push
add
addr16
push
xor
pop
adc
imul
add
lahf
or
mov
and
iret
cmp
mov
fisttp
aaa
ja
add
adc
xchg
mov
outs
push
jle
adc
rcl
mov
push
mov
das
lods
pop
outs
xchg
push
or
mov
jbe
push
scas
ja
ja
lahf
push
lea
aad
push
sub
rcr
or
das
jne
mov
mov
outs
pop
scas
sbb
dec
inc
sbb
pop
add
xlat
xor
push
or
mov
ror
ja
sahf
mov
and
and
stos
pop
inc
cmps
jae
arpl
xor
rol
pop
push
outs
push
movs
mov
add
adc
movs
push
mov
jno
or
push
sub
pop
bnd
fidiv
cmovae
fs
jnp
inc
scas
mov
adc
(bad)
aaa
lods
sbb
adc
enter
dec
add
inc
inc
or
inc
inc
lods
adc
ja
pop
mov
ja
xchg
adc
inc
pop
sub
gs
sub
pop
xchg
jle
outs
inc
inc
xor
push
pop
daa
mov
jle
pop
imul
dec
test
mov
push
jg
test
sti
sub
jae
pop
or
mov
push
and
movs
add
jo
xor
aad
adc
dec
mov
es
cmps
sub
adc
dec
les
lahf
cmps
mov
mov
scas
jge
and
mov
scas
or
stc
movs
or
push
xor
add
aaa
mov
jmp
cmp
pusha
(bad)
inc
push
mov
push
adc
jb
cmps
ror
cdq
into
(bad)
adc
mov
call
test
test
jbe
out
ds
xchg
pop
fs
or
pop
sub
in
rcl
xor
ja
scas
adc
jle
adc
sub
pop
mov
sbb
sbb
jb
ss
mov
lock
xchg
data16
push
je
cmp
push
movlhps
fadd
fistp
mov
push
ds
push
push
mov
pusha
add
add
daa
mov
add
xchg
(bad)
add
mov
out
mov
add
or
sbb
push
data16
aaa
test
add
ret
das
mov
outs
lods
rcr
jbe
inc
inc
add
or
loopne
cmps
jp
pusha
mov
(bad)
pop
scas
sbb
mov
xor
dec
inc
inc
mov
cmp
outs
push
inc
dec
ins
nop
movs
mov
sub
shl
mov
dec
jg
or
push
cmps
movs
inc
xchg
dec
and
fdivrp
adc
push
push
dec
inc
ins
inc
and
inc
add
jbe
or
or
mov
lahf
ja
dec
inc
push
inc
adc
xchg
mov
cdq
mov
inc
add
inc
(bad)
pop
push
pop
mov
aad
adc
adc
cs
test
pop
inc
(bad)
dec
inc
push
retf
xor
xchg
and
fisttp
inc
cmps
dec
ret
push
das
or
jmp
lock
xchg
ret
(bad)
rol
aad
push
adc
mov
xor
repnz
cmps
inc
(bad)
das
adc
add
das
cld
push
jecxz
das
push
into
out
xor
(bad)
cmp
rol
int
ss
xor
xlat
lea
or
rcr
push
add
jl
inc
(bad)
(bad)
aam
cmp
push
xor
aad
xor
push
leave
fistp
fdiv
int3
pop
dec
cmps
ret
jbe
retf
push
sbb
int3
scas
popa
dec
adc
data16
scas
out
adc
inc
(bad)
adc
adc
(bad)
cmp
addr16
lahf
jecxz
sbb
inc
es
scas
sbb
pop
sub
mov
add
out
outs
dec
dec
and
lock
(bad)
fmulp
xchg
cmp
pop
add
ins
jo
cld
leave
test
jg
jae
test
pop
cmps
nop
cmp
and
bound
jnp
adc
call
scas
cmp
mov
into
in
hlt
(bad)
cmc
stos
xlat
jo
sub
push
nop
loopne
sub
lahf
bound
and
jle
scas
jno
or
mov
(bad)
xor
adc
outs
bound
push
push
inc
mov
(bad)
mov
mov
push
(bad)
shl
and
xchg
inc
adc
loopne
xor
rcr
aas
or
jmp
inc
call
fstp
pop
or
pop
dec
sbb
jo
lods
xchg
cli
push
out
mov
sub
or
test
pop
dec
push
add
xchg
add
mov
pop
daa
xor
pop
mov
aas
jle
ins
sbb
push
push
out
cs
adc
xchg
sbb
mov
or
in
inc
scas
push
push
rol
inc
ds
xchg
inc
out
mov
test
jo
into
adc
adc
dec
push
add
jg
and
lahf
mov
es
enter
inc
push
and
mov
cmps
bnd
jmp
push
outs
or
push
or
mov
or
xor
imul
idiv
mov
sbb
(bad)
das
adc
pop
pop
(bad)
inc
mov
add
xchg
xor
push
xchg
idiv
xchg
push
inc
xchg
add
pushw
inc
(bad)
fistp
and
addr16
push
xchg
pusha
pop
and
adc
(bad)
adc
add
xchg
adc
loopne
add
int
jl
push
jg
inc
std
add
add
ret
ja
pop
lahf
mov
jmp
and
popa
(bad)
in
pop
pop
xchg
push
or
ret
ja
loop
or
push
in
mov
sti
gs
xchg
push
lahf
(bad)
push
jl
(bad)
mov
pop
or
fdiv
mov
push
out
adc
xchg
or
or
inc
fisubr
adc
inc
or
retf
push
push
mov
(bad)
retf
push
mov
push
xchg
xchg
mov
xchg
inc
fwait
call
dec
outs
mov
or
ret
jle
mov
inc
dec
sbb
jne
sub
add
inc
mov
mov
pop
sar
push
cmps
mov
inc
sbb
jmp
mov
mov
dec
nop
pusha
jg
mov
push
inc
add
jle
movs
inc
push
add
out
test
add
jg
(bad)
push
pop
add
sbb
push
push
mov
daa
sbb
int
cmps
or
cs
rol
push
cs
xchg
cdq
pop
adc
push
jbe
sbb
and
into
or
inc
sub
outs
pop
push
push
test
or
scas
adc
test
dec
addr16
pop
and
mov
pop
lods
outs
cld
cmp
inc
mov
bswap
add
ja
xchg
mov
add
retf
dec
xchg
xchg
adc
add
test
sahf
push
mov
ficom
inc
(bad)
ins
pop
and
inc
push
jnp
adc
neg
push
adc
dec
(bad)
punpckhdq
push
fiadd
pusha
mov
mov
push
popf
rcr
pop
js
mov
inc
adc
adc
test
cmps
(bad)
fbstp
outs
or
ror
cmp
test
(bad)
(bad)
(bad)
cmp
(bad)
aas
aad
xor
leave
fadd
lock
cmps
mov
rcr
icebp
(bad)
rol
(bad)
(bad)
in
inc
ret
into
fadd
rol
retf
fcom
cmp
adc
(bad)
fistp
enter
int
dec
icebp
repnz
mov
rcl
mov
add
xor
scas
fimul
aas
add
cmp
add
fadd
cmp
sbb
fst
das
clc
adc
mov
adc
inc
mov
scas
es
adc
xor
rcl
add
sahf
push
add
inc
xchg
mov
fcom
inc
arpl
jl
xor
adc
(bad)
mov
daa
adc
int
jbe
pop
loop
dec
push
push
xor
fisttp
not
or
mov
push
cmp
out
lock
int
test
(bad)
leave
retf
aas
aam
inc
ja
mov
cmp
or
add
aas
mov
and
mov
test
rcr
aad
mov
fisttp
jg
leave
sub
rol
shl
fild
ret
xor
sub
fwait
and
sbb
(bad)
ret
pop
call
test
inc
cmp
aam
add
lea
pop
loopne
and
js
mov
es
das
(bad)
retf
nop
bound
fcomp
fwait
and
cmp
clc
sub
out
mov
rcr
xor
pusha
dec
cmps
int
sub
xchg
xlat
cmp
cmp
fidiv
rcr
rol
test
jl
pushf
dec
repnz
ret
shl
cmps
ds
dec
fild
mov
mov
mov
mov
clc
inc
icebp
fcmovb
xchg
cs
fadd
test
(bad)
stos
das
(bad)
mov
xchg
xor
call
dec
fiadd
es
sbb
into
xchg
ss
cld
inc
push
ss
xor
xor
rol
or
xor
mov
dec
xchg
xchg
cmp
int
popa
or
mov
lock
pop
mov
push
xchg
aas
adc
das
cmp
cs
push
adc
sub
push
or
pop
aaa
adc
and
push
pop
cmp
xor
pop
xor
cmp
mov
push
and
pusha
and
add
cmps
iret
lods
mov
std
pop
mov
inc
jle
or
push
push
sbb
pop
push
dec
mov
cmps
sbb
pop
adc
std
aad
or
into
sbb
movs
sbb
mov
pop
pop
mov
xlat
jl
xchg
or
dec
inc
sub
repz
(bad)
xchg
lahf
pusha
pop
pop
mov
bound
fadd
fisubr
lea
test
fidivr
or
and
inc
jo
dec
imul
les
shr
jmp
push
inc
adc
push
mov
adc
mov
inc
mov
push
cld
xor
js
jno
daa
mov
cmps
scas
mov
xchg
daa
inc
pop
mul
mov
or
adc
mov
dec
inc
xchg
push
add
aaa
or
or
daa
inc
jmp
xchg
push
pop
sbb
por
pop
sbb
rcr
pop
cs
dec
fisub
add
mov
out
lods
out
iret
inc
push
mov
dec
popa
sub
xor
add
data16
test
sbb
jg
outs
adc
push
jp
js
js
cmp
out
leave
or
outs
aaa
adc
jmp
sub
or
(bad)
pusha
adc
inc
inc
or
add
cmp
jae
ins
div
sbb
dec
push
jbe
add
jbe
cmp
pop
adc
jg
inc
ins
pop
movs
dec
adc
(bad)
scas
and
es
call
or
push
pop
in
or
xchg
pusha
add
and
pusha
or
add
ss
xchg
and
push
movs
fwait
pop
cmp
rcr
outs
dec
xor
jbe
mov
sub
push
mov
std
das
push
add
aam
pusha
push
mov
test
nop
sbb
lahf
sbb
fbld
aas
mov
pop
push
fdiv
sbb
dec
xchg
outs
push
sbb
daa
adc
loope
ds
fadd
les
jle
ins
test
dec
and
and
mov
push
adc
inc
pop
icebp
pop
outs
adc
xchg
mov
push
xchg
inc
ins
sbb
inc
iret
out
pop
or
mov
xlat
cld
test
xchg
add
(bad)
loope
aaa
or
push
inc
aaa
pop
adc
call
cmps
inc
push
loope
adc
mul
loop
ins
daa
loope
xlat
add
inc
div
mov
push
inc
push
push
push
fisub
scas
sub
out
sbb
arpl
inc
aas
pop
xor
push
loope
aas
(bad)
jg
adc
jbe
outs
push
(bad)
fldcw
mov
mov
sbb
ins
cmp
mov
test
mov
scas
inc
movs
inc
dec
mov
sahf
push
pop
sub
bound
adc
aas
addr16
push
scas
pop
mov
jnp
adc
in
(bad)
adc
push
sub
cwde
pop
adc
leave
jmp
push
inc
adc
sbb
fild
dec
push
mov
mov
popa
icebp
fwait
or
inc
push
inc
outs
sub
xor
jbe
dec
cld
jg
cwde
cmc
adc
pop
inc
pop
imul
add
cmps
pop
stos
js
dec
jno
xchg
pop
add
test
xchg
pop
pop
adc
out
inc
sbb
lods
add
cmps
mov
push
jb
outs
outs
mov
cmps
push
das
push
add
push
pop
gs
rcr
adc
push
mov
dec
dec
add
test
dec
(bad)
jnp
dec
add
movsx
or
inc
retf
(bad)
mov
aas
ins
aaa
inc
pop
daa
scas
mov
pop
cmp
push
push
push
lea
xchg
add
stos
adc
adc
movs
cmps
scas
adc
mov
xor
xor
aaa
dec
daa
pusha
dec
into
push
add
or
mov
inc
ins
bound
add
dec
(bad)
or
xor
dec
mov
lds
ins
das
push
imul
fs
movzx
data16
out
push
aam
es
adc
pop
outs
js
push
push
add
mov
imul
xchg
xlat
aam
ja
and
xor
sub
pop
or
mov
dec
add
add
daa
pop
mov
push
scas
push
mov
sub
sbb
pop
or
mov
cs
push
push
or
pop
push
jmp
push
mov
(bad)
hlt
inc
pop
add
or
pop
pop
(bad)
and
adc
or
movs
mov
sbb
mov
fbstp
popa
xchg
push
mov
push
jg
dec
sbb
adc
pop
scas
xchg
pop
ficomp
xchg
shl
(bad)
dec
sbb
push
dec
push
aam
ror
daa
cmps
xor
dec
daa
inc
pop
push
cmp
and
inc
cmp
adc
xchg
bound
push
sti
jmp
dec
jmp
gs
loop
or
adc
xor
inc
jp
pop
jg
out
pop
mov
cs
inc
jle
dec
pop
shl
dec
inc
sub
add
das
sahf
mov
mov
call
inc
outs
arpl
movs
push
fwait
jle
test
daa
pop
push
cld
adc
cmps
or
xchg
xchg
imul
add
stos
dec
in
adc
(bad)
push
js
pusha
nop
(bad)
addr16
xchg
addr16
dec
lock
jg
out
stos
pop
pop
push
out
ja
xchg
or
loop
(bad)
pusha
call
or
nop
sbb
and
and
adc
addr16
fwait
or
cmc
jecxz
outs
push
aaa
imul
enter
xchg
shl
xchg
rcr
sahf
add
test
xor
adc
add
jg
or
imul
xchg
cli
sbb
fdiv
dec
push
or
pop
out
adc
inc
and
pop
jbe
mov
dec
out
add
into
add
jae
call
and
adc
xchg
add
xchg
sbb
lds
push
push
call
jno
dec
clc
fist
daa
bound
push
in
add
shr
mov
pop
and
arpl
xchg
popf
iret
leave
adc
xor
(bad)
(bad)
jg
(bad)
mov
dec
in
add
push
jecxz
fcomi
outs
cli
add
out
or
adc
pop
jecxz
add
push
call
jle
loopne
pop
dec
loopne
push
lea
sbb
mov
mov
div
xchg
push
loope
add
loope
jle
sbb
sbb
pop
push
in
push
sbb
push
add
add
push
dec
in
call
sub
dec
es
inc
dec
add
adc
int
lahf
push
bound
jmp
cmps
add
dec
push
into
push
push
add
scas
pop
hlt
add
fist
aas
xchg
jbe
adc
pop
inc
add
push
push
data16
dec
(bad)
cmp
test
(bad)
pop
sahf
fild
mov
add
ins
pop
in
mov
addr16
addr16
xor
js
mov
(bad)
out
sub
dec
mov
add
jle
daa
daa
xchg
sahf
ret
mov
dec
adc
mov
popf
push
daa
es
pop
or
jg
push
inc
iret
pop
adc
imul
movs
push
inc
or
pop
ins
and
mov
pop
xchg
inc
lahf
push
das
add
and
fistp
xor
inc
add
sub
push
sbb
pop
jb
sbb
or
mov
test
dec
pop
xchg
or
js
add
jle
mov
das
cwde
pusha
out
cld
ins
or
imul
mul
dec
jle
jecxz
add
loopne
add
adc
scas
cs
jecxz
add
adc
mov
or
push
add
not
push
dec
add
inc
and
xchg
ja
daa
and
addr16
inc
repnz
imul
mov
in
(bad)
jle
lahf
mov
inc
cs
xchg
je
adc
scas
pop
(bad)
add
rcl
cmps
inc
sbb
test
pop
cmps
hlt
js
iret
xchg
adc
pop
outs
sub
pop
stos
mov
dec
dec
mov
cs
scas
add
rcl
mov
aas
out
mov
aaa
(bad)
(bad)
cmp
sbb
or
push
push
push
cld
sbb
pop
add
inc
add
cmp
dec
sub
push
aad
push
or
lods
xchg
xchg
pop
out
lods
mov
add
in
aas
add
sbb
nop
clc
xchg
ficom
or
adc
push
jnp
inc
and
adc
lea
add
or
outs
scas
imul
adc
outs
shl
outs
aas
dec
inc
sahf
call
push
(bad)
inc
(bad)
jo
jge
sahf
cmps
dec
push
add
inc
sbb
jbe
push
xchg
push
sbb
call
(bad)
outs
cmp
pop
wbinvd
mov
add
jl
jo
add
out
rcr
into
cs
pop
xor
mov
mov
cmp
sbb
ja
bound
loopne
arpl
push
pop
inc
adc
jp
(bad)
js
outs
mov
inc
sbb
adc
inc
lea
movzx
xchg
shr
(bad)
mov
mov
das
test
add
push
sub
js
xor
add
jg
push
jmp
xchg
dec
ret
inc
mov
dec
mov
pop
add
sbb
addr16
push
add
mov
push
ret
add
inc
add
mov
scas
adc
aad
xor
(bad)
out
and
cmp
adc
icebp
retf
rcl
and
adc
ret
cs
int
sub
push
aam
cmp
(bad)
retf
ret
(bad)
scas
sbb
adc
into
inc
xor
(bad)
fiadd
test
les
push
out
adc
es
xor
cmp
jbe
icebp
pop
pop
adc
mov
xchg
inc
lahf
add
test
pop
sbb
mul
xlat
rol
loopne
push
(bad)
xor
mov
ret
enter
das
clc
xchg
ror
int3
test
xor
add
cs
cwde
aas
(bad)
fadd
out
sbb
xchg
(bad)
mov
ficom
mov
sbb
push
out
(bad)
jmp
push
jmp
adc
or
ds
adc
es
popaw
jp
clc
jno
nop
push
dec
scas
jg
pop
lahf
dec
pusha
xor
bound
pushf
mov
push
mov
jbe
test
and
mov
mov
(bad)
pop
or
in
push
fisttp
mov
inc
dec
hlt
and
adc
cmp
inc
pop
(bad)
mov
out
lods
mov
mov
test
push
loopne
and
inc
data16
inc
lea
fiadd
push
popa
fstp
into
ret
(bad)
(bad)
jg
js
push
nop
popa
je
jecxz
add
adc
jno
loopne
jae
loopne
lea
scas
sbb
jbe
xchg
adc
inc
push
aaa
scas
test
inc
movs
lods
adc
pop
aas
mov
xlat
scas
jge
or
scas
adc
and
dec
mov
dec
inc
hlt
ds
pop
pop
ds
push
sub
and
jbe
fbstp
(bad)
js
add
sbb
outs
ret
inc
ins
adc
cmps
inc
jnp
push
into
mov
xchg
pop
inc
sbb
xchg
sbb
jbe
or
push
sbb
mov
ror
adc
mov
gs
inc
adc
and
fcmovnu
jbe
or
mov
add
add
inc
sbb
push
cs
add
pop
mov
inc
addr16
sbb
lea
add
aas
mov
cdq
mov
sub
mov
lea
and
pop
push
loopne
or
or
ins
aam
cmps
add
jmp
loope
lahf
aam
mov
aas
lahf
inc
inc
out
push
or
pop
adc
rcr
mov
inc
repz
adc
adc
fucomip
adc
pop
and
(bad)
test
pop
or
dec
push
push
inc
adc
or
dec
out
fs
out
push
mov
scas
xlat
pusha
add
sar
iret
and
pop
aas
jno
iret
xor
push
cmps
out
mov
add
xor
(bad)
test
jnp
add
jg
hlt
push
jae
aaa
out
outs
add
dec
mov
repz
bnd
cmp
inc
(bad)
push
emms
or
pop
outs
pop
lea
inc
pop
mov
icebp
out
xor
(bad)
inc
ins
xlat
out
aas
daa
dec
outs
sbb
mov
push
popa
dec
add
jmp
outs
sbb
inc
add
es
(bad)
scas
add
clc
aas
or
inc
cwde
lea
iret
daa
mov
and
push
pop
xchg
mov
dec
mov
cmp
xlat
call
pop
int
mov
push
mov
dec
dec
retf
test
mov
push
out
loope
add
inc
jg
loope
jo
bt
sbb
nop
ret
dec
inc
and
mov
pop
mov
push
mov
adc
push
mov
fidivr
pop
jo
xor
add
popf
lea
(bad)
ja
cmps
inc
mov
adc
sub
inc
inc
mov
rcl
add
jnp
cdq
adc
(bad)
push
inc
adc
ja
dec
lods
mov
imul
addr16
pop
dec
loope
and
clc
mov
jo
xor
cmps
add
mov
mov
inc
or
inc
xor
(bad)
push
push
push
mov
(bad)
fidiv
dec
mov
mov
cmps
popa
cmc
adc
xor
mov
add
out
inc
cmp
bound
nop
jl
je
and
ins
xchg
data16
outs
push
das
mov
out
sub
or
out
dec
push
sbb
shl
adc
inc
(bad)
outs
mov
inc
outs
addr16
inc
adc
test
loopne
xchg
(bad)
mov
add
test
push
dec
test
pop
scas
stos
sub
out
in
pop
adc
and
out
push
iret
sub
dec
push
es
adc
(bad)
mov
adc
call
xor
lea
aas
mov
push
outs
and
fs
pusha
adc
or
(bad)
repz
fisttp
out
xchg
xlat
add
pop
inc
out
outs
and
mov
test
je
aad
lds
add
popa
scas
inc
push
mov
lahf
inc
test
inc
push
retf
xor
or
add
push
outs
pop
xchg
icebp
aas
je
das
je
or
ins
sbb
sub
or
dec
rcl
test
inc
pop
clc
dec
push
push
mov
dec
pop
or
pop
mov
dec
iret
adc
add
adc
adc
push
mov
and
sub
jbe
ja
sahf
inc
jae
add
ds
xor
push
add
scas
lea
sub
inc
push
or
daa
inc
inc
cmp
jg
into
outs
ror
add
dec
adc
or
inc
inc
adc
out
loopne
(bad)
adc
ds
dec
out
mov
jo
dec
out
(bad)
adc
jbe
daa
or
movs
push
dec
mov
inc
cmps
jo
fisttp
aaa
daa
inc
mov
adc
neg
je
sub
mov
xchg
sbb
dec
pop
push
mov
or
mov
push
or
into
cs
add
add
inc
xadd
add
xchg
dec
pop
jle
sbb
mov
iret
inc
jo
and
xchg
xchg
xchg
push
pop
addr16
dec
add
and
je
sub
test
pop
fdivp
(bad)
inc
or
adc
dec
and
add
imul
invd
in
mov
push
inc
das
xor
inc
data16
and
push
push
scas
rol
adc
mov
inc
push
add
jo
jmp
xchg
and
mul
adc
or
rol
(bad)
push
mov
inc
inc
fidiv
dec
adc
aaa
das
or
das
cmp
fisub
jmp
aas
add
mov
popa
daa
popa
mov
inc
aas
push
popa
or
add
push
icebp
or
inc
mov
aaa
lahf
add
add
xchg
pop
imul
addr16
das
or
popa
add
bswap
push
or
or
sbb
mov
popa
movs
test
add
les
or
ror
ja
and
rcr
(bad)
push
mov
shl
jo
in
pushf
loopne
lahf
jg
movs
dec
push
xchg
ins
xor
div
xchg
das
mov
push
push
and
pop
outs
das
inc
mov
fisttp
(bad)
int
push
add
add
mov
or
sbb
mov
add
xchg
dec
outs
dec
pop
xchg
shl
test
loopne
or
adc
aaa
jecxz
outs
int
xor
jmp
pop
mov
rol
(bad)
pop
movs
jno
pusha
scas
outs
out
rol
lahf
pop
jg
sub
and
adc
inc
push
inc
loopne
and
sub
test
mov
test
push
cwde
ja
das
lahf
jg
cmp
inc
outs
xchg
cwde
dec
push
wbinvd
shl
and
ret
fiadd
scas
das
js
aam
mov
pop
xlat
mov
add
jmp
pop
inc
or
add
inc
iret
or
inc
es
mov
pop
xor
popf
popf
cmp
mov
add
js
pop
fisttp
inc
enter
xlat
xchg
sub
xor
cmp
xchg
pop
mov
xchg
in
rol
cs
mov
movs
push
push
inc
dec
fs
mov
and
fiadd
dec
push
cwde
into
mov
adc
neg
dec
xchg
outs
je
nop
test
sahf
or
inc
mov
mov
ins
outs
jae
hlt
ror
out
mov
adc
sub
and
adc
adc
ret
shl
sub
iret
add
xchg
mov
cmps
or
xchg
push
popa
or
jns
push
je
gs
outs
outs
inc
imul
in
aaa
nop
xor
mov
push
lock
push
push
dec
nop
inc
push
xchg
mov
push
adc
cmps
sbb
mov
sahf
cs
cs
lods
iret
mov
inc
loop
push
sub
push
rcr
pushf
xor
outs
sbb
sbb
mov
xchg
adc
and
mov
add
cdq
loopne
lahf
outs
sub
loop
adc
je
push
inc
shl
mov
inc
lahf
mov
cwde
and
lods
adc
sub
inc
sub
ds
sti
nop
sub
and
retf
nop
sbb
push
cwde
sub
daa
sub
pop
cmp
push
cli
call
mov
pop
nop
in
es
xor
push
fcomp
(bad)
push
cmp
push
(bad)
push
push
popf
jle
xor
mov
push
lods
jg
repz
push
mov
mov
imul
or
pop
mov
imul
ja
dec
or
pop
scas
clc
push
test
or
adc
xchg
mov
add
test
icebp
pop
lahf
dec
pusha
sub
or
push
inc
jb
or
push
sub
and
or
mov
sbb
sbb
or
jmp
add
outs
fadd
pop
ret
mov
sti
in
adc
fs
cmp
add
inc
ins
add
outs
pushf
inc
add
enter
cmps
mov
nop
shr
jno
or
push
mov
add
pop
outs
add
pop
pushf
or
fldcw
leave
pushf
push
fld
push
adc
adc
sbb
pusha
sub
inc
and
add
cmp
inc
dec
dec
movs
mov
adc
push
stos
push
mov
or
aam
add
cmp
xchg
sbb
or
and
mov
xor
ret
inc
lahf
or
jne
lea
xchg
(bad)
pop
add
scas
and
lods
push
push
push
cmp
ins
call
jb
sub
sbb
adc
addr16
leave
leave
leave
imul
leave
ins
outs
outs
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
push
push
pop
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
pop
pop
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
inc
inc
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
dec
dec
xor
leave
leave
leave
xor
xor
leave
leave
leave
xor
leave
leave
leave
cmp
cmp
leave
leave
leave
cmp
leave
leave
leave
and
and
leave
leave
leave
and
into
leave
leave
sub
sub
in
pop
test
pop
push
inc
js
test
pop
dec
or
sar
adc
mov
icebp
sbb
mov
jb
popa
adc
nop
scas
jp
add
pusha
(bad)
sbb
mov
pop
or
cs
add
sub
push
add
loopne
in
pop
pop
sub
add
mov
(bad)
xchg
mov
add
jno
mov
and
jo
ret
add
sbb
pusha
mov
add
mov
test
and
stos
and
or
rcl
mov
pop
xor
into
and
or
add
xchg
pop
mov
or
xchg
add
add
clc
ret
push
cmc
push
and
xor
rcl
inc
pop
jb
movs
pop
lods
leave
sbb
mov
or
mov
mov
inc
lsl
adc
or
rcr
int3
movs
or
clc
sub
rcl
jp
add
pop
sub
sub
test
mov
adc
jle
xchg
adc
es
adc
xor
dec
add
dec
sub
loope
jbe
(bad)
xchg
scas
jle
jns
call
jb
es
pop
mov
xor
fsubr
adc
sbb
mov
adc
dec
adc
jmp
jae
in
sub
jge
push
sub
mov
es
push
add
inc
outs
arpl
arpl
dec
mov
cli
xchg
jecxz
xor
retf
xchg
in
mov
outs
add
adc
sbb
nop
push
push
mov
sbb
rcr
adc
pop
xchg
inc
repnz
push
jbe
xchg
xlat
sbb
ror
adc
push
jbe
mov
pushf
jae
into
add
mov
popa
pop
cmp
(bad)
xchg
adc
je
mov
aas
clc
outs
(bad)
outs
sub
popa
js
imul
sbb
scas
or
or
sbb
fist
out
pop
push
push
jo
je
pop
and
ja
jg
mov
dec
fs
xor
xor
ss
mov
mov
jae
pushf
cmp
mov
jmp
sub
imul
stos
pop
or
xchg
xor
(bad)
pop
sub
lahf
or
mov
or
inc
(bad)
jno
and
cmc
xor
enter
pusha
enter
mov
in
pop
or
jae
cmp
clc
xchg
sbb
sub
sbb
in
adc
imul
and
sbb
xchg
or
dec
ins
(bad)
outs
adc
in
xor
sbb
or
cmp
adc
xchg
push
test
mov
in
enter
adc
add
mov
in
sti
pop
daa
cwde
xorps
inc
daa
addr16
daa
mov
xchg
inc
fxch
in
mov
mov
jl
fcom
or
popf
pushf
sbb
paddusb
nop
call
imul
ss
sbb
pop
bound
es
cmp
ds
ret
cmp
call
out
out
cmc
std
or
adc
sbb
sub
cmp
jns
out
push
pop
data16
jbe
jns
out
mov
jns
stos
mov
add
jns
mul
add
or
in
fisub
mov
push
mov
ds
loope
jnp
push
cmp
pop
in
jno
jp
loopne
push
std
inc
popa
retf
js
or
and
inc
xchg
mov
cmps
fs
out
je
add
mov
dec
in
jb
jae
push
femms
adc
inc
push
adc
cmp
inc
gs
lock
cmps
stc
push
or
sub
jbe
cmps
sub
jp
xchg
or
aaa
pop
xchg
mov
les
adc
dec
jbe
cmp
sbb
sbb
jns
xlat
mov
pop
push
out
enter
sbb
ss
imul
je
outs
add
adc
movs
pop
les
data16
inc
js
enter
js
xchg
push
jl
mov
sub
daa
ficom
mov
fdivrp
je
cmps
stc
push
inc
jns
xchg
cwde
or
mov
inc
inc
push
inc
dec
dec
movntps
int3
ds
repz
sub
push
cmp
call
cmps
mov
call
or
pop
mov
mov
jl
cmp
jg
mov
pop
add
xchg
ins
or
imul
inc
call
mov
sub
pop
lock
inc
sbb
popa
mov
(bad)
pop
imul
mov
enter
(bad)
hlt
sbb
and
out
mov
mov
fcom
leave
inc
or
(bad)
fcom
xchg
push
push
mov
neg
push
jecxz
sub
jl
mov
add
xchg
in
adc
jle
push
cmp
push
lea
push
mov
inc
adc
pop
outs
nop
call
push
and
ins
add
mov
or
into
out
add
fmul
fiadd
xchg
mov
xchg
mov
and
mov
icebp
sbb
subps
pop
jecxz
jbe
xchg
adc
or
add
lods
adc
jo
or
jmp
mov
xchg
outs
test
dec
adc
push
xor
mov
push
dec
and
lods
sub
xchg
xor
push
mov
push
add
fimul
inc
xlat
mov
ret
mov
(bad)
mov
push
push
shl
add
aaa
mov
add
inc
push
sar
aas
sub
inc
rol
ss
cmp
lock
jl
dec
sbb
fild
jae
cmps
add
lock
xchg
mov
mov
or
mov
jmp
lock
sub
mov
adc
arpl
and
xchg
out
cld
out
adc
xlat
lods
cwde
ins
aaa
pop
pop
push
nop
cld
cld
mov
rcr
rol
mov
shl
aam
cmp
loope
ins
mov
push
popa
push
pop
inc
ror
adc
sub
and
leave
jne
cmps
push
or
pop
adc
push
push
push
or
enter
or
leave
aad
pusha
nop
das
nop
or
enter
cld
adc
add
jb
lahf
or
test
call
dec
ror
xor
cld
or
push
mov
push
aaa
add
test
arpl
or
jno
push
or
lock
cmp
add
mov
pop
loop
cmp
inc
add
or
mov
mov
mov
push
push
ret
dec
inc
(bad)
jo
cmc
mov
outs
(bad)
mov
stos
add
push
call
retf
adc
stos
inc
addr16
fwait
and
or
rcl
push
pop
mov
xor
sub
mov
add
dec
mul
dec
jo
fld
call
mov
rol
test
mov
aam
mov
add
mov
adc
cld
imul
jae
xor
mov
cmc
sbb
or
add
int
adc
add
shl
lods
aas
cmp
mov
pushf
ret
push
dec
sbb
push
je
daa
lods
mov
imul
add
push
adc
jl
fimul
mov
in
inc
push
call
mov
push
inc
jnp
sbb
xor
xchg
dec
sbb
repnz
sbb
pop
ja
mov
and
jno
outs
cmp
mov
imul
adc
adc
nop
pop
mov
clc
pop
sub
dec
pop
xor
mov
cmp
jp
push
aas
mov
(bad)
mov
mov
inc
add
push
push
retf
inc
mov
(bad)
popf
dec
push
popf
jmp
xlat
adc
mov
and
arpl
sbb
mov
(bad)
dec
fs
pop
pop
outs
sbb
sub
mov
mov
add
adc
lahf
push
popf
and
dec
jl
fimul
pop
sar
imul
dec
jns
xor
sub
mov
push
inc
inc
imul
xor
add
inc
retf
aas
dec
push
pop
outs
shl
dec
or
cmps
fldenv
xchg
push
cmp
jno
pop
jmp
xchg
and
add
add
mov
cli
mov
nop
push
ins
icebp
sub
cmp
jl
(bad)
push
mov
or
outs
add
loopne
sub
cmp
or
jne
add
inc
das
cwde
sti
add
sahf
sub
mov
pop
mov
xor
js
jnp
int3
retf
enter
add
hlt
pushf
xchg
push
cwde
cmps
push
sar
mov
cmp
retf
ss
dec
or
mov
or
mov
(bad)
xchg
ss
aam
push
jg
add
add
sbb
mov
ja
add
out
fild
jo
ret
xchg
inc
xchg
adc
fbstp
mov
cmp
pop
aam
shl
std
pushf
lods
loope
es
and
sahf
and
out
add
add
popa
xchg
rol
out
rol
adc
pop
imul
enter
shl
popa
pop
ja
(bad)
test
movs
push
jmp
mov
jns
xlat
loope
in
fbld
je
adc
in
xchg
cwde
mov
xchg
das
xchg
(bad)
or
ins
cmps
movs
pop
sbb
add
mov
sub
dec
(bad)
jmp
adc
jmp
adc
test
sbb
adc
jmp
mov
and
or
xchg
inc
inc
fs
das
(bad)
rcl
xor
ins
rol
mov
mov
inc
sub
loopne
ror
and
or
sbb
(bad)
push
add
(bad)
hlt
push
loopne
inc
out
push
pop
mov
lock
xor
sar
inc
es
add
inc
aas
fld
int3
mov
(bad)
call
jg
mov
inc
pusha
push
add
xchg
sbb
cmp
push
jge
or
in
loopne
push
xchg
inc
inc
pop
jge
pop
jb
jmp
data16
mov
icebp
dec
push
xor
cmp
and
dec
cdq
in
enter
jg
dec
and
pinsrw
push
nop
inc
jb
push
and
xor
mov
dec
adc
inc
jb
mov
addr16
fidiv
pop
cmps
push
push
mov
(bad)
adc
addr16
std
outs
sub
rcl
jge
push
jge
and
call
into
add
fiadd
out
pop
cmp
jmp
test
mov
jp
push
pop
bound
test
pop
or
test
pop
and
ret
xchg
add
sub
push
icebp
les
add
jp
push
aas
push
xchg
sbb
sbb
mov
pushf
outs
or
mov
or
mov
fstp
not
imul
inc
jl
imul
cmps
and
inc
inc
test
out
mov
out
pop
hlt
dec
mov
inc
je
add
adc
ret
cld
call
and
sbb
adc
sti
mov
mov
jne
outs
or
or
mov
es
cmp
hlt
ror
pusha
cmp
ror
mov
add
pop
or
inc
sbb
inc
mov
sub
push
aaa
adc
aam
jno
inc
add
add
fcom
push
add
shl
adc
les
out
mov
inc
dec
jne
cmp
stos
inc
mov
icebp
ret
outs
or
push
or
(bad)
fmul
les
dec
cld
mov
ret
(bad)
div
js
add
les
test
adc
jne
lock
pop
lock
pusha
lock
sbb
adc
or
jae
add
hlt
mov
add
jmp
cmp
xor
popf
add
mov
fwait
pop
mov
fcom
dec
add
lock
dec
jmp
test
mov
(bad)
and
mov
jg
inc
mov
xchg
inc
or
inc
add
test
enter
mov
lock
xor
mov
cmovge
hlt
aaa
sbb
pop
in
xor
lock
dec
int
jb
inc
into
pop
(bad)
mov
mov
pusha
adc
mov
out
mov
std
popa
fbstp
sub
punpckhbw
xor
add
mov
es
call
arpl
aas
mov
inc
push
dec
inc
push
dec
inc
dec
xor
mov
pop
or
sbb
adc
or
inc
adc
movs
aaa
mov
xor
push
push
and
fwait
pop
add
push
imul
and
mov
xor
mov
mov
je
sbb
stc
scas
jmp
repz
aam
mov
inc
popf
int3
xchg
retf
lock
push
mov
push
inc
rol
rol
push
imul
pop
cmp
out
push
ret
sbb
or
pop
push
or
inc
pop
add
pop
sbb
push
jmp
push
loopne
lahf
mov
scas
loop
xor
addr16
add
aaa
jbe
push
test
aaa
xlat
hlt
int3
pop
sbb
fnstsw
(bad)
test
or
xor
and
inc
xor
not
add
add
call
mov
mov
and
sub
and
add
movs
pop
cmp
push
(bad)
inc
jb
or
movlps
jbe
and
push
sbb
out
pop
daa
add
in
mov
cmp
push
add
imul
pusha
mov
and
call
pop
pop
cmp
pop
dec
and
jge
cdq
xor
call
jle
or
pop
jmp
adc
loopne
add
push
add
dec
xor
mov
mov
and
icebp
inc
pop
pop
repnz
push
loope
std
sbb
mov
mov
xor
and
jo
push
es
aam
mov
out
cmc
test
or
mov
enter
sbb
xor
and
inc
(bad)
into
mov
cmp
push
jae
ja
mov
adc
add
jae
fsubr
jbe
imul
aam
xor
daa
jbe
sbb
jno
movs
sub
scas
sbb
cmp
js
push
sub
movs
test
test
es
dec
(bad)
adc
dec
push
out
scas
or
into
mov
xor
sub
xor
mov
arpl
mov
stos
stos
mov
cld
clc
push
push
sub
add
adc
xor
(bad)
fwait
jecxz
loopne
push
dec
jne
ja
bound
aaa
cmp
adc
cmp
xchg
aas
stc
(bad)
shl
adc
ja
pop
pop
xchg
sar
sbb
mov
pop
ss
and
sbb
sbb
sub
push
adc
mov
mov
(bad)
xor
sub
jnp
and
push
(bad)
or
inc
sub
je
add
push
or
jbe
imul
mov
out
sub
scas
push
pop
stos
ror
lea
sti
add
jl
inc
xchg
mov
xlat
iret
movs
cmp
or
enter
mov
test
(bad)
cmp
inc
ins
jp
(bad)
and
fisttp
add
and
inc
add
cmp
add
mov
int3
es
inc
test
into
jl
or
push
push
in
and
cmp
in
test
xor
xchg
dec
mov
adc
cs
scas
test
cmp
ds
dec
mov
(bad)
das
inc
cwde
ret
movs
jge
mov
(bad)
jb
dec
inc
jae
les
mov
and
icebp
inc
or
push
ffreep
mov
jbe
mov
or
push
or
jne
mov
clc
mov
dec
dec
les
dec
add
cmps
adc
sub
pop
sbb
dec
xor
mov
loopne
or
jl
jmp
pop
push
lock
ss
test
cwde
jle
cs
fld
cmp
fneni(8087
mov
jl
mov
rcl
adc
nop
data16
mov
cdq
add
mov
enter
fs
cdq
pop
fadd
sub
dec
shl
sub
mov
sub
jmp
and
nop
les
nop
dec
push
(bad)
pop
or
jo
hlt
mov
pop
les
sbb
cmp
nop
test
xor
adc
push
or
inc
cmps
lea
rcr
and
(bad)
mov
xchg
hlt
add
sbb
or
add
lahf
xor
or
bound
loopne
in
lods
add
or
out
add
(bad)
xchg
mov
mov
mov
inc
inc
adc
pusha
adc
mov
inc
scas
mov
inc
(bad)
fstp
inc
xchg
and
jp
dec
les
icebp
add
mov
or
cld
pop
xchg
arpl
enter
icebp
fidiv
icebp
movs
clc
das
or
dec
adc
imul
and
or
dec
and
out
inc
mov
mov
xchg
fcom
push
jge
jbe
fild
sub
shl
inc
fadd
push
or
or
pusha
stos
test
adc
movs
rol
sub
jb
inc
xchg
push
jmp
adc
outs
out
aam
mov
cmp
jne
dec
jne
sub
push
paddsb
(bad)
repnz
icebp
dec
icebp
pusha
sbb
clc
mov
ror
and
pop
loopne
xor
add
iret
xchg
pop
and
ja
cmps
dec
test
arpl
or
inc
loopne
adc
push
pop
aas
and
ins
sub
add
jl
or
jmp
add
scas
jne
mov
pop
or
dec
push
mov
push
dec
pop
push
in
arpl
mov
mov
jo
mov
js
or
xchg
inc
xor
push
inc
bound
inc
add
inc
xchg
(bad)
pop
cmp
adc
push
xor
jle
repz
in
or
mov
cmp
jbe
and
push
cwde
ror
and
(bad)
arpl
and
mov
call
and
loopne
mov
pusha
or
mov
cmp
push
inc
fmul
xchg
ret
ss
in
add
push
iret
mul
cmp
aad
cmp
jg
xlat
sub
add
fist
inc
jb
sub
(bad)
fsubr
xor
movs
jb
std
xchg
in
sub
pop
adc
pop
cld
inc
add
je
xchg
test
out
adc
sbb
sar
sbb
inc
nop
and
sub
enter
ins
dec
fimul
lahf
jmp
inc
(bad)
(bad)
fnstsw
dec
and
add
mov
lock
lods
push
cmps
movs
shl
cwde
push
cwde
aad
sub
xor
test
pop
xor
push
xor
pop
push
jle
pop
imul
adc
mov
sub
adc
sbb
cmps
push
sbb
bound
pop
xor
dec
push
xchg
mov
cmp
jne
pop
dec
outs
push
and
stc
fdiv
das
push
gs
test
(bad)
popa
je
popa
jbe
rol
mov
mov
ds
jo
jns
pop
cmp
mov
push
ins
pop
jne
xlat
gs
(bad)
in
push
dec
arpl
jbe
push
js
xchg
pop
fdivr
fwait
adc
mov
or
xlat
int3
mov
and
add
add
cmp
outs
daa
mov
test
cmp
adc
mov
sbb
mov
leave
mov
adc
cmp
or
sub
xor
xor
cmp
cmp
cmp
inc
sbb
call
dec
mov
push
sub
push
mov
dec
pop
mov
fwait
sbb
mov
push
in
ins
mov
sahf
in
xchg
js
js
mov
inc
and
test
add
daa
xchg
xchg
retf
mov
nop
or
pushf
pop
dec
adc
jb
sbb
mov
push
cdq
movs
shr
test
(bad)
retf
or
daa
scas
push
pop
sub
ja
mov
add
out
dec
jns
out
stc
pop
mov
and
adc
or
jp
xchg
adc
or
pop
add
inc
jns
das
xchg
push
fnsetpm(287
or
daa
pop
mov
cld
cmps
or
jb
xchg
ins
push
push
push
inc
imul
pop
ins
xchg
push
and
inc
scas
push
daa
data16
into
push
ja
xor
outs
and
ins
popa
xchg
or
(bad)
sbb
daa
push
addr16
add
pop
ja
add
and
jg
and
(bad)
scas
mov
(bad)
and
(bad)
add
fwait
dec
inc
mov
xor
test
mov
sahf
adc
xchg
pushf
xchg
cmp
xchg
adc
cmp
mov
bound
xchg
mov
stos
inc
loopne
jae
pop
adc
adc
push
cmp
popf
call
lea
lock
adc
pusha
jmp
mov
pop
and
mov
cli
or
lahf
cmp
(bad)
mov
mov
or
les
(bad)
popf
out
mov
cli
fninit
enter
test
add
and
jne
les
je
mov
cmp
outs
outs
or
inc
fs
mov
aaa
sbb
xor
jae
gs
in
xor
ja
loope
movs
mov
mov
out
inc
into
add
sub
push
dec
loope
dec
jae
mov
pop
mov
(bad)
shr
push
jnp
xor
stc
xchg
je
add
jno
inc
rcr
dec
ss
mov
push
pop
sbb
lods
loope
push
add
or
jg
call
ins
sub
or
adc
sahf
dec
cmp
mov
aas
inc
jae
mov
adc
addr16
popf
dec
dec
sub
push
push
mov
imul
jmp
lea
and
in
pop
inc
loope
dec
ss
cmp
xor
popf
mov
pop
(bad)
and
push
gs
add
int
inc
xor
dec
rcr
xor
mov
xchg
test
adc
xchg
test
imul
mov
push
xor
cmp
cli
pop
xor
pop
pop
ret
sbb
add
clc
xchg
adc
cmp
scas
pop
and
(bad)
scas
mov
sidtd
fadd
je
push
push
xor
clc
jne
mov
ins
push
leave
cld
dec
call
ins
imul
pop
aam
mov
mov
pop
sub
or
dec
xchg
hlt
mov
adc
adc
pusha
mov
lock
push
pop
mov
jnp
push
dec
add
mov
mov
jne
mov
mov
mov
pushf
imul
xlat
dec
adc
test
movs
and
or
test
or
adc
out
(bad)
cli
adc
loope
mov
xor
jo
add
stos
add
nop
mov
movs
dec
shl
inc
(bad)
and
or
mov
or
std
loop
out
fcom
std
je
fidivr
in
pop
ud1
mov
movs
push
push
push
cmp
xchg
inc
jmp
push
mov
pop
mov
xchg
retf
dec
add
sbb
push
xor
inc
stos
shr
lods
jmp
rol
stos
dec
sbb
or
(bad)
(bad)
sub
cdq
mov
mov
xchg
inc
cs
cmc
clc
add
inc
mov
popa
fs
push
call
sbb
sub
pop
mov
pop
and
push
(bad)
push
dec
push
pusha
movs
enter
xor
xor
dec
lds
dec
push
test
adc
daa
push
daa
or
jp
ds
out
aad
inc
or
idiv
dec
adc
or
cmps
and
push
sub
or
(bad)
or
add
adc
adc
fs
popa
dec
pop
pop
or
scas
mov
push
add
movs
outs
dec
imul
dec
lock
jb
imul
inc
xor
sub
in
in
hlt
add
lock
sahf
pop
xor
shl
push
push
or
and
outs
add
mov
repz
(bad)
mov
add
xchg
enter
xchg
cmps
out
loopne
adc
mov
xor
mov
mov
pop
sub
adc
and
jle
pop
sbb
jo
adc
add
mov
adc
enter
cmc
ret
test
popa
test
nop
dec
mov
ds
cmc
or
adc
sub
xchg
sbb
mov
jmp
je
add
popf
fcmovbe
cld
xor
repnz
mov
inc
cld
push
add
pop
sbb
and
mov
shr
test
(bad)
clc
push
sbb
add
dec
fimul
push
cmp
out
mov
push
mov
jo
(bad)
push
and
push
sub
add
imul
mov
arpl
inc
inc
xchg
mov
inc
call
enter
aad
inc
xor
(bad)
nop
xor
sub
enter
cmc
aas
stos
pop
clc
dec
and
sub
clc
and
sub
or
pop
loop
outs
inc
jmp
stos
or
test
xor
push
lods
mov
inc
xchg
pop
(bad)
add
jmp
mov
mov
xor
push
in
cwde
ins
mov
cmps
inc
mov
imul
jo
push
pusha
xor
mov
inc
mov
inc
adc
fs
or
cmps
icebp
aas
pop
in
jecxz
cmp
test
xor
jb
add
fld
mov
test
mov
xlat
movs
nop
or
jno
xchg
xchg
mov
sub
add
mov
(bad)
neg
cli
jg
mov
ror
adc
cmp
and
sub
pushf
and
rcr
inc
outs
dec
and
push
jle
push
outs
(bad)
sbb
dec
shl
mov
shl
push
pusha
arpl
inc
outs
dec
das
clc
pop
adc
call
test
sub
push
add
and
adc
(bad)
xlat
sbb
inc
js
xor
pop
ror
sub
sub
push
nop
mov
ret
and
in
jnp
rcl
add
or
int3
and
mov
cmp
jne
xchg
aad
icebp
cdq
sbb
popf
aam
lahf
mov
std
lock
pop
mov
and
and
cmp
or
(bad)
or
jne
lods
jle
lods
and
add
repnz
or
cmp
lahf
add
mov
or
pop
sub
in
push
sbb
dec
nop
inc
push
cmp
inc
push
(bad)
adc
cmp
les
mov
fwait
sbb
rcr
outs
cmp
jae
mov
or
inc
ret
ja
jne
or
jl
xchg
into
or
ins
data16
jbe
fisubr
inc
jae
adc
push
sub
xchg
pop
dec
push
dec
pop
pop
xor
xor
xor
cmp
or
dec
imul
cmp
fdiv
dec
pop
ss
cs
jbe
xor
xor
mov
add
loope
or
sub
ja
push
data16
push
inc
dec
xor
aaa
jg
jo
fistp
mov
or
sbb
movs
push
inc
adc
jo
fisubr
adc
sti
test
loopne
pop
cmp
outs
jb
data16
jnp
in
push
dec
dec
xchg
push
inc
push
dec
sbb
pop
xchg
movs
sub
sar
xor
call
loopne
inc
xor
ins
push
sub
sbb
or
xor
lahf
xor
xlat
inc
inc
add
(bad)
out
imul
jge
xchg
fbstp
jecxz
push
push
push
outs
ins
(bad)
dec
inc
push
mov
sbb
mov
cmp
pushf
fisttp
in
xchg
ja
in
or
or
bound
sub
push
call
dec
(bad)
cmp
mov
mov
scas
xor
xchg
cmp
inc
pop
ret
inc
and
cmp
pop
inc
mov
arpl
mov
sar
and
movs
adc
shr
cmps
js
ja
mov
push
nop
inc
xor
or
xchg
retf
enter
push
mov
inc
cmp
pop
dec
push
(bad)
sbb
pop
xor
aaa
xor
cmp
rcl
sub
push
imul
fstp
mov
or
cmps
or
xor
sub
ja
mov
inc
push
inc
shr
(bad)
in
aaa
and
(bad)
adc
daa
or
ret
push
sub
dec
inc
dec
daa
cvtps2pi
push
pop
mov
(bad)
(bad)
ss
fisubr
lahf
aaa
mov
call
ret
cmp
outs
popa
or
pusha
cmp
push
stos
xlat
movntps
xchg
mov
push
je
bound
xlat
in
ins
or
lahf
ja
push
mov
cs
out
fisttp
and
xor
xchg
push
loopne
jb
ss
xor
stos
mov
push
mov
dec
aaa
fs
xchg
loopne
push
jo
daa
dec
in
das
dec
xchg
pushf
imul
outs
ins
cmps
cmp
jge
mov
pop
dec
pop
xchg
fiadd
push
pop
nop
outs
sub
rol
pop
dec
pop
scas
loopne
addr16
dec
ss
in
cmps
mov
cmps
xor
fs
inc
pop
or
ins
mov
adc
add
dec
inc
pop
pop
sar
clc
sub
aaa
xor
iret
push
inc
xor
xor
mov
call
aaa
ja
dec
mov
xor
pop
push
inc
jns
push
jne
push
(bad)
arpl
test
fiadd
push
lds
arpl
pop
std
in
or
gs
xchg
or
and
push
sub
xchg
mov
add
xchg
and
add
sub
into
inc
add
imul
pop
ja
das
xchg
addr16
jmp
gs
push
mov
aaa
(bad)
pop
call
aad
xor
dec
sub
jnp
(bad)
cmp
clc
jo
jmp
je
mov
pop
jp
sub
dec
inc
aaa
aaa
arpl
push
xchg
add
in
jmp
add
add
cmp
data16
cdq
inc
mov
js
xchg
or
xlat
scas
mov
add
ret
or
push
test
or
bound
sar
outs
jb
gs
adc
jmp
xor
push
das
ja
mul
pop
xor
xor
scas
popa
lahf
or
jb
xchg
iret
(bad)
gs
data16
bound
pop
jle
push
sub
ins
xchg
(bad)
(bad)
mov
aaa
xlat
and
retf
out
push
bound
nop
xor
xor
dec
adc
push
add
pop
add
fidiv
lahf
inc
push
jg
(bad)
pop
dec
outs
cmp
inc
pop
xor
mov
aaa
cmp
mov
das
cmp
push
(bad)
outs
bound
outs
addr16
jb
das
cdq
adc
cmp
aaa
daa
add
cmp
daa
ja
jmp
cmp
cmps
push
xchg
pop
cmp
jae
adc
add
das
mov
(bad)
clc
cmp
xor
outs
shl
mov
(bad)
cmp
jae
mov
dec
xchg
and
cmp
sub
je
int3
xlat
or
daa
pusha
iret
mov
xchg
aas
(bad)
or
add
fidivr
inc
push
sub
xchg
xchg
sub
cmp
add
adc
jb
dec
or
push
push
fidiv
mov
mov
sub
xlat
adc
dec
jb
xor
xor
dec
out
sub
cmp
nop
pop
dec
iret
xor
xorps
xlat
and
cmp
lods
xor
cmp
pop
(bad)
dec
xchg
xor
xchg
xlat
or
inc
cmp
xor
push
mov
iret
test
xor
xor
stos
cmp
inc
push
inc
pop
push
xor
pop
stc
test
outs
jb
or
shl
pop
pop
daa
pusha
push
mov
pop
fidivr
data16
fist
scas
xor
push
in
(bad)
ins
xor
test
and
adc
inc
push
sbb
dec
scas
sub
inc
xor
nop
sub
or
mov
test
push
push
push
cs
inc
inc
je
xlat
pusha
iret
fsubp
push
and
jg
jbe
in
add
add
xor
jnp
and
xor
jb
push
xor
xor
push
xor
and
jb
push
or
mov
outs
sbb
inc
dec
inc
fcomip
mov
dec
dec
cmp
xchg
dec
sub
ins
push
loopne
xor
xor
arpl
push
and
popa
aaa
jo
mov
xlat
popa
scas
add
sahf
clc
mov
fs
fild
xor
div
sub
shr
xor
xor
adc
addr16
pop
ja
cmp
outs
ins
xor
mov
addr16
push
add
mov
or
xor
or
out
mov
fadd
push
outs
adc
cdq
pusha
cmp
dec
or
leave
les
xor
pop
xor
jbe
pop
xor
inc
xchg
adc
add
enter
aaa
ss
shl
aaa
aaa
inc
dec
dec
push
pop
cmp
mov
loope
daa
add
out
jg
cmp
rcl
push
sbb
jle
sub
pop
xchg
mov
pop
jb
push
xlat
pop
jg
cmp
nop
fild
push
or
sbb
push
dec
gs
fadd
sub
dec
xor
cs
or
cmp
cmp
cmp
aas
dec
cs
dec
pop
xor
cmp
fistp
jg
cmps
ins
and
fisttp
push
pop
dec
cs
xor
xor
pop
inc
pop
cmp
and
pop
jns
out
iretw
inc
jp
dec
mov
pop
push
cmp
(bad)
dec
pop
mov
inc
js
adc
ins
aaa
and
xor
dec
pop
in
inc
jg
and
pop
xor
jb
xor
xor
inc
popf
(bad)
or
xor
xchg
dec
enter
adc
mov
addr16
add
mov
push
imul
ins
popa
loop
or
outs
outs
pop
xlat
aaa
outs
mov
mov
dec
pop
ja
dec
dec
in
cmp
cmp
sub
xor
xor
or
sti
arpl
xlat
mov
daa
ja
cld
add
daa
adc
inc
inc
dec
push
push
xchg
ror
imul
sub
cmp
add
jne
test
xlat
(bad)
scas
mov
dec
inc
jg
ins
sbb
xor
pop
inc
pop
xchg
push
push
outs
ins
xlat
push
aaa
ss
aaa
xor
sub
fsub
inc
push
xor
cmp
jnp
adc
xchg
mov
sub
pop
arpl
pop
ja
outs
push
sbb
rol
sar
or
clc
pop
push
js
xchg
fcmovb
lea
or
xor
or
cwde
aaa
(bad)
out
dec
mov
mov
ss
jg
je
test
out
or
frstor
mov
and
pusha
xor
ret
lods
push
pop
or
(bad)
pop
(bad)
les
cmp
and
jmp
add
add
fucom
lods
inc
pop
sbb
xchg
imul
and
jmp
cmp
sub
out
enter
sub
xor
cmp
cmps
mov
fisub
or
ins
and
and
jne
jmp
push
add
push
das
call
ret
pop
inc
inc
sub
jne
adc
fs
cmp
xor
nop
cmps
jo
fisttp
sbb
xchg
cmp
or
jb
cmp
jo
push
push
aas
or
dec
je
scas
jecxz
push
jge
daa
daa
dec
and
mov
dec
loope
mov
sti
xlat
daa
bound
imul
cmp
pusha
ret
in
outs
ins
pop
push
nop
or
inc
ss
lock
inc
inc
dec
pushf
dec
dec
push
dec
cmp
and
shr
mov
sbb
and
cmp
fnstenv
or
pop
and
pop
mov
and
inc
xor
push
and
das
leave
aam
ror
aaa
inc
xor
sbb
lahf
cmp
imul
add
idiv
xor
push
les
rcl
lods
mov
inc
(bad)
es
cwde
xor
xor
mov
xor
xchg
xor
inc
jb
xor
add
mov
push
or
push
xor
outs
push
xchg
aaa
mov
nop
mov
shl
ret
add
pop
sbb
test
ret
xor
nop
or
ficom
xor
jb
punpckhbw
xor
adc
call
xor
adc
inc
cmp
inc
mov
xor
xor
jns
cmps
bound
push
test
add
ret
std
and
ins
je
outs
loopne
push
jo
(bad)
sbb
sbb
adc
cmp
mov
cwde
(bad)
xor
sbb
test
xor
xor
xor
pop
jb
xor
cmp
push
cmp
jb
adc
aaa
xchg
nop
mov
and
jbe
jg
jg
jg
jnp
popa
jg
jg
mov
sub
rcl
mov
push
mov
test
xor
inc
xor
xor
xor
mov
test
sbb
sub
sbb
fidiv
xchg
add
or
cwde
or
pop
test
cmp
in
pop
cmp
leave
xchg
or
cmp
jo
aaa
xchg
xchg
andps
lods
xchg
(bad)
cwde
nop
mov
xor
push
push
das
pop
xchg
nop
mov
sbb
dec
repnz
smsw
dec
cmps
aaa
cmp
and
fimul
add
pop
addr16
sub
and
push
xchg
out
push
jno
sbb
add
out
and
je
inc
adc
xchg
xor
sbb
rol
out
push
xchg
pop
mov
xchg
sbb
mov
addr16
push
mov
pop
jno
outs
push
cmp
xor
fadd
pop
push
or
rcl
pop
inc
mov
dec
and
stos
popf
inc
xor
push
fwait
data16
push
pop
pop
adc
inc
dec
ss
cmp
arpl
sub
mov
push
or
dec
push
ins
push
dec
dec
push
dec
push
xchg
or
inc
push
push
and
lods
in
push
sub
xchg
imul
cwde
daa
dec
inc
cmp
push
dec
adc
pop
cmp
or
andnps
push
dec
sub
cmp
fbstp
pop
push
xchg
xor
iret
lods
pop
lods
std
dec
inc
dec
dec
dec
xchg
scas
dec
outs
gs
pop
shl
arpl
out
inc
jmp
push
dec
icebp
in
mov
movs
mov
push
xchg
aam
dec
and
jne
fwait
mov
jp
mov
(bad)
pop
xor
(bad)
(bad)
or
push
dec
inc
sub
mov
cmps
push
dec
pop
and
push
jecxz
addr16
gs
mov
mov
inc
sbb
mov
mov
jnp
dec
scas
fist
inc
cmp
sub
fistp
test
cmps
adc
xor
push
dec
push
nop
mov
cmp
fs
jnp
cmps
xor
loopne
leave
nop
xor
adc
aaa
fild
sbb
or
cmp
imul
jae
cmp
sub
xor
imul
xor
xor
and
enter
jns
leave
nop
bound
xchg
add
aaa
fs
sbb
lahf
data16
aaa
dec
push
nop
or
cmp
sbb
inc
jmp
and
and
xchg
add
cmp
inc
cwde
imul
ja
add
sub
ss
add
mov
nop
inc
xchg
inc
add
imul
lds
scas
pop
push
cmps
pop
push
xlat
adc
scas
or
add
aaa
dec
or
(bad)
push
inc
jo
cmp
aaa
pop
adc
xor
xor
shl
push
les
mov
(bad)
scas
aaa
out
pushf
je
ret
pop
cmps
arpl
add
add
mov
outs
adc
mov
and
cmp
add
cwde
dec
iret
ss
pusha
pop
xor
daa
mov
dec
iret
fnsetpm(287
mov
push
pop
dec
push
mov
cmp
test
xlat
add
fwait
sub
nop
or
or
xor
adc
ret
jl
adc
test
outs
push
sbb
or
(bad)
ins
call
pop
std
mov
rcr
adc
and
in
dec
pop
test
or
popa
push
sub
(bad)
std
mov
xchg
push
imul
cmp
add
push
pusha
mov
sub
fcmovu
dec
inc
aaa
jmp
xor
hlt
dec
push
sub
aam
iret
jg
shr
add
dec
jecxz
add
inc
add
dec
outs
call
or
fsubr
sbb
nop
adc
(bad)
fs
test
sub
sar
aas
das
daa
or
or
inc
shr
imul
xor
out
das
jne
mov
js
and
dec
das
sbb
sub
or
xor
stos
mov
add
movs
retf
out
jg
jb
push
inc
sub
fnsave
mov
adc
pop
inc
outs
sub
jb
aam
pop
or
push
cmp
jbe
test
daa
xor
add
mov
int
sub
or
das
xor
xlat
xor
daa
cmp
ret
xor
and
mov
int3
outs
jo
adc
push
sub
mov
test
sub
outs
jl
pop
xlat
mov
pop
daa
cs
(bad)
mov
xchg
push
xor
and
jae
sub
ins
daa
sub
sub
jne
das
repnz
das
sbb
(bad)
aam
push
jne
movs
adc
xlat
and
in
gs
jne
xor
and
sub
inc
outs
dec
jmp
sbb
sti
(bad)
xor
add
outs
pop
xchg
mov
mov
aas
jae
mov
nop
addps
xchg
ja
imul
in
fld
xchg
jns
add
sar
xor
add
mov
aaa
jecxz
nop
out
popa
das
adc
dec
xlat
xchg
pop
pop
pop
in
mov
inc
push
ret
and
addr16
inc
jmp
or
and
add
push
sbb
xor
push
push
adc
add
cs
pop
push
in
push
movs
sub
rcr
cdq
pop
stos
shr
in
aas
or
xor
jae
aas
or
pcmpgtw
sbb
mov
push
div
pop
jmp
push
ficomp
or
imul
mov
iret
mov
jg
into
pop
fwait
pop
inc
inc
xor
test
stc
jle
aaa
xor
push
push
outs
adc
bound
xor
pop
cmp
daa
pop
ret
mov
push
push
sub
(bad)
sub
daa
sub
xchg
and
mov
and
fs
imul
daa
inc
push
adc
rcr
aas
or
jno
aam
pop
push
out
arpl
inc
test
adc
scas
inc
dec
xor
adc
jge
movs
mov
pop
lahf
lds
or
sbb
popf
pusha
pop
add
pop
stos
nop
mov
ja
lahf
or
das
adc
cmp
pushf
outs
mov
ja
cmp
ja
in
jb
cmp
ss
mov
ss
xor
jb
scas
xor
xor
iret
inc
dec
inc
push
pusha
or
mov
mov
push
daa
sub
push
xor
xor
retf
dec
ins
ja
cmp
test
jnp
xor
nop
xor
rdmsr
nop
sub
xor
sub
inc
push
cmp
xor
push
call
adc
sub
ss
xor
mov
add
imul
es
rcr
sub
dec
or
pop
addr16
sub
ret
call
test
das
inc
mov
jg
popf
addr16
sub
movs
or
ins
daa
inc
in
fist
sbb
push
test
outs
sub
xchg
test
dec
push
cs
fld
dec
sub
dec
or
adc
push
imul
sub
lahf
das
mov
scas
js
lahf
sub
and
mov
cs
imul
dec
sub
shr
push
cmps
fwait
jl
or
je
lods
dec
fst
popf
mov
imul
jae
sub
das
xchg
adc
inc
inc
pop
push
jb
sub
xor
sub
jo
dec
jmp
jns
inc
sub
scas
add
mov
(bad)
ins
dec
aam
ds
(bad)
out
xlat
xchg
inc
push
push
sbb
scas
and
js
sub
add
inc
jae
movs
pusha
inc
rol
popa
sbb
sub
pop
jbe
daa
and
inc
inc
pop
mov
mov
and
call
inc
aaa
sub
dec
pop
inc
in
sub
push
inc
jo
ja
addr16
dec
push
sub
std
out
and
or
mov
das
xor
nop
or
add
xor
mov
xor
or
aaa
fild
jne
xor
cld
xor
fucomip
sub
jmp
aaa
imul
nop
inc
(bad)
call
(bad)
(bad)
pop
sub
ins
jg
mov
jmp
inc
xor
push
cwde
or
add
cld
aaa
inc
dec
add
jmp
add
mov
pop
jg
call
jmp
xchg
adc
mov
xchg
cmp
xchg
or
sbb
pusha
test
sub
ja
ret
je
add
pop
test
test
mov
addr16
push
adc
push
pop
jl
sub
stos
shr
sub
jg
pop
and
cmp
xor
sbb
ror
cmps
sub
push
mov
and
push
sub
mov
pop
xor
add
xor
pop
inc
daa
or
mov
push
xor
xchg
push
sub
xchg
cmp
and
repnz
inc
pop
out
inc
mov
pop
sar
call
pop
fs
mov
xor
bound
add
and
xor
mov
je
(bad)
shl
and
adc
or
or
and
(bad)
adc
inc
jmp
test
pop
idiv
add
xor
imul
push
adc
xor
dec
pusha
jmp
aas
imul
pop
dec
push
lea
out
inc
mov
outs
jmp
sbb
retf
push
ror
addr16
dec
ds
inc
mov
outs
sbb
xchg
ins
xchg
inc
dec
(bad)
and
cld
jmp
retf
pop
loope
sub
cmp
rol
sbb
push
mov
shl
test
add
test
or
bound
mov
rol
pop
stc
je
mov
sub
ret
in
push
jp
lods
shr
std
pop
or
jmp
adc
test
js
mov
jns
mov
daa
or
adc
adc
add
pop
adc
push
fadd
mov
jle
push
cmp
mov
cwde
(bad)
and
fimul
dec
inc
out
test
movs
push
clc
add
imul
dec
test
xlat
ins
adc
(bad)
test
arpl
sbb
xchg
pusha
add
push
dec
mov
sbb
mov
lahf
mov
call
xor
add
adc
pop
lock
aas
lds
add
xchg
ins
jno
xor
push
sbb
setl
ins
daa
nop
scas
adc
push
fs
outs
stos
(bad)
lock
sbb
inc
es
pop
mov
dec
xchg
sub
(bad)
fbld
sub
mov
cmp
out
and
add
or
push
push
lock
ins
cwde
aaa
and
hlt
xor
or
sub
push
mov
fwait
mov
mov
cmc
cmp
inc
pop
(bad)
adc
jmp
push
push
inc
aam
push
or
outs
and
add
xlat
movs
lea
push
mov
sbb
test
jo
out
outs
and
sbb
inc
lahf
arpl
test
into
dec
jg
movs
imul
out
sub
jg
test
add
shr
pop
daa
cmp
test
xchg
add
imul
bound
and
ins
mov
adc
mov
cld
xchg
mov
je
pop
mov
mov
mov
cmp
and
xchg
mov
mov
and
jb
mov
mov
mov
cwde
or
jl
mov
daa
rcr
js
div
outs
mov
fnstenv
and
data16
dec
in
bound
in
(bad)
mov
out
stos
mov
mov
dec
pop
cmp
je
mov
push
outs
data16
rcl
aad
mov
inc
ja
xor
aam
push
jb
aas
aam
push
adc
fdivr
fadd
jae
or
into
fsubr
ins
rol
xchg
mov
inc
loopne
pushf
or
xchg
sbb
data16
xor
mov
fbld
(bad)
or
add
or
movs
xchg
in
cmp
in
push
es
fs
mov
mov
(bad)
hlt
mov
and
jae
jne
sbb
pop
js
aaa
or
clc
add
xor
jg
cld
cld
push
popf
imul
push
mov
call
add
in
adc
sbb
in
xor
add
cmovnp
or
fnstsw
or
mov
nop
or
inc
mov
or
push
shl
repnz
mov
(bad)
xchg
xchg
jb
adc
movups
sahf
ret
xchg
add
pop
stos
xor
push
push
inc
fs
push
sbb
outs
ror
sbb
mov
(bad)
fild
sbb
dec
leave
jg
xchg
and
outs
jnp
in
or
inc
mov
leave
gs
and
or
dec
jae
ins
add
gs
and
adc
push
outs
loop
imul
jg
nop
and
or
bound
adc
xor
sub
sub
ret
inc
xor
ins
ins
shl
cs
mov
ins
pop
cmp
mov
inc
cmps
push
inc
jns
cld
mov
jb
dec
xor
pushf
sbb
out
mov
push
mov
adc
mov
push
scas
jb
dec
enter
pusha
dec
and
sbb
cmp
test
mov
inc
loope
xor
lock
inc
and
leave
aaa
(bad)
mov
es
dec
dec
dec
xlat
pop
pop
(bad)
pop
fwait
push
adc
sar
aaa
pop
dec
aaa
shl
aaa
adc
dec
xchg
push
nop
nop
add
push
cmp
aas
or
mov
xchg
adc
cwde
push
pop
push
jb
xor
or
or
(bad)
fs
ret
popa
and
fcom
xchg
and
push
inc
pop
adc
mov
cmp
iret
sbb
into
test
jo
jo
nop
retf
jo
adc
dec
pop
mov
inc
sbb
test
je
and
or
push
das
inc
adc
inc
jb
js
nop
mov
(bad)
jl
inc
sbb
mov
mov
popa
dec
es
mov
es
adc
fisubr
xchg
sub
cdq
dec
mov
test
je
das
mov
les
ret
mov
add
ja
and
dec
add
pop
jle
test
jbe
jo
call
or
in
mov
or
pop
push
dec
push
xchg
dec
enter
test
push
lea
or
jbe
and
in
shl
mov
cdq
rol
dec
adc
and
movs
or
and
mov
xor
xor
aam
and
adc
test
in
inc
ret
test
ja
inc
push
rcr
push
cmps
in
clc
xchg
dec
enter
lahf
je
nop
mov
adc
cmp
adc
jne
push
sbb
xchg
push
add
sub
sbb
add
mov
jo
push
cmps
or
enter
push
mov
or
mov
dec
stos
pop
je
pop
rol
adc
(bad)
mov
xchg
stc
push
mov
in
adc
or
ja
or
inc
push
push
sbb
mov
es
or
push
outs
mov
in
xor
sbb
adc
ja
ja
push
push
addr16
sub
test
and
repnz
sub
xor
jb
sbb
push
jl
pop
add
sbb
xchg
add
push
add
or
add
and
jbe
fs
pop
xor
div
std
xchg
inc
lods
addr16
sbb
adc
cmps
js
pop
inc
push
or
push
dec
int3
sub
sbb
pop
ret
and
scas
cmp
or
lods
xor
hlt
enter
pop
cmps
je
pop
add
inc
cmp
dec
in
cdq
nop
enter
cmp
adc
pop
fmul
jmp
or
push
fisub
mov
inc
inc
outs
xchg
jb
adc
fsub
imul
or
pop
call
loopne
out
gs
cmps
in
cdq
nop
pop
in
in
or
inc
add
dec
and
add
es
in
in
push
rol
inc
pushf
cmps
pop
push
outs
je
icebp
push
mov
outs
dec
push
push
or
push
and
enter
enter
push
cs
dec
mov
jl
and
fadd
enter
enter
push
pop
and
shl
adc
ins
(bad)
or
daa
or
ins
shr
xlat
(bad)
movs
pop
popa
mov
inc
pusha
mov
sbb
and
add
push
or
mov
jo
inc
mov
mov
or
test
mov
jb
lahf
add
and
jb
nop
nop
xor
and
push
xchg
enter
aas
xchg
test
mov
dec
mov
mov
rol
jns
cmp
dec
in
repnz
and
or
xchg
mov
push
mov
mov
xchg
mov
cwde
mov
not
ss
daa
mul
(bad)
and
mov
dec
and
in
cwde
nop
dec
sub
sub
(bad)
dec
enter
mov
imul
or
xchg
sbb
mov
sbb
dec
adc
sub
adc
pop
(bad)
fldenv
dec
pop
movs
outs
jae
pusha
in
and
iret
jae
mov
ins
and
dec
mov
sub
das
jmp
mov
sbb
cld
pop
adc
cmp
shl
push
mov
xchg
jl
imul
or
xchg
cdq
outs
sbb
and
pop
pop
jb
fdiv
add
movs
jl
dec
push
adc
adc
xchg
push
scas
mov
fs
ja
adc
cmps
sub
fmul
lahf
or
retf
es
and
push
movs
and
retf
mov
mov
push
push
mov
cmps
les
cmps
outs
in
mov
sbb
cmp
add
loopne
add
adc
repnz
xor
pop
sahf
dec
test
mov
add
ror
sahf
iret
pop
enter
clc
rcr
pop
aam
fsub
fsub
and
out
pop
sahf
in
call
ds
cld
lock
or
xchg
push
ds
out
aam
adc
pop
sahf
out
inc
mov
pushf
or
or
or
fs
out
pop
adc
push
adc
ja
sub
in
es
lahf
retf
dec
lods
and
test
jbe
dec
fiadd
mov
enter
sub
xor
out
popa
or
jmp
fistp
in
pop
cmp
pusha
sbb
mov
sbb
xchg
dec
div
add
movs
adc
cmp
not
ins
ja
adc
je
xchg
iret
in
js
adc
push
nop
rcl
lahf
mov
adc
mov
cwde
mov
sub
daa
mov
je
movs
test
test
fsubp
mov
mov
mov
int3
jge
xlat
pop
mov
mov
cmp
iret
in
mov
fs
int3
lods
pop
fsubp
mov
clc
and
pusha
or
push
adc
test
sbb
jl
jns
(bad)
es
in
scas
mov
retf
and
adc
mov
hlt
mov
clc
adc
jo
in
cld
xchg
fidivr
cli
or
push
ja
test
jp
pop
sahf
out
cwde
and
add
adc
or
or
pop
adc
mov
push
(bad)
mov
add
iret
sub
ret
daa
sbb
fsubr
dec
test
and
test
sub
xor
mov
mov
cmp
ja
mov
loopne
adc
repnz
ds
inc
mov
push
mov
daa
inc
jbe
jo
movs
pop
dec
dec
inc
daa
or
mov
and
(bad)
aaa
stos
mov
lods
lahf
xor
fild
rcl
shl
rcl
and
lods
outs
pop
and
outs
lods
ins
xchg
sub
or
push
mov
xor
out
or
sbb
jmp
xor
in
mov
xchg
add
jg
or
fisubr
in
push
adc
cmp
and
(bad)
ror
inc
mov
shr
mov
aaa
pusha
lahf
xor
push
mov
mov
dec
mov
jg
or
add
xor
rcr
(bad)
aaa
(bad)
(bad)
push
loopne
aaa
scas
nop
sub
outs
push
std
jb
gs
test
mov
aaa
pop
js
xor
adc
in
sar
mov
nop
fisub
scas
aaa
in
cmp
or
inc
mov
inc
add
aaa
xchg
pop
add
fimul
cmps
or
or
and
ror
add
(bad)
cmps
inc
mov
inc
mov
mov
or
adc
out
sbb
jmp
sbb
mov
js
enter
xchg
dec
ds
mov
aam
mov
in
mov
loopne
mov
es
mov
lea
mov
out
push
movs
add
js
push
cmp
mov
adc
sub
add
dec
push
cdq
nop
retf
push
outs
and
enter
or
xchg
or
mov
push
cmp
inc
out
sahf
out
push
pop
popa
push
outs
jbe
aas
sbb
cli
sub
inc
mov
popa
inc
xchg
mov
aas
cs
retf
sub
mov
aaa
sbb
ja
mov
fdivr
add
pop
mov
popf
add
xor
ffreep
outs
and
shr
add
(bad)
fmul
or
enter
mov
enter
movs
adc
enter
mov
and
pop
lock
push
xor
add
jl
sub
or
dec
pop
or
add
sbb
ret
xchg
sbb
push
mov
or
icebp
fwait
add
mov
jecxz
fcomp
and
fwait
and
or
imul
xchg
push
mov
fcom
dec
test
mov
sbb
movs
xchg
add
push
mov
inc
sub
cwde
jb
aam
xchg
inc
adc
inc
add
pop
adc
jmp
sahf
dec
push
test
sbb
not
xor
mov
mov
out
mov
(bad)
loop
mov
push
mov
or
pop
pop
sbb
call
(bad)
call
adc
pop
cli
jg
mov
cmp
jne
movsx
arpl
or
or
das
mov
inc
push
dec
fadd
sub
pop
mov
test
loopne
in
add
jo
pop
cs
mov
rol
jo
mov
ins
ds
scas
push
(bad)
adc
jmp
mov
fldenv
in
sub
call
outs
lock
cmps
sar
fwait
jne
ds
pop
sbb
sti
sbb
neg
xor
and
jnp
inc
sub
mov
das
sbb
xor
nop
jno
ss
scas
dec
dec
mov
hlt
sbb
push
popa
dec
hlt
ins
pop
push
popa
xchg
xor
mov
call
sub
xor
cmp
(bad)
mov
nop
cmps
add
push
mov
dec
sub
adc
sub
stos
and
jno
in
ja
or
xchg
popa
mov
out
and
push
pop
pcmpgtw
adc
mov
mov
fst
(bad)
add
push
call
nop
adc
add
in
lods
pop
jae
in
jne
or
inc
lahf
inc
je
loopne
jge
ror
inc
xor
push
cs
imul
xchg
mov
or
mov
or
jo
add
jmp
in
ror
jns
mov
or
push
cmp
test
rol
ds
ret
mul
pusha
cmp
mov
and
jae
cli
sub
pop
xlat
push
push
mov
adc
add
xor
inc
cmp
jo
dec
add
or
sub
rcl
outs
xchg
mov
cmp
aam
push
cmps
xor
cmps
inc
push
fs
adc
neg
mov
xlat
fsubrp
jle
enter
mov
test
jne
push
pushf
vmwrite
js
or
sub
or
ret
add
je
cmp
xchg
mov
jne
jo
xor
addr16
inc
cmp
inc
xor
in
or
add
inc
mov
dec
aaa
inc
or
xchg
mov
add
iret
cmp
add
adc
lock
or
aaa
loop
movs
(bad)
rcl
popa
add
cmp
pop
sar
add
add
ins
sub
or
fst
push
mov
fdivr
pop
adc
lods
cmp
loopne
jle
xchg
pop
lods
shl
add
mov
call
mov
dec
sub
cwde
add
mov
dec
adc
(bad)
stos
push
add
jo
jno
fdiv
(bad)
movs
jbe
call
adc
daa
lahf
mov
add
mov
or
jae
or
push
lds
fisub
rcl
jae
sub
and
push
ds
scas
dec
bnd
push
int
ins
push
jle
ja
aas
test
xchg
mov
xchg
push
xchg
pop
adc
dec
rol
push
push
or
call
test
mov
push
xor
sub
sti
add
adc
pop
pop
push
test
cmp
push
cwde
int3
mov
pop
imul
push
lods
inc
push
add
mov
call
cmps
cmp
jae
dec
fadd
jmp
cmps
pusha
xor
cwde
mov
lock
or
add
add
jp
add
pop
lock
cmp
push
clc
adc
pop
mov
clc
push
mov
(bad)
daa
and
inc
ja
movs
or
mov
cli
adc
loopne
xchg
ds
aaa
sub
pop
ds
imul
loopne
add
lock
xor
outs
xor
sub
cli
sbb
xor
sub
pop
xlat
sub
mov
add
mov
(bad)
into
add
adc
adc
retf
xor
xor
addr16
rcl
cmp
xor
movs
popf
mov
push
mov
push
mov
mov
push
cwde
shr
movs
movs
jb
nop
mov
nop
retf
rcr
inc
(bad)
call
rcr
ins
test
dec
xor
dec
ins
adc
sub
test
lods
push
push
jmp
pushf
and
ja
fnstcw
pushf
es
sbb
das
sbb
jo
pop
(bad)
imul
out
adc
mov
or
aaa
xor
aas
mov
add
out
add
push
or
enter
xchg
or
push
inc
mov
mov
jo
arpl
lods
add
repz
mov
mov
and
les
sub
gs
shr
in
dec
mov
mov
adc
sub
arpl
add
inc
fiadd
cs
das
rcr
xor
fisub
mov
lahf
xor
sub
jmp
call
call
mov
jae
and
fdiv
ds
inc
jmp
or
loopne
and
retf
mov
add
or
push
(bad)
xlat
sbb
push
(bad)
pop
fucomp
movs
cmp
push
add
add
ins
fimul
pusha
pop
push
int
adc
push
adc
mov
call
test
je
push
cmps
aas
and
int3
sbb
mov
xor
(bad)
lock
cmp
fisttp
push
jb
retf
sub
mov
test
cwde
fmul
inc
mov
ror
add
outs
inc
dec
or
inc
sbb
test
and
shl
arpl
jae
scas
test
aaa
push
gs
imul
xor
out
outs
popf
mov
pop
gs
xchg
jo
pop
inc
mov
add
inc
or
ins
pop
jbe
jae
gs
repnz
push
in
lock
mul
pop
push
inc
or
stos
xchg
push
pop
nop
or
mov
mov
inc
inc
mov
mov
or
call
inc
jle
lds
inc
pop
nop
inc
das
inc
dec
pusha
daa
in
mov
pop
push
stos
ja
mov
adc
inc
call
inc
push
pop
pushf
inc
dec
sub
and
push
or
je
bound
pop
dec
push
and
add
retw
add
inc
stos
inc
push
inc
mov
inc
ja
or
loopne
adc
mov
inc
inc
iret
js
repnz
jbe
sbb
push
inc
inc
sub
fiadd
das
mov
mov
pop
mov
mov
rol
pusha
add
leave
xlat
sbb
aas
jge
inc
xor
inc
call
add
pop
pop
push
xor
movzx
or
push
pop
or
cmp
sub
sub
lock
cmp
in
add
or
xor
mov
jmp
retf
mov
xchg
and
data16
lahf
pop
out
sbb
dec
std
inc
or
mov
mov
add
leave
out
jo
inc
mov
outs
adc
test
or
outs
out
int3
and
dec
xchg
pop
mov
inc
sbb
test
or
test
inc
and
out
fbld
outs
outs
loope
(bad)
addr16
xchg
mov
xchg
sub
mov
aas
loopne
jl
and
add
sub
pop
pop
dec
in
xor
int3
sbb
xor
lea
or
sti
xor
xor
xor
adc
cmp
jecxz
jg
adc
push
push
sar
movs
or
mov
retf
xchg
hlt
xchg
aam
lock
test
jae
int3
ret
or
mov
outs
nop
mov
xor
jg
inc
aam
mov
mov
push
cmp
adc
sti
test
sbb
mov
imul
out
add
inc
cmp
or
xchg
lods
xchg
adc
shl
inc
xor
cmps
push
xchg
sub
popa
daa
int3
jno
mov
das
clc
and
test
es
out
jno
xchg
and
ret
sub
dec
sbb
int3
xor
je
(bad)
ror
dec
test
inc
jg
test
out
ss
or
in
and
mov
rol
in
rcl
or
add
mov
push
aaa
adc
mov
mov
xor
test
les
or
mov
jg
inc
xlat
adc
lods
pop
pop
jg
and
stos
cdq
inc
fs
aas
fcom
add
or
adc
adc
fs
ret
ins
(bad)
jge
push
pop
push
mov
das
add
pop
xor
push
imul
or
add
std
add
jmp
add
test
out
xchg
out
xor
xchg
sbb
sti
add
sub
pop
jmp
cmp
xor
and
ins
inc
or
outs
adc
sbb
scas
xchg
(bad)
dec
dec
retf
test
dec
mov
push
mov
add
and
and
scas
fwait
and
nop
pop
out
loope
mov
dec
mov
inc
dec
pop
add
aaa
xchg
ins
fiadd
push
clc
mov
js
lods
jl
push
fs
loopne
cmp
add
or
pusha
fs
test
pop
ins
in
test
adc
scas
pop
mov
sar
ror
push
inc
popf
int
and
push
fisubr
push
push
ins
pop
outs
repz
pushf
push
jo
dec
cs
lods
outs
into
data16
xor
je
fs
fwait
jmp
cs
push
fidiv
cmp
add
pop
je
xchg
jnp
mov
push
hlt
pop
sbb
in
add
mov
pusha
outs
mul
fs
ss
push
les
rol
mul
out
inc
inc
mov
push
sub
test
cmps
cld
pop
jge
lods
popa
adc
xor
or
out
dec
jmp
inc
sbb
sbb
add
jns
scas
adc
mov
outs
mov
bswap
mov
add
adc
dec
mov
mov
jo
push
mov
jo
mov
push
dec
xchg
jbe
jns
adc
sbb
sub
push
scas
sbb
inc
imul
mov
pop
dec
aas
sbb
iret
mov
cdq
nop
add
btr
xchg
jl
jae
scas
sbb
(bad)
mov
fs
aaa
inc
outs
out
push
xor
adc
mov
inc
xchg
pop
fiadd
(bad)
dec
lods
and
add
xor
sub
cmps
and
into
or
dec
fs
add
addr16
push
outs
test
xor
jns
loope
outs
pop
or
adc
sub
sbb
dec
ficom
dec
push
scas
jne
ret
dec
cmps
mov
dec
sub
mov
jo
xchg
ja
pop
outs
xchg
fmul
(bad)
cwde
test
mov
pop
jmp
mov
fisttp
sahf
add
or
in
adc
icebp
aas
sbb
sub
gs
jmp
gs
adc
cmp
inc
(bad)
mov
and
dec
pushf
push
call
jle
jl
iret
jne
jno
add
xor
int
or
adc
sbb
cmp
mov
fild
push
push
mov
pop
add
rol
cmp
or
fadd
scas
jne
and
xor
mov
xor
inc
add
jnp
push
xchg
cwde
push
pop
nop
enter
jo
mov
jo
xchg
les
sbb
daa
mov
xchg
aam
loop
out
rcl
push
sbb
push
inc
nop
cmp
xor
jmp
inc
ror
xor
test
inc
test
jnp
sbb
push
xor
push
push
mov
adc
inc
jno
retf
sbb
or
jg
loope
xor
out
push
adc
or
xor
xor
and
add
mov
ret
sub
jb
sub
das
mov
rcr
and
push
movs
adc
jle
sub
xchg
mov
jecxz
icebp
fadd
jge
test
inc
pusha
or
mov
push
push
cmc
pop
lock
sbb
scas
loopne
pop
or
xchg
jge
or
push
pop
push
mov
xchg
jmp
or
imul
(bad)
ds
test
test
dec
fiadd
adc
and
sub
push
mov
adc
mov
or
loopne
and
ret
and
jmp
test
xchg
in
nop
shr
(bad)
mov
push
dec
ret
stos
and
fsubp
adc
mov
inc
adc
dec
es
push
xchg
jp
jmp
push
es
ret
adc
cmps
mov
and
push
cmp
(bad)
fist
or
test
enter
push
xchg
sub
jne
jmp
cmp
outs
mov
push
(bad)
or
pop
cmp
sbb
add
cmp
imul
cmp
push
lods
mov
loopne
add
pop
cmp
add
mov
je
pop
push
stc
adc
sti
mov
out
cmp
je
push
push
xor
fcomp
xchg
stos
adc
sub
or
in
ret
cmp
mov
lods
push
dec
and
pop
loopne
call
stos
test
fxch
fld
xor
add
adc
leave
push
sbb
stos
adc
sub
je
push
test
int3
or
jmp
outs
packuswb
cmc
xchg
jbe
add
or
sub
dec
pop
sbb
mov
adc
jae
lea
sbb
push
adc
xor
push
sbb
ret
inc
sub
bound
and
push
clc
and
cmp
dec
mov
inc
pop
and
hlt
pop
cmp
cmp
or
mov
test
test
sbb
or
add
jg
(bad)
repnz
fimul
push
push
mov
bound
adc
mov
sub
mov
and
sub
inc
es
mov
lahf
push
sub
adc
(bad)
jb
loop
mov
retf
or
mov
cmp
cwde
mov
fwait
pop
xchg
or
add
sub
and
js
sub
pop
xor
pop
xchg
and
or
in
sub
cwde
clc
jle
neg
lods
jmp
push
push
jno
jo
xor
cmp
es
js
jbe
cmp
pop
add
inc
outs
loope
jae
push
inc
iret
shl
or
cmp
sub
add
add
add
sub
or
fnsave
cmp
sbb
mov
mov
sar
or
push
mov
ins
jge
jb
sar
popa
imul
sub
pop
dec
fld
daa
mov
xchg
mov
pop
inc
sub
(bad)
dec
cs
xchg
adc
clc
outs
sti
dec
xchg
inc
loope
and
inc
sub
xor
je
sub
movs
mov
dec
xor
add
add
push
movs
adc
nop
or
sbb
cmp
outs
and
dec
sub
adc
out
cwde
sub
jne
cmp
std
mov
sbb
test
call
call
leave
inc
xor
jnp
pop
mov
ud1
adc
mov
push
add
cwde
add
dec
mov
cwde
mov
add
inc
sub
dec
inc
pop
jmp
loope
(bad)
add
loope
or
call
pop
cli
scas
loope
push
push
inc
ja
xchg
xor
(bad)
sbb
ins
loopne
sub
dec
rcl
jp
imul
or
ds
div
xor
xchg
lods
cli
add
loope
popa
and
sbb
mov
xor
and
dec
in
xor
xchg
adc
mov
lock
jl
jns
mov
jb
push
add
pop
hlt
mov
pop
lea
jmp
in
inc
cmc
cmp
sub
adc
jg
or
or
mov
inc
cmp
add
cmp
clc
(bad)
inc
sbb
inc
adc
jne
arpl
sub
pop
sbb
add
ror
mov
inc
inc
cmps
call
in
popa
ins
pusha
aas
inc
cld
sbb
out
mov
je
jns
adc
cld
push
arpl
dec
jnp
enter
movs
mov
push
adc
mov
adc
xor
jp
js
xchg
cmpps
pop
jo
repnz
sahf
lods
into
les
popa
cld
dec
lea
lods
inc
int3
shr
adc
mov
test
dec
mov
leave
add
sub
sub
clc
ret
adc
add
dec
pop
mov
enter
dec
aas
clc
gs
and
je
mov
push
js
xchg
cmps
xor
add
push
add
aam
cli
or
cs
or
push
mov
xor
mov
cmp
test
hlt
(bad)
cld
cld
mov
mov
fs
ss
dec
push
retf
ret
leave
add
(bad)
cmovg
or
(bad)
jo
push
xor
sti
(bad)
xor
(bad)
mov
inc
inc
push
sub
add
mov
arpl
inc
les
and
jb
dec
mov
mov
(bad)
cmp
or
cmp
dec
fwait
scas
call
ins
adc
mov
or
inc
rcl
mov
add
nop
pop
cld
cdq
jnp
xor
fidiv
lds
xor
xor
stos
lahf
test
push
push
pop
(bad)
daa
add
push
repnz
hlt
push
gs
ret
(bad)
fadd
int
xor
in
push
aad
or
pop
sahf
xchg
mov
cwde
fistp
sub
and
inc
fcom
cmp
test
or
and
add
pusha
sub
stos
repz
add
sar
rol
or
stc
jle
scas
ret
jp
xchg
or
mov
aad
daa
call
add
push
sar
sub
adc
inc
fwait
cmp
push
test
push
inc
cli
es
push
adc
mov
mov
push
mov
cmp
fwait
mov
mov
or
add
xchg
inc
mov
pop
inc
xchg
or
nop
cmps
or
test
sbb
and
pop
dec
out
(bad)
sar
pop
push
in
mov
add
rcl
pop
or
mov
test
jb
mov
jle
mov
mov
mov
ins
shr
push
(bad)
mov
xchg
add
jecxz
inc
pop
xchg
mov
scas
das
pop
add
ins
push
sahf
dec
sub
mov
or
mov
mov
mov
add
add
iret
sar
fcom
arpl
or
and
push
rcr
popf
cmp
in
(bad)
in
push
retf
push
(bad)
jge
imul
pop
cmp
ficomp
call
dec
and
and
lahf
test
push
or
inc
dec
cmps
shr
mov
cmp
lods
sbb
lahf
jo
cmps
imul
icebp
add
fadd
out
mov
mov
test
push
push
mov
ffree
cmp
neg
hlt
dec
adc
xor
fsub
icebp
(bad)
imul
dec
into
xchg
jge
clc
sub
lahf
sbb
adc
xor
add
dec
(bad)
jge
fdiv
pop
xlat
xchg
inc
aam
push
add
clc
or
xchg
push
ror
xchg
jmp
sub
add
push
sub
mov
sbb
cs
or
push
fxch
clc
push
add
push
add
pushf
(bad)
cmp
push
jo
fs
sbb
jmp
dec
jmp
das
sbb
and
cmp
inc
repnz
inc
data16
pop
adc
sub
ret
nop
or
cmps
aaa
jmp
adc
and
or
ins
fmul
pop
daa
popaw
add
push
ins
or
pop
(bad)
sbb
(bad)
idiv
call
mov
pop
xchg
dec
pop
nop
push
adc
cmps
fsub
shld
es
lods
mov
popf
outs
loopne
xchg
and
mov
mov
inc
pop
repnz
mov
pop
ret
push
inc
xor
(bad)
jmp
jl
inc
cmp
jne
cmc
in
test
add
or
ins
nop
movs
xchg
mov
add
or
(bad)
aad
sub
xchg
inc
pusha
xchg
(bad)
(bad)
fcomp
cli
leave
dec
and
and
mov
sub
int3
in
push
xor
gs
bound
inc
(bad)
loop
adc
sbb
loopne
push
push
nop
push
cmp
add
add
adc
push
sub
push
icebp
and
cld
movs
cwde
(bad)
jo
adc
add
jo
jmp
mov
sbb
lds
mov
lods
test
ret
xor
adc
aas
mov
xchg
xchg
inc
cmp
rcr
punpckldq
push
lods
outs
pop
mov
ins
out
dec
mov
sbb
push
js
mov
clc
adc
and
inc
retf
mov
movs
dec
add
jl
push
in
add
mov
adc
sbb
cmp
movs
push
lods
jb
push
fst
fdiv
lea
jge
mov
mov
mov
inc
mov
inc
jno
shr
jno
inc
shl
mov
and
or
push
nop
sbb
jae
sbb
hlt
imul
or
push
or
call
mov
push
inc
add
push
je
mov
aam
shl
cmp
arpl
adc
mov
ret
scas
mov
cmp
or
test
jmp
ss
jp
xor
lahf
push
outs
push
in
adc
iret
push
mov
inc
pop
pop
inc
add
push
mov
jmp
data16
inc
jb
cmps
addr16
or
xchg
mov
ficomp
and
fcom
in
lock
sub
je
clc
fnstenv
fstp
aaa
jmp
imul
or
mov
mov
add
(bad)
pop
shl
sbb
mov
fiadd
aam
test
aam
fld
bound
sub
inc
and
xchg
mov
sbb
inc
in
xchg
out
bound
sub
das
pop
sbb
xchg
clc
or
cmp
ins
inc
xchg
fcomp
les
or
sbb
imul
adc
xor
pop
adc
mov
xchg
sub
sbb
mov
inc
ins
call
call
add
xchg
dec
or
mov
fcom
jne
inc
fadd
push
test
adc
or
sbb
cmc
or
pop
jle
repz
icebp
add
int3
inc
adc
mov
xor
ins
lods
retf
push
mov
add
sbb
ror
sar
inc
(bad)
rol
cmp
ss
push
fsub
inc
shl
pop
hlt
xor
cwde
push
scas
jmp
pusha
fs
inc
xchg
mov
idiv
dec
pop
inc
jg
pop
jns
stc
add
push
and
mov
icebp
add
pop
and
mov
xchg
lock
sub
push
mov
rcl
mov
and
jo
pop
cmp
mov
(bad)
sub
icebp
add
mov
sub
hlt
xchg
dec
int3
mov
aam
adc
mov
pop
push
rol
shr
xlat
xor
xor
mov
cmp
or
xor
mov
mov
xchg
pop
inc
ss
cmp
outs
ror
pop
mov
sbb
or
mov
sub
test
xor
pop
inc
pop
pop
js
mov
and
and
lods
jl
fistp
out
sysret
mov
jecxz
cld
aaa
or
jb
in
push
xor
pusha
inc
outs
pusha
add
push
adc
xor
pop
fisubr
mov
cwde
cwde
jo
sub
xor
sub
adc
test
enter
or
jp
cbw
js
adc
push
test
add
push
adc
lock
nop
sysret
cmp
pop
sub
xchg
je
ja
lock
ins
mov
xchg
adc
add
faddp
pusha
les
ja
mov
aam
das
sub
in
inc
and
or
sub
xor
and
mov
rcl
ss
xor
leave
test
ins
arpl
ss
scas
dec
inc
sbb
pop
cmps
inc
hlt
rol
and
sbb
shr
sbb
test
test
xor
nop
or
adc
add
pop
movs
popa
sbb
pushf
scas
in
adc
push
int
ins
jecxz
jbe
hlt
and
and
add
cmp
adc
inc
sub
xchg
mov
fist
sub
test
nop
daa
push
mov
and
sub
pop
mov
adc
pusha
and
jg
fisub
rcr
clc
inc
ja
call
dec
adc
dec
sub
xchg
dec
out
movs
lods
inc
nop
xor
add
outs
(bad)
mov
or
adc
fwait
out
or
clc
sbb
in
add
test
or
aam
ja
call
call
or
and
inc
loopne
loopne
lock
adc
cmp
or
push
mov
loopne
mov
add
add
movs
out
imul
jmp
mov
inc
loope
popa
cmovbe
xchg
xchg
iret
lahf
mov
movs
cmp
aaa
push
adc
aas
sbb
aad
sub
nop
xchg
in
cmps
mov
sub
mov
adc
dec
inc
inc
dec
dec
push
or
xchg
xor
(bad)
adc
dec
mov
adc
dec
add
sbb
sub
shr
mov
xlat
scas
push
add
sub
fwait
inc
fwait
cs
fild
lea
std
or
xchg
push
adc
or
jo
popf
aad
ret
sbb
push
sub
lods
xchg
sbb
hlt
mov
and
in
rol
mov
adc
inc
adc
mov
add
push
xor
push
retf
leave
and
sbb
mov
repz
mov
xchg
or
ss
sar
cmp
call
jne
das
jecxz
mov
push
mov
mov
shr
test
pop
fild
sub
mov
sbb
pop
dec
adc
sub
add
(bad)
pop
dec
lock
daa
mov
adc
xor
xchg
xlat
fsubr
mov
hlt
and
lods
clc
add
jecxz
pop
ds
adc
push
pop
mov
daa
jbe
xchg
out
repnz
add
pop
push
aas
mul
pusha
out
sub
cmp
push
sahf
out
sahf
pop
jo
xchg
cmps
mov
retf
add
repz
dec
pop
ins
iret
repz
jle
mov
out
cmp
test
out
xor
mov
cmp
leave
outs
mov
push
js
and
adc
dec
push
adc
mov
sbb
sbb
dec
push
lock
nop
ficom
pop
or
push
inc
enter
sub
inc
add
sbb
and
pop
sbb
xchg
or
xchg
mov
adc
cmp
sbb
or
jmp
retf
jbe
inc
sbb
sbb
or
cmovns
movs
sbb
xchg
sbb
mov
fstp
or
or
in
xchg
sbb
pop
(bad)
nop
push
sub
inc
pop
pop
es
mov
lock
jae
and
push
mov
outs
push
push
and
ins
pop
push
xchg
and
mov
push
dec
xchg
xor
mov
jne
outs
jg
mov
add
add
push
aam
loope
mov
sbb
inc
imul
jbe
sub
dec
out
mov
xor
adc
jle
or
outs
int
bound
es
add
neg
test
lock
jle
inc
mov
sahf
shl
lock
pop
mov
in
lock
inc
sub
sub
dec
cmp
cmps
push
jae
call
fcom
dec
and
add
ins
pop
ret
jge
adc
xor
ins
and
movs
ds
xchg
shr
clc
pop
jae
ja
xchg
mov
cld
xor
cmp
push
add
pop
inc
pop
add
inc
add
inc
mov
cwde
nop
mov
inc
pop
sbb
adc
mov
pop
inc
or
sahf
mov
sub
or
mov
ds
adc
pop
and
mov
es
movs
inc
adc
jmp
mov
xor
jne
lahf
dec
jecxz
ins
push
add
xlat
adc
cli
pop
cmps
xchg
pop
jmp
push
imul
popa
sbb
(bad)
cli
cs
js
cmp
push
cmps
movs
push
cs
push
loop
xlat
ficom
ror
mov
pop
lea
and
aam
or
cmp
ret
push
loope
cli
push
xor
movs
rcl
dec
popa
(bad)
shl
sub
sbb
movs
add
in
xchg
inc
push
add
pop
pop
dec
or
mov
mov
or
enter
push
clc
fcom
xchg
sub
call
lahf
cmps
fldcw
sbb
test
pop
xchg
inc
ror
je
pop
push
sub
add
push
mov
push
inc
xchg
(bad)
sub
adc
sbb
dec
and
jle
sbb
fld
dec
push
cmp
js
pop
je
adc
inc
xor
push
mov
loope
xlat
in
popa
dec
loop
xor
and
rol
mov
repz
(bad)
fistp
es
je
pop
movs
ror
dec
arpl
jmp
retf
ss
(bad)
sbb
stos
dec
sar
icebp
adc
and
mov
xor
or
sbb
xchg
addr16
xor
and
in
aad
and
add
sub
lahf
icebp
or
fs
push
dec
dec
gs
loopne
je
mov
and
jecxz
lds
and
adc
push
in
fucomp
push
ja
pop
xchg
xchg
push
xchg
cmp
or
in
fdiv
jno
jns
repnz
test
adc
enter
sub
leave
push
xchg
or
into
in
pop
out
sub
test
add
pcmpeqw
cmp
or
(bad)
jecxz
adc
jl
cmps
add
(bad)
iret
fnstsw
add
push
dec
xchg
sub
jb
and
add
xchg
pop
iret
mov
push
and
test
xor
cwde
adc
adc
jo
or
or
(bad)
xchg
sub
push
xchg
xor
out
or
or
repz
lods
xor
xor
xor
add
in
mov
sub
add
shl
test
mov
xor
xor
inc
push
jl
int
(bad)
nop
inc
(bad)
fs
fist
push
adc
add
sbb
sub
or
outs
mov
sub
push
dec
mov
into
rcl
arpl
inc
sbb
sub
push
js
dec
in
mul
xchg
or
movs
add
fcomp
or
jae
push
sar
inc
test
in
loop
cdq
fadd
daa
in
popa
or
mov
movs
fmul
out
and
pop
cmp
xchg
imul
mov
lds
push
adc
sub
dec
aad
retf
add
in
in
sub
push
dec
pop
out
enter
fild
sub
inc
mov
dec
cmp
sbb
mov
mov
xor
add
lods
or
dec
or
addr16
mov
cli
jb
xchg
mov
push
mov
inc
adc
fwait
dec
iret
sub
push
jecxz
cdq
mov
data16
daa
data16
mov
and
jmp
push
rcr
mov
pusha
mov
or
add
imul
sbb
mov
int3
lods
mov
int
mov
mov
mov
jo
pop
mov
mov
ds
jbe
push
push
jo
(bad)
sbb
xor
stos
push
aas
sub
push
cmp
adc
int3
xor
mov
mov
shl
dec
iret
repz
mov
sbb
jmp
aaa
and
add
retf
add
and
scas
ret
fucomi
mov
imul
sbb
in
repnz
jmp
add
and
mov
pop
jmp
dec
adc
push
ins
aas
add
add
mov
cmp
push
sbb
adc
sbb
popa
adc
pop
sub
dec
xchg
dec
loop
dec
jg
pop
add
ins
mov
ret
mov
sbb
inc
or
daa
mov
push
daa
(bad)
outs
gs
adc
daa
movs
je
xchg
rol
movs
mov
ins
xor
movs
inc
lds
(bad)
dec
cmovbe
xchg
loopne
inc
jb
lea
int
(bad)
rol
or
mov
add
popf
fcomip
add
inc
jne
sub
out
out
ss
retf
popf
popa
test
push
push
fs
test
pop
and
stos
les
cwde
inc
bound
fnstenv
add
ins
sbb
xor
sub
xor
popf
in
nop
or
iret
nop
mov
enter
or
xor
fist
and
sub
pop
(bad)
imul
aaa
inc
imul
adc
cmp
outs
and
enter
xor
or
dec
mov
dec
mov
in
push
and
xchg
inc
pop
aaa
call
std
mov
add
cmp
sbb
dec
jb
mov
jmp
inc
repz
inc
loopne
in
jmp
mov
push
nop
jecxz
or
cmps
inc
inc
or
mov
scas
jmp
ret
add
inc
inc
adc
and
adc
cwde
pop
add
mov
mov
mov
lea
sub
sar
pop
rcr
cdq
hlt
je
push
outs
(bad)
mov
xor
jl
dec
adc
call
loopne
xchg
xor
mov
adc
cmps
or
loopne
jecxz
nop
xchg
neg
(bad)
lods
xor
into
movs
xor
(bad)
xchg
adc
gs
lahf
adc
dec
xor
fdivr
ins
test
cmp
imul
mov
cmc
cmps
or
sbb
add
xlat
clc
jp
test
ins
outs
mov
out
sti
test
or
sub
add
int
aam
push
mov
sub
div
mov
or
out
dec
mov
jmp
(bad)
cli
loopne
sub
and
int3
jb
ds
nop
in
int3
pop
pop
call
hlt
pusha
js
adc
cmps
push
ror
mov
xor
enter
mov
addr16
scas
stc
ss
dec
ds
lock
push
leave
adc
std
fsub
push
jb
aam
xchg
adc
inc
mov
movs
add
(bad)
or
cmp
sti
cmp
in
dec
nop
xchg
add
xor
enter
cmp
(bad)
std
arpl
pop
lock
pop
cmp
adc
mov
lea
pop
outs
enter
scas
inc
rcl
cmp
push
sti
add
sti
cwde
loopne
mov
adc
pusha
or
jbe
imul
movs
cdq
adc
xor
out
out
sbb
sbb
and
inc
inc
adc
sub
sbb
jg
bound
popa
ss
add
(bad)
jbe
or
add
mov
jg
mov
and
cmps
test
jmp
add
pusha
enter
and
leave
loope
test
(bad)
pop
xor
sbb
(bad)
mov
inc
cmp
lods
imul
(bad)
sbb
xchg
inc
cmp
xchg
push
sbb
bound
test
mov
je
out
call
lock
in
shld
mov
into
lods
and
push
test
aas
pop
lods
je
mov
and
push
lods
leave
pop
inc
fistp
(bad)
imul
fisub
fmul
shl
xlat
sbb
(bad)
fisttp
mov
mov
push
test
pop
jg
push
xor
enter
sub
and
les
stos
push
test
stos
inc
and
leave
add
cwde
pop
(bad)
mov
sbb
inc
xchg
outs
or
sbb
mov
inc
and
xchg
or
neg
mov
or
sub
jo
sbb
cmp
shl
stos
rol
pop
jg
xchg
inc
adc
test
nop
xor
adc
mov
pop
add
cdq
ror
and
add
cmc
xchg
cld
ret
or
ficomp
sahf
in
adc
xor
mov
lods
test
xchg
jnp
loop
adc
lea
leave
mov
cmp
adc
or
lods
in
cmp
outs
jmp
dec
sub
in
and
iret
jae
xor
in
cmp
hlt
jmp
nop
pop
mov
xchg
pop
add
and
pop
pmulhuw
stos
add
or
lock
lods
dec
adc
mov
push
mov
jno
add
scas
arpl
inc
ret
and
and
fnop
mov
out
pop
in
inc
shl
loopne
fwait
push
aas
mov
dec
fadd
add
add
add
mov
call
mov
cmp
and
(bad)
xchg
adc
and
xchg
mov
jb
jns
xchg
cwde
fisubr
retf
fs
pusha
shl
jle
inc
rol
fimul
jb
cmp
add
dec
or
mov
je
invd
xchg
and
add
xchg
(bad)
pop
out
fmul
dec
jb
pop
inc
(bad)
sbb
movs
test
sub
(bad)
mov
loopne
in
enter
jno
fcomp
or
aam
jmp
ja
sub
sti
js
in
xor
loopne
mov
dec
in
fst
in
add
mov
inc
leave
mov
pushf
dec
pop
pop
mov
mov
xchg
mov
jns
sbb
cmp
bound
mov
test
in
imul
fidiv
pop
in
call
xchg
in
mov
jp
jae
cmp
xchg
xchg
cs
into
add
dec
arpl
ins
sbb
xchg
push
xor
mov
jmp
dec
sub
cmp
mov
pop
leave
mov
inc
mov
scas
nop
inc
cwde
sbb
mov
es
dec
jb
aam
ss
and
aam
or
lahf
out
iret
loopne
cdq
add
jb
xchg
mov
lods
arpl
dec
push
in
aad
mov
inc
fild
mov
hlt
sub
sub
es
test
mov
nop
out
fcom
add
dec
std
jne
cs
ret
xor
fmul
push
fs
adc
pop
in
dec
clc
lock
ins
dec
fadd
jne
push
and
cmp
dec
ja
or
out
or
sbb
dec
fwait
int
sub
mov
jmp
cmp
push
jns
jg
pop
mov
mov
scas
jmp
in
hlt
cmp
mov
leave
add
mov
shl
inc
xchg
add
adc
lods
mov
loope
mov
xchg
cmp
xchg
call
inc
and
in
inc
cmps
adc
(bad)
mov
inc
movs
das
cmps
mov
imul
mov
mov
sub
icebp
mov
jecxz
rcl
mov
cmp
mov
repnz
imul
jb
je
lods
in
mov
or
imul
arpl
and
xchg
clc
dec
mov
push
xor
xor
in
pushf
dec
pop
std
out
mov
in
repz
adc
xlat
jg
retf
call
jns
and
lods
lods
inc
(bad)
in
add
dec
lock
sbb
pop
mov
in
lds
or
adc
jns
mov
add
push
add
jno
mov
dec
(bad)
scas
sbb
hlt
jle
inc
jb
xchg
pusha
jb
lahf
pop
nop
pop
les
xchg
push
enter
daa
mov
ins
jmp
adc
addr16
mov
cmp
movs
xor
sub
in
adc
adc
in
in
adc
push
pop
in
in
sbb
sbb
in
in
sbb
push
pop
in
in
add
add
in
in
add
push
pop
in
in
or
or
in
in
or
push
pslld
icebp
iret
sar
enter
outs
mov
repnz
repz
cmc
dec
dec
dec
dec
div
clc
stc
dec
dec
dec
dec
cli
sti
cld
std
dec
dec
dec
dec
(bad)
jmp
loope
dec
dec
dec
loop
in
jb
or
iret
out
rol
shl
sub
js
shl
add
ss
or
vmovupd
mov
lea
enter
fmul
rol
add
push
dec
pop
mov
movs
mov
or
xchg
push
hlt
call
call
lahf
dec
add
loope
cmp
bound
add
xchg
pop
xor
enter
mov
jle
test
jne
out
add
sbb
cmp
test
xchg
sbb
push
dec
mov
add
pop
ret
inc
adc
push
loop
in
shl
mov
add
pop
or
add
(bad)
push
cwde
push
(bad)
test
popa
sbb
or
rol
xor
aam
enter
jle
push
adc
pop
jecxz
pop
and
add
mov
not
mov
xchg
shr
loopne
and
ficomp
inc
stos
or
cmp
adc
push
push
xchg
mov
dec
int3
xchg
rol
hlt
popa
mov
iret
pop
and
movs
and
addr16
enter
cmp
jne
jmp
outs
mov
jg
(bad)
aam
push
in
or
ins
(bad)
out
movs
out
shr
adc
push
mov
jmp
(bad)
fisttp
mov
mov
sti
shr
mov
or
inc
mov
dec
jg
dec
sbb
or
add
out
inc
mov
and
test
add
or
mov
rol
(bad)
and
sub
dec
mov
ins
add
daa
dec
sahf
ins
ror
dec
(bad)
jne
add
cmp
dec
ret
ret
(bad)
adc
inc
pop
mov
mov
add
xchg
fadd
sbb
pop
xchg
adc
push
pushf
pop
int
or
retf
and
dec
(bad)
outs
pop
scas
add
ret
loopne
repnz
hlt
push
(bad)
stos
mov
cmp
js
retf
pop
imul
dec
push
(bad)
pop
into
popa
sbb
mov
ja
cmp
add
sbb
enter
add
hlt
repnz
or
pusha
jl
in
or
cld
mov
mov
mov
mov
sub
jl
iret
fwait
or
imul
cmp
test
(bad)
cs
hlt
hlt
push
ror
cmp
in
xchg
nop
pop
cs
add
out
pop
xor
test
outs
sub
push
fst
add
loop
and
mov
xchg
cdq
sbb
jno
out
jae
xor
call
in
pop
add
out
xor
lock
sub
in
in
pop
test
js
(bad)
pcmpgtb
push
adc
lock
jo
push
cli
fnstcw
loopne
sub
or
pop
ret
pop
retf
push
add
add
loopne
ss
xor
sti
push
xor
(bad)
retf
out
mov
or
repnz
fwait
pop
cmp
aam
xor
test
loope
pop
fsub
add
jns
add
push
adc
das
jp
movs
mov
xor
pop
inc
out
or
arpl
xor
clc
add
xchg
movs
jo
pop
push
sub
jae
ficomp
and
and
fild
mov
push
pop
dec
shl
mov
sub
mov
inc
mov
mov
cld
mov
shl
call
mov
or
daa
sub
mov
push
mov
mov
sub
cmp
or
and
sub
test
enter
or
and
dec
pop
call
dec
jle
repnz
xor
mov
loope
(bad)
inc
setp
loope
and
xchg
shl
in
pop
sbb
add
(bad)
fucom
rcl
dec
mov
pop
or
adc
jns
lahf
jnp
in
push
out
pop
fadd
lods
adc
mov
mov
mov
add
jno
fsubr
test
pop
cmp
mov
scas
sbb
les
dec
rol
pop
pop
ss
test
xor
outs
test
rol
out
aaa
xchg
sub
jb
cmp
sub
sub
jg
aaa
mov
mul
pop
inc
icebp
fs
inc
push
add
retf
jo
sub
mov
(bad)
mov
adc
mov
daa
xchg
daa
sbb
lds
and
push
dec
add
repnz
adc
popa
mov
adc
int3
arpl
mov
jmp
fdivr
in
jbe
sub
ror
mov
retf
lods
lock
dec
fisubr
fld
data16
dec
push
mov
movs
movs
mov
ins
repnz
and
jg
js
repnz
cmp
push
jae
or
or
jae
xchg
add
iret
lock
fadd
jno
xor
sub
push
or
or
loopne
or
(bad)
(bad)
xor
hlt
repz
iret
mov
add
jne
jnp
xlat
xchg
sub
out
and
sub
lahf
popa
push
push
call
add
rol
call
add
push
push
sbb
cmp
jl
xchg
cli
inc
add
xchg
aad
outs
or
and
xor
imul
add
xor
add
adc
or
adc
jge
and
mov
add
into
sub
adc
add
call
sbb
push
pop
adc
aam
rcl
mov
mov
paddd
in
dec
(bad)
ror
hlt
mov
pop
clc
mov
or
jo
imul
daa
push
dec
(bad)
adc
push
push
and
stc
nop
inc
push
inc
inc
dec
push
xchg
xchg
inc
push
dec
inc
leave
(bad)
dec
jnp
inc
inc
mov
push
push
(bad)
push
nop
jbe
ja
push
dec
pop
leave
arpl
inc
push
out
dec
inc
sbb
cmp
dec
push
ja
inc
sub
cmps
add
pop
movzx
dec
pop
lahf
push
pop
aaa
dec
lods
popf
jbe
push
pop
dec
xlat
dec
push
mov
inc
inc
lock
inc
inc
push
dec
(bad)
sbb
hlt
pop
dec
cmps
adc
inc
inc
add
xchg
push
outs
push
inc
pop
dec
and
inc
mov
and
dec
dec
pop
fild
jnp
push
dec
inc
leave
push
aaa
pop
in
cmp
push
aaa
inc
push
push
inc
dec
dec
xor
pop
mov
dec
push
dec
fcmovnbe
jae
das
leave
leave
mov
xlat
dec
or
addr16
inc
dec
test
dec
add
xor
cmp
inc
mov
lock
push
cmps
je
mov
add
adc
cmps
cmp
jne
xor
inc
frndint
cld
sbb
cmp
fcmovne
scas
cmp
fwait
or
inc
add
inc
adc
and
jecxz
mov
popa
scas
push
sub
pushf
add
in
jg
inc
bound
aas
cmp
aas
push
jbe
es
xor
(bad)
jl
inc
jb
sbb
test
(bad)
push
jg
(bad)
fist
aaa
mov
xor
mov
push
inc
scas
fadd
bound
out
neg
inc
outs
cmps
inc
xor
inc
ss
fwait
dec
inc
aas
add
nop
sbb
xor
inc
pop
test
inc
push
mov
ss
enter
pop
push
xchg
inc
cmp
inc
xor
push
xor
inc
outs
leave
test
xor
jb
(bad)
test
pop
cmovg
and
push
inc
inc
pop
xor
dec
inc
jnp
ret
and
cdq
mov
and
cdq
sub
and
pop
dec
inc
inc
xchg
pop
jb
inc
push
push
adc
rol
dec
pop
xchg
push
mov
inc
xlat
scas
loope
outs
dec
pop
dec
aas
mov
xor
inc
dec
push
push
loopne
xchg
pop
push
sbb
ficomp
push
inc
dec
mov
push
pop
dec
outs
xor
add
outs
jb
pop
inc
push
jg
push
in
pusha
dec
lahf
dec
xor
push
mov
push
jmp
imul
push
sti
mov
fs
push
mov
dec
xchg
sbb
push
jg
pop
enter
push
push
push
shl
ret
inc
outs
sbb
pop
pop
imul
sub
mov
and
add
or
push
add
adc
loopne
cwde
retf
int3
fidivr
add
aaa
into
mov
and
and
movs
fcom
lea
nop
xchg
push
loop
jne
lock
xchg
lods
jnp
mov
mov
jmp
in
mov
jbe
shl
fnclex
retf
cmc
cmp
cmp
jge
rep
jne
cs
jb
outs
add
sub
add
sbb
fsubr
inc
xor
mov
lds
add
push
cdq
mov
stos
xor
and
push
mov
fld
pop
(bad)
fiadd
fisttp
(bad)
aaa
call
xor
or
mov
fisttp
adc
stc
or
adc
lods
fsubr
add
cdq
iret
add
sub
mov
or
pop
fucomp
and
mov
imul
xchg
pusha
cmp
inc
ins
push
sub
add
push
sbb
loope
aaa
inc
pop
mov
jl
gs
pop
sub
sbb
rcr
das
and
sub
fisttp
add
push
push
mov
add
mov
loope
cmp
jg
sbb
outs
push
jle
cmp
jl
push
mov
pop
inc
lods
retf
jg
jne
adc
push
push
lods
pop
push
or
cmps
mov
jecxz
and
cmp
addr16
sbb
cli
stos
dec
add
add
popa
leave
sub
and
iret
dec
dec
xor
xor
xor
cmp
mov
add
add
aad
add
and
movs
mov
push
pop
shl
push
mov
xchg
mov
je
sub
pop
jle
cmp
xor
xchg
cmp
cdq
ror
int
ds
xlat
dec
push
dec
sbb
arpl
push
adc
and
xlat
cmps
loopne
or
push
rcl
sub
pop
add
or
pop
jle
jmp
xchg
loopne
mov
dec
add
mov
sub
out
hlt
jb
xchg
jo
call
dec
jae
scas
sti
cs
mov
repnz
les
mov
mov
das
pop
mov
fdivr
loopne
jg
retf
xchg
shl
mov
in
mov
sub
or
xchg
mov
pop
in
test
pop
add
pop
cmp
or
push
push
mov
loop
pop
pop
pop
add
imul
dec
xor
ins
xchg
dec
xor
push
popa
jae
mov
and
sbb
fild
inc
jmp
nop
mov
loop
add
xchg
xchg
sbb
nop
jne
adc
ret
addr16
ins
call
arpl
cli
ds
bound
in
addr16
jge
dec
add
jg
ror
cmp
jge
inc
leave
mov
adc
xor
das
mov
cmp
mov
adc
dec
fwait
int
and
mov
xchg
stc
push
xor
out
xor
add
fsub
in
jb
adc
in
push
push
rcl
rcl
in
int3
add
mov
ins
xor
pop
mov
shl
cmp
push
cmp
jo
ret
neg
push
push
xchg
xor
add
das
aad
cmp
mov
pop
push
popa
pop
sbb
sbb
or
xor
das
pop
out
pop
jmp
cmp
lods
retf
out
inc
fs
dec
shl
or
es
in
in
cmp
push
stos
loop
mov
mov
adc
fisub
stc
enter
movs
enter
fstp
cmp
mov
and
fld
das
dec
loopne
sbb
scas
ror
fdivr
and
(bad)
jmp
and
and
and
es
sub
sub
sub
cs
cmp
loopne
inc
pop
pop
pop
pop
pop
pusha
jnp
jge
xchg
sbb
or
add
push
stc
sub
out
add
cmps
xchg
mov
ins
pop
sub
dec
lea
clc
jp
sbb
nop
pop
inc
ror
or
adc
mov
dec
inc
xchg
pusha
mov
add
mov
cmp
mov
push
inc
jg
add
inc
or
movs
adc
mov
mov
push
adc
out
ja
adc
aaa
cs
adc
shl
push
jns
mov
popa
inc
jle
pop
popf
aaa
mov
dec
(bad)
outs
adc
dec
add
and
mov
cmc
xor
sbb
cmp
mov
xlat
inc
jge
add
push
(bad)
sub
into
sbb
mov
jl
neg
rol
ret
jecxz
in
mov
sar
jl
jmp
outs
jns
addr16
je
xlat
xchg
fist
mov
pop
inc
inc
push
push
jmp
popa
sbb
sub
in
sbb
and
in
cdq
nop
imul
sbb
loopne
pop
ret
ficom
mov
dec
je
or
and
ret
and
xchg
popf
jmp
adc
es
(bad)
scas
cs
popf
and
inc
test
test
add
in
pop
push
inc
jg
push
inc
push
dec
push
push
pop
dec
dec
dec
add
push
lods
loopne
cdq
jp
push
dec
push
pop
popa
jb
adc
jmp
mov
mov
xchg
push
dec
pusha
add
or
inc
inc
jmp
pop
in
add
jg
pop
cmp
nop
xchg
dec
or
not
clc
cmp
iret
or
dec
cld
daa
adc
(bad)
xor
xchg
enter
dec
and
cld
ret
or
sbb
lods
out
xchg
pop
push
loopne
push
inc
push
clc
dec
ret
addr16
ins
outs
outs
jo
scas
test
outs
jp
jne
ja
jns
inc
dec
inc
inc
inc
dec
rol
dec
dec
dec
dec
int3
push
push
push
adc
bt
pop
pop
jge
sub
ds
lahf
fnstcw
dec
fild
sub
push
push
dec
pop
or
add
adc
movs
sar
sbb
xchg
xchg
scas
das
(bad)
mov
jle
jge
xor
or
inc
push
(bad)
cmp
je
cmp
pop
sub
hlt
sbb
push
push
aam
sbb
(bad)
ficom
xchg
sbb
dec
das
cmp
loop
jg
mov
dec
fsub
iret
in
and
fsub
enter
jo
or
cmp
dec
mov
mov
cmp
cmps
in
push
sbb
retf
mov
jnp
mov
jmp
mov
into
inc
rcr
xchg
jo
push
mov
neg
pushf
loop
loop
jne
sbb
xor
add
mov
pop
fimul
sbb
leave
pushf
cmp
les
dec
xchg
mov
cmp
add
add
sub
jo
sti
sub
mov
repnz
lock
out
inc
pop
sub
lea
fst
shl
cld
aaa
arpl
push
sub
in
mov
pop
fsub
mov
xor
mov
js
add
jnp
mov
add
xchg
jo
pop
daa
and
ds
xchg
pop
dec
dec
push
inc
add
ret
xor
das
repnz
add
mov
lock
push
in
dec
lock
or
adc
and
jnp
inc
inc
add
call
mov
arpl
and
mov
xor
mov
pusha
mov
cwde
icebp
and
sbb
xor
jns
jmp
xor
jne
push
push
bound
add
lds
lds
inc
mov
iret
sti
(bad)
(bad)
in
mov
pop
cmps
loope
push
hlt
cmp
cmp
or
inc
imul
xchg
push
pop
inc
arpl
enter
inc
push
les
les
jmp
shl
rcl
add
or
sbb
mov
jecxz
mov
pop
das
push
inc
jp
pop
retf
lea
push
je
aam
cmc
mov
ret
test
inc
mov
cli
pop
dec
in
cdq
sub
add
mov
jbe
mov
test
push
pop
push
sbb
or
loop
loop
push
nop
mov
scas
outs
cmp
jne
mov
bound
nop
jmp
cmp
jne
das
dec
and
lods
js
dec
jle
js
push
inc
loopne
push
dec
ret
add
mov
clc
or
loopne
sbb
inc
and
repz
ja
add
pop
je
sub
adc
add
shl
in
pop
inc
mov
add
mov
jo
and
push
cmps
mov
ss
mov
daa
pop
jmp
sahf
mov
add
add
nop
retf
cld
add
loop
fiadd
xor
outs
push
jo
call
inc
pop
je
ss
add
shl
outs
add
or
(bad)
dec
sbb
movs
sbb
fdiv
sbb
std
js
cmp
test
fbstp
rcl
mov
and
into
mov
test
loopne
add
icebp
add
xchg
and
push
je
aad
adc
popa
or
scas
(bad)
adc
xchg
cld
test
sub
dec
stos
ins
sbb
pusha
mov
sti
jns
cdq
fsub
movs
or
test
fild
div
jg
ins
int3
(bad)
cmp
sub
cmp
inc
sub
in
cli
cmp
pop
and
mov
test
in
aas
cmp
or
push
rol
cmps
push
and
dec
not
ret
or
sub
fcom
bound
pop
jp
push
test
jle
adc
add
sbb
cmp
jne
jmp
push
or
stos
and
mov
adc
mov
(bad)
mov
imul
or
dec
sub
pop
mov
jg
clc
and
jge
stc
dec
sub
stos
pop
inc
stc
bound
push
or
jmp
xor
adc
adc
stc
ins
jmp
push
xchg
pop
or
cmp
gs
pavgb
mov
jae
jns
and
mov
leave
add
xchg
fistp
pop
cmp
lock
xchg
shr
xor
push
jmp
xor
or
nop
or
mov
cmp
mov
inc
cdq
cmc
adc
imul
inc
mov
movs
lds
inc
push
ror
rcl
jle
ret
ret
sub
int
jae
pusha
pop
or
mov
inc
pop
les
pop
jg
push
fsub
dec
sbb
and
mov
psubsw
test
icebp
or
jne
or
jmp
inc
jb
inc
xor
stc
ins
imul
les
add
es
sbb
loope
xor
cli
popa
movs
mov
fistp
bnd
popf
push
mov
mov
mov
pop
outs
or
cmp
sti
rcr
out
adc
mov
push
xchg
mov
cmp
jp
mov
sti
int
pop
ins
dec
pop
inc
shr
imul
add
movs
sbb
jmp
inc
clc
add
adc
xor
test
fstp
push
scas
leave
sbb
sbb
cmp
push
adc
sti
icebp
out
pop
add
fisub
xchg
jmp
mov
jmp
push
and
or
std
dec
push
mov
jecxz
ins
inc
aaa
repz
fild
imul
adc
or
mov
mov
cwde
std
jmp
icebp
fisubr
fdivr
mov
movs
xor
add
shl
outs
call
in
loopne
and
push
add
pop
ins
adc
pop
cmps
dec
cs
add
lods
das
adc
int3
inc
add
dec
pop
or
jp
fisub
fcom
aam
add
int3
test
sbb
jmp
stos
add
es
mov
test
xchg
fs
xchg
xor
pop
mov
aam
pop
cmp
add
pop
jns
dec
paddd
mov
outs
leave
inc
jle
(bad)
fidiv
arpl
push
cmp
sub
adc
inc
or
rcl
sbb
add
jno
xchg
jnp
add
xchg
add
xor
pop
js
psrld
in
and
jmp
inc
mov
retf
into
add
rcr
push
dec
add
les
les
inc
sub
xchg
ins
push
rcl
cs
adc
jecxz
push
frstor
inc
rol
push
dec
(bad)
jae
icebp
inc
jmp
ror
adc
xchg
data16
cmps
addr16
jp
imul
and
mov
lods
stos
pop
daa
mov
pusha
mov
mov
popf
and
pop
lock
sub
add
lods
mov
and
pop
call
mov
hlt
sub
cwde
cmp
or
fistp
(bad)
cwde
frstor
lea
dec
or
dec
pop
aaa
call
test
push
out
call
dec
add
lock
outs
add
add
rcl
call
es
or
scas
clc
xchg
jne
push
repnz
jbe
lea
add
outs
shl
or
add
jo
adc
sbb
call
fidivr
pop
and
lods
ins
push
pop
jns
sahf
or
sub
mov
in
push
add
or
sub
xor
xchg
js
out
jns
and
and
sub
mov
sub
xor
add
cmp
pop
mov
add
dec
or
es
add
xor
fs
or
push
repz
repz
pop
xor
inc
cwde
adc
sar
adc
mov
int3
rol
enter
mov
repnz
pop
dec
rol
mov
dec
inc
jbe
daa
adc
es
packuswb
lods
lea
mov
adc
movs
ins
sub
dec
xchg
mov
int3
and
push
sbb
sar
in
or
inc
inc
dec
push
push
push
push
enter
sbb
call
enter
mov
xlat
les
xlat
cmp
add
ds
add
mov
adc
dec
mov
(bad)
(bad)
pop
add
add
inc
test
(bad)
pop
xchg
sbb
sub
jbe
call
iret
xchg
mov
mov
or
push
jne
addr16
sti
cmp
mov
and
dec
outs
ja
xchg
ficomp
mul
test
cmp
push
and
cmp
xor
adc
and
xchg
data16
mov
jo
add
or
movs
dec
arpl
stos
adc
fmul
adc
fisttp
xchg
out
shl
sbb
je
in
push
xor
jne
fidiv
push
fucomp
xchg
xchg
push
nop
inc
pop
add
fdiv
aad
mov
repz
sbb
mov
in
add
mov
int3
imul
push
xchg
add
push
rcr
aad
pushw
(bad)
jne
inc
add
add
out
mov
fild
aad
mov
mov
or
mov
mov
push
stos
test
jl
les
sbb
bound
out
pushf
add
out
sub
loop
mov
(bad)
pop
hlt
and
jmp
iret
xor
pop
pop
(bad)
jns
enter
add
out
mov
add
pop
daa
or
add
push
add
sbb
movs
push
js
jmp
sub
push
add
(bad)
mov
adc
ret
or
sub
dec
sub
mov
and
push
add
sub
dec
jg
mov
mov
inc
inc
dec
aad
out
mov
mov
ja
movs
and
pusha
ret
(bad)
cmp
push
outs
icebp
dec
fstp
jmp
jecxz
inc
inc
gs
fiadd
or
and
sub
xor
or
add
mov
mov
push
push
jle
(bad)
jle
jae
mov
pop
add
mov
test
jp
add
add
xchg
clc
sub
sbb
je
gs
sbb
dec
or
jb
jb
adc
dec
cli
jb
and
mov
rol
nop
add
(bad)
jmp
mov
pop
mov
lods
in
xor
add
mov
jnp
add
push
sub
lds
aad
push
sub
inc
sbb
jne
push
cmp
inc
sub
fdivr
sub
mov
sub
push
jb
mov
aaa
mov
test
pop
add
lods
add
repnz
pop
mov
jg
lock
xor
repz
lock
hlt
unpckhps
dec
hlt
fdivr
jl
sbb
in
cmp
sbb
inc
fs
cs
in
cmp
out
shl
out
sbb
fcomp
fstp
and
cmps
add
and
and
loopne
aad
lock
add
push
push
popa
aaa
arpl
fidiv
cmp
dec
(bad)
sar
sbb
mov
inc
iret
(bad)
inc
mov
sbb
push
jb
fmul
and
pop
pop
sub
mov
fdivr
adc
sbb
and
outs
inc
inc
mov
sub
test
add
push
sbb
sbb
clc
push
push
or
sub
imul
dec
frstor
test
lea
add
cmp
and
mov
jl
inc
mov
inc
inc
adc
add
clc
mov
cmp
cmp
add
inc
add
popa
pop
jecxz
retf
outs
fbld
push
sbb
retf
inc
fwait
mov
neg
(bad)
dec
pop
mov
test
mov
shr
daa
(bad)
das
shl
cmp
mov
mov
or
cmp
sti
jge
jo
lea
sbb
inc
sub
add
and
jne
rcl
sbb
movs
and
add
fadd
or
outs
jge
inc
push
xor
outs
fwait
dec
jmp
sub
cmps
cdq
ins
xor
and
shl
call
call
loopne
sbb
push
xchg
inc
add
mov
not
pop
stos
add
or
and
push
push
mov
inc
push
pop
test
push
sub
loopne
and
add
shr
or
push
or
lahf
cmp
jp
cmp
and
popa
or
imul
mov
jne
call
add
ins
or
mov
jecxz
lods
(bad)
enter
cli
push
clc
mov
mov
and
rol
mov
cld
or
jbe
ret
cmp
idiv
mov
push
repnz
add
or
inc
jb
jecxz
lock
dec
cmp
mov
and
push
add
fldenv
sbb
push
movs
in
jne
pop
push
add
jno
adc
add
mov
add
xchg
inc
push
adc
scas
mov
inc
push
pop
push
sbb
sbb
push
xor
popa
add
adc
sbb
pop
jge
gs
sbb
pushf
ins
cmp
ds
nop
xor
jne
push
es
sub
dec
lock
inc
inc
cs
imul
add
pop
push
add
adc
cmc
add
daa
imul
lds
xor
hlt
push
cmp
pop
or
fidivr
cmp
xor
sbb
push
inc
(bad)
pop
fimul
lock
nop
adc
sub
jmp
mov
loop
test
sub
sub
and
or
mov
imul
and
sbb
cs
movs
repnz
add
hlt
sbb
sbb
fild
pop
add
or
sub
inc
mov
push
mov
movntps
(bad)
aam
fiadd
(bad)
mov
pop
sub
mul
dec
inc
cmps
ror
test
adc
dec
imul
push
inc
je
push
and
nop
retf
xor
pop
or
lock
mov
or
out
sbb
retf
mov
pop
sbb
call
(bad)
imul
retf
sub
jecxz
ror
mov
xor
xchg
inc
inc
das
push
push
pop
push
pop
mov
lahf
lea
das
xor
xor
xor
xchg
lea
aas
fistp
fcom
push
push
push
(bad)
movaps
lods
sbb
inc
add
aad
jg
or
mov
fcomp
xchg
adc
mov
in
sub
shl
ret
dec
sbb
dec
xchg
cmp
pop
xchg
test
and
fisttp
loopne
push
dec
or
dec
cmps
mov
sub
mov
nop
inc
sbb
stos
dec
add
inc
cmp
pop
lea
pop
add
dec
adc
push
jo
add
sub
dec
and
mov
cld
pop
add
ins
mov
mov
enter
sbb
sti
(bad)
inc
push
dec
mov
jnp
pop
mov
xor
aad
mov
mov
lods
test
mov
(bad)
push
fisub
xor
sbb
nop
push
imul
ja
sub
xchg
js
push
mov
and
retf
jl
dec
retf
retf
sub
push
test
sbb
cmp
jg
(bad)
data16
pop
push
jne
mov
mov
adc
rcl
rcl
jg
jmp
jne
aaa
es
adc
add
cwde
xor
or
pop
jecxz
add
dec
clc
pop
xchg
add
icebp
pop
clc
lods
sti
clc
ror
mov
push
mov
into
add
dec
sti
xchg
(bad)
push
or
lock
faddp
and
xor
mov
cwde
ins
call
inc
push
pusha
mov
call
nop
fnsave
ficom
pop
aas
sbb
sar
and
sbb
and
inc
imul
lods
adc
inc
or
adc
test
in
sbb
cs
inc
and
outs
imul
or
mov
fs
dec
mov
push
(bad)
and
push
and
in
inc
xchg
fmulp
jo
and
mov
nop
loopne
add
das
fadd
nop
movs
add
mov
adc
add
ins
or
adc
push
adc
cmps
test
dec
pmulhuw
jne
icebp
push
mov
(bad)
xor
pslld
push
add
movs
or
push
jo
popf
nop
xchg
mov
dec
and
add
inc
loop
and
or
daa
push
pop
aad
stos
pop
pop
add
outs
inc
cmp
sbb
out
in
dec
dec
outs
and
pmaxsw
ror
dec
dec
rcl
rcl
dec
dec
dec
dec
aad
xlat
fmul
dec
dec
(bad)
fcmovnu
dec
dec
dec
dec
fstp
ffreep
dec
dec
dec
dec
rol
les
dec
dec
(bad)
enter
dec
leave
retf
dec
dec
dec
dec
int
iret
mov
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
movs
cmps
cmps
test
dec
dec
dec
test
dec
dec
dec
lods
scas
scas
nop
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
cwde
dec
dec
dec
dec
cdq
call
popf
sahf
lahf
or
dec
add
xchg
mov
dec
dec
lea
dec
dec
jno
jae
dec
dec
dec
dec
jne
ja
dec
dec
dec
dec
jns
jnp
call
and
push
dec
into
and
xor
jmp
movs
and
push
dec
inc
dec
pop
fadd
lock
pop
arpl
ss
add
in
cmps
push
retf
aaa
lea
inc
aaa
fmul
mov
dec
loopne
js
(bad)
xor
push
pop
mov
xor
inc
or
arpl
dec
jo
shr
sub
inc
adc
mov
mov
push
sbb
shl
and
fild
rcr
call
ret
dec
xchg
mov
mov
xchg
xchg
xchg
push
sbb
pop
sub
pop
ins
sub
ja
xchg
inc
je
loopne
push
inc
popa
and
sbb
imul
mov
retf
enter
sub
icebp
sbb
dec
pop
daa
xor
pop
pop
inc
daa
ins
adc
dec
cli
xor
sub
and
xlat
or
adc
sbb
and
in
sub
push
fcmovnb
mov
and
ror
dec
in
dec
stc
mov
test
rol
pop
fidivr
je
sub
sbb
int3
rcl
push
dec
cmp
ret
ror
mov
dec
dec
push
add
push
into
jne
xlat
out
and
int3
mov
or
rcl
inc
inc
jmp
push
push
sub
test
sub
shr
test
and
pop
dec
sub
inc
enter
push
sub
add
mov
xchg
sub
sbb
mov
sub
push
andps
adc
inc
add
movs
test
adc
or
xchg
or
adc
pop
or
jne
imul
mov
out
pop
mov
fwait
adc
inc
add
aaa
xor
and
iret
fs
add
pop
ror
sbb
mov
ja
add
push
mov
add
pop
or
inc
(bad)
xor
jo
mov
pop
aad
xchg
lds
imul
sub
arpl
fdiv
call
add
outs
adc
fcmovnb
iret
dec
bound
add
pop
cmp
daa
cs
ror
adc
or
movs
mov
dec
push
outs
xor
mov
fwait
(bad)
push
mov
sbb
out
and
sub
sub
sbb
ror
call
pop
rcr
or
and
sbb
ja
call
outs
xor
add
add
(bad)
and
sbb
imul
sub
leave
xchg
aas
push
add
pop
xchg
in
mov
sub
inc
imul
and
daa
push
stos
pusha
lods
cwde
addr16
dec
add
fbstp
mov
pusha
aam
aas
pushf
les
(bad)
and
add
xchg
cdq
or
pop
por
sbb
cmp
sub
inc
cmovl
outs
sub
dec
cmp
sub
jg
sub
xlat
out
sbb
dec
lahf
xor
sub
test
(bad)
adc
imul
cmc
add
outs
xchg
addr16
arpl
mov
call
xor
add
ror
sar
cdq
add
adc
cs
addr16
pop
mov
add
xchg
inc
xchg
mov
inc
pusha
ja
gs
jmp
or
addr16
fcomp
push
(bad)
aas
push
push
fdivr
popa
pop
imul
push
shr
push
pop
pop
loopne
pop
add
inc
pop
jmp
or
jno
or
sub
pop
inc
add
imul
push
dec
dec
pop
mov
les
pop
add
mov
xchg
push
ds
ins
retf
sub
pop
imul
mov
xchg
ins
jae
sub
(bad)
jae
cmp
mov
fdiv
xlat
cmp
xor
imul
(bad)
daa
inc
add
test
pusha
les
mov
or
out
pop
mov
into
dec
das
pop
xor
stos
(bad)
inc
adc
sub
out
dec
jne
shl
lods
aad
imul
and
jg
loopne
adc
pop
pop
mov
add
adc
sahf
xor
add
xor
or
cmp
mov
push
adc
or
add
mov
addr16
push
(bad)
call
mov
(bad)
xchg
arpl
lods
stos
loopne
div
push
aad
xchg
push
dec
fist
movs
add
dec
out
cmp
rol
ds
xor
out
pop
outs
inc
inc
imul
jne
es
pop
inc
pop
add
mov
pop
lods
mov
mov
ja
add
sub
jg
xor
stos
test
mov
mov
pop
ins
fisubr
mov
(bad)
cmp
add
or
mov
mov
mov
pop
jo
inc
dec
sub
pusha
push
push
or
xchg
loopne
jbe
add
xor
and
jg
adc
inc
daa
scas
xchg
mov
xor
xor
out
or
ins
std
push
gs
mov
push
push
xor
jno
inc
xor
cmovbe
mov
pop
sahf
jecxz
push
bound
hlt
pop
iret
sub
inc
mov
add
ror
sub
popf
xor
nop
sbb
or
sub
cmp
xchg
add
test
and
and
and
imul
in
mov
inc
cld
push
not
pop
fsub
fcom
mov
les
or
cmp
ds
cmp
popa
bound
cmp
cmp
gs
sar
aaa
pop
inc
mov
xchg
cmp
cmp
add
push
cs
ds
movs
aam
mov
(bad)
xchg
into
aam
add
invd
pop
shr
inc
loopne
lods
sbb
outs
push
movs
mov
inc
dec
inc
mov
cmps
dec
rcl
mov
pop
out
jmp
test
inc
lea
jmp
cmp
stos
push
mov
push
scas
pop
or
rol
outs
adc
je
mov
in
sbb
add
mov
push
mov
mov
retf
fldcw
cmp
sbb
mov
push
sub
rcr
jmp
lahf
cli
ss
and
push
sbb
sbb
push
add
shl
outs
je
inc
int
inc
xchg
div
jo
mov
cmp
loope
pushf
call
js
mov
lods
xchg
push
mov
fsub
xchg
inc
push
mov
inc
adc
sbb
pusha
daa
inc
lock
sar
repz
std
push
pop
dec
push
fist
out
fsubrp
push
ror
fwait
cmp
mov
push
jb
dec
pop
add
xor
add
push
xor
(bad)
lock
aam
xchg
dec
adc
call
jl
push
dec
push
dec
cwde
push
pop
push
adc
jl
test
movs
push
lahf
add
les
movs
and
mov
cmps
add
add
sub
inc
ja
or
sub
scas
aas
adc
mov
dec
or
scas
push
jns
ins
test
jae
dec
mov
dec
fidiv
daa
sbb
mov
or
xchg
ret
cwde
into
add
or
adc
add
dec
inc
adc
stc
mov
(bad)
dec
inc
mov
mov
pusha
enter
add
out
or
and
rcl
push
push
test
dec
call
and
xchg
dec
sahf
add
mov
or
rol
adc
ins
and
sub
pushf
sbb
call
sbb
out
mov
cmp
popa
adc
sbb
cmp
imul
shl
test
mov
sbb
sbb
mov
or
xor
nop
push
pop
sbb
push
aaa
movs
mov
push
and
sub
dec
test
cmp
test
mov
inc
inc
inc
add
mov
jmp
inc
imul
push
pop
add
mov
sub
add
cmp
mov
rcr
push
enter
dec
mov
pusha
fucomp
xchg
aam
mov
mov
rcr
sub
sbb
ficomp
mov
cmps
or
xchg
xchg
jne
mov
repnz
mov
ja
add
add
mov
inc
xor
mov
jne
and
xor
jl
sub
mov
les
lds
or
cmps
sub
loopne
nop
push
mov
cmps
mov
cmp
sub
std
movs
mov
nop
call
ror
ss
inc
cmps
dec
pop
pop
js
push
lock
xor
xor
add
mov
or
imul
dec
in
mov
jo
or
imul
pusha
cmp
call
and
loopne
test
add
sub
fmul
repz
std
add
and
lahf
xor
and
adc
xor
jmp
inc
scas
pusha
fs
imul
mov
out
sbb
xchg
div
cmp
in
xor
(bad)
enter
dec
enter
push
xlat
dec
call
push
mov
imul
xor
int3
shl
mov
cwde
fcom
dec
pop
in
ret
les
adc
mov
mov
cdq
mov
adc
adc
adc
xor
inc
xchg
and
dec
cli
add
dec
mov
jo
jge
or
or
dec
sub
push
push
push
sete
or
pop
fmul
scas
call
xchg
dec
and
adc
and
xor
mov
mov
add
retf
movs
push
and
push
mov
(bad)
scas
or
mov
pop
xchg
jmp
mov
cmp
add
adc
inc
jo
cmp
stos
pop
int3
aad
jle
sbb
sbb
sbb
xchg
push
gs
inc
and
inc
mov
adc
cmc
inc
sbb
inc
sbb
xor
ja
inc
cmp
cmp
push
mov
mov
popa
mov
pusha
mov
lods
mov
adc
mov
adc
je
sbb
push
cmp
sub
outs
pop
enter
add
ds
pop
push
dec
pop
clc
push
dec
and
or
outs
cld
push
adc
(bad)
xchg
psubsb
mov
aad
sbb
pop
sub
add
das
add
sbb
pop
cmp
cmp
inc
push
rcr
mov
add
repnz
add
or
scas
pop
in
add
adc
rcl
mov
xchg
mov
fdiv
(bad)
adc
mov
jne
ins
add
ds
add
pusha
jmp
sub
push
xor
or
xor
fabs
div
sbb
jl
xlat
push
sub
jl
ja
sub
aas
add
out
cmp
xchg
jo
cli
mov
adc
pop
dec
sbb
and
push
iret
test
cmp
test
in
jbe
cmps
inc
loop
je
or
test
retf
in
sbb
adc
dec
les
or
xchg
push
cmp
mov
sbb
ins
mov
mov
fwait
ins
fsub
sub
xor
add
and
fbstp
pop
push
or
arpl
push
push
outs
pop
inc
ins
jae
fs
cmp
les
inc
retf
push
aas
add
xchg
or
push
or
iret
jecxz
pop
push
das
add
clc
adc
add
sbb
pop
out
aaa
dec
push
ins
ret
jmp
sbb
pop
bndstx
adc
add
lock
ficomp
cmp
retf
dec
das
dec
mov
adc
adc
test
sub
add
push
retf
inc
imul
call
inc
(bad)
xsavec
push
inc
aaa
xchg
jae
mov
push
call
pop
jo
lock
mov
sbb
dec
lea
ds
jp
out
mov
pop
cmp
neg
mov
sar
sbb
add
movsx
dec
(bad)
push
fs
lea
add
rol
cmps
ins
mov
fld
mov
pop
cmp
or
aas
add
das
and
jge
xchg
sbb
arpl
ss
pop
adc
sti
or
aam
dec
push
pop
pop
or
rcr
mov
jne
jmp
cmp
les
jne
hlt
or
shr
and
jbe
push
aas
repnz
mov
adc
inc
cmp
pop
sete
dec
cld
sbb
mov
test
cmp
mov
call
fnstenv
pop
jg
sub
adc
mov
jbe
nop
dec
lahf
in
mov
and
adc
jo
cli
shr
and
mov
mov
cmp
iret
and
sub
sbb
sbb
(bad)
cmp
mov
test
push
dec
add
or
and
fdiv
jmp
xchg
sub
and
daa
dec
or
test
push
or
clc
or
add
inc
pop
mov
or
jmp
jae
pop
stos
inc
addr16
fwait
mov
jno
xchg
and
call
or
mov
mov
in
xlat
mov
add
dec
sti
jl
jae
cmc
add
inc
aaa
shr
rol
push
(bad)
stos
adc
jecxz
push
add
add
clc
sbb
cli
add
mov
push
mov
push
rcl
lea
sbb
push
or
or
gs
xchg
inc
inc
xchg
push
cmp
fcom
dec
sub
in
neg
scas
lock
fisttp
ret
ficomp
mov
stc
inc
clc
loop
and
mov
sbb
add
rcl
icebp
push
sti
push
loopne
jns
jae
jae
scas
or
and
pop
pop
adc
in
add
mov
lahf
sbb
or
pop
arpl
add
inc
lahf
push
test
dec
inc
jge
cmp
aas
(bad)
das
add
xchg
sahf
dec
or
out
push
jmp
xchg
add
push
push
je
dec
dec
inc
call
jne
dec
ins
pushf
mov
pop
rcl
sbb
add
stc
mov
(bad)
mov
and
xor
sti
xlat
cmp
js
pop
inc
cmp
pop
dec
or
or
bound
movs
and
add
mov
or
push
mov
adc
and
push
add
mov
movs
inc
cmp
shl
pop
pop
cmp
mov
xor
or
dec
in
ret
loop
pop
push
jp
xchg
or
add
sbb
aad
inc
sub
aaa
add
int
clc
vmptrst
and
inc
imul
dec
mov
add
mov
and
dec
dec
cli
jae
pop
rcr
jno
xor
sbb
mov
sub
pop
pop
add
ins
xor
je
jecxz
shl
movs
adc
aaa
aad
mov
push
dec
mov
add
arpl
repz
sbb
pusha
test
sbb
and
mov
pusha
lea
dec
cld
sbb
enter
xor
sbb
push
ja
add
out
or
arpl
or
push
pop
sub
fst
push
sti
push
add
push
xlat
jecxz
pop
push
push
pop
dec
gs
retf
call
xor
add
lock
gs
hlt
sub
pushf
test
popa
inc
outs
cmp
inc
outs
push
outs
ins
pop
push
daa
add
push
push
jmp
cmp
add
add
inc
outs
fdiv
xchg
pop
xor
loope
das
or
dec
mov
repz
iret
pop
cs
jne
mov
push
mov
xchg
push
(bad)
in
sahf
pop
add
inc
mov
pop
sbb
and
xor
lock
push
push
or
(bad)
ret
mov
and
dec
mov
jbe
pop
pop
retf
clc
push
test
dec
mov
inc
pusha
xor
sub
call
aam
mov
(bad)
cmps
dec
xor
dec
aad
popf
in
xchg
cld
xchg
shl
(bad)
mov
sub
push
jle
cmp
dec
inc
ss
pop
jne
inc
es
pop
cmps
mov
mov
and
int
test
ret
jo
xchg
sub
pop
aam
add
sbb
scas
test
mov
fsub
cli
or
push
push
stos
xchg
inc
xchg
mov
jmp
mov
dec
jne
push
xchg
aad
xchg
sbb
cs
stc
data16
mov
nop
inc
and
add
adc
adc
mov
loop
rcr
cmp
in
ss
cmp
and
pop
loopne
lods
push
scas
add
aam
or
cwde
sub
int
ror
xlat
loopne
test
and
test
sub
lea
push
mov
mov
dec
loopne
sub
xor
addr16
adc
dec
out
dec
xchg
push
push
stos
adc
sbb
shl
or
adc
enter
movs
pop
adc
add
lods
inc
cmp
or
jg
push
add
or
test
sub
test
loope
inc
aas
(bad)
jge
mov
imul
sbb
cli
pop
fdivr
add
mov
cmp
lds
pop
add
mov
aam
je
push
mov
retf
adc
rdmsr
or
cwde
or
jb
bound
sub
rcl
imul
push
push
push
daa
shl
mov
pop
movs
add
sub
fnstsw
or
shl
add
push
call
adc
mov
push
cmps
xlat
test
ins
into
jp
pop
rcr
vmaxss
movs
sbb
test
mov
sbb
dec
aaa
in
mov
in
rcl
push
dec
xor
gs
inc
dec
imul
adc
retf
push
or
jno
les
shl
cmp
dec
inc
jmp
retf
movs
in
mov
mov
or
or
mov
add
jns
test
mov
push
xor
cmp
fisub
cmp
out
ret
ins
test
ins
mov
cmp
scas
(bad)
jne
push
push
push
inc
adc
add
and
inc
sub
sub
inc
add
ret
xor
pop
in
add
cmp
jbe
gs
or
stos
adc
sub
movs
dec
cdq
cmp
nop
xchg
cmp
add
mov
xor
cld
daa
movs
mov
lea
out
rcl
fimul
(bad)
test
lea
mov
aas
push
xor
leave
addr16
repz
cdq
push
cmp
dec
imul
mov
es
xor
and
xchg
lock
cmp
sub
dec
cmp
adc
push
jmp
xchg
hlt
ret
and
and
sub
mov
adc
xor
sahf
or
pop
enter
lock
shl
mov
add
mov
dec
add
jmp
fdivr
test
sbb
add
je
cmp
jb
cmp
ja
push
add
and
jbe
push
push
mov
pop
lods
xchg
mov
or
push
clc
and
cmps
sti
pop
pop
jmp
dec
jne
mov
and
inc
cli
cld
mov
stos
adc
je
cld
dec
jne
sub
push
or
push
xor
add
rcl
or
sub
push
push
mov
push
lahf
(bad)
and
gs
sbb
lock
inc
mov
out
or
mov
shl
lock
loope
cld
mov
clc
mov
mov
loopne
mov
push
push
lea
jecxz
pop
sbb
mov
cmp
add
stos
repnz
pop
and
fidiv
dec
inc
pop
pop
outs
lock
fld
pop
fisttp
push
fild
rcr
adc
push
inc
mov
xchg
mov
daa
adc
add
daa
daa
mov
pop
add
sub
mov
cmp
sub
dec
stos
(bad)
cmp
hlt
leave
adc
mov
loopne
or
cmp
adc
lock
loopne
fisub
outs
add
(bad)
std
mov
div
add
add
pop
mov
inc
jl
ins
out
mov
push
jns
mov
mov
add
mov
or
int
adc
cmp
or
pushf
inc
mov
imul
add
xor
sub
mov
add
mov
push
out
mov
cs
popf
inc
sub
shl
pop
pop
mov
pop
scas
pavgw
inc
ret
es
push
jae
xlat
mov
push
jo
test
test
arpl
das
jmp
inc
mov
xor
jae
add
test
jo
or
or
(bad)
cmc
or
sub
xor
ins
or
pop
cmp
imul
push
cmp
pushf
cwde
xchg
mov
mov
pop
inc
nop
aam
xor
aam
in
inc
fiadd
loopne
cmc
push
nop
cmps
xchg
xchg
xchg
fisttp
xchg
xchg
xchg
jl
je
ja
in
in
push
in
pop
pop
daa
or
mov
xchg
daa
sub
or
loop
mov
fsub
mov
add
call
adc
pop
imul
pop
lock
out
and
or
mov
or
or
add
sbb
hlt
push
or
pop
pop
push
add
or
mov
jmp
xchg
add
add
push
leave
add
add
mov
pop
mul
push
inc
xor
jb
or
or
leave
mov
cmp
push
or
add
or
or
add
xlat
or
sbb
dec
jbe
jb
adc
sbb
push
pop
sbb
arpl
inc
pop
jb
ins
jae
add
and
and
xchg
or
xchg
and
sub
inc
xor
fsubr
in
dec
cld
dec
std
unpckhps
gs
or
imul
inc
mov
stc
mov
xchg
rol
pop
(bad)
dec
test
ins
sbb
jns
inc
aas
sub
push
nop
outs
pusha
or
mov
jo
pop
aaa
xor
mov
outs
mov
dec
push
stos
ins
ins
inc
inc
movs
inc
inc
ins
fs
push
push
mov
adc
sub
xlat
in
xor
mov
leave
hlt
xor
jne
in
dec
xor
jne
xchg
sbb
outs
add
scas
dec
pop
jb
cmp
xor
in
mov
mov
arpl
or
push
repnz
arpl
inc
mov
cmp
lods
les
cdq
sub
test
and
inc
inc
adc
push
movs
sub
retf
push
shl
inc
sub
push
fcomp
lods
pop
dec
clc
pop
or
mov
fs
inc
sub
push
pop
dec
dec
jo
movs
jb
xchg
je
js
ret
test
mov
dec
add
add
cmp
push
and
mov
mov
stos
push
outs
fsubr
jo
push
outs
jmp
aad
mov
dec
aaa
dec
xor
pop
add
and
imul
mov
aas
adc
mov
aaa
das
fwait
test
ror
fst
mov
and
or
push
mov
sub
push
mov
pop
jge
fcom
aas
push
add
daa
ret
sbb
aam
mov
cmp
sub
mov
je
or
jl
add
cmc
jns
dec
cs
cld
jns
inc
pop
jb
sub
sbb
mov
inc
scas
pop
movs
xlat
mov
sbb
lods
jp
jmp
add
push
add
or
dec
aam
test
in
jle
clc
mov
or
add
retf
sahf
je
dec
pop
outs
pop
movaps
add
lock
je
das
sbb
push
jle
jmp
sbb
pop
fidivr
add
add
jb
jae
cmp
and
push
add
lock
add
je
pop
enter
inc
dec
les
mov
push
adc
cs
jg
inc
xchg
adc
jns
ret
xchg
popa
mov
or
or
test
mov
call
add
push
mov
je
push
clc
sar
push
int3
(bad)
arpl
out
popa
mov
jge
add
or
add
psraw
add
arpl
div
mov
sbb
mov
push
mov
pop
ror
mov
and
sbb
sub
(bad)
pusha
add
hlt
pushf
cmps
popa
pop
leave
je
xchg
push
in
pusha
adc
jnp
lahf
retf
inc
sbb
arpl
adc
jle
push
pop
or
jmp
push
adc
xor
mov
sbb
nop
and
inc
pop
out
or
and
div
shl
test
stos
pop
and
scas
push
xchg
mov
xchg
add
sub
inc
add
cmps
lods
pop
gs
pop
push
pusha
add
lods
rcl
dec
mov
scas
loopne
mov
das
push
sbb
pop
or
add
mov
sbb
pop
jmp
adc
shl
push
mov
addr16
pop
call
push
dec
and
je
or
xchg
pop
es
add
add
cmp
push
add
outs
sbb
das
mov
pop
pop
(bad)
movs
cld
mov
icebp
and
mov
sbb
sbb
aam
ins
sub
fmul
fsub
xor
xchg
add
add
hlt
ret
aam
cmp
cmp
clc
xor
lock
dec
adc
imul
and
push
rcr
xchg
sahf
test
loopne
ror
fild
jmp
out
fdivp
add
push
and
sahf
pop
fs
jbe
mov
out
xchg
call
out
(bad)
rcr
xchg
cs
mov
push
ins
jo
add
jl
xchg
imul
mov
int
mov
jae
push
dec
jae
cs
pushf
pop
mov
dec
movs
inc
test
movs
mov
mov
mov
imul
mov
dec
rol
test
std
cmp
pop
or
and
fidiv
dec
push
outs
nop
addr16
ror
in
cdq
mov
mov
fmulp
addr16
sbb
ja
cs
push
cld
pop
add
mov
sbb
xor
in
repnz
push
or
lahf
mov
jno
por
repnz
data16
int3
push
pop
or
sbb
xchg
outs
in
movs
dec
sbb
pop
mov
sahf
jl
push
sahf
xchg
addr16
sbb
stc
mov
fcom
add
sbb
fucomip
sbb
and
push
enter
cmp
pusha
ja
pop
lods
adc
cmp
mov
js
push
push
daa
iret
enter
push
push
hlt
cmp
stc
mov
sbb
pop
or
ficomp
add
dec
cdq
jge
fcom
xor
mov
push
pop
pushf
push
or
mov
adc
add
sbb
mov
sbb
cmp
out
in
and
cmp
cs
(bad)
mov
cld
and
or
call
inc
mov
rol
iret
enter
sbb
cwde
adc
test
and
sbb
mov
pusha
and
inc
mov
adc
add
clc
and
in
cdq
cmp
ja
push
nop
in
repnz
test
adc
enter
push
sbb
rcl
adc
inc
pop
mov
call
loopne
fstp
hlt
and
cmps
mov
loopne
adc
int3
sub
mov
ror
movs
aam
nop
push
mov
jl
and
push
test
sub
mov
mov
add
imul
iret
enter
push
enter
push
xchg
xor
outs
ja
push
je
ja
dec
addr16
cs
pcmpgtb
sbb
inc
cmp
adc
in
adc
jl
xchg
out
push
out
adc
push
adc
cs
out
xchg
push
jb
xor
daa
pop
push
mov
ins
mov
inc
mov
add
push
sub
arpl
dec
movs
or
fst
in
neg
dec
gs
push
jo
or
dec
sbb
dec
and
and
adc
and
add
dec
arpl
jo
xchg
jge
mov
and
xchg
arpl
or
bswap
cmp
inc
outs
push
push
adc
jmp
mov
movs
push
sub
or
sbb
sar
xchg
xor
mov
test
sub
xor
add
push
mov
add
not
adc
mov
pop
jl
xor
rcl
push
sbb
adc
mov
push
and
inc
and
imul
les
pop
fild
or
xchg
pop
cmp
and
inc
bound
pop
adc
sbb
lds
outs
ficom
xor
or
inc
clc
das
mov
or
adc
adc
xor
sub
pop
mov
jns
pop
sbb
sbb
push
sbb
fs
movs
test
mov
jp
gs
pusha
mov
sbb
pusha
mov
sub
popf
mov
jo
pusha
adc
sbb
in
rcl
and
mov
or
pop
add
and
push
mov
or
cmp
push
jns
adc
mov
arpl
stos
dec
ficom
push
out
sub
sbb
mov
mov
mov
sub
in
nop
dec
or
loop
jle
dec
gs
jle
or
jge
dec
imul
fs
inc
sub
popa
push
shr
inc
imul
or
dec
or
mov
jle
fs
push
inc
dec
or
scas
mov
jb
cmps
test
hlt
jns
push
or
test
div
push
movs
outs
repnz
mov
adc
push
jb
ins
cmp
invd
pop
icebp
mov
scas
add
in
add
cmps
ja
push
sbb
push
fstp
inc
test
gs
and
dec
fdivr
ss
gs
int3
gs
inc
push
gs
push
xor
test
mov
sub
sbb
icebp
js
mov
mov
and
push
mov
sub
outs
mov
pushf
popa
js
pop
ror
dec
mov
popa
fs
jnp
je
inc
ins
into
pop
sbb
pop
aad
add
ins
inc
(bad)
ror
cmc
jl
in
fs
sbb
cmp
cmps
ins
jge
xor
inc
and
add
xchg
mov
or
add
adc
retf
and
pop
add
push
or
or
movs
and
pop
cmps
in
addr16
push
dec
fwait
and
pop
jmp
and
sub
rcr
mov
sbb
sub
aaa
into
xor
push
lock
test
xchg
xchg
jae
jns
sub
xor
ja
push
xchg
mov
xchg
mul
dec
popf
inc
pusha
lods
jae
and
and
fisub
pop
daa
pop
inc
fmul
(bad)
adc
leave
pop
test
cmp
inc
sbb
aaa
pop
add
xor
loopne
in
pop
push
sahf
ss
loop
ficom
adc
jle
and
cmp
(bad)
movs
mov
outs
ret
push
sbb
sbb
popa
iret
inc
ss
xchg
dec
inc
inc
les
inc
pusha
and
mov
data16
push
mov
push
mov
jns
pop
push
(bad)
cs
add
xor
iret
mov
hlt
pop
dec
call
mov
shr
sub
loopne
fild
add
outs
daa
imul
fcmovbe
cwde
outs
add
add
push
addr16
jb
push
push
mov
and
aad
(bad)
add
outs
dec
inc
mov
jo
daa
(bad)
mov
jne
jmp
pop
gs
and
mov
inc
(bad)
fisub
test
and
pop
(bad)
mov
pop
push
pop
psubusb
xchg
and
pop
sub
cmp
outs
outs
pop
inc
jne
fs
add
ss
bound
aas
dec
dec
ret
fcmovbe
push
lock
add
and
rol
add
mov
push
add
cmps
imul
iret
dec
loopne
daa
jne
add
nop
jno
xchg
or
fstp
movs
xchg
daa
ja
inc
mov
inc
imul
out
or
or
sub
adc
add
arpl
pop
or
imul
gs
je
cs
pop
push
push
cmp
cmp
adc
mul
(bad)
and
test
mov
and
push
jo
adc
and
mov
test
(bad)
sbb
adc
sub
xchg
jmp
repnz
adc
push
movs
loop
outs
mov
mov
dec
jl
inc
ja
and
push
ins
(bad)
aas
jb
sub
xchg
pop
dec
push
into
mov
fld
fs
aas
pop
mov
add
ret
or
jne
jmp
add
cmp
pushf
dec
jbe
nop
lods
push
and
out
add
pop
and
jmp
mov
dec
sbb
mov
stos
add
push
sub
mov
adc
and
test
jo
push
shr
cwde
adc
cmp
rcl
addr16
popa
sbb
adc
(bad)
fild
inc
adc
dec
pop
inc
mov
pusha
jnp
ja
leave
and
adc
inc
and
mov
or
aaa
and
push
or
add
xlat
sbb
pop
cmp
push
or
jbe
or
call
ja
or
aad
mov
pop
sub
push
cmc
xchg
popa
dec
dec
dec
and
sub
imul
mul
scas
packuswb
inc
das
and
ss
xor
jae
sbb
mov
dec
imul
pop
sub
or
outs
sbb
or
test
pop
loope
test
or
pop
xor
(bad)
adc
or
or
mov
sbb
popa
pop
inc
scas
pop
xchg
pop
mov
mov
addr16
stos
jae
(bad)
popa
xchg
test
and
out
cmp
mov
jg
imul
in
fsubr
mov
jg
xor
ins
push
or
mov
das
jae
adc
xchg
(bad)
cwde
es
inc
ins
cmps
xchg
mov
pop
xor
fcmovnb
or
das
pop
outs
cmp
dec
dec
or
fisubr
pop
stos
rol
les
stc
add
push
ins
mov
repz
scas
jne
dec
xchg
dec
and
xor
adc
arpl
(bad)
cmp
xor
(bad)
jns
adc
hlt
inc
mov
movlhps
add
inc
sub
shl
jbe
scas
jecxz
adc
pop
adc
xor
les
jg
jle
aaa
je
dec
cmps
(bad)
xchg
test
pop
gs
gs
je
imul
push
mov
dec
inc
movs
das
aad
jmp
mov
loopne
lods
ins
das
ja
xchg
inc
or
inc
jbe
push
xchg
xor
xchg
pop
shr
fwait
out
mov
imul
sbb
jae
sbb
sbb
movs
ss
outs
cmps
call
and
sub
mov
add
sbb
push
and
lahf
daa
and
sbb
push
shl
jmp
lods
dec
mov
jne
(bad)
cmps
addr16
sbb
push
jo
jmp
adc
mov
sbb
sbb
push
in
cwde
pop
outs
fwait
(bad)
cli
inc
addr16
adc
outs
les
mov
sbb
packuswb
movs
sbb
pop
add
loop
movs
or
xlat
xlat
jns
outs
scas
add
addr16
test
(bad)
(bad)
inc
push
ins
dec
sahf
pop
out
push
lods
push
mov
xchg
ud2
outs
and
xor
les
call
dec
jae
popa
xor
jns
scas
(bad)
jne
add
cdq
in
imul
mov
scas
es
bswap
fs
dec
cmps
or
outs
add
nop
addr16
loop
adc
jne
xchg
pop
dec
jo
das
inc
jbe
ja
adc
sbb
pop
aas
aad
popf
mov
adc
loopne
ins
(bad)
add
in
arpl
push
call
sbb
push
iret
push
mov
imul
adc
mov
and
ss
jmp
jp
sahf
inc
addr16
jmp
push
ins
jns
out
and
mov
in
cs
xlat
sbb
jp
ins
lds
shr
lds
xor
ins
xor
push
or
jns
sbb
ja
pop
jne
dec
inc
(bad)
mov
icebp
shl
outs
fs
(bad)
and
xchg
jo
out
out
or
xchg
push
imul
outs
sub
out
fs
scas
fs
add
and
mov
add
push
inc
jecxz
pop
xlat
and
or
xchg
mov
or
mov
ins
outs
out
xor
sbb
fdiv
and
outs
dec
bound
sub
cmp
pop
gs
sbb
iret
inc
push
or
push
inc
inc
xchg
outs
add
sbb
movs
pop
addr16
inc
lea
sub
fadd
pop
jb
sar
mov
mov
je
xchg
ins
mov
dec
push
xor
loope
add
xor
xor
pusha
aaa
nop
inc
adc
mov
xor
out
push
push
les
add
lods
cmc
pop
mov
pop
jae
ja
xor
sar
add
or
fcom
sub
mov
pop
scas
xchg
sbb
or
push
movs
out
xor
sub
setno
(bad)
mov
out
jae
pop
movs
cmps
xor
mov
inc
sbb
push
in
or
sub
push
hlt
inc
imul
addr16
push
xchg
retf
sbb
scas
sub
pusha
xchg
imul
arpl
fld
mov
(bad)
imul
mov
dec
pop
sbb
jg
mul
cmps
sub
pop
and
mov
mul
and
cmp
add
lods
xchg
xchg
test
mov
xor
test
dec
nop
and
inc
dec
loope
cmp
mov
lods
xor
dec
inc
inc
inc
test
call
mov
xchg
mov
std
and
loopne
add
sbb
push
push
mov
pop
cmp
fwait
cmp
push
fsubr
sbb
push
jnp
cmp
inc
sbb
in
and
lods
xchg
cmps
dec
push
fld
and
xor
mov
ror
mov
cdq
in
pop
or
cmp
and
and
mov
aas
adc
lock
mov
jns
dec
sbb
pop
xor
mov
dec
xor
xor
rcr
je
mov
or
push
adc
jae
xor
out
aam
mov
add
mov
mov
retf
and
lods
pop
adc
lock
mov
sub
dec
push
nop
dec
push
imul
rcl
nop
push
clc
daa
xor
mov
add
pop
add
imul
mov
mov
test
dec
mov
(bad)
jnp
mov
dec
adc
(bad)
hlt
or
cmp
shr
and
jns
imul
add
add
(bad)
mov
and
push
pop
dec
add
jb
push
sbb
adc
adc
and
jno
mov
pop
mov
adc
mov
arpl
call
getsec
push
or
and
loopne
xlat
outs
ss
add
cmps
dec
mov
xchg
mov
push
sbb
mov
loopne
xchg
mov
xor
inc
pop
das
adc
xor
ror
adc
das
pshufw
jbe
das
dec
popa
mov
outs
xchg
pop
nop
jbe
aaa
push
daa
sbb
(bad)
or
jne
imul
xchg
mov
sbb
daa
lods
stos
test
mov
push
cld
jbe
inc
out
mov
int
push
mov
mov
xlat
outs
cdq
cmp
inc
test
add
std
adc
push
inc
jp
ja
sbb
add
cli
mov
mov
cs
enter
(bad)
xchg
inc
pop
aas
sub
dec
dec
xor
or
(bad)
or
sbb
les
pop
shl
leave
add
xchg
mov
mov
push
test
pushf
adc
mov
cld
dec
cmps
nop
loope
dec
pop
fidivr
push
push
adc
int3
dec
(bad)
(bad)
fstp
test
cmp
mov
mov
or
movs
std
pop
ja
idiv
jne
adc
mov
dec
mov
std
sbb
sub
and
rcl
cld
or
out
jmp
mov
nop
int3
sbb
xchg
dec
mov
add
nop
jno
pusha
(bad)
mov
cmp
add
comiss
sbb
pop
pop
enter
aas
add
pop
mov
add
pop
lds
inc
int3
dec
int3
mov
mov
sbb
call
lahf
inc
mov
pop
xor
cs
push
enter
xchg
dec
jl
js
pop
add
cmps
inc
ror
pop
add
push
dec
push
(bad)
and
push
loop
inc
ds
xor
ja
ja
je
and
inc
mov
push
jb
jns
in
or
xor
or
push
push
ins
add
push
and
out
and
adc
(bad)
cwde
clc
xor
(bad)
jle
or
outs
push
or
test
movs
or
idiv
les
inc
pop
pop
pop
sub
inc
push
push
(bad)
push
dec
dec
push
test
nop
imul
loop
push
add
adc
jbe
add
push
push
push
add
(bad)
shl
xchg
xchg
push
ja
mov
jo
push
nop
push
xchg
jb
fidivr
push
push
fwait
push
xchg
adc
fwait
or
pop
push
movs
mov
dec
inc
xchg
out
mov
inc
push
push
dec
push
inc
ss
sahf
fiadd
or
push
jle
enter
out
pop
adc
push
pop
inc
dec
push
out
dec
inc
inc
pop
inc
inc
ss
sbb
sub
jae
out
jne
(bad)
or
dec
cli
inc
cs
push
push
push
push
adc
mov
dec
inc
add
pop
push
dec
push
in
lock
inc
(bad)
or
push
or
sbb
dec
pop
mov
mov
or
sbb
push
push
in
popa
leave
or
dec
aas
div
stos
aas
mov
and
inc
jmp
bound
xor
jg
sub
sub
adc
int3
xchg
(bad)
(bad)
repz
test
cdq
shr
lods
xor
sbb
outs
cmp
or
add
sbb
call
or
mov
xchg
jne
mov
ds
adc
mov
mov
or
add
std
add
push
mov
mov
repz
loop
push
imul
cmps
mov
cs
sub
xchg
pop
ja
or
push
sub
dec
in
retf
cmp
cmp
add
xchg
mov
mov
push
push
mov
leave
push
pop
dec
push
sub
jecxz
inc
mov
and
cmp
adc
xchg
in
and
dec
retf
push
cmps
sbb
adc
dec
(bad)
cmp
ins
sbb
push
sti
sub
imul
lods
das
fsub
mov
(bad)
fcomp
dec
mov
rcr
dec
push
adc
add
and
les
pop
and
fcomp
adc
push
leave
inc
mov
cmp
jge
mov
aam
push
dec
mov
pushf
cmc
imul
adc
and
test
call
fs
xchg
jbe
loop
inc
ins
mov
out
add
in
xchg
popa
mov
and
cmps
push
dec
mov
shl
leave
jmp
xchg
xchg
sbb
sbb
dec
cld
dec
pop
mov
cmp
adc
imul
and
lods
push
mov
sbb
push
jb
in
mov
iret
rcl
add
sbb
ror
add
cld
or
xchg
add
sbb
aas
pop
mov
loope
sub
aam
xor
sub
jmp
(bad)
ins
aam
mov
jbe
inc
xor
mov
add
inc
fs
and
xchg
mov
and
test
cmp
fchs
adc
retf
or
jle
imul
dec
dec
push
mov
in
and
mov
(bad)
mov
and
jns
add
cmp
bound
add
leave
add
and
lods
mov
sbb
movs
aam
and
xchg
inc
popa
ror
repz
pop
cmp
add
xor
sbb
and
and
dec
sahf
in
in
lods
loopne
mov
fisub
std
lods
or
mov
jmp
push
movs
test
(bad)
out
cmp
sub
loope
shr
leave
clc
adc
sbb
dec
shl
jae
clc
test
xchg
test
test
mov
push
popa
adc
stos
aam
in
mul
sbb
arpl
shr
cmc
ss
jne
add
sub
push
retf
leave
mov
test
test
hlt
ss
sbb
je
cmc
sbb
sub
xchg
or
mov
jmp
ja
enter
cmp
les
xor
xor
rol
add
add
movs
lds
leave
jp
xor
inc
lahf
sbb
(bad)
test
jg
push
dec
nop
inc
sub
lods
ud0
imul
push
push
int
push
cmp
rol
aam
dec
push
and
pop
jb
add
add
push
xor
sbb
xchg
retf
sbb
loop
sbb
sbb
or
xlat
xor
push
and
loop
push
and
sbb
jne
xchg
lods
mov
mov
inc
adc
movs
adc
fcom
enter
aam
pop
mov
enter
mov
or
and
enter
rol
or
push
sub
mov
jmp
sbb
jno
in
adc
rcr
call
sbb
pop
adc
sub
or
jno
popf
loopne
push
mov
scas
pushf
mov
mov
inc
arpl
lds
and
inc
adc
pop
adc
adc
fld
arpl
aas
es
pop
repnz
cmp
push
pop
push
dec
pop
push
mov
push
movs
push
or
cmp
movs
imul
cmp
pop
or
inc
sub
mov
lds
cmp
cdq
in
in
mov
call
scas
leave
in
lds
mov
adc
mov
test
lock
(bad)
and
cmp
jmp
push
mov
test
pusha
mov
iret
repz
push
inc
js
ins
jns
iret
repz
mov
shl
sahf
out
mov
dec
jmp
sub
dec
mov
sbb
add
pushf
pop
bound
retf
in
push
xchg
fmul
fmul
enter
sbb
xor
enter
dec
cmps
int3
mov
fiadd
and
inc
mov
inc
mov
test
sub
gs
mov
pop
sti
nop
cmp
test
lahf
push
retf
mov
retf
adc
push
adc
jl
or
dec
jne
fdivrp
xchg
test
scas
aas
adc
inc
fsub
inc
scas
push
je
push
jmp
mov
cmp
je
ss
jo
jmp
sub
push
pop
and
dec
jne
movs
push
xchg
sbb
rcpps
add
or
sti
mov
sbb
jb
daa
cmc
push
and
or
prefetch
outs
dec
cmp
and
sub
dec
jno
mov
je
push
push
mov
js
das
push
jle
rcl
sbb
push
jnp
leave
cmp
and
test
daa
ficom
lock
jno
sub
mov
inc
es
cdq
retf
push
mov
xchg
push
ror
mov
int3
das
ds
sbb
ficom
dec
xor
call
sbb
repz
adc
and
out
push
cmc
inc
adc
push
dec
push
ds
in
cs
pop
sub
mov
pop
ud2
cmps
dec
mov
push
jo
sub
xor
(bad)
adc
inc
aam
rcl
or
jl
add
sti
push
lods
pop
es
mov
cmp
lahf
inc
add
and
mov
leave
dec
add
movs
adc
push
popa
jns
adc
xchg
add
pop
dec
loopne
dec
pop
add
sar
test
and
cmp
outs
cs
xor
iret
adc
and
test
xchg
add
push
fs
push
js
lock
retf
aas
sub
mov
rcl
dec
add
fild
addr16
dec
mov
movs
ret
and
jno
jmp
push
stc
add
aas
nop
mov
mov
outs
stc
inc
test
cmp
or
int3
push
(bad)
loopne
add
or
sub
iret
movs
das
ret
in
test
push
mov
pop
inc
xor
jne
and
adc
jge
aaa
sbb
pop
mov
loopne
and
cdq
sbb
ret
icebp
jno
or
xor
mov
mov
push
js
fcmovnb
add
push
sbb
add
movs
lea
dec
in
fcom
cmp
adc
adc
push
mov
pavgb
fmul
xor
add
add
cmp
add
sub
mov
jmp
je
jns
sahf
dec
lock
pop
push
mov
test
jle
adc
pop
inc
push
dec
mov
pop
mov
or
add
or
cli
mov
or
xor
pushf
push
mov
outs
loope
xchg
fldcw
test
inc
inc
xor
push
(bad)
jo
cmp
mov
ja
add
inc
jmp
adc
pop
outs
data16
xor
pop
sub
dec
jmp
push
pop
xchg
mov
push
lea
sbb
xchg
sbb
mov
shl
ins
push
jno
aam
add
adc
cmp
aas
push
add
ja
xchg
out
retf
inc
psubb
add
rol
fadd
aas
ja
(bad)
mov
mov
jmp
push
cwde
mov
add
mov
es
inc
shl
pusha
or
xor
adc
fdivr
mov
aad
mov
aad
adc
pop
mov
test
xchg
aam
(bad)
dec
xchg
push
xor
inc
adc
rcl
seta
add
test
mov
and
jl
push
add
mov
add
push
mov
inc
popf
das
daa
mov
rol
dec
cmp
aaa
arpl
pusha
and
sahf
mov
push
lds
jmp
sub
inc
mov
adc
adc
add
xor
add
aas
xchg
or
or
iret
add
mov
xor
inc
lods
call
push
mov
dec
clc
jne
inc
in
mov
inc
sbb
jmp
jmp
sub
test
pushf
jg
lods
pop
sub
xor
test
push
(bad)
xor
aaa
adc
imul
sbb
mov
push
or
dec
xlat
aam
adc
loopne
and
mov
rol
xchg
xchg
daa
mov
sbb
jo
ja
cmp
je
outs
xor
xchg
leave
xchg
xchg
mov
outs
jne
sub
ds
lds
mov
sbb
enter
es
pop
push
scas
pushf
mov
lock
push
mov
test
xor
add
and
mov
sub
sar
cmp
data16
xor
cmp
pop
fucomi
or
dec
in
lock
add
sbb
loopne
dec
sar
push
ja
loop
out
sti
jne
mov
mov
adc
dec
add
sbb
pop
add
add
in
add
inc
shr
popf
outs
mov
mov
adc
es
mov
pop
add
push
inc
pop
test
not
ins
inc
sub
fwait
or
loopne
cmps
ret
cmp
adc
cmp
jo
xor
mov
or
mov
adc
xor
dec
call
call
jge
xchg
push
mov
adc
ret
or
sub
repnz
xchg
xchg
dec
push
in
retf
pushf
dec
inc
jb
fnsetpm(287
fist
or
add
fmul
sbb
push
adc
mov
std
jle
jmp
out
std
fisub
dec
in
psubb
pop
pop
cld
imul
mov
in
stc
push
and
jl
fsub
ds
data16
out
push
pushf
dec
jg
sub
dec
repz
adc
idiv
repnz
mov
sbb
push
xchg
scas
ja
dec
mov
and
cmps
sbb
imul
sub
rol
and
das
pop
fstp
inc
xor
push
pushf
std
inc
sbb
add
inc
push
pop
pushf
dec
add
push
out
add
push
push
mov
inc
fwait
nop
sbb
enter
out
ret
push
push
or
inc
dec
in
dec
sahf
cmp
je
inc
xor
xchg
sbb
hlt
adc
and
xlat
pop
xor
add
pop
pop
icebp
adc
ja
sub
jmp
adc
shr
adc
shl
or
add
xchg
out
fs
jg
ja
mov
mov
or
xchg
adc
in
faddp
shr
iret
les
lahf
cmc
test
cmp
jb
inc
test
and
and
or
outs
fdivrp
outs
pop
and
(bad)
xchg
movs
xor
sbb
fstp
mov
add
add
sub
pop
xchg
call
inc
sbb
add
or
add
and
add
push
aas
sub
sbb
cld
das
sar
shl
lods
sbb
pop
shr
adc
ins
push
pop
or
bound
in
imul
mov
xchg
add
repnz
sbb
fnstcw
and
in
dec
mov
jmp
dec
add
fmul
adc
mov
or
imul
add
lock
push
(bad)
and
rcr
inc
iret
hlt
xor
cmp
mov
sub
inc
js
cmp
je
cli
das
jae
and
in
xor
add
je
mov
mov
nop
push
jne
sub
inc
shl
ja
out
rol
adc
repz
jecxz
push
sar
push
add
and
sub
ja
pop
adc
sub
pop
dec
test
sub
fldenv
inc
push
inc
rol
movs
adc
and
push
sub
into
xchg
nop
sub
add
add
push
mov
pop
dec
mov
ja
fld
fwait
jmp
push
xor
stos
test
scas
movs
jge
xchg
cdq
pusha
add
ror
add
and
mov
jge
mov
add
clc
or
inc
stc
rol
or
lea
js
xor
loope
pop
(bad)
fdiv
and
pop
adc
sub
sbb
xchg
and
jbe
add
xchg
in
into
in
sub
scas
aad
cmp
adc
imul
inc
dec
pop
imul
mov
in
test
add
fld
in
add
cmp
add
retf
push
loopne
test
lahf
add
mov
ja
in
or
cmp
push
push
add
xchg
in
enter
cmp
pop
int
cmc
push
and
push
xchg
push
out
add
cwde
or
mov
sub
push
(bad)
push
push
and
xor
dec
push
movs
sub
shr
mov
mov
dec
jg
jmp
add
mov
pop
pop
inc
loopne
loopne
dec
pusha
lds
fcom
adc
add
push
pop
lea
xor
push
jb
push
cld
inc
bound
or
pusha
test
inc
mov
nop
add
inc
mov
test
fadd
jo
or
fimul
call
jmp
xchg
cdq
and
or
push
jecxz
cmps
test
xchg
adc
cmp
mov
lods
inc
dec
mov
dec
call
rcr
pop
xchg
add
pop
jb
sti
daa
adc
pop
in
cdq
or
inc
mov
push
ret
lahf
and
sub
icebp
xchg
mov
loop
scas
retf
cmp
inc
je
jmp
into
push
into
je
hlt
sub
es
jo
cmp
loopne
cmp
stos
shl
mov
mov
add
or
push
xchg
pushw
shr
pusha
push
(bad)
aam
(bad)
stos
ret
test
icebp
lock
or
cld
sub
xchg
pop
xor
pushf
add
nop
pop
mov
jns
test
fwait
sahf
adc
call
and
inc
test
mov
out
mov
push
cmp
cmp
in
xchg
frstor
scas
add
sahf
lock
aad
jne
call
shr
and
mov
inc
inc
push
sbb
jp
in
imul
inc
pop
loopne
pop
mov
xor
std
pop
and
fiadd
scas
popf
and
in
sbb
and
or
in
pusha
sub
adc
dec
push
pop
in
scas
daa
in
jp
jmp
dec
sub
sub
add
arpl
and
(bad)
xchg
lock
mov
inc
test
jne
pop
inc
movs
adc
mov
out
hlt
push
ret
lahf
loopne
test
ror
cmp
cmp
or
dec
mov
add
test
shr
loopne
xor
sar
push
stos
or
aad
xchg
aad
retf
test
fsub
in
add
push
adc
lea
xchg
ds
push
dec
out
imul
cmp
inc
call
leave
adc
mov
in
push
add
les
xchg
scas
movs
xchg
outs
ja
lahf
and
mov
cmp
clc
call
lahf
mov
jge
cmp
or
or
lock
jns
cmc
mov
das
jge
add
les
sub
push
loop
xor
int3
adc
pop
xor
add
pusha
pop
add
mov
push
mov
adc
cmc
push
add
nop
sub
push
or
ins
pop
mov
aad
out
mov
dec
mov
inc
pop
popf
xlat
push
jle
loop
popa
daa
mov
lds
jmp
inc
loopne
test
ds
(bad)
push
daa
pop
leave
mov
add
mov
xor
cmc
or
test
and
pusha
or
sub
mov
xchg
(bad)
jge
push
test
int3
call
add
push
sub
inc
and
fwait
shl
jb
lahf
into
cmovae
in
push
and
int
inc
xchg
push
sbb
mov
gs
pop
imul
lds
cmp
inc
shl
imul
add
add
mov
jae
ror
in
jae
lea
ja
jno
mov
sbb
iret
pop
jne
cmp
ret
in
int
jp
call
hlt
cmp
cmps
test
(bad)
in
cmp
(bad)
mul
xchg
cmp
inc
lahf
and
test
xchg
push
dec
arpl
push
(bad)
pusha
call
push
adc
daa
cmp
test
jmp
je
inc
test
sahf
add
dec
adc
mov
pop
mov
mov
cmp
mov
in
aam
dec
push
mov
push
or
jns
push
xor
stos
ins
and
sub
sub
mov
or
jno
sahf
mov
pop
pop
mov
test
push
inc
leave
test
inc
in
push
add
adc
pop
and
loop
shr
cmp
in
add
pop
and
cmp
pusha
push
add
add
inc
pop
dec
push
or
fst
iret
or
add
add
jae
stos
jmp
xchg
dec
mov
push
and
sbb
stc
push
bound
push
addr16
or
push
sub
push
jmp
adc
inc
jo
sub
add
push
in
jbe
in
add
and
or
jg
mov
clc
add
xor
or
outs
stc
push
dec
pop
leave
mov
fist
inc
fbld
in
popa
outs
inc
fs
je
test
jmp
mov
sbb
ret
pushf
and
sti
cli
ja
rol
sbb
or
pop
loopne
cmp
or
xor
dec
mov
push
std
jle
adc
cmps
mov
mov
add
or
and
jne
sub
sbb
cmp
sti
pop
sti
popa
push
daa
xlat
ja
arpl
les
fwait
mov
clc
mov
jg
cs
push
push
xor
push
stos
nop
repnz
lods
call
xor
enter
fdivr
out
test
adc
xchg
cmps
imul
test
(bad)
aad
sub
add
jne
jge
test
mov
and
clc
lods
pop
jmp
xchg
fadd
push
loopne
push
mov
xor
repnz
lock
pop
add
aad
sbb
cld
lock
mov
xchg
inc
add
jne
sub
fsubr
sub
or
lock
dec
mov
cmp
dec
push
stos
nop
adc
shr
and
(bad)
adc
call
sbb
nop
(bad)
xor
daa
ins
ss
cmps
sbb
mov
adc
mov
pop
and
les
call
jg
sbb
adc
pop
xrelease
adc
push
shl
push
dec
dec
xchg
lock
xchg
push
inc
imul
out
xlat
dec
cdq
or
mov
retf
xchg
cld
xchg
dec
sbb
aam
sub
add
inc
mov
or
ret
aam
test
ja
push
sub
mul
and
add
fcmovbe
test
fidivr
xchg
out
lock
or
mov
test
mov
push
jno
mov
cwde
and
fisttp
hlt
aam
xchg
add
ja
stos
bound
xchg
jnp
daa
push
xchg
push
sub
xlat
in
pusha
add
stos
fwait
mov
lock
scas
je
aaa
inc
add
ins
out
add
mov
mov
je
xor
outs
mov
repz
inc
aaa
inc
add
jb
mov
sbb
pop
dec
movs
jmp
and
dec
add
mov
sub
mov
sub
cmps
xor
cmc
inc
add
(bad)
jp
jmp
pusha
lds
jo
in
jne
aaa
jmp
repz
xor
fsubr
shl
je
call
xor
pop
mov
mov
and
push
pop
jb
inc
xor
fild
add
mov
pusha
xchg
gs
cmps
mov
push
nop
inc
and
cmps
popa
(bad)
int3
in
stos
xchg
cmps
sbb
mov
sbb
mov
cwde
mov
(bad)
and
sub
inc
mov
xor
or
add
push
xchg
add
mov
addr16
mov
in
aam
bound
add
xchg
sub
arpl
pop
mov
push
push
push
fcomp
push
(bad)
sbb
pop
pxor
inc
mov
adc
jp
inc
aas
adc
mov
xor
dec
sahf
mov
shl
dec
inc
dec
(bad)
and
add
inc
inc
dec
pop
pop
xor
aaa
aaa
arpl
ja
and
mov
pop
rol
mov
stos
mov
enter
lahf
push
xor
push
call
test
push
dec
mov
xor
pop
push
outs
mov
daa
push
inc
or
cmp
xor
ins
xlat
std
rcl
dec
ja
inc
push
pop
inc
scas
ret
shr
mov
mov
xor
xor
ror
pop
inc
(bad)
add
or
or
outs
jo
xor
push
mov
cwde
add
dec
outs
bound
pop
push
cwde
dec
aas
inc
dec
dec
mov
mov
xor
aas
pop
mov
pop
push
dec
lahf
push
ins
in
or
lea
pop
mov
(bad)
outs
je
inc
dec
ins
gs
ins
jns
dec
pop
stos
cmp
data16
jp
arpl
jbe
jo
aaa
pop
sub
jbe
fidiv
daa
dec
ja
push
outs
mov
ss
inc
aas
pop
inc
inc
xchg
jmp
sar
push
add
addr16
test
dec
dec
xchg
ins
icebp
mov
jb
das
xor
out
push
push
dec
push
push
dec
jmp
rcr
ins
fild
xor
dec
and
dec
mov
mov
pop
push
push
dec
aaa
dec
inc
cmp
(bad)
int
daa
call
jb
daa
paddsb
push
dec
jne
ja
inc
add
xor
cdq
and
scas
imul
data16
popf
scas
sub
pusha
aas
push
lods
(bad)
mov
inc
push
pop
inc
add
sbb
inc
mov
scas
daa
mov
mov
lahf
mov
aaa
lock
push
scas
imul
push
cmp
inc
pop
inc
mov
test
and
push
cmp
inc
xor
and
pop
mov
xchg
iret
and
loop
fadd
(bad)
pop
push
pop
push
pop
dec
cmp
pusha
inc
pop
push
push
clc
mov
inc
fnstenv
push
inc
xchg
test
ja
pop
ret
ins
ins
pop
xchg
out
dec
aas
pusha
lea
dec
sbb
cmp
inc
out
hlt
xor
dec
push
das
sub
add
mov
and
js
ret
push
cmp
mov
arpl
dec
fadd
or
xchg
das
add
xor
cmp
mov
pop
push
dec
inc
add
xor
mov
or
fcom
cli
dec
ja
or
daa
cmp
jo
mov
cmc
fild
push
cmp
fcmovnu
pop
inc
lock
inc
aaa
add
and
jno
jo
jne
test
inc
cs
pop
push
xor
dec
imul
daa
mov
mov
pusha
or
(bad)
pop
fs
fmul
(bad)
loope
push
imul
jmp
aas
or
jo
rol
aaa
test
pop
pop
dec
in
rol
pop
scas
test
inc
ins
jb
popa
jbe
add
add
sub
scas
push
leave
cmps
in
sbb
daa
inc
ja
push
xor
jo
cmps
xor
xchg
ret
push
ja
adc
cmps
jne
mov
data16
popa
xor
dec
inc
(bad)
or
scas
addr16
xor
cs
dec
les
add
daa
mov
sbb
cmp
mov
cmp
stos
(bad)
and
out
sub
inc
iret
mov
sub
fs
es
fidivr
ret
and
sub
jbe
cmp
les
hlt
ror
loopne
mov
mov
push
inc
les
js
xchg
or
or
sub
or
call
enter
sar
jg
pop
shl
add
xchg
inc
imul
ss
dec
test
je
fstp
imul
push
xchg
mov
sbb
xor
mov
fcom
(bad)
xor
imul
mov
or
adc
jnp
fs
mov
aaa
test
popa
test
dec
gs
fisubr
adc
test
mov
add
sbb
inc
dec
xor
xchg
mov
in
stos
pop
and
pusha
mov
add
shr
stos
imul
inc
xor
scas
and
jb
daa
fcomp
mov
xchg
jecxz
je
add
mov
sbb
aaa
jnp
sbb
pop
xor
clc
adc
add
sub
sbb
jns
adc
das
cmp
add
add
pusha
xchg
test
and
push
xchg
and
sub
fild
call
xor
cdq
or
adc
and
push
mov
ror
inc
or
adc
and
xor
movs
cmps
xchg
mov
push
sbb
push
cmps
enter
test
push
daa
out
adc
imul
adc
dec
std
and
xchg
push
mov
rcl
or
jmp
or
and
stos
sub
inc
lock
push
call
dec
jb
test
out
enter
out
pop
fld
fiadd
or
add
jbe
inc
pop
js
(bad)
(bad)
or
xchg
jo
in
jg
cld
sbb
loop
cmp
add
adc
mov
mov
ret
test
sbb
ins
inc
sbb
daa
push
test
sbb
call
test
inc
repnz
sbb
xchg
les
test
in
and
dec
sbb
in
out
push
sbb
or
fmul
add
cmps
add
dec
push
and
jecxz
dec
xchg
mov
sbb
mov
and
enter
in
pop
add
pop
inc
enter
repz
nop
and
or
sbb
sub
in
enter
push
or
or
or
push
jno
add
push
xor
sbb
inc
leave
push
push
nop
inc
xchg
push
dec
push
fs
adc
add
cmps
fwait
push
sub
pop
or
adc
sbb
test
adc
leave
rol
scas
xchg
test
(bad)
xor
daa
or
sbb
rol
and
fs
mov
aas
dec
dec
add
cmps
dec
mov
xlat
and
push
add
cmp
xchg
add
sub
pop
pop
in
enter
push
and
pusha
inc
xor
jb
and
pop
dec
xchg
or
popa
(bad)
fstp
sahf
or
rcr
xchg
inc
iret
adc
lds
test
test
and
pop
dec
or
pop
adc
comiss
mov
and
add
and
leave
xor
push
in
sbb
fs
cmp
adc
and
sub
dec
mov
xlat
lods
and
xor
pop
add
ror
inc
leave
cmp
mov
pop
mov
inc
dec
cmps
add
in
ret
es
daa
or
jb
add
push
daa
nop
and
daa
mov
mov
sbb
daa
jecxz
js
pop
or
into
iret
add
dec
ret
push
jno
pop
jg
ja
add
nop
pop
or
fcom
jb
nop
fst
sub
inc
xor
pop
sbb
sub
aaa
push
xchg
pop
jb
or
sub
scas
inc
mov
out
in
leave
sbb
sub
shl
sub
add
or
mov
xchg
nop
add
in
int
adc
sub
aaa
pop
sbb
addr16
sub
cmc
mov
xchg
imul
add
ret
inc
jb
or
push
adc
pcmpgtb
and
cs
xor
jne
aam
nop
push
ucomiss
push
mov
and
sub
in
nop
pop
add
daa
das
in
imul
das
pop
(bad)
nop
xor
repnz
pop
aaa
pop
(bad)
shr
nop
inc
das
xor
sub
xchg
xchg
and
repnz
cmp
(bad)
dec
push
fs
xchg
aas
xor
mov
and
fs
call
inc
xor
fwait
and
xor
jb
add
lahf
mov
(bad)
or
xor
add
mov
adc
xor
mov
cmp
sbb
sub
push
cmp
xor
and
leave
sbb
(bad)
enter
push
fwait
and
add
push
xchg
retf
inc
push
sub
mov
cmp
in
jb
inc
das
ret
ss
jb
jp
aaa
pop
rol
adc
aaa
nop
dec
cs
aaa
adc
and
xchg
mov
mov
push
leave
sbb
pop
sbb
sbb
xor
mov
cmp
push
test
call
nop
adc
fbld
add
and
sbb
push
jg
adc
and
in
and
nop
adc
test
adc
xchg
pop
and
pop
pusha
and
or
nop
add
nop
add
sub
or
jno
sub
in
in
js
cmc
mov
sub
sbb
in
cmp
ss
xchg
push
cmp
add
or
icebp
jle
fwait
and
repnz
push
test
mov
pusha
xchg
xchg
push
add
das
inc
shr
cmp
sbb
dec
jmp
mov
mov
adc
gs
enter
push
fadd
mov
xchg
or
std
mov
call
and
fisttp
xor
adc
mov
jmp
pop
je
addr16
hlt
or
pusha
or
adc
imul
mov
aas
aaa
dec
cmps
loopne
les
dec
ds
dec
pop
lahf
aad
ins
xor
iret
cs
or
sub
xor
mov
loopne
fisttp
cmp
enter
pop
and
inc
js
aas
retf
xchg
dec
retf
jg
nop
and
into
test
add
or
(bad)
rol
and
and
push
test
fcmovnu
nop
push
lea
pop
inc
and
(bad)
sub
push
xor
stos
inc
cs
jg
out
and
dec
sub
dec
push
in
(bad)
in
in
add
inc
es
cmp
leave
jne
jbe
and
mov
dec
ins
inc
clc
xchg
sbb
leave
aas
je
sbb
mov
ss
and
xchg
sub
add
das
push
fisub
mov
xor
(bad)
cmp
and
cmp
or
xchg
mov
pushf
push
push
adc
hlt
mov
clc
push
dec
and
and
adc
nop
adc
daa
fisub
push
test
dec
out
inc
or
jecxz
fsub
add
inc
dec
mov
test
mov
cmp
inc
or
inc
test
adc
pushf
adc
sbb
pop
add
add
ror
ds
dec
iret
sbb
push
and
sbb
push
pop
dec
(bad)
(bad)
ins
jo
push
push
and
dec
pop
mov
xchg
iret
add
xchg
fninit
xor
push
outs
out
xor
mov
cmp
pop
pop
adc
icebp
mov
cwde
dec
mov
inc
or
hlt
mov
clc
sbb
dec
add
jbe
cmove
mov
and
pusha
dec
xlat
or
inc
enter
xchg
mov
mov
popf
scas
(bad)
mov
pushf
push
dec
(bad)
sub
dec
loop
test
jle
fdivr
out
popa
sbb
jns
push
adc
cwde
or
xchg
hlt
mov
clc
dec
dec
out
mov
test
push
push
into
pop
dec
sub
dec
sbb
fcmovne
xlat
sub
sbb
fidiv
nop
xor
xlat
cmp
adc
adc
ret
mov
std
ja
iret
inc
mov
mov
add
jno
clc
mov
jbe
ficom
dec
xlat
xor
inc
enter
inc
pop
mov
xor
jge
jo
je
pop
add
mov
outs
popf
and
dec
xor
jb
xlat
inc
dec
sbb
push
shl
test
pop
mov
mov
ret
and
add
js
fisub
dec
fidivr
push
mov
push
ins
in
jmp
and
jb
and
push
sbb
mov
repnz
test
dec
out
push
lahf
adc
adc
sbb
push
dec
shr
bound
shl
jb
push
sbb
(bad)
in
xlat
add
mov
pop
mov
sbb
push
jecxz
rcr
icebp
mov
(bad)
cmp
push
cld
jo
mov
imul
cld
inc
xchg
push
push
mov
mov
cmps
push
inc
xchg
jl
ins
scas
pop
(bad)
push
inc
xor
xchg
or
xor
xor
and
dec
and
xor
out
and
mov
adc
sub
pop
mov
dec
fwait
xchg
fist
jno
add
xchg
sbb
adc
dec
sti
or
mov
and
sbb
dec
hlt
add
add
inc
mov
xlat
xor
jg
nop
pusha
inc
call
sub
or
cmp
xor
push
mov
call
cmc
inc
adc
add
xor
cmc
pusha
test
push
clc
ins
or
cmps
fild
dec
test
pop
inc
mov
popf
sub
inc
push
movs
(bad)
(bad)
mov
or
inc
dec
jl
adc
pop
or
nop
xchg
imul
and
and
jns
jb
mov
lock
or
push
push
iret
clc
lds
js
add
sub
das
push
daa
dec
cwde
push
lock
dec
push
add
and
pop
xchg
push
add
stc
and
jle
pusha
mov
jg
fst
push
cmp
add
inc
pop
or
mov
push
test
cdq
dec
lea
mov
xchg
add
xor
pop
ret
hlt
and
adc
cmps
xor
inc
cmp
inc
mov
add
add
jle
jl
std
lock
scas
icebp
dec
retf
shr
and
icebp
es
cwde
sub
mov
arpl
mov
ret
mov
and
xchg
or
push
les
repnz
fadd
pop
test
aas
add
cmp
cmc
jae
mov
sbb
jl
adc
jbe
iret
jmp
bound
shl
int3
rcl
(bad)
std
pusha
pop
cmp
adc
mov
stos
xchg
cmp
xchg
repz
popf
push
or
popa
dec
inc
xor
hlt
sti
add
xor
inc
dec
jmp
cdq
(bad)
sbb
inc
fs
fisub
jle
push
in
in
push
xlat
add
pusha
jg
push
fs
xor
dec
pop
int
dec
sbb
pop
add
ret
iret
(bad)
add
sbb
imul
lods
mov
mov
or
add
mov
sub
and
enter
cwde
sub
inc
popa
daa
inc
fistp
adc
clc
lea
dec
ret
clc
iret
and
add
bnd
pop
or
add
jl
retf
pop
pop
cmc
sbb
and
sar
cmp
ja
cmp
jne
push
adc
adc
popa
adc
ret
inc
fwait
mov
mov
dec
dec
or
add
rcl
pop
iret
pusha
cld
pop
push
add
shl
movs
push
inc
cmc
cmps
pop
pop
cmp
sub
movs
or
sbb
adc
add
xor
in
cmp
inc
adc
call
mov
inc
mov
inc
ror
jnp
pusha
ja
xchg
jo
jle
cmp
pop
sar
imul
push
add
pop
mov
loope
(bad)
int3
jnp
popa
jmp
sbb
cld
aas
icebp
imul
cwde
cmp
jge
push
pusha
push
dec
push
scas
mov
and
jnp
mov
sbb
das
mov
rcl
adc
adc
jl
pop
jle
dec
or
sub
add
cmp
xchg
add
(bad)
pusha
pop
add
sbb
lock
fmul
or
daa
in
xchg
sbb
js
jae
dec
es
sub
add
fldcw
xchg
addr16
iret
pop
or
push
xlat
xlat
xchg
pop
sbb
or
sub
push
inc
fldcw
and
push
test
adc
dec
fsubr
sbb
ds
icebp
jns
add
and
sbb
xchg
ja
pop
rcl
pop
push
stc
and
test
scas
push
inc
ret
add
sub
dec
ret
sbb
ss
xchg
clc
(bad)
in
lods
add
mov
jmp
dec
pop
mov
push
xchg
push
ins
test
pop
das
xchg
xlat
and
add
enter
xor
jmp
pop
mov
sbb
xor
in
or
sub
psrld
jp
adc
popa
mov
stc
bound
pusha
inc
push
xor
cmp
mov
fnsave
mov
push
mov
or
in
xor
or
nop
and
pop
jmp
pop
and
nop
std
jo
loopne
inc
pop
adc
jae
or
sub
pop
push
xor
cwde
mov
jb
ja
gs
and
pusha
mov
ja
adc
sub
ss
call
test
jecxz
bound
pusha
xor
xor
mov
test
dec
scas
adc
test
dec
imul
imul
rol
cmp
cmps
outs
pushf
or
cmc
push
cmp
pusha
bound
neg
mov
cmp
cs
rcl
adc
into
mov
loope
fdivr
push
rcl
mov
jo
loopne
sbb
or
inc
add
test
outs
out
push
loope
arpl
mov
lds
cmp
mov
pop
push
mov
mov
pusha
arpl
dec
or
imul
fs
outs
das
add
xor
test
clc
cs
dec
mov
push
test
outs
push
inc
outs
adc
pusha
or
popf
arpl
sub
xchg
inc
and
jmp
into
cmp
adc
loope
xor
pop
lahf
cmp
lahf
retf
stc
sub
sub
sub
repnz
mov
xor
fisub
imul
xchg
jg
lock
xchg
int3
(bad)
cld
add
fcom
gs
pop
adc
and
jne
scas
call
clc
push
ror
push
sub
cdq
stos
inc
jmp
rcr
rcr
out
or
data16
in
or
add
mov
cmp
sbb
inc
imul
or
push
icebp
xor
das
ds
ja
add
or
mov
nop
xor
add
xor
loopne
mov
movs
or
jns
out
addr16
mov
out
fdiv
leave
push
lock
push
adc
jns
(bad)
xor
pop
sub
xchg
mov
imul
mov
call
stc
retf
mov
aas
and
dec
push
inc
adc
(bad)
dec
ud0
mov
mov
add
imul
xchg
xchg
bound
xchg
and
setl
inc
lods
lea
ret
pop
out
sub
ror
push
cmp
adc
xor
jmp
and
fild
imul
sbb
shl
sub
imul
sub
add
add
jecxz
mov
cld
inc
cmp
or
in
shl
test
xchg
(bad)
or
inc
add
clc
loope
jmp
(bad)
jecxz
mov
scas
and
inc
pop
add
sub
daa
add
dec
and
xor
aaa
and
sub
nop
xor
jbe
cli
push
push
push
aaa
shr
add
or
pop
sub
push
mov
push
addr16
add
xchg
retf
in
dec
inc
or
imul
xchg
push
add
popa
push
ins
mov
mov
inc
mov
test
inc
push
mov
pusha
mov
(bad)
je
test
lock
and
jg
test
jno
and
loopne
push
inc
bound
pop
ja
pop
inc
aaa
in
(bad)
scas
pop
sbb
adc
clc
clc
push
add
(bad)
nop
clc
pop
ret
lods
call
shr
inc
imul
hlt
adc
push
test
mov
sbb
dec
adc
pop
inc
pusha
ret
add
adc
fmul
or
push
or
sub
xor
js
mov
pop
imul
mov
adc
adc
es
cmp
jmp
dec
jle
push
outs
and
pop
mov
arpl
xchg
sbb
imul
or
neg
inc
push
(bad)
imul
aas
mov
pop
lock
(bad)
std
adc
es
shl
push
rcl
mov
loope
dec
rcr
pop
rcl
sbb
push
test
call
ins
inc
add
js
das
sub
imul
mov
xor
sbb
call
(bad)
popa
mov
popa
and
inc
pop
and
xchg
ins
sub
repnz
or
ins
or
outs
js
or
jl
push
push
xchg
data16
cmps
cld
push
popa
add
dec
inc
nop
popa
add
pop
pop
sub
test
adc
jns
push
loope
outs
pop
xor
addr16
loope
add
rol
shl
bound
lock
adc
cmps
pop
add
shl
nop
ror
cmc
sub
add
fmul
adc
inc
mov
cmp
pop
test
aas
inc
sbb
push
dec
xor
xchg
push
in
push
jo
mov
inc
test
xchg
or
fild
nop
or
cli
(bad)
add
fcmovnbe
movs
fld
mov
scas
inc
cdq
mov
lock
pop
add
mov
js
imul
mov
cmps
pushf
pop
test
and
add
add
inc
mov
aas
jne
inc
push
ins
fs
cmps
jge
fdiv
aaa
enter
movs
into
ret
push
imul
inc
xor
add
and
adc
data16
push
js
iret
jmp
pop
add
adc
mov
push
xchg
ror
cwde
push
xchg
and
and
arpl
push
xor
mov
das
pop
cmp
adc
rol
dec
mov
add
rol
popa
mov
shl
xor
into
and
push
shl
(bad)
ins
inc
daa
mov
test
jle
pop
dec
outs
adc
add
xor
dec
push
and
mov
scas
js
inc
push
mov
mov
test
sbb
inc
xchg
inc
or
jle
or
sub
ret
out
mov
psubusw
mov
lods
and
nop
fiadd
adc
mov
pop
daa
pusha
arpl
push
cmps
push
aas
add
push
movs
push
or
add
sub
lock
rcr
adc
retf
jae
sbb
mov
arpl
jb
and
push
fs
fisubr
mov
call
or
out
sub
out
add
add
mov
add
push
syscall
inc
call
inc
push
test
pop
cmp
xchg
inc
mov
add
mov
(bad)
mov
xchg
daa
jns
push
scas
lahf
pop
jbe
ins
add
in
mov
add
aaa
cmp
xchg
pop
gs
das
in
jle
push
fs
stos
or
hlt
loopne
les
lods
pop
push
movs
(bad)
mov
and
ds
or
lds
xor
dec
call
mov
pop
aad
(bad)
mov
test
push
sub
adc
fnstsw
sub
aaa
or
or
imul
lock
dec
xor
push
xchg
pusha
fidiv
movs
push
pop
add
jg
push
mov
push
retf
fdiv
mov
pop
ss
imul
enter
or
inc
pop
pusha
and
sbb
add
or
daa
jle
mov
add
and
add
nop
push
in
xlat
pusha
and
push
pop
les
xor
out
sub
sbb
push
outs
adc
push
cmp
jbe
xchg
push
pop
push
mov
js
nop
scas
inc
adc
mov
js
add
dec
movs
cmp
ficomp
dec
jns
sub
xor
test
adc
inc
loope
mov
push
pop
or
ja
mov
push
mov
pop
mov
cmp
add
or
dec
push
mov
cmp
mov
cmps
cmp
xchg
loop
imul
pop
iret
or
ds
pusha
xor
push
add
xor
add
adc
add
push
mov
mov
ja
adc
rol
ins
push
pop
pop
nop
push
stos
jae
inc
adc
adc
outs
mov
or
sbb
pushf
inc
xlat
inc
push
adc
outs
cmp
inc
ins
inc
or
outs
cmps
inc
push
and
cmp
cmp
add
jne
cmp
lock
xchg
mov
ror
sbb
or
xor
jb
push
pop
enter
push
cmp
push
xchg
imul
bnd
inc
inc
or
sbb
jbe
or
pop
dec
ror
js
xchg
cmps
jae
pusha
repnz
sub
jns
imul
push
sub
inc
xchg
dec
cmp
stos
mov
pusha
or
or
iret
xchg
jae
adc
pop
pop
sbb
add
lahf
add
in
push
scas
xor
mov
jmp
jo
jo
adc
inc
adc
mov
cs
js
or
lods
outs
jb
ins
popa
inc
add
mov
xchg
mov
in
pop
fiadd
outs
lock
xor
adc
sbb
add
mov
les
pop
add
movs
xor
xor
sbb
pop
pop
repnz
pusha
cmp
call
adc
(bad)
adc
mov
or
aaa
or
inc
xchg
aas
mov
or
jae
inc
pop
ins
fs
xor
fist
xlat
aaa
jecxz
add
mov
push
jl
sete
pop
ins
mov
pushf
sub
rcl
pusha
push
lds
nop
xlat
pop
sub
xor
out
add
push
xchg
and
outs
mov
and
in
xor
push
push
mov
aas
lods
retf
jne
lock
xor
cwde
clc
data16
rol
nop
mov
dec
fadd
faddp
lock
add
outs
out
and
inc
jbe
data16
xchg
inc
daa
pop
vmwrite
test
and
sysret
movs
popa
adc
pop
les
and
inc
add
pushf
cmp
push
add
or
adc
adc
jecxz
enter
push
mov
mov
lahf
or
and
jmp
daa
mov
or
xchg
daa
daa
daa
daa
cwde
pushf
mov
daa
test
mov
mov
inc
or
push
rcl
mov
pop
xor
or
imul
and
cs
push
push
inc
mov
out
cmp
jo
push
inc
dec
nop
or
xchg
xchg
push
xchg
pop
dec
add
into
adc
sbb
pop
arpl
jae
dec
test
hlt
pop
or
mov
jns
inc
movs
movs
push
pop
je
or
int
inc
test
rcl
test
add
mov
ror
push
in
rol
mov
push
mov
jb
pusha
ja
and
push
push
data16
mov
pop
jnp
ins
aas
and
push
pop
(bad)
les
sub
pop
inc
xor
push
xchg
test
push
js
mov
pop
push
movs
lahf
fsub
xlat
inc
cmps
sahf
add
ins
stos
sub
add
adc
mov
sub
sub
xor
and
pop
and
shl
fcomp
and
push
ss
add
aam
clc
dec
ins
mov
inc
pop
xor
or
cwde
bound
jb
cwde
pop
bound
xor
push
jge
bound
les
adc
gs
rcr
sub
push
sbb
enter
push
add
push
or
inc
pop
adc
sub
lds
pop
out
popa
daa
pop
ja
push
inc
fdiv
xlat
pop
xor
test
and
or
and
or
das
jae
mov
arpl
ins
push
sti
rcl
cmp
jb
add
int3
jp
dec
lock
ss
mov
aaa
add
inc
cmp
add
mov
arpl
jb
iret
push
inc
mov
dec
aas
mov
cmc
inc
cmp
sbb
call
bound
adc
adc
sbb
cmp
call
sub
mov
inc
sub
call
xor
imul
rcr
je
dec
call
pop
pop
push
dec
pusha
pusha
or
push
sbb
jo
je
add
sub
das
xchg
add
nop
xchg
mov
repz
popa
or
enter
cmp
xor
push
jle
adc
push
ret
mov
rol
cs
rol
dec
xor
or
mov
mov
out
cmps
out
add
in
add
imul
fmul
xchg
(bad)
fcom
daa
xchg
dec
dec
sbb
push
aam
retf
and
xor
sbb
gs
xchg
ror
in
leave
leave
int3
push
in
enter
daa
in
(bad)
pop
and
pushf
sub
dec
loopne
les
(bad)
mov
push
sub
add
setae
sbb
mov
pop
or
jl
pop
inc
sbb
repnz
cmp
addr16
cmp
movs
clc
in
mov
imul
in
je
sahf
ins
int3
lea
jg
inc
call
fdiv
xor
aam
mov
call
xor
sub
cmp
sub
xor
mov
in
inc
add
enter
je
mov
add
pop
fwait
jmp
xor
lahf
mov
mov
mov
mov
sbb
(bad)
leave
cwde
in
imul
and
xchg
xchg
dec
push
rcl
dec
jb
test
or
sbb
call
and
rol
push
mov
pusha
add
jmp
xlat
add
sti
pop
test
and
add
lahf
dec
mov
mov
daa
cmp
cmp
xchg
dec
mov
pushf
pushf
pop
js
pop
stc
xor
and
sbb
pop
fimul
mov
or
and
fisttp
ja
pop
mov
aaa
adc
and
inc
push
dec
push
jg
daa
xchg
int3
ds
das
or
rol
sbb
add
mov
cs
xchg
sub
addr16
dec
and
inc
mov
mov
inc
cs
(bad)
xchg
je
jno
mov
pusha
pop
test
or
cmps
fcom
mov
adc
add
(bad)
adc
inc
ss
ss
push
push
xchg
aaa
sbb
nop
aaa
sbb
or
jmp
and
xor
sbb
es
shr
adc
and
std
imul
jmp
sub
push
push
adc
xchg
in
push
idiv
mov
mov
mov
sbb
call
mov
aaa
dec
fidivr
sbb
xchg
push
lahf
xor
fs
hlt
hlt
mov
jb
js
les
sbb
mov
cmp
mov
or
push
cmp
clc
jae
and
and
or
sbb
xchg
cwde
inc
sub
cmps
nop
add
addr16
and
sub
and
sub
jmp
stos
aaa
mul
adc
xor
mov
call
sub
jns
jns
inc
jl
adc
sbb
in
add
push
addr16
dec
ss
fldenv
into
sub
ja
pop
add
test
(bad)
into
fisttp
out
mov
out
in
add
push
rcr
es
(bad)
hlt
into
ins
cmp
js
(bad)
je
(bad)
sahf
adc
and
mov
and
push
es
ss
jmp
je
cs
sub
cmp
adc
adc
sbb
jae
xchg
hlt
sub
mov
test
dec
dec
sbb
dec
aaa
bnd
ins
ins
pop
sbb
fisubr
add
out
sub
mov
out
imul
or
dec
fld
jle
daa
inc
inc
pop
ja
(bad)
inc
add
call
cmps
inc
or
push
mov
inc
mov
add
sti
jmp
sub
fimul
add
test
das
(bad)
rcl
mov
mov
cwde
jl
add
das
cdq
popa
add
adc
add
scas
and
inc
sbb
pop
ja
fdiv
or
test
inc
mov
jle
sbb
shr
jmp
cmp
dec
test
inc
sub
jno
pusha
inc
cmp
xor
or
imul
and
or
add
xor
nop
pop
cmp
xor
test
clc
xchg
das
sub
xchg
push
inc
sub
dec
ins
or
or
(bad)
or
(bad)
push
pop
cmp
sbb
(bad)
fnstenv
pop
xchg
test
iret
jne
mov
(bad)
push
or
pop
scas
add
sbb
inc
rcr
or
sbb
sbb
sbb
and
pop
mov
mov
popf
jmp
mov
add
mov
dec
jmp
adc
sbb
jb
push
jl
test
dec
cmp
add
les
jne
xor
or
sbb
clc
clc
xor
cmp
mov
ins
cmp
out
(bad)
and
and
and
jb
xchg
mov
or
(bad)
call
icebp
xchg
and
mov
pop
and
lods
mov
test
arpl
push
or
jne
in
cdq
mov
inc
xabort
mov
and
popf
xor
and
inc
push
fcomp
mov
das
jmp
adc
inc
inc
xchg
ret
inc
movs
(bad)
daa
aaa
jnp
scas
movs
lock
sub
and
push
or
in
cdq
outs
lock
addr16
jp
xor
push
jae
mov
cmp
nop
xor
adc
leave
cmp
lock
push
xchg
mov
bsf
pop
adc
mov
out
mov
loop
xchg
jp
xor
or
inc
or
xlat
pop
lahf
dec
cli
or
hlt
lods
jno
xor
nop
xchg
adc
into
cs
inc
adc
and
add
in
and
xchg
pushf
or
sbb
sub
femms
jmp
clc
mov
pushf
inc
rcl
and
push
aas
in
or
outs
lds
into
lock
clc
or
fsubr
push
add
(bad)
sbb
add
cwde
mov
and
adc
xchg
shl
int
aaa
push
(bad)
xchg
fnstsw
retf
add
mov
pop
mov
dec
mov
and
aaa
dec
cdq
lock
or
xor
sar
aaa
jecxz
mov
test
push
jns
sub
cmp
sub
pushf
lahf
shl
inc
movs
fild
push
lds
and
or
lods
cmps
push
ja
jo
fiadd
jbe
into
sahf
push
mov
add
test
test
xchg
bound
cmps
cmc
inc
mov
pop
ja
push
pop
inc
sub
and
jns
test
jp
retf
cdq
iret
pop
test
fadd
or
out
cmp
mov
ror
or
cmp
nop
xchg
out
add
xchg
dec
call
mov
imul
call
movs
cmp
mov
inc
loopne
fdivr
add
mov
aad
int3
gs
shl
les
jo
sub
aad
xchg
mov
sbb
xchg
enter
in
pop
push
outs
xchg
push
jo
fldcw
jnp
das
xor
mov
jne
add
popa
adc
or
mov
or
mov
push
pop
sbb
xor
push
add
add
jl
jg
cmp
adc
xchg
pop
fidivr
arpl
mov
nop
xchg
xchg
leave
gs
retf
pushf
pushf
lods
lods
jb
in
mov
pop
mov
cmp
mov
cmps
inc
mov
pop
les
inc
ja
(bad)
inc
mov
mov
cmps
xchg
xchg
jg
adc
sbb
cdq
jae
pop
imul
push
and
ins
sub
dec
popa
dec
in
and
js
cld
sub
mov
jno
xor
cmp
das
sub
cmp
(bad)
out
sub
mov
ror
lahf
push
scas
xor
rol
pop
daa
xor
pop
jb
mov
out
mov
mov
inc
in
sub
mov
mov
adc
test
and
push
cdq
nop
fs
inc
push
movs
xor
gs
xchg
movs
or
nop
retf
test
and
adc
adc
movs
mov
(bad)
call
je
jo
add
mov
js
shl
cdq
popa
cmp
adc
shr
xor
push
sahf
inc
mov
jl
mov
movs
in
adc
xor
(bad)
test
lods
inc
jmp
dec
inc
nop
sub
sub
add
sahf
sbb
ins
adc
mov
and
cmp
xchg
dec
sar
jno
add
cmps
push
lea
inc
push
mov
pusha
pushf
mov
and
movs
mov
mov
nop
push
pushf
daa
adc
dec
enter
dec
cmps
cmps
nop
das
cdq
nop
xchg
js
xchg
mov
cwde
add
mov
pop
shr
xchg
retf
inc
test
pushf
pushf
ror
jl
sub
cmps
mov
push
jbe
cmp
loope
and
cmps
lock
(bad)
(bad)
lahf
pop
or
mov
xor
dec
mov
bound
outs
pop
cmp
sub
cmp
sub
pop
and
cmps
adc
stc
or
test
pop
jnp
jbe
adc
cmc
inc
or
mov
imul
mov
or
add
cwde
mov
add
sar
imul
adc
mov
shl
div
jmp
(bad)
mov
hlt
mov
inc
loope
xor
in
ins
fdiv
pop
jb
or
sbb
aam
mov
stos
hlt
push
ror
sbb
stos
dec
les
inc
stos
mov
push
stos
int3
dec
movs
fmulp
mov
dec
sub
xchg
int3
fmul
push
mov
inc
shl
mov
cmps
pop
sub
add
mov
nop
mov
mov
clc
mov
mov
sbb
add
mov
sahf
gs
dec
mov
and
shr
adc
leave
cdq
push
xor
aaa
aaa
mov
(bad)
dec
dec
add
jno
mov
sbb
pop
cmp
cmc
pop
mov
jne
add
fadd
dec
js
jmp
(bad)
mov
and
mov
ja
retf
xchg
or
pop
push
test
mov
push
sbb
mov
jecxz
sbb
out
test
jl
out
fbstp
fdiv
cld
mov
call
or
es
push
in
je
sub
fiadd
enter
sub
pop
or
int
inc
pop
mov
push
arpl
fbstp
sti
and
addr16
fsubr
(bad)
sahf
adc
pop
repnz
sbb
add
and
enter
inc
xor
add
lods
lock
shr
add
inc
or
bound
fisttp
stos
or
xchg
add
pop
mov
lds
add
popf
shr
enter
inc
loopne
pusha
xchg
sar
xor
jmp
out
xor
mov
push
xor
push
loopne
dec
mov
cdq
or
xor
rol
out
scas
outs
test
add
or
mov
push
scas
push
mov
push
stc
ret
cs
(bad)
cs
xlat
pop
scas
nop
rol
out
sbb
mov
xchg
mov
sti
dec
sub
ret
loope
cmp
or
add
mov
fnstsw
xor
jge
pop
(bad)
dec
jmp
cwde
shr
mov
mov
or
fcom
cwde
dec
xchg
add
ds
inc
ds
shr
lock
nop
xchg
lock
xor
inc
push
jns
inc
add
mov
xor
fdiv
add
iret
sbb
movups
jmp
xor
sbb
cmp
cmp
mov
pop
loopne
loopne
xor
mov
inc
sub
out
push
mov
push
mov
nop
mov
push
adc
add
mov
or
add
mov
pop
and
or
in
adc
shr
(bad)
mov
jbe
js
push
lods
dec
jnp
inc
sub
pop
inc
ret
add
push
or
dec
rcl
mov
shr
or
popf
xor
shl
cmp
jl
xlat
adc
stos
push
add
aaa
push
xchg
and
mov
scas
hlt
xor
addr16
mov
rol
sbb
stos
clc
mov
xor
xor
xor
aas
sbb
add
xor
sub
rol
mov
pop
mov
pop
int
xor
in
bswap
and
cmps
mov
nop
call
or
push
and
push
in
fst
outs
ror
test
js
bound
inc
inc
call
add
sar
jl
mov
sete
jg
mov
pop
jae
mov
sbb
mov
pop
enter
icebp
and
fwait
adc
das
mov
je
adc
jg
sub
jne
pop
xor
in
cmp
dec
repz
add
push
and
mov
rcl
lock
call
cmps
dec
mov
inc
lea
mov
loopne
ret
out
inc
pop
mov
dec
xchg
xchg
inc
sbb
pop
mov
xor
pop
fsub
and
cwde
stos
xor
es
mov
xor
xchg
sbb
cdq
mov
mov
mov
dec
mov
push
add
xor
inc
or
dec
sbb
out
or
sub
rol
jp
repnz
push
sysret
xor
or
lods
push
clc
xor
inc
lds
add
adc
pusha
pop
aad
pusha
mov
inc
and
daa
dec
cwde
push
jb
cmps
inc
jmp
mov
inc
or
sbb
mov
push
add
dec
inc
daa
sbb
pop
mov
sub
add
call
test
adc
fist
outs
cs
out
mov
and
mov
xor
or
jne
adc
daa
pop
cmc
add
mov
pop
push
mov
push
jno
and
mov
(bad)
imul
mov
add
xor
inc
nop
inc
cmc
sbb
stc
or
and
jbe
cmp
cmps
add
or
stc
push
gs
inc
ins
mov
mov
add
mov
sbb
jge
loopne
addr16
pushf
push
into
xor
jmp
test
fstp
sbb
dec
jne
rcl
add
pop
pop
and
nop
mov
jl
add
sub
jno
int3
jl
or
outs
xor
sbb
pop
or
mov
sub
fwait
lock
pop
pop
dec
and
pop
repnz
fnstcw
mov
enter
cmp
mov
fisttp
sti
pop
hlt
in
mov
dec
fisttp
push
jmp
mov
pop
cmp
jle
push
inc
nop
in
sub
xlat
sbb
push
test
and
aaa
and
push
cmp
fadd
mov
dec
js
mov
xor
sub
or
inc
cmp
and
adc
fmul
sbb
inc
inc
outs
pop
mov
sub
ins
dec
mov
ins
cld
mov
adc
out
sub
inc
add
jno
rep
sbb
push
inc
mov
push
cmp
xchg
sbb
cli
pop
sbb
xchg
clc
or
push
xlat
adc
imul
or
cld
xor
or
mov
add
push
loopne
test
test
ror
adc
clc
pop
lods
movs
sahf
inc
add
outs
sbb
scas
test
ret
cs
idiv
retf
mov
je
scas
fcom
push
dec
pop
pushf
mov
test
jle
aaa
(bad)
enter
cmp
push
inc
mov
add
mov
nop
shr
sub
push
inc
imul
mov
pop
and
push
ins
loope
loope
out
push
inc
idiv
add
cmc
scas
js
adc
(bad)
cmp
(bad)
add
xchg
mov
xor
adc
int3
out
mov
jb
iret
jecxz
dec
add
in
or
sub
loopne
add
push
jo
(bad)
and
pop
test
add
inc
bound
pop
or
pushf
and
jmp
fst
sub
adc
adc
inc
adc
leave
xor
cmp
mov
adc
ss
ja
mov
dec
push
push
and
pop
and
shl
jno
ss
stos
sub
dec
cmp
sub
mov
push
mov
repz
test
aaa
pop
ret
dec
mov
adc
test
pop
mov
ror
(bad)
imul
scas
dec
push
ss
and
adc
shl
lods
repnz
or
sbb
jns
add
mov
mov
sbb
cmp
dec
fadd
xchg
adc
xchg
je
xor
and
add
or
sbb
xchg
push
add
addr16
or
jmp
stos
add
mov
xchg
cdq
jne
jge
mov
add
sbb
cmps
clc
cmp
js
retf
inc
jo
call
jmp
popa
pop
jae
shl
nop
test
mov
inc
inc
xchg
mov
xor
nop
push
dec
fadd
pop
inc
xor
xchg
out
add
jo
xchg
cmps
int
push
popa
mov
jns
stos
xor
ret
inc
cwde
or
rcr
xor
shl
mov
inc
fimul
arpl
push
js
pushf
and
lods
not
and
jb
sub
jmp
cmps
rcl
popa
or
jae
xchg
je
pushf
mov
inc
test
mov
jmp
or
cmps
shl
push
jnp
jge
movs
test
pop
or
leave
cmp
adc
sub
and
in
push
jnp
sbb
cmps
inc
jb
test
stos
jmp
push
aaa
cmp
jl
push
and
ret
xor
nop
inc
mov
enter
icebp
ret
movs
clc
ret
mov
lods
pop
movs
or
add
adc
mov
je
popf
or
xlat
rol
or
nop
ins
jbe
jo
dec
mov
xor
xor
movlhps
lods
sbb
pop
cmp
add
adc
data16
out
xor
push
cmp
adc
call
pop
cmp
es
fwait
and
cmp
or
inc
ja
retf
add
sub
lea
or
or
mov
or
lods
sti
lds
push
out
imul
cld
inc
push
ja
xor
add
adc
mov
pop
nop
cmp
je
sub
cwde
pop
sub
xchg
test
test
xor
jp
ficom
xor
push
push
mov
ins
xchg
fadd
leave
inc
or
pop
cmp
rcr
mov
test
sbb
out
or
pop
je
inc
pusha
ds
(bad)
div
or
push
xchg
shl
pop
sub
xor
sub
add
add
cmp
movs
push
or
jmp
or
dec
mov
xchg
bound
sbb
or
repnz
xchg
xor
nop
mov
cli
push
pusha
daa
loope
or
adc
or
je
mov
(bad)
xor
inc
push
rcr
or
xor
push
xor
daa
and
mov
lock
test
stc
push
or
dec
clc
and
pop
mov
das
pop
xor
pop
dec
fstp
leave
xor
lahf
popa
pop
inc
enter
jl
aaa
popa
lahf
test
pop
enter
pop
mov
push
push
mov
dec
dec
xlat
test
leave
push
ror
and
pop
mov
adc
(bad)
fucom
or
cmp
(bad)
add
icebp
pusha
idiv
jmp
add
adc
retf
ins
ret
(bad)
push
adc
ficomp
push
cmp
iret
jmp
add
mov
sbb
cmp
xor
xor
push
inc
(bad)
repz
adc
dec
out
push
push
ss
rol
(bad)
mov
inc
imul
mov
loopne
jg
cmp
adc
nop
rcl
ss
adc
movhps
je
add
out
in
and
into
inc
mov
sub
outs
sbb
push
dec
inc
jle
xlat
or
inc
test
inc
mov
push
sbb
adc
pop
xchg
nop
retf
bound
fist
pmulhuw
cmps
stc
xor
fmul
ins
addr16
push
rcr
push
cmp
sub
sub
mov
(bad)
retf
xacquire
or
lock
nop
out
imul
call
inc
xor
imul
sub
imul
stos
pop
add
(bad)
retf
xchg
cdq
add
push
gs
leave
add
(bad)
push
loope
rol
pop
xchg
inc
ror
(bad)
dec
loopne
fmul
pop
adc
inc
add
dec
xchg
into
cmps
jo
ja
mov
inc
int
push
jo
add
nop
das
pop
cmp
rol
sub
and
rol
add
or
ds
shl
outs
xlat
inc
add
pop
and
outs
fldcw
or
pop
ja
mov
aad
mov
jbe
push
test
push
inc
adc
dec
add
cmp
test
ror
retf
push
cwde
mov
mov
dec
inc
push
mov
fs
push
or
cmp
push
into
or
pusha
pop
xchg
mov
rcr
add
jmp
xchg
rol
aaa
jae
push
sub
hlt
adc
cli
cmp
cmp
je
push
cmps
mov
sahf
inc
dec
add
mov
jne
daa
stos
gs
inc
dec
cdq
jns
and
test
es
xor
jecxz
add
fisttp
add
xchg
or
push
xor
add
cmp
popf
iret
outs
add
nop
test
sub
cmp
out
jmp
pop
enter
dec
iret
pop
ret
mov
mov
(bad)
test
add
into
(bad)
mov
mov
les
xor
mov
fistp
mov
nop
push
lds
outs
jmp
rcr
(bad)
inc
inc
jb
adc
cmp
mov
rol
aam
dec
imul
xchg
test
call
ds
adc
rcr
sti
int3
push
ss
(bad)
mov
push
add
dec
or
out
cmp
pushf
cmc
call
loope
lock
sub
push
xchg
jne
xchg
mov
add
sbb
nop
pop
and
ror
mov
add
or
mov
dec
inc
push
push
mov
xchg
adc
jecxz
and
call
pushf
cmp
add
cmp
mov
cmp
push
push
rol
dec
rol
jns
mov
push
movs
cs
inc
add
test
inc
or
mov
out
cmps
push
rol
add
add
bound
xor
adc
sbb
adc
cmp
mov
imul
mov
xchg
mov
xchg
aad
mov
arpl
inc
adc
arpl
xlat
faddp
sbb
mov
ret
jmp
add
dec
inc
push
mov
pushf
pushf
and
mov
loop
jb
mov
mov
scas
retf
cs
adc
pop
dec
test
daa
rol
loopne
cmps
mov
fwait
sub
pop
and
dec
cmp
or
jle
in
push
adc
rcl
daa
in
bound
and
pop
dec
bound
out
mov
nop
and
push
adc
lahf
mov
(bad)
and
mov
mov
jle
mov
mov
lahf
xor
fnsave
pop
pop
jmp
mov
dec
les
arpl
(bad)
pop
daa
pop
(bad)
mov
add
add
and
jle
int3
adc
adc
adc
cmp
inc
sub
xor
push
(bad)
cmp
clc
push
outs
nop
mov
push
ret
das
inc
imul
adc
sub
jcxz
les
cmps
or
and
test
retf
inc
int3
sbb
push
jne
dec
cmp
add
cmp
rol
dec
or
inc
aam
aad
xor
hlt
inc
sub
es
sar
rol
mov
sub
sbb
or
add
sbb
mov
sbb
xor
not
dec
cld
(bad)
mov
sti
stos
loope
or
or
pop
fadd
fs
ja
in
xchg
jb
dec
(bad)
and
and
fcom
ss
xchg
arpl
sub
adc
sub
or
sub
jmp
dec
(bad)
fstp
or
xor
dec
mov
inc
cmp
(bad)
mul
(bad)
and
stc
sbb
enter
lods
or
jo
add
dec
xchg
inc
xchg
add
fyl2x
adc
mov
in
iret
sub
and
jmp
dec
dec
nop
rol
ret
pop
xchg
lock
mov
sub
lahf
sub
push
fucomi
icebp
jmp
add
pop
sbb
(bad)
ja
fs
adc
rcl
out
enter
sub
dec
push
bswap
clc
js
sbb
pushf
or
xchg
shr
xchg
xchg
inc
fucompp
push
push
mov
movs
jmp
or
cwde
stos
push
or
xor
cmp
push
retf
and
mov
xchg
inc
enter
fild
and
ret
stc
hlt
dec
enter
fstp
clc
adc
pushf
fdivr
aam
dec
pusha
imul
and
push
and
add
test
shl
cld
rcl
shr
outs
push
imul
dec
push
jecxz
push
xor
push
sahf
and
cmp
jmp
inc
shl
and
pop
sub
ret
jge
sbb
cmp
shl
(bad)
jmp
inc
dec
jne
push
jg
add
lahf
xor
mov
sahf
add
mov
(bad)
popa
adc
imul
aam
pop
cwde
movs
sbb
cld
in
pusha
add
fsub
mov
inc
das
pop
enter
pushf
jg
inc
popf
jecxz
fs
cs
inc
xchg
pop
ret
inc
mov
pop
pop
dec
pop
push
scas
lods
icebp
fcom
lods
inc
mov
pop
xor
push
shl
or
clc
(bad)
aaa
bswap
outs
xor
repz
mov
and
fs
add
sub
cli
and
jnp
and
dec
pop
std
mov
push
add
mov
sbb
cmp
add
push
fucomip
dec
dec
mov
inc
pop
loope
out
mov
sub
test
xchg
(bad)
or
loope
dec
imul
bound
stos
push
adc
loope
cmp
test
lea
and
(bad)
retf
ds
in
inc
jge
pop
push
adc
repnz
dec
sahf
cld
mov
arpl
mov
test
clc
cmp
mov
mov
sub
popf
(bad)
into
inc
lea
and
js
dec
sbb
pusha
jle
xchg
icebp
jmp
je
jmp
and
cmp
ficom
retf
sub
loop
jo
stos
scas
inc
jle
cmp
jg
ret
mov
inc
mov
scas
adc
dec
cmp
mov
inc
sbb
adc
push
add
sahf
jecxz
ret
jmp
pop
ret
and
movs
je
inc
rol
sbb
cmp
pop
add
adc
fidiv
sbb
mov
jo
ss
adc
push
gs
jmp
ror
jmp
and
and
js
and
mov
imul
add
in
mov
push
loopne
jl
or
mov
add
pusha
in
paddq
mov
fcomp
pop
sbb
ja
mov
or
ret
scas
sub
inc
or
call
dec
repnz
xchg
mov
lock
sub
(bad)
dec
cld
jge
dec
xor
dec
loop
add
pop
mov
and
pop
add
dec
and
or
dec
jns
or
cld
jl
leave
fstp
in
mov
in
inc
and
std
xor
in
xchg
test
or
lods
or
ret
das
test
popa
cmp
in
xlat
or
xchg
dec
push
and
xor
xchg
add
or
fiadd
xor
push
(bad)
cwde
jbe
xor
mov
je
shl
retf
call
add
xor
das
fldcw
icebp
jne
pop
add
jecxz
xor
out
xchg
in
lods
jo
movs
pop
jmp
push
xor
jne
ins
pusha
add
arpl
dec
cmps
ja
aas
jb
in
in
sbb
mov
in
push
lods
add
or
mov
adc
ins
jmp
mov
ins
icebp
inc
sbb
xor
inc
sbb
inc
sbb
mov
jno
ins
or
or
mov
movs
je
loopne
sbb
je
(bad)
in
aad
add
lock
and
jb
fdivr
aaa
jmp
in
pop
xchg
out
imul
mov
and
push
enter
lea
mov
loopne
test
dec
jmp
jecxz
fadd
mov
dec
mov
add
lods
dec
stos
add
or
xchg
fisttp
(bad)
arpl
popa
repz
cmp
jo
rcl
adc
xor
sub
xlat
dec
jbe
or
mov
sbb
cmps
jge
sbb
es
std
adc
push
sbb
mov
mov
sti
jl
cdq
sub
push
enter
sbb
jne
addr16
inc
dec
outs
call
pop
and
shl
icebp
mov
add
loopne
xor
sbb
in
mov
and
mov
pop
pop
xor
jp
shl
(bad)
adc
fistp
mov
jg
mov
jp
add
pop
sbb
xor
leave
add
cmps
add
xchg
test
pop
and
push
jecxz
mov
test
ins
jg
out
pusha
sbb
test
in
lea
loopne
push
cmp
out
xchg
dec
popf
adc
cmp
jmp
in
cmp
retf
push
ficom
rol
sbb
sub
inc
xor
lods
push
into
xor
add
fild
add
fmul
mov
ins
lods
fucom
jno
je
xor
sti
sub
pop
jmp
sub
xchg
arpl
popa
les
sub
retf
adc
(bad)
sbb
dec
cld
and
add
out
nop
mov
into
jmp
add
icebp
pusha
leave
fs
(bad)
mov
mov
das
cmp
ja
dec
mov
mov
sub
dec
aas
jmp
dec
adc
test
jns
xchg
and
scas
add
cmps
xchg
xchg
xchg
ins
inc
fadd
cmp
adc
or
add
inc
fidivr
mov
push
call
jo
cmp
xchg
or
jbe
and
mov
xor
sub
and
cmp
enter
push
add
adc
push
dec
jbe
or
aaa
es
add
jno
int
pop
mov
cld
stos
jmp
and
ret
cdq
and
sub
rol
fsubrp
(bad)
fnstsw
push
test
iret
xchg
mov
daa
pop
imul
add
mov
add
loopne
push
jge
inc
and
mov
cvtps2pd
pop
pop
nop
jmp
sub
rol
xlat
ja
ror
cdq
or
daa
adc
adc
fiadd
adc
movs
jge
push
and
in
out
das
pop
test
cli
scas
push
xchg
add
adc
lock
fisubr
fcmovb
fmul
out
sub
ss
test
pop
jbe
icebp
mov
shl
push
add
mov
or
xor
in
dec
xchg
in
push
inc
xchg
mov
jg
add
cmp
adc
ins
mov
jno
xchg
fmul
jmp
cmp
ror
xchg
addr16
imul
inc
adc
fst
cmp
dec
dec
mov
sbb
loopne
and
add
mul
jne
cs
movs
pop
and
lods
inc
sub
adc
test
rcl
and
jno
mov
adc
mov
movs
loop
cwde
dec
add
in
add
xor
mov
cmp
fsub
push
add
sbb
xor
dec
sbb
ins
leave
popa
shr
add
push
loop
push
cmp
jbe
lods
pop
mov
jo
or
nop
or
sub
mov
popa
mov
and
popa
sub
shr
fsub
cld
inc
add
jmp
jl
mov
mov
jmp
jmp
(bad)
loope
jb
(bad)
adc
add
add
add
retf
(bad)
cmp
daa
xor
inc
inc
xor
mov
add
cmp
mov
and
xor
pop
cli
sub
nop
pop
and
loopne
or
test
scas
pop
rcl
js
inc
or
in
cli
or
aad
frstor
add
mov
sbb
dec
cmp
loope
leave
push
dec
leave
cld
pop
lock
fisubr
and
lahf
stc
dec
or
mov
leave
sub
or
cmp
fcmovnb
loop
pop
add
dec
hlt
adc
mov
in
xor
repnz
push
sbb
test
mov
push
js
or
stos
add
push
movs
mov
test
repnz
push
adc
sub
pop
dec
jno
stos
sub
dec
rcr
fscale
shl
add
fucomip
xor
jo
in
test
add
in
lahf
rcl
inc
jge
inc
nop
push
and
inc
aad
or
out
shl
pop
or
and
sbb
jae
(bad)
and
movs
and
pop
adc
or
mov
and
je
inc
jmp
push
sti
hlt
pop
or
xor
push
sub
jge
mov
rol
pusha
loopne
hlt
and
iret
pop
popa
sbb
cmc
mov
add
js
addr16
clc
inc
ret
nop
or
mov
push
cmp
push
pop
mov
out
clc
or
mov
add
sti
in
add
dec
loopne
outs
rol
pop
add
or
jo
add
retf
scas
xor
daa
xchg
das
clc
cmp
outs
push
jg
sar
mov
or
clc
js
inc
jb
lods
jnp
or
mov
add
ss
mov
imul
fmul
push
jmp
add
add
mov
inc
mov
inc
mov
ja
pop
out
jle
(bad)
cdq
not
test
add
addr16
int3
jl
and
lahf
add
inc
and
cmp
pop
mov
rcr
sbb
dec
ins
(bad)
imul
jne
nop
jmp
pop
loopne
or
mov
out
adc
dec
std
dec
mov
clc
cmp
jne
pusha
or
movs
call
jle
xor
out
jbe
shr
sbb
inc
(bad)
loop
or
adc
sbb
call
in
adc
add
mov
or
push
sbb
shl
test
repz
or
mov
jmp
inc
(bad)
aam
push
push
mov
sub
jns
push
mov
pop
into
mov
jl
test
sbb
xchg
xchg
or
cmp
adc
in
(bad)
dec
loope
mov
or
movs
add
lock
sub
mov
movs
les
jns
adc
adc
les
call
dec
test
pusha
jo
scas
hlt
pop
rol
cmp
xor
sub
cwde
and
out
add
pop
and
mov
inc
sub
sub
inc
cmp
add
setl
mov
sti
ins
mov
push
les
test
push
push
sub
add
sub
mov
pop
inc
mov
add
sub
xchg
cmps
xor
mov
(bad)
sub
clc
ror
mov
sti
sbb
add
retf
add
call
mov
stc
pop
rcl
je
ja
lea
mov
or
shl
push
vaddps
push
add
and
arpl
div
hlt
cmp
jle
xchg
xchg
adc
mov
sub
jge
dec
nop
cld
or
sbb
bnd
mov
pop
cs
ins
int3
cmp
xor
jne
movs
shl
and
dec
hlt
pusha
xor
and
in
cld
pmulhuw
test
mov
xchg
inc
jb
mov
mov
xchg
pop
mov
std
cmc
mov
je
add
cmp
loopne
mov
and
mov
add
add
imul
xchg
sub
nop
add
fwait
test
xchg
push
mov
pop
sub
pop
add
xchg
xor
in
ret
or
add
pop
(bad)
mov
adc
arpl
outs
cwde
add
das
mov
add
dec
div
mov
imul
pop
jb
popa
js
pop
and
adc
dec
push
jo
and
pop
add
or
mov
jne
xor
pop
adc
leave
pushf
test
mov
pop
jb
ss
add
dec
pop
xchg
add
and
sub
add
adc
test
mov
cmc
test
push
push
sub
push
mov
jnp
cli
std
stc
rol
lods
dec
ins
loopne
adc
das
pop
jge
fs
inc
mov
mov
sbb
call
or
sub
or
gs
add
rcl
or
lods
popf
rcl
pop
dec
sbb
sub
xor
or
sub
or
pavgb
add
pusha
orps
push
add
bound
mov
in
mov
and
xor
jp
retf
mov
lock
add
loope
or
jo
add
cmps
dec
retf
and
mov
outs
push
sahf
iret
jne
mov
pop
aaa
xchg
or
in
test
inc
pop
stos
xor
(bad)
fsub
add
mov
add
add
inc
pop
mov
movs
dec
xchg
mov
(bad)
xchg
dec
jno
xchg
dec
inc
inc
popa
add
cmp
popf
call
not
xchg
dec
pop
imul
cmp
jbe
movzx
dec
sbb
sbb
enter
xchg
call
push
jmp
push
stc
inc
cmp
mov
jns
call
call
xchg
daa
mov
pop
int3
and
clc
sbb
push
pop
jnp
jl
dec
mov
push
xor
repnz
pop
aam
cmp
leave
mov
test
(bad)
dec
sbb
outs
inc
xor
cmp
xor
add
xor
and
icebp
mov
jle
inc
ret
pop
pusha
repnz
add
js
adc
stos
cld
test
push
or
jl
xchg
add
ja
outs
mov
cmp
shl
pusha
or
test
into
pop
(bad)
pop
adc
pop
mov
push
ss
or
xor
inc
cmps
rcl
mov
add
sub
sbb
dec
and
adc
xchg
sub
mov
ror
shl
outs
(bad)
or
fsub
or
or
dec
xor
loop
aam
inc
jmp
adc
test
cmps
jno
push
neg
ret
fisubr
pop
push
ret
add
sub
jmp
mov
cmps
push
sub
push
add
loopne
pop
sub
int3
cld
cs
push
in
rcl
and
sbb
sub
rcr
sub
sbb
lods
or
push
push
sub
xchg
add
inc
sbb
pop
cmp
dec
jg
popf
pop
push
adc
jl
inc
mov
or
(bad)
inc
inc
add
pop
mov
in
xchg
and
push
or
jbe
mov
jne
mov
add
pop
mov
and
out
adc
xor
push
sahf
pop
or
pop
fild
fidiv
dec
mov
je
loopne
and
ret
jne
inc
adc
fs
add
sub
inc
or
ret
je
adc
popa
mov
shl
jp
imul
daa
cs
adc
jnp
js
inc
loopne
or
mov
and
and
cmps
dec
int3
mov
add
ret
call
pop
lds
and
add
xchg
mov
ror
je
add
add
and
ja
jbe
xor
push
cmp
ins
pop
xchg
popf
or
loopne
cmp
xor
push
push
and
in
pop
mov
xor
xor
nop
inc
aaa
add
repnz
dec
outs
push
add
dec
fidiv
push
pop
pop
cs
and
push
pop
ds
sub
and
ins
enter
or
and
outs
in
dec
sti
nop
cmp
out
push
loopne
add
push
or
and
bound
or
or
sti
add
shl
or
mov
push
push
in
test
add
sbb
fdivr
test
shl
lds
mov
cmp
pop
test
sbb
sub
dec
out
lock
int
loopne
test
pop
dec
xor
or
loopne
and
cs
stc
out
add
mov
push
xchg
inc
test
sub
aad
inc
imul
lock
js
rol
shl
cmps
pop
es
loope
lods
dec
sti
or
add
xchg
jmp
das
inc
mov
xor
pop
cmp
cli
add
adc
add
loop
dec
fbld
or
mov
add
mov
rol
mov
inc
xor
mov
imul
sub
pop
imul
pop
jecxz
push
push
shl
inc
stos
loopne
inc
xor
sbb
cs
lahf
sbb
cmp
and
push
popf
or
inc
push
test
mov
add
cmps
nop
pop
in
adc
or
enter
or
repnz
inc
into
xchg
push
in
sub
mov
pop
or
les
mov
xchg
sub
add
xchg
jns
nop
daa
in
pop
dec
jb
add
pop
dec
mov
mov
jns
mov
xchg
adc
jl
xor
inc
push
js
cmp
enter
movs
imul
nop
into
daa
push
daa
sbb
test
daa
ins
pop
dec
jl
(bad)
sub
out
sbb
push
mov
or
fstp
cmps
ja
or
mov
inc
push
and
push
and
clc
inc
push
or
mov
adc
dec
pop
daa
sub
inc
mov
push
nop
out
int3
adc
pop
rol
cmps
adc
add
sub
call
mov
or
and
shl
inc
mov
adc
inc
xor
popf
sbb
mov
enter
adc
push
mov
cmp
cdq
sbb
test
xor
jge
clc
sbb
pop
(bad)
add
jmp
or
std
xor
inc
pop
cdq
je
jmp
hlt
fsubr
push
jo
aaa
sub
sbb
and
pop
stos
mov
add
add
dec
adc
jge
add
sub
dec
icebp
xor
arpl
daa
mov
sub
adc
adc
jne
inc
aam
push
cmp
jo
test
daa
pop
cmp
lock
nop
imul
and
fwait
add
mov
or
and
dec
pop
mov
mov
imul
test
dec
xchg
xchg
cmp
xchg
mov
pop
mov
or
xchg
and
xlat
push
jb
jbe
fbstp
sbb
imul
add
add
adc
ins
add
outs
adc
jge
retf
jae
sbb
popa
sub
mov
pop
mov
mov
add
sub
fadd
pop
push
sub
in
dec
fdiv
je
sbb
cmp
cli
pop
shr
fisttp
push
mov
mov
(bad)
out
pop
pop
jmp
mov
sub
sub
add
das
dec
xor
mov
in
out
or
cmp
fisub
xor
test
pop
movs
cmc
inc
stos
dec
xchg
pop
xor
imul
and
push
cmps
cmp
je
dec
or
pop
(bad)
ror
adc
add
jae
dec
mov
sahf
cmp
mov
or
cli
call
and
dec
sbb
jno
inc
jecxz
dec
inc
test
lock
push
test
rol
loop
mov
mov
push
adc
fiadd
add
in
add
sbb
inc
jne
push
mov
xchg
sub
out
aaa
or
rcr
or
mov
xor
fbld
imul
pinsrw
add
cmp
pop
add
test
sbb
in
and
cmp
push
mov
push
adc
int3
rol
sbb
push
sbb
ss
int3
mov
fidivr
sub
(bad)
int3
push
cmp
or
xor
lods
add
cwde
mov
add
xor
or
add
retf
inc
xchg
dec
test
xchg
dec
add
inc
in
adc
add
push
sub
or
or
retf
gs
inc
out
xchg
(bad)
xor
or
push
pop
pop
dec
ds
jae
(bad)
sbb
cmps
je
dec
call
mov
sahf
je
ss
loope
mov
pop
inc
loope
inc
push
cs
push
mov
cs
clc
mov
or
lea
mov
sbb
out
test
lds
sahf
mov
adc
dec
or
xor
pop
ins
mov
jle
cwde
nop
mov
push
mul
adc
adc
mov
xor
ret
je
dec
mov
mov
cmps
adc
sar
mov
test
pop
add
jnp
or
cs
sub
cmp
xor
inc
inc
pushf
or
xchg
das
aad
sbb
or
lock
mov
arpl
inc
sbb
add
adc
and
sbb
fidiv
add
mov
bound
std
ror
add
sub
dec
push
mov
inc
xor
dec
or
and
adc
je
ins
shl
(bad)
call
daa
rdtsc
cmp
pop
sar
shl
nop
pop
adc
sahf
movs
inc
add
sub
adc
js
add
mov
outs
jns
je
sub
adc
adc
cmp
sbb
xchg
jl
and
test
in
clc
push
xor
mov
adc
xor
sbb
and
rcr
sbb
arpl
jne
lahf
inc
lock
sub
sub
pusha
or
imul
int3
mov
outs
stc
pop
inc
cmp
or
sub
dec
adc
mov
and
in
loopne
adc
seta
xor
push
jmp
push
push
call
nop
cmp
daa
fstp
leave
or
daa
bound
mov
or
cs
dec
dec
call
jmp
dec
sbb
xchg
jne
fcom
dec
(bad)
jle
js
call
or
cmp
add
mov
push
mov
icebp
shr
inc
push
ret
(bad)
fst
sub
leave
or
push
xor
movs
dec
dec
inc
ins
pusha
imul
into
ret
(bad)
in
retf
push
clc
mov
out
div
push
cmp
retf
and
les
mov
cmp
std
inc
mov
adc
(bad)
mov
inc
adc
(bad)
outs
rcl
pusha
fnstsw
je
stos
add
mov
mov
adc
jo
nop
ret
or
lods
adc
jbe
cdq
pop
and
and
xchg
sub
sbb
lods
xchg
cmp
xor
mov
mov
lods
inc
sub
mov
cmp
cmp
pop
cmp
mov
cmp
cld
push
mov
or
sbb
lods
xchg
add
enter
(bad)
pop
shl
popa
mov
shr
cld
push
dec
and
xchg
pop
movs
ja
and
mov
and
not
or
loopne
xor
add
mov
dec
lahf
mov
pushf
pushf
fmul
rol
in
push
ds
adc
dec
lods
ret
loope
fimul
xor
lahf
adc
or
or
dec
sbb
xor
cmp
or
mov
and
dec
adc
mov
or
xchg
xor
or
scas
div
push
fild
sub
rol
sub
xchg
mov
rol
retf
sbb
dec
push
push
mov
push
mov
mov
mov
push
jge
les
mov
nop
test
sbb
add
and
push
jmp
adc
js
cmp
pop
test
push
sbb
sub
adc
lock
jp
cmp
adc
data16
mov
clc
adc
or
push
cmp
mov
adc
or
adc
icebp
inc
fsubr
mov
mov
adc
mov
sub
inc
pop
xchg
(bad)
pop
lock
fmul
adc
and
bound
cwde
mov
jne
movs
dec
fisttp
in
inc
das
data16
jmp
inc
push
xlat
sub
xor
or
dec
xor
mov
or
sub
dec
dec
daa
mov
jmp
nop
pop
lods
push
dec
xchg
nop
or
das
push
pop
les
add
icebp
xchg
mov
adc
fdivr
or
popa
fisttp
lea
pop
cs
sbb
mov
fwait
cmp
pop
data16
xor
mov
loop
cld
jge
ins
ror
or
mov
jnp
mov
jmp
sbb
cmp
pop
mov
mov
hlt
jb
or
in
xor
out
adc
hlt
in
sbb
push
mov
or
add
inc
shr
xchg
and
nop
mov
cmp
ins
pusha
es
push
add
pop
ja
call
cmps
fwait
sbb
cmp
pop
push
movs
lahf
daa
xchg
sub
pop
pop
pop
mul
jbe
and
not
int3
loope
mov
lea
inc
mov
out
mov
jle
es
aam
bound
(bad)
leave
push
xchg
add
shr
loopne
fbld
call
adc
stc
in
out
pushf
aaa
jmp
cmc
aaa
mov
les
mov
fadd
xchg
shr
ret
and
xchg
int3
popf
les
and
inc
push
xchg
sub
inc
or
push
loopne
ret
pop
push
jo
xor
mov
dec
xor
js
adc
dec
nop
inc
cmp
mov
inc
xor
sub
in
fild
cld
sbb
aad
sbb
call
cld
xchg
mov
or
jge
int3
xchg
fsubr
xchg
sbb
mov
mov
div
xchg
scas
mul
mov
sbb
cmc
mov
xchg
arpl
xchg
arpl
push
adc
retf
in
push
hlt
in
clc
lock
mov
cmp
popa
in
mov
mov
cmps
cmp
test
and
in
jne
idiv
mov
leave
pusha
imul
mov
xor
dec
mov
pop
repnz
inc
popf
sub
movs
sub
cld
sub
rol
add
not
jns
test
xor
pop
(bad)
sub
ret
scas
add
add
std
in
mov
sub
or
jl
or
sysenter
or
mov
xchg
inc
and
jl
xchg
inc
movs
adc
mov
js
adc
aas
inc
sub
jno
pop
xchg
popa
mov
pop
sbb
aas
sub
lds
xchg
pop
sub
mov
rcl
cs
pop
mov
push
inc
clc
mov
mov
push
inc
rcl
imul
clc
xor
(bad)
pop
pop
adc
push
sub
fmul
dec
push
cmp
xor
xchg
sbb
pop
xor
cmc
bound
mov
(bad)
dec
mov
xor
pop
and
push
push
jb
mov
(bad)
xchg
adc
pop
xlat
int3
and
or
or
test
mov
sbb
(bad)
call
pop
or
mov
outs
mov
outs
xchg
pop
shr
and
mov
and
cmps
pop
cli
sbb
push
test
add
repnz
(bad)
es
push
jg
xor
adc
loopne
or
retf
mov
xchg
sbb
adc
dec
pop
and
inc
and
add
inc
sbb
neg
sub
ror
push
xor
push
xor
in
push
pop
push
inc
cmps
pop
mov
sub
cmp
add
pop
inc
aas
add
xchg
and
sbb
mov
inc
daa
scas
jbe
xor
mov
das
or
adc
jl
lods
xchg
add
fadd
and
pop
cli
jns
pusha
push
sub
imul
mov
mov
test
jl
jns
jmp
inc
hlt
mov
dec
cmp
int
inc
lock
xor
in
and
dec
in
call
repnz
xor
jge
jo
push
fnsave
clc
push
xchg
popf
push
add
ret
xor
mov
add
cmp
mov
and
rcl
rol
sbb
test
jbe
test
jno
jbe
std
sahf
and
push
xchg
test
add
retf
fimul
lods
mov
push
mov
mov
mov
push
sbb
add
inc
pop
sub
sub
cwde
(bad)
(bad)
(bad)
std
xchg
fdivr
mov
or
(bad)
push
sbb
xlat
out
or
or
dec
rol
add
scas
mov
sub
es
shr
sbb
gs
cmp
mov
or
adc
pusha
or
dec
repz
mov
jmp
sub
test
sub
push
adc
mov
imul
mov
sub
pop
cdq
dec
add
xchg
mov
adc
loopne
sub
mov
sub
jns
sbb
int
ret
inc
test
or
or
jge
jecxz
retf
push
add
iret
repz
popf
ret
out
pcmpgtb
es
cmp
pop
lds
or
cmps
mov
out
hlt
clc
stc
aad
dec
cmp
loopne
mov
push
loopne
fsub
ds
dec
push
fsub
iret
jno
fadd
push
aam
and
sbb
jnp
scas
push
sbb
push
mov
xor
inc
repnz
cwde
cs
push
mov
hlt
xor
inc
sub
push
and
es
add
sbb
xor
cmps
js
sbb
mov
jmp
sub
nop
add
inc
sub
dec
test
les
inc
cmp
dec
setge
add
pushf
(bad)
scas
rol
push
pop
imul
sti
sbb
dec
or
mov
out
int3
sbb
sbb
ins
xchg
nop
xchg
adc
or
push
cmp
add
test
aad
hlt
pop
xor
sbb
in
sbb
shl
cmps
call
adc
push
xchg
inc
cwde
outs
es
scas
clc
push
fs
ins
mov
test
sbb
dec
add
pop
xor
pop
(bad)
repnz
add
bound
add
test
fld
cmp
out
xchg
sbb
cld
mov
push
mov
mov
sbb
mov
push
loopne
loop
nop
movs
and
or
xor
inc
lahf
cli
sbb
ror
scas
aam
and
dec
sub
rol
(bad)
jge
and
mov
push
fidivr
add
xchg
retf
push
dec
and
test
movs
adc
xlat
xor
cmp
add
les
jne
gs
pop
sbb
adc
jo
or
adc
pop
adc
clc
pop
jb
add
xchg
push
add
cmp
and
or
aaa
(bad)
push
test
stc
invlpg
jne
cmp
jne
or
cmp
jmp
mov
add
test
call
mov
or
popf
hlt
daa
icebp
sub
xchg
mov
wbinvd
xchg
add
jnp
xchg
mov
xor
cmp
push
xchg
nop
xor
shl
mov
adc
jo
sbb
popf
cmp
jbe
jno
bound
es
hlt
and
jae
(bad)
xor
xchg
push
test
in
xor
stos
add
cmp
and
arpl
push
pavgw
cmp
add
xchg
dec
cs
xlat
fmul
add
cmc
inc
fist
inc
mov
pop
adc
movs
hlt
loope
mov
sbb
mov
shl
cwde
pop
lock
les
lock
dec
jge
add
pushf
ss
mov
sar
test
cmp
mov
add
in
mov
neg
cs
out
aas
push
cmps
push
int3
push
repnz
mov
repz
sbb
push
xchg
ins
inc
das
jmp
dec
dec
rol
stos
les
repnz
hlt
int3
inc
stos
inc
mov
int3
dec
enter
cmp
shr
inc
in
add
sar
mov
mov
hlt
sub
or
add
cmp
das
or
adc
js
cmp
adc
or
pop
test
ins
push
js
aas
mov
int
daa
add
inc
pop
mov
leave
adc
sub
loopne
xchg
sbb
sub
push
adc
test
sub
shr
sbb
sbb
enter
dec
out
in
movs
cmp
lods
xchg
cmp
dec
retf
movs
inc
xor
ficom
nop
jns
movs
jmp
xchg
dec
xchg
mov
int3
inc
lock
mov
cld
dec
jl
add
push
js
hlt
mov
sbb
pop
cmp
ret
pop
or
sub
add
mov
dec
ss
and
adc
cmp
mov
sbb
dec
mov
or
mov
rol
adc
cmp
mov
je
test
popf
add
fild
pusha
jmp
pop
inc
cmp
repz
imul
test
xor
loopne
mov
fdiv
jo
sub
fmul
icebp
loopne
push
xor
dec
aam
shl
fs
shl
jne
pop
leave
ror
xor
and
enter
add
(bad)
rol
enter
out
adc
inc
push
or
pop
adc
push
jo
scas
ins
scas
mov
dec
mov
xor
adc
dec
enter
repnz
aad
leave
mov
dec
enter
clc
mov
bound
xchg
mov
jp
out
mov
jb
adc
cmp
add
std
inc
mov
add
leave
jp
shl
sub
mov
jb
sub
push
ficomp
sub
or
adc
adc
add
jae
js
fs
(bad)
xchg
lods
xchg
jmp
call
cmp
ss
(bad)
shl
popa
loope
dec
mov
int3
inc
inc
stos
test
test
in
dec
mov
cmp
shl
mov
in
push
or
fadd
dec
enter
int
movs
inc
add
and
push
(bad)
sub
mov
mov
dec
sub
and
cmp
or
push
xchg
and
or
sbb
inc
mov
iret
jnp
sbb
mov
push
outs
push
xchg
push
mov
jns
pop
sub
rcr
mov
mov
mov
rcr
retf
push
dec
ror
ins
aad
ror
add
mov
dec
ror
mov
mov
add
sub
cmp
mov
and
mov
leave
push
sub
cli
add
call
jcxz
add
daa
or
sub
xor
movs
xlat
jl
pop
repnz
adc
pop
loopne
adc
add
add
push
cmp
push
mov
dec
hlt
repz
sahf
mov
and
mov
cld
mov
clc
(bad)
leave
sub
or
movs
fmul
and
out
xchg
(bad)
pushf
adc
mov
dec
sub
sbb
enter
dec
nop
sbb
jmp
rcr
sbb
dec
dec
or
and
mov
add
sub
jns
pusha
dec
sbb
inc
dec
add
aaa
inc
cmp
add
(bad)
dec
ds
xor
sub
test
push
add
ret
jg
ret
dec
add
add
and
loopne
jmp
mov
in
and
inc
rcr
pop
call
fs
js
call
xor
or
dec
inc
jge
test
mov
imul
push
sbb
and
bound
cmp
pop
add
mov
(bad)
sbb
jmp
push
dec
and
movs
adc
out
xchg
outs
inc
sbb
imul
stc
or
xchg
and
mov
jp
add
add
pop
mov
xchg
and
addr16
je
add
ins
lock
ret
mov
sub
mov
inc
arpl
push
hlt
lock
dec
lock
or
out
add
and
dec
add
inc
adc
mov
xchg
push
(bad)
jmp
and
or
adc
inc
(bad)
cld
fstp
adc
lock
push
aaa
dec
sub
sub
rcr
and
hlt
mov
xchg
add
pusha
mov
test
js
cmps
and
orps
ins
xor
aad
push
(bad)
js
jmp
and
or
sbb
loopne
pop
add
ret
mov
adc
scas
jg
add
inc
xor
enter
sbb
in
imul
cmps
jns
add
(bad)
fcom
push
mov
lock
aam
add
push
sub
mov
add
and
and
and
and
not
push
enter
ins
or
push
dec
ret
add
push
pop
(bad)
repnz
or
sub
(bad)
(bad)
mov
push
dec
or
add
push
(bad)
fidiv
or
sub
test
and
dec
push
stos
xor
adc
pop
cmps
inc
addr16
in
test
sub
movs
loope
out
movs
or
sbb
sbb
jo
lods
shl
sar
cmp
sub
mov
(bad)
call
(bad)
out
adc
test
movs
and
movs
icebp
xchg
rcr
adc
stos
sub
fild
sub
adc
mov
ret
test
fisubr
mov
mov
jmp
test
mov
sbb
ror
mov
dec
pop
mov
call
mov
adc
or
stos
imul
push
add
inc
ss
mov
retf
cdq
outs
mov
out
(bad)
adc
aam
outs
xchg
inc
xlat
stos
xor
movs
imul
xchg
cmp
daa
and
movs
cmp
xchg
jmp
in
repnz
lock
or
cli
cld
clc
cs
gs
push
movs
clc
push
rcr
dec
movzx
shl
ja
sub
push
push
adc
jge
xor
dec
inc
mov
add
push
push
inc
lahf
mov
jne
in
in
mov
cs
jmp
es
(bad)
xchg
push
or
imul
mov
movs
pop
jle
ror
mov
(bad)
push
cmp
mov
and
xchg
sbb
daa
addr16
imul
sub
imul
and
dec
leave
inc
ins
adc
mov
out
rol
sbb
repz
in
inc
pop
lock
cli
nop
or
fst
xor
and
and
xor
mov
pop
movs
cmp
(bad)
xor
and
xor
out
clc
es
dec
adc
push
sbb
pop
mov
sahf
call
outs
dec
clc
adc
ret
imul
xchg
pop
push
rol
hlt
icebp
lahf
cli
inc
mov
add
inc
outs
add
xchg
xchg
mov
or
ror
lock
popa
dec
pop
jle
out
nop
fst
add
shr
inc
mov
add
cmp
pop
mov
xchg
mov
js
push
and
sub
pop
pop
mov
std
push
jne
push
nop
or
mov
fbld
push
jbe
push
add
or
jge
sub
sbb
jmp
daa
mov
xchg
cmp
stos
mov
ss
jae
test
push
sbb
daa
xor
jb
sub
add
(bad)
mov
jnp
(bad)
shr
pop
cmp
lgs
dec
or
or
inc
push
jb
mov
call
inc
add
sub
inc
or
jp
add
inc
or
call
dec
sahf
xchg
ficom
daa
dec
pop
das
cmp
mov
int3
mov
and
outs
jmp
shl
ror
enter
pop
aam
pop
mov
sub
add
pop
push
mov
xchg
xchg
or
sar
into
loopne
in
push
xor
dec
push
in
mov
rol
push
dec
pop
enter
add
mov
or
bound
or
xlat
or
ret
or
mov
inc
pop
or
sbb
enter
and
pop
out
mov
jecxz
or
inc
ss
les
fcom
jg
mov
cdq
mov
cmp
xchg
pop
enter
pop
lahf
sbb
pop
fcom
outs
fmul
adc
sub
pop
inc
add
or
pushf
sbb
clc
dec
dec
sbb
nop
sbb
loopne
pusha
loopne
mov
mov
popa
pop
hlt
sub
adc
lock
dec
push
popa
(bad)
jns
test
inc
mov
js
icebp
mov
pop
xor
out
pop
xor
pusha
mov
dec
adc
add
movs
adc
adc
mov
add
in
mov
fldenv
ja
fldenv
das
inc
jb
loopne
in
bound
jbe
and
arpl
ins
push
add
fs
push
adc
push
push
mov
add
aaa
jo
push
add
ja
rol
mov
or
sbb
popa
dec
and
xlat
pop
cmp
xor
pop
sbb
jp
xlat
sbb
fs
xor
push
outs
dec
push
push
and
(bad)
mov
nop
add
data16
mov
sbb
aas
outs
pop
inc
or
dec
cmp
arpl
jbe
adc
dec
push
add
add
inc
enter
sbb
add
add
add
push
mov
cdq
pop
xchg
bound
mov
mov
mov
(bad)
clc
pop
in
mov
add
ja
xor
add
or
sub
or
push
pop
sub
mov
call
inc
add
inc
adc
ins
(bad)
(bad)
adc
adc
or
and
sbb
out
(bad)
ja
cmp
clc
jo
nop
pop
mov
cmp
cmp
cld
dec
js
scas
test
mov
sub
(bad)
push
mov
aas
pop
test
imul
ja
push
pop
cmps
mov
loop
pop
mov
cmp
and
adc
jns
dec
xor
xchg
push
adc
in
out
or
jo
push
add
je
lock
leave
dec
in
rol
push
lds
imul
fwait
div
or
test
mov
pop
ins
cmc
add
push
enter
inc
xor
lods
add
mov
mov
push
ja
sub
xchg
fs
mov
mov
xchg
mov
jns
adc
loopne
dec
sbb
call
mov
mov
aaa
dec
push
aaa
in
and
adc
aas
xchg
nop
push
xor
and
cmp
jne
loop
inc
inc
cmp
pushw
adc
test
pushf
jns
cmp
jne
fxtract
es
add
(bad)
in
pop
and
adc
cmp
jne
dec
push
add
add
sbb
sti
in
inc
adc
rol
mov
mov
ins
cld
or
cli
(bad)
movs
jns
add
rol
or
jmp
and
jmp
js
inc
add
inc
xchg
mov
stos
fiadd
and
cmp
cld
cmp
inc
loope
mov
or
mul
or
ret
mov
jecxz
sbb
jno
jmp
sub
lock
outs
fsubr
add
push
or
pop
(bad)
pushf
sub
lock
punpckhbw
cmp
ds
push
xor
outs
ss
jg
jb
sub
adc
add
mov
mov
sbb
sbb
and
and
or
adc
dec
inc
dec
call
arpl
(bad)
or
ins
call
sbb
pop
stos
rcl
or
pop
ret
and
dec
outs
adc
add
test
pop
jae
fbld
pusha
lods
pop
and
les
shl
and
or
xor
cmp
inc
adc
jge
and
add
jle
push
jae
jl
jp
add
mov
mov
das
xor
scas
pop
sbb
outs
lock
and
sub
pop
test
mov
aaa
cli
(bad)
adc
leave
retf
mov
ret
dec
push
js
add
lods
inc
jb
push
dec
inc
out
adc
enter
add
sbb
jbe
dec
cli
jns
inc
and
lock
xlat
lock
and
or
mov
in
cmp
inc
pop
sar
sbb
push
(bad)
popa
xlat
xor
out
and
and
shl
mov
pop
sbb
xchg
push
cmova
dec
cmps
idiv
paddb
mul
or
stc
sub
jae
imul
cmps
mov
mov
pop
and
xor
shl
sub
in
dec
pop
sbb
cmp
je
das
mov
or
adc
inc
popa
sub
(bad)
xchg
mov
ins
imul
and
adc
push
jp
pop
xor
jae
or
inc
sbb
mov
mov
add
mov
sub
jg
or
cmp
xor
xchg
xor
addr16
sub
repz
jno
ror
inc
loopne
jno
or
aaa
outs
nop
(bad)
cmp
push
imul
push
nop
adc
adc
clc
fwait
out
or
mov
mov
fcmovbe
mov
push
adc
and
and
es
imul
sub
xor
imul
cmp
inc
inc
or
dec
sbb
mov
dec
pop
and
jb
or
scas
rcl
loopne
test
es
push
jbe
mov
arpl
shl
adc
and
adc
jo
push
jle
popa
cwde
or
stos
iret
sbb
movs
adc
mov
or
and
add
and
sbb
clts
push
cmc
stc
pop
or
adc
leave
xor
inc
adc
and
add
mov
ins
adc
cmp
loopne
sbb
sbb
and
adc
arpl
and
je
add
je
in
test
daa
lock
xchg
in
arpl
sti
movs
cmp
push
stc
arpl
in
and
ret
mov
add
vpunpckhbw
in
dec
pop
mov
ret
loopne
jecxz
dec
adc
or
int3
adc
mov
push
enter
add
xor
adc
and
cli
(bad)
pop
enter
add
xor
cmp
hlt
enter
ret
mov
dec
les
adc
adc
out
leave
dec
dec
in
mov
lods
mov
mov
mov
fadd
mov
and
dec
add
or
popf
imul
push
ja
sbb
scas
mov
add
mov
xor
jmp
xchg
ret
test
jb
clc
mov
inc
or
mov
pop
jg
push
adc
movs
cs
ins
movs
fdiv
jg
fstp
fwait
das
ins
cwde
out
lds
data16
push
mov
sbb
push
push
push
or
pop
xchg
nop
dec
nop
nop
cmps
(bad)
pop
pop
hlt
mov
xchg
xchg
and
pop
aam
fcomp
add
int3
pop
retf
sbb
sbb
inc
push
mov
xchg
or
mov
or
test
hlt
fwait
push
out
pop
and
loopne
jo
outs
in
enter
pop
xchg
in
mov
ror
pop
imul
dec
lea
add
adc
xchg
or
pop
aad
cmp
mov
jecxz
pop
cmp
mov
sahf
sub
mov
cmps
lea
sbb
inc
xchg
je
(bad)
sti
adc
shl
inc
movs
pop
pop
lea
cmp
lea
add
adc
bound
scas
cmp
ret
push
enter
ja
push
push
shr
ffreep
xor
xor
(bad)
or
ret
xor
test
pop
xchg
or
dec
adc
xchg
repnz
inc
push
cmp
jbe
fiadd
cs
jecxz
test
mov
add
outs
pop
dec
dec
cmp
imul
push
dec
cmp
adc
or
je
dec
dec
dec
pop
inc
xlat
mov
dec
push
test
mov
call
jp
cmp
js
pop
movs
cdq
cli
(bad)
push
xlat
xchg
and
arpl
mov
mov
sbb
push
ret
sbb
sub
cmc
(bad)
sub
fwait
inc
mov
adc
sub
(bad)
or
mov
cmp
xor
push
(bad)
std
adc
bound
nop
add
or
daa
nop
adc
dec
mov
mov
cmc
das
mov
xor
or
aaa
sbb
cmp
dec
inc
pop
inc
hlt
sbb
dec
push
ror
mov
fimul
das
pop
inc
dec
add
fwait
jmp
add
jmp
fnstenv
mov
mov
(bad)
ja
add
fcomp
cmp
mov
pop
add
fdivr
mov
pop
jecxz
jns
xor
test
out
cmp
and
sub
and
ficomp
jno
or
and
and
jb
ins
cmp
xor
xor
xchg
mov
rcl
adc
daa
or
adc
inc
movs
push
push
xor
gs
and
add
pop
scas
jnp
dec
lock
sbb
test
mov
scas
push
lea
scas
inc
push
pop
xlat
fs
das
add
shr
das
xor
or
fld
xchg
or
cmps
jmp
mov
ja
ret
push
inc
add
pushf
std
ins
and
and
or
xchg
dec
nop
ror
adc
cmp
popf
adc
test
sub
outs
or
xchg
inc
push
test
sub
div
push
sbb
aam
inc
sbb
or
in
movs
mov
pop
hlt
and
sbb
bound
jg
ins
inc
adc
shr
and
add
xor
push
mov
stc
sub
sar
xor
sub
xor
jo
(bad)
sbb
sub
mov
in
mov
or
clc
rol
add
test
or
pusha
jg
mov
lods
push
xlat
or
pop
cmp
mov
or
dec
cmps
adc
ret
inc
dec
jo
std
inc
les
sete
rol
dec
and
cwde
adc
and
mov
(bad)
sub
xchg
ins
nop
daa
test
xor
hlt
popa
imul
(bad)
out
mov
outs
xor
cmp
cld
ds
lods
mov
sti
pop
adc
sbb
inc
sub
sub
and
cmp
cmp
inc
mov
xchg
sub
fadd
push
(bad)
iret
cld
call
xchg
les
adc
sub
mov
mov
inc
enter
cmp
imul
sub
clc
inc
test
xor
mov
clc
lock
das
inc
or
push
nop
out
cmp
cmp
push
cmp
dec
(bad)
pop
add
loopne
jae
enter
inc
sbb
push
xchg
sub
in
add
lea
dec
enter
inc
mov
cmps
push
xchg
and
cmp
add
mov
iret
inc
push
inc
or
adc
inc
daa
cdq
inc
mov
inc
cmp
mov
in
and
or
xor
xor
pop
and
pop
adc
or
or
out
jo
loop
push
dec
rol
daa
or
xor
fild
jb
ins
inc
or
sbb
mov
ins
adc
addr16
loopne
loope
iret
sti
test
pushf
sub
mov
pop
mov
xchg
iret
fst
adc
xchg
dec
jnp
test
mov
test
adc
cmp
dec
iret
push
inc
sub
xchg
xchg
sbb
pop
add
in
push
sti
mov
es
dec
mov
call
jo
or
enter
hlt
jg
and
dec
lds
dec
mov
test
or
mov
and
pushf
dec
les
and
repnz
test
into
mov
test
cmp
pop
xlat
rcl
sub
cmps
xor
retf
inc
add
xchg
sbb
or
adc
call
and
jmp
adc
test
in
aad
adc
dec
inc
sbb
lock
adc
test
and
cmp
js
cmp
add
mov
or
push
dec
outs
mov
mov
and
mov
and
mov
pop
push
lahf
xor
mov
mov
ja
loopne
jl
in
inc
pop
enter
dec
xor
adc
mov
and
pop
mov
ins
dec
bound
xor
dec
xchg
fcomp
push
mov
pop
cmp
bnd
dec
cmp
xchg
lods
jbe
push
mov
imul
add
ds
pop
xor
inc
imul
das
cmps
mov
xor
add
push
or
inc
sbb
xchg
add
cmp
add
fistp
push
outs
test
sub
dec
xlat
jl
lds
ss
pop
int
int
mov
mov
mov
inc
adc
or
clc
pop
clc
(bad)
int3
pushf
cmp
pop
fld
fcomp
je
imul
shr
adc
fisttp
sub
adc
hlt
loopne
stc
test
in
jo
inc
lock
ror
lock
imul
bound
fdiv
fs
jo
inc
mov
call
mov
xor
sbb
jmp
push
aas
shl
jle
mov
push
aam
mov
xchg
and
sbb
and
adc
scas
out
xor
push
test
push
mov
test
gs
aam
inc
loopne
add
sub
inc
sbb
push
cmp
mov
add
in
fnstcw
out
sbb
jne
adc
inc
or
xchg
(bad)
(bad)
aam
fmul
inc
es
int
adc
mov
jb
imul
adc
daa
xor
fistp
pop
push
jb
clc
jge
and
and
sub
pop
(bad)
movs
jno
mov
adc
stos
adc
loopne
and
sub
inc
xor
dec
arpl
add
gs
or
sub
sub
inc
or
cwde
ret
test
daa
mov
inc
add
xchg
stos
gs
adc
add
ret
addr16
adc
test
aas
xor
and
aaa
cmp
movhps
mov
rol
cmp
xchg
jp
xor
xor
xor
lock
je
sub
add
pop
mov
mov
or
fidiv
cmps
inc
(bad)
out
inc
popa
add
mov
mov
mov
push
adc
pop
xor
das
mov
clc
nop
lea
lds
jnp
push
mov
in
jge
add
inc
(bad)
arpl
xor
mov
xchg
adc
prefetchw
or
mov
inc
inc
bound
xchg
mov
and
dec
mov
push
and
mov
mov
sub
jbe
out
inc
jge
jle
push
mov
imul
(bad)
pop
and
repnz
das
push
(bad)
mov
add
sbb
adc
stos
add
jo
adc
imul
sar
shl
sub
inc
nop
loop
sub
mov
push
out
and
inc
mov
adc
mov
pop
or
and
pop
sub
sbb
call
mov
repnz
mov
inc
sbb
mov
pop
les
sub
call
in
nop
add
dec
movs
in
adc
hlt
nop
push
loope
ret
ror
jl
jne
fs
(bad)
jo
gs
ret
jo
fistp
push
test
push
or
rol
call
cwde
and
ror
outs
pop
mov
and
clc
xor
sub
in
sub
ficomp
sbb
xchg
add
mov
jecxz
ins
lock
inc
xchg
adc
(bad)
nop
fcmovnu
sbb
dec
push
sub
lods
dec
sti
inc
ds
mov
test
es
adc
adc
cld
(bad)
dec
push
dec
dec
inc
dec
push
push
add
push
xchg
and
ja
pop
das
aaa
or
or
pushf
aaa
imul
or
daa
cmp
daa
test
pushf
push
nop
xchg
sbb
or
pop
inc
and
icebp
movs
jg
adc
and
dec
add
cmp
mov
jb
jbe
add
cmp
jne
dec
(bad)
aam
adc
lahf
test
cmp
int
sbb
add
inc
dec
adc
sbb
and
jne
add
sub
sbb
imul
inc
dec
pop
sbb
rol
dec
int
aas
mov
adc
push
cli
sub
outs
cmps
loope
jmp
sub
push
fwait
sub
adc
js
dec
loope
movs
sbb
fld
pusha
jbe
outs
pop
pop
inc
cli
sbb
sbb
es
and
xchg
dec
adc
and
add
retf
test
mov
xchg
mov
loope
sub
jmp
fs
mov
xchg
inc
jmp
ja
lods
inc
daa
add
mov
(bad)
pop
cld
jecxz
cwde
xor
shl
jle
pop
fiadd
ret
mov
cmc
xor
push
inc
push
(bad)
cmp
jae
jae
je
adc
jp
sbb
adc
out
ret
inc
mov
xchg
dec
push
icebp
pop
out
add
add
mov
aam
fstp
(bad)
in
daa
sbb
adc
das
pop
imul
jne
nop
sbb
push
adc
test
and
cmp
jne
cmp
dec
mul
cmp
adc
repnz
arpl
adc
fstp
jne
cmp
jb
or
sbb
xchg
pop
call
jmp
jecxz
sbb
jl
lock
sbb
dec
mov
add
imul
in
push
jecxz
ins
or
add
mov
add
lea
popf
push
and
cld
les
jno
mov
push
mov
mov
add
outs
ins
push
retf
and
iret
jno
or
dec
pop
enter
cwde
or
repnz
into
loopne
sbb
or
in
cwde
add
repz
cmp
cmps
rcr
aaa
xchg
xchg
sbb
pop
mov
faddp
ins
mov
pop
js
xor
cmp
aas
leave
or
and
icebp
xor
mov
sbb
popa
jb
xor
push
dec
push
jb
cmp
xor
cmp
push
aad
adc
sub
sub
adc
pusha
enter
sbb
push
bnd
jmp
aad
loope
jmp
movs
in
jns
or
xlat
fstp
adc
xchg
sub
pop
xlat
dec
push
jb
xlat
and
nop
pop
enter
xlat
or
out
pop
cmp
cmp
cs
xor
mov
sbb
icebp
mov
push
mov
sub
mov
or
mov
add
add
and
outs
bound
div
std
fcom
jbe
sub
ficomp
in
and
nop
adc
add
inc
cmp
and
cmp
add
add
or
cmps
jo
cmp
movs
and
test
movs
mov
iret
push
push
in
in
ins
ins
outs
xchg
test
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
push
push
pop
jno
cmps
bound
scas
or
xchg
outs
sub
lea
cmp
inc
mov
out
hlt
popf
clc
popf
loopne
(bad)
and
inc
pop
mov
ins
addr16
mov
inc
outs
ja
push
shl
sub
pusha
(bad)
or
add
xor
(bad)
fst
push
pop
stos
fstp
aam
add
clc
xchg
movs
test
or
mov
in
popf
loopne
push
and
push
and
inc
sub
jo
es
lahf
mov
mov
das
inc
ins
shl
jl
mov
cmp
xor
lock
cmp
repnz
cmp
inc
inc
in
inc
push
dec
dec
push
nop
inc
push
cmp
pop
inc
push
cmp
fs
ins
push
cmp
nop
push
retf
adc
jl
lahf
and
iret
in
test
and
sub
nop
xchg
cwde
jb
and
and
loope
xchg
ja
adc
xor
mov
inc
loope
setbe
enter
test
mov
iret
inc
lods
adc
cld
mov
mov
retf
fiadd
mov
mov
sbb
add
je
sahf
pop
mov
call
add
rcl
sbb
push
ins
sub
xlat
or
add
adc
dec
in
lock
test
dec
rcr
adc
dec
mov
cmp
mov
adc
sub
inc
cmp
inc
popa
enter
push
xor
cmps
hlt
lods
inc
dec
push
and
popf
dec
popa
dec
es
jmp
inc
push
in
cmp
adc
pop
pop
call
leave
aam
aas
dec
sahf
sub
xchg
addr16
dec
es
dec
push
pop
mov
lods
jb
cmp
cmp
adc
xor
lods
mov
ror
cmp
adc
or
shr
mov
add
xchg
call
add
pop
ja
addr16
mov
cmps
mov
mov
(bad)
mov
add
adc
pushf
cmp
movs
xor
sahf
adc
pop
mov
mov
sub
mov
inc
jle
mov
pop
aas
push
pop
invd
pop
cmp
pop
gs
cmps
xlat
dec
pop
or
scas
adc
lock
pusha
aaa
pusha
and
xor
dec
dec
xor
adc
inc
inc
inc
adc
and
inc
cmp
and
xor
cmp
add
lods
inc
cmp
pop
dec
sbb
loopne
cmps
cmp
sar
add
push
jo
jl
jmp
popa
arpl
inc
imul
or
fwait
push
cdq
movs
pop
push
aam
in
add
push
in
inc
adc
mov
int
shl
sbb
sub
add
ins
cwde
fidiv
jne
ins
sub
mov
stos
sbb
and
(bad)
mov
inc
adc
inc
(bad)
out
mov
pop
imul
xor
mov
imul
sub
mov
inc
xchg
add
dec
cmp
xchg
inc
push
and
xchg
shl
add
pop
pop
dec
adc
mov
add
jle
xchg
cmp
pusha
sbb
not
movs
cmp
jo
mov
repnz
push
ss
add
mov
mov
sbb
mov
(bad)
xchg
pop
sbb
call
or
sub
outs
dec
adc
or
lock
das
cmc
retf
and
jmp
stos
aam
push
ret
push
push
or
mov
lods
jmp
ss
or
or
xor
loopne
inc
adc
mov
enter
sbb
stos
dec
jp
popa
sub
or
sbb
out
or
push
add
aam
(bad)
mov
jg
ret
out
or
jb
and
call
or
add
add
dec
add
sahf
or
adc
lea
push
sbb
lea
iret
pusha
je
rcr
jo
or
lods
xchg
lock
inc
adc
jbe
sbb
int3
dec
xlat
mov
sbb
or
dec
sbb
or
push
lods
mov
cmps
icebp
mov
pop
ret
push
inc
mov
push
adc
mov
cdq
xor
(bad)
mov
stos
int
mov
inc
dec
sub
jg
sub
add
rol
sub
(bad)
and
dec
lods
mov
sbb
test
or
mov
and
push
lods
sbb
ja
sahf
popa
jns
(bad)
dec
or
imul
add
push
and
sbb
add
and
hlt
adc
or
bnd
ins
outs
xor
mov
or
in
retf
fidiv
pop
fiadd
xor
adc
fbld
push
outs
(bad)
inc
lds
bound
out
into
cld
mov
loopne
xchg
in
adc
sbb
or
loopne
aad
and
sbb
in
ss
add
loopne
in
loopne
fnsave
(bad)
aaa
pushf
sub
xchg
and
cmp
enter
sbb
sbb
and
enter
and
stos
adc
jae
(bad)
lock
and
mov
sbb
and
cmp
enter
pop
cmp
cmp
inc
inc
inc
mov
and
xor
xchg
dec
or
dec
sub
xchg
jb
enter
pop
xchg
fs
loopne
hlt
and
into
jo
inc
or
and
enter
js
xor
je
xor
inc
sbb
and
xor
enter
les
xchg
sbb
enter
ficomp
mov
xchg
movs
fs
inc
push
sbb
lods
pushf
mov
in
xchg
inc
mov
mov
lock
fs
xchg
shl
inc
push
sbb
enter
in
xchg
inc
rcr
mov
xchg
hlt
loopne
fadd
cmp
xor
sub
call
push
in
gs
and
mov
nop
xchg
inc
hlt
mov
nop
fs
aas
leave
enter
fld
enter
bound
and
sbb
jns
inc
sub
pop
sub
xchg
or
loopne
and
inc
inc
push
sbb
adc
sbb
fsubp
fmul
and
and
cmp
cmp
gs
inc
jo
(bad)
lea
jo
je
gs
and
(bad)
cs
jl
cmp
enter
adc
and
xchg
jb
xlat
and
and
xchg
test
cmp
and
loopne
clc
xchg
ret
dec
jo
xor
and
cmp
and
inc
call
pusha
in
jl
arpl
(bad)
retfw
movs
inc
hlt
mov
xchg
clc
fdivr
lock
popa
daa
cmp
mov
inc
cmp
sbb
inc
inc
push
sbb
pop
fs
xchg
js
jl
nop
sbb
xchg
inc
pushf
enter
fcomp
test
mov
push
sub
mov
or
test
add
lods
or
push
cdq
lea
fs
jl
inc
inc
mov
les
ror
shl
and
xor
jb
enter
jo
xchg
sbb
jecxz
cmp
rcl
fcom
cmp
sbb
xor
xchg
clc
cmp
mov
arpl
jl
add
fs
cwde
inc
call
sbb
aam
or
or
fs
and
out
adc
push
inc
sbb
mov
and
sbb
add
sbb
jne
and
and
and
rol
or
in
and
out
cmp
cmp
jb
inc
inc
add
retf
inc
inc
push
adc
jb
in
test
cwde
and
nop
mov
cmp
rol
enter
loopne
pusha
lock
push
cmp
add
pop
adc
nop
xchg
inc
push
fs
cmp
and
sub
inc
push
sbb
js
xor
and
sub
mov
inc
mov
in
sbb
nop
cld
inc
adc
inc
dec
xchg
inc
push
enter
push
pop
push
mov
in
xchg
arpl
xor
xchg
sbb
pusha
adc
jbe
enter
test
ss
push
and
push
xor
cmp
fs
cwde
cmp
inc
inc
inc
push
sbb
inc
call
dec
add
dec
and
sbb
sbb
jmp
pop
cmp
push
add
mov
push
loopne
and
jne
js
int3
cmps
fstp
jl
mov
mov
mov
jmp
mov
cmp
retf
jo
enter
test
lods
mov
arpl
and
jb
enter
lods
or
sar
mov
mov
mov
and
les
enter
pop
int3
je
sbb
jb
mov
test
and
xchg
rcr
(bad)
aam
mov
inc
mov
in
jl
sbb
fs
push
test
inc
inc
push
mov
mov
inc
push
sbb
cwde
sbb
xor
enter
pusha
and
test
jb
enter
mov
mov
call
in
xchg
mov
push
sbb
les
cwde
jb
mov
and
ins
or
loopne
(bad)
lock
cmp
enter
cmp
inc
arpl
sbb
enter
and
nop
retf
sbb
fs
mov
inc
push
pop
enter
enter
pusha
in
and
cmp
adc
ins
enter
sub
inc
mov
jb
push
js
enter
jl
sbb
enter
mov
and
mov
cld
xchg
sbb
and
and
xchg
and
xchg
test
mov
inc
or
mov
aas
sbb
enter
and
rcr
enter
enter
mov
mov
jb
enter
mov
fmul
fsub
jb
enter
in
inc
push
cmp
repz
xchg
in
cmp
push
inc
push
sbb
hlt
fs
jl
nop
xchg
inc
cld
nop
add
sbb
in
add
or
or
mov
in
or
adc
enter
sbb
sbb
jb
pop
and
and
xor
enter
aam
xchg
cmp
cmc
cmp
inc
and
int
sbb
fs
fld
dec
ins
inc
push
sbb
dec
test
in
xchg
inc
push
mov
push
sbb
fs
pop
in
enter
add
fs
sbb
jb
cmp
and
xchg
je
xor
cmp
and
xchg
enter
mov
not
sub
inc
xchg
inc
pop
and
jo
cmp
fsub
xchg
popf
fsub
call
hlt
gs
adc
mov
jb
jb
and
dec
and
cld
jl
nop
out
and
cmp
cwde
add
xchg
ror
enter
adc
int3
push
sbb
adc
sbb
repnz
xchg
rcl
sbb
movs
jo
mov
and
and
xor
enter
clc
xchg
inc
mov
sbb
cmp
fs
xor
inc
inc
inc
push
sbb
js
in
xchg
dec
nop
dec
lods
inc
push
sbb
push
les
nop
xchg
inc
pop
hlt
pop
xchg
sub
and
inc
push
jb
jl
cwde
enter
je
js
cmp
fdivr
adc
cmp
cmp
push
mov
inc
inc
push
nop
adc
mov
fcom
dec
int3
and
jb
in
cld
and
push
mov
mov
fs
dec
mov
push
sbb
fadd
enter
cmp
loopne
sar
fs
and
cmp
cmp
test
inc
push
sbb
fs
mov
enter
cmp
in
hlt
adc
jbe
enter
cld
retf
sub
jo
push
and
imul
add
or
in
fdivr
pushf
xchg
inc
push
sbb
mov
in
xchg
movs
sub
cmp
pushf
inc
mov
std
fs
sub
mov
push
sbb
rcl
call
enter
xchg
aam
enter
fdiv
sbb
jb
mov
test
and
xchg
(bad)
call
loopne
cld
lock
xchg
inc
mov
hlt
cmp
cmp
push
cld
ins
xchg
inc
sldt
add
fs
lods
or
or
inc
push
sbb
adc
xor
enter
dec
and
and
mov
xchg
xor
and
xor
inc
push
sbb
cmp
js
nop
xchg
inc
inc
xchg
inc
push
sbb
fs
int3
dec
enter
call
sbb
xor
cmp
and
xchg
sbb
jb
jo
mov
and
cmp
enter
add
xchg
inc
inc
push
js
jl
fs
inc
sbb
push
sbb
xchg
fs
xchg
mov
sbb
xchg
cld
cwde
sbb
jb
enter
mov
pop
movs
je
enter
xchg
lods
mov
sbb
jb
int3
mov
fs
and
push
sbb
fs
cmp
nop
xchg
inc
inc
pop
enter
fs
xchg
sar
aam
fcomp
xor
add
fsub
loopne
and
xor
enter
test
xchg
sbb
enter
or
inc
nop
add
fs
xchg
add
or
or
adc
fcomp
sbb
clc
sbb
or
enter
cmp
push
xchg
arpl
and
in
enter
sub
cmp
in
enter
add
sub
inc
push
inc
mov
xor
cmp
mov
dec
aam
dec
nop
and
or
push
inc
pop
in
and
jbe
in
and
and
es
paddq
clc
rol
and
sbb
mov
inc
aaa
outs
inc
push
clc
jb
cwde
push
cmp
cmp
or
push
inc
pop
xor
xchg
pop
jae
mov
fs
xlat
cmps
fs
xchg
retf
dec
pop
push
frstor
mov
(bad)
push
pop
mov
in
nop
fstp
and
mov
sub
inc
xor
or
in
and
and
adc
and
sbb
enter
fs
cmp
shl
and
jb
call
nop
retf
inc
mov
(bad)
cmp
repnz
test
sahf
sub
ss
xor
mov
les
in
sbb
fs
and
in
adc
and
sub
lock
jb
sub
cmp
mov
xchg
js
enter
cmp
mov
ret
cmp
and
inc
lods
mov
add
cmp
aad
test
les
iret
fstp
sbb
mov
pop
inc
push
pop
pop
sbb
enter
mov
pop
(bad)
and
outs
gs
daa
adc
push
outs
xchg
scas
int
xchg
or
push
jne
pushf
movs
shl
pop
aaa
jl
es
scas
inc
imul
test
arpl
mov
sub
jp
inc
aas
sbb
and
leave
aas
and
mov
adc
add
pop
nop
and
xor
popf
dec
mov
sub
in
mov
pop
or
sbb
enter
ret
ret
xchg
(bad)
aam
je
inc
pusha
jbe
cwde
sbb
in
inc
stc
xchg
jbe
int
test
cmp
and
inc
mov
push
addr16
test
xchg
fild
bound
dec
xchg
cmp
out
dec
pop
sbb
cmps
mov
jo
sti
pop
imul
loope
jl
pop
dec
fild
mov
mov
sbb
sbb
fadd
fisub
mov
jo
cmp
or
ins
mov
movs
ja
ja
jb
adc
cmps
adc
mov
push
cmp
add
fsub
das
outs
adc
pop
(bad)
or
outs
movs
dec
loopne
pop
ins
test
nop
adc
mov
mov
arpl
nop
or
fcomp
dec
scas
xor
xchg
outs
das
adc
aas
jg
mov
push
jbe
push
add
and
push
lock
dec
push
aaa
mov
das
das
mov
dec
push
scas
xor
dec
xchg
add
inc
add
xchg
or
iret
stos
adc
imul
imul
aas
pop
cmp
or
mov
pop
pop
loopne
add
cs
jae
sbb
nop
or
pop
imul
mov
push
inc
or
dec
ja
cmps
fild
jns
cmp
push
cmp
sbb
jmp
pcmpgtb
imul
sub
inc
int3
das
imul
fs
daa
pop
stos
pop
cmp
inc
gs
addr16
pop
mov
dec
arpl
das
xor
jle
adc
mov
clc
test
dec
and
mov
jae
pusha
cmp
sbb
aas
or
sbb
daa
mov
add
dec
dec
dec
dec
push
push
(bad)
adc
test
dec
push
inc
adc
aaa
adc
sbb
gs
push
mov
(bad)
(bad)
sbb
bound
les
push
pop
dec
pop
add
push
scas
sub
xor
out
fistp
std
adc
xor
adc
div
aaa
mov
adc
xor
pop
(bad)
fsub
or
outs
das
inc
push
das
sub
mov
jmp
fist
pop
cmp
dec
xchg
ins
data16
fisubr
mov
dec
xor
add
adc
dec
and
not
icebp
xlat
xchg
je
xchg
jg
inc
mov
daa
add
(bad)
test
rcr
fidivr
daa
push
inc
dec
inc
in
div
fadd
pop
daa
jo
jne
xor
aas
aaa
xor
fs
or
mov
pop
int3
adc
dec
int3
push
jmp
jnp
rcl
loope
movs
ins
dec
retf
mov
sub
loope
ins
push
cmp
push
outs
arpl
cmps
xchg
ins
fs
lea
push
mov
mov
shl
jae
xor
mov
addr16
pop
mov
adc
daa
rcr
and
sbb
inc
dec
and
xor
and
enter
push
sub
adc
retf
pop
push
mov
aas
dec
push
dec
inc
push
movs
xor
aas
fld
and
adc
lock
cmp
aaa
mov
adc
ja
mov
pop
push
dec
cmp
pop
push
xchg
xor
mov
add
inc
aaa
mov
fnsave
mov
test
mov
into
shl
call
das
xlat
sub
ins
push
das
dec
xor
leave
ret
or
mov
arpl
jb
ret
mov
push
aaa
adc
xor
je
mov
aas
pop
or
jae
inc
sub
adc
pop
sbb
bound
rol
pusha
add
cmp
pop
cmp
mov
call
arpl
xchg
and
call
inc
and
ror
xor
ret
ret
xchg
sbb
outs
jo
scas
push
push
or
sbb
outs
push
sub
test
inc
xchg
popa
outs
or
push
xchg
das
xchg
pop
jbe
mov
inc
jp
adc
fwait
add
push
or
call
add
inc
dec
lahf
push
inc
dec
xchg
arpl
aad
pop
aas
or
js
bound
jb
xor
or
and
fcmovb
lock
ja
inc
cld
cmp
ins
test
data16
cs
mov
jp
aaa
daa
pop
jg
mov
cmps
scas
adc
or
out
jbe
inc
fsub
loopne
jo
xor
addr16
push
jae
xor
mov
fisttp
imul
pop
shr
mov
or
or
(bad)
scas
sub
add
daa
mov
jo
out
div
xchg
or
outs
aaa
daa
or
scas
mov
mul
sbb
aas
ja
stos
ins
fcmovnu
das
push
das
pop
mov
pusha
pop
xchg
dec
pop
das
and
mov
imul
sbb
push
aas
test
nop
(bad)
pop
or
mov
pop
das
fcom
iret
ss
iret
das
sbb
inc
xor
inc
pop
sub
fdivr
jl
push
inc
dec
adc
adc
icebp
push
in
call
call
push
xor
popw
fisubr
push
aas
adc
pop
je
not
sbb
xlat
cdq
fisttp
pop
stos
xlat
cdq
fild
jecxz
loope
mov
xor
dec
xchg
stos
inc
jmp
jae
mov
test
imul
ja
inc
inc
or
xor
pop
hlt
dec
pop
aaa
push
mov
ss
(bad)
jo
xchg
xchg
fisub
push
inc
xor
or
or
or
mov
pop
xlat
inc
aaa
adc
loope
add
outs
xor
rcl
xchg
sbb
xor
push
xor
mov
sar
nop
jl
dec
inc
aas
and
or
xor
aaa
js
mov
loope
loope
xor
cdq
inc
mov
cdq
inc
sbb
ret
inc
out
add
dec
add
add
mov
movs
fild
and
cmp
pop
pop
sbb
and
out
sub
inc
arpl
pop
data16
pop
adc
or
bound
pop
in
aad
ss
popa
xor
cmp
in
and
mov
xor
(bad)
imul
leave
pop
pop
fs
addr16
sahf
sbb
pop
or
sub
and
les
es
pop
xor
mov
gs
adc
push
imul
xchg
movs
pop
jg
ins
ins
daa
pusha
test
or
or
mov
xchg
xor
not
bound
xor
or
stos
cmp
test
xchg
ja
cmp
div
xor
or
xor
adc
adc
in
shl
imul
push
das
loope
outs
cs
scas
push
div
lods
popf
sbb
adc
loopne
outs
sub
xchg
imul
and
daa
bound
pop
cmp
fisub
cmps
or
movs
sub
push
xor
pop
inc
mov
stos
push
pop
mov
cmps
cmp
xor
das
mov
(bad)
adc
push
cmp
outs
or
or
pop
add
sbb
ins
das
xor
cmp
das
imul
add
pop
inc
not
aaa
mov
cmp
fldcw
js
mov
pusha
shr
(bad)
adc
adc
xchg
mov
inc
xchg
lods
sbb
(bad)
ss
sub
mov
xchg
pmulhuw
dec
imul
inc
cmps
inc
daa
fisub
or
int
or
comiss
sbb
or
inc
imul
pushw
pop
imul
xchg
inc
lods
push
mov
pop
inc
xor
lahf
pop
inc
mov
fidivr
fldenv
addr16
adc
aaa
adc
adc
sub
xor
inc
comiss
movs
or
movups
push
aaa
test
add
xchg
inc
push
push
inc
pop
push
das
neg
ins
(bad)
enter
aaa
aad
das
and
mov
add
das
push
test
xchg
icebp
push
popa
push
mov
adc
add
mov
iret
aas
jnp
add
outs
jbe
lods
or
gs
(bad)
fisubr
das
pop
pop
adc
push
shl
sub
xor
adc
fbstp
inc
adc
fcmovb
in
xlat
gs
das
push
dec
mov
aaa
(bad)
das
sub
fcmovnb
pop
pop
adc
stos
xlat
push
aaa
sub
aas
outs
movs
adc
scas
cwde
aaa
cmp
pop
ins
and
add
sbb
shl
dec
jo
leave
iret
dec
mov
pop
add
rcr
push
bound
fcomip
ja
xchg
add
imul
ins
and
add
and
fisubr
pop
pop
ret
inc
ds
adc
xlat
push
inc
xchg
in
push
arpl
das
addr16
add
xchg
dec
comiss
shl
sub
fcom
aas
bound
sub
es
inc
sar
adc
inc
lock
xor
cmps
sbb
pop
or
xchg
and
or
das
adc
iret
aas
mov
in
cmp
imul
adc
getsec
sub
xor
adc
inc
dec
pop
lahf
sbb
mov
sub
inc
push
nop
ficom
sbb
out
sub
loopne
xchg
sbb
test
xchg
lods
push
mov
xchg
dec
inc
test
cmp
or
dec
adc
aaa
and
stos
ret
fild
mov
in
adc
outs
adc
push
ret
mov
retf
sub
daa
adc
stos
retf
xor
jae
daa
adc
push
jne
or
aaa
lds
shl
lods
xor
mov
push
outs
inc
jbe
rcl
adc
add
inc
fwait
nop
add
outs
sbb
pop
add
jbe
mov
mov
inc
cmp
or
sbb
cmp
sbb
arpl
pop
sti
xchg
scas
in
jae
jbe
pop
xlat
mov
xchg
add
xor
and
push
int
adc
pop
aas
lods
pop
and
stos
add
pop
xchg
inc
dec
das
mov
and
mov
inc
aas
dec
lock
dec
fs
xor
and
addr16
ror
xor
xor
scas
ins
push
or
aaa
dec
inc
inc
xor
dec
inc
or
mov
js
dec
inc
xor
adc
bound
iret
aaa
jbe
mov
or
sar
mov
(bad)
xchg
stos
(bad)
arpl
aad
(bad)
and
or
or
dec
sbb
jl
pop
xchg
aas
adc
aaa
jecxz
push
ror
inc
sbb
mov
pusha
sub
cmp
imul
push
pop
mov
mov
shl
mov
leave
adc
daa
inc
mov
mov
sbb
aaa
xor
xchg
jl
aad
sbb
ins
pop
leave
mov
pop
in
add
aas
push
(bad)
mov
into
pop
cmp
inc
mov
adc
bound
ins
sbb
pop
aaa
fisttp
mov
mov
outs
out
pop
stos
sub
test
test
jl
or
xlat
aaa
fs
mov
ins
aaa
adc
scas
sbb
mov
outs
iret
mov
sbb
lock
dec
xchg
xchg
gs
push
mov
adc
dec
enter
aad
mov
dec
aas
in
sub
lea
popf
pop
sbb
inc
inc
aaa
or
aas
imul
movq
mov
jmp
pop
dec
push
rcl
sub
adc
cmp
jnp
mov
aas
sub
outs
mov
jnp
jmp
jne
rcl
sub
inc
stos
pusha
mov
das
popf
push
sub
mov
dec
push
bound
mov
xchg
sbb
pop
aaa
xchg
pop
mov
shl
or
push
mov
xchg
adc
inc
fimul
inc
xor
fdiv
push
ins
call
or
or
adc
push
mov
or
lahf
sbb
mov
ins
shr
xlat
mov
mov
test
pop
cdq
lea
and
das
or
fild
add
das
or
daa
or
scas
adc
mov
aas
mov
dec
inc
dec
pop
outs
bound
xlat
cmps
ins
not
daa
push
xor
scas
daa
ins
jl
mov
outs
xlat
inc
push
dec
xor
push
inc
inc
ret
xlat
or
leave
aam
addr16
push
push
jo
inc
in
mov
cmps
or
aas
xlat
test
stos
fisttp
aaa
dec
sbb
bound
(bad)
mov
sbb
xor
inc
adc
xor
or
loop
imul
int
xor
mov
add
xchg
push
pop
les
out
dec
and
adc
nop
dec
xchg
adc
out
add
or
and
xor
outs
pop
push
inc
dec
push
shr
xor
push
(bad)
jae
stos
xchg
loope
or
xor
pop
xchg
push
inc
pop
inc
in
mov
and
and
sbb
les
push
neg
push
lods
xor
addr16
sar
popa
xlat
pop
daa
iret
lods
sub
jae
xchg
aas
sub
or
adc
jbe
mov
and
sub
das
or
sahf
xor
lds
or
adc
sbb
sbb
sbb
and
add
sbb
sub
xor
and
mov
or
inc
and
push
push
sti
pop
pop
inc
inc
inc
inc
pusha
fs
inc
jo
je
inc
inc
inc
inc
test
inc
inc
inc
inc
nop
xchg
cwde
pushf
inc
inc
inc
inc
mov
inc
inc
inc
mov
mov
inc
rol
int3
inc
inc
inc
inc
rcl
fcomp
inc
inc
inc
inc
loopne
call
inc
lock
clc
cld
and
das
inc
add
add
cmp
xor
adc
xor
sbb
xor
inc
xor
xor
js
cmp
xor
test
enter
or
enter
in
lock
clc
enter
cld
add
enter
je
jl
enter
cwde
inc
pushf
mov
xchg
movs
test
mov
xchg
xchg
xchg
mov
enter
xchg
xchg
rcl
fcomp
xchg
xchg
xchg
xchg
loopne
nop
xchg
xchg
xchg
xchg
xchg
in
lock
clc
xchg
xchg
retf
xchg
cld
add
add
and
mov
or
and
and
sbb
and
and
sub
cld
cmp
rcr
sbb
cdq
or
sbb
sbb
sbb
sub
sbb
sbb
xor
cmp
sbb
sbb
inc
inc
dec
sbb
sbb
dec
push
push
pop
mov
push
xor
sbb
inc
push
push
xor
xor
mov
cmp
or
nop
xchg
mov
enter
xor
leave
enter
jo
push
or
and
sub
xchg
lods
mov
mov
mov
xchg
xchg
xchg
int3
rcl
sar
mov
mov
xchg
cwde
lea
test
sbb
cdq
mov
mov
mov
mov
sbb
sbb
rcl
cmp
ins
fs
cmp
cmp
inc
sub
enter
dec
push
push
enter
pop
pusha
fs
sbb
cdq
sbb
je
sbb
sbb
add
nop
xchg
sbb
sbb
cwde
pushf
mov
sbb
sbb
sbb
sbb
sbb
int3
rcl
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
sbb
cld
add
sbb
sbb
or
adc
sbb
sbb
sbb
and
sbb
sbb
sub
xor
sbb
sbb
cmp
xchg
xchg
xchg
xchg
inc
dec
dec
push
xchg
xchg
xchg
xchg
push
pop
pop
pusha
xchg
xchg
xchg
xchg
fs
xchg
xchg
je
jl
xchg
xchg
xchg
xchg
test
retf
xchg
xchg
pushf
cmp
cmp
xchg
xchg
xchg
xchg
loopne
call
xchg
lock
clc
cld
fs
test
or
fs
sbb
repnz
sbb
and
fs
xor
fs
inc
fs
dec
push
push
fs
pop
pusha
fs
fs
add
or
fs
mov
fs
fs
fs
loopne
fs
jb
fs
cld
add
fs
adc
fs
and
fs
xor
fs
inc
fs
dec
push
push
fs
pop
pusha
fs
fs
add
nop
xchg
fs
pushf
mov
fs
mov
fs
fs
fs
loopne
fs
bound
cld
add
retf
dec
int3
or
adc
mov
and
xor
sub
xor
cmp
mov
in
inc
jge
outs
dec
inc
inc
inc
inc
push
push
pop
pop
inc
inc
inc
inc
pusha
shl
mov
mov
nop
xchg
sbb
cmp
test
ins
xor
xor
enter
(bad)
enter
enter
fmul
enter
loopne
call
in
lock
clc
enter
cld
add
sbb
mov
lods
jns
pop
enter
and
sub
and
mov
or
adc
and
rcl
and
and
fcomp
loopne
pop
in
sbb
mov
xchg
mov
mov
inc
inc
lock
clc
xor
sub
sbb
xor
cmp
dec
pushf
test
mov
nop
pop
cs
sub
cmp
lea
sub
adc
jae
xchg
sub
dec
aam
xor
inc
jo
fidivr
stos
and
in
dec
jae
sbb
sbb
cmp
ror
mov
es
xchg
dec
and
adc
add
cmp
pusha
pop
mov
adc
fcomp
or
mov
sub
or
fbld
push
dec
pop
jl
adc
dec
jl
je
sahf
xchg
scas
ss
cmp
stos
adc
and
push
and
add
dec
sub
ja
add
pop
in
mov
xor
data16
adc
stc
add
fbld
dec
aam
or
mov
inc
les
adc
out
xchg
xor
inc
(bad)
aam
inc
dec
js
or
mov
fcmovne
and
mov
push
push
clc
adc
mov
stc
or
pop
les
pop
push
sub
push
movs
mov
test
sbb
dec
mov
adc
push
int3
pop
adc
xchg
cwde
call
or
add
rcl
adc
rcl
sbb
or
mov
xchg
cmps
inc
pop
adc
push
jbe
mov
adc
adc
push
adc
lods
push
cdq
out
jnp
addr16
pop
inc
adc
test
mov
retf
in
sub
or
adc
unpcklps
popf
sub
mov
and
fadd
xor
xchg
or
and
jb
cld
loopne
fs
add
and
gs
call
xchg
or
in
movs
pop
xor
inc
in
aad
sbb
fdiv
leave
add
adc
jb
or
clc
out
jb
add
add
rcl
add
pop
(bad)
ss
call
adc
sbb
xor
adc
push
in
pop
or
pop
pop
xor
cmc
out
int3
fiadd
push
push
addr16
jae
ror
xchg
or
inc
and
sbb
xor
cmps
ins
sti
xchg
in
ret
or
pop
(bad)
or
cmp
inc
daa
scas
adc
lods
xor
fwait
mov
inc
cmp
mov
mov
cmp
adc
push
dec
dec
outs
and
cwde
pop
add
dec
dec
lds
inc
repnz
adc
je
push
shr
mov
out
inc
daa
adc
add
pusha
xchg
movs
inc
stos
fnsave
test
jmp
ds
and
xchg
push
inc
arpl
dec
or
rol
jge
add
jmp
imul
je
fistp
add
add
push
inc
(bad)
out
pop
add
loopne
inc
es
push
pop
js
daa
movs
sub
ret
retf
mov
jg
movs
sub
nop
adc
das
not
xor
add
lods
add
adc
and
dec
xor
add
mov
sbb
add
or
test
loope
mul
xchg
xchg
aad
es
push
or
(bad)
pop
push
popf
pop
xor
xor
loope
mov
ret
out
nop
shr
int3
push
sbb
pop
add
popa
or
push
push
sub
pusha
add
dec
dec
mov
push
mov
push
fist
push
xor
push
imul
cmp
sbb
pop
and
gs
cmp
sbb
popa
add
xchg
adc
stos
rcl
or
mov
pop
push
sbb
inc
or
fsubr
dec
push
fwait
dec
jmp
adc
ins
dec
push
dec
fidivr
sub
dec
push
lods
enter
pop
mov
or
pop
jmp
test
mov
call
cmps
dec
test
fisttp
dec
mov
popa
pop
mov
and
or
dec
and
or
jno
fild
sub
fcomp
xchg
pop
daa
push
popf
push
mov
movs
pop
cmp
xchg
outs
dec
pop
sbb
xor
add
sbb
mov
pop
mov
addr16
add
jl
mov
adc
cmp
dec
fdiv
sub
test
and
xor
sbb
add
and
out
imul
push
ror
aad
sub
(bad)
(bad)
cmp
adc
pop
mov
adc
(bad)
pop
dec
pop
jo
mov
sbb
push
add
cs
fiadd
push
pop
pop
in
popa
mov
sbb
outs
mov
xor
push
pusha
iret
jo
data16
xor
dec
pop
fcom
add
mov
push
inc
add
dec
hlt
inc
mov
cmp
dec
push
pop
into
shl
out
mov
push
pop
push
cmp
xor
out
pop
xor
popf
xor
ss
pop
dec
push
push
arpl
sbb
sub
mov
ss
daa
dec
add
inc
sahf
and
adc
mov
sub
int3
je
iret
sub
adc
xor
push
xor
or
push
inc
push
mov
cmps
or
mov
add
sbb
in
adc
pop
inc
loopne
cmps
inc
push
cmp
cwde
mov
ss
and
sbb
push
dec
or
sbb
dec
sbb
shr
sbb
(bad)
jl
pop
nop
sub
icebp
push
(bad)
(bad)
pushf
arpl
dec
dec
and
out
rol
js
add
hlt
retf
sbb
push
es
push
cmp
call
sub
jecxz
sbb
pusha
rcr
movs
aaa
xchg
pop
dec
inc
add
(bad)
fs
adc
call
add
dec
push
test
or
and
aaa
push
inc
add
aaa
xor
les
je
xchg
lock
and
add
dec
ja
jge
push
scas
ds
movs
inc
dec
mov
retf
fdivr
shl
leave
adc
mov
sub
xor
dec
push
loope
or
and
sub
fdivr
push
mov
and
mov
aaa
test
ds
adc
cmps
iret
inc
pop
loopne
outs
mov
or
or
lahf
sbb
(bad)
aas
jb
cmp
outs
popa
(bad)
test
fist
sahf
cwde
dec
adc
fsub
pop
dec
push
pop
(bad)
mov
and
fs
adc
mov
inc
enter
xchg
mov
mov
movs
stc
fisttp
mov
repnz
jge
hlt
cmp
aam
in
push
push
xlat
pusha
aaa
xchg
leave
inc
enter
inc
cs
arpl
enter
inc
cs
push
lds
pop
and
cmp
sbb
fidiv
mov
leave
inc
sbb
pop
inc
xlat
or
inc
mov
or
adc
pop
fsubr
push
and
(bad)
ins
arpl
jb
jo
and
test
nop
mov
cmps
rcl
iret
(bad)
in
in
adc
(bad)
(bad)
push
adc
cmp
pop
ror
add
leave
gs
daa
mov
cli
add
jg
ins
jg
and
adc
add
cld
pushf
dec
sub
mov
cmps
cmp
sub
gs
add
pop
dec
mov
in
mov
dec
mov
cmp
pusha
adc
fsub
pop
leave
mov
cld
addr16
inc
dec
adc
shl
push
lods
in
push
mov
lods
dec
xor
xchg
sbb
loopne
call
or
in
lods
dec
dec
dec
lock
movs
imul
ins
test
dec
andnps
and
and
sbb
push
or
and
test
fcomp
fstp
jmp
inc
jo
and
inc
add
retf
inc
add
pop
add
xchg
lock
mov
fisttp
and
aaa
arpl
out
cmp
or
sbb
adc
fisub
in
mov
in
je
popf
push
and
mov
mov
sbb
lahf
ret
adc
or
pop
add
ret
rol
pop
dec
push
xchg
mov
dec
pop
inc
daa
dec
xor
xor
jmp
adc
cmp
rol
inc
cmp
add
inc
inc
jmp
pop
ins
loope
sbb
inc
or
vprotb
jnp
aas
hlt
cmp
jnp
das
repz
fisttp
adc
lock
aas
jne
sbb
lea
sbb
and
sbb
dec
adc
fadd
xlat
nop
adc
pop
cmp
push
shl
ins
cmps
pusha
sbb
jns
cmp
lods
ja
mov
cs
int
mov
and
pop
xor
test
mov
and
or
je
retf
mov
adc
add
and
add
jg
xchg
sub
(bad)
cld
arpl
fadd
xchg
jns
jbe
fadd
cld
test
adc
and
mov
adc
dec
retf
or
jl
add
xchg
iret
mov
jb
lods
inc
mov
xor
xor
in
adc
pusha
mov
call
dec
(bad)
cmp
jle
xor
pop
(bad)
sti
sbb
dec
jne
or
add
jns
push
push
or
pop
xor
out
test
cmp
push
add
mov
adc
dec
and
adc
inc
xchg
popf
cmp
sub
bound
mov
nop
jmp
popa
dec
add
or
jg
sub
imul
rcl
adc
jae
inc
loop
mov
dec
mov
shl
push
mov
mov
mov
mov
add
aad
xor
adc
push
cdq
and
sub
das
cdq
dec
mov
adc
or
sbb
outs
jmp
push
adc
popa
mov
or
not
add
ins
(bad)
es
dec
inc
jo
sub
or
sbb
les
add
pop
push
mov
xor
or
mov
lods
cdq
jge
dec
call
je
mov
sub
push
mov
nop
(bad)
loopne
aaa
imul
dec
mov
in
shl
or
aaa
mov
jge
xor
mov
pusha
jo
les
or
retf
and
jmp
or
pop
(bad)
lds
les
push
xchg
(bad)
dec
fild
nop
inc
cmps
cmp
inc
cmovne
and
sub
inc
mov
lahf
dec
pop
and
cmps
or
mov
inc
lods
jne
mov
ror
push
dec
in
lock
mov
mov
pop
xor
call
lock
in
adc
inc
xor
inc
pop
fist
loopne
cmps
xor
add
cmp
pop
pop
daa
add
pop
dec
or
inc
cmp
pop
rcr
dec
sbb
lods
mov
mov
das
mov
xor
push
xor
and
mov
pop
icebp
mov
pop
outs
movs
dec
push
imul
dec
jne
mov
mov
call
cmc
xchg
jmp
mov
cmp
aad
push
mov
rcr
push
pop
nop
push
mov
sub
xor
leave
rcl
add
mov
fs
adc
mov
nop
(bad)
sbb
inc
cwde
(bad)
sbb
push
and
scas
jo
fadd
add
mov
push
push
dec
cmp
jge
out
push
mov
inc
outs
cwde
sub
xchg
or
retf
mov
jmp
add
inc
sub
mov
dec
dec
mov
push
xchg
jne
add
dec
js
xor
call
rol
js
xchg
dec
jne
mov
add
pop
push
mov
cwde
shr
push
mov
das
cld
jmp
cmp
sub
sub
pop
or
mov
pop
dec
mov
adc
daa
and
sub
mov
stos
jge
nop
sbb
mov
sub
mov
das
jno
or
int
cmp
add
loopne
aaa
(bad)
dec
sbb
dec
dec
add
xor
xchg
pop
(bad)
movs
rol
lock
cmp
pop
test
add
shr
clc
mov
dec
jno
adc
cmp
push
shl
clc
in
mov
mov
(bad)
xor
mov
jns
imul
ret
add
adc
cwde
icebp
cli
stc
pop
loopne
adc
ja
xor
mov
stos
mov
mov
push
xchg
mov
add
push
adc
cmp
ja
iret
jnp
mov
push
mov
cmp
mov
test
ficom
loopne
dec
push
cmp
call
call
sub
jo
ret
ins
rcl
pop
mov
cmp
lock
adc
leave
pop
sti
add
pusha
mov
push
mov
mov
and
add
sti
adc
and
mov
fnstsw
mov
add
sub
add
push
je
dec
inc
add
push
jno
inc
sbb
or
and
jl
push
adc
cmp
adc
loop
inc
push
inc
push
or
cmp
and
js
sub
and
sub
jg
sub
dec
push
out
nop
mov
rol
nop
jl
dec
add
mov
dec
mov
mov
dec
or
leave
xchg
lea
mov
repnz
or
or
dec
push
cmp
nop
cmp
mov
and
jo
and
xchg
inc
cmp
add
adc
jne
adc
jge
cs
dec
xor
mov
push
add
push
movs
ds
xor
lock
xchg
jg
and
test
mov
sbb
pop
cmp
outs
add
hlt
and
xlat
dec
jnp
ds
mov
nop
dec
push
sub
frstor
sbb
(bad)
pop
mov
fs
push
xchg
out
push
inc
sub
jo
xor
jmp
in
sub
movs
shl
xchg
jne
add
(bad)
mov
fistp
mov
sbb
pop
retf
ss
(bad)
outs
cmps
stos
retf
test
test
pop
in
ficom
push
mov
(bad)
mov
mov
mov
dec
mov
sbb
jmp
push
mov
and
inc
gs
add
push
call
adc
cmp
loop
fisubr
cmp
mov
pop
pop
jl
inc
push
movs
inc
mov
ins
and
mov
cmp
sub
test
ror
xchg
outs
fcom
add
outs
mov
push
out
shl
xchg
or
add
dec
pop
fwait
push
les
jmp
aad
popa
jge
out
mov
pop
pop
shl
(bad)
push
cwde
pop
adc
or
rcl
mov
leave
sub
aad
adc
out
xchg
mov
add
outs
push
ins
nop
inc
adc
inc
push
gs
jo
test
xor
add
xor
xchg
popf
xchg
sbb
and
mov
sbb
cmp
loope
dec
adc
dec
sub
loopne
or
push
xchg
push
or
mov
mov
sti
push
(bad)
cdq
push
dec
inc
jno
cmps
mov
icebp
popa
push
sti
out
adc
pop
ins
in
lock
cmps
add
and
pop
mov
inc
dec
adc
ret
mov
mov
sti
and
fnstenv
xchg
pop
mov
xor
(bad)
iret
inc
das
mov
lods
call
and
int3
push
aaa
mov
jbe
vpcomuq
add
ins
jmp
lea
js
dec
dec
adc
mov
and
loope
sahf
xchg
gs
mov
dec
inc
sub
xchg
sbb
mov
jnp
lea
ds
test
(bad)
sub
mov
stos
sub
lock
sub
xor
loopne
aas
out
sub
imul
add
pop
pusha
mov
sbb
sub
cmp
push
mov
add
jle
mov
test
or
adc
xor
ret
xor
and
adc
and
mov
sbb
iret
cwde
and
mov
and
fsub
xor
cdq
loop
jns
and
sub
mov
aad
pop
ret
sbb
lock
and
and
fadd
sub
sub
test
(bad)
cmps
xor
in
popa
movs
out
add
lods
lock
shl
ret
loope
out
popa
mov
sbb
adc
mov
mov
lahf
mov
pop
cmp
pop
cdq
stos
pusha
mov
xor
jb
adc
sub
out
pop
dec
add
(bad)
xor
add
xlat
clc
push
ins
jmp
dec
cli
cli
aam
pop
rol
xor
in
lahf
push
add
pop
mov
dec
pop
inc
adc
and
and
(bad)
shr
out
inc
pop
ins
jmp
(bad)
in
nop
cmp
adc
sbb
sbb
cli
test
sbb
xlat
sub
movs
data16
mov
test
test
sub
sbb
add
inc
leave
push
je
xor
mov
inc
ret
das
rcr
push
xor
daa
fisttp
inc
sahf
jne
cmps
or
pop
lea
cmp
adc
and
inc
sbb
shr
push
sbb
xchg
cmp
rcl
or
sbb
ja
pop
xchg
cmp
and
mov
mov
nop
jg
ret
arpl
or
or
add
jge
inc
mov
mov
and
arpl
push
fsub
inc
out
mov
lahf
test
add
or
push
scas
inc
mov
shr
xchg
xchg
push
pop
jg
push
or
aad
cmc
push
inc
add
and
sub
jl
pop
xor
jne
jnp
push
mov
add
push
add
add
add
loope
or
push
bound
ja
mov
mov
push
ss
test
clc
cmp
loopne
in
dec
test
or
mov
and
add
or
jb
add
cmp
mov
inc
dec
push
fsub
or
mov
dec
jmp
inc
mov
xchg
sbb
adc
shl
aaa
push
and
mov
push
sti
mov
stc
push
je
inc
std
push
and
mov
jmp
test
mov
aam
push
or
adc
push
sbb
pop
in
(bad)
mov
adc
stc
add
lods
sbb
push
adc
mov
add
sbb
clc
push
inc
pop
in
jo
mov
test
dec
mov
lea
repz
mov
clc
sbb
adc
add
pop
aam
and
adc
fwait
cmp
jb
test
mov
jle
lock
push
call
mov
sbb
fstp
push
xor
or
or
pop
and
xchg
cmp
dec
mov
pop
dec
inc
jle
inc
dec
dec
cmp
popa
dec
push
or
sub
xor
inc
inc
inc
dec
inc
sub
lahf
mov
pop
je
test
shr
or
je
jle
(bad)
push
sub
das
loopne
push
sbb
dec
pusha
(bad)
or
inc
push
adc
outs
push
fmul
mov
add
mov
push
xor
push
arpl
lods
nop
mov
xor
and
jae
ficomp
repz
push
adc
jns
cmps
dec
mov
or
cs
mov
push
jb
aas
and
sbb
pop
in
nop
adc
pusha
sbb
xor
dec
enter
or
cmp
fstp
movs
aam
pop
fwait
nop
push
pop
lds
pop
retw
jne
jmp
lahf
jmp
cmp
int
js
sbb
outs
sahf
and
cmp
lea
rcr
sbb
sub
outs
push
or
push
mov
add
dec
or
and
push
jl
mov
cmps
cs
mul
and
mov
lds
mov
mov
push
add
add
push
push
xchg
and
ror
xchg
pop
and
aaa
mov
mov
adc
push
jbe
es
pop
data16
or
push
iret
xor
and
adc
cmp
push
nop
adc
ss
xor
ret
push
aas
sub
aaa
js
adc
add
es
pop
sub
jb
lea
pop
outs
adc
mov
pop
arpl
sahf
inc
adc
dec
shl
jle
or
call
inc
add
adc
ss
cmp
xchg
inc
sub
lahf
cmp
hlt
adc
or
mov
push
pop
xor
dec
push
ins
dec
fmul
push
cmp
mov
rcl
push
jecxz
iret
repz
imul
and
and
xor
or
push
add
outs
pop
pop
rcl
jecxz
inc
xchg
movs
jo
xchg
inc
nop
mov
shl
js
cwde
ins
add
or
jns
or
iret
push
add
sar
fwait
popa
adc
ss
fdivr
mov
in
lock
sbb
dec
clc
enter
and
push
enter
sub
ins
in
xor
cmp
mov
fild
cmp
enter
call
and
xchg
sahf
ins
cmps
aad
cdq
jl
sti
xor
(bad)
xchg
pop
inc
addr16
jp
push
push
pop
das
jl
movs
pop
xchg
sub
mov
dec
xor
loopne
imul
dec
and
xchg
(bad)
or
fcom
mov
(bad)
pop
call
pop
pop
fsub
and
sub
or
(bad)
mov
cmp
push
or
cdq
dec
and
outs
sub
add
add
mov
mov
out
inc
lods
inc
(bad)
nop
aas
push
mov
xchg
retf
in
push
inc
pop
inc
pop
hlt
push
or
not
clc
sub
dec
push
mov
xchg
add
mov
mov
cwde
sub
pop
sub
lahf
adc
pop
icebp
lods
push
xchg
add
add
mov
in
cmp
jmp
pop
repnz
loopne
and
jbe
xor
fsubr
fdiv
fxch
push
je
imul
fdivr
sbb
aaa
add
cs
outs
push
push
rcl
pop
in
push
xchg
test
mov
pop
push
or
and
retf
rol
push
sbb
inc
dec
int
adc
or
je
push
push
add
dec
mov
pop
punpckhdq
mov
in
inc
enter
ret
test
ret
daa
and
push
cs
jp
adc
sub
andps
sbb
jl
jmp
add
stos
pop
rcl
stos
and
call
pop
pop
or
push
cmp
or
add
mov
adc
dec
jg
loop
pop
inc
inc
sbb
ja
pop
lock
add
dec
adc
mov
mov
xor
and
imul
add
jbe
test
adc
sbb
out
adc
loop
call
xchg
push
adc
xlat
es
xchg
xor
sti
push
pop
adc
ins
shl
and
test
imul
sbb
cmps
push
mov
jno
imul
addr16
jo
mov
or
das
pop
fiadd
movs
fadd
nop
sbb
fwait
sbb
jbe
outs
inc
jmp
sbb
retf
inc
mov
cs
push
sbb
mov
jo
call
jo
pop
or
mov
or
or
mov
xchg
arpl
cmp
and
and
das
leave
adc
pop
es
imul
and
add
xchg
daa
mov
cmp
ja
shl
sbb
cs
mov
adc
xchg
addr16
or
leave
and
sub
ret
pusha
inc
pop
mov
gs
and
inc
push
xor
das
xor
mov
jle
add
and
cmp
fild
(bad)
sub
fs
sub
pop
adc
imul
cli
(bad)
ins
into
mov
xchg
sbb
adc
sbb
pushf
aam
sub
in
jo
push
mov
je
add
fadd
lahf
sbb
imul
jb
hlt
je
fld
pop
pop
dec
shr
movs
daa
pop
test
(bad)
sbb
jbe
(bad)
nop
fstp
je
jbe
push
or
jb
jbe
js
(bad)
clc
add
sub
jno
jbe
xor
in
or
adc
dec
dec
icebp
test
shl
das
sub
sbb
jmp
jb
cmp
inc
xchg
and
xor
aam
fs
fnsave
and
add
xchg
mov
pushf
and
pop
mov
adc
push
and
dec
out
sbb
xchg
fs
and
aas
and
add
aaa
xchg
and
aaa
mov
rcl
out
bound
jb
xchg
rol
adc
inc
jnp
xor
mov
add
xor
pop
and
add
or
shl
add
js
add
into
or
or
adc
loope
in
movs
lds
sbb
psubb
mov
lea
leave
dec
jmp
lea
iret
pop
cmp
dec
push
or
mov
mov
mov
inc
sub
mov
and
inc
add
mov
pop
lock
sub
push
aad
or
enter
popa
pop
in
fucomi
mov
std
ins
jl
pop
push
in
lea
jae
sub
(bad)
add
mov
adc
das
frstor
jmp
pop
cmp
loopne
retf
test
jne
shl
dec
int3
call
hlt
mov
add
data16
inc
dec
sub
dec
call
pop
adc
(bad)
dec
mov
inc
popf
xchg
shl
daa
jbe
sub
das
aaa
pop
add
popa
dec
add
cmps
call
jmp
daa
inc
sbb
dec
ret
inc
ret
imul
das
aaa
inc
ja
dec
ja
jmp
or
and
fimul
pop
and
mov
xchg
int3
and
pop
add
movs
je
ret
dec
(bad)
clc
test
js
js
sbb
mov
nop
ja
jle
dec
sti
sahf
idiv
nop
push
fs
push
add
je
add
cmp
call
or
fadd
adc
popf
add
inc
push
sbb
push
jle
scas
or
push
adc
(bad)
mov
push
sbb
mov
and
sbb
xchg
inc
(bad)
adc
adc
outs
add
cmps
mov
imul
add
sub
adc
sbb
mov
sbb
add
cmp
outs
aaa
ins
imul
and
pop
push
rol
xor
add
fs
xor
loope
mov
xor
fisttp
jp
push
pop
xor
(bad)
and
int
jle
mov
xor
clc
popf
ret
and
call
xor
adc
adc
out
(bad)
pop
push
out
out
xlat
or
and
or
repz
add
mov
cld
lods
add
add
jl
shl
xlat
test
inc
call
into
sub
push
nop
push
(bad)
pop
cdq
idiv
or
xchg
out
(bad)
xlat
and
(bad)
or
ret
popa
ror
or
aam
push
cli
xchg
cmp
xor
fldcw
mov
xchg
xchg
cmp
int3
or
ss
ret
ror
cmp
aas
fidiv
rcr
cmp
fmul
jmp
cmps
nop
and
mov
(bad)
in
cmp
mov
cmps
nop
and
shl
or
loopne
cmp
nop
fmul
call
mov
add
js
xor
test
push
bound
shr
push
lock
xor
mov
mov
sahf
or
test
cld
sti
add
icebp
jmp
xor
push
add
push
and
das
xchg
movs
sub
dec
lock
inc
jae
dec
int
push
sbb
scas
sbb
clc
cmp
xchg
enter
mov
out
or
add
sti
inc
jne
mov
sar
aaa
cmp
or
adc
jl
mov
rcl
jmp
ror
cmp
shr
les
add
imul
xchg
leave
jmp
int
xor
nop
push
pop
add
ret
or
mov
or
pop
imul
mov
scas
sbb
push
mov
dec
sbb
mov
adc
or
add
mov
and
leave
mov
gs
add
or
ficom
cmp
mov
add
sbb
dec
sar
mov
imul
mov
xor
adc
sar
enter
movs
(bad)
int3
enter
sbb
int3
aam
and
fsub
fcomp
dec
call
and
(bad)
sti
mov
add
jns
sti
enter
mov
sti
fdiv
out
or
push
push
jge
cld
mov
add
test
cld
fadd
inc
fwait
and
inc
or
dec
and
or
imul
mov
and
sbb
xchg
out
imul
push
int3
and
fisttp
cmc
sub
add
push
popa
and
hlt
xor
sub
xor
mov
pop
dec
adc
cmp
mov
inc
or
rol
jae
fiadd
dec
jae
xor
in
mov
xor
dec
push
mov
xor
pop
aam
push
dec
jae
loopne
in
dec
xor
jne
push
pop
inc
or
popf
ins
out
push
(bad)
movs
sar
mov
int3
jo
je
mov
mov
out
js
ret
ds
stos
(bad)
cli
js
call
and
mov
movs
mov
in
nop
sbb
or
sub
movs
mov
add
sbb
test
dec
stos
bound
in
xchg
mov
or
data16
sar
cmp
dec
mul
jle
mov
and
jl
mov
jecxz
outs
jmp
je
dec
popf
sub
test
js
fild
daa
int
cwde
test
or
cmp
mov
mov
out
dec
xchg
and
outs
jmp
push
add
shl
loop
(bad)
mov
sbb
inc
or
mov
pop
add
int
add
add
jnp
adc
or
pop
hlt
sbb
mov
dec
add
ret
xor
add
push
test
push
fcmovu
add
xor
lea
out
push
sbb
mov
xlat
xlat
cmp
sbb
xchg
sbb
ja
dec
sar
xor
add
cmp
mov
hlt
stos
adc
and
sbb
(bad)
fcomp
and
or
popf
push
jge
(bad)
push
inc
mov
adc
les
xor
mov
int3
xor
dec
clc
(bad)
jmp
mov
mov
push
test
xchg
lds
xor
mov
test
inc
je
ror
mov
test
cmp
or
adc
inc
sbb
jne
outs
add
adc
adc
pop
pop
adc
jmp
push
fsubr
push
inc
imul
push
pop
jg
out
jmp
aad
push
add
xor
lods
mov
adc
pop
mov
push
push
ror
inc
div
les
je
out
cdq
adc
add
rcr
dec
mov
aas
ins
cmp
and
jne
or
adc
popf
xor
mov
sbb
inc
xor
ins
add
das
mov
test
and
cld
imul
add
mov
rcl
ret
mov
jno
ret
push
lahf
inc
xchg
push
ins
push
xor
xchg
call
jo
movs
loop
inc
ret
ffree
imul
mov
add
adc
mov
clc
daa
add
push
jmp
jno
dec
les
xchg
pusha
pusha
dec
lea
hlt
call
repnz
lock
iret
xor
add
loope
or
dec
push
xor
pop
(bad)
mov
fsub
add
mov
mov
sbb
mov
add
and
mov
mov
or
pop
sahf
jnp
sahf
pop
xchg
sbb
lods
rcr
es
jae
push
adc
adc
cmp
cmp
cmp
sbb
sbb
lahf
xor
ret
addr16
test
mov
repnz
dec
lock
jo
add
xchg
jp
push
clc
aas
js
les
push
xchg
in
shl
xchg
adc
dec
ja
sbb
dec
xor
lds
adc
movs
mov
pushf
dec
xchg
stos
dec
cmps
xor
mov
push
call
pop
push
jno
dec
xchg
pusha
cwde
pop
cwde
shl
inc
add
clc
daa
int
jae
nop
nop
loopne
mov
sub
fwait
xchg
and
mov
adc
mov
bound
inc
popa
call
movs
jns
imul
out
movs
cmp
fsub
addr16
out
and
loopne
and
sub
data16
cli
into
mov
adc
xor
mov
call
mov
or
cmp
cmp
cmp
adc
push
xor
jae
sbb
sbb
xchg
cmp
int
and
and
leave
jae
cmp
sub
sub
daa
int
sub
xor
xor
sar
xor
cmp
and
push
data16
lock
nop
(bad)
call
(bad)
sub
ror
push
out
ins
imul
lods
rol
sbb
(bad)
fadd
push
jns
pop
aas
scas
adc
loopne
push
jbe
mov
adc
cmp
lock
and
and
(bad)
adc
and
mov
out
or
dec
xor
sub
mov
inc
adc
or
cmps
pop
xor
dec
mov
xor
pop
add
pushf
or
leave
cli
xchg
int
lea
nop
ret
stc
add
inc
or
mov
ins
jge
(bad)
sub
mov
adc
fsubr
dec
jmp
and
sbb
cmp
adc
or
and
stos
add
pop
pop
add
cmps
imul
or
call
das
inc
out
xchg
dec
adc
inc
add
or
test
add
test
sbb
xor
sbb
or
inc
ja
jl
mov
mov
fdivp
cmp
jne
sub
out
mov
sub
test
mov
fs
push
mov
and
les
sti
mov
sbb
and
mov
pusha
nop
dec
adc
bound
sbb
jbe
adc
movs
push
pop
xchg
or
and
jne
jne
mov
aad
test
jae
push
test
or
sahf
cmp
sbb
mov
adc
pushf
sbb
or
jle
lods
pop
into
xchg
xor
inc
sar
jl
mov
push
test
push
ins
shl
add
ja
xchg
inc
cmps
mov
push
call
sub
sbb
test
shr
mov
inc
add
mov
sub
clc
pop
pop
imul
sub
ja
loope
cmp
mov
mul
sar
push
aam
xchg
sbb
mov
add
enter
xchg
or
xchg
sub
cld
mov
mov
pop
(bad)
and
or
cmps
and
dec
xchg
jb
jns
adc
xchg
cmp
push
pop
pop
cvtdq2ps
pop
pop
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
xor
xor
pushf
pushf
pushf
pushf
xor
ss
pushf
pushf
pushf
pushf
cmp
cmp
pushf
pushf
pushf
pushf
cmp
ds
pushf
pushf
pushf
pushf
and
and
pushf
pushf
pushf
pushf
and
es
pushf
pushf
pushf
pushf
sub
sub
pushf
pushf
pushf
pushf
sub
cs
pushf
pushf
pushf
pushf
adc
adc
pushf
pushf
pushf
pushf
adc
push
pop
pushf
pushf
pushf
pushf
sbb
sbb
pushf
pushf
pushf
pushf
sbb
push
pop
pushf
pushf
pushf
pushf
add
add
pushf
pushf
pushf
pushf
add
push
pop
pushf
pushf
pushf
pushf
or
or
pushf
pushf
pushf
pushf
or
push
cmovle
sahf
lock
icebp
repnz
fidiv
das
popa
call
call
add
inc
dec
inc
or
push
jecxz
and
int3
pop
mov
and
ds
call
mov
add
jno
ss
lahf
test
ds
aam
ja
stos
sub
push
iret
nop
loopne
cmp
or
psrld
retf
outs
cmp
in
dec
and
aas
xchg
fwait
adc
lods
dec
out
jb
pop
or
nop
pushf
mov
jb
adc
and
mov
jg
add
out
xor
mov
dec
mov
(bad)
pusha
popf
xor
push
(bad)
es
retf
and
or
fcom
xchg
mov
mov
mov
mov
out
outs
and
and
stc
or
jns
jl
sub
pop
sbb
xchg
imul
mov
(bad)
push
call
in
push
call
call
push
lock
add
lock
inc
lahf
pop
ds
or
(bad)
push
xlat
and
ret
movs
mov
jge
add
(bad)
sbb
repnz
test
enter
out
test
xchg
push
cmp
xchg
mov
mov
adc
and
sub
pop
cmp
mov
pop
cli
cmp
or
pop
push
mov
call
mul
pop
ins
(bad)
cmp
xchg
jmp
outs
shr
(bad)
imul
mov
jns
xor
and
out
(bad)
sahf
lods
jl
les
pop
movs
push
movs
pop
out
popf
mov
dec
popa
jg
mov
popf
scas
nop
idiv
mov
xor
div
call
adc
iret
xor
pusha
outs
mov
push
mov
dec
(bad)
cld
sahf
div
and
iret
repz
stos
mov
cmp
in
mul
adc
xor
mov
inc
cmps
inc
push
ss
push
outs
fdivr
out
mov
push
adc
dec
sbb
sahf
div
enter
popf
cmp
in
adc
and
dec
imul
cmps
sub
imul
and
sbb
mov
adc
jae
fcmove
sub
and
ja
lods
or
add
call
fnstcw
cmps
add
mov
jmp
inc
mov
js
add
or
add
dec
push
cld
sbb
enter
adc
push
in
out
fcom
pcmpgtd
mov
call
dec
sub
sbb
and
xor
sbb
nop
sbb
or
add
js
inc
push
enter
sbb
mov
les
inc
adc
push
pushf
or
jo
or
and
in
sbb
mov
cmp
adc
adc
nop
adc
rol
lds
cmp
or
enter
nop
rcl
or
fmul
sub
ja
mov
cmp
rcr
shl
or
fdiv
lds
and
int3
mov
fmul
pop
nop
adc
or
in
nop
pusha
daa
fs
xor
adc
cmp
ror
cwde
test
or
cmp
in
adc
punpckhbw
dec
pop
jns
cpuid
adc
xchg
adc
test
add
add
nop
fcom
test
aam
pop
sub
or
test
test
aas
test
and
or
mov
xor
ins
js
scas
jno
xchg
or
fsubr
inc
add
xor
add
xchg
mov
xchg
ins
fcom
cli
xchg
ds
push
dec
test
mov
jo
adc
xor
sbb
leave
call
push
add
sbb
jl
sub
jbe
std
scas
cwde
push
aam
mov
inc
(bad)
shr
(bad)
sbb
retf
mov
jl
fidiv
mov
add
push
mov
add
lods
aam
retf
sub
retf
xchg
xor
cmp
jne
sahf
xchg
ror
lods
jo
retf
test
dec
jmp
pushf
adc
jb
dec
shl
and
adc
sub
and
xor
rcr
xor
xor
ret
adc
mov
xlat
cmp
cmp
add
movs
ss
in
push
add
or
fs
push
lods
push
in
stos
(bad)
mov
xor
es
in
in
or
jne
(bad)
dec
daa
imul
cs
lahf
gs
inc
gs
adc
cs
pop
adc
adc
neg
cdq
sbb
sbb
ret
sub
pop
add
(bad)
imul
scas
or
(bad)
sub
out
push
cmp
sbb
adc
inc
inc
and
ucomiss
or
cmp
push
in
mov
adc
add
mov
xchg
mov
push
es
js
(bad)
fwait
mov
pop
lds
mov
fild
xchg
push
and
and
lea
in
mov
mov
loopne
popa
test
ror
das
hlt
and
je
adc
(bad)
icebp
fs
out
stc
mov
pop
ficomp
jnp
add
int
push
sbb
cmp
bound
pop
adc
add
enter
adc
jb
repnz
adc
or
out
gs
mov
pushf
jb
movs
nop
dec
push
or
pusha
aas
mov
push
and
jnp
sub
lea
adc
adc
cmp
fs
aaa
mov
je
push
inc
pop
dec
adc
add
add
adc
scas
mov
sub
test
xchg
mov
out
xlat
and
dec
das
mov
xchg
sub
mov
in
in
lea
push
or
pop
inc
add
inc
xor
lds
sub
aaa
in
or
movs
mov
clc
mov
movs
sub
iret
xchg
xchg
and
arpl
mov
or
dec
mov
xchg
add
cwde
or
(bad)
mov
adc
shl
sbb
mov
mov
pop
addr16
cld
lods
(bad)
out
sbb
mov
fstp
push
jg
sbb
pop
pop
mov
mov
mov
or
cmp
mov
int
retf
pop
(bad)
adc
fwait
sbb
fcom
or
frstor
in
addr16
ja
sbb
clc
sbb
add
jmp
cmp
stos
add
xchg
(bad)
cmp
xchg
adc
mov
and
sub
mov
enter
and
test
and
or
pop
ds
je
sbb
leave
fs
or
jne
ds
push
push
push
pop
leave
sbb
push
out
or
(bad)
sbb
(bad)
call
div
cmp
retf
push
push
or
add
cmp
retf
pop
mov
inc
ss
(bad)
lea
les
mov
and
or
shl
sti
icebp
es
mov
inc
and
push
adc
pop
adc
adc
xcrypt-cfb
cmps
movs
mov
arpl
and
stos
mov
mov
in
aas
ins
int
cmp
pop
adc
mov
adc
xchg
sbb
push
daa
mov
sbb
das
cmp
cmp
outs
enter
ins
adc
or
fsubr
pop
repnz
aaa
push
fwait
dec
enter
jbe
mov
push
push
sub
in
test
cmp
and
unpcklps
and
aas
in
inc
mov
enter
mov
sbb
rol
pop
inc
dec
and
push
xor
adc
push
(bad)
out
mov
cld
idiv
sub
jae
sub
shl
popf
cmp
pusha
and
adc
sbb
cmp
push
jge
hlt
xchg
mov
xchg
ficomp
movs
sub
xchg
cmp
data16
cmp
ja
xor
add
and
call
call
push
sub
mov
or
sub
sbb
xchg
cmp
xchg
movs
test
sbb
in
jo
cmp
jg
sbb
cdq
les
push
xchg
ins
popa
loope
mov
jge
sahf
xchg
xor
xor
inc
cmp
cmp
mov
sub
mov
in
sar
mov
push
lods
mov
pop
push
add
xor
dec
(bad)
inc
lahf
pop
pop
xchg
retf
loop
mov
mov
mov
pop
mov
stos
out
ret
xchg
add
adc
inc
popa
in
pushf
popf
fs
jl
adc
mov
or
(bad)
xchg
iret
scas
and
sahf
cmps
pushf
mov
dec
xor
test
adc
add
sub
xchg
test
jo
loopne
mov
inc
call
lods
fild
(bad)
ja
adc
sbb
add
cmps
xor
mov
xchg
adc
scas
and
or
outs
mov
or
adc
ret
jmp
sub
sub
sbb
add
mov
aas
cmp
ins
rol
jnp
aaa
test
add
adc
jb
mov
clc
jne
pop
add
adc
pop
nop
inc
add
xlat
mov
(bad)
sbb
and
sar
or
mov
stos
test
imul
or
jno
pop
mov
ret
pop
dec
fs
pop
sbb
stos
mov
inc
fcom
or
data16
xchg
icebp
xor
fs
jge
jo
adc
adc
fbld
adc
pop
les
and
xchg
mov
dec
mov
inc
pop
adc
in
push
aam
inc
call
imul
fs
(bad)
iret
mov
adc
push
inc
cmp
imul
(bad)
dec
push
sbb
mov
outs
mov
pop
xchg
inc
xor
push
and
inc
add
pop
cmp
inc
or
jge
lods
cvtps2pd
scas
mov
adc
fimul
push
pop
add
scas
mov
mov
mov
mov
jmp
stos
xor
add
enter
sbb
hlt
nop
daa
imul
push
cdq
(bad)
cld
mov
aam
mov
mov
inc
mov
pop
add
getsec
adc
jmp
cmp
xlat
dec
mov
jecxz
inc
inc
jbe
loop
pop
mov
ins
adc
mov
xor
les
adc
pusha
mov
(bad)
(bad)
gs
fild
jae
inc
jns
push
call
jns
je
ret
jb
sub
je
mov
or
add
out
fadd
jo
mov
adc
inc
xlat
cs
sub
test
mov
mov
xchg
lock
inc
imul
dec
lds
ror
ins
pop
imul
call
enter
(bad)
test
xor
cvttps2pi
or
xchg
xor
or
mov
sbb
pop
enter
pop
ss
or
ds
xchg
mov
inc
(bad)
and
loopne
(bad)
cmp
add
inc
and
or
push
jp
xor
sahf
ror
stos
xlat
fwait
rol
or
cld
cmp
push
add
mov
xchg
add
setae
fcom
mov
pop
or
adc
test
xchg
dec
or
and
add
inc
dec
push
or
jp
xlat
sub
movs
push
sub
jecxz
js
mov
or
add
dec
jns
mov
add
(bad)
add
cmps
and
add
jne
fdivr
or
int
dec
sahf
mov
rcl
hlt
call
xor
inc
pop
fisub
out
ret
in
and
cmps
and
nop
iret
fdivr
sbb
mov
or
xchg
xor
sbb
rcpps
dec
paddsb
rol
hlt
lock
inc
sub
les
movs
int3
jno
sbb
xor
push
or
cmp
shr
ins
mov
shr
scas
and
cmc
in
jb
sbb
and
popa
pop
retf
gs
xor
psubusw
ins
pop
pop
shl
stc
adc
sbb
jne
mov
push
hlt
xchg
or
shl
mov
ficom
inc
shl
dec
push
jae
enter
xor
dec
cmc
xchg
mov
adc
lods
adc
xlat
(bad)
xchg
jg
test
mov
sub
ret
fidiv
cmc
cli
xchg
add
arpl
es
adc
xor
jmp
sub
xchg
push
and
pop
outs
pushf
arpl
sub
daa
sahf
ins
inc
sbb
outs
jo
sub
cmp
inc
outs
arpl
inc
jb
(bad)
sub
sub
or
add
fnstsw
outs
ja
dec
aam
mov
jp
push
mov
test
lahf
mov
dec
sbb
dec
jge
mov
ret
or
(bad)
repz
mov
adc
sbb
mov
(bad)
cmp
jae
inc
inc
cmp
adc
in
add
sbb
add
or
sar
mov
enter
pop
add
jnp
push
sub
xor
ins
adc
or
loopne
into
mov
mov
fcom
push
fcomp
movs
nop
xchg
retf
mov
fisttp
dec
ja
and
xor
pop
add
nop
dec
or
or
push
int3
int3
gs
push
jecxz
(bad)
and
lods
mov
fbstp
pop
or
mov
xchg
fdivr
in
mov
sbb
aaa
lods
sbb
repz
xor
sbb
and
js
sbb
pusha
jno
mov
push
in
shr
mov
add
pop
dec
sbb
js
sbb
cmp
retf
mov
cmp
sbb
lods
out
popf
pop
push
adc
test
ins
jmp
mov
mov
sbb
mov
adc
cli
cmpxchg
add
and
inc
fiadd
test
cmp
test
mov
jae
shr
out
imul
sbb
add
push
fistp
inc
ins
push
cdq
(bad)
xchg
ret
xchg
xchg
mov
mov
xchg
pop
dec
adc
pop
rcl
enter
xsavec
add
sub
nop
xor
pushf
xor
imul
int3
outs
add
out
data16
mov
leave
outs
and
leave
or
retf
dec
arpl
iret
outs
and
mov
cmp
bound
push
imul
mov
ins
inc
jbe
or
push
dec
mov
jg
sub
call
push
ins
icebp
mov
mov
jo
popa
xchg
outs
adc
outs
inc
push
pop
mov
fadd
xor
es
cmp
fidivr
mov
out
shl
aaa
dec
sub
pop
sub
dec
adc
jnp
and
movs
test
cs
ins
mov
pop
sbb
xor
imul
mov
or
sbb
jo
not
mov
add
scas
add
mov
ins
retf
aas
xlat
jae
fbstp
add
jno
add
mov
scas
add
test
jo
xor
and
jns
xor
retf
les
cld
movs
and
add
add
jae
add
and
push
adc
les
lds
pop
int
pop
mov
rcr
adc
imul
mov
cmps
dec
int3
mov
sbb
inc
jbe
(bad)
not
mov
adc
sub
adc
adc
(bad)
sar
xlat
sbb
adc
leave
inc
sub
push
adc
push
pop
movs
xor
dec
mov
sub
sub
or
cmp
adc
repnz
icebp
cmp
inc
ret
out
cwde
mov
lock
lock
jbe
into
push
cmp
add
push
les
xchg
xchg
mov
les
push
nop
dec
cmp
data16
dec
daa
add
ret
pop
test
or
push
inc
sub
dec
je
jb
mov
test
enter
push
sahf
mov
loopne
js
mov
je
jo
outs
cmp
mov
add
(bad)
fmul
or
or
pop
pop
sub
xchg
add
add
cs
add
push
fadd
lock
dec
bswap
int3
mov
sahf
mov
js
js
ret
xlat
dec
pop
xchg
xchg
out
add
sbb
int3
or
data16
fiadd
(bad)
je
lods
add
xor
inc
loop
sbb
or
xchg
cmp
mov
test
or
(bad)
ror
pop
sbb
pop
rcl
cmp
inc
test
lahf
call
pop
sbb
xchg
push
sbb
pop
sbb
test
or
mov
lods
sub
add
pop
repnz
repz
mov
push
and
js
jno
sbb
ds
adc
out
inc
add
cdq
mov
jne
ficom
jo
push
sub
or
push
xlat
inc
xor
xor
xor
and
(bad)
cmp
mov
mov
pop
inc
dec
xchg
(bad)
cmc
or
cld
xor
shl
cmp
push
fld
cmp
(bad)
fisubr
dec
int3
dec
dec
inc
add
ja
mov
out
sub
adc
shl
push
cmp
mov
pop
jb
call
cmps
pop
pusha
fcom
sbb
cmp
inc
out
imul
inc
mov
sub
mov
inc
adc
mov
push
mov
fisttp
ror
stos
or
icebp
pusha
push
aam
pusha
adc
sub
cs
aam
sbb
cmp
aam
sub
mov
imul
inc
pop
daa
pop
sub
iret
push
adc
adc
aad
cmp
bound
loopne
inc
ret
aaa
movs
sub
lock
jg
xor
lahf
add
getsec
cmps
sub
push
fcmovnu
(bad)
mov
jge
sbb
jno
fdivr
xor
mov
sub
cdq
mov
add
xor
pop
aad
cdq
pop
add
adc
and
bound
aas
fsubr
test
or
shl
das
jmp
aaa
sbb
mov
test
xlat
inc
fsubr
push
and
xor
xor
out
add
rol
aam
movs
daa
push
mov
pop
js
push
add
out
jecxz
(bad)
lock
(bad)
das
es
retf
ret
gs
pop
adc
je
mov
add
imul
dec
pop
mov
enter
(bad)
cmp
inc
xchg
jo
and
repz
dec
leave
and
enter
and
imul
fcomp
mov
pop
pop
or
test
add
adc
and
scas
lea
out
popf
xor
sub
xchg
and
and
xchg
arpl
sub
xchg
inc
not
jmp
jg
jns
mov
test
add
sbb
jb
add
jb
clc
test
fnstsw
inc
fldenv
ds
test
pop
clc
add
xor
sub
inc
mov
add
inc
rol
or
not
mov
push
add
test
push
mov
push
pop
pop
add
clc
add
add
add
data16
cmp
je
imul
add
outs
lea
sub
jno
jae
cmp
add
ja
bound
inc
inc
mov
push
add
mov
adc
fs
cmp
add
scas
pop
mov
or
add
and
adc
pop
pop
push
pushf
fdiv
adc
inc
call
fnsetpm(287
fistp
pop
jecxz
clc
popf
mov
inc
cmp
push
in
shl
jne
mov
sub
mov
sub
adc
push
cmp
jne
sub
add
outs
push
sbb
neg
push
loop
aam
and
push
fsubr
rol
pop
or
push
js
xchg
xor
in
mov
sub
cmp
mov
shr
shl
aas
jp
or
mov
push
pop
inc
mov
mov
aas
jno
or
xor
dec
gs
lock
sahf
and
add
xchg
shl
push
pop
add
and
xor
loop
popa
loope
or
add
pusha
and
push
jo
xchg
add
cdq
(bad)
add
mov
mov
add
adc
add
xchg
jp
scas
xchg
mov
pop
shl
xchg
and
out
cmp
les
repz
push
lea
sbb
(bad)
out
sti
push
(bad)
mov
or
nop
lods
and
hlt
hlt
mov
in
(bad)
arpl
test
outs
sbb
aad
push
adc
cmp
stos
test
jb
and
adc
mov
repz
xchg
push
test
mov
mov
add
push
push
(bad)
test
mov
xchg
cdq
xor
and
in
cmp
or
or
imul
les
dec
xchg
dec
ret
push
jae
dec
in
bound
xchg
outs
fstp
sub
and
pop
cmp
jg
jbe
mul
fadd
jne
add
xchg
daa
ins
loopne
or
add
and
adc
sub
(bad)
ror
rcr
mov
xor
xchg
hlt
xchg
ja
ss
pop
jge
jae
(bad)
stos
fwait
adc
popa
add
clc
mov
outs
or
or
int3
and
mov
jno
push
pusha
je
push
add
lock
push
ror
aas
sbb
xchg
cmps
int
outs
mov
and
or
mov
and
sahf
enter
push
add
push
les
loopne
dec
or
test
mov
nop
and
or
pop
cmp
aad
iret
sbb
pusha
pop
int
adc
mov
adc
test
test
sbb
into
retf
iret
push
lock
or
scas
sub
(bad)
jl
in
shl
repnz
and
mov
dec
dec
push
sbb
add
movs
rol
ins
push
in
mov
scas
adc
loop
mov
sub
or
loopne
shr
or
lods
and
push
and
ret
pop
out
loop
sub
pop
jmp
xor
push
push
fcomp
jmp
and
sar
daa
cwde
adc
std
xchg
or
and
sbb
inc
or
clc
leave
xor
(bad)
test
inc
adc
and
cmp
add
and
xchg
mov
adc
mov
add
adc
les
push
adc
loopne
inc
js
pop
lahf
jge
adc
jae
ret
push
imul
mov
dec
aam
add
pop
sub
add
push
and
push
test
fst
sbb
adc
cmp
lock
add
xor
dec
add
add
and
xchg
stos
nop
scas
sbb
inc
xchg
xchg
or
xchg
xchg
push
lds
pop
dec
and
mov
loopne
or
or
dec
adc
xor
sbb
dec
add
lock
cmps
out
repnz
add
and
test
dec
mov
sahf
push
cmp
js
or
pop
bound
push
sar
mov
cmp
sub
cmp
jo
cmp
fist
setae
mov
add
cmp
icebp
shl
out
jne
xor
push
xor
mov
cld
lock
adc
dec
je
sub
mov
jne
and
and
mov
pop
push
shr
bound
test
push
mov
jb
sub
out
mov
adc
jne
imul
iret
jg
pushf
push
sbb
jne
xchg
mov
xor
mov
out
rol
sbb
mov
movs
dec
adc
add
outs
dec
push
loop
or
add
inc
dec
(bad)
adc
popa
pop
and
and
out
call
mov
pusha
xchg
scas
sub
mov
xor
das
sbb
and
mov
or
iret
(bad)
sbb
(bad)
stos
sub
or
loope
push
call
mov
sbb
mov
mov
cmp
in
popf
sbb
scas
jne
imul
pop
jbe
rcl
or
adc
add
mov
cmp
inc
add
ins
inc
mov
cmc
aam
pop
rcl
inc
mov
jmp
clc
test
mov
mov
adc
inc
aad
xor
mov
lods
dec
push
and
inc
pusha
sbb
sbb
add
cwde
sbb
movs
je
pop
xchg
mov
adc
and
sub
push
lock
jl
xchg
dec
push
dec
lock
test
sub
ror
dec
add
or
dec
and
adc
jle
adc
inc
add
and
enter
inc
xchg
(bad)
fdivr
inc
pop
loopne
inc
or
inc
pushf
xor
sbb
inc
sub
and
pop
push
dec
loope
pop
aaa
xor
mov
fisttp
js
xchg
inc
jno
test
lahf
aas
add
sub
xchg
mov
mov
stos
mov
jae
push
jl
pop
(bad)
and
sbb
mov
in
xchg
pop
or
push
push
mov
adc
adc
hlt
or
sahf
mov
xchg
mov
add
shl
jmp
push
cmp
dec
loopne
push
out
jp
push
mov
imul
sub
xor
cmps
movs
sbb
push
mov
pushf
paddusb
sbb
cmp
sub
sbb
adc
adc
sbb
dec
mov
pand
add
pop
out
mov
or
jecxz
scas
xlat
sbb
fnsave
sub
add
mov
sbb
xor
jmp
jo
add
or
fsub
pop
jb
push
test
xchg
jno
pop
and
xor
pop
push
push
cmp
sbb
jo
clc
arpl
add
push
ins
pusha
out
push
fucom
adc
inc
fdivr
repnz
add
sbb
das
loopne
mov
jle
jmp
sub
loop
sbb
dec
cmps
or
jmp
std
sbb
scas
push
mov
inc
and
mov
mov
movs
push
jecxz
outs
mov
ror
fimul
mov
ins
jp
jmp
pop
sbb
bound
ins
cmp
or
cs
addr16
mov
fild
pop
dec
ret
pop
ins
ins
inc
outs
xchg
inc
sub
cmp
sub
or
cmp
inc
pop
dec
inc
test
adc
das
jno
aas
pusha
fcmovb
loopne
sbb
push
adc
imul
cmp
push
push
dec
or
daa
rol
jb
inc
div
mov
popf
jb
adc
push
nop
hlt
xor
gs
sbb
push
test
enter
outs
mov
scas
dec
rol
jae
pusha
lea
add
icebp
in
loope
xchg
test
mov
mov
aas
pushf
add
(bad)
cmp
cld
inc
clc
js
fadd
sti
dec
cmp
add
dec
jne
mov
loop
(bad)
fiadd
scas
cmp
fwait
push
lods
mov
lock
rol
outs
data16
adc
(bad)
adc
and
cmp
je
ret
and
cmp
mov
ja
push
mov
cmp
lds
cwde
mov
adc
leave
mov
and
fbstp
aas
push
sbb
and
inc
add
loopne
shl
add
je
adc
adc
dec
jne
mov
dec
lods
imul
inc
les
pop
inc
(bad)
dec
push
cmp
sub
shl
or
push
mov
and
addr16
dec
add
pop
adc
jae
mov
xor
mov
add
fsub
pop
adc
fbld
cld
push
ja
jbe
push
mov
adc
and
add
mov
or
mov
add
mov
inc
dec
jae
xchg
and
or
mov
mov
mov
in
cmp
adc
lahf
arpl
xchg
add
lods
lods
push
mov
inc
sbb
mov
jne
inc
xor
(bad)
push
cmp
aam
dec
cmp
cwde
hlt
das
mov
or
movs
xor
adc
adc
rol
imul
jne
leave
adc
nop
imul
jo
nop
xchg
fs
push
adc
cmp
movs
mov
pop
and
dec
push
sub
mov
and
adc
pop
es
jnp
push
or
clc
mov
mov
and
(bad)
push
adc
aam
scas
sbb
adc
push
or
imul
pop
push
push
inc
inc
inc
das
jp
adc
and
push
push
or
xchg
xchg
sbb
add
mov
dec
sub
add
jae
inc
pop
imul
cmp
cmp
or
push
out
outs
adc
and
mov
outs
jg
xchg
push
daa
mov
addr16
and
jno
outs
das
movs
add
retf
jo
sub
loopne
or
inc
addr16
neg
rol
sub
loopne
pop
mov
sbb
inc
sbb
or
xor
and
or
pop
lods
or
test
pop
sub
xor
sbb
adc
out
add
js
mov
fstp
jns
addr16
nop
inc
ds
pop
(bad)
movs
and
sbb
and
aam
call
imul
inc
dec
sbb
popf
pushf
add
jne
es
sub
dec
push
jbe
xor
sub
outs
pusha
icebp
sub
xchg
sub
sub
pop
cmc
push
fdivr
popf
or
test
jg
xor
sbb
into
cli
jle
cmp
cld
dec
in
in
in
mov
or
jle
in
xchg
cmp
adc
inc
loopne
pop
ret
and
movs
bound
ss
fdiv
ins
push
sti
adc
pop
jmp
mov
mov
mov
mov
ds
mov
cmp
inc
rol
adc
pusha
jne
inc
jg
dec
sub
inc
sub
cld
add
or
add
test
jecxz
sti
pushf
mov
imul
pop
inc
cmp
test
jne
sub
xor
inc
(bad)
push
sub
push
xor
dec
loop
loope
call
je
dec
push
sub
jmp
in
add
jecxz
hlt
adc
ja
and
sub
dec
inc
mov
xchg
and
clc
call
(bad)
outs
sub
enter
test
sub
ins
xor
xchg
lock
or
sub
mov
push
xor
call
call
adc
cmp
imul
dec
fmul
mov
inc
leave
mov
or
jae
adc
mov
mov
mov
stos
jp
push
xchg
mov
stos
test
test
xchg
icebp
adc
shl
sbb
push
outs
mov
xor
cmp
test
push
jmp
or
in
sbb
ret
sbb
call
add
js
mov
in
mov
les
mov
mov
xor
inc
jg
mov
ds
scas
rol
push
dec
jbe
inc
inc
or
aas
jmp
(bad)
or
or
in
in
aas
lds
pop
cmc
jne
ret
ror
icebp
(bad)
fmul
sbb
adc
cmp
inc
pusha
pop
mov
xchg
mov
xor
dec
dec
movs
jnp
adc
nop
je
cmp
sub
adc
fs
fwait
mov
mov
mov
aaa
or
out
pop
add
or
fbld
fadd
add
in
mov
mov
mov
adc
js
rcl
mov
push
pop
enter
inc
mov
popf
sub
scas
and
xchg
inc
sbb
dec
or
pushf
jmp
mov
lods
or
pusha
xchg
in
sub
sub
mov
ss
mov
hlt
cld
dec
mov
add
xchg
fsubr
or
mov
repnz
xor
add
adc
addr16
mov
rcr
push
sbb
mov
out
xchg
test
dec
dec
es
add
cmps
or
jmp
dec
stos
push
aam
ror
sbb
push
gs
xor
mov
push
pop
push
hlt
fild
push
ss
inc
shr
sub
rol
mov
or
inc
lods
popa
and
xlat
push
inc
loop
inc
mov
dec
cmp
not
lods
mov
sub
das
sub
arpl
pop
dec
inc
inc
push
add
imul
pop
fwait
rcl
push
dec
dec
dec
xor
inc
add
or
fist
fsub
and
jne
cmp
inc
cmp
loop
cmp
and
push
shr
fld
push
mov
and
call
mov
sahf
xchg
mov
mov
adc
inc
xlat
inc
cdq
dec
sbb
push
mov
sub
movs
aas
cmp
in
rcr
adc
xchg
jbe
and
and
sub
push
imul
adc
and
setl
add
enter
push
pop
fcom
jb
or
dec
stos
sbb
or
sub
ret
push
ror
mov
imul
mov
popf
je
ret
inc
iret
mov
cmp
pop
in
push
pop
add
dec
inc
les
push
mov
sbb
ja
sbb
jae
adc
dec
pop
arpl
lea
lock
xor
mov
loope
pop
xchg
xor
pop
push
mov
dec
shl
dec
adc
cld
adc
shl
xchg
dec
jl
push
and
mov
push
lods
adc
push
xchg
test
daa
mov
sahf
jae
push
imul
ss
mov
xchg
sbb
scas
mov
add
adc
lods
or
adc
mov
imul
sub
or
fsub
mov
xchg
ret
pop
cmp
ins
or
push
addr16
push
aam
add
aad
adc
dec
mov
cli
stos
push
aam
adc
xor
xchg
pusha
mov
mov
aam
les
pop
mul
push
fadd
pop
or
sbb
sti
xchg
and
jne
enter
sbb
adc
add
scas
dec
jnp
inc
inc
sbb
leave
lock
add
xchg
lock
call
jg
hlt
dec
fadd
ror
bound
(bad)
in
shr
push
test
ds
xchg
retf
in
sti
clc
xor
mov
ins
nop
mov
pop
pop
push
setns
jno
leave
stc
in
data16
popa
sub
imul
or
sub
sti
adc
mov
and
xchg
je
xchg
and
das
sar
xchg
add
jo
out
call
(bad)
mov
ins
popf
cmp
stc
adc
int
mov
mov
sti
sub
dec
pusha
clc
and
lock
pusha
pop
cdq
cld
lock
cmc
inc
dec
mov
pop
mov
xchg
add
ds
and
ret
pop
or
or
(bad)
xchg
mov
mov
pop
loop
and
jae
add
rol
shr
inc
mov
imul
pop
nop
stc
pushaw
in
pop
bnd
imul
adc
fldenv
fcomp
jo
fbstp
inc
mov
inc
(bad)
add
ja
call
sahf
pop
pop
es
and
clc
mov
inc
pop
xchg
dec
mov
imul
lods
jne
rol
mov
pop
aam
push
nop
xchg
cwde
sub
xchg
xchg
aam
aaa
or
xchg
call
ret
dec
nop
or
jge
or
xchg
pop
fwait
adc
xor
jno
cmps
ins
push
add
cdq
sub
mov
xor
adc
mov
test
xor
lock
test
mov
mov
inc
in
adc
adc
movs
adc
inc
imul
xchg
xchg
xchg
lds
outs
adc
jmp
xchg
or
outs
inc
add
inc
loope
adc
not
sahf
(bad)
int3
mov
rdmsr
pop
xchg
mov
mov
fcomp
jmp
sahf
dec
xchg
clc
(bad)
or
inc
nop
hlt
movs
mov
call
ror
cmp
xor
dec
add
mov
xchg
clc
inc
stos
scas
mov
dec
dec
push
inc
jmp
or
inc
push
sub
sub
imul
ret
and
add
sbb
jmp
adc
fldenv
and
shl
rol
mov
xor
test
sahf
sbb
aad
popa
test
or
dec
push
add
lea
add
loop
adc
add
inc
fwait
lidtd
push
bound
or
ss
ffree
push
inc
loope
mov
add
add
(bad)
and
fidiv
test
xchg
mov
enter
or
mov
mov
adc
dec
sti
pop
into
(bad)
ins
retf
mov
movs
int
xor
stc
mov
or
or
mov
add
gs
jmp
adc
adc
xchg
lahf
and
or
test
adc
int
jne
out
addr16
test
jbe
dec
or
sahf
in
js
xor
mov
aaa
pusha
dec
adc
sbb
and
loopne
push
mov
push
test
aaa
js
mov
mov
mov
xchg
cs
mov
cwde
jge
push
mov
loopne
mov
imul
xchg
xlat
cs
inc
or
mov
xchg
fcmovne
lock
jl
lock
cmp
pop
adc
add
sub
sbb
stos
inc
dec
adc
outs
add
sub
push
inc
outs
repnz
outs
adc
or
jns
dec
adc
and
mov
sbb
iret
(bad)
mov
popa
sub
mov
and
fild
int
repz
fisttp
sbb
xor
ss
add
inc
push
mov
shl
daa
aaa
nop
jo
and
jne
inc
cwde
inc
adc
das
dec
and
pop
adc
dec
adc
push
xchg
pop
repnz
ret
lock
jge
dec
es
push
mov
xchg
movs
aad
enter
pop
add
lea
add
pop
sbb
xchg
jle
(bad)
jle
sub
inc
imul
pop
hlt
movsx
cmp
jne
test
mov
pop
xchg
adc
nop
movs
xlat
repz
mov
xor
jg
das
enter
jl
cld
ins
cmps
jbe
dec
hlt
mov
sub
rol
ins
mov
stc
inc
xchg
pop
test
adc
pop
mov
jecxz
(bad)
add
jns
imul
xchg
xlat
sub
retf
cmps
xchg
jae
outs
rcl
lea
(bad)
dec
push
and
mov
fld
fild
fcmovnb
fisttp
js
shl
stc
mov
cmps
xchg
(bad)
fld
push
mov
js
xor
pop
pop
mov
jnp
or
daa
jg
ret
mov
cmovae
cmp
or
je
in
out
push
mov
xor
movs
dec
xchg
jae
fsub
mov
(bad)
xchg
nop
pop
pop
movs
mov
shl
mov
xor
or
jl
mov
adc
mov
sbb
nop
ja
nop
xor
jge
pop
inc
(bad)
and
inc
shl
dec
out
pop
pop
xchg
cs
aaa
jae
add
cs
and
test
push
mov
pusha
cdq
lods
adc
call
jb
and
dec
jmp
inc
cmc
or
nop
ins
and
mov
fild
jl
mov
sbb
lahf
out
mov
hlt
sub
mov
push
xchg
or
sbb
inc
or
or
lods
xor
inc
sbb
jnp
cmp
jmp
lds
and
leave
or
and
lods
jne
retf
or
cld
xchg
jmp
jmp
xor
xchg
imul
or
mov
les
xor
mov
arpl
popf
(bad)
test
dec
dec
sbb
jecxz
repnz
push
sub
mov
mov
sahf
or
inc
inc
push
aaa
je
or
dec
and
iret
mov
push
jl
leave
movntps
xor
test
div
or
add
jmp
adc
xor
xor
sub
and
add
fdivr
lds
xchg
inc
sub
sbb
dec
popa
pop
test
fs
jl
mov
fadd
popf
cmps
sbb
add
cmps
sbb
mov
rol
into
xchg
adc
mov
ja
shr
adc
out
pop
adc
xchg
sbb
xchg
sbb
or
in
test
sub
add
inc
call
cwde
out
test
cmp
lods
inc
fs
jg
sbb
add
aaa
and
lea
mov
jmp
sbb
mov
ror
shl
inc
and
call
jge
jne
clc
inc
or
jo
adc
scas
gs
movs
mov
mov
test
add
adc
and
dec
add
fcmovnb
cmp
push
mov
push
add
add
sbb
mov
sub
(bad)
daa
lods
lock
inc
adc
aam
mov
cwde
mov
outs
dec
push
and
adc
xor
push
lock
inc
mov
std
fdiv
push
movs
pop
mov
cmp
in
or
popa
cwde
add
push
pop
jae
dec
scas
xor
sbb
lds
mov
jnp
push
and
or
xor
add
xchg
pop
hlt
sbb
out
push
cli
aam
sub
add
scas
jmp
mov
sbb
test
sbb
fimul
lds
adc
mov
cmp
add
loopne
push
or
xchg
push
pop
push
sbb
jge
outs
fsub
adc
add
sub
fadd
sbb
pop
pop
dec
xchg
das
enter
cmp
and
enter
ins
adc
mov
shr
cmp
sub
dec
dec
test
inc
dec
xor
inc
icebp
fadd
nop
push
add
test
test
push
xchg
xor
and
mov
cmp
or
inc
mov
and
mov
add
xor
cmp
inc
arpl
fwait
push
push
cld
xor
cld
sahf
cdq
pop
in
and
leave
sub
sbb
mov
(bad)
ins
and
dec
add
pop
es
sub
xchg
push
cmovae
test
mov
xchg
xor
les
les
mov
fwait
rol
push
dec
cmp
lea
and
sti
sbb
dec
xchg
push
or
mov
xor
dec
hlt
and
pop
and
loope
rcl
outs
loope
mov
dec
shr
fucomp
sub
sbb
or
mov
sbb
add
cmp
xchg
leave
inc
adc
sbb
sbb
shl
mov
fisttp
ror
sbb
movs
imul
sub
loopne
fsub
ror
int3
inc
ror
out
mov
rcr
mov
or
xor
dec
aas
dec
enter
add
aaa
or
imul
jbe
lods
clc
clc
fdivrp
xchg
push
enter
lea
mov
add
test
or
sbb
arpl
push
mov
fs
jae
rol
fcmovnu
pop
outs
cmps
or
xor
pop
(bad)
and
ror
rcr
xacquire
adc
jnp
and
mov
rcr
sbb
cmp
les
and
sti
mov
jnp
mov
jnp
dec
rcr
mov
enter
sub
mov
inc
or
jnp
scas
es
movs
inc
xchg
add
push
or
or
push
in
adc
nop
add
xchg
pop
add
lods
sti
mov
jl
shl
sub
xor
xchg
mov
mov
sub
pop
or
mov
pop
movs
mov
cwde
movs
pop
mov
(bad)
xchg
adc
inc
mov
and
adc
jne
dec
cmp
add
pop
pushf
in
fmul
clc
fwait
in
inc
(bad)
clc
push
push
(bad)
pop
aas
adc
pop
mov
dec
lds
cwde
stos
std
push
adc
test
pushf
push
pop
mov
xchg
xchg
(bad)
mov
mov
mov
push
out
push
xor
push
retf
je
sub
xchg
popa
add
cwde
sub
mov
adc
mov
add
push
dec
test
cmp
cwde
pop
pushf
and
xor
lods
inc
sub
xchg
pop
push
mov
and
ins
mov
cmp
fcom
fs
mov
rcl
push
mov
outs
xor
jb
push
sbb
or
ins
test
xchg
mov
rcr
adc
imul
or
xor
mov
test
imul
imul
and
rcl
add
sbb
cwde
loop
pop
adc
cmp
and
inc
jnp
xor
add
xor
sub
xor
ror
rcl
gs
jmp
shr
stos
lldt
xchg
xor
sbb
mov
mov
fcmovbe
pop
les
repnz
rol
inc
inc
sub
psubsw
sub
push
call
add
add
or
cli
test
ins
movs
jbe
addr16
pop
or
or
cmp
ffree
cmp
pop
les
cmp
jns
cwde
es
mov
(bad)
mov
and
push
pop
enter
sub
mov
dec
test
rol
mov
lahf
adc
(bad)
cld
ror
cmp
push
sub
sub
retf
fsub
cmp
scas
adc
jno
arpl
add
je
mov
sub
stc
mov
cmp
arpl
add
and
push
add
std
inc
mov
cs
ror
test
push
es
and
adc
jns
loop
push
xchg
retf
inc
mov
or
lods
push
in
pop
inc
lods
in
mov
sub
and
(bad)
movs
add
fld
mov
loope
mov
stos
cmp
add
imul
xlat
push
leave
fsubr
add
sti
and
adc
xchg
cmp
mov
sub
loopne
imul
cmps
inc
mov
jmp
sub
push
dec
cmc
movs
enter
ja
daa
daa
dec
fist
and
add
test
push
cs
les
retf
dec
push
and
dec
in
cmp
js
pushf
dec
add
cmps
jl
out
lods
popa
imul
das
push
sbb
call
addr16
push
adc
retf
(bad)
jmp
push
inc
jne
jnp
scas
xlat
xchg
and
outs
add
imul
and
ins
adc
sbb
popf
lods
imul
ds
ins
add
xchg
add
arpl
addr16
fs
je
add
and
push
mov
pop
ss
imul
call
jb
push
inc
and
jo
enter
add
or
shr
(bad)
adc
nop
xor
cs
push
add
ss
push
test
movs
adc
rol
in
push
mov
sahf
(bad)
es
jns
sbb
ret
mov
sbb
test
(bad)
cmp
fwait
lods
adc
scas
jne
xor
inc
or
mov
rol
lahf
sub
add
das
adc
retf
xor
add
fdiv
es
xchg
lock
inc
cs
imul
imul
jl
add
or
sub
mov
sub
inc
pushf
jl
jnp
enter
or
fcomp
mov
mov
daa
popf
das
out
scas
inc
js
and
mov
inc
adc
mov
fldcw
test
cmp
(bad)
cmp
xor
mov
push
jbe
nop
cmp
inc
or
push
loop
sub
pop
xor
cmp
cmp
stc
cli
sti
cmp
cmp
cld
std
(bad)
(bad)
cmp
cmp
loopne
loop
cmp
cmp
in
out
cmp
cmp
call
cmp
cmp
in
out
out
cmp
cmp
rcl
rcl
cmp
cmp
aam
(bad)
xlat
cmp
cmp
fcomp
fcmovu
cmp
cmp
(bad)
(bad)
cmp
cmp
rol
ret
cmp
cmp
(bad)
(bad)
cmp
cmp
enter
cmp
cmp
int3
int
iret
cmp
cmp
mov
mov
cmp
cmp
mov
mov
cmp
les
and
call
push
add
jle
sub
(bad)
or
call
mov
fbld
sub
stos
cwde
xchg
xlat
(bad)
outs
pop
ret
pop
jnp
adc
call
cmp
loope
dec
movs
inc
ds
mov
mov
aas
(bad)
mov
adc
ret
dec
push
je
cs
and
loopne
fs
sub
xlat
mov
cmps
pop
and
mov
adc
sub
inc
dec
shl
out
sub
cmp
dec
leave
lods
aas
pop
mov
mov
dec
sub
push
adc
dec
dec
and
xchg
xor
or
enter
int3
jbe
pop
ins
inc
loopne
sub
jnp
xlat
add
rep
xchg
(bad)
or
cmp
pop
add
cmp
or
and
(bad)
and
ret
fs
xor
inc
mov
or
inc
dec
iret
mov
ins
cmps
dec
jns
sub
dec
push
push
push
mov
retf
(bad)
sbb
or
adc
jne
lea
inc
or
mov
repnz
push
inc
adc
not
xor
scas
and
push
enter
or
cmp
add
movs
add
in
rol
or
adc
xchg
pop
xor
inc
inc
or
rcr
loop
aaa
xor
pop
add
jo
cdq
dec
xor
inc
test
mov
xlat
iret
mov
hlt
(bad)
out
and
movs
and
adc
push
or
xor
mov
adc
sbb
mov
repnz
dec
add
aam
push
test
cmp
push
in
mov
cmp
mov
test
push
not
out
shl
shr
daa
cmp
lods
mov
jne
push
push
jns
fild
cmp
dec
sub
cmp
movsx
ss
ror
les
pop
test
cmp
mov
sar
lahf
les
hlt
mov
xchg
imul
mov
lods
aaa
add
cmps
ins
dec
lds
dec
arpl
sub
mov
(bad)
add
movs
test
in
pop
(bad)
adc
movs
push
cmp
add
inc
scas
lods
lea
push
and
js
movs
leave
mov
ror
loopne
les
(bad)
adc
lock
loop
cmp
push
push
repnz
jae
ror
pop
pop
leave
mov
cmp
mov
or
cmp
mov
dec
ins
add
in
mov
test
adc
xchg
cmp
ss
loope
inc
xlat
xor
mov
xor
or
mov
dec
add
sub
int3
add
adc
or
add
stos
mov
pop
sar
in
ret
adc
rcl
fild
fsubr
ficomp
icebp
mov
imul
out
inc
leave
in
push
cs
scas
push
sub
add
in
push
push
dec
cdq
sti
cmp
stos
and
mov
add
jnp
or
xor
ds
inc
jno
dec
mov
xor
cmp
inc
or
(bad)
nop
pushf
jbe
aam
mov
xor
cmp
or
dec
ficom
jmp
sub
enter
cmp
and
jae
xor
fstp
fwait
aad
in
adc
xor
add
ds
and
pcmpgtw
or
mov
push
fs
push
pop
xlat
or
mov
dec
adc
mov
and
push
add
cmp
popa
and
movntps
mov
or
dec
mov
or
(bad)
cmp
in
jmp
and
es
jmp
fs
mov
loop
hlt
push
adc
mov
mov
das
cs
jmp
sbb
(bad)
clc
add
ja
adc
mov
push
pop
loope
fwait
or
data16
imul
pushf
mov
fst
and
or
add
mov
call
daa
cld
xchg
les
jl
js
dec
clc
js
jge
cwde
push
cs
cld
cmp
and
cmp
sub
mov
popf
aad
rcl
dec
or
jne
(bad)
pop
data16
and
fld
mov
repnz
inc
lock
and
ja
loopne
add
adc
jmp
add
adc
fsub
xor
or
sub
and
jmp
mov
out
adc
or
mov
inc
push
cdq
ret
in
jo
jne
mov
add
int
mov
ret
aam
nop
xchg
add
repnz
xor
xor
mov
dec
mov
or
(bad)
or
mov
pop
cmp
jb
jb
dec
cmp
push
mov
fwait
inc
add
ins
cli
sub
adc
cmp
aaa
mov
lea
inc
dec
add
scas
test
fld
xor
jb
sbb
jmp
std
outs
sar
je
adc
add
dec
add
sub
or
popf
sbb
and
mov
ss
nop
test
xchg
add
push
add
adc
jnp
or
jmp
or
js
hlt
test
shr
or
push
dec
pop
pop
jmp
mov
clc
or
adc
leave
out
sub
push
add
xchg
in
loope
sti
jg
aas
sbb
pusha
jae
push
adc
int3
jle
fld
add
mov
sub
mov
jmp
mov
xlat
adc
mov
std
nop
inc
test
addr16
ror
adc
and
push
stos
xor
cmc
add
xchg
ja
mov
sub
and
sbb
add
adc
adc
cmp
hlt
adc
dec
sub
push
adc
ror
mov
loopne
test
xchg
adc
jo
movs
jl
or
add
jbe
ss
xor
mov
xor
ror
(bad)
int
pop
inc
and
add
sub
jge
sub
mov
dec
sahf
imul
jb
dec
aam
lea
jo
popa
sahf
add
shl
inc
or
or
fadd
xchg
hlt
xor
lock
mov
jmp
add
lea
jbe
adc
mov
jmp
bound
sub
call
test
mov
or
sar
out
or
add
(bad)
in
sub
cs
xor
imul
(bad)
xchg
inc
je
inc
xchg
pop
not
mov
sub
cmp
adc
clc
nop
in
cs
cld
sbb
jo
add
adc
fldenv
mov
add
pop
xchg
xchg
and
mov
cwd
cmp
jae
push
pop
and
pop
fmul
sub
dec
les
out
aam
loopne
and
jl
fcom
sub
aam
add
je
cs
in
mov
call
and
xor
mov
int
dec
retf
jl
loope
pop
cmp
lock
jbe
dec
enter
add
fimul
dec
(bad)
in
and
dec
int
jne
scas
cmps
adc
adc
mov
dec
add
mov
or
jl
test
clc
adc
xchg
cmp
sub
in
mov
jmp
cmp
mov
mov
mov
xor
xor
sbb
mov
ins
jnp
jns
sbb
or
cmp
adc
pop
fcomip
fcom
movs
sbb
sar
push
ror
adc
enter
jmp
hlt
clc
push
jle
mov
xor
gs
dec
in
enter
lds
rcl
mov
push
addr16
loope
inc
push
cmps
icebp
ret
push
dec
and
shl
sbb
fwait
or
add
cmp
dec
mov
or
add
or
imul
xor
mov
jecxz
js
int3
aam
cmc
ret
mov
call
dec
cmp
(bad)
lock
pop
and
movzx
or
ins
loop
add
ret
add
mov
jne
mov
inc
or
add
pop
jo
pop
push
cmp
push
pop
sub
mov
in
ins
add
retf
and
xor
lods
xchg
and
and
aas
cs
mov
dec
or
xor
fs
pushw
(bad)
mov
scas
mov
xor
or
mov
fsubr
std
push
in
push
lock
mov
ja
push
or
cmp
fistp
and
mov
xor
or
cwde
loop
test
jae
jns
adc
aad
adc
cmp
(bad)
(bad)
dec
add
push
(bad)
icebp
xchg
not
aaa
test
rcl
push
mov
aas
mov
push
push
push
push
mov
xchg
cmp
dec
jns
cwde
stc
das
nop
jbe
and
mul
sar
add
sub
add
mov
fisubr
ret
inc
jmp
mov
pop
pop
pop
pop
mov
xor
and
or
mov
sbb
shl
into
mov
xchg
pop
lods
movs
jbe
jge
push
out
call
xchg
push
je
adc
les
pop
mov
js
jecxz
or
mov
and
xor
je
movq
fs
outs
aam
fisub
pop
cmp
push
mov
cmp
inc
mov
les
in
push
aaa
pop
jle
rol
sub
fdiv
hlt
jg
jp
sbb
hlt
sbb
nop
arpl
xor
ret
and
sbb
mov
mov
add
inc
add
mov
scas
mov
cs
add
and
xchg
xchg
or
movs
rcr
enter
daa
and
mov
or
xchg
mov
les
in
lods
ja
les
pop
push
push
(bad)
push
mov
cmp
dec
jge
mov
mov
mov
or
inc
mov
pop
and
(bad)
mov
cmp
cmp
jmp
add
in
pop
gs
mov
dec
sahf
mov
add
dec
fadd
cmp
ja
pop
xchg
add
pop
inc
jp
jmp
mov
dec
test
sub
loope
mov
cmp
mov
je
add
loopne
mov
pop
add
retf
inc
sbb
pop
jmp
pop
cmc
cmp
int3
jmp
inc
ss
push
and
push
scas
and
sub
jb
push
pop
aad
and
nop
test
inc
in
outs
mov
rol
sub
and
rcl
imul
das
pop
pop
mov
inc
xchg
inc
test
jb
inc
fwait
sbb
inc
sbb
pop
pop
add
mov
loopne
dec
test
cld
and
pop
sbb
pop
dec
call
mov
inc
sub
int
stos
push
shr
in
inc
mov
mov
cmc
push
rcl
(bad)
xor
fs
loopne
cs
das
lds
(bad)
push
in
ret
daa
sub
call
jae
mov
cld
xor
cmp
push
scas
mov
add
sub
nop
shl
dec
mov
arpl
test
stos
ror
add
fist
xor
sub
push
cmps
movs
xor
jmp
xchg
jns
adc
lods
dec
push
pop
jge
or
data16
test
inc
fld
cs
mov
neg
push
test
ss
inc
sti
mov
pop
data16
je
inc
pop
ret
jmp
mov
hlt
and
dec
xchg
out
sbb
or
jae
xor
cmp
arpl
cmp
push
movs
jecxz
or
adc
frstor
xor
scas
mov
lea
adc
cmp
and
cmp
test
push
inc
shl
cmp
lock
pop
in
out
mov
sbb
in
int3
push
cmc
push
getsec
cld
push
fisttp
sub
mov
imul
inc
inc
xchg
div
mov
cmp
retf
adc
adc
in
or
pop
pusha
lock
les
mov
loopne
dec
cld
jle
mov
lock
(bad)
mov
adc
pop
xor
pop
add
sub
div
cmp
or
mov
(bad)
sahf
sub
call
jne
adc
scas
push
cmp
clc
clc
push
(bad)
rcl
cmps
fwait
xlat
push
xchg
jecxz
cmp
loop
jl
inc
cmp
ja
inc
aaa
xchg
dec
add
inc
inc
xor
repnz
pop
movs
mov
repnz
pop
pop
in
imul
popa
or
pop
call
xchg
push
das
je
ds
cdq
mov
jmp
push
shl
lods
aad
movs
xlat
(bad)
and
shr
out
cmp
cmc
dec
aaa
fsub
sbb
and
inc
mov
enter
jmp
pop
mov
popa
sbb
pop
lods
inc
repnz
jb
mov
add
mov
ret
sub
jbe
aaa
bound
lods
idiv
xlat
pusha
mov
cmp
jae
mov
add
adc
and
push
aas
xchg
inc
fsubr
lods
mov
addr16
clc
(bad)
sti
or
mov
stos
ss
outs
add
ds
jb
repz
push
call
mov
mov
cmp
ja
or
dec
inc
push
gs
add
stos
add
jnp
ret
or
cwde
fstp
cmp
jbe
jbe
add
adc
cwde
sub
int
fnstenv
pop
inc
jmp
add
or
pop
mov
je
fcom
(bad)
jmp
sub
es
nop
add
inc
pop
jmp
shr
shl
sbb
scas
sub
inc
and
push
xor
add
ficom
sub
add
cmp
or
jge
xor
and
jecxz
bound
lods
cmp
je
sub
jb
shl
out
or
stos
or
shl
in
adc
pop
push
or
aam
movs
mov
jae
aas
pop
add
in
pop
add
aam
mov
mov
jnp
or
inc
or
cwde
or
les
inc
imul
inc
cwde
dec
add
inc
popa
pop
xor
jo
out
movs
dec
sub
push
add
dec
sbb
jmp
xchg
push
xlat
sahf
xchg
test
sbb
sbb
popa
mov
cdq
or
loopne
jmp
sub
inc
rol
mov
cmp
cmps
xor
sbb
sbb
fbld
add
rcl
clc
add
in
jmp
cmp
pushf
mov
daa
mov
mov
mov
pop
scas
movhps
ret
or
std
pop
pop
or
sub
(bad)
popf
mov
repz
in
out
loopne
setb
sub
inc
jbe
cmp
mov
prefetch
jo
xchg
mov
jb
inc
push
jae
and
ds
ret
dec
aaa
cmp
div
or
scas
or
or
xchg
dec
sub
sbb
push
ins
repz
pop
or
sbb
retf
push
or
xchg
enter
jmp
adc
sbb
test
loopne
test
push
sbb
cld
sub
mov
fist
sbb
ja
outs
push
sub
loopne
pop
pop
pop
sbb
sahf
add
loopne
or
gs
test
add
pop
sbb
scas
fdiv
inc
daa
cmp
dec
mov
jbe
fistp
jne
mov
popf
in
lock
push
mov
and
mov
dec
ds
push
cld
aam
daa
cmp
cmp
jmp
shl
loop
pop
cmp
dec
mov
ret
(bad)
sub
test
arpl
loopne
outs
add
sub
sub
test
ins
push
or
dec
js
jne
das
xchg
ins
idiv
push
lods
mov
inc
cmp
jne
fucomip
out
sbb
rol
jmp
mov
ret
int3
ffreep
out
add
mov
lds
out
repnz
test
add
and
es
cld
sub
pop
dec
scas
or
add
out
arpl
push
xchg
pop
inc
pop
mov
sbb
fcomp
jle
cmp
and
ins
jmp
add
adc
add
sbb
ins
sub
in
jmp
jmp
pop
arpl
or
sar
outs
mov
jmp
mov
mov
xchg
jo
ret
mov
nop
sti
push
cmc
add
adc
outs
dec
div
inc
mov
lea
or
fndisi(8087
inc
add
hlt
push
in
push
inc
cs
retf
call
mov
inc
test
ins
inc
xchg
vpavgw
cmc
or
fcmovne
jge
xchg
pop
imul
loopne
push
adc
sub
push
mov
test
adc
or
cmp
outs
dec
lahf
add
scas
push
inc
jecxz
loopne
sbb
dec
and
dec
xor
sub
clc
sahf
mov
loope
shr
push
xchg
inc
add
mov
push
inc
sbb
push
adc
push
mov
rcr
push
mov
push
xchg
add
mov
and
jg
scas
pop
mov
jmp
lds
(bad)
call
xchg
jg
push
xchg
adc
xchg
ret
rol
adc
adc
inc
jbe
in
mov
sub
lock
and
lock
pop
nop
movzx
cmp
add
ins
cmp
push
movs
push
cdq
push
sbb
jnp
loopne
mov
retf
sub
sub
cmp
lods
mov
loope
nop
and
inc
and
clc
das
call
cld
lea
retf
sub
dec
cld
ins
add
adc
sar
lock
mov
mov
push
pushf
pop
inc
or
mov
clc
fucomi
nop
dec
lods
or
push
or
jbe
inc
push
cwde
sub
sub
push
out
ret
into
jp
and
in
bnd
adc
into
lods
loope
dec
mov
push
or
adc
sub
arpl
in
push
popa
ror
adc
das
inc
and
in
ds
inc
jae
inc
cdq
into
sub
adc
push
xor
push
sub
cmp
jg
mov
aas
mov
daa
cmp
fisttp
or
daa
nop
imul
mul
scas
fmul
cmp
je
mov
or
(bad)
push
or
push
int3
pop
shl
adc
pop
stc
jmp
pop
mul
inc
mov
push
lahf
or
nop
xlat
dec
in
inc
clc
clc
nop
mov
or
fsubr
sbb
leave
inc
popf
cmp
pop
add
mov
rcl
xchg
push
cmp
leave
mov
pop
psrlw
(bad)
or
mov
pusha
adc
jmp
test
pop
lahf
nop
dec
pop
aad
(bad)
clc
xchg
es
add
jl
jns
push
xor
pop
nop
not
xchg
ds
jmp
push
lods
test
push
adc
std
pop
rol
lock
and
clc
mov
push
sub
je
inc
test
add
push
mov
mov
push
adc
xchg
mov
(bad)
xchg
inc
sub
arpl
cs
mov
push
sbb
call
mov
pop
xor
mov
push
xchg
sbb
xchg
mov
in
gs
mov
cs
adc
dec
adc
jmp
xchg
loopne
push
add
jmp
inc
call
adc
icebp
or
inc
sbb
pop
pop
dec
cmp
out
push
xchg
xchg
pushf
mov
movs
imul
push
adc
inc
jg
adc
aad
out
jecxz
sbb
mov
int3
xchg
sar
jmp
and
jb
loop
jmp
adc
xchg
scas
in
sbb
xor
sub
movs
pop
cmps
jne
sbb
push
enter
dec
sbb
add
or
mov
sub
sbb
jle
stos
test
add
sub
jle
shl
sub
in
ins
scas
sub
dec
mov
loope
and
int
daa
imul
shl
add
into
mov
sbb
clc
(bad)
or
inc
xchg
jle
outs
std
and
pop
jb
mov
sub
dec
or
cs
dec
mov
dec
or
or
shl
repnz
or
stos
shr
push
fidivr
ror
push
jle
fdiv
pop
dec
cvttps2pi
add
fdivr
int
arpl
rol
fcomp
leave
inc
mov
mov
jbe
jg
sbb
dec
and
push
pop
loopne
xor
adc
pop
pop
adc
leave
(bad)
mov
loopne
dec
sbb
lds
dec
sub
cwde
xchg
sub
xor
(bad)
or
and
pop
clc
stos
mov
xchg
mov
push
sbb
jg
cmp
adc
jo
aam
sub
scas
add
xchg
pop
rol
push
sar
xlat
ror
and
sub
test
inc
fisub
out
xor
sbb
test
mov
outs
repnz
sub
cmovo
stos
push
sub
dec
call
movs
or
in
(bad)
xor
inc
fnstsw
aas
jbe
inc
cld
call
rol
and
or
ds
aas
adc
aam
xchg
ror
dec
test
lea
mov
sub
(bad)
pop
dec
dec
ret
ret
inc
sbb
shr
and
je
js
clc
mov
nop
outs
pop
outs
cli
call
pop
xor
pop
mov
stos
inc
mov
or
add
jno
push
cmps
and
xchg
rol
xchg
in
cmp
mov
sbb
fimul
mov
nop
jno
call
inc
mov
mov
sbb
inc
pop
cmps
mul
xchg
or
push
test
mov
adc
xchg
(bad)
pop
sar
push
mov
dec
sbb
fild
fdiv
mov
fistp
mov
inc
sub
jg
xchg
inc
jne
lods
pop
or
fstp
neg
neg
sbb
ja
sub
mov
or
push
push
rcr
je
ss
fbld
jg
mov
dec
jne
or
mov
mov
inc
shr
sti
or
dec
mov
inc
push
add
dec
int3
and
out
mov
fistp
sar
xor
mov
mov
push
add
jns
dec
add
(bad)
outs
aaa
push
and
xor
mov
inc
add
sub
inc
inc
cmp
jne
fstp
xor
fild
bound
xor
jnp
sub
jmp
mov
(bad)
ins
inc
add
add
nop
aas
adc
rcr
adc
mov
ds
not
and
or
mov
xchg
rol
addr16
icebp
mov
and
xchg
or
sbb
inc
xor
outs
and
dec
push
adc
clc
pop
pop
ja
or
dec
add
les
dec
test
adc
dec
ror
cmc
loopne
sbb
js
je
call
jl
mov
add
push
sub
xor
dec
and
cmp
out
add
loopne
mov
sbb
arpl
push
fcmove
inc
lods
adc
gs
sbb
(bad)
popa
icebp
mov
sub
test
cmp
hlt
mov
add
pop
in
int3
lea
dec
xchg
add
fwait
jb
inc
jmp
jns
mov
add
add
ins
mov
push
pop
xor
fwait
push
rcr
cwde
imul
sub
pop
or
inc
jo
jge
inc
mov
add
mov
test
imul
call
xchg
or
pop
pop
pop
mov
test
sub
mov
mov
xor
push
sub
vpshlb
addr16
add
adc
push
push
xor
or
xchg
sbb
fcomp
pop
cld
clc
push
mov
jmp
mov
push
sub
push
outs
or
inc
sar
push
inc
scas
xchg
mov
jbe
push
cs
add
ja
push
iret
sar
(bad)
sub
sahf
cmps
stc
cmp
sbb
jbe
cmp
jns
add
pop
mov
cmp
jne
js
sbb
mov
inc
push
dec
les
fisttp
cdq
mov
nop
or
xor
aam
mov
dec
daa
and
fnsave
in
adc
sub
dec
add
pop
sub
mov
fild
sub
add
push
aad
jbe
pop
sbb
not
aas
mov
add
enter
pop
and
cmps
call
adc
pop
jp
adc
adc
sbb
or
imul
mov
test
mov
outs
bound
mov
and
mov
inc
mov
xchg
add
stos
xor
pop
mov
rol
fs
dec
add
add
add
iret
push
cmp
jmp
std
adc
jecxz
cmp
pop
hlt
pop
mov
adc
push
jb
sub
inc
push
clc
shr
(bad)
mov
mov
cmp
imul
jmp
dec
in
scas
inc
mov
shl
sub
scas
in
out
jp
xor
call
fdiv
fcomp
mov
sub
sbb
push
mov
call
imul
jl
(bad)
and
adc
push
xchg
retf
or
nop
loopne
psrad
sub
cwde
or
mov
clc
mov
mov
dec
inc
or
iret
pop
push
push
push
mov
ret
xchg
mov
or
shr
xor
outs
and
dec
movs
inc
daa
inc
adc
pop
mov
pop
sub
and
sti
ret
sbb
test
add
push
daa
inc
xchg
and
jp
in
adc
or
dec
mov
push
xchg
sub
arpl
and
or
leave
jmp
adc
fdiv
jmp
mov
dec
jae
fiadd
or
or
add
je
cmps
pop
jge
ins
xchg
dec
call
(bad)
movs
bound
adc
mov
push
jmp
xchg
je
mov
adc
test
add
dec
or
lock
in
shr
movs
adc
jle
imul
nop
add
daa
call
out
dec
jecxz
or
dec
imul
scas
push
sbb
jg
sbb
push
mov
mov
popa
push
mov
dec
sub
inc
aas
mov
and
loope
call
mov
jo
ins
and
add
mov
shr
sub
enter
or
pop
push
fidiv
add
and
cwde
popa
lods
popa
call
mov
(bad)
push
stc
jmp
cmp
mov
stc
fst
dec
inc
nop
(bad)
shl
add
fist
clc
pop
mov
mov
inc
je
pusha
dec
mov
lods
pop
lea
test
add
je
loope
mov
xchg
jge
inc
dec
or
rcr
mov
or
adc
add
sub
mov
ss
xor
inc
xor
sub
loopne
jmp
fcomp
xor
push
add
inc
dec
pop
jge
push
retf
mov
xchg
add
cmp
sub
mov
sahf
mov
jno
jmp
add
(bad)
sbb
ss
aad
call
test
mov
pusha
mov
enter
add
imul
lods
lea
adc
out
rcl
fld
add
cmp
push
xchg
xchg
add
pushf
mov
movs
fneni(8087
test
repnz
push
cmp
jns
mov
pop
and
cmps
sub
ror
test
xor
jp
push
or
xor
pop
cmc
cwde
push
jg
adc
xor
aam
dec
test
lods
and
mov
dec
test
test
sbb
and
sar
fcom
sbb
out
xchg
shl
or
push
stc
out
nop
jo
ins
sub
dec
ret
or
dec
fidivr
push
nop
pop
jo
sbb
and
xchg
push
test
and
fstp
push
xchg
jl
adc
sub
mov
out
mov
push
popf
fdivr
and
lods
cmc
pushf
push
or
leave
push
push
xchg
setl
loop
sbb
mov
ins
shl
nop
jle
in
or
bound
cli
sbb
fistp
cmc
jg
retf
inc
adc
psrlq
xchg
push
jo
or
cwde
dec
out
and
pop
in
ins
jo
dec
pop
jno
fnstenv
mov
test
add
sub
rol
jb
fmul
jns
xlat
mov
and
cwde
mov
pop
aaa
xor
out
iret
lods
xor
pop
outs
add
adc
push
repz
lock
ds
mov
push
add
mov
pop
sti
lahf
pop
sbb
xchg
(bad)
test
jbe
les
stc
icebp
and
test
inc
xchg
pop
inc
pop
or
fnsave
mov
push
xchg
xchg
pop
dec
stos
jmp
or
(bad)
aaa
sbb
lds
div
push
in
fistp
add
push
ror
mov
and
add
xor
inc
add
enter
adc
sahf
xchg
outs
nop
jno
out
lahf
test
xor
sbb
push
cs
adc
dec
cmps
pop
imul
or
adc
ja
dec
mov
into
inc
outs
dec
mov
imul
lock
inc
ss
mov
jg
push
mov
sbb
xor
xchg
test
sub
xchg
ja
mov
or
lds
add
(bad)
mov
xor
aam
inc
movs
or
call
adc
or
mov
(bad)
dec
outs
or
sub
inc
outs
jb
movs
pusha
or
push
jo
es
mov
mov
jge
jmp
fs
and
sbb
pop
mov
or
adc
pop
(bad)
neg
sbb
scas
adc
xlat
pop
push
or
or
adc
sbb
cmp
adc
ror
stos
dec
ret
add
inc
mov
cs
test
mov
adc
test
loopne
add
and
sbb
ds
sbb
inc
or
pusha
xchg
push
stos
jmp
in
pop
push
sbb
xchg
sbb
inc
or
xor
test
inc
mov
mov
mov
cmp
jmp
aaa
js
psubsb
inc
pop
sub
xchg
sbb
and
in
add
pop
movs
xor
sar
cmps
pusha
sub
push
push
jg
movs
jb
shl
add
pop
adc
pop
gs
xchg
xchg
xchg
sahf
adc
ins
and
call
(bad)
mov
test
dec
push
inc
cs
adc
pop
pop
lods
in
es
mov
mov
mov
mov
mov
fild
sbb
jl
js
sub
jb
sar
mov
jmp
invd
pop
shl
movs
or
sbb
sbb
lea
lea
movs
add
loopne
add
jb
push
iret
push
sbb
sub
in
and
xor
push
imul
dec
into
retf
clc
push
push
dec
inc
pop
div
and
leave
mov
jl
lock
mov
dec
in
mov
lea
nop
mov
and
in
lea
pop
or
shl
mov
mov
rol
push
in
lods
push
std
add
movs
pop
add
outs
aam
enter
add
xor
add
scas
jmp
sub
mov
cmp
popa
cmp
jae
pop
dec
cmp
mov
fsubr
or
jmp
dec
jb
and
xchg
push
or
call
mov
pop
sti
push
nop
outs
jmp
dec
sbb
inc
pop
xor
stos
push
dec
adc
push
loopne
shl
or
and
jo
out
jbe
ret
popa
push
cmps
jae
push
sbb
sbb
add
mov
mov
dec
aaa
js
xchg
ficom
pushf
cld
call
clc
mov
hlt
adc
mov
push
and
scas
cs
pop
loop
inc
test
pop
(bad)
dec
cdq
xchg
(bad)
cmp
and
xlat
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmps
test
stos
dec
dec
dec
dec
stos
lods
lods
scas
dec
dec
dec
dec
scas
nop
xchg
xchg
enter
xchg
xchg
xchg
xchg
cwde
enter
cdq
call
popf
sahf
lahf
or
enter
add
xchg
mov
enter
(bad)
jo
enter
jb
je
enter
jbe
js
enter
jp
jl
enter
jle
pusha
enter
popa
bound
enter
gs
enter
imul
enter
push
enter
push
push
push
push
dec
push
jns
push
or
enter
jp
add
push
push
sub
(bad)
add
adc
mov
xchg
adc
inc
nop
mov
rcr
mov
mov
loopne
test
pop
xchg
push
add
or
add
or
push
push
into
and
pusha
imul
or
and
adc
fsub
mov
or
push
adc
add
retf
xlat
aaa
push
push
add
sub
ins
or
clc
mov
fist
jns
pop
cdq
cdq
aaa
cmp
xchg
enter
inc
mov
adc
adc
loopne
pop
ss
dec
rcl
imul
mov
ins
or
jae
xchg
cs
fist
outs
int
shr
pop
jo
and
push
push
inc
pop
idiv
je
sbb
or
xor
ja
push
inc
fs
push
mov
gs
repnz
xor
sub
push
sbb
bswap
cmp
pop
mov
dec
xor
into
mov
jo
je
ins
loop
sbb
mov
push
cwde
nop
and
add
sbb
adc
xor
imul
or
xchg
iret
adc
pop
outs
or
adc
outs
xor
jb
fiadd
iret
xor
pop
hlt
xchg
bound
in
ret
push
add
and
or
sti
repnz
(bad)
jbe
adc
inc
xor
pop
inc
push
inc
xchg
or
jae
shl
fsub
and
mov
in
enter
add
adc
js
xchg
mov
test
inc
lods
ror
cmp
mov
cmp
or
rol
mov
cmp
jle
sahf
adc
outs
or
ret
js
outs
movs
stc
pop
sub
and
mov
cmps
inc
xchg
mov
test
or
pushf
push
rcr
adc
cmps
into
mov
jo
cmps
dec
jecxz
vmread
xor
or
and
mov
xor
aam
pusha
rol
dec
pop
shl
mov
lock
mov
pop
aas
sbb
(bad)
xor
or
add
mov
pop
mov
or
mov
push
pop
enter
cmp
test
push
hlt
repnz
mov
and
mov
xchg
fld
mov
out
jnp
cmp
add
test
push
inc
out
push
outs
lea
js
xchg
or
pop
sbb
xchg
mov
enter
idiv
pop
sbb
lds
cvtps2pd
add
and
add
stc
shl
xchg
add
xor
jne
jo
sar
ds
lsl
ins
adc
mul
call
sbb
(bad)
cmp
(bad)
int
es
push
cmp
xchg
dec
ds
add
add
cmp
loop
mov
neg
inc
add
mov
add
mov
pop
call
nop
scas
mov
adc
hlt
inc
ins
add
pop
(bad)
xor
sbb
push
hlt
loop
adc
and
adc
add
inc
loop
shr
or
push
int3
push
or
lods
mov
(bad)
ins
fistp
sbb
and
xchg
xchg
add
mov
fwait
xchg
lea
addr16
dec
xchg
sbb
cmp
or
or
push
dec
dec
and
adc
push
add
dec
repnz
and
or
push
add
mov
nop
inc
arpl
mov
pusha
gs
jecxz
dec
arpl
or
ja
outs
ja
pop
pop
fs
adc
push
cld
sbb
test
loopne
add
cmps
jb
push
push
mov
sbb
(bad)
fsub
mov
pop
jg
add
inc
sbb
xchg
repz
lahf
ins
jp
jnp
call
jp
aam
push
ror
xchg
cs
xchg
sub
mov
and
test
pop
nop
cwde
push
nop
dec
mov
sub
hlt
sbb
or
loop
dec
push
stc
mov
movhps
mov
jbe
nop
in
dec
in
(bad)
aam
add
fstp
out
outs
lods
inc
fs
pop
pop
test
add
or
or
sbb
ds
and
js
mov
inc
cmp
push
xor
ror
lock
in
fadd
fst
out
icebp
leave
rcr
xchg
adc
push
ret
xchg
rcl
push
ret
jnp
mov
sub
inc
in
dec
jl
or
jge
fs
adc
mov
sbb
add
in
jnp
push
fld
pop
and
das
sub
xchg
cmp
pop
inc
pop
test
mov
not
js
cmp
push
cwde
sar
mov
adc
enter
add
rol
push
add
ds
or
mov
mov
pop
out
jg
ins
aaa
sar
pop
sub
mov
leave
and
lahf
or
dec
sar
js
push
lods
ret
nop
mov
mov
loopne
sysenter
lods
push
mov
push
cmps
stos
fs
mov
sti
shl
out
cs
push
cld
mov
(bad)
mov
and
dec
je
push
test
pusha
push
int3
neg
div
push
mov
sbb
push
hlt
or
mov
xor
jg
push
lds
mov
and
sbb
mov
push
or
push
push
or
test
ins
mov
ss
mov
cmp
stos
xchg
dec
sbb
push
lock
ins
xchg
sbb
pop
sbb
in
sti
lock
fsub
and
in
push
cmp
push
push
xor
xchg
adc
addr16
clc
push
rcr
dec
aas
add
dec
js
adc
fidivr
xchg
pushf
das
xchg
pop
sbb
mov
mov
mov
push
or
sbb
cmp
push
pushf
cmp
adc
sbb
xor
mov
cmp
jo
xor
cmp
mov
lods
push
(bad)
mov
jo
aam
in
(bad)
mov
mov
xor
je
and
cmp
dec
pop
sbb
imul
adc
cmp
pop
inc
pop
jae
dec
xor
outs
or
scas
ds
pusha
and
mov
mov
jmp
mov
xor
rol
xor
inc
dec
jne
and
mov
jmp
pop
movs
sub
add
out
inc
js
jnp
pushf
add
das
or
test
aam
in
mov
and
xchg
sbb
ins
loope
movs
push
mov
frstor
out
jle
lods
cdq
data16
jne
enter
popf
dec
adc
jle
daa
xchg
adc
fucomip
or
push
jne
cmp
xchg
add
test
pop
aaa
or
lea
inc
fsubrp
shr
push
mov
or
and
jo
movs
sub
inc
sub
add
int3
cdq
adc
dec
jno
sbb
push
xor
mov
in
dec
in
jb
les
inc
scas
or
sbb
shl
pop
sub
rcpps
push
shr
inc
xchg
cmps
pop
or
sti
ret
sbb
dec
je
(bad)
frstor
adc
sub
xchg
sub
mov
iret
inc
adc
inc
in
sub
(bad)
xor
adc
adc
(bad)
loopne
and
aaa
cmps
push
xor
pop
scas
jl
mov
out
xchg
mov
sub
adc
mov
adc
inc
xchg
inc
mov
jnp
test
push
cwde
pop
add
cmp
dec
xchg
js
mov
adc
adc
ret
hlt
sub
push
inc
and
(bad)
xor
mov
or
mov
push
rol
and
and
push
leave
cmps
in
ficomp
inc
and
mov
jg
fcmovbe
push
mov
mov
push
dec
xchg
sub
in
(bad)
pusha
loopne
dec
ret
or
loope
add
xor
ret
or
mov
imul
and
or
xchg
xchg
not
retf
adc
fld
das
dec
popa
jbe
add
jb
je
int3
push
inc
push
pusha
or
call
clc
push
imul
sar
xchg
ficom
jb
mov
cmp
lahf
jne
or
or
xor
jne
mov
addr16
or
es
add
push
imul
adc
scas
pop
jb
inc
dec
data16
or
mov
movs
outs
es
xadd
pop
and
jo
push
outs
mov
shr
push
addr16
jge
pop
jl
inc
je
inc
push
xchg
retf
cmp
xor
fs
or
ss
jg
sub
pop
bound
sub
push
dec
daa
ficom
add
pop
fwait
or
popa
inc
lock
xor
or
and
push
push
and
das
pop
jg
pop
mov
jg
fcomip
add
xor
adc
lods
jecxz
fcom
pushw
sub
loope
push
xor
pop
outs
jne
and
ja
xchg
daa
iret
or
sbb
sbb
addr16
push
arpl
add
jle
inc
inc
imul
das
mov
or
leave
ins
daa
or
aaa
das
or
push
inc
dec
fs
push
push
sub
outs
int
add
push
hlt
(bad)
mov
pop
gs
xor
jo
retf
and
dec
and
and
xchg
xchg
mov
(bad)
fldcw
inc
cmp
push
dec
mov
jno
aas
jno
lods
xchg
pop
sub
adc
add
push
clc
pop
and
stos
ja
inc
push
dec
push
imul
pop
dec
inc
dec
dec
arpl
sbb
sub
push
adc
inc
push
mov
add
mov
inc
push
xchg
ins
lods
sbb
and
out
mov
push
test
out
and
or
aaa
and
inc
xor
inc
dec
push
push
lock
not
dec
sub
mov
lods
(bad)
bound
das
sbb
mov
inc
das
inc
inc
inc
das
or
ja
push
push
push
test
mov
or
push
xlat
sub
or
push
xchg
or
push
int3
scas
pop
(bad)
nop
cmps
dec
inc
dec
iret
adc
pop
add
mov
ds
jmp
mov
mov
or
xchg
sub
scas
inc
sub
sub
mov
addr16
scas
mov
cmp
and
fnsave
icebp
or
rol
jne
inc
call
movs
test
adc
mov
mov
lea
fdivr
cwde
mov
mov
push
and
xlat
and
or
xor
or
mov
add
movs
dec
ins
mov
stos
sub
xchg
arpl
pop
adc
int
or
loop
mov
fadd
arpl
arpl
mov
fwait
inc
pop
mov
sub
inc
popf
shr
loop
dec
or
and
aaa
or
push
shl
adc
sbb
lds
xchg
mov
sbb
jns
dec
jbe
pusha
inc
xchg
xchg
cmp
hlt
into
mov
inc
sbb
adc
mov
mov
xor
cmp
mov
cld
adc
dec
sbb
scas
sbb
or
pop
mov
or
movs
aaa
xor
inc
jecxz
mov
mov
mov
mov
push
push
movs
in
mov
pop
jae
adc
test
ret
sbb
rol
or
xor
sar
mov
xor
sbb
mov
xlat
arpl
sbb
cmc
test
sbb
pop
mov
inc
or
sbb
sahf
enter
enter
nop
ficom
sub
xor
sbb
sbb
jne
mov
inc
pop
sub
or
jo
inc
xchg
sub
jo
adc
retf
call
jo
fiadd
imul
add
rol
inc
outs
js
leave
cmps
lods
addr16
push
stc
or
or
shr
rcl
stc
jmp
jo
mov
inc
ja
out
js
sbb
in
(bad)
lods
push
(bad)
(bad)
enter
add
xlat
push
xlat
jecxz
push
out
in
mov
fcom
scas
inc
mov
leave
dec
xchg
lds
test
rcl
pop
adc
stos
dec
mov
mov
push
dec
adc
aaa
cmp
out
or
mov
or
cmp
ds
inc
movs
cmp
pop
neg
mov
addr16
popa
ss
push
mov
clc
neg
ja
pop
pop
push
or
(bad)
mov
pop
jbe
pop
es
movs
cmp
imul
sbb
xchg
or
sbb
dec
pop
dec
fld
dec
pop
adc
pusha
mov
jo
fwait
nop
aaa
and
bsf
or
rcr
push
dec
mov
adc
cmp
push
mov
and
sub
or
cmps
clc
mov
sbb
sbb
(bad)
cmps
cmp
test
imul
cmp
in
popf
jne
cmps
rol
test
cmp
movs
and
es
dec
call
sbb
inc
cmp
in
inc
dec
jae
mov
popf
jo
xchg
mov
loope
jge
rcr
movs
dec
xchg
xor
das
push
push
sbb
adc
adc
mov
mov
sbb
cmps
add
xchg
hlt
cmps
xor
scas
(bad)
sbb
and
sbb
lock
or
adc
push
mov
test
adc
pop
stos
fwait
inc
outs
jns
add
mov
adc
mov
dec
das
retf
fs
test
cwde
mov
jns
mov
enter
dec
and
sub
in
mov
loopne
add
hlt
add
xchg
jns
repz
lds
adc
mov
xor
lods
jg
and
pop
and
push
inc
(bad)
test
jmp
loope
jmp
imul
movq
sbb
adc
mov
adc
jge
or
call
iret
adc
xor
pusha
mov
push
adc
mov
icebp
repz
xchg
mov
pop
ret
pop
pop
xor
int
push
or
popa
adc
adc
push
push
mov
cmp
adc
adc
nop
retf
adc
in
add
inc
retf
inc
xor
add
rol
adc
dec
push
retf
psrlw
xchg
and
mov
je
adc
lock
ins
outs
pushf
inc
shl
imul
pop
fisub
sbb
jno
ds
pop
xchg
push
data16
or
inc
add
or
pop
and
add
hlt
clc
pop
clc
clc
xchg
jbe
clc
clc
aas
push
sbb
mov
aaa
or
or
mov
xlat
fisub
sub
movs
add
ins
dec
jb
xchg
jo
push
mov
inc
out
test
add
mov
and
mov
add
sub
and
dec
add
pop
loopne
add
jbe
cwde
loope
or
mov
add
adc
pop
dec
mov
fdiv
pop
xchg
add
ror
in
pop
lods
sub
xchg
lods
add
add
hlt
xor
jae
out
ret
mov
out
push
adc
lods
call
out
fs
ins
cwde
mul
or
push
addr16
test
lods
mov
sub
and
or
xchg
lods
cwde
cs
cdq
movs
cmp
add
cmps
pop
rcl
clc
mov
xor
push
pop
jp
ja
(bad)
push
xor
mov
and
and
inc
daa
jle
push
adc
clc
bound
imul
pop
pop
mov
inc
add
dec
jb
ins
mov
stos
loope
or
stc
push
pop
imul
fidiv
jg
mov
int3
add
hlt
pop
mov
push
and
pop
pop
push
dec
push
push
push
adc
push
push
mov
mov
enter
add
scas
sbb
jmp
popa
xor
push
jb
hlt
pushf
or
dec
sbb
pop
fmul
sub
inc
mov
add
adc
mov
mov
jmp
xchg
mov
leave
rcl
aas
dec
lock
push
or
dec
js
xchg
js
pusha
cwde
mov
mov
movs
jmp
or
leave
inc
cmc
push
stos
inc
test
pop
loopne
ins
cdq
pop
pop
enter
aas
adc
call
dec
(bad)
jne
pop
jae
dec
push
cli
dec
sbb
add
xchg
or
loopne
out
(bad)
aas
movs
cmps
or
and
pop
adc
pop
inc
sbb
leave
sbb
xor
jnp
enter
fild
popa
ins
bound
js
mov
(bad)
out
mov
lock
not
and
in
pop
fmul
int3
(bad)
and
jnp
gs
mov
popf
or
out
push
adc
ja
and
xor
sub
adc
mov
or
and
sbb
sar
add
sbb
and
xor
sbb
add
add
adc
adc
addr16
or
pop
js
mov
loop
mov
je
test
sbb
or
test
sub
call
mov
push
sbb
out
iret
xchg
or
mov
or
out
bound
in
xchg
xor
pop
sbb
shl
and
mov
int3
cmp
call
mov
nop
fcmovu
in
and
es
test
sbb
pop
imul
push
xchg
pop
add
jo
xchg
idiv
je
sub
call
and
addr16
push
addr16
shl
inc
or
xchg
push
or
iret
(bad)
nop
xchg
dec
dec
leave
xchg
dec
aas
xor
sti
popf
hlt
mov
xor
nop
mov
add
xor
jb
int3
cmp
adc
push
or
cmps
int
jge
les
xchg
dec
xlat
mov
stc
sbb
dec
push
js
test
mov
sbb
das
rol
setno
test
aam
mov
mov
pop
js
inc
jmp
jle
dec
or
js
sbb
mov
movd
js
xor
ror
fisttp
loopne
jb
adc
loopne
inc
ds
lods
cld
into
ror
test
sbb
stos
pop
and
push
pop
mov
(bad)
adc
xchg
imul
and
mov
inc
movs
jns
fstp
inc
jb
fild
jb
adc
loopne
test
sub
fnstenv
repz
pop
sub
sahf
fmul
or
fsub
mov
sub
adc
xor
or
or
xchg
ret
mov
add
or
or
pusha
shl
shl
mov
add
(bad)
cmp
sbb
imul
pop
dec
not
and
jge
inc
push
jno
pop
shr
mov
ins
lea
or
test
(bad)
enter
adc
inc
mov
mov
and
adc
js
stos
adc
dec
addr16
sar
mov
inc
jl
push
std
call
xchg
fldenv
arpl
das
loop
xor
push
xchg
sub
cmps
mov
fsub
pop
xor
mov
rol
adc
es
in
aad
dec
icebp
push
sbb
push
je
mov
and
loopne
fistp
jmp
jns
(bad)
sub
(bad)
push
mov
mov
fistp
push
inc
xor
push
cmps
mov
dec
xchg
push
dec
aam
sub
add
ret
(bad)
std
inc
push
aad
fidiv
(bad)
rcr
pop
stc
sub
jo
pop
in
leave
jnp
pop
push
(bad)
bswap
test
imul
mov
fldcw
add
aaa
adc
cmp
rcl
es
push
adc
pusha
fiadd
hlt
mov
dec
inc
sub
pop
add
xchg
dec
popa
mov
arpl
daa
add
jp
ret
das
mov
pushf
mov
dec
ret
xchg
adc
in
jmp
(bad)
retf
pop
lock
push
outs
mov
add
add
mov
mov
loopne
cmp
jge
pop
adc
out
jge
adc
dec
add
jecxz
adc
clc
(bad)
dec
adc
inc
(bad)
dec
ins
dec
pop
mov
and
outs
inc
dec
js
and
and
lods
sbb
jle
mov
bswap
inc
mov
dec
out
(bad)
(bad)
jns
jmp
push
xor
and
(bad)
mov
sub
shl
mov
mov
jmp
lahf
call
jl
in
mov
mov
in
push
inc
mov
mov
inc
nop
push
and
aam
test
jae
das
adc
xchg
in
jl
lock
xchg
jo
mov
mov
ja
popa
add
ds
bound
data16
call
or
dec
bnd
pop
inc
pop
jb
retf
cmps
mov
and
out
scas
jns
pop
inc
cmc
loope
hlt
shl
fsubr
test
maskmovq
test
add
cmp
mov
mov
icebp
retf
and
in
or
adc
rcl
bound
pusha
dec
in
mov
mov
push
or
mov
call
(bad)
into
sub
adc
test
cs
or
mov
fadd
push
es
out
shl
jb
mov
ds
popa
test
adc
rol
xchg
mov
xchg
xor
sub
or
faddp
jo
adc
sbb
sub
mov
add
xchg
add
lods
mov
cmp
dec
loopne
push
pop
adc
loope
add
in
iret
loopne
test
push
push
hlt
sbb
xor
popf
or
cmp
sar
and
pop
movs
ror
das
or
js
popf
fadd
in
jmp
jno
popf
aaa
push
sub
shr
mov
xor
mov
xchg
jo
push
or
dec
xor
out
icebp
add
(bad)
shr
push
shl
jo
lods
lahf
jp
aad
pop
xchg
cmp
loopne
cmp
xchg
mov
test
add
ret
mov
fsub
sbb
out
dec
sbb
or
clc
or
cmps
data16
xor
adc
test
pop
or
jmp
add
inc
dec
pop
ins
or
inc
pusha
or
cmp
out
cmp
jg
mov
or
and
in
in
sbb
rcr
aas
or
xchg
xchg
nop
mov
push
mov
dec
shl
leave
wbinvd
push
sar
mov
add
or
xchg
test
or
and
ins
pop
test
mov
ins
xor
cmps
push
or
add
xor
int3
int3
jne
mov
int
out
int3
mov
pushf
sbb
mov
fdivr
pop
mov
(bad)
or
loopne
(bad)
sub
inc
out
(bad)
adc
scas
fnop
push
sub
pop
cli
enter
lea
test
and
mov
pop
cmp
mov
push
fsubr
arpl
dec
xor
dec
lea
adc
xchg
cmp
pop
rcr
mov
loopne
retf
dec
jne
jecxz
push
enter
sbb
js
pop
jl
xchg
sub
enter
pop
mov
inc
adc
sar
push
sbb
xor
dec
out
lods
test
or
ror
cs
in
call
mov
inc
sbb
pop
adc
data16
pop
in
mov
cli
lods
and
pushf
mov
lods
retf
push
add
xchg
jns
es
dec
xchg
adc
jecxz
frstor
iret
shl
mov
mov
or
push
mov
dec
shl
jne
stos
cmp
or
push
xor
or
ret
cmp
aas
mov
ss
aaa
inc
jmp
push
test
cmps
push
add
push
push
dec
add
or
xor
mov
add
inc
mov
ret
mov
pushf
push
push
sbb
pusha
mov
push
ldmxcsr
and
mov
js
mov
pop
or
pop
inc
es
or
sub
loopne
mov
inc
iret
pop
imul
sbb
adc
push
jb
sub
mov
xor
das
jo
cmps
jmp
adc
fcmovnu
repnz
and
or
mov
ret
scas
inc
pop
xchg
inc
xchg
xor
inc
and
sub
sbb
adc
movs
mov
and
sbb
mov
enter
push
pop
movs
repnz
fld
mov
adc
or
jmp
in
imul
add
xlat
xor
jmp
jnp
mov
dec
(bad)
pop
cmp
jae
pop
in
pop
mov
mov
or
outs
mov
or
cmp
push
stos
xchg
pop
inc
aaa
ss
lds
arpl
xchg
dec
mov
inc
push
xchg
jmp
movs
fs
dec
js
push
mov
inc
daa
(bad)
mov
sahf
ret
mov
in
cwde
sbb
shl
aam
mov
jnp
popa
das
add
fmul
cdq
aaa
out
dec
js
mov
or
push
(bad)
sahf
push
in
mov
adc
sub
xor
int3
and
repnz
cmc
loope
mov
outs
mov
mov
in
pop
dec
shr
mov
fstp
or
aam
into
push
adc
popf
xor
cmps
and
inc
pusha
and
lock
fstp
and
mov
out
shl
add
and
rcr
aam
shl
out
cmp
aam
dec
outs
ss
mov
pop
sbb
mov
test
or
push
in
mov
push
cs
enter
test
mov
leave
mov
cmp
sbb
rol
fsubr
cmp
sbb
cmp
add
call
jnp
popf
fsubr
push
pusha
aam
aam
dec
call
mov
cmp
(bad)
out
out
pop
xchg
call
mov
pop
add
adc
or
cmp
aas
cmp
push
sbb
scas
cmps
sbb
xlat
add
(bad)
dec
mov
div
test
inc
(bad)
fmul
sub
adc
xor
(bad)
jmp
jecxz
test
pop
and
popa
push
cwde
push
sti
push
sbb
cmp
in
sub
je
das
inc
movs
pop
xor
adc
leave
pop
jl
ins
adc
jnp
push
cwde
stos
adc
and
mov
jb
dec
in
dec
xchg
ret
clc
dec
repnz
cmps
in
xchg
in
lock
push
les
add
lea
ret
shl
or
and
cdq
cmps
add
cmps
push
cld
and
add
sub
xchg
add
dec
fsub
push
dec
mov
pop
adc
mov
or
stc
ret
pxor
mov
repz
pop
adc
mov
jne
sbb
xor
xor
pusha
adc
and
mov
cld
movs
retf
push
nop
ja
and
fist
xchg
push
and
inc
dec
mov
push
adc
ins
mov
dec
push
cmp
out
adc
jae
stos
add
xchg
jo
(bad)
mov
mov
cmp
mov
inc
mov
ja
dec
or
pop
daa
jbe
push
add
fmul
mov
lock
retf
mov
dec
(bad)
dec
and
mov
hlt
adc
xor
dec
push
and
cmp
jg
popw
cmps
sub
cmp
xchg
xchg
hlt
xor
bound
push
cs
sbb
cmp
lods
ja
and
jb
movs
movs
jns
les
repz
inc
add
aaa
mov
call
mov
js
mov
dec
inc
ret
xchg
int3
sub
jnp
pop
cmp
outs
and
hlt
sub
sahf
mov
or
or
daa
pop
xchg
dec
dec
or
test
shr
call
out
inc
and
pushf
in
jmp
adc
add
sbb
lahf
adc
ins
rcr
push
inc
mov
dec
arpl
ret
jne
das
(bad)
fldlg2
cmps
ds
fimul
push
adc
les
push
or
shl
jo
outs
adc
pop
pop
xchg
xor
xor
push
lock
xchg
lea
and
cld
inc
and
and
aaa
inc
and
adc
(bad)
pop
and
out
sbb
test
shl
dec
test
jmp
cli
stos
mov
sbb
jns
and
ror
push
xchg
push
(bad)
ror
push
nop
push
(bad)
pop
push
(bad)
shl
daa
add
jo
pop
pop
das
rol
push
mov
aaa
jmp
adc
dec
push
cdq
jmp
dec
(bad)
mov
jmp
int3
push
or
jmp
mov
or
inc
test
cwde
or
push
xor
rol
les
jno
rol
add
adc
ror
jns
jmp
pop
xor
and
mov
retf
ins
jecxz
dec
fst
cmp
or
push
(bad)
movs
ret
arpl
lea
dec
rcl
cmp
adc
repz
lock
pop
sbb
pop
dec
les
mov
add
push
xchg
out
popa
cmp
je
mov
xchg
movs
ret
or
and
and
hlt
in
xchg
xor
adc
out
xor
sbb
or
adc
mov
xchg
sub
push
or
sbb
sbb
gs
adc
or
push
dec
push
movs
inc
scas
lods
adc
shr
inc
sbb
mov
cmp
test
and
inc
int
and
mov
inc
fs
addr16
dec
inc
stos
xchg
or
pusha
jbe
dec
les
xchg
push
or
cmp
dec
mov
mov
fisttp
(bad)
loope
and
pop
xor
test
mov
(bad)
jmp
mov
retf
inc
clc
inc
sbb
mov
mov
adc
inc
lahf
mov
cmp
sbb
(bad)
iret
cmp
inc
shr
xchg
xor
jmp
mov
sbb
or
lods
or
adc
lods
xchg
dec
pop
bnd
repnz
add
imul
jmp
mov
rol
mov
push
mov
dec
xchg
stos
rol
lock
mov
ret
xor
das
push
or
cmps
and
rcr
repnz
xchg
mov
lahf
ja
inc
out
mov
iret
and
aaa
nop
les
imul
idiv
adc
dec
sbb
ror
fnsave
pop
enter
jno
xor
addr16
pop
dec
ins
inc
in
sub
and
adc
movs
inc
mov
and
sub
punpckhbw
iret
inc
sbb
or
enter
xchg
nop
repz
prefetchw
or
call
adc
add
test
leave
cld
add
xchg
cwde
sbb
adc
(bad)
pop
mov
or
fxtract
cmps
xchg
hlt
jmp
rol
jmp
xor
addr16
xchg
adc
pop
or
sbb
(bad)
aam
je
jmp
scas
push
cwde
sahf
or
and
out
outs
cwde
add
and
(bad)
pop
in
cmc
pop
fs
arpl
(bad)
dec
out
shr
fs
hlt
mov
sbb
push
xor
mov
jne
mov
jecxz
push
jb
repz
mov
leave
add
(bad)
adc
imul
aam
shl
outs
or
adc
into
cmp
out
fmul
push
push
pop
out
sbb
xchg
add
add
mov
dec
inc
ret
inc
les
into
sbb
test
or
in
scas
dec
or
es
push
cmp
or
pop
xchg
nop
dec
xchg
add
hlt
adc
fmul
xlat
lock
dec
aas
jl
repnz
inc
mov
scas
test
test
shl
jle
sbb
sub
or
inc
test
daa
sub
sub
js
dec
(bad)
add
jne
or
xor
sahf
inc
fwait
jle
adc
imul
jnp
cdq
push
out
fsubr
cmp
pop
fadd
or
test
icebp
sub
mov
jmp
dec
loopne
dec
sub
inc
pop
or
xchg
pop
sbb
sbb
dec
and
inc
and
inc
sub
xor
outs
xor
scas
in
lds
and
mov
add
test
mov
dec
push
adc
rcr
data16
jmp
sbb
jge
mov
in
pop
push
icebp
inc
pop
pop
mov
mov
mov
int
xchg
retf
cmp
jae
inc
sbb
int
mov
sub
mov
ins
cmp
clc
dec
and
pop
and
neg
jge
and
push
xchg
enter
add
xor
xchg
(bad)
dec
adc
adc
cmps
or
nop
push
jne
gs
adc
out
adc
in
push
push
data16
inc
and
xor
push
call
jge
push
push
jl
inc
in
shl
(bad)
xor
adc
push
arpl
in
cld
mov
push
mov
inc
cmps
ficom
cmp
lock
rol
shl
movs
push
xchg
push
test
add
test
mul
add
ins
or
sbb
pop
and
mov
fdiv
jne
pop
inc
cmps
pop
stc
hlt
dec
test
pop
pop
sbb
or
mov
push
push
sub
sbb
sbb
mov
lahf
jmp
cmc
sbb
out
enter
push
dec
dec
or
cmp
mov
pop
aas
out
mov
and
xor
inc
add
icebp
mov
mov
xor
ds
bound
push
loop
loopne
jge
mov
jmp
add
pop
mov
mov
add
das
cld
mov
inc
je
push
mov
sub
lock
inc
test
mov
fs
cmps
shl
pusha
mov
gs
xor
mov
lock
lods
sub
inc
or
test
push
mov
adc
cs
mov
movs
gs
mov
lods
cmp
(bad)
lock
jmp
(bad)
xlat
adc
inc
clc
int
call
pop
mov
stc
sub
ret
and
test
in
xchg
lahf
push
(bad)
in
inc
add
lahf
push
xchg
mov
jge
sbb
jmp
or
(bad)
push
sub
call
sub
jg
cmp
adc
fstp
adc
or
adc
popa
sub
lea
test
daa
je
ret
in
nop
dec
xchg
in
test
and
scas
inc
add
inc
test
cmp
and
xor
add
dec
mul
sub
bound
stos
(bad)
(bad)
mov
or
adc
dec
imul
adc
aaa
aad
sub
mov
push
sub
or
or
add
xor
xchg
iret
sub
test
mov
test
hlt
bound
gs
aaa
or
lahf
xchg
leave
or
push
fistp
test
xor
ins
adc
sub
icebp
andnps
int
in
pop
add
call
sbb
lods
retf
or
or
adc
push
ror
test
mov
inc
outs
retf
ret
jmp
or
test
stos
cmp
pop
aas
sbb
sub
stos
mov
ds
pop
out
adc
pop
mov
aam
mov
and
and
in
push
or
mov
sahf
fsub
nop
jmp
ins
sar
and
clc
adc
fs
leave
dec
dec
fiadd
das
dec
pushf
dec
(bad)
mov
add
(bad)
sub
sbb
or
push
loope
rcl
sahf
fisub
and
pop
mov
add
fist
pusha
sbb
sbb
loop
mov
sbb
aas
pop
les
pop
push
jmp
and
adc
pop
or
mov
adc
mov
mov
xchg
xor
cmp
xlat
in
mov
sub
adc
stos
push
mov
outs
sub
jp
xor
and
pop
add
mov
aad
outs
nop
ret
outs
xchg
push
rol
sub
je
xor
cmps
ror
push
rcr
or
(bad)
and
loopne
add
pop
xor
call
ror
sti
jecxz
adc
enter
fisub
aad
pop
push
out
in
xor
es
out
in
out
add
or
cmp
jmp
mov
ret
bound
(bad)
arpl
pop
stos
call
sub
jg
add
add
pop
(bad)
popf
arpl
in
fcom
ret
jg
repnz
jl
loopne
(bad)
cmp
lahf
inc
test
and
pushf
test
mov
or
cmp
mov
jbe
les
and
mov
push
mov
femms
add
push
and
rcr
(bad)
jnp
ret
dec
push
dec
or
cwde
loope
aaa
pusha
or
mov
call
push
or
xor
cs
pop
cmp
jmp
into
mov
call
out
adc
ins
dec
or
push
or
retf
clc
add
xchg
xchg
bound
lods
mov
mov
xor
out
cmp
xor
add
fcomp
scas
pop
dec
or
adc
pop
out
sbb
pusha
or
aas
mov
jno
add
or
adc
mov
sub
cmp
sbb
pop
outs
pushf
and
shl
adc
inc
sub
(bad)
icebp
es
sbb
and
add
das
add
mov
xchg
inc
cmp
sub
or
shl
sub
mov
sub
or
loope
push
int
dec
mov
lds
jmp
push
lock
pop
pop
icebp
xor
dec
inc
cmps
adc
jne
jecxz
outs
push
sti
pop
aaa
adc
ret
xchg
push
imul
ficomp
mov
pop
imul
sub
(bad)
mov
xchg
fs
sbb
push
xchg
pusha
or
enter
and
in
lahf
add
add
inc
loopne
jge
ins
lods
mov
mov
inc
inc
dec
sub
xlat
popa
imul
sub
cmps
push
adc
gs
rcr
fcomp
add
mov
pop
adc
cmp
pusha
mov
and
xchg
inc
push
ins
dec
inc
or
inc
adc
or
adc
(bad)
movups
adc
test
es
add
int3
mov
add
xchg
sub
data16
mov
pop
xor
adc
movs
test
cs
xor
pop
add
adc
inc
push
cmp
pop
xlat
mul
lds
je
icebp
inc
mov
cdq
adc
jg
ret
mov
inc
loopne
fwait
xchg
mov
dec
pop
xor
outs
repnz
jne
add
adc
inc
in
jo
ja
cmp
dec
aam
js
ret
xlat
dec
add
xor
in
push
rcr
and
jne
or
push
or
add
mov
mov
push
push
pop
xor
mov
push
sbb
test
stos
in
fs
sub
mov
jae
jmp
jae
and
shl
jmp
ror
mov
or
or
fmul
out
or
aas
mov
sbb
sub
push
push
ret
fadd
adc
bound
sbb
adc
adc
sub
dec
enter
repz
pop
push
sbb
dec
mov
test
rcl
cmp
cli
inc
loope
add
adc
frstpm(287
imul
and
lods
cwde
(bad)
in
inc
shr
int3
sub
push
imul
push
or
push
adc
jno
fsub
fdivr
or
cmp
movs
shr
loope
mov
adc
and
outs
sbb
cmp
and
ret
add
cmps
push
or
dec
cmp
jmp
lea
sub
mov
imul
jp
or
dec
cwde
movs
(bad)
mov
fnop
iret
jmp
jb
mov
xchg
inc
pop
scas
cmp
int
pop
push
jne
sbb
js
adc
jbe
mov
xor
scas
mov
adc
pop
sbb
push
mov
mov
xchg
and
sub
and
dec
mov
fld
call
pop
test
ror
sub
xchg
dec
sub
ficomp
imul
inc
fadd
test
cmp
mov
dec
in
mov
shl
pop
paddusb
pop
pusha
adc
push
mov
xor
xchg
inc
jnp
arpl
mov
mov
test
and
dec
sub
and
sbb
punpckhdq
xchg
xchg
jecxz
in
in
sub
les
xor
mov
add
adc
xor
sbb
jge
jo
jecxz
je
mov
or
push
in
or
jecxz
jno
xor
shr
fwait
mov
(bad)
enter
(bad)
mov
stc
rep
add
or
mov
sbb
lock
in
xor
mov
dec
jbe
jg
mov
push
inc
imul
push
cdq
add
sub
push
dec
aas
mov
mov
dec
lods
sub
nop
arpl
loope
ret
xchg
dec
rol
jp
adc
ins
sub
add
or
adc
mov
movs
xlat
and
or
in
inc
add
push
pop
dec
pop
cmc
xchg
lock
inc
les
aam
push
jne
push
imul
retf
call
leave
ja
xchg
push
and
add
mov
xor
fstp
mov
dec
xchg
shl
mov
jns
pop
and
das
cmp
fnsetpm(287
in
ficomp
arpl
mov
ins
sub
cmp
loope
bound
movs
repnz
push
inc
sbb
call
jle
aam
popa
test
ret
jp
mov
or
and
xchg
and
add
ror
sbb
mov
and
cmp
add
add
push
add
pop
(bad)
cmp
nop
jb
jp
outs
movs
and
push
add
dec
adc
mov
cmps
movsx
push
das
xor
popa
mov
es
add
jmp
push
jp
pop
sub
push
dec
add
ret
xlat
leave
test
push
inc
cld
lahf
sub
mov
or
and
das
pop
shl
add
bound
pop
into
movs
fs
imul
clc
(bad)
lock
sub
sbb
jo
inc
lock
xor
xchg
mov
add
icebp
inc
pusha
movs
or
mul
jge
add
rcl
cmps
add
inc
xor
imul
sbb
cmp
inc
movs
fs
shr
stos
mov
inc
dec
sub
inc
xlat
mov
inc
mov
popa
call
sub
imul
movs
stos
and
inc
add
and
aam
add
inc
pop
dec
cs
add
push
call
lods
out
aam
sub
mov
mov
sbb
sub
add
push
xchg
push
arpl
pop
mov
movs
sti
sbb
or
sahf
shr
loopne
std
sbb
or
sub
jmp
out
pop
imul
jae
mov
fild
push
sbb
je
pop
sbb
adc
push
adc
jmp
jae
cmp
sub
adc
movups
aaa
xor
dec
imul
popf
addr16
push
push
imul
lea
and
mov
mov
or
sub
jmp
add
sbb
test
sub
add
push
add
lds
les
(bad)
or
adc
mov
jmp
lds
lods
loopne
loope
pop
dec
sbb
pusha
jnp
add
and
fimul
mov
dec
test
pop
and
adc
pop
mov
xchg
lods
mov
out
pop
cwde
push
jns
movs
adc
adc
jge
or
jo
ret
cmp
xchg
sub
adc
cdq
sub
or
int3
sub
cvttps2pi
movs
gs
test
or
xchg
pop
dec
xor
dec
lods
and
cli
icebp
mov
adc
jmp
cmp
pop
adc
mov
mov
push
adc
xor
push
adc
nop
jo
and
cmps
ins
fnsave
and
and
push
popa
mov
jmp
adc
cmp
adc
adc
or
cmp
mov
and
mov
movs
lds
cmp
mov
loop
mov
adc
pop
add
cmp
lds
shl
xor
inc
adc
and
sbb
pop
sub
dec
jns
pop
inc
sbb
xchg
call
inc
clc
xor
push
xlat
pop
sbb
ins
in
inc
in
aaa
xor
mov
sbb
gs
clc
or
push
(bad)
jb
dec
xchg
sub
cmps
adc
popa
shl
mov
(bad)
mov
ds
arpl
xor
push
and
lahf
xlat
popa
pop
js
lds
ret
out
jns
sbb
or
add
lea
sub
mov
dec
mov
push
out
pop
repnz
pop
sub
(bad)
outs
aas
ins
pop
mov
ss
xor
adc
xchg
and
pop
add
push
dec
(bad)
pop
push
ins
and
ss
mov
and
outs
and
jne
dec
add
lods
out
add
pop
or
xor
xchg
leave
and
sbb
stos
inc
aad
clc
ins
sbb
pop
sub
lock
adc
fld
mov
bound
xor
or
adc
out
je
xchg
(bad)
jmp
stos
xchg
cmp
in
adc
es
jge
ds
mov
cmp
pushf
(bad)
xor
je
stos
xchg
pop
lock
jne
arpl
cs
or
inc
pop
sub
in
fcomp
pop
jp
stos
jno
syscall
sbb
jae
out
clc
and
add
inc
xlat
and
inc
mov
mov
and
adc
fld
shl
fimul
inc
ret
and
cmp
pop
add
lods
sbb
adc
mov
cmps
addr16
xchg
mov
out
aad
mov
loope
into
sbb
lock
push
dec
mov
pop
dec
lods
xor
jp
shl
mov
add
push
push
or
lock
fist
add
call
adc
shr
adc
lods
inc
dec
out
jg
sub
add
fisttp
jns
xor
dec
int3
pushf
inc
push
mov
ins
add
dec
fmul
fucomi
and
or
or
add
or
mov
dec
push
add
fisubr
in
sub
rcr
pop
mov
mov
outs
inc
pop
or
adc
and
xor
mov
cmps
pop
ret
mov
inc
loop
adc
mov
push
stos
shr
fsubr
repz
add
or
jne
lea
xor
test
xchg
and
pop
jbe
add
push
sbb
pop
in
mov
and
xchg
xor
push
rcl
rol
inc
les
dec
fidivr
inc
adc
ins
jnp
rol
(bad)
and
loope
and
call
pop
cld
xchg
push
dec
sub
sub
mov
adc
jne
div
loop
sub
or
adc
or
inc
and
mov
cmps
mov
jno
faddp
jmp
stos
or
or
ds
sub
outs
ds
push
lods
lar
lahf
add
loope
rcr
mov
sub
or
fs
loopne
ret
movs
mov
test
push
pop
lods
(bad)
fnstenv
adc
inc
add
and
jns
sub
adc
dec
in
adc
pop
shr
ret
loope
mov
adc
adc
sub
ror
enter
and
lods
lods
mov
add
push
mov
xor
adc
ins
repz
add
repz
jge
ins
dec
sahf
sub
in
dec
movs
rol
add
loope
sar
mov
or
pop
pop
loope
cmp
lock
add
inc
mov
inc
(bad)
or
test
sbb
test
in
imul
adc
ror
and
sbb
adc
mov
or
inc
pop
mov
mov
xchg
ins
retf
int
stc
adc
and
test
add
js
or
int
sub
scas
in
jb
or
stos
push
jb
int3
es
imul
pop
and
in
push
mov
xchg
push
xchg
rol
test
out
and
imul
mov
lahf
ret
sub
mov
adc
mov
pushf
iret
ret
mov
adc
ins
test
pushf
sbb
ret
sbb
lock
add
lods
retf
loop
and
iret
mov
xor
sub
stos
lods
outs
mov
das
mov
je
popaw
rcl
retf
int
pusha
adc
aam
mov
adc
inc
xor
cwde
dec
jne
into
adc
push
jne
mov
or
pop
sbb
add
outs
retf
mov
cmp
mov
push
xchg
or
inc
or
mov
push
arpl
arpl
jge
arpl
adc
(bad)
(bad)
or
pop
or
or
in
xchg
push
sub
or
inc
sahf
or
xchg
aas
inc
adc
retf
or
inc
add
mov
test
fs
shl
call
pusha
dec
inc
or
mov
and
add
test
sbb
call
xchg
mov
ins
xor
add
jnp
les
rcl
xchg
fidivr
dec
jmp
hlt
jno
fistp
mov
or
and
push
jge
ret
push
jo
sbb
dec
jno
adc
ret
nop
inc
lods
scas
push
pushf
stos
mov
push
popf
dec
push
call
test
mov
or
pop
bound
pop
xchg
lock
test
mov
dec
cmc
cdq
inc
xor
push
pop
inc
inc
leave
clc
push
xor
hlt
popa
xor
add
(bad)
movs
adc
(bad)
js
and
and
adc
and
lock
xchg
xchg
inc
pusha
and
cmp
aam
retf
or
mov
call
and
dec
inc
enter
mov
clc
push
xor
add
xchg
shl
add
or
xor
add
inc
inc
call
sub
push
sbb
fcom
and
push
jnp
push
cmp
dec
dec
in
mov
sub
gs
add
std
xor
call
je
or
js
xlat
movs
sti
sar
and
or
adc
add
pop
add
sub
add
rol
sub
pop
and
(bad)
sbb
sbb
jne
push
push
test
popa
pop
cmp
adc
pop
cdq
jne
stos
inc
push
adc
dec
lahf
mov
scas
xor
icebp
sub
dec
adc
in
jbe
test
les
nop
mov
inc
shl
push
fsub
and
and
sbb
rol
xor
shl
xchg
loopne
jmp
ret
dec
es
mov
sub
mov
pushf
scas
adc
push
(bad)
adc
xchg
dec
add
push
int3
inc
ins
add
push
ret
in
mov
pop
jmp
inc
ror
neg
or
and
inc
inc
add
add
xchg
dec
or
xor
std
dec
in
mov
pop
retf
int
pusha
sub
dec
inc
daa
add
adc
push
inc
inc
mov
add
mov
in
nop
cmp
jmp
les
gs
add
push
lods
in
out
xor
daa
sbb
jmp
xchg
fadd
fprem1
call
or
rol
lock
xchg
popa
sbb
jl
das
cmp
pop
or
adc
adc
or
xor
jg
sti
push
lods
popa
or
dec
enter
and
add
push
add
mov
sub
shl
fisttp
inc
dec
sub
inc
inc
and
sub
sub
xchg
cmp
push
xchg
(bad)
and
int
rcr
or
cmps
pop
jbe
(bad)
and
add
sub
sub
stc
lea
xchg
push
inc
mov
xchg
sub
or
adc
mov
jne
cmp
pop
ins
or
nop
aam
cmps
dec
neg
jnp
pop
and
jbe
sub
mov
add
ins
sub
or
pop
jmp
add
pushf
jp
push
jae
leave
jl
pusha
sub
ins
or
sub
mov
inc
jns
aad
pop
aas
or
mov
test
repnz
mov
add
push
pusha
daa
adc
popa
in
jno
adc
iret
in
or
in
mov
out
leave
add
pop
sbb
xchg
les
mov
ret
pop
out
hlt
loope
push
or
dec
out
hlt
push
dec
outs
mov
xor
adc
xor
mov
mov
inc
jg
ds
or
shl
shl
ud0
out
fmul
fmul
or
adc
jnp
mov
xchg
stc
inc
fadd
sub
hlt
xchg
loopne
sub
adc
mov
pop
adc
fdiv
out
and
mov
push
es
nop
add
or
enter
ret
xor
shl
or
xor
stos
lea
jmp
push
pop
or
adc
mov
retf
xchg
pop
sub
push
xor
ja
or
mov
or
cmp
push
das
ror
xor
mov
call
jge
cmp
push
mov
mov
ins
xor
outs
adc
and
pop
mov
add
push
add
andps
adc
or
jmp
mov
stos
pop
popa
xor
out
cmp
js
imul
dec
add
jmp
or
push
jecxz
and
movs
and
xchg
ss
adc
cmp
dec
add
xchg
xor
mov
in
inc
and
push
leave
pop
jo
mov
push
sub
cmps
add
jle
sub
or
int3
nop
jns
inc
scas
sbb
push
mov
push
ret
mov
sbb
xor
cmp
or
jmp
fild
popf
in
sbb
push
in
jae
mov
mov
inc
add
add
lock
sub
inc
cmp
cmovne
mov
inc
inc
aas
add
or
mov
adc
and
pusha
inc
scas
jmp
pop
xor
shr
lods
in
pop
mov
mov
ret
xchg
mov
les
scas
int
xor
push
mov
mov
dec
push
mov
fidiv
out
es
sbb
mov
xor
jmp
test
push
nop
cmp
dec
lock
shl
jne
mov
or
fdiv
mov
or
sbb
jb
adc
or
pushf
push
xchg
mov
nop
nop
ja
fs
xor
xor
(bad)
xchg
xor
fsub
mov
jae
pusha
outs
jb
add
nop
shl
adc
in
jae
pop
pop
lods
mov
ror
add
jg
mov
in
mov
mov
stc
rcr
shl
mov
xor
adc
sbb
push
cmp
movs
sub
push
xor
sahf
mov
lods
mov
pushf
or
cmps
xor
int3
mov
mov
(bad)
(bad)
pop
inc
test
xor
and
sbb
fnstsw
prefetchw
stos
inc
jmp
stc
xchg
cld
mov
pop
rcl
mov
fidivr
cmp
inc
fwait
ret
mov
test
fild
imul
sbb
push
fsub
dec
and
imul
ss
movs
ds
sbb
dec
test
mov
jnp
test
pushw
test
ja
dec
dec
jnp
js
dec
jnp
inc
inc
in
dec
add
xchg
or
inc
sbb
inc
fs
mov
push
adc
inc
and
inc
fnstsw
fbstp
or
inc
aad
sbb
xchg
mov
mov
dec
ret
iret
call
push
push
dec
xor
addr16
xlat
cmps
adc
mov
pop
in
xchg
es
fcom
pushf
jb
in
repz
aam
loopne
inc
inc
inc
fs
cmp
jb
inc
xchg
cld
cmp
ror
int3
mov
mov
iret
leave
popf
movs
lods
add
fidivr
or
push
jecxz
loop
popf
out
sti
(bad)
aaa
xchg
mov
cdq
push
ficom
sub
call
into
cmc
push
add
test
jo
dec
dec
rcl
cmp
or
(bad)
cmp
push
or
ftst
rcl
aaa
push
push
addps
sbb
jmp
ds
stos
dec
cmp
shr
pusha
mov
add
adc
and
jge
mov
mov
mov
test
or
pop
pop
stos
and
jmp
in
inc
movs
aaa
adc
test
or
cmp
or
mov
dec
sbb
xchg
inc
aaa
inc
dec
pop
adc
mov
mov
dec
jbe
adc
adc
ins
jns
sbb
and
add
pop
dec
maskmovq
xor
dec
enter
inc
fisttp
add
push
and
sbb
fs
adc
sub
adc
jle
inc
fdiv
adc
inc
scas
mov
xchg
fwait
xor
xor
push
ds
in
push
xchg
dec
xchg
sbb
jo
sub
in
jo
sub
and
adc
xor
(bad)
jo
and
jmp
dec
dec
xor
div
jg
push
sub
adc
adc
pop
pop
add
inc
and
sub
and
and
xchg
shl
js
shl
sub
and
push
mov
sbb
pop
ret
xor
cmp
aas
mov
dec
in
test
push
cmp
(bad)
mov
mov
ret
push
push
out
fcmovb
and
jmp
xchg
cmc
cwde
sub
jne
and
in
in
dec
jle
adc
aam
fcom
enter
adc
mov
adc
pusha
push
push
push
xchg
stos
pop
(bad)
jp
imul
xor
push
js
loopne
mov
loop
jne
adc
lods
fadd
and
popa
add
inc
or
inc
mov
dec
push
dec
ins
and
pop
imul
test
les
sti
loopne
mov
cli
inc
fdivr
daa
lea
fsub
inc
scas
fiadd
in
add
xor
mov
push
push
stos
adc
and
(bad)
fucom
nop
xchg
xchg
mov
enter
cmp
push
xchg
mov
adc
adc
dec
call
mov
adc
xor
inc
shl
xchg
cmp
mov
sub
dec
jno
sar
clc
rol
sbb
test
mov
loopne
push
or
and
fdivr
retf
imul
xor
jno
aam
push
jbe
jge
sub
push
pandn
sbb
cmps
sub
add
push
fdiv
cdq
cmc
sbb
fcom
xchg
cmp
jp
test
mov
dec
pop
jnp
out
cmp
mov
or
mov
rcr
loopne
and
and
enter
loopne
(bad)
push
pop
dec
enter
sub
xor
cmp
aas
inc
push
add
test
push
movs
or
dec
push
push
sbb
mov
mov
mov
and
fs
fldcw
test
push
icebp
ss
shr
pop
push
in
fiadd
loopne
sub
fisttp
add
outs
pusha
nop
push
adc
test
imul
xchg
jl
cmp
enter
push
sub
add
push
movlps
jb
daa
xlat
cmp
add
pusha
push
mov
xor
ret
sub
dec
mov
or
adc
sbb
cmp
or
cmps
sbb
xchg
lea
mov
sub
or
add
jecxz
pop
sbb
and
sub
jmp
frstor
push
sbb
pop
xchg
lods
or
adc
sub
stos
hlt
retf
and
push
aam
out
inc
push
mov
mov
xor
das
sbb
call
pop
sti
add
sub
sar
jb
adc
enter
sbb
lods
les
cmp
ror
dec
add
inc
stos
and
jg
jae
dec
mul
and
cmp
add
add
outs
push
(bad)
fucomp
adc
pop
xchg
mov
sub
test
cmp
add
xor
fsubr
aas
pusha
push
xchg
adc
repnz
pop
outs
adc
mov
mov
mov
ins
and
pusha
xchg
and
add
or
xchg
pop
daa
add
dec
dec
adc
xor
jl
sub
movs
(bad)
fs
retf
cmp
push
cmp
push
cmp
jecxz
or
pop
xchg
popf
pop
and
test
cmp
push
jns
mov
cmp
cmp
xchg
sub
xchg
add
enter
adc
xchg
rol
and
mov
dec
in
jb
dec
pop
dec
cmp
push
push
push
and
inc
outs
lahf
je
add
dec
push
inc
daa
push
mov
sbb
sub
pop
dec
repnz
jl
add
push
das
push
cdq
mov
div
outs
ja
mov
daa
das
sub
ins
mov
lock
jae
daa
jg
push
mov
dec
pop
push
rol
cdq
push
push
pop
(bad)
mov
dec
jecxz
out
dec
xor
push
(bad)
sbb
pop
pop
dec
jae
mov
xor
jle
dec
or
aaa
sbb
pop
mov
stc
fcomp
or
pop
ins
jo
xor
xor
xor
xor
test
xor
xchg
cwde
pushf
mov
movs
test
mov
xor
xor
xor
(bad)
enter
xor
xor
fcomp
loopne
xor
xor
call
xor
hlt
clc
cld
and
and
or
and
and
adc
sbb
inc
mov
mov
es
sub
jo
pop
out
push
add
bound
dec
ja
add
sub
sub
xchg
xchg
mov
aaa
push
movs
jb
jo
je
enter
js
fs
sub
add
test
sbb
sub
dec
nop
dec
in
sub
jo
or
xchg
movs
jb
mov
test
fsubr
pop
push
mov
es
mov
fs
sbb
xor
pop
push
mov
pop
dec
in
enter
xchg
or
movs
jb
cwde
fsubr
shl
sub
push
fsub
call
call
mov
sbb
inc
sub
push
sub
cmp
pop
dec
in
dec
lods
sub
push
mov
or
inc
sub
test
aam
movs
jb
sbb
sbb
push
push
adc
iret
xchg
inc
sub
js
retf
or
jne
xor
daa
pop
cmps
gs
xchg
enter
push
sbb
push
imul
mov
popa
push
sbb
xchg
daa
sbb
shl
clc
inc
sub
aas
(bad)
imul
jmp
jbe
sub
nop
jp
xchg
gs
js
mov
xchg
bound
rcr
dec
arpl
jae
or
mov
test
daa
lea
hlt
ins
jns
nop
push
retf
xor
xor
pop
pop
ret
adc
aaa
push
add
xor
xor
mov
(bad)
lods
loope
xor
push
arpl
and
daa
ins
or
pop
mov
pop
dec
xor
imul
cmps
or
or
dec
xchg
add
dec
aas
lods
mov
iret
popa
ins
and
and
daa
sbb
das
fstp
in
pop
xchg
add
lods
pop
pop
xchg
arpl
mov
daa
xchg
ss
and
jg
jns
sbb
das
je
addr16
mov
push
cmp
pop
fs
add
fcom
pusha
xchg
das
pop
push
ss
mov
(bad)
inc
outs
arpl
ret
loope
push
push
adc
(bad)
jmp
pop
call
inc
xor
arpl
sub
(bad)
xchg
rcl
dec
jl
pop
mov
fstp
xor
jg
inc
add
scas
inc
jne
jbe
inc
aaa
cmp
mov
or
push
iret
icebp
out
pop
inc
mov
rcr
nop
imul
jmp
xchg
fcom
cmp
inc
xor
js
jmp
jb
test
xchg
lock
or
jl
loopne
imul
push
push
add
daa
test
or
clc
jo
xchg
mov
mov
push
inc
xchg
push
std
jg
aam
sahf
adc
add
(bad)
out
dec
imul
pushf
cwde
jae
or
ss
jmp
push
push
pop
sub
pop
push
xor
jae
sub
dec
add
scas
fs
pop
add
add
sub
pusha
cmp
xlat
add
or
inc
outs
ins
jecxz
fld
inc
xor
dec
and
sbb
inc
push
sbb
xor
outs
pop
xchg
adc
and
inc
imul
out
pop
push
and
cbw
fild
loopne
loopne
(bad)
int3
jb
mov
pop
or
not
je
or
add
adc
add
inc
fwait
or
or
add
ficomp
mov
push
fs
clc
jno
pop
leave
sub
mov
mul
loope
or
add
push
or
and
nop
mov
and
daa
inc
jne
je
and
or
(bad)
cmps
mov
icebp
loopne
fs
ins
adc
mov
call
xchg
add
and
mov
and
dec
xor
(bad)
aam
bound
loopne
ss
cli
and
lods
inc
mov
jno
and
(bad)
push
push
das
pop
es
or
add
add
adc
das
aam
push
or
cmp
movs
push
popf
jae
movs
adc
out
mov
popa
(bad)
sub
push
gs
pop
inc
xor
out
dec
movs
into
xor
add
cmp
ret
dec
je
adc
or
outs
jns
pop
dec
mov
or
(bad)
imul
ins
test
jb
aad
jns
mov
jns
adc
ja
pop
cmp
retf
cmps
cmp
xchg
mov
jle
aaa
pusha
cwde
cmp
mov
(bad)
dec
add
in
(bad)
in
(bad)
jmp
jmp
cmp
sbb
dec
sub
mov
mov
cmp
js
adc
jmp
(bad)
sub
dec
pop
mov
jle
repz
xchg
jnp
test
add
push
in
inc
pop
fbld
mov
fisttp
push
push
sub
inc
xchg
add
gs
lock
adc
jne
mov
pop
jnp
pop
xchg
fidiv
out
mov
shl
sub
std
push
mov
enter
es
and
jo
mov
ins
or
or
jo
enter
adc
pop
push
push
mov
fs
mov
and
sub
into
aad
or
adc
int3
(bad)
mov
dec
dec
enter
pop
outs
adc
inc
test
push
aam
xchg
cmp
(bad)
sahf
fistp
movaps
ror
inc
loopne
repnz
pop
adc
push
jmp
add
pusha
add
aaa
pop
and
or
sub
mov
test
or
mov
xchg
push
mov
xor
ins
adc
shrd
and
movs
es
adc
mov
sbb
and
adc
ret
and
push
sub
add
pop
in
inc
add
push
inc
push
rcr
xor
dec
fld
push
ins
mov
jp
sbb
adc
cmp
popa
push
shl
dec
jl
(bad)
pop
inc
inc
es
cmp
dec
das
add
or
dec
out
je
adc
arpl
nop
or
mov
mov
or
daa
ret
pop
push
leave
adc
inc
ror
sbb
pop
dec
inc
xchg
push
adc
icebp
dec
adc
test
pop
dec
(bad)
pop
push
pop
ror
nop
clc
rcr
sbb
in
dec
test
or
xor
movs
ret
ins
push
aas
cmp
xor
and
and
pop
cmps
add
mov
add
out
lods
nop
mov
movs
inc
cmp
push
dec
inc
je
mov
fs
dec
push
cmp
xor
xchg
pop
xchg
outs
inc
out
adc
cmp
push
out
loopne
cwde
and
stc
test
pop
xchg
mov
push
jb
mov
jae
adc
push
sbb
jecxz
inc
sub
sub
dec
(bad)
shr
xor
in
leave
xor
pop
les
xchg
sbb
and
clc
sbb
jl
mov
sbb
jns
aas
xchg
pop
fild
movs
jmp
and
stos
and
push
inc
push
test
stos
dec
push
ja
addr16
jmp
cwde
ins
mov
js
cmps
cmp
clc
popa
cmp
aad
and
scas
or
in
xchg
or
test
or
add
xchg
mov
push
pop
in
test
add
pop
add
xor
test
add
mov
inc
pop
pusha
hlt
push
mov
outs
pop
push
js
pop
push
ins
inc
fucomp
fcmovne
inc
or
sbb
sbb
adc
sub
daa
sbb
or
push
call
cld
dec
and
add
or
mov
jge
and
push
jmp
mov
cmps
push
jb
shl
push
pcmpgtw
mov
scas
clc
xchg
outs
(bad)
pop
ror
mov
data16
jmp
sbb
outs
jmp
add
inc
not
sbb
push
cwde
jl
mov
adc
and
inc
lea
fist
mov
out
repz
fldenv
lahf
xor
pusha
push
and
adc
adc
movs
xor
mov
bound
cmp
jb
nop
xchg
xchg
nop
sub
pushf
cwde
test
inc
pop
loopne
call
retf
xchg
xor
and
jo
(bad)
xchg
mov
xor
push
sub
xor
imul
rcr
xor
call
ficomp
mov
inc
sbb
adc
stos
fadd
cwde
sbb
icebp
mov
jne
jbe
dec
mov
mov
nop
je
xor
aaa
jne
xor
daa
aas
mov
inc
xor
mov
cmp
xor
jnp
outs
dec
or
xor
and
pop
or
sbb
add
retf
je
jmp
adc
jl
popf
std
mov
jl
mov
dec
pop
mov
cmps
into
pusha
je
and
push
push
cdq
call
adc
xchg
mov
out
jmp
pop
inc
(bad)
fldcw
or
call
jbe
push
js
ret
add
lods
xor
mov
add
or
or
lods
mov
cwde
or
int
push
fcmovne
jo
inc
and
jo
cld
xor
dec
inc
inc
pop
jae
retf
add
mov
fiadd
(bad)
pop
push
jne
and
popa
jmp
ins
adc
or
jne
jle
jbe
and
dec
inc
cmp
add
repnz
ja
cmp
enter
ss
mov
bound
inc
mov
icebp
leave
cli
sbb
inc
ret
or
stos
les
les
in
cmp
outs
pop
enter
mov
retf
shl
fcmovu
sbb
cld
jae
or
push
ret
dec
jl
inc
push
dec
cdq
mov
test
mov
fxch
inc
push
in
add
or
add
(bad)
mov
mov
dec
pop
xor
mov
pop
jg
shr
addr16
ss
adc
retf
cmp
pop
jno
int
jnp
mov
daa
leave
pusha
dec
(bad)
int
cs
or
push
int3
aad
dec
movs
inc
es
sub
push
(bad)
cmc
xchg
cmp
cmp
or
mov
sub
mov
pop
icebp
and
push
dec
(bad)
or
scas
cmp
add
or
out
cmps
mov
pop
(bad)
push
rcr
enter
adc
ja
sub
call
in
adc
cmp
add
sti
cli
and
sti
ret
hlt
adc
mov
sbb
sti
xor
and
pop
inc
bound
daa
or
movs
clc
cs
lds
clc
pop
adc
add
and
aam
sub
add
add
pop
imul
mov
inc
mov
ror
and
movs
jp
push
mov
gs
pop
and
push
dec
mov
lahf
lock
add
push
popa
cwde
jle
dec
adc
pop
fadd
leave
add
ja
xchg
push
cmp
adc
and
lea
in
imul
adc
loop
cdq
mov
mov
cmps
mov
out
aaa
call
test
cmp
cwde
cwde
or
mov
rcl
sbb
xor
jmp
adc
(bad)
push
mov
xchg
xchg
leave
sbb
and
daa
data16
ins
pop
je
push
shl
clc
mov
loope
xor
(bad)
sbb
int3
xchg
jns
adc
xlat
aaa
mov
scas
xchg
lods
push
xchg
test
and
stos
iret
ror
test
ror
dec
cmps
jns
in
pop
jmp
xchg
mov
(bad)
sti
sbb
xor
popa
ficomp
(bad)
xchg
aam
xor
test
dec
movs
jnp
mov
jno
cdq
xor
and
dec
(bad)
sbb
cmps
cld
repnz
mov
pop
ret
nop
sbb
ret
pcmpeqb
dec
mov
add
es
add
dec
add
fisub
mov
enter
fld
ror
sbb
add
shr
jmp
div
push
pushf
pop
push
in
push
in
into
fnstcw
ins
mov
push
repz
pop
push
fs
push
fcomp
or
enter
ins
rcl
cs
jge
and
pusha
cmps
mov
push
inc
hlt
push
cmc
push
clc
in
ins
fwait
imul
mov
neg
inc
mov
frstor
mov
add
push
jbe
ss
mov
mov
shl
adc
loopne
sub
lds
ins
ss
xabort
mov
or
call
push
or
pop
or
push
jmp
data16
sub
fwait
push
lods
cmps
ret
sub
push
int3
adc
dec
push
jnp
mov
mov
ins
pushf
sbb
cwde
sub
cmps
xchg
jmp
mov
and
mov
or
xchg
pop
sar
xchg
in
add
sbb
jmp
mov
and
sub
icebp
jmp
pop
or
popa
fcomp
adc
and
dec
add
dec
into
adc
xor
in
in
and
cmp
jae
imul
and
add
nop
dec
leave
outs
aam
fild
jnp
push
pop
jl
stos
into
adc
lods
loop
push
add
mov
inc
mov
rcl
xor
repz
adc
add
push
test
push
call
dec
or
leave
pusha
adc
xchg
push
sbb
in
inc
mov
adc
(bad)
fldcw
pop
gs
in
xor
add
dec
shl
imul
sub
je
loopne
xchg
out
mov
shl
and
or
test
xchg
je
add
and
out
jmp
push
and
xor
jecxz
pop
sti
mov
mov
mov
fdiv
xchg
or
hlt
xor
pushf
or
movs
xor
movs
imul
lods
fiadd
sbb
call
enter
imul
jl
mov
ret
mov
pop
mul
lea
inc
in
sub
adc
xor
daa
adc
xchg
add
imul
or
xor
cmp
xchg
mov
dec
bswap
cmp
pop
imul
inc
dec
add
push
outs
push
mov
pop
or
and
jo
shl
pop
shl
add
mov
(bad)
stc
push
mov
mov
sub
in
mov
xchg
xor
sbb
mov
mov
arpl
rol
js
imul
sub
cmp
add
pop
repz
fmul
ins
pushf
sub
jmp
ds
in
pop
dec
outs
aas
or
pop
fmul
xor
js
(bad)
mov
loopne
sar
fld
jae
sub
sub
jne
jg
dec
pop
push
xchg
xchg
das
jle
mov
cmp
jne
ficom
ins
sbb
xchg
pop
mov
inc
inc
jbe
pushf
sub
retf
sbb
mov
jnp
mov
pop
cmp
cmp
test
mov
cmp
add
ins
or
fnstcw
ror
popf
mov
xchg
and
or
xor
cmp
loopne
xchg
cli
stos
mov
and
mov
lahf
(bad)
mov
enter
xchg
mov
mov
int3
jnp
cmp
jmp
jmp
mov
pop
or
dec
int3
dec
imul
add
xor
push
and
shr
add
call
or
mov
sbb
add
cs
xchg
add
mov
jge
sub
push
xor
xchg
cmp
push
je
dec
adc
add
add
or
push
push
sbb
addr16
es
pop
mov
push
adc
fmul
mov
add
pop
xchg
ja
mov
adc
mov
scas
mov
pop
sbb
pusha
adc
mov
sbb
ror
je
ds
and
cdq
rcr
pop
into
push
dec
mov
into
mov
int
hlt
or
jge
cs
test
and
adc
popf
jo
ins
aad
adc
push
xchg
adc
mov
jo
les
mov
dec
sbb
mov
mov
mov
sub
inc
push
mov
sbb
es
out
push
xchg
repnz
jmp
push
add
add
(bad)
(bad)
mov
mov
leave
enter
mov
enter
jmp
and
mov
push
jge
sbb
movs
adc
xchg
aaa
fisubr
into
dec
enter
cmp
cmps
dec
or
dec
or
mov
not
inc
je
test
rcr
mov
call
or
xor
xor
pop
push
and
je
lds
dec
call
sub
hlt
pop
sub
hlt
and
scas
add
xchg
sbb
mov
and
add
pop
jo
inc
stc
and
mov
std
iret
jge
inc
push
imul
dec
push
mov
popa
and
pusha
pop
ja
mov
imul
loopne
retf
add
mov
mov
fidivr
adc
and
adc
dec
dec
jge
add
sbb
or
stos
xchg
mov
cmp
popa
shl
lock
test
xchg
leave
jmp
or
xchg
clc
shr
jge
mov
mov
xchg
add
adc
pop
or
mov
dec
fcomip
xchg
jnp
push
stos
sbb
push
loopne
nop
dec
in
(bad)
cmp
loope
test
fsubr
in
fucomip
imul
sub
fcom
add
sbb
arpl
loope
mov
enter
inc
inc
cmp
push
pop
cmp
jno
clc
xchg
arpl
popa
add
rep
enter
push
test
inc
das
pop
inc
sbb
add
xlat
or
adc
xor
in
clc
sub
sbb
dec
test
sub
mov
xor
or
mov
sahf
sub
add
xor
sub
jl
movs
ror
fwait
inc
scas
jo
xlat
aam
loopne
xchg
nop
scas
sar
in
xchg
les
pop
int3
aad
mov
test
cs
out
jmp
cmps
int3
ja
outs
in
jnp
push
out
jge
fsub
(bad)
loope
enter
jle
mov
loope
pop
sbb
dec
sbb
xor
es
pop
or
ret
ins
outs
ror
ud1
adc
dec
ja
in
or
jno
push
xor
mov
mov
sbb
xchg
xchg
or
sub
rcl
push
cmc
popa
pop
cmp
lds
add
jg
jne
xchg
mov
push
arpl
or
mov
mov
push
cdq
sti
ret
push
rcr
outs
(bad)
mov
cli
int3
in
ins
fs
inc
test
push
ficom
mov
jp
enter
outs
popf
xor
push
je
and
ds
jb
stc
dec
fdivr
pop
push
hlt
push
inc
push
push
lahf
cs
out
sbb
inc
and
cmp
pop
sar
and
xor
mov
adc
mov
and
pop
and
dec
sbb
mov
aam
sbb
add
fucomp
cwde
out
int3
pop
adc
test
mov
xchg
inc
jbe
cmp
xchg
ret
cmp
rcl
lods
mov
or
fild
jae
mov
mov
mov
cmp
neg
adc
mov
mov
div
leave
ins
in
pop
pop
subps
leave
leave
leave
pop
pop
inc
inc
daa
xor
leave
inc
inc
xlat
xchg
xchg
or
and
in
inc
nop
jno
(bad)
add
int3
les
and
jo
call
ffree
(bad)
adc
inc
call
out
mov
hlt
or
xor
and
and
push
sbb
and
fbstp
and
dec
adc
sub
inc
xchg
aaa
dec
loope
nop/reserved
dec
loope
cvtdq2ps
push
adc
xor
mov
push
pop
and
or
rcr
push
dec
in
ja
jne
jns
ror
mov
xchg
xor
dec
test
push
mov
adc
mov
inc
adc
jne
push
jae
in
mov
or
xchg
mov
and
sbb
into
nop
xchg
adc
hlt
pop
sbb
or
mov
enter
inc
push
xlat
adc
aaa
and
or
rol
inc
inc
loope
dec
adc
adc
loope
mov
ins
call
pop
and
or
test
mov
and
or
in
ds
cs
pop
mov
push
pop
dec
popa
scas
mov
cmps
xchg
sub
test
rcl
sub
mov
loopne
cwde
add
adc
pop
add
mov
pop
aad
cwde
pop
xlat
adc
add
dec
leave
add
cmps
cmp
mov
mov
call
mov
outs
adc
daa
push
add
pop
mov
dec
test
(bad)
pop
xchg
movs
leave
fbstp
stos
and
or
jp
mov
or
push
mov
leave
test
adc
mov
and
std
nop
dec
dec
xor
mov
adc
push
loopne
scas
test
fs
sub
mov
push
scas
out
call
or
adc
mov
add
fdiv
ficomp
adc
push
test
fndisi(8087
pusha
xor
arpl
adc
pop
pop
pop
xor
sbb
out
fwait
test
xchg
dec
ja
inc
or
mov
daa
shl
jg
fwait
in
xchg
mov
or
cdq
and
and
es
sbb
xor
sbb
xor
or
jmp
fst
sahf
push
and
or
cdq
mov
mov
sbb
cmps
loope
daa
sub
jo
ins
mov
mov
push
dec
xchg
out
xor
xor
or
popa
ret
adc
adc
dec
sar
pop
test
inc
mov
aaa
pop
add
adc
inc
fcomp
and
call
pop
cmps
adc
std
dec
jne
or
inc
mov
aam
cwde
les
repnz
mov
enter
mov
pop
mov
test
sbb
ja
ds
or
cld
popf
inc
das
and
sub
xor
xor
jns
push
sbb
dec
fsub
nop
xchg
sbb
push
sahf
mov
inc
mov
enter
xlat
and
scas
add
movs
sbb
dec
jecxz
movs
adc
mov
sahf
aaa
cmp
jmp
les
fcmovnu
imul
push
leave
scas
in
inc
mul
lahf
(bad)
shl
mov
rol
ss
xchg
pusha
lahf
shl
add
sbb
aas
push
popa
bound
fild
inc
loopne
sahf
add
test
and
imul
mov
dec
stos
xor
add
add
or
ret
pop
ins
push
adc
inc
cwde
xchg
xchg
or
add
cmp
rol
mov
movs
movs
or
mov
pop
nop
jge
push
cs
or
mov
sub
sbb
inc
xchg
cmp
lahf
add
pop
pushf
xchg
xor
jno
sub
ins
mov
mov
mov
jecxz
add
jge
jp
(bad)
popa
(bad)
pusha
and
out
mov
mov
add
mov
xchg
pop
bound
retf
push
cdq
xchg
rol
or
out
popa
mov
test
xor
push
outs
cmps
nop
clc
pop
xor
mov
push
mul
and
mov
(bad)
cmps
mov
movs
mov
push
xchg
movs
dec
inc
sbb
loope
outs
fmul
sbb
clc
dec
cwde
popf
dec
pop
ins
add
dec
daa
and
dec
outs
inc
loope
in
mov
adc
push
mov
sahf
fisttp
jo
dec
cmp
enter
rcl
shl
push
mov
mov
mov
inc
or
mov
mov
loop
push
(bad)
cld
out
out
ins
nop
call
push
inc
(bad)
jmp
nop
cmp
mov
call
push
jmp
pop
sub
call
jmp
mov
push
fcomp
int3
repnz
icebp
push
sub
jmp
out
loopne
jmp
push
inc
sahf
sub
mov
jg
repnz
mov
push
add
mov
outs
mov
lds
cmp
push
push
js
imul
pushf
jmp
push
sbb
movs
iret
daa
and
sbb
xchg
add
and
push
add
or
cmps
hlt
xchg
lfs
xor
ror
cmp
dec
jae
popf
or
pop
ins
loopne
sub
sbb
daa
cmc
dec
stos
and
cmp
xchg
fs
push
jo
push
push
mov
push
repz
sub
sbb
fucom
push
scas
psrld
lods
xchg
xor
dec
cmps
rcr
adc
push
add
outs
loope
fs
test
dec
scas
adc
or
dec
adc
adc
adc
ins
xor
add
push
sub
ins
mov
xchg
in
or
cmps
pusha
ja
cmp
mov
mov
and
addr16
xchg
dec
sub
dec
jo
adc
enter
jge
dec
call
js
jg
(bad)
mov
loopne
mov
cs
mov
hlt
aaa
push
loop
jo
jo
cwde
fcmovb
cmp
push
mov
fdiv
or
xor
jb
in
dec
sbb
test
mov
int3
test
push
dec
mov
fistp
jg
pop
repnz
dec
clc
add
adc
stc
cwde
pop
xor
scas
es
sbb
test
or
dec
call
jns
push
dec
aam
dec
lock
dec
inc
cs
add
push
movs
cmp
jmp
lea
test
inc
ror
cmp
push
mov
mov
push
leave
popf
enter
xor
adc
push
sbb
push
inc
and
rcr
xchg
jo
dec
adc
loop
and
inc
call
pop
repnz
or
call
lahf
push
cmps
and
jo
mov
and
dec
and
add
call
sbb
loop
and
push
rcl
adc
rcr
stos
sub
fiadd
test
scas
or
inc
add
icebp
nop
pop
leave
add
hlt
lock
push
or
not
dec
(bad)
push
mov
add
aad
inc
inc
mov
mov
add
aaa
fstp
inc
cwde
(bad)
mov
(bad)
stc
call
ficomp
push
pushf
add
lock
(bad)
jle
jge
xlat
or
push
je
mov
push
loopne
cmc
loopne
frstor
pop
out
push
sti
lods
test
cdq
sti
test
sub
xchg
mov
dec
xor
jle
ror
sub
stc
xchg
xor
dec
or
rol
add
pop
adc
mov
or
popa
enter
xor
mov
sub
jb
inc
cli
and
cmp
jae
clc
and
rol
add
jb
add
pop
adc
fist
and
movs
xor
or
push
pop
jp
jp
xchg
add
adc
out
mov
or
or
pop
scas
or
adc
sti
adc
adc
out
dec
retf
jo
cs
sbb
mov
cdq
movs
jo
dec
add
or
mov
mov
xchg
xor
in
nop
fistp
push
adc
sbb
rol
inc
pop
and
inc
pusha
fisubr
sbb
push
sbb
in
or
nop
sbb
sbb
nop
push
ss
add
into
inc
or
and
jg
in
inc
pop
in
dec
jo
pop
xor
inc
mul
and
ret
pushf
and
movs
add
add
rol
push
daa
sbb
cwde
jae
clc
add
int
mov
and
movs
and
pushf
or
stc
xchg
fild
inc
and
cmp
rcl
push
cmp
imul
test
je
movs
test
lock
push
xchg
arpl
lods
lock
loop
aad
or
adc
cmp
popa
dec
pop
and
cmc
stos
loopne
shr
daa
mov
xchg
sub
mov
retf
push
fwait
sub
test
or
dec
mov
enter
xchg
pop
and
xor
ret
stc
jl
xchg
into
xor
adc
or
sub
xor
cmp
sbb
mov
pusha
pop
test
add
and
adc
shr
nop
or
pop
(bad)
add
enter
aaa
push
leave
add
cmp
cmp
shl
pop
push
add
xchg
adc
loop
push
in
popf
cmp
xchg
lock
mov
mov
cmps
mov
adc
xchg
inc
and
jmp
jecxz
test
arpl
sti
xor
sbb
fucomi
pop
sub
sub
push
(bad)
in
add
cmp
xor
pusha
adc
mov
push
add
loope
mov
cmpxchg
(bad)
test
adc
loope
adc
loop
test
jnp
dec
adc
je
or
inc
or
push
ds
or
int3
ss
push
cld
pop
and
mov
add
push
outs
pop
jns
inc
add
push
test
push
mov
aaa
clc
add
movs
xchg
not
mov
repnz
push
pop
test
je
jo
add
sbb
and
ret
pop
fisttp
fsub
push
or
cmps
pop
adc
adc
sbb
push
push
add
sbb
test
push
push
sbb
div
or
outs
ins
pusha
pusha
mov
test
push
movs
jne
loop
fcomp
leave
jge
add
inc
or
or
add
push
or
aad
mov
into
push
adc
mov
sbb
add
(bad)
mov
pop
add
xor
or
or
clc
sub
enter
sub
mov
mov
add
ret
xor
or
adc
fst
jecxz
and
pop
call
mov
adc
push
js
(bad)
fs
push
xor
mov
inc
(bad)
sbb
rcr
mov
xor
xor
outs
dec
aam
push
or
jg
push
pop
mov
mov
mov
fcom
add
inc
xor
lea
mov
and
mov
pop
add
(bad)
cwde
mov
or
lds
arpl
xchg
xor
mov
movs
sub
jno
mov
(bad)
dec
and
icebp
(bad)
cld
push
jbe
(bad)
inc
popa
add
pusha
or
jae
or
sub
mov
lds
sbb
push
sub
int
sbb
jbe
fild
add
xor
pop
outs
cmp
pop
or
sbb
daa
push
adc
xchg
or
dec
cmp
int3
mov
pop
push
and
in
adc
or
stos
sbb
push
cmps
jo
dec
jns
xor
mov
push
and
xor
das
or
dec
xor
mov
push
aaa
push
mov
(bad)
paddusb
dec
sub
add
nop
cmp
xor
shl
aad
lock
enter
sub
dec
fwait
int
push
jl
rol
xchg
push
or
dec
data16
xor
mov
pop
lods
fistp
pop
jle
dec
inc
mov
dec
lahf
je
adc
jo
mov
mov
stos
adc
adc
add
adc
(bad)
mov
mov
mov
scas
jmp
jmp
(bad)
fdivr
stos
jmp
inc
jmp
adc
fcomi
sub
test
cmp
cmp
addr16
xor
js
push
test
les
out
jns
push
push
add
sub
aam
pop
push
dec
mov
fidivr
push
cwde
push
mov
imul
dec
fild
sub
sub
ins
mov
pushf
aaa
add
div
cmp
jl
push
adc
inc
iret
sar
sbb
scas
pop
and
pop
sbb
push
add
or
or
cdq
hlt
ins
xor
pop
and
adc
popa
or
dec
inc
sub
bound
or
rol
arpl
cvtpi2ps
jae
sbb
arpl
and
pop
mov
xchg
je
mov
dec
fs
outs
ret
pop
adc
out
fsubr
and
jp
mov
gs
mov
adc
jno
or
dec
stos
ror
push
inc
mov
rcr
sbb
data16
adc
mov
stos
test
push
xchg
jns
pop
inc
or
mov
ror
jns
xor
int3
add
adc
imul
inc
aad
nop
or
and
and
sbb
or
sub
sbb
test
lea
or
add
test
and
add
rcr
clc
enter
push
fbld
inc
ss
dec
lods
cmp
inc
and
stc
sbb
pop
and
push
lock
adc
pop
dec
inc
adc
or
bound
xor
pop
test
mov
xor
pop
push
cmp
js
xor
daa
dec
mov
retf
sub
add
sub
sub
and
es
cmp
xor
popf
outs
pop
add
inc
inc
push
or
add
les
mov
inc
in
loop
outs
ja
sub
rol
loop
adc
mov
sbb
inc
ficomp
jo
inc
nop
neg
inc
lods
mov
lea
xor
pusha
xor
sbb
mov
(bad)
xchg
dec
sti
xor
adc
mov
sub
add
push
mov
imul
arpl
shl
cmp
mov
lods
xchg
jl
dec
cwde
scas
retf
adc
pop
xchg
cmp
add
pop
mov
mov
and
pop
sub
mov
mov
cmp
int3
and
jo
cmp
cmp
or
pop
inc
ds
add
stos
xchg
cmp
sahf
mul
popf
adc
enter
loope
aas
mov
adc
sub
fsubr
rol
cmp
popf
inc
xor
inc
enter
jae
add
les
fdivr
xchg
inc
inc
mov
dec
fisubr
iret
loopne
jp
add
inc
mov
pop
repz
jns
add
mov
dec
pop
xchg
and
dec
loopne
ret
mov
sub
sti
sub
dec
cmp
clc
add
movs
pop
enter
xchg
pop
xor
(bad)
leave
push
xor
jecxz
(bad)
adc
movs
xchg
cmp
cmp
out
or
cmp
dec
mov
or
pop
mov
push
push
and
push
add
jns
jle
ins
pop
dec
adc
fcomp
retf
and
cmp
cwde
inc
loopne
movs
sahf
jb
aas
push
inc
push
or
fsubp
xchg
call
clc
xchg
push
dec
push
jo
movs
fs
push
push
cs
leave
xchg
pop
or
pop
pop
clc
and
xor
dec
dec
pop
add
or
ins
loope
add
and
dec
or
bound
sbb
push
cmp
retf
iret
lds
clc
pop
in
bound
mov
inc
xchg
popa
dec
repnz
adc
mov
arpl
push
nop
pop
lods
arpl
push
daa
pop
sub
je
xchg
sub
and
or
mov
xchg
pop
push
syscall
cmp
inc
pop
xchg
sub
or
xchg
pop
xchg
cmp
mov
mov
in
lods
call
dec
mov
and
pop
ror
mov
ror
sbb
addr16
mov
sub
or
pop
jo
loope
call
jo
daa
sbb
mov
xchg
mov
adc
loopne
retf
aad
add
loop
or
mov
or
iret
add
sub
mov
add
inc
imul
scas
stos
jo
xor
or
xchg
and
lea
dec
push
inc
push
daa
sub
sbb
cdq
sub
sbb
pop
mov
ja
or
mov
sub
or
data16
jns
jle
adc
and
adc
or
push
retf
inc
mov
sub
dec
or
ret
ins
mov
repz
idiv
add
(bad)
sub
sub
push
or
add
hlt
retf
into
loopne
mov
cld
add
mov
push
mov
outs
les
sbb
cmp
nop
retf
test
test
lds
push
or
lock
and
fsub
hlt
clc
or
pop
jp
les
sbb
shl
add
pop
push
retf
hlt
ds
inc
sub
dec
dec
inc
ins
out
push
ins
aam
push
nop
pop
retf
dec
aad
xchg
inc
sub
(bad)
dec
call
test
mov
jbe
push
les
jmp
add
lods
pop
and
adc
mov
sub
add
add
mov
and
mov
lds
mov
adc
arpl
cdq
add
lods
xchg
ror
mov
inc
aas
add
pop
pop
rol
adc
nop
mov
pop
add
jp
outs
leave
cmps
les
dec
push
mov
cmp
enter
cmps
adc
call
or
cmp
pop
adc
shl
addr16
fisub
or
les
in
fist
outs
enter
and
ret
in
cmp
add
movs
pop
or
mov
test
aad
enter
int3
or
sbb
jae
rol
hlt
xor
or
loopne
mov
std
outs
lea
arpl
in
mov
mov
add
enter
add
shl
xchg
scas
leave
aad
fdivr
inc
(bad)
pop
mov
aam
mov
mov
sar
enter
sbb
lock
aas
and
xchg
rcr
mov
enter
movs
xor
int3
add
push
sub
adc
xchg
ror
retf
in
pop
enter
sbb
mov
les
rcr
(bad)
ss
stos
aam
(bad)
in
cs
pop
out
enter
or
(bad)
dec
sub
iret
adc
repnz
out
jb
dec
inc
add
aam
inc
es
pop
jge
xchg
fst
pop
mov
sbb
jns
lock
push
xor
rcl
or
imul
adc
pop
add
aad
pop
push
iret
rcr
xchg
setno
and
mov
add
push
and
mov
sub
mov
add
sub
sbb
add
cmp
push
adc
or
push
ss
jo
inc
or
outs
test
dec
adc
or
adc
fld
mov
dec
cmp
mov
and
or
and
adc
daa
setb
addr16
add
popa
or
xor
xchg
cmps
out
xchg
adc
pop
dec
pop
xchg
shl
push
icebp
or
dec
int3
add
movs
mov
inc
xchg
jnp
fs
lds
jb
fsubr
xchg
adc
es
aaa
lock
and
push
add
retf
jg
scas
fidiv
cld
push
sub
les
ins
mov
xor
shl
movs
pop
in
loopne
jecxz
dec
add
sub
mov
cdq
out
xor
sbb
cmp
push
and
sub
xchg
xchg
cmp
adc
outs
stos
ins
leave
xchg
inc
mov
rol
or
jp
or
xchg
inc
push
or
push
jmp
mov
cmc
pop
cmps
mov
xchg
cmp
bound
add
jbe
fs
adc
scas
add
jo
scas
arpl
cwde
daa
and
dec
xor
shl
or
mov
mov
cmp
fucomip
push
xchg
lock
cmp
test
mov
cdq
adc
or
inc
jb
movs
inc
add
add
push
dec
sbb
rol
in
or
xor
scas
movs
xchg
xchg
cmp
mov
hlt
xor
adc
(bad)
stos
adc
adc
or
adc
pop
mov
test
add
inc
int3
pop
cdq
test
add
rcr
push
ss
dec
jmp
dec
(bad)
test
das
cmp
(bad)
out
mov
div
pop
jecxz
pop
push
scas
loope
jno
xchg
add
dec
inc
mov
push
and
sbb
lds
adc
and
scas
jne
push
sub
sub
fbstp
movs
sbb
cdq
push
mov
add
sbb
rcl
pop
add
hlt
mov
iret
test
xchg
jge
jo
or
pusha
pop
leave
and
mov
mov
pop
cmps
loop
(bad)
into
mov
cmp
pop
sbb
inc
dec
cs
sbb
outs
out
jo
dec
sti
mov
ror
or
and
jecxz
sub
add
dec
add
in
inc
push
push
pop
lods
loopne
lods
inc
pop
sbb
pop
xchg
not
dec
add
call
cmp
or
adc
and
in
loopne
je
sbb
cmovne
loopne
loope
pop
test
cmps
mov
dec
and
test
add
shl
ins
ror
popf
sub
mov
scas
popf
inc
mov
or
add
mov
jge
adc
aad
in
add
push
inc
or
add
mov
das
dec
dec
push
in
loop
imul
cmps
or
xchg
and
scas
or
jae
mov
pop
loop
es
inc
jecxz
add
push
sub
sbb
mov
pop
and
pop
out
adc
jmp
mov
xor
jmp
jge
cmp
es
dec
cmp
mov
aas
inc
addr16
add
fistp
sahf
adc
sbb
or
ins
dec
cmp
dec
and
xor
push
sbb
test
test
(bad)
in
mov
movs
rol
mov
call
js
retf
push
dec
shr
and
ret
rcr
popa
je
xchg
pop
push
les
add
and
add
mov
rcr
fucom
mov
dec
sbb
push
jmp
mov
or
mov
adc
arpl
mov
inc
push
push
sbb
sub
sbb
push
mov
mov
lock
movs
sti
xchg
jbe
adc
push
inc
test
push
mov
and
rcl
nop
div
xor
inc
xlat
retf
movs
dec
adc
push
sbb
add
sar
cmp
jno
and
int3
hlt
sbb
xor
ret
sub
jbe
push
push
shl
fmul
sbb
cmp
xor
repz
inc
dec
sub
jmp
dec
mov
dec
ret
push
retf
inc
dec
adc
inc
xlat
mov
fistp
sub
outs
fstp
loopne
shl
jne
adc
sub
mov
in
arpl
sub
or
xor
dec
inc
xor
inc
cmp
adc
and
ss
scas
inc
push
mov
call
sbb
mov
mov
and
fild
mov
inc
push
and
add
imul
xchg
jbe
ja
xlat
shl
and
jne
jns
mov
imul
jg
mov
add
dec
dec
pop
sbb
movs
add
xchg
mov
and
js
lock
mov
push
movs
test
sub
and
xor
leave
xchg
inc
xchg
pusha
mov
jmp
xchg
mov
mov
pop
cmp
fiadd
lea
mov
rcr
add
xchg
fwait
mov
or
shr
add
adc
pop
add
adc
out
loop
div
ss
pop
or
mov
test
cmps
cmp
dec
push
sti
jmp
ror
sbb
pop
sbb
mov
and
push
inc
xor
dec
(bad)
sub
cwde
movs
jg
or
movs
adc
pop
inc
lea
mov
sbb
jg
dec
and
(bad)
mov
(bad)
addr16
not
movs
mov
or
cwde
jns
xor
and
pop
mov
(bad)
xchg
nop
or
or
test
cmc
push
sub
lods
cs
daa
pop
fcom
xor
psllw
leave
ins
adc
push
nop
jmp
mov
xor
cmp
ja
pop
xlat
xor
stos
push
mov
xor
add
ret
and
xchg
inc
and
add
add
mov
fs
jnp
pop
push
push
imul
(bad)
(bad)
movs
mov
inc
adc
in
adc
(bad)
jl
arpl
sub
mov
aaa
mov
adc
daa
inc
lock
jmp
sbb
div
in
test
div
adc
popf
mov
iret
and
xchg
lods
xchg
push
inc
clc
movs
add
(bad)
adc
jmp
dec
cmp
xchg
xchg
out
aas
xor
pop
pop
push
dec
cmp
jne
in
inc
push
add
fst
or
dec
jb
popa
inc
loopne
das
rol
jnp
mov
cmp
xor
femms
or
aas
jmp
push
mov
lock
pop
sub
jl
shl
mov
rol
mov
sbb
or
and
jbe
popf
imul
jae
nop
movs
pop
add
jecxz
mov
arpl
out
xor
sbb
push
add
pop
inc
or
aam
sub
sbb
scas
xor
xor
sbb
pop
mov
(bad)
loop
pusha
cmp
pusha
and
ret
add
psubw
aas
mov
(bad)
div
stc
or
dec
mov
pop
es
adc
js
ret
enter
icebp
aad
inc
imul
aaa
add
sar
mov
sub
cmp
inc
sub
push
daa
lods
aaa
jbe
adc
sbb
dec
jo
cmp
sub
dec
ds
and
aam
jo
or
xor
popa
pop
mov
fbld
mov
in
(bad)
and
loope
scas
mov
popa
inc
push
push
pop
loop
jne
(bad)
push
sahf
shl
popf
sub
mov
sbb
ret
sub
in
out
popa
sub
jnp
pop
mov
or
in
push
dec
dec
retf
je
ins
lods
aas
daa
xchg
jmp
ins
iret
stos
call
add
push
mov
cmp
and
loop
aaa
(bad)
jbe
and
je
ins
sub
popf
jmp
cmp
(bad)
bound
xor
dec
data16
sub
cmp
mov
sbb
test
push
mov
ror
and
and
addr16
push
jg
ins
cmp
popa
sar
lea
inc
pop
add
mov
sbb
dec
jg
and
inc
or
jmp
das
pop
xchg
xchg
das
lods
cwde
jo
mov
lds
clc
sbb
sub
sbb
xchg
xor
in
daa
shl
js
or
mov
sbb
out
(bad)
std
es
xchg
in
and
mov
mov
jmp
or
(bad)
out
stc
imul
xor
xchg
mov
adc
sub
dec
add
adc
or
test
pop
call
sub
(bad)
push
pop
and
imul
ja
cwde
or
ins
jno
cdq
inc
fld
pusha
in
lahf
or
add
mov
fist
pop
xchg
out
out
mov
outs
lea
stos
jmp
cmps
sti
in
cmp
inc
test
pusha
into
xchg
js
inc
cli
and
pushf
add
mov
jp
stc
rol
add
rol
pop
iret
and
lods
jmp
push
repnz
fild
cmps
sbb
and
outs
lods
xor
imul
shl
ret
mov
iret
mov
dec
movs
inc
or
adc
out
push
je
add
cmp
popf
movs
cmp
jp
call
push
bswap
ror
gs
add
pop
adc
mov
cmp
dec
mov
test
sar
in
aaa
in
jmp
fs
xor
lock
push
dec
and
pushf
inc
sub
pop
adc
popa
xor
rcr
(bad)
popa
imul
stc
fs
xor
stc
(bad)
clc
push
push
xor
adc
in
outs
dec
mov
test
ror
test
fcom
add
fstp
cmp
fdiv
mov
lods
dec
pop
mov
cs
and
repnz
cmps
js
nop
cli
test
loop
ins
ins
lds
pop
and
or
mov
xchg
lods
rol
dec
mov
add
shl
or
xchg
adc
push
dec
iret
mov
push
rcr
or
add
and
call
(bad)
sti
mov
xchg
mov
pop
sub
cmp
adc
and
xor
ins
push
or
daa
cmps
lods
mov
psllw
add
test
and
in
popa
jg
movs
mov
stc
cwde
push
add
in
pop
mov
mov
adc
sbb
sar
add
jne
push
xchg
in
inc
inc
jmp
setge
mov
dec
sub
inc
call
jne
movs
mov
mov
fstp
xor
ins
and
add
cmps
xchg
cmp
mov
jmp
dec
inc
sub
push
int3
xchg
mov
sbb
xchg
sbb
cwde
ds
xor
pop
mov
push
scas
mov
fdiv
out
or
push
add
std
sub
dec
adc
xor
loop
ror
sbb
fst
sub
jmp
sub
add
jbe
push
and
inc
jmp
and
test
ja
add
xor
xor
lock
movs
add
js
xchg
adc
fwait
leave
adc
rcr
sub
jmp
jecxz
add
inc
xchg
inc
sub
mov
pusha
and
cmp
ror
sub
iret
push
shl
in
pop
jmp
pop
mov
and
cmps
xchg
imul
push
mov
or
fcom
xchg
and
push
shl
inc
add
inc
in
xor
add
sub
mov
cs
sbb
bound
inc
inc
in
xchg
scas
adc
in
ret
ficomp
xor
xor
rcl
pop
mov
mov
jl
leave
hlt
je
cwde
pop
scas
and
dec
mov
fisub
jo
mov
or
js
js
punpckldq
jle
dec
and
je
daa
mov
dec
add
dec
(bad)
or
or
call
push
jl
push
jmp
pop
sub
rep
push
mov
dec
adc
or
mov
adc
aam
mov
and
xchg
pop
or
sub
pop
mov
dec
xchg
jmp
les
xor
dec
das
(bad)
or
or
jp
jno
and
and
call
mov
les
xor
addr16
pop
rol
lods
or
mov
sub
std
movs
inc
or
or
or
test
push
aas
std
or
xor
nop
push
jns
lock
jmp
xor
push
or
inc
add
cli
rcr
pusha
inc
xchg
and
push
call
nop
repz
popa
fisttp
fld
pop
lock
hlt
mov
pop
pop
stos
mov
pop
pop
push
or
sbb
pmulhuw
adc
cmp
dec
popa
add
and
inc
inc
(bad)
and
jecxz
pop
fsub
adc
jne
sbb
neg
ins
fisttp
push
ror
test
sbb
xchg
fstp
and
inc
sbb
adc
inc
cmp
pop
adc
ds
(bad)
mov
pop
xchg
movs
loopne
sub
ror
cmp
(bad)
and
out
jp
mov
or
xor
adc
sub
mov
add
inc
push
add
popa
sbb
dec
sar
scas
cli
add
jns
ror
(bad)
xor
sub
jae
mov
xchg
add
jns
out
shl
add
retf
jnp
in
jmp
adc
sbb
xchg
out
pop
adc
or
aaa
push
push
aaa
jb
shl
mov
adc
adc
jns
xlat
xor
push
push
jns
dec
mov
add
out
push
sahf
retf
and
mov
push
adc
fiadd
xor
or
lds
pop
shr
and
dec
adc
adc
xor
lods
mov
fimul
and
sbb
and
sbb
xor
or
stc
out
pop
cdq
add
dec
sbb
lds
sbb
pop
cmp
cmp
fsub
add
(bad)
push
add
or
and
jnp
mov
lock
(bad)
adc
jo
fisttp
pop
dec
dec
xlat
xchg
in
sub
jae
adc
loope
jne
lea
loope
push
inc
mov
test
add
test
sub
sbb
xor
cmp
sbb
cmp
test
sbb
fcom
scas
mov
push
push
cmp
jmp
push
inc
jg
fwait
inc
lock
dec
or
and
ds
and
cmps
imul
pop
movs
xchg
add
or
sub
loope
push
test
loopne
add
dec
push
xor
sub
mov
push
jno
adc
push
mov
or
push
clc
loopne
add
pop
scas
pop
repnz
mov
jmp
pop
xchg
(bad)
(bad)
pop
sub
(bad)
std
aas
loope
or
ins
test
jg
into
les
gs
push
sub
pop
or
push
mov
or
sub
sub
pop
nop
ds
or
mov
pop
ins
popa
cmp
pop
dec
cli
sbb
mov
inc
inc
cmp
test
cmp
cmp
pop
jle
jmp
or
cmps
in
jno
nop
mov
inc
ret
adc
add
mov
rcl
ret
add
xchg
ss
out
adc
cld
dec
sub
nop
punpcklbw
push
sbb
repnz
sti
outs
rol
xchg
xlat
ror
repnz
setg
mov
test
add
enter
add
pushf
adc
mov
repz
iret
inc
cmp
inc
cmp
and
and
je
xchg
dec
jns
outs
shr
mov
lods
xlat
stos
inc
push
aam
pop
mov
nop
mov
jo
jo
push
inc
mov
pusha
push
js
fcom
addr16
xchg
int3
xor
daa
sub
stos
mov
retf
int3
or
pop
cld
mov
and
pop
jmp
pop
test
lea
outs
pop
mov
push
aaa
mov
mov
inc
lock
and
ret
outs
into
cmps
inc
jo
and
out
sub
in
dec
pop
jmp
or
add
mov
adc
or
push
adc
cs
and
add
inc
jl
mov
and
movs
inc
movs
mov
add
out
addr16
test
outs
sub
mov
sbb
pop
pusha
fneni(8087
push
loop
lds
retf
jg
mov
and
jo
adc
inc
in
in
cwde
adc
pop
mov
in
cwde
les
icebp
mov
(bad)
in
sbb
mov
dec
cmp
or
jno
hlt
stos
out
jle
add
jb
jne
or
sub
add
jmp
pop
in
hlt
fsub
adc
addr16
and
test
or
call
xchg
adc
ficom
adc
dec
cwde
dec
xchg
pop
xor
jmp
push
test
int
ret
test
mov
loopne
or
pop
mov
imul
in
sub
inc
(bad)
and
(bad)
adc
mov
test
aad
or
jp
adc
(bad)
nop
cmp
call
sub
xor
dec
mov
push
les
or
jb
adc
movs
inc
fisttp
pop
repnz
ins
ja
ror
or
les
outs
mov
dec
sti
jns
dec
retf
cli
cld
nop
dec
adc
fcom
loop
adc
fwait
scas
in
dec
imul
mov
in
mov
fcom
mov
lods
mov
sub
fs
xchg
arpl
xor
jo
movs
pop
out
jecxz
jo
cdq
mov
add
pop
or
push
ss
jp
shl
ss
xchg
out
jns
js
inc
pop
adc
stos
jb
js
jle
jmp
mov
sbb
or
mov
test
js
inc
cs
push
test
xlat
and
adc
dec
lock
test
push
jp
xchg
adc
adc
enter
in
and
add
pop
xor
jmp
jg
pop
xlat
mov
pusha
bound
cmps
pop
or
test
cmp
scas
cdq
sbb
imul
fsub
aam
fistp
fisttp
pop
and
cld
pop
je
rcr
mov
sub
push
sbb
mov
mov
inc
rcl
jbe
adc
adc
clc
(bad)
sbb
(bad)
hlt
loopne
inc
sub
fwait
mov
popa
inc
scas
in
or
push
hlt
xchg
loopne
xchg
dec
xchg
in
bound
cmp
dec
fstp
pop
and
cmp
push
aaa
out
pop
mov
outs
test
or
inc
in
cmps
jg
inc
pop
dec
imul
or
test
xchg
retf
leave
or
adc
mov
cld
and
aam
adc
jo
and
add
and
adc
dec
cmp
in
cld
ins
add
enter
inc
sbb
inc
xchg
pop
in
push
loopne
sub
imul
inc
test
dec
fist
xor
xchg
pop
and
in
push
xor
adc
mov
sbb
fmul
cmp
mov
xor
adc
pop
and
mov
dec
loopne
cmp
call
ds
in
fs
mov
mov
adc
ret
out
dec
or
sub
bound
jge
or
adc
mov
lds
sub
or
stc
(bad)
xchg
mov
popa
ret
pop
mov
sbb
and
xor
jb
adc
push
jl
mov
inc
dec
cmp
sub
das
ret
movs
or
mov
daa
loop
and
sub
pop
sbb
daa
mov
sbb
test
inc
push
clts
mov
push
cmp
movq
aas
inc
loopne
nop
(bad)
or
fistp
mov
cmp
mov
(bad)
and
jns
or
sbb
cmp
ror
or
adc
fs
rol
outs
pop
add
sbb
adc
ret
pop
std
jne
test
or
adc
pop
sbb
mov
cwde
pop
in
xor
dec
gs
jo
popf
adc
and
and
das
jmp
aas
movs
out
pop
into
sbb
ss
xchg
in
sub
cmp
or
inc
xor
and
call
xchg
neg
mov
aam
inc
and
adc
add
aaa
mov
jb
push
arpl
jle
ja
adc
xchg
mov
push
jo
sets
sbb
test
or
mov
inc
dec
in
mov
aaa
jne
push
push
or
or
mov
mov
dec
adc
mov
add
cmp
out
call
dec
ret
movs
popf
jno
or
add
hlt
cmp
out
add
sahf
popf
test
je
outs
xor
pop
ja
push
and
outs
shl
pop
cmp
shr
and
pop
hlt
(bad)
(bad)
fadd
sahf
inc
cwde
mov
movs
cdq
cwde
mov
out
mov
push
and
mov
pop
cmp
(bad)
adc
(bad)
jmp
adc
push
dec
mov
mov
jg
push
cld
sbb
xor
stc
adc
mov
clc
mov
pop
call
movs
sub
dec
ror
mov
add
and
adc
dec
ret
movs
xor
pop
cmp
sub
xchg
(bad)
jg
rcl
sbb
icebp
or
push
push
sub
mul
in
jmp
sbb
sub
fs
xlat
push
imul
fisub
arpl
or
(bad)
fs
in
mov
dec
stos
inc
and
cmp
and
addr16
dec
add
int3
add
and
int3
ins
mov
lods
push
sbb
aas
xor
je
and
mov
add
imul
(bad)
mov
cmc
movs
or
pop
aas
in
and
xor
mov
xchg
xor
shl
xor
test
adc
rol
loop
int
push
mov
push
push
shr
adc
dec
scas
jge
jmp
out
push
mov
cmp
fdiv
int
loope
or
xor
and
and
mov
sbb
or
and
cmp
mov
int
xchg
cmc
add
xchg
ds
adc
call
push
and
cwde
or
jo
push
and
adc
pusha
push
fadd
cmc
xchg
sub
shld
loop
pop
imul
push
adc
repnz
inc
das
(bad)
jo
jo
les
rcr
xchg
in
popa
in
fwait
add
js
in
dec
out
and
inc
or
test
mov
lds
pop
sbb
lods
xor
adc
hlt
movs
loopne
sub
push
test
and
push
sbb
pop
pop
in
ins
push
lods
and
popa
lock
mov
jmp
add
ret
movs
xchg
xchg
inc
lahf
hlt
jge
leave
mov
gs
adc
fld
mov
xor
xchg
dec
jne
pop
adc
imul
aaa
add
inc
retf
mov
dec
push
push
or
out
adc
mov
mov
popa
(bad)
popa
sbb
inc
inc
xchg
out
push
and
mov
push
imul
nop
mov
enter
and
xor
pusha
cmp
jmp
leave
mov
fild
fwait
or
std
imul
xor
fs
test
stc
pusha
adc
sbb
mov
sub
imul
push
sub
fnsave
mov
dec
test
sbb
fmul
mov
sub
es
xor
fs
inc
aad
pop
arpl
push
and
mov
dec
dec
imul
xor
mov
sbb
push
jbe
xlat
aaa
push
sbb
cmp
xchg
inc
adc
clc
mov
sbb
pusha
aaa
sbb
pop
scas
stc
dec
cmps
mov
add
dec
(bad)
xor
or
push
xchg
xor
dec
pop
mov
mov
lea
and
sbb
and
xchg
pop
sbb
jb
xor
sub
mov
pop
sbb
das
jmp
imul
inc
push
sbb
and
pusha
sub
inc
inc
scas
jo
mov
sub
jp
repz
adc
and
jmp
add
pop
xor
in
mov
mov
aad
mov
nop
jno
pop
fstp
mov
mov
lea
adc
cmp
adc
and
pop
cmps
into
and
push
dec
(bad)
add
les
sub
es
push
cmp
push
fisttp
daa
mov
mov
cmc
jecxz
sbb
add
dec
enter
add
jmp
imul
mov
or
inc
hlt
xor
cwde
jmp
ja
add
inc
lods
sbb
pop
sbb
nop
cs
gs
pop
xchg
shl
xor
or
fcomp
and
in
mov
pusha
das
pusha
ins
out
pop
mov
push
jne
inc
sub
scas
add
xchg
rol
inc
mov
push
xor
pop
lods
sbb
push
(bad)
aaa
dec
sub
and
stc
ja
popa
sbb
(bad)
jnp
dec
mov
int3
test
das
pop
js
mov
(bad)
ds
adc
or
cmp
inc
xchg
js
jmp
dec
scas
pop
adc
jmp
and
sub
or
stc
push
enter
das
and
add
(bad)
arpl
pop
jne
fild
adc
lock
(bad)
push
je
sub
add
pop
add
shl
sti
jo
jmp
es
pop
clc
cmp
push
jmp
cdq
into
or
push
(bad)
add
or
fwait
aaa
shl
cmp
dec
pop
mov
sbb
imul
or
(bad)
sub
(bad)
imul
arpl
imul
xlat
jl
lds
pop
fsubr
iret
addr16
adc
test
push
xor
popf
xchg
movs
lock
sub
icebp
popa
sub
je
dec
adc
push
pop
jo
jae
mov
jg
daa
jo
imul
mov
or
or
sub
add
ja
nop
sbb
add
leave
push
xor
inc
adc
and
enter
mov
add
pop
nop
xchg
mov
pop
inc
and
dec
xchg
icebp
xor
sbb
shl
cmp
xor
popf
and
lds
or
or
sbb
pusha
les
jle
cmp
jb
jo
stos
ja
les
inc
pop
dec
lahf
jb
mov
pop
ja
add
add
push
xor
fist
or
daa
inc
sub
fs
add
les
or
lods
in
mov
loope
cmp
xchg
sub
add
mov
repnz
xor
in
out
test
out
push
push
js
dec
repnz
mov
sub
inc
jmp
ja
inc
jne
pop
or
cmp
adc
xchg
cmp
sub
cld
push
inc
add
sbb
adc
inc
inc
and
outs
out
out
or
add
add
gs
scas
repnz
rcr
adc
ret
mov
jmp
(bad)
add
pusha
ss
add
fdivr
daa
loopne
nop
sbb
ret
ret
dec
sbb
pusha
addr16
aam
jg
daa
cmp
fs
xor
pop
icebp
or
push
jge
pop
pusha
sub
rol
push
repz
in
pusha
jne
out
lea
es
jo
mov
shr
test
repnz
pop
adc
adc
scas
scas
dec
or
and
dec
sub
inc
sbb
inc
ror
sbb
mov
es
inc
push
and
sbb
setge
push
adc
mov
xor
and
les
push
ins
adc
mov
xchg
adc
and
inc
and
fwait
or
js
icebp
mov
sbb
push
adc
xlat
jecxz
popf
in
es
inc
adc
je
imul
inc
or
push
call
fcmovu
ins
mov
push
sub
jle
add
cmp
sub
xor
(bad)
stc
fimul
addr16
xchg
fcmovne
sub
push
popw
aas
cmp
jb
ss
or
mov
in
jle
mov
pop
and
sbb
cvttps2pi
add
sbb
push
jmp
jae
dec
jne
push
sub
cli
push
jb
push
lods
test
or
mov
fstp
jge
out
xor
sahf
mov
addr16
lahf
iret
sar
in
add
push
mov
or
ss
cmps
or
mov
loopne
int3
and
leave
sar
jmp
popa
push
(bad)
adc
in
lea
test
push
daa
sbb
sbb
sub
mov
pop
pushf
shr
pusha
mov
push
add
lds
xor
dec
stc
fadd
in
cs
sar
inc
aas
js
mov
add
xor
xchg
(bad)
movs
push
add
add
mov
adc
cmp
out
push
push
mov
clc
sub
dec
or
test
adc
mov
sub
xor
add
xlat
mov
dec
test
cs
mov
mov
inc
xor
shr
push
test
imul
pop
popa
nop
inc
(bad)
mov
xchg
ret
aam
or
sub
jno
mov
enter
mov
mov
in
lods
lock
scas
pushf
push
lods
shl
or
mov
add
and
mov
mov
ds
cli
mov
jae
pop
or
add
xchg
pop
in
cmc
stos
int3
mov
mov
cld
daa
mov
xchg
pop
adc
loopne
pop
xchg
push
sub
mov
xor
std
xor
test
cmp
inc
inc
stos
inc
pop
pusha
(bad)
dec
and
dec
std
cmp
hlt
sub
movs
add
cdq
sub
dec
cmp
movs
nop
add
push
inc
mov
jnp
add
mov
out
push
pop
inc
outs
mov
sbb
aam
inc
xor
inc
movs
mov
sar
cdq
sbb
inc
inc
mov
lea
inc
or
push
das
sbb
adc
and
push
sbb
xchg
call
inc
aam
sar
dec
sub
in
shr
or
out
bound
int
push
pop
xor
in
cmp
sub
jp
aaa
adc
push
xor
and
xchg
rcl
aam
rcl
inc
cmp
loopne
add
xchg
mov
and
aas
pop
mov
or
shr
imul
rcl
test
xchg
and
adc
sbb
lds
scas
scas
mov
loopne
cmp
cwde
sbb
and
jbe
sbb
adc
enter
dec
xchg
cmp
push
pop
scas
dec
adc
pop
mov
lock
push
cmps
rcl
jmp
mov
inc
mov
inc
loope
ins
inc
sbb
leave
pop
mov
(bad)
test
sbb
(bad)
es
cmp
push
sbb
mov
jno
and
test
inc
call
mov
xchg
ret
dec
jnp
movs
icebp
add
push
dec
lods
xchg
in
sti
push
dec
js
cs
rcr
jmp
rol
test
inc
and
dec
fcomp
sub
push
sub
add
hlt
pop
jp
jmp
fmul
iret
xor
add
shl
and
mov
pop
outs
jnp
cdq
inc
in
test
jnp
push
aas
fisubr
jmp
pop
push
push
xor
jecxz
call
jmp
xor
mov
fucomi
add
jno
add
fldcw
out
xchg
add
pop
adc
int3
push
aaa
and
pop
add
call
fwait
cmp
xor
inc
mov
pop
data16
jmp
gs
outs
push
or
mov
retf
loopne
stc
test
and
pop
add
iret
aam
ins
sub
sub
pop
fadd
in
or
fbld
lock
jo
es
xor
rcl
sub
and
or
mov
dec
pop
lock
call
sub
fcomp
fcom
add
add
adc
shl
adc
push
imul
push
xor
inc
les
popf
fxch
fcomi
repz
push
push
xor
addr16
and
shl
fcmove
out
rcr
jecxz
xor
lods
jmp
pop
adc
retf
sub
cmp
and
push
sbb
xchg
sbb
popa
ret
mov
enter
sub
and
mov
and
xor
add
mov
mov
push
cs
add
jb
push
retf
loope
and
mov
scas
or
mov
and
and
das
out
dec
rcl
lods
test
add
aaa
xchg
xchg
push
ins
adc
fwait
pop
pop
adc
int3
cmp
xchg
add
sub
sbb
bnd
add
addr16
in
call
or
or
aaa
cmp
xchg
lds
les
or
add
test
enter
push
nop
cli
cld
clc
pop
pop
push
(bad)
lock
dec
dec
inc
fadd
and
add
pop
mov
enter
add
pusha
cmp
cmp
xor
and
imul
inc
pop
(bad)
and
mov
mov
xchg
push
into
sub
hlt
add
scas
das
cmp
imul
shl
dec
xchg
nop
ins
es
or
adc
mov
aam
test
popa
cmp
push
adc
cmp
dec
dec
inc
stos
packsswb
or
mov
push
cmp
cmp
pusha
in
jmp
mov
sbb
leave
mov
ror
cmp
mov
loopne
nop
outs
xor
test
ror
inc
loope
loopne
outs
and
dec
and
aaa
mov
add
xchg
sbb
aaa
pusha
mov
pusha
and
inc
scas
pop
inc
aaa
pusha
(bad)
mov
unpckhps
js
inc
cmps
inc
xor
or
xor
ror
(bad)
add
or
fild
or
lds
sub
add
int3
fadd
cwde
xchg
retf
adc
push
xor
pop
iret
inc
xor
pop
sub
mov
push
mov
fidiv
lock
sbb
sbb
pop
rcl
sub
jnp
adc
xor
sub
loop
add
push
xchg
cmp
cwde
push
add
stos
inc
xor
xor
or
xor
inc
loopne
call
mov
into
add
add
push
xchg
inc
ds
dec
or
jmp
lods
ret
popa
and
popa
xchg
std
adc
sti
sbb
loopne
or
sub
and
pushf
(bad)
movs
outs
and
push
stos
daa
popf
(bad)
adc
push
mov
test
mov
(bad)
clc
xor
adc
mov
pop
jge
adc
ret
mov
jmp
test
ins
and
xor
call
xchg
ins
sub
xchg
jns
mov
add
in
ins
ficomp
(bad)
mov
ror
mov
pop
lods
add
mov
aas
fwait
call
dec
jmp
jne
xor
jg
aam
push
fdivr
shl
push
scas
scas
mov
pop
mov
movs
jne
cld
inc
dec
push
in
sub
jle
adc
mov
or
push
mov
aas
ficom
int3
sub
call
jmp
(bad)
cwde
jo
icebp
xlat
fcomi
pop
add
jmp
ret
and
bound
sub
aaa
xchg
jo
add
mov
es
ficomp
inc
fdiv
fcomp
pop
xor
je
bound
or
cwde
test
adc
jmp
hlt
or
loop
push
stc
scas
adc
xor
stos
cmc
dec
in
loopne
pusha
stc
push
mov
pop
(bad)
cmc
mov
sub
(bad)
lods
or
adc
loope
outs
add
inc
loope
push
adc
(bad)
inc
or
adc
sub
cmp
pop
inc
lea
or
out
sub
mov
add
sub
fadd
jmp
inc
mov
fwait
addr16
sub
push
add
or
mov
cs
dec
or
mov
lds
sub
add
test
inc
shl
f2xm1
test
retf
sub
neg
xlat
add
sahf
es
mov
add
mov
xor
inc
and
pop
adc
xchg
sbb
cmp
push
push
pop
xlat
popa
or
ins
ret
inc
dec
mov
pop
sbb
scas
cli
or
(bad)
mov
mov
out
int3
xchg
ror
loope
mov
pop
in
jmp
push
jne
leave
je
aam
outs
mov
(bad)
pop
shl
into
pop
pop
clc
call
pusha
push
inc
fdiv
(bad)
in
cmps
push
sub
push
or
shl
popa
push
in
int
mov
je
daa
push
dec
test
std
fldenv
js
cmp
inc
jns
popf
inc
inc
cmps
xchg
xchg
or
jne
js
push
dec
jp
test
push
and
js
pop
and
(bad)
js
xchg
pop
add
add
xchg
(bad)
xor
add
aad
cwde
cwde
sbb
inc
dec
pusha
mov
xchg
jg
sti
xchg
ss
lds
mov
or
xchg
popa
add
dec
ret
adc
cmp
xor
cmp
mov
lds
and
push
inc
jle
cs
daa
scas
imul
push
cmp
scas
scas
mov
mov
xchg
push
or
loope
dec
push
and
(bad)
enter
cmc
ja
test
hlt
cmp
or
push
adc
jbe
pop
aad
setno
jl
mov
in
mov
ja
je
test
xor
push
sub
ja
mov
xchg
shr
bound
jne
xor
(bad)
pop
or
xchg
mov
or
les
pop
sub
shr
into
pop
dec
pop
call
jl
xor
sub
js
mov
and
fadd
pop
jmp
pop
dec
lods
jnp
aam
and
push
mov
sar
pop
xor
(bad)
mov
addr16
dec
nop
mov
dec
call
sbb
dec
jle
dec
xor
pop
fucom
adc
jno
jns
imul
leave
int
jo
in
pop
dec
push
popf
in
icebp
sub
les
xchg
in
mov
cmp
or
mov
es
and
jns
adc
or
add
inc
and
fnsave
cmp
(bad)
mov
outs
pop
imul
push
mov
rcl
dec
cmp
dec
loopne
test
inc
mov
lods
jne
or
push
add
mov
add
test
sbb
jb
add
sub
mov
popa
cmp
minps
jo
rcl
cmp
add
cmp
je
das
or
es
cmp
fcom
clc
push
inc
loopne
mov
sahf
in
lock
ins
sbb
js
sub
ins
xor
sbb
xor
pop
cmp
add
pop
push
imul
and
mov
movs
in
cs
ins
movs
in
inc
inc
or
add
cmp
or
fld
mov
repz
mov
ins
jge
dec
hlt
jg
pop
dec
and
cmp
pushf
push
iret
push
cwde
shr
cmp
fcomi
jle
pop
in
lea
adc
xchg
mov
aad
inc
lock
sbb
mov
in
dec
xor
and
in
xor
aaa
into
arpl
mov
inc
hlt
mov
xor
inc
adc
xlat
loope
fwait
iret
pop
cmp
pop
leave
lock
push
inc
dec
hlt
xchg
mov
mov
mov
mov
ins
lods
(bad)
push
and
push
adc
jns
fiadd
adc
ficom
inc
ficomp
mov
add
test
dec
hlt
pop
test
ficomp
cmp
or
jno
dec
and
push
dec
inc
jno
cmp
push
jmp
inc
mov
dec
dec
push
push
bound
pop
in
inc
sbb
aad
dec
sar
xchg
retf
mov
jnp
or
setae
xchg
sahf
add
sti
adc
xchg
fwait
clc
ins
inc
mov
fucom
iret
adc
add
movs
in
mov
fcom
pusha
add
das
mov
or
call
fwait
mov
or
je
cmc
ds
movs
xor
mov
add
aam
test
sbb
xchg
add
popf
push
push
inc
test
push
repnz
add
add
adc
jl
ins
jae
test
jo
sub
aas
cmc
or
mov
dec
xchg
test
mov
add
test
add
xchg
or
inc
cmp
popa
in
cmp
dec
mov
adc
and
out
dec
push
fldcw
push
ins
adc
loopne
cwde
ja
mov
mov
pusha
mov
add
push
jb
sbb
inc
nop
out
add
sub
add
inc
dec
scas
adc
or
daa
pop
and
rol
xchg
jmp
pop
add
jge
ret
call
arpl
sbb
or
or
inc
movs
mov
jle
adc
mov
pop
jae
or
cs
add
adc
jle
inc
inc
rcl
ds
add
lahf
sub
push
sub
or
test
ret
mov
fdivr
scas
sbb
adc
clc
loopne
xchg
pop
clc
arpl
and
pop
ror
scas
mov
inc
popa
inc
je
push
sbb
pop
xchg
xor
aad
dec
jno
mov
add
push
cmp
sbb
sbb
push
sbb
adc
lock
dec
clc
sub
and
push
or
and
bound
cld
sbb
inc
inc
push
cmp
imul
ret
fdivr
clc
es
add
lods
pop
ins
fcomp
xor
add
mov
add
ds
cmp
add
imul
pop
xor
push
push
and
xchg
jae
xchg
test
and
mov
test
xor
xchg
push
add
add
add
sub
dec
xor
jnp
mov
pop
adc
outs
pop
mov
aas
bound
pop
es
sar
dec
popa
or
sbb
es
ins
bound
jbe
out
jnp
imul
jne
jo
addr16
mov
sahf
addr16
add
mov
arpl
ins
daa
mov
imul
sti
ficomp
ins
das
je
cmps
sbb
bound
jl
and
outs
pop
daa
cmp
cmp
pop
je
xchg
jb
arpl
jns
xchg
mul
das
add
mov
lods
pop
or
outs
pop
sub
ins
aam
jne
dec
shr
imul
call
pop
cmp
and
cmp
in
or
pusha
sbb
fadd
data16
dec
cmp
or
test
xor
dec
add
xchg
hlt
xlat
hlt
or
add
add
sub
xchg
mov
mov
mov
mov
mov
adc
out
jmp
retf
or
lea
xor
and
or
dec
push
clc
mov
mov
sub
ja
je
imul
mov
adc
(bad)
push
inc
or
pop
sbb
sub
and
pop
add
icebp
lods
inc
add
cmc
movs
fist
xor
or
lea
cmp
pop
int3
add
pop
pop
pop
test
adc
lahf
(bad)
das
sub
or
addr16
sbb
sub
sbb
cmps
ror
xor
adc
inc
inc
or
inc
add
adc
mov
lock
xchg
fcom
adc
fadd
icebp
xor
cmp
adc
inc
add
dec
sbb
add
or
sahf
mov
(bad)
nop
pop
mov
jmp
rcr
jo
icebp
or
das
push
xchg
mov
pop
pop
inc
data16
push
or
mov
inc
add
push
sbb
test
dec
mov
or
mov
sub
push
add
daa
idiv
aad
pop
add
pop
jb
dec
add
shl
xor
or
icebp
or
minps
dec
(bad)
mov
push
test
add
add
xchg
dec
movs
add
or
repz
jo
sbb
xor
jno
cmp
repz
dec
lea
out
and
inc
sub
or
push
mov
push
xchg
xchg
sub
ins
mov
sbb
mov
or
or
sub
and
sub
fs
push
and
leave
popf
jno
iret
out
cmps
loope
mov
or
or
jns
movups
adc
adc
sahf
out
adc
add
sahf
out
sbb
aas
push
imul
xor
out
sahf
popa
ja
mov
out
in
adc
cmp
push
imul
iret
rcl
add
out
sahf
das
inc
pop
jno
popf
jl
out
mov
fsubr
add
mov
rcl
xchg
mov
sub
or
cdq
nop
or
sbb
push
adc
adc
nop
xchg
or
push
or
xchg
or
cdq
or
or
sbb
sbb
push
and
nop
xchg
or
sub
nop
xchg
or
sub
xor
xor
or
cdq
nop
cmp
sbb
push
inc
cdq
nop
xchg
or
dec
sbb
sbb
or
cdq
sbb
sbb
sbb
push
popa
mov
aad
and
pop
sbb
xchg
jb
and
cs
pop
es
and
inc
movs
nop
cmp
cmps
mov
mov
loopne
inc
loope
ds
xor
lds
cmp
inc
les
loopne
pop
fs
inc
sbb
add
lea
shr
in
add
lods
cmc
out
int
out
je
or
je
push
int
outs
pop
xchg
inc
add
mov
push
rcl
loopne
add
(bad)
ret
rol
add
pop
(bad)
movs
add
mov
in
push
rcr
lock
sahf
push
enter
iret
or
dec
jae
xor
jo
jo
or
dec
mov
pop
sub
inc
and
mov
or
fadd
mul
(bad)
push
xchg
addr16
xor
sbb
mov
xchg
inc
ja
adc
std
sar
mov
mov
jmp
cmps
sbb
add
mov
push
mov
adc
aam
jb
in
cmp
push
cwde
fdivr
dec
mov
sbb
inc
lods
jbe
fcom
pop
lods
pop
pop
and
adc
rcr
dec
stos
xor
fiadd
jo
fimul
nop
sbb
repz
sub
fld
js
addr16
sub
mov
neg
je
sbb
hlt
pop
sbb
in
fistp
xchg
mov
push
lahf
daa
loope
inc
pop
pop
and
les
xchg
sub
leave
add
xor
add
gs
pop
xor
or
mov
adc
mov
and
adc
inc
ret
cmp
adc
xor
cmp
sbb
inc
add
(bad)
sbb
mov
add
cs
scas
mov
cwde
dec
pop
cmc
push
jb
sbb
and
or
inc
scas
cs
mov
or
cmp
mov
dec
cs
and
or
sbb
daa
adc
sub
dec
scas
xchg
or
sub
sub
and
xchg
sub
nop
cs
xor
xor
xor
add
push
xor
das
sbb
sbb
xor
add
mov
dec
popa
jns
leave
movs
dec
nop
sbb
mov
retf
adc
popa
nop
nop
mul
sbb
nop
inc
and
iret
in
mov
(bad)
daa
sti
xchg
push
push
inc
cmp
out
outs
dec
in
pop
xlat
ins
(bad)
rcr
fadd
fwait
int
test
jae
jl
or
jecxz
cmp
jnp
add
les
jbe
sbb
push
nop
or
fistp
(bad)
mov
push
mov
mov
mov
inc
dec
repz
loopne
out
xchg
loop
movs
inc
sbb
loop
push
nop
bound
mov
daa
jbe
pop
sub
dec
test
pop
test
jns
aam
sahf
mov
les
sbb
nop
add
jp
rcl
rol
stc
scas
pop
sbb
dec
mov
scas
pusha
push
xor
daa
dec
xor
mov
mov
mov
inc
sub
jns
adc
mov
ins
mov
adc
test
add
mov
and
sbb
and
dec
add
test
add
add
in
js
cwde
mov
and
jnp
movs
or
sbb
loope
mov
xor
xor
pusha
mov
lods
xchg
std
sbb
hlt
pushf
js
pop
sub
mov
adc
push
outs
loopne
loopne
mov
or
imul
sar
mov
in
lods
mov
arpl
push
fdiv
in
adc
scas
xchg
or
push
pop
xor
sub
sub
in
or
sub
add
or
mov
imul
test
mov
gs
jmp
dec
call
xor
dec
rol
jle
xor
or
xor
or
pop
add
dec
lods
pop
cmp
pop
add
fidiv
push
into
push
cmp
xor
dec
pop
and
inc
adc
adc
xchg
inc
enter
in
jbe
leave
call
out
das
mul
add
out
in
inc
jmp
jnp
shl
push
je
push
fmul
pop
mov
adc
push
mov
retf
push
idiv
out
repnz
and
loop
mov
or
gs
and
or
es
jl
loope
push
xor
inc
jns
jo
jno
adc
mov
push
adc
add
sbb
and
sti
add
sub
stos
jo
(bad)
pop
aas
(bad)
nop
(bad)
or
sti
lar
inc
mov
in
ins
movups
add
and
mov
or
ins
and
add
stos
cli
jl
xor
sbb
xor
out
cmp
pop
jo
add
fwait
push
and
xor
popa
sbb
pop
and
leave
push
sbb
or
jle
rcl
test
in
and
nop
outs
cwde
je
pop
rol
scas
jne
ins
gs
je
jo
and
je
pop
inc
jns
sbb
or
call
mov
and
adc
jmp
dec
sbb
nop
or
jg
or
and
and
es
inc
es
cmp
into
or
push
cmp
pusha
ret
imul
adc
xchg
jmp
sub
jne
cmp
mov
pusha
sbb
lahf
(bad)
jb
and
inc
add
xor
inc
jmp
adc
xor
add
xor
stos
pop
push
leave
xor
xor
sbb
sub
mov
xchg
stos
cmp
xor
xor
cmp
push
aas
stc
inc
xchg
xchg
dec
or
test
into
loope
fld
imul
or
or
daa
outs
and
cmp
xor
add
mov
push
test
ret
cmp
mov
call
pop
xchg
pop
mov
dec
cmp
data16
adc
stc
push
stc
pop
or
cli
(bad)
sti
js
ins
cld
xchg
sbb
call
mov
push
xchg
(bad)
cmps
cmp
and
or
in
or
xchg
leave
mov
pop
xor
push
ins
xchg
jo
dec
adc
enter
sbb
xchg
xor
inc
loopne
imul
(bad)
inc
enter
or
push
scas
mov
repnz
into
enter
imul
jb
pop
sbb
jns
inc
leave
sbb
push
dec
es
push
sbb
sbb
or
sub
cmc
(bad)
add
xchg
lock
jns
xchg
mov
pop
sub
test
push
sub
mov
push
mov
jae
add
jno
jb
daa
pop
pop
jmp
push
popa
pop
cmps
cmp
mov
add
into
rol
call
int
adc
aas
xor
push
jb
xor
and
xor
ss
or
push
leave
cmp
cmp
push
jb
cmp
or
push
cmp
or
inc
pop
xor
xor
inc
adc
rcr
dec
mov
movs
mov
mov
outs
pop
add
out
inc
push
mov
outs
nop
add
mov
dec
jge
mov
adc
imul
in
xor
xor
add
add
jbe
loop
lahf
push
pop
aam
test
popa
mov
aad
mov
std
(bad)
push
fadd
push
xchg
sub
dec
or
imul
cs
pop
and
push
pop
xchg
xchg
sbb
mov
and
add
(bad)
das
(bad)
mov
in
dec
(bad)
ins
mov
outs
mov
out
push
int3
push
fs
mov
push
mov
dec
mov
in
aam
dec
xchg
or
inc
adc
dec
or
cmovg
daa
in
dec
in
imul
add
les
adc
adc
adc
xlat
sbb
cs
into
pop
loopne
lock
jl
dec
mov
sub
pop
add
push
ret
rcr
adc
adc
or
ret
call
pop
add
fcomp
hlt
push
adc
sub
or
push
inc
bound
sub
or
(bad)
push
pop
sub
jp
test
cld
fadd
rol
cmp
arpl
or
sub
mov
dec
or
gs
daa
push
fld
jg
cmc
mov
dec
adc
xor
xchg
jno
les
pop
dec
cmp
repnz
push
and
and
scas
jl
push
leave
or
and
dec
enter
int3
adc
push
dec
jp
rol
push
or
scas
aam
aas
xchg
push
scas
mov
bnd
cmp
(bad)
xchg
xchg
push
xor
mov
jbe
ss
add
fisub
push
adc
push
push
mov
xchg
and
mov
pop
sub
(bad)
loopne
lods
movs
mov
movs
pop
enter
mov
or
sar
sbb
mov
shr
cmp
cmp
jmp
push
sbb
adc
pusha
push
fsubr
dec
imul
fimul
dec
nop
pop
jle
sbb
loopne
xor
shl
adc
and
adc
inc
xchg
adc
test
dec
pop
and
pop
adc
sbb
cmp
sub
int3
push
enter
sub
test
add
or
pusha
mov
cmp
mov
lods
loopne
pop
mov
ret
dec
int3
sbb
lock
fcom
dec
sub
rcl
and
nop
mov
and
pop
and
add
daa
xchg
pop
sbb
push
add
sub
inc
nop
or
and
scas
test
adc
xor
xchg
mov
inc
dec
sbb
icebp
xor
jae
and
push
xor
inc
inc
aas
mov
and
sahf
jle
pop
cmp
sub
lods
movs
mov
sub
movs
push
in
cmp
cmp
or
cmp
ds
lods
jle
xchg
into
mov
rol
movs
adc
fwait
test
add
fwait
std
add
add
test
add
inc
add
add
nop
push
aaa
fsubp
ds
inc
xchg
bound
icebp
les
mov
dec
add
dec
mov
add
xor
push
ja
out
jns
mov
push
shl
int3
jnp
xlat
jl
sub
push
xchg
push
jl
push
cmp
ds
or
push
mov
mov
int3
push
fcom
lods
push
push
adc
dec
pop
sti
dec
in
push
add
scas
inc
mov
test
cmp
cs
or
add
cmp
cli
sub
and
jae
jno
ins
cmps
push
add
cmp
push
xor
dec
sbb
sbb
pop
sub
or
xchg
mov
mov
push
mov
test
and
mov
in
and
push
daa
aam
or
sub
dec
pop
xchg
outs
or
retf
idiv
mov
dec
jmp
push
mov
inc
cmp
sar
sub
int3
daa
bound
ret
ss
sahf
xchg
pop
sbb
rol
xor
es
call
out
xchg
cmp
push
xor
add
push
add
push
pop
xchg
call
shl
xor
cmp
pop
and
push
inc
in
lods
mov
adc
dec
mov
bnd
mov
adc
adc
mov
popa
ins
dec
xchg
scas
inc
or
pop
sbb
in
in
fstp
sbb
daa
sbb
push
pop
cmp
inc
cmp
enter
rol
dec
jb
or
and
push
leave
push
and
dec
daa
sub
leave
sub
sub
add
xchg
sub
les
cs
jo
push
pusha
xor
cmp
lahf
test
leave
test
nop
sub
jns
add
sub
outs
cmp
add
jnp
mov
call
cmp
add
mov
and
addr16
and
stos
js
pop
cli
test
jns
add
or
sub
adc
inc
add
adc
xor
movs
loop
push
xchg
lods
sub
sub
inc
adc
adc
push
pop
inc
les
test
pop
inc
daa
adc
dec
sbb
jo
xchg
xchg
or
pop
sub
leave
push
jb
cs
mov
add
push
inc
cmps
xor
add
mov
sub
add
bound
in
sbb
pop
loop
and
jg
add
or
add
popa
ins
adc
arpl
dec
rdpmc
movs
fwait
in
add
out
or
inc
inc
gs
adc
popa
mov
popf
je
inc
sbb
scas
adc
gs
or
ins
jecxz
add
data16
aam
(bad)
adc
jns
fwait
inc
push
add
or
outs
mov
mov
mov
pusha
ror
shl
pop
jb
jl
inc
jb
scas
cmp
dec
hlt
aaa
dec
(bad)
cmp
shl
mov
inc
pop
push
and
loop
test
adc
aaa
pop
cmp
cmps
push
les
inc
mov
sti
dec
clc
push
inc
push
lods
cmp
mov
mov
push
dec
es
jle
pop
cmp
add
add
mov
adc
(bad)
repz
out
xchg
ins
inc
in
adc
jnp
sti
hlt
dec
push
adc
cmp
fs
cmps
fnstcw
push
push
fdivr
push
fmul
mov
loopne
mov
bound
pop
sub
xlat
mov
mov
ret
ret
pop
sti
and
test
test
inc
or
adc
pop
and
mov
push
pop
js
sbb
and
addr16
lods
in
popa
inc
xchg
mov
aam
dec
and
repz
push
pop
xor
mov
push
adc
mov
pop
jb
and
xor
add
sbb
adc
pusha
or
sub
pushf
cld
mov
jne
outs
jae
nop
or
sbb
sbb
mov
jl
adc
ins
xchg
add
push
push
or
pop
in
ret
and
bound
cmp
xchg
dec
enter
lods
inc
jo
and
test
mov
and
sub
push
mov
hlt
inc
sub
pop
adc
mov
and
and
daa
sub
pop
and
nop
or
data16
mov
add
inc
pop
sbb
add
inc
jb
fwait
cmp
inc
adc
sub
sub
xchg
pop
xor
xor
mov
ja
or
test
test
mov
mov
test
pop
loop
sub
out
jo
pop
ss
cmp
push
xchg
pop
and
aam
jb
ret
stos
arpl
push
dec
and
cmp
push
xor
and
mov
mov
or
add
lea
enter
inc
inc
ror
add
test
(bad)
and
xchg
jne
jle
jno
inc
pop
jae
jne
mov
inc
adc
outs
aaa
jmp
sbb
out
int
pop
mov
push
adc
and
inc
inc
or
push
dec
test
add
push
adc
xchg
sbb
and
loope
push
inc
lea
pop
ss
and
mov
pop
jne
jbe
fs
mov
es
test
xor
punpckhdq
sub
repnz
pop
sbb
aaa
pushf
int3
or
push
imul
xchg
popa
fadd
jae
xchg
and
sub
jns
test
es
sub
or
sbb
adc
cs
adc
ins
pop
enter
jmp
in
nop
stos
add
push
push
xchg
xchg
pop
int
pop
sbb
imul
test
or
or
pop
jmp
jmp
cmp
inc
pop
mov
mov
add
sbb
add
xchg
pop
sub
push
leave
push
jb
sub
xor
sub
or
mov
nop
push
and
sbb
js
mov
inc
xchg
call
ret
outs
aad
cdq
fadd
dec
fsub
add
push
inc
jl
dec
scas
xor
ret
inc
xchg
pop
push
hlt
dec
scas
push
(bad)
add
shl
out
mov
jmp
dec
push
fcom
add
mov
imul
hlt
ror
nop
rcl
imul
mov
xlat
or
adc
neg
mov
dec
adc
setg
xor
in
mov
inc
dec
sbb
jo
pop
fdiv
mov
dec
mov
mov
dec
cmp
mov
(bad)
xor
push
sbb
sbb
dec
sub
dec
add
jp
mul
jo
push
xchg
pop
pop
push
or
and
ss
sub
add
(bad)
jecxz
adc
xchg
pop
sub
and
daa
sti
sub
enter
jb
movs
or
imul
add
nop
xchg
sbb
fnstsw
dec
sub
or
cmp
push
(bad)
leave
and
ins
or
or
iret
iret
pop
push
cmp
inc
inc
pop
xlat
adc
movs
fisttp
add
add
adc
add
popa
cmps
xchg
xchg
jno
pop
in
or
adc
sbb
push
neg
mov
and
pushf
xor
in
mov
movups
mov
call
mov
jo
inc
push
or
imul
out
dec
loopne
mov
dec
fs
xor
and
(bad)
(bad)
mov
and
xor
test
test
inc
popa
adc
lods
push
aas
jmp
jmp
or
xchg
sbb
and
cmp
xchg
adc
add
jae
pop
mov
xor
movs
jo
cwde
stos
and
ja
mov
xchg
and
lods
test
pop
js
pusha
mov
or
mov
xor
clc
cmp
in
data16
dec
sub
and
inc
dec
fdivr
adc
test
mov
mov
daa
jmp
mov
pop
lds
scas
sbb
popa
add
push
in
inc
jmp
das
sub
test
mov
fidiv
inc
sbb
jo
les
outs
or
sbb
adc
lock
add
jle
and
cmp
test
mov
xor
xor
jbe
pop
jo
and
mov
ins
pusha
sbb
adc
dec
mov
(bad)
lds
push
mov
push
jne
xchg
mov
lea
xor
hlt
push
cmovae
and
xor
hlt
hlt
push
inc
call
enter
pop
cmp
(bad)
in
test
xor
cmps
idiv
adc
push
fcomp
test
nop
push
ret
push
adc
and
pop
das
mov
(bad)
and
sbb
inc
scas
add
inc
pop
adc
in
clc
mov
das
sbb
xchg
push
arpl
or
test
push
jmp
(bad)
xchg
or
test
push
sub
jmp
lds
or
pop
push
dec
dec
rcl
imul
dec
mov
sbb
mov
push
vmread
jg
mov
add
pop
or
in
popa
adc
scas
or
arpl
adc
rcl
repnz
(bad)
aad
jbe
pop
ins
movntps
pop
jns
cdq
fisub
outs
mov
pushf
jmp
add
cmp
aas
loope
xor
pop
les
pop
add
stos
add
shl
lods
push
or
jmp
rcl
inc
xor
push
inc
push
sub
fcmovnb
mov
lock
ins
push
or
mov
out
adc
ins
sub
add
call
(bad)
pop
outs
popa
test
or
in
push
cmp
fadd
(bad)
and
(bad)
pop
add
sub
cmp
in
adc
sub
sbb
loop
or
push
lahf
and
dec
inc
int3
mov
inc
push
aad
cwde
dec
mov
mov
xor
ret
jne
(bad)
sar
cld
inc
or
add
inc
fsubr
js
or
mov
jg
nop
add
adc
sub
rol
fldcw
mov
or
pushf
sbb
push
xor
outs
jmp
imul
out
mov
mov
test
mov
dec
cmps
leave
push
inc
imul
xor
or
enter
loope
ins
nop
mov
pusha
gs
dec
pop
cwde
or
ja
nop
add
call
enter
ja
add
ins
fisub
gs
fild
mov
xchg
shl
inc
push
out
or
sub
and
add
mov
xchg
xchg
stos
outs
and
xchg
sub
scas
xor
push
and
popf
cmp
test
ret
inc
adc
fistp
inc
xchg
sub
pop
dec
arpl
sub
scas
push
mov
movs
sbb
cmps
add
mov
pop
ins
dec
inc
out
pop
mov
dec
imul
add
test
inc
sub
in
out
add
xchg
and
push
mov
test
mov
adc
xchg
test
xor
popa
mov
ins
movs
loope
gs
add
out
mov
lods
jmp
sbb
jnp
dec
and
sbb
in
adc
adc
cmps
or
sub
pop
mov
push
dec
jl
cmps
rcr
sahf
shr
in
pop
(bad)
addr16
sub
adc
adc
add
ficom
adc
inc
scas
es
inc
jmp
pop
sub
sti
enter
nop
and
adc
xchg
pusha
sar
xchg
jmp
and
sbb
mov
inc
xor
or
leave
test
jmp
mov
sbb
scas
mov
xor
repnz
outs
fld
mov
(bad)
in
shl
inc
mov
sbb
push
and
cs
sbb
sbb
ins
add
test
les
mov
dec
pop
add
xchg
fwait
repz
gs
(bad)
arpl
ins
lock
cmps
or
in
inc
add
jecxz
les
test
push
jmp
jecxz
inc
pop
add
inc
dec
fbld
jns
mov
int3
lock
dec
inc
dec
mov
hlt
scas
in
in
fucomp
in
jno
xchg
hlt
xor
jo
sub
mov
and
int3
dec
xor
neg
test
fisttp
in
sbb
inc
lock
sub
push
and
gs
add
push
cdq
fs
hlt
hlt
inc
loop
adc
xchg
adc
mov
js
js
adc
push
lahf
in
pop
sbb
jns
out
aam
mov
movs
or
retf
in
loopne
mov
retf
clc
enter
dec
jnp
add
sbb
jb
or
adc
or
dec
retf
dec
mov
jmp
add
inc
ds
out
jecxz
xchg
lock
inc
xchg
cmp
jo
es
mov
xor
push
outs
pop
mov
add
mov
popa
mov
adc
test
ret
add
and
sub
rcr
mov
xor
aad
leave
dec
loop
inc
xchg
out
aas
xchg
xchg
inc
or
push
out
adc
nop
add
iret
nop
cdq
jnp
push
or
js
fldenv
sub
fstcw
(bad)
pop
mov
pop
inc
(bad)
jl
xor
lock
out
ror
fdiv
mov
push
fld
es
jnp
jo
or
mov
pop
(bad)
dec
hlt
sbb
(bad)
cmp
mov
sub
addr16
xchg
fsubrp
pop
adc
mov
fsub
imul
jp
mov
cdq
add
pop
lock
shl
stos
ret
ret
add
or
movs
das
xor
pop
rcl
mov
inc
adc
mov
pop
jne
mov
sbb
shl
sub
pop
xchg
(bad)
int3
mov
push
sbb
push
(bad)
mov
test
add
add
sbb
mov
xchg
pop
add
jp
sub
mov
mov
cdq
cmp
cmps
xor
fisttp
jnp
inc
sub
aaa
push
sbb
add
or
dec
stos
dec
lods
jbe
out
repz
jge
jge
push
push
xchg
(bad)
fcomi
fsub
ja
sub
push
pop
add
mov
je
nop
pop
mov
adc
mov
jg
fabs
sbb
xor
inc
or
(bad)
idiv
cmp
add
sub
test
mov
(bad)
and
jmp
or
mov
adc
scas
les
add
add
inc
jo
push
add
pop
dec
lock
mov
repnz
xor
mov
sbb
ret
xchg
mov
cmps
mov
(bad)
test
and
arpl
lods
mov
es
popa
daa
and
mov
fsubr
push
fstp
add
scas
lock
retf
and
adc
mov
mov
add
addr16
sbb
mov
hlt
daa
sub
jns
inc
in
and
hlt
dec
(bad)
ret
hlt
mov
popa
push
jmp
mov
inc
popf
stos
push
inc
or
xchg
cmps
mov
pop
fild
cmp
ficomp
mov
jbe
adc
adc
lahf
pop
add
add
push
nop
inc
add
cmp
add
jno
daa
mov
push
pop
fmul
lods
out
sbb
xchg
mov
mov
call
or
add
mov
shr
lds
or
and
xor
shl
mov
daa
mov
jo
inc
loopne
pop
add
xor
in
adc
pop
or
pop
retf
es
mov
or
sahf
enter
and
xchg
mov
sbb
std
pop
rol
out
fst
or
xchg
mov
sub
and
test
or
push
inc
dec
dec
mov
rol
inc
jmp
pop
fs
inc
leave
mov
ss
add
push
aaa
add
mov
mov
cmp
or
and
mov
(bad)
mov
mov
ret
or
addr16
adc
xchg
jb
add
sti
call
(bad)
in
test
add
mov
and
sub
adc
in
cmp
pusha
or
push
daa
fcomip
arpl
sub
mov
or
js
lahf
fidivr
and
stos
lds
add
push
leave
and
add
(bad)
push
pop
enter
push
loopne
mov
xchg
add
xchg
xor
test
pop
jmp
les
mov
inc
mov
cmps
and
nop
sbb
sub
in
retf
and
and
pop
dec
push
inc
add
add
dec
sbb
jp
add
mov
add
and
mov
and
ins
fwait
test
stos
add
push
add
push
and
mov
push
sub
and
xchg
inc
add
mov
push
inc
cwde
lock
imul
test
mov
cmp
or
clc
jmp
inc
sar
dec
pop
add
sub
mov
mov
add
xor
pop
les
dec
daa
inc
pushf
loop
inc
inc
mov
jge
test
stos
jecxz
nop
lock
adc
lds
jecxz
daa
hlt
sbb
xor
inc
or
push
pop
mov
xchg
add
jb
fdivr
sbb
push
shr
mov
es
pop
jp
add
popf
xor
push
imul
sub
adc
pusha
rcr
jne
aaa
mov
mov
mov
arpl
sub
popf
lods
sbb
inc
or
push
dec
sbb
and
add
xchg
dec
sar
mov
stc
cmp
and
rcr
add
push
repnz
inc
pop
inc
rol
jl
cmp
nop
xchg
add
cmps
inc
jae
pusha
inc
dec
jg
or
inc
sbb
jo
inc
sub
cmp
loop
pop
and
push
mov
divps
jmp
and
arpl
mov
adc
rcl
adc
(bad)
cdq
cmp
xor
or
mov
pop
xchg
xchg
cmp
sub
adc
mov
push
sbb
imul
aaa
sti
repz
adc
push
aam
jmp
cmps
pop
aam
mov
or
cmp
inc
test
jne
sub
mov
jae
fs
push
pop
in
add
xor
push
in
ja
dec
loope
or
jb
adc
or
jge
or
pop
cmps
sbb
movs
xchg
(bad)
and
test
addr16
inc
mov
ja
pop
mov
push
hlt
inc
jns
je
clc
cmps
or
sub
jne
xchg
pop
retf
mov
shl
clc
popa
add
sub
inc
mov
jb
hlt
dec
add
jae
lock
jmp
mov
movs
shl
add
jo
jg
pop
push
dec
enter
ror
jo
pop
je
jl
push
or
add
cmp
xchg
ins
movs
sbb
sub
lods
or
fstp
and
mov
jl
dec
sar
pop
cli
sbb
mov
add
add
nop
sub
sub
sub
mov
cmp
ja
mov
into
lds
sbb
inc
cmp
push
sar
mov
inc
call
pop
sub
test
and
xor
mov
jno
xchg
add
dec
dec
bound
sub
fwait
add
or
sbb
cmps
jge
or
daa
fdiv
mov
dec
cmc
jecxz
add
sub
and
jmp
or
inc
scas
shr
sbb
adc
adc
data16
lea
shr
sbb
mov
ins
cdq
push
in
adc
cmp
or
or
inc
out
inc
jns
sub
out
jb
sub
or
aaa
push
jg
jno
xor
xchg
mov
cmps
cld
or
popa
add
mov
bound
sbb
inc
aaa
jecxz
or
add
or
loopne
mov
sti
fcomp
add
fs
shr
jb
cmp
not
jnp
test
popa
imul
sti
mov
inc
push
sar
lods
sub
inc
xchg
and
sbb
scas
loop
sbb
or
fwait
(bad)
mov
ss
fnstcw
mov
adc
in
add
or
(bad)
fstp
jnp
xlat
push
inc
push
sub
push
das
jno
sbb
push
std
rcr
mov
pop
adc
cmps
loope
push
inc
ds
sub
retf
sub
daa
lds
imul
pop
test
in
fs
and
push
xchg
cmp
mov
mov
(bad)
ror
dec
sbb
sbb
fwait
jl
pop
xchg
mov
sbb
add
sar
shl
imul
cvtdq2ps
pushf
xchg
mov
sbb
inc
sub
bound
mov
sub
aas
test
lea
test
xor
mov
inc
xchg
dec
push
pop
mov
xchg
dec
je
(bad)
aad
xor
ret
scas
loopne
cmovo
pop
dec
dec
in
imul
push
test
push
mov
mov
neg
sub
sub
push
movs
das
inc
add
test
in
pop
fadd
lahf
repnz
or
test
mov
pop
xor
adc
mov
dec
add
adc
bound
sbb
xlat
cmps
xor
sbb
xchg
sbb
push
jno
inc
mov
mov
jge
and
das
add
add
pop
shr
sub
xchg
adc
xlat
or
fcomp
imul
mov
add
mov
pop
ins
cmp
mov
dec
sti
sub
jbe
test
xor
or
sub
fsubr
dec
xlat
and
dec
jnp
sbb
(bad)
dec
pop
mov
adc
aad
out
inc
pop
inc
addr16
inc
sub
xchg
jno
mov
pop
(bad)
jmp
sub
sbb
sbb
adc
iret
shl
add
xor
adc
out
or
dec
loopne
push
mov
xchg
shr
mov
and
sbb
or
mov
xchg
nop
rcr
inc
setl
or
cs
ja
sub
pop
cmp
adc
popa
mov
icebp
cld
adc
and
(bad)
adc
xchg
dec
jbe
ret
dec
out
inc
and
fmul
add
mov
test
mov
mov
shl
push
xchg
push
bound
adc
mov
xchg
movs
push
pop
adc
inc
ja
cli
ja
push
add
jbe
jne
push
push
cdq
and
cmp
push
xor
test
pop
aaa
test
loopne
sti
jmp
popa
inc
js
mov
popa
pop
push
jbe
mov
jg
lods
lea
push
sar
xor
adc
icebp
out
jae
push
loopne
adc
sti
rcl
lods
mov
rol
add
aaa
jl
push
inc
jp
popa
popa
push
and
fs
inc
inc
push
cwde
xor
xchg
dec
inc
retf
xchg
shl
push
and
and
cmps
cmp
inc
call
and
adc
js
fiadd
js
xor
cmp
aas
add
pop
jne
je
ret
xchg
or
sbb
push
sub
js
out
mov
and
fnstenv
dec
push
fs
(bad)
xchg
or
fist
cmp
pop
je
das
jl
jns
lea
sub
imul
add
push
sbb
add
sbb
dec
cld
test
jnp
mov
xor
lea
or
mov
pusha
repnz
xor
cmps
push
push
sahf
mov
sbb
pop
les
hlt
cmp
jo
pusha
(bad)
pop
imul
inc
outs
dec
inc
int
mov
or
sub
xchg
or
cmp
pop
imul
pop
bound
pop
push
sbb
cmc
in
push
hlt
or
push
adc
mov
xchg
dec
mov
shl
dec
repnz
adc
or
mov
push
cmp
cs
mov
or
or
dec
pop
lock
mov
add
vpmulhuw
fisubr
pop
out
dec
jmp
push
add
mov
add
nop
out
push
xchg
cmps
xor
mov
and
add
js
lods
sub
push
arpl
pop
push
ins
adc
cmp
or
inc
pusha
cmp
and
scas
mov
dec
lods
clc
pop
push
movs
std
and
and
test
cs
sub
sbb
lock
aam
ins
dec
mov
inc
bnd
pop
pusha
sbb
dec
mov
mov
shl
inc
or
std
call
adc
ins
pop
outs
jmp
sub
xrelease
pop
push
ficomp
dec
xchg
dec
and
mov
icebp
lahf
fsubr
loopne
and
push
in
(bad)
mov
xlat
and
cmps
or
inc
sbb
xlat
setne
xor
es
outs
or
(bad)
or
(bad)
adc
push
inc
movs
dec
loopne
cmc
arpl
cmp
outs
pop
push
shl
and
push
and
pop
pop
stos
mov
ss
mov
es
fsubr
stos
adc
pop
sub
jmp
sti
xchg
repz
or
push
sbb
adc
sbb
bound
and
call
xlat
movs
daa
push
pop
or
ja
adc
pop
popa
pop
fcmovb
ret
das
inc
sbb
adc
test
sbb
adc
imul
xor
add
jl
inc
inc
(bad)
test
je
or
das
pop
xlat
xor
je
xchg
or
fsub
scas
adc
push
sbb
fcom
adc
sbb
or
sbb
jbe
ret
and
rcl
sbb
hlt
sti
xchg
push
shl
or
and
sbb
adc
cmp
das
fimul
std
jne
push
jmp
(bad)
daa
add
cmp
jle
mov
movs
outs
xchg
hlt
lods
shl
punpckldq
cwde
mov
sbb
out
or
push
das
add
jae
bound
sbb
sub
mov
call
dec
adc
fwait
out
or
test
mov
push
sub
ror
jno
push
sub
into
rcr
inc
and
stos
movs
dec
xchg
in
in
push
push
inc
jge
in
aas
fdivr
das
in
ret
inc
add
xor
add
fs
aas
adc
mov
mov
andnps
lods
pop
lods
repnz
add
sub
and
test
add
aam
and
(bad)
or
push
cmp
leave
mov
or
adc
shl
enter
cmp
movs
movs
and
shl
jno
dec
loop
mov
nop
call
pop
mov
inc
in
cmp
inc
mov
in
push
or
ds
sbb
xor
jp
lea
nop
mov
popf
push
mov
aaa
and
test
and
pop
shl
xchg
lods
cld
or
movs
sub
and
dec
cmp
lds
inc
sbb
add
xchg
add
and
xchg
cmc
push
sub
jmp
and
fist
adc
or
test
out
xor
clc
das
les
gs
mov
pop
sub
push
imul
inc
in
xor
in
scas
or
aaa
loopne
xchg
ins
ins
leave
and
adc
push
aam
cwde
push
cdq
sub
inc
mov
pusha
mov
inc
mov
mov
push
xchg
adc
add
sbb
(bad)
jmp
pop
daa
fisttp
inc
jb
add
or
dec
mov
(bad)
dec
popf
or
outs
pop
and
xor
scas
xor
and
dec
cs
pop
or
daa
dec
inc
add
push
sub
mov
cmps
outs
adc
nop
icebp
jnp
das
dec
inc
pop
xchg
and
pop
cmp
inc
jbe
xchg
xchg
and
xchg
outs
shr
sbb
dec
and
sub
adc
xor
sub
sbb
loop
sbb
xchg
inc
movs
xchg
pop
hlt
push
cmp
dec
inc
or
sub
cmp
fdivr
xchg
(bad)
push
mov
push
push
push
dec
dec
xchg
pop
sbb
or
int3
pop
add
cmp
int
xor
cmps
das
dec
add
jne
imul
out
pushw
mov
call
cmp
sub
cmp
jne
dec
aam
aam
ror
leave
push
aaa
mov
outs
jg
dec
fwait
pop
lds
add
mov
(bad)
ja
nop
add
cwde
or
jno
mov
add
adc
push
ins
into
push
fist
aas
mov
jl
xchg
sub
add
inc
mov
dec
adc
mov
sub
or
rol
pop
enter
adc
(bad)
cmp
stc
jnp
(bad)
pop
shl
sbb
cmps
test
adc
leave
adc
xor
loop
dec
loop
sub
pop
stos
add
dec
enter
xchg
push
add
fs
push
mov
mov
push
rcr
push
aaa
popa
pop
pop
add
sub
enter
and
or
cmovo
pop
cmp
push
jns
daa
or
clc
push
or
mov
cmp
cmp
add
cmc
sbb
cdq
ror
icebp
mov
xor
adc
pop
jo
adc
popf
dec
pushf
push
movs
or
push
pusha
cs
(bad)
and
and
push
xchg
jne
shl
les
add
loop
xor
sbb
pushf
cmp
daa
test
sub
pop
aad
or
into
xchg
xchg
fiadd
jae
pop
movs
mov
adc
push
xor
(bad)
push
jmp
and
add
adc
je
aam
mov
cmp
mov
cdq
fsubr
inc
lods
jmp
mov
(bad)
push
in
in
mov
in
xor
cs
add
add
jl
dec
xor
inc
inc
lock
aas
mov
adc
data16
lea
adc
adc
xlat
dec
xor
push
add
add
or
std
daa
adc
(bad)
mov
les
xor
adc
jno
jmp
push
cmp
mov
ror
xchg
and
push
push
xor
inc
add
mov
out
xor
stos
inc
mov
bound
or
mov
or
push
fdivr
(bad)
icebp
arpl
inc
jb
leave
mov
push
popa
xor
pop
cmps
(bad)
cmp
fstp
aad
mov
mov
inc
rol
add
icebp
push
push
iret
push
mov
jae
add
pop
mov
nop
(bad)
mov
mov
jmp
cmp
das
inc
sbb
cmp
mov
mov
and
hlt
cmp
dec
pop
(bad)
mov
adc
enter
add
clc
cmp
mov
pop
pop
movs
adc
mov
mov
dec
ror
call
xchg
jmp
mov
inc
in
inc
ret
xchg
in
mov
cmps
sbb
movs
jno
cmp
retf
imul
push
nop
mov
xor
mov
inc
push
lods
(bad)
sub
jecxz
leave
ss
add
pop
addr16
enter
in
aaa
push
pop
mov
add
xor
cmp
xlat
dec
sbb
adc
ror
or
lahf
xor
fsub
dec
or
mov
or
xchg
sti
or
fcom
sbb
mov
into
cmp
mov
pop
inc
mov
sbb
adc
push
pop
jmp
lock
mov
popa
shr
mov
mov
add
in
call
add
(bad)
nop
xlat
push
jne
pop
adc
nop
test
add
xchg
scas
test
mov
or
fcomp
adc
or
adc
xor
hlt
aaa
scas
fst
clc
nop
sub
scas
mov
addr16
xchg
sbb
dec
push
call
adc
add
inc
push
fdiv
(bad)
movs
pusha
add
sub
pop
ins
or
push
gs
call
dec
fucomp
push
dec
add
fwait
rcl
mov
mov
test
cmp
adc
sbb
adc
ja
push
add
fs
stos
push
ja
pop
or
push
mov
fsub
sub
jecxz
pop
cmp
jle
dec
retf
add
add
fbld
inc
fild
inc
adc
pop
sub
mov
mov
xchg
mov
mov
test
enter
scas
push
imul
push
mov
push
jmp
sub
or
out
stos
imul
setg
and
sub
adc
and
jg
add
(bad)
nop
dec
lods
pusha
mov
mov
sahf
xchg
adc
daa
xor
xchg
cmp
movs
(bad)
cmp
les
nop
cmp
cmp
cmp
sar
jo
sbb
jbe
xor
push
adc
scas
mov
add
or
sub
sub
dec
in
xchg
xor
push
(bad)
call
xchg
aam
sub
in
jns
pop
rcl
xlat
or
jo
sbb
xchg
jne
sub
and
cs
pop
inc
fwait
pop
xchg
xchg
xor
mov
fadd
dec
jmp
imul
mov
xor
jno
push
push
jmp
jns
lds
test
inc
jne
xchg
rol
mov
test
in
xor
xor
cmc
cmp
scas
sub
xor
test
xchg
enter
sbb
xchg
nop
xchg
mov
je
test
(bad)
jne
popf
jle
or
scas
adc
pop
fsub
xchg
outs
pop
inc
mov
dec
ins
push
add
push
jb
pop
test
or
jne
in
add
push
and
xor
adc
gs
mov
inc
enter
imul
xor
enter
sub
or
inc
lods
cmps
(bad)
movs
stos
xchg
(bad)
popa
xor
xchg
xor
ror
and
jmp
sbb
push
or
or
xchg
nop
jmp
enter
push
and
enter
movs
(bad)
popf
and
push
pop
jne
pop
inc
pop
lock
ret
dec
sub
test
sbb
in
mov
xor
arpl
lods
inc
add
sbb
outs
rol
je
in
inc
mov
inc
sbb
cmp
aam
rcr
mov
shl
clc
sbb
xor
dec
push
test
(bad)
cmp
and
int3
add
cdq
mov
xchg
inc
cmp
cmp
out
into
dec
push
enter
loopne
cmp
dec
push
push
dec
add
bound
add
mov
jmp
cld
ret
inc
and
dec
dec
push
push
push
(bad)
add
pusha
mov
adc
push
push
mov
or
or
inc
test
add
or
jp
or
popf
sbb
ins
(bad)
in
arpl
xchg
push
and
shl
call
inc
mov
test
in
and
pop
mov
or
inc
xor
push
pop
push
xor
rol
outs
mov
jns
dec
dec
mov
inc
aas
adc
jmp
aas
dec
pop
xor
pusha
sbb
test
js
test
mov
das
aas
pop
xor
add
dec
arpl
xchg
(bad)
sub
bound
dec
mov
cmp
fild
add
nop
das
iret
pop
pop
popa
cmps
or
rcr
sbb
or
inc
call
shl
mov
push
shl
and
wbinvd
cmp
pop
repnz
jne
out
add
jne
jne
fcom
adc
pop
popa
and
ret
mov
popa
nop
jg
dec
mov
xor
add
add
sbb
add
jecxz
movs
pop
mov
movs
sbb
or
fcmovbe
(bad)
mov
mov
fdivr
cld
and
test
scas
jecxz
xchg
push
and
in
push
les
dec
jns
jbe
ds
(bad)
ret
mov
jge
dec
push
pop
sub
or
push
push
stos
pushf
test
xchg
cmp
jne
sbb
jo
mov
add
(bad)
push
sar
push
inc
push
xlat
fbstp
js
ins
and
daa
mov
inc
dec
sahf
xor
add
ror
or
lock
pop
push
mov
inc
ret
push
imul
in
inc
mov
xlat
nop
push
or
mov
fcom
cmp
add
cmps
cmp
jne
shl
dec
cmp
in
and
mov
add
dec
xor
push
sub
mov
jle
or
jmp
xor
pop
or
add
push
jmp
call
push
push
inc
sbb
inc
(bad)
in
enter
outs
aad
shl
popa
adc
lea
and
ror
dec
test
and
(bad)
dec
pop
pop
pop
xchg
pop
fs
sub
sub
add
sub
add
sub
and
and
cmp
cmp
add
cmps
inc
mov
cmps
add
push
iret
and
xchg
mov
xor
pusha
adc
push
call
push
imul
add
sbb
aas
pop
in
xchg
shl
jmp
aaa
and
sub
xor
and
or
adc
push
rcl
add
das
pop
test
inc
inc
sbb
xchg
adc
push
sahf
daa
and
xchg
scas
loopne
xchg
push
inc
dec
jmp
rol
aam
inc
dec
or
test
shl
sub
pop
sbb
cmp
nop
jmp
fiadd
sbb
fimul
adc
jo
mov
(bad)
sbb
fcomp
aaa
test
jns
sbb
test
and
das
dec
fiadd
sbb
ret
inc
push
je
mov
pop
dec
and
imul
nop
sbb
inc
lds
inc
imul
xchg
in
call
mov
and
mov
push
mov
xchg
outs
add
(bad)
cmps
xchg
movs
push
out
add
pop
xchg
push
xchg
sti
mov
adc
(bad)
outs
or
repnz
inc
sub
inc
xor
cmps
out
loope
imul
and
in
mov
in
push
push
dec
and
push
dec
add
icebp
mov
jno
sbb
je
jo
in
sub
and
imul
enter
movs
add
fstp
push
mov
or
pop
push
or
xor
or
test
jp
sbb
(bad)
push
imul
xchg
mov
(bad)
sahf
adc
sbb
push
or
cli
dec
xchg
int3
int
or
xchg
loop
push
out
arpl
xchg
clc
and
push
push
inc
push
repnz
add
push
fmul
or
leave
sbb
push
push
push
xor
mov
aad
push
dec
aas
dec
mov
mov
pop
push
fadd
ds
movs
es
(bad)
xchg
ret
xor
inc
scas
or
dec
mov
push
cmp
gs
mov
cmp
out
call
in
ror
push
lea
cmp
out
push
sbb
jo
int
std
pop
inc
jns
test
push
add
add
xor
push
mov
rcl
sbb
adc
and
cdq
fcmovbe
or
inc
ins
or
adc
push
out
xor
and
(bad)
es
stos
and
(bad)
xchg
mov
cmp
dec
pusha
inc
cmps
xor
loopne
cs
(bad)
xchg
sbb
sub
xchg
or
into
xchg
sbb
xchg
movs
mov
mov
ret
ss
les
in
jp
in
add
pop
xor
lods
pop
jns
loop
dec
pop
enter
popa
test
test
cmps
or
fcom
mov
xchg
jno
jge
sbb
movs
test
mov
or
and
shr
cmps
es
movs
push
cdq
clc
popa
xor
dec
sbb
sub
xor
pop
sahf
test
in
jo
test
out
add
cmp
xchg
lock
imul
cmp
adc
loopne
inc
into
jbe
push
push
and
enter
inc
mov
ins
jb
dec
or
dec
fcomp
xor
dec
pop
xor
out
adc
popa
pushf
mov
lea
xchg
push
mov
sahf
out
pop
gs
jne
out
sahf
out
and
cdq
adc
mov
and
aaa
fs
pop
push
lock
pop
add
ins
loop
scas
es
dec
add
push
mov
fwait
mov
repnz
pusha
popa
xchg
das
and
pop
push
shl
cs
out
or
jno
in
test
(bad)
sbb
dec
jmp
idiv
out
push
cmp
nop
pop
out
push
and
and
call
push
lock
sub
scas
push
xor
ret
pop
(bad)
mov
push
pop
xchg
and
arpl
mov
push
or
adc
mov
not
and
unpcklps
add
not
adc
pop
arpl
ss
clc
jge
scas
std
dec
mov
out
out
mov
or
fwait
xor
inc
outs
mov
add
jne
pop
lea
sbb
sti
inc
or
test
and
xor
pusha
adc
aaa
push
cmc
aaa
push
add
out
and
bound
adc
adc
inc
addr16
sbb
ja
sbb
xor
jae
mov
jecxz
add
hlt
sahf
adc
lds
pop
inc
aas
jo
stos
sbb
or
or
mov
jnp
xlat
pop
hlt
mov
imul
inc
push
(bad)
jo
xor
and
adc
sbb
add
and
adc
inc
fcomp
in
or
or
cmps
dec
rol
mov
shl
xor
inc
pop
cmp
das
add
adc
dec
popa
or
arpl
push
ret
lock
pusha
xchg
sub
push
idiv
aaa
sar
dec
inc
sub
sub
and
sub
push
test
sbb
cmp
sub
sub
and
xor
adc
sub
(bad)
rcr
inc
mov
ret
popa
dec
cs
xor
or
jmp
lea
in
cmps
push
pop
bound
popa
jmp
add
lock
(bad)
stos
nop
xchg
push
(bad)
(bad)
outs
call
add
dec
and
arpl
in
cmp
mov
mov
mov
jne
and
jmp
sub
sbb
ins
out
jbe
xor
call
daa
dec
jne
mov
inc
js
jle
test
scas
arpl
repz
scas
adc
xor
xor
mov
das
cmp
push
ret
jns
out
add
retf
dec
stos
push
inc
or
xor
and
sbb
add
fs
xor
gs
add
and
mov
add
and
or
push
or
fmul
and
cwde
test
or
in
daa
dec
or
inc
movs
dec
cmp
pop
call
push
out
inc
ja
cmps
xor
push
imul
or
cdq
jge
and
inc
repnz
and
inc
pop
cld
sti
dec
outs
test
out
aam
in
push
retf
xor
sub
sbb
inc
jecxz
or
lock
repz
xor
jp
sub
fwait
xchg
dec
inc
dec
push
push
iret
or
ins
in
div
or
and
xor
aaa
xor
cs
jle
jne
stos
xor
push
mov
ins
aas
inc
pusha
jp
(bad)
add
sub
cmp
push
sahf
push
ins
adc
adc
inc
pop
lods
fcomp
inc
adc
fst
adc
or
or
mov
sub
mov
or
dec
leave
add
add
aaa
call
xchg
cmp
jg
ds
ss
sahf
xchg
dec
sbb
inc
add
xor
lock
js
jl
add
stos
sbb
adc
imul
adc
repz
jno
sbb
jo
cmp
add
hlt
or
push
mov
mov
sub
or
stos
sbb
dec
or
nop
sbb
adc
mov
pop
imul
daa
pop
sub
or
push
jo
repz
daa
inc
imul
nop
(bad)
nop
out
mov
sub
cmp
or
ficomp
test
xor
sub
or
in
cmp
rcl
out
test
push
cmp
fsub
inc
mov
cmps
and
push
inc
sbb
mov
inc
dec
loop
push
out
xlat
fistp
(bad)
out
push
push
mov
mov
inc
dec
scas
jl
(bad)
mov
fnstenv
je
pop
mov
xchg
pusha
mov
xor
sbb
mov
jns
ror
pop
push
lods
jnp
sar
lods
cmp
rcr
inc
movs
dec
ss
daa
pushf
pop
fs
js
ins
push
xchg
push
jg
jb
iret
pop
inc
enter
dec
clc
into
cld
retf
test
sbb
std
fcomi
or
xor
push
add
push
nop
jbe
xor
adc
or
imul
pop
sub
sub
sbb
ins
mov
pop
or
js
test
or
inc
and
xlat
loopne
dec
adc
add
or
mov
mov
and
ret
aaa
sub
adc
in
jge
pop
mov
imul
js
push
and
outs
fs
push
inc
popf
jl
out
outs
mov
push
(bad)
stos
push
in
push
or
les
lahf
pop
sub
cwde
push
rcl
ret
add
xor
add
sahf
aaa
lods
ds
mov
daa
repz
rol
mov
xor
cmp
js
xchg
or
repz
push
sub
dec
pop
ins
jecxz
iret
repz
pushf
lods
mov
js
sbb
mov
pop
jnp
fmul
xchg
int3
in
cwde
xchg
xor
in
jg
inc
xor
shl
adc
jo
cmp
or
iret
ror
xchg
push
in
sub
add
push
dec
lods
or
sub
push
scas
push
or
pop
push
pop
xor
xchg
dec
mov
and
les
les
popa
mov
sub
adc
nop
sub
push
and
iret
fcomp
mov
mov
imul
and
cmp
je
jecxz
adc
jecxz
ret
mov
xchg
jne
stos
loope
sbb
psubw
out
fst
mov
inc
pusha
sbb
xor
out
pop
in
and
test
push
cs
mov
mov
push
push
xor
and
aas
xchg
add
push
lahf
je
and
daa
test
dec
imul
cmps
out
cmc
xor
imul
ret
pop
sub
or
dec
adc
xor
dec
push
test
mov
ins
loop
out
cmp
sbb
inc
adc
ins
jnp
and
adc
ror
mov
nop
pop
ds
push
arpl
iret
ret
test
push
rcr
push
int3
adc
adc
test
aam
sub
and
dec
gs
sub
dec
or
out
cmp
xchg
jo
sub
aam
xor
or
or
sub
jb
pop
lods
mov
clc
xor
push
imul
sbb
out
stos
dec
adc
mov
loope
adc
add
adc
(bad)
dec
daa
ret
(bad)
dec
clc
sbb
in
(bad)
inc
std
sahf
mov
hlt
mov
sub
sub
lea
adc
xlat
push
push
in
rol
mov
sbb
out
jge
or
add
mov
lock
test
and
add
mov
test
loopne
or
call
cmp
jp
pop
add
unpcklps
inc
je
es
inc
xchg
mov
les
mov
pop
push
xchg
addr16
(bad)
xchg
lock
mov
clc
iret
addr16
ror
push
push
sub
or
sbb
ret
aas
test
add
call
jb
inc
sub
inc
fs
push
adc
adc
add
cmp
pop
rol
mov
xor
ror
mov
ret
lea
push
jb
aad
adc
adc
sbb
and
js
add
cmp
push
add
cmp
or
push
push
out
je
jmp
(bad)
outs
retf
and
push
shr
sub
movs
jne
stc
xchg
sbb
add
addr16
add
mov
mov
or
adc
or
inc
push
mov
xchg
dec
mov
xor
cmps
push
inc
push
push
test
cmovb
lock
xor
sub
push
jecxz
dec
fs
call
add
rol
dec
pop
push
pop
jl
imul
sub
popa
sub
cmp
add
xchg
jg
outs
and
xor
mov
dec
push
pop
adc
sahf
lods
mov
in
adc
sbb
inc
ins
cmp
mov
and
add
xor
adc
mov
xchg
outs
in
out
mov
pop
xchg
sub
pop
jp
xor
inc
mov
jo
add
test
retf
mov
bound
ror
enter
nop
fcomip
js
rol
fsub
or
mov
lahf
(bad)
lds
push
cmp
xchg
pop
jae
jmp
mov
neg
je
pusha
mov
pop
mov
cmps
aam
pxor
add
adc
and
add
arpl
outs
mov
inc
and
add
jecxz
inc
xchg
add
or
push
cli
adc
leave
mov
push
pop
mov
sbb
outs
dec
leave
adc
je
adc
add
and
or
in
add
push
pusha
or
sub
mov
bound
pusha
dec
dec
dec
jo
popf
dec
or
mov
push
aas
iret
sbb
xchg
jcxz
fisubr
push
and
xlat
push
pop
jecxz
popa
aaa
loopne
mov
adc
lock
aad
fwait
xor
jge
pusha
sbb
mov
test
mov
pop
add
imul
sub
push
xchg
sbb
mov
rcr
bound
add
movzx
popa
movs
mov
outs
ss
gs
jmp
mov
ret
or
test
xchg
or
inc
sbb
pop
xor
aaa
stos
pop
inc
add
or
push
mov
out
ds
inc
pop
xchg
pop
adc
inc
mov
push
pop
push
(bad)
fst
jg
and
(bad)
div
add
push
test
mov
in
cmp
push
mov
adc
inc
ds
jae
sub
(bad)
fisttp
or
add
lea
pop
in
pusha
(bad)
mov
add
add
add
mov
fs
ror
gs
cmp
mov
xor
inc
or
lea
and
cmp
add
cmps
fisub
lea
movs
push
mov
push
add
loopne
inc
adc
push
and
pusha
push
xor
push
test
push
jg
rcr
adc
push
cmp
sbb
and
xor
shl
pop
or
mov
call
add
loopne
test
inc
push
inc
fld
or
push
jg
push
xor
into
pop
pop
and
repnz
jb
xor
dec
mov
imul
sbb
popa
pop
enter
shr
in
cmp
lock
in
jo
cmps
ins
bound
jecxz
cs
arpl
ds
sub
sbb
mov
lahf
push
ficomp
into
mov
cs
jg
sub
ret
xor
ja
fistp
dec
int
dec
inc
imul
fs
popa
js
mov
push
cmp
pop
push
icebp
fsubrp
adc
sbb
sub
pushf
clc
mov
or
enter
and
pop
ss
mov
dec
pop
dec
mov
mov
and
or
and
dec
ja
ret
neg
jg
add
in
inc
push
and
cmp
and
loope
push
xor
add
xchg
pop
xor
mov
mov
shl
stos
(bad)
push
or
inc
jp
dec
nop
cdq
nop
dec
or
mov
fisttp
xor
mov
pop
add
(bad)
fisttp
or
mov
mov
fmul
dec
(bad)
or
inc
and
sbb
rcl
mov
mov
push
pop
cmp
or
aas
pop
enter
xchg
sbb
movs
sbb
out
mov
das
mov
popa
sbb
inc
pop
cmps
ins
addr16
ret
push
sub
dec
pop
sub
pop
pop
ret
mov
or
mov
xchg
xchg
inc
pusha
jne
adc
and
dec
outs
ins
or
mov
xchg
inc
mul
xchg
mov
outs
jne
sbb
outs
jb
int
retf
push
adc
cmp
xlat
cmp
sahf
push
or
xlat
fstp
push
add
mov
or
add
addr16
adc
ret
dec
adc
rcr
jns
and
push
sub
push
push
arpl
js
add
lea
mov
dec
pusha
sbb
mov
aad
test
movs
and
mov
mov
test
and
out
in
cmp
fs
mov
ret
ins
(bad)
push
lods
clc
jns
adc
pusha
adc
sbb
inc
mov
xor
mov
push
adc
add
and
adc
ds
add
pushf
add
not
(bad)
sar
jae
inc
mov
push
fiadd
or
push
or
fist
push
iret
aam
or
in
sbb
dec
arpl
sub
jl
sbb
cmp
xchg
or
inc
pop
mov
sbb
xor
push
and
and
cmp
out
mov
neg
or
pop
or
retf
dec
fdiv
pusha
rep
push
popa
into
xor
jo
shr
test
pushf
ss
cmp
daa
iret
xor
xor
push
ret
(bad)
int3
test
push
ret
cmp
jmp
push
loop
inc
adc
push
out
test
aaa
add
cmp
adc
pop
add
add
jmp
add
add
je
mov
adc
push
sbb
inc
adc
and
push
mov
mov
mov
jle
sbb
adc
mov
lock
retf
cmp
and
sub
scas
div
sar
rcr
shl
in
int
int3
ror
test
leave
jmp
sar
hlt
sub
push
jl
loop
inc
dec
add
cmp
les
fwait
iret
fcom
sub
enter
pop
mov
lahf
data16
mov
or
fisttp
fbstp
sub
mov
sub
fstp
cmp
or
jnp
cmp
mov
push
sahf
data16
pushf
push
push
stc
pop
test
int3
mov
stc
push
pusha
into
push
shl
mov
dec
fdivr
cli
jbe
data16
push
fnstsw
rcr
es
mov
(bad)
shr
mov
jle
and
sub
dec
in
ror
xor
adc
cdq
pop
lock
push
xlat
outs
pop
sbb
ror
and
arpl
std
push
daa
dec
inc
mov
pop
test
mov
dec
add
leave
mov
dec
bswap
loopne
pushf
test
or
dec
pop
or
inc
ins
push
pushf
dec
loope
pusha
or
or
mov
int3
ss
out
dec
adc
mov
or
adc
or
dec
std
popa
imul
push
jb
rcl
dec
ds
push
fadd
pop
and
xchg
cmp
bound
mov
push
test
nop
pop
sbb
push
mov
push
movs
data16
push
int
xchg
or
sbb
xchg
in
cdq
pop
enter
xor
fmul
xor
fnstsw
sbb
repnz
mov
shl
dec
push
dec
mov
push
jo
add
sar
inc
jne
in
pop
and
pop
je
jge
add
or
inc
inc
inc
sbb
repnz
mov
xchg
xor
adc
xchg
push
and
adc
nop
and
xchg
mov
lods
dec
sbb
ss
dec
enter
sub
adc
sub
sbb
stos
das
int3
cld
loopne
add
push
xchg
push
jno
or
jno
push
jno
adc
movs
adc
lock
xor
sub
into
pop
shl
jmp
dec
test
and
test
sub
mov
lea
mov
inc
test
pop
jmp
or
les
sub
es
loop
xchg
sbb
pop
dec
xor
imul
sub
mov
loop
in
das
push
ret
sub
es
xor
mov
call
xlat
dec
adc
data16
mov
add
fs
dec
enter
nop
in
dec
ins
out
scas
xor
xor
cmp
sbb
fisubr
jns
xchg
(bad)
sti
icebp
push
fstp
push
aas
int
and
jo
pop
int
mov
jp
push
sbb
jns
and
test
jns
or
add
shl
mov
xchg
jmp
jnp
rcr
fist
mov
cmp
push
mov
aas
jbe
movs
pop
adc
jle
out
rcl
repnz
dec
pop
pop
mov
add
dec
adc
mov
movs
fistp
mov
push
lock
adc
pop
dec
sbb
lods
xor
ins
pusha
bound
faddp
mov
test
fcom
aas
pop
adc
inc
cmps
(bad)
inc
sahf
cwde
cwde
stos
inc
adc
jbe
ins
or
and
xchg
mov
lahf
adc
push
mov
xor
add
repnz
sar
rol
ss
push
or
inc
inc
pop
(bad)
test
push
mov
mov
out
inc
inc
popa
cmc
leave
add
add
push
dec
loope
pusha
or
sbb
dec
pusha
push
inc
arpl
sbb
mov
cmp
add
and
loope
out
jecxz
inc
and
mov
in
inc
inc
push
mov
dec
jmp
dec
pop
pop
dec
rol
pusha
or
sbb
dec
mov
and
cmovae
bound
inc
dec
ss
push
and
xor
push
push
adc
lea
int3
jle
and
rcr
push
ror
or
loope
(bad)
dec
push
push
adc
jo
or
ja
sub
retf
pop
ins
aad
loopne
jae
sbb
and
fistp
and
jbe
pop
sahf
outs
mov
enter
loope
pop
mov
lea
adc
inc
das
loopne
pop
and
jo
popf
sbb
aas
inc
aaa
sub
dec
aaa
rol
inc
repnz
dec
or
test
inc
call
mov
push
jmp
call
sbb
lock
out
and
nop
dec
jnp
mov
ss
(bad)
popa
or
sub
ror
enter
mov
or
nop
mov
add
inc
jg
push
push
pop
lods
int3
pop
cmps
adc
not
pusha
pop
scas
push
mov
mov
daa
dec
add
inc
dec
pshufw
adc
ficom
mov
mov
dec
cmp
sbb
and
pop
jmp
pop
pop
and
cmp
sbb
mov
dec
adc
cmp
push
shl
pop
xchg
data16
inc
dec
push
inc
cdq
add
lahf
mov
dec
and
aas
nop
addr16
ss
ret
shl
retf
andps
mov
mov
mov
push
mov
push
push
imul
nop
mov
cmp
or
popa
jge
std
adc
push
inc
aas
or
or
rol
sbb
data16
add
js
xchg
pop
jbe
and
dec
xor
stc
add
cld
mov
cmp
adc
popa
outs
rol
les
inc
xor
mov
sbb
pop
mov
or
aas
shl
inc
pop
lds
sub
mov
mov
xor
lock
xchg
push
add
sbb
push
mov
add
xchg
mov
loopne
sub
or
iret
and
xchg
xor
ficomp
xor
adc
in
pop
mov
push
and
mov
mov
and
jne
pop
xchg
(bad)
outs
repz
jae
mov
mov
sbb
shr
retf
pop
sbb
mov
pusha
or
stos
jo
or
dec
xlat
pop
fiadd
repnz
lods
shl
and
or
sub
inc
push
pop
arpl
out
in
pusha
jecxz
icebp
xor
fs
add
inc
or
add
and
push
add
fwait
sbb
rol
fsub
shl
xor
adc
sbb
mov
xor
stos
push
call
xor
xchg
or
add
into
or
adc
cmp
(bad)
setle
add
ret
outs
add
inc
mov
movs
xor
push
or
fdivrp
not
cmp
test
add
sub
add
adc
and
xor
adc
pop
ret
mov
adc
sti
push
push
sub
pusha
pop
sti
add
pop
sar
and
pop
sub
icebp
mov
mov
sbb
imul
gs
adc
xchg
retf
enter
add
pop
inc
and
add
adc
dec
xlat
and
leave
add
xor
push
inc
pop
pop
sub
and
xor
xor
hlt
inc
push
dec
adc
and
jo
pop
xchg
add
mov
sub
or
fbstp
xor
loopne
pop
xlat
out
adc
pusha
xor
mov
or
pop
dec
xchg
pop
dec
cmp
das
jg
imul
mov
or
mov
daa
in
xor
mov
sub
jo
and
jb
xchg
and
add
push
ss
test
mov
cmp
mov
mov
jl
mov
dec
and
adc
adc
sub
mov
inc
add
inc
xchg
or
gs
add
pop
dec
push
lods
mov
popf
mov
sbb
mov
pop
scas
adc
pop
xchg
adc
mov
mov
pop
or
xchg
cmps
mov
or
push
nop
adc
sub
push
cs
push
lods
movs
pop
das
add
shr
push
adc
jne
cmp
ret
cli
je
mov
inc
popa
mov
ror
mov
add
or
cld
loope
adc
stos
xchg
ret
mov
stc
add
in
or
pusha
add
sti
add
inc
dec
repnz
adc
jb
dec
das
mov
pop
pop
mov
dec
add
jp
adc
je
and
sbb
fcomi
aaa
ins
dec
pop
jno
cmp
xor
mov
push
or
push
in
adc
adc
xchg
sti
add
ret
xchg
push
mov
icebp
sbb
shr
xchg
fwait
pop
dec
and
shl
mov
adc
pop
and
push
lock
bound
jne
xor
movs
xchg
test
fwait
inc
cmp
in
clc
xchg
scas
cdq
clc
xchg
adc
dec
sar
(bad)
std
fdiv
or
jne
adc
push
mov
je
add
(bad)
fwait
sbb
push
inc
mov
in
ret
mov
mov
add
hlt
add
jmp
imul
pop
inc
and
outs
pop
jmp
lds
mov
push
test
mov
and
pop
fsubr
mov
gs
mov
cmp
out
neg
mov
pushf
shr
out
rcr
popa
popa
xor
loopne
jnp
loopne
mov
xor
jl
popa
add
push
aaa
mov
or
cmps
stos
mov
aas
es
loopne
mov
push
sti
inc
inc
mov
or
rol
(bad)
stos
sbb
or
jmp
in
popf
fstp
xchg
mov
and
cmp
or
sbb
mov
dec
jnp
ins
dec
and
cmp
adc
paddusw
ds
mov
mov
push
lock
cwde
xchg
or
adc
and
dec
(bad)
loopne
unpckhps
xor
xor
and
pop
mov
sub
lds
fs
dec
repnz
aaa
and
mov
xor
cmps
add
dec
je
jb
xor
adc
int
movs
ss
xor
xor
addr16
enter
push
jp
bound
add
push
rcl
push
and
pop
scas
dec
sahf
out
fiadd
aaa
push
push
outs
nop
mov
sub
es
lds
sar
aaa
add
add
add
adc
cmp
pushf
jle
push
sub
cwde
pop
dec
in
xchg
add
mul
and
je
cdq
sbb
es
sub
inc
adc
add
and
loopne
pusha
fsubr
add
sbb
pop
ins
pushf
and
(bad)
and
mov
sub
xor
sub
push
sub
ss
xor
add
pop
push
aam
scas
nop
cmp
outs
or
jge
mov
arpl
ja
je
es
test
out
mov
ret
adc
cmp
call
jns
ret
or
or
jge
ins
ins
jne
scas
mov
adc
jo
xchg
cmovbe
int
xor
sub
mov
xchg
sbb
or
es
lock
inc
dec
mov
lods
je
jb
adc
aam
inc
push
push
pusha
pop
test
xchg
daa
xor
leave
adc
jo
in
cmp
jmp
dec
sbb
xor
les
rcl
outs
pop
adc
rcl
inc
inc
loopne
xchg
adc
adc
mov
pop
stos
push
lahf
dec
sub
add
sbb
jle
jo
add
(bad)
adc
xor
and
test
retf
cdq
or
xchg
lahf
and
xor
or
and
nop
mov
xchg
push
inc
mov
xchg
sti
jae
sbb
cmp
stc
les
stos
lea
stos
adc
in
cld
cmp
or
adc
adc
mov
xchg
adc
pop
in
push
out
fiadd
adc
or
jge
dec
xchg
and
cwde
push
ret
fsub
test
xor
sub
mov
push
xlat
cmovbe
lahf
push
test
inc
je
fst
imul
lods
leave
push
xor
dec
outs
hlt
mov
push
(bad)
mov
xchg
mov
add
adc
push
xor
adc
adc
pusha
lods
outs
imul
or
jp
lea
popa
lea
pop
xchg
mov
and
cmp
imul
add
dec
popf
mov
cmp
dec
jg
test
mov
inc
shl
xor
adc
cmps
add
xchg
repnz
inc
xor
in
cmp
sbb
pop
out
inc
lock
xchg
sub
jbe
sub
outs
adc
scas
lock
je
pusha
push
xor
lea
xor
imul
lahf
loopne
mov
das
hlt
sub
loopne
inc
inc
add
adc
jne
mov
inc
and
or
adc
mul
not
aad
outs
jbe
ins
fild
(bad)
xlat
icebp
push
push
aas
or
and
xchg
push
test
jg
and
jno
adc
sbb
cmp
cmp
mov
jmp
in
aam
pop
or
pop
add
lods
nop
or
xchg
or
pop
scas
push
sbb
mov
add
mov
test
sbb
aad
pushf
jo
add
adc
fdiv
nop
pop
sub
div
pop
and
pop
dec
outs
or
cmp
dec
push
xor
dec
or
adc
ja
ds
push
and
stos
adc
enter
add
pusha
pop
push
pop
mov
inc
fcomp
pop
or
add
movs
and
mov
pop
aas
adc
pusha
add
fwait
push
inc
rol
adc
test
aam
fmul
xchg
sub
loopne
push
sbb
cmp
sbb
and
rcl
pop
push
fbld
aaa
xchg
and
loopne
cmp
jge
and
clc
scas
xchg
lock
adc
xchg
mov
jbe
(bad)
shr
sbb
icebp
fcom
out
data16
mov
dec
call
xor
push
call
sbb
and
or
in
cmps
cwde
bound
dec
or
adc
xchg
imul
pop
xor
sbb
ss
jge
add
sub
sbb
or
and
gs
in
mov
add
in
inc
sub
fcmovnb
dec
jbe
lods
add
pop
and
jns
sbb
sahf
push
jo
ret
push
sub
or
mov
sub
or
inc
and
neg
push
dec
popa
push
mov
xchg
rol
mov
out
popf
push
push
and
jmp
adc
repz
and
outs
mov
or
dec
push
imul
pop
xlat
add
je
test
jne
(bad)
or
and
sub
mov
xchg
pop
add
enter
mov
sub
rcr
pop
or
aas
mov
shl
fiadd
push
cld
cmp
or
ret
rcr
fdiv
test
ins
sbb
mov
pop
mov
adc
mov
in
lds
dec
inc
or
mov
mov
movs
xor
add
retf
test
add
mov
nop
(bad)
push
and
hlt
ret
jb
rol
adc
dec
dec
xchg
out
and
ffree
and
xlat
hlt
xor
pusha
loopne
adc
adc
fiadd
sbb
xor
mov
sub
add
and
dec
sub
add
push
fistp
retf
sahf
or
les
pop
outs
repz
and
lock
push
mov
or
shl
push
movs
or
sbb
stos
fmul
and
inc
xor
inc
pop
jl
adc
sub
scas
add
mov
xor
xchg
retf
add
popa
lahf
add
or
arpl
mov
in
push
int
inc
and
ror
adc
or
(bad)
mov
call
test
and
add
sbb
xchg
stos
and
or
mov
lea
dec
sbb
fst
push
sahf
fs
(bad)
and
jno
das
jne
add
add
call
aas
jle
stos
inc
xchg
xor
mov
jnp
arpl
call
pop
pop
pop
jl
and
push
repnz
dec
and
adc
es
dec
test
add
ret
and
lods
dec
loop
push
jno
add
pop
mov
xchg
sub
neg
inc
lea
in
(bad)
pop
sbb
mov
test
mov
add
clc
mov
inc
in
int
pop
cdq
inc
or
mov
gs
or
mov
or
dec
inc
or
push
jo
mov
pop
adc
ror
in
adc
dec
das
les
mov
pop
push
xchg
imul
lock
jp
dec
movs
arpl
retf
ret
sbb
xchg
mov
jg
pusha
xchg
dec
cmc
pushf
sbb
fwait
shl
jmp
or
inc
jo
inc
adc
fsubrp
dec
pop
in
mov
mov
pop
pushf
add
xchg
pop
pusha
fs
cmp
jns
imul
std
mov
pop
mov
retf
mov
js
cmp
or
or
adc
sbb
jo
addr16
cmp
leave
clc
adc
arpl
mov
adc
je
daa
push
scas
jno
mov
push
mov
xor
and
aaa
sub
or
lea
jnp
mov
inc
or
xchg
mov
mov
push
add
mov
neg
arpl
sub
sbb
nop
or
mov
dec
cli
add
dec
(bad)
dec
das
dec
ins
in
mov
imul
cwde
in
ins
ins
les
mov
retf
dec
dec
test
jbe
and
and
sub
sbb
loopne
fld
mov
mov
jge
dec
push
mov
mov
dec
mov
cmp
out
or
and
add
pop
nop
shl
lahf
pop
js
(bad)
(bad)
sub
add
adc
and
inc
adc
dec
or
dec
pushf
sub
mov
shl
stc
push
sbb
fild
adc
jl
add
fs
push
sbb
aam
jno
mov
xchg
add
or
mov
inc
fwait
in
push
sbb
inc
and
cs
jl
pop
ret
leave
cmps
or
stos
dec
(bad)
cmp
inc
addr16
ret
mov
jmp
xor
imul
inc
mov
cmps
add
sar
sub
call
adc
xchg
xor
pop
sbb
movs
test
inc
sbb
test
or
(bad)
out
jmp
int3
(bad)
or
xchg
jmp
xchg
mov
dec
mov
and
mov
nop
retf
mov
rcl
enter
sbb
ret
inc
sub
add
jg
sub
push
and
sub
or
mov
dec
sub
(bad)
add
add
push
and
xor
adc
mov
pop
enter
pop
pmaxsw
inc
mov
inc
stos
fidivr
push
add
fdivr
fcomp
lods
pop
cmps
call
or
pop
adc
out
add
sub
sbb
(bad)
out
push
rol
and
cs
inc
les
xor
push
lahf
sub
ret
dec
fwait
hlt
jne
inc
clc
rol
and
enter
xchg
pop
pop
pusha
adc
popa
enter
ja
adc
xchg
ss
mov
ror
mov
mov
mov
xchg
xchg
jo
lahf
in
test
lea
call
cmp
push
inc
push
adc
inc
ret
div
dec
push
aad
jmp
cmp
pop
xor
mov
loop
shl
mov
push
and
ja
pop
dec
jno
clc
mov
nop
or
call
loope
mov
dec
push
ins
xchg
cmp
pop
or
je
cdq
mov
pop
push
aaa
add
fisttp
add
dec
fld
adc
loope
es
jl
lahf
sbb
cmp
adc
sar
mov
ret
pusha
sub
and
test
js
inc
test
pop
outs
pop
push
ror
add
cmp
push
mov
xchg
pop
add
dec
pushf
bound
cli
add
inc
xchg
lds
or
pop
pop
mov
pop
xor
sar
imul
fs
pop
pop
sbb
shl
(bad)
adc
fadd
cmp
arpl
add
fst
js
inc
mov
into
sbb
sbb
mov
mov
sub
jle
cmp
sub
mov
pop
pop
adc
mov
aas
adc
iret
loopne
dec
sbb
xlat
int3
movs
arpl
xor
jmp
or
clc
rcr
repz
or
sub
mov
pop
fs
add
cmp
pop
aad
or
jne
sbb
push
adc
jmp
sti
or
and
cmps
or
mov
xor
ins
and
sub
xor
repnz
(bad)
cwde
dec
test
je
mov
inc
mov
loop
shr
paddq
mov
inc
xchg
pop
aam
jo
adc
outs
add
mov
pop
xlat
dec
xor
pop
adc
inc
ret
imul
dec
pop
xor
(bad)
loope
and
cmp
sbb
enter
in
loope
sbb
cmp
adc
and
push
js
inc
sbb
inc
jne
mov
and
xor
or
push
call
movs
mov
in
mov
(bad)
or
adc
and
pusha
adc
add
and
and
sbb
popf
pusha
pop
jg
cmp
(bad)
in
jb
(bad)
int3
pop
(bad)
or
das
(bad)
mov
add
mov
pop
pop
je
sbb
scas
add
pop
adc
call
push
mov
retf
sbb
xor
and
pop
ds
mov
scas
push
dec
movs
sub
push
fsubr
jmp
mov
jno
loope
mov
inc
cwde
or
dec
std
retf
test
xor
add
mov
jmp
gs
pop
(bad)
push
lock
xor
and
add
add
js
or
inc
or
mov
js
neg
in
aas
push
cmp
xchg
sbb
jbe
add
sti
lods
add
(bad)
pop
mov
cmps
mov
outs
push
cmp
push
pop
inc
imul
lds
outs
in
(bad)
fsubr
adc
dec
movntps
sub
add
and
fld
or
mov
xchg
test
xor
mov
(bad)
mov
and
dec
mov
imul
mov
xor
add
jbe
add
inc
fadd
pop
mov
ds
inc
daa
jo
dec
jnp
jmp
xchg
or
sub
lods
or
cmp
inc
add
pop
inc
add
add
jmp
sub
imul
xchg
arpl
mov
loope
push
xchg
mov
or
pop
in
mov
bound
lea
push
je
out
les
pop
je
mov
xchg
inc
arpl
out
(bad)
push
mov
push
fisub
sbb
adc
shl
push
ins
shr
sbb
popa
popf
shr
sub
dec
push
mov
shl
hlt
scas
sub
test
or
mov
clc
xchg
stos
sbb
inc
inc
push
dec
call
or
xor
outs
mov
retf
push
inc
movs
and
retf
retf
sub
xlat
or
jl
jno
or
push
xchg
xlat
sbb
enter
ins
sahf
inc
or
pop
pop
and
out
pop
or
retf
ss
mov
stos
or
in
push
jmp
int3
adc
xor
mov
lea
std
cmp
add
fadd
xor
les
add
pop
std
xchg
sub
pop
jl
imul
cmp
pop
pop
div
or
push
mov
add
mov
cmp
and
sbb
jmp
add
cmp
inc
mov
or
pop
and
adc
jmp
rcr
and
mov
and
dec
test
or
mov
mov
jge
inc
inc
inc
pop
add
mov
popa
sub
sbb
mov
daa
inc
call
push
cmp
adc
push
push
mov
rol
add
das
fcom
nop
sahf
adc
mov
retf
ja
cmp
jge
and
xor
fisubr
xor
xchg
pushf
pop
popf
mov
adc
cmps
push
mov
xor
cmps
jo
inc
imul
lods
xchg
cvttps2pi
adc
adc
xchg
xor
and
sbb
xor
adc
aaa
mov
or
cmp
add
and
test
xchg
test
pop
andnps
lea
sbb
or
enter
pusha
inc
shl
sbb
fisttp
aad
icebp
push
push
cmp
xchg
arpl
pop
and
xlat
icebp
lods
sub
inc
in
mov
sbb
inc
and
jmp
mov
sub
bound
test
cmp
mov
mov
jecxz
jg
or
inc
sbb
frstor
in
loopne
leave
sbb
mov
(bad)
fisttp
sub
jl
jo
mov
xor
mov
push
ins
sbb
dec
xor
sub
or
jno
pusha
mov
nop
mov
dec
enter
arpl
lods
sub
sbb
aaa
pop
or
pop
mov
rcl
mov
(bad)
aas
inc
outs
stos
xor
(bad)
pop
and
dec
or
dec
dec
and
dec
aaa
mov
ss
xchg
hlt
add
mov
push
fild
stos
add
leave
push
nop
out
lahf
mov
add
and
pop
mov
dec
ret
pop
or
pop
sub
sub
add
sbb
xor
test
jle
push
pop
push
and
add
add
retf
xchg
adc
inc
lods
ds
and
cs
inc
xchg
adc
push
adc
cmp
add
or
sub
movs
pop
sti
jl
movs
or
call
out
bound
movs
int3
fadd
push
popa
add
sbb
pusha
sbb
repz
shl
jns
push
xor
imul
inc
cs
jb
imul
dec
push
pop
pusha
and
(bad)
sub
aaa
push
(bad)
movs
cmp
inc
xor
ret
add
adc
sub
mov
xor
cmp
mov
sub
jge
imul
sub
and
sub
dec
sbb
lds
stos
dec
dec
add
push
mov
sbb
push
push
test
pop
pop
imul
inc
adc
push
push
aam
test
nop
pop
pop
inc
sbb
mov
fcom
nop
sub
or
inc
dec
xchg
sbb
mov
or
add
add
xor
pop
add
cmps
adc
jb
in
hlt
adc
mov
cmps
or
test
pop
pop
ss
xor
push
out
and
in
cmp
stc
push
lods
xor
fidivr
(bad)
push
rcr
cld
mov
push
jnp
cmc
pop
fisttp
rol
inc
ds
jge
mov
enter
adc
jmp
ja
in
jmp
out
pop
pop
inc
or
repnz
push
(bad)
fisttp
adc
outs
pusha
out
in
or
mov
cwde
(bad)
rdtsc
jecxz
repnz
jnp
retf
push
xchg
and
imul
push
fs
xchg
push
lock
or
or
je
and
(bad)
or
push
add
mov
jl
sub
add
push
das
in
lea
cmp
or
or
sub
arpl
aas
(bad)
cmp
or
sub
es
jp
test
xor
or
test
xchg
or
adc
add
or
into
(bad)
lahf
fbld
stos
mov
sbb
push
in
fsubr
test
popa
leave
cdq
fiadd
imul
push
mov
mov
movs
adc
leave
sub
fdivr
cmp
clc
(bad)
ficom
inc
fs
mov
and
inc
and
add
loopne
std
mov
dec
dec
inc
dec
fimul
sub
push
sbb
lock
icebp
and
sub
arpl
cs
inc
loopne
ja
push
out
jne
jl
inc
or
(bad)
inc
test
add
loop
test
fsub
jbe
ins
mov
loope
mov
sbb
sbb
cmp
shl
repnz
loopne
inc
fsub
pop
movs
jne
mov
pop
(bad)
adc
xor
out
cmp
dec
or
mov
scas
or
stos
es
das
popf
adc
ror
pop
jo
enter
push
xor
ja
data16
loope
cdq
add
in
nop
and
aas
push
xchg
rol
or
sbb
cmp
mov
cs
(bad)
repnz
inc
mov
cdq
test
je
leave
es
sbb
jne
arpl
cwde
mov
icebp
jne
sub
cld
sbb
shl
mov
ror
popf
inc
and
pop
repnz
xchg
mov
dec
test
es
mov
setno
or
gs
movs
inc
in
loop
shld
int
sbb
fbstp
out
inc
mov
pop
mov
pop
sbb
jp
xchg
mov
stos
xlat
xor
fs
inc
push
and
jo
dec
cmp
ins
cmp
test
xor
pop
inc
ja
mov
add
xchg
mul
dec
ret
nop
xor
add
fwait
js
imul
js
das
(bad)
fsubr
sub
ret
js
mov
jle
adc
je
das
or
pop
ins
or
mov
stos
lods
jo
mov
mov
repz
add
xor
xor
xchg
add
sub
xlat
aam
dec
cmp
push
jge
mov
stc
pushf
das
and
mov
sbb
out
in
mov
adc
sbb
xor
int3
test
imul
icebp
pop
shl
mov
pop
push
cwde
pop
(bad)
in
pop
movs
jl
test
push
pop
jno
adc
data16
jl
loope
arpl
and
adc
xchg
int3
fcmovb
jno
xchg
dec
and
sub
mov
and
xor
push
inc
(bad)
ror
adc
mov
pop
push
adc
cmp
mov
dec
xchg
clc
pop
mov
pop
lods
sbb
jns
or
jg
mov
inc
push
jne
mov
or
ins
push
inc
lods
jo
in
push
inc
dec
rol
enter
and
adc
outs
sub
adc
push
call
adc
sub
ja
mov
lods
push
retf
imul
pop
pop
sahf
sub
rcl
and
pop
ret
and
add
mov
xor
cmp
add
or
jbe
aam
mov
and
(bad)
add
out
add
fcomp
sbb
xchg
dec
pop
jno
scas
xor
adc
fcom
aaa
shl
xor
inc
js
adc
cld
adc
mov
rol
adc
rcl
pop
pop
xchg
and
xor
mov
in
daa
xchg
push
push
movs
mov
sbb
aad
or
push
mov
in
push
mov
sub
aaa
rcr
cmp
add
adc
sub
or
lods
xor
aaa
shl
and
repz
pop
cmps
and
mov
das
push
adc
outs
cmp
pop
sub
inc
sti
fdivr
jne
loope
sbb
not
(bad)
in
or
lds
xlat
add
inc
add
jecxz
ja
outs
mov
dec
cld
jne
mov
(bad)
and
shl
inc
jmp
cmp
jp
outs
cmp
mov
movs
push
xor
mov
sqrtps
adc
mov
arpl
and
sbb
sub
pop
mov
aas
pop
xor
sub
jecxz
loop
mov
push
bound
pop
popa
mov
mov
add
call
ror
in
mov
ficom
add
in
lock
jns
fsubr
mov
pop
pop
add
pop
lock
and
push
jo
mov
jns
push
pop
sbb
retf
dec
sub
xchg
cmp
xlat
ret
fild
imul
fwait
sbb
dec
mov
mov
dec
(bad)
call
ret
push
mov
cmp
push
es
pop
jp
mov
arpl
xchg
outs
xor
add
sub
mov
loope
movs
jns
out
pop
(bad)
shl
(bad)
or
mov
xchg
hlt
out
and
mov
xor
jns
pop
pop
dec
xor
test
xlat
add
mov
push
pop
pop
pop
loope
push
jmp
jmp
cld
add
add
or
dec
in
ror
jne
add
mov
sbb
sbb
(bad)
ins
mov
lock
hlt
jno
sbb
adc
sub
adc
iret
rcl
pop
fdivr
loope
jp
mov
sbb
dec
push
pop
push
and
or
pop
rcr
dec
mov
call
sbb
cmp
or
neg
xor
add
nop
jo
das
out
(bad)
or
fisttp
call
and
adc
mov
inc
lahf
cmps
add
xor
push
add
or
cmp
es
test
and
jb
inc
test
mov
rcl
mov
adc
fiadd
inc
or
sub
ret
add
aad
push
loop
(bad)
lock
gs
int
inc
ret
outs
inc
gs
pop
xor
adc
jno
push
add
or
rcr
and
movs
rcl
cdq
xchg
rol
or
cmovs
add
fs
and
imul
mov
push
test
sub
int3
add
or
pop
and
sbb
les
lea
ror
outs
mov
add
inc
test
ja
mov
adc
mov
call
leave
mov
mov
sbb
adc
mov
or
push
jecxz
dec
pop
jae
push
pop
jge
arpl
fld
and
sar
mov
fistp
icebp
pop
adc
repz
mov
sub
sbb
dec
leave
cmp
and
sub
adc
sub
mov
or
cmp
ss
xchg
push
and
test
cmp
popa
outs
sbb
movs
xchg
sub
xchg
pop
clc
movs
xchg
daa
shl
push
add
xchg
cmp
add
fisubr
cmc
inc
jecxz
xchg
jle
cmp
sub
pusha
mov
jecxz
xchg
xchg
cli
inc
nop
pop
in
lock
pop
mov
sbb
xor
adc
jmp
mov
clc
xchg
push
xlat
clc
or
push
inc
jl
or
cmp
and
or
or
(bad)
in
mov
cld
and
mov
or
sub
pusha
sar
test
adc
jge
jb
jo
or
arpl
mov
mov
dec
mov
popa
test
das
rol
jae
je
shr
push
lahf
es
push
mov
out
adc
daa
adc
jl
pop
sahf
arpl
call
or
or
inc
stc
mov
daa
or
or
dec
scas
or
jmp
xchg
pop
xchg
or
or
inc
retfw
retf
fadd
ss
pop
adc
adc
ret
adc
add
std
adc
or
ret
enter
pop
or
mov
cld
push
and
cmp
fwait
sub
sub
sti
or
fcom
xor
out
cs
icebp
inc
dec
dec
in
add
mov
sub
sub
loopne
or
int
adc
pop
jb
scas
ja
mov
stos
mov
sub
push
lock
fisttp
mov
imul
add
cmp
out
cli
ins
mov
pop
add
add
shl
pop
aad
mov
scas
daa
mov
rcl
cwde
add
mov
add
push
xchg
fwait
test
mov
and
nop
in
cwde
cmp
push
dec
adc
sub
clc
fadd
cld
pop
cdq
xchg
xchg
in
push
(bad)
movs
cmp
das
or
adc
inc
push
out
stc
dec
mov
repnz
cmp
add
pop
ret
inc
loope
and
cwde
jne
rcr
push
aam
cmp
retf
jne
dec
xor
sub
dec
bound
mov
and
mov
mov
jo
push
or
adc
hlt
sub
push
mov
dec
sub
loope
fst
mov
(bad)
adc
add
push
nop
outs
sbb
imul
sbb
pop
mov
inc
jbe
mov
or
cmp
cdq
cmp
icebp
push
lods
loopne
dec
popf
aaa
inc
adc
into
add
push
xor
add
test
cwde
(bad)
and
(bad)
xchg
popa
test
les
in
pop
and
cs
icebp
loopne
jmp
cmp
adc
mov
push
sbb
sub
lods
xor
push
push
add
in
mov
or
sub
push
and
and
sahf
ins
or
mov
or
lock
dec
or
or
add
sbb
add
xchg
adc
shl
inc
sub
inc
in
jmp
and
aam
rcr
dec
dec
aaa
adc
push
cmp
lods
lods
inc
and
mov
ins
movs
imul
pop
adc
clc
sbb
inc
lea
je
cmp
and
pop
mov
imul
dec
push
ret
dec
dec
jo
cmp
push
mov
repz
inc
scas
xchg
mov
push
mov
test
fmul
fist
and
jmp
movs
inc
push
cmp
add
mov
mov
inc
mov
add
jge
xchg
lea
movs
mov
or
push
push
cmp
pop
jmp
out
adc
jmp
push
add
js
pusha
inc
out
xlat
pusha
test
sub
hlt
add
pop
mov
mov
aad
call
ret
adc
cs
or
xor
lea
and
pop
repnz
mov
pop
test
push
mov
pop
(bad)
adc
and
push
test
int
movs
add
popa
xor
(bad)
inc
add
add
imul
push
add
push
xor
add
mov
ds
xchg
into
dec
loope
gs
push
pop
adc
(bad)
mov
aam
and
inc
pop
pop
in
mov
pop
push
leave
js
sbb
and
lods
sbb
sbb
push
dec
push
imul
movs
cmps
rol
(bad)
jbe
je
ficom
fistp
shl
push
pop
xor
xor
rcl
enter
fwait
arpl
hlt
movs
push
push
adc
arpl
mov
dec
ja
out
mov
mov
daa
ja
sub
(bad)
nop
jl
mov
fisub
pop
pop
adc
pushf
mov
sbb
adc
popa
and
repz
daa
mov
popa
fsubrp
add
and
push
cmp
sub
cmp
or
es
xor
or
mov
js
inc
inc
sbb
pop
dec
cmps
xchg
aad
inc
popa
aas
pop
jle
sbb
dec
sbb
inc
inc
push
push
cmp
enter
xchg
push
push
leave
int
int3
inc
test
test
out
neg
push
sub
push
mov
inc
adc
ins
movs
shl
xor
and
stos
(bad)
pop
or
jl
mov
dec
push
sub
push
ret
js
adc
xor
or
out
inc
pop
je
mov
cmps
cmp
inc
mov
mov
adc
in
cli
push
inc
xor
mov
outs
mov
inc
bound
push
jns
xor
ds
lock
or
xor
stc
rcr
adc
js
imul
daa
inc
inc
push
xchg
push
gs
nop
fild
sbb
or
sar
jne
mov
mov
jg
mov
cld
lods
mov
adc
stos
dec
xor
nop
mov
fs
push
pusha
cmc
inc
mov
mov
adc
mov
into
and
pop
fdivr
cmps
dec
pop
inc
or
or
cmps
xor
xbegin
lods
lea
aas
cmp
shl
daa
add
push
fnstenv
and
cld
addr16
xchg
push
nop
sbb
or
mov
push
out
(bad)
jo
pop
sbb
lods
int3
push
mov
shl
stos
adc
retf
jne
iret
shl
inc
dec
ror
call
pop
dec
jb
gs
out
les
sbb
mov
xchg
add
add
bound
and
pop
sub
retf
les
mov
dec
icebp
inc
push
or
(bad)
and
aas
div
mov
(bad)
sbb
lahf
in
cs
push
xor
aam
mov
mov
or
add
and
inc
add
mov
adc
dec
imul
ja
xor
xchg
jmp
inc
and
iret
sub
shl
xchg
daa
(bad)
fwait
mov
push
add
xchg
or
clc
or
xchg
push
cs
xchg
punpckhwd
test
(bad)
sbb
in
call
and
test
stos
mov
push
ret
sub
push
loope
cmps
inc
or
in
stos
pop
dec
or
fs
sbb
and
bound
aas
or
push
mov
sbb
sub
mov
adc
mov
and
add
xchg
mov
mov
arpl
rcl
leave
pusha
dec
icebp
ss
sub
enter
pop
lods
dec
ret
mov
xor
xor
in
cmp
leave
in
movs
(bad)
jmp
cdq
sbb
xor
push
xor
mov
and
pusha
xor
movs
adc
push
test
in
dec
push
sbb
mov
push
sbb
mov
pop
dec
sbb
cwde
add
mov
sbb
inc
and
pop
ins
add
psrlq
and
mov
add
ins
and
xchg
aaa
loopne
aam
pop
add
cmps
sub
or
and
adc
out
adc
or
pop
call
ret
dec
popf
movs
lock
jl
cmp
mov
and
daa
test
dec
sbb
shr
pop
mov
nop
pop
shl
and
jmp
dec
in
xor
inc
aas
and
pop
hlt
mov
aas
mov
mov
xor
in
cdq
hlt
hlt
xchg
pusha
adc
add
hlt
data16
push
lahf
hlt
dec
sahf
or
lock
inc
lods
xchg
call
dec
test
cmp
int
test
inc
or
dec
das
mov
jle
(bad)
cwde
popa
arpl
add
loop
xchg
push
imul
mul
add
loope
sahf
pop
pop
and
and
call
addr16
push
(bad)
adc
stos
in
lock
add
sub
add
pop
gs
rol
aas
mov
add
jmp
ja
ins
and
in
not
sbb
or
inc
adc
addr16
retf
enter
mov
addr16
jmp
data16
sub
les
add
pop
enter
sbb
ja
es
inc
adc
xchg
mov
and
xchg
and
push
pop
jl
cmp
rol
push
mov
or
add
push
push
cmps
mov
inc
test
cmp
dec
cmp
push
and
adc
adc
nop
add
and
pop
adc
addr16
cmp
mov
test
adc
push
dec
xor
jl
xchg
mov
shl
cmp
nop
pop
pop
pop
(bad)
mov
nop
xchg
(bad)
not
rol
mov
addr16
jb
mov
aas
cs
mov
dec
dec
dec
inc
or
mov
mov
pop
in
sar
jmp
or
inc
inc
movs
cmp
mov
jg
or
and
push
push
push
xor
dec
sub
dec
bound
test
repnz
lds
xor
popf
jo
les
shl
inc
mov
cmp
mov
adc
xchg
xor
jbe
imul
imul
mov
push
sub
aad
adc
test
sbb
adc
fs
rcr
mov
inc
idiv
loop
push
inc
sbb
sub
in
ror
jmp
out
jl
or
jle
xchg
and
lock
add
cmp
imul
jp
pop
scas
or
mov
nop
lea
jge
imul
fmul
adc
adc
stos
es
je
or
pushf
mov
btr
and
inc
jo
mov
cmps
unpcklps
pusha
daa
stos
pusha
popa
jnp
(bad)
fild
or
xchg
call
and
lock
adc
add
stos
dec
cwde
hlt
jb
ret
xchg
adc
cmp
pusha
bound
jns
lar
inc
nop
loope
aaa
movs
dec
dec
mov
jno
xor
sub
sub
js
push
test
dec
sar
test
pop
sbb
test
sub
mov
test
les
fisub
outs
push
adc
xchg
sub
sub
rcl
xor
adc
loopne
(bad)
call
fbstp
cmp
push
push
dec
retf
xor
mov
movs
cvttps2pi
or
dec
or
inc
sub
mov
std
sub
in
(bad)
pop
dec
inc
shl
mov
sbb
sbb
push
sbb
loope
and
and
xor
pop
adc
pop
mov
mov
(bad)
pop
cmp
or
and
add
ins
sbb
add
and
and
push
xchg
sbb
imul
mov
ret
gs
dec
in
xor
clc
mov
cmp
mov
cdq
test
push
nop
dec
adc
xor
popa
cmp
je
xor
xor
inc
loop
dec
xchg
pusha
fcmovnb
xchg
(bad)
pop
ss
aaa
adc
mov
add
mov
xchg
and
xchg
outs
lea
nop
test
jnp
rol
data16
jmp
imul
mov
test
or
test
and
les
mov
mov
and
movlps
pop
push
gs
push
in
xchg
inc
dec
cmp
add
inc
icebp
push
aaa
push
or
cmps
call
fs
xor
gs
in
adc
repnz
pop
es
cdq
pop
sbb
mov
inc
pop
or
movs
sub
(bad)
push
adc
mov
es
mov
sbb
or
loope
push
mov
dec
pop
push
jecxz
xor
push
pop
jecxz
sub
jnp
and
add
sbb
and
shl
sbb
pop
cdq
fmul
inc
outs
retf
pop
inc
retf
adc
stos
or
not
pop
sbb
push
sub
add
push
push
sbb
xor
jmp
pop
inc
sbb
lahf
dec
jmp
and
mov
movs
inc
(bad)
mov
pushf
xor
ins
xchg
retf
inc
inc
push
and
sbb
test
pop
mov
arpl
push
sbb
sub
loope
or
fisttp
or
push
js
add
or
rcl
arpl
sub
cs
and
cmp
mov
ja
mov
arpl
clc
mov
mov
xchg
mov
sbb
jg
jns
cs
jmp
inc
push
call
aas
sbb
push
or
jge
xor
ins
lods
jecxz
add
sbb
dec
or
or
sub
pop
mov
jg
out
jl
hlt
sub
jl
inc
xor
jecxz
retf
or
mov
push
sahf
out
pop
lds
push
data16
mov
out
mov
ss
daa
jge
imul
scas
dec
sbb
xor
pop
pop
push
push
rcl
sub
mov
(bad)
js
xchg
icebp
mov
daa
imul
mov
inc
pop
lea
pop
xor
cs
into
cmp
ret
mov
jne
xor
mov
xor
scas
or
outs
and
out
test
inc
jb
(bad)
lock
mov
lock
jbe
(bad)
rol
(bad)
and
or
dec
dec
mov
dec
pop
sub
loope
pop
hlt
jle
and
cmp
lock
(bad)
and
retf
aas
popa
sbb
pop
pop
sub
data16
adc
adc
aad
xchg
aaa
mov
les
jne
mov
das
push
rcr
rcr
sub
sub
pop
adc
adc
push
adc
adc
pop
dec
or
sbb
(bad)
es
lock
fisub
inc
adc
retf
mov
(bad)
xchg
aaa
push
mov
push
and
pop
adc
adc
fs
add
dec
cmp
int
pop
lods
retf
push
clc
push
inc
sbb
xor
shl
sbb
inc
call
in
xchg
mov
push
ficomp
loopne
adc
and
add
pop
dec
retf
inc
sbb
inc
xchg
fnstenv
inc
mov
rcl
and
pop
jne
popa
push
adc
dec
sar
sub
lea
pop
add
je
add
inc
nop
sbb
push
push
sti
adc
and
xchg
mov
aaa
imul
pop
inc
sub
fcom
and
push
add
mov
cmp
add
addr16
inc
xchg
and
in
test
hlt
jne
sbb
ret
and
inc
mov
mov
sbb
movs
pop
bound
lock
sbb
xor
adc
add
gs
fcom
pop
mov
and
add
iret
sar
dec
sbb
adc
fld
or
cmps
push
mov
cmp
lea
cmp
aaa
stc
jno
daa
add
add
fcom
mov
jmp
inc
dec
test
push
mov
or
je
push
ja
sub
jne
inc
sub
mov
clc
nop
mov
adc
dec
sti
pop
adc
or
fsubr
xchg
xor
xor
fcmovb
adc
push
add
loope
push
jne
mov
push
and
cli
sbb
push
(bad)
mov
pop
dec
in
(bad)
and
mov
sub
add
xchg
rcr
loope
inc
pop
sbb
jmp
xchg
icebp
js
out
add
mov
pop
jae
je
or
popf
add
sub
dec
cmp
fpatan
js
cmp
mov
sub
imul
push
jge
repnz
fld
daa
or
rol
fmul
or
pop
test
inc
xor
sub
mov
popa
pop
mov
(bad)
iret
inc
in
xor
push
movs
xchg
add
test
add
mov
(bad)
xchg
out
pop
add
xchg
test
fs
pop
leave
loope
mov
daa
ins
mov
adc
xchg
sub
or
clc
push
jge
lock
mov
or
xor
mov
call
cmp
dec
call
shl
xchg
repz
add
das
ds
jmp
mov
fadd
mov
sar
inc
clc
lahf
pop
and
pop
call
adc
adc
fsubp
pop
jne
dec
dec
jp
out
dec
add
dec
scas
cmp
xor
sbb
das
jg
mov
xlat
jns
inc
nop
hlt
and
test
and
xor
leave
cmp
adc
xchg
ret
mov
idiv
pop
adc
call
inc
push
ror
mov
fs
fs
int3
xor
or
xor
add
mov
pusha
fwait
sbb
cmps
fstp
add
dec
es
lods
nop
out
xor
or
xor
push
xchg
and
pop
add
aaa
repnz
cld
push
ja
mov
movs
sar
xor
pop
fild
adc
pushf
dec
int3
mov
inc
cs
push
inc
and
or
stos
sub
sub
sar
ja
js
inc
mov
pusha
and
xor
push
cmp
adc
imul
xor
sbb
popf
je
ret
sub
cmp
inc
adc
pop
dec
adc
cmp
add
or
mov
ins
stos
div
pop
das
xchg
std
xchg
mov
sahf
sub
je
push
test
icebp
jbe
cmp
jmp
mov
xchg
cwde
mov
gs
push
(bad)
popf
push
or
xor
mov
fistp
inc
rol
mov
dec
push
repnz
dec
loop
mov
loopne
mov
dec
(bad)
xchg
retf
in
call
jl
xor
js
jmp
push
pushf
out
sub
arpl
inc
sbb
dec
clc
push
pop
clc
dec
imul
push
sbb
lahf
mov
add
fadd
sub
adc
mov
or
outs
ins
push
sbb
sub
sbb
int3
xchg
stc
sub
jge
pop
lods
fdiv
sub
daa
not
cld
inc
scas
nop
xor
test
xchg
mov
lahf
cdq
mov
sub
movs
shl
out
add
xor
mov
and
aaa
rcl
(bad)
fcmovbe
pusha
pop
mov
pusha
mov
or
lods
in
xchg
jp
stc
test
sbb
out
or
sbb
push
fdivr
aaa
sbb
in
push
pop
mov
xor
sub
add
or
int3
in
adc
xor
mov
jg
add
jg
adc
sahf
pop
mov
pop
int
push
aas
inc
cs
push
leave
mov
dec
jnp
dec
pop
call
inc
movs
inc
jmp
jg
repnz
call
or
sub
cmps
mov
sub
inc
add
xchg
add
jl
cmc
cmp
push
cmp
jmp
sub
xchg
mov
shl
adc
and
mov
dec
mov
push
add
mov
adc
pop
mov
push
imul
mov
shl
or
shr
sub
or
jb
sahf
adc
push
cmp
hlt
mov
ds
xor
jp
jge
sar
leave
cmp
mov
sbb
mov
ins
or
bsr
shr
sbb
cli
in
mov
loop
and
xor
xchg
add
inc
cdq
and
cdq
cmp
lods
xchg
dec
ret
cmp
add
push
xor
ja
push
jb
in
mov
adc
and
xor
mov
xor
imul
cmp
jne
sbb
fsub
sub
xlat
lea
and
adc
addr16
inc
cmp
cmp
ror
sub
jo
mul
mov
jb
xchg
es
fild
mov
fld
sbb
or
mov
mov
cmp
push
inc
jne
mov
push
inc
hlt
mov
mov
jns
sbb
sub
adc
adc
push
pop
gs
fisubr
daa
sub
les
sbb
aam
pushf
add
dec
fcmovnb
popa
sbb
adc
adc
fcomip
inc
jg
ja
test
pop
xor
xor
lea
inc
scas
pop
xchg
iret
dec
or
stos
cmp
or
(bad)
gs
and
xor
mov
cmps
push
popa
mov
dec
add
sbb
lods
repz
pop
cmc
mov
add
aam
mov
fwait
inc
inc
sub
inc
ret
jno
dec
(bad)
aaa
sub
pop
fnstenv
sub
inc
call
jo
pusha
je
cwde
push
js
jno
test
and
adc
ins
sbb
aam
adc
sub
jmp
push
std
push
lods
aaa
imul
and
je
xor
dec
cmp
jb
ins
mov
(bad)
xchg
inc
sbb
xchg
cmove
push
(bad)
jecxz
movs
jmp
clc
(bad)
jae
dec
aam
push
add
mov
jle
xchg
or
inc
pop
and
pop
test
pusha
inc
out
xor
adc
cmps
inc
sub
cmps
in
mov
add
enter
(bad)
mov
sbb
js
sbb
xlat
nop
test
mov
inc
push
das
sbb
sbb
xor
xor
push
or
pusha
sbb
out
dec
and
jne
or
mov
sar
sbb
xchg
adc
(bad)
mov
sbb
sub
outs
inc
push
inc
fadd
fs
sbb
or
push
sbb
inc
iret
jmp
retf
lods
sub
sbb
cmp
or
sbb
adc
dec
mov
cmp
mov
test
mov
dec
jg
movs
dec
mov
dec
pop
xchg
pop
ror
xchg
ins
inc
aaa
lods
iret
adc
xchg
and
aad
jno
mov
lock
das
jbe
jmp
pop
or
ret
push
or
xchg
xlat
dec
sub
lods
test
mov
cmps
mov
push
cs
push
sbb
inc
out
xor
popa
pop
js
ins
popa
lock
jp
sar
cli
sub
fmul
jne
jg
mov
loopne
call
sbb
push
popa
push
mov
(bad)
inc
push
sbb
adc
in
ja
ins
sub
sub
push
inc
movs
push
mov
push
push
movs
(bad)
aad
(bad)
rcr
xor
pop
ret
cmc
arpl
je
(bad)
xchg
xchg
xchg
ss
mul
push
push
xchg
fdivr
sub
and
sbb
jne
cdq
test
sub
in
aas
lock
sbb
outs
adc
jmp
mov
mov
add
add
pop
xor
or
sar
retf
jne
sbb
aam
cmps
push
lea
inc
fsubr
cmp
and
sbb
xchg
xchg
and
les
push
jo
pop
daa
push
scas
jb
ror
es
test
and
add
pop
sub
imul
mov
hlt
pop
(bad)
fst
push
test
rcr
add
push
push
(bad)
pop
mov
movs
or
mov
add
addr16
mov
hlt
int
mov
stc
and
adc
mov
stc
lock
push
loope
mov
or
icebp
mov
ret
adc
ins
sbb
dec
out
pop
or
(bad)
mov
repnz
or
dec
fdivr
mov
xchg
rcl
js
push
or
aam
adc
dec
test
mov
sbb
test
jns
sbb
or
jo
sbb
adc
aaa
pop
adc
dec
sbb
jne
mov
loopne
dec
test
sub
ins
dec
mov
dec
or
enter
dec
daa
pop
xchg
jne
or
sbb
sub
add
jp
fldpi
and
jmp
dec
jmp
push
sub
shl
movs
xchg
or
xchg
rcl
in
jb
add
in
mov
pop
jnp
sub
cmp
cmps
shl
mov
pushf
and
mov
movs
jne
or
jmp
hlt
imul
mov
and
call
fdiv
mov
adc
xlat
outs
pop
sbb
sbb
inc
jae
pop
add
mov
test
cmp
movs
movs
cmp
add
call
pop
jb
mov
or
pop
and
inc
pop
jno
push
inc
mov
jbe
adc
inc
hlt
arpl
sub
adc
mov
clc
lods
rol
sbb
or
(bad)
out
inc
add
jecxz
mov
pop
and
xchg
inc
and
push
dec
lock
es
or
add
jp
add
in
xor
push
adc
xchg
sbb
dec
lahf
pop
push
adc
bound
inc
ret
adc
ds
mov
cld
(bad)
sub
cwde
cmc
loopne
pushf
out
push
mov
test
push
and
jecxz
scas
sbb
push
adc
add
pop
sub
dec
and
es
fidiv
lods
mov
sub
dec
imul
sub
xchg
sbb
add
pop
mov
pop
dec
fild
jge
inc
or
(bad)
push
sub
dec
mov
push
stos
mov
push
lods
es
loope
mov
push
jae
pop
add
adc
sbb
sub
and
add
push
test
aam
cmp
mov
push
add
jg
dec
mov
inc
rcl
nop
adc
xor
cwde
push
jmp
sbb
adc
pop
mov
adc
mov
sbb
outs
sar
push
sub
and
and
das
push
sbb
jecxz
pop
xlat
nop
or
cwde
add
call
jmp
or
sbb
ins
add
inc
sub
dec
sbb
xchg
adc
ds
and
dec
popa
mov
mov
push
push
inc
sbb
ret
push
or
pop
aas
scas
mov
adc
dec
rcr
adc
mov
mov
int3
push
xchg
xlat
cmp
loopne
sbb
pop
adc
jne
imul
push
sbb
loopne
out
movs
sub
mov
mov
xchg
outs
add
add
pop
js
sbb
jne
sbb
add
cmp
rcl
adc
call
pop
cmp
pusha
lock
ja
and
xor
and
fs
fiadd
fisttp
sub
cmps
bound
scas
xor
xor
xchg
adc
push
mov
mov
push
sub
leave
das
xchg
adc
jns
jmp
movs
daa
and
in
cli
add
test
sub
xchg
mov
pop
dec
mov
test
imul
rcr
hlt
cmp
enter
pusha
xor
xor
xchg
mov
(bad)
fistp
add
push
mov
cmp
cmp
jmp
pop
xor
inc
jg
iret
dec
inc
sahf
movs
fsub
mov
shr
pushf
adc
imul
repz
jmp
bswap
fdiv
push
sub
xlat
inc
sub
hlt
jg
or
js
adc
pop
jmp
addr16
and
dec
test
fld
mov
ret
pop
push
mov
pop
(bad)
lock
dec
jl
push
cmp
pop
ins
push
mov
sub
or
mov
dec
aas
mov
into
xor
rcl
(bad)
mov
and
and
jge
lods
add
outs
popf
jl
adc
xor
pop
inc
(bad)
or
cdq
sub
cmp
(bad)
shl
pusha
jne
scas
mov
adc
out
adc
test
lea
xor
ja
xchg
shl
add
sub
add
push
in
mov
cs
es
pop
sbb
mov
mov
jecxz
push
or
jecxz
push
adc
daa
jnp
inc
sbb
movs
dec
pop
adc
outs
and
popa
xchg
inc
jne
mov
push
or
push
xor
pop
out
aad
sub
test
cdq
sub
ficom
push
add
xor
inc
movs
nop
or
and
or
sub
test
shl
adc
inc
pop
repz
mov
mov
das
int3
push
sub
mov
and
out
mov
and
pop
test
rcl
call
cdq
xchg
aam
mov
sub
adc
xchg
cmp
(bad)
cmps
jno
lods
sub
sbb
(bad)
pop
retf
sub
sbb
loopne
cmp
in
in
imul
dec
or
jnp
sub
int3
push
mov
call
popf
out
sub
out
push
pop
rol
rcl
dec
ins
imul
cli
cmp
aam
mov
cwde
outs
ja
test
adc
mov
in
icebp
jo
(bad)
sbb
xchg
dec
cmp
sbb
fsub
jne
dec
mov
pop
sub
or
sbb
inc
mov
icebp
cs
pop
sbb
or
and
xchg
movs
dec
sbb
call
test
movs
cmp
loop
addr16
in
mov
jmp
add
adc
pop
xor
hlt
add
aad
or
enter
call
xchg
add
hlt
jecxz
in
adc
add
rcl
dec
sbb
push
xor
call
jg
test
rol
jo
and
test
jl
xchg
ins
mov
jnp
xor
(bad)
mov
sahf
pop
loope
and
mov
sbb
or
push
aaa
and
cs
mov
movs
shr
inc
xchg
push
mov
pop
add
pop
aam
or
xchg
jne
add
inc
std
inc
lahf
mov
movs
mov
nop
enter
movs
sub
and
xor
sub
adc
dec
xor
push
adc
adc
rcl
pop
clc
pushf
mov
or
lock
add
dec
and
shl
mov
daa
sbb
arpl
movs
adc
xchg
ins
scas
sub
sbb
inc
dec
out
xor
mov
xor
pop
xchg
int3
jge
sub
sar
mov
sbb
sbb
dec
out
rol
pcmpgtb
jo
sub
pusha
push
pop
(bad)
adc
gs
sub
mov
shl
pop
or
inc
or
lock
mov
xlat
stos
sub
sub
jp
(bad)
mov
rcr
mov
mov
mov
adc
div
inc
ja
scas
and
or
call
push
pop
popa
clc
in
add
fucomi
xchg
mov
adc
adc
and
cs
push
dec
xor
mov
xor
mov
add
in
syscall
call
movs
std
jmp
mov
sbb
sbb
mov
in
fs
(bad)
lea
popa
nop
test
add
fimul
add
test
cdq
int
adc
sbb
cwde
or
mov
movs
ins
sub
push
fwait
mov
mov
test
xor
fcomp
ficom
dec
cmp
mov
aaa
dec
xor
and
xchg
sub
or
hlt
and
hlt
cdq
or
push
test
ret
dec
cmps
push
xchg
into
outs
shl
enter
enter
fist
nop
ins
dec
dec
movs
fcomp
rol
bound
sub
jns
add
je
test
push
bound
push
inc
movs
add
and
xchg
adc
pop
mov
in
cmc
inc
adc
xor
sbb
adc
div
dec
loopne
jecxz
xchg
add
push
adc
test
sub
inc
mov
sub
mov
frstor
es
jae
mov
or
cmp
pop
pop
push
sbb
pushf
pop
add
inc
push
mov
sub
fs
or
sub
inc
int3
push
add
adc
adc
loope
cmp
push
pop
push
or
push
add
into
and
or
sbb
cmp
or
adc
cmp
ss
cmp
inc
repz
push
jo
ja
cmps
or
lock
shl
imul
push
dec
(bad)
imul
and
adc
jmp
pop
je
xchg
mov
pop
push
fbstp
jo
xchg
jg
sbb
push
jle
xchg
add
lahf
adc
int
sti
pop
loopne
push
ins
jno
mov
es
push
(bad)
out
call
xchg
mov
imul
pop
xor
daa
fild
dec
loope
fs
popf
cmps
inc
sbb
pop
push
mov
icebp
or
adc
call
int3
or
(bad)
outs
ror
xor
mov
jno
cmp
add
xor
in
pop
xchg
adc
add
dec
jecxz
adc
shl
leave
in
nop
(bad)
mov
rcl
fs
int
xor
xor
and
and
cdq
fnstenv
sbb
mov
push
cmp
push
sbb
scas
sub
push
inc
add
sbb
push
test
aas
jb
fimul
xor
jl
adc
xor
xor
jge
or
xor
dec
adc
inc
add
or
add
inc
imul
dec
or
imul
inc
popaw
lods
sub
bound
mov
daa
jp
shl
push
xor
gs
(bad)
scas
xchg
in
add
push
pusha
sub
xor
sbb
or
or
lods
movups
dec
arpl
dec
scas
repnz
in
xchg
pop
bound
sbb
(bad)
xchg
dec
xor
loope
adc
movs
cmp
push
outs
mov
sbb
addr16
jnp
sbb
sahf
dec
add
out
nop
pop
pop
xchg
ins
idiv
(bad)
mov
or
cmp
and
dec
imul
sub
and
pop
jo
retf
adc
push
arpl
cmp
imul
sbb
sub
push
or
fs
pop
lds
sbb
cmp
cmp
scas
sub
mov
inc
xor
ja
movs
popf
js
ins
cmovae
aaa
scas
loope
scas
push
shl
and
inc
popf
xchg
sbb
pop
mov
sub
lahf
jo
mov
in
shl
or
jmp
call
shl
and
xchg
add
cmp
push
inc
int
daa
and
inc
push
ja
movs
add
dec
stc
jecxz
es
ja
call
xchg
shld
scas
jmp
pop
int3
test
fcom
adc
stc
xchg
lods
mov
lahf
loop
test
js
js
add
mov
mov
adc
jnp
hlt
xlat
call
mov
sub
push
mov
mov
cmp
xor
xchg
mov
loope
jg
js
mov
mov
lods
pop
or
mov
cs
pop
test
push
lods
mov
mov
adc
mov
cmps
pop
inc
lods
pop
test
call
scas
in
and
sbb
or
sar
pop
cwde
or
add
jmp
rol
loope
cmps
sbb
test
pinsrw
mov
dec
push
mov
jno
mov
adc
and
pushf
sbb
sub
popa
adc
jl
add
rol
xchg
push
jmp
cmps
xor
and
repnz
inc
sbb
xor
cdq
mov
test
and
jmp
xchg
je
sub
mov
rcl
jg
push
push
and
jb
pextrw
mov
push
dec
out
add
mov
and
dec
sub
ret
xor
test
pusha
je
adc
loop
mov
arpl
adc
adc
in
push
pop
jb
ret
adc
xor
dec
sub
ficom
aad
cmp
add
inc
or
push
xor
sub
dec
jo
sub
or
xor
or
mov
das
dec
xor
fs
pop
xchg
or
push
scas
push
out
lock
xor
fdiv
or
stc
xor
nop
out
add
cmp
icebp
ror
or
sbb
lods
push
stos
xchg
add
clc
mov
xchg
xchg
mov
jo
repz
jmp
clc
loopne
mov
enter
jns
arpl
fadd
fsubr
mov
es
data16
and
sub
add
dec
inc
cmp
arpl
scas
retf
adc
inc
mov
nop
loope
aaa
loopne
mov
ins
movs
push
inc
jbe
mov
gs
mov
les
inc
pop
dec
lods
and
push
inc
pop
mov
pop
inc
inc
push
inc
loopne
mov
inc
cmps
adc
or
jp
(bad)
jmp
push
ja
sub
popf
dec
loope
adc
or
inc
das
inc
dec
outs
fs
mov
shl
and
cld
hlt
cld
repnz
retf
hlt
cld
hlt
xor
(bad)
shl
hlt
aas
daa
pop
in
(bad)
sbb
jb
and
mov
icebp
and
ins
popf
lock
cmp
ds
pop
popa
jp
aas
cld
add
add
and
jl
in
jl
pop
sub
jge
mov
call
xor
cmps
bound
inc
ret
inc
mov
addr16
ja
cs
lahf
rcl
add
jo
push
leave
cmp
call
in
jmp
xor
and
pop
bound
xor
scas
adc
or
pop
test
rol
pop
mov
xchg
(bad)
shr
dec
scas
mov
loope
retf
sbb
mov
add
cdq
xchg
clc
cld
clc
cld
inc
sub
push
pop
jecxz
push
and
mov
in
mov
push
jae
cmp
pop
pop
inc
test
loope
fld
cmp
in
js
pop
push
mov
mov
mov
inc
adc
pop
jecxz
dec
xor
nop
adc
inc
jns
pop
and
jg
inc
mov
jg
cmp
sub
xor
sub
popa
vmptrld
adc
in
mov
cmp
xor
nop
scas
cli
ins
test
test
push
cwde
or
jns
nop
mov
cmp
call
and
xchg
cmp
lea
or
dec
mov
cmp
sbb
sub
mov
bound
lock
movs
dec
rcl
cmps
pop
mov
ins
loope
or
push
lods
mov
fs
retf
ins
xchg
pop
sub
ret
xchg
data16
in
sbb
and
in
ret
xchg
adc
imul
adc
in
xchg
lock
inc
mov
repnz
cld
(bad)
in
and
lock
dec
loope
aam
int3
jne
fidivr
ror
dec
ret
jmp
and
fscale
xchg
jp
sbb
mov
inc
cld
adc
and
lock
jg
push
ret
mov
in
xor
mov
test
add
call
adc
jnp
xchg
or
sub
pop
sub
and
call
jne
enter
inc
inc
dec
cmp
pop
mov
pop
daa
cli
in
or
xchg
adc
xchg
adc
fmul
lock
mov
push
repnz
sbb
lock
popa
xchg
sbb
inc
sbb
movs
xchg
add
mov
mov
xor
test
js
and
mov
(bad)
cmc
push
out
in
sar
lock
dec
jne
fimul
or
inc
sbb
push
je
daa
cmp
pop
inc
cwde
mov
and
mov
jb
push
test
dec
jecxz
push
add
inc
je
push
test
lods
dec
mov
arpl
(bad)
call
arpl
dec
cmps
aam
jecxz
mov
or
pop
imul
in
loope
mov
sub
push
xor
sbb
add
inc
jge
bound
retf
adc
inc
fwait
jle
xor
pusha
aam
loope
jo
inc
popa
lods
push
scas
jg
int
mov
or
sub
fs
pop
es
xor
push
mov
mov
inc
dec
mov
inc
add
outs
inc
into
add
and
(bad)
sbb
xchg
inc
movs
mov
xor
ins
bound
pop
or
out
sti
ds
or
popa
jb
add
dec
push
pop
jle
adc
push
adc
nop
inc
push
nop
mul
movs
fisttp
push
mov
xor
dec
add
in
imul
adc
push
adc
inc
or
int3
int3
push
add
add
mov
pusha
mov
sbb
iret
sbb
mov
xor
(bad)
sbb
or
push
retf
sbb
ret
retf
xchg
dec
sbb
call
xor
int
leave
and
repz
or
or
out
xchg
inc
jno
add
(bad)
adc
mov
out
addr16
push
xor
mov
and
adc
in
dec
(bad)
or
xchg
dec
fimul
ror
add
(bad)
ds
adc
test
jl
dec
ins
movs
dec
xor
dec
sti
mov
inc
fdivr
and
push
push
sbb
lock
nop
imul
and
test
aam
movs
sub
out
push
aam
pop
push
fdivp
fiadd
push
fmul
(bad)
mov
scas
pmullw
in
jae
adc
inc
inc
iret
xor
and
add
dec
mov
test
sub
rcr
or
mov
push
or
mov
lds
sbb
ror
and
mov
lea
dec
sbb
pushf
repz
mov
adc
int3
(bad)
cmp
pop
sbb
dec
rcl
mov
inc
and
out
aad
sbb
popa
mov
imul
push
dec
cmp
loopne
add
outs
dec
test
(bad)
sbb
gs
dec
cmp
loop
xor
inc
stos
dec
and
cmp
inc
inc
or
or
shr
sbb
inc
out
and
pop
sti
cwde
loopne
inc
dec
add
xchg
adc
pusha
aad
mul
dec
sub
mov
inc
adc
xchg
out
inc
cmp
or
jecxz
fcom
or
or
popa
jne
cmps
add
cmp
or
cs
xlat
cmp
pop
dec
call
jns
pushf
inc
aas
fadd
test
dec
ret
pop
mov
and
movs
add
mov
jmp
mov
cmc
psraw
add
xor
retf
popa
pop
popa
adc
test
ret
xor
cmp
(bad)
retf
cmp
lods
sbb
clc
sbb
mov
and
adc
add
in
(bad)
sbb
popf
adc
jg
or
je
push
push
sub
adc
sbb
push
mov
adc
and
test
loopne
add
lods
pop
mov
hlt
push
and
pop
push
push
sbb
pop
test
mov
lahf
popf
inc
jbe
xchg
out
inc
test
pop
jecxz
dec
fistp
ins
inc
pushf
outs
mov
addr16
call
es
movs
shl
mov
shl
aad
imul
jl
add
xor
popf
imul
pop
rol
mov
loop
call
inc
adc
out
test
xchg
or
(bad)
cmps
add
inc
and
or
stos
dec
mov
pop
or
or
dec
xchg
mov
xchg
mov
fcom
and
rol
xchg
cmp
jo
int3
jmp
or
push
sbb
and
fbld
inc
into
fs
xchg
test
and
cmp
dec
out
inc
into
movs
cdq
sbb
pop
adc
aad
sub
jp
cli
adc
nop
inc
xchg
dec
cmps
add
dec
xor
out
call
jo
jge
xchg
or
sti
nop
rcl
pop
jb
mov
push
pop
neg
cs
ins
xor
addr16
or
xchg
sbb
(bad)
std
movs
mov
add
popa
retf
add
sub
lods
add
add
iret
mov
add
push
fstp
int
sub
into
push
push
fcomp
(bad)
nop
add
pop
aam
(bad)
push
and
pop
pushf
jmp
and
outs
mov
add
rcr
dec
sbb
and
xor
xchg
fst
or
and
sbb
or
and
popa
pop
or
enter
pop
and
and
pop
mov
mov
pop
xchg
nop
push
fisttp
lods
or
xchg
imul
xchg
and
or
mov
push
imul
in
sbb
inc
push
sti
loope
lea
adc
jp
in
xchg
(bad)
call
adc
inc
or
cmp
dec
out
out
mov
lods
es
push
and
or
cmc
mov
add
mov
movs
aas
test
bound
mov
icebp
push
or
test
test
fwait
mov
and
and
add
or
fist
aam
hlt
mov
imul
xor
outs
aaa
push
sub
loopne
nop
test
test
cmp
out
or
add
add
xor
retf
test
inc
(bad)
movs
dec
ret
stos
mov
mov
cmp
add
inc
adc
imul
cmp
sub
adc
(bad)
pop
(bad)
hlt
push
jns
inc
sbb
jge
add
aam
mov
jge
dec
sbb
push
(bad)
jnp
fimul
jb
inc
jge
imul
xchg
loope
or
sar
xor
jmp
mov
cli
push
sbb
xchg
dec
add
mov
pop
fnstsw
in
xchg
adc
and
mov
test
sbb
sbb
or
test
dec
or
icebp
jmp
dec
jmp
sub
ret
and
inc
inc
push
pusha
cs
ret
cmp
outs
rol
popa
outs
xchg
(bad)
mov
mov
loop
seta
mov
and
xchg
pop
adc
xchg
aam
dec
es
sub
fadd
dec
movs
sbb
push
adc
and
mov
jae
scas
inc
pop
inc
daa
inc
mov
cmp
add
inc
inc
add
in
or
add
sub
sar
add
dec
int3
aas
fwait
hlt
loopne
movs
cmps
lahf
pop
inc
cdq
inc
sub
out
push
lea
push
mov
xchg
add
mov
jmp
fs
in
jbe
mov
jmp
ins
and
aaa
lods
fadd
imul
xchg
stos
cmp
clc
jecxz
jo
mov
data16
inc
pop
sub
shr
or
jmp
fisub
sbb
push
push
sar
pop
push
and
cmps
fld
pop
pop
mov
dec
std
cmp
jno
mov
(bad)
in
ja
or
inc
or
push
dec
inc
push
sub
dec
inc
popa
dec
inc
jno
cmp
sar
lds
ja
add
xor
jmp
aad
lock
popa
and
cmp
jg
sub
add
add
sub
dec
les
mov
mov
mov
ss
xchg
push
push
je
rcl
push
out
fsubr
mov
dec
repz
lods
dec
and
call
mov
jg
cmp
or
and
test
in
fisttp
out
mov
out
xor
lock
pop
fstp
pop
mov
dec
inc
jbe
aas
call
nop
adc
xchg
sub
sbb
pop
push
stos
nop
xor
test
mov
jmp
dec
push
pop
mov
cmp
adc
bound
repz
and
out
push
xchg
es
or
pusha
aam
inc
in
dec
add
pop
inc
imul
add
or
enter
push
sub
test
xchg
inc
push
inc
scas
in
cwde
cs
dec
inc
bound
imul
mov
cmp
add
sub
ins
add
test
nop
sbb
out
sbb
jbe
mov
ficom
int
(bad)
loopne
(bad)
dec
or
test
or
sbb
xchg
ds
add
cld
jmp
jbe
mov
and
add
adc
jns
js
orps
xchg
jp
dec
fcom
stc
pop
aam
xchg
cmp
mov
in
fsub
mov
or
fsubp
pusha
mov
xor
or
push
je
add
add
repnz
lahf
mov
inc
or
mov
test
imul
pop
mov
or
inc
mov
sbb
mov
scas
dec
xchg
sbb
dec
jno
inc
nop
xchg
or
mov
jp
shr
fld
inc
add
inc
cmp
cmp
sub
or
push
or
pop
js
xchg
jo
ret
loope
add
fmul
in
inc
inc
cmp
call
xor
es
sar
add
sbb
jno
cmp
pop
and
sub
fistp
inc
jne
push
stc
adc
(bad)
mov
addr16
ror
sbb
xor
jb
nop
outs
pop
test
mov
mov
xor
sbb
test
push
(bad)
mov
xor
xor
dec
jle
sbb
pop
jg
enter
or
mov
inc
pop
and
loope
jp
popa
mov
test
adc
push
cmp
and
jo
mov
inc
adc
jb
fld
sub
or
mov
pushf
sub
xor
add
jno
cmp
jmp
xor
int3
and
ret
loopne
xor
outs
pushf
call
icebp
xor
add
or
dec
ja
adc
sub
and
out
nop
adc
cmp
sbb
pop
sbb
xlat
jo
xchg
dec
mov
or
int3
shr
push
les
fimul
or
rcl
xchg
test
dec
cmp
sbb
ror
stos
cmp
call
in
add
xchg
pop
sub
call
aam
pop
dec
mov
push
mov
sbb
movs
add
aaa
xchg
imul
std
inc
aam
ret
in
outs
xchg
pop
xchg
mov
push
cpuid
jo
je
ja
je
and
ret
push
shl
arpl
jbe
gs
fistp
adc
mov
nop
pop
out
cmps
(bad)
ffreep
stos
jmp
mov
fnsetpm(287
lea
enter
stos
rol
push
or
dec
rcr
arpl
inc
mov
cmp
inc
sbb
(bad)
cmp
sbb
rcr
mov
lock
cmp
xor
and
cmc
mov
ins
ret
or
cmc
push
adc
jne
cmp
rcr
dec
popf
mov
ins
ins
mov
or
dec
les
or
dec
das
nop
ins
cmp
mov
push
data16
pusha
push
mov
mov
jns
loopne
popf
ret
cdq
jg
icebp
add
add
std
mov
imul
pop
dec
sbb
call
cmp
loope
inc
sahf
and
sbb
hlt
mov
div
mov
lods
push
or
adc
pop
aas
dec
adc
fstp
xor
dec
add
xchg
sbb
or
or
sbb
and
or
(bad)
adc
das
jo
or
inc
(bad)
das
enter
faddp
dec
pop
lods
push
xchg
jbe
daa
pop
mov
and
xor
fidiv
push
arpl
xchg
and
je
div
adc
ja
aas
or
pop
sbb
add
sbb
add
test
add
dec
ror
js
add
and
adc
clc
or
enter
sbb
xor
jno
je
lods
out
dec
in
add
add
mov
frstor
loopne
les
add
cwde
adc
cmp
cmps
fs
or
dec
adc
sub
push
xor
ja
mov
or
ins
loopne
push
push
clc
in
fst
stos
pop
mov
mov
sub
xchg
mov
adc
test
in
adc
fadd
jo
in
cmp
add
adc
movs
movq
dec
int3
and
jecxz
call
idiv
das
xchg
inc
xchg
pop
cli
dec
mov
pop
fisttp
or
inc
pop
push
fdiv
mov
les
cmp
or
popa
push
fcom
push
iret
outs
and
ret
push
loopne
xor
lods
add
add
shr
adc
cmp
mov
fmul
das
loopne
fbld
adc
sbb
hlt
xchg
pop
cs
cdq
das
fcomp
and
std
out
jne
inc
clc
das
cmc
sbb
ret
in
or
pop
cdq
push
inc
scas
mov
(bad)
(bad)
jle
shl
enter
inc
pop
(bad)
or
cmp
stos
pop
lods
ret
enter
add
push
(bad)
mov
inc
dec
arpl
and
call
fld
add
sub
mov
rol
icebp
clc
sub
and
push
push
cwde
inc
push
push
dec
sbb
cld
jge
pop
mov
mov
(bad)
cmp
push
fdivr
add
jns
jns
cmp
ror
or
sbb
mov
lock
xchg
ss
imul
mov
dec
adc
push
mov
jbe
or
inc
cwde
pop
sbb
scas
loop
jnp
jle
(bad)
ss
sbb
inc
adc
add
jle
cmp
dec
cmc
push
fdivr
push
lods
leave
fmul
cmps
mov
(bad)
cmps
mov
mov
sbb
add
lea
leave
fdiv
in
outs
or
xchg
popa
inc
scas
in
adc
push
not
jecxz
and
push
sub
sub
cwde
dec
sbb
add
inc
push
dec
jbe
cs
sub
lock
ror
adc
popa
pop
movs
mov
or
add
push
mov
cmps
cmps
mov
in
and
lea
push
call
ins
xor
and
add
mov
das
sub
add
jnp
xchg
inc
ret
adc
dec
ss
jae
into
hlt
pop
into
sbb
sub
adc
mov
rep
lock
mov
add
xor
pop
mov
stos
jne
sbb
outs
add
add
dec
leave
loopne
in
lock
ror
cld
add
add
movs
and
xchg
sqrtps
cmp
push
leave
push
cmp
add
mov
or
sub
dec
or
dec
clc
loopne
mov
stc
and
or
add
jge
pusha
shl
dec
push
pop
test
sub
jmp
gs
outs
and
dec
add
jne
das
mov
test
or
loopne
inc
js
pop
ret
call
retf
dec
push
pusha
mov
ret
push
pushf
setnp
xor
push
dec
pushf
cmps
or
dec
loopne
xor
bound
je
fisttp
inc
mov
and
mov
int
add
and
scas
jno
mov
adc
cmp
test
in
in
ret
pusha
xor
repnz
inc
xor
lds
cmp
adc
lock
(bad)
pop
sub
mov
mov
inc
mov
push
pop
vmread
xor
repz
mov
add
and
pop
jp
adc
sbb
retf
dec
clc
nop
ret
mov
adc
ins
les
in
push
inc
leave
arpl
mov
pop
enter
lods
clc
mov
inc
cs
or
or
and
daa
dec
lock
scas
retf
repnz
mov
add
dec
jno
dec
cmc
xor
ret
arpl
rcl
ret
das
pop
xchg
sub
das
clc
inc
cs
sub
sbb
xchg
retf
dec
call
test
push
xchg
ret
movs
mov
test
es
mov
pushf
pop
add
not
loopne
aaa
add
les
jecxz
inc
xor
gs
adc
adc
mov
add
mul
cwde
sub
or
enter
xor
inc
js
ins
mov
xlat
mov
sbb
repnz
fcmove
jne
xchg
and
cmp
lea
je
inc
fidiv
jl
jge
sbb
pop
addr16
shl
dec
adc
cmp
mov
mov
mov
sub
and
jb
push
pop
inc
loop
pusha
inc
or
ret
mov
and
adc
ret
or
mov
inc
pop
inc
test
neg
dec
xchg
loopne
adc
rcl
dec
mov
jge
dec
adc
sbb
push
add
dec
std
mov
push
pop
scas
mov
dec
loope
push
sbb
xchg
sub
gs
dec
xchg
sub
cld
sub
scas
(bad)
dec
repnz
rol
add
mov
pop
pop
shl
bound
adc
lea
cli
enter
add
add
scas
adc
shr
mov
jp
call
jl
sbb
movs
aas
mov
scas
ins
mov
sti
jle
xchg
add
inc
popa
dec
jb
jp
dec
mov
push
mov
out
retf
push
out
imul
inc
push
je
dec
and
add
pop
or
rol
stos
xor
dec
mov
inc
add
push
fs
and
xchg
jnp
and
add
and
push
mov
jp
sbb
lods
xor
mov
pop
ds
pop
inc
or
cmp
push
and
push
add
adc
sbb
xor
jno
push
sub
cmp
sub
es
scas
ins
loope
and
dec
int
leave
clc
mov
popa
pop
mov
or
xor
sbb
(bad)
enter
retf
and
sub
add
fwait
xor
and
dec
or
inc
pop
pop
lods
dec
adc
mov
xor
ret
and
not
add
push
stc
pop
imul
ror
lods
or
xchg
add
pop
push
sbb
or
push
hlt
test
or
mov
pop
pop
cmp
sbb
adc
adc
sub
mov
adc
xlat
rol
add
pop
or
and
mov
xor
sbb
and
lods
lock
cmp
adc
mov
gs
jbe
add
pop
adc
aas
dec
mov
push
dec
cmp
fdivr
pop
popf
xchg
lea
add
adc
xchg
adc
and
push
movs
in
xchg
push
mov
xor
das
mov
or
mov
pop
pop
fdiv
stc
or
pop
and
inc
(bad)
imul
shl
sub
adc
shl
adc
and
ja
fwait
add
add
inc
pop
mov
add
inc
pop
mov
xchg
cmp
xor
or
aad
lds
mov
adc
js
and
aas
rcl
ss
sbb
mov
popf
lahf
mov
scas
push
mov
add
jnp
xor
bound
frstor
mov
stos
iret
ja
imul
inc
xchg
push
mov
movs
bound
mov
cmps
dec
xchg
dec
xlat
rcr
add
mov
sub
and
leave
mov
sbb
and
pop
or
dec
mov
or
push
xchg
lds
mov
ins
dec
jg
hlt
jo
inc
(bad)
xor
dec
mov
pop
push
dec
aas
pop
jns
adc
imul
fild
xchg
dec
inc
mov
add
adc
iret
push
mov
das
jl
xor
imul
out
mov
rol
mov
jns
lds
daa
or
and
popa
sbb
mov
adc
jno
sub
add
dec
xchg
inc
cwde
mov
cmp
push
sbb
aaa
mov
stc
add
cmp
ret
jmp
popa
sbb
sbb
inc
cs
and
pop
mov
cmps
sbb
xor
loopne
and
test
test
retf
xlat
xchg
out
and
cs
sahf
clc
sbb
les
lods
outs
mov
scas
out
hlt
and
sbb
inc
jmp
stc
nop
or
add
shl
pop
sahf
or
stos
lahf
and
out
adc
or
adc
sub
adc
imul
and
inc
out
stos
push
adc
(bad)
int
shr
sub
icebp
mov
sbb
aas
dec
lgdtd
adc
adc
jmp
pop
sbb
xor
fist
adc
leave
xor
les
or
rcl
or
inc
ss
mov
out
or
or
push
or
jmp
dec
inc
movs
dec
pop
and
mov
mov
jo
sbb
sub
fs
or
pop
pop
sbb
ret
fsubr
or
unpckhps
pop
sar
movs
mov
mov
cmp
sub
push
xor
sub
mov
addr16
ds
xor
scas
mov
fs
cmp
cmp
mov
push
mov
push
fnstenv
add
xor
fnstcw
xchg
adc
jb
in
sbb
aam
jo
pop
jle
ror
pop
into
aas
mov
bound
cmp
pop
add
mov
gs
in
or
sbb
aam
dec
test
pop
mov
adc
lea
sub
or
aad
pusha
and
rol
sar
sub
addr16
pop
adc
jb
xor
sub
jb
jb
xor
adc
stos
inc
jb
or
cmp
rol
ins
xchg
cmp
fs
push
pop
push
add
sbb
aas
push
add
nop
xor
add
mov
add
adc
and
mov
inc
std
add
imul
ds
add
sub
pusha
or
in
cdq
mov
nop
popa
add
jl
pop
jb
add
adc
sbb
xor
mov
(bad)
fsub
adc
pusha
je
push
repz
or
xchg
mov
arpl
icebp
and
xchg
pop
pusha
add
mov
outs
(bad)
xor
mov
and
push
jmp
popa
fnstsw
adc
jmp
in
and
or
or
pop
push
sbb
popf
xchg
add
pop
jae
daa
call
mov
jmp
add
(bad)
dec
scas
leave
mov
fimul
mov
movs
add
outs
add
sbb
out
pop
push
sbb
inc
je
push
fst
add
test
add
lock
inc
dec
bound
(bad)
xchg
loopne
add
inc
add
push
jbe
sbb
push
les
out
xor
movs
dec
dec
test
dec
add
shl
shl
inc
fild
test
jmp
push
add
add
daa
sub
and
push
xchg
sub
sub
add
rcl
js
or
loopne
cmps
or
cmp
dec
ins
adc
jo
mov
xchg
aam
push
test
repz
fadd
lock
bound
pusha
inc
es
fdivr
inc
cmp
or
jle
(bad)
fisttp
fcom
inc
bound
test
or
loopne
aam
ror
fs
mov
sahf
scas
jbe
out
enter
fidivr
xor
xchg
cmp
xchg
sbb
enter
push
add
data16
js
add
pop
lahf
out
adc
cmp
push
sub
pop
stos
mov
jmp
popa
enter
or
dec
rcl
inc
push
jae
jns
adc
fsub
sbb
or
rol
aad
inc
inc
push
add
jmp
retf
ja
xchg
push
sub
cmp
aam
mov
adc
scas
rcr
in
pop
jmp
and
nop
mov
pop
ror
xor
das
dec
mov
or
jmp
dec
aaa
xchg
je
jge
sbb
mov
dec
pop
sbb
sub
stc
leave
pop
pop
add
or
inc
inc
pop
pop
ins
and
sti
push
jae
add
mov
dec
out
icebp
in
mov
jp
xor
or
in
ss
adc
cmp
nop
add
imul
repz
popf
add
xor
sbb
mov
std
pop
test
jl
jge
xchg
out
sub
ror
std
cmc
jno
pusha
mov
mov
xchg
xor
mov
dec
fsubr
repz
cmp
imul
shl
xchg
scas
cdq
call
sub
ins
addr16
add
dec
out
cmp
les
sbb
(bad)
sub
xchg
lock
sbb
jg
add
in
sahf
sti
cmps
ins
sahf
xchg
cld
add
ror
push
lds
xchg
add
fstp
out
cmc
and
cld
push
or
imul
inc
aaa
retf
je
and
dec
jp
data16
push
adc
fcmovb
loope
lds
xchg
int
sub
in
icebp
cmp
test
in
inc
shl
and
add
add
xor
jo
sub
jg
dec
jmp
push
jb
inc
daa
sbb
xor
cmps
lods
inc
jb
cmp
pop
outs
out
cmp
ds
dec
cmp
inc
cmp
sub
and
pop
dec
sbb
in
and
out
add
dec
xor
sbb
stos
xchg
xchg
xchg
lahf
lahf
cmp
out
and
lahf
ret
rol
add
(bad)
and
xchg
imul
xor
add
inc
sbb
cld
out
dec
out
pop
xor
shl
cmp
in
inc
and
mov
inc
call
test
clc
lahf
(bad)
call
mov
xlat
adc
rol
outs
lock
scas
xchg
stc
cmp
sbb
jg
call
or
push
push
hlt
lea
xchg
or
push
pop
lahf
jmp
mov
fist
push
push
sub
xor
mov
inc
jbe
pusha
mov
sub
fisub
jp
js
pop
test
gs
mov
xor
mov
loopne
push
jecxz
inc
stos
add
or
(bad)
fldcw
add
mov
lods
jp
movs
repnz
inc
in
aam
add
add
(bad)
push
mov
jmp
add
add
or
int3
call
sub
jno
jae
paddsb
push
dec
call
pop
mov
loopne
inc
out
in
das
sbb
in
sbb
xor
pop
ficom
add
fimul
ja
mov
jg
lock
sbb
jns
pop
push
push
call
jle
ja
popf
retf
je
int
sbb
sbb
lock
push
gs
mov
dec
fist
push
sbb
adc
xchg
ja
push
mov
jbe
adc
cmp
pop
adc
call
shl
ss
or
mov
xchg
inc
imul
cmps
add
mov
aas
fild
enter
or
push
dec
call
imul
inc
push
imul
mov
inc
lea
loopne
dec
fsub
mov
inc
cli
cmp
lods
add
int3
add
add
inc
adc
lea
shr
mov
xchg
movs
inc
leave
ror
cli
fisttp
cld
(bad)
mov
(bad)
scas
imul
rcr
(bad)
icebp
sub
mov
sub
mov
rcr
(bad)
cmp
ins
jno
push
clc
mov
aad
xchg
repz
clc
mov
mov
mov
iret
or
test
imul
pop
cld
add
loopne
mov
adc
pop
mov
xor
push
add
pop
and
push
rcl
daa
mov
adc
mov
adc
enter
test
cli
and
arpl
jmp
adc
in
je
stos
inc
out
(bad)
pop
sar
fcomp
popf
test
sbb
xor
cmp
inc
addr16
push
shl
sbb
(bad)
add
in
and
inc
out
repnz
daa
movs
or
sub
test
les
rol
jge
call
dec
mov
div
adc
add
xor
inc
mov
mov
or
xor
xor
out
(bad)
leave
ins
lods
lods
or
add
inc
jle
out
inc
pop
inc
xor
adc
call
and
jp
test
jb
inc
fistp
aaa
pop
mov
ror
or
add
push
dec
outs
sti
mov
inc
fdiv
or
and
mov
add
mov
pop
dec
xchg
ins
arpl
(bad)
jecxz
jne
push
adc
ret
mov
popa
pandn
adc
adc
xchg
add
jns
inc
inc
add
sbb
mov
jge
mov
xchg
mov
scas
std
pusha
dec
in
xchg
cld
sti
add
xchg
daa
push
xchg
sbb
fstp
pop
addr16
cmp
cmp
adc
add
out
ins
cmps
sbb
add
cmp
jecxz
xor
xchg
add
add
loope
adc
push
dec
ret
dec
and
call
and
retf
mov
sbb
pop
pop
add
pop
sahf
ins
aaa
pop
out
mov
lahf
das
cmps
stos
and
popa
lea
in
inc
or
sub
shl
adc
push
shl
inc
pop
sub
pop
(bad)
mov
dec
movs
mov
lods
mov
popf
lods
arpl
pop
mov
gs
inc
aaa
mov
xor
xchg
lock
iret
and
add
and
hlt
mov
sbb
and
sbb
fisttp
dec
mov
dec
imul
pop
mov
sbb
nop
(bad)
dec
inc
nop
popa
add
dec
inc
pop
fwait
sbb
mov
dec
(bad)
sbb
lods
sub
adc
xchg
inc
pop
fistp
dec
dec
and
xor
retf
in
mov
test
inc
fcom
xchg
cmp
sbb
sub
sbb
push
jl
mov
push
add
add
cmp
adc
call
push
ret
mov
pusha
sub
mov
inc
mov
add
xchg
or
jnp
sar
and
js
je
outs
xchg
ret
jecxz
push
sbb
aad
dec
cmp
pop
and
imul
add
arpl
rol
(bad)
in
inc
jo
jge
mov
mov
movs
jge
push
xor
sbb
push
je
xor
add
xchg
or
and
shr
push
inc
dec
sub
iret
outs
mov
test
in
push
test
sbb
inc
add
jmp
sbb
and
and
fs
ins
or
push
movs
inc
adc
out
sti
pop
adc
imul
and
jecxz
inc
inc
pusha
jbe
lea
xchg
sbb
push
dec
loop
lods
imul
xchg
jg
or
ds
cmp
stos
daa
cmp
jne
repz
sub
adc
shl
adc
add
jno
leave
out
push
lods
or
adc
clc
xchg
in
inc
pusha
ficomp
xor
jl
and
or
adc
out
daa
shl
in
enter
(bad)
aaa
mov
lods
sub
and
sbb
lds
push
test
dec
aas
dec
mov
cmps
xchg
mov
pop
stc
inc
mov
and
in
shl
inc
jg
stc
loop
add
jg
sub
mov
add
idiv
push
loopne
dec
adc
add
test
call
jae
xor
cmp
data16
cmp
dec
mov
adc
hlt
push
div
or
cmp
loop
fwait
pop
pop
sbb
inc
pop
jns
mov
adc
xor
cmp
and
gs
mov
xor
loop
jne
mov
mov
jnp
mov
ins
push
imul
in
or
fnstenv
outs
push
inc
jno
mov
jne
mov
pusha
mov
sbb
add
cmps
cmc
and
pop
push
aam
test
inc
push
xchg
dec
ins
dec
fstp
pop
and
pop
test
inc
loop
dec
loopne
push
add
sub
or
fisttp
mov
sub
in
xchg
cmp
cmp
and
mov
pop
pop
sbb
xor
dec
pop
in
ror
or
lock
adc
scas
or
xchg
icebp
and
outs
inc
and
mov
retf
or
cmp
or
shl
ror
dec
mov
mov
sbb
cmp
jnp
lods
add
rol
das
dec
mov
out
dec
sub
jnp
mov
dec
or
push
popa
stos
and
xor
push
shr
or
inc
dec
pop
es
sar
mov
test
pop
aam
(bad)
out
add
xlat
add
imul
fidiv
add
xchg
add
sub
movs
fwait
and
lds
sub
jmp
pop
and
sub
ss
fwait
and
lock
pop
mov
pop
pop
rcl
js
fisttp
dec
jno
packsswb
mov
mov
daa
mov
or
add
push
push
(bad)
mov
pop
sbb
and
dec
cmp
cmp
stos
dec
or
sub
pop
dec
push
jae
xor
inc
pop
cmp
arpl
push
push
call
rcl
lods
sbb
mov
out
mov
ret
inc
dec
cld
xor
daa
push
and
xchg
repnz
int3
jnp
add
pop
test
ret
mov
cld
dec
int3
lock
mov
push
sbb
out
leave
cld
shl
push
jmp
int3
int3
xor
or
add
mov
sbb
jmp
dec
loopne
sbb
xor
leave
enter
test
add
fcomp
push
ret
movs
std
outs
mov
push
xor
push
xchg
mov
enter
push
loopne
std
popa
loope
adc
add
test
mov
push
add
jecxz
arpl
hlt
fcmovnbe
jmp
lea
cmp
sub
icebp
loope
cmp
cs
sar
xchg
jmp
mov
movs
cmp
adc
or
inc
shl
rcr
(bad)
pop
(bad)
adc
push
pushf
pusha
loope
or
adc
dec
xor
cwde
test
dec
fwait
jg
and
and
or
pop
and
cmp
sub
adc
mov
stos
popa
add
pop
out
xchg
scas
inc
add
push
jg
xchg
inc
enter
aam
add
jb
xchg
xor
mov
add
daa
fbstp
cmp
or
ja
dec
js
dec
fsub
in
mov
mov
pop
jmp
mov
imul
hlt
push
rcr
lods
add
or
rcr
xor
jmp
jnp
in
or
aad
or
dec
pop
ins
sbb
inc
cmp
mov
jecxz
pop
sbb
movs
xor
jle
dec
sub
dec
lock
(bad)
arpl
shl
adc
mov
fild
sbb
je
mov
dec
fst
and
shl
lock
xchg
and
and
cmp
push
test
push
cmp
push
inc
bound
sub
mov
shl
mov
out
or
idiv
mov
sub
ret
cmps
pop
cdq
clc
or
xchg
and
enter
(bad)
adc
inc
mov
out
dec
dec
pop
jle
je
add
mov
inc
pop
xor
inc
call
aad
out
stos
fs
out
jne
loop
test
repz
sub
add
jae
mov
es
arpl
jmp
mov
or
xor
sub
sbb
clc
cmp
fwait
sbb
out
stos
mov
pop
clc
mov
mov
inc
inc
bound
adc
and
enter
fld
(bad)
cmp
pop
lock
and
push
and
push
jl
and
sahf
xlat
add
add
push
adc
sbb
repz
or
in
popa
lods
adc
mov
jo
mov
mov
and
xor
je
dec
repz
xchg
or
out
ds
cmp
int3
adc
enter
imul
sbb
out
jns
push
mov
adc
sub
mov
idiv
shl
test
jle
int3
cwde
cmp
jns
xor
or
sbb
dec
inc
cmp
ret
adc
sub
mov
jbe
or
shl
clc
cs
mov
and
pop
dec
jno
sar
cmp
mov
fs
xchg
push
shl
dec
add
aas
or
or
and
cdq
dec
cmp
loopne
and
adc
ror
mov
mov
(bad)
out
jo
nop
shl
pop
push
add
enter
sub
retf
(bad)
add
mov
loope
test
in
push
adc
retf
lds
xor
ret
or
sub
mov
inc
sar
or
adc
call
pop
add
ds
dec
push
je
sbb
push
cld
aaa
dec
stc
sahf
jbe
lahf
mov
ss
xor
and
js
jnp
sbb
int3
push
js
test
pushf
or
addr16
shl
and
sbb
xor
push
jp
add
test
repnz
jl
in
js
ficomp
xor
push
push
sbb
gs
or
js
pop
cmp
push
lock
cmps
test
hlt
repnz
or
adc
cmp
mov
adc
xor
or
lods
test
inc
dec
and
fdivr
xcrypt-cfb
cmps
or
lock
or
aaa
in
pop
jl
cmp
js
cwde
cmp
shr
cmp
call
pop
sbb
shl
cwde
(bad)
test
push
sbb
sub
adc
sbb
dec
inc
aam
sbb
push
xchg
or
or
cmp
fcom
jo
add
pop
sbb
inc
pop
clc
push
dec
dec
ret
push
cs
push
sbb
pop
neg
mov
push
and
push
or
xchg
mov
cmps
or
dec
dec
adc
mov
vmwrite
dec
dec
js
pop
test
sbb
adc
add
nop
movs
jbe
fimul
add
jne
aas
test
out
adc
mov
cwde
add
(bad)
jo
fst
in
or
test
(bad)
loopne
or
and
not
add
pop
adc
and
inc
inc
sub
data16
les
adc
pop
pusha
neg
add
pop
fcom
pop
lock
or
pop
fisttp
push
jns
cmp
nop
mov
leave
xchg
add
ror
and
mov
push
lods
adc
xchg
dec
enter
fadd
and
xchg
les
inc
add
inc
mov
or
ja
inc
adc
pop
or
and
push
mov
mov
sub
adc
mov
add
pop
mov
cmp
aaa
fs
aaa
dec
jae
mov
adc
dec
(bad)
adc
xor
pop
xor
lock
and
or
inc
push
mov
jnp
mov
and
inc
loope
mov
or
push
or
dec
out
mov
dec
mov
add
lea
mov
or
shl
sahf
or
movs
pop
jo
scas
push
add
and
jmp
push
retf
xchg
test
pop
cld
imul
sub
or
inc
aaa
jno
and
popf
adc
loopne
push
dec
loope
add
adc
sub
rcr
xchg
stos
(bad)
xchg
mov
adc
(bad)
jmp
add
dec
and
adc
psubusb
sub
push
add
popf
add
mov
outs
or
xchg
cmp
add
ret
push
lea
add
clc
pop
xchg
cmovno
rcl
or
into
rcl
pusha
or
sub
dec
mov
mov
and
popf
(bad)
or
push
or
cmps
dec
lock
xchg
pop
bnd
mov
pop
push
pop
mov
leave
pop
pusha
pop
mov
dec
mov
and
lds
not
push
lds
neg
and
dec
mov
dec
stos
ins
and
gs
jne
push
add
add
add
mov
ds
enter
stos
mov
smsw
pop
xor
xchg
adc
xchg
adc
sub
test
dec
inc
fist
or
sub
jmp
retf
data16
or
pop
sbb
add
and
retf
mov
das
sbb
jo
inc
out
(bad)
imul
in
into
xor
add
sbb
add
add
add
and
in
add
and
pop
fild
call
adc
push
inc
loope
add
or
add
push
xor
shrd
mov
loopne
movaps
push
push
push
rol
sbb
repz
out
adc
or
out
add
mov
mov
rol
int3
push
add
xor
mov
pop
and
mov
in
fs
dec
and
mov
inc
push
cmp
dec
and
or
sub
and
adc
lods
dec
add
cli
pop
mov
inc
add
add
add
cmp
loopne
xor
mov
out
loop
xchg
add
xor
mov
mov
push
ror
enter
sub
pop
cmp
dec
scas
call
jmp
and
out
movs
repnz
loop
loope
loopne
push
add
or
dec
(bad)
fiadd
mov
xlat
call
lea
loopne
pop
aam
sar
ror
cmps
sub
ror
inc
das
or
dec
retf
dec
out
ds
push
adc
loopne
fidivr
xchg
stos
(bad)
push
mov
hlt
ds
sar
test
clc
fs
sahf
repz
dec
mov
loopne
push
sub
ins
movs
aam
call
push
mov
ss
cwde
js
imul
push
adc
cs
mov
js
push
sbb
fdivr
pop
mov
inc
sar
js
jo
jbe
je
pushf
stc
xor
out
jp
pusha
jg
and
(bad)
mov
pushf
(bad)
pop
outs
and
mov
dec
or
pop
pop
inc
sar
mov
loopne
jae
xchg
hlt
aam
fiadd
cwde
push
call
mov
ret
leave
nop
pop
pop
sbb
add
adc
cmp
pop
data16
add
push
or
add
mov
int3
push
xchg
inc
adc
mov
add
add
call
ins
add
pop
or
imul
call
or
push
in
mov
dec
and
or
sbb
add
les
or
shl
inc
add
loope
adc
xor
call
nop
ret
mov
sahf
sbb
or
in
sub
jae
push
mov
or
xchg
inc
adc
mov
stos
mov
cmove
sbb
push
dec
popa
je
xchg
mov
dec
dec
mov
push
inc
xchg
sub
xor
imul
push
mov
sbb
xor
daa
cmp
inc
push
sbb
ins
loope
mov
mov
mov
cdq
fcomp
adc
pushf
adc
arpl
and
mov
in
sbb
inc
pushf
je
push
xchg
call
cmp
or
or
rcr
mov
xor
xchg
rcl
mov
sbb
add
sbb
imul
pop
ret
adc
daa
mov
add
nop
outs
test
add
cld
dec
mov
sbb
jo
fwait
sti
cmps
call
push
cmps
in
push
nop
and
xchg
les
push
pop
jle
xchg
pop
push
cmp
repnz
jo
sub
or
or
aas
shr
jl
sbb
mov
push
imul
aas
cmp
ret
and
inc
in
inc
xor
add
add
sub
sub
add
adc
das
cld
cs
fbstp
cld
mov
test
adc
sbb
sbb
enter
push
add
aaa
mov
mov
jo
adc
jno
mov
inc
mov
outs
inc
adc
cmps
sbb
es
scas
push
mov
add
push
mov
and
xor
and
lahf
mov
add
in
inc
mov
pop
add
loopne
inc
or
(bad)
mov
jo
(bad)
mov
push
cmp
mov
int
iret
jns
iret
rol
ins
pushf
cmp
push
out
clc
sub
pop
cld
mov
popf
in
in
ds
rol
mov
fwait
dec
mov
fild
loopne
fsub
nop
loop
cmps
stc
xor
add
xor
fwait
iret
stos
test
adc
mov
neg
out
push
adc
aam
lahf
cmps
fld
sbb
inc
push
in
idiv
adc
and
jns
iret
cmp
mov
mov
jmp
and
movs
push
(bad)
iret
jnp
neg
jmp
fidivr
ds
jmp
in
push
push
xor
xchg
dec
cmps
(bad)
sti
dec
aam
(bad)
hlt
scas
fadd
or
dec
out
ins
or
fadd
cmp
push
out
xchg
(bad)
into
imul
mov
fadd
je
mov
sar
cs
jge
scas
fld
xchg
adc
ds
in
jecxz
call
mov
movs
cmc
int3
and
mov
retf
push
pusha
lods
push
into
inc
pop
and
nop
sub
push
imul
lods
pop
nop
push
cwde
push
adc
aad
or
fistp
sbb
push
xchg
movsx
test
into
gs
push
pop
sub
pushf
nop
push
cmp
and
and
mov
push
pop
ss
push
xchg
inc
add
and
pop
xor
int3
sbb
xor
loop
js
sbb
jl
jmp
adc
add
mov
pop
pop
mov
xlat
jl
mov
jnp
pushf
mov
sbb
push
adc
nop
cmps
mov
jnp
cmps
call
adc
jl
idiv
add
adc
rol
or
ds
push
jnp
je
and
(bad)
xchg
and
es
push
clc
and
adc
dec
iret
or
inc
loopne
dec
inc
and
iret
mov
xchg
les
adc
pop
pop
sub
mov
sar
pop
ja
bound
sbb
pop
or
add
in
push
lods
jle
or
or
and
aam
mov
or
or
dec
or
or
add
ret
les
xor
jl
add
cmp
stos
pop
in
push
adc
inc
jns
(bad)
add
adc
or
xchg
xor
test
je
and
push
inc
pop
pop
or
adc
xor
jbe
push
icebp
push
sub
gs
int
fs
or
mov
xchg
inc
enter
out
imul
pop
xor
jae
popf
inc
adc
(bad)
in
daa
shl
mov
and
push
cmp
out
je
je
aaa
test
cmps
dec
adc
adc
add
sbb
enter
sbb
or
adc
jmp
sbb
xor
add
mov
ins
sub
cmp
int
sub
add
or
push
and
cmp
repz
lds
cs
les
push
xor
push
push
fadd
or
ds
add
aaa
jo
into
push
clc
sub
fldcw
jl
enter
pop
ss
int
cmp
inc
fadd
and
popa
cmp
push
in
mov
add
push
push
pop
add
dec
push
scas
push
adc
mov
cmp
sub
clc
or
xchg
or
mov
dec
inc
inc
cmp
mov
cmp
movq
xor
pop
ret
aad
pop
mov
movs
push
les
mov
pop
or
pop
je
push
mov
nop
push
sbb
mov
cmp
pop
dec
shl
cmp
ja
add
movntps
adc
call
je
or
sbb
or
xchg
push
or
bound
cmps
test
push
dec
hlt
and
sbb
arpl
sub
inc
push
cmp
push
sbb
xchg
sti
inc
mov
xchg
aas
jecxz
mov
mov
inc
(bad)
and
outs
jl
popf
or
retf
pusha
(bad)
mov
data16
mov
and
(bad)
pop
xor
cmp
je
dec
mov
and
loopne
cmp
(bad)
or
das
mov
mov
mov
mov
jae
push
or
or
nop
and
nop
ret
daa
outs
mov
test
mov
inc
dec
or
push
mov
add
test
daa
inc
pop
rcl
mov
scas
loopne
leave
push
inc
push
and
daa
push
jo
pop
outs
pop
add
or
sub
(bad)
inc
ins
popa
clts
push
cmp
bound
dec
mov
xchg
daa
dec
mov
dec
int3
cdq
daa
push
mov
cmp
push
popa
loopne
shl
(bad)
or
dec
mov
cmp
das
cmp
add
mov
gs
mov
daa
add
cmovbe
adc
mov
cmc
dec
out
jmp
pop
scas
adc
jne
xlat
popa
stos
adc
test
dec
daa
dec
push
in
or
stos
or
xchg
or
cmps
push
ja
in
test
and
push
rsm
stos
addr16
dec
outs
sbb
pop
jno
xor
jnp
ds
loopne
fbstp
(bad)
mov
mov
add
sub
mov
cmovne
inc
xor
jo
test
mov
sub
add
int
xor
mov
xchg
xchg
inc
clc
push
leave
mov
rol
clc
popf
xchg
xchg
(bad)
rcl
xchg
shl
(bad)
push
or
xor
xchg
fst
and
add
push
rcl
dec
xchg
cs
cdq
mov
add
add
shr
imul
push
cmps
or
mov
pusha
mov
shr
mov
pop
inc
std
outs
adc
pop
arpl
dec
cmps
cmp
in
and
pop
add
xor
mov
adc
sub
pop
jb
or
jmp
adc
pop
jne
adc
imul
dec
or
adc
and
adc
sbb
xor
xor
and
sub
or
pop
push
sub
inc
(bad)
test
dec
jecxz
dec
sbb
dec
pusha
(bad)
or
xor
push
iret
jmp
movs
cmp
icebp
push
ss
mov
jmp
je
sub
add
add
sti
sar
adc
mov
sub
sbb
cmp
js
jo
pushf
stc
iret
jle
sbb
xor
jmp
into
adc
sbb
push
mov
out
jg
sbb
adc
mov
xchg
xchg
push
xor
adc
call
inc
mov
call
adc
mov
add
inc
add
pop
push
xchg
nop
mov
cmp
or
fistp
pop
outs
dec
xchg
sbb
jno
movs
jbe
pminub
inc
call
push
(bad)
cmps
movs
pop
sub
inc
not
dec
dec
cmps
sub
lea
daa
pop
add
cmp
pop
adc
xor
jge
xchg
cli
sub
and
call
mov
mov
push
neg
pop
das
daa
je
popa
cmp
xchg
fbld
bndldx
mov
add
mov
jp
jle
xchg
stos
adc
jp
dec
mov
cmp
sbb
lock
arpl
pop
mov
sub
sub
xchg
xor
add
mov
popf
cmps
mov
lods
push
and
pop
stos
sbb
dec
(bad)
push
mov
inc
sub
dec
pop
les
adc
mov
xchg
test
sub
jbe
sbb
lea
lea
pop
dec
jo
out
pop
push
inc
aas
xchg
xor
or
pop
(bad)
mov
test
or
xor
sbb
mov
push
and
dec
jg
add
jg
adc
jge
push
shr
xor
test
in
shr
ds
gs
adc
adc
or
push
aam
mov
pop
add
fsub
or
ret
xchg
adc
daa
push
ja
fist
aas
fisub
stc
or
pop
arpl
adc
add
fcom
movhps
or
ror
xchg
jo
fsincos
and
test
adc
adc
pop
or
mov
inc
lods
sub
and
dec
push
adc
mov
jge
shl
mov
jne
and
push
sar
xchg
test
sbb
pop
in
and
jne
addr16
or
add
aaa
mov
repz
arpl
push
dec
and
mov
pop
and
xchg
adc
pusha
sbb
lock
jne
sub
jmp
ins
and
cmc
pop
arpl
sub
dec
test
cld
or
lock
mul
jb
mul
add
je
mov
jge
cmp
gs
stos
push
int3
stos
(bad)
in
jae
inc
jecxz
add
popa
stc
out
ret
or
dec
(bad)
aaa
sub
into
dec
lock
in
sbb
aas
sbb
sbb
test
pop
push
and
mov
xlat
sub
clc
(bad)
in
(bad)
mov
dec
mov
popa
pushf
mov
xor
xor
or
call
dec
aaa
xlat
test
inc
adc
add
cmp
fmul
xchg
mov
inc
icebp
push
add
cmp
jns
pusha
(bad)
shl
ins
xchg
cmp
push
push
loopne
adc
pop
test
jne
push
retf
jle
sub
bound
inc
neg
ja
push
add
loopne
add
or
jecxz
inc
fcom
sub
inc
mov
lea
inc
and
inc
adc
adc
add
xchg
jmp
push
and
mov
pop
xchg
mov
daa
es
add
sbb
xchg
(bad)
sbb
and
not
ret
inc
pusha
sbb
sub
sbb
adc
out
sub
ret
(bad)
sti
adc
mov
nop
test
addr16
pop
cmp
out
das
mov
test
mov
or
cmp
and
mov
std
add
push
push
xchg
fisub
pop
leave
add
outs
jnp
imul
inc
pop
mov
ins
xor
adc
mov
mov
or
mov
add
sub
push
dec
or
gs
push
mov
lods
xor
and
aam
push
fisttp
pop
loope
lods
xchg
add
adc
dec
pop
push
push
sbb
jmp
jae
or
dec
fldcw
adc
imul
pop
xchg
fisubr
cmp
add
or
xor
xchg
hlt
cmps
xchg
pop
push
push
fs
jmp
popf
pcmpeqb
dec
jne
loopne
leave
mov
adc
push
cld
push
inc
inc
(bad)
sbb
int3
pop
cmp
ret
iret
inc
clc
mov
ficom
popa
push
dec
std
or
mov
cs
pop
lmsw
mov
adc
cmp
mov
pop
jmp
js
loopne
jg
pop
cmps
pushf
fs
or
and
lahf
mov
push
aaa
cmps
push
mov
jmp
(bad)
xlat
scas
sbb
or
scas
mov
pop
mov
mov
(bad)
push
jmp
xchg
ss
das
add
xor
push
or
div
xor
int3
sub
outs
pop
retf
inc
add
imul
arpl
xchg
push
popf
and
or
mov
add
mov
adc
out
fnsave
or
fimul
dec
xor
aaa
xchg
jmp
or
adc
xchg
and
mov
cmp
mov
pop
dec
ret
(bad)
jmp
rol
in
cmp
adc
fadd
pop
or
test
or
cmps
inc
test
inc
mov
adc
mov
xor
xor
pop
das
repnz
ins
pop
jle
adc
imul
jb
lods
fs
mov
inc
push
sbb
fnsave
dec
mov
pop
xchg
retf
in
or
cwde
adc
popf
and
test
lea
sub
int3
push
imul
push
xor
push
mov
xchg
pop
cs
js
test
pop
adc
in
mov
je
aam
mov
cmps
inc
dec
jecxz
jg
inc
or
mov
retf
popa
imul
rcr
fdivrp
inc
fld
fcom
pop
and
push
icebp
lock
inc
add
das
shl
inc
xchg
daa
sub
(bad)
aad
test
or
lahf
jmp
and
aas
(bad)
mov
jmp
or
mov
das
inc
scas
fs
dec
adc
pusha
test
in
stos
xor
fcom
es
in
cmp
dec
inc
sub
dec
and
lahf
dec
enter
and
inc
mov
cmp
and
(bad)
sbb
add
cdq
jecxz
jb
sub
xchg
mov
sub
push
dec
mov
sbb
sub
aaa
imul
jmp
sub
and
jnp
sbb
xchg
gs
fbld
call
cwde
pop
loopne
cmp
or
sub
adc
fucom
dec
sbb
dec
je
imul
sar
push
imul
jno
stos
sbb
mov
adc
pop
pop
jne
xor
call
or
or
aaa
mov
fbstp
daa
xor
inc
outs
mov
add
jp
adc
pop
pop
adc
movs
sbb
mov
cmp
jecxz
(bad)
pop
nop
lods
(bad)
sbb
cmovle
cmp
add
dec
loop
nop
push
je
add
adc
mov
outs
jo
cld
xchg
or
mov
xor
mov
sub
inc
pop
sub
dec
fld
or
adc
push
out
or
bnd
and
adc
sub
or
push
pushw
std
xchg
xor
js
push
(bad)
xor
imul
pop
jmp
push
add
call
mov
js
mov
xchg
xchg
or
data16
pop
mul
lea
or
adc
push
mov
jecxz
xchg
or
pop
xchg
popf
nop
xchg
pop
mov
add
mov
adc
into
xchg
(bad)
pushf
rcl
daa
cmp
repnz
lea
xchg
neg
push
and
or
mov
xor
pop
out
adc
push
adc
mov
jns
arpl
inc
in
stos
add
imul
not
sbb
cmp
dec
retf
push
push
or
fwait
mov
add
xor
jne
and
dec
loope
cdq
rcr
pop
and
repnz
ss
fisttp
adc
hlt
cmp
mov
push
sbb
mov
mov
push
(bad)
inc
and
xchg
mov
inc
das
cmp
movs
dec
jecxz
dec
mov
sub
inc
aas
or
cld
pop
call
sub
and
sub
mov
pop
and
sub
popa
dec
ja
int
jnp
cmp
pop
ficomp
fmul
fnsave
and
pop
(bad)
or
inc
dec
pop
out
lahf
dec
inc
cmp
jecxz
push
jmp
imul
pop
leave
inc
add
adc
mov
xchg
outs
enter
sub
aam
dec
mov
jns
pop
sub
push
movs
xchg
jle
xchg
in
or
xchg
jno
(bad)
add
fmul
enter
test
inc
test
push
sbb
xchg
nop
cwde
sub
push
xor
mov
inc
enter
mov
xchg
xchg
pusha
mov
adc
pop
add
xchg
mov
imul
push
and
xchg
inc
xor
push
lea
jo
jg
push
ss
popf
cmps
addr16
mov
shr
movs
push
(bad)
ins
inc
push
cmp
test
fcom
movs
cdq
jge
adc
adc
iret
adc
sbb
jmp
or
hlt
add
dec
rcl
add
mov
inc
pop
lea
xor
cli
adc
add
or
ret
cmp
jae
xor
jnp
and
out
jge
xor
xchg
xor
or
in
or
mov
sbb
sub
cmp
mov
or
sbb
add
mov
loop
ins
pop
jmp
mov
(bad)
leave
inc
or
movs
push
push
lods
add
out
adc
or
retf
add
adc
xchg
jecxz
sub
dec
xchg
add
loopne
xor
adc
(bad)
pop
cwde
cmp
imul
add
sbb
pop
sub
cmc
mov
push
xor
shr
outs
xor
movs
jne
sbb
aaa
sub
dec
rol
stos
iret
mov
fcmovb
clc
push
cdq
and
dec
push
lock
add
rcl
test
daa
adc
bound
mov
and
and
inc
cmps
mov
or
jp
add
push
cmps
mov
xchg
dec
adc
sbb
sub
and
scas
lahf
dec
sub
and
lahf
loope
stos
ss
int
test
push
lds
xchg
js
mov
or
aam
adc
cmp
or
xor
shl
push
push
push
and
xor
loopne
pusha
nop
and
or
lea
mov
je
bound
cmp
movs
dec
jb
dec
movs
add
popf
push
pusha
outs
dec
pusha
mov
mov
xchg
enter
or
mov
repnz
fwait
jo
push
add
xor
sub
or
mov
push
xchg
fsubr
rol
pushf
dec
fstp
xchg
sbb
mov
inc
stos
or
aas
call
push
xor
mov
inc
dec
ds
fs
add
jnp
mov
popa
mov
sub
addr16
repnz
push
fs
and
mov
arpl
and
push
popa
and
dec
xchg
xor
add
fbstp
push
ror
pushf
xor
cmc
push
pop
and
adc
and
xor
and
bound
pop
imul
mov
xchg
hlt
sub
(bad)
mov
in
dec
cmp
fwait
xchg
retf
jmp
test
lock
add
and
pop
cmps
mov
ins
jb
adc
inc
popa
or
jb
popa
inc
(bad)
push
mov
xchg
pop
pop
(bad)
pop
mov
jmp
lods
sub
push
mov
jb
and
push
enter
hlt
cdq
dec
les
mov
cmp
fimul
imul
addr16
setge
xchg
cld
nop
mov
adc
push
or
and
cmc
sub
xor
clc
lods
enter
pusha
push
mul
mov
iret
test
add
and
pop
pop
inc
pop
cmp
cdq
js
push
in
divps
popa
pop
xlat
mov
xlat
cmovl
cdq
push
adc
push
push
or
ins
sub
push
nop
adc
jbe
aad
ja
les
mov
test
jbe
cmc
popa
or
cmps
cmps
or
or
bound
push
xor
test
add
ret
jmp
xor
ss
jmp
push
xor
test
jge
mov
jmp
or
mov
stos
daa
cwde
mov
lea
out
xor
movd
out
(bad)
and
shl
adc
xchg
fmul
or
dec
je
and
mov
gs
ja
or
jno
outs
aad
cmp
xchg
sbb
jecxz
jnp
inc
add
test
std
iret
cmp
xchg
cmps
cs
push
fs
(bad)
dec
add
popa
mov
mov
pop
call
push
ds
mov
or
leave
ja
popa
mov
sub
push
ss
dec
daa
xchg
xchg
mov
xchg
or
dec
mov
dec
mov
dec
sub
sub
or
popa
int3
pop
xchg
lods
push
jne
jno
mov
mov
mov
push
and
frstor
pop
inc
add
test
lahf
and
pop
inc
imul
adc
addr16
pop
movs
pop
or
sti
xchg
dec
bound
mov
aaa
shl
xchg
add
mov
aaa
outs
jg
clc
fld
fidivr
clc
stc
push
ficom
pop
jg
(bad)
clc
mov
aam
or
ins
rcr
icebp
xchg
aad
les
or
sub
pop
and
js
and
sbb
in
pop
push
push
movs
pushf
pushf
pop
cmps
inc
adc
inc
add
lods
add
imul
pop
sbb
pop
add
nop
pop
pop
xchg
dec
lds
sub
outs
xor
adc
scas
and
fsubr
push
cmp
out
out
adc
jne
(bad)
dec
pop
adc
lods
test
mov
sbb
push
rol
lods
adc
pop
mov
add
sbb
adc
jne
das
pop
test
add
inc
or
inc
or
sbb
xor
adc
mov
mov
sbb
inc
mov
test
nop
aam
rcr
aam
push
mov
push
add
pop
(bad)
mov
add
dec
sub
es
push
mul
mov
lock
sbb
inc
rcl
adc
sub
cmps
lock
mov
and
jmp
xchg
add
aad
retf
jno
in
imul
push
dec
xchg
call
pop
div
cmps
add
push
mov
add
fild
and
cwde
fwait
or
xor
push
adc
hlt
mov
or
sub
fwait
dec
xchg
adc
cmp
int3
push
or
rcr
jbe
clc
dec
or
lods
xchg
jo
xchg
test
sahf
inc
(bad)
mov
or
and
inc
loopne
xchg
iret
mov
aad
mov
mov
push
xor
mov
push
adc
add
sbb
sbb
add
jnp
(bad)
adc
adc
inc
cs
add
out
cmove
je
dec
push
test
mov
sub
sbb
inc
mov
jbe
aaa
xor
gs
or
or
xchg
outs
mov
in
mov
dec
adc
fcom
dec
jns
mov
mov
and
and
or
test
fwait
jg
mov
fldenv
xchg
nop
sub
in
mov
push
inc
inc
and
pop
xor
and
mov
or
push
add
sbb
popa
sbb
outs
pop
pop
fadd
fmul
push
and
sbb
loop
pop
inc
mov
jb
sub
adc
jge
inc
pop
or
ror
sbb
add
mov
ror
popf
rcr
or
iret
rcl
aam
std
pop
movs
jb
add
sbb
test
call
mov
xchg
fwait
mov
outs
push
inc
adc
xor
jne
add
jno
sub
push
movs
call
jmp
(bad)
sbb
or
lahf
mov
movs
or
push
sbb
ins
sbb
sbb
dec
xchg
test
jmp
scas
cmp
mov
test
inc
cmp
stos
add
or
sub
or
rol
nop
push
cs
adc
jmp
pop
pop
dec
sbb
gs
dec
push
loop
sbb
jno
jmp
push
inc
cwde
out
xor
bound
pop
sbb
jno
lahf
or
cdq
cmp
pop
and
and
sub
add
and
pop
cmp
dec
pusha
movs
repnz
mov
xchg
and
push
mov
ins
mov
lds
pop
enter
xchg
add
(bad)
jns
adc
push
or
add
mov
adc
mov
inc
sub
ret
dec
pop
sub
xchg
sbb
adc
pop
lahf
or
xor
cdq
add
enter
jae
pop
and
daa
xlat
inc
(bad)
call
sub
sahf
or
pusha
mov
and
repnz
or
outs
pop
in
cmp
rcl
(bad)
pusha
and
mov
gs
test
sbb
push
or
jne
aas
push
mov
add
push
or
or
xchg
inc
dec
pusha
mov
or
pop
mov
and
inc
push
mov
and
push
xchg
xchg
mov
sbb
jae
ret
inc
mov
jmp
adc
out
daa
mov
mov
add
and
pop
call
sub
add
add
in
pop
sti
jo
xchg
sub
sbb
loope
xchg
push
scas
inc
das
and
test
add
je
adc
adc
mov
dec
rol
xor
inc
pop
or
add
les
adc
cwde
mov
movs
rcl
push
pop
cmps
shl
mov
mov
pop
sbb
or
dec
push
cmps
cmp
sub
xor
add
rol
inc
pop
cmp
les
jbe
or
jg
stos
jae
push
jmp
add
imul
add
in
mov
dec
xchg
or
xchg
inc
(bad)
pop
aas
inc
or
and
ret
xchg
mov
xor
int
mov
mov
fwait
sar
hlt
stos
rcl
mov
push
xchg
or
push
jmp
(bad)
aad
outs
pop
int3
cmps
inc
ins
jg
inc
fild
daa
test
sbb
xchg
shl
rol
ss
push
jg
sbb
cmps
push
jns
leave
or
xchg
rcl
add
das
loope
scas
add
jne
xor
dec
pop
scas
test
mov
movs
xchg
call
dec
add
retf
movs
jne
mov
mov
into
test
jmp
lods
jecxz
xor
sub
fwait
pop
push
mov
cmp
pop
pop
add
mov
push
xchg
cmc
push
hlt
arpl
or
movs
dec
inc
scas
mov
or
data16
add
pop
inc
pop
xchg
push
gs
add
aaa
je
mov
mov
cld
sbb
add
icebp
in
dec
retf
or
push
fwait
adc
cmp
das
and
imul
(bad)
cwde
mov
pop
xchg
movs
pop
mov
ins
lfs
xchg
leave
test
enter
dec
cmp
test
push
push
or
mov
sub
call
mov
aaa
lods
sub
fucom
mov
pop
adc
push
(bad)
in
adc
call
enter
out
sbb
jb
add
(bad)
dec
add
pop
add
jl
popa
in
fisub
clc
pop
dec
pop
and
mov
dec
and
inc
or
loope
pop
cs
out
lock
loopne
xchg
mov
fdivr
mov
sbb
and
outs
mov
ja
hlt
sbb
sbb
sub
inc
inc
push
or
push
or
popa
mov
inc
fwait
sbb
add
sub
push
jns
cmp
pop
jmp
dec
push
rol
or
add
mov
daa
or
pop
pop
jb
xchg
add
call
push
mov
xchg
stc
jmp
fneni(8087
popf
sbb
xor
rcl
js
xchg
test
and
call
xchg
add
nop
in
pop
pushf
inc
jmp
mov
mov
je
pop
loope
retf
in
xor
cwde
pop
push
in
jg
sti
dec
jecxz
loope
jmp
adc
lds
lea
jbe
or
pop
lock
cdq
inc
adc
inc
pusha
leave
push
adc
repz
dec
mov
sbb
gs
lahf
dec
gs
xchg
dec
dec
aam
cwde
dec
and
in
cmp
mov
aam
lahf
paddw
jmp
(bad)
dec
push
sbb
cmp
jecxz
aaa
ja
push
jg
add
or
jge
clc
adc
add
xor
fsubr
test
mov
cmp
or
das
shr
loopne
fmul
outs
ins
ss
push
mov
xor
pop
push
pusha
sbb
fsubr
cmps
outs
dec
shl
call
xchg
inc
call
push
inc
inc
inc
int3
lea
cmc
(bad)
rol
mov
lahf
push
(bad)
lock
ins
fistp
inc
adc
or
pop
movs
and
into
test
inc
call
test
add
cli
inc
arpl
jo
jge
clc
xchg
xor
es
inc
add
or
imul
and
dec
sub
dec
fsubrp
aaa
mov
mov
aad
mov
retf
lahf
shr
je
(bad)
or
in
jbe
push
pop
test
mov
push
nop
aam
mov
mov
dec
push
pop
(bad)
cmp
sbb
inc
test
or
or
je
test
mov
popf
push
cwde
dec
cmp
sub
cmp
sbb
fcomp
xchg
xor
pop
jp
imul
or
push
fcomp
repz
imul
dec
sub
dec
cdq
ret
dec
inc
call
sub
xchg
in
fiadd
inc
bound
aaa
add
lods
mov
adc
pop
bound
and
jl
in
push
and
pop
loopne
mov
mov
call
jnp
and
mov
push
pop
loope
nop
mov
push
xchg
dec
aam
pop
rcl
mov
add
addr16
ret
jmp
adc
xchg
(bad)
xor
hlt
movs
out
jmp
push
jno
dec
and
pop
xchg
fst
int3
int3
sar
ja
shr
push
pop
dec
call
aad
adc
in
nop
xchg
mov
lahf
xlat
ret
ret
dec
dec
scas
mov
(bad)
std
push
lods
pop
add
or
cmp
dec
in
add
rol
icebp
clc
jae
mov
pop
inc
jmp
mov
das
aam
push
push
adc
fist
pop
out
(bad)
mov
jno
xchg
jo
(bad)
xchg
dec
(bad)
scas
retf
cmps
mov
mov
adc
nop
call
inc
mov
adc
mov
mov
xor
xor
and
and
jno
shl
in
mov
pop
(bad)
inc
and
pop
add
push
cmp
or
cmp
jmp
inc
call
pop
mov
fs
dec
xchg
and
mov
mov
cmps
xor
adc
jge
imul
pop
fnsave
arpl
ja
cwde
sub
mov
pop
sub
xchg
fistp
aam
adc
ds
daa
lahf
push
push
pop
(bad)
push
jns
mov
test
ret
mov
jge
and
mov
js
mov
inc
sahf
dec
pop
add
shl
cmp
and
push
ins
sub
sahf
mov
mov
xor
(bad)
outs
addr16
mov
sub
sub
in
lods
daa
cmc
test
push
loope
add
jo
pop
lds
sbb
sbb
ds
cwde
cmp
and
adc
pusha
ja
popf
jg
and
rcl
jge
loope
push
jge
xor
test
ret
pop
scas
or
arpl
push
xor
lahf
(bad)
push
sub
add
test
jne
sub
mov
pop
add
sbb
dec
out
pop
sbb
mov
loope
jp
ret
adc
dec
mov
cmp
xor
out
cwde
or
aam
dec
cmp
push
push
int
repz
(bad)
mov
xchg
jl
outs
inc
cmp
rcr
add
pop
sub
outs
hlt
aaa
push
daa
fcmovnbe
rcr
bound
xchg
jno
pop
not
js
push
ret
in
sub
(bad)
inc
xor
call
(bad)
and
pop
pop
sbb
in
add
loopne
mov
pushf
xchg
outs
and
mov
add
pop
or
(bad)
ja
mov
and
ret
icebp
add
and
out
or
bound
jne
lods
dec
push
pop
add
(bad)
dec
cmp
dec
xchg
xor
scas
push
mov
add
imul
stos
movs
fs
aaa
ins
xadd
pop
dec
mov
aas
add
sbb
imul
div
clc
cs
rol
push
mov
jp
adc
je
sbb
dec
sbb
ret
push
dec
inc
cdq
fiadd
cmp
jbe
pop
and
pop
add
xchg
and
xor
xchg
xchg
adc
nop
adc
sub
leave
sub
mov
push
and
pop
cmps
pusha
sub
popa
xlat
rcr
mov
sti
movs
test
sub
dec
pop
(bad)
in
push
cmc
jmp
push
jge
dec
inc
ror
push
or
dec
jle
cs
xor
add
les
cli
or
dec
call
imul
push
(bad)
arpl
loopne
mov
stos
mov
sub
jns
lods
xchg
fist
punpckldq
repz
add
loope
shr
inc
jl
add
ficomp
and
adc
ret
sbb
mov
adc
pop
(bad)
and
mov
inc
scas
rol
xchg
mov
mov
cmp
mov
loopne
mov
in
cs
loopne
loopne
je
inc
mov
test
pusha
xchg
dec
jns
push
adc
lock
mov
mov
inc
xchg
test
addr16
xor
or
ins
or
add
add
scas
xlat
fisub
jmp
push
ja
adc
(bad)
sub
push
pop
pop
enter
outs
cs
dec
xchg
xor
hlt
jae
repnz
aam
add
dec
sub
push
leave
aam
add
(bad)
loop
dec
cs
in
hlt
jbe
stos
cmps
sub
push
ss
push
mov
mov
lea
mov
std
xlat
movs
or
in
dec
inc
jmp
dec
lds
pop
adc
adc
mov
sbb
xchg
pop
mov
add
jg
sbb
js
push
or
push
inc
mov
rcl
and
or
adc
out
xor
mov
push
jno
(bad)
and
imul
pop
jmp
mov
xlat
dec
movs
fcomp
mov
push
mov
xchg
xchg
xchg
sbb
jle
sbb
jl
pop
and
sbb
and
es
xchg
xchg
or
or
fisttp
(bad)
jecxz
pop
add
das
lea
add
sub
fwait
adc
add
lock
retf
fistp
inc
jl
dec
add
in
add
and
mov
jge
xor
aad
cwde
xlat
jl
scas
add
fld
xchg
pusha
movs
add
adc
push
jo
add
ss
and
mov
pusha
test
xor
je
lods
push
xchg
add
add
xor
ret
adc
xchg
xchg
(bad)
push
or
mov
es
xor
retf
nop
cdq
fstp
inc
or
dec
and
sbb
pop
out
shl
fsubr
gs
in
sbb
push
or
in
ins
push
add
push
pop
aas
outs
cmps
xor
jae
lds
pop
inc
mov
adc
sub
pushf
(bad)
jns
and
xchg
mov
lock
inc
dec
arpl
dec
sub
mov
repz
add
mov
ret
push
and
mov
jo
sub
les
popf
sbb
fcom
cmp
adc
mov
clc
ret
fadd
push
inc
hlt
imul
cmp
pop
sti
test
mov
or
in
popw
sub
or
retf
cld
xor
outs
movs
sub
pop
sub
sub
pop
pop
mov
add
fst
xchg
mov
or
ins
cld
add
pop
jmp
test
add
fwait
sbb
lods
xchg
cmps
lea
push
sbb
mov
loopne
test
sbb
mov
shr
sub
mov
jno
cmps
sbb
add
add
jle
push
aas
add
shl
mov
fsubr
xlat
adc
push
dec
cmps
add
adc
or
add
mov
jp
xchg
pusha
inc
push
outs
xchg
or
push
xchg
test
inc
les
pop
adc
mov
sbb
add
xor
dec
inc
inc
and
adc
addr16
and
sub
jg
sbb
ss
imul
push
pop
(bad)
pushfw
(bad)
out
sub
test
ins
push
dec
hlt
push
inc
mov
push
dec
mov
or
out
or
push
sbb
push
pop
fld
add
add
fcmovnu
sbb
cli
mov
sub
adc
sbb
lods
leave
cmps
(bad)
inc
inc
(bad)
and
and
jne
or
add
bound
loopne
and
mov
femms
jmp
push
in
sbb
jmp
outs
xor
mov
push
loopne
fist
fstp
fwait
loopne
sahf
cmps
or
enter
or
sbb
mov
ins
loopne
rol
push
dec
ss
push
push
fdiv
cmc
jmp
jecxz
ror
mov
add
push
dec
sbb
pop
or
and
push
aas
mov
stos
fild
jg
cli
imul
bound
adc
iret
fs
and
jmp
and
add
add
xchg
adc
adc
addr16
push
or
jp
mov
and
je
mov
jecxz
inc
fucomip
ret
dec
and
push
and
adc
sbb
inc
push
or
mov
ss
or
inc
jge
cld
pop
movs
loope
nop
push
jne
and
push
daa
or
adc
adc
movs
mov
nop
push
inc
mov
and
adc
mov
retf
out
adc
push
push
mov
(bad)
sbb
popa
adc
or
dec
aaa
outs
and
arpl
(bad)
enter
xor
dec
add
icebp
add
icebp
push
jmp
movs
pop
xor
push
sub
cmps
mov
inc
call
mov
mov
je
cmc
and
es
fwait
pop
test
in
add
seta
aaa
push
dec
and
pop
and
inc
push
ror
or
mov
aad
cmp
mov
daa
jmp
out
pop
dec
add
es
cmp
ret
ins
mov
fisubr
push
xor
or
mov
addr16
inc
and
mov
fs
ror
mov
and
jp
arpl
mov
test
mov
fld
adc
pop
mov
sub
sbb
rcl
sar
mov
adc
les
adc
mov
stc
in
mov
mov
or
mov
dec
xchg
(bad)
cld
imul
(bad)
cmps
in
retf
imul
pusha
mov
in
pushf
test
push
add
outs
sbb
push
mov
jo
pop
add
mov
nop
cmovb
rol
mov
pop
cdq
les
push
mov
sub
mov
mov
mov
xchg
xor
mov
fdivr
in
jne
push
xor
movs
out
jmp
(bad)
mov
xchg
cmp
popf
fidivr
adc
iret
pop
xchg
mov
adc
iret
mov
jmp
sar
lds
xor
sahf
inc
movs
in
mov
jns
fadd
popa
jae
movs
daa
lds
imul
xchg
inc
arpl
or
xchg
test
mov
inc
out
add
and
out
(bad)
adc
clc
cmp
test
add
push
rcl
mov
in
call
pop
sbb
and
enter
cs
test
loopne
dec
adc
inc
(bad)
popf
mov
add
adc
mov
lods
jo
out
sub
dec
or
mov
xor
rcl
fnsave
test
pop
leave
and
rol
cld
or
dec
in
enter
call
aaa
lock
add
mov
and
fld
test
xchg
mov
inc
jbe
sbb
push
jne
push
mov
fidiv
loopne
idiv
loope
inc
dec
clc
or
xor
dec
inc
clc
leave
xlat
dec
jb
or
pop
add
adc
in
pop
imul
dec
outs
(bad)
lock
scas
xor
test
push
stos
push
sub
sahf
(bad)
shl
jmp
adc
sbb
inc
or
add
sbb
add
dec
or
lods
xchg
mov
arpl
cwde
lods
adc
xchg
push
push
push
retf
or
xchg
ret
in
and
add
test
int
mov
sub
push
mov
hlt
or
dec
loop
sub
pop
jnp
jno
inc
pop
daa
add
dec
dec
in
dec
inc
add
ins
mov
and
fcmove
daa
cdq
daa
mov
iret
hlt
and
dec
icebp
mov
xor
movhps
pusha
sub
add
pop
pop
jo
or
or
retf
mov
mov
add
and
test
movq
daa
push
loope
adc
daa
mov
or
lock
sbb
rcr
sub
and
fcomi
jl
inc
jb
hlt
setne
fwait
xor
sbb
movs
nop
test
mov
sub
stos
lock
xchg
loopne
(bad)
adc
push
fbld
add
jg
adc
movs
hlt
mov
adc
sbb
pusha
push
popa
out
enter
popf
pop
scas
or
or
fld
ins
es
dec
push
mov
rcl
jp
(bad)
cmp
adc
rcl
mov
sbb
or
and
adc
push
or
adc
test
xor
add
add
xchg
inc
push
add
xor
test
daa
dec
clts
push
arpl
dec
pusha
push
in
sub
and
ja
jns
sbb
outs
iret
pusha
or
mov
shr
add
xchg
nop
enter
rcl
and
mov
test
mul
sbb
xor
sahf
adc
loopne
ins
(bad)
xlat
dec
sub
push
nop
pop
call
lock
or
(bad)
adc
shl
or
sub
lock
add
and
pop
ins
adc
mov
pop
xor
cmp
mov
push
mov
pop
or
mov
popa
imul
push
adc
lgs
mov
nop
pop
and
cmp
pop
adc
xor
daa
jg
sub
sub
das
in
pop
jge
or
pop
into
add
cmp
jmp
or
add
popa
push
xor
pop
daa
push
test
mov
leave
fild
sbb
jp
push
mov
push
movhps
add
mov
or
and
enter
cli
dec
or
bound
cwde
mov
rdmsr
xchg
dec
inc
and
add
call
and
push
fcomp
xchg
sub
nop
out
jmp
inc
cwde
add
enter
mov
neg
fwait
aas
adc
pop
mov
inc
cmp
pop
cmp
mov
or
mov
clc
fbld
rcr
sub
rcl
mov
mov
push
sbb
clc
jmp
cmp
xchg
sbb
push
rcl
test
dec
mov
scas
je
aam
clflush
sbb
dec
inc
cs
push
add
mov
mov
jge
adc
sbb
lds
sbb
push
pop
retf
inc
daa
inc
or
scas
je
or
dec
xchg
leave
ins
inc
xchg
lmsw
jb
clc
cmp
aad
dec
jae
lock
jecxz
sbb
sbb
ret
add
push
aas
ja
and
imul
popa
or
lea
or
mov
mov
add
hlt
mov
inc
clc
bound
fs
bound
xor
xor
pop
adc
fst
dec
int
push
(bad)
inc
(bad)
enter
adc
or
mov
xor
adc
inc
inc
and
push
es
xor
retf
int3
xchg
push
adc
add
add
test
mov
imul
push
mov
mov
mov
add
push
or
xor
loopne
add
add
imul
add
or
push
icebp
or
mov
or
movs
sub
sub
push
pop
(bad)
adc
adc
adc
call
adc
nop
and
push
(bad)
dec
xchg
nop
enter
ret
fbld
loopne
fcomp
lock
cwde
add
cmp
(bad)
scas
sbb
inc
or
mov
or
pop
mov
mov
sub
xor
pop
pop
dec
adc
inc
push
adc
ret
aam
adc
es
push
nop
mov
or
mov
cmc
jnp
adc
inc
je
sub
xchg
xchg
xchg
outs
add
inc
inc
jp
mov
or
lea
aad
rcr
pop
push
ins
sbb
lea
adc
jge
rcl
sub
dec
in
mov
lock
mov
xor
cld
sbb
push
rol
fdiv
nop
push
pop
push
cmp
mov
pop
jo
fadd
outs
arpl
stc
push
push
jge
adc
and
pop
dec
jnp
das
mov
and
cmp
nop
and
ret
in
xor
xchg
bound
cmc
sub
mov
lahf
ror
mov
sbb
and
mov
pop
inc
lds
dec
and
inc
push
mov
pop
xchg
sub
pop
in
aaa
adc
(bad)
pop
mov
test
adc
sub
lahf
xchg
inc
cmps
lock
sahf
or
xchg
movs
inc
xor
mov
dec
popa
pmuludq
data16
cmp
or
push
imul
out
push
or
add
inc
test
xor
mov
push
push
sbb
inc
xor
jne
cmp
adc
jmp
mov
fadd
(bad)
pushf
pushf
ins
sub
dec
pushf
or
idiv
jb
ror
push
mov
jg
(bad)
xor
and
in
mov
dec
and
test
mov
out
stos
mov
dec
push
or
adc
dec
ret
ror
and
in
call
imul
or
mov
aaa
and
hlt
or
add
mov
mov
cld
lods
xchg
inc
push
pop
sub
mov
dec
sub
out
add
sub
sar
adc
sar
push
add
popa
sub
movs
add
rcr
and
outs
add
rcl
jnp
xor
dec
addr16
push
lods
out
je
shl
(bad)
nop
cmps
xor
mov
rcl
inc
inc
popa
and
pop
push
or
jmp
bound
(bad)
dec
sbb
sub
outs
mov
loop
mov
sbb
dec
add
or
inc
call
out
rol
leave
xchg
mov
(bad)
sbb
dec
daa
adc
iret
or
adc
inc
clc
(bad)
jle
test
dec
(bad)
pop
pop
std
push
or
cwde
or
push
lock
aad
mov
scas
and
xchg
jne
jnp
iret
es
push
xor
push
adc
popf
in
mov
xchg
add
mov
nop
pop
push
movs
add
leave
inc
ja
sub
inc
out
pop
(bad)
call
movs
outs
outs
das
inc
loop
sub
or
mov
or
push
mov
cmp
adc
sbb
and
inc
sub
fisub
mov
cmp
popa
dec
inc
and
cmp
and
pop
xor
rcl
cmp
daa
add
or
sub
rcr
fs
lahf
sti
sub
cmp
bound
pop
jnp
pusha
movs
jno
xchg
out
pop
add
hlt
xor
jnp
sbb
sub
add
call
sar
inc
imul
add
dec
pop
jecxz
out
xor
dec
xchg
inc
xor
push
dec
aaa
xchg
retf
repz
jne
scas
lods
hlt
dec
xlat
xor
or
xor
ins
xor
add
loopne
inc
aaa
xchg
inc
cs
adc
call
call
fsub
je
call
aaa
add
test
mov
pop
dec
xchg
gs
cmp
not
test
test
pop
(bad)
or
fsubr
or
inc
pop
or
ins
sub
daa
sbb
rcr
ret
sar
lea
movs
ins
xor
xor
add
fwait
dec
iret
repnz
pop
rcl
shl
jmp
push
nop
and
lock
cs
(bad)
pushf
fistp
sub
sub
out
add
mov
and
call
pop
jle
push
and
imul
(bad)
mov
jp
or
or
les
ficom
add
(bad)
jle
iret
add
test
js
in
jmp
dec
in
push
aam
adc
or
jl
add
mov
mov
push
daa
jnp
ret
cmps
push
enter
push
mov
dec
jns
js
and
jmp
add
sbb
sub
pop
mov
pop
fisubr
xor
out
(bad)
loope
std
test
out
ret
jnp
cmp
push
aaa
and
int
and
(bad)
jb
add
les
add
dec
mov
dec
xor
inc
or
cmp
rol
mov
lds
mov
loop
and
dec
sub
add
adc
outs
dec
or
shr
ret
jle
ret
inc
das
cmp
clc
das
mov
ret
add
cs
(bad)
xchg
jmp
push
ja
iret
adc
push
dec
pop
call
arpl
xchg
or
adc
lods
mov
xor
dec
retf
inc
pop
mov
test
lds
pop
inc
push
sub
(bad)
mul
dec
adc
cmc
or
inc
adc
cmp
outs
jmp
inc
dec
inc
ret
inc
daa
pop
mov
sbb
pop
or
sbb
mov
test
pop
outs
mov
gs
mov
adc
inc
inc
or
sub
fmul
dec
leave
rcr
inc
movups
lods
xchg
cmp
sub
lods
and
xchg
out
inc
add
jns
lds
add
frstor
imul
pop
mov
(bad)
cli
push
lock
ins
dec
xchg
ret
sub
mov
dec
mov
and
or
das
(bad)
push
push
fs
adc
cmc
hlt
mov
jne
push
xchg
fisttp
dec
cwde
xor
xor
dec
hlt
add
xchg
fs
(bad)
dec
and
inc
call
outs
(bad)
out
cmc
add
repz
ret
rol
fst
sar
or
push
jno
int
movs
xchg
inc
popa
mov
fisttp
fadd
inc
lea
movs
xchg
popa
pusha
movs
xor
jae
dec
repnz
cmp
fimul
adc
jbe
xor
adc
inc
mov
inc
mov
scas
add
out
out
bound
inc
push
inc
in
push
and
cld
cld
cdq
rcr
xchg
sub
xor
les
lahf
xchg
fcom
sbb
and
lahf
cmp
lock
add
pop
mov
mov
jmp
cmp
dec
and
sub
jo
fs
adc
push
ins
jle
(bad)
add
inc
unpcklps
dec
dec
and
mov
inc
dec
icebp
or
adc
pop
pop
addr16
sbb
mov
mov
mov
sahf
daa
loopne
ret
test
cld
add
push
xchg
mov
cs
into
xor
adc
sbb
and
movs
fisubr
or
leave
imul
sbb
nop
pop
inc
mov
cmps
push
or
ins
mov
mov
and
repnz
push
iret
inc
test
stos
rol
neg
push
shl
lock
add
lods
ret
push
add
or
shl
gs
mov
mov
stc
jbe
xchg
movs
pusha
jo
inc
jb
adc
cld
lahf
shl
push
xchg
je
mov
push
cs
stos
xchg
neg
add
jne
and
pop
or
lea
pusha
rcl
es
fbld
inc
daa
sbb
inc
mov
fsub
and
push
dec
in
sbb
pop
xor
sub
pop
or
push
cmp
inc
retf
test
sbb
inc
sub
jmp
mov
daa
jl
dec
or
shl
popf
jno
mov
lock
sub
test
cmp
addr16
inc
mov
jecxz
movs
push
cmc
mul
popf
mov
push
pusha
(bad)
jmp
adc
adc
mov
jne
sar
adc
out
mov
popf
add
push
shl
jnp
lock
push
pop
sbb
pushf
into
or
inc
adc
adc
jne
and
add
and
out
xchg
xchg
pop
mov
movs
add
xchg
lods
call
int
cmp
ret
test
sbb
xor
adc
cmps
sub
pop
sub
outs
pop
mov
stos
xor
loop
fxch
sbb
push
fmul
mov
sub
pusha
(bad)
jmp
leave
dec
inc
cld
cld
inc
push
fs
arpl
div
dec
or
or
or
imul
shl
out
mov
movs
movs
(bad)
push
iret
loop
add
cmp
pop
scas
xchg
mov
xor
adc
mov
sahf
(bad)
aam
es
inc
xchg
outs
and
push
add
in
(bad)
neg
ret
mov
ins
mov
sbb
gs
jne
cmps
inc
sbb
adc
pop
sub
inc
or
cmp
mov
frstor
popf
pop
cmp
jb
ins
xchg
push
mov
dec
inc
xor
je
cmps
adc
xchg
mov
pmuludq
push
xchg
mov
inc
les
movs
ror
mov
push
clc
pop
clc
xlat
aam
ror
xor
or
clc
inc
or
adc
loope
jo
pop
shl
minps
imul
lods
mov
test
jg
adc
ret
add
sar
int3
enter
sub
(bad)
push
add
add
adc
mov
in
inc
pop
add
jl
(bad)
mov
(bad)
or
and
bsf
and
inc
pop
aad
xchg
adc
fs
(bad)
repnz
push
inc
or
mov
sbb
push
(bad)
shr
ins
adc
cmp
mov
loope
ret
pop
xchg
out
or
dec
xchg
push
test
js
pop
popa
jne
xchg
arpl
test
(bad)
ins
nop
test
ret
mov
pop
pop
in
push
push
sbb
sub
adc
popf
jge
push
add
sbb
cmp
mov
inc
shr
adc
pop
cmp
lock
mov
test
movs
inc
jae
repnz
rol
and
fs
fmul
push
inc
cmp
cmp
inc
add
cdq
sub
xor
js
and
enter
mov
js
lea
add
add
push
inc
adc
and
xlat
cdq
jge
xor
loopne
(bad)
leave
jns
sahf
nop
push
inc
jns
test
mov
mov
mov
pop
dec
fst
xor
sub
lods
jns
and
and
test
add
shl
add
or
or
(bad)
arpl
inc
pop
or
adc
xchg
add
cmps
aas
jmp
aam
adc
dec
clc
and
mov
fsubr
sub
mov
dec
ja
dec
push
and
mov
or
aaa
xchg
inc
push
fcmovnu
and
out
xor
in
mov
and
leave
adc
sub
sbb
mov
ds
pop
add
loope
nop
sbb
xlat
dec
add
pusha
xor
and
xchg
add
test
push
jne
pop
xor
retf
jmp
push
pop
pop
xchg
add
or
adc
fisubr
and
mov
sub
dec
push
xor
test
push
cmp
stc
or
loop
lock
imul
test
fstp
adc
sub
jno
aas
inc
sub
mov
dec
sbb
cld
fdiv
cmp
inc
ja
cmp
in
call
cmp
mov
test
mov
inc
mov
movs
xor
loop
loopne
and
push
in
daa
rcr
push
pop
cmp
cmp
cmp
sbb
iret
in
lahf
or
in
inc
mov
mov
out
bound
mov
push
arpl
add
add
cmovl
cld
push
lock
xchg
jp
inc
jmp
mov
add
sub
cld
jp
dec
adc
jg
and
and
cmp
dec
movhps
xor
jmp
pop
mov
ins
sub
pop
cdq
push
mov
lock
xchg
push
scas
push
xchg
retf
and
iret
pop
adc
lods
inc
inc
adc
sbb
lds
adc
pop
mov
movs
fcom
xchg
push
movs
adc
inc
stos
sar
or
adc
sub
cli
jns
mov
ins
xor
xor
cmp
inc
je
pop
test
ret
movs
mov
adc
sub
jne
rol
lods
ficom
movs
adc
xor
test
fwait
and
xchg
xchg
das
jae
xchg
dec
xchg
cmp
mov
pop
cmp
xor
and
js
xor
push
ror
cmp
pop
and
ficomp
sbb
push
add
adc
add
pop
xor
pop
push
add
mov
lods
xlat
aaa
(bad)
or
sub
jmp
fld
mov
push
movzx
mov
add
test
dec
and
push
sbb
push
adc
cmp
jne
pop
test
adc
or
rcr
test
or
add
mov
inc
add
adc
iret
jp
and
push
and
adc
mov
sub
add
xor
test
xchg
daa
and
mov
int
push
xor
and
adc
xchg
test
cmp
test
sbb
adc
jbe
ss
sub
and
adc
push
dec
xchg
out
loope
sub
jno
add
aam
add
sbb
push
js
pop
pop
pop
inc
sub
or
jmp
lahf
or
xor
inc
jne
sub
mov
ja
pop
das
mov
ins
daa
jbe
pop
out
ja
cmp
stos
xor
dec
mov
lock
clc
mov
mov
call
xchg
push
pusha
jb
jne
shr
gs
mov
adc
add
add
push
or
jne
imul
add
inc
nop
or
adc
lea
adc
and
jmp
sub
fld
add
jb
jg
je
call
sub
cli
or
dec
pop
xor
sbb
push
fidiv
inc
hlt
adc
pop
lods
scas
mov
add
push
xor
gs
push
mov
in
push
push
push
and
ja
or
jae
lea
test
lahf
lea
xchg
retf
push
sbb
xor
push
xchg
sub
sub
sub
(bad)
dec
or
mov
push
xchg
test
xchg
push
popa
mov
jl
sbb
leave
stc
inc
sbb
sub
xor
add
les
aad
or
xchg
push
push
shl
mov
adc
and
test
xchg
fdivr
or
dec
pop
dec
and
loope
test
sbb
iret
inc
nop
fcomp
stos
cwde
in
pop
test
mov
jmp
mov
lods
push
ret
jecxz
adc
xor
pop
sub
pop
adc
mov
popa
fadd
out
mov
mov
cmp
lock
sbb
push
jnp
pop
retf
mov
dec
or
inc
xchg
xchg
mov
mov
xchg
sbb
mov
lock
add
and
sub
sbb
jns
and
rol
test
mov
in
(bad)
(bad)
or
xchg
pop
fxch
ret
call
(bad)
out
inc
jmp
stc
jne
sti
call
mov
dec
adc
sub
add
adc
retf
push
sub
or
inc
les
outs
adc
jo
out
pop
(bad)
adc
adc
sub
pushf
jl
cmp
sub
mov
addr16
pushf
shl
add
imul
add
je
add
into
sub
dec
arpl
inc
dec
fcom
dec
and
cmp
sti
dec
adc
in
mov
aaa
pop
push
inc
sub
inc
bound
pop
adc
leave
movs
loopne
jle
dec
jmp
fbld
xor
mov
adc
adc
sub
add
shl
ja
aas
adc
cld
lds
jbe
fstp
xchg
pop
mov
or
jecxz
mov
int
cmp
sbb
jno
mov
cld
jle
add
or
pusha
inc
out
and
xor
xor
add
bound
pop
mov
ss
jns
or
dec
mov
xchg
js
dec
add
or
inc
push
push
enter
and
jne
adc
iret
push
inc
pop
sbb
sub
add
dec
inc
adc
test
push
pop
aas
lahf
adc
into
rcl
out
push
and
mov
adc
add
add
es
fsubr
jmp
push
scas
dec
jne
jmp
sbb
loop
mov
cmp
cmp
push
or
cs
jmp
shl
arpl
and
arpl
test
xor
mov
xor
inc
or
dec
inc
popa
and
adc
or
jne
inc
imul
sbb
push
cmp
ja
dec
in
adc
mov
mov
inc
pop
pop
cmp
or
fild
xor
mov
and
lahf
mov
dec
inc
dec
pop
bound
jmp
ins
or
sub
mov
pushf
xchg
push
daa
push
dec
jbe
out
imul
(bad)
cmp
sub
push
inc
iret
pop
call
xchg
mov
rcr
add
pop
loopne
mov
outs
and
mov
push
pop
pop
mov
ins
xor
add
scas
mov
fbld
movs
dec
inc
xchg
xchg
mov
inc
cli
scas
seto
retf
dec
jmp
or
mov
push
jae
xchg
jnp
mov
and
xchg
xor
or
dec
push
sub
jae
and
sub
loopne
and
jg
es
xchg
cmp
pop
mov
xchg
ret
rol
pop
hlt
lahf
loope
pushf
pop
movs
and
dec
xlat
mov
(bad)
enter
(bad)
mov
pop
das
out
std
push
jp
or
sub
sub
dec
push
mov
das
cmps
cmp
dec
jb
and
add
cmp
adc
sti
jg
push
add
(bad)
mov
adc
loopne
jl
mov
pop
ror
xlat
jmp
cmp
xor
dec
push
dec
and
clc
sbb
sbb
push
and
test
rcr
mov
outs
das
xor
inc
lock
dec
add
or
adc
add
xchg
(bad)
push
push
cmps
mov
retf
add
aaa
push
adc
pop
bound
mov
dec
mov
aam
dec
sbb
mov
mov
jno
adc
(bad)
nop
retf
mov
push
mov
mov
in
or
xchg
inc
pop
mov
in
mov
ds
rcl
sub
sub
hlt
das
pop
in
adc
sar
sub
add
pop
xlat
stos
cwde
nop
fisubr
pop
repnz
pop
mov
cmps
aam
dec
imul
and
or
aaa
mov
sahf
mov
mov
popf
dec
mov
dec
pop
and
push
and
movs
cwde
in
sub
ret
fimul
pop
int
sti
xor
push
loop
inc
cmp
push
push
les
adc
dec
(bad)
bound
test
inc
cmps
jo
fs
sbb
or
dec
stos
fld
(bad)
cmp
scas
and
mov
loope
push
xchg
fcom
inc
adc
pop
xor
mov
hlt
or
fldenv
xor
lahf
inc
xchg
xchg
out
or
or
and
test
xchg
je
(bad)
push
(bad)
in
push
in
ret
mov
push
cli
mov
push
daa
adc
mov
js
out
mov
or
fadd
or
shl
add
and
or
shr
in
inc
call
inc
(bad)
jle
sub
inc
mov
hlt
in
or
movs
rcr
mov
add
sub
fmul
aam
mov
shl
and
mov
loopne
lods
pop
sahf
xchg
cmp
lods
stc
add
push
sbb
mov
idiv
ss
xchg
pop
adc
js
adc
inc
sub
cmp
pop
mov
jmp
cld
stos
mov
aas
popa
and
in
add
or
inc
lock
or
cmps
fldenv
adc
or
cs
or
stos
add
dec
cs
das
add
stos
stos
cs
and
mov
cwde
dec
mov
mov
xchg
xor
xor
cld
mov
stos
add
jmp
jnp
mov
fcom
mov
jge
pusha
mov
pushf
iret
adc
(bad)
add
fdivr
mov
sti
jae
leave
mov
sbb
xchg
popa
mov
lods
add
mov
out
mov
mov
scas
hlt
mov
aam
cs
movs
hlt
aam
or
or
and
out
shl
adc
mov
movs
out
xlat
ds
sbb
xchg
fdiv
jnp
dec
or
cmp
push
cmp
and
mov
ret
enter
mov
xchg
cmp
hlt
leave
movs
(bad)
sbb
imul
sbb
mov
add
add
fadd
int
adc
push
(bad)
js
stos
mov
pop
add
cmp
xchg
pusha
and
(bad)
adc
mov
and
addr16
push
imul
add
stc
push
add
xchg
mov
in
push
bound
sub
jecxz
push
xchg
jae
test
and
sub
adc
sbb
sbb
pop
mov
nop
in
mov
add
push
mov
aaa
movs
loopne
pop
rol
adc
outs
xchg
adc
in
test
cli
dec
jbe
lahf
neg
xor
rol
pop
mov
dec
inc
sub
push
inc
sub
push
test
cmps
fcomp
push
pop
xor
sbb
and
inc
std
inc
adc
lock
mov
ret
shr
(bad)
into
mov
(bad)
test
loope
mov
xchg
adc
imul
xor
xor
jp
std
cdq
cmps
push
std
das
jmp
test
loop
dec
les
dec
idiv
sbb
fsubr
sub
sbb
add
ror
add
(bad)
xlat
sbb
pusha
out
pop
out
gs
xchg
int3
ja
fst
int
cmp
jne
pop
leave
push
add
xor
lock
and
test
add
and
and
aam
enter
or
loop
add
data16
push
sub
popa
dec
adc
pop
and
or
jne
pop
add
or
dec
pop
sbb
cmc
mov
xor
test
rcl
int3
fmul
or
fmul
(bad)
(bad)
or
ret
sbb
in
jg
imul
int3
fs
(bad)
sbb
push
dec
or
sbb
xchg
and
adc
lock
out
and
sbb
and
push
dec
sbb
adc
or
adc
das
pusha
push
jo
movs
xor
inc
dec
fs
mov
or
sub
or
lds
int3
pop
loop
es
cmps
cmp
daa
push
cmps
adc
sub
inc
add
nop
aad
jmp
mov
cs
and
ins
pop
cmps
jmp
pop
push
or
dec
les
mov
hlt
cmp
sub
(bad)
or
arpl
das
and
mov
ud2
loop
adc
ds
jl
or
add
sbb
fstp
jmp
push
aas
add
(bad)
or
in
fiadd
adc
push
dec
pop
adc
or
ret
pop
inc
pusha
popf
das
jle
sub
aas
add
adc
or
push
pusha
(bad)
in
add
add
xor
xor
mov
into
shl
ret
and
push
inc
xchg
adc
out
mov
fwait
lea
test
add
test
lea
dec
dec
xchg
push
jmp
dec
in
inc
mov
adc
jmp
test
cmp
add
cmp
sub
xchg
push
adc
adc
(bad)
data16
add
mov
test
mov
rol
and
and
inc
adc
add
movs
mov
add
and
push
pop
stos
push
xor
mov
nop
fisttp
cmp
add
out
ins
fadd
inc
loop
ret
add
movs
pusha
sub
mov
jns
dec
icebp
and
clc
adc
(bad)
mov
test
clc
inc
add
dec
push
cmp
mov
outs
outs
popf
mov
mov
xchg
aaa
rol
or
dec
adc
add
movs
xchg
(bad)
(bad)
call
pop
jb
pop
or
dec
gs
mov
pop
add
xchg
retf
pop
xor
adc
sub
mov
add
inc
mov
mov
cmps
jge
pop
and
ja
mov
test
and
gs
xor
mov
push
jne
(bad)
and
or
and
gs
sub
ins
push
mov
and
shr
neg
adc
or
sbb
xor
and
cmp
pop
ret
inc
out
add
jecxz
pusha
sbb
push
cwde
inc
add
and
push
out
xchg
pushf
adc
in
call
in
and
cmp
mov
ror
pop
out
pop
outs
adc
out
push
test
or
pusha
hlt
push
jecxz
jg
sbb
dec
inc
adc
cli
xchg
pop
or
pop
pop
sub
jg
cmp
push
scas
and
push
jle
test
push
int
add
and
das
sbb
and
jmp
adc
jle
jge
call
sbb
xor
js
bound
fs
sbb
fwait
or
push
xor
sbb
add
shl
inc
lock
inc
mov
mov
add
sub
or
and
nop
push
mov
nop
(bad)
loop
pop
mov
xchg
jb
cmps
imul
or
or
push
mov
hlt
cmp
or
or
js
das
leave
mov
and
dec
fldcw
call
add
add
jmp
inc
clc
xchg
xchg
mov
ins
or
fisttp
jo
mov
xor
jg
sahf
pusha
mov
add
sbb
pop
xor
inc
or
xlat
add
inc
xchg
popf
push
fsubr
lds
mov
out
sbb
xor
push
popa
push
inc
(bad)
fisttp
xchg
aas
push
or
lea
pop
inc
mov
aam
pop
push
cmp
jge
jo
pop
pop
movsx
jnp
adc
loope
in
cmp
mov
mov
jo
adc
xlat
and
cmp
inc
nop
js
shl
sub
add
scas
lock
inc
jecxz
sub
jo
mov
adc
stos
and
push
xor
push
xchg
jp
jge
test
loop
dec
push
push
sbb
test
lock
jno
pop
adc
mov
loopne
xchg
daa
imul
xchg
fbld
outs
inc
xchg
xchg
dec
jne
test
or
icebp
jno
shl
dec
cmp
or
mov
imul
adc
ins
mov
xchg
je
cdq
movs
in
xchg
pusha
sbb
out
rol
(bad)
mov
outs
xchg
clc
lock
lods
mov
sbb
mov
ja
movs
fcmovb
add
jo
jo
cvtps2pi
out
dec
adc
push
loope
cmovnp
popa
js
aas
push
sub
popa
sbb
cmp
addr16
mov
cmp
inc
mov
stos
xor
cs
add
add
push
pop
and
scas
arpl
push
mov
adc
daa
add
and
add
test
daa
in
das
jns
or
push
or
(bad)
aam
sub
or
jbe
dec
mov
sbb
loop
test
sbb
add
adc
xor
jg
push
push
and
sbb
sub
mov
push
pusha
xchg
or
or
mov
test
xchg
xor
push
ror
scas
out
outs
cmp
adc
sub
in
mov
jns
retf
rcl
jmp
and
nop
sub
test
rol
in
jbe
shl
lea
mov
test
enter
push
loopne
cs
adc
xor
retf
sbb
jo
cmps
lods
aaa
jmp
mov
sbb
das
jle
pop
test
popa
pop
xor
sbb
pop
adc
push
or
jne
sbb
adc
pusha
xor
mul
rol
add
(bad)
in
push
cmp
xchg
mov
xlat
aam
sbb
(bad)
dec
adc
je
sbb
pop
sbb
rcr
dec
jne
daa
cmp
push
add
push
data16
mov
adc
jbe
and
jbe
and
into
adc
hlt
push
dec
inc
jnp
sbb
xor
push
ins
pop
test
das
pop
stos
stos
xchg
add
cld
rcl
in
cmps
add
es
adc
adc
je
mov
and
sub
dec
adc
es
shl
mov
push
(bad)
xchg
jecxz
aas
mov
adc
ins
cmove
jmp
jo
mov
push
adc
sbb
xor
lea
in
js
adc
dec
sbb
sbb
call
dec
sbb
jmp
popa
or
mov
sub
je
repnz
sub
and
xor
iret
adc
mov
daa
idiv
das
fmul
scas
adc
adc
movs
adc
add
jae
and
clc
fld
jo
mov
and
fs
cmps
inc
jne
aas
in
call
add
nop
jbe
inc
push
arpl
sbb
push
test
add
cmps
and
dec
mov
mov
inc
test
and
add
mov
mov
sub
xchg
jge
movs
ror
inc
dec
dec
mov
sub
fistp
jns
jl
popa
push
push
mov
cwde
push
fsubr
inc
xchg
test
aas
hlt
push
and
add
movs
pop
pop
mov
push
add
test
mov
pop
dec
and
test
sbb
or
add
jbe
or
cmp
imul
or
cdq
inc
or
pop
cmc
stos
jbe
jp
aas
cmp
and
push
cmp
ins
pop
fs
hlt
pushf
sub
nop
mov
push
sub
push
and
xor
xchg
jl
sub
push
adc
xchg
es
stos
sbb
xor
cmp
cld
repz
pop
aam
inc
and
cmp
pusha
adc
xchg
scas
sbb
sbb
and
cmp
scas
in
push
sbb
push
cdq
push
aam
sbb
xchg
pusha
adc
jo
dec
loopne
rcl
sbb
sbb
adc
add
push
daa
sbb
and
fdivr
xlat
jl
sub
adc
jo
adc
arpl
arpl
or
std
repz
fimul
cmp
inc
adc
sub
jno
push
sbb
jbe
jmp
push
pop
retf
dec
loop
(bad)
dec
sub
xor
cmp
sbb
mov
cmp
or
stos
sub
mov
ret
shl
cmp
xor
or
sub
sub
imul
xor
aas
or
and
or
shr
imul
push
jmp
adc
and
push
call
or
das
and
add
clc
inc
ret
das
xor
adc
and
sti
mov
inc
or
mov
push
mov
or
xor
mov
mov
or
ins
mov
shl
or
push
and
ja
lea
push
call
xchg
ja
or
mov
adc
mov
xchg
and
dec
add
lock
xchg
pop
sub
and
sbb
loopne
clc
cmps
mov
retf
aas
movs
push
test
jmp
xchg
jp
add
and
out
push
lock
sbb
mov
cmp
pop
retf
inc
gs
or
dec
paddsw
(bad)
mov
test
lock
lahf
mov
mov
mov
or
push
dec
in
mov
loopne
pop
loopne
sbb
mov
and
cmp
add
cmp
das
shl
ja
out
and
retf
fs
or
add
in
dec
inc
dec
bound
mov
jge
clc
xchg
sub
dec
add
cmp
outs
ret
mov
push
or
or
mov
adc
pop
shl
dec
push
out
ret
mov
retf
fnsave
add
sbb
icebp
xor
xchg
sbb
test
add
push
(bad)
jmp
xor
add
adc
adc
or
mov
sbb
sbb
xor
rdpmc
jne
test
push
inc
push
aas
sub
adc
mov
push
and
sub
pop
cwde
xchg
inc
adc
stos
jno
test
rol
dec
xor
(bad)
or
adc
inc
cmp
pop
mov
loopne
in
fild
enter
dec
adc
aas
pop
clc
ins
or
push
sbb
mov
sbb
xchg
jb
xlat
lea
push
data16
pop
ror
or
jns
jbe
mov
dec
in
inc
push
test
xchg
aaa
clc
pop
pop
cdq
rcl
cmps
loope
lds
hlt
pusha
stos
je
push
fwait
adc
sbb
pop
cs
loopne
or
xchg
inc
or
(bad)
and
int
dec
leave
ror
lock
or
adc
ret
mov
mov
test
cmp
lods
mov
sbb
xchg
push
jae
xlat
add
add
adc
aas
cmps
push
mov
cmp
jns
gs
xor
ret
test
adc
pop
sbb
sub
cmps
pop
imul
sub
xlat
fidivr
mov
enter
dec
unpckhps
outs
mov
sub
stos
dec
dec
js
lods
std
inc
push
push
jl
and
aad
aaa
jg
pop
sbb
jl
imul
and
mov
jl
cmps
add
adc
bound
jmp
lea
test
cmp
mov
add
xchg
pop
or
cmps
lods
cmps
xor
pop
cmp
out
and
pop
hlt
cmc
mov
mov
popa
cmp
push
mov
push
lock
loopne
jb
adc
fs
jl
sbb
or
dec
hlt
jg
lahf
jl
push
shl
sbb
clc
jge
pop
test
add
add
inc
or
dec
and
push
dec
push
sbb
sbb
in
div
loop
adc
pop
or
fs
dec
movs
leave
test
fdiv
mov
xchg
gs
mov
retf
jnp
inc
movs
xor
fwait
push
xchg
je
jecxz
add
(bad)
mov
mov
inc
inc
add
add
shr
nop
test
fcom
imul
and
stos
add
and
add
adc
shl
fcomp
inc
jne
fnsave
or
add
jne
adc
mov
lock
in
aaa
or
dec
mov
sbb
sbb
sub
lock
push
or
nop
mov
mov
popa
adc
ror
(bad)
out
aaa
xchg
inc
fs
inc
mov
shl
cld
mov
int
clc
movs
jnp
imul
mov
shl
and
mov
loopne
add
push
push
popf
shl
pop
push
retf
xchg
and
pop
push
cmp
push
jl
imul
xchg
push
or
clc
jns
or
adc
jne
lds
fadd
ds
adc
add
adc
pop
add
and
or
ins
sbb
and
je
test
sub
adc
adc
jmp
xlat
push
mov
push
shr
cmc
cmps
mov
rcl
mov
movs
add
fcomp
jmp
dec
jle
push
fs
adc
ss
pop
and
into
jge
mov
cli
sbb
jnp
out
xchg
out
and
aam
jo
cs
data16
xchg
push
sbb
dec
and
pushf
arpl
jns
cmp
xor
imul
push
js
add
stos
add
adc
xchg
or
dec
mov
push
leave
dec
push
push
ins
sbb
cmp
jge
cmp
outs
das
mov
sbb
dec
xchg
dec
mov
sar
push
leave
pop
enter
adc
push
jle
sub
or
bound
cmp
add
or
nop
push
(bad)
or
jns
maskmovq
imul
add
fisttp
add
push
daa
inc
leave
test
or
and
jge
jo
or
imul
inc
std
icebp
fdiv
mov
dec
rol
dec
movs
pop
jb
pop
test
nop
and
sub
fmul
pop
loope
ret
hlt
and
cmp
js
cmp
dec
sar
mov
pusha
aaa
or
and
lods
(bad)
aam
inc
add
test
push
cmp
and
bound
cmp
jno
adc
sbb
movs
jmp
sub
pop
fadd
and
push
adc
and
mul
inc
and
loopne
inc
adc
push
push
and
cmp
nop
lea
cmp
xchg
(bad)
cmp
stos
or
pop
adc
pop
js
or
rol
clc
add
jge
arpl
push
imul
cmc
mov
mov
add
mov
inc
push
push
or
xchg
call
call
push
inc
test
add
ss
pop
or
das
fbld
pop
adc
mov
in
add
add
pushf
or
xor
inc
pop
(bad)
pop
adc
mov
aad
ja
push
xor
or
add
jg
cmp
add
xor
and
dec
cld
push
test
bound
imul
add
push
sub
xor
daa
je
arpl
mov
sub
rol
xor
and
mov
popa
xor
das
or
dec
aas
mov
inc
or
aam
loopne
imul
pop
pop
int
in
or
add
jne
or
pop
pop
push
dec
sub
or
and
(bad)
mov
push
sbb
push
outs
mov
cmp
dec
push
mov
stc
fmul
adc
pusha
push
cmp
dec
aaa
shr
es
nop
inc
dec
fsub
cmp
and
sub
xchg
and
cmps
loope
sub
movs
ds
aam
ins
icebp
mov
rcl
leave
pop
movs
inc
stos
ret
jb
jbe
pop
cmp
dec
retf
jg
imul
inc
lea
hlt
lds
fs
jmp
xchg
pop
fcom
cmps
dec
add
mov
dec
mov
jo
dec
jmp
and
or
fst
sub
rol
pop
jg
mov
pop
ins
or
add
pop
or
sub
test
jp
jne
aaa
(bad)
dec
add
das
aaa
fild
(bad)
mov
push
cmp
mov
push
add
xor
unpckhps
push
sub
fisttp
adc
inc
xchg
popf
int
es
lods
mov
and
mov
adc
mov
repz
add
and
adc
push
add
xor
jne
mov
sbb
dec
in
mov
sub
sbb
adc
push
and
push
pusha
mov
test
out
nop
cmps
dec
add
sbb
push
fs
into
inc
adc
dec
pop
and
mov
push
xor
sti
mov
add
dec
ja
dec
sbb
or
adc
push
pop
fdivr
and
xchg
inc
ss
jmp
jmp
lods
sbb
add
mov
stos
inc
cmp
ss
jg
adc
hlt
push
loopne
bound
leave
mov
ret
mov
jo
pop
jle
out
nop
fisttp
sub
and
mov
pop
pop
xor
xor
sub
pop
ror
or
jo
xchg
outs
aaa
or
test
aas
dec
and
or
dec
xchg
shl
inc
and
test
xchg
pop
push
lods
sbb
adc
cmp
movs
pop
fldcw
pop
xor
sub
or
fistp
jo
inc
xor
pop
lock
jp
add
pop
lods
int
push
movs
mov
and
gs
pop
lea
sub
aam
scas
adc
scas
test
ins
mov
mov
xor
movs
les
sbb
xchg
ret
adc
mov
add
ss
and
adc
add
ss
add
xor
xor
pop
and
lahf
jne
(bad)
in
push
sar
movs
pop
and
sub
xlat
mov
outs
cli
or
mov
sub
inc
call
cmc
or
inc
lods
out
movs
sbb
or
fldenv
adc
mov
pop
sbb
pop
push
lods
mov
pop
sub
and
dec
push
mov
es
jno
rol
pop
or
(bad)
fbstp
and
pusha
inc
and
or
xchg
test
push
aas
push
sbb
or
cdq
das
jmp
xlat
xor
add
mov
pusha
push
loopne
and
(bad)
out
push
or
lods
add
scas
call
jnp
and
test
dec
mov
or
imul
adc
dec
xchg
push
mov
push
lds
ins
adc
retf
ret
dec
ja
outs
mov
cmp
int
shl
mov
add
add
cmp
jno
jg
fwait
cli
cmps
pop
push
test
and
rcr
out
adc
imul
loope
inc
dec
ret
push
or
add
inc
int3
rol
adc
sub
inc
add
scas
push
test
add
dec
and
in
push
or
mov
int
mov
adc
or
cmp
clc
jmp
push
out
pop
pop
and
je
and
ja
es
jl
push
xlat
imul
rol
sbb
sub
mov
push
fistp
cmp
mov
sub
dec
cmp
les
fild
sbb
cs
or
push
ret
(bad)
xor
sbb
sbb
and
ins
pop
mov
ins
cmp
inc
sub
and
mov
rcl
cmps
iret
sub
popa
pop
sbb
je
loope
jbe
shl
out
je
loope
add
(bad)
out
add
and
sub
and
add
in
ss
cmp
adc
add
and
adc
jb
pop
aad
add
sub
cmp
jge
mov
sar
imul
dec
push
xchg
mov
mov
fwait
das
lds
dec
mov
inc
pop
adc
dec
retf
xor
inc
inc
and
and
push
hlt
imul
adc
or
loopne
pop
fdivr
sub
push
(bad)
jbe
mov
or
add
jmp
push
pop
les
inc
and
cdq
shl
ror
sbb
icebp
pop
test
loope
call
dec
stc
or
pop
mov
rcr
std
imul
push
xor
xor
sbb
add
inc
repnz
adc
mov
jl
cdq
inc
cmps
sbb
push
shl
jl
lods
and
pop
cmp
push
push
jp
and
mov
mov
xor
pop
add
mov
sub
clc
inc
push
push
jg
sub
loope
adc
shl
dec
addr16
punpckhwd
out
and
dec
icebp
xor
mov
push
cmp
ror
leave
mov
not
dec
mov
cmp
dec
cmp
mov
sbb
mov
push
jbe
and
push
lock
pop
outs
add
xchg
xchg
loopne
enter
mov
and
and
leave
add
or
in
in
inc
ss
int
inc
mov
shr
loope
dec
xchg
mov
inc
push
add
fimul
sub
xchg
(bad)
mov
add
ret
push
sbb
call
(bad)
fnstcw
push
pusha
inc
pusha
add
push
sahf
movs
out
adc
imul
adc
loop
loopne
leave
aam
pop
xchg
mov
nop
xor
mov
xor
adc
jno
cmp
fwait
push
mov
or
pusha
dec
sub
enter
in
loopne
lea
nop
and
add
add
movsx
or
sub
push
daa
or
mov
cmp
fdiv
pop
sub
and
xor
xchg
inc
xor
in
add
jmp
cdq
nop
jecxz
aam
aam
daa
adc
sub
inc
cmps
or
dec
mov
mov
or
cmp
add
loope
mov
repz
lahf
ins
xchg
add
xchg
mov
cld
lds
shl
ins
(bad)
ret
das
adc
push
or
jge
dec
push
xor
ja
lock
or
mov
or
jae
inc
push
test
ret
retf
icebp
mov
inc
sub
and
inc
and
outs
cmp
ins
jne
test
movs
mov
and
(bad)
aaa
call
call
inc
sbb
jo
and
mov
jle
(bad)
js
sbb
ss
or
inc
test
leave
pop
and
mov
jmp
xlat
and
aaa
adc
add
addr16
jmp
test
or
sbb
and
sbb
xor
cmp
ja
or
adc
sbb
jp
lea
pop
adc
and
sub
xor
push
adc
gs
sub
into
(bad)
push
cmp
sbb
dec
or
inc
icebp
push
out
in
push
mov
test
push
fcom
in
sub
test
shl
jnp
sub
movs
test
in
cld
test
adc
mov
jb
xchg
or
movs
pop
mov
retf
les
mov
clc
pop
aam
xchg
stc
adc
lods
jnp
cmovle
xor
out
dec
inc
add
ins
adc
pop
ss
push
push
and
pop
push
pop
inc
ins
imul
daa
inc
add
adc
fild
push
or
or
push
xchg
cmps
inc
imul
inc
out
sbb
jno
dec
jae
ret
nop
pop
sub
xchg
je
sbb
les
cmp
loopne
mov
push
fstp
cs
add
shr
sub
test
push
dec
mov
and
(bad)
in
xlat
iret
jbe
rcl
loope
inc
cmp
cmp
jo
loopne
stos
mov
jmp
(bad)
mov
dec
xor
fisubr
sbb
or
lods
sti
push
adc
ret
xchg
dec
xchg
push
outs
adc
mov
adc
pop
retf
or
or
mov
cmp
jns
rcl
mov
push
sub
sub
jbe
cmps
xchg
mov
add
adc
pop
sub
xor
ds
push
pop
add
add
iret
out
mov
adc
jg
pop
adc
push
pop
push
clc
dec
jl
push
sub
or
add
clc
mov
push
jmp
push
fimul
fdivr
mov
cmps
pop
test
sbb
inc
shr
pop
rcl
or
sub
repz
add
inc
and
xchg
sub
outs
and
pop
mov
aam
dec
jmp
outs
mov
sub
sub
sbb
cmp
push
pop
mov
jl
mov
movs
std
push
dec
ins
cdq
cmp
add
mov
stos
push
or
popf
dec
in
ret
aaa
mov
mov
fwait
(bad)
shl
das
xor
add
daa
call
arpl
cmp
and
inc
or
jo
pop
pop
shr
jns
sub
push
pop
mov
fimul
xor
test
push
inc
cmp
xchg
ffreep
(bad)
les
retf
bound
sub
sahf
cwde
dec
fwait
xchg
add
add
dec
je
inc
sar
out
inc
or
add
out
cmp
imul
rol
pop
pop
dec
push
push
push
xor
aaa
and
jb
xchg
pop
bound
aam
nop
add
js
inc
test
add
inc
mov
jmp
xor
call
sub
sub
imul
or
inc
jns
dec
xchg
and
jbe
xlat
push
fwait
aam
or
xor
stos
in
sbb
adc
cmp
cmps
cmp
ret
in
jp
pop
sar
ins
ret
adc
popa
ins
add
dec
movs
pop
inc
nop
xchg
xchg
sub
and
inc
gs
enter
fistp
ja
add
dec
sbb
or
in
or
push
js
mov
fiadd
push
rol
sub
sbb
lods
xchg
or
cmps
inc
mov
repz
add
adc
fcomp
mov
and
inc
sub
add
hlt
popa
dec
add
mov
add
mov
lock
bound
add
repnz
add
jo
enter
sub
add
sub
sbb
xchg
xchg
push
mov
and
cmp
lods
jmp
or
rcl
jmp
cs
(bad)
mov
in
add
les
and
ins
retf
sub
(bad)
pop
jns
clc
lock
inc
ds
mov
fbstp
adc
test
jb
leave
or
inc
push
fisub
ds
imul
add
mov
and
adc
shr
mov
adc
pop
add
push
adc
fcmovb
icebp
nop
add
inc
pop
xor
cmp
inc
fist
outs
and
lock
test
pusha
icebp
add
pop
not
jb
test
push
mov
rol
xor
fsubr
mov
xchg
jbe
cmp
aam
xor
mov
jbe
ins
in
cmp
(bad)
jns
rol
adc
daa
and
retf
loopne
or
and
and
in
or
inc
ds
xchg
or
add
test
xor
or
scas
stc
cmp
mov
movs
loopne
xor
push
mov
push
out
mov
movs
outs
jbe
pop
sub
gs
adc
lock
in
(bad)
imul
pop
pop
sub
loope
test
test
imul
push
inc
push
adc
xor
aaa
out
or
add
push
and
or
add
test
ror
add
or
mov
in
inc
dec
imul
xchg
sbb
data16
push
or
inc
mov
mov
dec
aam
nop
cmps
sbb
mov
sbb
cmovbe
sbb
mov
add
sbb
shl
addr16
pop
push
aaa
sbb
cmp
or
in
push
sbb
retf
or
imul
inc
daa
or
fcomp
push
add
mov
xor
outs
and
pop
call
pop
lods
dec
sbb
mov
inc
inc
xchg
and
sub
je
sbb
sub
es
pop
stc
sub
push
lods
add
jns
adc
add
sub
aad
sbb
mov
jecxz
es
add
add
jb
or
xor
leave
push
xor
push
jb
gs
ss
push
leave
aaa
cmp
inc
xor
cmp
cmp
sub
inc
sbb
pop
push
fcmovnb
xchg
inc
pop
js
xchg
or
nop
add
inc
add
(bad)
xor
loopne
fst
xor
adc
xor
fadd
inc
imul
sub
js
add
cmc
jae
or
dec
enter
movs
retf
in
leave
cld
push
or
sub
hlt
out
push
or
out
mov
shr
ss
or
jle
out
or
lock
enter
mov
and
jecxz
or
movs
in
sub
outs
pop
jo
mov
(bad)
push
out
fcmovnu
movs
mov
lock
les
cmp
or
les
and
mov
xor
(bad)
and
sbb
sbb
test
or
push
mov
mov
add
jmp
adc
stos
lods
test
out
in
jecxz
in
jecxz
(bad)
and
daa
sub
in
mov
cmps
and
pop
je
or
jge
hlt
or
adc
jbe
sub
int3
inc
loope
inc
test
sub
jle
fisttp
pop
nop
test
lahf
xor
sub
fdiv
addr16
or
ret
dec
loope
add
popa
add
aaa
hlt
jmp
sub
in
jle
jmp
sub
stos
ret
hlt
icebp
or
loope
push
int3
mov
and
mov
hlt
inc
arpl
sub
and
mov
jo
icebp
inc
lods
add
in
or
pop
sbb
xchg
mov
jl
add
pop
repnz
add
ficom
(bad)
aam
sub
std
lock
out
or
test
cmp
ins
jmp
rcr
mov
aaa
add
sbb
adc
or
mov
add
mov
push
sbb
ret
dec
fisttp
les
xor
scas
popa
and
iret
mov
and
and
and
movs
xchg
sbb
push
jl
inc
dec
outs
gs
inc
add
in
mov
mov
push
jb
inc
add
sub
xchg
rcr
enter
outs
xor
cmps
jns
and
push
dec
jo
or
add
inc
or
push
adc
int
mov
outs
sbb
push
enter
jge
in
push
cwde
lods
push
repz
mov
and
inc
ins
(bad)
iret
shl
xor
jno
dec
iret
int3
sub
arpl
mov
jne
xor
test
jo
or
cmps
add
lods
in
(bad)
fwait
xor
xor
aad
das
or
sub
dec
mov
out
aad
jl
dec
pop
call
js
and
aad
sub
push
je
loope
adc
mov
sub
mov
cmpxchg
rcl
and
addr16
sbb
imul
mov
fsub
mov
leave
inc
inc
test
jns
in
mov
imul
push
mov
push
out
rcl
and
xor
imul
mov
inc
adc
dec
mov
inc
popf
mov
les
nop
dec
pop
enter
add
mov
sbb
sub
cmp
enter
dec
inc
or
mov
mov
jno
loopne
hlt
std
or
or
add
jmp
pusha
mov
add
aas
xchg
mov
jge
rcl
or
scas
shl
xchg
and
fbld
push
jne
mov
mov
push
push
mov
sbb
mov
pop
mul
or
in
scas
xor
sub
push
in
mov
sub
sbb
fld
add
lods
sbb
dec
push
mov
(bad)
jecxz
test
jb
pop
push
xchg
jo
mul
sub
imul
mov
imul
jge
mov
add
push
ret
dec
or
mov
fmul
ja
inc
and
xchg
ins
call
pop
push
add
and
scas
movs
sbb
jae
pop
dec
inc
pop
in
retf
enter
mov
sub
push
xor
bound
imul
dec
outs
or
mov
fcom
cdq
jmp
push
lock
pop
arpl
lock
(bad)
and
fadd
xchg
inc
or
or
xchg
pop
adc
ret
adc
pop
ret
xor
nop
in
pop
cmp
push
push
adc
in
hlt
test
sub
dec
sbb
pop
popf
dec
popf
(bad)
xchg
adc
jp
shl
and
inc
inc
es
xor
pop
pop
dec
inc
sub
cs
xor
rcr
jno
aam
dec
adc
inc
int3
xchg
xor
cvttps2pi
ins
test
lods
pop
dec
clc
movs
test
inc
arpl
push
adc
add
pop
dec
sub
adc
ss
adc
push
push
(bad)
(bad)
pop
add
cmp
out
sbb
inc
inc
fbstp
(bad)
loopne
adc
add
mov
shr
lock
mov
cmp
sub
sub
push
js
mov
add
dec
fbld
fstp
rcr
(bad)
and
popa
call
sbb
push
jmp
add
dec
call
nop
jo
lods
mov
dec
call
add
push
fadd
nop
(bad)
xchg
xor
iret
ins
add
mov
push
xchg
add
punpckhwd
test
cmp
popa
inc
or
test
movs
xor
xor
sbb
or
adc
sub
jns
adc
adc
popa
je
sub
dec
push
(bad)
pop
outs
and
and
push
iret
lods
dec
xor
lock
enter
call
je
clc
test
test
push
mov
xchg
sub
cld
xor
pop
and
or
inc
adc
xor
xor
cmp
(bad)
sbb
push
outs
das
xchg
sbb
xor
fisttp
add
sub
daa
jo
in
data16
imul
cmp
xchg
sub
shr
inc
fistp
dec
jo
inc
retf
adc
lock
and
sbb
mov
dec
hlt
call
fcomp
mov
and
mov
test
lock
xchg
cmp
add
sub
das
imul
mov
scas
jo
mov
enter
adc
xlat
adc
rcr
fild
mov
fcom
das
(bad)
stos
fcmovnb
sub
movs
(bad)
xchg
dec
scas
jmp
add
xchg
rol
push
inc
fst
jo
les
mov
loopne
jbe
push
sbb
push
push
mov
pop
and
shr
xor
in
dec
ret
mov
jle
test
(bad)
hlt
xchg
xchg
mov
dec
add
fsubr
or
shl
adc
das
daa
sub
inc
shr
data16
cmc
mov
jns
adc
mov
dec
push
inc
cmp
mov
and
rol
add
(bad)
jmp
add
test
xor
add
jmp
pop
xchg
imul
enter
xor
ins
jmp
popa
adc
inc
inc
mov
mov
cmp
test
scas
adc
mov
and
sub
and
mov
aas
or
dec
dec
dec
cmovbe
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
dec
dec
dec
dec
xor
xor
dec
dec
dec
dec
ss
cmp
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
ds
and
dec
dec
dec
dec
and
and
dec
dec
dec
dec
es
sub
dec
dec
dec
dec
sub
sub
dec
dec
dec
dec
cs
adc
cmp
adc
das
iret
mov
jb
inc
push
mov
dec
cmp
repz
inc
sbb
adc
cmp
repz
add
out
sahf
out
push
sbb
adc
int
jns
or
add
clc
mov
cmp
repz
int3
call
iret
repz
iret
repz
enter
mov
cmp
mov
iret
repz
je
ins
iret
repz
mov
js
cmp
repz
dec
push
iret
repz
xor
sub
repz
dec
and
sbb
adc
iret
repz
or
add
jns
cmps
stc
cld
push
sbb
adc
sar
out
in
fmul
cmp
repz
aam
int3
call
repz
adc
enter
push
les
loopne
nop
das
pop
pop
cmp
out
add
mov
jb
(bad)
cmp
adc
push
add
sar
dec
or
aad
ror
or
ret
ja
adc
movhps
sbb
rcl
fcomp
shr
jb
call
rol
or
wbinvd
dec
ins
jecxz
or
sub
sbb
and
cmp
mov
test
and
pushf
xchg
dec
jb
push
into
sbb
or
arpl
imul
and
(bad)
or
je
adc
inc
je
arpl
push
rcl
nop
mov
mov
in
arpl
adc
test
and
cmp
repz
add
lea
cmp
xchg
mov
mov
cs
adc
les
(bad)
sbb
and
adc
fild
adc
cmc
adc
xchg
mov
lfs
movs
inc
cmp
adc
repz
xchg
int3
mov
mov
cmp
nop
xor
jnp
outs
push
cwde
push
add
mov
sub
cmp
inc
ja
push
fisttp
rol
xchg
push
xchg
dec
or
jle
fmul
push
js
or
outs
push
or
pop
jmp
aas
pop
and
adc
lahf
mov
retf
mov
add
popa
mov
inc
pop
pop
dec
cmp
cwde
or
ud0
mov
adc
ins
dec
push
or
inc
pop
dec
and
and
add
add
dec
adc
stc
cs
or
je
or
adc
fs
mov
shr
frstpm(287
adc
or
or
mov
and
pop
or
xchg
and
dec
adc
ret
outs
mov
adc
rcl
sbb
mov
(bad)
sbb
xchg
push
jns
sbb
sbb
push
and
add
call
call
lock
inc
in
push
shr
daa
jl
inc
aas
call
add
push
adc
inc
in
xlat
test
outs
add
retf
loopne
int3
jmp
inc
enter
xor
jo
adc
fimul
loopne
pop
push
xor
pop
jl
out
retf
lock
nop
std
rol
inc
cmp
lock
or
inc
add
xchg
fdivr
mov
pop
es
lods
push
pusha
cmps
sub
pusha
mov
cld
out
push
and
sbb
pop
xor
mov
push
sbb
loopne
stos
mov
adc
(bad)
in
or
add
add
and
xor
or
pop
push
in
adc
js
inc
mov
mov
cmp
test
dec
cmp
aas
inc
push
and
pop
mov
cwde
jmp
ins
mov
rcl
mov
add
pop
xor
sbb
clc
pop
lods
push
sub
jb
sahf
or
mov
push
xor
push
dec
loopne
mov
dec
mov
mov
jge
cmc
add
push
mov
test
or
or
gs
fsubr
ins
mov
cmp
aam
hlt
sbb
adc
aaa
and
out
sahf
pusha
adc
popa
pop
mov
js
xor
jne
xchg
add
push
inc
pop
xchg
sbb
inc
mov
inc
dec
sbb
adc
push
les
or
stos
push
xor
daa
inc
jmp
add
or
ror
jge
daa
inc
dec
out
pop
test
add
lea
inc
mov
test
inc
out
daa
push
jns
mov
xor
and
xchg
sbb
imul
je
adc
inc
enter
mov
xor
jmp
fcom
(bad)
in
pop
les
fcomp
adc
sub
inc
mov
sahf
push
je
(bad)
stc
mov
xchg
lock
push
dec
out
shl
shrd
xlat
dec
xor
dec
mov
dec
xor
je
imul
adc
xchg
xchg
rcl
or
sbb
out
mov
push
add
add
sti
fwait
icebp
out
sbb
popa
adc
adc
mov
sbb
push
add
or
sub
adc
jmp
call
jae
pusha
dec
inc
add
stos
in
inc
push
loop
(bad)
repz
loopne
xor
push
leave
movs
lods
xchg
cmp
fucomip
repz
sub
loopne
mov
push
rcl
mov
and
jmp
and
cmp
fwait
aam
ficom
mov
push
add
js
ror
dec
add
arpl
mov
js
xlat
aas
cdq
mov
dec
add
hlt
int3
aad
(bad)
cmp
repz
jmp
pushf
out
mov
add
xor
jns
inc
in
ret
xchg
xchg
and
loope
int3
push
inc
pushf
aas
aam
or
sub
push
dec
dec
jbe
inc
aaa
mov
fidiv
popf
mov
fbld
sub
dec
dec
add
out
sbb
sbb
push
pop
push
cli
or
mov
lods
jo
imul
jo
adc
movs
push
cld
push
push
stc
dec
adc
sub
push
test
fs
in
push
js
fcom
(bad)
sub
rcl
add
jg
and
test
inc
js
pop
pusha
pop
and
cmp
repz
dec
rcr
jge
es
retf
mov
mov
add
fwait
lods
cld
jg
fwait
xchg
and
movs
and
or
dec
sti
mov
fwait
(bad)
out
mov
xor
cmps
fimul
xchg
mov
sbb
in
cdq
sbb
mov
adc
push
lea
cmp
lahf
fld
or
movs
mov
sub
inc
mov
push
mov
adc
ss
rcl
dec
xchg
mov
adc
ins
iret
inc
scas
movs
sar
and
sbb
add
mov
mov
mov
and
inc
push
dec
and
inc
jnp
adc
retf
or
scas
pop
pushw
xchg
cmp
outs
adc
sbb
aas
mov
pop
jno
in
inc
call
test
call
ret
or
ins
popf
test
add
push
pop
pop
and
ins
aas
or
push
fdiv
dec
int3
push
fnsave
add
pop
pop
add
stos
ins
arpl
mov
in
mov
ja
push
fstp
iret
or
add
and
or
and
imul
(bad)
fsubr
jne
xor
inc
push
out
and
mov
fwait
inc
inc
mov
stos
js
gs
fcomp
movs
lahf
mov
sub
(bad)
in
lock
aad
mov
(bad)
dec
adc
jg
std
ds
aad
sbb
cmp
mov
(bad)
call
enter
aam
add
jb
sub
xchg
or
or
inc
vmovups
adc
mov
add
sbb
mov
hlt
and
movs
sub
dec
cmp
cmps
xlat
out
cmps
xchg
loope
and
xchg
mov
mov
popf
clc
in
sbb
jmp
or
cmp
push
dec
inc
dec
test
or
add
inc
mov
and
xchg
ret
dec
mov
cmps
dec
jo
push
xor
xor
mov
jns
cmps
inc
retf
and
lods
or
add
add
ret
sub
mov
adc
sbb
fs
xchg
xchg
sub
dec
xchg
cmp
cmp
hlt
jmp
dec
push
sbb
xor
arpl
leave
inc
xor
loop
dec
rol
inc
test
aas
adc
xor
enter
ret
mov
les
sbb
int3
int3
adc
xchg
mov
icebp
mov
repz
imul
fcomp
sbb
loopne
add
push
seto
pop
rol
sbb
jne
add
mov
in
or
pop
clc
icebp
inc
jecxz
dec
test
adc
(bad)
out
cdq
push
xchg
mov
leave
dec
fbstp
fistp
outs
int3
daa
lock
add
fadd
and
xchg
mov
enter
dec
inc
dec
hlt
cld
adc
jns
mov
push
add
push
test
mov
ds
sar
xchg
test
test
pop
fild
les
test
(bad)
cdq
sbb
cmps
test
or
jne
push
mov
adc
adc
sbb
and
and
imul
mov
push
daa
cmp
push
ficomp
test
repnz
stos
push
pop
sub
sub
out
inc
fadd
jmp
je
sub
mov
sbb
add
mov
sbb
out
ja
ret
and
and
fsubr
out
(bad)
xor
loopne
xchg
in
call
dec
or
call
call
imul
inc
fsub
jmp
xchg
lock
xchg
movs
aad
(bad)
sbb
mov
fs
xor
call
es
sbb
add
imul
lea
lock
sbb
mov
dec
mov
add
arpl
jb
sbb
out
lods
xchg
inc
sub
push
dec
sub
hlt
mov
push
ror
les
sub
xchg
call
in
ds
inc
or
in
adc
in
pop
fsubrp
pop
and
fcom
xchg
xor
add
and
pop
mov
cmp
push
push
mov
add
clc
sbb
(bad)
jmp
rcr
add
lock
imul
or
push
gs
xchg
pop
add
or
dec
jae
jmp
cmps
sub
mov
dec
test
push
movs
call
idiv
lock
call
inc
(bad)
mov
cs
pop
push
hlt
mov
push
hlt
adc
mul
call
jo
test
inc
pop
sub
add
and
nop
xchg
jns
popa
and
xchg
xor
mov
clc
adc
jns
add
jmp
mov
or
outs
pop
jo
mov
mov
ja
sbb
fsubr
inc
movs
lock
or
cmp
push
das
dec
test
pop
pop
mov
fdiv
sbb
mov
pop
loope
les
add
xor
cmps
push
test
out
fs
imul
push
(bad)
gs
or
(bad)
mov
lock
(bad)
dec
enter
sub
dec
adc
scas
es
sub
or
wbinvd
mov
ins
out
pop
and
cmp
pop
sub
cmps
pop
and
sub
enter
cld
lock
hlt
inc
pop
adc
or
mov
dec
ret
pop
imul
or
add
jge
sbb
pop
xor
lods
xor
test
mov
jo
test
sub
add
mov
push
push
outs
adc
cdq
fsubr
out
push
xchg
sub
dec
fwait
sbb
adc
int3
push
add
test
sbb
adc
cmps
jae
dec
les
sbb
mov
add
adc
shl
pop
sbb
cmp
pop
sub
ret
mov
or
mov
sbb
scas
adc
jbe
and
dec
push
adc
fiadd
fsin
jecxz
in
cmp
iret
mov
(bad)
mov
push
push
mov
mov
pushf
mov
pop
bound
(bad)
push
add
mov
sbb
push
add
test
adc
add
shr
mov
cmp
mov
xchg
and
sbb
mov
nop
mov
lods
sbb
pusha
js
sbb
or
lods
test
enter
fcomp
hlt
add
nop
xchg
frstor
pusha
add
xchg
dec
fucomi
cld
fwait
and
or
fcom
jl
test
mov
sbb
leave
cmp
nop
add
add
inc
add
nop
add
es
xor
movs
cmp
loopne
add
push
mov
xchg
add
ins
mov
inc
shl
add
retf
inc
mov
enter
add
enter
cmp
dec
xchg
cmp
jmp
fadd
in
jnp
out
mov
repnz
sahf
out
iret
push
jns
mov
out
pop
ins
inc
mov
pop
fidivr
repz
inc
or
sbb
repz
mov
mov
out
ds
mov
cli
out
sahf
out
imul
lahf
sahf
out
sahf
lods
mov
out
sahf
mul
push
stos
xor
dec
int
jns
pop
data16
push
mov
cmp
mov
(bad)
dec
or
stc
mov
je
adc
adc
and
xor
jo
in
pop
addr16
ss
and
sar
push
or
jns
jbe
pop
sbb
and
sahf
mov
mov
out
outs
pusha
sbb
and
fisub
lods
pusha
xchg
ins
mov
ret
out
pop
add
mov
add
push
rol
push
cmp
leave
push
mov
push
aam
push
loopne
nop
xchg
mov
(bad)
fcom
jns
inc
(bad)
jo
push
sbb
and
or
bound
pushf
int3
push
lock
je
fnstsw
shl
mov
cdq
test
push
cmps
pushf
sub
icebp
push
das
in
add
clc
xchg
or
push
sbb
add
std
push
in
push
out
lds
cs
sub
sub
xor
add
fcom
push
setp
cdq
inc
add
call
fbld
pop
jecxz
popa
jo
(bad)
in
mov
and
or
(bad)
push
pop
and
xchg
sub
or
loope
(bad)
dec
mov
fsub
ret
icebp
push
mov
add
das
jl
push
fcmovb
mov
sahf
xchg
add
mov
sar
dec
xchg
(bad)
xor
leave
lds
lods
add
pop
or
add
mov
and
and
aad
addr16
call
rcr
mov
inc
xor
mov
test
sub
or
aaa
loopne
popf
add
dec
push
push
ret
daa
loop
inc
jl
adc
jg
loope
adc
mov
pop
adc
dec
sbb
pop
in
outs
fist
xchg
bound
push
xchg
xlat
and
sub
jb
xor
adc
inc
pop
push
or
mov
sbb
xor
and
cmp
enter
and
and
scas
add
mov
adc
or
xchg
cmp
inc
push
add
or
and
ins
ret
and
cld
dec
inc
mov
out
mov
or
mov
jne
and
shr
pop
or
xor
xchg
pop
fwait
test
mov
test
arpl
xchg
sbb
mov
xchg
aam
add
pop
ins
ret
cmp
push
jmp
test
ret
inc
dec
retf
test
xchg
fst
push
ret
push
sbb
jp
test
iret
mov
outs
icebp
push
sub
std
inc
loopne
sub
add
cs
jg
bound
or
xchg
and
push
dec
or
stc
sub
shl
test
mov
movhps
stos
add
shl
(bad)
push
xor
aaa
sbb
jl
(bad)
ret
mov
adc
push
sbb
mov
das
push
aaa
gs
xor
push
pop
sbb
movs
xor
dec
mov
popa
adc
mov
out
sbb
es
push
(bad)
dec
aaa
(bad)
shr
cmps
cmp
jbe
enter
les
add
je
xor
loope
pushf
inc
add
xor
add
js
pop
xchg
movs
cdq
adc
push
add
jmp
lea
jecxz
sbb
mov
shl
or
sub
sub
je
cdq
or
test
xor
push
add
lds
sub
push
mov
push
cmp
mov
rcr
clc
repz
imul
mov
jae
adc
jns
add
nop
sub
or
std
push
enter
jle
add
loope
cmp
push
int
inc
push
mov
cmps
ror
ja
loop
push
rcr
push
mov
out
sub
xor
or
push
jp
nop
clc
cmp
ret
inc
inc
out
mov
nop
mov
dec
cmp
sub
jg
xor
sbb
push
dec
daa
and
pop
mov
push
jns
push
jp
dec
inc
popf
out
enter
add
sub
loopne
fs
mov
in
shl
and
test
add
ret
xchg
test
test
lahf
cmp
sbb
mov
loopne
jne
pop
lock
dec
pop
(bad)
ret
mov
and
sub
xor
xchg
adc
rcl
rcl
test
push
xor
sbb
mov
push
xor
stc
lods
or
sbb
mov
sub
add
les
jo
cs
pop
xor
xor
add
(bad)
jo
loopne
lock
icebp
sub
inc
bound
sub
sub
jmp
jo
jecxz
jecxz
popa
bound
(bad)
retf
in
nop
call
lds
mov
sub
pop
adc
jmp
sub
adc
shl
or
fiadd
cmps
push
mov
repz
sbb
pop
adc
pusha
add
out
or
inc
or
cwde
ins
out
inc
nop
sub
jecxz
add
stos
mov
ja
xor
loopne
or
test
push
add
neg
push
and
sub
xor
inc
inc
gs
xor
xor
dec
mov
scas
or
inc
push
inc
adc
(bad)
test
sbb
inc
push
mov
popa
mov
pop
pop
stos
push
test
inc
push
fcomi
popf
inc
jo
ret
push
jno
je
aam
test
and
clc
das
ret
outs
and
dec
mov
(bad)
push
jo
adc
sub
and
(bad)
adc
push
and
std
push
mov
inc
inc
mov
movs
das
adc
(bad)
and
cmp
xor
xchg
dec
scas
adc
je
inc
cmp
jne
cmp
aas
mov
sub
xchg
jbe
pop
mov
sti
and
pop
je
mov
adc
jmp
add
inc
push
ret
add
add
pop
outs
rcl
dec
adc
adc
test
jbe
lahf
in
in
add
call
cwde
jmp
sbb
sbb
loope
inc
or
popa
clc
jmp
sbb
mov
pop
(bad)
xchg
sub
out
adc
push
popf
sbb
into
fwait
loopne
jne
mov
sub
jmp
pop
add
xor
sub
test
jl
in
hlt
add
rcl
nop
add
xor
sub
adc
arpl
ror
push
ins
mov
inc
adc
fisttp
add
movs
mov
lock
dec
xchg
add
xor
stos
sbb
inc
jo
inc
popa
shl
push
or
jp
aad
sub
xchg
jmp
add
mov
pop
pop
inc
out
push
int3
(bad)
push
sub
add
push
pop
inc
pop
mov
push
pusha
pop
mov
push
nop
rol
nop
xchg
sub
ret
xchg
test
jb
test
or
loop
fnsave
sub
shl
test
icebp
dec
pop
ja
aaa
ss
mov
cmp
jg
and
lea
mov
cmp
ja
pop
das
mov
mov
add
jg
and
add
dec
jne
push
mov
pop
mov
xchg
mov
pop
cld
(bad)
rol
xor
cmp
fmul
imul
jl
xor
int3
cmp
test
inc
mov
dec
out
xor
mov
cmp
mov
dec
and
push
sbb
aam
pop
adc
inc
aam
and
add
jle
pop
(bad)
fadd
mov
lea
xchg
mov
in
test
into
sbb
ds
and
adc
(bad)
push
inc
fist
sbb
mov
adc
jmp
push
dec
mov
int
push
inc
add
retf
cli
aas
dec
(bad)
or
or
sbb
mov
jmp
pop
add
sub
inc
pop
or
jmp
outs
out
jns
sbb
movs
jmp
add
mov
or
sbb
push
push
or
imul
loopne
inc
jb
ret
rcl
sbb
xor
(bad)
lock
ins
int3
gs
mov
sub
adc
mov
popa
jne
inc
loope
sub
adc
dec
sti
out
mov
test
(bad)
jne
mov
xor
or
inc
in
sub
add
sbb
pop
mov
adc
cs
mov
les
lock
stc
dec
jg
lea
inc
push
and
cwde
xor
pop
jecxz
jnp
test
add
sub
outs
sub
aam
xchg
daa
test
jne
mov
inc
test
stos
test
lock
hlt
push
pop
je
push
mov
jg
dec
jg
jne
bound
clc
cmp
push
adc
test
adc
clc
mov
daa
sbb
push
dec
add
add
daa
add
jmp
ror
push
and
pop
aam
dec
je
rcl
xchg
push
cmp
xor
inc
lea
push
retf
mov
push
mov
inc
add
xchg
and
rol
bound
and
cmp
push
adc
push
xchg
les
push
or
mov
inc
icebp
dec
sub
jae
adc
xor
ror
ror
(bad)
adc
jmp
or
jg
cmp
jno
jae
xchg
xor
xlat
push
dec
mov
enter
sti
push
xor
or
fdiv
jl
mov
mov
mov
hlt
add
aaa
add
add
(bad)
jo
adc
pushf
sbb
jns
mov
pop
add
add
leave
test
or
push
fadd
pop
inc
ja
push
ds
inc
and
sbb
jne
cli
pop
sti
adc
rol
sbb
mov
popf
mov
test
mov
mov
retf
pushf
(bad)
jnp
nop
and
add
and
pop
sbb
or
xor
(bad)
or
es
sub
jecxz
sub
inc
xchg
sbb
fldcw
pop
push
rcl
and
pop
cwde
adc
mov
(bad)
in
cmps
push
inc
pop
ret
(bad)
mov
adc
mov
add
and
sub
bound
stos
lock
test
cmp
mov
fidivr
shl
pushf
nop
call
add
out
arpl
push
lods
fimul
imul
mov
dec
dec
xchg
fnclex
adc
and
test
xchg
sbb
std
adc
adc
es
ins
in
mov
fisttp
mov
push
data16
xchg
add
push
xlat
add
mov
pop
das
sub
mov
nop
repz
cli
inc
iret
xor
inc
push
es
or
xlat
adc
aas
fisub
rol
pop
hlt
cld
pop
or
cmp
sub
addr16
sub
sbb
outs
and
mov
mov
cmp
(bad)
retf
enter
sbb
mov
adc
sub
adc
cmp
test
add
push
daa
stc
mov
fild
rol
test
outs
outs
fidivr
pop
scas
push
cmp
popf
push
mov
or
pop
dec
mov
xor
aaa
mov
dec
push
clc
cmp
push
js
cmp
loop
mov
les
call
xchg
and
mov
push
fsubr
sti
jmp
cmp
and
fs
adc
fcom
sub
lods
sbb
jb
dec
(bad)
mov
mov
not
dec
call
xchg
mov
pop
and
and
mov
pop
push
int3
out
pop
jl
push
out
xor
or
sbb
in
hlt
add
sub
add
dec
xchg
add
add
inc
xor
rol
jo
ds
aam
and
sbb
mov
fisttp
add
(bad)
mov
mov
jb
xor
fistp
data16
sbb
mov
cmp
fsubr
sti
daa
loope
pushf
cmp
loope
adc
sbb
dec
add
sbb
(bad)
movups
push
fnop
test
gs
inc
jmp
push
push
leave
rol
inc
push
aam
jmp
jge
and
sub
inc
jo
add
aas
xchg
mov
xor
add
mov
lds
or
mov
adc
rcr
aas
in
sbb
in
lock
loope
mov
cmc
or
pop
loopne
ror
sub
inc
mov
pop
neg
(bad)
xor
sub
aas
int
(bad)
and
movs
je
adc
jno
jae
repz
xchg
stos
add
imul
jg
outs
adc
jb
std
pop
and
or
inc
or
aam
movs
scas
adc
mov
ja
(bad)
jmp
mov
pmaddwd
arpl
jae
fadd
leave
xor
inc
mov
and
call
dec
in
push
movs
and
dec
push
or
push
jecxz
jo
inc
out
mov
pop
dec
lods
mov
(bad)
outs
sbb
pop
adc
sbb
jb
in
push
dec
add
in
jecxz
adc
leave
mov
jl
dec
push
cmp
dec
mov
add
addr16
mov
(bad)
adc
in
mov
push
inc
rol
movs
adc
cdq
jne
xor
sbb
dec
dec
shr
xchg
mov
and
jnp
push
push
dec
cmp
add
xlat
int3
jne
mov
push
call
call
cmps
enter
pop
xchg
nop
loopne
adc
vfrczsd
or
push
aaa
ins
cmp
pop
add
mov
int3
adc
arpl
imul
mov
xor
sub
adc
or
(bad)
aad
push
cmp
push
je
cmp
in
rcr
in
adc
cld
pusha
mov
jne
adc
sub
xlat
test
sbb
xchg
and
mov
adc
and
xor
movs
aad
pop
cmp
adc
addr16
cs
mov
fisubr
ja
jnp
ret
push
iret
pop
lds
dec
sub
iret
mov
sbb
or
mov
adc
aaa
clc
loop
ror
rol
ficomp
sbb
in
cwde
and
lods
inc
fmul
or
in
adc
jg
daa
dec
inc
shl
scas
add
mov
push
xchg
add
cdq
clc
fcmovnu
imul
dec
lods
xchg
mov
jmp
adc
inc
jmp
xchg
cdq
jae
xchg
jg
inc
jbe
inc
icebp
mov
add
or
stos
ret
test
rcr
push
daa
sbb
pop
inc
movhps
daa
or
add
inc
xor
inc
stos
ins
and
pop
out
sub
pop
add
out
loopne
cmps
stos
adc
mov
stos
add
pop
pop
sbb
mov
mov
jecxz
cld
shl
mov
mov
pop
and
sub
popa
or
inc
shl
inc
jmp
push
scas
push
jno
cs
or
mov
xchg
fwait
push
loope
or
std
lods
xchg
fnsave
lahf
adc
str
adc
pop
(bad)
xchg
aad
mov
or
xlat
sbb
pop
popf
stc
lock
(bad)
push
xor
sbb
jg
ins
push
cmp
not
or
add
sbb
enter
pop
mov
mov
push
outs
mov
inc
clc
daa
test
or
popaw
mov
pop
xor
push
ret
and
rcl
sbb
or
or
push
out
jg
lahf
clc
icebp
fdiv
xchg
inc
test
popa
bound
popa
mov
xor
adc
ins
lahf
add
iret
xchg
sub
out
jg
mov
pusha
push
push
and
jecxz
dec
sbb
xchg
daa
ja
inc
add
cwde
inc
xchg
(bad)
cs
test
test
jae
shr
and
adc
or
retf
fstp
inc
sbb
ja
iret
repz
out
daa
push
aas
sbb
sti
out
repz
imul
lds
lods
push
in
cmp
imul
or
jo
adc
dec
dec
jne
out
mov
and
inc
aam
ja
jmp
add
xlat
mov
mov
cmp
adc
adc
adc
in
push
repnz
mov
ja
adc
in
xchg
sub
ins
test
in
outs
pop
ret
sub
cmps
xor
pop
xor
ret
sub
add
adc
ficomp
adc
jp
mov
and
imul
icebp
lea
mov
fidiv
mov
ds
mov
or
push
jae
push
add
and
mov
mov
popa
sub
dec
icebp
or
fs
fild
inc
mov
mul
lds
jb
dec
dec
mov
dec
add
xchg
dec
mov
sbb
rcr
addr16
fmul
fs
dec
jne
rcl
sub
inc
sub
sbb
sub
ja
pushw
jns
mov
icebp
in
inc
aaa
and
or
daa
sbb
add
jg
push
push
jb
repnz
or
pop
inc
jp
and
mov
sub
push
and
mov
cdq
sub
inc
aam
adc
sbb
test
arpl
jle
movaps
add
push
xor
out
jg
and
mov
push
inc
shl
and
push
addr16
fild
or
xchg
imul
lds
push
movs
cmps
xor
mov
add
aam
push
xor
dec
add
adc
pushf
adc
mov
repz
jb
xchg
xor
inc
cs
outs
popa
adc
sub
adc
xlat
dec
add
adc
jo
add
inc
xor
push
nop/reserved
and
outs
sbb
jle
xchg
lock
hlt
push
add
or
and
inc
test
je
pop
aaa
or
mov
sbb
pop
in
add
gs
adc
sbb
call
mov
add
push
fwait
add
add
out
(bad)
push
ins
test
adc
or
sub
or
pop
lods
pop
xor
add
pushf
add
pop
movs
xlat
dec
xor
jns
inc
loope
jmp
jb
xchg
add
aam
add
adc
xchg
lea
adc
add
dec
mov
hlt
dec
cld
test
or
mov
mov
sbb
les
stc
scas
inc
mov
nop
imul
add
push
ror
rol
jb
jmp
cwde
dec
xchg
ffree
fist
xchg
and
ret
push
mov
and
(bad)
pop
push
das
das
or
call
pusha
inc
addr16
cmp
jnp
add
adc
mov
icebp
cmp
xor
xor
sbb
movs
mov
movs
jmp
nop
xlat
cmp
xlat
push
push
sub
test
inc
xchg
xor
mov
pop
adc
mov
adc
popa
xchg
inc
fistp
add
fild
add
sbb
mov
aas
cmp
sbb
in
mov
or
or
and
lock
and
(bad)
test
add
(bad)
xchg
nop
test
sar
push
in
ud2
dec
push
gs
cmp
pop
gs
shr
jmp
jmp
pop
scas
or
in
xchg
mov
sbb
sbb
pushw
ror
(bad)
loopne
add
into
mov
adc
push
outs
or
inc
jl
adc
repnz
push
or
scas
int
adc
pusha
fsub
outs
imul
test
sbb
sub
add
lahf
add
lds
jmp
ja
lahf
sbb
sub
fwait
pop
jmp
or
or
stos
or
jo
popa
push
add
stc
sbb
inc
jge
xlat
ud2
(bad)
mov
dec
stos
push
jae
push
test
dec
jnp
adc
mov
or
sub
call
test
xchg
or
inc
iret
dec
pop
repnz
cmp
cmps
sbb
dec
popa
jbe
add
cmp
or
xor
call
add
dec
adc
jmp
and
punpcklbw
mov
(bad)
dec
push
aaa
sbb
outs
loope
movs
add
add
pop
leave
fwait
sbb
in
push
or
dec
push
jbe
sbb
mov
lds
adc
mov
push
rcl
jo
loope
ror
xor
add
int3
push
shr
jnp
lea
stos
xchg
sti
scas
sbb
inc
mov
mov
or
jns
adc
outs
or
movs
inc
test
and
push
mov
(bad)
xor
(bad)
rcl
mov
pop
sbb
nop
out
std
push
sub
fwait
pusha
xchg
or
xchg
fs
inc
sub
stos
jge
rcl
cdq
out
and
out
lahf
dec
mov
xchg
push
push
and
sub
dec
(bad)
fsubr
or
add
test
push
push
sub
in
out
add
sub
push
add
dec
clc
pop
shr
sahf
clc
or
out
jg
jmp
sub
out
sub
in
or
pop
xor
add
stos
mov
jle
adc
sub
add
sub
xor
imul
mov
push
pop
div
enter
sub
add
fwait
rol
scas
xchg
mov
sbb
leave
enter
inc
shl
fcom
jno
xchg
lods
pop
jg
dec
je
xchg
leave
rol
sbb
xchg
daa
push
jnp
sbb
imul
add
ret
sbb
pop
data16
push
and
inc
add
and
adc
jae
push
sub
dec
repnz
adc
pushf
or
or
sub
xchg
mov
sub
dec
adc
mov
dec
and
add
stos
adc
icebp
xor
rcr
stos
test
mov
xor
push
and
inc
daa
into
test
jmp
mov
xchg
inc
retf
pop
xchg
sub
fwait
test
test
inc
test
add
jmp
dec
mov
sub
retf
mov
(bad)
out
cmp
sub
xchg
dec
pushf
mov
dec
cmp
jmp
xor
ins
retf
fdiv
leave
(bad)
pop
dec
xor
nop
sbb
add
jnp
lea
xor
cs
cli
enter
test
inc
cmp
ins
pop
xor
int3
inc
pop
mov
inc
cmp
pop
push
xchg
ins
push
xor
scas
pop
pusha
dec
call
inc
call
stos
push
mov
aaa
mov
es
cmps
push
nop
mov
popa
ret
sbb
movs
sti
push
sbb
xor
fsub
or
mov
lods
cld
adc
or
sub
pop
add
mov
das
lock
lahf
cdq
mov
adc
add
in
in
dec
or
not
pop
fmul
aam
stc
xchg
push
adc
jno
xor
adc
sbb
pusha
pop
sub
adc
mov
push
mov
in
movs
loopne
fadd
mov
js
daa
sub
mov
cmps
pop
in
fst
outs
aam
or
mov
jo
xor
add
test
sbb
mov
cmp
xor
push
icebp
shr
and
and
sbb
add
scas
es
out
cld
cmp
sbb
xchg
(bad)
clc
ja
lods
xor
sub
rol
test
adc
popa
xor
dec
mov
mov
out
mov
mov
ret
test
sti
mov
jl
and
cmps
mov
mov
mov
push
sub
lea
push
stc
test
imul
retf
retf
pop
jno
and
rep
push
sti
bnd
push
data16
cmp
inc
dec
out
scas
pop
mov
mov
in
add
rcl
inc
retf
push
int3
cmps
dec
daa
pop
(bad)
(bad)
or
mov
push
mov
push
mov
adc
gs
mov
inc
repnz
jno
fsub
pop
add
dec
or
sbb
ins
rcl
sar
sti
cmp
sub
inc
sub
es
loopne
(bad)
aam
ins
mov
mov
jbe
sub
pop
(bad)
jmp
cmp
les
adc
cdq
xlat
adc
cmp
mov
mov
adc
pop
mov
pop
push
adc
loop
jno
into
add
push
into
jg
retf
adc
popa
loopne
adc
and
lods
(bad)
out
and
ret
adc
xchg
lods
cmp
mov
sbb
xchg
sbb
pusha
xor
js
popf
pop
sub
xchg
out
cmps
add
ret
mov
inc
test
lahf
ret
movs
ja
adc
add
sbb
shl
ret
sub
cmp
ficomp
(bad)
(bad)
nop
sbb
adc
loop
adc
pusha
cmp
lock
add
(bad)
mov
movs
test
fbld
or
(bad)
and
cmovae
add
mov
cmp
add
sar
cmc
push
adc
adc
add
add
repz
pushf
outs
adc
aad
scas
in
add
adc
sbb
lea
sbb
mov
dec
or
mov
int
pop
stos
and
inc
inc
inc
je
or
gs
dec
or
mov
mov
lds
ret
loop
xchg
pop
dec
test
idiv
cmc
sbb
hlt
dec
adc
adc
clc
popf
or
bound
mov
add
dec
inc
pop
push
xchg
adc
add
or
movs
lock
adc
les
lahf
or
sub
xchg
out
inc
sub
inc
out
cs
aas
lock
mov
(bad)
pop
mov
add
jo
inc
xlat
shr
(bad)
adc
adc
inc
dec
inc
sub
mov
sub
pop
in
mov
mov
add
daa
cmovp
ret
repnz
and
imul
dec
(bad)
scas
jp
add
rcl
fisubr
mov
push
in
bound
xor
ds
jge
or
jbe
adc
outs
ficom
push
mov
xchg
icebp
sub
and
push
mov
cmp
xchg
pop
ret
addr16
sbb
push
ins
xchg
movs
or
mov
test
stc
sub
dec
xor
out
inc
dec
and
scas
adc
push
setg
add
dec
add
loopne
push
dec
rcl
clc
cld
adc
in
sti
push
xor
imul
lds
(bad)
and
mov
popa
(bad)
and
xlat
data16
pop
rcl
pop
std
cli
mov
adc
inc
pop
mov
or
sub
add
cmp
jmp
and
adc
pop
out
push
add
sbb
scas
fsubr
enter
ja
iret
sbb
or
inc
js
push
lock
dec
push
add
push
popf
adc
ror
fdivp
lock
lock
lods
pop
sub
pusha
rol
pop
adc
outs
nop
dec
xor
pushf
jmp
xchg
sbb
add
imul
sbb
xchg
push
lods
mov
call
in
out
in
adc
mov
or
push
test
nop
or
ins
or
cwde
xor
(bad)
jne
and
mov
clc
mov
sbb
inc
and
adc
bound
push
cwde
adc
shr
xchg
lahf
lahf
(bad)
push
clc
mov
hlt
vandps
push
ror
jnp
and
in
mov
fdiv
mov
nop
sbb
sbb
(bad)
pop
push
adc
scas
mov
test
xor
and
xor
ins
in
dec
mov
jno
push
xor
dec
and
xchg
pusha
je
sbb
adc
or
js
ret
cmp
sub
add
jge
out
push
pop
push
sub
ins
adc
mov
mov
add
add
adc
sub
stos
and
xor
inc
mov
sar
adc
cmp
push
jmp
(bad)
clc
inc
push
hlt
cmp
mov
xor
pop
fldcw
sbb
cmps
imul
lahf
and
adc
call
push
popf
add
lahf
sub
test
cmp
or
dec
jae
jg
int3
mov
stc
mov
xchg
mov
sub
sbb
lock
cwde
dec
test
mov
outs
jmp
or
in
iret
jnp
repz
pop
dec
movs
mov
or
mov
sub
cwde
sti
std
jns
xchg
xchg
cmp
ss
pop
add
inc
dec
cli
icebp
add
pop
xchg
xchg
jo
and
dec
sbb
pop
inc
or
jnp
fwait
cld
movs
test
adc
sti
mov
jge
sub
je
aas
add
and
inc
fiadd
adc
add
mov
lahf
xor
push
cmp
cld
adc
dec
ins
in
enter
add
push
mov
cmp
add
add
lds
sub
push
pop
popa
add
adc
mov
or
data16
push
and
pop
pusha
jns
ficom
std
rol
push
pusha
add
mov
dec
leave
xor
imul
movs
jns
je
sbb
test
clc
inc
push
addr16
or
dec
rep
jbe
xor
ins
cld
pop
inc
fisttp
or
sub
mov
pop
inc
cwde
bound
mov
xchg
lea
sbb
mov
loopne
mov
jb
jecxz
leave
ins
in
sbb
and
ds
(bad)
cmc
cmp
and
mov
cli
mov
mov
mov
add
xor
rol
out
clc
or
mov
aas
ja
lock
loopne
fcomp
in
outs
mov
add
lods
jb
movs
sub
sub
fdiv
adc
ss
pusha
jns
mov
add
fnstsw
fdiv
and
push
cmps
aam
adc
sbb
xchg
retf
jno
mov
scas
daa
or
les
movs
mov
out
in
jp
mov
mov
add
rcl
mov
ja
mov
add
cdq
das
jo
mov
jno
inc
or
ret
push
mov
mov
(bad)
mov
ret
call
adc
stc
test
sbb
mov
movs
enter
xlat
sub
inc
(bad)
xlat
xor
add
repz
pushf
out
iret
jns
mov
rol
fistp
cli
out
xchg
pop
pop
jb
mov
je
dec
inc
or
jae
xor
xor
pop
pusha
xor
xor
fs
xor
je
jl
ins
fcom
lods
or
xor
iret
loopne
mov
dec
stos
pop
test
stc
jl
mov
cmp
cmp
popf
enter
or
cmp
inc
add
mov
dec
xor
and
xchg
sti
push
mov
and
pop
xchg
je
or
xor
add
xchg
sbb
lahf
es
mul
int3
int3
sbb
fdiv
or
test
out
sbb
inc
fidiv
sub
or
add
fcom
adc
nop
mov
jecxz
in
jb
loopne
in
add
add
push
ja
sub
and
mov
xor
clc
repnz
hlt
or
mov
cmp
aaa
call
int3
inc
fisub
loopne
in
push
loopne
add
fcom
aad
mov
sub
jns
lock
sar
int3
mov
and
enter
into
push
sbb
adc
(bad)
in
in
push
adc
cmps
sar
mov
sbb
mov
inc
xor
test
lods
jecxz
sub
dec
xor
sub
fdivr
add
pop
shr
mov
add
nop
(bad)
adc
mov
push
lods
adc
lar
mov
in
inc
inc
enter
pop
jl
or
iret
iret
add
sub
push
dec
push
and
push
or
shl
dec
and
test
popf
adc
sub
imul
enter
ret
call
stos
cmp
imul
pusha
jae
les
jb
in
cwde
jno
mov
xchg
pusha
ucomiss
pop
jge
icebp
push
dec
inc
cld
test
mov
lds
sub
pop
dec
ds
ins
mov
lock
shl
mov
cmp
mov
sub
sub
mov
dec
wbinvd
ins
push
movs
pusha
fs
and
pop
test
pop
gs
or
cs
leave
cmc
pop
pop
mov
das
(bad)
mov
in
dec
jo
aaa
add
test
das
popa
aad
xchg
das
dec
jo
imul
out
lea
mov
pushf
lea
pop
pop
inc
xchg
and
lods
inc
js
out
mov
lods
xor
loopne
(bad)
push
sub
leave
mov
and
adc
and
adc
or
(bad)
sbb
mov
add
aad
sbb
imul
xchg
movs
pop
pop
cmp
and
add
mov
and
mov
test
out
and
jae
add
call
cmp
sbb
push
call
add
mov
lods
cmp
imul
adc
movs
mov
mov
cmp
mov
inc
je
inc
scas
test
das
cmp
arpl
dec
jo
(bad)
mov
sub
mov
mov
inc
sbb
push
sub
cmp
and
out
leave
sbb
adc
in
jo
das
mov
mov
mov
lods
imul
das
cmp
mov
sub
or
or
push
inc
mov
loopne
mov
daa
jns
cmp
push
xchg
call
mov
xchg
inc
push
cmps
nop
ficomp
cmp
hlt
jmp
cmp
and
sbb
dec
jo
loope
fsub
pop
and
inc
cmp
add
mov
or
mov
das
test
test
lods
call
inc
(bad)
sbb
push
sub
or
in
pop
mov
push
or
leave
sbb
adc
xor
xchg
dec
imul
enter
xchg
call
popa
test
test
popf
in
pop
cmp
pop
or
push
scas
aaa
pop
stos
add
das
test
ret
imul
lods
jo
pusha
adc
jns
xchg
(bad)
ret
ror
test
dec
test
pop
aad
xlat
mov
push
(bad)
in
imul
rcr
cmp
sar
cmp
or
jecxz
sub
sub
dec
adc
icebp
cmp
ror
dec
je
inc
fs
push
xchg
hlt
in
sbb
pusha
mov
push
mov
je
jbe
xor
outs
sbb
cmp
outs
rol
movs
out
xchg
arpl
jbe
lods
xor
jno
adc
xchg
popa
or
ss
xchg
fwait
sbb
(bad)
in
sub
in
push
hlt
sub
sar
jo
inc
and
cmp
test
jge
pusha
cmp
push
push
mov
(bad)
rcr
imul
rol
add
fiadd
pop
push
pop
mov
push
or
loopne
push
cmp
adc
pop
adc
in
fnstcw
or
stc
nop
dec
push
idiv
xchg
push
mov
scas
aas
or
pop
pop
xchg
movs
iret
adc
xchg
data16
std
adc
adc
mov
arpl
push
mov
pop
mov
ret
jne
(bad)
xlat
sub
add
ss
inc
arpl
push
or
jecxz
outs
push
jp
pop
cmovo
or
inc
imul
sub
shl
adc
repnz
je
or
out
repnz
mov
fisttp
in
jb
mov
test
dec
add
or
or
push
je
scas
adc
inc
popa
mov
pop
pop
xor
inc
cmp
cmp
or
pop
pop
add
mov
sahf
ins
mov
nop
push
mov
or
lahf
shl
ror
sbb
mov
or
cmp
xor
repz
mov
in
cmp
shr
mov
in
mov
mov
add
dec
pop
mov
in
cmp
mov
push
pop
pop
cdq
push
enter
xor
enter
call
and
or
int3
cmps
and
push
inc
push
inc
jecxz
and
cmc
(bad)
jl
adc
(bad)
lds
dec
mov
dec
movs
inc
pusha
clc
ror
daa
inc
sub
icebp
xor
xor
adc
repnz
push
call
and
inc
loopne
retf
mov
xor
popa
movsx
cmp
push
sbb
cmp
bound
or
inc
inc
xchg
in
jno
sbb
sbb
loopne
xor
test
sub
cdq
push
outs
mov
jbe
inc
daa
lods
jnp
or
gs
mov
mov
jo
dec
fsub
mov
je
push
cmp
dec
sub
ins
add
xor
out
inc
push
pop
retf
push
xor
in
xchg
sbb
xor
mov
sub
sar
xor
and
sbb
add
aam
jge
jns
dec
and
pop
sbb
sbb
gs
pop
mov
cmps
leave
or
inc
xchg
mov
xchg
jg
das
add
rcr
nop
je
or
sub
mov
cdq
and
jmp
inc
lock
je
xchg
push
and
push
aaa
xor
lock
add
fcmovb
jmp
adc
cmp
mov
sbb
call
sub
jne
inc
clc
cdq
sub
and
and
addr16
push
stos
dec
mov
add
shl
das
sbb
mov
adc
neg
push
adc
jl
or
jg
fild
inc
or
movq
outs
dec
add
or
jne
clc
call
lock
dec
std
adc
or
aas
or
mov
fst
or
cmps
imul
xor
sbb
sub
dec
push
pop
movs
std
shr
dec
push
dec
push
es
ret
inc
js
cmp
sbb
jns
ror
test
sbb
inc
dec
dec
jl
mov
sar
enter
ds
sti
pusha
ss
add
shl
mov
add
gs
and
outs
add
sub
mov
scas
cmp
lock
mov
inc
imul
xor
sub
jmp
test
cs
mov
push
jmp
mov
add
outs
and
push
lea
push
loop
sbb
or
test
adc
or
jp
mov
inc
sbb
std
ins
and
dec
and
mov
xchg
pop
rcl
and
bound
outs
xchg
dec
(bad)
jno
add
jp
sub
mov
cwde
dec
sbb
aas
ja
fwait
rcl
(bad)
icebp
sub
frstor
adc
ja
xchg
push
add
inc
push
sub
cmp
jae
pop
or
or
cmp
sub
jmp
xchg
sub
push
sub
shr
mov
push
sub
sub
inc
add
pop
ficomp
push
fimul
je
dec
push
cmp
add
mov
mov
cmp
shr
mov
sbb
ja
and
jp
sbb
ja
shl
inc
loopne
cmps
int
fnstsw
cmp
mov
adc
adc
inc
inc
inc
add
mov
pop
dec
adc
ss
not
mov
xchg
sbb
and
adc
fiadd
or
sti
or
sub
dec
xchg
xchg
lods
cmp
pop
les
test
lock
nop
add
enter
lock
(bad)
mov
(bad)
es
pop
inc
pop
scas
sti
lds
cmp
ret
xor
test
sbb
mov
pusha
push
sbb
int
test
adc
push
push
and
inc
add
scas
sti
mov
xchg
mov
jp
sub
es
push
add
mov
push
push
sbb
js
adc
add
(bad)
sbb
mov
call
add
cmp
or
and
jne
jne
mov
call
xor
sbb
pop
or
lea
dec
xor
cmp
leave
inc
mov
or
and
shl
hlt
lock
pusha
test
sar
sbb
mov
xor
add
data16
jo
loop
popa
inc
jbe
sbb
loop
aas
xchg
and
cmp
jb
add
(bad)
shr
inc
outs
jp
stos
or
addr16
xchg
mov
adc
or
test
and
cmp
repnz
jg
nop
adc
(bad)
(bad)
cmc
jns
pop
icebp
xchg
and
xchg
adc
les
dec
push
inc
inc
push
fcmovnbe
fist
add
inc
add
dec
scas
add
es
jne
inc
sub
adc
dec
sbb
out
or
adc
adc
(bad)
dec
movs
ret
sbb
neg
xchg
mov
out
sub
loope
add
pop
push
repnz
push
jge
push
push
ds
adc
stos
cmp
inc
pop
jne
mov
imul
jne
xchg
je
pop
sbb
seta
or
cmp
sti
ror
jno
cwde
jmp
movs
pop
pop
dec
outs
sbb
iret
adc
jmp
xchg
or
push
cmp
or
mov
sar
cmp
out
adc
add
addr16
dec
adc
cwde
pop
and
(bad)
mov
mov
cmps
pop
mov
dec
mov
fmul
in
pop
sahf
jbe
jl
daa
jecxz
xor
jmp
pop
or
adc
sub
fwait
fwait
sbb
shl
and
and
inc
stos
dec
sbb
loope
add
and
divps
jg
cmp
adc
adc
imul
adc
adc
and
das
push
push
inc
jecxz
shl
or
shr
jle
add
add
add
in
pushf
push
push
loopne
xor
sub
add
add
iret
or
adc
ja
add
pop
mov
ds
sbb
dec
call
add
hlt
inc
les
pop
ss
sub
(bad)
and
dec
add
lods
and
push
or
(bad)
fimul
jmp
stos
add
pop
xor
adc
push
jmp
mov
lds
das
retf
out
lds
mov
loopne
or
or
pushf
(bad)
ret
xlat
mov
adc
jns
movaps
ss
or
ss
fcom
add
cmp
pop
inc
fs
mov
xor
sub
mov
out
add
or
push
(bad)
ret
rol
popf
rcr
cmp
mov
push
cmp
add
in
ror
aaa
xchg
and
rol
push
sub
add
lahf
aaa
sub
daa
sub
mov
mov
lahf
lock
jns
lock
or
or
pop
jp
movs
mov
mov
sub
das
pop
sbb
push
les
xchg
adc
je
push
aas
push
push
loopne
pop
and
inc
add
ja
dec
sub
push
js
jle
push
and
neg
push
add
mov
sbb
inc
mov
jl
add
push
adc
inc
hlt
push
push
cmp
cs
mov
or
pusha
and
push
jb
jbe
out
fisttp
fwait
mov
xchg
iret
dec
jle
jbe
retf
lds
ror
cmps
outs
pop
cmp
pop
xor
inc
inc
aam
and
dec
dec
mov
inc
push
pop
cmp
int3
out
cmp
add
int3
retf
inc
pop
jecxz
inc
addr16
in
push
sub
xor
ret
sbb
sub
push
mov
scas
lea
pusha
pop
sub
mov
scas
xor
es
push
enter
pop
push
sub
inc
adc
push
dec
xor
aas
in
ins
or
adc
sbb
addr16
inc
jle
data16
loop
shr
adc
sahf
dec
test
int
sbb
int
xor
mov
add
fs
cmp
pop
push
add
sub
pop
push
loopne
or
push
adc
dec
jnp
sub
sub
push
ja
mov
jmp
push
fsub
push
xor
jne
sub
push
nop
add
mov
push
mov
cmovbe
ins
sbb
sub
jns
loope
jno
push
sub
sar
adc
push
sbb
retf
jecxz
sbb
xchg
cwde
push
bound
aaa
sbb
lea
inc
pop
ror
and
aad
(bad)
shl
dec
push
jbe
call
push
mov
xchg
inc
fdiv
mov
loop
push
aas
jmp
inc
pop
sbb
push
mov
push
inc
add
adc
inc
sub
js
cmp
cs
push
push
push
cvtps2pi
inc
scas
in
or
pop
add
add
ror
popw
loope
mov
mov
xchg
push
mov
jae
push
icebp
dec
stos
xor
outs
leave
sbb
mov
cwde
out
je
xchg
adc
cmp
ds
adc
xchg
add
mov
std
into
mov
sbb
adc
or
js
popf
rol
or
sahf
xor
cmps
imul
lea
cwde
rol
jb
add
cwde
push
push
mov
dec
(bad)
cwde
or
rcr
cmp
or
sbb
push
shl
fmul
bound
loopne
out
sub
aad
add
cmp
ins
movzx
adc
sub
pop
icebp
mov
or
xor
test
movaps
pop
jecxz
adc
outs
jmp
ja
sbb
sar
test
sub
or
arpl
arpl
sub
les
mov
fild
jbe
loopne
bound
cmp
sbb
ret
sub
inc
pop
enter
imul
inc
adc
shl
xchg
imul
adc
mov
pop
nop
adc
or
cmp
lahf
jnp
rcr
and
add
adc
daa
(bad)
mov
es
and
and
add
cwde
dec
or
lds
das
sbb
push
inc
icebp
mov
and
out
mov
jne
outs
outs
xor
jge
xchg
addr16
or
das
pop
and
gs
xchg
mov
popa
test
jp
daa
and
jno
dec
lahf
movs
push
mov
mov
mov
je
xchg
lock
js
out
cmp
mov
push
cs
jp
inc
sub
(bad)
push
hlt
popa
push
out
push
xor
sub
jecxz
mov
sub
bound
mov
mov
sub
pop
pusha
push
jb
aas
inc
ja
not
xchg
lea
dec
dec
xchg
mov
add
push
and
je
sub
add
dec
pop
xchg
jae
push
add
pop
iret
push
pop
cmp
mov
inc
sar
push
adc
push
xchg
call
add
add
fld
add
push
jmp
mov
or
inc
or
cmc
popa
xor
push
inc
cmp
pop
loopne
sahf
std
test
push
setno
lods
adc
cmps
iret
adc
bts
enter
scas
in
(bad)
enter
jns
add
push
push
bound
xor
hlt
inc
push
std
repz
stos
mov
xchg
jb
ins
sbb
dec
dec
inc
pop
xchg
pushf
pusha
popf
cmp
ja
fldcw
call
in
add
jle
dec
in
xor
lahf
sub
cmp
push
jbe
sub
jg
ins
and
dec
push
and
add
mov
pusha
dec
leave
push
pop
nop
stos
dec
retf
dec
int
sbb
push
add
cmc
push
ja
mov
inc
lahf
or
inc
pop
in
add
or
out
inc
(bad)
sub
dec
or
adc
cdq
push
sub
xor
imul
mov
mov
imul
pop
mov
cmovl
jmp
mov
pop
cmp
xchg
call
and
sahf
cld
xor
sub
and
addr16
pop
push
xchg
mov
and
push
lahf
mov
mov
adc
mov
out
adc
dec
movs
mov
fldenv
pusha
lods
out
ret
hlt
add
mov
in
dec
adc
aam
mov
cmp
mov
mov
mov
push
mov
adc
shl
loopne
xchg
adc
outs
and
dec
fmul
loopne
cmp
das
cmp
and
adc
and
neg
daa
(bad)
and
add
cmovae
or
retf
leave
sti
fidivr
rcr
frstor
mov
ret
inc
push
inc
xor
mov
mov
xor
test
inc
push
and
sbb
ret
mov
sbb
bound
movs
xchg
popf
or
loop
push
or
pop
scas
jge
dec
addr16
add
sbb
mov
je
push
(bad)
call
add
in
adc
add
mov
jne
jp
xor
imul
bound
cmp
out
or
jp
pop
add
sbb
or
add
loope
sub
cdq
inc
mov
xchg
push
mov
mov
cld
test
jae
int3
and
mov
addr16
fisubr
(bad)
scas
gs
shr
mov
mov
adc
sub
add
cdq
inc
ror
inc
adc
bound
xchg
nop
loopne
push
outs
rcl
xchg
loopne
fs
xor
add
add
cmc
add
ja
mul
or
adc
inc
xor
mov
dec
add
mov
sbb
xchg
add
add
enter
add
mov
add
or
enter
push
adc
xchg
fdiv
add
add
popa
cmps
adc
xchg
test
cmps
push
jmp
sbb
rol
loop
scas
std
jne
xchg
push
ffree
test
inc
add
or
sbb
add
int3
bound
push
add
or
bound
out
sbb
fs
or
xchg
or
jae
fsub
and
stos
fstp
(bad)
or
add
icebp
mov
add
add
sub
or
push
ret
hlt
retf
mov
inc
pop
add
rol
loopne
fwait
(bad)
gs
cmp
dec
test
ja
pop
or
xchg
push
div
xchg
sub
scas
lock
int
sbb
mov
pop
ins
sahf
cld
jno
push
or
aas
push
adc
cmp
xor
cmp
jle
pop
adc
jb
sub
push
add
cmp
and
adc
out
jb
(bad)
mov
cmps
sub
push
jmp
sub
and
call
add
sub
add
arpl
pop
lea
mov
fcom
lds
fld
rcr
mov
add
or
xchg
xor
mov
mov
adc
lahf
pop
xor
cmpps
dec
adc
pusha
push
shl
adc
pop
mov
sar
push
add
sub
add
test
and
jo
dec
mov
movs
pusha
jmp
cmp
adc
cmp
or
or
jno
push
or
or
fs
mov
push
int
js
jmp
xchg
mov
ins
push
test
fmul
jbe
sbb
loope
mov
jae
inc
sbb
loopne
hlt
xchg
imul
xor
mov
in
into
fs
push
cld
(bad)
lods
jmp
loopne
jbe
sub
cdq
add
in
and
les
loopne
dec
cmp
mov
test
loopne
inc
je
cdq
sub
sub
ds
inc
cmp
adc
movs
cmp
call
aad
int
push
pop
mov
mov
ror
jo
mov
fs
call
mov
mov
add
inc
xchg
int3
mov
arpl
out
(bad)
icebp
shl
mov
(bad)
jne
ins
dec
sbb
sbb
push
mov
adc
out
scas
push
or
fistp
movs
and
add
jb
jp
and
bound
add
or
sub
hlt
xchg
ins
fadd
mov
pop
(bad)
and
xchg
mov
test
mov
xor
call
mov
push
(bad)
lock
(bad)
adc
movs
inc
push
test
jp
fmul
outs
inc
es
imul
cs
movs
adc
xor
or
sub
sub
mov
shl
add
lahf
jbe
out
xor
mov
shl
and
inc
mov
ret
dec
loop
xor
sub
dec
loop
in
lea
mov
jae
jmp
push
fistp
xor
in
imul
add
xchg
adc
pop
fadd
sub
arpl
cmp
add
inc
adc
push
inc
pop
sub
sbb
add
int3
inc
push
mov
xchg
sub
and
shr
jo
(bad)
int3
add
fst
rol
adc
lds
lods
int3
pusha
hlt
and
add
cmps
sub
or
int3
mov
mov
loopne
or
popa
push
pop
sbb
pop
shr
mov
shr
les
sbb
ds
rol
push
and
stc
js
movs
cmps
mov
(bad)
clc
or
and
add
(bad)
shl
cmc
inc
inc
(bad)
(bad)
shr
push
arpl
scas
push
hlt
jae
mov
mov
(bad)
test
les
enter
jnp
jmp
push
lds
or
add
scas
inc
push
outs
mov
cmc
and
dec
push
test
(bad)
ror
in
jo
jb
mov
lods
fsub
jne
inc
sbb
out
add
xchg
adc
xor
shr
loopne
es
popa
ss
test
fwait
dec
mov
push
stos
jnp
xchg
or
or
in
mov
shl
clc
push
jne
cmp
call
daa
mov
gs
push
dec
pop
mov
loopne
push
pop
mov
add
aaa
outs
pop
out
adc
clc
push
mov
bound
mov
cmp
dec
pop
add
std
dec
repnz
jne
rcl
mov
sti
jne
pop
xchg
mov
(bad)
idiv
pop
js
(bad)
bound
and
push
sub
ret
test
ins
repnz
lock
push
jmp
sub
into
cmp
enter
inc
jp
neg
test
idiv
push
into
adc
or
or
push
adc
cwde
add
inc
clc
aad
xchg
sub
dec
or
rol
add
push
push
inc
xchg
aad
jo
nop
cmp
add
or
enter
scas
sbb
xor
mov
ss
outs
daa
and
shl
push
xor
enter
ret
in
adc
test
cmp
rol
push
mov
xchg
dec
or
pop
push
or
sbb
rcl
stos
(bad)
rcl
mov
mov
adc
popf
lock
xor
(bad)
sbb
mov
mov
pop
loopne
test
pop
loopne
imul
or
push
push
fsub
mov
aas
push
lea
pop
push
lods
push
mov
mov
cmp
out
inc
cmps
fmul
sbb
(bad)
ret
popf
neg
jl
mov
xchg
dec
movs
mov
push
mov
xor
push
add
add
adc
loopne
inc
mov
enter
jo
add
push
sub
push
rcl
je
cwde
cmp
cld
push
or
xchg
mov
pop
push
enter
adc
adc
xchg
shl
xchg
lea
loope
lods
stos
outs
jnp
std
cmps
inc
sub
fdivr
adc
jecxz
clc
mov
mov
xor
dec
(bad)
lods
test
inc
and
mov
mov
and
mov
rol
fimul
pusha
sbb
and
int3
jmp
mov
sbb
add
cmp
into
push
or
pushf
loop
fist
jg
xor
adc
mov
sbb
fwait
mov
leave
mov
or
loopne
emms
mov
pop
and
je
sbb
aas
fst
lea
push
push
pop
mov
shl
sbb
cmp
jg
sub
adc
sub
gs
(bad)
mov
inc
adc
xor
adc
fiadd
lea
adc
stc
mov
lea
sahf
rol
jge
adc
xor
loop
adc
pop
and
mov
and
and
cmp
or
loopne
or
cmp
add
pop
pop
ret
sar
(bad)
sub
mov
xchg
sub
pop
or
sar
xchg
in
into
mov
fimul
jle
xchg
dec
js
shr
push
clc
into
add
ror
add
lock
inc
cmp
in
push
iret
sti
lea
dec
sub
jg
push
or
push
imul
pushf
jl
add
push
nop
out
out
cmp
pop
mov
inc
push
pop
imul
gs
mov
jle
cmp
jbe
push
(bad)
push
jmp
add
je
mov
inc
mov
adc
pop
popf
xchg
jle
mov
js
push
mov
ficom
nop
lahf
push
jg
jmp
cmp
rol
adc
in
jnp
sub
or
push
jns
xor
aas
outs
or
or
or
push
sub
sub
cmps
sbb
cmp
pop
jbe
push
movs
sub
cs
cli
repnz
add
or
in
call
pop
or
add
inc
dec
mov
imul
pop
adc
add
fisttp
inc
sar
xchg
pop
and
adc
loope
xor
mov
adc
jl
or
out
add
jmp
or
adc
jns
sbb
popf
je
icebp
mov
iret
mov
fnstsw
xchg
inc
dec
jge
dec
and
loopne
jae
xchg
push
adc
jbe
jne
nop
cmp
jb
xor
in
nop
adc
mov
mov
popf
mov
jl
test
(bad)
pop
mov
cmp
inc
inc
cmp
push
or
push
inc
rol
mov
adc
popa
pop
sbb
pop
cmp
mov
mov
fisttp
int
xchg
or
mov
enter
or
xchg
shl
pop
push
or
fs
adc
cdq
icebp
mov
and
mov
pop
mov
je
lods
adc
xchg
xchg
push
sbb
arpl
sbb
xor
add
je
inc
inc
or
jns
xor
aam
or
push
xor
cmp
jle
sub
inc
fucom
jecxz
inc
adc
movs
mov
inc
add
cmp
es
mov
pusha
mov
shl
daa
add
and
cmp
sub
dec
nop
add
adc
inc
push
mov
sub
jle
pop
inc
sub
cmps
fdiv
mov
and
mov
jge
jl
sub
jg
inc
test
adc
inc
fs
sahf
test
retf
xor
test
sub
ins
inc
cmp
jp
jmp
cmc
ja
sbb
adc
sbb
enter
sub
jecxz
icebp
or
mov
stc
cmp
scas
dec
not
add
js
xchg
xchg
sbb
imul
sar
test
sbb
jmp
sbb
in
cmp
fcmovnu
jnp
loope
xchg
repnz
inc
rcl
dec
scas
xchg
push
and
xor
dec
and
(bad)
sbb
mov
push
clc
shr
cld
js
sub
cmp
jg
sub
repnz
test
and
je
jl
lea
and
xor
nop
not
out
push
cmps
fsub
adc
loope
mov
dec
(bad)
pop
test
push
or
lea
adc
and
and
ret
or
ret
sbb
jp
mov
(bad)
test
cmp
adc
adc
ficomp
rol
add
push
sub
movs
loope
(bad)
jg
icebp
jo
push
mov
pop
shl
dec
jle
or
inc
mov
and
test
push
sbb
lock
mov
aam
imul
dec
pop
jmp
clc
add
add
jns
xchg
repz
add
shr
push
mov
in
mov
mov
lea
loopne
xor
or
mov
cmp
or
ret
mov
inc
cld
sbb
adc
sub
jl
jmp
(bad)
and
and
sar
or
add
or
or
xchg
cmp
inc
popa
mov
and
lods
push
cmp
shl
(bad)
mov
jns
pop
inc
pop
push
mov
repnz
add
add
out
stos
fmul
inc
int
xor
aaa
dec
mov
xchg
pop
adc
ret
in
rcr
ins
and
data16
daa
cmp
pop
and
mov
fiadd
add
mov
ret
rol
sub
inc
(bad)
ja
test
retf
sub
mov
inc
mov
mov
test
xchg
and
lea
cld
test
push
loope
call
lock
cmps
cmp
jmp
aaa
pop
push
inc
outs
clc
mov
loopne
fdiv
or
sbb
lea
leave
in
sbb
mov
xor
fcom
outs
(bad)
adc
sub
jl
cmps
leave
scas
push
sub
aam
sub
xchg
leave
adc
out
mov
in
dec
sbb
dec
jne
push
adc
push
addr16
jge
jne
sub
(bad)
nop
push
stos
mov
push
je
mov
(bad)
pushf
and
movs
ror
mov
cmp
icebp
or
js
jge
mov
and
mov
jns
mov
jmp
outs
mov
mov
inc
lods
push
lods
test
and
mov
(bad)
or
mov
ror
or
adc
shl
sub
sbb
push
scas
inc
ret
adc
scas
or
test
jns
add
mov
or
xchg
sbb
push
jnp
inc
dec
push
mov
in
sub
sub
adc
jo
jmp
sub
sbb
adc
ret
rcl
xor
int3
jo
mov
mov
dec
pusha
cwde
inc
sbb
sub
loope
jl
mov
aaa
mov
loop
or
inc
ror
mov
sub
add
(bad)
sub
or
stos
cmp
clc
or
mov
sub
fs
in
mov
mov
xor
dec
das
sub
jmp
sub
xor
sbb
sbb
push
xor
jg
jae
loop
push
xchg
push
jmp
jge
adc
mov
add
icebp
dec
sub
push
adc
and
add
sub
push
dec
mov
sbb
pusha
add
push
adc
loopne
sbb
sbb
rcl
xor
mov
xchg
mov
mov
cmp
lock
and
sub
cmp
xor
nop
inc
cmp
fs
fwait
ja
xchg
jo
aam
add
loopne
xchg
pusha
or
lahf
nop
retf
mov
inc
in
loopne
inc
rol
cmp
add
std
call
test
sub
pusha
xchg
mov
add
mov
dec
dec
aaa
ror
fld
nop
mov
dec
fild
xlat
sbb
jno
mov
xchg
mov
fisttp
inc
push
sbb
dec
dec
nop
and
and
repnz
add
inc
scas
or
sub
and
mov
and
mov
pop
dec
scas
nop
sbb
pop
pusha
pop
sbb
enter
cmc
mov
fs
mov
mov
cmc
pusha
inc
mov
mov
sbb
jmp
int
pop
jp
jno
add
mov
into
ins
cmps
jno
xor
dec
sbb
outs
fucom
ret
mov
or
pop
neg
scas
dec
mov
cmp
cmp
and
mov
mov
cmp
add
or
repnz
es
dec
mov
rol
jge
jnp
ja
fisttp
retf
adc
pop
fiadd
mov
push
iret
out
dec
cld
sbb
jecxz
dec
sub
xor
or
xchg
xor
adc
jns
rcl
sbb
mov
lds
sti
inc
push
and
or
stc
dec
shl
sub
dec
dec
add
aaa
sub
and
cmc
xchg
inc
or
aas
xchg
popf
cmps
adc
xchg
cli
pushf
loopne
cs
xchg
outs
adc
pop
push
or
sbb
mov
or
hlt
enter
jmp
fadd
sub
sbb
cwde
and
cld
scas
or
mov
add
push
inc
enter
dec
leave
sbb
loopne
sbb
adc
adc
into
stos
aam
mov
aam
dec
push
test
pusha
mov
mov
shr
shl
pop
adc
push
in
cmp
movs
mov
in
pop
dec
rol
mov
inc
shl
push
or
aam
push
loopne
push
inc
cdq
mov
imul
pop
ins
ss
dec
mov
xor
mov
scas
dec
retf
mov
fs
mov
neg
sub
jns
imul
lock
xchg
imul
in
in
in
outs
and
xchg
sub
lea
outs
lock
add
fld
fisub
mov
fdiv
faddp
loope
add
or
adc
(bad)
fdiv
add
or
(bad)
push
sub
push
mov
ror
cmp
dec
leave
adc
daa
and
cwde
mov
in
aas
push
jo
shr
or
lock
inc
rol
pop
inc
adc
adc
inc
xor
retf
or
or
daa
mov
xchg
pop
retf
jno
push
mov
inc
ror
scas
cmp
mov
add
(bad)
adc
ret
cdq
icebp
sbb
jp
jae
data16
jge
inc
jno
push
jmp
out
inc
xor
adc
sbb
inc
enter
and
sbb
inc
es
sbb
sbb
dec
pop
jmp
leave
mov
cmc
cmc
retf
inc
push
cmp
push
add
movs
xor
mov
das
cmp
or
push
movs
and
or
les
or
stos
dec
mov
fwait
and
jmp
cmp
ja
ficom
push
inc
sub
ss
xor
in
ja
xchg
call
popa
xchg
hlt
pushf
mov
push
jbe
adc
test
sbb
daa
aaa
in
and
add
out
sub
pop
or
nop
mov
daa
cmp
mov
mov
addr16
xchg
add
std
mov
lods
rol
jecxz
and
add
aas
adc
xor
pop
inc
cmps
sbb
adc
std
mov
or
xchg
mov
inc
xor
push
xchg
(bad)
lock
jns
cmps
cdq
shl
cmp
in
lahf
shr
push
sub
sub
adc
mov
or
mov
dec
sbb
add
ror
pop
adc
rol
ins
or
add
fbstp
dec
mov
jno
shr
cmp
jmp
or
rcl
mov
arpl
nop
add
cli
ret
mov
loopne
push
cs
add
dec
cmps
push
and
shl
mov
rol
loop
mov
push
into
je
scas
dec
loopne
add
sbb
add
(bad)
sub
add
jg
test
adc
jl
pop
sub
or
push
inc
cmc
shr
pop
xlat
in
cmc
and
call
pop
mov
sbb
dec
pop
dec
xchg
xchg
pop
cmps
nop
xor
aaa
je
and
inc
mov
sbb
dec
add
mov
xor
jmp
sub
mov
pusha
mov
push
or
mov
stos
outs
sahf
or
pop
icebp
ror
and
and
dec
cmp
and
add
nop
cmp
adc
dec
and
and
or
push
and
in
cld
mov
neg
inc
jg
mov
outs
dec
and
pushf
xchg
dec
sbb
add
nop
push
add
sub
and
sub
or
add
sub
mov
in
add
adc
mov
addr16
push
addr16
mov
int3
cwde
sub
(bad)
in
lock
sbb
mov
inc
sub
in
xor
mov
mov
xor
pop
jno
sub
sub
daa
mov
mov
lds
cmp
or
or
push
je
cmp
inc
ret
sbb
or
cmp
and
dec
lods
or
add
xchg
cmp
cmp
mov
es
fs
xchg
retf
cmp
or
inc
sub
add
nop
inc
fs
add
xchg
(bad)
fdivr
and
dec
mov
mov
dec
cmc
dec
mov
dec
add
jno
scas
sub
aam
or
sub
nop
xchg
and
push
xchg
ja
dec
outs
bound
rcr
(bad)
mov
cwde
(bad)
leave
fnstsw
cmp
in
add
test
or
movs
push
adc
push
or
or
adc
add
jl
jp
or
jne
mov
(bad)
jb
adc
fld
cmp
loope
test
add
add
mov
pop
push
mov
cmp
test
movs
or
and
sub
shl
sbb
arpl
shr
outs
ret
gs
cmp
mov
(bad)
sbb
sub
jl
pop
retf
sub
jle
test
pop
call
test
xchg
jl
jle
add
or
add
cwde
call
or
mov
fwait
cli
adc
sbb
fstp
or
push
cmp
hlt
repnz
mov
cs
fisub
push
add
sbb
test
inc
imul
popa
or
dec
neg
or
cmp
jne
mov
ret
mov
pop
dec
pop
cmp
jnp
push
cmp
out
and
xlat
and
jae
cmp
mov
push
call
push
dec
mov
adc
mov
leave
hlt
les
add
mov
rcr
dec
daa
inc
sub
xor
and
enter
enter
pop
or
or
enter
or
xor
mov
or
aam
mov
or
aad
mov
(bad)
addr16
pop
add
adc
ret
push
add
adc
ret
fidiv
loope
xchg
mov
por
dec
jb
or
add
sub
leave
inc
pop
fwait
cmp
ins
cmc
add
mov
add
ins
test
jle
adc
inc
fmul
and
jmp
rcl
leave
fcomp
cmovns
jle
or
inc
in
mov
xchg
and
xor
outs
call
sbb
aaa
cmp
xor
pop
lods
inc
retf
icebp
inc
jge
add
outs
mov
inc
lahf
sub
pusha
imul
int
add
push
inc
mov
jne
data16
add
mov
in
loopne
sar
push
sbb
push
(bad)
retf
xchg
push
iret
dec
add
addr16
or
push
dec
movs
enter
add
sbb
sbb
inc
mov
cmps
fiadd
pop
jge
mov
or
mov
mov
sbb
pusha
mov
or
fst
ins
fistp
es
(bad)
mov
push
ror
mov
or
adc
add
xor
in
test
dec
retf
imul
xchg
mov
sbb
xlat
xor
and
imul
mov
sub
and
retf
and
push
test
in
clc
sbb
cmps
call
cld
ror
or
sbb
cmp
popa
or
cmp
mov
out
clc
xor
mov
shl
shr
sub
shl
or
dec
movs
out
mov
(bad)
test
ficomp
(bad)
je
inc
mov
jge
xor
cmps
(bad)
out
es
inc
or
(bad)
lock
aaa
out
lea
or
jae
xor
out
(bad)
and
jp
mov
pushf
dec
jne
mov
cld
gs
mov
and
xlat
sbb
sub
rol
sub
and
adc
imul
test
or
pusha
add
add
fstp
add
addr16
adc
ror
push
mov
push
dec
std
shl
sub
push
add
ins
ja
ret
not
shr
and
add
xchg
retf
adc
jp
popa
mov
add
cmps
sub
sbb
jmp
jge
sbb
or
ja
out
hlt
enter
pop
(bad)
pop
and
cmp
pushf
inc
lds
add
jp
fild
pop
imul
and
or
and
movs
pushf
sub
and
xor
fwait
mov
cmp
mov
jnp
sbb
stos
cli
ins
(bad)
in
loope
push
in
add
xor
out
in
add
and
and
pop
push
jbe
sbb
dec
mov
outs
test
cdq
fst
bound
mov
jns
je
call
sbb
fadd
or
push
add
cli
sub
add
popa
sub
sti
cmp
dec
aas
call
call
ficomp
mov
and
mov
cmp
cmp
sbb
scas
push
js
cmp
cmps
pop
imul
sbb
clc
cmp
ja
ja
add
sbb
jbe
jno
dec
inc
sbb
ret
xchg
addr16
cmp
(bad)
push
jmp
rol
adc
sbb
jae
popa
fcom
or
pop
adc
mov
jno
adc
je
jmp
repz
out
or
push
inc
sub
ins
mov
js
lods
adc
sub
mov
and
pop
rcr
dec
std
xchg
or
popa
push
jl
adc
mov
jb
cdq
adc
gs
dec
nop
ins
and
sbb
adc
int3
dec
sub
ja
inc
setg
scas
sbb
js
and
or
xlat
mov
stos
sub
jo
leave
or
adc
sbb
add
or
sbb
pop
pop
and
add
ret
mov
push
xor
inc
pop
dec
cmp
cmp
pop
ja
ret
jae
add
mov
inc
push
inc
div
ins
pop
test
call
add
mov
push
push
add
clc
mov
int3
dec
js
or
jecxz
arpl
loope
pavgb
push
jnp
bound
xor
dec
rcl
gs
inc
nop
push
and
jp
jmp
inc
inc
cmp
sub
dec
loopne
mov
mov
outs
or
sbb
clc
std
lock
jb
shl
or
add
add
inc
push
or
add
inc
movs
xchg
cmp
call
jmp
movs
adc
mov
in
cmp
(bad)
(bad)
jmp
js
or
fild
dec
push
inc
shl
adc
or
push
dec
aaa
outs
lea
push
dec
ss
mov
dec
mov
loopne
lea
pop
push
sub
or
inc
ficomp
fsubr
inc
add
bound
aaa
push
(bad)
cmc
mov
jge
sbb
rcl
push
dec
rdpmc
add
jnp
push
adc
push
cmp
lods
cmc
push
cmp
cmp
cmp
pop
je
cmp
mov
sub
adc
adc
sbb
sub
xor
aad
aaa
scas
rcr
outs
fs
inc
fnstenv
or
and
push
into
or
int
jbe
jo
ror
xor
lock
sbb
adc
jg
rcr
js
sub
xor
mov
sub
dec
lea
test
vpaddw
and
pop
dec
(bad)
jb
adc
stos
dec
fcomp
mov
retf
mov
cmc
dec
fldenv
jg
test
sbb
and
sbb
pop
and
iret
fisubr
and
(bad)
rcr
mov
mov
ret
sub
jge
dec
jb
mov
pop
mov
and
adc
mov
sub
adc
and
push
enter
and
and
mov
(bad)
cmp
pop
(bad)
and
sub
popf
adc
or
jl
fldcw
or
out
loope
fwait
int
mov
rcr
(bad)
call
mov
fcomp
push
mov
les
jb
adc
and
movs
addr16
js
push
jp
rcl
loopne
pop
mul
enter
push
fcom
and
pop
sbb
and
clc
xor
je
push
xchg
mov
fld
adc
dec
adc
jl
and
aad
(bad)
out
and
cmp
sbb
xchg
mov
sti
dec
sbb
sbb
add
jl
xor
mov
mov
imul
ins
pop
mov
or
mov
xor
int
jno
enter
push
sbb
xor
test
and
sbb
adc
rcr
xchg
jo
sbb
pop
mov
sbb
icebp
int
inc
mov
xchg
or
mov
adc
sbb
push
inc
dec
or
jl
pop
push
push
and
push
shr
leave
shl
sbb
gs
pop
fdivr
pop
and
lock
out
popa
jl
dec
adc
and
fiadd
push
cmova
add
and
push
lahf
ds
cwde
loope
cmps
ror
ud2
in
int3
jne
lds
sub
sbb
mov
fistp
sub
pop
enter
or
or
loop
or
mov
lock
add
ret
adc
hlt
xchg
ds
test
mov
adc
sbb
mov
std
out
sub
add
shl
int
test
pop
xchg
out
dec
loope
movntq
out
adc
aad
pop
dec
push
pop
adc
inc
add
and
mov
mov
add
adc
or
sub
loopne
and
aas
add
aam
push
push
cmps
or
adc
pop
or
dec
adc
push
mov
mov
jp
add
sub
inc
sbb
cmps
push
and
inc
mov
inc
xchg
mov
imul
dec
add
add
xor
shl
xor
cmp
sub
push
and
add
and
sub
sbb
or
or
or
sbb
sbb
and
pop
inc
push
and
rol
fs
push
fcmove
fbstp
out
dec
aam
mov
jo
pusha
lds
xchg
sbb
bound
nop
jb
(bad)
aam
out
pop
push
xor
and
lds
mov
pusha
shl
or
and
xor
sub
inc
ss
stos
in
mov
adc
dec
lahf
push
or
addr16
dec
add
rsqrtps
dec
jne
inc
mov
adc
mov
pop
popf
sbb
bound
jg
sbb
and
scas
or
push
je
xor
push
bound
test
mov
fwait
sub
pop
imul
les
ret
out
inc
dec
mov
loop
test
out
adc
sub
adc
ja
sbb
fwait
popa
jmp
fist
sub
jle
dec
adc
push
add
push
and
sub
add
fld
inc
pop
mov
and
in
inc
cmp
jno
or
jb
loope
sbb
xchg
mov
mov
lds
adc
cmp
or
mov
push
or
mov
pop
or
and
aas
pusha
jo
lods
sub
push
push
int3
xor
movs
test
popa
adc
test
mov
sbb
aam
test
ja
add
ror
retf
dec
movs
pop
movs
cmps
jo
or
(bad)
imul
add
stos
movs
fsubr
fdiv
cmp
into
xor
push
fsub
add
adc
retf
leave
mov
leave
or
adc
popa
xchg
cmp
int3
add
xlat
mov
push
test
outs
arpl
lds
loopne
shr
ins
loop
jb
push
(bad)
push
rol
push
mov
pop
push
test
ins
pusha
push
mov
xor
sbb
add
mov
push
iret
out
aad
xchg
std
sub
push
test
sbb
punpcklbw
addr16
pop
push
enter
in
(bad)
in
sub
pusha
(bad)
bswap
jb
and
adc
ins
popa
outs
jae
and
and
add
push
and
sbb
xor
in
jb
pop
dec
rcl
les
sub
jo
popf
rcr
sub
daa
test
pinsrw
rcl
ds
adc
and
jmp
jge
shl
mov
fiadd
pusha
jbe
fist
mov
add
jg
jne
push
and
pop
xchg
pusha
loope
aaa
or
mov
add
dec
xchg
xchg
dec
xor
add
pop
int
add
mov
add
cld
xor
push
aam
gs
in
push
cmp
mov
nop
ror
popf
rcl
dec
sub
xor
jnp
sbb
retf
and
xor
rcl
loopne
mov
and
and
cld
push
mov
je
jae
mov
xor
aas
inc
enter
cmp
es
push
or
cmp
sti
and
push
push
ret
or
xor
mov
ss
xchg
addr16
dec
or
test
sub
add
pop
mov
mov
push
mov
jmp
call
pop
loopne
xor
mov
shr
or
and
cmp
add
add
imul
add
push
js
fcomp
add
add
add
aas
add
pop
shr
cli
inc
xchg
xchg
adc
jb
inc
mov
xor
lea
inc
xor
pop
(bad)
xor
or
(bad)
stc
cmp
xchg
xor
fs
fldl2e
test
out
mov
rcl
add
dec
shr
je
cmp
sub
xchg
lock
aas
loopne
push
mov
or
sbb
dec
rol
or
dec
adc
lock
les
mov
sub
movups
xor
add
ret
int
clc
add
sbb
(bad)
xchg
lods
mov
mov
cs
cmp
icebp
add
imul
pop
repnz
xchg
push
lea
int
jge
mov
lahf
lea
xor
xchg
in
mov
add
popf
pop
xlat
nop
mov
call
xor
push
idiv
and
sub
sub
xchg
je
test
jb
mov
pusha
shl
add
or
push
or
xor
cmp
lods
sub
loope
push
xor
add
pop
fcmovne
push
test
sub
push
sbb
inc
lock
jle
pop
cmp
mov
es
inc
cmp
mov
imul
pop
push
xor
outs
sbb
xor
mov
jmp
(bad)
pop
call
or
in
push
(bad)
xchg
sub
pop
(bad)
mov
ret
adc
ins
pop
or
ins
ins
and
shl
enter
jge
or
push
xchg
inc
sar
xchg
mov
push
xor
add
ret
mov
fisubr
movs
add
inc
add
loop
jnp
les
popf
jl
leave
adc
cwde
xor
iret
mov
scas
iret
fimul
dec
into
imul
inc
sub
xor
clc
mov
lahf
rcl
ret
sbb
les
pop
fcmovnb
push
sbb
popa
std
loope
xchg
and
in
xchg
rcl
cmp
repnz
cwde
les
add
jo
add
or
pusha
or
and
cmp
mov
add
in
leave
dec
leave
and
lods
in
jne
xor
xchg
cmp
pop
dec
out
out
enter
nop
cmp
push
enter
out
and
mov
mov
cmp
scas
aam
fidiv
mov
enter
lea
xor
add
sub
loope
arpl
and
aaa
sub
and
push
imul
push
inc
push
ret
xor
daa
inc
add
and
mov
mov
or
fcom
jbe
xor
pop
iret
sub
mov
pop
jg
test
add
inc
adc
nop
in
jle
call
outs
sbb
push
add
mov
inc
icebp
pop
pop
outs
fild
jne
adc
mov
mov
mov
into
test
jne
dec
clc
sbb
daa
push
lea
fnsave
fxch
sub
dec
std
pop
daa
add
add
lea
mov
add
cs
xchg
inc
push
fadd
bnd
in
and
push
and
cmps
and
lock
retf
retf
or
add
aas
add
dec
dec
sub
shl
rol
adc
ror
cmc
lea
pop
pop
mov
sbb
xor
test
jae
dec
mov
or
mov
ret
or
and
mov
inc
loopne
call
xor
and
xor
add
add
mov
push
frstor
in
pop
sub
fcom
jmp
mov
shl
or
or
clc
fimul
outs
and
in
fld
icebp
xor
and
into
add
sti
out
jnp
lock
jae
sub
fs
mov
or
mov
jno
(bad)
loop
adc
(bad)
mov
not
or
out
popa
sub
fnstcw
adc
push
push
sbb
fwait
pop
pop
cvtps2pi
add
and
pop
dec
cli
lock
pop
scas
fsub
push
fstp
push
lock
or
push
jnp
stc
outs
pop
xor
add
adc
dec
bound
into
mov
xchg
loop
dec
outs
mov
(bad)
cmc
pop
nop
jg
xlat
adc
sub
xchg
add
adc
test
add
add
add
and
div
xlat
pop
fadd
sub
cld
or
pop
sub
mov
add
pop
nop
jg
xor
xchg
jno
std
cmp
mov
cmps
cmp
and
mov
pushf
movs
std
lds
bound
fstp
sar
mov
inc
mov
rcl
xor
movs
std
rol
push
pop
pop
es
push
xor
dec
jnp
push
std
stos
(bad)
mov
aam
lahf
mov
cmps
mov
daa
jo
(bad)
aad
shr
push
adc
add
jbe
out
fcom
pop
in
sub
shl
xlat
fisub
mov
and
push
(bad)
pop
aaa
ret
lods
test
aad
xlat
jg
ficomp
in
adc
inc
xlat
daa
add
mov
clc
mov
pop
in
pop
(bad)
fld
outs
xlat
std
mov
mul
xchg
call
add
icebp
and
inc
xor
xchg
mov
pop
pop
and
ins
(bad)
adc
push
sbb
in
(bad)
pop
xchg
jle
xor
inc
jmp
push
jnp
iret
fimul
scas
pusha
dec
mov
outs
mov
jo
mov
pop
stos
std
(bad)
jle
sub
mov
aad
and
pop
pop
pusha
aam
pop
in
lea
add
fisub
push
aad
in
(bad)
lods
mul
jl
pop
xlat
outs
mov
pop
(bad)
gs
lods
(bad)
xlat
ja
and
hlt
jg
cs
jmp
inc
imul
nop
xchg
cmps
and
xchg
sysenter
push
sti
cmp
(bad)
mov
pop
pop
xlat
lds
mov
xchg
int3
or
xlat
and
push
inc
(bad)
jge
xlat
call
sub
test
aad
jle
aad
popa
mov
xlat
push
loopne
sub
xlat
pop
lods
test
xlat
sti
mov
fimul
dec
xlat
aad
jle
not
pop
stos
mov
cmp
mov
in
rcl
sub
std
xchg
rol
push
ss
jle
pop
imul
adc
and
jo
push
js
dec
(bad)
mov
mov
sbb
add
xchg
lahf
adc
mov
aaa
in
fld
mov
fisttp
mov
das
dec
inc
fist
hlt
(bad)
cli
mov
jg
jne
sub
test
jbe
sub
jge
dec
adc
ret
sbb
cwde
mov
sub
stos
mov
nop
cmps
or
xor
sbb
push
rol
adc
cmp
inc
loope
data16
sbb
fisttp
pop
nop
mov
call
sub
ds
dec
push
inc
mov
mov
and
pop
sub
bound
add
and
lods
frstor
jmp
xor
stos
xor
cdq
pop
mov
push
adc
cmp
sub
inc
pop
xor
and
sbb
clc
test
and
outs
ret
dec
push
pop
(bad)
mov
in
outs
jno
push
add
push
pop
or
ss
jecxz
or
fstp
cmp
rcr
sub
push
shl
rol
rol
or
pop
sub
pop
les
or
outs
getsec
push
in
(bad)
imul
je
sub
clc
pop
sub
shl
jl
aas
int
mov
(bad)
in
cmp
mov
pop
xchg
nop
popa
shl
(bad)
inc
test
mov
and
jbe
adc
shl
jo
cli
fld
loopne
int3
wbinvd
push
push
inc
dec
fld
pop
loop
retf
xchg
rcl
xlat
cmp
cmp
ins
dec
sar
shl
inc
mov
rcl
inc
or
add
pop
add
call
outs
xchg
sbb
push
sar
repnz
sbb
jle
inc
add
(bad)
test
addr16
mov
xchg
pop
or
test
mov
imul
movs
and
jl
std
adc
dec
mov
fsubp
mov
xor
and
sbb
shr
cmps
pop
idiv
ss
fdivr
js
jnp
xlat
xor
or
inc
pop
add
call
xchg
cmp
push
dec
push
inc
imul
pop
test
into
mov
adc
and
lods
xor
in
lods
mov
or
jl
and
add
pop
ja
mov
aad
xor
xchg
fwait
lock
cmc
add
rcr
test
push
mov
inc
add
cmp
mov
jo
jl
ret
jl
and
test
out
adc
ror
jge
dec
push
mov
or
inc
retf
mov
mov
mov
shl
mov
xor
dec
mov
add
push
add
imul
and
sbb
stc
xor
adc
shr
adc
cmp
pop
adc
mov
adc
jecxz
(bad)
mov
or
xchg
xchg
and
leave
leave
xchg
pop
in
xchg
out
ret
push
adc
int3
sub
jb
hlt
int3
mov
in
push
fiadd
jo
jge
dec
fcomp
mov
shl
inc
mov
clc
aaa
daa
ja
inc
cmp
ja
add
or
shr
adc
xor
xor
dec
xor
out
mov
(bad)
das
mov
adc
xchg
inc
push
xchg
in
push
and
push
fbstp
in
adc
js
xchg
pop
in
push
push
enter
mov
das
mov
je
dec
int3
imul
test
xor
aam
cmp
mov
call
sub
popa
and
adc
adc
inc
add
movs
push
pop
outs
retf
push
in
jmp
(bad)
jecxz
imul
xor
pop
push
mov
fisttp
or
xor
or
ja
sub
jmp
dec
jle
fisttp
ret
xor
jb
data16
pop
adc
popa
dec
pop
add
xchg
mov
adc
and
push
cmp
fs
inc
sbb
and
jb
cmp
mov
es
bound
rcr
in
in
push
mov
jmp
(bad)
shr
sub
jo
adc
mov
xchg
jne
mov
xchg
inc
mov
dec
jns
jl
fistp
lods
ds
xor
mov
(bad)
shr
fistp
sahf
or
add
mov
or
add
push
imul
fldenv
mov
retf
jl
cdq
jo
adc
sbb
fiadd
(bad)
mov
into
push
in
out
jne
pop
jl
imul
(bad)
jecxz
xlat
and
push
or
dec
data16
fist
cs
pusha
fs
mov
je
in
mov
jmp
or
shr
mov
pushf
mov
mov
outs
aad
ins
cmp
sub
sbb
pop
adc
inc
push
sub
in
xor
dec
add
clc
ror
loope
or
push
xor
(bad)
jae
daa
push
pop
cmp
xor
push
ins
mov
jbe
add
inc
test
popa
inc
or
push
fstp
test
pop
inc
mov
jb
adc
enter
scas
pop
ja
enter
inc
out
cmp
int3
xor
and
popa
dec
rcr
sbb
jne
add
ins
into
inc
mov
addr16
dec
and
repnz
js
(bad)
stos
sahf
and
and
ret
not
daa
dec
ret
lea
mov
dec
je
mov
sbb
dec
xor
adc
das
(bad)
dec
add
xor
sub
dec
jmp
stos
not
add
and
jge
mov
sbb
in
rol
loopne
je
outs
xchg
or
mov
(bad)
in
or
test
inc
shl
pushf
jmp
push
test
or
pusha
movs
push
lock
lds
adc
and
add
or
mov
cmp
dec
std
mov
pop
test
and
jmp
or
adc
push
test
xchg
sub
push
ss
mov
xchg
xor
and
push
(bad)
(bad)
out
dec
adc
dec
rol
and
imul
add
pop
js
loop
test
and
mov
or
or
push
or
push
pextrw
push
adc
push
push
push
add
ret
pop
popf
inc
adc
xor
add
dec
cmp
neg
jne
addr16
inc
mov
mov
jne
jo
jo
xor
push
xchg
test
aam
scas
test
test
push
cmps
shr
jo
sbb
sub
pushf
cmp
sbb
add
ficom
sub
call
pop
sub
mov
mov
mov
loopne
rol
xchg
lock
xchg
cmp
push
xor
mov
out
cmp
loopne
sbb
sbb
mov
sub
sbb
(bad)
xchg
xchg
arpl
dec
lea
and
cmps
inc
cmp
xchg
sbb
adc
je
retf
sub
test
adc
and
outs
iret
pop
pop
cs
push
arpl
and
lock
sahf
dec
inc
dec
push
dec
(bad)
ja
xor
xchg
and
ret
cld
mov
and
xchg
mov
push
jns
fadd
mov
cmc
xchg
ss
mov
sahf
add
test
mov
sub
mov
clc
lock
push
adc
out
add
fisttp
into
inc
jae
sbb
adc
sahf
or
rcr
or
adc
in
jp
imul
add
pop
lahf
jmp
cmp
sbb
call
test
and
or
jge
inc
adc
imul
or
or
add
pop
push
push
ja
dec
pop
xchg
push
jae
add
push
push
pop
test
pop
int
es
in
xor
aaa
pushf
mov
and
rol
mov
xor
sub
or
push
mov
inc
inc
call
hlt
xchg
add
push
mov
jnp
cwde
cdq
test
invd
in
lea
jmp
xor
adc
jmp
aaa
test
push
inc
fiadd
out
mov
adc
pop
add
jg
cdq
pop
loopne
mov
stos
xchg
sbb
daa
sbb
or
rcl
inc
cmp
add
leave
or
jle
shl
add
test
(bad)
jnp
jae
mov
add
sbb
fisubr
rcl
sbb
mov
xchg
(bad)
jbe
shl
sti
sub
or
bound
lds
sti
outs
enter
ja
pop
push
cmp
or
add
fucomip
pop
or
inc
add
or
push
movups
adc
adc
push
pop
sbb
sbb
pop
sub
cdq
aas
sahf
cmps
ins
xchg
or
sbb
jno
sahf
out
(bad)
lods
retf
jmp
iret
shl
cmps
stc
cmp
mov
xor
outs
lea
sar
and
jge
cmp
repz
mov
into
popa
xor
daa
sbb
jno
das
test
dec
mov
add
and
leave
inc
add
inc
jb
sbb
pop
sbb
pop
leave
or
or
inc
jb
or
sbb
pop
or
jb
adc
jb
sbb
adc
and
leave
inc
adc
inc
jb
sbb
pop
sbb
pop
leave
sbb
sbb
inc
jb
sbb
sbb
pop
sbb
jb
jmp
xor
sbb
and
enter
sbb
sbb
inc
jecxz
sbb
or
inc
and
add
pop
cmp
je
dec
in
or
or
cmc
add
leave
add
(bad)
mov
xchg
jnp
je
cmp
mov
imul
inc
ror
in
test
into
int3
inc
sbb
sbb
retf
xchg
jmp
cmp
mov
ins
or
xchg
pop
cmps
(bad)
popa
inc
repnz
int
sbb
xchg
loope
ret
inc
ret
test
arpl
sub
shl
in
mov
hlt
movs
aad
xchg
cmps
daa
mov
js
inc
inc
mov
repnz
xor
add
test
mov
xchg
call
and
fild
and
movs
xchg
add
add
les
mov
push
cwde
mov
add
dec
adc
inc
cmp
mov
adc
test
dec
cld
add
adc
ins
add
das
or
xchg
test
cmp
sub
ret
sahf
imul
cmp
jbe
mov
mov
add
retf
imul
add
sbb
pop
mov
mov
test
ret
adc
cmp
mov
in
add
jg
je
push
test
rol
(bad)
dec
imul
add
pop
pop
js
sti
sub
push
test
int
imul
mov
mov
loopne
popa
add
mov
clc
or
inc
sbb
adc
dec
pop
or
shl
int
xor
and
adc
sbb
and
inc
cs
mov
fs
sub
retf
jne
pop
call
cmps
loopne
mov
pushf
jecxz
pop
xor
push
or
cmps
popa
and
and
fcmovnb
iret
call
jne
push
sbb
xor
pop
ret
lods
clc
rol
aam
mov
mov
mov
add
and
mov
inc
push
push
push
imul
pop
test
push
xor
mov
ficomp
add
jne
ja
push
or
or
inc
mov
movs
and
push
pop
and
pop
or
and
xor
test
and
in
pop
adc
pop
clc
inc
dec
add
stos
in
xor
cmp
xchg
xor
push
adc
inc
adc
loope
scas
addr16
push
sti
xchg
mov
adc
jle
xor
cmp
inc
jbe
(bad)
push
mov
(bad)
and
out
jle
jg
lods
or
call
in
jmp
adc
call
inc
lods
mov
cmp
icebp
sbb
push
(bad)
shl
icebp
cwde
push
mov
retf
xor
dec
mov
ror
or
adc
sbb
loope
inc
push
(bad)
or
aas
mov
loopne
rol
sbb
inc
cmps
pop
adc
hlt
jle
adc
cmp
les
dec
out
adc
cs
cs
xchg
cmp
rcr
hlt
mov
in
inc
fldcw
adc
ror
jne
(bad)
sub
mov
jge
sub
mov
and
mov
scas
cmp
pop
mov
bswap
lods
inc
add
test
es
loopne
push
dec
xlat
rcl
sub
fs
ins
or
sub
or
stc
icebp
les
adc
pop
push
int
(bad)
hlt
in
es
ror
sbb
fcmovnu
and
loopne
outs
imul
and
sbb
mov
cmp
add
mov
mov
ins
push
add
lods
lods
in
jb
xchg
sbb
test
dec
enter
data16
movs
xor
sbb
pop
xor
pushf
pushf
movs
aaa
mov
cwde
pop
jmp
push
dec
clc
mov
or
xor
adc
rol
pop
out
xor
cmps
adc
das
pop
push
sbb
mul
add
movs
and
mov
dec
popa
mov
mov
cs
lods
push
retf
daa
aas
and
mov
mov
ss
dec
mov
retf
sub
out
(bad)
push
sub
sar
cmp
cmp
or
add
cmp
(bad)
ffree
fcom
or
ja
mov
or
sbb
mov
shl
lea
inc
lods
add
nop
push
push
popa
daa
jnp
es
inc
inc
dec
xor
adc
or
or
ja
or
dec
add
cs
add
(bad)
jns
clc
adc
in
sbb
add
nop
jo
aaa
repnz
mov
loopne
pop
push
in
cmp
mov
sub
inc
pop
inc
pop
adc
fbstp
cmp
mov
xor
or
adc
repnz
pop
sbb
cmp
or
push
clc
hlt
cld
nop
pop
pop
mov
lock
or
mov
mov
adc
dec
pushf
imul
and
movs
std
add
or
xor
xor
ds
xchg
test
ins
push
adc
inc
jno
aam
jo
xchg
stc
adc
and
xchg
adc
mov
movs
pop
outs
aaa
stc
pop
pop
mov
push
sbb
fs
sbb
xor
lea
adc
hlt
or
mov
test
dec
movs
sub
ins
imul
sub
add
cmp
test
inc
jl
sub
test
pop
mov
adc
shl
mov
popa
clc
pop
sbb
arpl
pop
sub
mov
scas
sbb
pop
cmp
and
cmp
sbb
and
popf
push
jp
(bad)
jmp
ins
cmps
test
xchg
or
xchg
imul
pop
sbb
or
inc
xor
mov
xlat
sahf
loop
loopne
fdivr
or
xchg
out
add
add
adc
inc
add
push
push
fld
adc
dec
retf
div
test
popa
xchg
in
or
not
hlt
idiv
pop
cmp
adc
mov
sti
clc
pop
jle
push
sbb
mov
pop
pop
or
push
comiss
pop
sar
(bad)
in
pop
sbb
hlt
push
mov
pop
pop
neg
fwait
test
jnp
daa
push
mov
mov
popf
test
je
add
loopne
int3
or
test
movs
xor
test
lds
les
test
adc
or
lsl
xchg
in
pop
imul
popa
mov
aad
enter
and
loopne
nop
outs
in
bound
hlt
pop
aas
cld
xor
in
mov
aas
loope
sub
jbe
xor
aam
push
ret
mov
subps
int
and
cdq
clc
push
pop
mov
push
and
(bad)
sub
fcomp
aaa
mov
xlat
mov
xchg
mov
or
pop
xchg
push
push
add
mov
addr16
xor
add
xor
leave
sar
add
shr
fcmovnbe
imul
(bad)
outs
sub
or
sub
cmp
aas
mov
inc
mov
test
jae
inc
test
add
call
test
ins
ins
add
sbb
or
jne
xchg
shl
inc
jo
or
test
ins
pop
jl
mov
loopne
ds
movups
and
fisub
(bad)
mov
fimul
popf
loopne
sbb
pop
pop
jo
jle
add
es
xchg
pop
jne
sub
mov
fist
or
je
xchg
je
dec
pop
sub
arpl
sbb
cdq
ror
cmps
pusha
loop
pushf
les
lea
jno
cmps
and
jge
sub
test
fbld
xchg
fist
adc
cmp
sbb
sub
js
inc
and
in
add
clc
pop
jns
arpl
(bad)
(bad)
lea
mov
aaa
dec
push
inc
push
rcr
inc
cmp
inc
and
mov
adc
mov
mov
ret
or
and
ror
push
stc
into
loop
call
or
clc
out
imul
add
xor
mul
and
scas
call
loope
mov
sbb
stc
pusha
dec
cli
mov
mov
mov
rol
or
or
jg
sbb
xchg
and
sub
pop
(bad)
xchg
and
out
pop
stc
mov
jne
fwait
and
call
inc
and
or
and
loope
rol
mov
add
add
dec
adc
xor
and
arpl
test
xor
sub
(bad)
dec
xchg
xor
sti
out
push
mov
mov
jo
ror
push
lea
mov
pop
pop
sbb
fild
retf
es
and
out
jle
jmp
pop
or
int3
aaa
mov
jmp
aas
mov
sbb
fsub
popf
sbb
clc
mov
sbb
call
xor
ja
xchg
jmp
pop
xchg
lock
jle
add
mov
and
xchg
std
fidivr
jne
inc
out
dec
sbb
cmc
pop
dec
lea
mov
test
cmp
mov
jnp
aam
mov
or
dec
and
in
movs
std
test
adc
jmp
inc
enter
dec
in
enter
sbb
inc
pop
xlat
sub
es
mov
es
pop
mov
pushf
ss
sub
cmps
xor
push
lock
dec
sub
mov
mov
nop
dec
scas
mov
mov
push
or
mov
mov
xor
lods
aas
lock
test
js
sub
pop
stc
or
push
fidiv
inc
movs
repnz
adc
dec
sbb
pop
sbb
(bad)
mov
sub
push
dec
sti
ror
call
and
js
inc
mov
dec
adc
push
xor
and
pop
icebp
sar
aad
adc
sbb
dec
push
mov
(bad)
outs
lea
mov
jnp
pop
cmp
std
in
jmp
adc
pop
jl
retf
mov
in
cs
nop
xchg
xchg
sbb
cmp
cmps
ds
pop
popf
sbb
mov
fcom
pop
adc
dec
jns
mov
loope
fdivr
movs
aaa
shl
add
fsub
pop
lods
inc
sbb
or
mov
retf
push
pop
out
mov
jnp
jo
lea
mov
je
jns
cmps
or
test
add
and
ret
pop
test
lds
inc
out
or
jecxz
push
out
mov
xchg
test
sub
fstp
movs
sbb
push
aam
daa
fisttp
sub
pop
loopne
enter
lock
xor
out
add
mov
pop
outs
and
mov
sub
xchg
dec
or
add
xchg
loope
jb
xor
inc
or
ret
mov
pop
in
daa
pop
nop
addr16
sub
pop
out
sub
xchg
pop
lods
add
nop
out
mov
sbb
adc
mov
xor
dec
clc
ins
or
(bad)
push
cs
and
lea
mov
test
xor
fidivr
mov
mov
mov
jmp
mov
stos
cmp
out
nop
adc
mov
xor
cmp
and
sbb
add
and
pop
test
repnz
test
sbb
lds
jg
jo
ins
add
pusha
jmp
sar
(bad)
sbb
and
add
test
or
imul
fisttp
dec
test
mov
adc
enter
in
inc
and
and
or
dec
or
inc
fwait
push
outs
fdivr
test
xchg
xor
loopne
hlt
push
jae
or
ror
jne
mov
mov
test
mov
sbb
stc
dec
outs
dec
pop
enter
les
test
xchg
jge
outs
jne
jns
sbb
and
mov
test
jmp
push
xor
inc
pop
adc
mov
xchg
call
sub
inc
ficomp
outs
call
lahf
mov
mov
ins
pop
and
gs
movs
imul
test
movs
shl
push
cwde
adc
sub
pop
out
mov
loop
sbb
add
scas
or
inc
or
add
cwde
sub
pop
cmp
lods
pop
xchg
mov
sahf
xchg
push
lock
push
test
cs
in
(bad)
das
pop
adc
dec
pop
inc
hlt
cmp
leave
das
stc
test
push
lahf
das
mov
mov
inc
fcomp
mov
es
rol
push
add
add
adc
inc
sar
add
dec
stos
adc
xor
vpaddusw
stos
in
rol
stos
cld
(bad)
out
mov
inc
in
and
mov
lds
fild
add
rol
cdq
in
clc
and
ret
test
inc
cld
dec
adc
test
mov
push
push
add
add
ficomp
pop
adc
sbb
stos
jmp
sbb
shl
add
pop
xchg
xor
(bad)
imul
and
add
cmps
and
cmp
inc
push
jg
push
xchg
scas
(bad)
(bad)
(bad)
sti
dec
mov
aaa
push
mov
jno
add
adc
dec
lods
or
and
and
test
or
rcr
sahf
push
mov
ror
or
xor
popa
cmp
mov
mov
or
fwait
or
push
mov
adc
(bad)
adc
imul
mov
mov
lock
shl
bound
sbb
pop
enter
movs
mov
mov
sbb
jo
add
in
mov
mov
sbb
lea
push
xchg
and
pop
dec
cwde
push
(bad)
lock
rcr
js
ret
pop
sbb
jo
popa
mov
mov
imul
push
addr16
push
out
lea
pop
es
mov
mov
mov
pop
cmps
or
push
fs
ja
jl
sbb
rcl
in
inc
test
adc
and
and
mov
leave
and
or
cmp
pop
rsqrtps
jmp
push
outs
rcl
mov
jmp
mov
or
and
or
mov
dec
pop
xlat
rcl
adc
or
lods
es
sbb
or
jmp
sbb
push
push
xor
jb
mov
scas
or
mov
dec
jb
mov
dec
hlt
cmp
or
outs
shl
sbb
fcomp
mov
out
aaa
movs
xchg
or
mov
loop
clc
movs
mov
movs
mov
add
mov
xor
(bad)
enter
adc
adc
aam
iret
xchg
in
add
lods
lock
pop
daa
mov
dec
sub
hlt
sub
loopne
xchg
(bad)
outs
inc
push
lods
in
mov
out
mov
add
mov
adc
or
dec
add
add
push
repnz
mov
sbb
mov
jecxz
cld
and
add
or
xor
ror
add
jl
imul
dec
sbb
and
cmp
pop
jne
fisubr
ss
test
jl
mov
mov
xor
sub
leave
jae
adc
ins
ins
xchg
addr16
sbb
lea
movzx
inc
or
cmp
mov
push
adc
xchg
rol
adc
loope
and
movs
mov
test
inc
loopne
xor
mov
add
xchg
(bad)
test
dec
adc
add
out
push
(bad)
pusha
retf
jo
add
cli
pop
mov
movs
test
dec
jmp
sbb
jo
dec
dec
clc
in
dec
int3
xchg
mov
xchg
ret
popa
xchg
das
jo
or
mov
cmp
add
jg
pop
loopne
xchg
pop
pop
or
inc
pop
push
xor
or
ss
inc
pop
cmp
xor
mov
sub
jne
push
sbb
js
mov
mov
push
data16
loopne
loop
retf
push
cmps
popa
add
addr16
inc
cmps
shl
xchg
add
xor
sbb
mov
xor
sbb
inc
xor
dec
cmp
push
mov
adc
sbb
push
push
inc
dec
xchg
out
xchg
cmp
and
inc
ltr
(bad)
sub
push
cmp
add
jl
adc
jecxz
inc
jecxz
cmp
push
and
inc
aaa
jg
add
mov
imul
cmp
push
adc
xchg
mov
and
hlt
jns
aaa
xor
fwait
cmp
or
out
or
push
jbe
or
ins
pop
and
(bad)
push
jge
pop
in
loop
mov
mov
das
jb
cmp
adc
mov
pop
imul
mov
mov
jbe
mov
lods
jne
push
pop
dec
retf
retf
and
push
or
inc
fcomp
sar
or
sub
and
adc
enter
add
mov
(bad)
ja
push
mov
dec
xor
repnz
xor
sbb
test
mov
js
(bad)
mov
dec
cmp
arpl
movs
out
dec
mov
dec
adc
inc
fist
push
cs
adc
stos
jb
adc
or
push
test
ret
or
xchg
je
ror
andnps
xchg
outs
lock
mov
std
dec
jno
add
cmp
js
(bad)
mov
mov
sbb
pop
lods
adc
or
js
adc
push
subps
sub
dec
xor
repz
dec
sbb
fadd
mov
and
sbb
div
lds
pop
jg
dec
and
cli
sub
inc
daa
add
popf
test
and
sub
xchg
sbb
and
iret
test
jmp
(bad)
shl
adc
cmp
xchg
push
test
dec
sub
pop
sub
add
push
ja
aas
retf
pop
add
movs
jecxz
je
sub
push
ret
push
imul
mov
xor
into
jge
in
cld
sbb
xor
xor
mov
addr16
pop
push
jg
cmp
mov
outs
adc
in
je
add
shr
dec
mov
sub
sbb
in
movs
sub
inc
add
inc
push
lock
push
xchg
xchg
(bad)
sub
push
ins
scas
in
ret
add
inc
hlt
ret
xchg
push
dec
push
push
and
pusha
pop
inc
mov
jmp
lea
inc
sbb
xor
sub
mov
and
xor
inc
or
mov
(bad)
cmp
test
shr
fisub
xchg
mov
add
and
jg
js
imul
addr16
in
ret
pop
fiadd
adc
outs
int3
mov
sub
sub
ret
pop
inc
xchg
adc
or
adc
xchg
out
popa
push
fldcw
stos
mov
(bad)
loop
fld
mov
enter
cmc
adc
push
adc
out
(bad)
sub
pop
mov
dec
(bad)
cld
imul
dec
ror
dec
add
dec
cmp
stos
jge
mov
push
adc
jne
jno
test
sbb
dec
fs
sahf
jecxz
xor
enter
retf
and
sub
mov
cwde
ins
sbb
jo
xchg
adc
add
ret
rol
xchg
jo
cmps
pop
xchg
stos
and
jne
daa
fsubr
xchg
push
lahf
in
push
add
inc
xchg
xlat
adc
cmp
inc
inc
inc
pop
xchg
mov
inc
mov
fisttp
fcomp
out
dec
add
inc
add
int3
ds
out
inc
dec
dec
push
mov
adc
sbb
or
dec
push
dec
dec
mov
and
out
fcmovnbe
jns
inc
ds
pusha
adc
out
dec
pop
ror
dec
out
call
in
pop
shl
mov
jns
shl
or
pop
in
dec
mov
cld
test
je
xor
(bad)
adc
sbb
sub
dec
add
sbb
dec
inc
pop
dec
dec
test
add
imul
mov
xchg
fwait
nop
test
enter
push
inc
neg
dec
cld
sub
fwait
sub
sub
or
ins
ins
and
inc
dec
adc
fs
ins
jle
sbb
out
push
cmp
js
push
out
push
jbe
in
jnp
push
rol
sub
push
push
mov
js
push
ss
adc
arpl
mov
push
rep
pop
les
pop
adc
or
inc
adc
fwait
push
movs
push
test
ret
scas
inc
sbb
pusha
test
sbb
xchg
or
xor
out
sub
dec
push
addr16
inc
mov
pop
xor
adc
outs
jg
mov
das
gs
out
or
fs
mov
imul
dec
lahf
xor
(bad)
xor
cmp
xor
sahf
mov
dec
jo
ins
scas
mov
seto
push
pop
pop
mov
jle
push
adc
push
xchg
hlt
je
dec
sti
data16
push
lock
in
xlat
adc
pop
ins
inc
xor
ds
pop
push
jno
mov
inc
xor
ins
popa
cmp
cmp
sub
pop
adc
mov
push
ret
or
imul
dec
hlt
and
add
cmp
popa
mov
enter
add
test
xlat
add
and
stc
lock
lock
cdq
dec
call
mov
test
inc
cmp
call
test
adc
xchg
pop
add
dec
and
(bad)
sbb
das
cmc
mov
pop
retf
pop
and
sbb
pop
imul
add
jae
pop
xor
movs
xor
and
or
add
push
and
das
sbb
lock
and
stos
xor
push
mov
inc
jno
imul
mov
xchg
out
mov
pop
or
arpl
xchg
dec
or
xchg
pop
xchg
daa
gs
mov
sub
(bad)
cld
mov
lods
je
add
fstp
fwait
inc
ins
pop
pop
push
push
movs
inc
dec
or
loopne
js
loopne
(bad)
(bad)
jmp
inc
fdivr
stc
add
push
and
add
mov
lock
push
add
dec
or
adc
scas
xor
push
es
inc
dec
(bad)
or
(bad)
ja
pusha
dec
aaa
fidiv
pop
push
cmp
adc
mov
xor
sub
scas
dec
sbb
and
rcl
dec
retf
aam
and
add
mov
jecxz
mov
fidivr
mov
dec
dec
loop
jo
dec
cli
cmps
sbb
bound
mov
out
sub
out
mov
jns
rcl
cmovg
aad
cdq
sub
aaa
xor
inc
jnp
lahf
or
add
aaa
push
dec
cld
mov
mov
cmp
jge
ins
dec
cmp
scas
je
sbb
(bad)
ins
push
mov
jmp
sahf
xlat
inc
int3
pop
nop
push
sub
loope
or
push
xchg
jb
cmc
or
ins
jecxz
outs
fwait
inc
ret
ds
addr16
mov
das
adc
and
xor
xchg
and
pop
es
fld1
sbb
ins
fsub
push
adc
(bad)
pop
cmps
shl
adc
fsubr
or
xchg
cmp
fdivr
inc
or
dec
push
push
push
cwde
and
cmp
sub
mov
iret
fidiv
clc
mov
(bad)
sbb
addr16
adc
ss
pusha
pop
nop
push
popf
adc
push
add
adc
sub
dec
call
sbb
xchg
jnp
shr
adc
stos
sti
shl
loope
add
cmp
and
dec
add
inc
outs
dec
add
shl
in
adc
or
push
push
inc
sub
xchg
cmps
mul
cli
test
pusha
and
add
cmp
out
jecxz
cwde
inc
pop
ret
fistp
push
nop
ret
push
aaa
sbb
sub
cmp
daa
int
aad
adc
xor
nop
pop
add
and
(bad)
cli
pushf
sahf
or
adc
jo
cmps
add
push
mov
test
dec
push
mov
cwde
and
inc
mov
cmp
fadd
add
inc
sub
xor
or
xor
dec
mov
fmul
loope
add
add
ror
nop
add
in
push
or
push
cwde
dec
inc
mov
mov
inc
cmp
dec
lods
adc
jo
adc
inc
xchg
imul
push
add
cld
test
sub
jmp
dec
das
inc
or
bound
mov
xchg
inc
or
inc
and
pop
pop
xchg
rol
(bad)
lds
test
ret
push
sub
push
mov
stos
shl
ss
outs
mov
mov
test
add
lea
mov
or
sub
inc
dec
and
mov
xchg
adc
jecxz
test
cld
mov
mov
movs
movs
popa
push
inc
sub
xchg
inc
shl
pop
add
mov
jg
mov
dec
mov
xor
add
std
mov
fs
or
or
in
mov
inc
pop
ins
ret
dec
test
xor
and
adc
test
inc
ja
enter
(bad)
pop
mov
les
push
fdiv
adc
in
pop
or
inc
daa
jns
fcomp
pop
inc
scas
test
jnp
cmps
and
push
lahf
shl
cmc
push
mov
dec
enter
test
mov
arpl
sub
fcomp
push
nop
outs
loop
ret
pop
fldcw
pop
and
sti
in
push
sbb
pop
dec
cmps
pusha
and
xlat
adc
sub
jmp
and
outs
gs
or
outs
in
rol
aam
cmps
and
inc
and
ret
fistp
pushf
mov
pandn
dec
push
lds
inc
push
pushf
mov
rcr
jecxz
int3
and
test
psraw
daa
hlt
jmp
cmp
sub
jnp
mov
sti
sbb
fcom
add
sbb
pop
xor
jl
hlt
mov
pop
ja
cld
test
(bad)
inc
lock
movs
xor
loopne
in
dec
push
pop
das
mov
jb
and
mov
ss
add
mov
lock
call
dec
xor
mov
mov
fcom
(bad)
adc
cld
fst
outs
push
call
dec
das
popa
repnz
xor
dec
popa
pop
out
inc
fisubr
inc
xchg
cmp
adc
clc
dec
mov
push
adc
outs
add
inc
sub
inc
fisttp
pop
cs
test
sbb
mov
shl
jg
fs
mov
add
dec
aas
xchg
or
fcomp
std
push
xchg
jo
add
dec
je
or
sbb
sbb
jmp
enter
or
pop
pop
sub
lea
test
nop
sub
and
popa
xchg
fldcw
ins
pop
cmp
jae
test
inc
rcl
ins
add
jge
pop
and
das
loop
push
aaa
jle
popa
or
xchg
movs
scas
dec
cmp
or
outs
leave
lods
push
daa
mov
jl
inc
jno
dec
xor
xor
js
pop
fstp
fild
inc
add
inc
adc
out
data16
xchg
sub
or
cs
shl
pop
(bad)
sub
inc
fstp
jbe
mov
xor
adc
test
test
adc
es
std
cmp
xor
aam
inc
dec
clc
adc
jmp
sub
inc
jmp
sbb
and
push
xchg
inc
inc
sbb
mov
je
jb
jecxz
dec
data16
xor
out
rcr
xor
imul
pop
test
jmp
retf
lea
sub
bound
call
dec
add
mov
adc
inc
cld
push
sbb
xchg
mov
push
ret
out
scas
add
sub
movs
xor
jnp
or
loop
xchg
push
push
das
pusha
pop
mov
push
(bad)
int3
adc
aaa
push
dec
mov
jb
adc
xor
das
cmp
mov
mov
jmp
push
push
or
js
xor
sti
pusha
mov
arpl
mov
and
mov
mov
scas
and
xor
(bad)
aaa
js
data16
je
sub
push
push
xchg
xchg
sbb
daa
sub
adc
sbb
sbb
fs
jnp
jo
push
cwde
nop
pop
sbb
adc
not
sub
mov
xor
or
enter
add
mov
dec
hlt
movs
std
and
mov
lods
add
sbb
xor
or
arpl
sar
arpl
push
out
ja
retf
xchg
popa
and
xor
and
add
sub
and
mov
xor
push
xchg
iret
mov
gs
iret
into
or
add
sub
mov
adc
out
aam
out
inc
add
aaa
mov
call
cld
lock
imul
pop
outs
push
clc
sub
push
(bad)
push
dec
pop
cmp
jmp
add
out
sub
sub
das
lods
lods
test
pop
enter
test
mov
aad
xlat
and
cmp
mov
inc
and
mov
push
xchg
or
jne
out
inc
je
push
push
inc
xchg
leave
test
or
sub
imul
shr
adc
lea
out
dec
and
inc
hlt
fstp
fwait
ret
popa
(bad)
aad
ss
(bad)
aaa
cmp
inc
sub
leave
imul
pusha
sbb
mov
inc
adc
inc
adc
push
xchg
(bad)
push
ror
call
pusha
loopne
popf
sub
inc
adc
and
daa
push
cmc
mov
das
jg
je
fcom
mov
test
sbb
je
in
mov
jo
pop
test
add
inc
dec
push
mov
mov
enter
leave
mov
push
inc
and
ins
js
or
nop
test
pushf
test
bound
cmp
jbe
shr
pop
mov
adc
inc
and
int3
pop
arpl
popa
xchg
test
mov
lea
xor
push
inc
aaa
xchg
out
push
push
push
lock
arpl
jecxz
adc
jp
dec
imul
and
add
dec
xchg
retf
pop
daa
das
test
mov
or
and
push
gs
pop
xchg
ret
push
arpl
sbb
inc
add
fld
cs
pop
(bad)
scas
shl
fadd
xor
dec
xor
(bad)
jbe
loope
fsubr
add
and
push
mov
jg
adc
sub
pop
sbb
fld
pop
pop
xor
mov
sub
outs
dec
xor
adc
mov
push
push
adc
pop
imul
jmp
xor
in
inc
mov
or
ds
popa
inc
pop
add
adc
jge
hlt
jbe
adc
loope
and
dec
add
or
adc
xchg
cmp
repnz
xchg
ret
push
ins
mov
inc
sub
loop
movlps
pop
pop
sete
pop
inc
push
shr
xor
push
pop
xchg
sub
or
inc
cmp
cmp
pop
jl
and
in
fidiv
inc
adc
xor
jo
imul
ret
popf
xor
(bad)
and
stos
add
adc
inc
inc
test
and
outs
shl
add
not
or
pop
int3
dec
mov
cmp
pusha
mov
lods
scas
test
inc
rcl
sub
fst
faddp
and
out
aad
pop
xchg
or
scas
mov
or
outs
jg
loope
mov
sahf
push
adc
cmp
inc
inc
imul
push
inc
sub
imul
nop
enter
add
js
pop
rcl
mov
in
retf
jne
mov
push
dec
adc
push
jl
mov
add
pop
sub
pusha
pop
adc
add
dec
push
and
inc
adc
outs
test
ins
jno
mov
cmp
add
and
psubsw
in
ins
and
test
dec
movs
xchg
push
jno
and
out
xchg
sub
jmp
jno
sub
outs
push
sub
jge
add
std
push
push
lea
mov
or
aaa
jmp
or
adc
cmp
mov
mov
jno
mov
cmp
movs
cmp
fmul
push
ja
out
mov
loope
mov
divps
dec
dec
or
inc
popa
mov
dec
in
mov
xor
xor
add
cmc
adc
loopne
test
dec
cmps
push
test
add
outs
sub
pop
add
adc
xchg
adc
mov
mov
test
jbe
mov
or
sbb
adc
mov
addr16
loopne
inc
or
push
cmp
mov
inc
repz
push
push
pop
daa
adc
bound
or
jae
mov
adc
or
adc
popa
xchg
pop
add
leave
ret
inc
or
iret
mov
mov
stc
pop
push
cmp
test
push
push
inc
dec
dec
popf
cmps
and
xchg
(bad)
sahf
ds
div
mov
xchg
mov
sbb
pop
adc
in
or
fld
cmps
adc
push
sahf
arpl
daa
inc
cwde
dec
xchg
inc
jbe
test
add
pop
mov
daa
cld
sbb
loopne
push
mov
ds
and
mov
mov
sbb
inc
or
dec
fs
add
add
add
jg
(bad)
xor
inc
dec
push
mov
mov
or
rcl
or
mov
pop
pop
in
mov
jbe
loope
sbb
call
inc
nop
push
push
inc
adc
and
test
daa
dec
cli
xor
adc
inc
bound
pop
jno
js
inc
sbb
push
mov
jne
lods
mov
in
dec
xchg
adc
imul
out
or
dec
fild
mov
pop
or
or
mov
stos
or
cmp
mov
jbe
call
pop
or
inc
cmp
push
add
fdiv
mov
mov
push
dec
xor
xchg
pop
mov
dec
inc
je
jmp
jne
inc
pusha
add
pop
mov
cmp
sub
inc
and
jnp
jo
dec
inc
fs
nop
mov
in
add
adc
jns
mov
mov
push
jb
popa
mov
popa
dec
inc
mov
and
mov
je
fsub
call
cdq
rcr
aam
xor
rcr
data16
xchg
outs
or
lods
test
pop
cmp
cwde
and
push
pop
shr
sub
sub
(bad)
jle
push
gs
test
jp
add
pop
ror
push
dec
adc
jns
dec
rcr
mov
mov
pop
mov
xchg
and
std
(bad)
mov
mov
mov
sbb
and
sub
(bad)
jbe
cmps
ds
movs
fidivr
adc
adc
and
je
adc
loop
ret
jge
mov
lock
bound
mov
shl
sbb
arpl
pusha
sbb
pop
jecxz
clc
mov
mov
xchg
aad
push
cmp
sub
ret
sbb
push
stos
pop
sti
ret
retf
inc
mov
pop
adc
xor
mov
call
imul
fs
ds
or
stos
adc
sahf
test
xor
xor
inc
sub
mov
in
push
lea
sbb
out
or
jmp
imul
shl
xchg
push
rcl
jno
ret
inc
jmp
pop
cmp
and
mov
add
lock
and
jnp
ss
add
add
or
nop
adc
push
xlat
sbb
cld
xor
or
imul
jbe
sar
outs
div
hlt
arpl
add
mov
icebp
adc
inc
test
fdivp
pop
lods
fistp
shr
mov
inc
dec
cmp
jne
imul
mov
add
mov
or
xor
adc
lss
nop
inc
les
adc
fstp
popa
sub
adc
and
sbb
enter
ret
adc
or
add
xor
pop
mov
ins
arpl
sbb
aaa
aad
rol
and
add
arpl
arpl
or
xor
sub
xchg
bound
cmp
fbstp
xor
dec
xor
nop
push
cmp
adc
mov
push
cmp
push
push
ret
(bad)
(bad)
and
add
xchg
mov
inc
xchg
push
movs
pop
ret
inc
shl
mov
pop
test
clc
mov
mov
adc
imul
sbb
mov
pop
sub
jbe
fcom
enter
adc
ret
add
push
stc
sub
mov
sbb
mov
pop
add
test
adc
add
pop
pusha
sub
leave
fldcw
je
adc
ret
pop
mov
cli
sbb
fdivr
jmp
ror
stos
sub
(bad)
(bad)
inc
add
ret
jae
mov
dec
xchg
mov
sub
pop
mov
in
mov
pop
addr16
inc
add
sbb
sbb
fld
add
jnp
jo
inc
jne
pop
or
jecxz
sub
rcr
inc
and
movs
sti
sbb
jns
xor
rol
jnp
rol
or
inc
mov
pop
js
or
mov
inc
int3
ins
in
lods
sub
ror
rcr
xor
or
sub
fs
sbb
mov
push
aaa
setno
jo
cwde
cmp
mov
cvtps2pi
js
ss
mul
(bad)
dec
sbb
push
mov
push
mov
push
mov
popa
popf
data16
pop
mov
enter
xor
cmp
xor
and
lods
cwde
add
mov
clc
jle
mov
cld
dec
mov
dec
imul
fsub
jmp
push
fwait
adc
(bad)
jnp
in
lahf
test
in
jo
mov
xor
jg
jbe
test
mov
mov
mov
and
adc
adc
inc
xadd
(bad)
or
inc
std
and
sub
(bad)
sub
movs
mov
and
mov
xchg
jg
jno
mov
add
dec
lock
push
and
sbb
sub
lock
add
sbb
lods
cmp
fs
adc
pop
add
leave
inc
sub
dec
sbb
add
cdq
xlat
add
cs
lea
add
(bad)
push
test
fld
test
add
adc
and
add
pusha
pop
cmps
push
mov
mov
nop
dec
pop
add
popa
pop
sbb
pop
adc
jne
inc
test
ja
icebp
inc
adc
cmp
inc
stos
jnp
and
sub
loope
mov
cmc
fisubr
or
xchg
mov
and
cwde
cmp
mov
mov
pushw
sbb
lods
pushf
sbb
fist
in
xor
xor
xor
add
test
imul
lahf
pop
jg
dec
inc
inc
push
push
ror
stos
xchg
push
dec
sbb
sbb
mov
daa
(bad)
es
lods
mov
or
add
jns
test
add
push
addr16
cmp
into
mov
add
fs
add
push
adc
rol
aas
or
ret
aam
dec
sbb
or
sbb
not
fwait
xchg
xchg
push
popf
add
outs
mov
sbb
and
out
sub
add
mov
sub
ins
sub
fdiv
ror
fidiv
adc
lods
xchg
mov
shl
sbb
jmp
xor
mov
repz
pop
aam
add
sbb
test
bound
(bad)
dec
dec
inc
(bad)
icebp
lahf
and
out
dec
inc
inc
inc
inc
dec
dec
inc
or
inc
mov
push
retf
add
lock
ins
out
push
and
nop
inc
add
xor
daa
ss
das
ret
mov
sub
loope
add
xchg
mov
mov
mov
xchg
lea
jb
xor
and
retf
mov
add
or
xor
pop
ja
orps
adc
add
mov
add
mov
pop
sub
mov
or
push
add
add
adc
xchg
mov
mov
sar
push
mov
mov
jmp
xor
outs
adc
rcl
adc
sub
popf
mov
adc
push
adc
and
mov
fs
arpl
xchg
mov
popa
pop
aaa
jnp
xchg
mov
dec
xchg
in
sub
and
add
mov
fadd
sub
jmp
int
add
mov
add
mov
fisubr
cmp
rcl
or
lds
movs
mov
sbb
lock
push
or
nop
rol
jno
or
in
xor
ss
adc
jecxz
or
rol
lock
fcmove
retf
fnstenv
icebp
mov
fs
or
and
fs
mov
mov
stc
cmp
mov
mov
std
out
sbb
arpl
jae
jmp
sbb
xchg
emms
mov
(bad)
sub
jno
xor
adc
inc
(bad)
push
pop
xchg
sub
push
adc
jmp
cwde
sbb
mov
xchg
xor
test
push
pusha
dec
sbb
or
(bad)
call
sbb
aad
rcl
clc
aaa
mov
in
ds
lea
sbb
fcomp
rol
jl
jo
and
mov
add
jnp
jae
test
or
inc
sar
xchg
jnp
inc
jns
movs
sub
cmovg
movs
cmp
inc
sbb
jp
or
push
mov
test
adc
aam
mov
add
enter
adc
adc
enter
xchg
in
mov
adc
mov
lahf
clc
add
push
inc
shr
inc
adc
xor
dec
repz
jl
stc
lea
or
popf
out
iret
sub
fild
in
jno
xor
in
out
int
aaa
push
dec
push
add
push
mov
icebp
mov
xchg
add
es
mov
inc
inc
scas
adc
or
mov
mov
icebp
dec
or
imul
test
push
inc
inc
inc
aaa
xchg
xchg
int
pop
xchg
nop
sti
(bad)
add
and
or
adc
loop
mov
mov
and
sub
sbb
inc
ins
add
add
sub
js
daa
add
sbb
push
inc
or
in
jmp
xor
pop
xor
pusha
dec
or
sbb
sub
fmul
or
add
outs
call
(bad)
lea
pop
inc
add
inc
add
push
or
sbb
fcom
inc
jo
mov
add
scas
es
ficom
cmp
jne
add
cld
sbb
jo
fild
add
sbb
jns
and
sbb
or
in
mov
ret
gs
test
rol
and
xchg
push
into
cwde
bound
adc
(bad)
adc
xor
or
jp
dec
cld
inc
xor
movs
lock
push
ror
xchg
inc
dec
xor
mov
fnstenv
rcr
mov
ins
lds
mov
movs
(bad)
enter
sub
xchg
adc
adc
jp
imul
or
fsubr
ss
mov
mov
xchg
int3
mov
in
and
cmp
push
nop
shl
ja
leave
pop
mov
in
cld
adc
push
pop
jle
mov
cmp
test
and
call
movs
cwde
(bad)
jo
adc
test
adc
test
jmp
xchg
inc
rcr
test
inc
and
ja
rol
loope
push
adc
jns
jmp
loopne
mov
pusha
in
mov
mov
add
or
inc
test
push
dec
ror
cmp
jmp
push
out
ds
outs
fs
push
ficomp
popa
shl
aaa
xchg
xchg
cs
and
cmp
mov
cmp
adc
jbe
cmp
mov
pushf
push
sub
js
pusha
call
mov
mov
push
pop
aaa
lds
add
push
add
add
xor
xchg
add
pop
pop
popa
sbb
pop
out
cmp
test
or
mov
test
xor
and
add
aaa
sub
mov
iret
adc
cs
xchg
push
imul
sub
(bad)
daa
or
imul
pop
pop
mov
loope
mov
and
dec
mov
aaa
jge
test
jp
pop
rol
or
mov
inc
addr16
pop
sbb
movs
ffreep
arpl
xchg
dec
into
add
ret
or
jb
xchg
cdq
outs
test
mov
in
add
dec
ror
add
mov
sub
inc
xchg
mov
in
add
add
push
mov
xor
(bad)
xor
and
jecxz
jne
popa
and
retf
push
cwde
cwde
cmp
push
push
retf
and
rcl
(bad)
mov
add
cmps
pop
pop
outs
xchg
add
cwde
jmp
rol
jg
mov
das
inc
enter
rcr
jle
xchg
sbb
sbb
mov
cmp
mov
mov
das
lock
sbb
mov
add
add
xchg
xor
add
adc
es
push
ins
fisttp
cdq
les
inc
inc
mov
add
push
pop
jne
fadd
dec
imul
push
jb
sub
in
or
ret
xor
push
sbb
or
pop
rcl
cmps
and
cmp
jo
lds
cmp
das
mov
cdq
hlt
pop
lea
cmp
or
jnp
sub
jne
in
xor
mov
or
jmp
dec
inc
dec
jae
sub
jb
inc
or
mov
mov
add
stos
push
(bad)
inc
dec
jne
jmp
gs
faddp
jmp
push
or
pop
or
or
hlt
(bad)
mov
adc
xchg
dec
aaa
add
push
xchg
ret
add
scas
daa
int3
mov
gs
xor
enter
not
sub
bound
das
pop
adc
cmp
rcr
xor
dec
mov
add
rcr
ret
shr
movs
fst
and
xchg
int
and
in
add
mov
mov
dec
inc
or
test
adc
inc
movs
mov
adc
xchg
ja
dec
call
test
mov
add
ror
jnp
push
mov
lock
adc
dec
add
scas
pusha
mov
lea
ror
and
aad
mov
xor
xchg
or
repnz
xor
sub
stos
popf
add
or
sub
mov
adc
push
mov
inc
fst
je
lods
adc
jo
or
or
retf
xor
push
add
icebp
call
lods
pusha
dec
mov
mov
sbb
idiv
je
jmp
dec
sbb
push
pop
test
jmp
test
or
in
push
je
movs
jne
mov
sub
rcl
mov
pop
scas
out
and
pusha
cmp
pop
jmp
adc
fmul
in
fcom
rcl
mov
ins
xor
sbb
xor
popa
jne
xor
test
sqrtps
push
dec
inc
mov
xchg
enter
popa
xchg
movs
add
inc
nop
lods
ins
mov
pop
(bad)
ror
add
add
xchg
xchg
mov
shr
cmp
int3
xor
lock
mov
cmp
nop
out
addr16
push
push
lea
ficomp
stos
add
xor
jmp
hlt
leave
push
add
xchg
ins
mov
loopne
mov
push
fucompp
pop
xchg
inc
fadd
pop
mov
mov
adc
pop
mov
ins
das
arpl
sub
(bad)
jbe
adc
enter
cmp
sub
jle
adc
je
mov
or
xor
in
mov
or
and
or
adc
les
inc
mov
nop
dec
mov
cmp
pusha
ja
inc
add
mov
xor
(bad)
int
sbb
lods
push
call
sahf
fld
sbb
mov
cmp
push
adc
int3
mov
les
push
lock
mov
mov
outs
mov
daa
imul
mov
mov
dec
mov
jecxz
mov
popw
sub
shl
adc
rcr
push
pusha
dec
push
setge
cmp
mov
xor
mov
call
ror
mov
data16
(bad)
mov
mov
ret
loopne
jbe
sahf
mov
imul
push
mov
ret
out
aam
scas
in
test
jnp
xor
scas
and
js
lods
mov
scas
mov
scas
mov
loope
mov
pop
push
mov
sahf
imul
dec
ja
pop
sub
sbb
std
and
inc
loopne
pop
push
and
and
mov
dec
push
cmp
sbb
mov
aas
mov
jmp
daa
mov
or
mov
mov
ret
push
movs
push
or
jo
inc
adc
mov
xchg
ins
xor
mov
jne
xchg
(bad)
pop
xchg
ss
xchg
sub
xor
sbb
loope
xchg
shr
ret
das
push
cmp
test
popa
xor
rcl
or
xor
fcom
cmp
lds
xor
dec
xchg
sbb
inc
cmps
movs
int3
sub
add
pop
call
out
and
xchg
mov
add
les
mov
es
inc
pop
jbe
icebp
cmp
inc
outs
nop
mov
cmp
fld
add
xor
bound
inc
lahf
sbb
mov
push
inc
add
pop
mov
enter
jne
add
jmp
mov
js
ret
dec
mov
add
test
inc
loopne
(bad)
cmp
jle
mov
jnp
push
adc
jno
cmp
nop
and
les
fbstp
pop
rol
jle
sbb
jl
mov
loope
add
add
fisub
push
call
dec
nop
inc
repz
cmp
jecxz
adc
ss
cmp
aaa
and
adc
daa
xchg
adc
jge
sub
sbb
push
xchg
pop
popa
daa
movs
cmps
mov
mov
dec
xchg
push
sbb
mov
jo
dec
and
lea
mov
test
jmp
clc
loope
adc
out
ret
cmp
jb
jnp
enter
mov
imul
and
cld
hlt
in
push
cmp
hlt
push
mul
adc
clc
aas
push
jnp
mov
idiv
mov
xchg
mov
lods
daa
cli
dec
xchg
repz
pop
dec
mov
jae
xchg
jnp
cmp
mov
xor
jae
mov
dec
add
aaa
adc
nop
cmp
inc
push
aas
movs
sub
cmp
cld
xor
sar
jmp
out
or
push
push
mov
mov
(bad)
jmp
cmp
and
(bad)
fistp
je
sbb
add
jae
and
imul
push
sar
mov
adc
mov
movs
aam
mov
adc
push
add
cdq
sbb
add
or
jge
std
sub
add
rcl
sbb
iret
add
fild
mov
xchg
les
add
adc
add
pusha
adc
mov
and
je
mov
test
push
shl
inc
xor
push
push
jge
adc
mov
mov
in
stos
adc
cwde
inc
or
and
adc
ror
add
cmp
cmp
or
(bad)
in
mov
pmulhw
imul
jnp
imul
jb
loopne
stos
mov
xchg
retf
sub
jns
(bad)
xchg
mov
jnp
pop
mov
sub
movs
xchg
push
dec
sbb
cs
movs
pop
dec
mov
das
sbb
int3
xor
shr
inc
dec
pop
sub
and
xchg
or
push
pop
clc
or
ret
or
ret
cs
xchg
xor
mov
cmp
pop
out
pop
cmc
lods
adc
ins
popf
lods
loope
rcl
scas
popf
rcr
sub
cmp
dec
dec
dec
xor
enter
push
mov
shr
mov
jge
(bad)
loope
adc
dec
sbb
shr
rcl
std
push
and
pinsrw
imul
es
(bad)
adc
pop
hlt
fstp
out
and
sub
add
push
fstp
or
inc
add
and
or
xchg
dec
jl
ins
jo
rcl
xchg
adc
cmp
clc
xor
ds
adc
lea
xor
or
add
mov
rcl
lea
sbb
dec
les
pop
sub
push
scas
(bad)
loopne
test
lahf
push
pusha
das
xchg
fbstp
fwait
test
sbb
clc
push
add
xchg
ret
jecxz
ja
jnp
scas
pop
rcr
fisub
shr
and
sub
lea
mov
imul
mov
ficom
sar
out
pop
leave
sbb
mov
mov
mov
xchg
adc
stos
hlt
adc
imul
dec
xor
fcomi
scas
stc
and
fstp
jae
(bad)
sbb
clc
cmps
nop
ret
and
or
jne
mov
pop
inc
pop
sbb
jne
mov
iret
add
xchg
int
xchg
lea
jbe
jb
sub
ss
jb
mov
in
push
pop
outs
call
pop
pop
mov
retf
jne
ret
js
sub
mov
call
push
add
rcr
jbe
sub
xchg
jge
adc
lods
pop
in
mov
pop
retf
in
mov
mov
xchg
xor
sbb
lock
inc
push
or
scas
in
mov
movs
dec
sbb
add
dec
pop
inc
mov
xchg
sub
sbb
jle
jo
dec
sbb
adc
mov
mov
or
add
dec
fild
and
sub
les
es
xchg
sbb
add
stos
or
inc
xor
jae
inc
mov
pop
push
xchg
sub
mov
pushf
and
inc
jmp
sub
ins
test
add
stos
add
push
dec
mov
and
push
push
dec
mov
test
inc
mov
push
push
xchg
mov
cli
inc
sbb
jg
sub
in
push
cli
(bad)
(bad)
je
ucomiss
cmp
inc
inc
sbb
rol
in
ins
mov
and
iret
or
or
mov
and
in
sahf
mov
inc
cmovns
xchg
xor
mov
mov
cmps
sbb
les
add
jl
adc
jbe
jne
and
mov
push
cmp
xor
out
clc
and
cmp
je
dec
push
jns
cmp
mov
push
loopne
rcl
pop
dec
push
rol
leave
adc
jge
inc
sub
les
jno
jg
mov
int
xchg
js
mov
sub
adc
ficomp
mov
xchg
lock
xlat
pop
rcr
add
cmp
xlat
dec
movs
shl
push
shl
xchg
push
div
adc
push
nop
cmc
inc
mov
xor
leave
inc
dec
mov
mov
inc
push
aas
jle
movs
enter
inc
or
push
fs
cwde
mov
adc
sub
jmp
xchg
pop
shl
push
adc
jmp
pop
fwait
or
out
add
xchg
mov
(bad)
jg
pop
jl
movs
stos
and
sahf
inc
pop
xor
mov
mov
mov
dec
sub
or
dec
jmp
and
je
xor
add
test
loopne
xlat
jno
adc
adc
push
xlat
les
shl
(bad)
push
scas
popf
arpl
popa
test
bound
adc
sbb
adc
jno
lock
test
push
fimul
pop
sbb
mov
mov
test
add
cmp
sub
cmp
xor
imul
mov
je
sub
cmp
mov
mov
sbb
cmps
and
mov
out
aas
and
dec
mov
popa
jae
inc
inc
xchg
inc
pop
inc
hlt
cmc
sbb
adc
rcl
push
mov
inc
pop
dec
daa
and
ror
xor
or
sbb
adc
loop
repnz
iret
adc
add
push
sar
and
push
mov
test
add
pop
outs
mov
mov
add
sbb
mov
cmps
mov
pop
sub
mov
inc
outs
and
mov
adc
cwde
je
shr
mov
inc
aas
xor
sub
aas
inc
add
inc
(bad)
call
xchg
dec
jmp
push
mov
dec
jl
cmp
jl
or
inc
sbb
mov
ins
outs
aad
lea
sub
add
cmc
push
imul
pop
mov
adc
or
xor
in
pop
push
sbb
shl
test
aaa
cmp
and
shr
dec
adc
rcl
retf
jnp
in
mov
iret
popa
lods
sbb
sub
adc
sbb
or
je
out
mov
pop
imul
sbb
cmps
popa
aaa
push
cs
or
inc
dec
push
mov
or
and
lods
iret
in
rol
pop
ret
shl
stos
xchg
cdq
fild
cmp
jg
or
adc
ja
mov
mov
in
pop
stc
jge
dec
cmp
add
xchg
push
xchg
or
call
and
test
jle
sub
jg
mov
mov
or
xchg
or
mov
nop
dec
ficomp
add
cmp
mov
mov
mov
xchg
mov
sbb
jle
jne
add
dec
push
mov
inc
adc
adc
xchg
sub
leave
add
lods
pop
or
push
push
das
mov
mov
mov
sbb
test
dec
call
pop
add
je
in
rcr
mov
cld
dec
jle
pusha
sar
mov
shl
(bad)
(bad)
adc
add
sbb
mov
mov
dec
jae
sub
repnz
cwde
cmp
loopne
ret
sbb
push
add
inc
ja
xor
iret
adc
jns
pusha
jne
inc
leave
je
or
xchg
int
nop
push
add
inc
mov
ror
je
stc
clc
sar
mov
push
push
adc
loope
mov
jmp
pop
shl
dec
cmp
jmp
adc
mov
fld
or
jl
sub
imul
rol
fsub
arpl
fistp
lods
jge
jle
push
mov
or
add
cmp
push
test
cli
ret
test
lock
or
outs
push
fmul
rcl
icebp
out
das
sbb
retf
pop
stos
inc
mov
mov
loope
pop
test
jb
jle
adc
push
ins
ret
xor
test
mov
iret
rol
cmp
sbb
call
adc
push
xchg
push
mov
push
lock
imul
sub
jmp
mov
es
mov
lea
std
and
pop
sub
sub
ds
cld
cmp
imul
ret
push
pop
dec
adc
addr16
rol
mov
add
xsaveopt
and
mov
inc
jmp
rol
mov
and
mov
rcr
push
jle
jo
lods
or
jmp
adc
cmp
fld
mov
dec
fwait
(bad)
sbb
pusha
pop
test
rcr
mov
mov
inc
and
stos
shr
mov
mov
push
pop
xor
cmp
kandb
sbb
push
mov
(bad)
pop
push
or
inc
or
push
xchg
call
or
mov
popf
dec
and
push
mov
and
mov
clc
aas
or
aaa
(bad)
and
pop
inc
push
lds
mov
push
(bad)
dec
and
add
dec
add
push
pop
fisub
inc
(bad)
push
aas
or
add
fidivr
daa
outs
call
sbb
ror
dec
add
loope
push
add
or
fs
xchg
or
cli
and
jmp
lock
nop
xor
cmp
mov
or
jmp
push
add
add
add
add
sub
dec
and
add
sbb
xor
ja
or
std
dec
inc
out
mov
cmp
jb
adc
add
(bad)
cmp
add
ror
or
and
and
adc
shr
dec
pop
add
pusha
xlat
fnstcw
je
push
dec
jo
jge
or
dec
adc
mov
push
fidivr
or
dec
add
push
mov
fdivr
fcmovne
xchg
and
mov
pmaddwd
mov
cld
push
push
add
mov
mov
jb
movs
mov
sub
adc
xor
fbstp
leave
mov
xchg
sub
test
sbb
cmps
ins
mov
cmp
mov
mov
lea
jns
leave
nop
das
inc
pop
jb
gs
enter
pop
mov
int3
ss
leave
movs
int3
imul
inc
imul
dec
inc
inc
inc
jb
push
popa
scas
jnp
inc
add
add
add
inc
add
in
imul
pop
jae
pop
push
add
lahf
push
inc
jg
cmp
or
mov
push
push
retf
out
(bad)
push
inc
test
movs
out
sahf
out
mov
add
das
and
ror
push
aam
inc
mov
shl
call
inc
sar
sub
addr16
cmp
stc
(bad)
xchg
retf
push
mov
or
push
push
inc
inc
fimul
mov
dec
and
push
inc
cs
(bad)
xlat
daa
inc
pop
inc
dec
push
push
dec
push
lahf
icebp
das
xchg
xchg
dec
fdivr
frstor
mov
add
and
pop
clc
retf
fsub
pop
int3
xchg
mov
shl
xor
cmc
ins
loopne
shl
add
adc
loopne
lea
push
push
mov
mov
es
xchg
dec
test
mov
xor
dec
je
dec
stos
push
and
fwait
mov
sub
iret
adc
push
pop
add
in
jp
add
mov
and
push
jmp
push
jne
mov
jmp
xchg
jno
stos
and
loopne
add
or
out
add
add
sbb
sbb
sub
cwde
mov
pop
out
addr16
adc
cmc
ror
jge
mov
add
xchg
lock
mov
and
dec
push
mov
mov
(bad)
aam
add
xchg
sub
les
or
mov
push
aam
cmps
push
arpl
pop
cmps
and
xor
pop
cli
mov
xchg
cmc
mov
aad
xchg
and
adc
(bad)
in
ins
dec
jne
xlat
mov
mov
pop
int3
mov
rcl
or
dec
xlat
fcom
out
xor
les
xor
sub
mov
jl
push
dec
jo
aam
test
push
push
jl
or
mov
test
mov
je
sub
pop
cmc
push
pop
ins
popa
xchg
sbb
sub
mov
sbb
add
nop
ins
popf
mov
mov
sbb
je
pop
xor
push
in
dec
cmp
jb
xchg
pop
and
and
push
and
sub
nop
or
cmp
dec
dec
push
and
adc
pop
pop
ins
lock
ja
sbb
in
in
ins
sbb
sbb
sub
and
mov
in
adc
xchg
sbb
cld
sbb
cld
sbb
push
ror
cld
adc
push
push
push
int3
cld
xchg
or
sbb
xchg
xchg
hlt
or
push
add
mov
dec
ficom
xor
jmp
push
pop
inc
ja
sub
push
je
or
aaa
cmp
dec
jmp
ins
inc
add
xchg
mov
inc
or
push
sbb
xor
pop
outs
call
arpl
or
inc
test
mov
xor
jmp
pusha
and
cmp
lahf
stc
mov
(bad)
mov
in
bound
dec
test
xchg
and
cmp
enter
bound
fcom
std
fs
mov
xor
jg
lock
mov
add
pop
enter
pop
jo
xor
rcl
fild
pop
mov
sub
ins
mov
dec
cs
adc
xchg
js
dec
sbb
dec
adc
outs
push
jg
pop
enter
in
call
adc
and
sbb
inc
xor
(bad)
adc
or
sub
mov
dec
das
fsubr
inc
dec
xor
jns
repnz
and
mov
push
pop
cwde
pop
stos
pop
mov
or
jecxz
loope
mov
jne
or
xor
ins
(bad)
pop
or
xchg
(bad)
sbb
test
and
ret
mov
(bad)
xchg
pop
pop
pop
add
mov
movs
leave
jl
cmc
test
int3
lea
mov
cdq
and
inc
les
stos
sbb
inc
push
adc
mov
pop
inc
cmp
sbb
pop
lahf
adc
pop
jmp
jb
retf
fs
cs
inc
test
nop
mov
cmp
jl
sbb
push
adc
cmc
fcom
dec
sbb
fcomp
les
adc
adc
mov
lds
pop
inc
fisttp
jmp
jne
cmp
repz
adc
xor
ss
adc
cmp
fild
outs
(bad)
je
add
ss
xchg
mov
push
mov
sahf
mov
sar
jae
(bad)
or
movs
push
retf
pop
adc
inc
push
xchg
mov
mov
and
fldenv
loop
clc
xchg
(bad)
pop
cmp
mov
adc
pop
xor
rcl
cmp
cmp
cmp
and
outs
hlt
sub
(bad)
sar
add
sbb
ins
popa
and
enter
xor
js
dec
enter
push
inc
adc
sbb
and
sbb
enter
dec
sbb
enter
sbb
enter
sbb
sbb
pop
and
cwde
push
push
int
pop
fld
pop
(bad)
aad
call
test
pop
mov
daa
pop
call
pop
push
dec
enter
mov
sub
(bad)
cmp
stos
cwde
nop
movs
or
mov
xchg
mov
or
push
jp
mov
cli
push
fstp
mov
int
pushf
(bad)
(bad)
aam
xchg
pop
pop
xchg
inc
(bad)
xchg
test
cli
mov
add
in
dec
push
push
mul
ds
add
add
xor
dec
or
or
mov
adc
gs
xchg
movs
adc
test
cmp
fidiv
ret
and
popf
sbb
adc
add
push
and
sbb
je
call
icebp
fucomp
pop
push
pop
imul
jo
fadd
inc
into
sub
xchg
mov
adc
test
push
js
mov
pop
xchg
inc
inc
sub
sbb
ins
inc
movs
jae
mov
pusha
pop
in
xchg
inc
push
int3
add
xchg
or
jb
and
push
int
pop
in
cs
and
pop
xor
dec
into
dec
push
pop
dec
in
xlat
add
dec
es
pop
jb
nop
dec
mov
xchg
dec
sub
cmp
cmp
add
dec
sbb
cdq
movs
xor
xor
xor
jne
cmp
test
xor
dec
dec
stc
in
imul
(bad)
retf
xchg
mov
jp
inc
call
mov
sub
nop
out
(bad)
pop
sbb
and
imul
in
inc
and
jmp
loopne
rcr
cmp
aad
pop
stos
aaa
pop
test
add
shl
sbb
bound
mov
mov
daa
sbb
xchg
push
jmp
mov
add
lea
shl
popa
xchg
mov
ret
adc
add
pop
jnp
and
imul
or
add
or
adc
sbb
ret
nop
out
sbb
push
add
add
dec
sub
add
leave
(bad)
enter
in
cmc
push
in
cmc
sbb
outs
adc
shl
cmc
pop
xor
leave
les
pop
enter
pusha
inc
int3
leave
pop
pop
add
xchg
jo
dec
lock
adc
gs
icebp
sub
mov
(bad)
xchg
data16
call
cmp
and
xchg
out
dec
mov
test
cmc
in
and
ror
fsubr
in
fcomp
fdiv
adc
and
shr
pop
in
inc
scas
cmps
rcl
add
xchg
add
inc
dec
leave
int3
mov
test
clc
mov
jo
sub
imul
mov
xchg
xlat
test
es
test
mov
push
inc
xchg
lods
test
out
enter
xchg
movs
xchg
shl
and
fs
mov
mov
out
pushf
mov
jb
lock
jno
rcr
rcr
or
js
mov
in
and
dec
jb
mov
ins
nop
jl
xor
inc
cs
xor
in
leave
in
xchg
xchg
cwde
nop
pop
sub
cwde
and
in
jo
cmp
jo
sbb
jl
ins
xor
add
jbe
mov
daa
push
inc
movs
pop
push
push
loop
xchg
sub
and
cmps
add
test
adc
shr
fwait
int3
mov
ins
rcl
pop
push
imul
lods
or
push
fs
and
adc
fcomp
inc
dec
mov
and
jb
pusha
pop
sub
test
in
shr
add
adc
test
lahf
dec
ret
loopne
test
clc
mov
mov
mov
xor
ficom
add
push
test
mov
dec
ret
mov
jo
fsubp
cmp
push
ret
mov
cmp
xchg
jne
push
popf
adc
xchg
jbe
loopne
hlt
pop
inc
xchg
inc
sbb
mov
nop
inc
sbb
(bad)
push
or
ret
xchg
mov
jmp
pop
daa
and
jb
mov
jmp
out
and
aad
pop
jno
dec
pop
lea
adc
nop
mov
and
cdq
addr16
loope
scas
ss
and
adc
mov
pusha
and
retf
jne
add
fwait
in
cs
rcl
movs
pop
stos
enter
fidiv
push
(bad)
xchg
cld
outs
in
mov
outs
and
push
cdq
jbe
xor
(bad)
imul
mov
pusha
in
leave
xor
sub
lds
push
xchg
popa
jecxz
or
mov
pop
mov
arpl
stc
out
scas
jmp
jmp
outs
enter
repz
jnp
mov
jmp
fcom
hlt
icebp
hlt
push
fnstcw
pop
pop
mov
jg
xchg
jmp
dec
pop
sub
call
pop
mov
repnz
xor
in
mov
jbe
xchg
pop
and
ror
test
addr16
imul
popa
jecxz
std
inc
jo
in
dec
push
hlt
call
xor
out
mov
cmp
inc
sahf
gs
dec
test
xor
dec
and
push
shl
movs
aam
cmc
fcom
sbb
push
cmp
push
dec
dec
pop
mov
test
fistp
add
add
or
fsub
and
fmul
repz
and
test
movs
int3
test
(bad)
fld
cdq
ret
test
enter
movs
div
and
enter
hlt
sbb
retf
in
xchg
out
shl
mov
fs
repz
lods
jecxz
imul
and
inc
retf
movs
lea
mov
and
ins
popa
inc
push
in
xchg
push
push
cmp
fstp
pop
inc
pop
mov
xor
fisttp
xchg
cmp
mov
mov
sbb
or
fadd
xor
inc
jno
fsubr
pop
test
adc
lea
mov
inc
es
cmp
fcom
xor
clc
mov
or
adc
sbb
push
out
in
jne
inc
sub
or
xor
(bad)
movs
push
and
xchg
ficom
arpl
inc
sub
adc
mov
mov
jb
rol
clc
and
and
iret
add
xlat
and
inc
imul
mov
hlt
movs
push
inc
nop
dec
in
mov
push
mov
movs
and
cli
loopne
retf
ds
out
cmp
std
push
xlat
hlt
retf
xchg
cli
jecxz
or
mov
lods
push
shl
(bad)
in
scas
call
sub
mov
stos
scas
adc
gs
xchg
jb
out
sbb
jecxz
test
outs
push
sbb
jae
mov
cmc
sbb
icebp
push
sti
dec
enter
adc
inc
mov
dec
lods
cmp
ins
jns
arpl
enter
push
scas
xor
pop
mov
cmp
add
xor
add
lods
sub
and
dec
adc
jbe
mov
out
or
add
test
add
nop
dec
xor
in
clc
lods
pushw
add
sar
adc
fld
mov
mov
pop
popf
push
ins
js
(bad)
cld
xchg
test
or
inc
xchg
es
fadd
stos
popa
aas
movs
aaa
fsub
push
adc
jnp
add
(bad)
fisubr
inc
cmp
or
ret
mov
mov
mov
hlt
mov
mov
call
sbb
mov
daa
aam
sub
cmps
nop
nop
add
jmp
cmp
repnz
aam
or
and
xchg
sbb
repz
cld
sbb
dec
sub
int
clc
clc
cld
add
imul
(bad)
push
adc
dec
adc
imul
and
push
sbb
adc
shl
adc
test
imul
inc
add
test
jno
sbb
sub
jb
stos
shr
rcr
bound
std
pushf
lock
jae
fsub
push
inc
push
les
retf
mov
sub
and
jmp
in
shr
push
dec
sub
sbb
inc
or
push
add
jb
pop
xor
and
dec
data16
(bad)
out
xor
fwait
sub
sbb
es
jne
sbb
pop
adc
adc
mov
jb
sbb
mov
je
(bad)
(bad)
popa
gs
hlt
jmp
add
and
add
xchg
lock
(bad)
xchg
es
adc
push
adc
mov
mov
push
andps
cmp
cmp
pusha
cmp
cmp
push
cmp
cmp
add
push
(bad)
fstp
rol
test
pop
and
or
popa
je
push
push
xchg
mov
(bad)
es
aas
loope
pop
push
mov
xor
lds
xor
cmc
ror
fild
jns
adc
je
repnz
div
sbb
xor
add
sub
(bad)
dec
xlat
xchg
dec
and
push
xchg
(bad)
dec
sbb
mov
or
inc
shr
or
mov
or
outs
add
fstp
stc
shl
inc
jmp
leave
rol
sbb
fisttp
xchg
sahf
xor
pop
mov
sub
addr16
lahf
adc
lods
jno
xor
mov
mov
add
cmp
shl
sbb
in
add
fucomp
outs
dec
cmp
ret
inc
shr
sbb
fmul
xchg
pop
pop
call
(bad)
fsub
sbb
arpl
inc
fwait
rcr
sub
and
adc
aam
mov
mov
mov
xor
or
stc
mov
cmp
and
xor
push
or
sub
icebp
add
mov
int3
ja
rcr
je
and
lock
and
adc
inc
jmp
pushf
mov
enter
jne
pusha
loopne
and
rol
sbb
sbb
jb
loopne
rcr
bound
xor
or
dec
outs
add
mov
lahf
in
das
add
(bad)
jne
sti
sbb
push
sub
fdiv
sub
pop
test
add
pop
inc
cmp
scas
or
pop
sbb
xor
push
adc
mov
loope
mov
movs
and
in
adc
call
inc
jecxz
dec
jne
jo
cmp
lds
cmp
outs
push
mov
cmp
push
xor
inc
mov
popa
sbb
inc
aas
(bad)
inc
imul
out
adc
push
sub
jp
cmp
pop
fidivr
lods
lods
mov
fwait
add
push
mov
mov
cmp
imul
push
or
pop
add
adc
loope
add
and
fcos
hlt
cld
and
clc
cmp
int
push
mov
or
ins
dec
sbb
imul
lods
add
push
mov
mov
popfw
test
clc
push
mov
outs
mov
ret
cmp
jp
and
cld
call
shl
adc
xchg
mul
leave
imul
inc
push
jecxz
or
fst
out
inc
inc
arpl
pop
enter
adc
les
push
inc
(bad)
and
(bad)
es
popf
in
test
and
push
xchg
jae
adc
popf
jo
adc
push
fldcw
ins
sbb
addr16
popa
jnp
es
sub
and
enter
or
mov
outs
jl
adc
hlt
jmp
shl
push
int3
fs
cmps
in
enter
cdq
in
mov
(bad)
in
xchg
(bad)
(bad)
add
jns
sar
rol
mov
or
in
daa
mov
mov
add
push
dec
mov
mov
daa
mov
xchg
in
mov
and
mov
mov
pop
mov
fimul
mov
lods
cmps
xchg
cmps
pop
adc
in
in
(bad)
mov
rcl
rcl
ins
test
mul
movs
inc
popf
mov
pop
mov
mov
imul
xchg
cmp
sbb
test
daa
xchg
lea
cmp
div
mov
cmp
push
xor
dec
mov
pop
sub
test
xchg
outs
push
mov
(bad)
adc
sbb
sub
mov
cmp
add
pop
scas
mov
pop
xor
pop
outs
dec
xchg
and
ja
ins
or
es
js
push
cdq
add
cmps
xor
test
jo
lods
cmp
mov
pop
pop
mov
dec
movs
dec
ins
scas
ins
add
dec
push
retf
and
and
nop
push
and
dec
sbb
add
loopne
xchg
and
jns
dec
jae
jns
imul
pop
add
pusha
test
sub
aaa
fiadd
test
rcr
cmp
test
mov
sbb
jno
je
jecxz
adc
mov
cmp
iret
push
adc
push
xor
cmp
int3
test
bound
and
aam
loop
fnsave
mov
mov
xor
inc
dec
jne
jb
popa
ins
xor
add
cs
sbb
add
loope
xchg
out
adc
dec
push
sbb
jmp
xchg
icebp
push
or
add
pop
call
inc
mov
daa
xchg
mov
pop
test
xor
sbb
nop
out
shl
push
push
or
cmc
xchg
loope
pusha
mov
add
or
sbb
sub
cs
inc
rol
adc
inc
or
aaa
loope
inc
fdiv
movs
and
push
mov
adc
(bad)
adc
add
and
pop
sbb
adc
or
movs
add
enter
or
sub
jmp
out
cmps
add
in
sbb
dec
imul
push
mov
inc
inc
jmp
sub
jne
and
mov
xor
sub
(bad)
pop
ins
shr
mov
add
(bad)
sbb
mov
and
adc
sbb
mov
cmp
or
or
js
sub
mov
sbb
int
inc
mov
ror
inc
jecxz
add
rol
loopne
xchg
movs
jb
mov
out
xor
cmp
stos
and
mov
cmps
jmp
or
adc
sbb
inc
enter
mov
loopne
adc
test
inc
mov
push
fdivr
cmp
push
aam
mov
jne
sar
pop
ror
mov
sahf
int3
enter
in
in
les
sub
inc
xchg
es
mov
pop
and
js
jno
and
arpl
mov
xchg
in
xor
and
xchg
rol
xor
xchg
pusha
call
not
icebp
or
xor
mov
rcr
push
bound
jb
sbb
xor
sbb
inc
sar
inc
in
lods
inc
mov
add
xlat
inc
add
mov
xchg
cmps
jb
or
xchg
inc
add
mov
push
pop
xchg
mov
mov
nop
mov
mov
xor
sbb
(bad)
clc
or
cmp
sbb
sbb
adc
add
mov
in
cmp
or
add
pop
jb
sbb
mov
add
or
cli
cmovnp
push
or
hlt
fild
pop
dec
push
jns
push
clc
push
movs
xchg
fistp
sub
xor
cmp
je
repnz
call
int
(bad)
aam
adc
mov
xor
xchg
lahf
lods
inc
jmp
in
mov
xlat
(bad)
xor
add
ss
lock
adc
fbstp
sub
jmp
idiv
sahf
lahf
lock
sbb
jne
fimul
out
(bad)
jne
xor
fwait
hlt
cmc
inc
out
scas
or
pop
ret
or
(bad)
loopne
inc
aaa
jl
arpl
or
or
add
xchg
aam
je
rcl
push
adc
in
xchg
sub
in
push
psubw
xlat
add
ficom
jmp
inc
fcom
or
call
and
daa
inc
inc
xor
cmp
mov
push
ret
sahf
in
(bad)
mov
push
js
cmp
fcomp
push
mov
add
xchg
inc
dec
jne
add
push
and
(bad)
movs
mov
mov
cmp
cwde
and
(bad)
mov
and
add
ror
int3
pop
adc
ret
ret
test
adc
push
sbb
and
adc
xor
inc
inc
mov
iret
mov
sub
les
popw
push
adc
aaa
shl
scas
retf
adc
pushf
mov
sbb
push
sbb
and
mov
xchg
inc
adc
mov
les
out
in
jecxz
mov
clc
dec
or
xchg
push
jmp
mov
pop
jb
xchg
fdiv
cmp
cmp
std
pop
push
or
adc
inc
int
and
jmp
mov
adc
mov
test
popa
enter
xchg
xchg
icebp
push
push
data16
lods
hlt
sbb
mov
dec
fbstp
paddsb
add
dec
or
lahf
dec
fs
inc
dec
adc
xchg
push
dec
or
inc
and
lea
inc
inc
(bad)
daa
daa
daa
daa
cmp
sub
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
ret
inc
add
enter
scas
inc
sub
popf
or
or
and
jl
inc
rcr
inc
pusha
cmp
add
pop
cmp
scas
sub
shl
adc
loop
pop
test
enter
(bad)
push
inc
clc
dec
jne
xor
sbb
sahf
mov
ins
ins
daa
daa
in
movs
imul
pushf
xor
pop
sbb
ror
mov
adc
aam
jb
adc
aam
adc
dec
mov
jle
ins
mov
and
addr16
push
imul
sbb
inc
clc
push
cdq
gs
push
cli
shr
adc
and
dec
sbb
push
outs
dec
int
mov
mov
inc
xchg
js
fwait
pop
or
getsec
push
mov
xlat
adc
inc
test
push
sbb
mov
leave
inc
ins
dec
fwait
(bad)
test
mov
jbe
ss
popf
in
mov
retf
sub
mov
mov
mov
adc
jo
add
push
cmp
adc
ret
mov
cmp
mov
and
int
fcomp
fsubr
(bad)
gs
movs
shl
iret
ror
enter
xor
int3
shl
jb
sub
dec
push
ins
cmp
test
mov
outs
loope
jo
push
jg
inc
scas
lods
inc
mov
ror
cmp
jmp
leave
les
dec
les
pushf
rol
xor
jns
cmp
cmp
cmp
mov
and
int
mov
mov
ror
mov
cdq
lods
movs
movs
test
pop
push
cmp
js
pop
popa
mov
in
sub
pop
fld
lea
sti
inc
cmp
push
adc
cmp
repnz
pusha
and
xor
repnz
mov
sub
cmc
test
and
inc
std
push
leave
bts
cmps
and
cmp
push
sbb
int
cmp
mov
and
inc
loope
and
and
mov
xor
dec
jae
test
pop
pop
mov
add
sub
cmp
movs
test
add
sbb
sbb
fdivr
add
lea
and
jl
push
xchg
or
mov
push
dec
sub
xchg
in
and
fs
pop
jmp
pop
xchg
je
mov
int3
nop
je
or
xchg
sbb
aaa
shr
sbb
mov
xchg
sbb
sub
out
xor
cmp
mov
push
adc
ds
lea
repnz
add
es
mov
mov
fstp
adc
ss
ret
dec
mov
stc
jmp
pop
adc
and
xchg
sub
pop
or
clc
and
sbb
jmp
call
inc
xchg
loopne
cmps
fld
sub
cmp
test
cmp
cdq
das
cmp
or
outs
mov
or
mov
ins
daa
pushf
data16
pop
or
ret
loop
hlt
sub
outs
inc
adc
nop
cmp
imul
jmp
push
pop
loopne
cmp
mov
or
push
outs
int3
shl
adc
mov
adc
(bad)
das
xor
dec
or
lock
cmp
add
test
movs
fidiv
mov
mov
pop
les
movs
stos
sub
fwait
mov
fistp
in
pop
inc
xchg
adc
pusha
push
fs
sbb
adc
imul
push
cmp
scas
xor
push
test
adc
push
test
test
cmps
xor
or
lods
xchg
add
push
xor
mov
cmp
cwde
dec
retf
jmp
rcl
test
or
cmp
sbb
sti
enter
and
scas
mov
xor
mov
das
ins
ret
inc
mov
mov
pop
imul
add
lahf
jb
xchg
jl
sub
xchg
adc
xchg
sub
push
mov
add
adc
adc
js
dec
aad
xchg
cmps
mov
nop
or
ret
ss
xchg
mov
push
icebp
ins
adc
adc
ret
adc
mov
mov
adc
ss
cmp
and
add
pushf
push
pushf
shl
jnp
cld
or
add
mov
aaa
cmp
outs
mov
ret
xchg
adc
bound
out
push
mov
add
mov
shl
jbe
or
add
jnp
inc
stos
daa
or
pop
imul
sbb
pop
jmp
mov
cmp
ret
adc
mov
pop
push
fmul
inc
pusha
pop
cmp
lea
rol
adc
and
cld
pmulhuw
sub
dec
mov
mov
and
push
inc
add
fs
or
jmp
pop
pop
mov
adc
xor
xchg
inc
xchg
mov
pop
aam
mov
sbb
adc
ja
push
daa
mov
push
dec
leave
les
xchg
outs
add
addr16
pop
or
pop
add
test
adc
addr16
aam
call
sbb
mov
leave
pop
test
int3
cwde
loopne
dec
daa
pusha
mov
mov
xor
mov
int
fdiv
(bad)
enter
xor
xchg
pop
sbb
push
push
(bad)
dec
lods
pushf
ret
pop
sbb
loopne
int
dec
sar
pop
mov
mov
shl
or
and
add
push
or
sar
stos
pop
mov
inc
inc
dec
jne
cmps
and
mov
pop
sbb
jl
xor
push
dec
fsub
cld
jecxz
mov
adc
sub
rcl
stos
and
mov
dec
jb
sbb
rcl
les
and
(bad)
enter
inc
rcl
inc
and
jns
sub
push
adc
pushf
xor
mov
inc
push
jb
popa
push
cs
or
pop
repnz
clc
popf
(bad)
sub
leave
(bad)
or
push
and
dec
dec
out
pop
test
cmp
clc
les
pop
(bad)
dec
test
fldcw
xor
xchg
les
mov
fwait
or
aas
xor
inc
test
test
sbb
icebp
lahf
test
rcr
bound
arpl
push
push
(bad)
hlt
and
das
jne
popf
sbb
sar
test
mov
ins
outs
ror
pop
aam
call
sar
aam
(bad)
imul
xchg
add
inc
mov
pop
adc
jmp
fninit
adc
sbb
mov
mov
push
lods
movs
sub
mov
sub
jmp
xchg
mov
and
cmp
or
(bad)
xchg
shl
sub
clc
cdq
lods
pop
ror
aad
int3
mov
mov
jne
dec
ins
xchg
inc
out
add
addr16
sub
cdq
pop
enter
icebp
adc
push
mov
outs
in
sbb
mov
jnp
mov
aas
xlat
dec
pop
fs
mov
mov
jne
inc
pop
ins
jmp
enter
jecxz
gs
xor
pop
cwde
mov
xchg
imul
sbb
sbb
ret
mov
cmp
stc
popa
mov
jnp
pop
icebp
sub
sub
pushf
repz
push
and
(bad)
out
popf
(bad)
xchg
imul
sbb
pushf
out
xor
pop
cmp
in
adc
iret
pop
enter
add
jp
add
mov
int3
popa
sbb
dec
push
sub
fsubr
call
inc
and
jo
adc
das
imul
xor
mov
ins
movs
mov
out
pop
nop
gs
out
mov
mov
add
pop
ds
push
in
and
pusha
dec
pop
xchg
dec
jae
jp
neg
jne
mov
dec
xchg
push
mov
jge
mov
dec
sub
push
xor
sahf
ret
sbb
xor
rcl
not
sbb
test
and
push
jb
xor
pop
enter
pusha
ins
jo
int
sub
cmps
sbb
pop
sbb
das
and
dec
adc
test
xchg
out
or
adc
mov
aam
fwait
pop
sbb
xchg
nop
arpl
push
ret
xor
in
xchg
xchg
(bad)
pop
in
dec
and
bound
movs
arpl
loope
inc
idiv
inc
xchg
rcr
push
cs
xchg
out
jns
adc
rol
sub
call
xor
fdiv
les
jge
imul
or
mov
shl
movs
ja
addr16
sbb
ret
pusha
call
popa
clc
mov
dec
psubw
adc
mov
std
push
xchg
adc
enter
mov
dec
mov
xor
or
xchg
jecxz
and
pop
xor
sbb
add
add
inc
ins
sti
xchg
or
lods
pop
dec
inc
aaa
in
jbe
push
hlt
fst
sub
pusha
mov
add
add
push
xor
add
es
dec
dec
inc
or
nop
lods
inc
les
xchg
adc
movs
cdq
(bad)
jge
jmp
pop
test
stc
pop
sbb
jecxz
jnp
je
lods
sub
aas
movups
push
inc
std
test
or
add
or
or
cmp
adc
je
or
mov
gs
not
cmp
retf
add
and
nop
popa
xchg
xchg
xchg
xchg
sbb
nop
nop
nop
mov
sbb
adc
movs
inc
pop
jb
push
cli
inc
xlat
rcl
dec
test
mov
or
fidiv
test
and
sub
cmp
adc
mov
inc
mov
mov
and
fild
adc
test
mov
xor
jmp
scas
or
retf
jns
xchg
or
ins
or
xor
in
adc
je
jbe
or
adc
dec
gs
les
pop
pop
dec
fwait
adc
adc
jnp
sbb
sub
ins
cmp
js
xchg
dec
adc
arpl
mov
outs
scas
push
mov
fist
adc
mov
sub
and
jp
sar
imul
test
inc
add
sbb
bound
jbe
jb
or
ret
popf
ret
test
je
das
pop
sub
xchg
xchg
stos
bswap
mov
push
pop
inc
nop
adc
in
push
fisubr
xchg
loope
sub
add
mov
stc
add
cmp
xchg
enter
outs
seta
add
pushf
add
mov
(bad)
mov
pop
xchg
rcl
and
xchg
sbb
sar
mov
(bad)
xor
xchg
push
adc
and
and
and
xor
pop
sbb
mov
gs
push
pusha
dec
and
nop
imul
xor
cmp
pop
rcl
mov
popf
imul
mov
ret
retf
stos
sub
outs
adc
ja
ret
scas
pshufw
jnp
call
sub
pop
(bad)
imul
inc
and
rcr
das
retf
mov
push
das
adc
test
imul
jo
mov
or
mov
mov
movs
sub
adc
xor
mov
xor
repnz
or
dec
mov
sbb
ins
movs
aam
add
sbb
or
dec
addr16
stc
push
and
inc
pop
cdq
xor
loop
or
sbb
rol
repnz
inc
repnz
loopne
jne
movs
adc
pushf
sbb
cmp
aam
aaa
ret
cwde
mov
jae
dec
popf
cmps
mov
mov
cmc
mov
aaa
mov
inc
popa
pop
cld
or
mov
inc
jge
sub
sub
and
xor
sbb
sub
adc
jmp
retf
or
push
call
add
int3
and
pop
in
mov
jne
inc
(bad)
xchg
sbb
in
inc
or
adc
and
lods
hlt
inc
fbstp
mov
lock
adc
mov
sbb
sbb
enter
adc
movs
call
mov
dec
in
data16
into
jno
cmps
dec
xor
movs
adc
inc
mov
hlt
ins
repz
loop
add
dec
push
adc
rcl
and
fist
es
loopne
fld
ja
arpl
or
xor
hlt
hlt
lock
push
ret
shr
clc
jns
test
dec
cmp
arpl
mov
push
adc
cmp
imul
pusha
sbb
push
stc
mov
add
inc
in
mov
mov
icebp
push
dec
lock
das
adc
shl
push
inc
mov
or
jl
scas
cmovp
and
rcr
lahf
aaa
adc
adc
dec
dec
pop
xor
push
or
call
icebp
shl
and
inc
jg
add
call
xor
loopne
or
or
mov
fs
add
pop
xchg
xchg
sub
dec
mov
mov
cmp
or
fwait
leave
xor
sbb
mov
rcl
ret
fsub
mov
push
adc
int3
cmp
adc
in
adc
cdq
in
les
call
sub
rcr
mov
and
mov
and
mov
sbb
xchg
mov
pusha
mov
shl
xor
or
test
xchg
fcomp
shl
add
icebp
test
push
es
push
pushf
sbb
dec
cwde
cdq
in
movs
sbb
xchg
mov
imul
sbb
mov
and
and
pop
cmp
push
inc
stos
test
and
push
cmp
sub
pop
fld
pop
jae
aad
add
add
mov
sbb
adc
sbb
push
adc
(bad)
lea
dec
imul
xor
pop
cmp
push
scas
cmp
mov
or
fsub
sub
sbb
ins
adc
jo
aam
mov
cmp
push
pop
push
mov
fst
inc
add
lea
pop
xchg
pop
gs
adc
and
movs
xor
sbb
pop
lea
adc
das
cmp
mov
mov
push
inc
ror
ds
movs
sub
mov
or
jo
inc
sahf
ret
or
push
movs
dec
inc
mov
xchg
inc
addr16
lea
lods
dec
lods
pop
mov
push
ret
xor
push
mov
pop
or
push
or
sub
inc
sub
and
sub
or
and
xchg
hlt
rcr
adc
inc
outs
sub
ret
jae
or
out
adc
call
imul
add
dec
cmp
pusha
mov
push
ins
(bad)
lock
push
or
dec
mov
cmp
ss
add
addr16
sub
aam
dec
push
inc
icebp
ret
push
pop
mov
mov
pmullw
enter
add
pop
imul
outs
pop
pusha
iret
dec
out
adc
inc
mov
adc
mov
mov
push
mov
cmp
pusha
sub
in
dec
sbb
inc
or
into
pop
add
xchg
and
add
cmp
sub
mov
mov
jb
sbb
jp
add
or
ds
cld
mov
or
dec
adc
lahf
aas
iret
and
cmp
in
jo
xor
inc
push
or
ss
nop
dec
add
inc
shr
movs
outs
jg
add
inc
test
mov
adc
ins
test
lock
inc
not
add
or
and
cmp
xor
push
mov
(bad)
push
sub
jecxz
adc
cmc
loop
adc
inc
dec
aam
lea
xchg
or
call
pop
mov
clc
call
in
sub
out
out
aaa
enter
and
frstor
mov
inc
icebp
mov
repz
in
test
sbb
dec
pop
push
inc
fld
pop
sbb
mov
out
mov
fs
movs
test
les
add
add
enter
inc
and
ffree
test
stos
adc
jge
adc
in
dec
cmp
inc
jb
xor
push
xchg
xchg
mov
jne
xor
test
pop
sub
mov
enter
pop
mov
test
jo
fidivr
sub
mov
nop
aas
enter
pop
xor
push
lock
aaa
jns
ds
repnz
mov
xchg
hlt
add
lods
call
push
lods
mov
ds
fcomp
mov
xchg
xchg
ss
aam
sar
fwait
nop
xor
xor
enter
inc
jl
sub
dec
imul
mov
cs
cmp
popa
xlat
sub
adc
(bad)
cmp
sbb
sbb
pop
adc
rol
and
xchg
add
mov
mov
shr
es
and
ret
pop
aas
rcl
mov
or
add
pop
inc
clc
inc
cmp
imul
push
jo
add
mov
jo
js
pop
cmp
mov
dec
add
push
cmps
push
stos
dec
mov
mov
and
dec
jae
pop
push
fimul
dec
sub
call
in
movs
xchg
mov
nop
and
int
mov
popa
mov
push
(bad)
xchg
inc
push
fstp
xchg
push
fs
push
adc
add
inc
adc
mov
fsub
push
repz
enter
adc
cmp
add
lea
jle
bound
test
sub
pop
adc
jl
xchg
dec
push
dec
test
inc
cs
jp
push
mov
test
retf
push
xor
and
aad
push
add
enter
mov
or
adc
dec
sbb
cwde
(bad)
add
sbb
(bad)
or
pop
vphaddbw
loop
nop
outs
dec
or
stos
dec
sbb
addr16
pop
sar
add
js
sub
cmps
pop
dec
xchg
push
mov
inc
and
adc
xchg
inc
push
and
push
xor
mov
mov
mov
mov
mov
je
ret
cli
add
stos
or
xchg
fild
iret
mov
add
aas
and
push
(bad)
out
mov
aas
js
xchg
les
or
movs
push
fisubr
xchg
jge
sbb
xchg
inc
jl
sub
cmp
imul
cs
pop
or
add
mov
jg
loope
add
dec
dec
push
scas
pop
dec
jle
dec
add
dec
sub
and
mov
dec
dec
ror
mov
pop
nop
push
adc
adc
xchg
xor
lahf
cmps
jnp
loop
jo
inc
sub
dec
pop
cmp
pop
daa
mov
xchg
xor
iret
sbb
inc
(bad)
sbb
xor
aaa
sub
cmp
in
sbb
dec
sbb
dec
add
in
nop
inc
push
sub
dec
mov
adc
mov
cmp
adc
inc
ja
adc
mov
(bad)
mov
daa
cwde
arpl
fdiv
inc
cmp
rcl
sbb
nop
and
mov
dec
outs
xchg
arpl
test
hlt
sahf
neg
mov
dec
mov
or
out
adc
out
sahf
out
push
pop
outs
lahf
out
sahf
jns
(bad)
icebp
sti
add
xor
mov
les
out
add
aam
adc
adc
sbb
pop
mov
imul
dec
outs
mov
and
jnp
add
jbe
inc
call
nop
ror
push
cmps
push
inc
sbb
inc
cmps
scas
mov
ins
cmp
(bad)
ror
mov
add
push
mov
push
sahf
sbb
and
adc
adc
mov
adc
adc
jge
mov
test
mov
mov
std
and
push
pop
lods
data16
or
mov
cmp
lods
cwde
xor
sub
ret
clc
call
jg
pop
inc
imul
outs
xchg
jno
or
cs
inc
ret
loope
dec
sti
and
stos
js
inc
ins
dec
imul
mov
dec
mov
or
xor
movs
mov
inc
aad
and
and
in
cs
aaa
or
jg
and
cs
push
adc
adc
xchg
xchg
ins
pop
xchg
(bad)
and
push
push
adc
or
js
popf
adc
mov
dec
(bad)
cs
je
(bad)
je
add
ds
pop
int
mov
adc
hlt
inc
or
cdq
mov
inc
pop
popa
les
cmps
data16
or
xchg
clc
ret
sub
mov
outs
pop
adc
adc
cs
ret
sbb
mov
nop
add
ret
push
jne
and
in
jl
and
sbb
mov
xor
sbb
jg
pop
mov
adc
loopne
pop
les
int3
int3
inc
push
sbb
enter
xchg
enter
test
and
les
push
pushf
retw
push
ins
mov
inc
(bad)
les
cmp
fdiv
mov
(bad)
es
mov
pop
enter
mov
jnp
cmp
xor
inc
int3
sub
repz
iret
repz
std
ror
fild
out
call
jl
out
and
pop
iret
repz
or
imul
jg
cmp
repz
popf
cmps
mov
repz
repz
jecxz
aaa
push
pop
les
lds
cmps
xchg
aaa
rol
js
adc
mov
pop
sbb
xor
dec
mov
mov
jno
dec
inc
les
shl
add
fcom
mov
pop
xor
xchg
nop
dec
jb
mov
sbb
jne
add
pop
jne
jg
dec
inc
push
arpl
ins
adc
iret
repz
mov
add
ret
sbb
dec
pusha
pop
mov
and
adc
ficomp
dec
pop
or
jbe
or
test
add
mov
test
or
outs
in
sub
adc
cmp
mov
js
cs
cmp
push
adc
jmp
cdq
adc
and
xchg
fwait
jno
pop
outs
aam
fadd
mov
sti
sub
mov
add
dec
sub
dec
jle
(bad)
nop
es
sub
add
mov
xlat
add
pop
inc
outs
dec
data16
sub
bound
(bad)
enter
cmp
in
dec
xor
les
jo
pop
les
fadd
lods
in
push
jb
jmp
outs
inc
ror
sub
rcr
mov
pop
mov
repnz
xchg
cmps
rol
bound
xchg
inc
mov
sbb
mov
push
movs
sub
test
(bad)
inc
nop
mov
arpl
and
sbb
add
imul
dec
jecxz
popf
or
es
or
dec
jb
in
pop
mov
ja
pop
nop
in
test
cmp
dec
(bad)
sbb
mov
xchg
in
mov
jmp
mov
sub
sub
mov
and
test
sbb
jne
mov
cs
in
je
add
mov
loopne
and
or
add
movs
or
pop
inc
or
jb
outs
shr
pop
add
int
sub
jno
pushf
fild
gs
lods
dec
cmps
push
clc
clc
cmp
dec
daa
enter
mov
bound
push
pop
in
int3
loop
cmovno
adc
adc
outs
mov
mov
movs
cmps
es
test
or
and
sub
out
dec
adc
dec
mov
add
sub
sbb
inc
or
push
sub
and
pop
int3
aas
test
std
addr16
test
mov
(bad)
push
cmp
mov
sbb
daa
dec
dec
pop
dec
adc
inc
test
or
retf
or
lds
adc
data16
std
push
dec
add
adc
add
cmp
or
and
add
push
xor
je
daa
imul
(bad)
cmp
mov
rol
xor
(bad)
mov
mov
xor
jmp
sqrtps
push
jp
scas
or
ins
dec
sbb
fninit
xor
mov
daa
push
cmp
jnp
mov
push
push
dec
sbb
add
push
ss
and
mov
jl
movs
push
popa
or
dec
sub
pop
lea
jmp
xor
dec
jb
add
xor
or
and
pop
xchg
shr
outs
or
or
cs
xor
pop
ror
loope
sub
mov
or
lods
jge
in
mov
mov
call
sbb
xlat
add
xchg
cs
xor
adc
mov
fst
test
(bad)
clc
push
shl
push
lods
in
mov
jmp
inc
cld
inc
mov
iret
hlt
push
les
scas
or
sbb
test
pop
ret
fs
je
adc
movs
pop
adc
add
idiv
inc
xor
lock
mov
lea
lea
movs
add
loopne
adc
or
cmps
arpl
sub
daa
aaa
push
or
movs
shl
outs
pop
pop
dec
mov
rol
retf
ss
stos
lods
lds
fmul
jmp
fisub
mov
pusha
mov
mov
xchg
movs
mov
mov
push
les
mov
(bad)
sbb
jl
dec
inc
or
fsubr
xchg
ret
push
repnz
popf
push
sbb
cld
or
hlt
cmp
stos
enter
test
and
add
popf
cld
sub
mov
pop
xchg
movs
push
dec
mov
and
xor
sbb
pop
and
push
add
and
or
pusha
or
inc
sub
xor
adc
rol
imul
dec
jmp
imul
adc
sti
out
mov
pop
(bad)
xor
mov
hlt
adc
js
retf
xchg
mov
ret
clc
jo
int
call
push
dec
test
je
test
lods
imul
(bad)
div
icebp
push
push
push
nop
add
push
mov
fbstp
ins
cmp
xchg
neg
pushf
push
push
enter
or
jmp
mov
push
and
inc
mov
sub
test
push
add
and
or
push
mov
or
sti
add
add
adc
inc
cwde
dec
adc
adc
fiadd
and
jbe
add
(bad)
hlt
fs
or
sub
push
dec
les
je
cmp
rcl
scas
mov
xor
mov
adc
into
ret
int3
mov
sbb
test
or
(bad)
out
jo
dec
gs
mov
dec
psubusb
sub
rol
sbb
jno
add
inc
adc
push
adc
sub
and
push
xchg
dec
adc
mov
add
inc
repz
or
or
stos
inc
push
daa
nop
and
cmp
inc
stos
bound
xchg
sbb
push
push
pop
outs
sub
add
xchg
xchg
into
mov
nop
xchg
xchg
xchg
xchg
pop
add
add
add
push
xchg
xchg
xchg
xchg
pop
or
or
or
push
leave
leave
enter
cld
icebp
repnz
leave
leave
leave
repz
cmc
test
leave
leave
idiv
stc
cli
leave
leave
leave
leave
sti
cld
std
dec
leave
leave
leave
jmp
loope
add
leave
sbb
leave
outs
sub
icebp
ja
xchg
outs
sub
unpckhps
adc
or
dec
ret
sbb
xor
(bad)
mov
rcl
mov
(bad)
cwde
ds
xchg
adc
pusha
add
ins
nop
and
arpl
cmp
dec
pop
pmulhuw
pop
sbb
push
adc
out
out
inc
xor
popa
jo
adc
jns
or
dec
sbb
sub
jl
xchg
xchg
imul
xchg
or
and
in
ja
lods
loope
add
pusha
jno
push
xor
xchg
push
mov
xor
xor
sbb
adc
aas
or
inc
enter
push
sbb
popf
add
dec
sbb
xor
(bad)
adc
jnp
pop
sbb
repz
push
and
xor
stc
fbstp
ret
hlt
sub
pop
ins
neg
adc
je
pop
sbb
xchg
bnd
push
dec
rcr
lahf
xlat
xor
cbw
outs
or
pop
popa
divps
in
fwait
adc
retf
lods
leave
pushf
add
adc
dec
loopne
adc
push
cmp
test
sahf
add
xchg
daa
call
xchg
(bad)
xchg
daa
xchg
fcomp
xchg
dec
xchg
jl
fcomp
inc
xchg
xchg
xchg
adc
adc
cmp
xchg
and
xchg
enter
ja
pop
in
mov
cld
dec
mov
setnp
cs
sbb
dec
pushf
test
mov
sbb
push
push
daa
push
xor
adc
cmps
cdq
into
rcr
fs
ja
out
sahf
or
mov
sahf
neg
jle
push
pop
and
out
sub
jnp
jns
inc
push
dec
pop
arpl
add
mov
add
sub
sub
jg
fwait
xchg
cs
(bad)
imul
or
test
mov
pop
stos
ss
repz
cld
xor
sub
fstp
jne
clc
sbb
push
sar
into
add
das
and
sbb
pusha
adc
jle
movs
jmp
jmp
inc
in
sbb
xor
cmp
lahf
sub
pushf
pusha
test
xor
out
xor
pop
xor
jbe
loop
add
inc
data16
call
mov
mov
inc
repnz
jbe
fisttp
and
sbb
mov
inc
mov
sbb
mov
jo
movs
mov
repz
addr16
jno
pop
and
xchg
repz
aas
dec
push
ja
cmp
das
fs
ja
js
xor
scas
stos
and
pop
add
js
dec
push
push
ret
nop
sub
fsub
ret
adc
xor
mov
push
movs
fs
les
xor
push
xor
fcomp
fcomp
or
enter
fdiv
sbb
fwait
mov
adc
inc
cmp
inc
fmul
enter
fdiv
enter
fcomp
xchg
mov
or
fadd
int3
add
cmp
out
push
push
mov
cmp
repz
mov
repz
loope
cmc
dec
adc
cmp
repz
sbb
fdivp
cmp
dec
pop
arpl
pop
dec
repz
repz
push
pop
imul
xchg
in
outs
sub
mov
jp
push
add
sub
lods
jne
mov
(bad)
adc
retf
mov
cmps
fsubr
stos
stos
jecxz
sar
and
adc
mov
ins
push
retf
sar
out
sahf
fucom
icebp
sti
add
sahf
out
sbb
sub
jns
dec
push
pop
imul
xchg
out
out
mov
mov
nop
pop
xor
(bad)
jnp
jl
push
(bad)
xlat
push
push
add
xlat
dec
test
mov
sbb
stos
je
in
nop
sbb
loopne
cld
lods
sub
xchg
mov
mov
mov
cmp
mov
iret
and
push
adc
fdivr
mov
push
jle
cmp
repz
gs
jge
or
mov
(bad)
rcr
in
stc
repz
cmp
pop
and
cmps
stc
cmp
xor
xlat
mov
jmp
dec
jbe
out
sahf
out
sbb
and
jge
dec
pop
arpl
out
adc
jns
jle
jg
push
push
adc
add
xchg
inc
pop
ds
cdq
or
out
mov
adc
push
aam
aam
inc
push
sbb
aam
inc
push
sbb
aam
sbb
aam
aam
fs
inc
aam
mov
test
mov
adc
or
adc
nop
inc
aam
aam
nop
inc
push
aam
aam
mov
gs
ds
add
sbb
out
jg
jns
imul
pop
and
xor
jns
out
addr16
test
cdq
mov
sahf
neg
push
mov
(bad)
jae
sahf
out
frstpm(287
xchg
jg
out
xor
jbe
push
in
rol
jle
add
xor
inc
jp
inc
sbb
adc
ds
test
adc
sahf
out
addr16
test
cdq
mov
sahf
out
retf
aad
jmp
out
pop
sahf
adc
sbb
out
imul
and
das
fs
xor
dec
sbb
cmp
push
add
add
add
xchg
push
ja
ja
and
and
rol
rcl
rcr
enter
shl
and
xchg
shl
xchg
xchg
ja
push
cdq
add
ja
sar
in
inc
rcl
shl
nop
inc
push
rcl
rol
cmp
rcl
sar
mov
test
mov
sahf
cmps
mov
leave
rcr
jns
jns
out
sti
add
out
sahf
out
sub
out
sahf
push
pop
imul
jnp
jbe
push
outs
jns
int3
icebp
jns
lea
jmp
scas
jbe
ja
xchg
push
add
xor
leave
push
repnz
mov
push
ss
repnz
xlat
mov
mov
cmp
and
daa
in
cwde
dec
mov
push
cld
fld
pop
push
icebp
push
stc
xchg
or
sahf
pop
and
xor
out
push
pop
addr16
out
sahf
out
(bad)
cdq
mov
sahf
mov
mov
aad
(bad)
jae
sahf
out
rcr
in
xchg
and
xchg
mov
jl
jns
sbb
dec
xor
mov
es
mov
arpl
fcmovnb
mov
lods
and
repnz
mov
aaa
mov
inc
adc
adc
and
repz
inc
dec
push
pop
imul
xchg
iret
repz
mov
repz
loope
cmc
dec
mov
dec
enter
mov
in
fimul
mov
mov
push
ret
ds
sub
or
das
sti
mov
arpl
lock
ds
icebp
add
mov
push
aaa
aas
mov
out
dec
push
pop
addr16
jns
out
test
jns
lods
mov
retf
aad
neg
std
pop
cmps
adc
xor
neg
push
xor
jno
pop
inc
mov
cmp
add
daa
mov
inc
cmps
or
stos
lock
aaa
jmp
outs
cmc
sbb
lea
out
sahf
out
push
pop
addr16
out
sahf
jnp
(bad)
cdq
mov
jns
ror
(bad)
jnp
out
repz
pop
scas
adc
iret
in
cmp
les
iret
add
jo
adc
mov
enter
lods
daa
mov
repz
daa
nop
xchg
push
cmp
jns
out
(bad)
dec
push
popa
imul
mov
out
mov
(bad)
fidivr
out
in
test
(bad)
out
jns
and
(bad)
das
fimul
enter
sub
inc
in
and
ds
mov
adc
xchg
sbb
inc
xchg
pop
out
test
int3
int3
sub
repz
inc
xchg
dec
pop
arpl
cmp
repz
mov
iret
repz
(bad)
rcr
mov
out
stc
add
inc
cmps
clc
and
inc
in
call
pushf
cwde
add
out
push
cmp
addr16
(bad)
das
das
loopne
mov
cdq
mov
add
xor
or
mov
repz
push
test
inc
push
cmp
ss
mov
xchg
fisubr
ds
ret
add
push
into
xor
repz
push
js
dec
cmps
or
rol
aam
adc
or
cmp
and
in
cmp
jl
aam
loopne
and
dec
sbb
fmul
and
iret
inc
enter
into
fsub
mov
inc
nop
ret
push
cmp
sbb
cmp
jo
push
sbb
nop
rol
(bad)
aam
mov
js
int3
push
in
fdiv
dec
in
daa
lods
adc
adc
(bad)
popa
lahf
and
cmp
fadd
nop
daa
loopne
retf
enter
and
lds
and
mov
hlt
mov
les
enter
in
fsub
pop
ret
jl
cmp
and
jb
xor
or
int3
int3
int3
int3
outs
xor
and
int3
out
dec
mov
xchg
xchg
xor
xchg
push
fistp
xor
adc
int3
int3
int3
inc
push
sbb
int3
sbb
int3
int3
int3
int3
imul
int3
or
cmp
mov
push
xchg
cmp
iret
repz
outs
jns
xchg
movntq
jns
mov
mov
leave
rcr
out
sti
out
fidivr
push
jge
xchg
sub
aaa
inc
dec
push
pop
imul
xchg
dec
jns
out
pop
arpl
and
xchg
lahf
test
sahf
mov
out
out
out
jns
add
jns
out
xchg
(bad)
fwait
push
movs
scas
mov
out
xlat
loope
cmc
jns
neg
push
sbb
and
dec
repnz
in
nop
xchg
icebp
aaa
jo
pushf
cmp
jb
movs
xor
cmp
xchg
imul
push
sbb
or
aas
push
nop
pushf
cdq
(bad)
mov
pop
movs
jno
stc
fsub
xchg
in
push
shr
lods
and
mov
and
pop
inc
ret
mov
fadd
pop
test
outs
ins
mov
adc
ja
stc
in
call
prefetch
mov
js
sub
add
inc
test
inc
fwait
movs
je
sbb
dec
push
jle
aam
outs
adc
cmps
mov
push
stc
mov
mov
mov
lahf
lock
inc
sub
movs
test
jne
jns
ss
adc
push
adc
mov
enterw
ins
xor
test
retf
sub
and
pushf
inc
xor
es
push
mov
mov
mov
add
dec
fcomp
in
sahf
dec
fadd
sub
jp
lods
push
mov
rol
mov
imul
inc
(bad)
xlat
cmp
aas
sbb
retf
jle
and
pop
adc
ret
nop
fimul
pusha
sbb
dec
push
adc
or
loope
or
jne
sub
cmps
dec
push
mov
sar
push
pop
enter
mov
sbb
pusha
lock
call
dec
jns
mov
sub
popf
(bad)
xchg
ret
xchg
ins
cmp
mov
xchg
inc
mov
mov
arpl
je
mov
cdq
inc
add
push
push
dec
mov
adc
cwde
ret
ins
arpl
adc
test
sub
add
call
loope
push
and
push
imul
adc
retf
movs
sbb
js
mov
jo
sub
dec
adc
cmp
mov
pop
les
repz
std
push
xor
mov
sahf
loope
jo
sub
not
pushf
test
mov
or
mov
add
sub
iret
pextrw
cmps
mov
rcr
rol
sbb
or
dec
sub
xchg
in
jo
cmp
xchg
dec
push
mov
dec
cmp
dec
fidivr
adc
lahf
mov
repnz
xor
adc
mov
shl
mov
adc
fdivr
xchg
cmp
jmp
pop
lods
cld
nop
ss
or
or
retf
adc
ss
adc
jp
hlt
es
pop
sbb
xchg
xor
inc
fldenv
or
adc
or
movs
es
cld
add
jnp
mov
ja
in
repnz
mov
or
add
cwde
mov
or
push
mov
inc
mov
pop
sub
ds
cmp
mov
and
push
push
push
xchg
add
mov
adc
xor
out
xor
cld
cmp
nop
add
imul
mov
adc
leave
inc
pop
fbld
and
or
xchg
inc
or
repnz
(bad)
mov
or
nop
sbb
movs
inc
xchg
mov
shl
mov
sub
jg
ins
sub
or
mov
in
pop
aam
sbb
jnp
xchg
in
cmps
icebp
shl
push
pop
lds
scas
mov
fs
dec
or
mov
xor
jno
popf
cmps
add
test
cmp
retf
pop
xor
push
pop
sbb
sbb
adc
sbb
or
sub
cmps
jo
xor
pop
mov
push
xchg
cmp
pop
and
sti
jmpw
imul
test
dec
cwde
sbb
mov
add
test
in
mov
daa
dec
test
jmp
mov
inc
bound
adc
mov
enter
test
mov
call
outs
dec
popa
and
xchg
pop
fadd
jecxz
test
scas
clc
or
not
cmc
pop
rol
adc
je
inc
es
stos
adc
or
hlt
dec
test
xchg
rcr
adc
pop
mov
jmp
repnz
or
jns
movs
push
xor
jmp
push
push
add
lea
mov
repnz
dec
stos
push
pop
stos
adc
ret
out
cmps
mov
jne
aam
iret
or
or
push
xlat
icebp
stos
pop
or
xchg
je
jno
adc
sub
adc
repnz
dec
nop
mov
dec
aad
aad
mov
rcl
sbb
in
add
add
inc
outs
test
lea
in
pushf
jge
inc
cmp
sbb
xchg
scas
in
hlt
fs
push
repz
dec
or
bnd
inc
push
xchg
add
dec
call
inc
cmp
add
or
inc
xchg
push
sbb
and
dec
pop
popa
push
cmc
pop
lds
sbb
lahf
lahf
push
mov
inc
push
sbb
(bad)
mov
mov
sub
nop
pop
sbb
sahf
mov
popf
mov
out
mov
xor
loopne
aam
adc
and
leave
and
inc
push
add
xor
nop
sub
in
inc
or
lfs
xor
or
sbb
(bad)
cmp
mov
outs
cmps
mov
mov
or
push
sbb
movs
xor
xchg
push
mov
xchg
in
mov
push
push
and
les
mov
mov
lea
cmps
lods
enter
cmps
aad
arpl
leave
ja
retf
clc
or
inc
ret
call
dec
scas
xchg
mov
mov
mov
cmp
nop
add
inc
jb
mov
ss
adc
sbb
clc
imul
out
shl
cdq
sub
ss
cmp
xchg
mov
adc
pushf
mov
inc
add
(bad)
cmp
outs
xor
shr
adc
and
retf
clc
fnsave
pop
dec
mov
inc
lods
pop
mov
imul
add
test
xchg
stos
mov
in
push
addr16
mov
mov
adc
sbb
das
add
mov
xchg
cmp
inc
pop
enter
adc
xchg
ss
imul
push
pop
scas
adc
pop
out
push
and
mov
add
xchg
mov
imul
les
sub
cwde
movs
or
lods
test
in
pop
or
adc
and
pop
xchg
lea
jae
(bad)
hlt
adc
es
mov
mul
mov
or
jno
push
push
xchg
fs
(bad)
sbb
jne
addr16
push
sbb
or
xchg
lock
popf
xchg
adc
test
or
inc
mov
mov
or
jg
clc
add
cwde
clc
mov
sbb
aam
retf
nop/reserved
mov
test
add
adc
push
and
dec
add
popa
addr16
ins
or
jmp
in
adc
mov
add
pusha
test
xor
add
adc
push
daa
call
push
leave
mov
add
adc
push
mov
mov
rcl
shl
push
adc
sahf
inc
shr
cmc
sar
lahf
and
xor
shl
add
adc
les
aad
inc
rdtsc
and
retf
int3
pop
add
sbb
or
das
and
and
add
jmp
mov
adc
sbb
dec
sbb
ret
in
sub
sbb
out
and
xchg
pop
std
ret
and
test
ret
sbb
movs
shl
jmp
sbb
mov
sub
xchg
pop
mov
movs
mov
add
xchg
(bad)
xchg
jne
jb
mov
loopne
and
or
adc
cmp
loopne
imul
sub
xor
icebp
xchg
test
add
cmc
test
mov
pusha
or
or
xor
imul
int3
mov
inc
scas
aaa
add
nop
push
int
lods
call
clc
lds
call
jns
mov
push
mov
or
leave
es
arpl
push
jb
scas
retf
cmp
(bad)
and
adc
mov
stc
retf
xchg
mov
cld
xor
sbb
adc
dec
mov
cmp
mov
adc
ins
sub
sub
sbb
xchg
into
(bad)
mov
sbb
dec
in
inc
aaa
jb
sub
or
add
sub
enter
jns
enter
icebp
cmps
dec
bound
mov
fs
fstp
or
xlat
movs
xchg
or
test
mov
or
neg
retf
sub
jb
punpcklbw
add
leave
test
retf
add
lea
xor
push
bound
int3
sbb
mov
jb
addr16
call
addr16
int3
mov
mov
addr16
jns
xor
add
fisttp
sbb
xchg
mov
aas
(bad)
leave
push
mov
or
pop
out
mov
sbb
adc
push
xor
js
(bad)
loop
mov
les
into
movs
retf
cmps
xchg
xchg
enter
cli
mov
sub
(bad)
sbb
xor
rol
icebp
sbb
cmp
aaa
and
inc
lods
out
iret
in
jb
mov
das
mov
push
repnz
mov
dec
or
mov
adc
xor
xchg
push
xor
cwde
pop
xor
mov
test
das
pop
shl
add
xor
pop
inc
addr16
test
or
push
enter
add
cdq
rcr
in
or
aam
mov
mov
aam
or
adc
inc
shl
mov
and
push
aad
cmps
dec
sbb
in
leave
mov
jns
aam
add
add
fcom
cmp
sbb
xor
or
mov
inc
test
xchg
sbb
aas
rcr
nop
sub
adc
adc
add
adc
(bad)
loopne
sub
cmp
out
or
and
(bad)
loop
dec
pushf
mov
push
push
test
fcom
js
xlat
xchg
(bad)
mov
add
xlat
(bad)
adc
out
fs
or
mov
jb
leave
and
lea
sbb
xlat
enter
sbb
fmul
cmp
add
inc
jns
inc
and
mov
in
adc
iret
data16
(bad)
cmp
and
ficomp
fcmovu
and
sbb
int
xchg
sbb
or
and
add
add
dec
(bad)
in
fisttp
xor
sub
inc
mov
ins
fld
pop
jmp
cld
lock
xchg
or
imul
ficom
in
fadd
lea
add
mov
push
adc
int3
push
jecxz
mov
test
sub
adc
rcr
clc
cmp
and
or
mov
mov
fcom
xchg
movs
lods
cdq
loop
outs
push
lock
in
lods
fsubr
sbb
out
fst
pop
and
xchg
or
push
jb
jg
frstor
add
pop
faddp
add
dec
sbb
xor
test
mov
cmp
adc
dec
jecxz
(bad)
dec
mov
and
add
es
repnz
sub
pushf
stos
and
push
inc
std
sbb
ins
(bad)
loop
inc
adc
cmp
(bad)
nop
aam
or
or
add
(bad)
loop
or
leave
mov
push
dec
shl
les
in
jnp
loope
nop
dec
mov
add
pop
unpcklps
mov
in
loopne
mov
mov
xchg
aad
fs
inc
xchg
repnz
jp
das
inc
cdq
mov
add
dec
cld
pop
inc
add
adc
add
pop
fiadd
ins
dec
ins
fs
imul
es
xchg
mov
push
add
inc
or
xor
sbb
lods
das
adc
fbstp
fnsave
scas
sbb
xchg
aam
aam
cmp
dec
test
fwait
mov
mov
ja
in
nop
pop
sbb
sub
dec
and
imul
and
sahf
in
mov
push
in
lds
mov
fisttp
in
test
lock
imul
sub
push
pop
mov
or
inc
out
add
xchg
sbb
lea
int
add
mov
add
sub
and
jnp
and
cs
push
or
out
sub
inc
jg
and
add
and
sub
mov
aad
mov
xor
pop
xor
lods
dec
fild
cmp
push
cmp
imul
xor
aam
jo
xlat
imul
add
push
cdq
push
cmp
pop
jno
dec
mov
mov
fld
add
and
push
add
fxam
daa
add
sub
or
fidivr
jmp
daa
sub
pop
inc
(bad)
dec
sub
inc
fcom
es
aaa
inc
push
call
adc
test
sbb
cmp
or
retf
mov
dec
imul
loope
sub
test
pop
or
pop
sub
data16
dec
repnz
jecxz
ror
or
aaa
xor
pop
in
dec
in
add
enter
out
popf
(bad)
rol
pop
es
das
iret
lock
push
add
stos
xor
pusha
adc
push
shl
xlat
mov
gs
cmp
pop
or
in
inc
mov
add
out
cdq
pop
pusha
adc
pop
and
or
loopne
add
xchg
mov
call
scas
or
push
lods
pop
jmp
ins
nop
lahf
pop
and
fwait
lods
lea
xchg
in
nop
sbb
inc
adc
in
ins
jge
sub
test
nop
push
add
daa
mov
xchg
rcl
sbb
push
or
aam
dec
cmc
daa
fwait
(bad)
test
mov
add
or
mov
pop
gs
movs
aam
call
cmp
adc
lahf
jl
xchg
or
icebp
imul
xor
rcl
aam
fisttp
mov
sbb
xor
hlt
clc
dec
add
mov
xor
push
inc
pop
xchg
inc
mov
std
inc
rcr
(bad)
mov
xchg
pusha
outs
pop
sahf
push
test
mov
lea
xchg
and
lds
gs
mov
xor
add
daa
test
loopne
and
cmp
mov
or
das
ret
test
in
xor
in
je
inc
inc
call
dec
sbb
jecxz
pushf
pusha
xor
xchg
test
xchg
adc
stc
nop
data16
inc
hlt
mov
or
mov
inc
shl
cmp
xlat
lods
ret
inc
in
mov
sub
or
sbb
adc
or
jb
pop
or
stos
test
lea
clc
fidiv
in
pop
jmp
add
mov
repnz
push
jge
mov
ds
pop
or
sub
fadd
shl
xchg
or
xor
or
jmp
sbb
aaa
fdiv
xor
adc
sbb
jge
or
(bad)
nop
mov
mul
inc
and
mov
xlat
or
test
inc
jle
outs
add
in
fs
dec
push
ret
in
pushf
push
scas
or
in
jmp
adc
dec
dec
out
add
mov
outs
fwait
repz
popa
dec
fisubr
sub
sbb
stos
pop
add
add
jl
stos
sub
cmp
dec
jo
mov
or
mov
pop
loopne
dec
xchg
je
mov
pop
and
loop
adc
mov
xor
test
and
mov
mov
clc
inc
imul
push
cmps
push
dec
jecxz
jnp
xchg
and
enter
inc
or
mov
inc
mov
add
(bad)
add
xor
test
imul
xchg
sbb
mov
xchg
mov
shl
in
adc
fidiv
xlat
xchg
jp
fdiv
xchg
scas
lds
je
nop
addr16
mov
sbb
add
xchg
dec
cmc
push
stos
add
pop
add
add
push
das
mov
inc
es
add
xchg
add
and
sub
jge
jns
mov
pop
push
enter
xchg
jmp
add
sub
aaa
int3
push
es
mov
(bad)
pop
sub
push
pop
cmp
(bad)
(bad)
fsub
pop
cmp
jge
xchg
rcr
lods
pop
mov
dec
shl
test
or
out
mov
or
adc
repz
inc
mov
dec
pop
inc
or
scas
dec
loopne
push
hlt
or
dec
xor
adc
push
ins
and
mov
inc
mov
mov
and
push
mov
push
jae
icebp
inc
sub
fdiv
or
jns
(bad)
outs
cmp
outs
inc
add
imul
clc
jae
jo
dec
mov
sar
push
mov
or
inc
pop
adc
popa
aaa
pop
mov
push
or
in
add
push
add
mov
sub
fisttp
adc
push
pop
aas
push
sbb
ror
mov
ja
jo
inc
outs
daa
push
pop
je
add
push
pop
or
inc
aas
add
fadd
shl
sbb
lock
inc
stc
aaa
(bad)
mov
daa
dec
xchg
dec
adc
mov
(bad)
pop
ret
dec
xchg
inc
push
or
faddp
addr16
push
fst
dec
popa
cs
popa
ret
out
mov
ins
xor
dec
cli
int
xchg
popa
jge
fucomp
xchg
sbb
jb
adc
jne
aaa
or
das
push
fptan
outs
cmps
push
pop
fbstp
ins
mov
pop
dec
pop
adc
mov
das
cmps
dec
lahf
ss
or
das
ss
xlat
inc
inc
cs
sbb
ja
nop
or
ja
xchg
cmps
inc
fcmovb
ja
xor
jae
js
std
ss
xchg
arpl
mov
ins
jnp
das
sbb
lds
cs
neg
into
neg
ror
push
dec
adc
and
mov
ret
mov
pop
cli
fsubrp
push
inc
push
aas
lahf
je
imul
pusha
jns
fistp
retf
push
inc
xchg
(bad)
jo
out
sbb
pop
inc
das
pop
sar
daa
dec
sbb
out
sub
in
push
daa
push
daa
into
ins
mov
mov
push
inc
daa
add
add
maxps
pusha
popa
xor
inc
into
jnp
bnd
push
and
push
or
fisub
(bad)
xor
push
push
push
or
lods
pop
and
outs
rcr
mov
push
out
sub
pop
faddp
push
mov
in
or
pop
dec
retf
mov
mov
bound
outs
xchg
pop
in
fimul
aas
mov
sbb
das
mov
cmp
pop
cmc
jmp
push
shl
mov
jnp
push
mov
aas
daa
bound
aad
das
inc
lahf
mov
bound
push
jae
xor
ficom
data16
push
loope
push
imul
xlat
lods
cvtdq2ps
sti
inc
jno
mov
adc
aas
jns
jbe
pop
aad
mov
push
cs
xchg
mov
mov
jne
push
push
dec
xchg
(bad)
aaa
bnd
out
ss
cmp
repnz
dec
mov
(bad)
or
adc
adc
inc
(bad)
mov
dec
mov
push
mov
cmp
repz
cmp
js
pop
jo
ins
sahf
out
cmp
push
out
out
pusha
enter
pop
sahf
out
sahf
xchg
push
jo
push
dec
stc
cmp
jns
dec
jle
inc
hlt
cld
iret
repz
inc
push
cmp
cmp
xor
xor
push
ds
repz
lahf
push
sbb
sbb
sti
jns
out
adc
adc
or
out
out
or
cmp
repz
cld
(bad)
fs
push
repz
repz
sub
adc
out
ds
add
lock
in
sahf
out
sahf
loopne
fsub
jns
jl
ins
int3
out
sahf
out
enter
lahf
out
sahf
rcr
add
repz
fdiv
iret
repz
mov
jl
and
retf
sub
xor
or
inc
mov
sbb
adc
or
sbb
push
dec
into
ficomp
adc
femms
sbb
punpcklbw
fisttp
jg
fs
jbe
lahf
adc
pop
dec
add
sbb
loope
repz
push
cmc
sub
cmp
repz
dec
push
pop
popa
repz
repz
cmp
xchg
cdq
mov
iret
repz
leave
rcr
ret
(bad)
je
add
push
test
mov
pop
add
sub
mov
call
add
inc
add
mov
and
and
add
push
adc
push
push
icebp
(bad)
xor
push
push
push
push
shr
xchg
sbb
retf
jmp
pop
xlat
sbb
xor
int
mov
mov
push
add
lahf
ret
xchg
xor
test
and
aas
or
sbb
add
sbb
xchg
cmp
in
fild
mov
sbb
sbb
sbb
adc
and
enter
xchg
mov
js
dec
inc
out
les
mov
hlt
pop
jle
popa
push
inc
cmp
mul
mov
sub
sub
mov
jb
sbb
aam
jmp
or
mov
ins
test
pushf
imul
jbe
jb
inc
fmul
sub
fucomi
leave
in
cld
dec
inc
dec
les
xchg
xchg
lods
dec
inc
cmp
inc
lock
in
in
sbb
jo
jb
enter
pop
sub
sub
cmp
cmp
enter
and
das
cdq
cmp
and
(bad)
and
cmp
mov
ds
dec
int3
bound
ret
dec
adc
in
dec
repz
out
fwait
add
stos
mov
cmp
repz
fdivp
cmp
jecxz
repz
add
repz
repz
adc
and
xor
repz
cmp
push
pop
arpl
repz
jae
cmp
iret
repz
xchg
push
mov
iret
repz
retf
shl
add
out
fidivr
out
or
sahf
out
sahf
ss
dec
push
pop
jns
out
data16
jbe
xchg
call
mov
nop
sub
xchg
mov
xchg
mov
xchg
push
mov
(bad)
scas
shl
jl
repnz
out
or
push
add
push
fadd
dec
cs
add
sub
push
clc
inc
in
pop
and
nop
pop
rcl
int
cs
cmp
add
pminsw
dec
ins
mov
push
pop
inc
mov
sub
jle
or
scas
call
int3
adc
sbb
add
push
out
fmul
add
add
arpl
add
pushf
cmp
add
mov
pusha
fs
gs
sub
cmp
sbb
cmps
cld
cmp
xor
jb
ret
adc
imul
nop
inc
or
sbb
xor
nop
inc
lods
lock
ret
push
ins
push
or
pop
pop
dec
xor
sbb
add
or
nop
arpl
push
adc
dec
nop
inc
mov
(bad)
push
xor
mov
arpl
(bad)
in
fcomp
and
dec
out
data16
or
shl
cmp
pop
xchg
pop
dec
or
addr16
dec
std
or
adc
push
mov
clc
mov
dec
pop
pop
or
(bad)
or
mov
sbb
sbb
mov
jle
adc
call
nop
push
lahf
jns
out
push
test
repz
out
in
stc
add
iret
repz
or
inc
cmp
repz
pop
bound
cmp
repz
cmp
mov
(bad)
rcr
in
cmps
repz
clc
pop
push
or
jns
out
and
xor
mov
pop
imul
mov
inc
mov
ret
jg
dec
nop
imul
ja
mov
ss
cmc
or
jnp
push
outs
or
xor
pop
push
cld
push
adc
fidiv
push
rcr
cmp
push
push
(bad)
xor
mov
pop
push
or
sti
push
xchg
sub
pop
push
mov
popa
push
adc
dec
xor
jae
or
movs
add
out
jmp
sbb
add
mov
cmp
aam
and
pusha
or
jbe
pop
push
jno
movs
outs
push
test
repz
mov
push
sbb
dec
loope
pop
xchg
pop
and
mov
or
test
jne
xor
push
add
pop
dec
or
push
or
mov
in
inc
out
pop
jmp
xchg
dec
cmp
add
add
mov
(bad)
hlt
jnp
jne
push
cmp
sbb
int3
mov
add
iret
repnz
inc
push
jl
sbb
test
dec
sahf
ins
mov
or
imul
inc
mov
push
mov
push
or
mov
or
push
in
dec
rol
inc
adc
nop
cwde
or
or
cli
sahf
or
xchg
dec
or
scas
aaa
and
inc
xchg
pop
push
pop
fld
fisubr
test
ror
sub
pop
mov
imul
inc
nop
adc
xchg
lock
xlat
lods
sbb
sbb
div
scas
pop
popa
dec
adc
push
mov
das
or
push
mov
out
idiv
pop
cmp
push
inc
adc
cdq
mov
fist
das
dec
and
lea
test
imul
jmp
js
in
bound
cli
add
or
in
dec
and
push
lods
pop
nop
stos
movs
dec
dec
and
mov
out
jo
shr
sub
jbe
adc
xor
add
jle
push
adc
mov
sub
inc
add
lock
add
and
and
cmp
mov
aaa
inc
add
movs
adc
adc
sbb
cmp
inc
jecxz
imul
(bad)
fist
dec
dec
test
add
arpl
pop
and
and
xchg
dec
push
add
pop
popf
movs
inc
xor
jb
popa
cmc
sub
xchg
xor
fnsave
in
push
mov
je
add
adc
shl
jae
add
data16
add
enter
daa
popf
jne
sbb
inc
in
inc
inc
push
nop
cmp
in
add
sbb
sbb
dec
dec
add
movs
push
cmps
iret
push
dec
pop
sbb
push
stc
cli
inc
add
fwait
(bad)
sti
dec
adc
sbb
add
pop
push
add
out
mov
inc
add
in
add
enter
xor
leave
inc
add
pop
sbb
or
cmp
aas
mov
cmp
js
or
repz
dec
outs
cmps
xchg
repnz
and
jmp
sub
gs
cmp
in
xor
adc
adc
leave
add
pushf
sbb
and
add
mov
fidiv
or
mov
or
cmp
add
jle
outs
or
push
push
pop
sub
sahf
aas
add
push
mov
dec
add
dec
add
jmp
popa
inc
add
shr
adc
loop
repz
and
sbb
pop
cmp
mov
pop
nop
(bad)
jne
imul
jbe
and
pop
push
fadd
ins
(bad)
push
fsub
out
push
in
out
or
xchg
out
repz
cmp
adc
jge
ja
rcl
and
add
lea
inc
or
push
ret
sub
pop
and
lahf
xor
jno
rcr
xchg
or
iret
pop
and
pop
lock
pop
sbb
or
and
(bad)
mov
test
cmp
mov
pushf
punpckhwd
fmul
jbe
inc
push
rcl
or
das
lds
test
in
cmp
mov
shl
cmp
bound
retf
and
sub
adc
js
out
ret
sbb
fwait
mov
iret
lods
push
shl
dec
inc
dec
push
pop
add
pop
pop
mov
adc
or
(bad)
fild
add
mov
lahf
push
mov
dec
xchg
aaa
icebp
adc
jle
imul
dec
cmp
sbb
or
or
enter
pop
pop
xchg
sub
aaa
sub
mov
ret
retf
lea
adc
push
pusha
inc
xchg
inc
or
pop
dec
or
inc
test
loopne
les
cmp
sub
out
sub
add
pusha
imul
push
(bad)
aam
inc
xlat
rcr
push
adc
(bad)
pop
xchg
xchg
call
inc
xchg
pop
lea
adc
dec
(bad)
hlt
pop
test
mov
fcom
sbb
mov
xor
cdq
and
addr16
adc
sbb
stos
pop
push
or
rol
cmp
mov
inc
and
sbb
int
inc
add
adc
daa
mov
or
inc
pop
and
sbb
xor
sbb
pop
inc
bound
loope
jno
jns
inc
push
sub
dec
lds
sbb
or
and
lock
dec
mov
test
inc
xlat
pop
mov
and
aaa
mov
pop
dec
add
lods
cmps
inc
lock
push
inc
scas
xchg
inc
fnsave
aas
in
add
inc
cmp
push
test
rol
(bad)
xchg
xlat
xor
jmp
jo
pop
adc
hlt
fdiv
cmps
push
jo
test
arpl
adc
(bad)
fild
or
in
push
pop
push
pop
(bad)
lods
xchg
(bad)
ficomp
or
jmp
loope
and
imul
sub
xchg
push
nop
push
dec
sbb
pop
cmp
data16
jns
hlt
fdiv
imul
(bad)
es
pop
add
iret
std
std
aad
sbb
inc
fsubr
pop
cwde
mov
jo
daa
leave
popa
test
ret
push
sub
jl
icebp
push
fcmovb
dec
ja
jnp
shr
scas
psubb
add
add
cmps
dec
es
clc
fdiv
dec
ss
xor
fiadd
mov
(bad)
into
add
(bad)
jne
(bad)
and
retf
xchg
hlt
mov
add
pop
int
dec
xor
scas
loopne
(bad)
pop
sti
loopne
push
sahf
sbb
push
retf
imul
and
ja
mov
pandn
loop
mov
mov
add
adc
test
adc
rcr
test
retf
push
leave
mov
cmps
add
fsub
cwde
xor
outs
call
call
nop
(bad)
and
rcr
pop
iret
cmps
adc
pop
(bad)
inc
mov
mov
xor
sub
sub
clc
inc
jecxz
retf
jp
mov
fild
sub
push
cld
dec
(bad)
mov
fdiv
xchg
ret
cmp
and
aam
aam
add
out
cmp
rol
sbb
rcl
imul
add
xchg
adc
add
and
xor
fs
jge
mov
(bad)
(bad)
in
pop
xchg
bound
xchg
xor
and
adc
ds
adc
adc
scas
dec
js
dec
pop
cli
mov
arpl
pushf
cmp
jae
or
ror
scas
sub
mov
or
nop
jp
jl
xor
pop
jo
not
inc
int
in
add
mov
fldcw
movs
sbb
cdq
(bad)
dec
loopne
pop
mov
(bad)
in
aaa
rol
test
aas
xor
or
push
jp
dec
fstp
and
cmps
jne
pop
stc
lea
js
pop
lahf
and
jb
sbb
xchg
int3
and
shl
fucom
aaa
cli
aas
fs
enter
pop
stc
jne
push
fisub
pop
sub
add
and
sbb
popa
outs
or
(bad)
mov
dec
in
jmp
xchg
sti
push
test
add
sbb
xchg
pop
push
enter
das
adc
push
lock
pop
movs
jmp
cmps
nop
cs
inc
xor
sub
in
or
jecxz
mov
arpl
and
jge
aam
cmps
out
xor
xlat
es
or
xchg
scas
mov
cmp
sub
fadd
movs
or
sbb
lea
cmp
es
add
xor
inc
dec
lock
jg
movaps
stos
enter
lock
cmp
test
out
out
sub
and
adc
add
scas
leave
aam
dec
data16
dec
rcr
pop
jg
daa
mov
xchg
gs
sbb
aas
sub
mov
sbb
dec
push
pop
xchg
or
rol
sub
test
daa
add
dec
or
mov
loop
jne
(bad)
sub
sbb
mov
and
or
cmp
arpl
add
adc
xchg
adc
mov
push
adc
cmps
mov
dec
add
out
leave
and
push
or
mov
sbb
jbe
jge
or
inc
and
jne
cmp
inc
sbb
mov
xor
xor
pop
sar
and
sub
pop
xor
out
xor
stc
call
and
inc
out
movs
pusha
aas
popa
pushf
push
mov
inc
mov
hlt
retf
adc
xchg
sbb
in
xchg
sbb
ja
cmp
in
fs
fwait
push
inc
sub
push
jnp
shl
sub
push
ds
adc
leave
and
push
popa
adc
or
es
pop
inc
push
mov
das
jno
sub
leave
jns
mov
inc
push
or
call
aam
adc
push
cmp
fld
dec
call
xchg
mov
and
or
loopne
cmps
jnp
sub
or
mov
push
pop
clc
inc
mov
and
mov
cmps
adc
mov
outs
push
adc
and
fiadd
pop
xor
pop
dec
jle
ins
xchg
push
lods
push
cmps
adc
or
mov
movs
xchg
fsubr
sbb
shl
test
rol
shr
add
add
push
xchg
mov
pop
adc
sbb
xchg
cmc
and
dec
loop
and
imul
xor
jne
sar
aam
gs
pop
sub
dec
mov
mov
adc
jp
dec
rol
nop
scas
mov
daa
inc
ja
fsubr
xchg
in
add
fist
shl
(bad)
jb
jne
sbb
or
js
adc
xor
out
cmp
(bad)
fwait
jmp
in
dec
xchg
inc
dec
xchg
je
arpl
pusha
sub
and
rol
xor
ss
xor
cmps
add
dec
sar
in
repz
in
push
and
push
lea
mov
and
push
jno
aad
aaa
rol
or
add
pop
mov
enter
pop
(bad)
or
push
cmp
xchg
xchg
pop
ret
scas
loope
rol
lods
hlt
pop
or
pop
mov
ret
imul
jmp
daa
xadd
inc
or
add
cli
bswap
pop
mov
fnstenv
and
jns
jp
lods
push
add
fisubr
add
pusha
das
or
mov
add
inc
push
mov
mov
es
in
dec
shl
ja
gs
add
les
adc
ins
es
add
xor
cmp
mov
fiadd
cs
dec
je
xor
loopne
add
loope
and
add
inc
data16
pusha
push
mov
in
aam
sbb
stc
outs
pop
cmp
adc
fadd
jae
push
in
fcomp
add
and
(bad)
adc
cmps
scas
clc
jb
ror
cmp
jmp
xchg
es
cmps
loop
dec
int3
mov
repz
stc
addr16
cmp
bound
leave
sub
bound
jno
call
jmp
int3
and
pop
xlat
jae
push
and
sbb
mov
xchg
inc
ss
lock
cs
out
jl
cmps
xchg
cmps
imul
lock
and
arpl
push
xchg
inc
jb
cdq
out
dec
ss
mov
and
imul
jno
or
mov
cmp
int3
add
xor
pop
cli
in
and
and
les
jo
sub
repz
lock
xchg
pop
popa
les
dec
daa
mov
pop
out
jle
repnz
fdiv
aam
rol
aam
xchg
shl
int3
pop
mov
push
int3
pop
or
out
stos
addr16
ror
mov
xor
pop
dec
push
fdivr
sbb
mov
inc
or
jp
mov
xor
mov
xchg
push
or
mov
xchg
add
push
xor
loop
lea
movs
jecxz
jbe
bswap
int3
adc
sub
sub
inc
retf
xchg
(bad)
call
dec
ja
dec
cmps
jmp
adc
inc
nop
add
nop
adc
and
add
xor
push
and
int
push
enter
cmp
or
test
adc
inc
fstp
ins
loopne
sbb
inc
aam
das
mov
enter
sub
(bad)
in
pushf
pop
sbb
(bad)
cmp
sub
sbb
inc
add
inc
cmps
mov
xor
sub
push
pop
xor
test
or
xor
mov
and
xchg
adc
push
test
xchg
fcomp
or
movs
shl
in
stos
dec
push
fs
sub
daa
loopne
fmul
not
in
cmp
mov
(bad)
fnsave
and
mov
cmps
jmp
dec
aad
jne
dec
jl
in
cmps
rol
fwait
jp
iret
xor
sbb
xchg
push
adc
stos
imul
mov
or
add
push
mov
ss
mov
retf
inc
pushf
adc
push
aad
cmp
je
icebp
ds
cld
add
pop
arpl
mov
dec
push
lds
add
and
popa
or
cmc
sub
adc
test
pop
ja
jne
ja
ret
mov
jmp
pop
(bad)
adc
add
nop
bound
in
shl
das
pop
add
and
add
daa
pop
fbld
mov
sbb
add
adc
jb
test
or
sbb
pop
and
ja
mov
add
xchg
push
and
xor
mov
movs
sbb
add
in
cmp
push
aad
das
xor
mov
pop
xchg
and
adc
add
mov
inc
lods
fwait
in
and
add
cdq
fs
add
push
fsubr
test
out
test
gs
(bad)
and
fistp
es
rcl
jecxz
test
pop
aam
or
fdiv
or
sbb
(bad)
mov
jmp
popa
fadd
test
fwait
xchg
cmp
shr
and
add
mov
add
and
jmp
imul
lods
lods
xchg
add
(bad)
fmul
stc
leave
ficomp
adc
jecxz
mov
leave
loope
lods
enter
lods
and
loop
stc
ja
je
enter
and
leave
adc
or
sbb
jo
jmp
inc
jno
xchg
sub
xchg
call
ret
jecxz
jne
(bad)
outs
in
sbb
dec
pop
imul
imul
add
jmp
dec
dec
or
or
xor
pop
dec
or
add
mov
push
jmp
push
jecxz
and
shl
mov
xchg
outs
inc
lea
aas
add
sbb
dec
dec
fistp
cmp
and
sub
ss
mov
xor
aas
iret
mov
gs
imul
ficom
iret
or
mov
mov
daa
sub
push
sahf
sar
sbb
xor
arpl
xchg
in
mov
sub
test
clc
cmp
dec
mov
call
jmp
or
pop
dec
sub
and
stos
xlat
outs
adc
push
dec
dec
jmp
adc
adc
aad
(bad)
push
jge
lock
mov
or
adc
rcl
dec
dec
aam
sub
lock
fcomp
jb
push
cmp
adc
or
dec
repnz
mov
xor
repnz
movs
mov
dec
mov
adc
fdivr
stos
inc
xchg
mov
aaa
fwait
xor
xor
xchg
pop
mov
push
add
cmovne
retf
and
adc
dec
pop
(bad)
dec
push
or
popa
test
cdq
pop
fld1
loope
mov
je
retf
pop
xor
test
add
sbb
daa
xor
push
cmp
xchg
ins
mov
repnz
or
dec
mov
cmp
lods
add
adc
loopne
shl
in
mov
fwait
adc
cmp
mov
push
pop
pusha
lock
mov
retf
or
mov
mov
movs
loopne
jne
push
lods
lods
add
loopne
adc
inc
iret
call
pop
aaa
sbb
adc
or
jno
adc
mov
stos
cmp
mov
fisubr
das
sub
movs
cmps
loop
inc
sbb
ss
mov
jg
aas
mov
dec
cmc
das
xor
mov
sub
sbb
mov
mov
imul
ja
imul
pop
sub
mov
in
pop
jb
xchg
loopne
cmp
fidiv
jl
push
das
add
fwait
cmp
or
out
sub
lods
mov
add
sub
jb
jmp
dec
add
sbb
je
ja
dec
add
or
lock
in
mov
fadd
shl
call
scas
inc
sbb
sbb
inc
inc
push
mov
lea
add
iret
sub
sub
push
rep
inc
call
sub
lock
adc
adc
les
add
fldenv
adc
(bad)
dec
xor
push
sti
pop
dec
in
cmps
fs
xchg
jns
mov
add
pop
lock
adc
imul
shl
arpl
add
shr
mov
inc
jns
dec
cmp
xchg
pop
push
pop
add
add
jns
movs
cmps
jno
push
inc
hlt
sub
xchg
xor
push
in
inc
in
push
add
mov
fbstp
daa
pop
xchg
pop
stos
aam
jg
data16
call
jo
(bad)
inc
(bad)
adc
xchg
fwait
rcr
icebp
xchg
dec
ret
sti
fst
mov
push
les
mov
push
xor
add
nop
cmp
push
adc
xchg
push
push
cmp
aaa
adc
sbb
fisub
mov
inc
xchg
pop
jle
loop
hlt
dec
call
adc
ds
mov
dec
push
into
adc
retf
or
lods
push
pop
and
nop
fadd
hlt
std
sbb
dec
rol
add
adc
inc
pusha
dec
arpl
aam
sbb
jb
xchg
sbb
or
mov
dec
mov
mov
rcl
inc
lds
jne
and
add
shl
mov
and
(bad)
and
test
inc
shl
imul
add
in
cld
adc
ja
or
sbb
cmp
outs
lods
and
push
cli
jecxz
adc
or
xor
mov
out
dec
je
add
test
clc
pop
in
xor
movs
mov
adc
jg
pusha
and
jb
loopne
aad
cmp
nop
fsub
rcr
jo
fwait
mov
xchg
pop
mov
sti
test
add
int3
mov
scas
inc
int3
pop
pop
dec
stos
xor
stos
mov
in
movs
inc
adc
push
cmps
sub
not
push
pop
inc
in
mov
js
push
hlt
push
in
cdq
lock
mov
neg
out
sbb
and
std
push
js
add
(bad)
mov
mov
add
push
test
lahf
rcr
loope
ror
adc
and
dec
push
aam
inc
sbb
adc
push
lds
icebp
ins
test
add
adc
jp
sub
adc
ins
push
push
push
adc
mov
ss
mov
jbe
scas
or
inc
add
(bad)
sub
add
(bad)
inc
push
leave
or
inc
dec
in
pop
add
pop
popf
lock
cmp
repz
pusha
xor
push
fcomp
pop
shr
or
(bad)
adc
and
pop
fmul
scas
cwde
nop
push
pop
call
sub
pop
adc
dec
call
out
push
pop
adc
and
dec
test
aad
push
inc
mov
inc
adc
or
dec
icebp
add
mov
add
and
out
and
in
jns
xor
aas
ret
int3
pop
hlt
cmps
mov
lock
cmp
push
adc
xlat
dec
and
loope
adc
scas
adc
repz
or
pop
sbb
push
cmp
sbb
nop
in
repnz
aas
mov
test
push
push
jle
(bad)
shr
fcomi
bound
mov
or
pusha
mov
lds
sbb
out
and
mov
nop
outs
out
sti
xlat
mov
(bad)
sbb
pop
call
in
das
in
mov
pop
hlt
adc
sbb
xchg
ins
fsubr
xor
scas
addr16
icebp
aam
and
dec
pop
jmp
push
or
imul
pusha
jmp
adc
idiv
aaa
hlt
dec
push
dec
inc
sub
sbb
xchg
arpl
sub
sbb
or
mov
in
cmp
push
js
aas
dec
add
push
mov
dec
loopne
xor
adc
out
lods
xchg
cmps
add
xchg
cmps
cld
pop
inc
sub
rcl
lock
lahf
cwde
adc
mov
test
mov
mov
loop
imul
retf
sbb
fild
adc
rcr
nop
adc
dec
jp
mov
pushf
call
push
cdq
and
push
add
xor
add
mov
xchg
adc
sub
sbb
je
rol
ror
hlt
mov
and
inc
add
cmp
mov
xchg
sub
int3
jne
mov
push
add
and
add
pop
inc
mov
daa
dec
xor
outs
(bad)
xor
mov
test
jmp
loopne
dec
push
mov
cwde
xor
imul
movs
pop
js
jge
push
arpl
ret
adc
adc
nop
xchg
or
loope
cmp
or
pop
lock
push
sub
sub
add
add
sbb
push
add
sbb
imul
sbb
adc
mov
dec
inc
inc
imul
out
shl
or
pop
mov
outs
ja
jge
shr
(bad)
adc
push
enter
add
xchg
mov
xor
xor
mov
daa
adc
addr16
cmps
sbb
int
and
int3
adc
push
mov
jne
push
pop
shl
hlt
mov
pop
loope
pop
scas
call
ret
sub
aaa
loop
fistp
sub
test
add
cmc
or
add
clc
xchg
arpl
jae
aam
adc
xchg
push
xchg
dec
clc
cld
dec
les
pop
pusha
bound
adc
aam
push
adc
mov
leave
or
push
push
cli
stc
and
cmp
jne
pop
pop
test
cmp
mov
neg
or
add
imul
push
mov
rcl
popa
and
sbb
gs
test
cdq
add
cmp
bound
push
jbe
xor
xchg
cwde
push
cmp
dec
lds
movs
fs
imul
add
push
jo
and
inc
and
pmaxsw
sbb
inc
call
imul
outs
ins
out
mov
push
sbb
sub
test
mov
inc
xchg
push
test
sub
mov
(bad)
and
jns
aad
add
pusha
inc
pop
stc
call
repz
arpl
lock
nop
movs
and
and
xor
stos
mov
push
clc
xor
into
out
xor
std
dec
dec
stos
mov
imul
js
sbb
cmp
push
dec
pop
fsubr
or
fcomp
scas
dec
test
jmp
or
push
push
add
xor
or
xor
es
mov
loope
cmp
fsub
(bad)
nop
inc
add
pop
adc
scas
popa
jmp
jmp
xchg
pusha
ror
add
xchg
imul
xchg
or
les
cld
mov
mov
jle
lea
cmp
mov
hlt
mov
dec
jnp
mov
inc
sub
add
mov
in
push
xchg
inc
test
test
test
add
dec
mov
retf
and
sub
sbb
std
and
mov
dec
mov
idiv
and
cmp
and
cli
xlat
cwde
int3
jmp
fst
in
imul
and
xor
mov
mov
hlt
jmp
mov
xchg
push
cdq
cmc
cwde
mov
and
sub
rol
adc
cmp
and
mov
mov
out
test
dec
xchg
xchg
xchg
push
out
adc
and
push
xchg
hlt
mov
add
jnp
xchg
sub
add
stc
or
add
inc
movs
gs
pop
lea
dec
pushf
adc
pusha
push
push
iret
or
test
and
dec
xor
or
xchg
push
ins
addr16
mov
cld
add
and
and
inc
imul
pop
pop
adc
cmp
loope
in
jmp
mov
xor
cmp
(bad)
shr
pop
inc
sub
div
aam
fwait
dec
call
dec
cmp
inc
pop
sub
lods
push
aaa
xchg
je
cmc
inc
fisttp
clc
jmp
inc
vdivsd
ror
push
inc
ret
jl
js
(bad)
enter
pop
add
popa
mov
js
fldenv
test
les
add
test
add
shl
or
mov
xchg
mov
add
xor
jmp
imul
pusha
cdq
nop
and
jmp
and
add
dec
rol
adc
outs
push
dec
clc
popa
add
dec
xor
out
or
adc
sahf
and
out
mov
add
das
das
xor
add
lea
lock
js
add
repz
aaa
sbb
adc
or
lea
cmp
pop
repz
or
push
or
and
sub
push
mov
in
ror
add
int
mov
leave
arpl
daa
int
adc
aam
xchg
push
sti
ins
inc
sbb
jmp
(bad)
sbb
dec
sar
or
out
aaa
inc
xor
lods
push
mov
out
push
inc
adc
mov
test
cmp
mov
mov
outs
and
adc
xor
sbb
or
lds
popa
sbb
sub
(bad)
addr16
inc
push
push
dec
aad
popa
ffree
add
mov
(bad)
in
fwait
adc
call
jl
ret
mov
mov
call
sub
adc
sbb
pop
dec
sbb
ins
mov
addr16
lock
movs
cmp
ds
movs
inc
loop
pop
ds
cmps
xchg
fisttp
fs
outs
add
sbb
stos
dec
(bad)
cmc
(bad)
outs
push
inc
clc
into
sbb
dec
mov
inc
pop
mov
inc
mov
(bad)
jmp
pop
jo
sahf
outs
push
xor
mov
(bad)
sub
jne
ja
add
jne
xchg
lea
int3
outs
cmp
enter
jp
jecxz
stos
not
push
cmp
fcom
mov
stos
or
or
adc
sbb
push
test
dec
inc
loope
fcom
ret
sbb
pop
inc
pop
mov
jg
push
pop
fdiv
mov
jmp
jb
inc
scas
inc
jno
mov
jne
icebp
add
mov
jae
xchg
mov
iret
jno
mov
and
xor
mov
or
test
mov
jmp
inc
adc
inc
jp
dec
(bad)
out
push
(bad)
mov
fisttp
mov
sub
sub
pusha
xor
movs
mov
pop
les
lock
dec
inc
imul
leave
enter
and
in
sbb
or
(bad)
mov
(bad)
cli
mov
push
xor
rcl
loopne
aam
mov
aam
mov
je
loopne
fcomp
loopne
push
rol
lods
xchg
fwait
mov
add
aad
pop
adc
jno
push
fldenv
dec
dec
jns
inc
add
xchg
xor
xchg
add
jecxz
jl
sbb
ficomp
push
bound
loope
sub
dec
push
mov
js
pop
pop
push
je
retf
or
sub
clc
lahf
jmp
add
mov
jmp
and
jbe
mov
or
das
jo
sub
xor
movs
fnstenv
jne
adc
push
adc
push
xor
out
or
jne
shl
sbb
or
or
out
(bad)
jne
fmul
stos
inc
pop
hlt
mov
inc
add
into
mov
rcl
and
dec
mov
xor
movs
mov
es
or
inc
xchg
ja
in
cmps
add
addr16
lahf
or
sbb
push
bound
loope
in
or
cdq
dec
arpl
sbb
imul
or
cdq
mov
fcomp
daa
nop
sub
packsswb
jo
cmp
out
or
jno
stos
mov
xor
xchg
or
test
ja
(bad)
mov
sbb
push
repnz
sbb
sub
js
jne
mov
sbb
push
lods
or
add
push
dec
stos
cmps
cwde
add
pop
jns
pop
mov
mov
cmp
dec
sub
mov
or
cmp
push
inc
lods
pop
push
push
jns
pop
or
mov
xchg
mov
sub
fcmovnu
add
aad
mov
inc
jae
push
leave
jo
or
les
xchg
aam
xchg
hlt
adc
mov
nop
(bad)
adc
aas
add
ret
iretw
jns
dec
jmp
imul
jae
xor
inc
inc
aad
sub
fbstp
sub
sub
push
loope
imul
push
call
dec
mov
nop
in
in
aaa
out
stos
or
in
mov
std
mov
call
xor
and
sbb
sbb
adc
addr16
imul
cmp
pushf
je
mov
dec
sbb
jle
sbb
es
pusha
mov
das
inc
pop
sub
js
test
js
mov
lea
jo
push
pop
and
aas
push
xor
pop
jmp
mov
jge
add
xchg
jmp
jno
dec
dec
ds
sub
inc
push
cmp
clc
sub
fcom
sub
xchg
aam
fiadd
adc
and
add
push
sub
mov
imul
cmp
mov
inc
push
sub
xchg
cmp
cld
in
cmp
test
jne
xchg
mov
(bad)
mov
lock
ins
push
lods
dec
lods
(bad)
out
xchg
cmp
popf
pushf
dec
xchg
mov
dec
ds
hlt
xchg
mov
push
and
dec
rol
scas
gs
mov
inc
inc
pusha
test
xchg
push
xchg
inc
mov
ins
aas
sbb
jmp
mov
ret
mov
sbb
cmp
movs
push
adc
mov
pop
fdivr
shl
int3
cdq
add
mov
inc
mov
leave
mov
adc
push
mov
pop
xchg
push
adc
adc
xchg
xor
adc
enter
ds
test
into
cmovs
in
push
ficomp
lea
lea
mov
gs
ret
inc
movs
(bad)
inc
mov
aam
inc
jnp
pop
push
shl
dec
mov
lods
adc
test
add
add
push
sbb
cmps
xchg
rol
adc
bswap
xor
dec
(bad)
arpl
add
sub
sub
sbb
cld
mov
mov
pop
pop
jmp
mov
pop
fist
outs
js
adc
enter
and
test
inc
fistp
sbb
ror
(bad)
aaa
push
outs
sub
adc
mov
outs
pop
jo
push
lods
rcl
push
jae
pusha
mov
fst
imul
pop
sbb
pop
sub
shl
clc
pop
cmps
test
sub
xlat
inc
mov
lock
hlt
aam
jmp
ins
push
lea
dec
call
add
ss
in
in
lahf
pop
sbb
in
pop
dec
add
daa
int
(bad)
enter
call
push
stc
add
xor
leave
jae
dec
lods
mov
pushf
adc
mov
sahf
fwait
jmp
jg
xchg
mov
sbb
xor
movs
xchg
test
pop
sbb
pop
push
test
dec
shl
push
nop
in
jp
push
push
inc
aam
dec
pop
xchg
dec
ror
call
and
xor
mov
add
imul
xchg
es
add
movs
push
(bad)
mov
adc
adc
xor
movs
lahf
and
cs
adc
mov
add
cs
nop
and
pop
test
inc
sbb
or
aaa
sub
and
push
xor
mov
in
sub
xchg
shr
push
les
imul
dec
and
arpl
test
jmp
das
push
scas
pop
mov
jmp
fldenv
cdq
sbb
sub
popa
or
xchg
inc
icebp
xchg
pop
in
mov
leave
jae
test
test
xchg
mov
dec
or
push
xor
cs
imul
popa
jno
pop
xor
leave
repnz
and
test
push
adc
lock
js
mov
popa
push
ret
inc
fcomp
nop
inc
fcomp
aam
xchg
inc
es
les
(bad)
and
add
sbb
sub
pop
outs
imul
mov
mov
cmp
shr
movs
in
and
sub
mov
stc
add
(bad)
je
jne
push
add
sbb
xchg
inc
adc
xchg
sub
adc
(bad)
dec
pop
jp
pusha
push
outs
das
push
dec
add
mov
add
jae
and
inc
int
(bad)
inc
out
add
and
or
cli
out
jb
das
nop
jns
add
fild
jb
mov
mov
sub
jg
cmp
add
mov
mov
or
int3
push
daa
ins
fldpi
and
sbb
sbb
rcr
or
and
jle
mov
push
scas
inc
sub
ins
pushf
sub
cmp
sbb
jg
sub
test
andps
push
clc
dec
loope
and
xchg
test
fisttp
jg
bound
out
outs
stos
arpl
jae
jno
push
mov
push
outs
xchg
inc
mov
mov
ja
imul
sahf
jae
push
adc
mov
ds
push
pusha
xor
or
mov
pop
(bad)
xchg
fisttp
pushw
mov
shr
aaa
dec
sub
sub
stos
pop
pop
mov
call
add
inc
sub
mov
jge
push
mov
pop
xor
dec
mov
pop
jnp
and
xor
iret
jnp
jnp
sbb
push
hlt
cmp
iret
repz
and
or
xchg
(bad)
popf
pushf
in
icebp
mov
fsub
cmp
aam
ror
lods
mov
cwde
ror
inc
mov
mov
add
mov
das
imul
test
dec
adc
dec
push
outs
and
cwde
or
int
ret
ss
adc
loope
mov
rcr
cdq
pop
push
jbe
inc
or
mov
(bad)
mov
loop
mov
push
test
daa
out
pop
mov
xchg
std
out
(bad)
lds
ins
push
xor
xor
dec
inc
ror
and
and
jne
cmp
cli
das
xchg
push
or
popa
xchg
sub
imul
jecxz
pmulhuw
dec
dec
in
out
dec
dec
dec
dec
jmp
dec
dec
dec
in
out
out
sar
push
es
iret
jno
pop
ds
cmp
adc
enter
adc
inc
add
fisttp
ret
mov
cmp
xchg
popa
and
jno
dec
rcr
push
scas
mov
adc
sbb
or
adc
cmp
or
push
dec
xlat
pop
in
push
frstor
outs
mov
inc
sbb
out
add
xchg
mov
add
mul
mov
mov
pushw
or
scas
sub
jbe
fcom
adc
loopne
jno
and
xchg
inc
stos
push
push
or
or
sbb
or
push
or
inc
inc
inc
dec
push
pop
dec
rol
inc
dec
fistp
push
pusha
jmp
inc
inc
and
add
mov
inc
jp
scas
ja
arpl
dec
retf
and
cmps
or
push
outs
dec
scas
ror
cmps
jae
sbb
add
add
push
xchg
pop
add
mov
out
imul
and
es
cmp
xor
and
sti
pop
call
imul
mov
jns
stos
xchg
mul
push
and
push
and
sub
pusha
mov
outs
and
jae
push
xchg
es
daa
inc
call
sbb
loopne
or
ret
neg
fs
gs
and
popf
mov
sar
xchg
jns
sti
mov
push
push
adc
xchg
cmp
fcom
xor
mul
dec
cli
xchg
push
mov
dec
adc
or
dec
xor
push
clc
add
cmc
adc
adc
lea
retf
ror
movs
adc
gs
stc
in
nop
jo
mov
and
mov
int3
push
cmp
sub
test
mov
cmp
adc
and
test
int3
push
xor
test
std
dec
xor
leave
adc
dec
jo
cmp
shl
xor
push
test
xchg
int
inc
pop
sbb
lock
dec
rcl
xchg
pop
mov
sub
ffree
fadd
fs
mov
test
cmp
daa
lods
push
mov
xchg
loope
sub
xor
dec
fadd
cmp
dec
mov
cmp
pushf
mov
inc
repz
aam
or
sbb
aas
mov
fst
xor
loope
add
sbb
inc
mov
xchg
push
pop
fmul
mov
mov
adc
loope
adc
pusha
jne
shl
pop
hlt
in
js
inc
rol
xor
ins
cwde
sub
ret
sbb
(bad)
pop
mov
shl
xor
cmps
ror
add
jo
add
lds
js
xchg
in
in
pop
ins
push
rcl
je
adc
in
dec
adc
cwde
(bad)
pop
add
add
inc
jne
push
jbe
mov
sbb
and
push
inc
cmc
add
xchg
and
push
xchg
jne
lods
push
xor
fist
xchg
cmp
clc
inc
xchg
imul
sti
xchg
inc
mov
add
xchg
mov
adc
jl
sub
in
mov
int
pop
test
movs
cdq
push
pop
add
xacquire
mov
inc
inc
push
dec
or
cdq
mov
sti
inc
(bad)
ins
or
das
es
popa
adc
pushf
and
and
mov
and
pop
or
das
xchg
cmp
cmp
ja
xor
inc
fsub
in
sahf
and
sbb
and
cmp
data16
adc
lock
shl
hlt
dec
aaa
adc
sub
int3
ja
loopne
inc
and
jecxz
sbb
push
loopne
dec
test
pushf
rcr
les
sbb
and
mov
and
mov
mov
mov
sbb
adc
in
in
xor
jo
enter
adc
fisub
sbb
mov
fwait
sbb
adc
popa
jo
xchg
inc
cmc
jno
sub
inc
pushf
mov
int3
add
cmps
mov
push
mov
ds
fimul
pop
leave
fnstcw
jb
aaa
pusha
je
and
iret
test
loopne
push
or
inc
xchg
or
add
pop
call
mov
xchg
push
mov
mov
loop
bound
xchg
push
mov
mov
mov
cmps
xor
outs
jb
inc
stc
(bad)
push
fs
stos
or
adc
jl
jbe
add
ja
outs
das
gs
mov
ins
outs
loopne
gs
push
loop
neg
add
or
inc
ja
and
fisttp
outs
jbe
popa
and
(bad)
xor
or
data16
pop
daa
jbe
movs
aaa
outs
sbb
push
in
add
imul
fwait
xchg
inc
pop
mov
xchg
or
imul
in
or
push
or
outs
xor
lods
mov
ins
xlat
sub
xchg
popa
cmps
xlat
dec
movs
arpl
js
pop
add
pop
pop
pop
add
es
dec
outs
(bad)
xlat
outs
popw
out
or
outs
jne
add
addr16
jge
mov
mov
cmp
add
or
daa
imul
jb
aam
sbb
xchg
aam
nop
pop
xchg
xchg
rcr
je
push
icebp
bound
(bad)
je
xor
xchg
fnstenv
out
and
mov
ja
arpl
inc
call
movs
imul
je
aas
(bad)
pop
and
inc
jae
retf
push
test
ja
mul
dec
es
hlt
imul
or
jmp
push
jb
jge
add
jg
push
mov
sub
xchg
mov
xchg
arpl
jae
movs
adc
int
mov
ss
jmp
sbb
in
mov
movs
cmps
xchg
push
sub
push
imul
mov
adc
mov
mov
daa
ins
or
arpl
and
mov
mov
jnp
jne
inc
jo
daa
sbb
mov
xlat
xlat
div
or
aas
ins
push
sbb
imul
cmp
es
cmp
mov
push
ins
sub
pop
sbb
mov
imul
call
dec
arpl
xor
jae
and
jae
and
fs
outs
outs
je
jbe
cmp
and
jg
lods
rol
xlat
pop
sub
scas
jmp
(bad)
outs
out
enter
pop
mov
sub
sbb
adc
out
mov
add
ins
adc
pusha
(bad)
sub
cvtpi2ps
adc
xor
test
adc
cmp
push
push
push
push
fist
popa
push
ret
add
adc
cmps
add
push
push
movs
xchg
mov
packsswb
and
pop
test
pusha
retf
cwde
mov
out
sbb
sub
addr16
mov
inc
addr16
pop
stos
jge
addr16
call
outs
push
jnp
fnclex
es
addr16
gs
movntps
push
pop
das
add
lods
dec
aam
add
mov
dec
retf
lahf
inc
fidiv
mov
push
cmp
hlt
retf
dec
les
add
les
imul
ret
dec
add
in
mov
cmps
push
or
xchg
and
inc
pop
pop
jp
les
and
ficom
add
test
ds
mov
adc
adc
push
movs
pop
fnsave
pop
push
pop
push
mov
lock
in
xlat
pop
sbb
adc
sbb
sbb
ins
jo
lods
mov
shl
shl
in
aam
aas
and
ror
push
and
xlat
pop
sbb
adc
dec
test
dec
sbb
inc
or
fmul
(bad)
aas
ds
faddp
rcl
rol
and
shl
lock
aam
aad
xchg
add
xor
dec
xor
das
pop
pop
add
stos
cs
and
(bad)
ins
pop
pop
or
dec
jns
sub
xlat
push
scas
addr16
add
cmc
push
inc
and
clc
jae
mov
and
dec
jb
in
stos
and
add
or
fnsave
dec
pop
ja
inc
and
outs
pop
mov
add
sbb
inc
or
scas
push
inc
mov
add
gs
in
dec
adc
leave
inc
cmc
dec
mov
pop
lods
jo
xchg
lods
pop
add
in
lods
lahf
xor
(bad)
push
(bad)
or
pusha
mov
or
nop
fild
and
and
push
or
sbb
inc
lods
push
lods
or
fwait
adc
fisttp
jnp
add
or
mov
push
mov
adc
pop
daa
xor
nop
push
sub
xor
lods
cmp
or
xchg
sbb
xlat
mov
inc
imul
scas
pushf
sbb
push
mov
jo
push
push
int
shl
jo
adc
nop
push
nop
adc
jmp
mov
inc
sub
or
es
inc
dec
mov
adc
pop
or
repnz
pop
dec
clc
sbb
and
sbb
mov
or
add
inc
adc
nop
lahf
ss
or
jns
pop
scas
mov
adc
daa
sbb
arpl
mov
sub
add
std
sbb
test
xchg
in
jne
and
mov
pop
or
mov
stos
dec
adc
sub
out
mov
cmp
mov
pop
pop
scas
adc
dec
mov
sub
adc
xchg
adc
lods
in
push
mov
sahf
add
test
mov
or
mov
mov
inc
mov
xchg
daa
push
mov
sub
mov
js
sbb
mov
clc
push
mov
clc
nop
mov
push
dec
sub
dec
adc
mov
test
adc
stos
xchg
adc
aas
push
js
cmp
xor
mov
dec
xor
and
fs
and
xor
cmp
mov
xchg
xchg
xlat
cmp
fs
sub
mov
shl
out
or
or
call
jns
pop
xchg
idiv
add
data16
movs
int3
dec
and
fs
xor
push
pop
or
iret
lock
je
(bad)
fiadd
mov
movs
or
inc
push
or
or
xor
dec
xchg
add
xlat
add
out
mov
mov
pop
pop
lock
nop
add
nop
ins
xchg
cmp
xor
inc
xchg
imul
inc
inc
jle
into
mov
and
cwde
sar
pop
sbb
arpl
push
sbb
mov
mov
and
ins
adc
jmp
adc
or
lods
adc
xor
hlt
or
dec
movs
push
outs
jns
add
add
repz
mov
mov
sub
adc
clc
xor
or
pop
adc
ins
adc
cmp
add
mov
ins
rol
or
push
adc
popa
xchg
dec
fcomp
jge
dec
inc
add
arpl
sbb
adc
fdiv
inc
hlt
pop
xor
(bad)
or
fst
int3
and
sbb
and
xchg
les
push
xor
add
call
mov
mov
aas
cmps
lods
cmp
push
int
ss
inc
or
sbb
lea
sub
inc
xchg
test
ret
movs
test
cmp
or
or
lea
inc
and
call
xlat
dec
push
dec
movs
in
sub
add
and
aas
adc
test
fidivr
xor
jae
mov
push
xchg
mov
and
mov
cli
inc
jecxz
add
xchg
adc
sbb
push
mov
and
shr
in
and
jnp
leave
adc
pop
loope
mov
sub
int
push
add
and
pop
adc
pop
add
or
cmp
test
clc
or
ror
hlt
cld
push
popa
leave
ror
push
pop
xchg
or
fs
mov
jb
inc
or
and
jnp
jb
xor
add
fisttp
pop
mov
test
inc
add
loop
jno
mov
and
cmp
movs
popf
dec
outs
or
sbb
or
sub
cs
jmp
sbb
nop
add
mov
dec
adc
idiv
test
out
or
mov
and
xchg
test
in
neg
and
pop
cs
stos
ja
push
push
jo
inc
dec
jcxz
and
in
jbe
mov
jae
pop
lock
or
xor
sbb
and
and
adc
xchg
mov
gs
arpl
inc
loope
in
cmps
xor
imul
mov
sub
outs
aam
test
rcl
aam
repnz
jb
int3
enter
jb
int3
adc
xchg
add
push
test
js
test
fimul
jge
lods
les
pop
stos
pusha
(bad)
cmc
test
mov
fsub
sbb
adc
add
call
adc
dec
daa
add
sub
xor
dec
dec
jae
mov
pusha
jo
mov
add
push
mov
dec
jo
inc
dec
mov
hlt
sbb
mov
lods
mov
enter
inc
shr
xchg
lods
js
adc
retf
in
stos
in
sub
jge
shl
adc
sbb
or
adc
add
or
xlat
ret
mov
xor
add
test
jle
jne
or
test
ins
nop
sbb
rcr
loop
cmc
jo
mov
outs
inc
cld
popf
mov
xchg
cmp
cmp
jle
sbb
mov
call
test
mov
je
pop
in
mov
dec
inc
movs
push
aam
or
add
retf
mov
sbb
test
add
or
push
jmp
bound
sub
emms
ret
test
adc
imul
and
xor
mov
and
dec
cmp
loop
inc
mov
xor
dec
mov
jae
jns
ret
popa
or
ins
or
add
fisubr
nop
shl
cmp
adc
and
and
ret
pop
adc
mov
add
mov
fscale
lock
jp
xchg
mov
loope
add
sub
and
(bad)
hlt
or
lds
shl
sar
test
push
aad
pinsrw
or
fsubr
and
add
push
mov
sub
inc
cmps
pop
sub
cwde
mov
jmp
mov
xor
shl
add
or
les
lods
sbb
xchg
xchg
sub
in
enter
lds
dec
sub
pop
cmps
(bad)
push
push
sbb
sar
(bad)
rol
sbb
scas
jae
sub
pop
in
mov
lods
lods
scas
daa
xlat
dec
xlat
pushf
dec
sbb
cmp
lock
sub
add
and
or
scas
and
test
call
arpl
arpl
aaa
scas
(bad)
mov
sub
add
xchg
sub
scas
lods
(bad)
pop
pop
sub
add
mov
mov
gs
aas
enter
dec
(bad)
clc
loop
pusha
shl
pop
inc
sahf
popa
sbb
add
xchg
imul
out
ja
dec
dec
sub
js
xor
imul
in
arpl
add
add
sub
or
sahf
sbb
push
ins
enter
bound
pop
out
push
les
cmps
rcl
retf
fwait
jmp
lock
add
push
ins
fdiv
pop
mov
pushf
cmps
jo
jmp
out
scas
adc
mov
xchg
xor
test
ja
imul
cmp
fwait
int
jns
aam
fadd
das
ja
adc
pop
push
inc
xor
add
in
jmp
mov
dec
leave
nop
or
mov
leave
out
pusha
add
cmp
pusha
mov
and
xor
push
pop
das
aam
in
or
call
push
adc
xor
push
lods
movs
ficom
jge
mov
add
inc
popa
mov
mov
push
call
enter
adc
outs
sub
cld
popa
ret
mov
loope
add
fisttp
add
sbb
daa
mov
jno
sub
shl
jecxz
loope
xchg
adc
mov
retf
or
or
xchg
add
sbb
ins
ins
push
fs
and
imul
test
clc
movs
or
xchg
neg
add
adc
sub
je
lahf
xchg
in
and
sub
mov
adc
sbb
pop
xchg
mov
sbb
or
adc
add
rol
mov
mov
test
or
cwde
sti
stos
adc
mov
xchg
pushf
stos
or
lods
js
popa
push
xchg
icebp
push
or
fcmovu
mov
data16
mov
call
jle
cs
mov
mov
outs
hlt
out
dec
or
xor
sbb
sbb
push
cmp
(bad)
shld
rol
mov
mov
lods
jo
dec
cld
lds
mov
xor
sbb
mov
xor
adc
add
pusha
xchg
xlat
pop
cld
dec
iret
dec
mov
mov
sub
mov
ins
pushw
or
or
fs
fmul
push
iret
add
add
aas
clc
dec
pop
and
cmps
aas
loope
loopne
push
pop
test
jmp
shl
adc
sbb
(bad)
test
rol
mov
js
shl
xor
iret
jg
adc
or
cmp
call
xor
lods
popf
xor
push
int3
push
aaa
test
inc
pop
mov
mov
add
(bad)
mov
aam
and
pop
sar
push
lods
add
jg
adc
dec
adc
neg
or
rol
sbb
nop
aas
xchg
push
enter
rcl
sahf
shr
in
enter
cmp
adc
shl
repnz
hlt
and
adc
xor
jb
cmp
sbb
jle
jg
cmovb
aam
aad
xchg
test
sbb
pop
and
and
aad
aad
leave
push
jb
aad
je
dec
and
rcl
jne
pop
inc
dec
and
(bad)
mov
cdq
mov
add
lahf
jo
sbb
mov
rol
or
or
or
xlat
nop
mov
in
ins
xlat
xlat
push
dec
scas
xlat
pop
push
jo
and
out
loop
sub
mov
xlat
add
adc
xchg
popa
in
inc
cmp
jle
cmp
imul
dec
out
or
and
cs
pop
or
pop
and
in
sub
std
sbb
call
repnz
out
pusha
mov
dec
push
sbb
cmp
mov
mov
enter
ret
out
push
sub
js
retf
mov
xchg
sbb
xor
xchg
loopne
mov
pop
adc
mov
pop
add
sbb
and
add
loopne
push
pop
call
sbb
dec
cmp
out
dec
scas
cmp
punpcklbw
inc
movs
cmps
sbb
imul
or
cmp
fdiv
loope
and
into
push
or
movs
inc
hlt
fnsave
mov
pop
pop
in
mov
dec
mov
cmp
(bad)
(bad)
mov
fstp
xor
test
cmp
fadd
adc
dec
mov
cmp
xchg
xchg
dec
xchg
pop
and
mov
dec
cmp
mov
inc
cmp
adc
mov
push
cdq
loopne
mov
fsub
shl
xor
push
mov
in
push
daa
(bad)
stos
loopne
inc
sbb
and
add
xchg
cmp
fsubr
pushf
pop
repnz
jb
addr16
call
call
movs
sbb
bound
xchg
(bad)
pushf
and
in
mov
sbb
mov
retf
fcmovu
xor
push
call
dec
or
sub
iret
test
jbe
lahf
scas
pop
or
mov
lds
push
xchg
adc
mov
rol
shr
arpl
clc
mov
les
jg
test
outs
mov
rcl
cmp
in
xor
or
mov
mov
adc
dec
call
push
aaa
les
adc
add
inc
xor
inc
xchg
or
adc
fbld
xlat
mov
loop
adc
sbb
or
aam
jl
adc
push
dec
shr
and
dec
jmp
pop
clc
enter
clc
movs
hlt
in
sbb
mov
nop
or
jb
xchg
sbb
in
in
cs
fsubr
dec
scas
in
call
nop
in
adc
jecxz
loopne
cs
fs
scas
in
dec
fsub
xchg
sub
in
cs
rcl
stos
lods
pop
push
addr16
and
scas
inc
sub
sub
shl
xchg
aad
sub
dec
push
adc
inc
inc
sub
test
xor
ja
test
sbb
or
add
push
ins
jl
xchg
add
push
add
in
add
lahf
jo
pop
add
imul
jo
in
sub
fisttp
add
sbb
or
sub
sub
xor
ret
in
xor
mov
sub
mov
add
test
add
retf
and
pop
(bad)
sbb
add
add
fiadd
xor
dec
push
in
test
and
nop
mov
inc
sbb
push
sub
mov
out
and
jb
call
add
out
xchg
and
dec
push
fs
xchg
push
xchg
and
nop
cwde
pop
cwde
mov
je
jbe
add
add
pop
and
push
jb
or
pop
ror
inc
inc
mov
push
int3
xor
pop
adc
fs
cmp
pop
jo
dec
and
stos
xchg
cmp
pop
(bad)
fs
xlat
mov
and
iret
push
dec
in
sbb
(bad)
(bad)
jg
mov
adc
and
push
push
ficom
dec
push
push
outs
push
dec
inc
push
inc
lock
or
jae
lahf
jae
fdiv
xor
loope
aam
inc
push
pushf
jb
and
add
push
xor
out
pop
js
jbe
movs
js
push
data16
ins
jle
mov
mov
sahf
mov
dec
sbb
aam
mov
push
in
popa
jo
shl
jmp
test
fsubr
adc
sbb
cmp
enter
xlat
push
shl
cmp
aam
jmp
scas
jmp
inc
mov
mov
mov
and
xchg
inc
or
mov
je
push
mov
pop
mov
mov
mov
cmps
add
xor
retf
xchg
inc
jns
pop
ins
xchg
or
nop
mov
mov
jmp
jb
outs
xchg
mov
adc
xor
add
xor
mov
shl
dec
sbb
dec
test
(bad)
outs
pop
fbstp
pop
pop
in
enter
mov
push
and
dec
stc
rcr
(bad)
adc
cdq
sbb
mov
ins
mov
push
and
leave
je
adc
xor
push
(bad)
loopne
push
adc
aas
fadd
and
mov
js
or
xchg
out
or
dec
and
inc
out
push
and
sbb
scas
nop
in
fild
scas
imul
daa
mov
ror
push
mov
out
(bad)
out
pop
das
inc
push
mov
je
test
sub
jb
mov
int
ins
outs
adc
and
pop
ds
sbb
mov
test
imul
nop
push
sbb
sub
inc
jecxz
sub
cmp
(bad)
xor
adc
call
scas
sub
test
aas
pushf
lock
jbe
sub
iret
mov
add
or
pop
fadd
popa
inc
adc
push
mov
or
push
and
in
ins
mov
push
fild
gs
push
or
dec
sahf
pop
mov
mov
fs
sbb
xor
mov
xor
ds
ret
shl
lea
push
add
pop
addr16
xlat
pushf
or
mov
or
dec
enter
xlat
push
inc
jno
arpl
jbe
daa
mov
xlat
pop
xchg
sub
mov
xlat
adc
loopne
adc
stos
sbb
into
xlat
dec
cmc
xlat
push
cwde
dec
cmps
pop
mov
fstp
nop
sub
adc
mov
pop
sub
dec
xchg
mov
ds
addr16
mov
sub
and
sub
adc
scas
add
nop
nop
sub
add
mov
adc
mov
movs
das
pop
ins
ins
ds
shr
mov
in
adc
sbb
and
clc
mov
pop
xchg
inc
sti
mov
mov
and
adc
retf
pusha
mov
ret
outs
sbb
mov
sbb
mov
iret
test
jmp
cmp
call
sbb
leave
mov
xlat
push
cli
lahf
aaa
cdq
sbb
pop
retf
rol
mov
jb
adc
imul
mov
(bad)
sti
outs
inc
mov
ins
or
iret
test
push
xlat
pop
push
sbb
adc
hlt
hlt
sbb
dec
fdiv
mov
pusha
cld
xlat
xchg
fsub
iret
xchg
adc
mov
jno
cli
fdiv
leave
adc
enter
test
jo
cmps
test
and
cdq
and
cmps
adc
shrd
fcmovb
ffreep
dec
inc
imul
or
dec
dec
fld
iret
inc
outs
shr
nop
push
repnz
sahf
cwde
push
ds
pop
js
add
enter
xlat
sbb
pop
push
jne
push
mov
xchg
push
push
dec
jg
xlat
xor
push
and
mov
push
xor
mov
jo
dec
mov
or
mov
stos
in
fdivr
(bad)
sar
xchg
or
int3
adc
sbb
ds
add
push
jl
jb
and
inc
fwait
cmp
rcl
in
push
mov
jo
out
add
cmps
es
lds
add
jmp
in
dec
push
and
in
not
test
mov
and
sbb
imul
rcr
mov
out
adc
in
and
push
push
add
xchg
fcmovnbe
cmp
xlat
dec
dec
enter
and
loope
pop
sbb
mov
repz
adc
iret
and
jne
popa
mov
pop
add
nop
fistp
enter
mov
and
fst
push
xor
sub
enter
xor
in
or
jl
dec
push
xor
ret
dec
ror
sub
out
hlt
enter
hlt
daa
and
inc
pop
dec
outs
icebp
shl
call
mov
adc
rcl
mov
mov
adc
fstp
mov
aad
mul
mov
(bad)
ffreep
adc
xlat
ret
cmp
jo
(bad)
cmp
push
xor
out
mov
and
and
in
inc
int
lods
out
adc
inc
push
and
scas
push
ins
out
fild
mov
sbb
ds
aam
xchg
dec
sbb
xor
iret
test
js
scas
dec
gs
adc
ins
in
push
or
and
(bad)
out
cld
and
pop
icebp
xor
in
fild
push
add
inc
daa
shr
xchg
sub
imul
jg
js
in
test
push
mov
add
mul
mov
or
out
push
mov
ins
cmp
rol
aad
loopne
enter
das
fisubr
add
sti
pop
or
and
add
inc
das
mov
xchg
out
ror
push
or
jo
jb
and
and
pop
mov
mov
add
aas
sub
ror
fiadd
(bad)
out
les
xlat
sub
sub
jmp
movntq
mov
loope
test
push
add
rol
out
inc
fsub
cmp
adc
push
outs
lods
in
sbb
fwait
mov
mov
dec
pop
test
mov
mov
xchg
adc
out
mov
jb
push
mov
cmc
js
js
cmp
xor
jo
std
cmp
dec
pop
push
mov
mov
sub
xlat
clc
(bad)
clc
sbb
sub
jns
xchg
in
adc
pusha
ss
xor
shr
sbb
add
(bad)
repz
and
mov
(bad)
adc
xor
out
jmp
nop
push
adc
jo
mov
adc
or
sub
sti
or
sub
xchg
sub
in
add
dec
fs
test
cld
ins
cwde
and
inc
rcl
sahf
ins
movs
xchg
(bad)
hlt
adc
jno
nop
jo
push
test
fiadd
xor
out
daa
push
mov
ror
or
mul
fisub
sbb
xchg
call
out
inc
sbb
push
add
mov
xor
cmp
sub
cwde
mov
or
mov
mov
cmps
fs
(bad)
(bad)
mov
add
cmp
(bad)
outs
push
push
lock
jge
js
repz
push
inc
frstor
pop
xchg
dec
ja
inc
cmps
push
and
cmps
adc
(bad)
pop
and
or
rcl
push
das
pop
push
add
push
(bad)
movs
sar
push
push
loopne
dec
cmps
mov
add
push
cmp
add
out
lock
cmp
outs
adc
out
es
test
(bad)
mov
xor
push
jo
retf
add
in
or
out
rcl
fld
dec
dec
mov
or
sbb
dec
inc
leave
jae
clts
push
xchg
push
jo
mov
ins
sbb
sub
add
outs
sub
ins
push
jae
or
shr
jne
adc
adc
lock
inc
(bad)
(bad)
sbb
ss
pusha
pop
inc
sahf
push
dec
or
sahf
cmps
ins
pop
pushf
adc
mov
stc
mov
hlt
mov
push
mov
adc
adc
cmps
jge
rcl
test
xor
fldcw
pop
jo
adc
or
cmp
push
adc
add
sbb
cmp
mov
imul
sbb
add
sbb
test
data16
jl
and
js
shl
pusha
and
fnstcw
int
and
ins
and
clc
sbb
iret
repz
pusha
nop
lock
inc
add
rcl
gs
sbb
jo
mov
xor
(bad)
cmp
mov
loopne
mov
daa
push
xchg
sar
iret
ins
pop
mov
mov
sub
retf
adc
pushf
xlat
push
inc
pusha
(bad)
cmp
(bad)
push
push
jns
fcomp
into
clc
mov
sbb
sbb
fnsave
popa
xchg
pop
dec
lahf
shr
sub
mov
paddq
mov
out
add
jl
mov
jns
repnz
cmps
adc
das
xor
xor
add
push
pop
ins
pusha
adc
pop
or
or
pop
div
push
and
addr16
cmp
jl
mov
jo
ss
int
ss
sub
or
je
adc
xchg
daa
pop
add
ins
push
test
mov
lea
cmp
mov
mov
gs
pop
sbb
adc
ja
cmp
mov
pop
or
call
cmp
test
inc
out
call
je
cld
out
ds
dec
xor
dec
and
jge
jnp
mov
dec
cs
rcr
in
dec
dec
sahf
pop
pop
pop
ffreep
push
repz
test
pop
movs
dec
pop
mov
call
pop
data16
iret
mov
mov
dec
into
pop
mov
push
inc
(bad)
ins
sahf
rcl
push
loopne
cmovns
(bad)
setne
leave
sub
push
nop
pushf
push
cwde
popa
mov
adc
and
jo
jg
imul
mov
push
shl
push
pop
nop
sbb
push
and
add
or
jg
mov
fcomp
dec
call
jb
sbb
movs
imul
push
mov
dec
dec
xchg
ins
add
imul
jle
out
push
push
push
cmp
lods
outs
jo
ret
mov
outs
and
push
scas
sbb
inc
dec
dec
test
enter
xchg
loope
xchg
add
mov
daa
cmp
xchg
pusha
mov
sar
not
push
ins
mov
int
mov
je
cld
mov
div
int
xchg
inc
xchg
loopne
js
push
mov
push
and
mov
push
push
or
inc
jne
test
in
cmps
lods
cs
push
les
push
(bad)
and
sbb
and
pushf
and
mov
enter
or
sbb
out
rol
dec
mov
sbb
xchg
repz
mov
push
push
je
lods
adc
xor
and
es
dec
push
jb
and
scas
dec
dec
enter
nop
scas
sub
xchg
pop
push
aam
xchg
push
push
cmp
adc
cmps
loope
pop
fidiv
es
ja
mov
inc
jb
pop
cmps
or
shl
out
call
mov
imul
sysenter
test
stos
cmp
nop
sub
mov
outs
outs
add
cbw
mov
setg
test
push
enter
add
aaa
and
outs
mov
mov
mov
dec
mov
xlat
pusha
mov
jns
fdivr
dec
outs
pop
aaa
out
(bad)
daa
dec
dec
dec
inc
addr16
sub
sub
fsubr
nop
cmp
shl
sub
push
repnz
push
sar
js
fs
pop
movs
mov
dec
mov
mov
es
mov
jp
enter
ret
push
sub
(bad)
movs
inc
ins
mov
sub
test
shl
fs
and
xchg
push
nop
les
inc
ss
push
adc
movs
call
and
dec
leave
call
add
fiadd
dec
fld
fdivr
rol
call
cmp
into
ds
xchg
push
out
call
loopne
repz
sub
movs
fsub
imul
int
loope
adc
cwde
xor
ss
(bad)
sahf
jmp
push
ins
push
dec
retf
or
sub
inc
int3
add
xor
mov
and
das
mov
faddp
adc
mov
test
int3
add
js
mov
jmp
dec
fcmove
xchg
rcr
ss
push
into
loopne
iret
js
ds
shr
out
xchg
push
or
lock
daa
loopne
push
lock
push
or
nop
and
pop
sbb
mov
das
sahf
cmps
pop
sbb
repz
hlt
push
and
mov
cmc
out
pop
sbb
cwde
out
lods
dec
repz
push
add
inc
loopne
pop
sar
lock
out
adc
imul
jo
movs
dec
cwde
popa
daa
mov
dec
cmp
add
cli
fdivrp
push
ins
mov
cmps
stc
cmp
adc
xor
mov
add
push
dec
cs
push
pusha
es
push
add
add
lahf
data16
push
adc
enter
push
pop
aaa
mov
and
mov
sbb
cwde
call
cmps
push
sub
adc
mov
dec
mov
dec
or
adc
sub
call
call
or
cmpps
mov
xor
xor
mov
outs
or
or
sbb
push
movs
xchg
sbb
xor
imul
and
push
les
pop
dec
sti
fisub
scas
sbb
push
push
mov
or
dec
cwde
enter
jne
push
cmp
out
iret
cld
cmp
test
cmp
adc
or
fwait
fwait
sub
nop
movs
ds
xchg
js
pop
push
xor
pushf
dec
cmp
or
data16
add
es
shl
and
ins
ss
pop
je
test
lods
daa
and
and
cmps
fcomp
dec
nop
sub
pop
(bad)
xor
jl
ja
es
pop
cmps
push
and
mov
adc
push
test
adc
adc
out
cmp
dec
inc
cmps
clc
das
jb
shl
adc
inc
int
dec
mov
leave
add
lods
pop
daa
(bad)
sbb
pop
pop
ret
mov
mov
pop
sub
xchg
add
or
jp
popa
xchg
and
sahf
movs
dec
les
xor
je
cmp
iret
mov
sub
gs
adc
pop
ds
nop
mov
pop
int3
les
inc
cwde
data16
pop
adc
pop
dec
pop
in
inc
cmp
cld
out
or
adc
mov
je
rcl
lock
cmp
inc
sub
(bad)
xchg
sbb
push
aaa
add
aaa
pop
jg
outs
sub
sbb
xchg
ss
jo
in
in
dec
rol
mov
sahf
lods
push
int3
pushf
inc
sbb
sbb
unpcklps
leave
push
hlt
push
lds
cmp
push
sbb
pop
push
in
mov
nop
add
in
mov
mul
pop
inc
sbb
js
inc
enter
in
dec
cmp
mov
inc
sar
push
push
mov
gs
or
dec
adc
nop
push
ds
leave
test
adc
and
push
shl
inc
push
ss
sub
scas
sub
push
enter
pop
jo
and
pop
pop
and
nop
pop
sbb
cmp
add
adc
addr16
enter
inc
js
fs
cmp
test
pop
pop
add
xor
mov
mov
xlat
lock
inc
inc
lock
fwait
dec
dec
inc
scas
pusha
pusha
add
push
or
cmp
adc
or
mov
ret
adc
pushf
popa
pop
lds
pusha
pop
dec
ins
je
test
push
ss
pop
daa
idiv
sub
xchg
xchg
mov
ins
bound
pop
pop
pop
and
push
or
jns
inc
push
add
rol
scas
adc
pushw
push
in
inc
push
(bad)
repnz
addr16
or
repnz
out
mov
ja
and
jp
mov
mov
push
pushf
outs
push
push
inc
xor
jae
xor
ins
sbb
lods
xchg
nop
push
inc
das
rcl
(bad)
xor
cmp
mov
jl
repnz
data16
push
sbb
(bad)
int3
(bad)
stos
push
retf
xlat
cmp
pushf
and
dec
inc
aaa
mov
xchg
rol
add
cmp
or
aas
ja
sbb
sbb
cmp
adc
movs
enter
inc
or
cmp
adc
mov
cmp
sub
xchg
adc
add
add
js
mov
xor
leave
mov
iret
je
shl
jp
nop
mov
and
cmp
xor
cld
mov
pusha
dec
mov
repnz
enter
popa
and
mov
sahf
or
xor
adc
push
inc
movs
inc
cmp
or
mov
lods
dec
ret
mov
into
cmps
ins
retf
(bad)
enter
dec
or
cmp
pop
daa
push
cmp
adc
clc
mov
ins
sbb
cdq
clc
movs
push
mov
int
sahf
adc
push
push
loopne
and
sbb
movs
dec
js
sbb
je
aad
sub
es
in
cmp
aas
mov
pop
(bad)
add
test
sbb
rol
out
rol
pop
das
and
adc
push
inc
adc
clc
pop
sub
push
dec
dec
adc
ds
ins
adc
data16
into
jnp
rol
inc
adc
mov
loopne
mov
pop
adc
pop
sbb
inc
cmp
dec
cs
inc
mov
xchg
fs
js
dec
add
pop
jo
fistp
sbb
inc
inc
addr16
sysret
add
pusha
les
sub
or
pop
or
test
(bad)
fsub
lahf
push
jo
mov
add
jge
mov
add
dec
push
(bad)
adc
bound
pop
ins
cwde
lods
mov
aas
rcr
dec
mov
xor
sbb
jmp
mov
stc
nop
loopne
xor
push
add
(bad)
cli
jb
inc
inc
shl
je
daa
jmp
and
xor
outs
loopne
nop
sub
aaa
pop
je
or
sub
add
or
add
or
popa
inc
adc
outs
call
cmp
push
(bad)
push
(bad)
jb
enter
push
add
jae
nop
xchg
add
xchg
add
cmp
inc
cwde
push
sar
enter
je
add
or
adc
or
rcl
and
pop
ret
inc
or
xchg
dec
inc
ins
xchg
mov
mov
push
nop
daa
cmp
loopne
(bad)
add
xchg
push
xor
jb
adc
jae
daa
or
push
ss
mov
push
jo
mov
dec
dec
add
add
adc
xor
inc
adc
push
push
aaa
xor
add
sbb
sub
(bad)
adc
mov
xor
xchg
test
mov
add
outs
xchg
jae
das
mov
(bad)
jo
push
pop
xor
pop
push
test
inc
or
popa
add
xchg
pop
(bad)
push
push
xor
loope
push
add
sti
mov
pusha
sbb
ss
rcl
add
xor
inc
scas
mov
pop
sbb
mov
mov
sbb
pop
dec
repz
push
cld
sub
call
call
jo
jne
aas
pop
inc
jno
add
shl
ins
jo
ins
push
xchg
mov
dec
in
inc
out
pop
pop
xor
xchg
ffreep
int
xor
fisub
into
push
fs
gs
add
mov
inc
adc
imul
pop
xor
push
in
sub
and
push
xchg
(bad)
mov
adc
adc
(bad)
adc
pop
out
mov
push
pop
add
pop
lods
dec
jmp
or
adc
xor
inc
js
mov
xchg
stos
ret
repnz
add
inc
sahf
imul
pusha
pusha
xor
in
xchg
and
and
inc
sar
repz
aaa
xchg
inc
nop
fmul
adc
or
pop
call
ret
sbb
scas
add
lock
fs
or
pop
sar
jne
xor
mov
or
inc
pop
mov
or
mov
push
jo
popa
shr
push
dec
gs
mov
dec
js
add
loop
adc
and
add
add
or
aam
fdivr
(bad)
mov
repnz
mov
retf
je
cmp
bound
dec
fcom
push
ror
add
popa
stos
push
jecxz
push
add
pop
enter
sbb
xchg
ror
adc
mov
cmp
neg
xor
pop
mov
jne
sbb
pop
pop
mov
bound
sbb
xor
push
imul
push
fld
icebp
push
sbb
sbb
add
or
shl
mov
packuswb
dec
push
mov
and
sbb
or
and
pusha
adc
rol
add
dec
adc
movs
ins
inc
push
(bad)
sbb
sbb
clc
add
sbb
(bad)
cld
pop
retf
cmc
test
inc
and
pusha
bound
or
add
(bad)
and
pop
add
repnz
push
push
clc
fdivrp
ds
fs
das
lods
mov
rcr
daa
ins
ds
test
iret
push
shr
shl
imul
xchg
push
mov
lahf
data16
loopne
(bad)
inc
xlat
or
cmp
movs
fstp
fisub
fdivr
fsub
mov
into
loopne
lahf
data16
dec
loope
loop
js
nop
add
inc
xchg
jmp
pop
xor
and
jmp
movs
push
and
bound
xchg
jb
test
and
enter
cmp
clc
pop
int
ror
in
call
aam
repz
jmp
ss
mov
jmp
in
movs
dec
in
add
aas
push
mov
push
pop
sbb
mov
inc
jnp
popa
jmp
jle
clc
push
arpl
inc
ins
push
data16
xchg
sbb
or
in
cmp
aaa
cmp
out
inc
js
mov
lock
cmps
popa
xor
daa
pop
xor
sbb
push
add
imul
cmp
xor
mov
inc
mov
dec
lahf
sbb
add
pop
pop
fs
dec
in
and
pop
popa
mov
or
cld
addr16
jge
lods
repnz
sub
idiv
(bad)
clc
in
out
(bad)
pop
out
ss
fdivrp
pop
add
add
repz
add
xchg
or
nop
pop
mov
sub
bound
cwde
sub
loopne
sub
ret
add
pop
shl
dec
inc
(bad)
push
data16
adc
loop
lods
bound
(bad)
jns
xchg
add
data16
push
mov
rep
adc
cmp
sub
call
sbb
push
or
iret
(bad)
cmp
in
xor
test
add
les
pop
push
shl
inc
push
pop
inc
out
pop
enter
cs
sub
dec
repz
jo
clc
inc
sub
out
jl
je
push
xor
push
push
movs
xor
or
ins
cmps
jl
and
pop
cmp
pop
or
cmps
dec
lea
sub
pusha
or
and
push
pop
aaa
add
mov
xchg
lock
jae
push
data16
out
(bad)
nop
push
pusha
test
shl
fiadd
cmp
sbb
xor
repz
dec
pusha
test
fdiv
cmps
or
and
or
imul
(bad)
cmp
push
push
ins
test
rcr
or
(bad)
repz
and
push
push
fild
aas
push
adc
cwde
mov
xchg
out
push
cmp
(bad)
call
(bad)
imul
cmp
push
gs
pusha
ret
sti
aad
je
dec
pop
nop
dec
push
ds
or
cmps
add
data16
daa
pop
ins
lods
(bad)
fdivr
mov
sbb
mov
dec
dec
out
out
call
jo
fdiv
imul
mov
mov
fdiv
adc
arpl
imul
imul
pop
push
xchg
int3
loop
ins
cli
push
pop
es
bound
push
sbb
adc
nop
rcl
push
jb
shl
fimul
jo
les
push
ss
inc
js
mov
jl
jle
icebp
mov
(bad)
mov
or
pusha
jg
or
ficomp
(bad)
out
and
(bad)
test
test
test
and
call
mov
dec
mov
jl
mov
(bad)
fwait
xchg
xor
sbb
pop
aam
sahf
mov
jl
dec
sbb
xchg
jbe
lods
mov
inc
mov
fs
mov
ins
mov
aam
mov
(bad)
call
mov
(bad)
enter
cwde
ss
and
les
inc
jmp
mov
xlat
push
outs
pushf
and
movs
outs
xchg
fmul
shr
mov
push
inc
fadd
ins
ss
out
loopne
adc
shl
in
jecxz
mov
fnstcw
call
jmp
retf
ror
add
push
mov
stos
adc
jb
jns
adc
outs
mov
dec
sub
adc
inc
mov
and
xchg
in
outs
sahf
xor
jg
push
adc
jo
jo
xchg
movs
sub
push
lahf
ret
pop
push
sub
inc
jmp
pop
xor
pop
rol
aam
add
and
test
enter
push
fsubp
(bad)
repnz
lock
xchg
pusha
add
dec
inc
sar
xor
pop
pop
sub
cmp
inc
jno
and
xchg
mov
xchg
ds
aaa
and
idiv
es
test
out
cmc
jbe
push
fisubr
sbb
sti
push
in
call
in
push
inc
(bad)
sbb
dec
push
jo
pop
push
push
in
add
dec
add
imul
add
pushf
add
push
push
mov
or
or
das
jecxz
outs
inc
jae
xchg
pop
sbb
push
mov
inc
push
mov
(bad)
and
push
adc
and
ret
add
cmp
sbb
sbb
nop
push
call
cwde
mov
xor
std
jne
sbb
dec
pusha
and
or
jge
call
mov
xor
(bad)
daa
xchg
push
push
push
shl
lock
fstp
cmp
dec
jge
cmp
mov
jmp
ss
pop
fimul
jge
push
icebp
fs
inc
mov
inc
fsubr
addr16
ins
fidivr
xchg
adc
lock
pop
sub
repnz
in
mov
loopne
or
fucomp
inc
xor
mov
clc
pop
add
fnstcw
and
je
loopne
xchg
xor
(bad)
out
dec
aam
add
js
jg
xor
add
popa
inc
ret
frstor
xor
pop
mov
es
inc
cmp
mov
je
daa
loopne
sub
dec
fnstcw
cmp
pop
mov
xor
add
mov
xor
sbb
push
sub
add
ret
rol
addr16
mov
sub
mov
adc
sub
cmp
outs
dec
shl
rcr
add
cwde
mov
rol
test
inc
loopne
sub
xchg
fimul
dec
aam
dec
fmul
(bad)
cmp
jo
jmp
cmp
dec
and
adc
xor
js
pop
ror
popa
push
and
xchg
std
inc
add
leave
and
fdivr
sbb
and
xchg
loope
fldenv
dec
cs
sbb
sub
and
cdq
lea
sbb
test
inc
imul
dec
mov
xchg
xchg
and
ss
xchg
sbb
mov
inc
pop
test
cmp
repnz
jge
fisubr
loopne
in
pop
iret
dec
stos
jmp
inc
iret
or
fadd
and
push
call
push
inc
cld
hlt
mov
movs
in
cld
hlt
fcmovbe
adc
and
movs
jmp
test
pusha
in
fidiv
mov
lea
add
add
call
lods
mov
and
mov
cmc
and
fcomp
jge
es
pusha
or
sub
or
mov
dec
mov
pushf
in
in
add
and
test
xchg
cmps
das
test
nop
add
jle
call
mov
bsf
push
test
pop
jae
add
xchg
call
dec
rcr
scas
pop
xor
inc
ret
pop
imul
push
pop
and
fisub
out
lock
push
pop
int3
xor
pop
ja
out
je
cmp
or
jp
cmp
and
pop
mov
cmc
outs
jnp
dec
test
push
dec
sbb
and
fcom
adc
add
in
and
pop
or
sbb
int3
jne
and
and
je
jmp
xlat
xchg
sbb
push
xor
mov
mov
neg
push
test
aas
or
sub
in
push
or
in
xchg
and
adc
push
cmps
dec
ror
es
add
sbb
and
inc
sbb
sbb
or
mov
sbb
nop
push
adc
sti
nop
cmp
retf
or
movs
hlt
test
mov
jo
daa
add
xchg
aad
je
mov
pop
stos
jl
mov
ret
ins
mov
clc
ret
cmps
ret
mov
push
push
jb
pop
test
pop
cmp
loope
or
arpl
mov
nop
sub
sbb
push
loopne
mov
in
adc
test
rcl
adc
adc
or
jmp
or
xchg
add
dec
jb
cmp
daa
add
in
test
xor
pop
lods
adc
xchg
fcomp
jg
sub
leave
ss
push
lea
push
test
out
mov
and
loop
dec
cld
or
push
or
mov
jnp
and
cmp
pop
in
scas
pop
cmps
test
fmul
add
int3
mov
rcr
enter
cmovle
stos
shl
dec
xchg
xor
iret
mul
mov
push
movs
fwait
cmc
adc
out
ss
adc
inc
inc
cs
test
scas
sub
div
and
and
xchg
rcl
add
and
pop
les
push
push
pop
aad
xchg
and
xchg
xor
mov
mov
mov
mov
push
dec
adc
out
test
movs
mov
movs
movs
pop
shl
mov
movs
test
retf
test
xchg
dec
movs
mov
sub
popf
dec
test
sahf
sar
retf
movs
ins
jl
fs
cmp
jmp
nop
dec
inc
pop
sub
adc
inc
stos
add
mov
adc
mov
mov
aad
daa
push
add
push
add
dec
test
dec
dec
mov
mov
cmp
or
xchg
mov
scas
in
cmp
xchg
in
mov
in
outs
jne
xchg
ds
imul
add
call
iret
jmp
add
pop
je
xor
fsubr
and
or
cmp
aam
dec
inc
dec
pop
call
xchg
add
adc
in
rol
sbb
xchg
mov
enter
les
shl
add
sbb
or
sbb
xor
sub
lds
ret
pop
lock
mov
inc
add
lods
call
ret
test
mov
jmp
jg
ror
push
or
push
sub
xchg
movs
call
lock
xchg
ror
retf
arpl
pop
fist
or
outs
xchg
jmp
mov
push
push
pop
shl
dec
out
adc
and
xor
stos
push
mov
shl
mov
mov
xor
xchg
mov
push
add
movzx
aad
jg
clc
daa
jg
je
fisttp
lods
fild
js
jmp
or
je
pusha
pop
sar
jmp
mov
mov
xchg
jl
mov
sbb
enter
sbb
mov
(bad)
call
xor
xor
add
in
mov
aam
ss
or
push
imul
hlt
pop
and
dec
hlt
jl
xor
les
fsub
add
imul
or
xchg
out
mov
loope
push
dec
mov
sub
fisub
imul
int
les
cs
stc
test
add
in
jge
add
mov
xchg
movs
xor
jae
mov
inc
clc
lds
add
ja
adc
jne
add
fisttp
sub
es
dec
sub
jne
cmp
push
pop
loope
pop
je
and
rol
sub
lock
xor
mov
je
dec
out
test
lods
inc
add
test
dec
in
adc
mov
add
sub
xchg
mov
out
rcl
pop
aas
daa
add
push
in
xor
dec
jle
fist
shl
and
enter
lea
add
jge
jmp
retf
lods
or
or
repnz
mov
aad
dec
adc
mov
pop
mov
fstp
(bad)
xlat
imul
inc
in
jle
fucomp
mov
xor
out
in
lahf
sub
or
loope
push
inc
adc
and
lds
lods
pop
out
and
add
and
and
or
das
das
add
and
sti
ud1
dec
ss
jmp
adc
adc
scas
adc
in
and
cmp
lock
mov
sbb
fadd
mov
pop
clc
enter
push
mov
rcl
in
pop
mov
mov
add
aam
dec
enter
pop
cld
xchg
push
push
movs
test
aas
std
adc
or
xor
push
sbb
jne
es
mov
lock
pop
ja
inc
add
push
jge
pop
test
in
daa
inc
mov
fs
stos
push
dec
sub
loope
adc
push
(bad)
sub
pop
add
scas
sub
fdivrp
dec
pop
cdq
inc
add
push
and
and
and
jnp
not
push
fldcw
push
add
inc
or
push
popa
fiadd
push
push
push
out
lods
inc
outs
push
jnp
and
and
sub
adc
pop
test
aas
retf
aas
or
add
sub
daa
or
xchg
cmp
repz
sub
jne
add
xchg
and
ficom
mov
xchg
jo
xor
dec
add
pop
mov
pop
pushf
jmp
inc
test
add
nop
cmp
jbe
cdq
adc
xor
aaa
sbb
aas
inc
jbe
jb
xchg
das
xor
cmp
inc
and
in
cs
sub
push
xchg
in
pop
retf
shl
ud2
je
adc
mov
push
cmp
or
in
and
addr16
les
push
or
jne
mov
mov
nop
sbb
sbb
sub
std
addr16
dec
shr
or
sbb
pop
or
imul
add
enter
pop
cmp
arpl
and
cli
mov
xor
lods
jmp
call
cdq
dec
push
cmp
dec
cmp
mov
pop
or
adc
sbb
push
xor
cwde
int
imul
lahf
xchg
mov
or
imul
pop
or
push
pop
std
in
inc
push
or
or
fcomp
add
fisttp
fmul
jge
fldcw
ins
adc
int3
or
jg
cmps
xor
cmps
cmp
lods
mov
or
fsub
gs
add
xor
mov
mov
add
dec
xchg
retf
add
dec
test
sti
(bad)
or
inc
push
ret
pop
imul
inc
mov
dec
and
add
push
imul
xor
loope
or
or
nop
or
push
les
pop
pop
dec
mov
lock
adc
jge
cmp
nop
cs
sti
ds
mov
push
sbb
pop
shl
(bad)
shl
mov
or
push
push
fiadd
mov
mov
(bad)
aad
sub
outs
and
mov
add
adc
add
in
add
add
mul
loop
xor
or
mov
pop
jnp
adc
ins
and
xchg
or
xchg
or
stos
or
fyl2x
sbb
ins
push
push
inc
mov
out
nop
out
adc
mov
add
ficom
in
add
neg
not
push
push
sub
das
pop
mov
cmps
cmp
pop
fmul
and
clc
lahf
in
cmc
and
arpl
xchg
in
retf
retf
cmc
sar
out
mov
ffree
pop
(bad)
loope
mov
retf
hlt
es
dec
lock
enter
cld
mov
mov
jno
cmps
add
std
stos
cmp
scas
adc
in
inc
pop
retf
adc
dec
aaa
xor
mov
xchg
and
sti
hlt
mov
pop
loope
ss
retf
push
jns
sbb
adc
adc
retf
ret
gs
xchg
out
mov
push
sahf
mov
cmp
hlt
fisttp
das
push
adc
das
je
outs
sti
mov
push
popa
cmp
dec
mov
scas
scas
bound
pop
ret
jo
mov
scas
sbb
or
nop
pop
div
cmp
add
add
jmp
(bad)
push
mov
jmp
cmp
push
or
xor
or
imul
pop
mov
or
movs
sbb
jae
nop
retf
cmp
outs
fs
int
or
and
mov
inc
cmp
(bad)
cs
and
pop
call
repnz
mov
neg
lock
mov
fadd
leave
and
popa
mov
adc
add
test
mov
dec
into
icebp
imul
lds
jl
jns
cmp
xchg
mov
mov
mov
out
lods
test
ins
and
shr
bound
(bad)
(bad)
fstp
pop
adc
aas
lds
xchg
jle
cmc
cmp
xor
hlt
jb
add
mov
inc
inc
mov
adc
add
or
outs
mov
add
xor
mov
sbb
(bad)
xchg
inc
retf
not
cmp
imul
es
sub
(bad)
adc
jno
gs
push
cld
add
popf
mov
xchg
fild
jmp
jmp
fnstenv
or
cmp
test
inc
push
push
icebp
sar
iret
jae
mov
lock
aas
adc
cmps
es
xchg
push
mov
dec
bnd
pop
ds
jge
sub
movhps
icebp
adc
mov
pop
add
std
add
and
or
hlt
add
jg
je
call
aad
dec
xlat
out
sub
sar
jno
in
add
mov
sub
sub
stos
iret
jg
stc
push
sub
jo
xchg
xchg
pop
ret
(bad)
ds
xor
inc
mov
stos
pop
adc
push
cmp
mov
loopne
adc
push
sahf
ins
xchg
pop
test
add
push
fwait
adc
mov
mov
add
sbb
shr
mov
addr16
fcomp
xchg
loopne
cwde
cmp
js
and
repnz
mov
inc
jb
jae
jb
jmp
add
jp
jb
test
sub
dec
cmp
pop
jg
sbb
xor
mov
sub
sub
mov
sbb
pop
jb
repz
ror
jb
sub
jne
push
and
mov
mov
cld
idiv
sub
je
out
jo
jb
add
test
or
popf
jbe
outs
rcr
or
jo
cs
pop
sub
add
xor
pop
push
std
sub
add
sub
xchg
mov
add
not
push
sbb
xor
imul
cmp
out
scas
sbb
movs
movs
jbe
test
jns
pop
cmp
adc
xchg
or
cmp
xchg
push
sub
cvtdq2ps
push
dec
push
jb
push
stc
cmp
std
(bad)
xor
add
cmp
rcl
ret
or
jns
push
(bad)
fdivr
add
in
in
fninit
fwait
loopne
xlat
dec
cmp
(bad)
aas
test
mov
retf
retf
inc
neg
adc
mov
fsub
imul
jge
cmc
jno
sbb
mov
xchg
add
dec
mov
in
jne
das
fisub
add
std
sbb
jle
cmp
xchg
add
arpl
out
test
mov
inc
sub
add
mov
pop
sub
mov
fld
nop
cmp
das
js
rcl
mov
jmp
adc
or
mov
xchg
(bad)
or
jle
inc
inc
jo
ret
(bad)
xor
mov
pop
mov
fisttp
shl
movs
pop
test
cmc
add
ss
add
int3
or
out
push
or
and
lahf
stos
xchg
cmp
mov
push
or
icebp
(bad)
sbb
mov
sub
xchg
cmp
js
in
add
sbb
fsubr
jno
xchg
inc
pop
clc
jns
dec
cmp
pop
jge
sub
int3
icebp
mov
add
or
enter
cmp
push
rol
mov
cmp
jne
mov
mov
sbb
dec
out
sub
add
je
inc
mov
loop
dec
sbb
jge
cmp
(bad)
xor
mov
dec
pusha
dec
jmp
add
dec
je
xlat
lock
aas
or
cmp
je
dec
aas
or
push
add
dec
fwait
std
adc
sbb
fcom
inc
nop
mov
in
rcr
dec
or
and
mov
jg
push
mov
add
jb
add
add
jne
jns
call
xchg
xchg
popa
pop
push
jmp
cwde
stos
and
jo
imul
(bad)
mov
es
inc
repnz
sbb
cmp
cmp
push
mov
or
lods
cs
cmp
inc
pop
loope
shr
out
xchg
xor
in
std
div
xor
sub
jmp
sub
rcl
cmp
imul
mov
int
and
inc
jns
cmp
sbb
sub
xchg
lock
ins
sbb
retf
aam
adc
pop
je
shl
push
ins
cmp
cmp
js
movs
cmp
adc
mov
and
xchg
jb
xchg
xor
test
xchg
mov
daa
je
sub
mov
imul
pop
imul
je
cmp
je
aas
mov
cmp
je
and
je
or
push
enter
xchg
mov
push
test
or
retf
imul
sub
push
ret
jb
add
jecxz
fcom
pop
fcmove
stos
xlat
jp
loopne
push
pop
pop
and
cmp
cdq
popa
lods
jle
sbb
imul
loopne
add
aas
add
rol
fsub
cmp
nop
cs
mov
jno
mov
mov
test
lahf
test
(bad)
ret
pop
clc
(bad)
jne
sub
sub
pop
or
jbe
and
in
jo
lea
cld
adc
in
and
dec
mov
add
and
popa
call
(bad)
aas
add
add
dec
stos
(bad)
in
mov
mov
scas
dec
lods
pushf
das
inc
pop
adc
inc
jg
push
cmp
jb
call
sub
stc
push
inc
fdivp
xor
or
mov
scas
(bad)
sbb
repnz
add
call
pop
push
mov
push
mov
ret
sub
test
(bad)
in
add
jge
sub
xor
or
test
data16
inc
inc
jbe
inc
pop
movs
rcl
imul
pop
add
xor
push
pop
add
jmp
clc
or
dec
add
pop
add
and
add
xchg
sbb
add
out
js
add
xor
jmp
inc
pop
cld
scas
dec
cdq
jl
bound
hlt
mov
xor
stc
sub
lahf
pop
mov
stos
cmps
cmc
adc
or
rol
pop
pop
mov
adc
dec
and
inc
jb
pushf
mov
and
mov
dec
loop
(bad)
pop
pushf
pop
sti
mov
inc
add
rol
mov
add
push
adc
inc
sti
mov
or
sbb
or
mov
pxor
push
cld
cld
cld
jge
dec
or
inc
pop
fwait
es
or
push
mov
mov
sub
dec
push
push
mov
or
mov
sbb
xchg
nop
repz
adc
add
and
adc
adc
(bad)
mov
es
adc
cmp
lock
icebp
call
(bad)
push
xchg
cmps
call
xchg
shl
xchg
fcom
add
or
mov
inc
xor
nop
fcomp
out
int3
test
sbb
sbb
sar
or
mov
fsub
shr
push
and
int3
inc
aaa
ficom
frstor
add
add
jb
sub
test
add
mov
test
shr
mov
pop
xchg
push
loopne
adc
xchg
xchg
fist
(bad)
sbb
movs
push
fdiv
popa
inc
scas
in
cmps
jne
add
or
lock
mov
addr16
loope
jl
dec
xchg
pop
arpl
repnz
jp
dec
pop
ins
sub
inc
jbe
shl
test
xchg
fld
pop
and
xor
retf
xchg
inc
sbb
or
adc
(bad)
cmps
call
and
adc
or
leave
adc
loopne
push
or
mov
ja
xchg
mov
cdq
xor
sbb
mov
out
dec
or
push
add
ret
jle
test
sbb
enter
push
rol
pop
fldcw
cmp
data16
aas
dec
mov
mov
loopne
xor
push
pop
dec
leave
mov
popf
adc
mov
stos
leave
add
inc
fs
sub
cmp
pop
es
es
push
or
xor
add
aam
retf
xor
xchg
adc
sub
add
or
les
sbb
add
add
jne
bound
out
jns
add
xchg
mov
xor
clc
dec
clc
clc
jp
sbb
pop
sub
or
jbe
retf
push
pop
je
cs
cmp
call
in
popf
(bad)
pop
cmc
test
cmp
int3
addr16
movs
cmps
push
adc
sub
add
pop
jb
xor
fwait
or
push
pop
jo
shl
ss
xchg
fiadd
test
inc
ja
mov
sbb
xchg
dec
ins
cmp
movs
jb
in
xchg
push
lods
nop
inc
cmp
sub
mov
scas
and
push
push
xchg
repz
push
add
jb
cmp
and
xor
icebp
cs
and
daa
add
jb
bound
mov
loope
(bad)
stos
(bad)
inc
ret
lods
rol
inc
fs
mov
mov
xchg
inc
out
mov
mov
stos
shl
iret
sub
xor
adc
ss
xor
or
inc
movs
mov
mov
pop
out
cs
add
lods
ja
rcl
in
iret
in
and
cmp
mov
(bad)
scas
test
push
jno
ret
je
inc
xchg
add
fwait
mov
dec
in
lods
je
mov
lahf
push
mov
loopne
shl
xchg
xchg
jne
or
in
cmp
jne
test
jne
sahf
loopne
and
adc
add
fnstsw
(bad)
dec
imul
fmul
dec
adc
sub
movs
mov
mov
in
jle
pop
xchg
cdq
mov
es
(bad)
clc
iret
in
mov
xchg
nop
push
pusha
cmp
pusha
icebp
jmp
mov
or
mov
inc
fs
(bad)
shl
inc
gs
ror
add
cdq
pusha
sub
push
and
daa
mov
adc
test
pop
sbb
ss
push
hlt
and
or
push
cmp
aaa
mov
sub
aaa
push
cmp
mov
xor
inc
mov
jae
xor
shl
pop
call
clc
mov
fwait
push
mov
es
sti
cmp
dec
(bad)
push
xor
fsubrp
pop
cmp
inc
push
push
cs
push
xchg
jae
mov
xchg
lahf
out
daa
iret
stos
mov
retf
push
(bad)
leave
idiv
loope
test
fsubr
sbb
and
cs
cmp
inc
iret
jnp
popf
dec
pop
pop
gs
jo
outs
iret
mov
das
xchg
xchg
pushf
pop
cmps
xchg
dec
outs
xlat
das
mov
mov
sahf
rcr
pop
jecxz
jmp
repz
mov
add
cs
dec
dec
fidiv
sub
add
mov
and
mov
adc
ins
fiadd
xor
and
pop
fs
and
dec
jge
add
fild
ds
dec
xor
and
popa
pop
fs
dec
cmps
ins
gs
and
es
jle
adc
leave
add
push
or
xor
and
sbb
xor
and
adc
leave
and
dec
push
pop
outs
and
dec
xor
push
movs
jmp
add
jns
pop
jno
imul
popa
sbb
push
call
test
inc
dec
cmp
sub
xor
outs
and
dec
push
jno
arpl
fld
jmp
sub
jmp
add
mul
or
and
dec
add
add
or
imul
or
add
mov
add
ror
pop
sbb
push
in
retf
sbb
sbb
aas
push
pop
jnp
inc
pop
xlat
mov
leave
(bad)
iret
repz
je
push
jg
mov
retf
call
pop
enter
out
sub
out
sahf
out
(bad)
call
fild
mov
push
sbb
xor
jns
out
bound
call
mov
frstor
mov
es
rcr
add
leave
fidiv
xor
pop
push
ret
xor
es
pop
add
xor
and
out
xor
mov
jl
cmp
or
es
ins
lods
pop
into
leave
dec
sbb
or
mov
leave
leave
sbb
or
loope
push
xchg
scas
and
or
and
xchg
add
pushf
add
jl
idiv
mov
repnz
retf
push
mov
mov
rol
push
xlat
push
loop
jnp
in
in
clc
aas
add
push
push
sbb
cmp
int3
pop
and
cmp
out
ficom
pop
data16
inc
xchg
es
xchg
pop
popf
ds
ja
jbe
movsx
xchg
aam
mov
in
jmp
ja
push
push
push
not
imul
(bad)
(bad)
nop
out
sahf
inc
dec
push
pop
data16
lds
outs
pop
jbe
jle
int
rcr
adc
and
sub
pusha
leave
and
dec
adc
adc
xor
or
leave
and
push
push
sub
adc
adc
and
addr16
xor
and
jle
add
and
dec
cs
and
dec
xor
sub
xchg
dec
xor
inc
dec
ss
xor
and
push
xchg
xchg
xchg
xchg
add
or
xchg
pop
sub
inc
xchg
xchg
xchg
xchg
dec
aaa
jae
pop
data16
nop
imul
sub
jb
sub
cs
je
sub
je
jmp
jmp
adc
jmp
xstore-rng
cmps
test
push
aam
add
jno
pop
cmp
cmp
clc
adc
cld
and
push
xchg
sub
sbb
xor
adc
adc
sti
adc
jmp
jmp
retf
add
add
pop
call
sahf
mov
cmp
dec
je
(bad)
or
jl
pop
add
gs
mov
dec
jmp
cmp
sahf
fbld
adc
mov
xchg
sub
sub
in
jmp
dec
frstor
jmp
nop
adc
add
add
and
adc
es
stos
popf
adc
inc
ror
jb
sbb
xor
leavew
jge
in
sub
dec
jb
je
ds
inc
or
out
and
sbb
jmp
out
xlat
add
leave
add
test
nop
inc
icebp
loopne
jl
mov
loop
cmp
cmp
xor
push
aam
push
mov
pop
rcl
test
cmp
and
add
out
dec
dec
dec
dec
xor
xor
pop
and
add
stos
jl
cmc
add
rcr
movs
stc
add
or
add
sub
and
xor
inc
sbb
adc
daa
and
and
or
adc
sub
mov
and
cmp
sar
mov
push
popa
ins
ja
repz
repz
repz
(bad)
iret
(bad)
lock
sahf
out
ds
rcl
sbb
xor
out
cmp
out
sahf
out
jg
xchg
mov
stos
mov
ret
retf
sar
out
fninit
jmp
sti
adc
dec
repz
or
sbb
or
adc
fs
sub
cmp
pusha
fs
dec
es
dec
xchg
dec
es
add
cdq
sub
aaa
es
fs
cmp
popa
arpl
dec
jle
sub
xchg
imul
cs
and
or
push
xchg
xchg
xchg
mov
inc
dec
push
jb
das
or
sbb
inc
inc
dec
push
out
in
jae
jnp
cdq
adc
push
mov
fcomp
pop
out
repnz
fsubr
jmp
(bad)
pop
sahf
test
(bad)
push
sub
imul
push
aas
dec
push
inc
pusha
es
ja
jbe
push
mov
xchg
mov
lods
mov
fistp
cli
es
jae
inc
sbb
xor
inc
leave
repz
jge
xlat
outs
pop
es
fidivr
mov
xchg
pushf
movs
lods
(bad)
dec
sahf
div
mov
aam
push
in
aaa
hlt
push
lods
hlt
cmp
cld
add
sbb
dec
rcl
fisub
sub
sbb
clc
push
dec
es
push
out
leave
and
fcom
xchg
dec
xor
adc
dec
xor
jns
and
dec
xor
and
cmp
leave
and
inc
inc
dec
leave
and
dec
jb
pop
and
dec
xor
jge
dec
xor
add
xor
and
adc
jp
and
sub
pushf
pushf
pushf
pushf
inc
inc
dec
jae
pushf
pushf
pushf
inc
pop
imul
pushf
jle
rcl
xor
xchg
add
mov
jp
fsub
push
or
xor
or
frstor
sahf
xor
adc
sub
sbb
ins
jnp
movs
or
push
pop
dec
fcmovb
and
push
sub
iret
repz
inc
dec
pop
arpl
cmp
rep
jns
(bad)
call
mov
iret
repz
jmp
iret
cmp
adc
iret
push
sub
cmps
mov
repz
push
in
movs
and
retf
add
adc
or
inc
adc
or
js
push
dec
es
push
pop
ss
xchg
fstp
adc
push
push
dec
sbb
in
sbb
push
repz
test
in
in
test
popa
push
je
push
leave
in
enter
push
ja
jecxz
dec
inc
jg
ja
fstp
add
movs
add
push
cmps
bound
fild
sahf
out
sahf
retf
loop
repnz
adc
cli
lods
and
add
jge
push
cmp
mov
add
push
pop
pop
mov
jns
xor
push
ds
push
pop
push
sahf
out
jne
mov
out
mov
int
dec
repz
jecxz
stc
add
bndldx
repz
xor
inc
push
repz
repz
addr16
mov
repz
xchg
sahf
test
iret
repz
loopne
test
jns
out
or
and
out
dec
pop
outs
sahf
out
sahf
jp
nop
fwait
cmps
mov
sahf
out
mov
repz
out
dec
loopne
pop
iret
repz
sub
cmp
repz
ja
lea
mov
out
cmp
(bad)
lock
push
loope
out
sahf
adc
xor
jns
pop
imul
xchg
mov
jns
ror
loop
clc
cmp
loop
push
push
es
sahf
out
cs
dec
sahf
out
sahf
push
pop
data16
jbe
jmp
and
leave
and
es
adc
xchg
dec
xor
sbb
xchg
dec
xor
sub
cmp
dec
xor
and
mov
xchg
xchg
in
xchg
dec
xchg
and
mov
sbb
adc
cdq
fs
ins
xchg
and
jb
dec
not
push
xchg
inc
scas
dec
push
sub
xchg
dec
xor
adc
xor
and
pop
pop
xor
and
pop
pop
pop
xor
pop
pusha
leave
and
dec
popa
add
es
arpl
fs
addr16
fs
dec
push
ins
cmp
and
test
fs
dec
xor
xchg
dec
es
xor
cdq
fs
cmp
es
fs
cmp
cmp
cdq
fs
dec
ds
dec
fs
dec
es
inc
inc
xchg
dec
es
inc
xor
cdq
fs
dec
aaa
es
fs
dec
dec
dec
inc
cdq
fs
dec
dec
adc
adc
adc
dec
es
adc
cdq
fs
fs
sbb
sbb
popf
fs
dec
push
pop
das
add
in
pextrw
and
add
add
in
in
add
add
add
add
pop
push
sub
pop
sub
das
sub
add
add
and
dec
fisttp
inc
cmp
add
in
(bad)
iret
stc
cmp
repz
lock
push
in
jns
cmps
adc
xor
dec
push
pop
imul
xchg
mov
sahf
out
int3
xlat
loop
out
call
sbb
repz
cmc
jmp
inc
push
pop
jns
jnp
pushw
jno
jl
xchg
popf
test
push
mov
jae
fucomip
push
add
iret
repz
or
and
inc
cmp
repz
pop
arpl
repz
repz
repz
mov
repnz
cmps
stc
cmp
or
adc
sub
out
xor
dec
push
pusha
out
sahf
out
jbe
mov
mov
fnstenv
out
in
cli
add
iret
repz
xor
iret
repz
push
jge
lea
cmp
lods
mov
(bad)
iret
repz
fucom
in
movs
pop
imul
es
(bad)
leave
inc
rcl
fsub
loopne
xor
and
in
xor
and
in
jmp
call
dec
xor
in
out
xchg
dec
xor
out
icebp
repz
xor
and
div
xor
and
cli
stc
sti
in
xchg
dec
cld
and
mov
dec
es
cmps
and
fist
and
sbb
xchg
dec
test
and
ss
and
fcomp
fs
out
push
movs
add
ins
xchg
dec
adc
sub
add
stos
jne
fist
es
es
fs
clc
mov
mov
sbb
xchg
add
jb
xchg
adc
dec
xor
mov
xchg
fcom
dec
fwait
ss
fist
adc
rcl
and
sub
lea
mov
es
sub
adc
push
mov
imul
xor
and
ret
and
dec
ror
and
dec
xor
into
iret
mov
int3
rcl
push
enter
adc
repnz
into
imul
rcr
add
add
jb
repnz
xor
add
push
dec
add
je
scas
inc
pop
fdivr
mov
jne
add
mov
(bad)
jge
sub
xlat
es
xor
add
popa
arpl
xor
iret
ins
mul
loop
in
pop
test
(bad)
call
mov
ds
rcr
out
std
or
repz
rol
adc
sub
out
iret
in
dec
in
aas
push
pusha
push
imul
jns
or
into
ftst
out
repz
out
add
iret
repz
xor
push
pop
push
jae
mov
stos
mov
retf
(bad)
cmps
stc
cmp
loope
test
jns
sbb
cmp
sahf
out
pop
gs
xchg
jns
out
pushf
cmps
mov
sahf
out
sahf
enter
hlt
(bad)
cmp
sar
adc
cmp
repz
dec
push
bound
repz
js
mov
repz
(bad)
out
call
adc
and
sahf
out
sahf
dec
push
pop
gs
jne
popf
out
jge
lea
mov
loope
xchg
adc
xchg
sub
and
and
dec
and
pusha
add
fs
jge
ins
sbb
and
add
adc
dec
xor
and
adc
fwait
fs
arpl
popa
cmp
xchg
dec
cmps
dec
gs
mov
jecxz
jle
add
pop
cmc
push
inc
fwait
fs
fcmovnb
sub
cmps
adc
cli
ins
test
and
lods
lods
and
and
scas
jnp
dec
jb
pop
adc
jnp
leave
inc
sbb
dec
mov
mov
add
inc
cmp
(bad)
ds
add
cdq
push
shl
xchg
fstp
les
cmp
movs
dec
push
adc
fs
dec
leave
sbb
fisttp
dec
sbb
inc
dec
fwait
fs
into
push
adc
xchg
inc
shr
cdq
in
sub
push
(bad)
xlat
ss
xchg
dec
pop
outs
adc
and
jo
inc
fnsave
ins
xchg
dec
(bad)
fild
push
xchg
fmul
dec
int3
inc
loop
fisub
sub
pop
adc
int3
sub
and
jmp
and
xor
pushf
ss
movups
enter
add
hlt
push
es
neg
push
dec
dec
les
inc
data16
out
retf
retf
xchg
push
mov
cld
add
add
dec
cmps
leave
test
xor
jno
adc
inc
push
mov
test
xchg
inc
xchg
mov
sub
push
xchg
or
(bad)
test
mov
mov
adc
push
sahf
out
sahf
pop
gs
xchg
pushf
cmps
mov
enter
out
fsubrp
hlt
dec
repz
or
adc
cmp
repz
push
or
mov
out
cmp
(bad)
lock
push
cmc
sahf
out
sahf
adc
and
xor
jns
out
inc
dec
push
pop
popa
push
jne
out
jno
xchg
add
sar
lea
xchg
fsubr
push
(bad)
adc
and
and
cdq
or
sub
dec
xor
or
or
push
add
sbb
and
adc
and
xchg
test
jo
sbb
ss
in
pop
sub
adc
es
pop
push
es
fs
push
pop
or
add
js
add
push
call
test
pop
xchg
push
push
call
pop
push
cmp
dec
movs
jmp
sub
inc
push
imul
push
push
retf
daa
inc
push
or
rcr
aas
pop
pop
ja
or
in
test
fwait
cmp
repz
mov
(bad)
sar
cmp
repz
repz
mul
jns
cmps
adc
dec
jne
sahf
out
sahf
stos
mov
int3
aam
jl
out
in
hlt
cld
add
and
iret
ror
cmp
mov
inc
(bad)
call
push
out
dec
(bad)
xchg
dec
outs
dec
imul
and
xor
mov
jge
mov
sub
sbb
sub
cdq
out
jnp
adc
imul
or
(bad)
and
xor
add
and
sub
pop
xor
aaa
add
mov
cmp
sub
(bad)
sub
in
push
dec
pop
add
adc
in
or
(bad)
pop
dec
adc
leave
pop
pusha
xchg
sbb
mov
xor
dec
stos
mov
cwde
rcl
popa
xor
hlt
adc
xor
ins
push
inc
ret
cmp
stos
neg
mov
jbe
and
mov
sub
out
lods
inc
pop
fisttp
sub
inc
add
inc
adc
stos
(bad)
fnstcw
inc
cmps
push
jnp
hlt
inc
dec
cdq
pop
push
pop
neg
clc
xchg
or
leave
xchg
pop
xchg
jns
dec
mov
cmps
ss
sar
and
xchg
into
adc
ror
xchg
xor
and
popf
outs
stc
sti
push
add
xor
push
ss
test
pop
cld
or
mov
(bad)
adc
pop
scas
les
pop
xor
daa
push
std
and
aaa
fimul
call
ror
mov
ja
mov
mov
mov
or
inc
xchg
or
lods
pop
jg
dec
bound
and
loopne
in
dec
and
pop
jmp
nop
ret
(bad)
and
shl
mov
loopne
bound
(bad)
or
sub
pop
sub
mov
outs
push
inc
push
xchg
out
hlt
fsubr
add
nop
push
or
mov
fadd
mov
(bad)
jmp
lock
(bad)
stos
or
push
dec
ins
dec
jg
pop
pop
sar
in
or
adc
pusha
in
mov
push
sub
and
mov
cmps
push
mov
xor
popa
aaa
mov
(bad)
mov
push
and
call
movhps
shl
and
sbb
pop
loope
aam
addr16
ins
cmps
push
(bad)
cli
shl
inc
daa
sub
lds
sbb
add
xor
jg
sbb
add
pop
hlt
imul
cmps
dec
pop
dec
inc
mov
out
fcom
call
and
and
or
adc
jbe
jge
in
jg
xor
sbb
mov
inc
xchg
xchg
lods
inc
push
popa
iret
add
out
int
adc
xor
iret
icebp
in
jmp
int
and
mov
ficom
jle
sbb
inc
xchg
daa
movs
push
mov
adc
pop
aas
dec
cs
sbb
add
add
pop
adc
add
xlat
das
adc
xchg
das
push
pop
sub
mov
cmp
mov
and
js
neg
rcl
pusha
or
and
push
push
adc
and
vmwrite
pushf
inc
(bad)
adc
(bad)
movs
cs
sbb
(bad)
rcr
push
shr
imul
mov
or
(bad)
pusha
gs
ret
push
cmps
adc
xor
inc
pusha
or
sbb
cmp
jmp
add
push
mov
in
push
add
mov
and
mov
bound
and
popa
ins
xchg
add
stos
mov
inc
jmp
push
outs
fmul
loope
or
lock
dec
lock
mov
pop
push
add
cwde
ret
add
add
dec
cmp
or
inc
add
test
sbb
in
cmp
sbb
mov
shl
or
test
mov
enter
xor
mov
and
dec
push
mov
pop
xlat
mov
add
or
or
mov
imul
sub
lods
mov
and
sbb
xchg
dec
mov
and
sar
xchg
pop
dec
or
jg
outs
add
ret
mov
lock
mov
adc
dec
rcl
or
add
mov
inc
sbb
add
xchg
sbb
mov
mov
xor
sbb
iret
or
jl
add
sub
add
inc
jp
and
lock
stos
shl
jmp
jmp
add
leave
or
fisubr
stos
add
rcl
add
dec
and
fcmovnbe
mov
fmul
gs
mov
mov
popf
inc
imul
cs
std
jle
mov
shr
adc
inc
cmovns
mov
hlt
(bad)
(bad)
fisttp
lea
call
jmp
lods
fs
ins
or
hlt
or
dec
fst
rol
jb
add
add
(bad)
sti
xchg
sub
xor
push
xor
mov
fstp
sub
pop
adc
push
jo
dec
clc
jg
pushf
sbb
xchg
fbstp
scas
dec
or
out
push
dec
xor
fisubr
mov
mov
ss
fstp
ret
pop
push
sbb
dec
inc
ds
cmps
lods
aaa
adc
xor
shl
jle
push
adc
xor
popa
popf
xchg
ret
fneni(8087
mov
jl
jbe
inc
or
shl
push
jle
enter
cmp
jb
(bad)
mov
repnz
push
jmp
fbstp
add
add
push
(bad)
pop
jno
inc
cmps
and
mov
sbb
sbb
stos
inc
pop
mov
repnz
(bad)
addr16
call
movs
jae
and
and
popa
dec
add
xor
test
ret
ss
out
fsubr
addr16
sub
push
push
cs
adc
inc
rcr
in
xchg
fild
push
fnstsw
cmp
and
xchg
iret
push
inc
sbb
in
ror
inc
sti
inc
cmp
push
dec
or
inc
cs
and
stos
push
mov
adc
iret
jbe
(bad)
cmp
leave
cmp
inc
cwde
in
cmp
xor
jae
sbb
xor
pusha
adc
xor
rol
dec
fcom
pop
cmps
iret
fs
shl
leave
sub
mov
arpl
sub
ret
xchg
xchg
outs
ficom
daa
mov
push
ss
lds
push
mov
push
sbb
nop
inc
inc
inc
sbb
inc
inc
inc
add
nop
dec
cmps
fs
dec
dec
in
cdq
fs
dec
dec
es
xchg
add
inc
or
mov
push
or
pop
enter
push
ins
in
test
retf
fs
adc
mov
push
lahf
mov
icebp
and
jno
dec
daa
jl
loop
jge
arpl
ins
jmp
jbe
cmp
in
inc
or
xor
sbb
dec
inc
push
dec
push
dec
outs
dec
ins
or
in
xchg
sbb
loopne
push
mov
add
dec
dec
nop
push
nop
pop
jb
iret
push
movs
adc
loop
cmps
dec
lea
out
sbb
popf
push
push
fwait
js
mov
or
dec
dec
add
pop
jb
sub
or
push
jmp
jbe
loope
rol
wbinvd
adc
aaa
cmp
add
movs
stos
iret
outs
xor
add
inc
inc
mov
push
cmc
push
mov
push
popf
(bad)
mov
pushf
push
hlt
call
fisubr
or
push
cmp
xor
mov
or
or
cmp
add
stc
fs
mov
and
ins
div
jno
push
mov
push
jmp
mov
mov
aas
cdq
ret
adc
lea
shl
nop
sub
xchg
sahf
shl
stos
das
xor
gs
inc
push
neg
inc
pop
push
push
inc
cmp
inc
dec
dec
and
push
addr16
jp
adc
sub
lock
es
rol
jg
ss
mov
arpl
icebp
repnz
xor
movs
test
sbb
mov
ja
ret
aaa
dec
mov
ret
inc
and
sub
mov
cmp
enter
dec
inc
pushf
dec
adc
sti
fs
sbb
sbb
loopne
lock
adc
adc
mov
and
add
sub
sbb
or
sbb
mov
sbb
mov
mov
cli
push
mov
fs
and
add
or
push
sbb
or
dec
jb
hlt
mov
enter
scas
loopne
inc
out
ss
or
dec
sbb
inc
fnstenv
sbb
sub
cwde
cmp
popf
and
fneni(8087
sbb
ret
and
jae
icebp
or
xor
and
or
(bad)
lock
or
add
cmp
test
xchg
lock
sbb
mov
adc
jg
adc
enter
std
aad
add
cwde
sbb
push
add
add
dec
add
add
cmp
cmp
test
lock
cmp
retf
rol
aas
sub
mov
and
sar
sbb
hlt
or
inc
repz
int
jge
sar
mov
xlat
push
xchg
adc
ret
xchg
leave
and
je
imul
mov
sbb
adc
sbb
and
shl
sbb
out
and
add
or
mov
sbb
out
mov
je
dec
and
dec
test
cli
mov
and
iret
add
scas
and
dec
jecxz
int3
or
gs
and
and
jb
dec
or
mov
movs
es
cmp
enter
adc
das
jg
das
lds
add
ja
pusha
mov
(bad)
cdq
popa
test
jne
rep
add
loope
xchg
and
sub
mov
push
dec
in
loope
adc
cmc
adc
shl
jg
popf
jo
dec
xchg
sbb
sub
ficom
out
icebp
or
xor
sbb
add
adc
push
imul
dec
sub
iret
int3
es
test
ja
push
or
clc
or
add
push
and
and
mov
lods
push
cmp
adc
and
dec
fnstcw
sbb
and
jae
movlps
sbb
(bad)
adc
cmp
add
add
inc
adc
rol
add
sbb
ins
sbb
and
adc
fsubr
inc
cdq
push
jo
jo
imul
mov
xchg
or
inc
push
sub
dec
shr
pop
ret
aaa
xchg
mov
mov
scas
pushf
and
adc
push
in
xchg
aaa
and
movs
sub
inc
xchg
inc
jo
mov
inc
ja
mov
pop
pop
or
inc
hlt
dec
call
and
adc
inc
xor
add
add
cmp
sub
xor
adc
xchg
aas
mov
imul
cs
mov
sub
mov
sub
and
jne
lahf
call
cdq
push
jo
dec
fld
fs
dec
xchg
xchg
or
aaa
rol
aaa
(bad)
shl
jg
imul
cmp
or
pop
adc
ror
dec
pop
inc
lock
pop
adc
mov
jecxz
cmps
jecxz
mov
shr
sbb
add
clc
inc
imul
or
dec
mov
mov
test
or
test
and
test
mov
enter
popa
xchg
adc
sub
dec
inc
push
out
sub
add
sbb
add
and
in
test
pop
(bad)
jmp
xchg
nop
inc
inc
(bad)
hlt
jecxz
mov
scas
and
add
mov
sbb
pop
mov
dec
inc
aad
mov
clc
adc
les
mov
mov
pop
xor
das
das
jmp
movs
int
or
gs
cmp
or
xchg
out
pop
push
pop
jnp
pop
outs
frstor
ret
je
stc
and
cmp
add
sub
jmp
rol
adc
sub
sub
adc
push
add
aad
into
adc
add
loopne
add
loope
sub
push
jno
pop
ret
adc
adc
push
sub
(bad)
lods
popf
pop
jge
icebp
lds
je
mov
jbe
aas
inc
inc
adc
jne
jne
shl
or
lock
inc
cmc
jg
xchg
ins
in
dec
jmp
out
shr
and
bound
mov
(bad)
xor
nop
add
sub
add
and
add
add
xchg
pop
aaa
add
js
dec
xchg
ins
dec
or
aaa
adc
or
xchg
ins
je
popa
aad
sbb
adc
les
es
aaa
cwde
jl
push
cmps
push
push
sub
(bad)
add
sti
add
and
adc
inc
or
xor
call
mov
ret
mov
cmp
push
xor
adc
pop
sub
jmp
pop
(bad)
and
pop
pop
xchg
add
mov
fsubr
add
jb
pushf
mov
xor
jmp
xchg
dec
in
jge
or
jb
dec
cmp
in
xor
imul
mov
sub
or
mov
(bad)
sub
fcomp
movs
add
imul
imul
or
lock
push
cmp
call
call
fwait
daa
faddp
ins
inc
pop
test
cmp
movs
in
jb
sbb
loopne
sub
adc
pop
enter
xor
mov
add
mov
pushf
xchg
inc
hlt
lds
daa
hlt
adc
inc
or
mov
cs
fs
in
jne
push
enter
aad
or
inc
dec
or
cmps
test
mov
scas
and
adc
add
lods
xor
and
add
inc
inc
xor
dec
xchg
or
in
or
pop
pop
pop
scas
std
inc
dec
mov
iret
(bad)
xchg
or
in
adc
cmc
test
adc
and
jns
push
cmp
outs
nop
pop
jo
cmp
ret
push
xchg
sub
push
and
pop
imul
cmp
xor
(bad)
nop
stos
mov
or
enter
dec
mov
aam
rcl
xor
sbb
and
xchg
pop
or
nop
and
data16
mov
push
ror
xor
add
fimul
xlat
push
and
adc
shl
popa
bts
xor
adc
xor
dec
loope
adc
inc
cmp
cmp
enter
pop
cs
cmp
(bad)
aaa
xor
adc
jo
(bad)
adc
and
test
mov
xor
dec
pop
jle
xor
sar
daa
inc
jb
and
mov
add
mov
ret
sub
inc
ins
push
js
jae
and
add
call
push
out
mov
cmp
fwait
dec
push
and
adc
sbb
adc
lahf
dec
ss
lock
jbe
push
movs
ins
push
inc
dec
pop
mov
cmp
int
cmp
dec
dec
ret
inc
mov
cwde
sub
xchg
cmp
jnp
cmp
pop
movs
cmp
jb
pop
adc
fsubr
xchg
out
push
sbb
add
fmul
pop
adc
mov
add
jmp
cmp
arpl
sbb
inc
movs
sbb
call
in
aaa
xor
add
scas
loopne
xlat
push
es
pop
add
and
pop
cmp
mul
add
adc
test
or
cmps
inc
push
adc
inc
xor
jmp
ins
cmp
jb
adc
push
loopne
jnp
fs
xor
aaa
push
pop
push
hlt
mov
sub
cmp
or
cmp
sub
adc
aaa
adc
inc
das
inc
adc
fcom
bound
push
mov
and
(bad)
aas
loopne
pop
xor
jl
les
jg
test
cwde
pop
ret
push
and
in
adc
and
hlt
in
add
mov
adc
or
aaa
add
adc
mov
int
jne
cmp
adc
add
or
inc
cmp
xlat
dec
xor
call
sub
rcl
cmp
add
mov
sub
inc
add
inc
push
nop
pop
mov
sub
pop
mov
fsubr
dec
or
shl
(bad)
aas
xchg
and
sub
loope
or
pop
mov
mov
or
je
inc
loopne
mov
das
mov
fist
pop
popa
jmp
sbb
mov
xor
mov
add
mov
jge
adc
jne
mov
add
jmp
(bad)
mov
test
xchg
pop
push
test
xor
mov
pop
pop
and
and
pop
(bad)
jno
and
inc
dec
dec
adc
je
inc
test
pushf
dec
add
mov
jmp
dec
lods
add
popf
pop
inc
arpl
cwde
and
je
and
sbb
sub
sbb
push
dec
add
les
icebp
bound
lock
mov
bound
or
inc
mov
jg
repnz
inc
pop
mov
sub
push
add
lock
adc
shl
adc
adc
loope
adc
inc
test
inc
xchg
lods
cs
mov
and
mov
iret
out
mov
xchg
or
sbb
dec
inc
push
add
xlat
stc
push
mov
add
xchg
inc
add
cld
inc
cmp
mov
adc
leave
adc
nop
mov
xlat
sbb
arpl
jge
lock
xchg
mov
inc
push
add
inc
inc
inc
dec
vcvttss2si
sbb
fst
xor
and
xor
ins
push
rcr
dec
mov
xor
xchg
pop
(bad)
jns
ja
add
outs
std
xchg
gs
jo
lahf
xor
xchg
mov
popf
inc
cdq
xor
add
cmp
(bad)
fcmovu
sahf
or
push
inc
movs
(bad)
rcl
div
retf
adc
fadd
add
jne
(bad)
mov
jbe
movs
(bad)
adc
push
and
sbb
pop
dec
xor
in
xchg
push
inc
fucomip
out
inc
jae
adc
call
jae
imul
(bad)
in
pop
adc
sub
pop
cmps
ret
xor
inc
pop
mov
jo
mov
mov
arpl
jb
icebp
push
inc
push
and
dec
fbld
cmp
scas
or
stos
call
call
enter
lock
cmp
adc
in
adc
inc
dec
dec
loope
rol
addr16
mov
aas
or
and
imul
fcom
rcr
jge
xor
mov
mov
sbb
leave
and
data16
stc
add
xor
inc
mov
hlt
add
inc
repnz
out
push
and
ja
push
mov
add
rcl
cwde
xor
and
or
adc
mov
or
adc
in
xlat
mov
add
add
add
mov
test
sub
dec
ja
in
sub
loopne
mov
sbb
sar
dec
loope
add
ret
ds
mov
jno
inc
or
fwait
xor
dec
pop
add
adc
inc
cs
add
out
pop
add
data16
fst
push
jno
ret
dec
mov
mov
cld
dec
clc
jecxz
dec
push
loope
mov
ror
mov
cs
addr16
dec
aaa
xchg
test
xchg
sbb
lea
ins
dec
sbb
inc
stos
sub
add
mov
dec
dec
and
or
lahf
sbb
mov
jb
sbb
dec
xor
pop
sub
push
inc
test
sbb
jg
and
in
add
jmp
cmp
dec
lds
xchg
and
and
push
jbe
int
mov
ins
das
pop
cmp
mov
sub
cmp
es
push
sub
inc
jecxz
iret
sbb
inc
ss
aad
and
dec
pop
fstp
cld
push
pusha
push
fadd
and
adc
rcl
push
(bad)
icebp
ss
in
push
out
pop
ror
push
pop
gs
push
aaa
jo
pop
adc
test
loopne
mov
xchg
pusha
cwde
and
xor
dec
pop
or
inc
or
ret
pop
rcl
cmp
adc
mov
fist
pusha
popa
mov
xchg
push
cdq
adc
add
fisttp
adc
mov
mov
add
(bad)
out
xor
ins
push
cmp
mov
push
and
add
cmp
push
mov
pop
imul
test
rcl
lahf
pusha
(bad)
jbe
xchg
in
mov
popa
lahf
stc
sub
sub
pop
and
(bad)
or
pushf
push
cmp
loopne
add
add
bound
stc
dec
or
sub
sbb
inc
adc
nop
and
mov
cdq
mov
in
jns
push
sub
clc
adc
(bad)
and
lods
lods
xor
sbb
nop
and
mov
sbb
sbb
add
sub
ja
dec
pusha
jo
pop
(bad)
or
cdq
and
jl
pop
pop
movs
inc
dec
pushf
pop
pop
scas
inc
les
gs
mov
mov
sub
and
mov
mov
js
lahf
retf
jb
xor
push
pop
xor
mov
outs
es
xor
daa
lock
stc
daa
xor
push
or
sub
lea
rol
stos
mov
add
or
and
aas
aaa
or
nop
pop
cmp
xchg
cmp
pop
cmp
and
cmp
pop
jg
push
jb
jb
pop
inc
inc
push
cwde
push
ja
mov
or
pop
and
sbb
xchg
pop
cmp
add
cmp
or
add
adc
mov
loope
mov
pop
adc
popa
dec
cmp
inc
in
inc
ins
stos
adc
jno
jg
in
jo
mov
mov
test
cmp
stos
inc
dec
push
(bad)
popa
dec
int
sub
cmps
mov
mov
clc
movs
test
xchg
adc
scas
out
daa
pop
jle
mov
mov
loopne
and
xor
xchg
loope
xchg
jne
imul
push
repz
popa
push
dec
popf
add
test
dec
leave
adc
rsm
fmul
xchg
fmul
add
adc
xor
adc
aam
test
push
add
add
les
mov
pop
or
inc
not
xor
mov
jmp
xor
lods
dec
add
pop
mov
adc
je
and
or
inc
xchg
and
jg
dec
pusha
popf
push
fist
or
popa
inc
ja
push
xchg
pop
test
hlt
sbb
sub
mov
push
fld
bound
push
push
sub
hlt
lock
inc
fist
nop
nop
push
push
data16
pop
or
add
je
mov
pusha
lea
out
or
add
out
adc
lahf
mov
and
fcom
dec
shl
in
add
addr16
repnz
inc
test
xor
xchg
xor
push
or
or
fnstsw
cmps
imul
adc
fnstsw
cmps
test
adc
xor
pop
leave
sub
sub
mov
and
dec
pop
in
xchg
enter
pop
cmc
lds
pop
jmp
mov
dec
mov
cmp
cmp
add
in
xor
inc
sbb
ror
and
lahf
bound
mov
out
mov
cwde
inc
out
or
add
arpl
sbb
arpl
add
dec
rcr
or
fsub
xor
stos
in
lds
retw
jmp
add
out
add
push
push
sub
push
movs
popf
sbb
adc
sbb
jne
mov
fisub
sub
mov
sbb
call
push
(bad)
lods
and
adc
leave
(bad)
fimul
in
sub
sub
adc
dec
sub
and
lock
dec
test
imul
and
add
pop
jg
add
imul
cmp
movs
inc
arpl
add
mov
or
imul
outs
and
bound
sub
(bad)
mov
xchg
into
cmp
outs
or
fwait
xchg
mov
adc
clc
test
push
jno
jb
rcl
into
jb
push
xchg
or
scas
inc
nop
pop
xor
add
dec
shl
test
dec
call
pop
xchg
push
leave
mov
mov
popa
add
shl
ss
and
sub
add
jmp
popf
cwde
and
push
cmp
out
mov
inc
jp
imul
dec
sub
test
sbb
add
les
lock
pop
pop
ins
jnp
push
(bad)
jae
cmp
inc
pusha
or
aas
rol
clc
adc
push
mov
js
sub
adc
bound
inc
mov
sbb
sub
lds
mov
cdq
inc
cmp
dec
(bad)
sti
outs
mov
inc
dec
loopne
sub
or
enter
cmp
inc
sub
fcom
lods
push
add
repnz
push
pusha
enter
pop
mov
mov
int
je
scas
sbb
and
enter
or
push
jo
sub
retf
xchg
jbe
cmc
mov
nop
jge
pop
das
sbb
push
dec
pop
dec
and
lea
push
xor
mov
retf
loopne
sub
add
imul
clc
push
mov
jecxz
js
xor
sub
mov
retf
sbb
push
hlt
or
pushf
stos
movhps
pop
adc
inc
das
add
cmps
add
push
inc
push
cmp
dec
mov
add
gs
ds
dec
test
mov
scas
sub
aaa
imul
movs
and
outs
xchg
(bad)
in
icebp
and
out
pop
add
sbb
adc
and
lock
push
mov
sbb
add
jb
push
mov
xor
xor
pop
in
sub
mov
push
outs
push
mov
inc
mov
mov
cmp
fild
or
aaa
cmp
xchg
ja
jae
fadd
fidivr
lods
in
sub
outs
jno
push
pop
and
mov
adc
mov
div
mov
mov
add
inc
pop
cmp
pop
out
push
mov
push
adc
repz
push
ret
ror
test
aaa
ret
adc
push
add
lods
cmps
pop
add
mov
mov
xor
xchg
xchg
sub
loopne
aam
adc
pop
ss
pop
add
js
add
enter
push
cmp
push
cmp
fild
outs
or
jp
ins
adc
rcl
mov
inc
dec
sbb
and
jae
xchg
inc
push
jns
lock
push
aam
pop
mov
nop
jae
jb
adc
xor
push
sbb
je
adc
mov
adc
int3
sbb
xor
sti
int3
pop
add
adc
data16
rol
add
jb
inc
xor
repnz
jne
jmp
jns
push
enter
rcr
je
sbb
pop
jo
test
shl
loope
adc
cli
hlt
sbb
out
mov
pusha
push
out
fcomp
es
xchg
out
mov
inc
shl
(bad)
in
mov
out
add
ins
adc
inc
fs
scas
(bad)
mov
aaa
lods
push
cmp
push
cmps
adc
inc
outs
pop
mov
jne
inc
push
mov
imul
pop
pusha
cmps
jns
cs
aad
(bad)
cli
loope
xchg
jl
adc
shl
xchg
les
jbe
les
xchg
xor
sbb
fst
sub
jne
cmps
or
add
inc
dec
das
inc
jp
inc
popa
push
or
ins
add
pop
setns
sbb
aam
inc
adc
pusha
cmps
ja
xor
mov
push
lds
add
push
xor
xor
dec
in
outs
adc
stc
and
mov
adc
lock
inc
pop
or
mov
inc
repnz
lods
or
jmp
ins
(bad)
(bad)
jae
adc
call
pop
cmp
and
push
fwait
add
and
popa
pop
cmp
enter
ror
inc
push
xchg
and
shl
js
dec
out
in
mov
aad
jno
inc
fsub
xchg
ret
ja
shl
and
push
xlat
out
rcr
pop
adc
mov
lods
inc
and
pop
xor
and
jno
shl
jg
or
(bad)
(bad)
in
xor
add
std
mov
pop
xchg
xchg
loopne
inc
call
in
call
jae
and
ror
and
xor
xchg
add
outs
inc
cs
mov
loop
test
add
pop
mov
xchg
add
in
xchg
pop
jnp
leave
dec
pop
jb
jle
xchg
mov
push
add
mov
jnp
ins
(bad)
adc
sub
push
push
mov
cmp
cmp
add
enter
add
les
movs
or
xchg
sbb
push
loope
iret
je
in
fild
in
sbb
push
add
jmp
shr
inc
call
jle
and
mov
adc
pop
add
xchg
mov
inc
mov
push
add
pop
pusha
add
sti
push
adc
mov
dec
int3
jne
cwde
mov
mov
xor
pop
nop
or
ret
jge
sbb
or
jge
stc
rol
loopne
xor
fiadd
push
add
imul
je
aaa
popf
cmps
inc
bswap
test
clc
jo
in
inc
loopne
mov
pop
je
movs
push
pop
sub
mov
mov
adc
jne
pop
imul
shr
fwait
sub
push
pop
add
js
cdq
mov
jns
fsub
sahf
fwait
jg
imul
call
lods
jo
jg
add
inc
mov
and
out
sbb
mov
and
pop
mov
cmp
leave
xchg
je
pusha
jnp
and
enter
and
xchg
out
add
fs
dec
pop
pop
dec
add
jo
and
shr
add
shl
loopne
add
es
or
cli
dec
stos
pop
dec
cmp
push
push
retf
fisttp
sbb
push
pop
or
and
and
add
fcmovbe
and
cmp
xor
add
pusha
adc
fisttp
mov
popf
sbb
rcr
and
scas
xchg
and
sbb
mov
outs
mov
test
and
nop
xchg
sbb
or
test
outs
loopne
or
leave
ffreep
push
xor
test
shl
addr16
or
push
sub
cmp
test
leave
add
mov
dec
or
in
adc
cmp
sub
add
xor
and
stos
adc
jns
pop
and
xor
xor
push
xor
dec
inc
jb
jmp
es
push
loope
xchg
shr
cmp
rol
xor
dec
inc
jb
sub
rcr
and
adc
jae
mov
sbb
push
adc
in
adc
mov
in
mov
or
fldcw
add
push
sbb
daa
cs
inc
ja
cmp
call
or
test
cmps
sbb
or
push
inc
pop
mov
pop
imul
push
icebp
and
es
sub
adc
dec
int
push
bound
(bad)
imul
xchg
test
mov
or
xchg
mov
sbb
aam
test
(bad)
push
lock
adc
or
lea
ins
and
mov
adc
cmp
mov
lods
(bad)
(bad)
jo
mov
dec
sub
adc
xor
add
jno
add
fs
leave
and
push
popf
sbb
leave
add
push
xor
call
cmps
stos
mov
add
push
(bad)
es
hlt
and
ds
and
icebp
popa
mov
mov
push
fst
dec
pop
inc
pop
xor
push
adc
in
lods
sub
or
xchg
and
iret
push
and
test
daa
xchg
leave
xchg
push
push
xchg
fstp
sbb
xor
out
test
add
add
pop
inc
or
cdq
xor
shl
lods
xor
or
cld
addr16
gs
scas
(bad)
fisttp
loope
mov
popa
fcom
push
fbld
inc
mov
dec
loopne
mov
in
or
sbb
pop
pop
dec
sub
xchg
cwde
or
mov
pop
dec
push
daa
or
nop
xor
dec
mov
nop
xchg
sbb
and
ins
xchg
xchg
mov
mov
and
call
sub
push
adc
and
adc
dec
add
aaa
cdq
and
mov
xor
in
xchg
or
or
pop
add
ret
or
xchg
xor
mov
jb
push
les
add
lock
xchg
sub
dec
adc
push
mov
loop
call
rcl
lahf
add
mov
sub
(bad)
pop
nop
add
or
pop
and
das
inc
push
shr
or
and
dec
and
popa
xor
mov
sbb
pop
dec
sbb
add
movs
inc
dec
or
xor
push
and
jmp
pop
or
mov
xor
sbb
mov
std
test
daa
push
fadd
lock
(bad)
sub
(bad)
leave
in
adc
sub
out
fisubr
cmp
je
add
pop
mov
mov
add
outs
call
test
lock
inc
and
loopne
inc
lods
in
and
inc
sahf
into
adc
mov
inc
sbb
xor
mov
les
arpl
cwde
adc
inc
push
and
enter
cwde
dec
adc
and
mov
add
cdq
mov
add
(bad)
pusha
adc
mov
dec
sub
or
pushf
push
js
ins
sub
hlt
dec
test
femms
call
mov
les
rcr
data16
ds
adc
nop
test
fucom
pushf
mov
jmp
mov
mov
mov
cmp
push
push
xor
call
inc
or
rcl
pop
or
add
inc
dec
inc
mov
test
ja
test
add
xor
mov
dec
sbb
add
cwde
cmp
xor
or
cmp
lock
sbb
adc
into
jbe
cmp
fmul
dec
or
xchg
inc
fmul
fs
and
xor
mov
dec
dec
fdivr
stc
bound
adc
push
push
mov
call
sar
jo
xchg
test
cdq
mov
loopne
lds
in
xor
movups
outs
adc
and
int
inc
mov
imul
push
pop
or
fbstp
outs
xor
es
pop
shr
(bad)
sbb
pop
dec
cld
pop
pop
ret
ret
jnp
or
mov
inc
and
xchg
mov
mov
fwait
test
xor
je
cmc
js
add
rol
fmul
les
jns
imul
mov
lea
mov
dec
mov
mov
xor
out
mov
mov
aad
inc
fimul
jg
xor
add
(bad)
nop
adc
cmp
iret
nop
lods
sbb
push
popf
lods
push
push
pop
dec
lods
or
imul
adc
inc
mov
mov
add
loopne
ror
add
pusha
enter
test
and
int3
in
out
sub
and
nop
pop
pop
test
sbb
lock
add
sbb
push
pop
inc
or
sbb
lds
int3
mov
(bad)
sahf
loope
dec
sbb
mov
xchg
push
add
ins
popf
repnz
scas
rcr
mov
push
sbb
popa
and
xor
and
dec
pushf
out
pop
jb
ror
jne
xchg
add
adc
dec
aad
xchg
xor
ret
or
pop
push
rcr
inc
aaa
ss
outs
dec
add
and
ins
(bad)
add
fiadd
inc
mov
ret
iret
and
push
test
add
adc
mov
or
(bad)
in
xchg
pop
adc
pop
mov
pop
mov
add
mov
leave
aad
les
ja
or
adc
sbb
scas
and
push
sub
movs
leave
mov
xor
mov
ret
sti
xor
pop
loop
add
xchg
adc
repnz
cli
dec
sub
xchg
ret
sub
cmp
call
rol
sub
ret
scas
adc
test
retf
jne
movs
or
aaa
scas
ins
int
lds
adc
push
sahf
mov
lea
data16
movs
(bad)
jb
aas
loopne
test
cmp
ja
mov
add
cli
cwde
inc
sub
or
loopne
pop
push
xchg
rcl
xchg
mov
rcl
and
or
les
xchg
pop
(bad)
ins
daa
fadd
mov
lahf
int3
fcom
in
(bad)
sub
fistp
add
test
cdq
scas
inc
cmps
fs
sbb
scas
ins
add
loopne
clc
lds
mov
mov
or
movs
jnp
lock
xchg
ret
or
mov
jbe
mov
fstp
and
movs
or
pop
cmps
stc
cmps
movs
sub
cwde
dec
push
pop
add
ins
push
dec
add
push
scas
add
bound
mov
or
inc
mov
dec
and
lahf
push
jmp
lock
cmps
mov
and
call
xor
adc
pop
pop
jae
sbb
mul
ficom
shl
cmp
inc
call
mov
mov
lea
sahf
add
push
sub
jmp
or
imul
push
pop
jo
and
test
and
pcmpgtw
fcom
sub
add
sub
rol
sub
pusha
xchg
mov
or
fild
clc
push
inc
hlt
push
cmp
mov
xor
mov
push
ss
add
adc
push
mov
jle
pusha
sti
xor
(bad)
mov
iret
push
mov
push
inc
adc
jmp
dec
pop
jmp
push
mov
mov
push
sar
in
pop
jmp
sub
ins
xor
adc
sbb
dec
push
or
shl
jge
add
and
xchg
or
leave
loope
inc
mov
jl
adc
or
mov
push
jno
test
inc
addr16
stos
jne
jb
cmp
stos
adc
or
test
ret
xor
not
or
or
aad
and
sbb
and
pop
rol
xor
aad
stos
mov
scas
add
inc
mov
or
dec
dec
xchg
sub
ins
(bad)
and
push
push
inc
jmp
mov
mov
pusha
rcl
aam
push
xor
ss
enter
xor
es
or
icebp
popf
mov
xchg
(bad)
pop
sub
mov
lods
pop
adc
and
les
mov
xchg
and
mov
add
push
(bad)
or
sub
aam
je
mov
and
scas
cli
sub
mov
hlt
scas
mov
add
push
arpl
lods
inc
aam
data16
pop
add
in
daa
aas
imul
test
push
xchg
sbb
scas
mov
sub
(bad)
sbb
rol
iret
daa
popa
lods
push
mov
repnz
push
xor
sahf
scas
mov
enter
enter
push
daa
inc
adc
sub
movs
fwait
pop
es
or
test
retf
xchg
inc
ins
pop
loope
xor
aaa
xor
cmp
xor
dec
call
mov
push
mov
fs
call
test
dec
gs
stc
dec
fild
dec
xor
les
adc
mov
pop
push
sbb
cmp
es
adc
aas
rcl
xor
loopne
stos
push
retf
and
test
dec
and
xchg
inc
sbb
fsub
fcomp
imul
inc
loop
xchg
rol
sbb
mov
test
inc
xchg
pop
inc
popf
sar
dec
lods
out
xor
mov
nop
xchg
nop
pop
outs
in
cmp
nop
and
inc
jmp
push
adc
shl
mov
adc
in
add
test
push
pop
xor
lahf
xor
pop
out
xor
adc
fisttp
mov
and
lds
cmp
push
movs
inc
popa
or
adc
adc
mov
and
mov
adc
sbb
xor
jmp
ror
and
(bad)
lock
inc
test
jmp
addr16
fcom
je
loopne
xor
in
mov
imul
lods
push
push
in
dec
and
jnp
enter
mov
xor
jl
dec
or
xchg
mov
mov
fmul
push
pop
mov
pusha
movs
pop
pop
xchg
xchg
inc
aaa
ja
fs
add
cmp
jne
or
jns
xchg
mov
pop
enter
nop
jae
and
xor
sub
in
in
mov
fs
retf
adc
stos
add
retf
dec
mov
and
mov
retf
(bad)
mov
pop
cmp
or
ror
cmp
xchg
adc
fwait
or
add
pop
adc
cmps
dec
inc
adc
call
mov
pop
mov
add
adc
xchg
xor
sbb
cwde
idiv
inc
aas
sub
xlat
pop
xchg
pop
leave
and
inc
mov
add
or
pop
pop
jo
add
test
add
push
xor
cmps
mov
mov
ja
fnclex
es
leave
loope
lea
clc
fistp
sub
add
mov
rcl
mov
std
imul
cld
pusha
aaa
mov
jno
fstp
xor
call
xor
sub
sbb
mov
add
jae
or
sbb
inc
mov
push
cmp
sti
rcl
sub
or
mov
add
mov
ins
popf
mov
scas
comiss
and
push
dec
add
ret
pop
pusha
scas
jnp
jl
and
nop
arpl
and
jp
jne
mov
xchg
mov
fadd
mov
mov
fwait
xor
sbb
pop
lea
xchg
xor
call
mov
dec
repz
cmp
fwait
jno
dec
dec
hlt
rol
cmp
inc
push
mov
adc
mov
mov
sbb
nop
push
xchg
(bad)
sbb
or
pop
add
les
jge
adc
and
jmp
ja
inc
add
in
nop
mov
leave
xchg
shl
cmp
addr16
xchg
cmp
daa
loopne
fcom
mov
sbb
outs
xchg
xor
xlat
(bad)
lock
xchg
loope
shrd
cmp
loopne
xor
cmp
xchg
ret
imul
push
cmp
add
adc
inc
mov
xchg
add
fst
xchg
xor
sbb
mov
or
xchg
jg
add
or
clc
ret
mov
mov
ja
pop
fwait
xor
inc
arpl
imul
or
xchg
(bad)
fiadd
js
fsubp
mov
adc
ret
dec
dec
pusha
dec
mov
mov
(bad)
stos
push
pop
push
movs
adc
inc
imul
inc
inc
enter
inc
(bad)
sbb
add
add
or
or
jno
test
push
imul
mov
adc
add
adc
xor
clc
(bad)
jo
mov
inc
and
push
mov
pushf
cmp
jmp
xchg
inc
lods
add
cmps
sbb
loopne
lock
add
mov
cmp
aam
lods
enter
dec
sub
cli
mov
lods
and
or
xor
leave
add
xchg
int3
int3
add
xchg
cmp
mov
cmp
enter
clc
xchg
dec
ret
add
das
les
xchg
pushf
adc
mov
repz
mov
rol
xchg
xchg
mov
mov
aad
test
sbb
ret
nop
or
and
xor
mov
pop
sub
jae
call
and
push
outs
aaa
xor
push
sbb
sub
xchg
or
fnstsw
fbld
dec
test
dec
retf
loope
cmps
in
in
enter
test
std
add
mov
out
sub
and
add
mov
das
les
retf
jne
or
adc
fdivr
pop
and
mov
inc
mov
pop
or
sbb
jns
pop
aas
pop
push
push
enter
call
jnp
lods
outs
mov
or
mov
or
xor
mov
test
aas
lock
mov
int3
or
cmp
jns
movs
mov
add
xchg
xchg
loopne
pop
cdq
xor
ror
jg
jns
sub
outs
int
dec
jl
pop
push
or
cmp
movs
test
sbb
cmp
or
gs
imul
inc
outs
das
push
ss
jb
pushf
nop
(bad)
ret
and
popa
jb
cwde
mov
pop
xchg
es
mov
push
mov
or
dec
(bad)
test
loop
lock
je
jbe
mov
repnz
popa
xor
stc
mov
fild
int3
or
cmp
xlat
sbb
add
inc
pop
cmp
in
sbb
nop
add
inc
inc
mov
in
(bad)
mov
cmp
mov
sub
pop
add
jl
xor
les
xor
js
or
in
je
pop
add
dec
jp
or
adc
ret
call
xchg
xchg
and
xchg
push
pop
(bad)
cmp
sbb
lods
jge
xor
cdq
or
fs
sub
cmp
cmps
nop
and
cdq
inc
xchg
and
bound
sbb
xor
(bad)
add
xchg
jmp
fcomp
sub
lds
inc
or
dec
jmp
bound
leave
addr16
idiv
movs
push
ror
das
xchg
sub
and
mov
fs
xchg
jb
adc
mov
xchg
aas
sub
add
add
push
or
push
jle
int
jns
sub
ror
imul
aam
ret
jge
rol
xchg
push
mov
ror
push
test
adc
inc
(bad)
and
mov
xchg
je
xlat
add
imul
mov
mov
push
sar
xchg
adc
dec
xor
outs
add
stos
inc
call
pop
retf
ds
imul
test
mov
add
add
and
mov
add
sti
mov
rol
rcl
pop
repnz
add
mov
and
in
stos
fistp
movs
sbb
adc
popa
in
and
ret
push
(bad)
mov
ret
jae
dec
sbb
and
rol
add
in
xchg
inc
adc
test
popf
jmp
dec
and
inc
sub
daa
fisttp
mov
pusha
push
std
in
pop
mov
dec
adc
mov
inc
addr16
ret
cmp
push
retf
loopne
adc
dec
cwde
push
ss
rcr
or
mov
mov
je
mov
js
add
jg
stos
jne
cmp
movs
lods
popf
mov
push
fsub
js
mov
push
test
cmc
outs
xchg
mov
add
inc
test
pop
jmp
jg
out
sbb
adc
mov
scas
adc
fld
sub
xchg
mov
inc
sub
enter
and
inc
inc
iret
pop
add
and
add
sub
call
daa
adc
xchg
xchg
jns
(bad)
rol
cwde
adc
movs
sbb
repz
mov
sub
push
cmp
call
adc
cdq
add
xor
movs
nop
shr
mov
push
dec
mov
(bad)
inc
inc
movs
inc
leave
fisttp
(bad)
mov
adc
push
xchg
pop
dec
icebp
pusha
xlat
ins
jns
pusha
xchg
dec
test
cwde
lods
and
jmp
mov
and
daa
(bad)
push
add
inc
aas
das
aam
push
popa
add
repnz
test
(bad)
dec
jle
add
lock
push
imul
ins
lods
and
loopne
ret
mov
xchg
dec
mov
leave
adc
push
lock
rol
mov
push
mov
or
adc
fwait
pop
or
les
stos
sbb
loopne
dec
mov
test
rol
dec
and
push
pop
hlt
(bad)
ficomp
sub
test
sbb
xchg
cmp
push
adc
stos
xchg
cmp
les
jne
ret
push
inc
cs
push
sbb
adc
or
bound
repz
push
pop
or
add
jbe
inc
xor
scas
adc
or
mov
xor
jno
cmp
xor
nop
hlt
push
sub
ret
cmp
or
and
jg
lea
mov
mov
add
sbb
lods
gs
shl
in
mov
or
jnp
and
in
loopne
sahf
mov
sbb
lods
nop
movs
popf
sub
aam
daa
stos
mov
jnp
push
or
push
fs
adc
xchg
sub
rcl
imul
test
cmp
test
dec
(bad)
dec
(bad)
lahf
int3
add
dec
and
pop
bound
idiv
rol
hlt
loopne
or
push
jb
or
mov
push
jb
test
dec
mov
mov
aad
cvtps2pd
mov
inc
add
dec
enter
call
push
sub
iret
lods
sub
ins
jmp
lds
outs
loopne
inc
or
sub
jne
int
cmc
cmc
in
inc
xor
popa
arpl
xchg
retf
adc
xor
sbb
cdq
add
lahf
bound
daa
test
push
rol
je
sbb
lea
cmp
and
loope
sar
rcr
adc
xor
add
call
cmps
nop
cmp
cmp
sub
xor
inc
inc
or
inc
inc
lock
movs
test
ret
mov
mov
or
or
imul
mov
in
cmpxchg
movs
test
cmp
mov
and
scas
and
and
call
pop
inc
clc
in
sbb
test
and
test
adc
push
push
dec
mov
push
dec
lods
mov
jmp
lods
lahf
jne
int3
es
cs
loopne
es
push
inc
int3
jge
or
sbb
jbe
shr
shl
in
dec
rol
(bad)
fcomp
(bad)
adc
add
inc
call
add
ret
jno
test
fs
inc
and
or
mov
add
adc
pop
mov
or
or
pop
jmp
mov
xor
push
rol
adc
in
fdiv
mul
ds
jle
inc
add
fnstenv
jmp
out
push
push
sbb
cmps
sub
cmp
repz
hlt
(bad)
inc
pop
xor
jmp
aaa
sti
xchg
xchg
dec
movs
mov
enter
mov
mov
(bad)
xchg
sbb
hlt
cmp
adc
pop
test
lds
in
icebp
or
mov
test
xchg
aam
cmp
retf
mov
popa
pop
inc
pop
xor
ror
dec
in
push
jmp
push
xor
jmp
sbb
sub
xchg
aad
fsub
adc
fcom
hlt
mov
lock
loope
jb
lock
jmp
inc
mov
sub
jecxz
loopne
push
popa
and
fsub
leave
call
arpl
gs
fcom
pop
adc
cmp
and
adc
pop
pop
and
movs
xchg
outs
jmp
mov
les
push
inc
lds
and
dec
pop
lods
bound
jno
inc
pop
int
add
shl
adc
cwde
cmps
pop
leave
imul
adc
int
mov
lds
inc
out
add
add
adc
cmp
xor
add
sbb
sub
in
dec
push
add
pop
inc
enter
and
sbb
or
pop
inc
sub
jae
adc
dec
and
add
mov
call
jmp
in
mov
mov
xchg
inc
push
jmp
or
fist
pop
jl
mov
outs
xchg
and
std
out
enter
or
mov
or
inc
test
mov
outs
lods
sub
outs
and
pop
nop
aas
(bad)
mov
mov
push
repz
xor
invd
jmp
pop
and
pop
inc
pop
xchg
push
stos
inc
mov
test
in
or
in
adc
jb
and
inc
xor
sub
add
movs
xchg
and
add
add
mov
xchg
jo
sub
mov
add
jb
cmps
aas
sub
adc
add
mov
sar
aas
xchg
and
out
sub
pop
stc
mov
popa
xor
out
add
add
xchg
pop
inc
je
push
mov
daa
int3
add
shl
or
xchg
fcomip
daa
inc
dec
ins
inc
adc
adc
jb
fdiv
jo
sbb
cmps
jae
xor
test
clc
aas
adc
imul
dec
fsubr
sbb
sub
jb
push
stc
call
or
or
pusha
or
mov
adc
mov
add
push
xor
cli
jno
adc
and
sbb
ja
retf
inc
xchg
push
cmps
lea
cmp
mov
push
daa
sbb
pusha
and
outs
add
int
das
pushf
add
mov
nop
push
pop
cmp
cld
call
jb
iret
sbb
sbb
or
mov
dec
inc
loopne
outs
xor
sub
std
cdq
or
adc
xor
mov
mov
cmp
mov
aad
jb
ret
dec
movs
outs
dec
es
sub
enter
mov
dec
loop
shr
cmp
call
mov
pop
and
pop
nop
jl
xchg
loope
add
xchg
(bad)
or
sbb
jl
xchg
cmp
xchg
jmp
mov
adc
push
add
cdq
iret
enter
or
add
nop
add
mov
sub
push
jno
pop
leave
inc
xchg
mov
mov
push
xchg
ret
xchg
or
sub
mov
adc
pusha
inc
and
mov
adc
or
sub
pop
push
fnstenv
inc
xor
(bad)
iret
scas
xor
ins
enter
or
xor
sbb
mov
push
add
hlt
sub
sbb
sbb
jmp
test
pusha
test
or
lahf
dec
imul
xor
pop
push
sub
pusha
pop
xchg
mov
cmp
rol
out
fwait
mov
cmp
mov
or
sbb
in
or
mov
sbb
adc
xor
jp
mov
scas
push
jmp
sbb
(bad)
(bad)
(bad)
mov
inc
inc
addr16
mov
adc
and
ja
popf
mov
and
pop
or
or
adc
sub
mov
sub
adc
mov
mov
in
mov
mov
jmp
stos
mov
scas
xchg
or
and
mov
lods
adc
inc
test
push
mov
push
popf
call
push
adc
gs
stos
mov
pop
push
fs
ret
sbb
push
xchg
leave
movs
sbb
adc
repnz
and
adc
stos
loop
or
je
loop
inc
and
fadd
dec
and
xor
loopne
adc
sbb
xchg
xchg
mov
(bad)
outs
jmp
adc
pop
push
ss
sub
or
sub
sbb
iret
push
inc
cmp
push
xchg
cmps
fs
push
adc
loopne
push
add
pop
add
lods
xor
sub
add
mov
push
inc
jne
mov
ds
pop
(bad)
mov
addr16
cld
and
fmul
sbb
sub
push
test
dec
or
movaps
mov
xor
sbb
mov
out
push
sbb
loopne
mov
cmp
and
out
pop
xor
shl
cmp
test
sub
add
retf
add
inc
int3
xlat
xchg
xchg
(bad)
fistp
adc
dec
ss
pop
dec
mov
aaa
fistp
add
adc
jne
or
cmp
das
xchg
call
das
je
or
dec
jge
push
test
repnz
in
inc
dec
cmp
daa
add
sub
add
(bad)
fdivr
sub
add
push
or
dec
cmp
repnz
cmp
xchg
popa
push
xor
inc
and
sub
test
mov
add
mov
xlat
push
cld
jo
add
jns
in
das
das
or
lea
sub
inc
mov
dec
enter
arpl
sbb
and
sbb
cmp
add
cld
loop
adc
mov
jns
cmps
sub
dec
xchg
(bad)
sbb
mov
ds
pop
push
xchg
out
ds
repz
cld
inc
sbb
out
jbe
cmps
mov
dec
pop
xor
cmps
or
adc
pusha
and
in
test
mov
jns
sbb
loopne
(bad)
test
fadd
fsubr
and
cmp
dec
push
jns
sub
in
and
adc
xor
mov
xor
out
(bad)
repz
dec
sbb
sahf
jl
push
shl
rol
mov
(bad)
shl
mov
repnz
mov
mov
xor
dec
shl
dec
sub
rcr
ret
imul
retf
xor
and
or
cmp
leave
xchg
lods
and
jmp
and
xchg
dec
add
cmp
jl
mov
push
xor
xor
and
cmps
mov
adc
repnz
test
xor
jecxz
xchg
scas
enter
movs
sbb
std
jg
add
movs
cmp
or
cwde
fstp
dec
adc
pushf
mov
or
pushf
pushf
push
xor
add
pop
and
push
mov
jae
pop
inc
inc
sub
cmps
inc
and
(bad)
dec
ins
imul
mov
repz
mov
nop
nop
push
xor
mov
mov
mov
fs
mov
add
outs
in
sub
sub
add
test
inc
push
sub
jnp
adc
push
adc
xchg
mov
repnz
outs
xchg
mov
dec
and
sbb
add
jp
xchg
cmp
into
das
lock
dec
sbb
ds
add
data16
in
mov
jno
or
rcl
and
shl
scas
push
dec
test
push
adc
retf
mov
sub
mov
sub
jne
and
pop
ja
(bad)
rcl
sbb
stc
mov
(bad)
sub
mov
inc
sbb
add
adc
js
dec
das
fimul
dec
inc
dec
jae
shr
push
xor
and
dec
pop
pop
xchg
fst
shl
sub
retf
retf
xchg
retf
jecxz
xor
xor
inc
mov
jne
inc
ror
add
cmps
iret
adc
dec
loop
pop
push
(bad)
xchg
aaa
add
inc
xor
in
sub
pop
or
call
inc
dec
je
hlt
or
daa
addr16
nop
pop
mov
jp
mov
and
xor
imul
sbb
bswap
aas
adc
dec
in
xchg
jno
mov
shl
mov
rol
daa
nop
pop
and
leave
add
push
push
add
ins
and
cwde
or
dec
mov
mov
jno
jne
les
hlt
add
and
add
adc
and
sub
and
jbe
daa
cmp
es
sub
pop
mov
(bad)
lods
adc
sbb
and
xchg
inc
inc
xor
lea
in
in
push
sbb
retf
xor
mov
inc
inc
bound
mul
cmps
sbb
mov
test
xor
sub
dec
cmp
in
loopne
push
add
sbb
sub
cmc
inc
lods
pop
add
(bad)
mov
loop
leave
xchg
cs
nop
out
das
sub
push
xchg
adc
inc
enter
sahf
pop
and
mov
adc
push
and
and
adc
mov
pop
sar
mov
test
retf
leave
push
(bad)
movs
cmps
daa
dec
and
xor
call
add
out
test
or
xlat
sbb
cli
popf
and
ret
mov
xchg
les
mov
mov
sub
popa
jns
imul
test
scas
or
or
xchg
xor
inc
ins
pop
add
mov
cmp
adc
add
dec
and
add
xor
ja
push
mov
dec
pop
mov
loope
rcl
adc
outs
nop
out
sub
ret
mov
jb
repnz
jl
mov
xchg
or
fiadd
int3
fdiv
xchg
xchg
xor
or
pusha
dec
adc
dec
cs
xchg
(bad)
pop
xor
mov
mov
stos
inc
pusha
or
inc
es
addr16
cmp
popf
pop
xor
add
pop
movs
dec
cmp
retf
adc
mov
or
movs
or
cmp
add
fs
cmp
or
mov
ror
(bad)
cmps
inc
xchg
ja
std
inc
ret
int
push
or
push
push
shl
(bad)
aad
add
ss
and
adc
pop
or
sbb
push
rcr
or
cmp
and
and
adc
add
cmp
jo
inc
cmps
nop
sub
cmp
xor
cmp
les
xor
arpl
adc
and
les
mov
je
sub
movs
pop
gs
nop
cdq
add
inc
cmp
data16
adc
or
movs
fild
pop
cld
ror
fldenv
pop
sbb
pop
neg
xchg
add
fstp
(bad)
dec
ror
cmp
mov
fdiv
jb
scas
lea
into
dec
jge
add
loopne
(bad)
imul
sbb
jmp
pushf
jp
adc
add
sbb
fcomp
sbb
test
iret
fldcw
mov
pop
push
sub
adc
sub
fld
or
mov
sbb
pop
imul
rcr
xchg
js
or
mov
add
loope
loope
and
js
pushf
mov
adc
sub
iret
cmovno
pop
aad
inc
mov
loope
xchg
mov
loopne
xor
pushf
push
cmps
in
fcomp
fdivr
lods
xor
xor
cmps
in
leave
pop
xor
clc
dec
dec
aas
rol
jmp
xor
sub
fs
inc
add
push
in
and
lods
out
pusha
xor
mov
mov
adc
mov
scas
shl
aam
add
rcl
xor
jecxz
or
sar
inc
jb
jge
mov
je
pop
push
in
sub
sbb
cs
sbb
movs
mov
mov
stc
push
test
cmp
lock
call
sub
nop
xchg
out
xor
leave
xchg
retf
push
xor
lods
cmp
xchg
pop
in
cwde
mov
pop
xor
xor
or
mov
push
add
jmp
lea
ss
cmp
mov
loopne
sbb
add
rol
xor
and
test
or
mov
int3
add
push
sbb
dec
cs
js
mov
xchg
das
imul
push
mov
retf
in
aam
push
mov
nop
cmps
pop
arpl
jmp
fcom
dec
es
lods
dec
adc
int
cmp
iret
call
and
push
imul
fs
xor
rcr
push
iret
fsubr
cdq
in
xchg
jmp
ss
test
xchg
and
xor
es
jmp
dec
jne
rcr
mov
inc
xchg
jmp
cmp
dec
xor
inc
dec
add
aad
add
nop
dec
aam
pop
nop
arpl
add
sbb
inc
add
xchg
jp
push
pop
enter
mov
sbb
dec
pop
enter
inc
int3
sbb
inc
inc
add
nop
out
mov
inc
inc
ror
sbb
cmp
xchg
push
sbb
jo
loope
sar
cmp
movs
imul
bound
ret
jo
sbb
imul
jmp
int
in
aaa
pop
lfs
or
jb
dec
push
stc
shl
add
mov
dec
jo
pop
leave
int
push
fs
xor
lea
inc
lea
push
adc
add
fwait
dec
bnd
or
pop
test
sub
lock
cmc
aam
push
leave
pop
out
test
sub
jne
pop
dec
xchg
mov
jno
pop
pop
mov
mov
sub
and
aas
push
add
daa
cmps
xor
rcl
imul
movs
mov
inc
rol
sub
pop
jne
dec
popa
add
movs
call
(bad)
ror
cmp
or
xchg
inc
popa
shl
das
cmps
rcl
and
pop
inc
fisttp
xchg
inc
aaa
(bad)
mov
pusha
cmps
dec
mov
das
adc
add
or
xchg
das
addr16
daa
xor
cmp
jne
ins
dec
and
cmp
push
inc
or
push
ss
mov
sbb
mov
movs
movs
movs
test
inc
push
jb
cmp
ja
and
aam
popa
aas
pop
cmp
or
nop
sub
add
cmps
cwde
push
fs
retf
cmp
in
xchg
pop
and
push
adc
es
pusha
xor
push
xchg
cwde
xchg
xchg
add
inc
adc
ret
and
push
mul
adc
inc
pop
add
or
mov
push
(bad)
shr
or
push
sbb
cmp
inc
and
fmul
in
daa
test
cmp
leave
pop
(bad)
mov
cmp
sbb
dec
or
inc
push
xchg
ret
push
and
add
xor
push
add
adc
adc
dec
push
add
or
xchg
inc
push
jmp
pop
daa
(bad)
loopne
jmp
sbb
or
adc
cmp
push
jl
add
pop
and
inc
ds
movs
je
xor
push
pop
les
mov
mov
push
dec
(bad)
aaa
test
jae
test
mov
cdq
pop
sub
xor
jmp
das
xor
popw
push
pop
je
adc
in
dec
rcl
adc
xor
mov
pop
icebp
xlat
lds
les
inc
rcl
test
adc
dec
add
aas
jl
enter
shl
jbe
and
or
inc
xchg
ss
sbb
dec
pop
add
sbb
ja
cwde
dec
loopne
pop
ret
mov
xchg
ja
sub
xchg
pop
and
rcr
push
mov
add
mov
cmp
and
push
pusha
and
inc
pop
sbb
or
out
cmp
adc
sbb
add
sbb
add
adc
iret
mov
adc
inc
scas
add
rol
push
jns
cwde
in
add
push
in
mov
dec
push
and
and
adc
inc
and
retf
loopne
loop
loopne
mov
push
les
or
xor
shl
push
ret
push
sub
sub
mov
and
inc
sbb
dec
inc
adc
sbb
mov
mov
add
jbe
xchg
and
les
fdivr
pushf
xor
outs
dec
mov
or
popf
and
jne
or
jns
sbb
adc
mov
mov
dec
mov
sub
pushf
imul
test
retf
dec
adc
mov
cmp
push
scas
movs
fcmovb
leave
les
mov
cs
or
push
push
push
inc
jno
xchg
push
and
and
push
inc
dec
and
adc
adc
(bad)
dec
popa
shl
cwde
popa
mov
mov
mov
cmp
retf
repnz
dec
ja
dec
or
xor
cmp
call
es
call
push
rol
push
push
data16
cld
xchg
in
inc
cmp
jns
in
fisttp
cs
fs
enter
rol
push
repz
loopne
adc
sbb
pop
cmp
enter
in
dec
add
nop
and
mov
adc
xchg
sbb
in
adc
xchg
inc
jge
cwde
ret
push
pusha
sbb
mov
pop
dec
cmps
mov
sbb
cmps
mov
sub
pop
or
add
add
adc
dec
loopne
lds
pop
push
and
jae
ror
push
xor
mov
mov
popa
sub
adc
leave
push
nop
into
dec
dec
inc
sub
and
pop
adc
gs
and
and
nop
fwait
iret
into
jl
and
mov
loopne
jne
mov
lock
add
push
xchg
mov
ror
push
je
push
daa
das
lods
lock
add
mov
or
inc
pusha
and
or
jns
(bad)
jmp
push
test
les
int
or
ret
sbb
bound
add
(bad)
push
rcl
xor
or
gs
test
inc
sub
jnp
push
adc
neg
xchg
inc
and
adc
push
mov
dec
dec
cmc
dec
add
jbe
and
and
aas
cvtpi2ps
inc
daa
js
(bad)
mov
inc
dec
mov
in
pop
cmp
outs
pop
cmps
fadd
icebp
sbb
and
mov
cmp
imul
arpl
push
aaa
adc
xchg
js
cmp
xor
repz
xor
shl
fidiv
pusha
mov
in
(bad)
push
xchg
mov
push
les
loopne
fcom
mov
pop
aad
lock
mov
or
jg
dec
jmp
ja
jmp
inc
mov
inc
lldt
in
inc
xchg
mov
mov
aad
sbb
loope
lahf
dec
inc
fcom
mov
shl
dec
je
inc
push
sub
and
popa
popf
ror
and
mov
add
xchg
sub
inc
clc
fs
cmp
mov
pop
leave
test
dec
dec
pop
aas
sub
pusha
add
and
sub
add
pop
sbb
icebp
push
xor
popa
popa
ja
pusha
pop
add
sub
dec
adc
ins
and
imul
xor
or
xchg
sbb
pop
adc
sahf
jl
call
and
out
fsub
add
aaa
or
xchg
mov
xor
inc
pop
adc
mov
sar
adc
jmp
ss
dec
cwde
inc
push
les
gs
or
mov
call
stc
(bad)
sbb
cmps
adc
lea
imul
inc
sahf
movs
jb
in
pop
mov
sbb
call
sub
jo
(bad)
and
fld
xchg
adc
push
cmps
or
push
pop
add
mov
inc
push
xchg
or
and
xchg
mov
pop
pop
rcr
mov
push
and
ins
add
mov
sub
retf
test
sub
push
pop
nop
test
ss
enter
push
adc
ss
xor
addr16
push
pop
cmps
shl
stc
jg
jecxz
lahf
and
push
mov
mov
cmps
jae
repnz
stos
cmp
dec
scas
loopne
jmp
loopne
adc
push
adc
push
in
ror
lock
inc
cmps
push
adc
and
enter
sub
loop
cs
jo
leave
xor
adc
cmp
ret
lahf
and
pop
adc
jl
cmps
adc
lods
inc
mov
cmps
jmp
dec
scas
dec
or
mov
pop
out
sub
and
(bad)
jns
inc
sbb
ret
in
or
xor
daa
dec
(bad)
adc
xor
nop
or
adc
add
mov
add
loopne
movs
int
xchg
je
mov
movs
call
aaa
jo
mov
stos
sub
pop
xchg
dec
cs
enter
in
sub
pushf
pop
fadd
push
mov
xchg
js
jnp
and
xor
inc
popf
add
pop
push
sti
push
adc
jo
lods
xor
leave
repz
xor
lods
cmp
sub
or
and
int
cmp
or
inc
adc
or
add
pop
jmp
mov
adc
add
xchg
out
pop
shl
pop
movs
sbb
popa
inc
call
xchg
dec
sub
and
(bad)
iret
adc
adc
dec
in
xor
pop
movs
jbe
fwait
or
aad
cmp
push
(bad)
xchg
fdivr
dec
dec
cmps
test
fmul
mov
mov
repz
mov
retf
adc
sub
adc
pop
pop
cwde
or
aas
in
and
lds
popa
push
add
scas
push
mov
(bad)
xor
jbe
adc
das
lods
pop
test
pop
push
in
pop
stos
adc
ffreep
test
pusha
test
lock
pop
pop
xor
push
lock
sbb
ja
cwde
das
add
or
pop
sub
in
and
popa
ror
fs
popa
jns
mov
(bad)
dec
bound
or
js
xchg
test
adc
and
mov
fcom
stos
adc
movs
and
cmp
js
inc
and
ficomp
inc
jmp
cwde
gs
push
enter
gs
add
gs
rsm
and
ins
push
and
loopne
stc
int3
add
push
js
pop
(bad)
push
and
adc
push
mov
ds
mov
bound
ins
pop
xchg
pop
cmovg
sar
jmp
adc
movs
xchg
xor
pop
jne
inc
in
push
xor
(bad)
push
nop
dec
push
adc
das
es
pop
cmp
xor
push
(bad)
ds
hlt
inc
sub
cwde
push
adc
push
test
add
mov
dec
es
mov
gs
adc
das
xchg
aaa
icebp
add
addr16
add
hlt
sbb
or
fisttp
mov
xchg
xchg
imul
mov
movs
or
mov
ins
loop
push
retf
add
fisttp
adc
adc
push
shr
es
push
imul
sub
jbe
pop
ror
fs
dec
es
adc
push
mov
jmp
scas
retf
dec
add
xchg
push
xor
sbb
jb
xchg
loope
adc
add
push
and
pop
xchg
sub
jnp
add
dec
or
cmp
nop
dec
push
sbb
mov
sub
mov
clc
push
je
xor
das
pop
xor
data16
leave
push
xor
mov
xor
inc
cmp
jmp
ret
dec
and
das
add
mov
adc
xor
scas
inc
pop
fcmovnb
enter
test
std
ins
or
call
add
jmp
xchg
cmp
mov
sbb
mov
jbe
sbb
in
movs
(bad)
xchg
test
cmps
jmp
icebp
aas
pop
fwait
add
pop
mov
add
in
out
push
or
xchg
sbb
sub
push
in
pop
sbb
nop
int3
out
cmps
sbb
call
sahf
in
pushf
or
push
and
iret
dec
mov
ja
fdiv
jo
lahf
fmul
mov
xchg
dec
aaa
or
dec
test
scas
call
in
enter
jae
push
inc
cli
jne
pop
sub
aam
dec
lods
dec
or
fucom
add
mov
dec
outs
xor
in
js
fs
xchg
rol
cdq
stos
mov
add
syscall
pusha
lock
pushf
cmp
mov
ss
outs
shl
mov
or
icebp
adc
mov
sbb
push
sbb
iret
in
ins
retf
arpl
sub
test
or
mov
nop
rcr
sar
adc
xor
pop
and
enter
fcomp
xchg
fisttp
add
cwde
sbb
imul
jge
jns
inc
xor
sbb
dec
pop
inc
mov
and
pop
add
xor
addr16
mov
cmp
arpl
sbb
ins
and
xchg
gs
and
daa
dec
adc
mov
or
cmps
add
mov
push
outs
(bad)
out
movs
xor
and
dec
mov
push
inc
xchg
sub
xchg
dec
add
nop
or
and
add
add
or
cmp
mov
adc
add
mov
test
pop
xlat
and
loopne
push
and
add
retf
add
add
pop
repnz
inc
cs
enter
mov
jne
inc
jbe
xor
je
inc
inc
add
fs
dec
test
outs
test
ins
pop
and
jne
stc
cmps
add
sbb
outs
mov
add
aam
call
pop
sub
fsubr
in
jbe
push
fs
adc
rcl
jecxz
call
inc
les
push
sbb
cmp
mov
add
aam
or
jne
add
cmp
and
test
clc
test
pop
pushf
pop
pop
add
and
shl
scas
or
and
push
test
or
dec
cmp
sbb
movs
pop
pusha
mov
out
out
xchg
mov
push
lea
cmp
and
xor
jo
fsub
sub
dec
xor
ins
xor
loopne
clc
mov
ins
cs
sub
addr16
retf
hlt
add
pop
mov
and
cs
adc
pusha
in
sar
sub
ja
retf
cs
dec
jo
add
pop
sbb
and
adc
mov
dec
outs
adc
adc
dec
loope
jne
adc
jo
push
and
shl
add
outs
sub
mov
imul
inc
fs
dec
inc
or
mov
adc
jae
sub
and
dec
fs
scas
and
fsub
push
lds
es
(bad)
cmp
scas
fldenv
pop
or
push
inc
out
imul
and
xor
add
nop
test
and
add
jnp
xchg
xchg
xchg
dec
int3
fdivr
push
sub
add
mov
cld
ror
fwait
in
push
add
and
cmps
dec
hlt
mov
out
fcomp
sbb
sbb
gs
test
adc
in
cmps
pop
inc
and
sbb
loopne
add
sbb
loopne
aas
add
jns
in
in
dec
aam
gs
dec
call
sbb
(bad)
pop
cmp
inc
call
(bad)
stos
and
in
cmp
add
retf
push
cs
mov
mov
aas
loope
sub
hlt
fwait
(bad)
clc
ret
push
repnz
call
cmp
mov
and
xchg
add
in
adc
mov
jl
jl
xchg
push
jb
jl
push
lock
hlt
add
add
sub
add
or
jg
lea
dec
cmps
inc
dec
aaa
pop
mov
sbb
add
jg
sbb
push
nop
jg
mov
add
clc
dec
adc
retf
jo
jno
add
add
lods
sbb
jecxz
add
pop
jmp
xor
(bad)
popa
cdq
test
mov
xchg
std
inc
call
inc
add
xor
adc
dec
dec
cwde
and
add
xor
jb
jg
push
sub
xor
sub
dec
popa
or
xchg
add
dec
ins
xor
adc
xchg
lea
push
or
je
sub
dec
movs
mov
xlat
xor
or
or
xor
xor
add
add
das
inc
adc
inc
or
fldcw
add
add
and
sbb
mov
fisttp
adc
lahf
push
add
das
xor
jns
sbb
sub
(bad)
add
dec
es
in
in
clc
or
lds
sbb
add
push
cmp
add
xor
das
inc
repnz
movs
fstp
xchg
xchg
pop
pop
repz
xchg
sub
loope
mov
bound
int
push
or
mov
in
(bad)
aaa
adc
test
xor
or
retf
add
jne
sbb
push
xor
std
and
sar
pop
enter
cmps
or
pop
nop
inc
in
ins
xchg
xchg
nop
adc
push
adc
aas
int3
xor
fcom
icebp
xchg
es
xchg
fcom
fadd
add
cwde
lea
fcomp
into
in
ror
arpl
mov
callw
je
cmp
inc
push
sbb
int
adc
in
call
adc
push
sbb
rcl
sbb
add
jmp
add
pop
xchg
nop
xor
dec
push
xchg
scas
clc
xchg
into
adc
add
pop
sbb
and
push
and
stos
outs
jl
xchg
mov
lahf
sbb
leave
and
mov
adc
ror
mov
sti
cmp
pop
mov
adc
push
jns
dec
sti
mov
inc
dec
mov
or
sub
test
xchg
xchg
add
xchg
and
and
bound
sbb
leave
mov
mov
and
mov
aam
lahf
sub
and
adc
test
mov
imul
or
mov
cmps
popa
pushf
aaa
inc
or
(bad)
and
test
push
push
inc
sbb
dec
sbb
pop
lds
(bad)
mov
add
add
outs
sub
and
fild
test
or
sbb
inc
stos
xor
dec
inc
pop
dec
xchg
and
adc
pop
sub
test
dec
push
sbb
add
xor
loope
sbb
sub
pop
(bad)
and
push
pop
or
sub
imul
add
cs
or
and
int
jo
adc
push
stc
add
xchg
clc
aas
pop
mov
ret
or
addr16
and
or
test
and
pop
add
add
or
test
xchg
js
inc
jmp
neg
add
add
cmp
cmp
or
dec
int
adc
cmp
mov
sbb
test
fidiv
push
or
xlat
in
lds
pop
mov
fist
aas
je
call
(bad)
ficomp
shl
pop
ins
inc
retf
adc
addr16
sub
xchg
sub
mov
adc
loope
jne
rcl
jmp
push
fdiv
ins
push
in
mov
mov
or
leave
sbb
aam
and
xchg
aam
enter
repnz
mov
fmul
daa
pop
repnz
mov
test
repnz
es
les
stc
and
rol
and
mov
xchg
or
mov
xchg
xchg
or
mov
xchg
or
mov
cmp
or
test
mov
or
mov
or
cdq
in
or
cdq
test
sbb
inc
call
movs
cdq
in
or
mov
test
or
aaa
mul
and
cmp
mov
bound
cdq
je
test
jl
pop
push
cmp
jo
jo
adc
inc
ins
pushf
cmp
push
mov
pushf
pop
dec
rcl
pusha
add
pop
ror
xchg
pop
clc
push
adc
dec
sub
lods
sbb
pop
pop
or
push
push
and
sub
fwait
mov
imul
ins
sbb
and
cmp
or
call
push
pushf
lock
rcr
jnp
sub
adc
and
push
stc
jp
sbb
inc
nop
iret
and
inc
movs
es
test
pop
cmp
push
or
xor
push
es
dec
iret
inc
and
nop
enter
dec
mov
inc
xor
movs
sub
dec
xor
mov
adc
addr16
cmps
push
and
pop
rcl
push
or
cmp
inc
retf
imul
movs
test
pop
inc
inc
inc
and
and
aaa
leave
in
push
xor
push
test
test
movs
dec
sub
pop
repnz
and
pop
push
pop
in
gs
push
and
push
add
xchg
xor
mov
mov
unpckhps
mov
sahf
push
push
inc
add
das
mov
adc
cmp
and
into
popf
neg
add
push
and
imul
in
mov
in
jne
popa
xor
cmp
pop
or
add
mov
xor
test
sub
in
fisub
retf
inc
add
mov
add
dec
sub
pop
add
scas
stc
pop
push
retf
scas
inc
pop
fwait
loop
movs
mov
(bad)
or
in
ret
or
lds
jno
retf
nop
jmp
ins
pop
mov
ds
jecxz
aam
add
and
adc
arpl
scas
iret
push
test
jo
xor
and
sub
mov
cmp
imul
sub
push
push
mov
cmps
mov
pop
das
lds
jmp
sub
repz
or
pop
je
and
push
add
and
xor
lds
pop
rcl
daa
pop
je
push
cs
sbb
iret
mov
shr
xor
push
or
inc
inc
test
or
or
dec
loopne
sahf
inc
dec
cmps
xor
dec
outs
daa
sub
test
js
add
add
pop
retf
rol
push
lock
gs
repz
add
mov
inc
shr
push
test
test
push
adc
cmp
sti
sahf
sub
push
and
jns
iret
repz
push
out
jns
out
sahf
(bad)
jmp
jns
pop
xor
lahf
mov
adc
xor
inc
mov
push
and
and
inc
push
mov
mov
add
add
mov
add
add
rcl
sbb
add
test
sbb
add
ror
rcl
fidiv
shr
dec
push
in
retf
and
mov
push
shr
mov
aaa
pop
scas
and
stc
call
inc
icebp
xchg
cmp
stos
xor
sbb
(bad)
sahf
adc
or
cmp
aam
and
leave
add
sbb
mov
retf
icebp
or
jl
xchg
mov
adc
es
(bad)
das
mov
inc
mov
xor
xchg
ins
sub
loop
or
sbb
push
sbb
shr
dec
bound
jmp
aam
test
jle
clc
add
aas
stos
rol
add
and
jo
mov
sub
jno
cmc
inc
pop
sbb
(bad)
sbb
cmp
ds
adc
fisubr
(bad)
push
fwait
mov
pop
cmps
mov
xchg
outs
fadd
sub
jp
jne
jbe
push
call
mov
adc
arpl
push
push
add
adc
jge
xchg
enter
mov
movs
mov
xor
sub
fnsave
xchg
outs
xchg
or
adc
xchg
aaa
pop
adc
dec
nop
jecxz
stos
inc
and
inc
push
out
mov
movs
(bad)
cmc
mov
movs
xchg
loope
or
pop
mov
and
mov
(bad)
lock
pop
imul
xchg
inc
sub
inc
call
sub
cwde
out
xor
js
and
test
push
sbb
in
cmps
push
or
sub
mov
add
pop
jo
jmp
cmp
jg
jmp
lods
and
jmp
adc
int3
add
push
sbb
or
mov
stc
or
imul
cwde
push
hlt
push
imul
sbb
mov
jbe
inc
push
jb
les
ins
mov
dec
cmps
in
mov
and
jb
js
sbb
retf
add
cmp
dec
aaa
in
daa
ins
rcr
test
push
pop
fld
mov
add
fs
les
(bad)
cmp
jmp
dec
out
test
mov
add
cmp
inc
test
xor
fidivr
and
xor
les
stc
sub
and
pop
pop
or
xor
xchg
sbb
out
add
and
sbb
mov
sub
sbb
xchg
out
lahf
nop
js
xchg
mov
clc
adc
push
shl
and
xor
sbb
pop
mov
in
jmp
push
push
jns
cld
or
adc
ja
rol
and
cdq
add
or
dec
call
ins
push
mov
xor
(bad)
fiadd
ins
mov
les
or
leave
sbb
loopne
ret
fisubr
push
movs
(bad)
jnp
fsub
pusha
mov
lods
mov
sbb
jp
sbb
xor
mov
movs
push
xor
or
jo
in
ja
add
sar
popa
imul
sbb
mov
push
(bad)
enter
cmps
stc
ds
push
jne
xchg
cwde
and
out
mov
test
lods
cmp
lods
mov
adc
sti
adc
mov
mov
cmovs
add
mov
mov
push
nop
or
call
inc
es
mov
nop
or
lods
fadd
mov
sub
dec
es
or
inc
in
mov
sub
push
inc
es
in
pop
leave
sbb
cdq
nop
add
inc
es
cld
inc
pop
leave
or
mov
add
ins
test
aam
mov
sub
fs
lods
aam
sbb
es
or
clc
pop
leave
add
xor
ins
shl
ret
xchg
cmp
ret
and
xor
test
and
inc
ret
enter
push
dec
mov
dec
enter
ja
(bad)
les
cdq
nop
stos
inc
cmp
sbb
fs
nop
or
in
lds
pop
mov
nop
or
mov
sub
inc
(bad)
ins
es
sbb
add
mov
nop
hlt
sub
ins
enter
push
ins
cwde
outs
and
nop
enter
or
cmp
adc
movs
enter
in
and
push
jb
hlt
sub
and
inc
jns
daa
fs
int3
inc
push
nop
add
jb
int
int
inc
es
or
cmp
push
xchg
lock
dec
enter
iret
ins
iret
inc
or
loopne
leave
add
sub
pusha
shr
sub
outs
ja
gs
jne
inc
mov
cmp
dec
cld
jns
enter
cs
rcl
or
fadd
push
sahf
and
nop
inc
xchg
sub
ins
sbb
mov
xlat
rcr
inc
into
and
pop
stos
jg
rol
and
mov
dec
dec
inc
and
push
jmp
xlat
and
pop
mov
cmovno
push
inc
dec
push
push
ret
rol
cmp
es
ins
call
popa
push
xor
xchg
movs
sub
dec
imul
sbb
add
sub
sub
test
pop
ja
sub
jmp
gs
add
je
jae
lods
adc
pop
lahf
mov
inc
cmps
pop
xlat
pop
es
adc
test
test
jne
cmps
xchg
test
mov
xchg
bound
inc
xchg
adc
xlat
or
bound
mov
adc
xchg
aaa
mov
and
int3
push
inc
gs
jnp
mov
sub
adc
in
adc
dec
sbb
adc
fmul
fwait
dec
call
hlt
sub
xlat
mov
ror
dec
popa
pop
ret
inc
jne
inc
inc
mov
test
add
aaa
xchg
ja
loopne
push
push
xlat
xchg
cmp
add
aaa
xchg
or
bound
adc
xor
xor
push
sbb
test
sbb
push
ds
pop
xor
sar
movs
popa
adc
xchg
mov
int
and
inc
mov
imul
push
into
imul
cmc
popf
dec
imul
sbb
mov
cmps
push
and
mov
jb
scas
and
inc
inc
mov
test
jae
mov
xchg
cmp
sbb
pop
daa
punpckhwd
adc
or
shl
mov
xlat
sub
sub
popa
adc
sub
jp
jb
and
inc
cmp
jge
dec
mov
pop
or
lahf
jg
stos
test
adc
retf
inc
lods
jg
(bad)
xchg
in
dec
out
stos
pop
add
mov
pop
jb
push
sbb
xor
xchg
push
inc
mov
mov
(bad)
and
mov
cdq
pop
add
outs
add
or
outs
cs
sub
retf
sub
inc
or
add
cmp
fld
scas
push
movs
sbb
inc
and
push
or
fimul
ret
sbb
outs
adc
xchg
stos
aas
or
adc
fst
sub
sub
adc
add
add
arpl
fadd
bound
and
(bad)
addr16
sub
cmc
xchg
test
iret
and
sbb
daa
cmp
pusha
fs
loope
add
scas
sbb
push
ja
dec
inc
inc
adc
sbb
push
xor
call
call
push
add
or
sub
xor
cwde
outs
sbb
(bad)
or
xor
and
sub
mov
push
call
inc
imul
div
push
push
dec
push
push
je
les
mov
and
mov
pop
mov
imul
iret
xchg
daa
jae
sbb
inc
neg
push
mov
in
push
jne
or
test
mov
pop
sbb
ja
inc
adc
fidiv
je
and
xchg
xor
out
mov
es
adc
xor
push
movs
sub
add
and
retf
test
(bad)
fst
adc
pushf
dec
bound
or
push
or
push
mov
dec
inc
sub
inc
sub
or
ret
iret
adc
xor
movs
and
push
xlat
or
outs
sbb
adc
ins
gs
xchg
or
add
enter
xor
xor
fstp
mov
mov
push
adc
ins
adc
pop
jne
addr16
xor
imul
mov
imul
invlpg
outs
loope
fbld
leave
gs
rcl
rol
leave
test
xor
daa
xor
in
and
lods
outs
cmp
push
push
and
fs
test
or
cmps
mov
fidiv
inc
pop
xor
mov
cmps
cdq
mov
inc
nop
xchg
add
pop
pop
rcl
add
xchg
and
sub
movs
dec
and
rol
xchg
dec
mov
imul
fldcw
test
jnp
movs
mov
inc
or
outs
or
dec
pop
pop
push
add
and
jg
sbb
and
dec
adc
dec
xor
cmp
and
jno
pop
call
ins
sub
dec
dec
push
dec
and
inc
push
outs
pushw
push
dec
cwde
or
pop
push
mov
xchg
aad
push
xchg
inc
test
aaa
sbb
stos
push
inc
ficom
cmp
pop
dec
sbb
sbb
xor
das
mov
inc
add
aam
ins
cmp
leave
mov
call
ins
or
es
mov
xlat
push
push
xchg
push
adc
mov
mov
out
cmc
add
mov
bound
xchg
dec
push
and
dec
pop
push
pusha
adc
sbb
mov
mov
daa
call
adc
mov
sub
mov
sub
and
sbb
out
cwde
push
test
mov
or
cdq
xor
pop
mov
lock
sub
test
inc
cmp
cs
test
sbb
sub
(bad)
sub
jae
out
stos
add
adc
jg
cmp
sbb
outs
aaa
adc
ins
sbb
xchg
mov
add
inc
inc
adc
push
and
push
repz
cwde
pop
sbb
and
je
xchg
mov
inc
cmps
mov
addr16
dec
push
dec
and
or
dec
inc
add
inc
xchg
or
int3
cmps
xor
ins
xor
movs
sub
imul
daa
push
stos
add
sbb
mov
fsubr
in
jno
push
add
mov
xor
and
in
dec
xchg
add
out
lods
add
inc
inc
jae
mov
out
jmp
xor
mov
push
lahf
add
movs
lds
lods
aas
adc
rcr
aaa
push
sub
ret
inc
loopne
pop
in
push
loopne
loopne
mov
les
push
add
jno
imul
push
or
mov
or
fistp
loope
dec
xchg
cmp
jmp
cwde
fisttp
adc
push
add
push
jb
addr16
loope
iret
jecxz
repnz
fiadd
loop
loop
enter
test
xor
enter
jecxz
jecxz
add
and
ins
xchg
cmp
or
test
cmp
pusha
xor
add
mov
hlt
sbb
add
inc
pop
cmp
fs
sbb
fs
scas
in
out
jl
cdq
nop
add
shl
adc
inc
scas
in
xor
pusha
cdq
nop
add
enter
add
or
push
nop
add
call
fs
lods
ror
stos
popf
add
xlat
sub
inc
or
mov
xchg
adc
aam
jmp
dec
mov
add
shl
jmp
pop
repnz
dec
jmp
add
test
fdiv
enter
sbb
cmp
adc
sbb
test
test
enter
nop
add
in
dec
in
xor
movs
test
adc
in
jb
scas
in
out
xor
or
mov
xchg
adc
fadd
sub
and
enter
dec
enter
fmul
lock
repnz
sub
pusha
add
test
mov
and
pop
icebp
adc
sbb
loopne
inc
push
and
repnz
repnz
and
test
dec
dec
enter
cmp
test
pop
push
enter
hlt
sbb
fs
nop
mov
sbb
inc
cmc
and
enter
pmulhuw
xor
xor
push
and
inc
push
xor
pusha
test
dec
dec
adc
cmp
push
mov
xchg
cmp
add
dec
stc
or
loopne
or
inc
xor
pop
nop
movs
fdivr
fistp
fmul
cmp
xor
inc
jo
inc
dec
push
dec
mov
pop
and
add
xor
and
jo
and
nop
pop
inc
loopne
out
jne
push
push
and
pop
adc
and
loop
les
push
dec
aad
and
and
inc
xlat
arpl
xchg
sbb
xchg
xlat
ror
arpl
les
push
nop
jl
mov
es
jns
mov
cs
mov
xchg
lods
push
ss
test
mov
add
add
or
scas
and
inc
sub
adc
adc
jb
xchg
daa
inc
add
iret
daa
loopne
pusha
mov
sub
and
xchg
(bad)
inc
adc
push
mov
push
lds
jno
add
adc
inc
or
out
sbb
adc
xor
dec
cwde
or
add
adc
stos
mov
mov
mov
inc
rol
nop
pop
and
and
adc
xor
push
ja
adc
xor
rcl
pop
dec
push
jno
inc
lea
and
inc
and
mov
and
or
and
or
dec
fs
mov
push
iret
ja
dec
add
xchg
inc
les
dec
shl
pop
sub
and
cli
add
mov
and
sub
cmp
add
mov
pusha
and
mov
xchg
pop
int3
mov
inc
add
jb
and
fsub
test
mov
inc
test
xchg
cmps
addr16
and
pop
push
xor
outs
jne
inc
add
jno
les
mov
mov
ins
sub
lahf
lock
xor
mov
cmps
and
and
push
push
dec
mov
data16
(bad)
(bad)
rol
add
es
mov
popf
test
inc
xor
lea
lods
cmovnp
xor
xchg
iret
loopne
ss
sub
test
jmp
jo
xchg
xchg
pop
add
xchg
jg
or
sbb
jg
inc
ins
test
adc
stos
aaa
jne
and
adc
mov
lea
or
xchg
mov
adc
sub
sbb
mov
jno
or
pop
pop
sbb
mov
iret
inc
add
sbb
sub
add
or
adc
mov
dec
jmp
and
stos
movnti
jp
jo
mov
mov
aad
jns
rol
lahf
test
push
adc
stos
adc
xchg
scas
pop
push
xchg
inc
push
arpl
bound
gs
xchg
dec
sub
add
push
jg
mov
mov
adc
inc
ins
mov
adc
mov
adc
and
sub
mov
outs
rol
pop
mov
adc
popa
ds
mov
mov
sbb
xor
out
xor
xchg
pop
mov
cmp
fcomp
sbb
dec
pushf
mov
adc
adc
lea
das
sbb
adc
jo
inc
or
and
push
adc
test
idiv
add
sbb
jae
sub
and
adc
sti
in
xchg
xor
cmp
cmp
je
dec
dec
and
pushf
cwde
or
test
popa
xor
aaa
inc
push
mov
inc
and
and
es
pusha
ja
sbb
iret
and
arpl
lds
jno
leave
mov
and
xor
iret
adc
add
imul
in
sub
ins
mov
inc
push
adc
cmps
xor
sub
push
push
adc
inc
stos
add
adc
adc
xchg
sbb
bound
add
sti
stos
cwde
mov
add
(bad)
xlat
mov
add
rcr
sub
ret
mov
pusha
and
xchg
inc
lods
mov
fild
sub
pop
adc
xchg
dec
outs
ds
pop
xchg
es
cmp
call
dec
and
out
addr16
dec
jb
dec
jb
xor
add
xchg
mov
stos
and
sub
ins
pop
xchg
xor
shl
mov
sbb
inc
cmp
and
adc
xor
cdq
adc
test
and
dec
dec
lods
(bad)
push
sub
dec
xchg
add
das
pusha
ins
shl
jle
rcl
mov
inc
aas
adc
nop
cmp
or
cmps
xor
push
aas
or
sbb
xor
in
cmps
push
data16
pusha
adc
xchg
popa
pop
and
sbb
mov
enter
cmps
fcmovnbe
aas
mov
in
adc
pop
popa
add
cmp
dec
loope
adc
push
movzx
stc
add
add
and
adc
jb
wrmsr
or
js
test
mov
sub
and
clc
and
xor
jo
test
adc
call
sbb
xlat
inc
push
inc
add
xchg
mov
loopne
movaps
or
inc
push
push
jo
inc
push
nop
cwde
mov
xchg
pushf
nop
add
sbb
or
pop
mov
inc
and
enter
pmulhuw
xor
add
and
and
jb
push
js
enter
int3
in
sub
and
adc
adc
xor
in
or
in
adc
jb
scas
cmp
ins
xor
lock
enter
or
movs
stos
loop
xor
sbb
fs
nop
adc
sbb
and
fs
push
nop
dec
je
add
sbb
fs
(bad)
in
in
je
sbb
adc
dec
enter
inc
cmp
and
xor
test
nop
mov
in
pop
adc
(bad)
pop
ins
ins
enter
cwde
cwde
add
and
enter
dec
enter
sbb
jbe
sbb
pusha
cdq
nop
add
mov
fs
les
nop
or
lock
enter
sbb
push
adc
or
enter
mov
add
sbb
jb
or
test
adc
jo
and
enter
or
loopne
leave
add
sbb
dec
sbb
add
test
dec
enter
aam
ins
inc
scas
xchg
enter
xor
enter
pop
mov
xor
xchg
cwde
or
cld
imul
mov
jns
aas
xor
or
inc
dec
push
cdq
ins
cs
ins
push
adc
aas
int3
sbb
aas
in
and
dec
or
out
bound
jns
aas
dec
dec
cmovne
and
nop
in
cmps
push
adc
dec
dec
inc
cs
call
aaa
jae
push
and
inc
gs
fcom
ja
xor
push
adc
xchg
push
outs
inc
inc
clc
xor
mov
and
lods
inc
mov
sub
xchg
push
mov
mov
je
cmp
fwait
sbb
dec
loop
pop
jg
loopne
jmp
fs
jmp
daa
sbb
ins
add
inc
adc
add
xchg
adc
int3
addr16
popa
jae
jmp
xor
jge
or
jbe
sti
dec
cmps
pusha
add
sub
fs
test
lods
push
mov
ja
mov
xchg
xchg
popa
ja
leave
arpl
inc
bound
jb
ja
push
dec
or
outs
cmp
popf
fs
mov
push
push
adc
int
or
cmps
jnp
xchg
adc
xor
mov
mov
add
loope
lods
mov
into
lahf
(bad)
xchg
pop
or
daa
jmp
and
cmp
call
xchg
(bad)
xlat
inc
cmp
lods
mov
daa
sub
fmul
outs
je
icebp
aad
adc
fucomp
and
in
fs
xchg
dec
cmp
popf
adc
cmp
and
mov
or
test
movs
and
add
mov
push
lods
mov
pop
pop
pop
add
mov
cwde
xchg
adc
pop
xlat
dec
pushf
mov
jg
je
or
xchg
inc
cmp
xchg
sub
jmp
pop
inc
xor
xchg
inc
bound
out
sub
shr
psllw
mov
pop
push
mov
rcl
pop
or
das
pop
rol
or
ins
(bad)
cmps
fnstcw
xchg
add
mov
loop
cdq
aaa
mov
pop
sbb
pop
scas
jmp
iret
ror
and
cmp
xor
or
jecxz
fisubr
adc
jno
sbb
pop
mov
ins
out
mov
mov
bound
loopne
push
lds
out
shr
cmps
mov
shl
mov
or
lods
pop
cmc
add
mov
inc
movs
pop
scas
shl
push
mov
jb
movs
mov
pop
pop
(bad)
sub
mov
lods
push
mov
push
adc
jg
sub
mov
les
sub
pop
xlat
and
add
(bad)
mov
pop
or
mov
out
and
popa
jg
lahf
aad
or
(bad)
iret
mov
lods
inc
das
mov
xor
shr
pop
pop
mov
rcr
push
aaa
mov
mov
dec
bound
js
inc
sub
lock
dec
adc
aam
aaa
pop
sub
mov
idiv
sub
sbb
or
pushf
sub
hlt
and
mov
lods
sub
sub
add
hlt
in
sbb
xor
sub
in
pop
cmp
dec
sub
daa
dec
mov
pop
sub
mov
ret
jns
sub
(bad)
jb
cmps
adc
hlt
sub
pop
repnz
dec
sbb
inc
cmp
fs
mov
shl
jb
pmulhuw
dec
cs
or
adc
call
or
nop
push
and
xor
repnz
xor
push
dec
enter
mov
xor
xor
enter
xor
enter
test
add
or
enter
sub
dec
ins
add
and
mov
fdivr
sub
test
dec
xor
add
nop
mov
and
xor
xor
and
jb
nop
mov
call
xchg
cmp
xor
xor
in
adc
dec
ss
adc
mov
and
pop
aaa
dec
enter
pushf
les
adc
add
cmp
in
ror
xlat
cmp
nop
or
inc
je
add
shr
dec
push
enter
cmp
sbb
nop
mov
and
nop
loopne
cmp
add
sbb
es
cmp
scas
in
dec
cmp
pushf
nop
add
or
dec
cmp
sbb
sub
dec
ds
add
nop
add
cmp
add
movs
enter
nop
in
and
inc
or
inc
push
cwde
hlt
in
pop
leave
sub
pop
inc
xchg
xchg
pushf
nop
add
add
sbb
in
inc
nop
in
pop
leave
or
inc
pusha
inc
cdq
nop
add
mov
adc
inc
inc
pop
nop
or
nop
sub
inc
inc
and
add
sbb
inc
je
scas
clc
xor
lahf
nop
add
inc
sbb
or
mul
nop
cmp
xor
daa
in
fmul
sbb
cmp
dec
add
inc
loope
mul
dec
or
sub
arpl
sbb
or
push
add
dec
push
mov
enter
dec
dec
or
fcomp
test
and
push
sub
ins
push
outs
push
pop
xor
inc
inc
xor
mov
data16
popa
fld
outs
cmp
or
ja
and
imul
inc
sub
jo
jp
jl
outs
lods
xor
fs
mov
or
aam
es
xchg
mov
push
pop
retf
xor
addr16
ins
jle
ret
or
hlt
sahf
sbb
or
nop
or
ins
outs
mov
adc
pop
jge
repnz
adc
xchg
daa
pop
and
je
adc
lods
jmp
sbb
and
pop
cwde
test
add
lahf
push
sbb
and
or
mov
pop
pop
xchg
addr16
or
adc
add
addr16
call
scas
xchg
sub
dec
movs
xor
mov
sbb
mov
scas
test
adc
xlat
imul
aad
adc
inc
add
gs
daa
imul
mov
jp
ja
add
sbb
or
mov
mov
pop
xor
popa
fwait
call
lahf
adc
adc
ror
test
or
xchg
inc
xchg
hlt
out
add
stos
mov
dec
fs
cmp
push
and
and
sbb
cmps
adc
sbb
add
add
push
test
sbb
invd
xchg
jo
jl
xor
and
bound
fs
jae
xor
xor
and
adc
or
and
or
and
and
imul
mov
popa
xchg
sbb
mov
loopne
or
adc
push
adc
or
cmp
add
xchg
scas
add
scas
or
lods
test
mov
dec
imul
jae
pop
pop
test
pop
aam
adc
push
push
je
sbb
mov
(bad)
sub
call
sub
inc
mov
push
pop
ret
retf
xchg
ja
sbb
shl
and
dec
jmp
cmp
data16
and
adc
or
outs
js
adc
inc
add
fwait
(bad)
mov
cmp
push
fs
jne
outs
sbb
adc
xchg
icebp
xor
push
adc
adc
dec
dec
or
or
rcl
imul
sbb
pop
add
inc
sub
loopne
sbb
push
mov
gs
in
and
xchg
inc
dec
lea
xor
dec
xor
sub
xor
sub
add
out
jge
dec
sub
and
sbb
xchg
adc
sbb
div
sbb
sbb
push
pop
jo
add
ins
sub
cmps
pop
sub
stos
mov
out
sbb
pop
or
mov
sbb
mov
adc
std
aam
push
mov
push
(bad)
std
sub
adc
inc
add
sub
inc
sbb
pop
mov
jp
gs
fs
daa
xor
push
inc
push
dec
sbb
imul
jo
xor
stos
mov
xlat
les
(bad)
xchg
push
or
cdq
sbb
cmc
sbb
dec
rol
aad
push
out
rcl
cwde
imul
xchg
data16
fcom
call
push
sub
out
retf
test
or
sbb
or
aas
mov
test
out
jmp
pop
or
cs
cmp
sub
popf
push
adc
cld
add
data16
push
xchg
xchg
arpl
das
sbb
fidiv
or
bound
ror
imul
dec
sbb
sub
and
inc
das
cwde
ja
mov
popa
ins
repz
sub
mov
push
popf
movs
movs
push
ret
xor
jo
(bad)
cmps
xchg
fdivr
pop
cmp
bound
sbb
daa
dec
ins
add
and
(bad)
xchg
ins
xchg
adc
loope
pop
or
dec
aam
fsub
sbb
inc
sti
adc
add
pop
nop
ins
rcl
std
inc
mov
pop
mov
pop
jae
ins
or
cmp
and
or
xchg
and
sub
mov
mov
sbb
inc
fwait
pop
inc
pop
popf
imul
xor
and
bound
call
rcl
(bad)
push
std
pop
loope
es
punpcklwd
inc
dec
pop
add
mov
outs
gs
mov
scas
aaa
loopne
andps
mov
and
pop
sbb
pmuludq
push
cmovle
xchg
je
or
je
dec
(bad)
fwait
cli
mov
bound
cs
imul
test
push
and
add
pop
nop
loop
add
imul
dec
sub
push
imul
push
imul
sbb
xor
cmp
mov
xor
inc
(bad)
pop
shl
out
dec
xchg
push
dec
sar
stc
or
sub
iret
scas
jecxz
or
(bad)
sbb
pop
add
add
pop
xchg
dec
push
push
add
mov
push
jne
pop
(bad)
nop
push
jb
push
adc
movs
push
mov
add
push
sbb
push
push
nop
adc
sbb
ss
pusha
popf
sbb
push
nop
inc
pusha
popf
jo
pop
jl
mov
cmp
addr16
or
jb
push
cwde
addr16
enter
call
adc
sub
adc
enter
xor
mov
(bad)
in
cmp
add
pop
sub
xor
mov
push
and
loopne
pop
xlat
nop
or
mov
fs
push
lods
fsub
dec
push
enter
pop
pop
or
inc
sub
sbb
nop
push
cmp
sbb
mov
or
adc
cdq
nop
sub
pop
push
js
es
sbb
cld
sub
nop
sub
push
pop
mov
add
sbb
add
jo
in
pushf
nop
rol
pusha
xor
sbb
pusha
nop
jb
push
nop
shr
popa
add
nop
push
inc
popa
push
movs
fsub
bound
in
push
bound
lock
inc
dec
add
inc
add
test
fs
mov
xor
mov
sbb
adc
aaa
add
sbb
in
sub
push
nop
or
pushf
nop
add
add
push
in
sub
pusha
push
nop
or
cwde
(bad)
lock
push
jb
and
data16
cmp
sbb
dec
add
scas
pushf
enter
nop
hlt
sub
test
sbb
test
loopne
imul
pusha
mov
and
xor
call
repnz
dec
push
pmulhuw
xor
sub
imul
jb
mov
push
or
pushf
in
xor
aam
ins
adc
(bad)
ins
mov
repnz
push
and
inc
outs
add
and
mov
enter
test
jl
les
add
in
or
jo
dec
enter
push
nop
pop
cmp
(bad)
push
jno
pop
jb
es
jno
inc
sub
push
jb
push
mov
sbb
xor
jb
add
or
push
dec
aas
es
inc
and
and
dec
and
pop
cmp
inc
cmp
push
or
dec
out
sub
xchg
jne
mov
outs
pop
es
mov
outs
jl
pop
pop
push
push
outs
addr16
and
xchg
inc
das
jg
pusha
inc
or
aad
popa
popa
jp
(bad)
dec
pushf
jb
dec
or
pusha
out
je
sbb
and
push
adc
add
aaa
out
jo
sbb
add
mov
add
dec
mov
lea
fiadd
outs
addr16
and
jbe
pop
sbb
and
xchg
shr
xor
outs
je
push
fimul
push
test
popa
and
popa
xchg
pusha
pop
or
ja
jns
push
int3
inc
xchg
and
pop
ja
jb
adc
aaa
pusha
inc
ficom
push
daa
popf
shl
mov
xor
cmp
and
sub
sbb
adc
ret
ret
pop
imul
popa
sbb
(bad)
push
fcmovb
mov
adc
jne
pop
jae
popa
nop
mov
dec
lods
cdq
mov
pop
sbb
out
jb
outs
push
nop
sar
cdq
fisub
mov
test
mov
xchg
sbb
cmp
adc
xchg
jo
add
test
sbb
jne
(bad)
add
pusha
fld
test
and
ret
dec
inc
cmps
xchg
xor
cmps
adc
push
aad
sbb
pop
or
adc
jg
imul
pop
add
cmps
pusha
cmps
cs
mov
bound
ja
inc
das
ret
jb
outs
push
rcl
aaa
imul
test
and
outs
or
sbb
and
cmp
and
push
push
scas
mov
fbld
add
push
push
sub
mov
and
mov
out
cdq
mov
cmps
cmp
adc
popa
dec
jo
and
dec
gs
adc
sbb
aaa
test
jbe
and
adc
stos
es
inc
outs
call
adc
(bad)
mov
inc
push
push
out
in
mov
and
xor
daa
adc
add
sar
sub
mov
sbb
ret
dec
jp
aad
inc
sbb
pop
dec
js
jne
mov
jmp
and
sub
sub
cmp
or
dec
dec
neg
push
adc
and
fcom
dec
add
lods
pop
std
add
xor
pushf
fld
xor
mov
sub
xlat
jne
and
bound
mov
sbb
mov
mov
xor
xchg
adc
xchg
jo
rcl
outs
dec
ror
and
rol
and
popa
pop
add
jecxz
xchg
fcom
push
and
inc
movs
mov
popf
pop
xchg
dec
inc
iret
in
inc
inc
jbe
mov
sub
sub
fild
lahf
and
mov
push
pop
xchg
dec
mov
rcl
outs
sub
adc
das
popa
nop
and
dec
js
sbb
jbe
outs
adc
cmp
(bad)
jp
or
dec
jbe
and
lods
and
pop
test
push
push
or
iret
mov
push
mov
je
dec
inc
ja
push
call
call
add
sbb
scas
inc
or
addr16
iret
imul
dec
lods
fldcw
cmps
push
sahf
dec
lahf
outs
pop
add
cmps
or
test
outs
xor
sbb
or
mov
xchg
imul
pop
mov
popf
bound
mov
aad
in
pop
cld
cmp
shl
cmps
fiadd
adc
xor
mov
xchg
outs
test
push
daa
push
data16
sub
(bad)
jl
or
cmp
(bad)
sbb
cmp
ins
ja
ret
mov
lds
mov
movs
scas
push
test
dec
(bad)
das
or
mov
lahf
or
cwde
mov
mov
or
fwait
adc
xchg
mov
shl
sub
dec
sbb
pop
jns
mov
xor
nop
inc
pop
add
loope
rcr
sub
inc
add
imul
adc
cmp
sbb
scas
xchg
daa
xchg
or
xor
push
and
adc
scas
push
xchg
mov
pop
imul
dec
stos
add
inc
or
aaa
push
xchg
(bad)
(bad)
sub
popa
call
popa
mov
pop
xchg
mov
rdpmc
or
dec
and
mov
in
xor
and
adc
adc
mul
or
dec
sbb
jae
add
push
call
push
adc
and
jo
mov
cwde
and
mov
and
sbb
and
add
push
jns
pop
and
sub
sbb
inc
outs
inc
adc
cmp
test
loopne
enter
cmp
adc
or
repnz
push
and
sub
add
and
jl
or
cld
cmp
enter
or
cld
pop
leave
add
sbb
inc
xchg
enter
pmulhuw
xor
or
xor
pop
jl
enter
mov
and
mov
adc
sbb
lods
enter
int3
clc
xchg
cmp
add
mov
xor
rol
mov
mov
and
enter
or
cld
pop
leave
add
cmp
add
test
sbb
dec
enter
mov
mov
inc
lods
or
adc
aam
cld
nop
add
test
and
es
sbb
dec
dec
nop
or
inc
je
add
cwde
cwde
add
sbb
fs
scas
in
mov
cdq
nop
add
sbb
dec
(bad)
ins
inc
push
nop
or
hlt
and
in
test
xchg
sub
push
nop
add
fadd
jb
cdq
fmul
xchg
cmp
js
add
test
and
fcom
xlat
xchg
inc
fs
enter
in
xchg
and
repnz
pop
xchg
nop
add
test
clc
xor
xchg
cmp
xchg
push
or
enter
je
mov
xchg
cmp
add
xchg
xor
xor
enter
adc
inc
cwde
xor
push
bnd
mov
add
cdq
xor
mov
pop
out
call
test
enter
fwait
inc
inc
dec
push
cmp
jno
pushf
xchg
xor
push
jb
sbb
pushf
fsub
sub
inc
jne
pop
xchg
cld
dec
es
mov
cld
call
pop
dec
dec
push
push
push
pop
inc
scas
inc
dec
dec
add
pop
jno
(bad)
ja
mov
lods
sti
pop
xor
in
ds
add
jmp
mov
ret
jp
adc
pop
sbb
xchg
jo
sbb
adc
aas
add
movs
imul
pop
mov
das
aaa
jo
ins
imul
outs
dec
cld
dec
imul
sbb
ss
movs
mov
push
daa
jg
sbb
mov
mov
arpl
sub
or
jno
cwde
pop
jne
int3
sar
into
push
outs
fs
push
or
inc
or
outs
pushf
outs
jb
outs
inc
dec
push
dec
xchg
icebp
outs
or
mov
pop
lds
cwde
popa
addr16
rcl
pop
pushf
sub
push
xor
dec
leave
push
dec
jne
pusha
sbb
(bad)
add
mov
sbb
add
je
pushf
adc
xor
jp
pop
div
jp
push
arpl
jl
inc
sub
add
inc
adc
xchg
mov
and
lock
cmp
inc
add
jno
fistp
test
aaa
cmc
mov
test
xchg
ss
cmp
sbb
mov
pop
sbb
pop
mov
inc
push
out
and
mov
and
mov
ja
(bad)
push
mov
dec
arpl
jb
cmp
xor
inc
push
push
aaa
lea
add
adc
pop
jmp
or
fisub
jp
jmp
imul
lock
mov
xor
outs
rcl
xor
sbb
inc
retf
pop
mov
xor
push
rcr
mov
ja
dec
int3
jo
pop
imul
adc
push
sbb
jo
adc
shl
out
pop
mov
imul
add
pusha
inc
sbb
fwait
sub
lahf
imul
adc
fsubr
jg
dec
rcl
pop
sbb
imul
sbb
push
add
nop
mov
sbb
cdq
or
and
scas
or
add
and
push
pop
inc
sbb
inc
push
adc
jae
mov
into
cmps
adc
scas
mov
sbb
aaa
nop
jne
push
pushf
xor
xchg
inc
xor
inc
ja
movs
ins
retw
pop
mov
iret
inc
mov
mov
xchg
push
push
scas
mov
or
fwait
hlt
gs
ret
inc
scas
sub
jp
sbb
sbb
push
pop
xor
arpl
out
push
gs
xchg
sub
je
clc
fidiv
adc
bound
and
mov
dec
nop
pusha
add
das
xlat
sbb
or
popa
push
adc
add
imul
bound
daa
pop
aad
push
pop
pop
fwait
mov
sub
push
jns
xchg
inc
cmps
arpl
add
sbb
jne
jns
ret
sbb
fimul
test
push
or
mov
inc
bound
dec
iret
push
jl
ins
and
cmp
adc
or
sbb
movs
lahf
pop
dec
jo
inc
mul
lods
sub
pop
mov
out
mov
add
mov
je
outs
and
iret
rcl
and
adc
lods
sub
or
and
pusha
dec
adc
push
mov
dec
jo
cmps
sub
xlat
xor
daa
push
add
test
lods
sub
sbb
adc
and
jmp
fidiv
bound
inc
jno
and
and
sbb
test
and
xchg
clc
mov
push
mov
or
dec
je
or
sub
outs
mov
and
cmp
jno
push
sbb
stos
fdivr
test
sub
and
daa
out
movs
or
sbb
das
cmps
js
push
push
lahf
cmc
push
and
jmp
punpckhwd
mov
cmps
das
outs
das
jmp
fnstenv
inc
pop
sub
aaa
add
cmp
sub
push
dec
and
pusha
dec
jmp
push
jno
inc
sbb
and
push
dec
stc
mov
xor
add
and
inc
aad
xor
pop
jp
fimul
mov
cmps
jge
scas
dec
ins
popa
addr16
dec
pop
retf
(bad)
jns
add
sbb
add
cld
mov
sbb
leave
sbb
mov
push
popa
pop
cmp
xor
inc
push
add
(bad)
ins
jns
ins
xor
movs
and
out
or
mov
xadd
out
dec
jg
adc
and
ins
jne
out
ror
dec
aaa
mov
jne
dec
shr
pop
and
sbb
adc
jae
je
mov
ficomp
push
push
mov
mov
mov
or
movq
xchg
mov
mov
adc
outs
lea
push
and
ret
sub
jmp
pop
adc
mov
mov
dec
adc
cmps
pusha
mov
icebp
popa
xor
xor
lahf
jb
fs
sbb
movs
test
xlat
mov
pop
test
test
test
and
imul
push
or
mov
mov
dec
xchg
cmp
jb
stos
jns
and
xlat
enter
sldt
stos
push
jb
out
inc
stos
stos
cdq
inc
add
test
inc
xchg
mov
and
and
lods
sub
cld
xchg
cmp
add
lods
dec
lods
xor
rol
and
lock
xlat
nop
or
nop
add
mov
enter
scas
pop
or
inc
and
sbb
add
nop
push
inc
mov
sbb
mov
in
or
sub
add
sbb
sbb
in
ins
cwde
daa
add
nop
add
push
mov
add
lods
fsub
dec
push
enter
mov
or
inc
cmp
sub
pop
mov
cdq
nop
sub
add
add
test
dec
enter
je
and
xor
test
(bad)
in
in
xor
in
adc
sbb
cmp
nop
cmp
add
jns
daa
fs
mov
nop
add
push
enter
or
in
fs
pop
leave
or
int3
add
in
pusha
lods
pop
jb
cdq
fadd
cmp
or
inc
jno
push
mov
push
xor
inc
es
sar
pop
nop
hlt
and
nop
sub
jbe
mov
inc
push
and
fcom
mov
dec
mov
in
cmp
js
push
and
jb
call
repnz
dec
sar
add
test
add
and
repnz
push
ret
enter
lock
xchg
cmp
ret
inc
ret
mov
add
mov
or
lods
dec
loopne
dec
and
xchg
aaa
pop
pop
sbb
push
sbb
stos
test
sahf
push
(bad)
jo
push
imul
mov
inc
inc
push
repnz
and
add
stos
and
bound
and
pop
lds
mov
arpl
outs
sbb
mov
jae
sahf
lods
popaw
ds
jns
les
dec
mov
fnstenv
pop
sbb
bound
xlat
and
inc
scas
bound
xor
outs
aam
inc
adc
jg
cwde
sub
push
xchg
add
and
test
mov
pop
and
inc
and
inc
ja
sub
sahf
imul
aaa
mov
dec
mov
aaa
cmc
and
adc
xchg
cmps
push
mov
out
inc
dec
arpl
pop
or
dec
sbb
into
stos
inc
sbb
cmps
aas
popa
scas
(bad)
mov
push
and
fild
pop
test
movs
popf
and
mov
ror
sbb
inc
aas
xchg
mov
shr
inc
stos
imul
and
repz
pop
(bad)
push
mov
mov
sbb
pop
and
adc
movs
mov
aas
xchg
dec
lock
punpckldq
sub
adc
sbb
xchg
mov
sbb
les
xchg
mov
pop
mov
imul
pop
and
pshufw
popf
outs
push
arpl
and
sub
adc
jne
xchg
xor
inc
test
stos
add
outs
dec
test
int3
(bad)
dec
sbb
fimul
outs
mov
lods
add
pop
addr16
ins
add
xor
mov
out
mov
push
fild
out
and
shl
sbb
sub
mov
mov
fidiv
xchg
daa
sbb
mov
hlt
jae
mov
shl
push
test
lock
js
pop
bound
xchg
aas
outs
inc
les
adc
in
adc
xor
add
(bad)
popa
xor
popa
jo
outs
ss
mov
adc
pushf
xor
sub
daa
outs
and
dec
mov
bound
sete
shl
je
test
(bad)
daa
sub
daa
jmp
sub
add
pop
and
(bad)
pop
pusha
mov
add
push
lea
jae
rcl
adc
and
mov
call
imul
adc
test
jnp
xor
dec
popa
inc
adc
loope
mov
push
outs
pop
adc
arpl
imul
adc
mov
sbb
or
lods
and
mov
and
movs
cdq
rcl
fs
dec
mov
or
pop
retf
retf
rol
addr16
pop
push
popa
movs
adc
xchg
popa
sbb
cmp
int3
pop
xor
rol
pop
xchg
pop
mov
int3
push
lahf
or
dec
ret
daa
leave
xchg
test
inc
addr16
or
clc
fs
bound
adc
xchg
shl
jne
adc
inc
cmp
or
jmp
das
cmp
jge
pop
ins
stc
shr
pop
add
adc
imul
mov
imul
and
xchg
daa
mov
sbb
lods
aaa
push
add
rol
lods
add
cmps
or
das
inc
jae
cmovno
xor
or
mov
sub
pop
cmp
mov
and
dec
sub
int3
(bad)
adc
enter
add
mov
mov
mov
cmpps
inc
and
lods
pop
add
push
fs
mov
pcmpgtd
hlt
xor
mov
mov
cmp
push
test
or
loopne
inc
pop
(bad)
or
jo
or
inc
aas
lods
inc
pop
jno
adc
inc
pop
mov
aas
jg
mov
xchg
mov
inc
jb
das
add
out
adc
xchg
sub
std
and
fild
dec
cmps
or
scas
inc
push
xor
bound
mov
out
adc
(bad)
out
out
adc
ins
mov
add
xchg
not
jb
sbb
addr16
mov
and
fwait
mov
xor
pop
hlt
mov
mov
push
add
jmp
push
(bad)
ins
lods
push
mov
cmp
loopne
cli
ret
inc
rcr
or
pop
stc
and
test
jmp
xor
jmp
inc
jle
(bad)
and
sbb
in
test
dec
or
adc
enter
jmp
or
test
(bad)
ficom
add
and
pop
gs
push
out
(bad)
fsub
test
add
and
or
mov
pop
add
or
mov
sub
xchg
add
push
jmp
mov
(bad)
addr16
stos
mov
dec
mov
sbb
sbb
inc
push
mov
and
jnp
push
xor
cli
or
dec
mov
dec
add
adc
push
pop
test
stos
xchg
test
cmps
xchg
xchg
mov
mov
sbb
push
add
inc
dec
xchg
sub
sbb
or
ja
and
add
push
sbb
pop
stc
ror
xor
ret
mov
sti
enter
call
adc
test
ins
push
xchg
fdiv
retf
add
dec
xchg
push
scas
fbld
ret
mov
shrd
enter
push
retf
cmps
xor
dec
pushf
sbb
dec
or
sub
xchg
xchg
das
jbe
imul
add
sbb
retf
sub
sbb
push
or
and
sub
test
mov
or
pop
add
les
fsubr
cmps
adc
xlat
retf
inc
shl
push
loopne
jne
jecxz
pop
shl
or
shr
loope
and
add
xchg
cmp
repnz
ror
shl
push
adc
xor
(bad)
and
mov
add
(bad)
mov
push
jg
add
scas
xor
ret
pop
call
pusha
call
ins
and
jnp
or
popa
hlt
in
cmps
push
dec
or
in
xchg
sub
lock
mov
add
push
pushf
fs
test
das
clc
pop
mov
dec
shl
cmp
mov
rol
adc
push
out
dec
pop
adc
jbe
movs
jae
and
mov
add
mov
ins
jg
mov
fwait
adc
mov
or
jl
pop
test
push
pop
xor
push
adc
sub
ficom
xor
or
jo
adc
push
xchg
out
adc
xchg
dec
mov
sbb
gs
dec
es
inc
inc
test
mov
dec
inc
cvtps2pi
dec
inc
pop
xor
das
stos
jp
add
or
mov
mov
mov
adc
mov
nop
push
sbb
add
sbb
outs
nop
xor
xor
ror
pop
scas
xchg
dec
pop
pop
inc
dec
xchg
cmp
pop
sar
ror
dec
dec
dec
nop
inc
leave
push
dec
add
mov
mov
(bad)
fcmovbe
jg
loopne
mov
xor
push
adc
or
sub
push
inc
mov
outs
aaa
xor
rcr
shl
sbb
fwait
or
push
push
xor
xchg
push
add
jb
pop
xchg
scas
je
jo
dec
and
rol
mov
or
or
test
and
mov
bound
cmps
dec
pop
aam
pusha
mov
rcl
call
leave
push
pop
popa
aam
pop
or
nop
pop
or
nop
retf
add
mov
pusha
adc
and
outs
shr
les
je
and
mov
fs
cmp
(bad)
aad
jle
retf
add
and
nop
cwde
push
inc
and
xlat
pop
mov
movs
mov
ins
xor
ror
cmp
or
and
mov
test
cwde
call
icebp
dec
and
or
je
or
fcomp
inc
cs
enter
test
cmps
je
fadd
add
pop
jae
mov
mov
inc
mov
sar
fld
add
sbb
push
sar
fcmovb
ret
bound
sbb
push
adc
(bad)
(bad)
shr
pop
ror
mov
fiadd
adc
fstp
inc
es
enter
test
and
xchg
push
fcmovne
inc
add
fcomp
pop
aam
shl
sbb
mov
fadd
xchg
sbb
adc
(bad)
fadd
cdq
add
nop
sbb
fmul
xchg
fucom
in
cdq
add
test
fst
nop
retf
adc
call
sbb
or
test
and
leave
in
lock
nop
push
add
fild
enter
(bad)
add
xor
cwde
iret
sbb
in
ja
pmulhuw
push
loopne
add
sub
pop
stc
int
loopne
mov
test
and
jge
add
scas
sub
xor
inc
or
or
or
dec
pop
and
mov
sub
mov
mov
pop
adc
add
mov
popa
xlat
mov
hlt
loope
add
adc
loop
sbb
test
sub
aas
test
data16
dec
xor
ja
lea
test
lea
out
jns
or
aaa
lods
ins
jecxz
and
add
in
add
(bad)
add
mov
in
movs
adc
daa
shl
fadd
bound
fs
adc
or
mov
fild
xor
mov
or
fild
and
dec
inc
xor
jecxz
add
fistp
sub
xor
xchg
shr
xor
push
ss
cwde
xchg
hlt
mov
and
in
and
and
daa
jo
loope
mov
mov
or
pop
add
sub
sbb
mov
add
add
repnz
out
out
push
xor
push
dec
adc
sub
hlt
adc
pusha
sbb
cmp
out
add
popf
out
mov
movs
out
cmp
shr
jg
dec
pusha
call
dec
call
mov
imul
out
stos
push
add
jmp
sub
mov
mov
int
in
enter
aam
cmp
and
jmp
test
adc
(bad)
loopne
and
push
jmp
mov
and
cmc
add
sar
add
adc
in
xlat
jmp
and
in
add
and
mov
jae
push
adc
in
and
aad
xor
ret
dec
and
push
(bad)
in
or
add
out
cmp
fsubr
(bad)
in
sub
push
outs
push
pop
ret
leave
test
cmp
dec
jo
lahf
fs
and
stos
imul
ret
daa
scas
add
test
xor
sub
adc
out
popa
leave
inc
pop
add
sub
inc
dec
ja
mov
cmp
cmp
sbb
add
and
aad
dec
pop
xor
add
or
cmps
dec
loope
retf
jno
pop
loopne
add
xor
mov
jg
icebp
push
jo
and
popa
or
cmp
mov
out
in
push
test
jno
mov
inc
scas
adc
pop
pop
push
pop
shr
outs
jge
pop
sub
push
mov
pop
mov
std
and
and
adc
mov
jp
imul
dec
pop
pop
or
xchg
push
dec
push
xlat
sbb
ret
out
and
lahf
cmps
in
pop
sbb
out
pop
fstp
or
cs
push
nop
repz
inc
adc
enter
and
jo
sub
mov
xchg
add
ror
mov
pop
inc
ins
pop
jecxz
cmp
je
inc
loopne
popf
push
inc
cmps
push
pop
adc
or
jnp
adc
xchg
fldenv
ficom
inc
or
or
dec
jno
in
mov
inc
in
arpl
adc
mov
call
not
adc
pop
cmp
loop
es
add
adc
pmullw
mov
enter
lds
adc
sbb
enter
test
pop
and
mov
mov
sahf
xor
mov
cmp
add
and
xor
test
daa
sbb
dec
lahf
mov
sbb
adc
and
movs
sbb
dec
inc
or
scas
addr16
repnz
pop
add
add
stos
mov
mov
(bad)
jne
jae
add
(bad)
and
xor
sbb
bound
mov
xchg
jl
add
jmp
mov
ror
into
adc
sbb
adc
mov
mul
jb
adc
push
mov
mov
(bad)
scas
(bad)
push
dec
cmp
sti
pop
dec
push
movq
fdivr
pop
jno
inc
leave
hlt
call
and
xchg
call
or
aas
xchg
(bad)
sbb
xor
push
enter
call
pop
and
and
ins
dec
cmc
cmps
add
dec
jp
pop
add
std
(bad)
adc
mov
cwde
std
leave
inc
and
dec
neg
and
std
iret
pop
movs
dec
push
push
ins
push
adc
cmps
or
push
popf
or
pop
and
push
adc
pop
inc
mov
jne
ds
sub
mov
jl
and
mov
stc
out
mov
push
xor
cmp
pop
inc
and
mov
dec
pop
out
sub
mov
test
inc
and
bound
pop
sub
xchg
or
or
int
inc
cmp
push
sbb
mov
cdq
mov
or
mov
mov
sub
adc
aam
and
xor
mov
xor
pop
fmulp
rcl
and
call
retf
fst
add
or
in
pop
xor
push
(bad)
stc
popa
test
(bad)
fadd
test
aam
dec
and
inc
imul
cs
add
sbb
push
pop
je
je
pop
(bad)
loope
sub
scas
add
add
push
sbb
jnp
dec
add
add
mov
aam
div
leave
push
aaa
lods
and
call
lock
ret
or
popa
sbb
call
ja
mov
sub
pop
dec
(bad)
fdivr
jmp
test
mov
loope
inc
mov
icebp
inc
or
add
add
dec
test
pop
les
sub
test
dec
fidiv
mov
mov
mov
inc
add
mov
shl
and
push
nop
call
and
je
jb
lods
shl
mov
sbb
add
out
in
pusha
add
sub
or
dec
adc
imul
dec
push
push
cwde
test
sbb
or
push
test
add
aaa
inc
sub
aam
cmp
fisttp
shl
xchg
pop
scas
jecxz
loopne
inc
pop
not
test
push
sub
jne
xor
inc
xor
sbb
pop
mov
movs
fiadd
fadd
rcr
adc
or
add
call
or
dec
xor
mov
sub
pop
shr
jb
ins
or
push
outs
sbb
aam
ds
shl
(bad)
cli
call
aam
ja
aaa
adc
and
jg
jo
imul
mov
and
sahf
ret
jnp
or
enter
mov
add
mov
mov
mov
or
loopne
inc
jmp
inc
ret
sbb
push
pop
push
mov
outs
enter
push
outs
rol
xor
xchg
(bad)
in
les
test
ds
xor
outs
int3
or
in
int3
or
push
pop
in
popf
and
js
mov
dec
xchg
or
xor
xchg
mov
lods
push
xchg
push
push
outs
int3
sbb
or
scas
sbb
mov
add
sbb
xor
pushf
or
or
lods
adc
or
je
movs
nop
cmp
xor
sbb
or
mov
or
mov
fmul
ins
add
push
gs
rol
mov
jmp
(bad)
cmp
xor
(bad)
mov
mov
xor
jg
aad
fs
and
and
mov
mov
xchg
test
xchg
lea
and
inc
cmps
push
push
dec
ds
ror
push
push
and
or
rol
pop
rol
push
out
adc
push
adc
push
xchg
mov
pop
add
sbb
je
mov
push
cmp
jmp
mov
and
mov
stos
dec
pushf
cmps
(bad)
mov
lea
mov
int
fisub
adc
stc
cwde
add
sbb
mov
sub
and
sbb
jmp
mov
sub
mov
cmp
add
add
xchg
push
inc
inc
nop
faddp
leave
cmps
test
out
sub
or
xchg
or
cmps
ja
scas
and
repz
or
add
jecxz
push
mov
aad
cwde
and
mov
mov
inc
aas
jbe
sbb
dec
and
fsubr
xor
retf
lahf
push
data16
mov
mov
mov
pushf
push
int3
sub
add
jmp
sbb
push
mov
mov
mov
gs
inc
or
(bad)
loopne
jnp
mov
ins
mov
or
xor
aam
cld
shl
ror
pop
mov
test
enter
(bad)
inc
sub
or
add
sub
cmp
das
je
adc
jg
pusha
xor
push
fsub
jge
popa
mov
fnsave
je
xchg
inc
cmp
mov
lahf
and
adc
aam
cmp
sub
in
cmp
jb
dec
call
mov
cs
push
dec
(bad)
retf
inc
inc
movs
sbb
leave
test
jbe
cmp
fsubr
push
jno
aas
ss
inc
xchg
rcr
out
pusha
cs
or
or
test
xchg
adc
ret
shl
mov
xor
(bad)
adc
popa
ror
or
mov
mov
adc
ds
test
xor
ss
or
mov
adc
xchg
inc
or
push
pusha
inc
push
add
imul
inc
ficom
sub
les
sub
push
(bad)
movs
sbb
call
push
cs
nop
in
sti
adc
repz
mov
sub
fbstp
mov
fmul
sub
inc
test
out
pop
sbb
pop
jne
and
push
ret
xchg
xchg
mov
adc
inc
dec
sti
jmp
mov
fsub
mov
mov
xchg
fsub
icebp
push
and
fidiv
push
dec
jnp
inc
sub
fs
pop
call
in
(bad)
in
adc
and
lahf
xlat
adc
scas
stos
lds
jns
adc
xchg
add
ins
sbb
or
in
sbb
sbb
sbb
xchg
sbb
enter
sbb
sbb
cld
or
mov
sbb
aad
adc
sbb
pop
cmp
inc
sbb
sbb
cs
push
nop
sbb
ds
xchg
das
xchg
inc
sbb
enter
je
xchg
and
xor
sbb
js
or
sbb
fstp
and
imul
xor
adc
push
sub
rcr
mov
shl
push
or
dec
sar
sub
jne
xlat
mov
adc
adc
das
add
call
test
dec
js
pop
repnz
icebp
cmp
or
test
mov
unpckhps
fist
je
push
inc
jmp
sub
jb
ret
aam
int3
aam
pushf
xor
or
pop
in
dec
(bad)
into
sar
jns
or
mov
sahf
mov
sbb
xchg
test
shl
dec
pop
fcomip
imul
(bad)
push
or
test
jne
jp
rol
add
daa
push
loope
adc
jmp
ror
fcom
push
bound
inc
mov
into
fxch
cmps
mov
sar
sbb
adc
add
add
pop
add
dec
add
pop
cmps
pop
or
movs
push
pop
inc
aaa
lea
and
add
enter
sub
adc
adc
push
cmp
push
(bad)
aaa
movs
cmp
sbb
pop
dec
das
fldcw
pop
mov
pop
and
loop
or
adc
push
ds
das
mov
pop
popa
add
add
sub
or
xlat
imul
int3
movs
inc
sub
or
adc
xchg
fist
pop
sub
push
(bad)
mov
rol
loope
add
in
daa
add
sar
xor
and
xchg
sbb
enter
aas
and
daa
mov
out
pop
jmp
sbb
and
popa
pop
or
or
inc
scas
adc
js
inc
jbe
jae
inc
shl
(bad)
in
mov
out
out
and
aas
add
mov
inc
fistp
test
rcl
xchg
or
aas
popf
sbb
and
xchg
dec
inc
and
adc
and
sbb
mov
mov
mov
xor
or
ds
inc
je
or
push
icebp
or
retf
fneni(8087
or
test
pop
ror
dec
add
inc
les
inc
adc
cld
add
sub
sbb
push
jb
xor
rcl
adc
adc
xchg
fstp
fld
test
test
dec
fcmovnu
fcmovu
dec
jae
xchg
call
and
pusha
dec
ret
mov
inc
test
cmps
gs
xchg
xor
(bad)
shl
push
adc
cs
sbb
outs
das
leave
rol
(bad)
mov
icebp
mov
pop
and
lahf
xchg
cs
out
into
je
pop
pop
mov
add
and
mov
lods
test
test
add
into
iret
add
cmp
cmp
sahf
movs
mov
jb
sbb
inc
pop
inc
adc
mov
xor
movs
xor
sub
jmp
mov
scas
add
inc
jne
ds
cmps
neg
cmp
xchg
inc
pushf
inc
xchg
jl
dec
xor
nop
nop
ror
imul
inc
mov
xchg
dec
or
mov
pusha
and
sub
dec
ror
xor
out
ret
lock
and
sbb
in
es
mov
shl
mov
pop
leave
push
jns
mov
add
ror
mov
or
sbb
push
sbb
jmp
mov
push
or
jnp
sysexit
lods
pop
or
ret
xchg
call
nop
fdivr
xor
sub
adc
xor
retf
xor
jecxz
imul
sbb
jo
ins
jmp
mov
jne
ins
push
cmp
and
movs
sub
int
je
mov
clc
jo
or
pop
jne
or
fld
jl
ss
jmp
xor
sub
dec
inc
xchg
and
xchg
push
(bad)
mov
cmp
cmp
pop
dec
mov
icebp
aad
or
cmp
jne
out
mov
sti
inc
adc
push
lods
mov
retf
div
inc
adc
xchg
xor
add
lods
rol
js
jne
push
add
outs
gs
ret
test
shl
and
add
dec
repnz
or
xor
and
and
loopne
adc
add
dec
inc
pusha
or
sbb
adc
sub
ss
mov
adc
or
xor
xchg
dec
mov
jnp
add
mov
int3
in
lea
les
popa
mov
and
inc
jo
aas
je
lods
xchg
jmp
push
adc
(bad)
xlat
iret
sbb
adc
ja
les
push
add
add
aas
add
(bad)
loopne
not
xchg
pop
(bad)
js
push
mov
fs
push
add
adc
pusha
and
sub
xor
outs
(bad)
pop
scas
mov
leave
inc
pop
and
pop
adc
or
pop
popa
sbb
lods
pop
xor
mov
jl
mov
fdivr
int3
xchg
or
sbb
pop
fbld
xchg
stos
fs
mov
call
xchg
fstp
push
push
scas
fadd
(bad)
test
xor
push
push
cdq
push
inc
movs
jb
adc
in
in
and
je
jmp
aam
pop
dec
call
cwde
add
push
push
inc
mov
push
sti
add
inc
popf
jnp
jp
gs
sti
adc
dec
(bad)
jne
push
enter
test
jo
mov
sti
mov
hlt
sbb
outs
and
add
dec
fcomp
pusha
push
enter
xor
or
sub
dec
pop
xor
xor
fstp
out
aaa
adc
add
pop
fiadd
or
xchg
lock
push
sbb
nop
pop
xchg
fisubr
in
xor
jno
xor
jbe
or
adc
add
sub
push
xchg
lods
or
in
cdq
and
outs
in
xchg
sbb
sub
ja
inc
push
and
and
lds
pop
or
test
push
js
les
and
popa
ins
cmp
les
icebp
sahf
push
test
stos
dec
sub
fst
adc
fs
rcl
and
or
cwde
loope
pop
xor
lea
movs
sbb
cmp
test
test
or
or
retf
jecxz
retf
mov
mov
mov
sub
mov
or
nop
test
(bad)
xor
cmps
loopne
pop
js
sbb
pusha
xchg
mov
lock
adc
inc
and
pushf
pushf
mov
ja
movs
inc
mov
pop
cmp
cwde
sub
or
mov
cmp
rol
push
int3
imul
daa
mov
rcr
fimul
daa
rol
nop
dec
shl
nop
fs
add
ss
adc
test
mov
push
dec
add
jmp
rcl
sub
repz
mov
xor
std
je
or
sbb
add
rol
mov
mov
fwait
push
pusha
inc
imul
or
rol
movs
movs
imul
mov
inc
pop
and
inc
xor
or
or
mov
push
xor
ror
fldcw
leave
aad
pop
dec
mov
nop
retf
int3
je
mov
sbb
sti
leave
repz
jo
or
pop
add
fld
sbb
rol
out
js
in
inc
xchg
sub
and
jns
push
inc
inc
and
lahf
add
push
dec
add
neg
xor
and
lds
cmp
inc
sub
mov
mov
pop
adc
loope
or
mov
xor
outs
daa
inc
push
xchg
adc
mov
or
mov
sub
scas
loope
or
mov
mov
lea
mov
pop
cmp
pop
and
sub
sbb
ja
sub
shl
iretw
pop
inc
or
cmp
jns
push
cs
das
fs
loopne
dec
movs
bnd
loop
in
add
sbb
xor
pop
adc
rcr
push
in
pop
lock
fadd
call
or
mov
ins
xchg
cmp
les
pop
fcmovnbe
sub
or
jno
adc
jb
xchg
loope
xor
inc
sub
mov
inc
sub
aas
repnz
and
mov
scas
mov
mov
ja
dec
mov
pop
xor
cmp
ds
and
jb
lods
fnstsw
inc
or
xor
lds
add
inc
cmp
mov
xor
rcr
fcomp
mov
(bad)
aam
in
leave
in
fsubr
xchg
ret
xchg
sysret
jnp
mov
or
xor
add
(bad)
loopne
sub
mov
xchg
mov
aaa
xchg
ret
(bad)
xor
adc
sub
mov
add
enter
lods
imul
lods
lods
(bad)
test
ret
mov
cmp
movs
inc
mov
movs
mov
leave
xchg
or
pushf
pushf
jbe
dec
dec
fdivr
cwde
cwde
inc
or
and
push
xchg
fbld
or
leave
xchg
nop
nop
movzx
push
xchg
rol
cmp
mov
ret
test
test
dec
add
mov
xor
leave
add
dec
js
inc
sti
les
sub
fs
sbb
fdiv
add
fldcw
stos
les
fwait
jne
and
sbb
add
pop
shl
lds
scas
xor
enter
mov
xor
push
inc
inc
push
sub
in
inc
xchg
sar
(bad)
imul
les
les
je
inc
mov
fdivr
nop
xchg
mov
sbb
sbb
pop
mov
enter
push
cmp
test
enter
or
push
inc
push
push
fadd
add
xor
mov
pop
inc
test
lods
dec
stc
xor
movs
sbb
jmp
dec
inc
inc
mov
inc
adc
add
cwde
or
outs
sub
hlt
xor
in
xlat
lea
inc
outs
pop
sbb
sbb
pop
xor
add
inc
mov
or
outs
adc
push
(bad)
fist
ins
xlat
and
add
sub
cmps
in
cmp
jne
sbb
mov
aad
xor
ss
inc
mov
sub
ror
stos
popa
inc
sbb
out
jns
pop
adc
inc
push
leave
inc
bnd
ss
push
jp
icebp
or
xchg
inc
mov
adc
test
dec
addr16
nop
lock
fs
push
dec
xor
pop
bound
push
mov
les
add
pushf
dec
imul
or
cmp
add
mov
repz
es
fdivr
in
xor
(bad)
adc
dec
pop
aam
call
push
lock
jp
dec
aaa
outs
fdivr
dec
retf
cdq
pop
inc
adc
push
mov
rcr
retf
mov
jmp
dec
mov
inc
pusha
nop
fld
dec
(bad)
dec
adc
pushf
or
retf
(bad)
test
popa
dec
dec
sub
into
retf
shl
pop
mov
cmp
sahf
mov
aam
cwde
cmp
dec
arpl
cmp
int3
push
adc
xchg
jne
punpckhbw
and
push
push
fdiv
cdq
sbb
enter
push
jge
add
mov
cmp
repz
push
dec
ins
inc
sbb
aam
sub
enter
fisttp
cmp
inc
push
popa
dec
and
test
stc
xor
mov
call
mov
jnp
push
xor
fcomp
aam
(bad)
hlt
or
inc
jo
mov
repnz
jg
cmp
add
cwde
jne
ds
bound
enter
bound
xchg
dec
scas
cwde
js
outs
mov
das
adc
and
and
rcl
adc
fsubr
push
arpl
movs
jb
aam
in
das
pop
in
mov
fdiv
das
imul
das
mov
fcom
mov
aam
fimul
arpl
loope
sub
mov
xor
fdiv
ds
or
inc
aam
daa
adc
mov
inc
shr
es
loopne
or
jge
aas
shr
adc
cmp
movs
adc
lahf
test
push
(bad)
jle
(bad)
and
and
cmp
cwde
mov
mov
aad
xor
jne
dec
imul
xor
push
pop
test
push
je
(bad)
call
xor
add
mov
ror
add
push
or
mov
daa
aam
push
enter
cli
mov
jnp
and
dec
xor
and
repnz
add
in
pop
xor
arpl
jb
mov
es
adc
push
sti
or
int
xor
jb
les
sub
aam
inc
mov
sbb
add
mov
out
push
and
rcl
call
push
inc
xor
xchg
nop
cdq
add
xchg
sub
fsubp
int3
pop
xchg
(bad)
cdq
xchg
cwde
mov
sub
enter
push
aam
xchg
retf
inc
aas
bound
repnz
sub
xor
into
pop
sar
dec
mov
inc
sub
and
ret
bound
mov
scas
push
icebp
test
mov
inc
frstor
adc
in
(bad)
sbb
dec
out
inc
es
rcr
push
or
mov
xor
bound
addr16
mov
push
aam
sub
add
xor
sub
ficomp
rcl
sub
jne
punpckldq
cwde
or
dec
and
imul
cmp
loope
add
jmp
test
lds
and
mov
adc
sub
pushf
xor
pop
inc
mov
clc
sub
or
add
add
adc
ret
xor
xchg
sub
adc
loope
xchg
xor
pop
sbb
mov
mov
in
pop
imul
xchg
test
fwait
xchg
cmp
xchg
dec
xchg
sub
sahf
adc
loop
jo
mov
sub
icebp
jg
jl
or
nop
retf
fs
call
fcom
or
add
imul
and
cmps
pusha
jl
data16
jne
mov
je
or
ret
and
mov
leave
jb
dec
pop
ins
jl
pop
dec
mov
clc
aas
xor
das
and
or
in
jg
les
add
lahf
enter
mov
pop
or
sub
pop
(bad)
aaa
xchg
stos
or
stos
out
pop
sbb
inc
xor
adc
lock
xchg
dec
pop
jne
xchg
cld
nop
pop
enter
enter
ret
mov
xchg
push
jl
sar
movs
jbe
outs
sub
pop
mov
cdq
pop
les
mov
and
shr
mov
scas
leave
aam
shr
lock
xlat
or
movs
dec
repz
inc
fmul
in
and
scas
cmp
mov
call
dec
mov
mov
mov
or
sub
dec
mov
sbb
dec
sub
nop
and
and
mov
push
jl
or
rcr
pop
push
dec
es
(bad)
adc
and
cmp
call
inc
jge
jge
add
lods
and
inc
in
inc
shl
pop
mov
mov
cmp
pop
mov
lds
adc
out
pop
push
add
aas
and
movs
aad
or
psllw
sub
xor
bound
sbb
xor
out
jne
ss
and
popf
rcl
push
movs
xor
xor
pop
pop
xchg
aam
pop
retf
ror
add
pop
add
push
adc
add
jne
pushf
inc
push
icebp
mov
add
push
dec
sbb
(bad)
ret
sbb
cmps
arpl
pop
jb
dec
push
shl
(bad)
scas
xchg
xor
mov
arpl
inc
sub
push
adc
aam
and
pop
es
mov
ins
fbstp
jae
or
sbb
push
pop
sbb
mov
xchg
es
stc
jge
shr
pop
xchg
dec
jp
and
pop
jmp
aad
xlat
lahf
pop
or
test
pop
mov
dec
xchg
mov
or
lea
and
adc
out
ds
mov
or
push
sbb
rol
or
add
call
and
aas
dec
imul
add
js
stc
outs
or
mov
pop
push
add
lds
movs
xor
pushw
neg
imul
push
cmp
cmp
cli
in
pop
or
sbb
push
leave
in
and
push
dec
inc
mov
ins
dec
adc
adc
mov
or
int
out
(bad)
push
mov
enter
in
cmp
(bad)
out
push
pop
mov
sar
fstp
aam
pop
repz
dec
pop
inc
test
retf
cmp
outs
fadd
xchg
xchg
or
or
add
sbb
adc
fiadd
je
jb
adc
enter
(bad)
sbb
sbb
mov
xchg
xchg
xchg
retf
mov
inc
add
call
cmp
jb
loopne
test
adc
fadd
add
xor
sub
lods
scas
das
jne
push
pop
add
inc
stc
nop
dec
sahf
aam
rcr
adc
in
push
aam
xor
je
outs
lock
out
inc
jmp
jmp
cmp
into
add
out
out
out
push
arpl
out
fstp
sbb
add
pop
add
call
xor
enter
test
xchg
lds
cmp
cmp
inc
dec
rol
adc
ds
xchg
lock
sti
cdq
rcr
sub
mov
mov
imul
sbb
fucom
dec
push
push
xchg
push
nop
mov
outs
or
sbb
push
in
dec
sub
test
xchg
mov
xor
imul
or
cmp
inc
rol
mov
arpl
lods
ret
mov
enter
jmp
repz
ins
arpl
push
and
cmp
cmp
inc
push
cmp
int3
mov
xchg
leave
xor
push
adc
into
cmp
push
lods
ins
enter
adc
loopne
shl
xchg
rol
(bad)
sbb
sub
push
dec
fiadd
mov
addr16
jg
cmp
es
shl
iret
xchg
adc
ss
loop
pop
sub
out
xchg
inc
bound
or
inc
sub
cmp
pop
cmp
loope
adc
outs
int3
adc
pop
out
add
inc
mov
(bad)
stos
dec
pop
mov
xchg
(bad)
outs
imul
or
dec
cmp
pop
push
push
pop
cli
pop
jne
cmp
push
mov
fadd
(bad)
push
icebp
jg
jne
rcr
and
sbb
or
mov
mov
mov
xor
pop
jno
cmp
xchg
cmp
pop
sti
and
loopne
sbb
ja
inc
inc
inc
inc
iret
in
and
fsub
dec
cmp
and
int3
push
stos
fwait
outs
mov
xchg
es
lea
int3
mov
lock
push
or
int3
(bad)
pop
sbb
push
dec
and
loop
mov
add
push
jg
dec
pop
sahf
test
es
add
push
pop
lods
jo
fmul
aaa
rcl
sub
cmp
dec
jo
push
shl
mov
sub
or
push
popf
xor
out
loopne
test
outs
hlt
push
imul
popa
enter
pop
xor
dec
jb
inc
and
pusha
repz
add
loop
test
sbb
xor
inc
dec
in
ins
cmps
ds
aam
lods
push
mov
push
adc
rcr
test
or
adc
aaa
inc
xchg
inc
pushf
fdivr
jmp
loopne
test
add
cmp
dec
adc
xchg
add
adc
hlt
aam
mov
out
sbb
cmp
adc
dec
push
mov
and
dec
mov
movs
xor
xchg
xor
pop
imul
lods
bound
xchg
and
push
movs
lahf
push
xor
push
cmp
adc
xchg
inc
pop
push
call
movs
mov
dec
pop
repnz
jge
or
xchg
or
push
xchg
(bad)
add
call
ins
(bad)
in
push
jle
push
mov
and
mov
je
jbe
retf
jl
outs
dec
fidiv
jne
or
enter
jp
pop
lahf
jnp
ja
xchg
sub
(bad)
je
out
dec
outs
nop
push
dec
and
xor
(bad)
rcr
adc
push
(bad)
movs
push
mov
mov
dec
rcl
loopne
in
mov
pop
pop
or
pop
inc
jae
lahf
push
mov
jmp
push
sub
sub
dec
shld
push
nop
fadd
jo
and
xor
push
adc
mov
pop
xor
add
and
dec
pop
cs
inc
inc
outs
and
jo
cmp
in
adc
(bad)
in
das
xor
loopne
sbb
or
inc
movs
xor
xor
test
enter
jle
cwde
fimul
jge
jne
jnp
or
enter
mov
jmp
cmp
int3
and
les
ror
jno
ja
movs
add
add
sbb
push
ret
inc
ret
sahf
push
pop
jne
dec
imul
jne
daa
jp
movs
pusha
mov
sar
xor
(bad)
xlat
push
repnz
jne
sub
ja
xor
xchg
jbe
ror
cmc
(bad)
sub
mov
add
sub
fcom
adc
sbb
adc
dec
imul
inc
popa
jne
pop
and
and
xchg
in
pop
inc
pop
aaa
rol
in
es
lock
movs
jne
call
lea
shl
adc
lds
cmps
jnp
add
or
jnp
mov
sbb
jl
fs
pop
and
cmp
xor
(bad)
jmp
cmp
nop
add
lods
lods
sti
jmp
dec
sbb
xor
xor
popa
xlat
jo
push
jbe
je
popf
pop
pop
ss
inc
mov
sahf
retf
into
jmp
and
jmp
jle
sahf
cli
mov
nop
add
test
out
pop
pushf
call
inc
mov
sbb
sbb
pushf
pushf
loope
inc
adc
push
or
mov
fs
sbb
ins
adc
enter
xchg
push
cdq
jbe
push
or
xchg
and
lock
(bad)
into
and
cwde
xor
mov
lods
jle
ja
push
dec
jge
push
int3
cmp
cmp
out
pushf
jge
jmp
pop
xchg
pop
dec
fadd
jb
pushf
mov
loopne
xchg
out
inc
jle
and
adc
das
jg
mov
push
sub
add
adc
ret
push
adc
add
cmp
jno
add
sub
mov
ret
inc
fdiv
fiadd
cmp
mov
icebp
adc
daa
daa
xchg
popa
div
hlt
hlt
hlt
xor
and
hlt
hlt
hlt
add
sbb
xchg
movs
xor
mov
stc
mov
add
rol
setns
and
cdq
call
dec
cmps
outs
add
dec
ss
es
ret
(bad)
jmp
pop
ficom
ret
pop
pop
or
aam
xchg
xor
mov
int3
and
and
movs
add
jne
mov
out
xor
xor
mov
dec
jns
imul
push
mov
xchg
xor
sahf
jg
and
ret
sub
repnz
add
adc
or
pop
push
adc
cmps
lock
pushf
inc
pop
jo
add
and
inc
adc
or
pusha
in
dec
popf
shr
pusha
xchg
pop
lock
bound
int3
lock
cmp
dec
(bad)
xchg
add
add
xchg
mov
fadd
sub
and
mov
sbb
dec
jg
mov
push
clc
jmp
cmp
loop
lods
xchg
push
rol
jns
not
adc
xchg
movntq
(bad)
lods
shr
jge
dec
and
inc
pop
popf
(bad)
xor
in
mov
popa
fs
enter
xchg
pop
sub
pop
scas
inc
or
cmp
mov
cli
in
imul
adc
push
dec
mov
pop
addr16
jge
call
xchg
inc
pop
mov
shl
in
std
ins
or
loop
jmp
aas
bound
dec
push
mov
sbb
aaa
les
aam
test
push
adc
movs
or
sbb
jmp
dec
std
push
and
(bad)
enter
pusha
jns
mov
pop
inc
mov
xchg
mov
inc
inc
sub
add
mov
sub
fstp
scas
inc
pusha
not
dec
movs
retf
ret
adc
add
pop
mov
cwde
mov
pusha
and
push
inc
popf
dec
add
arpl
popa
xchg
dec
stos
shl
sub
or
adc
mov
nop
mov
mov
or
mov
sbb
popa
ror
rcr
mov
add
sub
mov
test
pop
sub
out
nop
ins
mov
ret
cmp
arpl
test
add
sub
sbb
aad
daa
nop
sub
jle
dec
push
mov
add
mov
ret
adc
push
or
xchg
mov
push
or
popf
sub
lods
(bad)
mov
or
inc
or
lock
adc
pop
xchg
or
sub
outs
or
jg
mov
leave
xor
ret
enter
mov
ins
lods
or
call
jmp
dec
dec
(bad)
sub
sahf
pop
dec
retf
mov
push
mov
add
cmp
xor
inc
cmp
mov
inc
jo
mov
sbb
xchg
lock
pop
fisub
and
jg
daa
inc
ret
(bad)
(bad)
enter
nop
cmp
cmp
or
xchg
jbe
push
bound
add
sbb
pusha
and
jns
xchg
mov
es
pop
add
adc
add
xor
sub
rep
add
xor
xor
or
sbb
adc
or
xlat
in
popa
or
xlat
in
adc
inc
(bad)
out
xchg
lea
ror
add
sbb
mov
fcomp
fmul
fsubr
xchg
fadd
xchg
or
nop
dec
push
icebp
scas
mov
in
xor
push
push
push
adc
mov
dec
js
adc
in
stc
stos
adc
add
xchg
sub
js
in
pusha
inc
sti
cmp
sbb
ror
sub
gs
cmps
cmp
rcl
mov
clc
push
outs
dec
pushf
dec
push
pop
add
adc
mov
daa
push
push
push
pop
shr
popa
xor
scas
test
inc
and
pop
daa
add
call
sub
sbb
xchg
or
adc
xchg
push
mov
bnd
mov
mov
call
movs
fwait
dec
xor
fsubr
mov
fistp
ret
ret
daa
add
adc
sbb
xchg
pop
xchg
imul
mov
aas
xlat
add
out
cwde
inc
sahf
add
nop
xlat
jg
pop
arpl
jmp
mov
xor
adc
in
and
sub
adc
sub
pop
mov
jmp
mov
cmp
sub
lock
fwait
aad
shr
ror
je
adc
mov
jp
push
inc
sbb
rol
and
mov
fsub
xchg
xchg
dec
push
dec
push
push
jecxz
test
dec
test
mov
sbb
adc
sub
push
shl
lods
mov
sub
mov
imul
pop
jne
es
icebp
or
adc
or
add
popa
jg
add
test
adc
sahf
jno
ret
fsub
pop
cmp
stos
je
fdivr
xchg
imul
adc
hlt
rcr
adc
jl
out
sub
imul
pop
addr16
(bad)
and
out
xor
cmps
inc
pop
mov
mov
xchg
mov
aas
je
xchg
xchg
mov
sub
mov
mov
dec
push
mov
retf
call
rcl
jo
out
hlt
jmp
push
mov
lods
loop
mov
sbb
pop
mov
dec
syscall
shr
dec
xchg
push
mov
rcl
sub
inc
repz
sar
or
bound
dec
call
call
sub
dec
rol
sbb
or
xchg
mov
mov
adc
inc
adc
not
jmp
cmp
mov
ror
fadd
push
nop
sbb
dec
inc
dec
pop
mov
dec
mov
jne
outs
xchg
mov
and
and
test
sub
push
add
fadd
fcom
xor
nop
mov
rol
arpl
push
xor
rol
push
sbb
mov
pop
xchg
xchg
imul
and
aad
or
xchg
pushf
lock
lds
add
dec
mov
xor
and
add
xchg
lahf
pop
adc
add
loop
ja
scas
mov
hlt
int
loopne
lock
cmc
pop
mov
push
adc
out
aad
sahf
inc
imul
sbb
mov
mov
pop
sub
sbb
dec
lock
shl
sbb
(bad)
fsub
xchg
rol
inc
dec
fadd
cmc
hlt
inc
and
push
daa
dec
shr
jle
mov
xor
mov
test
adc
outs
xchg
bound
mov
and
sbb
int3
call
lea
push
push
aas
(bad)
loopne
sub
data16
inc
imul
stos
add
adc
in
xchg
test
repz
mov
lea
mov
repz
dec
shr
mov
and
retf
dec
cmps
gs
call
jg
and
mov
xor
dec
test
or
shl
mov
inc
or
add
cmp
mov
leave
xlat
and
sbb
call
add
loopne
inc
idiv
inc
fnstcw
inc
push
xchg
add
outs
iret
add
not
pop
dec
fsubr
scas
rcl
jmp
jmp
inc
push
jmp
mov
mov
or
into
jmp
dec
or
sub
jge
mov
iret
rcl
std
xor
dec
mov
dec
ds
dec
fsubr
rol
ins
cmps
int
pushf
dec
and
inc
inc
adc
enter
sub
leave
and
mov
inc
lods
test
in
lods
mov
cmp
inc
push
or
add
test
lods
add
dec
aas
pop
and
lods
je
xor
mov
push
rcl
arpl
shl
and
jb
push
adc
dec
adc
jo
push
or
dec
add
(bad)
pusha
mov
pop
out
inc
sbb
cdq
sbb
test
pop
add
add
rol
xchg
sbb
adc
aaa
js
and
js
mov
mov
inc
test
fldenv
out
mov
rol
or
(bad)
push
mov
fisub
leave
retf
inc
inc
xchg
mov
sbb
pop
dec
xor
gs
(bad)
fsub
inc
sub
add
xor
in
les
sbb
and
add
dec
jle
xor
pusha
dec
aas
popa
and
pop
das
push
push
or
and
jecxz
fs
nop
xchg
mov
nop
or
pop
into
mov
mov
adc
addr16
sbb
in
mov
mov
call
mov
sti
adc
cmps
js
sub
mov
cmps
ja
mov
push
or
push
ret
imul
pop
inc
aam
jns
mov
or
sbb
mov
les
add
out
mov
add
pop
cmp
push
push
cmp
ror
in
mov
repnz
in
push
iret
push
leave
and
push
nop
or
or
add
jb
mov
push
mov
push
shr
sbb
lea
inc
enter
cdq
in
rcl
and
push
mov
imul
bound
push
dec
ins
cs
loopne
adc
imul
mov
xchg
pop
stos
xor
inc
sbb
mov
outs
cmp
rol
sub
dec
add
xchg
(bad)
push
sub
and
add
scas
(bad)
es
sbb
or
call
mov
xor
dec
lea
jg
push
xor
lock
adc
cmc
cmp
adc
inc
and
inc
or
and
sbb
stos
and
jns
or
lods
mov
add
bound
pop
ror
stos
push
push
lahf
mov
shl
cmps
cld
mov
dec
ror
aad
(bad)
cmp
adc
mov
mov
sub
sbb
mov
add
in
iret
push
jb
rol
pop
mov
mov
xlat
loop
loope
(bad)
nop
adc
dec
idiv
adc
and
mov
add
mov
xor
aaa
dec
push
in
xchg
pop
sub
xor
fwait
test
add
or
ret
add
add
mov
aam
loop
xor
fist
mov
jmp
adc
cmp
cmps
test
mov
inc
or
mov
pop
and
retf
dec
in
inc
mov
retf
fucomip
cwde
or
mov
in
out
lock
mov
mov
sbb
adc
ins
adc
push
cmps
add
jae
mov
or
xchg
data16
xchg
add
enter
xchg
mov
lea
dec
push
fimul
sar
pop
neg
or
sbb
fcom
pop
imul
inc
adc
add
pop
push
mov
add
sbb
pop
les
mov
lods
and
sbb
lods
mov
sub
dec
lahf
mov
rol
(bad)
sar
(bad)
mov
dec
mov
add
xor
sub
lea
dec
xor
aas
(bad)
pop
push
rcl
ret
dec
scas
push
movs
push
out
sub
xchg
sbb
mov
rcl
push
add
in
xchg
in
bound
dec
xlat
mov
icebp
mov
xchg
lods
push
mov
pop
ja
mov
and
or
jmp
mov
and
fst
and
mov
imul
mov
and
xor
sub
or
sbb
ret
or
xchg
in
sub
or
adc
in
or
and
push
scas
xchg
xchg
(bad)
fcmovnu
and
xchg
rcl
dec
adc
out
pop
and
(bad)
les
rol
dec
jae
adc
sbb
rol
adc
shr
and
push
imul
test
or
pop
pop
ret
mov
xor
cdq
test
jb
and
gs
ret
jmp
lahf
push
ret
jecxz
add
pushf
mov
pop
push
mov
enter
popa
adc
mov
mov
jns
jae
dec
add
ret
icebp
fs
aam
xchg
les
cmps
ret
iret
add
cwde
xor
mov
add
stos
fs
add
or
inc
dec
inc
xor
outs
(bad)
call
imul
xor
cmc
push
inc
dec
in
es
sbb
dec
enter
inc
call
cmc
xchg
xchg
push
lods
out
(bad)
mov
shl
xor
sub
aaa
inc
or
adc
xchg
(bad)
jnp
(bad)
adc
pop
pop
xor
nop
retf
adc
mov
xchg
inc
cmps
xchg
push
add
(bad)
js
add
test
leave
adc
cmp
ja
or
or
lods
pop
inc
mov
mov
jns
cmp
iret
xor
pusha
leave
inc
inc
or
retf
pop
pop
xor
or
adc
mov
xchg
movs
push
jo
and
jmp
call
ins
pushf
xor
add
dec
cs
loopne
ss
lds
fisub
pop
sub
and
inc
mov
neg
into
mov
xchg
aam
lods
add
sbb
hlt
into
imul
jns
jb
aam
iret
cmp
mov
or
iret
aam
or
repnz
adc
das
or
in
sub
je
out
js
movs
jno
xor
dec
ret
int
adc
fdiv
push
sub
ins
rcr
ins
push
into
add
inc
jmp
and
jecxz
lds
and
int
xchg
mov
push
mov
push
nop
rcr
push
push
inc
push
nop
lods
push
shr
in
sar
push
(bad)
rcl
jbe
test
ret
inc
(bad)
mov
jg
dec
adc
repnz
add
add
or
sub
push
inc
test
push
inc
stos
mov
jne
sbb
call
xchg
mov
push
ficomp
pop
push
adc
add
nop
push
push
add
fsubr
or
stos
mov
fiadd
in
add
fcmove
adc
adc
and
dec
mov
pusha
cmp
push
nop
or
add
inc
or
movhps
inc
rcr
add
pop
or
aas
and
out
movs
ficomp
sub
add
fidivr
add
mov
dec
(bad)
dec
int3
and
inc
fs
inc
loop
sbb
adc
cwde
in
xchg
xchg
fcom
lods
and
sub
fisttp
lods
adc
and
inc
push
ss
push
dec
sub
(bad)
hlt
mov
add
inc
mov
adc
inc
jno
pop
cmc
push
nop
loop
dec
add
fsubr
data16
fwait
jo
test
xchg
jb
or
clc
inc
add
pop
ds
mov
out
add
into
lds
mov
aas
xlat
fwait
mov
inc
repnz
mov
movs
in
jmp
test
xchg
test
add
test
hlt
and
or
hlt
mov
mov
repz
(bad)
mov
xchg
sub
rcl
sbb
in
in
movs
xchg
sub
in
in
jb
xchg
cmp
pop
dec
fild
mov
add
inc
push
jo
call
pusha
sbb
cmp
stos
fcomip
xchg
sbb
mov
jo
sub
shr
imul
mov
cmps
das
and
es
jmp
xor
cwde
ins
test
daa
out
xchg
in
mov
in
loop
add
xor
pusha
into
jnp
add
push
ins
aaa
add
fld
jns
dec
adc
and
cmp
adc
xor
or
or
xchg
loop
adc
xor
or
out
add
xor
inc
or
mov
push
mov
and
sub
mov
sub
xor
jne
jecxz
adc
sub
jecxz
push
pop
adc
popf
and
(bad)
scas
aam
inc
repnz
mov
xlat
add
xchg
shl
cmp
dec
mov
inc
xchg
in
jg
fcomp
(bad)
nop
push
leave
xchg
fadd
sbb
and
and
add
adc
xchg
ins
mov
cmps
push
out
nop
or
jbe
sbb
les
call
das
xor
add
out
out
es
hlt
out
or
out
hlt
mul
pop
adc
hlt
add
(bad)
sub
mov
push
adc
(bad)
inc
cld
or
out
cmp
pop
fdivr
ror
dec
or
dec
sbb
shl
adc
clc
adc
dec
dec
jno
adc
cmp
mov
adc
mov
repz
sbb
mov
xchg
out
cmps
mov
and
outs
mov
movs
lock
call
xor
inc
xor
xchg
out
popf
mov
shl
jmp
sub
pop
mov
add
out
jmp
add
push
jmp
sbb
daa
or
lds
adc
cdq
or
out
sbb
stos
or
xchg
add
int3
jmp
jmp
jne
jmp
(bad)
pop
push
scas
or
test
bound
jecxz
std
aas
add
jmp
or
mov
nop
mov
ret
sbb
nop
pop
leave
add
pusha
in
or
arpl
and
adc
jge
sub
lock
enter
in
jmp
inc
and
adc
xchg
and
call
and
je
add
daa
sub
stos
or
dec
inc
pop
cmp
shr
call
mov
retf
test
cmp
and
cmp
lock
xor
xor
pop
gs
loop
nop
inc
jno
fwait
adc
test
pusha
jmp
xor
push
pop
xchg
stc
popa
out
lock
push
inc
and
and
enter
out
loope
or
and
aaa
nop
mov
dec
movhps
dec
jmp
inc
xchg
sbb
out
in
f2xm1
or
push
loope
add
lock
call
les
sbb
pop
push
inc
bound
mov
jg
dec
mov
xchg
gs
nop
or
dec
gs
xchg
and
in
(bad)
lock
push
cdq
fs
fadd
pop
sbb
sbb
fcom
popa
mov
inc
call
push
xor
mov
pusha
adc
(bad)
lahf
push
xor
ror
pop
outs
or
movs
sbb
dec
fwait
cwde
add
leave
cmp
jno
mov
leave
imul
adc
movs
repnz
pop
mov
sbb
push
retf
aaa
inc
in
dec
push
add
adc
dec
add
pop
sbb
cmp
enter
and
movs
add
pop
or
xor
xor
dec
nop
cdq
inc
test
pop
jl
xor
mov
xor
xor
add
dec
mov
cmp
xchg
movs
(bad)
(bad)
jne
cmc
inc
xchg
dec
jge
dec
scas
lods
adc
ins
mov
in
inc
pop
imul
push
fwait
pop
jae
add
iret
call
les
add
inc
das
retf
inc
cmc
inc
jmp
movs
cmp
std
adc
cmp
mov
dec
popf
das
aaa
add
(bad)
test
xchg
inc
xor
xlat
pop
jle
call
xor
and
imul
repnz
les
jo
or
out
test
dec
xor
jae
or
and
xor
push
daa
push
rol
pop
pop
daa
pop
add
cmp
adc
push
and
gs
popa
imul
inc
mov
sub
or
pop
pusha
enter
and
fdivr
adc
and
mov
stos
enter
mov
or
mov
push
add
or
xchg
je
cmp
je
(bad)
cwde
test
repnz
sbb
or
xor
or
int
int3
rol
pop
mov
enter
mov
jne
mov
stos
test
push
shl
adc
in
and
stc
sar
and
std
xor
mov
hlt
les
add
dec
les
cmps
xchg
mov
rol
movs
mov
hlt
cli
movs
cmp
xchg
mov
movs
or
inc
call
pop
and
pop
push
and
lods
push
cdq
or
add
jns
xchg
and
and
(bad)
or
fisttp
jmp
xor
or
sub
jae
pop
dec
cmp
jb
cmp
sub
in
ror
dec
call
test
test
test
or
xor
loop
aas
jp
add
push
xchg
cmp
xor
inc
add
ror
jae
loopne
inc
xor
je
sub
and
or
pop
test
lods
idiv
cmp
sub
fdivr
aam
push
loope
pop
mov
dec
fnstsw
test
jmp
add
loopne
das
loop
les
into
mov
mov
out
nop
sbb
and
push
cmps
cmp
loope
movs
inc
gs
push
push
fs
and
or
icebp
mov
in
imul
inc
lea
inc
mov
and
frstor
and
xchg
push
push
push
jns
aaa
movs
fisub
ret
mov
ja
jno
cmp
in
add
adc
in
movs
fcomp
mov
stc
cmp
std
pop
mov
pop
xor
sbb
pop
inc
dec
jo
cwde
xchg
std
pop
xlat
bound
sbb
in
in
in
adc
or
pop
sub
fld
test
jno
aaa
inc
dec
and
inc
xor
rdtsc
mov
pop
mov
pop
out
(bad)
pusha
sub
adc
dec
icebp
loopne
rol
ror
lds
jg
call
cmp
inc
cdq
loop
mov
inc
sahf
dec
add
les
cmp
punpckhwd
stos
in
(bad)
xor
pop
test
dec
(bad)
sbb
punpcklbw
jns
adc
pop
test
adc
cmp
bndstx
in
andps
in
outs
les
out
inc
fcomp
retf
sbb
cmps
in
cmp
xchg
pop
add
fs
cmp
enter
fs
add
and
adc
aas
add
(bad)
pop
in
es
sub
inc
sbb
ss
inc
aaa
and
scas
and
or
mov
add
dec
pop
mov
loopne
push
test
jne
or
out
mov
cmp
inc
mov
pop
int3
mov
and
mov
fdiv
in
popa
fld
push
dec
in
sbb
mov
push
pop
in
jecxz
popa
and
xor
add
sbb
pop
lds
mov
loopne
pop
(bad)
jmp
nop
push
out
push
sbb
xchg
pop
dec
(bad)
sbb
lds
mov
dec
sub
pop
adc
pop
hlt
push
xor
adc
mov
or
je
add
clc
aaa
inc
adc
dec
mov
xchg
pop
or
fild
jmp
dec
jne
lods
outs
jmp
call
aaa
inc
nop
gs
push
dec
push
cld
call
add
fild
mov
stos
or
les
pop
cmp
dec
inc
pop
js
add
mov
pusha
lahf
xchg
or
call
mov
clc
sub
and
(bad)
push
repnz
sub
mov
push
pop
cmps
hlt
pop
inc
mov
jge
mov
inc
push
cmp
inc
cmp
push
cmp
nop
xor
sub
cmp
nop
inc
sbb
in
inc
push
or
add
and
in
and
loopne
sbb
enter
mov
mov
and
and
and
add
sbb
cld
int3
clc
les
cmp
nop
sar
mov
mov
pushf
cwde
xchg
nop
inc
push
cmp
cmp
test
hlt
retf
and
jb
lock
inc
sub
imul
sub
jns
scas
(bad)
pusha
psraw
movs
mov
cmp
mov
cmp
cmps
stc
cmp
cmp
jb
loopne
jns
out
aam
les
mov
sbb
adc
adc
push
or
push
or
push
add
iret
shl
cmp
and
iret
mov
sbb
push
in
int
jge
dec
mov
enter
cmp
repz
rol
repz
repz
jmp
lods
addr16
mov
push
xor
push
out
mov
jg
or
test
jns
iret
repz
sar
jno
mov
inc
sbb
clc
adc
cmp
in
aas
and
ror
cmp
jnp
cmps
mov
push
add
stc
cmp
mov
pushf
sub
idiv
cwde
sar
cmp
test
push
adc
adc
in
mov
call
dec
jle
ins
mul
push
lods
inc
or
bound
in
fmul
adc
aas
mov
sub
cmp
mov
leave
dec
pop
in
jbe
sub
mov
xchg
add
mov
fild
xchg
inc
adc
mov
sbb
nop
rol
das
in
xor
mov
(bad)
cmp
push
dec
loopne
iret
and
xor
jo
xchg
pop
cs
test
or
pop
aas
sub
mov
push
fs
ss
pop
fsub
loopne
mov
loopne
mov
mov
add
xchg
dec
fdiv
fs
sbb
fcom
cmp
cmp
inc
add
or
sbb
inc
push
jnp
jge
clc
push
cmp
sbb
cmp
mov
ja
jo
test
add
sbb
inc
add
sbb
cmp
pusha
add
imul
add
retf
pop
xchg
adc
(bad)
cmp
adc
sar
sbb
and
dec
adc
push
repz
push
imul
jg
repz
mov
cmp
repz
rcr
out
iret
repz
cli
add
push
push
sbb
xor
fdivp
cmp
inc
das
cmp
inc
cmp
cmp
cs
xchg
test
cmc
xchg
inc
and
js
and
adc
xor
fwait
inc
adc
pusha
push
push
xchg
pop
mov
mov
std
loope
dec
and
push
hlt
sbb
adc
leave
fwait
pop
adc
and
fnstenv
daa
les
dec
push
cmp
push
add
nop
cmps
lahf
movs
or
mov
fmul
sbb
inc
or
or
add
inc
inc
faddp
inc
xchg
mov
dec
push
pop
test
cmc
jns
cmp
loop
fisttp
fisub
adc
nop
in
ja
jmp
cmc
push
ss
xor
enter
push
xchg
adc
push
jb
dec
dec
dec
js
push
cmp
cmp
test
add
pop
cmc
adc
or
adc
iret
ret
out
sbb
adc
and
adc
add
pusha
cmp
xchg
and
push
aaa
and
adc
xchg
dec
aas
aam
aam
dec
add
jbe
popa
daa
dec
and
dec
inc
cmp
daa
mov
aam
sbb
aam
aam
fs
inc
aam
aam
fwait
dec
push
aam
mov
enter
pop
aam
and
aam
mov
leave
aam
imul
mov
pop
lds
int3
push
pop
cmp
fs
repz
shr
or
movs
scas
mov
iret
repz
jmp
out
xchg
push
sbb
xor
dec
repz
cmp
sub
cmp
inc
push
pop
push
iret
in
dec
(bad)
mov
push
jmp
mov
je
xor
test
clc
sbb
push
and
iret
stos
xchg
dec
pushf
call
add
and
cmps
stc
mov
push
mov
out
sahf
iret
(bad)
in
cli
add
jns
idiv
push
push
sbb
sub
sahf
out
sahf
inc
dec
push
pop
push
jns
mov
jns
xchg
push
popf
cmps
mov
xchg
in
add
xchg
mov
sub
dec
movs
push
add
(bad)
xor
inc
fcom
jb
inc
push
dec
sub
cmp
fsub
sbb
push
mov
jb
lock
push
(bad)
cmp
cmp
or
push
push
mov
mov
add
jecxz
enter
push
sbb
sar
push
push
xchg
repz
fwait
test
mov
(bad)
rcr
in
cmp
jnp
clc
add
push
push
and
imul
dec
leave
sbb
out
jns
out
out
sti
add
out
push
sbb
sub
lahf
out
push
pop
sbb
push
sbb
mov
nop
pushf
inc
cwde
sbb
loopne
shl
adc
adc
ror
and
and
rol
rcl
rcr
and
rcl
xor
and
ss
or
int
arpl
inc
scas
ret
rol
sbb
shr
ins
fst
sbb
retf
sar
add
push
mov
add
push
add
jns
test
sahf
inc
dec
push
pusha
push
jns
out
jle
xchg
pushf
cmps
out
sahf
out
mov
repz
out
sbb
mov
repz
out
stc
test
cs
xor
or
push
and
adc
sbb
sbb
inc
and
dec
pop
jae
mov
pop
and
jo
iret
sar
jnp
(bad)
cdq
repz
repz
mov
loop
div
sahf
out
push
or
sub
fidivr
out
dec
push
and
push
xor
aas
dec
push
pop
and
jae
call
fnstenv
and
inc
jb
and
loopne
adc
jg
sbb
enter
int3
int3
jb
and
and
and
int3
and
jb
int3
int3
int3
xchg
enter
int3
mov
arpl
cmp
int3
int3
int3
cmp
nop
inc
int3
int3
int3
and
mov
iret
imul
pop
add
cdq
push
pop
iret
jae
dec
add
and
out
jns
and
dec
push
adc
sbb
sub
dec
push
sahf
out
sahf
pop
data16
test
cwde
mov
out
out
fwait
cmps
movs
push
scas
mov
jns
xlat
loope
and
adc
pop
enter
iret
or
and
push
add
and
cmp
mov
and
cmps
and
ds
enter
adc
xchg
in
dec
sar
pop
pop
jb
sbb
enter
sbb
enter
xchg
enter
sbb
enter
arpl
ret
enter
enter
enter
xchg
iret
imul
inc
out
enter
or
cmp
cmp
push
push
dec
cmp
sar
push
popa
imul
iret
repz
xchg
mov
iret
mov
enter
repz
cmp
cli
add
push
push
sbb
out
cmp
sbb
and
repz
stos
jmp
cmp
mov
push
push
add
cmp
(bad)
test
cmp
adc
cwde
int
push
xchg
loopne
xor
pusha
xlat
lock
loopne
shrd
pop
test
rol
cdq
xor
push
lods
push
cwde
cmc
jns
(bad)
daa
cmps
mov
fwait
ret
hlt
adc
adc
mov
dec
add
adc
xchg
push
enter
jb
pop
sub
jne
pop
pop
adc
push
sub
jns
out
push
push
xchg
jns
out
fwait
test
mov
(bad)
rcr
in
clc
out
fidivr
jle
push
push
and
call
sub
test
push
sub
push
xor
sub
sbb
or
aaa
pop
jo
add
and
repz
cmp
mov
sahf
out
sahf
cdq
mov
jnp
out
fsub
in
test
sahf
out
fimul
push
adc
sub
cmp
sahf
out
inc
push
pop
push
out
jno
jnp
test
dec
in
nop
int
jns
sub
sub
adc
mov
sbb
adc
(bad)
adc
jecxz
add
int3
test
iret
sar
mov
cmp
repz
fsub
in
inc
test
mov
adc
sub
cmp
repz
inc
push
pop
push
jb
sub
dec
enter
cs
(bad)
pop
dec
and
aaa
pop
test
(bad)
and
adc
dec
iret
xor
inc
stos
das
add
mov
cs
rcr
out
out
out
jns
or
adc
sbb
sahf
out
sahf
xor
inc
dec
pop
bound
out
ins
jbe
mov
mov
mov
mul
and
in
retf
das
lods
xor
aas
xor
sbb
ja
out
mov
push
aam
xor
jnp
repz
repz
pop
cs
iret
repz
push
sub
cmp
push
cmp
repz
outs
js
clc
cmp
repz
pop
repnz
out
out
fbstp
mov
and
test
shl
dec
inc
cdq
push
aas
cmp
xlat
add
adc
in
inc
push
lock
ja
pop
movs
popa
fwait
inc
push
movs
mov
ss
enter
jl
arpl
sbb
lock
mov
mov
jne
sbb
mov
daa
outs
pusha
jo
outs
push
cmp
nop
fadd
in
ret
adc
lods
add
xchg
pushf
pushf
cwde
imul
jb
inc
push
test
imul
fwait
sbb
fistp
xchg
inc
push
xor
or
push
in
fsub
ja
daa
ins
popa
clc
sbb
enter
or
enter
cwde
(bad)
push
les
mov
adc
sbb
xchg
xchg
xchg
mov
xchg
xchg
fs
inc
push
xchg
xchg
xchg
ins
ins
sbb
sbb
xchg
or
xchg
xchg
xchg
xchg
movs
in
mov
iret
push
and
xchg
xchg
repz
retf
xchg
adc
out
jns
out
xor
in
test
out
push
jns
lea
cmp
inc
push
pop
outs
mov
add
mov
iret
repz
leave
rcr
cmp
cmp
push
jae
jge
repz
repz
imul
xor
iret
repz
cmp
ins
cmp
repz
test
iret
rep
mov
retf
repz
fsubrp
repnz
or
repz
push
xchg
xchg
push
fwait
movs
scas
cmp
repz
ret
int
loope
cmp
dec
xchg
push
sbb
daa
xor
xchg
dec
inc
mov
(bad)
shl
imul
jae
xchg
fs
jb
pop
lds
icebp
pop
cmp
cmp
pop
cmp
aaa
mov
mov
add
test
pop
scas
aad
pop
cmp
loopne
(bad)
jmp
push
retf
ficomp
cmp
or
inc
pop
and
js
add
push
or
(bad)
iret
lock
mov
movs
pop
cmp
pusha
adc
mov
(bad)
mov
inc
dec
sbb
cmp
push
mov
pushf
popa
int
movs
push
or
and
mov
and
adc
add
lea
sbb
(bad)
fsub
mov
sbb
das
inc
mov
sub
pop
add
add
enter
jmp
mov
cmp
les
inc
push
push
mov
xchg
cmps
imul
mov
stos
jl
xchg
or
jb
inc
mov
imul
xchg
maxps
or
inc
nop
cmp
ret
dec
xchg
sub
and
mov
dec
imul
xor
sbb
(bad)
movs
pop
and
gs
cmp
sbb
mov
xchg
xor
out
cs
cmps
jg
add
pop
repz
scas
push
pop
add
jg
adc
nop
push
push
add
addr16
jmp
and
xchg
in
and
inc
push
jmp
adc
rol
test
dec
jbe
sbb
daa
stc
data16
je
ins
imul
cdq
jo
cmp
inc
cwde
popa
daa
mov
out
sbb
mov
xchg
adc
cmc
adc
pop
cmp
lea
or
pop
mov
push
inc
retf
mov
shl
iret
int3
or
jo
and
sub
and
xchg
leave
aam
pop
movs
xlat
es
add
add
xchg
or
adc
fild
in
sti
sbb
mov
adc
in
arpl
rcr
or
pop
inc
pop
inc
jo
push
mov
xor
pusha
sbb
aaa
mov
xchg
lds
adc
and
push
sbb
es
lea
not
push
or
or
sbb
add
push
xor
sbb
sbb
xchg
sub
mov
inc
test
ss
lea
push
and
mov
aam
call
push
mov
cmp
das
jb
xlat
xchg
rol
mov
int
adc
popf
pop
mov
add
shl
inc
mov
fs
and
sbb
cmp
push
imul
sbb
fnstsw
iret
cmp
xchg
mov
push
and
inc
mov
mov
cmp
pusha
ror
js
or
sbb
jl
sbb
sbb
inc
inc
shr
sbb
sub
lods
mov
inc
sbb
call
adc
dec
jae
sub
inc
and
rcr
and
js
jmp
rcl
mov
mov
ja
mov
adc
mov
(bad)
daa
mov
adc
cmp
fwait
pusha
fstp
jge
iret
sbb
mov
or
and
mov
cmp
ret
or
jns
dec
and
mov
in
jl
push
loope
outs
mov
xchg
or
sar
or
ret
add
and
out
jge
adc
or
adc
iret
nop
(bad)
cmp
add
dec
mov
cmp
jno
add
add
fbld
add
jl
add
pop
or
sub
cwde
xor
nop
sbb
or
inc
inc
inc
nop
pop
sbb
inc
dec
push
push
fs
adc
inc
stos
xchg
ds
jle
es
fidivr
add
je
daa
and
mov
dec
ss
xor
pop
xor
add
xor
pop
add
add
jl
xor
pop
xor
pop
or
or
sbb
and
or
add
sub
sbb
movs
jb
xchg
addr16
dec
push
test
aaa
ins
adc
mov
into
paddsb
adc
lds
inc
aam
push
outs
inc
dec
fadd
inc
add
(bad)
fist
add
xchg
cmc
push
add
fisubr
add
add
shl
dec
outs
pop
not
mov
or
pop
popf
add
xor
add
adc
pusha
ins
adc
neg
push
xor
add
and
cmc
inc
mov
dec
pop
sbb
lods
adc
add
mov
bound
rol
inc
fstp
pop
xchg
dec
push
lds
and
xchg
js
pop
iret
sbb
pop
add
add
jno
pop
adc
mov
push
inc
call
adc
push
push
push
stos
mov
push
shl
fwait
adc
sbb
add
add
sbb
inc
or
pusha
pop
fs
movs
ins
pushf
outs
cmp
add
adc
leave
hlt
adc
and
xor
and
mov
mov
je
ror
sub
ret
pop
stc
pop
pusha
stos
and
sub
and
sbb
adc
push
aam
sub
cmps
pop
ret
add
sbb
inc
cmc
push
mov
fs
add
cli
and
cmp
xchg
xor
sub
imul
and
mov
fisttp
xor
test
daa
in
or
xor
add
xchg
mov
mov
add
mov
add
xor
inc
add
cs
scas
cmp
dec
in
ins
xchg
or
lahf
cmp
add
xchg
dec
out
movs
pop
xchg
dec
inc
loope
sub
sbb
push
repnz
adc
mov
in
or
aam
js
aaa
and
dec
sbb
jb
dec
and
dec
sbb
push
xchg
xor
inc
mov
aas
add
dec
cmp
gs
adc
xor
adc
lods
or
ss
sub
sub
jb
mov
and
or
dec
cmp
xor
mov
(bad)
je
push
jo
fs
xchg
mov
adc
push
cmps
pop
test
mov
push
xor
cmp
jb
cmp
adc
ja
push
ret
fwait
test
or
add
mov
adc
pop
arpl
daa
fs
adc
push
test
xchg
rol
inc
push
mov
cmps
outs
dec
stos
cmc
(bad)
mov
xor
cdq
inc
fadd
mov
push
dec
xchg
in
clc
push
mov
fs
jno
mov
iret
inc
push
mov
out
push
pop
push
ins
cmp
sub
add
or
outs
mov
dec
push
xchg
dec
and
out
test
movs
in
push
cdq
pop
daa
add
ss
inc
xlat
inc
dec
mov
arpl
test
call
mov
ret
or
xchg
or
sbb
enter
push
xchg
add
and
enter
dec
ret
scas
aaa
or
push
outs
jae
in
pop
fwait
cmp
jo
imul
jge
add
pop
arpl
adc
inc
push
sub
outs
cmp
or
sbb
pop
retf
jo
cmp
add
xor
fild
mov
sbb
jecxz
cdq
and
pop
push
inc
mov
inc
fwait
push
aas
or
add
popf
data16
and
loopne
test
xchg
xchg
pop
ins
sbb
adc
ins
sbb
call
or
lahf
or
xchg
adc
mov
test
and
cmp
repnz
imul
or
and
cmp
dec
and
stos
cbw
int3
out
retf
inc
dec
push
xchg
aam
jo
add
or
sbb
inc
jb
xor
aam
popa
mov
retf
nop
mov
stos
pop
rcl
pop
jb
(bad)
not
xchg
dec
enter
mov
cmp
dec
sub
mov
outs
xchg
pop
cmp
enter
push
enter
or
or
test
push
fwait
mov
jo
or
aaa
pop
mov
nop
pop
push
jb
adc
movs
fnsave
add
mov
popa
inc
cs
and
rol
daa
jae
movs
inc
add
aam
hlt
outs
dec
mov
adc
or
sub
cmp
jns
daa
mov
push
pop
or
cmc
xchg
mov
add
adc
pusha
aam
ret
or
call
xchg
stos
in
adc
loope
dec
jo
add
movs
add
sti
jne
pop
and
pop
sbb
mov
push
adc
lahf
add
sbb
ja
popa
add
sbb
(bad)
ret
and
cmp
les
movs
popa
in
sbb
rol
mov
out
inc
mul
xor
or
into
mov
ror
adc
enter
xchg
(bad)
loopne
dec
adc
nop
aas
sbb
adc
hlt
dec
loopne
xor
mov
jns
pop
xor
and
shr
arpl
inc
sub
sbb
loopne
inc
ficom
dec
loopne
sub
jnp
push
mov
fisubr
xor
fs
add
add
mov
ins
adc
xor
mov
and
xchg
add
adc
xlat
call
pop
sbb
inc
leave
adc
xchg
pushf
mov
push
data16
aad
popa
fdivr
or
cmps
mov
jmp
shl
ins
and
sbb
sbb
add
aad
mov
xor
mov
pop
jecxz
inc
fstp
cmp
pop
ins
push
lock
scas
popa
add
add
jge
mov
mov
ffree
adc
and
and
adc
clc
or
sub
lock
mov
sub
stos
or
mov
sub
test
(bad)
stos
sbb
cmp
mov
stc
xchg
add
gs
imul
and
sbb
mov
jb
les
push
leave
xor
or
lahf
sub
xchg
adc
add
and
outs
cdq
fstp
and
or
adc
adc
shl
pop
adc
pushf
leave
mov
pop
(bad)
jns
push
jmp
add
ret
add
ret
shl
ins
iret
push
mov
call
ret
sbb
pop
mov
aaa
enter
pop
test
push
dec
add
dec
push
leave
in
jmp
loope
pop
dec
in
inc
outs
inc
add
or
cmp
sbb
push
push
xor
and
xor
ja
adc
lock
lock
sbb
xchg
add
scas
sbb
lock
add
mov
xor
mov
loope
and
and
sub
ins
pop
cmp
xchg
mov
and
pop
xchg
and
push
cmps
ss
mov
push
cmp
and
dec
or
inc
jbe
jb
daa
js
jp
cmp
pop
retf
add
fs
sbb
adc
or
adc
adc
xor
and
or
mov
add
push
in
and
or
xor
sbb
or
les
mov
bound
sub
jno
jae
xor
or
enter
cmp
(bad)
add
lods
call
mov
out
jnp
test
aas
adc
add
in
fsub
(bad)
dec
nop
out
pop
enter
add
and
in
or
or
jae
sub
icebp
xor
dec
mov
arpl
and
mov
mov
push
jno
test
inc
fwait
dec
lock
xchg
lock
xchg
add
jne
add
add
pusha
xor
sbb
jne
clc
mov
pop
add
jns
enter
push
clc
enter
inc
xchg
jecxz
ret
lods
sbb
mov
jbe
inc
mov
je
das
mov
adc
dec
movs
lahf
sbb
jo
mov
adc
add
push
and
or
sbb
scas
nop
pop
push
cmps
lea
add
mov
and
jmp
fbld
mov
and
adc
xor
dec
js
inc
sub
adc
sub
aad
cmp
addr16
xor
sbb
sbb
inc
pop
out
es
push
and
aas
rcl
dec
daa
call
or
cs
push
call
pop
shr
mov
sub
mov
cmp
adc
daa
add
pop
adc
jns
(bad)
in
pusha
(bad)
and
jp
add
ins
and
inc
jp
outs
outs
jno
add
mov
push
adc
(bad)
mov
inc
mov
sub
sub
sub
mov
inc
adc
jno
pop
mov
scas
dec
ds
jnp
jb
push
dec
add
cmp
mov
or
inc
repnz
adc
mov
clc
out
cmp
retf
push
pop
shr
mov
adc
mov
lea
mov
pop
push
pusha
cld
in
enter
(bad)
cmp
movs
add
push
cld
into
fadd
mov
sub
jmp
or
add
inc
mov
mov
ins
pop
mov
push
push
dec
dec
mov
inc
ret
sbb
daa
pop
sbb
outs
ret
sbb
mov
dec
xchg
in
add
outs
push
jle
les
xchg
pop
and
cmp
dec
(bad)
cmc
daa
dec
rol
cmp
faddp
add
lea
mov
xchg
sbb
sti
xchg
fcom
mov
ret
pop
push
outs
sbb
in
jo
mov
push
or
mov
lods
xor
dec
or
pop
pop
adc
push
pop
add
pop
daa
imul
repnz
xchg
push
nop
lods
jg
ins
imul
lods
sbb
jmp
cs
pop
fsub
nop
fdiv
sbb
xor
jno
adc
cs
inc
pop
jge
mov
add
jne
(bad)
cmp
add
sbb
jb
mov
xlat
jmp
lea
push
test
add
xor
arpl
rcr
or
add
cmp
inc
jne
xor
inc
mov
jnp
sub
jno
iret
stos
loop
jecxz
xor
lods
nop
and
sub
mov
xor
push
push
inc
sti
or
jno
or
mov
bsf
or
sub
adc
dec
add
inc
sub
inc
mov
mov
and
or
inc
cmp
sub
(bad)
cmp
nop
clc
clc
mov
call
adc
sub
adc
stos
mov
inc
add
xchg
push
add
push
mov
jb
sub
(bad)
mov
jb
jecxz
add
xchg
pop
and
add
cmp
pop
push
add
xchg
(bad)
mov
add
and
add
dec
mov
xchg
mov
xchg
and
and
sub
aas
call
and
mov
test
mov
sub
dec
jg
das
pop
leave
xchg
or
jecxz
inc
cmps
in
xchg
xor
sar
arpl
adc
popa
mov
add
cs
mov
adc
inc
cmc
nop
add
fadd
mov
lahf
xchg
dec
loopne
jp
aas
inc
ret
out
adc
xchg
sbb
or
hlt
adc
xor
je
daa
outs
and
mov
arpl
and
adc
out
call
adc
add
loop
cmp
cmp
mov
sub
mov
mov
or
dec
pop
add
push
adc
popf
stos
not
lea
clc
jns
cmp
add
push
pop
adc
inc
pop
(bad)
jae
inc
dec
mov
pop
or
enter
lahf
and
fwait
and
retf
pop
mov
mov
xchg
es
out
or
sbb
leave
adc
inc
xchg
mov
lods
push
push
inc
mov
pop
xchg
add
adc
jo
adc
cmp
sbb
aam
scas
pop
inc
pusha
pop
(bad)
sbb
jmp
call
and
jb
or
ja
mov
lods
sbb
xchg
fsub
xlat
sbb
xor
sbb
retf
push
aas
int
dec
add
sub
inc
nop
inc
jno
sub
mov
xor
das
adc
dec
fwait
je
fdiv
fadd
xchg
inc
(bad)
aam
pushf
push
aam
sbb
mov
fprem
and
sbb
jmp
fwait
pop
in
xchg
or
sbb
dec
sar
sbb
and
shl
pop
out
and
ret
test
and
inc
fld
test
fcmovnb
mov
ins
inc
out
mov
inc
add
and
sbb
mov
les
adc
mov
lea
dec
jns
test
sub
add
pop
sub
or
out
sbb
or
push
xchg
mov
div
loop
jle
push
xor
push
outs
dec
add
test
cdq
cmp
pop
and
and
movs
ror
lock
push
inc
xor
push
adc
push
cmp
add
add
push
gs
dec
adc
(bad)
ffreep
jne
cld
sbb
push
stos
xor
push
or
nop
inc
xchg
jne
and
stc
hlt
sahf
out
jp
cmp
jle
push
sub
in
xchg
sahf
cmps
stc
pushf
push
push
loopne
in
loopne
call
sbb
mov
imul
jle
and
int3
iret
sar
enter
(bad)
aam
inc
clc
imul
adc
inc
clc
cmp
adc
les
mov
ja
sar
fadd
inc
out
jae
fimul
das
mov
dec
adc
add
mov
add
mov
leave
out
push
or
or
inc
mov
enter
inc
(bad)
mov
or
mov
add
dec
outs
cmps
add
push
lock
or
jp
je
imul
pop
jbe
mov
jl
add
push
cld
jae
movs
inc
ins
popa
imul
jae
inc
loop
aaa
push
popa
js
jo
xchg
add
mov
xchg
or
jbe
sub
xchg
jbe
add
ficomp
mov
fcomp
add
push
push
repnz
adc
add
shl
adc
les
clc
mov
jae
pusha
and
rcl
mov
and
add
add
pop
add
sub
sub
sbb
jnp
jo
jne
xchg
scas
pushf
push
les
add
scas
push
adc
and
adc
adc
ds
push
or
xlat
pop
sub
pop
jecxz
add
bound
js
add
pusha
xchg
jg
pushf
sub
outs
xchg
lahf
xor
cmp
and
xor
and
js
movs
popf
xchg
inc
loopne
iret
fild
push
test
and
mov
mov
adc
push
xor
ficom
fadd
(bad)
xchg
(bad)
pusha
push
nop
push
(bad)
pop
add
sbb
clc
dec
out
cmps
or
push
or
cmp
test
out
sub
add
jo
pop
add
mov
inc
jns
imul
outs
ins
jp
pushf
sbb
mov
xchg
add
push
ret
or
idiv
pop
xor
ds
mov
push
imul
add
je
cs
daa
xchg
adc
je
inc
push
shl
mov
mov
stos
fsub
inc
dec
pop
(bad)
push
adc
jmp
fdivr
les
rcr
out
adc
pusha
fstp
pop
xor
stos
lahf
sahf
add
lock
loopne
cmc
nop
mov
scas
cmp
inc
mov
ins
into
mov
or
add
mov
push
gs
xchg
and
lahf
push
mov
inc
xlat
push
jns
xor
push
aam
shl
popa
fwait
rcl
movs
xor
adc
or
sub
jo
add
nop
addr16
in
jae
je
or
and
and
add
ds
adc
bound
clc
xchg
ficom
sar
cwde
cwde
movs
cwde
cwde
mov
sbb
xor
fadd
or
(bad)
jns
ret
mov
or
mov
out
pop
and
cmp
add
pop
data16
inc
test
stos
ret
outs
jno
xchg
pop
xchg
les
lds
xchg
jl
or
cmpxchg8b
jl
in
push
sbb
xchg
ror
add
mov
jne
test
jns
jb
nop
fild
and
and
sbb
test
sbb
out
or
mov
adc
ja
aaa
or
adc
xor
js
repnz
push
and
or
mov
adc
push
dec
jae
pop
and
adc
jg
add
aam
or
(bad)
daa
mov
or
push
add
fcomip
fwait
add
fdivr
mov
not
pop
sbb
push
retf
add
stos
mov
push
in
inc
pop
add
ficomp
and
adc
mov
adc
push
in
jnp
popf
jbe
popa
mov
add
pop
lds
or
xchg
fbstp
push
add
push
clc
popf
add
adc
jmp
(bad)
mov
xor
inc
popf
mov
or
mov
sbb
dec
mov
test
enter
adc
out
cmc
push
sbb
fstp
rcr
call
or
das
stos
in
enter
shl
inc
push
xchg
adc
xor
add
call
add
cmp
cdq
pushf
lock
inc
or
shl
test
and
hlt
add
test
loope
mov
jb
jecxz
jmp
or
cmp
mov
lahf
sbb
or
adc
mov
cmp
mov
repnz
rcr
cld
lahf
or
(bad)
mov
pop
sbb
xor
adc
rol
nop
xor
mov
ja
mov
dec
ss
ror
daa
dec
pushf
js
adc
xor
sub
adc
xlat
xchg
and
add
call
dec
mov
adc
mov
xchg
xlat
in
ins
pusha
daa
add
ds
cmp
pop
sub
lods
ja
cmps
cmp
lahf
imul
sbb
or
(bad)
movs
fsub
adc
imul
inc
xor
inc
mov
movs
dec
call
test
in
mov
sbb
mov
and
add
dec
pop
iret
pop
and
cmp
nop
pop
push
imul
ja
inc
push
or
push
ins
movs
lahf
push
movs
pop
popa
and
or
add
jl
add
jp
push
out
push
mov
pop
sub
sbb
push
cmc
mov
in
rol
cmps
push
and
pusha
mov
ret
stos
jae
mov
(bad)
arpl
push
or
cmp
or
ret
mov
pop
pop
push
or
xchg
cmp
in
mov
scas
sbb
loop
scas
ins
aad
js
out
inc
or
inc
cdq
out
push
and
aad
add
ds
(bad)
mov
sbb
xlat
pop
cmps
and
push
(bad)
fisttp
stc
jae
xlat
pop
lods
stos
shr
jmp
lea
stos
nop
adc
loopne
sub
jg
pushf
add
xor
xor
imul
lods
dec
pop
xchg
mov
sub
or
jmp
pop
and
jo
nop
loopne
in
push
xor
movs
xchg
test
mov
xor
add
aad
sbb
jg
or
daa
daa
adc
sub
pop
jnp
inc
das
pop
pop
sub
add
fwait
cvtps2pi
jnp
jg
pusha
les
adc
mov
pushf
mov
add
jae
cmps
inc
add
add
push
jae
imul
jb
and
pushf
nop
push
or
sub
pop
add
int
xchg
shr
nop
cmps
sbb
or
xor
stos
mov
dec
add
dec
mov
fsubr
(bad)
bound
sbb
cmp
push
or
push
cwde
stos
mov
stos
stos
push
ins
(bad)
(bad)
fdiv
fsubr
lods
jnp
test
mov
and
test
lods
add
bound
pop
lods
lods
pop
imul
sbb
xor
xor
add
movs
sub
mov
outs
pop
nop
sbb
scas
adc
bound
ror
cwde
lods
add
call
fsubr
jmp
add
sbb
and
test
and
ret
adc
xchg
stc
dec
ja
scas
sub
(bad)
push
scas
or
(bad)
or
out
pop
and
movs
bound
and
mov
es
xchg
lahf
mov
out
nop
pop
jb
scas
xor
inc
push
adc
daa
stos
mov
push
mov
retf
stos
or
mov
xchg
(bad)
scas
pop
and
adc
inc
cdq
retf
nop
cld
mov
mov
dec
(bad)
or
or
mov
mov
(bad)
fbld
(bad)
pusha
adc
fild
and
adc
mov
imul
sub
xor
mov
xchg
xor
call
je
outs
ror
nop
adc
inc
fadd
or
jmp
aaa
or
out
pop
and
xor
or
or
jmp
and
add
inc
lock
pop
cmp
mov
nop
pop
test
lea
out
fsub
sub
mov
inc
mov
inc
mov
push
adc
jle
scas
adc
mov
xor
push
lods
mov
call
(bad)
and
adc
dec
push
xor
and
adc
jae
and
dec
repz
push
jmp
data16
jb
pop
loopne
outs
loope
cmp
mov
paddd
loopne
add
inc
sub
mov
jae
xlat
pop
sub
cmp
rcr
adc
mov
mov
inc
test
sub
(bad)
mov
mov
and
push
(bad)
and
and
jne
mov
in
adc
lahf
push
shl
popa
js
jne
xor
jns
or
push
inc
test
add
jl
shr
js
sbb
mov
(bad)
or
inc
(bad)
jmp
call
mov
add
sub
fucomip
mov
mov
sbb
pop
sbb
add
outs
inc
rol
mov
call
pop
pop
add
rep
jecxz
and
enter
push
sub
jne
or
(bad)
fild
and
and
add
add
ret
in
bound
adc
xor
add
dec
ret
cmp
mov
outs
add
loopne
xor
mov
or
jge
fild
and
and
add
movs
and
fwait
jbe
push
adc
mov
push
push
sub
mov
jmp
jge
icebp
nop
push
mov
mov
outs
push
sub
pusha
inc
movs
loope
dec
pop
inc
cwde
cs
inc
lds
mov
out
pop
and
push
in
pop
xchg
pusha
(bad)
add
mov
mov
gs
inc
add
push
adc
xchg
or
jecxz
pop
cld
mov
add
or
nop
cmp
loope
retf
cmovnp
push
sbb
das
inc
push
out
sub
add
rol
mov
cmps
lods
out
inc
push
loopne
and
sbb
sbb
dec
sub
test
adc
push
push
loop
nop
out
sub
xor
ret
push
ror
ror
xor
jecxz
adc
inc
shl
outs
sbb
push
push
test
inc
push
push
and
and
sbb
nop
out
xor
push
lods
pop
xor
fcom
loope
jae
dec
aam
dec
rol
shl
rcl
dec
push
inc
adc
pop
sub
inc
push
xor
dec
cmp
adc
fwait
in
rcr
adc
mov
lods
ret
ret
and
inc
jmp
outs
mov
fcom
xor
xor
or
jmp
sbb
ret
jle
xchg
psubq
out
pop
and
push
or
jp
les
mov
js
aaa
pushf
lock
lea
push
mov
aas
sahf
les
push
js
push
and
stc
push
xor
adc
fcom
dec
jnp
dec
stos
adc
or
inc
in
test
push
add
outs
lds
in
in
aaa
aam
push
cdq
jl
test
lods
jne
pop
and
adc
pop
push
mov
(bad)
call
int3
(bad)
(bad)
mov
add
in
dec
add
mov
and
push
mov
pop
sbb
loopne
lods
xchg
xchg
data16
loop
mov
add
or
xor
mov
add
cmp
(bad)
and
jl
sbb
pop
repnz
bswap
(bad)
mov
add
out
enter
in
in
jo
vunpcklps
test
nop
out
pop
and
xor
xorps
or
lods
inc
xchg
ud2
dec
xchg
mov
sub
mov
or
ins
lods
ret
xor
inc
xor
retf
cli
(bad)
cmp
push
pop
lods
inc
add
add
rcl
data16
outs
pusha
mov
or
pop
xchg
push
(bad)
call
cmovbe
aam
and
and
add
mov
test
and
or
cmp
pusha
cmps
push
leave
mov
xor
add
aad
scas
in
push
mov
mov
popf
add
push
pop
mov
ins
js
add
mov
adc
push
or
add
sub
lods
sub
push
sub
repz
sub
xor
add
mov
scas
adc
dec
mov
int3
or
xchg
les
or
push
sbb
push
hlt
dec
add
inc
hlt
mov
test
mov
bound
add
add
pusha
or
and
inc
inc
add
(bad)
leave
rol
xchg
or
(bad)
and
adc
rol
in
nop
fist
lds
sub
aaa
dec
dec
xor
jns
fwait
xchg
pop
pop
push
arpl
inc
out
in
add
adc
test
popa
cmps
sbb
add
sub
iret
push
enter
sbb
leave
adc
and
sbb
sub
sbb
jmp
adc
inc
mov
and
mov
fcom
cmps
push
pusha
or
lock
test
dec
out
nop
inc
pop
nop
inc
shl
rcr
pushf
or
mov
xlat
jl
mov
inc
pop
and
sbb
aad
push
sbb
js
inc
and
and
pop
mov
test
nop
ror
enter
es
and
and
repnz
mov
fs
or
add
or
inc
pop
add
or
fisub
jb
sbb
push
adc
or
(bad)
and
mov
mov
adc
retf
adc
mov
fmul
sub
mov
and
pop
fimul
sbb
xchg
push
xor
fild
les
das
cmp
pop
push
(bad)
outs
je
inc
xchg
inc
sub
xlat
and
adc
push
and
loop
stos
sub
add
adc
adc
add
enter
in
or
lods
in
mov
xchg
pop
inc
inc
lea
in
dec
shl
adc
add
fs
jmp
pop
int3
mov
push
icebp
inc
or
add
and
mov
sbb
mov
sbb
test
sbb
xchg
sub
leave
cmp
in
and
add
mov
add
mov
mov
push
xchg
icebp
cmp
cwde
pop
adc
or
int3
(bad)
cmp
adc
xchg
stos
inc
pop
enter
jo
lods
push
jns
xchg
cwde
mov
in
push
hlt
test
adc
fs
pop
cmp
aaa
in
xor
leave
and
mov
jo
mov
and
mov
repnz
mov
enter
test
inc
test
fs
enter
lds
(bad)
enter
(bad)
cmp
dec
xchg
hlt
cld
or
jbe
in
dec
nop
and
aas
mov
inc
cs
push
test
mov
sets
adc
inc
imul
inc
push
mov
aas
adc
mov
enter
xchg
lods
sub
lock
xchg
fsubr
stc
pop
test
pop
xchg
xor
mov
pop
stc
sub
popa
(bad)
xchg
jmp
inc
push
jns
cwde
aam
cwde
and
test
stc
sub
clc
fnsave
jmp
imul
dec
enter
cmp
mov
pop
cli
mov
sub
test
mov
in
fwait
sub
fstp
mov
or
lods
push
cmp
sub
inc
popf
enter
inc
jo
sub
fsubr
sahf
xor
ror
pop
jmp
and
mov
mov
loopne
jb
in
mov
xchg
sti
movs
fsub
aas
jmp
movs
fld
jmp
in
jl
or
xor
js
sub
sbb
lods
movs
rol
ins
sub
je
hlt
cmps
push
add
nop
outs
pop
leave
enter
mov
xchg
test
loopne
std
add
adc
stos
sub
pop
mov
in
stos
sub
dec
imul
popa
andps
sar
sbb
enter
in
lods
sub
lock
pop
pushf
scas
or
sub
xor
jo
scas
jmp
fisttp
call
mov
repnz
cmp
xchg
mov
push
test
lods
test
push
repnz
call
fsubr
push
or
sub
imul
ins
enter
mov
xchg
imul
push
repnz
sbb
xchg
xor
mov
mov
fcom
add
sub
jns
xor
mov
jb
aam
aam
mov
sub
add
fnsave
adc
pop
paddusw
sub
push
mov
push
ins
sub
mov
nop
inc
shl
outs
pop
leave
add
mov
push
mov
imul
sub
clc
lds
add
pop
mov
mov
adc
loopne
aaa
dec
ds
or
icebp
add
jbe
jmp
jmp
jmp
icebp
cld
les
sub
xlat
(bad)
push
rcr
pop
dec
in
push
clc
mov
cmp
aas
cmp
sub
setge
test
jne
cmp
add
outs
and
jne
add
xor
imul
fldenv
stc
jle
ins
add
inc
sbb
jae
mov
out
sbb
in
push
ret
gs
jae
sbb
movs
inc
jmp
add
inc
mov
push
and
xchg
adc
jbe
dec
push
jae
ss
(bad)
(bad)
push
aas
(bad)
sbb
mov
sbb
mov
loop
xor
pop
es
xchg
ret
mov
inc
out
or
aas
retf
jg
out
cwde
or
(bad)
xchg
dec
sub
push
cmp
dec
inc
add
push
mov
and
sbb
pop
lds
sbb
xchg
pop
adc
fdiv
cmp
xor
rcr
sub
in
cmp
je
outs
push
in
test
push
(bad)
jg
mov
jae
jb
loope
inc
dec
add
inc
arpl
push
cs
outs
add
imul
outs
pop
push
rcl
leave
jnp
mov
neg
xchg
dec
inc
push
push
ja
outs
inc
cmp
add
mov
jae
push
fild
pop
data16
push
repnz
orps
mov
pop
rcl
pop
mov
add
inc
or
out
inc
push
mov
cs
adc
out
bound
aam
sbb
push
dec
mov
inc
daa
or
sbb
mov
daa
jns
jb
mov
fs
xor
clc
mov
and
je
pop
mov
mov
stos
aaa
fmul
daa
pop
cs
(bad)
adc
scas
jb
outs
imul
push
inc
aaa
daa
inc
cmp
fs
test
repnz
sub
sahf
and
rcl
jae
dec
sbb
add
leave
rol
popa
test
dec
inc
mov
imul
inc
push
jmp
push
dec
add
push
rep
(bad)
mov
dec
lds
pop
(bad)
jno
xor
pop
jae
dec
out
sub
in
scas
sbb
push
push
test
inc
push
or
or
push
adc
pop
test
push
(bad)
bound
ins
add
pop
push
test
pop
fsubr
aaa
adc
jno
ja
es
and
jae
push
or
jg
repnz
pusha
inc
cmps
cmp
or
xor
rol
mov
aas
mov
inc
in
inc
aas
pop
adc
popa
adc
(bad)
mov
adc
push
pusha
in
mov
push
xchg
xlat
mov
sbb
cmps
rcl
or
loope
inc
scas
push
mov
stos
push
test
pop
pop
mov
add
jg
pop
push
sub
mov
xchg
nop
and
inc
jle
outs
sub
mov
movs
dec
jl
(bad)
iret
mov
mov
cmps
lods
push
daa
test
and
inc
mov
push
add
rcr
add
inc
xor
or
ror
in
outs
aam
nop
dec
push
in
test
sbb
inc
cs
fadd
add
adc
in
add
imul
(bad)
ins
in
sbb
pop
(bad)
into
jb
(bad)
jb
cmps
je
in
xchg
(bad)
out
int3
cs
dec
xchg
pop
test
add
ds
dec
lar
push
mov
loop
xchg
or
cmc
inc
xchg
jl
call
mov
out
adc
jl
and
and
nop
pop
add
ss
ins
test
jo
push
or
bound
or
pop
push
lea
pop
push
xchg
shl
jp
xor
and
mov
xor
mov
push
aas
xchg
pop
inc
push
push
cmp
xchg
imul
mov
ins
sbb
aad
xchg
mov
and
mov
push
fbld
icebp
push
add
or
cmps
push
add
imul
cld
int
cmps
or
adc
and
ins
adc
in
test
ror
jmp
pop
mov
scas
xor
inc
jmp
push
xor
ja
addr16
cdq
push
sti
adc
and
(bad)
push
adc
jmp
sub
add
mov
mov
add
mov
call
mov
mov
ffreep
and
jns
into
pushf
cmps
adc
push
and
xchg
push
mul
push
jmp
jnp
fdiv
mov
push
push
lea
frstor
stc
add
inc
or
mov
je
in
mov
inc
jecxz
repz
jns
loopne
add
xchg
adc
pop
ja
pop
cmp
js
pop
pop
int3
xchg
adc
in
and
dec
enter
sbb
inc
or
push
lahf
lock
in
sbb
dec
dec
sbb
cmp
setnp
push
jmp
push
sbb
xor
mov
pushf
xchg
or
jns
les
inc
in
mov
mov
and
xor
xchg
cs
ror
xor
push
(bad)
cmps
jmp
dec
inc
or
pop
push
and
ret
daa
bound
push
dec
aas
sub
cmc
push
or
int3
or
jbe
adc
push
sti
mov
cdq
or
pop
(bad)
dec
push
adc
jbe
push
mov
call
and
in
pop
xchg
xor
movs
or
push
daa
ret
(bad)
cmp
pop
daa
outs
shl
(bad)
adc
push
dec
jl
xchg
push
lahf
inc
add
push
ror
stos
lods
fisttp
push
fisttp
jo
add
pop
lock
adc
sub
xlat
adc
mov
xchg
xchg
inc
inc
push
mov
add
add
xchg
add
cs
test
test
adc
enter
or
mov
sbb
add
and
xchg
mov
adc
icebp
nop
push
lods
adc
mov
retf
and
sub
pop
dec
xchg
inc
sub
ins
test
and
or
pop
fcom
pop
popf
mov
movs
sbb
add
sbb
fstp
jg
dec
loopne
out
sub
and
sub
mov
push
mov
xchg
not
adc
push
mov
or
jne
movs
fnstenv
nop
jbe
sub
xor
adc
mov
mov
imul
pop
scas
sub
push
and
xchg
data16
les
jo
bound
inc
push
push
cmp
add
push
push
pop
lods
ds
inc
mov
ror
and
push
pop
jg
nop
out
hlt
data16
cmp
add
fsub
aam
lods
mov
dec
sbb
enter
ja
jl
lds
jg
retf
pusha
(bad)
imul
pop
xor
sbb
cs
mov
sbb
sbb
repz
daa
rol
loopne
dec
shl
(bad)
in
pop
xchg
and
dec
shl
jp
fcom
(bad)
ins
jmp
add
jne
xor
and
pop
inc
push
xchg
dec
sub
or
lods
aad
dec
test
cmp
rol
and
dec
add
lods
repz
xor
jmpw
adc
or
push
cmps
xchg
cmp
js
dec
popf
sbb
mov
inc
push
jb
mov
js
int3
xor
test
movs
in
adc
and
or
or
movs
cmc
pusha
cdq
(bad)
xor
loop
sbb
pushf
sub
push
dec
cmc
push
add
push
mov
mov
sub
adc
lahf
xchg
mov
adc
add
jnp
adc
cdq
xchg
dec
push
iret
cs
pop
mov
mov
frstor
mov
push
mov
cmp
fwait
(bad)
fsubr
xor
sub
outs
nop
je
sbb
push
mov
nop
mov
adc
mov
int
sub
inc
sar
mov
add
shl
add
inc
or
xchg
sub
add
jecxz
dec
sub
inc
in
jo
inc
and
or
rol
mov
ins
pusha
adc
and
or
pop
pop
push
inc
adc
or
inc
mov
mov
inc
sbb
xor
add
(bad)
shl
aaa
push
fld
sbb
stos
and
and
mov
pop
jbe
jecxz
push
adc
add
ror
and
(bad)
out
je
pop
dec
dec
pop
mov
push
adc
jp
shl
pop
add
adc
int3
jmp
das
sbb
adc
mov
pop
mov
adc
xchg
(bad)
push
add
add
les
xchg
mov
adc
cmp
sbb
and
pop
mov
(bad)
retf
and
xor
or
or
mov
ror
clc
out
xchg
xor
ss
nop
and
pop
inc
cmps
mov
xchg
dec
pop
nop
not
add
sub
jne
and
cwde
pop
adc
sub
xchg
test
xor
out
movs
mov
push
mov
mov
in
cmps
sbb
pop
sub
add
adc
das
fnsave
or
sbb
test
adc
stc
mov
jge
mov
adc
ins
xchg
pop
cmp
dec
sbb
xor
push
ja
and
and
pusha
sbb
je
(bad)
cmp
mov
inc
dec
popf
xor
mov
pop
or
xor
jmp
sti
and
or
or
cmps
adc
sbb
mov
cmps
pop
jno
ret
or
or
ss
or
pop
jb
retf
pop
push
ror
pusha
frstor
sub
adc
xchg
inc
add
push
movs
pop
cmp
shl
imul
mov
inc
xor
out
cmp
xchg
cmps
(bad)
or
dec
add
ret
and
leave
xchg
inc
add
jne
push
or
mov
sbb
push
pop
sar
or
and
ja
mov
adc
or
(bad)
sbb
adc
lock
cmp
jge
cld
and
inc
push
lods
jmp
dec
mov
inc
sub
data16
out
call
test
int
push
or
scas
mov
push
stc
and
mov
jo
sbb
mov
lea
sbb
out
add
cmc
adc
adc
outs
fbstp
enter
pusha
call
mov
mov
pop
inc
mov
popa
pop
ror
cs
mov
sbb
or
sbb
dec
je
fwait
(bad)
and
add
sub
sbb
dec
sub
push
or
push
xchg
jecxz
aam
stos
fbld
xor
into
bound
retf
or
cmc
in
nop
test
add
and
xor
cmp
movs
and
icebp
inc
jmp
mov
or
push
call
mov
fcmovnb
xchg
and
cmps
inc
adc
adc
ret
and
xor
jnp
mov
arpl
inc
mov
in
mov
cs
(bad)
loopne
jge
jl
mov
aas
push
lods
adc
dec
pop
xor
xchg
(bad)
rol
adc
sub
inc
cmps
out
pop
or
aaa
outs
int
push
adc
je
inc
or
mov
test
ins
stos
nop
sub
sbb
loopne
jmp
or
test
sub
xchg
jbe
das
sub
dec
push
mov
adc
pop
test
dec
or
dec
ret
or
loope
and
dec
or
sahf
cmp
pop
loopne
je
push
imul
adc
push
xchg
mov
or
retf
add
pop
mov
lods
xor
sbb
xchg
fld
fbld
enter
pop
sbb
push
jecxz
mov
je
nop
push
(bad)
cmp
test
mov
loopne
loopne
add
sub
mov
jno
bound
repz
jl
call
pop
sub
adc
sar
jne
push
and
dec
xor
pop
fsubr
test
pop
adc
jns
pop
jne
jae
pushf
dec
rcr
inc
rcl
lahf
fadd
aaa
dec
call
fdiv
or
or
pop
dec
cmps
sbb
clc
inc
or
sub
and
add
sbb
es
or
out
or
sub
sub
add
nop
sbb
xor
adc
(bad)
lods
add
inc
aaa
pop
dec
movs
call
pop
cwde
rcl
mov
sbb
mov
adc
sahf
hlt
push
mov
xrelease
movs
in
and
xor
sub
cwde
popa
adc
xor
mov
inc
add
in
or
adc
nop
and
or
pop
and
and
sbb
jecxz
push
mov
clc
ror
add
pop
daa
adc
cmps
mov
lock
cmp
add
xchg
mov
cmp
add
aad
mov
sbb
and
mov
push
dec
rol
sub
cmp
enter
mov
pop
aaa
popa
add
addr16
push
pop
add
and
jbe
mul
fisub
xor
jmp
jmp
ins
xor
mov
inc
or
movs
sub
push
aaa
movs
pop
mov
jo
lds
xor
das
push
push
sub
mov
pushf
push
sub
sub
push
mov
fiadd
pop
mov
rol
mov
paddq
aam
pop
or
xlat
inc
push
in
movs
rol
test
loop
add
sar
sub
lods
cmp
push
sub
or
cmp
adc
int3
lds
enter
cmp
enter
ins
dec
push
mov
xor
mov
mov
pop
jb
mov
dec
mov
mov
xchg
or
cdq
pusha
mov
and
push
lods
lods
and
test
and
movs
movs
and
mov
jb
pushf
pushf
and
cwde
cwde
and
xchg
xchg
xchg
or
jns
xor
mov
or
mov
or
mov
or
mov
inc
push
stos
mov
je
add
cdq
inc
cmps
in
je
es
sub
jo
int3
or
ins
ins
add
push
lock
mov
pusha
cdq
xchg
sub
jb
das
inc
adc
test
push
(bad)
fs
es
push
push
push
cdq
xchg
(bad)
add
dec
dec
leave
leave
and
cwde
jns
dec
in
xchg
dec
dec
clc
adc
inc
cmps
in
inc
push
mov
sub
inc
inc
or
and
nop
add
xchg
mov
leave
aaa
push
in
add
aam
js
arpl
sbb
cmp
push
stc
les
hlt
nop
or
adc
jp
or
inc
xchg
leave
and
jnp
pop
dec
sub
add
sub
and
adc
push
ss
mov
adc
or
inc
jmp
and
or
stos
dec
outs
test
xor
pop
dec
add
shr
jo
push
call
rol
push
(bad)
add
lahf
ss
rcl
adc
stos
or
push
and
inc
jns
pusha
add
or
mov
mov
adc
pop
add
push
push
add
pop
push
shl
fadd
sub
ret
mov
(bad)
adc
mov
and
sbb
rol
sbb
lods
add
inc
sbb
ja
sub
sub
cdq
(bad)
mov
and
sbb
out
sub
outs
jp
ret
push
dec
(bad)
das
test
push
sub
loop
and
outs
bound
push
xor
jae
dec
xor
lock
jecxz
das
push
jge
(bad)
test
push
mov
jecxz
outs
cmps
(bad)
xchg
sbb
xchg
jb
ss
dec
and
cmp
adc
ss
inc
movs
rcl
mov
and
movs
jae
push
and
test
cmc
data16
dec
and
push
fist
add
add
mul
dec
sbb
aam
lock
stc
cmp
and
or
or
es
hlt
jmp
nop
adc
in
and
and
pop
sar
sbb
mov
(bad)
idiv
aas
clc
push
or
repz
and
mov
iret
pop
or
or
or
sahf
jnp
add
add
push
cld
cmp
nop
pop
loope
dec
cmp
in
jb
adc
shl
mov
aam
ja
sub
in
push
push
cmp
add
sub
add
out
add
cmp
push
push
sub
push
cmp
xchg
xor
push
and
jl
pop
cmp
fs
mov
cs
xchg
outs
add
pushf
cmp
lods
cmp
arpl
dec
pop
aam
pop
cmp
stos
push
and
aam
cmp
and
pop
ret
or
sti
lea
aad
inc
(bad)
popf
or
stos
call
(bad)
pop
push
push
mov
repz
daa
daa
mov
and
movaps
daa
daa
daa
daa
dec
pop
fs
cmp
daa
or
sub
sbb
loop
daa
daa
mov
cwde
movs
cmpxchg
aam
cdq
pmulhuw
add
or
js
repnz
adc
sbb
dec
sub
cmp
sub
dec
xchg
mov
jb
cmp
inc
dec
addps
jnp
jo
cmp
adc
repnz
mov
pop
push
and
push
call
cmps
push
mov
out
add
jbe
not
add
inc
add
or
or
ss
shl
repz
inc
mov
adc
je
(bad)
fwait
dec
sti
inc
not
je
or
das
inc
imul
das
emms
outs
pop
leave
arpl
pop
das
fs
inc
dec
sub
outs
popa
push
xchg
ror
(bad)
cmp
pop
arpl
and
je
ds
pop
xor
jae
outs
test
nop
(bad)
pop
pushf
adc
cs
or
out
add
and
or
pcmpgtw
mov
aas
pop
and
push
popa
pop
in
cmp
clc
push
fdiv
mov
scas
cwde
mov
adc
sbb
cdq
add
mov
adc
nop
outs
enter
pop
popa
add
sub
or
popf
add
or
loopne
add
fcom
xchg
ins
add
imul
dec
aam
je
jmp
retf
cli
pop
mov
or
in
retf
add
mov
sub
xor
fdivr
inc
push
dec
fsubr
jecxz
movzx
mov
daa
mov
aam
sar
xor
push
xchg
pusha
arpl
enter
ds
popa
jno
cwde
pop
out
xor
int3
mov
xchg
int3
enter
adc
enter
add
xchg
mov
or
jb
or
iret
jmp
shl
pop
test
cmps
pop
mov
dec
xchg
mov
out
inc
add
dec
xor
ss
push
mov
fisubr
and
mov
mov
aaa
dec
lods
xor
inc
mov
retf
or
sbb
push
das
inc
jmp
inc
cmp
and
or
xchg
or
xchg
shl
mov
inc
outs
or
inc
or
and
jl
or
xor
jne
mov
inc
ins
daa
or
das
popa
sub
call
nop
adc
jmp
or
xor
and
dec
xor
movs
pop
jbe
das
add
dec
and
imul
pop
jne
dec
push
pushf
out
fbstp
inc
add
std
adc
mov
mov
cmp
aas
loopne
sub
and
pop
xchg
push
dec
dec
or
jo
mov
test
or
mov
sub
je
sub
and
jmp
xchg
bound
xchg
not
jmp
and
push
cmp
xchg
pop
xor
adc
push
push
xor
inc
js
sbb
mov
ins
xlat
add
jle
mov
mov
ds
test
xor
idiv
adc
xor
in
jo
fs
sbb
mov
push
cmp
adc
sub
add
or
xor
add
push
sub
mov
inc
or
fnstenv
push
mov
mov
mov
or
and
int
int3
cmp
adc
mov
mov
cmp
sub
test
div
in
mov
pop
jle
add
jae
call
aas
adc
adc
xor
sub
jo
rcr
(bad)
call
loope
mov
sub
(bad)
jnp
and
jle
and
mov
out
cld
call
sbb
sbb
xchg
dec
xchg
jnp
jle
xor
in
and
xchg
retf
add
push
pop
int3
sub
dec
adc
or
dec
pop
mov
aaa
inc
jo
enter
and
push
jae
and
pusha
cmp
dec
(bad)
in
inc
and
stc
(bad)
jmp
repz
in
loopne
pop
and
mov
dec
or
fwait
push
inc
and
and
mov
xchg
sbb
inc
loope
cmp
hlt
imul
loopne
push
jne
sub
push
sub
add
shl
lock
in
mov
pop
adc
pop
mov
mov
(bad)
fwait
jae
xor
shr
ror
add
sub
and
outs
inc
cmp
popf
nop
dec
ret
rcr
mov
imul
and
push
in
sbb
arpl
sbb
int
rdtsc
sar
lahf
sub
inc
mov
add
movs
and
add
dec
mov
jecxz
or
es
and
xor
xor
hlt
or
in
inc
ja
lahf
fnstsw
mov
cmp
mov
out
mov
push
cmp
xchg
sbb
nop
shl
fidivr
(bad)
mov
add
ja
xor
nop
jnp
cmp
cmp
inc
cmps
mov
push
mov
or
mov
or
or
rcr
inc
sub
ins
cmp
xchg
nop
sbb
outs
cmp
popa
mov
int3
push
adc
scas
fisttp
rcl
inc
sub
inc
cmp
adc
ret
repz
les
inc
dec
xchg
pop
sbb
fidiv
adc
xor
mov
pusha
out
ror
call
loopne
loopne
shl
inc
call
ins
loopne
mov
pop
fcomp
cmp
jnp
xchg
push
pop
mov
sbb
fs
push
lock
or
test
and
or
shl
ror
add
test
add
int3
or
loope
stos
adc
dec
and
add
repnz
enter
cs
test
lds
sub
add
cmp
loopne
xchg
data16
fild
shl
mov
push
loopne
inc
int
scas
movs
jns
xor
jg
cmp
cmp
les
inc
js
inc
enter
jne
xchg
jge
ja
sbb
(bad)
leave
sbb
xor
in
mov
(bad)
pop
dec
sti
loopne
imul
push
ins
and
stos
rcr
dec
fisttp
push
fdiv
(bad)
sub
nop
cdq
in
(bad)
les
pop
ins
ins
in
aad
adc
popaw
push
and
dec
jnp
xor
in
dec
inc
ins
or
clc
mov
jge
push
push
or
xor
rcr
retf
mov
and
mov
scas
aam
adc
scas
sbb
idiv
sbb
adc
dec
or
and
dec
push
ins
mov
push
add
sbb
sbb
xor
sub
inc
add
push
movs
pop
mov
rcl
or
add
scas
bound
add
sbb
dec
cmp
popf
inc
push
jle
dec
jge
xchg
xchg
shl
int3
push
sub
mov
adc
adc
xor
jnp
mov
xor
pusha
or
or
ins
xor
mov
adc
push
xor
outs
scas
adc
pop
inc
inc
dec
pop
repnz
add
push
les
xchg
mov
adc
push
inc
add
add
ret
adc
xchg
inc
xchg
sahf
jp
repz
inc
test
push
xchg
mov
or
fldcw
in
add
pop
enter
inc
push
mov
push
add
inc
or
out
dec
adc
inc
add
fadd
inc
xor
add
addr16
rcr
cmp
adc
xchg
idiv
adc
add
push
data16
sbb
or
or
mov
add
pop
push
add
pop
iret
and
sti
nop
arpl
inc
iret
inc
add
dec
inc
fistp
jb
adc
(bad)
rcr
xor
sub
dec
mov
inc
adc
sbb
mov
shl
add
(bad)
inc
mov
cmc
or
pop
pop
mov
das
xchg
xor
push
cmp
daa
push
or
inc
outs
(bad)
in
add
or
ja
or
pop
xchg
cdq
in
pop
or
or
and
or
dec
jb
fs
fmul
jge
and
add
cmp
lods
and
xchg
outs
mov
jo
enter
popf
mov
movs
push
sub
xchg
cli
pop
jge
aas
add
push
or
sbb
cdq
aaa
or
or
and
push
pop
jo
arpl
add
adc
inc
ja
add
push
add
add
out
add
add
add
shl
pop
mov
ret
xchg
sbb
fiadd
xor
inc
jb
push
push
or
xor
or
and
or
push
sbb
ror
sub
ds
xchg
adc
jle
lods
adc
out
and
or
lea
mov
dec
ins
add
add
add
dec
or
aaa
fisub
ss
dec
ins
xchg
ret
jo
push
xchg
imul
jno
and
in
push
fadd
dec
cs
aas
lds
xchg
mov
sbb
sub
sbb
add
mov
(bad)
in
sub
out
rol
cmp
or
(bad)
int3
in
ret
movs
xchg
neg
push
adc
mov
adc
xchg
add
test
sbb
dec
mov
pop
mov
call
xrelease
jb
xchg
or
or
and
push
push
add
push
sub
pop
and
cmp
dec
push
frstor
mov
sbb
ss
into
popa
or
mov
outs
ror
pop
test
sub
xchg
in
loopne
adc
inc
jo
inc
pop
xchg
out
mov
ret
pop
cmp
add
jno
or
push
sub
push
enter
cmp
jbe
xchg
(bad)
rcl
fidivr
dec
ins
push
pusha
inc
push
outs
(bad)
je
in
test
mov
sbb
add
sbb
xchg
in
jo
rcr
fs
call
lea
sbb
loopne
cdq
cld
adc
xchg
sub
mov
(bad)
jmp
and
dec
cmps
stc
mov
mov
sbb
inc
dec
and
adc
xchg
das
lods
pushf
cli
or
sbb
pop
jp
pop
out
(bad)
lea
unpckhps
xor
inc
adc
mov
in
ins
test
jne
add
sar
sub
mov
and
cmp
scas
movs
xchg
cmc
dec
or
aaa
(bad)
pushf
inc
test
mov
mov
or
fidiv
lock
popa
add
mov
test
or
fsubr
inc
aad
pop
xchg
adc
add
pop
scas
nop
or
in
mov
call
enter
addr16
or
ret
xor
(bad)
push
fstp
ret
jecxz
mov
or
cmp
mov
add
daa
shl
ret
pop
ja
cmc
cmp
adc
sbb
jbe
adc
es
mov
cdq
and
or
leave
out
adc
loope
in
inc
jne
clc
(bad)
or
mov
push
stc
retf
adc
pop
xchg
popa
inc
cmp
dec
or
jae
inc
lahf
adc
hlt
dec
call
mov
(bad)
(bad)
jmp
dec
pop
shl
sbb
(bad)
pop
aad
inc
fdiv
ret
out
data16
cli
push
dec
shr
or
jae
push
rcl
xchg
or
xor
inc
xor
mov
mov
pusha
mov
add
add
daa
mov
fcomp
mov
mov
push
mov
inc
data16
sub
rcr
push
dec
add
dec
mov
push
or
imul
pop
adc
xchg
movsx
sbb
add
adc
or
cwde
inc
or
adc
aaa
in
cmp
je
je
xchg
cdq
sbb
pop
mov
ja
leave
jno
popa
mov
pop
add
scas
sbb
xchg
aas
jbe
jne
or
add
add
mov
mov
adc
ror
popa
adc
stos
xor
mov
pop
aas
add
pop
push
mov
dec
pop
jne
in
pop
add
ret
(bad)
cmp
popa
nop
xor
cmp
nop
add
sub
cmps
je
lahf
cmp
outs
add
call
daa
mov
(bad)
jae
sbb
mov
inc
pop
mov
push
das
or
and
dec
jo
pop
nop
loopne
lea
jecxz
and
add
or
pop
or
test
enter
popa
push
fstp
es
adc
and
adc
imul
popa
test
test
scas
cmp
into
or
mov
pushf
loopne
jnp
jecxz
pop
inc
pushf
bound
mov
call
ins
daa
or
lock
xchg
js
ins
lods
inc
es
out
mov
fs
(bad)
loopne
lods
mov
add
inc
pop
or
or
add
je
fild
cld
inc
push
cs
jno
add
mov
gs
sar
adc
mov
sbb
popw
pop
dec
nop
jo
pop
ret
cmp
and
mov
xchg
adc
add
push
dec
push
mov
lock
into
dec
xchg
inc
or
sbb
pop
push
add
xchg
mov
sub
es
out
and
or
aaa
xor
push
ins
xor
jne
inc
xor
iret
dec
movs
lods
dec
push
adc
mov
and
mov
add
(bad)
adc
xor
outs
xchg
mov
cmp
adc
dec
adc
adc
jmp
inc
adc
jnp
mov
or
inc
sub
mov
inc
dec
out
mov
xor
inc
arpl
push
jecxz
loopne
push
inc
ss
push
push
cmp
jle
gs
adc
mov
add
pop
dec
in
es
or
(bad)
data16
sbb
lds
test
adc
pop
jo
dec
add
push
das
repz
ds
rol
add
test
mov
push
sub
and
inc
sbb
daa
aam
sbb
ds
pop
xor
add
in
add
sub
enter
push
pop
add
push
adc
dec
inc
dec
pop
test
pop
pushf
xor
push
inc
pop
sbb
sti
scas
ins
mov
push
or
aaa
xor
pop
add
imul
nop
xchg
or
js
ja
push
and
xor
inc
add
jl
sub
push
(bad)
pop
xchg
push
test
pop
outs
mov
pop
sub
les
add
packuswb
aad
adc
popa
pop
or
xor
fldenv
add
adc
in
rcl
popa
repnz
or
adc
mov
nop
cld
daa
sub
mov
iret
les
sbb
push
shl
call
nop
push
pushf
retf
push
push
or
sub
or
sub
iret
pop
and
js
push
and
adc
sub
push
or
js
in
retf
dec
push
sbb
movs
retf
dec
jne
repnz
lods
jae
and
xor
movs
adc
inc
mov
pop
in
pusha
imul
dec
aam
retf
ficom
or
pop
arpl
test
or
xlat
adc
pusha
lods
jnp
mov
nop
fild
and
int
rcr
adc
or
and
arpl
cwde
xor
push
shl
or
daa
and
push
mov
xchg
push
test
xlat
fiadd
or
add
jl
cmp
inc
js
prefetcht2
cwde
mov
in
ret
mov
out
or
call
nop
jne
outs
in
push
enter
push
sub
call
mov
shl
add
push
add
dec
imul
sub
pop
sbb
pushf
fidivr
and
inc
or
add
nop
cmps
sbb
out
call
inc
mov
jmp
mov
pop
in
or
inc
push
mov
mov
ja
and
in
pop
cmp
pop
aam
sbb
sbb
sub
imul
sbb
mov
loop
lds
dec
sbb
mov
sub
push
fcomp
int3
add
sub
cmp
pop
stos
adc
lar
pop
in
(bad)
dec
arpl
jo
inc
sahf
dec
iret
pop
and
je
or
xchg
loope
outs
inc
outs
psubb
in
(bad)
loopne
add
xor
mov
mov
push
or
xor
xlat
pop
sub
fdiv
and
in
jo
jo
or
and
fistp
mov
rcr
iret
pop
and
xor
cmp
fnstenv
(bad)
and
add
xchg
lea
sbb
push
adc
push
inc
test
addr16
mov
mov
jne
das
sbb
pop
jae
jo
fsub
adc
add
fsubr
jle
or
and
or
leave
pop
adc
or
fsin
shl
aaa
sub
xchg
push
push
fdivrp
fadd
jae
mov
dec
jno
test
adc
or
imul
push
aaa
jp
pop
js
add
or
add
mov
adc
pop
mov
movs
mov
sbb
cli
lock
test
push
push
add
push
adc
jb
sbb
sbb
or
inc
loopne
sbb
fwait
and
xchg
in
add
push
and
clc
movups
push
jo
jbe
add
dec
sbb
pop
aas
cmp
jmp
jae
add
xchg
je
sbb
out
outs
mov
add
mov
fs
sub
mov
aaa
lock
imul
pop
fistp
out
mov
xchg
std
push
in
ins
out
push
js
jns
cmps
stc
sbb
inc
jl
in
fnstcw
sub
dec
pushf
push
add
push
in
sti
mov
mov
in
add
push
call
jge
fdivrp
ss
dec
xrelease
neg
cs
ds
repz
fs
rcl
cmc
sahf
push
clc
jns
ins
mov
dec
adc
sub
jbe
push
cwde
mov
js
inc
mov
sahf
pop
mov
pop
and
xor
cmp
inc
adc
cdq
mov
push
(bad)
leave
add
out
jns
xchg
out
push
shr
dec
pop
sbb
icebp
pop
enter
sbb
inc
rcl
or
lock
jge
mov
xor
pusha
(bad)
loopne
mov
pop
sub
popa
or
and
rcr
pop
push
lea
pop
dec
mov
lea
add
dec
cmp
fnsave
push
push
pop
imul
and
cli
test
adc
sbb
push
loope
sbb
aam
jb
repz
mov
dec
cdq
adc
dec
xchg
mov
or
xchg
shl
mov
or
xchg
fisub
mov
jb
xchg
arpl
pop
js
inc
push
rcl
in
push
cld
cwde
add
rol
daa
cmps
push
xchg
dec
loopne
adc
call
fwait
push
fs
sub
inc
or
mov
adc
mov
add
adc
push
and
test
push
cmps
push
cmps
jnp
adc
push
push
dec
adc
lahf
imul
inc
jo
adc
dec
cdq
lahf
test
mov
pop
xchg
jecxz
push
pop
mov
push
pop
pop
gs
and
and
sbb
adc
inc
pop
inc
push
xchg
cmp
xchg
fisttp
xchg
call
stos
ins
sbb
push
shl
sbb
pop
add
inc
nop
out
add
int3
inc
fcomp
jmp
enter
inc
sbb
adc
js
dec
in
shr
jns
(bad)
in
int3
mov
sub
jg
mov
jle
lock
pop
add
adc
pop
jg
sar
push
loopne
cmp
nop
call
rol
je
jle
in
mov
mov
mov
push
in
in
adc
push
movs
push
add
add
mov
xacquire
xchg
sar
jo
push
push
pop
sub
jo
xchg
loop
rol
or
add
sbb
inc
pop
xrelease
cs
inc
adc
push
popa
dec
out
je
loope
fsub
nop
sub
jg
sbb
js
jbe
jnp
mov
(bad)
cwde
js
xchg
adc
aaa
leave
out
and
js
fcom
and
xlat
hlt
or
jo
dec
in
adc
jge
vmaxsd
xor
ins
lds
stos
aam
out
dec
cmp
ret
sbb
push
add
outs
xor
call
and
inc
daa
sbb
loopne
loop
dec
js
push
ins
or
lahf
push
mov
pop
and
add
adc
cs
xchg
(bad)
and
pop
or
mov
stos
test
and
xor
and
jns
dec
ins
jg
add
into
in
jnp
and
add
mov
dec
rol
in
sub
pop
adc
cmps
lahf
fs
idiv
sub
ss
adc
jb
jmp
lahf
mov
push
je
inc
bound
push
pop
sub
inc
jge
push
hlt
sbb
mov
les
adc
popf
daa
mov
lock
pop
cmp
jb
clc
inc
les
mov
enter
jge
adc
xchg
pushf
sub
push
loope
sub
sub
push
pop
sub
cmps
(bad)
fist
and
or
add
dec
adc
and
adc
call
pop
push
pop
mov
sbb
pop
push
jb
cmp
add
fsub
sbb
cmp
sub
mov
adc
or
dec
stos
jnp
or
xor
or
sub
inc
enter
sbb
adc
push
sbb
xchg
inc
dec
pop
cwde
mov
imul
inc
sbb
cmp
mov
push
cmp
push
push
sub
mov
fmul
add
repnz
cmp
ja
dec
lock
sbb
sbb
cmp
sbb
sbb
test
sbb
or
pusha
sbb
and
mov
xor
rcl
test
mov
dec
jae
inc
je
pop
test
mov
and
inc
in
inc
int3
and
mov
in
jno
outs
xchg
pusha
mov
nop
and
dec
mov
test
pop
push
push
jmp
add
rol
sub
mov
fld
add
test
mov
lds
add
inc
icebp
dec
call
add
in
push
dec
add
or
and
mov
les
pop
add
sbb
add
add
movs
ss
mov
ss
mov
and
add
je
lahf
xchg
xchg
cmp
pop
and
and
dec
or
dec
and
js
pop
mov
jns
xchg
jnp
dec
ja
inc
rol
mul
add
es
fs
les
pop
and
pushf
dec
cs
aas
cwde
es
daa
add
pop
iret
cmp
popa
jg
sub
sbb
mov
pushf
sbb
sbb
jle
mov
adc
lea
loope
jb
daa
adc
mov
cmps
loop
fidiv
sub
leave
test
lock
sub
dec
icebp
dec
and
dec
sub
ds
sbb
cmp
in
sub
xchg
xchg
mov
pop
xor
stos
in
sub
mov
cmc
dec
in
and
pop
mov
daa
add
mov
sub
pop
xchg
cmp
jg
pop
and
jecxz
ret
(bad)
lods
push
push
(bad)
mov
and
xchg
nop
scas
dec
es
dec
sub
adc
nop
cmp
push
dec
pop
and
scas
loopne
aam
pop
push
push
loope
shl
inc
and
in
sub
push
ja
popa
xor
or
scas
or
push
sub
or
adc
pop
aam
out
push
jbe
div
mov
stos
ret
jge
dec
jae
imul
mov
xchg
xchg
nop
push
leave
mov
das
xor
inc
repnz
pop
or
js
aaa
retf
dec
pop
and
ret
push
xchg
rcl
daa
xchg
xchg
xchg
adc
xor
lods
dec
cmp
and
mov
in
pop
push
pop
pop
ret
push
mov
lahf
dec
xchg
mov
mov
push
mov
scas
push
inc
movs
add
xor
fsub
dec
jb
xor
mov
outs
push
enter
in
sbb
push
pop
sti
push
movs
xor
push
movs
cmp
mov
je
fsub
pusha
xor
cmp
mov
mov
push
mov
jl
push
xor
dec
sub
xlat
sub
movs
jne
pop
and
sahf
and
inc
dec
aaa
inc
aaa
sub
ror
push
or
sub
adc
out
sub
cwde
out
cwde
jb
pop
test
cmp
pushf
cmp
enter
cmp
pop
push
xchg
pushf
mov
repz
in
mov
cmp
sbb
jl
mov
cwde
inc
xor
ins
es
cmp
pop
in
push
inc
jl
xchg
inc
enter
inc
cmp
mov
sub
ret
jno
mov
xchg
and
retf
inc
call
adc
in
aaa
inc
in
inc
js
and
ds
aam
inc
movs
xor
lea
mov
pop
(bad)
icebp
add
and
push
loope
call
inc
and
pop
push
and
and
inc
push
les
jbe
scas
sbb
inc
test
test
inc
(bad)
outs
cmp
pop
clc
cs
sub
div
js
jo
cs
mov
adc
(bad)
adc
mov
or
(bad)
push
pop
and
retf
pop
lock
sbb
lock
push
mov
sbb
cdq
in
inc
dec
ror
mov
test
adc
jmp
jb
test
cdq
enter
add
lds
or
(bad)
push
adc
and
and
dec
mov
addr16
js
push
scas
out
pushf
pop
adc
popf
inc
das
sub
push
leave
mov
test
pop
pop
sub
inc
das
push
movs
adc
sub
sahf
out
sub
pop
or
push
hlt
push
and
pop
add
iret
xchg
xchg
daa
shl
push
es
cmps
adc
push
pop
nop
pop
jns
iret
lock
pop
push
out
or
test
out
add
leave
loopne
pusha
push
xchg
push
retfw
pop
call
add
push
or
mov
add
xor
sub
dec
add
movaps
repnz
mov
lahf
out
mov
pop
cmp
pop
rcr
push
mov
nop
pop
or
add
addr16
loope
push
imul
test
sbb
aaa
popf
and
or
cld
pop
es
pop
pop
dec
jo
and
daa
or
add
lock
cmp
hlt
sbb
test
or
(bad)
adc
int
nop
pop
rcr
push
jmp
and
pop
out
cld
pop
mov
test
ret
outs
pop
sub
push
fnsave
sub
enter
nop
sbb
mov
call
inc
add
leave
mov
sbb
or
cmp
mov
and
add
das
cmp
adc
add
das
push
pop
dec
sbb
lods
or
leave
push
popa
xchg
cmp
mov
xor
ins
dec
sub
or
outs
push
mov
sbb
pop
sahf
icebp
pop
jb
add
cmps
enter
nop
cmps
je
lahf
enter
nop
pop
fcom
xor
ds
imul
call
or
mov
jl
fsub
xor
inc
jl
ja
push
inc
bound
mov
(bad)
clc
bound
push
push
pop
sub
adc
dec
dec
cmps
pop
repnz
iret
cmp
sub
repnz
mov
arpl
jl
or
dec
fs
in
jge
inc
jmp
in
push
pop
sub
ret
test
mov
and
mov
adc
mov
lods
and
jp
cmp
cmp
bound
stos
xor
adc
push
dec
jae
gs
or
int3
sbb
dec
pop
and
mov
pusha
stos
rol
sub
imul
push
ret
and
inc
add
mov
sahf
div
fs
push
enter
es
repz
ror
in
out
jns
jnp
push
push
and
ds
rol
mov
shl
pushf
and
or
movs
or
sbb
aaa
jno
out
lods
mov
jo
rcl
or
icebp
mov
pop
sub
pop
sub
out
add
xor
add
sub
pop
nop
push
cwde
mov
add
add
das
shl
nop
add
je
push
fs
or
mov
pop
and
ins
jl
sbb
cs
lods
push
icebp
pop
xchg
movs
xor
or
dec
jmp
push
aas
scas
fild
stos
mov
inc
add
inc
xchg
jae
push
rcl
jo
icebp
add
inc
rcl
sub
jp
or
dec
aaa
les
mov
dec
add
push
and
pop
outs
and
and
scas
ja
scas
scas
adc
sub
xchg
les
add
aam
test
dec
sub
adc
nop
dec
add
inc
or
retf
push
pop
pop
sub
sub
add
mov
mov
stos
add
out
add
call
jne
xchg
add
push
pushf
jnp
push
push
push
add
dec
mov
fcomp
and
out
fisub
cmp
out
pop
jo
js
mov
pusha
push
(bad)
mov
jbe
adc
pop
inc
xor
or
sbb
imul
mov
pop
adc
or
dec
test
fistp
sbb
fcomp
mov
mov
lods
mov
add
ja
add
lea
test
test
pop
adc
imul
mov
inc
sysret
sbb
std
rol
mov
inc
test
ins
adc
and
dec
or
or
es
lods
or
or
stos
sub
xor
stos
add
cmc
or
dec
sub
dec
mov
cmp
push
arpl
cwde
in
xchg
adc
sbb
nop
clc
mov
xor
inc
fbstp
mov
adc
loope
ja
jns
nop
mov
cmps
js
mov
mov
sbb
add
jmp
pop
sbb
xor
adc
push
iret
sub
xchg
or
add
inc
add
pop
call
fs
pop
mov
lea
shr
ror
adc
cmp
or
sar
and
adc
enter
mov
adc
pop
jmp
pop
nop
inc
mov
mov
addr16
push
dec
or
adc
adc
inc
dec
or
and
push
dec
fs
mov
jb
jae
cmp
xchg
xchg
aaa
dec
add
aad
lea
sub
push
xor
cs
mov
pop
add
test
fst
sub
cmps
shl
arpl
loopne
mov
or
mov
inc
clc
scas
outs
int3
add
rcl
sbb
and
cmp
inc
push
dec
xor
dec
dec
adc
and
push
push
pop
and
xor
pop
pusha
xor
adc
fs
adc
js
movs
dec
sub
nop
js
xchg
or
jns
iret
imul
push
jl
mov
pop
out
sahf
out
jge
fwait
stos
sahf
out
sahf
mov
add
jns
imul
push
and
inc
dec
mov
test
clc
jp
push
mov
mov
lods
mov
(bad)
xor
push
mov
and
jbe
(bad)
fs
add
push
push
or
aam
je
cmp
pop
dec
mov
pop
and
leave
sub
pop
pop
call
push
cmp
jns
cmps
and
cmp
or
pop
jo
cwde
mov
iret
repz
(bad)
rcr
in
fldcw
xchg
lods
mov
int
repz
xor
fnstcw
shr
int3
out
call
ror
xor
in
sbb
inc
jo
enter
cmp
and
dec
js
(bad)
out
sar
ins
fnsave
push
push
cmps
test
into
fistp
popf
in
ss
sub
cmps
push
lods
inc
lahf
idiv
in
fs
leave
dec
loopne
cmp
outs
sub
push
sbb
mov
cmps
out
cs
shl
sahf
int
push
je
fisub
mov
fnstsw
fsubr
jns
ds
inc
sahf
lods
fidiv
fidivr
les
push
pusha
ss
push
push
sbb
mov
enter
push
sub
cmps
push
je
(bad)
mov
cmp
adc
xlat
push
mov
call
pushf
xchg
int
mov
addr16
test
cs
add
mov
in
ins
lahf
data16
loopne
fimul
(bad)
div
sbb
mov
outs
push
and
add
dec
pop
ja
ret
loopne
sahf
data16
(bad)
(bad)
sbb
rol
shr
rol
stos
test
xchg
or
dec
xlat
dec
or
push
add
or
or
in
mov
retf
xchg
xchg
cvtdq2ps
lahf
pusha
add
daa
(bad)
adc
les
add
das
mov
pop
pusha
sub
enter
ss
pop
push
add
dec
add
iret
lea
sar
or
mov
add
and
into
or
nop
mov
ret
sub
lea
inc
add
mov
dec
enter
push
xor
add
add
xchg
pop
scas
(bad)
sub
dec
jne
pop
daa
inc
jmp
rol
scas
pop
lea
mov
loopne
shl
rcl
cmp
push
popa
dec
mul
xor
xchg
adc
push
mov
or
push
or
adc
sbb
adc
adc
and
jg
add
push
add
sbb
cdq
mov
or
in
das
mov
movs
dec
rol
leave
push
cmp
pusha
and
es
or
adc
cld
inc
dec
dec
add
mov
jg
and
daa
mov
sbb
push
in
lods
nop
test
test
adc
jno
mov
mov
dec
movs
retf
shl
clc
je
pusha
add
stos
add
xchg
lea
jne
(bad)
in
adc
add
sbb
add
jnp
loopne
xchg
xchg
mov
xchg
or
mov
mov
or
enter
cmps
xor
adc
stos
mov
pop
adc
mov
xor
nop
xchg
add
jns
adc
iret
lods
rcr
dec
cs
les
(bad)
daa
mov
and
inc
loopne
dec
add
call
or
lahf
and
mov
lods
add
or
int
es
adc
inc
mov
sbb
xor
adc
adc
jg
inc
pop
xor
xchg
hlt
ins
pop
inc
outs
xchg
xor
mov
dec
scas
pop
rol
daa
pop
call
pop
ret
and
(bad)
inc
ror
rcr
and
ret
clc
and
cld
(bad)
bound
sub
and
rcl
inc
fild
xor
jo
or
pop
ins
or
bound
out
lods
jp
add
mov
and
push
retf
xchg
clc
aad
pop
xor
sub
mov
fimul
rcr
movs
pusha
and
mov
(bad)
mov
pop
xor
dec
test
mov
and
xchg
call
mov
aaa
(bad)
jbe
mov
or
xchg
ins
inc
pop
les
inc
jmp
or
cmp
and
xor
movs
nop
adc
mov
call
imul
inc
outs
xor
jg
and
lds
sub
es
loop
fs
sub
leave
mov
arpl
dec
fsub
sbb
mov
dec
es
xchg
call
and
push
inc
sbb
cwde
movs
test
popa
loop
add
dec
inc
pop
mov
inc
add
loopne
and
fst
scas
pop
in
xchg
or
dec
out
pop
repnz
(bad)
ret
or
pop
ins
pop
push
add
add
ss
push
adc
lea
cmps
add
sbb
inc
inc
pop
jg
mov
push
xor
popf
sbb
adc
outs
test
lods
xchg
jmp
dec
pusha
aad
and
add
aad
sub
retf
jb
xchg
xor
or
in
(bad)
push
or
add
adc
aam
mov
xor
pop
xor
clc
(bad)
dec
adc
and
dec
(bad)
cs
aaa
pusha
add
jp
xchg
stc
ficom
jne
inc
jmp
add
(bad)
mov
cs
ss
into
int
and
dec
pop
(bad)
cs
adc
bound
rol
inc
(bad)
jmp
add
ins
outs
fimul
bound
xor
loopne
push
or
dec
vmread
test
pusha
mov
cld
jns
or
pop
ds
(bad)
popf
pop
ins
enter
rol
inc
pop
push
(bad)
mov
inc
mov
mov
pop
push
and
rol
push
out
push
or
add
push
cdq
dec
add
jo
fbld
push
add
fst
popa
cmp
mov
sub
js
sbb
add
add
dec
adc
leave
fnsave
mov
aas
mov
mov
imul
push
jmp
not
and
clc
push
ret
or
add
xor
inc
mov
sbb
sbb
mov
rcl
(bad)
imul
jne
push
sub
dec
mov
fucomi
and
dec
inc
js
rol
push
mov
adc
stc
sub
popa
pop
xor
xlat
mov
retf
in
cmp
shr
jg
test
gs
mov
or
adc
sbb
push
cmp
add
add
int
sbb
xor
sahf
inc
retf
sub
pop
ins
mov
test
retf
mov
pop
lds
dec
or
daa
fistp
xor
stos
in
push
(bad)
xchg
pop
pop
ins
dec
pushf
sbb
cmp
(bad)
cmp
aas
add
push
xor
mov
scas
and
in
mov
cmp
push
xchg
pop
push
call
inc
test
lds
fdiv
lock
or
popa
bnd
test
xchg
call
fsubr
fadd
jno
ins
or
cmc
int
ret
inc
and
or
dec
ins
dec
inc
push
pop
lods
imul
pop
mov
(bad)
bnd
fs
arpl
sub
sbb
adc
daa
loopne
inc
int3
fs
xchg
xchg
rdtsc
or
adc
dec
aad
(bad)
stos
or
jne
pop
jne
mov
cwde
js
and
adc
cmp
in
add
movups
popf
popf
xchg
or
add
sbb
cwde
xor
loop
add
out
or
retf
push
(bad)
or
adc
aam
rol
shl
xchg
push
pushf
and
mov
add
and
jecxz
push
movs
je
jno
or
xchg
inc
nop
mov
rcl
pop
movs
mov
movs
xor
mov
add
sbb
mov
test
sbb
add
pop
adc
inc
call
sbb
in
pop
push
xchg
or
fiadd
add
fimul
dec
cli
adc
adc
or
lock
add
mov
mov
xchg
pop
mov
push
cmp
scas
sar
add
out
and
push
mov
cmp
mov
mov
jl
xchg
push
aad
rcl
and
arpl
push
ror
rol
and
or
xchg
push
mov
push
shl
cmp
fwait
sbb
jo
adc
ror
inc
mov
xor
mov
adc
mov
xchg
in
sar
inc
inc
imul
dec
dec
sbb
sbb
in
fucomi
mov
ins
jmp
or
(bad)
and
cmp
jns
mov
adc
sub
lods
fwait
sub
push
adc
lods
inc
dec
mov
xor
lea
cmp
push
or
inc
stos
xor
pop
xchg
jb
mov
shl
pop
sbb
jecxz
pop
outs
sbb
pushf
mov
daa
mov
sti
icebp
movs
inc
punpckhwd
ret
sbb
xor
jno
dec
mov
add
and
xlat
pop
and
fbld
or
(bad)
les
or
outs
dec
pop
adc
lods
jb
and
and
test
ret
jg
shl
jmp
sub
add
sub
mov
xlat
sbb
cs
fist
add
(bad)
fs
lock
pop
imul
adc
rcl
and
inc
je
and
or
mov
lea
stos
and
mov
pop
lds
pop
xor
xor
mov
icebp
retf
or
dec
xchg
push
(bad)
nop
xor
mov
mov
pop
aad
test
sbb
push
cwde
mov
mov
push
popa
ins
add
dec
jmp
add
push
cmp
mov
jmp
adc
jl
inc
and
scas
(bad)
shr
inc
adc
add
data16
xor
fs
lock
or
xor
hlt
mov
and
jge
mov
ret
push
mov
push
rol
xchg
outs
(bad)
out
lods
lods
cmp
into
mov
pop
xor
dec
add
jmp
movs
lahf
cdq
sbb
add
jns
ror
fwait
ret
aam
fcom
and
or
sbb
loopne
rcr
dec
test
pop
and
cld
les
adc
xlat
in
das
iret
popa
popf
or
in
add
icebp
jns
test
cmps
mov
push
or
dec
gs
pusha
repnz
shr
mov
neg
jne
pop
pop
or
adc
inc
sar
sar
jge
enter
(bad)
jmp
pop
mov
sbb
mov
addr16
ins
push
jmp
das
mov
push
and
pop
add
scas
sub
sbb
popa
push
cmp
loope
enter
cmp
fcomp
pop
adc
sbb
push
mov
push
push
push
cmp
pop
xor
fs
fiadd
add
mov
inc
add
inc
leave
xor
adc
cmc
and
or
sbb
cwde
adc
hlt
mov
hlt
add
out
jmp
cs
outs
xchg
add
retf
scas
add
mov
mov
sbb
inc
add
push
inc
or
inc
test
pop
mov
mov
in
or
inc
push
push
icebp
fs
test
int
lea
add
sbb
pop
dec
sbb
adc
add
adc
mov
pop
mov
aad
and
mov
das
push
push
aas
mov
jne
xor
pop
arpl
les
sbb
cli
rol
sub
sub
iret
jp
cmp
pop
cwde
dec
dec
pusha
add
gs
addr16
inc
pop
cmps
push
dec
and
ret
dec
pop
xor
test
xor
or
imul
in
loopne
adc
adc
and
call
outs
jo
cld
ror
ret
jl
adc
pop
and
xor
cmp
jl
dec
test
int
stos
imul
dec
and
rcl
int3
add
fild
jns
ds
jg
dec
jbe
mov
cmps
pop
(bad)
jmp
and
cld
nop
test
sub
push
or
or
sar
adc
inc
pusha
add
call
adc
mov
add
cmps
and
dec
dec
jge
add
jns
aas
out
fisttp
xor
cmp
in
adc
inc
das
(bad)
loopne
lahf
shl
icebp
or
sub
int
xor
call
ror
sbb
jo
mov
daa
stos
mov
sub
pop
jl
push
inc
rcl
ret
dec
jl
push
adc
xchg
ficomp
lea
shl
cdq
daa
imul
sub
hlt
stos
add
hlt
xor
loope
push
jmp
cdq
dec
inc
adc
(bad)
jle
xor
pop
xor
push
push
xchg
jecxz
sub
test
sbb
jmp
daa
ror
push
dec
icebp
push
push
sbb
js
ror
loop
adc
mov
or
add
fwait
inc
inc
cmp
sti
aam
out
cli
mov
xor
(bad)
push
inc
add
scas
les
jecxz
and
jmp
cmp
mov
lods
cmp
push
test
sub
fnstcw
inc
adc
inc
and
lahf
dec
cli
dec
jl
adc
inc
inc
fadd
lods
popf
ret
jne
loop
jmp
loope
mov
jmp
stos
ins
in
test
(bad)
loop
adc
push
(bad)
out
sbb
popf
fistp
cmp
adc
add
sub
and
fs
jo
sub
mov
ins
ins
dec
nop
icebp
or
dec
add
xchg
mov
and
in
loop
sub
sbb
dec
adc
and
add
adc
or
push
imul
test
mov
ins
fsubr
sub
jo
pop
fwait
sub
dec
add
in
adc
and
pop
mov
inc
outs
sbb
add
xchg
jl
xchg
sbb
fldenv
dec
and
mov
stos
pop
adc
idiv
fcom
leave
and
pop
mov
and
inc
clc
sbb
inc
icebp
pop
jge
inc
pusha
add
cmp
repnz
dec
pushf
and
or
adc
push
sahf
or
rcr
xchg
(bad)
or
bound
test
xlat
jno
pusha
or
addr16
(bad)
cmp
add
dec
push
fwait
xor
sbb
jo
lea
xor
sbb
push
sbb
or
loopne
test
(bad)
sbb
or
push
repz
and
call
sbb
jo
ss
or
pop
xchg
dec
sbb
addr16
mov
xor
addr16
push
fmul
cmp
pop
push
mov
xchg
jg
ret
mov
popa
test
in
sbb
jg
in
inc
fs
test
dec
sub
push
mov
adc
(bad)
add
outs
aas
mov
jo
aas
ins
mov
xor
js
ss
dec
pop
jg
add
jl
fisub
push
loope
mov
cmp
xchg
inc
xor
and
xchg
es
add
or
sub
test
and
bound
enter
ss
inc
jmp
mov
imul
inc
movs
mov
adc
dec
mov
jne
jecxz
and
or
mov
inc
and
cmp
add
adc
out
popa
pusha
cs
xor
add
jnp
not
jecxz
add
cmp
push
mov
push
pop
or
(bad)
push
add
xor
and
into
mov
xchg
mov
mov
test
lock
inc
mov
adc
pop
popa
ror
outs
dec
jl
xor
mov
aaa
loop
movs
enter
dec
inc
dec
inc
inc
mov
imul
pusha
cmc
inc
in
(bad)
jne
push
or
add
xor
ret
(bad)
hlt
sub
inc
js
std
mov
fadd
lock
inc
push
fst
outs
movs
dec
pusha
shl
pusha
mov
frstor
mov
ja
js
inc
repnz
imul
mov
mov
push
sub
sub
scas
or
xchg
pop
or
aaa
add
pop
dec
cdq
sub
cmp
sbb
push
xchg
push
or
ror
js
mov
sub
jp
xor
add
arpl
enter
pop
mov
shl
add
cs
xor
pop
adc
jnp
add
arpl
sub
push
movs
shl
adc
dec
aaa
and
or
add
(bad)
aam
adc
pop
fild
mov
mov
push
fnstsw
nop
add
adc
shl
dec
push
gs
xchg
mov
xor
test
xor
cmp
add
xchg
nop
xchg
or
out
mov
push
add
adc
and
inc
fstp
call
ficomp
lahf
adc
lahf
out
pop
sbb
adc
jp
retf
cmps
out
lods
inc
xor
or
add
add
(bad)
xchg
pop
mov
cmp
sbb
and
sbb
and
fidiv
call
xchg
rcl
inc
bswap
setne
adc
lahf
adc
add
not
pop
or
enter
lahf
popf
sub
fwait
adc
movs
dec
mov
mov
or
sbb
test
ins
lahf
push
fs
gs
add
pop
xor
pop
ins
push
sbb
cdq
inc
add
or
pop
add
ja
popa
push
lods
fadd
mov
push
sub
dec
adc
inc
pop
sbb
fs
imul
adc
das
jbe
pop
out
ds
mov
xor
inc
cmp
pop
fs
js
cmp
cmp
cli
shl
xchg
loopne
aam
push
cmp
test
je
jmp
cmp
and
retf
adc
sbb
stc
mov
xor
sar
push
mov
pop
xchg
shr
pop
adc
pop
clc
inc
loopne
jmp
ds
and
xor
repz
pop
and
jmp
add
inc
sub
or
inc
mov
sub
xlat
push
push
mov
xchg
mov
sbb
(bad)
and
lahf
enter
sbb
inc
mov
push
or
clc
idiv
div
sbb
or
lods
(bad)
or
dec
mov
adc
idiv
xor
xchg
lahf
loopne
or
call
iret
(bad)
test
cmp
call
mov
scas
stos
loop
jbe
pop
adc
dec
jne
mov
adc
adc
shl
inc
adc
jmp
push
fdiv
xchg
push
push
bnd
jmp
enter
mov
inc
and
xchg
imul
aad
pop
loopne
pop
add
test
movs
(bad)
retf
clc
rcr
in
and
scas
jp
jo
add
push
cmps
or
push
and
cmp
sbb
les
(bad)
xchg
adc
adc
inc
outs
shl
fadd
minps
sahf
xor
fsub
dec
daa
xchg
arpl
daa
rol
add
dec
pop
ins
or
mov
sub
sbb
xor
mov
inc
imul
mov
gs
sar
mov
out
pop
xor
jo
cwde
mov
cmp
rcl
addr16
lods
(bad)
ins
xchg
adc
mov
sub
dec
and
sbb
pop
xchg
cdq
xchg
stos
pop
pop
inc
and
addr16
pop
add
mov
sub
and
dec
fsub
or
xchg
shl
inc
hlt
call
mov
cmps
cs
(bad)
sti
fwait
out
jmp
repnz
pop
jmp
jmp
mov
inc
cmp
je
cmp
ret
shl
and
xchg
nop
cmps
adc
fist
shl
or
inc
fnsave
push
mov
fld
arpl
cmp
aad
pop
shl
mov
pop
xor
jbe
and
rol
cmp
jne
adc
das
jg
mov
inc
cmps
xchg
inc
xlat
mov
ficom
push
adc
test
(bad)
jmp
je
xchg
xor
inc
js
dec
jne
pop
je
scas
mov
or
xor
push
or
dec
imul
dec
sub
xor
cmps
lahf
mov
jne
scas
mov
popa
or
and
dec
adc
sahf
arpl
ret
adc
std
pcmpeqb
fstp
dec
fiadd
inc
mov
aam
out
inc
inc
mov
lahf
enter
sbb
enter
iret
cmp
dec
push
jne
je
and
cmps
inc
mov
dec
push
adc
outs
dec
inc
jecxz
fs
icebp
and
dec
mov
sub
repnz
push
add
push
ins
or
aam
adc
push
inc
jno
sbb
dec
mov
leave
sbb
sbb
sub
cmp
xchg
pusha
adc
mov
test
int
jno
add
repz
or
ins
or
imul
mov
pop
add
add
jmp
mov
dec
mov
sbb
sbb
mov
pop
aad
stos
add
ins
shl
sbb
push
add
pop
add
pop
fs
and
or
jo
or
in
jmp
or
inc
(bad)
dec
or
mov
pop
in
stos
and
jle
mov
out
in
inc
xchg
dec
dec
shr
cmp
jo
fsubr
inc
fstp
push
pop
push
and
push
scas
sub
into
rol
add
sbb
jo
dec
popa
xchg
push
or
scas
fild
fadd
les
mov
data16
ins
add
push
repnz
nop
jmp
es
ficom
jne
mov
or
jmp
les
sbb
mov
shl
aaa
inc
test
adc
add
xchg
add
inc
jno
fist
sbb
call
sub
inc
call
dec
rol
cmc
sbb
stc
mov
retf
or
es
daa
stos
jle
sbb
scas
add
cs
sub
stos
dec
sub
xor
xor
xchg
adc
(bad)
pop
pop
imul
inc
sub
lock
jl
nop
aad
or
or
cmp
nop
imul
mov
dec
fwait
sbb
pop
pop
adc
movs
push
(bad)
fsubr
out
and
sub
retf
mov
push
fld
fstp
inc
mov
outs
inc
add
shl
and
dec
mov
inc
pop
mov
out
shr
scas
mov
popf
cmp
mov
iret
mov
jmp
es
mov
shl
push
or
sub
mov
mov
mov
es
mov
adc
jne
xor
fnsave
jae
fcomi
rol
test
test
push
cmps
dec
jae
mov
pop
add
popa
hlt
push
jmp
in
hlt
mov
stos
lahf
lea
xchg
fistp
lea
(bad)
mov
pushf
shl
loopne
mov
or
enter
push
jp
xlat
inc
or
adc
inc
sahf
or
movs
add
adc
lahf
push
add
fdiv
dec
ja
jno
add
xchg
nop
sbb
ret
imul
imul
and
jo
jb
test
adc
ret
lea
clc
xor
test
cwde
jo
ret
xlat
and
rol
jge
mov
dec
xchg
imul
jns
xchg
movs
mov
or
pop
ins
and
aad
fcmovb
mov
aad
pop
mov
cmp
jge
adc
push
scas
cmp
cmp
movs
popa
xor
aam
sbb
mov
das
or
add
add
xchg
nop
jno
mov
ret
add
adc
aam
push
loopne
inc
nop
push
and
mov
and
jo
adc
mov
ret
add
or
popf
and
dec
clc
fcomp
xchg
sbb
add
or
int
bound
add
and
imul
(bad)
sbb
rol
jg
in
add
out
fucomip
cli
sbb
cmp
adc
out
imul
adc
in
and
adc
or
sbb
out
pop
push
and
xchg
lahf
jg
ins
or
or
or
inc
pop
sub
push
jae
or
imul
arpl
adc
xchg
fiadd
adc
jnp
dec
repnz
pop
push
hlt
je
xor
test
lea
daa
movs
mov
xor
and
add
pusha
mov
sub
movlps
pop
imul
fistp
mov
(bad)
in
jne
or
nop
inc
or
or
add
and
sub
jb
in
xor
lock
mov
mov
mov
inc
jmp
or
pop
pusha
lods
jns
sbb
clc
inc
push
mov
jg
push
and
or
call
push
mov
or
cmps
sbb
pushf
sub
add
mov
xor
loope
hlt
ins
add
mov
nop
out
xlat
add
dec
aas
in
test
and
inc
ret
out
jl
mov
pop
sbb
pop
jno
xor
mov
out
shr
sbb
jo
xor
fdiv
mov
pop
fmul
(bad)
xor
rcl
ins
sbb
adc
test
movs
and
and
adc
es
jl
test
add
sbb
adc
sub
add
sub
and
sbb
mov
inc
mov
pop
sbb
push
sbb
ins
xor
lods
cli
out
jbe
jle
fild
jecxz
adc
adc
jecxz
(bad)
gs
sbb
test
inc
dec
ret
mov
add
push
xlat
pop
test
push
jne
mov
mov
pop
or
cmps
lock
and
icebp
sub
or
xor
mov
adc
or
adc
and
xchg
pop
or
leave
test
loopne
add
sbb
in
pop
call
pusha
out
in
ins
and
adc
sub
or
call
adc
add
in
loopne
and
fs
loopne
sbb
and
add
jo
adc
jge
jg
mov
sub
cmp
stos
push
dec
xchg
(bad)
adc
out
adc
and
jmp
pop
mov
mov
sbb
mov
lds
sbb
lods
ja
lock
and
inc
mov
scas
gs
add
or
push
and
add
xchg
dec
sub
mov
rcl
and
pop
cmp
xchg
add
cld
adc
sar
xor
pop
mov
lods
inc
fistp
or
sbb
mov
(bad)
xchg
add
add
push
push
pop
aam
leave
adc
outs
xchg
popf
sar
adc
inc
xchg
and
push
pop
pop
rcl
in
int
int3
out
and
test
mov
mov
and
sub
jp
int
jnp
push
ja
je
mov
fstp
cmp
sub
sbb
add
jno
push
pusha
shl
lods
sbb
fstp
es
mov
push
sub
fcmovnu
jae
and
jb
dec
cmp
add
or
jp
movzx
movs
adc
loopne
dec
add
nop
push
pop
xchg
mov
jbe
into
mov
fadd
mov
inc
movs
les
iret
sbb
fwait
mov
push
popa
pop
into
sbb
push
sahf
sbb
or
mov
jo
fcom
and
jbe
xchg
cs
sbb
sbb
mov
sbb
inc
mov
dec
fadd
dec
sbb
repnz
imul
xchg
dec
and
or
ror
xor
add
in
dec
movs
nop
ret
cmp
dec
test
add
add
inc
cs
fwait
adc
aas
sub
lahf
sbb
inc
add
adc
inc
outs
add
arpl
jle
popa
sbb
jle
adc
and
jnp
push
xor
dec
neg
sub
out
fistp
aas
(bad)
ja
sbb
jne
daa
clc
cmps
or
and
and
mov
add
add
sbb
or
pop
movs
xchg
mov
sti
sub
cwde
dec
dec
test
add
mov
adc
pop
outs
sbb
jo
or
bnd
push
pop
xor
neg
imul
jecxz
add
jmp
sub
mov
das
(bad)
adc
mov
cmps
call
xchg
bound
enter
pop
call
adc
mov
mov
movzx
retf
lea
and
mov
dec
pop
xchg
scas
shl
push
mov
and
and
add
les
scas
xchg
test
stc
pusha
add
inc
sahf
adc
mov
mov
sub
pop
jno
icebp
add
in
and
setb
imul
call
in
add
sbb
push
or
pop
and
in
sbb
inc
retf
dec
push
int3
adc
in
aam
cmovb
out
xor
jmp
cs
hlt
fcomp
inc
pusha
pop
or
add
sub
inc
inc
sub
rol
push
mov
daa
mov
arpl
enter
scas
fs
sbb
out
imul
push
nop
xor
rcl
mov
nop
popa
add
mov
mov
mov
mov
or
adc
scas
nop
out
adc
ffree
rol
xor
and
movs
push
sub
in
or
push
pop
xchg
je
mov
or
ror
adc
and
adc
and
mov
jo
cmps
inc
fnsave
lea
adc
ja
add
inc
inc
xchg
dec
push
mov
fsub
xor
adc
lock
jo
fist
jmp
jne
loopne
mov
xor
sbb
in
pop
or
lock
adc
xchg
xor
inc
dec
scas
mov
and
jecxz
mov
lahf
and
push
mov
add
movs
add
push
imul
popf
call
inc
dec
outs
outs
and
lods
adc
pop
fild
popa
and
pushf
sbb
jns
mov
cli
adc
sub
inc
push
add
movs
dec
repnz
inc
iret
add
inc
mov
dec
aam
call
fs
or
xor
add
stos
xor
inc
dec
ror
rcl
loope
jae
out
fwait
(bad)
dec
adc
mov
outs
inc
lahf
jmp
mov
in
stos
arpl
mov
fcomp
sbb
push
sbb
push
cdq
mov
xor
mov
sbb
jnp
add
adc
or
and
(bad)
lods
adc
sbb
mov
push
cmp
dec
sub
pop
sub
sub
sbb
cmp
or
das
sub
add
or
aad
mov
test
inc
gs
pop
(bad)
call
mov
sub
or
int3
xor
jo
scas
and
pop
dec
or
push
jae
bound
leave
sbb
sar
mov
rcl
scas
push
or
mov
leave
xchg
pop
mov
ins
test
mov
sbb
push
xchg
fadd
imul
push
stos
and
dec
movs
nop
daa
pop
cwde
pusha
in
mov
pop
mov
and
push
call
add
dec
sti
mov
pop
arpl
and
cdq
icebp
jecxz
sub
fldenv
cmp
daa
cwde
retf
cs
cs
adc
mov
or
adc
sub
sub
push
pop
lock
xor
iret
dec
mov
adc
sbb
movs
push
std
sbb
pop
mov
xchg
loope
adc
out
(bad)
int3
test
sbb
(bad)
mov
pop
pushf
mov
mov
and
xor
dec
aad
cmps
push
pop
mov
xchg
xor
dec
or
xchg
sbb
mov
sub
push
mov
add
(bad)
mov
mov
inc
or
jl
xchg
sbb
dec
int3
xor
push
add
xchg
xor
sbb
xchg
mov
push
(bad)
and
ficom
mov
lea
sbb
or
aas
cmp
sub
(bad)
sbb
add
in
push
inc
pcmpeqd
push
pop
clc
dec
sbb
push
mov
xor
push
lods
adc
adc
loopne
outs
or
mov
hlt
pop
and
or
aad
imul
shl
mov
inc
popa
add
es
data16
xor
in
xor
add
and
inc
scas
nop
ja
and
lock
out
mov
sti
jae
test
inc
push
aam
and
test
and
pop
inc
sbb
push
not
pop
and
xchg
jp
dec
sub
fcomp
dec
push
or
test
outs
push
inc
sub
and
movs
sub
add
fild
ins
ja
and
adc
mov
sbb
pop
inc
adc
aam
clc
xchg
shr
popa
mov
dec
imul
hlt
outs
aas
pushf
add
push
or
pusha
js
sub
daa
cmp
add
pusha
inc
addr16
fadd
sub
push
and
add
push
fadd
sbb
or
pop
sbb
popa
add
dec
add
in
cmp
sub
out
adc
loop
lods
mov
nop
outs
jae
mov
daa
sbb
shl
cmp
clc
xor
inc
and
mov
mov
push
test
add
dec
sbb
xchg
sbb
test
leave
or
cmp
push
and
cmp
sub
adc
imul
(bad)
or
int3
or
mov
push
sbb
(bad)
into
fidiv
and
mov
mov
mov
clc
cmps
(bad)
xchg
cmp
outs
dec
inc
scas
mov
daa
hlt
add
mov
push
daa
sub
in
das
(bad)
cmp
cmp
xchg
adc
add
push
mov
sub
jecxz
fmul
mov
sbb
cmc
or
or
xchg
xchg
and
or
add
xor
test
ins
xor
inc
mov
iret
(bad)
cmp
into
cmp
adc
aaa
add
xor
pop
in
pop
dec
scas
and
cwde
stos
ins
xor
add
mov
or
push
pop
jo
es
loopne
jnp
add
ror
inc
adc
mov
sbb
or
dec
or
or
fnstcw
clc
xlat
das
or
xchg
mov
sbb
sbb
mov
hlt
cmp
and
dec
sti
xor
in
(bad)
icebp
xchg
mov
les
or
sub
jp
jp
push
cmp
adc
cmp
(bad)
loopne
sbb
or
sub
xor
inc
inc
inc
pcmpeqb
mov
adc
das
and
and
xor
aaa
call
fcom
jo
lea
das
xchg
xchg
jo
xchg
xchg
cmp
nop
jno
push
mov
ja
mov
mov
jno
pop
push
push
inc
jnp
push
mov
dec
or
inc
adc
mov
lods
sub
nop
xlat
mov
retf
pop
js
add
mov
dec
jno
(bad)
mov
adc
ja
dec
add
(bad)
ins
dec
stos
adc
dec
pop
or
sbb
outs
lods
mov
cmp
ja
in
cmps
mov
in
stos
adc
nop
iret
bswap
dec
addr16
inc
cmp
jmp
js
daa
and
jl
imul
and
push
daa
adc
push
or
popw
cmps
push
push
dec
(bad)
jo
test
pop
js
push
cmps
movlps
nop
and
pop
mov
movs
hlt
and
lahf
sbb
and
dec
cmp
in
sbb
jmp
sti
pop
xor
hlt
popf
cs
xor
sar
hlt
and
sbb
leave
mov
push
das
lock
or
adc
rcr
lods
sub
add
ret
mov
inc
mov
add
and
cmp
inc
lock
push
and
dec
adc
scas
xchg
and
push
xchg
in
cli
pop
lods
aaa
test
dec
lock
xchg
lods
adc
mov
ins
cmp
mov
add
(bad)
shr
push
out
jne
mov
dec
stos
mov
add
mov
xchg
inc
add
leave
(bad)
inc
push
mov
pop
sub
or
cmps
fwait
call
mov
dec
rcr
sbb
mov
mov
add
inc
jo
js
adc
out
aam
sbb
xor
add
jb
ror
inc
loope
add
xor
ficom
dec
xor
push
dec
pop
inc
jmp
add
and
clc
and
gs
fdiv
or
aaa
push
inc
dec
adc
push
add
and
jbe
inc
pusha
les
dec
add
pusha
adc
or
cwde
cs
hlt
aaa
mov
inc
jbe
dec
dec
mov
sbb
call
xor
inc
mov
add
fld
sar
in
rol
add
ret
xchg
dec
jecxz
pop
inc
adc
add
add
adc
pop
push
ret
lds
or
ret
imul
and
dec
add
inc
sbb
imul
ins
xlat
leave
es
xchg
popf
out
in
es
aaa
and
mov
dec
retf
xor
add
inc
scas
dec
dec
xchg
ins
stos
cmp
(bad)
mov
push
lds
test
adc
mov
dec
das
adc
dec
sbb
jl
out
pop
inc
ret
dec
xchg
sbb
cmc
lea
add
scas
adc
dec
dec
push
mov
je
pop
hlt
retf
xor
gs
push
and
nop
hlt
or
push
cwde
(bad)
in
ror
push
and
and
or
pop
wbinvd
add
ja
mul
sub
adc
push
add
rol
add
mov
push
dec
add
and
xchg
int3
jp
dec
cmovbe
enter
xor
mov
out
call
inc
adc
xor
jo
cdq
clc
mov
pop
mul
loope
sbb
adc
inc
out
retf
fcom
push
mov
or
push
dec
pop
add
sub
lods
sub
sbb
(bad)
and
mov
inc
and
sbb
cmovno
scas
mov
(bad)
pusha
xchg
fs
pop
cmp
pop
jns
dec
sbb
test
dec
push
and
je
fild
inc
sub
or
push
mov
lahf
into
js
bound
inc
inc
mov
or
or
rcl
mov
enter
mov
jmp
in
dec
dec
add
pop
inc
cmovg
ret
dec
and
inc
or
jo
cdq
add
mov
mov
out
pop
movs
pop
fucom
ins
add
fistp
or
xor
dec
fcomp
push
xchg
xchg
daa
in
adc
clc
mov
fild
mov
shl
pop
sbb
pop
enter
push
pop
imul
mov
xchg
in
inc
aad
adc
jmp
push
fnstenv
dec
inc
stos
mov
fldcw
mov
shl
out
add
jno
xlat
sbb
adc
test
test
mov
lahf
xchg
lods
push
sub
push
sub
xchg
jecxz
inc
inc
loopne
pop
outs
mov
inc
push
jmp
rcl
test
cmp
int
cmp
push
outs
pop
ds
inc
(bad)
xchg
daa
sahf
push
rcr
cmp
enter
xchg
jne
push
loope
cmps
adc
cmp
inc
mov
stc
cli
jbe
adc
dec
lock
jl
bound
and
into
xor
cmps
out
mov
xchg
pop
jmp
sbb
loopne
fstp
cmp
push
popf
movs
shl
test
retf
retf
xchg
sub
add
hlt
xchg
inc
cmp
add
call
pop
popa
pop
or
pop
fcmovnu
aad
push
iret
je
push
fwait
mov
mov
and
ret
loopne
xchg
adc
and
test
add
mov
jne
daa
add
sbb
xchg
jg
xchg
xor
popf
(bad)
loopne
pop
rcl
pusha
dec
sub
outs
mov
push
jmp
inc
movs
lods
sti
aaa
add
pusha
retf
push
or
rol
imul
rcl
add
pop
pop
dec
ins
jo
push
sub
jecxz
mov
lods
add
(bad)
fdivr
lea
or
movs
pop
push
shr
hlt
stos
into
inc
mov
pushf
push
pop
xor
push
scas
dec
push
fdiv
fcomp
dec
or
cmps
mov
push
adc
fwait
sbb
cmp
cmp
mov
out
pushf
lock
jecxz
data16
movs
jb
push
fmul
xchg
pusha
enter
push
add
mov
mov
mov
loopne
pop
fdiv
sub
aaa
add
imul
mov
and
leave
das
in
lds
add
or
sbb
fidiv
inc
add
bound
popf
cmp
adc
cmp
mov
imul
cmp
jg
sub
add
adc
inc
adc
xchg
xor
(bad)
fistp
ins
shr
mov
add
mov
stos
xlat
sub
and
les
or
ret
or
dec
js
inc
sub
and
(bad)
rol
push
cld
jecxz
inc
mov
jo
xor
xor
ja
xchg
cwde
and
mov
add
(bad)
out
lahf
mov
cmp
jmp
pop
js
or
imul
test
es
rcr
mov
push
sbb
fwait
(bad)
out
adc
adc
pushf
(bad)
sbb
lea
xor
add
and
cmp
and
inc
xor
jmp
add
inc
imul
sbb
loopne
push
test
jge
in
lock
jae
adc
adc
aas
sbb
mov
pop
xchg
and
sbb
(bad)
rcr
rcl
lods
call
pop
jecxz
inc
aam
(bad)
push
iret
pop
and
push
and
and
and
mov
add
adc
lods
aad
loope
int
pop
and
loopne
sub
stos
pop
jg
push
pop
jb
bound
push
pusha
and
xchg
jno
popa
loope
sub
xor
push
test
pop
add
jns
pop
outs
in
enter
cdq
pop
add
call
xor
sub
iret
mov
pusha
nop
cmp
imul
dec
pusha
adc
jne
(bad)
pushf
or
test
pop
retf
mov
or
(bad)
adc
mov
es
xchg
sbb
and
stos
in
repz
inc
outs
scas
jle
aad
inc
jnp
scas
loopne
scas
and
xchg
adc
push
ret
pop
fisub
or
and
addr16
dec
leave
sub
(bad)
int3
sbb
nop
mov
enter
das
rcl
sub
mov
xor
popa
and
mov
test
pop
icebp
(bad)
pop
push
movs
jg
add
jno
and
add
jo
arpl
adc
ficom
xor
mov
sub
mov
mov
inc
xchg
pop
push
add
sub
jns
add
aas
xchg
fs
cmp
push
ret
mov
xor
call
cmp
enter
adc
and
aam
scas
push
adc
and
in
daa
stos
gs
and
leave
mov
das
es
cmps
pusha
sub
loop
data16
xchg
and
(bad)
mov
outs
xchg
adc
fdivr
sbb
call
scas
sbb
aaa
push
mov
cmp
out
fldcw
test
aam
hlt
shl
inc
pop
jno
and
mov
(bad)
hlt
int3
mov
xchg
int
call
dec
je
aaa
and
movs
jne
inc
jne
add
scas
adc
(bad)
or
fdivr
bound
outs
adc
push
add
mov
pcmpgtb
sub
jns
adc
adc
xor
rcr
dec
push
mov
add
xchg
add
mov
inc
in
adc
inc
pushf
in
add
scas
movs
movs
mov
dec
sbb
dec
lock
je
int
cld
sub
sub
or
pusha
push
dec
fnstsw
push
mov
sbb
bound
adc
push
test
add
pop
mov
xlat
(bad)
popa
mov
add
test
sub
sub
movs
lods
nop
ret
jge
xchg
jbe
cmc
pop
lods
dec
test
out
sub
xchg
cdq
daa
hlt
jle
dec
(bad)
in
sbb
jp
bound
sbb
or
sbb
scas
mov
inc
xor
sbb
dec
imul
dec
add
or
pop
popf
jge
cwde
adc
sbb
dec
mov
mov
and
in
cmp
dec
sar
push
adc
iret
sub
ffree
ins
stos
sub
ret
adc
sbb
mov
pop
adc
push
and
adc
dec
loopne
sbb
inc
and
pop
push
inc
sbb
push
adc
mov
pop
mov
mov
add
pop
pop
ins
cdq
push
shl
out
sbb
pusha
xor
xor
push
xchg
and
cwde
xor
adc
mov
fwait
div
xor
mov
mov
xor
add
push
inc
cwde
popa
inc
iret
or
mov
add
sbb
mov
das
test
push
or
mov
jae
or
add
or
outs
clc
xchg
fisubr
push
jne
mov
mov
and
jmp
fimul
xor
add
mov
call
aam
ins
dec
repz
icebp
mov
xchg
subps
rol
mov
xor
xchg
aaa
inc
aad
in
pop
daa
inc
and
fistp
add
inc
inc
add
ror
xchg
fs
or
jb
in
pop
and
xor
add
mov
jae
and
add
sbb
cmp
sub
cwde
mov
and
outs
sbb
cld
jge
daa
test
sbb
inc
jg
bound
mov
jge
pop
fwait
mov
ret
je
and
imul
inc
mov
call
in
sub
or
ja
inc
or
jmp
outs
and
or
sbb
mov
ror
pop
adc
outs
xchg
mov
mov
pop
lahf
lahf
jp
add
mov
outs
dec
jl
movs
or
inc
fistp
inc
add
mov
rol
and
push
mov
sub
adc
add
test
sahf
cmp
pushf
push
or
or
fs
out
xchg
imul
stc
push
cdq
push
push
gs
jp
movups
cmp
popf
sbb
mov
movaps
popf
dec
dec
gs
popa
inc
pop
call
pusha
add
(bad)
(bad)
iret
aad
mov
xor
sub
test
pop
xchg
pop
hlt
test
lahf
pop
mov
aaa
adc
pop
loope
pop
inc
mov
mov
hlt
jb
mov
clc
push
and
rcl
jb
ss
xor
xchg
dec
push
sti
jb
cmp
ret
mov
sub
sbb
enter
clc
ret
outs
les
ins
or
pop
xchg
lds
inc
outs
add
fimul
add
adc
rcr
inc
stc
or
clc
addr16
cmp
jne
lock
pop
adc
mov
sub
daa
xchg
fmul
test
add
lahf
xor
pop
mov
jns
add
push
mov
pop
or
pop
je
jmp
lds
pop
mov
mov
adc
in
jmp
lahf
xor
inc
or
scas
sub
out
jmp
je
adc
dec
daa
xchg
lods
adc
test
and
aaa
push
popf
push
sub
jne
mov
xchg
inc
pushf
pop
adc
or
and
sub
outs
adc
jb
adc
fist
pop
fild
sbb
cmp
or
shl
push
xchg
inc
inc
mov
push
mov
out
cmps
pop
and
out
mov
pop
pop
push
and
ret
leave
add
and
addr16
jg
and
call
or
xchg
mov
mov
inc
sub
sbb
xchg
push
xchg
dec
and
or
mov
xor
or
sbb
test
cmova
mov
imul
cmp
(bad)
sub
mov
xchg
rcl
adc
adc
(bad)
(bad)
sti
jne
mov
nop
mov
dec
(bad)
rcr
js
sbb
jns
xor
sbb
fcomp
das
mov
mov
stos
aam
ror
addr16
ffreep
cmp
xor
ja
movs
movs
adc
xor
inc
and
mov
adc
push
and
enter
pop
push
aaa
(bad)
int3
pop
push
cs
rcl
fsubr
and
sbb
leave
xor
and
out
jbe
lea
and
adc
std
push
push
push
jne
popf
pusha
jecxz
sbb
pop
dec
or
mov
cmovno
xchg
fcomp
and
xchg
movs
(bad)
(bad)
xor
sub
jp
jecxz
(bad)
mov
cmp
push
dec
push
sbb
dec
js
xor
adc
push
cli
shr
cld
xchg
sub
je
add
push
add
nop
push
inc
dec
shr
mov
push
and
in
sub
in
pop
pusha
popa
test
xchg
cmc
rcl
add
movs
cmp
and
mov
xchg
xor
and
or
inc
call
sub
aaa
jecxz
add
add
popf
and
pop
add
xchg
test
mov
loopne
aad
cmp
mov
push
or
dec
fldcw
ret
pop
inc
inc
les
sub
jne
inc
mov
add
les
inc
icebp
cmps
outs
push
or
and
add
test
pop
leave
add
lods
pop
sub
cmps
jecxz
mov
inc
daa
and
outs
cmp
jo
(bad)
cmps
jg
jmp
pop
push
(bad)
in
sti
add
or
or
mul
and
dec
xor
call
adc
jb
push
mov
retf
cli
dec
mov
psrad
xor
adc
in
ss
cmp
ret
dec
cmp
dec
dec
jge
mov
jmp
adc
popa
mov
(bad)
mov
add
add
jne
dec
je
sar
sti
loop
pop
dec
add
fsubr
xchg
sub
sbb
femms
xchg
neg
out
adc
pop
sub
push
mov
xchg
mov
push
scas
aas
dec
shr
mov
xor
in
jl
ins
test
sub
jne
and
ins
bound
icebp
jne
gs
sbb
cmp
push
mov
aam
imul
stc
jecxz
sbb
xlat
jg
(bad)
icebp
or
adc
sti
inc
cwde
sbb
in
xchg
mov
push
mov
arpl
sub
retf
mov
mov
pop
xor
nop
inc
dec
movs
sbb
push
sbb
jns
pop
jmp
cs
inc
sbb
xor
stos
popa
pop
daa
xor
push
xor
add
outs
shl
out
sub
loopne
and
jbe
push
in
fistp
cmp
jne
sub
cli
pop
jmp
lea
jl
inc
xchg
cmp
sti
sbb
mov
xchg
jp
dec
test
xlat
jne
push
adc
das
and
mov
push
add
adc
retf
fdiv
push
iret
xor
aaa
rcr
sbb
mov
pop
or
jp
sbb
jg
mov
(bad)
dec
outs
test
push
sbb
test
add
inc
xchg
mov
std
pop
cdq
je
loope
xchg
pop
xor
or
mov
je
jecxz
adc
shl
in
push
pop
adc
jecxz
pop
or
sbb
pop
(bad)
mov
cmp
add
mov
jmp
sbb
fistp
repnz
cmp
das
cmc
xchg
sbb
shl
and
pop
popf
xchg
fs
aaa
adc
or
idiv
scas
or
push
push
add
pop
push
or
pop
or
or
or
out
push
add
gs
test
in
pop
and
inc
push
dec
pop
addr16
repz
jae
mov
retf
push
or
sub
test
mov
sub
loopne
fs
mov
xchg
push
xor
(bad)
xor
cmp
imul
adc
and
es
add
daa
push
add
in
and
push
cmp
add
inc
cmp
out
mov
inc
or
gs
js
add
scas
retf
mov
xor
(bad)
shr
in
or
test
inc
inc
add
or
push
push
add
int3
jp
add
or
add
out
fild
xchg
or
add
out
sahf
test
xchg
repz
arpl
test
pop
(bad)
not
lock
inc
bound
lock
das
ret
mov
in
jb
mov
or
sbb
sub
cmp
and
or
and
cmp
xchg
jae
mov
addr16
in
lahf
rol
add
bound
icebp
xor
mov
xlat
push
test
add
mov
lods
hlt
mov
cmp
inc
or
imul
lea
sar
mov
adc
sub
mov
mov
mov
mov
test
jmp
movs
mov
nop
add
mov
xor
mov
mov
dec
(bad)
mov
or
pop
pop
out
sub
push
lock
sub
outs
and
or
push
push
fsub
cli
imul
jne
ss
dec
mov
mov
jge
mov
push
or
mov
cmps
adc
adc
adc
in
lods
mov
or
or
sahf
out
pop
jmp
and
and
out
stos
aam
inc
and
push
lahf
out
sahf
push
(bad)
iret
in
aad
and
sti
iret
mov
push
xor
pop
sub
adc
imul
inc
dec
inc
movzx
and
test
mov
xor
test
pusha
aad
stos
and
arpl
push
xchg
in
cmps
xchg
cmp
push
test
jmp
arpl
add
sub
and
or
and
and
mov
adc
push
inc
ins
in
test
sbb
mov
outs
and
or
ins
rol
cmp
cmp
push
adc
sub
dec
sub
jl
mov
fsubr
jb
les
dec
les
mov
jmp
xchg
dec
pusha
add
call
adc
push
push
lea
push
fs
or
in
push
push
mov
int3
ret
and
add
rcr
xlat
xchg
mov
call
push
not
and
or
cmc
mov
mov
das
xor
rcl
sbb
jmp
and
push
xchg
aam
out
or
jle
jmp
xor
cli
jg
jmp
arpl
cdq
jl
cmp
fdiv
call
jge
and
dec
hlt
pop
pop
pusha
and
jo
loop
(bad)
mov
and
les
clc
fcmovnbe
test
xor
es
rcr
or
push
inc
jns
xlat
repz
mov
je
jmp
xchg
pop
xlat
rol
scas
rcl
imul
cmp
sub
and
gs
outs
and
or
inc
test
arpl
jne
mov
sbb
xor
inc
adc
fistp
jns
jle
mov
inc
pop
test
sbb
in
and
out
sbb
xchg
or
sbb
and
xchg
test
sub
adc
outs
mov
mov
pop
lods
add
nop
fild
or
xchg
in
pop
outs
cs
les
xchg
nop
sub
pop
adc
les
pop
xor
or
test
nop
xor
cs
jb
adc
inc
xchg
xchg
and
lea
sbb
or
sub
inc
cs
mov
adc
inc
mov
push
lock
jo
cmps
(bad)
nop
inc
adc
repnz
hlt
stos
retf
cmp
mov
or
push
push
lock
fbstp
or
test
rol
and
and
dec
xchg
sbb
add
or
push
and
inc
add
push
push
add
jmp
dec
icebp
push
adc
add
cmp
dec
inc
aas
mov
std
inc
push
test
outs
xchg
bound
test
or
and
and
push
daa
xchg
pop
and
rol
add
xchg
jae
bound
mov
mov
adc
lds
into
add
mov
sbb
sbb
outs
lods
cmp
(bad)
and
dec
xchg
test
push
add
push
not
cmps
mov
pop
and
or
add
xlat
or
inc
jno
addr16
jns
jbe
xor
sbb
sub
xor
rcl
sub
jmp
add
out
add
or
or
pop
and
cmp
xchg
cwde
sahf
xchg
out
pop
adc
xor
cmp
loopne
jns
adc
je
les
jb
je
jmp
adc
push
sub
ds
ds
lea
mov
add
jmp
push
jmp
add
sub
xchg
jmp
sbb
inc
not
je
and
adc
and
sbb
inc
or
pop
add
jmp
cmp
aam
(bad)
xor
gs
add
dec
lds
ret
mov
and
pop
inc
mov
push
test
dec
dec
inc
cdq
loop
sbb
mov
pop
je
cdq
idiv
cmps
shrd
add
ret
dec
call
cmp
xor
or
mov
sub
ret
lock
shl
mov
gs
push
popa
add
add
bound
test
cvtps2pd
das
mov
sub
xchg
cmp
in
ror
xor
outs
adc
and
repnz
sub
in
adc
jae
and
mov
xor
mov
pop
dec
(bad)
and
mov
stos
sub
pop
cmp
ja
jae
ins
mov
ror
clc
or
sub
add
jno
mov
es
scas
js
cmps
xchg
inc
stos
add
adc
inc
cmp
add
dec
sbb
xor
ror
xor
jno
add
gs
call
push
dec
repz
add
dec
add
bound
pop
add
fistp
add
push
(bad)
rcr
je
sbb
not
icebp
dec
enter
mov
(bad)
cmp
jge
or
lods
jp
aam
ret
inc
out
add
mov
retf
lock
das
test
push
retf
clc
cmp
call
fidiv
sub
(bad)
jl
push
sub
popa
aam
(bad)
loope
mov
jns
sub
and
xor
bound
fld
sbb
mov
nop
xor
xor
jne
mov
push
pusha
mov
ror
or
xchg
xchg
nop
scas
xlat
pop
dec
(bad)
and
and
dec
xlat
lods
add
mov
push
je
and
and
ins
sub
nop
pop
fst
mov
and
loope
push
sbb
daa
popf
cmc
mov
sbb
pop
out
pop
adc
xor
out
inc
rcl
push
addr16
int
rol
shr
sub
or
ret
hlt
or
jl
adc
xchg
fnop
sbb
and
sub
sbb
sar
inc
gs
adc
cmps
and
xor
mov
rol
iret
jo
jno
xchg
push
loopne
in
mov
inc
push
adc
add
sub
dec
call
movs
push
test
fadd
je
test
push
jns
inc
mov
mov
daa
arpl
and
add
dec
ss
xchg
dec
aam
stc
ja
shl
or
adc
outs
das
xor
fs
and
inc
mov
mov
aas
xchg
nop
inc
mov
or
cmps
popf
or
call
ins
add
dec
push
movs
rcr
(bad)
mov
scas
adc
and
pop
push
mov
clc
mov
sub
clc
jmp
or
(bad)
xor
dec
push
jb
cmp
es
cmp
adc
test
cs
jl
adc
out
jb
cmp
pop
fimul
stc
lods
movs
mov
lock
mov
out
pop
test
sub
test
stos
jge
add
push
(bad)
aad
mov
outs
mov
lods
add
dec
inc
or
mov
shl
aad
add
or
ins
ds
or
inc
inc
xchg
popf
(bad)
fst
iret
xchg
rol
inc
cdq
sbb
push
mov
pop
push
mov
imul
stos
sub
adc
and
addr16
lahf
cmps
or
and
jg
pop
fadd
inc
stos
dec
sub
jae
push
add
adc
and
adc
push
jo
test
add
push
test
or
or
jno
adc
hlt
adc
fimul
add
jmp
jns
pushf
add
aas
push
xchg
cmp
shr
fwait
cmps
shl
repz
cmp
dec
out
dec
lods
add
sar
sbb
sbb
test
mov
jns
mov
mov
ins
mov
sub
stos
pop
push
cmp
test
mov
aad
lahf
sbb
inc
sar
mov
or
inc
add
out
add
(bad)
rcr
xchg
adc
jns
ins
ja
leave
inc
fdivr
inc
jo
and
sbb
add
dec
pusha
in
pop
mov
sbb
or
fdivr
add
cmp
or
ror
pusha
xchg
jp
(bad)
popa
adc
ja
call
dec
cmp
mov
leave
mov
shl
pop
mov
inc
mov
lea
pop
adc
adc
rcl
and
imul
and
add
mov
and
fs
jecxz
call
jae
dec
and
xlat
cmp
dec
imul
fisubr
jl
cdq
loope
lock
jge
stos
mov
xchg
ins
or
or
mov
clc
mov
imul
push
fcomp
jl
test
add
push
or
not
mov
sbb
cmp
add
xor
xchg
xor
or
or
add
push
or
mov
xchg
and
ret
cmp
iret
test
(bad)
(bad)
fstp
adc
jb
push
mov
lock
ins
mov
push
xor
cdq
movs
and
and
fwait
pop
lods
call
mov
push
pop
mov
jmp
iret
shl
xor
fild
daa
icebp
mov
push
sub
in
cmp
dec
inc
cs
clc
ja
out
lods
mov
mov
hlt
shl
and
inc
fnstsw
or
cmp
xor
inc
fnstcw
add
or
mov
repz
pushf
pop
sbb
dec
shl
add
xchg
or
ins
or
int3
mov
xchg
sbb
cmc
dec
add
cmp
xchg
int3
scas
rcr
push
out
xor
aam
repnz
jb
or
dec
in
add
imul
adc
add
push
int
add
inc
or
add
cmp
push
je
ja
test
dec
cmp
mov
mov
mov
mov
std
xor
fcom
call
out
aad
test
mov
inc
dec
xor
jne
movs
inc
and
add
xor
mov
mov
inc
mov
jmp
mov
mov
sti
fst
cmp
call
push
lock
rcr
shr
and
int3
pop
lods
loopne
xchg
int3
jg
add
cmc
pusha
add
and
push
sub
lods
je
dec
popf
mov
int3
imul
adc
inc
dec
lock
xchg
xor
call
pop
mov
mov
adc
push
ret
dec
adc
xor
pop
push
mov
or
(bad)
fisubr
inc
popf
call
in
pop
xor
aaa
add
mov
mov
mov
ins
push
sub
int
test
mov
loopne
sub
xchg
and
adc
xor
or
adc
mov
sub
mov
jge
mov
mov
jo
pop
jle
mov
sbb
dec
add
movs
cmps
xor
lods
and
adc
mov
add
xor
call
ror
rcl
mov
pusha
sub
loop
shr
iret
call
jmp
loope
fidivr
ds
(bad)
jmp
add
cmp
or
push
or
rcl
jae
pop
fisttp
jmp
xchg
clc
dec
pop
scas
aaa
lea
cmp
mov
sbb
fdiv
pop
mov
sbb
inc
pop
or
or
pop
inc
sbb
push
dec
enter
cs
movs
dec
dec
arpl
popa
loop
and
dec
sbb
dec
cld
popf
fsubr
mov
lea
adc
push
xor
shl
pop
imul
xor
dec
mov
stos
(bad)
adc
xchg
movs
mov
push
in
je
mov
cmp
mov
popf
jbe
aas
jne
dec
clc
mov
iret
xchg
xchg
and
push
clc
mov
xor
les
mov
and
add
mov
and
inc
push
int
add
lods
in
mov
cmps
fdiv
pop
and
xchg
out
mov
add
and
push
(bad)
fsub
scas
and
shl
mov
mov
daa
inc
fwait
add
inc
sbb
cs
call
dec
push
jb
xor
stos
mov
mov
mov
xchg
add
aaa
fcom
cwde
sbb
pop
dec
mov
or
shl
mov
shl
or
fimul
ins
mov
inc
inc
sar
in
jo
xor
popa
inc
or
(bad)
push
xor
adc
and
adc
jmp
nop
outs
test
dec
jp
out
dec
dec
mov
dec
fmul
xor
xchg
sbb
out
mov
inc
aad
cmp
bound
repnz
fisttp
fadd
lods
jg
xor
cmp
adc
dec
push
mov
cmc
adc
adc
mov
or
pop
cmp
fwait
in
mov
loopne
adc
nop
das
dec
pmaxub
je
jmp
out
sub
bswap
js
xor
sub
lock
jmp
push
mov
sbb
ret
scas
gs
xchg
mov
pusha
xchg
inc
add
add
pop
ja
pop
add
push
xor
fldenv
cmps
loopne
pop
sub
mov
adc
push
push
sbb
stos
adc
daa
xlat
outs
or
fidivr
cdq
clc
push
loopne
or
xor
mov
push
movs
fcom
inc
xlat
stos
rol
in
cmp
movs
loopne
sbb
xor
es
mov
fwait
out
xor
std
mov
adc
ret
mov
bound
sub
add
jno
and
cld
inc
add
outs
ja
xor
mov
dec
mov
add
ja
pop
enter
or
add
add
out
fild
mov
mov
or
cmp
out
fidivr
aas
mov
sbb
fcom
loop
es
adc
cmp
inc
dec
outs
pop
add
jnp
pop
hlt
sbb
mov
imul
or
inc
inc
jecxz
std
inc
cmp
inc
call
ret
in
rol
popa
jnp
jle
and
not
dec
repnz
mov
mov
out
mov
cmp
pop
sti
gs
lea
sbb
jnp
mov
and
nop
mov
popa
mov
(bad)
xor
out
mov
jge
and
arpl
xor
xchg
cmps
inc
cmp
in
sbb
cmps
mov
adc
inc
dec
xor
(bad)
daa
popa
mov
xor
inc
popa
mov
pop
jge
or
shr
movs
(bad)
nop
add
mov
cli
xchg
(bad)
into
pop
mov
xchg
sbb
into
repz
imul
mov
ins
(bad)
dec
xchg
or
push
clc
mov
inc
dec
or
sub
adc
test
fwait
call
out
movs
jne
mov
aaa
mov
sbb
jle
pusha
dec
clc
or
shl
jno
lahf
int
pop
add
or
push
sbb
into
int
int3
adc
inc
or
mov
sbb
add
xor
mov
scas
ror
xchg
inc
out
shr
cmp
rol
pop
popa
pop
xor
iret
repz
dec
inc
aaa
out
cli
(bad)
loopne
mov
arpl
sar
scas
imul
inc
dec
shl
mov
push
adc
mov
sub
xor
add
xlat
push
add
daa
das
sbb
push
add
adc
mov
xor
mov
data16
fs
fbld
adc
inc
or
xchg
inc
enter
jo
and
or
add
xchg
cmovb
int3
or
(bad)
push
jge
push
call
lods
pop
and
xchg
das
dec
push
jns
add
fisttp
xchg
cdq
cmp
add
bnd
dec
leave
push
lahf
adc
xchg
ret
and
or
pop
jg
arpl
add
push
jne
lds
test
push
jecxz
add
pop
lea
xor
dec
ins
sbb
mov
cs
and
push
hlt
sub
call
xchg
cmps
ret
xchg
(bad)
mov
out
rcr
test
lea
pminub
loope
mov
cmps
hlt
hlt
lock
pusha
and
add
lods
call
lods
cmp
sub
ss
in
add
test
loope
sbb
sbb
push
inc
and
les
and
aas
mov
xor
mov
xor
dec
add
xchg
pop
adc
sar
or
ror
xchg
mov
adc
nop
mov
dec
jnp
repz
add
shl
dec
adc
imul
hlt
mov
popa
lahf
or
lods
cs
jne
jns
mov
cmp
int
adc
sub
push
sbb
call
test
hlt
pop
add
pop
out
xchg
sub
inc
inc
jecxz
or
and
push
(bad)
ret
inc
push
push
push
sub
fadd
and
pop
and
inc
dec
cmp
sbb
mov
mov
sub
mul
or
jecxz
shl
push
or
shl
jl
sub
out
dec
dec
sbb
xor
hlt
cmp
xchg
(bad)
jo
mov
ja
mov
ror
adc
xchg
jmp
cdq
xchg
test
mov
bound
sub
jecxz
pop
sub
sub
inc
pop
adc
sub
push
add
hlt
mov
pop
xor
push
mov
(bad)
adc
mov
push
jne
aaa
fdivr
out
mov
or
les
add
movs
lds
adc
add
pop
sbb
jbe
fcmovnu
jle
inc
mov
dec
sbb
add
lock
pop
movs
push
sub
mov
push
cmc
mov
or
jo
jge
fcomp
dec
std
mov
and
sbb
fdivp
mov
jae
jo
dec
arpl
sbb
inc
push
dec
jge
sbb
jmp
dec
stos
adc
and
sub
dec
xchg
inc
rcr
stc
xor
les
pop
sbb
push
xchg
nop
inc
or
push
inc
addr16
gs
push
nop
dec
sub
das
jb
or
test
add
pop
pop
cs
mov
xchg
cmp
inc
out
retf
enter
mov
ss
push
adc
enter
mov
jo
cdq
lock
lock
xor
jmp
cmp
test
mov
nop
nop
sub
mov
dec
add
or
pop
push
xor
pop
xchg
xor
xchg
fnstenv
mov
xor
pop
popa
rol
or
push
or
inc
dec
mov
xor
aaa
popf
fldenv
aad
push
inc
shl
xlat
adc
outs
movs
add
scas
jne
push
mov
js
lock
dec
pusha
shl
inc
adc
daa
(bad)
xor
xchg
pop
lds
hlt
lea
pop
or
sbb
lea
push
sub
adc
sahf
push
xor
sbb
fcmovne
icebp
xor
and
pop
imul
and
push
push
push
mov
or
mov
jmp
push
jl
push
fisttp
leave
and
outs
add
pop
cmc
sbb
cdq
dec
imul
add
push
out
mov
test
clc
and
ret
jns
loopne
fdiv
outs
jno
xchg
(bad)
dec
cmps
dec
scas
inc
fidivr
sbb
sbb
adc
push
pusha
mov
setge
or
mov
add
lahf
push
leave
idiv
movs
popa
and
xchg
cmc
into
xchg
or
and
xor
repnz
into
mul
cmp
and
out
cvttps2pi
sbb
or
push
jmp
push
lock
jmp
popa
cmp
mov
cwde
adc
dec
clc
pop
test
or
mov
jno
push
int3
nop
mov
fsub
cs
or
cmps
outs
xor
and
inc
xchg
inc
mov
add
ret
mov
imul
cmp
fdiv
nop
push
pop
ins
push
and
dec
outs
frstor
add
rcr
or
sti
retf
mov
or
arpl
add
and
inc
inc
push
jne
sbb
adc
je
adc
pop
popa
fsubr
inc
cmps
adc
pusha
iret
mov
push
test
(bad)
jae
mov
scas
dec
(bad)
addr16
or
and
retf
cmp
cmp
add
sbb
lea
fld
(bad)
aas
push
test
xchg
sub
es
pop
test
mov
jno
or
xlat
pop
aaa
push
jmp
rcr
mov
or
ret
jle
sub
xchg
mov
pushf
or
or
push
mov
popf
int3
hlt
xchg
cmc
jg
or
dec
rep
and
icebp
dec
dec
cmp
daa
push
dec
add
loope
mov
aaa
aad
xchg
arpl
or
rol
add
push
shl
ror
jl
sbb
pop
mov
and
std
aas
and
add
nop
lock
lods
xor
or
dec
fadd
jl
pop
mov
push
dec
fwait
pop
les
cmp
push
scas
int
ret
mov
pop
lds
std
add
popa
dec
or
sbb
popa
scas
add
and
dec
sbb
aas
mov
(bad)
fldl2t
cdq
mov
leave
or
or
and
mov
push
cmp
sti
les
loop
inc
aas
and
addr16
aad
sbb
cmps
fidivr
push
inc
xor
rcr
pop
add
adc
lock
ret
aas
jmp
aad
sbb
sub
push
arpl
inc
stos
add
call
lds
movs
push
lods
add
sub
mov
push
add
inc
or
mov
cmc
sub
jbe
outs
cmp
pop
mov
dec
cs
sbb
jae
cs
and
inc
sub
xchg
xchg
nop
retf
pop
pop
jne
test
push
outs
es
icebp
add
stos
or
push
push
or
rol
xor
cmps
xor
xor
adc
sbb
lods
dec
daa
fadd
xor
pop
sbb
or
daa
pop
xor
mov
fdivr
fcomp
inc
mov
popa
js
pop
not
rcl
push
adc
sbb
and
xlat
add
and
inc
or
xor
ror
mul
ret
imul
and
sub
and
adc
push
or
in
popf
xchg
dec
jo
nop
or
cdq
out
ds
and
movs
lock
or
mov
adc
mov
jg
xchg
cmps
adc
jno
mov
fisubr
add
mov
inc
mov
repz
mov
call
dec
mov
jb
xlat
sub
xchg
jl
fcomi
leave
adc
pop
(bad)
mov
retf
loopne
and
mov
fstp
and
sub
inc
sub
(bad)
mov
stc
or
or
fcom
and
aaa
xor
pushf
aas
adc
ror
outs
(bad)
jo
das
test
daa
xor
xor
xchg
and
sbb
push
mov
dec
in
sub
(bad)
push
push
inc
aam
xchg
das
push
cmps
inc
jmp
dec
ret
int
rcl
test
shr
je
xchg
pop
ja
mov
pop
leave
cmp
jnp
int3
aad
push
shl
ja
inc
rol
pop
sub
push
pop
lahf
daa
adc
xor
bnd
push
sbb
add
adc
into
aam
cli
ins
inc
push
sbb
or
ret
mov
cwde
xchg
dec
inc
fld
mov
push
inc
daa
sub
ins
mov
es
push
pop
or
sub
sbb
adc
inc
xchg
hlt
scas
and
daa
sbb
push
adc
pusha
dec
sbb
mov
test
cmp
jecxz
push
mov
aaa
dec
ror
sbb
xor
inc
dec
shl
and
sub
mov
xor
sbb
daa
movs
mov
loopne
leave
outs
jnp
scas
fiadd
or
cmps
fdiv
test
in
ds
push
jge
inc
enter
sbb
sub
add
cmps
das
outs
stos
push
add
fs
xchg
ror
fdiv
enter
inc
movs
and
aas
fldenv
adc
push
adc
pop
stos
pop
push
pop
sub
and
retf
test
fdivr
fld
and
aam
mov
add
mov
push
cmp
add
movs
mov
add
inc
cmps
pusha
adc
adc
retf
adc
nop
retf
test
ror
gs
es
mov
xor
adc
hlt
lock
cdq
leave
inc
cs
stos
adc
enter
dec
nop
or
xor
test
fist
and
inc
pop
dec
inc
mov
inc
push
addr16
inc
mov
jb
mov
or
in
dec
dec
xor
pop
or
xchg
clc
dec
je
and
iret
xor
pop
lock
pop
sbb
add
test
cmp
push
rol
in
sbb
sub
arpl
and
dec
xlat
inc
stos
retf
adc
sub
lods
inc
lods
das
push
adc
lea
lea
adc
dec
in
mov
cdq
fisubr
add
and
pushf
rol
and
mov
dec
iret
mov
push
xchg
pop
push
jl
xor
(bad)
iret
in
xlat
adc
nop
(bad)
leave
jo
jle
pop
fmul
dec
mov
in
add
push
and
pop
sbb
out
or
out
push
sbb
cmc
std
xor
cmp
into
repz
and
fbld
aad
fdivrp
dec
xchg
push
sub
or
cmp
push
inc
mov
dec
push
mov
pop
xchg
ins
ss
push
mov
adc
pop
nop
es
pop
push
sar
inc
push
push
and
adc
cmps
(bad)
sbb
adc
ins
enter
adc
sub
or
bound
push
loop
out
adc
(bad)
or
dec
cs
adc
and
push
out
or
pop
and
jbe
add
mov
adc
xor
add
clc
fcom
mov
and
dec
sub
dec
cmp
leave
and
neg
retf
iret
mov
jbe
mov
test
add
clc
or
adc
push
scas
add
bound
or
inc
sub
rcr
inc
in
push
jb
leave
fadd
add
clc
(bad)
(bad)
ret
jmp
inc
add
mov
pushf
cld
pop
movs
cmps
adc
or
adc
or
mov
out
out
add
aad
dec
outs
adc
inc
dec
sbb
out
add
cmovs
push
add
push
retf
pusha
sbb
push
jo
es
push
push
adc
adc
adc
fsub
nop
fdiv
cwde
sbb
dec
pusha
cld
jmp
push
or
mov
arpl
or
call
les
test
xor
cmovle
inc
fsub
jne
dec
xor
xchg
mov
stos
push
pusha
movs
sub
xchg
sbb
rcr
aas
out
inc
add
jecxz
pop
mov
fbld
(bad)
fild
shl
inc
pop
sbb
adc
and
and
fadd
cmp
ret
ins
sbb
mov
pop
js
adc
cdq
xchg
dec
mov
pop
in
xchg
or
aaa
add
int3
adc
pop
jb
test
leave
and
aaa
out
or
push
sub
xor
cmps
arpl
into
(bad)
imul
hlt
jmp
and
ins
inc
ins
adc
cdq
adc
lods
lea
mov
and
es
lock
aaa
sub
xchg
pop
jb
cmp
and
xchg
dec
or
jo
or
jb
test
mov
xor
jmp
pop
movs
dec
outs
leave
enter
sub
xor
call
push
sbb
inc
rol
add
push
bnd
sub
push
push
dec
mov
dec
inc
push
push
inc
pop
or
fst
scas
add
inc
pop
fnsetpm(287
jbe
pop
or
ja
or
cmps
mov
push
or
in
xchg
dec
dec
dec
inc
aaa
sbb
mov
movs
aaa
pop
pop
aas
test
dec
push
aaa
inc
push
dec
dec
add
push
imul
inc
pop
inc
ds
push
scas
inc
pop
aaa
mov
push
push
push
push
dec
adc
add
out
push
dec
pop
pop
fsub
out
inc
pusha
ja
pop
pop
xor
xor
ret
test
shl
and
cmps
push
popf
jne
test
nop
inc
mov
and
lods
pop
and
jae
leave
or
(bad)
dec
aas
mov
shr
jg
push
call
adc
jg
jecxz
add
out
or
rol
jl
mov
adc
pop
in
addr16
mov
xor
clc
xor
inc
sub
imul
in
dec
(bad)
test
push
rcl
dec
xchg
stc
pop
and
mov
jl
sub
loopne
scas
pop
adc
dec
pop
nop
xchg
loopne
sub
daa
cmp
mov
nop
push
sbb
out
enter
ss
mov
loopne
jne
sub
jmp
rcr
loope
adc
fmul
lea
dec
frstor
adc
fld
imul
rol
out
pusha
stos
and
add
not
test
and
mov
dec
or
jno
cmp
into
mov
sub
inc
pushf
mov
sub
pop
mov
sbb
and
push
cwde
xor
das
imul
pop
jmp
adc
das
jne
pushf
leave
add
call
pop
ds
sub
mov
inc
nop
imul
sbb
pop
cmc
fwait
lock
sub
je
push
in
add
loopne
push
repnz
adc
mov
cli
add
test
cmp
dec
out
pop
ins
cdq
pusha
xchg
jg
xchg
pop
lods
cmp
jb
xchg
push
jmp
xchg
jecxz
dec
cmp
and
pop
outs
push
push
mov
int
cmp
lea
hlt
les
xor
out
out
add
inc
or
cwde
add
lock
sbb
retf
sub
dec
mov
hlt
mov
or
jecxz
out
or
adc
sub
dec
or
or
test
retf
add
jb
ja
jmp
sbb
ins
out
jne
dec
test
xor
je
nop
addr16
lock
test
jmp
adc
nop
inc
fdivr
xchg
or
loope
cmc
adc
(bad)
jecxz
jno
test
sar
push
xchg
push
xor
clc
cdq
mov
sub
add
xchg
lahf
enter
xor
adc
lock
dec
jae
sbb
loop
jecxz
pop
lahf
ss
loop
or
add
or
add
out
test
xchg
jnp
movs
cmp
xchg
popf
adc
out
push
dec
call
add
push
pop
sub
je
daa
jns
push
mov
sub
push
(bad)
ror
data16
pop
pop
js
je
inc
cs
mov
jge
inc
adc
xor
iret
in
mov
mov
out
adc
leave
sti
inc
in
pop
rcl
xchg
jno
stc
fsub
mov
ins
adc
sbb
fmul
lods
adc
jmp
shl
pop
inc
ficom
push
or
enter
and
int3
sbb
jmp
and
adc
loop
mov
push
rcl
movs
sbb
(bad)
mov
leave
pop
add
iret
fld
pop
mov
push
inc
or
push
mov
mov
or
not
mov
rcr
mov
cmp
mov
pop
dec
inc
mov
ins
xlat
inc
out
xchg
inc
or
pop
fiadd
js
push
enter
push
or
cs
and
push
and
jb
and
inc
sbb
adc
inc
push
addr16
aaa
jmp
arpl
test
push
push
ficom
cli
jle
lea
test
iretw
sub
mov
sub
add
shl
adc
enter
add
xchg
mov
jns
idiv
test
outs
push
mov
mov
pop
es
inc
cli
and
outs
mov
cmp
call
lds
jo
sbb
and
iret
and
push
add
(bad)
sbb
lods
push
dec
fs
sbb
adc
fcomp
jnp
mov
fs
pop
cmp
enter
mov
sbb
in
or
sti
push
cmp
pop
retf
add
aam
je
jmp
sub
xchg
lods
mov
jmp
jb
cmp
int3
add
ja
es
push
movs
ja
add
adc
fstp
cmps
sti
enter
leave
mov
add
int
jo
xor
pop
jg
dec
add
or
or
or
iret
lea
sbb
retf
out
test
into
inc
movs
scas
add
xchg
xchg
jns
and
cmp
aaa
xor
lock
sbb
mov
fucomi
sub
stos
das
stc
dec
xchg
mov
inc
add
or
push
xor
sbb
retf
in
jge
cmps
fisttp
mov
add
jne
adc
test
or
retf
mov
and
mov
mov
mov
mov
or
jmp
aad
int3
xchg
aas
pop
sbb
icebp
xor
les
push
call
and
cmp
xchg
icebp
mov
or
sub
xchg
sub
or
pop
sbb
mov
add
adc
cmp
adc
pop
cmp
xchg
push
ret
lea
cwde
mov
cmp
add
hlt
in
(bad)
or
push
(bad)
sti
or
push
sbb
in
mov
movs
pop
inc
mov
pop
dec
lock
and
data16
and
add
mov
div
add
cmp
push
or
add
fisttp
jmp
rol
push
scas
inc
fcmovnb
cmp
push
arpl
cdq
retf
in
das
sub
xchg
sub
and
(bad)
jle
sbb
lods
lds
mov
mov
mov
mov
test
pop
pop
xchg
add
es
enter
mov
arpl
out
add
jmp
in
mov
cli
pop
inc
sbb
sub
adc
push
(bad)
push
pop
sbb
xor
pop
adc
call
stc
pop
rol
loope
cld
sub
and
outs
add
or
aam
hlt
lock
sahf
add
or
les
push
xor
pop
mov
mov
adc
inc
imul
movs
icebp
dec
cdq
loopne
mov
sub
add
test
xchg
sub
(bad)
loopne
ret
inc
hlt
cmp
cmps
push
ror
sub
adc
fisttp
or
add
cs
cmps
into
mov
ss
or
repnz
loopne
sbb
mov
sbb
dec
mov
push
popf
pop
push
shl
or
inc
mov
in
fdiv
xchg
sub
psrlw
ds
sub
(bad)
loopne
or
shl
in
shl
add
push
(bad)
aas
push
ja
call
into
shr
and
push
dec
aad
adc
xor
push
pusha
inc
pop
jae
rol
sbb
(bad)
fsubr
rcl
xchg
inc
mov
push
mov
sub
in
fild
or
inc
xchg
popf
pop
test
in
adc
and
or
xor
and
loopne
lods
or
adc
lahf
and
cmp
adc
and
mov
test
push
and
scas
push
call
ins
sbb
fadd
pop
push
mov
adc
mov
test
cmp
nop
inc
aaa
dec
outs
inc
sbb
xlat
pusha
add
retf
arpl
jl
mov
sahf
xchg
nop
add
push
jmp
sbb
jl
add
lock
out
iret
cmp
sbb
mov
(bad)
addr16
mov
das
in
pop
or
adc
push
ror
lock
inc
cmp
rol
shl
pop
(bad)
inc
mov
lods
dec
dec
adc
loope
pop
mov
or
add
sahf
push
dec
call
or
fistp
or
in
mov
or
out
out
jns
loopne
push
pop
push
sub
sahf
push
imul
repz
xor
fidiv
ret
or
repnz
cmp
icebp
aam
cmp
in
cmc
ins
lds
mov
mov
stc
cmp
lock
xchg
push
push
inc
icebp
dec
push
inc
test
cmp
clc
adc
loope
jle
or
or
outs
test
les
inc
stos
mov
or
(bad)
loopne
inc
bound
or
or
dec
push
scas
mov
add
and
fcmovnb
in
and
test
loopne
pop
in
inc
add
jbe
loop
mov
fnstenv
mov
mov
add
mov
in
fmul
dec
push
mov
gs
add
add
mov
inc
inc
add
xlat
into
or
pop
pusha
or
pushf
push
pop
adc
pop
push
dec
push
loopne
fwait
add
mov
stos
mov
lds
(bad)
js
mov
xor
dec
dec
shl
mov
int3
fld
sub
mov
aas
xlat
shl
add
xchg
push
stc
sbb
sbb
ins
adc
jmp
daa
imul
sbb
aam
ins
xchg
and
nop
sar
inc
cmovnp
push
popa
pushf
icebp
les
mov
push
dec
add
test
pop
push
lods
cmp
sub
push
jae
inc
add
mov
and
je
sbb
mov
loopne
push
retf
frstor
mov
lods
pop
ins
sbb
add
mov
mov
push
add
add
or
push
push
xchg
add
and
inc
into
out
inc
add
jns
add
sbb
inc
add
mov
pusha
or
repz
push
ret
add
jge
ret
pop
cld
mov
xchg
out
add
push
add
loopne
xor
or
add
rcl
mov
shl
add
mov
ja
push
mov
aam
out
xchg
les
dec
jo
xlat
add
xor
mov
sub
xchg
sub
jne
sbb
mov
jmp
nop
mov
dec
push
das
or
add
inc
test
jmp
adc
(bad)
out
push
mov
outs
add
push
add
adc
pusha
add
jne
imul
retf
(bad)
fsub
jmp
ja
xchg
dec
dec
lahf
in
sub
ss
fdiv
mov
loope
and
fmul
test
inc
loop
test
sbb
adc
pop
xor
and
adc
add
adc
push
dec
or
lea
cs
sub
adc
inc
push
sar
inc
pop
das
adc
in
adc
test
ja
xor
adc
add
pop
sub
inc
popf
and
or
mov
adc
jmp
dec
dec
pop
push
repz
ins
(bad)
mov
adc
pop
sbb
test
mov
sar
test
sub
mov
push
scas
mov
fldcw
mov
inc
add
sahf
js
add
add
pop
cli
les
or
mov
retf
les
mov
pop
add
and
nop
adc
jmp
adc
ret
sub
push
jns
iret
jnp
mov
fisubr
or
dec
loopne
imul
cmp
push
(bad)
push
sbb
push
adc
or
sbb
inc
pop
sbb
xor
pop
popa
add
adc
adc
add
and
ins
push
aam
fsubr
jl
jbe
rcl
and
xchg
and
outs
and
or
mov
ret
jno
inc
popa
cmp
xor
test
fwait
lea
push
fidiv
add
fld
dec
in
adc
add
adc
add
outs
add
test
dec
sbb
retf
ror
push
pop
adc
mov
pop
jae
add
in
dec
xor
fdiv
sbb
push
out
adc
sbb
push
adc
pop
add
sbb
inc
call
mov
push
push
ret
xor
pop
iret
or
mov
cld
xadd
stc
dec
bound
adc
ins
adc
dec
adc
pusha
push
sbb
xchg
fmul
cmps
push
mov
ja
and
or
sbb
(bad)
xor
leave
inc
fisttp
push
push
and
pop
or
jbe
or
fs
adc
mov
xchg
scas
dec
data16
adc
nop
in
les
adc
push
lock
daa
and
sbb
loope
add
mov
push
fnstenv
jg
stos
xchg
xor
sub
outs
cmp
push
mov
cmp
sub
xor
cmp
mov
add
add
popa
adc
jns
lods
or
xor
mov
or
lock
fneni(8087
xor
jae
test
adc
dec
aad
xor
dec
imul
push
loope
xor
cmp
xor
sbb
push
mov
inc
les
leave
frstor
mov
push
sub
mov
inc
(bad)
and
or
push
xchg
mov
and
sub
push
sub
mov
sub
popa
fld
data16
setne
add
je
mov
and
and
out
inc
aas
pop
aaa
mov
je
hlt
adc
adc
fsubr
or
aaa
lea
xor
lock
or
rcl
adc
sub
loopne
in
sub
jb
or
or
adc
das
pavgb
dec
lea
adc
inc
in
imul
xor
sub
cdq
inc
mov
and
xor
test
imul
adc
aam
fsubr
adc
dec
dec
mov
fs
clc
adc
lods
ror
inc
add
and
loope
or
pop
or
push
das
scas
add
aad
jle
adc
jne
or
mov
test
in
nop/reserved
sub
fsub
xor
icebp
xchg
ror
xchg
mov
inc
dec
jge
dec
inc
add
clc
xor
mov
adc
jge
or
mov
mov
(bad)
adc
sti
add
jo
mov
not
addr16
mov
or
arpl
jo
clc
inc
jge
push
cmp
pop
mov
jg
mov
jb
xor
add
or
push
mov
jae
and
cmp
mov
cmp
jno
mov
jl
jb
jecxz
add
push
test
(bad)
and
jecxz
cs
pop
xchg
cs
pop
mov
and
or
adc
push
and
inc
in
cs
sub
inc
and
loop
and
sbb
mov
mov
add
jmp
adc
loopne
ror
cmp
bound
mov
sbb
or
div
movs
pop
sbb
fcomp
dec
push
and
add
push
jmp
lahf
aam
sub
aam
daa
push
test
push
pushf
fsub
clc
mov
xchg
sbb
lea
test
(bad)
retf
pop
dec
lock
or
dec
mov
movs
sbb
push
imul
add
sub
xchg
mov
mov
push
rol
aas
gs
sub
inc
and
jb
and
test
inc
mov
loope
enter
fucomip
cld
popa
jb
mov
pop
shl
add
fwait
sar
in
adc
push
pop
or
mov
or
cmp
jmp
adc
jmp
sub
and
repnz
pop
push
jmp
por
inc
not
jmp
adc
mov
mov
sbb
push
push
daa
jbe
mov
jne
fwait
mov
lds
aaa
inc
inc
xor
rcr
aad
add
xor
mov
jae
pop
xchg
iret
pop
inc
or
sub
push
test
loop
mov
bound
les
call
pop
dec
push
mov
mov
je
dec
clc
mov
mov
clc
sbb
pop
and
scas
in
and
inc
popf
stc
add
mov
aad
retf
push
sar
xchg
pushf
nop
and
mov
or
mov
pop
xchg
and
ja
and
ret
cmp
mov
test
or
ror
sbb
xor
dec
and
pop
xchg
cmps
test
outs
stc
mov
(bad)
in
pop
cli
das
sahf
cli
sub
jb
sbb
je
adc
xor
adc
adc
sbb
fdiv
mov
popa
or
inc
ja
(bad)
sar
and
add
sub
rcl
and
in
cmp
repz
adc
outs
out
add
je
inc
imul
sbb
or
jmp
ins
loopne
push
cmc
xchg
bound
or
lods
pusha
sbb
or
retf
cs
sub
pop
aam
je
je
inc
(bad)
icebp
sbb
mov
mov
xor
or
enter
pop
pop
frstor
add
and
add
sub
je
int
imul
push
xor
adc
xchg
enter
stc
add
adc
jne
dec
cdq
ins
fisubr
pop
rol
(bad)
cmps
loope
pop
sar
xchg
and
repnz
or
cmp
inc
(bad)
fidiv
add
int
jb
mov
fsubr
add
jo
call
int
dec
and
jl
push
jne
(bad)
pinsrw
cmp
add
sbb
sbb
jg
mov
mov
pop
rol
and
mov
(bad)
and
sbb
jne
leave
cmp
pop
fcomp
fmul
push
xchg
dec
out
inc
and
add
jb
or
sub
ror
xchg
pop
aaa
or
out
fisttp
jae
cmps
sub
dec
and
push
or
jmp
jge
add
test
cdq
or
adc
mov
xchg
mov
aad
inc
rol
ret
(bad)
dec
and
xlat
mov
es
int3
xchg
mov
stos
fcomp
push
icebp
rcl
push
stos
enter
fwait
and
fadd
js
pop
and
mov
or
push
and
or
fld
jle
pusha
cwde
loopne
call
sbb
and
rcl
xchg
sbb
and
daa
in
adc
sub
adc
sbb
retf
mov
dec
cmp
add
adc
sbb
stc
mov
js
or
mov
inc
in
aaa
and
mov
in
pusha
jbe
pushf
sbb
push
test
push
jne
adc
in
in
push
or
xchg
les
adc
pop
push
mov
mov
dec
jo
push
xor
test
in
dec
int3
adc
and
sub
lds
sbb
test
cs
(bad)
(bad)
mov
call
jg
adc
test
hlt
daa
sbb
lea
xchg
adc
xor
ins
xchg
int3
xchg
pop
jmp
mov
sub
pop
jb
retf
(bad)
ins
and
bound
and
add
jecxz
push
or
cmp
adc
xchg
jmp
cmps
sbb
add
ins
sbb
sbb
fs
aaa
push
cmp
test
dec
and
rcr
pusha
xchg
sbb
xor
pop
add
mov
push
xchg
pop
mov
js
test
movs
or
and
xchg
dec
stos
adc
pop
or
ja
jo
retf
mov
push
dec
push
sub
aam
mov
mov
loopne
jbe
jae
or
and
pop
aad
loope
mov
js
js
push
sub
mov
sbb
aam
sub
popa
in
inc
push
adc
add
add
fs
pop
fdiv
mov
add
add
dec
jne
xchg
xor
je
xor
(bad)
pop
and
inc
inc
inc
and
cmp
dec
jmp
jmp
push
ficomp
mov
add
lock
inc
and
push
mov
outs
xor
jb
sar
es
aam
xchg
inc
imul
shr
ss
mov
sub
call
cwde
jmp
mov
sub
pop
ins
fdiv
mov
adc
add
fdivr
mov
mov
fcomp
mov
cmp
leave
aam
add
rcl
mov
inc
dec
inc
int3
nop
jbe
imul
ds
les
cs
les
ds
or
sar
and
mov
inc
mov
dec
and
adc
dec
jp
xchg
dec
ds
mov
mov
daa
nop
or
cmp
mov
sbb
sbb
push
jmp
adc
loopne
adc
dec
jg
inc
pop
pop
inc
inc
push
stos
add
js
(bad)
push
xchg
pop
inc
push
inc
dec
ins
or
cwde
lock
inc
pop
fbld
mov
inc
inc
mov
push
addr16
cmp
(bad)
data16
pop
fcomp
dec
jbe
push
mov
adc
fiadd
pop
jp
mov
xlat
add
pusha
jecxz
xchg
jmp
dec
pushf
cmc
mov
or
dec
cmp
add
push
cmp
push
jp
add
adc
and
dec
enter
and
dec
dec
add
pop
jp
xor
iret
mov
lds
mov
push
mov
xor
in
sub
jl
or
add
loopne
retf
nop
retf
mov
push
mov
dec
int3
cmc
inc
je
loopne
push
or
inc
ds
xor
mov
or
jbe
es
or
in
movs
call
push
pop
mov
sbb
or
mov
pop
push
xchg
in
jo
or
push
daa
or
fnstenv
push
push
or
push
xor
push
daa
test
loope
adc
in
push
and
cs
sub
push
daa
inc
pop
lds
pop
(bad)
sub
sub
fstp
push
adc
add
fcom
jno
jnp
dec
es
sbb
add
add
ja
pop
adc
jmp
arpl
sbb
adc
add
jmp
test
xchg
inc
(bad)
pop
fstp
push
add
xchg
xor
jmp
lock
(bad)
(bad)
adc
xchg
adc
iret
sub
or
addr16
adc
iret
outs
and
jb
lds
jno
add
sbb
cmc
dec
xor
cli
cwde
and
or
aam
sti
leave
dec
outs
pushf
scas
and
lea
inc
outs
xchg
popa
por
or
add
iret
gs
and
dec
push
in
sbb
in
push
aad
and
nop
push
fcom
inc
mov
nop
or
push
sub
add
mov
cmp
lods
inc
inc
or
push
addr16
aam
or
sbb
mov
(bad)
push
sub
fild
ret
jg
popa
js
inc
pusha
and
scas
cmp
push
push
jae
or
mov
adc
inc
jmp
dec
or
mov
pop
and
inc
add
movs
mov
je
imul
or
inc
fild
fist
push
inc
ret
in
dec
frstor
arpl
xor
xor
push
mov
imul
cmp
je
adc
inc
out
(bad)
or
add
jo
dec
jns
out
das
push
lea
ins
adc
mov
push
pop
jmp
or
pop
rdtsc
xchg
adc
mov
bound
mov
adc
sub
shl
jecxz
sbb
sbb
sbb
cmp
or
pop
pushf
jnp
xchg
ror
aas
mov
pop
jmp
aaa
test
inc
sbb
jo
inc
xor
pop
adc
or
adc
pop
dec
shr
sbb
pop
ret
inc
mov
add
xchg
fbstp
out
mov
pusha
jb
xchg
lock
sbb
mov
arpl
das
xchg
push
mov
mov
sbb
dec
mov
or
dec
push
into
sbb
xchg
cmp
dec
lock
pop
sub
or
add
shl
stos
cmp
sbb
sbb
add
fild
xor
outs
adc
jb
ds
cmps
nop
sub
mov
scas
jmp
xchg
add
cmp
imul
jg
push
les
push
in
nop
or
loopne
pop
je
adc
ret
unpckhps
fbstp
adc
js
pop
sbb
test
and
jl
add
jbe
cmp
xchg
mov
add
or
xor
adc
push
lods
add
push
push
xor
(bad)
int3
pop
adc
mov
pusha
dec
add
imul
push
or
mov
adc
in
push
mov
(bad)
das
sbb
add
add
mov
jg
push
jmp
add
sub
add
adc
push
shr
pushf
iret
call
adc
fild
mov
sub
inc
or
cmc
retf
outs
pop
add
or
bndstx
xchg
xor
dec
movzx
add
ds
hlt
jb
fs
dec
add
push
cmp
and
mov
rcl
and
(bad)
sbb
nop
add
or
adc
pop
jb
mov
mov
dec
add
inc
cmp
daa
aaa
adc
dec
movs
sbb
pop
jge
pusha
xor
inc
xchg
xchg
call
fwait
sbb
int3
and
test
xchg
(bad)
sbb
lock
mov
mov
add
fiadd
pop
mov
mov
enter
aaa
or
cmp
adc
(bad)
xlat
jno
pop
inc
(bad)
jecxz
adc
add
out
je
(bad)
fwait
adc
xor
imul
and
arpl
outs
adc
inc
test
dec
lds
lahf
mov
mov
test
xor
mov
aad
sbb
adc
sub
cwde
add
daa
and
cmp
(bad)
xchg
jmp
aad
movq
cmp
cmp
fcomp
fidivr
cmp
cmp
(bad)
fidivr
cmp
cmp
rol
cmp
cmp
ret
(bad)
(bad)
cmp
cmp
enter
cmp
cmp
int3
int
cmp
cmp
iret
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jne
cmp
cmp
ja
jns
cmp
cmp
jnp
jge
cmp
cmp
jg
popa
bound
cmp
cmp
cmp
cmp
addr16
cmp
imul
cmp
cmp
push
push
cmp
cmp
push
push
push
push
cmp
cmp
push
pop
pop
pop
cmp
cmp
pop
pop
pop
pop
cmp
cmp
pop
inc
inc
inc
cmp
cmp
inc
inc
inc
inc
cmp
cmp
inc
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
cmp
dec
xor
xor
cmp
cmp
xor
cmp
cmp
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
and
and
cmp
cmp
and
cmp
cmp
daa
sub
sub
cmp
cmp
sub
cmp
cmp
das
adc
adc
cmp
cmp
adc
push
cmp
cmp
pop
sbb
sbb
cmp
cmp
sbb
push
cmp
cmp
pop
add
add
cmp
cmp
add
push
cmp
cmp
pop
or
or
cmp
cmp
or
push
pushf
mov
(bad)
sti
icebp
repnz
pushf
pushf
pushf
repz
cmc
neg
stc
cli
pushf
pushf
pushf
pushf
sti
cld
std
(bad)
pushf
pushf
pushf
pushf
jmp
loope
pushf
pushf
pushf
pushf
jecxz
in
pushf
pushf
pushf
pushf
out
jmp
jecxz
add
sub
dec
push
mov
xchg
push
dec
push
je
add
jl
or
sbb
push
adc
adc
sbb
pop
or
jo
fcmovb
add
(bad)
nop
jo
bound
sub
mov
nop
jo
ret
or
xor
or
push
or
pop
ins
pop
fistp
arpl
jno
mov
adc
jnp
dec
out
pop
test
sub
sbb
add
mov
nop
mov
add
in
and
push
cld
pop
inc
nop
xor
dec
ret
leave
add
mov
push
adc
cmp
cmps
popa
cs
xor
xor
les
aam
or
xchg
sub
or
test
add
sub
jge
fsubr
cs
cmp
inc
adc
test
rol
pop
aas
jo
fwait
pop
or
pop
daa
mov
nop
sub
bound
ds
xchg
xchg
inc
mov
div
and
pushf
inc
ds
or
pop
inc
fmul
out
jmp
cs
dec
sbb
test
inc
mov
sbb
(bad)
lock
lahf
push
add
les
movs
movs
pop
xchg
adc
push
cdq
cmp
add
call
frstor
mov
dec
dec
gs
mov
and
sbb
pop
cwde
adc
jb
sub
jae
mov
retf
and
popf
xchg
pop
dec
jb
lods
push
add
aaa
fist
inc
jecxz
pop
add
(bad)
xchg
dec
add
jne
data16
cmps
(bad)
frstor
imul
adc
or
sub
mov
cmp
shl
xchg
inc
inc
retf
xor
and
test
add
push
inc
or
xor
in
loop
mov
jo
call
push
sbb
or
or
or
cmp
js
cmp
dec
dec
xchg
sahf
inc
std
es
fs
setl
lods
test
jo
pop
sbb
adc
and
sbb
push
ret
je
iret
(bad)
jmp
mov
pop
add
pop
xor
je
mov
pop
dec
inc
das
jecxz
sub
es
or
mov
add
daa
sub
iret
mov
mov
ins
in
jp
popa
inc
dec
retf
jge
sub
lods
mov
outs
cmp
cmc
adc
jp
ss
mov
or
imul
add
inc
clc
xor
loopne
(bad)
inc
fiadd
cmp
dec
cmps
mov
adc
daa
adc
dec
movs
call
sub
fs
stc
int
mov
inc
fsub
aaa
and
dec
xor
and
add
and
sub
dec
scas
leave
call
jg
push
pop
mov
(bad)
imul
imul
fmul
lods
(bad)
or
lea
push
mov
or
inc
test
(bad)
xchg
push
add
aas
ins
pusha
nop
xor
mov
call
fadd
xor
xor
mov
and
xor
jg
add
dec
and
fldenv
cmp
stos
loope
ret
jae
jmp
jge
ja
sar
mov
push
retf
arpl
cmp
loop
shr
fild
rcr
or
push
xor
adc
sbb
or
mov
dec
and
ins
test
pusha
mov
add
jb
push
jl
adc
fisubr
adc
or
test
inc
mov
xor
adc
cmc
push
and
push
sub
iret
repz
ss
out
push
xchg
jo
fcomp
pop
ret
(bad)
xchg
fldenv
fwait
xlat
xchg
fstp
movs
cld
out
or
inc
in
adc
xor
pusha
fisubr
mov
adc
div
pusha
jmp
jl
rcl
adc
in
fimul
outs
scas
adc
mov
ret
fwait
(bad)
push
sub
fs
jecxz
add
jge
call
sub
dec
mov
dec
adc
add
dec
into
rcl
mov
jnp
mov
je
xor
or
in
mov
scas
mov
test
add
add
and
xchg
dec
add
pop
mul
jmp
add
add
or
add
mov
adc
sbb
bound
inc
imul
outs
iret
jmp
pop
clc
jb
fiadd
stos
mov
sahf
idiv
ret
sar
sysret
adc
mov
das
psubsb
daa
pop
pop
pop
paddsb
ins
jge
xchg
(bad)
mov
dec
jo
dec
ret
jne
mov
add
leave
dec
xor
mov
fiadd
(bad)
cld
push
add
push
ja
xor
loop
jb
cmp
jmp
mov
xor
adc
jbe
dec
adc
adc
adc
cmp
sbb
aad
repz
es
mov
imul
loope
add
pop
jp
dec
dec
xor
xor
adc
add
lock
dec
ret
out
sub
sub
mov
xor
pop
xlat
xor
and
sbb
popa
sbb
push
push
dec
add
mov
ins
fdiv
mov
adc
push
ins
in
test
(bad)
out
sbb
push
pusha
div
adc
adc
sbb
sbb
inc
in
pop
test
or
add
add
xchg
xchg
mov
js
mov
add
xchg
sub
ins
dec
scas
repnz
xor
push
pop
in
cmp
call
push
movs
xchg
int3
adc
adc
(bad)
pop
push
dec
movs
inc
sub
mov
xor
mov
jmp
xchg
jge
adc
and
gs
ret
lods
xor
mov
mov
mov
shr
mov
adc
mov
push
sub
inc
sbb
fisubr
cmp
add
rol
mov
call
xor
add
xor
adc
cmp
nop
ss
ret
push
xor
imul
dec
adc
xor
fcomip
mov
add
and
into
std
leave
clc
mov
cmp
(bad)
or
inc
clc
pop
cmp
sub
sub
sub
addr16
push
and
rol
scas
push
mov
adc
test
out
inc
xchg
fadd
jne
push
rol
jmp
outs
dec
fprem
adc
arpl
inc
sbb
mov
add
mov
fs
xor
into
ret
and
stc
ds
sar
hlt
push
jo
lods
push
mov
sbb
add
inc
sbb
mov
cmc
rcr
bound
jecxz
mov
les
xor
jmp
sub
push
or
push
je
push
jo
push
push
in
pop
sub
push
cmp
pop
xor
jge
sub
stos
sbb
and
and
fild
inc
jmp
pop
and
iret
rcr
inc
add
cmp
inc
adc
sbb
xchg
test
cmp
ret
sub
or
or
sub
push
cmp
int
push
enter
mov
ins
xchg
pop
inc
or
(bad)
adc
adc
dec
es
inc
mov
sahf
push
add
inc
dec
or
(bad)
adc
xor
mov
xchg
inc
(bad)
test
call
lock
mov
pop
aad
add
adc
xor
and
jp
mov
ds
pop
(bad)
dec
cwde
push
jae
in
rol
das
gs
push
cmp
call
es
fcom
sbb
add
and
jge
push
adc
dec
jmp
jnp
push
movs
inc
hlt
xor
cmp
adc
rcr
sub
dec
stc
mul
add
and
and
add
jae
xor
add
(bad)
retf
sub
lock
mov
mov
inc
clc
imul
aas
sub
inc
or
test
or
pushf
jne
mov
js
add
or
jge
adc
and
mov
and
xchg
mov
sbb
dec
or
add
aaa
jne
mov
in
(bad)
rcr
ins
or
adc
inc
or
dec
sbb
loope
cmp
pop
int3
(bad)
daa
jae
or
lock
sbb
js
ss
adc
sub
push
pop
mov
int3
pop
or
push
rcl
jmp
mov
dec
mov
pop
jmp
push
ds
push
stc
test
cmp
adc
adc
cmp
cdq
or
(bad)
cmp
dec
xor
ja
pop
push
or
push
iret
or
adc
fild
fist
pop
js
enter
jecxz
test
sub
retf
mov
jno
dec
js
loopne
cdq
adc
inc
jle
dec
or
jns
dec
shl
mov
sbb
(bad)
dec
fwait
sub
or
imul
mov
mov
dec
dec
call
shr
mov
dec
test
add
mov
or
cmp
jno
leave
xor
xchg
add
adc
cmp
inc
(bad)
cmps
mov
(bad)
cld
dec
mov
add
lods
mov
pusha
ret
dec
mov
popf
ins
sbb
adc
adc
jmp
inc
sbb
inc
cld
out
push
xor
jmp
pop
rcr
jb
into
push
movs
iret
fs
jns
mov
dec
pop
int
and
jne
mov
pop
and
mov
mov
mov
xchg
test
aam
ins
and
imul
fcom
fwait
push
inc
pop
stos
pop
mov
icebp
adc
or
or
out
dec
nop
pop
int3
nop
inc
imul
fisttp
add
shl
lods
in
adc
add
je
nop
dec
dec
dec
cdq
mov
and
retf
xchg
mov
sbb
je
pop
cs
data16
mov
inc
and
add
lahf
xchg
cmp
add
or
xchg
mov
dec
fwait
xor
push
xchg
popa
fld
push
add
ret
dec
test
inc
jl
add
outs
xchg
jl
movs
repz
nop
pushf
ins
push
adc
nop
add
or
cmp
inc
fild
cmp
fcmovnb
inc
nop
(bad)
and
lahf
sub
adc
or
xor
lahf
dec
rcl
je
push
cmps
mov
mov
jp
mov
pop
inc
push
mov
test
xor
cs
sbb
cmp
mov
outs
inc
(bad)
mov
add
punpckhbw
inc
or
pop
and
inc
ins
js
xor
pop
dec
pop
sar
ret
pop
xor
inc
add
arpl
pop
ss
inc
adc
pop
shl
add
xor
cmp
clc
jae
jno
in
call
push
dec
ja
inc
add
mov
cmp
add
dec
or
sar
pop
sbb
and
add
dec
bound
push
jo
cmp
mov
inc
and
fsub
inc
not
mov
loopne
out
lods
ins
or
iret
push
ja
dec
mov
dec
ds
pusha
add
out
ror
in
sub
mov
and
jb
or
adc
sbb
inc
ja
ins
lea
add
js
or
js
outs
mov
je
mov
inc
and
xor
push
movntps
pop
pop
test
cs
fcomp
enter
mov
mov
pop
in
cdq
adc
loopne
xor
ret
pusha
lods
sbb
pop
and
sbb
mov
push
add
mov
and
dec
in
add
ror
pusha
nop
fwait
cmp
inc
xchg
test
mov
inc
sub
add
xchg
call
shl
ds
shl
sbb
pop
mov
cdq
ins
and
sub
mov
dec
ror
sbb
add
add
dec
les
and
and
add
sbb
ret
sub
mov
xchg
jae
adc
mov
and
mov
lods
mov
add
push
or
aaa
jae
loope
sub
stos
or
xchg
(bad)
push
xor
add
pop
movs
mov
call
jmp
add
test
mov
sub
sbb
xor
imul
and
push
mov
sbb
dec
cmp
push
cmps
or
add
pop
pop
in
sub
sbb
and
or
or
inc
xor
ss
movs
inc
push
movs
sbb
push
sbb
xlat
xor
rcl
ror
adc
cmp
sub
ja
fwait
xor
jg
cli
push
adc
sti
sbb
imul
xor
sub
rol
push
popf
sub
loop
sbb
and
cmps
fldcw
jmp
or
dec
(bad)
sub
rol
in
(bad)
shl
and
or
scas
add
jg
pop
jmp
int
bound
add
call
pop
adc
pop
clc
sbb
mov
push
add
or
adc
pop
bound
jmp
lods
in
pop
pop
xor
xchg
pop
xchg
mov
sbb
pop
cmp
push
and
loopne
jb
add
cmp
add
cmp
ds
adc
aas
movs
mov
push
ds
mov
shr
rol
aas
xchg
and
cmp
call
adc
xor
push
sub
fidiv
and
mov
or
popf
jmp
adc
mov
dec
mov
ins
add
add
imul
call
mov
xor
(bad)
sub
push
sbb
cdq
xor
ss
xor
outs
imul
fs
push
aaa
sbb
leave
fbstp
test
inc
xor
shl
movs
and
or
xchg
mov
sub
sbb
loop
or
mov
ja
adc
inc
adc
adc
jo
jmp
jo
push
ins
pop
pop
jns
ds
xor
adc
or
mov
js
fidiv
push
inc
outs
pop
jp
sbb
push
(bad)
add
xchg
lahf
push
call
add
mov
xor
adc
or
mov
js
mov
mov
lock
mov
mul
cld
push
adc
and
push
dec
adc
scas
cmp
cmp
into
inc
adc
lods
xor
int
test
and
and
dec
xchg
dec
lods
push
scas
outs
sub
inc
inc
inc
retf
enter
in
jmp
movs
jl
enter
jae
mov
test
add
add
and
mov
mov
inc
sbb
pop
or
push
push
gs
or
and
sbb
add
mov
cmp
in
sbb
sbb
add
xchg
mov
jno
mov
inc
je
or
or
jb
ja
daa
mov
jecxz
jae
xor
mov
(bad)
jmp
inc
adc
ins
pop
sbb
mov
ss
adc
dec
lods
push
cmp
add
fcmovne
je
push
adc
and
mov
fld
lock
push
jmp
inc
add
in
jl
imul
fistp
daa
fmul
add
add
jo
add
inc
jne
test
mov
push
or
jmp
mov
lods
out
bound
push
dec
mov
(bad)
icebp
imul
movs
mov
shl
lods
push
imul
imul
inc
xchg
push
xchg
cli
xor
fld
mov
pop
les
stos
jmp
xor
or
add
jae
arpl
xor
mov
scas
inc
loopne
sub
or
and
sbb
sub
mov
jno
inc
mov
cmp
and
xor
or
cdq
call
gs
das
fwait
cwde
inc
add
call
inc
in
ins
out
out
enter
and
sti
hlt
das
inc
js
cmp
ins
push
pop
cmp
sbb
dec
add
shl
scas
in
jg
sbb
xor
cmp
std
ss
call
push
push
fidiv
or
imul
adc
not
popa
add
int
rcl
mov
pop
in
in
sbb
dec
in
xchg
jmp
adc
xor
pop
lock
jo
pop
push
jle
xchg
arpl
ins
pushf
popa
cmp
cmps
sub
push
(bad)
pusha
inc
rcl
inc
add
mov
pop
or
and
inc
push
dec
xchg
shl
mov
add
sbb
push
xor
or
pop
rep
pushf
pop
daa
cmp
mov
daa
and
ss
daa
(bad)
movs
dec
(bad)
fidivr
and
inc
shl
sbb
push
cmp
(bad)
mov
pop
(bad)
jns
cmp
test
(bad)
pop
or
push
daa
inc
fwait
dec
jae
int3
inc
sub
out
scas
jb
inc
pop
add
mov
dec
dec
sub
cmp
jne
stos
movs
mov
pusha
mov
outs
jo
sbb
jnp
hlt
shr
lock
push
outs
loopne
ror
dec
xor
and
pop
scas
lea
test
or
(bad)
inc
xchg
icebp
inc
icebp
nop
push
mov
push
mov
(bad)
push
movs
pusha
iret
fisubr
or
inc
aad
push
push
cwde
bound
test
inc
mov
les
lds
sub
sub
bound
mov
fwait
mov
sub
pop
push
pop
mov
add
push
xlat
sub
(bad)
inc
xor
adc
mov
add
imul
ins
pusha
pop
inc
add
inc
jmp
ins
bound
xchg
ret
jle
pop
mov
inc
inc
nop
fwait
xor
xchg
and
push
das
sub
adc
enter
inc
add
add
js
aaa
add
(bad)
mov
adc
and
xor
sar
dec
pop
xor
sub
add
faddp
xor
mov
pop
je
mov
sbb
mov
add
pop
out
and
and
inc
and
fbstp
pop
xchg
shr
sbb
(bad)
aaa
(bad)
test
(bad)
adc
je
dec
rcr
mov
cdq
les
lock
adc
adc
or
test
rcr
and
xchg
cs
inc
pop
add
fcmovnb
clc
mov
push
call
xor
xchg
adc
adc
or
and
mov
mov
dec
add
adc
lea
jb
xor
mov
adc
pusha
push
(bad)
xor
rol
enter
int3
pop
mov
xchg
jp
jnp
xor
outs
push
cmp
rol
lea
pusha
add
loopne
mov
xchg
mov
mov
pop
inc
or
cmp
pop
cmp
les
ret
dec
ds
cmp
test
daa
loopne
pop
das
or
push
add
inc
and
mov
shl
or
push
fs
push
inc
es
or
push
push
pushf
xchg
push
sbb
mov
mov
jg
jne
xchg
sbb
ret
adc
mov
pop
and
mov
xor
clc
push
adc
test
cmc
add
xchg
lods
jbe
pop
out
leave
test
add
dec
outs
add
push
es
sbb
adc
adc
inc
stc
jne
test
sub
std
jge
mov
sub
jmp
mov
(bad)
imul
dec
jae
jne
sbb
pushf
(bad)
enter
dec
cs
les
in
mov
pop
sbb
add
sbb
and
push
pop
cmp
sub
push
push
sub
mov
mov
lods
movs
sbb
mov
dec
ss
ins
test
ss
mov
cmp
loopne
retf
popa
in
popa
popa
jo
mov
push
xor
jb
pusha
pop
scas
imul
xchg
test
retf
mov
xchg
inc
push
or
jg
pop
ror
push
(bad)
xchg
lods
mov
jge
mov
fbstp
mov
retf
xchg
add
rcr
push
fmul
call
inc
adc
adc
leave
push
fnstcw
or
add
xchg
icebp
cmp
cmps
mov
test
adc
mov
xor
and
sub
dec
xchg
mov
fwait
leave
test
jge
jnp
shl
adc
outs
cwde
or
jge
stc
jne
ret
daa
adc
and
and
mov
cmp
and
pusha
push
addr16
mov
inc
imul
scas
add
add
xchg
push
mov
sbb
dec
xor
adc
stos
and
out
xchg
add
inc
add
or
mov
cmp
jle
icebp
jg
add
or
loopne
and
mov
out
jmp
cmp
jae
mov
mov
jae
retf
inc
dec
jne
xchg
sbb
cmp
sbb
dec
rol
out
in
or
and
rcl
popf
es
cmps
add
add
mov
fcomp
mov
je
sbb
add
push
mov
enter
stc
inc
mov
jl
dec
das
hlt
sub
push
nop
push
cld
mov
push
imul
mov
fild
sbb
or
imul
or
or
xchg
xchg
movs
inc
or
jnp
popf
xor
push
ss
sub
add
dec
daa
push
adc
xchg
xchg
loopne
out
ins
test
adc
clc
xor
cmp
and
jle
sub
fadd
jecxz
lock
jo
(bad)
mov
dec
pusha
push
clc
int
call
dec
loope
adc
mov
cmp
rcl
jo
pop
lods
or
or
(bad)
jmp
pop
cmp
jno
adc
sub
sub
(bad)
mov
and
shr
gs
dec
xchg
and
ins
addr16
fistp
fild
loopne
sub
lea
dec
push
in
outs
rol
inc
sbb
movs
ja
pusha
pop
add
test
mov
das
ss
das
mov
cmps
test
push
mov
mov
inc
ror
dec
rcl
xchg
mov
and
or
enter
sub
ror
mov
call
push
sub
rol
push
and
push
test
and
jle
cdq
xor
pop
mov
jae
jge
push
jl
nop
out
inc
int
adc
mov
popf
add
iret
(bad)
adc
sub
xor
dec
(bad)
xchg
cld
js
test
and
and
adc
pop
sbb
add
ror
push
add
inc
add
add
popf
xchg
test
out
pop
aaa
fnstenv
dec
data16
jno
adc
cdq
in
push
retf
(bad)
dec
adc
inc
push
add
add
xor
mov
int3
and
out
js
xchg
retf
in
or
mov
nop
xchg
push
sbb
bound
mov
popf
in
xchg
sub
movs
rol
push
cmp
mov
lea
test
dec
shr
push
sub
push
mov
int3
xor
jmp
sti
push
mov
rcr
les
aas
push
push
pop
push
jg
(bad)
das
xchg
in
mov
and
jp
sub
std
jnp
adc
add
stos
cmp
add
adc
mov
push
push
dec
mov
pop
mov
ror
cmp
ins
push
loopne
sbb
ins
repz
mov
loopne
dec
cld
jg
js
xchg
ret
sub
mov
jne
inc
pop
sbb
mov
xor
mov
pop
rol
cmps
and
fsubr
push
sbb
xor
and
pop
fsubr
jne
pop
cmp
mov
or
push
xchg
mov
or
jge
mov
inc
outs
sbb
imul
mov
jno
out
sub
add
jle
stos
sub
inc
pusha
jle
(bad)
cmc
xor
imul
lods
push
mov
movs
(bad)
dec
push
movs
mov
ds
test
push
adc
xor
and
fsubr
clc
mov
or
and
and
sub
sbb
xor
sub
dec
js
js
mov
add
adc
mov
or
ins
dec
add
imul
jmp
das
cmp
rcr
dec
mov
pop
pop
sbb
dec
and
add
inc
add
out
inc
push
push
or
pop
dec
and
nop
fwait
jbe
js
or
cmp
clc
push
push
nop
adc
cmps
cmc
fnstenv
jmp
inc
xchg
pop
cdq
test
xor
outs
ret
cli
or
push
adc
shr
popa
mov
sub
adc
sbb
mov
jne
mov
fucomi
sbb
adc
rol
mov
add
cmps
dec
xor
ret
inc
mov
or
mov
adc
adc
jecxz
(bad)
xor
push
add
mov
popf
adc
iret
mov
xchg
xor
test
push
xchg
add
cmp
pop
bound
add
(bad)
cmp
rol
test
and
sbb
adc
test
jle
or
mov
sbb
je
cmp
push
mov
rol
call
adc
(bad)
inc
bnd
(bad)
lock
or
cmc
gs
aam
lds
cmp
pop
push
dec
(bad)
add
out
adc
or
and
test
add
cli
add
sbb
test
movs
sbb
cmc
dec
jne
xchg
int
(bad)
fdiv
hlt
push
je
adc
imul
movs
(bad)
ret
test
call
mov
lods
dec
dec
pop
add
in
fcom
jle
repz
mov
xchg
stos
adc
data16
lea
push
inc
cmp
outs
cmc
ror
int3
ja
(bad)
inc
xlat
aas
nop
jg
mov
push
test
mov
out
push
add
xor
add
cwde
mov
sbb
fcmovu
pop
add
leave
xchg
gs
mov
mov
add
jecxz
and
inc
or
nop
das
sub
mov
mov
mov
sbb
jecxz
push
sub
xor
out
in
loope
pop
repz
dec
movzx
jmp
aas
es
xor
pop
sub
rcr
push
arpl
adc
adc
inc
dec
jne
xor
xor
and
inc
adc
and
mov
pop
sub
jl
inc
push
cs
scas
inc
sbb
or
push
fwait
(bad)
sub
jg
jmp
es
mov
mov
rcr
mov
xor
cmp
into
push
inc
cmp
je
and
add
jne
rol
mov
sbb
outs
mov
sub
mov
dec
ror
sub
std
xor
je
add
inc
jb
add
jno
enter
inc
mov
cmp
push
outs
xchg
fs
je
dec
push
call
ja
test
xchg
push
cmp
jno
and
push
fwait
xor
push
mov
sub
les
add
fwait
mov
add
ja
stos
add
sub
aas
popa
xor
mov
add
(bad)
imul
sub
daa
mov
xchg
adc
mov
fdiv
sbb
push
repz
fimul
cmp
ja
cmp
jae
sbb
arpl
movs
sbb
add
push
dec
push
ror
pop
test
jmp
adc
sbb
adc
or
mov
imul
or
or
jb
xchg
mov
pusha
rcr
xchg
or
mov
pushf
or
cmp
adc
xchg
push
xchg
loope
je
adc
lea
sbb
push
push
dec
addr16
xor
(bad)
adc
call
imul
inc
sbb
int
adc
add
sti
clc
icebp
ror
fbld
js
adc
sbb
and
fisttp
mov
pop
or
cmp
mov
mov
leave
sub
lea
daa
push
call
inc
rcl
or
push
(bad)
fld
std
retf
jb
clc
adc
add
mov
sub
loopne
jge
jmp
push
pushf
movs
pusha
jae
jl
mov
xchg
jmp
aaa
inc
cmp
ret
xor
fadd
cs
and
js
mov
xchg
data16
adc
push
xor
data16
jmp
sub
adc
jns
or
sub
dec
daa
cmp
mov
fistp
adc
push
mov
sbb
stos
add
or
jb
repz
(bad)
nop
mov
movs
xchg
xchg
sub
loope
mov
mov
add
stos
mov
push
stc
addr16
xor
or
cs
lock
nop
cmp
mov
call
dec
cdq
movs
fistp
mov
sub
movs
push
add
add
mov
jecxz
sbb
cmp
and
or
add
add
in
lock
push
test
jns
enter
mov
mov
inc
inc
adc
enter
sahf
call
fisttp
pop
sbb
sahf
mov
add
fucomip
shl
and
dec
inc
nop
add
pop
cmc
add
in
push
push
dec
and
mov
and
adc
enter
(bad)
sub
in
inc
push
jg
ret
in
ficomp
add
aas
push
shr
pop
aad
inc
lods
mov
jg
jmp
adc
fidivr
mov
xchg
push
pop
repz
mov
or
iret
std
fisttp
xchg
call
xchg
cli
add
ds
push
fisub
mov
adc
jnp
mov
dec
or
xchg
adc
and
add
in
shl
add
add
adc
sub
repz
cdq
mov
sbb
jle
arpl
js
js
(bad)
or
sbb
sar
and
xor
mov
sub
xor
lock
movs
adc
cmp
add
mov
xchg
dec
jnp
jnp
jge
mov
push
mov
(bad)
fcmovb
cdq
lea
or
popa
sti
add
aaa
in
adc
push
mov
jne
jae
add
sbb
jnp
mov
inc
fisubr
push
adc
inc
mov
scas
jge
xchg
pop
jne
cmp
aam
rcl
iret
sbb
xchg
scas
inc
ins
mov
in
ins
fstp
sbb
ficom
jge
add
xor
jmp
add
pop
adc
mov
movs
popa
inc
cs
fs
fwait
imul
jae
sub
push
dec
pop
mov
cmp
pop
or
jmp
mov
ret
pusha
mov
lods
(bad)
dec
sbb
add
sub
(bad)
adc
adc
adc
jmp
sbb
(bad)
mov
movs
loopne
and
sbb
leave
adc
out
and
dec
cs
inc
lods
mov
jp
adc
nop
add
inc
sbb
adc
movs
inc
xor
push
sub
nop
pop
leave
push
dec
cwde
test
xor
or
push
leave
push
inc
cdq
adc
xchg
inc
cdq
inc
setb
mov
adc
or
sub
adc
fild
cdq
pushf
push
stos
not
adc
pusha
cli
aad
dec
call
dec
lock
adc
and
and
stos
push
enter
jae
or
pushf
and
lods
mov
mov
push
popa
scas
cmp
push
movs
and
and
mov
stos
les
jp
mov
rcr
mov
sbb
retf
cld
dec
sar
add
std
add
xchg
cmps
int
jmp
push
cmp
lock
movs
dec
sbb
mov
aam
jnp
mov
jmp
in
mov
in
daa
mov
test
and
lods
neg
stc
adc
dec
loop
ret
mov
jl
scas
sbb
imul
inc
or
adc
pop
push
retf
inc
inc
inc
dec
dec
cmp
mov
shl
cmps
out
and
cmp
repz
sbb
cmp
cmp
into
add
lods
lods
or
(bad)
xor
outs
mov
ins
adc
rcl
inc
cmp
nop
inc
cmp
xor
cmp
pop
jmp
adc
stos
xchg
xchg
inc
and
dec
repnz
sbb
push
sub
lods
lods
dec
mov
test
cmp
or
dec
jae
jecxz
mov
loop
sub
pop
push
pop
mov
mov
stos
push
adc
jo
or
dec
cld
cmp
jno
in
adc
stc
cmp
cs
hlt
lock
adc
add
jge
mov
jmp
cmps
pop
xor
lea
mov
mov
add
add
jo
outs
pop
mov
mov
sub
daa
xor
xchg
ins
mov
daa
push
fnsave
sahf
mov
scas
push
mov
mov
test
mov
cli
push
enter
pop
mov
sar
nop
aaa
sbb
and
rol
mov
xchg
fisub
out
add
mov
sbb
push
cmp
cwde
int
fldcw
movs
retf
push
fs
fmul
or
ss
data16
loopne
rcr
rcl
iret
neg
repz
outs
cmc
push
(bad)
(bad)
fcomp
dec
fstp
fstp
fnstsw
fcomp
fnstsw
push
sub
cs
mov
data16
in
push
loopne
pushf
xchg
add
clc
add
xor
mov
push
xor
cmps
stc
fmul
cmp
cmp
sbb
cmp
sbb
sbb
inc
lods
ds
mov
div
push
mov
push
aam
pop
int
mov
mov
push
pushf
or
or
sbb
pusha
sti
out
repz
ror
or
or
push
mov
cmp
dec
sbb
mov
mov
push
in
adc
push
xchg
mov
cmps
stc
cmp
and
inc
mov
push
sbb
sbb
push
rol
pop
aas
sub
cmp
pop
es
fisttp
mov
inc
inc
add
cmp
pop
sub
mov
xchg
das
add
or
fwait
xor
and
push
add
cmp
imul
push
add
push
ror
mov
sbb
and
rcr
fdiv
nop
mov
or
lock
in
dec
std
cmps
pop
sbb
push
bswap
inc
and
popa
ror
(bad)
nop
mov
add
loope
or
add
cwde
add
ins
dec
pop
xlat
sbb
js
mov
cwde
mov
sub
mov
push
xor
cmp
test
(bad)
mov
inc
test
xchg
xor
mov
mov
xor
iret
jo
ss
ja
xchg
or
stos
lods
je
pop
ds
mov
jne
xchg
popf
ja
sar
adc
imul
or
or
sub
cmps
(bad)
js
adc
call
lahf
xor
mov
cld
cdq
movs
xchg
xlat
inc
gs
cmp
inc
mov
pushf
xor
adc
mov
adc
inc
push
mul
fwait
aaa
mov
retf
arpl
mov
(bad)
in
push
addr16
movs
gs
sub
mov
mov
jb
lods
inc
aam
iret
jb
pop
and
inc
adc
and
sub
rol
jp
mov
xchg
nop
pusha
mov
ret
add
add
pop
imul
cmc
push
push
inc
sub
cmps
pop
sub
call
not
jmp
(bad)
dec
in
xchg
jno
icebp
mov
sub
or
pop
call
arpl
lock
xlat
aam
jecxz
and
pop
sahf
lea
xor
mov
push
dec
pop
xor
sub
pusha
fild
mov
arpl
and
mov
mov
and
xchg
test
pop
or
mov
addr16
jle
xor
push
adc
add
mov
pop
das
xchg
or
sbb
add
add
xchg
dec
pop
jnp
xor
inc
jnp
and
nop
fs
imul
es
cmps
xor
les
sar
in
cmp
cli
cdq
sub
pop
ds
ins
or
rol
xor
test
test
pop
or
pop
xchg
add
nop
(bad)
dec
(bad)
and
mov
sub
push
clc
aas
dec
test
nop
mov
mov
cmp
cmc
add
inc
popa
xor
and
ins
xor
sbb
pop
fsubr
in
mov
and
out
cld
sbb
sub
scas
fadd
push
loopne
or
scas
out
outs
pop
sub
add
data16
add
inc
push
push
sub
imul
std
mov
add
xor
or
or
loopne
js
sub
add
and
push
pop
adc
jne
push
xlat
hlt
adc
adc
mov
pop
inc
shr
mov
mov
std
mov
jmp
int
mov
outs
mov
and
ins
imul
add
data16
pop
rol
or
or
(bad)
dec
sar
sbb
out
hlt
cmp
add
add
pop
dec
ret
xchg
cmp
add
es
mov
rcl
loopne
inc
cmp
jnp
adc
cmp
loop
jmp
pop
cld
xchg
push
loop
les
pop
push
rcr
test
lahf
clc
rol
sbb
xlat
cmp
xor
ret
ret
xchg
or
loop
loope
ret
xchg
lea
add
fcmovnb
xlat
lods
hlt
shr
push
ins
mov
sbb
xlat
rcl
pop
mov
pop
test
nop
push
add
xchg
add
sub
sbb
xchg
sahf
inc
jb
sub
add
aas
inc
lods
mov
loopne
mov
mov
addr16
inc
repnz
pusha
(bad)
add
or
adc
push
pusha
ret
mov
xchg
rol
out
mov
adc
mov
inc
rcl
fsubr
lock
les
jne
out
cmps
push
xchg
cs
jns
pop
in
bound
push
inc
xor
mov
imul
leave
popf
in
and
add
xchg
add
push
xchg
dec
add
sbb
add
lock
mov
and
mov
retf
test
or
xchg
ror
jmp
or
add
xchg
push
inc
sbb
xor
jo
sub
lods
movs
pop
sbb
(bad)
ror
nop
fild
clc
movs
in
ins
jl
std
clc
les
and
mov
(bad)
enter
cld
add
cmp
pop
ja
bt
and
mov
les
(bad)
sbb
inc
add
or
inc
dec
lahf
or
mov
adc
add
or
cmp
sbb
and
push
rol
push
adc
rcr
jle
adc
mov
(bad)
sbb
shl
or
ret
push
or
xor
mov
pop
xor
cwde
shl
scas
bndstx
adc
xor
mov
mov
rol
mov
xor
pop
pop
es
dec
shr
push
or
inc
inc
xchg
cmps
mov
pop
enter
bound
ror
push
jae
cmp
cmps
sti
push
and
mov
mov
test
or
and
shr
cmp
out
add
mov
(bad)
mov
fstp
push
push
daa
jge
sbb
sbb
bound
and
out
xchg
pusha
cs
inc
lds
add
jg
inc
push
ror
jbe
shr
ret
cwde
or
jae
clc
jo
fnstcw
add
dec
loop
inc
jbe
lds
jbe
test
push
xor
outs
in
cmp
xor
sub
cmp
repnz
pop
add
test
rol
nop
push
je
and
inc
sub
dec
mov
pop
add
(bad)
lock
pop
push
dec
test
xchg
add
pop
xor
jmp
repz
icebp
dec
das
lea
(bad)
and
std
xchg
pusha
test
cmp
out
inc
sub
add
xor
push
adc
lea
adc
add
jecxz
aad
or
push
je
push
sub
mov
pushf
sbb
jbe
lds
xor
pop
dec
(bad)
or
push
xor
xchg
popf
cmp
inc
test
dec
sub
add
sbb
inc
fdivr
fs
adc
sbb
inc
cmp
jb
and
push
adc
adc
adc
enter
and
add
adc
das
test
daa
inc
mov
mov
cmp
lea
xor
or
fadd
push
fcmove
sti
sbb
dec
mov
retf
retf
push
or
xor
pop
inc
dec
jne
push
movs
ret
mov
inc
nop
retf
xor
and
mov
sbb
je
push
xchg
jns
in
jp
pop
in
jmp
nop
xchg
fisub
push
fcom
sub
mov
fadd
dec
jmp
mov
push
mov
jnp
sbb
jle
push
inc
and
hlt
jns
pop
xchg
mov
jno
add
push
sbb
(bad)
imul
scas
sbb
test
cwde
ds
or
mov
pop
ret
pushf
add
pop
jnp
add
xchg
loopne
and
mov
shl
enter
dec
test
add
sub
mov
ins
popa
mov
test
cmps
fstp
inc
xor
xchg
loopne
les
mov
stos
fcom
aam
push
add
cmp
loopne
hlt
cdq
fs
arpl
pop
xor
rcr
imul
ficom
shr
inc
rol
imul
push
les
cwde
mov
jmp
movs
inc
dec
fimul
jae
js
outs
imul
and
ds
sub
xchg
mov
cmp
dec
cld
fst
cmp
stos
sbb
ror
inc
mov
push
cmp
shr
jne
nop
addr16
in
arpl
mov
es
aas
pop
or
rcr
push
es
push
icebp
test
pushf
retf
ret
adc
mov
dec
in
movs
rol
xchg
inc
inc
adc
shr
sub
adc
sub
arpl
dec
clc
pop
ror
mov
xchg
inc
dec
or
and
dec
int3
(bad)
sub
outs
test
push
movs
shl
aad
pusha
pusha
das
fs
push
inc
dec
ror
inc
dec
and
retf
push
sub
adc
enter
inc
sub
add
pop
xlat
adc
les
or
cmp
scas
cdq
and
sbb
js
inc
add
and
pushf
retf
xor
pop
mov
fs
push
dec
pop
mov
enter
je
mov
pop
fidivr
mov
(bad)
shl
je
add
xor
loop
jmp
inc
xor
push
inc
cmc
jbe
mov
cmps
ins
add
dec
mov
clc
cmps
jp
xor
movs
add
and
ins
ror
push
adc
and
xchg
dec
push
sub
adc
data16
loopne
adc
jge
aas
sub
mov
mov
cmps
sbb
(bad)
(bad)
xor
mov
mov
ds
sbb
mov
imul
pop
popf
and
outs
ins
and
jo
mov
jne
into
leave
shr
sub
(bad)
and
(bad)
and
data16
cmp
iret
jg
aam
bound
sbb
and
stos
and
iret
cmps
dec
cmp
jl
(bad)
daa
test
(bad)
(bad)
fbstp
xor
mov
push
jno
daa
popf
addr16
push
mov
xor
push
xor
or
pop
ror
xchg
add
pop
push
in
sbb
ret
push
(bad)
and
cmp
or
jl
adc
test
retf
popa
mov
in
movs
pop
and
in
and
enter
dec
inc
es
or
cmps
(bad)
aaa
mov
and
fsubr
mov
or
adc
adc
sbb
hlt
xchg
jecxz
mov
sbb
popa
add
loop
cs
ins
xor
dec
les
fnstsw
enter
int
adc
mov
add
push
sahf
test
lods
aam
push
cmps
dec
push
jecxz
pop
stc
rol
jb
imul
pop
and
pusha
pop
or
adc
adc
lods
adc
jno
cmps
sbb
in
aaa
push
ror
test
mov
add
mov
pop
pop
aad
inc
repnz
hlt
jecxz
nop
add
inc
mov
aad
repnz
xor
jnp
jle
mov
pushf
ins
inc
mov
and
test
neg
push
stos
mov
pop
fst
sbb
jle
jmp
loope
clc
rol
pop
pop
mov
cmp
das
adc
nop
xlat
shl
fnstsw
stc
jo
lea
pop
scas
les
fadd
mov
fsubr
or
aam
jp
add
dec
adc
shl
add
sub
add
shl
ja
les
jne
movs
bound
cdq
(bad)
mov
add
adc
test
xor
pop
sub
jno
add
cmp
or
mov
xchg
inc
push
nop
xlat
and
loope
inc
inc
pop
sub
fisttp
xlat
dec
call
inc
sub
sbb
sbb
mov
jno
inc
lahf
mov
add
adc
xor
mov
mov
lods
jmp
and
jmp
cmp
push
not
retf
push
hlt
hlt
pop
sbb
add
inc
fst
sbb
dec
pop
xlat
(bad)
push
imul
mov
xor
sbb
mov
add
sbb
pop
ret
data16
mov
clc
sbb
ret
xor
cdq
inc
fld
sub
imul
out
ret
addr16
sub
jno
adc
int
lods
idiv
lock
xchg
or
and
lock
leave
mov
sub
jbe
add
and
jb
stos
mov
adc
lahf
jno
fidivr
dec
or
cmp
push
sbb
or
mov
inc
jg
mov
jmp
lahf
mov
out
xor
pop
inc
and
sub
jg
into
xor
fwait
jae
xor
inc
add
xchg
jecxz
xchg
xor
je
jl
and
jmp
mul
mov
fdivr
and
adc
bound
aaa
jno
mov
and
or
outs
jo
call
fwait
mov
cmp
retf
push
adc
repnz
dec
ins
fs
push
jae
push
xchg
xor
cmp
gs
loope
sub
pop
and
sub
push
iret
mov
add
inc
inc
dec
sbb
sub
lods
cli
pop
and
pop
or
mov
mul
cmc
fdivr
jne
add
sub
xlat
cld
add
pop
daa
popa
inc
pop
test
xor
adc
mov
pop
mov
call
inc
and
cs
jns
lds
rcl
add
and
xor
add
jnp
jle
test
adc
lea
jle
lods
sbb
mov
fdiv
aaa
in
je
jmp
out
sar
pushf
sub
lea
dec
sub
push
mov
shl
lahf
adc
dec
lods
movs
jne
and
in
mov
in
or
enter
and
dec
or
push
pop
aad
push
sub
loopne
push
or
sub
arpl
inc
loope
sbb
and
dec
mov
adc
cwde
sbb
mov
sar
neg
cld
mov
rol
and
xlat
in
cld
mov
or
mov
add
rcl
cmps
pop
pop
push
pushw
retf
ret
clc
daa
ja
enter
fcmovnu
lock
js
mov
pop
jecxz
repz
push
mov
sbb
ds
ds
sahf
push
mov
adc
add
xchg
mov
in
xchg
sub
or
push
sysret
cwde
mov
loopne
loop
outs
pop
ret
add
mov
cld
mov
pop
push
xor
and
sub
imul
add
dec
sub
push
xchg
jae
mov
xchg
or
mov
rol
nop
out
dec
ja
je
xchg
pop
pop
loop
adc
add
or
adc
or
dec
or
pop
mov
adc
push
mov
inc
and
pop
mov
dec
and
test
mov
in
push
movs
call
mov
jns
mov
es
push
imul
mov
ficom
aas
push
push
inc
test
test
mov
jns
mov
aam
push
popa
mov
mov
fldenv
je
mov
xchg
ins
dec
jb
idiv
ins
jo
sbb
or
dec
jb
pop
cdq
xchg
pusha
fs
sbb
xchg
retf
and
xchg
push
push
pop
dec
push
fs
push
push
movs
fimul
icebp
fld
ins
lea
cmp
int3
(bad)
and
leave
or
inc
in
inc
es
cmp
js
mov
sysret
dec
jnp
mov
xor
xor
sub
repz
sahf
xchg
inc
fs
dec
and
sub
(bad)
lock
push
and
jnp
pop
fmul
sar
or
ins
sbb
xor
sub
(bad)
sbb
xchg
sbb
sub
adc
add
sbb
enter
dec
and
dec
fisubr
sub
daa
inc
(bad)
inc
ins
adc
fild
inc
cmp
jl
push
adc
push
sub
outs
test
dec
ss
xchg
dec
clc
cld
fisubr
xchg
or
fwait
xchg
or
mov
or
adc
loopne
fdivr
mov
in
add
push
pop
inc
push
dec
fdivr
sbb
pop
mov
mov
repnz
pop
or
inc
add
inc
mov
pop
inc
push
hlt
js
leave
mov
ret
cmp
jg
je
push
add
sbb
dec
les
push
mov
adc
jns
enter
cdq
enter
in
and
lock
fisub
mov
sbb
js
push
mov
imul
out
jbe
inc
jmp
loope
jmp
fidivr
in
pushf
or
call
mov
fidiv
ss
or
add
or
mov
add
inc
fstp
fistp
and
xor
xor
nop
sub
cmp
pushf
xor
fs
add
retf
xor
test
leave
and
add
cwde
jl
pop
xor
inc
push
add
jl
or
sbb
sbb
xchg
je
pop
pop
inc
mov
(bad)
movs
xor
ins
jo
add
push
xor
je
adc
fucomp
xor
pop
add
push
in
jecxz
xchg
mov
mov
dec
and
push
dec
or
enter
mov
dec
dec
and
mov
je
xor
xor
movs
push
sbb
std
inc
and
and
push
sbb
enter
adc
mov
sbb
in
popa
cwde
imul
mov
or
shr
ret
cmp
movs
adc
add
movs
adc
or
movs
mov
add
and
repnz
in
leave
adc
cdq
or
add
lahf
xchg
inc
cmp
or
test
std
sbb
and
mov
jmp
xor
lock
hlt
addr16
outs
and
das
pop
inc
lea
movs
dec
add
fmul
sbb
jecxz
call
call
jne
push
das
inc
mov
push
push
add
cmp
fs
fdiv
cs
adc
or
fadd
and
je
cwde
das
movs
dec
push
add
fiadd
ror
in
xor
ficomp
es
cdq
ss
sub
nop
dec
cs
inc
in
es
xchg
or
xchg
dec
cs
jo
push
push
enter
jne
xor
rol
test
shl
jae
adc
jecxz
sbb
ror
xor
and
cmova
sbb
mov
sub
pop
push
and
nop
mov
dec
inc
mov
inc
call
xchg
ficom
inc
(bad)
or
or
xchg
or
cmps
push
adc
mov
mov
xorps
mov
mov
das
dec
xchg
mov
scas
or
nop
and
pop
iret
mov
mov
ds
add
sbb
(bad)
push
add
or
xchg
out
iret
mov
or
xor
or
loop
ret
in
and
adc
sbb
push
push
scas
mov
jb
cwde
pusha
adc
pop
sub
mov
(bad)
push
sbb
aad
clc
adc
xor
jb
pop
xchg
les
popa
mov
out
test
add
or
jmp
neg
xchg
fld
or
add
out
adc
xor
cmp
out
stc
and
cmp
es
das
cmp
sub
call
mov
add
adc
push
inc
or
dec
mov
jo
xor
adc
jo
outs
lds
shr
xor
add
rol
jne
arpl
das
test
mov
les
mov
imul
mov
sbb
add
mov
retf
or
xchg
adc
vpavgb
mov
mov
(bad)
jl
or
scas
sbb
or
sub
repz
inc
sbb
cmp
push
stc
inc
fs
xor
mov
iret
lods
cli
mov
add
ins
dec
push
(bad)
mov
mov
or
or
cmovns
mov
ret
adc
repz
mov
mov
sbb
adc
shl
aaa
test
push
les
leave
mov
and
ror
out
and
or
movs
mov
jbe
scas
pushf
out
cs
xchg
dec
cwde
xchg
adc
adc
xor
inc
int
add
xor
in
fstp
fwait
inc
nop
nop
fld
xor
and
nop
cmp
rcr
xchg
pop
xchg
or
or
push
xchg
dec
add
mov
dec
imul
xchg
pop
mov
cmp
into
dec
jae
inc
pop
cmp
shl
jp
ja
retf
ins
adc
adc
xchg
vmptrst
fst
aam
(bad)
sub
adc
clc
add
aam
fsub
or
loope
ret
repnz
mov
in
ret
mov
dec
add
inc
leave
or
leave
mov
dec
or
repnz
cwde
inc
or
or
data16
inc
inc
or
xor
movs
xchg
or
or
fstp
pop
movs
in
pop
cmp
fnstsw
xor
mov
in
les
mov
popa
dec
sar
dec
adc
pop
mov
fs
xchg
and
(bad)
mov
jmp
add
pushw
(bad)
pop
bsr
push
jns
push
add
adc
push
in
dec
mov
rcr
mov
add
pop
xor
or
xor
or
repnz
or
pop
adc
pop
push
sub
stos
retf
rol
push
add
or
pop
in
sub
and
adc
fmul
mov
xor
sar
xlat
and
adc
adc
jns
call
outs
xchg
pop
ret
adc
mov
cmp
(bad)
mov
cld
mov
mov
sub
sub
xchg
scas
and
fld
lea
mov
sbb
imul
add
and
or
test
jmp
(bad)
or
xchg
inc
leave
dec
movmskps
push
lods
daa
stos
xchg
mov
pop
pop
cmp
adc
xlat
call
pop
push
popa
mov
xchg
push
cmp
xchg
call
dec
and
sub
inc
or
js
and
xchg
xor
nop
or
fstp
xchg
pop
neg
mov
cs
inc
mov
enter
xor
loopne
inc
sub
or
add
sbb
cmp
sbb
mov
xchg
cmp
mov
and
(bad)
out
popa
ja
loop
cmps
ss
add
mov
add
out
mov
js
nop
int3
push
add
daa
out
dec
les
cmps
add
invd
inc
adc
imul
les
mov
push
inc
or
fisubr
adc
xor
add
add
dec
sub
fstp
mov
mov
sub
sub
push
in
xchg
dec
xor
add
dec
lea
int
adc
xchg
(bad)
dec
mov
and
hlt
xor
push
xchg
scas
les
pop
add
js
sub
cmp
dec
(bad)
adc
push
imul
inc
(bad)
fdivrp
sbb
dec
loop
mov
adc
fwait
push
and
or
test
and
push
dec
pop
inc
or
push
or
sbb
jge
and
in
fs
mov
loop
aaa
pop
push
mov
je
pop
lods
push
xor
dec
or
in
movs
gs
push
mov
add
mov
mov
icebp
adc
fmul
jbe
movs
(bad)
dec
fwait
add
and
ss
mov
fcom
adc
pop
jg
dec
cmp
jnp
je
push
add
lods
jmp
push
push
and
in
hlt
xchg
push
add
sbb
mov
push
aad
pop
sbb
pop
xchg
movs
xor
icebp
inc
push
mov
dec
(bad)
fsub
cmc
add
out
mov
dec
add
push
cmps
jne
jl
sbb
mov
adc
dec
lods
or
addr16
scas
aaa
inc
and
and
fcom
pop
outs
dec
ret
jle
dec
push
(bad)
and
movs
xor
xchg
movs
mov
aaa
inc
inc
cmp
add
adc
and
loope
push
add
and
xchg
test
add
and
mov
inc
add
call
inc
sbb
hlt
xchg
push
mov
and
sub
pusha
cmps
push
cmp
or
or
cmp
pop
xor
inc
dec
mov
leave
cwde
mov
push
add
xchg
add
lds
pop
(bad)
push
sbb
cmp
maskmovq
mul
retf
or
xchg
pusha
xor
sbb
scas
mov
in
out
inc
add
inc
mov
sti
push
dec
cwde
dec
and
jmp
push
add
mov
arpl
in
and
repnz
push
jg
adc
or
adc
ja
inc
sbb
jmp
mov
push
adc
xchg
mov
push
ins
sub
add
add
sub
(bad)
(bad)
mov
push
inc
cmp
loope
xlat
or
mov
inc
adc
or
push
adc
pop
dec
bnd
call
pop
jge
pop
movs
mov
loopne
fld
adc
sbb
cmp
shl
dec
xchg
xor
enter
in
fisub
ds
in
jmp
das
or
inc
pop
addr16
jne
rol
add
mov
pusha
cmp
sar
sbb
das
push
cmp
adc
add
cmp
jl
and
push
jge
jne
mov
adc
aad
adc
sbb
jo
adc
add
iret
sbb
cld
(bad)
inc
cmp
(bad)
mov
(bad)
mov
aaa
shl
adc
dec
scas
adc
push
out
hlt
xchg
out
jns
or
in
popf
inc
pcmpgtb
inc
inc
cwde
ins
ret
pop
push
mov
je
add
or
hlt
ins
nop
loope
daa
cld
in
xchg
or
shl
cld
ret
sub
and
test
mov
mov
adc
add
data16
jmp
fisubr
stos
pop
sub
loopne
outs
adc
ss
add
xchg
pop
or
daa
add
lock
or
jns
or
cmp
inc
dec
jne
push
push
shl
or
pop
sbb
push
int
pop
push
mov
push
xor
inc
xchg
add
xor
lds
gs
xor
add
and
adc
sbb
cmps
sbb
push
test
out
cmps
and
ins
mov
inc
dec
mov
sbb
cmp
push
sub
pop
jle
and
cmp
popf
clc
shr
cmps
jle
add
popa
xchg
js
or
arpl
cmc
inc
add
aaa
mov
cmp
jmp
daa
push
adc
mov
test
inc
push
inc
xor
std
add
cmp
cmp
movs
push
popf
push
add
xor
inc
and
pop
enter
jmp
js
aas
pop
ins
fidiv
aas
clc
adc
or
mov
push
adc
cmp
repz
repz
outs
jp
leave
repz
nop
fwait
cmps
mov
and
jle
push
pop
inc
dec
and
or
sbb
adc
shl
popa
adc
sub
jle
push
pop
add
mov
ficom
es
and
sub
movs
jmp
dec
adc
push
and
dec
push
xor
add
xchg
sti
xchg
mov
push
adc
mov
sub
adc
nop
imul
ror
rcl
push
fcmovu
jmp
mov
adc
sbb
add
xchg
pop
sar
aas
sbb
and
or
sub
mov
fisub
or
sub
push
mov
shr
add
dec
adc
mov
xor
xlat
cdq
xor
arpl
test
out
jl
push
loope
(bad)
pop
adc
in
jle
js
sbb
jno
jae
xor
es
jle
sbb
sar
mov
xchg
dec
sti
add
(bad)
out
or
popa
pop
(bad)
arpl
inc
sub
sub
pop
pop
inc
mov
add
shr
mov
test
push
pusha
loop
or
pop
jmp
fs
push
cwde
mov
icebp
jge
ror
dec
cmps
(bad)
mov
cmp
xor
sbb
or
or
push
push
fmul
jmp
es
lods
fidiv
dec
dec
mov
jg
out
sub
and
cmc
mov
adc
xor
and
jmp
dec
sbb
add
jg
cmp
mov
stc
pushf
sti
push
add
pop
jecxz
inc
cmp
lods
cmp
(bad)
sub
adc
sub
imul
add
call
mov
shl
out
add
cmp
pop
pop
add
ds
and
adc
sub
movs
dec
sar
lock
adc
sub
jecxz
dec
jo
cmc
mov
aaa
pop
mov
xchg
mov
mov
inc
inc
aas
xchg
add
xchg
lahf
xlat
xchg
xor
inc
stos
inc
fistp
rcl
xchg
push
lods
adc
(bad)
push
xchg
mov
xlat
or
add
test
dec
xchg
lods
jbe
cli
pop
push
pop
add
into
lock
movs
jg
add
adc
xor
(bad)
dec
stos
adc
inc
mov
pop
push
stc
or
mov
or
add
lock
and
mov
push
or
jmp
push
sahf
es
ds
mov
jl
ret
shr
add
xor
mov
in
mov
add
xor
fist
pop
je
sub
lods
xor
dec
mov
jl
pop
inc
dec
dec
pop
add
mov
pop
test
jmp
adc
mov
add
pusha
xchg
lahf
adc
punpcklbw
add
push
les
or
mov
mov
fiadd
mov
push
add
out
add
out
xor
or
mov
rcr
dec
outs
lock
or
or
aas
adc
xchg
in
movs
cld
pop
shl
icebp
or
fwait
sub
daa
ds
push
inc
xor
fstp
push
pop
cmp
cmp
int3
cmp
jne
push
push
inc
cmps
add
lock
pop
scas
out
scas
sbb
and
ins
or
mov
fiadd
sbb
enter
loopne
push
add
adc
(bad)
cmps
mov
div
loop
cmp
daa
inc
and
(bad)
fld
add
aas
ds
xor
inc
sub
xor
inc
rsm
jo
xchg
adc
outs
movs
and
test
shl
adc
push
or
cwde
les
jne
add
dec
lods
and
xchg
arpl
jge
add
or
rol
sbb
les
jns
inc
lock
hlt
cmp
mov
inc
rcr
xor
pop
pop
loope
daa
jnp
xchg
ins
arpl
jmp
sbb
dec
push
mov
movs
sub
mov
pop
das
adc
mov
mov
sbb
out
cmps
test
sbb
jno
aaa
loopne
cmp
jge
add
add
loop
pop
pop
outs
call
mov
push
mov
test
jl
inc
push
push
inc
and
xor
or
add
adc
and
pop
jge
push
adc
pop
xlat
or
push
sbb
and
test
and
int3
adc
ja
test
rcl
adc
sub
sti
cmp
sahf
aaa
cmp
push
pop
sbb
push
and
xchg
pop
(bad)
push
and
inc
push
out
sahf
out
lea
jns
shl
repz
adc
cmp
nop
mov
iret
repz
test
sbb
out
ficomp
push
dec
pop
ins
sahf
out
sahf
jle
mov
int
jns
cmc
push
sub
sub
xor
mov
xchg
cmp
dec
repz
repz
ins
jge
lahf
iret
repz
mov
shl
hlt
add
sub
daa
cmp
sub
sub
sahf
cmps
cmp
sub
out
rcl
repz
repz
rcl
loop
cmp
push
mov
es
pop
mov
repnz
jl
sub
jns
jbe
sub
jp
out
sahf
pushf
lods
mov
iret
sar
adc
repz
push
mov
iret
jnp
and
into
(bad)
cmps
stc
cmp
add
adc
das
inc
jns
out
xor
inc
push
push
addr16
mov
jg
cmp
or
pop
stc
lods
mov
xchg
add
pop
inc
push
pop
jg
sbb
push
add
mov
out
adc
stos
stc
cmp
repz
int
out
add
cli
jge
out
je
es
pop
int
or
fstp
jb
repnz
daa
jg
nop
aas
call
and
push
xor
mov
xor
mov
xchg
mov
movs
lods
jae
in
mov
aas
(bad)
push
sbb
sbb
or
scas
add
cmp
and
xor
inc
push
sbb
repz
jbe
inc
pop
add
push
invd
add
jl
std
out
adc
repz
in
dec
xor
cmps
jnp
jnp
mov
mov
ror
dec
push
push
je
xor
xchg
xlat
pusha
in
add
sbb
xor
stc
sub
mov
repnz
ds
inc
xchg
and
and
and
inc
xor
arpl
retf
iret
je
xor
sub
xchg
lea
cmp
sar
into
and
xchg
out
bswap
fsub
lock
sbb
and
xchg
test
sub
and
push
sqrtps
cld
jns
out
(bad)
adc
push
bound
jns
jae
xchg
repnz
lods
adc
add
or
jmp
xor
and
sub
bound
fwait
out
push
out
adc
and
push
popa
ss
sub
jb
xor
cs
or
mov
sbb
sbb
add
cmp
es
mov
push
fsubr
call
ss
sbb
fimul
out
rcl
sub
fst
inc
in
adc
ret
push
cld
push
fild
adc
daa
sub
ret
ja
xchg
repz
pop
add
movs
sub
das
je
inc
movs
dec
mov
stos
xor
and
and
js
jb
fs
push
pop
xchg
jl
xor
sub
and
add
inc
push
fstp
or
les
into
call
and
or
pop
sub
mov
sbb
adc
repnz
pop
enter
adc
mov
add
add
cmp
adc
mov
lock
lock
in
ins
bswap
jnp
(bad)
adc
cmp
push
call
fmul
xor
add
daa
loopne
jb
adc
nop
cld
adc
test
gs
and
xchg
or
hlt
adc
mov
in
test
add
and
in
ror
push
ins
dec
cs
mov
or
rol
in
rol
and
in
mov
das
jbe
pop
add
pop
inc
pop
enter
cld
push
in
rol
or
test
sub
rcl
fisub
adc
lock
mov
pop
and
dec
cs
sbb
enter
and
sbb
sbb
or
push
ins
dec
lock
dec
cs
adc
in
pop
nop
or
lds
cmp
nop
pop
in
push
sbb
inc
inc
push
dec
pop
inc
push
sub
rol
mov
pop
rcr
adc
rcl
and
add
and
in
push
push
rol
sbb
fcom
mov
jb
aam
pop
gs
enter
push
or
cmp
nop
pop
repnz
or
sub
test
test
mov
push
in
fcom
push
leave
shl
test
and
mov
sbb
or
mov
in
das
in
mov
xchg
push
dec
cs
gs
and
jbe
push
inc
rcr
adc
nop
pop
enter
sub
inc
pop
in
cmp
test
pop
cmp
pop
loopne
retf
(bad)
and
push
and
in
mov
mov
enter
cld
pop
ins
adc
inc
pop
or
and
nop
pop
repnz
or
push
leave
test
nop
pop
repnz
sub
call
mov
xlat
rol
adc
pop
adc
sbb
xchg
bound
lock
cmp
sar
push
ins
dec
pop
enter
push
and
in
pop
lods
adc
in
in
inc
adc
retf
js
repnz
sbb
leave
shl
test
fcomp
nop
or
mov
pop
repnz
mov
mov
nop
ror
adc
call
test
mov
push
add
adc
pop
or
and
in
and
sbb
dec
enter
adc
leave
lds
pop
and
fldcw
adc
leave
mov
inc
adc
mov
fs
cmp
pop
retf
jo
adc
pushf
sub
sbb
sbb
and
in
push
mov
enter
fs
and
jb
push
in
lds
sbb
lds
leave
and
push
and
or
jns
das
or
hlt
adc
mov
or
push
jmp
sbb
push
outs
movs
adc
cmp
and
lahf
inc
ds
push
inc
cld
(bad)
sub
fbld
iret
and
clc
sbb
mov
and
mov
stos
movs
aaa
pop
fcomp
and
and
mov
xor
push
in
pop
repnz
mov
push
xchg
adc
test
mov
sbb
cmp
out
pop
imul
push
bound
loopne
push
inc
mov
or
and
xchg
dec
in
mov
sbb
in
jmp
pop
mov
bound
fcomp
mov
dec
cmp
call
sbb
push
pop
arpl
or
or
ja
(bad)
std
sbb
sbb
or
and
or
shl
add
xchg
mov
xor
test
lock
mov
fwait
jne
rcl
push
std
add
mov
sbb
pop
jmp
fs
mov
xchg
pop
data16
xor
and
mov
cdq
ja
(bad)
imul
lods
or
imul
push
les
(bad)
fcomp
sbb
inc
or
ins
ins
retf
sub
inc
pop
lods
xor
and
or
(bad)
sub
pushf
sub
xchg
fdivr
jecxz
mov
sbb
jmp
xchg
push
js
or
popf
nop
mov
and
leave
mov
clc
mov
mov
adc
sbb
jno
fild
pop
popa
xchg
cli
inc
shl
pop
mov
test
or
mov
ror
cmp
cmp
mov
fcmovb
cmp
mov
jnp
jp
mov
imul
mov
mov
sbb
dec
add
sbb
das
push
dec
push
or
and
sbb
and
loop
cmp
sbb
adc
(bad)
mov
adc
or
inc
sub
sbb
sbb
jmp
outs
adc
add
add
ss
fld
test
sbb
popa
or
mov
mov
and
or
mov
sub
cmp
aam
pop
add
push
enter
hlt
sbb
adc
xchg
sbb
sub
adc
cmp
pop
cmps
xchg
push
inc
fld
push
add
and
dec
dec
enter
imul
or
inc
shl
lods
ds
mov
adc
shl
sar
ins
cmps
and
loopne
aaa
lock
adc
clc
aas
gs
sbb
cmp
adc
add
cmp
or
mov
call
lds
lea
cmp
clc
popf
xor
aaa
sbb
test
cld
inc
sbb
xlat
or
and
jo
fs
fmul
mov
and
cli
stc
(bad)
push
ja
sbb
jne
ss
bound
cmps
add
xchg
mov
stc
jp
sub
popa
out
inc
mov
adc
(bad)
sbb
sub
pop
(bad)
push
adc
(bad)
scas
and
xchg
sub
fcom
jo
jns
cmp
daa
mov
test
jnp
adc
push
(bad)
pop
ret
inc
scas
adc
pop
xchg
sbb
mov
mov
pusha
adc
int
adc
mov
call
call
mov
clc
jg
or
add
sub
sbb
adc
jnp
mov
mov
int3
mov
sub
xchg
push
scas
mov
adc
das
adc
sub
and
mov
pop
cs
stos
and
jl
dec
retf
xor
adc
mov
(bad)
sub
add
push
ror
sbb
test
dec
les
jmp
mov
adc
sahf
repz
adc
adc
cmc
ror
fld
jmp
ins
push
imul
lahf
add
arpl
sub
das
add
arpl
loopne
cs
sub
pop
lods
sub
sub
arpl
push
inc
cmp
jo
test
ret
push
jge
mov
cdq
mov
je
sub
and
test
xchg
int
or
aam
das
movs
jmp
xchg
and
icebp
mov
pop
jb
xlat
mov
inc
cwde
popa
push
ja
out
dec
mov
push
mov
popf
mov
mov
mov
fdivrp
std
sbb
jl
aaa
push
adc
xchg
sbb
daa
mov
dec
cmp
cmp
mov
or
movs
xchg
mov
add
or
xor
add
and
movs
stos
out
movs
mov
push
sub
mov
and
add
cs
sub
imul
sbb
dec
sbb
movs
mov
push
daa
scas
mov
and
lods
dec
push
push
pop
jo
and
and
inc
inc
inc
daa
sub
addr16
ss
jb
daa
and
and
dec
sub
cs
pushf
das
(bad)
mov
adc
(bad)
popa
pop
mov
or
dec
cmp
pop
nop
cmps
rol
push
jp
repnz
or
and
xchg
dec
ins
inc
xchg
jg
movs
rcl
jae
or
ins
daa
pop
cmovp
sbb
mov
pop
movs
mov
retf
pop
out
retf
mov
aas
daa
add
iret
and
outs
sub
mov
loop
mov
movs
pop
sub
je
and
retf
adc
and
xor
test
xor
aas
mov
jne
addr16
sbb
test
jmp
sbb
jge
retf
je
add
mov
movs
scas
push
push
push
pop
cmps
ja
lea
mov
sub
add
test
and
or
jbe
push
mov
adc
adc
movs
addr16
or
ins
sub
sub
adc
enter
ja
je
aam
or
sbb
push
sub
cmp
shl
xor
push
adc
add
mov
mov
add
and
jae
test
inc
xor
ins
ficom
test
mov
arpl
frstor
adc
je
xchg
mov
jns
mov
and
push
mov
add
jns
dec
gs
icebp
shl
pop
inc
add
push
pop
pop
mov
jnp
push
nop
xor
adc
out
ss
mov
inc
nop
xlat
pushf
sbb
fwait
adc
sub
mov
inc
je
inc
outs
adc
xchg
out
lock
les
lock
and
add
push
adc
jno
out
sahf
test
pusha
js
sahf
out
out
or
push
dec
dec
push
add
js
imul
cld
push
xchg
add
inc
inc
dec
push
pop
sub
xor
scas
pop
xchg
push
shl
les
or
mov
jno
mov
mov
dec
jge
jl
jns
lock
inc
cmps
cwde
push
sbb
cwde
adc
xor
sbb
and
push
cmp
xor
push
lock
icebp
nop
mov
or
rcr
dec
or
inc
xchg
test
sub
inc
jb
test
adc
sub
(bad)
xor
pop
xor
test
dec
dec
xchg
mov
jb
push
aam
das
sub
xchg
mov
pop
mov
cdq
mov
push
jl
das
mov
inc
out
test
jne
xor
shl
jl
idiv
je
inc
inc
sbb
pusha
dec
fisttp
adc
push
ror
xchg
addr16
leave
out
call
push
mov
nop
jle
enter
and
xchg
and
or
add
cmp
loopne
addr16
dec
dec
dec
xor
sub
aad
loopne
int3
iret
cld
addr16
push
jg
inc
ds
jo
movs
cdq
(bad)
xchg
ins
lods
xchg
add
data16
ins
push
call
push
sub
cwde
cmp
dec
aas
pop
sub
sbb
aas
mov
jno
cwde
xchg
loopne
inc
bound
and
xor
and
outs
sub
xor
or
or
or
fs
mov
and
gs
sub
adc
push
mov
addr16
repz
lds
fsubrp
clc
add
adc
pop
sub
inc
jmp
ror
jno
xchg
popa
das
sbb
or
adc
and
inc
ds
or
psubusb
mov
lahf
adc
enter
cmp
repz
mov
into
pop
push
jmp
cwde
push
es
dec
dec
mov
push
add
daa
add
dec
aaa
pushf
outs
adc
and
aam
aam
jo
xchg
movs
push
(bad)
inc
pop
mov
addr16
or
fwait
xchg
movs
pop
daa
(bad)
js
repnz
jl
cld
pusha
test
jbe
test
mov
jb
mov
mov
pop
pusha
repz
cmp
mov
cmp
or
aas
dec
sar
ins
or
jae
xchg
push
leave
sub
push
out
pop
or
pop
daa
jbe
push
adc
call
add
sete
div
dec
leave
sub
ds
ins
dec
add
lods
mov
mov
mov
(bad)
lock
aaa
pushf
scas
bswap
add
mov
scas
pop
pop
clc
fsub
shr
mov
mov
xor
jno
push
scas
aam
enter
inc
mov
fdiv
xor
mov
push
lods
pop
xchg
bswap
mov
mov
int
and
lods
mov
mov
test
jle
mov
ret
sub
mov
adc
inc
ss
adc
and
js
stos
loopne
mov
mov
or
jl
pop
ror
into
xchg
mov
xchg
(bad)
int
push
mov
pushf
loopne
mov
int3
mov
or
das
pusha
inc
into
enter
loopne
mov
test
or
pusha
pop
daa
shr
iret
cmp
fwait
add
(bad)
js
out
fs
pop
rcl
inc
cs
add
pop
xchg
or
inc
xchg
das
loopne
jmp
es
(bad)
test
loop
loopne
pop
sbb
(bad)
aaa
pushf
ficom
xlat
sbb
and
inc
test
gs
push
pop
sub
lea
pop
adc
add
pop
adc
push
dec
jne
or
cmp
in
pusha
pop
test
imul
test
lods
sub
jl
sar
(bad)
cmovns
push
mov
adc
or
repnz
pop
pop
sbb
mov
pushw
pop
lahf
test
push
dec
push
mov
push
stc
dec
pop
test
in
inc
sbb
push
loopne
lds
lock
mov
inc
cmp
jns
(bad)
fsubr
cwde
jmp
push
dec
pop
sbb
inc
push
push
in
psubsw
data16
daa
daa
dec
pop
pop
dec
out
inc
outs
dec
out
aas
or
adc
mov
pop
loopne
inc
adc
pop
jb
fcmovne
mov
int3
mov
xchg
jns
out
push
popf
and
xor
out
sahf
out
dec
push
pop
popa
push
out
sahf
imul
or
push
ins
inc
add
aaa
jo
mov
jbe
jecxz
test
int3
add
leave
(bad)
aaa
(bad)
es
fidiv
xchg
jmp
jecxz
inc
dec
mov
in
dec
jmp
and
cmps
(bad)
in
dec
add
xor
cmp
jo
aad
sahf
in
stos
xor
inc
mov
inc
scas
pop
xlat
call
cld
push
cmps
pusha
mov
push
fdivr
mov
pop
xor
cld
adc
sbb
pop
daa
mov
cmp
add
add
push
test
ja
push
mov
dec
shl
sbb
cmc
or
xchg
push
sub
xchg
je
add
add
jecxz
mov
or
out
cld
lahf
inc
pusha
out
add
pop
xor
enter
jl
pop
rcl
pusha
mov
sbb
push
pop
inc
push
fdiv
xor
lahf
aaa
sbb
sbb
adc
mov
sub
or
nop
and
or
das
mov
cmps
sbb
mov
pushf
add
icebp
inc
mov
push
pushf
or
cld
or
or
dec
or
push
xchg
push
mov
loopne
adc
loope
adc
nop
cmp
xchg
sub
mov
adc
and
xor
jle
push
and
imul
jbe
test
hlt
(bad)
neg
arpl
adc
fwait
adc
adc
cwde
bsf
xor
maskmovq
push
jg
jb
or
call
not
and
das
dec
sbb
pusha
ss
xchg
adc
not
push
push
dec
inc
mov
fs
cwde
inc
jo
scas
leave
shl
cmps
push
es
out
scas
mov
xchg
aaa
and
pop
sub
(bad)
sub
mov
cmp
adc
adc
mov
pop
cmps
jae
daa
outs
ss
mov
pop
pop
pushf
dec
fistp
push
pop
cwde
ss
enter
loopne
jo
clc
or
nop
mov
and
data16
push
in
jp
mov
mov
push
jo
mov
lock
outs
dec
and
shl
dec
add
jl
sbb
outs
ins
dec
gs
leave
push
rol
jnp
and
mov
ds
test
pop
cmp
dec
ins
adc
sbb
push
out
and
inc
inc
jl
ret
and
inc
xchg
pop
test
and
push
xchg
fild
sbb
xlat
and
sbb
mov
xor
popa
ja
mov
xor
mov
dec
iret
mov
aam
daa
test
jo
push
enter
mov
stos
(bad)
popf
out
fmul
pop
aaa
push
push
call
adc
test
push
push
add
sbb
ds
cmp
add
nop
push
imul
pop
xchg
adc
inc
dec
and
iret
or
fs
pushw
or
adc
xlat
nop
les
cmps
movs
and
ss
jns
outs
lock
and
xor
dec
mov
stos
push
push
cmp
cmp
mov
test
aad
mov
test
imul
pop
ror
mov
js
scas
ret
bswap
imul
inc
enter
and
pop
call
into
scas
int3
push
pusha
xchg
jle
leave
sub
outs
mov
aaa
mov
repnz
add
loopne
push
mov
test
jmp
cmp
xor
adc
inc
cmp
jmp
pop
sub
pop
je
daa
push
xor
xchg
cmps
jecxz
ret
into
pusha
retf
lods
sar
or
enter
(bad)
add
clc
es
iret
add
cmp
xchg
shl
and
xor
mov
pop
adc
xchg
pop
or
sete
test
stos
pop
js
inc
outs
jle
add
call
(bad)
clc
rcr
or
dec
cld
pop
retf
jae
outs
jne
xor
lea
(bad)
outs
das
outs
test
dec
fdivr
xor
cld
fdiv
jo
js
push
push
rcl
fnstcw
pop
es
mov
xchg
dec
push
xor
mov
in
mov
(bad)
xor
push
fs
dec
data16
pop
inc
in
and
add
sar
or
xchg
push
ret
outs
or
cmp
sub
and
addps
ss
(bad)
add
add
add
daa
xchg
and
das
loopne
xor
sub
cmp
adc
mov
hlt
outs
mov
xchg
add
popa
mov
mov
lods
or
adc
cmp
mov
(bad)
push
inc
sbb
push
jle
jnp
sbb
dec
jmp
or
jbe
(bad)
call
sbb
cmp
sub
outs
dec
add
das
push
pop
pusha
ret
and
inc
push
sub
or
adc
or
push
pop
in
inc
add
cmp
iret
pushf
xchg
adc
aas
dec
sbb
dec
lods
add
arpl
inc
das
in
xor
loopne
jb
push
mov
push
xor
test
mov
and
dec
push
inc
xchg
adc
jg
test
pop
cdq
(bad)
adc
es
dec
pop
add
fdiv
add
clc
mov
sbb
xor
add
es
inc
inc
dec
outs
call
int3
and
movs
dec
mov
fisubr
adc
xchg
fs
xchg
sub
sub
pop
add
and
mov
ror
sub
ror
adc
dec
and
jmp
adc
mov
data16
dec
sbb
jmp
leave
call
pop
(bad)
call
jns
nop
cmp
push
jmp
in
xor
loop
inc
(bad)
std
in
imul
mov
inc
clc
sbb
popa
shr
imul
repz
jno
adc
xchg
xor
push
xchg
cmp
dec
gs
adc
arpl
adc
sub
xor
das
out
add
or
adc
test
fcom
add
xlat
jae
mov
in
out
add
mov
ss
mov
inc
fsub
out
nop
lea
clc
inc
or
ret
pop
push
mov
je
aas
xchg
xchg
(bad)
jmp
cs
jmp
rol
pop
fdivr
jmp
adc
cdq
popa
nop
cmps
daa
push
das
cmps
push
dec
fidivr
pop
sbb
lods
add
inc
(bad)
mov
or
xchg
movs
mov
mov
push
adc
xchg
call
adc
or
cmps
add
pusha
nop
add
cmps
sbb
sub
mov
cmp
jnp
jo
cs
jmp
add
(bad)
adc
jp
ret
inc
add
inc
cmc
fadd
adc
sub
add
xor
mov
(bad)
call
rol
hlt
mov
pop
jnp
push
test
aaa
inc
sbb
dec
movs
xor
rcl
dec
mov
mov
pusha
cmps
cmp
fcmovnbe
arpl
in
test
(bad)
fld
dec
daa
leave
mov
jnp
cmp
add
inc
dec
mov
shl
or
jmp
sbb
popf
nop
and
cmp
add
ret
retf
and
dec
sbb
shl
lahf
mov
push
nop
cmp
bound
cdq
pop
imul
push
lea
ds
or
cmp
sti
data16
adc
adc
imul
retf
sbb
enter
fldenv
imul
sub
sub
fiadd
outs
add
xor
fild
movs
inc
test
arpl
push
lahf
bound
sbb
add
and
cmps
inc
sbb
add
stos
sbb
jmp
xchg
mov
sbb
add
(bad)
daa
pop
arpl
fs
inc
test
sbb
jns
pop
lea
push
mov
mov
pop
xchg
inc
jl
movs
pop
mov
out
neg
jb
mov
dec
nop
loope
inc
xor
cmp
cld
mov
fadd
jb
mov
imul
add
cmps
add
dec
xchg
sti
ficomp
adc
mov
jo
or
mov
dec
dec
nop
push
add
inc
sbb
or
pop
jnp
rcr
in
push
xchg
cdq
jae
xor
jmp
neg
nop
fldcw
mov
inc
inc
push
dec
fisttp
and
or
inc
retf
std
cmp
imul
ffreep
jmp
inc
mov
jmp
jmp
xchg
push
add
inc
push
movnti
mov
mov
inc
pusha
dec
mov
retf
mov
or
hlt
mov
aam
iret
sub
stos
jo
rcr
pop
pop
inc
xchg
and
lock
icebp
mov
and
test
cwde
and
jmp
and
push
xchg
cs
and
add
inc
(bad)
repz
inc
sbb
les
test
mov
mov
xor
stos
xchg
push
dec
mov
add
aaa
jge
jae
fwait
mov
xor
hlt
push
rol
sub
xchg
into
lea
add
xchg
icebp
mov
movs
xchg
ficom
jl
push
popa
js
pop
sub
inc
sbb
popa
or
xchg
xchg
jmp
sub
push
jno
mov
mov
aam
or
sub
sub
cdq
add
cmps
hlt
and
enter
jg
add
rol
adc
(bad)
sbb
pop
sbb
xor
shl
iret
jp
loopne
push
and
and
sub
xchg
or
mov
cmp
sub
push
dec
or
sbb
add
in
inc
enter
xor
jns
popa
pop
mov
dec
push
test
cld
xchg
mov
inc
iret
push
cdq
pusha
and
add
push
sub
ficomp
pop
push
adc
pop
(bad)
arpl
sahf
inc
mov
adc
ja
add
cmp
mov
pop
sub
xor
in
cmp
xor
pop
pop
shl
sbb
adc
or
inc
sub
or
mov
jecxz
sub
sbb
mov
inc
sahf
in
dec
rcr
rcl
jno
fs
call
push
xor
sub
xor
adc
clc
(bad)
adc
dec
das
in
jmp
and
jne
sub
les
and
and
inc
xor
and
cld
shr
pop
or
adc
cmp
jne
push
dec
rol
fcom
mov
test
jae
sub
xor
les
xchg
push
or
mov
(bad)
(bad)
jle
cmp
pop
mov
mov
scas
outs
and
dec
xchg
xchg
clc
pop
sbb
ret
gs
sub
sbb
nop
cmp
je
push
add
aad
aad
xlat
adc
and
sub
add
dec
adc
adc
mov
xor
push
or
add
call
pop
int
hlt
mov
or
sub
mov
cwde
and
call
mov
arpl
mov
and
jge
das
je
xor
in
or
js
push
shl
and
and
xor
and
mov
mov
js
sbb
xor
stc
and
loopne
and
push
dec
push
jp
in
lods
push
test
xchg
xchg
shr
sbb
push
out
iret
cmp
mov
jo
inc
pusha
jecxz
dec
adc
add
mov
dec
push
jo
xor
ret
fist
test
xchg
mov
movs
test
mov
add
loope
daa
or
mov
out
int
test
xor
fstp
adc
repz
dec
xchg
inc
add
and
adc
sbb
or
outs
push
inc
mov
out
dec
mov
loopne
data16
fisttp
mov
inc
mov
add
mov
mov
ja
xor
pop
jns
aam
dec
pop
inc
(bad)
and
xor
sub
inc
sub
inc
cld
mov
mov
inc
push
sub
xor
jbe
add
(bad)
imul
fs
xor
jmp
adc
loopne
inc
inc
dec
shl
dec
dec
push
push
xor
shl
push
pop
pop
pop
movs
imul
jae
mov
push
adc
mov
mov
pop
push
fwait
inc
pop
das
push
add
sbb
das
mov
xor
and
pusha
sbb
pop
mov
std
adc
push
xor
cmp
(bad)
arpl
xor
push
cdq
cmp
push
mov
mov
xor
repz
ficom
inc
pop
(bad)
cmp
xchg
dec
dec
xchg
lods
ret
sbb
je
sbb
retf
pusha
jmp
aam
rcl
mov
xchg
xchg
or
lods
(bad)
jle
jns
outs
add
int3
jne
mov
dec
pop
xchg
test
(bad)
xor
daa
xchg
rol
xor
xchg
pop
or
pop
out
pop
adc
add
les
cmp
xor
xchg
or
cmp
jge
mov
sar
rol
scas
mov
test
jp
idiv
iret
inc
leave
shr
repz
rol
jns
lea
iret
stos
mov
leave
rcr
out
repz
icebp
sti
add
sahf
sbb
scas
inc
sahf
out
dec
xchg
test
mov
jns
pop
cmps
pop
gs
push
ja
xchg
inc
pushw
mov
scas
or
inc
jb
sbb
out
jnp
sbb
data16
pop
dec
jmp
xchg
jmp
inc
mov
jbe
aaa
jmp
imul
cwde
adc
mov
adc
cmp
mov
and
neg
sub
or
fbstp
mov
mov
(bad)
xor
test
pop
sbb
sbb
jg
jb
das
call
and
dec
add
push
pop
inc
dec
sub
cmp
sti
dec
inc
add
adc
outs
pop
in
addr16
inc
adc
add
pop
inc
adc
sti
add
aam
sub
(bad)
dec
cmp
je
sahf
xchg
mov
cmp
jle
xchg
fstp
push
cmp
mov
mov
aam
jnp
cmp
(bad)
scas
int
pop
push
nop
dec
xor
or
xor
mov
sub
lea
lods
and
ror
dec
xor
add
popa
or
jne
xor
ss
fist
jnp
push
outs
imul
push
or
add
popa
outs
and
add
sbb
cmp
dec
test
pop
icebp
push
js
pop
sbb
addr16
fs
jge
rol
js
cmp
cmp
pop
push
cmp
sub
jmp
repnz
inc
jns
retf
inc
fsubr
pop
pop
jo
div
xchg
mov
adc
adc
call
aas
xor
or
inc
mov
dec
pusha
sub
jae
sub
mov
dec
sub
jmp
div
loopne
dec
(bad)
ja
xor
mov
or
outs
repnz
inc
or
pop
adc
adc
cmp
or
inc
inc
jecxz
push
adc
out
ret
jne
push
push
sbb
push
mov
test
sub
xor
aam
arpl
mov
repnz
mov
or
mov
ror
jg
ficomp
mov
inc
imul
bnd
xor
outs
mov
adc
or
push
sub
add
adc
or
ret
test
mov
adc
out
imul
add
or
popa
and
mov
fnstsw
dec
pop
jecxz
mov
mov
loope
movs
popf
lea
int3
push
lea
xchg
outs
dec
cmp
rcr
call
out
loopne
mov
inc
inc
sub
ss
pop
mov
or
rcl
mov
in
cmp
je
test
adc
sbb
jno
cld
or
cmp
ins
xor
mov
sbb
pop
pusha
add
push
xlat
mov
je
add
(bad)
cmp
jne
mov
add
jmp
push
rcr
mov
push
outs
push
pop
sbb
xchg
cmps
push
pop
push
dec
sub
ret
dec
pusha
dec
inc
fcom
pusha
dec
aaa
outs
addr16
imul
das
add
pop
ret
adc
ror
rol
pusha
mov
rcr
mov
adc
(bad)
cmp
or
sbb
stos
mov
jne
mov
stos
les
lds
pusha
push
rcl
cdq
(bad)
shl
inc
pusha
inc
jne
jl
dec
add
shl
fs
test
int
jno
and
or
add
imul
out
rcl
sbb
inc
dec
popa
inc
or
sub
jg
or
push
dec
pop
fistp
dec
push
cmp
sahf
sahf
imul
xlat
js
ins
sub
test
xor
xchg
mov
pop
outs
push
xor
inc
(bad)
imul
dec
(bad)
imul
mov
mov
les
dec
(bad)
in
or
sub
out
imul
add
jo
jo
rep
adc
dec
xchg
test
jno
or
retf
xor
pop
mov
loope
dec
clc
cmp
dec
jne
push
or
add
jo
loopne
sti
jge
jns
or
mov
sub
jge
sahf
sub
mov
shr
movs
mov
sbb
pop
arpl
dec
push
test
pop
in
xor
mov
ss
stos
mov
(bad)
ins
sar
jne
dec
dec
jnp
pop
sub
sahf
sbb
xor
inc
add
or
and
pop
xor
xor
and
into
sbb
aam
dec
loopne
xchg
dec
xchg
inc
mov
mov
mov
mov
fdiv
mov
aad
in
jb
dec
pusha
or
rcl
sti
mov
aam
push
xchg
adc
pop
(bad)
addr16
pop
inc
or
pop
mul
pop
or
into
mov
fdivr
cld
pop
push
daa
lea
test
imul
cmp
push
imul
and
push
imul
push
idiv
cdq
das
jae
jecxz
cdq
mov
pop
and
enter
pop
cmp
movs
or
cdq
rcl
mov
sbb
lds
adc
inc
fcom
push
jnp
sbb
lods
popf
(bad)
cmp
test
mov
imul
ins
push
pop
shl
(bad)
out
or
in
adc
gs
gs
(bad)
sbb
or
dec
mov
aas
and
xor
addr16
mov
das
rcl
pop
push
(bad)
sub
rdpmc
das
or
ja
xchg
jl
inc
scas
adc
mov
sub
inc
fstp
inc
sbb
shr
iret
pushf
test
mov
jne
fcom
lea
pop
pushf
ds
les
in
add
inc
mov
in
cdq
jle
dec
mov
mov
add
ret
mov
les
add
pop
jge
fsubr
pop
cs
je
or
je
or
enter
mov
mov
jo
or
(bad)
push
js
or
mov
mov
mov
add
pop
push
sub
cld
dec
sbb
and
mov
test
xor
loopne
add
es
sbb
xor
fmul
xor
and
add
and
movs
pop
or
fistp
inc
stos
or
out
hlt
inc
lods
and
pop
popf
jmp
outs
lock
add
mov
jl
add
fs
ror
pop
int3
test
int3
inc
mov
jmp
cmp
xchg
scas
enter
jecxz
mov
and
or
push
xor
and
pop
test
pop
mov
nop
mov
pusha
mov
jge
mov
sbb
sar
les
stos
mov
pop
sbb
add
push
add
add
or
pop
sbb
rol
mov
push
pusha
aas
inc
adc
mov
test
mov
lea
cmp
in
lods
out
and
fldenv
out
mov
lds
test
nop
cmp
dec
or
add
les
sbb
cs
test
add
repnz
push
push
push
sbb
cmps
mov
and
add
pcmpgtb
pop
sub
xchg
ins
call
test
ins
imul
jo
nop
xchg
push
push
rcl
ret
lds
adc
pusha
pop
push
out
fsubr
cmc
(bad)
push
retf
(bad)
adc
das
jbe
mov
arpl
xchg
or
and
or
sbb
les
jae
popf
fwait
or
pop
push
not
jo
push
bound
xor
or
pop
das
icebp
ins
adc
cmp
push
adc
inc
xchg
pop
xchg
xchg
xor
push
dec
inc
in
fdivrp
mov
sbb
not
adc
cmps
test
in
cmps
sbb
cwde
mov
ret
nop
int3
pop
pop
(bad)
in
(bad)
sti
movs
int
inc
and
pop
not
dec
cmp
push
addr16
aas
xchg
xchg
mov
rol
xlat
jl
leave
dec
adc
inc
push
sbb
mov
xchg
sar
adc
jmp
sbb
xchg
dec
(bad)
or
adc
adc
and
jle
adc
add
icebp
dec
popf
scas
cmp
fld
sub
sub
cmps
push
es
jbe
cmp
jmp
jo
movs
popa
call
pop
and
mov
fiadd
fwait
xor
push
mov
test
mov
add
or
adc
adc
mov
sbb
and
ss
and
xchg
pop
aaa
pusha
ret
test
jl
inc
pop
and
lahf
or
sar
add
dec
mov
into
and
push
or
clc
inc
pusha
imul
cmps
lods
cmp
add
fbstp
add
push
dec
adc
push
and
pusha
or
movs
mov
leave
je
mov
mov
inc
xor
xor
mov
loope
push
sti
dec
and
and
cmps
ret
inc
push
or
sub
icebp
and
(bad)
cmc
loopne
push
repnz
xchg
addr16
call
lock
sbb
inc
cmps
mov
add
sbb
call
test
lock
loope
movs
sub
cmp
jge
jns
sbb
inc
ins
inc
pusha
xchg
dec
ror
sahf
jp
xlat
inc
add
and
inc
dec
out
imul
dec
pop
std
arpl
adc
in
xchg
(bad)
push
mov
inc
add
adc
mov
add
sbb
or
push
ins
sbb
fst
enter
ret
cmp
cmps
aaa
imul
xor
cmps
add
stc
jmp
or
inc
pop
addr16
inc
or
add
xchg
push
push
mov
dec
mov
lock
das
cmp
push
add
or
push
adc
jnp
cmp
xor
das
inc
inc
rol
xlat
ret
add
lock
rol
adc
sahf
dec
jne
stos
je
inc
js
outs
xor
pop
fucomi
xor
mov
jno
add
adc
mov
test
fidiv
or
leave
inc
xor
es
setle
data16
ss
(bad)
(bad)
jle
adc
adc
pop
icebp
sub
sub
push
sbb
xchg
nop
jbe
jge
xor
push
and
in
nop
jbe
dec
pushf
mov
pop
lods
mov
push
pushf
jne
jg
pushf
inc
dec
jne
mov
jns
movs
dec
sbb
cmps
sbb
xchg
inc
jae
jnp
push
test
push
scas
mov
lea
sar
push
bound
dec
adc
pusha
mov
lahf
xchg
mov
push
dec
mov
lods
movs
fimul
inc
mov
dec
mov
in
or
test
mov
push
inc
push
cmp
mov
sub
call
add
mov
mov
push
or
das
jg
add
sub
aam
je
cld
xchg
mov
call
pop
xchg
lods
jmp
inc
nop
pop
push
movs
push
pop
inc
push
mov
mov
lea
dec
loopne
sbb
sbb
adc
inc
pop
arpl
mov
inc
dec
push
gs
in
into
xchg
mov
rol
sbb
dec
mov
es
jbe
push
cs
jne
sbb
push
sbb
jbe
xor
or
jmp
ds
inc
setle
loopne
sub
jne
mov
jmp
xor
sbb
dec
add
test
adc
inc
je
or
je
ds
test
je
push
fs
jne
cmps
ror
mov
push
ror
ror
fistp
lods
clc
jl
mov
add
xor
mov
pop
std
and
push
dec
inc
adc
mov
pop
or
add
or
cmp
inc
nop
xlat
add
aaa
dec
lods
push
mov
or
push
pusha
es
sub
aaa
outs
adc
push
sbb
jnp
and
aas
clc
dec
push
push
push
or
dec
sti
(bad)
jne
mov
and
ret
cmps
retf
dec
xchg
out
mov
adc
add
jno
ror
and
cmp
outs
push
out
or
ret
xchg
stos
xchg
nop
fucomip
and
(bad)
jne
(bad)
js
xor
(bad)
cdq
inc
xchg
daa
jle
das
jno
push
jmp
fnsave
sbb
add
mov
jecxz
dec
loopne
call
mov
sar
inc
sbb
push
sub
sbb
(bad)
movs
test
test
nop
pop
mov
test
in
adc
mov
mov
or
or
fiadd
xchg
or
mov
inc
sub
daa
mov
inc
mov
and
sbb
mov
or
test
xchg
add
jo
xchg
je
add
push
sub
and
pop
mov
xchg
icebp
push
mov
xchg
inc
sbb
jecxz
mov
push
addr16
fidiv
jns
jae
sbb
mov
or
out
inc
push
xchg
mov
jle
add
les
or
inc
call
jnp
bound
mov
add
pop
leave
or
adc
repnz
das
pushf
add
leave
cld
fisttp
and
mov
fidivr
sbb
bound
stos
adc
and
push
ja
les
xchg
and
sub
mov
cwde
mov
inc
push
add
and
sub
mov
out
ja
out
mov
pop
push
push
iret
ins
mov
sbb
or
ror
adc
pop
sub
in
and
test
and
loopne
cmp
adc
or
jns
dec
add
(bad)
sbb
pop
inc
test
adc
mov
inc
cld
mov
pop
and
mov
inc
mov
push
int
mov
and
mov
mov
or
lds
push
mov
push
mov
add
xor
lahf
jne
lods
push
or
adc
les
shr
(bad)
dec
lods
int3
mov
inc
or
dec
xor
add
mov
rol
lea
or
adc
std
ins
cmp
call
mov
daa
in
push
sub
dec
inc
dec
mov
nop
push
push
cmps
pusha
pusha
jmp
sbb
pusha
and
lds
pop
inc
pop
fcmovbe
or
cwde
jg
fcom
inc
pop
sbb
add
add
dec
popa
or
jmp
jb
pop
inc
aas
je
pop
stos
out
xor
dec
movs
adc
movs
sub
dec
popa
adc
mov
fstp
das
dec
inc
je
mov
lods
sub
ror
adc
cs
or
cmp
mov
add
xor
jmp
push
cs
xchg
test
enter
push
fnsave
out
inc
stc
adc
sbb
fwait
ja
out
or
cwde
adc
mov
add
mov
or
pop
(bad)
pop
fadd
lods
mov
mov
and
inc
pop
pop
lods
adc
pop
mov
mov
mov
xor
dec
fidivr
pop
popf
jl
jge
loope
xor
sbb
clc
mov
inc
xor
adc
cs
(bad)
mov
pusha
xor
pop
mov
sub
bound
aaa
cmp
in
and
psadbw
push
sub
sahf
add
bound
imul
xlat
ret
sub
jo
(bad)
xor
add
fwait
sbb
call
or
test
mov
daa
outs
push
or
lods
pop
adc
icebp
sbb
mov
or
mov
xor
xchg
jne
int
mov
xor
mov
sub
enter
popf
enter
pop
mov
push
lahf
push
and
cmp
jnp
pop
mov
sub
jg
cmp
out
sbb
clc
cmps
(bad)
mov
cmp
je
adc
cmps
mul
sub
pop
adc
adc
cmp
or
and
mov
inc
pop
mov
mov
outs
adc
cdq
xchg
sbb
arpl
xchg
in
dec
jg
mov
dec
ja
push
xor
sbb
sbb
push
call
ins
add
fldenv
or
in
jne
cmp
xlat
hlt
pop
and
or
cld
inc
inc
pop
push
inc
pop
pop
in
test
imul
jae
bndstx
cwde
add
cmp
sub
imul
nop
lea
sbb
xor
mov
subps
and
outs
je
or
add
mov
lock
xor
je
or
push
(bad)
enter
call
loopne
sub
repz
(bad)
stos
pop
pop
cmps
sbb
jle
lea
test
push
and
and
add
mov
(bad)
arpl
and
popf
adc
jmp
sbb
xchg
inc
fnstsw
mov
jg
jmp
adc
xor
popf
pop
cwde
mov
call
enter
pop
pop
arpl
std
push
inc
ret
and
daa
dec
retf
(bad)
pop
mov
mov
or
xor
dec
cmps
enter
mov
pop
push
push
push
add
xlat
femms
mov
push
test
das
ins
adc
pop
js
mov
xchg
in
push
bound
sub
es
add
iret
or
cmp
push
inc
scas
fild
dec
adc
mov
sbb
sub
cmp
fadd
mov
sbb
inc
aad
sub
adc
pop
adc
add
pusha
lahf
sub
pop
out
push
lds
mov
mov
hlt
xor
sbb
xor
mov
clc
mov
and
push
pop
loope
icebp
xchg
mov
or
push
adc
(bad)
dec
or
cmc
dec
neg
or
inc
push
mov
or
dec
(bad)
xchg
movs
movs
or
inc
adc
push
mov
enter
adc
inc
dec
popa
or
and
inc
mov
aas
es
add
push
hlt
mov
int3
pop
pop
pop
(bad)
rol
cs
mov
sbb
into
cmp
ror
inc
jne
xor
adc
sub
adc
adc
pop
jb
push
mov
mov
adc
mov
in
sub
mov
and
pop
rol
dec
jo
dec
mov
and
xchg
rol
add
adc
nop
inc
and
xchg
mov
ror
popa
lds
inc
inc
sbb
push
leave
xor
cdq
jnp
rol
add
leave
mov
xchg
ror
dec
inc
mov
(bad)
sub
pusha
jecxz
sbb
inc
mov
xor
stos
or
and
test
adc
push
mov
sbb
bound
pop
sub
jp
xchg
push
xor
pop
and
aaa
jnp
aam
xor
ret
int
mov
outs
cmps
add
xchg
shl
(bad)
cmp
jb
sbb
sbb
fbld
adc
and
add
pop
inc
test
mov
hlt
or
and
inc
sbb
jo
dec
mov
outs
mov
(bad)
mov
xor
(bad)
inc
repz
sub
int
out
test
hlt
jne
ss
xor
rcr
cs
or
add
mov
mov
lea
jns
fs
xor
shl
mov
adc
jo
in
or
and
aas
lods
sub
std
and
sbb
fcompp
pop
int
je
sub
jo
add
dec
pop
jp
add
xchg
and
scas
xchg
lds
cld
call
cmp
loop
ins
shr
out
xor
in
movlps
daa
clc
hlt
icebp
mov
leave
fwait
hlt
adc
enter
pop
lock
out
add
jbe
jo
sbb
fst
cmps
pop
hlt
mov
dec
push
sub
push
nop
sub
jb
xor
mov
lock
add
clc
cmp
add
sbb
mov
pop
movs
xchg
out
lock
(bad)
leave
xchg
xchg
add
jo
push
dec
and
inc
pop
pop
sub
js
xchg
inc
pop
(bad)
xchg
ficom
xor
test
adc
add
fisttp
mov
xchg
jne
pop
(bad)
adc
xchg
mov
push
mov
dec
jne
sub
stos
jbe
mov
mov
dec
push
adc
cmp
pop
dec
push
xor
push
jne
mov
jb
jns
or
push
aaa
and
add
int3
add
jns
test
lahf
in
add
inc
inc
fmul
sbb
ss
mov
fist
and
inc
(bad)
outs
sbb
inc
mov
mov
push
scas
test
(bad)
and
shl
jnp
lea
dec
or
add
jnp
push
add
nop
pop
and
push
pop
clc
mov
cdq
retf
das
xor
pop
or
sub
mov
push
xor
mov
pop
(bad)
aad
add
jl
push
xchg
jmp
xor
or
jnp
cmps
pop
dec
push
jge
pop
mov
leave
add
mov
pop
test
inc
iret
add
cs
fistp
and
pop
sbb
clc
mov
repz
adc
sbb
add
add
adc
in
add
outs
add
je
xchg
cmp
pushf
sbb
pusha
(bad)
sti
mov
pop
jmp
pushf
cmp
jp
push
into
je
inc
data16
mov
je
pop
adc
and
and
push
jecxz
icebp
push
jmp
fwait
sbb
inc
mov
pop
les
mov
and
and
push
dec
dec
js
lea
xchg
push
pop
imul
xlat
sbb
fst
cmp
and
(bad)
xchg
jmp
add
sbb
adc
mov
rol
inc
dec
pop
out
pop
retf
test
ins
adc
cmp
sub
cmp
(bad)
or
cmp
jne
pusha
fisubr
cmc
jge
je
sbb
inc
pop
cmp
xchg
cmp
sub
in
scas
sub
das
inc
xor
js
cmps
sbb
int
sub
mov
lods
push
dec
mov
inc
mov
jnp
or
and
xchg
adc
sbb
pop
test
push
cmp
push
inc
xchg
inc
or
inc
jne
enter
push
cmp
in
inc
push
dec
dec
add
push
or
pushf
ror
push
xchg
(bad)
pop
mov
sbb
clc
in
clc
stc
rcl
shl
js
dec
and
fs
mov
sub
add
dec
inc
push
mov
and
and
adc
cwde
movs
or
add
mov
sub
ret
xchg
jl
cmp
sub
ret
rol
in
inc
mov
sahf
add
adc
xchg
scas
inc
arpl
daa
scas
and
(bad)
xor
ret
add
nop
pop
push
mov
test
or
stos
sub
shl
test
cmp
lds
push
xchg
mov
adc
fcom
pop
xor
pushf
in
es
inc
add
inc
(bad)
loop
push
push
lds
es
xor
mov
sub
in
dec
rcr
addr16
rcl
lods
in
cmps
lds
push
int3
xor
xchg
xchg
(bad)
ds
sbb
rcr
mov
and
test
sbb
jns
jo
addr16
ror
and
fwait
sbb
adc
call
test
or
mov
jmp
push
and
mov
add
dec
ret
outs
sub
scas
sbb
rcl
sub
fimul
sbb
int3
(bad)
mov
fs
ret
mov
cs
jbe
in
iret
dec
push
das
mov
sbb
ins
daa
mov
push
(bad)
mov
retf
aaa
sbb
nop
aas
add
lar
xor
add
push
push
mov
xor
xor
sbb
pop
aad
leave
or
add
mov
sub
dec
push
or
add
push
pop
and
inc
sub
lods
bound
(bad)
out
fs
es
xor
add
(bad)
ins
dec
adc
and
xchg
sbb
div
(bad)
adc
add
dec
xor
pop
test
or
int
sbb
stos
lea
shl
outs
mov
or
and
sub
and
pop
adc
jmp
xchg
pop
mov
imul
add
sti
inc
retf
sub
xlat
int
mov
mov
or
mov
pop
mov
sub
xchg
adc
cmp
enter
push
or
sbb
mov
jecxz
lahf
(bad)
rol
xchg
and
inc
sub
inc
inc
lock
mov
call
in
retf
lods
jl
fstp
mov
and
inc
mov
and
or
inc
dec
ja
sub
add
or
sysenter
and
sbb
push
pop
sbb
sbb
sbb
mov
es
ror
in
sbb
and
push
adc
mov
push
mov
or
and
pop
fsubr
push
in
loop
ja
mov
jb
xor
jae
adc
imul
(bad)
push
inc
dec
sbb
push
cmp
sbb
push
xchg
pop
pop
pop
and
mov
(bad)
rol
cmc
inc
call
in
fcomp
fimul
xor
enter
sbb
or
or
add
xor
inc
sub
fisub
cmp
enter
mov
mov
jmp
push
cmp
xor
mov
push
sub
push
pop
cmp
xor
lds
mov
psrlq
popa
and
sbb
ret
aaa
sbb
repnz
pop
scas
push
(bad)
fld
pushf
push
xor
xor
ret
cmp
loope
les
adc
pushf
(bad)
pop
mov
mul
outs
stos
es
fld
push
sub
sbb
or
in
jnp
daa
ds
(bad)
shl
mov
sbb
push
fld
pop
cmp
adc
jo
push
inc
enter
xor
and
fisttp
ins
daa
cmp
je
push
pusha
test
int3
mov
adc
xchg
push
test
xor
dec
or
and
wrmsr
xor
add
xchg
jb
fnstsw
cmp
push
cmp
(bad)
cmp
or
lds
call
sub
cmp
cmp
in
xor
fimul
or
inc
xor
jns
(bad)
fild
cmp
xlat
xchg
and
aaa
ror
jb
cwde
pop
and
movs
movaps
mov
and
gs
mov
pop
jmp
mov
and
sbb
inc
mov
mov
dec
je
jmp
mov
lea
in
and
mov
es
aaa
add
xlat
xor
xor
aaa
adc
outs
or
adc
cdq
aaa
adc
iret
jg
push
xor
pop
loope
loopne
push
retf
xor
sbb
arpl
mov
push
test
sbb
hlt
jnp
adc
dec
cmp
sub
sbb
jnp
add
sbb
fld
loopne
sbb
and
call
fimul
loope
xchg
pop
lock
adc
or
inc
stos
mov
inc
sbb
out
mov
lea
stc
inc
jge
jmp
(bad)
shl
and
fmul
in
aaa
lods
hlt
and
(bad)
adc
addr16
and
inc
xchg
imul
push
and
xchg
sub
lea
pop
xchg
push
push
adc
sub
bound
aad
add
mov
rcl
add
or
outs
sub
icebp
retf
mov
jne
xlat
or
adc
pushf
add
aaa
and
add
jo
add
xchg
cdq
push
push
add
imul
xor
xchg
(bad)
jb
dec
rol
dec
sub
cmp
test
pusha
mov
sub
popf
(bad)
packuswb
aas
sbb
push
fst
pop
mov
retf
shl
sbb
mov
xchg
fld
mov
push
sbb
mov
movs
jne
sub
icebp
push
or
das
dec
sub
mov
dec
fadd
mov
dec
movs
add
jns
fistp
test
xchg
push
xlat
jge
pop
mov
inc
ja
mul
push
mov
fcmovnbe
test
adc
or
dec
adc
inc
adc
pop
dec
and
mov
cmp
add
sbb
(bad)
xchg
push
out
adc
in
movhps
sbb
dec
sub
xchg
sbb
(bad)
and
dec
test
add
sbb
adc
mov
adc
call
cmps
xchg
fcomp
cdq
pop
sbb
jae
adc
xchg
mov
push
fsubr
sub
mov
xor
cmp
clc
push
bound
cs
daa
or
daa
or
mov
iret
rol
sbb
mov
rcr
mov
and
sub
xor
je
cmps
and
fidivr
add
and
xchg
jbe
fs
fnop
jnp
pop
or
xor
mov
pusha
addr16
cmp
fbld
arpl
cmp
add
in
imul
or
mov
adc
ds
mov
or
xchg
mov
xchg
and
and
fwait
xor
inc
or
adc
sbb
mov
call
xor
mov
lea
(bad)
movs
aas
js
ins
xor
lock
cmp
jbe
pop
xor
sbb
sbb
rcl
outs
add
jl
pop
cmp
dec
int
lds
inc
je
cs
mov
adc
cmps
dec
mov
cmps
in
outs
push
(bad)
pop
hlt
stos
repnz
fadd
inc
in
add
nop
lock
nop
sub
dec
adc
in
and
add
ins
lods
and
xchg
ins
dec
dec
jnp
sub
scas
mov
mov
call
adc
aaa
popf
out
sbb
pusha
sbb
push
jne
pusha
xor
icebp
and
jp
cmp
out
xchg
(bad)
and
mov
mov
add
outs
cmp
or
popa
sbb
dec
arpl
out
mov
pop
adc
jp
inc
xchg
xchg
mov
xor
adc
push
pusha
pop
movs
fisttp
test
and
fdivr
and
sbb
es
out
sbb
inc
sub
dec
ins
sub
sub
stos
inc
and
sub
in
sbb
or
div
pop
gs
mov
and
and
movups
jmp
ret
int3
mul
dec
movs
nop
mov
xchg
iret
jae
lock
push
mov
clc
cwde
out
stos
push
mov
cmp
shl
in
aad
sbb
dec
push
xchg
sub
push
pop
ffreep
ret
push
adc
push
pushf
inc
aaa
jns
sbb
push
jg
adc
test
sub
push
push
and
sbb
sbb
adc
sbb
ins
pop
push
outs
mov
(bad)
fimul
movs
fbstp
test
ror
xchg
cmp
jl
sbb
movs
cmp
jbe
lods
xor
daa
or
adc
fdiv
jno
jge
inc
inc
nop
lea
sub
test
(bad)
sbb
inc
lahf
dec
mov
mov
clc
or
retf
jmp
dec
push
test
test
push
fisub
sub
cmp
jl
xor
dec
add
or
repnz
inc
mov
pop
mov
enter
mov
test
pop
add
in
ins
aas
or
or
nop
cs
jb
adc
(bad)
pop
loopne
xor
add
pop
push
data16
mov
ror
jge
xor
arpl
mov
jmp
xor
jle
pop
add
xchg
push
aas
into
dec
les
cmp
test
adc
push
cmp
add
stos
sar
dec
lods
cs
pusha
cdq
movs
shl
cmp
sub
and
pop
mov
ret
or
dec
sub
adc
jne
fdivr
imul
xor
jnp
enter
push
jmp
dec
aam
arpl
cmp
les
mov
and
ror
ret
xor
or
jmp
js
or
sahf
fnstcw
cmps
pop
cmp
jg
loopne
dec
enter
dec
sbb
push
push
add
loopne
push
movs
mov
add
adc
dec
inc
adc
sub
cmp
test
mov
pop
pop
aad
stc
and
or
adc
push
movs
pop
inc
pop
pop
and
movs
sbb
sub
sbb
push
sbb
inc
inc
jge
pop
xchg
push
cld
push
cmps
inc
lea
inc
sbb
or
cs
add
mov
sbb
enter
xlat
push
and
or
and
addr16
push
ins
mov
mov
loop
sub
adc
pop
push
dec
add
jo
push
ds
or
push
mov
adc
test
inc
add
ret
test
adc
push
(bad)
adc
pop
jecxz
mov
clc
xor
mov
sbb
test
sbb
inc
cmp
int
sub
sbb
adc
sbb
nop
cmp
xor
repnz
shl
or
pop
ds
inc
xchg
mov
adc
pop
jmp
adc
scas
add
xchg
idiv
xor
sbb
or
sbb
push
push
test
and
cmc
xchg
arpl
les
mov
sbb
inc
fsubr
dec
dec
xchg
lock
adc
in
mov
mov
shr
ja
(bad)
mov
mov
sbb
imul
packsswb
fwait
pop
add
push
push
ret
xlat
sub
xor
rcr
outs
aam
xchg
ret
gs
sbb
or
or
adc
or
push
(bad)
lods
(bad)
cmps
(bad)
faddp
mov
shl
out
mov
sbb
std
adc
cld
std
and
push
sub
mov
std
mov
push
cld
shl
(bad)
and
pop
rcl
mov
test
push
add
jbe
mov
xor
retf
inc
inc
stos
clc
test
dec
or
out
jecxz
dec
adc
pop
and
jo
inc
js
pop
ret
jp
push
es
pop
cmp
(bad)
cs
mov
nop
inc
jns
dec
fcmovu
and
in
sub
push
sbb
loope
inc
jns
sbb
addr16
rcr
ins
adc
xchg
ret
push
and
ds
xor
inc
mov
sub
ins
cdq
das
adc
or
xlat
dec
mov
sbb
add
push
in
jle
cmps
jle
add
mov
in
mov
xor
push
neg
shl
ret
push
and
cmp
aaa
ds
aad
and
dec
cmps
sar
sbb
fcom
cli
in
cmp
out
inc
sub
and
aas
sbb
or
cld
cli
and
xor
in
adc
inc
jb
in
pop
sub
dec
cmc
les
jno
or
pop
inc
or
xor
inc
push
pop
xor
rol
cdq
push
push
or
or
sub
mov
xor
hlt
sti
in
adc
cld
and
sbb
xchg
das
sbb
xor
dec
mov
mov
and
push
add
mov
xchg
inc
sub
in
sub
mov
cli
(bad)
push
sbb
add
popa
xchg
add
inc
pop
jmp
push
pop
scas
sbb
pop
inc
sbb
xor
add
mov
ds
mov
retf
fdivr
inc
inc
adc
xor
push
lods
inc
push
std
cmp
mov
sub
mov
cmp
hlt
lock
or
aaa
xchg
and
cli
push
jne
dec
push
cmp
(bad)
(bad)
lock
dec
push
adc
jne
pusha
and
leave
add
push
and
add
jl
ja
sub
div
push
pop
call
and
enter
aaa
or
ror
or
cwde
int3
test
pop
push
xchg
xchg
mov
iret
adc
in
lods
add
or
mov
(bad)
sbb
dec
cmp
adc
push
sbb
dec
mov
les
adc
add
inc
sub
jg
ds
test
jge
and
adc
sbb
push
and
add
in
cmps
push
and
jne
sub
inc
inc
rol
pop
or
rcl
push
cmp
inc
dec
pop
jecxz
cli
or
ds
cmp
mov
sbb
adc
inc
sbb
xor
(bad)
add
sbb
mov
rol
sbb
xor
sbb
dec
lahf
enter
push
push
inc
(bad)
adc
mul
dec
sbb
sbb
scas
ret
inc
sbb
clc
mov
sub
push
fistp
adc
or
pop
xchg
test
cmp
inc
sub
out
adc
adc
or
jmp
dec
and
test
aam
mov
pop
dec
fild
add
fcom
ins
fwait
mov
fstp
fistp
jmp
push
dec
jo
sti
(bad)
push
cmp
adc
pushf
sbb
push
pop
pop
jg
mov
mov
jle
imul
or
push
mov
sub
cmp
and
cmp
sub
in
(bad)
push
sbb
or
es
cmp
(bad)
(bad)
mov
daa
and
inc
add
mov
mov
sub
daa
sub
(bad)
loopne
push
fcom
pusha
add
xchg
ja
leave
sub
add
mov
sbb
mov
mov
lods
mov
lea
(bad)
adc
adc
cmc
pop
push
test
and
cmps
cmp
sub
pop
adc
mov
add
xor
xor
sub
and
pop
and
mov
pop
inc
push
and
pushf
sub
ins
jmp
sbb
jg
outs
add
out
mov
aam
sbb
das
inc
adc
test
xchg
sub
mov
test
push
add
int3
movs
add
sub
js
xor
inc
sbb
inc
out
(bad)
cmps
repnz
cmp
jmp
jg
sub
stc
sbb
outs
and
mov
adc
mov
fdivr
add
sbb
or
mov
or
and
xlat
loope
add
add
xor
or
es
ficomp
in
cmps
dec
test
imul
aaa
ins
sar
sbb
sbb
bound
repz
inc
fidivr
out
fcomp
in
and
adc
or
pusha
pusha
push
mov
movs
cmp
ret
dec
fnsave
leave
int
aas
sbb
in
test
and
add
push
or
adc
push
popa
fwait
pop
mov
mov
cwde
(bad)
mov
cwde
test
jp
dec
add
test
mov
cmc
(bad)
xlat
and
and
inc
jg
call
pop
adc
xor
inc
push
xor
sub
ins
xchg
and
mov
push
xlat
mov
fidiv
pusha
aas
aaa
ret
lods
add
sub
inc
shl
cmps
fistp
or
loope
ret
cmp
push
add
and
sti
jl
mov
push
call
int3
aad
fdiv
mov
dec
mov
cmp
loopne
dec
out
in
inc
leave
fcomp
inc
cmp
sub
(bad)
popaw
add
loopne
push
pop
out
adc
mov
mov
test
or
inc
xor
xor
xchg
or
mov
or
xor
arpl
cmc
dec
(bad)
mov
jle
js
cdq
std
mov
pop
cmp
je
(bad)
les
mov
(bad)
in
or
aas
dec
sbb
mov
xchg
sbb
rcl
jp
pop
(bad)
cmp
add
cmp
cmp
jl
inc
xlat
in
or
sub
xchg
ret
add
dec
mov
or
dec
adc
pop
or
cdq
fcom
pop
dec
fsubr
aam
or
call
inc
inc
adc
bound
mov
pop
outs
repz
or
in
ins
(bad)
mov
and
cs
cwde
push
pop
lahf
in
sub
test
pusha
adc
jg
jmp
mov
pop
push
cli
lods
bound
or
int3
push
adc
test
shl
xor
mov
mov
repz
leave
xchg
enter
jmp
(bad)
je
adc
ret
jmp
popa
test
pop
call
mov
in
sbb
xchg
add
test
xor
pop
pop
pusha
and
jmp
push
fwait
popa
mov
stos
pop
or
or
xchg
test
mov
mov
push
dec
xor
mov
xor
ins
loope
mov
and
sbb
sub
add
push
xchg
sub
mov
mov
adc
jae
dec
cmp
jmp
jmp
and
fcomip
gs
(bad)
idiv
clc
cmp
sbb
pop
pop
add
xor
cmp
ins
adc
lahf
and
or
or
cmp
xor
add
nop
add
xchg
mov
rcl
xor
xchg
sbb
mov
retf
or
push
jb
add
pusha
les
and
rol
add
add
xor
jno
xor
add
adc
pop
and
js
add
pusha
aad
sbb
jnp
nop
and
push
xchg
cmp
add
mov
mov
or
sbb
or
pop
mov
pop
or
or
pop
lods
inc
sbb
dec
dec
sub
push
add
mov
mov
adc
or
add
inc
push
jnp
pushf
cwde
jo
sub
lock
inc
and
std
mov
repnz
aam
xlat
retf
clc
or
sbb
clc
xor
add
xchg
mov
and
adc
nop
xchg
cli
or
(bad)
int
das
cmp
test
sbb
mov
cwde
mov
scas
push
test
dec
and
data16
sub
add
clc
cmp
jbe
ffree
mov
or
or
sbb
fdivp
imul
int3
mov
mov
les
sbb
js
jge
push
sub
add
sbb
add
xchg
adc
sub
fisttp
scas
(bad)
loope
popa
or
test
je
jecxz
pop
add
loopne
retf
or
popa
fcomp
jne
adc
fld
dec
mov
rcl
inc
xor
inc
xchg
dec
add
jmp
mov
sbb
fdiv
test
cmps
sub
ja
popa
pop
cs
dec
(bad)
mov
test
push
aad
jb
mov
and
or
inc
mov
sbb
sbb
add
inc
sbb
xchg
sub
imul
(bad)
(bad)
and
jnp
dec
jmp
pop
shl
jo
(bad)
sahf
hlt
and
add
push
hlt
imul
scas
popa
mov
or
push
or
ret
fiadd
or
pop
inc
pop
int
call
pusha
sbb
ins
jge
cmp
aaa
sub
dec
pop
dec
imul
loopne
xchg
mov
dec
add
add
cmps
xchg
ins
out
inc
pop
mov
and
xchg
inc
mov
mov
push
and
mov
imul
enter
inc
cs
xchg
push
mov
dec
shr
xchg
not
pushf
or
and
in
(bad)
sbb
les
cmp
xchg
inc
push
adc
xchg
push
xchg
clc
adc
adc
rol
jge
cmp
push
imul
pop
xor
bound
call
call
scas
sbb
add
idiv
push
dec
popa
pop
add
mov
add
in
inc
sub
loope
sub
xchg
daa
sub
in
jno
sub
hlt
cmp
xchg
add
jo
cdq
xor
jb
inc
or
pop
sub
inc
sbb
fstp
fwait
and
jmp
iret
(bad)
dec
and
jge
enter
adc
nop
fild
arpl
xor
lods
mov
and
adc
cld
jne
and
fstp
inc
pop
fcomp
jne
les
push
pusha
sar
lock
mov
and
add
xor
add
add
jmp
add
pop
or
inc
cmp
and
loope
mov
and
sbb
pop
shl
je
mov
inc
cmp
out
push
scas
or
in
ds
cmove
hlt
pop
test
and
and
sbb
sub
fld
dec
mov
in
daa
xor
pop
rcr
mov
arpl
mov
or
push
add
mov
fmul
add
js
jmp
push
jnp
jns
adc
or
loope
or
(bad)
xlat
push
aam
xchg
and
or
or
fcmovnb
js
fld
sbb
in
mov
add
cmp
jmp
gs
pop
cmp
ins
mov
inc
pop
push
cwde
fisttp
jmp
adc
imul
mov
or
pop
js
test
dec
and
clc
rcr
sar
add
lds
inc
ins
in
ss
inc
pop
aam
inc
inc
sahf
psubq
xor
sti
mov
mov
daa
add
cmps
or
test
fcomp
xor
and
push
push
sub
hlt
mov
gs
and
(bad)
sti
push
hlt
test
adc
xor
dec
hlt
ins
loop
pop
mov
in
rcr
push
and
dec
pop
iret
xchg
lods
imul
push
pop
add
fisttp
not
js
mov
xchg
ret
jae
and
cmc
scas
cmp
sub
or
pop
rol
cwde
jae
cmp
sbb
xchg
inc
xchg
in
ror
nop
in
in
xor
cmp
pop
dec
retf
and
in
lock
sbb
inc
shl
pop
add
sbb
push
fsub
das
mov
or
inc
mov
add
enter
test
xor
jo
adc
sbb
ss
cmp
adc
test
or
inc
sub
or
enter
clc
hlt
cdq
rol
lods
sub
call
inc
pusha
adc
adc
add
daa
mov
mov
mov
inc
cmp
test
js
adc
dec
push
add
jo
inc
ja
and
daa
mov
sub
adc
xor
or
xchg
push
jmp
outs
xchg
add
ror
loope
clc
xchg
adc
out
shr
or
or
mov
fiadd
sbb
hlt
push
sbb
mov
test
loopne
push
jmp
cmp
clc
cmps
sub
xor
xor
xor
and
mov
jb
xchg
adc
lea
(bad)
and
push
add
adc
cmp
xor
xor
jge
fist
rcl
xor
mov
test
je
push
or
lahf
push
(bad)
gs
mov
arpl
or
cmp
pop
sbb
repnz
and
inc
arpl
push
(bad)
pop
sbb
popa
pop
arpl
mov
adc
xchg
push
test
push
in
gs
and
mov
fstp
xchg
xchg
lods
xchg
lods
fsubp
push
mov
loopne
mov
push
jo
fld
xchg
and
out
jne
clc
or
xor
dec
jno
cmp
or
fcmovbe
mov
fisubr
push
repz
and
sahf
out
jae
aad
and
dec
pop
cdq
(bad)
sbb
es
sahf
cmp
pop
(bad)
mov
daa
pushf
sub
stc
cmp
stos
loope
sub
pop
ins
(bad)
(bad)
aas
fiadd
sub
int3
data16
push
and
sbb
cmp
in
adc
mov
sbb
cmp
jge
dec
and
push
and
ror
dec
dec
add
les
jmp
cmp
lods
cmp
jbe
imul
pop
aaa
cmp
mov
inc
mov
pusha
or
dec
or
aas
mov
cmp
fld
fdivr
fstp
fld
cwde
rcl
or
ficom
fsub
call
fcom
jns
pop
ins
cmp
jns
sub
cs
cs
lods
in
jl
rol
mov
test
sub
cs
add
or
sub
bound
cmp
cmp
rol
inc
jb
ror
call
leave
jle
mov
mov
xor
ficomp
sub
push
push
leave
xchg
xchg
sar
cwde
xchg
or
sbb
pop
mov
ds
cdq
add
or
ins
and
sub
sub
loopne
fst
xor
ins
sub
fchs
sub
and
mov
and
call
dec
in
fistp
mov
and
and
dec
cmp
repnz
add
add
and
add
sbb
push
or
push
mov
cmps
jge
push
or
js
pop
jb
cmp
push
or
jbe
ja
or
outs
call
movs
xor
xor
(bad)
xor
or
cmps
add
(bad)
mov
pop
mov
call
push
push
xor
pushf
je
inc
lar
repnz
js
jns
sub
ins
dec
sub
adc
mov
loopne
and
inc
mov
cmp
and
jnp
push
push
pop
cmps
xor
jle
jmp
pop
push
mov
and
cmp
pop
aas
sub
sbb
(bad)
retf
jmp
push
and
mov
dec
jl
lss
jne
adc
xor
or
lods
xor
and
inc
cld
outs
cmps
std
lods
lds
mov
inc
adc
loope
aas
es
out
xchg
cs
cs
inc
nop
retf
inc
loop
and
and
adc
int3
sub
inc
mov
into
jne
test
cmp
sub
fisttp
and
pop
jnp
stos
enter
test
mov
iret
xchg
push
iret
(bad)
adc
sub
sub
sub
shl
sti
sbb
jbe
retf
sbb
daa
adc
adc
adc
sbb
sbb
hlt
test
daa
push
jmp
sbb
add
lods
(bad)
clc
inc
outs
cmp
jle
pop
sbb
jmp
push
cmp
gs
add
(bad)
nop
or
ja
sub
fs
jns
or
sub
(bad)
push
cli
add
ror
mov
jmp
arpl
mov
cmps
ss
or
cmp
adc
add
test
adc
fsubr
sbb
(bad)
cmp
test
imul
stos
sub
inc
aam
add
neg
inc
cdq
sbb
or
into
cli
into
call
or
push
mov
push
jecxz
and
pop
cs
(bad)
in
in
in
sbb
jae
nop
call
adc
shl
fist
stc
cmp
and
add
outs
sub
sub
mov
push
loop
push
or
mov
inc
(bad)
push
sti
inc
or
jmp
pop
push
mov
pop
push
fs
in
setae
dec
pop
fistp
enter
daa
or
call
in
movs
ror
lock
pop
pop
in
sbb
pusha
loop
mov
(bad)
shl
sub
xor
or
cdq
inc
pop
or
loopne
dec
or
add
mov
das
push
adc
(bad)
sbb
int
sbb
lock
ins
mov
mov
inc
fstp
add
nop
fist
jg
mov
pop
outs
lds
lock
rol
loopne
(bad)
cmp
push
dec
push
push
fisttp
imul
dec
jmp
sub
loop
jae
push
cmp
int
call
pop
ficom
mov
jo
call
shr
xchg
add
repz
cmp
adc
pop
mov
sbb
movs
add
and
sbb
adc
xchg
sahf
pushf
retf
shl
clc
ret
bound
aas
pop
sbb
dec
in
xor
(bad)
stos
xor
fs
daa
adc
fimul
clc
inc
inc
outs
test
mov
cli
movs
(bad)
movs
out
adc
cwde
and
popf
inc
adc
popf
and
popa
pop
cmp
mov
mov
lods
and
cs
cmp
xlat
xor
call
pusha
popa
mov
sbb
adc
shl
push
mov
je
jp
xor
xor
cmps
fld
pop
xor
test
mov
jae
jl
out
adc
and
iret
jo
dec
pop
mov
mov
xchg
mov
cmp
mov
xor
rcr
mov
xchg
nop
ins
and
ds
or
push
pop
dec
rol
fidivr
movs
add
adc
lods
imul
mov
cwde
enter
or
sub
out
mov
mov
call
jmp
imul
dec
stos
add
sbb
movs
fstp
adc
xor
jnp
xchg
cld
mov
sbb
fdivr
cwde
mov
shl
or
mov
cmps
or
stos
xor
mov
push
fwait
push
shl
jl
jge
loopne
xor
or
push
add
or
mov
or
or
mov
call
or
dec
ror
movs
pop
stos
fild
int3
int3
push
inc
bound
jmp
dec
pop
cs
dec
dec
adc
pusha
test
pop
leave
in
ficom
pop
or
and
mov
push
push
jno
outs
test
mov
adc
je
mov
mov
pusha
add
lahf
sahf
(bad)
or
pop
lahf
mov
loop
mov
add
fisttp
ret
add
sbb
and
pop
hlt
push
or
push
sub
jle
sub
add
popa
jmp
xor
add
jg
xchg
in
xor
mov
xor
sbb
in
push
sti
dec
imul
shr
sti
aam
fisub
sub
rcl
fisttp
call
add
fnstsw
mov
adc
sub
dec
or
sbb
inc
nop
and
xchg
push
xchg
or
popa
xor
jnp
push
sti
(bad)
xor
dec
sbb
adc
inc
adc
pop
xor
adc
cmc
xchg
sbb
push
sbb
sbb
mov
nop
das
cmc
jmp
adc
maskmovq
idiv
rol
pop
inc
ret
cmp
addr16
push
add
clc
or
add
push
dec
jno
cmp
or
inc
daa
cmp
or
mov
adc
mov
xchg
sbb
adc
out
or
call
xchg
sti
adc
and
mov
or
mov
xor
jge
fidivr
dec
push
mov
mov
shl
cwde
jge
xor
and
ins
lods
loope
es
mov
xchg
mov
sbb
repz
cmps
inc
sub
add
pop
and
push
push
adc
sbb
arpl
outs
dec
adc
add
sub
pop
pop
adc
scas
xor
nop
pop
je
cmc
cmps
test
push
dec
or
inc
push
add
pop
stos
pop
jbe
or
sar
inc
push
and
fistp
adc
outs
nop
and
je
ret
and
or
enter
cmp
rol
or
pop
push
mov
rcl
or
jg
sub
pop
mov
sbb
sub
sbb
sbb
retf
call
sub
shl
cmp
pop
add
dec
or
adc
pop
ret
retf
popf
jne
(bad)
or
sbb
into
mov
fwait
add
cmc
stc
sub
pop
mov
and
stc
out
mov
mov
cmp
imul
xchg
cmp
push
push
cmp
faddp
fdivp
clc
xor
xchg
pop
inc
inc
dec
push
fisub
pop
ret
or
and
fsin
sti
dec
and
dec
cmp
ja
mov
addr16
add
out
mov
xchg
rcl
shl
cmps
sbb
cmp
dec
mov
push
int
(bad)
out
fdiv
sbb
or
inc
ret
dec
loopne
dec
or
jns
ja
sbb
dec
cmp
mov
jbe
jne
scas
sbb
jne
jge
or
test
sahf
addr16
mov
ror
in
in
sahf
ja
or
add
sbb
sbb
jns
sub
jmp
or
pop
or
ja
repz
repz
push
pop
pop
jns
xchg
retf
mov
jmp
or
push
or
add
push
lods
xor
bound
out
mov
cmp
jmp
daa
and
out
or
mov
add
call
adc
loopne
or
sbb
aad
ret
js
xor
hlt
out
sbb
adc
xor
int
cdq
clc
xor
sar
pop
inc
add
xor
mov
inc
pop
lea
adc
mov
mov
or
fidiv
xchg
(bad)
mov
xchg
pop
add
test
scas
call
push
cmp
repz
stos
mov
out
cld
push
inc
and
inc
dec
sahf
out
jl
pop
ins
div
pop
push
rcl
pop
pop
pop
out
fidiv
lea
iret
and
mov
or
pop
cdq
adc
lds
adc
cld
xor
mov
test
dec
add
pop
and
mov
fs
push
leave
fstp
sub
sbb
nop
mov
adc
cmp
adc
jl
push
loopne
pop
int3
adc
sbb
and
js
shr
cmp
fucomi
push
jb
xor
mov
xchg
loope
push
out
les
add
mov
add
mov
cmp
mov
repz
sbb
xchg
xchg
adc
test
sbb
inc
xor
inc
lock
inc
or
sub
shl
ja
or
(bad)
out
add
add
push
lods
fmul
pop
ret
and
std
shl
repnz
daa
mov
or
push
inc
jo
or
pop
inc
cmp
sbb
push
sbb
add
fimul
sub
cmps
(bad)
(bad)
mov
sub
jo
mov
inc
cmp
push
dec
hlt
xor
fbstp
push
shl
mov
mov
imul
xchg
push
mov
lock
adc
(bad)
mov
pop
jae
xchg
push
shr
inc
xchg
sahf
add
enter
sub
push
leave
jne
cmp
add
ds
inc
nop
es
pop
daa
leave
push
lock
sub
in
lds
adc
inc
pop
bound
hlt
inc
inc
fistp
ja
cli
lods
daa
mov
jns
arpl
mov
sbb
cmp
ffree
xchg
pop
push
test
sbb
popf
movs
data16
dec
ret
jne
adc
(bad)
jmp
lahf
adc
adc
adc
add
imul
jne
jnp
xor
lea
push
cmp
add
je
test
icebp
js
inc
xchg
push
movs
loopne
inc
movs
cmc
inc
push
idiv
pop
xor
aaa
add
outs
jo
cmp
ds
ror
push
and
fs
ds
test
xor
mov
cli
inc
dec
test
sbb
push
in
sbb
fadd
scas
xchg
push
cmp
out
leave
dec
dec
or
iret
pop
ret
mov
(bad)
outs
aad
nop
mov
lea
jmp
mov
adc
xchg
xchg
popf
inc
enter
or
push
pop
adc
test
sbb
xchg
push
add
fdiv
icebp
push
mov
call
rcr
inc
push
cmps
dec
push
xchg
inc
inc
and
adc
shl
inc
out
add
(bad)
and
push
add
dec
dec
or
push
pop
cs
pop
and
dec
sbb
push
and
adc
adc
add
add
cdq
jbe
xor
sbb
or
test
add
add
and
and
adc
daa
push
ret
test
push
movzx
iret
test
inc
sub
and
repnz
movs
add
popa
adc
inc
cdq
dec
fwait
push
xor
es
lock
mov
adc
xor
mov
push
pop
je
dec
pop
pop
xchg
pop
dec
je
imul
ret
xor
outs
leave
cmc
std
lea
inc
test
inc
cmp
adc
js
jge
cmp
mov
pusha
mov
jns
lods
aaa
dec
inc
(bad)
jmp
jle
mov
icebp
inc
mov
mov
xchg
cmp
mov
adc
out
pusha
add
sbb
add
aas
aam
stos
movs
daa
movs
dec
rcl
adc
in
inc
sar
add
je
dec
jne
add
pusha
xor
dec
fdiv
mov
dec
inc
or
lds
popf
fcomp
in
stos
inc
cmp
add
sub
and
inc
push
add
addr16
test
add
sbb
in
adc
xchg
inc
js
popf
out
ins
push
or
call
push
bound
ror
sbb
inc
out
lea
push
or
clc
or
sbb
lods
scas
and
cs
or
lock
imul
js
mov
je
pop
adc
sbb
nop
mov
push
xor
add
dec
add
fisttp
sub
sub
adc
pop
lock
push
mov
add
push
jns
push
lahf
add
rcl
retf
dec
fdiv
pusha
int
leave
mov
cwde
sbb
add
mov
add
jne
sbb
adc
test
sbb
or
inc
pop
cmp
add
test
jle
out
xor
cmp
loopne
and
out
xor
inc
cmp
jmp
jp
xchg
push
fistp
inc
jmp
arpl
test
xchg
sub
push
adc
push
xchg
mov
cmps
gs
lds
test
dec
adc
rol
call
pop
ja
out
inc
aas
add
add
pushf
ds
jmp
sbb
or
mov
shl
jmp
test
dec
push
push
ss
iret
sub
adc
movs
xor
ja
dec
daa
add
xor
imul
mov
add
or
dec
cdq
clc
or
add
jge
fist
xchg
sbb
enter
jmp
dec
push
mov
mov
jle
dec
imul
jno
or
call
lahf
xlat
outs
ins
push
je
xor
or
in
ins
je
jmp
jns
gs
pop
mov
xor
xchg
or
push
inc
test
sub
xchg
dec
sbb
shr
pop
adc
adc
push
mov
push
jbe
adc
test
mov
pop
addr16
or
xor
dec
clc
sbb
imul
push
add
aas
mov
add
add
adc
sub
pop
dec
int
test
push
ret
push
into
cmp
(bad)
out
stos
ret
pop
adc
ror
and
aas
retf
icebp
sbb
aaa
shl
ror
sub
aaa
adc
and
add
sbb
(bad)
fmul
mov
push
push
adc
rcl
cmp
add
movs
or
and
cmp
dec
jae
in
movs
pop
je
std
es
jp
retf
jne
dec
sub
inc
popa
fucomip
sub
call
es
out
nop
pop
lea
dec
test
pushf
imul
jo
xchg
pop
ret
mov
adc
int3
jp
xchg
push
mov
sbb
sbb
cmp
add
add
mov
outs
and
sti
sti
test
les
and
or
out
hlt
enter
cld
fsubr
sbb
ja
enter
cmps
(bad)
cmp
jns
je
push
xor
jo
xor
mov
dec
and
outs
add
dec
nop
js
jp
push
ret
add
sub
adc
pop
out
loop
xor
or
dec
mov
add
jae
arpl
imul
or
xor
jne
mov
adc
push
retf
fmul
loopne
add
or
or
jne
ret
xchg
or
jle
(bad)
mov
push
xchg
movs
pop
movsx
cli
fsubr
jecxz
aad
fsubr
es
pop
fcomp
dec
cmp
js
adc
imul
push
adc
ret
cmp
ds
push
das
shl
pop
inc
xchg
jmp
icebp
jmp
sbb
sub
in
add
sub
ret
push
test
adc
pop
xor
packsswb
push
sti
sub
ss
cld
xor
dec
add
retf
fld
mov
or
ret
cmp
push
mov
outs
jnp
cmp
push
lds
pminub
cmps
cmp
ds
or
stos
sbb
sub
inc
mov
and
clc
lods
rcl
and
jge
imul
cmp
jp
jge
push
or
add
test
popf
push
jmp
je
fdiv
addr16
inc
pop
push
faddp
daa
sub
inc
adc
pop
lahf
data16
lea
add
inc
push
inc
inc
loopne
aas
test
adc
out
inc
inc
and
jecxz
pop
cmp
xchg
scas
mov
cdq
cmp
mov
or
add
inc
inc
shl
ffreep
xchg
call
sub
adc
or
rcr
stc
inc
push
jmp
out
jge
or
xchg
into
or
sub
int
idiv
and
mov
jl
xlat
fimul
pop
push
sub
xchg
pop
sbb
aaa
mov
sbb
mov
int
int3
icebp
lock
sub
sub
int
push
sbb
ins
cmp
stc
push
(bad)
ror
rcr
pop
adc
pusha
add
popa
les
adc
push
mov
inc
(bad)
mov
popf
movs
cmps
adc
out
inc
out
jg
les
fild
jno
push
aaa
popf
inc
and
test
sbb
or
mov
push
inc
aam
mov
dec
push
add
push
cmp
add
inc
mov
pop
retf
out
cmp
js
mov
lahf
out
sahf
dec
jne
(bad)
cld
and
leave
repz
(bad)
mov
jl
pusha
call
xchg
lock
popa
pop
popa
iret
pop
jmp
mov
mov
inc
inc
and
add
and
adc
mov
data16
test
dec
xchg
sbb
add
jge
xchg
lock
push
and
sbb
inc
inc
add
jo
or
xchg
ins
enter
test
jae
sbb
int
sbb
outs
or
pop
je
xlat
inc
gs
and
add
mov
imul
cmp
and
sub
jnp
js
sub
pop
out
xor
cld
dec
inc
fstp
fwait
pop
dec
enter
push
jmp
(bad)
mov
fcmovnu
sbb
push
test
adc
jae
pop
rol
fld
dec
int3
scas
push
inc
es
(bad)
rcr
dec
test
ss
(bad)
loopne
or
adc
dec
call
aaa
pop
and
mov
and
dec
push
jo
lods
fucomip
xlat
add
or
inc
mov
(bad)
cwde
gs
imul
mov
dec
adc
pop
test
mov
ins
add
imul
lock
fst
jb
push
les
and
fs
add
(bad)
cmps
addr16
leave
adc
adc
mov
inc
push
imul
jg
jmp
mov
ja
into
shl
sub
or
sbb
enter
lahf
add
ss
push
movs
xor
lock
jmp
sbb
jne
cmp
jge
cmp
pushf
cmp
pop
ror
(bad)
les
aad
(bad)
ror
rcpps
(bad)
xchg
mov
cmp
sbb
sbb
inc
sub
ret
scas
jo
dec
sbb
push
or
mov
push
xor
(bad)
ret
and
mov
pushf
retf
or
sbb
adc
fst
mov
add
add
nop
or
or
mov
retf
in
sub
inc
movs
aam
xor
xchg
push
jbe
dec
push
or
retf
sbb
cmps
test
mov
mov
rcr
inc
and
frstor
fs
mov
retf
push
icebp
add
repz
inc
push
push
repz
cmps
mov
sahf
out
(bad)
call
in
or
push
pushf
out
ret
pop
mov
(bad)
call
scas
xor
inc
pop
push
push
cdq
aaa
nop
(bad)
mov
icebp
and
dec
int
xor
or
cmp
fwait
arpl
and
loopne
fistp
movs
or
fsub
imul
imul
push
fstp
fwait
es
fstp
xchg
out
jns
fstp
mov
sbb
es
inc
sbb
ret
cdq
xor
pusha
inc
mov
or
and
cmps
mov
sub
leave
jnp
daa
ds
(bad)
pop
jbe
pop
sub
sbb
cmp
lea
mov
pop
loopne
push
test
mov
xchg
call
sub
cwde
xchg
addr16
sbb
inc
add
out
push
sbb
test
adc
lahf
and
add
sbb
add
out
mov
sub
xchg
les
ins
mov
or
jo
int3
cmps
movs
mov
iret
inc
mov
adc
fcomp
leave
xchg
xchg
adc
fcom
adc
cmps
or
adc
jmp
clc
outs
add
in
add
cli
mov
xchg
or
mov
into
pusha
popa
inc
sbb
adc
test
dec
or
mov
fdiv
sbb
add
sbb
test
jl
movs
mov
push
xor
jo
dec
sub
inc
pushf
jmp
popa
add
adc
cdq
sub
push
xor
iret
pop
xor
and
add
and
add
loop
fimul
jg
out
add
not
and
or
out
push
pop
or
fistp
ret
push
jge
mov
ret
inc
xor
ret
test
fs
inc
add
or
fidiv
not
and
iret
les
cmps
jmp
fimul
adc
add
aam
cmp
and
push
dec
sub
add
jle
add
sbb
lea
out
jmp
pop
push
outs
adc
mov
cmp
lock
cld
retf
aam
stos
sub
xor
pusha
sbb
pop
mov
int3
mov
scas
mov
add
leave
inc
nop
lahf
adc
sbb
pop
cmp
mov
mov
pop
pusha
push
pop
sbb
xor
or
xlat
ror
jns
cmp
imul
sbb
out
rcl
jno
mov
pop
cmps
sub
arpl
call
rcl
les
hlt
fld
push
push
dec
xchg
and
jb
pop
sti
test
cs
cmp
sbb
mov
retf
movlps
add
cmp
lods
retf
mov
scas
loopne
push
cmp
xor
xchg
nop
jno
push
cmp
ja
xor
sub
adc
frstor
cmp
mov
or
jmp
xchg
sbb
mov
in
jmp
cmps
cmp
mov
add
ss
addr16
jno
das
sub
adc
adc
shl
cmp
pop
movs
pop
cmp
loopne
add
repnz
ins
ficom
inc
sbb
test
jbe
or
inc
jecxz
dec
repnz
add
inc
jo
jne
mov
arpl
loope
dec
push
mov
mov
cwde
sar
pop
pop
fcomp
add
gs
add
add
push
out
daa
lods
and
or
loopne
adc
mov
mov
add
inc
jmp
ss
cmp
add
pop
sbb
loope
adc
jo
retf
(bad)
xlat
rol
and
call
inc
push
jg
lock
fs
push
mov
ss
add
ret
inc
iret
mov
mov
inc
sbb
add
push
imul
cld
inc
jo
add
sbb
sbb
leave
jmp
dec
cmc
or
(bad)
add
jmp
push
push
jae
sti
pop
pop
je
sbb
cmp
pop
dec
enter
mov
aam
xor
xor
or
sub
ds
enter
in
push
adc
dec
mov
or
inc
sbb
push
dec
lods
aas
aaa
popf
(bad)
adc
push
test
popf
(bad)
in
jb
loopne
mov
jle
mov
iret
xchg
test
push
mov
repz
cmp
je
jne
and
icebp
and
xchg
out
push
dec
sbb
sub
mov
xchg
rol
pop
ins
loopne
in
sbb
loopne
add
jb
cs
push
push
pop
mov
jge
hlt
nop
nop
hlt
call
and
loope
icebp
outs
adc
mov
mov
pop
jmp
ins
inc
jo
push
mov
mov
rcr
daa
sbb
push
mov
cld
jecxz
shr
cmp
jecxz
pop
pop
loop
daa
mov
cmp
sub
pop
add
je
sub
daa
arpl
aad
sbb
mov
pusha
or
pop
jns
sub
and
cmp
cmp
cs
adc
adc
iret
push
je
jge
or
leave
jae
pop
test
mov
ss
and
(bad)
js
add
mov
or
mov
inc
imul
pop
push
leave
(bad)
les
fsub
xchg
out
sub
cdq
jbe
adc
or
add
adc
test
xor
inc
adc
in
xchg
je
or
sahf
out
ss
dec
repnz
je
sbb
jns
or
push
jg
popf
xchg
add
cli
dec
push
add
pop
dec
mov
in
outs
dec
inc
cmps
test
das
inc
xor
retf
sbb
adc
and
xchg
adc
jmp
fs
mov
daa
nop
adc
jne
call
dec
adc
add
adc
fadd
inc
sbb
inc
gs
and
retf
int
mov
mov
jne
xchg
add
not
jle
(bad)
movs
add
movs
dec
sbb
push
lods
mov
and
push
push
dec
les
push
cdq
dec
stos
add
ss
cmp
cld
adc
cmp
and
iret
cli
jbe
lock
xor
cmp
dec
adc
and
or
bound
xchg
imul
mov
outs
mov
sub
daa
dec
xor
ret
imul
sub
rcl
push
mov
ja
mov
icebp
push
push
mov
aaa
ffreep
mov
mov
jae
or
adc
and
mov
inc
add
pushf
or
cmc
xor
jg
push
sub
rcl
sbb
adc
mov
push
movs
add
xchg
inc
sbb
ss
shr
pop
mov
add
push
jg
pop
or
adc
pop
ins
adc
das
cwde
movs
push
mov
outs
adc
sub
mov
pop
push
nop
js
les
cli
mov
and
mov
sbb
inc
aas
pop
dec
xchg
mov
lahf
sub
call
mov
lock
push
and
add
fs
mov
cmp
adc
fstp
sub
cdq
(bad)
pop
add
mov
adc
and
mov
adc
out
and
push
imul
push
xor
xor
inc
outs
push
mov
scas
popa
js
mov
xchg
lea
sar
xchg
pop
retf
mov
jo
ficom
out
inc
sub
push
repnz
add
push
mov
or
adc
adc
mov
out
jle
pop
fcos
mov
add
cmp
mov
cdq
sbb
ret
ins
nop
dec
retf
xchg
test
test
adc
test
in
jl
adc
cmp
mov
js
ror
ja
adc
hlt
pop
hlt
lea
inc
xor
cld
inc
xor
add
sar
and
jo
and
aas
xor
lock
fcom
fidiv
pop
retf
pusha
nop
dec
adc
pop
jg
pushf
hlt
jg
inc
loopne
mov
in
and
inc
nop
cld
and
cld
push
mov
(bad)
fisubr
sub
mov
dec
(bad)
xchg
or
mov
add
(bad)
gs
sub
jl
inc
retf
dec
adc
pop
sbb
cwde
pop
out
arpl
ja
aaa
leave
jle
push
inc
add
(bad)
(bad)
rol
movs
and
daa
fcomi
sbb
xchg
mov
movs
fild
ins
adc
push
or
pop
fcom
pop
sbb
inc
jmp
imul
mov
je
pushf
mul
jle
scas
sub
inc
cmp
sub
adc
or
xor
(bad)
ins
mov
stos
test
and
xchg
(bad)
inc
add
or
add
dec
or
mov
dec
pop
das
mov
push
jg
out
mov
adc
aad
shl
jmp
sti
ds
cmp
sub
dec
icebp
and
outs
adc
adc
sti
pop
or
ret
stos
or
sbb
je
ins
jmp
(bad)
out
in
ss
ss
xchg
or
mov
sbb
popa
or
xor
stc
or
mov
pop
or
pop
mov
or
adc
int3
or
or
fcmovnu
sub
repz
jno
lock
push
mov
jmp
xchg
add
test
jmp
add
add
mov
push
in
test
sbb
adc
dec
sbb
clc
mov
fdivr
pop
ds
jno
push
mov
push
adc
mov
pusha
jecxz
nop
and
fiadd
daa
push
xchg
mov
push
pop
test
ins
fisttp
cmc
imul
popf
xor
icebp
punpcklwd
cmp
sub
mov
pop
cmp
and
add
into
and
fiadd
dec
jns
call
nop
push
xor
nop
std
xor
mov
adc
leave
daa
push
inc
and
push
pop
and
(bad)
push
sbb
or
popf
cdq
es
pop
add
into
sbb
sbb
cmp
or
jle
shl
mov
cmp
pop
icebp
sbb
or
cmp
ds
jle
cmp
dec
xor
in
nop
sbb
retf
mov
push
ins
xor
sbb
add
retf
adc
jae
rcl
shl
jmp
lds
mov
jecxz
sbb
xor
add
jle
mov
or
mov
idiv
push
push
cmps
push
test
shl
outs
movzx
push
rcr
pop
jge
shr
adc
jne
ret
mov
dec
or
mov
mov
mov
pop
lds
sub
mov
and
xor
add
test
adc
mov
add
sbb
xchg
je
pop
sub
ror
dec
aad
mov
loope
call
ins
loope
cmp
sub
add
jl
and
cdq
and
push
pop
add
jb
inc
mov
pop
xor
clc
add
mov
adc
(bad)
adc
xor
into
or
jb
stc
add
test
push
or
add
lock
xor
inc
scas
and
(bad)
rcl
nop
xchg
in
cmp
stos
add
aaa
and
and
add
ror
sbb
mov
fs
dec
(bad)
or
add
bt
bound
test
pop
add
punpckhwd
test
daa
(bad)
cmps
icebp
pop
or
inc
lea
sub
jle
add
icebp
ja
add
push
mov
addr16
mov
push
pop
clc
sbb
mov
jecxz
cmps
cmps
cmps
mov
les
jle
add
imul
pusha
or
aas
dec
sbb
dec
jmp
add
inc
loopne
and
adc
adc
mov
ja
mov
cmp
pop
les
fucomp
sbb
nop
nop
mov
dec
js
cmp
imul
and
push
xlat
add
iret
clc
adc
pop
out
push
push
mov
push
pop
out
xor
mov
sbb
and
pop
test
add
enter
mov
and
pop
(bad)
jge
popa
or
sub
inc
call
sub
pop
jg
push
push
fmul
test
lahf
mov
neg
xchg
sbb
test
idiv
in
je
push
sbb
nop
add
mov
adc
test
das
(bad)
adc
xlat
stos
(bad)
xchg
loopne
mov
dec
push
call
cmp
jge
ins
pop
jg
push
shl
adc
adc
jmp
add
in
push
sbb
dec
shr
pop
and
ins
mov
out
cmc
push
sub
inc
inc
fsubr
bound
pop
jl
lea
sub
inc
cmp
fwait
xchg
inc
push
jno
mov
dec
sub
pop
das
push
shl
sub
and
icebp
add
sbb
dec
push
and
inc
and
frstor
cmp
je
mov
and
sahf
je
lea
pop
adc
or
add
pop
ret
mov
and
dec
mov
add
adc
cmps
sbb
xchg
xchg
lahf
ret
xor
and
mov
cmp
dec
cmp
pusha
scas
adc
js
inc
mov
lods
mov
add
mov
add
or
pop
repnz
clc
xor
ins
push
cmp
xor
mov
mov
inc
daa
cvttps2pi
in
mov
cmp
pop
ror
cdq
dec
call
sahf
add
xchg
pop
dec
adc
and
ror
pop
nop
inc
push
stc
push
pop
cld
nop
lea
or
and
dec
nop
int
and
push
pusha
bound
pop
push
pop
repnz
sbb
mov
push
es
xor
adc
push
fstp
loop
imul
dec
pop
jmp
and
and
outs
adc
out
leave
and
jbe
jge
pop
adc
and
adc
dec
les
sub
outs
mov
pop
push
mov
mov
imul
mov
fisttp
lahf
dec
shl
fcomp
xchg
add
sbb
test
clc
pop
movs
(bad)
sbb
mov
adc
add
jae
test
sbb
lahf
jno
add
inc
add
xchg
cmp
(bad)
or
jmp
or
in
in
jmp
aas
mov
dec
xor
jmp
sub
fs
(bad)
je
movs
or
jno
xor
push
jns
js
push
sub
ficom
mov
and
add
fistp
add
stos
mov
and
cs
jle
pop
xchg
jl
mov
mov
inc
cmp
add
test
leave
mov
mov
outs
lods
dec
dec
les
add
or
sub
xchg
push
adc
push
cmp
xchg
and
jns
or
dec
xchg
mov
not
cmp
ret
xchg
push
adc
or
stos
mov
fadd
je
test
(bad)
or
and
push
jbe
lea
dec
loopne
pop
and
aaa
outs
lea
xchg
nop
lods
mov
retf
out
cmps
adc
shl
cmp
movs
shl
ror
mov
pusha
push
adc
imul
mov
mov
ret
sbb
das
cmps
mov
inc
ins
mov
push
sbb
dec
ins
imul
xor
fidiv
popf
test
mov
sbb
scas
add
cs
(bad)
in
xchg
scas
xlat
mov
mov
shr
and
(bad)
jne
fidiv
je
mov
imul
sub
xor
mov
add
lds
or
jbe
es
outs
push
mov
add
push
xchg
mov
sub
in
aas
lock
iret
dec
xchg
sbb
cmp
adc
jnp
xor
mov
movs
dec
inc
or
mov
lods
loop
and
ds
leave
lds
popa
rol
cmp
jge
cs
movs
cmp
sub
in
push
test
mov
jno
enter
xchg
(bad)
scas
adc
pop
(bad)
cmp
jo
rol
mov
add
movs
aam
add
imul
dec
sbb
xor
jnp
hlt
fcom
mov
sbb
call
loopne
ror
cmp
sar
fcomp
add
repz
xor
dec
jb
mov
pop
dec
pop
es
inc
pop
xor
jle
inc
mov
add
sahf
pop
dec
loop
cmp
cmps
lds
pop
shl
sub
mov
test
pop
les
or
hlt
daa
sub
dec
sahf
arpl
push
lds
ret
test
les
sbb
inc
fld
jno
cmc
xor
mov
inc
aam
xchg
mov
hlt
pop
jne
fdiv
mov
mov
clc
jl
inc
data16
jbe
or
push
test
jne
adc
aas
cmp
adc
mov
loope
sub
inc
cmp
inc
or
push
sbb
fwait
test
icebp
sbb
xchg
hlt
pop
imul
jb
inc
es
and
aad
(bad)
or
xchg
xchg
fwait
dec
sub
pop
add
xchg
mov
jmp
shl
lods
pop
cli
mov
mov
ret
nop
cmps
push
mul
in
dec
add
xor
aam
xor
sub
imul
dec
test
dec
jmp
push
sub
lahf
rol
mov
sub
in
imul
popf
add
int3
ret
pop
dec
add
daa
inc
rol
test
sbb
xchg
stos
call
jge
add
lods
ds
add
ja
fst
cwde
adc
inc
imul
loop
adc
rol
daa
dec
sbb
jge
pop
pop
and
sbb
or
sub
adc
mov
ins
dec
imul
clc
adc
push
add
inc
push
ret
ins
ret
test
inc
add
cmp
retf
shl
inc
xor
sub
icebp
xchg
mov
cmps
ret
dec
loope
push
mov
or
sbb
dec
or
arpl
cwde
push
cmp
icebp
pop
lods
inc
cmc
stos
mov
dec
xor
rcr
mov
sub
aas
adc
xchg
sbb
pop
div
mov
xlat
fldenv
mov
(bad)
xchg
test
mov
adc
pushf
push
sub
jecxz
js
mov
(bad)
retf
inc
(bad)
(bad)
movs
movs
adc
adc
xchg
sbb
mov
or
in
dec
or
fdiv
nop
dec
inc
inc
or
push
pop
js
mov
pop
mov
dec
add
call
push
jns
pushf
enter
enter
and
or
xor
cmp
popf
sub
ss
fwait
lahf
not
mov
lock
jae
xlat
ret
mov
push
sbb
scas
lods
stos
leave
pop
sbb
mov
sbb
mov
xchg
xchg
cmp
into
(bad)
adc
(bad)
es
lock
ret
sub
scas
or
aaa
ds
fisttp
xchg
repnz
add
loope
adc
stc
pop
push
inc
pop
hlt
add
repz
push
daa
(bad)
sub
inc
jne
hlt
rcr
and
mov
inc
xor
jmp
not
pop
scas
imul
rcr
es
adc
adc
add
dec
push
and
je
cmp
fxtract
xchg
(bad)
imul
clc
stc
loope
mov
xchg
push
pusha
mov
jecxz
push
and
cmps
mov
loopne
mov
sub
pop
inc
and
ins
or
pop
loopne
clc
clc
and
xchg
push
in
outs
mov
cmp
jl
or
jle
push
and
(bad)
sti
stc
and
pop
xor
mov
inc
sbb
and
adc
adc
dec
xchg
push
adc
dec
dec
and
mov
and
lea
or
hlt
and
punpcklbw
in
shr
mov
lods
xor
(bad)
icebp
fild
push
sub
lahf
or
xor
cmps
imul
loopne
adc
mov
mov
not
mov
add
pusha
das
jl
call
dec
push
imul
xchg
sbb
or
pusha
push
(bad)
clc
retf
mov
sbb
sbb
mov
push
call
leave
(bad)
rcl
outs
in
into
ins
inc
lds
loop
rcl
jno
inc
inc
add
inc
inc
sub
inc
shr
jg
fsubr
adc
fimul
push
scas
cdq
adc
out
or
inc
mov
add
fmul
xchg
adc
and
pop
mov
xchg
pop
push
sub
repnz
or
gs
imul
les
pop
lock
add
cwde
add
cmps
mov
ja
pop
jb
test
popa
sbb
jp
and
aam
je
xor
jne
pop
push
clc
xchg
add
mov
icebp
lods
movs
fadd
gs
pop
xlat
xor
cmp
xchg
inc
push
pop
cwde
mov
fiadd
pushf
fsub
daa
mov
mov
and
xchg
popa
push
add
cld
fldenv
das
or
mov
push
rol
cmp
sbb
mov
ds
xchg
sbb
push
pop
xchg
iret
pop
push
retf
and
pop
mov
loopne
pop
or
mov
xlat
data16
mov
or
shr
pop
jae
mov
and
fst
inc
or
test
xchg
pushf
out
xor
outs
loopne
jb
inc
sub
adc
sub
inc
movs
(bad)
dec
xor
lock
sbb
in
push
test
adc
cmps
call
not
cdq
sbb
dec
out
inc
cmp
clc
xor
test
adc
xor
xchg
hlt
bound
ror
and
pop
int
push
mov
cs
fbstp
xchg
add
daa
daa
ins
push
and
xor
sbb
xor
ret
cdq
dec
enter
jno
cmp
call
xchg
cmps
add
and
cmp
adc
mov
and
mov
xchg
mov
out
add
rol
pop
mul
test
scas
lahf
call
xchg
clc
mov
mov
push
dec
mov
and
pop
mov
or
ja
cli
lea
adc
mov
imul
mov
add
lods
outs
mov
add
push
pop
jne
mov
cmovb
jmp
(bad)
arpl
mov
popf
test
pushf
push
shl
imul
or
movs
fiadd
mov
pop
push
mov
sbb
or
pop
cmp
iret
sbb
orps
call
add
inc
cmp
xor
ins
mov
enter
lds
popa
sbb
std
add
pushf
stos
jns
jae
and
ins
setle
lea
fld
les
xor
mov
adc
xchg
xchg
push
add
outs
jne
hlt
xor
outs
in
inc
arpl
sub
test
add
sub
mov
mov
pop
or
xor
mov
sub
mov
and
and
cmp
mov
in
inc
or
cmp
fmul
mov
cmc
test
imul
push
loopne
fwait
cmps
pop
or
lahf
mov
mov
lods
inc
sbb
dec
ret
push
add
cmp
cmp
aaa
rol
mov
xor
sar
lock
mov
dec
je
pop
sub
sbb
dec
add
div
arpl
adc
pusha
jo
ins
sub
inc
cmp
sub
add
xor
ja
mov
ins
daa
js
jne
fmul
jne
ins
inc
fcmove
ins
inc
adc
push
je
dec
push
or
add
dec
mov
inc
pop
dec
sbb
xor
xor
je
inc
push
add
jmp
pop
ret
or
adc
or
xor
add
ror
mov
or
mov
and
adc
adc
jb
adc
mov
push
(bad)
imul
mov
add
inc
js
mov
in
hlt
call
pop
add
jnp
(bad)
imul
pushf
adc
in
mov
cdq
adc
je
or
movs
invd
sbb
dec
les
sub
add
sub
add
rol
jne
mov
xchg
mov
and
shr
xchg
out
and
loopne
jmp
outs
jmp
(bad)
add
dec
in
mov
sbb
into
inc
xchg
sub
jge
mov
mov
dec
cwde
or
mov
fsubr
mov
and
adc
add
or
inc
inc
out
xor
mov
jmp
movs
and
push
nop
imul
or
cmp
push
enter
inc
push
jbe
xor
or
bound
int3
mov
inc
cmp
xchg
cs
jge
js
sub
jo
mov
cmp
lea
gs
sub
mov
loop
cmps
push
ror
dec
cmp
(bad)
sbb
jle
and
and
retf
xor
add
in
es
push
jo
xor
or
sar
sbb
mov
es
jnp
mov
les
xor
aam
mov
mov
mov
dec
stos
add
sub
outs
and
test
push
pop
sub
adc
mov
aam
cmp
sub
add
loop
add
icebp
adc
fnsave
jmp
mov
adc
lock
or
push
rcl
adc
sbb
in
xor
cmps
mov
out
push
xchg
mov
jg
outs
repz
sbb
or
pop
mov
add
and
mov
pusha
sar
sub
and
nop
and
popa
or
add
and
retf
mov
push
cmc
or
(bad)
cmc
cmp
push
dec
push
rcr
ds
inc
sub
int3
push
mov
xor
push
arpl
and
ficom
jno
stos
cs
test
mov
sub
mov
(bad)
sti
push
push
sahf
mov
xchg
loopne
out
cmp
fdiv
aad
and
cmp
fisttp
ja
lds
int
call
sbb
scas
ja
mov
movs
or
cmp
cmp
ror
xchg
pop
adc
add
xlat
and
add
inc
inc
mov
scas
pop
inc
mov
cmps
cmp
push
or
test
cmp
retf
outs
mov
and
adc
fs
sub
add
xchg
xlat
mov
xchg
scas
pop
fwait
daa
daa
mov
leave
imul
dec
push
mov
inc
mov
das
inc
std
and
inc
ficom
and
push
jmp
mov
jne
leave
jns
pop
test
mov
xor
dec
pop
jl
(bad)
pop
movs
xchg
jl
movs
lods
movs
in
iret
(bad)
sub
adc
jg
jae
je
ret
test
xchg
sahf
test
fisubr
in
and
xor
pushf
ror
fist
and
lods
mov
push
jmp
sbb
jmp
and
inc
ds
fwait
mul
in
fbld
test
aad
stos
and
mov
pop
stos
les
sbb
xor
pop
push
popa
pop
mov
es
push
das
jae
inc
arpl
loope
inc
and
in
inc
mov
bound
call
mov
ret
rcpps
adc
sbb
mov
jne
add
lods
mov
and
and
and
sbb
cmp
add
mov
sbb
test
mul
ds
cmp
and
pusha
dec
shl
iret
mov
jo
and
jge
push
adc
sbb
fisub
mov
jl
add
inc
arpl
mov
sbb
mov
jge
out
enter
mov
ss
jmp
add
sti
or
fadd
or
add
ret
and
or
lods
or
adc
cwde
cmp
mov
imul
pusha
ins
inc
test
es
xor
pop
mov
fistp
sbb
cwde
sub
sbb
or
and
shr
sub
mov
rcr
ficomp
sbb
in
dec
push
xor
add
aas
daa
inc
mov
dec
sbb
imul
mov
jg
in
jp
mov
jno
ret
push
jmp
inc
sbb
out
and
das
dec
xor
mov
jge
fwait
mov
sub
and
call
cld
jl
or
data16
cdq
push
adc
xchg
inc
jl
enter
push
movs
call
pop
push
pop
and
and
add
adc
and
scas
adc
add
inc
mov
and
or
pop
icebp
mov
jle
stos
es
add
sub
mov
xchg
inc
sub
inc
dec
addr16
cwde
arpl
add
test
retf
ins
push
cmp
or
or
popa
out
add
shl
imul
nop
push
popf
jno
jae
in
sbb
add
call
rol
not
push
sbb
push
out
jne
cmp
fistp
es
sbb
inc
sub
test
test
sbb
mov
xchg
or
test
pop
jne
pop
call
dec
sbb
add
sub
jmp
aaa
inc
mov
and
xor
mov
dec
jo
or
xor
cli
xchg
(bad)
sbb
into
mov
or
push
test
cwde
sbb
movups
lods
push
sbb
(bad)
sub
add
or
daa
dec
pop
leave
sub
movs
in
jecxz
xlat
or
clc
int
cwde
nop
mov
mov
mov
(bad)
mov
imul
pushf
xor
xchg
jb
and
cmp
mov
out
mov
add
sahf
xchg
pop
sbb
test
dec
xchg
mov
xchg
dec
mov
or
test
xchg
sub
loopne
xor
aaa
mov
push
adc
dec
leave
sub
aaa
movs
jno
cdq
inc
ins
add
xchg
retf
dec
add
or
wbinvd
or
mov
push
fdivr
push
xor
or
xchg
add
or
inc
dec
arpl
and
call
movs
cmps
arpl
lea
pop
mov
addr16
push
loop
adc
pop
addr16
sub
rol
add
sbb
or
add
adc
jecxz
push
sti
sti
inc
pushf
mov
js
call
retf
cmps
fidivr
and
push
pop
jne
sub
sub
inc
push
rcr
xor
mov
mov
test
mov
push
retf
add
cmps
adc
pop
loope
push
test
mov
mov
pop
out
xor
xchg
xchg
sub
pop
add
pop
movs
adc
lea
fidiv
pop
call
xor
daa
aas
push
(bad)
cmp
push
and
add
pop
call
cmp
outs
sbb
lock
rol
sbb
inc
dec
mov
add
or
ss
add
pop
sbb
pop
and
add
xor
mov
(bad)
daa
daa
dec
inc
(bad)
dec
add
inc
inc
and
fild
sbb
lahf
and
enter
ja
fs
lods
adc
dec
xor
lahf
mov
adc
mov
in
mov
and
push
inc
cmps
imul
retf
push
scas
hlt
shl
cmp
jg
xchg
nop
adc
push
adc
nop
dec
imul
xchg
sub
xor
xchg
nop
dec
cmp
pop
xor
sahf
adc
sub
lods
addr16
addr16
clc
or
mov
pop
std
sub
xlat
jne
fnsave
push
fwait
out
push
imul
inc
imul
cmp
ret
add
mov
xor
daa
sbb
cld
xchg
xchg
xchg
xchg
or
or
add
jb
dec
dec
push
sti
xor
xchg
sub
pop
add
xchg
adc
cmp
(bad)
cli
jecxz
daa
push
mov
sub
pusha
pop
lods
sbb
ins
xor
rcl
test
mov
std
(bad)
xor
out
loop
nop
pop
add
test
or
fistp
mov
jo
mov
pusha
(bad)
icebp
enter
je
outs
and
sub
icebp
sub
cmp
mov
inc
sub
out
pop
and
push
sbb
or
and
or
xchg
pushf
sbb
es
daa
jecxz
cdq
lods
adc
adc
stos
cmp
add
imul
jl
js
inc
pop
mov
sub
adc
adc
retf
sbb
ins
or
add
ds
mov
ret
fiadd
pop
call
and
sub
movs
les
pop
sar
int
push
(bad)
dec
ins
xor
mov
sub
out
mov
pop
adc
and
cmp
jno
add
retf
push
or
call
jne
test
ucomiss
mov
and
dec
jmp
cmps
rol
test
or
inc
data16
mov
cs
shl
daa
dec
dec
(bad)
xchg
push
ss
enter
or
std
jecxz
push
push
push
imul
repz
jbe
mov
push
dec
or
sub
cmps
mov
or
leave
and
inc
ret
mov
dec
mov
cmp
push
iret
mov
into
imul
push
inc
cwde
inc
arpl
jg
inc
dec
pop
sbb
test
xchg
and
push
push
test
or
add
inc
xor
imul
sbb
inc
ret
jmp
mov
sbb
jo
popa
retf
inc
jne
xor
inc
adc
(bad)
mov
adc
dec
fs
outs
pop
xchg
bound
test
or
hlt
lods
and
aad
adc
push
lods
or
xor
jecxz
imul
pop
adc
adc
add
popa
sub
gs
mov
adc
cmp
ret
fsubr
cmp
jmp
mov
mov
sahf
inc
cmps
pop
pusha
aaa
icebp
imul
(bad)
pusha
mov
or
mov
std
jmp
push
jmp
int3
mov
xchg
rcl
mov
add
je
mov
fidivr
pop
cwde
xor
pop
inc
cmp
mov
inc
loop
inc
(bad)
test
(bad)
dec
xor
pop
enter
int
sub
sbb
scas
add
mov
add
sub
push
xor
dec
sbb
add
dec
and
push
imul
push
mov
xor
into
fwait
or
pop
sub
xchg
std
mov
or
jl
cmp
int3
enter
dec
gs
lods
sbb
imul
nop
das
and
sbb
cmp
arpl
add
loopne
pop
jb
xchg
push
jno
adc
jae
fisttp
addr16
(bad)
cmp
aas
je
xor
sub
or
les
and
push
sbb
ss
xchg
jbe
xchg
(bad)
xor
ja
pop
dec
xchg
mov
dec
lahf
or
ins
fwait
xchg
jne
jns
sub
push
scas
or
jne
xchg
mov
je
cmps
pop
add
jb
dec
out
xor
out
xor
inc
sti
jae
jb
xor
mov
aam
mov
mov
les
pop
das
imul
xchg
and
lods
ret
fldl2t
sbb
cmp
mov
test
test
fsub
pop
and
sub
in
push
mov
push
xchg
outs
mov
movs
sbb
add
xchg
arpl
push
cmp
cmp
dec
imul
jo
sub
mov
dec
dec
and
inc
sub
cmp
clc
push
outs
mov
sub
pop
sti
clc
out
cmps
aas
inc
add
lea
or
(bad)
int
rcl
fs
dec
xor
mov
inc
mov
pop
cmps
jb
pop
add
mov
(bad)
push
ret
dec
inc
ror
gs
test
cmp
xor
dec
dec
push
or
fidiv
xor
lock
retf
imul
add
retf
mov
or
jl
or
push
inc
mov
daa
or
pop
repnz
ret
enter
loop
test
pop
xchg
out
inc
add
sub
mov
inc
adc
pop
sbb
sbb
clc
xchg
lock
jnp
xchg
or
mov
adc
loope
enter
and
retf
xor
test
iret
sub
mov
movs
pusha
add
retf
out
adc
xchg
adc
lods
jne
imul
and
mov
pop
adc
mov
and
xchg
inc
pop
xor
test
jg
nop
hlt
xchg
xchg
ret
mov
or
sbb
adc
pmovmskb
bswap
nop
pushf
ror
sub
pop
movs
sbb
les
cmp
sub
dec
adc
inc
or
sbb
mov
inc
push
pop
data16
or
adc
add
int
lea
add
sbb
xlat
or
cld
mov
call
xor
icebp
and
inc
out
dec
cmp
mov
pop
lds
fild
xor
dec
repnz
jb
outs
cmovb
in
push
dec
pop
push
xor
mov
imul
hlt
dec
fs
in
mov
and
fcmovnbe
cmp
sbb
and
push
inc
push
xor
dec
scas
mov
js
add
inc
and
test
mov
mov
and
push
lea
add
add
sub
push
mov
test
je
sub
cmp
xlat
cmp
and
les
sbb
jecxz
lods
scas
aam
loope
push
stc
repnz
xchg
mov
into
jno
daa
inc
fdiv
lea
fadd
ficomp
outs
test
popf
dec
adc
pop
jbe
xchg
mov
cmc
mov
imul
adc
arpl
pop
test
bswap
adc
sbb
xchg
xchg
scas
or
adc
pop
add
inc
dec
jecxz
out
aaa
test
cmps
sbb
ficomp
mov
pop
pop
cmp
int
xchg
and
mov
xchg
mov
cmps
icebp
sbb
mov
cwde
jne
cmc
pop
mov
stc
pop
adc
xchg
and
cmp
rcr
add
dec
retf
add
fild
xor
xor
push
or
pop
add
ds
aas
add
sub
and
rcl
gs
push
mov
xchg
xor
inc
mov
leave
loopne
push
scas
xor
pop
movs
cdq
mov
cmp
js
cmp
enter
xchg
out
adc
pusha
aas
lods
push
xchg
sbb
cld
fldcw
arpl
mov
mov
add
cmc
jne
fwait
mul
leave
ds
push
cmp
jne
rcr
mov
push
cmp
ds
fcmovnb
dec
aas
aas
jne
ins
es
rol
push
cmp
jg
movs
or
and
adc
xchg
and
rcr
sbb
lods
xadd
inc
add
cmp
je
mov
jge
int3
sbb
or
jb
xor
jnp
mov
push
nop
cmp
mov
pop
xor
push
sbb
cmp
cmps
sub
dec
jno
sub
sbb
ret
push
fsubr
fcmovnbe
mov
lock
dec
fadd
sbb
retf
adc
mov
fs
mov
or
push
cmps
dec
cdq
xor
xor
imul
mov
mov
imul
dec
inc
mov
inc
sbb
sahf
addr16
or
xchg
or
dec
adc
cmp
or
dec
cs
xor
loopne
push
xor
mov
cmp
xor
ds
adc
add
adc
add
aas
imul
and
das
(bad)
mov
dec
push
dec
test
retf
out
sub
stos
shl
(bad)
ds
popa
sub
iret
xor
clc
sub
repnz
mov
hlt
sar
add
test
call
cmp
mov
cs
rol
mov
push
lods
lea
xor
jecxz
ins
retf
adc
mov
sub
jbe
pop
xchg
push
inc
lahf
mul
jg
cmp
inc
ins
dec
dec
xchg
or
inc
loopne
(bad)
mov
pop
loopne
cmp
cmp
push
sub
mov
cmp
mov
sub
mov
stc
push
pop
aas
mov
enter
sub
add
and
add
sub
iret
and
scas
sub
pop
rcl
mov
inc
retf
andps
push
imul
jecxz
sub
sbb
add
sub
std
jge
sub
js
mov
das
jns
dec
dec
mov
add
xchg
xchg
mov
push
or
enter
fadd
push
xor
pop
sbb
xchg
mov
int3
mov
pop
jo
sub
das
cmp
xchg
in
test
push
and
pusha
jns
data16
mov
and
fsubr
dec
js
pop
cmp
xchg
sub
push
mov
mov
mov
add
push
jecxz
dec
push
xchg
iret
add
adc
pop
sub
sub
inc
outs
adc
pop
repnz
push
push
ds
imul
shr
fsubr
cmps
inc
xor
inc
pop
pop
inc
xchg
mov
(bad)
push
inc
shr
mov
push
test
push
inc
push
inc
mov
xlat
inc
push
push
ja
add
(bad)
push
add
dec
push
mov
adc
fcomp
push
add
pop
and
add
add
ror
retf
push
inc
ja
pop
xchg
pop
gs
jae
inc
cvtdq2ps
jne
or
jo
aaa
cmp
pop
les
or
mov
dec
fcom
sub
inc
mov
xchg
xchg
aaa
jno
enter
or
js
inc
sbb
pop
mov
jle
(bad)
call
in
pop
in
sahf
test
mov
mov
in
adc
aaa
mov
pop
cmp
hlt
push
pop
mov
cmp
sahf
es
imul
xor
push
xor
jl
cmps
jne
aas
loopne
inc
pop
push
and
fidiv
adc
pop
lock
cmp
inc
dec
push
adc
or
add
out
or
scas
add
xor
out
test
out
inc
test
mov
retf
aad
iret
test
loopne
xchg
loopne
add
pop
add
das
xor
les
std
or
xor
mov
call
sub
sbb
or
outs
pop
add
gs
mov
or
cmps
push
cmp
fsubr
xor
dec
test
sub
mov
inc
inc
and
mov
in
jns
stos
xchg
push
ror
pop
add
sahf
sub
add
adc
jne
stos
ret
shr
(bad)
(bad)
scas
and
mov
(bad)
sahf
je
arpl
jp
sbb
sub
nop
push
jnp
inc
and
pop
fnsave
and
mov
movs
mov
call
mov
int
in
add
fwait
add
inc
loopne
sbb
jb
dec
and
fdiv
xor
fmul
ror
adc
fdiv
enter
and
xor
movs
mov
rcl
aam
jb
pop
in
int3
int3
nop
pushf
inc
ss
and
in
lods
loope
adc
mov
movs
cmp
dec
pop
mov
int
sbb
les
jb
pop
jl
rcl
test
movs
test
enter
mov
enter
add
push
repnz
push
xlat
nop
xchg
mov
cs
mov
sbb
mul
push
jo
push
dec
adc
or
jg
enter
icebp
icebp
inc
movs
add
inc
or
mov
hlt
pop
jo
mov
icebp
movs
movs
ret
dec
mov
sbb
call
pushf
and
inc
bound
and
dec
xchg
jb
and
push
pop
push
push
leave
dec
push
sbb
sbb
cmc
sub
aam
and
pop
inc
xchg
retf
inc
xchg
add
inc
imul
and
retf
inc
(bad)
and
push
sub
add
pop
jbe
mov
pop
es
pop
xor
inc
inc
fsub
dec
adc
(bad)
jecxz
pop
xor
pop
inc
and
jbe
test
in
push
mov
and
push
jl
stos
add
sbb
xchg
add
push
mov
inc
or
lods
lds
(bad)
xchg
jb
mov
pop
adc
adc
adc
inc
jl
xor
jo
fwait
cmp
dec
and
in
dec
mov
inc
mov
sbb
mov
and
and
adc
add
sub
xor
mov
arpl
das
in
fld
or
rsqrtps
repnz
dec
xor
cmps
(bad)
sar
inc
in
mov
jmp
sahf
pop
mov
mov
dec
adc
mov
sbb
mov
or
sbb
add
lahf
add
xor
and
cmps
dec
inc
mov
jo
fdivr
and
adc
dec
inc
pop
jecxz
or
pop
pop
cdq
in
sbb
sbb
sbb
repnz
xchg
xchg
adc
aas
inc
push
mov
xor
adc
fs
jnp
mov
aad
in
and
adc
mov
or
movs
and
pop
xor
cmp
inc
adc
inc
(bad)
loopne
and
inc
jl
mov
inc
call
sub
jmp
mov
add
or
out
or
pop
adc
lods
add
pop
les
fmul
aam
loop
or
sbb
call
ret
dec
adc
xchg
loop
mov
and
or
pop
adc
mov
mov
mov
dec
shr
test
or
cmp
and
or
mov
fistp
iret
push
xor
adc
or
adc
or
sub
into
cmp
dec
jne
jmp
in
cmc
into
jb
mov
inc
add
cmp
push
or
je
rcr
inc
push
sahf
(bad)
or
(bad)
shl
(bad)
inc
sbb
or
inc
aam
inc
shl
and
inc
sub
imul
add
xchg
ja
add
int3
xchg
mov
shl
mov
sbb
pop
xlat
loopne
sbb
xor
add
nop
sti
xchg
leave
aam
push
cmps
push
push
add
sbb
xlat
arpl
bnd
fsubr
inc
neg
fidivr
es
cmp
pusha
pop
add
add
js
cmp
pop
mov
stc
mov
or
adc
add
dec
das
pop
sub
jnp
xor
(bad)
cmp
pop
sub
mov
loope
add
test
lea
add
xor
es
sahf
aaa
mov
push
mov
add
js
sbb
sub
aas
nop
into
rol
mov
cld
push
aam
outs
mov
push
cmp
ins
pop
sub
push
adc
shl
rcr
pop
xor
pop
ret
or
mov
add
imul
sbb
add
in
xor
push
or
inc
adc
pop
dec
jae
shr
push
inc
xchg
inc
jmp
dec
jl
push
stos
cmps
or
push
nop
sbb
add
ins
or
mov
dec
dec
dec
or
out
mov
call
jns
or
xor
xor
xor
sbb
adc
(bad)
adc
sub
or
push
mov
or
pop
or
add
mov
lea
mov
push
lahf
mov
and
mov
or
xchg
push
stc
into
inc
sti
jle
push
imul
enter
pop
sub
inc
mov
dec
call
and
pop
sbb
inc
xchg
pop
jb
xor
sbb
dec
js
data16
or
pop
pop
inc
jmp
pop
mov
sbb
sub
xor
(bad)
push
inc
cmp
and
lock
inc
cmp
and
cld
ins
add
imul
pusha
daa
hlt
pop
mov
cmp
adc
cmp
sub
sub
or
or
xchg
mov
enter
cmp
cmp
jmp
inc
push
dec
or
xchg
stos
ds
adc
sbb
dec
shr
rcr
sbb
ror
sub
movs
cmp
push
std
daa
xchg
dec
fld
push
int
and
jae
das
xor
enter
bound
rcr
pusha
push
mov
xchg
ins
mov
xor
scas
popa
imul
mov
inc
pop
ret
fild
mov
(bad)
and
cmp
adc
adc
repz
mov
jae
repnz
enter
adc
nop
arpl
ret
jp
and
gs
mov
dec
popf
in
mov
movs
xchg
adc
push
jbe
jbe
push
mov
push
jmp
push
sbb
sbb
(bad)
mov
pop
mov
mov
bound
or
mov
xor
das
inc
mov
xor
sahf
leave
inc
add
imul
jb
push
pop
lds
movs
or
clc
or
in
dec
sar
(bad)
xor
and
xor
add
sub
mov
push
pop
mov
call
xchg
pusha
xor
sbb
xor
or
mov
push
mov
outs
push
out
inc
mov
movs
and
xchg
sub
cmps
sti
add
(bad)
jbe
add
bound
imul
sar
pop
or
or
ficom
push
add
cmp
mov
adc
xor
push
data16
xor
imul
or
add
add
popf
and
or
cmc
fcom
bound
adc
push
mov
sti
dec
mov
jne
outs
xchg
test
aas
lock
add
dec
add
in
cli
or
pusha
mov
or
gs
push
dec
fistp
jl
mov
xchg
test
sbb
or
es
lods
fidivr
call
(bad)
in
lock
inc
xor
lock
repz
sbb
test
add
or
sub
inc
or
sub
pop
dec
shr
or
ror
in
cmp
add
sar
adc
mov
sti
add
rsqrtps
sar
push
xor
imul
dec
fs
aaa
je
or
xor
and
add
pusha
add
test
add
fs
xchg
add
mov
inc
push
or
mov
les
in
and
movs
in
lock
stc
add
add
push
loopne
xor
loopne
sbb
jo
jbe
ja
xchg
mov
popa
and
fimul
adc
(bad)
pop
adc
push
add
xchg
cwde
mov
pop
add
adc
xchg
rol
cmps
mov
and
js
jnp
popa
pop
popa
lahf
in
fwait
push
xchg
js
dec
repnz
aas
(bad)
gs
in
xchg
sub
loopne
inc
ret
ds
ret
push
push
(bad)
popa
inc
jle
test
pusha
or
push
outs
outs
pop
inc
sbb
cli
add
and
hlt
or
xchg
mov
xor
push
pusha
fwait
pushf
pushf
pushf
je
mov
ret
or
int3
push
sub
or
sbb
dec
movs
mov
and
mov
clc
ins
xor
pop
sbb
iret
(bad)
in
in
cmc
std
jns
out
add
sbb
sahf
out
cmp
out
sahf
pop
gs
mov
cmps
add
fiadd
or
ss
add
jns
mov
es
js
pusha
adc
sub
fisttp
add
push
xchg
mov
push
les
imul
or
ds
ss
or
or
adc
push
adc
add
pop
pop
sub
and
test
arpl
push
mov
jmp
ins
xchg
ret
sbb
mov
xor
pop
add
cmp
mov
pop
inc
mov
or
movs
adc
inc
movs
and
push
fidiv
daa
sbb
xor
daa
fild
cmp
leave
gs
cmp
jb
sbb
mov
push
movs
sub
sub
or
test
das
movmskps
push
sub
push
dec
paddsw
add
mov
not
push
pushf
lea
pop
push
or
mov
fld
dec
popf
aaa
push
rcl
and
sub
xor
xor
cmps
cmp
inc
aad
jl
inc
(bad)
cs
call
test
call
xchg
cs
sub
fmul
into
or
das
test
dec
or
xor
add
add
jb
adc
rol
push
push
jb
scas
jge
push
or
je
daa
and
push
div
ins
adc
push
stos
stos
icebp
in
and
scas
push
outs
je
scas
sbb
xor
xchg
add
and
push
in
fidiv
xor
je
cs
jmp
push
loop
sbb
cmp
sub
or
stos
sti
lods
imul
mov
sbb
nop
lods
test
test
sbb
dec
fdivr
mov
xchg
or
cmp
jnp
add
push
movs
push
mov
dec
(bad)
dec
fisubr
sub
pop
imul
xor
aaa
out
jne
add
(bad)
aaa
add
adc
pusha
pop
aas
add
test
inc
and
and
inc
xchg
ror
daa
fld
push
outs
push
push
test
push
and
dec
retf
gs
outs
add
sbb
fcomp
adc
pop
js
je
push
jbe
fcmovbe
int
mov
and
hlt
pop
dec
push
pop
loopne
inc
call
shl
dec
outs
fwait
cld
test
adc
and
rcr
cmp
retf
or
(bad)
jne
push
push
aas
call
xlat
and
aam
pop
(bad)
cmc
sub
adc
cmp
sub
cdq
fisub
pop
rcr
adc
rcl
mov
xor
add
outs
inc
pop
adc
adc
adc
cmp
add
inc
outs
clc
inc
sub
cmp
rcl
and
test
sahf
jbe
add
(bad)
and
shr
push
in
rol
les
ss
sub
aas
add
popa
mov
mov
xchg
push
sbb
imul
pop
adc
and
gs
push
xor
mov
cmp
dec
or
add
xor
loope
xchg
ins
and
jb
lods
adc
loopne
popa
and
sbb
pop
sub
es
cmp
out
lock
sbb
pop
aaa
adc
and
lock
xlat
in
scas
or
pop
nop
(bad)
and
adc
nop
mov
or
fsub
sbb
push
aaa
sbb
and
inc
push
mov
sub
adc
sbb
jecxz
scas
push
push
addr16
cmp
adc
mul
inc
mov
aas
add
leave
xchg
push
(bad)
mov
jns
imul
sub
push
and
add
mov
jmp
sbb
push
aad
adc
jbe
push
xchg
int
or
adc
std
cld
inc
dec
or
xchg
dec
outs
adc
mov
mov
test
jmp
push
inc
das
enter
sbb
jl
and
or
js
and
(bad)
mov
mov
test
adc
test
jns
and
mov
sahf
and
sti
and
sub
and
out
mov
rcr
inc
cmovo
mov
add
add
and
daa
imul
nop
nop
dec
sar
xchg
int3
adc
dec
cs
int3
xor
lea
shl
or
cmps
adc
add
test
les
mov
cmp
xchg
inc
scas
mov
loopne
fdiv
inc
mov
sbb
mov
in
push
cmp
outs
jne
in
xor
add
cmps
pop
and
adc
mov
cli
xchg
retf
(bad)
stos
fcmovnb
or
or
pop
xchg
imul
in
add
das
xor
xor
and
and
test
das
and
dec
dec
bound
movs
fld
das
add
jno
pop
mov
adc
pop
sbb
inc
mov
jmp
and
shr
sti
mov
jle
push
popf
pop
mul
and
loop
or
loop
pop
lock
mov
bound
xchg
xor
es
push
jno
sbb
mov
adc
or
pop
cli
mov
mov
sub
adc
in
dec
xor
mov
adc
pusha
cld
lahf
das
outs
and
jne
jb
add
dec
cmp
and
add
sbb
mov
and
mov
or
iret
retf
xor
add
xchg
inc
mov
hlt
adc
imul
es
sbb
nop
xor
add
xor
push
pop
imul
push
dec
rcr
lock
int
in
fs
pop
xor
pop
call
mov
mov
lahf
pop
js
adc
pop
fptan
mov
mov
adc
xor
movs
mov
mov
call
dec
xor
xor
or
int
push
pop
call
sub
push
dec
mov
das
xchg
adc
pop
(bad)
pusha
cmp
pop
sub
push
mov
and
xchg
les
cmps
push
shl
or
dec
push
mov
ficom
adc
jecxz
and
and
stos
movs
sub
fsubr
mov
test
adc
cs
ret
in
lock
add
dec
inc
sti
fld
in
cmp
sbb
into
adc
mov
fsubrp
dec
and
push
mov
mov
push
sub
daa
push
movs
adc
jns
mov
ins
fild
dec
add
add
jo
inc
inc
inc
ins
xor
or
mov
fisub
pop
pop
push
push
pop
inc
ins
sar
clts
adc
push
jo
pusha
xchg
and
xor
jne
scas
lods
or
push
and
sbb
aas
test
adc
adc
add
sbb
adc
push
or
in
or
std
dec
mov
adc
jle
mov
pop
sub
in
shr
js
cmp
inc
pop
cmp
push
cld
fsubr
inc
add
push
adc
inc
mov
mov
js
xchg
sub
aaa
add
loop
jo
outs
fsub
pop
and
and
lods
je
popa
cmp
or
imul
pop
and
push
and
ror
adc
ror
inc
or
push
jb
sub
adc
push
leave
adc
cmp
sub
adc
adc
mov
push
push
xor
mov
push
mov
pusha
sbb
mov
push
add
pop
shl
push
sub
pop
adc
or
and
add
adc
sub
popa
ins
adc
pusha
or
push
mov
xor
xchg
stos
in
xor
cdq
dec
cmps
xor
fs
cmp
push
sub
sbb
add
and
and
pop
or
or
mov
mov
mov
les
and
mov
push
adc
pushf
cmps
test
popa
movs
(bad)
nop
add
int
ins
test
adc
rol
push
push
sbb
jge
jne
or
daa
jne
mov
xchg
and
dec
pop
add
data16
cmps
ins
add
and
sbb
xchg
pop
cdq
sbb
cmp
and
mov
pop
inc
fbstp
mov
daa
add
add
push
cmp
add
adc
dec
or
or
sub
and
cmc
je
and
pop
rol
mov
mov
aam
rol
rol
call
movs
lods
jg
pop
inc
push
sti
bound
jb
jbe
lock
and
sbb
popf
je
sub
and
xchg
mov
push
mov
cwde
and
loope
popa
dec
xor
aaa
sbb
adc
inc
cmps
in
out
fsub
mov
sbb
sbb
inc
popa
stos
jmp
mov
xchg
push
pusha
push
mov
stos
nop
mov
movs
ret
xor
jmp
mov
out
adc
jne
sub
or
jmp
pop
adc
sub
mov
enter
frstor
rcl
cmp
je
adc
inc
mov
xchg
stc
pushf
and
add
jns
dec
sub
adc
push
add
inc
cmp
iret
mov
inc
loopne
mov
mov
inc
fsub
dec
and
outs
cmp
xor
inc
fcom
call
cli
add
add
ds
fst
inc
sbb
fisttp
pop
cmp
sbb
xchg
pusha
movs
test
xor
es
adc
(bad)
mov
scas
pop
mov
push
arpl
shr
mov
add
add
cmp
das
mov
mov
ret
jmp
ror
mov
test
xchg
cmps
push
mov
adc
jno
sub
and
pop
inc
fmul
aaa
fsub
(bad)
movs
jno
push
aas
or
adc
imul
push
xor
fadd
pop
pop
xor
and
jns
dec
rcl
mov
push
sar
jns
rol
cmp
sub
ret
pop
mov
(bad)
and
adc
add
shl
nop
aas
outs
inc
inc
dec
xor
mov
movs
gs
sbb
xchg
adc
mov
xchg
sub
fadd
lahf
fiadd
mov
mov
inc
je
sub
add
sbb
sub
popf
nop
or
loop
xchg
adc
add
and
mov
add
jmp
or
pop
test
icebp
jmp
and
dec
mov
ins
push
push
inc
push
fiadd
in
mov
lea
xor
push
xchg
(bad)
fsub
loopne
xchg
xor
xchg
sti
dec
add
xchg
aas
popa
inc
ret
pop
ret
(bad)
jb
pop
js
sbb
xor
add
adc
xchg
in
(bad)
(bad)
lea
cmp
test
nop
loopne
sbb
out
mov
sub
xchg
xchg
je
(bad)
jmp
js
in
dec
push
cmp
ret
test
sub
add
push
adc
in
fadd
call
jmp
mov
cmps
push
jmp
xchg
push
out
outs
arpl
mov
cmp
punpckhdq
mov
xchg
sub
mov
add
sbb
fwait
sub
(bad)
adc
nop
xchg
cmps
nop
inc
sub
enter
sub
nop
(bad)
nop
in
mov
cmp
xchg
rol
add
ss
(bad)
pop
stos
mov
push
jmp
out
pop
aad
and
hlt
add
sar
inc
sbb
and
xlat
pusha
mov
mov
adc
retf
dec
stc
fxch
test
pavgb
pop
add
add
or
mov
retf
add
inc
aaa
pusha
imul
cmp
jecxz
or
add
inc
daa
cmps
inc
sub
sub
jmp
(bad)
scas
jge
or
cmp
in
popf
or
or
push
loope
add
xchg
pop
cmp
add
(bad)
fs
and
int3
adc
or
xchg
cmove
adc
cmp
aam
ins
stc
dec
cmps
xor
sub
inc
xchg
jmp
rcl
add
xor
ins
push
aam
xor
fwait
aam
outs
xor
shl
and
ins
stos
xor
daa
adc
call
push
xor
shl
pop
xchg
dec
inc
add
pusha
sub
sub
or
imul
cmps
bound
lods
xchg
ror
cs
mov
cmp
mov
xchg
inc
pop
sbb
xor
lock
adc
or
outs
push
or
and
sub
mov
mov
test
inc
inc
out
test
rol
arpl
mov
clc
ret
outs
outs
adc
fidiv
xor
jne
jmp
test
rol
add
sub
cmc
push
shr
movs
pop
lods
fwait
nop
cmp
rol
test
xlat
icebp
fidivr
mov
mov
outs
stos
imul
jp
sub
sub
inc
inc
call
cmp
pop
jmp
mov
xchg
xchg
jbe
sub
test
movs
out
and
lahf
add
sbb
xchg
adc
movs
adc
add
or
inc
xchg
fiadd
movs
sbb
cmp
das
(bad)
jge
add
jne
and
adc
mov
idiv
loopne
ja
xchg
gs
or
cld
fild
cwde
shl
cdq
and
push
arpl
sbb
inc
je
imul
popf
add
jg
ret
dec
jl
jmp
push
jne
div
mov
stos
mov
push
pop
mov
mov
stc
mov
aas
cmp
stos
fisttp
inc
ret
fwait
mov
mov
in
mov
inc
adc
add
lds
sahf
push
mov
xlat
das
cwd
ret
call
ror
jl
(bad)
call
push
or
dec
mov
add
out
(bad)
aam
inc
dec
cmp
xchg
scas
sub
dec
mov
jo
jecxz
test
xor
jae
or
test
mov
imul
cs
pop
out
dec
js
loop
cdq
ror
adc
and
das
ins
mov
or
sbb
push
in
xchg
cmc
cmp
xchg
inc
push
dec
or
pop
and
push
dec
addr16
mov
movs
pop
add
and
sbb
mov
(bad)
(bad)
in
daa
aas
clc
dec
mov
inc
push
and
or
sbb
call
add
sub
adc
(bad)
nop
jno
cld
sbb
or
cmps
pop
ror
fwait
popf
sbb
jmp
inc
(bad)
xor
in
daa
or
bound
or
clc
inc
arpl
hlt
sub
dec
cmp
mov
mov
pop
outs
repnz
dec
sbb
test
cmp
and
mov
cmp
enter
jne
pop
rol
adc
lea
shl
enter
or
retf
call
add
call
hlt
sahf
pop
or
shl
mov
test
mul
pop
fadd
je
mov
mov
clc
inc
sub
lock
ja
test
add
mov
add
je
dec
adc
or
ja
jmp
pop
cmps
mov
cmp
daa
ret
sbb
test
test
js
inc
clc
retf
and
push
sbb
or
mov
jg
ror
adc
data16
lea
and
add
mov
es
push
sbb
cmp
fisubr
xor
jmp
mov
retf
test
jmp
or
jmp
(bad)
out
cmp
les
loopne
fnstenv
sbb
cmps
pop
sti
xchg
movs
xor
xor
and
popf
add
dec
in
ins
adc
xor
bound
jle
sub
mov
mov
mov
adc
pop
fdivr
aam
inc
iret
pop
aaa
les
inc
test
sbb
mov
outs
cmp
test
arpl
inc
mov
movs
push
retf
shl
adc
inc
cmp
xor
addr16
or
jge
pop
add
jmp
clc
retf
add
xchg
fs
mul
xchg
sbb
and
shl
(bad)
pop
sub
call
aas
cmp
jg
lds
jp
push
or
imul
cdq
sbb
popa
imul
ins
push
psrlq
ror
mov
jb
(bad)
jbe
xor
add
sub
scas
add
sbb
mov
xchg
fwait
sub
xor
pop
sub
js
mov
aaa
adc
inc
mov
pusha
pop
movs
loopne
div
dec
add
push
repz
inc
xor
int
sub
add
push
loopne
loopne
cmp
fwait
popa
shr
dec
leave
add
inc
mov
ror
push
stos
psubusw
call
cmps
cmp
je
and
test
mov
xchg
outs
inc
shr
cmp
fcom
fcomp
inc
and
or
fistp
and
inc
and
ja
inc
cmp
das
loopne
test
(bad)
leave
mov
mov
lods
sub
dec
int
mov
jb
add
cld
push
and
jne
adc
mov
or
push
sub
pop
pop
or
ja
and
cs
in
dec
xor
loopne
dec
(bad)
jmp
cmp
xor
fdivr
test
mov
dec
xchg
pop
add
jo
sbb
jecxz
ret
or
adc
test
and
jmp
add
cmp
jae
xlat
rcl
mov
movs
cmps
call
jge
dec
rcl
into
out
sbb
and
je
rol
mov
mov
add
shl
add
jno
dec
mov
test
ds
sub
test
mov
loop
jg
mov
or
adc
pop
mov
cmp
jae
daa
sar
sbb
push
das
rcr
fmul
sbb
push
arpl
mov
jo
mov
pop
adc
push
daa
mov
imul
iret
ud1
loope
fwait
cmp
jae
dec
fisttp
dec
push
sub
dec
std
pusha
mov
xor
jae
lods
sti
add
mov
rol
fs
push
int3
mov
xchg
xchg
dec
lods
push
sbb
jg
jno
lods
loope
mov
pop
sub
fcom
jns
mov
push
xor
adc
sub
pop
and
sub
imul
push
xchg
pop
or
clc
in
xchg
pop
repnz
add
rcl
leave
push
dec
mov
push
pop
call
shl
mov
rcl
das
in
(bad)
dec
in
adc
or
or
sub
sub
movs
add
add
pop
mov
xchg
jo
or
ror
fmul
mov
shr
pop
sbb
sar
call
sub
jbe
mov
out
loope
or
(bad)
and
cmp
and
sbb
adc
clc
jg
ss
push
dec
(bad)
out
jne
push
repnz
inc
hlt
jl
ret
add
out
cmp
add
add
or
outs
adc
out
cmp
dec
(bad)
mov
xor
out
dec
cmp
jp
dec
mov
es
or
jg
sbb
push
in
add
(bad)
imul
xchg
rol
dec
outs
xor
dec
add
iret
repz
fs
cmp
jo
pop
sub
lock
sub
cwde
les
mov
pop
pop
push
jae
stos
push
xor
out
xor
outs
cwde
inc
lods
and
addr16
push
add
or
adc
dec
nop
jae
dec
adc
cmp
xchg
sbb
dec
dec
daa
sahf
add
leave
ins
push
xor
out
xchg
dec
xor
gs
repnz
pop
daa
mov
mov
imul
adc
pusha
dec
inc
ins
pop
js
pop
mov
shl
pushf
jo
je
push
lods
popa
xor
(bad)
xor
mov
mov
mov
cmp
mov
add
add
add
add
adc
or
mov
mov
adc
repnz
pop
mov
rcl
cdq
mov
loope
loopne
(bad)
add
add
cmps
jmp
jmp
jmp
cmp
cwde
push
push
push
je
out
repnz
retf
xchg
shl
push
repz
lock
push
or
ds
jnp
push
and
add
(bad)
push
rcr
fldcw
add
cmp
loopne
int
fnsave
push
jo
retf
out
sub
aam
in
idiv
in
jge
outs
xchg
mov
es
push
pop
xor
push
cld
jbe
sub
cmp
push
ins
push
mov
icebp
scas
pop
and
call
dec
mov
adc
stc
mov
pusha
push
or
in
add
aam
push
repnz
dec
and
or
clc
(bad)
add
outs
mov
xor
push
push
inc
test
lods
xor
cld
and
push
pop
outs
ins
or
push
dec
xchg
jo
aaa
leave
jl
add
cld
jg
xor
jp
mov
sub
sbb
or
rcl
stc
inc
jge
adc
inc
mov
fstp
add
movs
mov
nop
mov
int
out
push
adc
pop
or
push
pusha
popa
ins
pminsw
or
lods
mov
or
xor
hlt
dec
stos
or
sub
mov
dec
or
mov
lahf
and
je
inc
sbb
add
mov
inc
sbb
mov
mov
add
push
xlat
jp
push
stos
dec
jl
leave
bound
or
movs
imul
push
pop
jmp
fcom
pop
pushf
inc
pop
cmps
cmp
hlt
in
rcl
dec
in
push
fcomp
popa
leave
in
dec
inc
call
fisubr
call
dec
xor
and
in
and
lahf
and
lahf
dec
rcl
xor
or
rcl
mov
adc
sub
push
add
call
in
sub
or
mov
les
repz
inc
ficomp
jge
inc
fsub
fild
dec
fcomp
cmp
mov
adc
fdiv
xchg
xor
ins
adc
popa
mov
xor
mov
clc
cld
sbb
and
fnstsw
add
pop
les
mov
repnz
rcl
or
or
ret
popf
sub
jbe
nop
pop
mov
jp
bound
cmc
sub
mov
push
sbb
jle
xor
jnp
mov
dec
adc
push
xor
jecxz
sar
ds
xor
dec
mov
fwait
shl
test
sahf
dec
push
bswap
sbb
scas
enter
and
add
ins
cmp
inc
mov
call
dec
test
std
scas
clc
pop
sub
xchg
cmc
fst
xor
push
dec
adc
adc
addr16
test
(bad)
aad
add
(bad)
sub
push
sub
push
outs
add
outs
push
scas
or
jmp
out
movs
jno
scas
rcl
inc
scas
cmp
and
jne
pop
mov
test
add
adc
enter
pop
(bad)
mov
popa
mov
popf
mov
nop
fmul
mov
add
adc
cld
dec
clc
into
aam
jb
inc
test
arpl
sbb
outs
dec
(bad)
push
shl
rcr
bound
neg
mov
jmp
push
push
call
mov
jbe
hlt
xlat
jno
xchg
pop
fmul
data16
sahf
aam
imul
adc
pop
call
push
mov
les
pop
cmp
push
lods
adc
test
push
or
xchg
(bad)
mov
mov
in
aam
adc
call
add
sbb
idiv
je
or
jg
push
pop
cdq
cwde
sub
adc
mov
jb
test
or
loopne
mov
or
sub
sub
mov
je
pop
clc
dec
mov
inc
adc
std
ss
sbb
mov
sbb
ror
and
and
movs
(bad)
retf
retf
lods
pushf
inc
jl
or
adc
mov
cs
sti
pop
shr
xchg
sub
loopne
inc
(bad)
nop
or
dec
(bad)
xchg
not
retf
or
lock
jmp
adc
jno
dec
mov
or
dec
clc
cwde
sub
cmp
mov
push
xor
loopne
xor
push
add
scas
adc
fcom
xchg
(bad)
jmp
mov
push
mov
xlat
pushf
mov
jmp
jae
(bad)
mov
xlat
(bad)
and
ss
and
adc
js
arpl
and
adc
pop
dec
dec
sbb
mov
sbb
push
jmp
sub
xchg
xchg
loope
arpl
je
add
mov
xor
cmp
adc
fs
pop
mov
jnp
mov
mov
push
xchg
imul
arpl
test
pop
pop
fwait
inc
pop
adc
in
adc
pusha
sub
ret
adc
sub
addr16
mov
add
and
inc
arpl
inc
(bad)
push
or
cwde
cmp
dec
aaa
jnp
push
mov
je
xor
ret
push
daa
sub
push
retf
xor
adc
mov
add
int
mov
cmp
adc
xor
mov
push
ret
cmps
push
mov
adc
jp
pop
pop
xor
shl
lods
or
(bad)
push
sti
test
or
sbb
jno
jge
push
add
lods
cmp
sub
jnp
mov
jne
push
jns
scas
pop
aaa
sub
and
and
mov
movs
adc
pop
dec
sbb
adc
push
sub
sub
push
dec
xchg
fidiv
add
or
jle
jg
ss
rcr
mov
pusha
ins
pop
lods
pusha
pop
inc
adc
mov
inc
cmps
scas
hlt
sti
cmp
rcr
loopne
ins
xchg
dec
push
pop
xlat
cmps
push
call
enter
nop
fdiv
mov
dec
push
fldcw
inc
sbb
int3
and
sbb
int3
or
sbb
fisub
inc
data16
xor
pop
add
ret
and
(bad)
std
in
repz
in
push
add
sbb
movs
and
(bad)
loopne
mov
pop
sahf
xor
inc
mov
(bad)
(bad)
xchg
nop
shl
movs
and
ret
out
stos
out
and
iret
pop
test
inc
inc
and
rol
data16
jmp
jl
inc
loopne
adc
cmp
mov
push
repnz
inc
mov
aad
xchg
outs
int3
call
jne
add
dec
push
arpl
imul
adc
mov
push
jmp
dec
shr
cmp
out
dec
pop
imul
sbb
and
push
cld
dec
sbb
dec
sbb
sub
popa
das
ins
mov
cwde
shl
jmp
movs
ins
sbb
mov
or
or
call
data16
or
jl
sbb
xchg
lea
xchg
xor
leave
and
hlt
mov
sbb
sub
rol
sbb
inc
imul
ins
cld
hlt
cmp
sub
call
cs
push
dec
push
dec
call
mov
xchg
ja
pusha
cmp
xor
or
inc
add
(bad)
addr16
jge
neg
adc
dec
dec
push
je
lea
adc
add
fimul
inc
arpl
pop
jns
adc
int3
fcom
pop
out
leave
mul
ficomp
pop
jmp
call
sbb
push
mov
pop
or
mov
icebp
add
sbb
sub
push
test
movs
or
hlt
cmps
jne
inc
cdq
int3
sbb
mov
mov
test
in
jmp
retf
xchg
jmp
in
dec
retf
loope
cmc
sbb
in
push
ret
xchg
fwait
icebp
mov
or
pop
cmps
frstor
adc
push
and
mov
push
jno
pop
mov
and
or
add
mov
pop
daa
and
jmp
mov
xchg
scas
jmp
popf
nop
sub
scas
pusha
mov
dec
popa
mov
add
add
add
fiadd
push
and
dec
pop
cmp
(bad)
cmp
and
mov
mov
push
adc
loopne
sub
mov
dec
pop
inc
sub
adc
xchg
jmp
repz
pop
push
stos
mov
add
push
or
ins
retf
xor
mov
xchg
outs
les
or
int
push
xchg
jne
or
xor
outs
dec
sub
xor
add
sbb
sub
ror
and
push
mov
xor
dec
and
mov
cmp
shl
and
add
adc
xor
test
add
nop
je
enter
and
adc
or
inc
mov
mov
lods
mov
mov
cmp
xchg
sbb
inc
dec
loop
ja
pop
push
fist
sub
test
push
inc
scas
fs
mov
push
mov
or
movs
test
mov
(bad)
push
stc
stc
jb
and
ins
pusha
and
mov
stc
or
pusha
loopne
nop
xchg
je
in
xor
pop
sbb
inc
retf
xchg
and
xchg
inc
sub
sub
push
cmps
inc
mov
sub
adc
xor
or
jl
jmp
aas
nop
fist
sub
inc
inc
cmp
loopne
ins
sbb
pushf
lea
jo
mov
cmp
pop
dec
mov
scas
call
out
pop
mov
add
jg
in
adc
add
push
sub
inc
fcom
test
test
and
nop
daa
mov
nop
outs
pop
xor
add
jle
xchg
in
jge
add
and
push
out
adc
dec
cmp
and
imul
mov
gs
add
imul
les
repnz
push
xchg
xor
xor
mov
push
or
mov
test
push
lods
dec
xchg
push
push
sub
dec
jns
xor
jne
pop
in
dec
fdivr
or
push
pusha
stos
xchg
jo
aas
dec
enter
pop
xchg
loop
cmp
and
test
sub
fistp
clc
jns
add
loopne
dec
jmp
stos
ret
cmps
adc
jb
loop
push
ret
or
out
call
and
sbb
movs
inc
or
call
out
push
push
cmp
fdiv
push
xor
or
data16
ins
dec
pop
repnz
imul
sbb
int3
mov
dec
and
pop
xchg
mov
jae
in
xchg
aam
or
jl
sbb
xor
dec
push
sub
shr
add
adc
nop
sub
or
scas
and
xor
add
sar
jecxz
and
add
lods
sub
sub
and
(bad)
mov
add
dec
push
add
mov
add
imul
in
loopne
sahf
add
bound
push
(bad)
sahf
xor
xor
jg
fistp
add
jg
and
xor
xchg
shl
jge
add
sbb
push
arpl
call
sbb
loop
hlt
je
dec
movs
inc
sub
out
inc
aam
xor
je
inc
add
push
mov
xchg
ret
push
xor
mov
popa
aam
xor
mov
mov
and
add
ins
pop
mov
xchg
test
mov
sbb
push
cs
pop
movs
pop
das
cmp
inc
dec
rcl
xor
inc
dec
lock
les
shl
sti
sub
add
shl
dec
pushf
nop
and
in
je
jno
jae
fist
lock
jmp
sub
ins
pusha
ror
inc
push
inc
xor
fldcw
pop
ucomiss
test
sbb
aad
cmp
sbb
push
sbb
mov
mov
xchg
test
in
je
retf
repnz
and
ins
js
pop
push
retf
cs
push
nop
mov
cmp
add
push
inc
jo
fwait
mov
shr
and
sbb
cmps
stos
add
and
fdiv
adc
xlat
fcmovb
sub
push
add
scas
cmp
sub
xor
or
rcl
jmp
or
mov
bound
out
or
rol
push
push
nop
out
add
div
jae
add
adc
sbb
fbstp
push
cmp
adc
lods
push
mov
sbb
inc
jbe
jmp
pop
aam
dec
cmp
fs
mov
pop
les
sbb
test
xchg
sar
enter
dec
shl
dec
push
push
cmps
mov
ja
sbb
mov
pusha
enter
xor
push
xchg
adc
jne
or
add
lea
loope
loop
and
push
aad
adc
(bad)
adc
adc
add
(bad)
aas
adc
sub
mov
lahf
mov
sub
js
sbb
ret
out
popa
sar
xchg
int3
sar
push
clc
sub
sub
sbb
(bad)
mov
cmp
shr
jne
add
loopne
test
push
rcr
adc
inc
add
(bad)
aad
clc
add
lods
xchg
xor
add
mov
xor
in
fs
mov
inc
mov
dec
push
js
mov
(bad)
sbb
sbb
push
xor
enter
shr
cmps
retf
cwde
enter
sub
enter
cmps
add
pop
fimul
pop
in
mov
cmp
popf
(bad)
jnp
lods
ror
je
(bad)
xor
js
xchg
aaa
inc
das
mov
lea
or
add
sub
ret
adc
mov
cmp
movs
pop
dec
cwde
xchg
call
xchg
sub
int
cmp
arpl
enter
inc
add
rol
pop
rcr
(bad)
enter
jno
jo
fcmovu
jnp
jns
and
pop
call
mov
add
dec
es
loope
mov
imul
sbb
pop
push
jne
push
jmp
jo
mov
jae
push
adc
xor
scas
mov
jmp
aaa
dec
pop
push
add
aaa
(bad)
cwde
cs
or
pushf
jge
fwait
inc
cmp
sbb
jbe
xor
(bad)
jmp
xor
push
mov
or
int3
int3
adc
mov
std
xchg
fidiv
bound
push
add
push
sbb
xchg
mov
inc
mov
(bad)
gs
and
xor
mov
stc
shufps
or
imul
out
hlt
sbb
pop
dec
shr
leave
rcl
(bad)
push
clc
or
push
xor
push
arpl
shl
dec
add
sbb
adc
or
ins
lods
pop
inc
dec
jnp
add
daa
outs
inc
daa
imul
inc
add
dec
push
movs
pop
jg
dec
es
add
cmp
jo
inc
stos
leave
xor
pop
adc
xor
in
adc
and
push
sub
xchg
hlt
mov
push
push
popf
or
mov
push
retf
mov
aam
data16
loope
stos
pop
pop
test
dec
mov
jno
push
fsubr
jl
dec
cmp
pop
sbb
outs
fs
inc
or
iret
in
mov
sbb
cli
adc
xor
cld
adc
test
movs
inc
and
test
repz
mov
xchg
push
mov
adc
add
xchg
jbe
adc
adc
pop
test
pop
repz
ror
push
lahf
push
pop
pop
addr16
cmp
lds
aam
inc
clc
nop
mov
outs
leave
cmps
jo
ins
dec
cmp
repnz
xor
mov
dec
aas
in
icebp
lods
push
lods
jmp
out
clc
pop
sbb
arpl
mov
in
pop
aas
ds
daa
adc
sub
mov
lock
push
movs
xor
jne
sub
js
or
push
je
je
movs
adc
outs
push
jnp
xchg
xor
jo
mov
sub
movs
pop
stos
outs
lahf
push
movs
inc
loopne
inc
add
or
adc
retf
pop
cmp
les
sbb
xor
adc
jmp
fwait
sbb
add
push
rcr
ins
jbe
jo
adc
and
shl
sbb
(bad)
repz
rcl
jo
iret
jmp
adc
mov
sub
sub
mov
inc
sbb
cmp
stc
mov
mov
cwde
out
dec
inc
inc
sbb
xor
push
fwait
dec
and
push
push
push
xor
mov
pusha
cmps
popf
popf
les
sub
sbb
lock
push
sub
cdq
push
dec
cmp
cmp
xor
xchg
or
jl
cmp
add
cmp
movs
xchg
jb
or
retf
fwait
and
jle
test
xchg
mov
push
mov
and
add
adc
std
fidiv
jge
pop
inc
je
jnp
mov
out
add
retf
pop
hlt
adc
mov
shr
adc
sahf
sar
add
jl
sbb
pop
push
loop
mov
xchg
stos
ret
stos
repz
cmp
dec
push
fsub
adc
sbb
in
imul
push
push
jmp
aam
cmps
or
push
mov
pop
adc
inc
movq
retf
jle
sbb
or
xor
dec
cmps
dec
mov
add
mov
xor
sub
icebp
sahf
popa
sahf
outs
ins
push
imul
cwde
jmp
enter
sub
add
and
and
and
bound
aad
xor
and
dec
ins
push
int
dec
mov
xor
jmp
outs
xchg
inc
mov
jl
xor
push
sub
sbb
dec
add
adc
adc
sbb
sub
dec
and
das
ror
adc
mov
xor
lea
adc
push
cmp
in
pop
jecxz
jne
daa
pop
in
or
add
add
fidivr
rcr
and
into
cwde
inc
jbe
shl
jo
enter
inc
mov
imul
nop
mov
dec
mov
inc
push
js
out
add
loope
cmp
shl
inc
pop
mov
out
pop
fild
push
mov
xchg
xchg
adc
movs
ds
cs
stc
es
mov
or
dec
mov
or
pop
pop
loop
sub
pop
and
dec
push
jp
sahf
je
xchg
cmps
mov
movs
pusha
jno
ror
mov
cwde
jg
adc
jg
pop
jl
gs
mov
xor
mov
fwait
test
arpl
pop
call
sbb
mov
adc
add
loopne
mov
push
pop
fmul
stc
jge
and
(bad)
loopne
mov
pop
jae
hlt
xor
(bad)
rol
out
and
popf
in
ss
mov
add
sbb
cmp
fcomi
add
cli
add
push
and
sahf
xchg
je
pop
mov
and
addr16
add
cmps
xor
neg
inc
dec
push
dec
sbb
push
xchg
idiv
sub
inc
cmp
and
sub
push
or
nop
leave
sti
or
call
ins
scas
sub
outs
mov
mov
push
aaa
adc
or
mov
dec
aaa
ja
xchg
mov
mov
xor
arpl
jb
in
leave
cwde
cmp
loopne
jne
ins
inc
jo
xchg
mov
(bad)
jle
add
add
out
xchg
mov
test
sub
and
jo
nop
leave
in
es
and
fsubrp
jge
push
pop
es
loopne
aas
das
push
cwde
adc
mov
push
addr16
pop
jae
xchg
sub
(bad)
dec
mov
jae
xchg
add
and
xchg
fldenv
inc
dec
dec
mov
jo
mov
add
jp
sbb
rcr
in
jo
jns
or
sbb
and
call
xchg
jns
add
jnp
test
mov
push
xchg
or
aaa
xchg
ss
fist
mov
aam
popf
retf
sub
adc
clc
repz
adc
test
dec
cli
rcl
push
sbb
jbe
dec
clc
push
pop
in
push
pop
push
xchg
push
or
stc
jne
inc
inc
jge
and
imul
mov
stc
push
xor
add
out
adc
add
or
push
cmps
cld
retf
das
loopne
sbb
sbb
and
gs
pop
add
aad
mov
xor
cmp
(bad)
out
sbb
call
add
js
adc
jg
shr
cmp
push
xchg
inc
or
outs
xchg
mov
inc
push
mov
or
push
inc
iret
mov
push
mov
sub
cmp
xor
inc
int
xchg
and
add
push
inc
aaa
imul
xchg
mov
pop
mov
add
shr
xlat
cs
push
pop
sub
sub
add
pop
sub
xchg
clc
nop
inc
mov
test
pcmpgtd
add
int
mov
sub
xchg
pop
cmps
cmp
mov
lahf
in
push
or
ret
and
clc
add
lea
xchg
jmp
dec
mov
aad
pop
popa
mov
pop
cmps
adc
add
push
out
fsub
pop
or
dec
push
and
xor
lea
test
or
jbe
jne
adc
aas
pushf
adc
jne
adc
pop
nop
pop
or
xor
push
test
push
pop
cwde
pop
pop
mov
mov
cmps
and
mov
fsubr
fild
push
dec
test
stos
push
or
and
pusha
add
push
cmp
dec
pop
jb
xchg
fisubr
mov
sbb
sub
test
adc
fimul
dec
sbb
aas
or
xchg
fldcw
mov
xor
shl
jne
mov
mov
push
scas
fistp
jg
sub
idiv
mov
pop
les
fcom
or
dec
add
add
ror
jae
mov
mov
or
and
xchg
add
mov
lods
leave
mov
xchg
lods
mov
das
popa
fstp
arpl
xchg
dec
lock
xchg
sar
enter
cld
or
jae
pop
sar
sbb
pop
dec
xor
ror
lock
sti
xchg
and
neg
jmp
inc
mov
sub
pusha
jle
sub
cld
add
cmp
cmp
fwait
movs
and
and
xlat
or
movs
daa
add
movs
(bad)
int3
out
mov
inc
jg
mov
je
popf
outs
sub
fwait
lock
mov
sub
imul
fs
adc
in
push
jne
xchg
add
rcl
add
push
adc
sub
aam
popf
cmp
mov
dec
push
pusha
pop
add
mov
rcr
nop
out
outs
mov
pop
mov
dec
dec
adc
sub
or
push
nop
pop
jo
dec
popf
and
mov
add
sahf
and
test
sbb
add
hlt
js
scas
and
dec
nop
lds
sub
leave
or
add
fiadd
je
das
in
mov
add
in
add
cli
outs
xor
enter
addr16
xor
std
sahf
add
push
je
inc
jne
jmp
repz
in
test
sbb
(bad)
std
inc
retf
test
test
xor
iret
dec
cmp
cwde
test
or
mov
test
loopne
lea
nop
and
cmp
push
in
pusha
fldcw
sub
test
dec
or
cmps
test
int
mov
inc
daa
inc
sbb
and
outs
fistp
lock
adc
jg
dec
pop
(bad)
add
and
or
call
cmp
pop
ins
test
ins
mov
and
(bad)
mov
jp
xchg
mov
data16
xchg
pop
xchg
adc
out
mov
aam
add
in
rcr
add
sbb
retf
std
(bad)
movs
cmp
aam
xor
adc
push
jo
out
fdivr
in
movs
push
xchg
inc
das
stos
shl
int
sti
push
inc
das
adc
or
add
push
mov
dec
and
xchg
dec
sbb
arpl
neg
ds
int
jg
add
push
js
xor
and
adc
inc
inc
addr16
push
shl
jne
test
(bad)
(bad)
std
je
cmc
dec
enter
pop
pop
das
mov
and
movs
scas
jmp
scas
aas
test
cmp
mov
popa
in
pop
movs
mov
test
inc
or
aam
adc
rol
fisttp
or
push
loop
outs
imul
xchg
xchg
jecxz
inc
inc
xchg
shr
pop
ret
test
dec
iret
add
inc
add
adc
mov
dec
mov
dec
jp
je
and
pop
sti
adc
aas
adc
fcomp
add
or
pop
arpl
(bad)
popa
xchg
mov
outs
push
pusha
adc
or
pop
ror
and
xor
mov
imul
xchg
xor
mov
add
or
add
adc
cmp
push
sub
rcl
push
push
inc
inc
push
loope
mov
lock
or
push
xlat
add
pop
dec
add
jmp
sbb
or
outs
loopne
out
inc
in
dec
dec
rol
push
jbe
dec
add
pop
adc
sbb
jge
mov
mov
xor
movs
mov
(bad)
fstp
daa
push
lds
sbb
jmp
sahf
inc
xor
hlt
in
loopne
mov
add
enter
cmp
pusha
mov
cmp
popf
enter
xor
test
test
je
mov
ds
daa
inc
loopne
xchg
dec
jmp
ja
mul
add
jo
adc
pop
and
pop
and
(bad)
icebp
push
add
loopne
add
inc
xor
mov
ss
mov
mov
dec
test
mov
push
movs
jg
sbb
int
inc
ins
push
mov
mov
xchg
dec
pop
mov
add
ds
sbb
cmp
lock
mov
pop
inc
adc
xchg
jmp
jmp
in
xchg
pop
nop
ins
jg
inc
loopne
and
push
dec
and
sub
adc
mov
shl
dec
call
cmp
mov
nop
pop
cmp
or
pop
test
dec
adc
pop
mov
pop
inc
dec
icebp
sub
pop
dec
pop
add
(bad)
ficomp
movntps
sub
aaa
sub
jne
dec
xor
add
add
inc
aam
add
jp
jge
aas
dec
aam
movs
mov
push
pop
jo
lods
xchg
and
dec
xchg
call
mov
mov
inc
inc
stos
nop
mov
aam
xchg
or
ds
push
push
add
loop
enter
test
cmp
push
aaa
add
mov
xchg
jo
mov
cwde
add
add
xchg
int
and
inc
inc
jecxz
inc
or
sbb
movs
loop
dec
loopne
jge
mov
adc
pop
adc
xor
cmp
ret
xlat
(bad)
sti
mov
inc
test
aas
cdq
sbb
mov
sbb
cmp
mov
dec
aad
xchg
fild
mov
pop
mov
sbb
cmps
add
sub
(bad)
adc
push
inc
xchg
mov
push
(bad)
mov
ror
xor
cdq
xchg
sbb
jne
mov
mov
not
add
sbb
push
in
add
xchg
or
and
cmp
push
popa
(bad)
add
not
push
xchg
or
mov
in
dec
adc
sub
cmp
dec
mov
cmp
imul
jbe
lods
or
and
xor
in
ret
sub
push
inc
inc
sbb
ss
xchg
or
dec
and
sbb
sbb
jmp
mov
jnp
dec
cmp
pushf
adc
fstp
in
mov
gs
fsub
rol
jge
cwde
iret
xchg
inc
push
stc
push
loopne
xchg
xchg
pop
push
retf
xlat
jne
loope
ret
or
dec
inc
or
adc
xor
add
sar
add
add
dec
and
inc
popf
hlt
pop
imul
(bad)
jl
(bad)
(bad)
pop
dec
or
push
fimul
out
mov
and
sub
das
mov
arpl
pushf
mov
mov
add
xchg
dec
enter
adc
jmp
xchg
add
test
not
add
fistp
aaa
add
(bad)
lods
mov
or
jnp
shl
ret
push
retf
mov
fwait
into
inc
fmul
sub
jnp
imul
push
sub
inc
test
test
rol
mov
shl
loopne
outs
retf
add
ja
cmp
sbb
and
imul
push
in
xchg
addr16
clc
and
or
(bad)
aaa
jne
jg
stc
push
in
jge
xchg
sub
stc
pop
sbb
or
cmps
push
xchg
icebp
cmps
sub
je
dec
je
push
pushf
xor
mov
xor
push
inc
ss
loope
jno
test
in
add
or
cdq
fisubr
ret
adc
pusha
cwde
adc
fsub
(bad)
retf
adc
lods
mov
dec
dec
push
inc
and
shl
xchg
frstor
cmps
add
sahf
jmp
call
jbe
add
popf
jg
jns
jg
push
mov
fwait
jg
imul
push
js
and
xor
push
mov
adc
mov
inc
fsub
pop
push
jnp
mov
mov
fild
cmp
push
aad
push
daa
out
cwde
jo
inc
adc
pop
pop
stos
lea
cmp
mov
pushf
mov
sub
add
or
mov
or
adc
mov
call
sbb
add
jle
cmp
xor
xor
mov
xor
rcr
jecxz
and
jmp
and
ror
dec
jne
sub
nop
scas
xchg
addr16
ret
jp
jo
(bad)
ror
es
sbb
sbb
dec
jle
xor
lock
inc
mov
push
cmp
jnp
mov
add
or
dec
pusha
fs
sahf
mov
adc
mov
nop
xchg
add
sbb
lea
mov
scas
loopne
jnp
jns
aam
sbb
xchg
lock
popa
retf
aam
mov
mov
cmp
das
push
pop
cmp
out
jmp
push
enter
add
lock
jmp
mov
pop
(bad)
mov
fwait
jp
sbb
sbb
outs
mov
rol
dec
add
jne
add
mov
mov
cmp
lods
fild
sub
fwait
jo
out
pusha
and
iret
sub
js
adc
sbb
jmp
mov
add
add
and
mov
stos
ja
cdq
push
sub
mov
xchg
mov
push
adc
nop
and
imul
cwde
adc
mov
ret
xchg
out
sbb
nop
movs
push
loope
dec
aad
ret
sti
fstp
jo
aaa
push
dec
xor
in
pushf
es
xor
in
(bad)
cmp
sbb
and
cmp
fistp
cmps
jne
cmp
std
add
lock
scas
mov
or
jmp
push
dec
dec
dec
adc
loope
test
scas
inc
mov
mov
push
push
hlt
dec
xor
movs
push
nop
data16
push
mov
jmp
and
pop
nop
mov
push
pop
add
adc
hlt
sub
mov
jne
lods
xor
inc
or
xor
daa
add
mov
icebp
dec
and
pop
mov
ret
in
xor
mov
inc
addr16
retf
rcl
xlat
mov
sbb
push
(bad)
mov
xchg
movs
popf
test
shl
aam
adc
(bad)
js
pop
xchg
jns
das
pop
sbb
aas
imul
cmc
inc
clc
mov
mov
adc
push
lods
jl
js
push
fiadd
mov
pop
repnz
rol
or
inc
mov
inc
retf
add
and
lahf
cmp
inc
addr16
(bad)
push
and
sbb
add
lds
nop
pop
dec
loope
add
mov
xchg
xchg
inc
sub
mov
fist
or
je
js
sbb
(bad)
mov
pusha
xchg
mov
or
add
ret
cmp
dec
inc
sub
mov
or
pop
jnp
inc
cmps
jge
add
push
mov
sbb
inc
jl
call
adc
rcl
cmp
jle
mov
dec
lds
and
push
test
jnp
pop
adc
cmps
or
pop
add
loope
daa
dec
bound
xor
lds
fwait
sub
mov
fwait
daa
int3
pop
pop
or
mov
out
imul
nop
dec
push
mov
inc
in
jl
dec
xor
popa
movs
popa
jno
test
call
push
dec
xor
add
in
test
inc
pop
or
mov
adc
mov
mov
and
retf
dec
or
and
leave
mov
adc
push
sbb
cmc
inc
sbb
adc
mov
sbb
add
cwde
bound
dec
sbb
pop
adc
cmp
daa
jns
push
dec
cmps
mov
push
lahf
shl
aaa
dec
cmps
pop
xchg
in
mov
imul
mov
adc
shl
je
lock
sahf
and
and
xlat
xor
xor
dec
cmp
pusha
mov
or
inc
or
in
inc
push
dec
pop
cdq
adc
pop
test
(bad)
leave
xor
dec
add
lahf
push
push
or
fs
xor
mov
and
mov
xchg
cmp
push
sub
ret
hlt
shl
sub
clc
or
or
xor
push
leave
and
cmp
dec
add
inc
leave
and
leave
dec
stos
aaa
xchg
lods
dec
dec
(bad)
(bad)
and
xlat
jae
clc
lahf
add
and
inc
and
add
adc
(bad)
sbb
cmc
push
cmps
or
and
or
(bad)
fbstp
mov
imul
dec
and
or
rcl
outs
pop
call
xor
(bad)
push
dec
call
push
add
jno
dec
ss
enter
mov
or
sbb
inc
dec
jno
daa
imul
mov
push
push
xor
and
xchg
dec
dec
push
fiadd
nop
and
xor
mul
dec
das
push
push
inc
add
xchg
push
cli
mov
mov
call
sub
lds
aas
ror
inc
imul
jb
ins
daa
jnp
sub
jbe
xchg
pop
mov
(bad)
daa
retf
and
ins
pusha
lahf
dec
push
sbb
or
xor
dec
dec
dec
inc
je
out
aam
fmul
sbb
jne
cmp
jmp
mov
test
test
dec
xor
or
push
xchg
sbb
shl
daa
fwait
cmc
shl
retf
je
xchg
imul
jno
jmp
sub
cdq
rcr
fist
jge
aas
pop
test
test
les
ins
jecxz
jb
scas
call
mov
fadd
add
inc
lahf
xor
or
iret
and
xor
sbb
sub
test
push
in
popa
sub
cdq
aam
sub
sbb
push
or
clc
or
mov
lea
mov
sub
cdq
cld
or
pusha
jno
or
add
mov
test
mov
lds
mov
cmp
mov
or
out
adc
adc
pushf
or
jo
inc
and
das
mov
or
push
int3
les
stos
movs
je
inc
mov
add
add
xchg
sub
(bad)
and
(bad)
std
sub
mov
xor
cs
jmp
(bad)
mov
dec
aas
or
pop
jmp
pop
push
stos
xchg
popa
sbb
aaa
repnz
xchg
jno
lods
ror
ret
lds
(bad)
hlt
cmp
pop
push
push
stos
mov
sbb
fld
div
add
xchg
dec
movs
mov
xlat
xchg
js
rol
pop
adc
pop
fisubr
pop
mov
pop
imul
inc
test
jae
sbb
sub
inc
jns
mov
call
cmp
pop
adc
jmp
fstp
lods
lds
xchg
mov
test
mov
cmp
movs
and
aad
rol
and
mov
xchg
inc
mov
pop
xchg
and
pusha
retf
enter
adc
adc
or
scas
pushf
hlt
xchg
mov
adc
pop
add
and
dec
ja
pop
inc
mov
xlat
push
adc
push
rol
enter
xchg
inc
dec
fdivp
data16
cmp
pop
dec
sahf
in
or
in
mov
add
in
mov
ins
mov
cwde
fcomp
pop
ror
pusha
std
add
sub
or
and
retf
or
(bad)
cmp
push
mov
jl
adc
add
cmp
retf
inc
fwait
mov
push
das
push
add
or
dec
cmp
mov
mov
rcl
push
movs
movs
xchg
mov
jl
retf
jge
xchg
je
sub
jbe
cwde
mov
aas
sbb
jmp
dec
in
jmp
(bad)
add
pop
or
loopne
retf
add
xor
sbb
dec
lods
xchg
ds
repz
pop
daa
push
pusha
add
push
push
push
fidiv
jg
aam
or
std
dec
pop
pop
sub
fimul
xor
outs
dec
xchg
not
inc
jp
dec
add
mov
stos
xor
cld
add
fild
pop
cmp
mov
mov
or
add
ins
ins
repz
daa
sub
and
call
pop
jl
nop
jge
scas
mov
stos
daa
push
cdq
push
mov
bound
cmp
dec
add
dec
add
xchg
clc
cmp
iret
ins
and
stc
retf
sub
add
or
jmp
cmp
add
add
inc
outs
push
gs
ss
jnp
push
nop
int
ins
push
add
inc
enter
add
add
das
inc
cmp
and
dec
js
aad
(bad)
jl
neg
dec
mov
or
dec
rcl
add
popf
(bad)
jmp
ror
or
add
dec
mov
add
mov
sar
cmps
pop
and
push
sub
cwde
js
sub
cmc
sbb
mov
(bad)
sbb
enter
mov
mov
stc
clc
lock
(bad)
in
bound
xlat
xor
add
adc
or
cmp
not
dec
enter
stos
sar
or
sub
mov
dec
nop
push
gs
inc
sub
inc
xchg
jne
icebp
lds
sbb
ins
xor
nop
add
rcr
adc
mov
shr
ror
mov
mov
adc
dec
push
cs
jmp
sub
xchg
xchg
mov
add
add
xor
fsub
and
addr16
and
mov
and
jnp
add
and
daa
sub
and
add
or
jae
das
push
or
xor
jb
push
push
xor
or
in
icebp
pop
and
mov
cmp
fist
pop
test
xor
scas
hlt
xor
ror
ja
call
or
fistp
lods
(bad)
loopne
sahf
cwde
xor
add
add
mov
push
(bad)
test
cmps
jno
adc
or
jb
jns
xchg
(bad)
ins
in
jnp
mov
aad
xchg
dec
sub
(bad)
sbb
push
inc
push
jns
(bad)
cld
push
lea
cwde
push
sbb
shl
adc
or
fist
push
outs
adc
mov
add
xor
xchg
push
cwde
cmp
into
add
mov
adc
xchg
retf
lock
mov
push
mov
sub
sbb
scas
nop
inc
pop
lods
add
(bad)
outs
pop
pop
dec
sub
mov
and
arpl
popa
add
mov
fs
push
ret
je
xlat
fwait
mov
jo
add
push
int
call
pop
jne
sub
sub
push
xor
sub
xchg
push
cmp
pop
inc
movs
adc
jge
test
jne
cmp
and
add
xchg
(bad)
iret
xchg
aad
mov
icebp
fild
add
mov
add
test
sub
ret
sbb
sub
sbb
push
dec
mov
gs
xlat
(bad)
loop
ror
sbb
popa
pop
cmp
push
mov
adc
push
sbb
or
inc
aaa
test
pop
sub
inc
(bad)
mov
mov
dec
ins
mov
inc
clc
fwait
mov
cmp
dec
outs
push
jno
add
por
and
adc
xor
or
sbb
pop
pop
xchg
pop
ret
mov
cmp
inc
popf
push
mov
fwait
pushw
nop
mov
add
and
mov
mov
xor
jg
int
pop
je
sbb
fidivr
xor
cmp
data16
int3
dec
or
stos
inc
ins
test
lods
mov
dec
mov
hlt
popf
outs
cdq
nop
pop
sub
xchg
mov
cmps
jmp
adc
shl
je
mov
push
push
jne
ss
das
pop
pop
cmp
mov
fadd
sbb
test
add
inc
xor
lock
xchg
fld
test
aas
mov
sbb
rcl
aad
mov
mov
add
stos
rcr
retf
or
sti
aaa
jle
das
in
fsubr
sub
sub
inc
sub
xchg
ins
sub
jmp
xchg
cld
fcomp
mov
outs
or
lods
xor
fadd
sub
xlat
cwde
jno
scas
stos
js
or
and
ins
fst
repnz
inc
cld
je
cld
stos
ss
sub
shr
cmovns
cli
adc
push
mov
add
pop
jle
(bad)
mov
scas
rol
sar
fdivr
pop
fistp
adc
(bad)
pop
pop
pop
push
jb
in
cmp
je
push
ret
jmp
mov
xor
shl
add
add
add
xor
shl
add
add
dec
push
aam
into
or
xor
shl
ret
or
xor
shl
dec
shl
adc
adc
imul
mov
cmps
imul
cmps
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
pop
dec
sub
sub
cs
retf
in
sub
jb
pop
xor
xor
cs
retf
xor
mov
cmp
ds
inc
inc
inc
jb
pop
cs
inc
inc
inc
cs
retf
in
dec
dec
dec
dec
in
mov
dec
retf
in
cdq
push
push
push
push
mov
push
push
push
pop
xchg
retf
in
pop
pop
pop
pop
pop
jb
pop
cs
pop
pusha
popa
in
leave
in
arpl
cs
retf
addr16
retf
in
mov
mov
jo
jb
xchg
retf
in
je
jbe
cs
retf
gs
jp
jl
jb
pop
jge
jg
pop
cs
retf
add
xchg
xchg
mov
mov
xchg
xchg
cs
retf
in
xchg
xchg
xchg
xchg
in
mov
fwait
dec
cs
retf
pushf
popf
sahf
lahf
mov
mov
retf
in
movs
cmps
cmps
test
jb
pop
cs
stos
lods
lods
cs
retf
in
scas
mov
mov
cs
pop
mov
mov
retf
in
mov
mov
mov
retf
in
rol
ret
les
mov
(bad)
enter
pop
leave
retf
pop
cs
retf
int
iret
rcl
retf
in
mov
mov
xlat
fcomp
fidiv
dec
jb
(bad)
fisubr
xchg
retf
in
loopne
loop
in
mov
out
cs
retf
call
cdq
in
mov
xchg
retf
in
icebp
repnz
cmc
jb
pop
cs
clc
stc
cs
retf
in
sti
cld
std
(bad)
lods
lods
mov
add
add
xchg
xchg
xchg
add
xchg
xchg
xchg
xchg
add
add
add
add
xchg
xchg
xchg
xchg
add
add
or
xchg
xchg
add
add
add
add
pop
cs
xchg
add
add
mov
xchg
retf
in
sbb
pop
and
and
cs
retf
in
and
jb
pop
sub
sub
in
mov
mov
xor
xor
xchg
retf
in
ss
cmp
cmp
pop
cmp
in
inc
inc
inc
pop
cs
retf
inc
inc
inc
inc
inc
retf
in
mov
mov
dec
dec
dec
push
xor
in
push
push
push
push
cs
retf
in
push
push
pop
pop
in
mov
pop
pop
cs
retf
pop
pop
pusha
popa
(bad)
retf
in
mov
xchg
retf
gs
addr16
mov
outs
outs
cs
retf
in
jno
jae
in
mov
js
and
retf
jns
jnp
mov
jle
add
add
xchg
retf
in
mov
xchg
dec
nop
xchg
xchg
xchg
retf
in
mov
mov
cdq
call
popf
sahf
lahf
mov
mov
jb
pop
cmps
cmps
test
pop
cs
retf
stos
stos
lods
lods
scas
retf
in
mov
mov
mov
mov
jb
pop
es
xchg
retf
in
mov
jb
pop
rol
les
retf
(bad)
enter
jb
retf
int
retf
in
into
iret
rcl
shl
pop
cs
aad
cs
retf
in
fcomp
fcmovu
in
mov
(bad)
in
cdq
loopne
loop
mov
in
out
xchg
retf
in
jmp
jb
pop
cs
out
lock
in
leave
in
repz
cmc
pop
cs
retf
div
clc
stc
cli
retf
in
mov
xchg
xchg
xchg
xchg
inc
add
add
add
xchg
xchg
xchg
xchg
add
add
mov
repnz
add
add
add
add
add
or
mov
mov
add
add
add
add
add
pop
sbb
sbb
in
mov
pop
pop
cs
retf
and
and
and
in
mov
mov
sub
sub
jb
in
cs
xor
cs
retf
in
xor
pop
aaa
cmp
cmp
retf
cmp
jb
inc
inc
inc
inc
xchg
retf
in
inc
inc
inc
inc
dec
jb
pop
cs
dec
dec
dec
cs
retf
in
dec
dec
push
push
in
mov
push
retf
gs
retf
push
push
pop
pop
mov
pop
pop
pop
pop
xchg
retf
in
pop
pusha
popa
bound
mov
data16
retf
in
imul
ins
ins
outs
outs
jo
in
mov
mov
jbe
js
xchg
retf
in
jp
jl
jle
xchg
dec
cs
add
pop
cs
retf
xchg
in
mov
xchg
pop
cs
nop
xchg
xchg
xchg
xchg
jb
pop
cs
xchg
xchg
cwde
cs
retf
in
call
pop
sahf
lahf
mov
retf
mov
mov
test
stos
xchg
retf
in
stos
lods
lods
scas
scas
jb
pop
cs
mov
cs
retf
in
mov
mov
dec
jb
pop
mov
in
mov
mov
ret
lds
(bad)
enter
mov
int
and
inc
and
(bad)
(bad)
inc
inc
and
and
inc
and
aas
and
and
and
and
and
and
call
or
and
and
and
add
loope
loopne
fild
fadd
(bad)
(bad)
cmp
aaa
and
and
and
and
and
and
add
pop
add
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
xchg
test
mov
jmp
add
jle
jge
jl
jnp
jp
jns
js
(bad)
(bad)
(bad)
push
jbe
jne
jo
outs
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
push
xlat
add
add
add
add
add
sbb
call
mov
add
add
add
add
add
add
add
add
add
(bad)
call
dec
lds
les
ret
add
add
add
add
add
(bad)
inc
mov
add
add
add
add
add
add
add
add
add
add
mov
(bad)
push
add
add
jle
jge
jl
jnp
jp
jns
js
ja
jbe
(bad)
(bad)
inc
jne
je
jae
jo
outs
add
ins
add
add
add
bound
popa
add
pop
(bad)
(bad)
(bad)
inc
pop
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
(bad)
(bad)
(bad)
inc
cmp
cmp
cmp
aaa
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
sub
sub
daa
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
sbb
sbb
pop
add
add
add
add
add
add
add
add
add
(bad)
sbb
add
add
add
add
add
add
add
add
push
test
mov
clc
or
sub
dec
pop
push
mov
retf
in
fsubr
clc
add
inc
adc
xor
adc
pop
outs
jle
inc
add
mov
add
into
fdivrp
inc
add
add
add
(bad)
inc
mov
lea
mov
mov
mov
mov
mov
jl
js
ja
jbe
jne
jae
jb
jno
jo
(bad)
(bad)
inc
outs
add
ins
add
add
add
add
add
popa
add
pop
add
(bad)
(bad)
inc
pop
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
jge
jl
jb
jo
push
add
(bad)
(bad)
inc
dec
add
dec
add
sub
sub
sub
sub
daa
add
add
add
(bad)
fld
add
cld
stc
dec
(bad)
cs
test
cmp
mov
repnz
add
add
add
add
adc
out
or
(bad)
jg
add
add
add
add
add
add
add
add
add
add
add
push
sar
data16
add
add
and
add
and
sbb
mov
add
ja
leave
add
push
data16
stos
pop
mov
shl
ret
pop
jmp
push
add
aaa
sub
mov
mov
std
add
dec
add
inc
add
mov
cld
add
inc
add
cmp
cmp
cmp
and
push
ret
aaa
add
hlt
xor
or
cmp
inc
and
jb
es
ja
retf
daa
or
inc
pop
test
push
sub
neg
dec
sbb
mov
add
add
pop
push
shrd
dec
mov
add
retf
mov
mov
js
mov
xchg
cwde
pushf
mov
movs
test
mov
jb
pop
cs
xchg
retf
in
int3
rcl
fsub
jb
pop
fsub
in
pop
cs
retf
in
lock
clc
cld
cs
dec
mov
or
or
jb
pop
adc
sbb
cs
retf
and
sub
retf
in
mov
mov
dec
dec
push
push
xchg
retf
in
pop
pop
pusha
fs
ins
jo
js
xchg
retf
in
add
nop
xchg
cwde
pushf
pop
cs
retf
mov
retf
in
mov
mov
enter
xchg
retf
in
fcomp
loopne
call
in
lock
clc
mov
cmp
add
xchg
retf
in
or
adc
sbb
mov
sub
xchg
retf
in
xor
cmp
in
mov
push
pop
cs
retf
push
pop
pop
pusha
fs
in
mov
mov
jl
test
mov
mov
test
cs
retf
in
mov
mov
pop
(bad)
enter
cs
retf
aam
fsub
in
in
mov
cmp
xchg
retf
cld
cmp
add
jb
pop
or
adc
cs
retf
sbb
and
retf
in
mov
mov
inc
inc
dec
dec
xchg
retf
in
push
push
pop
pop
pusha
jb
pop
cs
retf
in
js
add
nop
xchg
pop
cs
retf
cwde
pushf
mov
jb
lods
mov
mov
mov
xchg
retf
in
rcl
fcomp
loopne
mov
in
lock
xchg
retf
in
clc
cld
add
add
mov
adc
xchg
retf
in
sbb
and
in
mov
cmp
retf
cmp
inc
dec
dec
retf
in
mov
mov
fs
in
je
jl
test
pop
mov
in
pushf
mov
mov
mov
mov
retf
in
mov
mov
in
in
lock
jb
clc
cld
add
mov
or
adc
retf
in
sbb
and
jb
pop
cs
xor
cs
retf
in
inc
inc
dec
dec
in
mov
pop
pop
cs
retf
pusha
fs
jb
je
jl
mov
mov
jb
pushf
mov
pop
lods
mov
mov
mov
in
mov
fcomp
retf
loopne
call
jb
hlt
clc
cld
add
pop
cs
dec
add
or
adc
in
mov
mov
sub
xor
xchg
retf
in
cmp
inc
dec
dec
jb
pop
cs
push
pop
pop
cs
retf
in
fs
mov
sbb
test
in
mov
mov
lods
mov
mov
mov
jb
pop
cs
fcomp
cs
retf
in
in
in
lock
pop
hlt
clc
cld
add
cs
retf
movs
add
or
adc
jb
pop
sbb
and
cs
retf
sub
xor
retf
in
mov
mov
push
push
pop
pop
xchg
retf
in
pusha
fs
pop
cs
jl
cs
retf
in
mov
pop
cwde
pushf
mov
retf
test
mov
mov
mov
pop
cs
int3
rcl
fcomp
xchg
retf
in
loopne
call
pop
cs
clc
cld
add
xchg
retf
in
add
or
adc
mov
and
xchg
retf
in
sub
xor
in
mov
dec
pop
cs
retf
dec
push
push
pop
pop
retf
in
mov
mov
je
jl
xchg
retf
in
test
mov
mov
in
lods
mov
mov
mov
cs
retf
int3
rcl
fcomp
retf
in
mov
mov
hlt
clc
cld
add
retf
in
test
mov
sbb
and
retf
in
sub
xor
jb
pop
cs
inc
dec
cs
retf
in
push
push
pop
pop
in
mov
ins
pop
cs
retf
jo
js
or
jb
test
cs
xchg
cwde
pushf
mov
jb
lods
mov
mov
mov
xchg
retf
in
rcl
fcomp
in
mov
in
pop
cs
retf
lock
clc
cld
add
in
mov
adc
retf
adc
sbb
and
in
mov
mov
cmp
inc
dec
xchg
retf
in
dec
push
push
pop
pop
jb
pop
cs
fs
in
je
jl
in
mov
nop
pop
cs
retf
xchg
cwde
pushf
mov
mov
mov
mov
retf
in
int3
rcl
fcomp
jb
pop
cs
call
in
hlt
clc
cld
add
jb
pop
sub
or
cs
retf
in
sbb
and
jb
pop
sub
xor
cs
retf
cmp
inc
dec
retf
in
mov
mov
pusha
fs
jb
je
jl
jb
pop
test
retf
in
cwde
pushf
mov
pop
test
mov
jmp
sahf
retf
mov
push
out
call
pop
sahf
out
sahf
sbb
cmp
out
inc
inc
dec
push
pop
out
sahf
out
gs
jl
out
sahf
or
sahf
out
cmps
lods
mov
mov
(bad)
retf
fcomp
in
repz
inc
xor
adc
sbb
repz
xor
cmp
inc
dec
push
pop
pop
push
iret
repz
jbe
or
xchg
call
lods
mov
mov
repz
(bad)
fsub
in
imul
inc
sahf
out
pop
sbb
jns
das
xor
jns
out
push
pop
fs
out
sahf
out
jl
mov
xchg
call
out
mov
out
sahf
out
loope
in
repz
sar
inc
cmp
repz
and
das
xor
cmp
dec
push
iret
repz
pop
fs
jbe
cmp
repz
mov
iret
repz
iret
repz
mov
loope
iret
repz
in
repz
(bad)
jns
cmps
stc
add
sbb
and
das
xor
sahf
inc
inc
dec
pop
pop
fs
out
push
jbe
and
sahf
out
mov
sahf
cmps
lods
mov
mov
jns
aad
loope
repz
out
repz
inc
dec
or
pop
sbb
repz
xor
cmp
repz
pop
pop
fs
repz
jo
jl
mov
xchg
call
repz
mov
cmp
aad
loope
in
repz
out
cmp
inc
sahf
out
pop
sbb
jns
out
cmp
push
sahf
out
sahf
pop
pop
fs
jbe
sahf
out
jl
mov
out
mov
out
sahf
mov
fstp
out
loope
in
repz
repz
out
add
iret
repz
sbb
cmp
repz
dec
push
pop
pop
repz
repz
jbe
iret
repz
or
iret
repz
lods
mov
ret
repz
repz
iret
aad
loope
repz
out
repz
inc
loop
adc
sbb
jns
das
xor
sahf
out
push
pop
pop
fs
out
sahf
push
jbe
or
xchg
call
lods
mov
ret
leave
sahf
out
sahf
iret
aad
loope
in
xor
out
repz
inc
iret
repz
sbb
cmp
das
cmp
dec
push
cmp
repz
pop
fs
repz
repz
or
xchg
call
repz
ret
leave
iret
aad
cmp
repz
out
repz
ds
stc
inc
out
sahf
pop
sbb
jns
out
inc
inc
dec
push
pop
out
sahf
out
fs
jbe
out
sahf
jl
mov
out
mov
out
sahf
out
leave
iret
aad
sahf
out
sahf
loope
in
repz
(bad)
cmp
sar
or
pop
sbb
and
xor
inc
iret
repz
inc
dec
push
pop
pop
fs
repz
jo
jl
repz
xrelease
repz
stos
mov
mov
repz
aad
loope
stc
cmp
repz
repz
inc
cmps
or
pop
sbb
sahf
cs
inc
inc
dec
jns
out
push
pop
pop
fs
jns
out
jbe
or
xchg
call
jns
mov
jns
out
fndisi(8087
out
dec
repz
repz
inc
iret
repz
and
cs
cmp
repz
dec
push
iret
repz
pop
pop
fs
jbe
iret
repz
or
repz
movs
stos
mov
iret
repz
mov
fstp
repz
out
repz
jns
out
inc
out
sahf
out
sub
xor
sahf
out
sahf
inc
inc
dec
push
pop
pop
jns
out
fs
jbe
out
sahf
out
mov
jns
movs
stos
mov
mov
jns
iret
aad
loope
jns
out
in
repz
dec
repz
add
and
cmp
repz
xor
inc
inc
repz
repz
push
pop
pop
fs
repz
push
jbe
or
cdq
lahf
movs
stos
repz
repz
mov
cmp
iret
aad
loope
in
call
add
out
push
sbb
sub
out
sahf
out
cmp
dec
sahf
out
sahf
push
pop
pop
fs
jns
out
jbe
or
cdq
lahf
movs
stos
mov
out
sahf
mov
ret
leave
iret
aad
sahf
out
fndisi(8087
out
repz
out
dec
jmp
push
iret
repz
sbb
sub
xor
cmp
repz
inc
dec
push
pop
jmp
fs
cmp
test
mov
inc
cmp
je
add
pusha
in
sbb
cmp
jecxz
dec
adc
jnp
ret
dec
adc
xor
pop
jmp
hlt
cmp
or
sbb
cmp
adc
dec
add
mov
cmp
jl
cwde
mov
arpl
fwait
adc
cmp
pop
and
pop
inc
scas
jle
mov
test
fisttp
add
dec
hlt
test
push
mov
xor
or
ins
push
jo
pop
inc
pop
jg
xchg
push
(bad)
or
inc
shr
aad
ss
and
test
inc
int3
(bad)
movs
sub
loopne
mov
jmp
fiadd
dec
inc
repz
je
jle
clc
test
movsx
dec
mov
xchg
mov
pop
xor
inc
jmp
mov
pop
int3
pop
hlt
sub
(bad)
cmps
movs
iret
ins
int
jo
mov
ins
pop
and
inc
leave
div
or
add
outs
cld
jo
mov
shl
cdq
add
gs
daa
movs
pusha
jmp
add
jo
inc
or
xor
pop
push
imul
push
dec
push
cld
inc
fdivrp
pusha
mov
add
pop
mov
adc
jg
inc
xor
add
mov
test
sbb
cmp
movs
nop
inc
adc
mov
xor
pushf
cmp
push
fstp
hlt
sbb
xor
es
add
jp
or
xor
or
jl
or
cmp
or
mov
pop
pop
inc
jo
(bad)
push
sbb
sbb
cmps
movs
hlt
imul
(bad)
and
inc
adc
push
push
jo
and
imul
sub
sbb
jne
adc
lods
and
pop
and
adc
(bad)
cmps
data16
dec
out
ja
gs
fist
push
jne
xchg
shl
imul
js
sbb
sbb
mov
add
mov
ja
xchg
inc
mov
xor
mov
cmps
arpl
ret
jbe
mov
jp
jg
adc
cmp
je
inc
and
sub
add
add
push
(bad)
in
mov
xor
sub
pop
xlat
inc
sub
mov
xchg
or
loope
add
push
inc
add
add
fcmove
push
fst
mov
aas
test
daa
and
mov
ins
mov
or
inc
(bad)
push
fwait
and
and
cmp
sbb
and
mov
and
and
(bad)
jmp
jnp
es
stos
mov
sbb
push
fcomp
adc
cmp
adc
add
enter
add
push
clc
push
es
lock
or
push
mov
shl
push
sub
fnstsw
add
lahf
rcr
xor
mov
inc
or
xor
xor
or
ret
lahf
outs
fs
daa
rcpps
imul
lds
sbb
popa
and
div
add
add
or
pop
mov
retf
(bad)
push
in
mov
lods
(bad)
(bad)
je
ja
and
int3
push
jl
inc
les
pop
fbld
mov
dec
push
cmps
pop
loopne
add
sbb
sub
ret
ja
sbb
jo
sub
adc
mov
or
add
mov
div
add
jo
add
aad
push
push
xchg
push
idiv
pop
imul
pop
mov
test
add
nop
adc
cdq
js
xchg
hlt
pop
sti
push
push
(bad)
xchg
ins
pop
stos
or
jg
mov
add
dec
inc
xor
out
xlat
cmp
inc
push
rcr
js
js
jmp
push
fadd
pop
sti
cs
mov
bound
pop
push
adc
sbb
push
mov
mov
sub
push
(bad)
nop
or
dec
inc
test
cmc
add
and
sub
inc
adc
adc
xor
int3
lock
inc
push
xchg
add
mov
dec
push
pop
and
loope
add
ins
jp
scas
mov
loope
cs
push
push
jnp
imul
dec
rcr
cmp
clc
lock
(bad)
hlt
popf
jecxz
not
push
or
jo
push
xchg
jmp
lods
pop
es
add
aam
or
add
ja
test
adc
cmp
xor
xor
pop
call
jbe
xchg
mov
stc
dec
je
nop
in
or
push
and
mov
add
push
dec
arpl
mov
sbb
pop
jo
pusha
mov
ins
jmp
dec
xchg
cmp
mov
scas
mov
adc
pop
adc
push
cmp
cmp
or
out
(bad)
call
popa
inc
mov
xor
cmp
wbinvd
dec
push
dec
outs
rol
adc
pop
xchg
std
xchg
jns
retf
xchg
inc
rcl
lahf
mov
and
dec
call
fadd
push
in
fwait
iret
cmc
sbb
cmps
mov
jb
stc
outs
jmp
paddsw
jb
jb
out
rcl
shl
jb
rcl
aad
jb
jb
xlat
fcomp
fidiv
jb
fcmovnu
fstp
jb
jb
ffreep
rol
xchg
ret
les
std
pop
or
push
or
add
cmps
call
pusha
mov
ins
dec
push
inc
jmp
in
add
add
leave
call
mov
jl
inc
dec
outs
retf
sub
adc
mov
xchg
or
ins
daa
es
or
add
mov
mov
mov
ds
loopne
fdivr
jo
(bad)
push
inc
inc
inc
add
ins
jmp
ds
push
rcr
mov
and
or
nop
sbb
pop
mov
push
mov
and
inc
push
sbb
movs
daa
inc
sub
inc
adc
push
scas
sub
xchg
sub
jns
cmovl
sbb
sbb
pop
push
imul
aaa
inc
out
dec
and
rcl
sti
push
mov
retf
in
test
(bad)
jbe
fmul
cld
sbb
mov
push
add
fsubr
test
popa
pop
aam
inc
mov
arpl
les
fcom
popa
push
pop
push
jp
mov
mov
cs
push
pop
pop
pusha
mov
aas
pop
sbb
jnp
popa
imul
dec
jae
pop
ss
sti
mov
imul
fwait
or
es
test
shl
cmps
popa
popa
cmp
mov
mov
dec
pop
or
sgdtd
jo
jb
dec
or
(bad)
jae
cs
jl
and
xor
arpl
cwde
or
je
clc
or
push
mov
mov
shl
lock
mov
popaw
enter
mov
xchg
xchg
pop
or
inc
aaa
call
add
or
push
jmp
sub
dec
bound
fcomp
adc
mov
arpl
sub
pop
arpl
cmp
cs
popa
jnp
mov
popa
add
and
and
loope
enter
nop
movhps
nop
imul
pop
jle
pushf
cmp
jb
adc
rol
sbb
dec
push
xchg
stc
or
or
xchg
add
push
or
inc
and
in
mov
loopne
js
jp
inc
call
aaa
dec
sub
outs
push
mov
(bad)
call
add
push
sub
mov
ins
out
add
push
xor
jle
adc
or
inc
iret
shr
movs
xor
cwde
data16
sbb
cmps
test
pop
mov
imul
add
push
outs
xor
cmp
dec
push
aaa
das
push
sub
or
cmp
(bad)
js
pop
shl
sub
xchg
aam
sahf
popf
and
xor
jb
nop
lea
mov
push
ficomp
inc
jno
xor
and
or
popa
xchg
imul
push
pop
push
bnd
ja
cmp
mov
fistp
test
mov
popf
jne
mov
mov
mov
test
in
call
inc
jmp
dec
or
rcl
pop
add
lds
mov
add
dec
icebp
shr
xchg
ds
or
movs
(bad)
mov
retf
movs
pusha
repz
cwde
mov
setae
push
and
mov
pop
lods
cs
and
xchg
add
cmp
pop
clts
add
pusha
pop
pop
cmp
xor
add
add
inc
and
dec
in
test
and
mov
mov
or
jns
cwde
fbld
add
xor
adc
in
adc
push
adc
jle
(bad)
push
or
popa
or
aaa
adc
cmp
fcom
mov
jle
and
les
push
sahf
nop
popa
fbld
or
push
and
ror
sub
popa
pop
xchg
fistp
xor
cdq
push
lods
in
pop
sub
add
pusha
xchg
sahf
pop
in
fisubr
popa
adc
popa
dec
mov
push
rol
sub
pop
sahf
mov
mov
push
push
jl
in
cwde
mov
scas
mov
jnp
mov
push
mov
lods
into
test
cmp
clc
mov
push
daa
push
cld
push
pop
pop
fsub
add
xor
push
xchg
jge
jnp
push
xchg
je
sahf
xchg
push
loopne
inc
in
les
(bad)
push
call
mov
popa
aam
pop
mov
stc
xchg
sub
mov
jl
nop
ror
retf
mov
jnp
adc
push
movs
mov
aam
or
push
popf
shr
and
add
sub
mov
mov
and
repnz
int3
cmps
pop
mov
cmps
push
js
sbb
jo
or
je
enter
das
push
inc
cdq
push
fs
dec
nop
test
sub
movs
mov
add
pop
adc
push
leave
dec
dec
adc
mov
fwait
dec
pop
inc
or
sbb
addr16
sbb
xchg
dec
shl
ins
or
jmp
sahf
mov
or
dec
loopne
loopne
imul
xchg
in
or
pop
repnz
lock
push
je
or
xchg
clc
clc
pshufw
inc
std
adc
mov
rcl
test
mov
dec
adc
inc
add
cdq
sbb
dec
adc
cwde
xor
out
rol
inc
(bad)
inc
adc
sbb
or
mov
add
pop
cmp
jo
dec
dec
fwait
cmps
xchg
je
dec
cmp
jmp
sbb
pop
cmp
or
dec
addr16
sbb
pop
(bad)
fucomi
and
fild
sbb
cs
xchg
pop
dec
pop
sbb
push
mov
xchg
hlt
fs
cmp
test
sub
or
adc
in
inc
push
dec
cmp
pop
add
repnz
and
iret
test
inc
shl
and
cmp
shl
push
and
iret
jo
add
and
pushf
cmp
pop
sub
xor
mov
mov
jo
ret
pusha
(bad)
jl
mov
lods
nop
add
xlat
hlt
inc
scas
add
ror
xchg
add
dec
stos
imul
cwde
jg
rcl
fnsave
loopne
dec
mov
push
push
mov
clc
add
lods
(bad)
fmul
js
loop
jmp
fdiv
and
daa
(bad)
clc
aam
push
and
(bad)
dec
pop
mov
push
lock
popa
jg
add
pop
lock
cmove
push
daa
rcr
sar
pushf
and
cmps
mov
jo
punpcklbw
call
or
mov
test
ret
lea
pop
enter
push
cwde
and
rol
jae
test
and
push
mov
mov
pushf
inc
xchg
xor
add
add
inc
adc
add
mov
pushf
inc
jbe
test
jge
mov
fdiv
mov
adc
xor
jo
je
cmp
sbb
pop
in
stc
nop
inc
push
pop
loopne
lock
lock
popa
and
popa
mov
aaa
pop
adc
mov
aaa
push
test
push
leave
loop
mov
into
mov
fstp
leave
xor
cwde
loope
sub
enter
add
in
(bad)
and
push
push
rcl
push
pop
sbb
mov
das
xor
ins
dec
add
fadd
jmp
adc
inc
or
mov
cld
aad
jle
cwde
stc
daa
dec
je
mov
mov
fadd
outs
add
fs
loope
push
rcr
mov
add
mov
pop
repnz
gs
dec
popa
or
sbb
je
fild
add
fdiv
add
loopne
and
push
sub
loope
fisub
sub
enter
and
sub
xchg
or
and
push
lods
mov
push
bound
xlat
je
pushf
popa
imul
xchg
aam
retf
repnz
aam
jmp
(bad)
repz
mov
push
xchg
pusha
sub
jge
(bad)
or
mov
mov
dec
ss
push
add
shr
mov
into
dec
ror
sar
push
imul
nop
inc
pop
sub
movs
or
sti
imul
push
scas
and
push
div
push
test
adc
test
or
lods
lds
or
pop
shr
xchg
xchg
in
mov
lock
fadd
fs
gs
adc
xchg
pop
pop
jp
outs
nop
aam
in
and
dec
mov
movs
out
loopne
int3
daa
les
jmp
sub
add
loopne
repnz
sub
mov
and
add
mov
sub
cmp
pop
shl
clc
sti
push
xchg
add
add
mov
and
inc
inc
sahf
shr
cmp
dec
fstp
jmp
jne
int
xor
dec
push
xor
out
ret
test
and
aam
pop
or
jae
ret
mov
xchg
fimul
dec
and
iret
push
test
loopne
and
cmp
dec
jecxz
imul
add
jp
int
lea
call
loop
pop
inc
popf
or
adc
dec
mov
sub
imul
inc
add
add
sub
aas
pop
cmps
aaa
lock
push
pusha
mov
sub
movs
lds
stc
mov
inc
fwait
lock
xor
loope
xchg
sbb
inc
jmp
out
xor
aaa
mov
adc
dec
aam
sbb
pop
inc
mov
jmp
fsubp
jo
imul
pop
loop
pop
add
adc
or
inc
add
inc
push
aam
std
push
push
(bad)
iret
not
and
or
or
jl
(bad)
push
mov
shl
jae
adc
xor
into
cmp
inc
sbb
or
jb
js
pop
cmp
add
or
aas
pop
ds
leave
mov
mov
loop
sbb
and
push
xor
out
js
and
loope
pop
cmps
adc
js
lock
push
add
add
in
cmps
dec
cmps
repnz
pop
xor
sub
push
das
xor
loopne
and
pop
dec
fadd
pop
lahf
pop
cli
cmp
shl
sub
xor
sar
add
xor
xor
ins
push
xchg
cdq
mov
data16
sbb
push
test
and
inc
dec
adc
xor
xchg
loop
lods
or
aaa
pop
or
fisub
pop
je
xor
cmp
ror
shl
mov
mov
or
(bad)
adc
loopne
sub
jmp
mov
movups
cs
xor
es
(bad)
dec
push
in
addr16
es
or
xor
inc
pcmpeqw
popa
cmp
sub
inc
mov
loope
or
test
add
sti
and
jle
pop
sbb
mov
icebp
mov
cwde
nop
mov
add
(bad)
cmps
cmp
(bad)
push
movs
gs
enter
fwait
icebp
call
pusha
cmp
popf
les
call
adc
sub
or
aaa
test
or
mov
or
push
or
mov
fwait
or
retf
dec
sub
xchg
xlat
jcxz
test
adc
mov
sar
mov
mov
add
dec
out
lds
adc
ret
push
sub
sbb
adc
jb
add
adc
or
and
push
ja
add
out
mov
or
xor
inc
pop
js
out
popa
pusha
hlt
jns
or
adc
mov
and
es
or
fwait
ret
push
fiadd
cmp
fmul
or
add
sbb
int
and
or
movs
push
shl
stc
or
inc
mov
mov
pop
and
xor
daa
clc
xor
aam
dec
stos
sbb
adc
sub
pop
nop
add
clc
adc
mov
adc
sbb
and
shr
gs
xchg
and
int
jne
mov
dec
popf
jmp
xchg
dec
add
fmul
sub
xchg
ss
mov
push
mov
ret
mov
xor
xor
dec
fbstp
outs
lahf
or
rol
arpl
cmp
wbinvd
stos
or
nop
scas
or
dec
js
mov
add
int3
xor
stos
inc
test
ucomiss
pop
xchg
and
dec
ins
inc
dec
sub
add
nop
mov
pop
daa
sub
in
aam
pop
(bad)
in
pop
xor
or
adc
adc
cmp
mov
cmc
dec
imul
cmp
xor
adc
mov
adc
adc
pusha
xor
dec
push
pop
in
sbb
les
jp
lods
in
inc
adc
sahf
mov
dec
aam
and
pop
repz
or
xchg
js
aas
dec
in
fldcw
add
pushf
inc
sub
mov
ss
xchg
and
aam
int3
idiv
push
imul
inc
or
in
push
ficom
dec
lock
cmps
mov
mov
cmps
lods
les
cmp
(bad)
out
mov
sub
and
inc
adc
scas
pop
fwait
movs
lods
bsf
jmp
je
sub
stc
sub
test
sbb
stos
retf
inc
and
adc
push
mov
pop
ins
adc
fldenv
add
call
out
outs
scas
xor
adc
popa
and
mov
adc
pop
rol
sbb
push
dec
sar
dec
xor
xchg
push
xchg
movs
inc
rcl
jbe
pop
scas
sbb
mov
inc
mov
ret
adc
or
andps
inc
jne
pop
jo
push
and
aaa
ret
sbb
mov
inc
push
cmc
or
sub
xchg
jae
mov
inc
lods
xor
adc
xchg
test
mov
xchg
add
lahf
adc
cmp
(bad)
cmp
pop
cs
lds
cmp
dec
retf
in
mov
add
add
dec
iret
clc
jg
and
mov
dec
mov
ins
push
and
pop
es
pop
sar
or
mov
jmp
mov
das
je
lea
shr
ret
pop
loop
xchg
pop
adc
fnsave
(bad)
mov
cs
bound
dec
sbb
dec
(bad)
mov
enter
fsubr
cmp
push
cwde
mov
sbb
outs
aam
sbb
mov
jecxz
les
je
push
mov
mov
inc
retf
outs
fcomp
mov
sub
mov
cmp
je
mov
xchg
icebp
mov
push
sub
fmul
jp
adc
out
push
push
xchg
push
and
pop
add
movs
ret
mov
push
fsubr
jmp
jl
arpl
push
cmp
nop
xchg
push
xchg
inc
mov
sub
sub
std
push
xchg
movs
in
add
daa
jmp
inc
push
inc
sub
inc
cmp
sbb
cmp
inc
pop
mov
adc
inc
inc
xlat
mov
cmp
mov
cmp
je
cli
mov
or
int3
xlat
adc
cwde
stos
or
mov
cmp
dec
inc
fwait
pop
xor
je
imul
test
in
mov
test
pusha
or
and
ins
adc
pop
or
(bad)
push
inc
add
and
push
pop
mov
sub
retf
test
les
pop
mov
push
movs
sub
xchg
dec
test
push
dec
lock
lock
dec
add
hlt
test
push
push
and
mov
dec
pop
add
push
dec
popa
jne
ret
sbb
fadd
jg
jecxz
dec
pusha
add
mov
adc
mov
xor
fisub
fcom
enter
pop
pushf
mov
pop
or
fsub
xor
add
inc
xor
inc
dec
in
nop
dec
gs
add
mov
pop
xchg
and
add
les
jns
ja
dec
pop
stos
add
das
pop
pop
add
xchg
sub
cmp
mov
adc
add
jnp
and
and
jne
mov
enter
dec
popa
and
pop
push
out
add
or
aas
xlat
sub
lea
push
xor
jmp
loope
and
jp
and
xor
mov
nop
(bad)
lock
push
pop
sbb
inc
popf
push
cmp
add
mov
lock
or
imul
pop
shr
add
mov
out
push
xlat
jns
test
xchg
je
es
movs
out
or
mov
dec
inc
call
mov
into
ins
call
aad
adc
test
sub
dec
imul
cmp
jecxz
xchg
lds
mov
and
push
hlt
jae
xchg
dec
or
push
fwait
push
mov
jmp
js
sub
pop
shl
mov
mov
push
jo
icebp
and
popa
push
inc
clc
add
mov
xchg
js
icebp
(bad)
outs
fs
add
addr16
loop
cmp
lods
and
movs
push
cmps
aam
and
xor
cs
push
(bad)
pop
xlat
or
(bad)
xchg
loopne
mov
jno
xchg
mov
push
sbb
loopne
out
dec
sti
or
inc
je
lock
fdivr
push
adc
sub
sub
mov
jmp
call
in
xor
jb
add
push
sub
(bad)
adc
xor
je
enter
inc
ficom
aam
sbb
inc
mov
mov
shl
push
pushf
lea
mov
loopne
idiv
jmp
movs
jmp
lods
or
movs
fs
pop
inc
or
inc
xchg
pop
sbb
das
inc
mov
inc
js
or
das
je
xchg
(bad)
adc
loop
dec
test
add
sbb
sub
dec
inc
pop
and
mov
shl
adc
and
push
mov
ins
jmp
add
jmp
ss
mov
sub
push
jmp
loop
sahf
adc
mov
pop
popf
scas
add
xlat
fisttp
sub
add
xor
add
adc
add
fs
sbb
push
(bad)
mov
pop
pop
stc
dec
xchg
pop
push
in
fldlg2
dec
jae
mov
push
arpl
mov
pop
(bad)
int
mov
es
lahf
call
or
call
scas
out
sub
and
stos
jnp
or
xchg
das
mov
adc
mov
xchg
call
push
push
movs
pop
xchg
pop
add
push
dec
xor
sbb
sub
xor
es
neg
push
push
leave
sbb
jecxz
add
dec
xchg
cmp
and
cmp
push
add
lea
mov
mov
loop
fs
cmp
mov
push
mov
stos
mov
pop
cdq
dec
or
mov
sbb
dec
jmp
jne
fs
pop
push
clc
cmp
lods
popa
lods
fadd
icebp
push
dec
mov
ja
popf
and
ret
inc
inc
ins
test
and
loopne
add
inc
inc
and
imul
ds
jb
in
scas
lods
mov
inc
xchg
mov
adc
ins
push
xchg
dec
addr16
(bad)
(bad)
(bad)
in
push
dec
das
adc
in
mov
pop
subps
mov
xor
inc
in
add
or
enter
imul
push
dec
fild
add
push
fisttp
jae
nop
or
xchg
push
aas
icebp
cmp
test
dec
pop
mov
fstp
lea
push
bound
aaa
sbb
cdq
aam
add
ja
cmp
mov
xor
fldl2t
push
leave
add
pop
mov
stos
dec
add
sti
push
xchg
setbe
in
add
add
dec
cmps
int
aam
js
in
xchg
dec
call
rol
pop
leave
cmp
sbb
stos
imul
pop
mov
xor
or
cs
add
rdmsr
sti
das
cmps
push
and
push
inc
push
addr16
sub
and
push
xchg
pop
scas
xchg
imul
add
mov
inc
push
push
pop
add
adc
shl
push
adc
lds
dec
jo
lds
fwait
xor
mov
jmp
dec
push
xor
test
ins
popa
je
add
imul
push
sbb
mov
and
sub
daa
icebp
inc
cmps
(bad)
daa
in
jmp
add
inc
xchg
pop
out
dec
sbb
jns
push
cmp
mov
sub
pop
test
or
pop
add
push
dec
jecxz
mov
adc
xchg
out
sar
jns
pop
push
out
int
mov
nop
pop
push
outs
push
dec
enter
(bad)
mov
out
scas
jbe
add
pop
add
push
loopne
scas
aam
lock
test
push
push
mov
pop
popa
adc
add
lea
push
or
(bad)
jmp
mov
add
sub
mov
mov
xchg
dec
cdq
jb
add
arpl
jno
xlat
mov
dec
pop
pusha
enter
pop
shl
mov
push
(bad)
cld
pusha
sbb
adc
and
jmp
sub
cmp
dec
pusha
pop
fsub
fs
call
add
sbb
inc
adc
pop
jl
xor
das
imul
or
sub
or
add
or
idiv
sub
sbb
jp
lds
sbb
adc
jo
jmp
lods
hlt
lods
cld
push
aam
je
push
and
pusha
pop
sbb
stos
push
add
mov
nop
or
aam
adc
dec
in
popa
mov
and
sbb
mov
ja
mov
pop
sbb
xor
sbb
and
sub
add
out
ins
aaa
xlat
sbb
xor
dec
out
into
xor
icebp
pop
mov
push
mov
push
mov
movs
cmp
es
clc
push
in
jecxz
icebp
jecxz
pop
fidiv
mov
xchg
xchg
or
push
test
xchg
add
pop
out
push
js
mov
loopne
sub
ins
mov
push
xchg
mov
adc
setp
sbb
sbb
xlat
jge
xor
retf
pusha
arpl
test
mov
cwde
inc
pop
adc
arpl
xor
test
mov
mov
mov
adc
aam
push
(bad)
das
(bad)
push
mov
cmp
sub
sti
call
add
imul
aas
sub
xlat
mov
push
add
mov
and
ins
aas
push
xor
lahf
sbb
scas
nop
sub
adc
test
dec
jae
sbb
dec
add
push
popa
sub
jecxz
js
or
pop
std
adc
mov
sub
xor
stc
dec
mov
or
je
dec
mov
ss
int
inc
nop
add
and
rol
gs
inc
fnstsw
cwde
cmps
out
and
jo
gs
aad
jp
xor
mov
jl
rcl
cmp
gs
push
fisubr
push
inc
dec
push
push
and
xor
pop
adc
push
stos
rol
xor
and
mov
sub
push
sbb
jmp
inc
or
test
in
lods
dec
add
jl
mov
jecxz
pop
adc
push
dec
ins
and
stos
ins
daa
push
popa
add
jmp
sub
dec
cmc
adc
aaa
mov
popa
movs
pushf
adc
std
xor
lahf
xchg
xchg
idiv
dec
push
adc
popa
loopne
ja
mov
and
(bad)
and
mov
or
mov
mov
or
push
jp
add
push
or
aas
mov
pop
ja
in
jo
pop
push
hlt
ins
or
inc
ret
dec
and
mov
or
sbb
xor
das
daa
mov
or
sbb
cwde
mov
add
sub
(bad)
jmp
dec
jge
loopne
(bad)
dec
add
and
push
int3
xor
in
push
dec
jne
push
movs
xor
or
mov
test
adc
test
dec
loop
adc
mov
push
push
jo
pop
mov
rol
dec
jp
cmp
popf
jle
or
mov
cmp
sar
lds
adc
sub
inc
xchg
and
add
repnz
jge
cmp
dec
push
lock
jae
push
inc
push
push
add
and
or
mov
(bad)
loope
mov
add
call
jne
push
retf
clc
jae
sub
mov
mov
xchg
loope
mov
cmp
inc
aaa
pop
xchg
nop
adc
adc
mov
dec
mov
or
sbb
inc
data16
xor
or
xchg
mov
es
xchg
push
sbb
add
popa
shl
ins
xchg
adc
dec
cmps
or
gs
(bad)
shr
push
pop
xor
adc
ins
xchg
test
push
enter
jle
jecxz
mov
xor
mov
jmp
ss
jnp
ret
ret
mov
xchg
mov
add
and
lods
xchg
inc
ins
pop
or
nop
or
dec
ins
int3
adc
mov
jl
mov
push
xor
fcmovnb
nop
and
pop
jo
jl
xchg
leave
ss
lds
dec
mov
pop
clc
sub
les
inc
pop
push
jae
pushf
nop
pop
mov
lock
jp
sbb
pusha
and
and
push
outs
fwait
jne
sub
and
xor
fbld
dec
lods
adc
pop
int
retf
dec
add
add
xchg
xchg
aam
sbb
sbb
and
lahf
mov
pop
inc
mov
xchg
mov
scas
xchg
and
rol
call
out
repnz
push
adc
mov
shl
pop
adc
dec
std
push
gs
inc
jmp
jae
cld
scas
sbb
xor
push
enter
shl
mov
xor
mov
outs
push
add
sbb
sub
mov
adc
push
push
lock
push
fld
mov
retw
pusha
sub
fstp
jg
in
jo
lds
lods
adc
cld
or
loope
adc
xor
xor
inc
shl
add
out
add
add
das
ins
or
inc
mov
mov
rcl
call
xchg
mov
and
fcmovb
push
sub
mov
stc
dec
(bad)
push
test
leave
lock
add
jb
sbb
fs
retf
fst
sub
fldenv
or
adc
mov
imul
inc
mov
push
call
pop
jne
outs
and
push
adc
push
mov
or
sub
nop
pusha
sbb
xlat
xchg
pop
xor
ss
push
jecxz
xchg
(bad)
sbb
xchg
(bad)
loope
or
or
pop
xor
sub
loopne
push
mov
jne
jae
or
add
adc
call
adc
into
pop
jne
out
mov
inc
sub
or
push
inc
das
mov
js
mov
and
jae
mov
cmc
sub
mov
jbe
inc
sbb
push
test
adc
xor
fisttp
add
outs
push
adc
test
dec
jb
sbb
hlt
xchg
add
in
pop
out
and
xor
sub
dec
pop
sbb
add
sbb
push
xchg
fadd
cmp
sbb
data16
jne
or
or
sbb
pusha
call
mov
jmp
loope
sbb
adc
jb
or
daa
push
and
inc
loopne
and
jae
adc
adc
mov
cmp
push
ficomp
imul
xor
dec
push
pushf
adc
sub
je
sar
pop
pop
loopne
je
dec
mov
call
mov
cmps
dec
push
dec
push
not
push
cs
imul
mov
adc
(bad)
lods
mov
les
jmp
sub
mov
mov
add
mov
mov
inc
mov
adc
lods
adc
and
in
or
imul
je
jmp
adc
jmp
pop
or
in
jns
push
jbe
jmp
push
nop
cmp
sub
int3
mov
fcmovnb
fs
jne
mov
mov
test
addr16
pop
sub
mov
or
add
cli
and
pop
add
add
aam
ret
dec
add
clc
cmp
adc
xchg
fdiv
jns
shl
add
(bad)
cdq
cmp
aas
jne
add
and
add
jmp
rol
and
sbb
mov
pop
inc
or
popa
inc
jmp
shr
add
js
push
xor
ins
in
adc
cmp
and
fldenv
outs
jbe
es
add
retf
mov
mov
jmp
and
sbb
add
aaa
out
jmp
and
add
sub
push
or
js
shl
shl
dec
retf
jmp
adc
add
or
jnp
sub
sub
mov
imul
or
pop
and
add
push
jp
ret
mov
fucomi
inc
ja
mov
fs
aam
daa
jmp
pop
ins
enter
or
jae
retf
xor
nop
sub
push
dec
and
ins
test
cli
sar
adc
in
mov
les
add
mov
inc
sub
mov
js
jbe
xor
mov
data16
dec
or
add
sub
mov
add
mov
push
adc
pop
jl
repz
loopne
pusha
(bad)
and
jl
aaa
jle
rol
mov
sub
mov
pop
imul
add
xchg
(bad)
popa
bound
pop
cmp
je
dec
pop
mov
cmp
pusha
out
movs
cmp
aaa
sbb
cmp
in
mov
(bad)
mov
xchg
sbb
aas
js
jbe
xor
or
outs
in
xor
dec
retw
jl
cli
sub
stos
nop
adc
and
mov
mov
xor
adc
or
(bad)
cmp
je
imul
add
shr
mov
or
jge
pop
dec
push
ds
cmps
jmp
cmc
cmp
dec
jno
push
xchg
push
xor
xchg
push
add
inc
and
jmp
add
or
ror
xchg
lahf
and
cmp
xor
xchg
xor
and
pop
mov
and
or
aam
movs
push
movs
lahf
cli
dec
aam
mov
js
mov
mov
cmps
stc
cs
add
aam
pop
repnz
add
out
push
or
test
adc
jo
inc
and
push
iret
outs
mov
mov
sub
push
jmp
sti
mov
add
add
inc
icebp
sbb
or
push
(bad)
ins
dec
cmp
sub
loopne
pop
xor
xor
imul
mov
xchg
sbb
xlat
inc
or
mov
push
gs
jecxz
jg
and
and
push
add
imul
or
mov
pop
inc
loop
mov
xchg
ret
inc
add
outs
jno
xor
clc
jno
pusha
ins
mov
xor
loope
ror
adc
add
mov
retf
pop
sub
popf
fiadd
(bad)
and
or
stos
push
xchg
pop
test
in
pop
popa
inc
ror
inc
push
add
cmp
adc
push
push
push
dec
mov
mov
popfw
xor
push
ret
xor
or
inc
sbb
push
rcl
adc
xor
(bad)
fldenv
jb
xchg
rcl
push
sar
inc
jg
dec
hlt
es
and
dec
add
cmp
and
cld
pop
inc
jle
xchg
js
mov
(bad)
mov
cmp
repnz
fdivr
adc
jne
popa
adc
adc
add
in
stc
cs
jo
dec
popf
retf
je
nop
mov
xchg
mov
pop
add
cmp
rcl
xchg
jp
cwde
add
in
ins
nop
popa
inc
mov
js
lods
inc
(bad)
xlat
movs
mov
enter
xor
sub
loope
xor
xchg
mov
jns
jbe
outs
mov
or
fadd
push
or
inc
jmp
ret
pop
add
push
mov
movs
jb
lods
adc
dec
mov
xor
gs
(bad)
xchg
add
xor
pop
or
jecxz
sbb
push
in
pop
and
sbb
imul
ins
mov
mov
scas
jge
hlt
push
(bad)
and
ins
push
xchg
lods
popa
xchg
and
ret
out
jge
fs
lea
cmp
out
jecxz
xlat
pop
jb
call
rcl
dec
inc
jge
icebp
test
add
xchg
or
sti
pop
pop
xor
mov
cmp
cmps
pop
(bad)
jns
fmul
pop
dec
imul
adc
dec
test
out
and
xchg
lea
jno
or
int3
addr16
xchg
dec
mov
mov
add
mov
dec
inc
lods
imul
cmp
adc
and
ins
in
inc
and
mov
test
repz
pop
lods
outs
jae
outs
in
fst
les
(bad)
(bad)
aad
sbb
shl
add
mov
mov
dec
cmp
adc
push
(bad)
rol
into
shr
inc
and
movs
retf
xchg
scas
xchg
jne
test
retf
(bad)
js
jmp
xchg
(bad)
bnd
sbb
add
adc
test
mov
lods
jmp
lods
mov
inc
add
dec
jb
into
xor
cs
outs
xchg
ret
ret
clc
shl
adc
fsub
leave
jno
pop
dec
jnp
jae
(bad)
sahf
mov
call
and
les
push
push
jl
mov
arpl
mov
adc
push
cmps
arpl
lea
or
dec
pop
mov
add
and
retf
push
push
push
repz
int
pusha
pop
out
dec
out
mov
and
lds
imul
movs
pop
dec
push
push
and
(bad)
and
pop
push
and
dec
adc
push
push
retf
mov
adc
pusha
push
mov
fcom
sub
sbb
cwde
and
cmp
dec
inc
cmps
retf
cmps
bound
addr16
pop
xchg
add
popa
inc
ins
test
mov
outs
mov
cmp
test
rol
push
pop
add
fadd
jne
push
mov
inc
inc
mov
mov
mov
rcl
mov
cmps
fsubp
bound
in
js
stos
add
dec
mov
hlt
mov
dec
sub
js
pop
mov
inc
jecxz
add
jp
pop
push
or
hlt
call
pusha
or
leave
pop
iret
aam
push
xchg
shr
add
mov
(bad)
out
push
xchg
or
pop
imul
xor
push
xlat
push
lods
or
ss
or
xor
pop
push
sbb
push
pop
outs
pop
inc
jae
es
xchg
xor
pop
mov
loopne
dec
xchg
lahf
inc
jmp
add
mov
ror
sbb
clc
daa
push
pop
jmp
pop
mov
cmp
jne
pop
adc
test
sub
adc
fs
dec
out
mov
jne
and
xor
xor
add
or
adc
dec
pushf
add
pop
xor
cmp
ins
loopne
xchg
dec
mov
jne
xor
mov
jg
dec
jmp
jmp
sbb
seto
adc
mov
jecxz
(bad)
mov
leave
mov
in
add
push
pop
jae
sbb
fcmove
test
leave
pop
ins
sbb
scas
in
aad
sahf
out
fs
in
fcmovnu
pop
enter
sbb
or
(bad)
loopne
xor
pusha
ins
outs
mov
adc
jo
data16
cmps
cmp
jmp
jnp
mov
sbb
mov
lahf
push
xchg
push
data16
ins
stc
in
pop
inc
and
xchg
outs
ss
icebp
retf
lods
add
fcom
dec
add
(bad)
cmp
inc
ret
add
imul
inc
pusha
or
jnp
dec
movs
sub
mov
retf
add
or
or
setbe
sbb
mov
lahf
movs
test
clc
iret
sbb
out
dec
add
jns
xor
repnz
sub
and
jmp
xchg
pop
mov
mov
fdiv
xchg
or
mov
adc
sub
adc
sbb
imul
sub
cs
and
xor
mov
dec
sbb
addr16
jl
cmc
fs
shl
repz
dec
ss
ins
sub
cmp
clc
xchg
adc
add
aaa
mov
das
pop
or
mov
mov
lods
cmps
inc
jecxz
cmp
cmp
pop
les
push
sub
imul
das
cmp
and
add
and
scas
add
xor
stos
(bad)
mov
push
(bad)
push
push
js
add
sbb
lods
popa
dec
mov
adc
and
cmp
xor
or
in
mov
dec
imul
cmc
outs
xchg
lods
inc
xchg
sub
sbb
add
inc
or
jmp
movs
jle
push
push
inc
test
jno
mov
rcl
mov
or
test
(bad)
xchg
pop
push
jo
test
jmp
add
dec
in
test
and
dec
xchg
imul
inc
or
jb
cld
push
mov
mov
push
mov
inc
xchg
shr
lods
add
jle
(bad)
jmp
and
cmps
or
addr16
sti
mov
test
test
test
xchg
mov
xchg
in
popf
ret
mov
movzx
out
adc
sbb
shl
inc
lahf
icebp
and
retf
and
popf
mov
inc
mov
add
cdq
popf
xchg
mov
(bad)
jmp
mov
dec
mov
cwde
iret
add
xchg
les
movs
cwde
int
inc
mov
mov
mov
cmp
ss
jno
sub
jbe
rcl
div
pop
or
jnp
stc
mov
push
mov
leave
mov
adc
sub
pop
add
adc
fild
leave
fst
xchg
iret
nop
jb
jmp
or
aas
sub
adc
sbb
push
in
test
jnp
out
sbb
add
xor
inc
lock
daa
jno
adc
and
adc
sbb
sub
push
add
sub
mov
imul
fld
rcl
repz
mov
xchg
aad
pop
daa
out
or
stos
ret
adc
movs
add
sub
sub
add
rcl
xchg
mov
xchg
xor
mov
adc
test
jmp
push
das
test
mov
cld
cld
int3
cmc
test
cwde
or
dec
jmp
out
imul
ins
int
daa
mov
sub
mov
inc
cmps
comiss
leave
sub
stos
xor
cmp
sbb
add
adc
and
cli
add
mov
fist
mov
and
add
jge
push
pushf
adc
dec
inc
xchg
pop
test
jp
fdiv
xchg
adc
(bad)
in
cli
fstp
dec
cmp
jmp
mov
iret
mov
or
cdq
mov
xor
inc
push
pop
int3
ss
sub
sbb
call
fist
xlat
shl
in
rol
enter
in
and
inc
fdiv
or
and
or
sti
inc
lds
adc
leave
jo
inc
loopne
inc
inc
pop
das
icebp
dec
sbb
mov
push
lods
popa
mov
jo
sub
movs
(bad)
lods
mov
int
rol
outs
test
push
xchg
push
xor
aas
xchg
aam
(bad)
aam
push
jg
adc
pop
xor
pop
add
enter
ret
nop
mov
pop
xchg
shl
mov
loop
sbb
xlat
mov
enter
ins
push
xchg
pop
test
cmp
or
(bad)
gs
shl
push
or
inc
mov
sub
into
add
(bad)
cmp
sub
das
adc
fcomp
jbe
and
loopne
sub
push
jae
ds
scas
arpl
arpl
jmp
adc
jmp
cmps
sbb
ror
clc
add
mov
ja
sbb
cmp
xchg
pop
sub
adc
inc
lea
mov
sub
dec
cmp
cwde
or
inc
test
mov
sar
pop
in
fisubr
mov
adc
mov
add
test
mov
ret
pop
jecxz
sub
jae
add
orps
and
(bad)
push
rcl
movs
pop
xor
mov
or
jbe
daa
xor
and
mov
mov
mov
mov
out
jle
dec
iret
sbb
add
add
repz
xor
cmp
push
mov
iret
fdiv
sub
mov
adc
xlat
xchg
nop
dec
fs
iret
fbld
sbb
or
xchg
jbe
and
mov
pop
jmp
push
or
jae
mov
and
or
and
or
add
ret
jno
fst
and
sbb
fld
push
js
dec
sbb
sub
mov
call
data16
inc
shr
push
adc
dec
stos
hlt
adc
les
push
and
mov
pop
xor
pop
xor
fmul
mov
sbb
xchg
dec
imul
jno
int3
pop
mov
adc
ror
mov
imul
aam
sub
cmp
jmp
call
dec
mov
xor
inc
add
xor
int3
lods
lods
sbb
mov
push
sbb
aad
movs
jb
xchg
push
mov
sbb
push
sub
stc
movs
and
scas
repnz
(bad)
adc
pop
pop
call
js
lock
sar
cmc
jl
in
sub
lods
imul
outs
dec
cld
ss
ret
popf
(bad)
lock
sbb
inc
pop
pop
jae
inc
xor
adc
not
dec
push
jne
movs
test
lock
test
or
mov
mov
jmp
push
or
imul
lds
inc
add
enter
push
jo
aam
pop
sub
cwde
xchg
pop
rol
aam
shl
inc
xor
cs
xor
call
or
in
or
xlat
or
push
xchg
ja
adc
pop
lds
jne
lea
cmc
and
add
test
push
dec
in
push
cdq
shr
dec
jb
xchg
test
fsub
add
mov
pop
inc
add
add
jne
add
popa
jmp
inc
xchg
pop
sbb
xchg
mov
add
xor
popa
push
jb
mov
movs
pop
mov
call
adc
inc
xor
sbb
pusha
mov
fiadd
add
and
cmp
dec
ret
pop
lock
jle
dec
and
xor
xchg
pop
mov
stos
cmp
xchg
and
push
or
ins
xlat
inc
dec
xlat
scas
out
cld
xchg
push
inc
mov
inc
test
mov
mov
movs
call
xchg
pop
aaa
mov
lock
jne
cmps
xchg
cmp
lock
mov
imul
cmp
and
mov
adc
sti
call
cmp
or
dec
daa
add
call
aaa
sbb
mov
cdq
pop
push
sar
dec
dec
dec
mov
inc
sub
addr16
xor
sbb
cmp
retf
mov
sub
mov
inc
inc
hlt
push
repnz
test
out
cmc
adc
and
out
xor
mul
dec
or
scas
push
(bad)
pop
push
aas
adc
inc
cmp
or
cmp
inc
gs
sub
adc
add
jno
or
fmul
or
xor
ror
mov
hlt
inc
adc
push
mov
ror
xor
inc
pusha
imul
test
dec
inc
out
cli
mov
mov
out
push
pop
and
sahf
lea
arpl
mov
sbb
dec
push
les
(bad)
outs
mov
aas
mov
imul
movs
xor
rcl
or
jbe
mov
pop
or
jne
push
outs
dec
add
and
jnp
xchg
inc
jl
mov
fisub
leave
call
movs
aaa
call
pusha
push
and
daa
or
jne
inc
sub
xor
nop
pop
outs
das
jp
in
ret
push
int3
and
mov
imul
pushf
mov
sub
and
fs
add
push
add
adc
test
sub
push
or
cmp
ficom
mov
xchg
push
ins
dec
dec
sub
mov
mov
test
add
out
push
jge
cmps
push
es
lahf
cmp
ins
adc
ret
call
cmp
gs
enter
popf
inc
cdq
dec
adc
cmp
or
cwde
loop
adc
sbb
mov
fwait
xchg
popa
test
popa
mov
ins
mov
sub
push
stos
pop
outs
call
or
push
mov
fwait
cli
popf
mov
dec
add
ret
dec
adc
lods
mov
sub
xor
cli
and
(bad)
in
nop
fsubr
out
sbb
addr16
mov
mov
jbe
fldenv
pop
add
stos
nop
addr16
icebp
lds
stc
(bad)
add
(bad)
and
pop
ret
(bad)
sti
push
clc
ins
inc
lods
jg
clc
and
adc
imul
inc
bound
call
xlat
lods
cmp
xchg
mov
adc
or
cmp
loope
in
adc
shl
pop
out
ret
fadd
jmp
(bad)
xor
push
(bad)
pop
(bad)
outs
ror
(bad)
pushf
xor
ins
imul
icebp
jge
xchg
shr
out
ja
lods
adc
arpl
(bad)
les
adc
ja
or
push
push
lock
mov
push
add
or
rcr
push
jle
add
push
shl
pop
(bad)
and
jns
imul
pop
add
xchg
adc
or
push
mov
sbb
pop
mov
mov
rcr
xchg
jo
pop
ret
aam
inc
dec
and
fisttp
dec
or
jle
std
mov
addr16
push
pop
mov
adc
adc
jo
outs
lods
jecxz
mov
arpl
or
cdq
scas
mov
mov
(bad)
xchg
mov
jne
fild
mov
pcmpgtd
pop
or
or
sti
xchg
repz
mov
test
push
add
pcmpeqw
mov
adc
push
pop
(bad)
mov
sbb
imul
or
push
jnp
or
or
xchg
out
in
mov
out
rol
nop
xor
add
sub
retf
call
lods
mov
adc
jne
xlat
dec
mov
fdivr
mov
fwait
inc
out
xor
mov
fsub
sbb
dec
rol
fcom
adc
inc
push
pop
jo
cmp
sub
pop
dec
(bad)
loope
ror
jns
fidivr
inc
fldcw
mov
cmp
cdq
mov
inc
shl
jae
lock
or
(bad)
les
sbb
sub
or
and
ja
mov
pop
cmp
(bad)
je
pop
add
rcr
dec
sbb
shl
dec
and
mov
adc
push
mov
push
or
(bad)
push
inc
xchg
pop
mul
and
jle
imul
lods
xchg
fwait
sbb
jmp
and
push
leave
push
jecxz
and
dec
imul
test
icebp
daa
pop
sbb
cmps
pusha
xlat
push
faddp
stc
(bad)
add
adc
mov
mov
jmp
stos
and
cmps
mov
lods
mov
sti
sub
fisub
ss
test
xchg
call
or
adc
add
int3
cmps
push
jnp
push
data16
seto
adc
sub
push
test
and
inc
ds
dec
mov
je
push
mov
loope
std
retf
jle
dec
std
push
inc
push
popa
out
mov
dec
stc
xchg
pusha
outs
mov
cld
cmp
sub
cmp
mov
cmps
in
mov
inc
cmp
jge
push
aaa
inc
fs
mov
push
test
sub
and
cwde
mov
rol
mov
movs
out
data16
mov
popf
push
fs
xchg
inc
aad
ins
mov
xchg
ror
and
jnp
jmp
xchg
mov
and
dec
ins
adc
jp
icebp
rol
jne
rcr
movs
sbb
mov
adc
loope
test
rcr
xchg
test
adc
aam
adc
xlat
not
mov
xchg
daa
mov
mov
icebp
stos
je
fs
mov
jno
cmp
mov
and
pushf
cmp
aaa
sbb
(bad)
or
pop
xor
xchg
push
imul
dec
div
jge
adc
mov
daa
xchg
dec
je
ins
lea
cld
pop
je
xchg
jb
pop
add
call
pop
or
inc
jbe
add
sub
mov
inc
pusha
test
test
fiadd
mov
mov
push
scas
and
mov
les
pop
adc
add
xor
jmp
imul
mov
cmp
shl
test
add
clc
mov
adc
aad
mov
sub
add
sub
pop
mov
xchg
div
adc
jne
scas
shl
lahf
jno
push
sub
ror
pop
std
mov
sub
add
push
lods
push
jecxz
ret
sbb
cli
cld
mov
or
push
cmp
imul
jno
pop
pop
idiv
and
add
push
fbld
adc
inc
leave
and
push
test
dec
adc
and
inc
rcl
movs
int3
cmp
aas
adc
push
add
mov
and
inc
mov
loopne
rol
xor
fsubr
shl
push
dec
mov
push
je
mov
push
mov
xchg
jnp
and
mov
fimul
jo
pop
int3
ror
xchg
xchg
jne
xor
and
lods
lods
pop
in
adc
out
sub
and
sub
lahf
push
mov
and
pop
mov
pusha
cmp
mov
mov
add
fsubr
shl
popa
cdq
loope
and
xchg
rol
sub
pop
lds
cmp
test
leave
pushf
mov
mov
ins
jnp
pop
mov
mov
push
cmp
add
push
inc
int
sbb
rcl
pop
cmp
or
lahf
dec
rcr
test
xchg
xor
and
adc
and
sub
mov
dec
js
mov
add
adc
adc
mov
xchg
cmp
add
mov
sbb
rol
push
test
inc
sbb
push
pop
add
fs
dec
pop
pop
pop
cmp
shr
sub
inc
or
jg
sub
call
test
sub
add
ficom
pop
cmp
xchg
mov
je
js
les
xchg
lods
xor
sbb
es
pop
rol
adc
stc
inc
sub
clc
push
arpl
out
jle
dec
or
mov
mov
mov
adc
dec
and
mov
inc
or
pop
and
inc
add
sub
add
dec
push
pop
inc
add
push
lahf
push
enter
mov
nop
jmp
mov
fabs
inc
adc
dec
push
mov
les
inc
in
inc
iret
inc
repnz
lds
jb
pop
sbb
sub
adc
sub
aaa
in
cmc
fldenv
(bad)
adc
xchg
jbe
mov
adc
cmp
repz
(bad)
loopne
mov
(bad)
sub
pushf
mov
push
cmp
cmp
xor
mov
dec
call
nop
pop
mov
pop
sbb
adc
bound
add
inc
inc
and
arpl
adc
xor
or
push
es
mov
push
xchg
hlt
and
enter
dec
jnp
jae
or
movs
xchg
ret
stos
jecxz
add
xlat
aam
movs
or
inc
mov
adc
ins
jne
push
lds
adc
xor
pop
cli
add
push
xchg
nop
lods
mul
sbb
jmp
and
fsubr
sbb
jmp
fbld
xor
or
push
dec
inc
jecxz
in
ins
adc
mov
ret
mov
sub
test
push
fisttp
in
in
add
add
inc
sbb
sbb
xor
pop
lea
je
cdq
adc
adc
ffree
xlat
ja
inc
nop
push
lods
mov
pop
push
sbb
mov
test
cmps
iret
pop
pop
mov
fbld
mov
push
pop
enter
adc
into
push
dec
jnp
push
pop
fist
mov
int3
pop
xchg
adc
sub
add
js
pop
test
xchg
in
ffreep
bound
add
shr
dec
cmps
push
popf
mov
mov
test
shl
(bad)
xor
jmp
or
loopne
sar
outs
gs
mov
shr
sysenter
or
sub
mov
test
add
sbb
lock
rcr
fcomp
mov
rcl
push
je
scas
imul
pop
rcl
lods
mov
ss
or
jmp
sub
lea
loop
inc
rcr
push
movs
push
mov
add
xor
or
cs
loope
pop
int
aam
sbb
jne
fs
pop
add
pop
pand
jo
or
inc
rol
imul
jg
xor
out
imul
lea
inc
pop
mov
lods
aam
adc
pop
daa
cmp
repz
push
rcr
inc
xor
and
inc
mov
(bad)
mov
das
xor
pop
add
icebp
pop
xchg
and
mov
push
pop
retf
sbb
fsubr
cmc
and
sbb
cmp
jmp
or
into
pop
nop
aam
adc
mov
mov
daa
mov
les
shl
fcmovnb
clc
xchg
xor
and
mov
retf
leave
pop
adc
(bad)
adc
adc
jmp
test
or
xlat
ret
sub
xor
les
push
imul
xor
fsub
scas
rcl
jne
add
mov
add
movs
xlat
pusha
cmp
adc
jg
sub
or
lea
push
push
in
xor
and
or
fist
and
loope
sub
adc
cmp
and
add
int
hlt
test
mov
sbb
inc
mov
adc
or
dec
mov
repnz
aas
ins
cdq
out
inc
cmp
ret
pop
stc
mov
mov
mov
sbb
sar
xor
adc
in
fadd
mov
aaa
sbb
jge
rol
rcl
or
push
fs
xor
add
(bad)
push
ja
or
ret
mov
add
fwait
cwde
dec
dec
sub
shl
xor
or
inc
cmp
shr
shl
cmp
inc
in
aas
dec
retf
and
lahf
xchg
sti
sar
imul
mov
(bad)
lock
sub
xchg
dec
retf
adc
push
stos
or
test
sbb
mov
cmc
arpl
adc
mov
cmp
push
or
les
cmps
push
pop
ror
shl
sbb
in
sbb
jb
pop
lods
push
sub
inc
mov
aas
add
mov
adc
xchg
scas
cs
stc
pop
xor
(bad)
sub
mov
inc
and
or
lods
push
iret
sub
stos
and
adc
xchg
adc
xor
mov
nop
push
or
test
mov
jg
cmp
lahf
jl
lea
push
mov
in
retf
pusha
and
outs
sub
or
shrd
pushf
xor
pop
pop
das
js
test
xlat
clc
out
inc
jp
test
inc
push
test
cdq
push
sub
jp
and
cmp
mov
adc
in
cwde
mov
or
add
js
mov
sub
fadd
outs
adc
ds
xor
add
cmp
jg
xchg
jmp
add
jbe
cmp
(bad)
pusha
or
jg
sbb
adc
call
push
wrmsr
add
jne
fbstp
push
scas
loop
cmp
jno
mov
add
aaa
loop
rcl
(bad)
xchg
test
pop
ja
popa
jae
nop
add
cli
cmps
dec
or
(bad)
xchg
or
adc
cmps
and
inc
cmps
pop
push
ja
xlat
and
dec
push
adc
xchg
and
enter
inc
pusha
fs
xchg
das
inc
mov
xor
fldcw
push
push
jne
out
lds
dec
push
jne
pop
mov
cdq
icebp
or
inc
sbb
sub
push
jl
inc
push
mov
push
retf
jns
not
sbb
bts
or
js
jne
je
(bad)
mov
sbb
pop
dec
aaa
(bad)
mov
aaa
cli
inc
dec
in
sbb
push
inc
sbb
add
inc
add
pop
mov
xor
inc
pop
jo
push
xchg
cmp
ja
and
dec
inc
add
movs
xchg
loopne
mov
lea
dec
outs
cmp
rcl
shr
xchg
mov
jp
xor
arpl
popf
xchg
in
lock
addr16
add
dec
mov
mov
not
ss
cmps
rol
xor
mov
push
cdq
lahf
sbb
hlt
shl
inc
or
mov
dec
cmps
xchg
enterw
or
cmp
jge
inc
add
mov
xchg
addr16
sbb
ret
test
dec
inc
dec
inc
test
addr16
call
(bad)
jg
jg
outs
push
nop
mov
jg
retf
push
fisttp
lock
fisttp
jne
repz
dec
sbb
fsub
mov
pop
(bad)
xor
sub
push
adc
mov
(bad)
pusha
ret
lahf
(bad)
fcom
pop
fadd
xor
dec
add
and
stos
shl
pop
or
mov
sub
pop
loopne
addr16
outs
mov
add
pop
popa
cmp
fstp
ret
sbb
mov
sbb
jge
pop
adc
push
enter
das
pushf
mov
dec
jmp
sbb
ficomp
into
je
sub
nop
loope
dec
add
mov
sbb
out
test
mov
xor
(bad)
cmp
dec
xor
std
retf
and
lods
xchg
mov
mov
sub
jns
xchg
ret
xchg
arpl
or
jbe
sub
popf
aam
and
and
rcl
push
xor
pop
out
xor
xor
pop
in
in
or
cmp
dec
(bad)
mov
cmp
pop
inc
add
add
add
popa
dec
retf
cs
adc
xor
mov
rol
cs
lods
sbb
in
cmp
xchg
daa
retf
add
fcomp
sbb
and
mov
dec
mov
jnp
pop
adc
push
and
inc
and
pop
mov
mov
lahf
mov
mov
das
xchg
mov
iret
jo
mov
adc
sub
add
push
add
das
push
sbb
mov
fistp
push
cdq
call
xchg
cwde
xchg
out
push
shl
out
add
jns
mov
xchg
add
adc
add
popa
lods
aam
dec
rol
xchg
sub
jbe
xchg
mov
outs
xchg
add
outs
inc
or
add
or
mov
lods
mov
mov
popa
sbb
pop
test
xchg
ss
ficomp
and
mov
ds
push
sbb
pop
or
nop
jae
cmp
sub
in
test
lea
adc
dec
arpl
adc
push
gs
or
or
cli
ins
sbb
bound
das
mov
sbb
jp
mov
nop
in
fld
xchg
addr16
fs
mov
add
and
nop
pop
or
or
sbb
add
pop
jo
das
mov
and
hlt
call
sbb
pop
jmp
and
loopne
bound
dec
and
fnsetpm(287
popa
jne
xchg
mov
mov
or
stos
rcr
add
daa
ins
sbb
adc
in
sbb
ins
jo
add
sub
add
enter
jae
or
retf
add
sub
into
aam
popa
jae
or
sbb
scas
add
dec
mov
add
cmp
adc
(bad)
or
lods
popa
fwait
sub
daa
movs
sub
mov
scas
sub
mov
cdq
or
test
(bad)
test
and
pusha
jns
(bad)
pop
adc
inc
imul
xor
cmp
mov
scas
xor
in
pop
ins
xor
mov
and
fcom
inc
jb
mov
cdq
outs
and
sbb
clc
ja
bound
fadd
inc
cmc
dec
add
push
and
loopne
in
fstp
das
js
adc
aaa
mov
(bad)
out
xchg
or
and
add
cmp
push
mov
in
or
add
xchg
xchg
stc
out
ins
pop
pop
push
cmp
lds
addr16
not
add
push
xor
dec
clc
ins
pop
adc
push
enter
sbb
test
jmp
push
pop
add
xchg
add
adc
and
inc
jae
pop
pop
imul
clc
outs
dec
add
(bad)
into
pop
or
loope
push
sub
and
mov
adc
aam
mov
ins
dec
cmp
mov
sub
scas
arpl
imul
icebp
and
mov
adc
and
mov
and
ret
mov
jmp
in
xchg
lods
or
adc
jb
not
cmp
or
(bad)
cmp
lods
inc
mov
arpl
xchg
mov
sub
sub
popf
jns
xchg
and
or
cmp
and
or
pop
or
sub
imul
popa
sbb
aam
les
push
jmp
xor
lods
push
push
jp
xchg
and
add
je
(bad)
mov
pop
xchg
dec
js
jo
pop
lea
les
or
cmp
shr
into
mov
mov
xchg
call
mov
pop
fcomp
imul
add
push
les
inc
jecxz
pop
bound
jne
cmp
or
adc
or
or
xor
pop
ins
in
fsubr
xchg
xor
cwde
nop
jne
retf
je
lahf
dec
lea
fsubr
adc
jne
pop
pop
test
pop
test
ins
popf
ins
ins
inc
imul
pop
sub
dec
xor
jae
inc
rol
sbb
pushf
pop
fild
inc
dec
or
mov
or
daa
lods
pop
hlt
dec
sub
or
push
adc
adc
adc
mov
gs
sub
xor
inc
lods
pop
push
sub
and
push
inc
and
sub
jmp
pop
ins
in
hlt
paddb
aam
ins
mov
jg
movs
jns
mov
jecxz
inc
popa
ins
push
pop
mov
mov
mov
pushf
lock
pop
jbe
or
inc
or
out
ror
movs
loopne
xor
add
bound
aad
ja
pop
jg
inc
or
mov
fcom
mov
pop
sub
push
clc
dec
into
enter
pop
in
add
hlt
mov
add
add
movs
and
gs
cmc
push
adc
dec
rol
adc
ins
lds
dec
pusha
adc
fldenv
icebp
fs
lahf
(bad)
jo
mov
iret
repnz
lods
sub
adc
ret
ss
outs
inc
add
pop
(bad)
xor
int
xchg
ret
js
pop
cmp
mov
and
rol
cmp
jecxz
movs
sub
jmp
add
pop
add
ins
lds
fs
mov
nop
jge
pop
xor
mov
loope
xor
aad
rol
sub
cwde
fmul
inc
cmps
add
test
loop
ret
ins
jo
enter
jmp
sbb
inc
jo
retf
or
sbb
sub
cmp
add
and
ret
add
or
jne
movups
fs
sbb
lock
lods
adc
(bad)
rol
lods
sbb
rol
int
in
push
and
push
(bad)
repnz
rol
inc
pop
xor
mov
or
inc
cmps
and
or
cmp
add
out
and
fcomp
stc
ss
repz
test
xlat
or
cld
dec
scas
outs
retf
pop
push
push
test
add
cs
cmp
jge
mov
sbb
and
sbb
nop
enter
add
ror
sbb
arpl
sbb
rcr
in
xchg
xchg
movs
xchg
jp
or
call
mov
add
fstp
mov
out
aam
pusha
popf
mov
and
pop
or
sub
je
or
add
aam
sub
jge
inc
pop
add
cmps
push
or
imul
test
sub
sahf
adc
sbb
push
mov
and
add
fld
xchg
and
xchg
or
push
adc
rol
or
scas
fnstenv
ja
push
aam
mov
and
xchg
loope
das
jmp
mov
mov
into
and
push
sbb
mov
call
fldl2t
in
imul
adc
ret
push
mov
cwde
fiadd
push
in
out
mov
out
pop
sbb
and
(bad)
nop
sub
add
sbb
imul
and
or
mov
push
mov
add
mov
sub
sbb
lds
and
lea
sub
scas
jecxz
ja
sbb
icebp
je
movs
nop
scas
sub
jmp
inc
sub
test
lock
inc
push
mov
pop
in
mov
and
or
fild
jbe
pushf
stc
xor
adc
push
or
pushf
push
and
push
dec
mov
rol
xchg
xor
inc
popa
repz
fwait
(bad)
fbld
push
push
mov
mov
hlt
out
cmp
(bad)
ins
or
sbb
pop
add
cli
sbb
adc
xchg
xchg
mov
adc
mov
sti
add
(bad)
dec
dec
dec
dec
(bad)
enter
dec
dec
dec
retf
int3
int
dec
dec
dec
dec
iret
mov
mov
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmps
test
stos
enter
lahf
stos
lods
enter
lods
scas
scas
nop
enter
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
cwde
enter
cdq
call
popf
sahf
lahf
cmp
enter
dec
cld
pop
enter
push
cld
cmp
xchg
add
test
ds
loopne
inc
xchg
inc
sub
push
inc
xchg
(bad)
std
scas
push
dec
shr
adc
mov
mov
(bad)
dec
ret
xchg
push
clc
sub
outs
ja
cwde
(bad)
fstp
xchg
les
(bad)
pop
sbb
add
fist
xchg
pop
(bad)
xlat
mov
pop
or
hlt
es
jns
push
mov
add
bound
push
or
(bad)
mov
nop
out
pop
and
mov
or
dec
adc
inc
test
pushf
(bad)
loopne
ja
and
mov
dec
push
hlt
sbb
pop
add
dec
and
lds
test
cmp
push
outs
push
jmp
js
or
cmp
cmps
clc
or
inc
jo
push
cmp
out
pop
and
pusha
nop
sub
add
pop
ins
pusha
add
in
cmp
push
clc
vmread
add
daa
cld
adc
push
pop
sub
sub
adc
nop
mov
cs
addr16
in
jb
push
adc
adc
mov
push
imul
mov
das
and
push
add
cld
adc
enter
pop
(bad)
and
test
sub
xchg
and
sbb
adc
pop
push
add
enter
sbb
je
adc
dec
dec
clc
sbb
mov
pop
and
pop
in
adc
adc
pushf
or
and
add
and
and
push
sbb
call
cmp
sbb
lahf
mov
xchg
(bad)
aaa
test
pusha
cmp
test
mov
adc
xchg
adc
inc
sub
outs
sar
out
sti
in
ds
add
push
repnz
push
ja
inc
imul
xchg
cs
pop
dec
mov
or
jbe
imul
cwde
scas
pushf
(bad)
mov
add
add
mov
push
cmp
or
sub
adc
lahf
ds
ror
shr
xor
adc
pop
mov
xor
adc
inc
add
jo
les
les
dec
mov
leave
sub
and
sti
xor
add
fbstp
sar
or
ret
std
popa
ret
adc
cmp
popf
(bad)
in
std
add
mov
and
retf
(bad)
xor
xor
push
jge
mov
adc
add
sub
sar
mov
icebp
jle
pop
dec
icebp
test
aad
pop
aas
push
jo
movs
das
dec
inc
or
add
dec
xor
and
sbb
bound
adc
fcomp
out
and
add
inc
in
xor
adc
neg
mov
lods
js
adc
fstp
movs
xor
fstp
js
lahf
mov
ja
fbstp
pandn
fild
fsubrp
cmp
pop
dec
ja
sub
xor
add
test
daa
(bad)
adc
iret
movs
xchg
adc
mov
retf
nop
xchg
adc
pushf
adc
sbb
pusha
cld
(bad)
fmul
pushf
(bad)
add
push
dec
adc
lea
push
sub
or
xlat
in
sub
or
nop
cld
mov
sbb
inc
mov
adc
gs
loop
and
and
enter
push
outs
adc
push
cdq
or
adc
enter
mov
sbb
push
into
or
dec
push
push
ret
fld
fist
jl
cmp
push
xor
inc
jnp
div
imul
xor
lds
cmc
fisubr
pusha
xor
push
or
in
sbb
sbb
add
push
retf
fs
sub
mov
test
adc
mov
call
xor
or
in
call
out
repz
test
mov
loopne
xchg
mov
sub
clc
movs
fiadd
jl
pushf
test
pop
test
xchg
lahf
or
adc
cmp
pop
jle
call
pop
and
xchg
adc
push
mov
lock
cmp
mov
or
stos
jnp
inc
test
xchg
cld
pop
iret
nop
xor
pusha
cmp
xchg
pop
mov
sbb
cmp
ins
dec
cs
(bad)
retf
adc
pop
(bad)
cmp
stc
jo
fwait
and
icebp
and
adc
inc
jg
mov
fiadd
jl
adc
sub
push
cs
jno
xchg
(bad)
daa
jmp
add
push
out
adc
sti
sbb
mov
or
(bad)
xor
sub
or
or
bound
adc
popf
pop
xchg
out
ret
adc
fst
xchg
push
jae
ror
mov
inc
inc
pusha
cmp
call
sbb
pusha
cmp
jge
or
jnp
and
lds
push
inc
dec
xchg
cmp
imul
push
cmp
jle
sub
inc
mov
jbe
mov
nop
loope
cmp
xor
cdq
sahf
loop
test
adc
cmp
bound
and
add
sub
mov
xor
push
lea
jnp
call
scas
and
fisttp
or
jl
dec
sti
mov
adc
das
mov
inc
or
jg
or
clc
ror
add
rol
mov
in
ins
cmp
inc
mov
(bad)
jmp
adc
fs
pushf
lock
fistp
dec
std
lock
lea
cmp
sub
fnsave
or
jg
jle
xchg
mov
in
mov
mov
add
cs
out
push
add
jmp
fsub
pusha
inc
or
and
push
mov
adc
push
mov
xor
push
rcr
jecxz
jge
lea
or
sti
sbb
scas
push
mov
rol
lahf
sbb
inc
popa
fbld
inc
je
(bad)
jecxz
mov
clc
or
ss
clc
lds
arpl
int3
cmp
sub
lea
pop
cmc
stos
xor
(bad)
adc
mov
movs
inc
mov
dec
lahf
pop
in
test
xchg
call
loop
push
mov
pop
adc
rol
xchg
or
sbb
out
add
inc
std
movs
push
dec
fisubr
test
mov
daa
rol
adc
sub
or
add
add
xchg
dec
call
rcl
(bad)
mov
push
sti
or
dec
sub
sar
mov
push
mov
cld
stc
inc
push
adc
(bad)
stc
push
pop
push
adc
push
cmps
and
dec
vphsubwd
das
rcl
or
ins
sbb
in
xor
add
adc
lock
mov
push
cmc
mov
xor
in
fwait
mov
in
adc
in
cmp
push
lock
and
dec
idiv
mov
cmp
bound
xlat
mov
mov
das
movzx
xchg
xchg
cmp
pop
call
pop
push
adc
fiadd
push
or
inc
mov
or
and
jb
push
push
movs
add
or
add
out
sub
out
movs
cmp
loopne
in
cmp
push
xchg
dec
and
add
sbb
push
neg
rcl
mul
inc
mov
and
js
mov
push
add
adc
add
sbb
(bad)
add
(bad)
shl
and
dec
lock
inc
jmp
jmp
push
add
in
aam
or
adc
mov
add
enter
sbb
imul
add
add
movs
jns
add
imul
test
inc
dec
outs
call
(bad)
adc
inc
jb
nop
mov
sbb
add
mov
jmp
lods
out
pop
dec
aaa
push
sti
cmp
xor
and
ror
xor
adc
not
neg
pop
add
or
pushf
and
and
ins
sbb
adc
and
inc
test
(bad)
jecxz
and
cld
and
inc
sub
je
test
sbb
mov
cmp
or
test
xor
xchg
or
cwde
cmp
in
scas
aam
push
dec
inc
mov
push
or
xor
adc
outs
and
push
lds
(bad)
mov
nop
sub
mov
mov
inc
push
test
dec
mov
cvtpi2ps
ss
xor
(bad)
adc
rol
int
fs
scas
push
loopne
sub
mov
or
sahf
sbb
and
push
xor
cld
and
retf
adc
ret
add
rol
lods
push
push
sbb
pop
and
inc
or
or
lock
mov
or
pop
pop
lods
daa
or
fcomp
jp
loope
add
fild
or
inc
mov
aas
mov
rcr
stc
data16
sbb
xchg
add
dec
push
sbb
mov
dec
mov
imul
cmp
adc
push
ror
call
rol
js
lds
retf
pop
lock
or
fsubr
and
cmp
inc
test
mov
clc
adc
fcmovb
les
mov
(bad)
loopne
(bad)
dec
sub
sub
inc
mov
mov
xchg
mov
pop
cmp
pop
and
sar
leave
int3
adc
add
push
es
jge
and
inc
adc
push
and
push
xchg
push
push
sub
movs
push
lock
xor
push
fadd
(bad)
or
dec
sbb
and
sub
xchg
inc
mov
pop
pop
mov
mov
inc
jmp
adc
push
rol
fimul
sbb
add
pop
xor
xlat
add
adc
pop
jp
les
inc
add
mov
pop
retf
outs
inc
add
into
rcr
add
jge
sbb
data16
out
es
and
in
push
std
fnstenv
daa
jg
cmp
jl
mov
dec
and
mov
(bad)
cmp
jle
sub
inc
icebp
xchg
mov
xchg
and
dec
loopne
add
aaa
lds
mov
dec
mov
movs
jb
mov
sub
dec
dec
nop
cli
pop
pop
dec
stos
fbld
xor
call
repz
arpl
loope
sub
add
xchg
or
inc
sbb
sbb
ret
and
mov
jo
pop
and
and
lods
arpl
(bad)
mov
rol
xchg
and
push
mul
mov
nop
jmp
add
jne
add
xor
jbe
out
add
rol
sub
and
sub
(bad)
pop
jo
jno
adc
mov
jb
out
pop
ret
sbb
and
loopne
nop
pop
jb
add
and
nop
add
cwde
xor
and
add
sub
arpl
cmp
add
mov
xchg
xchg
add
inc
push
mov
adc
add
adc
fdiv
ja
adc
addr16
mov
and
xchg
pop
out
inc
dec
dec
dec
mov
pop
adc
adc
call
lock
leave
inc
or
mov
jo
adc
and
mov
loopne
inc
sub
sub
ds
fucomi
inc
cmp
adc
adc
aas
or
xor
xchg
icebp
dec
sub
scas
mov
jg
adc
jmp
or
pop
cmps
test
js
jmp
sub
and
sub
fcmovnbe
movs
repnz
jo
or
or
jmp
cmps
mov
je
pop
mov
sbb
sbb
push
push
sbb
outs
lea
add
jmp
(bad)
inc
ret
ins
jmp
or
push
mov
xor
stos
add
outs
das
es
add
je
js
push
jns
adc
adc
shr
mov
cli
ret
mov
or
daa
pushf
ins
ret
sbb
push
pop
shl
jmp
mov
adc
pop
addr16
xor
outs
inc
retf
jnp
jmp
test
(bad)
xor
cmp
xchg
mov
adc
jle
or
mov
cs
leave
les
icebp
dec
(bad)
mov
daa
cs
div
jmp
and
test
push
add
jnp
ss
or
jmp
mov
inc
xchg
cmp
(bad)
mov
mov
cmp
add
dec
(bad)
xadd
pop
sbb
and
data16
xor
test
scas
dec
sbb
retf
test
fcomp
push
out
test
retf
popa
pop
add
adc
inc
push
push
sub
imul
inc
or
movs
sbb
add
sbb
call
test
and
enter
icebp
lods
cmp
fistp
ret
add
push
pusha
jo
sbb
adc
xor
push
or
adc
pop
mov
vaddsubpd
je
cmp
add
mov
imul
(bad)
push
and
sbb
nop
mov
cmp
call
cmp
jecxz
mov
mov
(bad)
repnz
loop
cwde
jbe
adc
jmp
sar
cmps
inc
jmp
je
fistp
(bad)
cmp
movs
push
es
nop
push
mov
sub
enter
enter
pop
mov
sub
test
pop
mov
cld
mov
dec
(bad)
neg
jmp
popa
and
sbb
cmps
lock
clc
sbb
dec
aas
jg
mov
inc
shl
mov
shl
mov
daa
mov
mov
arpl
loop
cwde
jp
rol
mov
push
fiadd
es
pop
mov
and
cmp
mov
sub
inc
popa
sub
and
jb
cs
xor
xchg
xchg
retf
sbb
inc
push
add
cmp
sbb
sub
xchg
in
out
out
jbe
jge
pop
lock
mov
push
lods
sbb
mov
in
dec
xchg
call
dec
dec
dec
pop
call
scas
fs
dec
aam
jb
in
pop
mov
push
enter
and
adc
add
xlat
or
sbb
mov
jmp
mov
(bad)
fsub
jmp
mov
or
das
aad
(bad)
push
push
cmps
test
call
inc
or
imul
enter
outs
nop
ficom
je
je
dec
je
add
int3
fimul
cmp
ins
push
pop
sbb
les
add
punpcklbw
xor
push
or
push
test
push
sbb
inc
push
fs
dec
push
push
in
pop
jne
ror
pop
pop
adc
push
test
movs
das
cdq
cdq
nop
add
pusha
lods
popf
push
mov
(bad)
sbb
cmp
cmp
inc
add
push
cwde
pop
add
repnz
push
iret
xchg
sbb
pushf
inc
sbb
in
xchg
imul
push
fcomp
sbb
lods
sbb
xchg
popa
add
and
pop
sub
push
dec
sbb
sub
inc
or
test
add
sbb
sbb
je
dec
retf
into
call
xchg
aas
or
ret
dec
add
pop
icebp
arpl
xor
mov
and
jl
jo
lea
xor
ret
scas
or
int
xor
test
or
push
push
ret
inc
outs
dec
icebp
adc
xor
popa
pusha
add
cmp
push
loopne
ss
in
shl
enter
call
xor
je
add
and
mov
xchg
push
add
cmc
aad
movs
mov
or
inc
mov
and
xor
test
jb
or
fist
xchg
sub
and
sbb
cwde
pusha
jno
and
fcomp
(bad)
arpl
push
rol
out
mov
mov
and
sar
ins
xchg
shl
sbb
adc
or
adc
dec
inc
adc
and
mov
sbb
out
movs
test
pop
dec
test
jb
outs
scas
inc
(bad)
xchg
pop
mov
xchg
add
sub
inc
and
fisttp
pusha
lahf
pop
out
dec
rol
add
and
xor
adc
jo
dec
xor
push
push
repnz
pop
popa
fcom
add
mov
and
ins
push
in
push
jne
rol
in
sub
jmp
or
mov
jae
(bad)
pushf
and
dec
inc
(bad)
cwde
cld
(bad)
push
popa
ja
xor
pop
ins
retf
cmp
adc
and
and
mov
dec
les
dec
cmp
add
imul
pop
nop
mov
and
das
adc
pop
nop
jmp
mov
or
clc
cmp
je
(bad)
js
pop
mov
xor
sub
inc
pusha
fadd
add
xchg
push
(bad)
mov
sub
fadd
xor
add
out
xor
or
inc
push
jbe
add
adc
jl
(bad)
push
and
dec
push
or
ret
lods
ss
jne
xchg
popf
cmp
iret
inc
or
dec
lea
in
xchg
add
adc
cld
dec
add
inc
lods
adc
add
cld
cmp
sbb
bound
ja
mov
fst
cmps
pop
dec
jbe
and
std
or
or
xchg
aaa
jmp
pusha
push
imul
add
test
jne
xchg
(bad)
fdivr
adc
adc
mov
inc
outs
loopne
lock
cmps
jno
sbb
push
dec
push
jnp
dec
jb
xor
lahf
ret
dec
inc
shr
or
(bad)
or
and
add
bound
xor
mov
cmp
mov
enter
cs
add
dec
add
ds
outs
mov
or
lea
imul
cmp
push
or
jnp
(bad)
push
adc
pop
sub
push
inc
or
sub
jbe
mov
add
or
xchg
push
or
or
iret
push
sbb
ret
cmc
pop
jp
dec
mov
add
(bad)
add
cwde
cmp
adc
xchg
lea
int3
pop
pop
push
js
or
movs
mov
inc
out
sbb
and
pop
iret
mov
cmp
ret
test
in
or
movs
lock
mov
dec
or
push
out
popa
shl
pop
dec
adc
push
dec
pop
push
inc
inc
push
mov
xor
mov
and
leave
arpl
ins
push
xlat
dec
stc
mov
or
inc
add
sub
or
or
xor
ret
pushf
add
or
and
inc
retf
outs
sbb
cmovbe
and
mov
shl
mov
jl
mov
pop
in
push
or
test
js
setno
arpl
repz
loop
add
test
(bad)
jmp
pusha
fild
sub
pop
daa
nop
mov
add
fild
cmp
and
call
sbb
cli
aas
add
sti
pop
ret
sub
adc
retf
in
or
add
jle
push
pop
pop
nop
jmp
mov
cmp
hlt
jno
add
pmaxub
rcr
outs
cmp
inc
nop
ja
test
adc
je
sbb
loopne
fucom
je
mov
xor
ja
retf
das
or
or
sahf
mov
mov
push
fld
and
or
add
jg
jae
push
push
inc
fimul
add
sub
add
push
or
pop
int3
jne
push
dec
mov
ret
test
jb
jne
cwde
(bad)
pop
enter
cmp
test
cs
dec
push
rcr
je
adc
add
and
inc
inc
dec
jmp
xor
iret
fisttp
in
mov
add
ds
adc
adc
or
movs
xlat
sub
push
adc
dec
or
lods
cmps
add
rcr
mov
or
add
aam
dec
out
ficom
daa
out
push
inc
add
sbb
(bad)
xchg
(bad)
ret
xor
mov
and
pop
inc
enter
div
adc
adc
inc
mov
cmp
xor
sbb
inc
pushf
fst
nop
push
dec
les
adc
ror
enter
inc
cs
sbb
cmps
pushf
arpl
test
mov
inc
xchg
(bad)
dec
adc
rcr
inc
mov
push
and
xchg
jnp
inc
cmp
inc
aaa
in
(bad)
xchg
adc
xor
xor
inc
sub
clc
(bad)
xor
cmp
cmp
ss
push
push
cdq
xor
add
rcl
or
pop
push
inc
or
cmp
xor
cdq
shl
add
inc
daa
inc
add
aam
push
inc
ins
in
xor
and
jecxz
outs
pop
push
pushf
fsub
call
mov
or
add
push
ins
mov
dec
ins
or
mov
jnp
mov
or
iret
sub
retf
mov
daa
inc
fs
iret
xor
add
daa
mov
inc
sbb
(bad)
push
sbb
or
(bad)
aad
or
jne
dec
mov
loopne
jb
les
inc
inc
push
pop
mov
push
hlt
sar
push
pop
imul
cmp
cmp
dec
cmp
and
enter
xchg
adc
mov
xor
test
sbb
add
cld
fwait
inc
loopne
and
xor
loopne
test
or
add
add
add
push
loopne
adc
inc
fistp
xor
(bad)
(bad)
lea
mov
and
das
dec
xchg
xor
pop
sbb
arpl
fcmovnu
ret
mov
mov
inc
jae
adc
mov
jo
int
es
in
push
push
pop
sbb
ror
aaa
test
dec
(bad)
cmp
call
inc
mov
sbb
adc
lods
jnp
test
pop
push
adc
aas
jl
sub
push
lock
cmp
(bad)
sub
add
xor
add
dec
nop
add
jbe
push
dec
pop
inc
sbb
inc
dec
movnti
dec
xchg
popa
dec
add
aaa
mul
pop
inc
sub
nop
mov
adc
clc
cmp
push
ds
dec
push
shl
and
or
inc
dec
bound
sbb
push
jmp
pop
dec
sbb
add
inc
add
enter
adc
mov
mov
or
in
pusha
adc
adc
dec
test
dec
xchg
adc
pop
lods
mov
arpl
mov
xchg
xchg
sub
xchg
mov
outs
stc
xor
or
arpl
cmp
pop
sub
shr
or
mov
js
retf
xor
imul
leave
in
adc
pop
sbb
(bad)
(bad)
inc
or
and
xchg
adc
test
xchg
or
sbb
lods
add
lods
cmp
inc
loope
bnd
inc
push
into
xor
xchg
sbb
sub
lds
mov
adc
pop
repnz
je
inc
cmps
mov
div
pop
imul
adc
sbb
pop
mov
xchg
cmc
in
and
fwait
in
push
sbb
mov
sbb
push
fsubr
lods
out
lods
jmp
inc
sub
xor
mov
pop
or
imul
mov
stos
jnp
push
mov
fist
dec
mov
out
add
imul
xchg
push
dec
into
fdivr
ss
mov
shl
je
mov
inc
in
dec
imul
mov
jmp
leave
ret
adc
pop
dec
ret
jg
je
mov
movs
mov
add
jmp
and
pop
loope
mov
and
mov
sub
add
sub
sub
(bad)
add
data16
pop
cs
das
add
clc
sub
and
sub
loopne
xchg
mov
aam
mov
and
retf
dec
add
ins
xor
add
xchg
push
inc
dec
iret
jne
ret
ins
add
add
add
inc
cmp
mov
mov
scas
push
ds
movs
adc
add
pop
fiadd
inc
or
sbb
jbe
push
dec
femms
xchg
mov
inc
lock
adc
mov
(bad)
ror
inc
push
fst
imul
add
or
ins
add
fidiv
push
aaa
push
into
adc
push
push
push
pop
sbb
popa
pop
add
push
cmp
repnz
push
xor
dec
outs
jmp
test
xchg
scas
sbb
mov
div
mov
push
push
cmp
xor
add
into
add
or
retf
mov
and
out
adc
pop
or
dec
data16
gs
xchg
inc
es
repz
out
or
test
sub
inc
pop
rcl
inc
nop
or
not
mov
sub
gs
enter
ret
gs
inc
jle
pop
enter
popf
add
xor
mov
inc
and
jmp
ret
shl
pop
dec
dec
jecxz
mov
dec
push
dec
int3
xor
inc
inc
xchg
inc
dec
inc
dec
inc
push
inc
xchg
adc
daa
lods
push
xchg
dec
mov
aam
mov
test
pop
lods
adc
nop
xor
or
xchg
nop
xchg
pop
sub
js
xor
fwait
cli
jmp
push
(bad)
cmp
xchg
mov
adc
gs
ja
cmp
mov
rcl
push
add
dec
cmp
inc
mov
mov
popa
jo
fisttp
pop
xlat
mov
or
xchg
mov
dec
and
neg
jo
dec
stos
verr
mov
dec
or
es
das
xchg
push
adc
or
mov
cmp
jle
fld
mov
push
and
shl
fwait
sbb
fld
imul
loopne
dec
imul
xchg
nop
ss
ds
inc
push
mov
push
js
inc
rcr
xchg
in
cs
ins
stos
push
mov
adc
jne
or
jae
xor
ins
inc
into
push
js
add
or
push
xor
imul
add
lods
mov
push
inc
xchg
test
and
mov
mov
and
movs
pop
push
test
xchg
add
test
das
add
mov
sbb
mov
in
or
push
mov
repz
loopne
push
mov
add
dec
jnp
addr16
or
or
push
mov
enter
and
add
push
or
cdq
dec
enter
inc
movs
pop
add
ins
inc
sbb
je
sub
xor
mov
pop
iret
cld
and
xchg
dec
adc
movs
fs
(bad)
mov
adc
arpl
pop
enter
fimul
clc
push
iret
cmp
pop
or
lods
outs
and
sub
pusha
scas
inc
adc
push
addr16
inc
mov
push
bound
sbb
stos
xor
or
push
sahf
and
pop
sub
xchg
dec
rol
add
dec
cwde
mov
jae
fcom
into
add
ja
mov
mov
xchg
pusha
lods
jae
test
and
add
xor
mov
adc
nop
push
mov
dec
cmp
or
lea
sbb
push
ud1
or
jne
xchg
fimul
dec
outs
pop
fcmovnbe
mov
pop
sbb
push
shl
ret
jnp
pusha
mov
xor
into
repz
or
inc
js
mov
popf
add
adc
(bad)
jmp
push
xor
lea
add
outs
in
jge
mov
or
outs
fsub
and
call
aam
rcr
push
adc
mov
xor
jg
sbb
les
xor
enter
scas
mov
fisubr
or
xchg
adc
movs
or
and
pop
sub
dec
iret
add
mov
inc
sbb
fbld
adc
enter
add
push
sbb
test
dec
and
or
shr
and
mov
xor
sub
bound
loopne
dec
les
inc
cli
in
inc
enter
es
pop
scas
outs
mov
lock
clc
mov
sub
xor
mov
(bad)
sahf
mov
sbb
rcl
shl
pop
xchg
pop
push
cli
add
sub
pop
xor
in
cmps
mov
mov
sub
mov
js
jbe
imul
sahf
test
xchg
pop
mov
(bad)
es
stc
add
xchg
fsub
mov
cmc
pop
pop
adc
mov
(bad)
or
adc
push
shr
jge
hlt
mov
cmp
rcr
push
adc
dec
mov
adc
test
mov
and
in
inc
pop
sbb
mov
or
sub
and
rol
fadd
pop
xchg
test
sub
and
or
ins
mov
inc
xlat
daa
jecxz
daa
mov
outs
sub
adc
lock
dec
or
sub
mov
mov
pop
lods
dec
push
retf
(bad)
hlt
pop
cmps
dec
dec
sti
test
aaa
cmp
xor
mov
and
push
jnp
pop
ins
in
sub
test
mov
jo
loope
mov
sar
adc
xor
(bad)
ror
jo
movs
cdq
add
sub
mov
push
and
movs
movs
push
adc
push
add
xor
sbb
pop
and
test
sub
pop
and
and
mov
jge
les
mov
adc
adc
or
shl
mov
sbb
es
call
or
scas
cmp
and
sbb
and
push
dec
js
mov
ds
ins
ins
ret
test
and
inc
dec
dec
mov
adc
dec
and
xchg
or
sbb
into
or
dec
jb
in
pop
ret
nop
(bad)
push
pop
adc
sub
pushf
(bad)
dec
fisttp
dec
mov
jb
mov
dec
mov
mov
jnp
jge
mov
in
xor
pop
into
aaa
dec
xor
mov
call
cmp
inc
dec
lods
clc
pop
mov
test
mov
jle
(bad)
sub
sub
dec
inc
sub
jmp
or
imul
xchg
std
stos
ja
dec
in
xor
retf
sub
pop
adc
push
pop
popf
or
jbe
pop
fsubr
jl
dec
dec
and
cmp
imul
xor
xor
sub
xchg
dec
jp
mov
lea
mov
popa
jns
jecxz
ret
or
fwait
lds
pop
and
or
inc
push
add
push
and
fwait
xlat
adc
add
push
xchg
pop
cmp
jnp
xchg
(bad)
xlat
and
add
inc
xor
addr16
nop
frstor
lahf
jns
pop
add
pop
pop
jbe
and
lock
add
xchg
add
ficom
loop
xor
fnsave
sub
cs
inc
add
rol
mov
cmp
add
sub
mov
add
lahf
pop
jno
push
or
jmp
js
xchg
add
rol
aaa
rcr
sbb
and
enter
adc
sub
jecxz
sub
inc
mov
cwde
mov
or
and
ret
cmp
lods
adc
ins
sqrtps
push
xchg
push
cmp
xor
jbe
jl
arpl
and
jae
(bad)
cmc
push
shl
dec
mov
mov
mov
orps
sbb
sbb
jo
inc
jmp
inc
ror
pop
pop
jecxz
lahf
adc
sti
inc
dec
cld
test
mov
out
push
add
and
imul
and
inc
xchg
retf
push
and
stos
inc
sti
ret
pop
test
inc
pop
push
or
xor
hlt
in
mov
sub
and
dec
test
adc
add
aad
mov
test
dec
inc
dec
cmovno
sub
mov
sub
jg
dec
iret
(bad)
rcr
rol
(bad)
es
in
inc
jne
jge
adc
add
movs
jl
sub
sub
and
push
mov
xor
in
and
movs
adc
jmp
adc
and
ja
bound
inc
cmp
jbe
xor
dec
mov
add
jecxz
sahf
imul
mov
call
jmp
xchg
outs
cmp
arpl
push
lods
add
pusha
xchg
pop
call
adc
mov
ret
add
or
cmp
sbb
push
pop
aad
inc
inc
push
aad
inc
clc
loopne
pop
and
std
movs
mov
sub
and
inc
dec
jne
add
mov
push
jmp
jbe
out
pop
jae
or
sbb
mov
pop
test
ficom
jl
or
rcr
push
and
hlt
sub
ins
pop
scas
and
(bad)
xchg
sbb
dec
dec
mov
test
add
jle
shl
fcom
dec
les
test
neg
fwait
inc
or
out
rol
ret
aaa
cmp
(bad)
and
sbb
leave
loopne
rol
push
adc
cmp
sbb
mov
ret
push
cmp
or
pop
in
dec
fnstenv
xchg
and
stc
fbld
xor
sbb
xor
je
jns
sbb
or
and
ret
jmp
xchg
add
push
mov
ins
cvtdq2ps
shr
pop
add
ins
jno
out
xor
mov
or
cmps
jb
and
gs
out
mov
and
xchg
shl
test
or
or
push
out
inc
les
outs
mov
aam
dec
and
push
aam
nop
icebp
in
jo
inc
xchg
or
xor
rcl
fild
aam
cmp
add
sub
aas
mov
mov
jle
inc
add
adc
rol
inc
adc
call
nop
push
inc
xchg
dec
mov
popaw
inc
sub
call
push
icebp
push
dec
jmp
mov
mov
test
(bad)
sahf
loopne
enter
call
(bad)
jne
jb
and
mov
or
dec
sbb
ficom
ret
lock
adc
cmps
and
inc
xor
xor
or
enter
or
pop
push
rol
mov
cmp
sub
dec
sbb
jne
xchg
(bad)
adc
sbb
jp
movhps
mov
not
daa
je
std
inc
mov
xchg
and
pop
and
cmps
mov
in
pop
clc
add
adc
add
mov
sbb
shl
mov
push
sbb
add
jle
shl
pop
xor
sub
fwait
xchg
fldenv
sbb
mov
pop
mov
jp
xor
or
movs
xchg
sbb
push
cmp
add
dec
outs
and
arpl
jl
enter
inc
pop
dec
loop
push
or
inc
imul
push
sbb
ret
sub
or
adc
mov
sub
imul
dec
ret
or
add
popa
leave
add
imul
xor
daa
or
in
lahf
mov
adc
sbb
rcr
nop
je
fucomp
scas
inc
lods
ret
sbb
inc
ins
inc
shl
xor
or
ins
stc
div
mov
leave
in
mov
in
dec
lds
adc
aad
into
cmc
ins
sub
cld
ins
add
ins
pop
xor
mov
or
gs
xchg
mov
or
dec
js
sub
inc
ja
dec
gs
gs
mov
or
inc
fwait
mov
and
jb
push
outs
inc
or
clc
push
bound
mov
xchg
lods
xor
push
pop
push
fild
mov
sub
adc
jno
or
inc
jle
jge
mov
jae
xchg
outs
mov
push
outs
pop
jl
movs
arpl
xchg
push
pop
sub
adc
aas
push
out
out
mov
out
and
imul
call
push
shl
mov
pop
sbb
push
fs
add
loopne
and
add
daa
ror
jge
inc
jae
inc
or
or
js
rol
sti
mov
(bad)
outs
ja
push
sbb
in
ror
push
fcom
mov
mov
sbb
and
push
fs
jbe
jo
mov
je
sub
js
addr16
cmc
nop
cmp
jle
push
and
mov
xchg
jge
mov
iret
repz
sbb
jl
mov
mov
inc
nop
push
cwde
add
iret
mov
pusha
mov
xchg
jg
xor
cmc
pop
fwait
or
add
ins
pop
push
sub
push
rol
aam
bound
ror
inc
pop
add
add
cmc
jbe
add
adc
pop
xor
int3
stos
pop
mov
sub
jo
lahf
push
lahf
and
jno
pop
inc
popf
xchg
lea
ror
mov
pop
jb
pop
ret
lods
pop
daa
outs
cmp
mov
push
fisub
rcl
cwde
test
popa
dec
pop
mov
ds
xchg
or
fstp
xor
fcom
inc
mov
mov
or
fidiv
iret
xchg
fs
loope
pop
inc
inc
(bad)
int3
inc
add
mov
nop
add
adc
call
push
or
loop
leave
pop
mov
je
ret
add
sub
xchg
(bad)
out
fidiv
nop
cwde
scas
pushf
(bad)
mov
(bad)
mov
or
call
dec
push
icebp
and
inc
push
nop
jp
mov
lods
cmps
inc
leave
lea
or
std
adc
add
loopne
ficom
sub
xor
add
sbb
rol
push
pop
add
imul
or
jmp
pop
sub
xchg
inc
pop
out
adc
xchg
push
and
nop
jle
push
dec
jo
gs
shl
inc
xor
or
mov
push
xor
test
pop
ds
or
xor
adc
or
push
rol
sahf
push
mov
repz
cli
lahf
sbb
jl
cdq
fcom
inc
xchg
or
sub
pusha
pop
xchg
and
pop
jg
imul
ja
or
loop
xor
push
adc
xor
(bad)
xor
or
sub
sbb
dec
rcr
push
cmps
sub
add
push
and
or
pop
and
shr
scas
and
cmp
out
mov
cmc
pop
call
sbb
lock
clc
mov
ret
bound
aas
(bad)
or
dec
shr
sub
add
cld
rcr
int3
xor
inc
push
test
adc
and
fld
fadd
add
adc
and
nop
adc
push
inc
adc
ins
lahf
cmp
xchg
loopne
mov
sbb
je
jmp
push
out
and
or
addr16
les
dec
in
aad
inc
sub
movs
ror
ds
sub
data16
jns
gs
sbb
fld
sbb
add
dec
nop
retf
xchg
or
std
jne
inc
jno
and
retf
je
outs
hlt
jb
push
sbb
mov
mov
iret
jno
jns
jp
cld
icebp
dec
sub
icebp
add
jl
inc
mov
cmps
ins
in
mov
push
and
js
stos
xlat
mov
and
nop
mov
test
xchg
hlt
push
sub
xchg
push
inc
xor
and
daa
cmps
popf
lock
xchg
mov
es
aad
lahf
hlt
and
xor
lock
and
push
mov
lods
aad
sbb
lock
scas
nop
push
mov
out
mov
jge
pushf
inc
es
ins
and
cmp
(bad)
and
mov
ret
push
cmp
push
and
push
cdq
sub
imul
jge
dec
lea
ins
inc
jno
jo
mov
js
call
ds
jae
inc
popa
bound
xchg
adc
add
cmp
sar
add
xor
dec
mov
push
inc
mov
jl
es
(bad)
mov
inc
cmp
retf
outs
call
imul
add
sbb
pusha
inc
mov
std
and
xchg
stos
sti
pusha
mov
cmp
je
mov
dec
les
pusha
iret
sbb
inc
jp
mov
mov
mul
inc
leave
sbb
and
loopne
jns
mov
pop
mov
ds
pop
adc
add
cmp
data16
outs
into
cmp
or
test
ins
loopne
test
enter
add
mov
rcl
out
add
in
jg
mov
push
and
aam
loop
daa
adc
gs
push
and
mov
dec
adc
daa
lods
popa
test
sub
int
fs
loopne
adc
repz
das
mov
mov
inc
jo
or
rol
jo
xchg
test
ss
sub
inc
mov
adc
jo
je
adc
adc
call
or
xchg
shl
push
push
cmp
pop
and
inc
add
mov
bound
or
sub
sbb
mov
test
cmp
add
and
ret
dec
xchg
hlt
lock
inc
pusha
cmps
mov
mov
lds
js
ds
pop
jmp
in
sub
ret
sub
mov
pop
sub
dec
outs
jne
out
and
imul
jno
or
and
aad
and
lock
jl
mov
es
inc
adc
jl
mov
pop
inc
jg
mov
mov
push
dec
sub
imul
shl
xchg
xor
ja
daa
pop
mov
mov
xchg
(bad)
aam
je
inc
xchg
or
loop
pushf
add
pushf
fidiv
mov
add
loopne
sub
dec
cmp
je
ret
xchg
fimul
pop
inc
mov
add
or
(bad)
xchg
xor
hlt
ret
xor
dec
lock
test
jecxz
dec
jnp
mov
adc
xchg
and
(bad)
aam
cmp
add
fld
xor
enter
jl
out
sub
sub
xor
out
cmc
dec
add
adc
xchg
in
xchg
mov
mov
pusha
lock
dec
je
dec
iret
(bad)
inc
mov
push
push
inc
mul
and
and
jle
outs
imul
and
sbb
sar
cmp
sbb
pop
(bad)
push
push
sub
arpl
xor
jg
jbe
mov
jnp
cmp
call
mov
jno
or
lods
add
inc
and
pop
dec
popf
adc
inc
and
shr
and
std
bound
and
je
sbb
ins
mov
cmp
adc
aas
xor
push
test
ins
or
push
pop
sbb
adc
gs
mov
repz
scas
dec
adc
mov
push
push
imul
aas
push
jmp
xchg
hlt
(bad)
fmul
movs
rcl
xlat
mov
jge
jl
adc
rcr
adc
pop
or
outs
jmp
loope
or
xchg
adc
or
dec
add
popa
arpl
sbb
mov
xchg
add
xchg
xor
movs
inc
movs
push
mov
fcomp
mov
or
loope
les
pop
xchg
push
push
or
xchg
mov
movs
imul
and
ret
adc
jnp
or
or
mov
sbb
cmp
ret
shl
adc
inc
inc
or
xchg
or
daa
sbb
inc
dec
popf
pop
outs
sbb
je
retf
inc
push
fwait
loope
add
push
loopne
scas
ds
pop
adc
fbstp
retf
mov
mov
and
ins
dec
cmp
mov
mov
cmp
xchg
bound
loope
dec
dec
cmp
cli
loopne
or
dec
retf
out
cli
push
sbb
xor
jg
xor
push
jmp
and
dec
call
cld
lods
pop
pop
adc
call
cdq
div
and
psubsb
xchg
int
shl
nop
mov
push
add
imul
add
cmp
and
rol
ins
(bad)
and
hlt
cmp
mov
jmp
repz
push
lock
js
jge
jecxz
idiv
int3
(bad)
push
jge
adc
mov
add
mov
sbb
inc
jge
xchg
sbb
or
mov
test
movs
ret
inc
inc
jle
sbb
rol
cmp
cdq
xlat
nop
mov
jns
mov
mov
mov
push
xchg
xor
arpl
loope
and
nop
mov
jno
(bad)
mov
fdiv
nop
in
dec
push
jns
movs
and
int3
sbb
push
in
mov
retf
and
in
in
lods
mov
sbb
mov
sbb
test
leave
int
jmp
mov
mov
xchg
addr16
(bad)
int
jb
cmc
loop
xchg
loope
lea
xor
gs
cli
xor
xor
add
push
ds
pop
adc
adc
out
xchg
inc
arpl
cwde
jp
jbe
sbb
or
mov
push
mov
pop
push
ficom
shl
lods
jmp
or
fisttp
popf
cmp
push
and
push
out
ins
lea
sub
jle
pop
daa
mul
push
and
pop
and
add
bound
mov
inc
inc
repnz
pop
inc
mov
add
test
imul
test
adc
pop
test
sub
push
push
dec
xchg
mov
mov
mov
jecxz
cmp
nop
xlat
adc
nop
ror
mov
sbb
mov
or
push
mov
adc
sbb
pop
push
mov
(bad)
out
and
fild
inc
dec
xchg
or
pop
xor
and
call
enter
pop
push
mov
stos
mov
add
pop
xlat
popa
adc
add
shl
add
mov
bound
pop
inc
ret
adc
mov
(bad)
adc
gs
dec
in
loopne
pushf
jae
sbb
mov
and
fwait
rcr
add
xchg
mov
push
pop
sbb
dec
sub
out
add
push
inc
inc
push
pop
xchg
xchg
mov
fistp
popf
sbb
xor
daa
jle
sub
inc
fs
push
xor
push
inc
fisttp
add
in
dec
in
in
jne
or
sbb
inc
xchg
in
jle
in
and
in
in
in
pusha
jmp
mov
outs
sub
xchg
cmp
mov
or
fistp
in
mov
adc
(bad)
fmul
sahf
lock
adc
xchg
ins
pusha
fnstsw
out
xchg
pop
push
push
repnz
mov
pop
jge
ins
jo
push
sbb
retf
out
ret
enter
shl
push
jne
jns
(bad)
inc
push
(bad)
adc
sti
test
test
cmp
call
dec
movs
movs
and
rol
sbb
dec
fadd
imul
and
daa
retf
xor
mov
addr16
push
pop
push
int3
cld
adc
ja
cmps
cdq
jmp
or
lea
cmp
imul
mov
lock
sub
test
mov
loope
or
adc
xchg
retf
inc
push
mov
mov
nop
lea
bswap
mov
cmp
test
hlt
and
arpl
mov
xchg
push
mov
movlps
push
imul
mov
in
sub
push
popf
mov
mov
(bad)
pusha
inc
and
out
aam
mov
xchg
inc
and
sbb
arpl
sbb
push
movs
test
jo
xor
in
retf
cmp
push
push
jmp
push
in
es
xchg
cmp
nop
dec
mov
dec
inc
adc
and
clc
cmp
mov
nop
aam
(bad)
or
cmp
adc
rcl
inc
xchg
aad
mov
sahf
out
push
add
or
xor
cmp
adc
or
jecxz
call
lods
sbb
pop
xchg
aad
test
pop
dec
bound
aad
call
push
lea
sbb
bound
test
pop
dec
stos
dec
and
ror
push
mov
jmp
cmc
jmp
stos
mov
sar
mov
ficom
jne
add
mov
mov
or
sub
cs
(bad)
and
pop
nop
ret
pushf
fadd
or
test
pop
mov
mov
mov
cmp
hlt
push
cld
pop
loopne
add
or
add
cmc
pusha
aaa
or
mov
ins
mov
inc
xchg
inc
sub
mov
xor
shr
mov
and
ret
pop
fsubr
sbb
inc
repz
pushf
dec
jb
dec
jae
lock
jecxz
cmp
push
mov
push
pusha
out
jle
mov
fimul
push
rcr
mov
pop
rol
lods
clc
cmp
sub
sub
imul
(bad)
sub
paddusb
cmp
out
pop
stc
cwde
jmp
ins
(bad)
xor
std
xor
cwde
frstor
dec
es
sbb
addr16
sub
(bad)
test
push
jl
ror
div
push
mov
push
arpl
rol
test
scas
stos
les
and
sbb
mov
aaa
add
fimul
js
mov
sbb
call
mov
cld
ret
push
pop
or
pop
lea
dec
and
cmp
adc
adc
sbb
sbb
dec
inc
sbb
dec
je
adc
mov
cmp
idiv
push
add
dec
sbb
cmp
or
fld
shr
push
bound
in
pop
sub
and
xchg
push
imul
jge
imul
add
adc
cld
mov
mov
inc
add
mov
adc
and
pop
inc
mov
ins
or
retf
ja
fstp
mov
inc
and
mov
push
ja
pusha
sub
mov
mov
adc
pushf
xor
push
push
mov
xchg
jbe
or
sbb
and
dec
ja
movs
inc
out
call
dec
ja
lea
pop
mov
add
lds
call
(bad)
aaa
inc
adc
popf
cmp
jno
je
mov
in
inc
add
cmp
inc
test
sbb
sub
out
ins
push
push
push
push
lods
xlat
and
loope
xor
jbe
test
sbb
inc
test
into
xor
add
mov
mov
push
(bad)
pop
sahf
sbb
lds
add
gs
popa
mov
push
add
push
and
dec
lahf
(bad)
xlat
or
add
es
imul
cmp
jl
out
pop
fcmovu
arpl
aaa
dec
loopne
movs
test
inc
dec
test
hlt
sbb
dec
sub
push
cmp
mov
leave
rcr
fbld
arpl
add
push
push
xchg
mov
scas
mov
popa
test
in
mov
mov
int
jle
adc
and
sub
clc
and
xchg
mov
push
call
add
aad
movntq
adc
cwde
cs
jne
and
clc
imul
int3
pop
and
inc
xchg
imul
mov
sub
sti
sar
dec
fstp
fsub
add
jmp
push
fidiv
xor
mov
sub
mov
call
rol
mov
mov
adc
shl
cmp
inc
mov
cmp
dec
sbb
jl
adc
mov
push
popa
xchg
inc
inc
sub
nop
jbe
inc
imul
mov
ja
rol
nop
sub
iret
add
inc
pop
pop
int
dec
sbb
xor
iret
mov
mov
sbb
cmp
mov
jmp
and
push
fdivr
pop
pop
xchg
push
mov
mov
inc
mov
add
cmp
test
pop
or
push
dec
das
mov
cmp
jne
cli
and
js
(bad)
mov
data16
bound
ret
xchg
or
retf
sbb
mov
push
inc
jge
and
popa
js
cmp
inc
mov
test
jl
rol
and
inc
ja
jecxz
lahf
(bad)
sbb
or
lea
loopne
push
jmp
add
inc
sbb
movs
mov
sbb
xchg
mov
cmp
dec
or
mov
ins
sub
ins
frstor
mov
and
shl
cmp
add
inc
and
mov
fcmovbe
mov
jecxz
sbb
mov
mov
stos
or
xchg
adc
mov
pop
pop
sbb
push
arpl
cmps
stc
xchg
shl
arpl
movs
adc
imul
loopne
cmp
ins
arpl
mov
inc
adc
arpl
cli
add
pop
in
push
sbb
sbb
pop
sbb
jns
or
pop
or
inc
xor
(bad)
mov
sbb
add
dec
push
(bad)
cmove
popa
stos
push
frstor
stos
mov
push
push
or
push
pop
lahf
imul
adc
xchg
jo
and
push
add
mov
pop
adc
jmp
jnp
adc
cmps
push
and
(bad)
push
and
mov
adc
and
sub
mov
aam
and
add
xor
aam
fsubr
inc
adc
or
shl
enter
enter
xchg
adc
in
push
add
inc
push
mov
inc
adc
inc
dec
jle
xor
movs
add
std
jmp
mov
xor
and
test
push
mov
push
xchg
lods
aad
and
jg
dec
mov
cmps
jecxz
add
mov
fs
scas
or
or
jae
push
dec
xor
lods
mov
rcr
adc
mov
ret
stos
ret
hlt
adc
add
les
jl
cmp
mov
pop
pop
rcl
adc
lock
pushf
inc
je
sti
mov
loopne
adc
mov
add
xchg
jno
dec
mov
popa
sbb
ret
int
xchg
push
pop
mov
xchg
jle
mov
and
and
mov
pop
sub
cwde
push
mov
nop
mov
jmp
pop
inc
and
push
push
jno
push
mov
das
jne
mov
or
adc
inc
jne
adc
dec
ins
push
aaa
jmp
imul
fcmovb
or
cmp
int
mov
scas
in
adc
cmp
rcr
jmp
fsub
test
scas
sub
fiadd
inc
add
ficom
shr
jnp
pop
add
sub
or
fimul
push
xchg
adc
push
xchg
scas
pushf
xchg
xor
scas
inc
cmp
add
ins
dec
xchg
rol
add
ret
jns
or
in
or
xchg
pop
fld
out
mov
and
and
xchg
cmp
adc
stos
retf
push
add
add
test
add
fsubr
add
inc
adc
mov
xchg
clc
mov
movs
push
dec
fist
and
je
mov
in
cmp
add
xchg
cmp
xchg
(bad)
int
ret
jns
ins
jg
adc
push
dec
and
jns
mov
pusha
sbb
wbinvd
inc
mov
and
xor
adc
sub
jns
push
retf
mov
add
(bad)
adc
adc
call
ds
inc
jno
in
movs
jbe
mov
and
pop
call
aaa
jge
fist
sub
xchg
aad
cs
mov
or
getsec
(bad)
retf
xor
imul
out
jo
adc
inc
dec
sub
cs
mov
pusha
daa
inc
push
ror
adc
or
rcl
icebp
pusha
dec
jp
inc
ds
or
daa
std
outs
mov
ss
mov
sbb
movs
push
sub
scas
hlt
mov
pop
or
sbb
test
cmp
jne
dec
inc
dec
pop
push
add
(bad)
iret
shl
dec
lds
jge
mov
clc
in
dec
xchg
mov
sub
jb
or
fmul
mov
add
loopne
aaa
dec
lea
outs
ror
mov
in
cmp
dec
lds
add
out
cmp
loopne
(bad)
push
(bad)
aaa
and
pushf
xor
js
ds
push
sbb
ins
or
pop
jae
rol
pop
stc
sbb
not
mov
pop
cmp
mov
inc
jne
shl
add
cmp
addr16
xchg
dec
or
cmc
inc
pop
jno
mov
loopne
lahf
jge
scas
fadd
push
push
daa
cmp
mov
mov
fmul
jae
inc
imul
mov
cmp
cwde
mov
sbb
sub
addr16
(bad)
push
bound
sub
or
test
mov
das
aam
xor
mov
fmul
jmp
movs
pop
mov
movs
popf
or
sub
mov
adc
xor
sbb
sub
shl
out
pop
xor
retf
add
mov
mov
clc
adc
inc
jne
mov
add
and
cwde
xchg
dec
adc
pop
mov
lea
xor
popa
inc
in
mov
mov
dec
pop
mov
mov
lods
jmp
and
add
(bad)
or
mov
inc
lods
mov
jecxz
and
pop
mov
dec
leave
mov
mov
shl
(bad)
xor
ret
stc
or
ficom
jp
inc
dec
out
mov
cmp
pop
mov
mov
hlt
hlt
add
sti
(bad)
xlat
mov
jb
sti
push
inc
pop
leave
shl
int
in
xchg
test
inc
ss
or
xchg
xchg
mov
mov
lea
pop
jae
(bad)
xchg
hlt
add
add
mov
pusha
cwde
or
call
mov
add
popa
daa
icebp
movs
jae
adc
shl
mov
push
sbb
fs
es
or
xchg
pushf
jge
cmp
test
fild
cvtdq2ps
pop
push
add
inc
arpl
add
mov
loop
cmps
adc
mov
popf
mov
test
cmps
in
add
pop
ss
loopne
mov
mov
sbb
mov
or
test
mov
cdq
add
pop
and
cmps
(bad)
or
inc
call
pop
jl
pop
(bad)
aad
ror
sbb
stos
rcr
cmp
inc
pop
arpl
in
cmp
sbb
add
stos
ins
pop
add
adc
mov
xor
xor
cmps
add
data16
popa
jg
data16
std
sub
inc
mov
mov
adc
add
dec
push
pop
add
inc
adc
sbb
hlt
sub
jns
inc
mov
xlat
cli
sar
or
aad
jb
inc
mov
repnz
fs
cld
mov
add
inc
fdiv
and
pop
xor
popa
popa
pop
mov
adc
dec
sbb
pusha
mov
test
enter
outs
or
push
xor
cld
scas
enter
add
xchg
jmp
int3
push
sbb
in
shr
cs
loop
or
les
in
add
adc
bound
adc
or
push
and
sar
outs
mov
inc
adc
das
daa
nop
lea
pop
dec
mov
cmp
test
cmp
and
push
adc
rcl
cmp
push
xchg
sub
rol
pop
sbb
sahf
push
fsub
hlt
int
xchg
mov
mov
stc
and
pusha
mov
adc
push
repz
dec
add
xchg
aaa
addr16
sbb
or
sub
movs
push
mov
dec
xchg
ret
xchg
inc
mov
mov
inc
popa
movs
and
(bad)
imul
gs
es
push
cld
jmp
pop
ret
fdiv
cmp
fdiv
daa
adc
les
inc
mov
inc
add
test
fsubr
push
sbb
jo
lods
mov
inc
(bad)
and
(bad)
jmp
clc
sub
add
shl
lock
sbb
repz
mov
dec
je
nop
add
stos
mov
es
fucomp
xor
lea
mov
bound
mov
shr
leave
xor
dec
lock
ret
enter
enter
mov
add
fs
mov
test
pushf
add
push
in
push
sub
out
fmul
inc
adc
fnstsw
xchg
clc
(bad)
push
call
enter
adc
add
stos
sti
dec
push
ror
push
pop
add
pop
sbb
inc
lahf
(bad)
clc
shl
push
xchg
rcl
add
jmp
dec
dec
test
add
lock
rol
test
mov
or
cmp
adc
popa
sbb
fst
mov
push
ret
mov
icebp
add
sub
sbb
(bad)
and
mov
mov
sbb
lds
inc
pop
jo
shr
push
adc
sbb
mov
sub
mov
xlat
push
xor
fdiv
push
xor
pop
pop
out
ss
ret
rol
fs
inc
outs
inc
adc
std
and
xchg
hlt
xor
mov
ins
mov
enter
push
adc
pop
sub
and
and
cwde
(bad)
and
sbb
arpl
and
cmp
add
or
jns
or
retf
adc
hlt
add
jle
add
add
adc
rcr
xor
enter
and
push
test
sub
xchg
xchg
mov
leave
pushf
jl
mov
push
adc
out
outs
arpl
push
push
mov
test
inc
inc
mov
sbb
out
adc
out
push
adc
ret
movs
imul
aas
cmp
xor
mov
xor
add
add
daa
push
dec
adc
add
sbb
inc
dec
inc
shl
pop
ins
jle
aad
in
es
mov
fwait
mov
inc
push
inc
mov
jp
mov
sbb
jle
jnp
mov
inc
add
addr16
xor
(bad)
enter
dec
push
and
fisub
dec
ja
jo
add
xchg
imul
js
cdq
das
xor
xor
sti
test
in
aas
inc
inc
fmul
push
jne
dec
jmp
out
sbb
push
call
bound
dec
xchg
shl
imul
cmp
mov
pop
and
add
int
or
dec
and
mov
mov
test
sbb
rol
inc
clc
or
(bad)
xchg
cmps
lods
mov
or
cmps
std
je
adc
add
pop
dec
adc
adc
add
add
xor
and
(bad)
std
outs
xor
test
add
ins
das
fs
xchg
and
or
fs
xor
je
cmp
adc
or
sub
or
aaa
fs
push
add
xor
inc
or
pop
or
div
inc
mov
jle
add
and
rcr
lahf
dec
pop
not
movs
ja
popa
xchg
sub
add
push
aad
clc
sbb
rcr
sub
xlat
mov
out
mov
push
add
adc
inc
mov
cmp
cmp
pop
(bad)
jmp
sbb
mov
dec
cs
add
and
inc
add
and
das
ss
and
xor
pop
cmp
shl
add
xor
mov
aam
and
shl
mov
movs
push
add
test
cmp
(bad)
and
pusha
lods
sub
adc
sub
sub
pop
ficomp
add
imul
retf
jb
sar
or
dec
sbb
(bad)
std
fiadd
leave
ins
sub
cdq
mov
pop
xchg
popa
mov
pop
sub
arpl
sbb
jo
add
icebp
dec
inc
fcomp
jp
or
or
inc
leave
or
xor
add
jmp
inc
inc
test
xor
sub
xchg
xor
test
mov
icebp
leave
sbb
stos
mov
mov
jp
sub
icebp
push
cli
push
fld
nop
outs
adc
jl
inc
movs
lahf
test
add
test
dec
jne
aaa
lock
dec
cli
inc
mov
sahf
or
cmps
popf
adc
xchg
push
iret
rol
icebp
ins
mov
imul
ret
ror
add
cmp
mov
or
dec
sub
jg
int3
inc
add
es
sbb
sub
cmc
pop
adc
out
sbb
inc
xchg
cmp
fist
in
and
dec
test
test
mov
rcr
adc
mov
add
mov
mov
xor
daa
addr16
xchg
imul
cmp
sub
jmp
repnz
push
mov
inc
inc
sbb
pop
add
ror
inc
sub
stos
cwde
adc
cmp
movs
imul
sub
mov
rcr
nop
dec
add
xor
push
inc
or
adc
and
or
inc
sbb
je
mov
cdq
hlt
adc
cwde
pop
(bad)
iret
ja
sub
adc
mov
or
xchg
ds
xchg
xchg
push
push
jo
mov
or
jle
xchg
cmp
mov
mov
lea
cmp
mov
sbb
lahf
jo
imul
iret
not
aad
and
mov
adc
mov
push
lock
enter
int
mov
cmp
jmp
icebp
imul
clc
(bad)
in
add
ror
xchg
or
call
and
or
jmpw
sub
inc
loop
(bad)
pop
jp
xor
into
dec
popa
or
push
loopne
and
and
ins
inc
pop
sub
mov
nop
inc
cs
push
outs
mov
clc
adc
xchg
and
sbb
add
dec
int
loopne
mov
pusha
and
leave
jns
into
push
mov
lods
test
adc
sub
iret
retf
lock
outs
sub
jl
xchg
push
fwait
lahf
sub
sbb
xchg
inc
pop
rcr
add
imul
mov
add
rcl
fdiv
add
or
push
add
push
xchg
mov
mov
xchg
pop
sbb
cmp
ror
and
movs
ins
fs
out
mov
(bad)
imul
movs
jbe
push
es
(bad)
and
mov
sub
adc
and
adc
ret
aam
sahf
adc
push
rcl
inc
add
cdq
clc
stc
out
cmp
or
inc
or
fwait
cwde
dec
push
repz
dec
jle
aam
arpl
mov
push
leave
aam
fdiv
test
sbb
and
dec
call
rcl
xor
add
push
xchg
dec
dec
mov
enter
cmp
push
lea
mov
inc
dec
adc
loop
pop
fild
pop
pop
stc
xor
(bad)
lods
scas
fisttp
pop
adc
sub
(bad)
shl
adc
push
push
sbb
and
fnstenv
les
fdiv
or
or
jne
jo
sub
and
cmp
and
sbb
fld
push
es
loop
pop
fchs
sub
sub
cmp
out
in
jmp
pop
adc
ja
pusha
adc
mov
inc
lods
adc
pusha
lahf
add
mov
push
dec
outs
add
inc
mov
jne
test
loopne
cwde
adc
jmp
lods
xchg
loopne
test
sbb
jno
jo
call
in
sbb
mov
cmps
mov
call
addr16
push
or
cmps
(bad)
fsub
ret
pop
push
inc
or
or
imul
movs
sbb
out
imul
pushf
mov
push
push
addr16
scas
test
retf
es
aad
add
or
sub
cmp
inc
test
test
adc
adc
mov
xchg
ret
cmp
inc
clc
icebp
add
cmc
(bad)
cmp
or
inc
test
inc
call
jmp
call
imul
addr16
fsubr
mov
arpl
je
cmp
add
jecxz
loope
pop
and
mov
lds
and
sub
popf
jmp
and
ret
mov
retf
fst
pop
xor
sub
test
pop
adc
data16
es
mov
push
pop
mov
xchg
fst
jne
idiv
xchg
int
retf
(bad)
leave
jo
sub
fisttp
nop
mov
adc
mov
fmul
scas
adc
imul
inc
dec
mov
mov
xchg
add
push
lahf
out
punpckhbw
push
stc
je
mov
mov
sub
call
mov
add
jne
pusha
and
push
mov
ins
mov
cmps
add
push
test
push
lahf
inc
call
jg
rol
outs
push
jmp
and
es
add
xor
dec
and
inc
and
movs
jae
fsub
aaa
and
or
and
or
add
dec
mov
or
sub
pop
pop
add
dec
xchg
pop
pusha
xlat
in
mov
pop
xchg
jne
and
jl
jg
into
call
mov
mov
(bad)
inc
imul
and
dec
pop
add
out
add
or
inc
mov
xor
add
pop
pop
nop
sbb
dec
push
fmul
dec
jbe
mov
sub
sbb
nop
dec
js
cld
pop
mov
rcl
out
add
push
ins
add
push
adc
loopne
add
push
nop
xor
jo
clc
add
div
cmp
jnp
lock
mov
out
jnp
sub
jno
shl
cli
aam
xor
or
dec
std
and
xor
or
push
mov
mov
or
nop
cmps
cmp
dec
in
or
inc
and
test
push
mov
jg
stos
pop
xor
mov
or
xor
jp
and
adc
add
popf
pop
adc
das
scas
retf
and
mov
and
mov
xchg
add
and
mov
push
pop
and
pop
or
iret
adc
inc
or
add
inc
or
adc
and
add
mov
(bad)
jmp
sbb
icebp
push
or
dec
adc
sub
sbb
and
sbb
(bad)
sbb
lods
repz
aad
neg
or
inc
int3
or
mov
daa
jl
ret
adc
mov
enter
shl
xor
repz
retf
xchg
je
adc
jmp
adc
fld
(bad)
das
jmp
mov
cmp
jmp
rcl
dec
rol
xchg
repnz
(bad)
sbb
sahf
fst
add
(bad)
les
dec
in
or
test
jge
add
inc
in
mov
xchg
xlat
push
sbb
cmc
rol
push
ret
mov
stos
cmps
cmp
pop
dec
mov
popf
repnz
mov
aad
or
mov
rol
xor
or
inc
shr
sbb
inc
out
mov
sbb
inc
rcr
ins
bound
adc
movs
dec
xchg
pusha
lods
or
jnp
add
scas
or
or
(bad)
fst
mov
or
xor
or
lds
mov
les
ja
rol
xchg
(bad)
mov
sbb
xor
xor
or
add
sub
mov
mov
xor
imul
ret
push
add
call
stos
or
xchg
sub
shl
add
xor
add
adc
loope
mov
dec
or
xor
jnp
pop
fbstp
push
adc
xchg
daa
jo
sti
push
loopne
pop
retf
add
test
ds
fdivr
rcl
cmp
push
add
inc
int
(bad)
mov
pusha
movs
nop
add
outs
push
xchg
cmp
xor
js
cmp
sbb
ds
(bad)
jmp
cmc
pop
jmp
mov
(bad)
fmul
push
sbb
pop
sbb
mov
sub
jmp
sbb
or
pusha
cmps
or
sbb
stos
in
loope
push
add
test
sbb
ja
out
xchg
cmp
push
xor
and
pop
fcom
cs
cmp
loope
or
push
lahf
adc
push
mov
dec
je
int3
sub
or
add
movs
adc
aad
jg
dec
mov
cdq
pusha
into
dec
adc
push
mov
or
adc
cmp
xor
cmp
inc
loopne
mov
xchg
mov
std
je
scas
or
imul
sbb
mov
or
mov
inc
rol
aaa
lock
(bad)
jae
sbb
pusha
call
xchg
sbb
rcl
jmp
lods
adc
imul
inc
sbb
xchg
out
repnz
dec
pop
fisubr
in
inc
inc
pop
mul
sub
iret
pop
cmc
or
dec
(bad)
je
loop
hlt
lods
adc
popf
mov
shl
nop
jg
mov
mov
lods
push
in
add
xor
(bad)
push
adc
aaa
mov
call
xor
push
xchg
retf
xchg
and
mov
sbb
fs
xchg
div
jmp
push
fcomp
sub
leave
sub
and
and
lods
sub
mov
lods
sub
sbb
imul
push
jp
in
mov
xor
test
sub
mov
jo
clc
lea
icebp
dec
jg
xor
pusha
enter
dec
loopne
and
sub
rcl
mov
int
pop
add
inc
jb
rcr
dec
dec
fwait
inc
xchg
fwait
xchg
xchg
out
add
lock
loope
cmp
inc
jne
(bad)
dec
push
xor
scas
pushf
dec
jo
out
sbb
mul
dec
je
in
inc
nop
out
inc
adc
inc
mov
sub
movs
das
sbb
sub
and
adc
mov
and
dec
push
sbb
mov
lock
mov
loop
jbe
mov
push
lods
rcl
imul
rol
(bad)
xchg
(bad)
dec
shl
dec
loopne
ins
icebp
or
xor
inc
ss
xchg
mov
sub
or
jp
lea
leave
push
test
inc
push
test
sbb
(bad)
add
adc
add
jg
xchg
or
mov
push
in
mov
mov
push
add
sbb
inc
mov
sbb
rcr
and
loope
mov
fucom
(bad)
cmp
adc
inc
xor
jo
dec
sbb
push
and
nop
sbb
loopne
retf
push
adc
cmc
sub
iret
cmp
ficomp
sbb
dec
sub
add
cwde
adc
repnz
jmp
dec
sub
jo
and
cwde
call
and
and
push
mov
stos
(bad)
and
and
and
out
inc
ret
or
mov
inc
hlt
(bad)
sbb
shl
clc
gs
push
lods
dec
push
sub
mov
into
sti
rol
inc
cmc
lods
(bad)
sbb
mov
cdq
mov
es
loopne
pop
or
xchg
sub
mov
rcl
(bad)
outs
inc
or
sbb
adc
pop
in
sub
sbb
sub
inc
sahf
out
pop
call
add
cmps
ror
adc
out
mov
fisubr
push
sahf
adc
adc
(bad)
jmp
and
adc
or
stos
mov
adc
or
jnp
out
mov
cmp
(bad)
and
push
add
jnp
inc
push
add
xchg
(bad)
mov
repz
mov
jb
leave
test
adc
inc
out
cwde
jmp
adc
fld
fdivr
xchg
cmps
jns
je
test
cmp
xor
rol
mov
call
out
shr
push
adc
jp
push
push
xchg
jb
aad
loop
ror
jmp
stos
aaa
je
xchg
cwde
cli
or
add
xchg
adc
pop
inc
adc
add
int
pop
mov
mov
push
pop
pop
dec
jecxz
out
dec
ret
add
dec
sbb
and
jmp
pop
call
aas
stos
pop
out
mov
mov
jae
in
enter
adc
fs
pop
mov
jl
or
add
xchg
data16
jmp
add
pop
inc
fdivr
cmp
pop
ja
fistp
or
bound
inc
add
out
jmp
and
repz
cmp
jb
add
std
je
push
add
sub
or
push
and
mov
jns
mov
dec
out
cmp
rcr
test
jg
or
pop
dec
and
and
les
dec
adc
add
sahf
or
sub
cmp
ins
fsub
call
call
ror
jbe
jl
mov
push
popa
sbb
fstp
mov
ins
pop
dec
cmp
xchg
loopne
ret
xor
dec
mov
(bad)
pusha
inc
inc
xor
shr
mov
sbb
adc
cmp
adc
add
add
mov
push
dec
push
or
mov
xor
outs
retf
sbb
scas
add
test
loope
sbb
dec
inc
loopne
xchg
sub
pop
xchg
test
daa
mov
adc
jo
adc
enter
in
fistp
in
adc
pop
sbb
and
inc
cmp
mov
loopne
lods
cmp
xor
sbb
sub
fnstsw
fucomip
adc
or
cdq
int
xor
in
repnz
or
repz
ins
xchg
push
lock
adc
sbb
or
icebp
jo
mov
mov
push
inc
xchg
push
(bad)
cwde
dec
test
clc
aaa
lahf
loopne
or
ret
leave
and
fld
pop
add
adc
adc
add
jne
test
jl
sub
cmp
mov
jmp
xor
addr16
add
xchg
push
push
xor
add
stc
nop
retf
or
inc
mov
inc
mov
xchg
xchg
xchg
ss
adc
cmps
addr16
inc
or
movs
mov
adc
pop
loope
mov
xchg
cmp
ret
sbb
popf
movs
repnz
ins
add
jne
bound
sub
sub
pop
xchg
ja
leave
rcr
inc
clc
clc
and
or
mov
(bad)
adc
push
icebp
lea
sbb
lods
dec
(bad)
cli
mov
shl
inc
mov
and
mov
sbb
xor
in
sbb
push
mov
xchg
cs
out
fwait
test
aaa
sub
xlat
in
pusha
dec
pop
enter
arpl
dec
or
dec
lods
fs
test
inc
imul
ret
and
cmp
ins
sub
and
push
inc
or
adc
mov
add
sti
jbe
movs
push
sbb
pop
pop
pop
jmp
pushf
or
pop
dec
sbb
xor
cli
leave
popaw
jb
hlt
test
popa
fimul
pop
sbb
ror
or
call
add
and
or
cmps
adc
test
and
cdq
pusha
leave
adc
xchg
and
bound
movs
loope
adc
cmc
push
adc
mov
aad
cmc
pop
ins
jno
outs
movs
pusha
pushf
imul
jecxz
and
inc
cmp
and
sub
cmc
mov
xchg
sbb
mov
ret
adc
pop
add
out
pop
pop
mov
add
sbb
ret
and
inc
retf
or
imul
pop
sub
cmps
inc
retf
outs
test
inc
add
pop
sub
and
push
es
xor
pop
and
jp
and
add
and
sahf
inc
xchg
adc
mov
nop
push
mov
inc
call
adc
mov
push
mov
cmc
sub
test
jbe
ja
test
mov
inc
cld
jne
push
and
pop
(bad)
xchg
aam
fidivr
mov
mov
stc
nop
mov
sub
jo
pop
(bad)
out
mov
mov
mov
push
or
mov
add
out
movs
ja
adc
pusha
mov
dec
or
mov
cmp
and
inc
adc
cdq
call
fmul
inc
mov
jp
sub
push
mov
imul
pop
inc
mov
adc
and
jns
inc
inc
cmp
lods
retf
fwait
sub
inc
test
push
outs
or
add
mov
mov
nop
sti
push
mov
xor
xchg
cli
xor
xchg
nop
stc
and
mov
fcmovnu
adc
adc
in
adc
js
inc
mov
or
(bad)
mov
adc
inc
daa
inc
xchg
movs
xchg
jbe
jne
sbb
out
mov
cmps
or
cld
sbb
cmp
rcl
add
cmp
mov
(bad)
sbb
mov
or
add
cli
mov
cs
ss
mov
mov
or
jmp
out
(bad)
imul
pop
and
fsubr
add
inc
push
xor
and
ret
add
aaa
sub
ret
adc
fadd
arpl
lock
in
jae
push
inc
je
adc
sub
imul
mov
sbb
xchg
adc
add
jl
dec
adc
jae
movups
or
jae
jmp
sbb
push
jno
lea
cld
xlat
inc
rcr
add
stc
fiadd
push
add
in
mov
or
pop
fcmovnb
clc
push
ja
repnz
fwait
gs
ins
aad
dec
sbb
mov
dec
xor
test
les
sbb
cmp
xor
fadd
or
shl
mov
add
scas
push
or
inc
gs
dec
aam
and
xor
aaa
test
add
sub
add
push
cmp
or
push
lock
fadd
popa
push
push
push
or
es
mov
pop
add
xor
xchg
push
xchg
dec
lahf
in
ror
es
xchg
sbb
adc
jle
sbb
popa
ins
xor
add
sbb
sbb
add
adc
mov
pop
mov
in
std
(bad)
sbb
enter
pop
cld
add
xlat
clc
sub
enter
push
adc
or
pop
cmp
(bad)
aam
inc
lock
mov
push
in
xchg
and
fcom
push
push
rol
sub
enter
test
adc
rol
daa
and
pop
and
pop
lock
add
test
or
jo
sub
outs
nop
ja
mov
adc
ror
mov
jl
mov
cwde
dec
add
pop
push
cwde
mov
ja
jge
adc
inc
mov
cs
out
faddp
add
inc
movs
add
retf
jle
nop
and
jnp
push
data16
push
push
cmp
or
dec
push
inc
xlat
jo
xchg
ins
inc
or
jae
push
jmp
xchg
test
push
es
lea
call
rol
mov
sub
(bad)
dec
loop
in
adc
or
push
arpl
inc
dec
xchg
and
jo
ret
aam
arpl
ds
cmps
ins
fcmovnbe
and
js
ss
push
mov
fistp
inc
in
fcom
push
mov
adc
sbb
add
mov
icebp
ins
cli
or
js
aas
mov
daa
je
pop
pusha
xor
push
adc
add
jnp
lods
sbb
pop
sub
ret
inc
shl
add
mov
pop
lods
pop
arpl
enter
fadd
dec
dec
enter
or
inc
dec
push
fwait
mov
fsub
push
mov
adc
mov
(bad)
mov
stc
sbb
push
push
jo
test
mov
leave
pop
repnz
push
adc
or
test
mov
sahf
out
cmp
loope
cwde
dec
jo
inc
adc
stos
or
loope
dec
je
je
jns
jae
fild
fisub
adc
and
inc
cmp
out
or
loopne
add
dec
daa
mov
add
push
push
inc
sub
mov
mov
scas
sbb
pusha
jmp
sbb
pop
sbb
lods
inc
call
sbb
push
mov
sbb
sbb
pop
mov
sub
push
inc
jo
test
dec
cs
add
xor
push
ror
imul
mov
mov
jns
and
jns
es
(bad)
pop
xchg
or
dec
and
push
and
sbb
test
add
mov
jno
and
dec
xchg
add
es
cmovns
nop
add
add
pusha
push
xchg
xor
fdivr
mov
enter
cs
and
mov
fsub
xor
add
jle
sbb
inc
ficomp
fcomp
xor
inc
push
or
and
dec
xor
mov
popf
or
add
push
scas
inc
jbe
or
or
add
jne
fist
(bad)
daa
pusha
and
imul
dec
sub
aam
pop
jp
addr16
outs
pop
inc
add
push
inc
ja
dec
inc
pop
cmp
mov
push
into
out
je
mov
sar
push
or
or
loop
jbe
or
mov
imul
push
call
cmp
sub
aaa
sbb
mov
add
add
xchg
movs
outs
sbb
sub
xor
add
dec
inc
(bad)
shr
add
sub
loopne
js
push
test
xchg
lods
mov
mov
adc
and
push
jbe
xor
stc
jne
xor
xor
shr
pop
inc
and
lock
dec
push
dec
in
sub
add
ins
sbb
jne
das
fild
cwde
pop
cmp
fcom
mov
(bad)
xchg
fcmovbe
mov
pop
push
pop
cld
scas
inc
test
xchg
cs
dec
or
xor
inc
and
clc
pop
iret
fsub
mov
lds
lock
pop
cdq
pusha
les
pusha
lock
push
and
add
mov
cld
or
xchg
mov
pusha
push
scas
add
xor
or
outs
add
inc
dec
adc
lods
lock
add
scas
hlt
xchg
cli
fucomp
mov
mov
add
xor
adc
rol
xor
call
(bad)
push
or
(bad)
nop
pop
cmp
addr16
es
dec
movs
int3
imul
call
call
mov
add
jno
daa
cmps
sub
xchg
cs
leave
cmp
add
hlt
clc
cmp
call
mov
and
adc
loopne
(bad)
(bad)
loopne
pop
or
fsubr
add
fcom
sbb
mov
push
xchg
fdivr
ss
jbe
push
mov
fcmovnb
add
mov
inc
push
into
adc
lahf
adc
cwde
std
pop
xor
jbe
sbb
sub
fs
sbb
inc
mov
arpl
sbb
lods
rol
test
mov
mov
cmp
js
push
stos
adc
add
lods
push
call
test
xor
retf
sub
cmps
call
cmp
xchg
mov
pop
fdivr
aad
lock
adc
sbb
mov
sub
in
sbb
push
in
and
sbb
ins
xor
hlt
movs
mov
adc
sbb
daa
arpl
push
xor
cld
sbb
rol
inc
fild
mov
xlat
cmovle
pop
adc
adc
and
cmp
adc
jge
cdq
pop
xor
mov
adc
mov
push
ror
xchg
pop
rcl
out
add
shl
and
add
outs
or
jb
add
sub
and
ret
shl
and
movs
retf
rol
adc
std
cmp
sbb
es
test
sbb
into
mov
inc
xor
div
adc
addr16
add
es
pop
stc
ss
xor
(bad)
pop
ins
inc
inc
(bad)
sbb
and
sub
dec
(bad)
jae
adc
inc
adc
(bad)
ds
sbb
in
pop
imul
fdivr
(bad)
mov
push
inc
or
dec
xor
jo
in
fld
mov
in
xchg
cdq
inc
or
add
aas
jne
adc
add
jmp
cmp
scas
imul
mov
or
sbb
lds
and
and
push
ins
aam
add
xor
(bad)
push
pop
mov
addr16
add
sub
add
cmps
mov
fld
cmp
adc
test
aaa
lock
fld
es
adc
mov
push
jmp
mov
dec
lods
mov
daa
xchg
inc
pop
vrcpss
xor
test
aam
sbb
pop
sub
icebp
dec
pop
les
sub
pop
inc
mov
inc
js
jbe
mov
(bad)
and
or
sub
pusha
xchg
out
loope
imul
bswap
xchg
popa
or
test
pop
xchg
hlt
bt
sbb
pop
add
cwde
out
xlat
dec
imul
movs
sbb
dec
ret
push
mov
cmps
mov
ret
add
sub
repz
(bad)
jl
inc
dec
test
(bad)
mov
inc
fisttp
fucomi
leave
sbb
shl
ret
js
cmp
or
retf
cmp
pop
push
lock
enter
xlat
addps
ficomp
in
push
(bad)
mov
adc
sub
mov
aas
inc
xor
push
push
or
fadd
mov
cs
fwait
sbb
imul
sbb
sub
jne
xor
int3
shl
add
hlt
xchg
cmp
sbb
jno
cwde
bound
das
or
adc
mov
gs
jo
jns
jge
xor
sbb
mov
imul
add
loopne
jmp
mov
jge
(bad)
sbb
push
pop
idiv
loop
jmp
ss
sbb
adc
sahf
(bad)
repnz
imul
lock
fcmove
outs
mov
or
fwait
push
add
or
mov
or
imul
lock
and
jb
dec
or
xor
mov
leave
add
es
lea
push
pop
scas
pop
(bad)
(bad)
cld
leave
movs
ror
cmp
mov
or
xchg
cld
pushf
test
dec
mov
or
push
xor
pop
xor
mov
xlat
sbb
adc
or
test
cdq
test
cmp
mov
ret
inc
or
dec
and
cmp
and
(bad)
(bad)
push
dec
pop
js
adc
push
pop
inc
and
cmp
aad
cmp
lods
iret
dec
cld
je
add
jae
dec
cld
jno
cmc
in
and
or
je
xchg
or
sub
cld
or
or
sbb
dec
mov
iret
mov
sbb
or
sub
sbb
rcl
popa
push
jg
mov
in
jmp
loop
mov
js
mov
pcmpgtb
jmp
int3
sbb
and
or
mov
add
push
sbb
add
inc
jbe
mov
adc
inc
pop
inc
pop
or
mov
aaa
loop
cmp
fisttp
dec
or
and
int3
(bad)
(bad)
mov
inc
cmp
jne
mov
imul
jmp
and
test
imul
sbb
pop
adc
push
ja
xchg
push
in
or
cmps
add
jg
call
xchg
test
mov
xchg
adc
fnclex
sbb
outs
test
push
pop
test
push
(bad)
ss
and
jnp
push
test
xlat
cmp
loope
mov
mov
sub
test
xor
jnp
lea
ins
shl
test
or
and
mov
in
sbb
lock
loope
cwde
jmp
aad
sub
lods
pop
lds
push
fdiv
mov
jno
xor
cmp
jnp
xchg
ret
inc
fmul
rol
sub
(bad)
iret
nop
mov
pop
ret
push
add
mov
adc
pop
jmp
enter
pop
int3
pop
lock
shl
add
cld
or
add
(bad)
js
lahf
stos
and
adc
les
mov
pop
das
mov
neg
imul
aas
dec
jmp
inc
xor
ficom
ja
sub
inc
dec
push
ins
or
or
xchg
add
or
pop
add
in
ret
aam
push
mov
imul
retf
inc
xor
stos
cmp
and
inc
cmp
xchg
dec
cmp
int
movs
inc
pop
(bad)
sbb
fbld
push
mov
jne
add
add
add
xor
inc
add
fld
add
sub
sub
outs
sbb
and
lock
sub
sub
cmp
and
sbb
jmp
mov
mov
add
pushf
push
mov
enter
data16
sub
mov
add
or
jecxz
xchg
out
cmp
call
in
rcl
push
push
icebp
jb
pop
or
and
test
push
shl
fadd
inc
push
es
xor
push
cmp
jnp
outs
push
push
adc
aaa
add
and
jg
test
inc
add
push
ficomp
add
clc
push
ret
xor
les
mov
and
jmp
lods
(bad)
add
push
call
jecxz
loope
das
lods
xlat
cld
dec
dec
adc
mov
push
add
loope
xlat
add
pop
test
in
jg
mov
addr16
cmp
sbb
pusha
push
and
jl
mov
pop
test
or
sbb
mov
sbb
cmp
es
sbb
mov
xchg
add
cmp
pop
hlt
inc
add
leave
dec
ins
pop
and
sub
pop
jno
pushf
sbb
dec
pop
cmp
push
dec
dec
jmp
ss
and
push
jo
daa
mov
dec
inc
loope
sbb
mov
push
loop
(bad)
mov
xor
and
lods
in
mov
or
cli
jb
or
packuswb
mov
sbb
(bad)
inc
xor
(bad)
aaa
xor
xchg
shr
cmps
mul
or
invd
(bad)
loopne
add
test
repnz
pop
push
adc
mov
(bad)
in
fbld
fistp
jmp
push
mov
jmp
inc
lock
test
lds
or
xor
mov
xchg
push
movs
mov
push
adc
mov
in
cmp
sub
inc
mov
(bad)
popf
aad
jnp
sbb
int
(bad)
or
lahf
xor
sbb
out
hlt
or
test
ror
ror
int3
add
mov
dec
ror
rol
sbb
xchg
pop
mov
dec
scas
fs
clc
cmp
sub
mov
mov
dec
jmp
call
xlat
pop
xchg
and
mov
sbb
jg
xor
ins
xor
in
adc
push
add
ficom
adc
rcr
aam
add
pop
and
aam
jp
test
inc
mov
xor
shl
or
pop
cld
jmp
call
push
push
test
sub
jne
xchg
inc
jle
popa
or
movs
xor
inc
xor
or
sub
cmp
jle
fbld
add
push
push
cmp
pop
xchg
sbb
push
out
adc
cld
cmp
fwait
arpl
enter
test
or
test
xor
shr
arpl
add
fsub
es
cmps
fs
fadd
cmp
dec
jmp
sbb
pop
push
cmp
enter
adc
or
push
push
mov
clc
dec
mov
sbb
pop
cmp
jb
test
in
clc
push
xchg
jl
je
inc
push
sar
mov
rcl
cmp
mov
lahf
ret
bnd
sub
mul
pop
inc
cmps
shr
push
sbb
adc
das
mov
add
dec
pop
push
sub
movs
sub
or
and
add
jecxz
dec
add
out
xor
cmps
sbb
sbb
jne
mov
push
das
add
sbb
add
mov
and
dec
pusha
or
push
in
inc
jecxz
aas
arpl
jbe
les
cmp
sub
jg
cwde
(bad)
and
cmp
mov
cmp
clc
jl
xchg
sub
pop
mov
sbb
or
lahf
mov
cld
mov
dec
jge
neg
cmp
jg
xor
add
and
add
cmp
cmps
fild
or
jle
mov
ret
push
add
lahf
add
(bad)
loopne
imul
inc
dec
cmp
lods
adc
dec
add
add
mov
or
(bad)
jle
neg
dec
cmp
sub
aaa
mov
jne
pop
xchg
data16
or
pop
mov
and
or
jne
jmp
jmp
sbb
mov
and
fild
add
and
fwait
movs
jge
add
inc
and
shl
aas
jle
adc
or
sti
or
jg
mov
ds
fild
xchg
sbb
pop
fwait
add
(bad)
mov
add
and
or
outs
sbb
pop
add
cmp
sub
dec
push
add
cld
or
inc
mov
cmp
push
add
xor
push
mov
aam
mov
mov
sbb
adc
out
jmp
xchg
add
aam
mov
push
and
mov
sbb
push
dec
test
adc
and
or
and
inc
or
paddsw
xor
sbb
add
in
rcl
sub
lock
in
mov
xchg
stc
and
mov
fcomp
mov
push
jo
clc
sub
test
js
jno
lea
call
inc
aam
cmp
sbb
sub
sbb
stos
rcl
popa
das
outs
ins
imul
call
pop
xor
xchg
push
pop
scas
inc
jne
mov
lock
(bad)
into
mov
pusha
adc
push
mov
add
jmp
inc
cmc
add
xchg
mov
push
inc
lock
jge
pop
cmp
sbb
add
leave
retf
lods
or
push
xchg
imul
cmp
mov
xor
sbb
mov
pop
cwde
xchg
push
pop
fcom
lods
jg
call
outs
adc
dec
psubq
cs
adc
cmp
pop
test
xchg
jbe
ret
cmp
or
pop
or
mov
daa
icebp
sub
add
mov
scas
xchg
push
ins
out
push
shr
test
xor
inc
xor
dec
je
mov
cmps
or
cmp
push
or
call
nop
test
push
push
inc
lahf
fdivr
clc
xor
lea
arpl
sti
call
mov
push
pop
je
add
jae
nop
test
push
je
add
inc
push
mov
icebp
and
je
push
push
lds
push
mov
sbb
xlat
cmps
dec
inc
mov
push
dec
mov
mov
mov
cmps
xor
push
repnz
mov
inc
call
lock
mov
push
stos
pusha
popf
push
call
dec
pop
xor
jmp
out
add
adc
in
pop
repz
xchg
add
int
ss
xchg
lods
mov
std
push
and
dec
imul
adc
sahf
rcr
jnp
or
inc
sub
bound
dec
add
fadd
adc
dec
retf
and
clc
fadd
sub
in
leave
xor
push
stos
loope
push
adc
sahf
lods
sbb
pop
push
pop
sbb
or
clc
gs
cmp
bound
xchg
mov
fild
adc
test
sub
loopne
sub
jecxz
mov
jmp
ficom
and
xchg
dec
mov
sbb
dec
xchg
xor
mov
xchg
pop
mov
movs
lods
mov
lock
or
mov
sub
push
sar
push
add
ss
shr
call
adc
cmp
inc
fs
sti
cmp
loopne
jmp
sub
sub
movs
or
mov
mov
adc
sbb
sbb
xor
(bad)
(bad)
retf
lods
sub
js
mov
and
enter
gs
jo
mov
mov
pushf
bound
jne
rol
or
add
add
pop
mov
std
(bad)
add
inc
rol
lods
or
sbb
fistp
out
sbb
inc
mov
or
retf
leave
and
xor
lods
mov
jmp
jg
pop
sbb
movs
pop
(bad)
pusha
add
in
inc
repnz
lock
xor
mov
cmp
(bad)
jle
and
mov
cmp
nop
inc
sbb
mov
scas
pushf
cmp
sub
sbb
dec
adc
cmp
adc
cmps
les
es
xchg
mov
and
cmp
mov
pop
mov
shr
mov
or
das
push
enter
sub
jns
sbb
add
mov
or
cmp
dec
cmp
jge
loopne
mov
pop
mov
cmp
in
inc
call
sbb
xor
or
rcr
sub
fimul
sub
ss
leave
mov
lods
sbb
sbb
mov
movs
jnp
repz
pushf
pushf
call
add
sbb
jns
xchg
jns
pop
sbb
test
xor
cmp
jns
test
or
push
mov
add
adc
ds
dec
adc
xor
jne
pop
xlat
sahf
inc
cli
push
jne
push
cld
add
addr16
test
or
xor
arpl
js
je
std
pusha
jnp
fcmovnu
push
jbe
xor
add
ror
es
in
pop
jne
outs
ret
jnp
outs
arpl
scas
adc
sub
test
cli
add
test
or
inc
fwait
add
test
iret
sbb
mov
or
add
adc
mov
cwde
and
sub
or
push
nop
outs
mov
sub
add
test
adc
or
push
fnstenv
ret
mul
es
adc
mov
int
pop
rcl
dec
sbb
dec
pop
cmp
(bad)
not
or
or
sub
movs
cmp
jg
daa
xchg
sbb
bound
push
sub
clc
test
outs
sub
fs
scas
cdq
std
push
call
mov
fsubp
or
and
not
cwde
lahf
add
(bad)
sub
and
dec
dec
add
push
xchg
or
push
cmp
or
pop
sub
test
and
sub
or
xor
gs
push
jge
mov
cmp
test
sub
adc
push
or
mov
xor
or
or
mov
adc
jl
cli
xchg
or
js
push
and
dec
xchg
add
mov
push
xor
je
cmp
sahf
inc
inc
xchg
aaa
aam
or
loopne
mov
pop
push
aas
pop
sbb
mov
daa
add
xchg
xchg
sahf
mov
sub
jl
inc
mov
adc
js
test
mov
test
add
pop
mov
ins
jmp
dec
mov
fld
adc
movs
popa
xlat
jo
inc
push
mov
les
jne
or
aas
or
aaa
mov
xchg
adc
sub
loope
adc
push
fwait
inc
aad
adc
scas
sbb
jae
mov
loop
jmp
pop
pushf
bound
cmp
xor
xchg
or
arpl
movs
jae
scas
inc
and
pop
mov
push
add
pop
in
pusha
cld
scas
jae
adc
pop
xor
mul
fld
or
mov
cwde
push
data16
ja
mov
xchg
rcr
js
xor
push
or
cmp
je
sbb
ins
push
(bad)
mov
and
fild
inc
cmps
lahf
jmp
sbb
jne
sbb
jl
(bad)
and
dec
dec
sub
out
(bad)
pop
jle
ins
adc
outs
fsub
adc
add
sub
or
inc
inc
pop
pop
sbb
or
and
lods
ins
pop
dec
call
pop
and
jno
mov
jnp
sub
sar
in
jmp
push
push
dec
push
je
adc
loopne
inc
and
ins
and
mov
xchg
(bad)
mov
and
push
adc
xchg
dec
ins
add
fidiv
dec
pop
and
pop
mov
dec
or
inc
lods
jno
(bad)
push
sub
sbb
adc
adc
pop
or
movs
mov
rcpps
stos
cmc
and
jp
ins
adc
mov
mov
inc
mov
add
clc
lahf
jae
or
outs
movs
mov
jle
jb
nop
shl
mov
jecxz
sbb
sbb
loopne
lsl
xchg
add
ss
cwde
enter
mov
jb
ror
cmp
in
mov
jnp
push
test
(bad)
call
ror
mov
sahf
jl
push
shl
pop
xchg
aam
mov
push
or
or
sbb
xchg
sbb
not
sub
and
sbb
jnp
ins
and
and
movaps
add
in
mov
mov
mov
stc
pusha
xor
test
dec
pop
dec
push
xor
sbb
inc
sbb
or
cwde
and
push
adc
mov
inc
and
por
lods
and
and
mov
sbb
lea
dec
push
inc
enter
lds
mov
jge
or
aaa
inc
test
lods
or
pusha
cdq
leave
mov
xor
jnp
repz
jno
daa
mov
xchg
or
mov
cmp
dec
mul
fild
add
cmp
popa
aas
xchg
in
dec
pop
jmp
add
das
dec
xchg
nop
xlat
jle
into
adc
stos
adc
daa
ss
int3
push
pop
pop
fcmovu
and
and
pop
push
out
add
frstor
mov
push
pop
(bad)
mov
dec
and
push
call
and
mov
xlat
sub
arpl
add
dec
fisttp
imul
mov
push
mov
mov
xchg
fsubrp
imul
push
push
dec
das
inc
push
in
pusha
push
lea
cld
dec
popa
add
rcr
test
or
xchg
mov
movd
aam
psubusb
js
loopne
pop
(bad)
or
clc
push
xchg
inc
mov
xchg
push
xchg
ja
or
or
rcr
sub
or
inc
stos
popf
out
dec
outs
and
push
test
mov
add
push
push
cwde
sub
xchg
mov
iret
add
or
movs
mov
and
iret
dec
mov
cdq
and
inc
xchg
and
mov
lahf
pop
add
fnstsw
pop
sbb
or
xchg
rcr
cmp
test
or
mov
cmp
xor
sbb
fs
and
xor
or
dec
cmps
cmp
pop
cmp
pop
pop
push
mov
inc
pop
ds
mov
adc
outs
and
pop
and
into
jmp
retf
bound
mov
je
fs
imul
ins
cmp
dec
mov
and
sub
mov
and
ss
cmp
sbb
dec
out
push
test
or
xlat
outs
xor
nop
jecxz
outs
repnz
or
xchg
retf
or
pushf
retf
jae
mov
jmp
sti
pop
dec
fisubr
pushf
imul
outs
das
mov
lds
movs
out
outs
or
xor
pop
aas
lods
jnp
push
inc
cli
mov
pop
hlt
mov
clc
mov
push
sar
and
dec
out
push
push
sub
add
dec
cmps
daa
shr
push
xor
and
pop
add
(bad)
sub
xchg
jl
js
push
adc
movs
or
or
bound
or
dec
sub
xor
push
js
push
hlt
sub
stc
pop
test
xor
sub
adc
hlt
add
cs
push
mov
sub
xor
jne
loope
xor
sub
retf
adc
and
ror
andnps
inc
dec
cdq
mov
mov
sub
mov
int3
js
mov
add
int
and
(bad)
mov
pusha
sbb
push
mov
jge
jg
add
inc
push
inc
inc
add
movs
mov
rol
mov
fimul
out
mov
or
dec
add
rol
mov
xchg
or
icebp
fcmovbe
das
jne
push
fisttp
pusha
shr
add
enter
in
test
sub
sbb
dec
mov
xchg
cmp
xor
mov
sahf
rol
aaa
cmp
loop
jl
dec
cmp
inc
add
mov
out
add
sbb
(bad)
imul
leave
xor
imul
fiadd
push
test
mov
lods
sti
push
mov
sub
and
push
and
mov
fsubr
or
lods
(bad)
clc
lahf
inc
dec
das
mov
fistp
cmp
dec
and
adc
and
das
mov
inc
inc
lds
pop
pop
test
adc
jle
scas
inc
mov
push
pop
cmp
adc
je
clc
cs
dec
call
es
lods
ins
cmp
jge
mov
inc
ins
or
sti
imul
cmp
out
cmp
jne
push
adc
xchg
xlat
push
cmp
push
pushf
cs
mov
sbb
inc
mov
aam
push
into
jl
ins
iret
xchg
mov
adc
ins
xchg
lahf
cmp
jnp
sub
jmp
push
stos
push
or
push
jb
mov
mov
hlt
cmps
xchg
cld
shl
inc
pop
pushf
retf
inc
leave
sub
adc
pop
fwait
enter
xor
sbb
inc
mov
cmps
inc
rcr
sub
push
scas
xchg
mov
clc
fdivr
stc
xchg
xor
daa
jl
adc
and
data16
adc
jno
mov
sub
add
or
sub
rol
mov
dec
pop
add
arpl
cmp
or
and
pop
xor
mov
add
inc
inc
stos
imul
xchg
(bad)
and
push
sub
cmps
dec
fst
shl
pop
xchg
and
fnsave
mov
test
lea
shl
dec
and
inc
loopne
pcmpgtb
cmp
mov
das
jmp
cld
push
xor
jge
lods
sub
mov
and
pop
ret
mov
fimul
mov
add
add
and
xchg
push
movs
fild
xor
sbb
scas
lods
(bad)
push
jo
xor
mov
sub
mov
and
mov
ds
add
pop
scas
add
inc
mov
mov
mov
mov
mov
add
and
or
push
mov
mov
jge
lea
pop
dec
sub
fstp
adc
arpl
mov
sbb
test
and
jmp
add
in
push
(bad)
mov
fsub
sbb
pop
push
dec
rol
idiv
hlt
add
mov
hlt
jnp
ret
fstp
dec
imul
sbb
dec
mov
pop
mov
shl
js
add
rcl
mov
imul
or
lock
stc
inc
nop
cs
sub
sbb
pushf
jo
add
dec
xor
mov
or
cmp
fcomp
shl
push
movs
or
dec
popf
dec
and
dec
cmp
pop
sub
das
in
hlt
outs
push
and
push
mov
pop
ins
(bad)
cmp
push
mov
mov
dec
cmp
jmp
and
loop
and
dec
jnp
add
enter
sub
mov
and
add
push
rol
cld
popa
adc
arpl
test
sahf
xchg
daa
mov
jns
shr
fstp
cmp
jae
sub
rcr
jns
push
shr
push
cmp
mov
dec
lock
cmp
inc
mov
fdivp
xor
mov
dec
int3
es
jmp
push
std
enter
int3
and
push
or
cmp
(bad)
lods
or
push
pop
and
adc
int3
hlt
dec
call
jmp
rcr
pop
push
rol
xchg
imul
retf
or
xor
jbe
jge
jmp
imul
call
fldenv
xor
jne
gs
pop
cmp
push
mov
or
and
and
push
and
mov
and
add
xchg
ret
cmps
pop
cmc
sub
pusha
mov
out
ret
jae
and
xchg
call
dec
fwait
inc
mov
push
adc
aad
in
ins
iret
inc
in
mov
inc
jbe
imul
jns
inc
mov
cmp
ror
add
push
mov
ds
sub
jae
cld
add
xchg
je
fsubr
movs
inc
pop
inc
xor
xchg
daa
retf
and
popa
cmc
push
popa
mov
test
mov
cld
loope
dec
movs
adc
js
mov
loopne
fcomp
jno
and
fadd
sbb
xor
push
sbb
jg
jecxz
jmp
pop
arpl
jecxz
imul
cs
imul
les
call
loopne
mov
loopne
adc
mov
repnz
fs
dec
arpl
or
cwde
cmp
stos
pusha
or
ins
ins
or
or
jmp
jl
icebp
sub
mov
and
mov
pop
xchg
and
dec
fcmovbe
xor
aam
in
fcom
shl
pusha
cmp
nop
movs
or
call
add
dec
call
or
mov
mov
push
in
rcl
jbe
sbb
cmp
nop
(bad)
fdivr
mov
jle
mov
cmp
sbb
imul
popa
mov
or
jne
test
cmp
dec
ja
push
pop
add
int
int3
test
pop
ja
enter
popa
inc
cld
fadd
push
push
xchg
popa
or
push
retf
dec
pushw
add
mov
(bad)
loope
cmp
push
jne
in
add
nop
ror
dec
pop
jo
gs
sbb
ficomp
loopne
cmp
sbb
lds
and
lock
retf
lock
pop
sub
sbb
pop
cld
test
xor
mov
xor
fsubr
inc
enter
(bad)
adc
ja
pop
aas
push
cld
mov
repz
dec
sub
jae
mov
lahf
cmp
ret
mov
jmp
out
adc
sbb
in
nop
(bad)
stc
les
cmp
arpl
or
daa
xchg
xchg
pop
ins
dec
push
jno
sbb
xor
sub
mov
fdivr
and
add
movzx
inc
sub
sar
mov
jae
or
sar
sub
jp
adc
outs
mov
mov
or
call
pusha
push
jmp
mov
mov
pusha
and
stos
jmp
and
xchg
popa
push
sub
imul
lock
in
data16
cs
add
gs
nop
pushf
test
ret
and
and
adc
push
les
push
ja
ins
rcr
sub
jns
sub
push
test
in
call
dec
arpl
adc
cmc
or
add
mov
push
mov
xchg
pmulhw
mov
in
dec
xor
pop
mov
int3
ins
and
ret
jnp
and
mov
int
inc
bound
mov
les
dec
jmp
and
push
sub
add
scas
sbb
xchg
push
push
test
ret
sbb
cwde
sbb
test
xor
sbb
iret
cdq
cs
les
xor
cmp
or
ds
add
mov
or
xlat
xchg
or
add
loope
fist
add
pop
js
mov
push
scas
or
inc
js
adc
add
inc
outs
dec
and
or
fmul
xchg
fcom
and
ds
pop
pusha
nop
inc
cli
shl
dec
imul
add
dec
rol
mov
pop
enter
adc
mov
nop
push
adc
aaa
push
pop
mov
gs
or
mov
mov
dec
add
xadd
je
sbb
pop
jne
aam
clc
xor
mov
test
push
mov
jns
andps
pusha
xor
dec
pop
pop
sub
add
sbb
(bad)
add
add
or
cmp
rcl
and
sub
add
aam
(bad)
fdiv
add
shl
inc
dec
sbb
jne
ins
inc
es
movs
jns
mov
add
inc
adc
xchg
pop
pop
dec
jecxz
pusha
jmp
add
pushf
push
add
xchg
push
mov
dec
or
iret
add
dec
sbb
xchg
jg
dec
mov
xor
dec
(bad)
icebp
cmp
pop
jecxz
in
sub
adc
inc
and
mov
test
arpl
outs
arpl
jl
test
pop
jno
aas
or
cdq
mov
inc
bound
mov
jle
xor
or
mov
push
xchg
adc
call
aam
or
cmps
push
stos
cmc
mov
adc
cwde
dec
popa
les
mov
std
mov
jg
dec
dec
mov
test
dec
xchg
ins
imul
ins
bound
push
add
or
je
push
add
rdtsc
xchg
ins
shl
nop
xchg
add
mov
je
dec
sub
and
jmp
outs
aaa
sbb
sub
js
xor
cmp
imul
(bad)
sub
adc
ror
scas
adc
and
mov
loopne
test
xor
sub
and
adc
invd
pop
adc
sahf
xchg
ins
pop
adc
les
dec
sbb
(bad)
mov
xchg
add
or
fwait
ins
movs
push
pop
sub
jne
aaa
mov
pop
jg
mov
cwde
test
sub
test
pop
pushf
sub
clc
popf
add
xchg
imul
enter
lea
jbe
jl
cwde
retf
rcl
in
push
pop
push
dec
je
mov
imul
and
push
pop
fs
and
jbe
inc
movs
or
mov
dec
push
mov
and
sub
and
ficom
adc
sahf
dec
cmp
aaa
sub
mov
ret
in
inc
call
stos
nop
xor
ror
pop
mov
pop
mov
adc
xchg
push
dec
lods
pusha
movs
jo
jle
adc
sub
leave
add
jo
add
pop
dec
cmp
mov
sbb
daa
imul
stos
mov
and
cli
sbb
rep
clc
retf
inc
add
(bad)
scas
mov
cmp
inc
out
ror
stos
dec
cmps
rcl
inc
cmp
inc
mov
sub
ficom
test
push
and
arpl
inc
int3
shr
scas
rcl
retf
stos
dec
loopne
and
adc
add
cmp
popa
xor
mov
xor
ja
xor
dec
sar
(bad)
sahf
mov
fist
div
or
(bad)
adc
jecxz
sub
pusha
aam
add
inc
inc
adc
pop
lods
xor
adc
js
mov
ss
cld
push
adc
sbb
call
or
inc
sub
addr16
dec
or
int
push
imul
dec
movs
push
imul
scas
jne
loope
sub
mov
movs
outs
jmp
lea
pop
adc
sub
je
scas
jmp
sub
(bad)
dec
cmp
inc
scas
or
and
and
adc
ret
aas
sub
daa
in
push
push
inc
loopne
or
or
int3
xor
fs
sub
or
dec
in
pop
inc
sbb
xor
mov
pop
jo
xchg
xchg
add
test
adc
adc
out
(bad)
and
fistp
lahf
push
adc
scas
arpl
dec
bound
or
add
dec
and
push
(bad)
push
cmp
fwait
sbb
adc
(bad)
xchg
rol
mov
mov
nop
adc
outs
bound
xor
push
popa
inc
es
fisubr
dec
or
repz
cld
cmp
je
inc
adc
mov
sub
adc
jnp
pop
dec
push
clc
outs
mov
rcl
shr
ror
out
mov
or
imul
adc
pop
inc
xor
enter
aaa
xchg
(bad)
std
lds
lds
add
adc
mov
or
ss
push
adc
mov
push
and
daa
mov
repz
xor
mov
adc
jl
or
(bad)
int3
push
or
(bad)
enter
dec
dec
js
retf
ret
mov
retf
add
xlat
inc
popf
or
or
jne
fdiv
cmp
xor
inc
mov
dec
cmp
or
adc
mov
call
and
push
dec
xor
shl
push
ja
inc
cmp
add
js
fidivr
pop
repz
mov
outs
sbb
leave
add
adc
or
lahf
jmp
enter
aam
jg
inc
add
jg
data16
add
ins
fisttp
inc
inc
je
push
jo
or
cmp
push
dec
movs
jns
inc
push
jp
jl
test
dec
xor
sbb
pop
jmp
jb
xchg
jl
dec
add
arpl
mov
outs
hlt
shl
or
xor
inc
add
and
push
mov
(bad)
in
loope
sbb
sbb
add
sub
ja
inc
cs
dec
cmp
dec
mov
mov
jnp
dec
imul
daa
jne
pop
nop
sbb
xchg
inc
or
popf
rol
xchg
cmp
pusha
xacquire
(bad)
imul
jle
scas
test
mov
fs
pop
xchg
lods
pop
popf
sbb
sbb
adc
add
adc
jne
xchg
retf
xchg
or
xchg
sub
cmp
lds
fnstsw
mov
or
cmp
pop
jmp
or
ins
push
pop
lock
fisttp
sbb
mov
mov
es
mov
cli
out
retf
test
icebp
jbe
or
sbb
adc
adc
imul
xchg
mov
pop
add
pop
xlat
fdiv
lea
push
mov
or
movs
or
mov
loopne
jmp
mov
clc
frstor
fild
loope
dec
mov
call
push
mov
push
enter
mov
pop
sub
add
inc
in
add
mov
add
mov
pop
push
add
add
arpl
add
dec
loope
std
jnp
test
or
and
add
add
dec
add
sbb
mov
jo
inc
and
int
add
adc
adc
sbb
sbb
pop
rep
in
inc
mov
or
sbb
pop
or
jmp
xchg
xchg
or
into
dec
ins
ins
es
pushf
pusha
mov
sbb
inc
push
lock
sbb
xchg
jne
sbb
scas
pop
addr16
in
push
xchg
sub
mov
jmp
cmp
inc
adc
pusha
xchg
dec
ds
fimul
adc
ret
pop
xchg
pop
cmps
sti
inc
and
pusha
adc
(bad)
xchg
fs
pop
jno
popa
loopne
pop
outs
in
int
adc
inc
and
add
xlat
inc
add
add
mov
pop
daa
pop
mov
lock
cs
fs
mov
popf
enter
and
pop
js
addr16
or
test
aas
mov
or
or
inc
add
and
shl
shl
or
sti
adc
outs
push
lea
jl
in
mov
jmp
bound
mov
add
test
retf
(bad)
sbb
mov
rol
cmps
dec
jno
sub
pop
push
jl
dec
push
sbb
pusha
add
dec
dec
xchg
xchg
jl
pop
fldcw
adc
add
sub
sbb
add
fist
mov
mov
adc
js
test
clc
push
jge
pop
inc
mul
push
sub
push
mov
and
data16
fnstenv
mov
push
mov
sbb
and
jmp
dec
sub
mov
dec
inc
test
mov
push
cmc
or
out
or
test
push
mov
pop
pop
aaa
in
cmps
jbe
clc
and
pop
cli
add
and
call
add
fisttp
lock
fwait
sbb
sub
jo
rcl
test
ja
xor
inc
and
ret
mov
xchg
lea
adc
iret
aas
cld
mov
enter
push
cwde
sub
xor
enter
adc
cwde
and
ss
mov
aas
arpl
mov
outs
add
dec
sub
mov
jnp
and
jno
je
mov
push
adc
pop
mov
pop
add
cmc
mov
loope
jae
aam
ss
xchg
mov
add
mov
fucomp
add
sbb
adc
xlat
adc
add
and
(bad)
pop
pop
mov
ret
cmp
mov
add
jbe
add
test
mov
loopne
out
cli
or
sbb
out
inc
adc
inc
adc
adc
(bad)
pushf
mov
sub
fstp
(bad)
fdiv
xchg
dec
or
xor
cld
add
lock
sbb
inc
ds
mov
ret
xchg
xor
(bad)
inc
fcos
jnp
jbe
(bad)
push
inc
inc
ror
mov
aad
inc
mov
mov
inc
cdq
jne
fstp
xlat
sbb
sub
sub
inc
loope
loop
int3
or
sahf
push
lahf
mov
pop
addr16
inc
popf
xchg
xor
cmp
inc
mov
mov
fwait
pop
adc
xchg
jns
lods
sub
xchg
dec
sahf
retf
inc
mov
test
sbb
pop
sub
pop
inc
loopne
xor
mov
mov
or
movs
pop
jl
or
stos
cmp
and
int3
and
and
jo
push
cmp
loopne
add
push
cmp
outs
sub
xchg
sub
cmp
mov
fsubr
daa
mov
into
sahf
sub
js
fs
cmp
pop
xchg
mov
scas
or
sbb
inc
es
adc
add
pop
mov
inc
mov
add
nop
or
push
loope
adc
pop
cmps
loopne
in
add
rol
xor
push
bound
xor
sub
adc
jp
sbb
nop
imul
shl
icebp
or
das
arpl
add
aaa
jns
adc
xor
daa
adc
xor
jl
jp
push
xchg
push
cld
aaa
sub
mov
and
and
pop
test
pop
pop
call
and
je
push
cmps
out
xor
sbb
xchg
add
push
daa
xor
js
clc
sar
push
inc
xor
pop
push
push
add
hlt
xor
std
adc
or
movlps
mov
cwde
xor
outs
(bad)
mov
xchg
add
stos
sti
cmp
dec
arpl
dec
int
push
adc
mov
push
jmp
jg
push
icebp
xchg
mov
cmp
add
inc
inc
push
sti
inc
cmp
pop
and
or
pop
cdq
mov
xor
jge
lahf
push
adc
mov
jmp
adc
sub
lea
add
aam
bound
sub
add
and
mov
call
jecxz
adc
ins
or
push
daa
mov
shl
into
sub
in
test
and
out
(bad)
and
or
enter
pop
ins
sbb
pop
pop
mov
mov
cmps
enter
xchg
mov
add
mov
mov
ret
bndldx
adc
scas
or
sub
or
sbb
inc
dec
into
push
outs
test
(bad)
jle
pop
stos
pop
call
jne
or
fsubr
adc
push
out
jp
push
xor
stos
ins
call
movs
rcr
dec
xchg
div
sar
ins
and
push
loop
mov
mov
imul
(bad)
fld
pop
jp
leave
fimul
fnstenv
dec
rcr
leave
inc
push
and
sub
bsf
add
(bad)
div
mov
inc
xchg
test
sar
fsubr
fisttp
movs
out
push
out
aad
mov
mov
daa
sbb
adc
mov
jl
dec
add
jnp
test
int
mov
(bad)
inc
push
inc
pop
fsubr
div
sbb
into
rol
sbb
cmp
xor
or
xor
pop
push
nop
test
cmp
pop
fistp
in
jno
pop
or
in
jg
jnp
add
cmp
adc
mov
xor
sub
dec
stc
add
jmp
dec
ret
push
test
jp
xchg
sbb
clc
daa
pop
rcr
ins
cmp
and
jo
test
mov
pop
pop
inc
cmps
xchg
cmp
dec
fild
push
jns
bound
xchg
fsubr
jno
xor
mov
jl
xor
jle
movs
dec
sub
jb
shr
retf
ins
and
cmp
inc
xor
add
(bad)
mov
jg
icebp
push
inc
aas
cmps
add
push
push
sahf
pusha
inc
dec
test
or
xor
call
gs
jb
mov
add
or
aaa
and
inc
or
cvtdq2ps
stos
es
repz
movs
adc
inc
cdq
xor
fwait
mov
jg
add
pop
mov
(bad)
sbb
dec
add
jle
inc
xor
enter
dec
es
dec
push
pop
pop
push
adc
inc
mov
clc
inc
adc
xchg
push
sub
lods
mov
push
and
or
inc
adc
mov
adc
ret
and
or
dec
movs
jl
pop
lock
addr16
sbb
sub
jns
add
push
in
arpl
jno
outs
ss
nop
(bad)
movs
leave
add
ja
lea
or
and
adc
test
xchg
fild
pusha
enter
sub
push
or
add
sbb
add
(bad)
mov
mov
xchg
sbb
adc
push
mov
xchg
aam
es
inc
les
inc
mov
mov
test
jns
movs
mov
or
dec
or
outs
call
or
add
xor
es
or
xchg
mov
pop
loopne
pop
adc
mov
shr
and
xchg
ins
jmp
xor
sbb
out
(bad)
jecxz
mov
retf
dec
adc
mov
(bad)
pusha
imul
pop
add
inc
out
mov
or
add
dec
mov
pop
sub
enter
add
mov
pop
jnp
or
dec
xchg
cmp
or
pop
ins
mov
inc
sbb
xlat
add
ret
pop
imul
mov
jnp
retf
add
pop
xor
test
repz
les
scas
pop
pop
bound
daa
call
mov
fdivr
push
pop
push
or
inc
xchg
cmp
adc
cld
dec
enter
add
repnz
cmps
imul
pop
adc
inc
in
fsubr
ins
test
pop
or
imul
outs
add
sub
push
mov
(bad)
mov
mov
add
(bad)
lea
mov
in
push
dec
sbb
shr
push
sub
jp
pusha
jne
out
fdivr
push
cli
xchg
scas
or
push
mov
add
cmps
pop
enter
call
mov
movs
add
adc
fild
in
into
dec
mov
dec
imul
mov
jle
and
dec
add
scas
into
retf
cli
call
or
xor
adc
mov
popa
push
inc
jl
pusha
xor
inc
scas
lods
mov
imul
cli
or
outs
push
mov
jge
jbe
fwait
pop
sbb
clc
push
dec
fisubr
jmp
or
jmp
push
jmp
add
xor
sbb
mov
sbb
lock
ficomp
cmp
sbb
fcmove
and
clc
rol
jbe
out
dec
je
ret
inc
lock
xor
(bad)
mov
inc
jmp
mov
mov
add
imul
push
test
mov
out
push
add
adc
or
pop
loopne
add
mov
add
adc
adc
push
adc
add
sbb
retf
out
(bad)
or
xlat
adc
inc
jge
icebp
aas
and
ror
sub
xor
mov
or
adc
adc
push
add
or
jb
and
pop
sub
pop
xor
outs
or
sub
and
fs
nop
dec
outs
xchg
imul
and
xchg
cmp
sub
movs
shl
and
dec
cmp
ins
aaa
jns
(bad)
mov
push
cmps
ror
jo
jnp
and
imul
dec
movs
test
fcom
xchg
push
jns
mov
or
add
sbb
or
cld
mov
xchg
es
fist
mov
push
jns
cld
ins
sbb
dec
jl
jp
iret
pop
sbb
jmp
jnp
jp
mov
jno
pop
cmp
add
sub
mov
inc
jmp
pushf
xchg
mov
push
bound
imul
cmp
nop
push
sbb
jne
push
and
xor
repnz
fs
or
mov
push
dec
mov
add
ror
mov
cwde
add
sbb
and
and
and
pop
popf
test
imul
add
dec
cmp
test
or
ror
or
fistp
bound
icebp
popf
(bad)
and
test
cmp
and
popf
rol
xor
outs
adc
xchg
adc
mov
and
xor
inc
fst
pop
mov
(bad)
jmp
mov
test
mov
daa
sbb
arpl
adc
mov
pop
push
enter
rol
clc
xor
test
nop
add
cwde
add
or
sbb
inc
lock
add
in
or
jmp
ins
and
adc
test
sub
dec
cmp
push
leave
add
push
nop
xor
lahf
mov
aam
xchg
sub
add
jmp
mov
movs
imul
rcl
push
and
aam
aas
mov
loopne
enter
call
movs
mov
loopne
adc
icebp
inc
ret
xchg
push
(bad)
adc
sbb
mov
pop
out
and
movs
mov
mov
and
sub
xor
and
rol
and
inc
mov
jne
mov
std
xor
pusha
pop
mov
or
sub
xchg
add
dec
jge
mov
cwde
sub
mov
out
(bad)
cld
sbb
test
add
and
fwait
mov
cmp
fwait
jbe
test
adc
fcomp
inc
cmp
pop
dec
or
cld
and
aam
je
mov
dec
in
mov
add
dec
or
ror
enter
xchg
les
mov
retf
add
js
les
rcr
lds
call
retf
dec
mov
leave
outs
adc
xor
xchg
jne
dec
cli
jecxz
mov
(bad)
fsub
push
and
fstp
ds
dec
cld
mov
or
pop
shr
sbb
mov
in
mov
test
cs
add
xchg
pop
push
popa
push
add
sbb
mov
jp
hlt
jne
(bad)
mov
test
push
mov
xchg
dec
lds
shl
add
out
or
pop
add
lea
mov
mov
xchg
mov
mov
xor
push
shl
lea
mov
test
adc
and
imul
sub
ficomp
mov
lods
mov
xchg
add
pop
or
fdivr
pop
cld
pop
sbb
repnz
add
scas
cmp
jge
aas
or
cmp
add
mov
inc
pop
inc
dec
sbb
adc
push
aaa
xchg
and
movs
aam
xor
push
lock
daa
xchg
out
add
call
jge
fadd
loopne
in
mov
jbe
rol
cmp
mov
clc
adc
jle
shl
or
sub
rcl
xor
dec
pop
or
fld
shl
or
je
pop
lock
add
jb
add
imul
or
dec
xor
push
int
cmps
dec
jae
int3
sbb
mov
fidiv
lods
pop
scas
aas
aam
add
lods
or
(bad)
dec
push
mov
nop
xchg
lahf
test
cmps
arpl
push
jp
jecxz
fwait
add
inc
push
jg
cmp
xor
sti
jmp
sub
pop
inc
cmps
jbe
retf
rcl
mov
xor
and
js
push
fnstenv
stos
les
test
sti
add
test
cmp
push
not
mov
jae
ja
aam
jnp
dec
dec
xor
outs
jmp
clc
or
push
or
lea
(bad)
and
xor
or
or
add
outs
jg
dec
and
add
or
adc
xchg
or
push
mov
mov
sbb
pop
jb
in
das
call
cs
and
sbb
loopne
cmp
adc
xchg
mov
movs
pop
icebp
in
inc
mov
xor
adc
mov
mov
je
jae
pop
aam
push
sub
mov
or
add
jmp
and
movs
ret
xchg
sbb
add
jmp
push
lahf
lods
xchg
ins
call
mov
xchg
loopne
icebp
pop
adc
mov
and
push
add
(bad)
out
je
mov
cdq
or
mov
cmp
jle
not
xchg
lock
mov
dec
push
(bad)
pop
xor
sbb
cmp
inc
pop
(bad)
movs
fldenv
sti
cmp
stos
mov
mov
and
pop
mov
mov
sub
xchg
imul
pushf
pop
fimul
call
mov
pushf
sbb
mov
fs
mov
test
pop
cwde
pop
add
mov
clc
rcl
fist
mov
movs
mov
gs
jb
je
sbb
push
nop
pop
leave
or
in
pop
movs
mov
adc
lods
and
xor
iret
inc
and
mov
or
sub
push
dec
enter
and
ror
mov
or
adc
xor
inc
adc
and
fdivr
ins
mov
clc
dec
and
in
sub
pop
test
cmp
daa
xchg
inc
or
fsub
cmp
pop
pop
xor
test
fcmovnbe
xchg
pop
pop
pushf
sub
xor
repnz
pop
sub
adc
in
push
jecxz
sub
nop
movs
aam
inc
jbe
and
pop
rol
int3
and
adc
int3
leave
movs
pusha
xchg
retf
mov
in
sbb
and
and
xor
in
imul
pop
inc
sub
add
add
repz
arpl
call
mov
cmp
popa
sbb
imul
add
ins
movs
leave
push
adc
jle
pusha
sub
xchg
das
add
xor
add
movs
dec
cs
adc
dec
aaa
imul
cs
outs
cmc
push
test
adc
add
xor
inc
adc
push
inc
mov
dec
adc
or
push
push
jb
jae
push
xlat
fs
add
scas
or
cmps
sbb
pop
push
mov
jo
bnd
shr
push
push
pusha
or
test
retf
jns
inc
sbb
jo
push
nop
add
mov
mov
xor
or
inc
jb
sbb
ja
adc
and
mov
sar
loopne
ror
jbe
nop
jg
mov
mov
push
inc
jnp
sbb
or
cwde
pushf
pop
xor
and
push
mov
mov
push
fbld
xchg
or
push
cmp
mov
scas
sbb
push
sbb
sbb
inc
imul
mov
lock
jge
leave
add
in
arpl
je
xlat
dec
and
lds
inc
adc
data16
xor
push
pop
nop
xchg
add
nop
xchg
add
xchg
fdiv
or
in
xor
cmp
ret
test
pop
push
mov
(bad)
daa
xor
push
sbb
cld
mov
adc
jns
out
and
add
pop
enter
je
pop
test
xor
out
xor
outs
and
inc
aaa
das
mov
mov
mov
hlt
test
sbb
mov
cmp
inc
mov
pop
sub
xchg
pop
scas
test
mov
mov
int3
or
aam
lods
rol
or
xor
mov
push
nop
sub
cs
loopne
mov
mov
dec
rol
fmul
push
sub
cmp
fmul
and
fcom
rol
xor
or
adc
push
sub
dec
xor
pushf
(bad)
jne
and
xchg
cmovge
mov
pop
fistp
fbstp
inc
xor
mov
pop
push
sub
mov
fucomip
pusha
mov
xchg
out
shl
mov
les
xchg
(bad)
push
jo
imul
call
mov
leave
dec
inc
dec
xor
dec
and
daa
int
enter
push
int3
rol
mul
adc
icebp
xor
mov
or
cmp
fwait
mov
bsf
mov
push
jl
mov
and
aam
test
rcr
lods
mov
mov
fld
and
and
pushf
mov
or
test
daa
int
mov
jb
ret
mov
sbb
xchg
lods
popa
push
test
je
js
xchg
xchg
mov
int
cmp
shl
fbld
in
mov
push
movs
int3
ins
pusha
pusha
xor
daa
inc
cmps
inc
imul
jnp
dec
adc
in
pushf
dec
pop
push
push
dec
cmp
movs
xchg
retf
and
inc
dec
dec
dec
lock
inc
aaa
sub
inc
pusha
test
xchg
adc
cwde
sub
rcl
mov
xor
fimul
adc
inc
push
cmp
jb
cmp
pushf
xchg
cmp
enter
dec
add
hlt
pop
and
xchg
adc
rol
sub
lock
(bad)
dec
or
sub
hlt
mov
xor
push
loopne
sub
push
mov
test
xor
(bad)
and
jl
fs
adc
pop
leave
sbb
pop
jb
or
or
xchg
dec
cs
or
adc
nop
retf
and
or
dec
dec
cmps
add
xchg
or
xchg
add
pop
leave
add
adc
seta
adc
push
clc
cs
nop
dec
leave
sbb
pop
adc
lock
repnz
ins
sbb
in
inc
repnz
xor
in
loope
and
mov
sbb
sahf
fdiv
mov
iret
mov
push
in
inc
cs
jns
nop
mov
pop
and
sub
jno
mov
fmul
add
adc
je
cmp
movs
push
out
int3
jne
adc
push
div
xor
test
sub
or
bswap
leave
mov
mov
inc
adc
inc
sub
mov
add
lods
jbe
cmp
mov
jnp
push
js
add
pop
fidivr
pop
outs
inc
or
inc
aas
push
gs
push
retf
ja
je
dec
fld
mov
or
out
fidivr
out
arpl
fs
mov
ror
arpl
fcomp
jnp
mov
neg
push
scas
imul
retf
and
inc
cmp
jo
iret
cld
push
adc
dec
sbb
sub
cmp
mov
cmp
push
cli
push
and
xor
mov
mov
(bad)
jb
jb
adc
sub
ret
jb
dec
ret
fsubr
fnstcw
mov
pushf
jo
mov
cs
xchg
xchg
mov
cmps
pusha
ret
jbe
adc
sahf
fmul
mov
ret
loope
in
and
or
xor
in
in
fmul
in
clc
das
jbe
repnz
adc
pop
sub
add
ss
sbb
mov
fwait
les
dec
rol
inc
jg
fs
pop
out
mov
gs
jb
and
mov
cmp
loop
inc
dec
int
outs
dec
jae
sbb
aas
dec
lahf
push
outs
mov
outs
push
jae
push
movq
lods
mov
dec
push
mov
dec
sbb
push
cli
arpl
and
stos
and
pop
ins
mov
fiadd
xor
scas
fs
out
jne
(bad)
je
pcmpeqw
jp
daa
arpl
push
jbe
div
push
push
imul
ins
gs
je
pop
outs
pop
js
mov
out
data16
lahf
or
xor
(bad)
mov
call
and
sub
lods
sub
inc
fidivr
dec
call
aam
dec
cmp
xchg
xor
adc
pop
pop
xor
xor
lods
sahf
clc
mov
and
push
popa
aad
dec
fbstp
pop
cmp
cmp
mov
xchg
stos
or
leave
add
push
aad
pop
retf
in
lods
ss
hlt
mov
repnz
dec
into
mov
add
and
aad
shl
cmp
pop
push
lods
(bad)
scas
jge
dec
inc
mov
sbb
das
xchg
cdq
fs
add
jl
push
lock
xchg
mov
xor
movs
xor
sbb
xor
test
daa
loop
punpckhbw
(bad)
ror
movs
cdq
fs
movs
ja
push
push
movs
dec
mov
push
mov
adc
mov
or
or
mov
idiv
add
push
sbb
sub
cmc
cmc
add
xchg
out
es
xor
adc
mov
jnp
and
lods
add
and
and
icebp
movs
je
mov
xor
pop
test
cmp
enter
popf
or
xor
adc
xor
cmp
xor
jmp
sbb
adc
ja
mov
mov
adc
inc
in
fwait
out
push
push
mov
pusha
pop
loope
xor
sbb
test
ins
and
gs
cs
inc
cmps
adc
aam
sahf
mov
add
popa
stos
shr
sub
lea
or
push
imul
xchg
mov
pop
jne
push
xchg
push
pop
add
cmp
aad
xchg
or
jmp
adc
pop
stos
test
sbb
ins
(bad)
sar
or
imul
lock
dec
jb
sub
push
inc
and
push
inc
dec
mov
cmps
or
lea
pop
and
(bad)
xchg
jb
in
stos
and
xor
or
jmp
sub
ret
clc
lea
push
adc
push
popa
xor
add
add
loopne
popf
jecxz
nop
pop
test
lods
xchg
pop
loopne
jo
sub
in
ins
enter
add
add
fcomp
out
push
or
ss
out
test
mov
or
fldenv
hlt
and
xchg
sbb
add
pop
jmp
cmp
jno
or
sbb
fnsave
xor
test
or
sbb
mov
pusha
jmp
and
pop
adc
add
dec
pop
ja
add
sub
and
sbb
rcr
dec
or
pop
inc
sbb
inc
jb
dec
adc
push
xor
(bad)
loopne
fsub
mov
push
mov
and
pop
push
call
rcl
jp
dec
adc
sub
inc
ret
or
inc
imul
cwde
sbb
jo
dec
push
push
dec
call
xlat
sbb
mov
sbb
sbb
and
lahf
and
mov
mov
call
or
sbb
or
mov
mov
xor
inc
enter
add
test
push
cmp
scas
ror
or
cmp
mov
lods
cwde
ret
clc
fiadd
pop
movs
add
mov
xchg
cmp
fs
adc
adc
xor
push
inc
enter
push
popa
pop
push
outs
or
sub
mov
sbb
push
mov
xor
mov
xchg
mov
xchg
aaa
adc
add
pop
mov
mov
mov
mov
or
es
fs
in
push
push
dec
pusha
or
xor
and
cs
cs
sahf
sbb
or
je
loopne
inc
push
ins
cld
mov
dec
mov
enter
mov
rcl
pop
movs
popf
popa
inc
and
in
shr
outs
in
sar
and
mov
xor
js
mov
mov
pushf
adc
sti
xchg
dec
sub
imul
adc
sar
pop
test
mov
lock
and
push
ins
xchg
push
inc
dec
popa
loopne
dec
push
loope
pop
and
and
movs
adc
xchg
push
cmp
pop
das
cmp
sub
push
dec
ins
pop
js
sub
es
jp
jae
mov
rol
push
lahf
and
adc
fimul
xchg
xor
adc
fsubr
cmps
imul
shr
loopne
sar
mov
adc
enter
aas
adc
nop
lock
mov
lea
adc
add
cmp
outs
inc
or
push
rol
sbb
rcl
xor
dec
inc
and
or
add
sbb
push
fs
out
(bad)
rcr
add
ja
pop
inc
test
xor
outs
ins
jle
inc
and
sbb
mov
dec
fiadd
or
popa
sub
push
shr
sbb
xchg
push
add
imul
sub
xor
call
pusha
cmps
sbb
xchg
fisttp
ret
es
mov
sub
mov
or
inc
xor
xchg
mov
mov
mov
dec
cmp
lock
test
aaa
jne
shl
mov
push
inc
ss
in
push
adc
ror
cmc
shl
mov
pusha
cmps
clc
pop
mov
mov
jbe
adc
xor
test
sub
test
xchg
(bad)
in
sbb
and
or
cld
rcl
loop
adc
in
lods
or
imul
cmp
inc
sub
call
rcr
enter
add
aad
mov
pop
and
jmp
clc
or
xchg
dec
add
xor
aam
push
sbb
dec
or
or
call
outs
(bad)
mov
cmp
and
push
imul
push
test
or
add
clc
pop
inc
imul
pop
(bad)
sub
rol
jnp
mov
cmp
adc
aad
ret
pushf
adc
cmp
pop
leave
add
repz
xor
or
nop
aad
pop
mov
arpl
and
out
dec
mov
adc
sbb
mov
setb
lods
fcmovb
add
(bad)
sub
out
and
mov
push
dec
pop
inc
push
inc
ret
jns
lahf
jge
lea
xchg
lds
and
dec
scas
and
pop
fadd
inc
mov
or
ret
and
inc
pop
fcom
mov
add
push
mov
stos
adc
add
add
jl
aas
and
stc
lahf
mov
mov
dec
sbb
sti
rol
mov
rol
or
and
fld
sub
js
xor
xchg
sbb
loope
data16
inc
test
add
sbb
sbb
and
adc
lock
adc
mov
lods
sub
dec
pop
or
mov
and
add
cmps
test
sub
loope
ins
push
inc
adc
psubusb
mov
pop
js
cmps
or
xor
inc
sub
and
or
push
xchg
xchg
push
aam
inc
cmp
inc
arpl
jmp
push
std
test
or
inc
inc
pop
add
dec
adc
outs
sbb
dec
inc
call
add
jg
or
xchg
add
adc
cs
jbe
bound
jae
imul
push
jbe
xor
daa
xor
or
dec
pop
iret
fldenv
sbb
clc
in
cmp
scas
mov
xchg
dec
mov
mov
es
sbb
push
push
xor
push
ins
pop
add
ret
popa
jmp
pop
push
jbe
xchg
sub
fcom
mov
cmp
push
sbb
jge
add
push
push
repnz
pop
push
push
inc
dec
cmp
pop
xchg
pop
pop
xor
pusha
mov
leave
aas
je
dec
push
int
enter
adc
adc
mov
inc
aam
lods
or
push
shl
sbb
aam
fisttp
xchg
fld
arpl
test
sbb
sti
add
adc
sbb
or
pop
push
sub
cmc
jge
mov
push
add
or
adc
mov
inc
popa
loope
mov
dec
dec
aam
and
push
cmp
adc
or
aas
(bad)
dec
push
and
sbb
push
or
in
sbb
outs
(bad)
push
push
sbb
sub
mov
aam
pop
add
add
sub
jg
out
sbb
cmps
sti
mov
or
aaa
stos
rol
movs
or
xor
ret
xor
inc
loop
pushf
mov
les
xlat
cmps
or
out
popf
dec
fdiv
fidivr
inc
(bad)
not
aad
dec
hlt
xor
clc
push
mov
and
and
cmc
sub
pop
add
inc
repnz
xor
movs
and
fisubr
(bad)
sbb
iret
addr16
mov
imul
mov
pop
fnstcw
dec
add
sbb
adc
cld
scas
xor
adc
and
mov
sub
outs
mov
inc
and
adc
push
add
cmp
mov
enter
pop
imul
or
repz
xor
pop
jb
or
unpcklps
aas
leave
mov
sub
popf
lsl
push
outs
inc
inc
(bad)
pop
push
cmps
je
adc
fsubp
daa
add
addr16
nop
fucomi
cwde
pop
movs
aas
mov
nop
xchg
xchg
xchg
enter
sub
add
ja
xchg
push
ret
out
jecxz
sub
mov
pop
sbb
imul
xor
neg
sub
or
mov
and
pop
bswap
and
outs
push
xchg
sar
or
jecxz
lods
fwait
mov
mov
cmps
xlat
xor
cdq
imul
pop
test
pop
aaa
pop
cmp
jne
lods
pop
ss
cmps
mov
pop
rcr
popa
imul
arpl
inc
jo
adc
aam
je
aaa
and
add
(bad)
cmps
pusha
jb
aaa
jae
ja
or
mov
dec
jb
imul
repnz
arpl
outs
cdq
sbb
inc
loop
ja
ret
or
cmp
or
and
xor
jbe
sub
or
fbld
repnz
outs
add
fcom
in
push
adc
push
cld
loopne
fnsave
mov
mov
inc
pusha
jle
dec
xchg
out
ja
xchg
sbb
push
and
fwait
addr16
or
nop
fst
ins
sbb
xchg
nop
stos
mov
repnz
add
out
jle
inc
mov
fisubr
xor
push
in
and
dec
nop
rcr
fdiv
and
pop
in
std
and
adc
mov
add
adc
xchg
enter
daa
dec
outs
sbb
mov
dec
test
shr
loopne
aam
pushf
pushf
xor
dec
aam
fsubr
adc
rcl
add
xor
cmp
push
jb
and
mov
in
adc
push
mov
push
jo
sbb
push
idiv
sbb
jo
xchg
pop
jl
jnp
mov
xchg
xchg
rol
dec
mov
add
leave
dec
xor
dec
repnz
mov
or
mov
add
inc
add
sahf
and
and
cmps
loope
xor
test
cmp
mov
movs
push
stc
or
add
aam
adc
jl
int3
retf
or
jne
inc
or
ror
clc
mov
(bad)
nop
jmp
jo
movs
sbb
push
lea
dec
mov
inc
mov
and
mov
call
(bad)
adc
mov
adc
loopne
or
test
push
ja
pushf
pushf
pushf
je
sub
inc
push
les
push
or
mov
out
adc
push
or
movs
mov
enter
daa
aam
adc
push
inc
pop
add
inc
fimul
add
adc
test
xor
test
fsubr
lock
inc
jg
pop
mov
dec
enter
pop
pcmpgtb
adc
pop
add
inc
xor
adc
mov
adc
push
jne
push
lods
mov
push
les
ror
leave
leave
leave
fsub
in
add
dec
loope
out
inc
push
xor
(bad)
inc
push
pop
inc
out
jo
dec
ins
jo
xor
adc
push
sbb
pop
test
adc
add
stos
lock
popa
xlat
inc
fs
outs
and
pop
gs
movs
lock
add
adc
xor
in
sub
ins
xor
mov
pop
push
and
daa
dec
outs
push
jb
inc
outs
dec
fcmovb
cs
je
push
sub
and
push
aam
pop
xchg
(bad)
arpl
js
push
jb
pop
push
xor
leave
xor
in
ss
sub
xor
out
mov
xchg
int
jmp
xor
loop
push
mov
add
and
adc
cs
dec
mov
adc
clc
mov
inc
mov
mov
hlt
push
mov
movs
fild
mov
ja
cmp
dec
xchg
push
loop
ja
push
or
push
test
aam
add
fwait
mov
add
mov
fdivr
add
ds
jmp
gs
icebp
adc
inc
inc
ins
addr16
lock
(bad)
scas
xor
gs
movs
push
rcl
push
cdq
jp
je
mov
rol
add
xor
test
aas
mov
pop
mov
into
les
out
pop
mov
pop
(bad)
fisttp
inc
pushf
mov
lods
loop
xor
or
xchg
cmp
and
jmp
xor
sub
jge
add
cmp
cmp
fisttp
movs
mov
lock
mov
push
sar
stc
out
outs
pop
mov
and
add
or
mov
inc
mov
mov
shl
inc
xor
pop
sub
ins
push
jl
or
(bad)
and
fbld
pop
mov
movs
cmc
push
inc
test
mov
scas
ins
push
or
push
call
push
loopne
add
or
inc
sbb
mov
fcom
pushf
fsubr
pcmpgtb
jbe
cli
shl
inc
je
js
mov
in
in
mov
pop
inc
pop
adc
shl
add
jp
lock
inc
bound
cdq
adc
dec
xlat
iret
add
pop
push
sub
ret
mov
pop
xor
aaa
jge
mov
sbb
sub
test
add
xor
jge
or
cli
pop
and
andps
data16
xor
gs
test
mov
or
movs
in
xor
adc
inc
xor
pop
xor
xor
jmp
fld
cmp
sub
or
inc
clc
sbb
adc
dec
mov
xchg
test
xor
xor
mov
rol
xor
loopne
cmp
mov
xor
and
xor
aam
add
lds
jmp
call
fs
gs
cdq
xor
add
dec
xlat
outs
sbb
jb
adc
jbe
sbb
sub
mov
push
popa
add
in
mov
pop
push
sub
sbb
push
pusha
loop
retf
adc
test
adc
imul
popa
jecxz
cmp
push
adc
add
dec
mov
loope
sub
xor
ret
xchg
imul
adc
ss
imul
push
or
ret
dec
or
sbb
sub
push
adc
imul
adc
sbb
mov
(bad)
mov
sub
cmp
or
fwait
push
pop
jo
lahf
popa
shr
inc
addr16
std
ins
xor
xchg
cmp
inc
cli
mov
inc
pop
add
sub
dec
(bad)
xor
jl
rcr
pusha
and
inc
mov
adc
paddq
xor
cmps
sbb
in
xor
push
ds
(bad)
repnz
dec
imul
dec
imul
sbb
push
cwde
xor
mov
sbb
aas
cmp
rcl
jb
push
lock
xchg
adc
das
das
fcomp
add
inc
sbb
ss
rcl
rcl
outs
and
daa
push
pop
xchg
inc
inc
outs
shl
ja
or
mov
fist
iretw
jnp
or
pop
adc
mov
addr16
aam
xor
or
inc
lods
out
push
(bad)
aas
das
das
or
mov
clc
xor
or
inc
sahf
dec
or
xor
shl
out
jns
shl
shl
adc
outs
js
cmp
or
xor
adc
inc
sysret
xchg
or
add
jle
cmp
(bad)
pusha
dec
jae
cli
xor
xchg
mov
repnz
hlt
and
fsub
xchg
aam
mov
(bad)
rcl
lock
mov
ror
ins
imul
cmp
test
or
and
rol
dec
mov
js
mov
add
mov
add
loope
pop
fst
addr16
nop
pop
pop
mov
cdq
mov
imul
les
outs
call
adc
add
add
xchg
mov
or
push
(bad)
int3
push
jns
(bad)
push
cmp
and
lds
cs
popa
jmp
mov
push
cmp
popa
lods
push
jne
mov
mov
adc
push
jg
xor
test
pop
iret
loopne
xchg
fs
sti
leave
sbb
ja
in
sub
xchg
fs
cld
arpl
leave
xchg
dec
mov
out
xchg
ins
mov
mov
out
and
inc
inc
xchg
in
fistp
and
dec
mov
and
xchg
xchg
add
outs
popa
add
enter
pop
jb
std
fld
push
push
sub
xor
std
pop
daa
(bad)
ins
dec
ret
push
sub
xor
xchg
dec
push
ins
pop
fs
mul
or
inc
call
add
or
push
outs
ja
cmp
push
fild
jo
pop
or
inc
aaa
sbb
pop
jae
in
popf
sbb
pop
popa
daa
ins
jb
pop
push
(bad)
push
cmp
addr16
mov
jo
(bad)
jle
and
cmp
ret
or
bound
fadd
cmc
test
mov
rol
pop
jg
jnp
movzx
icebp
fwait
fs
call
es
ret
cmp
push
add
and
pop
test
dec
imul
sbb
test
shr
movs
movs
shl
pop
jbe
push
inc
mov
xor
sub
loope
adc
sbb
nop
cmp
inc
dec
or
in
fistp
loope
shl
hlt
cmps
test
xchg
pause
and
xchg
in
test
sub
add
jecxz
sub
sub
xchg
pusha
movs
ffreep
(bad)
dec
(bad)
out
and
lahf
fs
adc
inc
xor
outs
(bad)
or
add
popf
mov
mov
adc
jmp
adc
in
jne
add
sbb
fcom
dec
mov
aas
adc
add
or
movlps
(bad)
add
mov
popf
xchg
pop
fsubr
adc
xor
xor
aam
outs
shl
and
daa
shl
daa
add
jb
jno
enter
and
les
push
and
sub
inc
popa
add
nop
or
cmp
sbb
inc
push
cdq
push
sbb
nop
or
fs
push
adc
popf
sub
xchg
and
adc
or
push
xchg
fstp
das
in
mov
(bad)
sub
daa
add
sbb
(bad)
jo
shl
jne
std
inc
dec
push
fs
in
inc
mov
dec
push
mov
jne
dec
in
mov
add
add
sbb
add
and
aaa
gs
add
enter
add
add
xor
sbb
bswap
adc
and
mov
xor
cmp
xchg
outs
sbb
add
add
pop
fs
mov
mov
and
frstor
and
sets
das
push
mov
movs
stos
and
push
outs
imul
mov
mov
sub
fist
mov
cmp
test
or
arpl
pop
mov
inc
cs
or
sbb
push
inc
hlt
popf
mov
inc
bound
ret
enter
cmc
push
iret
sahf
dec
pop
lea
fadd
and
repz
int3
popa
ret
or
lea
movs
adc
out
and
or
test
mov
or
push
sti
pop
add
or
aam
mov
adc
mov
xchg
fimul
lock
push
dec
sub
mov
and
add
in
popa
lock
fidiv
sub
inc
adc
add
inc
jbe
mov
xchg
jne
adc
mov
mov
cli
adc
mov
sbb
inc
xor
pop
(bad)
retf
pusha
or
imul
sbb
(bad)
loope
dec
mov
push
push
fcmovu
inc
bound
mov
push
and
pop
mov
add
jg
and
enter
les
adc
dec
inc
rcl
and
js
jmp
mov
ds
(bad)
out
pop
xor
dec
std
inc
ret
fst
loope
inc
mov
xor
and
add
mov
lds
lahf
jbe
inc
add
ja
dec
push
fs
js
test
sub
mov
xor
fadd
out
lods
idiv
and
xor
dec
push
mov
inc
cmp
cwde
fsubr
test
(bad)
daa
xchg
or
(bad)
cs
push
sbb
inc
push
loop
lds
xor
add
cmp
into
jnp
outs
adc
(bad)
mov
add
and
mov
retf
add
xor
(bad)
sbb
nop
sub
xchg
outs
or
adc
je
cmp
sub
call
and
sahf
dec
fcmovb
xchg
and
sub
pop
rol
test
xlat
sub
loopne
push
mov
mov
inc
or
test
nop
or
add
adc
add
lods
(bad)
addr16
jno
add
mov
lea
fdiv
shl
enter
jecxz
int3
aaa
test
outs
shl
pop
adc
mov
inc
push
ins
sub
add
ja
push
pop
adc
jne
jno
or
cmp
jo
adc
leave
mov
sub
cmp
pop
into
ins
xchg
(bad)
adc
(bad)
scas
add
enter
xchg
push
and
push
pusha
pusha
push
mov
scas
sti
push
jb
push
inc
movs
cmp
pop
(bad)
mov
pop
je
xchg
inc
outs
sti
cs
adc
inc
add
cmp
mov
push
pop
and
xchg
adc
push
(bad)
xor
xchg
in
mov
shl
xchg
sbb
xor
lock
and
pop
xchg
pop
push
mov
cmp
movs
adc
xor
sub
sbb
pop
xor
in
shl
jmp
mov
data16
in
push
fcmovb
adc
ss
pop
sub
sbb
add
xchg
mov
fnstsw
and
dec
cs
push
mov
sbb
dec
sub
or
xchg
dec
sub
ret
adc
xor
xor
and
or
out
push
jecxz
pop
jge
add
add
push
pop
jmp
and
dec
jb
aaa
add
imul
hlt
(bad)
adc
mov
in
dec
push
in
in
js
jo
push
call
pop
cmp
pop
jno
pusha
test
fisub
or
in
aas
shl
jmp
dec
fcom
add
pushf
repnz
and
dec
sub
adc
call
adc
out
push
add
mov
and
nop
js
and
pusha
or
repz
xchg
dec
int3
add
add
cmp
das
adc
push
jne
push
push
enter
popa
mov
lods
sub
inc
imul
sub
cdq
call
les
xchg
add
xchg
sar
mov
xchg
or
mov
xchg
pop
enter
mov
shr
movs
movs
mov
pushf
pushf
mov
cwde
adc
enter
xchg
repnz
mov
lea
add
nop
call
sub
mov
mov
xchg
and
or
arpl
mov
add
push
pop
or
or
push
adc
adc
sbb
adc
imul
fild
mov
ror
jmp
inc
push
cs
cmps
jp
pop
dec
stos
sbb
and
pop
in
xor
hlt
hlt
xlat
push
stos
and
and
inc
xchg
mov
dec
(bad)
fisub
cdq
cld
push
add
sar
(bad)
sub
aam
and
jg
mov
push
sbb
clc
add
add
push
push
mov
shr
pop
les
sbb
push
ret
popa
je
and
xchg
cs
ss
push
add
mov
pop
mov
popf
mov
xlat
iret
push
cmp
pop
cmps
add
sbb
imul
rcr
jo
rcr
test
ins
mov
mov
ret
pop
xchg
and
inc
and
add
add
(bad)
ja
add
cmps
outs
sub
stc
nop
pop
adc
xor
mov
inc
enter
pop
das
call
cli
and
fmul
imul
cmp
xor
cmp
push
mov
add
ds
push
cmps
inc
mov
mov
popa
imul
inc
adc
hlt
jmp
and
xor
movs
bound
or
mov
mov
and
in
mov
xchg
lock
push
lods
xor
pushf
pushf
popa
push
push
inc
xor
push
rcr
or
leave
push
outs
inc
xchg
mov
inc
mov
in
mov
add
jmp
lea
aam
and
mov
ret
adc
xchg
xchg
jnp
mov
sub
rcl
xor
mov
mov
pop
mov
js
das
sub
and
jp
cmp
or
and
cs
je
stc
mov
sub
cmc
mov
fs
push
add
imul
scas
or
ja
cmps
pusha
push
imul
cmp
outs
mov
mov
xchg
nop
push
jge
add
cmp
mov
add
add
outs
pop
inc
and
mov
dec
jmp
xchg
pop
cmp
test
daa
add
add
(bad)
jle
fs
arpl
test
je
sub
pop
mov
mov
mov
adc
stos
fadd
or
lods
leave
test
sar
aas
mov
jmp
pop
xor
rcl
sub
or
mov
fistp
div
dec
jb
mov
adc
and
push
mov
inc
stos
add
xchg
inc
dec
pop
jne
adc
sar
inc
add
dec
test
push
movs
pusha
and
inc
sbb
dec
jg
cmc
jge
mov
pop
inc
das
loop
xchg
ret
xor
xor
xchg
sbb
cmp
or
and
jb
or
inc
inc
sub
rcr
xlat
xchg
mov
in
sbb
sub
dec
push
mov
push
add
or
or
cmc
or
loope
cmp
xor
rol
sbb
xchg
ins
or
push
shr
in
pop
mov
xchg
enter
xchg
outs
and
(bad)
rcl
repnz
stos
lea
jl
sahf
push
adc
mov
adc
and
or
fcom
movs
sub
fs
pop
rol
push
out
aam
sub
add
das
inc
adc
add
pop
adc
xchg
cld
sub
ins
cmp
adc
and
jecxz
dec
movs
xor
mov
out
push
push
sti
cs
leave
add
xor
mov
xchg
or
inc
dec
and
push
and
aaa
in
dec
(bad)
in
inc
sbb
adc
cmps
or
dec
icebp
sbb
inc
adc
sbb
sub
adc
or
pop
sbb
test
dec
fnstsw
and
xor
in
lock
push
push
fist
movs
popa
dec
jb
inc
dec
popa
or
fmul
test
sbb
cld
(bad)
xor
movs
adc
outs
test
jl
lea
adc
loopne
mov
and
jmp
mov
or
clc
clc
lods
add
stc
add
or
sbb
ja
add
loopne
or
sub
(bad)
retf
movs
lods
push
lock
pop
dec
adc
xchg
add
call
xor
repnz
ret
fimul
lock
jno
mov
dec
mov
pop
mov
jge
cmp
mov
fsubr
aam
jbe
icebp
aaa
sbb
pop
jns
mov
pop
cdq
inc
cmp
sahf
inc
fcomp
dec
in
jns
movs
or
les
nop
retf
leave
aam
loopne
mov
rcr
cmp
dec
mov
or
mov
inc
sub
mov
sub
or
add
popf
popa
and
or
or
mov
push
inc
sbb
inc
ins
jae
adc
and
lods
lods
mov
and
sub
dec
les
rcr
add
push
dec
pop
mov
add
cwde
nop
and
imul
dec
ins
xchg
js
xchg
inc
test
addr16
sbb
shr
sbb
and
fimul
inc
gs
xchg
xor
inc
(bad)
cmps
clts
aaa
add
(bad)
imul
jp
sbb
add
xor
cmp
rol
dec
inc
sbb
rol
imul
dec
pop
adc
in
gs
in
pop
scas
dec
dec
xlat
cld
and
add
and
fs
out
add
mov
fnsave
daa
fcom
add
nop
addr16
loope
xor
adc
pop
daa
push
push
sub
push
or
fs
push
or
les
fcomp
and
rcl
js
outs
lahf
add
popa
scas
mov
jmp
scas
retf
push
ins
and
adc
lsl
dec
shl
stos
ins
sbb
cld
xchg
adc
mov
mov
bnd
fistp
add
push
or
xlat
push
and
pop
jecxz
or
inc
xlat
aam
inc
or
out
mov
lea
mov
sbb
popf
cmc
add
jge
nop
jl
bswap
les
push
mov
cmp
mov
mov
mov
movs
daa
int
or
test
or
pushf
xor
lods
movs
xor
xchg
pushf
movs
pop
xlat
pushf
inc
jb
pushf
pushf
mov
and
ror
xchg
test
add
xchg
jnp
add
push
cmp
rcr
add
inc
dec
pop
scas
and
xchg
mov
xchg
jl
ror
ret
and
pop
fadd
push
inc
push
mov
or
sti
or
sti
pop
push
pop
ins
ins
rcl
adc
adc
stc
cmp
pop
leave
xchg
pop
pop
pop
leave
and
dec
pop
pop
pop
add
leave
add
cmp
pop
sti
dec
dec
push
xchg
or
mov
fs
pusha
push
inc
leave
mov
and
leave
add
nop
and
and
xor
es
xor
dec
push
sbb
sub
sub
std
push
xor
and
adc
mov
push
popf
adc
xchg
mov
cmp
inc
sbb
and
dec
adc
add
or
and
leave
sahf
gs
cdq
in
add
or
inc
es
ror
cdq
adc
bound
or
and
jg
lahf
mov
xor
(bad)
pop
sub
xor
push
and
adc
lock
sub
cmps
test
mov
dec
jb
inc
loopne
in
and
and
shl
xor
out
and
xchg
inc
fcom
inc
fadd
in
fs
out
call
pop
or
xchg
xor
sbb
pop
sbb
sbb
push
inc
jae
inc
and
push
push
adc
jne
dec
inc
test
sbb
mov
stos
xchg
cwde
adc
xchg
shr
inc
and
mov
mov
sub
sub
out
pop
or
adc
pop
jmp
and
call
mov
pop
xor
mov
sub
xor
push
das
daa
je
sbb
push
mov
ror
push
cdq
ror
dec
push
push
inc
and
add
xchg
adc
xor
adc
dec
les
iret
xchg
sub
pop
cmp
lea
sbb
sub
jmp
leave
dec
sbb
retf
lahf
imul
shl
movs
cmc
bound
sbb
ins
inc
sbb
xchg
inc
rcr
dec
push
adc
xchg
add
retf
sub
and
vmulpd
xor
add
sub
cwde
in
xchg
ins
mov
int3
xchg
inc
or
mov
dec
dec
pusha
push
and
lods
stc
and
and
ins
or
pop
xor
xor
aam
push
fs
sub
push
jns
push
outs
add
or
in
push
add
sub
and
mov
jae
sbb
push
pop
xchg
test
mov
or
dec
and
std
add
jbe
int3
jle
mov
xchg
lea
imul
mov
ret
test
fwait
popf
cdq
inc
cmp
popf
sub
jae
dec
aad
push
(bad)
les
les
or
mov
sub
or
pop
cmp
mov
inc
ret
lahf
mov
add
call
add
jecxz
and
dec
mov
sahf
mov
or
xor
push
inc
mul
jmp
push
jnp
xchg
nop
in
xor
mov
mov
or
add
add
pop
adc
push
shr
xor
push
xor
jne
push
fsub
push
mov
inc
mov
pusha
jbe
les
push
mov
xor
or
mov
or
mov
clc
add
ja
add
lock
add
inc
cmps
and
shl
jmp
mov
repnz
cmp
push
jmp
add
mov
test
rcr
or
pop
call
in
out
(bad)
xlat
mov
cwde
mov
sub
cwd
xor
inc
sbb
inc
adc
in
retf
adc
pushf
push
add
mov
mov
mov
adc
cmp
push
test
dec
add
or
push
dec
push
adc
fmul
cmp
mov
loopne
rcr
add
test
adc
mov
aad
dec
push
dec
scas
sub
or
movs
loopne
xor
cs
outs
or
fcom
test
sub
sub
fist
sub
mov
mov
ror
shl
adc
adc
stos
sub
or
in
pop
sbb
fs
mov
and
lods
adc
xor
mov
rcl
je
(bad)
and
dec
jb
adc
xchg
sub
dec
es
xchg
push
xchg
and
xor
popf
(bad)
ins
add
push
das
lds
int3
push
mov
sub
pop
and
inc
mov
or
js
push
add
push
nop
lods
fs
sbb
mov
imul
pop
mov
sub
dec
out
mov
jno
movs
inc
popf
mov
push
das
jo
scas
sub
enter
ret
shl
test
(bad)
mov
and
or
push
jge
or
mov
mov
cld
mov
out
loopne
aas
add
push
sub
mov
arpl
and
or
dec
outs
adc
adc
push
in
sti
push
hlt
jmp
cdq
mov
js
mov
add
xchg
inc
mov
fs
mov
inc
daa
aaa
sbb
push
dec
fst
mov
sbb
pop
mov
jno
sub
into
push
cli
outs
push
nop
xchg
and
inc
sbb
movs
test
jae
xchg
fadd
outs
xchg
(bad)
(bad)
loop
imul
mov
or
mov
and
add
sub
ficomp
inc
inc
aam
les
push
and
adc
add
shr
int3
xchg
fsubr
sbb
jae
inc
or
sbb
stc
cdq
pop
xor
inc
adc
dec
and
loop
mov
mov
mov
sub
ins
pop
push
pushf
mov
xor
inc
aad
cmp
test
xchg
xchg
arpl
jo
test
or
or
and
cwde
ror
imul
and
push
test
dec
lds
nop
xchg
hlt
push
sbb
and
lahf
or
jae
test
ins
inc
or
je
adc
outs
and
adc
jl
repz
stos
jo
or
daa
pushf
call
ins
or
dec
retf
mov
xchg
ins
jecxz
out
movs
push
add
fs
xor
int
inc
dec
dec
pop
shl
xchg
out
push
or
jecxz
pop
adc
adc
mov
push
lods
jmp
adc
pop
inc
mov
cmp
dec
enter
xor
sub
in
mov
or
and
adc
push
dec
add
ret
enter
fadd
sub
push
push
xchg
(bad)
pushf
movs
sbb
dec
arpl
and
movs
xchg
pop
daa
mov
addr16
dec
and
xchg
and
retf
popf
and
cmps
and
xlat
xchg
xchg
mov
adc
lds
repnz
fwait
jl
inc
jns
js
adc
push
bound
dec
sar
add
xchg
sbb
pop
and
add
(bad)
sbb
adc
add
mov
inc
je
adc
sbb
in
cdq
in
(bad)
lock
rol
nop
(bad)
cdq
in
in
cs
dec
inc
call
pop
dec
js
xchg
or
adc
add
fdivr
xchg
nop
mov
pop
in
jmp
push
adc
push
xchg
sar
lods
xchg
mov
add
cdq
nop
rol
jbe
cmp
rcl
loopne
add
adc
leave
test
pop
enter
ins
ins
jl
test
add
lds
xlat
sub
mov
sub
xchg
sub
or
cdq
sub
cmp
nop
dec
dec
pop
pop
or
arpl
ss
call
std
daa
mul
std
das
and
sbb
xor
add
inc
ret
inc
xchg
adc
jns
ficom
lea
cmp
and
rcr
lea
mov
arpl
dec
sbb
sub
or
fild
xor
or
cdq
repnz
inc
outs
xchg
inc
dec
sub
or
scas
push
test
sbb
mov
test
xchg
add
fild
add
and
scas
ret
sar
adc
outs
pop
pop
mov
movs
nop
inc
cmc
aam
pop
sub
mov
xor
into
push
or
cmp
(bad)
movs
cmps
cld
cmp
pop
sbb
int3
fs
es
ja
sub
inc
push
les
mov
rcl
sub
push
in
popf
push
mov
popf
mov
mov
enter
mov
nop
dec
cs
sbb
test
mov
jns
push
sub
xchg
test
lods
adc
lds
and
xor
je
mov
retf
mov
or
dec
and
cwde
pushf
pushf
xor
shl
es
cdq
fs
push
movs
mov
mov
add
test
js
jl
and
jb
cmps
jo
fs
retf
jo
je
xchg
or
test
push
nop
dec
ins
add
and
xor
fs
fs
xor
or
pop
xchg
add
xchg
dec
push
fs
dec
dec
push
cdq
push
push
scas
push
mov
shr
cmp
movs
inc
popa
lods
or
mov
add
mov
adc
je
pop
(bad)
enter
repz
dec
es
jbe
sub
cdq
fs
ins
jo
js
cmp
dec
jl
test
and
mov
xchg
cwde
pushf
leave
and
dec
mov
dec
xor
dec
es
mov
cdq
fs
pop
popf
and
leave
aad
mov
xor
add
pop
pushf
mov
loopne
leave
xor
mov
dec
jnp
retf
jg
inc
hlt
clc
xchg
ret
xor
mov
dec
stos
inc
mov
inc
movs
xchg
mov
push
ja
ficomp
adc
pop
leave
mov
dec
ins
dec
mov
xor
add
ins
imul
xor
mov
movs
inc
sbb
cwde
lahf
pusha
adc
or
inc
sub
inc
ins
push
and
pushf
movs
movs
mov
push
bound
xchg
cs
pop
fiadd
dec
xor
mov
cmp
pop
adc
inc
loop
adc
or
mov
add
and
inc
pusha
mov
shrd
ficom
jo
inc
add
mov
jo
popa
and
cmp
retf
add
add
xor
mov
imul
xor
scas
sbb
test
nop
aaa
inc
add
ffreep
in
jb
or
nop
popf
hlt
jle
out
or
or
xchg
(bad)
jmp
mov
dec
call
dec
xchg
add
jo
dec
loopne
add
add
sub
jmp
test
dec
loope
call
clc
or
test
(bad)
aad
pop
rol
sbb
push
push
sub
test
sbb
xor
mov
xor
je
dec
and
ret
fmul
push
std
test
inc
or
(bad)
addr16
jo
int
or
add
scas
mov
jp
xchg
mov
sbb
push
adc
push
add
jns
push
in
hlt
hlt
lock
nop
sub
dec
add
dec
mov
imul
cmp
stos
push
jo
icebp
cmp
rdmsr
or
popa
sbb
fld1
outs
adc
xchg
add
cmp
jne
adc
aam
sbb
ins
sub
or
aad
dec
ret
push
jo
push
push
test
inc
and
or
adc
mov
das
or
call
push
inc
or
popa
or
jmp
(bad)
and
jo
sub
jo
sub
popa
push
icebp
in
jge
js
pop
mov
dec
xor
and
and
push
add
inc
jmpw
inc
sub
or
adc
jecxz
or
xor
sbb
adc
pop
test
or
push
lods
(bad)
or
add
lock
mov
or
and
inc
test
adc
sbb
(bad)
rcl
cmp
add
add
test
cmp
sbb
stc
sub
jecxz
sahf
mov
addr16
scas
xor
adc
pop
jns
inc
push
or
xchg
dec
add
test
daa
inc
jb
movs
scas
hlt
sub
add
push
push
nop
loop
and
pusha
push
out
mov
and
mov
mov
sub
jmp
xor
(bad)
inc
or
jb
call
pop
or
or
enter
push
cmp
add
int3
out
gs
arpl
aam
mov
sub
xchg
mov
mov
push
xchg
fiadd
dec
adc
mov
test
fmul
jae
imul
rol
xchg
cdq
and
movs
movs
pop
pop
dec
and
push
gs
or
leave
xor
inc
mov
ds
ja
bnd
adc
add
mov
movs
movs
xor
pop
in
lock
add
loop
adc
mov
xor
adc
or
lahf
in
in
push
cmp
and
mov
add
add
add
and
ret
or
inc
inc
and
push
add
dec
push
dec
ret
and
call
inc
adc
adc
rol
in
lds
xchg
mov
or
stos
aaa
jmp
or
inc
loop
(bad)
and
push
mov
adc
adc
(bad)
in
add
push
test
push
and
jnp
test
lds
add
pop
push
dec
jns
add
fs
add
leave
cwde
add
pop
jg
add
ret
adc
shl
shl
cli
test
xchg
mov
gs
inc
aaa
mov
sbb
xchg
adc
mov
test
leave
sbb
adc
push
cmp
mov
push
punpckldq
push
inc
imul
and
mov
enter
aaa
int
prefetcht0
xchg
xlat
test
(bad)
fwait
xchg
enter
xchg
sub
cmp
push
mov
shr
iret
inc
inc
scas
adc
mov
dec
or
sbb
mov
fs
xchg
not
add
or
mov
sub
test
xor
inc
and
or
push
add
das
xor
scas
and
loope
sub
and
xchg
hlt
adc
inc
and
xchg
clc
sbb
xor
bound
sbb
inc
rcr
xor
inc
mov
or
and
or
popa
pop
aad
outs
loopne
or
jmp
mov
and
movs
es
xor
jo
(bad)
or
imul
or
xlat
add
xchg
sub
add
and
sbb
adc
sub
xchg
and
jmp
xchg
mov
add
mov
rcl
and
sbb
push
mov
test
push
loopne
pop
lds
cs
cwde
pushf
mov
add
leave
(bad)
sub
xchg
in
pop
rol
mov
add
movs
mov
popa
mov
cbw
lea
sub
xor
and
mov
and
adc
pop
and
mov
adc
add
mov
std
enter
xchg
clc
call
iret
xchg
push
stos
push
jno
lahf
inc
add
add
imul
dec
ret
jl
inc
std
sbb
adc
mov
cmp
add
mov
xor
add
add
or
in
int3
inc
or
fs
dec
in
xchg
cmp
lods
test
xchg
pusha
cmp
cmps
xor
outs
add
shr
and
sbb
push
dec
loopne
fwait
adc
xor
outs
dec
cld
mov
add
sub
sbb
and
cmps
lods
sbb
mov
mov
cmp
pop
jl
movs
lods
sub
and
xchg
or
test
pop
sub
lods
fild
jb
xor
push
add
movs
repz
add
mov
repz
xchg
inc
pop
or
xchg
sbb
inc
adc
pop
add
arpl
das
xchg
adc
or
add
lods
inc
das
jne
shr
stos
mov
idiv
mov
movs
xlat
les
fdiv
test
inc
mov
jg
(bad)
les
data16
popa
adc
(bad)
(bad)
rcr
dec
xor
lds
dec
push
xor
sar
inc
adc
add
xor
mov
jg
rcl
hlt
test
fs
test
movs
mov
inc
jno
iret
mov
pop
pop
jp
fadd
ficomp
push
loopne
xor
in
daa
add
int3
int3
(bad)
xchg
movups
or
xchg
sub
bound
call
xlat
push
inc
push
xchg
cld
adc
je
xor
ins
or
popa
cmps
xchg
idiv
loop
or
cmps
xchg
and
iret
push
mov
leave
dec
popf
movs
out
push
xor
adc
inc
cmp
scas
inc
adc
or
out
ds
aam
adc
aas
jbe
push
jecxz
retf
push
sub
add
test
adc
pop
jae
sbb
jecxz
xor
inc
popf
fmul
push
mov
xchg
lods
inc
inc
cs
sub
adc
cmc
xor
mov
sbb
jo
or
sahf
pusha
push
div
sub
test
mov
sbb
jo
in
retf
mov
loope
ins
fist
or
out
sbb
icebp
push
and
sub
inc
test
mov
mov
aaa
push
pop
push
cmp
(bad)
retf
inc
movs
or
push
js
xchg
stos
clc
dec
sbb
call
xor
dec
clc
push
and
and
pop
adc
mov
add
rol
adc
scas
adc
mov
or
test
shr
fmul
or
rol
les
aam
int3
cmp
adc
pop
sub
mov
xor
inc
rol
dec
and
outs
mov
adc
stc
shl
call
fistp
sbb
sbb
cmp
mov
test
inc
or
push
lods
pusha
pop
sti
and
fstp
mov
fisttp
add
adc
aam
ret
loopne
loopne
pop
mov
mov
push
push
imul
(bad)
sti
mov
and
je
imul
aam
stos
adc
cmc
loop
adc
mov
fsubr
ficomp
and
dec
push
ins
sbb
push
xchg
push
push
sbb
and
gs
inc
jns
and
ret
mov
ss
push
mov
popa
dec
rcl
jmp
mov
inc
dec
imul
push
icebp
call
mov
test
test
jmp
or
sub
out
mov
add
or
add
sahf
add
mov
push
jb
das
sbb
pop
add
cmp
adc
sub
pop
add
mov
pop
lods
mov
shl
mov
cmp
mov
das
inc
jne
or
mov
adc
and
and
and
test
cmovns
add
ror
cmp
add
sti
lock
mov
cmp
pop
pushf
inc
pop
mov
jnp
div
pop
inc
dec
adc
xchg
push
adc
popf
pop
dec
add
fcmovbe
mov
sub
sub
popf
imul
jne
jno
add
pop
test
xchg
mov
cmps
xlat
dec
xchg
sbb
xor
adc
mov
jne
mov
pop
jg
push
sbb
add
mov
ins
sbb
or
shl
pop
test
or
push
adc
adc
inc
or
ds
fmul
aaa
add
mov
adc
adc
jle
inc
cmp
inc
or
sbb
and
shr
inc
add
inc
rol
push
sbb
pop
cmp
adc
push
mov
int3
test
jmp
add
(bad)
fcomp
cdq
lea
or
cmp
or
sub
add
lea
sub
or
fidivr
jbe
push
jle
adc
in
ins
dec
inc
add
push
or
outs
push
fnstcw
pop
xor
ja
adc
es
mov
inc
adc
mov
or
dec
mov
outs
inc
xchg
test
stos
inc
dec
jb
jle
cmp
mov
add
pop
ltr
dec
xor
pop
mov
sub
sar
inc
xor
rcr
rcr
jge
(bad)
adc
push
lock
dec
jne
int
mov
adc
shl
adc
jmp
adc
sahf
mov
das
das
lea
push
sbb
mov
xchg
cmp
arpl
loopne
mov
outs
icebp
jns
sbb
dec
inc
fdiv
pop
inc
cmp
or
mov
pop
or
or
xchg
scas
and
sub
and
repz
mov
jecxz
fisttp
daa
mov
test
lods
dec
add
icebp
or
sub
mov
xor
jp
pop
fdiv
test
sbb
stc
adc
cmp
les
rcr
xor
jecxz
std
add
nop
or
add
xor
jns
mov
js
sub
jb
and
jge
pop
pop
sbb
inc
test
mov
jbe
pushf
in
in
outs
or
cwde
xor
pop
nop
jecxz
xchg
push
sbb
pop
mov
dec
fnstcw
jmp
js
and
lahf
dec
or
sar
shr
mov
ins
cld
fsubr
ss
mov
adc
shl
loopne
lock
cmp
jne
js
mov
fist
sub
repnz
cmp
fnstcw
rcr
pusha
rcr
pop
pusha
sub
and
adc
push
ficomp
aaa
xchg
test
xor
out
add
or
in
sahf
dec
push
dec
add
push
xchg
movs
loopne
sbb
cmps
mov
adc
fcomp
scas
xchg
ins
pop
push
inc
pop
enter
or
add
xor
or
pushf
and
xor
inc
sahf
xor
movs
lds
or
imul
xchg
and
dec
rol
sbb
test
mov
test
mov
add
popa
and
add
mov
data16
lock
pop
adc
test
lea
and
xor
test
enter
and
inc
xor
xor
dec
sub
mov
push
scas
ret
mov
in
mov
inc
mov
cdq
icebp
push
into
ret
mov
lock
cmp
ret
test
push
or
or
fcom
xchg
or
xchg
xor
xor
fwait
aam
inc
(bad)
xchg
hlt
call
jecxz
out
mov
mov
cdq
cmp
jo
icebp
shl
xor
sub
pop
call
add
or
fs
inc
sbb
cmp
pop
add
fadd
fisttp
leave
add
add
add
jecxz
dec
sar
mov
call
xchg
add
dec
shr
add
mov
(bad)
lods
xlat
pop
adc
mov
iret
add
fcom
imul
pop
pop
mov
ss
stos
fadd
sbb
push
sub
retf
jmp
mov
fdivr
jl
inc
test
cli
sub
add
xchg
mov
cdq
push
xor
fimul
mov
adc
ins
xor
inc
add
popf
xor
mov
in
sub
out
xchg
and
push
nop
popf
cmps
aam
adc
jb
inc
aaa
ja
fsubr
cld
add
pop
sar
leave
adc
dec
inc
pop
push
push
jo
addr16
mov
push
jo
imul
push
enter
xor
jns
sbb
dec
push
(bad)
push
add
add
mov
cmp
movs
in
cmp
les
in
rol
in
gs
jle
cmc
mov
dec
xchg
adc
xlat
push
test
cdq
inc
pusha
enter
add
outs
cmp
outs
mov
xchg
cmp
push
cmp
push
add
xor
inc
jno
call
mov
pop
movs
inc
pop
ret
push
add
sbb
cmp
lea
sbb
mov
xchg
push
sbb
fidivr
xchg
adc
test
xchg
lahf
adc
xor
ret
mov
inc
xchg
dec
shl
pop
movs
rcr
pop
dec
call
test
mov
sbb
pop
test
jecxz
jmp
lahf
mov
xor
ret
mov
mov
(bad)
loope
xchg
mov
stc
ins
cmps
adc
mov
jb
cmp
idiv
xchg
pop
xchg
or
xor
add
add
push
push
xor
add
paddusb
push
ret
nop
push
add
or
mov
mov
mov
setb
nop
mov
sbb
pop
enter
sub
test
sub
clc
dec
push
ins
pop
cmps
add
mov
sub
lea
stos
cdq
imul
ret
sbb
imul
stos
push
adc
sbb
sbb
sbb
fwait
pusha
(bad)
iret
inc
or
push
pop
dec
or
inc
adc
cmp
das
mov
(bad)
movs
movs
call
sub
jle
xchg
jbe
sbb
pusha
xchg
data16
cmp
or
jmp
pop
iret
mov
and
mov
scas
movs
mov
cli
fcomp
in
ret
pop
mov
les
imul
xchg
dec
jmp
ss
das
outs
and
cmp
jge
cmp
or
sbb
xor
fadd
enter
add
fiadd
dec
iret
adc
mov
pop
lock
mov
or
and
fadd
arpl
cwde
dec
and
iret
aaa
inc
movs
sbb
shr
test
xor
data16
add
jno
jne
lds
jno
(bad)
movs
test
or
pop
sub
ss
sub
sub
jl
aad
pop
xor
push
cdq
mov
outs
sbb
adc
lahf
test
xchg
stos
ret
mov
das
scas
mov
xor
push
fadd
ss
xchg
xchg
pop
push
inc
in
imul
call
jns
inc
fdivr
(bad)
mov
mov
push
ja
or
out
aad
and
mov
add
ret
test
fsubr
dec
lock
and
xor
lock
in
add
cld
push
pop
sub
push
or
adc
adc
jmp
daa
pop
enter
dec
pop
and
adc
add
nop
sub
sbb
adc
sbb
hlt
leave
sbb
out
add
add
sbb
push
xchg
imul
and
aaa
in
(bad)
adc
sbb
inc
sbb
xlat
push
es
fadd
sub
mov
ss
call
leave
mov
add
add
xor
and
(bad)
clc
jnp
and
or
out
fucom
jo
loopne
adc
clc
fdiv
or
jo
adc
inc
jle
adc
inc
mov
lea
push
add
add
leave
adc
test
mov
adc
sbb
dec
ror
adc
inc
enter
sbb
xchg
dec
(bad)
mov
or
leave
mov
sbb
mov
dec
jb
repnz
enter
add
sub
hlt
and
push
mov
nop
nop
mov
movs
dec
cmp
or
mov
out
and
or
test
in
jb
add
or
sbb
cmc
imul
jo
enter
in
dec
mov
jb
psubq
inc
sub
mov
enter
mov
and
test
xchg
jecxz
and
push
xchg
dec
retf
mov
jo
mov
xchg
dec
cmp
dec
cs
cmp
xor
fs
sbb
xor
or
mov
leave
xchg
sbb
movs
sbb
ret
mov
xchg
add
adc
or
jb
dec
sbb
mov
adc
movs
xchg
mov
push
aam
in
xor
(bad)
jl
cmp
or
or
or
es
or
add
dec
adc
and
ror
add
sti
or
mov
sbb
pop
cmp
loopne
inc
rep
nop
add
(bad)
cs
pusha
and
jns
fsub
fsub
sbb
adc
jo
inc
stos
js
xlat
inc
dec
lea
pop
fiadd
xor
lds
pop
push
inc
pushf
outs
xor
jp
add
jae
loopne
sbb
std
mov
pop
pop
push
mov
loopne
les
mov
sub
and
loopne
sub
enter
test
movs
nop
(bad)
jae
fild
add
and
sbb
push
dec
lds
in
pop
xor
shl
inc
and
fidiv
push
push
sub
ss
adc
pop
sar
sbb
sbb
inc
mov
cld
mov
cmp
and
test
fcom
add
mov
(bad)
test
sub
push
pop
(bad)
sbb
adc
ror
cmovs
add
test
lock
mov
sub
and
dec
into
xor
(bad)
fcmovne
add
push
xor
mov
jb
pop
add
iret
dec
push
dec
retf
test
scas
leave
add
jno
ret
jo
das
test
push
das
mov
add
pop
icebp
(bad)
enter
jo
test
movs
jo
adc
mov
pop
and
imul
cmp
mov
add
leave
adc
or
adc
or
hlt
add
cs
inc
dec
dec
shl
cmp
inc
mov
clc
(bad)
mov
sub
xor
push
jb
clc
sub
cmp
xchg
inc
iret
xchg
inc
(bad)
aad
dec
ss
in
test
lds
int3
rcl
fdiv
inc
es
add
leave
adc
inc
xchg
inc
sub
sar
pop
adc
cmp
fadd
sbb
add
mov
pop
or
add
add
je
dec
sbb
in
neg
adc
add
push
(bad)
enter
push
rcr
stos
test
pop
or
xchg
and
push
mov
gs
pop
add
inc
leave
xchg
jne
jl
xchg
mov
jne
mov
or
int
cmps
cdq
or
mov
stos
shl
inc
jb
test
and
push
inc
pop
dec
and
xor
mov
jmp
lea
sbb
or
jne
jne
sub
and
inc
adc
pop
neg
adc
cmp
sbb
jns
or
mov
jg
les
dec
adc
add
add
xlat
mov
jmp
mov
cmp
xor
inc
fimul
or
xchg
neg
xor
dec
mov
add
and
pushf
xchg
add
ror
lds
sbb
xor
imul
in
inc
es
enter
aam
lock
jbe
cdq
sbb
cmp
(bad)
nop
imul
xor
mov
xchg
pop
enter
mov
cmp
test
dec
xor
lock
add
or
mov
popa
xor
test
mov
cmp
mov
inc
int3
or
mov
sub
fild
sub
sbb
scas
jp
and
sub
aaa
mov
sub
fisub
add
xor
fs
imul
(bad)
mov
arpl
hlt
shr
add
ret
inc
pusha
cdq
inc
adc
jb
sub
dec
push
in
and
mov
cmc
add
push
out
dec
mov
xchg
sbb
popa
lock
sub
inc
shr
enter
push
push
pop
and
sub
shr
mov
cwde
mov
mov
(bad)
sbb
adc
jle
or
loopne
push
in
xchg
or
adc
cmp
shr
sar
jmp
daa
test
test
ret
xor
and
adc
xchg
fiadd
dec
ins
icebp
push
loopne
add
(bad)
int
cld
adc
imul
adc
mov
cwde
or
xor
jecxz
mov
enter
or
sbb
ror
call
xchg
push
mov
jns
sar
nop
nop
lds
or
div
je
push
and
inc
(bad)
adc
fcomi
inc
fdivr
rcr
imul
or
cmp
sar
add
sbb
pop
sbb
mov
pop
sbb
inc
jb
fmul
inc
jns
pop
fdiv
or
push
mov
dec
shl
sub
repnz
or
ror
or
push
ret
aad
cmp
adc
pop
jo
jg
adc
and
and
cs
sub
mov
repz
add
daa
imul
jge
or
daa
in
mov
ins
dec
mov
xchg
and
jo
test
daa
mov
mov
inc
int3
xor
push
shl
xchg
stc
int3
and
aaa
int3
add
test
aam
retf
sbb
push
mov
mov
inc
add
loopne
jnp
sbb
test
cmp
add
xchg
jo
das
fsub
jbe
xchg
(bad)
test
fst
clc
(bad)
aas
cmps
(bad)
add
adc
or
or
mov
push
and
lods
push
test
mov
in
mov
clc
stos
adc
adc
inc
lock
gs
add
fwait
pop
lds
dec
mov
xchg
mov
lods
retf
pop
push
arpl
retf
push
mov
push
or
ins
cmp
movs
sti
push
test
ins
jmp
rol
or
xchg
scas
jge
push
jecxz
dec
imul
inc
inc
popa
inc
mov
pop
imul
and
loopne
adc
add
fwait
push
stos
pusha
inc
adc
dec
in
retf
and
fistp
in
pop
clc
mov
mov
jb
and
jle
in
jno
mov
jle
inc
or
sar
xchg
mov
cmp
call
and
mov
fucom
add
add
push
rol
mov
push
push
loope
mov
cld
les
adc
inc
sahf
xchg
cmp
call
xchg
xchg
cmp
es
fild
and
mov
cwde
rcl
inc
pushf
or
push
js
mov
inc
cmp
push
pop
test
or
jbe
nop
push
and
in
push
std
or
push
inc
int3
push
pop
add
adc
cmps
je
cld
and
test
jmp
and
and
dec
(bad)
sub
xor
mov
dec
shl
adc
sbb
push
add
shl
loop
add
push
cmp
adc
adc
imul
jg
mov
or
in
sub
lea
test
sub
sar
adc
sbb
test
mov
or
movs
gs
add
jbe
jae
(bad)
jns
sbb
jge
sbb
rcr
movs
call
js
adc
add
jge
pushf
pop
sbb
popa
dec
add
mov
movs
loopne
jnp
push
add
xchg
push
pop
pop
add
jp
sbb
jo
(bad)
adc
push
jmp
pop
pop
add
push
fdiv
add
sub
xor
pop
adc
add
fnstsw
add
xchg
mov
or
or
xor
cmps
jo
std
pop
shl
push
ret
adc
test
jne
sbb
movs
mov
push
frstor
(bad)
sbb
nop
pushf
inc
les
mov
pop
not
pop
gs
sbb
pushf
imul
cmps
dec
fdiv
das
sub
xor
xchg
xor
and
aam
test
inc
gs
lock
or
cdq
fs
adc
jne
xor
call
aad
and
sub
and
push
add
gs
and
jo
xor
pop
fisub
cmp
arpl
dec
push
or
(bad)
frstor
xchg
pop
neg
cmp
cmp
xor
sbb
ret
enter
cmp
cmp
add
mov
pop
pop
in
jns
les
xchg
cmp
fst
xchg
push
sbb
out
sbb
call
lods
mov
adc
xchg
sbb
iret
mov
fild
mov
or
dec
and
repnz
dec
lods
lea
bound
pop
pop
es
adc
call
add
adc
in
retf
and
xchg
icebp
movs
and
adc
nop
and
xor
sahf
cmps
test
dec
inc
push
ror
mov
lock
jecxz
test
jnp
adc
adc
dec
pop
xchg
test
mov
rol
push
pop
mov
mov
ins
test
add
mov
enter
loopne
outs
xlat
jl
je
push
inc
aaa
mov
xor
add
imul
dec
xor
jmp
or
dec
push
push
pusha
inc
mov
(bad)
sbb
sub
bound
fild
jge
test
push
mov
je
add
xor
rol
or
out
loop
retf
js
and
and
popf
fcom
jge
loopne
fisttp
sbb
and
pop
pop
pushf
loopne
shr
cdq
sar
mov
es
rol
imul
add
add
icebp
call
mov
push
xlat
iret
out
dec
sahf
retf
addr16
and
cmp
adc
imul
xor
jge
pop
repnz
addr16
pop
pop
adc
adc
inc
sahf
mov
pcmpgtw
je
movs
paddusb
or
push
gs
leave
fcom
imul
push
inc
xchg
ror
or
push
push
pop
fstp
mov
mov
add
inc
sub
sbb
pop
pop
or
lods
xchg
sub
xor
out
in
ret
nop
jo
enter
inc
sbb
add
fwait
mov
xlat
fst
push
mov
inc
push
stos
test
sbb
cmp
xlat
and
hlt
jne
push
jmp
inc
add
pop
stc
jecxz
adc
lods
popa
mov
mov
push
(bad)
shl
leave
inc
xchg
hlt
mov
pop
mov
ror
sbb
mov
add
or
add
xchg
stc
mov
mov
add
jne
int
adc
(bad)
stos
movs
outs
mov
add
sbb
add
adc
adc
or
fidiv
div
xor
lods
dec
pop
lods
push
imul
jle
je
mov
cld
movs
sbb
cmp
add
mov
call
inc
jl
mov
jmp
loopne
and
jg
and
js
pusha
push
inc
or
bound
sub
add
sbb
sbb
inc
dec
fisttp
pop
and
add
push
call
arpl
mov
in
lods
jg
sbb
sti
sbb
add
sbb
mov
inc
xchg
adc
nop
and
sbb
push
leave
and
add
push
add
mov
pop
sbb
pop
add
sub
xchg
jmp
or
xchg
mov
jmp
pop
sbb
pop
outs
sbb
xor
in
call
nop
(bad)
xor
in
adc
mov
mov
lods
push
sbb
fadd
jb
mov
aam
fs
add
pop
popa
sbb
sbb
rcl
enter
fs
mov
cdq
mov
add
mov
mov
leave
lods
lods
and
add
fmul
pop
rol
jne
and
fs
sub
movs
movs
mov
imul
mov
add
xchg
cwde
cwde
and
nop
nop
fimul
inc
ror
daa
add
mov
jl
ins
pusha
mov
sbb
js
xor
push
xor
jo
add
ins
test
or
jb
and
sbb
cmp
js
xor
xor
jmp
push
push
fs
clc
cwde
dec
fs
in
add
shl
nop
retf
pop
pusha
sbb
call
or
pop
stos
adc
jne
(bad)
mov
jl
inc
test
mov
or
add
xchg
fiadd
loope
adc
fcomp
shl
popa
mov
jne
loope
jb
xchg
jmp
bound
dec
rcl
dec
cmps
jecxz
pop
lds
mov
dec
fadd
cmp
push
inc
cs
sbb
nop
inc
xor
cmp
cmp
pop
add
aam
xchg
push
cmp
pop
cmps
mov
jnp
loopne
inc
sbb
push
cmp
xchg
inc
and
arpl
dec
pop
adc
(bad)
and
xchg
and
imul
and
sub
lds
sub
retf
xchg
dec
cli
and
cwde
push
sub
(bad)
sbb
arpl
jecxz
arpl
stos
cmps
and
(bad)
or
mov
out
push
mov
repnz
or
ffreep
add
xchg
cwde
cmp
inc
stc
cs
adc
in
pop
inc
sbb
sbb
xlat
or
adc
add
scas
sub
mov
xor
ficomp
pushf
test
and
cmps
pop
push
and
add
adc
cmp
xor
or
mov
push
push
lahf
int3
mov
sub
test
sbb
add
repnz
push
push
and
hlt
add
in
add
xor
cld
inc
mov
movs
dec
adc
fbld
hlt
adc
clc
std
dec
mov
and
bound
sub
mov
and
dec
cwde
mov
and
sbb
jmp
in
mov
jmp
dec
mov
mov
xchg
loopne
movs
sar
sub
sub
int
daa
xchg
adc
sub
enter
xchg
int3
shl
or
sub
lea
xchg
adc
addr16
and
sbb
aad
shl
pop
nop
les
cdq
jae
dec
push
fs
and
push
(bad)
adc
sub
sbb
xor
lods
lods
mov
xor
xor
and
aas
ins
les
popf
xor
test
movs
in
cmp
sbb
add
mov
in
add
arpl
push
pop
xchg
xchg
adc
fdiv
push
sar
pop
sub
mov
leave
add
xchg
adc
pop
out
mov
sbb
sub
shr
add
and
je
mov
xchg
and
push
retf
jno
mov
mov
cmps
inc
sub
mov
dec
cs
adc
scas
fdivr
and
and
sbb
xchg
cmp
pop
mov
inc
sub
icebp
xchg
jo
adc
add
xchg
inc
ss
pop
xchg
pop
xchg
push
sbb
jge
mov
(bad)
adc
xor
mov
dec
fdivr
in
mov
cmp
xchg
ins
rcl
pop
adc
rcl
ror
(bad)
sbb
pop
push
dec
add
dec
call
sbb
jecxz
add
test
pop
(bad)
add
pop
rol
sbb
xor
mov
sub
pop
fisub
fstp
int
or
sub
clc
ret
add
push
int3
pop
pop
nop
pop
and
fstp
cmp
cmp
dec
pusha
enter
dec
add
add
add
lods
sbb
add
add
cld
ret
daa
imul
sub
add
mov
xor
popa
cmp
adc
inc
xor
inc
aam
jb
add
fld
dec
sub
and
in
lock
aad
sbb
and
pop
cmp
aam
or
mov
mov
mov
cmp
pop
in
call
in
inc
es
mov
jmp
xchg
jne
dec
mov
jmp
mov
(bad)
mov
xor
or
mov
sub
cwde
mov
fs
or
in
mov
mov
stos
ret
ss
sbb
stos
adc
std
adc
add
inc
(bad)
pop
xor
mov
cmps
cwde
ret
pop
je
jo
add
cmp
dec
adc
adc
xchg
das
inc
mov
xchg
xchg
gs
in
add
add
outs
mov
add
nop
push
test
in
loopne
and
es
leave
loopne
gs
call
pusha
mov
std
and
es
std
sbb
xor
mov
lock
xchg
mov
shr
mov
xchg
xor
stos
jne
mov
lahf
cmp
adc
in
add
rol
(bad)
mov
push
repnz
push
sbb
cmp
adc
mov
and
nop
push
pop
add
xor
mov
push
jp
and
ret
loopne
push
arpl
stos
shl
les
xchg
inc
adc
je
push
sub
aaa
gs
sub
daa
jo
fistp
push
repnz
add
lods
dec
jp
in
es
mov
mov
or
and
inc
in
ss
aad
imul
adc
cwde
sub
imul
cmp
(bad)
adc
push
push
mov
mov
pop
leave
add
mov
mov
nop
sub
cmp
pop
push
jmp
rol
hlt
pop
cmp
lock
inc
sub
and
xor
adc
mov
sub
mov
fst
add
das
ficom
inc
or
dec
inc
push
add
and
mov
pop
out
add
jno
inc
outs
stc
pop
pop
inc
dec
xor
das
dec
ss
(bad)
stos
mov
test
or
push
jle
pop
and
push
retf
gs
and
dec
shl
push
rol
dec
inc
push
sub
jge
cmps
fdiv
fldcw
mov
mov
lds
cmp
pop
jmp
add
(bad)
jl
sub
repnz
push
jb
push
mov
sbb
mov
jecxz
adc
sub
lock
push
add
lods
jb
shl
test
sar
pop
or
sub
call
cmp
outs
fwait
test
add
enter
movs
or
lods
add
cmps
adc
mov
cmp
sbb
xor
retf
(bad)
fadd
sub
mov
rol
mov
mov
das
psubsb
and
imul
pop
and
mov
or
pop
(bad)
adc
test
scas
mov
imul
mov
and
jle
or
cmp
and
aad
sbb
mov
jmp
cwde
and
xor
mov
mov
and
pop
js
cwde
and
sub
sub
add
or
dec
sbb
shl
shl
dec
les
mov
adc
dec
pushf
mov
movs
and
or
jb
jnp
or
pop
add
pop
jl
ror
pop
es
rcr
mov
cmp
das
adc
add
mov
(bad)
ss
ss
dec
add
push
lods
ret
and
adc
adc
inc
jne
cmp
fsub
mov
mov
mov
add
fs
sub
xchg
add
add
ss
pushf
pop
sbb
dec
fsubrp
sbb
pop
pop
loopne
ds
outs
or
ret
leave
shr
push
adc
nop
xchg
push
dec
dec
add
fild
sub
movs
push
mov
dec
add
movs
push
push
lds
dec
lock
rcr
xchg
xchg
cmp
cmp
nop
dec
or
jo
pop
push
or
cs
xor
test
sub
inc
mov
fmul
inc
mov
fs
mov
gs
dec
push
cdq
pushf
loop
and
inc
pop
loope
pop
mov
pop
add
(bad)
(bad)
or
mov
sbb
mov
sbb
ret
push
sbb
sbb
push
mov
fwait
push
and
pop
movs
add
sbb
dec
add
daa
dec
cs
push
jne
add
jno
xchg
add
or
and
pop
pop
fldpi
add
add
xchg
and
lods
inc
dec
adc
ret
adc
loopne
push
aaa
pop
js
popa
sbb
popf
add
cs
add
cld
std
sub
aam
pushf
push
loope
lods
mov
clc
stc
nop
mov
imul
leave
test
or
mov
add
fsub
pop
xor
sub
fwait
loopne
loopne
push
scas
in
in
sbb
sbb
pusha
pop
addr16
xor
xor
rol
imul
adc
aam
pushf
(bad)
and
imul
popa
xor
fnstcw
mov
int3
or
mov
xor
int3
in
dec
xchg
retf
or
add
mov
push
outs
add
adc
sbb
dec
pushf
outs
fcomp
mov
pop
add
fs
add
stos
inc
push
int
xchg
mov
nop
pop
xor
lea
xor
jbe
inc
ror
aaa
jae
and
iret
xchg
cdq
pusha
in
mov
stos
add
leave
add
enter
jecxz
add
fmul
xchg
stos
push
adc
les
sub
push
aam
fsub
inc
inc
xchg
dec
into
cdq
jecxz
movs
jmp
cli
mov
or
mov
and
mov
or
test
sar
pop
xchg
rol
mov
xchg
push
nop
cmp
dec
mov
mov
adc
push
les
add
xchg
cdq
sbb
pop
scas
push
xor
adc
pop
sub
aad
gs
and
ja
jl
xchg
retf
sub
sbb
and
jb
je
or
js
loop
or
mov
add
adc
push
or
dec
dec
cmp
adc
dec
shl
inc
add
jo
lds
imul
es
sub
lds
mov
loop
xor
dec
adc
test
add
or
adc
scas
inc
std
add
loopne
adc
call
cs
gs
xor
cmp
icebp
sti
dec
dec
cs
sub
adc
sbb
mov
fdiv
push
sub
sub
enter
and
and
or
sub
dec
inc
mov
jo
pop
dec
sbb
and
dec
xor
push
jmp
sbb
push
add
rcl
mov
or
imul
fadd
mov
xchg
cld
cwde
or
imul
cld
cld
adc
in
leave
ret
clc
cld
adc
jb
pop
pop
or
adc
mov
push
xchg
sbb
fst
adc
call
pop
sbb
xchg
add
and
dec
loopne
or
arpl
jno
jecxz
inc
sub
jmp
shl
dec
fcomp
xor
xchg
int3
add
enter
in
and
enter
push
je
push
int3
test
loope
add
add
mov
loopne
dec
xor
xchg
sbb
xchg
mov
ss
outs
leave
cmp
fist
or
popf
adc
inc
or
xchg
retf
or
fs
add
cmp
sub
pop
mov
fstp
cmp
or
mov
nop
xchg
add
leave
and
pop
mov
xchg
mov
test
fild
mov
adc
js
mov
js
js
dec
es
inc
sbb
fwait
mov
fld
stc
xor
push
add
xchg
ins
test
ja
shl
test
stos
icebp
inc
les
loope
pusha
sub
pop
pop
xchg
mov
push
inc
enter
push
rcl
pop
and
sbb
pop
rdtsc
xchg
sub
enter
jbe
mov
add
call
mov
and
sti
push
xor
jmp
mov
cmp
in
mov
and
mov
inc
push
add
dec
and
inc
mov
sbb
mov
imul
xor
mov
or
test
mov
inc
xor
data16
or
cmp
cmp
fs
add
push
add
dec
inc
mov
push
inc
xor
xchg
or
inc
pop
and
fld
repnz
sbb
sbb
xor
and
loopne
adc
adc
inc
cs
(bad)
or
retf
sbb
enter
or
or
and
sbb
add
pop
lock
lods
sub
nop
or
aam
cmp
mov
adc
pop
clc
sti
sbb
gs
test
jo
std
pop
jbe
and
or
sub
sti
adc
or
or
fwait
add
inc
loopne
outs
test
xchg
jle
sti
call
cmp
adc
and
(bad)
sbb
push
pop
xchg
or
adc
aam
jo
pop
inc
sbb
test
ror
cld
popa
movs
and
int3
enter
jo
adc
mov
xchg
add
inc
and
mov
jb
les
mov
and
pop
scas
and
inc
mov
push
mov
shl
lods
fld
push
jo
stc
movs
test
sub
and
dec
push
pushf
pushf
mov
mov
push
enter
sub
(bad)
mov
jb
xor
mov
adc
loopne
sbb
leave
test
pop
jl
jl
in
add
js
xchg
dec
push
js
cmp
stc
add
cmp
pop
jae
inc
mov
mov
adc
jbe
jmp
pop
(bad)
ins
add
and
ins
sbb
push
sub
inc
mov
dec
xor
fs
and
sbb
lds
add
call
stos
popa
inc
inc
pop
xlat
pop
ss
sbb
add
and
rcr
add
push
test
push
xor
push
push
mov
(bad)
sbb
enter
inc
fld
ret
xchg
sbb
test
push
shr
xor
adc
cs
add
das
jmp
or
jo
or
xor
or
push
mov
outs
(bad)
fadd
leave
dec
js
inc
or
inc
popf
and
ret
cvtps2pi
jno
mov
sub
in
push
(bad)
pop
add
adc
pop
fadd
xchg
and
add
pop
test
add
sbb
pop
ret
je
xchg
add
sub
xor
inc
cs
pop
push
and
jns
lds
adc
ds
cld
out
or
jg
cmps
pop
fdiv
or
dec
cwde
or
mov
mov
enter
bound
sar
sti
popf
mov
dec
sti
xor
push
push
push
mov
outs
xchg
xor
or
out
xchg
inc
mov
adc
cs
inc
rcl
mov
sbb
cmp
pop
or
pop
int3
cld
cli
pop
es
sbb
add
add
or
adc
and
adc
mov
in
leave
in
lock
sbb
jmp
das
pop
daa
stos
cmp
sbb
movlps
adc
xchg
mov
inc
jb
les
dec
loop
cmp
mov
test
cmp
lock
scas
xor
lods
mov
mov
lahf
and
inc
in
jle
add
mov
dec
loope
adc
add
sar
mov
inc
fst
enter
test
adc
add
lock
je
sbb
out
inc
fmul
xchg
outs
push
jbe
adc
adc
sbb
scas
or
pop
sub
dec
sbb
aam
push
mov
movs
or
mov
inc
stc
ins
dec
pop
fs
pop
cs
sub
xor
sar
cli
sti
sti
and
push
mov
fs
retf
add
nop
inc
inc
arpl
ss
push
mov
fisubr
jns
stc
and
or
mov
or
cld
shl
mov
add
js
xor
dec
nop
xchg
test
mov
(bad)
push
or
clc
cld
inc
push
ret
mov
add
add
cmp
xor
dec
dec
enter
inc
inc
sahf
jecxz
leave
inc
adc
xor
xchg
imul
ins
xor
ja
(bad)
push
daa
or
imul
or
pusha
sub
pop
out
out
push
mov
or
sbb
daa
sub
adc
sub
out
repnz
push
cs
and
rcl
pop
add
add
and
mov
out
push
rcr
fincstp
add
or
dec
call
push
dec
gs
dec
ss
xchg
stc
adc
cwde
loope
add
test
mov
sbb
enter
mov
test
mov
xor
push
enter
(bad)
mov
jb
adc
bound
sbb
les
add
call
add
or
xor
and
and
inc
and
aam
je
adc
fsubr
add
mov
lods
mov
adc
adc
shl
je
clc
pop
sbb
fs
and
imul
add
and
xchg
sub
movs
jge
inc
addr16
xchg
sahf
pop
es
std
xchg
cld
mov
sti
std
pop
rol
jae
and
movs
add
cmp
add
and
enter
fld
je
and
aas
pop
(bad)
sbb
add
sbb
push
push
xchg
or
movs
aaa
mov
ins
or
mov
movs
xchg
pop
nop
daa
inc
add
sti
push
and
ret
add
and
pop
push
adc
sbb
frstor
in
xchg
call
in
dec
in
loopne
ss
dec
loopne
fsub
cdq
nop
or
xor
mov
add
test
and
and
mov
adc
ret
push
in
xchg
enter
push
in
dec
les
rol
inc
dec
rcr
outs
test
pushf
dec
mov
pop
enter
rol
enter
adc
lods
test
test
test
dec
test
cdq
and
nop
xchg
add
add
(bad)
pop
daa
adc
mov
xor
leave
add
pop
jge
adc
daa
shr
adc
add
cmp
adc
cdq
push
sub
rol
push
mov
repz
push
push
xchg
dec
fs
add
and
xlat
inc
imul
inc
nop
dec
push
in
pop
xor
sbb
or
sbb
add
inc
mov
enter
dec
dec
dec
xor
xchg
xor
or
xchg
xor
sbb
or
sbb
cmp
int3
add
xor
add
lea
inc
inc
imul
in
sub
add
aaa
add
and
inc
pusha
jne
fsubr
cmp
cmp
cdq
fs
adc
inc
mov
sar
lds
push
adc
cmp
push
stc
inc
or
fs
or
add
inc
pushf
xchg
add
add
sbb
mov
das
adc
inc
clc
(bad)
xor
daa
or
add
cmp
test
mov
sbb
add
or
sbb
inc
imul
xor
call
dec
leave
in
add
test
push
inc
imul
in
fadd
cmps
fs
aam
inc
pop
and
sub
add
in
enter
es
les
xchg
dec
push
rol
push
mov
adc
pop
mov
leave
xor
mov
push
xor
add
xor
inc
movs
mov
push
dec
pop
and
imul
or
jbe
xchg
mov
dec
push
fs
jle
add
test
inc
dec
rol
add
xchg
add
mov
and
(bad)
push
pop
and
add
add
and
in
js
je
and
leave
je
and
or
cmp
inc
cmp
fs
rcl
add
cdq
or
aam
cmp
in
add
push
jo
leave
and
pop
push
inc
adc
push
in
cmp
sbb
cmovl
inc
test
inc
pop
xor
xchg
fcmovnu
mov
push
xchg
shl
fisub
imul
xor
pop
sub
hlt
add
cwde
pop
add
aam
into
aad
and
xor
repnz
rcl
push
push
rol
push
rol
or
jmp
mov
mov
sbb
xchg
fldcw
hlt
test
lock
aam
aad
stc
add
sbb
mov
adc
mov
add
pop
ret
test
and
add
lods
push
pusha
enter
je
xchg
inc
sbb
mov
and
call
ds
mov
lods
jns
add
lods
sahf
fs
es
lods
mov
dec
lods
or
push
fs
fucomi
fs
test
scas
test
and
mov
cmps
xor
and
loop
push
pop
sub
(bad)
cmp
add
add
imul
lock
fs
cld
call
mov
jge
call
adc
sahf
cmp
push
popa
ja
jne
cmp
add
jb
int3
aam
sub
adc
fmul
add
cmps
xchg
xchg
test
mov
pop
pop
pop
xor
add
nop
or
dec
loopne
dec
or
shl
inc
arpl
in
or
and
enter
and
mov
rcl
in
rcr
sub
mov
aam
jae
mov
inc
fdivp
xchg
sbb
outs
xchg
sbb
fsub
sbb
mov
cwde
adc
or
xchg
add
inc
pushf
sbb
xchg
sbb
inc
iret
aam
out
mov
add
pop
out
add
mov
push
cmp
dec
push
fiadd
xchg
fld
and
sub
int3
adc
hlt
mov
jo
mov
push
and
shl
adc
and
and
mov
xlat
repz
mov
add
cmp
mov
(bad)
imul
js
icebp
push
cwde
inc
(bad)
adc
and
retf
dec
jge
cdq
jle
sub
fld
rol
push
inc
fs
push
or
hlt
cdq
sub
imul
add
add
stos
sub
mov
pop
pusha
and
xchg
pop
xor
lock
sbb
mov
mov
outs
adc
adc
ins
lock
jo
sub
lock
dec
out
scas
in
mov
pop
sbb
mov
ret
inc
xchg
and
dec
sbb
ja
or
and
hlt
and
mov
add
call
push
ret
or
xor
push
sub
aam
sbb
popf
ret
ror
add
and
or
das
stos
adc
jnp
ret
and
cmp
inc
hlt
ror
sub
(bad)
movs
adc
fsub
xchg
dec
xor
cmp
jb
dec
sar
lods
xchg
xchg
stos
add
cli
js
cmp
sbb
add
cmps
clc
ins
xor
imul
aam
push
inc
sbb
adc
nop
jl
cmp
push
cmps
data16
mov
cmc
add
jbe
fs
clc
xor
adc
push
inc
mov
push
sbb
adc
inc
or
rol
and
inc
adc
imul
or
and
icebp
adc
add
fld
jno
inc
cld
fild
inc
mov
mov
stc
fmulp
pop
dec
sbb
cmp
mov
pop
mov
ins
pop
xor
push
sub
or
dec
popa
sbb
dec
inc
mov
shr
(bad)
add
ror
adc
or
sub
sub
sub
(bad)
(bad)
aaa
lock
test
push
push
(bad)
or
push
repnz
pop
add
in
push
or
sbb
repz
add
ds
pop
xchg
inc
xchg
and
xchg
daa
adc
(bad)
sub
push
enter
daa
mov
das
push
fisub
mov
ror
xchg
imul
xchg
push
out
mov
or
or
frstor
sbb
cmps
mov
push
mov
test
adc
add
pop
and
or
lods
rcl
sub
lahf
cmp
and
popf
dec
or
(bad)
inc
jg
in
in
(bad)
cmps
push
adc
sub
mov
pop
pop
cmps
xchg
iret
aad
(bad)
sub
fadd
push
fild
add
add
add
mov
rcr
sbb
test
dec
imul
fild
iret
xor
cli
jnp
cmp
mov
add
mov
cmp
popa
ins
pop
nop
adc
add
bound
popa
adc
mov
aad
push
xor
jne
dec
and
sbb
add
aam
(bad)
aad
mov
xchg
dec
xchg
mov
sub
mov
rcl
adc
jne
dec
adc
mov
adc
xchg
das
cmp
daa
(bad)
jmp
movs
daa
mov
cmp
mov
cmp
int
xor
daa
leave
add
adc
adc
clc
pushf
shr
inc
imul
push
es
clc
ficom
mov
add
push
add
and
pop
imul
int
or
out
jle
jnp
fwait
dec
pop
add
cs
or
dec
lock
int3
int3
or
xchg
in
pusha
inc
cmc
ins
rol
les
or
inc
inc
dec
shr
pop
leave
jp
mov
push
iret
cmp
popf
jmp
xchg
and
pop
leave
fiadd
lea
xlat
xchg
jo
and
push
out
or
call
or
xchg
cmp
movs
or
adc
repz
add
or
sub
pop
fbstp
mov
fisttp
mov
cmp
adc
mov
push
mov
dec
outs
gs
jb
lods
lods
mov
int3
les
jmp
(bad)
cmp
push
ins
test
or
inc
test
xchg
sbb
mov
sub
jb
and
jo
nop
loop
nop
pop
and
test
xchg
jno
test
dec
call
ret
mov
lahf
jb
out
inc
or
push
aas
add
xchg
jo
ins
xor
inc
es
arpl
test
mov
lds
ins
push
cmp
movlps
(bad)
mov
sbb
jo
movs
ror
jno
xor
in
inc
inc
cmp
lea
inc
dec
pusha
inc
dec
push
mov
gs
jb
ja
adc
pusha
pushf
adc
sub
jo
ret
test
mov
add
xchg
cmc
movs
add
sub
test
add
std
ret
inc
xor
ret
in
or
sbb
mov
push
jge
jg
pop
add
loopne
pop
push
inc
dec
arpl
lods
shl
inc
iret
push
mov
dec
out
add
mov
sbb
add
outs
xchg
mov
leave
add
cmc
fnstsw
(bad)
cmp
mov
xchg
lea
scas
and
ret
rol
inc
lods
inc
mov
sbb
rol
aam
push
sub
add
push
mov
movs
or
aam
or
fnstsw
xor
dec
sbb
rol
out
cmp
mov
test
retf
jb
sub
xchg
fistp
inc
outs
cwde
movs
mov
cwde
pusha
mov
add
adc
call
xor
outs
pop
sar
fstcw
mov
jne
mov
push
jns
push
call
or
mov
mov
es
popa
xor
ins
sahf
bound
sbb
test
mov
int
repz
nop
xchg
lods
sbb
popf
mov
pop
or
arpl
test
mov
sub
add
(bad)
dec
mov
cmp
adc
push
cmp
(bad)
sbb
mov
mov
mov
xor
jo
fadd
pop
loop
test
sbb
mov
(bad)
sub
xchg
xor
or
and
add
pop
loopne
call
push
dec
jp
xchg
sub
and
imul
dec
fst
mov
push
repnz
dec
(bad)
ins
jnp
adc
outs
sub
pop
cmp
and
cmp
inc
shr
jnp
in
push
jbe
mov
add
std
mov
add
out
outs
nop
adc
dec
dec
cmp
lods
and
jmp
xor
pop
sub
dec
popa
pop
adc
mov
inc
add
pop
adc
sbb
and
adc
cmp
fs
test
je
lods
adc
sub
xchg
test
add
inc
(bad)
adc
push
sub
inc
das
add
stos
or
iret
nop
mov
ja
fsub
pop
sub
ret
adc
mov
or
pop
inc
fimul
int3
jne
in
inc
or
add
mov
pop
pop
push
lahf
mov
mov
xchg
jns
cmp
mov
pop
mov
in
jno
outs
cs
sub
ins
mov
(bad)
(bad)
leave
xchg
push
gs
imul
fwait
sbb
push
mov
(bad)
push
pop
arpl
test
mov
xor
les
inc
inc
mov
adc
lods
dec
mov
sbb
outs
mov
fcmovb
stos
cmps
inc
or
shl
push
nop
xchg
mov
or
xchg
jns
repnz
fld
mov
fmul
add
test
das
mov
cmp
dec
int
inc
cmp
mov
cld
xor
dec
je
push
push
fs
fs
pusha
add
adc
push
sbb
and
nop
dec
pop
push
push
cmp
sub
repnz
inc
cmp
dec
dec
stos
add
call
daa
dec
es
xchg
retf
fs
add
inc
cmp
and
and
inc
xchg
xchg
shr
clc
retf
(bad)
cmps
inc
add
and
cmp
leave
rcr
aad
test
push
and
jno
enter
cmp
add
lahf
test
mov
sbb
mov
dec
icebp
adc
push
sbb
gs
jbe
(bad)
iret
mov
and
jmp
adc
repz
jo
bound
outs
addr16
retf
pop
ins
or
mov
ror
js
scas
test
adc
loop
fsubr
loope
jne
movs
(bad)
out
nop
scas
mov
pop
add
dec
jne
inc
sbb
and
xchg
imul
enter
in
clc
lods
dec
xor
adc
jmp
fimul
stc
fsubr
in
add
or
inc
cmp
clc
cmp
cwde
jo
sub
push
mov
add
xchg
out
jbe
retf
aam
inc
push
mov
pop
cwde
dec
test
lea
call
jp
inc
out
lahf
shl
(bad)
sbb
inc
add
dec
pop
pop
adc
jnp
or
push
aam
ror
bound
xor
adc
and
mov
pop
xchg
imul
and
add
push
pop
xchg
inc
inc
and
and
(bad)
cmc
and
es
sub
pop
pop
adc
adc
xchg
daa
xor
sub
and
jl
push
xchg
or
jecxz
mov
fistp
cwde
mov
or
push
rcr
push
iret
xchg
mov
and
movs
or
test
adc
cmp
or
mov
mov
pop
leave
fistp
aam
mov
dec
xchg
xchg
and
sbb
or
mov
mov
pop
jg
or
jne
aad
sub
sbb
ins
jns
repz
or
dec
inc
ja
subps
(bad)
jo
aas
and
push
add
sbb
xchg
aam
sbb
fsub
(bad)
dec
outs
(bad)
in
xchg
mov
xor
aam
or
movs
fstp
cdq
daa
cmc
inc
test
cmp
lock
add
dec
ror
jmp
mov
xor
mov
mov
arpl
ds
mov
sbb
test
rol
add
sbb
push
inc
mov
inc
aas
add
not
push
enter
mov
pop
pop
movs
pop
add
cmp
mov
mov
mov
nop
mov
jb
push
jno
fnstenv
mov
pop
add
mov
mov
or
or
add
and
xor
xor
add
or
xor
cli
dec
loop
adc
adc
or
add
neg
add
and
nop
add
push
ror
loope
addr16
inc
xchg
xor
(bad)
lock
out
mov
sub
pop
ret
sbb
and
push
push
or
std
retf
mov
mov
pop
popa
and
xor
pop
aad
pop
mov
jo
add
sar
inc
cmp
repz
repnz
iret
inc
dec
mov
lock
and
dec
stos
jmp
mov
sub
into
xor
mov
adc
(bad)
mov
add
loop
in
nop
adc
mov
js
cdq
(bad)
loope
ss
pop
ins
cld
pop
push
add
shl
jno
jmp
pop
mov
inc
popf
inc
mov
cs
mov
test
sbb
push
or
in
and
mov
sbb
repnz
xchg
dec
xchg
rcl
dec
xor
rol
movs
sub
inc
fs
and
cli
or
clc
xor
and
xchg
push
sub
ror
adc
mov
sbb
mov
outs
sbb
xor
out
ret
hlt
aam
inc
dec
ja
xchg
xchg
mov
xchg
dec
adc
xlat
or
(bad)
fbstp
pop
fiadd
pop
xor
scas
add
fld
iret
xor
and
cmp
push
jns
sbb
or
ja
xchg
sbb
jl
mov
loopne
mov
mov
les
xor
jbe
cmps
jge
fadd
pushf
fcomi
add
jge
cmps
test
shl
add
jle
push
in
mov
push
pop
adc
push
push
push
mov
xor
add
icebp
fldcw
mov
test
into
or
xchg
xor
ret
stos
mov
adc
add
call
add
cmp
mov
pop
test
push
fcom
add
shl
cwde
pop
stc
inc
call
mov
inc
xor
hlt
sbb
add
ins
fild
movs
or
add
das
add
test
xchg
adc
in
inc
pusha
pop
xor
sub
mov
jo
push
adc
sbb
test
les
xor
nop
jge
aas
and
jno
pop
sbb
xchg
dec
jg
sub
push
test
fsub
xor
lock
pop
ins
mov
clc
pop
xor
xchg
imul
inc
addr16
push
add
arpl
sbb
ins
loop
pop
jae
mov
push
mulps
js
or
int3
dec
ds
mov
movs
les
mov
pop
lahf
mov
adc
sub
mul
es
add
add
add
scas
xor
xor
test
loope
ins
and
sbb
xchg
cmp
add
and
or
leave
push
ret
or
mov
sbb
and
aas
push
cmp
ror
xor
push
call
inc
test
inc
dec
push
movs
movs
movs
popa
xor
dec
mov
dec
add
je
push
ins
mov
mov
pop
jb
retf
and
mov
nop
inc
sahf
call
push
fwait
mov
xchg
mov
dec
jne
aas
imul
es
int
add
dec
mov
sub
dec
cld
dec
xor
bound
cmps
push
pop
pop
outs
ror
jns
mov
and
cwde
mov
mov
and
or
mov
repnz
xor
loope
inc
sub
or
outs
dec
jnp
inc
sub
or
add
jp
pushf
lea
add
mov
imul
add
mov
cmp
mov
cmp
mov
gs
fisubr
sbb
adc
xchg
cmp
movs
add
cmp
pop
push
push
js
(bad)
or
and
adc
dec
mov
popa
push
xor
icebp
jns
aaa
sbb
mov
loopne
push
mov
test
mov
sub
mov
test
mov
jmp
add
int3
push
jge
sub
es
fcomi
jmp
sub
adc
cwde
and
hlt
fxam
ret
nop
xor
sbb
or
pusha
mov
ror
dec
push
repnz
push
pop
mov
mov
xchg
or
sub
daa
push
mov
call
xor
cld
mov
dec
inc
test
mov
ins
in
lea
mov
or
(bad)
shr
sub
popf
mov
push
rcr
mov
gs
ins
xchg
mov
mov
mov
and
cmp
and
addr16
mov
push
rol
adc
push
stos
and
push
mov
cmp
add
dec
mov
mov
or
xchg
or
(bad)
or
imul
nop
cmp
jo
call
xchg
adc
jo
(bad)
fcom
cmps
pop
adc
lods
pop
xchg
cmc
jl
inc
add
add
cmps
loopne
std
test
mov
shr
out
out
pop
and
push
ds
lea
lock
out
add
mov
hlt
add
add
icebp
fidiv
mov
sbb
in
dec
adc
shl
pushf
js
int3
mov
sub
mov
pop
in
dec
int
and
mov
mov
and
call
xor
sbb
adc
pushf
out
aam
mov
cdq
fcmovnbe
fsubr
(bad)
xor
shr
sbb
or
mov
xchg
pop
les
in
xor
fisub
stos
add
rcr
popa
jp
dec
mov
add
push
and
(bad)
(bad)
les
xchg
jne
jno
adc
or
rcr
sbb
adc
push
and
dec
ror
pop
add
add
inc
xor
adc
mov
dec
mov
add
xchg
cs
push
xchg
(bad)
push
ret
bound
call
retf
mov
dec
xor
inc
inc
adc
fs
pusha
xor
rol
jne
repz
mov
pop
inc
xor
mov
jno
in
cmp
leave
pop
mov
fidiv
shr
test
pop
sbb
clc
mov
popf
pop
rol
jmp
test
inc
js
xor
test
mov
mov
dec
or
lds
les
sbb
xor
sub
dec
sbb
sbb
cmps
pop
jge
retf
mov
(bad)
lods
push
push
push
js
or
sub
je
pop
shl
dec
add
out
and
ret
sub
fsubr
dec
sub
or
adc
call
stos
and
add
pop
lods
int
shr
dec
js
cmps
jno
retf
test
data16
inc
movs
fwait
add
mov
push
push
dec
inc
mov
pusha
jne
jp
xor
inc
aaa
sbb
sbb
sbb
add
imul
ds
jge
push
push
into
inc
popa
ins
mov
sbb
lea
add
shr
and
add
adc
lea
xor
rol
aaa
icebp
test
mov
dec
sbb
push
dec
cmp
pop
mov
loopne
stos
sub
jmp
fwait
jo
mov
mov
inc
pop
ins
movs
or
retf
xchg
xor
and
rcl
pop
lods
inc
loopne
cmp
add
ins
and
test
xor
loope
or
ja
je
push
sbb
ror
in
xchg
sub
inc
xlat
pop
push
mov
mov
push
mov
sti
les
(bad)
das
les
adc
sbb
ret
adc
jno
pop
(bad)
retf
pop
push
ss
cmp
add
adc
push
push
hlt
cmp
sub
dec
scas
lods
adc
stc
nop
add
jge
fild
lea
adc
cs
fwait
jle
inc
mov
push
das
pop
movs
inc
mov
rol
cmps
sbb
bound
adc
pop
sar
xchg
xor
ficom
sbb
mov
sbb
rol
out
mov
xchg
or
cmps
loopne
push
cmp
sbb
dec
mov
mov
sub
cmps
push
pop
enter
(bad)
sbb
and
cmp
adc
and
and
or
inc
xchg
rcl
or
add
sbb
std
pushf
inc
mov
xlat
rcr
scas
ins
pushf
mov
add
xchg
mov
inc
or
rol
(bad)
leave
inc
outs
push
outs
imul
ret
lods
xchg
inc
sbb
sub
pop
add
dec
leave
out
mov
push
push
call
psrad
fwait
xchg
arpl
push
xchg
xchg
adc
inc
and
cdq
add
popf
dec
and
or
dec
or
fwait
not
add
shl
mov
jbe
repz
adc
scas
mov
or
push
je
clc
pop
cmp
scas
jmp
ss
loopne
sbb
jmp
and
int3
adc
jl
aaa
fsubr
sbb
xor
pop
shr
cmp
pusha
je
adc
ret
and
(bad)
cmp
mov
leave
add
pop
fdivr
test
xchg
daa
mov
ins
test
iret
sbb
add
mov
fs
iret
(bad)
les
mov
or
sbb
or
adc
and
cmps
push
ins
mov
or
pusha
sbb
or
inc
and
adc
mov
movs
push
and
and
cmp
add
stos
inc
imul
push
pop
adc
loop
enter
push
xor
dec
adc
mov
xor
mov
cmps
pop
adc
mov
mov
lea
sub
cmp
mov
test
in
inc
mov
add
xchg
sbb
in
mov
mov
sub
cmp
pushf
adc
mov
jle
and
push
pop
or
cmp
sub
push
sbb
ret
add
popa
sbb
inc
cmp
inc
lea
jmp
fsubr
pop
movaps
(bad)
popa
jno
cli
sub
loope
nop
dec
sbb
dec
push
push
xor
jb
movs
adc
xor
test
fisub
pusha
pop
push
test
cmc
sbb
in
nop
cmp
ins
test
push
push
sub
sub
adc
daa
icebp
fisttp
xchg
cmp
jne
add
and
xchg
sub
pop
fadd
mov
add
jl
inc
xor
popa
cmp
push
inc
dec
or
fs
imul
and
jp
out
push
or
arpl
xor
mov
pop
mov
aam
mov
add
cmp
pop
adc
lods
leave
dec
pop
jmp
shl
test
push
mov
pop
xor
mov
adc
mov
push
jl
repz
jbe
sub
mov
push
adc
push
push
imul
dec
or
sbb
and
popa
jl
sbb
pop
jne
adc
outs
mov
jo
sbb
xchg
lods
(bad)
hlt
adc
sar
push
inc
aaa
or
xor
mov
data16
jnp
cmp
cmp
fdiv
ja
add
pop
sub
pop
mov
pusha
cmps
xor
rol
ret
cmp
clc
pop
push
adc
fwait
xor
cmps
hlt
hlt
hlt
leave
popa
and
retf
adc
(bad)
fstp
gs
fadd
test
sbb
in
mov
mov
mov
pushf
ds
mov
push
dec
adc
push
nop
fild
js
shl
inc
and
gs
inc
dec
adc
add
jns
sub
inc
xor
jp
ss
imul
icebp
mov
push
das
jmp
push
stc
jo
ja
lock
or
outs
pop
inc
adc
ret
outs
add
or
mov
lods
sub
jns
sbb
cmp
xchg
add
icebp
les
dec
addr16
test
jbe
int
mov
js
sbb
or
jb
dec
shr
int
arpl
jb
lods
sub
stos
cmp
jnp
xchg
push
cs
xlat
and
dec
rcr
adc
inc
add
repz
cmp
push
jp
add
push
or
jb
adc
sbb
add
fdivr
cmps
adc
jb
inc
jb
xor
pop
pop
scas
mov
and
rcl
pop
xor
add
shl
mov
inc
adc
mov
cmp
pop
fld
mov
mov
in
cmps
add
jge
mov
adc
(bad)
adc
pushf
push
fst
pop
inc
adc
xor
dec
cmps
ror
rol
imul
or
ficom
adc
es
mov
add
sbb
or
jb
ret
out
repz
xor
mov
(bad)
inc
fwait
out
and
xlat
add
pop
pushf
out
sub
adc
or
mov
xor
push
(bad)
mov
dec
sub
fs
adc
jb
inc
aas
adc
xchg
icebp
popa
mov
push
pop
jb
adc
push
lock
fcomp
jge
add
imul
inc
add
and
test
sbb
fild
or
pop
je
loope
test
fnstenv
or
bound
or
ss
rcr
dec
sub
pop
test
daa
jb
push
popa
mov
adc
imul
pcmpgtb
(bad)
and
add
fnstenv
and
xor
ins
adc
xor
adc
or
gs
add
add
invlpg
sar
inc
add
shr
sub
add
ss
and
cs
adc
popf
or
stos
ror
cs
sbb
mov
dec
out
(bad)
jecxz
ret
cmp
adc
imul
mov
cmp
and
push
daa
fwait
adc
xor
ss
jb
push
lea
or
stos
xor
popa
adc
mov
xor
stc
jne
sub
pop
pop
cmp
cdq
imul
dec
cmp
fnstenv
cmp
add
add
jecxz
inc
sub
jmp
sub
scas
(bad)
cmp
inc
in
dec
nop
sbb
add
loopne
test
mov
xor
adc
or
push
jmp
cmp
add
fist
loope
cmp
inc
or
dec
in
pop
push
mov
daa
call
daa
cmp
(bad)
repnz
sbb
push
add
xlat
adc
xor
arpl
add
scas
inc
xchg
push
jno
or
sub
mov
mov
xchg
mov
movs
or
lods
push
cmps
cmps
mov
jbe
pop
adc
dec
sub
cmc
mov
sbb
arpl
xchg
dec
sbb
xor
ja
cmps
sbb
cmp
cmp
dec
push
push
push
sbb
pop
xchg
xchg
loopne
jle
push
daa
push
add
push
add
mov
and
add
cmp
push
push
sub
xchg
dec
xor
add
adc
and
push
dec
xor
or
push
jge
jecxz
pop
je
jb
inc
dec
lock
outs
mov
call
pop
add
or
ja
les
imul
js
fsave
push
dec
cmp
daa
push
mov
repz
add
in
in
add
xchg
adc
or
mov
cmps
mov
(bad)
push
xor
or
jae
sbb
dec
and
retf
inc
ins
sbb
add
or
mov
push
arpl
ds
not
push
mov
loope
addr16
add
movs
sbb
gs
push
aaa
adc
imul
sub
sbb
adc
pushf
or
xchg
or
dec
sub
push
rcl
cs
dec
rol
mov
loope
jo
ror
ins
arpl
jmp
mov
bound
cmp
or
imul
imul
add
and
xlat
cmps
pop
adc
popf
out
sbb
jo
daa
jbe
sbb
arpl
cs
(bad)
add
push
sahf
mov
mov
lods
(bad)
xor
add
cdq
xchg
cmp
inc
mov
mov
jns
adc
adc
inc
mov
iret
and
adc
or
xlat
les
int
and
cmp
xchg
inc
sub
arpl
add
test
ins
xchg
cmp
movs
push
adc
xchg
out
xor
sub
push
or
loopne
xchg
sbb
jb
push
ja
add
fs
cmps
push
xchg
jp
and
fs
imul
lds
rcr
(bad)
mov
add
pop
jecxz
out
or
xor
xstore-rng
cmps
inc
imul
dec
dec
or
push
sub
xchg
and
dec
in
data16
adc
pop
shl
push
jo
jmp
retf
adc
or
imul
xor
xchg
dec
jmp
push
adc
xor
adc
mov
pop
add
movs
push
cdq
stos
push
pop
mov
mov
mov
and
je
fwait
sbb
and
add
cli
adc
adc
xor
repz
sbb
mov
lods
jne
cmp
mov
cs
pusha
mov
or
dec
cmps
shl
jno
cmp
imul
cmp
sub
out
outs
(bad)
mov
xchg
jnp
into
push
mov
inc
push
jecxz
(bad)
es
scas
sar
mov
sbb
sbb
pop
or
ss
lods
(bad)
cli
fidiv
pop
cmp
pop
iret
pop
xchg
or
xor
cs
jle
mov
dec
or
push
xor
add
sbb
or
xchg
repz
lahf
dec
sbb
push
sub
add
push
mov
xchg
cs
repz
hlt
sub
push
sbb
push
xchg
push
inc
pusha
inc
inc
dec
ror
fisub
adc
pop
call
cld
hlt
dec
or
and
inc
pop
jb
mov
and
pop
pop
imul
fstp
je
push
sub
add
sbb
dec
inc
in
xor
push
adc
and
mov
cmp
loop
xor
fsub
test
and
pop
xchg
or
nop
pop
mov
pop
xor
add
repnz
or
and
sbb
xchg
push
sbb
or
and
cmp
xor
jo
push
or
rol
test
xchg
ins
das
cmp
arpl
rcl
mov
ins
or
xor
add
loopne
push
sub
mov
bsf
sub
pop
inc
mov
sub
push
inc
retf
mov
mov
repz
mov
inc
or
xor
aas
inc
sbb
sbb
mov
pushf
push
pop
or
push
movs
call
xchg
adc
adc
or
lods
fstp
aaa
or
retf
adc
dec
or
mov
icebp
in
mov
mov
fimul
add
sub
(bad)
and
push
cmc
pop
pop
add
adc
sbb
and
adc
cmp
adc
add
movsx
int3
adc
pop
call
push
ror
cmps
popf
pop
inc
adc
jecxz
add
cli
push
cmp
push
or
aam
repnz
push
xchg
push
in
repnz
mov
push
xchg
adc
and
and
and
mov
add
dec
popa
xchg
imul
lods
push
jecxz
sub
retf
inc
sbb
adc
rcl
sub
repz
push
xchg
add
add
xchg
adc
adc
arpl
or
and
cmp
push
push
or
ror
push
pop
sub
mov
mov
pop
pop
adc
push
arpl
loopne
add
mov
xor
pop
jp
mov
push
add
dec
jmp
sbb
das
int
nop
or
adc
add
add
xor
mov
inc
push
sbb
jb
add
add
add
push
sbb
sbb
sub
out
or
cmp
addr16
movs
cdq
ror
mov
repz
adc
xor
fdiv
mov
pop
sbb
xchg
nop
icebp
mov
inc
adc
jno
aas
mov
mov
mov
push
pusha
adc
imul
movs
jecxz
jp
push
xor
add
add
push
test
or
outs
cmp
mov
and
push
or
adc
aas
push
inc
(bad)
and
push
cmp
jne
inc
add
cmp
sbb
mov
fwait
push
dec
or
das
dec
movs
push
test
cmp
xor
pusha
rsqrtps
jno
dec
jb
sti
xor
and
mov
cmp
adc
and
leave
push
lds
sub
sahf
outs
loopne
adc
sbb
inc
mov
movs
ret
adc
jno
out
mov
cmp
cdq
(bad)
in
adc
push
cmp
and
jb
adc
aaa
mov
push
pop
xchg
push
fld
adc
pop
xchg
pop
aad
je
adc
and
push
in
add
xchg
xchg
inc
inc
lods
adc
and
aam
jnp
je
dec
(bad)
aas
jae
out
test
in
ins
push
push
pop
shr
push
jb
imul
add
add
adc
sub
test
add
and
push
mov
adc
arpl
test
xor
jb
cmp
dec
adc
shl
adc
and
pop
loop
add
mov
and
add
stc
add
mov
lock
xor
xor
cmp
std
push
xchg
scas
jae
and
ror
fs
shl
rol
add
adc
sub
das
popf
into
repz
test
pop
ret
mov
xchg
in
inc
mov
mov
dec
lods
dec
repz
outs
pop
clc
inc
mov
jecxz
mov
dec
je
call
fcmovne
and
adc
adc
mov
xlat
inc
jecxz
sti
and
inc
push
mov
adc
(bad)
mov
dec
push
cmp
test
retf
add
sbb
dec
popa
adc
push
or
movs
pop
cmp
cs
sub
jb
fidiv
mov
xor
jne
pop
jo
inc
jle
unpckhps
retf
sub
cs
cwde
movs
clc
jns
retf
dec
or
xor
inc
or
mov
stc
sbb
and
and
jns
mov
and
pop
scas
cmp
sub
and
arpl
test
shl
or
test
lods
push
jns
xchg
lea
jo
pop
jae
jne
add
or
std
push
movs
sbb
xor
or
repz
js
and
push
or
daa
sar
pop
fst
outs
nop
or
daa
adc
adc
add
jge
or
bound
jae
xchg
mov
pop
in
jnp
loope
pop
enter
add
adc
and
jmp
add
or
sahf
push
test
adc
xor
scas
adc
scas
inc
add
adc
test
fwait
or
mov
or
push
jmp
bswap
stos
push
xor
adc
or
adc
add
or
ja
aaa
cmp
and
add
and
push
add
leave
push
sbb
and
pop
xlat
retf
sub
movs
and
fwait
call
adc
or
retf
mov
call
fs
jg
cmps
push
xor
ja
ror
pop
mov
mov
add
iret
jae
mov
add
xchg
xor
ds
add
stc
loopne
sbb
or
test
imul
dec
ror
mov
cmp
cmp
cmp
and
sub
jbe
sbb
xchg
xchg
mov
push
rcl
xor
xchg
add
stos
imul
mov
gs
adc
sub
xor
or
push
push
add
mov
push
fs
dec
movs
or
xor
imul
jl
add
push
sub
outs
add
mov
pop
pop
dec
mov
sub
loop
retf
adc
fwait
push
add
enter
ret
sub
add
dec
add
dec
adc
gs
mov
dec
test
sbb
or
dec
daa
pop
mov
mov
inc
pusha
adc
sub
push
add
es
inc
push
test
adc
add
and
mov
sbb
xchg
dec
sbb
cmp
adc
call
push
xchg
pop
add
sub
push
popa
jmp
add
test
jns
mov
add
int
in
jnp
fild
sbb
loopne
fs
xlat
pop
cmp
pop
mov
adc
pusha
xor
jl
rol
push
icebp
movs
mov
jp
outs
adc
mov
sub
pop
or
lods
adc
push
pop
ds
stos
nop
dec
cmp
imul
adc
jle
stos
mov
xchg
pushf
push
or
adc
and
pusha
adc
jmp
dec
sub
(bad)
mov
mov
(bad)
jb
inc
xchg
dec
sbb
or
test
xor
or
pop
mov
popf
mov
xchg
sub
or
sbb
jb
or
push
sub
jb
sub
adc
icebp
sub
ins
fs
xor
dec
mov
test
inc
or
dec
jb
je
int3
sub
dec
ins
mov
dec
mov
jecxz
jl
jno
and
adc
icebp
or
xor
mov
dec
ficom
cmp
cmp
(bad)
or
js
test
and
nop
out
mov
xor
aad
pop
(bad)
call
mov
pusha
loopne
and
bound
xor
mov
icebp
sbb
add
cmc
or
sub
mov
add
out
pusha
cs
or
xchg
sbb
movs
xor
push
pop
call
cmp
not
push
pop
in
pop
sbb
dec
push
cmp
pop
add
sub
mov
adc
xor
add
dec
push
jmp
movs
cmp
cmp
jnp
inc
cmp
or
repnz
inc
ret
xor
dec
or
cmc
ror
aam
call
sbb
sbb
movs
xchg
cmps
add
sbb
rol
pop
inc
dec
mov
cmp
inc
stos
adc
sub
and
pop
pusha
inc
add
cdq
push
mov
popa
sbb
wbinvd
adc
gs
xchg
sub
sbb
jno
sub
or
leave
dec
dec
xor
fstp
xchg
pop
lods
ret
pop
mov
dec
sub
pop
add
inc
adc
(bad)
push
or
xor
gs
pop
push
cs
ret
int3
push
repnz
xor
push
lea
movs
gs
add
cdq
retf
push
test
aaa
and
sbb
movs
or
stos
jno
add
mov
mov
xor
lods
xchg
out
dec
or
or
push
mov
not
dec
xchg
push
inc
cmps
dec
lea
fistp
lahf
xor
add
das
jb
aam
jg
je
adc
pushf
pop
bound
lods
inc
jo
cmp
loope
mov
(bad)
les
cmp
xor
rol
mov
inc
inc
fist
repz
bound
sbb
ins
lds
ds
out
jo
push
push
shl
movs
push
inc
and
daa
es
push
dec
mov
or
xor
aam
addr16
jnp
add
xchg
adc
ret
test
xchg
or
(bad)
dec
jns
add
jno
mov
push
dec
stos
pop
push
movs
sbb
sub
push
jb
(bad)
sbb
fwait
ja
push
gs
sbb
adc
dec
call
mov
jecxz
jns
mov
jmp
fwait
jmp
mov
push
rcr
pop
inc
push
call
sbb
shl
dec
movs
cmp
dec
cmp
adc
add
mov
jae
inc
xor
iret
repz
or
mov
repnz
pop
or
and
pusha
cdq
test
jg
or
cmp
movs
push
adc
dec
xor
push
push
ins
dec
sub
add
dec
adc
movs
shr
sbb
xchg
inc
call
inc
sbb
add
mov
add
dec
add
outs
jecxz
cmc
dec
add
xor
dec
ficomp
mov
ret
xor
xor
add
in
cmp
cmp
mov
sub
jmp
cmp
push
add
in
sahf
out
pop
push
or
jns
loopne
jnp
add
push
js
stos
push
test
push
xor
test
push
jg
sub
int3
inc
sbb
sbb
sub
jge
inc
push
cs
cdq
xchg
push
shl
push
push
pop
outs
test
cs
xchg
sahf
rol
inc
adc
adc
adc
cwde
cmp
mov
out
movs
loopne
jb
mov
movs
ins
mov
and
int
mov
add
popf
lea
pop
push
xor
bound
push
and
push
pop
popf
add
inc
and
scas
call
push
cmps
mov
dec
setno
or
enter
push
mov
fwait
mov
or
test
ja
sahf
adc
add
push
and
xchg
sbb
push
arpl
pusha
add
ss
push
adc
sahf
out
je
pop
or
movs
dec
xchg
add
daa
and
xor
lea
add
lea
inc
sub
or
xchg
ss
pop
nop
push
cs
sub
mov
fnstsw
mov
addr16
out
sub
(bad)
in
outs
sub
push
fcomp
add
cmp
add
or
pusha
mov
loope
outs
aam
add
dec
or
dec
push
xchg
shl
pop
sbb
repz
ja
call
leave
inc
mov
mov
aas
jne
sbb
sbb
push
add
or
or
inc
sahf
adc
cmp
dec
js
add
push
in
adc
add
dec
add
test
sbb
and
sub
sub
add
mov
inc
and
aad
inc
mov
sbb
and
rcr
dec
je
shl
push
jp
mov
mov
inc
out
lahf
retf
sbb
shr
mov
add
call
sahf
cbw
xor
adc
fwait
add
push
pop
mov
add
and
inc
pop
mov
xchg
mov
mov
outs
mov
je
dec
xor
fcomip
sub
inc
sahf
cmps
jb
add
sbb
pop
(bad)
jb
xchg
sbb
adc
jo
iret
repz
dec
pop
push
xchg
mov
mov
fnsave
mov
pop
jge
mov
jg
jne
out
daa
inc
arpl
push
add
mov
xchg
stos
sbb
jno
adc
add
push
(bad)
ret
ret
or
mov
dec
jb
xchg
push
fild
stc
xor
or
ins
test
xchg
add
xor
imul
add
daa
or
push
sub
jge
adc
mov
ret
sub
mov
push
lods
and
xor
and
sahf
retf
inc
and
ins
mov
fs
cs
fstp
or
cmp
pop
dec
adc
sbb
retf
add
cmp
add
nop
int3
sahf
jmp
jns
out
cmp
adc
sbb
outs
cmps
sbb
cmp
fadd
inc
add
or
xchg
xchg
sub
add
and
in
and
dec
mov
cli
pop
iret
test
sbb
adc
inc
add
mov
or
jo
imul
fs
jae
adc
movs
xchg
adc
add
mov
mov
add
pop
inc
add
movs
add
add
add
cmp
add
and
shl
retf
cmp
dec
loopne
mov
jne
pusha
add
pop
(bad)
jns
push
cwde
push
loop
and
lods
mov
pop
cs
sbb
sub
sbb
sbb
ja
push
xchg
mov
mov
xor
(bad)
aam
pushf
leave
jne
push
xor
pop
getsec
or
xor
xor
or
imul
cmps
or
jns
test
adc
cmp
sbb
imul
adc
inc
sbb
or
mov
inc
lds
addr16
mov
push
inc
inc
cli
imul
add
cmp
movs
aam
sbb
jo
xchg
je
mov
cs
iret
test
pop
iret
push
xchg
or
and
add
jb
mov
shl
mov
sub
dec
movs
dec
cmp
adc
add
addr16
call
mov
xor
retf
add
and
loope
sbb
mov
mov
adc
sub
imul
push
mov
mov
adc
movs
inc
add
or
pushf
rol
pop
test
mov
nop
push
cmp
push
jbe
dec
cmp
das
add
push
daa
div
cmp
pop
daa
data16
sbb
les
movs
lds
adc
gs
dec
jae
daa
cmp
and
outs
ret
pusha
repz
adc
retf
xor
push
jb
jb
inc
cmp
mov
mov
outs
les
push
sub
jmp
jb
pop
add
add
cmp
imul
sbb
outs
les
fwait
sub
pop
or
adc
std
xor
repz
pop
add
inc
inc
mov
sahf
retf
sub
and
retf
mov
stc
cmp
xor
dec
sub
and
add
mov
jno
push
sbb
daa
lods
push
enter
jo
or
cmp
mov
or
push
(bad)
dec
cmc
rol
loope
(bad)
fsubr
xchg
jmp
fnstenv
fmul
cmp
cmp
add
and
xor
mov
xor
add
push
cmp
add
psubsb
dec
retf
dec
pushf
push
lds
or
daa
pop
or
fnstcw
daa
hlt
dec
add
test
cmp
mov
fs
imul
sub
jne
loope
push
test
jecxz
xor
cmc
data16
inc
add
inc
sub
inc
xchg
movs
pop
and
mov
loopne
cmp
sbb
xor
cdq
jo
and
enter
xor
mov
dec
pop
sbb
and
daa
daa
dec
je
add
push
push
adc
popa
sbb
gs
sahf
out
sub
add
cmp
(bad)
push
sub
dec
in
adc
xor
inc
add
bound
xchg
cmps
and
call
cmp
mov
xchg
pop
fst
mov
dec
pop
pop
aaa
mov
xchg
or
jns
call
push
dec
(bad)
mov
sub
push
pop
movmskps
pop
inc
mov
rcl
pop
or
jns
stc
mov
jns
iret
pop
adc
mov
dec
xchg
cmp
ds
cs
cmp
inc
inc
test
ss
test
sbb
repz
(bad)
xlat
inc
pop
outs
retf
jo
cmp
or
sbb
dec
mov
stos
dec
in
push
sub
cmp
xor
retf
leave
or
test
nop
sub
push
pop
add
and
add
iret
push
cmp
cmp
and
and
fisttp
pop
jno
aad
mov
inc
inc
jle
xchg
lds
add
retf
and
dec
inc
push
dec
out
stos
nop
adc
push
pop
add
ds
and
adc
mov
jns
and
mov
sub
jns
inc
mov
xchg
push
mov
jo
pop
jb
or
or
or
xchg
das
mov
repz
add
mov
sub
imul
popa
sbb
out
add
push
and
gs
add
call
stc
add
dec
lea
pop
xchg
sar
je
int
or
daa
cs
ror
imul
push
call
in
cs
loop
xor
adc
inc
cwde
and
mov
push
stc
add
fs
and
popa
mov
stc
nop
push
sti
sub
sbb
push
and
push
sbb
sbb
and
mov
push
add
sbb
push
pop
repnz
cs
cmp
or
add
shl
dec
mov
mov
sbb
push
(bad)
in
shl
add
aaa
or
dec
sbb
mov
mov
push
cmp
cmp
push
pop
sbb
or
pop
popf
leave
repz
and
xchg
retf
mov
add
test
daa
push
push
add
adc
rcl
popf
pop
and
and
aas
or
mov
gs
rol
pop
mov
sbb
adc
inc
int
pop
jns
addr16
(bad)
push
inc
or
ficomp
pop
push
pop
and
or
lds
push
and
xor
imul
pop
cmp
cmps
in
call
leave
inc
or
xchg
and
out
and
or
adc
xchg
movs
adc
xlat
lods
xchg
xor
dec
dec
or
add
out
or
sbb
or
push
cwde
cmovle
or
mov
pusha
inc
and
movs
push
test
and
cmp
leave
xchg
test
aaa
daa
or
xor
out
sub
data16
daa
add
or
or
mov
push
sbb
add
sub
add
xchg
int
sub
mov
or
push
lea
iret
or
xlat
int
cmp
daa
xchg
xchg
cwde
popa
pop
dec
xor
jmp
or
add
sbb
add
repnz
or
dec
push
gs
test
popa
push
cmp
(bad)
xchg
or
daa
push
in
inc
mov
imul
addr16
add
mov
pop
jnp
iret
ror
inc
sbb
push
xchg
add
(bad)
xchg
cmp
retf
call
mov
retf
adc
add
out
and
xor
clc
adc
popa
jb
gs
pop
cmp
push
add
adc
mov
adc
add
out
lea
or
iret
xor
ins
adc
cs
push
mov
add
or
ret
shl
pop
popa
stos
scas
dec
inc
add
(bad)
and
push
sbb
xor
inc
sub
xor
and
ret
inc
fld
jecxz
push
xor
adc
mov
gs
and
(bad)
pop
add
cmps
push
adc
test
dec
jno
xchg
(bad)
cmp
add
lds
xchg
xchg
push
pop
or
push
sbb
cmp
bound
mov
dec
mov
les
or
mov
aas
or
cmp
mov
in
sub
loopne
adc
in
popa
ror
ret
ja
sbb
movups
xchg
adc
or
retf
sub
or
add
sbb
push
and
or
stos
mov
xchg
pop
xchg
lods
cmp
cmp
push
push
push
inc
dec
mov
bound
and
mov
add
iret
xor
sbb
daa
ret
hlt
cmp
sbb
aad
in
test
mov
gs
repz
popa
adc
test
xchg
jge
and
adc
adc
jb
shl
inc
pop
fwait
dec
test
in
adc
add
add
adc
daa
shl
repz
push
cdq
cmps
mov
fld
or
push
xor
ja
sub
retf
xlat
and
jae
cmp
or
xor
xor
test
and
and
adc
pop
addr16
or
loope
sahf
adc
inc
sub
cmp
adc
mov
xchg
dec
push
and
lock
addr16
adc
ss
push
mov
push
and
fcom
rcl
adc
les
pusha
scas
imul
and
or
push
xchg
cmp
ror
scas
or
add
and
xlat
push
aaa
sahf
out
add
add
lods
pop
push
push
stc
sub
pusha
sbb
cmps
mov
sbb
pop
pop
imul
adc
test
lds
sbb
xchg
outs
and
cmp
mov
xor
movs
push
mov
mov
jb
xchg
sbb
sbb
pop
xchg
sbb
adc
add
mov
sub
add
adc
push
push
push
movs
stos
or
cmp
mov
fs
nop
mov
iret
repz
add
movs
lea
shl
push
sbb
pop
outs
sub
and
xor
ret
push
mov
ror
iret
fimul
dec
je
lods
bound
push
pop
jbe
or
pusha
and
mov
inc
or
stos
je
fisttp
ins
add
or
push
stos
inc
jae
mov
ins
push
xor
clc
fs
sub
out
add
test
and
xchg
inc
sub
lods
daa
call
sub
jbe
imul
add
pop
aas
push
and
loop
sbb
cmp
addr16
push
xor
mov
paddusb
cmps
pop
daa
pop
shr
in
in
xchg
xor
mov
dec
xchg
push
test
cdq
or
test
cmp
lds
push
adc
inc
push
jmp
jge
ret
in
add
pusha
adc
shl
adc
adc
mov
fbstp
sahf
sub
out
sub
jmp
xchg
mov
imul
sbb
xchg
jbe
push
sbb
add
repnz
ror
and
adc
sbb
je
leave
cmp
push
dec
sahf
ins
inc
sub
adc
sti
add
mov
adc
pop
add
nop
dec
and
sahf
or
and
xchg
mov
icebp
adc
xor
or
xlat
leave
and
shl
cmp
ds
xor
add
jno
lods
test
imul
sbb
sbb
push
call
es
int
pop
sub
and
add
dec
dec
or
lock
mov
lahf
mov
arpl
(bad)
pop
inc
loopne
loope
add
test
sbb
repz
cmp
and
sbb
push
sbb
scas
or
call
jae
inc
add
add
mov
popa
das
add
cmps
stos
push
sbb
sbb
cwde
mov
stos
scas
cmp
enter
push
push
sub
sub
lods
push
xchg
add
xor
ror
ja
outs
or
mov
or
enter
push
(bad)
jl
popf
inc
jge
repz
loop
mov
add
addr16
adc
test
or
imul
add
and
push
cmc
lods
pop
nop
int3
or
fcom
add
into
add
das
inc
outs
icebp
(bad)
lock
add
mov
jmp
xchg
dec
adc
cmp
rcr
add
push
cwde
and
xlat
and
xchg
adc
stos
fistp
add
lds
sbb
xor
jns
and
dec
mov
movs
and
sub
rol
popa
add
add
shl
mov
aam
jg
and
xor
ret
push
mov
pop
pop
ret
sub
push
add
and
mov
nop
out
mov
and
push
or
pushf
and
xor
dec
inc
mov
or
sub
popf
nop
(bad)
jge
aam
popf
add
in
xor
or
cmps
mov
push
cdq
cmp
push
push
inc
xor
loopne
mov
pop
leave
pmovmskb
push
ins
or
and
xchg
jb
fwait
movs
jb
mov
mov
push
inc
adc
movs
aaa
push
jle
and
test
jg
sbb
test
mov
add
xor
or
test
inc
lods
jo
or
stc
cdq
sbb
adc
popf
push
test
inc
(bad)
int3
fs
dec
mov
repz
add
je
ret
xor
cmps
push
jb
sbb
(bad)
repz
or
jnp
rol
test
xor
imul
adc
push
daa
xor
xchg
mov
cmp
sub
or
cmp
stc
sub
mov
and
call
inc
mov
xor
jo
sub
push
addr16
or
add
xor
rol
leave
adc
dec
adc
add
sysret
ins
enter
adc
add
xchg
lahf
push
in
xor
cwde
adc
sahf
retf
cmp
xor
and
push
pop
pop
rep
add
rol
js
add
mov
adc
jbe
add
mov
add
mov
add
or
popa
pusha
jne
hlt
mov
pop
and
xchg
sbb
ja
or
aam
dec
or
je
and
repz
and
sbb
adc
test
mov
add
and
add
inc
mov
adc
mov
xor
and
xchg
sbb
pop
aam
pop
xchg
fild
and
jnp
(bad)
or
mov
sbb
adc
mov
retf
ret
and
test
xor
mov
mov
inc
sbb
add
or
nop
xchg
and
pop
push
adc
jb
arpl
rol
mov
ret
movs
inc
dec
lods
loopne
sbb
pop
sub
xchg
in
daa
ss
shl
sbb
or
push
ins
loope
ins
fs
pop
dec
je
and
pop
mov
jns
pop
dec
add
or
mov
cmp
add
or
enter
les
jbe
mov
cmp
add
(bad)
jmp
or
push
std
adc
sahf
adc
jne
jb
and
or
push
push
out
sbb
(bad)
xchg
adc
mov
inc
sbb
cmp
popa
push
sbb
pop
ror
push
xchg
cmp
cmps
sub
push
les
jnp
daa
in
sub
mov
mov
loop
xor
sbb
push
sbb
or
inc
retf
add
clc
arpl
or
xchg
fwait
test
add
add
repz
sub
mov
(bad)
je
mov
pop
inc
dec
dec
pop
or
and
cwde
push
inc
addr16
popa
push
in
jae
push
cmp
adc
pop
mov
daa
pop
push
add
jb
inc
and
dec
and
cmp
add
push
and
and
or
dec
push
ret
adc
daa
mov
adc
out
mov
jne
jae
xor
mov
push
jns
mov
or
and
inc
and
or
inc
mov
sahf
addr16
pop
sbb
mov
js
mov
mov
(bad)
retf
(bad)
int
nop
push
subps
fild
xor
jo
inc
and
iret
repz
or
xchg
push
fdiv
add
dec
repz
mov
push
pop
pop
repnz
sub
add
test
jns
push
cs
adc
dec
and
ror
bound
xchg
xchg
out
sbb
xor
sbb
dec
push
bound
repnz
and
pop
ror
push
test
push
cs
dec
movs
or
add
imul
cmp
rol
(bad)
add
test
jecxz
add
sbb
push
in
test
pusha
or
lahf
push
cmp
push
mov
ret
and
les
dec
jo
and
sub
xor
mov
inc
lea
js
add
lods
xchg
jnp
out
xor
fistp
jmp
shr
adc
mov
leave
xchg
dec
adc
inc
out
out
jns
push
pop
mov
or
and
mov
adc
pop
call
cmp
dec
ss
adc
sbb
pop
add
pusha
add
push
add
jmp
in
leave
test
sahf
add
or
pop
fwait
retf
ret
dec
out
ja
loop
movs
sub
push
dec
and
add
xchg
out
movs
lods
adc
je
sub
inc
push
pop
aaa
inc
ret
adc
add
sub
lock
push
pop
fmul
jge
xchg
push
inc
sbb
retf
pusha
daa
ss
inc
jo
mov
mov
sar
pop
je
jg
ins
cmp
dec
push
or
sahf
fadd
sbb
lds
xchg
dec
jae
shl
or
cmp
cmps
jge
and
aam
and
or
add
out
nop
int
cmp
inc
je
push
jne
sbb
add
mov
mov
sbb
sbb
adc
push
dec
in
mov
sub
add
popf
in
stos
pushf
adc
stos
nop
push
mov
jae
push
inc
and
inc
popa
add
cdq
pop
call
and
sub
and
jl
pop
jl
mov
dec
(bad)
enter
mov
inc
cs
pop
xor
nop
push
add
inc
add
sub
imul
jge
fnstcw
xor
push
xor
cwde
imul
and
push
test
add
and
add
sbb
int
mov
bound
repnz
push
call
pusha
or
push
sub
inc
mov
xor
or
es
sahf
dec
les
ins
sub
sub
xor
mov
pop
dec
adc
imul
push
add
pushf
sbb
bound
cmps
jb
sub
mov
add
push
jge
popa
retf
push
cmp
add
sar
ret
cmp
jns
mov
add
push
pop
fiadd
ss
(bad)
mov
sub
popf
or
cmp
sub
cld
movs
jo
cmp
sbb
and
xor
jns
data16
mov
inc
cld
movs
push
in
ret
aas
push
dec
in
test
sub
add
adc
ja
and
sub
out
sbb
jecxz
fwait
lods
and
sbb
and
frstor
and
dec
repz
push
ins
or
pop
sub
pop
adc
add
adc
icebp
dec
rcl
xor
idiv
add
push
mov
mov
inc
add
or
(bad)
iret
sub
jns
add
add
add
xor
out
rol
bound
(bad)
pop
loopne
mov
sub
cmp
sbb
in
sub
int3
les
mov
cmc
cmp
xlat
add
push
pop
pop
pop
inc
cmps
and
cmp
cdq
jmp
jae
add
pop
fstp
daa
cmp
icebp
fs
mov
fwait
mov
sbb
sahf
dec
add
shl
ja
mov
mov
pop
add
jae
daa
ja
push
cmp
cmp
and
jne
dec
imul
sbb
sahf
out
dec
add
pop
pop
dec
shr
cmp
cmp
or
add
lock
mov
js
cmp
fistp
cmp
cmp
jb
pop
push
add
mov
popa
pop
lahf
sbb
popa
sub
push
ror
cmp
repz
jg
and
sub
retf
outs
or
inc
adc
or
adc
mov
rep
sub
sub
add
or
lds
mov
les
jmp
test
sub
aas
mov
out
movs
xchg
inc
mov
test
add
ins
mov
int3
add
lods
popa
pusha
scas
pop
mov
dec
sbb
adc
mov
dec
xor
push
je
pop
dec
xor
sub
js
repz
ins
mov
dec
in
leave
add
sbb
mov
jmp
sbb
stos
sbb
or
mov
cmp
xor
sub
jg
dec
punpcklbw
pop
adc
dec
pop
xchg
cmp
and
xor
sar
cmps
sbb
shl
je
jmp
mov
or
in
push
sub
xor
xchg
je
pop
and
pop
movs
inc
leave
aas
mov
leave
xchg
inc
inc
popa
push
xchg
out
(bad)
dec
push
adc
add
stos
mov
inc
inc
sahf
mov
pop
jns
xchg
xchg
or
js
dec
sbb
push
cmp
sbb
add
and
mov
xchg
je
pop
xor
cwde
les
es
jns
add
cmp
push
pop
cmp
sahf
addr16
push
adc
add
push
leave
shl
pop
daa
mov
sbb
pop
movs
imul
or
sub
cmp
adc
and
test
daa
pop
cmps
mov
pusha
mov
or
nop
out
(bad)
cmp
or
push
adc
cmp
pop
sbb
inc
dec
inc
int
iret
repz
and
push
or
mov
(bad)
mov
jmp
push
add
cs
adc
inc
and
mov
cmp
nop
adc
dec
push
xchg
or
shl
sbb
hlt
add
jmp
movs
add
imul
sar
mov
inc
fld
test
in
xchg
cmp
in
test
sti
in
cmp
add
add
rcl
mov
test
add
xchg
xor
adc
sahf
out
inc
dec
add
cs
mov
sahf
retf
or
jp
and
add
inc
add
mov
sahf
push
or
nop
dec
ror
movs
mov
and
and
sub
push
sub
lahf
iret
xchg
pusha
add
ror
test
or
and
sbb
xor
mov
mov
cmp
jns
fwait
mov
or
add
mov
jae
test
pop
repnz
sbb
or
jno
xchg
jl
push
repnz
add
xor
cmp
add
pusha
arpl
xchg
xchg
inc
pop
pop
add
push
push
adc
sbb
xchg
mov
mov
or
jg
aas
in
(bad)
and
inc
push
stos
shl
cmps
jb
jo
push
adc
adc
or
mov
pushf
or
jl
push
xor
or
pop
add
pop
cmps
fnstsw
inc
adc
iret
inc
(bad)
ja
jne
mov
mov
mov
sub
mov
mov
repz
popa
sbb
out
nop
or
fwait
adc
dec
pop
cmp
mov
mov
retf
jae
out
es
xchg
out
xchg
push
dec
and
pop
sar
adc
fs
nop
mov
and
adc
jb
pushf
sbb
scas
push
adc
mov
inc
cmps
mov
inc
addr16
adc
push
adc
cdq
fsubr
add
add
mov
test
outs
cmp
mov
sbb
test
repz
push
mov
stos
pop
dec
daa
in
push
sub
cmp
out
adc
jecxz
adc
jo
enter
std
mov
neg
xor
cmp
ret
in
jp
movs
ds
push
inc
bound
and
sub
in
dec
dec
popa
xchg
add
add
popa
leave
dec
and
ins
inc
mov
or
leave
pop
sbb
inc
and
push
lock
mov
js
mov
scas
addr16
inc
jp
fisttp
daa
mov
mov
mov
pop
inc
inc
neg
push
mov
cmp
lods
inc
or
add
fwait
or
test
sbb
inc
jae
dec
cmp
sbb
je
sub
dec
ret
add
mov
repz
loope
xchg
jbe
dec
inc
jecxz
sbb
xchg
dec
dec
push
ficom
mov
sbb
out
or
sbb
movs
jne
ret
adc
cmp
cmp
dec
lea
or
fs
daa
je
vzeroupper
sub
adc
sub
movs
xchg
add
fnstcw
test
add
adc
sub
rcl
ss
push
imul
adc
mov
add
leave
pop
call
sub
or
fdiv
push
and
sbb
cmp
jae
add
pop
or
xchg
pushf
rol
push
jns
loope
sub
adc
or
outs
xor
repz
mov
pop
lds
mov
add
and
inc
jae
repz
mov
xor
pop
enter
cmp
adc
or
jmp
mov
test
enter
push
pop
cmp
shl
adc
push
cmp
in
ds
push
adc
cmp
cmp
xor
sbb
sub
or
jb
mov
sub
jo
jb
mov
and
adc
cs
shl
cdq
or
fst
xchg
adc
jp
popa
adc
dec
outs
movs
push
test
and
dec
sahf
mov
shl
cmp
push
stos
dec
or
xchg
cmc
(bad)
pop
cwde
nop
out
push
add
aad
dec
test
mov
sub
adc
ja
add
and
jne
adc
jb
mov
mov
xchg
xchg
push
cmps
mov
xor
ficom
test
adc
add
xor
scas
sub
xor
dec
jae
add
mov
movlps
pop
clc
movs
jge
pop
loopne
daa
shl
add
jno
adc
push
in
sahf
or
ins
cmp
loope
sbb
ja
xchg
adc
sahf
cmovbe
sub
and
add
jmp
push
dec
ret
imul
xlat
jmp
addr16
sahf
pop
dec
cmp
aad
les
dec
cmc
sahf
cmps
or
sub
jns
xor
or
adc
add
cmp
repnz
and
arpl
sub
fs
sbb
jo
jns
call
std
adc
shr
push
scas
ds
sub
les
mov
jp
inc
mov
adc
leave
xchg
fsub
xchg
dec
cs
xor
and
add
les
dec
sahf
xchg
pop
fst
imul
sahf
leave
and
daa
or
retf
xor
sub
mov
mov
daa
xor
or
and
repz
in
movs
test
push
or
ins
sub
popa
leave
repz
andnps
or
popa
(bad)
push
cdq
sbb
pop
and
and
add
test
sbb
ja
dec
movs
or
mov
xchg
add
es
cmp
retf
out
adc
or
sub
push
nop
push
mov
pop
and
les
add
jb
sub
or
or
adc
sub
add
sub
bound
outs
inc
pop
xor
add
movs
jns
pusha
push
sbb
outs
push
adc
push
and
xor
adc
add
das
nop
out
adc
or
cld
cmp
and
add
pop
inc
cmp
push
sub
inc
jo
cmps
out
(bad)
add
pop
sub
pop
xchg
sbb
lahf
sbb
sbb
pushf
push
bound
or
pop
inc
adc
or
imul
sub
or
loopne
adc
push
repnz
sahf
jae
pop
and
sbb
rol
adc
arpl
cmp
xchg
add
jmp
mov
jg
pop
es
dec
mov
add
dec
and
sbb
mov
pusha
je
dec
mov
and
add
daa
jecxz
jge
test
hlt
mov
scas
fwait
shl
stos
push
cdq
xor
dec
movs
or
fidivr
jns
push
ret
sub
dec
(bad)
lds
jo
and
repz
adc
dec
add
cmp
mov
and
jae
adc
adc
imul
cmp
inc
shl
inc
clc
sar
fidivr
dec
adc
jb
arpl
ds
add
xchg
js
rol
rcl
dec
dec
adc
rol
cmp
adc
xchg
addr16
mov
xchg
into
mov
sbb
sub
cmp
outs
add
(bad)
or
out
addr16
out
pop
sar
cmp
xor
xchg
xchg
ror
ss
and
adc
sbb
lock
imul
ins
inc
jo
cmp
daa
loope
adc
and
fwait
cmp
sbb
dec
daa
fwait
xchg
(bad)
or
add
xchg
popa
adc
adc
or
sub
inc
push
leave
repz
cmp
pop
sbb
xor
imul
dec
jecxz
inc
inc
sbb
leave
xor
ret
mov
rcl
or
adc
repnz
push
pop
or
cmp
ror
movs
sbb
sbb
sub
retf
push
dec
cwde
adc
and
(bad)
sbb
ret
mov
push
or
add
add
xor
adc
inc
cmps
pop
test
test
in
je
jnp
lea
mov
sub
dec
and
sbb
mov
push
adc
push
inc
les
fild
daa
mov
and
mov
or
push
add
push
mov
pop
jb
jo
daa
adc
fnstcw
test
sbb
sbb
pop
enter
fs
sbb
in
adc
adc
repz
outs
pop
das
and
inc
shl
cmps
push
ficomp
in
sub
pop
cmp
sub
or
jg
shl
pop
je
inc
sahf
xor
or
inc
add
iret
push
adc
pop
or
ror
out
push
add
sbb
add
dec
adc
inc
pushf
hlt
adc
sbb
inc
add
and
dec
fnstenv
sbb
and
sbb
test
mov
pusha
pushf
sub
inc
jne
push
xor
iret
push
test
cmp
inc
daa
cmp
inc
or
push
push
add
or
xchg
movs
shr
sub
and
or
push
mov
addr16
adc
add
inc
pushf
and
cmp
xchg
test
pop
daa
or
repz
cmps
push
sahf
xchg
mov
and
adc
aaa
push
enter
cmp
and
in
push
mov
adc
sub
mov
je
ret
les
or
add
or
add
push
or
cdq
xor
or
rol
(bad)
and
adc
or
test
out
sub
and
sahf
adc
mov
inc
and
push
add
adc
std
arpl
xchg
xchg
or
push
and
xor
enter
inc
in
push
rol
add
add
lds
ins
cdq
addr16
push
mov
xchg
mov
and
adc
nop
or
add
add
or
adc
xor
cmp
xchg
nop
fdiv
xchg
loop
ret
push
mov
or
bound
div
cmp
repz
sub
push
add
in
dec
sub
test
and
pop
mov
jne
cmp
mov
adc
sbb
pop
dec
xlat
sub
(bad)
mul
mov
jne
mov
ss
add
nop
xlat
ss
sbb
jb
loopne
sbb
add
test
and
or
repnz
aam
adc
add
sub
jbe
or
enter
or
push
or
inc
push
xor
inc
mov
in
push
inc
dec
outs
es
mov
pop
push
(bad)
(bad)
and
in
or
das
popf
in
out
je
adc
dec
adc
push
movs
mov
mov
cdq
fwait
inc
pop
dec
scas
sbb
rcr
out
mov
add
adc
jne
adc
cli
or
sti
imul
sub
jg
test
or
aas
loopne
dec
dec
jb
sar
adc
dec
mov
sub
adc
xchg
call
mov
addr16
xor
shl
int
or
push
dec
ds
cmp
adc
ret
sbb
sub
ins
fs
and
xor
pop
push
rcr
add
xor
adc
sub
aam
pop
adc
jno
dec
cmp
outs
pop
jb
popa
shr
pop
and
mov
inc
sub
into
(bad)
push
adc
outs
sbb
fwait
or
or
ins
xor
inc
sbb
pop
push
sbb
cmps
mov
aam
xchg
inc
sub
loopne
leave
adc
cmp
loope
push
push
mov
inc
jae
je
cmp
xor
or
xchg
or
sbb
inc
sbb
inc
push
ficomp
inc
bound
cmp
test
cmp
push
fld
sahf
and
add
ret
adc
bound
repz
add
adc
pop
iret
push
loopne
add
gs
sbb
xor
gs
or
or
js
out
adc
or
and
(bad)
and
push
mov
daa
and
int3
and
and
cmps
or
push
jns
push
or
(bad)
mov
push
sar
inc
sub
xchg
or
jae
xchg
pop
adc
repnz
jae
ins
mov
mov
jns
adc
xchg
lods
test
pop
xchg
add
pop
sub
shl
call
sub
adc
inc
(bad)
(bad)
inc
or
add
sbb
and
pop
xchg
popa
sbb
add
rol
pop
sbb
adc
add
pop
cwde
mov
add
xor
mov
and
movs
arpl
inc
dec
sbb
push
cmp
es
cdq
mov
push
test
push
mov
shr
inc
or
xchg
out
dec
(bad)
stos
or
pop
adc
cmp
imul
push
sbb
or
cmp
mov
and
leave
repz
mov
xchg
and
inc
add
inc
mov
adc
dec
je
and
pop
cwde
cmp
adc
push
inc
loope
add
xchg
fsubr
imul
ja
dec
mov
mov
mov
or
dec
and
sbb
jnp
les
sub
adc
push
sbb
mov
push
push
inc
cmp
movs
enter
cmp
xor
enter
and
push
dec
mov
inc
add
mov
mov
or
push
jb
test
daa
add
ins
xor
add
sub
push
cmp
adc
adc
push
and
sbb
push
push
lea
outs
out
push
xchg
xor
xor
adc
pop
movs
xchg
inc
pop
iret
dec
jae
dec
mov
jns
pop
xchg
xchg
push
push
xchg
push
aaa
push
test
jns
repz
and
ret
ss
sbb
loop
imul
retf
sbb
mov
pop
push
in
add
or
and
xchg
dec
sahf
retf
aaa
dec
rol
leave
dec
fwait
loope
adc
cdq
iret
repz
add
add
xor
addr16
or
loop
sbb
or
(bad)
mov
test
repz
sbb
push
pop
in
ins
cmp
cmp
sub
jb
jle
cmp
and
test
mov
xchg
jns
adc
pop
push
jns
aaa
cmp
sbb
and
and
or
test
int
iret
and
sbb
and
mov
dec
dec
or
loopne
stos
daa
je
and
push
jle
inc
cmp
adc
test
jmp
fcmove
jmp
adc
call
(bad)
movs
rcr
nop
pop
mov
add
pop
(bad)
xchg
add
test
test
sbb
fwait
or
xor
je
sub
imul
add
fild
add
and
sub
dec
add
mov
or
je
in
add
test
int
or
and
and
ss
xor
leave
fisttp
fmul
aad
fwait
and
xchg
addr16
jbe
sbb
ret
pop
mov
xor
pop
pop
jae
js
dec
pop
iret
add
pop
sbb
ss
cdq
je
dec
adc
retf
imul
xor
test
sub
dec
scas
adc
and
pop
push
popf
mov
jnp
hlt
xchg
mov
and
and
iret
and
push
dec
in
add
outs
dec
and
add
xor
adc
jns
push
add
cmp
add
jmp
pop
gs
jo
into
ins
cmp
xchg
lfs
and
retf
push
pusha
call
les
(bad)
(bad)
std
icebp
push
add
std
repnz
xor
and
adc
sbb
or
adc
or
loopne
or
sti
or
dec
lods
push
sbb
gs
aad
mov
add
repz
inc
pop
je
enter
in
pushf
adc
or
mov
inc
sahf
adc
push
lds
add
push
xchg
mov
test
cmps
inc
dec
loope
pop
adc
pop
jb
cmp
pop
pop
scas
in
or
jb
mov
out
es
dec
pop
and
jns
sub
and
sub
pop
les
sub
pop
adc
cmps
test
add
iret
xor
push
adc
xchg
inc
dec
popf
popa
fwait
dec
xlat
imul
add
fcom
ins
jns
cmp
mov
pop
or
mov
cmp
test
jmp
out
rol
push
or
aas
jns
push
(bad)
mov
and
test
and
jns
imul
out
add
xlat
sbb
in
push
and
lods
adc
enter
xor
xchg
dec
into
adc
pop
sbb
add
inc
inc
pop
or
xor
in
and
inc
pop
jne
cmp
mov
inc
out
jne
mov
scas
or
shr
lods
jecxz
xchg
jno
cmp
add
(bad)
and
sub
add
ins
sbb
icebp
sbb
push
mov
iret
mov
xchg
pop
sbb
or
xor
test
rdmsr
sub
pop
xchg
xor
or
sbb
mov
dec
sahf
out
pop
or
or
adc
xchg
xchg
pop
push
cmp
dec
push
sbb
nop
out
lea
mov
and
push
xor
xchg
data16
adc
scas
stos
push
push
repnz
out
cmp
or
in
or
and
push
adc
jmp
pop
pop
(bad)
or
imul
pop
and
fstp
push
ins
jnp
in
cwde
xchg
push
jno
add
add
mov
aaa
or
cmp
mov
movs
or
xchg
pop
sahf
repz
fcomp
rcr
and
sbb
inc
dec
xor
push
xor
add
jae
out
add
ins
ds
test
or
dec
xchg
cmp
ror
sub
or
pop
xor
pushf
out
mov
sub
cmp
pushf
cmp
in
sub
inc
pop
jnp
(bad)
inc
out
push
and
int
jge
xor
xor
xchg
int
pusha
cmp
xor
sbb
popf
push
lock
int3
push
push
push
jae
imul
shl
inc
or
ss
mov
sub
push
cmp
daa
jae
cmp
xor
mov
sbb
pinsrw
push
sbb
mov
fisttp
shr
lds
cmp
jo
mov
scas
dec
scas
mov
cmp
(bad)
pop
pop
dec
or
pusha
and
sbb
lods
pop
push
xchg
cmp
cmp
add
mov
fbstp
dec
bound
cmovns
add
sub
pop
jb
cmp
push
inc
adc
xchg
add
jns
dec
dec
or
dec
add
xchg
cmp
cdq
sbb
dec
dec
sahf
and
and
fwait
cmp
xchg
sbb
pushf
inc
and
nop
adc
cmp
dec
movlps
jo
sub
sub
push
add
call
xor
inc
aam
push
bound
xchg
or
xor
and
jmp
stos
sahf
mov
dec
add
push
xor
movs
lea
mul
cdq
call
inc
sahf
xor
sbb
push
or
idiv
cmps
mov
xchg
xchg
out
sbb
pop
mov
jecxz
xchg
aas
dec
xor
jns
and
or
lods
push
pop
inc
and
loope
sbb
in
jl
sub
push
adc
out
ja
add
inc
daa
nop
cmovno
pop
jb
push
jo
mov
xchg
or
inc
xchg
mov
call
dec
or
imul
xor
or
cmp
xchg
push
fist
dec
push
pop
adc
push
push
test
add
jne
outs
sbb
data16
add
jno
cld
cs
sbb
sahf
mov
xchg
jmp
mov
cmps
movhps
xchg
out
icebp
test
cmp
jmp
jns
das
sub
fimul
mov
jne
aaa
sbb
adc
out
or
in
pop
inc
dec
dec
sahf
es
or
nop
out
push
add
ret
adc
(bad)
cmp
inc
sahf
or
jle
nop
addr16
adc
cmp
or
inc
jmp
adc
movs
adc
cmp
cwde
sbb
es
dec
ds
sub
adc
iret
lea
pop
dec
sbb
xchg
ror
repz
stos
add
adc
imul
jg
sub
or
sub
dec
dec
les
add
and
in
nop
in
mov
sbb
xchg
xchg
push
scas
(bad)
aam
bound
adc
jle
or
cs
and
xor
fist
or
add
mov
das
ror
fs
iret
adc
jo
adc
sub
rcr
movs
add
push
add
add
push
xchg
cmovl
cmp
push
xor
inc
push
add
push
out
pop
xchg
adc
adc
inc
xchg
or
repnz
shld
dec
inc
data16
retf
or
cmp
mov
add
popf
inc
or
and
fisttp
repz
or
iret
aaa
sbb
enter
jb
sbb
daa
shr
add
loope
push
cs
rcl
or
dec
enter
sub
adc
test
arpl
cmp
xor
sbb
dec
cmp
cmp
inc
retf
pop
lods
mov
adc
mov
ror
in
call
xchg
inc
adc
sbb
(bad)
adc
dec
push
adc
shr
adc
sbb
mov
sbb
dec
sbb
aaa
dec
popf
or
push
add
sub
lods
aaa
adc
or
cmp
adc
les
movs
add
pop
and
dec
and
fidivr
nop
push
pop
add
xchg
jecxz
adc
adc
push
push
je
sbb
rol
mov
fs
pop
in
pop
dec
dec
in
popa
sbb
sbb
inc
push
dec
jae
daa
inc
inc
pop
sbb
add
cs
aas
bt
or
sub
out
invd
push
xor
mov
in
sahf
and
adc
jb
test
(bad)
sub
sbb
or
shr
and
popa
or
adc
and
popa
jb
add
movs
or
mov
adc
xlat
cmp
dec
scas
in
push
pminsw
rcl
mov
jns
and
or
cmp
rol
test
sub
mov
mov
add
bound
dec
mov
iret
and
xchg
xchg
mov
nop
push
fcomp
xchg
xor
inc
pop
xchg
cmp
mov
jbe
jne
mov
adc
les
popf
xchg
mov
pop
or
inc
sub
pop
dec
push
pusha
adc
mov
pusha
inc
sahf
ds
pop
aad
test
dec
and
adc
leave
adc
inc
push
cdq
cmp
adc
add
dec
push
lea
xchg
or
clc
(bad)
dec
adc
push
cmps
pop
xchg
mov
mov
fwait
xchg
sub
add
sub
repz
mov
cvtps2pi
or
inc
sti
sbb
sub
sbb
push
data16
pop
mov
cmps
ror
push
pop
inc
add
inc
imul
cmp
xor
or
push
bound
sar
pusha
add
adc
pop
push
dec
shl
nop
inc
pop
(bad)
int
push
xor
add
pop
dec
or
cmp
pop
adc
add
mov
stos
xchg
mov
mov
(bad)
cmp
add
imul
pop
pop
adc
das
sbb
xchg
cmps
repnz
push
outs
or
sub
adc
lods
sbb
inc
mov
and
and
jb
popa
aam
arpl
pop
sbb
sub
fcom
pmulhw
or
push
mov
sbb
lods
rcr
int
pop
(bad)
and
mov
out
add
adc
mov
(bad)
cmp
dec
adc
and
mov
xor
sub
sbb
fisubr
(bad)
gs
add
rcl
dec
mov
pop
mov
ret
mov
fwait
dec
fwait
add
inc
push
or
lahf
push
sbb
add
cdq
adc
cmp
adc
test
test
push
dec
sbb
xchg
test
inc
pop
add
pop
cwde
mov
push
movs
sbb
cmps
push
nop
in
sub
pop
daa
(bad)
and
js
fild
xchg
jo
xchg
jmp
or
adc
iret
push
add
adc
jno
add
push
add
iret
and
cmc
push
sbb
daa
scas
or
test
push
pop
cmp
or
and
xchg
dec
xchg
or
xchg
scas
dec
je
retf
or
dec
je
test
out
aad
push
cmp
jns
inc
jno
in
add
push
push
sbb
outs
stos
cmp
rcl
pop
shl
arpl
jecxz
and
mov
out
or
jns
xchg
lea
dec
leave
in
jae
adc
cmp
sti
sbb
push
dec
or
push
add
jns
push
or
inc
sbb
fist
mov
xor
adc
retf
adc
mov
pop
leave
xor
mov
or
jns
lds
nop
retf
dec
add
or
or
xchg
pop
jns
sbb
or
jmp
or
push
js
or
inc
sahf
aas
adc
sub
and
shl
or
sbb
or
jle
dec
ds
mov
or
push
sbb
xchg
cmp
cs
jae
sbb
add
mov
push
add
bound
and
stos
adc
mov
mov
js
inc
sub
test
stos
fadd
dec
adc
sbb
lock
or
sahf
retf
sbb
xchg
push
add
(bad)
sahf
sub
mov
nop
add
cmps
push
xchg
sahf
dec
or
sbb
xor
push
popa
lea
out
add
adc
cs
sahf
sysret
xor
cmp
sbb
jnp
adc
call
cmp
cmp
cmp
ret
sub
les
sbb
enter
mov
dec
jmp
cmp
sbb
mov
out
call
xchg
arpl
sub
jns
push
imul
in
sub
mov
xor
adc
ds
mov
jns
adc
adc
push
minps
push
test
adc
into
pop
adc
jecxz
lds
outs
or
ins
inc
sti
push
test
xchg
pop
adc
push
xchg
jb
and
add
and
mov
cld
cmp
in
test
shl
not
ror
pop
movs
jne
adc
or
sub
jle
xor
or
or
mov
cld
popa
or
icebp
add
adc
mov
pop
jmp
or
fisttp
mov
dec
push
jne
into
and
pusha
inc
add
jmp
mov
out
xor
sbb
sub
sbb
jge
jns
adc
scas
jp
xchg
cs
daa
mov
pop
or
mov
sahf
cmps
repnz
inc
dec
or
cwde
add
push
mov
sbb
mov
adc
and
imul
mov
pop
xchg
test
xchg
mov
jns
cmp
ss
test
add
xor
push
jo
or
adc
and
repz
cs
or
add
xchg
jae
dec
enter
dec
mov
lea
add
adc
jne
aaa
add
and
and
and
dec
add
or
pop
add
and
inc
popa
test
je
retf
sbb
lahf
mov
mov
or
add
push
test
movs
or
mov
imul
and
adc
test
xlat
jns
push
sub
(bad)
mov
mov
xchg
iret
fisttp
test
and
add
cmp
add
cmps
adc
daa
add
test
or
into
mov
push
jl
stos
sub
or
jne
add
loop
ins
mov
cmps
repnz
(bad)
mov
sub
lods
dec
sahf
adc
sub
dec
sbb
jmp
outs
pushf
or
inc
rol
rol
mov
mov
inc
mov
mov
sub
aaa
mov
mov
sub
out
inc
mov
sub
pop
xchg
adc
jg
cmp
sub
add
add
xor
or
popa
dec
pop
call
mov
sbb
pop
gs
adc
sbb
add
or
mov
lods
les
mov
sbb
push
movs
add
add
or
add
scas
or
xor
mov
sbb
movs
dec
pop
loope
inc
fsubr
test
mov
xor
or
add
outs
dec
and
push
sub
adc
or
shr
pop
jecxz
xor
fild
inc
adc
bswap
int3
rcl
xor
xor
or
clc
sahf
mov
imul
dec
ja
push
add
or
or
or
push
out
pop
adc
aas
sbb
arpl
cs
push
push
mov
dec
(bad)
sub
cmps
xchg
pop
push
sub
mov
nop
inc
xor
inc
adc
push
add
push
pop
xlat
push
push
movs
pusha
imul
cmp
test
mov
addr16
sub
adc
add
push
mov
adc
cld
pop
push
add
xchg
cvtps2pd
ins
xor
cli
les
jle
xor
add
adc
push
xchg
sar
mov
push
adc
pop
mov
inc
das
aaa
arpl
repz
inc
mov
in
cmp
xor
fadd
outs
test
mov
add
mov
or
xor
je
test
adc
or
stos
push
inc
stos
movs
repz
push
(bad)
leave
sbb
and
pusha
pop
sub
cmp
rcr
pop
mov
mov
jle
adc
test
jns
aad
jl
jbe
jbe
or
or
add
and
sub
mov
dec
mov
inc
pop
pop
add
leave
int3
and
xor
xor
fisub
dec
dec
mov
jns
add
adc
add
or
daa
movaps
or
xchg
add
xchg
pusha
and
xor
inc
inc
sbb
add
cmp
push
test
sbb
xor
jmp
mov
fs
sub
mov
sahf
inc
add
pop
xor
lds
add
sub
test
xchg
cmp
xor
inc
xor
pop
add
or
sahf
cmps
repnz
and
adc
or
dec
mov
push
adc
sub
je
cmp
pop
test
jo
and
aad
push
xchg
or
xor
loopne
dec
xchg
inc
imul
sub
xor
adc
or
jecxz
arpl
cmp
sub
push
mov
inc
dec
mov
mov
push
mov
cmps
mov
inc
add
dec
xor
cs
sbb
loope
sbb
or
jmp
add
mov
adc
repz
push
pop
pop
inc
or
test
push
call
test
inc
push
adc
add
lds
ss
sub
rcl
adc
shr
dec
push
(bad)
movs
mov
ins
cmp
fs
sbb
add
dec
movs
or
shl
mov
or
and
push
aam
adc
cmp
or
sub
iret
sbb
in
pop
es
ud2
xchg
add
in
es
out
jae
sahf
out
inc
pop
or
mov
in
repnz
push
xchg
gs
or
inc
aas
sub
mov
test
lahf
xor
cdq
cmps
dec
sbb
push
push
sub
inc
or
and
mov
mov
adc
mov
aaa
jg
mov
xor
sbb
ret
sub
sub
push
sub
adc
push
test
sahf
retf
(bad)
and
call
and
or
mov
ror
add
in
rcr
pop
std
das
inc
or
add
fmul
push
jno
iret
sbb
jge
mov
cmp
popa
nop
out
add
push
push
or
and
shl
and
iret
or
inc
or
adc
and
lods
ficom
add
frstor
push
sub
or
pop
cli
(bad)
pop
pop
arpl
movups
add
jle
sbb
fiadd
inc
popf
add
push
rcl
es
or
imul
jns
mov
popf
cmps
into
je
push
jae
pop
ins
or
pop
out
(bad)
stos
xor
sub
jo
mov
jmp
add
or
dec
sbb
sbb
cmp
dec
dec
cmp
sub
test
inc
or
sbb
rcl
inc
jle
xor
fidiv
adc
adc
add
rcl
mov
(bad)
das
mov
mov
add
test
sub
pop
dec
push
xchg
mov
mov
out
call
dec
sbb
and
ret
dec
add
push
xchg
mov
bound
and
or
shl
xchg
mov
dec
add
pop
xchg
cmp
sbb
adc
cmp
aas
add
sbb
les
sub
rcl
jb
jae
addr16
cmp
mov
mov
push
into
xor
push
mov
sub
ja
jp
cmp
and
adc
lods
mov
add
jo
aam
pop
sti
and
add
adc
ds
push
xchg
sub
out
sahf
out
(bad)
xor
sbb
or
add
xor
pop
mov
inc
enter
sub
jns
jne
push
adc
or
xchg
jmp
ret
push
repnz
es
pop
push
xor
out
and
push
es
sbb
jmp
out
(bad)
(bad)
sbb
jnp
add
dec
dec
xor
test
lea
add
test
outs
adc
rcl
pop
adc
popa
jae
pusha
inc
add
lock
or
pop
and
add
pop
iret
xor
push
sbb
movs
shl
fimul
jmp
stos
pop
mov
lock
push
aas
mov
adc
jbe
add
fsub
push
adc
adc
adc
push
jae
mov
or
aaa
repz
cmp
cmp
add
cwde
cwde
stos
cdq
push
dec
push
pop
pop
jp
push
push
xor
lods
mov
movs
bnd
ror
imul
mov
dec
mov
popf
cmps
cmp
sahf
sbb
or
in
sbb
jl
adc
fs
sbb
and
cmp
movs
arpl
daa
pop
or
jecxz
push
repnz
push
leave
and
xchg
mov
addr16
sahf
mov
(bad)
sbb
test
in
dec
sub
bound
and
add
and
mov
xor
and
sbb
retf
mov
push
es
sbb
bound
test
arpl
mov
test
pop
dec
push
cmp
pushf
leave
mov
inc
sbb
mov
bound
cdq
cwde
sub
push
or
cmp
std
or
pop
adc
adc
or
mov
xor
dec
test
xchg
out
or
lods
cmps
and
lods
xor
cmp
pop
push
dec
adc
ret
cwde
add
pop
movs
imul
cdq
inc
cmp
adc
jne
mov
push
ins
sub
daa
cmp
adc
test
or
lock
daa
push
sbb
test
call
dec
sahf
dec
sub
and
and
adc
mov
mov
test
add
or
repz
sbb
xor
push
push
dec
inc
inc
pop
mov
ja
add
add
sub
jne
inc
pop
pop
jae
sub
test
and
mov
add
pop
adc
inc
call
or
jne
or
mov
pop
mov
in
pop
add
push
and
push
sbb
cmp
sar
rcl
loope
enter
adc
mov
and
(bad)
cmp
xor
and
mov
mov
rcl
fs
test
rcr
jne
jmp
jns
stos
icebp
adc
add
push
cmp
and
push
cmp
or
les
pusha
inc
adc
and
aam
(bad)
inc
push
and
push
xor
or
loop
and
inc
dec
adc
add
stos
daa
iret
repz
dec
dec
daa
das
add
sub
or
add
mov
or
or
and
fwait
iret
repz
fadd
sbb
add
xchg
cmp
cdq
popf
cs
pop
xor
pop
int
test
add
mov
retf
ja
in
iret
daa
or
cmp
nop
or
mov
jns
adc
jns
pop
sbb
or
adc
pop
imul
rol
cmps
add
out
add
les
or
cdq
cwde
movs
cmp
add
jae
or
or
iret
stc
add
cmp
bound
xor
aas
or
sub
push
test
push
and
sbb
add
je
jecxz
cwde
sub
and
pop
retf
imul
lods
xor
pop
pushf
xchg
add
xor
inc
mov
das
xor
add
or
mov
imul
xchg
or
mov
scas
dec
inc
sub
jns
add
es
mov
sbb
jecxz
sbb
dec
sahf
out
add
shr
push
fcom
push
cmp
and
sub
or
scas
dec
seto
pop
sbb
test
test
push
and
daa
pop
adc
cmp
add
pop
(bad)
push
sahf
dec
pop
push
cdq
js
adc
xor
mov
ins
xchg
pop
jmp
pop
jecxz
shl
pop
ins
in
push
inc
push
pop
adc
jecxz
add
or
sahf
daa
leave
xchg
add
das
jmp
dec
popa
pop
xchg
fsubr
sbb
dec
adc
add
or
jo
repnz
add
cmc
(bad)
(bad)
mov
adc
adc
add
imul
mov
and
rcl
les
test
push
cs
push
adc
xchg
gs
iret
repz
push
jo
test
pop
push
and
push
mov
sbb
adc
add
test
or
or
mov
mov
out
outs
add
iret
push
push
push
push
imul
fist
in
pop
mov
and
adc
adc
mov
das
push
xchg
data16
gs
add
pop
out
push
push
inc
js
add
adc
xor
data16
iret
repz
or
arpl
and
mov
add
add
cmp
movs
mov
sbb
imul
mov
cs
gs
sahf
inc
inc
dec
(bad)
cmp
jo
add
and
dec
xor
test
push
dec
inc
bound
xor
pop
push
cmp
pusha
nop
xchg
mov
and
rcr
lahf
add
gs
push
push
adc
rol
inc
sahf
and
dec
enter
cmps
stos
pop
adc
imul
loopne
ror
add
inc
test
aas
movs
daa
push
rol
or
or
rcl
add
sbb
cwde
or
mov
push
out
inc
jae
xor
jp
mov
xor
xchg
retf
ror
cs
cmp
or
mov
cmc
xchg
jmp
ss
add
addr16
and
lds
or
push
add
push
or
repz
cmp
add
mov
in
gs
stc
addr16
pop
pop
leave
leave
dec
or
sbb
jb
enter
sbb
mov
je
enter
push
adc
push
xor
and
xchg
xor
and
sub
xchg
pop
mov
in
test
add
mov
mov
adc
jge
or
iret
and
repz
mov
sbb
and
push
jne
inc
xor
and
xor
imul
into
push
or
add
adc
mov
cmps
add
fdiv
push
int
leave
inc
add
inc
iret
repz
dec
mov
pop
or
add
je
mov
sub
xor
mov
mov
movs
push
xor
pushf
mov
cmp
cmp
pop
(bad)
fs
sub
cwde
or
ror
adc
fiadd
cmp
xor
pause
xor
cmp
xchg
dec
sahf
retf
pop
add
test
jmp
adc
je
mov
in
jns
sbb
sbb
shl
xchg
cmp
or
cmps
aas
adc
jae
pop
stos
xor
add
xchg
sub
or
cmp
add
push
jb
rol
cmp
arpl
push
mov
lds
pop
rcl
pop
adc
fild
stc
ret
movs
jne
mov
push
dec
lahf
out
retf
ror
outs
ror
sahf
cmps
pop
cli
xor
sbb
aas
fld
ret
je
mov
pop
pop
lods
(bad)
pop
pop
or
cmp
or
jns
pop
enter
add
inc
mov
jno
inc
xchg
jl
cwde
sub
pop
xchg
adc
xchg
inc
push
mov
mov
out
cmp
pop
pop
adc
cmps
xchg
loopne
das
inc
fxam
js
adc
or
xor
cmp
dec
pop
movups
adc
in
test
or
mov
inc
lods
push
sbb
add
popa
lahf
push
xor
daa
hlt
or
mov
sbb
dec
(bad)
push
imul
push
repnz
adc
jne
scas
push
xor
pop
dec
arpl
add
and
mov
sub
xchg
scas
rol
or
test
mov
pop
push
push
mov
and
dec
jno
cmp
and
xor
adc
sub
mov
add
dec
in
adc
adc
mov
and
mov
sbb
aas
cmp
hlt
int3
inc
mov
or
push
or
or
sub
or
mov
pop
or
push
lahf
jb
or
shr
push
add
cmc
xor
movs
add
daa
lds
ror
cmps
call
xor
cli
add
sub
push
xchg
ss
retf
cmp
xor
mov
add
stos
dec
add
add
push
push
push
movs
shr
jno
inc
sbb
dec
sub
imul
pushf
push
scas
ror
push
or
and
cwde
mov
mov
sub
js
adc
sbb
ss
sahf
jae
sub
or
pop
je
and
cmp
mov
add
push
pop
jns
xchg
out
jle
and
add
jnp
inc
dec
inc
and
adc
or
sub
cmp
cmp
and
pop
mov
adc
and
add
and
push
add
dec
mov
inc
enter
add
mov
in
add
adc
add
xor
adc
push
add
add
and
jno
call
test
in
dec
sahf
out
stc
pop
data16
shl
xchg
jg
inc
cs
dec
adc
inc
add
push
pushf
jne
pop
push
repz
aaa
add
or
test
or
push
sbb
sbb
jns
sub
repz
adc
dec
adc
pop
psllw
mov
mov
xor
add
mov
add
jne
xchg
ret
xchg
dec
rcr
xor
mov
out
and
inc
adc
jae
nop
nop
ficomp
push
push
dec
or
jno
leave
repz
sbb
xor
sbb
fs
cmp
adc
je
call
repz
mov
xchg
shl
push
pop
xchg
jp
inc
popf
loope
neg
adc
sub
dec
dec
sbb
sub
inc
je
retf
repz
icebp
sbb
retf
fistp
push
mov
ss
mov
movs
push
adc
ret
mov
das
sub
daa
inc
es
nop
add
sbb
sahf
retf
sbb
or
sub
or
call
xchg
sub
rcr
pop
add
sub
adc
les
iret
fsubr
push
jmp
test
sbb
jae
sub
imul
push
ss
and
sub
adc
lds
pop
rcr
gs
pop
fist
popa
xor
sbb
and
and
xor
loop
xchg
pop
jns
sub
cdq
push
xor
pushf
out
shl
retf
or
das
mov
jns
push
adc
xchg
cmp
daa
sbb
sbb
adc
sbb
xor
add
or
jle
mov
and
sahf
jl
sub
fwait
sub
mov
sbb
popa
dec
push
in
sbb
aam
push
add
out
push
adc
pop
imul
pop
add
xor
and
mov
and
loope
xchg
dec
in
push
pop
inc
fisubr
push
lods
sti
iret
push
cdq
ret
push
push
nop
loopne
inc
and
push
mov
sub
inc
pusha
sbb
pop
cmp
test
outs
add
movs
jno
push
ficomp
add
add
adc
add
cmp
xor
adc
pop
sbb
push
int
stos
iret
xchg
or
(bad)
adc
arpl
xchg
pop
add
jno
mov
push
out
sahf
and
dec
sub
or
adc
sbb
inc
xor
aad
fisttp
pushf
ss
repnz
out
adc
shl
sub
lea
adc
cmp
pop
or
sub
nop
add
fiadd
push
dec
mov
adc
dec
push
dec
push
adc
rol
(bad)
arpl
inc
adc
fsub
pop
stos
sub
sub
loope
or
sar
add
xor
mov
(bad)
cmp
mov
mov
xor
dec
sub
leave
and
sbb
or
addr16
and
(bad)
sub
nop
out
leave
sbb
xor
aam
xchg
inc
mov
mov
cdq
fnstcw
inc
fwait
cmp
dec
sahf
out
daa
push
mov
or
out
add
das
mov
sti
dec
repnz
or
jns
pop
and
fdivr
pusha
or
push
sbb
movs
adc
add
std
pop
add
adc
add
(bad)
lods
add
loope
inc
sub
jb
mov
scas
pop
cs
aad
cs
inc
inc
lea
mov
and
sbb
pop
rol
cmp
xor
mov
icebp
repnz
out
imul
jb
clc
scas
js
or
jmp
mov
mov
je
xchg
sbb
call
xchg
push
out
es
xor
cmps
mov
sub
mov
adc
sbb
cmp
jnp
call
ins
push
cmp
sub
inc
add
test
outs
pop
addr16
iret
jae
mov
inc
xchg
pushf
cmp
mov
dec
jno
pop
sub
jb
add
cmps
test
push
adc
adc
pusha
adc
sbb
and
pslld
sbb
or
in
pop
dec
cmp
adc
fwait
(bad)
sub
cmc
iret
repz
add
scas
shl
les
and
daa
xchg
dec
cmp
and
cmp
sbb
add
jmp
xor
scas
cmp
sub
add
sbb
repnz
ss
stos
scas
mov
mov
fstp
test
xor
pusha
dec
sahf
retf
adc
or
aam
dec
dec
cmp
call
and
repz
call
int3
aam
xor
inc
stos
je
jbe
sahf
add
jno
add
and
xor
and
stos
xor
jp
add
adc
xor
xor
pop
ja
sub
mov
stc
xchg
add
sub
jg
push
sbb
and
add
daa
xor
cmp
inc
inc
sbb
and
mov
stc
xchg
cmp
xlat
repz
pop
shl
mov
inc
adc
push
pushf
cmp
xor
sub
fcom
and
call
pop
or
dec
test
ins
(bad)
rol
fadd
es
retf
mov
mov
xchg
out
add
pop
or
inc
mov
push
push
and
nop
inc
add
xor
adc
jne
iret
mov
jl
daa
cwde
pop
pop
mov
or
push
push
or
jg
add
or
inc
pop
mov
jno
je
cmp
shl
cmp
aas
daa
stos
or
mov
inc
inc
iret
imul
xor
jge
push
xor
pop
cdq
enter
rcl
dec
scas
mov
xchg
jbe
inc
lds
(bad)
popf
sbb
nop
push
mov
cwde
inc
int
addr16
sub
mov
sub
test
sbb
les
mov
adc
adc
or
lock
stos
pusha
pop
sti
add
fs
out
movs
js
add
jmp
stc
cmps
and
and
pop
sbb
cmps
imul
(bad)
arpl
push
xor
cmc
cmp
jb
dec
jmp
mov
dec
add
xor
or
mov
mov
and
lods
popa
pusha
(bad)
in
js
sahf
cmps
bnd
pop
sub
out
cmp
movs
add
push
or
sub
adc
xchg
jmp
or
test
mov
mov
jle
not
mov
ret
js
jae
mov
jnp
inc
push
adc
adc
or
cmp
sbb
or
daa
push
jge
add
jns
dec
sbb
push
and
repz
inc
mov
iret
or
xor
add
adc
sbb
imul
dec
gs
mov
push
cmp
and
pop
dec
xor
cmp
retf
fild
jmp
or
jo
xchg
and
or
test
jns
push
jbe
sbb
ss
and
dec
mov
out
or
dec
and
aad
sbb
popa
push
or
adc
mov
add
ss
dec
xchg
inc
pop
inc
pop
sub
scas
push
invd
push
aas
push
lds
sub
rcr
or
dec
mov
mov
sub
stos
add
and
add
(bad)
nop
hlt
and
sub
cwde
adc
push
push
add
in
sbb
fisttp
push
pop
cwde
xchg
dec
push
or
fbld
es
or
pop
dec
add
sbb
nop
add
inc
sub
add
and
cmp
inc
sbb
out
or
(bad)
mov
jo
pop
and
or
imul
xor
psllq
xor
sub
and
add
popa
arpl
sahf
inc
bound
mov
mov
jmp
add
pop
inc
or
add
xchg
or
and
jo
and
aaa
movs
dec
sahf
repz
iret
adc
jns
and
xchg
test
or
inc
or
mov
push
pop
repnz
test
inc
mov
aaa
call
aas
test
add
add
adc
and
add
add
cmp
das
cmp
ins
add
aad
mov
push
xchg
sub
outs
add
dec
pusha
adc
or
push
daa
jo
and
dec
test
push
pop
mov
adc
in
pusha
mov
sub
lods
leave
dec
add
or
dec
lods
in
jle
loopne
jns
or
sub
jmp
repnz
out
inc
inc
xor
stos
out
or
outs
and
mov
in
and
push
jns
adc
xor
or
add
add
in
inc
xchg
test
movs
shl
sbb
fistp
stos
adc
dec
or
movs
adc
adc
push
jmp
and
xchg
or
or
fsub
dec
cmp
pop
dec
gs
add
xchg
mov
sub
jbe
and
cdq
or
jne
mov
sahf
out
push
adc
in
pop
rdmsr
push
sbb
rcl
cwde
xor
inc
or
cmp
mov
dec
add
test
loop
sbb
dec
loopne
or
dec
es
mov
add
adc
test
pop
sbb
xchg
iret
push
push
arpl
ret
add
outs
ret
pushf
pushf
push
adc
popa
pop
shl
adc
push
add
aad
fmul
jns
add
or
mov
sub
dec
push
movups
adc
add
imul
out
and
test
push
jns
xchg
xor
inc
xchg
arpl
dec
pusha
mov
and
adc
add
inc
mov
inc
add
xor
jmp
mov
sbb
xor
mov
aas
push
jb
or
push
jecxz
mov
(bad)
enter
hlt
adc
adc
mov
push
and
les
inc
ret
sti
push
cmp
adc
mov
aaa
es
retf
sahf
out
es
or
xor
test
aas
enter
push
dec
or
add
xrelease
inc
mov
sub
ror
jnp
add
das
(bad)
loop
icebp
push
add
add
(bad)
and
add
xchg
mov
xor
cmps
push
adc
jmp
test
bound
shl
jno
sbb
or
movs
imul
pop
fiadd
ss
pop
aam
and
jp
cmp
cli
xor
pop
imul
and
add
jle
cdq
shr
sbb
pop
pop
mov
lods
sar
xor
retf
loope
xor
cmp
or
mov
daa
shl
jb
xor
ds
push
xor
dec
imul
(bad)
bound
sub
sub
pop
jb
mov
add
not
addr16
push
push
ins
loop
sbb
add
stc
retf
(bad)
pushf
jl
xchg
cmps
cs
or
test
mov
sbb
jne
iret
repz
adc
dec
push
mov
or
adc
push
adc
aaa
popa
pusha
adc
ror
sbb
daa
adc
repnz
sbb
imul
sbb
cmp
sub
jne
das
dec
mov
test
sbb
sub
inc
and
or
add
xor
icebp
jg
or
cs
add
fistp
push
add
inc
dec
inc
dec
inc
or
xchg
repz
inc
and
jno
iret
pop
adc
ds
sahf
repz
cmp
and
repnz
mov
test
iret
pop
push
or
pop
aam
bound
or
jnp
xchg
mov
fisttp
mov
jmp
or
loopne
or
repnz
enter
and
inc
dec
retf
pop
xor
add
fs
fcomp
or
daa
mov
jb
dec
jecxz
mov
push
cmps
daa
push
add
sbb
imul
add
add
inc
sub
push
push
or
push
sbb
or
jg
xchg
dec
scas
fnsave
dec
add
dec
out
pop
jmp
cmp
test
imul
adc
or
adc
inc
loopne
(bad)
push
mov
xchg
or
aas
enter
fwait
arpl
repnz
and
dec
pop
cmp
xor
cmp
push
inc
call
fs
push
mov
rcl
add
cmp
jne
mov
push
dec
adc
ret
add
xchg
cmps
stos
or
jp
mov
mov
add
or
lock
pop
add
jns
sub
mov
out
push
out
or
pop
daa
fidivr
adc
fwait
test
push
imul
test
adc
stos
or
sub
js
or
(bad)
jns
mov
and
or
or
ret
dec
jns
xor
mov
nop
out
and
retf
jne
scas
dec
or
or
fs
push
imul
adc
mov
(bad)
mov
sub
pop
cmps
bound
adc
fucom
inc
adc
aas
sahf
out
pop
lahf
ins
ss
or
xchg
shr
xlat
aas
and
add
stos
sub
cmp
or
daa
jge
mov
xor
dec
push
movs
cmp
adc
cmp
and
pop
sub
pusha
add
dec
xor
sbb
mov
dec
xchg
dec
mov
or
in
repnz
outs
push
sbb
or
adc
sbb
gs
pop
add
arpl
add
arpl
inc
xchg
xchg
out
or
inc
retf
sub
pushf
cmp
bound
push
cmp
sbb
add
and
add
sub
cld
add
add
sbb
inc
pop
push
dec
ret
sbb
cmp
sbb
push
sbb
sbb
adc
retf
mov
and
movs
xchg
outs
(bad)
sbb
or
sub
adc
mov
rcl
lods
xchg
mov
sahf
retf
call
xor
jns
cmps
lods
adc
sbb
cld
ror
adc
xor
fnstcw
adc
cs
or
shr
sbb
jns
add
fs
adc
pop
xor
pushf
inc
fs
or
inc
or
push
push
push
xor
inc
push
cmp
push
in
push
jb
sub
cwde
or
xchg
mov
ins
rol
nop
daa
cli
xor
mov
imul
add
xchg
dec
cmp
and
dec
mov
(bad)
fadd
dec
dec
into
mov
mov
adc
inc
dec
aad
and
push
push
sbb
mov
push
pop
mov
sbb
mov
or
sbb
sub
(bad)
out
add
cmp
test
dec
sahf
xor
shr
add
mov
add
into
push
nop
and
push
retf
shr
sbb
mov
or
push
add
inc
or
push
add
or
and
add
ds
daa
or
ror
fcom
pop
dec
ja
sbb
sub
sub
jb
loopne
lods
and
pop
adc
adc
add
dec
ret
and
or
push
rcr
jne
iret
cmp
xor
adc
stc
xchg
stos
xor
inc
adc
and
and
popa
mov
push
add
or
stos
mov
repnz
cmp
inc
stos
sub
mov
cmp
psllq
cmp
and
stos
cmp
push
inc
repnz
int3
and
bound
stos
push
dec
and
iret
jns
in
sub
push
mov
loope
aas
and
adc
sub
arpl
xor
lgs
test
adc
inc
cmp
test
dec
in
xor
xor
mov
push
xchg
cmp
test
push
test
add
sbb
leave
jae
push
add
cmc
dec
jb
(bad)
in
dec
xchg
cmps
pusha
outs
fs
clc
xchg
or
aaa
sbb
cmp
pop
pop
pushf
ret
cmp
addr16
jp
or
mov
or
and
out
es
popa
add
push
xchg
sbb
jo
shl
mov
jns
sbb
mov
inc
ret
and
add
dec
aas
xor
movs
add
and
mov
je
xor
sub
add
pusha
test
add
rcr
scas
mov
sar
push
pop
pop
pop
enter
fst
add
sbb
popa
push
adc
xchg
inc
mov
push
jecxz
and
xchg
nop
dec
mov
mov
add
and
pop
xchg
push
jecxz
sahf
dec
adc
cmp
inc
in
push
repnz
inc
pop
adc
retf
shr
pop
dec
ret
in
jl
xchg
sbb
sbb
xchg
repnz
xchg
jo
dec
cmp
or
dec
loopne
xchg
push
cmps
and
cmps
nop
xor
(bad)
je
sbb
(bad)
mov
xor
push
sbb
pop
shl
push
pop
stos
sbb
or
cmp
cmp
push
or
adc
add
push
xchg
mov
pop
xchg
bound
and
push
and
repz
or
or
adc
or
cwde
(bad)
jo
cmp
mov
inc
and
jns
sub
jno
push
add
test
pop
es
xor
xor
dec
lea
arpl
or
bound
imul
mov
(bad)
cmp
xor
adc
adc
cmp
cmps
xchg
mov
test
sub
or
dec
imul
add
stos
inc
sar
addr16
or
cmp
sbb
in
and
or
and
dec
adc
cmp
push
loopne
lea
or
sbb
push
or
cmc
pop
sbb
add
inc
jae
jmp
mov
jl
cmp
adc
cwde
nop
out
xor
lds
(bad)
and
cmp
jns
push
(bad)
arpl
pop
add
cmp
nop
push
xchg
ins
and
and
popf
pop
into
adc
ins
pop
repnz
or
mov
pop
pop
or
shl
add
movs
adc
test
sbb
in
push
adc
imul
dec
pop
iret
in
xchg
cmp
dec
sahf
push
or
iret
les
int
add
jb
cmp
pop
mov
das
sub
sub
or
sahf
adc
fstp
and
push
xor
jmp
xchg
outs
dec
sahf
push
cmps
mov
push
ret
xchg
out
adc
push
pop
retf
in
cdq
mov
xchg
and
ret
sbb
or
dec
movs
push
adc
sbb
ror
pop
fwait
leave
stos
push
or
sub
push
add
test
scas
iret
arpl
sar
popa
add
xor
leave
adc
je
sbb
pusha
imul
movs
cmp
push
sub
pop
and
rcl
jnp
sub
bound
push
push
or
lds
data16
cdq
nop
out
cmp
sub
dec
leave
push
clts
pop
sbb
movs
sub
sbb
cmp
cmps
and
or
or
xor
mov
inc
adc
mov
xchg
retf
sub
add
aas
push
push
es
adc
(bad)
xor
sub
outs
rcl
or
ror
push
inc
or
movs
cmp
nop
add
mul
or
(bad)
stos
aaa
repnz
sahf
movs
push
cmp
sub
inc
and
jb
mov
or
and
sbb
push
push
adc
add
sbb
xchg
sahf
addr16
sbb
jecxz
or
cmp
or
jns
or
add
jp
lods
pop
push
add
gs
jo
pop
(bad)
pop
or
or
add
ffreep
test
adc
push
jecxz
sar
add
arpl
inc
fs
or
cs
sbb
xchg
addr16
jp
adc
inc
and
sahf
addr16
or
add
shl
adc
dec
inc
test
sbb
cmps
inc
xchg
and
jnp
add
lea
sub
sbb
adc
pop
sub
nop
sub
inc
aaa
adc
in
inc
popa
or
out
and
sub
xor
adc
aam
dec
mov
rol
sub
ret
int3
mov
imul
inc
add
or
and
int3
rcr
pop
xchg
sbb
test
leave
repz
cmp
sub
loopne
and
sbb
repnz
or
xor
add
sti
mov
push
sub
inc
(bad)
adc
adc
sahf
jae
cwde
dec
xor
or
or
adc
(bad)
xchg
cmp
loopne
inc
sbb
aaa
xor
test
xor
adc
repnz
in
adc
mov
sbb
pop
jo
sbb
adc
jne
jo
inc
loop
imul
leave
leave
sbb
pop
cmp
repz
or
mov
push
push
and
and
add
pop
test
pop
push
pop
mov
mov
or
inc
or
rol
test
sbb
adc
adc
xor
pop
cmp
popa
mov
and
pop
add
pop
xor
inc
adc
adc
sub
les
mov
add
cwde
shl
retf
pop
enter
mov
jmp
clc
retf
stc
cmp
and
push
and
adc
cwde
out
pop
sbb
push
cmps
add
add
or
sbb
adc
or
icebp
scas
adc
pop
sub
xor
bound
dec
retf
cmc
sbb
jo
add
outs
pop
je
enter
mov
test
js
dec
fmul
repz
outs
and
and
pop
mov
or
push
xchg
jmp
sbb
cmp
dec
adc
push
fadd
pop
adc
rcr
fmul
sub
and
push
sub
popf
ja
push
sbb
push
lahf
lea
xor
rcr
adc
sti
push
push
ins
jmp
(bad)
pop
sub
data16
and
mov
pop
lods
pusha
sub
adc
adc
icebp
pop
icebp
and
or
or
ret
test
adc
jl
and
std
xchg
add
and
aad
adc
movs
xchg
adc
push
aad
or
xor
fsub
and
and
lods
xchg
shr
lds
add
popf
setae
push
xor
add
adc
sbb
and
dec
imul
sub
out
ds
jl
push
dec
jg
mov
repz
sbb
cmp
add
dec
fld
xchg
loop
sbb
adc
imul
push
jo
jb
and
push
jns
jnp
add
push
or
push
jmp
pop
dec
hlt
and
mov
nop
dec
sbb
adc
sub
popf
sub
mov
sub
iret
repz
or
adc
sbb
xor
enter
dec
ficomp
sub
xor
inc
movs
mov
xchg
aam
pop
pop
sub
push
adc
mov
push
push
push
inc
dec
add
sbb
or
mov
or
sub
xor
nop
dec
sahf
ror
adc
rol
pop
ss
test
movs
aaa
add
adc
pop
inc
jmp
xlat
dec
mov
mov
dec
pusha
pop
or
xor
jmp
les
fwait
mov
jns
ficomp
mov
push
sub
push
les
and
cmp
add
xor
xchg
out
es
push
sub
mov
es
sahf
pusha
pop
add
and
adc
mov
arpl
add
or
jns
lock
adc
and
mov
movs
shl
and
push
xchg
dec
dec
outs
cmps
adc
jmp
out
inc
js
add
push
and
and
xchg
iret
mov
sbb
or
push
push
popa
lea
mov
jns
xor
push
inc
xchg
mov
lahf
xor
pop
test
mov
cmp
inc
nop
jns
push
cdq
cmp
cmp
sub
inc
mov
adc
sub
jns
inc
(bad)
mov
ret
daa
imul
iret
adc
add
push
or
pop
sar
addr16
mov
mov
add
addr16
rcl
add
fs
sahf
and
lea
jmp
adc
inc
ja
and
hlt
pop
adc
(bad)
sub
inc
nop
add
xlat
dec
or
adc
and
xor
out
jnp
xor
mov
sbb
or
mov
push
scas
pop
inc
dec
and
push
jl
and
or
leave
pop
fisub
cmp
and
mov
adc
das
or
adc
or
mov
push
inc
sahf
retf
js
add
adc
or
sbb
jne
push
push
cmps
rcl
je
inc
xor
jns
sbb
test
add
inc
movs
and
and
or
push
loopne
add
xchg
sbb
cmp
cmc
in
jp
add
test
clc
xchg
push
lea
loope
push
add
inc
loop
js
iret
sahf
(bad)
xchg
mov
out
sbb
lock
push
add
push
adc
sub
push
add
jl
push
popf
sbb
xor
sub
jo
jg
xchg
mov
add
xlat
jne
and
add
arpl
jns
jne
mov
add
ret
mov
jmp
repnz
add
add
pop
popf
mov
arpl
adc
pop
and
repz
out
and
and
mov
pop
pop
aaa
jmp
pop
inc
add
xchg
cmp
or
inc
arpl
loop
test
add
in
push
mov
and
push
and
sub
mov
and
push
push
inc
dec
and
or
sbb
and
iret
repz
ins
pop
and
ret
xchg
push
les
mov
push
xchg
add
sub
fs
push
dec
retf
mov
and
pop
pop
or
sbb
(bad)
sub
inc
and
sub
add
cmp
and
add
scas
aaa
add
aad
ja
and
pop
mov
cmps
add
loop
xor
or
pop
push
mov
pop
mov
test
pop
fild
aam
sbb
jns
sbb
dec
inc
fwait
nop
adc
imul
adc
shr
imul
inc
sub
neg
adc
xlat
sahf
pop
popa
stos
iret
dec
push
adc
in
push
and
and
arpl
add
sub
sub
mov
fild
stc
xchg
test
sbb
push
dec
test
pop
adc
leave
enter
jl
pop
xor
inc
add
out
add
xor
add
cmp
rol
inc
adc
dec
gs
xchg
test
or
repz
sbb
imul
add
adc
and
mov
jno
pop
mov
or
xchg
push
adc
loopne
in
fnstcw
xchg
push
xchg
fwait
in
push
inc
sbb
xor
mov
adc
sbb
and
cmp
cwde
sbb
sbb
es
add
xor
lea
int
sub
or
adc
setne
jns
mov
and
xchg
sbb
mov
or
jns
mov
xchg
adc
mov
cmp
inc
repnz
add
and
inc
or
xor
mov
scas
push
or
shl
test
pushf
dec
jmp
inc
arpl
and
push
push
and
ins
sub
outs
xor
add
or
cmp
or
push
adc
les
and
cs
aaa
push
add
gs
ret
or
repz
dec
dec
movs
jb
or
imul
popf
push
aas
add
sti
xor
inc
dec
pop
or
jb
pop
ja
imul
iret
xor
pop
jo
pop
add
cmp
aas
inc
pop
adc
sahf
outs
mov
add
cmp
or
dec
lea
pop
je
sbb
imul
xchg
push
imul
(bad)
dec
fsubr
bound
inc
cmp
dec
loopne
call
adc
jns
addr16
sbb
mov
add
mov
std
sbb
or
test
or
in
jns
xor
dec
pop
jnp
cmp
add
adc
cdq
iret
cmps
add
fs
sub
push
shr
bound
push
iret
shl
cmps
inc
xchg
xchg
mov
jmp
pop
aam
sbb
(bad)
enter
cmps
mov
and
xor
push
add
test
add
mov
les
aaa
fst
add
rol
sub
sbb
and
sahf
stos
mov
add
add
and
jns
adc
sbb
push
cmps
sub
cmp
xor
xor
sbb
sbb
jge
div
mov
popa
clc
jne
add
cmps
sbb
(bad)
dec
xor
add
loop
addr16
pop
or
push
outs
or
aas
bound
(bad)
aaa
xchg
das
and
sbb
push
mov
es
enter
or
shr
mov
inc
sbb
jecxz
add
or
lahf
xchg
data16
mov
(bad)
dec
in
sub
fild
and
xor
cmp
movs
and
iret
repz
sbb
rol
xlat
les
lock
mov
xchg
test
add
jns
mov
sub
inc
sahf
out
and
xchg
shl
add
xchg
out
sub
les
add
repz
or
jo
iret
add
rcr
or
xchg
sub
movs
add
adc
push
push
bound
or
add
mov
pop
xchg
xchg
leave
es
cmps
jne
adc
add
adc
or
or
mov
daa
push
mov
push
in
push
shl
or
ds
or
adc
mov
test
scas
mov
mov
xchg
in
out
scas
push
jne
test
popf
add
fmul
add
sbb
sbb
adc
sbb
and
push
enter
pop
ror
adc
mov
xor
(bad)
shl
sub
loop
add
push
dec
or
sahf
sub
or
iret
jae
(bad)
pop
psllw
sub
push
cdq
fbld
xchg
test
test
pop
add
xor
cmp
daa
add
push
fist
or
push
inc
sub
xor
or
cmp
popa
lds
or
xor
push
dec
mov
popf
and
cmps
mov
inc
aas
pop
sbb
aaa
sahf
or
hlt
xchg
shl
nop
retf
and
and
fwait
ins
fwait
rol
or
and
repz
or
adc
sub
repnz
push
push
xchg
ret
mov
add
or
add
iret
repz
push
jmp
push
push
push
and
movs
push
icebp
iret
inc
rcl
mov
add
and
js
stc
add
push
fadd
jo
jmp
dec
cmp
shr
mov
stos
fnstcw
bound
test
push
in
jp
mov
cmps
xor
inc
or
mov
pop
mov
(bad)
cmps
and
jmp
cmp
inc
sahf
adc
daa
or
sbb
add
cmc
adc
inc
sahf
outs
in
sbb
or
inc
add
jne
mov
or
xchg
retf
test
inc
add
je
test
push
les
and
or
xor
xchg
dec
push
pmulhw
cmp
test
xor
sub
movs
add
iret
repz
sub
inc
leave
or
xchg
cmp
xchg
sub
sub
adc
sahf
mov
enter
int3
push
or
iret
jp
sbb
loopne
adc
stos
cdq
rcl
mov
nop
sbb
inc
jmp
retf
aaa
jle
data16
xor
in
adc
cmps
inc
(bad)
push
dec
popa
sub
xor
cmp
sbb
dec
dec
and
inc
stos
addr16
and
je
and
hlt
inc
adc
popa
push
arpl
icebp
jne
aas
pop
xchg
das
test
inc
and
adc
inc
mov
out
or
or
xor
sub
stc
lods
pop
pop
pop
and
ret
and
add
sub
mov
ss
or
add
pop
ficomp
push
imul
xor
or
pop
bound
cs
xchg
int3
pop
adc
rcl
lahf
and
xchg
loopne
shr
pop
adc
sub
popa
pop
(bad)
rol
lds
mov
or
sar
mov
in
sahf
or
mov
test
leave
push
and
mov
rol
pop
pop
enter
sub
xor
sub
and
cmps
repnz
push
adc
or
mov
mov
or
in
cmps
imul
mov
adc
nop
out
or
adc
sbb
jnp
movhlps
xchg
sahf
test
stos
pushf
shl
adc
sub
es
sub
xor
add
daa
shl
cmps
jecxz
xor
ror
sub
test
out
add
call
add
push
or
dec
cmp
adc
add
(bad)
sub
adc
push
bswap
aas
out
cmp
push
dec
cmp
loop
and
movs
and
adc
jae
scas
mov
push
adc
inc
sahf
out
pop
or
xor
call
cmps
push
and
or
lods
adc
push
ret
das
push
cs
iret
inc
sbb
mov
cmp
push
mov
mov
test
pop
push
adc
inc
xchg
pop
dec
test
ret
and
mov
stc
arpl
xor
inc
mov
lods
and
test
jecxz
sahf
cmps
dec
daa
dec
or
mov
lods
adc
push
adc
and
test
sahf
sbb
push
sub
out
sbb
cdq
aas
or
nop
bound
mov
fldenv
sbb
push
out
leave
int3
nop
fwait
dec
jecxz
or
aaa
adc
mov
xlat
add
add
xchg
jo
add
cdq
dec
push
add
das
sbb
push
push
in
mov
mov
cmp
xchg
xchg
out
cmp
pop
mov
push
dec
dec
sub
mov
add
mov
mov
cmp
dec
adc
and
les
cmp
ss
test
es
sub
add
mov
scas
enter
and
or
jo
mov
mov
xchg
jo
dec
or
cmp
popa
xchg
push
and
sub
sbb
jns
and
adc
sub
jb
mov
cmp
add
dec
jns
xchg
push
movs
push
or
adc
in
or
push
aaa
or
sahf
mov
dec
xor
inc
sbb
xlat
xor
add
sti
xor
add
jg
mov
mov
rcr
dec
xor
inc
inc
lahf
dec
pop
test
out
stos
scas
jno
dec
dec
xchg
inc
(bad)
jne
aaa
sbb
les
stc
and
aad
jb
cmp
xchg
mov
inc
pop
push
dec
jecxz
ins
dec
or
adc
sub
sahf
cmp
jo
lods
int3
inc
mov
int3
fwait
int
aaa
lods
je
mov
pop
pop
retf
push
data16
or
and
(bad)
add
xchg
inc
sbb
jmp
add
push
and
sub
pop
sub
js
xor
push
xor
add
imul
mov
shl
cmp
loope
push
mov
pop
repz
xor
push
popf
xchg
faddp
test
icebp
mov
push
in
cwde
repz
pushf
cdq
das
or
movs
jb
push
push
and
mov
out
and
xor
adc
push
les
mov
mov
and
ret
shl
push
adc
mov
push
push
inc
or
es
sahf
or
pop
test
pushaw
adc
je
sbb
dec
sbb
fisttp
aas
ja
push
dec
inc
sub
inc
or
add
sbb
or
mov
mov
cwde
push
jo
xor
mov
adc
pop
and
sbb
lahf
test
arpl
or
and
add
scas
dec
dec
sahf
retf
or
lods
sub
shl
push
sub
imul
xor
inc
adc
xchg
sub
repz
jae
pop
pop
mov
add
inc
inc
adc
dec
lods
enter
movs
shl
sbb
cmps
adc
mov
sbb
push
ja
pop
xor
int
pop
pop
add
mov
adc
or
sub
pop
xor
dec
cmps
sbb
or
inc
inc
or
mov
xchg
loope
sbb
push
inc
(bad)
pop
arpl
xchg
rdmsr
es
into
and
inc
loop
jnp
jno
mov
and
adc
push
dec
add
xchg
xor
push
adc
pop
push
test
in
adc
add
leave
dec
adc
push
inc
pushf
adc
cmp
int3
stc
sub
xor
or
add
ins
pop
out
int3
lea
jnp
adc
jo
jge
jns
out
mov
ss
nop
push
xor
cmp
add
pminub
and
add
ins
or
adc
test
or
push
inc
dec
adc
inc
sahf
and
mov
inc
ins
or
cmp
jns
and
sub
xchg
mov
cmp
shr
pop
sbb
out
adc
aam
push
cmp
daa
or
xchg
pop
mov
push
or
lods
cmc
inc
pushf
mov
xor
and
cwde
push
sbb
push
jns
jo
inc
mov
nop
cmps
sub
add
push
jns
mov
sahf
out
and
sbb
repnz
lods
cs
and
pop
sbb
bound
enter
ret
xchg
and
mov
adc
pushf
cmp
call
mov
outs
pop
xor
mov
pop
or
mov
xor
and
jae
bound
rcl
push
push
dec
aam
adc
adc
les
cwde
in
mov
ss
and
push
and
or
frstor
es
push
add
xor
mov
(bad)
cmp
or
xchg
mov
std
add
test
mov
jns
push
pusha
or
loope
xor
iret
repz
add
cmp
dec
test
add
lea
sub
dec
adc
add
lock
test
sub
sahf
out
add
mov
cmp
sub
dec
sbb
add
clc
add
lock
push
gs
adc
xchg
inc
leave
and
(bad)
pop
mov
sahf
retf
add
shr
les
xor
movs
or
fisttp
adc
arpl
mov
or
or
cmp
and
cwde
addr16
dec
pop
xchg
push
jae
call
or
stos
adc
adc
or
mov
fdiv
mov
clc
xor
rol
adc
jns
or
pusha
add
or
sbb
mov
ror
call
sub
mov
add
mov
jnp
or
push
sbb
sbb
sbb
cdq
add
inc
ret
iret
enter
dec
push
pop
and
sar
scas
and
fnstenv
enter
leave
or
mov
mov
jnp
and
mov
or
in
pop
push
sub
iret
adc
pop
ins
call
jl
fiadd
xchg
pop
leave
das
cmps
jbe
mov
fwait
dec
punpckhbw
sbb
mov
push
repnz
push
repnz
xor
test
fwait
iret
xchg
and
jle
add
pop
repnz
add
test
mov
mov
rcr
cmp
mov
je
nop
out
inc
dec
add
pop
scas
gs
jae
fmul
jns
retf
xor
shr
and
adc
adc
mov
xor
mov
mov
sub
outs
mov
stos
mov
sub
push
sbb
and
xchg
inc
jg
sbb
call
and
add
stos
frstor
push
pop
and
xor
mul
pop
cmp
shr
mov
pop
jl
ret
pop
push
adc
pop
xchg
pop
mov
in
sahf
xchg
mov
push
dec
pop
dec
sahf
retf
dec
sbb
daa
add
or
test
push
cmp
dec
lds
pop
fbld
sub
adc
les
imul
dec
mov
dec
add
sbb
add
popa
stos
rol
sub
dec
loope
mov
cwde
adc
sub
adc
adc
push
test
xlat
add
rol
and
invd
pusha
adc
lds
mov
inc
ins
sbb
or
es
ret
(bad)
data16
jno
push
inc
lods
sub
push
cdq
jno
or
inc
imul
adc
popa
rol
cmp
icebp
(bad)
sbb
or
adc
pop
or
mov
pop
add
adc
add
imul
adc
pushf
and
add
adc
dec
cmp
iret
repz
mov
adc
or
cmp
cmp
pusha
sub
adc
in
cmp
mov
mov
outs
dec
sub
cmp
pop
mov
pop
cmp
xor
inc
repnz
xchg
mov
mov
dec
loop
push
xchg
mov
shl
jns
cmps
fwait
out
pop
sbb
dec
loope
in
ja
sub
xchg
adc
mov
das
pop
or
dec
enter
push
push
lods
es
mov
pop
shl
cdq
push
imul
and
cmp
je
clc
cdq
push
sub
adc
inc
inc
mov
cld
int
into
movs
adc
inc
xor
and
push
sbb
arpl
movs
or
pusha
or
push
sahf
xchg
enter
scas
into
adc
or
leave
push
jns
or
imul
es
aaa
push
xor
or
sub
pop
push
inc
push
stos
scas
sub
mov
xchg
xchg
push
add
je
mov
adc
in
sub
popa
adc
sub
adc
sti
xchg
and
scas
dec
icebp
xchg
mov
and
dec
arpl
(bad)
inc
push
or
add
push
ror
xor
adc
xchg
sub
and
adc
or
mov
out
es
enter
repnz
test
inc
dec
and
out
add
sub
add
mov
aaa
loop
mov
ins
inc
xor
adc
jp
ins
jge
xor
(bad)
xor
into
je
pushf
sbb
lds
add
xchg
jnp
add
sub
cmp
shl
and
add
pop
sub
invd
mov
push
jmp
cmp
(bad)
sbb
jns
dec
sbb
les
ror
popf
add
and
mov
shr
inc
and
iret
repz
stos
pop
push
movlps
xor
aas
or
jb
and
and
aad
or
in
xchg
mov
adc
imul
push
mov
inc
test
sub
push
fld
aad
and
repz
and
xor
and
ins
jl
xchg
cmp
mov
outs
adc
jae
xor
xchg
cmp
out
(bad)
and
sahf
adc
(bad)
inc
imul
retf
ss
add
mov
cs
adc
test
cmp
pop
and
jno
inc
and
test
xor
rcr
(bad)
ss
sahf
retf
dec
aaa
add
mov
or
or
jns
out
cmps
jae
mov
loop
in
lea
sub
pop
push
inc
pop
shr
push
movs
shl
popa
loope
sbb
sbb
jns
cmp
call
inc
or
adc
ja
in
mov
xor
nop
mov
xor
sub
dec
movs
inc
sbb
and
sahf
out
leave
mov
push
and
push
(bad)
repz
data16
push
and
and
adc
mov
xor
or
xor
leave
push
inc
adc
mov
push
cmp
push
ins
mov
xor
pop
jb
add
xchg
push
pop
sub
or
xor
lock
xchg
inc
xor
pusha
add
or
xor
(bad)
pop
mov
inc
daa
inc
and
loopne
push
and
sbb
int
lock
int
adc
or
mov
cmp
sbb
mov
pop
xchg
or
add
dec
jae
inc
mov
mov
push
push
dec
sbb
cmp
les
add
inc
mov
add
daa
movs
adc
jns
adc
or
add
repz
add
sbb
enter
adc
nop
adc
or
jmp
mov
xchg
xor
adc
cmp
add
push
cmp
rol
or
lea
and
and
xchg
xchg
pop
xor
and
pop
sub
retf
or
xor
cmp
inc
add
test
push
stc
dec
arpl
push
inc
mov
leave
adc
and
fs
out
mov
sahf
ss
push
inc
and
sub
nop
out
or
adc
nop
out
stos
mov
sbb
loop
pop
int3
dec
sub
sbb
nop
dec
scas
sbb
mov
or
pop
cmp
mov
mov
and
cmp
aaa
adc
scas
ds
add
mov
sbb
push
adc
xchg
mov
cmp
sbb
ret
add
sub
dec
pop
push
or
aaa
push
mov
pop
jno
inc
mov
add
movs
adc
and
cs
cmp
out
push
das
sbb
dec
sub
xor
push
or
imul
mov
fisub
add
add
(bad)
dec
loop
adc
pop
pushf
fmul
dec
or
loop
call
retf
sub
loope
pop
arpl
inc
mov
dec
and
xchg
push
adc
cwde
in
xchg
call
cmp
and
and
stc
and
xor
xor
daa
pop
add
or
cmp
adc
cmc
mov
jns
inc
pop
iret
in
dec
in
push
pop
xor
add
dec
or
xchg
xor
cmp
jns
mov
push
sub
pusha
cmps
cmps
and
mov
inc
sahf
out
or
rol
pop
cmp
retf
mov
or
and
cs
dec
xchg
retf
sbb
mov
es
sahf
or
add
push
add
sbb
push
cmp
popa
mov
aam
push
and
pop
inc
sahf
out
enter
dec
int3
add
mov
ror
leave
xchg
pusha
inc
call
fwait
adc
bsr
or
ret
xor
sbb
cmp
pop
xor
xor
popa
in
nop
pop
sbb
push
cwde
dec
pop
cmps
mov
dec
sub
xor
cmp
enter
daa
and
add
cmp
cdq
retf
adc
leave
add
push
not
iret
stc
ret
sub
das
pop
xor
push
repnz
inc
movs
sub
xchg
fwait
aam
dec
adc
inc
add
add
aaa
push
mov
sbb
and
xor
inc
push
or
sub
sbb
sub
push
aam
dec
sahf
retf
or
push
inc
popf
xor
push
retf
rcl
stos
add
jp
movs
adc
push
div
push
cdq
mov
mov
push
(bad)
fnstenv
or
add
outs
inc
add
fistp
or
addr16
ja
int3
ja
sub
add
inc
inc
dec
sbb
push
push
adc
add
push
add
and
dec
jge
or
sub
xor
add
dec
jle
sub
inc
add
mov
or
dec
into
lds
jns
es
call
add
mov
xchg
out
xor
out
scas
int
jno
or
sub
adc
inc
enter
push
or
popa
adc
mov
dec
inc
jae
out
mov
cmps
jo
lods
inc
daa
inc
sub
push
mov
(bad)
mov
dec
xchg
sbb
add
cmp
sahf
out
push
sub
push
lods
cli
push
ror
outs
add
sbb
add
jae
std
je
jae
mov
out
sbb
arpl
adc
aad
or
sbb
or
jle
cmp
(bad)
dec
add
psrlq
leave
sbb
imul
pop
adc
sub
or
ret
add
mov
xor
push
sbb
mov
pushf
xchg
push
mov
sub
ds
popa
cs
push
adc
xor
movs
or
adc
sub
cmp
adc
adc
and
cmp
push
jmp
mov
and
pushf
xchg
xor
pop
adc
adc
out
iret
xor
data16
xchg
and
sbb
in
and
dec
xor
mov
mov
lds
push
sahf
cmp
fs
enter
lds
(bad)
adc
or
push
or
imul
jae
and
sbb
add
test
and
or
arpl
adc
inc
repnz
into
adc
and
xor
cmps
push
sbb
xor
mov
out
cmp
repnz
and
push
add
cwde
shr
jns
cmps
pop
pop
add
(bad)
movs
cmp
mov
xlat
add
and
js
mov
adc
and
cwde
nop
out
adc
add
and
mov
add
imul
pop
inc
loopne
jecxz
ins
or
xchg
ja
push
movs
jb
and
xor
(bad)
push
movs
repz
add
add
pop
enter
out
sbb
or
and
sub
jb
mov
je
dec
fmul
stos
push
and
imul
aam
xlat
push
mov
adc
push
mov
in
sahf
arpl
sbb
add
mov
sub
dec
sahf
retf
adc
push
push
xor
mov
mov
cmp
jb
pop
mov
shr
adc
mov
add
mov
sub
and
ins
nop
ror
ret
jno
add
sub
or
cmp
or
inc
add
pop
das
push
xchg
jns
sbb
add
dec
mov
dec
and
xchg
jae
xor
jb
into
adc
push
sub
cmps
repnz
pop
pop
adc
jne
inc
cmp
and
mov
or
push
jo
mov
xchg
cmp
add
sbb
movs
inc
pop
and
add
add
imul
leave
jo
sahf
cmp
call
mov
add
test
or
repnz
xor
adc
jb
push
push
adc
adc
or
sbb
pop
test
cdq
or
adc
in
sbb
(bad)
sub
and
stos
jge
cld
adc
inc
sbb
push
xchg
jae
dec
sbb
mov
add
sahf
retf
adc
inc
add
push
and
push
and
or
pop
test
shl
inc
(bad)
mov
inc
cmp
cmp
add
test
mov
pushf
sbb
in
add
sub
jae
sub
and
call
jns
and
push
add
sbb
push
dec
and
push
mov
rol
aas
and
adc
ins
test
add
sti
sub
loopne
not
ret
push
les
push
mov
loope
and
pop
or
cdq
push
popf
jp
push
popf
add
inc
dec
add
and
pop
push
es
rcl
push
push
push
push
repnz
push
mov
dec
jmp
shr
jns
sti
add
sub
das
mov
inc
or
adc
add
inc
in
or
sti
or
and
leave
cmp
sbb
xor
jo
add
add
popa
mov
in
sahf
pop
adc
das
jg
rcr
dec
shl
sbb
ins
mov
add
cmp
out
xor
jecxz
mov
repz
push
stc
add
sbb
stos
sub
lods
sar
cmps
cmp
mov
repnz
and
cmp
mov
and
xor
dec
test
xchg
inc
adc
shl
push
sbb
push
and
dec
pop
sub
and
je
push
xchg
jbe
pop
and
ss
cwde
lods
daa
pop
cwde
adc
adc
out
nop
xchg
sbb
sahf
or
outs
dec
outs
add
daa
dec
js
mov
mov
push
call
inc
adc
jmp
mov
or
rol
iret
dec
in
mov
adc
xchg
in
add
stos
sub
xchg
push
pop
or
repz
xor
push
or
inc
outs
arpl
enter
sbb
or
push
add
movs
push
dec
add
sbb
cmp
adc
jns
sub
mov
or
sahf
sub
sbb
iret
adc
xchg
xchg
adc
in
mov
pop
ret
dec
push
xor
sahf
repz
pop
add
push
popa
add
and
sub
push
jno
mov
repz
adc
or
jno
rcl
add
sar
push
cmps
test
push
cmp
and
sti
les
pop
scas
mov
adc
jns
inc
sahf
retf
push
add
pop
push
sub
pop
xchg
dec
movs
std
jno
ret
add
mov
pop
xlat
sbb
jb
or
arpl
sub
mov
push
inc
fild
(bad)
repz
into
xor
das
mov
push
pop
and
mov
mov
mov
and
ret
or
xchg
cmps
stos
add
adc
pop
pop
cmp
stc
and
nop
out
push
push
or
add
sub
das
sahf
adc
add
jns
xor
pop
or
add
xor
pushf
sub
(bad)
push
add
mov
mov
push
push
dec
add
scas
xor
jl
(bad)
in
dec
pop
jnp
xor
test
icebp
repnz
sbb
stos
cmp
dec
rol
add
mov
push
sbb
cmp
mov
add
xchg
arpl
(bad)
add
pop
imul
dec
push
inc
(bad)
data16
retf
jne
push
add
sub
ret
push
mov
in
test
xchg
or
loope
pop
push
dec
and
adc
cmp
push
ja
sbb
push
push
dec
sub
mov
aad
jo
popa
dec
and
cmp
je
push
sbb
je
cmp
test
pop
xchg
cmp
cmp
imul
repnz
add
pop
add
xlat
dec
pop
and
add
xchg
sbb
mov
sub
add
inc
popf
pop
dec
mov
iret
and
ret
pop
sub
jno
leave
or
and
daa
cmp
or
daa
adc
in
adc
push
out
sbb
inc
scas
or
pop
xor
push
and
cmps
jo
add
mov
retf
mov
rcl
(bad)
outs
sbb
scas
cmp
add
push
sbb
mov
inc
mov
mov
inc
inc
add
imul
lods
and
and
sbb
int3
mov
nop
sbb
data16
pusha
cmps
jne
dec
mov
smsw
(bad)
jmp
adc
xchg
dec
dec
push
cmp
lods
stos
and
xor
repz
or
sub
xor
add
cmp
das
xor
sub
call
mov
sahf
movs
push
test
into
adc
inc
enter
sub
imul
or
or
xchg
mov
mov
or
xchg
sub
xor
push
int3
es
call
adc
(bad)
sub
xchg
xor
jmp
and
repz
cvtpi2ps
jl
cwde
inc
dec
sahf
retf
or
(bad)
loop
nop
popa
adc
lds
mov
push
push
in
data16
add
test
xor
call
imul
xor
mov
adc
aam
push
or
movs
pop
xchg
popa
push
imul
sbb
push
in
sub
test
jmp
daa
or
and
cdq
pop
das
inc
shl
inc
adc
xchg
push
cmps
or
pop
mov
adc
jmp
add
fs
mov
add
xchg
pop
inc
mov
pop
retf
adc
inc
test
xchg
inc
or
mov
inc
imul
pop
sbb
add
rol
and
inc
pop
or
daa
mov
rol
adc
and
ret
arpl
pop
dec
xchg
call
or
dec
call
sub
xor
jns
cdq
test
sub
xor
jne
add
es
or
dec
(bad)
dec
pop
push
push
leave
rol
xchg
add
cmp
sbb
jns
adc
dec
and
ror
and
ret
adc
rcl
outs
adc
xor
jae
xor
es
sub
pushf
sahf
add
adc
sti
ror
test
push
inc
mov
je
nop
push
xchg
or
das
in
jmp
cmps
psubw
loopne
mov
adc
nop
pushf
fsubr
sub
cmp
sbb
jmp
add
cli
add
repnz
sbb
sbb
jae
xor
dec
sbb
enter
push
adc
cmps
nop
xchg
mov
jns
inc
pop
sub
dec
in
enter
inc
and
cmp
and
cmp
out
adc
dec
pop
mov
add
les
stc
mov
cli
cmp
sub
ja
or
inc
scas
sub
adc
repnz
test
dec
jb
sbb
and
mov
or
sahf
repz
sbb
iret
mov
or
or
xor
mov
cmp
les
jo
pop
add
fisubr
gs
mov
xor
(bad)
xchg
fs
inc
sar
bound
rcl
js
loopne
or
and
or
and
repz
retf
cld
es
sbb
push
mov
or
xor
push
adc
xor
pop
mov
jae
dec
push
bound
add
jbe
test
scas
pop
and
adc
out
shl
or
sbb
sbb
xor
sbb
mov
add
pop
js
enter
push
cmp
push
in
push
dec
push
bound
ret
push
outs
les
and
mov
repnz
pop
sbb
(bad)
loope
add
mov
inc
mov
sub
mov
or
adc
(bad)
xchg
pusha
add
daa
adc
xchg
ins
cmps
xchg
adc
or
mov
jb
and
or
cdq
push
jns
aam
mov
mov
fs
mov
and
sahf
pop
aas
mov
or
mov
add
and
jmp
cmp
sub
pop
or
push
mov
or
sub
xor
iret
pusha
or
sbb
adc
push
mov
enter
adc
enter
outs
pop
cmps
test
or
sbb
lods
sub
scas
jno
add
or
(bad)
aad
mov
and
or
int
add
cmp
xor
sub
and
or
cmp
adc
addr16
xor
imul
adc
mov
lods
pop
sub
or
pop
rol
xlat
and
and
jae
sub
add
add
sbb
mov
push
and
xchg
add
test
loope
mov
fwait
enter
pop
adc
mov
int
imul
jle
inc
in
fstp
xchg
dec
mov
repz
pop
push
shl
dec
or
adc
pop
nop
sahf
fs
sub
jns
sbb
lods
inc
inc
ret
mov
das
xchg
movs
adc
cs
inc
sub
leave
pop
jno
(bad)
aas
push
ror
sbb
daa
mov
rol
xor
imul
shl
daa
inc
adc
xchg
gs
in
or
push
or
cmp
in
push
retf
and
adc
adc
push
adc
add
cmp
jmp
loop
inc
mov
push
dec
or
adc
or
test
cmp
sbb
push
sbb
int3
cli
loopne
cmc
lods
push
loopne
stos
add
and
cmp
push
xchg
sub
iret
enter
stos
pop
add
adc
cmp
inc
push
out
ror
lods
add
or
push
leave
adc
and
sub
add
pop
push
adc
push
push
repz
hlt
ds
push
sahf
push
adc
sub
imul
or
dec
arpl
xchg
repnz
pop
(bad)
dec
sbb
les
ret
xor
test
add
enter
xor
fist
sbb
(bad)
out
bswap
and
or
(bad)
add
xchg
retf
jl
xor
inc
cmps
mov
daa
pop
mov
out
or
cmp
and
arpl
sub
cmps
or
inc
xor
lahf
ret
add
out
sbb
pop
add
pop
mov
cmp
in
fmul
adc
inc
dec
pop
xchg
test
jns
inc
dec
dec
add
push
adc
in
pop
imul
and
dec
add
push
shr
cmp
mov
dec
jne
pop
xor
push
adc
rcr
add
jb
pushf
push
push
add
and
das
or
jns
and
xor
sahf
imul
das
sbb
and
pusha
scas
arpl
add
push
sub
jmp
dec
arpl
cmp
movs
mov
inc
arpl
iret
jae
test
xor
or
inc
mov
inc
or
adc
xor
test
adc
cmp
pop
popa
sbb
ja
xlat
xor
or
pop
push
dec
stos
out
push
or
mov
pusha
cmp
pop
xchg
cmp
ss
inc
inc
sub
push
and
jnp
inc
sahf
das
dec
mov
adc
loop
es
sbb
or
add
push
add
add
add
push
or
mov
push
add
and
xchg
pop
out
or
(bad)
dec
pop
mov
lds
xor
dec
sbb
in
nop
int3
sub
(bad)
out
jns
xchg
fiadd
push
nop
inc
sahf
or
dec
dec
push
sbb
aad
bound
nop
mov
add
iret
add
adc
xchg
(bad)
adc
movs
and
and
or
dec
loop
push
inc
add
add
cs
xlat
or
cwde
retf
int
or
ficom
mov
mov
cmp
adc
cmp
sub
add
adc
outs
mov
push
pop
adc
push
mov
and
or
push
pop
cmp
xchg
or
xchg
cdq
pop
or
jno
cmps
lods
or
movs
add
and
jo
push
and
add
jne
in
add
cmp
xor
adc
repz
jb
adc
and
mov
mov
outs
xor
jns
or
xchg
pop
ror
and
test
movs
push
mov
fadd
dec
add
adc
loope
mov
xchg
out
call
test
adc
inc
xor
add
cmp
cmc
push
push
inc
add
(bad)
xchg
and
call
movs
add
jecxz
add
and
gs
adc
add
xor
mov
sbb
or
cwde
(bad)
or
push
sub
sbb
mov
dec
and
fwait
dec
in
movs
imul
test
jmp
add
fs
out
lods
push
or
adc
dec
sbb
add
mov
in
xor
lds
nop
add
adc
push
pop
mov
mov
cmp
jl
ficom
rcl
mov
dec
and
sbb
pop
push
and
out
cmp
jns
sub
loop
xchg
xchg
xchg
xchg
pop
adc
push
and
cmp
inc
pop
adc
je
mov
pop
retf
iret
mov
sub
daa
test
sbb
aad
push
stos
sub
(bad)
jge
popa
or
sbb
pop
adc
and
push
repnz
ret
cmp
inc
jge
or
scas
pop
push
sbb
adc
movs
pop
cmp
cmp
ret
sub
leave
and
sub
inc
arpl
push
xchg
movs
dec
cmc
cmp
sub
or
xchg
jno
add
add
sub
push
ja
out
sahf
dec
push
das
or
add
stos
repz
imul
inc
dec
xor
sub
jae
dec
adc
cmp
xchg
push
dec
enter
dec
leave
xor
sub
outs
adc
add
mov
shl
sbb
add
dec
lahf
cmp
in
push
push
add
xchg
enter
adc
mov
jno
out
sub
jg
cmp
dec
pop
fidiv
and
adc
dec
movs
mov
pop
and
in
jo
inc
sbb
imul
mov
add
cmovns
inc
or
(bad)
push
xchg
add
(bad)
sbb
mov
dec
sahf
retf
fs
or
les
push
outs
and
push
leave
cs
data16
push
imul
and
or
lahf
dec
test
scas
sub
sbb
or
add
adc
push
adc
inc
jns
sbb
test
add
cmp
sub
inc
add
test
pop
shl
mov
sbb
push
adc
movs
pusha
mov
dec
repz
push
aaa
adc
aam
sub
adc
sub
sbb
mov
or
mov
push
cmp
push
pop
nop
xchg
out
ins
(bad)
daa
je
sbb
cs
inc
push
and
push
std
retf
add
sahf
out
cmp
adc
fldenv
mov
outs
ss
ja
xchg
push
adc
lea
js
xor
fisttp
lods
adc
ins
loope
dec
dec
add
dec
add
(bad)
mov
jo
xor
ret
(bad)
or
and
clc
scas
or
adc
xchg
jecxz
push
or
add
xchg
and
test
sbb
leave
daa
mov
sub
cmps
leave
aam
dec
push
adc
add
popa
or
sahf
adc
cmps
dec
add
dec
add
sbb
jnp
arpl
or
int
sbb
cdq
jae
test
or
fwait
iret
repz
pop
jb
cmp
and
add
add
repnz
xchg
adc
xchg
gs
pop
cmp
add
add
push
mov
dec
and
or
ins
or
lahf
pop
and
or
or
js
pop
xor
add
or
sbb
inc
and
dec
mov
adc
inc
push
or
dec
or
cmp
xchg
sbb
ins
cmp
popa
test
imul
adc
push
pushf
outs
sub
adc
and
dec
xchg
adc
sbb
xor
add
pop
pop
shl
adc
mov
fcom
popf
shl
cmp
mov
xchg
cmp
push
int3
cmp
or
dec
repz
rol
ja
mov
sbb
mov
adc
repnz
add
sbb
cmp
movs
cmp
test
bound
dec
pop
repz
mov
pop
push
ss
retf
add
ret
fisubr
outs
shr
dec
out
push
xchg
stos
test
stc
rol
inc
dec
cwde
mov
rcr
inc
sub
or
pop
jb
ja
dec
or
daa
iret
add
sub
or
add
lsl
les
pop
fdivr
icebp
out
les
call
add
test
push
sbb
adc
out
es
bound
nop
out
es
sbb
mov
fld
mov
mov
pop
xor
or
mov
pop
xor
ins
sbb
int
test
push
in
cdq
cdq
(bad)
adc
in
or
out
ds
fnsave
push
and
add
adc
sub
mov
pushf
sbb
or
mov
add
pop
inc
in
push
dec
add
pop
stos
(bad)
jl
mov
arpl
adc
push
add
push
inc
aam
imul
jge
cmp
es
retf
shl
add
(bad)
and
fdivr
add
dec
and
movs
add
push
sbb
test
jbe
enter
sbb
or
das
dec
enter
push
mov
mov
test
add
aaa
xor
leave
sbb
les
fwait
loope
sbb
sbb
mov
es
xor
xor
loope
dec
movs
jb
daa
cmp
mov
add
adc
leave
push
jns
adc
sbb
adc
rcl
repz
sahf
out
and
adc
daa
jecxz
or
leave
add
pop
and
push
and
jb
xor
fiadd
adc
pop
sbb
dec
dec
sahf
adc
jmp
imul
les
jmp
adc
adc
inc
sbb
xchg
fsub
inc
cmp
xor
cs
sbb
leave
push
jns
and
sbb
adc
cmp
add
mov
dec
enter
inc
jnp
and
inc
dec
push
and
test
es
add
cmp
dec
imul
add
xor
sbb
inc
sub
jo
les
sbb
pop
or
sub
jmp
inc
mov
or
push
loopne
sbb
out
jg
adc
mov
push
pop
pop
mov
add
xor
or
std
jns
mov
iret
sub
imul
sbb
sub
int
mov
fstp
movs
mov
mov
mov
cmp
dec
pop
dec
addr16
dec
lds
push
add
sub
popa
sbb
ret
dec
lahf
mov
push
push
pop
movs
add
jmp
and
inc
sbb
(bad)
paddusb
inc
add
sbb
ins
sahf
cld
adc
inc
adc
fld
push
adc
inc
ss
andnps
sbb
inc
or
mov
fcomp
push
dec
push
movs
ret
add
inc
adc
ins
fldcw
add
xchg
mov
enter
repz
push
xchg
out
(bad)
adc
dec
loope
dec
xor
xor
sub
test
push
mov
adc
ins
inc
sahf
outs
or
pusha
add
jb
push
or
mov
aaa
mov
sub
pop
xor
push
and
cmp
and
xor
or
xchg
dec
xor
repz
adc
repnz
sbb
scas
and
jmp
dec
add
sub
sub
rdmsr
mov
xchg
out
xchg
push
sbb
mov
fsubr
fwait
lods
dec
sahf
cmps
add
xor
dec
inc
ins
jae
add
push
dec
imul
adc
aam
or
pop
add
das
pop
xor
mov
mov
cmp
add
push
push
push
test
es
sbb
enter
jnp
js
sbb
inc
or
adc
pop
sbb
imul
push
or
(bad)
and
pop
mov
sbb
push
imul
mov
(bad)
mov
jno
xchg
and
adc
push
leave
cmps
push
or
adc
stos
test
mov
mov
repnz
sub
movs
call
push
ret
inc
mov
add
sbb
call
push
or
cmp
push
mov
jl
ror
mov
mov
and
jns
test
jo
or
sbb
nop
out
pop
nop
and
(bad)
add
xor
sbb
and
inc
div
mov
sub
cmps
push
xor
in
iret
or
lds
or
or
imul
repz
(bad)
bound
lds
adc
(bad)
arpl
push
imul
adc
and
sahf
addr16
push
sbb
imul
dec
popa
mov
inc
push
add
jns
add
inc
scas
mov
cmp
mov
adc
sahf
repz
call
in
pop
sbb
add
shl
sets
push
jge
adc
aam
sub
push
xchg
add
cmps
scas
pop
xchg
cmp
and
push
pop
or
or
and
inc
push
add
mov
retf
jb
rol
sbb
adc
pop
inc
sub
xor
mov
fbstp
push
cs
(bad)
pop
and
in
ins
add
adc
mov
jns
add
mov
retf
xor
arpl
sub
nop
mov
int3
daa
and
pop
push
jmp
or
xchg
test
mov
adc
enter
or
adc
jns
push
jno
adc
xor
and
cmp
ss
stos
xor
mov
(bad)
jl
scas
push
adc
mov
add
mov
gs
ror
mov
stc
test
fsubr
es
or
call
or
lock
pop
push
stc
int3
sbb
or
lea
(bad)
sti
push
mov
stos
add
(bad)
or
push
es
jbe
and
inc
mov
push
jnp
cmps
pop
ret
pusha
add
or
cmps
test
pop
sub
and
es
ins
test
rol
inc
mov
cmp
add
leave
and
iret
and
pop
xchg
stos
leave
add
inc
pop
movs
std
mov
and
dec
xchg
xor
dec
jmp
cmc
inc
pop
xor
sub
jp
hlt
jg
push
mov
sbb
stos
icebp
dec
or
or
and
and
dec
push
aas
cmp
xchg
ret
push
lds
out
cdq
or
sub
nop
dec
mov
xchg
cmp
pop
dec
movs
mov
bound
sub
or
push
adc
jno
sbb
fst
ret
and
push
pop
rol
sub
mov
cs
(bad)
xchg
imul
adc
rol
and
pop
dec
or
adc
stc
dec
mov
dec
cdq
cmp
pop
sbb
scas
inc
adc
add
les
imul
mov
jbe
or
dec
sahf
out
push
push
xchg
add
jns
nop
cmp
xchg
xor
add
mov
adc
repz
dec
push
pop
add
test
pop
inc
push
or
fld
fst
mov
shl
adc
arpl
lods
or
and
dec
retf
xor
dec
repz
int3
adc
int
or
aam
jp
add
daa
iret
repz
and
sub
test
(bad)
int
jo
in
adc
lock
add
jno
in
xor
pop
push
sbb
scas
rcr
lds
bound
loope
sbb
movs
inc
or
or
addr16
cmp
pusha
inc
sahf
out
or
and
mov
shr
es
call
add
push
popf
popa
sahf
repz
daa
sub
lods
popa
loop
inc
lahf
push
add
cmp
fisttp
push
aaa
inc
test
sbb
dec
je
add
je
cmp
mov
sub
cmp
inc
sub
and
and
ret
inc
icebp
sahf
stos
movs
add
push
jns
add
es
sbb
and
jecxz
xor
int
cwde
sbb
(bad)
leave
repz
inc
sbb
jecxz
add
push
cmp
lods
sub
or
repz
or
xor
pop
inc
or
push
jo
add
mov
push
xchg
gs
movs
push
imul
imul
pop
outs
pop
cs
bound
imul
enter
mov
cmps
imul
mov
cmp
sbb
sbb
push
shl
mov
inc
aad
ret
dec
push
shl
or
iret
or
bound
sbb
dec
lods
dec
aaa
rol
adc
sbb
mov
inc
aam
sub
iret
dec
add
xor
inc
inc
inc
and
and
retf
iret
xor
movs
aaa
cmps
pop
adc
and
int
repnz
xor
inc
xchg
test
or
arpl
push
sahf
out
push
mov
push
adc
or
inc
das
add
lods
test
fdivr
das
and
xor
or
mov
sub
adc
pop
fadd
xor
test
test
test
xor
pop
sbb
sbb
push
mov
add
fwait
and
push
retf
or
dec
ins
xchg
jo
inc
adc
dec
lds
or
inc
adc
or
les
sbb
add
mov
sahf
addr16
mov
sbb
cmp
or
adc
shr
fstp
adc
jae
repz
mov
dec
dec
enter
repnz
cmps
mov
inc
imul
ret
sbb
scas
pop
or
add
mov
jae
and
xor
pop
test
inc
shr
sbb
xchg
shr
and
xor
fldenv
in
jge
add
in
movs
mov
ror
jns
addr16
and
dec
rol
or
in
adc
mov
daa
dec
leave
in
sahf
cdq
loope
and
and
cmps
mov
out
rdmsr
rcr
xchg
mov
jo
adc
pop
sub
cmp
or
sbb
xor
or
pop
sbb
cmp
add
repz
adc
xchg
and
adc
add
or
pushf
retf
adc
rol
sub
fwait
or
loopne
cmp
dec
sub
shl
iret
mov
ret
inc
sbb
push
dec
jne
std
pop
test
add
fsubr
in
push
push
push
add
pop
mov
das
fxch
pop
pop
fwait
rcl
pop
test
pop
jge
pandn
push
and
fld
stos
sub
test
add
pop
je
adc
adc
retf
and
loopne
icebp
sub
jns
dec
jle
or
pushf
adc
cmp
adc
xor
lods
adc
cmp
xchg
push
adc
add
and
and
cmp
cmp
pop
or
and
sbb
in
and
scas
xchg
push
pop
mov
push
repnz
push
add
sub
pushf
jbe
loop
sub
sub
or
and
test
cmp
rol
xor
fwait
and
or
pop
jb
mov
dec
xchg
cmp
daa
daa
push
sbb
add
pop
jecxz
xchg
cwde
jg
xor
dec
sub
dec
push
sbb
daa
dec
sahf
cmps
xor
or
mov
add
dec
inc
push
push
xor
iret
sbb
in
adc
inc
mov
sahf
retf
pop
adc
xor
sahf
out
push
adc
stos
and
inc
dec
sub
pusha
add
sbb
test
xor
cmp
or
or
xor
popf
xor
xchg
dec
xor
xor
ins
pusha
loop
sbb
call
xchg
inc
and
movs
or
mov
xchg
dec
jae
sbb
cmp
adc
and
mov
sbb
xchg
jns
daa
int3
cmps
dec
or
sbb
pop
dec
sbb
mov
push
enter
add
aaa
cmp
and
sub
mov
xchg
les
push
imul
(bad)
jge
xor
sbb
retf
movs
adc
add
or
test
les
jle
icebp
xor
(bad)
test
cmp
add
jns
daa
sub
repnz
aad
or
and
mov
lods
dec
pop
dec
adc
lods
jne
push
adc
test
or
adc
invd
bound
(bad)
dec
cmp
inc
(bad)
movs
pop
lds
pop
ret
ret
add
cdq
or
push
mov
retf
jae
out
adc
aad
xor
xchg
jne
sub
sbb
add
sub
or
xor
sbb
out
dec
sub
sbb
mov
pop
rol
cmp
rol
add
cmp
repz
shufps
in
data16
inc
push
push
adc
test
(bad)
mov
in
adc
add
dec
fmul
pop
adc
or
add
inc
iret
xor
inc
add
add
cmp
es
out
out
or
sub
sbb
repnz
cmp
xor
add
pop
adc
popa
mov
and
out
lods
sub
add
sub
mov
fnsave
inc
add
push
test
xchg
mov
popa
push
enter
aaa
sbb
or
cmp
add
inc
xor
or
cmp
mov
mov
xchg
outs
inc
mov
add
mov
pop
mov
outs
out
sub
add
mov
ins
dec
mov
dec
cmp
inc
jp
adc
jmp
cmp
ror
pop
add
retf
dec
leave
jae
inc
nop
inc
sub
push
inc
dec
or
repz
xor
inc
or
(bad)
mov
push
cmp
in
jl
push
jns
ss
aas
dec
push
push
cdq
nop
out
sub
add
sbb
add
sbb
imul
cmp
repz
add
pop
leave
enter
pusha
rcr
test
adc
mov
sbb
aaa
psubusb
adc
(bad)
pusha
pushf
add
into
sbb
sub
xor
push
dec
call
fwait
dec
or
int
jecxz
or
push
push
mov
test
adc
out
cmp
iret
push
ret
or
iret
mov
or
or
mov
xchg
jno
iret
repz
push
or
daa
cmps
std
pop
xor
cmps
xor
inc
or
and
dec
in
inc
or
sub
sbb
mov
sahf
out
add
test
add
mov
or
mov
ror
jns
out
adc
add
and
sar
xor
adc
push
pop
pop
imul
push
xor
sbb
movs
(bad)
mov
xor
inc
pop
or
outs
add
dec
dec
adc
xor
push
dec
adc
sbb
dec
icebp
jp
add
sahf
cmp
add
adc
jl
xor
sub
sbb
and
repz
cmp
cwde
and
xor
aaa
mov
sub
mov
adc
jo
push
xor
adc
and
sti
and
popa
sti
sbb
inc
push
and
inc
cmp
dec
pop
iret
pop
leave
repz
adc
inc
rol
enter
dec
enter
xor
jo
cdq
inc
or
dec
stc
and
xcrypt-cfb
and
jl
les
sbb
push
sbb
sub
leave
repz
adc
scas
xor
jne
js
push
add
rol
ror
adc
xchg
inc
jg
xor
push
inc
inc
pusha
inc
test
push
xchg
fmul
add
dec
sub
sub
mov
inc
push
sub
sbb
loop
and
push
or
jns
(bad)
fnsave
pop
xchg
push
loop
xor
pop
enter
or
rcl
popa
imul
movs
xchg
and
dec
sub
adc
add
xor
out
sahf
cdq
movs
add
sbb
test
mov
push
repnz
xor
adc
sub
and
sahf
sbb
lods
pop
push
es
xor
adc
add
fld
test
mov
cmp
nop
sub
repnz
jo
xchg
jge
loope
in
add
and
adc
sbb
pushf
or
sub
push
int3
adc
and
xor
shl
xchg
or
pop
or
sub
daa
add
test
movs
imul
cdq
pop
sub
or
add
dec
movs
imul
inc
pop
cmp
ror
push
add
push
push
xchg
test
rcl
or
pop
mov
jmp
push
jmp
mov
or
jno
push
xlat
and
test
mov
js
adc
adc
cmp
dec
outs
xor
adc
popa
loope
leave
and
mov
jmp
sub
xor
jmp
repz
mov
and
adc
repnz
sbb
fisubr
dec
imul
or
daa
sbb
adc
or
mov
mov
xchg
jno
mov
add
test
test
add
dec
push
xor
outs
or
add
mov
adc
es
push
push
movs
inc
popf
and
jecxz
mov
mov
sub
or
or
xchg
and
or
in
gs
xchg
cmp
cmp
ret
cmp
rcl
sub
fsub
push
adc
or
push
arpl
jae
cmp
add
xchg
pushf
mov
int
stos
adc
dec
jo
push
ret
cld
test
push
xor
out
sbb
ins
test
xor
dec
sahf
or
mov
jmp
bound
mov
dec
std
sbb
cmp
jae
ret
arpl
es
sbb
push
imul
es
mov
test
cmp
dec
pop
push
aas
sbb
dec
enter
dec
ret
pop
sti
add
push
add
mov
add
(bad)
repz
out
or
pop
dec
inc
add
sbb
or
xor
jo
enter
add
test
push
in
sahf
retf
jl
xor
xor
gs
pop
movs
leave
rol
call
sbb
std
repnz
xchg
mov
jmp
inc
or
mul
bound
ja
mov
cmp
rol
push
xchg
imul
xchg
mov
aaa
fs
sar
loope
mov
cmps
pusha
fsub
cmp
cmps
xor
iret
jns
sbb
aad
add
cmp
jns
mov
cmp
dec
add
into
sbb
lock
repnz
or
add
repnz
cmp
test
push
nop
sbb
inc
add
xor
repz
add
or
mov
in
jns
mov
adc
leave
stos
sbb
cdq
sbb
or
and
retf
ja
in
retf
pop
and
push
mov
mov
jns
pop
gs
sbb
push
nop
out
sbb
sub
bound
xchg
aaa
add
je
ret
(bad)
mov
jl
or
scas
push
jo
add
jae
enter
outs
adc
mov
sbb
imul
adc
or
sub
pop
and
mov
shl
xlat
mov
lds
push
and
sub
push
mov
scas
add
and
mov
cmp
jnp
mov
mov
add
ret
out
or
or
mov
inc
rcr
xor
dec
adc
xcrypt-ecb
cmps
or
push
repnz
push
or
(bad)
push
sbb
adc
dec
movs
adc
movs
mov
out
popa
movs
sbb
es
test
jl
cmps
xchg
inc
lahf
cmp
add
xlat
jns
rcl
and
jecxz
in
inc
rol
jecxz
or
rol
adc
adc
jns
ja
sbb
adc
xchg
adc
mov
stc
daa
pusha
test
iret
dec
xchg
push
sub
daa
dec
in
repz
or
add
test
or
cmp
icebp
cmps
in
sahf
add
sub
in
xchg
pop
inc
bound
and
ret
xchg
movs
shl
xor
aaa
test
sbb
push
mov
loop
cmovb
push
adc
push
push
inc
inc
jge
adc
cmp
ret
sahf
adc
xchg
retf
leave
repz
or
cmp
dec
and
and
(bad)
push
and
mov
(bad)
enter
add
xchg
out
push
pop
xor
or
sbb
repnz
inc
mov
pop
inc
test
adc
imul
aaa
pop
aas
jbe
or
es
nop
adc
xchg
adc
mov
loopne
cmp
mov
add
out
and
adc
ins
sbb
loop
inc
shr
rol
mov
sahf
movs
or
or
es
inc
xor
out
add
sub
and
iret
mov
push
(bad)
mov
mov
fwait
adc
ror
jmp
ds
pop
dec
lock
or
addr16
out
add
inc
lea
mov
push
dec
add
and
push
add
sahf
repz
sub
imul
push
and
sbb
imul
sahf
out
add
or
cmovb
dec
loopne
and
push
add
sub
mov
adc
add
mov
je
mov
iret
push
cmp
ss
and
lea
test
or
mov
jmp
inc
movs
adc
dec
sub
adc
and
daa
popa
shr
and
shr
out
iret
and
ss
or
pop
adc
add
pop
das
inc
sahf
out
in
and
mov
jns
adc
sub
cmp
adc
sbb
sub
movs
inc
test
xchg
test
rdpmc
jo
daa
cs
icebp
add
or
pop
dec
and
mov
bound
and
mov
and
or
mov
ret
sbb
push
add
test
push
or
or
xor
cmp
xor
or
and
mov
jne
sbb
sbb
add
add
iret
add
xor
xchg
jmp
sub
and
mov
sbb
jecxz
(bad)
pushf
cmp
xor
add
jns
repnz
inc
mov
stos
jne
sbb
or
xchg
and
or
add
arpl
cmp
xor
and
add
inc
popa
jmp
jns
sub
sub
adc
pop
loope
in
popf
sub
dec
les
pusha
inc
repnz
rcl
(bad)
sub
cmps
mov
test
inc
ins
sub
sahf
sbb
add
xor
movs
mov
adc
fmul
pop
pop
dec
or
mov
and
mov
cwde
cwde
sub
pop
shl
xor
adc
in
pusha
sub
ror
jno
jae
out
rol
xor
sub
xchg
inc
dec
cmp
adc
or
pop
push
cmc
or
jns
and
push
lahf
movs
out
add
dec
jmp
arpl
xor
shl
repz
push
nop
fnstcw
dec
push
adc
scas
or
mov
dec
and
adc
push
add
and
repnz
adc
and
add
dec
push
inc
push
adc
mov
lock
lods
call
xor
frstor
unpcklps
addr16
rcl
aad
add
push
lds
cmps
push
mov
add
add
iret
and
and
add
jno
in
add
ret
shl
cmp
inc
sbb
arpl
push
xor
sub
pop
pop
xor
in
add
rcl
sbb
scas
or
popf
xchg
fisttp
dec
pop
or
add
movs
sar
sbb
inc
adc
mov
mov
push
popf
sbb
and
add
jns
jae
test
jp
sub
add
xor
inc
dec
inc
jge
fwait
mov
out
cli
push
stos
sbb
push
adc
and
test
scas
add
jns
mov
(bad)
aad
push
lods
fld
call
or
dec
add
or
sbb
push
cmp
sub
mov
or
adc
ins
retf
adc
sub
sub
rcr
mov
rcl
dec
repz
sbb
dec
or
add
sbb
and
jb
and
daa
adc
or
inc
stc
sbb
or
or
nop
imul
or
and
adc
sbb
fisttp
or
inc
or
(bad)
shl
mov
test
adc
ror
shr
test
dec
or
or
test
popf
adc
out
shl
in
push
sbb
add
iret
add
rol
cmp
jae
jne
cwde
dec
sub
movs
sti
or
test
leave
aas
mov
sahf
and
xchg
dec
and
sbb
cmps
xchg
mov
pop
mov
xor
(bad)
loop
ret
sahf
out
dec
cdq
and
sub
jns
mov
inc
add
cs
adc
and
push
cmp
add
add
xor
das
inc
je
xchg
push
sub
push
jge
push
pushf
push
inc
lea
les
test
add
enter
(bad)
aad
(bad)
or
repnz
sbb
sti
xor
adc
pop
jne
sahf
out
in
xor
add
fcom
loope
or
adc
and
push
xor
je
mov
adc
nop
or
rol
das
adc
jns
jmp
pop
adc
add
dec
dec
xchg
cmp
adc
and
pop
xchg
inc
ja
pop
or
mov
push
dec
xchg
dec
push
push
mov
pop
or
pop
movs
and
push
ret
test
inc
sar
out
sahf
xor
push
jp
xchg
sub
sub
pop
adc
icebp
xchg
stos
add
sub
dec
ret
inc
inc
adc
lea
aas
push
mov
and
mov
das
mov
or
push
leave
xor
movaps
xchg
pop
xchg
push
outs
out
dec
inc
dec
xchg
push
arpl
test
mov
adc
mov
or
mov
test
adc
cs
sahf
retf
adc
dec
and
lds
and
test
bound
sbb
mov
ins
xor
jb
pop
sub
enter
(bad)
(bad)
and
mov
les
inc
push
js
mov
dec
push
mov
inc
dec
jmp
ror
add
or
stos
mov
xchg
or
xlat
fwait
fs
sub
rcr
push
dec
int3
xor
loop
sbb
mov
mov
inc
sahf
push
dec
cmp
shr
mov
push
out
inc
rcl
jae
jecxz
stos
push
sub
inc
repnz
sahf
push
sub
pop
ror
imul
inc
mov
push
mov
adc
mov
inc
sub
mov
fst
push
xor
std
rol
sahf
inc
inc
xchg
jo
loop
ret
sbb
push
pop
pop
or
(bad)
call
add
ja
es
xor
cmp
sub
pop
popw
repnz
add
add
jne
data16
in
add
cmps
xor
or
or
retf
sub
call
push
pop
cmp
jg
xchg
add
jns
test
test
xor
dec
adc
test
and
jns
addr16
pop
inc
xor
adc
bound
sub
retf
xor
add
sbb
sub
arpl
or
sub
loope
dec
adc
leave
dec
in
or
sbb
ror
inc
mov
movs
les
sbb
pop
sub
pop
jnp
adc
mov
inc
icebp
mov
adc
jp
dec
cmps
push
inc
push
mov
dec
ins
mov
add
xchg
imul
sbb
add
arpl
test
imul
sbb
out
adc
int
std
inc
ret
adc
sub
js
ins
sub
(bad)
les
push
mov
add
dec
outs
or
orps
cmp
fbstp
mov
or
lods
push
jecxz
and
mov
add
pop
test
sbb
jno
mov
add
cwde
mov
cwde
icebp
es
rcr
mov
leave
add
push
dec
inc
cmps
sub
dec
add
and
and
mov
or
aaa
adc
repnz
aaa
mov
loop
push
loope
add
or
inc
(bad)
retf
xchg
test
mov
aam
xor
sbb
cmp
sbb
daa
adc
lahf
adc
mov
aam
es
and
cmp
(bad)
int
lds
or
iret
movs
jmp
dec
shr
imul
ret
sub
mov
or
and
push
inc
and
add
push
mov
or
or
push
or
or
daa
adc
lea
mov
and
out
out
pop
adc
or
loope
mov
das
int
test
and
or
imul
lea
or
pop
add
lahf
or
xchg
xchg
push
es
jns
sub
adc
in
pop
retf
aas
scas
add
mov
and
sbb
add
gs
daa
push
mov
pop
(bad)
adc
and
inc
repnz
int3
xor
add
mov
dec
jl
xor
or
in
push
xlat
pop
mov
daa
push
xchg
xor
mov
push
add
add
popf
add
les
and
xor
inc
or
inc
sub
sbb
push
sub
add
dec
pop
add
fs
sahf
and
and
mov
push
sub
mov
push
adc
aaa
xor
inc
mov
nop
out
cdq
push
mov
sub
adc
add
pop
add
ja
push
fstp
add
mov
pop
enter
and
sub
mov
pop
in
sub
dec
jb
popf
dec
test
shl
popf
lods
stos
rol
sub
and
add
mov
test
sbb
mov
or
sbb
push
sub
xchg
out
movs
xor
aas
adc
mov
sub
and
out
add
xor
repz
sbb
punpcklwd
in
adc
pop
cmp
push
push
test
inc
movs
inc
jns
je
out
add
mov
das
movs
inc
stc
shl
pop
mov
or
or
jae
loope
mov
xchg
or
mov
jo
inc
inc
xor
inc
aas
xchg
xchg
dec
ret
and
sub
jge
inc
and
mov
movs
cmp
xchg
or
imul
add
and
inc
or
mov
jge
xchg
jp
inc
jge
packsswb
fs
stos
and
sbb
nop
xor
sub
test
imul
sbb
adc
jmp
xor
push
add
leave
and
inc
cmp
xchg
dec
fs
cmp
repz
sub
pushf
ins
add
iret
sar
inc
daa
mov
add
and
mov
data16
pop
inc
inc
inc
pop
ret
push
mov
pop
sbb
and
lea
loop
cs
xchg
lea
inc
dec
or
or
aad
icebp
xor
fisttp
repz
inc
sub
ror
and
sub
or
mov
dec
out
inc
scas
in
mov
in
pushf
pop
(bad)
dec
add
jo
dec
cmp
jno
(bad)
sbb
xchg
sub
jae
inc
pop
and
cmp
xor
ret
pop
icebp
das
adc
retf
popa
inc
xchg
ror
sub
and
push
add
je
push
ret
shl
das
or
mov
sbb
je
jg
sub
xor
jg
jmp
mov
adc
sbb
xchg
and
push
fmul
mov
shl
xchg
cmp
popf
mov
adc
(bad)
or
aas
mov
popa
ins
test
aaa
pop
push
jge
es
jo
add
lods
adc
pop
mov
sub
ja
cdq
mov
xchg
xor
adc
xor
adc
or
mov
(bad)
mov
and
sti
mov
ja
or
mov
mov
jne
adc
and
and
jnp
repnz
xchg
sub
out
or
add
push
and
sub
sub
mov
test
mov
das
das
pop
add
inc
pop
jb
xchg
or
inc
js
inc
test
mov
add
or
adc
repnz
add
fbld
lea
push
outs
inc
mov
mov
and
inc
pop
sti
dec
xchg
out
sbb
and
xchg
adc
jne
pop
xchg
ds
mov
add
ds
sbb
imul
inc
or
add
sub
add
mov
arpl
push
lds
fisub
push
sbb
lea
push
mul
into
pop
test
xchg
and
and
push
test
adc
les
imul
xlat
cmp
sbb
repnz
push
inc
cmp
inc
and
jns
xor
or
add
repz
sbb
ss
add
cmps
cs
or
(bad)
inc
mov
rol
enter
or
or
pop
push
sbb
or
mov
push
mov
add
mov
int
push
enter
xor
into
push
or
xor
movs
mov
sub
adc
add
cmp
or
or
sbb
fwait
or
dec
dec
mov
add
or
out
pop
pop
inc
adc
cmps
mov
popa
sbb
dec
jge
lahf
jecxz
xchg
lahf
and
sub
inc
neg
xchg
mov
outs
aaa
xor
sbb
sbb
sbb
xor
ins
jmp
cmp
pop
sbb
cmp
jb
popf
out
adc
ja
sbb
and
sub
out
mov
cs
popa
call
repnz
dec
sahf
and
add
in
sahf
push
or
adc
push
lods
mov
sbb
xchg
xor
and
ss
push
int
push
jns
cmps
mov
cmp
push
in
enter
cmp
jo
scas
dec
mov
test
mov
mov
sub
sbb
inc
int3
cs
xchg
jno
inc
pop
adc
dec
inc
adc
dec
pop
sbb
mov
mov
xor
lock
or
fucompp
xor
fcmovb
jo
jmp
outs
or
mov
push
adc
sub
imul
push
cmp
push
cmp
repnz
or
inc
and
xor
(bad)
cmp
mov
and
iret
repz
push
(bad)
enter
(bad)
or
mov
push
and
test
push
aas
pop
jns
inc
dec
pop
mov
jns
xor
sbb
lock
cmp
pop
or
pusha
inc
xor
xchg
sbb
movs
sar
daa
mov
in
adc
adc
jns
adc
mov
sbb
push
inc
sahf
out
adc
xchg
inc
sub
xchg
push
leave
ror
adc
adc
jno
pop
mov
je
sbb
imul
xor
lds
es
das
or
add
add
jo
arpl
gs
sar
mov
add
xchg
leave
fcomp
test
imul
imul
pop
push
enter
sbb
mov
adc
xor
and
aam
and
ror
sbb
pop
push
pusha
imul
dec
or
adc
sub
inc
xchg
adc
and
mov
xchg
adc
(bad)
xor
xchg
sbb
and
inc
pusha
mov
xor
cdq
adc
lods
js
dec
push
adc
fistp
mov
sahf
repz
popa
movs
xchg
or
pop
pop
or
je
push
iret
or
and
(bad)
loopne
lods
sbb
repnz
sbb
xor
inc
adc
mov
and
cmp
push
sbb
adc
test
xchg
cmp
or
mov
std
adc
inc
adc
pushf
cdq
xchg
sbb
add
jno
mov
stc
inc
daa
sahf
dec
cs
add
lods
int
cmp
pop
out
mov
mov
mov
mov
push
or
sbb
sub
push
sbb
sbb
push
ret
ja
hlt
or
sbb
adc
mov
push
add
xchg
rcr
cwde
lods
jae
or
add
or
or
rcr
sbb
or
pop
fisttp
push
sbb
add
push
inc
(bad)
nop
out
mov
adc
xor
cmp
sti
mov
and
ss
and
and
push
rol
je
xchg
cmp
scas
push
adc
data16
rcl
and
sbb
and
xchg
xor
inc
fld
rcr
stos
and
ret
or
sub
jp
jecxz
mov
mov
or
addr16
and
in
sahf
or
iret
cmp
loopne
push
and
(bad)
les
dec
pop
repnz
pop
cmp
add
dec
or
dec
pop
xchg
pop
clc
or
fidivr
pop
inc
adc
in
sahf
push
xchg
sbb
dec
or
or
into
adc
dec
inc
enter
or
lods
test
mov
push
or
test
push
pop
mov
test
inc
pop
arpl
cmp
dec
add
scas
daa
or
fadd
mov
rol
sub
mov
push
add
call
das
and
and
prefetchw
das
or
int3
sub
pop
or
jle
bnd
scas
pop
pop
pop
adc
lods
push
push
dec
aad
bound
jns
or
pop
sbb
in
dec
or
mov
mov
mov
mov
inc
jp
sahf
daa
or
pop
dec
sbb
sub
sbb
xchg
mov
xchg
xchg
xor
push
inc
cmps
push
movs
xchg
adc
jne
mov
xor
cmp
adc
rol
out
sahf
mov
pop
add
xor
sbb
shl
sub
sub
inc
inc
and
or
fild
push
inc
sahf
sbb
(bad)
scas
shl
mov
sar
and
rcr
mov
enter
cmp
add
and
in
das
cwde
jnp
leave
aaa
movs
fcomp
(bad)
push
jmp
add
add
ins
xchg
cmc
push
push
or
stos
dec
pop
inc
push
push
in
pop
pop
pop
xor
loopne
mov
daa
pop
adc
push
push
mov
xor
adc
and
gs
es
add
cmp
cmp
sub
std
inc
add
repz
adc
jmp
(bad)
and
or
dec
dec
pop
scas
and
(bad)
cmp
mov
int3
or
or
mov
add
sbb
ret
call
ins
pop
push
pop
push
cmp
sbb
sbb
cwde
daa
pop
and
jb
or
nop
dec
sub
sub
xor
sbb
pop
daa
rcr
and
push
sub
sbb
xchg
inc
and
cwde
sub
xor
cmp
push
movs
or
je
mov
adc
fincstp
pop
test
mov
adc
sbb
inc
inc
inc
inc
dec
adc
nop
test
jne
dec
sbb
nop
and
test
jnp
sub
stos
pop
call
jns
lods
iret
into
xchg
add
dec
push
push
leave
push
jns
das
adc
sbb
adc
les
push
movs
dec
sahf
mov
sub
push
imul
repnz
pop
inc
iret
iret
out
xor
hlt
push
adc
xor
ud2
imul
mov
pop
cwde
add
inc
xor
(bad)
call
xor
mov
xor
sahf
or
sbb
push
jo
and
cwde
retf
adc
jns
push
lods
es
scas
mov
push
bound
sbb
pop
cmp
inc
cmp
lods
retf
cmc
sub
add
push
and
and
daa
push
dec
jmp
lods
xor
xor
sti
cmovno
or
or
push
shl
and
pop
or
les
adc
iret
xor
or
and
mov
je
les
and
mov
cs
sub
or
xchg
cmp
and
add
sub
pop
enter
pop
hlt
sbb
and
or
jp
ds
adc
and
push
data16
or
ror
mov
aam
stos
fs
cmp
add
shl
and
adc
lods
dec
sahf
add
or
and
cmp
xor
dec
inc
or
xor
inc
loope
add
adc
jmp
out
jne
pop
sub
fwait
nop
out
or
repnz
add
xor
mov
movs
and
iret
mov
iret
repz
sub
retf
in
dec
or
sahf
retf
add
lods
push
and
and
ins
lods
and
lds
cmp
movs
call
mov
out
pop
push
inc
sbb
add
or
push
or
xor
sbb
mov
and
pop
mov
pop
js
stos
inc
bsf
mov
mov
add
jns
outs
dec
fiadd
and
pop
repnz
sbb
(bad)
sbb
retf
push
and
ret
bound
push
dec
add
add
lahf
lea
lahf
dec
ret
inc
mov
push
jns
lea
push
adc
or
imul
ja
xor
pop
jo
adc
ret
push
sbb
xor
xchg
sbb
xchg
push
in
lods
aaa
bound
add
mov
in
xor
jl
jge
rcl
mov
lds
xchg
aam
cmp
loope
add
int3
push
jne
loope
nop
push
pop
into
adc
add
add
push
or
mov
mov
sbb
and
xchg
pop
lds
xchg
retf
and
or
jl
push
cmps
dec
inc
inc
leave
and
add
imul
pop
cmp
aas
inc
push
stc
xchg
xor
stc
movs
add
ds
test
adc
or
lods
push
xor
pop
shl
or
mov
mov
mov
mov
or
adc
sub
stc
adc
scas
aas
pop
adc
or
leave
das
sbb
adc
adc
dec
or
pop
bswap
clc
imul
lea
and
loope
jns
or
mov
mov
sbb
xchg
pushf
pop
mov
test
rcr
pop
nop
mov
jns
and
add
mov
outs
das
pop
sbb
and
jne
pop
test
adc
push
adc
cmp
cmp
mov
and
iret
ds
push
mov
push
xchg
mov
retf
cmp
arpl
enter
mov
pop
pmulhw
fimul
jmp
inc
aas
adc
or
ins
imul
movs
aaa
or
or
outs
push
test
ret
pop
or
jns
popf
nop
fadd
pop
adc
or
jb
push
xor
dec
sbb
in
inc
sbb
add
or
inc
out
inc
rcr
add
out
push
dec
cwde
nop
push
push
jge
adc
mov
imul
mov
cmp
push
jl
ins
or
lds
and
cmc
pusha
xchg
dec
and
and
push
push
or
add
and
dec
test
sbb
test
xchg
xchg
push
cmp
pop
and
mov
xchg
and
leave
jae
or
pop
pcmpgtb
add
call
adc
inc
cmp
sbb
jb
into
repz
(bad)
pop
inc
xchg
xchg
cmps
push
adc
ret
nop
or
adc
dec
cmp
adc
inc
push
xor
mov
xlat
xor
add
push
push
enter
sbb
das
or
and
aaa
add
or
xor
rcr
in
fwait
cmp
fidivr
int
inc
adc
int3
mov
loop
jecxz
mov
jmp
adc
inc
mov
and
xchg
lock
inc
push
fadd
aad
or
inc
inc
jg
xor
cmp
sbb
popa
adc
dec
add
mov
cs
jb
and
sub
xchg
or
nop
cmp
cmps
push
push
and
adc
inc
sub
dec
adc
inc
iret
push
mov
test
dec
gs
imul
mov
and
adc
sahf
inc
bound
adc
in
adc
retf
pop
jb
clc
and
clc
and
xchg
iret
jae
jno
add
add
sahf
repz
xchg
and
or
pop
dec
add
sbb
pop
xor
inc
sbb
mov
sbb
xchg
loop
movs
in
jno
mov
(bad)
mov
or
or
mov
pop
pop
lea
or
xchg
push
xor
xor
daa
test
mov
mov
rcl
aam
ret
enter
das
jg
in
dec
imul
imul
(bad)
test
mov
je
add
dec
pop
or
mov
push
rol
xchg
and
sbb
sbb
dec
ret
xchg
jle
or
rol
adc
std
es
and
iret
sbb
or
pop
sbb
lods
add
in
dec
jecxz
sub
and
sbb
xchg
adc
call
stos
fcmovnbe
xor
add
dec
sub
add
ja
pop
test
shl
push
mov
cmp
movs
push
push
add
jno
mov
push
and
add
add
inc
push
mov
push
fs
or
cmps
cmp
loope
xchg
inc
cmp
pop
les
jmp
push
mov
cmp
movs
stos
xchg
mov
add
ja
or
cmp
and
popf
or
repz
sbb
adc
out
jl
mov
adc
test
push
adc
leave
push
add
test
jmp
cmc
cmp
and
pusha
and
ror
push
add
pushf
bound
sbb
cmp
jmp
pop
inc
cdq
cmps
mov
(bad)
sbb
fcom
and
adc
pop
sbb
mov
cmp
cmp
adc
inc
xor
sahf
dec
or
push
lea
jns
xchg
lds
jns
aaa
stos
cwde
gs
int
sahf
adc
or
and
add
jnp
and
repnz
push
push
dec
pop
push
sub
sbb
pusha
mov
ins
xchg
adc
dec
sbb
add
dec
adc
jmp
add
or
pop
cmp
xchg
sbb
retf
xor
push
xor
lahf
mov
pop
cmp
xchg
pop
dec
sbb
inc
push
repnz
add
push
jb
call
jb
call
pop
repnz
cld
inc
push
cmp
in
or
arpl
push
and
add
adc
mov
jns
xor
cmp
add
inc
push
push
add
lods
pop
sub
push
adc
es
sbb
push
jne
inc
mov
imul
lds
jmp
leave
loopne
outs
xor
mov
and
test
adc
xor
and
adc
push
bound
movs
hlt
xor
dec
sub
cmp
sbb
loop
dec
dec
push
sbb
fsubr
mov
cmps
cmps
inc
rcl
push
aam
add
rcr
adc
sbb
push
add
ins
adc
iret
adc
enter
leave
and
scas
add
adc
mov
dec
test
fistp
hlt
ds
and
sbb
xchg
movs
sub
lea
test
icebp
sub
aad
test
je
lds
ss
push
or
mov
scas
in
pop
push
jns
rcr
and
sub
sub
adc
dec
not
je
nop
out
xor
(bad)
cmp
dec
enter
pop
dec
push
or
movs
jns
mov
les
add
push
push
and
add
inc
sub
jmp
inc
scas
pop
pop
inc
leave
mov
imul
xchg
or
je
mov
mov
mov
ret
push
adc
sbb
dec
in
or
and
adc
ret
les
popf
out
sub
dec
in
push
add
add
or
mov
push
and
unpckhps
xchg
add
sbb
out
or
inc
inc
pop
test
push
movs
mov
lds
cmp
pop
rol
dec
sbb
int
sub
inc
sbb
sub
daa
or
inc
dec
push
sti
mov
jno
pop
xor
add
pop
sub
or
es
xor
xor
xchg
sbb
sahf
out
or
dec
mov
in
rol
inc
adc
lds
adc
movs
inc
lahf
xchg
or
sbb
mov
ja
loope
test
cmp
lds
loope
or
rol
in
les
ds
sbb
and
pop
push
mov
dec
xchg
cmp
xchg
(bad)
std
bound
xor
dec
mov
mov
cmps
or
mov
mov
inc
ret
or
and
pop
push
sbb
and
and
sbb
pop
sbb
scas
cmp
push
adc
adc
or
or
addr16
int3
inc
fldcw
rcr
mov
xchg
cli
adc
add
aaa
adc
push
imul
mov
sub
adc
pop
add
rcr
ss
jo
xor
stos
lds
or
jno
pop
stos
sbb
loope
nop
cdq
inc
dec
jle
pop
stc
jnp
stc
dec
mov
cmp
add
mov
adc
and
jae
cmp
sbb
add
push
xor
adc
loope
or
cmp
push
test
adc
cmps
hlt
adc
retf
jl
add
push
inc
les
test
cmps
lods
leave
and
sahf
out
ds
push
iret
inc
cmps
add
inc
sbb
or
or
push
add
mov
sbb
sbb
popa
stos
and
adc
xor
or
popf
pop
xor
inc
sub
sbb
ins
pop
or
es
inc
in
int3
sub
adc
push
sub
push
mov
sar
push
cmp
pop
inc
enter
sub
and
lea
inc
or
or
mov
out
adc
or
add
movs
adc
add
jmp
cs
sahf
aaa
or
mov
adc
inc
dec
sub
sbb
or
xchg
or
inc
push
icebp
in
sahf
sub
nop
cs
add
gs
lods
push
jb
adc
adc
jns
adc
lods
iret
cmp
sbb
push
push
and
or
inc
add
xchg
push
xor
movs
mov
adc
dec
cmp
cmp
push
and
or
add
jno
call
sub
sbb
sub
je
xchg
adc
shr
or
add
jb
push
and
or
test
cmc
adc
cmp
call
add
jb
into
pop
cmps
jno
sub
and
les
cmps
mov
jg
les
xchg
add
sub
es
js
mov
xor
add
dec
in
cmp
mov
es
cmp
and
in
jns
aaa
int3
push
sub
sbb
push
sub
and
mov
pusha
xchg
jns
inc
clc
and
sub
pop
or
retf
inc
add
pop
or
stos
arpl
mov
adc
pop
sbb
loopne
in
fs
cs
sbb
push
test
pop
add
outs
add
cdq
sub
cmp
nop
retf
addr16
cmp
add
mov
or
out
jns
cmps
and
inc
add
dec
cs
(bad)
pop
cmp
push
and
mov
push
stos
test
rol
inc
call
in
int3
adc
es
jns
add
and
xchg
pop
push
dec
(bad)
push
mov
or
es
adc
xchg
inc
inc
ins
or
jbe
add
pop
adc
imul
ds
or
cmp
sub
and
jae
xor
dec
mov
or
js
xor
test
or
cmp
shl
daa
(bad)
push
and
fwait
cmp
xor
pop
mov
leave
or
iret
test
or
sub
enter
xchg
mov
out
jmp
mov
outs
inc
dec
jne
cmp
in
add
add
dec
and
and
popa
cwde
add
add
adc
sub
or
or
ret
in
fs
out
xor
xor
jns
iret
stc
xchg
xor
pop
add
jns
push
xor
repz
call
add
jb
inc
shl
add
or
xchg
sbb
test
add
aas
fnstcw
add
repnz
mov
shl
or
add
pop
jae
mov
repz
outs
(bad)
pop
sbb
xchg
sub
mov
dec
ret
push
nop
dec
leave
add
pop
repnz
jbe
clts
jle
rcr
cmp
inc
loop
inc
sub
or
xchg
mov
and
leave
cmp
sbb
repnz
sbb
popa
cmp
jns
rol
dec
nop
stos
inc
popa
lods
adc
jno
push
sbb
push
sbb
mov
mov
add
push
pop
daa
push
pop
xor
dec
push
sbb
or
inc
inc
adc
push
mov
in
mov
pop
repz
lea
or
daa
mov
add
sahf
out
or
imul
sub
ret
test
add
pop
repnz
jl
or
push
adc
rcr
xor
adc
or
dec
sbb
cmp
mov
enter
pop
mov
sbb
xor
sub
enter
and
sub
mov
repz
push
or
adc
aaa
adc
lods
jmp
xchg
test
xor
rcr
lods
imul
dec
leave
aaa
ins
cmps
sbb
adc
dec
enter
inc
inc
inc
inc
add
add
cmps
add
sub
add
popa
xchg
inc
xor
retf
dec
xor
and
jns
add
xor
scas
pop
jb
mov
or
xor
js
mov
test
xor
das
je
inc
shl
ret
imul
repnz
push
xor
ret
repz
and
pop
es
push
sbb
add
add
adc
xor
add
and
cmp
jmp
jno
or
fisub
ret
dec
sub
sbb
jmp
in
arpl
jb
add
bound
jns
xor
xchg
movs
sahf
ja
and
push
(bad)
sub
xchg
aad
cli
add
daa
mov
mov
or
push
mov
lahf
pop
push
pop
push
or
mov
daa
push
outs
popa
(bad)
sahf
jae
pop
jns
inc
ja
dec
adc
in
or
push
push
xor
xchg
and
adc
adc
jnp
sbb
adc
adc
add
and
data16
or
push
or
(bad)
and
hlt
and
mov
pop
in
lods
sbb
leave
xor
dec
movs
rol
das
adc
sbb
cdq
nop
push
mov
add
push
mov
test
enter
iret
or
dec
bound
sbb
or
xchg
cmp
pop
add
push
sub
bound
cmp
or
pop
xor
test
sub
xchg
dec
shl
mov
and
xchg
xchg
push
les
out
add
xchg
out
nop
jl
std
push
dec
imul
imul
mov
jns
push
pop
mov
daa
aad
pop
adc
pusha
sbb
sbb
xchg
test
ret
cmp
cmp
pop
repnz
es
and
sbb
test
and
in
pop
in
jns
movs
sbb
push
in
cmp
in
nop
int3
das
or
ins
or
inc
or
and
inc
pop
push
lea
nop
pop
in
arpl
test
call
sub
push
jmp
add
mov
add
icebp
or
xor
inc
push
jo
das
loope
or
jl
inc
scas
sbb
daa
add
push
pop
adc
push
in
dec
loop
mov
cmovp
or
fwait
adc
jns
dec
fimul
ins
adc
lea
nop
(bad)
mov
les
std
repz
add
iret
outs
sub
push
jo
rol
xchg
lea
inc
sahf
inc
xchg
or
or
sub
cmps
ret
movs
stc
je
lahf
push
je
pop
and
or
pop
sbb
cmp
leave
iret
xchg
lds
cmp
sbb
pop
or
ins
push
std
pop
sub
(bad)
popa
sub
push
inc
sar
mov
sbb
sbb
push
adc
rcl
or
jmp
pop
adc
and
push
sub
repz
pop
push
cmp
add
mov
sahf
push
push
and
sbb
mov
mov
and
and
out
add
cli
mov
and
lods
xor
add
push
push
mov
fs
daa
adc
xchg
sbb
sub
retf
aaa
sub
pusha
test
and
nop
hlt
dec
ins
scas
sbb
sbb
int3
imul
and
test
xchg
xor
dec
cmp
xchg
outs
jge
(bad)
cmp
adc
enter
cmps
clc
push
sub
movs
adc
inc
and
rol
dec
pop
xor
xor
and
nop
adc
push
adc
mov
cmps
test
mov
iret
repz
adc
retf
push
or
inc
add
push
ror
add
adc
test
xchg
pop
gs
int3
and
sub
sbb
mov
jns
and
pop
aaa
or
pop
fwait
mov
inc
pop
add
es
and
push
push
inc
and
or
aam
inc
inc
add
popf
cmc
push
les
adc
or
(bad)
push
inc
mov
mov
inc
sahf
repz
or
inc
int
adc
adc
mov
dec
xchg
dec
xchg
dec
cmp
out
sbb
inc
xchg
xor
movs
jb
or
inc
pusha
test
push
cmc
push
pusha
imul
mov
or
dec
movs
dec
sbb
outs
or
push
stos
imul
xlat
jns
dec
in
scas
adc
inc
inc
retf
es
and
cwde
nop
add
and
lds
jno
sub
jmp
fst
add
mov
lods
js
inc
add
push
imul
adc
test
xchg
mov
lea
daa
fistp
shufps
cmp
neg
out
adc
xlat
or
mov
push
push
mov
cmp
adc
dec
leave
add
rcr
or
mov
add
repnz
inc
inc
call
dec
and
or
leave
out
mov
mov
nop
imul
or
push
jo
cwde
cmp
or
rdpmc
jno
xor
(bad)
mov
pop
mov
dec
or
xor
ret
je
out
imul
xor
dec
or
push
js
mov
sub
pop
pop
add
add
lods
popa
xchg
fs
cmp
cmp
data16
cmp
xchg
lahf
cmp
retf
imul
push
jmp
add
mov
or
fs
rcl
imul
int
fcom
leave
dec
push
cmps
and
sbb
sub
dec
xchg
push
xchg
leave
mov
sbb
aad
push
movs
inc
or
lea
adc
call
sub
adc
ss
adc
inc
cmp
inc
pushf
sbb
sbb
add
jo
jae
or
xor
inc
movs
and
push
xor
mov
jnp
mov
push
and
pop
adc
xchg
arpl
stos
xchg
adc
sub
jge
sub
retf
retf
daa
inc
or
pusha
jae
pop
or
mov
xor
add
fistp
xor
jmp
aad
push
add
addr16
sti
cmps
xor
cmp
pop
add
inc
test
outs
ror
int3
add
and
adc
mov
and
nop
mov
push
add
(bad)
adc
dec
cmp
mov
pop
push
cmp
cmp
add
fiadd
test
ret
popf
in
sahf
xchg
mov
dec
sahf
retf
dec
es
xchg
mov
or
or
or
iret
sar
jnp
add
loope
inc
enter
xor
or
pop
xchg
sahf
out
adc
test
jns
(bad)
loop
fadd
add
cmps
fs
push
leave
and
dec
ins
inc
mov
xchg
push
jns
push
or
(bad)
mov
add
jp
cdq
sbb
popf
outs
cmp
or
test
adc
or
add
pop
or
xor
daa
or
(bad)
and
iret
and
aad
xor
add
dec
push
add
cmps
or
mov
jae
add
xchg
push
or
jns
retf
cmp
add
sub
outs
push
fadd
and
push
sbb
jmp
pop
repnz
sahf
and
inc
cmp
je
or
inc
scas
repz
adc
sbb
pop
aas
les
shr
or
and
rcl
loopne
nop
retf
(bad)
test
inc
mov
enter
lea
pop
aaa
push
pusha
adc
jae
jb
push
and
popa
sbb
or
lea
sbb
ret
sbb
mov
push
jl
fs
inc
das
in
mov
cmp
adc
cmp
inc
jae
inc
add
push
rcr
jns
adc
jecxz
test
adc
push
adc
cmc
and
dec
xchg
daa
sub
cmps
xor
and
inc
or
mov
mov
lea
adc
add
sub
adc
test
or
push
ds
cmps
imul
add
xchg
or
inc
mov
push
retf
(bad)
dec
and
je
add
cdq
sbb
in
cmp
push
add
movs
pusha
test
int
xchg
push
or
data16
cmps
pop
sub
add
and
sahf
jbe
or
or
scas
push
xor
inc
sbb
jno
inc
shl
cmp
int3
push
add
push
xlat
pop
or
cs
adc
pop
pop
sbb
or
aad
fnsave
sbb
rcl
call
jb
pop
mov
or
aad
sti
les
add
mov
and
adc
sub
scas
adc
xchg
dec
sahf
retf
sbb
mov
pop
js
inc
inc
bound
mov
dec
xchg
dec
or
inc
and
mov
nop
xor
mov
retf
leave
repz
inc
xor
push
xchg
je
and
pop
and
cmp
adc
sub
and
repz
sbb
adc
sahf
daa
add
mov
cmps
mov
rcr
ins
dec
sbb
xchg
cwde
add
leave
adc
pop
cmps
mov
mov
add
popa
out
jo
push
pop
out
adc
adc
add
jo
cmp
or
adc
test
(bad)
and
test
es
hlt
fild
push
or
cdq
or
mov
test
xchg
push
cmc
or
or
inc
call
je
dec
cmp
pop
outs
xchg
test
inc
push
imul
jb
imul
repz
cmp
jns
xor
or
sub
pop
adc
in
daa
cld
xor
push
inc
sar
mov
in
pop
dec
repz
push
dec
inc
and
or
add
and
and
push
aas
mov
mov
pop
pop
pop
repnz
sahf
repz
push
add
ins
and
or
or
ret
xor
test
add
add
in
cmp
adc
push
or
xor
mov
aad
sbb
xor
add
xor
xor
inc
push
xor
mov
and
mov
push
adc
sub
add
das
lock
adc
inc
es
repz
aam
push
out
movs
add
and
xor
outs
and
adc
sub
sahf
mov
sbb
sbb
es
sbb
and
cdq
and
cmp
xor
sbb
jb
leave
mov
dec
cmp
add
sub
mov
stos
sub
sub
lahf
inc
sub
dec
test
cmc
popf
fst
shl
popa
cmp
sbb
xchg
bound
sbb
inc
mov
sub
lds
repz
stc
das
in
push
sub
bound
mov
inc
cmp
ins
sub
and
add
imul
loop
or
or
outs
mov
inc
sub
adc
popf
sbb
inc
dec
xchg
aaa
or
mov
or
adc
std
add
add
pop
sbb
nop
mov
adc
test
adc
cmp
out
and
and
cs
nop
dec
sahf
in
add
add
rol
mov
cs
dec
and
mov
cdq
cmp
push
cmp
xchg
out
leave
out
data16
adc
cmps
in
pushf
inc
shl
das
leave
ror
mov
inc
pushf
cmps
mov
xchg
out
ret
adc
imul
les
nop
dec
dec
daa
cmp
retf
mov
inc
movs
repz
add
and
sub
mov
cmp
and
pop
mov
xchg
ss
out
scas
ret
add
mov
add
dec
push
or
cmps
xchg
gs
inc
add
jnp
enter
adc
add
dec
push
gs
je
sub
les
or
and
out
jns
xor
stos
rol
add
pop
xchg
jno
adc
pop
inc
pop
push
push
xor
cmp
mov
cmp
fist
pusha
add
ins
sbb
adc
add
test
mov
sbb
add
dec
test
dec
xor
test
frstor
push
jecxz
imul
and
pop
jp
loope
cmp
shr
push
inc
push
cmp
mov
jmp
popf
dec
nop
addr16
imul
adc
mov
sbb
pop
jge
adc
or
push
xchg
or
xchg
sti
dec
sub
mov
pop
pop
push
or
or
imul
sti
jnp
repz
add
inc
lea
es
push
or
push
xor
or
leave
aas
xor
and
inc
jmp
add
or
mov
xor
xor
or
push
xor
mov
sahf
out
inc
adc
xchg
push
ds
inc
pop
and
loope
dec
or
retf
lods
es
or
push
xor
and
adc
or
mov
clc
sbb
sti
pop
cs
je
and
iret
cmp
mov
sub
and
pop
sub
dec
sub
add
mov
sbb
stos
inc
inc
sahf
out
push
add
and
mov
add
jns
pop
sbb
adc
mov
and
ja
loopne
adc
addr16
ror
cmp
jns
adc
sbb
gs
sub
inc
push
movs
and
leave
repz
inc
pop
movs
scas
xchg
shl
scas
pop
adc
add
imul
adc
add
mov
jno
leave
sub
jne
shl
sub
mov
sub
leave
or
test
jo
sbb
cmp
adc
or
xlat
inc
or
nop
loop
in
sub
push
adc
ins
inc
or
out
sahf
je
adc
xor
add
jns
aas
stc
jle
sub
nop
adc
and
add
mov
inc
pop
or
sub
pop
rol
push
push
xor
enter
adc
test
movs
mov
and
sub
and
pop
fwait
dec
add
or
or
clc
mov
pop
and
add
add
adc
mov
add
cmp
cmp
jns
adc
sbb
or
dec
(bad)
nop
rcl
add
out
or
xchg
cld
aam
xchg
xor
or
repnz
adc
and
sbb
dec
arpl
xchg
adc
dec
call
dec
enter
outs
nop
sbb
add
sub
jmp
inc
jmp
xchg
inc
(bad)
inc
mov
repz
sar
xor
or
cmp
pop
aad
shr
iret
and
xor
shl
add
sub
fnsave
push
rcl
popa
or
sub
ins
pusha
lds
push
outs
sub
adc
push
out
cmp
dec
and
mov
iret
xor
push
mov
rol
sbb
pop
ss
lea
inc
dec
push
test
nop
int
loop
test
inc
out
cmp
mov
xchg
mov
xchg
movs
lods
adc
and
jns
daa
pop
out
les
mov
rcl
or
push
dec
retf
push
sub
aaa
adc
enter
push
jns
leave
call
dec
or
aad
cs
dec
mov
cmp
jmp
retf
cmps
and
repnz
sahf
xor
xor
shl
or
add
nop
xchg
out
sub
pop
adc
push
sub
mov
cld
inc
mov
mov
ss
(bad)
hlt
imul
scas
push
mov
(bad)
sbb
and
adc
xchg
mov
push
cmp
repnz
aam
sbb
or
out
adc
ss
adc
and
xchg
es
inc
push
pop
fxch
popf
movs
push
adc
adc
pop
xchg
and
dec
inc
loop
pop
cmp
leave
leave
repz
or
mov
sbb
sub
inc
pop
jno
cwde
push
sub
sub
cmp
xor
mov
add
push
and
pop
mov
movs
rcl
mov
mov
clc
outs
xor
inc
xchg
jns
or
cmp
or
lea
sbb
enter
sub
jb
sbb
push
rcl
add
movs
inc
xor
pop
mov
xor
inc
fisttp
shl
xchg
add
cmps
pop
imul
dec
adc
iret
xchg
lods
adc
enter
mov
adc
or
add
aam
(bad)
xor
inc
mov
daa
xchg
add
xor
movs
push
jae
mov
ficomp
and
retf
sub
mov
rol
push
inc
loop
xor
jne
sbb
imul
je
inc
sbb
mov
or
inc
xor
sub
dec
sub
nop
cmps
and
jno
and
adc
jns
mov
adc
and
mov
or
jp
or
adc
and
xchg
mov
dec
jnp
jns
addr16
push
push
pop
push
jae
cmp
cmp
inc
jns
or
or
push
add
xchg
cmp
daa
push
sub
push
inc
cmp
jmp
out
cmps
repnz
outs
push
cmp
call
sub
sub
cmp
xchg
and
cmc
or
sbb
fs
xchg
lds
push
test
movs
pop
dec
out
pusha
lods
mov
add
jns
dec
add
add
lods
mov
dec
inc
pop
jb
mov
pop
xlat
xchg
sub
cmps
lock
add
and
jb
cmps
shr
add
aaa
dec
cmp
sbb
pop
xchg
xchg
xchg
dec
test
pusha
add
and
retw
iret
push
or
ins
pop
xor
pop
movs
xchg
cmps
xor
add
sbb
add
movs
xchg
mov
or
mov
cs
pushf
adc
inc
sub
xchg
pushf
push
pop
or
fisub
xor
cs
sbb
ret
sub
adc
call
sahf
or
sbb
sub
mov
and
pop
adc
test
mov
mov
sub
dec
(bad)
in
add
push
adc
outs
pusha
jb
and
je
push
sbb
cmp
popa
adc
adc
fst
getsec
(bad)
jmp
es
iret
or
push
(bad)
(bad)
pop
xor
sti
dec
and
mov
inc
dec
push
adc
(bad)
sbb
adc
pop
add
and
add
retf
or
add
repnz
or
jnp
mov
dec
mov
or
fs
dec
pop
push
pusha
or
test
or
lods
adc
and
add
xor
xchg
nop
sub
(bad)
retf
sbb
ins
lods
daa
fwait
sub
jno
pop
fs
mov
(bad)
leave
imul
ja
jns
add
pop
dec
cs
test
sar
inc
loope
sbb
fwait
pop
add
inc
push
push
cmpxchg
adc
movs
arpl
xor
adc
xchg
jb
add
sbb
addr16
and
movs
pop
add
jns
xor
or
jmp
je
add
and
call
adc
loope
push
push
nop
pop
and
mov
adc
stc
jnp
mov
xor
push
sbb
stc
ror
jne
sahf
out
js
add
or
cs
rol
jl
and
movs
mov
arpl
cmp
sbb
cmp
inc
mov
repnz
vorpd
pop
repz
(bad)
or
inc
xchg
xchg
sbb
dec
or
jns
push
pop
and
or
idiv
push
add
cmp
lds
in
and
add
sahf
fwait
test
fs
in
adc
dec
xchg
sbb
mov
popaw
inc
aas
adc
inc
hlt
push
mov
pop
xchg
jo
dec
sub
mov
call
inc
sbb
out
adc
cmp
jns
inc
or
xchg
out
outs
aas
pmaxsw
pop
add
movs
sahf
movs
nop
mov
or
push
mov
js
test
push
sbb
call
push
je
ja
xchg
retf
xchg
scas
jnp
adc
mov
or
dec
test
and
push
out
push
add
dec
add
pushf
adc
mov
add
dec
bound
or
out
in
sahf
arpl
sbb
inc
or
movs
sub
mov
rol
sub
mov
dec
inc
fild
shr
bound
xor
or
sub
enter
stos
cmp
test
shr
test
pop
das
inc
and
mov
sti
imul
adc
sar
dec
and
movs
xchg
cmp
adc
xor
cmp
adc
xchg
xor
rcr
lods
adc
pop
sub
pop
sbb
add
stc
es
add
jns
retf
adc
cs
pop
data16
leave
push
test
outs
clc
cmp
or
sub
sbb
btc
mov
movs
rdtsc
push
out
cmps
add
or
pop
xchg
inc
scas
mov
adc
int
aaa
ret
mov
dec
sbb
nop
out
push
js
xor
push
test
das
add
mov
add
push
xchg
push
rcr
loop
test
mov
pop
and
pusha
mov
pop
sbb
xchg
dec
sahf
or
sub
inc
bound
or
cmp
inc
sahf
out
push
push
jp
leave
dec
dec
adc
mov
shl
fwait
arpl
add
cmp
lea
ins
or
jno
in
inc
xchg
xchg
ror
adc
pop
pop
ror
imul
in
ds
or
sbb
push
scas
cdq
es
or
ds
inc
in
sahf
xchg
test
jle
adc
hlt
pop
xor
dec
mov
add
jmp
xor
cmp
add
or
inc
and
dec
leave
pop
jge
sbb
push
outs
or
pop
xchg
or
mov
inc
aam
mov
push
dec
enter
xor
push
aam
popa
out
or
cdq
fldcw
and
add
mov
sub
hlt
ds
imul
and
or
dec
or
add
pop
add
pop
add
or
jno
das
or
sahf
repz
ss
outs
test
or
adc
test
add
ret
mov
inc
pop
xor
fld
(bad)
cmp
or
out
sahf
and
in
inc
sahf
adc
scas
cmp
mov
jno
cmp
inc
push
and
scas
or
addr16
sub
push
cmp
pop
mov
jge
push
sbb
repz
xchg
arpl
sub
push
inc
pop
add
dec
xchg
mov
add
or
test
mov
in
call
dec
jns
nop
je
and
inc
mov
xchg
dec
xchg
adc
lea
leave
inc
inc
outs
or
(bad)
adc
push
sub
xlat
add
cmp
pop
lods
inc
adc
test
sub
pusha
inc
lea
adc
push
push
push
pusha
push
mov
repnz
and
adc
push
and
imul
clc
enter
(bad)
xchg
push
sahf
cs
lea
push
sub
push
jns
out
lahf
xor
adc
push
xchg
cmp
xor
pop
fwait
adc
adc
scas
sub
iret
repz
push
pop
and
inc
xor
cmps
xchg
and
cmp
inc
popa
imul
mov
cmp
mov
add
and
pop
pop
mov
xor
leave
adc
mov
pop
adc
push
sub
out
or
ret
jmp
or
add
(bad)
in
cmp
out
mov
adc
sub
cmp
cwde
aaa
xor
or
sbb
adc
dec
test
cdq
adc
adc
xor
addr16
in
cmp
push
daa
and
push
cmp
icebp
xor
mov
sub
adc
bound
push
jo
pop
imul
dec
and
sbb
inc
loope
jmp
add
mov
adc
dec
rcl
sub
data16
fst
sub
cmp
stos
push
cs
repz
movs
mov
jae
cmps
add
into
xchg
jno
rcr
cld
sub
jno
cmp
(bad)
and
mov
dec
inc
daa
sbb
add
sub
and
push
aaa
or
lods
push
adc
out
push
push
adc
iret
cmp
repnz
and
and
or
dec
shr
sub
sbb
adc
fmul
and
lods
lods
ins
pop
pop
iret
pop
in
daa
xchg
retf
repnz
inc
cdq
pop
and
pusha
leave
das
sub
arpl
shl
sub
cmp
inc
cmp
iret
mov
mov
call
xor
or
loopne
push
mov
sbb
add
jne
inc
adc
mov
xchg
shl
pop
ret
fcmovne
add
sbb
pop
adc
add
xor
inc
pop
xchg
pop
add
and
pop
push
(bad)
aad
cmc
stos
enter
cmps
xor
cmp
inc
test
repnz
sbb
or
fimul
movs
xchg
cmps
xchg
or
push
sub
add
add
push
adc
(bad)
dec
pusha
xchg
adc
jns
mov
push
je
push
sub
stc
mov
daa
(bad)
pminub
push
jl
xchg
sub
pusha
inc
test
popa
test
(bad)
add
sbb
shr
iret
or
add
sbb
test
mov
push
pop
xchg
ret
jnp
add
mov
inc
mov
or
sbb
sub
fstp
cmps
xor
sub
repnz
sbb
in
cmp
push
dec
mov
jnp
cs
(bad)
ss
js
fst
push
popa
enter
in
ret
push
add
sub
js
adc
addr16
xor
pop
cs
sbb
sbb
out
xchg
and
mov
icebp
pop
dec
xchg
push
cmp
push
sub
dec
inc
sub
mov
add
adc
sbb
add
int
mov
or
daa
push
push
fld
ret
add
loop
mov
sbb
sub
add
or
imul
dec
ret
sub
inc
pause
mov
punpcklbw
mov
icebp
jo
adc
test
add
add
sbb
push
pop
pop
xchg
retf
sbb
cmp
or
xchg
pop
imul
sub
xlat
sbb
xchg
adc
sbb
nop
test
mov
inc
xor
loope
fwait
or
and
add
mov
push
and
sbb
es
ror
pop
add
fwait
inc
stos
add
xchg
aam
aaa
sbb
pop
data16
add
pushf
int
sub
adc
add
or
and
xchg
push
aam
cmc
and
sbb
pop
test
or
fisttp
gs
sub
add
dec
jae
and
or
and
xchg
pop
retf
xchg
aaa
loop
xchg
dec
add
pop
and
aaa
adc
mov
or
push
pusha
and
and
xor
jge
dec
jb
push
jns
add
dec
mov
test
nop
out
cs
push
and
adc
sahf
push
es
push
or
les
adc
inc
xor
nop
out
add
dec
leave
dec
rol
xchg
out
and
adc
ror
sub
adc
pop
cdq
jnp
iret
mov
call
pop
out
or
push
add
test
(bad)
sbb
movs
mov
add
sahf
addr16
xor
sbb
push
push
mov
xchg
add
inc
enter
and
and
test
out
sahf
addr16
das
pop
mov
xchg
pop
xor
aaa
adc
enter
ss
jno
push
add
test
add
rcl
add
adc
aam
ret
in
xchg
(bad)
mov
or
sub
xchg
or
popa
fisttp
imul
scas
jb
cmp
push
adc
pop
jmp
pop
dec
in
and
push
add
icebp
ror
pop
add
mov
fcomi
sbb
ret
or
mov
out
or
cmps
sub
bndldx
enter
fld
or
dec
les
mov
arpl
sbb
cmp
xchg
push
or
xchg
xchg
popa
sbb
jns
inc
jo
adc
push
sub
repnz
mov
inc
and
ret
inc
cmps
adc
inc
inc
and
mov
lds
mov
iret
and
or
popa
fsubr
sbb
or
(bad)
es
mov
arpl
inc
add
push
cmp
aad
std
sbb
stos
movs
test
leave
inc
sbb
lock
in
(bad)
inc
inc
mov
lahf
push
xor
adc
add
fs
add
inc
xor
jecxz
xor
xor
adc
add
mov
add
dec
movs
sbb
push
sbb
mov
inc
mov
dec
push
pop
aam
das
(bad)
stos
push
cmp
ret
and
daa
xor
push
stos
ret
adc
out
loop
mov
jb
xor
mov
sbb
jo
dec
pop
in
push
ficomp
aaa
mov
xor
retf
sub
sub
imul
inc
add
int
mov
pusha
or
sahf
sbb
sbb
pop
sbb
cmp
in
xor
inc
jmp
retf
bound
or
push
inc
add
iret
inc
jb
pop
jns
test
jns
je
(bad)
xchg
jmp
push
leave
xchg
xor
add
test
lds
repz
jecxz
sahf
out
and
push
test
dec
aad
push
pop
xor
xor
adc
in
sbb
inc
xor
or
imul
int
jmp
xchg
jo
sub
js
dec
jmp
sub
rcr
dec
inc
sahf
out
cwde
and
sbb
mov
add
add
in
(bad)
inc
push
cmps
or
sbb
addr16
inc
adc
and
and
adc
dec
sub
jne
repnz
sub
into
mov
xor
push
jns
sbb
add
popf
adc
stos
inc
jne
xchg
sub
dec
rcl
iret
and
sub
xor
mov
mov
dec
add
jns
dec
dec
stos
fwait
sbb
movs
xor
xchg
and
dec
add
or
adc
addr16
xor
or
or
xchg
xchg
and
cmp
and
pop
sub
loop
inc
jno
imul
call
das
mov
lahf
test
stos
popa
bound
mov
inc
sysret
mov
pop
pop
aas
sub
adc
mov
mov
sub
push
push
les
stc
sub
cmp
and
pop
add
pusha
and
sub
mov
or
test
push
or
pusha
xor
pushf
out
sbb
or
and
repnz
sub
xor
sbb
fcmovnb
adc
add
jns
mov
adc
sub
and
add
and
jne
mov
add
jge
inc
and
add
test
dec
add
sbb
xor
xlat
xor
and
cs
popf
xchg
ja
cmp
mov
movs
popf
pop
js
imul
inc
out
add
mov
and
in
mov
sub
push
fistp
je
adc
loopne
sub
aaa
xor
pop
adc
push
pop
sbb
dec
pop
retf
outs
pop
add
ss
test
inc
mov
push
jbe
repnz
je
xchg
icebp
and
inc
and
mov
cmp
dec
sub
and
out
mov
pop
push
sbb
lea
and
mov
mov
cmps
xor
jl
adc
fld
cwde
inc
in
add
dec
test
xchg
adc
push
and
push
adc
adc
push
inc
test
mov
or
shr
test
or
bound
fwait
adc
retf
inc
sub
push
daa
je
dec
adc
sbb
and
xchg
ss
or
add
test
mov
add
xchg
iret
mov
popf
leave
sbb
sbb
lahf
push
test
inc
adc
sbb
pop
ret
sahf
mov
sub
inc
dec
movs
ja
stos
push
and
imul
push
add
dec
rol
push
adc
loopne
scas
xor
mov
pop
jbe
adc
mov
leave
add
retf
dec
mov
and
push
std
and
pop
xor
mov
shl
rol
dec
enter
adc
adc
mov
(bad)
fiadd
lods
xchg
dec
sub
mov
les
mov
and
push
sub
sbb
mov
push
mov
retf
adc
add
or
sub
sub
add
int3
and
push
xor
push
popf
push
test
call
pop
sub
ins
mov
outs
and
test
enter
add
mov
enter
sbb
cmp
imul
or
out
mov
xor
outs
sub
xor
and
xchg
(bad)
adc
push
dec
jne
mov
leave
inc
and
cmp
lea
or
or
jg
mov
imul
in
adc
repz
dec
inc
jg
or
pop
retf
add
push
adc
sbb
pop
stc
dec
fidivr
adc
punpckhdq
shl
sbb
add
jns
mov
and
sbb
push
xor
iret
push
stc
fst
or
add
push
ret
enter
cmps
mov
aaa
xor
je
dec
gs
add
push
sub
mov
or
mov
or
adc
outs
addr16
pop
mov
jns
and
cs
out
mov
cmp
mov
or
or
adc
or
pusha
ins
ret
adc
pushf
sbb
test
adc
sahf
and
fstp
and
xchg
retf
sbb
add
jmp
ror
or
les
ins
sbb
enter
daa
iret
imul
push
movs
inc
sbb
jns
out
add
push
loopne
or
xchg
cmp
gs
add
mov
cmc
cmp
sbb
les
call
dec
jns
or
adc
jmp
mov
iret
repz
xor
arpl
push
inc
jno
sub
cmp
sahf
out
push
sbb
or
inc
mov
inc
mov
push
push
sbb
mov
test
fadd
rcl
and
xor
mov
pop
push
xchg
test
std
jns
mov
das
sbb
push
es
push
and
inc
pop
add
jnp
cmp
sahf
unpcklps
add
es
sub
xchg
retf
add
add
mov
iret
xor
daa
inc
push
cmp
xor
dec
arpl
jne
add
movs
xor
jnp
sbb
jns
dec
jbe
mov
inc
push
test
mov
or
imul
ins
mov
mov
stos
push
adc
dec
xlat
gs
fld
or
pop
mov
add
dec
push
sbb
rcl
mov
add
mov
js
cmp
in
repnz
les
inc
dec
mov
outs
add
mov
int
clc
pop
dec
ret
imul
sbb
pop
push
cmp
mov
call
and
iret
adc
bound
add
pop
push
xchg
daa
xor
add
push
push
or
jno
mov
repnz
es
jge
xor
or
lods
es
adc
out
inc
push
and
jp
dec
sahf
pop
scas
cmp
and
add
dec
push
push
push
rol
stos
add
ret
jne
mov
pop
pop
pop
add
in
pop
mov
movs
xor
jae
xor
push
aad
xor
test
add
outs
arpl
iret
and
cmp
add
add
cmp
test
inc
in
lea
or
jp
or
adc
ins
out
enter
xor
mov
daa
nop
sbb
cmp
sub
sbb
and
ret
xchg
add
mov
xchg
sbb
xchg
je
lods
lahf
fild
mov
and
mov
sahf
or
add
pcmpgtw
imul
dec
pop
adc
iret
rcl
ss
xchg
pushf
cmp
aam
retf
daa
xor
add
sub
or
dec
adc
out
lock
push
or
(bad)
sti
es
push
sub
jp
xor
push
sub
mov
xor
repnz
sbb
mov
add
adc
sub
and
cmp
gs
sub
getsec
inc
pop
ror
xchg
mov
pop
push
push
aad
jmp
pop
cmps
mov
aam
adc
popa
sbb
xor
add
cmp
pop
ds
clc
adc
aaa
je
gs
stc
sub
ficomp
adc
xor
push
sbb
or
adc
push
jge
add
sbb
and
daa
mov
xor
sbb
loop
dec
xchg
in
es
cmp
adc
inc
stos
in
pop
sbb
adc
add
mov
adc
push
adc
or
(bad)
stos
lea
jno
sar
test
repz
or
daa
sbb
daa
cmps
bound
dec
cmp
lods
pop
dec
and
pop
shr
xchg
mov
inc
je
int
xchg
mov
dec
mov
jns
adc
add
pushw
sub
and
mov
call
cmp
je
inc
pop
mov
arpl
ret
das
das
push
leave
ret
and
and
xlat
sbb
pop
sub
cmp
add
xor
adc
test
cmp
stc
lea
ins
jl
add
in
adc
push
or
test
add
jae
mov
sub
cmp
dec
and
leave
repz
pop
pop
sahf
retf
mov
pusha
xor
add
xchg
dec
fwait
or
add
iret
xor
lods
mov
pop
adc
add
mov
sub
add
mov
sbb
add
in
fwait
adc
movaps
pop
pop
or
and
dec
xor
xor
inc
les
cmps
loopne
sbb
xor
mov
repnz
loopne
test
sub
or
cdq
repz
dec
cmps
push
xor
into
sbb
and
jnp
cmp
dec
nop
mov
jo
enter
aas
xchg
shl
inc
jmp
adc
xchg
xchg
add
mov
test
bound
jno
pop
loope
lahf
or
data16
sub
int3
add
dec
pop
ret
inc
inc
imul
cmp
mov
aaa
mov
cmp
mov
and
pop
adc
out
popf
push
ins
dec
or
or
popf
out
adc
pop
fs
arpl
adc
jae
sub
aad
sub
sub
add
movs
and
fld
scas
popf
and
pop
pop
iret
inc
add
fiadd
dec
out
push
mov
inc
mov
jns
das
push
call
and
push
or
sbb
sbb
add
sub
mov
add
mov
cmp
push
add
ret
jns
jns
dec
mov
or
lahf
lods
add
bound
test
cmp
test
xor
add
xchg
mov
dec
and
call
sub
inc
scas
or
sbb
or
xchg
je
bt
cmp
adc
(bad)
xor
adc
mov
xchg
test
mov
out
add
cmp
gs
push
sahf
retf
sub
add
inc
fstp
push
iret
add
sahf
retf
cmp
loope
push
add
mov
dec
xor
add
in
out
(bad)
adc
dec
push
push
sub
inc
repnz
out
add
adc
add
test
jno
imul
or
xor
and
adc
shl
jecxz
inc
nop
add
mov
xchg
out
sbb
push
and
and
cs
inc
loopne
rcl
dec
pop
xor
push
sar
pushf
or
xor
cmp
idiv
xor
cmp
cmps
inc
push
sub
fs
jmp
cmp
or
in
outs
cmp
or
aaa
ror
sbb
or
mov
iret
add
mov
sbb
push
add
xchg
mov
or
adc
jno
fisttp
and
mov
inc
sbb
(bad)
and
mov
mov
mov
inc
pop
scas
inc
loope
std
dec
add
xor
nop
out
iret
das
pop
adc
adc
shr
push
jecxz
sbb
pop
pusha
pusha
adc
xor
and
cwde
sti
pop
dec
pop
push
imul
sbb
xor
inc
es
add
cs
jp
ins
mov
nop
or
adc
sti
add
xchg
dec
shl
jb
xchg
pusha
movs
xchg
or
les
inc
lods
cmp
adc
jp
and
push
jb
or
xchg
dec
xchg
push
or
cmp
cmp
test
movs
sub
sbb
sbb
cwde
adc
dec
or
add
pop
sti
add
jmp
mov
add
dec
sbb
ret
jns
sbb
or
xchg
add
push
test
inc
adc
sahf
movs
sbb
sub
or
and
mov
sbb
ins
stos
inc
mov
jo
sub
rcl
and
mov
inc
xchg
pop
movs
sub
dec
inc
push
ss
movs
or
test
and
cmp
sbb
and
enter
push
and
sub
je
fstp
pop
ins
sbb
add
adc
adc
pushf
mov
cmp
cmp
shr
cmp
stos
cmp
movs
add
sbb
addr16
cwde
cmp
push
bound
jne
add
inc
outs
inc
and
leave
add
mov
xor
mov
retf
les
pop
or
cmp
dec
push
push
xor
inc
adc
xchg
dec
ds
sbb
cmps
in
jns
jge
push
dec
rcl
add
test
sub
in
sahf
loope
add
cmp
adc
xchg
cmps
repnz
cmovo
add
inc
movs
arpl
in
push
test
sub
test
add
sub
sbb
xor
adc
add
fs
mov
sbb
xor
or
fs
sbb
test
mov
cmp
add
pop
sub
je
or
hlt
cmp
imul
xor
sti
sbb
pop
dec
jae
or
sbb
(bad)
sub
mov
cmp
movs
mov
push
fistp
leave
xchg
jo
cmps
mov
xor
sbb
xchg
sub
xchg
jmp
movs
mov
sbb
push
jb
mov
push
push
and
arpl
aaa
bound
ins
pusha
add
ror
xor
adc
add
popf
je
sub
xor
es
jmp
jmp
add
or
push
push
or
leave
xor
push
ds
or
jne
sti
les
jns
dec
sbb
sub
add
repnz
sbb
adc
ss
xchg
rol
add
sahf
mov
or
out
or
leave
or
push
popa
or
or
xor
push
test
popf
jb
int3
inc
or
sbb
pop
movs
pop
pop
(bad)
xor
dec
sahf
xchg
adc
cmp
pusha
inc
popf
or
mov
sub
xor
and
push
jecxz
(bad)
leave
add
xchg
enter
jp
mov
test
push
or
mov
sub
mov
push
mov
mov
pop
add
sbb
cmp
sbb
xor
jmp
aas
je
nop
out
pop
test
xor
pusha
xor
and
ror
aam
or
cmp
lods
dec
nop
mov
adc
outs
adc
dec
in
sbb
int
mov
or
push
mov
outs
cwde
cwde
mov
or
imul
add
push
sub
add
cmp
jo
jae
sbb
nop
lahf
pop
push
dec
inc
sub
inc
add
or
retf
and
out
cmps
xor
das
push
pop
jb
xchg
fcom
and
pop
adc
or
cmp
mov
es
or
push
repnz
and
dec
rcl
mov
and
adc
pushf
cmps
jb
jmp
push
sbb
or
cmp
rol
add
(bad)
sahf
out
cdq
iret
lds
popa
push
and
cmps
push
jns
iret
retf
inc
sub
mov
adc
and
sub
add
xchg
outs
cmps
lods
and
push
add
ja
loopne
jno
scas
xchg
int3
dec
mov
jns
lock
pop
jg
push
and
jae
inc
pushf
mov
sbb
inc
dec
dec
(bad)
jecxz
dec
or
mov
pop
fwait
xor
push
xor
scas
push
movs
sub
or
push
or
dec
sahf
and
sahf
scas
pop
movs
mov
add
add
xchg
lea
pop
repnz
cmp
add
lods
mov
nop
out
cld
stc
jne
and
add
jae
inc
adc
sahf
cmps
nop
movs
mov
sbb
mov
int
loopne
add
sub
add
and
xor
mov
popa
cmps
test
cmp
jae
adc
pop
arpl
cmps
adc
out
xchg
add
add
adc
adc
add
jae
push
and
je
and
push
sahf
mov
mov
push
repnz
adc
mov
call
jp
adc
imul
test
push
fnsave
sub
test
mov
mov
pop
test
xchg
and
add
inc
or
add
inc
pop
mov
jae
repz
or
xor
leave
in
iret
or
dec
cmps
xor
and
xchg
sbb
dec
aam
xchg
fs
sahf
addr16
add
or
lds
or
stos
nop
popf
or
rcl
adc
dec
pop
sub
out
sbb
repnz
mov
xor
add
inc
pop
cmp
pop
and
push
push
adc
and
popa
fstp
cmp
sbb
(bad)
loop
adc
gs
and
in
imul
sbb
xchg
inc
fmul
pop
ss
pop
test
es
mov
mov
test
cmp
in
add
adc
xchg
scas
mov
test
xor
and
inc
pop
movs
xor
leave
push
cmp
add
cmp
cdq
ret
add
cdq
or
inc
enter
sbb
and
or
adc
mov
mov
sbb
lea
sbb
aad
push
addr16
add
xor
push
mov
out
mov
sbb
adc
mov
add
dec
(bad)
loopne
xor
loopne
or
xchg
inc
xor
xor
sbb
adc
add
pop
pop
mov
cwde
movs
cmp
mov
or
push
es
add
jl
les
add
sbb
dec
sti
jbe
enter
adc
mov
lea
jns
push
push
daa
inc
push
adc
adc
out
cmps
mov
add
sbb
ror
pop
jb
sbb
cmp
mov
loopne
lea
enter
mov
mov
add
ret
push
aad
mov
lods
in
or
or
inc
add
int3
xor
imul
sbb
add
sub
jns
out
and
adc
add
mov
es
in
xor
movs
sbb
cwde
addr16
xor
bound
getsec
mov
and
or
leave
sbb
scas
and
xchg
adc
pop
or
dec
sub
aas
jno
pusha
pop
repnz
je
outs
loope
loopne
les
add
or
add
ror
jns
mov
and
dec
arpl
push
dec
or
mov
adc
adc
icebp
jns
inc
and
inc
push
stc
add
daa
xchg
dec
sahf
sbb
xor
stos
dec
cmp
push
ret
out
inc
dec
enter
or
into
pop
xchg
rcl
jns
xor
movs
push
add
jns
mov
adc
mov
add
rdpmc
(bad)
mov
dec
shr
mov
or
adc
inc
xor
mov
in
push
fcmovb
or
jne
pop
dec
movs
lea
adc
or
pop
jmp
push
aad
mov
in
cmp
adc
add
inc
je
push
xor
add
adc
xor
cmp
push
cmps
nop
imul
adc
and
or
mov
xor
xor
stc
mov
sub
sets
push
sbb
push
add
or
es
mov
cmp
jns
dec
add
out
in
int
cmp
xchg
stos
nop
jmp
inc
test
mov
adc
xor
out
sahf
xchg
jge
and
inc
sahf
sbb
pusha
adc
cmp
inc
dec
push
mov
stos
out
ret
or
sbb
jmp
xchg
out
rcl
addr16
and
push
or
add
mov
or
leave
add
push
sahf
popa
inc
sbb
dec
and
mov
pop
add
pusha
cmp
cmp
sub
mov
push
pop
jnp
and
pop
add
jae
add
add
mov
jns
sbb
rcr
inc
sbb
cmp
fwait
add
xor
jno
add
inc
popa
pop
enter
cmps
repnz
add
movs
xchg
adc
test
lods
push
pop
jb
jb
add
mov
ins
fnstcw
test
pop
or
mov
add
or
test
lock
(bad)
xor
or
lea
pop
xor
or
pop
mov
pushf
stos
das
sub
jne
or
mov
retf
ret
mov
ds
cmp
repz
jecxz
fld
xor
mov
push
sbb
sbb
adc
push
int
or
cdq
fld
sbb
retf
jae
adc
movs
sbb
push
adc
iret
sbb
and
repz
sbb
push
jo
jb
pop
push
pop
mov
fisttp
test
mov
dec
xlat
cmp
inc
or
call
xlat
xor
inc
out
mov
push
(bad)
hlt
leave
or
pop
or
xor
sbb
xchg
fadd
and
adc
add
shr
inc
and
mov
or
cmp
dec
ror
je
dec
data16
movs
jb
pop
inc
popa
add
rol
repz
outs
ret
cmp
int
pop
ror
xor
mov
add
pop
sbb
add
ja
mov
pop
inc
sahf
daa
cwde
inc
push
clc
and
fs
xor
mov
pop
test
push
inc
push
aam
js
pop
push
add
push
mov
retf
loope
xor
mov
ror
mov
ror
push
pop
stc
(bad)
adc
xchg
or
sub
lods
push
sbb
push
cmps
jns
sahf
or
and
pop
pushf
jmp
dec
xor
das
mov
sub
push
rcr
xor
mov
or
jnp
and
sub
gs
in
inc
sub
test
sbb
add
jns
sub
add
aad
gs
push
fs
adc
sub
adc
or
xor
dec
std
inc
add
push
pop
repnz
push
mov
push
aad
inc
or
and
push
movs
jns
out
vmaxpd
xchg
loopne
xor
push
inc
loop
in
adc
add
inc
aas
sub
mov
xchg
cs
sub
fcmovbe
and
sbb
cmps
mov
add
lods
pop
prefetchwt1
sahf
repz
dec
sbb
repnz
or
jecxz
test
inc
or
test
or
xor
scas
mov
aas
jb
xchg
les
cmps
or
daa
or
loopne
popa
rol
inc
popa
jl
inc
sbb
cmp
or
or
sbb
sub
dec
les
dec
lods
sub
xchg
add
xor
gs
inc
loope
mov
loopne
add
arpl
dec
push
test
xchg
je
test
cmp
shl
xor
or
xchg
outs
imul
add
mov
in
and
jp
push
cmps
add
imul
pop
ret
or
pusha
pop
je
mov
xor
iret
jae
sbb
fist
adc
or
cdq
or
inc
sbb
je
rcl
adc
adc
adc
xchg
adc
inc
dec
ins
popa
add
repnz
cwde
cmp
stos
mov
cmp
cmp
push
ins
pop
sbb
and
add
mov
adc
and
inc
sbb
sub
jp
out
dec
mov
xor
lea
and
dec
pop
daa
or
sbb
sbb
pop
popf
and
dec
and
sub
or
stos
ret
sub
call
loope
popf
sbb
and
imul
cmp
enter
jns
adc
aad
fmul
movs
jb
pop
and
test
push
ror
loope
call
sbb
add
or
movs
or
push
xor
sub
sahf
push
add
sbb
dec
cs
mov
popf
sub
adc
sub
or
cmp
adc
jno
add
add
push
shl
xchg
or
push
jo
mov
sub
pusha
adc
mov
add
push
sbb
imul
adc
test
stc
and
inc
in
cmp
push
sub
pop
sbb
inc
pop
pusha
add
jmp
rol
sub
enter
in
leave
pop
fdivr
or
sub
adc
not
and
mov
pop
test
not
test
and
into
xchg
shl
cmp
add
jno
rol
add
xchg
dec
sub
mov
loopne
lea
adc
add
cmc
ret
push
inc
pop
mov
sahf
out
movs
add
adc
and
daa
push
out
into
movs
std
loope
std
jmp
sub
cdq
push
push
jne
test
jno
xor
das
ss
or
mov
daa
repz
dec
push
or
ror
(bad)
or
shr
add
arpl
pop
cmp
or
and
or
ja
es
clc
loope
pop
xor
aam
mov
sub
aam
sub
adc
xchg
aaa
xchg
adc
sub
bound
test
xchg
mov
mov
sub
daa
lea
and
pop
aas
adc
inc
inc
(bad)
dec
dec
enter
out
iret
sbb
pop
mov
outs
pop
xor
add
mov
gs
ins
or
mov
dec
inc
aad
or
es
fisubr
xor
icebp
jno
ret
add
add
mov
and
test
and
adc
das
imul
push
and
push
ins
test
sbb
jns
shl
or
and
and
sub
add
xor
or
adc
add
add
les
add
ins
mov
iret
dec
shr
mov
cmp
rcr
sbb
push
stos
add
add
add
ret
arpl
jns
ss
mov
jns
(bad)
sub
cmps
pusha
xchg
retf
add
rcr
jae
jp
push
ret
cwde
xchg
pushf
add
movs
xchg
cmps
and
retf
mov
add
push
add
repz
xor
dec
std
pop
add
rcr
test
test
jno
mov
jecxz
shr
pop
sub
sub
movs
jno
(bad)
adc
sub
pop
xchg
jecxz
mov
inc
mov
or
mov
cmps
add
out
push
push
ror
pop
int
jp
jns
xchg
sub
push
es
push
sbb
jmp
or
dec
(bad)
dec
les
in
iret
jno
retf
lods
push
icebp
pop
sub
fwait
arpl
pushf
jo
push
sub
add
jno
rcl
aas
test
push
or
mov
pop
add
pop
adc
sbb
(bad)
sbb
xchg
dec
inc
arpl
jns
jno
sub
push
add
repz
call
or
or
sub
ins
xor
and
inc
inc
pop
or
rcr
test
or
jns
sub
pop
add
push
cs
add
or
or
retf
rcl
cmp
aad
daa
adc
xor
scas
or
mov
sbb
add
adc
pushf
out
and
mov
and
add
xchg
add
dec
xor
push
fst
or
jns
addr16
or
or
sub
movs
jb
mov
dec
daa
adc
xchg
mov
push
dec
cmp
sbb
or
sahf
xor
sub
sub
outs
dec
adc
gs
or
push
mov
sub
sub
dec
adc
ret
jmp
(bad)
popa
out
add
test
adc
mov
nop
pop
inc
add
xor
jmp
movs
add
cmps
movs
jmp
cmp
arpl
add
movs
mov
mov
ret
xchg
cmps
cmps
jge
sbb
out
add
shl
adc
pop
xchg
outs
and
arpl
jmp
and
fwait
retf
sahf
out
and
xor
sub
adc
or
call
sahf
add
and
test
jns
jp
ins
adc
jge
push
push
and
test
push
xchg
leave
and
dec
adc
and
leave
jae
ds
hlt
sbb
sbb
inc
sub
inc
add
iret
mov
sub
repnz
push
push
adc
push
xchg
push
shl
and
mov
adc
adc
add
adc
add
repnz
test
cmp
xor
inc
sub
out
xor
rcl
lea
add
xchg
or
mov
cmp
mov
or
(bad)
xor
add
dec
ins
sub
es
and
lea
sub
pop
pop
xchg
test
mov
mov
sbb
sub
(bad)
in
sbb
inc
cwde
or
xor
nop
dec
adc
or
test
xchg
inc
add
sub
rol
or
inc
add
jnp
adc
das
or
movs
push
(bad)
mov
sbb
push
inc
ins
mov
add
mov
xchg
in
das
mov
push
fnstsw
add
aas
out
xor
cs
jno
sbb
pushf
add
sahf
xchg
mov
cdq
adc
retf
jns
dec
cmps
addr16
mov
nop
or
sahf
jae
lahf
adc
sbb
jge
cmp
inc
push
cmp
pop
repnz
ret
sbb
push
add
repz
sub
popa
adc
cmp
cmps
mov
es
or
jge
inc
lods
adc
popf
or
sbb
dec
(bad)
int
popf
sbb
jne
jno
jecxz
fnstcw
push
dec
enter
inc
aad
mov
or
jnp
inc
sahf
out
nop
pop
sbb
loope
rcl
shl
and
inc
push
push
inc
pop
sti
push
inc
sahf
out
(bad)
pop
or
les
leave
push
cdq
push
cmovo
dec
sub
pop
test
xor
and
shl
xchg
pop
adc
lods
add
aaa
mov
sub
out
sahf
out
pop
and
push
loop
mov
cmp
cmp
or
and
jno
add
cmp
jae
dec
dec
push
lods
pop
repz
fadd
xchg
shl
mov
outs
adc
das
and
sub
ja
call
or
daa
add
fist
and
add
xchg
and
and
lahf
push
inc
add
imul
out
sbb
or
xor
repnz
and
inc
pop
adc
add
(bad)
and
adc
push
repnz
jns
cmp
add
sbb
pop
add
cmp
and
add
shr
adc
sar
dec
push
sbb
inc
push
xchg
sbb
dec
imul
stos
out
mov
sub
pushf
lods
mov
adc
in
repz
xor
add
sbb
test
mov
cld
and
push
and
inc
push
mov
sbb
adc
mov
xor
loopne
adc
repnz
add
inc
jne
and
sub
or
in
inc
and
test
repz
ins
dec
xchg
je
mov
and
dec
and
add
iret
xchg
mov
loope
push
outs
mov
jno
(bad)
or
dec
add
aaa
dec
sbb
sub
add
mov
or
mov
xor
pop
xor
and
mov
add
sbb
leave
sbb
adc
repnz
and
rcl
push
xchg
mov
or
out
pusha
adc
sub
call
movs
dec
sbb
cmp
inc
pop
jb
xor
mov
pop
and
dec
es
out
add
repnz
sbb
enter
data16
pusha
add
mov
loop
adc
dec
test
push
inc
lds
loopne
sub
dec
jae
ficom
aaa
mov
or
cs
add
lods
xor
push
mov
and
jnp
arpl
adc
outs
inc
xchg
jle
xor
sub
jae
test
popf
inc
pop
ins
out
(bad)
pop
cmp
push
push
or
adc
popf
or
dec
mov
inc
add
or
cwde
int
imul
mov
and
mov
dec
icebp
iret
repz
jo
adc
sahf
repz
sbb
inc
jbe
sbb
add
jnp
dec
push
fs
xor
je
test
pushf
pushf
cmp
rcl
push
sub
test
and
and
mov
inc
dec
nop
fnstenv
adc
in
xor
dec
and
add
daa
sbb
adc
dec
scas
mov
xor
loope
xchg
pop
nop
stos
jmp
push
enter
sub
(bad)
add
xchg
mov
nop
out
mov
lds
jg
test
dec
adc
and
add
xor
adc
mov
pop
test
adc
cmp
and
adc
outs
adc
mov
sbb
mov
inc
rol
stc
sahf
fidiv
jo
inc
sub
xchg
add
or
push
xor
jae
out
or
adc
pop
xor
pop
mov
jmp
int
xchg
xchg
mov
int
hlt
and
imul
int
(bad)
jae
dec
dec
mov
push
cmps
xlat
add
add
sbb
mov
outs
adc
pop
adc
jmp
stc
add
cmp
jae
pop
adc
jecxz
cmp
(bad)
outs
jo
add
sar
or
push
out
push
enter
and
add
and
mov
gs
push
lds
in
adc
push
push
add
loope
push
add
xor
push
or
pop
aaa
and
push
scas
mov
iret
je
imul
jnp
aad
push
cmp
icebp
fstp
or
push
jns
and
dec
loop
sbb
cwde
ret
xor
adc
jecxz
push
adc
popa
dec
push
shr
jmp
pop
adc
sbb
es
mov
iret
sbb
sbb
jmp
and
push
or
pop
dec
lods
or
stos
inc
inc
sbb
and
sub
inc
and
les
cmp
outs
and
push
or
pop
pop
test
fdivr
push
std
dec
(bad)
push
dec
lods
dec
mov
pop
and
mov
ja
xchg
xor
push
xor
xchg
inc
add
pusha
dec
pop
(bad)
movs
shl
or
pushf
push
adc
inc
pop
adc
fs
lea
push
enter
test
xchg
jae
push
inc
and
and
and
jnp
sub
or
add
cmc
add
mov
mov
(bad)
adc
pop
lods
and
inc
add
sbb
retf
jb
rcl
lea
or
dec
aaa
or
cmps
rol
jmp
sahf
or
jmp
fs
or
test
add
stos
or
xchg
inc
xchg
cmp
xor
push
adc
scas
sub
pop
aas
sub
or
sub
or
mov
push
aaa
jg
xor
inc
sahf
add
mov
push
sub
add
cmps
add
mov
dec
mov
das
or
pushaw
and
fiadd
(bad)
jmp
mov
and
sub
sbb
or
lds
and
ins
sbb
xchg
mov
sub
rol
or
cmps
mov
lods
mov
and
add
imul
inc
push
and
mov
and
and
and
sahf
add
and
add
mov
inc
cmp
dec
sub
add
push
pop
test
cmp
or
xor
aas
or
inc
adc
movs
rcr
push
inc
xor
repnz
aaa
sub
loopne
add
cmps
aas
loope
cmp
enter
add
leave
jae
mov
add
push
arpl
es
adc
arpl
pop
add
push
or
js
push
add
push
das
adc
jo
lods
sbb
fbstp
mov
dec
mov
fst
test
das
popa
add
and
adc
pushf
sbb
rcl
add
add
sbb
add
add
imul
push
sbb
imul
adc
sub
sub
or
xchg
jns
out
pop
arpl
xor
arpl
cs
popf
movs
push
jns
adc
jae
sub
add
mov
mov
sar
cmp
adc
xor
daa
push
push
inc
aam
pop
push
cs
xchg
jno
dec
inc
jns
lds
sub
cmp
addr16
adc
adc
sub
cmc
sbb
mov
mov
inc
loop
lea
push
data16
sbb
sub
pop
repnz
call
or
nop
cmp
and
sub
popf
mov
mov
and
jl
mov
dec
imul
add
mov
mov
test
nop
or
imul
xchg
inc
sub
adc
xor
ror
or
push
xor
xor
pop
and
add
add
shr
pop
add
push
dec
movs
sbb
leave
add
dec
adc
adc
xor
daa
inc
mov
repnz
xchg
adc
sub
sub
sbb
cmp
or
ret
les
sub
popa
jle
adc
das
or
ds
mov
pop
rol
in
or
rol
sbb
pop
add
aam
cmp
xor
add
test
arpl
and
test
jmp
sbb
sahf
retf
push
cmp
test
push
push
dec
pop
sbb
pop
inc
push
imul
jp
movs
add
push
jmp
cmc
out
mov
jmp
dec
pop
jge
in
push
sub
push
movups
add
(bad)
push
pop
xchg
pop
gs
mov
push
inc
adc
sbb
or
xchg
fistp
lods
inc
test
test
push
dec
or
and
push
cmp
push
pusha
cmp
add
mov
mov
adc
in
xchg
ret
imul
or
sbb
fistp
jns
cld
add
into
dec
adc
jl
or
imul
test
je
jno
pop
jecxz
mov
nop
out
or
es
pop
xor
gs
add
and
add
inc
sbb
sti
jae
sar
mov
fs
cmp
pop
add
stos
add
jbe
adc
cmp
push
gs
xchg
in
leave
xchg
fwait
imul
repnz
pop
xchg
and
sbb
inc
movs
mov
add
add
int
jbe
sbb
and
inc
ds
and
jbe
jne
xor
imul
xchg
stos
jns
repz
mov
add
enter
xchg
mov
sub
jb
push
add
sbb
fs
adc
inc
sahf
out
and
repnz
arpl
les
push
or
adc
inc
and
sub
addr16
push
jns
push
pop
add
push
leave
push
movs
test
addr16
and
cmp
mov
in
and
daa
cmp
inc
add
mov
sbb
sbb
mov
or
jo
or
daa
daa
adc
or
test
pop
mov
sbb
xor
cmp
xchg
adc
adc
shr
mov
add
enter
cmps
mov
shl
test
and
or
pop
sbb
cmp
movs
or
call
cmp
sub
sbb
push
cwde
push
adc
movs
rol
push
push
adc
data16
(bad)
xchg
mov
push
cmp
scas
push
mov
mov
sbb
push
rcr
sbb
popa
pop
push
cwde
cmps
and
cli
xor
fistp
outs
je
fwait
sub
xchg
inc
fadd
daa
xlat
add
adc
(bad)
in
test
sbb
xor
dec
pop
xor
or
rol
add
add
push
pop
repnz
(bad)
and
cmp
push
dec
cmp
jmp
or
repnz
cmp
add
pop
sbb
stos
or
cs
adc
push
xor
shl
cmp
or
setbe
add
inc
pusha
stos
rol
mov
ret
mov
mov
stc
adc
sbb
push
cdq
nop
cmp
sbb
sbb
sub
mov
cmp
pusha
and
xor
push
cmc
add
dec
out
add
and
mov
adc
push
dec
das
and
xchg
push
jno
lods
inc
ds
push
add
cmp
mov
lds
pop
mov
sub
mov
shl
retf
popa
jmp
mov
in
xchg
pop
sbb
test
dec
mov
in
leave
pop
adc
xor
inc
and
xchg
or
or
fsubr
je
inc
shl
pop
mov
leave
repz
inc
mov
xchg
out
xor
pop
adc
bound
imul
push
popf
jns
jno
movs
push
adc
movs
lea
imul
daa
es
push
ret
pop
jb
cmp
or
std
mov
add
xor
cs
stos
lahf
and
dec
inc
xor
inc
add
dec
jmp
push
in
push
pop
cmp
ret
push
mov
inc
arpl
add
dec
inc
movs
mov
jae
movs
push
sub
and
sbb
cmp
sbb
adc
add
cmp
and
jae
or
sub
and
xor
sahf
jge
inc
jo
inc
and
jb
dec
push
(bad)
adc
fnstenv
pop
movs
les
sub
and
ret
mov
add
mov
add
jns
push
mov
cmps
leave
in
inc
and
rol
inc
movs
jnp
addr16
dec
jne
mov
inc
sahf
or
test
ficomp
sbb
sbb
and
in
xor
nop
stos
or
std
sahf
addr16
xor
sub
and
cmps
test
stc
mov
add
push
sub
sub
or
push
lods
xchg
ret
or
push
xchg
adc
jae
fcmovbe
sub
adc
inc
or
mov
pop
(bad)
sbb
pop
popa
enter
sbb
xlat
nop
jp
add
and
jns
jo
psubsb
sbb
test
adc
adc
or
call
daa
cmp
das
push
xor
push
ret
push
jmp
shr
pop
ds
sub
nop
out
or
push
jb
and
mov
or
add
adc
jge
cmp
loopne
std
cmps
repnz
add
add
jnp
and
add
lea
and
xor
add
loope
jne
lahf
test
or
push
inc
inc
xchg
or
not
dec
and
mov
aam
and
and
add
add
ficomp
mov
sbb
and
inc
add
cmp
sub
mov
sti
or
sbb
inc
mov
jb
add
inc
lods
call
sbb
es
adc
pop
pop
xor
and
cmp
sub
cmp
stos
sbb
pop
push
lods
cs
dec
xchg
mov
xchg
cwde
cmps
xor
cmp
daa
xchg
mov
add
cmp
dec
cmp
pop
aas
stos
retf
fnsave
pusha
dec
jge
mov
inc
loope
sub
push
cmp
arpl
push
push
sahf
mov
movs
movs
jbe
mov
dec
add
retf
sbb
fwait
adc
mov
test
or
xchg
lea
dec
jne
add
fld
dec
outs
gs
sbb
dec
sbb
es
je
les
cmps
and
push
xor
pushf
mov
ins
mov
dec
sbb
inc
pushf
adc
lahf
mov
xchg
or
xor
stc
iret
repz
sbb
push
adc
stos
xchg
es
mov
cmp
sub
push
or
ins
mov
das
and
outs
xor
dec
or
mov
inc
test
es
adc
xchg
sub
adc
add
sub
repz
xor
inc
adc
sub
into
push
(bad)
dec
in
sbb
adc
push
add
add
mov
div
push
push
add
inc
sbb
sbb
rol
xor
jns
add
loop
sub
sbb
xor
sahf
mov
mov
int
push
push
sbb
inc
movs
mov
cmps
mov
loope
xor
and
jns
test
push
jl
xchg
sbb
inc
repnz
adc
mov
jns
cmp
cmp
out
pusha
and
and
and
retf
sbb
sub
add
adc
hlt
xchg
sbb
push
lods
add
sub
adc
daa
pop
or
adc
dec
aas
lahf
pop
adc
dec
aad
and
inc
adc
xor
jae
pop
push
dec
or
and
mov
pop
xlat
daa
bound
data16
pop
add
bound
xor
pop
cs
push
add
xlat
cmp
rcl
adc
jne
xchg
fsub
add
sbb
shl
rcr
add
sbb
arpl
mov
jecxz
pop
mov
mov
push
cmp
ins
(bad)
in
xor
into
repz
dec
int3
inc
ret
aas
xor
adc
movs
test
movs
inc
and
or
out
add
xchg
out
shl
inc
cmp
add
jb
mov
sbb
xchg
xor
mov
sbb
out
push
mov
js
cmp
push
xchg
inc
fwait
xor
sub
pop
adc
push
sahf
jno
inc
add
and
aas
add
pushf
pop
popf
mov
repz
sub
or
adc
jbe
dec
sbb
ds
dec
dec
adc
adc
jns
and
push
push
jle
mov
dec
sub
add
add
inc
out
xor
and
jns
or
or
xor
aad
push
add
loopne
rcr
jnp
movs
leave
add
inc
lods
push
jae
ret
pop
rol
sbb
retf
or
xor
repnz
popf
cmp
jns
push
sub
mov
push
push
aad
add
jns
and
fist
adc
aam
pusha
dec
add
pop
lods
cmps
repnz
xchg
mov
push
pop
dec
or
sbb
jae
pop
pop
inc
push
pop
mul
xchg
jl
add
test
gs
and
mov
xchg
sub
or
and
xchg
fs
xor
aaa
mov
jns
adc
movups
je
xlat
and
or
loopne
dec
inc
and
imul
sub
or
or
sub
repnz
or
push
sub
or
addr16
or
xchg
out
xor
sub
jns
xor
lea
rcl
pop
push
lock
and
mov
daa
and
inc
pop
jecxz
test
push
aaa
xchg
ret
push
aas
pop
jp
inc
xor
xor
push
adc
pushf
inc
fld
xor
jno
add
or
popa
lods
or
cmps
fst
mov
sub
pop
xchg
aaa
cmps
lock
or
nop
adc
cmp
jo
mov
cmp
mul
or
retf
pop
les
cs
lods
fisttp
fistp
or
add
adc
add
in
call
mov
or
pop
jb
aas
add
push
or
dec
imul
bound
and
add
rcl
push
adc
sbb
movs
inc
sbb
dec
les
rcl
sub
push
cs
lods
dec
xor
leave
inc
das
ret
movs
jg
add
lea
imul
and
and
ss
nop
push
lds
and
mov
cwde
dec
jne
adc
sbb
repnz
popa
mov
jo
xlat
or
enter
iret
test
add
and
daa
js
pop
add
test
xchg
ret
int
adc
sbb
and
and
dec
jbe
imul
shl
in
int3
mov
push
sbb
out
sahf
mov
dec
sbb
nop
or
cmp
lods
dec
sahf
and
add
adc
add
movs
xchg
out
sbb
and
call
xchg
retf
xor
ins
or
lea
mov
inc
and
cmp
ins
add
adc
or
and
cdq
cmp
leave
dec
pop
adc
mov
adc
or
or
add
push
and
or
push
add
push
shr
and
xchg
pop
or
adc
aam
jnp
cs
adc
or
xchg
sbb
add
cs
inc
add
aam
add
or
sub
nop
stos
sbb
fld
cmp
xor
sub
pop
repnz
shr
jge
dec
mov
enter
xchg
sbb
inc
dec
add
neg
dec
pop
jb
das
movd
jecxz
inc
bound
out
and
add
add
cmp
sub
sbb
or
mov
pop
adc
ret
xor
mov
sub
xor
xor
and
sub
adc
retf
ret
dec
or
push
xchg
daa
or
addr16
sbb
and
ret
cs
push
cmp
aaa
add
popa
push
pusha
cmp
xor
or
leave
repz
add
in
adc
inc
cmp
mov
stc
js
pop
sub
add
out
add
mov
jns
mov
sbb
aam
sbb
dec
xchg
test
retf
fild
mov
inc
inc
jmp
iret
pop
or
inc
mov
nop
dec
push
mov
sub
pop
sub
lds
adc
adc
stos
xor
mov
add
xchg
sbb
push
pop
mov
in
mov
sbb
fild
xchg
mov
pop
fstp
shl
iret
(bad)
cvtpi2ps
cmp
aam
adc
mov
aas
mov
test
xor
xchg
xchg
push
add
out
es
pop
push
xchg
(bad)
and
adc
inc
movs
scas
dec
mov
repz
es
add
(bad)
cs
mov
out
adc
nop
in
cmp
or
dec
out
cdq
rol
push
outs
add
sub
dec
cmp
sub
and
push
jg
mov
imul
or
ret
daa
movs
(bad)
icebp
movs
cmps
or
pop
fdivr
and
sub
lea
and
push
lea
sbb
cmp
xor
push
jl
xchg
mov
sub
xchg
les
inc
and
adc
lds
popa
jns
push
adc
ret
xchg
dec
sub
inc
repz
cmp
cmp
mov
add
xor
sub
sbb
xchg
mov
inc
pop
mov
xor
std
push
adc
dec
mov
xchg
arpl
sbb
inc
push
fsub
cmp
adc
inc
and
dec
loope
sub
rol
adc
pop
xor
adc
sti
add
inc
sahf
xor
or
in
sub
jnp
cmp
lea
add
sub
jo
test
inc
or
stc
and
sub
adc
imul
mov
push
iret
jae
inc
dec
pop
or
and
xor
or
out
test
dec
rol
push
icebp
inc
pop
cmp
ret
xchg
ret
fild
sbb
sub
dec
push
out
pusha
bound
push
subps
stos
push
shl
ds
(bad)
adc
pop
aaa
lods
add
dec
jmp
adc
xor
inc
or
sbb
mov
inc
sbb
xor
add
xchg
dec
xor
add
mov
sahf
bound
cmp
or
or
sub
add
push
pmulhuw
xor
repz
cwde
pop
and
leave
enter
adc
popa
aaa
inc
add
leave
dec
push
sub
and
nop
mov
push
inc
add
int3
leave
pushf
mov
adc
dec
shl
adc
or
xchg
ret
jecxz
inc
pop
xchg
add
or
inc
and
in
iret
repz
adc
movs
add
out
inc
enter
das
push
lods
sub
jae
test
add
fcomp
out
and
pop
test
aaa
into
adc
(bad)
pop
loope
xchg
enter
add
mov
into
pop
sbb
add
in
adc
popa
sahf
dec
bound
cmp
or
add
std
jb
pop
jb
lods
xchg
mov
xchg
adc
push
repz
shl
sub
in
iret
push
ss
sbb
xor
pop
dec
sahf
xchg
or
or
inc
pop
out
xor
inc
loop
dec
xor
nop
sub
mov
sub
repnz
inc
add
stos
and
call
mov
xchg
in
sahf
retf
inc
data16
add
add
dec
xor
(bad)
in
sahf
xchg
sahf
adc
pop
enter
inc
add
push
and
sbb
add
adc
rcl
sub
nop
add
into
mov
mov
add
sbb
or
iret
daa
xor
or
pop
repnz
cs
xor
sbb
push
and
inc
mov
js
cmp
jb
add
test
sbb
or
and
xor
fild
std
sub
mov
nop
nop
outs
inc
mov
pop
and
aam
test
add
sbb
and
dec
sbb
sub
mov
fcom
dec
jp
xchg
or
je
fld
dec
adc
iret
xchg
fild
and
xor
stos
shl
mov
sub
cs
rol
data16
inc
or
call
sub
xor
pop
mov
lods
mov
add
adc
pop
and
call
pop
jmp
adc
shl
ja
test
push
xchg
push
and
or
sub
call
jns
ins
or
test
push
daa
xchg
inc
inc
cwde
das
pop
sub
or
pop
in
cs
sub
xor
sub
jmp
or
inc
test
ins
adc
inc
push
pop
data16
mov
jmp
and
dec
(bad)
jns
xchg
pop
inc
mov
enter
movups
push
call
cmp
fld
sbb
push
or
dec
jns
retf
outs
push
dec
sbb
xor
push
mov
leave
jae
out
pop
setbe
rol
jnp
dec
and
or
bound
inc
dec
xor
movs
repz
(bad)
nop
push
and
cmp
ins
inc
mov
cmps
lods
inc
pop
sbb
push
or
pop
xchg
xchg
rcr
add
push
lods
mov
movs
xchg
mov
cmp
bound
fstp
push
xor
repnz
or
adc
adc
sbb
nop
out
cld
dec
je
xor
xor
mov
cdq
pop
xchg
inc
ins
mov
out
sbb
xchg
retf
stos
js
inc
sub
add
and
or
ins
sbb
fsub
mov
iret
repz
push
cmp
out
jb
push
cs
add
adc
dec
jae
inc
ins
and
nop
mov
ss
add
mov
sbb
repnz
xor
arpl
enter
xor
mov
and
xor
inc
inc
sub
dec
movs
mov
or
add
mov
repz
shl
xchg
dec
ss
add
cmp
aas
stos
outs
rcl
adc
adc
and
daa
adc
je
xchg
push
cmp
push
dec
data16
mov
or
sub
xchg
xchg
out
out
scas
shl
jge
cmp
adc
adc
adc
pop
add
or
xchg
add
pop
cmps
jns
pop
test
xor
jno
add
xchg
icebp
mov
and
xchg
(bad)
leave
repz
ror
push
xor
jmp
repnz
adc
movs
add
mov
sub
into
push
or
sbb
enter
add
xor
mov
jns
pop
pop
(bad)
or
and
movs
clc
(bad)
nop
jno
cmp
inc
add
sahf
and
sub
inc
mov
sbb
test
ins
xlat
pop
pop
rcl
sbb
xchg
cmp
fs
inc
ror
fcomi
and
push
mov
or
in
enter
out
push
sbb
xor
jno
imul
sbb
movs
xor
pop
movs
and
or
repnz
adc
fwait
or
xor
scas
movs
push
mov
push
mov
test
cmp
mov
inc
adc
les
sub
jns
or
inc
adc
xor
iret
test
inc
sub
mov
push
or
add
cli
and
push
mov
adc
push
cmp
les
add
sbb
scas
mov
mov
cmps
ins
lods
dec
sahf
adc
jmp
or
out
or
packsswb
xor
and
nop
or
sahf
dec
add
test
or
ja
dec
je
mov
add
add
into
test
pop
sub
push
leave
push
jns
adc
or
pop
and
outs
xchg
or
out
sbb
adc
and
js
int
mov
ret
adc
adc
int
sub
imul
sbb
jns
sub
sub
mov
ret
out
loopne
add
imul
dec
cmp
push
in
mov
add
mov
aam
xchg
sub
cmp
or
pop
or
pop
mov
movs
ror
mov
icebp
pop
sahf
retf
aas
push
ud2
add
xchg
xchg
dec
jge
and
int3
inc
and
pop
cs
and
cmp
movs
push
jae
dec
sahf
outs
enter
sub
add
mov
test
pushf
cmp
lock
int
and
adc
or
push
scas
pushf
out
sahf
add
imul
or
in
and
push
imul
cli
add
movs
xor
lods
lds
xchg
xor
(bad)
pushf
push
push
jns
adc
test
jns
inc
icebp
sub
push
imul
and
jae
hlt
or
daa
and
sub
das
sub
inc
or
sub
icebp
sbb
xchg
and
xchg
sbb
lods
cmp
pop
mov
or
and
dec
cmps
add
xchg
je
dec
test
pop
add
inc
shl
adc
adc
inc
test
add
aam
dec
outs
pop
adc
jo
idiv
lods
sub
and
and
adc
mov
push
shl
push
les
arpl
dec
inc
cmps
ins
pushf
adc
adc
push
pushf
and
ret
movs
pusha
nop
test
jae
and
test
(bad)
data16
dec
in
pop
in
popa
or
and
les
adc
bound
or
or
inc
sahf
cmps
add
xlat
mov
jmp
jmp
add
inc
dec
sub
dec
pop
inc
int
mov
fs
cmp
and
or
mov
jnp
inc
pop
mov
pusha
add
in
pop
xor
iret
repz
fmul
or
or
add
loopne
cmc
fiadd
leave
push
jns
or
lods
mov
dec
and
adc
mov
test
mov
inc
mov
inc
xchg
and
dec
xor
dec
popa
(bad)
pusha
mov
stc
mov
pop
jo
sub
jae
mov
mov
mov
ret
push
xor
adc
add
gs
neg
sub
bound
push
jmp
add
mov
and
jb
cmc
sbb
and
jecxz
cmp
xchg
cmp
or
add
mov
jns
sub
pushf
out
jl
pop
sahf
into
mov
or
xchg
dec
push
and
popf
or
mov
pop
xor
enter
outs
aaa
inc
push
jns
lock
cmps
cmp
mov
dec
and
cmp
aam
push
leave
repz
or
pop
sahf
cmp
xor
int
fld
mov
sbb
pop
or
test
or
mov
dec
dec
sub
pusha
cmp
addr16
mov
dec
dec
pop
add
dec
push
test
jae
mov
aad
jne
cmps
or
dec
xor
or
push
mov
push
and
movs
mov
adc
sahf
add
ret
loopne
inc
sbb
ins
dec
loop
movs
pop
gs
sbb
add
add
dec
adc
inc
cmp
add
pop
loopne
pop
repnz
mov
and
cmp
adc
xchg
mov
xchg
add
pop
xor
cmps
movs
xor
ins
push
or
or
shr
and
xor
ja
enter
push
btr
adc
xor
and
inc
push
sub
rol
xchg
daa
mov
mov
push
sbb
sbb
punpcklbw
add
add
mov
mov
test
push
pushf
cmp
add
or
or
cwde
or
cmp
mov
retf
aad
sub
icebp
jge
sbb
inc
adc
ret
xchg
cmp
rcr
push
sub
ret
repnz
out
xchg
push
inc
pushf
sbb
add
test
sbb
imul
add
xchg
es
push
and
and
jnp
jns
sub
push
push
fild
stc
aam
das
call
test
mov
push
or
cmps
stos
test
add
cmps
or
pop
cmp
hlt
jecxz
and
test
in
paddb
outs
and
mov
or
mov
adc
cmps
mov
movs
or
or
push
xor
add
fisubr
jb
cmp
pusha
or
and
sub
sub
adc
sahf
addr16
push
push
or
push
and
ss
nop
adc
and
sub
and
add
mov
cmp
dec
mov
jbe
push
cs
or
jmp
jae
call
into
repz
inc
xchg
dec
pop
push
cmp
lods
inc
push
add
ficomp
inc
pop
pop
cmp
sub
lods
add
push
pop
jb
popa
adc
cmp
inc
jb
pop
push
and
mov
(bad)
jmp
adc
mov
cmp
repnz
mov
or
jecxz
cmp
push
add
mov
fsub
(bad)
sub
jecxz
pop
repnz
dec
or
mov
mov
ret
movs
adc
cmps
mov
push
add
adc
setbe
leave
inc
jns
add
outs
sbb
movs
inc
enter
push
(bad)
xor
mov
and
cmp
jge
dec
xchg
jl
push
adc
adc
xchg
cmp
daa
dec
pop
push
add
xchg
rol
scas
mov
leave
arpl
popf
es
push
adc
xchg
shl
mov
and
pop
aaa
and
or
(bad)
or
add
pop
outs
sub
icebp
sub
pop
dec
loop
inc
lea
xor
add
inc
sahf
out
adc
(bad)
dec
sbb
je
xor
mov
dec
xor
test
int3
aad
das
cmp
movs
xor
push
es
dec
jmp
test
or
dec
stos
pop
sub
cmp
add
icebp
add
mov
xchg
div
inc
sbb
or
adc
jo
add
mov
mov
rcl
in
ja
add
push
outs
add
pop
mov
mov
sub
mov
sbb
iret
repz
mov
movaps
es
dec
pop
add
test
adc
retf
lods
xor
adc
push
cmp
mov
adc
pushf
cmp
mov
rol
mov
sti
jns
out
mov
or
xor
mov
or
inc
mov
sbb
popf
push
add
adc
iret
adc
cmp
cmp
jge
and
repnz
nop
daa
cmp
jns
outs
mov
nop
jp
enter
cmps
repnz
packuswb
or
or
cmp
jno
and
cmp
cdq
add
dec
arpl
or
adc
nop
stos
test
retf
div
xor
or
or
imul
fucom
pusha
and
mov
xchg
dec
add
stos
sbb
add
addr16
or
pop
push
or
stos
retf
(bad)
push
xor
pop
ins
scas
add
cs
dec
push
loop
sbb
push
adc
daa
dec
rol
cmovae
adc
call
bnd
adc
and
mov
outs
add
push
adc
cmp
ror
fadd
mov
pusha
std
xor
add
cmp
jns
dec
int3
and
cmps
or
cld
inc
cmp
cmp
sub
gs
cmp
add
xor
adc
jae
or
dec
sbb
add
inc
sub
push
dec
add
and
enter
add
or
les
gs
push
pop
push
push
arpl
sub
cmp
xlat
xchg
jno
lahf
jg
sbb
sub
cmp
push
lds
cmp
repz
leave
adc
push
or
cmps
cmp
xor
adc
xchg
and
push
ror
xor
pop
or
sub
cmp
sub
(bad)
ins
add
enter
push
aad
pop
ret
daa
and
cwde
and
and
ins
cmp
mov
js
xor
sbb
ins
lea
not
ss
jl
lods
adc
add
shr
jns
addr16
pop
add
dec
leave
adc
sub
call
sub
and
shr
cmps
cs
and
pop
push
lea
cmp
test
and
and
add
into
repz
cmp
out
retf
inc
retf
in
cmp
or
push
mov
xor
and
and
cmps
mov
xor
inc
or
xor
adc
repnz
or
pushf
pushf
push
xor
adc
cs
lea
or
sbb
(bad)
dec
ja
in
mov
jmp
and
cmps
in
bound
cli
fsubr
and
xor
mov
push
adc
iret
jae
or
call
pop
mov
inc
xchg
rol
add
mul
jns
or
or
or
add
or
dec
in
es
test
inc
xchg
push
pusha
add
ret
xchg
add
xor
cmp
imul
jmp
push
pushf
add
or
mov
add
movs
xor
iret
inc
or
in
add
(bad)
and
ins
pop
test
pop
dec
jns
cdq
xor
jns
fnstsw
cmp
in
adc
data16
imul
iret
repz
mov
imul
cwde
xchg
xchg
fwait
daa
cmp
push
dec
adc
add
or
call
cmp
or
jne
add
sbb
mov
push
adc
enter
sbb
inc
cmps
adc
xchg
pop
jg
and
add
push
data16
sub
or
adc
mov
mov
push
or
xor
or
fisttp
cmp
push
out
xchg
cwde
sbb
and
inc
jae
add
add
inc
sahf
int
mov
and
into
or
pusha
adc
or
scas
adc
and
xor
add
add
mov
jmp
xchg
and
pop
cmps
jge
and
in
iret
(bad)
aam
rcr
adc
sub
pcmpgtd
sbb
or
lods
je
mov
xchg
out
sbb
add
movs
cmp
add
xchg
movd
call
push
add
or
scas
sub
and
push
inc
add
test
imul
dec
inc
and
nop
inc
and
mov
mul
push
pusha
jecxz
add
add
dec
cs
or
and
dec
add
mov
test
and
and
stos
sbb
sbb
je
test
or
sbb
enter
xor
jmp
xor
pop
xor
push
pop
cmp
add
and
in
add
mov
pop
mov
adc
lods
retf
or
xor
adc
nop
dec
test
jecxz
xchg
cld
adc
inc
iret
nop
inc
sahf
lahf
inc
pop
xor
arpl
push
adc
dec
add
jp
les
add
cs
cwde
call
cmps
daa
repz
jb
test
je
mov
movs
or
add
pushf
call
fwait
cmp
ins
xchg
scas
or
repz
xor
or
cmp
sbb
adc
mov
xchg
xor
clc
add
sub
sbb
leave
repz
shr
adc
sub
arpl
dec
les
sub
dec
fmul
mov
or
or
repz
xchg
push
pop
repnz
push
mov
cwde
jbe
daa
add
pop
xchg
out
mov
xchg
xchg
add
jns
xor
jecxz
int
leave
and
sbb
jmp
xor
cmp
xchg
jae
sub
iret
repz
sbb
mov
pop
shr
inc
adc
pop
push
pop
pop
cdq
add
sbb
or
cmp
add
fcom
int3
fwait
sbb
pop
in
adc
in
and
adc
test
mov
out
sub
lock
push
and
push
popf
and
mov
pop
imul
inc
add
add
mov
mov
cmp
loopne
rol
sti
or
pushf
xchg
push
inc
xor
out
sbb
loopne
nop
mov
xchg
es
ja
and
or
push
push
ja
push
addr16
call
jns
push
or
or
dec
imul
loope
and
out
aas
mov
scas
mov
popa
enter
ins
add
pop
adc
pop
sbb
sub
pop
inc
sub
push
popa
cwde
adc
adc
xchg
mov
repnz
and
cmps
lea
jns
push
in
inc
xor
pusha
jmp
add
or
enter
cmp
rcr
xchg
jb
push
or
test
add
mov
add
add
sbb
inc
call
inc
pusha
movs
jnp
jo
add
inc
push
adc
pop
movs
xor
(bad)
inc
popa
inc
nop
movs
mov
xor
push
repnz
inc
sub
in
sahf
mov
dec
pop
or
adc
jns
xor
ds
seto
mov
pop
xchg
xchg
dec
xchg
cmp
add
cmp
mov
iret
inc
sub
inc
xor
leave
and
or
movs
mov
lods
push
jb
or
daa
add
and
shl
mov
scas
or
cmps
loop
ds
sbb
add
cmp
mov
nop
jb
jnp
sbb
sbb
cmp
bound
iret
sub
xchg
push
add
pusha
les
dec
inc
ror
shl
aas
mov
and
xor
mov
adc
dec
or
add
xor
pop
adc
pop
inc
xchg
movs
add
push
inc
stc
pop
cmp
repz
sub
ret
adc
and
sub
adc
or
cmp
test
nop
dec
das
lock
push
pop
add
sbb
das
or
ins
or
inc
stos
bound
cmp
call
out
sahf
push
or
sub
repnz
or
or
cmp
or
xor
inc
xor
cmp
pop
adc
or
xor
xchg
xor
push
mov
scas
xchg
test
in
arpl
inc
(bad)
adc
repnz
rcr
inc
aam
push
push
jne
jns
or
push
ret
add
mov
adc
mov
test
inc
sub
add
cmp
or
and
inc
dec
and
inc
inc
stos
dec
sbb
add
imul
dec
or
scas
in
push
push
dec
mov
and
and
jp
mov
add
in
xor
xchg
dec
(bad)
in
stos
xor
cwde
call
and
jns
ret
loopne
add
sbb
(bad)
cmp
test
fnstcw
sti
or
xchg
inc
cdq
jle
lods
push
rcl
sti
adc
dec
and
cmp
or
dec
push
push
mov
adc
add
repz
adc
sub
sub
dec
loopne
jne
pop
or
pop
(bad)
sub
aam
daa
push
sbb
inc
pop
cmp
push
retf
sbb
push
push
jae
jmp
es
pop
jno
outs
adc
cmp
and
mov
cmp
out
sahf
stos
add
cmp
xchg
inc
xor
mov
pop
cmp
setno
out
retf
out
jns
out
or
push
sar
add
push
pop
and
push
enter
lods
sub
mov
mov
and
repnz
mov
and
stos
mov
inc
sbb
test
adc
and
repz
fs
cmp
enter
shl
inc
push
or
mov
xchg
add
dec
cdq
aad
cmp
cmp
jne
or
push
xchg
or
leave
mov
pop
sbb
add
enter
xor
mov
dec
or
or
adc
fs
repnz
inc
and
or
cmps
sbb
pop
and
xor
lods
mov
mov
enter
rol
dec
xchg
mov
and
dec
adc
aas
dec
lahf
popf
repz
ins
sbb
adc
dec
jge
stos
out
test
push
and
repnz
das
or
test
repz
xor
add
cmp
(bad)
jmp
xchg
ins
pop
jno
adc
add
xor
inc
lahf
xchg
inc
jb
inc
in
and
inc
pop
xor
adc
add
sbb
cmp
pop
sbb
dec
mov
and
xor
loopne
inc
pop
pop
push
cwde
sbb
adc
fstp
push
sub
in
jns
movs
outs
sbb
dec
or
or
pop
add
out
sahf
or
push
or
sbb
cmp
and
nop
adc
mov
mov
(bad)
xor
xchg
lods
sar
outs
add
iret
inc
xchg
xchg
nop
stos
jmp
test
adc
xchg
out
cdq
and
loopne
dec
(bad)
pop
xchg
pop
inc
loope
add
add
and
and
cdq
push
shl
jae
sbb
jmp
out
sub
adc
push
leave
and
add
cmp
enter
pop
push
or
(bad)
inc
in
pop
xchg
mov
add
and
push
lods
inc
jo
xchg
and
xor
cwde
cmp
(bad)
and
mov
sub
cmp
sub
pop
sub
rcl
adc
adc
rcr
stc
outs
adc
sub
or
push
aaa
jno
ret
xor
addr16
adc
sbb
jmp
inc
push
inc
inc
push
and
xchg
daa
es
push
or
(bad)
rol
or
pop
fiadd
mov
int
lods
or
clc
add
push
xchg
inc
jno
and
adc
mov
sub
imul
adc
mov
and
movs
push
cmp
call
mov
adc
sub
adc
inc
pop
loope
dec
sub
push
jne
push
jae
push
call
inc
sbb
cmp
dec
pop
jo
add
jns
push
adc
add
cmc
mov
scas
xchg
add
test
dec
adc
jns
pop
and
test
adc
sbb
push
stos
or
add
xor
jbe
sbb
add
inc
aas
stos
aaa
add
rol
and
adc
sub
or
push
rcl
mov
mov
sub
aaa
or
sbb
add
push
xor
leave
add
imul
push
imul
dec
in
fst
push
adc
adc
sbb
xor
iret
or
push
or
nop
dec
sahf
or
aaa
popa
mov
in
int3
or
jecxz
mov
lea
mov
pop
lock
mov
xor
inc
mov
xchg
ss
xchg
sbb
pop
les
(bad)
add
test
arpl
sbb
inc
inc
gs
sub
mov
cwde
xchg
out
add
push
fbld
mov
sub
rcr
inc
xchg
jae
or
inc
outs
jns
arpl
or
and
sbb
cs
sub
mov
mov
jge
or
outs
sbb
sbb
sbb
xor
cmc
mov
sub
loopne
or
adc
add
xor
push
adc
enter
and
mov
sbb
ds
add
mov
dec
movs
sub
rcl
and
test
and
push
and
and
mov
dec
mov
sbb
and
xor
or
nop
out
or
ja
ss
js
sahf
push
or
xlat
inc
push
pusha
in
adc
hlt
rol
adc
aaa
or
pusha
nop
movlps
imul
arpl
stos
and
pop
aam
les
xor
push
inc
adc
stos
pop
or
xor
push
and
ror
in
add
jmp
xor
cmp
add
push
rol
push
add
outs
or
or
or
sbb
jae
gs
add
add
dec
enter
adc
dec
(bad)
(bad)
mov
cmp
and
or
test
cwde
cwde
mov
icebp
sub
imul
push
sbb
sahf
mov
inc
add
pop
xchg
add
in
mov
mov
fcom
and
cmp
inc
(bad)
adc
push
adc
enter
and
mov
in
sub
xor
and
sub
mov
cwde
push
imul
sub
cwde
stos
inc
pop
add
movs
xchg
add
pop
or
dec
pop
and
pop
mov
std
add
dec
ret
xchg
mov
adc
push
enter
adc
stos
(bad)
sub
mov
stos
out
push
add
adc
pushf
cmp
inc
mov
add
xchg
jno
bound
mov
adc
lods
add
xor
iret
addr16
pop
sbb
inc
sub
dec
push
inc
add
iret
and
loopne
jg
add
dec
inc
add
pusha
adc
mov
mov
imul
and
push
shl
stos
and
int
pop
jnp
es
mov
and
jge
and
rol
aam
cmc
xor
rcr
adc
pusha
add
mov
or
ret
pop
cmp
jl
add
mov
xor
add
inc
rcl
mov
fadd
cmp
push
test
xchg
imul
sbb
(bad)
sahf
inc
(bad)
loopne
add
aas
and
jno
inc
call
push
or
push
retf
and
test
add
es
xor
iret
adc
mov
add
push
push
add
iret
sbb
xor
ins
cmp
in
iret
repz
add
and
push
adc
pop
cmp
je
add
enter
jge
adc
cmp
xor
mov
adc
push
push
sbb
or
push
adc
popa
pop
adc
fstp
or
add
stos
pop
dec
add
nop
dec
push
inc
xor
mov
iret
repz
sub
add
pusha
mov
xor
in
ins
retf
add
inc
push
push
inc
in
cmp
add
or
iret
repz
ret
stos
in
jnp
sbb
inc
xor
add
stos
inc
jo
mov
retf
add
mov
fsub
and
pusha
(bad)
test
and
pop
call
pop
es
bound
in
pop
ret
and
inc
iret
repz
or
js
xor
jae
aad
add
fldcw
cmp
push
sub
pushf
mov
sub
popf
sub
sbb
je
iret
repz
adc
int
es
jecxz
push
adc
and
lea
push
out
or
mov
out
rcl
push
add
adc
test
sbb
add
add
pop
inc
adc
mov
mov
or
add
ret
or
inc
xor
cmp
jmp
push
or
dec
data16
push
jns
inc
jp
pop
push
mov
xchg
mov
repnz
sahf
jae
or
adc
push
sub
xor
xchg
les
mov
daa
xchg
sub
mov
test
sub
and
or
mov
jns
mov
adc
test
pop
xor
jg
sahf
cs
adc
add
mov
mov
(bad)
daa
ins
xor
jmp
add
pop
repnz
sbb
or
and
add
sbb
add
mov
xor
movs
mov
pop
adc
sbb
mov
and
push
push
and
push
add
cmp
lea
sbb
sub
jne
ror
inc
pusha
pop
push
pop
test
add
das
dec
mov
push
inc
push
cs
in
dec
(bad)
in
ret
pusha
xchg
fsubr
arpl
adc
cmp
rcl
push
add
inc
or
retf
cdq
xor
dec
sub
pusha
test
addr16
adc
xor
adc
mov
vunpcklpd
push
cmp
in
add
xchg
add
pop
add
xor
or
pop
leave
mov
call
and
sbb
dec
dec
xor
or
test
mov
sbb
pop
cmp
pushf
wbinvd
mov
int
and
add
inc
sahf
add
sbb
inc
pop
jo
mov
cmp
xor
or
pop
mov
jmp
bound
jecxz
movs
and
push
add
pop
cmp
inc
pop
push
or
fld
lods
pop
mov
adc
popf
xchg
push
jo
arpl
add
xchg
jns
or
dec
mov
add
repz
or
pop
sbb
ret
and
xchg
add
push
or
jl
jo
xor
fisttp
push
xchg
mov
inc
push
stc
adc
or
dec
dec
dec
loopne
pop
sbb
movs
dec
mov
fdiv
mov
in
mov
inc
dec
push
enter
adc
(bad)
enter
push
loopne
mov
cmp
(bad)
out
mov
stos
or
jns
push
push
ror
mov
in
cs
sbb
es
stos
cmp
inc
xor
(bad)
bound
adc
mov
leave
pop
cdq
and
adc
dec
xchg
sub
or
xor
jns
and
xor
imul
cmp
pop
add
and
adc
(bad)
push
cdq
mov
mov
dec
dec
gs
inc
adc
xchg
dec
push
imul
sbb
adc
cmp
or
and
and
sub
repnz
add
mov
cmps
sub
mov
jae
les
add
pusha
inc
push
cdq
fst
rcr
imul
cs
or
and
adc
in
or
add
xor
and
sbb
xor
inc
cdq
call
cmp
test
ror
xchg
(bad)
loop
add
adc
inc
mov
xor
and
mov
dec
and
leave
test
ins
add
sbb
shr
add
xor
iret
data16
daa
add
or
mov
xchg
xor
stc
mov
mov
push
and
cmp
or
addr16
push
push
fiadd
or
jne
into
xor
xor
add
ds
pop
cmps
mov
dec
and
xor
dec
movs
push
nop
pop
jecxz
jns
test
inc
inc
mov
ds
leave
pop
adc
in
test
xchg
or
cmp
or
xor
(bad)
jne
cmp
je
pop
movs
call
icebp
push
ret
sub
inc
push
in
push
repnz
and
bound
pop
mov
je
stc
inc
in
adc
iret
xor
sub
addr16
jne
ret
stos
and
mov
test
or
ins
add
dec
or
pusha
imul
jns
push
sub
nop
dec
ror
push
adc
fs
and
inc
cs
adc
xor
mov
dec
pushf
test
mov
add
repz
loop
xor
sbb
push
movs
and
add
sub
and
add
or
jge
sub
repz
sbb
cmp
mov
sub
xor
and
add
pop
jle
addr16
pop
inc
mov
and
nop
add
movs
inc
sbb
dec
rol
test
xchg
mov
inc
mov
sub
push
test
mov
push
and
cmp
test
pushf
nop
adc
sub
mov
jae
sbb
and
xor
je
bound
mov
jnp
and
inc
sub
and
mov
adc
es
sahf
iret
dec
cmp
call
enter
imul
adc
sti
adc
pusha
call
int3
cwde
inc
test
sub
inc
or
out
pop
daa
cmp
repz
or
xchg
movs
adc
xor
mov
or
or
lea
adc
or
or
daa
push
mov
or
push
adc
adc
adc
nop
dec
xchg
jo
pop
adc
sbb
add
xor
pusha
inc
aas
sub
inc
adc
xor
or
and
les
mov
movs
add
sub
and
and
lock
adc
je
sbb
mov
sbb
add
inc
repnz
dec
add
adc
inc
sub
cmp
lods
test
xchg
push
xchg
stc
and
nop
or
add
push
xlat
push
iret
sub
xor
and
shl
dec
mov
and
or
or
jecxz
mov
push
xor
sahf
out
(bad)
jne
adc
pusha
inc
mov
bound
test
pop
ss
add
ins
xor
sbb
xchg
and
add
pusha
push
fiadd
push
pop
dec
jae
inc
and
push
adc
push
sub
leave
push
sbb
adc
push
adc
sbb
add
sub
daa
es
xchg
adc
rcl
jge
pop
sbb
jb
inc
fwait
and
call
push
jae
cmp
dec
sub
sub
sub
mov
and
cmc
cmp
push
or
push
cmp
dec
in
cwde
add
push
xor
and
adc
add
mov
cmp
mov
or
jns
sbb
and
or
sub
gs
dec
add
stc
es
add
ror
pop
push
adc
in
sub
adc
bound
or
push
sar
imul
out
out
cwde
adc
nop
fcomp
inc
mov
ja
sbb
sahf
sub
cwde
mov
dec
fwait
jecxz
dec
in
inc
dec
adc
dec
imul
xchg
mov
mov
in
mov
or
sbb
cwde
sbb
loopne
dec
and
movs
sbb
aas
inc
sahf
pop
loopne
dec
sub
sbb
mov
and
test
add
daa
dec
and
aas
sub
or
rcl
adc
add
mov
in
jns
or
call
test
call
pushf
cmp
inc
push
add
jns
shr
jl
xchg
leave
jecxz
loope
ret
je
push
cmp
stos
adc
mov
sub
or
add
add
movs
and
sub
and
xchg
mov
inc
push
inc
aad
push
dec
repz
bound
call
and
add
mov
pop
add
add
rcl
sbb
xchg
test
cmp
inc
sub
mov
iret
add
add
cmp
xchg
push
sbb
add
les
and
sub
xchg
and
das
rcr
sbb
aad
add
mov
dec
cmp
mov
sub
adc
nop
stos
cmp
or
cmp
mov
pop
daa
sub
pusha
stos
ret
cmp
or
add
es
jle
xchg
inc
dec
ror
adc
xor
movs
and
mov
lods
xor
(bad)
xor
xor
or
adc
cs
int3
and
sbb
rol
mov
sar
push
mov
push
ins
aas
jno
xor
sub
adc
aaa
mov
les
(bad)
adc
xchg
inc
pop
sbb
add
sub
add
mov
(bad)
xchg
and
mov
push
movs
pop
dec
cwde
inc
sahf
imul
sbb
adc
ja
daa
dec
mov
add
xor
push
stos
adc
or
sbb
pop
pop
sbb
push
out
test
cmps
ret
aam
mov
xchg
out
pusha
add
out
xor
and
add
mov
imul
movs
dec
mov
adc
xchg
test
aaa
add
mov
add
in
fimul
sbb
pop
dec
in
jo
mov
jne
or
add
das
cld
and
pop
ret
cmc
jbe
ins
dec
cmp
add
test
push
je
or
push
inc
les
iret
repz
xchg
dec
pop
or
sub
add
inc
sbb
out
inc
ret
ins
adc
adc
fisttp
cmp
addr16
leave
pop
sub
push
xor
add
xor
ror
repz
cld
dec
or
pusha
and
xor
mov
push
aad
jne
mov
or
jmp
push
test
div
std
push
or
push
pop
ins
jns
cmp
xor
sub
push
mov
pop
sbb
dec
mov
or
es
fwait
push
push
jb
dec
nop
adc
test
push
inc
inc
xchg
adc
add
cwde
cmp
add
and
mov
adc
xchg
xchg
xchg
add
and
sbb
push
dec
adc
in
iret
(bad)
out
dec
ss
dec
or
push
dec
adc
and
inc
dec
sbb
and
adc
jae
cmp
xor
jno
lea
pop
out
and
rcl
pusha
inc
sbb
dec
push
push
iret
inc
lea
ss
repnz
or
xchg
pop
scas
dec
xchg
leave
add
sahf
add
sub
inc
or
xor
or
inc
and
xchg
sbb
push
xor
adc
push
aad
inc
aaa
sbb
or
xor
jl
sub
fwait
xor
jmp
sbb
mov
add
cmp
dec
pop
xor
icebp
or
add
mov
jmp
sub
ins
loopne
cmp
push
mov
ss
and
cmp
push
bound
adc
sbb
ins
mov
and
push
adc
pop
pop
shr
sub
xor
enter
inc
add
jae
ret
test
sub
adc
rol
test
or
sub
or
push
call
nop
rcr
inc
inc
sbb
mov
push
sub
addr16
test
ds
xlat
pusha
mov
xor
leave
jae
adc
add
adc
test
xor
or
aas
call
daa
dec
inc
and
fnstenv
arpl
enter
dec
cmp
or
movs
adc
popa
push
push
(bad)
test
sbb
sub
jmp
or
add
xor
iret
pop
or
or
imul
sbb
ret
sub
arpl
lods
inc
add
ficom
test
mov
lea
or
adc
and
je
pop
add
inc
xchg
inc
or
pop
xchg
ret
sbb
sbb
fimul
cmp
retf
pop
add
cmps
xchg
mov
loopne
jns
add
rol
addr16
pop
ret
mul
dec
sbb
inc
jo
test
rcl
sbb
or
pop
(bad)
dec
or
jno
push
jno
aas
add
and
lods
xchg
or
fs
jns
repz
retf
movs
push
xchg
push
add
xchg
cmp
pusha
add
inc
popa
jne
je
mov
(bad)
fadd
or
iret
loop
add
jns
xchg
cmp
ret
inc
sub
sub
ja
mov
sbb
and
jg
or
add
inc
loope
ins
lods
ss
mov
out
inc
dec
xor
xchg
daa
mov
mov
adc
and
outs
ds
sbb
sub
xor
jnp
inc
add
movs
xchg
sbb
lea
imul
ret
push
pop
and
pop
and
sub
ds
mov
inc
inc
xlat
(bad)
adc
or
enter
js
stos
es
add
es
cwde
or
mov
or
xchg
push
inc
xor
adc
push
repnz
adc
or
add
push
cs
not
push
test
jecxz
push
xor
daa
iret
repz
je
and
fild
or
inc
ror
jno
rol
or
add
or
jmp
fimul
or
push
dec
xor
xor
adc
and
adc
das
test
pop
adc
cld
xor
push
inc
inc
adc
inc
inc
push
outs
xchg
ret
mov
push
jecxz
push
test
retf
sub
repz
ds
sub
scas
sbb
xchg
dec
adc
dec
sbb
sub
adc
cmp
pop
pop
pop
push
add
shl
mov
or
xchg
sbb
or
xor
sub
ret
(bad)
and
jns
or
inc
enter
push
push
mov
dec
call
cwde
movaps
sub
xlat
push
gs
repz
test
pop
repnz
or
adc
cwde
add
imul
or
aam
cmp
adc
xor
push
pusha
dec
or
ret
test
aad
rcl
pop
push
and
movs
sub
dec
add
pop
pop
add
or
add
adc
stos
je
mov
cmp
and
push
sub
push
add
push
push
sub
sbb
and
fist
or
sbb
stos
adc
movs
push
test
cmp
mov
nop
push
cmp
mov
add
and
pusha
inc
stos
popa
nop
jo
push
arpl
jns
lods
xor
or
adc
mov
rcpps
imul
add
in
mov
push
jnp
sub
iret
push
jp
or
and
adc
cmp
imul
and
pop
jp
fsub
sbb
dec
sbb
nop
jnp
aam
dec
push
inc
inc
inc
adc
aam
std
cmp
pop
ss
sub
adc
xchg
clts
ret
es
cmp
adc
jns
iret
stc
add
jge
xor
push
nop
and
mov
lea
mov
inc
push
retf
movs
or
addr16
inc
shl
xchg
xor
inc
add
jge
mov
lds
mov
xor
popf
ins
sar
out
adc
mov
push
sub
das
arpl
and
inc
sub
repnz
pop
(bad)
popa
cmp
neg
pop
cmp
mov
jmp
cmp
repz
repnz
or
adc
popa
pusha
les
and
xchg
cmp
pop
pop
sub
test
pop
lsl
movs
push
add
aam
dec
add
outs
mov
dec
in
or
mov
or
in
mov
jmp
aas
and
aaa
mov
cmps
mov
xchg
mov
frstor
popa
mov
jmp
xor
jmp
mov
jmp
ins
sub
and
or
inc
clc
int
add
pop
enter
aad
fisub
cmp
mov
call
add
xchg
jl
mov
mov
or
inc
add
add
shl
mov
mov
push
cwde
pushw
out
ins
fstp
push
mov
sub
in
jnp
int
fstp
sub
fdivr
push
call
adc
cmp
inc
add
push
adc
push
jns
dec
mov
pop
pushf
test
js
sar
int
mov
pop
enter
in
cmps
stc
ficomp
scas
sbb
(bad)
nop
jns
iret
aas
mov
mov
ds
(bad)
in
dec
mov
int
repz
jne
mov
(bad)
shr
leave
push
jo
inc
add
dec
add
pop
pop
shr
push
es
push
cld
ret
int
stc
xor
hlt
into
les
imul
push
data16
fs
data16
test
push
js
mov
push
push
out
ins
(bad)
push
hlt
push
push
mov
out
mov
in
movs
mov
je
and
lods
imul
push
mov
data16
or
push
mov
fistp
clc
nop
jbe
and
(bad)
fdivr
push
cmp
ss
(bad)
sub
mov
add
xor
(bad)
inc
adc
call
xor
int
inc
adc
fcom
mov
repz
data16
gs
fsubr
cmp
jo
les
xchg
push
test
scas
jge
pushf
dec
in
sbb
movs
push
and
lock
sti
outs
mov
push
sub
ja
mov
dec
repz
imul
pop
ss
sub
push
cld
int
fsubp
cld
int3
pop
dec
pusha
push
in
mov
imul
test
mov
sbb
pop
ja
test
xchg
retf
push
xchg
and
call
and
cld
mov
jo
mov
push
cmp
movs
push
mov
out
add
and
cmp
push
loopne
(bad)
fdivp
es
cmps
push
sbb
push
call
push
and
outs
push
outs
push
fcom
nop
je
inc
in
push
dec
push
mov
xor
cwde
adc
pop
lds
push
nop
dec
jbe
push
mov
push
out
sahf
out
jae
test
jo
mov
ss
sub
js
dec
repz
mov
and
nop
push
int3
sub
daa
mov
sub
xor
push
push
fsubr
repz
push
sub
out
jl
lods
cmp
jp
cld
inc
sti
mov
push
or
add
jns
mov
jl
mov
push
cmp
cmps
jge
dec
test
inc
outs
push
sbb
mov
neg
jnp
aam
push
pusha
ins
xchg
lods
cs
fwait
dec
repz
shl
mov
imul
movs
retf
push
xchg
sub
cmp
test
call
neg
mov
push
hlt
pop
sub
push
mov
sar
xor
push
xchg
xchg
in
dec
(bad)
dec
(bad)
mov
imul
mov
es
jle
inc
xor
sub
dec
xchg
pop
sahf
cmps
cmp
push
cs
pop
addr16
mov
int3
push
lods
jbe
push
lock
cmps
stc
cmp
ss
push
mov
fcom
fisttp
sahf
push
rcr
fwait
je
pop
imul
pop
dec
inc
pop
push
int3
es
sub
je
sar
push
jo
push
addr16
dec
mov
push
outs
push
push
shr
and
jl
dec
into
push
mov
imul
nop
pop
pusha
int
(bad)
sbb
data16
push
jl
dec
push
enter
out
imul
lods
ss
imul
repz
jns
out
cmp
mov
sahf
loopne
lahf
(bad)
shl
mov
mov
push
into
push
clc
call
pusha
mov
pop
ds
jns
pushf
in
test
repz
push
cmp
and
push
sahf
or
push
mov
xor
sbb
out
push
enter
xor
cmp
in
cmp
and
cmp
es
je
add
int
cdq
out
push
lods
push
ss
sbb
imul
lea
je
repz
out
cmp
inc
test
js
cmp
ror
cld
mov
jge
dec
push
mov
addr16
cmp
pop
sub
mov
imul
sbb
stc
xor
mov
aam
movs
repz
inc
jmp
aas
int
int3
cmc
xchg
stc
dec
sub
push
dec
mov
mov
(bad)
add
(bad)
push
loopne
lea
jl
in
jge
dec
or
pushf
mov
js
iret
jle
out
in
add
push
inc
push
adc
dec
repz
hlt
data16
jecxz
pop
(bad)
jns
out
and
and
data16
push
js
or
test
sahf
neg
push
inc
adc
in
call
push
loopne
push
movs
je
cmp
(bad)
jl
cmps
mov
cmp
mov
stc
sahf
idiv
rcl
and
jl
repz
aaa
dec
push
dec
cmp
in
inc
gs
mov
push
sbb
popa
ss
popa
pop
(bad)
fcmovnu
out
ds
mov
es
sbb
pop
fsubrp
push
cwde
aaa
es
jns
push
inc
fmul
loopne
mov
jns
push
test
sbb
inc
cmp
les
int
repz
cmps
mov
sub
lods
xchg
sub
adc
dec
pop
shl
add
push
int3
push
cmp
ins
pop
sahf
int
jns
in
push
mov
mov
push
ins
fld
loope
loopne
dec
push
pushf
inc
push
inc
or
ss
lods
mov
pusha
call
clc
add
or
out
jl
sbb
or
not
ins
ss
js
dec
pop
cld
popa
data16
fcmovbe
jle
or
bound
push
push
in
shr
push
add
ror
sbb
fsubr
jge
test
push
sbb
ins
shr
dec
jnp
not
test
dec
bound
adc
ins
lahf
out
cmc
mov
es
stc
add
arpl
int
dec
push
movs
addr16
call
cmps
dec
hlt
scas
ss
cmp
aas
int
sahf
or
ss
inc
mov
imul
push
aam
movs
push
or
push
fcom
adc
xor
jo
mov
pusha
adc
dec
push
dec
jg
and
pop
shl
lock
push
and
sbb
fadd
(bad)
adc
scas
jns
mov
pop
pop
add
out
cmp
or
int
call
cmps
mov
pop
loope
adc
adc
popf
int
add
jne
std
aaa
(bad)
jge
ds
cmp
inc
cmp
inc
pop
mov
fsub
(bad)
mov
jno
cmp
jne
mov
xor
mov
mov
pop
stc
ret
xchg
add
add
adc
loop
xor
sub
sub
add
cpuid
mov
mov
mov
inc
cld
lods
adc
rol
mov
add
clc
push
(bad)
push
mov
adc
ja
shl
jge
fmul
fcom
call
dec
xor
or
and
nop
retf
in
add
sbb
or
sbb
inc
mov
movd
adc
push
push
adc
push
sbb
iret
xchg
cmps
hlt
push
or
mov
mov
dec
jmp
dec
sbb
cmp
shl
xor
bound
pop
or
sar
fsubr
inc
mov
es
cmps
sbb
fbstp
lahf
aam
mov
add
(bad)
sub
lea
outs
or
pop
and
fcom
push
push
retf
and
jns
sbb
dec
xor
aas
rdpmc
mov
mov
inc
cwde
ret
repz
inc
mov
sbb
aaa
push
mov
ja
daa
sub
ds
sti
push
ins
dec
and
arpl
fwait
ds
jmp
in
pop
pop
ror
pop
clc
pop
cmp
pop
push
add
ja
dec
mov
pop
(bad)
outs
dec
mul
add
jb
cmp
and
xor
or
and
xor
mov
inc
add
dec
pop
add
add
fwait
in
mov
pop
add
and
sub
lods
sub
(bad)
(bad)
aas
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
pop
push
mov
lods
ins
or
popf
and
popa
je
xor
test
xor
lahf
imul
pop
add
push
push
sub
sbb
fiadd
lahf
inc
pop
mov
mov
or
xchg
mov
sar
call
sar
xor
push
inc
jbe
imul
cmp
or
aas
pop
std
inc
adc
dec
xor
xchg
iret
repz
dec
inc
push
dec
push
pop
pusha
push
jo
or
cwde
mov
repz
ror
fsub
call
lock
add
out
sbb
sub
cmp
jns
out
dec
push
pop
pusha
leave
leave
in
add
add
add
repnz
leave
leave
fs
xchg
inc
xor
in
je
sbb
xor
dec
inc
into
sahf
push
fwait
pop
or
bound
mov
stc
enter
sahf
rcr
and
(bad)
cmp
lock
cmps
out
in
ret
inc
mov
mul
sbb
dec
dec
ret
je
aas
pop
mov
add
add
stos
in
or
out
or
add
adc
mov
push
stos
pop
add
pop
jg
cmc
ds
in
or
push
add
adc
fstp
add
pop
add
add
xor
pop
jg
or
cs
push
or
add
xor
vcmpneq_ussd
add
out
out
gs
add
add
add
add
add
fimul
add
pop
add
iret
sub
add
or
sub
pop
sbb
mov
pop
loopne
add
call
setl
sahf
mov
lock
adc
xor
pop
repz
repz
loop
cmp
mov
add
cmp
xchg
mov
and
pusha
fidiv
mov
xor
adc
push
push
inc
xor
mov
lock
sub
js
outs
or
or
add
or
mov
ret
jno
jae
fdivr
icebp
cmp
(bad)
sub
pop
mulps
inc
sub
mov
fbstp
inc
xchg
or
inc
cld
xchg
inc
(bad)
cmp
repz
push
adc
sub
inc
repz
repz
pop
push
cmp
mov
mov
pop
mov
dec
push
pusha
repz
repz
test
int3
mov
call
push
cmp
cmp
repz
pusha
jl
movs
cmps
stc
cmp
rcl
add
sahf
and
inc
push
ins
cmp
jns
test
aam
repz
repz
iret
repz
ins
test
out
cmp
lock
jns
pop
je
mov
mov
fdiv
add
(bad)
jns
out
push
and
dec
fs
jns
out
test
pop
mov
mov
sahf
out
mov
xor
out
sahf
out
pushf
test
ror
sar
hlt
or
iret
repz
ins
test
repz
mov
out
inc
push
ins
mov
mov
loopne
adc
and
push
ins
xor
iret
repz
mov
loopne
out
sahf
out
mov
sahf
out
sahf
ins
sbb
jnp
push
adc
out
sahf
pop
jo
pushf
mov
rol
jns
in
clc
push
adc
repz
and
jo
cwde
cmp
rcl
cld
iret
repz
push
cmp
cmp
repz
mov
sahf
out
lock
jns
out
ins
test
sahf
rcr
cld
adc
sub
repz
dec
pusha
js
in
cmp
repz
mov
repz
mov
jl
call
add
sbb
out
sub
ins
sbb
fsubr
or
and
repz
cmp
js
movs
ds
repz
int3
loopne
or
jns
out
and
cmp
pop
out
sahf
out
test
sahf
aam
hlt
or
sbb
cmp
repz
pop
ins
test
mov
fsubr
les
cmp
repz
lds
xor
pop
ins
repz
repz
movs
mov
iret
call
cmp
out
sahf
dec
adc
aam
add
and
repz
repz
fs
mov
mov
in
adc
sahf
out
sahf
sub
push
out
test
shl
lock
repz
sbb
dec
pop
iret
repz
je
pushf
lods
enter
stc
cmp
or
and
push
jns
out
fs
lods
rcl
sahf
out
loopne
or
and
repz
xor
pusha
je
mov
mov
int3
jns
out
sub
push
push
out
lods
enter
repz
or
sbb
cmp
iret
repz
mov
repz
or
and
out
sahf
out
push
repz
enter
iret
and
iret
repz
pusha
je
pushf
sti
cmp
repz
aam
hlt
iret
data16
repz
rol
xor
repz
repz
sti
cmp
fsubr
cld
adc
outs
push
cmp
cmp
repz
pusha
je
nop
iret
repz
movs
mov
sahf
out
ds
sbb
cmp
jns
out
ins
test
out
in
or
sbb
repz
sub
push
pusha
je
cmp
repz
test
int3
in
sahf
out
cld
adc
and
dec
out
sahf
out
je
xchg
lods
popf
idiv
rcl
hlt
aam
aad
jns
out
sub
fs
out
sahf
mov
cmp
repz
or
and
dec
repz
repz
jo
xchg
movs
out
cmp
mov
xlat
sahf
out
sahf
sbb
cmp
fs
sahf
out
test
out
adc
adc
sub
jns
out
pop
push
jns
cwde
test
enter
dec
repz
or
sbb
xor
cmp
repz
pop
push
cmp
cwde
test
(bad)
fsubr
repz
(bad)
push
xor
repz
dec
pusha
jo
xchg
movs
cmp
repz
rcl
hlt
jns
cmps
stc
add
adc
xor
out
sahf
out
push
out
sahf
test
enter
fdivr
repz
sub
pop
push
js
movs
mov
mov
call
push
sub
cmp
repz
test
repz
cwde
test
shl
hlt
sahf
out
ds
sbb
dec
pusha
jns
out
js
test
fdiv
cmp
out
or
and
push
iret
repz
push
int3
sahf
out
cmp
hlt
or
sbb
jns
out
inc
pop
ins
adc
fsubr
add
iret
repz
adc
xor
cmp
repz
test
repz
lock
sbb
out
sahf
out
pop
ins
jl
int
jns
lods
rcl
add
adc
iret
repz
inc
pop
jo
repz
repz
mov
loopne
out
sahf
out
in
xor
pop
sahf
out
sahf
je
pushf
lods
enter
repz
add
sbb
inc
repz
repz
jl
movs
mov
sahf
mov
shl
in
in
push
sahf
out
sahf
sub
push
fs
jns
out
lods
mov
cmp
repz
sub
dec
pop
iret
repz
ins
adc
repz
clc
add
adc
jns
out
xor
test
jns
out
lods
rcl
jmp
and
je
cwde
test
iret
repz
shl
clc
adc
jns
out
sub
pop
jo
idiv
out
mov
push
jns
out
jmp
inc
pop
jo
out
sahf
out
mov
aam
iret
repz
add
sbb
inc
fs
iret
repz
pushf
mov
aam
call
and
out
sahf
out
pusha
je
pushf
jns
jge
mov
add
dec
push
dec
push
mov
repz
and
push
ins
mov
enter
xor
jl
out
sub
iret
rcr
pop
jo
out
cmp
test
loopne
adc
sahf
out
sahf
and
push
pusha
js
jns
out
pushf
mov
loopne
repz
repz
sbb
cmp
cmp
ins
nop
test
aam
sahf
out
ds
xor
ja
out
test
in
cmc
inc
push
sahf
out
sahf
and
push
cmp
jnp
aas
test
dec
ins
iret
repz
adc
jns
imul
inc
push
ins
cmp
jns
test
shl
sahf
out
out
or
cmps
push
inc
push
push
sbb
jns
add
mov
sub
dec
pop
jns
out
ins
adc
out
fdiv
add
outs
push
sub
out
inc
dec
pop
ins
jl
jns
out
lods
(bad)
fdiv
iret
repz
or
and
push
fs
add
lahf
dec
add
mov
add
les
mov
sub
sub
mov
test
add
xor
push
add
or
jg
outs
add
inc
xor
(bad)
ror
sub
add
addr16
add
mov
add
(bad)
xchg
add
mov
add
mov
mov
add
add
mov
in
adc
and
int
xor
out
dec
add
mov
xchg
inc
cmp
add
inc
dec
(bad)
(bad)
nop
xchg
daa
daa
enter
jbe
movs
repnz
add
push
add
in
in
push
pop
pop
pop
jb
sbb
add
or
ins
jb
dec
add
data16
xchg
xchg
(bad)
mov
aaa
add
enter
push
adc
push
pop
add
jb
mov
jbe
daa
xchg
js
jp
daa
daa
daa
jnp
jge
outs
jo
mov
loopne
loope
push
adc
je
std
mov
fcmovnu
lods
cmp
cwde
(bad)
movs
add
les
outs
dec
pop
add
imul
add
push
add
adc
adc
adc
call
daa
pop
daa
sbb
sbb
and
daa
sub
daa
bound
and
dec
and
(bad)
push
dec
dec
and
dec
mov
adc
dec
popa
push
enter
and
jno
(bad)
loopne
clc
(bad)
dec
stos
fisubr
fisubr
fidiv
fisubr
add
cmp
idiv
inc
xor
sub
retf
fbld
sbb
retf
repnz
sti
(bad)
repz
and
(bad)
test
stc
mov
push
jle
es
pop
and
push
call
cmp
add
into
push
in
(bad)
call
add
add
add
add
add
add
add
add
add
sar
(bad)
(bad)
inc
loope
icebp
jge
mov
retf
iret
adc
dec
mov
and
mov
jbe
mov
repnz
push
adc
fidivr
xchg
mov
out
rcl
(bad)
(bad)
jmp
mov
pop
rcl
cdq
jno
ror
jbe
outs
(bad)
sbb
cld
(bad)
(bad)
jmp
cs
jb
xor
enter
pop
outs
imul
in
jecxz
ret
and
out
movs
add
retf
cmps
or
ins
and
or
aas
mov
add
inc
adc
xchg
sub
ret
push
pop
enter
aam
lods
iret
repz
push
(bad)
rcl
call
ds
or
and
jns
out
cmp
push
pusha
ins
fnstsw
out
test
out
mov
scas
mov
shl
jns
jns
rol
sbb
outs
sbb
pop
push
jb
pusha
inc
ins
aas
js
jnp
imul
nop
push
pushf
push
test
les
in
pop
shr
loopne
sar
adc
movs
fcomp
and
pop
sub
mov
aas
cmp
push
fs
add
jns
jo
add
jg
gs
dec
outs
cmps
test
les
lds
jbe
cmp
iret
repz
push
test
cmp
shl
lock
jns
out
adc
xor
out
sahf
out
ins
jl
pushf
outs
idiv
lods
mov
in
lock
out
jge
add
iret
(bad)
push
sbb
dec
sub
outs
fwait
mov
dec
dec
lfs
repz
or
mov
fucomi
in
les
push
aam
mov
mov
movups
paddb
fmulp
sbb
and
xor
inc
xlat
lahf
dec
xlat
sbb
pop
es
ficomp
cmp
push
mov
pushf
ds
mov
mov
lahf
fcompp
fcmovne
fistp
dec
or
lahf
adc
aas
in
jnp
mov
(bad)
sub
cmp
dec
fmul
jns
pop
fcom
pusha
fsubr
in
jnp
out
lock
daa
iret
repz
fcomp
ds
(bad)
or
out
xchg
add
push
xor
inc
popf
loope
mov
push
rcl
scas
mov
cwde
fstp
movs
(bad)
mov
mov
ror
pavgb
mov
xor
clc
fxch
add
adc
jns
ja
and
pop
xor
aas
shrd
pop
fs
dec
mov
iret
repz
in
cld
or
sbb
jbe
jns
inc
add
stos
mov
dec
neg
pop
push
pusha
push
cmp
repz
ins
je
setg
mov
in
sub
inc
sub
pusha
into
stos
xchg
push
clc
out
xchg
int
ss
je
jl
mov
sahf
mov
sub
add
rcl
mov
ins
jl
xchg
xchg
xchg
cwde
lods
rcr
data16
in
adc
add
or
sbb
dec
(bad)
cmp
add
add
dec
mov
jb
jb
pusha
je
mov
mov
ror
push
mov
repnz
call
clc
or
mov
leave
leave
leave
dec
sbb
inc
pop
iret
leave
leave
leave
jo
nop
mov
call
cmp
test
lock
mov
fmul
and
dec
pop
pushf
pushf
pushf
pushf
je
pushf
mov
stc
pushf
pushf
mov
mov
cwde
int
daa
add
rcl
mov
daa
daa
daa
xor
dec
xor
out
ins
and
daa
jmp
jecxz
mov
mov
aam
mov
lock
sbb
in
stc
pushf
inc
adc
int
in
jo
nop
push
mov
mov
daa
enter
out
push
loopne
dec
jno
dec
xor
mov
and
add
fimul
mov
inc
dec
dec
dec
dec
pop
jo
xchg
dec
dec
dec
dec
movs
mov
sar
clc
or
adc
add
pop
add
into
push
(bad)
xchg
dec
cmp
daa
pop
mov
ins
mov
cmp
cmp
repz
in
cld
adc
xchg
xchg
data16
sub
outs
bsf
out
pop
das
push
les
push
nop
xchg
cmp
and
xor
outs
mov
add
push
and
sahf
neg
fidiv
inc
subps
jl
sbb
push
jne
imul
fnstenv
dec
lock
aaa
xchg
iret
jae
and
jge
push
jl
cmp
cmp
js
push
repnz
movs
add
sti
imul
adc
inc
dec
cmp
sar
(bad)
mov
fs
push
test
fidivr
fist
push
cmp
ror
jns
test
neg
dec
cmp
stc
(bad)
xor
sbb
add
cmp
test
mov
push
jp
test
and
xor
lahf
push
pop
add
pop
daa
hlt
cmp
xor
scas
mov
push
stos
inc
scas
ins
cmp
or
push
stos
fiadd
sbb
mov
scas
inc
scas
(bad)
xor
mov
inc
push
mov
scas
dec
scas
cli
pop
push
scas
adc
dec
scas
dec
scas
adc
push
lods
daa
mov
scas
dec
test
fmul
scas
mov
lahf
xchg
xchg
cmp
sub
cs
repz
cmp
pusha
sub
iret
mov
daa
movs
or
in
in
or
xor
and
inc
pushf
pushf
fmul
xchg
pop
pshufw
movs
mov
das
mov
push
or
sbb
out
stc
xor
xor
add
cmps
stc
push
adc
ins
mov
or
xchg
xchg
xchg
xchg
test
aam
adc
mov
nop/reserved
daa
daa
daa
sub
dec
mov
dec
repz
fmulp
leave
mov
mov
fmul
in
add
out
clc
mov
pop
add
and
mov
xchg
xchg
xchg
xchg
xor
pop
je
lahf
xchg
xchg
mov
leave
imul
or
pop
and
movs
into
leave
je
sub
shld
sahf
hlt
mov
inc
call
in
xor
js
dec
dec
dec
xchg
mov
lahf
sbb
cmp
loopne
clc
adc
cmp
cmp
xor
ins
jne
cmp
adc
repz
add
xchg
xchg
daa
mov
lock
adc
xchg
xchg
xchg
sub
push
je
adc
cwde
or
stc
push
jg
clc
mov
daa
daa
daa
fisttp
inc
jb
or
adc
and
pusha
push
pop
ins
pop
int3
pusha
repnz
in
and
ds
aam
loopne
repz
call
add
sbb
jnp
jmp
mov
xchg
push
mov
jns
aam
dec
and
xor
and
(bad)
pop
ins
add
jne
das
add
push
pushf
add
and
cmps
cmp
iret
imul
push
int
inc
cmps
dec
push
push
pop
mov
mov
setle
or
add
xor
es
fwait
idiv
adc
pop
or
add
dec
inc
cmp
dec
add
mov
es
lahf
and
add
add
lahf
dec
sahf
cmps
sub
adc
or
mov
inc
fbstp
add
dec
inc
or
xchg
aaa
and
dec
sahf
or
push
es
lahf
pop
es
sbb
iret
mov
and
push
jmp
daa
add
push
loope
daa
js
es
sub
dec
push
adc
sahf
or
dec
nop
xor
cwde
cmp
jns
lock
cmp
dec
push
pop
pushf
cmp
test
add
cmp
mov
movs
repnz
ja
dec
ds
mov
mov
inc
aaa
rol
inc
aaa
ins
jns
cmps
fadd
inc
daa
loopne
test
daa
call
jns
lock
or
sbb
cmp
inc
pop
mov
es
inc
or
or
leave
in
jae
or
daa
adc
ja
jns
sub
sbb
dec
and
ins
dec
sub
shr
outs
xor
dec
inc
lahf
cmp
jmp
popf
sbb
inc
dec
pop
and
push
push
push
es
pop
repnz
sbb
es
(bad)
pusha
es
push
pop
mov
es
(bad)
adc
jo
jmp
daa
js
cs
out
add
dec
shl
pop
aas
nop
es
rcl
aas
cdq
mov
pop
test
cmps
loop
data16
outs
mov
xchg
cmp
(bad)
fistp
dec
imul
ds
xchg
jg
enter
xchg
cmp
shl
jo
repz
fdiv
loopne
scas
pop
bnd
or
stos
mov
lahf
das
int
inc
outs
clc
es
daa
add
jnp
(bad)
dec
sub
or
(bad)
mov
adc
idiv
jbe
add
and
mov
or
out
mov
test
dec
daa
test
inc
fidivr
out
test
push
iret
mov
out
test
dec
xchg
push
jbe
out
pop
mov
repz
add
es
mov
mov
jns
lods
dec
push
and
jbe
add
mov
add
mov
mov
nop
jbe
add
add
retf
rol
xchg
test
rcl
mov
or
dec
pop
sahf
mov
cmp
enter
xor
mov
fdivr
jns
xlat
fidivr
iret
mov
cmp
jecxz
lock
mov
es
add
es
or
test
lock
adc
sbb
icebp
and
pushf
or
sub
imul
or
jnp
inc
popf
retf
xchg
xor
test
(bad)
jl
push
les
push
dec
add
push
push
scas
jge
into
repz
cld
mov
adc
iret
repz
pop
push
outs
push
cmp
jo
pop
pop
or
out
out
ret
pop
cs
push
mov
xor
test
pop
mov
inc
push
push
push
int3
pop
pop
out
push
fsub
jns
out
push
jg
cmp
pop
call
push
mov
push
and
out
pop
push
cmp
or
push
dec
push
or
ror
pop
das
or
ins
das
push
call
sub
push
xchg
das
push
jmp
test
push
mov
cmp
aam
sub
das
or
(bad)
das
cmc
call
das
push
push
clc
das
push
inc
or
movhps
adc
xchg
lahf
push
and
popf
out
push
mov
out
push
inc
dec
pop
adc
out
jnp
push
lahf
push
jo
push
inc
mov
sub
rol
push
mov
adc
iret
jae
push
jmp
int
jns
call
and
add
cmp
adc
and
iret
repz
aaa
scas
mov
push
out
push
inc
push
mov
cmp
sub
inc
push
nop
push
push
jg
repz
mov
loopne
outs
add
les
push
xlat
cmp
push
and
out
fidivr
add
jbe
mov
jns
jmp
(bad)
sbb
cmp
push
push
dec
cmp
iret
mov
inc
sbb
push
mov
push
cwde
(bad)
push
inc
rol
mov
lock
pop
push
adc
inc
xchg
repz
push
sub
jo
dec
mov
cmp
shl
fisub
and
push
mov
cmp
(bad)
aam
(bad)
in
inc
and
ja
ja
push
cld
pop
and
sbb
push
and
cmp
sbb
inc
pop
pop
outs
and
aam
mov
inc
cmp
jnp
and
sbb
mov
push
push
call
pop
daa
fiadd
or
jns
out
lock
dec
or
push
mov
push
cmp
das
sub
push
and
cmp
fcom
sub
add
data16
test
pusha
jg
aaa
daa
add
add
push
sub
xor
out
sahf
out
push
fbld
out
mov
push
fadd
inc
cld
iret
sar
push
sbb
push
lock
out
popf
xchg
push
inc
lahf
dec
mov
repz
outs
cwde
inc
xor
push
xor
rcl
ja
out
hlt
shr
cwde
(bad)
push
ficom
jne
jmp
inc
dec
xlat
mov
push
je
xor
xlat
mov
nop
ror
push
mov
in
push
call
cld
nop
out
call
sar
sub
jnp
int
movs
aas
cmps
cmp
lahf
push
inc
lea
pusha
inc
cmps
inc
or
sbb
push
jo
and
out
or
mov
push
xor
iret
repz
les
fistp
call
call
push
sub
xor
pusha
jnp
out
jg
sbb
pop
out
cmp
push
test
jg
xchg
inc
fidivr
fnstsw
fild
mov
stos
push
les
shr
jns
loopne
lods
push
scas
xlat
clc
imul
inc
adc
fmul
scas
jnp
or
push
dec
das
fcom
fucomip
pop
out
xor
loopne
mov
cli
iret
test
int3
cs
sti
std
sti
or
xor
(bad)
mov
sbb
adc
xor
das
dec
cmp
repz
dec
ins
push
outs
loope
iret
repz
test
cmp
cmp
push
lock
jns
test
cmp
aas
push
inc
push
inc
cmp
repz
pop
nop
iret
js
je
repz
nop
ja
lahf
push
xchg
into
repz
mov
fisubr
push
enter
fcomp
jo
out
lahf
push
in
pop
push
fild
iret
repz
push
push
jg
push
(bad)
cmp
scas
xor
or
dec
xor
push
inc
sahf
add
pusha
jnp
neg
push
and
nop
das
jnp
imul
push
pusha
jg
das
out
cmp
push
ror
inc
mov
jg
push
lahf
or
and
cs
push
xor
adc
push
push
push
int
cmp
das
and
and
ja
and
mov
xor
das
xor
dec
jnp
pop
push
mov
neg
rol
or
sub
sub
rol
push
inc
pop
shl
fimul
ins
push
pusha
jg
pop
aam
ja
not
push
lods
lock
push
fcom
xor
mov
mov
test
pop
repnz
dec
pop
mov
cmc
je
out
push
movs
mov
cmp
das
imul
push
fcomp
add
cmps
push
clc
pop
cmps
aas
mov
neg
push
pop
mov
imul
out
xor
out
push
mov
cmp
in
adc
adc
out
push
cmp
push
add
or
push
and
out
mov
lods
mov
rcl
stos
push
dec
repz
(bad)
push
fs
das
(bad)
int3
push
fmul
int3
lods
iret
loopne
stos
out
push
cmp
cmp
lods
(bad)
fdiv
jl
cmps
stc
adc
jmp
ror
jge
addr16
cmp
push
push
pop
ins
scas
cmp
cmp
int3
ss
call
cld
clc
mov
mov
or
sbb
jl
mov
mov
push
sahf
xchg
outs
neg
les
mov
dec
fwait
cmp
add
and
pop
cmps
leave
dec
dec
mov
mov
mov
mov
and
cmp
mov
mov
mov
mov
ins
push
je
or
mov
add
rol
mov
hlt
(bad)
jns
sbb
cmp
int3
and
cmp
push
in
add
das
into
mov
push
pop
shl
rcl
ins
cmp
repz
xor
dec
dec
addr16
cmps
add
mov
es
mov
jns
cdq
fidivr
and
lidtd
push
pop
push
ins
adc
int3
loopne
or
repz
rcr
inc
push
push
js
cwde
movs
mov
call
or
sbb
out
sub
dec
pop
fs
sahf
out
test
sahf
(bad)
shl
lock
adc
iret
repz
cmp
pop
ins
repz
repz
pushf
mov
cmp
mov
outs
or
sub
cmp
repz
fs
mov
mov
enter
outs
or
cmp
cmp
and
dec
pop
iret
repz
push
mov
rcr
lock
or
jns
out
sbb
dec
pusha
out
sahf
out
adc
(bad)
aam
in
hlt
or
cmp
inc
push
fs
cmp
xrelease
ds
in
clc
or
and
sahf
out
sahf
inc
push
pusha
ins
jl
jns
out
movs
mov
cmp
out
adc
and
inc
iret
repz
push
fs
pushf
mov
iret
repz
rcr
lock
dec
cld
xor
adc
outs
inc
sbb
mov
dec
push
mov
push
or
mov
and
push
and
and
and
and
sub
(bad)
gs
cmp
and
sub
sub
and
(bad)
(bad)
(bad)
push
and
cmp
and
dec
and
dec
and
call
sub
pop
and
pop
and
bound
push
jmp
push
imul
and
and
sbb
je
sub
cs
xor
jp
das
clc
ss
and
inc
and
dec
inc
movs
(bad)
pushf
push
and
pop
and
(bad)
mov
daa
sub
sub
aaa
cmp
cmp
inc
dec
dec
dec
dec
push
aas
push
jae
push
push
push
pop
pop
pop
mov
gs
repnz
ins
outs
jno
jne
jns
jge
push
mov
push
and
and
mov
sub
inc
cmp
xor
xor
xor
dec
add
aad
fcomip
add
add
fiadd
cmp
sbb
aad
push
rol
retf
add
add
xchg
test
adc
mov
adc
push
push
sbb
add
pop
add
dec
add
pop
add
mov
pop
add
popa
add
arpl
addr16
imul
imul
sub
add
xor
js
(bad)
jbe
ja
fdivp
mov
add
jp
jnp
add
jle
add
(bad)
(bad)
(bad)
inc
and
and
and
add
add
add
add
add
sub
add
add
add
(bad)
(bad)
(bad)
inc
xor
xor
xor
add
add
add
add
add
cmp
add
inc
add
(bad)
(bad)
inc
inc
add
add
inc
add
dec
add
dec
add
add
dec
add
push
add
(bad)
(bad)
inc
push
add
add
push
add
pop
add
pop
add
add
pop
add
popa
add
(bad)
(bad)
inc
arpl
add
add
push
add
ins
add
outs
add
jo
jno
jb
(bad)
(bad)
inc
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
bound
push
or
aam
in
sahf
out
hlt
add
and
cmp
push
sbb
sub
add
or
lock
pusha
loopne
fcomp
pop
add
add
add
inc
add
mov
mov
and
add
pop
add
loopne
sub
add
xor
into
or
add
mov
je
add
inc
inc
push
ror
sub
mov
mov
push
pop
add
add
sub
fmul
add
sar
mov
pusha
and
sbb
add
dec
add
ret
daa
add
push
cmp
ror
xor
pusha
pusha
fidiv
add
mov
push
sldt
inc
es
add
rol
call
add
lock
adc
add
in
push
push
add
mov
add
add
add
xor
rcr
sbb
movs
jbe
push
add
add
pop
add
add
sar
add
sbb
xor
mov
or
fiadd
outs
fild
xor
mov
loopne
hlt
pop
mov
sar
and
dec
dec
push
push
push
add
push
and
and
pop
je
dec
add
sub
sahf
out
in
push
outs
pop
(bad)
(bad)
out
aas
cmp
pop
jnp
aas
arpl
adc
(bad)
popw
daa
and
cmp
into
rcr
xor
ja
mov
inc
rol
out
and
pop
ficomp
and
sbb
fnsave
lea
aas
inc
cmp
ficomp
xchg
cmps
outs
dec
outs
add
sub
inc
dec
push
or
test
nop
or
jns
and
cmp
sbb
inc
cmp
cmp
arpl
addr16
lock
imul
jo
jb
jae
jne
ja
jns
xchg
test
push
xchg
pop
adc
xchg
push
dec
inc
pop
fldcw
mov
mov
mov
dec
pop
hlt
hlt
mov
and
repz
pop
xchg
pop
imul
push
dec
xor
mov
sbb
fldcw
inc
push
enter
adc
xchg
cs
cmp
add
push
or
mov
xchg
pop
or
dec
xchg
jae
jns
sbb
xor
push
inc
pop
jnp
mov
and
add
push
je
push
adc
popa
dec
test
add
push
mov
aas
adc
out
fisubr
adc
aas
add
aas
xor
sti
xlat
mov
push
cmps
retf
cmp
sti
push
dec
jnp
into
aas
mov
cmp
push
iret
repz
add
cmp
repz
rcl
adc
iret
repz
adc
stos
or
jns
ret
push
sbb
sahf
out
sbb
push
adc
out
mov
sar
add
adc
sbb
repz
pop
push
add
loope
iret
repz
js
mov
test
fistp
mov
repz
push
hlt
add
or
repz
ret
push
add
repz
add
js
mov
repz
test
rol
mov
mov
sahf
cmps
mov
sahf
out
sahf
push
mov
jns
out
pushf
out
mov
rcr
sbb
sbb
iret
xchg
push
and
xor
push
punpckldq
mov
sub
ret
add
jle
arpl
or
out
faddp
out
out
or
mov
sbb
pop
sahf
les
adc
push
les
sbb
or
inc
cmp
adc
addr16
je
jl
xchg
out
out
aas
add
add
out
neg
dec
ds
nop
pushf
sahf
out
sahf
lods
mov
repz
mov
iret
repz
mov
(bad)
int3
aam
add
lods
xchg
pop
(bad)
call
add
dec
in
data16
push
add
cmp
jns
hlt
push
cld
or
push
sbb
fwait
add
repz
sahf
dec
pop
es
cmp
or
dec
ins
jg
outs
cmp
lar
pop
in
jmp
pop
cmp
sbb
jbe
mov
add
and
ss
xchg
mov
daa
clc
sub
jle
jo
mov
jns
out
lods
(bad)
aam
iret
repz
hlt
add
and
cmp
repz
push
cmp
rep
mov
loopne
ja
fild
clc
pop
push
je
xor
mov
cmc
add
dec
popa
xor
inc
retf
repz
add
adc
scas
(bad)
(bad)
jo
or
mov
add
jge
lods
pusha
add
sub
fidiv
adc
mov
test
das
xchg
mov
rol
pop
jb
jno
add
call
push
scas
imul
pop
pop
add
fiadd
mov
jns
cld
std
ds
(bad)
cmp
repz
add
test
(bad)
xchg
rcl
push
add
cmp
xchg
rol
out
mov
lds
pop
les
add
sbb
jne
nop
retf
or
pop
lods
aaa
scas
mul
sbb
adc
les
mov
push
pop
pop
add
pop
mov
xor
dec
pop
or
xlat
iret
repz
jecxz
das
dec
adc
push
std
in
sahf
out
cmp
cli
add
stc
sbb
out
clc
sub
inc
mul
jns
out
cmc
push
jns
repz
mov
out
lock
repz
out
in
add
in
adc
repnz
jmp
jmp
in
mov
mov
push
jo
pop
pop
(bad)
nop
sti
and
sbb
push
pop
pop
outs
mov
inc
or
or
add
fild
fadd
push
adc
and
pop
or
in
bound
fwait
jge
adc
and
xor
pop
inc
jg
mov
das
sti
pcmpgtd
dec
add
or
sets
outs
add
sahf
mov
or
femms
or
adc
add
sbb
sahf
cwde
push
rcl
jb
add
lods
pop
pop
adc
sub
mov
adc
and
xor
cmp
fwait
loop
dec
pushw
ins
imul
jno
cli
sti
dec
push
sahf
sar
pop
std
and
sbb
add
jg
cmc
inc
popa
stc
push
mov
xor
adc
mov
hlt
sbb
fadd
scas
(bad)
lods
dec
adc
add
adc
and
xchg
fs
and
outs
popa
xor
test
cmp
xor
jg
and
popa
outs
sub
and
imul
leave
mov
push
mov
loop
sar
xor
pop
add
out
std
mov
jb
pop
add
mov
cmp
das
xor
inc
pop
and
jns
push
ficom
adc
add
adc
adc
pop
adc
and
mov
adc
jmp
jae
sub
add
ja
mov
xor
es
jb
or
mov
popf
aaa
adc
cwde
outs
mov
gs
push
fs
jnp
xchg
dec
test
int3
push
call
ins
xor
inc
fs
mov
cmp
cmp
inc
cmp
repz
pop
or
or
cmp
repz
sbb
and
iret
repz
xor
inc
push
arpl
(bad)
and
fadd
and
add
test
add
scas
test
pop
add
pop
or
ficomp
push
and
inc
xchg
je
rol
push
iret
repz
add
or
cmp
repz
and
inc
pusha
adc
cmps
daa
mov
pusha
xchg
pop
pop
or
daa
daa
daa
or
or
in
daa
or
retf
or
cmps
add
fwait
add
add
bound
sbb
mov
jae
je
add
jnp
or
pop
sub
mov
mov
jmp
inc
enter
inc
add
and
outs
cld
(bad)
(bad)
mov
not
adc
add
fild
add
or
jge
xchg
or
loopne
ins
sub
mov
pop
push
jo
push
pop
fstp
dec
(bad)
fsubr
int3
daa
adc
mov
sbb
or
leave
mov
or
and
bound
(bad)
int3
dec
cmp
inc
cwde
and
and
popaw
push
sbb
outs
sbb
inc
ror
ins
add
pusha
mov
mov
in
test
loopne
inc
mov
push
mov
or
fs
and
sub
ror
aas
lea
loope
adc
push
pop
sbb
aas
daa
add
mov
xchg
or
add
or
xor
or
pop
add
jl
jg
das
cmp
loopne
ds
aas
shl
ss
cmp
shl
cmp
mov
jg
rol
jg
push
or
jb
(bad)
(bad)
ret
arpl
push
sbb
out
push
enter
sbb
out
sahf
sbb
and
out
and
sahf
out
sub
sub
out
sahf
sub
xor
add
fsub
push
not
outs
(bad)
adc
mov
ins
mov
mov
add
jmp
xor
or
imul
mov
cmp
stos
call
dec
into
and
or
mov
add
loope
jbe
and
popf
test
lea
mov
mov
dec
pop
in
test
cld
test
std
dec
test
add
pop
lahf
test
pop
in
cld
dec
jp
or
fisttp
sti
fistp
mov
sbb
sbb
xchg
sbb
test
in
(bad)
sbb
daa
int
ror
xor
cmp
aas
in
mov
out
sbb
cwde
pop
xchg
pinsrw
pushf
sub
mov
jg
or
mov
movs
stos
mov
lods
fidiv
mov
push
mov
outs
jmp
es
imul
stos
mov
paddsw
imul
push
adc
xlat
mov
sub
ins
int3
mov
xor
les
call
sahf
stos
pop
mov
stos
pop
in
jle
dec
adc
scas
das
test
cmp
les
movs
mov
pop
(bad)
fimul
dec
lea
lea
dec
mov
add
cmps
inc
push
jg
lidtd
mov
cmps
or
pop
xor
pop
or
pop
ds
stos
enter
dec
std
jg
call
adc
scas
sub
bound
sbb
sub
push
sti
dec
scas
and
dec
mov
outs
adc
call
ins
call
push
std
(bad)
call
cld
movs
sub
sub
adc
sbb
and
mov
(bad)
(bad)
jmp
cmps
xor
sub
daa
adc
jge
push
pop
inc
jmp
repnz
std
iret
scas
(bad)
mov
(bad)
(bad)
(bad)
imul
adc
data16
clc
cmps
xor
sahf
sub
push
sar
clc
inc
push
cli
mov
test
call
push
pop
dec
xor
xor
(bad)
(bad)
call
aas
xchg
nop
cmp
xchg
inc
push
sbb
in
inc
in
xor
xchg
push
sub
xacquire
cmp
loope
arpl
mov
mov
jbe
(bad)
and
call
call
adc
adc
push
xchg
inc
inc
pusha
int3
jmp
and
pop
aad
cld
(bad)
(bad)
jmp
xor
mov
xor
jle
dec
jmp
dec
stos
popf
out
add
call
add
sub
adc
and
je
mov
xchg
out
add
je
aaa
(bad)
jg
outs
sub
and
not
lods
imul
jmp
fucomp
out
mov
ss
call
sbb
jb
in
imul
cmp
or
sbb
scas
pop
pop
mov
sub
stos
scas
mov
push
mov
fwait
outs
jmp
sti
out
retf
(bad)
dec
xchg
das
fld
lods
cmp
cli
and
inc
cmps
stos
iret
adc
or
pop
aaa
frstor
retf
mov
pop
repz
ss
cs
or
cli
inc
(bad)
(bad)
(bad)
jmp
nop
pop
mov
add
xlat
mov
or
scas
or
pop
pop
pop
mov
dec
xchg
iret
sub
(bad)
(bad)
(bad)
stc
imul
vxorpd
inc
addr16
adc
aam
(bad)
(bad)
pop
push
aam
adc
das
sub
push
std
dec
stos
sti
(bad)
out
adc
pop
in
in
int3
retf
pop
push
cmp
sbb
(bad)
jmp
inc
inc
mov
sub
ficom
loop
movs
stos
cmp
cmp
push
mov
jg
jge
push
jl
loope
lods
in
sbb
aad
jo
(bad)
(bad)
cmp
inc
sbb
xchg
mov
mov
jnp
dec
xchg
dec
stos
pop
jmp
(bad)
(bad)
inc
jo
out
stos
fisttp
adc
cdq
lds
push
or
adc
dec
pop
cmp
(bad)
(bad)
call
mov
inc
sub
dec
pop
xchg
sbb
cli
daa
sub
popf
dec
iretw
mov
loope
jmp
mov
sub
adc
(bad)
(bad)
(bad)
clc
pop
and
sub
mov
fucomi
jg
mov
mov
adc
loopne
(bad)
(bad)
in
call
movs
mov
nop
fcom
in
retf
fcom
addr16
jmp
(bad)
(bad)
(bad)
call
cmps
push
outs
iret
xor
fnstcw
enter
mov
lds
pop
in
in
(bad)
(bad)
(bad)
call
and
cmp
in
bound
xor
into
movs
sti
movs
dec
push
cmps
int
jae
push
(bad)
(bad)
(bad)
inc
xor
xor
xor
dec
jl
mov
out
shl
push
adc
(bad)
(bad)
dec
mov
xchg
jl
inc
rcr
mov
mov
push
(bad)
(bad)
call
mov
cmp
or
adc
pop
in
int3
push
out
stos
(bad)
call
(bad)
icebp
fst
mov
pop
dec
stos
rol
mov
sub
(bad)
(bad)
(bad)
jmp
js
int
(bad)
js
jge
and
scas
(bad)
and
(bad)
int3
test
out
and
jb
xlat
jge
(bad)
(bad)
jmp
pop
movs
dec
fidivr
iret
sbb
sub
inc
data16
stos
es
(bad)
(bad)
call
inc
pop
cdq
in
sbb
lods
das
call
xchg
imul
push
int3
dec
fistp
mov
inc
sub
mov
jmp
mov
(bad)
mov
push
dec
pop
sbb
adc
xchg
cmp
inc
or
std
(bad)
jg
add
stos
dec
jns
popa
std
xor
mov
(bad)
cwde
push
mov
(bad)
(bad)
(bad)
push
mov
nop
mov
mov
dec
ret
jbe
xchg
jg
mov
push
cmp
sar
call
call
out
cs
jo
jp
or
push
xchg
jnp
pop
xchg
cli
add
test
jge
cdq
sti
(bad)
(bad)
push
xor
mov
lahf
daa
jecxz
sahf
xor
fwait
jg
mov
(bad)
gs
and
out
cli
jg
adc
movs
push
cmps
sbb
daa
repnz
and
jb
and
(bad)
push
jge
mov
es
lock
or
(bad)
(bad)
dec
mov
pop
inc
mov
into
mov
std
and
sbb
push
and
mov
scas
xchg
movs
inc
xor
and
push
(bad)
(bad)
call
retf
push
lods
(bad)
xor
fdivrp
jo
aad
sbb
adc
cld
arpl
adc
cdq
jbe
(bad)
(bad)
fcomip
dec
adc
jg
das
xchg
adc
mov
or
data16
ins
add
sub
mov
call
dec
sbb
mov
adc
(bad)
(bad)
dec
jb
stos
scas
mov
cmps
scas
scas
jne
aad
mov
cdq
push
mov
lds
pusha
es
(bad)
(bad)
jmp
loop
jecxz
scas
jb
dec
pop
call
xchg
sbb
adc
pusha
jns
jg
(bad)
jmp
push
sub
pop
adc
sbb
push
movs
jb
inc
xor
(bad)
(bad)
(bad)
call
mov
iret
jmp
inc
jp
dec
jnp
loope
retf
arpl
mov
inc
popa
mov
test
fisub
loope
enter
retf
(bad)
gs
mov
jbe
sub
push
mov
jns
mov
dec
int
cmc
inc
(bad)
(bad)
call
jne
stos
sbb
stos
scas
or
xchg
push
fs
dec
or
dec
mov
pop
mov
sbb
xor
and
call
bound
mov
call
adc
sub
sub
movs
retf
sub
mov
ftst
cmp
or
sti
stos
inc
cmp
push
and
cmc
es
outs
cli
pop
addr16
adc
cld
xchg
mov
call
outs
cli
(bad)
jns
addr16
gs
adc
lock
pop
test
adc
dec
jg
(bad)
dec
imul
xchg
sbb
cs
dec
fdivr
jg
test
mov
or
push
cmc
ins
sub
(bad)
(bad)
(bad)
mov
(bad)
dec
and
lock
adc
pop
mov
scas
mov
shr
mov
fwait
pusha
sbb
mov
inc
retf
test
xor
shr
movs
fcmovu
(bad)
retf
or
cli
dec
(bad)
(bad)
mov
jo
dec
daa
rcr
sub
xchg
sub
sub
cdq
xor
cmp
(bad)
(bad)
(bad)
mov
mov
push
push
outs
add
and
jmp
mov
mov
adc
xor
out
cli
sub
mov
mov
xor
add
sub
ficomp
(bad)
(bad)
jmp
data16
lods
lods
call
dec
leave
outs
cmp
pop
call
push
out
fstp
sbb
(bad)
(bad)
call
and
das
popf
repnz
ret
jns
or
in
cs
lods
scas
nop
movs
mov
mov
(bad)
(bad)
(bad)
jp
enter
inc
push
jg
pop
mov
mov
mov
sti
push
push
inc
cmp
inc
cmp
sbb
in
(bad)
loopne
xor
sbb
xchg
(bad)
(bad)
(bad)
(bad)
stc
adc
inc
adc
shr
xchg
mov
loop
(bad)
mov
sbb
(bad)
(bad)
call
loop
sbb
data16
lods
sbb
loop
dec
inc
pusha
jo
pop
ins
stos
jno
cli
sub
sar
ret
mov
mov
jmp
push
or
aaa
shl
(bad)
(bad)
call
sti
cdq
ss
aam
repz
cwde
pop
adc
dec
push
out
(bad)
(bad)
jg
sub
lods
xchg
cwde
push
stos
xchg
dec
pop
jno
je
mov
mov
out
inc
mov
adc
pop
sbb
leave
in
mov
pushf
jmp
pop
mov
outs
clc
fisubr
sbb
pop
stos
outs
lea
sub
hlt
cmps
sub
js
bound
(bad)
call
rcl
sahf
mov
push
pop
es
mov
shl
sub
(bad)
(bad)
push
sbb
pop
jmp
dec
movs
sub
retf
sub
mov
stos
or
jge
ins
fwait
test
jnp
mov
iret
push
mov
ret
xor
inc
or
mov
(bad)
mov
dec
adc
cmp
movs
int3
sbb
add
les
cmps
iret
jmp
repz
jmp
cmp
cmp
stos
in
inc
push
mov
enter
adc
jb
(bad)
(bad)
(bad)
ds
add
scas
loop
std
xor
icebp
sbb
push
or
add
clc
(bad)
(bad)
mov
or
sub
mov
jmp
cld
lods
jg
(bad)
(bad)
(bad)
call
in
pop
pop
cli
pop
stos
or
pop
jg
jmp
rcr
loopne
xor
adc
fcomip
(bad)
sti
pop
push
sbb
xchg
(bad)
lods
xor
stos
cmc
scas
or
mov
inc
mov
adc
sub
push
cmp
push
mov
sbb
sbb
lods
sub
sub
lea
mov
dec
and
mov
or
mov
jo
movs
pop
and
in
jl
mov
das
out
lahf
mov
mov
mov
push
imul
or
sbb
(bad)
mov
dec
or
pop
fs
mov
std
sub
shl
jae
neg
(bad)
call
sub
fsubr
scas
cmp
loopne
or
push
pop
cs
movs
popf
scas
js
scas
clc
call
dec
or
or
cmp
xchg
retf
imul
cmc
mov
(bad)
(bad)
(bad)
jmp
stc
ret
imul
into
push
jmp
push
lods
loop
test
and
xlat
retf
daa
dec
out
(bad)
dec
(bad)
repnz
cmps
sub
push
rcr
fwait
test
arpl
aam
cmp
(bad)
(bad)
jmp
pop
loop
mov
mov
dec
sbb
jae
bound
in
retf
sub
mov
pop
(bad)
jg
test
(bad)
dec
cmp
dec
cli
push
imul
(bad)
(bad)
(bad)
(bad)
mov
mov
and
jne
jmp
ficom
add
push
call
clc
in
pop
adc
(bad)
(bad)
dec
xchg
js
mov
stc
mov
mov
sbb
(bad)
sub
xlat
sbb
sub
dec
stos
retf
cld
(bad)
(bad)
jmp
mov
popa
out
adc
sbb
mov
cli
sub
jae
inc
jae
(bad)
inc
cs
mov
or
sti
loope
(bad)
jmp
lods
sbb
dec
out
ud0
(bad)
jmp
retf
push
fistp
inc
mov
pop
mov
mov
jmp
ss
and
(bad)
(bad)
(bad)
push
popf
gs
jmp
(bad)
call
xor
(bad)
pop
call
fistp
rol
repz
jl
and
cmp
ror
xchg
in
cld
jns
sub
jg
std
push
sub
(bad)
(bad)
call
scas
push
dec
js
ja
cs
mov
fild
and
addr16
(bad)
dec
stos
pop
fcmovnbe
nop
ret
jge
gs
push
jge
and
(bad)
pop
out
imul
data16
and
lahf
jp
push
sti
dec
hlt
or
mov
mov
clc
mov
shr
call
lods
sbb
dec
sub
dec
imul
xchg
nop
in
push
mov
cdq
cmps
sbb
adc
sti
ficomp
call
into
ret
pusha
xor
xor
xor
(bad)
(bad)
jg
into
dec
sub
jge
neg
or
jge
dec
scas
xchg
jmp
mov
push
cs
stos
mov
cmp
outs
lock
in
(bad)
(bad)
(bad)
mov
sub
cmp
nop
sub
mov
mov
mov
jo
sub
cdq
mov
inc
movs
aad
sbb
push
dec
test
retf
xor
out
mov
out
mov
add
(bad)
dec
call
cs
fcom
push
(bad)
test
call
repnz
inc
aam
ret
lea
xchg
add
icebp
(bad)
dec
test
lods
icebp
cmp
mov
pop
sbb
(bad)
in
fistp
dec
add
pop
loop
lods
ja
cld
push
call
pop
lods
aam
pop
sub
mov
call
jmp
push
jmp
xor
sub
lock
pop
jo
sbb
jmp
xchg
(bad)
jmp
inc
inc
je
mov
stos
or
sub
test
dec
shr
int
push
ss
push
mov
dec
test
sub
push
addr16
mov
inc
icebp
imul
push
scas
fdivr
(bad)
(bad)
push
jno
test
xchg
aaa
xchg
sub
sub
(bad)
xor
jmp
dec
mov
test
pop
popa
sub
jbe
mov
loop
sub
stos
ror
call
cdq
iret
arpl
je
call
jle
xor
xchg
cli
or
or
and
clc
inc
mov
(bad)
ins
test
mov
or
imul
nop
or
(bad)
jmp
cwde
pusha
outs
cs
sub
push
or
xchg
mov
pop
inc
ret
sbb
(bad)
(bad)
(bad)
mov
outs
jmp
sub
scas
xor
out
bound
cmp
fisub
sti
or
inc
lahf
mov
jne
ficom
pop
xor
jb
sbb
(bad)
mov
pop
in
sbb
mov
cmp
jmp
fs
(bad)
(bad)
(bad)
push
adc
push
icebp
ins
bound
aam
sahf
pop
inc
sub
xchg
jmp
adc
ins
pushf
push
jae
add
(bad)
(bad)
call
iret
sbb
neg
dec
xlat
in
fnstenv
stos
pop
cli
int3
xor
(bad)
jmp
test
sub
pop
add
ss
scas
jmp
pop
loope
fcom
adc
jmp
sub
outs
(bad)
(bad)
(bad)
(bad)
cmp
outs
xor
fwait
add
push
or
fsubrp
mov
imul
js
(bad)
(bad)
(bad)
dec
jmp
mov
dec
and
in
mov
push
dec
(bad)
sti
outs
sub
add
adc
movs
iret
sar
(bad)
(bad)
call
sahf
inc
scas
add
and
adc
dec
jmp
dec
fmul
push
aaa
cld
(bad)
jmp
pop
bound
xor
sbb
sbb
xor
pop
push
(bad)
(bad)
(bad)
push
mov
inc
inc
push
xor
and
mov
sahf
lods
jmp
sbb
std
jmp
dec
arpl
(bad)
push
outs
cmp
adc
(bad)
jmp
retf
inc
iret
xchg
movs
sub
(bad)
pop
xor
push
lods
sub
(bad)
(bad)
dec
adc
push
out
push
or
loopne
mov
cdq
push
cmp
std
push
sub
cld
in
inc
jp
pushf
sti
ss
div
dec
adc
stos
xlat
mov
retf
push
jmp
popa
daa
out
mov
aam
mov
or
push
scas
(bad)
(bad)
(bad)
jmp
pop
dec
jg
push
ins
adc
sub
call
jp
jns
bound
adc
(bad)
jmp
imul
fwait
dec
outs
sbb
sub
(bad)
or
xchg
push
sub
xchg
(bad)
(bad)
(bad)
dec
jns
in
xlat
mov
ret
cmp
lahf
or
mov
mov
jns
(bad)
(bad)
push
cmp
xor
movs
xor
test
(bad)
(bad)
(bad)
(bad)
(bad)
stc
lods
mov
push
mov
sub
enter
mov
mov
push
leave
mov
sub
scas
clc
retf
mov
inc
add
(bad)
(bad)
(bad)
mov
sub
call
inc
push
fsub
mov
jne
call
(bad)
call
sub
loop
pop
iret
imul
call
and
cmp
(bad)
inc
jmp
std
mov
mov
jecxz
in
(bad)
call
or
in
sub
ds
push
cli
inc
into
out
jp
adc
stos
stos
jge
lods
jmp
xchg
sub
sbb
push
mov
out
or
imul
adc
aad
std
or
stos
mov
sar
(bad)
inc
sub
(bad)
(bad)
(bad)
call
or
cmp
dec
lods
nop
sti
sbb
lds
stos
popa
clc
push
inc
(bad)
(bad)
push
bound
lds
retf
icebp
test
and
mov
jmp
cli
and
inc
sbb
jo
dec
push
mov
lahf
push
jp
cmp
out
std
jg
call
dec
(bad)
mov
and
mov
imul
sub
pop
movs
adc
push
les
dec
xor
(bad)
and
add
(bad)
(bad)
call
out
pop
or
jmp
(bad)
pop
adc
pop
mov
mov
sub
cdq
call
mov
mov
jmp
push
push
cwde
and
iret
pop
lock
call
pop
xchg
das
fsubp
sub
push
dec
mov
push
dec
xor
dec
dec
shr
fmul
sub
push
inc
arpl
sbb
sub
in
or
call
fild
aam
add
pop
paddd
dec
ja
pop
sub
push
retf
iret
jb
jmp
xlat
(bad)
lahf
push
mov
sbb
xchg
call
pushf
pop
push
jmp
iret
mov
adc
adc
push
std
jp
and
fstp
scas
push
nop
sbb
(bad)
(bad)
call
leave
mov
in
cdq
mov
or
movs
(bad)
stc
mov
popf
fwait
mov
xchg
jae
stos
lock
cmp
(bad)
pop
cwde
mov
pop
test
cmp
mov
fwait
(bad)
(bad)
(bad)
dec
retf
and
mov
pop
mov
out
push
add
adc
push
mov
stos
sbb
fwait
pop
mov
stos
in
mov
data16
push
sub
(bad)
(bad)
push
jmp
jmp
fcomp
clc
outs
xchg
ret
xchg
jg
adc
test
sbb
scas
jmp
rcl
loop
cmc
or
int3
xchg
pop
retf
pushf
call
call
mov
add
sbb
repnz
pop
mov
lods
(bad)
(bad)
(bad)
jmp
inc
scas
es
pop
retf
call
add
je
sub
adc
mov
(bad)
push
jmp
add
call
jmp
xlat
jmp
pop
push
xor
cld
stos
push
and
je
mov
jmp
pop
dec
movs
int3
sub
(bad)
fisub
push
in
mov
lds
imul
sahf
dec
icebp
pop
movs
cmp
sub
(bad)
jg
sbb
or
mov
dec
and
and
or
and
mov
jmp
aad
bound
sub
ficom
mov
jnp
dec
rol
ins
test
out
(bad)
(bad)
call
inc
push
adc
lods
and
iret
and
les
call
int
mov
daa
fwait
pop
shr
call
push
cdq
je
dec
std
fimul
(bad)
mov
sahf
fwait
pop
cmp
cli
pop
add
mov
loope
(bad)
push
imul
or
stos
cmp
int3
jge
test
sub
call
mov
sahf
and
in
test
or
sbb
inc
push
out
icebp
stos
mov
ins
add
xlat
(bad)
(bad)
(bad)
(bad)
jp
sbb
or
mov
stos
dec
xchg
adc
adc
stos
mov
(bad)
(bad)
dec
ss
fs
jle
mov
sbb
jno
mov
adc
test
pop
xor
stos
(bad)
(bad)
(bad)
call
call
repz
gs
movs
imul
leave
stos
call
mov
(bad)
(bad)
call
fcomp
loop
outs
inc
sub
lods
sub
sub
lea
sbb
adc
jg
(bad)
lahf
int3
(bad)
push
es
mov
or
imul
out
pop
sahf
into
push
mov
add
sahf
call
cmp
lock
stos
cmp
mov
mov
dec
loop
daa
push
inc
push
sub
les
(bad)
out
clc
(bad)
mov
dec
fstp
mov
cwde
pop
mov
ds
movs
sbb
lods
(bad)
(bad)
cmp
xchg
lock
dec
pop
lds
pop
mov
dec
test
add
xor
(bad)
jg
mov
pushf
mov
pop
call
mov
dec
push
sbb
lds
(bad)
inc
and
sbb
jecxz
call
adc
aad
mov
rcr
cli
cdq
int
jle
scas
scas
movs
test
call
jg
jb
cmp
icebp
or
(bad)
test
gs
push
mov
(bad)
out
clc
push
sbb
retf
jo
(bad)
(bad)
popa
add
(bad)
inc
mov
pushf
cmp
(bad)
inc
or
daa
call
pop
sbb
adc
call
jmp
rcl
pop
adc
inc
lods
push
pop
cmps
jmp
mov
jmp
(bad)
push
ins
test
push
lods
test
(bad)
cmp
push
cmp
in
stos
xor
mov
(bad)
(bad)
(bad)
call
xor
and
adc
xchg
(bad)
push
push
fnclex
ja
sbb
in
sbb
mov
mov
xchg
call
mov
add
adc
inc
and
dec
(bad)
(bad)
inc
shl
je
add
mul
stos
pop
call
test
call
fldenv
retf
jmp
retf
pop
jge
cmp
call
(bad)
(bad)
(bad)
(bad)
push
rcr
jle
xchg
cmp
mov
sbb
movs
(bad)
ins
fiadd
scas
(bad)
(bad)
(bad)
inc
test
ret
pop
inc
movs
sub
push
push
push
scas
rcl
push
aam
call
mov
(bad)
mov
mov
addr16
pop
test
in
fucomp
cli
pop
pop
(bad)
(bad)
(bad)
(bad)
call
or
not
xor
xor
and
and
std
(bad)
inc
mov
push
imul
neg
call
mov
sbb
(bad)
push
cwde
xchg
loop
enter
sub
fiadd
push
mov
inc
sub
mov
gs
push
and
sbb
adc
dec
retf
(bad)
std
retf
test
add
repnz
iret
shr
call
loopne
lds
mov
dec
push
push
cld
(bad)
fisttp
or
faddp
cdq
pop
scas
sbb
arpl
rcl
sar
cmp
mov
mov
sahf
out
sub
mov
sbb
fsubr
test
sub
ret
mov
les
xchg
ficomp
pop
(bad)
(bad)
(bad)
(bad)
jle
inc
or
aad
pop
jg
xchg
shl
mov
add
or
imul
loopne
xchg
sub
(bad)
test
and
lds
pop
jmp
add
mov
push
in
int3
xor
add
int3
and
mov
cld
adc
(bad)
(bad)
(bad)
fidiv
fsubp
cmps
lods
fld
fnstcw
popa
call
inc
stos
jmp
dec
sub
mov
pusha
mov
sub
lock
(bad)
(bad)
(bad)
jmp
adc
mov
imul
and
mov
cli
out
mov
stos
jle
(bad)
call
dec
mov
xchg
push
pop
add
push
in
clc
adc
jecxz
pop
retf
aaa
std
(bad)
jmp
adc
push
xchg
sub
jmp
mov
nop
test
sub
rol
xor
xchg
pushf
mov
xchg
dec
mov
lods
pushf
mov
call
(bad)
mov
stc
push
mov
cmps
dec
xor
mov
dec
add
pop
(bad)
(bad)
(bad)
(bad)
cld
pop
arpl
xor
dec
(bad)
dec
std
pop
repz
xor
mov
cmp
cld
ds
xor
(bad)
(bad)
cld
ins
int3
or
mov
in
sub
lods
jmp
push
addr16
cmp
jmp
pushf
mov
adc
(bad)
(bad)
push
pop
dec
mov
fist
retf
dec
aaa
enter
hlt
mov
xchg
rcl
(bad)
(bad)
(bad)
cmp
jg
and
cli
lds
imul
adc
xchg
lock
call
mov
sbb
push
cmps
sbb
xchg
push
jmp
movs
dec
leave
xor
xor
(bad)
call
dec
mov
mov
mov
mov
xchg
jne
sub
push
adc
push
sub
mov
pop
mov
stos
stos
shr
sbb
cmc
fcom
lods
cs
dec
mov
sub
(bad)
(bad)
dec
lock
xchg
pop
(bad)
imul
cmps
xchg
movs
retf
retf
ja
add
stos
mov
hlt
jne
mov
into
out
les
push
aam
stos
xor
pushf
repnz
(bad)
(bad)
jmp
jb
pop
es
push
dec
add
fsubp
pop
call
mov
(bad)
(bad)
call
test
inc
dec
(bad)
sub
cmp
(bad)
scas
in
sbb
call
(bad)
jno
icebp
xchg
dec
dec
aad
dec
daa
inc
adc
sbb
sbb
sub
push
retf
fcom
cmp
dec
cmps
cmp
or
into
mov
cli
dec
sbb
pop
sub
int3
pop
or
xchg
push
xchg
pop
in
(bad)
(bad)
push
aaa
inc
icebp
mov
xor
dec
pop
rcr
or
dec
fcomp
push
pop
and
jmp
pop
mov
xchg
xor
adc
hlt
xchg
fs
xor
(bad)
(bad)
(bad)
dec
xor
jmp
inc
int
mov
fisubr
les
push
and
xor
(bad)
(bad)
jmp
inc
xchg
xor
sub
jnp
xor
xchg
xor
jnp
and
push
cdq
aad
(bad)
(bad)
inc
lock
jp
ds
inc
jns
xor
gs
xchg
mov
mov
in
jmp
(bad)
(bad)
(bad)
dec
sar
cmp
sub
xchg
test
lods
or
mov
sti
mov
jmp
in
sub
es
mov
jne
cwde
(bad)
(bad)
into
jmp
jbe
push
inc
add
push
out
mov
stos
sub
(bad)
inc
sub
ds
stos
loope
cmps
adc
call
adc
cmp
movs
mov
outs
mov
xchg
lds
sub
scas
mov
sbb
fwait
stos
add
cmp
adc
dec
fimul
outs
fwait
das
test
jbe
inc
scas
scas
push
sbb
je
in
cwde
push
cdq
inc
call
call
int
mov
mov
jne
test
mov
adc
cdq
xchg
outs
jmp
(bad)
cwde
mov
neg
(bad)
or
in
inc
mov
fadd
mov
(bad)
(bad)
dec
scas
adc
ficomp
dec
leavew
pop
jg
div
or
mov
in
pop
scas
cld
pop
mov
ins
adc
mov
sbb
sbb
pop
cwde
adc
retf
(bad)
(bad)
dec
scas
dec
adc
shl
ja
stos
fwait
pop
ja
in
cli
inc
sub
pop
cdq
inc
mov
fwait
cwde
(bad)
(bad)
call
xchg
pop
call
call
scas
imul
inc
cdq
push
test
(bad)
call
int3
(bad)
dec
sbb
jl
stos
div
and
(bad)
(bad)
dec
cs
mov
dec
xor
cmp
dec
test
mov
jg
test
ss
sub
cdq
test
xchg
mov
jmp
popa
sbb
jmp
mov
stos
sub
inc
cmp
mov
test
pop
cmp
sub
mov
in
loopne
inc
xchg
xchg
ja
mov
fcomp
daa
mov
push
scas
push
rcl
jns
sti
(bad)
(bad)
(bad)
fcomp
xchg
cli
ret
xor
dec
inc
out
dec
fbld
dec
jbe
fdivr
fild
imul
imul
sub
cdq
add
cwde
inc
pop
(bad)
(bad)
call
leave
inc
imul
dec
dec
xor
dec
sub
neg
mov
gs
outs
loope
cwde
jne
call
xor
out
mov
add
jnp
push
inc
and
(bad)
(bad)
push
xchg
scas
adc
jb
mov
cmp
adc
ins
pop
movs
out
cwde
xlat
sbb
sar
jmp
lods
jb
or
cli
mov
data16
pop
out
stos
fmul
inc
stos
(bad)
call
or
cmps
sbb
cld
push
pop
imul
push
(bad)
(bad)
(bad)
inc
test
pop
mov
adc
push
sbb
test
jp
pop
outs
inc
arpl
xchg
pop
xchg
add
push
(bad)
(bad)
out
clc
icebp
sbb
lods
mov
jmp
add
mov
adc
jg
(bad)
(bad)
jmp
inc
(bad)
jp
les
mov
push
and
inc
xor
ds
xor
call
adc
sub
outs
dec
ret
retf
mov
xchg
or
jmp
(bad)
(bad)
(bad)
inc
push
aaa
inc
or
movs
or
inc
push
sbb
mov
dec
(bad)
xor
cs
push
ss
jae
outs
test
rcr
dec
je
retf
lock
(bad)
cwde
add
fcom
dec
fsubr
add
dec
fld
(bad)
(bad)
(bad)
fist
cdq
inc
dec
imul
test
pop
jae
inc
adc
test
call
(bad)
(bad)
(bad)
cmp
dec
xchg
fsubr
mov
adc
xchg
adc
lea
sbb
lds
test
or
(bad)
jmp
mov
sub
xlat
leave
(bad)
(bad)
(bad)
call
mov
leave
scas
or
and
inc
cdq
push
xchg
add
push
fsubr
cmp
fnstcw
leave
cmp
jmp
outs
ret
mov
sub
mov
cmp
mov
dec
and
mov
scas
and
jmp
push
push
and
pushf
xor
push
retf
jmp
fdiv
mov
sbb
popf
call
(bad)
mov
jnp
fisub
jecxz
dec
into
das
lahf
xor
mov
pop
push
retf
(bad)
call
inc
popf
mov
sub
dec
or
(bad)
call
jo
dec
das
pop
dec
(bad)
(bad)
(bad)
jmp
adc
jb
sub
or
cmp
test
xlat
(bad)
call
fisubr
sbb
mov
std
jg
push
xchg
dec
repnz
int
lahf
sbb
retf
int
(bad)
(bad)
mov
xchg
(bad)
sub
xor
xchg
(bad)
(bad)
(bad)
call
cmps
xor
mov
mov
(bad)
(bad)
jmp
sahf
xchg
adc
sub
test
fcom
push
dec
or
cmp
sub
ds
(bad)
jmp
fild
push
fidivr
aaa
pop
xchg
jne
pop
mov
and
(bad)
(bad)
dec
fistp
pop
pop
xchg
pop
xchg
sti
retf
into
stos
retf
dec
fcmovne
inc
xchg
inc
das
sub
call
dec
(bad)
ficom
in
sbb
pop
inc
jmp
push
cmps
retf
mov
and
(bad)
(bad)
call
mov
mov
(bad)
cmp
sub
mov
push
jno
push
(bad)
call
or
outs
jo
or
cli
inc
(bad)
adc
mov
call
jns
fsub
dec
outs
out
inc
sub
mov
mov
daa
jmp
mov
clc
pop
(bad)
in
adc
lea
(bad)
sub
fisubr
call
jmp
rol
mov
out
out
in
cmps
pop
loop
imul
(bad)
fisubr
imul
push
mov
retf
mov
push
adc
jg
inc
movs
fidivr
push
push
adc
pop
mov
(bad)
(bad)
call
loop
sub
mov
ficom
dec
jmp
cmp
(bad)
cwde
or
rcl
and
add
push
push
arpl
fist
xchg
cmp
lods
test
xor
mov
cmp
mov
push
test
mov
add
retf
(bad)
(bad)
(bad)
jmp
push
pop
ins
cmc
jmp
lea
pop
or
rcr
sub
icebp
cli
dec
test
repz
jne
(bad)
(bad)
call
mov
mov
xor
adc
in
outs
test
(bad)
sti
push
push
mov
sbb
and
inc
sahf
cmp
(bad)
mov
sub
ds
jne
jmp
mov
fldcw
mov
scas
(bad)
(bad)
(bad)
cmps
mov
push
jge
cmp
cmovg
cmp
and
dec
out
add
sar
ja
xor
cwde
push
int3
int
push
jmp
jg
pop
(bad)
sub
jmp
mov
outs
(bad)
(bad)
push
daa
mov
cwde
push
mov
jbe
mov
fst
push
jp
in
jmp
dec
cli
xor
xor
fsubr
in
pop
cld
(bad)
and
aaa
mov
xchg
es
fsubr
jb
cmp
jmp
cld
add
cmp
and
push
jp
es
mov
rcl
int3
mov
aaa
jl
add
sbb
(bad)
mov
xchg
stos
in
(bad)
(bad)
(bad)
inc
push
hlt
jne
pop
test
and
rcr
out
add
cmp
rcl
inc
push
imul
mov
lods
push
adc
sub
call
adc
dec
mov
jg
(bad)
sti
fdiv
repnz
jnp
jmp
out
test
std
push
pop
les
and
mov
out
loope
xchg
(bad)
(bad)
(bad)
dec
inc
sbb
cmps
retf
cmp
xchg
dec
vandnps
sahf
pusha
push
add
xchg
xchg
(bad)
(bad)
dec
push
jmp
push
rcr
daa
fldenv
sbb
mov
data16
aaa
(bad)
(bad)
(bad)
out
fsub
inc
jg
sbb
sti
xchg
push
xchg
aas
pop
cld
(bad)
xor
pushw
sub
(bad)
std
(bad)
push
fistp
push
push
jmp
repz
dec
and
inc
movs
les
sub
fistp
lahf
repz
mov
sub
repz
or
push
push
push
adc
inc
call
mov
cld
scas
(bad)
(bad)
(bad)
jmp
jge
inc
xchg
pop
sbb
sub
sub
(bad)
stos
xor
gs
push
outs
imul
inc
aad
xchg
or
sbb
push
mov
test
jmp
mov
sub
loop
shl
out
stos
sar
(bad)
(bad)
in
push
mov
(bad)
mov
mov
push
int3
pusha
xchg
add
out
scas
iret
(bad)
(bad)
(bad)
push
adc
xchg
fwait
mov
call
jg
ins
jb
fld
push
inc
xchg
inc
cld
int3
test
call
push
or
call
int3
mov
scas
mov
mov
mov
add
adc
(bad)
(bad)
inc
xor
dec
mov
push
(bad)
call
pop
sti
dec
jno
sub
push
and
das
cli
(bad)
push
adc
push
out
adc
xor
sbb
(bad)
lock
push
xchg
je
(bad)
js
sub
(bad)
(bad)
sub
(bad)
fs
(bad)
popf
and
mov
inc
push
cmps
movs
cmp
(bad)
mov
test
add
icebp
or
add
xor
push
pop
imul
jmp
xor
jmp
mov
dec
mov
and
jge
scas
call
outs
adc
cmp
out
jo
cdq
xchg
cwde
xchg
add
mov
loope
push
sub
(bad)
jg
sbb
in
inc
stc
push
mov
or
xchg
adc
jecxz
cdq
adc
(bad)
(bad)
(bad)
call
push
jp
sub
mov
dec
pop
jbe
loope
scas
cmp
add
ja
inc
(bad)
(bad)
(bad)
call
loopne
sub
and
sbb
xor
mov
or
sbb
mov
sbb
scas
sub
(bad)
inc
movs
dec
lea
test
lods
mov
out
push
rcr
sub
shr
or
dec
dec
lods
int
ins
xor
cmps
xor
in
xchg
call
(bad)
shl
mov
xor
xchg
fwait
popa
ffree
(bad)
(bad)
(bad)
(bad)
add
outs
sub
rcl
ret
ins
cmc
sub
add
arpl
mov
inc
jne
inc
stos
push
jl
mov
adc
jle
push
xlat
mov
call
mov
mov
xchg
outs
cwde
pop
cdq
test
push
push
scas
lods
in
lods
sub
push
jge
call
add
rol
mov
pop
add
and
(bad)
push
pushf
and
arpl
fisubr
test
and
repz
popf
or
adc
call
xchg
cli
or
sbb
jmp
push
mov
lea
dec
pop
(bad)
mov
sahf
cmp
inc
and
inc
neg
call
std
(bad)
mov
sub
inc
sbb
mov
call
cdq
mov
jg
(bad)
(bad)
(bad)
mov
call
dec
cmps
cmc
imul
(bad)
push
ins
imul
popa
dec
test
(bad)
(bad)
jmp
cmp
retf
shr
dec
ret
push
jne
das
mov
mov
lds
bound
(bad)
push
(bad)
jmp
ins
test
xchg
test
xchg
sbb
push
sbb
aad
imul
bound
push
cmp
loop
push
adc
jmp
popa
aam
fcos
push
(bad)
jmp
out
fwait
inc
jno
mov
inc
dec
mov
sbb
push
dec
mov
dec
xor
clc
(bad)
jmp
fisubr
imul
xchg
outs
cs
cld
mov
imul
call
je
lock
fstp
fisub
imul
pop
dec
test
(bad)
(bad)
call
adc
mov
xchg
xor
test
hlt
outs
mov
mov
lahf
and
jmp
fdiv
out
clc
mov
out
cli
rol
(bad)
mov
mov
or
(bad)
(bad)
inc
daa
xor
dec
xchg
cmp
mov
test
mov
rcr
push
mov
fisubr
mov
je
popf
movs
movs
mov
out
icebp
xlat
jns
push
div
mul
inc
mov
(bad)
(bad)
call
test
fbstp
mov
cld
and
jecxz
rcl
push
outs
test
fcomip
inc
scas
call
adc
jns
ins
fimul
cmp
jmp
dec
test
test
imul
jnp
or
iret
sbb
test
call
imul
xor
fldcw
pop
adc
outs
or
(bad)
(bad)
call
out
inc
xchg
es
cmps
xchg
push
scas
test
adc
aam
je
inc
pop
loope
sbb
hlt
out
fmul
enter
lahf
cli
fs
jno
jl
jmp
inc
or
stos
jne
movs
adc
call
push
imul
inc
jne
xchg
test
dec
add
mov
sub
call
adc
xchg
aaa
imul
call
das
xchg
aaa
adc
mov
popf
push
inc
inc
sub
enter
leave
ret
(bad)
mov
call
and
and
xlat
adc
fucom
inc
push
in
jecxz
mov
test
sub
stos
push
xchg
(bad)
(bad)
mov
inc
in
fstp
dec
movs
push
adc
das
(bad)
sti
mov
cmp
xchg
push
sti
adc
movs
loop
jmp
lods
mov
jg
cwde
imul
push
xchg
jg
add
mov
xchg
push
adc
js
out
ret
inc
sbb
adc
inc
push
test
cs
std
stos
ss
mov
imul
dec
pop
retf
lods
dec
and
cwde
cmps
fst
pushf
pop
sub
cwde
xor
xchg
jne
stos
dec
test
(bad)
(bad)
in
leave
rcl
mov
addr16
sbb
dec
pop
retf
mov
lock
(bad)
(bad)
(bad)
push
xchg
addr16
adc
outs
in
xchg
imul
enter
mov
loop
dec
icebp
test
ins
jg
add
sbb
mov
inc
mov
cmp
in
jmp
ds
mov
push
and
test
rcl
sbb
dec
inc
xor
mov
jmp
push
push
js
jno
jne
sbb
jmp
and
xor
in
sar
(bad)
mov
lock
cmc
jmp
rcl
idiv
popa
jle
push
imul
dec
cwde
dec
mov
into
mov
or
cli
into
ins
push
adc
mov
adc
scas
xchg
adc
fisubr
dec
aaa
jbe
out
icebp
mov
jg
call
dec
ds
mov
pop
(bad)
cwde
dec
lods
cs
and
sub
cld
jmp
addr16
call
mov
jge
out
pop
aaa
or
push
(bad)
(bad)
(bad)
dec
mov
or
sub
mov
add
cmps
cmp
inc
ds
mov
inc
mov
or
xchg
add
push
mov
inc
ja
scas
mov
sbb
sub
or
stos
mov
inc
or
mov
cwde
inc
(bad)
(bad)
(bad)
jg
mov
test
hlt
aas
mov
and
js
pop
push
inc
xor
cld
call
jecxz
jl
inc
jmp
stos
jb
jl
outs
cwde
outs
cld
jmp
sar
cwde
xchg
push
xchg
into
sub
out
test
into
cmc
mov
call
push
fdivr
in
test
lock
out
in
push
inc
inc
xchg
or
jb
xor
mov
(bad)
pop
sbb
adc
imul
out
test
mov
ret
fisubr
mov
sbb
xchg
cs
sub
sbb
aas
clc
mov
jg
sar
inc
lahf
pushf
cmp
push
scas
pop
imul
imul
repz
adc
cli
cwde
cmp
xchg
jmp
mov
shl
(bad)
(bad)
(bad)
dec
push
cli
inc
push
inc
(bad)
mov
push
jge
xchg
mov
pop
or
fsincos
inc
jmp
(bad)
call
pusha
(bad)
pop
into
jbe
mov
ret
outs
xchg
(bad)
(bad)
(bad)
call
mov
dec
cs
movs
sub
add
ror
push
fiadd
cs
call
cld
pushf
sti
or
lods
and
push
xlat
dec
retf
push
jae
cmp
(bad)
mov
cmp
and
std
es
enter
fcomip
jg
xchg
(bad)
fdiv
mov
pop
sub
and
inc
(bad)
(bad)
(bad)
call
cmps
jae
xchg
(bad)
test
call
test
push
test
mov
sub
xchg
push
(bad)
(bad)
(bad)
inc
dec
or
inc
xchg
in
in
jmp
sub
xchg
adc
es
pusha
sbb
ins
lods
sub
dec
(bad)
(bad)
(bad)
call
fidivr
imul
mov
imul
shr
bnd
jmp
adc
mov
xchg
jns
mov
cs
pop
(bad)
popf
addr16
mov
(bad)
jmp
rcl
fcomp
test
mov
push
cld
sub
pop
sbb
jp
lea
sub
scas
adc
sub
cld
and
push
shr
push
xchg
pusha
cli
stos
inc
das
je
(bad)
(bad)
call
cs
aam
add
(bad)
retf
std
jns
aad
dec
dec
xchg
(bad)
xchg
or
cmps
test
(bad)
(bad)
dec
push
std
and
ins
outs
xor
sar
inc
add
dec
sbb
cmp
inc
pop
rol
mov
call
popa
dec
leave
adc
push
nop
test
jns
adc
xchg
test
inc
pop
mov
cdq
mov
(bad)
(bad)
(bad)
cmp
adc
and
imul
jmp
das
sub
mov
fcomip
(bad)
(bad)
fimul
sub
jmp
push
sub
sub
(bad)
inc
jne
scas
(bad)
pop
or
push
jmp
ins
push
test
ret
(bad)
dec
jmp
outs
out
(bad)
clc
shr
mov
clc
jmp
sub
outs
jb
imul
mov
pop
in
loop
outs
retf
lods
loop
sti
jmp
jmp
mov
pop
hlt
mov
inc
cs
cmp
aam
sub
xchg
sub
fimul
fidiv
push
jle
scas
retf
jno
pop
pop
mov
(bad)
(bad)
inc
loop
es
retf
or
sub
push
loop
pusha
sub
cmps
push
(bad)
jg
(bad)
stc
cmp
retf
retf
sub
stos
movs
mov
xchg
jo
fdivr
(bad)
(bad)
fcmovnbe
loope
lods
jecxz
sahf
add
mov
fimul
int3
popa
lods
lods
mov
mov
push
(bad)
(bad)
(bad)
jmp
iret
ss
dec
sub
cmp
or
cmp
daa
inc
adc
inc
jne
jmp
(bad)
xor
aas
dec
aad
mov
cmps
jmp
push
xor
in
imul
add
inc
ins
imul
push
pop
push
sbb
cmp
inc
fcom
lea
hlt
mov
or
pop
lock
(bad)
mov
cdq
cmp
xchg
pop
cmp
(bad)
fisttp
test
inc
or
push
test
xor
rcl
lahf
ss
inc
sub
das
mov
and
stos
cmp
dec
push
sub
sub
sub
aaa
cld
pop
gs
adc
jb
sub
jmp
(bad)
cdq
es
lock
push
push
push
and
push
iret
fsub
(bad)
enter
std
jmp
fimul
fisub
pop
ss
cwde
ficomp
int
cmp
fisttp
loope
(bad)
inc
push
pop
push
dec
push
out
pop
fistp
cmp
or
(bad)
(bad)
call
cs
test
push
int
pop
dec
push
push
xor
pop
ret
std
push
mov
adc
jmp
fidiv
xor
ins
sbb
pop
imul
(bad)
dec
inc
sti
(bad)
mov
push
mov
xor
adc
mov
imul
dec
mov
mov
jmp
mov
jmp
mov
int
sbb
hlt
sbb
into
and
cmp
sub
(bad)
fcomip
push
sub
mov
dec
cmps
jge
lods
loope
mov
and
xor
sbb
(bad)
dec
mov
ins
and
jecxz
loop
pop
js
push
fdivr
(bad)
mov
push
mov
cmps
mov
jmp
fcomip
jmp
mov
push
inc
call
xor
data16
mov
inc
mov
mov
sub
xchg
pop
popa
mov
out
mov
dec
test
dec
pop
dec
sbb
mov
mov
fld
dec
(bad)
mov
test
sahf
retf
jo
fwait
mov
cmp
push
mov
(bad)
stos
adc
icebp
jg
adc
or
ins
popf
sub
push
or
add
mov
scas
call
sub
fs
sti
push
jbe
adc
(bad)
(bad)
call
push
les
sahf
xchg
ror
loope
test
dec
push
cmp
push
push
scas
imul
cs
fidiv
cmps
out
cs
mov
cmps
int
out
aam
mov
sar
jmp
retf
pop
sub
popa
xchg
pop
aam
pop
cmp
loop
cli
push
dec
sbb
(bad)
out
mov
mov
aam
jnp
jae
mov
les
xor
ins
cmp
(bad)
(bad)
(bad)
fistp
inc
sbb
mov
sahf
jmp
pop
scas
lods
lahf
test
pop
inc
ds
(bad)
fcomip
call
mov
adc
jno
adc
dec
out
pop
pusha
es
sub
lahf
xchg
sub
stos
mov
out
ret
(bad)
jg
sub
sub
mov
ins
adc
jg
loop
dec
mov
and
or
(bad)
inc
call
ret
cmp
loope
sub
cmp
add
outs
int
dec
(bad)
(bad)
(bad)
call
cs
cs
inc
inc
jg
ss
call
mov
imul
jmp
dec
test
cmp
sub
pop
loop
or
cmps
retf
push
push
les
cld
xchg
cmp
in
movs
add
adc
aas
(bad)
call
fwait
stos
inc
cwde
sub
pop
(bad)
pop
sub
sub
mov
outs
mov
mov
retf
scas
push
gs
int
inc
scas
dec
stos
sub
arpl
scas
jae
das
mov
fwait
scas
inc
retf
add
pop
mov
mov
ss
popa
mov
mov
or
and
sub
call
dec
inc
jg
fidivr
out
xchg
int
cmp
push
rcr
(bad)
(bad)
(bad)
call
es
sub
iret
stos
xor
sub
mov
fdivr
dec
nop
imul
mov
into
scas
nop
adc
cmp
xchg
xor
test
jb
inc
addr16
or
pop
cld
mov
mov
jae
xor
push
adc
stos
(bad)
inc
mov
mov
jmp
daa
inc
cmp
jnp
mov
(bad)
push
stos
(bad)
pop
mov
(bad)
out
imul
cmps
dec
xchg
push
(bad)
dec
scas
jno
repz
or
mov
inc
adc
add
aad
lahf
adc
call
sbb
add
popf
sub
stos
mov
mov
mov
(bad)
jb
(bad)
(bad)
jmp
das
adc
adc
(bad)
push
or
mov
pop
ror
sti
aad
jg
(bad)
(bad)
out
imul
mov
iret
(bad)
ins
call
(bad)
(bad)
(bad)
call
xor
push
jge
fidivr
push
xchg
aam
and
push
mov
retf
mov
(bad)
call
fucomp
add
cs
mov
lods
dec
mov
test
cmp
jg
(bad)
in
pop
out
mov
jmp
cdq
dec
mov
call
(bad)
(bad)
(bad)
jmp
mov
aam
gs
or
sub
cmp
cmp
cwde
xchg
and
clc
clc
(bad)
(bad)
(bad)
jmp
imul
retf
stc
add
aad
add
imul
movs
(bad)
mov
stos
mov
retf
dec
push
fsubr
push
test
scas
movs
or
(bad)
inc
mov
lds
xor
pushf
lods
lods
ins
fwait
push
adc
fwait
inc
(bad)
call
adc
scas
or
push
jle
jmp
pop
es
push
pop
ss
push
xor
call
inc
jmp
mov
add
cmp
js
adc
add
imul
sub
inc
aam
pop
inc
push
add
jmp
dec
movs
cmp
push
mov
(bad)
cli
sbb
jg
jle
dec
inc
xor
adc
fild
jne
mov
(bad)
(bad)
jmp
je
push
mov
jb
jns
mov
inc
sbb
jne
add
imul
mov
imul
test
sti
jne
xchg
push
pop
mov
mov
pop
jp
xor
(bad)
(bad)
push
pop
add
mov
mov
jne
fild
xor
mul
(bad)
(bad)
(bad)
sti
mov
imul
je
mov
mov
imul
and
lods
and
ss
mov
call
add
jmp
cmp
adc
mov
cld
xor
sub
inc
test
mov
and
jbe
fs
xchg
xor
mov
(bad)
dec
jne
(bad)
cmp
ret
ja
popa
dec
inc
xor
xor
mov
(bad)
dec
cdq
stos
mov
sbb
imul
div
loope
mov
(bad)
bound
movs
jl
neg
push
(bad)
sub
(bad)
mov
mov
mov
js
sti
(bad)
dec
mov
fwait
imul
test
loope
(bad)
cmp
std
push
stos
mov
(bad)
(bad)
(bad)
in
out
sub
sub
das
sub
jmp
dec
fcmovu
mov
mov
jle
mov
and
xor
jbe
into
int3
in
daa
mov
(bad)
(bad)
(bad)
jmp
clc
call
mov
loopne
ja
arpl
(bad)
into
sub
test
mov
or
push
or
leave
jmp
popf
jnp
mov
or
xor
mov
neg
mov
push
(bad)
jnp
jmp
std
js
pushf
test
loopne
sub
enter
jecxz
sbb
push
sbb
stos
xor
sub
call
sub
cld
cs
call
fdivr
dec
sub
fcom
dec
sub
repnz
les
dec
lods
call
js
sub
outs
dec
sub
imul
movs
xor
arpl
push
(bad)
fist
adc
or
pop
pop
jmp
imul
jmp
push
ss
mov
fdivr
mov
imul
hlt
lea
stc
test
clc
sar
dec
mul
retf
pop
sahf
jmp
cs
inc
and
stos
shr
cmc
inc
lods
jg
cmp
fisttp
fidiv
call
or
jne
inc
shr
inc
jmp
jmp
test
mov
std
inc
das
or
cmp
mov
fisubr
scas
inc
adc
pop
lock
cli
jbe
arpl
xor
into
or
idiv
jmp
jmp
jmp
adc
ins
sub
shr
push
jmp
mov
je
sub
movs
jae
inc
in
cmp
xchg
mov
sub
mov
add
inc
and
sub
cmp
stos
inc
push
and
push
cs
mov
je
gs
call
ss
inc
popa
ret
loope
loopne
dec
sub
mov
cmp
mov
test
mov
mov
mov
mov
sar
jo
push
pop
clc
sahf
lea
sbb
mov
cmps
bound
xor
xchg
enter
jae
jg
sar
sub
mov
push
sub
mov
jae
adc
or
add
enter
lods
mov
jg
inc
in
dec
test
jge
(bad)
call
sub
call
sti
call
aam
in
sbb
int
dec
cwde
enter
rol
push
mov
test
or
es
and
bound
or
(bad)
(bad)
mov
dec
pop
fs
mov
inc
jnp
into
mov
or
jge
push
jg
stos
call
(bad)
sub
xor
xchg
xor
adc
xor
xor
dec
xor
xor
(bad)
inc
outs
mov
mov
(bad)
(bad)
(bad)
(bad)
fcom
cld
jg
jo
jnp
pop
jge
stos
push
push
fdivr
stos
jle
jmp
iret
out
in
push
(bad)
(bad)
(bad)
inc
mov
lahf
xchg
cmc
mov
pop
sub
jmp
jecxz
adc
test
jmp
call
push
stc
mov
pushf
test
nop
add
pusha
call
xchg
jp
pushw
fsubr
xchg
xor
pop
inc
inc
xchg
pop
aam
jnp
(bad)
(bad)
jmp
jmp
out
out
add
cmp
loope
adc
inc
inc
(bad)
retf
inc
(bad)
stos
pop
add
pop
lods
repz
cdq
lds
or
mov
add
rol
call
(bad)
(bad)
jmp
ja
inc
cmps
cli
dec
adc
cmp
not
adc
aad
(bad)
(bad)
jmp
popf
movs
sub
xor
imul
ja
inc
sbb
call
retf
(bad)
jg
pusha
loop
fcmovb
call
push
and
(bad)
(bad)
jmp
xchg
mov
pop
mov
inc
mov
(bad)
mov
cmps
dec
sub
les
mov
mov
loopne
aad
xchg
mov
(bad)
inc
lods
les
sub
pop
dec
adc
add
lods
mov
jg
push
out
scas
mov
int
push
dec
inc
mov
sbb
sbb
movs
stos
(bad)
(bad)
(bad)
call
mov
fcmovbe
push
push
mov
xor
retf
push
out
or
pop
out
jmp
jmp
and
or
mov
cmp
xchg
mov
test
mov
dec
popf
scas
mov
(bad)
call
add
movs
int
adc
mov
lods
mov
daa
cwde
and
xchg
(bad)
(bad)
mov
or
xchg
add
call
inc
sub
pop
xchg
fidivr
(bad)
fwait
(bad)
(bad)
push
out
jne
xchg
mov
movs
mov
repnz
(bad)
(bad)
(bad)
inc
retf
popa
and
xchg
and
jae
pop
fcmovnu
jp
(bad)
fs
dec
or
(bad)
xchg
(bad)
(bad)
push
inc
push
lods
pop
xlat
lea
dec
lods
lods
retf
mov
mov
test
clc
inc
or
outs
das
push
popf
aaa
jmp
fist
push
jbe
jmp
sub
fcom
fist
jl
neg
(bad)
(bad)
call
jbe
xchg
push
mov
xor
sti
pop
add
mov
mov
or
push
pop
cmps
mov
dec
lock
jmp
rol
sub
imul
mov
pop
in
call
mov
arpl
ins
imul
retf
(bad)
xchg
adc
inc
popa
shl
xchg
jg
push
jne
daa
fsubr
push
xchg
rcl
(bad)
jle
stos
mov
(bad)
pop
add
(bad)
jg
mov
adc
sub
adc
cmp
push
adc
mov
jae
aaa
pop
enter
add
inc
sti
fcmovu
pop
std
cmp
rcr
pop
adc
outs
call
jmp
fistp
pop
xchg
mov
mov
xor
(bad)
lock
mov
call
cld
call
sbb
mov
dec
add
inc
or
das
out
jmp
dec
out
add
xor
dec
outs
dec
dec
jecxz
(bad)
call
popf
out
ja
inc
sub
adc
movs
nop
test
loopne
ds
(bad)
push
addr16
stos
(bad)
mov
in
xchg
inc
add
mov
cwde
adc
sbb
pop
data16
call
pushf
xchg
mov
arpl
mov
loopne
test
mov
(bad)
out
test
sbb
stos
pop
call
adc
push
push
movs
xchg
dec
sub
push
hlt
movs
sar
(bad)
push
std
dec
xor
sub
push
mov
adc
enter
push
ins
lods
sub
imul
mov
in
stos
mov
jno
(bad)
test
mov
or
xor
mov
out
push
jae
aaa
scas
es
push
xchg
inc
xor
arpl
iret
cmp
push
test
(bad)
jmp
imul
xchg
into
adc
jmp
dec
imul
mov
stos
and
fwait
imul
push
les
ins
aad
das
jge
cwde
xor
add
fisttp
mov
add
mov
(bad)
(bad)
(bad)
jmp
sbb
fsubr
fs
jmp
mov
sub
mov
cmps
(bad)
(bad)
(bad)
dec
xor
fcmovnu
mov
pop
xor
cmps
or
or
test
into
mov
enter
arpl
mov
ss
lods
(bad)
jg
(bad)
stc
jle
cmp
cmps
add
jmp
stos
into
pop
rol
cmp
in
push
mov
xor
out
sub
or
loop
test
iret
(bad)
(bad)
(bad)
dec
dec
mov
dec
ficom
sub
xor
ss
stos
div
mov
test
xchg
call
jmp
mov
imul
lods
dec
ss
aaa
imul
pop
ret
and
dec
mov
cmps
repnz
xchg
sbb
push
daa
xor
and
pop
outs
mov
(bad)
dec
adc
scas
pop
adc
mov
pop
lods
inc
sub
clc
push
adc
lock
retf
mov
cs
(bad)
call
mov
mov
xchg
stos
movs
ss
div
xor
jmp
test
cmps
adc
clc
idiv
dec
cmp
push
popf
cmps
add
call
jmp
adc
xor
ins
xchg
scas
mov
(bad)
pop
add
xchg
test
outs
cld
push
call
data16
sbb
push
push
in
lods
jp
xchg
xchg
sub
pop
cs
dec
outs
movs
sbb
mov
inc
mov
call
or
mov
jmp
call
pop
outs
fcomip
(bad)
call
sbb
push
pushf
pop
stos
je
push
mov
sub
add
dec
jmp
test
loopne
stc
out
xchg
ja
xchg
dec
jb
mov
inc
out
(bad)
xlat
sbb
jp
call
xchg
sbb
imul
enter
jge
imul
xchg
sub
icebp
aaa
adc
les
nop
push
jge
test
(bad)
jg
add
popf
clc
xchg
test
mov
jp
mov
jg
(bad)
mov
xor
mov
and
(bad)
(bad)
dec
sbb
pop
cmp
sbb
call
dec
out
stos
inc
retf
jge
push
aaa
xor
or
sahf
inc
and
sub
mov
nop
cwde
scas
ja
movs
cmps
mov
pop
adc
lock
(bad)
mov
adc
and
(bad)
dec
push
pop
loopne
ins
mul
div
call
dec
jmp
or
or
stos
pop
loopne
mov
retf
call
(bad)
fbld
dec
scas
call
add
push
xor
test
jmp
xor
sub
loope
test
mov
aam
mov
push
div
aad
xchg
std
retf
sub
(bad)
movs
scas
xor
push
out
fsubr
pop
in
call
jmp
pop
loopne
inc
push
ins
mov
outs
xor
popf
pop
div
push
movs
pop
call
pop
(bad)
(bad)
mov
push
fimul
test
xor
mov
xor
mov
retf
call
cld
jmp
and
xchg
outs
test
adc
fwait
fs
add
push
pusha
push
(bad)
(bad)
(bad)
dec
inc
fucomp
repz
inc
iret
ss
sbb
lea
sub
mov
daa
das
xchg
lods
cmp
mov
xor
scas
(bad)
pop
cli
in
retf
shr
inc
popf
addr16
mov
jmp
(bad)
call
(bad)
xchg
outs
cs
add
into
aam
or
sub
jecxz
test
sbb
loop
sbb
lods
mov
lods
mov
push
test
mov
jecxz
pop
pop
sbb
ins
add
mov
scas
call
or
(bad)
(bad)
jmp
mov
int
xchg
outs
jbe
cmp
imul
ja
jbe
xchg
push
pop
ins
cli
call
sahf
ficomp
out
ja
movs
icebp
sub
dec
mov
cmp
inc
(bad)
(bad)
jmp
test
ss
mov
das
ins
dec
ror
adc
aad
jge
mov
or
scas
mov
sbb
jecxz
xchg
mov
jae
ins
push
cmp
sub
xor
mov
xchg
test
jo
push
lock
test
dec
jno
dec
mov
(bad)
(bad)
mov
dec
lods
jmp
sub
popf
push
push
push
jbe
fstp
xchg
push
xor
shr
std
adc
mov
shr
mov
sbb
(bad)
out
mov
lods
mov
movs
mov
push
jo
mov
sbb
xchg
jecxz
hlt
inc
mov
jg
fs
aaa
test
(bad)
(bad)
(bad)
mov
mov
inc
icebp
xor
or
(bad)
nop
mov
sub
dec
xor
jge
stos
xor
(bad)
(bad)
(bad)
push
cmp
jg
lock
fmul
fs
add
xor
sahf
mov
(bad)
mov
mov
sbb
ds
mov
cmp
sbb
pop
scas
sbb
(bad)
lock
(bad)
jmp
xchg
cs
and
xor
xor
mov
mov
sahf
mov
adc
cs
sbb
ds
js
test
test
aaa
add
sahf
jl
push
sub
add
pop
test
push
dec
inc
push
mov
add
cs
add
mov
in
xor
pop
lock
sub
sahf
jmp
mov
(bad)
out
mov
call
hlt
repnz
in
(bad)
outs
fstp
mov
lods
xchg
cwde
or
lock
mov
lods
daa
(bad)
fistp
mov
jb
adc
test
ds
stos
(bad)
(bad)
mov
or
(bad)
inc
mov
es
xor
sahf
dec
sub
dec
fistp
jg
mov
in
aam
xchg
cs
cwde
ja
sahf
mov
mov
or
adc
or
dec
sub
das
in
mov
(bad)
test
cmps
xchg
adc
retf
(bad)
cmp
data16
call
pop
inc
add
mov
(bad)
ins
cli
(bad)
(bad)
cmp
(bad)
mov
xor
les
inc
in
retf
push
xchg
cwde
cwde
xor
mov
in
mov
shr
(bad)
aaa
adc
scas
add
pop
push
cmps
cs
pop
and
in
(bad)
dec
pop
sbb
pushf
nop
scas
mov
or
mov
(bad)
call
pop
push
movs
stos
into
movhps
cmps
les
(bad)
imul
call
sti
push
je
mov
adc
mov
sbb
jo
(bad)
(bad)
push
cwde
cmps
aam
pop
xchg
aam
jecxz
loopne
xchg
dec
mov
aaa
cld
mov
loopne
arpl
mov
mov
ins
pop
sbb
or
xchg
mov
pushf
mov
cmc
test
cmp
imul
cmp
mul
(bad)
cmp
fsubr
retf
repz
sbb
dec
out
stos
inc
cs
jl
loopne
mov
sub
mov
mov
inc
dec
pusha
mov
xchg
mov
js
ror
rep
cmp
ret
push
jae
into
xchg
dec
lahf
mov
fild
out
sete
mov
aam
(bad)
cmp
sbb
into
loopne
iret
fist
sub
mov
pushf
cmc
(bad)
(bad)
(bad)
call
hlt
jmp
sub
mov
sbb
mov
in
pushf
jp
pop
mov
(bad)
fbstp
loopne
sub
mov
test
fdivr
in
movs
aas
xor
mov
test
out
(bad)
(bad)
(bad)
jmp
sub
cmp
fisttp
clc
(bad)
stos
stos
add
(bad)
(bad)
(bad)
push
mov
push
neg
icebp
cwde
mov
cmp
sbb
loop
ret
mov
jns
xchg
(bad)
ficomp
cli
jmp
sub
jp
lahf
cs
dec
in
lea
jl
sub
push
sub
push
scas
out
jmp
call
mov
test
mov
lods
cld
sti
repnz
xlat
dec
popf
loop
fsub
lock
adc
les
(bad)
(bad)
push
xchg
xchg
jl
or
xchg
cmp
pop
fs
jmp
sub
icebp
jnp
pop
mov
jmp
imul
cwde
loope
retf
scas
data16
adc
jmp
outs
cs
sub
cdq
mov
push
movs
mov
jmp
(bad)
scas
retf
bound
sub
ins
iret
dec
imul
(bad)
jmp
xchg
and
mov
ss
ss
iret
mov
jmp
(bad)
out
mov
or
pusha
or
in
nop
sbb
mov
into
(bad)
(bad)
(bad)
inc
lods
sub
jmp
cmp
adc
stos
cmp
sbb
out
mov
mov
inc
(bad)
(bad)
(bad)
(bad)
in
out
addr16
mov
mov
repnz
adc
sbb
idiv
inc
dec
es
mov
inc
jle
inc
sbb
(bad)
call
push
outs
push
(bad)
fs
pop
ret
push
push
mov
or
test
movs
(bad)
jg
(bad)
and
scas
mov
mov
jg
cmps
repz
(bad)
out
loope
(bad)
(bad)
call
xlat
ret
add
push
sar
retf
xor
das
stos
shl
(bad)
(bad)
(bad)
jmp
jmp
sub
cmp
xchg
inc
dec
call
xor
dec
lahf
and
stos
retf
mov
pop
cld
push
cld
lock
daa
cld
push
inc
dec
ret
push
jne
in
loope
pop
sbb
(bad)
call
fnstcw
lock
icebp
xor
xchg
cmp
(bad)
(bad)
aas
loopne
pop
xchg
push
sbb
dec
imul
add
add
xchg
mov
mov
(bad)
in
jg
(bad)
(bad)
jmp
dec
push
inc
mov
mov
push
mov
adc
ret
push
(bad)
jae
cmps
pop
data16
(bad)
(bad)
push
xor
add
in
push
xor
and
and
and
fcomp
inc
(bad)
pop
aas
push
xchg
sbb
mov
cmp
jmp
or
fsubr
mov
jg
gs
jle
jp
lahf
out
popf
or
adc
or
dec
xchg
mov
(bad)
mov
push
int3
or
sbb
inc
xchg
and
mov
pop
shl
fimul
dec
or
mov
cmp
ins
(bad)
(bad)
(bad)
std
(bad)
(bad)
add
icebp
popa
mov
cmp
add
dec
pop
push
arpl
xchg
pop
dec
sub
mov
push
in
and
gs
sub
sub
inc
cmp
scas
(bad)
(bad)
(bad)
jmp
aad
xor
call
mov
leave
xchg
repz
xor
adc
call
sti
ins
sti
(bad)
(bad)
(bad)
inc
push
mov
pop
xchg
daa
call
repnz
retf
test
test
dec
sub
(bad)
(bad)
(bad)
jmp
jae
call
xor
sub
or
jmp
(bad)
(bad)
(bad)
(bad)
cld
cli
les
jne
xlat
add
mov
cs
int
jae
scas
(bad)
(bad)
(bad)
jmp
jl
cmps
shl
out
popf
mov
scas
test
test
mov
aad
dec
aaa
jmp
int
push
fistp
daa
enter
push
inc
scas
jns
fs
sbb
lods
dec
mov
sub
(bad)
(bad)
jmp
add
(bad)
dec
scas
push
imul
stos
and
popf
call
xchg
push
cmp
aaa
nop
lds
retf
or
push
cli
sub
adc
sub
in
adc
loope
jmp
jl
jbe
out
pop
xchg
add
inc
out
adc
add
(bad)
(bad)
(bad)
stc
retf
fsub
mov
jecxz
mov
in
push
loope
shr
push
(bad)
retf
(bad)
(bad)
inc
push
cmp
sub
push
sbb
not
(bad)
or
sub
call
fbstp
mov
jmp
dec
out
push
cs
mov
jmp
imul
lock
je
out
pop
inc
xchg
jmp
(bad)
scas
and
je
imul
adc
neg
movs
jbe
or
mov
or
mov
mov
fnstsw
outs
push
ret
(bad)
call
mov
adc
outs
scas
into
xchg
out
das
outs
lods
jbe
jmp
lods
in
push
(bad)
(bad)
(bad)
call
mov
popf
mov
xor
jb
jge
push
lds
(bad)
jmp
or
sub
cmp
add
push
mov
dec
xor
xchg
enter
push
xor
inc
enter
jmp
or
jmp
inc
mov
adc
(bad)
dec
mov
leave
scas
fwait
rcr
adc
out
mov
(bad)
cwde
xchg
lods
mov
(bad)
(bad)
(bad)
jg
arpl
cdq
or
mov
or
movs
mov
mov
mov
push
lock
mov
enter
into
adc
outs
lock
xor
or
test
sbb
dec
in
cli
sbb
mov
test
(bad)
call
scas
jg
movs
or
push
mov
or
mov
and
xor
cmp
retf
xor
(bad)
(bad)
(bad)
inc
fidiv
cs
push
and
(bad)
or
fmul
imul
shr
xchg
jg
in
xor
jp
jmp
or
cdq
lea
(bad)
(bad)
jmp
out
and
out
mul
and
call
cli
fsubrp
xor
leave
push
jmp
cs
push
ins
add
aam
sub
fwait
cmp
jmp
and
lock
scas
lahf
outs
push
enter
data16
mov
add
cmp
push
jmp
retf
pusha
pushf
dec
cmp
fwait
mov
(bad)
das
mov
fsub
adc
xlat
bound
(bad)
ret
(bad)
jg
dec
cwde
inc
pop
sbb
(bad)
and
pop
xor
(bad)
(bad)
mov
cmp
cli
rol
cmp
sub
inc
mov
(bad)
std
mov
(bad)
mov
in
mov
pop
xor
retf
sbb
fwait
(bad)
clc
(bad)
cmp
inc
xchg
mov
(bad)
std
(bad)
(bad)
call
push
retf
pop
sub
mul
push
and
arpl
dec
std
mov
aas
enter
sti
das
cli
cmp
ror
jno
icebp
lahf
mov
adc
inc
into
stos
(bad)
(bad)
push
mov
js
ds
pop
mov
dec
push
inc
dec
push
daa
inc
and
int3
and
xchg
dec
jg
(bad)
mov
movs
int
dec
dec
or
pop
xchg
ret
enter
(bad)
sti
jg
or
movnti
repz
inc
pushf
push
adc
pop
cmp
sbb
sbb
(bad)
(bad)
je
rcr
and
mov
(bad)
mov
inc
mov
std
sub
shl
out
retf
(bad)
push
mov
or
(bad)
out
xlat
test
ffreep
and
cmps
xchg
xchg
xlat
and
mov
push
adc
push
stc
dec
jb
retf
and
adc
enter
add
pushf
(bad)
cld
(bad)
std
(bad)
nop
and
adc
jb
lea
movs
mov
push
sti
iret
fs
or
cwde
int3
xor
add
pop
cmp
mov
sbb
mov
dec
fadd
fiadd
ret
(bad)
jg
dec
adc
(bad)
jge
add
mov
inc
pop
pop
jge
add
add
push
movs
fsub
retf
jge
or
int
and
sbb
imul
sbb
sbb
jge
cwde
cmc
fst
sub
adc
mov
ss
or
(bad)
push
stos
arpl
fcom
inc
jnp
ror
outs
or
arpl
test
add
(bad)
or
pop
push
pop
fstp
fimul
bound
out
ins
dec
stc
mov
sub
ds
dec
xor
stos
xor
push
stos
xor
ss
in
call
loopne
mov
mov
and
jmp
ror
sub
mov
jb
xchg
inc
mov
call
(bad)
call
dec
aad
loope
loope
into
sub
mov
daa
into
fdivr
sbb
mov
(bad)
inc
into
sbb
sbb
imul
fld
sbb
push
scas
add
stos
mov
test
sub
push
scas
push
fild
scas
push
and
and
imul
call
dec
les
sub
outs
test
call
sub
mov
mov
and
mov
(bad)
push
in
out
and
cmps
test
nop
lock
mov
int3
inc
push
call
aas
out
dec
xchg
cmp
mov
jmp
cli
fisttp
push
sub
movs
jecxz
add
mul
sub
pop
ds
mov
(bad)
(bad)
dec
mov
or
stos
sub
pop
pop
inc
loopne
cmp
xchg
mov
xor
(bad)
(bad)
dec
call
gs
call
std
pop
adc
jp
(bad)
out
test
test
mov
push
call
stos
(bad)
push
ss
(bad)
dec
dec
shl
retf
sub
movs
scas
sahf
sub
sahf
push
dec
retf
sub
mov
call
pop
lock
add
shr
popf
pop
dec
xor
push
lahf
(bad)
(bad)
(bad)
push
xor
mov
sub
push
cmp
and
push
fistp
push
call
mov
imul
int
pop
adc
push
inc
jbe
sub
in
(bad)
(bad)
(bad)
dec
iret
jmp
push
xor
mov
xor
rcl
inc
fadd
test
(bad)
jmp
int
jmp
cmp
sbb
loop
das
or
ins
ret
jmp
mov
add
pusha
or
or
sar
(bad)
jmp
lods
jl
mov
xor
push
and
pushf
xor
push
loopne
loopne
mov
jne
jmp
(bad)
call
cmp
or
xor
dec
add
ss
loop
or
lock
(bad)
dec
shr
or
inc
pop
mov
fstp
mov
loope
sub
arpl
sti
cmp
fild
mov
sbb
outs
mov
lods
in
dec
ja
ins
sub
loop
outs
cli
(bad)
mov
dec
push
js
push
push
jbe
outs
into
scas
scas
mov
(bad)
(bad)
(bad)
jmp
gs
je
hlt
in
or
jns
mov
outs
add
loope
into
push
ja
xor
(bad)
(bad)
(bad)
fucomp
mov
in
push
push
fldcw
loop
loop
aaa
mov
outs
retf
mov
(bad)
mov
lods
scas
jns
ins
je
cmp
lahf
inc
fild
jl
sbb
(bad)
(bad)
(bad)
call
xor
out
add
outs
dec
jmp
js
mov
fldenv
pop
retf
(bad)
(bad)
(bad)
call
outs
and
dec
mov
test
pop
out
loope
pop
dec
xor
xor
mov
pop
movs
mov
out
xchg
ins
jmp
stos
nop
or
(bad)
(bad)
(bad)
out
mov
mov
in
fst
(bad)
inc
fwait
in
enter
(bad)
jecxz
pop
push
fwait
(bad)
(bad)
(bad)
inc
jl
sti
inc
out
cs
mov
repz
adc
mov
push
call
enter
mov
test
push
lods
fst
jb
mov
(bad)
(bad)
jle
pop
cmp
sub
jmp
das
in
pop
adc
inc
stos
jb
loopne
push
cli
(bad)
out
mov
jne
jl
popf
cmp
arpl
xor
out
sbb
jmp
(bad)
(bad)
jmp
sbb
stos
adc
pop
retf
popa
stos
iret
out
scas
je
stos
sub
adc
sub
test
(bad)
in
cmp
iret
jg
cmp
sub
iret
inc
fs
mov
aas
push
jmp
stos
sti
mov
and
dec
js
jl
sub
ret
pusha
inc
sahf
add
in
scas
std
adc
(bad)
jmp
call
xor
xchg
dec
ror
popf
jg
pop
(bad)
jg
(bad)
fild
pop
stos
inc
inc
fwait
ret
aam
outs
xchg
stos
gs
(bad)
sub
(bad)
(bad)
(bad)
inc
and
mov
mov
in
inc
test
(bad)
loop
lods
mov
mov
jae
(bad)
(bad)
(bad)
(bad)
jns
xchg
fwait
(bad)
cmp
rcr
clc
pop
out
xchg
in
aaa
dec
inc
popa
dec
in
lods
(bad)
jmp
cli
ror
xchg
mov
and
jl
lods
pushf
lods
inc
mov
call
(bad)
(bad)
jmp
inc
fisub
ds
dec
call
scas
fadd
(bad)
test
(bad)
(bad)
fisttp
arpl
dec
jmp
mov
pop
popa
or
mov
je
sub
es
int
mov
cmps
out
stos
pop
dec
dec
into
sbb
dec
in
mov
std
sub
jmp
(bad)
dec
stos
outs
outs
xchg
cdq
pop
sub
xchg
jmp
retf
nop
scas
push
rol
push
dec
jmp
pop
mov
dec
mov
xchg
(bad)
(bad)
(bad)
mov
cdq
push
test
or
scas
xor
arpl
mov
jmp
(bad)
jmp
sub
out
mov
out
repnz
jno
test
leave
mov
stos
mov
mov
fcomip
(bad)
jmp
jmp
push
mov
call
hlt
mov
idiv
add
mov
ret
push
std
retf
sub
(bad)
(bad)
(bad)
call
ret
jnp
enter
mov
in
or
mov
and
sbb
add
mov
(bad)
(bad)
(bad)
sti
bound
and
ja
push
push
adc
aas
inc
jo
push
add
push
jmp
add
je
scas
aaa
leave
mov
pop
je
inc
cs
jmp
jg
sub
inc
lods
arpl
pop
outs
sbb
push
rcl
pop
pop
outs
mov
sahf
mov
clc
push
cmps
in
jmp
inc
push
fldcw
inc
iret
push
jmp
cmps
cld
aas
ror
aam
aam
sub
std
sub
push
jge
cld
call
in
imul
cmp
or
add
shr
jle
dec
push
and
fcos
(bad)
mov
fmulp
cli
in
test
test
jp
(bad)
mov
jg
(bad)
jmp
sub
mov
mov
sar
mov
and
stos
cmp
movs
ins
mov
dec
(bad)
(bad)
(bad)
call
xchg
jmp
xchg
cmp
xor
nop
pop
std
xchg
retf
or
mov
xor
push
jp
(bad)
(bad)
call
or
in
mov
scas
mov
dec
pop
sbb
jp
in
pop
xchg
(bad)
inc
loopne
pop
push
outs
or
sbb
je
fadd
mov
dec
(bad)
cmp
adc
lods
push
pop
jp
aad
push
(bad)
stc
fs
jmp
out
test
jmp
stos
fistp
jb
dec
mov
cmp
jg
push
sub
into
cs
dec
icebp
cli
cmc
pop
adc
pop
cmc
push
mov
(bad)
(bad)
(bad)
call
aad
jmp
add
retf
mov
push
and
out
xchg
fpatan
add
mov
(bad)
(bad)
(bad)
(bad)
mov
dec
ins
test
lds
stos
push
stos
push
push
add
mov
mov
(bad)
(bad)
jmp
push
jg
push
sub
or
imul
sub
mov
test
sbb
ret
cld
jmp
push
stos
dec
out
mov
pop
and
outs
clc
inc
test
ret
push
mov
jb
bound
mov
pop
xchg
add
jmp
xor
popa
push
mov
fidivr
fwait
inc
scas
lock
xlat
std
mov
lods
std
mov
dec
sub
and
aad
pop
movs
jp
lahf
(bad)
(bad)
call
jb
jp
and
scas
fadd
mov
xor
bound
fs
aad
(bad)
(bad)
inc
pop
xor
fwait
sbb
lahf
push
add
xlat
(bad)
jmp
cli
popa
call
dec
xor
mov
jb
call
and
call
mov
pop
rol
xchg
pop
jmp
call
(bad)
jmp
add
xor
mov
fs
sbb
gs
movs
cmps
(bad)
(bad)
jg
movs
pop
fistp
jmp
je
movs
jb
fdivr
lock
push
(bad)
(bad)
cmp
dec
lods
shr
mov
lahf
fisttp
adc
cmp
pusha
jle
add
(bad)
(bad)
jmp
mov
das
sti
push
mov
adc
cld
ins
jle
das
pop
sub
ret
mov
inc
and
fsubr
test
loope
push
movs
mov
dec
dec
adc
popf
mov
jne
sbb
pop
jo
jecxz
fs
call
sbb
or
cs
and
sub
sbb
(bad)
(bad)
jle
cdq
push
imul
cmp
adc
adc
mov
movs
adc
fwait
inc
(bad)
pop
jg
push
test
add
fcomip
mov
int3
(bad)
(bad)
(bad)
(bad)
jg
inc
mov
add
call
(bad)
std
call
push
bound
scas
in
js
mov
pop
lods
mov
push
frstor
mov
adc
adc
(bad)
jmp
es
mov
movs
retf
dec
jmp
and
je
cmp
hlt
jnp
mov
(bad)
jmp
scas
sub
jmp
(bad)
mov
test
xchg
cmp
dec
mov
lods
data16
call
cli
inc
jb
adc
rcl
xchg
lods
push
test
pop
inc
(bad)
outs
mov
(bad)
pusha
jns
ror
jnp
(bad)
(bad)
(bad)
(bad)
mov
pop
neg
pop
jns
mov
push
push
sub
xchg
mov
(bad)
call
iret
mov
mov
test
in
add
add
(bad)
(bad)
(bad)
dec
mov
dec
or
push
mov
scas
adc
stos
mov
ins
mov
call
mov
mov
scas
pop
cmp
aas
mov
scas
ss
push
sahf
loope
add
mov
repnz
ficomp
pop
loop
pop
lock
mov
fcom
add
movs
pushf
pop
push
add
iret
dec
(bad)
push
sbb
sub
mov
dec
dec
cld
in
in
pop
(bad)
call
(bad)
sub
imul
pop
mov
retf
and
cmp
sub
(bad)
(bad)
(bad)
jmp
jmp
outs
push
fldl2e
dec
imul
aaa
bound
retf
test
aaa
(bad)
(bad)
call
inc
inc
stos
repnz
(bad)
xchg
pop
mov
jecxz
mov
test
dec
mov
test
scas
mov
mov
mov
mov
(bad)
(bad)
mov
clc
call
adc
lock
dec
mov
add
not
mov
sar
jmp
retf
es
sub
or
add
call
cmps
pop
(bad)
sub
outs
test
mov
imul
(bad)
(bad)
(bad)
cli
es
jbe
inc
addr16
mov
pop
inc
shufps
(bad)
out
test
or
call
fs
adc
adc
xchg
and
sub
and
pop
xchg
popa
sub
push
pop
jmp
mov
add
movs
cmp
push
into
sub
adc
rcl
adc
imul
mov
mov
jo
cmps
mov
mov
mov
addr16
in
sub
stos
ins
mov
dec
(bad)
(bad)
(bad)
push
or
dec
add
sub
cs
jp
retf
mov
pusha
push
mov
jmp
scas
jbe
xchg
dec
jecxz
mov
(bad)
dec
(bad)
jno
frndint
pop
adc
(bad)
(bad)
inc
loop
cld
lds
mov
mov
jecxz
outs
sbb
imul
(bad)
fidiv
sbb
pop
imul
scas
inc
cmp
popf
push
cdq
pop
test
sbb
callw
jmp
scas
stos
imul
ror
(bad)
cld
pop
test
dec
in
scas
retf
push
ss
sub
imul
push
je
push
xor
cmp
mov
xchg
pop
add
or
cmp
(bad)
(bad)
(bad)
jmp
test
cmps
je
sbb
or
mov
ins
lds
daa
mov
jmp
(bad)
fcmovnbe
fs
dec
sub
aad
daa
cmp
sub
loope
frstor
bound
push
sub
(bad)
jmp
cld
stos
ins
movs
cmp
lds
fdivr
push
fcom
dec
mov
xor
sub
push
cmps
outs
mov
push
fwait
push
sbb
(bad)
in
outs
dec
jne
and
pop
xchg
fisub
pop
(bad)
xor
cmp
dec
fadd
retf
jb
and
mov
and
bound
idiv
(bad)
cld
mov
mov
ss
sub
cmp
sbb
mov
fisub
or
(bad)
(bad)
jg
jp
xchg
cmp
push
(bad)
sahf
shl
(bad)
popa
jmp
mov
(bad)
(bad)
(bad)
jmp
cmp
xor
pop
push
pop
pop
dec
retf
push
movs
xchg
xchg
inc
(bad)
mov
es
xor
push
(bad)
(bad)
push
stos
cmp
in
jmp
inc
cmp
add
mov
(bad)
inc
mov
imul
not
mov
add
jb
(bad)
(bad)
inc
push
mov
pop
xor
add
cmp
loope
and
add
pop
inc
pop
aaa
add
cmp
xor
dec
lock
xchg
mov
mov
mov
dec
out
ret
mov
xor
jmp
(bad)
jmp
hlt
cli
push
cmp
push
or
sub
pop
cmp
or
xor
xchg
icebp
cmp
jno
fidivr
push
jmp
fisubr
dec
cmp
rcr
(bad)
jmp
inc
jb
test
sub
push
dec
mov
and
je
or
push
sti
inc
pop
sar
xchg
dec
mov
test
or
test
cmp
(bad)
jmp
cmp
imul
dec
imul
(bad)
(bad)
(bad)
(bad)
jmp
cmps
mov
call
sub
jnp
add
or
mov
outs
(bad)
(bad)
call
gs
or
pop
sbb
push
pop
movs
or
call
idiv
cmp
in
mov
das
dec
xor
add
or
xchg
in
add
lds
xor
mov
sar
mov
outs
jns
movs
and
add
add
pop
cmp
test
(bad)
push
xor
inc
and
jge
out
sbb
in
fld
cli
in
sub
test
mov
imul
cld
xchg
(bad)
(bad)
(bad)
call
pop
test
loop
sbb
outs
addr16
fsub
stos
outs
test
scas
test
cmps
jmp
jmp
faddp
adc
rcr
pop
cmps
cmp
xchg
mov
std
(bad)
jg
inc
push
in
movs
into
jns
sbb
cs
mov
pop
push
sub
scas
dec
cli
jl
out
fwait
pop
pop
(bad)
dec
or
pop
xor
cwde
das
cs
scas
push
jno
dec
fisubr
sbb
ins
test
ins
imul
call
jmp
pop
push
mov
mov
retf
dec
cmp
jmp
rcl
jle
push
jp
cli
dec
in
fdivp
in
pop
icebp
dec
ins
push
imul
fisubr
adc
or
sahf
scas
jl
mov
sbb
cmp
fs
lds
mov
cmp
call
cs
adc
(bad)
cmp
dec
xchg
dec
lods
jl
jmp
out
or
into
popa
push
or
outs
jle
push
lock
cmp
sbb
out
add
(bad)
mov
pop
into
retf
mov
push
call
movs
sub
dec
mov
mov
fisttp
rcr
or
test
es
test
mov
jp
and
into
cld
cmp
jecxz
xchg
mov
cld
into
mov
int
inc
xor
xor
cmp
mov
fidiv
(bad)
fimul
loop
mov
pop
ret
push
mov
or
push
sahf
(bad)
loopne
jb
jo
loope
sub
(bad)
mov
cld
test
retf
push
cdq
jmp
jbe
call
cld
push
ds
push
sub
push
or
pop
xchg
adc
jmp
mov
mul
stos
es
stos
xor
or
or
mov
jp
jg
fcomip
jmp
sub
loop
push
ficomp
lods
retf
jp
push
dec
cli
cmp
mov
xchg
push
js
add
mov
add
aad
or
adc
inc
and
push
aaa
mov
mov
cmps
push
adc
xor
xor
mov
(bad)
(bad)
push
repz
or
js
push
outs
loop
mov
mov
sbb
(bad)
(bad)
(bad)
test
dec
cmps
xchg
xchg
out
pop
and
int3
mov
jmp
jp
cmp
(bad)
das
bound
js
fwait
std
dec
enter
push
call
jmp
(bad)
(bad)
fcmove
mov
push
rcr
or
push
iret
adc
push
jmp
int
fnstsw
std
jp
(bad)
(bad)
(bad)
dec
cmp
pop
pop
pop
cmps
and
xlat
pop
adc
dec
jmp
xchg
call
adc
std
sub
and
fs
xchg
xchg
adc
sub
js
(bad)
(bad)
(bad)
jmp
mov
in
sub
cli
sbb
(bad)
iret
inc
sti
and
je
stos
ret
push
sub
test
cmp
leave
fld
(bad)
(bad)
add
mov
pop
pmaxub
in
cdq
inc
scas
cdq
retf
test
(bad)
dec
fsub
dec
push
sub
enter
test
mov
(bad)
jg
(bad)
adc
stos
ins
call
pop
push
stos
int
int3
int3
mov
in
(bad)
jmp
cli
sub
add
push
aam
pop
push
mov
xchg
jmp
test
stos
jbe
fdiv
jne
fbld
mov
sub
scas
icebp
(bad)
(bad)
push
or
in
dec
push
or
mov
ja
ja
or
or
sbb
pop
test
sbb
inc
mov
(bad)
mov
adc
(bad)
fmul
jo
int3
(bad)
(bad)
(bad)
mov
push
fld
sub
adc
xchg
jmp
and
sbb
mov
push
jne
jp
push
or
cmp
sub
inc
enter
(bad)
jmp
jg
inc
xlat
xchg
test
pop
push
xchg
inc
xchg
loope
shl
sub
adc
jecxz
adc
(bad)
(bad)
inc
sti
sub
dec
adc
data16
ror
je
or
stc
je
jmp
dec
out
adc
call
aam
mov
fs
daa
pop
shl
mov
push
dec
ret
xchg
inc
add
inc
(bad)
xor
mov
lods
push
and
xchg
(bad)
(bad)
dec
jmp
outs
in
outs
inc
hlt
js
mov
adc
out
sbb
xchg
push
into
das
outs
or
(bad)
inc
aad
dec
xor
or
fld
stos
xchg
js
mov
mov
(bad)
(bad)
fidivr
outs
icebp
(bad)
ret
pop
jg
hlt
xlat
jg
mov
or
jg
ja
(bad)
call
pop
in
outs
xchg
popf
cmp
dec
test
mov
outs
les
inc
(bad)
mov
int
mov
xchg
outs
xchg
arpl
cmp
push
js
pop
aad
jo
je
inc
les
dec
aad
ja
ins
hlt
add
repz
into
jno
sub
sbb
cmp
mov
aam
ja
inc
inc
sbb
xor
(bad)
push
ret
mov
inc
(bad)
fild
adc
inc
add
repz
adc
or
(bad)
(bad)
(bad)
sti
xor
add
xchg
dec
push
jp
or
inc
fs
test
ja
aam
mov
rcl
adc
(bad)
(bad)
(bad)
call
push
(bad)
cmp
adc
rcr
daa
cs
pop
xor
jmp
xor
jnp
(bad)
jmp
adc
mov
sub
cmp
jno
mov
sub
(bad)
(bad)
jmp
sar
add
stos
outs
fidiv
adc
cld
push
sub
cli
xchg
es
sub
jecxz
out
jmp
(bad)
call
mov
out
mov
rol
into
xchg
mov
mov
leave
mov
(bad)
cmp
push
ins
or
mov
movs
addr16
sub
mov
(bad)
(bad)
out
clc
mov
cwde
jae
push
loop
out
imul
sub
(bad)
(bad)
(bad)
dec
addr16
call
xor
mov
cld
test
test
(bad)
jmp
test
pusha
in
push
pop
mov
dec
sub
mov
xchg
mov
stos
xchg
(bad)
(bad)
(bad)
call
ror
adc
test
ds
clc
sub
xor
sub
jl
jne
inc
xor
xchg
and
jmp
imul
sahf
sub
pop
es
xchg
(bad)
scas
(bad)
push
mov
rol
mov
imul
xor
xchg
cwde
es
dec
sub
mov
pop
and
jnp
adc
fdivrp
ds
retf
stc
jmp
dec
pop
stos
daa
sar
(bad)
inc
dec
push
jns
scas
das
retf
into
bound
mov
(bad)
iret
add
(bad)
call
xchg
adc
imul
sbb
push
enter
(bad)
(bad)
jmp
call
in
push
pop
dec
jle
cli
pop
fisub
fcmovbe
jb
out
pop
and
adc
mov
call
(bad)
or
xchg
imul
clc
imul
(bad)
mov
mov
pop
pop
scas
and
mov
cld
movs
and
xor
(bad)
jmp
mov
in
xor
pop
mov
imul
push
push
mov
mov
pop
xchg
cs
sar
outs
aaa
(bad)
(bad)
(bad)
push
es
or
into
xlat
dec
mov
test
mov
add
call
(bad)
sbb
call
cld
call
push
pop
inc
or
mov
test
stos
sbb
ficom
sbb
nop
gs
faddp
scas
pop
(bad)
push
fistp
retf
pop
test
inc
add
xlat
jmp
mov
mov
xor
pop
fimul
push
das
mov
add
sub
call
call
(bad)
dec
mov
cmp
lods
pop
or
jns
frstor
into
(bad)
(bad)
dec
mov
test
sbb
mov
cdq
sbb
scas
inc
sub
mov
sub
jmp
fisub
in
daa
jbe
out
repnz
pop
nop
ins
cmp
fistp
or
lock
xchg
enter
sub
dec
xchg
stc
and
imul
call
movs
push
es
aad
pusha
lock
mov
adc
retf
jmp
in
push
sbb
loope
jb
(bad)
(bad)
(bad)
dec
push
mov
out
dec
fdivr
mov
mov
dec
in
sbb
and
sbb
(bad)
(bad)
(bad)
jnp
add
adc
sub
stos
jmp
fcom
bound
shl
xchg
mov
sub
imul
iret
adc
(bad)
call
movs
and
test
ja
repnz
pop
jb
scas
mov
fucomi
jg
aaa
jmp
jmp
in
mov
aad
(bad)
(bad)
(bad)
jmp
rep
cli
int
xchg
cmp
cmp
dec
mov
ja
and
(bad)
(bad)
(bad)
mov
test
lods
and
pop
xor
and
stos
or
mov
add
(bad)
(bad)
jmp
popa
mov
stos
sub
jbe
mov
cmp
push
push
xor
push
cli
(bad)
(bad)
(bad)
jmp
adc
jmp
aam
lods
mov
adc
cmps
add
xor
jb
sbb
(bad)
(bad)
(bad)
(bad)
out
enter
xchg
imul
ret
outs
and
sbb
call
imul
mov
inc
mov
adc
into
add
out
ss
sub
(bad)
call
(bad)
hlt
das
or
aam
and
jmp
enter
in
test
mov
push
test
loop
scas
push
imul
mov
(bad)
(bad)
call
lods
outs
jb
inc
lock
movs
rol
cs
je
jmp
in
adc
push
js
mov
sub
and
jo
mov
call
jo
hlt
sub
mov
lds
xchg
cmp
xor
dec
cmps
mov
in
push
(bad)
dec
cmp
pop
and
mov
stos
mov
cmps
cli
retf
cmp
sub
push
cmp
jb
out
stos
pop
(bad)
mov
cmc
rol
jne
mov
push
dec
ror
dec
(bad)
(bad)
(bad)
(bad)
fnstsw
lods
pop
ror
mov
pop
dec
stc
sub
sti
iret
mov
out
loop
stos
dec
mov
mov
inc
imul
jae
(bad)
(bad)
call
fidiv
jl
mov
add
loop
movs
std
sbb
daa
sbb
pop
(bad)
call
fsub
mov
nop
jno
dec
sbb
inc
js
mov
(bad)
(bad)
mov
fisubr
sahf
ss
(bad)
and
mov
ret
fld
xlat
stos
into
loop
sti
popa
mov
and
adc
cmp
add
(bad)
(bad)
(bad)
dec
push
or
cmp
and
cwde
xchg
repz
fcmove
sbb
add
jmp
(bad)
(bad)
(bad)
out
cmp
add
push
xor
push
xchg
in
dec
lods
sbb
jmp
xchg
enter
loopne
xor
jns
pop
jns
rcl
scas
mov
outs
dec
or
push
mov
(bad)
(bad)
jmp
bound
or
xchg
pusha
mov
out
xchg
outs
fwait
outs
mov
lods
inc
xchg
mov
(bad)
stc
inc
mov
movs
pop
adc
mov
mov
out
fs
(bad)
(bad)
call
out
pop
or
adc
mov
pop
pop
retf
cmps
sub
cwde
jns
pop
cld
stos
jbe
xor
and
adc
sub
jns
cmc
(bad)
(bad)
(bad)
(bad)
in
nop
lahf
or
cmp
cmp
stos
call
dec
mov
jmp
stos
inc
cmps
(bad)
(bad)
jmp
es
jmp
dec
cmp
inc
ret
ret
push
mov
imul
cld
scas
jb
sbb
jnp
dec
loop
into
mov
ret
into
xor
retf
ins
clc
xor
inc
adc
sahf
jne
push
and
sbb
cmp
adc
aaa
push
aam
inc
mov
sub
(bad)
fild
sbb
(bad)
fidivr
clc
ss
jne
jecxz
loop
or
pop
mov
lods
(bad)
jmp
call
fpatan
and
fidivr
adc
pop
or
inc
jne
clc
out
ret
inc
pop
mov
sub
xchg
es
jg
adc
xor
push
loopne
retf
xchg
sbb
inc
call
sbb
mov
int3
xchg
pusha
das
stos
fist
xlat
xchg
fldcw
dec
addr16
(bad)
(bad)
push
mov
rcr
enter
mov
out
cdq
inc
movs
ds
test
loop
xchg
lods
clc
in
sbb
ror
or
add
sbb
in
outs
jp
jl
stos
lods
scas
gs
xchg
xor
push
aaa
adc
push
add
fwait
mov
or
mov
repnz
ss
clc
(bad)
(bad)
(bad)
jnp
loop
and
push
outs
jmp
pop
pop
mov
call
cld
sub
add
inc
ja
jb
rol
sbb
arpl
(bad)
push
outs
cmp
mov
push
mov
cdq
cdq
mov
jg
daa
mov
cdq
fyl2xp1
shr
out
(bad)
push
leave
add
sbb
fxch
sub
out
test
mov
(bad)
(bad)
(bad)
dec
daa
push
mov
pop
scas
mov
sbb
es
call
(bad)
(bad)
(bad)
dec
dec
push
sub
cmp
nop
push
jle
pop
add
in
dec
imul
jb
je
mov
mov
pop
aam
je
dec
xchg
sub
jnp
dec
xchg
adc
(bad)
(bad)
(bad)
fstp
push
inc
jmp
xlat
out
and
outs
call
aam
mov
in
cli
mov
cs
clc
outs
cmps
call
sub
jp
(bad)
(bad)
call
ret
and
push
cmps
fldenv
push
or
dec
pusha
pop
sub
inc
xor
mov
mov
jp
jmp
add
pop
mov
jg
jno
mov
inc
mov
sahf
shl
(bad)
jmp
push
dec
fnstenv
jg
mov
movs
jecxz
add
test
cmps
mov
arpl
js
test
or
retf
adc
xchg
push
stc
hlt
ret
fidiv
out
(bad)
xor
clc
(bad)
(bad)
dec
xchg
je
or
dec
retf
bound
xor
pop
fadd
arpl
leave
add
retf
dec
not
add
mov
cmp
push
aad
iret
xor
retf
(bad)
fcom
mov
adc
xor
div
call
ja
jbe
xchg
adc
test
mov
(bad)
call
into
or
lahf
jmp
sub
adc
jb
cmps
lock
and
mov
inc
cld
in
push
icebp
sbb
(bad)
dec
and
fistp
fimul
in
popa
scas
pop
imul
cmp
fnstsw
call
xchg
mov
adc
stos
cmp
movs
jmp
outs
cli
call
jne
jge
xchg
cmps
dec
sub
imul
or
or
fdiv
dec
sub
pop
(bad)
test
inc
mov
and
mov
in
stos
push
(bad)
(bad)
jmp
aad
mov
push
add
ret
imul
mov
scas
push
lock
jno
pop
push
or
mov
fwait
dec
mov
dec
(bad)
xchg
aam
mov
ds
add
mov
outs
fcmovne
arpl
imul
dec
vpcmpgtw
and
pop
fcmovne
(bad)
mov
stos
fmul
mov
push
mov
add
xchg
xor
(bad)
(bad)
(bad)
cmp
mov
jno
cmp
mov
or
sbb
mov
push
add
sub
dec
mov
mov
lds
js
test
jecxz
pop
in
and
push
mov
sub
and
stc
sbb
mov
jg
jmp
loopne
fstp
(bad)
(bad)
push
push
or
sub
push
lahf
xchg
imul
in
lods
pop
lods
push
dec
out
dec
inc
jge
adc
fbstp
mov
in
es
add
es
imul
ja
shr
push
mov
imul
push
push
(bad)
(bad)
(bad)
(bad)
std
call
xor
pop
and
jae
(bad)
or
das
cmp
(bad)
(bad)
(bad)
call
stos
add
out
sub
(bad)
(bad)
call
ins
pusha
ret
(bad)
std
mov
loope
sub
(bad)
(bad)
jmp
call
inc
jmp
lea
sbb
(bad)
(bad)
dec
std
mov
or
movs
sbb
pop
shr
fidiv
sub
out
(bad)
jmp
rol
data16
adc
sbb
or
idiv
xlat
(bad)
(bad)
(bad)
dec
mov
jnp
in
adc
mov
sub
mov
jne
dec
ins
mov
(bad)
(bad)
(bad)
(bad)
jge
(bad)
mov
retf
out
pop
or
iret
pop
push
mov
push
mov
lods
call
(bad)
(bad)
push
mov
sti
cdq
scas
iret
cs
push
xchg
push
movs
inc
rcr
aad
stc
mov
adc
(bad)
(bad)
call
xchg
add
ins
daa
ret
rol
jge
xlat
or
test
fidiv
test
in
aad
(bad)
pop
test
aaa
(bad)
(bad)
(bad)
dec
neg
mov
jge
rcr
or
int3
mov
popa
outs
xchg
pop
push
mov
(bad)
(bad)
call
pop
mov
push
jmp
mov
imul
sub
outs
mov
call
cld
inc
cdq
or
xor
adc
sub
and
cmp
mov
shr
cmovl
fmul
test
mov
sbb
(bad)
mov
pslld
dec
dec
pop
push
sbb
jns
cli
and
mov
pop
(bad)
(bad)
jg
jmp
cmp
bound
adc
dec
mov
xchg
movs
mov
(bad)
(bad)
(bad)
jmp
xor
jmp
xchg
jle
stos
loop
lahf
jb
outs
(bad)
lock
(bad)
(bad)
call
adc
js
sbb
mov
fwait
cmp
ds
jb
test
add
jmp
mov
call
push
sub
popf
or
daa
ins
mov
cmp
(bad)
(bad)
cmp
fcomi
call
mov
test
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
scas
xchg
jmp
out
inc
jp
scas
call
ins
add
ins
pop
and
test
aad
inc
xor
movd
aam
add
das
and
das
push
popa
jmp
mov
sub
cmp
xchg
cmps
add
fwait
mov
mov
dec
(bad)
shl
js
imul
mov
cli
bound
sub
das
fisubr
fs
jno
push
and
mov
pop
dec
arpl
adc
(bad)
push
dec
inc
cld
jmp
dec
sub
stos
inc
add
cmp
cs
mov
mov
(bad)
call
mov
push
bound
call
sahf
sub
jmp
mov
cmp
or
in
jo
imul
mov
(bad)
(bad)
out
cli
fidivr
dec
cdq
add
dec
dec
mov
into
and
ret
scas
(bad)
es
(bad)
(bad)
jmp
retf
loop
iret
test
(bad)
loopne
fisub
aaa
or
sahf
enter
sti
add
call
lock
xor
call
add
mov
push
test
jb
(bad)
adc
ds
xchg
jne
(bad)
(bad)
(bad)
call
pushf
pop
movs
sub
pop
cmc
ins
std
test
cwde
lods
cmp
retf
cdq
cmps
fstp
test
(bad)
jmp
(bad)
movs
adc
xor
stos
test
push
add
rcl
fadd
loop
cmps
or
call
(bad)
dec
or
mov
stc
(bad)
fistp
(bad)
(bad)
call
sub
outs
and
sub
mov
pop
inc
bound
js
jns
mov
dec
outs
xchg
test
out
mov
neg
call
in
in
inc
sub
fild
(bad)
cwde
jbe
fmul
xchg
add
dec
and
mov
je
pop
imul
hlt
jmp
sbb
dec
mov
shr
idiv
mov
call
std
retf
sub
std
push
mov
adc
leave
dec
sbb
jmp
int
push
std
(bad)
call
mul
add
hlt
rcl
loop
add
pop
add
mov
mov
test
(bad)
(bad)
call
fnstsw
adc
gs
xchg
test
sbb
xor
(bad)
(bad)
(bad)
(bad)
call
in
pop
int
(bad)
into
push
retf
mov
mov
mov
pop
scas
fs
sbb
call
test
out
(bad)
enter
or
dec
xor
pop
pop
loope
retf
pop
std
(bad)
loop
xchg
and
cdq
pmaxub
mov
sub
add
mov
ret
leave
mov
lds
(bad)
pop
cmp
add
pop
in
pop
out
sub
dec
xchg
push
push
pop
and
out
fidiv
or
sbb
(bad)
jmp
mov
repz
and
mov
xchg
push
jne
out
fimul
jb
(bad)
(bad)
mov
cmps
xor
cmps
add
mov
mov
cmps
mov
test
shr
pop
push
sub
dec
in
jp
aas
fbstp
add
(bad)
(bad)
(bad)
(bad)
jmp
jge
pop
out
test
lods
loope
jecxz
hlt
std
xor
iret
mov
(bad)
call
into
mov
sbb
fisttp
xor
sbb
ret
xor
(bad)
(bad)
call
dec
mov
add
fstp
call
test
mov
cmps
cmps
xchg
xchg
mov
or
dec
dec
scas
xchg
lock
cwde
aam
test
(bad)
(bad)
dec
xchg
xchg
(bad)
mov
fs
mov
dec
movs
ins
repnz
das
or
in
sub
inc
jmp
pop
fisttp
(bad)
jmp
mov
(bad)
outs
cli
call
leave
sub
inc
xchg
add
cmps
ret
icebp
mov
daa
xchg
pop
mov
adc
(bad)
call
rcl
push
das
ss
ds
dec
xor
mov
pop
inc
push
jmp
add
dec
cld
pop
enter
and
nop
push
retf
fmul
lea
imul
inc
(bad)
(bad)
(bad)
(bad)
fild
adc
adc
sbb
stos
pop
pop
call
jnp
iret
sub
(bad)
(bad)
jmp
stos
daa
mov
ins
push
scas
pop
bound
cmp
ficom
dec
rol
(bad)
(bad)
(bad)
jmp
jle
mov
ins
hlt
sub
and
addr16
xlat
and
test
mov
mov
(bad)
(bad)
inc
enter
das
push
test
(bad)
jmp
std
jmp
dec
mov
hlt
mov
and
pop
jne
cmps
loope
ja
pop
push
js
test
cmc
dec
push
(bad)
inc
pop
ins
dec
push
dec
xor
popa
pop
jae
movs
ins
xchg
sub
sub
or
es
mov
xor
or
(bad)
pop
cli
jg
call
and
inc
pop
adc
js
cwde
sti
imul
popa
rcl
xor
nop
(bad)
(bad)
mov
xor
fidiv
(bad)
dec
test
call
cmovne
push
jp
fdiv
push
icebp
fnsave
(bad)
mov
dec
jae
call
add
pop
je
dec
aas
dec
cmp
(bad)
(bad)
push
retf
sub
movs
movs
(bad)
cdq
imul
jns
cdq
sar
lods
jl
test
jmp
cli
(bad)
aaa
push
or
adc
fwait
jne
retf
cmp
jmp
jbe
sti
inc
lds
adc
iret
push
xlat
cmp
jge
pop
sti
test
mov
(bad)
mov
mov
fiadd
retf
ret
dec
call
aaa
(bad)
inc
shl
or
sbb
fnsave
adc
jl
(bad)
(bad)
(bad)
push
pop
out
jle
push
mov
gs
mov
jnp
(bad)
pop
lods
mov
into
gs
int
mov
xchg
ja
push
pop
aad
jb
popf
gs
call
pop
mov
mov
test
call
inc
(bad)
ja
dec
sbb
das
or
or
sub
mov
setnp
aaa
cmps
or
sub
retf
gs
lahf
mov
mov
push
or
iret
jl
cli
and
jne
mov
dec
inc
sbb
(bad)
add
ss
test
xchg
and
jmp
jmp
aaa
xor
dec
inc
and
and
pop
call
pop
(bad)
(bad)
(bad)
dec
pop
retf
ficomp
push
test
stos
jmp
inc
mov
and
ja
clc
shr
loope
bound
or
arpl
call
inc
movs
ds
or
cli
test
jmp
sub
out
inc
test
out
outs
cs
mov
das
outs
dec
call
repz
lods
in
sub
mov
arpl
inc
jbe
sub
test
mov
push
xchg
outs
sbb
es
xchg
fwait
cmp
lods
cli
cli
xchg
adc
(bad)
(bad)
jmp
pop
mov
iret
scas
xchg
cwde
xchg
cli
pop
das
mov
cli
adc
pop
or
mov
cdq
iret
cdq
cs
xlat
das
aad
imul
add
mov
pop
nop
cmps
fwait
mov
loopne
cs
jmp
call
clc
movs
push
push
mov
or
aad
aam
dec
mov
dec
push
sub
lds
movs
clc
cdq
stos
imul
pop
les
cli
(bad)
(bad)
dec
(bad)
aad
cmp
stos
xchg
mov
out
push
mov
enter
lahf
xchg
js
mov
cli
(bad)
fisttp
or
mov
adc
stos
addr16
(bad)
(bad)
push
fistp
lods
pop
adc
or
call
aad
inc
mov
lahf
(bad)
(bad)
(bad)
dec
(bad)
repnz
xor
jmp
add
mov
jmp
xchg
retf
fmul
or
xor
fdivr
push
call
(bad)
(bad)
cli
lock
mov
adc
or
add
(bad)
jg
movs
cmp
cmp
shl
shl
xchg
dec
xor
push
shl
icebp
mov
ret
rol
call
xor
shr
stos
pop
jmp
sub
fmul
fisub
stos
ins
das
ds
loop
in
add
imul
leave
test
popa
ins
mov
pop
in
push
inc
in
in
stos
mov
stos
adc
ins
mov
(bad)
(bad)
(bad)
call
cdq
adc
sub
push
retf
mov
push
cmps
sub
mov
xchg
(bad)
jg
push
and
inc
in
test
test
retf
es
outs
or
popa
ds
(bad)
push
dec
mov
(bad)
jmp
aaa
out
movs
(bad)
(bad)
(bad)
inc
mov
add
pop
sub
xor
pop
add
add
retf
lock
or
add
xchg
jbe
gs
dec
mov
ja
lods
(bad)
(bad)
jmp
pop
push
jmp
sbb
jnp
mov
hlt
repz
push
pop
xor
fcomip
(bad)
fucomip
in
dec
stos
pop
cmp
jle
push
lds
cs
stos
ins
(bad)
out
cli
jmp
push
mov
dec
pop
pusha
or
and
pusha
and
and
stos
inc
mov
(bad)
mov
aam
jns
push
dec
retf
sub
(bad)
sti
adc
(bad)
fcomip
mov
push
push
sub
jnp
stos
jmp
stos
inc
enter
lea
mov
mov
cs
jle
push
mov
sub
cmps
jmp
sub
mov
pop
stos
mov
mov
adc
jg
dec
lea
scas
xchg
stos
outs
test
sub
sub
aad
fsub
inc
int3
mov
inc
rcr
(bad)
(bad)
jg
(bad)
outs
mov
fist
popa
hlt
(bad)
fcomp
stos
ret
je
sbb
xlat
jmp
js
mov
jbe
ret
adc
push
aam
(bad)
(bad)
(bad)
(bad)
fstp
lods
aaa
retf
xor
fs
shr
dec
sub
fs
je
retf
dec
fild
adc
push
push
dec
int3
fcomp
pop
(bad)
(bad)
(bad)
call
inc
jno
scas
fist
cdq
fst
inc
sbb
fist
pop
sbb
pop
fcomp
ror
adc
data16
fstp
push
push
stos
push
rcr
aas
leave
add
fmulp
fsubp
jg
add
jmp
ja
je
jmp
adc
cmp
inc
adc
fimul
stos
stc
aas
(bad)
sar
(bad)
push
jo
ficom
xor
(bad)
pop
clc
popa
js
push
pop
push
mov
(bad)
(bad)
(bad)
inc
fcomp
stos
or
mov
ret
push
jb
sub
add
mov
fisttp
sti
push
inc
jg
pop
enter
adc
inc
sbb
xchg
retf
(bad)
daa
lds
rcr
nop
rcl
pop
(bad)
pop
mov
dec
sar
xchg
push
jmp
xor
fadd
pop
fcom
pop
jmp
fdiv
mov
fwait
mov
dec
adc
inc
dec
fxch
leave
pop
test
adc
prefetchwt1
fstp
pop
push
(bad)
fdiv
mov
jo
cld
pop
push
rcl
jl
daa
retf
shl
jmp
xchg
into
mov
dec
sbb
push
ror
shl
lds
idiv
(bad)
fistp
jmp
bswap
scas
dec
leave
sahf
sbb
pop
(bad)
or
xchg
inc
repz
shl
ja
fxch
rcl
(bad)
sub
sar
push
fcmovbe
pop
xor
movs
dec
push
pop
pop
ret
fstp
cli
pop
mov
popa
ret
call
leave
rcl
pop
(bad)
sar
cmp
mov
fmul
std
push
jl
dec
mov
mov
cmp
addr16
(bad)
inc
test
je
push
cld
call
shl
fcom
push
es
pushf
pop
(bad)
shl
mov
je
jl
aam
push
jp
inc
push
shl
push
fmul
aam
pop
aas
mov
or
stos
mov
or
pop
mov
inc
je
cmp
(bad)
inc
popf
pop
jp
sbb
push
(bad)
mov
cmp
inc
jo
pop
mov
loop
pop
loop
movs
shl
pop
in
pop
cld
rcl
iret
pop
fcom
lock
(bad)
(bad)
(bad)
mov
push
push
pop
popa
add
cmps
(bad)
jmp
mov
cmps
or
jp
scas
mov
and
dec
mov
xor
imul
daa
mov
(bad)
(bad)
dec
xor
mov
ss
repz
mov
mov
stos
arpl
(bad)
js
rol
mov
call
sub
movs
mov
mov
inc
push
add
call
out
mov
push
(bad)
jmp
dec
or
cli
(bad)
cs
mov
xor
sub
test
xchg
scas
out
dec
or
std
or
push
mov
(bad)
pop
outs
lods
in
scas
(bad)
(bad)
std
sub
jmp
lods
in
pusha
sub
push
and
(bad)
mov
pop
loopne
stos
out
jno
aam
mov
push
jo
or
jmp
mov
test
push
cmps
pop
(bad)
mov
and
(bad)
push
mov
(bad)
inc
mov
mov
dec
imul
jae
and
push
jecxz
mov
mov
add
call
mov
inc
fisub
mov
cmps
sub
dec
mov
add
dec
ins
mov
mov
add
jecxz
xchg
(bad)
mov
retf
and
ror
push
mov
add
pop
push
or
(bad)
(bad)
inc
outs
stos
pop
jns
mov
jb
and
mov
mov
mov
xchg
ins
jp
jmp
mov
(bad)
adc
cmps
pop
sub
push
pop
(bad)
(bad)
(bad)
mov
push
imul
and
and
sti
sub
das
out
loop
dec
test
out
mov
outs
cli
or
repz
adc
cli
mov
loopne
inc
(bad)
jb
jg
(bad)
jmp
fnsave
pop
pop
mov
cmp
push
xchg
jp
dec
add
scas
cs
dec
into
xchg
inc
jp
jg
dec
(bad)
(bad)
jp
loop
dec
idiv
add
jge
pop
sub
cmps
stos
or
(bad)
dec
jmp
push
xchg
mov
mov
mov
or
xchg
pushf
std
cs
jo
(bad)
pop
sub
enter
test
ds
sub
lock
inc
xor
fstp
push
out
into
aam
jbe
jnp
cli
(bad)
(bad)
dec
xor
dec
cmps
cs
stos
mov
pop
repz
test
mov
js
(bad)
jmp
adc
inc
imul
test
mul
int
dec
btr
out
call
aad
inc
imul
mov
fstp
xchg
push
fbstp
adc
in
mov
leave
in
ja
cmps
cmp
(bad)
mov
out
push
call
loope
repz
or
fisub
sub
out
mov
(bad)
(bad)
(bad)
out
lods
dec
nop
stos
in
push
ja
push
push
loop
stos
jae
jns
lock
je
in
(bad)
(bad)
(bad)
(bad)
jmp
pop
(bad)
jne
push
mov
(bad)
jo
pop
xchg
inc
sub
daa
cdq
xchg
test
inc
sub
in
(bad)
enter
sub
or
(bad)
inc
ss
mov
jmp
test
sahf
or
retf
and
dec
sub
lods
mov
cmp
in
dec
jmp
sbb
push
popa
es
ret
mov
scas
push
paddd
loop
lods
mov
mov
inc
aas
xchg
and
enter
xchg
mov
nop
scas
push
mov
test
cmps
stos
inc
jmp
clc
cmps
nop
pop
cmp
into
pop
and
dec
sbb
into
dec
mov
call
cli
jmp
push
sti
retf
fdivr
xchg
fild
loopne
mov
push
pop
mov
(bad)
jmp
std
xchg
and
jae
call
push
xor
scas
push
mov
stos
cmps
lods
mov
mov
add
call
(bad)
out
inc
mov
sub
mov
fisubr
push
stos
(bad)
idiv
into
mov
push
int3
cdq
fsubr
sbb
mov
or
lahf
xchg
test
call
jmp
ficom
outs
mov
push
call
mov
ror
(bad)
(bad)
jmp
jmp
mov
loope
sbb
or
and
push
adc
jae
sub
pop
adc
imul
cmp
in
lock
pop
mov
inc
dec
scas
dec
jmp
stc
cs
adc
add
mov
call
(bad)
push
rcr
mov
(bad)
(bad)
(bad)
call
stos
push
call
hlt
xor
pop
push
aaa
cmp
push
jnp
xchg
scas
add
cmps
fwait
mov
lahf
inc
mov
(bad)
mov
fwait
sub
icebp
mov
add
bound
mov
dec
jb
hlt
cmp
aad
inc
scas
or
sub
jmp
sbb
cmc
ds
jnp
cmp
jo
or
inc
xor
(bad)
dec
pop
sub
mul
fld
xor
data16
(bad)
push
imul
idiv
cmp
fist
pop
adc
sahf
sbb
(bad)
(bad)
call
mov
loopne
xor
or
mov
push
stos
arpl
ins
pop
enter
sbb
aaa
or
rol
in
pop
ins
pop
pop
cwde
add
retf
cmp
cli
(bad)
jmp
cs
lds
cli
sbb
cmp
mov
arpl
mov
popf
(bad)
(bad)
(bad)
call
add
retf
adc
inc
mov
fcom
push
add
inc
or
outs
scas
mov
aad
(bad)
(bad)
(bad)
(bad)
jg
je
(bad)
scas
jnp
push
stc
sub
std
sti
shl
arpl
jg
int
push
rcl
fsub
and
push
(bad)
call
jge
jb
and
add
mov
mov
lock
dec
cmps
mov
pop
daa
jo
enter
fwait
cli
mov
ss
adc
pop
jno
(bad)
(bad)
(bad)
jmp
and
fs
popa
pop
fcomp
stc
fistp
test
inc
ficomp
stos
nop
imul
push
cld
jp
loopne
pop
push
loope
inc
int
sub
mov
dec
loop
scas
or
cmp
das
outs
sub
jmp
dec
pop
(bad)
xor
popa
cmps
fist
mov
je
call
pop
cmp
(bad)
(bad)
jmp
push
out
test
loope
sbb
push
dec
mov
cmps
xchg
jmp
mov
cmps
add
inc
mov
mov
push
stos
cwde
xor
loopne
leave
cmps
jge
lock
call
(bad)
(bad)
call
lahf
cmp
dec
(bad)
xor
mov
popa
adc
jmp
retf
cmp
push
push
xlat
sub
cld
sub
(bad)
dec
ret
jle
out
test
jmp
mov
out
xchg
gs
(bad)
(bad)
dec
sub
and
repnz
les
push
repnz
fnstsw
jg
push
out
call
mov
retf
mov
jp
leave
push
stc
mov
cs
ret
(bad)
(bad)
jmp
adc
dec
rcl
xchg
mov
mov
lock
pop
inc
lods
or
scas
clc
jg
int
imul
mov
(bad)
dec
test
mov
scas
and
(bad)
(bad)
push
bnd
jb
(bad)
mov
lea
cli
pop
cmp
add
(bad)
(bad)
mov
or
retf
mov
push
dec
and
fisub
(bad)
(bad)
fidiv
jo
push
push
xor
call
xor
add
jmp
dec
jl
sub
out
mov
adc
xor
xchg
xchg
mov
jnp
scas
sar
jmp
xor
push
into
mov
mov
push
pop
pop
push
dec
aas
call
clc
retf
mov
cmp
pusha
loopne
mov
mov
retf
cmp
int
fisub
inc
pop
(bad)
(bad)
(bad)
call
cmp
pop
stos
dec
cmp
daa
inc
ins
pop
je
mov
out
enter
mov
lea
ja
call
imul
dec
fs
out
(bad)
dec
in
scas
pop
mov
popa
mov
push
mov
retf
(bad)
fstp
jg
call
arpl
push
pop
mov
and
push
jge
mov
push
stos
pusha
pop
mov
stos
xchg
push
sbb
pop
icebp
inc
lods
mov
(bad)
data16
test
jmp
jmp
(bad)
call
pop
mov
mov
xchg
jl
or
(bad)
(bad)
(bad)
inc
ret
(bad)
leave
std
xchg
cli
mov
loope
lock
pushf
jbe
ret
push
into
inc
sub
pusha
imul
aaa
std
sub
xchg
add
dec
lock
hlt
jmp
add
sub
sub
cld
(bad)
(bad)
dec
scas
stos
mov
push
jmp
sub
cmp
lahf
fsubp
add
push
cli
cwde
aas
(bad)
(bad)
inc
je
pop
ds
scas
jmp
jmp
mov
jmp
inc
sub
test
cld
push
fdivr
std
or
outs
(bad)
cmp
fisubr
mov
mov
dec
mov
jp
cmp
(bad)
(bad)
(bad)
sti
repnz
sub
aad
and
imul
or
xchg
jg
inc
inc
xchg
ficom
(bad)
(bad)
(bad)
jge
adc
sbb
call
retf
xchg
cmps
mov
and
sub
dec
sar
(bad)
jmp
xchg
call
or
xchg
adc
xchg
icebp
repnz
adc
or
add
retf
push
dec
cdq
mov
jmp
out
repnz
dec
sbb
lods
push
sub
stos
push
arpl
mov
(bad)
(bad)
mov
add
mov
(bad)
lods
cli
fstp
mov
scas
sub
push
stos
jb
lahf
cmps
and
loope
jmp
mov
push
lods
test
cmp
cmps
cwde
out
(bad)
(bad)
(bad)
push
test
call
daa
gs
sbb
(bad)
jns
(bad)
(bad)
(bad)
push
mov
pop
mov
imul
xchg
aaa
(bad)
(bad)
pop
retf
and
(bad)
(bad)
call
push
(bad)
movs
aaa
push
icebp
lods
mov
cli
mov
sbb
adc
repnz
(bad)
(bad)
call
paddsw
or
xchg
mov
jecxz
xchg
pop
jge
dec
add
cmps
inc
dec
jmp
call
fs
jmp
inc
(bad)
jge
mov
lahf
(bad)
(bad)
(bad)
inc
(bad)
fwait
imul
mov
mov
aad
sub
call
xor
(bad)
(bad)
jmp
inc
(bad)
pop
add
call
sbb
clc
dec
xchg
dec
mov
or
jg
je
dec
not
femms
jp
call
xchg
push
fild
aad
push
xchg
sbb
(bad)
jmp
push
aad
mov
lds
pop
hlt
(bad)
fistp
or
jmp
inc
aad
pop
and
(bad)
call
inc
or
outs
adc
lods
mov
mov
xor
(bad)
(bad)
(bad)
cli
add
sbb
add
or
sbb
cmp
(bad)
(bad)
(bad)
jmp
mov
aam
iret
arpl
fsubr
add
mov
loope
imul
mov
mov
(bad)
(bad)
(bad)
call
jle
jmp
fisub
outs
pop
xacquire
add
lahf
popa
mov
mov
mov
(bad)
(bad)
(bad)
jns
mov
call
sahf
sbb
ds
cli
sbb
les
pop
adc
loope
push
mov
lahf
sbb
dec
test
or
push
scas
call
jp
je
jb
call
std
(bad)
jmp
xor
inc
cdq
mov
mov
scas
xchg
enter
sbb
(bad)
(bad)
mov
or
adc
mov
es
(bad)
or
xor
stos
sub
dec
add
ins
jge
xchg
add
(bad)
sub
ficomp
or
(bad)
(bad)
jmp
outs
push
pop
sbb
add
test
sub
jnp
inc
jae
jmp
inc
(bad)
(bad)
fcomip
sbb
sbb
into
pop
(bad)
out
push
in
into
pop
jp
mov
lock
push
hlt
sti
cs
(bad)
(bad)
(bad)
inc
imul
stos
pushf
addr16
sub
and
pop
leave
jmp
sahf
sbb
lods
jg
sahf
(bad)
(bad)
(bad)
dec
jmp
lods
mov
retf
(bad)
sub
or
in
ficom
push
jle
call
dec
adc
lods
or
stos
mov
out
cwde
lock
push
je
pop
cmc
(bad)
in
mov
or
fdiv
idiv
sbb
mov
pop
call
or
sbb
inc
cld
dec
fldcw
lods
in
or
xor
outs
test
shr
(bad)
call
out
mov
mov
xchg
aaa
push
fdivrp
cmp
mov
sbb
out
repz
mov
jp
cmp
(bad)
(bad)
(bad)
call
xchg
add
cmps
stos
mov
pusha
(bad)
call
sub
outs
ins
xchg
(bad)
pushf
jae
pop
jae
repz
dec
pop
lock
jmp
jmp
std
hlt
jge
popa
push
test
icebp
call
shr
xchg
adc
pop
dec
push
push
dec
sbb
mov
pop
jg
push
out
or
outs
sbb
(bad)
fist
movs
daa
mov
in
sub
mov
and
mov
inc
fwait
(bad)
(bad)
call
sub
xor
imul
xchg
and
mov
mov
loop
jo
(bad)
(bad)
push
xor
mov
xor
repz
jle
imul
stc
sub
fsin
es
(bad)
jmp
bound
popf
sbb
lods
pop
ins
sbb
and
js
pop
(bad)
mov
lds
xor
inc
add
ss
retf
cmp
pop
stos
push
stos
and
xchg
push
(bad)
(bad)
(bad)
call
pop
adc
inc
push
xchg
test
lahf
aad
ja
out
and
lods
ins
pop
jb
ss
(bad)
(bad)
(bad)
cld
stos
jp
jg
push
sub
in
adc
push
and
push
adc
push
xor
jmp
(bad)
mov
or
sbb
fild
into
(bad)
(bad)
(bad)
jmp
leave
and
mov
push
call
adc
sbb
sub
dec
test
fidiv
mov
call
xchg
sbb
gs
lods
(bad)
(bad)
(bad)
dec
stc
lds
int3
fimul
cmp
inc
jnp
fstp
stos
mov
mov
ret
push
jo
call
(bad)
(bad)
dec
repnz
loopne
inc
adc
mov
mov
sub
sbb
inc
loop
sub
(bad)
jmp
adc
cli
sub
in
pushf
mov
inc
inc
ret
(bad)
jg
pop
fld
add
pop
mov
dec
mov
or
(bad)
xchg
inc
push
adc
dec
unpckhps
jmp
and
mov
std
(bad)
call
inc
jmp
pop
gs
and
pop
pop
ins
jno
sbb
jb
dec
push
(bad)
(bad)
jmp
loope
leave
(bad)
xor
mov
or
push
jmp
mov
(bad)
(bad)
call
add
mov
dec
stos
xchg
pop
repnz
outs
add
mov
(bad)
out
pop
mov
in
outs
and
ficomp
fmul
(bad)
mov
sbb
ins
(bad)
imul
shr
mov
inc
sahf
stos
mov
jmp
call
mov
xchg
mov
mov
add
outs
(bad)
enter
(bad)
jmp
push
adc
lea
cmp
in
cmp
cmp
adc
(bad)
mov
jl
retf
pop
push
out
mov
add
sbb
(bad)
inc
mov
push
mov
dec
inc
lods
jmp
jbe
xlat
pop
push
and
add
inc
aad
lock
cmps
inc
loopne
rol
push
pop
fwait
(bad)
(bad)
call
push
add
sbb
call
call
inc
mov
mov
fwait
(bad)
(bad)
(bad)
call
mov
push
xchg
ret
stos
sbb
cmp
aad
push
adc
push
jge
mov
sub
(bad)
dec
xchg
pushf
ja
sbb
pop
aad
cmc
push
test
loope
adc
inc
in
mov
in
ss
call
inc
fwait
in
xor
dec
call
stos
(bad)
test
(bad)
jg
push
sbb
fist
add
out
dec
jbe
sbb
jb
push
aaa
jp
mul
call
xlat
pop
aam
push
push
inc
xchg
sahf
xlat
imul
xor
add
and
pop
add
add
push
adc
or
(bad)
jmp
call
jne
inc
add
push
fidivr
push
xchg
push
cmps
sbb
mov
mov
adc
(bad)
movs
add
(bad)
xor
scas
adc
add
loopne
xlat
hlt
mov
aaa
icebp
(bad)
(bad)
inc
add
aaa
adc
sbb
imul
xchg
adc
adc
(bad)
in
(bad)
fild
mov
or
pop
jmp
das
adc
pop
(bad)
sti
lahf
sub
jg
pop
std
xchg
push
xor
mov
in
mov
bound
push
(bad)
mov
push
sub
cmp
jle
add
adc
lods
inc
outs
clc
xchg
std
(bad)
(bad)
call
inc
ds
push
mov
add
dec
rcl
fwait
xor
enter
fld
in
xchg
fisubr
cdq
leave
cmc
add
fs
adc
neg
sti
inc
inc
ja
icebp
call
(bad)
mov
outs
js
ret
pop
jg
mov
dec
inc
inc
cli
into
jmp
cmps
fwait
scas
movs
cli
pushw
cwde
cmps
enter
outs
mov
xchg
sbb
xchg
sub
dec
stos
xlat
in
mov
scas
sub
lods
mov
jecxz
mov
(bad)
jge
(bad)
fiadd
push
iret
mov
dec
fidiv
icebp
sbb
sbb
(bad)
jmp
cmp
and
ins
xchg
test
sahf
push
xchg
jecxz
ds
xchg
sar
(bad)
(bad)
dec
clc
mov
repz
cmp
mov
cmp
pop
xor
clc
fistp
cld
outs
(bad)
(bad)
call
add
mov
pushf
into
xor
sub
push
cmp
fwait
mov
mov
jbe
(bad)
(bad)
jg
popa
and
mov
stos
jo
lods
mov
push
test
jmp
mov
stos
inc
inc
jne
fucomi
push
in
stos
sub
jl
fmul
mov
call
in
in
sub
push
sbb
and
test
neg
jmp
jbe
mov
dec
cmps
sbb
or
jo
stos
stos
dec
(bad)
push
stos
retf
sahf
jo
das
jg
(bad)
dec
and
pop
call
mov
(bad)
push
lahf
jbe
mov
mov
(bad)
(bad)
mov
xchg
shl
jmp
(bad)
push
fdivr
(bad)
mov
xlat
push
mov
adc
xor
and
fnstsw
mov
retf
inc
repnz
fsubr
(bad)
cmp
cmp
test
clc
mov
in
pop
mov
pop
scas
(bad)
(bad)
(bad)
jmp
sub
mov
ds
mov
push
fcomp
dec
mov
pop
(bad)
fdivrp
idiv
call
jmp
sub
in
inc
das
mov
mov
jmp
mov
scas
cmp
mov
inc
lahf
push
pop
test
cmps
push
icebp
scas
add
stos
pop
pop
push
jb
cmps
pop
int3
sub
add
(bad)
scas
jmp
jns
stc
sub
js
or
push
pop
inc
cs
mov
(bad)
lock
(bad)
jmp
test
movs
stos
(bad)
bnd
test
pop
hlt
or
stos
pop
int3
retf
fld
xor
cmp
and
jg
(bad)
call
ds
push
test
stos
fwait
add
push
and
or
(bad)
(bad)
(bad)
jmp
ds
cmps
imul
(bad)
std
push
cmps
(bad)
add
pop
mov
fs
sbb
loope
(bad)
(bad)
(bad)
dec
call
in
stos
cmp
jmp
push
mov
mov
repnz
and
enter
lahf
retf
mov
jb
push
scas
or
shr
mov
test
(bad)
(bad)
(bad)
jnp
mov
adc
inc
push
pop
cli
ins
rol
repz
into
push
push
cmps
in
(bad)
(bad)
(bad)
dec
cmp
mov
sub
lods
dec
nop
pop
movs
xchg
pusha
cwde
shl
in
dec
pop
outs
mov
sbb
xchg
call
xchg
mov
movs
jmp
out
fisub
mov
cmps
pop
add
jmp
int3
sahf
sub
movs
mov
std
ret
(bad)
call
push
outs
jl
mov
mov
mov
mov
sbb
in
mov
shl
shl
sti
cmps
pop
mov
rol
add
std
imul
pop
jnp
test
mov
jmp
(bad)
(bad)
(bad)
(bad)
mov
push
shr
push
or
push
pop
push
fcmovb
cwde
xchg
cmp
les
mov
(bad)
(bad)
(bad)
call
pop
push
jmp
(bad)
les
sbb
push
sub
push
sub
and
cmp
jg
scas
(bad)
(bad)
(bad)
(bad)
in
jmp
cwde
sub
mov
jp
jl
jne
(bad)
xor
cdq
pop
adc
mov
cmp
add
push
mov
jl
retf
imul
sbb
mov
jg
rol
adc
das
sar
inc
leave
pop
sub
mov
(bad)
(bad)
(bad)
(bad)
inc
retf
jg
mov
test
jg
jmp
fsubr
in
and
lods
adc
sub
cs
retf
sti
int3
jnp
aad
scas
sahf
pop
sub
movs
jl
test
retf
stos
mov
mov
js
sbb
mov
call
loopne
je
adc
aad
dec
adc
(bad)
test
push
(bad)
sbb
pop
cmp
retf
jno
dec
scas
test
ja
jge
mov
mov
(bad)
(bad)
mov
ins
mov
mov
sub
fs
dec
mov
(bad)
(bad)
jg
shl
fiadd
sub
imul
aaa
rcr
popf
sub
dec
dec
(bad)
inc
push
fild
mov
dec
scas
push
fild
int
ds
in
sar
(bad)
call
ds
(bad)
jp
es
out
inc
mov
xlat
cs
(bad)
(bad)
jg
xor
cdq
cdq
pop
pop
pushf
call
iret
sub
and
mov
and
pop
adc
mov
sbb
jmp
iret
call
call
pop
and
(bad)
call
mov
mov
mov
sub
idiv
out
sbb
popf
lock
test
dec
outs
push
outs
or
imul
push
xchg
sbb
ret
inc
jmp
lds
push
inc
lahf
std
je
dec
cs
imul
in
jmp
jp
inc
mov
sbb
pop
ins
pop
(bad)
pop
dec
mov
(bad)
(bad)
inc
pop
lock
cs
outs
mov
stos
adc
ins
xlat
mov
retf
call
movs
(bad)
(bad)
out
mov
stos
pop
and
mov
mov
mov
add
arpl
(bad)
(bad)
fild
mov
jb
push
pop
adc
mov
lods
mov
and
(bad)
(bad)
(bad)
inc
jmp
(bad)
loopne
add
movs
sbb
repnz
cmp
jo
add
dec
cli
loop
aad
xor
jecxz
cs
xchg
pop
mov
ins
das
xchg
(bad)
(bad)
mov
or
test
stos
jmp
sub
call
push
call
mov
out
cli
or
stc
mov
jmp
pop
out
scas
or
lods
in
dec
outs
imul
sub
test
jmp
jmp
js
mov
pop
loopne
dec
imul
stos
int3
retf
sbb
mov
test
(bad)
(bad)
(bad)
call
jge
(bad)
sub
xchg
pop
mov
sbb
jbe
cmp
sbb
call
clc
lods
ds
ret
lods
jmp
xchg
fsub
inc
fcomip
fist
test
pop
push
mov
shr
push
add
stos
adc
or
add
out
jmp
and
loopne
sar
adc
push
pop
ret
pushf
sti
ds
mov
retf
stos
addr16
pop
push
and
pop
lock
push
test
mov
out
mov
loope
scas
xlat
stos
(bad)
int
jle
(bad)
scas
jbe
daa
test
jb
retf
pop
(bad)
imul
push
lahf
push
in
sub
pop
lods
(bad)
(bad)
(bad)
jmp
mov
push
(bad)
in
dec
cli
inc
stos
int3
xchg
sub
inc
inc
jno
adc
mov
(bad)
call
(bad)
ins
xchg
adc
adc
cmps
int3
cmp
inc
xchg
das
(bad)
call
loopne
mov
sbb
jae
in
addr16
rcr
call
(bad)
ins
adc
(bad)
loopne
jmp
icebp
int3
mov
lods
sbb
dec
lock
in
jmp
inc
inc
mov
sbb
sub
cld
xchg
cmp
call
das
mov
std
and
ret
xchg
xor
push
sbb
adc
mov
jp
out
imul
push
sbb
jo
sub
mov
dec
rcr
jnp
sub
(bad)
(bad)
(bad)
sti
cs
cdq
inc
or
cdq
loop
push
adc
mov
(bad)
(bad)
mov
sub
lods
into
out
data16
sub
(bad)
mov
ret
lock
or
xor
outs
loopne
outs
(bad)
(bad)
mov
lock
cmp
retf
mov
cs
mov
pop
scas
(bad)
mov
test
or
sahf
push
scas
nop
sub
mov
call
jmp
and
cmps
adc
lods
mov
repz
xchg
lahf
adc
fwait
(bad)
(bad)
inc
retf
movs
in
lea
imul
shr
xlat
(bad)
(bad)
(bad)
push
clc
sbb
dec
repnz
loop
jno
inc
cmp
cmps
ja
mov
dec
sbb
imul
cmp
cmps
ret
mov
jle
(bad)
(bad)
(bad)
call
(bad)
repz
shl
loope
sbb
xlat
xor
cmp
pop
scas
dec
xchg
ret
in
(bad)
(bad)
(bad)
jmp
mov
daa
and
lods
xchg
xor
out
(bad)
mov
movs
mov
or
scas
clc
lea
or
inc
js
mov
push
xchg
jmp
icebp
hlt
xor
stos
cmp
popf
mov
(bad)
(bad)
(bad)
(bad)
call
lahf
mov
or
ins
and
jge
mov
paddw
mov
push
cs
std
clc
or
clc
call
iret
and
sbb
repnz
movs
cmps
(bad)
(bad)
(bad)
dec
rep
jl
out
jns
jno
pop
arpl
shl
push
fcmovbe
xchg
aas
jnp
je
fcomip
(bad)
push
xchg
jae
shl
cmp
push
mov
dec
mov
out
ror
loop
mov
jg
jmp
(bad)
jmp
out
jnp
mov
adc
push
call
clc
(bad)
inc
movs
int
int
mov
cmp
movs
lock
(bad)
(bad)
jmp
cdq
test
cmp
cwde
pop
hlt
sbb
out
std
mov
xchg
xor
(bad)
not
dec
popa
fcos
(bad)
(bad)
inc
mov
(bad)
jmp
adc
sub
mov
in
(bad)
(bad)
(bad)
(bad)
fst
and
inc
mov
cmp
mov
imul
push
std
(bad)
push
cmp
mov
ss
out
(bad)
adc
stos
(bad)
(bad)
mov
ret
pop
aam
sbb
xchg
xor
jle
mov
mov
fld
dec
call
aam
loope
inc
pusha
adc
xchg
jle
std
(bad)
mov
push
cmp
stos
pop
std
scas
add
dec
cmp
fisub
(bad)
(bad)
call
imul
les
mov
xlat
mov
retf
out
out
fsubr
inc
dec
stos
mov
inc
call
mov
mov
clc
jmp
mov
cld
pop
(bad)
(bad)
call
retf
and
loope
sbb
arpl
ds
shl
movs
sbb
mov
sbb
mov
popa
(bad)
cmp
mov
or
test
and
xchg
out
xor
(bad)
(bad)
dec
ins
sbb
ja
cdq
outs
jns
popa
mov
inc
out
jp
dec
leave
clc
call
(bad)
(bad)
(bad)
inc
mov
sbb
cmp
fidivr
mov
push
jmp
ss
pop
add
cmp
or
test
(bad)
inc
imul
daa
in
cmp
and
sub
(bad)
lahf
xchg
in
loope
jmp
(bad)
(bad)
(bad)
jmp
and
fbstp
sub
loop
repnz
pop
loope
pop
xchg
or
push
jmp
xor
sbb
pop
push
retf
(bad)
in
shl
shl
loop
ficomp
nop
(bad)
(bad)
(bad)
(bad)
mov
inc
adc
mov
jno
in
test
popa
shr
cmc
test
jmp
pop
ss
jp
es
cdq
xchg
(bad)
(bad)
cmp
mov
xchg
movs
ficomp
cmp
stc
adc
jno
pushf
outs
sbb
(bad)
(bad)
push
mov
into
(bad)
jecxz
(bad)
sbb
es
out
mov
(bad)
push
test
mov
(bad)
(bad)
call
leave
jmp
sbb
jns
push
add
cmps
test
jne
cdq
(bad)
repz
mov
xchg
sub
popa
loop
mov
fsubr
pop
sahf
sub
(bad)
(bad)
(bad)
(bad)
mov
add
and
add
adc
fiadd
push
adc
cli
call
mov
fnstsw
movs
xor
sub
(bad)
ds
sti
and
mov
sub
imul
mov
jg
mov
sub
adc
pushf
or
sub
mov
dec
fstp
xchg
push
xchg
sbb
mov
aad
inc
in
jmp
es
pop
jae
call
das
mov
arpl
cmp
js
fidiv
fld
and
(bad)
(bad)
call
mov
sub
pop
retf
nop
mov
aas
pushf
push
push
inc
fiadd
xor
(bad)
(bad)
push
enter
leave
test
jne
ret
sub
cmp
cld
in
out
mov
cmc
call
test
xchg
cs
pop
mov
and
mov
ins
sar
jg
in
jo
mov
cs
pusha
dec
imul
ror
lods
mov
call
adc
mov
jmp
push
in
jmp
repz
hlt
xor
outs
add
fadd
loopne
es
(bad)
out
clc
clc
pop
mov
pop
push
repz
sub
and
jae
cld
inc
in
ja
js
test
dec
cdq
inc
mov
(bad)
inc
cmps
jbe
mov
in
out
pop
cld
fwait
ins
xor
imul
xor
mov
(bad)
(bad)
jmp
sbb
push
mov
xchg
test
ss
dec
cmps
clc
(bad)
cmp
ds
loopne
sub
dec
or
clc
repz
cmc
repz
(bad)
(bad)
call
mov
rcr
jo
mov
shl
call
nop
nop
xor
and
dec
ret
cmps
daa
iret
icebp
pop
fdiv
jl
out
ret
test
(bad)
(bad)
(bad)
call
jno
add
adc
or
movs
and
rcl
pop
das
movs
test
outs
gs
std
ins
ins
jno
sbb
(bad)
(bad)
call
push
cld
pushf
cld
jl
and
adc
data16
xchg
push
(bad)
stc
push
and
or
dec
popf
jo
std
jmp
jno
scas
or
ja
push
mov
push
scas
or
sub
inc
lods
fisttp
shl
mov
dec
stc
in
xchg
jg
(bad)
jmp
aas
mov
or
or
out
pop
push
cmp
mov
das
(bad)
jmp
mov
mov
xor
mov
dec
jecxz
cs
and
pop
xor
(bad)
cli
(bad)
(bad)
(bad)
jmp
leave
jmp
pushf
push
mov
xchg
pop
dec
es
ss
nop
fs
nop
scas
push
jmp
sub
repnz
mov
jle
test
je
stos
(bad)
(bad)
inc
jmp
mov
xchg
sbb
pop
lods
mov
pop
pop
popf
push
and
(bad)
fs
aas
dec
or
pop
push
std
jg
es
lahf
test
add
push
les
test
lock
cmp
pusha
sub
xor
cs
dec
sbb
mov
xor
mov
add
cmp
push
add
test
or
add
xor
scas
out
add
add
out
or
das
outs
cmp
sub
cmp
add
(bad)
and
mov
lods
in
push
and
(bad)
jmp
movs
mov
mov
cmps
test
jl
(bad)
cmp
(bad)
(bad)
(bad)
call
push
(bad)
jle
jg
adc
xchg
add
push
rcl
xchg
xchg
lahf
das
push
push
lahf
mov
sti
retf
imul
and
or
adc
iret
das
ret
push
clc
jg
cmc
sbb
pop
or
mov
in
xchg
clc
outs
das
jo
xor
ja
xchg
je
add
es
retf
retf
jl
(bad)
(bad)
call
pop
js
mov
cvtpi2ps
pop
push
call
loopne
test
push
lea
stos
(bad)
(bad)
(bad)
jmp
adc
test
movs
pop
addr16
sahf
sub
mov
xor
cmp
cli
jg
sar
dec
mov
adc
movs
mov
sub
push
mov
call
jnp
scas
lods
mov
clc
fbstp
mov
mov
mov
(bad)
mov
loop
fcmovbe
movs
adc
(bad)
push
mov
cli
(bad)
(bad)
jmp
jno
cmp
test
sub
es
and
jp
arpl
mov
jg
jmp
jmp
sbb
imul
pusha
mov
enter
(bad)
push
mov
outs
add
xchg
pop
cmps
adc
or
mov
jmp
retf
xor
inc
loop
push
je
loopne
sbb
sbb
and
jl
retf
adc
xor
nop
mov
add
sub
pushf
adc
sub
mov
or
retf
retf
call
cdq
pop
test
pop
lods
or
test
(bad)
(bad)
(bad)
mov
jg
fistp
sbb
mov
dec
adc
loope
lock
fcomip
(bad)
push
jmp
add
sub
std
in
scas
adc
jp
jo
(bad)
jmp
mov
sub
and
dec
(bad)
mov
ror
enter
cld
(bad)
(bad)
pusha
xchg
retf
lods
loop
outs
pop
xchg
jmp
std
(bad)
(bad)
(bad)
cli
xchg
sbb
cwde
lods
les
std
stos
aaa
(bad)
jmp
icebp
dec
sbb
das
clc
push
sub
in
cmps
and
imul
sbb
xchg
cld
(bad)
(bad)
dec
push
test
mov
adc
fidiv
jno
mov
pop
inc
mov
xchg
shl
inc
xor
mov
bound
sub
clc
cmp
cmp
sar
(bad)
dec
imul
dec
scas
cld
out
cmp
cmp
sub
(bad)
(bad)
(bad)
jg
stos
in
sub
aad
jns
outs
push
pusha
into
and
adc
sub
jmp
or
or
div
mov
mov
icebp
div
mov
adc
mov
mov
icebp
(bad)
jmp
xchg
test
sub
sahf
cli
stos
mov
dec
jmp
iret
push
fcmovu
pop
movs
mov
cli
arpl
push
mov
sahf
enter
inc
mov
mov
jmp
mov
or
mov
or
outs
and
outs
(bad)
pop
dec
imul
in
xchg
pop
movs
test
(bad)
(bad)
call
jne
adc
push
or
inc
scas
or
push
inc
dec
aad
fld
(bad)
(bad)
mov
pop
aad
test
jp
adc
mov
mov
(bad)
(bad)
(bad)
jg
popf
imul
jl
push
test
sbb
jecxz
ret
jl
bound
xor
(bad)
(bad)
(bad)
jmp
test
stos
adc
jns
std
popa
clc
test
ret
pop
outs
lock
lods
(bad)
jg
(bad)
(bad)
(bad)
(bad)
cmp
imul
push
cmps
mov
lods
inc
call
lods
jle
mov
(bad)
(bad)
fcomip
pop
push
lahf
xor
inc
push
pop
fldenv
jns
dec
ins
mov
dec
call
pusha
push
jmp
rol
call
fnstsw
push
cmova
call
mov
jmp
sub
and
xchg
inc
les
outs
mov
sub
(bad)
(bad)
call
mov
jne
mov
imul
das
inc
mov
xchg
div
cmps
jbe
scas
gs
imul
fcomip
jmp
push
iret
cli
ins
add
or
xchg
inc
add
mov
stos
and
jmp
test
addr16
push
jns
cmp
mov
mov
jecxz
cli
adc
out
push
pop
(bad)
xor
(bad)
(bad)
jmp
inc
pop
icebp
enter
adc
repnz
jnp
mov
(bad)
(bad)
(bad)
(bad)
fcomip
(bad)
ret
sub
call
movs
jmp
(bad)
sub
adc
cmps
call
popa
add
sub
pop
dec
and
pop
push
outs
xchg
jmp
inc
dec
mov
div
popf
lods
push
leave
jmp
or
push
sub
dec
mov
xor
inc
jno
aam
cmp
adc
sub
(bad)
inc
jmp
in
mov
(bad)
fldl2e
enter
(bad)
(bad)
jmp
outs
scas
xchg
(bad)
aad
adc
cmp
inc
dec
mov
in
(bad)
(bad)
inc
pop
mov
pop
(bad)
mov
add
sbb
aad
enter
mov
pop
dec
dec
fwait
idiv
or
lea
jecxz
pop
enter
cmp
repz
inc
mov
push
or
cmps
xor
and
scas
iret
(bad)
fwait
sbb
(bad)
push
stos
inc
mov
pop
xor
test
test
pop
mov
add
jg
sub
call
enter
adc
xor
addr16
jmp
fwait
loopne
pop
inc
loop
xchg
(bad)
(bad)
(bad)
mov
dec
sbb
mov
jp
jns
push
pop
push
sbb
jle
mov
jle
mov
imul
sub
(bad)
jmp
mov
push
enter
cwde
div
scas
adc
outs
outs
and
cdq
sbb
jo
aas
das
(bad)
(bad)
out
cli
out
and
popf
aas
enter
imul
shl
jle
push
push
sar
lock
fiadd
(bad)
jb
inc
(bad)
dec
mov
(bad)
(bad)
(bad)
dec
push
aas
xchg
scas
jmp
test
iret
xor
addr16
bts
jb
(bad)
(bad)
(bad)
(bad)
int
jb
mov
test
scas
cmp
leave
mov
test
and
or
adc
jo
sub
(bad)
(bad)
(bad)
call
sub
sbb
dec
mov
inc
retf
and
lock
mov
push
(bad)
(bad)
(bad)
(bad)
std
loop
scas
push
mov
pop
pushf
ins
lods
adc
add
xchg
push
pop
jg
fmul
(bad)
call
cld
mov
cmp
mov
push
xor
js
mov
test
mov
pop
(bad)
(bad)
(bad)
jmp
jg
and
(bad)
aam
mov
xor
ret
daa
inc
sub
cmp
fistp
pop
stos
sbb
sub
outs
sub
cmps
test
iret
pop
mov
mov
into
sbb
sub
das
cmp
dec
fdivr
xchg
sub
sub
out
movs
enter
fisubr
pop
sub
jmp
test
js
dec
test
push
sub
outs
test
retf
or
(bad)
(bad)
(bad)
jmp
pop
inc
push
ss
ret
lods
jmp
cs
mov
imul
std
dec
xchg
(bad)
(bad)
(bad)
inc
or
jmp
inc
daa
pop
xor
fisttp
xor
cmp
mov
cmps
gs
jbe
cmc
jmp
xor
mov
adc
lods
xchg
in
(bad)
mov
leave
mov
aad
lds
xchg
jge
adc
or
pop
hlt
(bad)
jg
test
lods
fnstcw
pop
push
xor
pushf
inc
in
stc
mov
push
jmp
push
dec
mov
adc
stos
xlat
fisubr
sub
xchg
std
xor
ss
(bad)
(bad)
(bad)
dec
inc
js
cmp
imul
xchg
repz
ins
aaa
lock
mov
out
clc
aaa
std
(bad)
mov
movs
std
mov
sub
xchg
xchg
mov
adc
sbb
inc
mov
pop
fldcw
cmc
lods
jb
cmp
inc
out
lds
je
jne
in
stos
or
and
mov
mov
jbe
mov
jmp
sub
xor
cld
mov
das
aam
in
test
add
cld
stos
cdq
test
(bad)
jmp
or
test
sbb
repz
movs
and
jno
lock
(bad)
(bad)
push
adc
adc
push
add
lock
push
stc
sbb
stos
enter
test
push
(bad)
(bad)
(bad)
inc
ret
aad
fisubr
mov
pop
push
fisub
fsubr
push
and
jmp
jg
(bad)
jp
jle
movs
cdq
sub
jnp
scas
out
mov
outs
add
es
fs
dec
in
nop
jle
(bad)
popa
outs
mov
(bad)
(bad)
dec
pusha
rcl
push
sub
aad
cmp
(bad)
(bad)
(bad)
push
sub
dec
cmps
mov
ret
outs
sbb
pop
sub
dec
ss
cs
movs
pop
(bad)
(bad)
(bad)
(bad)
mov
xor
jle
sbb
xchg
dec
add
hlt
gs
(bad)
mov
cdq
pop
jo
push
mov
push
jmp
fs
je
pop
in
daa
gs
pop
das
pop
add
imul
cmps
jmp
inc
pusha
jl
jne
(bad)
call
andps
les
jl
shl
lea
movs
cmp
add
pop
push
stc
jle
sahf
aaa
jmp
(bad)
inc
sub
iret
pop
jmp
push
imul
pop
mov
(bad)
inc
push
loope
cmps
sub
(bad)
daa
push
dec
cmc
add
call
(bad)
(bad)
mov
mov
aas
pushf
jne
sbb
cmp
cdq
pop
push
int3
pushf
inc
clc
pop
push
shl
call
jnp
out
out
pop
or
adc
or
push
dec
jbe
mov
and
call
or
or
adc
lods
loopne
stos
cmp
(bad)
dec
cmp
popa
imul
jns
mov
mov
mov
mov
scas
cli
shr
push
inc
sbb
jp
adc
xlat
sahf
add
mov
sub
and
repnz
adc
jb
ja
repnz
jg
outs
jbe
push
lock
cmps
call
lock
outs
mov
loop
fstp
xor
sbb
repz
(bad)
sti
(bad)
jp
sbb
jno
pop
pop
mov
div
out
push
fild
mov
xor
jg
jg
mov
jge
cmp
icebp
xlat
xlat
pop
mov
adc
fs
jmp
push
push
(bad)
pop
add
add
dec
push
add
(bad)
sti
cmp
fiadd
in
movs
movs
sbb
out
fcomp
std
inc
add
push
push
add
arpl
lahf
loopne
cmps
aad
lea
call
cmps
cmps
pop
std
rcl
xchg
xchg
inc
outs
enter
mov
leave
cmovge
mov
xchg
data16
sub
jmp
in
mov
jmp
test
daa
cmps
popf
mov
jg
call
jmp
into
cwde
cwde
cld
jae
xchg
dec
call
pop
test
ret
ret
mov
cli
cli
pop
pop
add
icebp
dec
fcmovu
cmp
mov
leave
sbb
test
js
dec
fcomp
cmps
call
(bad)
cmp
add
sbb
xchg
inc
das
push
or
(bad)
(bad)
(bad)
inc
adc
sbb
addr16
dec
and
sbb
pop
mov
pop
int
sbb
clc
mov
(bad)
mov
(bad)
cmp
sbb
(bad)
inc
xchg
dec
dec
pop
pop
mov
rcr
xor
mov
je
(bad)
mov
sbb
ficom
mov
rcr
je
or
inc
jb
push
jmp
push
into
fadd
aaa
lea
cmp
jecxz
push
inc
and
and
out
das
das
sbb
push
push
push
sbb
adc
or
inc
bound
adc
sahf
test
jle
cmps
lock
(bad)
jg
cdq
cdq
(bad)
mov
(bad)
(bad)
push
xor
xor
retf
ja
push
mov
cmps
sub
push
push
add
and
jg
call
xchg
jg
nop
inc
mov
push
push
add
adc
jae
popa
lods
sub
cs
cmc
jmp
shr
push
fiadd
pop
std
mov
call
(bad)
cmp
or
jne
xchg
dec
adc
xchg
jbe
sub
push
push
pop
adc
fwait
fwait
stc
xchg
(bad)
mov
pop
pop
mov
adc
rol
dec
fcmovnu
cmp
jmp
(bad)
rcl
test
dec
or
in
pusha
add
scas
cld
mov
cmp
cmps
les
lods
mov
inc
pop
pop
mov
call
pop
out
mov
dec
sbb
and
sub
pop
push
(bad)
inc
inc
cmp
and
rol
cmp
retf
sbb
jnp
pop
pop
int
movs
movs
sbb
mov
dec
jmp
in
push
dec
dec
cmp
pop
push
retf
call
outs
in
xchg
jg
xchg
xchg
dec
sahf
pusha
pusha
push
out
mov
cmp
repz
in
fnstcw
cmp
dec
cmps
cmp
ficom
es
aas
dec
(bad)
aas
pop
jl
fistp
jb
out
div
in
arpl
xchg
xor
movs
dec
call
ins
ins
loope
iret
iret
add
push
add
clc
push
cld
cld
push
in
push
or
xchg
sub
sub
idiv
scas
sub
and
push
clc
push
outs
dec
dec
lea
imul
ffreep
in
(bad)
shl
mov
out
and
cwde
mov
ja
and
in
arpl
pop
stc
jg
pop
pop
mov
mov
adc
ret
add
movs
lods
lods
mov
sub
mov
int3
int3
add
(bad)
out
mov
(bad)
imul
cmps
xchg
pop
scas
cld
mov
xor
fcmovnb
ret
mov
das
or
pop
(bad)
fwait
movs
inc
inc
xor
mov
sub
and
xchg
mov
test
std
mov
cmp
adc
aaa
aaa
inc
inc
xor
fucom
shl
imul
xor
xor
rol
(bad)
mov
cmps
scas
sub
sub
call
push
aas
mov
and
or
(bad)
push
push
pop
xlat
(bad)
repnz
inc
mov
cmps
sub
and
xor
mov
(bad)
jg
mov
sbb
out
out
gs
jl
adc
push
ins
fstp
test
imul
sbb
adc
push
xor
add
out
push
arpl
(bad)
(bad)
jg
jmp
leave
pop
aad
jmp
mov
(bad)
cwde
xchg
sub
cli
add
mov
xchg
(bad)
jmp
std
cmp
push
(bad)
sbb
xchg
cmp
je
xor
test
mov
or
inc
cmp
outs
das
push
loop
sahf
jle
(bad)
(bad)
jg
repnz
xor
imul
xor
popa
rol
stos
push
xchg
xchg
(bad)
jmp
call
(bad)
ror
cmc
jns
jg
popf
lods
mov
mov
mov
(bad)
(bad)
(bad)
jmp
dec
sbb
mov
or
retf
outs
xchg
in
aam
fnstcw
dec
(bad)
out
(bad)
push
ins
iret
in
cld
or
clc
dec
imul
loope
and
in
pop
push
jno
add
(bad)
icebp
int3
cs
mov
inc
mov
and
inc
jecxz
(bad)
(bad)
call
dec
shl
jmp
push
bound
mov
xor
mov
pop
test
sti
in
scas
test
(bad)
jg
sub
jb
sub
jle
ret
stos
test
mov
or
mov
mov
add
(bad)
pop
mov
aad
mov
(bad)
call
inc
in
out
mov
jmp
cmps
adc
cli
push
mov
je
aaa
mov
call
(bad)
call
stos
pop
out
pop
or
jmp
cmp
call
lods
push
adc
(bad)
jmp
mov
or
bound
enter
ror
iret
xchg
or
popa
ins
pushf
mov
(bad)
call
dec
push
mov
scas
sub
push
aas
clc
ss
push
jb
xor
stos
retf
jbe
sub
stos
and
ret
(bad)
(bad)
dec
into
xor
push
mov
push
rol
fldenv
fwait
cdq
sahf
(bad)
out
cli
jg
and
pop
cmps
add
rcl
push
mov
mov
mov
cmps
jo
add
aaa
push
ins
aaa
fsubr
push
(bad)
(bad)
(bad)
push
(bad)
adc
lods
push
mov
ss
repz
xchg
mov
mov
cmp
jp
stos
stos
pop
pop
mov
cmp
scas
stos
sub
mov
add
adc
or
stos
push
pusha
push
or
jmp
dec
cli
push
ret
test
mov
mov
xchg
cmps
jmp
and
cmps
mov
ret
or
nop
in
add
inc
fcom
(bad)
call
mov
outs
jmp
iret
mov
test
lock
std
mov
pop
cmc
(bad)
(bad)
jge
mov
push
cli
movs
cli
test
cmp
stos
(bad)
push
adc
stos
pusha
mov
(bad)
(bad)
jmp
ror
mov
shr
pusha
sub
dec
cmps
sar
dec
test
in
jae
nop
jmp
icebp
aas
movs
fwait
test
sub
sbb
inc
fs
mov
pop
mov
push
dec
repz
ins
je
sti
cmps
dec
xor
or
daa
jmp
in
in
lock
jmp
cmps
mov
in
test
lds
sub
xor
xor
cmp
das
xchg
lds
mov
shl
call
xchg
out
ss
mov
cmc
call
or
xchg
(bad)
(bad)
(bad)
jmp
int
lods
in
jne
mov
pop
adc
aaa
jne
xor
pushf
lahf
mov
cmp
(bad)
jmp
inc
mov
cmps
js
cmps
xchg
into
test
pop
lock
(bad)
mov
mov
mul
imul
pop
inc
sub
ss
cmp
(bad)
outs
push
clc
fist
push
stos
xor
push
sub
sbb
jbe
call
aam
in
test
dec
mov
stos
and
into
jo
sbb
dec
adc
mov
add
lea
stos
scas
dec
xlat
mov
lea
rol
sub
stos
xlat
xchg
mov
mov
stos
fisub
sub
inc
jge
add
(bad)
mov
dec
mov
loopne
or
fmul
sbb
sbb
retf
(bad)
pop
jae
mov
add
call
int
(bad)
bnd
data16
cmc
mov
pop
hlt
xlat
test
xlat
enter
icebp
mov
scas
inc
mov
ds
add
fdivr
add
and
inc
cmps
mov
pop
std
mov
mov
rcl
call
repz
jl
add
repz
aas
pop
out
xchg
js
in
mov
cmp
out
dec
push
std
xchg
or
inc
cmp
sbb
xor
shl
jo
test
cmps
int3
jge
or
pushf
push
push
sub
or
pop
sar
(bad)
mov
frstor
inc
mov
sub
pop
stc
imul
sub
push
(bad)
jne
jecxz
ins
ror
bnd
adc
mov
call
or
icebp
xchg
ret
add
sub
test
call
in
sub
imul
cmp
test
cld
stc
dec
inc
in
retf
div
rol
dec
lahf
jae
xchg
jmp
cli
add
sbb
cmp
in
sub
dec
mov
stos
mov
ret
ja
jns
dec
cli
inc
jle
add
jg
jno
mov
jb
mov
cmps
jmp
scas
sti
push
cmp
adc
shl
scas
sahf
data16
inc
frstor
inc
jmp
fidiv
adc
aam
pop
sub
mov
or
mov
(bad)
jmp
pop
xor
loop
sbb
push
cmp
sbb
mov
fild
pusha
ins
jge
adc
iret
fidivr
test
repz
or
in
sub
sar
leave
dec
or
fcomp
xchg
(bad)
pop
loope
ret
xchg
adc
pop
mov
in
out
fstp
cmp
mov
retf
test
or
imul
jg
cmp
test
(bad)
jo
shl
jmp
repnz
mov
repnz
std
fisubr
cmps
xor
nop
pop
lods
jne
mov
cmc
call
mov
neg
adc
cmp
push
cwde
(bad)
shl
and
mov
in
xchg
pushf
xlat
mov
repnz
fwait
ror
test
push
call
jge
adc
inc
xor
mov
jnp
pop
push
sub
xchg
jp
(bad)
fld
retf
ins
xor
cs
fidiv
mov
gs
out
movs
pop
or
jge
push
push
ror
dec
(bad)
aaa
repz
mov
inc
and
call
call
leave
shl
push
lock
inc
enter
loopne
or
scas
sub
jmp
or
adc
dec
into
mov
jb
xchg
cmp
dec
out
(bad)
mov
cmc
push
jg
inc
cmp
xchg
ins
pop
idiv
push
cmps
clc
mov
jmp
sbb
arpl
jbe
sub
in
mov
sar
les
cmps
add
dec
mov
sbb
add
adc
push
pop
leave
inc
add
cmp
cmp
retf
mov
adc
lock
stc
or
in
dec
popa
push
(bad)
pop
stc
fldenv
push
shl
sti
mov
and
mov
xchg
call
pop
jbe
dec
(bad)
(bad)
jb
push
mov
out
in
sub
mov
mov
xchg
outs
or
sbb
cld
mov
jmp
stc
jg
shr
popf
adc
fdivr
xor
dec
adc
(bad)
xor
loopne
ss
xor
jl
loop
mov
or
gs
and
imul
sar
je
fidiv
imul
popf
pop
sub
inc
cmp
lahf
aad
out
call
add
push
jns
jmp
out
pop
ret
xchg
mov
sub
dec
cmps
call
jmp
call
scas
pop
retf
jnp
lea
clc
push
imul
mov
call
xchg
inc
daa
loope
arpl
iret
mov
sbb
mov
sub
scas
shr
in
push
sbb
cmp
test
push
sub
nop
inc
mov
xlat
adc
adc
push
shr
inc
sahf
out
aaa
(bad)
(bad)
jmp
inc
xor
out
sbb
cwde
jns
outs
repz
dec
mov
int3
sub
(bad)
(bad)
(bad)
(bad)
call
ds
mov
lea
and
out
outs
data16
rol
xchg
(bad)
jmp
dec
sti
into
(bad)
jb
loop
adc
aad
das
cli
lds
xchg
(bad)
sti
(bad)
(bad)
dec
cmps
push
pop
mov
fwait
add
mov
mov
rol
(bad)
(bad)
mov
ret
pusha
in
mov
jo
repnz
push
dec
fidiv
div
pop
sar
(bad)
dec
mov
sub
gs
dec
push
mov
inc
sub
ja
cdq
(bad)
push
jmp
fcmovbe
mov
push
and
lods
call
jp
hlt
or
(bad)
(bad)
arpl
sbb
or
add
xchg
lahf
xor
ffree
enter
(bad)
(bad)
cmp
pushf
(bad)
mov
scas
and
pop
sub
in
les
mov
imul
mov
stos
xchg
mov
call
imul
fld
mov
lock
add
jnp
test
retf
sbb
(bad)
dec
gs
popa
add
jnp
aad
pop
or
add
inc
(bad)
(bad)
(bad)
dec
daa
in
loopne
out
popa
mov
and
stos
cmp
xor
out
sbb
(bad)
(bad)
(bad)
cmp
das
sbb
or
aaa
dec
aas
or
xchg
mov
sub
(bad)
(bad)
(bad)
inc
rol
imul
cmps
push
(bad)
adc
adc
test
dec
mov
(bad)
sbb
push
adc
inc
sar
addr16
push
jb
outs
mov
jnp
jp
(bad)
(bad)
(bad)
inc
ins
retf
push
test
mov
inc
stos
frstor
loopne
cmc
mov
mov
mov
xor
(bad)
mov
loop
mov
push
or
cdq
(bad)
(bad)
(bad)
dec
cdq
test
add
cdq
sub
(bad)
mov
(bad)
shl
call
jp
mov
jb
shl
fcom
fisub
inc
pop
sub
loope
test
(bad)
jmp
pop
push
sub
imul
adc
jae
arpl
jnp
(bad)
call
and
popa
test
dec
xlat
cdq
daa
ins
(bad)
loopne
mov
xor
test
(bad)
(bad)
aas
xchg
outs
lahf
jmp
mov
je
nop
mov
js
fistp
into
test
(bad)
jg
xor
imul
mov
call
loopne
dec
imul
imul
fwait
xchg
shl
jge
adc
ret
(bad)
push
cmp
mov
loope
push
mov
inc
jb
stos
mov
call
push
stos
push
xor
xchg
cs
mov
xor
pusha
xchg
test
xchg
in
int
loop
mov
iret
fidiv
retf
addr16
int3
sub
push
call
mov
loope
dec
pop
mov
mov
clc
xchg
push
jae
ret
cmps
or
in
repnz
push
(bad)
push
outs
pusha
in
popa
ins
sbb
imul
test
(bad)
pop
jne
fnsave
mov
(bad)
call
adc
push
cmp
not
test
outs
jb
(bad)
mov
sub
imul
popf
fsub
pushf
out
adc
cli
nop
retf
jecxz
xchg
(bad)
(bad)
(bad)
(bad)
fisub
cmps
mov
(bad)
outs
ret
shr
mov
(bad)
pop
jmp
(bad)
(bad)
dec
cmps
mov
hlt
fcom
mov
jne
xor
cmp
pop
shr
loopne
call
(bad)
into
jle
ds
addr16
mov
inc
test
xchg
xchg
aas
xor
sar
(bad)
(bad)
push
std
pusha
ins
pop
add
popf
andps
aaa
add
mov
mov
push
pop
adc
(bad)
jmp
cdq
sbb
fist
jmp
clc
fcmovnb
push
mov
inc
cmps
cwde
xor
rcr
cmps
shr
and
mov
sbb
sub
imul
popa
jnp
dec
movs
lds
daa
cwde
pop
inc
(bad)
jg
(bad)
jl
dec
cmp
pop
ds
loop
mov
xchg
leave
lods
fsubrp
or
(bad)
(bad)
(bad)
jmp
sub
gs
fisubr
dec
xor
(bad)
lods
mov
or
jl
stos
add
fucomi
leave
add
scas
lea
leave
mov
hlt
call
(bad)
mov
imul
sub
mov
or
push
adc
or
(bad)
jmp
cs
(bad)
jp
js
lods
loopne
stos
and
or
test
jg
hlt
jle
xor
retf
das
xchg
sbb
xchg
add
pop
mov
(bad)
dec
out
cld
stos
shl
test
jle
cmp
sub
test
xchg
mov
mov
fs
imul
iret
je
xchg
pop
imul
mov
(bad)
(bad)
jmp
add
pop
psllw
inc
push
cwde
and
sub
in
cmps
sbb
dec
sti
pop
mov
push
scas
push
stos
cmp
xchg
mov
xor
jp
mov
call
push
sub
sahf
sub
inc
xlat
pop
sub
xchg
mov
sahf
jmp
mov
(bad)
(bad)
(bad)
jmp
adc
push
sti
or
shl
xor
or
xor
(bad)
(bad)
(bad)
inc
jl
ss
or
push
clc
sahf
jmp
lods
mov
xor
dec
outs
std
mov
pop
xchg
xor
adc
leave
pop
mov
(bad)
jg
push
mov
in
cmp
jae
cs
retf
push
push
jmp
pop
stos
inc
and
mov
add
and
scas
sbb
(bad)
jbe
fmul
mov
(bad)
jmp
or
call
sub
jecxz
sub
stos
sub
sbb
mov
das
ror
mov
cmp
add
xlat
jne
sub
fcomp
cs
idiv
mov
cli
mov
fidivr
dec
adc
mov
(bad)
mov
sub
cli
push
test
jp
mov
and
scas
sub
xchg
add
mov
inc
jge
mov
pop
pusha
mov
jbe
dec
scas
push
push
mov
mov
cmc
or
dec
or
ja
stos
cwde
test
aaa
dec
jp
push
mov
data16
stos
call
scas
cli
call
and
xor
dec
or
inc
cmp
cwde
cmp
pushf
mov
stos
(bad)
jno
fstp
sub
push
add
adc
in
add
add
mov
stos
(bad)
(bad)
(bad)
fist
cmp
sbb
(bad)
cli
lods
dec
pop
push
(bad)
data16
pop
fistp
or
idiv
fcmovnu
or
mov
retf
jo
pop
fcomp
fsubr
int3
int3
inc
cmp
jge
jmp
mov
push
and
cmps
out
stos
mov
and
inc
movs
cli
jecxz
mov
stos
jp
push
mov
dec
sbb
cmp
mov
pop
mov
ins
(bad)
jg
stos
jle
or
stos
lods
rol
ds
push
sub
inc
push
(bad)
mov
fs
scas
mov
or
mov
stos
xchg
loopne
(bad)
(bad)
jmp
xor
inc
jnp
cmp
xchg
addr16
leave
pop
fst
fnstcw
xchg
(bad)
(bad)
mov
nop
jg
test
xchg
scas
inc
xchg
leave
js
fs
in
and
jg
(bad)
call
add
addr16
stos
imul
add
outs
ss
(bad)
sar
loopne
gs
(bad)
(bad)
call
mov
pop
clc
xchg
aaa
stos
(bad)
imul
ret
out
add
lahf
and
popf
and
jmp
cli
ret
mov
test
xor
sar
add
es
mov
mov
cmp
jne
xor
mov
jmp
and
stos
pop
out
inc
pop
scas
pop
or
dec
mov
mov
lods
les
(bad)
jmp
mov
in
fcmovnu
mov
add
sbb
pop
test
jmp
xor
sbb
inc
push
mov
push
data16
out
or
fwait
adc
(bad)
push
stos
push
(bad)
call
add
inc
sti
jp
cmp
in
mov
(bad)
mov
enter
lods
stos
fdivr
jbe
and
mov
add
mov
push
xchg
stos
cmps
out
scas
(bad)
(bad)
fcomip
test
sub
sbb
push
in
jmp
push
scas
jmp
aas
and
jg
stos
scas
xor
add
jecxz
xor
stos
jnp
xchg
pop
iret
xlat
mov
idiv
push
push
push
iret
cld
pushf
in
lock
pop
scas
cld
lea
mov
test
fcmovbe
ja
inc
push
adc
mov
sbb
test
xor
(bad)
(bad)
jg
std
(bad)
fsubr
and
in
test
dec
cmp
lods
popf
cmp
cmp
stc
mov
inc
xor
movs
mov
sub
inc
cmp
sub
(bad)
(bad)
(bad)
call
push
es
or
mov
sub
pop
xchg
je
jb
(bad)
stos
fwait
mov
test
(bad)
call
cmps
cdq
and
cld
push
push
(bad)
push
test
ins
inc
inc
(bad)
(bad)
(bad)
jmp
scas
add
inc
cwde
jg
outs
sbb
pop
call
nop
popf
aad
shl
jecxz
(bad)
jmp
retf
and
rcr
inc
push
xchg
test
sbb
imul
movs
push
xchg
jno
(bad)
(bad)
mov
or
aaa
ja
addr16
cmp
movs
fnstsw
xlat
cmps
test
pop
repnz
(bad)
mov
jle
lods
ret
(bad)
lods
lods
test
scas
or
mov
(bad)
jg
std
push
mov
frstor
mov
adc
sbb
test
(bad)
(bad)
jmp
test
inc
ja
int
(bad)
cmps
jp
pushf
movs
movs
sbb
jno
iret
fcomi
add
jg
or
sahf
dec
(bad)
bound
loope
outs
clc
js
js
scas
mov
pop
je
push
push
mov
adc
pushf
sub
sub
loopne
movs
pop
dec
push
call
and
mov
bound
push
pop
jmp
mov
cmc
jns
gs
mov
(bad)
(bad)
jmp
aaa
dec
(bad)
pop
mov
add
pop
xchg
test
push
ror
(bad)
(bad)
call
xchg
jg
arpl
test
mov
repnz
mov
pop
and
daa
pop
mov
cmp
in
mov
and
mov
(bad)
pop
arpl
fwait
lock
sbb
push
ret
(bad)
(bad)
(bad)
call
and
jns
jl
sbb
cmps
inc
sub
inc
(bad)
mov
xchg
imul
arpl
xor
into
stos
push
mov
das
xchg
jmp
dec
cmc
pop
(bad)
(bad)
xchg
push
ret
push
jns
fisubr
mov
inc
sbb
or
ss
int3
sar
scas
clc
call
mov
adc
sti
push
pop
sbb
xor
jg
shl
mov
(bad)
dec
loope
push
jmp
sub
push
jl
inc
in
scas
dec
and
data16
scas
retf
mul
lahf
push
cmps
mov
push
push
mov
mov
(bad)
(bad)
(bad)
mov
add
cmp
jge
mov
pop
or
(bad)
jmp
pop
and
bound
push
jb
stc
sub
pop
retf
stos
pop
(bad)
push
mov
jg
stos
dec
cld
stos
lahf
xchg
xchg
iret
test
push
xchg
mov
lea
jmp
lods
repnz
jp
xchg
mov
sub
jmp
call
jns
xchg
repz
cld
jl
xor
mov
jmp
movs
mov
out
mov
stos
(bad)
mov
and
jno
sbb
lock
clc
push
sbb
ror
pop
call
mov
scas
cmps
(bad)
(bad)
(bad)
push
cmp
loope
push
out
mov
es
ins
jl
mov
(bad)
fidiv
(bad)
jmp
xor
and
jo
test
push
rcl
mov
mov
xchg
(bad)
inc
cmp
shr
gs
sub
sub
(bad)
adc
mov
jmp
call
sahf
fst
cld
loop
stos
loopne
out
adc
es
cdq
or
pop
add
dec
sbb
push
repz
pop
inc
and
pushf
jg
(bad)
dec
int3
pop
push
call
jmp
sahf
sbb
ds
mov
(bad)
jmp
stos
stos
adc
sbb
push
pop
push
inc
push
stos
jb
test
fnstsw
sub
icebp
(bad)
push
push
inc
mov
pop
mov
mov
push
pop
pusha
(bad)
(bad)
(bad)
(bad)
cmp
mov
inc
ja
jae
test
cmp
sbb
mov
mov
sti
(bad)
(bad)
jmp
sub
scas
push
mov
push
push
test
push
inc
add
mov
mov
xor
lock
(bad)
push
(bad)
(bad)
jmp
and
cs
repz
push
dec
jp
and
pop
into
jl
sub
cmp
push
mov
inc
sti
outs
in
sub
mov
or
jmp
sub
adc
xor
(bad)
jg
test
sub
inc
fld
xor
xchg
jle
out
mov
xor
inc
bound
inc
mov
mov
cmp
aas
clc
mov
mov
mov
out
and
xor
push
cmp
mov
mov
jg
call
pusha
movs
xor
adc
pusha
add
mov
(bad)
(bad)
(bad)
(bad)
jle
mov
cmp
and
inc
xchg
movs
movs
hlt
mov
sbb
jmp
jmp
in
push
xchg
and
fisttp
sub
(bad)
call
sub
int
dec
scas
iret
lods
xchg
and
inc
cmps
cli
imul
das
mov
pop
stos
std
stos
fsubr
repnz
rol
stos
(bad)
pop
lods
jmp
inc
cmps
aad
imul
xor
pusha
xchg
sbb
repnz
add
jmp
mov
or
push
jmp
sbb
push
pop
les
and
push
mov
(bad)
(bad)
mov
ret
fisubr
dec
fcmovnu
push
inc
in
imul
mov
aaa
mov
add
fidivr
retf
gs
add
scas
imul
sub
call
fwait
(bad)
call
pusha
mov
outs
arpl
push
inc
push
and
in
ret
(bad)
dec
mov
jno
inc
mov
sbb
dec
sub
xchg
adc
adc
mov
mov
enter
jnp
inc
dec
mov
lock
xchg
xlat
push
jne
adc
mov
and
jbe
icebp
jl
stos
stos
push
dec
or
(bad)
(bad)
(bad)
(bad)
mov
jo
or
cld
pop
mov
jecxz
inc
xor
sub
aaa
(bad)
(bad)
(bad)
inc
sub
sub
test
mov
pop
jp
sub
sbb
push
pop
test
(bad)
call
popa
sub
test
sub
retf
jmp
jmp
add
cmp
ret
jbe
cmps
in
test
movs
xchg
(bad)
push
jmp
cmps
rol
iret
cmp
(bad)
push
jmp
cs
call
das
scas
dec
push
dec
jmp
cmp
cmp
xor
scas
in
into
outs
(bad)
(bad)
(bad)
mov
inc
inc
retf
adc
call
or
call
sbb
jg
loope
test
inc
push
stos
sahf
pop
mov
in
mov
(bad)
(bad)
(bad)
(bad)
dec
arpl
jecxz
aaa
mov
repz
or
jecxz
(bad)
fisubr
jmp
mov
cld
mov
mov
movs
mov
sub
mov
mov
(bad)
(bad)
jmp
mov
leave
push
xor
inc
rol
mov
cmps
cmc
out
dec
aam
(bad)
mov
movs
push
test
or
retf
and
outs
jmp
(bad)
inc
or
pop
cmp
in
sar
jnp
clc
data16
loop
scas
fldenv
xlat
cmp
(bad)
push
cmc
sbb
addr16
mov
outs
cmp
out
xlat
mov
pop
(bad)
imul
out
add
pop
aam
jmp
cmp
scas
(bad)
adc
jbe
mov
test
arpl
ja
jmp
jp
push
loope
or
fwait
pop
stc
sar
xor
push
pop
int
sar
(bad)
call
div
jae
jo
out
pop
stos
dec
fdivr
mov
push
mov
(bad)
jg
jg
mov
test
and
and
jno
out
jmp
(bad)
sub
mov
ds
sub
shr
dec
fimul
(bad)
(bad)
(bad)
(bad)
mov
scas
test
cmp
mov
int3
mov
imul
in
imul
push
dec
ror
mov
push
cmps
fwait
pushf
sub
aam
(bad)
out
out
xchg
mov
(bad)
call
cs
jns
cmp
xor
mov
imul
(bad)
(bad)
(bad)
cmps
cmp
inc
fsub
or
stos
and
dec
aas
jge
scas
ficomp
xor
pop
div
cwde
xor
(bad)
jmp
jp
push
into
sbb
sahf
test
test
in
inc
jle
or
xor
sbb
xchg
(bad)
(bad)
dec
dec
rcr
add
cwde
ffreep
fnstenv
mov
ret
inc
pop
outs
pusha
(bad)
(bad)
(bad)
dec
jb
mov
jmp
pop
mov
lock
dec
sbb
mov
stc
add
(bad)
(bad)
jns
cwde
loope
pop
mov
jno
rcr
clc
pop
push
push
mov
lahf
xor
stc
push
call
jle
dec
scas
mov
(bad)
(bad)
call
jae
popf
sub
mov
mov
fld
push
mov
push
jl
out
scas
lods
mov
clc
push
inc
adc
pop
outs
sbb
rol
inc
jb
bound
paddd
test
loope
outs
mov
ss
ret
test
in
test
inc
inc
mov
mov
inc
sbb
clc
lods
rcr
stc
das
xchg
push
lock
push
(bad)
sbb
imul
mov
lahf
hlt
xchg
cs
mov
lods
sbb
nop
or
inc
fwait
pop
psubd
nop
ins
mov
loop
mov
std
push
cld
fisttp
pop
movs
and
lods
sbb
ins
inc
add
dec
retf
or
push
xor
or
in
pop
cmps
into
out
lea
xchg
das
cmps
mov
dec
daa
mov
movs
fwait
pop
xchg
mov
test
rcr
stc
push
inc
inc
iret
mov
xchg
inc
cld
fwait
test
mov
mov
adc
(bad)
inc
push
cmps
loopne
push
call
sub
push
mov
inc
jg
adc
push
retf
push
aam
hlt
inc
dec
je
cmp
cli
cmp
push
inc
sti
dec
cs
addr16
pop
sahf
push
movs
nop
retf
cs
call
pop
cmps
out
sub
and
stos
fneni(8087
(bad)
fwait
(bad)
(bad)
jmp
inc
sub
popa
push
xor
dec
mov
rol
and
leave
stc
shl
jge
repz
(bad)
(bad)
(bad)
jg
push
imul
mov
out
sub
mov
push
dec
(bad)
call
fdivr
(bad)
(bad)
call
mov
arpl
or
sub
mov
jnp
mov
jbe
clc
(bad)
(bad)
push
pop
mov
mov
dec
movs
lea
sbb
sub
or
clc
xor
add
call
stos
arpl
(bad)
(bad)
call
in
pop
les
imul
jno
hlt
xchg
cmp
out
jmp
xor
inc
mov
retf
mov
loope
int
cmps
(bad)
shl
shr
ins
mov
in
jp
(bad)
(bad)
(bad)
(bad)
jmp
and
sub
ret
mov
ret
push
ret
(bad)
inc
adc
sub
mov
mov
loope
push
pop
(bad)
cmp
inc
cmp
je
bndldx
clc
jmp
cmp
in
sub
jle
test
dec
hlt
pop
mov
(bad)
(bad)
out
cli
dec
out
(bad)
sub
mov
ds
xchg
dec
into
xchg
and
pop
or
(bad)
(bad)
(bad)
inc
imul
mov
mov
sahf
mov
les
(bad)
jmp
outs
pop
lock
test
loopne
mov
dec
arpl
(bad)
aaa
test
sbb
in
ja
mov
call
loopne
jns
fdiv
(bad)
dec
xor
sti
mov
push
aad
push
es
jmp
sti
mov
gs
test
xchg
scas
mov
outs
leave
test
(bad)
(bad)
call
stos
fcmovb
movs
scas
out
bound
push
mov
inc
push
sti
popa
(bad)
cwde
std
mov
or
sbb
push
arpl
lock
addr16
bound
je
(bad)
call
add
sub
push
mov
adc
mov
add
retf
mov
(bad)
fcomip
pop
mov
jmp
ins
pop
icebp
push
mov
daa
push
jns
pop
pop
popa
(bad)
(bad)
(bad)
dec
and
pusha
or
dec
movzx
les
push
push
popa
mov
jo
add
movs
push
push
nop
sub
(bad)
jnp
sbb
sbb
mov
retf
sub
add
test
dec
push
scas
push
add
(bad)
dec
(bad)
push
repz
push
add
xchg
dec
(bad)
cmp
cmp
adc
mov
aad
js
dec
cdq
imul
mov
or
sub
mov
pop
movs
out
mov
movs
rcl
dec
pop
cmps
cmp
sbb
cmp
(bad)
(bad)
mov
(bad)
and
sub
add
pop
mov
js
ds
jmp
(bad)
jmp
addr16
pop
jle
push
pop
push
(bad)
ss
movs
pop
dec
push
dec
call
inc
push
pop
cmp
cli
and
push
adc
stos
dec
in
mov
mov
push
or
jmp
cli
(bad)
inc
sub
ret
cmp
pop
stos
mov
es
fwait
(bad)
(bad)
(bad)
jmp
or
fidiv
test
stos
sbb
rcr
pop
pop
es
mov
mov
jmp
jmp
or
push
(bad)
enter
mov
adc
stos
and
(bad)
(bad)
(bad)
push
repnz
rcl
cmp
sahf
mov
inc
cmp
rcr
stos
(bad)
(bad)
(bad)
(bad)
cmp
sub
ret
test
shl
mov
jecxz
jmp
dec
out
mov
(bad)
(bad)
push
sti
push
mov
lock
aad
cld
jno
inc
outs
adc
cdq
jecxz
stos
fild
in
push
rol
(bad)
jg
(bad)
(bad)
cmc
clc
inc
inc
sub
sbb
cld
in
mov
aaa
hlt
mov
inc
in
shr
arpl
inc
xchg
lock
xor
jecxz
mov
fadd
sub
cdq
arpl
loope
xchg
cmp
nop
adc
(bad)
(bad)
jg
cdq
loopne
adc
dec
es
cmp
xchg
xchg
call
sub
and
sahf
lea
in
call
bound
mov
or
out
loop
mov
pop
sub
(bad)
xor
xchg
sbb
push
stos
ja
dec
(bad)
jmp
in
mov
mov
out
loop
test
jecxz
jo
sbb
popf
or
and
xor
xchg
adc
(bad)
(bad)
call
imul
dec
in
ss
push
fwait
mov
sahf
clc
push
mov
clc
std
(bad)
push
in
sub
scas
movs
xor
in
mov
sbb
(bad)
jmp
call
mov
pop
retf
(bad)
push
pusha
mov
loop
mov
rcr
call
repnz
jg
jmp
jne
mov
fwait
mov
push
sbb
cmp
lods
sbb
stos
aam
sub
lds
neg
test
les
sub
pop
ja
clc
inc
cmp
or
jb
fstp
jl
ret
fdivr
cli
adc
in
out
enter
sti
pop
es
jno
pop
lea
mov
xchg
add
xor
(bad)
fild
xor
test
mov
pop
adc
push
push
pop
in
mov
(bad)
call
mov
mov
out
pop
or
mov
ins
cmp
jg
(bad)
push
xchg
mov
mov
loope
test
adc
mov
add
and
or
jmp
cs
es
data16
lea
or
in
xlat
dec
xchg
(bad)
(bad)
(bad)
jmp
pop
mov
aaa
jl
outs
into
test
test
into
int3
dec
xor
mov
adc
(bad)
(bad)
(bad)
(bad)
(bad)
call
and
sub
jmp
mov
rol
pop
out
mov
fcomip
dec
outs
adc
adc
adc
and
bound
adc
out
dec
in
(bad)
(bad)
mov
(bad)
jmp
loopne
and
add
xlat
pusha
fmul
dec
shl
shl
sub
jmp
mov
mov
xchg
cmp
leave
das
ss
and
sbb
sbb
xor
mov
loopne
adc
fisub
stos
fsubr
xchg
sub
shr
(bad)
inc
retf
les
mov
pop
loop
(bad)
fistp
inc
clc
test
scas
imul
fidivr
fdivrp
(bad)
(bad)
(bad)
call
xchg
cmp
or
dec
clc
mov
inc
cs
ins
fsubrp
mov
pop
out
in
pop
pusha
jo
dec
daa
int3
addr16
sbb
test
or
(bad)
jp
cdq
sub
fwait
imul
mov
pop
or
jp
in
jmp
shl
sar
mov
jle
pusha
lock
pop
or
stos
or
dec
jbe
call
lahf
xor
popa
into
movs
scas
jg
inc
jo
sub
cmp
das
mov
(bad)
fbld
loope
es
pop
sub
js
pop
jle
cmp
ret
mov
jle
loopne
int3
xor
pushf
mov
mov
movs
es
mov
in
and
sbb
scas
stos
out
(bad)
call
add
mul
or
xor
xor
xchg
lods
xchg
movs
je
int
fild
ret
(bad)
jmp
in
jnp
xor
sub
xchg
jmp
ins
lods
mov
int3
repnz
pop
jp
out
inc
rcr
add
cli
dec
(bad)
jmp
idiv
pop
out
fs
out
and
cdq
adc
jp
push
pop
add
mov
js
scas
mov
sbb
lods
in
sub
(bad)
(bad)
push
ins
xchg
jb
mov
cdq
push
lahf
repz
jo
outs
rol
sbb
mov
(bad)
dec
mov
pop
cmp
fstp
jge
push
sbb
dec
(bad)
jo
mov
scas
(bad)
call
mov
arpl
push
pop
in
test
inc
or
das
and
rol
add
rcl
cmp
(bad)
call
lock
push
out
imul
fdiv
stos
jnp
sub
xchg
iret
mov
stos
fst
fstp
sub
(bad)
punpckhbw
xchg
loopne
push
cmps
jmp
in
jo
(bad)
fild
jno
in
fadd
add
add
hlt
stos
inc
sub
shl
in
stos
push
repnz
sbb
sbb
fist
cdq
es
mov
jg
jmp
je
inc
inc
pop
stos
je
stos
pop
add
(bad)
(bad)
call
inc
jnp
jnp
mov
aad
stos
add
jmp
not
sbb
retf
ins
jmp
dec
stos
xor
mov
retf
addr16
dec
stos
out
mov
add
je
stos
rcr
sbb
cmp
(bad)
out
(bad)
cmp
pop
imul
jg
ficom
jg
jnp
stos
aaa
jmp
mov
mov
aad
jmp
into
jo
pop
jo
and
(bad)
jmp
dec
dec
stos
mov
repz
add
add
adc
sbb
cld
sub
adc
add
inc
stos
fs
ror
sbb
and
jmp
fsubrp
stos
jmp
stos
int
jmp
add
imul
mov
div
or
pop
lock
jmp
jmp
push
lock
or
push
stos
and
cmp
int
mov
jmp
es
stos
lahf
jmp
push
add
mov
add
xchg
add
(bad)
stos
or
jg
ins
add
iret
xchg
add
ins
ja
stos
lods
jmp
cmp
add
mov
out
loop
add
int3
stos
mov
push
jmp
mov
ja
stos
dec
xchg
add
jmp
stc
xchg
call
sub
sbb
sti
nop
jmp
add
and
mov
stos
les
jmp
sub
mov
jmp
cs
mov
jmp
jecxz
popf
stos
popf
jmp
lds
jmp
cli
and
jbe
pop
inc
jmp
stos
daa
add
mov
jmp
(bad)
mov
add
jmp
jg
int
stos
fwait
add
xlat
stos
pushf
jmp
jmp
rol
jmp
fs
popa
add
push
add
push
push
mov
fistp
(bad)
imul
cli
sub
stos
retf
push
mov
add
retf
stos
mov
mov
enter
out
sub
push
les
and
pop
movs
stos
jb
mov
and
stos
(bad)
jmp
in
orps
and
pusha
add
stos
leave
pop
lds
mov
or
add
mov
dec
dec
stos
mov
pop
adc
loope
fs
jmp
icebp
xchg
jmp
add
and
es
ror
pop
add
inc
jmp
(bad)
jmp
dec
jmp
fsub
or
mov
dec
bound
hlt
es
repnz
sbb
mov
call
pop
iret
je
shr
push
mov
push
push
int
sub
dec
cmp
rep
mov
cmp
pushf
sub
dec
sub
in
in
cld
aam
stos
jno
in
jns
je
mov
in
xchg
stos
and
out
push
and
adc
sub
pop
(bad)
cs
inc
es
test
idiv
push
aad
pop
and
std
not
stos
pop
stos
or
loope
mov
pop
pop
ins
pop
sti
and
push
sub
(bad)
faddp
sub
fist
jns
out
mov
stos
(bad)
sub
ja
mov
retf
in
jmp
stos
jle
in
jp
ficom
outs
stos
int3
call
cld
lods
shl
call
stos
js
jbe
jge
nop
int
push
stos
test
shr
std
les
enter
nop
popf
outs
mov
mov
pop
jo
stos
xchg
xchg
stos
cli
xchg
jae
sub
in
outs
inc
xchg
jns
pop
stos
mov
ret
mov
stos
xlat
dec
das
mov
dec
(bad)
nop
fidivr
mov
outs
retf
imul
push
dec
cwde
es
nop
fldcw
or
or
(bad)
sub
sbb
pop
cld
mov
mov
sub
cwde
push
stos
mov
add
jmp
loope
push
push
out
sub
cwde
pushf
gs
dec
pop
pusha
pop
cmp
fs
xor
int3
mov
adc
je
or
xor
(bad)
std
pop
fnstcw
fist
push
pop
int3
push
repz
dec
ins
call
mov
int3
inc
enter
jmp
mov
inc
sti
or
rcl
pop
call
xchg
loope
movs
outs
mov
into
aas
fs
sub
adc
cld
or
push
dec
cld
or
or
sub
aam
dec
ins
or
into
sbb
aaa
add
out
int
daa
push
cs
mov
jno
int3
loope
cs
mov
cmps
outs
xchg
jb
add
and
xchg
lea
je
imul
sub
xor
es
ficom
and
inc
cmps
dec
popa
call
xor
adc
jmp
sbb
mov
inc
ror
sub
xchg
imul
add
inc
mov
into
loopne
xchg
ins
xor
aad
inc
sub
sbb
xchg
add
xchg
adc
ss
cmp
pop
sti
aad
sahf
sub
mov
mov
sub
adc
in
pop
mov
mov
fst
ja
in
(bad)
mov
adc
mov
scas
sbb
mov
imul
pusha
or
movs
loop
aaa
arpl
xchg
scas
mov
imul
lods
outs
sub
sub
test
jmp
xchg
(bad)
call
xchg
ins
movs
mov
gs
cmps
repnz
and
fbld
jmp
(bad)
(bad)
jmp
cmps
cs
sbb
ins
sbb
and
ss
pop
adc
call
(bad)
call
cmc
mov
xchg
mov
ins
or
imul
add
scas
movs
mov
shr
xor
(bad)
(bad)
fsub
inc
arpl
imul
ds
imul
or
or
jmp
clc
call
mov
pushw
(bad)
gs
dec
xor
outs
sbb
or
scas
addr16
push
pusha
dec
cmp
pop
sub
or
sbb
or
dec
rol
push
outs
das
clc
dec
in
popw
test
out
and
xchg
or
push
mov
cmps
sti
add
mov
arpl
push
sub
cld
arpl
add
movs
and
pop
and
inc
mov
push
mov
(bad)
jmp
mov
(bad)
jg
imul
fs
nop
iret
adc
ins
or
cmps
popa
add
data16
dec
lods
xchg
ret
fisubr
mov
or
cmps
ds
adc
loope
pop
push
or
jne
or
in
call
mov
or
pop
(bad)
call
cld
fild
push
cmp
repz
or
fmul
sub
(bad)
(bad)
(bad)
call
imul
cdq
and
data16
add
gs
imul
arpl
sbb
(bad)
(bad)
(bad)
dec
mov
xor
push
cwde
arpl
and
jp
sbb
fs
pop
jmp
mov
movs
jmp
xor
ins
add
addr16
loop
push
adc
adc
dec
rcr
pushw
adc
push
mov
sahf
and
mov
shr
gs
mov
outs
or
data16
cli
sti
inc
(bad)
mov
xor
arpl
dec
arpl
cmp
mov
mov
dec
mov
sbb
xor
xor
(bad)
(bad)
push
pop
cmp
add
cmp
and
jmp
(bad)
fisttp
inc
test
aas
imul
(bad)
jmp
ss
mov
int3
ins
push
outs
and
mov
or
cwde
mov
jmp
test
jmp
cwde
sub
dec
outs
dec
or
loope
sbb
in
mov
in
adc
movs
call
scas
imul
imul
mov
mov
or
(bad)
(bad)
(bad)
jmp
retf
push
jb
inc
or
outs
add
gs
cli
arpl
dec
ins
mov
pop
icebp
jg
bound
sub
sub
imul
call
sar
jmp
imul
cmps
(bad)
add
mov
fiadd
(bad)
ins
mov
and
lods
popf
outs
or
imul
push
ins
add
out
out
sub
or
(bad)
loopne
xchg
xor
(bad)
push
mov
or
mov
push
les
clc
sti
movs
call
push
imul
(bad)
jmp
mov
or
imul
mov
sbb
(bad)
scas
test
push
addr16
cmp
push
push
imul
cmp
or
div
sbb
sub
call
cmp
movs
in
jmp
(bad)
jmp
ret
push
adc
pushf
call
or
mov
add
mov
outs
pop
shr
or
lock
(bad)
(bad)
(bad)
mov
or
loop
or
push
dec
movs
addr16
push
pop
popa
scas
clc
jmp
imul
pop
stos
and
push
push
cwde
push
outs
outs
mov
mov
push
xchg
outs
out
inc
jecxz
pop
sub
add
(bad)
dec
push
lea
inc
out
mov
popa
inc
mov
mov
or
imul
stc
out
outs
outs
dec
mov
setp
mov
push
and
loopne
cld
cwde
in
fsub
and
mov
xor
or
mov
cmp
gs
fwait
dec
outs
add
(bad)
jmp
shl
out
out
add
bound
(bad)
mov
pop
fisttp
sahf
jge
xor
cmp
xchg
and
ins
arpl
addr16
mov
outs
or
mov
mov
mov
add
mov
sbb
(bad)
(bad)
(bad)
jmp
(bad)
fsub
imul
arpl
mov
jmp
or
sub
out
imul
outs
and
and
dec
mov
add
mov
jmp
or
push
dec
fmul
jno
clc
or
(bad)
and
ja
out
add
dec
call
(bad)
(bad)
jmp
pop
and
or
imul
pusha
push
stos
test
adc
call
cwde
mov
inc
in
(bad)
scas
ins
or
dec
data16
push
pop
mov
mov
fild
and
or
mov
aad
push
mov
inc
stos
popa
neg
stos
stc
enter
(bad)
call
clc
push
jp
dec
inc
sahf
push
inc
inc
in
add
ins
sub
mov
(bad)
inc
call
imul
and
rcr
adc
fld
(bad)
(bad)
(bad)
jmp
aad
jmp
or
push
sub
cdq
ins
call
sbb
pop
fbld
inc
cmp
push
jo
lock
push
stos
dec
add
call
sbb
outs
sti
test
into
(bad)
(bad)
(bad)
call
scas
ror
ror
sub
add
stos
js
loop
mov
adc
push
sub
add
mov
movs
aad
xchg
cmp
call
test
cmp
(bad)
(bad)
(bad)
jmp
add
sbb
push
stos
rcl
sahf
int
(bad)
(bad)
(bad)
inc
mov
les
shr
dec
mov
mov
push
mov
add
(bad)
(bad)
(bad)
jmp
repz
fld
add
jo
outs
mov
push
ins
(bad)
(bad)
(bad)
call
popa
adc
push
arpl
cmp
jo
sahf
mov
mov
(bad)
js
mov
cli
push
jl
outs
jno
jns
or
sbb
push
scas
mov
push
add
cli
add
(bad)
inc
add
sbb
add
stc
retf
lock
stos
jp
cli
stos
adc
adc
xchg
(bad)
dec
inc
(bad)
(bad)
sub
xor
and
xchg
fidiv
addr16
sbb
(bad)
(bad)
(bad)
jmp
mov
fmul
in
neg
cmp
adc
add
pop
pop
movs
adc
inc
lock
xchg
stc
sub
xchg
mov
xor
jmp
mov
in
dec
push
les
jmp
jb
mov
lds
jg
sub
adc
mov
pop
adc
inc
(bad)
inc
and
xor
mov
movs
imul
outs
call
pop
mov
fiadd
sub
mov
fimul
(bad)
(bad)
(bad)
jmp
and
lea
xchg
pop
retf
xor
loope
or
mov
or
lds
(bad)
inc
jmp
push
cmp
cdq
jmp
add
sub
jmp
push
jae
dec
leave
push
sub
adc
jmp
out
addr16
(bad)
jmp
call
adc
jmp
cmp
int3
cmps
mov
cmp
inc
outs
mov
add
movs
or
test
retf
jns
and
(bad)
call
xlat
stos
cmp
mov
out
add
dec
cdq
aad
(bad)
(bad)
jmp
push
in
and
das
mov
loop
sub
mov
ret
pop
(bad)
pop
adc
(bad)
out
push
test
movs
dec
dec
fild
push
das
test
imul
clc
mov
rcl
cmp
neg
add
scas
imul
inc
call
jmp
push
cmps
es
pop
mov
jne
push
imul
aam
stos
cmp
sbb
(bad)
call
jg
push
xor
adc
mul
pop
jb
into
or
dec
shr
imul
inc
adc
fldl2t
or
fwait
inc
ret
(bad)
mov
(bad)
(bad)
(bad)
mov
adc
mov
jp
scas
jmp
enter
fdivr
rcl
icebp
xor
ret
das
test
aaa
aaa
ja
(bad)
mov
mov
jg
cwde
sahf
in
mov
push
cmp
es
pop
imul
mov
pop
sbb
mov
fucomi
psubusw
inc
xor
outs
(bad)
(bad)
cmp
sub
aas
sub
pop
mov
inc
or
mov
outs
pushf
xor
xor
arpl
dec
push
and
mov
bound
(bad)
fisttp
stos
mov
add
(bad)
(bad)
inc
scas
fidivr
pop
out
mov
sub
mov
cmp
(bad)
(bad)
jmp
sub
fld
pop
sub
mov
outs
add
xchg
dec
cmps
cwde
rcl
data16
cmc
int3
jno
mov
xchg
xor
mov
or
js
mov
retf
pop
sbb
or
lds
call
retf
or
and
scas
jmp
jb
(bad)
add
pop
ret
(bad)
(bad)
(bad)
(bad)
jmp
call
stos
retf
sbb
das
sub
jo
mov
push
mov
jo
jb
xor
mov
or
das
ins
neg
out
das
nop
adc
je
inc
xchg
std
mov
nop
call
ds
and
cs
jl
push
dec
push
jmp
das
lods
cli
ret
call
std
sbb
and
adc
shr
imul
mov
dec
outs
fld
adc
js
aas
repnz
jno
mov
pop
mov
rcr
add
clc
xchg
mov
sub
icebp
xchg
stos
dec
je
(bad)
dec
clc
xchg
mov
sbb
sub
sbb
dec
retf
push
sub
fwait
sub
in
mov
call
ror
pop
or
xor
dec
mov
sub
pop
(bad)
push
xchg
clc
pop
lock
or
clc
dec
call
call
(bad)
call
push
mov
mov
test
push
xchg
lock
imul
(bad)
(bad)
dec
out
dec
sbb
stos
mov
call
loopne
(bad)
(bad)
mov
push
(bad)
mov
cmp
test
jp
lds
not
clc
fs
(bad)
(bad)
(bad)
mov
add
cli
jb
xor
add
loop
(bad)
loopne
call
ins
loop
fdiv
xchg
loop
cwde
pushf
adc
scas
cli
pushf
mov
mov
jmp
mov
sbb
inc
(bad)
cwde
(bad)
call
xchg
mov
sub
icebp
sub
cwde
rep
mov
mov
(bad)
(bad)
(bad)
call
pop
fmul
mov
mov
sti
loop
stos
shl
pushf
sti
(bad)
cmp
or
xchg
sar
mov
cwde
fiadd
mov
adc
push
mov
test
pop
jmp
fisubr
into
rcr
imul
jno
scas
in
shr
test
retf
stc
(bad)
jg
mov
loop
push
fmul
ret
mov
outs
mov
repz
sti
(bad)
push
add
jmp
fstp
addr16
scas
push
out
mov
push
mov
outs
jp
test
jg
xchg
retf
out
hlt
push
xchg
push
in
mov
mov
jo
sub
(bad)
call
scas
fsubr
dec
sub
cwde
aad
(bad)
mov
sbb
sub
fwait
mul
mov
mov
sub
call
mov
cmp
(bad)
(bad)
inc
sub
dec
loope
mov
add
push
jmp
sub
pop
push
(bad)
(bad)
out
sbb
mov
push
xchg
aas
and
pop
adc
sbb
jae
retf
pop
sbb
fcomip
(bad)
cmp
xchg
xchg
sbb
adc
jl
pop
aas
hlt
jmp
push
loope
iret
cdq
es
mov
jp
ins
adc
sbb
ins
add
cmps
pop
loop
cs
pop
mov
cli
popf
cs
cmps
ds
push
scas
sub
push
stos
inc
imul
sub
mov
fcomp
sub
mov
mov
pop
lock
call
jmp
fwait
inc
pop
add
sti
or
cdq
stos
sbb
scas
bound
cmp
outs
js
or
sar
mov
mov
adc
scas
out
mov
dec
sub
out
es
repnz
jmp
push
or
push
test
mov
mov
repz
lods
mov
imul
mov
jmp
stos
sub
(bad)
(bad)
mov
pop
jmp
jmp
mov
movs
fidivr
and
(bad)
push
mov
dec
cmps
mov
mov
fs
cmp
adc
pop
sar
mov
push
dec
pop
(bad)
jmp
out
pop
loop
in
mov
call
push
and
jns
mov
lea
cld
inc
add
jmp
dec
mov
pop
cmp
inc
adc
(bad)
(bad)
(bad)
call
pop
enter
mov
mov
fist
outs
mov
mov
push
aaa
out
(bad)
(bad)
dec
fcmovbe
stos
sbb
test
std
ror
add
inc
loopne
mov
ss
idiv
sub
jg
(bad)
dec
mov
xor
xchg
mov
ret
or
call
std
(bad)
and
loop
adc
or
arpl
(bad)
inc
call
xchg
neg
and
popf
rcl
mov
int3
xchg
jno
(bad)
(bad)
(bad)
jmp
pop
test
test
dec
add
call
shr
sub
lea
(bad)
(bad)
jmp
movs
aad
sub
mov
push
test
mov
fcomip
call
cmps
add
cmp
jle
sbb
cmp
sti
test
jmp
inc
or
outs
fwait
push
out
jp
in
stos
xor
mov
(bad)
(bad)
jmp
jmp
pop
xor
inc
out
push
dec
adc
cmp
pop
out
jge
(bad)
(bad)
jg
test
out
outs
sub
cld
outs
xchg
mov
sbb
inc
popa
sbb
(bad)
(bad)
(bad)
mov
or
ds
mov
imul
(bad)
(bad)
out
sub
hlt
cmp
scas
call
test
(bad)
(bad)
(bad)
dec
fwait
sbb
neg
mov
push
out
mov
sbb
outs
or
jl
gs
call
sub
cmps
sub
mov
loopne
fs
mov
call
and
push
inc
pop
iret
sub
scas
pop
and
imul
jl
loope
dec
mov
(bad)
push
(bad)
std
mov
mov
in
(bad)
dec
dec
sub
mov
or
mov
jge
jge
or
inc
pop
jmp
stos
jb
mov
and
mov
mov
cmp
scas
lods
addr16
into
xchg
pop
xchg
mov
test
out
ret
inc
rol
sub
fwait
dec
mov
and
mov
jmp
in
or
dec
pop
push
inc
push
(bad)
mov
adc
and
iret
push
push
(bad)
(bad)
dec
sub
jle
xor
add
in
inc
dec
dec
retf
call
dec
dec
jmp
pop
mov
mov
fidivr
pop
int
mov
xchg
retf
sbb
or
jne
test
xchg
add
mov
jmp
rol
jb
push
xor
mov
out
mov
jmp
dec
sub
into
push
test
jmp
scas
(bad)
cli
mov
ins
clc
jmp
es
ret
outs
mov
pop
outs
gs
push
dec
push
xchg
les
daa
dec
std
(bad)
(bad)
(bad)
inc
cwde
bound
fst
jo
xchg
test
xchg
(bad)
popf
push
adc
paddw
loopne
jmp
(bad)
(bad)
(bad)
call
call
xchg
in
scas
sahf
inc
jmp
dec
jo
bound
popf
cmps
push
adc
xor
std
mov
js
mov
cdq
stos
sbb
(bad)
(bad)
inc
rcl
fmul
(bad)
mov
xchg
shr
jge
pushf
scas
push
fbstp
and
fcmove
call
(bad)
(bad)
jg
dec
loopne
sub
mov
push
aas
xchg
outs
retf
mov
aad
(bad)
jmp
mov
movs
mov
sub
mov
(bad)
dec
jbe
into
scas
jle
dec
outs
stos
(bad)
aad
pop
add
jecxz
std
out
add
xchg
jne
jmp
mov
pushf
(bad)
(bad)
(bad)
call
and
xchg
jnp
scas
movs
popf
jmp
fisttp
lods
push
enter
gs
(bad)
mov
neg
outs
sti
mov
cmp
inc
lahf
sbb
mov
sub
pusha
std
mov
(bad)
(bad)
jmp
shl
sub
mov
dec
mov
out
call
jmp
aaa
jbe
mov
retf
outs
stos
xor
jecxz
jp
imul
jle
test
jle
dec
push
xchg
mov
sbb
mov
ret
(bad)
(bad)
(bad)
(bad)
fucomp
gs
cmp
ja
xchg
pop
or
dec
dec
mov
iret
mov
repnz
mov
(bad)
(bad)
(bad)
jmp
jmp
and
ins
pop
inc
(bad)
push
test
into
adc
add
xchg
xchg
cmp
jmp
(bad)
(bad)
dec
mov
iret
push
(bad)
jmp
mov
fistp
lods
add
cli
(bad)
(bad)
fcomp
sub
mov
sub
xchg
test
jge
(bad)
call
imul
div
add
and
xchg
or
mov
(bad)
(bad)
push
mov
call
sub
(bad)
inc
in
cmp
sbb
mov
(bad)
(bad)
jg
js
retf
test
loope
bound
dec
movs
cmp
in
pop
mov
or
add
gs
jnp
cmp
mov
inc
call
in
aam
push
call
jmp
das
nop
icebp
mov
xchg
outs
add
and
aam
enter
pop
icebp
call
or
mov
sbb
iret
adc
and
mov
ins
loope
in
sbb
test
sar
jg
pop
cmp
ret
into
mov
out
or
outs
(bad)
mov
(bad)
(bad)
dec
shr
(bad)
mov
sti
push
adc
fcmovu
mov
push
outs
jmp
cmp
call
ret
mov
sahf
inc
in
mov
test
ins
es
inc
mov
sahf
mov
push
call
jmp
push
loope
cmp
xchg
cwde
pop
popa
sub
dec
pop
dec
out
js
mov
jmp
das
fild
lods
mov
xor
fst
xor
mov
(bad)
(bad)
out
and
aaa
fwait
inc
icebp
mov
add
call
ret
retf
add
(bad)
(bad)
inc
jns
sub
daa
iret
sbb
sub
xor
outs
(bad)
(bad)
(bad)
leave
out
aam
mov
adc
inc
dec
call
sub
les
std
(bad)
dec
or
cmp
xchg
(bad)
div
xchg
pop
sbb
xchg
cwde
or
jg
mov
jb
mov
pop
jmp
call
test
pusha
jmp
stos
jb
jmp
(bad)
jmp
iret
or
imul
mov
out
or
(bad)
(bad)
(bad)
jmp
stc
jae
bound
sub
jns
mov
leave
mov
clc
cdq
push
daa
inc
(bad)
push
clc
out
ficomp
mov
cdq
jo
sbb
push
cld
(bad)
jns
sub
stos
sbb
mov
mov
loop
dec
cmps
push
ja
(bad)
jg
mov
jb
fisubr
cmp
gs
dec
dec
out
sub
ja
out
push
out
push
outs
cmps
fdiv
adc
aam
push
mov
(bad)
(bad)
jmp
lods
pop
imul
ins
es
and
xchg
push
hlt
into
clc
(bad)
lahf
imul
(bad)
push
das
adc
jg
aas
and
cwde
test
mov
pop
push
mov
icebp
jg
movs
or
lock
ror
mov
test
je
std
and
mov
mov
sub
outs
popf
sbb
sahf
and
and
(bad)
(bad)
(bad)
(bad)
cmp
pop
xchg
pop
or
aam
outs
inc
sub
dec
outs
jne
jmp
xchg
adc
into
sbb
inc
pop
mov
jo
or
sub
(bad)
(bad)
(bad)
fadd
imul
and
jmp
adc
dec
jns
ret
dec
jg
test
pop
mov
leave
cdq
(bad)
(bad)
(bad)
jmp
dec
jecxz
test
(bad)
sbb
jmp
add
sub
dec
imul
sbb
push
dec
aam
(bad)
(bad)
dec
sbb
iret
dec
das
call
shr
push
xchg
scas
xchg
inc
push
dec
loopne
and
pop
xor
leave
sbb
outs
popa
sbb
inc
and
daa
push
(bad)
call
call
mov
jl
sub
lea
out
das
call
mov
mov
in
push
push
inc
out
ins
dec
out
xchg
fisubr
movs
mov
(bad)
mov
test
jg
test
jg
cmp
call
xor
(bad)
push
dec
mov
retf
fwait
aad
mov
pushf
sbb
loopne
and
scas
mov
(bad)
mov
or
dec
sahf
leave
pop
xchg
push
ins
aaa
mov
mov
outs
(bad)
call
(bad)
or
mov
stos
xor
mov
push
sub
stos
pop
xor
(bad)
(bad)
jmp
pop
mov
jle
cs
inc
lods
xchg
xor
inc
pop
popf
pop
mov
mov
(bad)
(bad)
(bad)
(bad)
fcomip
sub
lahf
sbb
rcr
xlat
stos
ss
rol
mov
scas
loop
xchg
(bad)
(bad)
call
mov
rcr
ins
das
ss
fild
out
scas
mov
dec
pop
mov
mov
sar
push
sbb
pop
mov
(bad)
xchg
xchg
adc
scas
scas
push
add
xor
dec
stc
ret
adc
mov
pop
or
(bad)
jmp
(bad)
cwde
jo
test
sbb
js
sbb
inc
inc
mov
(bad)
stc
inc
(bad)
or
jmp
xor
mov
cs
(bad)
call
mov
or
add
sbb
mov
movs
jle
test
(bad)
(bad)
(bad)
jmp
pop
xchg
adc
pop
in
jnp
jmp
call
cmps
and
jle
std
push
lods
jb
(bad)
(bad)
(bad)
cmp
test
sbb
jae
not
pop
das
mov
sbb
gs
mov
sub
xlat
(bad)
(bad)
call
jmp
or
sub
or
adc
mov
and
clc
(bad)
(bad)
jg
pusha
jnp
movs
xchg
call
or
cmp
cmc
cmp
fimul
ins
call
mov
mov
mov
add
mov
or
jmp
call
pop
leave
push
mov
in
adc
jb
push
(bad)
pop
(bad)
pop
pop
rol
(bad)
(bad)
(bad)
(bad)
sbb
push
fldl2e
dec
sub
mov
fild
stos
jmp
(bad)
(bad)
(bad)
push
movs
test
sbb
cmps
inc
call
retf
cli
xlat
int3
push
mov
cmps
push
mov
cmc
pop
(bad)
jmp
mov
jmp
jmp
inc
(bad)
(bad)
jg
(bad)
ficomp
push
lock
dec
data16
sbb
or
rcl
push
sub
push
inc
or
retf
mov
inc
imul
jmp
call
call
xchg
ss
mov
inc
cmps
jmp
mov
(bad)
(bad)
(bad)
call
push
scas
nop
jmp
mov
push
cs
movs
sub
ins
cs
nop
cmp
(bad)
call
int3
add
cmp
add
and
pop
jmp
inc
mov
popf
push
or
mov
jle
inc
call
(bad)
push
ds
leave
cmps
int
inc
std
arpl
lods
jnp
out
(bad)
(bad)
int3
sbb
(bad)
(bad)
(bad)
jmp
sub
mul
cmc
push
ficom
or
or
sub
ins
push
adc
inc
cmp
into
fisttp
ficom
pop
or
retf
sub
outs
nop
(bad)
(bad)
(bad)
dec
mov
pop
data16
fsubr
movs
cmp
xor
xchg
(bad)
(bad)
out
out
dec
sbb
ror
mov
xor
xchg
cmps
sub
(bad)
out
push
retf
mov
call
and
adc
jno
adc
(bad)
je
into
push
jg
(bad)
call
jne
cmc
sub
sub
sub
adc
out
mov
jb
cli
or
(bad)
jmp
sar
imul
push
push
pop
xchg
(bad)
call
ret
mov
xchg
mov
mov
mov
iret
and
std
(bad)
push
loop
and
cmc
shl
in
shl
out
cmc
mov
add
(bad)
dec
pop
xor
mov
inc
push
aad
jmp
mov
ja
or
scas
sub
mov
push
and
lock
pop
adc
or
(bad)
(bad)
(bad)
(bad)
mov
pop
dec
loope
mov
mov
les
aad
add
(bad)
(bad)
call
mov
inc
mov
adc
lods
call
push
neg
or
xor
(bad)
(bad)
mov
int3
mov
mov
push
sbb
mov
xor
adc
retf
mov
inc
mov
mov
mov
sub
imul
leave
mov
jg
xchg
lods
cmp
add
test
jo
sbb
jmp
sub
pop
dec
out
and
lods
outs
cdq
movs
je
cdq
loope
sub
test
(bad)
inc
jp
imul
rol
cld
sub
and
(bad)
scas
cdq
xor
(bad)
retf
inc
sub
pop
cmp
sub
ins
inc
push
stc
je
daa
imul
fsubr
jge
int3
sub
outs
ins
adc
inc
mov
sub
stos
(bad)
(bad)
(bad)
(bad)
fidivr
sub
adc
cmp
and
and
mov
and
mov
(bad)
jmp
sbb
daa
dec
jmp
popf
dec
pop
leave
lea
and
inc
cdq
aaa
or
sbb
outs
and
inc
inc
dec
dec
pusha
push
into
int3
pop
loope
mov
cmp
and
jmp
loope
nop
adc
xchg
fsub
push
ins
push
(bad)
(bad)
(bad)
call
cmp
imul
scas
xchg
out
cmps
push
das
rol
out
outs
sub
lods
popf
stos
sar
(bad)
fnstsw
addr16
iret
loope
cmp
dec
jl
lods
mov
movs
lods
sub
out
ins
stos
(bad)
(bad)
(bad)
jg
and
inc
xchg
(bad)
fs
and
mov
push
push
fild
mov
sbb
push
push
adc
xor
lods
leave
xor
or
pop
adc
mov
mov
push
inc
outs
mov
and
(bad)
jmp
iret
outs
aad
mov
adc
in
js
(bad)
(bad)
jmp
ror
sub
dec
xor
mov
lods
retf
dec
sbb
test
(bad)
(bad)
dec
iret
lods
(bad)
adc
cs
imul
or
sahf
inc
xor
jb
mov
call
enter
leave
test
jo
mov
imul
push
(bad)
out
cmp
(bad)
jmp
add
dec
ins
inc
ins
lock
jmp
pop
ins
adc
imul
or
(bad)
jmp
sub
into
pop
mov
xor
test
cwde
dec
xor
int3
or
(bad)
call
xchg
in
nop
mov
mov
jo
mov
pop
jb
lods
scas
mov
(bad)
jmp
add
ret
pop
and
(bad)
mov
sbb
and
pop
lock
aaa
test
sbb
dec
and
loope
cmovns
push
add
inc
xchg
in
jp
(bad)
(bad)
mov
mov
call
in
push
lahf
stos
(bad)
loope
mov
retf
(bad)
(bad)
out
cli
pop
mov
ret
xor
push
or
add
push
jo
xor
jmp
ins
cmps
cmps
add
mov
adc
xor
and
(bad)
(bad)
(bad)
(bad)
(bad)
aas
xchg
das
lods
call
sub
into
jmp
rcl
push
into
cmps
cmp
inc
mov
cwde
stos
mov
adc
outs
xor
js
inc
mov
aam
imul
push
push
or
test
pusha
and
into
scas
rcr
jmp
icebp
xor
loop
push
aad
scas
call
pusha
fmul
repz
sub
adc
push
push
test
sbb
(bad)
in
mov
jmp
inc
jmp
lods
daa
es
data16
in
push
jmp
call
adc
push
cli
xchg
add
fstp
hlt
movs
sub
mov
dec
and
jo
push
call
fisttp
cmp
xor
cs
mov
scas
jmp
(bad)
(bad)
(bad)
(bad)
fst
xor
mov
cdq
js
xchg
pop
xor
ds
dec
and
scas
push
shr
inc
dec
(bad)
jmp
mov
shl
test
(bad)
(bad)
jmp
mov
pop
std
aaa
adc
repnz
jno
stc
sbb
push
sub
dec
push
mov
scas
imul
test
xchg
stos
xchg
or
mov
push
std
mov
push
add
fistp
push
sar
fisub
mov
pop
and
imul
std
and
jb
stos
call
jmp
mov
imul
adc
dec
stc
sub
mov
xchg
sahf
adc
(bad)
sub
or
mov
out
mov
mov
adc
jmp
sti
test
cdq
call
pop
lahf
out
add
(bad)
inc
xchg
fistp
out
xchg
ficom
(bad)
(bad)
(bad)
dec
out
mov
sbb
in
scas
mov
fbld
ret
(bad)
and
jmp
sub
add
lahf
mov
sbb
dec
jmp
mov
scas
jmp
mov
or
sub
out
jo
(bad)
mov
pop
push
mov
ss
jmp
inc
mov
push
dec
cmps
in
push
out
test
pop
out
mov
push
test
inc
jbe
inc
test
xlat
fisttp
jl
repnz
jno
cdq
add
(bad)
inc
xchg
out
outs
xor
ret
fild
test
mov
(bad)
imul
into
cmp
out
mov
mov
cmp
sar
(bad)
xchg
lahf
fmulp
(bad)
(bad)
cmp
sahf
pop
dec
push
cmps
mov
imul
push
bound
and
ins
xchg
mov
(bad)
in
mov
scas
sub
jp
loopne
je
and
xchg
pop
fs
xchg
push
fistp
or
sub
xor
mov
push
pop
add
stos
mov
xchg
mov
push
inc
scas
(bad)
push
mov
mov
dec
dec
std
mov
inc
es
pop
push
push
call
cmp
(bad)
inc
sub
fiadd
mov
pusha
mov
inc
inc
cli
lods
sub
sub
out
loopne
(bad)
call
jmp
push
test
mov
mov
dec
call
inc
cdq
sub
(bad)
mov
xchg
push
fadd
outs
cli
pop
adc
mov
sbb
neg
cmps
mov
movs
std
test
(bad)
(bad)
inc
sub
fcmove
pop
icebp
call
test
shr
scas
loope
inc
inc
cmp
jno
xchg
dec
paddsb
or
sub
cmps
retf
(bad)
(bad)
(bad)
(bad)
(bad)
jp
sub
add
ins
aaa
out
repnz
movs
out
ret
jg
mov
xchg
aad
sbb
xlat
(bad)
(bad)
call
jns
fmul
dec
or
leave
jg
sahf
mov
in
inc
push
mov
(bad)
cmp
cmp
cmp
mov
add
mov
adc
cli
ficomp
movs
xchg
sub
(bad)
call
pop
sbb
jmp
jnp
ficomp
repnz
jmp
inc
cmp
mov
aad
xchg
imul
aam
pop
test
xchg
jmp
retf
(bad)
(bad)
dec
(bad)
ins
icebp
or
mov
cs
ret
cli
js
test
dec
aam
imul
or
inc
lods
(bad)
jo
push
imul
in
outs
push
jbe
jo
imul
jbe
out
mov
(bad)
jg
call
pop
(bad)
xchg
cwde
imul
test
dec
and
xor
jmp
(bad)
out
test
dec
mov
jmp
aad
scas
jno
inc
add
hlt
(bad)
jle
stos
sahf
scas
xor
xor
lods
jmp
pop
(bad)
jmp
adc
call
jne
dec
sub
leave
dec
loopne
call
stos
pop
push
std
(bad)
(bad)
(bad)
mov
out
ds
std
cmp
add
in
sti
adc
(bad)
(bad)
(bad)
jmp
adc
inc
out
scas
jb
or
mov
dec
outs
fisttp
dec
test
dec
jmp
sar
or
mov
sub
or
dec
cmp
push
loopne
js
jmp
mov
mov
fs
ret
mov
add
ds
or
retf
fimul
div
mov
cmp
(bad)
call
sub
sbb
lock
and
mov
bound
call
pop
jmp
pop
cmps
fisttp
cmp
shl
add
cli
repz
xchg
pop
cld
scas
iret
(bad)
call
aam
mov
inc
and
das
cmp
retf
sti
mov
jmp
or
mov
jno
addr16
sbb
call
mov
add
call
and
mov
(bad)
mov
mov
push
dec
push
mov
retf
fimul
push
mov
(bad)
scas
scas
jle
(bad)
(bad)
inc
sbb
in
mov
mov
in
xor
int
inc
dec
retf
scas
popf
(bad)
(bad)
(bad)
(bad)
out
adc
cdq
xchg
imul
or
push
dec
jp
push
jmp
lds
jno
iret
mov
add
sub
mov
xlat
pop
push
fdivr
lods
(bad)
(bad)
(bad)
dec
or
dec
stos
fild
retf
aaa
add
into
and
jl
cli
pusha
mov
(bad)
(bad)
(bad)
call
or
test
jg
icebp
adc
and
mov
popf
cmp
jmp
add
fwait
(bad)
sti
and
xchg
mov
push
push
inc
cld
dec
mov
add
mov
jle
shr
(bad)
(bad)
push
inc
or
shl
test
and
mov
std
pushw
xor
leave
push
sahf
inc
push
ja
call
inc
sub
add
and
mov
mov
xchg
scas
std
fwait
(bad)
(bad)
mov
mov
push
test
fiadd
sub
lods
xor
mov
(bad)
push
pusha
jp
popf
fist
retf
(bad)
jmp
scas
je
out
xor
(bad)
pop
mov
es
inc
push
iret
jmp
push
xor
dec
jmp
cli
jmp
mov
and
lea
retf
inc
lods
loope
ins
int
or
pop
nop
imul
mov
pushf
cld
test
jb
(bad)
jg
jmp
sbb
cmps
cmp
(bad)
(bad)
jmp
shl
imul
ss
iret
sbb
loopne
add
push
scas
sbb
cmc
outs
test
dec
sub
(bad)
(bad)
(bad)
(bad)
cmp
pop
js
push
mov
or
inc
int3
ss
leave
cmp
loop
(bad)
(bad)
(bad)
jmp
push
addr16
sub
adc
or
(bad)
(bad)
cld
add
iret
sub
daa
mov
jb
call
add
push
cvttps2pi
(bad)
(bad)
jmp
lea
lods
cwde
test
sbb
cwde
jle
mov
xchg
out
or
call
xchg
clc
push
pushf
sub
push
imul
(bad)
mov
mov
inc
mov
mov
shl
(bad)
(bad)
(bad)
dec
int
sub
shr
ret
in
pop
rcr
rcr
inc
imul
ficomp
fwait
sbb
(bad)
(bad)
dec
icebp
jbe
aam
das
or
sbb
retf
xor
pop
push
sub
inc
push
call
(bad)
(bad)
inc
jnp
mov
add
or
shr
mov
inc
out
mov
push
fisub
jbe
ret
scas
in
mov
and
or
(bad)
(bad)
(bad)
jmp
aad
mov
int3
in
dec
je
add
add
fild
and
or
(bad)
(bad)
jg
push
mov
push
int
sbb
lea
and
mov
jl
dec
lea
aam
xor
inc
add
call
inc
mov
pop
mov
mov
(bad)
(bad)
inc
mov
retf
lods
fwait
dec
cmp
mov
daa
dec
call
int3
in
(bad)
(bad)
inc
sub
ja
cli
and
xor
lds
call
outs
clc
inc
int
jge
pop
mov
stos
and
(bad)
push
mov
dec
mov
lods
sbb
(bad)
(bad)
push
mul
dec
loop
(bad)
out
pop
ins
push
retf
stc
mov
cmps
jp
(bad)
je
addr16
(bad)
fistp
cmps
mov
ret
mov
ror
mov
arpl
xchg
lea
retf
adc
pusha
aam
in
jno
or
add
test
hlt
xor
test
test
bnd
ror
adc
sub
dec
and
mov
mov
(bad)
jmp
dec
inc
nop
sub
scas
ss
mov
and
imul
and
adc
cmp
(bad)
call
cmps
mov
or
cmp
xor
imul
push
daa
xchg
dec
(bad)
or
push
in
outs
repnz
(bad)
(bad)
(bad)
fisub
sbb
jbe
jp
stos
or
dec
fucomi
fst
sbb
pop
or
test
(bad)
(bad)
(bad)
dec
xlat
mov
leave
cmps
in
cld
xchg
fistp
test
repnz
mov
pop
cmc
inc
jmp
add
pop
inc
lds
dec
mov
or
int3
sbb
pop
push
add
add
mov
enter
pop
clc
inc
jmp
jne
popf
into
ret
scas
mov
or
(bad)
(bad)
jmp
mov
inc
das
xchg
cmps
clc
pop
gs
jecxz
xchg
cwde
jo
jmp
(bad)
jmp
inc
bound
scas
stos
pop
ins
xchg
sub
mov
rol
inc
repz
xchg
mov
mov
(bad)
(bad)
dec
adc
mov
es
jmp
stc
xchg
and
clc
out
push
mov
mov
cs
out
sub
push
push
fisub
jg
xchg
sub
ja
out
mov
xor
fidiv
mov
(bad)
jmp
outs
movs
jne
mov
push
inc
mov
cld
sub
cmp
(bad)
call
or
mov
in
fadd
call
mov
xchg
das
pop
ja
inc
push
lods
call
jmp
jecxz
movs
(bad)
(bad)
(bad)
call
das
xchg
mov
xchg
mov
test
xchg
inc
iret
pop
mov
dec
mov
mov
sbb
mov
popa
movs
ds
(bad)
(bad)
push
add
imul
int
sbb
jge
ficomp
push
pusha
push
jmp
aam
jecxz
enter
sub
xchg
jae
xor
inc
gs
retf
xchg
push
out
sbb
lods
cmp
cmp
sti
(bad)
call
sub
repz
add
es
iret
(bad)
cdq
mov
lods
and
mov
jecxz
mov
xchg
test
mov
xor
(bad)
(bad)
(bad)
jmp
mov
or
add
test
(bad)
mov
mov
cmps
call
cmp
adc
mov
cld
cmc
(bad)
push
leave
aaa
dec
sbb
jecxz
test
scas
push
pop
fimul
sub
dec
dec
or
iret
(bad)
(bad)
call
cdq
jbe
push
sbb
jge
ins
mov
shl
dec
and
inc
xor
retf
mov
add
(bad)
mov
scas
sahf
fidiv
mov
or
dec
pop
or
xchg
test
(bad)
(bad)
dec
mov
adc
stos
into
inc
aam
mov
pop
imul
das
scas
out
(bad)
mov
js
dec
pop
push
out
scas
mov
pop
iret
mov
(bad)
jmp
test
stos
fcom
imul
lods
xor
sar
dec
(bad)
cmps
sbb
mov
jne
aaa
aam
(bad)
(bad)
jg
imul
shr
mov
icebp
xor
loop
pop
call
rcl
sti
jecxz
movs
xor
out
mov
into
outs
dec
daa
dec
nop
and
leave
and
outs
jmp
and
pop
sbb
and
shl
or
cdq
(bad)
in
(bad)
jmp
jmp
jmp
retf
push
pop
jmp
enter
pop
and
sbb
sar
cld
push
mov
xchg
pop
jbe
(bad)
(bad)
call
or
arpl
cmp
pop
mov
mov
retf
outs
lock
(bad)
or
dec
mov
sar
(bad)
(bad)
(bad)
call
lahf
pop
push
pop
jmp
dec
cli
dec
mov
pop
adc
push
sub
(bad)
(bad)
jg
lock
or
outs
test
cld
mov
iret
xor
pop
cmp
and
(bad)
mov
pop
retf
test
cmps
or
jb
sbb
pop
mov
add
xor
and
stos
jl
sub
pop
mov
xchg
or
dec
jg
(bad)
call
jo
add
mov
(bad)
mov
out
imul
(bad)
mov
sub
loopne
pop
dec
jl
push
xchg
dec
ins
mov
inc
(bad)
(bad)
(bad)
jmp
sub
pop
jl
dec
int3
hlt
jge
pop
cli
xor
ds
loope
je
test
push
mov
jmp
(bad)
jmp
push
push
dec
fnsave
sub
xor
inc
pop
pop
jmp
pop
mov
(bad)
(bad)
jg
jb
lock
fs
mov
cwde
push
pop
push
in
mov
mov
sub
(bad)
(bad)
(bad)
dec
push
inc
mov
call
mov
mov
cmps
stos
pop
sub
nop
cdq
call
push
call
pop
setns
and
repz
pop
imul
pop
xchg
add
(bad)
(bad)
inc
retf
imul
jmp
fbld
xchg
lea
jge
(bad)
(bad)
(bad)
jg
idiv
mov
xchg
cmp
lds
mov
es
lds
stos
jp
pop
sub
jmp
int3
jl
jmp
retf
(bad)
jmp
inc
imul
pop
sub
xchg
loop
xchg
push
sar
inc
cld
stos
jmp
fwait
(bad)
mov
(bad)
mov
jne
sub
and
jle
sbb
aaa
ss
arpl
in
fcomp
and
pop
dec
inc
mov
test
test
leave
es
sub
jl
sub
push
xor
mov
div
sub
bound
stos
cmps
scas
and
sub
sub
ss
jg
imul
cmps
arpl
or
sub
and
inc
sbb
cs
outs
rcl
jle
ss
das
and
push
movs
popf
inc
lods
movs
mov
jp
lods
loopne
sub
pop
and
sub
(bad)
call
push
xchg
sub
lea
sub
mov
sar
(bad)
(bad)
(bad)
jmp
jnp
lods
jae
(bad)
and
das
sti
mov
jmp
cdq
mov
mov
mov
ds
xor
lods
or
(bad)
stos
xor
push
(bad)
(bad)
(bad)
jmp
fmul
in
imul
pop
pop
pop
test
stos
loope
js
xchg
in
(bad)
(bad)
(bad)
dec
push
jge
inc
xor
stos
(bad)
cs
or
xchg
out
int
sbb
clc
mov
adc
imul
repnz
shl
gs
sbb
(bad)
(bad)
out
sbb
leave
pop
fwait
gs
adc
mov
sbb
fmul
test
and
push
(bad)
call
or
clc
pop
jns
pop
imul
scas
ror
jnp
mov
pop
enter
mov
mul
div
stos
push
mov
mov
xlat
add
fisub
bsr
jecxz
jae
in
ds
int
jg
(bad)
(bad)
(bad)
inc
imul
add
push
mov
push
movs
int
dec
adc
(bad)
call
lds
retf
xchg
fadd
pop
xchg
sbb
repnz
sub
(bad)
(bad)
(bad)
cmp
das
cs
test
adc
jl
adc
mov
test
add
aas
jb
xchg
jmp
shl
int3
pusha
xchg
test
ins
dec
adc
pop
stos
jp
push
je
pop
int3
fs
(bad)
(bad)
dec
mov
adc
retf
stos
test
test
lea
adc
push
daa
ror
out
xchg
sbb
mov
push
mov
aaa
xchg
in
gs
(bad)
(bad)
(bad)
call
fistp
movs
xchg
mov
fnstcw
lods
movs
and
data16
aad
sbb
mov
(bad)
out
mov
cmps
lds
dec
push
pop
dec
push
push
mov
xchg
(bad)
out
clc
call
inc
and
pop
stos
mov
adc
stos
in
loope
pusha
repnz
out
(bad)
(bad)
(bad)
call
nop
sub
hlt
fisttp
leave
adc
mov
js
add
inc
ja
cli
(bad)
(bad)
cmp
nop
loop
inc
es
mov
movs
imul
inc
push
adc
mov
ins
out
push
mov
retf
sub
jg
push
(bad)
jp
mov
(bad)
(bad)
dec
ret
ficomp
push
lods
mov
stos
xchg
jb
cmp
sub
add
rol
ja
mov
jmp
adc
adc
jp
mov
fidivr
sbb
add
call
jnp
mov
(bad)
fwait
sub
lods
(bad)
add
nop
or
jns
(bad)
ds
fiadd
or
inc
mov
xchg
jg
imul
mov
call
cmp
call
pop
mov
xchg
add
div
xchg
xor
out
mov
mov
std
jmp
fild
stos
dec
xchg
jp
stos
sub
add
outs
or
pop
adc
sub
add
pusha
pop
(bad)
(bad)
(bad)
jmp
mov
out
sub
add
fisttp
retf
pop
add
(bad)
fbld
retf
jns
leave
sbb
stc
retf
jmp
fs
jmp
add
sub
cmp
mov
(bad)
cmp
sbb
cmp
sub
dec
dec
pop
or
(bad)
lea
fisttp
int
in
inc
std
mov
jge
ins
and
(bad)
(bad)
dec
push
push
test
and
or
sub
cmp
mov
and
lods
(bad)
(bad)
jmp
cld
or
fmul
ret
pop
or
outs
pop
xchg
mov
mov
std
(bad)
(bad)
fsubrp
inc
out
daa
mov
inc
sahf
mov
iret
and
(bad)
jg
pop
pop
lahf
or
adc
pop
in
aas
shr
jg
outs
ins
dec
inc
pop
lea
movs
movs
sbb
test
xchg
sub
push
aam
hlt
dec
in
push
xchg
jmp
sub
mov
add
aaa
std
(bad)
jg
ja
test
push
sub
dec
and
loope
mov
in
mov
gs
lds
sahf
cs
add
ja
addr16
xlat
add
mov
retf
not
mov
xchg
dec
xchg
out
(bad)
enter
add
scas
call
cmp
in
leave
ss
push
dec
inc
test
(bad)
(bad)
mov
and
push
push
and
inc
jecxz
push
pop
arpl
jae
and
xor
jg
call
inc
add
push
faddp
push
and
or
push
xchg
lea
jmp
or
ret
mov
out
add
adc
inc
or
jo
pusha
(bad)
jg
jmp
loopne
lock
mov
inc
cmp
mov
in
rol
and
or
ins
mov
mov
in
and
xor
or
loop
ins
push
inc
inc
fdivrp
inc
sar
mov
xchg
mov
in
sbb
inc
xor
mov
cvttps2pi
push
or
scas
xor
fld
ja
into
sub
(bad)
(bad)
call
(bad)
adc
scas
inc
push
cmp
push
mov
test
sets
mov
call
(bad)
(bad)
dec
or
and
mov
xor
scas
out
sti
ret
retf
sub
rol
fwait
ds
retf
dec
push
mov
xor
cmps
pop
push
sub
dec
pop
push
(bad)
(bad)
(bad)
push
dec
cmp
out
mov
inc
mov
in
mov
into
pop
jae
lahf
cmps
cs
ret
mov
fadd
and
pop
fdivrp
(bad)
(bad)
jg
arpl
pop
xchg
pop
scas
mov
mov
and
aaa
sbb
cmp
js
(bad)
jmp
mov
icebp
nop
sub
mul
test
stos
sbb
xchg
je
jnp
sbb
call
aad
sbb
out
ret
dec
or
icebp
pop
(bad)
(bad)
(bad)
jmp
jb
push
test
lods
push
adc
std
add
out
dec
test
or
dec
push
mov
or
lods
(bad)
dec
invd
pop
mov
les
cli
scas
fisubr
cdq
add
push
or
inc
push
movs
mov
dec
(bad)
mov
mov
jb
mov
adc
(bad)
(bad)
(bad)
inc
lods
adc
cli
sub
mov
mov
pop
je
fwait
mov
in
push
xchg
call
jmp
arpl
(bad)
sbb
scas
mov
jne
mov
(bad)
adc
push
xor
fild
cdq
pusha
lahf
lods
cmps
xchg
shl
(bad)
or
cwde
push
outs
(bad)
(bad)
call
fidiv
movs
iret
lahf
or
jne
fwait
test
and
fisubr
(bad)
(bad)
out
cli
cmps
ins
data16
into
loopne
shl
mov
retf
pop
(bad)
cdq
mov
in
in
add
mov
and
lods
adc
cld
(bad)
jmp
call
repz
in
xlat
(bad)
stos
ficomp
arpl
add
push
cmp
pop
or
adc
add
fwait
jg
adc
ins
(bad)
(bad)
(bad)
jmp
inc
and
mov
out
and
pop
bound
mov
into
jle
mov
dec
mov
mov
imul
xchg
sub
scas
movs
xchg
repz
std
mov
inc
cmps
cdq
ret
(bad)
(bad)
dec
scas
sbb
dec
xchg
data16
fcmovu
xlat
mov
imul
jmp
fistp
movs
sub
ins
mov
and
xlat
fsub
loope
fild
push
jecxz
arpl
(bad)
enter
or
(bad)
(bad)
(bad)
mov
je
hlt
add
je
pusha
ins
mov
outs
clc
pop
leave
stc
test
(bad)
(bad)
in
jmp
inc
dec
cmps
mov
rcl
cmps
shl
add
cmp
or
call
pop
clc
(bad)
(bad)
jmp
loop
pop
push
or
(bad)
(bad)
pop
mov
movs
xor
push
ja
adc
call
loopne
mov
cmp
mov
adc
scas
call
sub
(bad)
(bad)
(bad)
call
mov
mov
push
push
enter
stos
pop
ins
adc
iret
mov
call
(bad)
inc
inc
sbb
mov
gs
xchg
sbb
push
sub
add
pop
fisttp
xchg
(bad)
(bad)
(bad)
out
push
jb
jno
je
jns
loope
int
sub
dec
cmps
or
shr
xor
ins
mov
sbb
mov
leave
mov
and
cmps
(bad)
(bad)
(bad)
jmp
popf
das
sahf
xchg
mov
movs
dec
outs
lods
mov
push
ds
sar
jg
movs
mov
mov
pop
clc
lods
and
je
mov
jmp
(bad)
scas
cmp
loope
cmp
lods
or
sbb
xchg
ins
dec
mov
mov
jmp
add
mov
(bad)
mov
mov
push
inc
mov
cmp
(bad)
(bad)
(bad)
mov
dec
gs
jmp
sub
ins
dec
cmp
mov
pop
add
inc
push
stos
into
push
dec
cdq
(bad)
cdq
xchg
ja
xlat
pop
mov
out
clc
push
pop
push
push
push
mov
cmp
sar
(bad)
jmp
cmp
xchg
sbb
cmp
int
(bad)
xchg
movs
jnp
and
jmp
sub
in
pop
(bad)
sbb
sti
scas
arpl
outs
push
sbb
sub
(bad)
(bad)
(bad)
(bad)
jp
(bad)
leave
inc
add
mov
xor
mov
mov
(bad)
(bad)
jmp
xor
xchg
icebp
mov
mov
(bad)
fdiv
sbb
sub
test
(bad)
dec
hlt
hlt
cmp
add
xchg
std
jmp
sub
mov
(bad)
(bad)
(bad)
dec
movs
push
mov
stos
mov
xchg
daa
sub
out
sub
fmul
ret
leave
out
mov
fdiv
dec
cwde
sahf
loop
mov
add
add
dec
scas
call
(bad)
push
sbb
mov
mov
sahf
xchg
(bad)
loopne
jl
inc
jmp
imul
(bad)
cli
retf
push
cmp
mov
sub
mov
mov
mov
pop
and
sar
sbb
mov
in
adc
(bad)
(bad)
(bad)
jg
adc
xor
mov
daa
cmp
mov
cdq
ins
push
(bad)
sbb
and
(bad)
mov
movs
cmp
dec
fs
lds
xor
shl
(bad)
(bad)
(bad)
jp
daa
inc
pop
push
cmp
cmp
(bad)
mov
rcr
jo
xlat
ss
mov
inc
fs
lahf
das
out
adc
fsub
jp
(bad)
cld
(bad)
(bad)
jmp
xchg
mov
outs
or
(bad)
cmp
mov
mov
mov
xor
cmp
out
icebp
(bad)
push
dec
cs
mov
sub
sub
pop
mov
std
xchg
mov
(bad)
adc
bound
mov
sahf
mov
(bad)
(bad)
(bad)
call
mov
xchg
sub
xchg
mov
jecxz
in
scas
jmp
and
dec
imul
xor
out
popa
adc
cmp
inc
xchg
test
das
call
pop
(bad)
jbe
push
cld
dec
stos
outs
pop
or
inc
lods
aam
push
sub
cmps
or
xor
test
add
imul
imul
in
icebp
(bad)
dec
neg
stos
jns
cmovge
retf
mov
stos
mov
addr16
fbstp
test
jp
fistp
mov
jmp
pop
xor
(bad)
sahf
mov
cmc
das
jle
daa
mov
ds
(bad)
(bad)
push
aam
or
aam
inc
dec
or
mov
loope
aas
sbb
pop
xlat
shl
xchg
dec
(bad)
dec
mov
sbb
sti
dec
push
fidiv
xchg
xchg
sbb
or
test
mov
add
adc
(bad)
imul
in
mov
cdq
std
cmps
enter
cmp
test
(bad)
call
dec
mov
inc
repz
dec
pop
xor
xor
adc
adc
cli
dec
(bad)
(bad)
call
sub
(bad)
mov
sbb
cmps
aad
out
hlt
(bad)
jbe
into
(bad)
(bad)
(bad)
call
das
ins
out
das
cmps
sbb
(bad)
std
pop
cmp
mov
pop
dec
test
cmp
stos
in
sbb
fnstsw
daa
cmps
pop
mov
xor
mov
dec
scas
ss
bound
ss
rol
imul
loope
loope
dec
dec
addr16
push
inc
lods
mov
cmps
push
std
jle
stos
push
faddp
es
(bad)
inc
inc
call
es
loop
mov
xor
inc
jl
ror
push
fcmovnu
(bad)
(bad)
inc
jmp
daa
xchg
or
test
and
cmp
pop
mov
adc
lock
(bad)
(bad)
(bad)
fdivr
mov
sbb
sbb
iret
inc
jo
inc
add
stos
rcr
imul
cmps
call
xor
(bad)
daa
out
loopne
gs
jmp
cli
jle
out
jmp
push
jbe
scas
bound
mov
jl
xchg
pop
movs
jecxz
inc
xor
jmp
leave
movs
dec
sub
mov
or
out
jg
xlat
xlat
xor
or
mov
outs
adc
mov
(bad)
clc
mov
mov
sbb
sub
aad
int
cli
test
pusha
mov
and
cld
(bad)
call
daa
bound
out
outs
push
mov
in
sbb
cwde
(bad)
mov
fisttp
mov
je
adc
sbb
fbld
add
test
sub
mov
dec
lock
in
add
mov
(bad)
or
mov
mov
loopne
(bad)
(bad)
in
jge
outs
jmp
push
pop
ins
mov
std
and
sub
gs
dec
(bad)
(bad)
(bad)
(bad)
clc
imul
loop
movs
ins
and
jl
test
xor
or
xchg
add
cli
(bad)
(bad)
cli
add
push
icebp
jge
xor
adc
jmp
cmp
ins
data16
call
loopne
jmp
push
push
or
mov
(bad)
(bad)
(bad)
jmp
shr
(bad)
fs
jb
in
dec
mov
pop
fadd
jmp
push
rol
adc
push
cld
dec
jnp
fmul
(bad)
outs
stc
pop
inc
cmp
fisubr
(bad)
(bad)
jmp
dec
cmc
(bad)
sbb
mov
scas
int
adc
inc
mov
xor
mov
(bad)
aas
adc
inc
pop
jmp
(bad)
and
add
imul
inc
mov
(bad)
out
out
or
push
mov
mov
push
mov
in
into
add
push
int3
mov
mov
cli
pop
pusha
mov
dec
pop
cld
in
pop
test
mov
(bad)
call
sub
in
mov
outs
adc
push
adc
cmp
retf
(bad)
ins
adc
jmp
(bad)
adc
dec
lods
push
dec
sbb
pushf
add
movs
push
xchg
jmp
xor
bound
pop
retf
lds
and
lods
sub
jmp
xlat
adc
in
push
in
inc
push
loope
ficomp
mov
or
(bad)
mov
mov
mov
call
mov
in
fadd
aaa
xchg
inc
jnp
sub
mov
jg
lds
push
push
jge
call
and
stos
scas
inc
adc
pop
lock
dec
or
(bad)
sahf
pusha
lods
mov
mov
call
imul
fadd
pop
js
in
mov
std
and
ss
(bad)
mov
jb
test
icebp
scas
inc
cs
sar
mov
jl
xlat
lods
sbb
(bad)
(bad)
mov
shl
sub
cmp
pop
je
mov
dec
in
std
into
pop
out
sub
call
dec
xchg
or
lods
repnz
and
imul
mov
scas
mov
xchg
push
aaa
(bad)
mov
scas
jp
cmps
sbb
fdivr
test
sbb
ins
enter
xchg
push
pop
pop
jl
xor
sahf
daa
jns
cmp
xchg
(bad)
cmp
mov
mov
inc
mov
cmp
mov
xor
mov
mov
(bad)
inc
mov
bound
dec
pop
push
cmps
inc
sub
and
mov
mov
push
or
aad
mov
mov
jb
and
out
cli
(bad)
inc
cmps
jmp
xor
jmp
sbb
or
cmp
xor
(bad)
(bad)
(bad)
(bad)
cmp
mov
retf
push
jae
dec
cmp
adc
aas
cmp
iret
push
and
(bad)
(bad)
mov
xor
cmp
aaa
mov
sub
out
mov
add
inc
push
pop
scas
dec
cmp
stos
mov
sub
cli
push
jb
ror
inc
add
jmp
cmp
mov
mov
xchg
xchg
fld
sub
push
mov
(bad)
push
out
jno
mov
pop
mov
(bad)
fisttp
xor
clc
test
stos
std
mov
jle
(bad)
jle
mov
pop
repz
(bad)
(bad)
jmp
mov
inc
dec
lahf
repnz
xchg
adc
jmp
xor
cmp
bound
mov
data16
ret
and
add
dec
(bad)
int
(bad)
outs
jg
std
xchg
out
or
jmp
(bad)
jmp
pop
pop
inc
loope
adc
in
push
pop
enter
fnstcw
call
(bad)
jg
dec
mov
nop
call
movs
and
pop
scas
mov
(bad)
(bad)
(bad)
out
stos
jp
or
stos
retf
fild
adc
stos
mov
sti
fisttp
fmul
mov
outs
mov
daa
jl
pop
(bad)
(bad)
in
mov
xchg
in
xchg
scas
inc
dec
mov
sbb
lahf
mov
jecxz
lods
loope
(bad)
xor
(bad)
(bad)
(bad)
call
jmp
mov
lahf
push
call
cli
mov
lock
(bad)
(bad)
dec
jp
jge
xchg
std
mov
fcmove
loopne
popf
daa
lahf
push
movs
stos
call
dec
loope
(bad)
(bad)
(bad)
call
xor
dec
add
les
push
sbb
sbb
adc
das
bound
pop
test
lahf
mov
sbb
mov
jecxz
icebp
movs
ins
out
jae
ja
cli
(bad)
(bad)
(bad)
jg
std
or
cmps
dec
jmp
rcr
addr16
lea
into
dec
mov
mov
(bad)
(bad)
jmp
xor
jle
jmp
mov
inc
mov
popa
sub
aas
sub
mov
clc
(bad)
push
fscale
jmp
jb
or
mov
retf
test
dec
xor
jmp
(bad)
fidivr
lods
pop
retf
ins
pushf
stos
fld
data16
inc
(bad)
(bad)
mov
cwde
xor
mov
retf
pop
mov
bound
lock
mov
adc
jg
cmp
inc
xor
cld
sbb
dec
stos
mov
xlat
adc
sahf
loop
push
cmp
mov
(bad)
call
mov
loope
arpl
sbb
test
(bad)
fcomp
and
mov
adc
push
or
mov
inc
add
xchg
sub
mov
idiv
pop
imul
inc
mov
sti
das
sbb
adc
sub
shl
dec
aam
(bad)
(bad)
jg
and
mov
add
mov
fwait
retf
jae
shld
xchg
sub
(bad)
(bad)
(bad)
call
sub
fs
push
scas
xchg
dec
call
imul
es
or
(bad)
dec
inc
loop
(bad)
sub
sbb
das
not
jbe
(bad)
(bad)
call
out
adc
cmp
stos
js
jl
jo
jl
call
jp
push
dec
jg
lods
jmp
mov
(bad)
clc
add
stos
jne
sub
pop
xchg
fs
jnp
(bad)
cmp
out
popa
jmp
inc
mov
mov
mov
movs
retf
cmp
xlat
adc
fdivr
xor
sub
xchg
popa
jno
mov
nop
mov
pop
mov
cmp
mov
ret
(bad)
(bad)
jmp
scas
sub
(bad)
data16
inc
mov
lds
mov
cmps
inc
mov
push
add
cwde
lds
lods
cmp
imul
das
mov
jmp
popa
ret
mov
push
aad
push
(bad)
icebp
outs
ins
or
mov
inc
inc
pop
mov
sbb
mov
call
sub
add
(bad)
(bad)
inc
mov
push
jnp
mov
pop
push
inc
aaa
xor
sti
scas
mov
sub
(bad)
(bad)
lods
xchg
cmp
mov
imul
shl
jmp
sub
and
in
cwde
jo
loop
sar
(bad)
jmp
cmp
shr
sub
xor
mov
xchg
sti
retf
sub
pop
mov
out
or
sbb
add
out
(bad)
gs
(bad)
jmp
test
gs
cs
pushf
cmps
lahf
call
stos
mov
cmps
inc
push
retf
pop
scas
stos
or
xchg
aam
(bad)
call
mov
jg
retf
or
jl
and
mov
imul
adc
clc
(bad)
dec
repnz
dec
cmp
lods
mov
dec
jmp
sub
adc
rol
xchg
mov
call
fs
(bad)
(bad)
dec
cmps
sbb
cdq
mov
mov
pop
and
ss
rcl
sub
std
mov
(bad)
inc
mov
adc
add
xor
mov
cmp
lods
sbb
xchg
jb
inc
iret
pop
scas
test
scas
mov
(bad)
(bad)
jmp
dec
pusha
dec
(bad)
mov
pop
adc
mov
xchg
(bad)
fist
jl
ret
cs
add
test
add
xor
sub
in
stc
jmp
pop
push
or
out
call
cmp
or
(bad)
call
ins
or
xor
loop
xor
pop
push
dec
sub
dec
sub
mov
(bad)
call
(bad)
cld
jmp
xor
out
jo
jmp
inc
mov
stos
inc
cs
(bad)
(bad)
call
fisub
(bad)
ror
ret
jbe
test
enter
(bad)
dec
mov
sub
(bad)
jmp
xchg
into
push
stos
pushf
cli
inc
je
mov
or
cmp
mov
xlat
cmp
(bad)
(bad)
dec
sub
xor
jl
sub
adc
sub
imul
(bad)
cmp
setno
cld
sub
aas
imul
xchg
mov
shl
dec
mov
retf
mov
jns
ror
(bad)
(bad)
(bad)
mov
loop
or
popf
test
pop
push
xor
shr
arpl
sbb
std
cli
add
ss
push
push
ror
push
xchg
dec
sub
in
push
add
in
cmp
out
mov
push
push
xchg
xrelease
push
jmp
(bad)
(bad)
(bad)
push
movs
jge
cs
push
dec
nop
idiv
and
sbb
sti
imul
retf
loop
mov
and
(bad)
(bad)
call
sub
pop
cmps
mov
adc
loop
and
into
fisubr
in
sbb
mov
mov
mov
outs
clc
neg
pop
addr16
adc
cwde
jg
(bad)
popf
ins
lds
cld
adc
(bad)
(bad)
push
push
stos
loope
idiv
scas
jle
jp
pop
xor
imul
inc
jmp
(bad)
dec
xchg
fstp
das
(bad)
jle
movs
mov
stos
outs
mov
pushf
and
jmp
addr16
inc
imul
dec
dec
inc
leave
or
inc
mov
(bad)
(bad)
jmp
ja
(bad)
adc
and
push
movs
das
jecxz
mov
out
arpl
pop
sub
xchg
mov
into
clc
jb
(bad)
dec
push
or
retf
mov
retf
jb
sbb
jmp
adc
xor
(bad)
(bad)
(bad)
jmp
scas
sbb
jnp
xchg
cmp
lods
mov
bsr
and
(bad)
(bad)
jmp
jecxz
dec
pop
imul
dec
inc
or
xchg
jbe
adc
cmps
jb
(bad)
fisttp
out
jmp
movs
sbb
xchg
jb
fld
cli
mov
mov
adc
ret
sbb
inc
pop
add
sbb
cmp
aad
(bad)
(bad)
(bad)
jmp
pop
push
icebp
jge
push
xchg
mov
std
call
pushf
mov
(bad)
fistp
xchg
pushf
shl
std
(bad)
jge
mov
pop
inc
js
adc
cli
mov
retf
jmp
or
ins
jmp
pop
jns
sbb
mov
mov
dec
fist
das
aad
mov
jge
push
dec
fs
or
mov
mov
ret
sbb
retf
(bad)
push
pop
xchg
test
ficomp
sti
fisubr
call
(bad)
(bad)
fistp
xor
cmps
lods
mov
inc
movs
sbb
xchg
(bad)
aad
mov
and
clc
(bad)
jmp
mov
cli
cdq
xor
adc
pop
in
mov
(bad)
fcomip
pop
shr
cmp
jmp
addr16
loopne
mov
mov
(bad)
jmp
sub
cwde
jl
repnz
push
xchg
(bad)
dec
jmp
sbb
pusha
inc
scas
push
adc
mov
sub
(bad)
(bad)
(bad)
cmp
and
neg
mov
sbb
or
retf
add
mov
in
push
adc
mov
je
push
cmc
push
stos
lahf
movs
jmp
test
sub
ds
mov
sub
cmp
push
(bad)
jmp
loope
mov
xor
scas
outs
fs
cmp
sbb
(bad)
(bad)
push
int
xchg
and
adc
sub
pop
sbb
jg
mov
cmc
xchg
cmp
(bad)
dec
sbb
and
dec
das
aam
jmp
(bad)
(bad)
ds
xlat
ds
add
cmps
push
imul
(bad)
(bad)
(bad)
(bad)
fisub
sbb
push
or
push
dec
fsub
jb
add
stos
out
mov
inc
aam
pop
xor
push
inc
mov
sbb
outs
cli
jmp
ins
pop
jg
dec
xchg
push
fcom
sbb
xor
sub
into
or
test
in
xchg
jmp
out
retf
sub
push
(bad)
out
sub
jmp
(bad)
cmp
jmp
int3
loopne
cs
push
cs
mov
push
sub
mov
test
jmp
sub
dec
dec
test
and
xchg
sbb
stos
es
push
xchg
jns
mov
xor
movs
sbb
cmp
and
fimul
(bad)
(bad)
push
sub
dec
iret
push
das
mov
mov
mov
jmp
sub
out
movs
out
add
xor
punpckhbw
(bad)
jg
enter
mov
push
mov
dec
pop
dec
dec
sahf
jmp
sbb
call
or
jbe
in
lock
(bad)
(bad)
(bad)
mov
adc
cld
mov
loope
(bad)
mov
jbe
dec
jae
push
std
jg
das
or
add
dec
ins
nop
pop
fild
out
stos
pop
retf
(bad)
(bad)
out
fmul
cmp
cmps
sub
aad
sbb
or
pop
ins
ficomp
(bad)
(bad)
(bad)
dec
mov
cmp
xlat
sub
xchg
or
inc
scas
or
(bad)
(bad)
(bad)
jmp
neg
hlt
mov
fwait
lds
lahf
mov
xor
push
jo
xchg
push
push
pop
fs
cmps
lock
(bad)
(bad)
jmp
dec
adc
sub
ret
jmp
stos
std
jge
sub
mov
adc
(bad)
fsub
lock
dec
jno
lahf
es
(bad)
(bad)
jmp
imul
jecxz
xchg
jmp
push
jp
daa
jg
push
push
xor
imul
std
fwait
xchg
into
(bad)
(bad)
call
push
or
sub
or
xor
push
mov
inc
adc
lds
fwait
inc
sbb
iret
inc
jl
mov
mov
mov
(bad)
out
pop
call
inc
fdivr
push
daa
mov
xor
pop
mov
mov
enter
xchg
xchg
dec
inc
jnp
or
jmp
mov
dec
mov
jmp
(bad)
(bad)
(bad)
(bad)
in
sub
push
test
or
std
cmps
cdq
sahf
sbb
sub
cmp
jmp
outs
add
sub
cmp
xchg
pop
imul
mov
retf
daa
fsubrp
nop
cmp
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
push
ds
pop
js
or
fisubr
std
stc
retf
test
aas
std
adc
pop
push
mov
das
(bad)
(bad)
(bad)
push
sub
enter
jns
int
scas
xor
mov
inc
sbb
bound
les
(bad)
(bad)
call
test
iret
test
imul
sub
mul
imul
jmp
pop
ret
std
or
adc
std
sahf
fistp
xchg
imul
in
retf
mov
(bad)
(bad)
cmp
stc
or
inc
and
call
pusha
sub
popa
fidivr
and
mov
bound
pusha
xor
push
arpl
scas
inc
jp
adc
xchg
adc
dec
push
scas
jno
inc
(bad)
lahf
sbb
xor
jmp
movs
jb
jno
imul
inc
out
mov
mov
pop
push
retf
jb
gs
xlat
std
test
pop
mov
test
xor
or
test
(bad)
call
les
push
inc
(bad)
jmp
sar
cs
or
sub
fwait
scas
or
js
lock
(bad)
push
xor
dec
inc
sub
sub
std
pop
add
xor
jle
and
sub
mov
dec
and
push
dec
std
fmul
sub
call
mov
add
out
mov
gs
(bad)
(bad)
fnstsw
inc
mov
inc
jmp
popa
call
sbb
adc
into
hlt
adc
iret
xchg
pop
dec
cs
call
das
shr
retf
enter
xchg
(bad)
(bad)
push
(bad)
movntq
lahf
(bad)
mov
movs
push
imul
test
idiv
xchg
stos
idiv
(bad)
dec
scas
mov
dec
out
jmp
scas
xchg
mov
mov
jmp
push
cdq
mov
imul
sbb
sbb
enter
(bad)
(bad)
call
test
fstp
xchg
push
sbb
fsubr
mov
mov
call
cmp
mov
test
jl
pop
inc
jmp
lahf
sub
dec
and
test
mov
(bad)
(bad)
jmp
push
lods
sub
xor
shr
pusha
sub
sar
pop
repnz
(bad)
(bad)
(bad)
cmp
cmp
imul
push
mov
ficom
mov
mov
stos
mov
dec
jb
push
pop
(bad)
stos
adc
pop
xchg
mov
push
das
mov
xchg
cld
mov
(bad)
(bad)
(bad)
jmp
pop
sti
data16
fcom
push
mov
xchg
jo
pop
sub
call
(bad)
jmp
adc
leave
mov
movs
xchg
cli
std
dec
pop
out
(bad)
jno
mov
(bad)
jmp
(bad)
pop
out
push
sub
lahf
loopne
(bad)
fwait
inc
xchg
jmp
ds
add
sar
outs
mov
fwait
ins
and
ss
and
(bad)
mov
mov
cwde
jmp
fs
push
xchg
jmp
or
or
fcmovnu
imul
(bad)
jmp
sub
jmp
dec
mov
cmps
(bad)
cli
mov
scas
sti
lahf
xlat
xor
(bad)
(bad)
mov
xchg
fsub
push
popf
inc
stos
push
imul
outs
imul
sub
jmp
cmp
inc
sub
std
repnz
jl
push
(bad)
push
movs
cdq
loopne
jmp
stos
addr16
(bad)
scas
fstp
push
cld
push
push
test
sbb
jmp
out
(bad)
popf
dec
ins
imul
jl
rcr
in
test
dec
xchg
inc
xchg
retf
mov
sbb
(bad)
ficomp
loopne
loopne
jmp
sbb
push
movs
test
mov
daa
or
xor
mov
call
fist
mov
xor
sub
xchg
inc
push
push
retf
fucomip
and
cmc
stos
popa
std
out
aam
pop
(bad)
aam
es
(bad)
(bad)
(bad)
sub
mov
cli
sub
xchg
(bad)
iret
pop
scas
sub
xchg
sbb
imul
loopne
stos
xchg
js
hlt
int
jle
mov
fsubr
jae
pop
outs
retf
popa
or
test
jmp
jg
mov
mov
jo
jo
ja
test
(bad)
jg
(bad)
ffreep
mov
addr16
shl
lea
xor
(bad)
std
int
(bad)
(bad)
(bad)
jmp
cmps
or
call
sbb
fsubr
push
xor
mov
dec
inc
(bad)
(bad)
inc
(bad)
scas
js
scas
stc
push
scas
mov
(bad)
or
int3
leave
outs
dec
shr
(bad)
(bad)
dec
mov
cs
out
test
icebp
xor
ret
test
jmp
(bad)
(bad)
push
out
repnz
and
loop
xchg
fs
dec
stos
inc
and
jmp
call
push
je
es
std
and
fistp
movs
iret
add
cmp
xchg
cmp
out
jbe
cmps
aad
xchg
movs
mov
add
jmp
pop
push
call
xor
cmp
das
xchg
(bad)
mov
popa
daa
sub
mov
imul
ins
mov
enter
gs
pop
ret
dec
mov
lds
(bad)
sbb
neg
arpl
mov
push
lds
(bad)
jmp
pop
or
sti
stos
pop
mov
lods
stc
jge
mov
stos
aad
sbb
(bad)
ds
xor
out
or
dec
xor
pop
sti
mov
jmp
mov
pop
jge
shl
jo
mov
lods
jne
(bad)
(bad)
push
and
jns
dec
aad
xchg
push
xlat
push
dec
enter
add
(bad)
jmp
sbb
push
cmps
or
pop
mov
rcr
icebp
imul
ins
vpunpcklwd
(bad)
(bad)
dec
je
outs
push
mov
xchg
add
mov
adc
push
jns
sbb
lea
inc
cld
jmp
inc
mov
ror
mov
mov
sub
dec
pop
inc
xor
mov
scas
push
movs
adc
iret
fld
cs
(bad)
mov
psubd
movs
into
xchg
inc
mov
cmp
ins
cmp
outs
xchg
(bad)
cs
mov
jbe
or
movs
loop
(bad)
retf
into
sub
push
out
xchg
jmp
dec
push
stos
jmp
push
stos
leave
sub
mov
retf
jmp
or
aam
and
push
outs
add
(bad)
(bad)
jp
cwde
repnz
cmp
jns
fiadd
cmps
mov
pop
sbb
mov
or
leave
into
dec
movs
cmp
mov
xchg
cmp
nop
lds
js
push
mov
dec
sub
push
iret
mov
add
fnstsw
mov
(bad)
inc
mov
cmc
cs
cmps
dec
ret
jne
stos
jo
jbe
cmps
jne
stos
add
(bad)
(bad)
inc
adc
shr
shr
(bad)
mov
add
dec
sbb
dec
dec
mov
call
jmp
adc
inc
xor
pusha
ret
push
sub
sbb
and
mov
xchg
dec
jmp
add
add
push
aaa
mov
pop
movs
std
add
or
cmp
mov
jp
cmp
push
push
cmps
sbb
mov
mov
or
cdq
(bad)
icebp
mov
cmp
call
fidivr
shl
retf
mov
or
ins
dec
lds
jle
gs
js
(bad)
(bad)
call
pop
imul
pop
pushf
pop
xor
leave
mov
in
imul
vpcomuw
push
dec
(bad)
(bad)
(bad)
push
mov
(bad)
sbb
iret
scas
push
gs
xchg
movs
push
adc
mov
xlat
jbe
sar
(bad)
push
cmp
jp
pop
jae
mov
mov
stos
ret
sti
pop
add
inc
(bad)
mov
mov
std
scas
movs
xchg
mov
je
popf
mov
cmp
(bad)
(bad)
dec
pusha
das
test
jnp
cmp
push
rcr
and
in
stos
cmp
hlt
(bad)
(bad)
jmp
or
sbb
jns
lea
dec
xchg
cdq
mov
jmp
dec
jo
fild
xchg
test
sar
push
fstp
inc
adc
cwde
mov
dec
ficomp
cmp
(bad)
(bad)
jmp
cwde
in
enter
daa
test
ret
(bad)
outs
add
mov
or
sub
mov
(bad)
(bad)
call
sub
cwde
xor
xchg
mov
imul
iret
lahf
adc
add
test
in
mov
sbb
(bad)
(bad)
(bad)
fabs
and
sbb
pop
or
in
loopne
test
(bad)
shl
popf
sbb
adc
repnz
imul
adc
mov
xor
jnp
xor
pop
push
cli
popf
add
jmp
(bad)
jmp
mov
outs
call
aas
repnz
std
sbb
(bad)
(bad)
nop
jmp
call
scas
(bad)
push
lds
fistp
mov
das
cmp
(bad)
(bad)
(bad)
push
or
scas
pop
inc
cmp
jmp
cwde
sti
xchg
mov
in
adc
adc
mov
jmp
add
mov
pop
hlt
xchg
es
xchg
add
fdivr
popf
retf
jne
out
call
jbe
mov
lods
xor
outs
gs
movs
cwde
(bad)
(bad)
inc
adc
xchg
jle
stos
aad
mov
retf
mov
ds
lahf
enter
imul
add
jb
sub
cmp
sub
je
ret
xor
jb
adc
mov
jb
call
outs
test
(bad)
leave
dec
mov
adc
jmp
jmp
jmp
(bad)
call
repz
sub
(bad)
mov
or
pop
sbb
call
mov
push
add
and
(bad)
(bad)
dec
scas
sahf
call
pop
movs
(bad)
sbb
(bad)
or
mov
jb
sub
(bad)
(bad)
call
push
retf
mov
mov
das
sub
mov
in
std
mov
sub
(bad)
call
sar
adc
or
pop
sub
xchg
cmp
je
retf
fild
(bad)
(bad)
inc
xchg
pop
fwait
push
popa
mov
(bad)
aas
cdq
je
sbb
pop
mov
(bad)
jmp
inc
mov
fcomp
fidiv
jnp
push
mov
fcmove
scas
xor
cli
sub
xchg
mov
mov
adc
dec
(bad)
xlat
fwait
mov
retf
jo
out
(bad)
ret
cmp
cli
jg
and
pop
mov
add
mov
dec
lods
xor
int
repnz
(bad)
(bad)
(bad)
call
ror
hlt
sbb
sbb
xor
(bad)
loopne
adc
pushf
pop
sahf
scas
xchg
(bad)
(bad)
call
jnp
pop
(bad)
mov
(bad)
cdq
xchg
ins
inc
cmps
mov
rol
jmp
mov
cli
(bad)
xchg
mov
dec
sub
call
ds
in
popa
mov
(bad)
(bad)
dec
pop
cli
sub
jmp
xchg
adc
(bad)
test
in
lods
in
nop
jecxz
xchg
xchg
(bad)
jg
add
lods
mov
mov
test
retf
push
xor
aam
sub
(bad)
mov
pop
push
adc
dec
jmp
sti
jae
mov
retf
sbb
jl
ret
adc
clc
bound
mov
fwait
mov
and
mov
pop
cmp
mov
sti
inc
ret
sbb
mov
mov
or
mov
std
push
mov
dec
fstp
jb
mov
(bad)
call
data16
push
out
xchg
and
add
in
loop
adc
jmp
test
shr
(bad)
call
stc
jg
xchg
(bad)
cmp
fimul
dec
lahf
(bad)
(bad)
(bad)
mov
xchg
ficomp
gs
mov
mov
push
push
sbb
dec
sub
js
(bad)
std
call
sub
dec
xor
or
jmp
mov
xchg
jecxz
add
inc
push
adc
(bad)
(bad)
ds
pop
sub
rcl
ret
xchg
push
cmp
push
mov
popa
movs
add
fcomip
jmp
int3
cli
(bad)
in
jbe
push
lea
enter
mov
jmp
pop
(bad)
inc
sub
movs
cs
and
int
sub
stos
test
(bad)
(bad)
jg
int
jb
mov
mov
inc
jmp
clc
mov
(bad)
into
stos
pop
sub
pop
idiv
(bad)
(bad)
mov
mov
or
mov
sbb
mov
or
and
std
inc
xchg
enter
jmp
fsub
push
std
call
aas
jne
iret
sbb
adc
cwde
std
mov
jb
lods
adc
call
add
in
push
mov
push
jns
xchg
mov
fisubr
add
dec
mov
iret
mov
and
jl
fcomip
call
stos
sub
jmp
pop
(bad)
jbe
xlat
mov
(bad)
(bad)
jmp
jo
inc
and
fs
aaa
inc
ja
call
pop
sub
sbb
(bad)
(bad)
(bad)
dec
sbb
jno
xchg
mov
xor
push
dec
call
or
fwait
inc
shl
(bad)
(bad)
call
sub
lea
scas
inc
push
es
push
and
adc
cmp
jne
adc
std
adc
imul
popf
pusha
jmp
in
sbb
mov
sbb
rol
data16
(bad)
(bad)
dec
sahf
pop
leave
sub
cmp
and
adc
stos
push
and
(bad)
(bad)
push
xchg
mov
sub
xchg
lds
xor
aas
dec
outs
dec
push
enter
mov
out
cli
inc
or
push
xchg
sub
call
jno
or
mov
cmps
dec
stos
test
jp
cmc
ss
add
mov
repz
cmc
(bad)
dec
test
pop
and
mov
push
or
fimul
pop
mov
into
push
mov
pop
sti
mov
fadd
or
cmp
aaa
ror
movs
not
outs
(bad)
dec
ins
sbb
adc
repnz
fcomp
jne
cmp
xchg
hlt
pop
std
sbb
xchg
jmp
ret
mov
(bad)
mov
(bad)
xchg
add
(bad)
fistp
fidivr
pop
mov
jp
(bad)
(bad)
call
xchg
jmp
(bad)
leave
pop
xchg
dec
xor
fisttp
xor
xchg
jecxz
or
sub
sub
(bad)
(bad)
call
aas
mov
aad
iret
stos
push
ror
arpl
pop
mov
pop
mov
(bad)
(bad)
(bad)
dec
repnz
inc
xchg
sub
inc
xchg
lahf
mov
pop
sub
inc
adc
(bad)
(bad)
(bad)
call
daa
adc
jno
inc
dec
dec
js
outs
scas
xchg
test
addr16
cmp
sahf
call
mov
sbb
add
inc
out
les
jp
(bad)
xor
(bad)
mov
call
bound
dec
sub
aam
data16
jp
sub
cmp
inc
xchg
gs
(bad)
mov
ror
jge
pop
fild
sbb
cdq
cld
or
jg
cmp
(bad)
(bad)
(bad)
dec
pusha
sahf
cmp
(bad)
repnz
sub
mov
out
xchg
lods
jbe
fwait
cs
scas
out
(bad)
(bad)
jg
clc
mov
enter
scas
and
mov
cmp
cmp
(bad)
(bad)
(bad)
jmp
jg
sbb
jp
adc
add
ds
mov
sbb
movs
mov
call
push
or
xchg
movs
outs
addr16
(bad)
push
in
dec
mov
sbb
(bad)
(bad)
cmp
movs
fidivr
stos
push
movs
jnp
dec
mov
cs
or
and
leave
loopne
jg
jmp
sub
adc
xor
jmp
mov
pop
stos
xchg
adc
(bad)
mov
into
leave
test
adc
sbb
or
push
jmp
(bad)
(bad)
(bad)
call
xchg
je
movs
dec
cmp
add
xor
ror
daa
loopne
mov
xor
dec
out
mov
dec
div
cmp
pop
or
mov
ds
jno
call
cld
mov
mov
cld
pop
hlt
jmp
xchg
jge
sbb
push
and
xchg
cmp
call
movs
pop
jb
adc
mov
(bad)
out
sub
jecxz
imul
imul
fcomp
mov
xor
push
xchg
(bad)
(bad)
cmp
mov
jo
es
lock
inc
adc
sbb
mov
jg
(bad)
jmp
mov
mov
inc
fcomi
(bad)
ficom
pushf
sub
retf
mov
jmp
jno
lods
dec
(bad)
(bad)
(bad)
(bad)
inc
xchg
hlt
leave
jne
jmp
std
inc
ja
shl
or
lock
sub
add
nop
cli
stc
mov
out
call
xchg
pop
(bad)
(bad)
(bad)
dec
jbe
mov
dec
pop
dec
(bad)
out
pop
(bad)
mov
sub
mov
pop
mov
(bad)
(bad)
(bad)
jmp
(bad)
mov
frstpm(287
ja
jge
jp
mov
xchg
and
add
cmps
fs
stos
xchg
sbb
jmp
jbe
jle
in
lahf
pop
(bad)
call
cmp
xor
int
or
jmp
fldcw
call
cli
clc
sub
add
iret
stos
cmp
mov
inc
fsubr
and
jmp
push
xchg
push
or
inc
arpl
cli
and
cmp
sbb
jp
je
retf
out
mov
xchg
(bad)
push
jle
clc
call
rol
cmp
(bad)
(bad)
push
adc
fwait
sbb
push
jle
gs
dec
adc
call
sbb
sbb
push
out
pop
dec
cld
(bad)
fild
sahf
xor
mov
sbb
inc
inc
daa
std
call
mov
xlat
scas
in
sub
js
test
adc
scas
imul
clc
(bad)
(bad)
jg
push
mov
call
out
xchg
int3
aaa
sbb
sbb
xchg
(bad)
(bad)
out
neg
scas
and
xlat
shr
and
mov
dec
mov
(bad)
jmp
pusha
pop
mov
test
pop
jp
dec
cmp
or
shl
cmp
push
cmp
(bad)
hlt
cs
or
imul
(bad)
cs
add
(bad)
inc
push
xor
push
mov
stos
lea
push
mov
inc
pop
jmp
xor
call
lock
mov
xchg
push
test
add
outs
pop
sub
jb
outs
push
mov
adc
jmp
mov
or
mov
mov
loopne
push
jp
(bad)
(bad)
(bad)
jmp
lahf
aam
(bad)
cld
mov
scas
push
sbb
jge
dec
rcl
out
mov
(bad)
(bad)
dec
sub
stos
mov
cmp
jle
adc
cdq
ret
lods
fimul
sub
ins
jo
push
dec
sbb
jmp
cmp
push
pop
stos
cs
test
push
aaa
cli
sahf
mov
xor
icebp
add
stos
in
enter
je
inc
out
or
(bad)
out
xchg
bound
jmp
fsub
cmps
lahf
mov
mov
lods
sbb
or
pop
stc
call
and
cld
inc
sub
cmp
call
test
and
arpl
movs
fnstenv
xchg
fdiv
lock
sub
mov
jg
(bad)
inc
jmp
imul
sub
jg
mov
push
lock
enter
movs
sub
cmp
jmp
call
and
mov
push
imul
mov
call
(bad)
(bad)
push
nop
xchg
and
jg
push
and
in
lds
rcl
mov
out
out
cli
(bad)
jmp
sub
jo
inc
sub
in
test
out
gs
fild
call
(bad)
sub
mov
cmovle
retf
mov
repz
ins
push
xchg
scas
ss
mov
out
pop
sub
retf
fild
popa
xchg
out
dec
jmp
stos
jmp
das
mov
jmp
sbb
out
sub
into
test
shl
sbb
(bad)
jmp
dec
adc
mov
dec
sub
test
scas
mov
jo
mov
push
stc
std
cmp
pop
aad
sub
inc
clc
cmp
mov
mov
idiv
fidivr
jg
out
xchg
push
in
fadd
ret
mov
(bad)
mov
retf
inc
mov
pop
jle
popa
dec
cmps
add
sbb
sub
(bad)
cmc
imul
(bad)
(bad)
push
cmp
fsin
ret
sub
jp
ins
sub
mov
in
push
mov
(bad)
push
dec
push
pop
test
lahf
or
xor
cdq
jmp
sub
(bad)
jmp
cmp
mov
or
jmp
loop
loope
loopne
cwde
stc
out
mov
dec
cmp
rcl
mov
jmp
jl
rcr
mov
mov
or
or
ds
mov
cld
call
repz
stc
loopne
mov
push
add
icebp
xlat
inc
pop
sahf
lahf
jnp
mov
(bad)
(bad)
(bad)
(bad)
call
mov
mov
push
sbb
pop
loop
arpl
xchg
mov
jmp
movs
xchg
mov
out
stc
jp
dec
mov
mov
sar
dec
in
(bad)
(bad)
(bad)
fist
pop
(bad)
loopne
mov
cmps
aad
(bad)
in
and
xchg
out
push
aad
pop
in
pop
fild
retf
jecxz
sub
(bad)
or
xchg
aaa
cmp
sti
test
jmp
fisubr
addr16
jl
lahf
push
retf
in
dec
hlt
adc
dec
fdiv
movs
(bad)
adc
cmp
out
je
call
cwde
lds
cmps
mov
ds
cmp
imul
movs
jne
lods
imul
and
dec
dec
mov
(bad)
cmp
sbb
adc
dec
ja
out
mov
inc
cmps
cmps
cmp
sub
sub
sub
push
sbb
(bad)
cmp
(bad)
xchg
or
add
retf
dec
(bad)
jle
sub
sub
xor
movs
add
jmp
cmp
(bad)
(bad)
(bad)
(bad)
std
or
sub
out
jo
scas
adc
or
sub
cwde
out
fisubr
sub
jmp
dec
cmp
pop
out
fld
ret
repnz
test
test
mov
add
fnstenv
call
push
jo
scas
loop
js
scas
call
xor
outs
sbb
mov
out
dec
imul
(bad)
fidivr
cdq
in
movs
or
cmp
(bad)
inc
or
ror
fwait
xor
es
fst
mov
ror
popf
sbb
add
pop
cld
and
cld
stc
dec
fld
cmp
(bad)
lods
jle
lahf
(bad)
jg
mov
mov
movs
es
jbe
call
imul
vmwrite
adc
inc
cli
repnz
push
sub
mov
test
dec
inc
rol
jnp
in
or
jle
fldenv
arpl
cwde
int3
in
pop
or
mov
cwde
ret
(bad)
(bad)
jp
cmps
out
cwde
loopne
test
das
sar
call
test
jp
fsubr
xlat
(bad)
(bad)
(bad)
inc
aas
pop
inc
loop
out
and
add
adc
pop
imul
call
(bad)
(bad)
(bad)
dec
outs
xor
jmp
sub
movs
cmp
or
dec
loope
cmp
fwait
lahf
in
sbb
clc
jmp
clc
leave
jnp
(bad)
mov
lock
(bad)
(bad)
(bad)
jmp
mov
jbe
mov
pop
stc
and
xor
ja
mov
(bad)
(bad)
jmp
test
mov
test
cmps
mov
jmp
cmp
aas
mov
push
sbb
lock
(bad)
(bad)
(bad)
mov
mov
mov
mov
xchg
mov
ret
sub
pop
(bad)
(bad)
(bad)
(bad)
fidivr
cwde
mov
or
(bad)
out
aam
movs
(bad)
out
daa
cli
fmul
sbb
jae
and
loop
inc
jmp
fxam
fnstcw
lods
shr
jae
or
mov
add
sub
dec
inc
sub
repnz
(bad)
fcomp
ja
call
out
xchg
je
dec
jne
lods
jp
ficomp
sub
sahf
dec
stos
mov
imul
(bad)
mov
pop
hlt
lds
sti
sub
cmp
sbb
into
scas
int
(bad)
(bad)
push
mov
jno
(bad)
gs
inc
loop
mov
add
sub
dec
dec
add
(bad)
(bad)
jmp
mov
std
or
test
out
scas
jp
push
sub
stc
sub
dec
in
jmp
ins
scas
push
leave
mov
stos
in
into
dec
jne
jp
fisubr
(bad)
(bad)
dec
jmp
retf
jp
scas
sbb
adc
int
scas
call
std
fld
adc
and
fsubr
xor
icebp
mov
cmp
xor
(bad)
(bad)
(bad)
mov
mov
pop
imul
(bad)
test
loop
cli
xchg
retf
gs
(bad)
(bad)
dec
and
jmp
ins
adc
iret
iret
adc
dec
dec
push
or
jmp
lds
sbb
sbb
mov
(bad)
js
jnp
cmp
sbb
sbb
sahf
xor
mov
movs
(bad)
jmp
dec
repnz
xchg
pop
out
test
retf
repnz
pop
xchg
jl
pop
in
repz
(bad)
out
cli
movs
pop
and
fwait
sub
jp
out
or
mov
add
(bad)
call
std
mov
xchg
mov
aaa
fcomp
dec
ins
sub
in
hlt
sub
(bad)
(bad)
(bad)
(bad)
cmp
lahf
xor
out
mov
ds
js
jae
xor
jbe
or
push
(bad)
(bad)
(bad)
jmp
xchg
in
xchg
mov
mov
push
test
ss
cs
ins
add
cld
mov
mov
jle
adc
imul
scas
int3
shr
(bad)
(bad)
(bad)
push
test
retf
mov
pushw
mov
ins
sbb
pusha
push
pop
jmp
inc
lahf
mov
aad
call
push
in
mov
push
(bad)
aam
std
(bad)
call
mov
add
sbb
mov
and
sbb
or
ja
cmp
(bad)
push
pop
cmps
push
lea
cmp
cmp
push
dec
std
dec
sbb
cmc
mov
push
mov
push
nop
inc
cld
(bad)
inc
sub
fldenv
out
inc
jmp
sbb
into
sub
(bad)
(bad)
mov
gs
sub
add
mov
nop
mov
(bad)
(bad)
call
(bad)
rcr
cdq
je
repz
cmp
mov
(bad)
jg
jg
mov
das
cli
(bad)
fistp
mov
xor
(bad)
mov
repnz
(bad)
icebp
add
dec
cli
adc
(bad)
(bad)
fbstp
enter
enter
inc
xor
mov
lahf
jmp
mov
mov
das
nop
lock
mov
dec
bound
sbb
cli
cwde
in
es
(bad)
(bad)
push
daa
cdq
and
ret
out
xchg
or
or
add
sub
jmp
and
imul
cmp
mov
cdq
cmp
jp
mov
repz
or
sti
(bad)
(bad)
(bad)
jnp
mov
jp
stos
mov
imul
icebp
ror
aam
cld
mov
cmp
jg
mov
stos
sub
push
outs
icebp
cs
adc
mov
cwde
test
push
mov
outs
sahf
cmps
dec
dec
xchg
or
mov
sti
xor
or
(bad)
inc
sub
adc
sbb
sahf
call
test
cld
jge
popf
jl
(bad)
(bad)
(bad)
inc
dec
mov
mov
rol
adc
and
test
sbb
ret
mov
outs
sar
(bad)
(bad)
(bad)
push
jp
fist
iret
aad
fcom
jp
inc
mov
mov
repnz
cmp
(bad)
inc
call
mov
push
sbb
(bad)
(bad)
inc
sbb
mov
add
xchg
out
jb
ret
test
pop
pop
jb
or
cli
(bad)
(bad)
jmp
in
add
out
mov
fbstp
arpl
pop
(bad)
and
std
aam
mov
repz
mov
pop
std
scas
bound
adc
lock
xlat
mov
lahf
fcom
sbb
xchg
jp
hlt
(bad)
dec
aam
jmp
mov
inc
scas
call
(bad)
(bad)
call
add
mov
cmp
sbb
sbb
mov
nop
ret
sti
cmp
push
cmps
dec
mov
(bad)
scas
(bad)
call
xchg
mov
retf
mov
shl
xchg
adc
outs
adc
call
or
outs
mov
ss
adc
or
(bad)
(bad)
fmulp
xor
mov
aad
pop
hlt
outs
sbb
push
aad
inc
push
cs
jg
scas
fidivr
xchg
das
into
push
cmps
in
hlt
dec
(bad)
xor
in
outs
clc
(bad)
jmp
aaa
jmp
out
or
les
ins
sbb
jmp
call
hlt
test
mov
push
push
ror
mov
ja
imul
aaa
jg
call
mov
imul
or
movs
cdq
test
fs
(bad)
call
pminub
test
jle
outs
cmps
(bad)
not
in
xchg
ins
or
scas
(bad)
(bad)
(bad)
jmp
mov
and
sub
ret
xor
cmp
js
daa
inc
clc
dec
lock
in
and
inc
scas
pushf
sub
inc
test
loop
and
(bad)
(bad)
std
push
pop
jmp
das
fidivr
pushf
stos
imul
mov
mov
jmp
test
mov
movs
scas
cmp
pop
jecxz
sbb
test
test
cmp
mov
mov
(bad)
dec
xchg
inc
sub
sbb
xchg
repz
(bad)
movs
dec
ja
cli
jmp
test
jp
sahf
sbb
jb
rol
(bad)
(bad)
(bad)
inc
or
jmp
psubsw
xchg
inc
add
out
xchg
es
mov
and
or
rcl
(bad)
mov
ficom
or
sub
mov
push
xlat
std
and
(bad)
lock
popa
outs
out
cld
leave
stos
xchg
jnp
test
dec
push
sub
push
cli
mov
pop
add
ffreep
jmp
jnp
and
push
imul
ds
mov
pop
mov
mov
pushf
and
mov
movs
out
or
jp
(bad)
mov
sbb
pop
ror
or
dec
pop
stos
and
ret
retf
scas
retf
(bad)
call
(bad)
jo
out
shr
or
std
sbb
jmp
cli
inc
sub
push
mov
xchg
pop
and
div
rcr
adc
adc
fwait
std
(bad)
(bad)
jmp
test
jne
sub
test
fadd
or
ret
(bad)
(bad)
(bad)
mov
jnp
cmps
int
dec
test
mov
loope
aad
ret
dec
movs
(bad)
(bad)
(bad)
(bad)
cmp
mov
cld
mov
retf
jbe
retf
sub
mov
je
adc
scas
sbb
pop
(bad)
(bad)
(bad)
(bad)
call
lods
fcomp
push
js
mov
add
(bad)
call
retf
dec
cwde
call
(bad)
(bad)
jmp
adc
out
mov
cdq
ins
cli
push
inc
mov
in
sub
jge
test
out
mov
cmp
movs
sub
mov
cmp
(bad)
xchg
arpl
retf
mov
mov
push
lea
dec
sub
ins
cdq
ds
outs
cmp
out
and
mov
add
sub
aam
jle
test
add
cmc
(bad)
inc
arpl
xchg
xor
retf
idiv
sub
mov
retf
js
and
in
mov
dec
mov
jle
jg
(bad)
jnp
lods
xchg
(bad)
push
push
(bad)
movs
test
repnz
int
and
mov
sti
ret
(bad)
call
out
ins
sub
outs
dec
add
pop
hlt
jmp
dec
push
pop
dec
adc
jmp
dec
jmp
pop
ret
mov
mov
(bad)
cmp
jle
jmp
lods
sbb
add
cmps
push
jo
clc
push
sbb
mov
(bad)
(bad)
(bad)
cli
addr16
cmc
sbb
push
imul
stos
dec
mov
lock
(bad)
call
push
and
cs
stos
mov
sub
sub
(bad)
(bad)
mov
adc
cmp
call
bound
pop
push
scas
push
retf
(bad)
(bad)
call
fild
dec
(bad)
in
cdq
movs
bnd
pop
lahf
test
(bad)
(bad)
(bad)
(bad)
jg
retf
and
and
cmp
stc
jl
mov
jmp
pop
sar
call
dec
ins
sbb
movs
jmp
inc
stos
paddd
retf
push
lahf
icebp
js
jg
shl
adc
cld
pop
dec
pop
push
jge
pop
(bad)
call
or
call
enter
inc
xchg
mov
or
outs
hlt
mov
lahf
cmp
sub
xor
cmp
dec
enter
outs
xchg
cmps
cs
movs
cmps
leave
aam
sbb
(bad)
out
in
xor
jbe
cdq
sbb
push
mov
aad
imul
pop
in
fldenv
pop
movs
cwde
je
(bad)
jmp
or
loope
jle
jmp
dec
clc
(bad)
daa
test
mov
loope
mov
jmp
test
stos
(bad)
inc
dec
add
iret
(bad)
clc
arpl
push
out
jle
loopne
mov
push
fbstp
dec
push
std
mov
mov
retf
push
fdiv
mov
adc
(bad)
jmp
imul
xlat
pusha
mov
bound
(bad)
call
add
jmp
push
mov
shl
test
stc
(bad)
(bad)
(bad)
jmp
and
(bad)
cmps
call
ret
out
xchg
sahf
jmp
add
(bad)
(bad)
(bad)
call
enter
mov
sub
xchg
(bad)
mov
cwde
sbb
dec
loop
mov
xor
(bad)
call
adc
xchg
jb
mov
jb
pusha
push
gs
movs
or
sbb
scas
cli
push
cmps
sbb
lods
mov
imul
push
xchg
test
call
inc
clc
push
or
adc
push
or
(bad)
(bad)
(bad)
(bad)
dec
jno
rcr
ja
pop
(bad)
int3
mov
iret
mov
mov
jbe
movs
jg
(bad)
jmp
mov
push
push
sub
jno
add
in
sti
(bad)
(bad)
(bad)
(bad)
mov
call
sub
sub
mov
into
outs
add
cmps
out
xchg
(bad)
(bad)
(bad)
frstor
dec
(bad)
(bad)
jle
fbstp
icebp
push
fwait
fwait
sub
mov
mov
add
ds
sar
dec
lock
jge
scas
lds
fdiv
loop
xor
icebp
ret
adc
jg
push
jae
aaa
jg
scas
mov
dec
clc
(bad)
jmp
imul
call
jae
shl
inc
push
pop
call
mov
ins
mov
xchg
out
mov
inc
xchg
sub
cmp
scas
das
int
dec
lods
outs
add
add
jo
jmp
push
push
call
es
mov
(bad)
push
mov
pop
jb
sub
sub
mov
add
jecxz
fsubr
inc
ret
push
stos
movs
dec
add
push
lods
add
inc
mov
sub
mov
(bad)
(bad)
(bad)
dec
mov
and
inc
mov
cmp
mov
xor
dec
(bad)
mov
mov
loop
(bad)
(bad)
(bad)
inc
dec
sahf
xor
mov
xchg
scas
pop
mov
or
sub
jb
adc
cmp
(bad)
(bad)
(bad)
jmp
ds
retf
test
mov
push
test
push
pop
mov
test
sbb
lock
(bad)
mov
in
(bad)
aas
cli
push
loop
cmps
pushf
cmps
outs
xor
rcl
sar
std
or
cs
push
sub
dec
jg
movs
sbb
push
(bad)
(bad)
jmp
adc
adc
xor
inc
or
test
(bad)
(bad)
call
dec
and
cmp
jecxz
mov
test
or
jbe
jl
dec
(bad)
dec
movs
or
mov
and
addr16
sti
jmp
(bad)
inc
inc
dec
sub
ins
inc
popa
cdq
repnz
xor
scas
mov
(bad)
(bad)
(bad)
mov
daa
xor
leave
imul
jmp
push
pop
xchg
bound
sub
stos
inc
lock
imul
sub
push
(bad)
jmp
scas
and
arpl
mov
xchg
mov
out
sbb
xor
mov
jecxz
add
cs
dec
mov
jno
fsubrp
push
mov
mov
movs
fdiv
sub
hlt
mov
xchg
xchg
xchg
fisubr
or
fadd
mov
fsubrp
fmul
cmp
hlt
jle
pushf
lea
push
stos
sbb
stos
xor
add
outs
and
imul
les
mov
mov
stos
out
outs
xchg
sub
fisubr
jle
outs
adc
shl
push
push
mov
inc
sbb
sub
fisttp
ror
sub
(bad)
(bad)
(bad)
cmp
out
dec
sub
leave
push
mov
ds
mov
lock
mov
(bad)
(bad)
(bad)
(bad)
aas
jne
mov
and
stos
mov
mov
mov
mov
pop
retf
xor
mov
bound
(bad)
(bad)
(bad)
push
and
pushf
cmp
test
adc
add
jnp
cmp
sti
pop
(bad)
dec
push
scas
arpl
je
arpl
mov
adc
push
arpl
(bad)
(bad)
(bad)
jmp
inc
push
sbb
mov
xor
jge
mov
call
into
adc
outs
sti
xchg
std
pop
test
pop
mov
adc
jmp
mov
fisub
mov
aad
jmp
fcomip
dec
cmps
mov
sub
lock
jle
sub
shl
jle
stos
mov
jmp
test
(bad)
(bad)
(bad)
(bad)
jmp
ret
(bad)
scas
inc
adc
xchg
(bad)
push
in
jmp
mov
push
dec
call
lods
cmp
mov
mov
das
add
sbb
cmp
(bad)
call
sti
imul
push
pop
aad
mov
outs
enter
pop
pop
(bad)
dec
cmp
xlat
fstp
mov
or
mov
jmp
jmp
cmp
push
loopne
stos
jbe
ret
scas
mov
jbe
loop
je
(bad)
dec
add
mov
(bad)
cli
retf
fisub
sti
sub
jle
jmp
mov
inc
mov
(bad)
dec
xchg
or
mov
mov
icebp
push
out
mov
stc
je
mov
and
adc
cld
adc
adc
pop
cmp
in
cmp
mov
sub
pop
js
mov
out
loope
pop
push
add
sub
or
jmp
pop
scas
fstp
cmp
rol
into
test
push
or
mov
(bad)
(bad)
mov
or
es
push
jl
xchg
xchg
in
jmp
outs
jo
(bad)
(bad)
(bad)
jmp
fbstp
cld
mov
jecxz
cli
jae
lock
sub
cmps
sbb
sahf
or
add
cmp
(bad)
(bad)
inc
idiv
je
(bad)
cld
xor
sbb
add
xchg
test
(bad)
(bad)
jmp
(bad)
mov
das
call
movs
cwde
adc
jno
cmps
fidiv
call
in
loopne
mov
sbb
loope
add
int3
pop
xor
jo
push
enter
(bad)
(bad)
dec
pop
movs
scas
pusha
add
ficomp
mov
clc
xchg
ins
lods
pop
stc
scas
loopne
retf
mov
(bad)
jg
cmc
pop
movs
mov
xchg
lock
xchg
inc
push
adc
or
jg
dec
cmp
es
inc
sbb
les
inc
or
(bad)
(bad)
(bad)
push
xchg
call
int3
fidiv
mov
sub
sub
cmp
cld
jg
ins
inc
cmp
test
fadd
jo
enter
call
mov
cmp
hlt
fimul
mov
mov
fild
adc
(bad)
xchg
and
push
(bad)
(bad)
push
or
js
jnp
popf
jno
call
aam
fwait
aaa
sub
aam
sub
jo
xchg
lahf
mov
mov
dec
je
test
mov
xor
ins
push
or
jmp
dec
sbb
sbb
dec
fld
cdq
mov
push
loopne
(bad)
(bad)
pop
aam
push
in
retf
cwde
mov
inc
fdivr
jmp
int
pop
into
push
sub
(bad)
in
and
sbb
out
sub
push
ds
stc
das
push
and
(bad)
jmp
test
sub
stos
xor
in
mov
fwait
mov
pop
mov
xchg
mov
push
lea
es
fcom
dec
push
xor
mov
(bad)
es
xchg
sbb
mov
mov
test
mov
mov
ins
pop
sbb
in
mov
and
xchg
fcmovu
int
push
dec
call
mov
pop
mov
push
sar
jmp
test
shr
xor
shl
call
add
and
retf
jmp
and
jae
sub
dec
jg
push
imul
and
ins
imul
adc
mov
jp
push
outs
pop
xlat
jp
mov
test
push
lahf
add
pop
shl
stc
push
pop
out
mov
sti
stos
push
shld
xor
mov
fiadd
imul
jl
out
and
mov
mov
dec
cmps
fcmovne
movs
pop
push
inc
mov
dec
mov
sbb
cmp
movs
add
sub
jg
(bad)
push
cmps
push
mov
ja
inc
inc
pop
xlat
leave
adc
push
movs
mov
jle
jmp
sub
jmp
jl
imul
loopne
ret
sbb
inc
outs
jmp
or
sub
sbb
(bad)
push
sub
push
retf
mov
mul
(bad)
fisub
mov
mov
sti
sub
mov
call
stos
imul
jmp
call
iret
cdq
pop
cs
imul
cmp
test
es
iret
(bad)
(bad)
(bad)
push
xlat
sbb
push
(bad)
pop
dec
mov
icebp
mov
add
mov
push
jg
outs
(bad)
call
loopne
repnz
xchg
push
leave
pop
loope
retf
cmp
or
jmp
sub
call
je
or
aad
jb
(bad)
(bad)
(bad)
in
popa
movs
or
movs
cmp
push
and
test
xor
sbb
out
xor
(bad)
(bad)
inc
jmp
call
sbb
jnp
pushf
fs
dec
and
(bad)
out
mov
ins
stc
mov
fwait
loope
push
jno
sbb
adc
in
neg
cmc
add
xchg
retf
and
pop
or
(bad)
jmp
jmp
or
sbb
fisttp
leave
out
mov
cmps
jmp
xchg
pop
fldenv
pop
out
inc
aas
dec
outs
bound
jb
(bad)
(bad)
jmp
out
ds
stos
jl
pop
stos
xor
lahf
arpl
retf
rcr
dec
lock
out
test
ins
mov
pop
(bad)
push
(bad)
mov
call
sbb
dec
jg
(bad)
inc
mov
mov
leave
lahf
mov
sub
shl
stos
js
movs
(bad)
cmp
arpl
jp
ficomp
call
movs
test
jb
push
jmp
cmp
dec
call
dec
aad
daa
or
adc
inc
dec
sar
(bad)
(bad)
push
stc
sub
and
dec
pop
push
dec
mov
popf
lea
sub
loop
arpl
mov
jmp
sub
push
call
fld
(bad)
(bad)
inc
jbe
call
pop
cdq
outs
pop
xchg
retf
(bad)
icebp
retf
ret
push
imul
pop
and
rcl
inc
mov
mov
mov
neg
inc
iret
jmp
ins
popf
call
lods
cmp
dec
jmp
add
inc
jp
xchg
dec
ins
and
call
retf
inc
movsx
xchg
lods
jmp
xor
(bad)
call
push
xchg
call
cli
scas
dec
sbb
dec
mov
scas
in
adc
imul
mov
(bad)
(bad)
push
jbe
inc
dec
and
xchg
pop
call
call
sub
leave
movs
(bad)
movs
push
mov
idiv
jp
call
sbb
jae
lods
shr
xor
dec
mov
ret
sub
pop
(bad)
inc
pop
jbe
push
ds
sbb
sub
pop
cmp
cli
(bad)
(bad)
call
jecxz
sbb
das
or
dec
test
ins
call
(bad)
(bad)
(bad)
out
and
mov
mov
dec
fdivr
retf
inc
int3
adc
inc
aaa
pop
mov
(bad)
out
repz
pop
lods
jmp
pop
jb
adc
daa
sub
cmps
xor
idiv
inc
(bad)
(bad)
(bad)
(bad)
aas
lds
jno
push
inc
outs
push
enter
sysenter
sti
jo
xchg
sub
push
pop
neg
jle
or
pop
jl
jno
(bad)
cld
lea
in
cmp
ins
cmp
mov
jmp
fs
mov
mov
mov
mov
test
jp
xchg
pop
push
(bad)
(bad)
push
pop
mov
les
jne
movs
test
bswap
add
inc
(bad)
(bad)
(bad)
mov
dec
xor
sbb
cmc
pop
mov
xchg
out
sub
mov
(bad)
push
mov
call
inc
test
(bad)
(bad)
jmp
popa
cdq
test
int
mov
push
xchg
push
mov
mov
push
mov
cmp
(bad)
(bad)
mov
sti
lds
scas
inc
sub
sbb
xor
dec
imul
(bad)
push
pop
scas
adc
mov
scas
and
xchg
rcr
pop
pushf
mov
pop
mov
daa
pop
pop
(bad)
fidiv
xor
jmp
mov
scas
stos
sub
push
cwde
popf
aad
(bad)
(bad)
call
cdq
mov
popa
(bad)
and
(bad)
retf
hlt
jb
jnp
ret
or
mov
test
jnp
je
push
add
cmp
(bad)
(bad)
fbld
push
(bad)
xor
dec
hlt
push
or
sti
sbb
inc
lds
outs
(bad)
(bad)
sub
sbb
imul
dec
mov
mov
inc
mov
test
(bad)
(bad)
jmp
adc
xchg
into
outs
add
xchg
or
clc
test
push
int3
(bad)
std
(bad)
(bad)
jmp
movs
scas
cmps
fisub
fwait
retf
dec
test
sub
and
scas
ins
cmp
dec
pop
add
pop
ins
jns
jp
movs
pop
cdq
dec
cdq
push
inc
sbb
(bad)
(bad)
call
mov
mov
movs
test
loope
repnz
ins
dec
dec
pop
retf
fild
scas
sub
xchg
sbb
dec
(bad)
ret
push
in
sbb
sub
jmp
(bad)
jmp
mov
cdq
repz
cmps
xchg
loop
sub
mov
mov
xor
or
push
adc
mov
or
out
adc
(bad)
(bad)
inc
inc
fmulp
sub
pop
ds
pop
daa
imul
cmp
or
mov
mov
pop
add
and
loop
fidivr
lods
jmp
out
std
push
dec
aaa
jg
les
loop
cmps
(bad)
(bad)
dec
stos
outs
lds
xor
add
dec
inc
loopne
push
(bad)
(bad)
(bad)
call
cli
ret
xchg
mov
mov
push
fwait
and
lock
dec
sub
ja
(bad)
(bad)
jmp
cmps
mov
cli
outs
loope
push
int3
ja
fistp
mov
fstp
js
dec
imul
fcomip
(bad)
fbstp
(bad)
mov
inc
loop
dec
test
and
(bad)
(bad)
(bad)
call
adc
cmc
mov
pop
loop
mov
xor
mov
out
inc
xchg
push
mov
sar
(bad)
(bad)
jmp
aad
dec
cmp
cld
jo
jns
icebp
xor
jae
hlt
and
ins
(bad)
(bad)
(bad)
jmp
fwait
dec
dec
lock
xchg
in
test
push
shr
test
mov
cmp
jmp
jmp
or
lods
cmps
mov
jmp
inc
cmp
stos
mov
cmc
mul
or
jle
rcl
mov
xchg
pop
xor
mov
jmp
cli
repnz
sti
jb
loopne
mov
in
ds
jmp
push
fisub
jmp
pushf
data16
inc
xchg
(bad)
jmp
fadd
adc
test
xchg
dec
push
and
aam
(bad)
(bad)
jg
dec
stos
inc
mov
pop
adc
in
jns
in
and
mov
scas
add
push
in
scas
sbb
lds
mov
popf
(bad)
mov
inc
call
nop
mov
or
mov
or
inc
movs
(bad)
pop
push
vpmadcsswd
(bad)
gs
mov
shr
mov
jg
xor
test
push
dec
(bad)
(bad)
(bad)
jg
inc
stos
movs
stos
aas
add
mov
pop
loopne
cmp
sbb
fldenv
xchg
adc
cld
(bad)
(bad)
jmp
sbb
lahf
stc
ret
cs
sub
(bad)
ins
fwait
pop
push
(bad)
call
xlat
out
pop
ds
cdq
xchg
call
loop
dec
(bad)
jg
mov
push
mov
xchg
xchg
pop
adc
jmp
(bad)
(bad)
dec
dec
test
in
mov
jns
sub
dec
stos
cmp
fild
(bad)
mov
(bad)
ficomp
xor
aad
mov
fwait
(bad)
(bad)
sbb
add
fsubr
push
jge
(bad)
call
sub
addr16
les
repz
or
cs
(bad)
jmp
das
and
inc
sub
jmp
add
dec
in
call
sbb
test
mov
sbb
cmp
(bad)
dec
sub
push
xor
sub
retf
out
mov
xchg
cmp
jno
(bad)
inc
shr
mov
mov
cmp
inc
xchg
sbb
sar
call
shr
outs
or
or
xor
shr
test
(bad)
(bad)
(bad)
jg
pop
mov
push
enter
cdq
pop
jne
loop
test
xchg
into
jmp
das
xchg
stos
xor
lods
jmp
ret
lods
sub
jbe
jb
(bad)
dec
sub
aad
(bad)
mov
lods
imul
sbb
jmp
adc
div
loop
pop
js
cdq
sbb
inc
pop
(bad)
(bad)
mov
fisttp
call
loopne
addr16
cmps
sub
into
jmp
lock
inc
jbe
mov
fwait
sub
(bad)
(bad)
call
call
shl
ret
sub
addr16
mov
cmps
pop
xchg
call
sub
push
xchg
and
stos
cli
scas
lahf
dec
movs
or
hlt
or
jmp
scas
mov
(bad)
(bad)
(bad)
dec
adc
in
aam
pop
jmp
scas
clc
sbb
push
aaa
mov
add
imul
(bad)
(bad)
cmp
and
sbb
adc
xlat
mov
sbb
(bad)
(bad)
call
jmp
xlat
adc
xchg
sbb
std
mov
clc
dec
mov
inc
loop
lods
popf
(bad)
jmp
pop
sbb
scas
iret
lods
retf
out
push
fxch
dec
adc
mov
(bad)
(bad)
cmp
fcmovu
and
fldz
sbb
retf
jle
mov
or
xchg
test
mov
jge
loope
xor
cmp
sti
cli
(bad)
(bad)
jmp
pop
lock
ret
inc
jmp
fcomip
out
mov
sub
mov
add
pop
aam
pop
push
iret
jmp
scas
push
(bad)
(bad)
dec
fucomip
imul
push
in
cli
lods
and
aas
retf
enter
add
mov
test
(bad)
(bad)
(bad)
dec
sbb
and
sbb
imul
loop
retf
mov
jo
loope
fs
(bad)
(bad)
(bad)
cmps
(bad)
cdq
and
call
movs
jg
mov
lahf
push
jmp
mov
mov
(bad)
(bad)
(bad)
dec
mov
retf
loopne
scas
mov
push
mov
cwde
in
sbb
(bad)
(bad)
push
adc
xor
stos
pop
push
scas
xor
or
adc
(bad)
in
(bad)
dec
mov
daa
sbb
mov
shl
xlat
mov
sub
push
mov
outs
pushf
(bad)
(bad)
(bad)
dec
aaa
mov
sbb
pop
retf
jecxz
in
std
pop
push
in
in
add
xor
sbb
push
sub
fcmovu
sbb
mov
or
(bad)
(bad)
call
hlt
jne
rol
jae
mov
in
mov
or
pop
(bad)
(bad)
(bad)
jmp
xchg
stos
pop
mov
cmp
mov
retf
dec
or
mov
sbb
adc
(bad)
(bad)
jmp
(bad)
jecxz
daa
fld
xor
sar
mov
call
mov
stos
add
mov
fldenv
dec
xchg
xchg
leave
loopne
jae
pop
dec
mov
jl
push
pop
cdq
(bad)
(bad)
call
dec
jge
scas
pop
movs
cmp
jle
or
lods
dec
cmp
xchg
pop
mov
icebp
pop
push
mov
sbb
or
aad
call
cmps
(bad)
movs
push
(bad)
(bad)
fcomip
sub
adc
sbb
(bad)
out
in
pop
dec
sbb
mov
mov
jns
outs
dec
lds
push
(bad)
mov
dec
xchg
mov
fimul
(bad)
call
in
mov
sbb
ins
out
xchg
pop
sub
cmps
push
push
popa
mov
jmp
mov
ins
int
stos
mov
mov
lods
call
push
scas
icebp
fdiv
aas
jecxz
or
(bad)
fcomip
outs
cli
pop
push
aad
pop
shl
mov
sbb
dec
jb
retf
and
ret
pop
adc
fwait
in
cld
test
dec
mov
pminub
imul
xor
cmc
test
mov
(bad)
jmp
out
xchg
iret
jecxz
push
shl
mov
or
(bad)
mov
les
sub
jne
dec
dec
in
retf
push
(bad)
(bad)
(bad)
js
cmp
fwait
push
and
add
xor
xchg
fwait
lahf
and
repnz
push
std
inc
sbb
outs
rcr
push
ds
stos
xchg
mov
xchg
cli
(bad)
fbstp
mov
inc
add
mov
push
repz
or
push
pop
(bad)
(bad)
inc
stos
jmp
loope
cmp
xlat
std
push
fcmovnu
(bad)
lock
and
clc
(bad)
jns
popa
cmp
iret
out
(bad)
push
sbb
dec
jp
mov
das
mov
jmp
push
pop
xchg
sub
lahf
jb
adc
hlt
(bad)
(bad)
jmp
test
and
in
daa
cmp
lds
sbb
mov
(bad)
jg
mov
mov
loope
call
sahf
pop
aas
sub
cli
aas
(bad)
(bad)
(bad)
call
scas
repz
xor
xchg
test
fild
mov
inc
jg
(bad)
push
push
push
in
bound
fidivr
scas
outs
jge
mov
stos
mov
(bad)
(bad)
call
push
xor
pop
scas
cmp
mov
sub
stc
pushf
or
dec
loope
lahf
pushf
arpl
(bad)
push
and
mov
sub
mov
cdq
(bad)
push
sub
std
or
(bad)
push
out
retf
mov
lahf
outs
jecxz
shl
sbb
cmps
(bad)
lods
sbb
and
aaa
dec
retf
loopne
sbb
fwait
mov
jo
js
jl
(bad)
(bad)
(bad)
(bad)
jnp
clc
pop
lock
jmp
xor
pop
call
xchg
and
stos
dec
cmc
pop
mov
pop
(bad)
(bad)
(bad)
dec
jb
or
jnp
retf
into
jnp
and
(bad)
mov
sbb
icebp
sti
pop
pop
mov
(bad)
ja
pop
jo
call
jge
and
nop
mov
scas
(bad)
(bad)
(bad)
call
and
hlt
scas
lods
popa
test
jmp
jnp
mov
push
jecxz
(bad)
jg
lahf
cmp
sub
fisubr
pop
mov
std
cdq
and
das
jb
inc
cld
mov
ret
push
sbb
or
mov
das
ins
jmp
(bad)
(bad)
dec
aaa
and
std
push
pop
mov
mov
popa
out
mov
shl
xchg
xchg
(bad)
(bad)
(bad)
jmp
cs
ret
jge
aas
sub
add
pop
in
aad
popf
mov
pop
mov
clc
(bad)
(bad)
inc
mov
cmps
add
pop
pop
loope
sahf
cmps
pop
cs
iret
pop
add
clc
(bad)
push
or
jge
sub
inc
call
and
fs
(bad)
fsubrp
dec
sti
dec
pop
push
int3
stos
pop
adc
sbb
(bad)
jmp
scas
sbb
ins
adc
jae
push
es
jmp
sar
xor
cmc
sub
jmp
cmps
cmp
out
lods
xchg
jnp
out
cmp
(bad)
(bad)
call
pop
cmp
add
dec
std
xor
jmp
sub
pop
cld
fisttp
leave
push
std
push
cmp
(bad)
mov
jmp
push
add
call
ins
in
out
jb
cwde
xchg
data16
rcr
call
jp
xchg
(bad)
push
fsubr
inc
cld
jmp
mov
jo
js
sbb
fild
cmp
fbld
mov
(bad)
(bad)
(bad)
push
mov
dec
xchg
inc
movs
into
rep
sbb
push
adc
dec
push
mov
fwait
ret
(bad)
(bad)
jmp
test
and
aas
sub
jl
cli
mov
lea
inc
mov
mov
push
xchg
push
movs
mov
stos
jnp
or
xor
aaa
push
push
hlt
mov
xchg
jecxz
push
(bad)
imul
cmp
pop
or
das
rcr
push
pushf
fidiv
push
or
jl
xchg
loopne
(bad)
call
adc
add
jo
xchg
movs
mov
adc
xchg
iret
or
jmp
(bad)
(bad)
fbld
bound
sbb
mov
sub
mov
xchg
mov
lds
xchg
les
mov
dec
or
lods
push
sub
out
retf
mov
scas
js
sub
dec
adc
adc
or
stos
push
stc
iret
out
clc
push
ins
jp
mov
jecxz
cmps
cvtpi2ps
cld
(bad)
(bad)
(bad)
mov
nop
call
sub
cs
pop
xchg
scas
mov
cmp
pop
cld
call
adc
jnp
mov
bound
xchg
loop
rcr
(bad)
(bad)
push
arpl
daa
fninit
add
push
bound
outs
inc
fld
jmp
cwde
test
sub
int
inc
call
mov
cmps
outs
xor
fs
call
(bad)
jmp
movs
sub
mov
xor
fs
enter
sub
mov
dec
sbb
pop
loopne
movs
ds
leave
ret
cmps
lock
mov
pushf
scas
sbb
jb
push
mov
mov
mov
xchg
push
mov
or
ret
xchg
pop
cld
shl
repnz
scas
outs
in
fld
sar
aaa
cld
jmp
xor
ss
xor
mov
retf
pop
imul
(bad)
(bad)
(bad)
push
ins
inc
or
or
push
in
pop
xor
(bad)
out
mov
push
push
shl
pop
dec
add
fisttp
scas
clc
add
icebp
mov
outs
lods
(bad)
(bad)
(bad)
jmp
jb
mov
popa
adc
push
loopne
xchg
push
out
test
xchg
pop
call
dec
fwait
mov
push
or
pusha
and
pop
or
call
jg
int3
sub
pusha
pop
mov
jg
dec
push
mov
cmp
loope
xor
xchg
dec
fdiv
pop
lock
scas
push
(bad)
std
dec
in
bnd
add
inc
test
cmp
adc
jo
fisubr
pminsw
xchg
add
enter
inc
fidiv
(bad)
frstor
jne
xchg
(bad)
ins
test
shl
imul
nop
sbb
nop
and
repz
call
cmp
lea
inc
(bad)
(bad)
call
adc
lea
xchg
in
inc
adc
ins
cmp
add
cli
inc
cmps
(bad)
(bad)
jg
xchg
test
pop
fwait
push
mov
movs
in
inc
loope
lods
lods
sahf
addr16
call
or
aas
jmp
dec
mov
test
(bad)
(bad)
call
das
mov
iret
scas
(bad)
push
jns
mov
retf
fisttp
inc
mov
pop
sub
ret
(bad)
(bad)
jmp
shl
pop
mov
daa
sbb
xlat
dec
add
dec
add
scas
or
dec
scas
fistp
(bad)
je
emms
and
push
mov
sub
clc
(bad)
dec
into
retf
dec
dec
sub
xor
movs
pop
add
(bad)
jmp
in
cdq
sbb
pop
sahf
sub
into
xchg
imul
stos
adc
push
push
fist
cwde
sub
popf
pushf
inc
(bad)
mov
xchg
repnz
enter
call
bound
dec
or
cli
mov
sub
shl
pop
mov
sub
(bad)
jg
outs
jmp
xor
push
fcomp
rcr
or
fadd
scas
push
out
(bad)
fdivrp
(bad)
(bad)
jmp
iret
sbb
xchg
lds
ret
pop
outs
es
mov
inc
cmp
pop
or
repnz
(bad)
(bad)
(bad)
std
jp
loop
xchg
outs
jno
lods
aad
mov
xchg
sbb
es
out
and
(bad)
jmp
jmp
adc
ins
dec
jmp
lods
imul
jb
mov
inc
xchg
adc
xor
pop
sub
jecxz
into
mov
push
call
(bad)
sbb
(bad)
fisttp
xchg
mov
call
movs
lods
(bad)
retf
pop
test
push
std
mov
(bad)
inc
and
push
pop
aas
test
dec
mov
and
mov
in
ret
(bad)
(bad)
inc
imul
xchg
cdq
cmps
and
lock
jns
pop
ins
mov
fdivrp
(bad)
(bad)
jmp
gs
cs
out
push
pop
jmp
or
into
push
stc
in
(bad)
adc
mov
jl
xor
call
inc
mov
push
jmp
jb
push
leave
add
lods
mov
jmp
outs
xor
dec
cli
fbstp
xor
mov
xor
ret
mov
loope
and
test
or
pushf
out
outs
out
addr16
(bad)
retf
fbstp
scas
cmps
sub
cwde
cwde
add
fcos
(bad)
(bad)
call
dec
stos
sahf
stc
(bad)
test
lods
jl
and
sar
push
and
sbb
(bad)
(bad)
push
pusha
jbe
cmp
inc
imul
imul
xor
into
shr
(bad)
push
or
cmp
or
pop
cli
ins
jb
gs
std
stos
inc
lds
imul
sbb
(bad)
(bad)
(bad)
mov
(bad)
jmp
imul
(bad)
jmp
clc
jmp
jo
(bad)
(bad)
jmp
imul
sub
xchg
loop
(bad)
cli
pop
sub
leave
jmp
pusha
mov
(bad)
call
cs
mov
xchg
je
push
xor
stc
sbb
pop
push
das
push
jae
add
mov
lock
push
lods
retf
and
push
idiv
cmp
(bad)
jg
icebp
mov
js
imul
mov
cmp
ins
hlt
or
xchg
or
scas
adc
test
arpl
shl
(bad)
jg
cmp
jb
mov
int3
cli
(bad)
dec
and
xchg
xchg
outs
jmp
aam
sahf
loopne
inc
mov
call
(bad)
(bad)
jmp
aaa
and
(bad)
pop
mov
dec
adc
mov
iret
pop
lahf
lock
xchg
std
sti
(bad)
(bad)
(bad)
(bad)
ficomp
iret
pop
sub
out
and
lods
push
aas
pop
imul
ret
stos
fmul
push
loop
lods
call
in
call
sbb
dec
shr
and
test
shl
mov
xchg
enter
(bad)
jp
add
fistp
sbb
(bad)
dec
cld
call
inc
call
cdq
cmps
pop
shl
jg
mov
sub
push
loopne
mov
sub
test
cmp
mov
(bad)
xchg
jmp
inc
xchg
adc
push
ds
jge
(bad)
(bad)
(bad)
jmp
ds
push
retf
mov
xor
ja
mov
mov
sar
(bad)
(bad)
aas
out
ins
outs
fbstp
inc
sbb
lods
adc
push
mov
lea
jmp
ret
and
loope
lahf
jmp
test
cmps
(bad)
nop
(bad)
(bad)
mov
stos
les
sti
or
cli
sub
clc
ret
sahf
sub
(bad)
cvtps2pd
push
jbe
mov
stc
xor
sar
xchg
lods
xlat
stos
lods
pusha
aaa
(bad)
(bad)
(bad)
(bad)
dec
ret
(bad)
jecxz
sbb
movs
xchg
ins
(bad)
loope
mov
jnp
or
(bad)
(bad)
(bad)
call
ret
mov
rol
dec
in
pop
int3
mov
pop
leave
sub
adc
mov
(bad)
(bad)
(bad)
jmp
jecxz
es
jmp
test
fsubr
retf
icebp
pushf
stc
xchg
pushf
fisub
scas
sbb
(bad)
inc
int3
xchg
or
sub
mov
movs
pop
sub
scas
inc
mov
(bad)
(bad)
(bad)
jmp
fwait
adc
or
dec
stos
test
push
mov
xchg
arpl
(bad)
(bad)
jmp
xchg
(bad)
jp
jmp
outs
mov
imul
mov
ret
test
(bad)
sub
hlt
mov
loop
pop
std
(bad)
jmp
xchg
lds
mov
out
(bad)
sbb
(bad)
and
(bad)
and
sub
dec
arpl
dec
stos
or
stc
mov
imul
js
xchg
dec
jg
xchg
and
add
inc
jmp
add
pop
mov
ins
ins
or
addr16
stos
(bad)
(bad)
push
out
sub
icebp
mov
sub
movs
mov
mov
inc
mov
pusha
and
xor
jle
jp
mov
cli
(bad)
(bad)
(bad)
jg
xchg
add
and
mov
movs
mov
jge
and
xchg
scas
or
call
std
aad
and
fwait
mul
push
fwait
xchg
inc
es
ret
cmps
cmp
call
dec
(bad)
(bad)
(bad)
jmp
fwait
xchg
jmp
fwait
adc
rcl
push
ja
dec
aas
(bad)
(bad)
(bad)
call
sbb
imul
clc
fwait
xchg
jg
out
sbb
popf
rol
ins
jns
data16
push
or
call
lds
push
add
jmp
clc
call
jb
scas
(bad)
jmp
mul
xor
cmps
test
and
jmp
jmp
xor
push
cwde
(bad)
mov
sti
jp
cwde
push
hlt
sahf
nop
scas
into
mov
(bad)
(bad)
(bad)
mov
retf
push
cwde
outs
dec
xchg
lahf
and
ds
and
mov
pusha
enter
push
ss
test
ror
mov
enter
xor
enter
iret
push
call
retf
push
scas
lock
movs
stos
in
push
jmp
cmp
cmp
hlt
sub
es
scas
(bad)
xor
or
sbb
loope
sub
xor
sbb
iret
js
out
push
jmp
push
sub
pushf
(bad)
(bad)
(bad)
push
movs
sub
push
sbb
push
push
mov
push
mov
inc
sbb
fcomip
(bad)
dec
pop
test
call
jp
call
ins
pop
or
jns
in
xlat
(bad)
(bad)
jmp
xlat
push
push
(bad)
stos
rcl
fwait
mov
sub
leave
mov
sbb
jle
(bad)
outs
sub
daa
test
iret
mov
sbb
jo
jmp
sahf
scas
jge
inc
mov
add
(bad)
jg
lods
mov
int
dec
fwait
cmps
add
(bad)
(bad)
dec
nop
outs
ins
in
sbb
pusha
cmp
mov
push
xlat
cs
retf
xchg
(bad)
dec
ss
xchg
retf
stos
lahf
pop
test
in
dec
repz
fisubr
call
dec
cmp
mov
scas
mov
dec
dec
es
call
std
mov
in
and
cmp
stos
(bad)
clc
fsubr
scas
mov
enter
add
(bad)
(bad)
(bad)
cmp
test
mov
push
cmps
ror
sub
test
add
mov
idiv
(bad)
(bad)
call
sub
(bad)
out
pop
mov
cs
jne
adc
inc
in
pop
call
mov
fwait
stos
push
pop
or
out
aas
inc
aas
sub
cmp
(bad)
(bad)
inc
fucomi
or
(bad)
fwait
and
cli
dec
sub
sub
repz
pop
add
(bad)
jmp
fadd
stos
add
xor
inc
test
jp
dec
mov
(bad)
(bad)
inc
int3
dec
xchg
xchg
movs
and
or
xor
(bad)
xlat
pushf
adc
dec
call
loop
popf
dec
dec
enter
sti
into
xchg
call
adc
jmp
push
sbb
rcr
loop
mov
int3
jmp
mov
shl
fiadd
pop
xchg
jecxz
out
scas
sbb
lods
es
(bad)
(bad)
(bad)
call
and
jp
test
xor
loopne
fwait
arpl
mov
inc
(bad)
cwde
cmp
dec
cs
icebp
imul
inc
(bad)
call
(bad)
push
push
xchg
push
xchg
ss
int3
iret
mov
out
sub
mov
cli
jle
(bad)
jmp
add
lods
mov
cmp
leave
mov
sbb
cs
dec
cmp
sub
mov
cmp
sbb
mov
sbb
fwait
inc
std
xor
push
mov
scas
ins
lods
mov
jns
pop
cli
call
fiadd
xchg
clc
sbb
cmp
push
std
(bad)
(bad)
(bad)
cmp
rcl
les
lods
mov
adc
aam
pusha
mov
adc
push
mov
fsubr
repnz
dec
nop
push
push
pop
xchg
mov
das
and
push
sub
jmp
sti
mov
(bad)
das
inc
loopne
inc
pop
mov
sar
(bad)
dec
call
xchg
add
add
mov
retf
out
(bad)
push
ds
aam
iret
push
dec
call
fwait
push
mov
(bad)
call
inc
jmp
call
push
dec
jmp
push
test
(bad)
inc
jg
xlat
mov
out
shr
cs
stos
push
test
mov
fwait
push
xor
cmps
xor
test
mov
pop
pop
mov
ret
xor
sbb
sub
inc
xchg
stos
imul
inc
xchg
iret
jne
fwait
push
adc
push
adc
(bad)
std
jne
sub
cmp
fwait
loopne
inc
sbb
cs
cld
xchg
sbb
dec
fcmove
adc
xchg
rcr
call
(bad)
(bad)
(bad)
call
mov
add
icebp
je
ds
fs
sbb
sbb
iret
test
sbb
pushf
dec
dec
mov
inc
push
out
(bad)
fild
clc
imul
stos
pop
fwait
popa
xor
push
adc
push
(bad)
inc
jb
(bad)
sub
mov
mov
icebp
scas
(bad)
cmp
adc
aad
out
(bad)
arpl
xor
sbb
dec
adc
sahf
xchg
dec
lock
mov
(bad)
jmp
adc
mov
mov
push
or
xchg
adc
popa
cmp
mov
push
lock
push
adc
bound
bound
scas
clc
(bad)
(bad)
(bad)
(bad)
std
and
add
into
ja
scas
into
int
daa
inc
or
lea
add
(bad)
(bad)
jg
or
jns
sbb
data16
dec
xchg
adc
xlat
or
into
out
mov
add
mov
lods
cmps
mov
and
xchg
dec
call
pop
mov
out
cmps
das
sub
cmc
mov
xchg
xchg
icebp
stos
(bad)
dec
lock
mov
stos
inc
mov
loop
dec
fwait
int
jmp
aam
sbb
loop
les
out
ins
les
sub
lds
push
(bad)
mov
mov
xchg
or
shl
sub
das
inc
js
sbb
test
push
lods
jmp
call
loopne
test
mov
xchg
push
(bad)
call
rcl
stc
mov
mov
sbb
mov
ins
mov
sar
sbb
jb
jp
outs
xchg
mov
mov
adc
(bad)
jmp
adc
mov
or
ret
or
lods
mov
data16
(bad)
(bad)
call
push
xor
pop
das
push
or
push
dec
and
jmp
fcom
pop
aaa
cld
(bad)
jmp
dec
dec
pop
push
arpl
mov
in
mov
cli
mov
test
hlt
(bad)
(bad)
call
cmps
sub
scas
or
shr
ret
mov
cwde
xchg
mov
cmps
xor
fadd
pop
stos
mov
bound
stos
mov
fisub
cld
sub
scas
sar
dec
out
daa
movs
cld
xchg
std
cmp
or
dec
iret
retf
jecxz
pop
add
push
ret
add
mov
repnz
or
lahf
xchg
mov
(bad)
cmp
les
sbb
xchg
mov
mov
js
call
ret
(bad)
jmp
push
leave
pushf
pop
inc
imul
aam
mov
fistp
retf
pop
sub
(bad)
(bad)
call
jp
mov
stos
iret
scas
adc
cmps
mov
gs
ja
push
cld
das
scas
sbb
outs
sub
sub
xchg
mov
sub
iret
mov
jecxz
bswap
lahf
iret
stos
push
pop
js
mov
cld
push
fadd
inc
fisttp
call
(bad)
(bad)
call
push
add
rcr
xchg
loop
and
fs
outs
lods
or
stos
int
in
xchg
mov
dec
pop
out
add
out
in
call
mov
xor
aaa
data16
pop
cmps
sub
stos
ror
mov
dec
mov
sbb
jmp
call
sub
fwait
sub
sub
daa
je
sar
jg
add
js
jmp
mov
test
std
(bad)
(bad)
(bad)
jmp
rol
out
scas
sub
lods
or
jle
bound
mov
add
mov
ins
imul
mov
loopne
mov
lahf
scas
out
or
(bad)
cmp
jnp
stc
sub
xor
mov
je
int3
push
jmp
std
sahf
mov
mov
das
sahf
jb
mov
xchg
mov
rol
adc
in
jne
call
(bad)
dec
test
mov
jg
push
test
scas
mov
loop
(bad)
in
or
mov
pop
xchg
xlat
outs
(bad)
(bad)
jg
sub
lock
or
es
push
scas
cld
pop
(bad)
clc
outs
cmp
jnp
(bad)
dec
(bad)
popf
sar
fld
inc
(bad)
dec
lods
cwde
or
sar
jg
test
push
push
mov
mov
sub
push
(bad)
out
test
nop
sub
sbb
mul
or
ins
jmp
sbb
adc
(bad)
jmp
cli
pop
int3
adc
addr16
mov
loop
outs
or
(bad)
(bad)
call
lds
sub
leave
add
add
pop
outs
pushf
loop
or
adc
inc
mov
fs
xor
cs
xor
lods
popa
pusha
popa
mov
in
cmp
sub
mov
fld
and
push
push
pop
inc
jl
mov
push
cmp
jne
popa
bound
sti
push
(bad)
(bad)
(bad)
dec
shl
out
adc
xor
fs
mov
adc
pop
cmps
(bad)
xor
(bad)
(bad)
jmp
lahf
lods
ret
mov
pop
std
jp
jnp
sbb
dec
ins
jmp
inc
cli
add
push
jp
ret
push
inc
cli
(bad)
inc
fisubr
in
sbb
lahf
bnd
or
scas
shrd
(bad)
jmp
xor
cmp
adc
pop
imul
jge
movs
xor
sar
jmp
dec
sub
out
ins
pop
dec
ss
fneni(8087
dec
mov
add
adc
outs
sar
out
or
mov
mov
call
in
mov
idiv
jp
sub
ret
loop
dec
xchg
mov
push
out
retf
fcom
mov
scas
push
iret
pop
xchg
or
inc
sub
adc
call
scas
std
(bad)
sub
cmp
sbb
or
mov
loop
stos
idiv
pop
or
jnp
jg
call
data16
dec
and
mov
or
mov
(bad)
fcomip
jmp
out
mov
aas
lods
inc
or
mov
imul
(bad)
jmp
stos
xor
pop
dec
ss
popf
sti
fucomi
out
ret
sbb
(bad)
(bad)
(bad)
jmp
ins
loope
inc
dec
jl
cmp
jns
mov
loope
mov
into
or
(bad)
(bad)
jmp
jne
mov
sbb
outs
xlat
inc
loope
iret
sub
(bad)
pop
stos
arpl
addr16
test
(bad)
(bad)
(bad)
push
lahf
jns
mov
dec
fldcw
sub
adc
scas
xchg
call
clc
shl
das
cmp
mov
or
cmps
jp
mov
mov
call
(bad)
xchg
mov
(bad)
(bad)
(bad)
(bad)
mov
sub
cs
mov
cdq
in
int
adc
pop
out
(bad)
test
ja
dec
cmc
xchg
ret
call
add
popa
clc
call
ret
or
test
jno
jmp
fstp
shl
into
cli
std
mov
mov
(bad)
(bad)
inc
addr16
enter
and
mov
xor
mov
call
ds
mov
shl
lods
rcl
mov
and
test
and
adc
shrd
retf
repnz
(bad)
jg
(bad)
call
sbb
mov
push
mov
cmp
fdivr
dec
test
sub
push
(bad)
xchg
cs
mov
mov
dec
iret
and
scas
outs
clc
(bad)
inc
movs
inc
out
mov
arpl
(bad)
es
mov
daa
in
iret
sub
mov
cmps
les
(bad)
in
mov
test
pop
call
mov
lods
pop
or
jmp
cmp
jmp
pusha
(bad)
(bad)
(bad)
push
inc
or
cmps
sub
jbe
pop
out
cmp
mov
clc
inc
sub
push
dec
sub
ret
and
xchg
pop
cmp
sbb
jle
jbe
push
mov
cmps
ss
(bad)
(bad)
push
dec
lahf
lods
repnz
imul
fwait
inc
push
in
call
(bad)
(bad)
cld
sahf
push
push
in
push
jp
mov
test
call
mov
loopne
pop
hlt
(bad)
push
por
fdivrp
mov
jmp
xchg
fsub
lods
out
js
dec
test
pop
jmp
xchg
(bad)
jmp
int
stc
cmps
fist
imul
jae
lods
sub
call
sbb
lds
loope
pop
sub
mov
jnp
jmp
mov
xlat
mov
dec
xor
mov
scas
add
jmp
push
sbb
dec
test
in
cmps
xchg
mov
and
ret
push
xchg
or
sahf
scas
fwait
or
jnp
push
mov
cmp
xchg
iret
ss
sahf
call
xor
jg
clc
jle
nop
sub
add
mov
pop
xchg
bound
ds
lods
sbb
(bad)
add
leave
mov
jno
adc
js
pop
ja
jp
jmp
(bad)
jecxz
inc
mov
adc
adc
dec
jl
and
call
jno
gs
popf
lea
sub
(bad)
(bad)
(bad)
dec
stos
ss
popa
pop
sub
inc
or
xor
dec
add
sub
(bad)
(bad)
(bad)
jmp
loop
fadd
mov
sbb
into
mov
mov
cmp
xor
cld
(bad)
(bad)
call
repz
and
int3
mov
push
xor
mov
fiadd
(bad)
call
and
pop
mov
mov
int
push
xor
mov
std
inc
mov
in
jl
fwait
dec
out
stos
fs
mov
(bad)
(bad)
fistp
scas
leave
mov
and
and
or
xor
ins
ds
or
jle
mov
ret
mov
mov
mov
ins
fidivr
and
call
inc
cmp
lahf
js
es
nop
pop
das
pop
(bad)
lock
add
out
call
adc
(bad)
(bad)
dec
call
imul
sub
mov
push
mov
ret
push
fbstp
jmp
sbb
sbb
(bad)
xor
jecxz
loopne
and
call
pop
dec
jmp
cli
cmc
or
ja
aad
call
hlt
dec
pushf
outs
add
gs
fstp
cld
mov
sub
out
outs
das
sti
call
mov
xchg
(bad)
cli
add
les
outs
retf
jmp
das
fimul
iret
lods
dec
imul
push
cmps
lods
test
in
jmp
out
mov
(bad)
(bad)
(bad)
(bad)
cmp
adc
cs
sbb
leave
scas
data16
cli
sub
and
push
repz
cmp
jmp
movs
dec
out
sahf
icebp
inc
scas
push
into
dec
dec
ds
out
cld
ss
scas
jecxz
push
xchg
dec
xchg
mov
pop
outs
dec
rcr
ins
std
dec
clc
xor
(bad)
push
adc
ins
inc
dec
and
(bad)
mov
imul
(bad)
retf
sbb
(bad)
jmp
xchg
pop
mov
inc
fcomp
sub
repnz
push
popf
or
(bad)
(bad)
(bad)
jmp
rol
xchg
ss
scas
movs
jle
js
dec
out
aam
pop
mov
pop
inc
add
add
(bad)
(bad)
call
movs
push
enter
in
loop
rep
mov
cmp
adc
out
imul
rcr
mov
cmps
jp
mov
mov
sbb
cmps
push
mov
(bad)
popw
scas
jle
mov
lahf
jbe
(bad)
push
movs
outs
mov
inc
adc
clc
jns
and
mov
clc
(bad)
fild
jle
xchg
stos
push
movs
inc
sahf
and
mov
dec
push
jmp
push
dec
loop
sbb
cld
iret
mov
dec
pop
cdq
test
repz
ret
sahf
jmp
cmp
ins
cmps
mov
(bad)
fdiv
sti
dec
outs
sub
cs
xchg
and
sub
add
sub
cmp
push
cld
(bad)
call
cmp
lea
and
cmp
imul
cs
cwde
or
jmp
adc
(bad)
(bad)
mov
xchg
mov
dec
xor
sub
sub
out
or
popa
ds
(bad)
(bad)
dec
xchg
imul
cmp
out
int
fldenv
lahf
cmp
pop
cmc
and
imul
scas
pop
lods
test
pusha
jnp
xchg
aam
data16
dec
push
mov
push
jmp
js
stc
sub
push
push
ret
daa
mov
sbb
jp
pop
sbb
in
push
dec
idiv
dec
sbb
sub
nop
stc
ss
mov
imul
push
call
div
test
call
sub
push
scas
loopne
sub
(bad)
(bad)
(bad)
jmp
nop
mov
(bad)
pop
inc
imul
aad
js
lods
push
push
xlat
je
ret
adc
call
iret
mov
cmp
out
fdivr
retf
aad
std
mov
mov
(bad)
js
int3
enter
pushf
dec
jmp
jle
ret
out
inc
jbe
or
stos
sub
sub
jg
mov
(bad)
in
pop
push
es
push
sbb
mov
data16
cdq
add
jl
and
ret
in
call
std
call
jnp
mov
mov
push
call
test
xchg
adc
(bad)
(bad)
(bad)
dec
xchg
stos
fldenv
mov
xchg
(bad)
mov
clc
mov
sub
xchg
dec
repnz
(bad)
(bad)
(bad)
jmp
int3
sub
call
fiadd
retf
outs
dec
push
cwde
nop
pop
mov
pop
push
push
out
xchg
(bad)
(bad)
(bad)
(bad)
cli
xor
and
sbb
cmps
arpl
push
mov
sbb
lds
inc
adc
push
xchg
sub
(bad)
(bad)
jmp
pushf
stc
or
ins
arpl
cs
clc
push
mov
push
imul
mov
fistp
lock
push
cmp
(bad)
(bad)
dec
mov
cmps
outs
loop
adc
adc
out
fs
sahf
imul
jo
xchg
out
outs
mov
sub
mov
mov
(bad)
(bad)
call
or
call
call
cmp
pop
and
mov
xor
ja
sub
jo
push
(bad)
(bad)
(bad)
(bad)
jns
pusha
mov
enter
mov
pop
scas
jmp
mov
pop
dec
pop
scas
(bad)
(bad)
(bad)
(bad)
jl
and
mov
xor
mov
push
retf
loope
push
loop
arpl
push
neg
mov
adc
iret
(bad)
fisttp
jecxz
cdq
mov
pop
cmps
test
aas
out
loopne
xchg
sub
or
jb
(bad)
(bad)
(bad)
push
rol
jecxz
fbld
ins
movs
or
pop
jnp
xor
daa
sub
fldcw
add
push
call
(bad)
retf
mov
in
push
in
leave
lahf
sbb
scas
(bad)
(bad)
(bad)
mov
mov
lock
xor
pop
push
aaa
rcl
sub
pusha
adc
call
dec
cli
jns
je
(bad)
js
rcl
sbb
imul
(bad)
push
mov
loopne
cwde
jb
jb
test
cli
stos
jmp
imul
adc
sub
push
cmp
sbb
jmp
(bad)
(bad)
call
pop
push
and
mov
stos
cmp
std
pop
fnstcw
ja
fbld
je
sbb
hlt
sar
call
call
dec
arpl
stos
pop
adc
scas
dec
xor
cwde
and
(bad)
(bad)
push
cmp
sahf
popa
es
or
inc
or
and
push
leave
or
push
jb
test
xor
stos
mov
daa
sar
(bad)
jg
pop
sub
xor
dec
sbb
imul
xor
sar
ins
push
mov
sub
xchg
cmps
mov
push
jb
(bad)
call
sahf
jp
pushf
jmp
mov
shr
cmp
imul
loop
(bad)
jmp
xor
jmp
add
and
call
adc
fcomip
(bad)
mov
mov
jg
(bad)
cwde
mov
jne
lahf
push
ja
jb
jno
nop
clc
jmp
loop
mov
pop
call
(bad)
(bad)
mov
(bad)
call
or
cmps
or
dec
pop
mov
inc
cld
(bad)
dec
lahf
call
sbb
sar
clc
cli
or
icebp
(bad)
(bad)
(bad)
dec
jecxz
in
sbb
loopne
ret
jns
test
retf
ret
add
sbb
(bad)
(bad)
jmp
std
enter
pop
push
fiadd
xor
mov
jp
iret
iret
jb
xchg
push
dec
push
(bad)
(bad)
(bad)
inc
mov
add
fsub
xchg
pop
ins
loopne
cld
imul
cmp
pusha
lds
jo
enter
fcomp
fild
out
enter
xchg
or
in
out
push
js
int3
(bad)
(bad)
(bad)
(bad)
mov
fidiv
pop
fwait
mov
mov
test
sbb
std
leave
inc
in
add
fs
stos
(bad)
inc
clc
mul
pop
xchg
add
jl
adc
add
pop
cmp
mov
mov
mov
int
(bad)
mov
mov
test
push
cmp
push
pop
in
sahf
loop
(bad)
(bad)
jmp
lods
adc
mov
sub
dec
test
repz
scas
retf
sub
cld
(bad)
dec
js
fidivr
cmps
lds
cs
sbb
mov
(bad)
(bad)
(bad)
jmp
inc
(bad)
in
out
xor
mov
mov
sub
imul
or
lods
sbb
idiv
and
pop
out
ins
mov
mov
test
(bad)
(bad)
jmp
jne
sti
scas
scas
or
mov
xchg
enter
fild
dec
mov
and
mov
dec
sbb
scas
mov
and
cwde
adc
not
shr
(bad)
(bad)
jmp
sbb
ret
sbb
gs
add
fidivr
mov
mov
movs
lock
test
fild
(bad)
(bad)
(bad)
call
cli
test
mov
xchg
test
push
sbb
in
add
sub
(bad)
(bad)
(bad)
(bad)
js
sub
xor
xchg
stc
nop
lods
ds
iret
stc
add
cdq
movs
dec
or
cwde
pop
and
pop
(bad)
(bad)
(bad)
call
pushf
out
lahf
mov
lods
sub
mov
cmp
nop
mov
aaa
std
fsubr
fidivr
call
std
mov
jg
xor
and
or
lods
xchg
dec
rcr
pop
(bad)
mov
cwde
(bad)
sub
push
scas
or
adc
pop
(bad)
(bad)
(bad)
push
sub
mov
jns
jge
jmp
jle
js
mov
fs
popf
dec
push
inc
out
(bad)
in
sahf
call
xlat
jmp
or
mov
(bad)
(bad)
(bad)
dec
sub
dec
fbld
mov
movs
cmp
add
scas
xor
jnp
(bad)
(bad)
(bad)
jmp
call
repnz
jg
test
cli
push
loop
cmp
sar
(bad)
(bad)
(bad)
push
mov
push
das
jmp
stos
repnz
pop
inc
dec
icebp
jae
inc
mov
sub
nop
sub
icebp
je
std
(bad)
inc
rol
pushf
and
std
cmp
loop
ss
(bad)
jmp
sub
dec
mov
mov
sub
neg
(bad)
(bad)
out
clc
sahf
cli
xor
mov
retf
test
in
jbe
sbb
sbb
mov
jmp
cdq
clc
(bad)
ficomp
hlt
or
stos
sbb
scas
clc
mov
jmp
or
pop
iret
jno
cwde
sbb
pusha
xchg
call
icebp
outs
jmp
jle
pusha
das
ret
test
jo
adc
dec
sub
call
idiv
(bad)
(bad)
(bad)
inc
into
ss
dec
out
ror
and
inc
(bad)
xor
and
(bad)
(bad)
(bad)
jmp
(bad)
add
imul
add
iret
(bad)
sub
push
add
into
jmp
sub
out
cli
dec
pop
sub
lods
sub
sbb
fsubr
dec
push
(bad)
(bad)
jmp
idiv
aam
lds
imul
fisttp
lock
jecxz
dec
imul
cmp
mov
ins
fldenv
imul
stos
xchg
(bad)
inc
lock
dec
mov
dec
cli
sbb
xor
inc
(bad)
cs
(bad)
(bad)
(bad)
cli
or
int
and
iret
and
sahf
dec
or
pop
mov
(bad)
and
popf
test
pop
cmp
mov
(bad)
imul
repnz
imul
and
(bad)
(bad)
jg
pop
loopne
xchg
scas
sub
in
or
daa
in
loope
(bad)
fisttp
xor
(bad)
(bad)
(bad)
fild
sbb
call
sbb
mov
mov
mov
stos
clc
minps
(bad)
(bad)
push
xor
push
pop
lahf
bound
in
sub
sar
std
dec
(bad)
push
inc
add
dec
fimul
or
arpl
sub
push
cmp
lock
(bad)
(bad)
(bad)
push
sub
push
mov
jle
push
jg
rol
xor
lods
and
retf
test
sti
jmp
ss
pop
cld
sub
inc
mov
jmp
cld
dec
cmp
mov
out
mov
movs
pop
(bad)
(bad)
(bad)
jmp
pop
call
xchg
retf
in
jmp
call
sbb
shl
stos
(bad)
call
push
mov
xchg
fidiv
cli
mov
cmp
ss
(bad)
push
mov
mov
(bad)
loope
cmps
push
ret
(bad)
pop
mov
icebp
dec
scas
mov
sub
ins
stc
mov
out
in
lds
fs
xchg
scas
call
or
sahf
int3
cdq
(bad)
(bad)
(bad)
(bad)
call
hlt
sahf
sbb
lahf
mov
push
push
test
cs
cmp
xchg
xor
and
jp
add
xor
mov
sahf
bound
mov
jg
xor
pop
sbb
outs
sbb
dec
mov
inc
add
into
sahf
mov
(bad)
jg
movs
iret
call
or
push
and
ret
push
dec
cdq
adc
dec
(bad)
(bad)
(bad)
jmp
enter
into
sbb
ins
mov
(bad)
in
bound
(bad)
push
adc
scas
jns
out
(bad)
(bad)
call
lahf
ss
jns
retf
lods
or
and
fbld
sbb
push
call
xor
jmp
call
call
iret
mov
paddsb
push
lahf
sbb
loopne
inc
enter
cmp
enter
sbb
movs
mov
xchg
mov
adc
or
jmp
daa
in
xchg
push
mov
cmp
sbb
(bad)
(bad)
mov
or
jle
cwde
es
dec
mov
dec
and
fld
std
xchg
and
or
inc
dec
out
sbb
pop
inc
mov
stos
dec
mov
(bad)
jg
push
sub
sub
cs
cmps
fstp
int3
and
dec
inc
jo
repnz
std
(bad)
(bad)
(bad)
(bad)
cli
rcr
scas
movs
sti
xchg
in
mov
(bad)
cmp
xchg
mov
push
mov
jmp
(bad)
jg
(bad)
sbb
std
and
cwde
push
dec
ds
imul
mov
push
mov
call
cs
and
or
xor
ins
jle
or
lea
(bad)
(bad)
in
cmp
or
or
mov
sbb
in
pop
xlat
call
mov
adc
scas
inc
ins
in
in
sbb
(bad)
ins
int
cmps
stc
sbb
cmp
(bad)
jmp
push
shr
mov
sub
jae
lea
es
movs
pop
cwde
(bad)
inc
lahf
jl
in
adc
pop
mov
add
mov
(bad)
(bad)
call
sbb
test
or
shl
mov
sub
push
(bad)
(bad)
dec
adc
mov
mov
or
push
inc
dec
lods
mov
(bad)
dec
dec
das
pop
jmp
scas
movs
push
call
call
leave
data16
(bad)
(bad)
push
inc
in
hlt
mov
fisubr
bound
inc
sti
test
or
(bad)
fisttp
lods
jmp
xor
ss
shl
test
pushf
(bad)
(bad)
(bad)
(bad)
movs
jo
in
jge
mov
sbb
pop
sbb
push
sti
dec
xchg
jecxz
pusha
sti
clc
outs
and
cld
push
out
movs
je
scas
and
mov
dec
and
(bad)
(bad)
inc
lock
sub
jnp
mov
fisub
adc
test
jp
dec
(bad)
call
jb
shl
push
and
sbb
or
imul
xchg
xchg
imul
(bad)
(bad)
jns
(bad)
mov
int
aad
sbb
daa
sub
pop
pop
mov
push
popa
dec
ins
(bad)
(bad)
(bad)
call
or
xchg
push
in
cli
push
fsub
add
stos
mov
adc
bound
mov
imul
daa
push
lods
dec
(bad)
(bad)
push
call
jo
movs
push
dec
ins
xlat
dec
jb
xlat
sbb
sub
(bad)
dec
and
std
cmp
cwde
je
cmp
jmp
imul
stos
lea
frstor
mov
mov
dec
pop
add
test
xor
bound
inc
scas
(bad)
out
pop
mov
mov
mov
sbb
mov
xchg
pop
jle
mov
cwde
ja
mov
cld
xor
or
fadd
(bad)
jle
ret
jmp
pop
scas
(bad)
sbb
add
sub
cld
sbb
jmp
mov
sub
pop
ins
nop
(bad)
call
and
outs
mov
daa
sbb
cs
gs
pop
jp
mov
or
add
je
pop
mov
pop
cld
das
mov
sbb
jmp
dec
pop
out
ror
mov
in
mov
push
cmps
mov
mov
pop
cli
sbb
dec
(bad)
mov
ja
mov
jle
nop
fldcw
adc
fist
(bad)
out
cli
jge
(bad)
(bad)
and
(bad)
sbb
jb
fiadd
(bad)
jg
dec
adc
lahf
or
test
jmp
cdq
xchg
call
mov
test
xchg
inc
aad
stos
mov
xor
call
(bad)
pushf
(bad)
iret
fwait
lods
mov
xchg
(bad)
sti
fisttp
mov
sub
fisttp
jnp
inc
sub
and
mov
push
loopne
push
xchg
ret
push
xchg
and
inc
mov
call
mov
in
sub
out
dec
pop
cmp
inc
stos
mov
push
dec
movs
cmc
pop
inc
sbb
dec
(bad)
jmp
add
inc
ins
mov
inc
sub
pop
sub
(bad)
(bad)
(bad)
push
lods
sub
mov
jb
popa
dec
or
into
dec
cmps
cwde
pop
inc
data16
outs
in
fwait
push
(bad)
(bad)
(bad)
fild
sub
mov
cmp
and
imul
loop
test
(bad)
jmp
stos
fisubr
rol
adc
sbb
inc
enter
dec
jo
mov
mov
add
jmp
pusha
ds
cs
mov
call
sahf
sub
daa
and
mov
jbe
cmp
ret
scas
cmps
outs
movs
(bad)
fild
loop
jbe
mov
lock
cmp
push
mov
inc
cld
cmp
inc
scas
(bad)
jp
dec
adc
call
adc
cmp
leave
mov
sub
fsubr
(bad)
push
inc
push
inc
push
aam
inc
loop
jmp
xor
adc
sub
sbb
(bad)
jmp
mov
push
and
inc
imul
mov
mov
cld
xchg
mov
dec
(bad)
stos
sti
jge
jg
push
cli
sti
jbe
lods
int3
mov
aam
(bad)
(bad)
inc
ror
mov
and
push
dec
mov
stos
fs
gs
(bad)
(bad)
inc
cmp
ja
test
push
cmp
mov
mov
iret
test
lahf
pop
mov
call
sub
or
test
push
shl
or
call
or
cmp
adc
mov
jle
(bad)
jle
inc
sub
pop
(bad)
call
cwde
push
mov
and
jmp
fild
push
lahf
and
dec
clc
mov
xor
jge
cld
push
adc
lock
(bad)
aas
pop
cmc
iret
inc
sub
or
jg
(bad)
lock
dec
or
sbb
(bad)
fild
or
inc
mov
imul
ja
dec
mov
or
in
add
adc
xchg
rol
lods
push
xchg
add
(bad)
call
dec
out
inc
ja
repnz
cmp
in
pop
(bad)
call
sub
mov
scas
or
cmp
sub
adc
mov
ins
mov
(bad)
(bad)
dec
das
jecxz
es
mov
pop
mov
sbb
lahf
out
rcr
adc
push
jg
int3
sbb
jno
push
(bad)
cmp
pushf
xor
pushf
in
dec
std
dec
loopne
sub
repnz
loop
loope
outs
clc
pop
mov
ret
or
pop
ins
cwde
(bad)
mov
shl
gs
cli
(bad)
call
repnz
mov
(bad)
or
movs
mov
jo
es
mov
lods
jmp
sti
pop
test
xor
adc
jne
lahf
push
and
lahf
sbb
lods
cmps
push
jbe
(bad)
fistp
cwde
inc
scas
shr
mov
repz
fdivr
pop
or
dec
sahf
je
inc
dec
jno
adc
xor
(bad)
(bad)
(bad)
call
jnp
mov
cs
fist
jnp
cmp
jl
add
stos
mov
(bad)
(bad)
jmp
cwde
mov
ret
jno
sbb
mov
dec
(bad)
jmp
ss
loopne
xor
(bad)
(bad)
(bad)
jmp
lock
outs
xor
xlat
lahf
pop
ret
adc
sti
dec
xchg
adc
loopne
(bad)
(bad)
call
mov
jmp
xchg
xor
sti
jb
push
lds
rcl
fcmove
mov
add
mov
stos
es
loope
sahf
sti
cwde
xchg
mov
mov
sbb
mov
pop
and
sahf
sbb
or
in
sub
mov
jnp
mov
retf
(bad)
std
jns
mov
(bad)
jmp
jmp
in
call
iret
fisttp
(bad)
jmp
pop
scas
xchg
cmp
jne
(bad)
retf
cdq
pop
cmps
inc
cmp
(bad)
(bad)
(bad)
push
dec
lods
xchg
jo
or
fist
in
sbb
and
clc
sub
jge
xor
imul
or
jmp
inc
mov
fisttp
or
pushf
pop
or
add
pop
and
sub
cs
sub
xor
imul
(bad)
(bad)
(bad)
(bad)
std
into
(bad)
sbb
pop
jmp
xor
mov
lods
sub
stos
arpl
in
cmc
test
jg
inc
scas
pop
mov
mov
jbe
loop
sub
(bad)
and
pop
fcmovnb
inc
mov
and
(bad)
(bad)
(bad)
jmp
dec
stos
push
inc
imul
add
mov
pop
iret
push
xor
add
cmc
push
jecxz
pop
inc
mov
dec
rcl
mov
mov
mov
addr16
mov
push
pushf
repz
jmp
cdq
in
and
jae
mov
cld
dec
(bad)
jg
cld
iret
sbb
mov
stos
inc
(bad)
(bad)
inc
cmp
call
pop
adc
js
jp
(bad)
cmp
lods
(bad)
call
xchg
cld
fdiv
cmp
jl
jns
in
mov
xchg
js
xor
and
sbb
(bad)
(bad)
call
add
dec
call
dec
call
pop
add
stos
iret
imul
sub
(bad)
(bad)
push
(bad)
imul
icebp
xor
xor
mov
and
fnstcw
addr16
mov
(bad)
out
cmp
add
jmp
mov
ret
fistp
sub
sbb
je
add
jbe
xchg
pop
mov
pop
pop
cmps
inc
cmps
fneni(8087
(bad)
(bad)
(bad)
call
loop
push
enter
cmp
dec
mov
lock
adc
pop
mov
pop
(bad)
out
clc
jmp
(bad)
mov
dec
sbb
shr
adc
jnp
dec
push
(bad)
(bad)
(bad)
(bad)
dec
add
in
test
sti
enter
data16
(bad)
lock
cmp
sbb
add
dec
xchg
sbb
adc
add
pop
or
xchg
push
imul
std
dec
sub
sbb
cmps
ds
lods
call
and
into
dec
xchg
sub
mov
daa
and
es
data16
lea
xchg
jae
cld
cmp
int
xchg
(bad)
(bad)
cld
xor
mov
(bad)
jg
add
dec
in
jp
inc
pop
add
and
int3
std
(bad)
(bad)
jmp
cdq
sbb
mov
sub
dec
inc
call
mov
test
mov
sub
(bad)
(bad)
mov
imul
cmp
sub
mov
mov
inc
(bad)
sbb
addr16
mov
ficom
push
pop
dec
fldl2t
xchg
push
cld
jmp
sbb
pop
or
stos
mov
sub
outs
mov
iret
(bad)
(bad)
(bad)
call
mov
pop
sub
cmp
pop
jmp
dec
retf
pop
and
push
(bad)
mov
mov
shl
in
xchg
inc
sbb
scas
clc
jmp
imul
outs
mov
lods
jg
test
(bad)
(bad)
inc
jecxz
loopne
mov
jb
pop
cmp
add
ret
outs
mov
and
pushf
(bad)
cmp
popa
jmp
pushf
push
das
(bad)
push
out
sbb
(bad)
(bad)
out
adc
(bad)
(bad)
rcl
(bad)
retf
scas
stos
xchg
shl
cmp
inc
push
(bad)
rcl
dec
push
push
adc
lods
(bad)
(bad)
(bad)
inc
and
mov
aas
push
mov
lods
sub
mov
cmps
mov
sub
dec
fcos
pop
loopne
or
sbb
dec
push
out
mov
test
retf
stc
sbb
(bad)
(bad)
jmp
mov
fdivr
jmp
push
xchg
outs
sahf
mov
in
test
mov
(bad)
push
outs
bound
mov
(bad)
call
lods
mov
xchg
repnz
push
(bad)
sbb
arpl
pop
lock
pop
xor
jo
pop
das
popf
cmps
(bad)
ds
sti
fbstp
test
sar
sub
push
cli
jecxz
rcl
add
scas
sbb
iret
cld
cmp
ret
das
or
pop
out
stos
or
and
mov
dec
and
ret
jne
xor
and
mov
mov
int
gs
pop
mov
mov
pusha
imul
loopne
fild
imul
adc
cmp
sub
mov
xchg
(bad)
or
mov
mov
mov
clc
(bad)
(bad)
push
les
fsubr
jg
cli
cmp
sub
addr16
jmp
push
add
inc
or
inc
imul
ficom
es
ins
inc
or
or
(bad)
(bad)
(bad)
call
sub
sbb
mov
xor
sub
out
push
fimul
out
add
(bad)
(bad)
pop
or
push
lahf
(bad)
push
clc
enter
mov
sub
aaa
(bad)
(bad)
fbld
shl
sub
test
call
(bad)
(bad)
(bad)
inc
call
dec
and
inc
sub
loopne
mov
sbb
cmp
ins
jg
mov
jmp
cli
mov
jl
inc
scas
movs
mov
pop
jecxz
loop
mov
call
jno
scas
mov
sub
popf
jecxz
fdivrp
or
sub
lea
mov
inc
dec
sub
es
and
jle
and
mov
push
loopne
dec
into
adc
mov
(bad)
inc
mov
mov
mov
scas
pop
pusha
mov
jp
(bad)
call
mov
sbb
xor
es
add
jmp
pop
cmp
add
mov
mov
cdq
call
adc
(bad)
call
cld
mov
retf
js
stos
sub
adc
xlat
xlat
arpl
jmp
cli
adc
jle
int
stos
pushf
xchg
jle
cmp
scas
leave
aas
mul
xchg
or
mov
jmp
je
cmp
in
mov
imul
popa
cs
mov
addr16
call
cli
call
stos
arpl
jmp
jl
sub
add
lods
pop
fisub
mul
xchg
in
push
pop
scas
cli
(bad)
jmp
es
sub
outs
sub
mov
call
(bad)
call
scas
push
jmp
retf
hlt
mov
or
in
(bad)
push
das
xchg
call
mov
in
call
into
sbb
sti
popa
dec
push
or
out
shr
aad
cmp
cmps
sbb
push
test
sahf
mov
ror
push
pop
push
(bad)
jmp
cwde
cdq
stos
mov
cmps
xor
push
(bad)
jmp
jmp
ret
data16
bound
mov
or
adc
jns
mov
(bad)
aas
sbb
cmp
add
cdq
fbstp
or
push
outs
cli
scas
cmps
pop
pop
fnstenv
jmp
mov
(bad)
(bad)
jmp
push
push
cmps
clc
imul
sub
mov
fisubr
mov
retf
(bad)
(bad)
(bad)
(bad)
mov
dec
push
pop
push
pop
(bad)
call
daa
icebp
or
sbb
in
enter
movs
sub
pop
lock
mov
arpl
movs
test
mov
(bad)
fisttp
mov
repz
jnp
fcmovne
in
retf
call
pop
(bad)
(bad)
(bad)
push
enter
xor
mov
loopne
and
pop
mov
call
in
sar
xor
dec
fisubr
xor
pop
retf
dec
cmp
push
or
out
fbld
mov
(bad)
(bad)
jg
pop
mov
sub
fwait
es
mov
and
jb
fidivr
scas
clc
dec
stos
pop
pop
into
bound
cdq
push
das
test
test
jns
pop
jb
and
push
jle
(bad)
(bad)
jmp
pushf
fxch
sub
stos
lea
adc
jecxz
inc
retf
(bad)
loopne
dec
ds
sub
cmp
(bad)
adc
(bad)
(bad)
cmp
or
stos
movs
jl
xchg
dec
scas
sub
pop
dec
xchg
(bad)
out
clc
call
pop
aas
repnz
jnp
jnp
mov
cmp
dec
jmp
popf
stos
nop
and
(bad)
(bad)
(bad)
jmp
je
sub
dec
pop
cmp
ficomp
cmps
xor
retf
mov
xchg
ss
(bad)
(bad)
inc
jle
sbb
sub
sub
ret
lods
sbb
out
push
test
popa
cmp
ds
jbe
xchg
movs
call
cmp
aad
fidiv
shr
pop
lahf
cli
(bad)
(bad)
(bad)
jmp
hlt
jg
sub
mov
sbb
inc
aas
adc
pop
lds
lods
call
pusha
cs
add
fiadd
pop
outs
jge
pop
test
cdq
pop
pop
sub
dec
stos
jge
enter
push
pop
and
stos
jecxz
in
test
xlat
cmp
pop
imul
aam
in
jbe
fidivr
push
fcmove
push
call
test
jge
pop
dec
jg
fld
inc
scas
inc
in
jb
outs
mov
(bad)
(bad)
(bad)
(bad)
mov
pop
fadd
xchg
adc
icebp
mov
jle
scas
fwait
(bad)
cld
(bad)
scas
(bad)
(bad)
(bad)
push
mov
gs
mul
fucomip
cld
sbb
xor
scas
sub
test
stos
mov
(bad)
call
xchg
sub
iret
repz
cli
cmp
rcl
mov
cmp
mov
jg
movs
xchg
ror
pop
(bad)
call
(bad)
(bad)
jmp
ret
pop
pop
xchg
mov
popa
sahf
stc
cld
out
mov
cwde
or
fdivp
fwait
pusha
std
add
daa
cmc
in
push
mov
repnz
ds
push
push
or
fwait
std
cmp
adc
in
addr16
or
or
xor
mov
(bad)
(bad)
jg
cli
fdivp
or
or
call
cmp
movs
(bad)
jmp
sar
jge
adc
adc
test
sti
push
mov
(bad)
(bad)
(bad)
inc
test
and
in
pop
push
enter
imul
sub
jbe
or
xchg
lock
test
mov
(bad)
pushf
mov
mov
fdiv
clc
int
dec
or
sub
adc
jmp
call
or
xchg
fcomip
mov
push
sbb
sub
imul
(bad)
call
fidivr
xchg
xchg
xchg
(bad)
(bad)
fisubr
push
pop
push
sbb
sub
ret
cmp
fcom
mov
(bad)
jg
mov
or
inc
cdq
lock
inc
jnp
or
(bad)
inc
cs
mov
push
dec
(bad)
std
mov
bound
lock
(bad)
call
in
fs
and
cmp
dec
test
adc
jecxz
cli
std
(bad)
(bad)
dec
sub
in
test
ins
push
mov
mov
jbe
nop
cmps
add
aas
outs
mov
dec
sar
fwait
(bad)
enter
dec
push
(bad)
mov
sub
push
adc
loope
jp
lods
mov
mov
push
pop
xor
sub
xchg
adc
stc
pop
paddsw
sbb
mov
out
clc
pop
sub
adc
lods
fs
mov
sub
adc
call
xlat
mov
and
stc
sti
in
(bad)
(bad)
(bad)
fistp
ret
jmp
mov
add
scas
bound
pop
fstp
lods
xchg
mov
(bad)
(bad)
(bad)
dec
xor
cmp
inc
(bad)
xchg
cmp
popf
inc
das
retf
stos
dec
xor
aas
mov
push
(bad)
(bad)
call
pusha
ins
cmp
(bad)
pop
push
loop
cli
mov
loope
mov
(bad)
mov
in
in
nop
outs
jns
push
pop
lahf
and
ret
cld
ret
mov
(bad)
(bad)
aas
loop
or
ins
mul
mov
jb
push
sub
sbb
(bad)
and
jmp
cli
(bad)
jl
inc
not
fistp
mov
xchg
out
test
xchg
ja
dec
(bad)
(bad)
(bad)
(bad)
mov
adc
xor
jo
or
push
push
jnp
or
out
inc
jno
lock
pop
loopne
aas
sbb
(bad)
out
(bad)
cld
and
sub
pop
lock
jg
out
add
cdq
sbb
adc
push
push
psubq
sbb
aad
sar
(bad)
(bad)
inc
jmp
adc
ret
dec
pop
pop
sub
ins
mov
(bad)
(bad)
(bad)
clc
stos
in
mov
xchg
adc
loop
scas
test
add
stos
dec
stos
bnd
adc
(bad)
(bad)
inc
sub
ss
jmp
jl
imul
repz
xchg
mov
fbstp
cmc
(bad)
(bad)
call
mov
arpl
jnp
gs
pop
mov
int3
push
mov
out
mov
mov
mov
outs
bound
out
cli
push
sbb
in
xchg
pop
jae
dec
lods
adc
bound
or
(bad)
jg
mov
sub
push
xchg
bound
xchg
stc
popa
pusha
mov
(bad)
fcomip
call
lea
sbb
jb
int3
in
imul
int
push
icebp
(bad)
(bad)
(bad)
dec
cs
pop
rol
cmc
call
jmp
shr
push
ret
xchg
call
imul
jmp
cld
or
mov
retf
(bad)
in
mov
push
mov
(bad)
(bad)
(bad)
(bad)
cmp
cmp
inc
in
dec
pop
fist
shr
hlt
jmp
or
pop
xchg
sub
mov
pop
dec
push
cdq
outs
movs
stos
pop
pop
cmp
ds
(bad)
(bad)
fistp
or
inc
fistp
push
or
lds
and
icebp
sbb
std
fcmovnbe
jmp
(bad)
(bad)
(bad)
jmp
mov
popf
push
jb
add
dec
aad
(bad)
push
push
outs
loop
xor
push
pop
add
cld
(bad)
inc
loope
mov
push
fld
fs
call
mov
loop
push
call
sbb
vmwrite
mov
mov
or
pop
std
(bad)
dec
jo
nop
dec
mov
jns
jge
pop
mov
jmp
out
retf
(bad)
(bad)
call
sub
pushf
sub
cmp
(bad)
push
mov
sub
jp
pop
lock
cli
dec
les
and
mov
lods
(bad)
(bad)
push
es
retf
inc
fsub
je
dec
xchg
dec
inc
jp
jmp
and
retf
mov
mov
test
mov
and
push
mov
mov
std
or
or
or
out
(bad)
jle
clc
dec
or
xchg
cs
inc
dec
(bad)
(bad)
(bad)
jmp
sub
or
data16
mov
dec
mov
call
mov
sahf
pop
lahf
pop
lods
mov
dec
jl
cld
test
test
(bad)
mov
and
push
push
mov
arpl
(bad)
jmp
mov
xchg
loope
jo
xchg
lods
ins
jmp
das
out
or
cmp
mov
mov
(bad)
(bad)
(bad)
dec
mov
cdq
cmps
fdiv
movs
xlat
mov
and
(bad)
gs
mov
out
call
nop
and
inc
mov
mov
pop
pusha
movs
retf
lock
int
xchg
xchg
or
or
aaa
mov
sub
mov
cmp
dec
mov
sbb
(bad)
(bad)
(bad)
call
or
and
sub
dec
in
xor
mov
ret
lahf
cwde
je
out
pminub
(bad)
(bad)
call
dec
clc
enter
sbb
sub
ret
pop
xchg
mov
mov
in
mov
(bad)
call
stos
push
mov
fldcw
pop
dec
sar
pushf
sbb
push
mov
inc
mov
mov
test
pop
cmp
adc
xor
sar
mov
push
das
ret
sub
mov
stos
push
and
push
stos
jbe
jmp
jp
jmp
dec
mov
inc
cdq
loop
push
test
mov
(bad)
(bad)
push
sbb
mov
loope
mov
adc
xchg
js
js
sar
cmp
jo
xchg
cmps
das
mov
(bad)
jns
out
out
cdq
(bad)
fwait
ror
lods
lock
scas
jbe
jmp
(bad)
jg
test
cmps
iret
fmul
pop
push
test
xchg
je
std
mov
pushf
dec
retf
(bad)
(bad)
(bad)
dec
mov
dec
jmp
inc
test
movs
sub
icebp
add
and
xor
mov
xchg
push
mov
scas
fsub
inc
pop
inc
sub
mov
lods
mov
and
sub
outs
cld
stos
mov
js
xchg
pop
ret
add
or
retf
enter
loopne
aas
push
aad
cmp
jno
xchg
fisubr
or
lea
xchg
cmp
cli
imul
xchg
cmp
retf
mov
mov
inc
cmovle
(bad)
mov
call
mov
sub
rcl
mov
cmp
pusha
pop
pop
push
dec
or
jmp
call
and
clc
cld
mov
dec
fbld
test
xchg
and
or
movs
bound
sub
mov
pop
mov
jmp
sub
inc
inc
pop
cmps
data16
cmp
fs
dec
imul
(bad)
in
jmp
scas
rcr
jae
out
dec
gs
int3
sub
iret
(bad)
out
mov
jmp
add
sbb
jmp
mov
pop
add
xchg
lods
cmp
jmp
ret
inc
dec
adc
test
icebp
mov
pop
popf
pop
loopne
cmp
mov
cs
popa
pusha
cmc
(bad)
(bad)
jmp
fldz
in
mov
sbb
popf
or
cmp
js
and
cld
arpl
loope
xchg
scas
fadd
sub
(bad)
cli
aaa
imul
loope
mov
jmp
scas
jmp
lods
das
mov
xor
xor
cmp
ret
dec
mov
cmp
push
ins
xor
(bad)
(bad)
mov
sub
mov
and
std
sub
inc
ins
jecxz
jp
push
inc
cld
(bad)
cmp
fmulp
jb
pop
mov
mov
cmp
cmp
sbb
(bad)
dec
(bad)
xchg
sbb
and
push
cld
ins
push
out
jmp
mov
loop
jmp
cmps
push
mov
or
dec
jle
xchg
pop
(bad)
fisttp
loope
bound
cli
add
sbb
pop
push
(bad)
(bad)
(bad)
fcomip
jmp
cdq
dec
test
mov
mov
iret
(bad)
(bad)
(bad)
(bad)
jnp
dec
mov
fdiv
mov
dec
pop
sbb
sbb
arpl
pop
scas
push
icebp
(bad)
(bad)
inc
dec
out
lods
adc
bound
push
xchg
mov
movs
cmp
jbe
(bad)
(bad)
call
pop
cs
inc
fdiv
xor
mov
pop
dec
push
imul
jae
lods
sub
and
xor
retf
inc
inc
(bad)
pushf
jmp
pushf
sub
push
push
or
call
jle
pop
xchg
movs
lea
and
(bad)
(bad)
jmp
or
daa
paddq
hlt
push
add
das
push
jp
loop
repz
or
(bad)
call
cld
pusha
cmp
or
imul
sti
js
mov
loop
or
(bad)
jg
dec
or
sub
cmp
stos
pop
mov
cwde
and
nop
xchg
mov
inc
xlat
ins
jnp
jae
jmp
pop
repnz
call
arpl
jno
mov
bound
fst
cmp
(bad)
(bad)
(bad)
mov
add
mov
scas
aad
sbb
dec
frstor
out
je
es
add
(bad)
mov
fbld
scas
lods
fcomp
mov
mul
out
scas
(bad)
jg
add
jo
push
ss
mov
imul
icebp
push
test
(bad)
(bad)
jmp
cmp
jb
out
inc
mov
outs
xchg
sbb
cmp
cld
(bad)
mov
jae
add
xchg
mov
stos
pop
jmp
test
call
loop
hlt
mov
add
mov
cmp
mov
in
or
sub
adc
ficomp
outs
xchg
test
das
dec
pop
push
(bad)
(bad)
(bad)
jg
or
pop
jo
jmp
push
and
stc
mov
mov
adc
scas
clc
adc
jmp
lds
out
jmp
ss
jb
sub
dec
sub
imul
idiv
(bad)
fcomip
retf
dec
ret
mov
jae
or
inc
stc
daa
pop
jo
jb
mov
dec
dec
cs
dec
sub
xor
sub
dec
ret
mov
outs
xor
lea
xchg
sub
and
(bad)
jmp
jp
sub
pop
inc
add
outs
call
sbb
hlt
das
pop
sub
jmp
daa
sti
vmovaps
(bad)
jmp
push
std
iret
shr
cmp
push
dec
iret
mov
mov
jmp
stos
mov
nop
mov
mov
int3
mov
int3
(bad)
sbb
sahf
mov
(bad)
mov
fwait
xchg
xor
mov
push
mov
jp
ins
fsubr
(bad)
(bad)
fild
cmp
mov
xor
mov
fld
imul
inc
mov
push
stos
push
mov
or
stos
inc
mov
(bad)
inc
mov
scas
scas
retf
popa
out
sub
sbb
icebp
cmps
or
fldenv
mov
sub
mov
inc
mov
mov
stos
and
stos
xchg
rol
jo
cmp
(bad)
jmp
arpl
xor
cli
mov
mov
iret
movs
and
into
sub
(bad)
(bad)
(bad)
(bad)
pop
pop
pop
in
mov
iret
sub
outs
es
mov
and
dec
lock
cli
stos
sbb
cld
mov
sub
outs
(bad)
in
mov
fisubr
mov
push
lods
stos
stos
sub
xchg
cmps
test
jmp
in
xchg
jmp
mov
mov
fisubr
scas
fcom
xlat
test
repz
mov
std
push
leave
enter
ret
call
or
in
or
(bad)
(bad)
push
mov
es
out
push
fucompp
sub
sub
cli
and
mov
xor
call
adc
mov
sub
pop
jmp
hlt
pop
dec
(bad)
mov
jmp
(bad)
(bad)
jmp
repnz
xchg
dec
push
xor
in
dec
fistp
sti
or
jmp
sar
imul
push
jmp
sub
mov
icebp
dec
jno
pop
jg
and
cmp
(bad)
in
adc
add
std
repz
(bad)
(bad)
(bad)
(bad)
shr
or
pop
sub
scas
push
daa
sub
sbb
sub
pop
xor
mov
jmp
(bad)
jmp
repnz
pop
outs
outs
cwde
in
lock
aaa
out
aas
ins
pusha
int3
leave
aam
and
js
and
and
popa
push
pop
jecxz
aad
and
cli
(bad)
mov
int
(bad)
(bad)
(bad)
fucomi
cmp
cmp
lods
ins
mov
mov
xlat
mov
sub
mov
sub
cwde
mov
(bad)
(bad)
jmp
dec
xor
adc
cld
cli
sbb
nop
mov
fistp
shr
test
(bad)
(bad)
call
mov
jmp
adc
aas
adc
mov
es
(bad)
dec
push
pop
scas
es
push
jmp
mov
das
shl
mov
sub
lock
retf
mov
sub
icebp
jmp
cs
xchg
mov
mov
add
add
adc
fist
sbb
adc
mov
lock
mov
mov
jmp
mov
arpl
mov
mov
(bad)
inc
test
rol
stos
stos
(bad)
mov
jp
call
(bad)
mov
test
jp
and
pop
clc
mov
jo
das
mov
inc
xchg
mov
dec
test
mov
(bad)
(bad)
(bad)
call
push
xchg
mov
mov
in
movs
mov
or
push
mov
fisttp
(bad)
(bad)
(bad)
push
loop
shl
lahf
shr
cld
push
scas
fidiv
jo
mov
ret
add
mov
aas
enter
mov
inc
xor
in
lods
dec
mov
cld
mov
dec
(bad)
jle
inc
fnstenv
in
mov
stos
je
cmp
out
cmp
jg
test
sbb
cmp
gs
bound
push
test
cwde
(bad)
(bad)
jmp
std
sbb
retf
test
addr16
or
js
dec
mov
add
int
je
(bad)
(bad)
(bad)
dec
ficom
mov
mov
mov
lds
bnd
(bad)
jg
xor
out
mov
xchg
adc
sub
cld
mov
pop
inc
push
aaa
xor
mov
das
dec
das
add
and
call
lahf
jb
enter
call
or
push
mov
xor
lea
mov
(bad)
jg
(bad)
popf
xor
dec
daa
add
push
movs
das
pop
push
je
and
mov
(bad)
(bad)
out
sbb
scas
outs
scas
std
add
sub
xor
xor
cdq
xor
(bad)
(bad)
jmp
push
adc
addr16
cmp
mov
jmp
xchg
adc
lods
inc
cli
add
push
sub
xor
icebp
xchg
(bad)
in
add
in
(bad)
mov
jecxz
jmp
in
(bad)
jmp
sub
scas
(bad)
or
and
stos
aam
dec
(bad)
(bad)
(bad)
in
jmp
dec
jecxz
xor
cmp
cmp
add
inc
mov
inc
pop
mov
mov
pop
mov
lea
nop
cli
jmp
std
jmp
xchg
add
daa
mov
(bad)
(bad)
(bad)
jmp
cmp
pop
push
cmps
fist
push
(bad)
add
dec
rcl
dec
sbb
scas
xlat
(bad)
(bad)
call
enter
and
test
mov
mov
rol
movs
or
cmp
call
int3
or
xor
push
inc
xchg
in
fwait
pop
test
fsubr
adc
int
pop
test
mov
dec
jbe
(bad)
(bad)
(bad)
inc
sbb
and
jmp
and
jb
hlt
cli
xor
icebp
ja
aas
out
push
pop
int3
lods
pop
fidivr
pop
repnz
cmps
push
inc
cmps
(bad)
(bad)
(bad)
(bad)
js
jmp
jl
call
cs
int
icebp
add
retf
rcr
cmp
cld
(bad)
(bad)
jmp
retf
call
pop
ins
call
cmps
inc
ret
push
xor
(bad)
inc
shl
fist
test
jmp
test
or
add
sub
sub
das
(bad)
cmp
and
retf
std
(bad)
fcomip
inc
adc
outs
bound
jle
pop
call
mov
in
jp
pop
cld
aaa
adc
mov
or
xchg
or
lods
(bad)
call
adc
sub
fwait
mov
jbe
mov
inc
mov
(bad)
call
xchg
xor
cld
cmp
scas
pop
inc
int3
mov
push
sub
pop
loope
(bad)
(bad)
iret
ror
mov
push
push
repnz
lahf
push
imul
(bad)
(bad)
mov
cld
push
das
sbb
jb
adc
mov
adc
xor
ins
or
push
xchg
lods
pushf
out
push
xchg
cmps
(bad)
repnz
stc
mov
loop
or
push
or
or
clc
sub
loopne
jo
xor
std
(bad)
mov
mov
sahf
fstp
ret
sbb
fs
std
mov
inc
data16
dec
mov
mov
sub
jnp
jl
cmp
push
icebp
(bad)
(bad)
jmp
outs
cmc
std
fisttp
adc
sbb
mov
and
inc
mov
(bad)
(bad)
inc
and
fs
or
fcmovu
or
adc
rcr
mov
leave
imul
adc
sahf
aas
sub
sub
(bad)
(bad)
(bad)
dec
loope
xchg
in
jne
or
add
push
sub
mov
in
pop
cmps
or
mov
test
in
lods
jmpw
dec
fs
sub
nop
mov
mov
sar
jns
loop
hlt
int
mov
loopne
(bad)
push
int3
sub
sub
mov
dec
retf
mov
jecxz
push
call
mov
aam
jl
(bad)
popa
pop
div
arpl
mov
mov
ds
mov
hlt
dec
cmp
sbb
mov
call
clc
sbb
scas
cdq
(bad)
js
jmp
(bad)
push
sub
sub
test
icebp
pop
movs
mov
sbb
pushf
frstor
fild
lahf
and
scas
mov
jae
sbb
sub
out
clc
push
cdq
ret
scas
clc
fwait
(bad)
pop
out
or
(bad)
pop
mov
inc
cmps
ss
clc
(bad)
sbb
xchg
sub
add
push
sbb
pop
scas
mov
jae
(bad)
(bad)
call
aas
mov
xchg
test
xchg
mov
enter
xor
fstp
fwait
sub
cwde
pop
xchg
sbb
or
cwde
imul
call
pusha
xchg
xchg
adc
mov
(bad)
cmp
aad
retf
push
xor
adc
fild
inc
(bad)
(bad)
(bad)
jmp
mov
cmp
push
or
cmp
sub
jl
inc
jp
(bad)
(bad)
jmp
(bad)
push
jmp
loope
xchg
sbb
fcmovb
lods
ja
(bad)
rcr
ds
cmp
test
(bad)
(bad)
(bad)
jmp
jmp
icebp
arpl
pop
or
pop
cmp
sbb
jecxz
cmps
or
inc
cld
inc
jmp
adc
xor
cmps
fsub
imul
jmp
mov
sub
cmp
and
push
arpl
shr
arpl
imul
xor
cmc
mov
sub
into
imul
sbb
gs
or
push
js
(bad)
sbb
cmp
loope
data16
mov
pop
xchg
xlat
xor
mov
int
call
sub
xor
mov
idiv
loope
stos
mov
es
jmp
mov
(bad)
in
pop
or
cmp
call
rcr
dec
cs
std
(bad)
(bad)
dec
jmp
xchg
mov
jmp
mov
(bad)
call
rol
cmp
retf
inc
loope
mov
lahf
loope
dec
dec
xor
lock
sbb
push
mov
retf
lock
dec
mov
xlat
dec
repz
push
cdq
adc
daa
dec
mov
je
adc
jg
or
pop
pusha
sbb
xchg
or
pop
into
(bad)
or
add
push
or
clc
(bad)
jmp
popa
push
or
jmp
fld
outs
sbb
or
scas
scas
sub
std
mov
pop
cmp
call
fcomip
jmp
iret
adc
cmc
dec
or
and
loop
xor
sbb
mov
sbb
mov
mov
sbb
or
(bad)
stos
in
cmp
imul
and
fwait
lahf
das
ja
sub
mov
push
ins
ja
mov
(bad)
(bad)
call
cmp
pop
or
loopne
stc
or
test
(bad)
arpl
dec
mov
jmp
clc
nop
sub
mov
(bad)
stos
test
inc
push
sub
loop
xchg
call
jmp
sub
xchg
mov
imul
(bad)
or
lods
or
or
(bad)
(bad)
mov
in
(bad)
sub
mov
mov
jmp
push
pop
mov
das
sar
mov
sub
out
call
dec
call
cld
mov
int
scas
dec
mov
(bad)
and
shl
and
movs
mov
(bad)
(bad)
fnstenv
sub
lds
bound
sub
out
in
jmp
push
ins
cmp
cli
mov
or
mov
lahf
xchg
cmps
fbstp
mov
jbe
mov
xchg
(bad)
stos
loopne
sub
in
cwde
mov
(bad)
(bad)
cmp
(bad)
cmps
imul
cdq
xor
es
xchg
mov
stos
xor
or
call
(bad)
in
stos
nop
repz
pushf
mov
push
ja
sub
hlt
mov
or
cwde
xlat
(bad)
(bad)
(bad)
dec
stos
mov
sbb
sbb
or
xor
dec
jmp
movs
cmp
xor
jmp
scas
mov
jmp
mov
cdq
jnp
scas
pop
retf
jmp
push
mov
sbb
pop
imul
(bad)
jmp
in
fistp
into
dec
dec
es
fldcw
sahf
sbb
ficomp
inc
mov
pop
out
push
in
sub
test
clc
sub
jmp
stos
mov
(bad)
(bad)
dec
xor
cmps
js
jb
test
(bad)
adc
xchg
adc
add
fwait
stos
jb
xor
int
(bad)
pop
push
enter
push
inc
jno
mov
hlt
xor
(bad)
(bad)
call
push
dec
add
(bad)
xlat
enter
iret
popa
pop
add
dec
(bad)
mov
mov
jmp
push
das
cmps
mov
in
adc
(bad)
dec
inc
mov
pop
push
add
movs
es
(bad)
data16
addr16
sahf
pop
jmp
xor
in
dec
out
rcl
fstp
repz
fdiv
xchg
mov
sub
movs
or
inc
(bad)
push
mov
lock
xchg
or
mov
mov
(bad)
jg
in
pop
or
out
sub
xchg
in
sub
pop
adc
adc
sub
xchg
or
jbe
(bad)
(bad)
inc
(bad)
or
retf
jns
cmp
loope
pop
ss
js
cs
popf
push
cld
or
hlt
rcr
lock
(bad)
call
sbb
mov
cwde
jp
mov
stos
or
pop
out
es
or
cmp
lods
push
(bad)
(bad)
out
mov
mov
test
mov
xlat
and
mov
scas
xchg
sub
stos
cld
stos
fdivp
push
movs
jle
movs
aaa
pop
pusha
ds
mov
push
ss
jns
sahf
jne
imul
(bad)
fiadd
mov
push
mov
(bad)
(bad)
dec
jmp
mov
call
sbb
ficomp
push
stos
mov
mov
call
(bad)
call
sbb
je
leave
xchg
or
dec
pop
mov
rcr
pop
cmc
das
clc
cmp
ss
in
call
mov
ret
(bad)
(bad)
(bad)
(bad)
fsubr
jecxz
inc
inc
mov
push
outs
lods
call
call
(bad)
in
(bad)
(bad)
(bad)
(bad)
mov
das
ins
mov
stos
mov
movs
sub
stos
inc
sub
dec
mov
(bad)
ds
fdivr
fbstp
ins
ins
mov
or
repnz
pop
or
call
inc
in
mov
or
and
leave
test
scas
lock
(bad)
jmp
iret
das
clc
inc
stos
xchg
hlt
sub
xor
or
xchg
inc
jmp
adc
add
add
adc
je
mov
pop
dec
loope
mov
mov
rol
mov
xchg
mov
(bad)
(bad)
(bad)
fcomp
es
test
mov
mov
pop
mov
scas
call
pop
sub
pop
cld
(bad)
(bad)
mov
jae
pop
sub
fldcw
je
sub
pop
xchg
dec
in
mov
add
jmp
and
mov
(bad)
dec
sub
sbb
jno
jb
jg
ds
pop
pop
sbb
push
add
scas
inc
jne
loopne
ds
jecxz
stc
mov
(bad)
es
(bad)
(bad)
call
mov
or
test
mov
test
daa
sbb
sub
stc
ret
mov
js
sahf
push
stos
ss
ss
fwait
lea
mov
(bad)
(bad)
jg
mov
pop
dec
xchg
fisub
mov
cmp
scas
bound
(bad)
lods
adc
adc
cld
jmp
or
mov
fidiv
in
sti
pop
inc
pushf
pop
nop
mov
cmp
ja
icebp
jg
mov
(bad)
pop
fcomp
sub
push
pop
pop
repnz
sar
jmp
mov
fidivr
xchg
sbb
push
jb
sbb
dec
xor
mov
push
inc
sahf
nop
pop
inc
push
jne
sbb
pop
scas
adc
(bad)
(bad)
jmp
mov
mov
dec
xchg
mov
lods
adc
xor
iret
ret
adc
jge
popf
test
ret
call
imul
jecxz
pop
push
sbb
push
xchg
sub
movs
mov
add
add
fdivrp
(bad)
mov
mov
stos
sbb
clc
jl
or
sub
es
(bad)
inc
cli
in
pushf
push
nop
dec
cmp
neg
das
(bad)
dec
in
call
pop
(bad)
(bad)
(bad)
push
lds
iret
mov
scas
sti
popa
outs
sub
leave
dec
mov
ret
test
(bad)
mov
inc
loop
(bad)
outs
fstp
push
mov
dec
mov
inc
jb
lock
jb
push
or
ror
(bad)
mov
imul
(bad)
(bad)
(bad)
call
movs
cmps
mov
push
xchg
push
stc
xchg
cmp
pop
push
(bad)
(bad)
(bad)
push
push
pop
adc
(bad)
push
sub
mov
imul
stos
(bad)
(bad)
(bad)
(bad)
push
xchg
pushf
lods
repz
mov
cmp
push
pop
cmp
mov
cld
daa
cmp
aas
xchg
imul
jg
or
loope
dec
in
mov
enter
js
call
(bad)
jmp
ins
adc
xlat
lods
int3
push
sbb
test
cmp
cmp
add
hlt
mov
mov
scas
fwait
sbb
(bad)
(bad)
call
idiv
dec
pop
mov
iret
inc
xor
inc
stos
jle
sub
(bad)
(bad)
(bad)
mov
jb
iret
shl
imul
loope
bound
fcomp
fistp
loop
adc
call
adc
cmps
fucomip
pop
pusha
mov
cdq
mov
sub
mov
(bad)
push
or
dec
mov
sahf
test
ficomp
cwde
mov
push
call
stc
push
sbb
shr
xor
mov
sbb
lock
mov
pop
scas
imul
push
mov
sub
mov
(bad)
(bad)
call
mov
lahf
sbb
into
lods
popa
cwde
hlt
imul
stc
stc
push
daa
xor
test
(bad)
(bad)
fild
outs
cli
dec
add
sub
lahf
cmp
jne
pop
into
sub
fst
call
jo
prefetch
scas
in
loopne
pop
sti
dec
call
xchg
cmp
fild
lds
jmp
ds
mov
das
stos
cmps
pop
xchg
std
jg
call
fisttp
(bad)
cli
retf
int
outs
mov
enter
push
int
pop
mov
sub
in
mov
and
das
shr
fidivr
(bad)
enter
fst
mov
add
mov
dec
cli
sub
in
or
stos
or
scas
xor
scas
sar
(bad)
(bad)
call
fistp
push
xchg
scas
pop
rcl
cmp
stos
mov
sbb
jmp
fnstenv
sti
push
fidiv
pop
call
dec
sub
loop
adc
add
fcomip
(bad)
jmp
cmp
pop
sub
sbb
push
adc
(bad)
cmp
leave
jns
ins
(bad)
cmp
sub
jle
icebp
jmp
dec
or
outs
ds
pop
and
push
cmps
test
xchg
adc
and
outs
add
xor
push
je
out
stos
dec
sub
bnd
pushf
scas
es
sub
xchg
dec
mov
xchg
inc
jmp
retf
addr16
cmp
jbe
nop
in
pop
mov
(bad)
(bad)
jmp
or
push
jg
call
pop
jmp
pop
lods
or
sbb
xlat
cwde
aaa
mov
call
jp
das
mov
dec
sahf
inc
push
and
add
(bad)
inc
sbb
push
mov
xchg
or
dec
sub
push
jl
jge
dec
out
cld
fld
iret
dec
adc
fdivr
(bad)
jmp
jmp
cli
jae
mov
jmp
out
adc
(bad)
jmp
mov
daa
adc
stos
hlt
movs
imul
jg
shl
jae
test
(bad)
push
scas
stos
dec
je
jns
into
sub
iret
push
xlat
cmp
out
fsubr
mov
pop
lock
outs
(bad)
push
sbb
shl
pop
out
jp
xor
mov
rcl
mov
mov
mov
mov
cmp
push
dec
push
(bad)
(bad)
(bad)
push
leave
cdq
shl
jae
cwde
sub
xchg
lea
xchg
rep
mov
call
or
std
(bad)
jmp
outs
mov
(bad)
aam
mov
imul
cmp
mov
jb
inc
call
into
test
loopne
add
mov
lods
push
push
jb
push
mov
sbb
dec
inc
adc
push
(bad)
sti
fcmovnu
adc
push
enter
or
call
retf
stc
sbb
adc
adc
retf
xchg
fcomip
xchg
ds
mov
(bad)
jmp
clc
retf
xchg
mov
adc
mov
mov
imul
dec
(bad)
(bad)
call
in
in
std
fstp
mov
cmp
mov
pop
cmp
(bad)
inc
mov
mov
int3
or
jecxz
xchg
mov
retf
in
(bad)
addr16
call
cli
sub
in
std
enter
mov
sbb
call
jmp
in
fs
in
or
add
call
cmp
or
xor
(bad)
(bad)
(bad)
call
adc
loopne
mov
jecxz
and
inc
cmp
add
in
out
int3
mov
test
mov
lar
mov
jle
jne
ds
dec
mov
pop
dec
jmp
dec
mov
push
retf
js
jae
mov
push
(bad)
(bad)
(bad)
(bad)
mov
sub
push
push
or
fwait
cli
adc
add
mov
sbb
sbb
(bad)
(bad)
jmp
sbb
xor
lods
xchg
jae
and
add
test
(bad)
mov
(bad)
(bad)
cmp
mov
retf
inc
xchg
out
mov
(bad)
cdq
xchg
pop
sub
adc
sar
(bad)
cmp
popf
test
xor
mov
mov
(bad)
(bad)
jg
je
(bad)
aas
adc
(bad)
je
test
ficom
and
ds
int3
xor
retf
(bad)
push
out
cmp
shr
jmp
jae
push
sub
imul
(bad)
(bad)
jmp
sub
mov
push
in
pushf
scas
mov
ins
mov
cs
imul
fwait
push
sub
(bad)
jl
(bad)
call
mov
dec
push
clc
jl
rcl
mov
push
mov
dec
dec
add
sbb
sbb
mov
(bad)
push
jns
lock
mov
xor
lahf
add
ucomiss
in
push
loope
pop
mov
out
cli
pop
sub
inc
jnp
and
xchg
out
(bad)
(bad)
(bad)
inc
add
lahf
push
gs
push
xchg
mov
clc
test
fwait
arpl
stos
(bad)
(bad)
(bad)
inc
inc
stos
imul
int
jecxz
dec
dec
jmp
push
mov
test
call
aaa
std
(bad)
call
jmp
mov
aaa
mov
in
imul
(bad)
(bad)
inc
loop
push
mov
push
mov
adc
adc
call
push
fistp
jle
repnz
pusha
adc
mov
mov
fistp
ds
mov
cli
popa
mov
pop
outs
pop
les
call
les
jmp
mov
ret
ret
mov
push
jp
test
sub
and
fbld
xor
cs
or
xor
aaa
xchg
outs
call
out
loop
enter
clc
enter
adc
outs
push
and
cmp
fild
fdiv
movs
cs
jmp
mov
lods
push
retf
jnp
jmp
mov
inc
into
inc
mov
adc
push
xor
test
ja
cmp
sbb
outs
pop
out
mov
call
scas
add
dec
pop
xchg
pop
das
stc
push
sbb
(bad)
(bad)
(bad)
dec
enter
push
imul
add
add
cmp
test
pop
shr
std
in
cmp
pop
loop
jo
xchg
jmp
outs
pop
adc
pusha
outs
dec
pop
outs
in
fnstenv
and
inc
call
fistp
or
xor
add
inc
pop
and
add
jnp
xchg
or
idiv
(bad)
mov
cmp
dec
cs
add
mov
or
retf
pop
mov
cmp
pop
mov
and
out
loopne
mov
dec
inc
mov
nop
pop
scas
stos
(bad)
(bad)
call
arpl
mov
jmp
sbb
mov
xchg
inc
ror
lea
and
cmp
out
cmp
sar
scas
addr16
add
fsubr
pop
mov
dec
out
xchg
jne
daa
sub
xchg
and
or
cs
xor
cwde
mov
gs
(bad)
mov
call
mov
pop
mov
int3
pushf
and
loopne
(bad)
(bad)
call
push
(bad)
call
cmp
call
fistp
dec
mov
mov
sbb
mov
mov
adc
push
add
cs
int3
sub
jmp
xor
(bad)
jmp
jmp
(bad)
and
mov
iret
sbb
cld
sbb
or
mov
lahf
pop
shl
jmp
lock
sub
xor
xchg
or
sahf
int3
cmp
sub
or
pop
sub
xor
lods
ror
push
push
xchg
lds
or
fs
mov
sti
sub
es
lea
adc
xchg
(bad)
mov
or
test
sbb
cmp
lock
pop
sub
jns
in
sub
cdq
or
push
neg
xchg
or
ret
out
stos
xchg
(bad)
scas
clc
push
call
cmps
sbb
aaa
fwait
or
(bad)
(bad)
(bad)
fisttp
fwait
sub
cmp
scas
ds
out
enter
push
mov
jecxz
cs
sub
(bad)
(bad)
mov
scas
jmp
or
push
iret
pop
cmp
sbb
push
cld
stos
xchg
es
fwait
test
(bad)
xchg
jmp
clc
or
fild
jnp
imul
push
pop
sbb
mov
loopne
call
pop
push
shl
and
jmp
dec
pop
fidiv
imul
mov
jl
mov
cmp
movs
jecxz
test
and
or
jmp
xor
inc
cmp
jg
movs
mov
int3
mov
or
out
and
xchg
ins
fldenv
loopne
jns
repz
or
or
xchg
sub
dec
nop
retf
cmc
ror
mov
scas
push
std
pop
shl
mov
cs
cli
std
cwde
lahf
jnp
iret
or
push
adc
sub
dec
iret
add
fs
pusha
adc
cmps
shl
adc
(bad)
(bad)
(bad)
(bad)
mov
mov
dec
mov
cli
sti
mov
loopne
out
clc
jg
jg
aas
xchg
jp
(bad)
fisttp
jmp
shr
lods
dec
inc
pop
fnsave
add
(bad)
(bad)
dec
mov
outs
ss
mov
in
pop
mov
jle
stos
in
lods
cmp
adc
push
loop
push
push
sar
lods
xor
push
sbb
(bad)
(bad)
jmp
pop
cs
cli
jl
test
imul
inc
adc
(bad)
mov
in
stos
mov
mov
sbb
xchg
add
retf
jg
add
dec
xchg
lods
cmps
ins
adc
js
out
std
dec
fisttp
pop
call
(bad)
push
repz
or
ror
adc
jle
(bad)
(bad)
jmp
dec
enter
jmp
movs
lods
call
imul
jb
(bad)
or
add
(bad)
(bad)
(bad)
jmp
xchg
mov
sub
mov
stos
mov
xchg
fbld
inc
retf
rcr
in
out
jg
xchg
fstp
xchg
adc
cmps
mov
jmp
cld
(bad)
(bad)
jmp
jae
push
mov
and
test
imul
iret
and
das
xor
mov
dec
lods
ins
ss
dec
cmp
ss
add
jmp
jnp
test
jns
mov
std
in
(bad)
mov
pop
dec
scas
test
fisttp
cmps
mov
aad
adc
mov
aaa
clc
out
pop
mov
stos
push
push
idiv
xchg
loop
pop
sub
(bad)
(bad)
call
mov
push
jmp
add
loopne
pop
add
mov
jg
inc
scas
push
lock
push
jmp
jns
mov
std
std
add
clc
jmp
jmp
mov
push
mov
(bad)
(bad)
(bad)
jmp
cmp
jb
dec
cli
pop
imul
xchg
or
pop
pushf
jge
sub
stos
dec
xor
jmp
fidivr
add
ss
adc
sbb
jmp
lds
inc
and
(bad)
jmp
sub
jnp
std
je
aaa
jmp
xchg
cs
(bad)
fild
pop
call
mov
jmp
inc
mov
pop
dec
pusha
retf
(bad)
ficom
ins
out
pop
jp
mov
loop
sub
nop
mov
(bad)
mov
stos
cmps
sub
or
mov
dec
jae
mov
jmp
mov
push
push
inc
retf
ror
ins
(bad)
jecxz
into
mov
xor
std
(bad)
dec
sar
mov
scas
les
in
xchg
retf
xchg
inc
cld
call
mov
push
lahf
stos
shr
je
stos
mov
adc
hlt
stos
sub
jg
cmc
(bad)
jnp
in
mov
sub
out
pop
fistp
cmp
mov
pop
mov
push
sahf
sub
(bad)
fld
lods
add
out
or
fisubr
js
sub
push
mov
sub
(bad)
(bad)
mov
ins
(bad)
push
ins
dec
mov
cmp
mov
sub
push
or
xchg
test
fmul
push
push
sar
mov
mov
jle
xor
sub
outs
pop
mov
mov
dec
das
fwait
mov
out
pop
dec
add
or
cmp
ins
jmp
scas
or
lods
xchg
mov
mov
xchg
pop
popa
addr16
jge
adc
mov
nop
xor
enter
mov
jl
add
fbstp
mov
pop
jb
loope
scas
sub
jmp
jb
outs
sub
ret
fdivr
test
cmps
sbb
pop
add
cmp
bound
sbb
dec
das
repz
(bad)
(bad)
fld
push
cmp
call
hlt
pop
nop
and
iret
movs
cld
mov
icebp
cs
(bad)
(bad)
call
aam
(bad)
popf
pop
cmp
pop
pop
mov
es
or
movs
(bad)
(bad)
(bad)
cli
xchg
mov
pop
imul
pop
push
add
neg
pop
hlt
sub
jg
fs
lods
xchg
jb
mov
popa
lock
rcl
test
mov
iret
lods
call
stos
push
(bad)
arpl
pop
add
push
pop
xor
(bad)
mov
(bad)
push
ss
adc
cmc
sbb
(bad)
(bad)
call
inc
call
sbb
adc
or
stc
ror
cmp
jmp
mov
sbb
fimul
xor
fsub
(bad)
jmp
add
stos
ret
test
and
(bad)
(bad)
jmp
test
or
jb
lahf
cmps
sbb
int3
pop
ror
(bad)
(bad)
call
inc
cdq
dec
in
lods
sbb
pop
push
ror
test
mov
daa
andnps
call
test
jmp
xor
pop
cmps
push
pop
jp
jb
mov
imul
fisubr
push
outs
mov
(bad)
(bad)
call
mov
push
iret
mov
mov
retf
in
adc
lahf
jg
movs
lahf
sub
ds
inc
dec
imul
sub
push
xor
jecxz
jl
xchg
loope
out
(bad)
(bad)
fwait
mov
pop
(bad)
(bad)
mov
dec
mov
es
aaa
test
popa
sar
add
push
mov
hlt
test
xchg
add
pushf
(bad)
(bad)
mov
and
push
add
cmp
or
sub
sub
(bad)
(bad)
call
loop
inc
das
stos
dec
xor
sahf
mov
sbb
or
sbb
enter
mov
movs
mov
cmp
cwde
imul
and
or
shr
lods
jg
lock
pop
and
(bad)
mov
loopne
jg
ret
fnstsw
lods
mov
mov
push
mov
ror
jle
xchg
mov
rcl
mov
pop
retf
xor
movs
xchg
xchg
push
loop
retf
out
(bad)
cli
mov
dec
retf
lods
mov
(bad)
(bad)
(bad)
mov
cdq
imul
jle
dec
mov
mov
test
pop
(bad)
(bad)
(bad)
inc
pop
mov
stos
fisubr
scas
pop
adc
pushf
mov
dec
stos
xchg
sbb
pop
lock
xchg
daa
sub
cmp
mov
jl
dec
shl
cmp
(bad)
mov
mov
lods
mov
xor
mov
sub
push
dec
jp
pop
add
push
mov
xchg
fst
psrad
mov
lods
jg
(bad)
(bad)
(bad)
in
jmp
cmp
mov
mov
jge
dec
cld
sbb
mov
add
outs
cmps
hlt
(bad)
adc
mov
pop
push
pop
jmp
or
(bad)
push
vmovdqu
retf
dec
sbb
loopne
stc
fstp
mov
cmp
pop
shl
rol
cld
jl
mov
push
scas
dec
xor
dec
cld
(bad)
(bad)
dec
mov
xor
daa
enter
es
rcr
scas
pop
std
mov
std
sbb
(bad)
call
out
scas
ins
fwait
mov
and
in
ret
jae
push
or
(bad)
mov
sbb
leave
xchg
outs
int3
hlt
jle
jmp
mov
in
in
fisttp
dec
(bad)
(bad)
in
cs
outs
mov
outs
shl
ror
or
push
sbb
(bad)
(bad)
dec
dec
das
stc
xchg
inc
xor
fbstp
ror
mov
push
jge
or
mov
(bad)
(bad)
push
std
mov
aaa
iret
adc
inc
lahf
jb
enter
fisub
mov
or
mov
out
inc
nop
popf
popa
iret
push
(bad)
(bad)
jg
sahf
dec
les
daa
pusha
mov
iret
fistp
lahf
aas
push
repnz
ds
jl
adc
xchg
xchg
icebp
call
std
cld
cmps
call
cld
jge
push
xor
sbb
int
push
xchg
and
frstor
(bad)
(bad)
jg
sub
xor
outs
adc
xchg
push
mov
inc
mov
js
inc
pop
dec
mov
lods
cmp
sub
in
clc
(bad)
jmp
nop
xchg
out
in
cmp
jmp
xchg
push
loop
xor
(bad)
call
imul
ret
in
mov
xchg
jno
jmp
cmp
in
pushf
pop
loope
pushf
(bad)
(bad)
(bad)
(bad)
faddp
push
cld
mov
sar
std
mov
iret
jmp
cmp
jmp
(bad)
push
or
imul
int3
mov
call
jb
(bad)
dec
cvtpi2ps
test
lea
sar
nop
test
jb
(bad)
call
mov
sahf
call
sub
into
pop
xchg
or
pop
(bad)
mov
mov
ins
leave
sub
dec
adc
push
lock
adc
out
add
(bad)
(bad)
push
pop
or
push
jae
pop
jb
out
fild
pop
popa
lock
inc
lock
pusha
rol
(bad)
jmp
push
mov
outs
add
in
into
loop
jge
daa
mov
mov
pop
gs
(bad)
(bad)
call
ret
jne
bound
xchg
imul
jb
test
in
aad
ret
mov
and
dec
(bad)
(bad)
jmp
push
cmps
mov
jp
das
adc
imul
or
add
(bad)
(bad)
inc
call
call
std
sub
fsub
test
push
pop
out
call
popf
out
xchg
mov
dec
(bad)
jge
jno
ja
call
outs
cld
(bad)
(bad)
jg
fwait
sbb
(bad)
cmps
repz
inc
ret
ror
sahf
mov
out
fistp
add
push
jmp
mov
or
ins
(bad)
(bad)
(bad)
jmp
(bad)
dec
adc
cmps
aaa
sub
inc
jb
cmp
nop
push
(bad)
fbld
fadd
sub
iret
push
jmp
sub
push
inc
cld
(bad)
out
mov
sub
popf
imul
inc
in
push
sahf
scas
mov
(bad)
(bad)
call
retf
mov
shl
lods
xchg
repnz
ret
fimul
adc
(bad)
fcomip
scas
sub
xchg
or
mov
fstp
pop
adc
mov
add
(bad)
(bad)
mov
popa
repz
jmp
test
jmp
cmps
mov
stos
push
fcmove
sub
out
les
mov
scas
or
sbb
lahf
push
mov
and
cmp
fadd
test
fwait
xchg
stos
sub
(bad)
(bad)
(bad)
jg
lods
sbb
lahf
pop
(bad)
jecxz
cmps
adc
push
mov
enter
(bad)
inc
push
js
cmp
nop
sbb
mov
jmp
fcomip
hlt
stos
pop
loop
fs
hlt
jno
imul
adc
inc
jmp
je
sub
jae
mov
movs
fcomip
(bad)
fbstp
sahf
jge
push
push
and
lods
inc
lahf
xor
and
dec
in
sub
(bad)
inc
push
inc
lods
and
pop
pop
out
ds
ds
cli
(bad)
dec
or
lock
mov
jmp
or
mov
outs
jmp
mov
jmp
mov
add
ja
lods
xor
inc
dec
js
test
sub
imul
movs
dec
inc
je
lahf
(bad)
clc
(bad)
(bad)
(bad)
(bad)
mov
fwait
jg
sbb
sbb
call
shl
das
lock
(bad)
movs
mov
sar
fs
push
sbb
jmp
das
mov
ret
lock
sub
scas
jns
push
pop
add
es
pop
cli
dec
cmps
loop
movs
fistp
ret
dec
nop
push
(bad)
(bad)
dec
and
shr
ret
inc
dec
iret
in
and
shl
jnp
push
inc
sar
and
jbe
stc
xor
sbb
daa
out
or
push
pushf
sub
sbb
scas
sbb
imul
(bad)
(bad)
(bad)
inc
call
cdq
jmp
mov
mov
and
add
(bad)
(bad)
cmp
jp
sahf
pop
std
adc
mov
adc
test
call
mov
mov
ja
scas
clc
ss
arpl
es
ins
push
xchg
xchg
std
out
adc
(bad)
js
sub
jl
mov
int
call
xlat
xchg
(bad)
(bad)
fbld
jecxz
jb
ficomp
pop
cs
mov
cmp
(bad)
(bad)
call
imul
sub
sbb
call
test
dec
retf
(bad)
fbstp
adc
dec
retf
ja
pop
ret
cmc
mov
jmp
clc
mov
add
call
movs
shr
fdivr
(bad)
(bad)
jmp
pop
and
scas
cs
call
lods
mov
sub
bnd
add
test
das
sar
out
(bad)
mov
pop
(bad)
loop
fisttp
mov
dec
jge
in
and
jl
xchg
push
je
mov
cs
ins
(bad)
jns
adc
cs
(bad)
inc
test
jmp
je
pop
cmp
(bad)
cmp
cmp
hlt
mov
jmp
(bad)
(bad)
fisttp
cmp
cmp
into
jle
cs
mov
gs
inc
xchg
std
pop
mov
scas
(bad)
(bad)
call
mov
test
push
lock
cli
mov
les
adc
jmp
ins
dec
jl
retf
mov
push
jns
fisttp
(bad)
(bad)
call
and
call
push
loope
jbe
dec
push
mov
(bad)
xchg
jnp
outs
and
pop
movs
jl
hlt
(bad)
js
cwde
test
iret
mov
bound
push
dec
cmps
inc
mov
xor
in
pop
mov
(bad)
fiadd
repnz
clc
call
lock
punpcklwd
ins
push
movsx
pop
aaa
outs
cmp
hlt
push
dec
cmps
sbb
sbb
std
(bad)
jmp
ror
call
sub
cmp
mov
pushf
jmp
mov
retf
mov
push
inc
mov
call
push
enter
jbe
pop
iret
fiadd
(bad)
call
inc
les
dec
aam
and
test
scas
adc
jp
ja
jmp
sub
(bad)
sub
aas
fisub
aas
jl
test
jg
cmp
(bad)
fist
mov
jmp
(bad)
jmp
movs
adc
cdq
jge
outs
dec
in
sub
jmp
in
push
(bad)
or
push
jp
sub
(bad)
(bad)
(bad)
fist
jmp
mov
ins
sbb
lock
clc
in
push
mov
aad
or
push
push
cmp
jg
push
mov
fbld
(bad)
stos
xor
dec
stc
push
loope
mov
push
xchg
mov
mov
cmp
jno
das
mov
stos
and
push
adc
pop
aaa
in
loope
test
or
(bad)
(bad)
jmp
std
xor
in
cmp
sub
cmp
xchg
mov
xchg
xchg
out
retf
push
(bad)
(bad)
(bad)
(bad)
mov
adc
xchg
or
cdq
sub
retf
sbb
jno
xor
pop
push
cs
(bad)
(bad)
jmp
xor
sar
lods
ja
or
mov
or
ror
mov
(bad)
(bad)
inc
pop
cmps
pop
cmp
dec
jno
sub
mov
sub
xor
or
(bad)
(bad)
(bad)
(bad)
mov
add
daa
adc
sbb
mov
sub
push
sub
mov
push
lea
std
push
(bad)
jmp
sub
cmp
push
test
call
jmp
test
iret
or
jno
ror
add
adc
pop
mov
scas
fsubr
(bad)
dec
sub
xchg
jp
jmp
hlt
mov
mov
inc
(bad)
push
(bad)
mov
shr
xchg
test
icebp
les
scas
aad
mov
or
(bad)
(bad)
jg
sub
call
scas
pop
lea
cs
(bad)
call
and
retf
retf
cld
enter
jnp
jl
(bad)
in
mov
(bad)
(bad)
cli
data16
sub
ja
outs
aaa
cs
jnp
(bad)
fcmovu
add
mov
int
pop
fs
mov
pop
xlat
loopne
(bad)
(bad)
inc
dec
push
mov
xchg
pop
mov
aad
xor
sub
aaa
nop
clc
push
bound
jb
(bad)
leave
scas
push
(bad)
mov
xchg
daa
imul
jmp
jmp
jecxz
pop
and
xor
or
mov
test
push
std
pop
fsubr
cmp
xchg
jmp
mov
dec
mov
pop
mov
jmp
sar
into
pop
ret
pop
mov
mov
sbb
ficomp
outs
push
mov
mov
pop
in
mov
(bad)
(bad)
(bad)
(bad)
call
sub
xor
sub
and
sar
js
pop
mov
mov
inc
xchg
mov
loopne
int3
out
push
cmp
push
cld
(bad)
mov
call
stos
xchg
mov
shl
xchg
(bad)
(bad)
jmp
outs
mov
and
imul
push
int
jbe
fistp
mov
jle
(bad)
(bad)
ffreep
cmp
push
ds
das
jle
jmp
jmp
cs
stc
hlt
fdivrp
(bad)
mov
cs
out
dec
cs
fst
push
sub
cmp
pushf
ret
xlat
jmp
sahf
sub
ficom
pop
outs
repnz
js
sar
mov
sar
or
sbb
jmp
mov
aaa
jne
icebp
scas
dec
in
jno
and
jmp
ins
int
mov
bnd
call
ins
loopne
sbb
push
mov
xor
iret
sar
push
lea
push
mov
mov
popa
sub
or
lods
(bad)
(bad)
(bad)
call
(bad)
mov
dec
inc
(bad)
scas
pop
sbb
dec
enter
mov
push
cmp
cmp
sar
ins
sub
cmp
mov
stos
jmp
lahf
(bad)
mov
push
adc
cmps
jg
mov
inc
push
jmp
(bad)
aad
scas
aam
cmp
sbb
jbe
leave
cli
movs
mov
(bad)
(bad)
jg
stos
dec
ficomp
jae
gs
mov
aaa
xchg
mov
sub
lock
fistp
cli
xchg
int3
div
stos
sub
and
aam
in
sbb
shr
xor
xchg
stc
adc
(bad)
(bad)
call
cmp
dec
stos
push
std
test
sub
fnstcw
loopne
mov
adc
lock
mov
adc
fwait
pop
jns
cmp
rcl
adc
sahf
(bad)
in
(bad)
mov
inc
(bad)
cli
and
mov
cwde
test
xchg
in
data16
clc
call
jp
jb
movs
mov
int
arpl
test
sub
ja
jmp
movs
sub
int3
setp
mov
adc
cwde
adc
(bad)
(bad)
jg
jmp
rcl
adc
jp
push
jl
push
jle
adc
(bad)
and
(bad)
dec
fld
aas
lahf
in
in
or
dec
push
xchg
adc
leave
dec
lahf
(bad)
(bad)
out
or
cdq
scas
pop
or
cwde
jg
add
in
(bad)
(bad)
(bad)
push
into
mov
or
test
das
test
call
mov
mov
(bad)
(bad)
(bad)
mov
aam
(bad)
mov
push
jbe
add
fidivr
(bad)
jg
add
in
shl
call
adc
arpl
fwait
push
sahf
test
pop
retf
jb
sub
sar
or
mov
scas
cld
cwde
dec
xor
jg
mov
cwde
imul
push
add
icebp
mov
aaa
mov
jmp
add
imul
xor
push
sbb
jp
fldenv
adc
pop
xlat
retf
add
pop
aam
nop
scas
je
xchg
sbb
int
leave
(bad)
pushf
in
ins
sbb
push
(bad)
(bad)
(bad)
(bad)
js
call
push
dec
and
mov
jle
imul
shl
pop
test
sbb
pop
lods
(bad)
jg
outs
icebp
mov
add
jmp
inc
pop
addr16
ret
mov
stos
call
or
clc
pop
fs
dec
lods
push
mov
mov
(bad)
mov
fcom
xlat
mov
test
lods
idiv
push
xchg
call
add
xchg
repz
xchg
sub
add
rol
and
nop
je
cdq
ins
outs
call
fisubr
sub
(bad)
(bad)
jmp
(bad)
lahf
imul
jmp
cmc
or
jl
push
xchg
in
sahf
rcl
(bad)
jmp
dec
mov
mov
adc
and
xchg
cmps
adc
jne
leave
test
xchg
pop
retf
popa
adc
pop
mov
cmc
push
cwde
cmps
jne
in
int
adc
jp
pop
and
sbb
test
in
mov
push
or
jo
(bad)
call
pop
popf
xor
mov
jno
jb
and
ficom
call
sub
mov
ds
mov
out
lds
(bad)
jg
sub
data16
arpl
cmp
cs
sar
inc
outs
cmp
out
jmp
scas
in
scas
cmp
sbb
cmps
dec
adc
jmp
xor
sub
mov
ret
(bad)
fwait
into
ficom
imul
inc
cld
mov
mov
cmp
or
je
enter
add
call
loopne
jnp
sbb
pop
or
sbb
int
popa
mov
loopne
hlt
xor
cdq
int3
pop
jmp
pop
jmp
push
mov
jmp
fist
mov
rcr
mov
add
popa
je
mov
add
dec
(bad)
ja
jmp
sub
fst
jns
jno
cmps
jbe
call
imul
(bad)
(bad)
(bad)
(bad)
jp
inc
repnz
jmp
dec
jecxz
rol
sub
in
or
adc
(bad)
(bad)
call
dec
mov
mov
lea
int
mov
jae
lock
in
or
popa
mov
mov
add
(bad)
fcmove
outs
cmps
inc
stos
jnp
aas
add
push
push
inc
(bad)
and
call
dec
mov
cmp
call
ins
stos
out
inc
cmp
sbb
je
je
rol
sbb
cli
push
(bad)
(bad)
out
adc
jle
add
(bad)
fwait
ins
or
fisttp
mov
inc
outs
aaa
jns
jge
sbb
out
pop
ins
ja
pop
outs
push
sub
sub
jmp
inc
or
sub
rol
cmp
jae
mov
sub
(bad)
(bad)
jmp
push
push
dec
stos
pop
sti
pop
sub
fdiv
mov
ret
lods
in
sub
inc
xchg
xchg
or
jmp
xor
cmps
retf
pop
mov
(bad)
(bad)
(bad)
(bad)
jg
inc
rol
sbb
ds
sti
test
jmp
jo
and
mov
stos
push
push
stos
(bad)
(bad)
jmp
cmp
jmp
add
jmp
or
sub
xchg
adc
in
mov
out
stos
dec
cmps
xor
or
and
push
mov
add
cld
call
sub
or
push
std
or
jmp
call
inc
push
pop
sbb
pop
in
push
cld
inc
stos
adc
gs
jb
xchg
xchg
cmp
cmp
(bad)
aaa
std
jmp
jns
mov
mov
pop
ins
lea
lock
lahf
cmps
xor
sub
(bad)
mov
in
jmp
jnp
or
(bad)
(bad)
dec
mov
loop
pop
mov
push
pusha
retf
mov
add
or
cmp
scas
clc
call
cdq
jmp
xchg
or
es
popf
retf
pop
bound
jae
xchg
cs
mov
lods
sbb
cs
jp
cld
xchg
dec
fstp
lahf
add
(bad)
(bad)
mov
inc
pop
sub
adc
sti
stos
or
(bad)
push
jne
push
(bad)
inc
aam
push
lea
pop
ret
icebp
imul
and
jg
mov
dec
out
dec
bswap
arpl
push
push
mov
sub
add
sub
int3
sbb
in
jle
(bad)
push
(bad)
(bad)
(bad)
jmp
add
ror
pop
dec
cmc
stos
mov
jmp
mov
scas
cmc
pop
sbb
(bad)
(bad)
jmp
cdq
mov
repnz
es
in
push
fisubr
into
mov
or
push
leave
cmp
mov
shr
ins
xor
mov
(bad)
iret
mov
(bad)
pop
push
stos
jo
mov
inc
(bad)
(bad)
(bad)
(bad)
inc
stos
push
sbb
sbb
xor
into
sbb
add
loopne
(bad)
jecxz
(bad)
pop
ret
fwait
xchg
(bad)
jg
inc
inc
test
clc
mov
leave
mov
or
mov
gs
fisubr
idiv
(bad)
in
repz
mov
adc
ins
lods
rcr
(bad)
(bad)
mov
dec
adc
xchg
rcr
or
fcmovnbe
stc
lock
sub
bound
(bad)
(bad)
(bad)
push
sbb
retf
mov
test
mov
mov
(bad)
call
ja
ins
mov
hlt
daa
pusha
mov
sub
jecxz
cmp
call
lods
mov
out
arpl
repz
mov
jae
in
mov
sar
xor
(bad)
(bad)
jmp
sub
xor
jle
dec
imul
outs
sub
stos
ret
(bad)
mov
das
(bad)
cmp
inc
fcom
xor
push
jecxz
in
or
(bad)
(bad)
push
call
jnp
and
scas
test
mov
jmp
(bad)
(bad)
(bad)
call
mov
xor
call
jb
pusha
in
pop
mov
push
fwait
clc
mov
push
pop
push
arpl
cmp
je
(bad)
jmp
fcmovu
pushw
ds
es
(bad)
cmp
ins
mov
mov
push
mov
dec
cmp
add
mov
nop
xor
scas
call
(bad)
(bad)
jmp
and
push
out
stos
aad
fisubr
retf
pop
or
dec
stos
dec
mov
(bad)
(bad)
call
mov
cld
jecxz
mov
js
sub
mov
leave
jge
addr16
adc
fwait
push
mov
jg
(bad)
push
jmp
push
imul
mov
outs
inc
xor
xchg
test
(bad)
(bad)
(bad)
call
scas
retf
mov
je
lods
adc
rcl
mov
fwait
bound
mov
push
push
test
test
arpl
shr
movs
stos
iret
loopne
(bad)
(bad)
inc
stos
xchg
test
lods
xchg
loop
cmp
or
dec
add
push
push
mov
(bad)
mov
mov
(bad)
sub
jecxz
shr
sbb
mov
icebp
inc
stos
mov
(bad)
(bad)
jmp
mov
sub
or
xchg
movs
sub
mov
mov
loope
(bad)
(bad)
call
lods
leave
jp
xor
nop
push
cmp
mov
dec
std
pop
inc
pop
xor
es
(bad)
js
lea
or
jne
ss
push
pop
lahf
xchg
sub
fs
ds
(bad)
call
scas
cs
aam
or
jae
pop
aas
push
mov
mov
rep
adc
(bad)
(bad)
fist
stos
std
ficomp
push
mov
push
jmp
pop
push
push
jmp
jns
lods
mov
stos
and
imul
(bad)
jmp
add
inc
xor
in
jb
ins
jp
daa
mov
shl
cmp
in
imul
cld
pop
cld
dec
mov
pop
sbb
cmp
stos
movs
sub
in
hlt
sbb
jmp
add
sbb
mov
jmp
fisttp
xchg
call
or
shr
sub
xchg
sbb
retf
cmp
mov
or
sub
movs
call
or
pop
pop
fldenv
cmp
scas
sbb
mov
pop
mov
jmp
mov
jnp
lea
nop
fidivr
xchg
sbb
jp
jmp
push
je
mov
mov
(bad)
(bad)
std
stc
push
mov
(bad)
mov
lods
std
imul
test
push
lods
sbb
xor
jne
movs
pop
pusha
dec
(bad)
lea
call
mov
add
mov
stos
ins
movups
cli
push
es
push
int
inc
jb
xor
lahf
ss
aaa
cld
jmp
mov
scas
fst
mov
call
(bad)
push
cwde
inc
in
(bad)
sbb
dec
and
dec
inc
movs
cmps
out
sbb
lods
ss
push
or
std
adc
bnd
out
pop
jmp
xor
shr
sbb
mov
out
cli
(bad)
push
pop
cli
repnz
add
jbe
in
lds
pop
add
and
(bad)
(bad)
(bad)
aas
fs
add
jb
test
loop
cmp
ss
xor
(bad)
(bad)
(bad)
call
(bad)
mov
add
jmp
test
lahf
add
fist
lock
mov
(bad)
(bad)
call
inc
mul
aam
cli
sub
shr
fistp
sub
test
mov
push
retf
mov
push
jnp
ja
scas
jmp
call
xchg
ret
clc
(bad)
call
sub
jo
je
retf
cmp
imul
jg
ja
popa
out
retf
imul
push
cs
jmp
fsubr
call
jmp
dec
adc
retf
jmp
ins
cmp
retf
xchg
sub
std
mov
dec
and
inc
sbb
cmc
scas
xchg
js
imul
xchg
sti
pop
imul
call
shrd
popa
xchg
call
outs
nop
xor
test
jne
xchg
and
loopne
stos
jmp
imul
and
mov
mov
loop
into
pushf
jg
jle
test
sub
repz
jmp
enter
loop
sub
imul
cmp
mov
into
sub
dec
(bad)
in
fdivr
sub
cmp
mov
lock
jmp
lock
dec
jecxz
ins
lds
or
sbb
pop
scas
sti
std
js
push
ds
push
aam
xchg
sahf
jmp
jo
(bad)
mov
dec
cmp
pop
push
(bad)
sub
jmp
(bad)
(bad)
call
jb
data16
cmc
jecxz
inc
sub
lea
mov
repnz
sbb
jnp
dec
cli
mov
mov
dec
lock
hlt
push
jo
test
jbe
mov
imul
repnz
push
cdq
sbb
(bad)
(bad)
(bad)
call
sbb
call
jmp
ret
ds
jb
pusha
jmp
(bad)
jmp
dec
inc
shl
adc
dec
inc
sbb
mov
mov
sub
(bad)
call
jmp
popf
scas
enter
sub
mov
and
cmps
in
(bad)
fisub
mov
test
sbb
(bad)
(bad)
(bad)
dec
mov
hlt
sti
in
into
retf
call
cmps
mov
(bad)
(bad)
jmp
hlt
add
mul
cmp
ret
and
push
mov
cmp
cmps
outs
leave
xor
pop
cmp
call
mov
or
(bad)
jmp
sbb
jmp
(bad)
(bad)
(bad)
jmp
stos
mov
xor
imul
mov
call
or
mov
push
fwait
pusha
and
fldenv
cdq
cmp
sbb
ss
xchg
cmps
call
(bad)
(bad)
mov
sbb
cmp
push
xor
mov
jmp
mov
(bad)
(bad)
jmp
xlat
rol
int
or
sub
aad
mov
stos
fisttp
sub
jg
call
or
jl
scas
test
mov
xchg
add
(bad)
inc
mov
sub
daa
popf
retf
mov
das
cld
(bad)
(bad)
call
pmaddwd
pop
cmp
ss
retf
sub
pop
scas
dec
into
stos
popa
xchg
int3
push
(bad)
(bad)
inc
call
movs
test
scas
or
cwde
mov
arpl
add
mov
inc
and
sahf
iret
jb
push
mov
inc
add
out
cmp
je
xchg
push
scas
test
jmp
call
cli
push
arpl
lahf
mov
or
mov
sub
sub
sub
cmp
out
movs
xor
push
imul
sub
dec
sub
(bad)
out
push
cmp
xchg
push
dec
mov
repnz
pop
das
fisubr
stos
cwde
xchg
mov
je
sbb
adc
sub
xchg
xchg
leave
mov
jmp
push
std
jmp
loope
adc
dec
push
sbb
(bad)
xlat
sbb
test
(bad)
(bad)
push
das
inc
repnz
xchg
push
push
aam
jo
sbb
popa
xchg
sbb
(bad)
(bad)
(bad)
push
sbb
sub
inc
movs
aad
icebp
dec
and
ins
popf
cli
adc
sbb
in
jmp
ret
(bad)
(bad)
fcomip
jg
imul
xchg
mov
outs
scas
jge
test
call
inc
cdq
jae
adc
xchg
movs
or
das
retf
push
(bad)
(bad)
(bad)
fild
shl
adc
push
jmp
je
mov
jge
ficomp
add
inc
pop
jo
mov
ret
jne
test
jp
in
imul
jmp
mov
popf
sub
and
fistp
call
xor
dec
dec
sub
stc
push
je
mov
sti
out
rep
push
out
cmp
(bad)
cmp
cs
das
or
jmp
jmp
cli
cmps
push
dec
xchg
inc
mov
in
retf
imul
mov
sub
lods
rcl
xor
cmp
jmp
bound
inc
loopne
xchg
pop
inc
mov
test
sbb
shr
and
adc
(bad)
push
xchg
repz
sar
or
test
sub
stos
or
dec
push
jae
mov
rol
lods
les
(bad)
jmp
dec
out
cli
cmp
mov
push
mov
fiadd
iret
lods
and
inc
or
sub
cs
(bad)
push
sbb
mov
mov
hlt
dec
test
test
and
add
jle
(bad)
mov
fbld
push
cmp
sahf
call
and
push
pop
jmp
arpl
stos
repz
fidiv
lods
(bad)
ss
(bad)
dec
(bad)
pop
mov
dec
cmp
push
call
xchg
inc
(bad)
sar
jmp
popf
push
jecxz
sub
xchg
retf
or
mov
(bad)
std
sbb
leave
xor
push
retf
(bad)
(bad)
jmp
jnp
push
jmp
or
xchg
(bad)
iret
xchg
add
cmps
sbb
ror
call
repnz
aad
pop
xor
out
pop
call
cli
jmp
cmps
inc
mov
sahf
stc
in
test
inc
fistp
mov
imul
inc
jmp
cmp
lahf
push
repz
inc
push
jp
xchg
(bad)
(bad)
inc
pop
adc
jmp
movs
fsub
sahf
dec
test
(bad)
(bad)
(bad)
jg
out
out
js
push
cmps
mov
jns
daa
sub
int
ret
pop
fmul
retf
je
cli
(bad)
call
retf
lea
imul
adc
stc
test
call
or
push
imul
xchg
stc
repnz
jmp
sbb
call
popa
hlt
jecxz
stc
mov
jae
mov
sub
jmp
push
loopne
mov
call
cmc
jns
sub
out
loop
jmp
cmps
(bad)
(bad)
jmp
cmp
xchg
pop
scas
push
mov
daa
add
push
(bad)
jmp
mov
popa
add
cmps
(bad)
jp
mov
stc
in
mov
retf
fprem
clc
or
movs
test
jge
(bad)
xchg
retf
sar
add
call
mov
jmp
dec
cdq
call
mov
or
push
popa
scas
and
pop
cli
push
xchg
mov
icebp
mov
iret
mov
mov
movs
xchg
mov
neg
cli
int
mov
mov
test
cmp
cmc
mov
out
stos
xor
mov
(bad)
(bad)
out
lock
jmp
sbb
mov
push
mov
fdiv
add
mov
scas
sbb
jecxz
call
mov
stos
iret
jl
xchg
sbb
arpl
test
(bad)
(bad)
(bad)
stc
jmp
sbb
mov
or
mov
lods
mov
fcomp
call
add
js
call
adc
mov
ret
(bad)
fcomip
cmps
and
(bad)
jo
jb
cmps
dec
std
cmp
cld
test
add
jg
or
mov
icebp
jno
imul
xchg
pusha
(bad)
enter
jmp
(bad)
mov
mov
sbb
pop
push
call
nop
mov
stc
dec
mov
(bad)
(bad)
call
push
or
sbb
xchg
and
mov
int3
movs
(bad)
(bad)
(bad)
(bad)
jmp
cs
and
jle
adc
sahf
adc
xor
xor
mov
adc
jmp
clc
and
popf
fwait
or
outs
fidiv
mov
inc
movs
(bad)
(bad)
(bad)
(bad)
push
scas
das
cld
neg
adc
inc
push
pushf
repz
sub
xchg
add
scas
aam
push
ss
test
jmp
sub
ror
test
mov
mov
(bad)
pop
dec
jl
dec
sub
mov
arpl
es
adc
jecxz
pop
lods
out
mov
cmp
mov
sar
test
dec
es
shl
shl
clc
stos
pop
cmps
jl
sub
inc
fadd
outs
imul
loopne
(bad)
call
iret
aam
scas
in
mov
adc
mov
inc
dec
cli
inc
sahf
xor
dec
cli
fild
xor
sub
in
imul
jle
add
lea
push
dec
pop
mov
mov
push
ror
dec
int
jg
call
sub
fsubr
clc
mov
mov
outs
cmp
scas
sbb
icebp
(bad)
call
and
es
cmp
hlt
sub
pop
sete
push
mov
(bad)
(bad)
jmp
es
mov
sahf
dec
mov
jg
popf
outs
repnz
shl
int
adc
nop
iret
sbb
(bad)
(bad)
jg
hlt
jnp
int3
pushf
ret
add
adc
iret
sbb
cmp
retf
mov
std
push
or
push
or
cmp
pop
push
push
dec
push
(bad)
mov
aas
repnz
fld
bound
xchg
mov
mov
(bad)
(bad)
call
pusha
ds
out
imul
in
cwde
mov
xchg
mov
(bad)
cwde
ins
xor
jmp
call
push
fist
and
(bad)
sbb
lock
dec
mov
mov
scas
(bad)
out
pushf
mov
(bad)
jle
cli
jo
fist
(bad)
(bad)
call
jbe
mov
mov
out
cwde
imul
or
(bad)
(bad)
call
sub
sub
jae
push
mov
pusha
pop
mov
mov
xor
push
test
xchg
jp
(bad)
(bad)
call
call
mov
and
mov
xor
xor
push
leave
mov
inc
mov
pop
or
retf
popa
int
push
enter
lea
(bad)
jmp
pop
cmps
xchg
inc
cli
push
sub
mov
mov
(bad)
(bad)
(bad)
call
pusha
(bad)
out
xchg
retf
das
push
sub
mov
push
xchg
call
mov
(bad)
(bad)
push
xchg
ins
shl
xor
ret
mov
(bad)
pop
dec
jmp
test
mov
call
outs
jb
outs
mov
pop
cld
(bad)
out
into
xchg
sub
xchg
pop
xchg
ror
mov
loope
mov
fdivr
jns
push
(bad)
std
fcomip
dec
mov
xchg
dec
outs
mov
into
in
in
loop
in
mov
out
(bad)
push
inc
inc
pop
xchg
jmp
pop
gs
xchg
push
loope
mov
or
xlat
dec
popa
(bad)
sub
ins
(bad)
sbb
loopne
adc
test
xor
sub
iret
lods
xor
ss
sbb
adc
imul
pop
fs
mov
bound
test
pop
and
retf
cmps
pop
in
pop
aas
mov
(bad)
(bad)
(bad)
call
pop
test
cs
out
sub
repnz
inc
sbb
(bad)
inc
xchg
js
daa
in
call
std
(bad)
stc
and
pop
hlt
outs
dec
idiv
fisubr
inc
and
mov
push
fsubr
outs
pop
sub
mov
sbb
(bad)
dec
cmp
sub
cmp
call
mov
sub
sbb
in
outs
stos
(bad)
fdiv
mov
sub
das
aad
in
mov
lahf
sbb
mov
pop
push
ficomp
rcl
and
mov
das
cli
pop
xor
retf
movs
jne
lahf
xor
(bad)
(bad)
dec
dec
inc
push
mov
fistp
xchg
fisttp
(bad)
jg
or
push
xchg
std
iret
mov
je
xchg
(bad)
inc
ins
jns
cs
(bad)
(bad)
push
(bad)
repz
cmp
lods
stos
std
(bad)
dec
add
sbb
jmp
aas
sub
push
in
in
or
cs
xor
pop
sub
cdq
loop
fidiv
(bad)
(bad)
inc
stos
add
xchg
jmp
retf
sub
mov
lea
out
and
les
and
ret
(bad)
(bad)
(bad)
(bad)
jp
gs
call
pop
inc
aad
push
adc
(bad)
cmp
stos
jbe
xor
(bad)
jmp
or
jg
pop
test
leave
mov
enter
test
loopne
in
xchg
fistp
push
and
(bad)
sti
sub
psrld
adc
int
mov
aas
mov
mov
push
push
lahf
clc
pushf
mov
sti
dec
les
cmp
adc
or
aaa
dec
fwait
pop
adc
ja
loopne
and
idiv
clc
(bad)
(bad)
jmp
push
xor
sar
adc
sub
mov
sbb
test
dec
fwait
add
dec
(bad)
mov
xchg
or
(bad)
jmp
cmp
sub
add
(bad)
xchg
test
jecxz
sub
aaa
inc
lods
ss
or
sbb
enter
dec
(bad)
sbb
mov
nop
xor
rol
nop
cmps
jge
jl
push
jp
mov
repz
mov
pop
test
jmp
jne
test
pop
(bad)
xchg
sar
fwait
imul
cmp
sub
inc
xchg
lods
push
shl
adc
(bad)
(bad)
jmp
xchg
add
and
jle
dec
cmp
stc
push
sub
mov
dec
xor
and
mov
push
das
jp
jg
inc
fist
fistp
stos
cmp
out
movs
cli
cmp
in
pop
adc
mov
mov
(bad)
(bad)
mov
ins
adc
adc
pop
movs
jmp
retf
cmp
das
mov
(bad)
dec
inc
(bad)
enter
retf
sbb
in
fs
pop
stos
pop
lock
dec
(bad)
(bad)
in
call
or
int3
xchg
fisubr
xchg
dec
jl
or
fucomi
repnz
xchg
push
and
(bad)
mov
outs
ror
scas
xchg
test
nop
sub
mov
loop
or
cmp
sar
mov
cmp
mov
cs
jnp
out
cs
mov
jecxz
adc
(bad)
call
pop
sub
pop
mov
sub
test
push
mov
inc
mov
mov
sub
call
dec
adc
mov
sbb
sbb
xor
inc
and
mov
jmp
leave
sub
(bad)
jg
mov
adc
jp
(bad)
mov
push
cmp
cmps
iret
mov
(bad)
jo
mov
not
push
sub
pop
std
mov
fimul
arpl
cmp
pop
fisttp
aas
push
loope
sbb
in
pop
push
adc
sti
js
arpl
call
inc
cmp
xor
sub
push
mov
fdiv
repnz
mov
or
mov
mov
cli
(bad)
(bad)
(bad)
clc
icebp
gs
mov
adc
int3
mov
outs
pop
stos
in
xchg
mov
shl
int3
push
(bad)
jg
out
inc
sub
cmp
xchg
sub
sub
stos
ds
dec
cmp
(bad)
(bad)
(bad)
(bad)
call
ja
clc
sub
cmp
or
cli
or
push
popf
pushf
enter
icebp
shl
mov
(bad)
mov
je
cmc
or
js
push
ficomp
fdiv
inc
pop
movs
inc
jmp
add
(bad)
mov
sub
inc
cmp
cmp
pop
cwde
mov
pop
ins
jbe
test
(bad)
jmp
movs
test
mov
inc
mov
sub
mov
jl
(bad)
(bad)
call
test
imul
dec
fwait
mov
mov
dec
(bad)
dec
sub
(bad)
in
ret
(bad)
(bad)
jg
icebp
int3
adc
xor
cmp
mov
mov
(bad)
(bad)
(bad)
inc
mov
lahf
movs
int
mov
pop
call
inc
movs
pop
inc
push
mov
mov
adc
out
(bad)
(bad)
(bad)
jmp
leave
or
adc
adc
fcom
push
jae
jno
scas
(bad)
pop
cld
(bad)
cmp
ins
clc
pop
and
fcmovb
mov
jmp
and
movs
jno
sub
dec
mov
dec
ficom
push
pushf
dec
sub
aad
fwait
jp
jns
or
mov
(bad)
in
jmp
jnp
jmp
lock
pop
ins
mov
cwde
shr
out
clc
(bad)
call
adc
push
inc
sub
pop
sbb
pop
mov
js
test
mov
jmp
stos
push
sbb
push
or
mov
in
loopne
(bad)
daa
je
mov
fbld
add
cli
jg
dec
lods
out
gs
rcr
xchg
cmps
(bad)
dec
cmp
sub
adc
scas
sahf
fdiv
enter
push
cmp
sub
jnp
sbb
(bad)
jmp
fist
pop
ja
pop
push
ret
and
out
mov
jg
ins
pop
imul
xchg
add
(bad)
(bad)
(bad)
mov
mov
ins
jle
xor
loope
sub
js
(bad)
(bad)
(bad)
dec
sub
jae
out
inc
xor
and
pop
mov
inc
jbe
or
(bad)
(bad)
call
jbe
retf
scas
mov
js
xor
(bad)
push
dec
xchg
call
mov
adc
sub
leave
push
xchg
add
cmp
imul
(bad)
cmps
xchg
dec
jnp
push
sub
mov
mov
cmc
(bad)
(bad)
fidivr
pop
fld
(bad)
mov
mov
data16
lods
sub
cmp
(bad)
mov
mov
(bad)
pop
mov
retf
mov
fcomip
call
lods
jmp
dec
xchg
and
sub
iret
into
lods
cmps
stos
jp
jg
cmc
(bad)
jmp
mov
jp
fisttp
cs
mov
jmp
mov
cs
movs
mov
stos
sbb
js
sar
jmp
xchg
mov
mov
sub
aas
daa
sahf
std
mov
adc
or
(bad)
(bad)
jmp
jb
or
xor
imul
addr16
sbb
popf
pop
enter
(bad)
(bad)
inc
repnz
mov
stc
xchg
xor
repnz
dec
cdq
ss
and
outs
clc
call
sub
jnp
mov
sub
les
imul
mov
mov
(bad)
(bad)
(bad)
jmp
stos
pop
sahf
das
lock
push
xor
inc
int3
iret
mov
cmps
jp
in
add
(bad)
cmp
jle
xchg
xor
(bad)
mov
xchg
dec
sub
cwde
xchg
das
or
mov
sbb
retf
out
mov
(bad)
addr16
sub
push
(bad)
call
xor
sbb
(bad)
fidiv
adc
popa
dec
movs
scas
xor
jmp
and
xchg
or
and
push
and
loopne
sar
clc
dec
scas
xchg
push
rcl
stos
test
clc
sbb
jbe
(bad)
(bad)
jmp
mov
mov
int
into
out
mov
cmp
iret
(bad)
icebp
jle
adc
(bad)
dec
repnz
add
xchg
aam
(bad)
add
(bad)
sub
lock
sbb
mov
fcomi
out
and
std
mov
mov
imul
mov
iret
in
push
jmp
scas
add
lods
clc
mov
sub
fisub
(bad)
(bad)
call
xchg
mov
daa
add
stos
das
push
int3
daa
mov
cmp
push
ficomp
(bad)
out
xor
cwde
lea
fimul
jmp
or
cmp
(bad)
(bad)
push
cmovnp
xor
(bad)
fcmovbe
leave
es
and
repnz
inc
sub
fcomip
(bad)
(bad)
mov
std
add
cdq
out
jmp
cmp
lea
(bad)
out
clc
call
inc
scas
mov
mov
iret
lds
sub
lock
cmp
cmp
sahf
or
fs
or
(bad)
(bad)
jg
pusha
xlat
(bad)
into
pop
ds
sub
pop
jns
fimul
scas
fs
and
add
inc
call
mov
(bad)
(bad)
call
into
mov
xchg
mov
push
out
les
push
jns
rol
popf
ret
jmp
ins
dec
pushf
push
mov
mov
in
jo
arpl
xchg
mov
push
mov
stc
adc
or
xor
sub
into
jl
in
sub
cmp
cld
(bad)
push
pusha
jmp
icebp
jmp
loop
pop
xchg
cli
cmp
sub
pop
aam
(bad)
mov
mov
pop
stos
fsubrp
lods
test
adc
(bad)
(bad)
(bad)
call
mov
stos
sbb
ror
cmps
sbb
(bad)
mov
xchg
lea
(bad)
(bad)
(bad)
push
jbe
retf
push
dec
mov
lods
push
jb
jnp
(bad)
cmp
movs
scas
pop
hlt
mov
iret
das
sar
mov
inc
push
pop
(bad)
cli
pop
and
pop
cmps
(bad)
pop
jne
jle
dec
inc
(bad)
(bad)
(bad)
call
das
pop
and
stos
mov
and
xor
jo
clc
or
pop
cmp
adc
xchg
and
ins
je
gs
sbb
xchg
(bad)
push
icebp
sbb
call
mov
stos
inc
retf
in
xlat
jns
(bad)
dec
loopne
mov
nop
lds
in
out
xchg
shl
xor
je
xchg
xor
pop
and
adc
sti
clc
jp
sar
call
sbb
test
rcl
adc
sub
outs
rcl
imul
int3
sub
jmp
iret
in
in
clc
cld
push
(bad)
mov
test
pusha
outs
cmp
mov
scas
jmp
add
jg
add
or
js
rcl
pop
stos
stos
adc
lods
mov
scas
mov
or
stos
and
xchg
xchg
sub
test
call
call
push
jmp
or
pusha
xor
hlt
outs
pushf
fwait
int
cmp
scas
jmp
clc
clc
push
test
or
test
hlt
(bad)
jmp
test
fisubr
mov
adc
xchg
sub
sub
push
xchg
daa
mov
(bad)
(bad)
fist
sahf
js
jo
jge
jmp
push
scas
mov
push
jmp
dec
test
or
jmp
(bad)
jmp
cli
fnstcw
sbb
jmp
aas
in
push
or
(bad)
push
ror
xchg
jmp
mov
mov
stos
push
xor
cmps
push
std
push
test
(bad)
(bad)
call
test
out
stc
test
repz
cmc
jmp
loope
out
js
lock
jg
xor
shl
jmp
xchg
jg
test
dec
mov
sbb
sub
jg
(bad)
(bad)
push
mov
cmp
stos
clc
clc
stos
mov
ret
adc
or
cld
fcomip
aas
mov
(bad)
in
dec
pop
(bad)
adc
stos
pop
aaa
clc
(bad)
(bad)
(bad)
dec
push
pop
mov
into
sbb
inc
gs
hlt
out
and
sahf
push
cmp
icebp
and
jecxz
nop
in
outs
mov
sub
mov
xchg
ins
fisttp
xchg
(bad)
call
lods
sub
push
mov
in
fisub
call
and
(bad)
jmp
mov
sub
cmp
cmp
pushf
es
dec
lods
cwde
or
ins
jb
mov
pop
mov
sub
loope
sbb
sub
jns
mov
ins
fwait
mov
aas
nop
fnsave
(bad)
dec
xchg
sar
test
scas
clc
(bad)
jmp
and
mov
push
jmp
lods
arpl
fwait
xchg
mov
xchg
retf
dec
pop
(bad)
(bad)
(bad)
(bad)
mov
sar
sbb
or
jnp
loope
sahf
daa
sahf
sub
sub
test
cmp
add
(bad)
jg
not
ret
rcr
mov
sbb
mov
test
cld
mov
cmp
lds
(bad)
(bad)
(bad)
jmp
dec
jae
xchg
cld
pushf
and
sub
mov
call
lods
dec
push
pop
mov
imul
jl
lock
sbb
mov
mov
(bad)
(bad)
(bad)
push
retf
aad
xor
mov
inc
stos
sub
xor
pop
cmp
retf
mov
and
(bad)
(bad)
dec
or
inc
fidivr
in
repz
push
aas
pop
(bad)
mov
push
mov
push
(bad)
fbld
mov
enter
out
mov
int3
sub
lock
(bad)
fisttp
push
stos
xchg
cmp
or
sbb
scas
sbb
fmul
xor
outs
shl
or
mov
mov
mov
stos
xlat
dec
enter
test
(bad)
(bad)
fcomip
fisubr
jg
cli
dec
das
mov
xlat
dec
clc
pop
sub
fidivr
sahf
stos
retf
push
pop
call
std
mov
inc
sub
loope
jbe
das
js
xchg
jbe
sti
aaa
icebp
fldcw
sar
movs
movntq
out
xchg
sub
push
pop
sub
test
aas
sub
das
je
(bad)
(bad)
push
sub
pop
add
push
inc
cld
push
cmp
fcomp
fcom
mov
cwde
stos
scas
sar
(bad)
dec
cmps
loopne
and
pop
inc
repnz
clc
lods
mov
push
lock
(bad)
(bad)
cmp
pop
push
lahf
cwde
imul
popf
test
sbb
scas
push
jmp
jg
mov
call
add
ret
mov
sub
pop
loop
movs
in
mov
idiv
hlt
add
das
fwait
stos
fstp
add
push
ror
inc
pushf
push
lods
popa
adc
cmp
xchg
push
ror
xchg
outs
fucomip
rcl
mov
push
cmp
call
lahf
dec
out
ficomp
(bad)
(bad)
(bad)
call
clc
mov
add
and
shr
(bad)
hlt
and
push
hlt
jo
(bad)
(bad)
(bad)
(bad)
dec
fnstenv
repz
xor
imul
sbb
push
fcmovnu
(bad)
sti
sbb
mov
call
mov
test
sub
(bad)
lds
(bad)
into
lods
(bad)
mov
jl
push
add
in
inc
dec
push
cmp
das
xchg
outs
jb
in
lahf
pop
cmps
sub
cli
(bad)
jmp
les
(bad)
rcl
int3
inc
jp
adc
dec
outs
adc
call
sub
jmp
dec
js
lods
adc
adc
(bad)
(bad)
in
sbb
ins
es
rcr
push
ret
mov
jmp
dec
sub
mov
(bad)
mov
cmp
dec
xchg
stos
inc
bound
jne
je
scas
sbb
je
pop
mov
push
mov
xchg
movs
mov
(bad)
(bad)
(bad)
(bad)
inc
xor
mov
leave
nop
ins
fisubr
mov
clc
sub
adc
mov
ret
xchg
jmp
cmp
repnz
in
fisttp
pop
icebp
xchg
adc
aas
inc
lods
fisubr
or
mov
cmc
mov
lock
lods
mov
mov
jb
mov
push
dec
adc
jg
movs
add
mov
sub
cmp
shr
inc
sub
(bad)
in
cdq
push
xchg
das
loop
lock
fxch
xor
xor
cmps
fnstcw
(bad)
jg
dec
mov
xor
jo
xchg
lea
mov
cwde
jg
retf
popw
cld
(bad)
inc
xchg
mov
mov
mov
mov
push
ins
mov
cmp
jmp
rcr
fnstenv
(bad)
jmp
pop
cmp
popf
push
shl
cmp
test
jmp
adc
mov
lock
clc
(bad)
jg
es
ja
int
scas
lods
jmp
jnp
push
push
scas
xor
lds
cmp
pop
jmp
scas
cli
das
jbe
sub
jl
xchg
xchg
lock
xchg
jns
lahf
cdq
repnz
aam
jl
(bad)
(bad)
call
ins
and
mov
dec
bound
push
retf
es
(bad)
mov
dec
mov
jne
pop
jp
int
jae
mov
into
imul
cmp
jmp
call
test
test
test
loopne
(bad)
(bad)
(bad)
mov
enter
and
dec
push
imul
jl
retf
(bad)
(bad)
(bad)
call
daa
ret
movs
sub
pop
test
mov
scas
mov
mov
fmul
cs
stos
add
test
add
mov
add
test
(bad)
jmp
fcom
imul
jmp
mov
ins
mov
pop
push
(bad)
(bad)
jg
popf
outs
cmps
push
cmp
sbb
lahf
cmps
jmp
jo
jmp
push
dec
sub
pop
outs
nop
movs
(bad)
(bad)
jmp
mov
xchg
and
or
nop
lods
pop
mov
lahf
and
(bad)
jmp
inc
out
test
daa
or
loop
pop
adc
call
xor
xchg
test
mov
push
stos
jp
sbb
(bad)
(bad)
(bad)
(bad)
clc
add
push
addr16
fidivr
repnz
stos
imul
sub
rsm
icebp
cmp
(bad)
(bad)
(bad)
dec
inc
mov
adc
adc
mov
call
sub
and
xchg
out
sub
ror
(bad)
(bad)
call
loop
stos
imul
call
in
scas
ss
cmps
mov
js
test
push
fld
sbb
mov
test
stc
and
jmp
sub
adc
jp
mov
xor
inc
adc
dec
cmp
out
lahf
js
stos
push
jmp
sub
mov
outs
pop
or
pop
pushf
xchg
in
mov
push
mov
mov
mov
mov
or
inc
mov
test
cmp
call
mov
sbb
sbb
lods
jp
dec
jmp
jg
mov
mov
mov
mov
cs
call
pop
sahf
iret
test
lods
inc
dec
sti
cmp
stos
dec
sahf
test
jmp
enter
movs
lods
adc
movs
lds
push
mov
mov
cmp
xchg
cli
lahf
fidiv
xchg
(bad)
(bad)
(bad)
call
jae
(bad)
in
mov
jmp
jbe
call
push
into
jmp
sbb
sbb
xor
jg
push
out
pop
xchg
cli
stos
sbb
cmps
dec
imul
jmp
out
cld
lock
ret
mov
add
scas
mov
retf
jl
pop
sub
shl
test
cli
out
clc
sub
hlt
mov
add
mov
ror
or
fwait
xchg
movmskps
int3
(bad)
fst
jmp
sub
leave
lods
xlat
sub
xor
cmps
cmps
retf
in
sar
inc
add
lahf
or
cwde
gs
iret
add
cmps
adc
(bad)
(bad)
jg
lods
and
push
out
retf
outs
push
push
call
add
sub
sub
lock
das
xchg
icebp
add
jmp
jp
jecxz
fcomi
sbb
or
dec
mov
push
cs
cli
mov
clc
jl
(bad)
push
fisttp
test
not
cmps
(bad)
(bad)
(bad)
mov
xor
inc
cld
adc
mov
jno
or
movs
jmp
cld
(bad)
(bad)
mov
mov
ins
dec
jae
stos
retf
pop
fmul
xchg
cmps
stc
push
scas
xchg
jne
push
lock
mov
sahf
sub
xor
mov
stos
sbb
cmp
(bad)
(bad)
jmp
movs
adc
add
scas
(bad)
mov
mov
pop
(bad)
aas
or
cmps
fs
adc
jg
sbb
sub
fsubrp
adc
add
adc
mov
(bad)
and
cmp
inc
jg
ins
std
test
fidivr
cwde
scas
fsubr
xor
mov
cld
jmp
ja
mul
in
jbe
inc
sub
fistp
mul
jnp
cs
(bad)
call
or
test
jnp
popa
sbb
or
fwait
inc
cdq
iret
mov
or
pop
inc
cli
or
xchg
fstp
(bad)
mov
(bad)
(bad)
(bad)
push
pushf
push
retf
fdiv
pop
push
clc
xor
mov
(bad)
(bad)
(bad)
(bad)
fmul
and
in
aam
adc
jp
inc
or
xchg
sbb
cmps
and
inc
std
(bad)
mov
fcmovu
mov
fcomp
jmp
stos
scas
jmp
(bad)
(bad)
(bad)
jmp
sub
jle
rcr
(bad)
push
out
test
fwait
push
leave
mov
sahf
adc
repz
jb
dec
jmp
(bad)
xchg
dec
lods
retf
dec
pusha
xor
mov
ret
sub
int3
fwait
out
lock
rol
(bad)
(bad)
(bad)
in
xchg
inc
cmp
scas
cli
adc
out
aas
add
rcr
sub
imul
sbb
enter
icebp
mov
(bad)
lea
sbb
dec
cld
push
lock
jge
inc
aaa
mov
scas
pop
cdq
pushf
sub
test
jp
repnz
lods
dec
pop
fcomip
(bad)
dec
xchg
popa
pop
repnz
jg
push
and
xchg
(bad)
mov
push
sub
sub
dec
cmps
repz
sub
(bad)
(bad)
(bad)
dec
sub
inc
cmp
cmc
mov
clc
cmc
xchg
mov
das
test
and
cmp
jmp
clc
jmp
mov
outs
push
add
dec
sub
das
push
(bad)
dec
and
call
or
leave
jle
push
mov
add
fcomp
ror
ret
cmp
stos
loope
jmp
inc
mov
(bad)
add
push
xchg
and
dec
out
dec
pop
int
cmp
fcomip
inc
jl
icebp
repnz
inc
(bad)
(bad)
(bad)
push
xor
and
add
inc
fst
mov
repnz
in
add
movs
into
(bad)
(bad)
(bad)
jmp
sub
mov
and
pop
xchg
jmp
add
cmps
stos
pop
dec
add
dec
shl
dec
adc
lahf
daa
cmc
lods
jbe
(bad)
(bad)
(bad)
call
mov
mov
stos
mov
pop
mov
mov
mov
jle
out
aad
xchg
addr16
test
push
repnz
mov
push
or
test
push
xchg
push
shr
ins
push
jl
(bad)
mul
or
(bad)
jmp
mov
jmp
ins
rcr
fldcw
inc
add
xor
sub
cmp
stos
cmp
cmp
mov
inc
or
jno
in
popf
scas
pushf
cs
jmp
pop
mov
mov
cld
cmps
and
scas
arpl
push
mov
jae
inc
test
sbb
fidiv
cmp
sub
lock
clc
push
mov
pop
mov
pop
and
or
bound
or
jmp
shl
mov
sub
inc
fild
cmp
mov
push
mov
stos
and
jp
mov
(bad)
mov
cli
imul
inc
stos
stc
fimul
mov
cmps
out
pop
aam
into
xchg
(bad)
(bad)
(bad)
jmp
shl
call
fldenv
shr
das
sub
lods
jmp
and
not
movs
mov
(bad)
jmp
mov
adc
jns
cmp
mov
dec
and
(bad)
mov
(bad)
call
mov
mov
ffree
add
in
sbb
dec
xchg
(bad)
(bad)
(bad)
call
jmp
sub
and
pop
xor
push
jmp
add
adc
mov
repnz
push
sbb
pop
(bad)
loop
mov
call
or
stos
inc
leave
fistp
ins
movsx
mov
sbb
sahf
mov
ret
cmps
cmp
xchg
xor
in
push
fmul
push
fmul
scas
xchg
call
lock
ror
out
enter
pop
mov
(bad)
mov
jg
(bad)
movs
call
mov
int3
mov
fmul
or
ret
in
(bad)
jmp
clc
cmp
stos
pop
shr
shl
pusha
dec
inc
mov
pusha
mov
test
or
sbb
(bad)
(bad)
jmp
jbe
retf
sbb
sbb
ret
(bad)
fimul
push
outs
or
pop
xchg
in
into
mov
jg
push
fadd
ds
add
mov
(bad)
repz
in
jne
lahf
xchg
jne
std
ficom
(bad)
(bad)
(bad)
mov
daa
sub
shl
sbb
xchg
xchg
pop
fild
clc
outs
and
outs
pop
repnz
movs
xor
push
cld
addr16
push
loopne
call
(bad)
mov
pop
mov
mov
sbb
mov
(bad)
not
cdq
lock
std
(bad)
jmp
sub
add
and
mov
mov
push
jo
jmp
sbb
or
in
inc
xchg
mov
test
mov
xchg
mov
call
xlat
ss
mov
shl
sub
or
mov
cmp
not
jge
pop
ret
test
jg
adc
retf
leave
das
lods
adc
(bad)
(bad)
inc
mov
hlt
mov
dec
pop
into
inc
stc
mov
fldenv
out
and
imul
sti
clc
hlt
sbb
jmp
int
xchg
sub
adc
xor
xchg
push
cmp
std
jmp
mov
inc
mov
imul
mov
(bad)
push
cmps
scas
std
mov
rep
xchg
sub
mov
jg
imul
icebp
xchg
push
cli
push
jmp
jne
sub
push
push
mov
(bad)
scas
clc
cmps
mov
mov
ss
sbb
out
adc
push
or
scas
adc
adc
iret
push
imul
sbb
(bad)
fistp
mov
rcr
add
stos
(bad)
out
mov
stc
mov
jbe
pop
push
enter
mov
(bad)
(bad)
dec
dec
sahf
adc
popf
push
mov
aaa
push
sbb
fbstp
stos
(bad)
(bad)
(bad)
mov
outs
fmul
mov
mov
adc
or
lahf
xchg
cs
pop
sub
add
iret
sbb
pop
movs
out
(bad)
jg
dec
cmp
jne
dec
jg
ret
mov
mov
or
jno
xchg
mov
dec
xor
test
loop
ror
(bad)
jmp
ins
sbb
scas
fsubr
dec
sub
(bad)
mov
mov
movs
mov
paddb
cmp
cs
idiv
(bad)
(bad)
inc
pop
fistp
fcom
addr16
sub
jl
std
or
icebp
iret
mov
dec
mov
cmp
fisub
jmp
push
imul
xor
push
mov
push
push
push
add
cmc
(bad)
(bad)
jmp
pop
cmp
es
fnstsw
stc
and
mov
mov
mov
loop
inc
fdivr
ret
test
mov
out
cli
push
(bad)
xor
cmc
push
mov
xor
aad
sbb
cld
push
xor
pop
movs
mov
pop
(bad)
(bad)
(bad)
dec
push
outs
xchg
dec
retf
add
mov
jmp
jmp
test
dec
jmp
ror
adc
in
addr16
neg
sub
aad
call
(bad)
sub
das
repz
test
xchg
rcl
adc
test
pop
jp
(bad)
(bad)
(bad)
inc
adc
test
cmps
(bad)
adc
call
mov
push
cld
dec
test
inc
sub
and
cdq
outs
mov
push
daa
hlt
push
mov
push
outs
mov
(bad)
(bad)
(bad)
jg
and
retf
xchg
adc
aam
sbb
dec
sub
adc
and
(bad)
(bad)
(bad)
call
mov
mov
mov
js
cmps
mov
dec
sub
mov
xlat
mov
out
out
mov
push
mov
call
jb
pop
cmc
jcxz
stos
mov
call
mov
mov
(bad)
(bad)
(bad)
jmp
sub
sub
pop
ja
pusha
test
or
sti
call
pop
(bad)
dec
cld
(bad)
(bad)
in
or
cwde
mov
cmp
mov
lods
jmp
aaa
cld
call
cmp
xchg
fcmovne
fild
loopne
out
cdq
stos
dec
(bad)
(bad)
(bad)
(bad)
ds
xor
test
pop
pop
and
fdivr
ins
sti
hlt
pop
fsub
int
mov
cmps
std
es
das
or
lods
fwait
dec
mov
or
js
cmp
scas
push
retf
mov
lock
sub
pushf
sbb
(bad)
mov
ror
add
test
adc
or
pop
cld
xor
jg
(bad)
outs
call
test
icebp
stos
inc
stos
pop
and
loop
cli
test
lods
jl
clc
cmp
jle
fs
int3
adc
clc
stc
scas
(bad)
fisubr
dec
call
adc
sub
repnz
mov
jb
mov
lock
xchg
push
xor
div
cwde
xchg
aaa
hlt
or
cmc
pop
sub
cmp
mov
cmps
clc
outs
stos
nop
out
and
jnp
in
mov
repz
(bad)
gs
jle
mov
test
mov
stos
(bad)
(bad)
(bad)
dec
jmp
xchg
std
test
out
jmp
jb
not
test
mov
(bad)
(bad)
xor
adc
in
and
jb
and
pop
sub
loope
mov
fs
mov
sbb
pop
retf
(bad)
jmp
mov
push
movs
inc
mov
dec
mov
and
and
push
retf
cmp
sub
jmp
cli
popa
mov
mov
xor
jecxz
mov
into
push
jg
lods
mov
ds
jae
dec
adc
adc
fmul
and
add
mov
(bad)
call
std
lods
and
fist
lahf
or
mov
cld
call
push
cmp
add
ss
sub
pop
push
hlt
inc
push
cs
mov
cmp
or
movs
jmp
jne
mov
movs
enter
cwde
(bad)
(bad)
mov
dec
cli
jno
mov
test
xchg
test
sub
imul
scas
cwde
cld
(bad)
jnp
nop
out
iret
mov
hlt
popa
lock
push
shr
clc
(bad)
(bad)
push
mov
fistp
ret
out
(bad)
fldcw
movs
jmp
mov
inc
scas
or
(bad)
call
add
sub
mov
stos
inc
sbb
ins
mov
mov
clc
jmp
sbb
xor
rol
cli
aam
push
fldl2e
jns
or
stos
jl
aad
pop
stc
into
sbb
cmp
pop
mov
push
inc
sub
add
call
jp
imul
ror
fsubr
(bad)
out
mov
bound
dec
mov
mov
scas
shl
jmp
pop
scas
xchg
sbb
push
imul
call
jle
in
push
test
call
sub
sbb
aam
pushf
xor
inc
sbb
cld
jg
add
cs
(bad)
(bad)
call
(bad)
fcmovu
call
test
call
lods
sahf
popa
mov
ret
aaa
(bad)
(bad)
jmp
in
pop
les
mov
sar
xchg
mov
sub
(bad)
(bad)
(bad)
jmp
dec
adc
movs
std
call
mov
repz
call
jno
push
fistp
call
jmp
bswap
lods
iret
shl
or
lea
adc
mov
mov
pop
rol
fldenv
out
aaa
loop
pusha
xor
inc
fs
mov
stos
lods
mov
(bad)
call
fild
out
pop
add
sbb
sub
and
das
rol
out
(bad)
xchg
jo
mov
(bad)
jmp
add
enter
dec
xor
repz
lea
shr
(bad)
(bad)
call
ret
cwde
sub
in
xchg
scas
inc
cs
std
imul
in
out
(bad)
inc
sbb
ret
mov
in
call
loopne
push
nop
popa
clc
mov
icebp
adc
sbb
cmp
mov
jp
ror
fsub
jecxz
mov
mov
(bad)
(bad)
(bad)
(bad)
clc
in
jns
out
xor
call
es
shr
sub
fs
sub
pop
(bad)
pusha
adc
jmp
std
shr
or
jle
frstor
jp
push
sti
ds
mov
fs
(bad)
inc
push
pushf
js
mov
mov
lods
mov
mov
adc
dec
sub
sbb
sbb
out
cld
scas
mov
cld
call
pop
loopne
jmp
call
stos
jne
(bad)
jg
or
inc
and
push
imul
xor
stos
call
call
adc
(bad)
cld
xchg
xchg
jmp
mov
mov
jmp
mov
sub
sub
push
mov
xor
push
pop
cmp
dec
(bad)
(bad)
(bad)
(bad)
out
enter
mov
repnz
xchg
xchg
shl
mov
mov
or
cmp
jb
cs
and
outs
and
push
test
push
(bad)
call
int3
jg
sbb
push
ficomp
mov
adc
sbb
jp
xor
fistp
jecxz
jo
xchg
cmp
dec
outs
mov
xchg
in
dec
add
cmp
ss
(bad)
(bad)
jmp
(bad)
and
inc
mov
adc
push
bound
pop
dec
mov
fdiv
inc
out
fistp
icebp
push
mov
mov
push
mov
aaa
jg
mov
push
in
adc
xor
dec
dec
movs
inc
xor
pop
push
ds
inc
(bad)
(bad)
(bad)
jmp
mov
sub
(bad)
jnp
pop
xchg
adc
xor
xchg
rcr
lods
icebp
push
xor
stos
sahf
sub
mov
mov
and
std
pop
jb
mov
std
adc
or
das
sar
loopne
cld
jns
cs
test
in
cmps
cli
pop
movs
outs
jmp
(bad)
fld
(bad)
mov
jae
xchg
add
into
por
fwait
stos
(bad)
(bad)
mov
and
inc
adc
js
mov
std
ja
rcl
mov
push
pushf
pop
cli
imul
sub
push
int3
sub
(bad)
xor
sub
shl
and
sub
sub
stos
cwde
cmp
call
sub
js
mov
or
in
(bad)
fcomip
pop
add
out
sub
pushf
leave
stc
(bad)
hlt
mov
mov
(bad)
(bad)
(bad)
call
stc
jae
js
mov
popf
bound
lock
in
(bad)
cpuid
lods
cmp
pop
push
(bad)
(bad)
(bad)
dec
adc
adc
rol
xchg
test
call
mov
jmp
cmp
lock
les
loop
test
pop
xchg
push
push
mov
(bad)
mov
loop
jo
xor
sub
cmp
xchg
jmp
stos
repz
jmp
jmp
mov
mov
imul
js
or
(bad)
(bad)
inc
inc
cmps
and
mov
sub
push
(bad)
jmp
sbb
int
adc
jp
(bad)
scas
cmps
ja
shl
mov
dec
mov
xchg
pop
shl
xor
enter
(bad)
pop
jl
jmp
xchg
inc
sbb
fldenv
icebp
iret
ror
xlat
mov
call
out
push
cld
in
in
scas
add
xchg
test
cmp
and
jo
scas
in
sahf
(bad)
(bad)
(bad)
jmp
push
lahf
mov
(bad)
push
push
xor
stc
repnz
dec
mov
jae
clc
cmp
in
inc
cld
jmp
or
sbb
add
dec
(bad)
(bad)
(bad)
out
test
aad
jp
std
sbb
test
mov
mov
mov
cmp
es
mov
aaa
mov
jo
push
icebp
jne
fistp
dec
fs
(bad)
(bad)
inc
mov
mov
mov
and
mov
outs
xchg
pop
lock
pop
loopne
push
dec
cmps
sar
neg
call
out
mov
(bad)
(bad)
push
push
sub
retf
and
iret
push
mov
mov
dec
nop
fdivr
push
fdivr
mov
pop
inc
pop
clc
nop
pop
enter
(bad)
(bad)
(bad)
(bad)
mov
xor
fwait
fwait
and
jmp
jmp
enter
mov
mov
adc
push
jecxz
inc
push
xor
shr
fucom
xor
pop
dec
add
in
inc
sub
cmp
stc
sbb
test
mov
jae
xchg
ret
push
jp
addr16
rcr
(bad)
(bad)
(bad)
test
aad
sub
mov
jmp
cmp
lahf
inc
(bad)
mov
ss
and
push
pop
sub
das
mov
jmp
(bad)
call
xchg
test
lock
sub
jecxz
in
pusha
mov
std
jmp
(bad)
mov
(bad)
movs
xchg
and
jnp
xchg
fcmovbe
fisubr
stos
test
pop
mov
mov
sar
(bad)
(bad)
call
mov
stos
arpl
je
jne
inc
in
dec
in
stc
cmp
pop
sub
in
inc
jecxz
hlt
call
rcr
sub
adc
add
call
jl
lahf
pop
(bad)
fadd
jp
jg
test
repnz
(bad)
call
sub
inc
test
ds
and
fld
cmp
mov
(bad)
call
loopne
(bad)
addr16
or
xchg
pop
das
das
bnd
in
or
xchg
push
mov
sub
mov
sub
jmp
mov
dec
(bad)
inc
(bad)
sti
sbb
repnz
lods
or
jle
arpl
in
out
out
sbb
(bad)
(bad)
dec
retf
sti
iret
ss
sbb
add
or
push
loope
(bad)
fild
call
cli
es
inc
outs
dec
popa
leave
loopne
lods
bnd
sbb
inc
std
xor
sbb
dec
(bad)
(bad)
jg
jbe
call
push
mov
jno
xor
xchg
inc
aas
cmp
repnz
jno
(bad)
clc
sti
mov
data16
jmp
(bad)
inc
(bad)
(bad)
jmp
repz
dec
jmp
jae
sahf
xor
sbb
rol
mov
(bad)
(bad)
(bad)
jmp
or
sbb
xchg
mov
mov
xor
(bad)
sbb
cld
(bad)
jmp
mov
push
inc
adc
out
push
fcom
aam
or
jg
xchg
cwde
cmp
sub
cmc
call
outs
push
int3
pop
mov
cdq
mov
and
sub
(bad)
jmp
daa
mov
cmps
or
sti
neg
out
jmp
dec
add
mov
movs
jecxz
pop
xchg
sub
fwait
(bad)
inc
push
movs
sbb
jle
mov
outs
and
xor
mov
dec
lock
sub
xchg
test
ins
retf
jmp
scas
jmp
dec
fistp
movs
push
mov
pop
sahf
mov
data16
mov
push
call
fisttp
test
mov
retf
movs
ret
retf
dec
out
in
loopne
or
enter
call
cs
fst
xchg
sub
mov
fisubr
ret
mov
call
push
sub
push
add
inc
dec
fmul
pop
cmp
lods
cmp
inc
pop
(bad)
(bad)
inc
adc
add
mov
mov
jno
mov
pop
and
cmp
(bad)
jg
sub
loop
xor
icebp
pop
ficom
stos
inc
fstp
hlt
add
in
pop
mov
sub
pop
sahf
push
repz
pop
(bad)
pop
mov
fdivp
inc
xor
scas
ins
daa
repnz
cmp
out
push
shl
clc
fst
sbb
js
sub
(bad)
(bad)
jmp
movs
imul
std
or
imul
xchg
call
inc
pop
out
pop
jo
xchg
(bad)
call
mov
or
cs
sti
sbb
ds
pop
ins
ins
call
cdq
push
sub
(bad)
out
clc
inc
lahf
mov
sub
mov
add
push
jo
scas
mov
xor
jmp
movs
mov
out
js
hlt
imul
(bad)
dec
push
mov
sub
adc
iret
stos
jecxz
stos
pop
adc
clc
(bad)
call
push
pop
sub
xor
mov
or
(bad)
std
xor
ins
cmps
psrld
xchg
clc
outs
mov
bound
sbb
retf
mov
inc
mov
daa
cli
adc
cmp
out
cmps
(bad)
sti
mov
loop
(bad)
push
cld
mov
aas
mov
fisubr
int
or
aad
push
fs
ja
cli
push
imul
jp
js
rcr
mov
ret
cmps
cli
call
mov
loope
arpl
sbb
mov
and
aaa
sar
out
dec
sub
inc
push
mov
retf
std
call
ins
(bad)
sbb
xor
xchg
nop
sbb
cld
lds
cmp
in
shl
(bad)
mov
aas
fwait
lods
sbb
sar
int
test
imul
sub
push
inc
call
and
lahf
iret
clc
imul
xor
lods
inc
cmp
xchg
add
stos
aam
jmp
lea
dec
aas
jecxz
cld
fimul
jmp
mov
jo
lods
cmp
fsubrp
std
fisttp
leave
fcom
out
lock
adc
ds
fwait
sub
push
mov
test
test
in
sahf
popa
dec
sub
(bad)
(bad)
jmp
loope
sub
mov
arpl
fwait
push
dec
sub
test
sub
dec
adc
(bad)
jmp
push
push
push
aaa
xchg
xor
leave
in
int
jmp
in
xchg
int3
mov
in
(bad)
(bad)
(bad)
jmp
xchg
add
cmp
or
cmp
cs
sub
jge
adc
(bad)
(bad)
mov
mov
sar
jnp
or
mov
mov
scas
push
icebp
mov
dec
push
mov
(bad)
adc
test
daa
mov
jmp
jmp
arpl
pop
or
das
out
adc
fdivr
or
js
or
sub
repnz
xchg
data16
jbe
outs
xchg
sub
mov
pop
int3
mov
add
dec
jmp
pop
pop
mov
(bad)
jg
ret
test
mov
or
scas
lods
mov
aas
pop
jp
iret
test
mov
(bad)
(bad)
(bad)
call
jmp
mov
cli
pop
cmp
in
stos
add
inc
stos
add
mov
stc
ret
(bad)
(bad)
push
jmp
lods
cmc
or
into
or
push
sub
mov
and
call
fcomp
push
retf
mov
cmps
mov
jmp
mov
fimul
mov
loope
(bad)
icebp
call
jnp
pop
dec
mov
fbld
imul
iret
mov
call
fisubr
sub
call
shr
hlt
vpcomq
loopne
jmp
(bad)
(bad)
dec
ins
mov
and
xor
call
cmps
(bad)
call
mov
ins
cmp
and
pop
mov
dec
aas
pop
mov
(bad)
(bad)
jmp
dec
je
stos
enter
xchg
xchg
call
or
in
and
test
call
sar
(bad)
call
mov
neg
adc
push
pushf
lahf
xchg
and
(bad)
outs
sub
popf
xchg
lock
pop
ds
loopne
mov
or
(bad)
(bad)
call
cmp
cdq
stos
mov
mov
das
ins
call
popa
stos
jge
mov
and
pop
or
arpl
sub
sti
call
les
cmp
mov
xlat
xchg
fwait
std
cld
hlt
mov
(bad)
jg
(bad)
cmp
jg
push
cwde
lock
(bad)
dec
enter
outs
call
lds
dec
clc
(bad)
aas
mov
pop
stos
loop
(bad)
stos
jno
(bad)
(bad)
(bad)
(bad)
out
test
pop
inc
(bad)
sbb
fnstenv
movs
ja
mov
sbb
(bad)
jmp
sub
daa
xchg
jp
leave
mov
dec
cmp
stc
jmp
mov
and
jae
rcl
fmul
and
sub
cli
and
lods
dec
push
test
shr
(bad)
inc
and
loopne
ret
xor
mov
icebp
sar
cld
mov
pop
test
fdiv
push
std
(bad)
call
push
cmps
xor
and
inc
dec
into
mov
(bad)
fistp
lock
ret
inc
stos
call
ffreep
(bad)
(bad)
sar
mov
stos
sbb
jp
sub
sar
(bad)
(bad)
jmp
push
mov
retf
fcomp
scas
push
scas
jbe
jnp
mov
ins
push
cli
pop
push
or
(bad)
jmp
clc
xchg
and
sahf
lea
outs
cld
adc
jae
mov
nop
in
pop
iret
(bad)
(bad)
(bad)
fisttp
shl
mov
in
cld
jmp
xor
jmp
push
out
cmp
jg
or
cld
pop
sbb
adc
sub
test
je
adc
xor
push
ja
dec
ret
loope
sahf
cld
push
sbb
sbb
dec
push
xor
(bad)
(bad)
mov
sar
xchg
std
sub
lods
cmp
cmp
pop
imul
das
cmp
imul
mov
(bad)
and
mov
(bad)
(bad)
(bad)
(bad)
mov
imul
retf
cmp
mov
dec
xor
scas
clc
outs
pop
out
adc
mov
mov
out
out
push
push
dec
loopne
ss
jecxz
jmp
ret
outs
ss
test
xchg
mov
mov
cmp
mov
das
dec
ss
mov
mov
pop
xchg
scas
and
cmps
(bad)
fisubr
mov
and
call
jmp
push
(bad)
or
ror
movs
out
test
fcomp
mov
imul
push
dec
mov
aam
and
test
jg
jns
and
xchg
and
inc
(bad)
(bad)
(bad)
inc
stc
out
inc
mov
mov
jmp
es
mov
in
add
(bad)
(bad)
(bad)
call
enter
push
lock
ja
mov
lahf
sub
iret
js
sub
(bad)
adc
(bad)
(bad)
inc
aas
popa
fld
mov
pcmpeqw
out
jle
daa
xacquire
cmp
hlt
mov
shr
sbb
mov
(bad)
(bad)
inc
iret
push
sub
loop
xchg
sub
imul
cmp
(bad)
aaa
(bad)
jnp
imul
mov
jmp
pop
jns
out
jmp
fidiv
sbb
lahf
stos
inc
call
add
and
(bad)
push
push
scas
aaa
jae
jns
mov
stos
ja
cmp
idiv
call
into
daa
mov
outs
call
je
sub
das
cmp
inc
cmp
mov
pop
loop
call
cmps
(bad)
(bad)
(bad)
dec
mov
xchg
jp
or
adc
jb
call
mov
push
jmp
test
push
rcl
(bad)
(bad)
dec
mov
loopne
push
pmaxsw
dec
scas
push
cmp
mov
popf
jge
ins
xchg
pop
(bad)
(bad)
(bad)
call
adc
sti
and
push
pop
loopne
adc
ja
out
iret
ins
push
adc
(bad)
(bad)
jmp
sahf
ret
and
and
inc
jmp
or
mov
and
xchg
dec
lods
outs
xchg
xchg
not
fisttp
add
cli
ja
xchg
mov
sub
enter
stos
vxorps
sub
call
or
or
lea
sahf
mov
lods
cmp
cmps
jns
push
xor
mov
(bad)
(bad)
(bad)
jmp
cmps
push
gs
or
ss
push
pop
call
add
dec
mov
inc
(bad)
dec
mov
out
stos
daa
int3
imul
cmp
(bad)
call
gs
lahf
sbb
push
adc
in
or
movs
inc
add
retf
sahf
pop
loope
cmp
sbb
adc
mov
(bad)
(bad)
call
das
call
fdecstp
dec
sbb
add
(bad)
das
outs
or
inc
jnp
addr16
loope
mov
test
and
call
mov
push
enter
push
xor
pop
mov
pop
das
xchg
dec
mov
jmp
(bad)
(bad)
dec
(bad)
and
loopne
scas
pusha
ins
stos
push
sbb
test
mov
lds
mov
add
mov
cmp
add
mov
push
pop
in
adc
scas
cmp
ficom
ret
fsub
call
(bad)
call
mov
xlat
pop
cmp
repnz
inc
dec
cmp
ds
push
(bad)
jmp
and
loop
jecxz
mov
test
cmp
lahf
dec
test
sar
(bad)
call
(bad)
sub
lods
cs
mov
lock
and
xor
loope
loopne
cmps
mov
mov
adc
lods
jmp
ror
jmp
cli
jo
pushf
clc
pop
push
xchg
aam
ds
dec
mov
sti
jmp
lock
pop
dec
jmp
mov
add
arpl
(bad)
(bad)
jmp
mov
test
cwde
push
imul
and
jecxz
pop
add
gs
sub
loopne
dec
dec
into
(bad)
cmp
clc
cmps
pop
ret
(bad)
fbstp
cmovl
adc
mov
xchg
popf
nop
loope
call
int
ss
fs
out
data16
(bad)
jg
into
mov
cmc
push
ret
mov
dec
sub
(bad)
cli
push
les
sets
mov
in
outs
xor
sbb
lds
push
push
sub
imul
cwde
xchg
push
std
(bad)
(bad)
mov
jmp
push
repnz
pop
clc
stos
mov
mov
iret
sub
shr
mov
into
hlt
ja
call
cmp
mov
mov
mul
jnp
retf
add
out
xor
aad
jbe
dec
(bad)
(bad)
(bad)
out
xchg
test
(bad)
dec
xor
div
sub
mov
(bad)
test
ffreep
icebp
(bad)
(bad)
call
pop
std
xor
sti
push
pop
call
call
pop
sub
(bad)
jg
cld
dec
es
das
dec
xor
int
sbb
mov
jmp
add
cmp
xchg
popf
xchg
je
out
movs
imul
(bad)
jmp
xchg
push
ss
js
dec
fld
lahf
sbb
hlt
scas
push
call
sbb
mov
loop
adc
mov
dec
pop
dec
imul
(bad)
cli
gs
fstp
sub
(bad)
(bad)
push
mov
jmp
add
push
sbb
repnz
imul
jge
(bad)
(bad)
dec
test
js
dec
mov
dec
sub
shr
fisttp
cmps
push
das
mov
(bad)
(bad)
call
rcr
les
xchg
add
(bad)
(bad)
mov
(bad)
jmp
cli
jmp
mov
cmp
mov
mov
xor
dec
jmp
pusha
std
jmp
jbe
fdivr
mov
pop
iret
ret
sub
(bad)
(bad)
jmp
fimul
bound
cmps
jmp
lahf
gs
mov
ret
xchg
clc
sub
hlt
xor
leave
inc
mov
jae
or
xor
push
retf
dec
test
fldcw
out
in
xchg
retf
push
sbb
aam
(bad)
xchg
sub
cs
arpl
dec
jecxz
fild
test
imul
dec
ficom
mov
xchg
fsub
or
iret
ins
(bad)
(bad)
call
data16
mov
scas
in
fist
int
ret
jmp
add
ret
ds
cli
jg
cli
cli
out
ins
test
test
fadd
call
shl
jb
push
aas
mov
xchg
mov
lock
(bad)
jmp
cmp
jno
inc
std
jp
dec
in
fimul
lds
sub
(bad)
(bad)
(bad)
mov
mov
pop
dec
pusha
(bad)
adc
mov
jl
cmps
jge
xor
mov
pop
add
xchg
push
leave
lods
lods
div
call
mov
mov
mov
push
es
loopne
jb
sar
call
mov
test
(bad)
pop
jmp
into
xor
rol
(bad)
jle
js
test
sahf
adc
mov
lock
cld
push
pop
mov
jmp
sbb
aam
in
xor
mov
dec
or
lock
xor
sar
(bad)
jmp
inc
cmp
mov
stc
xchg
test
jne
mov
jmp
pop
mov
inc
movs
call
retf
adc
movs
repnz
fbstp
xchg
out
xchg
jmp
mov
std
(bad)
inc
push
sbb
mov
sub
test
push
ja
(bad)
call
into
loope
in
iret
adc
pop
sbb
jnp
stos
pop
pop
mov
adc
es
xor
jg
(bad)
jmp
jnp
adc
iret
inc
add
clc
test
push
loopne
icebp
cmp
(bad)
(bad)
call
mov
pushf
mov
loop
and
cwde
mov
sub
loop
cmp
es
gs
ins
aam
js
(bad)
sub
jo
push
js
call
mov
(bad)
jg
mov
adc
shl
mov
into
popa
scas
and
mov
pushf
mov
sub
stos
std
pop
out
xor
stos
mov
lock
(bad)
xchg
xor
jl
(bad)
(bad)
call
test
fst
aaa
lea
add
jecxz
enter
cmp
mov
inc
std
jmp
xchg
fisub
pusha
mov
cmp
jp
sar
(bad)
int
cmp
movs
cdq
adc
enter
pop
into
movs
or
imul
movs
out
addr16
cmps
call
(bad)
inc
js
shr
push
popa
jne
mov
dec
cwde
and
(bad)
adc
cwde
jecxz
or
outs
test
mov
ror
mov
xchg
in
xchg
out
lea
inc
jmp
push
sub
push
(bad)
hlt
fwait
pop
or
jmp
pop
inc
pushf
(bad)
dec
cmp
xor
mov
inc
pop
cmps
adc
aam
leave
cmp
xlat
xor
cmp
je
jl
(bad)
(bad)
(bad)
fistp
mov
jp
sbb
sar
xchg
cli
pop
in
sub
call
(bad)
fstp
call
jmp
test
movs
loopne
lods
push
sub
fiadd
push
mov
(bad)
mov
push
stos
and
mov
adc
lss
jmp
dec
(bad)
scas
jge
mov
(bad)
call
mov
ds
mov
pop
(bad)
(bad)
call
cmp
mov
std
cwde
push
sub
pop
mov
js
stos
movs
fwait
mov
fdivr
jmp
cli
push
test
into
push
loop
scas
mov
jae
bts
test
test
pop
movd
shl
(bad)
(bad)
(bad)
(bad)
inc
pop
lahf
outs
leave
inc
(bad)
dec
in
sbb
frstor
and
scas
repz
sbb
fnstenv
dec
jnp
sahf
hlt
cmp
mov
lock
les
jecxz
call
test
mov
pop
fdiv
enter
push
mov
inc
out
das
scas
ins
xor
xchg
cmp
fxsave
push
sar
(bad)
(bad)
(bad)
jmp
sbb
pop
push
test
dec
sub
sbb
iret
push
movs
add
pop
lock
jg
sub
push
fisubr
sub
jecxz
mov
push
(bad)
(bad)
out
pop
es
sbb
xor
adc
into
stos
stos
outs
mov
pminub
push
sar
push
stos
mov
jge
add
inc
es
adc
xchg
retf
rcr
fadd
xchg
pop
jecxz
cmp
imul
pop
lods
(bad)
call
jp
or
sub
pushf
and
inc
sahf
ins
sbb
jle
mov
ins
push
cld
(bad)
inc
das
test
inc
pop
cmp
ins
xchg
inc
xchg
pop
enter
jg
push
cmp
(bad)
xor
push
aaa
xlat
test
xlat
bound
or
jg
pop
pop
pop
dec
retf
repz
stos
(bad)
jmp
inc
adc
push
fistp
dec
outs
lea
popa
mov
add
sub
jmp
mov
add
push
add
push
test
ins
(bad)
(bad)
jg
cmc
adc
cs
or
call
add
lods
jmp
push
and
or
mov
jae
cmps
aad
in
out
outs
xor
mov
loop
xchg
pop
mov
(bad)
(bad)
(bad)
(bad)
cmp
xchg
or
mov
jmp
sbb
fsubp
xor
push
mov
dec
and
(bad)
(bad)
dec
inc
cmps
mov
stos
inc
pop
jne
push
shrd
mov
jne
loopne
(bad)
dec
test
jns
push
mov
push
inc
call
pop
jp
repnz
jmp
pop
mov
stos
push
(bad)
push
push
push
adc
(bad)
call
inc
jp
mov
lods
ds
mov
xor
(bad)
(bad)
xchg
out
movs
jb
outs
or
jp
dec
jns
popa
out
sub
aaa
imul
loope
push
push
(bad)
out
hlt
adc
jmp
ss
imul
stos
(bad)
(bad)
(bad)
jmp
mov
push
retf
jns
out
or
inc
fcom
retf
fmul
call
enter
and
lock
movs
cli
jmp
push
jmp
jnp
out
push
or
pusha
ss
sbb
cmp
clc
(bad)
(bad)
(bad)
inc
cmp
xor
cli
std
je
setb
neg
add
xchg
pop
lds
cmps
add
fild
mov
pop
mov
push
jno
test
pushaw
jp
cmps
(bad)
(bad)
jmp
les
retf
icebp
fistp
push
or
das
js
jmp
push
and
and
mov
push
(bad)
int3
mul
cmp
and
push
push
dec
dec
mov
call
iret
xchg
adc
push
fwait
movs
dec
fwait
xor
pop
cmc
and
loope
mov
push
cs
(bad)
(bad)
dec
(bad)
pop
movs
adc
mov
push
hlt
sub
mov
scas
mov
inc
call
stos
sub
(bad)
lods
stos
adc
call
jmp
push
sar
mov
adc
mov
jle
or
js
ret
(bad)
(bad)
call
test
sbb
fisttp
dec
mov
cmp
dec
gs
and
ret
(bad)
jg
shl
xchg
leave
loop
push
or
and
adc
pop
mov
xor
aad
or
in
jns
stc
aad
cmc
xchg
(bad)
mov
repnz
(bad)
inc
xor
xchg
dec
adc
jmp
or
lods
sbb
fisttp
xor
cmc
(bad)
mov
and
fs
jo
jbe
in
retf
or
dec
mov
test
clc
jmp
lds
cmp
xchg
and
dec
int3
ds
call
imul
jmp
stc
xor
outs
mov
hlt
(bad)
jmp
push
mov
test
add
inc
(bad)
inc
cli
dec
or
outs
in
push
sub
inc
cli
pop
push
mov
or
push
mov
scas
inc
(bad)
(bad)
(bad)
jmp
test
add
xchg
es
sub
mov
jmp
mov
sub
mov
in
js
les
dec
adc
mov
dec
sbb
adc
sub
jecxz
cmp
imul
jb
pop
xor
clc
dec
and
loopne
(bad)
(bad)
(bad)
call
jp
in
stc
cmp
popf
fmul
pop
dec
arpl
mov
std
or
(bad)
out
vmovq
(bad)
(bad)
call
push
cdq
mov
push
test
mov
aam
or
(bad)
fwait
mov
(bad)
(bad)
(bad)
(bad)
fsub
fistp
or
and
das
xchg
leave
xor
cmp
sub
fistp
(bad)
(bad)
jmp
iret
xor
fdivr
in
mov
sar
xchg
out
je
sub
jmp
mov
stos
fstp
dec
or
into
rol
imul
cmp
int3
and
(bad)
(bad)
jle
retf
leave
pop
xchg
ins
scas
or
(bad)
retf
pop
les
pop
ins
add
fistp
dec
cmps
dec
in
or
jbe
retf
daa
and
(bad)
jmp
mov
call
xor
fiadd
(bad)
jg
jmp
dec
cld
pusha
shr
dec
adc
leave
mov
mov
fld
jmp
lock
(bad)
(bad)
call
xchg
mov
or
(bad)
adc
xchg
call
mov
call
fcomip
cmp
mov
mov
out
jmp
das
(bad)
jbe
test
push
stos
inc
xchg
sahf
call
sub
scas
add
mov
and
(bad)
loop
and
jmp
sbb
xchg
(bad)
pop
push
mov
jns
cmp
dec
mov
inc
outs
mov
std
(bad)
(bad)
jmp
mov
adc
push
cmp
(bad)
dec
inc
lahf
in
rol
retf
(bad)
push
mov
out
add
jp
jno
iret
lock
inc
(bad)
(bad)
(bad)
(bad)
mov
fs
daa
sub
pop
shl
fdivr
out
jp
scas
and
jl
stos
call
ret
jmp
jle
retf
jo
sub
and
xchg
(bad)
xor
cmps
mov
fist
push
mov
adc
mov
scas
or
pusha
xor
jl
lods
mov
test
(bad)
(bad)
inc
pop
mov
bsf
xchg
pop
push
ror
ins
mov
jo
sub
dec
sar
cli
retf
test
push
movs
xchg
fs
cdq
and
jle
jmp
in
int
test
retf
loopne
jmp
pop
or
fwait
daa
sub
sbb
sbb
mov
cmps
cmps
pop
mov
cmc
fwait
pop
mov
iret
mov
push
out
scas
add
inc
mov
addr16
aam
push
outs
mov
gs
sbb
jb
in
(bad)
mov
mov
mov
dec
mov
inc
scas
int
stos
mov
mov
sbb
out
push
jb
(bad)
(bad)
(bad)
push
js
test
imul
xchg
daa
add
rol
sub
mov
push
repnz
xchg
jbe
adc
mov
iret
sti
test
outs
rcr
(bad)
(bad)
(bad)
jmp
test
cmp
jbe
call
jp
mov
retf
fstp
pop
sar
test
cld
sub
out
fbld
add
imul
mov
fimul
movs
pop
inc
fimul
stos
dec
or
out
pop
std
out
inc
sahf
mov
or
cmp
in
movs
pop
sub
sub
(bad)
(bad)
jmp
or
cmc
adc
(bad)
daa
js
test
imul
cdq
(bad)
rcl
retf
jmp
cmps
cmp
sbb
cmp
mov
or
adc
sbb
out
(bad)
(bad)
(bad)
dec
pop
mov
gs
outs
cmp
je
add
pop
ror
and
data16
(bad)
(bad)
inc
xor
out
mov
or
push
xor
mov
fwait
mov
aaa
js
imul
or
(bad)
jmp
and
dec
add
adc
sbb
sub
mov
test
call
fs
mov
jmp
dec
cli
lock
mov
icebp
cmps
cmps
sub
adc
scas
in
ins
fsubr
loop
sub
scas
xor
xor
sahf
movs
jmp
cld
push
mov
or
xchg
sub
cmpxchg
dec
or
mov
outs
sbb
aas
inc
and
sahf
je
and
call
movs
mov
fcos
call
imul
push
add
lahf
(bad)
fcmove
das
fld
cmps
test
aaa
shl
pop
jno
(bad)
fcomip
sbb
mov
and
mov
jp
mov
jl
push
mov
in
dec
jb
sbb
ret
lea
or
mov
ret
mov
shr
mov
pop
int
test
sub
mov
loope
push
(bad)
lea
idiv
fcom
adc
ins
pop
sub
dec
sbb
dec
clc
outs
out
sub
mov
clc
inc
hlt
dec
sar
pop
mov
mov
cwde
add
or
jmp
fsubr
stc
das
dec
xchg
aas
adc
xor
(bad)
xchg
sbb
mov
xchg
pop
sub
xchg
loope
or
cs
jmp
push
retf
(bad)
mov
loop
and
test
loop
bnd
push
sbb
(bad)
inc
movs
cld
mov
aaa
test
fisub
loope
cs
jb
jbe
(bad)
push
ss
or
sub
xacquire
stos
sub
cmp
sar
(bad)
call
pop
shl
mov
ficomp
ficomp
mov
push
std
jg
jp
mul
dec
retf
(bad)
loopne
data16
push
mov
inc
adc
scas
das
inc
cmp
adc
sub
sar
(bad)
inc
in
aam
fnsave
scas
push
inc
aaa
cmp
enter
cmp
mov
(bad)
dec
mov
adc
pop
jmp
mov
stos
stos
pushf
sar
(bad)
(bad)
(bad)
jmp
inc
jmp
jl
shr
cs
jmp
sub
pop
adc
loopne
cmp
jmp
lahf
rol
loopne
scas
fcmovbe
dec
or
or
jg
das
clc
sub
mov
out
jp
xor
cwde
pop
mov
xchg
dec
ins
inc
clc
mov
call
and
push
jl
add
rcl
les
cli
(bad)
dec
test
retf
push
in
popa
neg
cmps
cdq
mov
push
test
(bad)
mov
xor
fisttp
scas
inc
mov
shl
std
mov
mov
(bad)
dec
scas
jnp
jno
(bad)
mov
bnd
std
(bad)
jmp
xchg
pop
mov
mov
push
dec
stos
inc
cvtsd2si
jnp
inc
fistp
imul
stc
(bad)
mov
jle
inc
mov
cmps
dec
mov
sub
jmp
fsub
(bad)
in
fiadd
push
jns
dec
mov
dec
sub
dec
sbb
jne
sub
sbb
retf
inc
(bad)
scas
mov
je
scas
pop
call
jmp
stos
movs
jno
sbb
adc
dec
fisttp
mov
dec
in
pop
(bad)
(bad)
mov
test
cdq
xchg
cmps
cmp
std
retf
aad
inc
icebp
jbe
fisttp
add
pop
clc
leave
pop
dec
dec
arpl
int
pop
or
mov
retf
push
fisubr
sbb
jmp
scas
adc
or
add
loopne
outs
lock
shl
push
mov
jmp
mov
xchg
pop
jg
pop
jge
xchg
push
clc
clc
iret
mov
push
dec
in
mov
push
mov
mov
in
mov
mov
cwde
imul
loop
mov
sub
or
iret
add
mov
pop
iret
sub
les
dec
and
dec
push
dec
pop
xor
mov
loopne
(bad)
fild
xor
mov
push
mov
cld
in
cmp
(bad)
(bad)
(bad)
(bad)
fnsave
bound
dec
or
aad
iret
call
inc
cld
(bad)
xchg
aam
push
mov
call
or
lods
and
js
mov
push
inc
cmp
call
jg
mov
cmc
(bad)
(bad)
(bad)
dec
xor
iret
adc
(bad)
retf
loop
rcr
sub
sar
call
int3
sub
cmps
cli
call
xchg
lock
(bad)
(bad)
(bad)
call
imul
push
push
jmp
imul
push
sbb
mov
mov
call
enter
(bad)
jmp
cdq
sbb
push
or
mov
lods
push
cmp
mov
push
xchg
inc
jmp
daa
pop
mov
(bad)
(bad)
(bad)
sti
or
and
mov
arpl
iret
xchg
push
ins
(bad)
in
pushf
(bad)
add
out
cmps
pop
call
call
adc
pop
(bad)
call
es
lds
lods
push
cli
test
test
mov
and
cmp
xor
add
sbb
mov
lods
sub
lahf
sub
retf
cmp
(bad)
(bad)
(bad)
call
inc
sub
fidiv
stos
xor
cmp
dec
enter
mov
sbb
or
jge
(bad)
mov
daa
jb
mov
daa
rcr
imul
or
inc
(bad)
xchg
sar
cmp
and
mov
test
(bad)
(bad)
(bad)
(bad)
jl
(bad)
jmp
sbb
cmp
mov
shl
ins
int3
or
(bad)
dec
(bad)
push
add
xchg
mov
in
(bad)
stos
outs
mov
dec
add
xchg
jb
(bad)
(bad)
jmp
rcl
shl
ins
call
pop
inc
xchg
outs
mov
jmp
std
mov
fist
mov
mov
xchg
mov
push
popa
(bad)
jb
push
fcomip
(bad)
call
mov
jl
popa
ds
sbb
sbb
mov
cwde
mov
or
or
and
sub
cli
call
adc
ret
mov
out
jl
lods
(bad)
or
pop
cli
jg
inc
imul
sub
std
mov
jb
and
outs
xchg
cmps
jns
add
popa
adc
retf
jle
adc
mov
call
cdq
mov
jbe
pop
push
aas
outs
jg
sub
pop
(bad)
sbb
test
fcomip
shl
cmp
call
xchg
mov
jecxz
(bad)
in
pop
rcr
loope
push
pushf
sub
cmp
cli
jbe
and
mov
stc
call
nop
lods
ret
mov
xor
jle
int3
mov
and
pop
jmp
pop
xchg
sub
(bad)
jmp
stos
and
repnz
xor
ja
fldenv
and
dec
mov
retf
int3
das
sub
sti
cmps
dec
(bad)
(bad)
(bad)
jmp
js
mov
fs
mov
cli
rcl
imul
push
pop
ins
mov
loope
(bad)
(bad)
in
ins
ds
sub
loop
int
adc
(bad)
mov
jnp
mov
test
mov
shr
push
mov
xchg
mov
cld
(bad)
jmp
or
test
sbb
pop
es
xchg
scas
xchg
(bad)
(bad)
fstp
adc
dec
mov
push
loopne
jge
scas
jno
push
stos
xor
enter
imul
mov
xchg
xor
xor
retf
push
dec
std
fbstp
jmp
jmp
mov
aaa
jns
iret
xchg
pop
dec
inc
sbb
inc
fadd
sub
mov
cmc
mov
sbb
pushf
push
push
cmp
push
retf
or
(bad)
(bad)
(bad)
call
mov
mov
fisubr
cmp
mov
jecxz
enter
mov
into
stos
lahf
push
mov
(bad)
call
mov
call
jmp
sbb
mov
imul
fsub
adc
js
nop
jnp
stos
(bad)
(bad)
jmp
mov
mov
fcmovnb
and
sahf
or
in
(bad)
(bad)
(bad)
(bad)
sti
mov
xchg
call
icebp
add
in
test
repz
jnp
and
cmp
pop
ds
(bad)
sti
pop
int3
movsx
pop
stos
mov
and
(bad)
mov
fist
or
add
add
lods
repnz
jle
aas
ss
fwait
nop
lock
(bad)
jmp
sub
test
mov
push
jne
cdq
mov
ret
pop
fsub
clc
mov
or
sbb
jp
out
ss
push
enter
call
scas
mov
pop
xor
adc
(bad)
call
fiadd
adc
mov
xchg
outs
mov
jl
mov
test
xor
sbb
jmp
(bad)
enter
sbb
xchg
push
mov
(bad)
fisttp
mov
imul
mov
ins
gs
dec
jle
mov
mov
adc
ds
mov
mov
cmp
cmp
imul
mov
pushf
push
(bad)
(bad)
(bad)
call
jo
or
mov
mov
je
xchg
(bad)
ins
inc
add
or
jg
pop
pop
jle
out
leave
test
jecxz
ins
fwait
push
xor
pop
fisttp
mov
mov
loope
jmp
jmp
int
and
push
loope
lds
dec
clc
sub
imul
inc
(bad)
(bad)
(bad)
jmp
out
jo
loop
data16
scas
and
sbb
adc
push
jnp
sub
in
test
sbb
stos
or
out
ds
movs
cs
cmp
adc
bound
ins
stos
fwait
push
out
and
aam
scas
or
inc
mov
(bad)
(bad)
dec
cdq
xchg
jno
inc
test
push
or
adc
adc
(bad)
(bad)
(bad)
call
cli
pop
ins
aad
or
sub
dec
fwait
outs
sbb
test
(bad)
aaa
push
les
dec
jmp
pop
cmp
loop
mov
loop
loope
jle
dec
push
sub
(bad)
(bad)
(bad)
cmp
xchg
mov
push
out
mov
add
and
(bad)
mov
and
aad
pushf
iret
dec
or
cmps
cmps
mov
(bad)
jmp
aaa
imul
pop
push
mov
pop
addr16
es
clc
arpl
mov
(bad)
push
mov
clc
iret
cwde
jl
ins
(bad)
call
inc
jbe
jle
push
daa
xchg
dec
mov
test
movs
bound
(bad)
sub
in
xchg
lods
adc
call
call
xchg
jle
stos
jns
fwait
adc
dec
data16
xor
(bad)
call
mov
dec
push
mov
iret
outs
cmp
fimul
scas
xchg
mov
test
call
xor
jmp
sub
out
mov
call
push
push
popf
xor
inc
ja
lods
aaa
cmps
aaa
inc
daa
pop
push
movs
(bad)
ja
(bad)
(bad)
jmp
add
sbb
leave
test
movs
mov
jecxz
dec
enter
and
dec
(bad)
cwde
xchg
cli
jg
fdiv
lahf
call
sbb
dec
jmp
aaa
and
ja
mov
sub
inc
fisttp
and
movs
push
adc
pop
retf
sahf
mov
xchg
sub
test
or
cmp
scas
daa
inc
fmul
mov
inc
inc
ss
jp
push
fdivrp
pop
in
scas
(bad)
mov
stos
jno
lock
(bad)
jmp
stc
ins
jge
jmp
das
movs
cwde
jg
(bad)
jmp
in
add
repz
and
push
inc
es
inc
lods
stos
stos
mov
push
jmp
es
xor
fwait
call
cmps
nop
fcomp
jmp
xor
xor
out
test
nop
arpl
xlat
adc
mov
leave
ins
jbe
jl
add
and
push
mul
fsubr
push
mov
(bad)
(bad)
(bad)
(bad)
jl
dec
test
outs
loop
cmp
ficom
sub
cmp
sbb
push
xor
mov
jo
mov
pop
cdq
icebp
out
jmp
(bad)
fild
dec
mov
mov
pop
xor
loop
jo
jmp
inc
push
and
jmp
(bad)
pop
ja
(bad)
mov
fsub
mov
cmovs
sbb
repz
pop
pop
arpl
sbb
stos
imul
inc
mov
xchg
mov
outs
retf
(bad)
(bad)
(bad)
jmp
xchg
popf
fs
mov
scas
out
push
mov
mov
pop
sub
je
(bad)
cmps
fidiv
or
(bad)
inc
lods
mov
cs
jge
jl
shr
call
in
mov
cmp
cmps
and
stos
push
cmp
call
inc
mov
cmp
retf
xor
sti
loope
cli
sbb
cmp
(bad)
dec
(bad)
jmp
fidivr
lods
add
push
jle
xor
aad
pop
inc
(bad)
add
inc
(bad)
call
push
mov
lods
mov
iret
xchg
stos
outs
ficomp
jmp
adc
pushf
pusha
std
pop
stos
jae
outs
xchg
shl
or
mov
cmps
movs
jge
jmp
cld
sub
pop
pop
or
retf
test
mov
cmp
int3
cmp
adc
mov
(bad)
inc
push
xchg
(bad)
das
pop
mov
in
iret
dec
sub
out
mov
(bad)
jg
dec
jmp
mov
or
jmp
ja
rcr
(bad)
(bad)
std
(bad)
clc
pop
(bad)
jge
push
mov
fmul
shl
and
into
lds
scas
push
push
scas
cmps
lea
lods
retf
or
fsub
icebp
(bad)
(bad)
jmp
pop
or
lahf
icebp
in
gs
xor
cmp
std
dec
add
adc
(bad)
fbstp
jge
fxch
sbb
or
call
int3
pop
(bad)
(bad)
dec
jo
pusha
into
retf
push
inc
(bad)
std
xlat
(bad)
fdivr
cli
sub
test
dec
jnp
(bad)
fwait
(bad)
(bad)
(bad)
call
inc
sub
(bad)
and
adc
pop
push
sbb
pushf
mov
push
sbb
imul
test
imul
xchg
cli
sbb
sub
mov
or
jp
fisub
fcom
dec
push
scas
sbb
sahf
sub
(bad)
(bad)
(bad)
inc
lods
cwde
xor
pop
sar
mov
inc
pop
std
mov
ud2
movs
ror
out
clc
push
jmp
(bad)
cmp
cmp
test
jno
cmps
sub
cmp
scas
jl
imul
std
in
mov
aas
out
popa
mov
mov
adc
add
or
icebp
add
xchg
(bad)
mov
inc
ficom
jge
add
sub
sub
jnp
aaa
pop
rcl
jp
inc
push
dec
(bad)
out
repz
or
arpl
pop
or
pushf
push
push
xor
mov
xor
mov
pop
dec
fdiv
fst
mov
or
(bad)
int3
cmps
(bad)
cmc
mov
int3
xor
or
xor
jg
or
cmps
pop
jmp
(bad)
dec
clc
mov
dec
pop
stos
xchg
or
mov
js
mov
sub
cld
data16
fcomp
enter
retf
fisttp
sbb
adc
inc
cli
jmp
cwde
jns
loop
mov
dec
js
lds
xchg
mov
mov
leave
and
pop
hlt
(bad)
mov
sub
push
les
or
dec
jecxz
adc
leave
push
dec
int3
retf
jg
dec
or
mov
mov
icebp
cmp
call
(bad)
dec
sub
sbb
sbb
push
and
shl
sub
jmp
sub
stc
in
sbb
(bad)
(bad)
(bad)
dec
pop
sub
jecxz
mov
mov
add
mov
and
(bad)
ins
iret
loop
sbb
(bad)
fcomip
call
mov
fstp
push
in
in
(bad)
in
mov
test
(bad)
(bad)
sti
lods
out
xchg
dec
mov
mov
popa
mov
cmp
add
das
sub
aad
dec
loop
jae
pusha
enter
mov
dec
dec
lahf
xlat
mov
fsubr
(bad)
(bad)
(bad)
jmp
or
sbb
pushf
int
xor
loop
xchg
test
push
sbb
call
dec
xchg
push
fidivr
jl
rcr
ds
test
and
(bad)
(bad)
(bad)
inc
dec
mov
sub
loopne
sbb
sub
shl
cmps
(bad)
(bad)
(bad)
mov
call
cmp
test
jmp
inc
and
sbb
arpl
add
sbb
cs
test
inc
push
(bad)
mov
sahf
inc
xchg
adc
gs
cmc
(bad)
dec
(bad)
loop
outs
mov
cld
dec
inc
mov
or
out
mov
(bad)
jg
test
fist
sbb
and
mov
scas
movs
sub
mov
aam
lahf
mov
in
pushf
idiv
(bad)
dec
push
dec
pop
jns
cmp
push
sub
xchg
xchg
pop
sub
(bad)
(bad)
call
lods
scas
push
inc
sub
sub
arpl
dec
cli
ins
cmp
xor
jno
(bad)
(bad)
(bad)
jmp
ffreep
xchg
add
lds
xchg
xchg
xchg
mov
iret
jmp
and
jo
(bad)
jmp
scas
add
push
retf
test
sahf
in
ret
jge
dec
adc
xchg
int
lock
out
cmps
outs
ret
cmp
je
fidiv
push
(bad)
(bad)
(bad)
inc
jb
cmp
jmp
movs
cmps
fld
cmp
fisttp
xchg
into
test
(bad)
jmp
sbb
imul
rcl
dec
sbb
cs
push
sbb
mov
out
mov
adc
into
mov
push
fnstcw
stos
sar
std
mov
push
jb
xchg
call
inc
mov
pop
(bad)
(bad)
cmp
xlat
sbb
xor
std
out
fsub
lahf
mov
inc
sub
and
ret
sbb
clc
cmp
arpl
out
xor
std
(bad)
call
mov
xchg
lock
mov
mov
mov
call
(bad)
(bad)
jp
jo
fdivr
ins
lahf
fs
mov
stos
pop
pop
(bad)
es
int
jo
and
cmps
call
mov
mov
dec
cmp
push
std
sbb
imul
cmps
lahf
mov
sar
inc
in
mov
or
dec
push
inc
popf
(bad)
mov
sbb
cmps
scas
(bad)
mov
lds
and
stos
sbb
(bad)
jmp
dec
std
push
or
call
stos
adc
sbb
outs
lods
mov
cli
inc
sbb
sbb
jb
add
test
push
rcr
outs
(bad)
jmp
fwait
cli
cmp
outs
mov
push
jp
in
xor
mov
aaa
lods
(bad)
dec
add
fwait
mov
mov
inc
mov
test
mov
sbb
xchg
push
adc
dec
and
inc
(bad)
mov
mov
dec
xchg
mov
ins
icebp
lea
call
ins
jmp
mov
in
sar
or
xor
sub
loopne
xchg
mov
shl
cmps
push
push
lock
(bad)
(bad)
js
clc
ins
ret
movs
or
lods
mov
push
sub
mov
mov
sbb
shr
sbb
jg
shr
push
in
stos
aam
(bad)
(bad)
jmp
xchg
pop
(bad)
dec
push
mov
jne
cmp
sub
test
inc
cmps
cmp
inc
stos
jmp
or
loope
xchg
adc
call
pop
push
pop
inc
pop
movs
cmps
fiadd
(bad)
lock
pop
pop
(bad)
out
out
test
cmps
add
dec
jns
aaa
les
cmps
cdq
nop
or
sbb
or
and
adc
jmp
in
push
std
(bad)
push
scas
push
cld
(bad)
jmp
jb
lods
add
or
lds
pop
and
mov
inc
dec
and
(bad)
(bad)
(bad)
(bad)
mov
daa
jecxz
push
cs
outs
push
mov
outs
dec
push
(bad)
retf
mov
xchg
mov
xchg
pop
or
pop
sub
inc
arpl
mov
cld
xchg
xor
test
and
adc
cmp
fild
adc
(bad)
(bad)
jmp
(bad)
or
psrld
repnz
retf
icebp
push
mov
lock
(bad)
(bad)
dec
adc
push
div
jb
adc
or
xor
loop
and
call
mov
(bad)
call
int3
sub
cmps
jmp
lods
(bad)
retf
outs
cld
(bad)
jmp
jo
loop
xchg
mov
movs
ins
jnp
repz
cmp
(bad)
(bad)
(bad)
mov
sbb
(bad)
(bad)
inc
loopne
stos
mov
xchg
(bad)
adc
cmp
sbb
std
aaa
or
mov
jae
aaa
fcomp
or
cmps
add
rcl
cmp
scas
(bad)
test
call
aam
xlat
sub
xor
data16
stos
(bad)
(bad)
mov
pop
fistp
push
fidiv
or
xchg
jo
pop
jb
fs
sub
push
hlt
(bad)
fcmovnu
mov
lahf
xor
(bad)
dec
ss
and
dec
int3
inc
(bad)
mov
jnp
call
(bad)
(bad)
jmp
push
push
call
jbe
fwait
dec
in
shl
(bad)
xchg
mov
stos
out
clc
jmp
xor
outs
sbb
fimul
ror
push
cmc
scas
clc
xor
dec
repz
loope
(bad)
enter
mov
(bad)
(bad)
(bad)
jmp
rcr
test
inc
or
dec
inc
pop
adc
or
mov
push
mov
ja
(bad)
dec
js
pop
or
mov
cs
or
retf
pop
sbb
gs
(bad)
(bad)
(bad)
jmp
sub
stc
jb
mov
mov
(bad)
push
jg
and
mov
xlat
jmp
and
(bad)
jmp
call
sar
pop
cmp
pop
pushf
pop
cmp
(bad)
fstp
stos
test
xchg
pop
mov
les
in
cmp
pop
stos
xor
ficomp
call
(bad)
call
int
jmp
sbb
scas
bsr
mov
pop
repnz
(bad)
inc
cmc
rol
mov
push
jmp
(bad)
call
mov
int
inc
jle
or
add
dec
lahf
das
dec
mov
pop
imul
add
sbb
(bad)
ins
inc
adc
adc
(bad)
or
mov
mov
sub
iret
lahf
call
dec
fst
adc
hlt
xchg
clc
ds
xchg
ins
mov
(bad)
inc
cmp
push
scas
xor
and
push
lods
ret
scas
out
pop
shr
(bad)
(bad)
dec
(bad)
sbb
sbb
lea
retf
inc
icebp
mov
mov
js
movs
(bad)
(bad)
(bad)
call
mov
adc
stos
stos
or
loop
stc
leave
cmp
pop
scas
mov
outs
scas
jmp
dec
(bad)
jmp
add
jecxz
inc
hlt
iret
cmp
test
aaa
cld
or
fild
dec
ds
xchg
push
(bad)
(bad)
(bad)
push
pop
sahf
imul
call
fs
sbb
cmc
outs
scas
sbb
and
(bad)
(bad)
dec
sti
mov
adc
dec
pop
jle
mov
adc
and
idiv
sti
xor
pop
lods
test
pop
mov
loopne
xchg
lock
sti
out
mov
rcr
rcr
jns
int3
(bad)
(bad)
cmp
mov
popa
sub
mov
pop
in
adc
imul
pop
sub
mov
dec
outs
test
repnz
ret
xor
test
mov
push
inc
jb
(bad)
(bad)
(bad)
(bad)
fild
cs
jecxz
shr
popf
jmp
loopne
push
sub
int
loope
daa
das
push
lods
sub
xchg
(bad)
(bad)
(bad)
(bad)
js
xor
xlat
popa
jmp
loop
fwait
mov
inc
push
cmps
cmp
inc
mov
pushf
scas
dec
(bad)
(bad)
(bad)
dec
daa
jb
scas
cmc
mov
std
adc
sub
pop
lahf
push
push
sub
es
sub
icebp
outs
mov
fld
pop
outs
cld
(bad)
call
scas
mov
or
std
in
sub
ins
push
ds
mov
mov
jo
dec
and
repnz
cld
clc
dec
stos
xchg
sub
push
rol
inc
imul
pop
mov
cmp
js
es
xor
push
pop
pop
or
mov
(bad)
mov
jge
mov
add
xchg
pop
les
(bad)
(bad)
(bad)
mov
arpl
imul
fwait
sbb
mov
and
cmp
movs
loopne
outs
and
adc
xor
retf
mov
call
dec
call
mov
pop
jecxz
jp
call
loopne
(bad)
mov
or
out
sub
(bad)
aam
jg
idiv
jg
adc
(bad)
lods
shl
dec
mov
and
cmps
(bad)
jmp
out
cmp
clc
mov
outs
ficom
mov
mov
in
in
(bad)
(bad)
(bad)
(bad)
cmp
inc
mov
sti
dec
les
(bad)
in
cdq
jmp
lahf
pop
dec
cdq
(bad)
(bad)
jns
(bad)
(bad)
(bad)
(bad)
fistp
sbb
std
fwait
adc
movs
add
pop
xlat
or
xchg
jmp
(bad)
mov
repnz
je
sub
add
mov
imul
les
or
mov
shl
cdq
and
popa
sti
push
add
push
(bad)
mov
cmps
jge
jnp
jp
mov
(bad)
(bad)
jg
out
sub
push
cld
add
dec
scas
sbb
enter
push
cmps
adc
outs
clc
jg
call
call
fstp
cmp
(bad)
(bad)
(bad)
call
(bad)
sub
call
stc
add
icebp
xchg
arpl
dec
aam
cs
outs
xor
sub
push
cwde
div
sbb
and
int
push
sub
ins
div
aaa
add
or
push
cld
dec
push
retf
add
push
out
daa
sub
add
mov
push
xor
loopne
cmps
lds
dec
jg
jb
test
pop
mov
test
in
pop
push
push
jle
and
repnz
cmp
(bad)
call
jg
fidiv
rcr
cmp
inc
fcom
mov
retf
ins
cld
dec
loope
xchg
inc
mov
inc
gs
jmp
sub
mov
push
sbb
jp
push
test
ror
call
add
adc
fldenv
or
push
mov
pop
repz
(bad)
(bad)
(bad)
int
or
cwde
pop
sub
fldcw
aad
mov
mov
popa
popf
fcom
dec
push
hlt
inc
xlat
push
cmps
push
call
imul
pop
repz
mov
dec
cmps
stos
stc
and
(bad)
(bad)
dec
push
movs
push
cld
push
lock
loope
mov
xor
das
out
mov
cmps
jg
cli
(bad)
call
clc
mov
push
xlat
adc
mov
pop
cmps
fwait
xchg
sub
add
pop
ja
(bad)
(bad)
(bad)
(bad)
fisub
or
sub
xchg
mov
scas
push
iret
jb
pop
xchg
xchg
fistp
dec
push
push
sub
jb
sbb
(bad)
cmp
retf
ins
jmp
cwde
in
inc
(bad)
jmp
clc
jmp
mov
scas
into
sbb
mov
jmp
or
iret
xchg
push
pop
sahf
mov
dec
call
or
jge
iret
xor
(bad)
jmp
les
mov
es
cli
cmp
sub
call
stos
popa
std
and
js
push
out
loope
mov
(bad)
(bad)
(bad)
in
mov
fisubr
loopne
mov
bound
cmp
dec
shr
mov
mov
bound
adc
mov
repnz
(bad)
jmp
mov
sub
inc
cld
movs
cmc
fstp
xor
xchg
clc
cmp
xor
and
dec
(bad)
(bad)
(bad)
dec
lds
mov
cmp
cmps
(bad)
mov
cmps
xor
inc
outs
outs
in
arpl
lods
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
retf
mov
mov
aam
stos
pop
lds
push
std
icebp
adc
ret
ret
push
out
imul
sbb
std
mov
mov
or
std
call
ror
dec
sub
xor
sbb
mov
cli
(bad)
(bad)
fstp
bound
xchg
pop
add
push
add
sub
in
jmp
inc
xor
or
mov
test
push
mov
mov
lods
ficom
xchg
ins
cmps
cmp
sbb
sub
mov
sbb
(bad)
push
cmps
in
xor
mov
jmp
call
stos
imul
(bad)
(bad)
push
loopne
mov
mov
or
jl
nop
in
test
jo
cmps
adc
and
jmp
mul
scas
dec
jno
inc
enter
inc
push
std
call
mov
sub
or
push
call
sbb
(bad)
(bad)
jmp
sbb
xchg
adc
ins
addr16
cmps
call
inc
mov
(bad)
sub
inc
push
inc
(bad)
shl
dec
ss
mov
cmp
(bad)
pop
push
mov
pop
and
jne
dec
or
test
into
dec
sub
or
push
mov
xchg
jp
movs
add
hlt
jg
pop
cmp
push
xchg
push
mov
cld
call
mov
mov
mov
data16
sar
(bad)
fmulp
scas
and
repnz
repnz
mov
test
bound
loopne
push
fdivr
(bad)
(bad)
call
shl
sub
push
dec
cmp
xchg
hlt
cmp
adc
(bad)
std
mov
sub
mov
mov
xchg
iret
neg
(bad)
jg
xchg
jmp
jle
inc
(bad)
fsubrp
jmp
(bad)
(bad)
call
inc
loop
into
ror
jmp
or
push
or
(bad)
(bad)
mov
pop
data16
cmp
iret
mov
pop
adc
inc
push
adc
lds
test
cld
pop
cmc
lea
(bad)
cmp
mov
inc
(bad)
push
xor
adc
inc
push
push
cmp
mov
xchg
push
jmp
push
fistp
ds
cmp
mov
add
add
pushf
cmp
inc
fist
sti
iret
popf
mov
stos
xchg
pop
push
int
cld
mov
(bad)
jnp
mov
fistp
repz
or
add
push
pop
jb
daa
iret
mov
enter
call
call
mov
bound
jge
sbb
lods
jp
(bad)
(bad)
(bad)
push
loop
lea
mov
push
mov
aam
sub
ror
sub
xor
or
or
or
mov
jge
shr
jmp
pop
dec
add
repz
aaa
adc
into
lods
dec
add
lods
or
in
(bad)
jmp
into
scas
or
xor
loop
mov
push
(bad)
(bad)
(bad)
call
cmps
retf
sub
call
mov
dec
adc
cli
lock
loopne
mov
push
or
cwde
sub
dec
mov
ins
xchg
(bad)
jmp
mov
les
adc
dec
add
pushf
pop
adc
dec
gs
or
jmp
mov
sbb
add
cli
or
jp
fsub
mov
xchg
ss
fst
pop
je
clc
mov
inc
call
sbb
adc
js
push
jmp
xchg
xchg
movs
mov
(bad)
jmp
stos
btc
sub
adc
stos
retf
sub
jb
jg
push
inc
mov
cs
push
fnstcw
test
xchg
repnz
mov
mov
(bad)
(bad)
call
push
int3
mov
mov
xchg
inc
addr16
mov
push
pusha
(bad)
push
adc
cmp
or
(bad)
popa
retf
pop
sbb
call
(bad)
out
mov
or
mov
lea
and
xor
xchg
outs
xchg
je
movs
pop
mov
cmps
push
xor
jmp
mov
mov
jl
mov
(bad)
call
xor
fadd
sub
cmp
test
mov
call
pop
inc
xchg
mov
push
cmp
pop
pop
mov
or
mov
das
or
jmp
ds
and
call
xor
jmp
or
retf
cld
push
into
xchg
pop
xlat
add
jp
cmc
jo
(bad)
(bad)
call
sbb
pop
pop
ss
adc
cmp
mov
mov
dec
dec
clc
jmp
ins
rol
pop
adc
sub
lock
(bad)
(bad)
(bad)
inc
adc
sahf
cmps
xor
imul
sub
frstor
iret
ror
add
or
and
sti
mov
stos
shl
lock
cmp
mov
stos
mov
sbb
cmps
or
jmp
mov
bound
lock
sbb
xor
test
sbb
leave
aad
add
aas
mov
mov
pop
in
xchg
mov
or
jg
(bad)
jmp
jmp
cwde
or
jp
mov
dec
repnz
mov
jmp
dec
sub
out
ret
or
imul
ret
stos
leave
popaw
(bad)
inc
rcr
sar
add
fwait
clc
push
sbb
mov
clc
mov
in
xchg
jmp
cmp
cmp
xor
xor
test
scas
jns
inc
(bad)
adc
mov
(bad)
(bad)
inc
shr
(bad)
call
sub
sbb
leave
and
cmps
fcomp
and
jmp
(bad)
int3
pop
mov
sti
ins
sub
sti
pop
fdivr
clc
(bad)
(bad)
in
mov
test
jp
ret
test
jns
aaa
dec
push
ror
adc
retf
test
sbb
ss
retf
cmc
lock
push
in
jns
xchg
inc
sub
mov
cmp
movs
mov
lds
(bad)
(bad)
dec
retf
rcr
js
sbb
jecxz
sahf
or
or
fwait
jge
(bad)
jmp
sbb
stos
push
std
inc
dec
sbb
pop
or
unpcklps
xchg
pop
cmp
inc
in
mov
add
mov
out
push
in
das
xchg
cs
clc
mov
(bad)
(bad)
call
and
(bad)
mov
in
cmp
call
or
das
push
cmp
or
mov
jns
test
sub
push
push
mov
sub
and
cmps
cmp
(bad)
(bad)
(bad)
jmp
cmps
pop
stos
mov
cwde
clc
(bad)
(bad)
loope
cli
cmp
jmp
xchg
test
jl
jmp
cmp
xchg
or
(bad)
dec
xor
and
jp
aas
lock
sub
jmp
call
loope
outs
aaa
pusha
xchg
(bad)
cli
xchg
mov
(bad)
xor
(bad)
(bad)
call
shr
(bad)
cmps
push
mov
dec
test
lahf
jno
fild
std
retf
das
cli
(bad)
mov
sub
or
cdq
jge
retf
fs
dec
mov
stos
jnp
push
data16
call
js
cmp
or
dec
mov
(bad)
dec
ds
or
or
pop
pop
test
sbb
idiv
(bad)
(bad)
out
mov
stos
pop
mov
fwait
xchg
pusha
dec
and
jo
ja
movs
mov
icebp
jle
jl
int3
outs
(bad)
(bad)
(bad)
jle
aas
mov
(bad)
call
mov
test
sahf
test
sti
add
mov
xor
mov
pop
hlt
mov
adc
xchg
pop
cmp
jmp
push
lea
stos
cmp
xor
mov
sub
cmp
stc
out
dec
(bad)
or
sub
cmps
xchg
(bad)
(bad)
mov
inc
lock
or
out
xchg
push
mov
dec
dec
in
cmps
add
ss
dec
jo
sbb
jge
cmps
push
(bad)
inc
sbb
sbb
jmp
xchg
sbb
(bad)
(bad)
call
imul
dec
xor
mov
bound
jmp
fbld
loope
sub
jmp
adc
cdq
stos
(bad)
xor
jmp
(bad)
cmp
jmp
dec
sbb
jmp
push
js
sbb
outs
add
mov
add
push
pop
push
push
call
idiv
pop
sub
add
rcr
jns
fidiv
pop
(bad)
call
add
dec
mov
arpl
cld
mov
jbe
movs
pop
cmc
(bad)
(bad)
cmp
push
mov
cwde
mul
cmp
cmp
push
or
adc
pop
icebp
push
aam
fwait
das
push
fild
je
xor
cmp
sbb
or
(bad)
jmp
ret
fwait
lods
xor
add
stos
mov
mov
mov
addr16
dec
jmp
mov
add
and
outs
mov
(bad)
(bad)
(bad)
(bad)
clc
(bad)
mov
shl
pop
lock
add
or
aam
dec
push
dec
lock
mov
xchg
imul
mov
sbb
mov
ret
(bad)
(bad)
(bad)
jmp
add
and
xor
(bad)
sbb
sub
dec
sbb
mov
mov
sub
(bad)
(bad)
(bad)
aas
xchg
add
mov
clc
pusha
push
fbstp
movs
in
sub
push
jnp
mov
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
loope
pusha
fist
or
and
cmp
in
dec
scas
or
pushf
jecxz
ins
(bad)
(bad)
(bad)
jmp
cmp
jmp
leave
ror
add
aas
fbstp
push
mov
add
(bad)
call
fstp
retf
enter
outs
adc
mov
aaa
jnp
scas
ins
(bad)
call
cmp
push
xchg
xchg
sub
je
mov
popa
cwde
(bad)
clc
sub
in
call
mov
xchg
pop
(bad)
in
into
and
iret
(bad)
icebp
xchg
imul
(bad)
(bad)
call
sbb
pop
scas
add
(bad)
popf
cs
loop
imul
out
adc
(bad)
dec
sbb
ins
aam
mov
dec
pop
adc
xchg
pop
adc
imul
mov
(bad)
pop
jge
mul
lods
jmp
mov
ja
outs
lea
dec
adc
mov
mov
sub
(bad)
stos
sbb
dec
inc
sub
scas
fsub
sbb
xchg
mov
(bad)
call
jmp
and
push
stc
ret
hlt
inc
(bad)
jmp
in
cmp
cmps
push
push
mov
cld
and
lds
(bad)
ficomp
add
push
movs
mov
sub
icebp
iret
and
icebp
mov
pop
sub
js
(bad)
(bad)
call
sub
sub
sbb
call
cmp
sub
xchg
jmp
adc
aad
retf
mov
test
shld
test
pop
pop
xchg
(bad)
test
out
jnp
mov
jb
or
mov
pop
(bad)
cmp
jae
mov
(bad)
(bad)
(bad)
(bad)
stc
cmps
test
je
idiv
sbb
outs
mov
or
jmp
cmp
add
xchg
inc
std
(bad)
jmp
out
push
out
inc
mov
lods
outs
mov
sbb
(bad)
jmp
ds
sub
sub
sub
inc
sub
in
fisttp
cmp
lock
mov
je
adc
lods
mov
xchg
jmp
(bad)
call
retf
cs
stc
sub
add
add
test
outs
jg
mov
ror
mov
jmp
je
fild
dec
pusha
test
mov
loope
(bad)
inc
test
(bad)
int
sbb
jmp
mov
ds
out
(bad)
(bad)
mov
jb
lds
xchg
imul
pop
sub
sbb
add
jmp
fist
add
jne
jb
scas
mov
inc
les
(bad)
(bad)
jg
(bad)
mov
std
or
add
push
inc
shl
fbstp
and
sbb
es
(bad)
(bad)
dec
dec
xchg
xor
mov
mov
stos
and
mov
pop
mov
(bad)
inc
mov
push
call
mov
test
cmp
scas
and
or
mov
mov
sub
scas
(bad)
(bad)
(bad)
jmp
imul
call
dec
sahf
mov
int3
scas
mov
jmp
shl
pop
sub
imul
mov
wrmsr
(bad)
mov
stos
add
pop
cmc
retf
jp
xchg
scas
sub
or
test
pop
xchg
pop
push
ins
outs
stos
cmp
dec
(bad)
jmp
adc
(bad)
jo
jmp
test
xchg
test
push
(bad)
(bad)
(bad)
cmp
jo
stos
addr16
sbb
sbb
outs
frstor
jg
retf
add
cmp
add
imul
mov
rcl
jbe
sub
(bad)
jmp
repz
cmp
retf
push
inc
adc
cs
cld
mov
pop
sub
add
mov
lea
push
jbe
mov
into
call
jmp
jo
pop
stos
push
dec
xor
dec
xor
xor
enter
loopne
(bad)
(bad)
dec
mov
sub
in
es
push
test
cs
sub
(bad)
(bad)
(bad)
call
aaa
jp
mov
es
aas
pop
and
outs
retf
cs
in
xchg
xor
cs
jnp
stos
(bad)
(bad)
jmp
sub
cmc
into
das
or
cmc
int
pop
add
pop
mov
frstor
mov
(bad)
(bad)
(bad)
(bad)
out
arpl
sub
sbb
mov
ret
iret
jae
lahf
into
loope
je
jne
lea
or
out
sar
(bad)
mov
cld
fs
ret
in
mov
ret
jecxz
(bad)
out
add
dec
push
into
call
pop
cli
je
mov
dec
(bad)
mov
sub
mov
movs
push
cmp
nop
shl
xchg
in
clc
pop
sbb
xchg
sbb
in
inc
test
retf
(bad)
(bad)
mov
xchg
cmp
and
lds
mov
or
pop
mov
mov
sub
xchg
idiv
mov
cmps
inc
jbe
outs
lahf
imul
pop
shr
cwde
xor
lods
(bad)
jmp
mov
mov
sub
pop
mov
cmp
and
stc
test
test
push
sub
hlt
or
sub
jmp
mov
(bad)
sahf
xchg
aas
imul
je
rcl
stos
lahf
or
mov
(bad)
(bad)
push
lods
or
cmp
mov
mov
or
pop
call
sbb
sbb
(bad)
(bad)
(bad)
dec
or
loope
bound
imul
les
push
retf
mov
(bad)
aad
mov
mov
icebp
jecxz
imul
call
movs
adc
push
das
mov
scas
cs
outs
call
movs
push
ins
dec
and
push
lods
xor
stos
cmp
pop
(bad)
(bad)
(bad)
push
mov
es
(bad)
cli
mov
icebp
popf
nop
cwde
adc
mov
add
sti
lock
jns
push
(bad)
(bad)
jge
dec
mov
cld
scas
popf
inc
das
sub
or
jmp
pop
cwde
or
mov
push
call
(bad)
jmp
mov
pop
sbb
sbb
adc
mov
fwait
mov
mov
(bad)
mov
imul
sbb
mov
mov
(bad)
mov
push
imul
jb
dec
mov
into
mov
idiv
push
ror
sub
xor
popa
pushf
sub
jl
mov
jmp
sbb
cmp
pop
into
scas
pop
or
es
or
jmp
push
push
call
or
dec
xchg
cmps
imul
inc
inc
out
jmp
mov
push
fbstp
push
dec
in
push
xor
fcomip
(bad)
mov
pop
clc
jbe
bnd
push
xor
jl
mov
out
(bad)
(bad)
call
xor
mov
sub
cmp
test
push
jns
dec
sbb
(bad)
(bad)
mov
scas
lods
and
xor
or
out
mov
aaa
(bad)
or
(bad)
inc
xchg
repnz
adc
ja
pop
ret
dec
or
scas
js
sbb
mov
scas
ins
mov
and
jb
mov
mov
jg
pop
jno
loop
ins
retf
pop
inc
imul
xchg
adc
fbstp
mov
jl
(bad)
(bad)
(bad)
call
jb
mov
add
pushf
fisub
fwait
mov
push
push
call
cmp
pop
cmp
mov
cmps
dec
aas
ins
std
or
inc
retf
arpl
(bad)
(bad)
jns
adc
jmp
shl
and
stos
or
xchg
sub
add
adc
sti
jmp
jnp
loopne
add
jmp
fs
call
jmp
push
out
sbb
lock
or
adc
adc
mov
out
popf
cmp
(bad)
call
jg
push
sub
inc
mov
add
sbb
cmc
add
outs
adc
xor
jns
mov
sbb
push
cli
mov
sub
retf
dec
(bad)
(bad)
(bad)
push
ins
jo
mov
xchg
cli
push
in
and
stc
push
mov
or
and
(bad)
(bad)
jmp
add
add
test
push
iret
mov
xor
(bad)
mov
adc
adc
pop
jge
sub
xchg
jb
sub
xor
ja
loop
pop
xor
test
sub
cs
fild
fisubr
jg
ffreep
sub
enter
movs
push
call
in
dec
mov
push
jge
mov
adc
(bad)
push
scas
cmp
sbb
pop
sahf
dec
inc
fimul
inc
in
pop
imul
push
jmp
sbb
bound
mov
xor
imul
(bad)
jmp
xchg
clc
adc
push
sar
fimul
ins
loop
gs
and
(bad)
(bad)
(bad)
mov
sbb
cdq
fcomp
push
loop
lods
movs
mov
fstp
ins
(bad)
(bad)
out
cmps
add
sub
cmp
mov
clc
mov
ds
cld
(bad)
mov
pop
js
jl
ror
fistp
popa
stos
xor
pop
cmc
sub
pop
mov
(bad)
jmp
hlt
and
int3
jno
sub
mov
dec
in
js
xchg
mov
pop
cld
mov
inc
retf
xor
into
rcr
repnz
sub
sub
dec
clc
xchg
jmp
(bad)
(bad)
(bad)
jmp
or
jmp
cmps
push
and
mov
cmp
inc
sub
mov
jb
ins
test
fs
fwait
(bad)
dec
loopne
inc
and
sbb
fcomp
or
mov
lods
clc
(bad)
(bad)
call
lods
retf
sub
mov
xchg
mov
dec
fcmovnbe
outs
das
out
jne
int
and
jmp
mov
cmp
(bad)
int3
mov
(bad)
(bad)
(bad)
jns
sub
ins
or
xchg
pop
lahf
and
or
adc
test
inc
mov
mov
push
cld
mov
das
test
out
(bad)
(bad)
fild
lahf
sub
scas
push
mov
add
pusha
mov
inc
arpl
jo
mov
adc
dec
pop
lea
ins
mov
mov
(bad)
retf
mov
sti
hlt
push
sub
(bad)
out
xchg
mov
jmp
and
xchg
(bad)
push
sbb
adc
or
cdq
movs
imul
stos
cmps
into
outs
clc
(bad)
(bad)
mov
mov
sbb
fbstp
mov
mov
cld
sar
jmp
add
sti
faddp
aad
movs
dec
loope
pop
loopne
aaa
cwde
daa
push
loop
loope
cmps
push
mov
dec
(bad)
(bad)
(bad)
jmp
call
shl
cmp
or
shr
outs
addr16
pop
in
sbb
call
ds
cmps
push
push
fwait
retf
mov
mov
xlat
loope
xor
test
sub
push
mov
js
mov
mov
pop
or
(bad)
(bad)
jmp
fistp
aas
call
add
mov
jnp
cmp
cmps
cmp
(bad)
xor
scas
retf
jmp
mov
int
cmps
fld
in
loopne
(bad)
(bad)
inc
stos
inc
and
(bad)
ret
movs
fist
push
out
mov
mov
fsub
inc
sub
pop
mov
data16
jl
push
inc
loop
lea
add
mov
mov
nop
sbb
(bad)
(bad)
jmp
bound
adc
and
pop
call
(bad)
inc
mov
(bad)
(bad)
jmp
push
in
in
shr
mov
repz
sbb
or
push
outs
adc
pop
neg
pop
sbb
(bad)
push
ret
mov
cmps
xchg
fwait
(bad)
(bad)
(bad)
jmp
pop
jp
jg
sub
not
scas
stos
adc
es
(bad)
(bad)
dec
rol
dec
pop
xor
mov
mov
stos
lea
sbb
mov
mov
sahf
xchg
pop
or
mov
push
stos
data16
(bad)
jmp
out
xchg
test
dec
push
mov
sub
call
dec
jns
(bad)
scas
sub
sub
retf
mov
and
push
sub
aad
fcomp
pop
mov
jmp
sbb
fs
pop
mov
loop
sbb
add
adc
retf
pop
add
call
add
(bad)
(bad)
(bad)
dec
jmp
out
xchg
cdq
cs
(bad)
or
icebp
mov
out
mov
retf
push
out
clc
(bad)
(bad)
(bad)
aas
movs
cmps
repz
ja
into
add
test
shr
lods
pop
push
sbb
(bad)
(bad)
call
outs
sub
call
clc
imul
retf
mov
sub
mov
test
ins
ffreep
stos
sub
jl
call
xor
loopne
(bad)
(bad)
(bad)
mov
sub
addr16
add
std
loopne
xor
jno
in
or
(bad)
call
mov
ins
sub
sbb
loope
out
add
lahf
aaa
lds
push
(bad)
fucomip
retf
mov
mov
ins
mov
cmp
(bad)
fild
mov
or
mov
push
es
cmps
in
mov
sbb
push
fsub
into
sub
(bad)
and
fistp
(bad)
fsubp
(bad)
movs
in
nop
pop
sbb
add
jmp
std
out
daa
(bad)
repnz
cmp
pop
add
iret
mov
lock
jmp
cmps
shl
add
xchg
test
scas
push
jle
loope
retf
in
test
in
lods
push
xor
sbb
arpl
ret
mov
loop
mov
es
mov
outs
sti
jno
fidivr
xchg
sub
jge
and
movs
call
inc
cmp
or
dec
(bad)
cli
test
out
push
inc
pop
adc
movs
scas
mov
es
sub
(bad)
inc
and
sbb
mov
out
push
xchg
sub
(bad)
jg
push
jg
pop
shr
dec
rep
cmps
addr16
or
inc
mov
dec
xor
movs
jl
retf
leave
out
ret
sub
jmp
scas
std
pop
adc
(bad)
(bad)
mov
enter
hlt
ror
jb
rcl
(bad)
lods
jl
jnp
sub
(bad)
int3
cmps
and
sub
je
lahf
movs
rol
fsub
ds
cmp
repnz
(bad)
(bad)
mov
outs
and
and
(bad)
mov
std
and
js
pop
xor
addr16
(bad)
jmp
shl
cld
jmp
out
int
or
cld
in
cwde
es
cmps
outs
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
xor
jb
scas
pop
out
xchg
ret
push
aad
stos
scas
cli
lea
or
mov
sub
pusha
loopne
outs
jmp
int
adc
and
cmp
xor
gs
inc
cmps
popa
pushf
mov
fimul
jle
xchg
jp
mov
or
stos
in
(bad)
(bad)
fcomip
in
daa
lea
inc
mov
rol
lock
cmps
lods
scas
lock
popa
sti
out
mov
es
arpl
aaa
(bad)
(bad)
(bad)
mov
test
call
scas
neg
retf
call
jg
add
fwait
es
cwde
shr
arpl
and
adc
(bad)
call
mov
cli
xchg
xor
movs
lds
rol
adc
cld
and
and
(bad)
(bad)
(bad)
jmp
cmp
adc
dec
in
cmp
(bad)
jb
and
(bad)
movs
addr16
mov
ja
les
jmp
scas
add
mov
in
mov
das
les
clc
push
mov
call
shl
(bad)
mov
(bad)
call
ss
(bad)
dec
sahf
mov
scas
scas
mov
(bad)
jmp
sub
mov
or
inc
cld
xchg
cmps
or
in
pop
cli
(bad)
(bad)
push
scas
in
popf
sub
sub
and
adc
xchg
dec
adc
aas
jmp
cli
das
pop
push
jle
cmp
add
cmp
cdq
xchg
in
dec
test
(bad)
call
rol
addr16
aaa
in
mov
adc
rcr
fisub
sub
shl
xchg
test
inc
into
cmp
rcr
lods
xchg
hlt
lods
lea
lea
iret
dec
or
imul
imul
xchg
popa
pop
stc
stc
cli
repnz
imul
adc
(bad)
(bad)
(bad)
jmp
sbb
aam
xchg
push
dec
push
loope
lods
loope
(bad)
stos
(bad)
xor
mov
cli
dec
cmp
(bad)
(bad)
jmp
cmc
or
idiv
(bad)
fs
callw
jmp
test
ds
ja
jg
into
add
jae
and
lods
push
in
test
jp
inc
sbb
push
movs
push
xor
pop
(bad)
sub
arpl
mov
cwde
test
jbe
stc
cmps
or
add
pop
cmps
jo
push
or
inc
sbb
in
cld
push
sub
adc
mov
movs
sub
add
push
les
xlat
popa
fild
dec
bound
mov
icebp
in
and
or
test
cmp
(bad)
(bad)
sti
pop
nop
push
(bad)
pop
movs
pop
dec
into
dec
adc
movs
lahf
imul
arpl
ja
sbb
stos
pop
fstp
mov
jmp
push
jge
sti
sub
sti
jns
push
clc
sub
and
into
push
(bad)
dec
mov
cmps
cdq
jmp
stos
bound
aam
loopne
mov
and
pop
pop
mov
inc
clc
jg
dec
aas
out
or
xor
and
stos
sbb
pop
(bad)
call
test
mov
pop
lds
jmp
or
lock
inc
cld
arpl
push
inc
int3
cmp
sub
sbb
push
imul
(bad)
(bad)
(bad)
out
push
mov
jge
enter
cmps
sbb
fwait
pop
sbb
jp
mov
iret
lea
jmp
dec
sbb
inc
sub
(bad)
call
outs
cdq
cmp
call
(bad)
cs
aam
sbb
in
jmp
popa
mov
sbb
sub
jo
sub
jl
pop
test
and
mov
push
outs
mov
test
scas
jg
int
(bad)
jmp
pusha
jg
loop
mov
xor
(bad)
push
jne
or
cli
icebp
imul
out
jmp
(bad)
(bad)
(bad)
(bad)
jp
ret
jae
mov
or
enter
pusha
sub
call
xchg
scas
fld
(bad)
jmp
scas
dec
mov
aam
mov
sub
push
xlat
mov
dec
push
std
(bad)
(bad)
call
push
push
cdq
or
xor
push
or
sub
cmp
sub
add
xor
cmp
jnp
(bad)
pop
or
xchg
mov
sbb
sub
(bad)
(bad)
(bad)
jg
shr
ds
cld
xchg
xchg
sbb
push
mov
sti
dec
pop
jl
mov
xor
pop
adc
popf
adc
mov
pop
pop
je
cli
pop
inc
call
(bad)
(bad)
jmp
inc
sbb
push
retf
or
inc
scas
jae
sbb
es
test
out
in
jl
fwait
and
dec
jo
add
sbb
push
cmp
mov
pop
inc
sub
pop
mov
dec
jl
dec
das
nop
push
loop
mov
(bad)
(bad)
call
dec
xor
or
(bad)
rol
cmp
mov
(bad)
ficom
pop
lock
mov
inc
sub
xchg
(bad)
(bad)
dec
lahf
sub
ins
(bad)
(bad)
jmp
push
sub
xchg
adc
mov
lea
retf
mov
loopne
(bad)
call
xor
mov
sti
(bad)
dec
push
mov
push
retf
loop
pop
les
(bad)
dec
(bad)
jg
jmp
push
ret
mov
stos
jp
(bad)
(bad)
call
or
das
ret
and
cmps
sub
ja
push
or
mov
(bad)
(bad)
jmp
fwait
pop
mov
test
mov
sahf
out
sub
xchg
pop
push
jp
jmp
pop
movs
ror
(bad)
jmp
push
test
mov
mov
mov
movs
imul
dec
test
pop
ret
pop
(bad)
fwait
in
test
outs
jecxz
push
sub
pop
push
(bad)
cmp
mov
aam
jmp
mov
mov
dec
inc
mov
sub
cmp
jecxz
mov
cdq
sbb
pop
mov
mov
std
dec
jmp
jns
inc
adc
dec
lahf
pop
in
enter
mov
(bad)
jmp
sbb
adc
jo
push
mov
sub
inc
scas
test
dec
xor
mov
sbb
xor
sbb
and
jp
push
jmp
(bad)
call
jg
dec
pop
adc
sbb
scas
xor
shl
pop
jmp
adc
and
cwde
jmp
out
cli
fcomip
test
ret
jp
imul
xchg
dec
clc
cli
pop
sar
(bad)
in
dec
lock
in
inc
mov
xor
mov
bound
es
sbb
xor
xor
fst
push
test
out
repnz
sub
xchg
jb
sar
inc
movs
lods
jo
cmps
out
fidivr
cmc
fldcw
stos
int3
xchg
push
(bad)
cmp
test
lods
lahf
sub
movs
adc
mul
mov
loop
stos
aaa
shl
push
adc
sbb
(bad)
jmp
sbb
out
xchg
sbb
bound
pop
idiv
push
popf
es
xor
mov
out
mov
fiadd
pop
and
mov
cmp
mov
cs
cmp
dec
inc
inc
and
dec
mov
(bad)
jmp
(bad)
mov
adc
inc
inc
adc
and
pop
push
call
stos
(bad)
cmp
sub
popf
loop
mov
je
leave
sahf
test
(bad)
(bad)
inc
jmp
mov
icebp
stos
ins
ret
or
sbb
(bad)
(bad)
dec
jae
sub
pop
and
mov
int3
pop
and
sbb
repz
sub
mov
push
ror
ret
lahf
sub
das
cli
dec
adc
(bad)
out
sub
jbe
ret
stos
lds
lods
pushf
pusha
std
(bad)
jmp
popa
push
(bad)
out
outs
ins
fadd
ret
clc
push
retf
pop
test
inc
mov
popa
ret
aas
repnz
shl
dec
xor
mov
xor
pop
jns
enter
(bad)
mov
call
test
mov
add
test
not
mov
clc
(bad)
jns
pushf
sbb
clc
cmp
call
(bad)
std
pop
cmp
jge
jle
mov
adc
mov
add
sub
fadd
or
icebp
sub
ficom
dec
sub
(bad)
(bad)
(bad)
jg
retf
mov
cli
adc
in
retf
pop
mov
add
cmp
cmps
xchg
cli
push
jmp
xor
(bad)
cmps
xor
mov
sub
mov
(bad)
aad
dec
(bad)
(bad)
(bad)
out
movs
cwde
xchg
data16
inc
inc
pop
outs
std
adc
or
mov
fisubr
cmp
lods
(bad)
xlat
ja
(bad)
push
(bad)
cld
lea
pop
xchg
mov
fistp
(bad)
and
loopne
(bad)
(bad)
call
(bad)
fstp
push
xor
mov
mov
fistp
cld
pop
in
cmps
cld
and
cmp
and
jmp
jg
mov
cmp
pop
retf
test
call
pop
retf
xor
(bad)
out
push
xchg
loop
mov
out
cmp
(bad)
call
ret
fstp
mov
outs
ins
fist
pop
ret
or
jbe
inc
sar
jmp
dec
stos
xchg
sbb
mov
push
sbb
(bad)
call
ss
dec
mov
nop
sar
addr16
(bad)
push
xor
xor
cmp
test
mov
push
adc
lods
call
fdivr
(bad)
(bad)
inc
push
add
lods
outs
je
ja
imul
xlat
jns
fwait
arpl
fwait
and
std
jnp
jmp
mov
jb
push
jmp
or
inc
pop
mov
sti
fistp
icebp
(bad)
(bad)
jmp
jb
lods
retf
leave
(bad)
lea
jp
ret
jmp
call
outs
test
(bad)
out
xor
xchg
ret
lahf
iret
hlt
inc
mov
add
push
ja
sbb
pusha
pop
fs
ins
stos
mov
mov
pop
sar
int
jmp
or
jle
jle
jg
jl
jmp
les
sbb
stos
or
mov
xchg
fs
addr16
pusha
mov
loope
scas
rol
lods
sub
inc
(bad)
(bad)
jmp
movs
sahf
cmp
and
and
bound
call
test
(bad)
call
mov
or
ret
das
stos
mov
in
out
pop
movs
into
xchg
cs
pop
loope
mov
adc
(bad)
out
test
sbb
clc
cwde
es
mov
cmp
xor
sbb
jnp
and
ins
mov
jmp
ss
cmp
sub
test
xchg
sbb
jns
sbb
outs
mov
lods
dec
aam
xor
push
sub
dec
(bad)
pop
idiv
push
add
pop
add
add
sar
(bad)
mov
fcmovbe
mov
sbb
leave
mov
pop
mov
mov
jmp
ret
xchg
pop
ins
mov
inc
loopne
sub
sar
(bad)
dec
add
mov
xchg
add
add
mov
xor
clc
or
mov
stos
push
or
jmp
data16
(bad)
jecxz
fcmovnu
xchg
repnz
cdq
mov
scas
fidivr
repz
push
(bad)
scas
pop
jge
or
jmp
dec
adc
mov
(bad)
jmp
pop
pushf
pop
lahf
mov
inc
push
neg
push
cwde
mov
sti
jg
call
fs
ins
std
push
aam
xlat
dec
test
out
jmp
movs
add
cli
(bad)
jg
sub
fsubr
aad
push
adc
or
pusha
mov
mov
xlat
jge
or
mov
dec
aam
add
fwait
cmp
(bad)
(bad)
(bad)
jmp
dec
and
and
mov
sub
iret
push
mov
ret
(bad)
call
call
jg
movs
mov
and
adc
ret
or
movs
or
(bad)
(bad)
(bad)
cli
pusha
fstp
mov
mov
mov
xor
retf
ss
ficom
daa
xchg
and
(bad)
(bad)
(bad)
(bad)
(bad)
sub
out
and
mov
pop
test
xchg
mov
sub
mov
call
adc
bound
cmp
stc
pushf
pusha
push
lods
mov
add
(bad)
(bad)
jmp
mov
add
out
jmp
and
mov
sub
jp
stos
(bad)
(bad)
(bad)
(bad)
jnp
jl
sub
in
loopne
add
push
movs
or
arpl
pop
mov
sar
or
mov
jmp
xchg
rol
js
mov
jge
or
stos
imul
call
pop
cld
mov
jns
jge
adc
ret
scas
or
push
xchg
mov
(bad)
(bad)
(bad)
(bad)
call
xor
retf
ret
mov
cmps
xchg
adc
outs
mov
mov
je
popa
stos
ins
mov
(bad)
fbld
sar
dec
pop
shl
cmp
sub
jmp
rol
mov
test
clc
(bad)
(bad)
(bad)
(bad)
aas
push
retf
std
pushf
stos
or
aad
ins
lds
dec
mov
push
push
lds
(bad)
inc
pop
xchg
cwde
jecxz
mov
xor
dec
inc
pop
fcom
and
(bad)
(bad)
(bad)
dec
cmp
pop
dec
or
or
call
in
mov
fwait
mov
(bad)
test
das
std
mov
sub
(bad)
pop
pop
sar
lahf
retf
push
(bad)
js
or
inc
push
and
(bad)
jg
or
int
movs
xchg
cli
imul
mov
out
push
(bad)
(bad)
(bad)
(bad)
jl
nop
cmp
gs
sub
test
cmp
dec
ret
(bad)
icebp
push
push
push
sub
ret
cmps
xchg
mov
(bad)
(bad)
(bad)
cmp
cmp
outs
jp
js
pusha
int3
push
push
nop
mov
arpl
stos
xlat
add
scas
scas
test
(bad)
(bad)
jns
imul
sbb
sub
push
xlat
(bad)
jmp
mov
pop
js
out
xchg
test
imul
sub
(bad)
jmp
(bad)
or
dec
(bad)
push
fild
into
in
stc
mov
or
fwait
push
adc
sti
push
jnp
sti
les
ins
loope
std
pop
mov
dec
push
out
jno
adc
cmp
or
mov
sub
push
mov
(bad)
jmp
xchg
movs
inc
jge
mov
jp
lahf
mov
xor
and
push
add
imul
inc
dec
add
add
or
loopne
inc
fwait
mov
(bad)
(bad)
jmp
inc
cdq
mov
sbb
xchg
pusha
or
in
and
xchg
clc
mov
push
sub
clc
add
ja
lahf
hlt
sbb
cli
(bad)
in
call
mov
in
stos
mov
repnz
ss
dec
or
mov
test
jnp
xor
sbb
jnp
stos
and
call
loopne
test
mov
(bad)
(bad)
(bad)
jmp
les
and
lsl
sbb
and
push
add
mov
xlat
dec
aaa
cmp
jg
mov
cmc
mov
dec
inc
jmp
fst
and
adc
cs
(bad)
(bad)
jg
hlt
pop
in
lods
call
mov
push
mov
not
or
mov
(bad)
(bad)
mov
ds
outs
enter
ret
mov
xchg
fldcw
inc
jmp
test
aas
rcl
sbb
inc
pop
rol
mov
aaa
or
push
and
int3
loop
lods
sub
sti
push
mov
inc
or
xchg
xor
rcl
das
or
(bad)
(bad)
out
icebp
jo
or
sbb
or
inc
hlt
cdq
jne
inc
and
sahf
retf
data16
(bad)
dec
stos
std
mov
and
inc
add
sub
dec
jo
lock
ds
(bad)
call
lds
mov
retf
loop
cmp
lods
mov
(bad)
(bad)
inc
call
imul
mov
jmp
pop
dec
mov
inc
jl
movs
test
inc
or
jmp
into
adc
mov
jl
(bad)
(bad)
js
pop
jmp
and
(bad)
sub
stc
add
pop
and
or
pop
fs
push
cmp
fwait
test
cmps
xchg
(bad)
(bad)
(bad)
jmp
push
mov
mov
xor
or
dec
jmp
add
pop
imul
mov
ss
xchg
hlt
ja
jg
or
mov
pop
cwde
xlat
lods
fmul
retf
loopne
cmc
xor
jmp
add
out
mov
stos
dec
sub
mov
(bad)
jmp
retf
sbb
sbb
loop
es
pop
(bad)
pop
push
clc
push
xchg
je
test
mov
mov
movs
xor
jns
(bad)
dec
or
xchg
sbb
mov
sbb
mov
sbb
jp
inc
or
cld
cmps
mov
or
mov
mov
push
jge
jnp
jb
call
jp
leave
in
scas
inc
aad
ins
js
imul
mov
arpl
call
jbe
rol
pop
and
std
fisubr
sub
cwde
retf
cmps
mov
mov
mov
(bad)
fsubrp
(bad)
push
ret
cdq
in
fdivr
mov
outs
test
push
cmp
inc
call
push
pop
and
xchg
(bad)
(bad)
(bad)
jmp
cmp
sub
jnp
sub
loope
stos
popa
sbb
jbe
inc
call
(bad)
(bad)
(bad)
(bad)
jg
jmp
mov
mov
ds
icebp
jb
push
cmps
xchg
fsubr
test
int3
scas
jmp
cmp
push
data16
stc
clc
adc
enter
jmp
sar
mov
imul
push
in
and
ficom
jb
scas
jmp
mov
xor
ins
fucomi
imul
jmp
lods
mov
mov
pop
and
sub
sub
stos
and
cmps
sbb
sub
cli
push
and
jmp
cmp
movs
jp
mov
cwde
pop
sub
mov
sahf
shr
pop
outs
out
xchg
push
(bad)
(bad)
cmp
mov
mov
dec
int3
fs
pop
(bad)
(bad)
(bad)
jmp
or
std
lea
sbb
xchg
or
imul
call
movs
and
pushf
lods
imul
dec
xor
scas
nop
bound
(bad)
jmp
xchg
sub
add
(bad)
call
mov
push
jmp
cli
sub
(bad)
dec
fiadd
ja
jbe
mov
(bad)
(bad)
(bad)
inc
xchg
inc
jae
cmp
daa
test
xor
enter
mov
pop
repz
(bad)
inc
dec
push
jae
dec
call
and
cmc
call
fst
arpl
and
lahf
lahf
pop
push
sub
mov
cmp
imul
iret
popa
test
imul
mov
mov
in
loopne
jg
push
jle
popf
cs
bound
out
(bad)
mov
xor
inc
cmp
repz
ffree
loope
not
cli
add
or
test
push
sahf
sub
(bad)
cmp
cmp
fwait
or
fdivr
leave
and
push
and
js
(bad)
call
mov
cmp
pushf
mov
sbb
mov
mov
push
xchg
rol
mov
jmp
enter
(bad)
(bad)
call
out
push
mov
clc
jns
scas
mov
retf
push
ret
push
std
lods
(bad)
(bad)
(bad)
dec
call
and
or
pop
test
scas
ds
mov
test
xor
call
xchg
or
std
inc
movs
mov
mov
test
fisubr
(bad)
adc
push
(bad)
(bad)
(bad)
call
mov
mov
cdq
call
dec
stos
test
loope
in
scas
inc
jl
(bad)
(bad)
call
ret
push
imul
mov
sbb
push
jp
jmp
in
in
sub
lock
xchg
and
retf
repnz
pushf
call
loope
sub
out
inc
or
push
cld
mov
out
out
mov
push
mov
loopne
sbb
idiv
jnp
daa
inc
inc
sbb
cli
pop
push
ret
shl
les
mov
mov
inc
lock
ins
push
mov
ret
jp
(bad)
(bad)
(bad)
mov
dec
cmc
jmp
in
push
out
ret
scas
int3
out
pushf
(bad)
lods
ja
addr16
mov
or
sbb
xchg
stos
jnp
fwait
retf
popf
lds
dec
push
cmp
mov
int3
jp
arpl
jmp
mov
aaa
jp
cmp
pop
jnp
pusha
pop
sbb
jns
cmp
pop
(bad)
cmp
(bad)
call
cs
push
xor
xchg
movs
mov
int
test
or
mov
jmp
or
test
cmc
mov
cmp
or
retf
pop
pop
and
pop
sbb
mov
mov
xchg
or
dec
ja
jmp
xchg
scas
jmp
fdivr
call
add
cmc
or
mov
int
(bad)
mov
sti
adc
mov
jecxz
mov
inc
jnp
ds
xchg
call
aam
clc
dec
dec
sub
fcom
adc
cmp
(bad)
jmp
inc
xor
xchg
push
cmp
(bad)
retf
(bad)
mov
cli
jmp
mov
repnz
cmp
ins
repnz
test
cmp
xor
test
mov
push
sar
sub
mov
dec
cs
stc
shr
(bad)
push
enter
cmp
dec
inc
push
lahf
adc
call
sub
cld
(bad)
(bad)
call
movs
movs
sahf
imul
fistp
mov
test
or
inc
(bad)
(bad)
inc
movs
out
mov
push
jmp
fistp
mov
cmc
pop
and
sbb
adc
jmp
mov
pop
je
or
imul
pop
repz
test
pop
sbb
out
(bad)
(bad)
dec
out
repz
xchg
in
inc
test
xor
outs
jae
dec
cs
sub
adc
(bad)
(bad)
jmp
jp
ds
xchg
ficom
jmp
out
dec
xor
push
aas
jmp
cmp
add
clc
jge
add
inc
inc
lock
xchg
pop
test
mov
pop
adc
call
mov
or
mov
jnp
push
pushf
push
cmps
sub
(bad)
push
dec
mov
nop
jl
lahf
outs
xor
enter
cmp
popa
mov
mov
retf
xchg
xor
loop
pop
mov
mov
(bad)
(bad)
dec
loop
mov
jmp
daa
fcomp
cmp
pop
pop
das
and
test
popf
loopne
adc
and
stos
fdiv
sub
test
sub
sub
dec
and
cmp
sar
dec
nop
inc
lods
and
pop
iret
mov
push
movs
and
xchg
push
std
pop
xchg
push
dec
sbb
(bad)
jg
movs
add
xlat
es
sahf
jl
call
cld
dec
out
adc
adc
inc
fisubr
jae
aam
ins
jb
sar
(bad)
jmp
stos
mov
lods
jae
stos
mov
pop
imul
(bad)
retf
add
sahf
mov
dec
dec
scas
jne
mov
xchg
cli
(bad)
fcomip
call
pop
fsubr
mov
sbb
mov
jl
pop
or
fcmovb
scas
jge
into
sub
iret
out
xchg
cmp
or
inc
ret
pop
sub
mov
mov
push
or
jmp
adc
pushf
test
mov
(bad)
cmc
(bad)
dec
sub
enter
pop
cmp
pop
jmp
pop
inc
(bad)
or
push
fcomip
jmp
ss
jmp
aas
cvtpi2ps
cmp
mov
pop
stos
push
cld
(bad)
cld
mov
ja
inc
es
sub
sbb
mov
dec
sbb
pop
loopne
aam
cwde
cmc
std
ins
push
mov
dec
push
dec
or
rcr
jmp
nop
scas
addr16
mov
push
push
sar
mov
cld
leave
cdq
sub
pop
fsub
cmp
(bad)
jmp
fwait
pop
fs
sbb
push
push
jns
sti
stc
mov
mov
cwde
and
(bad)
(bad)
dec
xchg
pop
add
or
fsubrp
xchg
stos
pushf
push
xchg
jmp
sub
(bad)
jmp
mov
(bad)
lock
lock
push
xor
(bad)
mov
(bad)
(bad)
(bad)
inc
jg
sbb
pop
lods
lea
and
fld
ins
xor
call
sub
cmps
or
fdiv
mov
(bad)
pop
ins
int3
sub
scas
clc
inc
stos
jmp
cmps
add
push
push
sahf
aad
mov
cmps
outs
inc
(bad)
(bad)
(bad)
dec
jns
outs
out
mov
movd
xor
push
fidiv
jo
icebp
sub
pop
(bad)
jp
imul
pop
adc
dec
mov
dec
push
scas
sti
or
cmps
scas
loopne
sub
(bad)
(bad)
push
scas
cmps
adc
movs
mov
mov
cmp
(bad)
(bad)
dec
clc
cmps
xchg
jmp
imul
movs
add
mov
(bad)
jle
mov
ins
iret
call
mov
test
aad
ja
das
mov
mov
cli
(bad)
(bad)
dec
or
fsubr
je
pop
add
mov
test
jmp
shl
imul
push
or
(bad)
jg
(bad)
call
add
dec
mov
xor
push
loop
cld
test
enter
out
and
(bad)
mov
sbb
(bad)
inc
ins
mov
push
cli
lds
mov
and
push
push
jne
mov
xchg
aaa
pop
stc
std
(bad)
mov
jmp
push
mov
and
mov
xchg
ins
mov
or
clc
call
in
ficomp
sub
(bad)
(bad)
(bad)
jnp
loopne
addr16
inc
add
outs
pop
jmp
inc
jge
pop
dec
adc
dec
ins
pop
icebp
retf
or
fldenv
loopne
mov
imul
sub
push
mov
push
pop
sub
(bad)
loop
sub
mov
inc
ja
loope
cmp
push
outs
jbe
call
pop
xor
sub
into
repnz
leave
retf
es
(bad)
(bad)
mov
out
pop
or
pop
mov
cvtdq2ps
cmp
mov
inc
pop
cmp
mov
push
push
push
mov
cli
push
outs
movs
sar
(bad)
jmp
xor
pop
mov
(bad)
fisub
js
add
fld
push
mov
add
cmps
jg
sub
test
stos
sbb
jge
add
call
sub
ins
sub
pop
jmp
push
call
retf
mov
fwait
add
fucomi
mov
(bad)
das
and
(bad)
fcmovne
dec
into
movs
jbe
or
lock
xchg
sub
add
add
inc
pop
sbb
movs
sbb
(bad)
mov
call
lods
shl
lods
outs
cmp
mov
ja
jmp
adc
xchg
into
jg
xor
add
js
jmp
ins
sbb
test
imul
inc
or
mov
fild
mov
popa
cld
(bad)
jmp
push
jp
movs
xchg
imul
jmp
dec
cli
jmp
leave
mov
mov
clc
aam
xchg
inc
push
std
(bad)
push
(bad)
leave
xchg
les
inc
mov
jmp
(bad)
jmp
in
(bad)
sbb
sub
sub
inc
pusha
int3
mov
jns
add
movs
outs
popa
and
(bad)
sub
(bad)
jg
jp
mov
jl
mov
(bad)
out
and
sub
mov
push
clc
adc
jg
sub
lea
sbb
jns
cld
push
ins
xchg
movs
(bad)
or
cmp
mov
(bad)
(bad)
(bad)
in
in
and
(bad)
sub
arpl
sub
in
std
dec
lds
call
(bad)
(bad)
jmp
sbb
test
pop
test
rcr
push
sbb
jecxz
xchg
in
xor
(bad)
call
ins
adc
dec
jg
sti
or
int
cmp
mov
xchg
dec
test
jb
mov
inc
dec
sbb
push
and
sbb
mov
inc
or
es
jne
adc
addr16
jmp
les
sub
(bad)
idiv
aaa
xchg
rcr
cmp
xchg
inc
xor
or
jmp
in
ins
mov
loopne
jle
dec
and
jmp
(bad)
jg
push
mov
pusha
mov
lods
mov
xlat
in
fwait
enter
(bad)
jmp
scas
into
push
sahf
stos
or
popa
mov
mov
mov
jp
(bad)
fimul
xchg
leave
ficomp
or
mov
in
bound
(bad)
inc
and
jnp
cli
loop
(bad)
dec
fld
lods
fcmovbe
add
(bad)
(bad)
jmp
idiv
sub
outs
mov
call
movs
inc
mov
jae
iret
xchg
dec
inc
retf
rol
inc
lods
xchg
sub
shl
pop
mov
repz
xchg
shr
mov
pop
arpl
fsubrp
push
or
and
push
(bad)
(bad)
out
ss
jnp
pop
push
cdq
sub
jo
dec
in
repnz
add
adc
popa
call
lea
sahf
mov
cmps
pop
fmul
xchg
sbb
sbb
repnz
pop
jecxz
cld
jmp
clc
popa
stos
fld
fld
push
test
jg
pop
movs
scas
fild
fadd
mov
and
cmp
(bad)
push
cmp
rcr
inc
push
movs
push
xor
mov
sub
(bad)
(bad)
mov
jns
outs
pop
or
add
nop
push
(bad)
scas
sub
js
int
sub
dec
clc
call
mov
mov
jae
test
leave
mov
test
fbstp
std
inc
pop
sub
sbb
mov
call
pop
(bad)
aam
outs
and
scas
mov
dec
cmp
jle
pop
scas
mov
add
int3
mov
fisttp
or
imul
xchg
lock
cld
jg
pushw
mov
enter
lods
sar
scas
stc
imul
or
push
not
enter
fisttp
and
dec
dec
iret
pop
outs
mov
iret
loopne
xchg
cli
or
fcomip
jmp
aad
or
cdq
daa
adc
xor
pop
sbb
cmp
pusha
scas
aam
mov
fild
cmp
mov
(bad)
out
mov
or
inc
mov
(bad)
es
mov
loopne
cwde
fcomp
jb
sbb
(bad)
push
lods
add
mov
sub
mov
(bad)
cwde
pop
sub
fwait
add
call
xlat
sbb
out
mov
mov
mov
call
xor
pusha
push
mov
cli
(bad)
lock
mov
cmps
fs
cmp
dec
repnz
cwde
and
js
pop
or
out
and
mov
pop
mov
or
clc
push
and
jb
cmp
(bad)
jmp
mov
out
fimul
xchg
pop
scas
jne
jl
mov
pop
aad
mov
jmp
and
std
push
sub
pop
sahf
jl
jge
add
inc
jb
call
jg
jmp
mov
pop
jg
repnz
sub
stc
shl
mov
fldcw
retf
jp
sahf
and
out
mov
mov
add
sub
xchg
mov
es
call
inc
repz
adc
lods
ins
dec
sbb
jge
movs
dec
(bad)
cdq
test
adc
cmp
sub
xor
mov
pop
or
mov
mov
sbb
pop
mov
js
mov
or
dec
(bad)
(bad)
fisttp
jle
push
sbb
dec
xchg
sub
mov
(bad)
push
scas
sub
cmc
mov
ret
outs
cdq
add
pop
shl
pop
dec
outs
sti
fcmove
pop
(bad)
(bad)
(bad)
call
retf
sbb
fwait
test
ret
outs
push
test
sub
xchg
mov
pop
xor
(bad)
(bad)
sti
mov
xor
aad
jge
dec
stos
shr
leave
or
push
xor
push
mov
jp
mov
jmp
push
(bad)
cmps
push
popf
pop
sub
ja
cli
out
ret
mov
dec
(bad)
(bad)
jmp
push
pop
popf
fbld
lods
push
(bad)
push
mov
nop
test
cmps
mov
push
pop
mov
or
sar
(bad)
push
imul
inc
sub
pop
fimul
ins
mov
push
retf
in
dec
in
cdq
(bad)
scas
mov
into
ins
(bad)
jg
push
ins
and
jmp
cwde
call
jecxz
push
add
out
loopne
(bad)
call
sub
push
jnp
sbb
into
dec
adc
fistp
ins
iret
push
cmc
push
cld
pop
test
cli
add
sub
or
or
mov
adc
(bad)
sbb
adc
into
stos
(bad)
mov
pop
jl
cmp
(bad)
movs
clc
mov
dec
xchg
and
(bad)
jmp
push
xchg
sahf
cmps
push
mov
ds
shr
pop
ret
(bad)
(bad)
dec
fwait
in
cmps
sbb
sub
add
sbb
das
cmps
(bad)
(bad)
(bad)
inc
cmovo
sub
xchg
xchg
test
ja
fwait
pop
dec
pop
mov
pop
or
cmp
pop
std
call
shr
pusha
push
sbb
mov
push
sbb
pop
mov
js
lock
cmp
(bad)
js
sar
(bad)
jmp
repz
xchg
fwait
xchg
xchg
or
jg
call
fcmove
inc
gs
push
dec
push
(bad)
and
pop
lds
(bad)
(bad)
jmp
adc
movs
xchg
gs
push
hlt
jb
push
retf
add
call
mov
sbb
add
outs
jns
mov
xchg
pop
cwde
es
xchg
pop
add
stos
(bad)
call
or
add
mov
sub
or
push
or
dec
xor
dec
cmps
lods
pop
cwde
mov
sbb
mov
mov
pushf
mov
pop
mov
jp
lods
outs
(bad)
(bad)
(bad)
call
xchg
mov
dec
loopne
cs
sbb
mov
pop
jno
and
in
pop
xchg
ins
mov
inc
into
mov
push
ds
loop
(bad)
cmp
mov
jecxz
sbb
pop
repnz
or
(bad)
(bad)
mov
ds
or
(bad)
mov
dec
jmp
call
jle
repz
stos
pop
xchg
ins
or
stos
sahf
in
ins
add
add
xor
sub
xchg
and
push
scas
test
push
imul
xchg
(bad)
jmp
sub
xchg
lock
sbb
mov
sub
(bad)
(bad)
dec
sar
lods
out
sub
mov
neg
call
and
inc
jp
adc
scas
push
stos
sub
stos
fldcw
pop
repnz
ss
push
sub
loope
mov
(bad)
call
cmp
test
ret
cmp
xor
pop
out
or
and
(bad)
(bad)
mov
mov
xchg
mov
clc
ins
cmp
dec
outs
iret
es
mov
(bad)
jne
mov
add
add
imul
call
jecxz
(bad)
(bad)
(bad)
jmp
or
xchg
xor
mov
cmp
dec
dec
adc
jne
mov
adc
(bad)
(bad)
(bad)
jmp
sub
jmp
out
pusha
clc
(bad)
cmp
iret
arpl
sub
stos
aam
cli
adc
and
(bad)
jmp
nop
call
mov
test
stos
iret
sahf
push
outs
repnz
add
cmp
push
loopne
call
sub
sub
in
imul
mov
mov
loopne
push
ret
loope
and
dec
mov
loopne
stos
jle
imul
push
mov
or
clc
call
std
aaa
loope
outs
scas
mov
sti
mov
jmp
scas
ja
shl
(bad)
(bad)
push
stos
stos
test
jg
adc
adc
mov
sub
pushf
fisttp
cmps
and
mov
cld
or
push
(bad)
and
mov
(bad)
mov
(bad)
jmp
out
cwde
dec
or
pop
xchg
pop
in
ja
(bad)
(bad)
jg
xor
int
ret
cdq
mov
out
adc
xor
imul
(bad)
(bad)
jmp
pop
xchg
arpl
dec
stos
repnz
aas
adc
dec
clc
int
(bad)
jg
jb
lahf
pop
push
push
push
sahf
pop
mov
mov
add
and
xor
pusha
stos
pop
out
cmp
das
cmp
cmps
or
(bad)
(bad)
jmp
inc
or
sub
cmps
push
inc
mov
pop
loop
push
call
fcomi
dec
and
in
repnz
retf
cmp
push
pop
xchg
mov
cwde
sub
pop
pop
(bad)
(bad)
(bad)
jmp
pop
add
pop
jmp
sub
mov
shl
mov
pop
push
push
inc
sub
sub
push
(bad)
in
in
aaa
pusha
mov
mov
(bad)
push
ror
push
adc
in
jmp
jg
(bad)
call
test
ja
pop
jns
ins
sub
sub
aad
sub
(bad)
dec
dec
imul
jo
add
jmp
and
sbb
mov
call
cli
sbb
push
inc
push
jg
push
and
(bad)
clc
test
and
cmp
cld
(bad)
call
pop
sub
mov
adc
rcl
cli
in
mov
add
mov
jmp
mov
aam
inc
pop
xchg
dec
jp
sar
ja
dec
push
dec
or
jp
lock
and
retf
jbe
cmp
and
adc
xchg
ss
push
mov
mov
and
stos
and
cmovae
and
mov
cs
jmp
aaa
sub
pop
jae
sub
jns
cmp
stos
inc
pop
js
popf
test
lods
retf
(bad)
jnp
lock
(bad)
(bad)
(bad)
inc
xchg
pop
jmp
inc
stos
loope
outs
or
jmp
jmp
fcmovnb
icebp
lahf
fsubr
push
inc
mov
mov
cli
push
in
aaa
into
sbb
lea
call
pop
test
stos
(bad)
(bad)
(bad)
dec
mov
mov
jmp
mov
mov
sbb
daa
add
(bad)
(bad)
(bad)
dec
push
dec
inc
and
mov
cmp
lods
scas
bnd
out
sub
(bad)
(bad)
call
ror
jnp
or
fdivrp
sub
data16
dec
(bad)
(bad)
mov
(bad)
jmp
push
sub
or
stos
inc
out
or
push
stos
jge
call
(bad)
call
mov
into
sub
test
mov
pop
mov
enter
jecxz
out
jecxz
cmp
(bad)
(bad)
dec
cmps
fisub
sbb
sar
jb
push
sub
ret
dec
mov
cmp
iret
mov
(bad)
(bad)
mov
cmp
or
pop
xchg
shl
mov
aad
repz
(bad)
mov
aam
mov
std
inc
and
gs
bound
xchg
jmp
stos
(bad)
in
adc
stc
pop
scas
sbb
call
xchg
jg
and
in
push
lahf
cmc
jecxz
cld
(bad)
(bad)
dec
dec
imul
adc
xchg
fsubr
lods
add
mov
adc
neg
sbb
jg
or
mov
jmp
outs
icebp
sub
(bad)
call
push
push
and
jne
scas
lea
adc
das
mov
sahf
out
sahf
lods
mov
push
or
xor
loopne
mov
jnp
outs
(bad)
adc
jnp
leave
movs
jnp
jnp
fcmovne
jb
cdq
xchg
sub
or
lahf
call
xor
sbb
repnz
fwait
or
dec
retf
mov
call
push
lahf
fistp
popa
xor
enter
sub
iret
pop
(bad)
(bad)
fsubr
pop
or
xchg
mov
mov
cmc
scas
jne
xor
mov
ja
xchg
pop
fisub
sbb
sub
pop
dec
clc
test
(bad)
(bad)
test
(bad)
(bad)
call
das
sub
mov
jg
jnp
daa
mov
out
push
cmp
jl
mov
jg
inc
pop
popa
loop
cld
bound
ins
xchg
jb
mov
(bad)
call
cli
outs
mov
(bad)
sbb
scas
fisubr
test
call
(bad)
aad
mov
jp
pushf
jns
bound
shl
out
mov
lock
je
xchg
inc
ins
add
inc
xor
cmp
in
dec
add
cmps
mov
dec
fisub
iret
ret
or
jmp
hlt
call
pop
out
mov
cwde
out
(bad)
(bad)
fcomip
xchg
rcr
imul
loop
pop
in
imul
in
pop
out
clc
(bad)
dec
loop
cmp
test
cmp
mov
xchg
jle
imul
push
fld
int3
das
pop
lods
in
test
fwait
inc
or
pop
retf
inc
call
or
mov
mov
mov
push
lock
push
loop
push
ret
int3
push
fsubr
jp
inc
test
shl
enter
jbe
(bad)
(bad)
jmp
xor
jl
lea
out
pop
pop
cli
fistp
and
in
dec
scas
call
movs
mov
push
mov
mov
imul
popa
dec
jge
jl
push
das
cli
(bad)
jmp
pop
pop
scas
in
fwait
push
mov
xchg
push
sub
loope
mov
push
ins
mov
(bad)
cmp
or
sbb
int
std
call
push
sub
(bad)
call
add
mov
mov
imul
pop
lea
fwait
xchg
pop
stos
pop
out
or
push
daa
icebp
mov
daa
stc
dec
pop
loop
mov
std
(bad)
call
fcomp
lods
pop
mov
sub
xchg
cli
(bad)
mov
div
sub
retf
call
or
(bad)
(bad)
(bad)
(bad)
mov
sub
mov
jge
jp
retf
push
mov
in
sub
loope
jge
cmp
lahf
mov
pop
retf
stos
add
out
cli
inc
mov
sub
call
ins
(bad)
(bad)
(bad)
mov
sub
pop
push
sbb
mov
cmp
sar
loopne
(bad)
call
shr
xchg
mov
scas
mov
fld
adc
push
stos
in
and
pop
xchg
cmp
(bad)
push
xor
pop
dec
mov
(bad)
(bad)
(bad)
(bad)
mov
movs
inc
adc
adc
jmp
mov
iret
push
call
pop
std
(bad)
jmp
into
and
cs
into
call
push
sbb
jg
or
cs
pusha
(bad)
call
arpl
sub
push
or
lahf
xor
push
and
mov
lds
(bad)
call
cld
or
pop
sub
iret
fisubr
fadd
aaa
sbb
sub
and
xchg
fist
and
inc
fld
aaa
add
clc
(bad)
mov
mov
cmp
mov
(bad)
ss
pop
out
sub
jle
mov
test
popa
ret
test
outs
jp
xlat
adc
pop
enter
sti
fwait
scas
jmp
mov
jp
repnz
mov
push
pushf
fwait
leave
mov
jo
out
add
mov
test
mov
(bad)
(bad)
jmp
je
inc
pop
ja
loop
(bad)
nop
imul
stos
cmp
stos
push
pop
push
(bad)
(bad)
(bad)
jmp
adc
cmp
scas
je
pop
cmp
pop
mov
stos
ins
push
test
jl
cwde
sub
sub
mov
mov
xchg
stos
cmps
push
mov
fsubr
fbstp
and
imul
or
mov
pop
cmp
mov
or
cmp
daa
repnz
add
ds
outs
(bad)
(bad)
cmp
push
sub
(bad)
mov
or
cli
dec
pop
lahf
out
sbb
push
and
outs
jp
popa
xchg
jle
movs
out
call
mov
out
pop
sahf
sbb
sahf
outs
stos
push
mov
(bad)
jmp
jb
sti
dec
cmps
into
lods
sub
sub
std
nop
xor
(bad)
(bad)
inc
(bad)
out
cmps
in
clc
shl
in
dec
call
sub
push
leave
sar
xchg
mov
jo
dec
xor
outs
sub
int3
xor
(bad)
(bad)
jmp
pop
movs
(bad)
not
push
cld
imul
cmps
fmul
test
add
in
mov
mov
(bad)
(bad)
jmp
fadd
inc
lods
jle
adc
out
dec
retf
cdq
movs
pop
stos
(bad)
sar
mov
data16
call
cmc
inc
rep
lds
mov
push
adc
jnp
lods
jns
popf
or
(bad)
call
mov
lea
(bad)
mov
(bad)
(bad)
call
stc
pop
mov
mov
cwde
loopne
sub
adc
and
daa
cli
push
dec
jb
ds
jne
(bad)
(bad)
out
xor
fs
push
mov
pop
stos
rcr
jno
ror
push
cld
(bad)
(bad)
(bad)
(bad)
adc
call
or
mov
sbb
push
cld
sub
ds
call
outs
cmps
mov
mov
and
ret
imul
(bad)
ret
(bad)
(bad)
(bad)
call
and
repz
adc
rol
mov
enter
lods
fcomip
(bad)
(bad)
(bad)
fistp
in
stos
dec
inc
mov
inc
xchg
in
jl
rcl
in
sbb
mov
call
xor
sub
lock
lods
sub
imul
push
add
jmp
lods
and
fisub
or
cld
retf
add
xchg
cmps
mov
inc
dec
idiv
push
inc
dec
xchg
add
and
repnz
sub
(bad)
(bad)
jg
pop
dec
repz
ret
mov
mov
sub
mov
inc
xchg
adc
(bad)
(bad)
jmp
in
(bad)
and
call
dec
jl
nop
repnz
fisubr
in
pop
call
(bad)
jmp
mov
movs
loope
and
imul
jno
mov
sbb
sti
and
pop
jmp
inc
clc
call
jbe
imul
add
(bad)
inc
push
jecxz
xchg
hlt
mov
imul
push
idiv
ret
mov
fimul
sub
fnsave
pop
psadbw
xchg
add
dec
mov
add
dec
dec
enter
pop
push
fild
xor
pop
das
(bad)
(bad)
(bad)
push
push
scas
in
dec
cwde
(bad)
mov
mov
inc
mov
mov
les
cmp
push
arpl
mov
loop
loopne
(bad)
aam
mov
push
scas
sbb
fsin
fild
mov
cmps
repnz
ret
push
bt
sahf
mov
and
jns
je
fwait
ins
das
imul
sbb
(bad)
(bad)
inc
jbe
test
xor
mov
ds
cs
or
xor
ss
(bad)
dec
call
xchg
movs
dec
mov
(bad)
es
jmp
test
stos
das
push
mov
jp
mov
scas
sbb
sub
scas
lock
and
movs
lods
mov
(bad)
jg
sub
mov
cld
xor
mov
sub
arpl
aad
cwde
or
add
mov
sub
jb
clc
test
push
cs
(bad)
(bad)
(bad)
out
enter
pop
mov
sub
adc
(bad)
adc
daa
mov
enter
jb
(bad)
(bad)
mov
jl
out
iret
in
repz
pop
cmps
jns
adc
or
jg
jmp
(bad)
cmp
jp
fcomp
leave
out
(bad)
adc
loope
mov
(bad)
inc
mov
fidivr
push
and
fucomp
mov
mov
or
fwait
movs
(bad)
(bad)
cmp
test
xor
icebp
or
dec
(bad)
jmp
test
shl
sub
mov
sub
cmp
out
mov
cmc
(bad)
(bad)
(bad)
(bad)
cli
(bad)
movs
rcr
jmp
in
sub
cmp
es
sbb
in
sub
outs
push
cwde
sahf
mov
xor
popa
mov
loop
inc
out
mov
fs
aas
test
out
and
inc
movs
psubsb
push
mov
cmps
in
sub
outs
mov
loopne
gs
lods
jecxz
gs
jg
and
jg
test
(bad)
mov
(bad)
cmc
rcr
jb
pop
popa
pop
sbb
(bad)
cmp
shl
sub
loope
jmp
mov
call
int3
xchg
mov
cld
call
xchg
dec
xor
stos
pop
pop
(bad)
(bad)
(bad)
call
sbb
add
mov
lock
mov
mov
loop
xchg
xor
jae
(bad)
(bad)
jmp
cmp
inc
dec
pop
mov
(bad)
xlat
sub
jns
sub
lods
sbb
call
mov
in
xor
std
shl
scas
ficomp
repnz
push
cli
xor
dec
std
inc
test
popa
in
mov
xchg
inc
ins
jl
xlat
cmp
fwait
inc
pop
pop
lock
std
jbe
push
lods
mov
(bad)
(bad)
(bad)
call
gs
xchg
xchg
xlat
jl
push
aas
mov
ja
sub
lds
cmps
sub
(bad)
(bad)
dec
cmp
xchg
add
lahf
add
in
loope
ret
sub
(bad)
cmps
add
(bad)
push
jb
ret
push
inc
ja
inc
mov
mov
pop
ret
(bad)
in
(bad)
mov
ret
cld
lea
jecxz
pushf
mov
aaa
xor
dec
add
jg
cmp
mov
nop
cwde
and
mov
mov
and
cmp
jmp
stos
out
sbb
push
adc
mov
mov
ja
stc
xor
loope
fwait
mov
xor
call
outs
cmp
repz
mov
mov
(bad)
(bad)
jmp
jb
inc
or
add
jp
inc
inc
mov
(bad)
sbb
imul
(bad)
cld
cwde
loop
call
mov
mov
cwde
pop
retf
in
jle
push
sub
push
dec
sbb
cmp
adc
rol
(bad)
(bad)
jmp
cmp
std
mov
dec
xor
cmp
cmp
mov
cmp
arpl
ret
clc
fist
jns
push
jae
popa
std
(bad)
call
iret
retf
retf
dec
push
push
pop
sub
gs
push
pop
scas
mov
sbb
cmp
jl
or
cmp
push
loopne
cmps
test
scas
fsubr
imul
mov
sub
sub
fistp
xchg
stos
arpl
fimul
pop
loopne
aaa
fs
pop
jnp
sub
sub
iret
xor
inc
stc
cmp
sub
sub
into
retf
fmul
test
loope
mov
jbe
sti
sub
jle
out
test
lods
in
pop
shl
mov
mov
push
pop
stos
fistp
std
(bad)
(bad)
jmp
adc
aas
(bad)
shr
mov
rol
out
sub
(bad)
movs
push
loop
aaa
sbb
call
movs
(bad)
push
loopne
pop
xchg
mov
pop
bound
(bad)
jg
mov
or
inc
mov
mov
int3
mov
sbb
jb
inc
sub
mov
xchg
mov
push
int
rol
sub
imul
push
push
add
inc
sub
call
sbb
(bad)
(bad)
(bad)
jp
cli
int
(bad)
mov
loope
into
push
nop
mov
push
mov
sahf
pop
and
bound
cmps
jg
sub
jl
fs
(bad)
push
mov
push
cmp
hlt
aaa
sbb
imul
(bad)
(bad)
(bad)
fistp
repnz
push
adc
mov
mov
ins
cmp
xor
(bad)
(bad)
jg
imul
loope
mov
xor
add
push
std
cwde
adc
(bad)
mov
push
cs
xor
mov
sbb
xlat
sbb
(bad)
(bad)
call
retf
es
fisttp
dec
or
in
cmp
std
mov
mov
jmp
mov
dec
dec
imul
(bad)
call
test
sub
fcomp
(bad)
mov
xor
mov
push
sbb
not
(bad)
push
dec
sub
arpl
(bad)
(bad)
jg
scas
pop
sub
jecxz
not
xchg
into
ficomp
test
sub
in
es
(bad)
out
clc
push
jle
xor
xor
fst
jb
jno
popa
mov
(bad)
(bad)
sti
imul
(bad)
(bad)
push
sahf
or
push
push
push
inc
outs
or
mov
(bad)
(bad)
jg
mov
cmp
xchg
mov
je
in
or
add
(bad)
mov
loopne
xchg
std
and
mov
push
adc
(bad)
(bad)
jg
in
xor
jbe
pop
movs
popa
jo
mov
fcomp
pop
jo
das
jbe
cmps
jmp
push
push
repnz
bsf
or
jg
pop
rol
add
(bad)
jmp
scas
mov
nop
dec
scas
dec
push
js
jge
jb
push
and
sub
push
adc
or
mov
mov
add
lea
adc
(bad)
(bad)
xor
xchg
outs
inc
xchg
sub
mov
movs
in
push
cld
dec
inc
int3
sahf
or
sub
sub
in
in
in
pop
mov
sbb
(bad)
call
stos
mov
(bad)
out
xlat
push
xor
jnp
mov
lea
xor
and
aaa
cld
(bad)
dec
push
jmp
lock
push
scas
inc
or
ins
jmp
jmp
dec
xor
and
mov
mov
dec
gs
(bad)
(bad)
(bad)
(bad)
cmp
sahf
sub
iret
in
xor
retf
leave
xchg
jg
jno
dec
sub
(bad)
fistp
mov
inc
cli
xlat
mov
and
(bad)
inc
cld
in
mov
jae
ret
cs
and
push
inc
rcr
(bad)
jmp
leave
mov
ds
adc
push
dec
dec
repnz
dec
in
dec
int3
dec
and
retf
retf
nop
jb
(bad)
call
fsubr
jmp
cli
pop
and
(bad)
pop
je
and
(bad)
jg
mov
sbb
add
jne
ret
cmp
cmp
xchg
adc
xor
outs
aas
ins
mov
jmp
cmps
stos
je
xchg
retf
fld1
dec
stos
pop
neg
push
pop
jge
cwde
and
sub
loopne
mov
jecxz
jmp
js
fwait
inc
push
pop
(bad)
inc
call
jb
jnp
dec
xor
mov
(bad)
std
xchg
cmp
mov
push
jmp
loopne
scas
and
mov
xchg
dec
inc
call
push
push
repnz
add
xchg
push
bound
mov
call
cmc
sbb
daa
mov
les
push
lods
or
test
jbe
scas
(bad)
jmp
rcr
mov
das
call
jp
call
imul
xchg
test
ins
fwait
stc
call
and
scas
mov
push
cli
cdq
pop
out
inc
or
neg
scas
add
adc
idiv
push
mov
mov
jmp
cmp
stos
(bad)
es
mov
outs
mov
mov
pushf
cdq
stc
fimul
lock
inc
popa
loopne
sub
(bad)
jns
mov
test
xchg
inc
cld
jmp
cld
pop
lods
rcl
jg
mov
daa
mov
push
scas
loope
dec
or
dec
push
push
and
add
gs
mov
lds
addr16
(bad)
fbld
out
cli
xor
aam
(bad)
jne
mov
fist
(bad)
or
sub
and
call
test
xor
(bad)
imul
mov
dec
or
(bad)
jg
cld
in
sahf
fild
mov
ja
ss
dec
leave
jmp
(bad)
(bad)
(bad)
call
cmp
sub
arpl
mov
leave
jmp
outs
call
stos
rol
pop
(bad)
(bad)
(bad)
(bad)
jl
xor
mov
sbb
push
jp
(bad)
mov
adc
(bad)
enter
daa
cmps
lds
sub
gs
das
xor
cmp
rcr
stos
inc
cld
cmp
cmps
call
dec
or
mov
(bad)
(bad)
push
mov
mov
mov
pop
(bad)
clc
mov
pop
pop
(bad)
cmp
loope
lods
(bad)
(bad)
(bad)
call
addr16
xchg
retf
out
loope
or
mov
mov
dec
jge
xor
ins
inc
mov
cli
mov
mov
outs
push
rol
into
push
mov
sub
(bad)
jg
xchg
and
in
stos
cmps
and
(bad)
push
mov
and
(bad)
(bad)
inc
xor
lahf
xchg
mov
push
pop
into
out
arpl
repnz
cli
dec
js
mov
ret
ins
(bad)
(bad)
(bad)
jmp
ret
and
cs
xchg
push
scas
sahf
loop
js
push
(bad)
fbstp
xchg
(bad)
call
(bad)
jl
mov
(bad)
lea
xor
sar
xchg
outs
div
push
(bad)
adc
(bad)
(bad)
jmp
pop
or
mov
rcl
aad
(bad)
and
outs
stos
and
cwde
pop
push
or
jmp
cmp
xor
xor
jo
mov
cmp
outs
(bad)
jg
push
push
out
pop
dec
in
outs
and
adc
or
jmp
ffreep
in
retf
fidivr
sahf
imul
sub
push
fdivr
push
(bad)
(bad)
(bad)
call
push
outs
fdivr
or
adc
sub
daa
sub
xchg
lock
call
call
push
or
inc
mov
(bad)
call
scas
sbb
gs
ss
adc
xor
test
clc
jmp
stos
leave
push
cmp
in
clc
mov
cli
cld
dec
and
(bad)
sub
aaa
mov
mov
imul
mov
lods
jmp
loope
fs
stos
cmps
adc
push
push
push
cmp
lods
leave
call
shr
mov
add
jmp
mov
call
push
and
inc
push
sub
push
mov
movs
mov
fistp
push
push
clc
mov
clc
mov
js
adc
push
lock
fcomip
mov
adc
sub
mov
cmp
jmp
lods
(bad)
jmp
xchg
icebp
pop
adc
jl
int3
push
jg
inc
mov
ret
test
pusha
dec
ja
xor
pop
pop
das
mov
aam
cmps
mov
fisubr
fild
cmps
pop
push
and
pop
cmp
aaa
mov
bound
out
inc
mov
sub
pop
dec
fadd
in
pop
cld
pop
fisubr
cmp
imul
inc
mov
mov
int3
sub
pop
call
push
ins
imul
mov
ss
jmp
sbb
inc
sub
push
pop
popa
sbb
data16
in
xchg
sub
push
pop
cmp
ja
sbb
and
pop
cli
mov
imul
test
sbb
mov
jbe
pop
inc
addr16
mov
jns
(bad)
(bad)
(bad)
jmp
pop
push
mov
scas
call
inc
in
retf
inc
push
or
iret
mov
in
(bad)
(bad)
(bad)
mov
repnz
std
or
adc
sub
loopne
stos
int3
scas
lods
mov
or
xor
dec
sbb
test
daa
or
jb
mov
icebp
(bad)
call
dec
sub
or
sar
adc
push
cmp
lods
add
js
ds
sub
cmps
pop
in
(bad)
(bad)
fnsave
test
jmp
call
jmp
pop
cmp
inc
call
and
(bad)
(bad)
jmp
es
shr
in
cmp
pop
fist
xor
add
arpl
xor
cmp
das
push
add
mov
iret
xor
cmp
adc
clc
retf
adc
popf
jp
fistp
(bad)
(bad)
(bad)
(bad)
in
stos
ror
mov
jle
xchg
(bad)
test
jle
rol
dec
ficomp
mov
mov
jmp
sbb
push
enter
retf
adc
scas
sub
(bad)
call
and
mov
sbb
jns
inc
stos
sbb
(bad)
(bad)
fbstp
mov
scas
sub
das
mov
fwait
shr
mov
fild
fmul
dec
ins
sub
lahf
mov
mov
and
fcomp
(bad)
(bad)
(bad)
call
cdq
pop
cmp
sub
lock
movs
jecxz
repnz
(bad)
imul
stos
imul
adc
fdivr
into
push
dec
jns
(bad)
lods
adc
shr
jno
out
cmps
int3
je
(bad)
(bad)
(bad)
(bad)
push
imul
stos
or
(bad)
mov
shl
push
cmp
imul
push
jmp
push
mov
mov
sub
mov
sahf
test
mov
push
mov
ja
in
jg
or
cdq
mov
fs
adc
or
lea
(bad)
mov
xor
sub
(bad)
(bad)
(bad)
call
out
imul
sar
dec
ret
sub
lock
(bad)
out
out
seta
or
jmp
ins
lahf
push
ins
push
sbb
sub
add
cmps
xor
or
mov
stos
jmp
imul
cli
(bad)
jg
lea
mov
sub
or
cwde
sbb
sub
jmp
outs
lods
test
xchg
es
adc
dec
or
mov
(bad)
(bad)
dec
xor
mov
xor
or
jl
sub
ins
push
jb
cmp
mov
(bad)
(bad)
dec
lea
jmp
fwait
push
add
je
retf
jo
(bad)
sahf
std
(bad)
mov
xor
clc
jmp
mov
push
inc
leave
into
test
adc
stos
mov
js
fadd
jp
out
or
inc
jno
retf
jb
(bad)
mov
ja
pusha
loop
repz
push
mov
(bad)
call
mov
out
mov
mov
pop
(bad)
mov
out
push
fmul
mov
(bad)
inc
adc
or
call
mov
add
or
clc
mov
cdq
arpl
sti
xor
repnz
scas
sub
xor
call
push
cwde
shl
pop
imul
jge
jnp
push
(bad)
(bad)
jmp
mov
pop
in
or
mov
jmp
loop
cmps
repnz
sbb
stos
(bad)
jmp
mov
repnz
adc
es
sbb
lods
mov
(bad)
(bad)
jmp
fstp
arpl
mov
push
(bad)
mov
inc
ins
jns
pop
mov
adc
and
iret
(bad)
test
mov
push
dec
mov
popf
bound
pop
fistp
loopne
jg
sub
clc
in
stos
retf
add
lods
cmp
(bad)
(bad)
jne
mov
(bad)
call
nop
or
cmp
mov
test
push
push
test
(bad)
jmp
imul
push
scas
das
inc
aas
cdq
cld
and
call
mov
jnp
stos
aad
icebp
call
cwde
jno
mov
dec
cld
dec
stos
mov
dec
mov
and
mov
call
in
scas
retf
test
or
jbe
adc
stos
dec
out
push
xor
(bad)
(bad)
push
test
je
push
clc
dec
dec
sub
repnz
mov
inc
sbb
jmp
dec
ret
jg
push
and
stos
mov
daa
adc
jge
and
(bad)
rcl
movs
std
or
xchg
retf
xchg
sahf
arpl
test
loopne
mov
clc
call
std
scas
xchg
cmc
stos
inc
mov
pushf
sti
cmp
(bad)
(bad)
call
ss
dec
jl
arpl
push
bound
pop
push
push
stos
xchg
or
jg
(bad)
call
push
test
es
jp
sbb
mov
movs
pop
loop
mov
mov
mov
repnz
push
shr
dec
sub
cmc
(bad)
(bad)
push
dec
fwait
jno
rcr
cmp
and
mov
mov
inc
fist
lods
jmp
js
pop
fidivr
loop
cmps
pop
movs
js
stos
iret
mov
iret
adc
rcl
(bad)
mov
sub
das
and
test
sahf
inc
js
sub
nop
fist
push
test
sbb
(bad)
(bad)
push
mov
bound
mov
mov
inc
xchg
mov
cmps
or
nop
push
ror
xor
hlt
mov
cwde
stc
push
dec
leave
mov
ret
(bad)
sbb
dec
lahf
adc
sahf
and
mov
mov
push
(bad)
call
jae
(bad)
pop
cmp
xchg
retf
push
and
lea
cmp
out
ds
daa
mov
pop
in
jg
mov
jecxz
pushf
cmp
stos
mov
call
nop
stc
movs
pop
mov
retf
(bad)
fbstp
jecxz
add
mov
dec
enter
(bad)
out
sbb
mov
jp
adc
(bad)
(bad)
inc
call
mov
mov
arpl
push
outs
retf
(bad)
pop
mov
rcl
push
scas
int3
es
pop
out
sbb
cmps
sub
arpl
jno
ja
(bad)
jmp
add
pop
sbb
nop
pop
pop
inc
jp
add
jmp
pop
aam
lock
mov
mov
cmp
ins
add
shl
mov
add
ret
fisttp
fcom
stos
mov
and
outs
mov
push
test
(bad)
(bad)
jmp
push
add
jo
xor
addr16
rcr
add
daa
mov
jno
push
or
hlt
and
(bad)
in
jmp
shr
dec
xor
jmp
adc
mov
call
sbb
sbb
cli
aaa
add
arpl
jno
mov
sub
fisttp
mov
(bad)
(bad)
jmp
std
fidivr
xchg
cmps
lahf
cmps
sub
retf
adc
xchg
lods
inc
leave
xchg
jnp
mov
out
pop
cs
inc
add
xor
push
sub
ins
retf
sub
fist
aas
cmp
(bad)
mov
or
fstp
in
mov
push
loope
push
(bad)
(bad)
(bad)
jmp
fmul
cld
mov
dec
mov
xchg
sbb
ins
jle
mov
inc
push
std
xor
mov
sbb
cmps
lods
ja
movs
lock
dec
adc
stos
arpl
(bad)
jmp
cdq
scas
movs
into
push
out
fistp
enter
test
mov
imul
jne
push
shl
(bad)
fldenv
scas
popf
add
(bad)
loopne
call
push
dec
(bad)
retf
outs
sar
scas
(bad)
fidivr
(bad)
fsub
fstp
or
jle
(bad)
(bad)
inc
stos
aad
mov
mov
inc
inc
xchg
cs
cli
call
imul
mov
mov
lock
(bad)
loope
cld
adc
adc
mov
jo
jb
ins
(bad)
(bad)
(bad)
dec
jno
dec
jmp
clc
js
retf
jae
pop
pop
pop
(bad)
adc
stc
shl
out
cli
(bad)
(bad)
push
pop
lock
nop
daa
stos
outs
inc
hlt
sub
mov
jb
fwait
jnp
cmp
mov
jmp
push
cmp
in
ins
cmc
shr
loop
pop
aad
xor
and
add
std
out
adc
fsubr
mov
xchg
jae
(bad)
(bad)
(bad)
jmp
adc
mov
add
pop
data16
push
inc
je
cs
arpl
jmp
scas
add
ins
retf
mov
(bad)
mov
add
shr
ins
test
jp
inc
mov
inc
jp
(bad)
(bad)
(bad)
(bad)
fist
icebp
push
dec
dec
mov
xchg
lods
push
adc
jmp
mov
shl
fnclex
lahf
mov
es
and
pop
js
(bad)
jmp
je
ja
dec
mov
ret
not
jp
stos
(bad)
fdiv
dec
ins
call
inc
mov
jo
jg
adc
and
dec
movs
jge
ja
ret
int
and
sub
pop
add
(bad)
jg
call
out
jl
and
movs
mov
cmp
cmps
or
mov
(bad)
dec
adc
neg
push
rcr
mov
mov
fcomp
ror
mov
(bad)
push
repz
adc
mov
imul
jmp
mov
mov
jmp
cmp
test
push
dec
sbb
mov
ja
out
jmp
xchg
(bad)
jle
and
push
imul
jmp
movs
mov
aam
shr
shr
in
(bad)
(bad)
call
mov
sbb
sbb
and
or
xor
cmp
fistp
loopne
dec
push
cmp
sub
sub
mov
adc
loopne
call
mov
sub
mov
shl
hlt
mov
ret
(bad)
(bad)
fisttp
xor
jmp
xor
pop
(bad)
(bad)
adc
inc
or
das
inc
ins
push
mov
sub
ror
icebp
xor
add
sbb
in
mov
jmp
es
jmp
push
sbb
imul
jmp
ss
mov
(bad)
(bad)
(bad)
call
test
mov
popa
inc
jmp
test
xchg
call
and
and
aad
dec
call
sbb
(bad)
(bad)
fcmovnb
(bad)
call
rol
addr16
xor
outs
jmp
rcr
cs
add
nop
frstor
lock
cmps
outs
ja
jne
pop
lock
lea
js
jbe
and
adc
cwde
push
(bad)
sbb
add
push
mov
mov
inc
push
jb
cld
cld
(bad)
(bad)
(bad)
call
and
shr
jp
sub
call
mov
or
sub
add
fst
jp
mov
stos
mov
je
cmps
mov
std
imul
jmp
ficom
inc
in
leave
jne
sbb
sub
inc
push
sahf
call
fisttp
(bad)
in
dec
sub
cmps
sbb
mov
call
dec
push
std
les
or
(bad)
(bad)
call
bnd
adc
pop
pop
mov
mov
retf
push
movs
(bad)
(bad)
jmp
jmp
loop
push
clc
lock
scas
inc
mov
jns
lahf
(bad)
sub
(bad)
(bad)
jmp
lods
adc
clc
cmp
dec
repnz
not
inc
xchg
ret
retf
push
retf
test
stos
mov
(bad)
(bad)
jmp
sub
and
(bad)
cld
sub
lea
push
or
(bad)
(bad)
(bad)
mov
stos
push
outs
cmps
sbb
mov
mov
mov
lds
cmp
cmps
std
(bad)
(bad)
(bad)
jmp
test
xchg
cmps
xor
scas
hlt
fwait
sbb
adc
adc
push
mov
cli
call
lock
mov
mov
pop
outs
sti
sub
jne
jne
test
(bad)
push
dec
xchg
push
sub
xor
sub
push
outs
imul
mov
jmp
mov
inc
push
lea
cmps
mov
xchg
jb
jmp
mov
mov
cmp
inc
cmp
outs
clc
gs
pop
test
push
movs
and
das
clc
push
ds
std
sbb
or
sbb
in
jmp
(bad)
push
shl
xchg
jae
ret
stos
inc
test
ins
shr
les
mov
push
add
mov
jo
aam
jmp
push
pop
imul
jns
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
imul
inc
imul
pop
scas
cmp
dec
push
(bad)
(bad)
mov
mov
sbb
icebp
test
sub
(bad)
(bad)
(bad)
push
(bad)
data16
cld
pushf
ss
mov
lahf
repnz
sti
loope
stos
xchg
ret
mov
ja
mov
cs
jns
xchg
(bad)
push
call
or
leave
ins
test
call
add
jmp
cli
dec
adc
fst
test
mov
mov
daa
add
cmps
stos
(bad)
(bad)
(bad)
(bad)
mov
fdivr
rcl
jb
das
push
(bad)
loopne
out
out
xor
jnp
push
test
cs
cld
retf
lods
(bad)
call
jecxz
lods
(bad)
jno
cli
sub
out
fcmovb
sub
lahf
xchg
xor
aas
xor
(bad)
(bad)
call
(bad)
je
fistp
mov
cli
and
cmp
sbb
call
(bad)
(bad)
test
push
sbb
loopne
pusha
fimul
out
loopne
lahf
xor
adc
imul
xchg
dec
mov
jmp
sahf
cmps
jns
sbb
sub
out
mov
sbb
clc
dec
(bad)
(bad)
(bad)
call
sahf
cld
outs
jnp
mov
pop
icebp
call
popa
sti
push
js
into
dec
adc
je
(bad)
sti
scas
dec
jb
in
(bad)
dec
in
(bad)
push
push
mov
lea
mov
cli
jo
enter
add
pop
dec
mov
test
mov
test
mov
(bad)
dec
ins
cmp
and
out
mov
push
retf
adc
xchg
fstp
(bad)
(bad)
call
rcl
or
jmp
dec
mov
sbb
xlat
loope
jge
(bad)
pop
cld
stos
(bad)
push
xchg
mov
pop
bnd
fwait
adc
scas
jmp
je
fs
jg
dec
xchg
lods
rep
dec
test
ror
clc
(bad)
call
ins
ins
cmp
in
cmp
fs
cmp
outs
outs
arpl
addr16
inc
mov
pop
imul
sub
mov
nop
sub
call
rcr
out
jo
sbb
and
cmp
fsubr
fbstp
mov
sbb
in
xor
test
pop
xor
gs
shl
gs
xchg
(bad)
fild
pop
imul
xor
gs
inc
lods
or
cmp
fdivr
(bad)
call
jmp
jae
ror
xchg
dec
popa
jo
jecxz
loope
mov
xor
je
mov
sti
fild
add
push
outs
int
jg
(bad)
(bad)
jmp
mov
popf
jmp
js
cli
xchg
enter
(bad)
sti
popa
pop
sahf
push
dec
ror
hlt
mov
rcr
adc
inc
sti
pusha
adc
push
and
ins
loop
sub
fdiv
sbb
and
das
adc
pop
or
mov
outs
pusha
cmp
loop
sbb
mov
shr
push
push
sahf
dec
and
fcomp
mov
dec
xchg
inc
jle
aaa
pusha
sti
popw
shr
sti
(bad)
inc
popa
fsub
xchg
in
xchg
shl
sti
push
xor
push
mov
call
in
clc
jo
(bad)
ins
lea
dec
addr16
pusha
mov
or
daa
fsub
hlt
or
icebp
sti
retf
mov
add
(bad)
call
push
jns
dec
popf
ret
sahf
inc
jl
addr16
jmp
fist
xchg
sub
bound
arpl
push
inc
(bad)
repz
ret
add
jns
jmp
jg
or
sar
sbb
lods
lea
jl
sub
outs
int
call
pop
fdiv
fs
push
mov
mov
push
sub
outs
mov
xchg
xchg
imul
sbb
mov
(bad)
in
movs
dec
loopne
adc
icebp
pop
pop
dec
xor
fcom
(bad)
(bad)
call
push
jns
push
sub
mov
shr
sti
lock
loopne
(bad)
(bad)
jmp
addr16
jbe
fabs
push
adc
mov
push
movs
pop
rep
popa
lods
retf
das
(bad)
inc
call
iret
jl
push
pop
mov
pop
scas
or
jmp
mov
arpl
out
in
jg
sbb
std
cmp
enter
mov
outs
pop
outs
dec
adc
adc
(bad)
(bad)
call
into
mov
rol
mov
xor
dec
pop
int
sbb
or
ds
jmp
repz
stos
ret
ror
jecxz
jg
test
daa
cmp
pop
in
imul
jno
out
mov
(bad)
mov
leave
nop
nop
ficom
or
ss
sub
loopne
xlat
(bad)
(bad)
(bad)
(bad)
mov
adc
push
mov
lock
stos
dec
mov
jns
sub
add
lahf
jmp
retf
push
(bad)
and
push
cli
jp
ret
sbb
mov
dec
jbe
cmps
fcomip
es
jbe
jp
dec
mov
mov
xchg
into
(bad)
jg
(bad)
cmp
sub
leave
aas
mov
retf
ret
test
mov
jmp
test
add
pushf
rol
aas
not
mov
and
(bad)
(bad)
push
dec
cmps
xchg
fdivr
dec
cs
lea
push
push
mov
(bad)
stc
aad
outs
cli
(bad)
jmp
imul
imul
imul
in
xchg
ret
arpl
pop
mov
rcr
sub
sub
stos
stos
push
and
sub
pop
cmp
push
xchg
aaa
mov
jb
mov
jmp
scas
clc
jg
fnstenv
das
mov
inc
gs
in
add
add
iret
call
fistp
mov
pop
cli
jge
pop
mov
mov
ret
scas
aaa
add
add
mov
and
inc
inc
retf
retf
pop
and
(bad)
in
cmp
jl
ret
jp
call
xchg
lahf
cmp
xchg
cli
bound
adc
xor
hlt
int
(bad)
(bad)
dec
outs
sbb
imul
jmp
ret
fs
ret
clc
jmp
or
cld
and
icebp
repnz
fwait
int
(bad)
(bad)
adc
adc
xor
sub
into
cmp
clc
(bad)
(bad)
(bad)
cmp
iret
xchg
movs
scas
push
cmp
test
jp
int3
xor
movs
std
(bad)
(bad)
dec
adc
push
fnstenv
sahf
dec
sahf
jmp
jmp
jmp
xor
(bad)
pop
dec
jecxz
(bad)
cmp
pop
jmp
adc
mov
and
jmp
sbb
shl
retf
fwait
sub
mov
std
push
fs
adc
stos
dec
loopne
into
enter
mov
ffreep
retf
cmp
sub
mov
popa
(bad)
jg
movs
shl
popa
dec
sub
or
mov
mov
sbb
mov
cs
sahf
jb
sbb
pusha
push
sar
mov
call
sub
jp
or
mov
sub
push
or
adc
inc
popf
stos
pusha
stos
mov
sar
xchg
in
xor
int3
(bad)
(bad)
(bad)
inc
in
mov
fisttp
sbb
into
add
iret
imul
enter
sbb
(bad)
(bad)
call
retf
stos
fcos
retf
jp
das
test
lahf
leave
dec
jns
clc
fistp
retf
lahf
xor
mov
lods
or
sub
(bad)
(bad)
(bad)
jmp
mov
or
call
jb
cwde
xor
ins
sti
add
retf
pop
add
sti
fstp
ins
imul
lahf
lahf
test
lock
xchg
dec
pop
pop
sbb
(bad)
jmp
pushf
dec
and
out
ins
dec
imul
jg
add
movs
call
imul
mov
xchg
dec
and
(bad)
(bad)
push
ins
test
jg
mov
xchg
mov
cmp
adc
or
jl
jp
retf
push
dec
sbb
std
add
out
data16
out
test
push
cld
(bad)
call
sub
jp
call
movs
mov
or
lock
dec
mov
mov
in
pop
xchg
sub
inc
mov
(bad)
fsub
cmps
inc
sbb
lods
cmp
mov
psubsb
add
pop
popa
cli
mov
push
mov
scas
jmp
push
test
call
jnp
dec
and
stos
(bad)
(bad)
xchg
mov
inc
imul
and
enter
xchg
(bad)
fbld
and
lahf
dec
jbe
jae
sub
jmp
stos
sbb
sub
out
sub
xchg
fsubr
aam
loope
(bad)
call
into
xchg
test
and
loope
(bad)
(bad)
jmp
aaa
movs
push
fsubr
mov
clc
pop
lahf
fbstp
push
test
cmps
test
lods
daa
jle
xchg
xor
xchg
jnp
cmps
inc
push
(bad)
ds
dec
retf
js
repz
cli
adc
sbb
(bad)
(bad)
(bad)
sti
jb
sub
add
jp
and
data16
dec
push
stos
push
(bad)
(bad)
jg
js
adc
(bad)
loope
shr
cmp
movs
jae
or
clc
or
mov
dec
sti
mov
ss
sbb
fcomp
jmp
and
in
adc
mov
adc
cmp
repnz
hlt
call
test
ror
sub
inc
sti
inc
dec
jle
test
dec
dec
shl
test
outs
(bad)
jg
push
pop
call
movs
ret
mov
aad
stc
adc
call
ret
shr
and
cmps
jmp
xor
cmp
nop
lods
nop
dec
loopne
cli
(bad)
(bad)
fcom
dec
popa
stos
(bad)
sbb
(bad)
retf
xchg
or
jmp
sahf
mov
mov
pushf
sti
dec
in
out
movs
lods
(bad)
(bad)
(bad)
dec
test
outs
test
popf
jp
loopne
(bad)
cmovo
and
movs
test
xchg
xchg
icebp
mov
mov
sub
(bad)
(bad)
fild
pushf
cs
ret
sub
outs
sub
mov
int
cmp
or
pop
int
mov
mov
call
retf
mov
jmp
mov
push
push
dec
or
sub
(bad)
push
mov
add
mov
in
pushf
mov
iret
or
cmps
jmp
sti
(bad)
jmp
xchg
push
cmps
sub
push
sub
shr
mov
xor
(bad)
dec
sti
outs
clc
lock
and
push
dec
mov
dec
ds
(bad)
(bad)
mov
sub
mov
sub
stc
sub
mov
int
pusha
jp
lahf
cmp
add
pop
jmp
sbb
(bad)
or
(bad)
shl
movs
into
and
mov
xchg
push
mov
push
mov
jmp
out
xchg
cmp
dec
mov
ins
bound
push
repnz
wbinvd
mov
(bad)
(bad)
(bad)
cmp
cmc
test
jl
push
jg
jmp
loop
icebp
pop
addr16
ins
cmps
sbb
jns
(bad)
fild
add
pop
sbb
scas
out
mov
(bad)
call
mov
cmp
push
or
mov
or
js
xor
sub
pop
jmp
js
mov
out
aam
scas
xchg
sbb
xor
sub
pop
sar
xor
and
stos
fdiv
push
push
call
jp
jmp
lods
or
enter
lods
inc
mov
xchg
out
and
sar
(bad)
jmp
aas
and
push
sti
retf
mov
add
jbe
mov
push
sbb
pop
jge
and
(bad)
mov
fwait
scas
jns
scas
(bad)
fbld
pop
lods
mov
add
mov
cli
pop
inc
mov
test
ret
test
mov
hlt
sub
cli
(bad)
jmp
mov
in
xchg
sub
mov
inc
sbb
mov
sar
outs
xor
dec
lods
(bad)
dec
sub
fwait
mov
(bad)
sbb
rcr
jo
(bad)
(bad)
push
and
inc
fsubr
cmp
pop
xor
in
or
mov
loopne
call
(bad)
(bad)
js
jp
dec
das
xchg
mov
test
lahf
loopne
or
fist
push
adc
mov
and
cmp
stos
mov
add
rcr
xchg
test
sbb
(bad)
inc
mov
(bad)
fmul
movaps
sub
push
inc
sbb
icebp
jge
push
sbb
sub
jb
adc
fwait
pop
push
cmps
jl
fs
lods
arpl
sub
(bad)
(bad)
inc
xor
mov
pushf
mov
xor
sahf
(bad)
(bad)
(bad)
push
cmps
out
sub
in
xor
data16
imul
mov
cmp
out
pop
cmc
call
adc
ins
test
add
inc
fstp
(bad)
dec
adc
push
mov
dec
cmp
jle
or
cmp
jmp
(bad)
mov
mov
push
aad
ins
lods
ds
shr
mov
(bad)
(bad)
(bad)
cmp
push
call
rcr
stos
loop
clc
in
mov
es
jmp
and
(bad)
fdivr
imul
jns
outs
inc
(bad)
(bad)
(bad)
mov
lahf
and
mov
cmp
lahf
loope
cmps
nop
fneni(8087
cwde
sbb
out
sub
retf
jg
sbb
das
jmp
ror
mov
inc
ss
cmp
push
sub
mov
(bad)
das
in
into
rcr
lock
repz
fld
sbb
mov
adc
scas
xor
dec
cli
jle
cmp
or
cwde
jmp
xchg
ds
and
test
sbb
mov
outs
clc
(bad)
(bad)
(bad)
cmp
cmps
or
pop
sub
pop
inc
mov
(bad)
sahf
cmp
out
cmp
ds
mov
stos
scas
mov
test
cld
inc
push
imul
outs
pop
ss
push
fimul
and
(bad)
jg
or
jno
test
(bad)
sub
pop
rol
(bad)
(bad)
call
adc
fidivr
sub
xor
retf
std
ins
sbb
push
pop
xor
cmp
cmc
dec
lock
loope
dec
or
stos
fst
fwait
sub
mov
mov
retf
push
(bad)
push
pop
mov
cmp
xchg
sub
add
xchg
add
xchg
dec
adc
call
scas
mov
and
mov
in
call
pop
sub
push
lock
cwde
mov
jl
and
lds
retf
(bad)
mov
es
adc
mov
scas
or
arpl
sub
mov
sub
sub
push
sahf
scas
cs
hlt
dec
inc
inc
jge
(bad)
mov
jmp
test
call
stc
inc
sbb
push
(bad)
dec
lock
callw
adc
and
mov
dec
xchg
retf
jb
push
int
inc
popf
mov
retf
icebp
push
imul
jmp
sbb
clc
ret
or
push
in
push
dec
sub
xchg
leave
inc
out
aad
mov
call
sbb
in
sub
mov
adc
cwde
cli
in
enter
(bad)
mov
xchg
mov
sbb
pop
lock
test
xor
out
and
fsub
mov
pop
sar
outs
clc
(bad)
fsub
sbb
test
jg
add
pop
outs
push
(bad)
cmps
xchg
cmps
pop
or
clc
lods
push
test
iret
lock
dec
mov
sbb
push
pop
repnz
dec
mov
pop
jne
(bad)
(bad)
jmp
loop
sub
test
inc
sbb
test
sahf
mov
enter
jg
sub
(bad)
(bad)
(bad)
call
ss
(bad)
dec
cli
xor
mov
movs
adc
dec
adc
or
cld
(bad)
call
ins
hlt
jp
xor
mov
sahf
and
jb
inc
jge
mov
mov
xor
iret
dec
sub
pop
mov
xor
(bad)
(bad)
call
sub
adc
js
sub
mov
jmp
ret
sbb
mov
aam
push
inc
aas
push
jle
mov
movs
(bad)
jge
(bad)
adc
adc
jne
mov
dec
int
sub
xlat
lea
ds
mov
iret
xor
push
add
jecxz
call
stos
xchg
mov
ds
out
test
out
fbld
jle
(bad)
(bad)
(bad)
call
mov
(bad)
jle
(bad)
lods
lock
inc
sti
icebp
xor
stc
dec
mov
mov
ins
(bad)
adc
(bad)
(bad)
jmp
mov
xchg
invd
js
fwait
shr
test
retf
mov
mov
clc
sub
push
(bad)
das
push
cs
cli
dec
or
(bad)
(bad)
push
mov
jb
out
xchg
or
mov
ret
sbb
aad
(bad)
(bad)
dec
outs
arpl
add
stos
jp
ins
aaa
sub
in
xchg
sbb
jmp
cli
(bad)
dec
enter
mov
lods
in
ds
sbb
test
fidiv
sbb
(bad)
(bad)
(bad)
fimul
clc
xor
xchg
into
mov
sub
dec
mov
in
fiadd
(bad)
inc
mov
push
xchg
and
cmp
stos
cdq
xor
fstp
add
pop
mov
jmp
dec
lods
pop
loope
jmp
ss
inc
cmp
push
pushf
adc
stc
mov
(bad)
(bad)
jmp
cli
iret
xor
adc
xchg
mov
jnp
add
rcl
sub
test
add
fisttp
aaa
test
outs
and
scas
aaa
mov
xchg
aaa
scas
or
pop
mov
outs
outs
lods
lods
cmp
and
in
mov
(bad)
(bad)
jmp
in
cs
jnp
hlt
std
scas
in
cdq
cmp
imul
ins
cdq
xor
mov
or
adc
mov
jns
jg
dec
mov
push
mov
mov
call
jmp
clc
pop
push
xchg
mov
xchg
imul
ficomp
iret
mov
xchg
sub
and
lods
in
dec
mov
and
lock
and
mov
movs
or
bound
shr
xor
(bad)
(bad)
(bad)
push
jno
fdiv
xchg
jecxz
adc
(bad)
int3
(bad)
pop
push
(bad)
cmp
and
loop
inc
mov
jge
(bad)
(bad)
call
adc
sahf
call
or
aaa
push
xor
outs
sub
lods
mov
std
(bad)
(bad)
(bad)
push
ret
out
xchg
push
push
jp
cmp
dec
enter
dec
push
cmp
adc
pop
pop
dec
(bad)
(bad)
(bad)
jmp
and
dec
mov
(bad)
nop
jo
xchg
rcl
ja
repz
mov
add
sub
mov
push
jae
xor
nop
xchg
pop
sub
pop
into
push
jmp
xor
sub
pop
rcr
js
add
mov
retf
adc
jae
cs
aaa
or
dec
(bad)
call
ret
bound
daa
jp
jle
pop
out
mov
push
xchg
sub
sahf
mov
into
stos
sbb
call
sbb
pop
push
ror
jmp
shl
stos
or
(bad)
(bad)
(bad)
dec
ins
sbb
xchg
lahf
out
adc
shr
sub
cmp
loopne
sub
sub
or
(bad)
jmp
or
out
out
and
jmp
sub
rcl
out
jae
and
push
call
dec
xchg
daa
in
shl
jl
aaa
mov
ret
adc
ret
pop
shl
(bad)
mov
mov
call
ret
pop
retf
(bad)
push
ins
cs
dec
pop
int3
sub
daa
ret
ret
jp
mov
dec
daa
pop
(bad)
(bad)
mov
call
lods
mov
sub
jns
ins
test
inc
lods
(bad)
(bad)
(bad)
jmp
mov
pop
out
call
out
mov
xlat
jp
adc
push
stc
xchg
sub
(bad)
jp
inc
pop
sti
imul
(bad)
mov
call
add
xchg
(bad)
call
pop
lods
xchg
jge
or
adc
cmp
mov
sub
(bad)
(bad)
(bad)
jmp
xor
cld
push
mov
outs
aaa
stos
xchg
retf
rcl
push
jl
(bad)
dec
mov
repz
mov
sbb
or
loop
test
cwde
(bad)
das
cmps
cmp
mov
dec
cmp
add
jb
push
xor
or
stc
(bad)
sbb
push
dec
(bad)
int
(bad)
mov
xchg
rol
bound
mov
ins
mov
in
scas
repnz
enter
jmp
(bad)
ins
xor
cmp
(bad)
call
or
jae
mov
(bad)
test
sbb
mov
cmp
xor
in
mov
(bad)
icebp
adc
(bad)
(bad)
push
push
or
mov
addr16
push
cmp
mov
and
jl
cld
int3
push
stos
(bad)
aas
cli
or
cmp
inc
sub
jmp
ret
(bad)
(bad)
call
mov
pop
adc
es
cmp
cwde
imul
mov
(bad)
mov
mov
mov
dec
mov
mov
scas
in
cmp
loop
(bad)
inc
outs
(bad)
sahf
inc
scas
enter
loop
das
into
push
pop
mov
sbb
es
in
lock
mov
cmp
sub
jae
fild
xor
pushf
ffree
dec
inc
mov
mov
push
das
mov
add
clc
fucomip
sbb
(bad)
mov
call
in
sub
sbb
xor
dec
call
outs
mov
aaa
mov
add
sbb
std
stos
in
cmp
(bad)
(bad)
jmp
or
fdivr
leave
fisub
aad
mov
mov
and
ja
scas
leave
mov
clc
cmps
(bad)
(bad)
jmp
xor
imul
jle
in
and
cs
mov
int3
pop
fnstenv
adc
and
(bad)
(bad)
inc
sbb
cs
js
cld
adc
xor
imul
sub
fdiv
sbb
jmp
jo
fwait
xor
dec
xor
popa
ror
mov
es
add
or
call
fdiv
pop
int
or
dec
and
adc
es
or
pop
std
loopne
xchg
aam
add
jmp
hlt
xor
dec
jl
(bad)
(bad)
(bad)
mov
push
cmp
outs
ret
pop
sub
jmp
mov
(bad)
(bad)
(bad)
call
mov
and
loopne
jmp
mov
pop
or
mov
(bad)
call
sub
fidivr
mov
js
outs
dec
arpl
call
sub
pop
mov
(bad)
push
and
pop
dec
cdq
outs
out
push
test
jmp
xchg
imul
cmp
mov
clc
or
stc
sub
aad
or
icebp
xchg
in
(bad)
(bad)
(bad)
call
and
mov
clc
leave
jmp
dec
(bad)
push
(bad)
stos
pusha
(bad)
and
mov
push
mov
mov
stos
mov
mov
mov
sbb
lods
pop
add
dec
push
fcmove
inc
bts
pop
call
push
pop
or
or
inc
cdq
jae
ins
jno
(bad)
fcomip
fchs
ret
xchg
ds
and
mov
std
mov
push
fs
in
push
mov
shl
mov
pop
mov
(bad)
(bad)
jmp
sbb
mov
xchg
ins
push
inc
cwde
mov
dec
stos
push
(bad)
icebp
icebp
jmp
dec
(bad)
(bad)
(bad)
dec
out
(bad)
fild
repz
and
scas
scas
pushf
jns
push
dec
pop
cdq
cmp
stos
cmp
or
cld
pop
(bad)
mov
fsubrp
(bad)
test
data16
cs
inc
dec
mov
test
(bad)
dec
call
je
jg
xor
cmps
push
jg
push
(bad)
lock
mov
xlat
pop
retf
pop
(bad)
mov
push
jmp
sbb
clc
movs
dec
and
mov
fwait
retf
pop
(bad)
dec
push
push
xchg
in
or
pusha
mov
or
int3
repnz
addr16
sbb
in
sub
jnp
lock
fcomip
stos
(bad)
pop
out
and
push
cwde
add
imul
pop
int3
sahf
or
inc
cld
jmp
sub
xor
cmp
scas
cli
jmp
cmp
ins
mov
fmul
push
dec
add
mov
xor
lods
outs
ins
lods
div
xchg
jmp
ds
imul
lods
xchg
fistp
imul
cmps
test
xor
repz
stos
test
mov
cdq
xchg
cdq
mov
in
ins
mov
sub
inc
ret
xchg
adc
mov
imul
leave
retf
sub
(bad)
fisubr
mov
popf
cld
(bad)
mov
adc
mov
mov
sbb
add
call
jmp
and
dec
xchg
imul
ds
movs
pop
and
lods
jno
stos
cmps
ss
adc
(bad)
jmp
or
adc
inc
mov
repz
clc
jmp
mov
lahf
jb
stc
or
lods
stos
adc
sbb
(bad)
jbe
mov
jne
fisttp
ins
std
scas
mov
shl
inc
jle
ja
out
lock
push
sbb
(bad)
jae
adc
cld
cld
leave
enter
iret
jle
shl
jmp
stos
scas
std
out
mov
lods
mov
dec
(bad)
call
mov
sub
rol
fisttp
jecxz
and
scas
movs
dec
outs
leave
(bad)
adc
sub
call
stc
pop
ret
call
push
pop
(bad)
(bad)
(bad)
inc
adc
push
sub
test
loop
mov
scas
and
sbb
sub
push
ret
(bad)
cmp
push
push
and
cs
mov
lods
jg
adc
lods
and
sbb
xchg
jmp
mov
shl
jns
cli
xor
inc
push
icebp
inc
xchg
adc
fisubr
push
test
mov
lock
(bad)
(bad)
inc
pop
jmp
lahf
fcmovne
test
and
cmc
xor
outs
xchg
or
(bad)
dec
fsubr
retf
or
daa
jle
(bad)
(bad)
call
fadd
cmp
out
sbb
mov
movs
out
sbb
stos
push
and
loopne
pop
(bad)
xchg
jo
outs
leave
and
xor
xchg
and
call
xchg
xor
neg
jbe
mov
std
push
jb
stos
and
mov
lods
into
xchg
lock
prefetchw
or
jg
mov
xchg
scas
xchg
and
(bad)
fist
(bad)
daa
lods
or
pop
xchg
xchg
pushf
or
(bad)
outs
push
(bad)
push
std
mov
(bad)
jmp
mov
fsub
(bad)
call
(bad)
(bad)
(bad)
(bad)
cmp
jmp
fwait
xchg
out
stos
(bad)
loopne
outs
push
mov
ins
fsubr
push
in
cmp
push
xlat
std
fwait
pop
fidiv
fdivr
and
(bad)
(bad)
push
cmp
pop
or
cs
and
cmps
pop
inc
mov
(bad)
(bad)
mov
push
lahf
pop
icebp
jp
cmp
pop
ss
xor
push
in
or
ja
sbb
push
(bad)
mov
(bad)
jle
stos
push
jg
loop
sbb
das
ins
cmp
push
rol
and
add
cmp
and
cmps
repnz
pop
repz
xchg
sbb
stos
mov
push
cld
(bad)
jmp
xor
push
test
stos
jne
test
pop
sbb
add
jl
cwde
cld
outs
hlt
jno
mov
mov
movs
fcmovbe
(bad)
in
fist
push
add
mov
stos
jle
inc
je
nop
cmp
xchg
scas
pop
and
push
lods
leave
add
das
sar
ror
out
pop
ret
jmp
push
jns
das
cli
loopne
dec
cmp
(bad)
jmp
adc
fs
jb
xor
dec
cmp
nop
(bad)
(bad)
call
shr
cmp
cmps
lds
stos
mov
mov
loopne
and
xchg
inc
adc
call
rol
mov
fsubr
adc
lds
outs
js
xor
repz
(bad)
(bad)
push
dec
push
test
pop
hlt
sub
sub
pusha
hlt
and
test
(bad)
call
mov
add
movs
scas
inc
out
fwait
mov
mov
(bad)
jne
dec
imul
call
push
mov
push
inc
inc
mov
add
retf
scas
adc
add
mov
and
mov
dec
aaa
mov
(bad)
into
dec
movs
or
sub
dec
pushf
std
xchg
sub
imul
loope
out
clc
or
sbb
mov
jge
xor
rcl
nop
(bad)
(bad)
mov
xchg
adc
or
adc
or
mov
jb
sti
or
aad
das
sbb
sub
repnz
mov
pop
xor
or
(bad)
(bad)
(bad)
fisttp
loope
stos
cmps
and
(bad)
sub
xor
xchg
shl
jle
pop
cmc
fwait
(bad)
mov
mov
xchg
pop
dec
in
adc
out
xchg
call
mov
adc
inc
retf
pop
and
dec
mov
dec
sub
mov
in
pop
ds
add
(bad)
inc
scas
lea
jnp
pusha
mov
mul
sbb
in
jl
(bad)
fisttp
ins
sahf
cmp
sub
imul
pop
cmps
ret
sub
leave
mov
jle
(bad)
(bad)
(bad)
call
mov
int3
(bad)
xor
stos
js
push
mov
(bad)
sub
(bad)
mov
push
mov
stos
adc
mov
jmp
sub
fdivr
(bad)
(bad)
push
ret
lahf
xchg
and
loope
ret
push
inc
sub
push
call
mov
and
add
push
sub
add
outs
fcmovnu
(bad)
(bad)
(bad)
inc
adc
out
or
sub
mov
pop
mov
imul
or
inc
lds
mov
jmp
push
test
mov
or
aas
push
mov
sub
retf
mov
cmp
sub
xor
stos
jg
dec
cld
dec
and
cli
pop
dec
mov
(bad)
add
mov
(bad)
call
test
retf
push
loop
mov
pop
jb
neg
mov
fldcw
jae
loop
enter
in
cmp
(bad)
(bad)
jmp
fwait
aas
xchg
dec
jmp
push
(bad)
adc
mov
push
call
mov
jmp
xor
adc
push
nop
pop
stos
shl
push
cld
or
sar
std
(bad)
jmp
fistp
aas
inc
test
cmp
mov
push
sbb
cmp
in
jne
loope
cwde
cmps
retf
xchg
sub
mov
sbb
shr
mov
aad
mov
pop
pop
imul
aaa
pop
push
sub
dec
sub
dec
push
data16
stos
mov
lss
lods
scas
das
ja
cli
jmp
adc
leave
int3
cmp
pusha
pop
jl
retf
cmp
cmp
dec
and
or
std
adc
and
jmp
test
inc
imul
lods
call
enter
sbb
scas
retf
into
(bad)
stos
(bad)
(bad)
(bad)
(bad)
call
pop
sub
xchg
out
pop
sti
or
js
add
sahf
mov
ds
(bad)
(bad)
(bad)
jmp
aad
ins
mov
or
test
lods
xor
push
push
jle
mov
imul
(bad)
in
jp
and
fimul
and
mov
sub
fistp
mov
jp
repz
scas
or
mov
clc
(bad)
jmp
and
in
pop
dec
dec
cmp
iret
push
popf
fisub
cmp
(bad)
dec
dec
and
sub
sub
mov
cwde
xchg
enter
(bad)
(bad)
jmp
fbstp
aad
push
xchg
call
or
mov
sub
(bad)
(bad)
jmp
cmp
sub
sbb
mov
les
inc
mov
cmp
xchg
icebp
ret
mov
sbb
cmp
mov
xchg
or
(bad)
push
sbb
ret
cmps
xchg
push
sti
mov
loope
sub
sahf
adc
(bad)
cmp
adc
adc
(bad)
dec
mov
push
push
and
mov
push
in
mov
leave
inc
dec
inc
sahf
loop
imul
or
daa
and
fucom
mov
mov
dec
fwait
xchg
mov
push
dec
cs
out
(bad)
(bad)
(bad)
jmp
mov
movs
jnp
pushf
sub
mov
mov
stos
or
cmp
mov
jp
push
(bad)
(bad)
inc
fsubrp
in
push
fisub
loop
and
lods
mov
call
test
sahf
adc
dec
xchg
test
jmp
cmp
jnp
jbe
(bad)
(bad)
dec
pop
int
test
lds
dec
shl
cmps
mov
and
mov
aad
inc
push
stc
push
mov
test
add
or
sub
(bad)
(bad)
(bad)
jmp
in
add
cli
inc
inc
cli
std
mov
jge
js
mov
sub
in
std
xchg
mov
lods
cwde
(bad)
jmp
rol
inc
mul
repz
xor
sbb
(bad)
(bad)
(bad)
call
popa
add
daa
xchg
cmps
call
and
add
scas
sbb
(bad)
(bad)
(bad)
fs
xchg
cmp
mov
inc
retf
adc
jecxz
std
dec
scas
movs
mov
fadd
jecxz
ret
fistp
add
scas
inc
jnp
sbb
pop
out
lods
cdq
ins
push
or
cli
sbb
sub
movs
mov
stc
push
test
sbb
fisubr
add
mov
lods
pop
out
inc
push
adc
loopne
mov
(bad)
(bad)
jmp
in
retf
clc
enter
pop
mov
adc
stc
scas
in
push
test
mov
(bad)
(bad)
(bad)
add
jecxz
cmps
in
rcr
pop
pop
jl
inc
movs
push
nop
clc
retf
mov
cli
std
(bad)
(bad)
call
inc
sub
sbb
mov
test
and
lahf
cdq
gs
fwait
pop
xchg
lock
pop
cmp
add
(bad)
(bad)
(bad)
stc
push
test
les
push
sub
pop
pop
add
pop
jmp
call
pop
test
or
lds
sub
cdq
scas
call
pop
daa
jp
stos
movs
cmp
sub
movs
cli
add
test
adc
(bad)
xor
xchg
cmp
(bad)
(bad)
mov
mov
xor
in
mov
(bad)
adc
scas
aad
xchg
xor
xor
add
fcmovu
adc
cmc
or
test
sub
dec
je
psubsw
(bad)
jp
and
jns
pop
popa
fild
mov
scas
jo
cs
aaa
mov
add
mov
mov
pop
pop
(bad)
(bad)
(bad)
inc
pop
xor
xor
add
fwait
xlat
cmps
mov
daa
push
mov
jmp
jb
iret
movs
xor
mov
sub
mov
xchg
xchg
mov
std
push
push
aad
dec
call
sub
data16
retf
dec
jo
pop
pop
dec
adc
ins
xchg
cli
inc
and
adc
and
in
(bad)
fisubr
jae
lock
cmp
out
(bad)
(bad)
jg
stos
ret
sbb
stos
cmp
mov
jmp
pusha
(bad)
in
out
mov
dec
imul
push
(bad)
clc
in
call
add
and
imul
retf
stc
cmps
add
(bad)
(bad)
jmp
push
sub
test
push
xor
jmp
stos
xchg
inc
jae
into
fisub
lea
rol
movs
bound
dec
jmp
xchg
(bad)
mov
jge
sbb
xchg
adc
push
add
clc
and
inc
(bad)
pop
sub
(bad)
(bad)
(bad)
jmp
sub
mov
imul
sti
test
call
mov
xor
jmp
sub
cmp
adc
lea
push
cmc
retf
sbb
jns
mov
or
sub
cdq
sub
call
retf
jmp
adc
ins
and
(bad)
(bad)
fiadd
call
mov
(bad)
pop
cmp
movs
mov
out
out
test
and
jne
hlt
popa
and
in
push
stos
mov
outs
leave
push
(bad)
jg
popa
(bad)
add
movs
dec
push
enter
call
jmp
inc
retf
push
jge
out
fcmove
jbe
jl
into
scas
add
gs
pop
and
mov
push
adc
jg
jmp
jbe
int3
xchg
pop
jmp
push
test
mov
mov
(bad)
(bad)
jmp
mov
pop
pop
or
push
std
pop
pop
add
cmc
sub
pop
inc
or
jmp
jne
or
xchg
jmp
int
call
pop
fs
pop
jp
cld
mov
test
dec
mov
mov
jle
(bad)
in
in
(bad)
in
out
ja
sub
out
or
add
(bad)
mov
mov
jp
mov
repz
stc
inc
cld
(bad)
call
jnp
jmp
mov
fcmovbe
arpl
push
xor
mov
push
add
sbb
pop
push
xor
jmp
or
inc
das
and
jmp
lock
ja
into
ss
and
sub
cmp
xor
mov
mov
sub
cs
aaa
loopne
loope
jmp
ret
push
or
pop
cmp
ror
(bad)
(bad)
(bad)
(bad)
mov
mov
or
mov
test
lock
aas
sbb
adc
jge
sbb
cmp
in
xchg
into
add
popf
ret
jne
inc
jmp
jp
sub
cmps
push
jmp
dec
pop
call
dec
outs
lahf
sub
test
xchg
mov
pop
loope
hlt
xchg
scas
sti
outs
shl
call
data16
jo
sbb
sbb
and
cs
dec
mov
sti
(bad)
(bad)
mov
mov
fnstcw
pop
sub
dec
push
or
cmp
jg
movs
(bad)
(bad)
(bad)
call
call
(bad)
lock
pop
clc
popa
cwde
dec
mov
or
xor
(bad)
(bad)
call
test
sbb
or
sti
xchg
stos
aaa
loopne
mov
sar
pop
ins
sbb
call
adc
lds
ds
(bad)
(bad)
jg
(bad)
ds
cmp
pop
xchg
xlat
fwait
jecxz
mov
movs
xchg
pop
jge
bound
jmp
test
aas
cmps
pop
push
(bad)
(bad)
fisubr
aas
and
(bad)
push
mov
mov
push
mov
dec
shl
jl
enter
stos
push
sbb
(bad)
call
fs
pop
mov
test
lds
lahf
cwde
push
clc
inc
mov
fimul
sahf
pop
jmp
jmp
sub
jmp
or
pop
mov
je
mov
scas
(bad)
lods
(bad)
(bad)
das
stos
xchg
dec
fdivrp
mov
pop
(bad)
ror
or
lock
mov
ret
push
mov
mov
lds
(bad)
jmp
mov
fnstenv
jnp
xchg
mov
stos
stos
add
adc
xchg
and
mov
push
cmp
sub
or
ret
mov
sar
lods
pop
stc
fist
inc
in
retf
lahf
push
cmps
sub
adc
jp
mov
jmp
(bad)
mov
cdq
mov
adc
pop
scas
sub
push
imul
sub
mov
cli
cmp
and
ins
pop
or
leave
retf
inc
loopne
mov
loopne
or
cmp
(bad)
(bad)
dec
fsub
xchg
sub
inc
movs
imul
lock
mov
xchg
sahf
jg
adc
fadd
mov
mov
cli
mov
(bad)
(bad)
(bad)
fdivr
imul
sbb
sbb
sahf
cmp
stos
test
scas
add
sbb
cmp
or
mov
mov
scas
sub
jge
aad
mov
push
xor
push
xchg
cmc
pop
stos
call
xor
sub
sbb
push
dec
lock
(bad)
(bad)
jmp
out
jmp
or
xor
movs
dec
cmp
inc
icebp
ss
loopne
arpl
mov
mov
ret
cmps
inc
mov
ja
pusha
mov
mov
(bad)
(bad)
(bad)
jmp
pop
ins
loop
sub
mov
and
lds
stos
push
out
add
mov
imul
call
aas
mov
shl
or
dec
pop
cld
mov
and
(bad)
(bad)
jmp
mov
push
mov
jmp
imul
add
fisttp
xor
(bad)
(bad)
(bad)
dec
retf
add
inc
dec
aas
(bad)
(bad)
mov
imul
fcom
sbb
(bad)
(bad)
jmp
cmp
mov
std
mov
or
pusha
stos
cmp
out
call
das
(bad)
(bad)
jg
inc
(bad)
pop
es
mov
sub
in
pop
cmp
(bad)
(bad)
call
std
jp
lods
repnz
cmps
into
sub
push
xor
push
imul
loopne
lods
sti
ds
(bad)
(bad)
(bad)
call
sbb
fsubr
sbb
fs
push
in
pop
je
sti
jmp
ins
cli
sub
(bad)
dec
fisttp
dec
push
imul
imul
fldcw
in
mov
in
js
(bad)
(bad)
call
in
sub
xor
cwde
js
dec
scas
cmp
pop
add
pslld
jmp
sub
repz
sub
(bad)
jmp
or
dec
add
shl
xor
pop
push
jecxz
retf
out
clc
(bad)
(bad)
cli
and
dec
pop
jmp
sub
push
std
js
add
mov
inc
mov
or
push
(bad)
(bad)
jle
in
or
cmps
jmp
sbb
hlt
dec
out
add
scas
cli
sub
mov
mov
(bad)
(bad)
call
outs
mov
movs
mov
retf
mov
sar
call
dec
adc
sbb
clc
(bad)
push
cmps
add
sub
sbb
pop
mov
push
ret
les
xchg
mov
mov
in
push
int
(bad)
dec
jmp
call
test
icebp
add
popa
cmps
xor
movs
(bad)
iret
xor
cdq
ret
cmp
push
mov
(bad)
(bad)
call
stos
mov
mov
arpl
imul
lods
mov
iret
lods
cs
(bad)
push
mov
imul
sbb
lock
fdivr
dec
mov
add
xchg
mov
pop
jo
mov
add
sar
call
mov
ds
dec
fwait
outs
jmp
imul
(bad)
(bad)
(bad)
jg
or
loopne
mov
mov
push
add
repnz
fwait
aam
daa
cmps
aas
add
(bad)
(bad)
dec
cmp
pop
or
aaa
add
jmp
aam
lahf
cmp
nop
jp
ds
(bad)
jmp
clc
lods
sahf
pop
pop
mov
mov
lods
sub
int
outs
shr
adc
(bad)
jg
(bad)
js
jmp
mov
mov
push
jo
and
scas
test
inc
(bad)
(bad)
js
pop
xchg
dec
(bad)
cmc
test
dec
cmp
push
stos
lods
in
(bad)
(bad)
(bad)
jmp
push
sti
adc
push
adc
and
push
ins
inc
xor
xchg
sbb
sbb
mov
lds
enter
xchg
push
fistp
ret
mov
mov
fdivr
mov
(bad)
(bad)
(bad)
inc
pop
sub
jb
lods
movs
adc
mov
jl
sbb
cli
(bad)
loop
fnstenv
and
(bad)
call
xchg
nop
repnz
push
call
push
addr16
sahf
clc
mov
test
mov
movs
mov
dec
js
jmp
enter
(bad)
(bad)
dec
enter
ins
push
out
out
inc
pop
and
lock
sti
or
fld
les
jecxz
mov
out
jmp
cli
fisub
cmp
and
das
sbb
mov
das
es
ins
and
cmp
jg
or
push
sbb
cli
xor
int
sub
(bad)
(bad)
(bad)
jmp
fadd
out
jle
inc
xchg
push
xchg
test
xor
out
call
outs
adc
xor
xchg
pop
cs
inc
dec
or
scas
cmp
data16
(bad)
(bad)
(bad)
jmp
bound
shl
js
fidiv
scas
aad
jmp
push
or
aas
outs
xchg
ins
jl
mov
cmps
bound
(bad)
mov
outs
mov
sub
jbe
mov
es
movs
sub
mov
(bad)
(bad)
dec
imul
dec
sahf
mov
scas
test
rol
(bad)
jae
jne
inc
mov
dec
nop
sub
cli
shr
mov
mov
popa
add
loop
or
stc
mov
inc
sti
imul
jecxz
xchg
in
(bad)
(bad)
jmp
test
imul
mov
mov
jmp
jg
xchg
push
add
cs
add
add
sti
xor
jmp
sub
push
cmp
fidiv
mov
mov
jge
pusha
xor
hlt
inc
add
(bad)
jmp
fs
sub
xchg
cmps
sub
mov
mov
sbb
(bad)
(bad)
(bad)
js
btc
xchg
add
push
inc
sbb
jg
inc
sub
arpl
dec
add
mov
hlt
ja
cdq
std
pop
xor
in
jmp
test
mov
jp
(bad)
(bad)
jg
mov
jmp
jge
mov
jne
int3
or
(bad)
push
popf
pushf
movs
fdivr
std
jmp
into
clc
push
mov
mov
adc
xor
ret
inc
dec
xor
out
ins
popf
mov
stos
adc
mov
and
cwde
sub
inc
mov
lods
div
movs
cmps
cs
mov
ins
(bad)
inc
cld
iret
cmp
loop
inc
push
call
adc
mov
sbb
inc
xor
mov
push
ret
pop
stos
jge
icebp
(bad)
inc
(bad)
sub
cmps
mov
cld
test
sub
call
xchg
jmp
sbb
scas
call
cmps
mov
ins
call
jmp
clc
push
(bad)
mov
outs
(bad)
out
enter
or
movs
sbb
mov
push
adc
xor
ds
cmps
lea
sahf
stc
das
call
xchg
cmp
fsubr
(bad)
(bad)
(bad)
call
enter
sbb
sub
jnp
test
adc
push
out
sbb
in
sbb
js
push
scas
repnz
inc
(bad)
cli
hlt
icebp
xchg
sbb
jecxz
push
pop
(bad)
ja
jmp
stos
sub
out
(bad)
(bad)
(bad)
cmp
imul
dec
mov
mov
cmp
das
pop
enter
cli
cmps
add
(bad)
(bad)
jmp
call
cmps
xchg
(bad)
es
mov
mov
(bad)
(bad)
push
gs
test
cmp
jl
call
rcl
inc
pop
scas
ja
call
(bad)
jg
mov
enter
fsub
mov
fcmovnu
or
inc
mov
mov
adc
mov
jne
or
sbb
in
(bad)
cmp
mov
jnp
(bad)
(bad)
(bad)
(bad)
cmp
sub
imul
(bad)
jmp
jns
pop
sub
out
push
mov
aas
lods
(bad)
(bad)
(bad)
inc
jo
mov
mov
cmp
pusha
into
stc
pop
push
loop
pop
mov
(bad)
cmps
mov
(bad)
(bad)
(bad)
inc
push
mov
mov
mov
cmps
and
xchg
bound
(bad)
(bad)
(bad)
in
sub
xchg
stc
cli
rol
pop
rol
jo
idiv
(bad)
out
fidivr
push
test
sub
stc
inc
std
xchg
call
imul
(bad)
inc
and
loop
pop
sbb
pop
jmp
mov
sub
fsubr
loopne
pop
les
mov
or
adc
(bad)
mov
cs
or
(bad)
push
repz
test
mov
inc
xor
mov
jbe
jmp
(bad)
(bad)
jg
dec
add
mov
mov
or
xchg
add
leave
xor
call
pop
add
pop
push
mov
fidiv
dec
sbb
sub
enter
scas
cli
mov
xor
mov
push
ret
retf
mov
leave
sbb
jno
pusha
push
pop
popf
(bad)
(bad)
(bad)
dec
add
mov
movs
imul
push
mov
push
(bad)
(bad)
call
shl
pusha
mov
adc
sbb
mov
aaa
cld
rcl
cmp
movs
std
cmp
lods
(bad)
fild
push
pop
xchg
(bad)
dec
xor
outs
(bad)
call
lods
pop
enter
push
inc
sub
out
out
cmp
jmp
mov
out
pop
xchg
test
sbb
adc
call
(bad)
(bad)
(bad)
mov
adc
cli
xchg
arpl
cmp
cwde
add
pusha
inc
sub
lock
mov
fs
sub
clc
push
test
pop
mov
xchg
dec
(bad)
inc
cli
hlt
gs
stc
in
mov
shr
sbb
ss
dec
cli
stos
sub
dec
mov
(bad)
call
fisubr
fild
ret
pop
std
or
retf
mov
(bad)
(bad)
fild
test
or
mov
daa
xchg
mov
cwde
mov
mov
loope
ins
movs
inc
retf
jmp
mov
mov
cmp
inc
shl
(bad)
mov
(bad)
push
cwde
ror
jl
in
add
mov
out
or
mov
jmp
jno
movs
and
mov
cmp
fs
jp
ins
popf
lahf
bound
jecxz
cmp
and
adc
imul
sti
loopne
movs
inc
cs
pop
dec
mov
sub
pop
xor
(bad)
(bad)
mov
adc
mov
js
imul
stos
sbb
cdq
pop
mov
cld
test
jmp
fisttp
adc
and
mov
(bad)
call
xchg
fisubr
sbb
lds
outs
cmps
sub
sbb
inc
jle
out
push
mov
xchg
mov
push
iret
adc
pop
adc
lods
(bad)
(bad)
(bad)
(bad)
out
jbe
sub
stos
push
les
cmp
push
les
dec
fmul
jae
int
inc
mov
sar
sub
lods
sub
push
xor
cmp
lea
adc
(bad)
(bad)
dec
cmps
test
push
scas
sub
stos
pop
mov
imul
loop
mov
xor
mov
sub
test
sub
adc
mov
(bad)
(bad)
(bad)
(bad)
call
and
add
retf
into
inc
retf
adc
sub
popf
hlt
(bad)
jmp
mov
adc
sub
mov
xchg
mov
adc
sub
(bad)
(bad)
push
cwde
mov
jae
mov
mov
or
xchg
xchg
retf
(bad)
jmp
cmp
int
cmp
jp
pop
test
sbb
jmp
retf
jb
mov
jmp
push
mov
ss
cmc
(bad)
(bad)
jp
mov
imul
into
dec
dec
out
pushf
cs
ins
sahf
xchg
sub
mov
dec
dec
retf
mov
(bad)
ficomp
pop
dec
mov
pop
enter
aas
sahf
xchg
clc
(bad)
mov
adc
cmp
inc
(bad)
call
jb
mov
ss
cmp
loop
dec
cmp
sbb
pusha
mov
(bad)
(bad)
(bad)
jmp
es
jae
dec
jb
sbb
test
fiadd
in
cmp
into
sahf
test
ins
push
(bad)
(bad)
dec
xor
cld
cs
dec
push
fadd
sbb
xor
sbb
xchg
mov
mov
mov
shl
(bad)
(bad)
jmp
mov
call
call
sahf
mov
adc
(bad)
mov
mov
pushf
cmp
outs
sbb
in
xchg
mov
loopne
adc
in
retf
cmps
(bad)
stos
dec
sar
(bad)
inc
dec
sbb
xlat
cs
arpl
push
sahf
ss
clc
jnp
mov
jbe
addr16
sahf
call
jbe
sub
outs
push
movs
dec
xor
fs
(bad)
(bad)
(bad)
jmp
mov
sub
(bad)
mov
fimul
jnp
jle
nop
mov
movs
jle
mov
(bad)
(bad)
(bad)
pop
pop
lods
shr
push
cwde
and
arpl
sub
push
(bad)
out
sbb
and
mov
or
call
cmps
cwde
dec
or
(bad)
jmp
jmp
test
cld
dec
call
inc
xor
cmps
or
sub
adc
jne
lahf
dec
loop
(bad)
(bad)
call
sub
push
cmc
jno
xor
inc
adc
xchg
push
sbb
in
loopne
add
or
fist
or
loop
js
xchg
jnp
cmp
sub
xchg
aam
(bad)
cmps
push
push
std
push
or
xchg
sub
mov
mov
aaa
std
call
ret
dec
add
pop
dec
fidiv
mov
(bad)
(bad)
call
jmp
xlat
test
pop
ins
or
movs
pushf
je
jmp
pop
lock
cmps
lock
jbe
xor
mov
pusha
ss
fbld
jmp
sbb
push
push
leave
xchg
xchg
cmp
mov
scas
cmp
rcr
pushf
cli
mov
fidiv
sahf
jmp
mov
mov
popf
pushf
dec
push
in
pop
sbb
jmp
loope
(bad)
dec
cmp
int3
sub
neg
pop
stc
mov
xchg
xor
les
pop
jmp
lods
mov
les
cdq
sahf
sbb
ficom
pop
clc
test
(bad)
or
mov
clc
fwait
hlt
lods
ds
sahf
stos
pop
or
(bad)
(bad)
(bad)
(bad)
mov
pusha
cmps
stos
aad
fisub
add
push
sahf
loopne
in
stos
repnz
sbb
dec
leave
xor
cmp
push
add
cwde
jmp
pop
ja
(bad)
(bad)
(bad)
call
in
dec
sbb
pop
pop
cs
sub
in
ins
adc
xor
push
in
xchg
dec
(bad)
(bad)
in
cmp
imul
or
xchg
push
sbb
mov
jecxz
mov
jle
adc
stos
pop
mov
gs
lods
sub
mov
jg
pop
add
sahf
leave
out
out
in
(bad)
(bad)
dec
iret
add
mov
cmp
cmp
(bad)
retf
mov
jb
mov
pop
cmp
(bad)
(bad)
(bad)
call
push
sub
or
mov
movs
fdiv
loope
repnz
sbb
xchg
lods
xchg
clc
sbb
repz
std
push
inc
and
mov
dec
iret
rol
mov
sbb
fs
dec
sbb
jmp
mov
das
push
clc
ins
js
and
add
fild
in
dec
xor
sbb
iret
repnz
es
(bad)
(bad)
jmp
push
fmul
sub
lods
cwde
jle
adc
sbb
mov
mov
or
inc
or
pop
pop
int3
sbb
lahf
mov
daa
xlat
and
rcl
mov
push
retf
shl
retf
cld
movs
jbe
pop
dec
scas
hlt
bound
test
sub
int
push
mov
mov
mov
(bad)
push
mov
mov
jb
mov
enter
test
cmps
dec
add
stos
call
push
sbb
in
xchg
fcomp
adc
cs
add
enter
dec
aad
sar
lahf
cmps
mov
mov
out
stos
fcmovne
aam
dec
call
adc
inc
cs
mov
pop
and
mov
ss
in
add
(bad)
(bad)
mov
in
adc
push
sar
mov
movs
xlat
mov
(bad)
(bad)
(bad)
(bad)
popa
push
lahf
ja
sub
adc
rcl
and
jne
mov
xor
xchg
(bad)
(bad)
(bad)
jmp
mov
adc
pop
mov
movs
in
jns
loop
in
fistp
leave
scas
push
pusha
mov
clc
movs
call
inc
pop
adc
jg
(bad)
mov
ss
dec
inc
test
inc
ficomp
inc
jge
xchg
sahf
(bad)
push
(bad)
(bad)
dec
btr
out
or
(bad)
dec
sub
in
sbb
xchg
xchg
arpl
ror
rol
repz
out
scas
(bad)
jmp
out
jecxz
(bad)
in
or
mov
fwait
jle
scas
fild
(bad)
fcomip
(bad)
jmp
rol
mov
push
cmp
mov
addr16
push
retf
add
(bad)
aam
dec
out
push
jmp
xor
push
push
ds
stos
or
xor
jp
push
(bad)
fcomip
(bad)
js
retf
jns
xchg
mov
stos
ret
sub
cli
(bad)
mov
ror
cld
rcl
cmps
sub
loop
scas
ja
push
ffree
div
dec
mov
xchg
call
mov
push
mov
xchg
cmp
popf
sub
mov
mov
jmp
repnz
data16
jnp
adc
clc
or
pop
cmp
jmp
cwde
mov
or
hlt
cmp
pop
inc
test
loopne
sbb
scas
cmp
(bad)
call
jmp
cmps
mov
scas
lea
dec
mov
(bad)
rcr
mov
mov
shl
cmp
fbld
mov
sbb
fwait
or
call
ja
repnz
lods
and
lds
push
arpl
mov
ret
sub
mov
mov
add
push
jne
lods
int
jmp
(bad)
(bad)
(bad)
dec
mov
sbb
retf
xchg
mov
cmp
cmp
push
stc
ins
mov
jmp
fwait
mov
call
mov
cs
(bad)
(bad)
(bad)
call
dec
mov
jecxz
xchg
pop
push
outs
ja
(bad)
lods
bound
in
ror
pushf
mov
call
cmps
(bad)
jmp
movs
push
push
mov
dec
and
jb
sbb
xchg
xchg
mov
(bad)
fcomp
jo
mov
dec
lahf
mov
in
or
std
(bad)
(bad)
push
stos
loop
ror
loop
or
xlat
inc
js
fisub
out
and
rcl
pop
lock
fiadd
push
mov
xor
mov
fwait
add
mov
rol
retf
push
out
cli
(bad)
(bad)
in
and
jmp
and
mov
sbb
ja
mov
loopne
in
or
(bad)
call
call
fistp
std
or
xchg
mov
mov
test
int3
lock
(bad)
sbb
mov
(bad)
jmp
fiadd
mov
(bad)
pop
test
dec
xchg
cmp
cmps
dec
mov
data16
cwde
jg
sub
jno
out
test
or
mov
sub
xor
(bad)
(bad)
(bad)
push
ficom
push
shr
sbb
enter
sahf
mov
shl
xchg
pop
lock
push
push
sbb
dec
xor
jmp
sub
clc
(bad)
(bad)
jmp
sub
and
sub
mov
int3
aam
mov
push
dec
fwait
jnp
into
ins
(bad)
push
xor
pop
bound
call
add
movs
mov
(bad)
jmp
sti
std
(bad)
out
sub
mov
pop
aam
ins
ret
mov
and
sar
inc
and
jmp
inc
xchg
out
sub
adc
cli
(bad)
ficomp
inc
stos
pop
add
(bad)
jmp
mov
adc
call
clc
add
(bad)
call
cwde
inc
neg
xchg
jno
push
loop
retf
or
push
inc
mov
cmps
or
inc
xchg
in
stc
sub
mov
(bad)
jmp
push
imul
push
pop
imul
push
dec
push
sub
cmp
sti
stos
into
jns
jb
and
call
call
xchg
push
or
xor
adc
(bad)
(bad)
fild
mov
mov
cld
retf
mov
dec
dec
je
sub
mov
mov
fisttp
jns
stos
bound
adc
push
adc
jno
lahf
cli
jg
(bad)
mov
xchg
xchg
movaps
adc
into
jmp
xor
sbb
sbb
dec
push
sub
mov
xchg
movs
add
(bad)
(bad)
call
js
jno
dec
iret
mov
inc
mov
scas
in
cmps
mov
sti
cmp
add
sar
mov
jb
dec
(bad)
outs
in
push
xlat
lods
cmp
into
xchg
inc
cld
cmp
push
(bad)
dec
test
and
inc
iret
fidiv
lods
jnp
sub
outs
scas
inc
mov
dec
outs
inc
sub
(bad)
jnp
js
repnz
jbe
ins
inc
neg
xchg
sub
lea
xchg
mov
loopne
cmps
jnp
cmovp
movs
jmp
jecxz
mov
jmp
mov
cmp
clc
push
pop
cmp
popa
push
jmp
inc
xchg
fadd
idiv
(bad)
(bad)
jmp
test
mov
sbb
lahf
jae
ss
cmp
lock
sbb
jno
sbb
loopne
popa
(bad)
in
ret
movs
cs
or
push
scas
sub
(bad)
(bad)
(bad)
dec
pop
in
sub
jnp
stos
jl
mov
add
cmp
(bad)
pop
stos
pop
push
dec
push
and
call
and
and
js
jae
scas
sar
call
outs
mov
loop
dec
dec
and
fild
loope
push
add
(bad)
jg
adc
pop
retf
pop
jg
push
je
push
inc
and
xabort
ds
(bad)
mov
bound
in
aas
clc
data16
in
sub
(bad)
(bad)
(bad)
jg
cli
es
jmp
pop
inc
and
sahf
fsub
call
mov
in
mov
cmps
push
xor
ret
mov
inc
and
and
jmp
mov
or
sbb
fisub
lock
and
(bad)
(bad)
(bad)
out
jle
outs
out
inc
ss
outs
out
fnstsw
add
mov
ds
(bad)
(bad)
jg
mov
fwait
mov
push
or
fidivr
or
sub
popa
sbb
ffreep
call
jmp
cdq
mov
pop
and
sub
scas
jne
mov
or
leave
aaa
xor
adc
fstp
(bad)
(bad)
(bad)
mov
not
cmps
(bad)
mov
dec
rcl
call
push
jmp
mov
outs
fist
rol
dec
aas
mov
sub
lods
xor
mov
(bad)
(bad)
(bad)
jg
dec
push
or
adc
sbb
call
xchg
bnd
jne
adc
push
(bad)
(bad)
(bad)
call
add
mov
scas
xchg
loop
dec
mov
push
loop
es
adc
dec
push
clc
test
xchg
mov
cmc
add
push
movs
push
pop
adc
sub
jge
dec
(bad)
jg
push
pop
mov
sub
pop
inc
push
mov
cdq
sub
cli
movs
fiadd
stos
pop
cs
lock
call
ret
inc
xor
sub
sbb
movs
daa
jnp
sub
push
fdivr
call
ret
jle
int3
xor
cwde
ins
outs
sub
in
xchg
stos
cwde
clc
enter
loope
and
and
xlat
cmps
or
(bad)
mov
pushf
mov
out
ds
(bad)
in
sub
rcl
xchg
(bad)
fcomip
pop
int
mov
out
cdq
int
pandn
adc
push
(bad)
cmp
jo
mul
leave
(bad)
(bad)
(bad)
call
adc
push
xchg
mov
sub
mov
or
mov
adc
(bad)
(bad)
call
pop
sahf
pop
sub
inc
add
sbb
outs
mov
ret
lods
test
jg
jmp
lea
jg
iret
sbb
mov
(bad)
(bad)
test
sub
sub
(bad)
(bad)
sub
inc
mov
daa
mov
clc
xor
das
push
iret
retf
push
leave
push
sbb
dec
cli
movs
mov
sbb
inc
das
das
or
(bad)
(bad)
(bad)
inc
mov
push
push
mov
mov
sbb
inc
mov
pop
xlat
adc
in
sbb
cmps
mov
push
pushf
(bad)
mov
jmp
mov
jb
mov
out
mov
rcl
(bad)
jmp
rdmsr
rcr
push
cld
lods
pushf
or
sub
mov
pop
xchg
sbb
ret
loopne
ret
clc
dec
pop
cmp
pop
test
push
adc
pop
add
ret
fwait
sbb
cli
(bad)
jmp
cmps
jge
adc
bound
sub
xchg
test
(bad)
mov
cdq
icebp
scas
inc
cmps
addr16
leave
clc
(bad)
call
mov
pop
(bad)
(bad)
mov
mov
leave
pop
lods
adc
xchg
and
pop
(bad)
fcomip
outs
mov
js
sbb
sub
pop
mov
sbb
mov
mov
pushf
das
xchg
clc
cmps
js
fimul
(bad)
push
jl
es
lds
or
sti
mov
sbb
mov
in
cmp
xor
adc
stos
dec
repnz
jg
pop
(bad)
jmp
lods
push
jb
xchg
mov
(bad)
call
jb
out
cmp
cmp
adc
cmp
ss
out
dec
cmp
adc
enter
adc
xchg
jg
inc
mov
loopne
(bad)
sub
mov
or
shl
(bad)
aaa
pusha
cmp
or
shl
cmps
inc
jl
hlt
(bad)
mov
or
adc
push
cli
ja
into
mov
ins
or
movs
jp
(bad)
dec
push
add
call
jmp
out
pop
mov
jg
out
push
pop
std
sbb
loope
adc
data16
jp
xor
and
call
(bad)
pop
sub
cmps
clc
push
cmps
scas
mov
mov
cmp
(bad)
(bad)
(bad)
jmp
mov
xchg
lock
mov
ficomp
cmps
cmp
xchg
movs
in
(bad)
(bad)
(bad)
dec
mov
cli
lds
fisttp
test
hlt
rcl
call
(bad)
(bad)
mov
xor
ja
test
cmps
in
fidivr
mov
(bad)
fistp
es
jmp
ds
sub
xor
mov
(bad)
(bad)
(bad)
jmp
lea
call
dec
xor
or
push
imul
sub
call
loope
jecxz
mov
push
loope
adc
or
fstp
pop
test
and
mov
xchg
mov
mov
or
cmp
xchg
cmp
(bad)
(bad)
push
push
push
(bad)
jae
xchg
cs
cmp
stos
dec
stos
retf
mov
outs
mov
fwait
es
dec
or
and
(bad)
pop
das
test
xchg
jmp
push
call
cmps
(bad)
and
pop
cli
ror
outs
fstp
pop
in
cmp
and
and
fbstp
push
pop
sub
es
loope
outs
jmp
push
data16
iret
and
retf
(bad)
(bad)
(bad)
dec
cmp
(bad)
inc
imul
jnp
cmp
aas
call
outs
lahf
mov
call
jle
fcmovu
inc
outs
sbb
pushf
xchg
fdivr
adc
adc
push
in
inc
mov
pop
daa
in
jb
mov
jmp
adc
push
sbb
jne
push
loope
mov
ja
loopne
scas
in
js
mov
(bad)
(bad)
dec
les
pop
jecxz
iret
sub
jge
and
dec
leave
in
aas
xlat
out
scas
(bad)
(bad)
(bad)
(bad)
clc
pop
sbb
add
mov
or
or
mov
adc
dec
cs
fidiv
(bad)
(bad)
(bad)
(bad)
fst
or
sti
stc
xor
lds
ds
cwde
addr16
sub
call
cmps
or
xchg
or
repz
sbb
(bad)
call
cmc
enter
cmp
xchg
mov
imul
loopne
adc
int
sar
call
sub
cmps
xchg
call
push
sub
ret
mov
push
and
into
cli
imul
fwait
or
das
mov
imul
test
lods
add
add
xchg
(bad)
(bad)
jg
add
dec
mov
pop
in
popa
push
loop
fadd
sub
setle
outs
(bad)
jmp
shl
retf
mov
or
dec
cdq
ss
int3
sbb
jmp
dec
or
mov
movs
jle
in
cmp
adc
xchg
shl
xchg
(bad)
jg
inc
movs
in
mov
mov
in
(bad)
cld
xchg
pushf
sbb
and
add
popa
or
adc
icebp
jmp
sar
int
(bad)
loop
leave
pop
jg
add
pop
lods
xor
sub
mov
sub
push
xchg
pop
jecxz
jo
scas
out
ins
(bad)
mov
shr
and
jne
stos
xchg
add
loope
(bad)
jmp
fild
dec
cmp
into
stos
push
sbb
or
test
and
dec
cs
xchg
ins
std
xor
cs
fnstcw
test
dec
mov
cli
push
outs
(bad)
jmp
xor
jb
not
rol
movs
mov
lods
sub
stc
out
retf
(bad)
jg
cwde
and
mov
ins
mov
pop
xchg
mov
cmc
movs
call
dec
ret
scas
mov
jg
mov
fist
push
and
mov
mov
cmps
mov
in
pop
xor
and
sub
pop
cmp
bound
add
xor
ins
ret
int
adc
mov
(bad)
mov
pop
mov
aas
jmp
iret
mov
retf
imul
ja
jmp
mov
jmp
mov
push
(bad)
inc
(bad)
(bad)
(bad)
mov
pushf
je
xor
xchg
push
mov
push
test
sbb
fucomi
sub
pop
mov
(bad)
(bad)
push
out
and
mov
loope
retf
inc
rol
xor
cmp
fcmovnb
(bad)
(bad)
(bad)
call
out
mov
popf
jmp
mov
mov
lods
retf
lods
(bad)
mov
leave
inc
add
cmps
xor
retf
popf
es
and
(bad)
call
pop
in
ins
dec
push
dec
imul
fidivr
mov
pusha
jb
(bad)
call
mov
mov
xlat
(bad)
(bad)
fisubr
xlat
jmp
call
push
retf
and
sub
sbb
mov
dec
xor
xor
int
fimul
(bad)
push
leave
mov
call
or
sub
gs
mov
std
(bad)
fistp
test
push
adc
jns
stc
cmp
in
(bad)
(bad)
call
pop
pushf
jmp
aaa
btc
repz
in
push
sub
sbb
je
jmp
(bad)
call
(bad)
sbb
nop
jge
enter
xchg
sbb
xor
add
(bad)
(bad)
dec
xchg
jmp
retf
dec
fmul
lods
dec
mov
mov
jo
mov
rcr
add
lock
jmp
into
dec
cmp
fild
mov
repz
dec
test
movs
xchg
loope
ds
stos
(bad)
(bad)
(bad)
call
fidivr
es
fldcw
mov
cld
cli
jo
das
ret
jnp
(bad)
shl
stos
in
(bad)
mov
dec
jl
aaa
xchg
push
cld
push
or
nop
test
imul
inc
jge
push
push
add
test
or
jp
jb
add
(bad)
jg
movs
and
xor
push
lahf
mov
mov
fisub
cmp
aaa
(bad)
shl
and
cmp
push
loop
mov
jae
test
jmp
push
imul
sub
add
add
pusha
mov
xchg
das
sub
xor
(bad)
(bad)
(bad)
mov
sbb
or
xor
loopne
or
cmc
dec
(bad)
sub
(bad)
iret
scas
into
jo
je
scas
jecxz
(bad)
(bad)
(bad)
dec
mov
icebp
test
and
pop
fwait
cmp
or
jae
mov
idiv
(bad)
(bad)
jmp
xlat
iret
ficom
mov
or
shl
bound
(bad)
dec
push
call
test
or
dec
jbe
sub
xlat
mov
stos
ja
sub
scas
jp
inc
mov
call
jg
pop
or
sahf
out
adc
sbb
add
sub
jmp
fs
movs
sbb
std
inc
cli
ins
cwde
lods
(bad)
(bad)
call
int
dec
sub
or
loopne
push
ss
sub
ret
lea
ret
jbe
or
ret
clc
fwait
or
mov
sub
xchg
mov
call
(bad)
jmp
call
mov
mov
sbb
push
ret
repz
(bad)
(bad)
jmp
jmp
dec
pop
jnp
fiadd
arpl
mov
or
pop
sub
cmp
stos
shl
jecxz
cmp
jmpw
les
popf
fs
cmp
(bad)
push
cs
stos
mov
adc
inc
jbe
xchg
or
or
dec
inc
inc
leave
lods
jb
fs
mov
mov
ds
xchg
cmp
shr
push
mov
push
or
mul
xchg
das
sar
push
outs
iret
push
cmp
enter
pop
mov
or
mov
sub
dec
cld
(bad)
(bad)
inc
xor
and
test
enter
adc
cmp
pop
in
iret
fdivr
(bad)
push
jbe
xor
pop
pop
enter
cmp
or
push
or
pop
fdivrp
(bad)
fcomip
or
push
jp
ins
sub
or
and
repnz
mov
pop
jg
inc
cld
mov
pop
cli
cmp
lods
jg
dec
cld
repnz
dec
rep
inc
(bad)
retf
pop
push
mov
(bad)
(bad)
jl
outs
enter
popa
test
mov
(bad)
jmp
loopne
fimul
retf
std
xlat
movs
cmc
push
jg
adc
xor
fdivr
lea
lods
xchg
pop
push
xor
jmp
sub
stos
cmp
or
xor
sar
jg
lock
pop
cwde
jnp
cld
shl
(bad)
push
in
pop
sub
out
mov
loopne
(bad)
call
call
test
mov
and
mov
(bad)
(bad)
(bad)
jge
hlt
fucomi
stos
jecxz
xchg
add
test
test
pushf
jecxz
mov
push
bound
fistp
(bad)
(bad)
(bad)
call
shr
clc
xchg
dec
jmp
repnz
stos
std
inc
test
stos
push
xor
mov
mov
dec
int
pop
pop
leave
pop
retf
sub
push
mov
or
outs
cmp
shl
sub
add
push
cmps
sahf
xor
(bad)
(bad)
jg
xchg
and
in
pop
repz
push
xchg
cdq
ins
mov
stos
sbb
fcom
call
sub
pop
fwait
(bad)
outs
adc
in
retf
mov
mov
stos
mov
es
and
mov
dec
(bad)
cld
scas
in
pop
lahf
or
call
(bad)
fldenv
xchg
stos
mov
xor
int3
clc
mov
jmp
(bad)
(bad)
(bad)
call
inc
inc
iret
shl
lods
mov
(bad)
cmps
or
std
and
xchg
add
(bad)
fldcw
jb
sbb
iret
(bad)
push
ss
dec
mov
imul
stos
push
bound
imul
jmp
arpl
aam
mov
lods
xchg
clc
push
adc
(bad)
push
xchg
jmp
(bad)
(bad)
jmp
jno
cmps
mov
dec
cli
mov
jmp
push
add
add
xchg
(bad)
(bad)
jmp
cmps
je
cmp
cmp
ds
xlat
inc
xchg
imul
(bad)
(bad)
cmp
cmp
mov
test
dec
adc
sub
jae
xchg
cmp
fbld
mov
in
xor
jmp
adc
fisttp
or
pop
popf
cmp
or
icebp
cmp
jbe
push
je
push
enter
mov
(bad)
jg
add
push
icebp
movs
xchg
sub
rcr
(bad)
and
clc
iret
(bad)
sub
shl
jmp
pushf
and
mov
cmp
imul
cli
fwait
or
pop
or
sub
sbb
cmps
out
stc
xor
jmp
sbb
repz
mov
push
lods
adc
clc
mov
call
sar
pop
out
(bad)
sbb
scas
addr16
mov
or
inc
pop
retf
push
(bad)
pop
pop
stos
movs
ret
(bad)
jmp
sub
jmp
pop
jnp
sub
push
(bad)
(bad)
call
scas
pop
mov
iret
mov
popa
sub
pop
scas
or
mov
call
dec
lock
xlat
mov
js
jmp
mov
fild
fcmovu
lock
push
popw
add
into
xchg
push
and
xor
mov
adc
fidivr
(bad)
jg
jecxz
es
and
lods
je
(bad)
aad
ins
sub
sbb
dec
and
repnz
inc
sbb
push
outs
and
mov
push
jns
out
clc
fist
jge
xchg
dec
test
mov
popf
xchg
cmps
aas
mov
sbb
cmps
(bad)
(bad)
inc
add
imul
jbe
inc
pop
jg
repz
mov
data16
js
mov
jno
mov
jecxz
pop
stos
in
shl
out
push
cli
nop
cmp
in
scas
(bad)
sub
mov
(bad)
jmp
ficomp
sub
push
repnz
(bad)
clc
mov
push
pop
fld
sbb
cmp
push
cmps
cli
std
dec
(bad)
(bad)
(bad)
push
scas
pop
cs
rcl
jp
dec
out
xchg
stos
mov
bnd
mov
out
(bad)
jg
call
push
ss
lds
add
sub
test
outs
adc
jmp
cmps
push
ins
fld
movsx
das
mov
sbb
jmp
icebp
(bad)
(bad)
jnp
sub
call
xor
ror
jl
inc
in
inc
xchg
sbb
inc
add
mov
pop
xchg
jg
(bad)
cmp
call
mov
int
movs
adc
or
inc
inc
(bad)
call
dec
cs
dec
jns
adc
fwait
sahf
stos
pop
add
popf
push
out
add
mov
cmps
cmp
jne
dec
mov
jge
(bad)
(bad)
(bad)
dec
sahf
cmp
(bad)
push
mov
in
ins
call
ds
sub
cmps
mov
int3
fsubr
cmp
push
mov
add
jmp
jb
sub
(bad)
sahf
push
xor
out
test
sub
add
or
or
xor
es
enter
cs
cmps
shr
xchg
jne
sub
sub
daa
cli
push
or
fcomip
mov
mov
or
xchg
jp
push
(bad)
jg
out
mov
fimul
rcr
dec
into
test
and
pusha
cli
(bad)
xchg
push
arpl
(bad)
(bad)
call
sub
leave
into
mov
push
cs
lods
test
push
inc
mov
mov
cmp
lea
pop
sahf
sub
or
sahf
add
inc
fimul
pop
(bad)
mov
mov
rep
test
and
mov
push
icebp
pop
jbe
fst
(bad)
(bad)
dec
sub
inc
mov
pushf
jnp
mov
ins
pop
adc
setb
mov
cmp
cld
(bad)
(bad)
ds
mov
js
mov
outs
jg
scas
pop
lods
or
push
retf
nop
or
dec
mov
mov
push
push
leave
test
jo
dec
call
cmps
and
mov
pop
push
jp
cmp
or
jge
test
inc
cmp
(bad)
(bad)
fnstcw
xor
push
xchg
push
imul
ss
cwde
bound
(bad)
fild
das
xor
and
shl
add
(bad)
neg
ja
outs
push
jmp
fwait
push
mov
cmps
mov
sub
(bad)
(bad)
(bad)
jmp
popa
pop
call
fisttp
lock
mov
push
xor
retf
mov
xchg
add
cmps
jl
(bad)
push
mov
push
jmp
sub
lods
fcmove
xlat
sbb
adc
aam
sub
sub
dec
test
mov
cmp
jmp
lds
std
in
or
dec
lock
cli
in
jl
lods
ds
daa
clc
idiv
cmp
rcr
call
push
pusha
ret
dec
xchg
pop
jno
into
cmps
push
push
adc
movs
sub
mov
ins
cmp
mov
pop
movs
mov
nop
xor
ret
cmp
cld
(bad)
(bad)
inc
jp
stos
and
mov
retf
out
sub
xchg
cmp
out
addr16
sub
mov
ja
shl
pop
and
mov
sbb
iret
jg
(bad)
jmp
shl
movs
test
or
mov
sbb
out
mov
leave
(bad)
jmp
or
lods
sub
xchg
push
xchg
(bad)
std
outs
push
mov
jp
or
call
add
(bad)
(bad)
(bad)
inc
jmp
xchg
repnz
std
test
pop
daa
inc
push
fisub
retf
jns
test
(bad)
(bad)
(bad)
dec
pop
stos
add
das
mov
sar
stos
stc
jno
inc
jno
cmps
mov
sbb
mov
sub
fisttp
fsubr
scas
call
ins
inc
je
mov
loope
movs
jmp
cmps
hlt
push
(bad)
repnz
push
xor
mov
jno
std
pop
pop
inc
pop
idiv
jmp
or
call
cmp
fcomp
bound
dec
and
cmp
aad
cld
jle
hlt
mov
das
and
mov
out
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
and
stc
mov
daa
or
and
ins
inc
hlt
daa
jbe
jmp
pop
call
xor
sub
xchg
and
lock
jmp
mov
jmp
outs
xchg
(bad)
(bad)
inc
test
arpl
mov
jle
cmp
pushf
aam
or
std
mov
jmp
mov
jo
mov
cmps
add
(bad)
call
arpl
pop
ror
and
pusha
(bad)
and
nop
sbb
pop
push
sbb
mov
(bad)
(bad)
(bad)
jmp
fist
push
lods
ins
cmp
lock
jle
jb
mov
sub
jnp
int3
mov
cmp
mov
jns
or
jnp
stos
pop
cmps
aaa
scas
stos
sub
or
out
mov
pop
hlt
(bad)
call
mov
clc
fmulp
outs
sahf
mov
lods
cmp
hlt
mov
or
add
mov
outs
movs
loope
cmp
mov
sub
(bad)
and
mov
sti
cmp
pop
sub
repnz
inc
mov
cmp
cli
jg
fiadd
sub
jl
test
lock
or
lods
jp
sbb
(bad)
(bad)
jmp
pop
cmp
dec
mov
sub
pop
es
sub
lock
(bad)
mov
stos
or
ss
imul
(bad)
jmp
jmp
jne
adc
in
sbb
bound
mov
push
ins
or
or
sbb
ret
dec
fdivp
(bad)
call
inc
push
xor
aas
add
retf
or
cdq
mov
or
mov
pop
sub
jge
imul
adc
cld
ja
sub
gs
xchg
in
es
out
clc
jg
pop
fstp
lahf
outs
pop
mov
outs
mov
or
clc
(bad)
call
cdq
sti
lods
mov
jmp
test
ret
jecxz
(bad)
dec
mov
jnp
mov
movs
inc
dec
movs
mov
sub
lahf
test
and
cmp
cs
cmp
(bad)
(bad)
dec
jecxz
in
iret
call
mov
lds
jmp
dec
push
inc
in
fbld
push
cmp
(bad)
(bad)
jmp
scas
add
pop
sahf
out
pop
je
jge
jb
cmps
(bad)
jmp
sub
cmps
mov
(bad)
cmp
mov
pop
push
dec
stc
xlat
test
cmp
push
outs
mov
add
(bad)
(bad)
(bad)
cmp
test
mov
or
out
and
int3
rcr
idiv
(bad)
inc
cdq
xchg
stos
mov
test
inc
(bad)
repz
lahf
mov
(bad)
push
pusha
clc
cmp
ror
call
repnz
arpl
or
loop
test
add
cs
fldcw
cmp
pop
lock
mov
mov
mov
fstp
adc
lea
pop
stos
fstp
dec
sub
retf
fidiv
sar
add
jmp
test
leave
adc
scas
vphaddubd
jmp
rol
imul
xor
iret
in
cdq
jb
scas
retf
pop
jmp
adc
out
scas
jp
mov
and
sti
sub
out
xchg
movs
adc
or
cmp
or
(bad)
(bad)
fild
add
dec
pop
mov
jge
imul
std
retf
push
(bad)
push
dec
mov
in
sti
pushf
enter
ror
push
jmp
int
(bad)
xchg
mov
sbb
push
(bad)
(bad)
(bad)
jmp
je
test
pushf
out
pop
out
sub
sahf
test
bnd
mov
adc
je
std
or
dec
ret
orps
push
add
inc
xchg
(bad)
sub
sbb
cmp
mov
ins
(bad)
jmp
clc
hlt
sub
lods
mov
dec
mov
sbb
mov
jmp
or
jmp
add
das
pop
jp
xor
and
ret
add
ins
fidivr
aam
daa
sub
adc
xor
fisub
je
ins
jl
mov
add
lahf
add
seta
icebp
adc
or
sub
mov
push
inc
dec
mov
or
clc
(bad)
jmp
sub
loope
inc
cmps
push
loop
dec
mov
mov
lock
mov
retf
retf
cli
(bad)
(bad)
mov
adc
call
mov
enter
dec
push
sub
jo
(bad)
(bad)
fcmovb
inc
ret
(bad)
cli
int3
clc
push
fmul
inc
gs
mov
mov
pushf
aad
repz
fisub
mov
jge
mov
cmp
mov
outs
(bad)
jmp
mov
inc
mov
(bad)
mov
test
xchg
cli
pop
inc
stos
mov
jp
test
dec
popa
sub
push
dec
mov
lods
lock
(bad)
(bad)
jg
mov
mov
mov
and
add
pop
sbb
cli
jb
(bad)
(bad)
out
clc
mov
data16
pop
rcl
popa
pop
pop
push
arpl
ins
adc
or
or
jnp
push
imul
retf
imul
cs
xchg
mov
adc
(bad)
(bad)
(bad)
push
loop
mov
add
mov
loop
jecxz
lea
(bad)
repz
xor
call
push
jmp
adc
call
or
test
test
adc
in
inc
mov
lea
daa
xor
fsubr
leave
add
lahf
jne
test
add
ins
cmp
(bad)
pop
and
(bad)
lods
mov
lods
push
retf
clc
outs
cli
dec
call
mov
(bad)
cmc
(bad)
jmp
js
xchg
clc
mov
in
sbb
loop
and
movs
fld
push
xchg
sub
mov
jg
xchg
lea
std
cmc
and
adc
inc
repz
das
loop
jg
(bad)
(bad)
mov
xchg
imul
pusha
or
outs
sub
in
jmp
rol
clc
jmp
xor
sub
xchg
test
mov
cli
pop
(bad)
fcomip
dec
sbb
sbb
xor
movs
xor
(bad)
(bad)
jmp
dec
test
call
loop
xchg
push
bound
fcomp
push
out
jg
fcomip
scas
sbb
pop
mov
xor
popa
lock
fwait
lods
jle
push
pusha
movs
jno
(bad)
(bad)
(bad)
dec
jge
pop
imul
mov
pop
jmp
xor
cmps
cmc
mov
loope
call
mov
adc
cld
cmp
push
arpl
jno
jecxz
(bad)
(bad)
(bad)
mov
sbb
shl
jns
add
xor
jmp
pop
add
cmp
(bad)
(bad)
mov
mov
and
(bad)
ret
cmc
mov
(bad)
(bad)
les
push
mov
(bad)
and
sub
jae
out
jl
sub
or
and
scas
(bad)
jmp
pop
mov
add
mov
mov
push
adc
xor
addr16
popa
std
inc
dec
clc
xchg
mov
dec
sub
mov
mov
es
jmp
jno
cmp
mov
jns
lock
sbb
xor
sahf
push
(bad)
(bad)
out
clc
or
or
daa
sub
cli
arpl
pop
rcr
(bad)
stos
lea
jo
mov
aaa
pop
sbb
xor
sub
pop
clc
ror
icebp
popa
stos
sar
or
pusha
cmp
(bad)
jmp
fcom
add
xchg
pop
lds
scas
xlat
call
sbb
push
mov
xchg
mov
sti
add
(bad)
ror
clc
jns
ins
push
in
cwde
cmp
mov
lock
mov
(bad)
(bad)
jg
int
jmp
mov
mov
jmp
pop
mov
imul
bound
mov
add
sub
sub
push
cdq
pusha
out
fcomp
sahf
mov
(bad)
(bad)
(bad)
dec
mov
cmc
add
push
dec
cdq
je
imul
add
mov
in
dec
inc
mov
mov
(bad)
adc
xor
mov
or
(bad)
nop
and
clc
sub
jnp
adc
fidiv
adc
inc
test
jmp
iret
jmp
lock
pusha
call
xchg
sub
push
jmp
jmp
mov
(bad)
(bad)
(bad)
jmp
popf
mov
or
mov
mov
scas
cld
add
(bad)
mov
or
aas
shr
pop
stos
sahf
sub
xchg
sub
cmp
xchg
dec
(bad)
(bad)
mov
mov
mov
push
fisub
sub
clc
(bad)
(bad)
out
into
and
mov
outs
adc
mov
ficomp
adc
(bad)
(bad)
jmp
(bad)
retf
scas
out
and
sar
mov
xor
test
(bad)
(bad)
(bad)
lods
mov
adc
xor
je
xchg
sub
pop
cmc
(bad)
(bad)
xor
sub
(bad)
cmp
mov
mov
jb
sahf
das
(bad)
(bad)
(bad)
push
ds
jo
call
ficom
xchg
and
arpl
movs
jmp
lods
pop
cmp
sub
mov
pop
loop
out
loope
mov
mov
sbb
mov
(bad)
dec
or
inc
mov
(bad)
jg
outs
scas
jo
ins
call
sbb
dec
das
or
imul
(bad)
dec
inc
sub
push
popf
jmp
push
xchg
out
fdiv
and
or
mov
push
(bad)
(bad)
jmp
push
and
xor
inc
call
or
mov
stos
push
mov
push
sub
xor
and
ins
(bad)
stc
mov
mov
jmp
mov
sub
js
mov
pop
ret
(bad)
(bad)
(bad)
jmp
cmps
inc
xor
test
cmps
push
pop
inc
call
fidivr
(bad)
(bad)
jmp
lahf
(bad)
or
sbb
push
pushf
sub
fimul
and
push
mov
idiv
mov
sbb
cmp
fxrstor
sahf
(bad)
mov
xchg
mov
sub
(bad)
pop
sub
rcr
mov
and
fisttp
inc
or
loopne
pop
stos
in
fnstsw
(bad)
cmp
sub
lahf
push
loop
clc
jbe
mov
loope
sbb
ins
out
cli
(bad)
sub
mov
cmps
and
push
xor
les
ja
ja
or
jmp
mov
sbb
or
mov
pop
sub
add
shl
xchg
out
mov
mov
(bad)
jmp
fist
leave
loop
test
adc
adc
mov
les
sbb
xchg
pop
(bad)
jmp
cmp
nop
(bad)
push
inc
adc
jg
add
push
cwde
neg
(bad)
cmc
(bad)
dec
mov
cmps
pop
cmps
adc
pop
test
stos
iret
arpl
mov
(bad)
jmp
push
mov
icebp
pinsrw
aaa
jb
sahf
repz
add
fdivr
push
cmp
sub
jecxz
(bad)
fisttp
jecxz
movs
(bad)
xchg
push
lock
dec
pusha
pop
test
mov
(bad)
push
mov
popf
clc
aam
test
cmp
or
fsubr
xchg
sub
jp
add
jmp
pushf
mov
cs
mov
cmps
push
jmp
ficomp
xor
aaa
and
(bad)
call
call
pop
clc
fwait
cwde
pop
jp
sub
hlt
xchg
jo
xchg
cs
mov
pop
sub
lods
mov
lds
sub
lahf
and
(bad)
pop
and
mov
stc
shl
test
adc
pushf
ds
push
jo
pop
pop
retf
hlt
stos
(bad)
(bad)
(bad)
(bad)
cmp
lock
mov
call
cmp
cmp
ins
test
fcomip
(bad)
call
loopne
inc
jmp
mov
adc
movs
ror
fdiv
inc
push
icebp
cmp
push
daa
cli
retf
js
shl
retf
add
xor
push
stos
xlat
mov
sar
call
jmp
popf
mov
ja
(bad)
call
ret
outs
cmc
in
push
sar
xor
xor
dec
adc
int
ss
(bad)
(bad)
jmp
xchg
lea
(bad)
or
pop
fs
sbb
dec
jmp
popa
and
sub
pop
inc
inc
sbb
lods
mov
leave
in
pushf
retf
cmp
cli
shl
std
pop
mov
iret
or
mov
mov
xor
add
cmp
jno
ffreep
imul
(bad)
jmp
(bad)
(bad)
jmp
dec
arpl
jns
mov
cmp
in
ficom
call
cmp
sub
dec
dec
inc
mov
arpl
pop
dec
(bad)
mov
push
scas
sbb
mov
sti
ror
dec
sub
(bad)
out
xor
jmp
call
repnz
cmp
leave
in
cmp
(bad)
call
mov
xchg
jmp
lods
mov
hlt
mov
aam
adc
enter
dec
out
xor
(bad)
call
in
and
pop
out
cli
push
or
push
jmp
xchg
(bad)
call
clc
push
scas
iret
movhps
(bad)
(bad)
mov
and
retf
(bad)
jmp
loop
lock
fsub
add
jg
lods
push
cmp
test
call
jmp
(bad)
xchg
pop
and
xchg
(bad)
(bad)
jmp
popa
push
inc
mov
mov
cmps
lods
mov
in
stc
ss
and
ds
cmc
mov
out
or
adc
cmp
es
nop
test
add
jb
inc
loop
nop
mov
pop
pop
ds
push
(bad)
(bad)
(bad)
call
push
and
sti
adc
xor
ror
or
icebp
and
cmp
ja
push
add
push
ret
and
cmps
scas
retf
sub
(bad)
(bad)
(bad)
(bad)
popa
ss
and
mov
mov
scas
xchg
dec
int
scas
sub
es
int3
stos
movs
xchg
adc
(bad)
(bad)
call
rcl
psrld
(bad)
retf
mov
jb
and
scas
(bad)
push
sub
add
jg
jmp
mov
sub
(bad)
pop
scas
mov
das
test
lods
jp
fs
loop
mov
sar
inc
das
xchg
rcr
and
int
mov
adc
mov
ror
(bad)
(bad)
mov
jno
pop
mov
cmp
bound
cmps
jo
dec
cld
(bad)
push
bound
push
stos
lea
add
mov
(bad)
jg
mov
xchg
xor
scas
jmp
pop
aaa
call
cmp
push
(bad)
push
mov
mov
fsubr
imul
inc
stos
loop
aaa
outs
fld
adc
jmp
mov
xor
adc
push
std
jg
imul
das
mov
mov
jmp
inc
fwait
push
loopne
ins
data16
cmp
(bad)
call
sub
addr16
fcmovu
mov
mov
push
bound
(bad)
std
enter
push
push
enter
call
es
and
sub
cwde
js
(bad)
(bad)
(bad)
jmp
xchg
cmps
cwde
or
pop
imul
mov
and
and
sub
lods
in
jmp
inc
(bad)
jmp
int3
jae
push
cmp
stos
imul
push
cld
(bad)
call
clc
jns
fucomp
mov
cmps
jnp
in
loopne
stc
jle
pop
das
jbe
mov
(bad)
call
in
mov
xchg
mov
fist
and
jmp
cmp
mov
(bad)
(bad)
(bad)
cld
mov
clc
xor
xor
sbb
sub
mov
(bad)
(bad)
(bad)
jmp
mov
(bad)
pop
mov
shl
mov
in
push
aad
(bad)
xchg
mov
adc
das
dec
mov
ins
fdiv
or
(bad)
bswap
inc
push
mov
pop
ret
sub
(bad)
(bad)
call
adc
sahf
sub
pop
mov
pop
dec
stos
std
cmp
mov
inc
out
lea
(bad)
cmp
sub
jo
sar
sbb
mov
std
cs
(bad)
(bad)
(bad)
jmp
xchg
inc
mov
pop
jge
lahf
call
sub
ss
jmp
(bad)
(bad)
push
(bad)
leave
ret
popa
mov
xor
das
ret
mov
or
scas
daa
xor
test
jl
mov
fucomip
stos
mov
repz
scas
mov
pop
std
ja
bound
and
mov
adc
push
xor
(bad)
call
sub
xor
(bad)
mov
fbld
adc
xchg
jg
lods
(bad)
(bad)
(bad)
jmp
lock
rcr
dec
imul
js
test
xlat
sar
jl
lahf
pushf
out
dec
(bad)
jmp
rcr
pop
xchg
push
push
dec
sub
ss
stos
sbb
(bad)
(bad)
call
xchg
ins
pop
(bad)
loopne
sbb
fimul
sub
retf
push
sub
mov
or
sbb
aad
pop
adc
popa
jmp
cmp
stos
dec
out
push
xchg
in
clc
(bad)
call
je
retf
mov
cmp
neg
inc
pop
sbb
pop
hlt
push
mov
out
jp
imul
(bad)
jg
and
mov
and
or
int
(bad)
(bad)
push
popa
sbb
in
push
fwait
call
add
call
inc
adc
inc
cmp
stos
push
dec
sub
or
dec
imul
imul
sbb
dec
push
std
jmp
mov
cwde
test
or
cs
cli
fnstsw
mov
jmp
mov
movs
ror
mov
imul
mov
mov
mov
xchg
loopne
retf
in
in
and
dec
push
das
cmps
push
les
cmp
(bad)
call
xchg
and
pop
data16
adc
jmp
(bad)
(bad)
push
xchg
jbe
pop
sub
icebp
dec
stos
in
mov
and
adc
(bad)
(bad)
(bad)
(bad)
jl
adc
cwde
hlt
xchg
push
aam
popa
xchg
inc
mov
dec
sbb
(bad)
retf
mov
stos
push
add
push
cs
test
jmp
clc
fisttp
sbb
cmps
data16
and
out
add
in
or
(bad)
jmp
mov
mov
adc
jne
xor
ds
(bad)
dec
mov
add
jmp
add
stos
call
mov
mov
jl
ret
loop
jbe
add
inc
int3
cmp
xchg
pop
ds
stc
lea
stc
sbb
fimul
adc
adc
(bad)
mov
mov
mov
dec
mov
test
push
out
(bad)
jg
gs
xchg
mov
imul
(bad)
mov
push
outs
mov
add
(bad)
jmp
push
pop
popa
loopne
(bad)
aas
iret
push
sbb
xor
test
ins
stos
sbb
(bad)
(bad)
ds
xchg
ins
es
cmc
mov
mov
scas
mov
sbb
(bad)
(bad)
call
jecxz
loop
je
mov
iret
arpl
lods
mov
scas
jp
shl
lods
xor
(bad)
(bad)
fcomip
fiadd
mov
pop
add
push
mov
jmp
fild
sbb
mov
retf
clc
or
sbb
cmps
mov
daa
inc
jne
or
pop
test
mov
retf
pop
(bad)
(bad)
call
adc
nop
sub
nop
sub
mov
push
std
push
lods
jbe
cdq
in
push
(bad)
(bad)
(bad)
inc
push
cmp
test
dec
std
stos
mov
jecxz
xor
clc
scas
fwait
ret
mov
dec
sbb
das
mov
pop
sub
mov
mov
push
(bad)
(bad)
(bad)
call
add
enter
lods
ror
jl
mov
retf
dec
inc
xchg
cmp
(bad)
cmp
pushf
sub
cld
pop
lods
inc
cmp
cmp
push
pusha
mov
adc
iret
adc
aam
jnp
sub
mov
fistp
xor
jecxz
mov
sub
pop
inc
mov
jnp
inc
ret
call
push
xchg
iret
push
push
cmp
mov
jle
imul
retf
in
call
dec
mov
rcl
push
pop
ins
pop
fstp
and
dec
jmp
dec
or
(bad)
(bad)
call
jle
sub
cwde
sub
shl
xchg
pusha
adc
(bad)
(bad)
mov
pusha
or
mov
xchg
sub
xor
mov
sti
jl
push
pop
test
inc
into
enter
xor
int3
pop
(bad)
(bad)
(bad)
push
scas
jbe
out
mov
out
js
test
xchg
push
jb
sub
loop
xor
and
clc
(bad)
jmp
ret
and
aaa
shl
xchg
inc
adc
fstp
push
(bad)
(bad)
(bad)
jmp
outs
lods
call
iret
test
mov
xor
jb
lods
lahf
test
cwde
mov
(bad)
stos
imul
inc
rol
retf
cmp
adc
movs
(bad)
(bad)
jmp
dec
adc
jp
sbb
xchg
xchg
xchg
stos
hlt
mul
cs
and
sahf
fstp
or
clc
(bad)
jmp
aas
pop
cmps
mov
dec
cld
lods
iret
xlat
dec
ficom
sbb
sub
stos
mov
call
push
and
out
jge
jge
test
ins
lahf
pop
mov
jle
in
sub
mov
pop
jae
jl
pop
(bad)
adc
arpl
cmp
in
inc
cmp
call
scas
or
icebp
or
mov
push
inc
mov
repnz
dec
jl
retf
call
scas
shl
(bad)
sbb
push
popf
call
into
xchg
fisttp
ds
gs
jo
sbb
aam
test
adc
jmp
add
pop
push
jl
jle
cmp
(bad)
(bad)
(bad)
mov
cwde
std
(bad)
jmp
dec
sub
outs
(bad)
jns
and
cmp
(bad)
inc
xchg
cmp
and
cmp
ret
sub
(bad)
sub
into
jge
hlt
idiv
and
jmp
stos
(bad)
jmp
jo
test
add
pop
xchg
mov
les
test
cwde
(bad)
(bad)
(bad)
(bad)
jmp
loop
xchg
xchg
js
and
out
popf
sbb
test
mov
adc
inc
xchg
push
dec
std
sbb
jmp
adc
call
dec
imul
mov
pop
xlat
test
cmps
into
mov
jg
(bad)
scas
bound
mov
dec
jle
cmp
fwait
jmp
pop
sub
in
mov
adc
jnp
pop
and
adc
dec
sub
jecxz
arpl
lods
mov
scas
xor
sbb
jmp
xchg
popf
rcl
jle
int3
mov
mov
inc
pop
adc
out
ins
retf
scas
jmp
es
push
sbb
sub
mov
mov
(bad)
(bad)
dec
sbb
push
cli
or
dec
cmp
adc
inc
jbe
loop
adc
call
scas
adc
mov
add
sbb
outs
(bad)
(bad)
(bad)
call
mov
xor
and
push
inc
adc
out
cs
(bad)
fstp
and
mov
iret
xor
add
jmp
ret
aam
mov
sbb
jecxz
adc
mov
(bad)
dec
or
or
call
push
sub
jl
dec
or
and
cld
ins
sub
(bad)
(bad)
(bad)
(bad)
mov
scas
sbb
hlt
scas
stos
push
cs
mov
sub
je
std
sbb
call
pop
mov
mov
fcomi
pop
or
lds
(bad)
(bad)
mov
sbb
test
fiadd
cmps
jmp
icebp
mov
mov
xchg
adc
retf
cmps
cmps
xor
pop
icebp
jmp
mov
stos
or
lea
jb
jno
(bad)
(bad)
jmp
xor
cmp
sub
ja
scas
sub
mov
add
cwde
and
dec
(bad)
out
adc
and
lahf
add
mov
fisub
stos
mov
shl
push
xor
jmp
mov
or
(bad)
(bad)
mov
and
jmp
cmps
adc
xchg
xchg
inc
pop
pop
sub
lock
mov
adc
(bad)
(bad)
(bad)
cmp
mov
push
jge
cld
jo
dec
push
dec
call
xchg
call
push
mov
not
imul
inc
adc
sbb
adc
jp
js
pop
ret
mov
mov
mov
sub
retf
xchg
jne
out
jmp
aad
stc
mov
sub
fwait
add
push
call
js
test
mov
dec
inc
sub
xchg
mov
(bad)
cmps
cs
adc
mov
ret
call
(bad)
cmp
(bad)
dec
fucomp
sbb
fiadd
jge
pop
jmp
sub
(bad)
out
cdq
in
mov
pop
sub
std
cmps
jmp
adc
sub
jmp
push
fsubr
js
mov
imul
and
add
inc
mov
(bad)
(bad)
(bad)
jmp
dec
mov
lahf
(bad)
loopne
out
jp
retf
out
in
mov
(bad)
ins
pop
push
ins
mov
(bad)
(bad)
(bad)
push
or
out
cld
imul
es
imul
jb
jne
mov
sub
pop
(bad)
fcomip
jmp
cs
int3
cwde
scas
or
push
or
pop
sti
inc
(bad)
not
(bad)
jmp
add
fldcw
sbb
and
adc
mov
loope
lea
pop
test
(bad)
(bad)
jl
lea
inc
pop
mov
adc
jb
mov
(bad)
call
sub
lahf
sub
mov
stc
(bad)
adc
xchg
xchg
test
test
scas
push
repz
or
mov
add
cmp
xchg
cli
jmp
rol
cld
shr
lods
loop
xchg
push
test
popf
xchg
jg
jg
add
sub
mov
jmp
not
push
loop
push
pop
clc
sbb
sar
cwde
ss
sbb
repz
jle
sub
and
xchg
mov
mov
and
mov
ret
cli
enter
test
fwait
pop
mov
or
(bad)
mov
jge
ins
(bad)
mov
call
lahf
std
les
call
sub
adc
jp
adc
sub
(bad)
(bad)
inc
ins
mov
adc
pop
push
mov
cs
clc
cwde
sub
in
inc
das
(bad)
pop
mov
imul
mov
cmp
cdq
inc
mov
outs
clc
call
dec
xchg
and
xchg
mov
(bad)
cmp
mov
ret
and
push
out
lahf
sbb
fwait
in
mov
mov
aaa
adc
and
xchg
imul
imul
dec
pop
or
(bad)
aad
or
mov
sub
(bad)
(bad)
dec
js
jne
push
das
add
pop
inc
into
clc
mov
or
push
sub
cs
repz
mov
add
jb
fdiv
xor
loopne
std
pop
ins
mov
(bad)
jmp
xor
mov
jne
cmps
out
(bad)
movs
inc
adc
push
(bad)
(bad)
jmp
scas
mov
mov
and
mov
push
(bad)
(bad)
call
pop
xor
cmc
sbb
adc
cmp
out
test
call
xor
mov
jmp
call
lock
fwait
mov
or
(bad)
(bad)
mov
xor
pop
loop
mov
test
cs
dec
(bad)
stos
mov
jno
pop
retf
cmc
(bad)
(bad)
(bad)
inc
cmp
mov
mov
lahf
mov
into
retf
imul
inc
inc
jecxz
push
retf
or
(bad)
(bad)
push
jb
mov
adc
inc
add
inc
in
in
fidiv
mov
es
and
out
gs
jmp
inc
mov
and
and
jle
mov
xor
(bad)
jmp
fcmovu
bound
nop
scas
sbb
mov
xor
cli
ret
aad
inc
mov
scas
(bad)
jns
test
fadd
loop
outs
ins
push
pop
std
push
imul
pop
xlat
lods
add
pop
and
and
mov
ret
lods
xor
cmp
sub
in
aad
scas
(bad)
(bad)
(bad)
dec
push
sub
jp
adc
ret
test
mov
fsubrp
std
mov
push
adc
stos
add
cmps
clc
cmp
scas
mov
push
call
das
push
movs
cs
mov
(bad)
call
ss
dec
push
jmp
loopne
cmps
push
cli
push
add
jg
(bad)
inc
fucomp
mov
repnz
xchg
adc
int
inc
call
inc
scas
fcom
call
call
jo
push
daa
add
and
ss
out
int3
test
cmp
(bad)
dec
pop
jmp
push
jmp
out
ror
mov
in
push
and
push
(bad)
mov
xchg
mov
mov
xchg
cmp
add
mov
(bad)
das
call
cmps
clc
(bad)
call
pop
jge
iret
lahf
jne
and
pop
outs
mov
xchg
mov
xor
(bad)
inc
in
dec
sbb
sub
inc
pop
pop
sub
hlt
sbb
clc
(bad)
dec
pop
inc
xlat
pop
push
fwait
xchg
push
out
inc
push
jmp
xchg
cmc
icebp
gs
mov
movs
mov
(bad)
out
clc
call
mov
cld
add
xor
in
or
mov
je
cmp
jmp
test
cmps
or
stos
and
(bad)
(bad)
(bad)
(bad)
jmp
push
xor
daa
pop
jmp
cmp
imul
aaa
jmp
jg
jmp
adc
bound
in
cwde
cmp
frstor
(bad)
jg
mov
aam
add
nop
push
mov
pop
jmp
ror
mov
pop
mov
xchg
xor
mov
psrld
cmp
mov
cdq
(bad)
(bad)
(bad)
(bad)
stc
dec
push
bound
cs
cmp
out
jmp
jb
fsub
mov
inc
cli
idiv
cdq
(bad)
sub
ja
fwait
retf
and
mov
xchg
add
das
aam
in
lea
jle
and
icebp
repz
fwait
out
jmp
dec
jmp
ss
aam
pusha
pusha
popa
frstor
lods
add
(bad)
(bad)
jmp
mov
(bad)
jnp
ja
jecxz
mov
repz
and
cmp
sbb
(bad)
dec
test
xchg
cli
xor
push
(bad)
(bad)
jmp
mov
xor
adc
mov
pushf
mov
dec
(bad)
cmp
or
mov
sub
or
push
mov
cmps
sub
icebp
in
or
pop
cli
(bad)
(bad)
jmp
inc
rcl
cmps
pop
inc
mov
adc
mov
jns
pop
(bad)
(bad)
(bad)
out
adc
cmps
cmp
add
pop
out
mov
cld
retf
mov
dec
xchg
and
sbb
(bad)
jb
pop
jnp
(bad)
dec
mov
(bad)
(bad)
(bad)
jmp
out
cld
test
mov
mov
sub
jae
xlat
sahf
xchg
cli
leave
jmp
les
adc
out
ins
mov
(bad)
push
pop
sub
cmp
mov
pop
outs
jle
jg
imul
inc
mov
cld
sbb
mov
jo
or
push
jle
mov
clc
iret
jns
rep
mov
scas
clc
popf
dec
xchg
lds
shl
adc
jmp
es
retf
sbb
and
and
ins
sbb
outs
cli
retf
stos
lahf
jb
sub
dec
iret
gs
(bad)
call
hlt
mov
xor
xchg
jle
jecxz
cld
or
icebp
rcr
push
(bad)
pop
jecxz
pop
pop
in
stos
call
jmp
out
idiv
adc
cmps
dec
fimul
push
loope
mov
cld
stos
mov
inc
jmp
inc
ret
sub
push
push
test
push
mov
xchg
dec
pop
(bad)
(bad)
(bad)
call
sub
movs
mov
sbb
repnz
lock
dec
jg
mov
cmp
(bad)
(bad)
(bad)
jmp
dec
cmp
fcmovb
mov
lahf
and
das
cli
hlt
pop
sbb
in
mov
jecxz
jo
clc
mov
fsubrp
mov
dec
or
mov
add
adc
adc
test
mov
add
loope
mov
ret
retf
imul
jp
jmp
cli
or
push
add
idiv
fs
mov
sbb
mov
call
sbb
mov
inc
retf
jno
sar
inc
mov
in
mov
mov
psubusb
jo
mov
cmp
(bad)
call
xor
test
pusha
sbb
das
mov
pop
mov
pop
scas
pop
mov
(bad)
js
mov
test
mov
pop
sub
push
mov
mov
jns
mov
push
and
stos
lods
mov
loop
cmp
mov
iret
mov
push
sub
jp
(bad)
(bad)
(bad)
call
mov
sbb
repnz
ds
cli
mov
sti
sbb
push
mov
pop
cmc
inc
lock
push
test
mov
jg
stc
stos
adc
aad
sbb
jecxz
sbb
push
adc
pop
jmp
dec
mov
lds
push
(bad)
(bad)
(bad)
(bad)
inc
test
loope
pop
call
aad
pusha
jno
and
imul
call
std
jmp
inc
sub
ds
adc
stos
call
(bad)
(bad)
mov
cli
and
cmps
sub
mov
sbb
cli
(bad)
fisttp
mov
jb
cmovb
out
inc
cmp
out
push
repz
(bad)
jb
push
pop
jle
cmp
aas
fxch
push
inc
mov
out
add
imul
int3
lea
es
jbe
es
bound
outs
or
xor
xor
pop
loop
mov
movs
add
in
pop
push
and
adc
gs
loopne
pop
ret
sub
rol
push
fisubr
in
mov
add
push
jmp
jmp
mov
or
scas
or
ins
add
scas
or
inc
and
in
and
or
into
fsubp
loopne
inc
or
loopne
cmps
xor
or
adc
xor
jmp
sar
sti
dec
shr
and
mov
sub
leave
dec
stc
ror
es
out
call
fisubr
sub
sub
sti
or
repnz
(bad)
(bad)
in
outs
fs
mov
outs
daa
and
(bad)
lods
cmp
push
iret
push
and
loop
leave
push
add
ret
or
pop
out
aad
das
cdq
out
cmp
sbb
inc
(bad)
call
shr
loop
jle
ret
pop
test
adc
dec
(bad)
inc
mov
cs
mov
std
or
movs
sbb
(bad)
(bad)
dec
mov
cdq
mov
dec
jne
mov
dec
cmps
and
or
lock
lahf
adc
dec
mov
lock
ret
(bad)
mov
mov
and
js
je
dec
call
add
mov
mov
aam
(bad)
(bad)
inc
xchg
popa
mov
in
mov
adc
ins
scas
mov
cld
(bad)
(bad)
cmp
loop
and
cmps
lahf
and
cmp
sub
cld
jg
mov
push
push
pusha
mov
mov
mov
(bad)
jg
inc
out
mov
push
pop
ds
mov
or
popa
(bad)
(bad)
(bad)
(bad)
cld
repnz
and
and
js
test
cdq
lock
mov
idiv
scas
push
(bad)
(bad)
call
mov
scas
push
mov
test
cmp
(bad)
(bad)
mov
xchg
nop
stos
mov
(bad)
cli
mov
enter
push
mov
call
scas
or
lods
loopne
push
cmps
sub
or
push
xor
cmps
into
sbb
xchg
(bad)
(bad)
(bad)
mov
int
push
or
inc
inc
std
ins
out
xchg
out
clc
mov
scas
sub
(bad)
(bad)
call
and
lea
cmps
mov
mov
add
jmp
inc
xchg
mov
call
loopne
add
mov
lds
mov
and
(bad)
rcr
(bad)
dec
or
(bad)
(bad)
(bad)
mov
adc
mov
scas
adc
xchg
(bad)
call
mov
(bad)
(bad)
(bad)
(bad)
fidiv
or
jo
cli
repnz
enter
cmps
mov
scas
or
jnp
test
add
(bad)
pop
in
add
pusha
outs
and
(bad)
mov
dec
mov
adc
dec
xor
div
in
retf
mov
cld
xchg
retf
cmp
cmp
pop
sub
outs
jmp
cmp
(bad)
(bad)
(bad)
push
lods
je
mov
pop
jae
loop
push
mov
mov
adc
add
push
retf
(bad)
xchg
or
mov
jno
push
leave
mov
jg
pop
pop
bound
dec
jp
retf
ficomp
cmp
in
add
push
pop
cmp
jmp
dec
sub
push
jb
xchg
call
stc
add
and
dec
push
lahf
sahf
sub
push
enter
(bad)
(bad)
clc
test
jmp
lock
jb
adc
call
fdiv
jg
icebp
xor
ficom
mov
mov
out
js
mov
mov
dec
(bad)
(bad)
and
adc
adc
(bad)
(bad)
push
out
dec
cmp
add
nop
dec
sub
clc
call
and
jno
jne
or
mov
(bad)
call
scas
sub
mov
push
adc
push
or
(bad)
(bad)
(bad)
mov
jle
xchg
stc
mov
mov
or
jb
mov
cli
dec
movs
fisub
push
std
out
cli
mul
cmps
icebp
push
or
out
aaa
call
xchg
out
mov
jmp
or
neg
fidiv
pop
mov
sub
mov
mov
pop
pushf
adc
xchg
sbb
pop
jl
inc
(bad)
call
neg
popa
and
sub
dec
dec
jle
test
mov
cli
cmp
stos
(bad)
xor
stos
dec
inc
test
mov
popf
push
int
bound
arpl
popa
ins
adc
mov
test
mov
(bad)
call
(bad)
cmp
inc
push
pop
cmp
adc
pushf
call
adc
push
and
cmp
ret
fild
enter
push
imul
jmp
test
in
dec
adc
leave
rcr
scas
in
xchg
test
push
(bad)
(bad)
call
push
fnop
push
push
cs
in
fstp
mov
leave
jmp
mov
scas
(bad)
(bad)
(bad)
jmp
mov
sbb
mov
fisubr
push
adc
add
inc
popf
xor
sub
push
call
dec
(bad)
(bad)
(bad)
jg
jbe
adc
cmps
push
das
das
fs
sub
movs
push
xor
shl
hlt
call
mov
cli
xor
arpl
and
jnp
test
push
mov
call
mov
pusha
cs
mov
push
xchg
sub
cdq
ror
test
or
retf
out
std
(bad)
(bad)
(bad)
jmp
dec
(bad)
cmp
aad
stos
fisttp
cmps
mov
push
cmp
out
fbstp
dec
adc
fisubr
sub
mov
dec
mov
shr
dec
jmp
(bad)
jmp
popa
xchg
mov
imul
cmps
daa
retf
inc
cmc
jb
clc
retf
call
add
call
retf
sbb
(bad)
jp
loope
add
xchg
lock
mov
out
sub
stos
and
loope
leave
cmp
clc
or
aad
movs
xor
cld
sub
(bad)
fcomip
add
xchg
mov
adc
xor
(bad)
jmp
push
push
cdq
lahf
xchg
ret
sbb
clc
xor
cs
sbb
jecxz
neg
dec
sub
mov
(bad)
(bad)
push
push
ja
and
pop
dec
xor
jge
repnz
fld
xchg
(bad)
(bad)
(bad)
push
cmp
cmp
adc
jo
push
(bad)
movs
mov
lds
in
jb
and
(bad)
(bad)
inc
ins
fwait
cli
mov
enter
retf
and
es
push
cmp
call
cs
call
sub
cmp
loop
ret
adc
in
push
(bad)
call
data16
scas
push
xor
mov
mov
adc
jns
jge
mov
nop
jmp
jmp
xchg
rol
and
adc
sub
xor
pop
pop
gs
dec
add
ds
outs
scas
cli
or
repnz
outs
pop
sub
std
out
scas
xor
les
or
cmp
(bad)
push
mov
xor
mov
mov
push
sub
int3
in
in
(bad)
call
inc
dec
ds
cmps
mov
fild
mov
(bad)
(bad)
inc
mov
loopne
imul
or
jno
mov
mov
lahf
and
(bad)
jmp
dec
cmps
dec
push
sub
dec
mov
fisub
cmp
mov
scas
call
fs
lock
sub
enter
add
lea
cli
cmps
adc
xchg
mov
(bad)
mov
iret
pusha
(bad)
icebp
stos
xor
imul
pop
jno
cmc
(bad)
(bad)
in
mov
jnp
aad
retf
jmp
and
rcr
mov
sar
(bad)
(bad)
jg
push
das
sbb
xor
mov
stos
push
sbb
pop
xchg
cli
outs
das
push
push
sar
jmp
dec
add
mov
add
dec
es
rcl
push
sub
ds
(bad)
dec
sub
or
sub
mov
jmp
clc
(bad)
(bad)
(bad)
(bad)
cmp
das
scas
test
sar
xor
xor
cmp
jle
cmp
mov
inc
(bad)
fwait
(bad)
fild
adc
call
in
cdq
cdq
(bad)
(bad)
(bad)
dec
cmp
shr
mov
das
xlat
out
or
push
inc
(bad)
sub
in
fdivr
fs
enter
outs
pop
jecxz
retf
lods
daa
dec
or
mov
sbb
(bad)
(bad)
(bad)
dec
enter
sub
fimul
xchg
add
movs
js
icebp
(bad)
(bad)
jmp
inc
in
cmp
mov
dec
mov
dec
mov
pop
dec
aaa
cmps
shl
mov
add
mov
hlt
adc
(bad)
jmp
dec
fisttp
sbb
pop
add
sub
(bad)
mov
pusha
cmp
sub
cmp
(bad)
fbld
jmp
js
test
loop
xchg
xor
(bad)
(bad)
inc
mov
imul
stos
(bad)
dec
popa
inc
and
(bad)
scas
push
outs
xor
in
rcl
jecxz
pop
mov
call
jmp
mov
mov
test
mov
(bad)
(bad)
(bad)
fbstp
test
push
push
loopne
jb
dec
xlat
mov
fdivrp
(bad)
dec
popf
sub
adc
sub
mov
or
mov
push
into
hlt
mov
ss
les
call
fdiv
call
retf
inc
jp
hlt
and
hlt
cmp
cs
(bad)
cmp
(bad)
adc
push
(bad)
push
mov
mov
js
arpl
mov
mov
push
lahf
into
and
push
test
mov
mov
xchg
adc
jg
sbb
push
in
ins
popf
xor
cmp
(bad)
pusha
mov
sub
add
pop
mov
(bad)
call
fbstp
(bad)
fidiv
add
mov
repnz
or
push
pop
rcl
xchg
sub
sbb
pop
push
fsubr
(bad)
mov
inc
xchg
push
dec
and
int
mov
mov
(bad)
call
xchg
ret
adc
fdivr
dec
jmp
outs
sbb
cmp
imul
mov
sbb
cli
dec
add
mov
(bad)
sbb
cmps
(bad)
inc
mov
sbb
mov
daa
add
sub
stos
bound
scas
(bad)
out
cli
dec
mov
mov
cwde
into
or
pop
call
cmp
dec
push
inc
fs
push
sub
pusha
jnp
mov
jl
or
fwait
push
leave
(bad)
(bad)
(bad)
dec
imul
pop
sub
div
dec
mov
fcomp
push
push
push
jp
(bad)
(bad)
jmp
add
push
retf
adc
pushf
xchg
pop
jmp
fisttp
cmp
test
cli
pushf
in
xor
arpl
loop
mov
jmp
fbld
shl
movs
inc
jo
or
shr
(bad)
(bad)
(bad)
jmp
adc
mov
adc
xchg
lods
leave
mov
xchg
loope
jl
dec
sub
out
mov
jmp
and
cmps
dec
fcmovb
inc
adc
mov
sbb
sbb
imul
(bad)
call
mov
out
lock
out
mov
stc
mov
cli
jg
pop
std
xor
std
xchg
jmp
sub
dec
dec
lods
(bad)
xor
ret
sub
push
(bad)
jle
jne
test
(bad)
mov
mov
mov
sbb
jp
fiadd
jo
nop
pop
fwait
lods
mov
(bad)
(bad)
jmp
fiadd
xor
xchg
retf
or
pusha
xchg
shr
adc
push
adc
dec
cmp
add
dec
jge
sub
push
ja
loope
(bad)
(bad)
dec
repnz
das
movs
mov
jmp
mov
cmps
xor
imul
xchg
fcom
sahf
inc
xchg
or
or
aad
(bad)
dec
pop
xor
rcl
retf
mov
jecxz
push
scas
ds
jle
sub
(bad)
(bad)
jmp
sub
pop
add
cmp
not
(bad)
or
aas
shl
or
(bad)
fsubr
shr
cmps
daa
jp
mov
jnp
mov
pop
mov
(bad)
mov
jg
adc
jbe
retf
inc
dec
sbb
adc
(bad)
jg
ja
cmp
fild
add
stc
leave
iret
cmp
call
addr16
stos
stos
(bad)
(bad)
(bad)
dec
mov
aad
add
pushf
aas
(bad)
push
call
cs
cmp
push
inc
xchg
out
mov
adc
jmp
and
dec
stos
push
pop
cmp
in
in
mov
mov
loope
in
adc
popa
sub
loope
mov
loopne
outs
inc
mov
xor
cwde
lods
pop
(bad)
jmp
test
mov
arpl
imul
call
mov
daa
out
xchg
and
aaa
adc
jmp
rol
fs
sahf
and
(bad)
(bad)
(bad)
clc
mov
ds
repnz
mov
xor
retf
and
(bad)
push
sub
mov
xchg
ss
xlat
push
xor
(bad)
call
js
ja
mov
cmp
out
xor
jmp
mov
cli
fnstcw
sub
and
mov
fidiv
(bad)
stc
adc
mov
pop
pop
sub
jl
mov
mov
xor
push
arpl
or
fwait
jp
lock
push
cmc
xor
call
jmp
cwde
jne
icebp
adc
(bad)
(bad)
push
dec
jmp
repnz
stos
push
jne
cmpxchg8b
or
pop
int
cwde
in
(bad)
(bad)
(bad)
inc
cwde
jle
sbb
sti
sub
dec
shl
(bad)
out
sbb
adc
nop
sar
bound
fcmovb
call
push
xlat
push
mov
cld
jg
jmp
dec
dec
in
loopne
cmp
scas
shl
add
es
or
cmps
jb
pop
sbb
jmp
fcomp
add
daa
repnz
pushf
inc
cmp
(bad)
(bad)
jg
sti
pop
mov
push
std
(bad)
retf
pop
cld
repz
leave
stc
pop
nop
mov
clc
push
cld
pop
xchg
push
(bad)
retf
mov
sar
mov
jmp
clc
xchg
pop
out
jnp
dec
in
je
jmp
sub
inc
popf
and
scas
mov
out
jl
xor
push
ret
xchg
mov
or
cmp
xor
(bad)
call
shr
shr
js
fdivr
ja
rep
jb
iret
jmp
sbb
cmp
dec
(bad)
(bad)
(bad)
jmp
mov
push
loop
stos
sub
lock
mov
pusha
cs
cli
(bad)
(bad)
jmp
stos
call
clc
jb
mov
cmp
mov
jmp
adc
pusha
(bad)
(bad)
(bad)
dec
popf
xchg
es
cmp
fisubr
xchg
pop
out
out
(bad)
jp
int
fistp
or
lods
inc
ja
or
(bad)
(bad)
jmp
das
ins
jmp
cpuid
push
dec
push
fs
in
scas
int3
sbb
mov
inc
mov
sahf
mov
icebp
adc
jmp
enter
scas
nop
fistp
bswap
jmp
movs
or
pop
mov
shr
mov
(bad)
and
iret
cs
push
push
bound
leave
fmul
fistp
scas
fisubr
pusha
push
push
call
mov
das
stos
pop
(bad)
(bad)
push
loop
stos
or
icebp
repz
jle
ret
jmp
stos
pop
test
and
(bad)
addr16
push
fprem
enter
es
(bad)
in
neg
fs
and
pop
mov
sub
mov
in
pop
lods
out
repnz
cmp
mov
popa
(bad)
(bad)
(bad)
call
jb
in
adc
jmp
sub
or
adc
inc
mov
dec
cmps
outs
cmp
repz
jns
test
adc
mov
push
mov
pop
in
adc
iretw
xchg
dec
out
push
leave
push
into
ret
(bad)
sti
mov
pop
pop
cmp
scas
ss
outs
test
(bad)
(bad)
mov
test
and
mov
add
mov
push
add
aas
sub
push
mov
pusha
sar
push
fcomi
mov
call
jmp
call
leave
test
test
mov
add
dec
clc
adc
(bad)
(bad)
(bad)
mov
and
sar
cli
or
mov
stos
mov
imul
sbb
push
fcmovb
jb
fs
xchg
out
sar
jg
mov
lods
shr
mov
in
stos
out
in
mov
js
movs
bound
mov
(bad)
jnp
xor
ds
das
stc
lods
loopne
pop
call
or
call
loope
adc
cmc
jns
hlt
and
(bad)
(bad)
jmp
pusha
call
sar
in
imul
and
xor
push
call
sub
sub
sub
pop
mov
dec
pop
pop
imul
sbb
pop
outs
xchg
dec
imul
(bad)
call
mov
test
pop
mov
loope
outs
dec
fisubr
lea
retf
repz
sbb
fidiv
lahf
cmp
sub
(bad)
cmp
inc
add
pop
sahf
jl
retf
adc
clc
xchg
adc
call
stos
xor
jmp
pop
loopne
sub
sahf
pop
imul
or
call
jmp
mov
push
sub
mov
add
fwait
(bad)
push
lods
stos
stos
xchg
add
(bad)
fisttp
xchg
push
cli
(bad)
sti
mov
and
xor
xor
fnstenv
mov
(bad)
jmp
cld
imul
imul
jb
(bad)
(bad)
mov
sar
jmp
call
xchg
mov
and
loop
(bad)
(bad)
fcomip
mov
fld
mov
stos
out
out
enter
adc
je
pop
dec
jmp
jmp
inc
dec
mov
push
mov
mov
jmp
cmp
push
(bad)
cmp
ins
(bad)
(bad)
(bad)
dec
push
add
jp
sahf
aaa
mov
fcmovnb
push
aam
mov
push
dec
stc
sbb
sar
shl
cmp
add
test
push
movs
adc
clc
sbb
mov
in
retf
mov
and
add
sbb
iret
mov
jge
dec
stos
call
(bad)
(bad)
push
sbb
fbld
mov
and
loope
xor
mov
(bad)
jmp
cld
(bad)
call
call
xlat
dec
dec
mov
mov
imul
retf
inc
shr
or
inc
(bad)
shl
ret
cmps
(bad)
call
pop
aas
pop
sub
push
mov
retf
out
(bad)
or
dec
scas
(bad)
(bad)
call
int3
(bad)
fsubr
pusha
das
sbb
mov
loopne
mov
leave
daa
cmps
ja
mov
push
mov
add
and
retf
test
(bad)
(bad)
jmp
sbb
loop
mov
js
sar
pop
adc
mov
out
jmp
mov
call
add
std
sbb
fst
dec
fldenv
pop
sbb
(bad)
call
or
nop
leave
bound
test
shr
jo
sbb
dec
das
sub
add
jg
repnz
or
mov
(bad)
(bad)
(bad)
out
or
dec
sbb
in
jo
clc
cwde
push
mov
imul
data16
inc
jge
sub
cmp
or
and
aaa
lock
dec
(bad)
(bad)
jg
pop
xor
mov
test
mov
xor
push
fs
(bad)
(bad)
(bad)
push
push
jmp
(bad)
sub
mov
mov
adc
ret
jge
mov
dec
(bad)
movs
adc
mov
dec
xchg
(bad)
jmp
fidivr
mov
pop
xchg
jmp
sbb
sub
add
ret
pop
cmps
ds
fisttp
cmps
sub
fild
or
adc
ds
xchg
test
bound
icebp
dec
xor
cmp
scas
je
mov
(bad)
cmps
xchg
(bad)
(bad)
call
test
mov
ins
pop
lock
jmp
mov
add
push
(bad)
(bad)
(bad)
call
movs
out
retf
call
(bad)
or
mov
adc
mov
push
sub
inc
sub
sub
cmp
outs
jmp
dec
cwde
je
mov
push
dec
test
fild
(bad)
(bad)
(bad)
mov
loopne
xchg
pop
sbb
shr
xor
mov
push
sar
stos
sahf
or
or
jns
(bad)
(bad)
(bad)
jg
mov
adc
shl
ds
and
inc
fld
cs
in
stos
inc
loope
pop
enter
xchg
je
cmp
stos
and
call
push
sub
cmp
mov
js
mov
loopne
(bad)
call
dec
test
outs
jno
into
(bad)
iret
pop
scas
xorps
mov
pop
pop
sbb
lods
aad
or
lods
dec
repz
cmp
xchg
test
ficomp
and
mov
movs
pop
out
jmp
pop
outs
addr16
mov
imul
retf
cld
or
nop
aam
cld
call
test
mov
push
(bad)
inc
loop
push
int3
add
aas
dec
addr16
retf
outs
dec
mov
test
(bad)
(bad)
call
inc
cmp
ret
ja
call
mov
xchg
int3
(bad)
nop
dec
pop
sahf
sbb
xchg
(bad)
(bad)
(bad)
inc
fild
dec
fistp
ficomp
fistp
xchg
adc
sti
test
(bad)
jmp
dec
jmp
(bad)
(bad)
dec
sbb
das
call
clc
nop
cmp
iret
movs
lods
mov
retf
mov
mov
add
cmp
add
mov
imul
leave
int
or
(bad)
mov
shl
stos
push
dec
shl
mov
(bad)
(bad)
call
mov
es
sbb
sbb
push
fmul
push
lds
xor
jge
lea
cwde
sub
mov
fisttp
ja
ja
bnd
jle
cmp
clc
clc
aas
adc
push
sbb
adc
(bad)
dec
lock
pop
lock
xchg
add
js
xchg
into
(bad)
(bad)
(bad)
jmp
xchg
je
or
sbb
scas
outs
lahf
bound
mov
jmp
jne
mov
(bad)
cdq
lods
lahf
jmp
pop
daa
outs
(bad)
call
and
imul
jo
mov
mov
in
clc
(bad)
dec
call
mov
sahf
sub
icebp
mov
loopne
dec
sbb
cmp
jle
test
pop
ja
test
jmp
ss
arpl
cmp
(bad)
call
mov
mov
rol
sub
or
loopne
icebp
loopne
push
mov
hlt
(bad)
(bad)
call
mov
popa
imul
pushf
cdq
jmp
mov
fsub
outs
adc
xor
ret
out
fdivr
dec
call
cli
aas
mov
and
pop
out
mov
pop
aas
lods
outs
pop
xor
jl
push
pop
mov
fs
ins
xor
adc
aaa
inc
cli
fild
mov
push
sub
fwait
inc
cld
push
(bad)
jb
mov
aad
adc
sub
(bad)
(bad)
(bad)
jmp
and
mov
imul
jle
xor
mov
(bad)
call
jmp
cmc
add
dec
dec
xor
retf
xchg
sub
inc
(bad)
icebp
(bad)
(bad)
call
call
sahf
lahf
movs
pushf
cmps
mov
jg
fucomi
out
popa
pop
ja
sti
(bad)
jg
sbb
xor
cmp
not
push
jnp
mov
(bad)
(bad)
jg
xor
mov
call
enter
xchg
xchg
(bad)
(bad)
(bad)
dec
gs
dec
nop
mov
mov
stos
call
mov
fisubr
call
xchg
and
push
adc
(bad)
(bad)
inc
ja
stc
sub
pushf
aas
sub
scas
sbb
test
cmp
std
(bad)
jmp
out
inc
scas
(bad)
(bad)
push
aad
cld
sub
or
int
push
enter
(bad)
cmp
daa
xchg
jmp
lahf
nop
mov
lock
(bad)
(bad)
mov
arpl
jae
aad
cli
loop
and
clc
repnz
xchg
add
push
pusha
dec
xchg
sub
mov
cmp
push
(bad)
sbb
sub
movs
cmp
clc
jmp
ins
xchg
push
(bad)
call
lahf
jmp
test
mov
pop
cmp
xor
lds
addr16
mov
push
push
mov
jbe
sub
stos
outs
jmp
xchg
mov
(bad)
dec
iret
addr16
mov
adc
or
xchg
dec
or
mov
xchg
mov
movs
jae
pop
(bad)
(bad)
(bad)
(bad)
(bad)
ds
push
pushf
nop
enter
push
mov
shl
sbb
add
scas
mov
inc
sub
(bad)
xor
or
inc
hlt
or
stc
pop
test
(bad)
(bad)
push
jle
(bad)
fild
ret
scas
push
stc
ss
push
inc
jmp
(bad)
(bad)
(bad)
(bad)
mov
pop
fild
sub
mov
jmp
js
xchg
adc
jmp
xchg
sbb
test
jp
pushf
outs
loop
mov
clc
dec
fidivr
or
jb
adc
mov
jb
push
loop
ins
in
(bad)
(bad)
out
clc
imul
push
loop
mov
push
and
imul
call
cmps
mov
fcmovb
loopne
mov
jp
jb
cmps
test
aam
imul
std
cdq
cmp
outs
sahf
daa
aaa
push
pop
out
adc
xor
(bad)
ins
jb
call
(bad)
(bad)
std
int
inc
push
jne
jecxz
sbb
cmp
fcom
imul
jns
jg
sub
xchg
adc
addr16
(bad)
dec
popa
jns
sbb
(bad)
aad
addr16
mov
jno
pop
adc
imul
dec
jecxz
push
add
jp
outs
lods
hlt
iret
imul
add
sbb
repnz
sub
or
inc
into
sub
jmp
xchg
sar
cli
icebp
adc
movs
pop
inc
sub
and
std
adc
lock
xor
add
rcl
ss
test
pop
arpl
mov
mov
repnz
sbb
jnp
out
loop
jg
xor
push
les
pop
les
sub
(bad)
dec
sub
mov
xchg
mov
dec
fisttp
pop
lods
sbb
(bad)
jg
test
push
mov
in
scas
ds
aaa
mov
adc
jg
call
xchg
je
dec
sub
lods
dec
jnp
fwait
out
mov
cld
inc
inc
mov
scas
jbe
cmp
cmp
mov
or
neg
push
pop
imul
stos
jmp
dec
ror
int3
test
les
movs
inc
and
adc
mov
pop
clc
(bad)
push
mov
shl
stc
and
sub
pop
pusha
iret
sbb
outs
inc
and
inc
ror
(bad)
(bad)
call
or
iret
pop
sub
and
push
das
in
dec
mov
(bad)
lods
js
cwde
jno
mov
mov
adc
ja
xor
mov
loopne
in
imul
sub
xor
adc
cmps
sbb
(bad)
push
lods
repnz
cmps
push
stos
xor
jp
in
mov
xchg
imul
test
ficomp
sub
mov
push
jecxz
pop
ror
adc
(bad)
push
fstp
jg
fsubr
adc
dec
jns
call
das
jno
outs
mov
xchg
(bad)
(bad)
(bad)
call
jmp
sub
sbb
jmp
push
xchg
std
clc
stos
cmp
add
or
sar
(bad)
aad
aad
push
shr
out
jecxz
loop
repz
xchg
cwde
call
clc
mov
shl
mov
fisttp
(bad)
mov
mov
sub
sbb
(bad)
(bad)
(bad)
jmp
mov
repnz
fist
push
imul
pop
bound
dec
pusha
mov
lods
mov
pop
out
(bad)
(bad)
call
sbb
xor
cmps
(bad)
mov
into
lock
cmps
pop
sti
push
loope
ja
loope
(bad)
(bad)
(bad)
jmp
cli
scas
jmp
ficom
lods
mov
fiadd
mov
dec
mov
test
call
rcl
scas
ret
es
mov
lock
mov
mov
js
stos
mov
loop
(bad)
(bad)
jmp
in
fldenv
sub
retf
add
jecxz
mov
(bad)
(bad)
(bad)
(bad)
jmp
dec
pop
add
jmp
loop
dec
pushf
sub
pop
in
dec
sub
sbb
loop
(bad)
(bad)
(bad)
jmp
ret
sahf
in
cli
mov
xchg
movs
cmp
mov
sub
jae
pop
push
cmp
dec
jb
jmp
lds
div
jmp
pushf
fisttp
jl
ins
imul
xchg
jg
pop
icebp
xchg
sub
aam
int3
fiadd
out
and
(bad)
dec
test
cld
lahf
inc
xchg
push
jnp
xchg
out
(bad)
call
popf
out
jmp
mov
jbe
jp
or
loope
std
call
bound
xor
pop
mov
jb
or
cmc
std
mov
dec
push
jle
call
mov
cwde
cmp
xchg
out
test
pop
aad
sub
call
jle
shr
mov
xor
or
sub
shl
clc
dec
repnz
dec
add
popa
mov
jae
sbb
(bad)
call
iret
and
mov
fld1
daa
loop
leave
test
cmps
cwde
mov
scas
retf
cmps
sub
(bad)
(bad)
(bad)
call
pop
mov
clc
push
iret
adc
nop
dec
sar
out
cmps
mov
or
call
(bad)
pop
(bad)
cmp
into
jo
push
movs
enter
ss
call
sbb
jnp
fdivrp
inc
cmc
imul
pop
fsub
mov
cmp
mov
push
jns
in
(bad)
call
sbb
into
jmp
or
push
adc
xor
and
icebp
inc
aam
aas
repnz
(bad)
(bad)
fld
mov
jo
jno
mov
movs
or
and
push
push
inc
jmp
ja
push
mov
mov
(bad)
dec
lds
pop
(bad)
leave
jecxz
fsubr
mov
mov
cmp
and
inc
sub
test
cmp
add
pop
push
test
mov
xchg
scas
fidiv
fisubr
stos
movs
sub
hlt
data16
sub
sbb
loop
sub
push
pop
ins
sub
ja
(bad)
push
inc
out
ficomp
das
jecxz
movs
mov
scas
retf
(bad)
fld
and
adc
and
cmp
or
push
mov
repnz
push
sbb
loopne
sar
cmps
lods
call
xor
push
pop
out
and
pop
js
mov
xor
(bad)
inc
jle
sub
mov
(bad)
(bad)
jmp
cmp
shr
add
clc
movs
mov
mov
mul
(bad)
inc
push
pop
jmp
inc
inc
fcmovbe
retf
push
mov
int3
sub
je
jo
adc
pop
(bad)
inc
jb
jmp
push
pop
nop
mov
push
push
push
jmp
clc
aas
ret
or
sub
cmc
fild
call
arpl
or
movs
repnz
inc
(bad)
(bad)
inc
xchg
lods
call
pop
mov
mov
loopne
loope
test
or
mov
sub
mov
cmp
loop
adc
jl
sbb
jmp
push
adc
cli
cli
push
inc
mov
pop
fild
cli
es
push
add
xchg
jle
jb
lods
mov
mov
shl
jmp
mov
mov
sbb
mov
sar
stos
and
enter
jmp
add
jbe
xor
jae
adc
mov
or
(bad)
(bad)
(bad)
push
and
pop
(bad)
push
fisubr
pushf
test
pop
out
call
jg
mov
xlat
inc
mov
cmps
shl
add
adc
or
out
loopne
lods
inc
sub
xchg
outs
clc
(bad)
inc
loop
xlat
inc
and
ja
mov
out
mov
mov
cld
mov
out
inc
call
cmc
mov
fbstp
or
aaa
imul
mov
(bad)
jg
das
vmovapd
sbb
retf
jne
(bad)
push
jae
mov
add
out
into
mov
xchg
add
sub
(bad)
jmp
pop
ds
idiv
out
mov
lea
(bad)
jmp
int3
or
mov
or
not
cmp
imul
jne
in
test
sub
cmp
pop
cmp
mov
mov
or
sub
pop
pop
push
push
(bad)
jmp
mov
and
sbb
jmp
mov
imul
test
dec
xor
clc
call
test
fisub
mov
add
stos
lea
(bad)
dec
mov
cmc
pusha
cmp
xchg
or
(bad)
(bad)
(bad)
inc
jbe
arpl
ret
cmp
jp
and
loopne
movs
retf
imul
(bad)
(bad)
(bad)
js
mov
xchg
xchg
mov
jno
push
sub
hlt
scas
jmp
sbb
(bad)
xchg
dec
call
mov
inc
movs
not
push
mov
inc
sbb
jbe
mov
dec
mov
pop
(bad)
(bad)
jp
add
lods
mov
ficomp
mov
stos
scas
inc
or
dec
movs
xchg
sub
movs
add
jno
xchg
leave
or
(bad)
push
push
mov
pop
lea
dec
(bad)
push
adc
ins
mov
ss
frstor
xchg
cmps
test
push
sahf
popa
jmp
sub
clc
(bad)
dec
inc
dec
int
ret
push
pop
sub
pop
xchg
mov
jg
lock
and
stc
inc
jle
pop
xchg
je
aad
retf
(bad)
dec
and
xor
(bad)
xlat
xchg
retf
dec
jmp
loopne
mov
cwde
cli
mov
cmp
mov
retf
loope
outs
(bad)
call
movs
push
xor
and
push
test
pop
jl
shl
mov
mov
xchg
retf
dec
call
xchg
lods
mov
std
(bad)
dec
mov
jo
cmps
xchg
mov
and
add
jmp
fisttp
in
sbb
int
mov
dec
in
das
cmp
mov
sahf
mov
js
fcomp
sbb
out
push
mov
fcom
inc
adc
inc
push
sar
cmp
daa
push
dec
inc
loope
(bad)
inc
mov
fwait
clc
mov
clc
cwde
call
pop
fadd
in
mov
xchg
clc
(bad)
call
sub
push
inc
xchg
sbb
call
add
(bad)
fidiv
cmp
jmp
adc
ret
test
and
fsub
jmp
sub
or
ins
ins
ret
retf
inc
inc
dec
test
pusha
fild
mov
fsub
push
lods
jl
jbe
ret
jmp
outs
push
into
in
xor
push
dec
stos
and
ds
dec
movs
(bad)
(bad)
(bad)
mov
das
sbb
(bad)
xchg
mov
mov
cld
mov
mov
cmps
(bad)
(bad)
(bad)
jmp
into
adc
add
cmp
(bad)
mov
imul
in
dec
stc
and
jo
out
daa
jp
cmps
jg
cmp
out
and
cmp
repz
test
call
test
xchg
and
mov
mov
mov
popf
pop
and
or
inc
pop
cmp
mov
lock
xchg
mov
mov
sahf
lahf
inc
xchg
scas
mov
adc
in
mov
xor
or
aad
cmp
push
jp
and
test
sbb
cmp
(bad)
fild
ins
mov
jp
mov
(bad)
(bad)
(bad)
(bad)
fstp
mov
aam
jg
push
sbb
in
dec
shl
ja
mov
cdq
adc
sbb
(bad)
dec
in
mov
mov
stos
cmp
mov
pop
mov
imul
dec
pop
ror
sub
inc
xchg
add
xchg
push
imul
(bad)
call
clc
mov
shl
jns
fidivr
movs
rol
cli
clc
inc
pop
cmps
cmps
cwde
clc
loopne
shl
(bad)
(bad)
(bad)
call
push
loop
retf
loop
test
inc
add
popa
and
and
addr16
(bad)
(bad)
(bad)
jmp
std
cs
call
push
mov
out
jno
in
fbld
or
(bad)
cmp
mov
dec
sub
ficomp
or
adc
(bad)
(bad)
dec
add
in
leave
and
(bad)
call
out
sbb
es
or
sbb
(bad)
(bad)
(bad)
(bad)
out
out
das
loopne
std
dec
add
jg
fstp
sub
xchg
cmp
cdq
push
cmp
(bad)
outs
inc
mov
dec
iret
or
jno
xor
scas
(bad)
mov
imul
cs
mov
js
popa
mov
sbb
(bad)
mov
in
clc
mov
and
call
ficomp
and
loop
and
loop
sub
leave
(bad)
(bad)
call
(bad)
jmp
out
sbb
cmp
aas
mov
dec
shr
(bad)
(bad)
(bad)
(bad)
mov
sbb
fsubr
mov
adc
or
mov
or
(bad)
sbb
(bad)
fidivr
sahf
aad
jno
mov
cmp
adc
pop
icebp
(bad)
jg
mov
in
push
repnz
pushf
or
test
sub
mov
(bad)
fstp
pop
or
retf
inc
std
pop
daa
push
sub
(bad)
out
fiadd
mov
push
(bad)
(bad)
jmp
or
add
shl
stos
fsubr
(bad)
test
call
call
mov
mov
ins
jl
out
lea
jp
rcr
iret
push
(bad)
sbb
not
sub
jo
outs
lea
(bad)
inc
int
cli
shl
sbb
xor
cmp
sub
hlt
clc
(bad)
fild
sbb
push
call
and
lds
push
ror
jmp
or
mov
jbe
xor
pop
icebp
call
sar
pop
repnz
imul
(bad)
sub
jo
shl
xchg
stos
inc
sbb
inc
mov
push
sbb
fsin
jg
sbb
call
mov
mov
cli
lock
aas
xlat
sub
sahf
and
test
(bad)
fnstsw
dec
push
cs
push
push
mov
pop
cmp
outs
lock
outs
inc
outs
sub
ins
repnz
and
repz
(bad)
imul
imul
les
pushf
mov
call
imul
je
sti
cmp
inc
aad
mov
(bad)
(bad)
jmp
js
jo
cwde
imul
push
imul
repz
(bad)
jmp
(bad)
ret
or
in
ret
scas
and
cmps
jle
jmp
lahf
mov
(bad)
(bad)
in
inc
sbb
stos
ds
xchg
popf
adc
dec
pop
push
fisttp
dec
mov
in
jg
dec
cld
in
outs
fisub
adc
push
out
dec
mov
xor
scas
and
into
adc
dec
call
push
(bad)
adc
fdivp
push
scas
aaa
ja
sbb
(bad)
push
call
cmp
stos
jp
sbb
imul
sar
or
mov
xor
adc
pop
or
mov
jg
or
jge
call
in
xchg
inc
cli
and
xor
push
lock
mov
cmp
cwde
and
pop
call
pop
(bad)
(bad)
dec
cld
mov
div
loopne
mov
jae
test
dec
jmp
or
(bad)
(bad)
(bad)
mov
loop
fs
cmp
or
jmp
test
mov
movs
push
icebp
xchg
cld
gs
aad
(bad)
call
inc
(bad)
mov
in
setno
sbb
arpl
retf
(bad)
idiv
dec
add
mov
ret
mov
retf
fimul
fwait
(bad)
(bad)
call
scas
cmps
xchg
jl
in
cmp
loopne
push
scas
jg
call
jmp
dec
popf
adc
call
aad
pop
mov
neg
aam
(bad)
(bad)
(bad)
cmp
pushf
jae
fwait
mov
xchg
pop
dec
push
pushf
lock
cli
mov
(bad)
(bad)
(bad)
inc
adc
test
cld
(bad)
sar
jo
aam
pushf
sbb
scas
inc
jmp
out
jecxz
(bad)
(bad)
jmp
je
cmp
mov
scas
fisub
mov
call
jl
xor
(bad)
(bad)
(bad)
mov
mov
push
lea
ror
mov
xor
pop
mov
push
int
or
(bad)
(bad)
(bad)
ds
ds
cmp
daa
sbb
adc
mov
mov
and
xor
(bad)
(bad)
(bad)
(bad)
jnp
mov
pop
push
pop
mov
mov
dec
sub
pop
and
mov
call
stos
cmps
call
pop
dec
sub
test
push
scas
loop
mov
mov
dec
(bad)
(bad)
jmp
sbb
mov
lods
mov
das
or
scas
or
sub
in
mov
cmp
sti
cs
stos
jge
sbb
push
sub
sub
mov
pusha
pop
icebp
(bad)
(bad)
push
jge
mov
xchg
sub
inc
test
xchg
xor
xlat
dec
ins
(bad)
inc
repnz
in
xchg
mov
cmp
pop
ins
shl
push
stos
sbb
out
mov
xor
mov
sub
sbb
mov
(bad)
cmp
add
inc
mov
dec
inc
mov
inc
xchg
cs
mov
loopne
outs
stc
jmp
cli
jmp
pop
sub
retf
jae
sub
xor
sub
mov
pusha
call
cwde
jp
repnz
sar
outs
mov
push
mov
cs
scas
ret
and
cmps
stos
sar
(bad)
dec
test
scas
(bad)
ss
cdq
sub
mov
imul
sub
mov
cmps
pop
pop
or
add
(bad)
inc
test
es
mov
cmp
dec
pop
cmps
sub
(bad)
(bad)
(bad)
out
xchg
lahf
sbb
out
repnz
and
in
dec
and
adc
retf
inc
mov
popf
test
(bad)
push
jmp
sbb
cwde
add
jmp
cmc
pop
mov
fxch
lock
retf
push
fscale
outs
mov
test
test
push
lock
fnsave
sahf
imul
clc
(bad)
jle
cmp
bound
and
mov
ficomp
push
or
jge
mov
mov
pmaxsw
add
retf
(bad)
(bad)
(bad)
jmp
call
mov
cmps
mov
sub
enter
sbb
(bad)
in
ret
enter
mov
xor
xchg
retf
and
dec
xor
sbb
jmp
(bad)
jmp
cmp
fmul
mov
(bad)
call
mov
mov
popf
inc
fdivr
movs
xlat
out
sbb
stos
push
jmp
call
jg
mov
stos
imul
mov
lods
adc
pop
iret
jge
mov
call
mov
dec
sub
mov
mov
mul
push
sub
mov
add
pop
ret
and
sbb
retf
cli
movs
repnz
(bad)
call
(bad)
call
pop
jecxz
dec
fldl2e
mov
and
sub
(bad)
jmp
data16
mov
lds
pop
add
scas
adc
(bad)
jmp
cs
and
fcomp
leave
lods
rcr
mov
hlt
(bad)
(bad)
fdivr
and
scas
std
jns
sub
iret
or
sub
call
inc
adc
mov
retf
add
mov
dec
xor
add
loopne
dec
mov
mov
(bad)
(bad)
(bad)
mov
pop
jge
dec
dec
push
mov
or
in
sbb
push
out
imul
test
(bad)
(bad)
call
outs
jo
std
push
test
and
add
cmp
cmc
xchg
(bad)
jns
sbb
jg
in
jo
push
push
lock
test
nop
push
cmps
mov
adc
adc
(bad)
(bad)
(bad)
fnstcw
daa
loop
mov
pop
(bad)
mov
mov
mov
sub
push
repnz
aam
(bad)
(bad)
dec
test
mov
push
cs
xor
sub
ja
jmp
cmp
sbb
push
or
dec
xchg
cmp
sbb
cmp
mov
push
enter
(bad)
addr16
lahf
retf
jg
cmp
repz
aad
xor
outs
mov
(bad)
(bad)
jmp
sub
jae
mov
adc
fild
mov
shl
div
(bad)
call
xor
fmul
scas
add
jae
mov
pop
xchg
sub
(bad)
(bad)
(bad)
mov
sub
out
mov
jmp
mov
push
fwait
jmp
test
jo
mov
sti
sub
push
mov
leave
dec
cmps
mov
xor
(bad)
mov
and
out
adc
pushf
(bad)
out
push
in
pop
xor
cmc
sub
xor
pop
clc
(bad)
(bad)
(bad)
fmulp
mov
inc
iret
adc
jl
movs
push
mov
mov
lods
cmp
clc
jmp
fist
mov
and
daa
retf
outs
xor
dec
xchg
das
iret
mov
sub
sbb
jno
shl
(bad)
jg
loopne
cwde
mov
jmp
sti
sub
(bad)
sub
push
and
mov
sub
lods
ds
(bad)
call
stos
test
repz
leave
imul
jmp
cli
(bad)
mov
sti
sbb
mov
mov
mov
mov
adc
mov
sub
xchg
aam
test
jb
mov
(bad)
(bad)
(bad)
(bad)
inc
mov
sub
jmp
jp
jp
jl
fild
out
retf
jle
(bad)
(bad)
jmp
test
cmp
imul
xchg
cmp
popa
pop
mov
sub
sbb
sub
mov
push
cmp
inc
movs
test
sahf
aad
jle
or
(bad)
cli
pop
inc
mov
outs
imul
cmp
sbb
push
iret
or
xor
xor
mov
mov
add
mov
aas
mov
(bad)
jmp
ror
iret
inc
imul
dec
pusha
(bad)
jno
iret
(bad)
and
shl
fwait
stos
add
xchg
adc
call
pop
stc
rol
sub
cmp
xchg
scas
mov
cwde
push
in
(bad)
(bad)
sub
mov
and
fwait
bound
cs
push
ja
movups
(bad)
(bad)
mov
or
aas
cmp
lock
ds
mov
div
das
clc
fild
fist
ss
xor
dec
cli
ins
and
mov
cli
sbb
out
js
aas
cmps
fisttp
call
or
cmps
adc
sub
lods
pop
mov
push
xlat
sbb
sub
call
(bad)
fbld
mov
jmp
mov
xor
xchg
(bad)
(bad)
(bad)
dec
cmp
or
retf
jns
fwait
movs
jl
sub
test
(bad)
inc
mov
sbb
test
out
repz
pop
pop
cld
pop
or
push
imul
inc
xchg
jns
test
xor
(bad)
(bad)
(bad)
out
sti
push
test
xlat
or
or
in
cmc
cs
ins
sub
xchg
(bad)
(bad)
(bad)
push
mov
push
test
lods
mov
sub
sar
(bad)
(bad)
dec
or
jl
add
daa
mov
ror
out
sub
pusha
imul
adc
jg
(bad)
fnstsw
pushf
ss
xchg
scas
stos
mov
mov
movs
(bad)
es
(bad)
in
jp
lahf
and
(bad)
(bad)
dec
cmps
lock
jp
shr
dec
cmp
leave
aad
mov
mov
(bad)
jmp
inc
shl
xchg
iret
clc
pop
mov
xchg
and
cmp
inc
add
or
(bad)
or
mov
loop
cmp
ja
std
clc
cmp
les
adc
mov
aad
(bad)
call
in
mov
pop
ror
enter
mov
cli
sub
push
stc
jge
outs
out
mov
cmp
or
or
jmp
mov
mov
fcmovnbe
pop
cmc
or
sub
pop
pop
jae
dec
lock
sub
cli
mov
hlt
les
dec
stos
pop
inc
(bad)
aam
dec
inc
adc
dec
cli
popa
mov
jecxz
cmps
(bad)
mov
outs
and
int3
cmp
sub
bound
mov
pop
hlt
mov
inc
xor
and
dec
(bad)
mov
stos
mov
xchg
(bad)
(bad)
jmp
dec
jl
cli
xchg
and
loop
lods
mov
inc
sub
sahf
std
test
mov
cli
jno
dec
sbb
push
cmp
mov
cs
push
mov
mov
test
ret
repz
imul
fdivr
jmp
enter
aas
les
das
or
enter
cld
(bad)
(bad)
cmp
ret
cmps
ret
fmul
mov
xchg
in
imul
adc
cmps
lea
retf
(bad)
(bad)
mov
jb
pop
call
ret
lds
jns
in
std
sbb
inc
movs
dec
jl
and
(bad)
mov
sbb
jmp
xchg
ficom
dec
mov
mov
(bad)
inc
movhps
test
add
test
mov
push
iret
pop
fcomp
scas
cli
(bad)
push
enter
adc
jle
fdivr
shl
mov
jecxz
std
(bad)
(bad)
jmp
cmp
ret
pop
in
xchg
ret
pop
and
cwde
out
and
lods
or
cmp
(bad)
push
call
sub
cmp
jl
mov
mov
jmp
(bad)
add
(bad)
(bad)
push
stos
add
lods
and
mov
sub
push
fimul
mov
(bad)
(bad)
jmp
lods
inc
cdq
call
pop
jmp
into
sbb
dec
aas
das
pop
jg
(bad)
jg
jmp
ret
xlat
fsubr
adc
andnps
or
dec
xchg
fist
(bad)
(bad)
jmp
sbb
mov
(bad)
(bad)
mov
cli
test
or
xchg
cmp
dec
call
push
sub
mov
aam
rcl
push
xor
inc
jmp
ss
xchg
sub
cli
mov
prefetcht2
cmp
mov
rcl
arpl
(bad)
(bad)
mov
xor
fnstsw
sbb
(bad)
out
push
int3
mov
aas
or
or
leave
loope
out
push
leave
mov
pop
gs
dec
push
iret
add
push
pop
push
scas
cmps
push
enter
movs
test
lock
ins
(bad)
out
mov
call
xchg
jl
pop
mov
jns
dec
pop
idiv
stos
into
adc
out
lea
enter
sub
inc
pusha
mov
cld
test
fisub
adc
inc
(bad)
mov
dec
(bad)
mov
mov
mov
jmp
jp
or
fst
mov
or
sbb
jbe
mov
mov
scas
push
and
outs
stc
dec
out
mov
add
jmp
push
jb
call
js
push
gs
repnz
cmp
jmp
sub
mov
push
mov
jns
xor
xor
jecxz
(bad)
in
pop
inc
pushf
jecxz
mov
add
or
je
dec
(bad)
jg
cmp
cs
(bad)
call
retf
popf
ror
mov
in
or
sub
call
(bad)
(bad)
(bad)
jmp
cli
jmp
sbb
call
in
mov
or
stos
cwde
popa
into
stos
(bad)
call
pop
push
dec
xchg
int3
mov
(bad)
in
lods
xchg
(bad)
push
cli
sbb
pop
call
xchg
and
jp
sub
(bad)
jmp
sbb
mov
pop
or
sahf
sub
push
retf
test
das
xchg
cs
cdq
(bad)
(bad)
(bad)
push
or
or
lahf
adc
sbb
lods
sub
icebp
js
cmps
stos
push
ds
cmp
mov
pusha
jl
out
clc
loop
xor
fwait
push
icebp
(bad)
(bad)
mov
cmc
repz
xor
add
or
sub
ins
dec
(bad)
(bad)
(bad)
(bad)
fsub
adc
xchg
stos
into
mov
adc
pop
mov
(bad)
stos
push
mov
cmc
dec
call
scas
ffreep
mov
imul
inc
sub
(bad)
movs
scas
in
retf
lock
stos
adc
sahf
jp
mov
adc
dec
jle
iret
sbb
mov
shr
(bad)
(bad)
jg
mov
arpl
sbb
sub
mov
push
retf
ja
popa
adc
hlt
jmp
dec
mov
mov
(bad)
jmp
call
pusha
aad
inc
sub
cmp
test
cdq
adc
cmp
icebp
jmp
adc
js
imul
mov
pop
xchg
out
stos
stc
mov
inc
or
adc
pop
(bad)
push
sbb
(bad)
jmp
rol
sub
inc
shl
sub
(bad)
in
jmp
mov
sub
mov
(bad)
mov
inc
fld
pop
rcl
retf
xchg
(bad)
mov
mov
sbb
call
push
pop
inc
mov
stos
ins
shl
out
into
xor
sub
push
dec
xchg
xchg
sbb
push
mov
or
(bad)
(bad)
js
mov
in
call
mov
mov
mov
popa
dec
mov
pop
stos
leave
or
jo
pop
mov
ins
jmp
(bad)
(bad)
call
repnz
mov
or
jb
xor
aad
dec
push
dec
ss
(bad)
inc
mov
scas
push
mov
fwait
stos
cs
sbb
sub
(bad)
(bad)
mov
adc
push
mov
sbb
ins
nop
fsub
movs
add
(bad)
inc
jl
push
adc
sub
enter
xchg
loop
hlt
ds
mov
mov
mov
retf
mov
cvtps2pd
inc
xchg
adc
pop
bound
lea
(bad)
(bad)
jg
cmp
jmp
lods
das
and
sub
mov
mov
jmp
mov
or
stos
mov
push
je
movs
jl
iret
popa
sbb
jg
movs
jmp
or
mov
xlat
fimul
inc
sbb
jb
(bad)
(bad)
dec
push
into
sbb
std
(bad)
into
adc
adc
test
cli
sub
popa
out
cmps
cmp
cld
push
mov
ins
mov
mov
dec
mov
add
mov
arpl
dec
mov
pop
rol
scas
and
cdq
bound
mov
iret
adc
adc
bound
jno
retf
test
inc
mov
xchg
js
test
daa
sbb
(bad)
loop
mov
cmc
mov
int3
jp
sbb
(bad)
(bad)
jmp
or
pop
pushf
sti
mov
or
dec
or
or
loopne
push
mov
ins
xor
bound
mov
fs
jg
rcl
adc
test
(bad)
jle
mov
fwait
ins
std
dec
repnz
sub
push
mov
adc
(bad)
mov
or
out
mov
loop
ins
ins
arpl
mov
clc
in
mov
(bad)
(bad)
jmp
cmp
shr
push
and
sub
std
cmp
push
les
jb
ss
push
mov
lahf
ret
inc
mov
xchg
and
sbb
sbb
test
mov
outs
mov
mov
fs
inc
sub
dec
or
dec
nop
test
(bad)
mov
inc
ja
lods
xor
sbb
movs
cmps
dec
(bad)
mov
(bad)
sub
ret
(bad)
ror
mov
outs
clc
dec
dec
test
das
mov
or
inc
loop
dec
or
(bad)
jmp
out
mov
add
cmp
in
fcmove
scas
and
nop
stos
adc
das
leave
ins
cmp
div
test
mov
mov
ins
retf
jmp
jbe
ret
jo
scas
retf
outs
push
inc
sbb
cmp
loopne
inc
cs
push
in
retf
(bad)
(bad)
call
pop
jo
pop
popf
call
lods
pop
mov
mov
es
mov
mov
mov
iret
lahf
pop
jmp
xchg
out
outs
push
std
call
mov
jp
rol
mov
fisub
retf
(bad)
dec
xchg
inc
and
das
shrd
dec
sbb
jae
(bad)
(bad)
call
jns
cmps
test
(bad)
fidiv
mov
sbb
mov
scas
aam
sar
(bad)
(bad)
cli
movs
jno
and
adc
test
sbb
(bad)
mov
dec
add
(bad)
(bad)
jg
fimul
add
push
in
pop
daa
mov
out
retf
fcomp
sahf
movs
cli
fcomip
call
mov
xor
(bad)
(bad)
call
stos
sbb
addr16
mov
pop
sti
jb
mov
mov
test
mov
call
ja
jmp
out
mov
mov
sub
adc
sbb
cli
call
scas
das
js
cmps
(bad)
(bad)
dec
movs
push
iret
xor
hlt
xor
enter
mov
shr
and
call
mov
out
mov
call
(bad)
inc
xchg
outs
outs
and
cld
in
xor
ja
sar
shr
(bad)
dec
sub
mov
push
mov
(bad)
(bad)
push
(bad)
(bad)
pop
or
mov
shl
mov
es
mov
(bad)
(bad)
(bad)
jmp
or
jl
jo
mov
dec
sahf
int3
dec
(bad)
mov
sbb
(bad)
push
outs
scas
xchg
xor
retf
into
jb
call
std
das
xchg
xchg
adc
shr
push
or
cmp
add
pop
imul
sbb
mov
aaa
mov
jg
mov
mov
jmp
(bad)
(bad)
(bad)
jmp
fild
in
retf
out
sbb
jmp
mov
push
push
repnz
mov
xchg
push
(bad)
dec
aam
stos
dec
test
ins
jae
std
jmp
inc
mov
mov
adc
aas
out
ins
ja
movs
pop
mov
dec
mov
nop
sub
sbb
fsubr
adc
repz
cmp
pusha
out
(bad)
(bad)
call
pop
addr16
pop
out
loopne
jne
test
outs
test
cmp
ins
sub
scas
(bad)
(bad)
call
iret
inc
push
rcl
dec
xchg
mov
in
xchg
jne
mov
(bad)
call
push
stos
sub
dec
daa
sub
outs
ror
mov
test
xor
stos
into
popa
scas
pushf
hlt
out
jmp
imul
sbb
or
aas
(bad)
(bad)
(bad)
(bad)
cli
dec
aam
sahf
dec
dec
sbb
es
test
push
mov
xchg
popf
jmp
test
(bad)
(bad)
(bad)
dec
std
mov
outs
jno
sub
pop
mov
push
inc
adc
and
mov
add
loopne
xchg
lods
std
pop
mov
dec
ins
pusha
std
(bad)
std
cli
es
(bad)
mov
mov
out
xor
outs
cdq
je
scas
adc
je
jp
test
(bad)
(bad)
mov
push
adc
fs
adc
or
jmp
test
dec
mov
pop
push
xchg
sub
push
mov
iret
mov
lock
mov
or
popf
sbb
and
call
jmp
adc
(bad)
out
cwde
inc
xor
sahf
pop
jmp
(bad)
dec
and
push
cmp
(bad)
(bad)
jmp
cmp
cmps
or
(bad)
jmp
rcr
push
pusha
fbld
out
cs
fisttp
mov
call
loopne
lods
push
mov
repz
nop
dec
or
pop
(bad)
(bad)
call
push
mov
push
in
lahf
mov
ins
icebp
jp
cmp
out
xchg
fldenv
fild
push
xor
dec
mov
push
pop
leave
les
(bad)
call
xor
or
das
cs
int
adc
(bad)
hlt
call
push
sub
ss
nop
cmp
cmp
xchg
mov
dec
js
xlat
mov
std
cmp
xchg
pop
sub
mov
adc
fwait
mov
test
loop
call
lds
pop
xchg
push
jne
mov
jns
(bad)
(bad)
fild
loopne
fmul
mov
adc
clc
lods
pop
xchg
(bad)
(bad)
push
xor
xchg
out
das
cs
sbb
mov
inc
push
retf
(bad)
(bad)
(bad)
(bad)
dec
jle
or
in
xchg
loopne
cmp
aam
outs
push
(bad)
cmps
icebp
pop
sub
outs
pusha
outs
and
pop
adc
retf
dec
mov
imul
shr
and
xchg
lds
out
sub
imul
dec
and
or
pop
sbb
(bad)
(bad)
call
cld
push
test
pop
(bad)
lods
fcom
pop
pop
es
ret
push
stos
sbb
les
jge
pop
dec
adc
jl
pop
outs
cmp
leave
popa
mov
clc
inc
push
in
mov
push
or
(bad)
(bad)
(bad)
jmp
stos
and
sar
test
mov
fcom
ins
xlat
out
stos
call
(bad)
(bad)
(bad)
inc
scas
mov
jnp
push
xchg
mov
out
out
repnz
cld
test
cmp
(bad)
jmp
outs
pop
pushf
aaa
push
ror
mov
pop
movs
jbe
mov
in
(bad)
mov
outs
sbb
in
rcl
mov
shl
test
es
dec
scas
and
xchg
jmp
mov
mov
fisub
mov
daa
sub
aaa
mov
adc
pop
dec
icebp
pusha
push
xor
fwait
loop
test
adc
hlt
jecxz
(bad)
jg
loope
out
shr
ds
xchg
retf
shl
js
ret
test
ins
std
sub
lahf
retf
lods
ss
and
sbb
call
xor
mov
imul
xlat
fs
icebp
xchg
sbb
(bad)
inc
mov
lock
cld
cmps
cwde
and
sbb
jl
adc
data16
cdq
push
jecxz
(bad)
(bad)
(bad)
call
mov
mov
pop
jb
leave
cmps
jb
ds
push
ficom
push
(bad)
dec
(bad)
and
xchg
adc
adc
pusha
dec
pop
test
into
fst
imul
(bad)
inc
dec
fstp
xor
mov
xchg
add
into
sub
fiadd
mov
cmp
push
cli
jmp
xor
ret
fdivr
cmp
jle
xor
pop
mov
jmp
mov
lea
xor
and
loope
(bad)
fild
lods
and
add
inc
scas
cwde
mov
jmp
or
(bad)
jmp
cmps
push
clc
shr
push
or
leave
dec
or
sbb
test
push
or
jae
stos
sbb
mov
lahf
pop
and
(bad)
jmp
popa
std
std
mov
push
out
popa
les
add
jg
outs
sti
retf
out
mov
cld
enter
dec
iret
push
jnp
clc
cmp
mov
mov
lea
mov
mov
enter
(bad)
in
mov
mov
mov
mov
inc
xchg
sar
push
ror
in
call
inc
sub
mov
lock
ss
fcomip
mov
jg
cwde
xchg
mov
and
(bad)
(bad)
call
repz
push
sbb
fimul
inc
mov
(bad)
sub
sar
dec
stos
xlat
sub
inc
sub
(bad)
call
fwait
jo
cmp
mov
jmp
xchg
jle
push
mov
call
xchg
inc
(bad)
(bad)
(bad)
jmp
movs
and
sub
jbe
cli
lods
outs
gs
into
loope
push
sub
jecxz
call
pusha
jnp
sbb
jecxz
mov
lds
jg
pop
cmps
mov
pop
test
jo
push
pop
(bad)
(bad)
(bad)
call
sbb
das
lods
cli
mov
sar
cs
dec
lock
pop
mov
std
jmp
pop
sub
inc
scas
les
loop
test
(bad)
jmp
test
dec
sar
das
shl
(bad)
sub
cmps
or
sbb
nop
or
call
cld
call
std
push
push
pop
out
xchg
das
popa
(bad)
ins
inc
iret
lods
mov
mov
cwde
(bad)
inc
push
inc
fist
addr16
scas
pusha
lods
mov
ss
vpsubusw
and
(bad)
fcomip
inc
daa
mov
clc
fild
(bad)
xchg
and
mov
dec
xchg
jg
lods
call
sub
into
mov
dec
call
pop
jmp
push
jns
dec
cmp
xchg
and
pop
mov
shr
push
add
sbb
(bad)
sbb
movs
call
jns
sar
jmp
dec
imul
call
jp
pushf
xor
(bad)
mov
sub
xchg
jmp
push
cmp
cmp
jmp
pop
cmp
adc
outs
fnstcw
bound
mov
jmp
xor
sbb
stos
out
add
inc
retf
lock
dec
sub
(bad)
(bad)
(bad)
dec
jmp
add
dec
add
mov
mov
jne
pop
sbb
(bad)
repnz
(bad)
(bad)
dec
jns
shr
ret
mov
jmp
mov
mov
mov
stos
pop
(bad)
(bad)
(bad)
call
jae
mov
inc
lods
jp
xchg
xor
dec
mov
stos
adc
out
cmp
fucomp
push
jmp
(bad)
loope
fucom
mov
cmp
ret
mov
aaa
cs
call
mov
jp
mov
ds
jp
or
in
xchg
in
mov
push
call
xchg
xor
mov
clc
out
stos
xchg
dec
sbb
outs
dec
sub
adc
inc
push
iret
cmps
outs
pop
sub
jg
jmp
aad
fisubr
sbb
mov
mov
sub
mov
pop
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jge
mov
mov
mov
fld
int3
outs
fist
fisubr
call
daa
jmp
std
aaa
mov
and
stos
xchg
fwait
sub
ja
stos
cli
(bad)
mov
test
iret
xchg
shrd
ror
mov
stos
pop
clc
add
hlt
test
jb
jnp
(bad)
out
add
cli
push
and
mov
bound
cmp
cld
cmp
dec
or
dec
popf
xor
(bad)
call
dec
push
xchg
pop
push
pop
repnz
push
and
mov
fwait
jle
dec
test
mov
arpl
pushf
sub
jle
retf
jmp
mov
lods
shr
fadd
(bad)
dec
xor
fsubr
into
bound
aam
inc
inc
clc
(bad)
(bad)
push
test
pop
xchg
mov
mov
(bad)
hlt
scas
add
test
(bad)
loopne
call
mov
leave
pop
cs
xor
scas
push
mov
outs
mov
jmp
mov
add
(bad)
call
lock
cmp
scas
add
daa
sbb
daa
mov
cld
push
jno
imul
test
ins
push
adc
shl
(bad)
jg
cwde
add
popa
ins
cwde
(bad)
and
and
imul
(bad)
call
(bad)
or
shr
test
gs
fwait
test
scas
sub
mov
push
jg
mov
iret
jmp
sub
xabort
hlt
ins
adc
int3
pop
loope
or
push
mov
sti
test
xchg
retf
cmc
stc
outs
cmp
sar
(bad)
(bad)
jmp
ins
outs
pop
call
push
push
shr
mov
add
mov
(bad)
jmp
outs
xlat
lea
pop
das
mov
stos
popa
cwde
mov
movs
jp
das
jp
cwde
loopne
mov
dec
and
jb
(bad)
call
hlt
mov
inc
cmp
mov
pop
mov
inc
rcr
dec
mov
(bad)
push
cs
repnz
pop
pushf
pop
mov
add
mov
cmps
pop
and
pop
xchg
dec
pop
jp
inc
xchg
push
jecxz
adc
fiadd
mov
test
pop
mov
and
or
mov
mov
xlat
mov
rcr
mov
jmp
add
fbstp
jmp
pop
iret
sbb
das
mov
out
cmp
lock
cmp
lods
and
cmp
lods
scas
sbb
mov
scas
ftst
dec
fisub
push
sbb
je
sub
dec
scas
dec
(bad)
(bad)
(bad)
inc
sbb
lods
in
jmp
add
and
gs
scas
cmp
jo
test
test
inc
xchg
jnp
mov
ins
bound
dec
cli
call
test
cwde
pop
repnz
xchg
(bad)
or
push
mov
in
dec
retf
xchg
and
cmps
(bad)
(bad)
(bad)
(bad)
dec
jmp
call
jnp
nop
or
adc
lahf
dec
jns
loope
cmps
sub
outs
scas
nop
test
or
mov
test
or
pop
fs
inc
lahf
jmp
push
xchg
adc
sbb
(bad)
(bad)
jmp
into
push
mov
imul
mov
xor
push
mov
jmp
in
dec
mov
pop
(bad)
sbb
into
or
loopne
inc
jecxz
sub
or
das
pusha
pop
xor
and
and
add
(bad)
inc
mov
lea
pop
sbb
int3
jne
out
movs
cmp
inc
push
and
push
or
mov
dec
or
(bad)
(bad)
(bad)
mov
aas
loopne
cmovge
cmps
stos
leave
mov
push
mov
mov
mov
jmp
in
test
pop
icebp
(bad)
dec
adc
arpl
fisub
dec
jns
icebp
lods
gs
lods
pop
fistp
shl
test
lea
cmc
mov
test
jmp
pop
(bad)
(bad)
dec
(bad)
imul
in
mov
mov
mov
xor
movs
fs
push
jmp
lahf
and
scas
arpl
jmp
scas
xchg
loop
push
mov
push
push
stc
fcos
aad
hlt
push
pop
jmp
lods
call
(bad)
shr
jle
sub
(bad)
call
jbe
ficomp
mov
xchg
jle
add
dec
xor
mov
(bad)
(bad)
jmp
movs
in
ror
mov
loop
arpl
xchg
retf
nop
dec
and
cmp
(bad)
fcomip
jb
shl
cmps
int3
in
push
out
lahf
call
inc
idiv
(bad)
dec
pop
or
mov
sbb
mov
retfw
adc
icebp
mov
mov
call
mov
cmp
cmp
sahf
mov
mov
(bad)
(bad)
call
cmps
mov
test
xchg
mov
icebp
jle
xchg
imul
clc
arpl
jg
hlt
or
enter
into
mov
fcmovbe
xor
pop
stos
fdivr
pop
inc
dec
dec
cdq
mov
mov
pop
movs
cld
fcomip
cmps
and
pushf
mov
mov
fwait
mov
imul
or
leave
sbb
in
call
cmps
pop
cdq
cli
xchg
leave
pop
push
mov
push
pop
mov
iret
or
clc
dec
iret
out
add
pop
sub
mov
repnz
adc
add
jnp
imul
ror
(bad)
(bad)
(bad)
dec
scas
mov
sub
not
gs
mov
int3
dec
cld
fistp
clc
fbld
jno
addr16
pop
jg
retf
mov
fmul
cmp
add
out
aas
cli
cmp
xor
push
lea
fimul
cmps
fnsave
cli
sub
mov
icebp
call
cmp
sahf
mov
push
std
call
test
sub
sbb
dec
push
mov
push
cld
jmp
add
icebp
push
pop
in
sub
lods
es
push
pop
icebp
mov
jle
pop
lods
adc
fsubrp
test
arpl
neg
push
imul
mov
dec
jmp
mov
pop
or
jmp
mov
push
mov
push
imul
adc
clc
pop
push
mov
dec
push
lods
jmp
push
maxps
push
pop
pusha
addr16
push
in
ror
cmps
pop
test
lea
sbb
in
mov
leave
pop
lods
xchg
icebp
sub
shr
and
aaa
cld
clc
pop
and
aam
or
cs
or
dec
movs
adc
push
jb
(bad)
ins
pop
int3
mov
and
fild
ret
jo
cwde
loop
adc
out
mov
(bad)
jg
push
movs
fstp
stos
and
(bad)
mov
pop
mov
ret
ret
add
push
mov
aas
push
imul
cmps
mov
jmp
enter
pop
mov
scas
jge
jmp
test
adc
sti
sahf
out
stos
call
cs
mov
mov
inc
ret
pop
bound
(bad)
fisttp
retf
mov
cmc
mov
aad
and
out
lahf
hlt
push
loope
(bad)
mov
xor
aaa
mov
xor
(bad)
(bad)
(bad)
fst
ds
push
fmulp
fwait
adc
sti
mov
push
int3
jg
test
stos
add
jl
(bad)
inc
mov
mov
lea
or
adc
add
call
into
mov
aaa
jbe
jecxz
dec
mov
push
repnz
lods
les
cmp
idiv
(bad)
(bad)
jmp
das
in
cmp
mov
pop
push
push
into
scas
xor
add
das
mov
or
in
jmp
rol
js
pop
lock
xor
out
sub
mov
nop
pop
push
(bad)
out
clc
jmp
out
and
push
or
pop
inc
dec
clc
(bad)
(bad)
push
pop
and
cmp
mov
push
cmp
test
push
and
retf
add
xlat
push
loop
outs
fcom
leave
or
fsubr
pushf
ins
cmp
fimul
jg
jmp
or
jbe
popa
inc
fisttp
sbb
call
(bad)
call
xchg
mov
pop
iret
popf
scas
mov
jb
ficom
cmp
clc
jmp
call
outs
ds
mov
(bad)
(bad)
(bad)
(bad)
aas
into
in
cmp
iret
es
pop
retf
jmp
cld
ins
test
mov
or
(bad)
(bad)
cmp
cdq
lahf
scas
add
add
out
mov
in
adc
mov
call
inc
aaa
jge
test
or
xor
pop
jmp
push
daa
push
mov
inc
adc
mov
movs
jge
cdq
xchg
cmps
loop
fstp
cmp
mov
cwde
or
push
les
sub
mov
pop
mov
mov
(bad)
(bad)
(bad)
mov
iret
pop
cmp
dec
pop
shl
xchg
lea
icebp
into
out
dec
mov
cmp
icebp
sub
sub
(bad)
call
mov
mov
mov
mov
in
jnp
mov
(bad)
out
shl
or
xor
push
xor
daa
(bad)
lea
dec
dec
jnp
and
stos
(bad)
dec
xchg
and
scas
ds
pop
mov
cmp
xchg
jmp
jmp
add
aad
jmp
in
push
push
lods
scas
mov
mov
lods
cmp
mov
sub
stos
call
rol
dec
and
(bad)
(bad)
(bad)
cmp
jmp
mov
lods
mov
inc
jmp
fbstp
mov
dec
fwait
sub
test
imul
repnz
pushf
sub
mov
pop
and
and
mov
loope
xor
cmp
sub
ret
loope
mov
mov
(bad)
jmp
fiadd
pop
clc
shr
je
in
cld
jno
loope
jmp
pop
push
lock
mov
out
cld
(bad)
mov
cmps
cwde
push
(bad)
push
and
test
cli
imul
mov
(bad)
leave
stos
pop
sbb
cmps
mov
nop
inc
aaa
or
aaa
bound
je
mov
int3
sub
or
cmp
das
outs
cmps
sub
(bad)
(bad)
push
in
cmp
std
repz
retf
sub
cwde
lock
bound
arpl
(bad)
(bad)
push
xchg
cmc
ja
or
test
movs
pushf
mov
cmp
sub
push
inc
pop
jmp
xchg
(bad)
fsubr
mov
mov
in
lods
repz
call
mov
push
test
in
scas
adc
loope
jmp
rol
mov
dec
cs
mov
jmp
(bad)
enter
cmps
ds
inc
jbe
mov
icebp
mov
sahf
mov
call
(bad)
jmp
int3
add
(bad)
cld
or
xchg
adc
push
call
fbld
adc
cli
mov
adc
(bad)
in
fsub
test
retf
dec
retf
(bad)
fdiv
sub
or
cmc
sub
mov
sbb
ret
retf
enter
pop
sub
adc
(bad)
(bad)
(bad)
dec
cmp
inc
call
int
mov
stos
jbe
sub
retf
or
jae
push
call
lods
lods
xchg
mov
movs
sub
test
imul
stos
dec
into
repnz
imul
(bad)
(bad)
(bad)
inc
xchg
nop
ds
sub
dec
call
daa
mov
loop
out
mov
jl
(bad)
out
clc
addr16
inc
and
sub
mov
jmp
call
xchg
fsubr
sub
ins
movs
lods
adc
or
sub
iret
xor
mov
gs
into
retf
jmp
mov
xchg
adc
in
mov
out
push
mov
push
loope
mov
sbb
xchg
mov
xor
call
test
jp
and
xchg
mov
jl
mov
mov
into
stos
pop
call
in
xor
aam
inc
(bad)
loop
lea
dec
loope
and
bound
mov
and
cmp
jmp
mov
sbb
in
dec
fsubr
add
lods
(bad)
push
mov
mov
add
jo
jecxz
retf
loop
sub
call
mov
jl
mov
stos
sub
mov
mov
inc
sub
stc
ds
push
sbb
out
fcomp
mov
mov
jns
lahf
mov
(bad)
mov
sub
lahf
lahf
mov
std
test
mov
xor
pop
pop
mov
in
or
push
jg
pop
pop
cdq
ror
test
(bad)
(bad)
dec
ss
sub
xor
jmp
cmps
cld
movs
fimul
js
lock
(bad)
(bad)
inc
shr
shl
add
jl
cmp
fisubr
or
push
(bad)
jg
jg
jmp
jb
cmc
push
push
jmp
cmp
cmp
jecxz
int3
sub
call
call
repnz
jb
pop
mov
sar
and
sahf
sbb
push
and
loop
cmp
imul
(bad)
(bad)
jg
sub
stc
cmp
pop
sub
pop
repnz
loope
mov
pop
(bad)
call
fidivr
mov
mov
jle
test
js
cwde
into
or
popf
push
cs
push
sti
sub
push
jnp
lahf
pop
pop
aaa
jb
fisub
add
inc
jmp
sbb
sar
mov
xor
inc
sub
lahf
sub
jb
mov
(bad)
cmp
mov
push
(bad)
mov
das
shl
inc
repnz
in
cmc
daa
mov
xor
mov
pop
stos
sbb
jmp
idiv
(bad)
jg
jae
loopne
xchg
mov
add
cmp
loopne
cmp
sub
push
(bad)
fbld
pop
sub
outs
sahf
mov
jno
(bad)
int
sub
(bad)
(bad)
(bad)
cmp
adc
std
aas
int
add
loopne
aas
das
push
mov
or
test
stos
int3
fbstp
cmp
(bad)
(bad)
(bad)
dec
cmps
sbb
(bad)
jb
dec
adc
movs
push
push
shl
add
and
and
mov
ja
mov
sbb
stos
and
inc
(bad)
jg
dec
iret
push
mov
cdq
gs
lock
lds
call
(bad)
clc
test
in
jmp
dec
scas
fadd
dec
mov
dec
dec
push
xlat
add
adc
(bad)
movs
int
pop
pop
xchg
ret
cmp
aaa
or
mov
test
(bad)
(bad)
(bad)
push
sbb
pop
pop
and
hlt
sub
cmps
call
arpl
pushf
mov
xor
or
test
imul
fimul
jmp
movs
in
cmps
stos
imul
lock
mov
sub
mov
mov
and
and
fldcw
add
ret
mov
cmp
test
(bad)
dec
xchg
jl
pop
inc
scas
addr16
sub
push
add
or
push
cmps
out
sbb
pop
iret
aad
rol
loop
jmp
push
ins
add
(bad)
call
mov
jmp
sub
out
scas
cmps
test
push
lahf
push
test
arpl
sti
pusha
add
out
(bad)
btc
lds
push
and
mov
cld
fwait
sub
(bad)
std
dec
imul
inc
push
loopne
test
xchg
inc
adc
fwait
dec
sub
push
add
scas
pop
ror
xor
push
pop
dec
add
sbb
ins
and
ror
mov
mov
push
jmp
inc
cmp
jno
fiadd
push
cmp
sub
(bad)
xor
(bad)
mov
dec
cmp
movs
leave
push
cld
(bad)
sbb
sbb
sbb
pop
out
adc
sar
dec
test
jbe
(bad)
stc
retf
push
push
test
std
ja
sbb
loopne
mov
mov
enter
mov
ja
add
pusha
dec
pop
pop
inc
mov
scas
push
and
or
iret
mov
cmps
lods
pop
xor
sahf
rcr
sub
aad
(bad)
dec
xchg
js
fisub
arpl
xchg
mov
scas
cli
jmp
clc
xor
(bad)
test
aad
scas
sbb
stos
scas
adc
dec
cli
inc
cli
mov
(bad)
outs
loopne
ss
ror
jmp
mov
sub
sbb
rol
mov
add
retf
xchg
mov
std
ins
retf
lods
inc
pop
xor
fisttp
test
add
dec
mov
cmp
cmp
push
ins
jg
(bad)
(bad)
js
fist
repnz
pop
sub
fcomp
ficomp
mov
mov
nop
fwait
cmp
test
test
movs
pop
jmp
fimul
push
mov
fs
pop
dec
in
pop
or
(bad)
(bad)
fistp
cmp
js
clc
cli
dec
ret
or
sbb
xor
sahf
or
push
(bad)
mov
lods
push
jnp
mov
mov
(bad)
(bad)
mov
outs
retf
(bad)
dec
sub
or
in
(bad)
(bad)
(bad)
push
xchg
fwait
dec
stos
popa
fist
scas
xor
xor
adc
icebp
icebp
add
lds
push
pop
fwait
mov
pop
popf
push
mov
mov
ins
pop
pop
retf
mov
xchg
inc
out
stos
push
push
test
adc
jmp
sub
mov
pop
in
(bad)
(bad)
call
pop
xor
out
adc
pop
mov
and
push
jmp
or
stc
mov
(bad)
(bad)
(bad)
fld
sbb
push
mov
xor
push
ds
retf
dec
mov
xor
xor
lahf
add
in
dec
pop
sub
int3
dec
jmp
dec
ret
jle
mov
cmp
inc
inc
mov
pop
cmp
retf
(bad)
(bad)
inc
retf
jmp
mov
push
mov
imul
popa
lods
call
fcomip
xchg
xchg
mov
cmp
loope
ins
adc
stc
mov
mov
adc
cmc
dec
lock
shl
sbb
xchg
retf
ret
(bad)
(bad)
jg
xchg
(bad)
scas
or
test
inc
jmp
bts
(bad)
(bad)
(bad)
call
pop
ins
sub
fild
dec
cwde
pop
sbb
std
cli
adc
adc
jmp
loopne
or
fadd
imul
push
nop
rcl
mov
(bad)
mov
movs
shr
in
call
scas
adc
mov
stc
inc
mov
xlat
loop
fcomp
mov
call
dec
scas
xchg
scas
mov
ret
lds
sub
adc
out
lock
adc
repnz
pushf
je
jo
fisttp
sub
adc
sub
(bad)
and
push
pop
popa
cld
call
xor
push
lahf
fs
aam
repnz
lahf
ins
sbb
(bad)
jg
je
enter
call
ins
fimul
jne
popf
mov
push
jge
push
push
fcomip
dec
jb
mov
pusha
xchg
fscale
cs
out
mov
iret
addr16
mov
cmp
mov
(bad)
(bad)
call
dec
outs
out
jbe
or
popf
addr16
into
or
cmp
inc
lahf
movs
(bad)
(bad)
(bad)
jmp
scas
xor
jno
mov
popa
push
int3
dec
mul
(bad)
lahf
jo
scas
mov
es
(bad)
(bad)
call
mov
rol
sti
jmp
mov
sbb
or
(bad)
inc
cld
cmp
leave
and
lock
pop
aam
movs
repnz
mov
adc
call
xchg
gs
xchg
sub
test
dec
add
pop
and
(bad)
(bad)
jmp
dec
sbb
jb
fdivr
push
sub
push
mov
in
mov
(bad)
(bad)
cmp
(bad)
dec
lock
in
push
cpuid
popf
mov
jmp
out
sti
sub
retf
or
cmp
fcomp
jne
sahf
jle
cmps
in
add
in
std
ja
or
shr
add
sbb
sar
jmp
cli
(bad)
mov
xchg
(bad)
in
jno
cdq
in
jae
movs
xor
fnstcw
push
(bad)
dec
adc
jmp
sbb
int3
aaa
cmps
mov
mov
mov
inc
out
add
dec
sub
jmp
and
cmp
mov
and
pop
cmc
jb
frndint
(bad)
(bad)
inc
mov
mov
sub
sahf
mov
mov
inc
(bad)
leave
mov
push
sahf
lock
mov
cwde
out
inc
pusha
jb
cmps
adc
(bad)
sar
jmp
push
xchg
data16
jo
cli
not
push
push
hlt
cs
call
cmps
popa
or
mov
pop
js
stos
or
push
and
pop
aad
int
scas
xor
or
push
movs
loope
mov
sub
mov
fisttp
sub
into
add
adc
add
test
or
push
loope
mov
pop
cli
(bad)
push
add
fnsave
fidiv
add
das
cld
test
(bad)
jmp
shl
mov
imul
dec
das
dec
(bad)
stos
sub
(bad)
(bad)
(bad)
(bad)
call
iret
retf
mov
mov
mov
dec
ret
sub
jno
xor
sub
test
cmp
aad
jmp
xor
mov
ins
ret
or
test
jmp
(bad)
das
shr
xchg
pop
inc
scas
stos
mov
(bad)
jmp
adc
or
bound
xor
das
das
test
sub
dec
add
mov
ins
pop
(bad)
in
sbb
fisubr
adc
mov
mov
dec
push
pop
sub
xor
mov
or
mov
dec
movs
gs
or
test
jmp
cli
cmp
push
jmp
mov
mov
mov
(bad)
dec
and
(bad)
adc
cmp
jp
lahf
sub
fisubr
(bad)
(bad)
jg
ror
mov
or
jo
inc
scas
jo
(bad)
loop
rol
repz
xchg
(bad)
bound
cmps
mov
nop
movs
mov
mov
(bad)
(bad)
(bad)
frstor
and
rcl
mov
fcmove
xor
sub
push
or
outs
jo
cmp
push
cmps
dec
pop
and
(bad)
inc
adc
fcom
bnd
mov
das
sti
sub
in
cmp
lahf
int3
loop
jmp
(bad)
jmp
sub
in
test
xchg
nop
int
sti
or
fwait
adc
in
pop
dec
push
out
ins
loop
lods
mov
jmp
push
cmp
scas
mov
mov
(bad)
(bad)
jns
jl
sbb
push
cli
addr16
pop
mov
mov
xsave
(bad)
call
cli
lods
je
mov
mov
jl
fdiv
(bad)
mov
jo
loopne
popf
dec
xchg
jmp
mov
xlat
(bad)
(bad)
(bad)
jmp
adc
inc
(bad)
out
pop
out
cmps
repz
dec
outs
clc
or
or
loopne
fisttp
add
dec
pop
pop
jle
scas
pop
cs
dec
or
arpl
in
fcomp
call
(bad)
(bad)
(bad)
push
cmp
je
popa
mov
test
mov
pop
push
sbb
std
cld
adc
retf
xchg
mov
enter
mov
jg
popa
push
popa
jg
pop
dec
stc
xchg
(bad)
mov
loopne
pop
cmc
mov
(bad)
sbb
cs
stos
mov
mov
mov
sub
sub
add
add
(bad)
(bad)
(bad)
jmp
stos
cmps
pop
xchg
jmp
dec
iret
daa
mov
xchg
push
repnz
cmp
push
push
inc
or
cwde
pop
fsub
enter
call
(bad)
fcomip
xchg
cmp
pop
popa
add
loop
pushf
adc
cmp
mov
and
(bad)
mov
(bad)
mov
and
fmul
in
pop
jmp
jmp
(bad)
call
sub
xchg
bound
sbb
push
jb
inc
(bad)
mov
and
dec
loopne
push
(bad)
call
fwait
pop
call
sub
cmp
iret
push
jnp
retf
and
(bad)
cmp
mov
jno
inc
pop
clc
xor
scas
stos
ins
pop
sub
movs
retf
std
(bad)
(bad)
fisttp
stos
std
cmp
sar
aam
mov
sti
shl
push
cli
(bad)
jg
add
rcr
enter
pop
push
stos
dec
leave
jp
(bad)
mov
sub
dec
xor
mov
xchg
mov
push
mov
mov
(bad)
(bad)
(bad)
call
sub
iret
div
mov
sub
shr
sub
mov
jns
idiv
mov
inc
in
int3
fiadd
iret
jns
mov
sbb
jp
sub
das
sar
mov
aad
xor
mov
or
pop
jl
jmp
jge
cmp
pop
sub
mov
cli
or
(bad)
call
mov
mov
and
xchg
jo
retf
cmp
(bad)
xlat
stc
jnp
into
push
jg
(bad)
dec
(bad)
push
sub
fisubr
(bad)
jle
call
add
jmp
pop
sub
movs
outs
dec
retf
movs
and
clc
(bad)
jg
xchg
mov
in
lahf
inc
in
dec
pop
scas
fld
push
inc
test
daa
(bad)
(bad)
(bad)
jmp
(bad)
mov
push
sub
cmp
xchg
mov
lock
sub
pop
push
dec
jo
cmc
daa
jle
call
(bad)
pushf
popf
adc
mov
xchg
cmp
movs
test
pop
fsub
scas
lods
scas
push
shl
ficom
sbb
mov
daa
mov
cs
jecxz
es
jmp
test
sub
sbb
and
xor
push
pop
arpl
(bad)
(bad)
call
lods
shr
mov
sub
ret
rcr
push
(bad)
jmp
dec
sbb
mov
(bad)
mov
fcomip
jg
push
cdq
nop
jno
fcom
lea
and
leave
xchg
(bad)
(bad)
jmp
jmp
mov
(bad)
ret
test
mov
or
dec
add
shl
jg
jno
mov
ja
ret
jo
leave
inc
sub
outs
outs
(bad)
cmp
lds
cmps
push
je
dec
ret
call
jmp
xchg
jns
(bad)
mov
ret
hlt
out
fst
call
adc
fwait
ins
test
call
aad
xor
ja
mov
pop
cwde
sub
or
aad
rcl
mov
mov
sbb
fwait
(bad)
(bad)
inc
jge
mov
(bad)
cld
mov
in
mov
rcl
in
push
(bad)
jmp
scas
mov
jae
test
les
mov
push
lds
sbb
gs
mov
cmp
push
cmp
loope
push
mov
leave
dec
(bad)
(bad)
call
ret
movs
stos
movs
or
call
cwde
scas
and
sbb
clc
add
xor
fist
push
fisub
add
mov
push
add
dec
mov
mov
outs
(bad)
(bad)
jg
retf
dec
call
mov
fwait
ret
inc
in
mov
dec
mov
xchg
sub
loope
ja
push
ds
(bad)
(bad)
jg
(bad)
xchg
fldcw
repz
mov
add
sbb
outs
cmps
cmc
loop
pop
push
loop
cmp
or
cmp
add
(bad)
mov
pcmpeqb
test
pop
stos
inc
cmp
into
sub
stos
or
mov
mov
loop
mov
and
add
outs
rcl
jg
pop
ds
enter
addr16
xchg
fstp
outs
(bad)
(bad)
mov
sub
cmp
sub
into
xchg
push
jmp
outs
add
xchg
shr
ret
mov
sub
inc
pop
movs
(bad)
(bad)
(bad)
mov
pop
mov
add
es
sahf
jns
repnz
jmp
scas
push
hlt
pop
imul
imul
(bad)
mov
dec
mov
mov
inc
iret
add
pop
mov
aam
dec
xchg
mov
loopne
or
xchg
(bad)
push
test
fisub
sar
xlat
out
(bad)
(bad)
(bad)
call
add
leave
or
aad
iret
js
mov
lock
in
jle
mov
mov
cld
or
and
mov
inc
mov
cs
stos
cwde
fld
imul
add
dec
(bad)
(bad)
call
cld
(bad)
test
(bad)
retf
inc
cmp
fldcw
cmp
adc
fmul
dec
popa
fisub
sti
sbb
mov
xor
adc
fimul
inc
or
pop
mov
mov
call
(bad)
fbld
iret
leave
push
movs
out
adc
mov
jmp
test
mov
sbb
loopne
cmps
movsx
dec
test
(bad)
(bad)
jmp
mov
mov
cmp
pop
fcom
movs
loop
push
mov
stos
iret
cwde
jo
stos
jo
mov
jmp
rcr
xchg
push
push
cmp
adc
mov
test
jmp
jbe
in
cld
xor
cmc
mov
jmp
mov
pop
call
add
fisttp
clc
loope
out
sub
icebp
(bad)
jg
call
jecxz
add
test
xor
(bad)
call
aad
test
movs
stos
inc
cli
add
xchg
pop
cld
pop
std
jmp
lods
jecxz
fstp
xor
loope
push
fidivr
lds
inc
scas
xchg
js
in
jg
test
loop
pop
mov
stos
mov
(bad)
(bad)
dec
mov
in
jle
stc
fldcw
test
leave
cmp
stos
lea
jnp
(bad)
(bad)
jmp
stos
out
rol
mov
push
movs
mov
cmp
bound
dec
loope
and
in
rcl
fcomp
(bad)
adc
call
dec
xchg
mov
and
jp
push
inc
push
in
pop
pop
cmp
(bad)
(bad)
(bad)
cmp
ins
mov
mov
call
lods
and
loop
adc
dec
sar
sub
add
iret
sbb
(bad)
loopne
mov
(bad)
dec
ror
int
xbegin
lods
jp
ss
jle
cmps
add
sbb
cli
mov
imul
inc
pop
addr16
lods
jbe
cmps
lods
pop
or
or
iret
mov
xor
pop
frstor
mov
pushf
jmp
call
mov
out
cmp
or
push
inc
repnz
jg
das
inc
fwait
adc
es
jg
push
(bad)
jnp
cmps
jle
jle
call
call
cdq
push
xchg
sbb
push
and
sbb
inc
push
call
push
cmp
icebp
test
cld
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
and
xor
dec
jns
movs
and
and
pushf
push
fsin
inc
xor
jl
or
sub
or
or
mov
fwait
aam
add
sub
lahf
(bad)
and
dec
ins
clc
push
sbb
xchg
xchg
lods
imul
add
ins
sub
sbb
push
xor
mov
jmp
imul
jbe
mov
clc
dec
out
dec
cmps
add
mov
fstp
enter
add
in
mov
and
(bad)
(bad)
call
iret
lahf
clc
aas
jmp
mov
ins
cmp
and
sub
out
(bad)
(bad)
(bad)
mov
in
ds
inc
adc
fsubr
xchg
aad
imul
or
sub
clc
mov
adc
adc
and
push
mov
dec
(bad)
(bad)
(bad)
(bad)
(bad)
stc
xor
outs
lock
ss
sbb
add
mov
ret
xor
stc
(bad)
(bad)
(bad)
inc
cmps
test
cmps
sub
xchg
sub
ins
pop
push
dec
cmp
add
mov
push
xor
cdq
mov
(bad)
(bad)
(bad)
(bad)
jl
lahf
fcmovnu
call
or
cmp
sar
sbb
and
mov
mov
xchg
ins
(bad)
(bad)
(bad)
call
push
ret
fcom
sub
nop
lods
jmp
daa
lds
or
fbld
sbb
fild
retf
mov
dec
dec
sar
test
xor
(bad)
mov
inc
dec
mov
pop
ins
pop
mov
cmp
sub
retf
sub
mov
loopne
pop
jmp
test
fabs
mov
cli
(bad)
cmp
call
(bad)
mov
add
push
xchg
dec
je
inc
mov
dec
in
xor
inc
retf
and
mov
daa
add
ss
(bad)
(bad)
(bad)
dec
mov
test
inc
outs
icebp
dec
jmp
(bad)
cmp
call
or
(bad)
(bad)
(bad)
(bad)
fsub
shl
mov
ret
lea
movs
into
cmp
cli
mov
xchg
jmp
(bad)
(bad)
out
and
lahf
xchg
sbb
mov
or
loope
mov
(bad)
sti
jmp
mov
repnz
(bad)
(bad)
(bad)
call
ficomp
push
int3
fsubr
loopne
or
xchg
add
mov
into
out
sbb
push
int
dec
or
clc
pusha
mov
mov
jb
sar
add
scas
xor
push
pop
cs
out
inc
mov
fidivr
std
pop
adc
sbb
pushfw
(bad)
(bad)
(bad)
fistp
cs
mov
mov
xor
in
or
jge
add
xor
inc
fisttp
pusha
call
jne
xor
ret
(bad)
(bad)
(bad)
jmp
icebp
mov
sbb
cmc
add
ins
mov
jae
cmp
(bad)
hlt
xor
dec
test
(bad)
call
aam
mov
(bad)
fist
in
scas
cmc
loope
(bad)
jmp
xor
push
aaa
mov
xchg
cmp
sub
(bad)
(bad)
(bad)
(bad)
fist
cdq
mov
pop
fcomp
cmp
ror
scas
pop
and
mov
pop
stos
stos
(bad)
cli
and
pop
pushf
sti
aad
dec
std
push
shl
pop
or
pushf
jo
add
(bad)
xchg
adc
push
aam
sub
ds
std
mov
scas
test
dec
ret
sub
call
bound
(bad)
jmp
fucomp
sub
repnz
iret
call
das
rol
fidivr
addr16
push
outs
idiv
cmps
sub
addr16
cmps
or
fisub
(bad)
(bad)
(bad)
(bad)
jns
cmp
cmc
cmps
stos
push
adc
scas
enter
arpl
pusha
jg
push
(bad)
adc
daa
in
(bad)
(bad)
dec
mov
xor
add
data16
mov
and
(bad)
into
and
ds
cli
jmp
repz
mov
das
sbb
pop
mov
push
cld
das
lods
pop
cld
pop
into
imul
lods
pop
mov
dec
sbb
mov
mov
push
mov
mov
test
(bad)
call
pop
lea
sub
in
cvttps2pi
aaa
dec
jg
nop
aad
mov
or
jle
(bad)
(bad)
(bad)
call
int
or
mov
cli
test
push
in
(bad)
push
pop
xchg
mov
test
jmp
scas
inc
(bad)
jmp
gs
push
std
call
nop
sbb
and
mov
(bad)
sbb
icebp
mov
cmp
xchg
ret
rol
cwde
inc
mov
inc
mov
hlt
ret
mov
shl
(bad)
(bad)
fild
sbb
popa
pop
or
xchg
dec
ins
pop
repnz
retf
out
mov
nop
clc
test
sub
outs
adc
fcom
lea
mov
inc
inc
cli
hlt
data16
sbb
add
sub
mov
cmp
imul
scas
sub
and
scas
or
(bad)
call
mov
xadd
imul
out
sbb
int
das
push
aad
jmp
into
inc
clc
(bad)
mov
into
jmp
push
sahf
push
pop
sub
stos
sub
(bad)
(bad)
(bad)
(bad)
out
pop
and
jmp
es
xchg
adc
pusha
test
mov
pushf
neg
and
jmp
(bad)
jmp
(bad)
or
cmp
dec
ds
fldcw
hlt
popa
in
or
push
loop
(bad)
push
jmp
scas
mov
sbb
leave
cwde
xchg
(bad)
xchg
dec
xor
or
mov
mov
call
sub
pop
neg
hlt
(bad)
dec
fcmovbe
sbb
dec
mov
sbb
lahf
jb
cwde
add
(bad)
call
cmp
lahf
jne
fbstp
aas
inc
std
imul
inc
mov
call
dec
scas
cmp
jmp
sbb
push
mov
push
(bad)
fisub
cli
add
xor
or
mov
call
in
ja
aas
ret
fcomp
pop
sub
mov
mov
scas
fsub
mov
outs
aam
ret
cmps
(bad)
(bad)
(bad)
jmp
adc
cmp
mov
out
xor
scas
mov
ins
mov
pop
ins
xor
sub
(bad)
(bad)
jmp
nop
mov
sub
pop
xchg
popa
(bad)
add
cmp
bound
ins
adc
pop
ror
(bad)
(bad)
jmp
bnd
jle
mov
adc
rcr
cmp
enter
shr
mov
push
xor
jmp
sbb
and
sub
add
lods
imul
inc
xor
sub
jae
(bad)
(bad)
mov
ficomp
inc
aad
xor
stos
loopne
push
push
sub
jmp
sub
scas
xchg
pop
mov
push
inc
retf
int
xchg
int
jp
(bad)
(bad)
(bad)
(bad)
clc
push
or
ins
das
out
loope
adc
sti
dec
lods
leave
out
xor
sti
(bad)
(bad)
(bad)
fcomip
sub
jnp
mov
mov
cmp
pop
ins
adc
cmp
jmp
adc
jmp
sub
and
pop
in
(bad)
(bad)
(bad)
cld
stos
addr16
adc
push
xchg
test
movs
mov
pop
mov
lock
icebp
shr
push
jl
add
mov
aaa
mov
and
push
xchg
popf
outs
dec
jl
std
cmps
mov
xor
in
aas
or
cmp
mov
cmp
jp
(bad)
call
fsub
jg
xchg
push
rol
sub
and
sub
cmp
jmp
scas
or
push
rcr
sbb
scas
call
pop
jle
int3
mov
jmp
push
jmp
mov
scas
add
adc
or
std
xchg
or
std
pop
sub
in
call
xchg
fist
cs
cdq
sub
sbb
xchg
test
in
cmp
mov
mov
mov
adc
mov
addr16
lds
sub
lods
mov
push
ds
(bad)
(bad)
push
xchg
push
ret
mov
cmp
arpl
push
mov
retf
lds
icebp
dec
rcl
daa
scas
ins
and
mov
push
sar
scas
fneni(8087
mov
out
sbb
jmp
call
adc
shl
xor
je
stos
in
jnp
mov
add
jbe
call
jmp
mov
cmps
in
retf
(bad)
dec
fild
mov
aaa
rol
imul
mov
mov
pusha
sti
loope
pusha
cld
retf
icebp
mov
pop
sub
and
mov
sbb
test
scas
sub
jmp
mov
sbb
stos
xor
call
pushf
push
or
dec
ja
push
push
mov
push
ja
(bad)
call
or
das
mov
mov
mov
cdq
stos
mov
sub
inc
cld
cmp
xchg
xchg
movs
loopne
mov
enter
dec
push
sbb
xor
(bad)
jg
push
scas
retf
xchg
pop
sbb
mov
mov
call
(bad)
call
jb
push
xchg
cmp
dec
cmp
inc
or
iret
ror
imul
loop
iret
(bad)
(bad)
(bad)
dec
enter
push
call
mov
mov
push
loopne
aad
repnz
(bad)
(bad)
(bad)
jg
std
test
or
fs
and
adc
pop
(bad)
(bad)
or
movs
xor
call
jae
femms
xchg
sahf
pop
call
mov
or
jg
mov
dec
fdivr
scas
adc
(bad)
pusha
mov
xor
(bad)
(bad)
dec
(bad)
loopne
or
jmp
mov
cmps
ins
sbb
shl
or
jbe
mov
movs
mov
cmps
bnd
dec
iret
dec
mov
rol
test
push
clc
xchg
push
test
push
mov
stos
xor
xor
xchg
dec
jecxz
or
jp
jmp
dec
cmp
ret
cmp
sub
dec
pop
loopne
mov
push
(bad)
(bad)
mov
into
jge
ficomp
cmp
or
in
jecxz
jecxz
fistp
pop
ret
pop
dec
or
stos
dec
cs
jg
(bad)
cli
xor
mov
sub
daa
ret
jnp
shr
stc
or
clc
(bad)
dec
mov
sti
mov
xchg
test
scas
cmps
sub
jg
dec
mov
(bad)
test
mov
sub
jl
cli
inc
cmp
stos
fdivr
xchg
add
xchg
xor
mov
fnstenv
push
fcmovu
dec
push
push
dec
stc
in
out
cdq
imul
cmp
push
pop
mov
or
xchg
ins
mov
mov
inc
ins
jl
mov
dec
dec
sub
js
adc
arpl
scas
movs
shl
out
test
pop
sbb
mov
stc
das
cli
jmp
cs
mov
jmp
add
cwde
cmps
adc
(bad)
std
inc
sub
push
mov
sbb
push
mov
adc
movs
scas
and
idiv
ja
out
std
mov
ret
out
movs
(bad)
out
dec
sahf
xchg
ja
xchg
push
sbb
mov
(bad)
mov
pop
stc
xchg
mov
cmp
adc
ss
dec
mov
mov
call
jns
stos
movs
jo
and
jmp
fstp
ja
(bad)
call
mov
and
movs
lahf
loope
push
push
int
add
push
sar
in
movs
fcomp
into
pop
scas
pop
fimul
aaa
mov
enter
addr16
push
mov
daa
adc
test
icebp
push
cld
inc
ins
call
or
jge
scas
cli
(bad)
call
cmps
call
sub
mov
lock
adc
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
std
cmp
pop
pop
sahf
jmp
aas
stos
and
icebp
cmp
sbb
(bad)
dec
test
push
ret
cli
imul
lods
(bad)
in
pop
sub
and
fld
mov
inc
jae
and
mul
jg
test
cwde
or
pusha
arpl
push
dec
fdivr
jg
push
adc
bound
and
dec
iret
inc
(bad)
test
test
ret
imul
inc
stc
jne
jmp
mov
sar
mov
ret
or
clc
dec
lahf
xchg
lods
(bad)
std
inc
mov
icebp
(bad)
push
sub
stos
loope
nop
xor
push
mov
iret
jle
push
mov
sar
jmp
push
dec
mov
pop
xor
sub
xchg
cmp
dec
dec
(bad)
(bad)
(bad)
(bad)
cmp
cmps
sbb
movs
push
outs
pop
ror
clc
and
push
sub
daa
iret
push
cli
add
xchg
add
mov
mov
push
call
retf
pop
mov
(bad)
iret
imul
lods
popf
or
(bad)
(bad)
mov
mov
mov
xchg
xor
sbb
(bad)
(bad)
jg
sahf
fwait
loopne
push
iret
and
out
and
sub
sub
(bad)
leave
retf
out
(bad)
(bad)
fild
rcr
nop
mov
jg
xchg
sbb
cmc
out
cmp
add
cmp
mov
sbb
jmp
mov
jp
(bad)
cmp
ins
mov
dec
push
xor
fdivrp
mov
mov
stos
(bad)
stos
mov
in
repnz
pop
(bad)
(bad)
(bad)
call
repnz
mov
pop
jb
pop
lahf
adc
and
adc
mov
sbb
in
cld
dec
(bad)
(bad)
in
or
inc
push
push
loope
jo
inc
mov
cmps
ds
jae
loopne
inc
scas
mov
or
ins
mov
test
(bad)
(bad)
(bad)
call
sub
inc
call
test
std
or
enter
jmp
out
push
sub
jne
cmp
into
xchg
push
xchg
popa
call
test
out
(bad)
ja
dec
dec
inc
ret
in
je
mov
retf
(bad)
(bad)
call
mov
mov
add
add
xchg
jmp
push
jb
push
mov
(bad)
(bad)
inc
scas
add
mov
xlat
lods
imul
pusha
imul
pop
xor
mov
sub
leave
sar
lock
adc
popa
ret
mov
mov
mov
and
ret
jne
mov
cmps
cmp
jbe
and
sub
pop
fdivr
jo
mov
sub
ds
(bad)
(bad)
rcr
cs
outs
sub
dec
pusha
into
iret
and
and
jmp
clc
repnz
fisttp
push
dec
jmp
call
fild
sub
mov
jo
loopne
ds
cld
(bad)
mov
cmps
sti
mov
push
lock
and
or
and
arpl
fisubr
dec
and
(bad)
jg
xchg
fidiv
imul
pop
leave
jnp
outs
es
inc
(bad)
out
and
bound
mov
pop
(bad)
(bad)
(bad)
jmp
xlat
jae
ss
push
jmp
jmp
inc
mov
(bad)
jnp
retf
repz
xlat
sub
mov
outs
es
lahf
sbb
stos
cmp
mov
std
push
fsub
out
aam
mov
hlt
cdq
or
fwait
inc
jnp
or
adc
lock
sub
sub
(bad)
(bad)
(bad)
(bad)
out
lods
std
loopne
sti
jno
test
cmps
or
clc
retf
lods
out
cdq
push
mov
(bad)
jle
(bad)
(bad)
jg
mov
dec
dec
ins
jmp
adc
inc
scas
pop
mov
scas
cwde
dec
enter
xor
loopne
jo
sub
(bad)
jmp
sub
scas
push
and
out
rcr
sub
lds
pop
in
imul
mov
dec
jmp
clc
inc
pop
xchg
aas
stos
(bad)
sahf
mov
jg
(bad)
out
jge
(bad)
sti
mov
xor
movs
cli
(bad)
(bad)
call
in
lahf
outs
fsubr
and
ret
add
jmp
pop
mov
pop
jb
or
jmp
jp
stos
cwde
or
movs
out
lods
call
sub
call
xchg
inc
lods
jbe
push
std
or
xor
into
mov
mov
sar
mov
mov
call
xchg
bound
jp
or
test
mov
inc
mov
sub
push
fs
fwait
movs
popf
mov
outs
arpl
sub
call
cmp
ds
and
lock
inc
jmp
dec
scas
sub
clc
add
out
in
outs
dec
jmp
xchg
mov
pop
xchg
scas
ins
daa
ins
(bad)
mov
outs
call
mov
pop
retf
out
pop
jb
mov
call
dec
sub
iret
adc
imul
fs
jle
and
(bad)
(bad)
(bad)
push
cmp
test
sbb
cmps
push
lods
mov
mov
cs
rol
test
cmp
cwde
cwde
stos
imul
ror
test
push
sub
push
call
adc
sub
jmp
bound
sub
(bad)
push
sub
mov
scas
scas
and
movs
rol
dec
out
out
add
jb
sbb
data16
(bad)
(bad)
(bad)
fisubr
mov
pop
sbb
scas
mov
and
ret
sub
loop
aas
xor
inc
sti
into
mov
push
sub
adc
ret
mov
call
pop
je
jmp
sahf
sub
push
sti
(bad)
push
mov
in
xlat
stos
lds
pop
lods
int3
test
retf
addr16
call
lods
xor
xor
jmp
out
sbb
mov
sbb
aaa
pop
(bad)
neg
stos
ret
xchg
fstp
cmp
inc
ret
mov
lea
xor
fs
hlt
stos
(bad)
(bad)
jmp
mov
loopne
adc
jmp
mov
sti
cmp
or
std
pop
adc
add
mov
repz
stos
xor
xor
stos
and
cmps
inc
push
scas
mov
(bad)
jmp
(bad)
jmp
mov
jmp
(bad)
int3
test
(bad)
jmp
stc
push
retf
mov
(bad)
mov
pop
mov
add
pop
js
fimul
iret
cmovnp
sti
sbb
mov
sar
jmp
enter
jp
adc
xor
mov
pop
stos
push
stc
(bad)
call
cld
xchg
push
stos
loop
jnp
xor
cwde
call
jb
ret
pop
xchg
jmp
mov
sbb
mov
pop
sub
jne
into
ins
pop
daa
paddusw
pushf
movs
stc
loop
ja
or
rol
mov
xor
pop
call
cmp
add
mov
mov
iret
es
mov
(bad)
inc
call
xor
je
ficom
xchg
xlat
mov
or
adc
lea
(bad)
jge
adc
push
push
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
xchg
adc
sub
pop
sbb
addr16
or
jle
dec
cmp
fisub
fcomp
call
add
cmp
xchg
test
push
lahf
sub
lahf
imul
push
fiadd
or
test
mov
std
jmp
pushf
mov
loope
dec
outs
lahf
pop
lods
enter
mov
popa
and
pop
mov
pop
call
mov
cmp
int
jo
xchg
add
out
(bad)
(bad)
inc
add
inc
xor
adc
xchg
in
cmp
(bad)
sbb
cmp
dec
mov
cld
jmp
inc
clc
mov
jg
scas
aas
fld
mov
(bad)
jg
cmps
out
sbb
jge
out
cmps
rcr
and
sub
and
push
sti
and
fsubr
mov
pop
mov
mov
not
jo
sbb
shl
sahf
and
loop
mov
jmp
call
mov
jno
repnz
push
or
add
dec
sub
xlat
cwde
adc
jmp
inc
test
inc
cmp
jmp
mov
(bad)
jmp
ds
stc
mov
mov
stos
inc
leave
sub
push
mov
(bad)
(bad)
jmp
sahf
cmps
pop
sti
inc
(bad)
call
pop
jmp
mov
mov
mov
push
inc
outs
(bad)
(bad)
(bad)
jmp
cmc
add
aas
repz
fst
pop
shr
(bad)
(bad)
std
nop
fisub
mov
shl
clc
pop
adc
mov
mov
mov
add
movs
iret
pop
pushf
push
cmp
outs
sbb
mov
stos
aaa
push
es
sub
fs
addr16
dec
cld
push
cwde
mov
mov
clc
mov
fstp
movs
xchg
loop
dec
jno
inc
(bad)
(bad)
(bad)
push
mov
daa
cld
movs
cmp
fimul
sub
sbb
imul
dec
inc
mov
mov
(bad)
(bad)
(bad)
jmp
sbb
clc
jp
mov
test
out
pushf
es
pushf
stos
js
push
(bad)
mov
(bad)
(bad)
cmp
cmp
pop
mov
mov
(bad)
mov
push
(bad)
sbb
dec
mov
mov
aam
jnp
jle
mov
ins
(bad)
call
clc
movs
mov
pop
mov
jne
aaa
cli
xchg
sahf
sub
jg
jmp
call
leave
retf
pop
sbb
lods
iret
cmp
inc
or
test
(bad)
js
inc
daa
push
ins
loop
into
adc
add
call
add
inc
cmp
sti
out
and
cld
mov
call
jge
jp
iret
lahf
jae
add
fwait
aad
adc
push
push
pop
mov
retf
repz
add
or
out
xlat
sar
fwait
outs
inc
cmp
idiv
push
test
rcr
pop
retf
repz
(bad)
mov
hlt
stos
xlat
adc
cmp
jp
jle
lahf
add
xor
pop
cli
cmp
adc
push
data16
dec
(bad)
out
cmps
mov
cmp
sub
stos
cwde
test
xchg
mov
(bad)
jmp
fstp
lea
js
stos
jae
lods
out
pusha
fldcw
movs
push
push
cwde
sbb
cmp
call
or
adc
xchg
xchg
ds
cmp
or
pop
test
(bad)
(bad)
jmp
call
sub
scas
sub
mov
cmp
into
daa
dec
pop
lods
outs
loopne
(bad)
(bad)
call
ffree
mov
push
or
in
pop
push
outs
mov
push
mov
jl
sub
sub
(bad)
inc
jns
adc
loop
js
test
dec
mov
jmp
imul
pop
sub
jbe
adc
(bad)
retf
shl
cmps
imul
sub
dec
jecxz
mov
stos
xchg
mov
(bad)
(bad)
jg
or
dec
mov
mov
ret
xchg
pop
sbb
mov
mov
mov
cmp
outs
xchg
push
sub
int3
enter
pushf
sub
(bad)
jg
mov
push
inc
addr16
push
call
or
inc
js
ins
pop
movs
das
mov
call
in
and
push
or
xchg
test
ret
sub
push
pop
lock
xchg
or
push
out
retf
pop
pop
popa
xchg
sub
cmp
mov
clc
sbb
sbb
push
stos
retf
mov
sar
mov
test
pop
call
call
xchg
dec
ret
mov
xor
dec
xchg
ficom
push
xchg
aam
cdq
pop
mul
mov
cmp
pushf
mov
ss
gs
(bad)
clc
xchg
sbb
mov
push
mov
xor
or
xchg
sbb
cdq
fisttp
push
lods
pop
fidivr
(bad)
(bad)
dec
sub
mov
mov
dec
push
push
mov
jl
(bad)
ja
ja
(bad)
push
sub
xchg
mov
popa
(bad)
adc
pop
or
sub
fild
or
(bad)
call
(bad)
in
cdq
dec
dec
fldenv
jb
sbb
retf
movs
mov
and
jb
in
pop
mov
cld
dec
xchg
ficomp
retf
gs
and
imul
sub
or
xor
adc
xchg
(bad)
(bad)
(bad)
jmp
cmp
test
clc
and
dec
push
jg
dec
(bad)
mov
std
mov
loop
test
aam
mov
in
sub
(bad)
(bad)
mov
fldl2e
push
lods
cmps
scas
cmp
test
mov
in
cmps
out
sub
jg
jge
fdivrp
(bad)
(bad)
call
and
cmp
pop
in
cmp
out
loop
sbb
sub
call
repnz
(bad)
(bad)
cmp
mov
sbb
mov
sub
push
sbb
cmp
(bad)
(bad)
dec
cmps
bound
outs
or
add
retf
cs
add
or
(bad)
(bad)
(bad)
inc
js
mov
fisubr
pop
cld
or
dec
jae
into
jmp
pusha
idiv
fistp
retf
(bad)
jg
push
repnz
leave
ins
push
inc
jg
fs
push
pop
in
fstp
gs
(bad)
(bad)
jmp
fild
pusha
mov
enter
fxam
(bad)
adc
inc
movs
aaa
xor
mov
xor
adc
(bad)
(bad)
jmp
mul
adc
jmp
mov
mov
xor
fisttp
mov
(bad)
jmp
pop
pushf
push
mov
ss
adc
jnp
or
add
lock
nop
pushf
add
addr16
inc
clc
mov
dec
jmp
dec
stc
in
xchg
push
add
or
imul
cmc
aad
fld
aad
lods
jl
inc
movs
push
scas
jnp
or
leave
adc
outs
mov
retf
pop
push
(bad)
jmp
or
mov
sub
adc
jp
in
das
pop
mov
add
fbld
push
mov
cmp
das
psllw
(bad)
(bad)
mov
cdq
xchg
xor
and
div
sub
(bad)
and
les
addr16
fwait
rcl
adc
out
xchg
or
xchg
ret
fmul
jmp
mov
aaa
stos
inc
lods
(bad)
xchg
xchg
fiadd
ret
shl
mov
mov
(bad)
popf
fs
(bad)
(bad)
(bad)
(bad)
jns
bound
mov
stos
mov
fnstsw
cli
cdq
dec
call
ror
jg
cmp
xor
call
(bad)
sub
out
mov
cmp
(bad)
or
pop
jb
icebp
stos
cld
je
das
xor
sar
mov
mov
popf
sbb
test
fwait
push
pop
mov
scas
add
ret
add
pop
daa
and
pop
test
rep
(bad)
fbld
loopne
pop
int
and
cmp
loop
lock
pop
frstor
test
inc
inc
jmp
inc
(bad)
(bad)
jmp
or
pop
jmp
jl
shr
pop
clc
inc
sbb
cmp
xchg
outs
lods
clc
xchg
sti
cmp
sbb
(bad)
(bad)
dec
fnsave
mov
ins
mov
cli
cli
jb
push
stc
mov
dec
sub
or
fs
movs
ret
(bad)
(bad)
aas
imul
dec
add
stos
movs
xor
mov
stc
inc
sbb
jg
(bad)
push
fstp
jle
mov
or
and
jp
(bad)
xor
mov
(bad)
(bad)
dec
mov
pushf
and
push
pusha
inc
or
fwait
xchg
cmps
movs
mov
jle
mov
icebp
cs
shr
scas
push
(bad)
(bad)
inc
lods
call
popf
cmps
scas
test
sbb
cs
das
sub
(bad)
(bad)
(bad)
inc
mov
pop
ror
push
sub
fistp
scas
lahf
cmc
outs
pop
leave
pop
push
pop
push
mov
cmp
(bad)
(bad)
push
dec
enter
stc
stos
mov
lods
jmp
jmp
(bad)
(bad)
(bad)
dec
cwde
addr16
and
sub
mov
ret
mov
test
sahf
adc
repz
jg
(bad)
cs
or
outs
ins
cs
mov
xor
neg
push
mov
(bad)
inc
mov
adc
ror
loopne
out
sub
scas
rcr
lock
mov
sub
push
jecxz
dec
int3
jmp
(bad)
(bad)
jmp
outs
mov
ins
pop
and
mov
lahf
mov
ret
dec
(bad)
test
aad
pop
push
mov
pop
mov
mov
std
clc
sbb
repz
pop
sub
inc
dec
push
cli
(bad)
aas
cmp
push
call
pusha
pop
mov
sbb
push
jecxz
(bad)
scas
pop
cmp
(bad)
hlt
sub
ds
lahf
add
and
pop
in
fcmovu
lods
mov
retf
dec
mov
rcr
sbb
loope
gs
test
sbb
inc
mov
pop
dec
dec
or
repz
sbb
cdq
pop
std
or
dec
dec
dec
jo
fild
call
pop
push
xchg
sbb
xlat
std
inc
std
jo
push
aam
popa
adc
(bad)
(bad)
dec
call
mov
pop
fidivr
call
test
(bad)
fidiv
pop
mov
cmp
xchg
(bad)
jg
mov
outs
jnp
push
adc
dec
clc
sbb
inc
dec
and
(bad)
(bad)
jmp
add
fisub
sti
jns
sbb
mov
xor
pop
add
pop
jbe
test
loope
into
fisttp
jp
push
sar
(bad)
fbld
mov
jnp
(bad)
adc
test
aam
(bad)
(bad)
(bad)
jmp
in
mov
push
push
cmp
fsubr
and
mov
pop
cli
(bad)
jmp
sbb
data16
and
push
push
mov
cmps
(bad)
movs
or
(bad)
call
leave
sbb
and
(bad)
cld
cmp
mov
scas
push
inc
and
call
out
repz
adc
jle
fistp
(bad)
inc
ins
retf
sti
sub
ss
nop
jb
(bad)
jmp
push
test
in
or
or
stc
popa
shr
das
mov
sar
(bad)
(bad)
fld
adc
loopne
sub
xchg
in
and
sub
dec
add
cmp
jge
mov
clc
iret
or
ret
dec
adc
call
xor
inc
sbb
out
lahf
mov
jo
lahf
xchg
mov
call
xor
aad
dec
mov
sub
test
mov
cmp
or
add
icebp
(bad)
call
sub
jnp
ss
or
inc
lods
jp
and
(bad)
(bad)
(bad)
(bad)
stc
adc
pop
(bad)
sub
das
mov
sub
aas
dec
xor
cmp
dec
ins
ret
mov
sbb
(bad)
jmp
test
stos
retf
mov
jb
std
daa
cmps
stos
add
jne
dec
mov
or
(bad)
(bad)
dec
clc
pop
(bad)
stc
sub
fiadd
mov
fist
int3
cs
imul
push
(bad)
(bad)
dec
cld
sub
xchg
mov
scas
not
mov
mov
enter
(bad)
(bad)
call
mov
stos
push
fld
dec
mov
cli
mov
add
or
push
pop
(bad)
call
adc
fisubr
call
push
fs
or
nop
iret
fstp
mov
outs
and
and
jmp
test
mov
fld1
lods
xchg
ds
inc
and
(bad)
(bad)
jmp
movd
xchg
das
test
loope
scas
xchg
mov
and
hlt
(bad)
call
cmp
mov
into
push
or
cmp
imul
idiv
pop
mov
(bad)
(bad)
aas
mov
ins
or
cmps
xchg
js
inc
cmp
mov
call
mov
lahf
fnstenv
dec
push
and
(bad)
cld
(bad)
enter
mov
cmp
(bad)
(bad)
mov
add
fwait
std
mov
(bad)
enter
outs
call
cmps
or
(bad)
(bad)
ds
and
(bad)
cmp
out
sti
repnz
sar
mov
adc
test
fbstp
mov
mov
pop
sub
lahf
dec
sar
call
mov
(bad)
leave
imul
fidivr
(bad)
(bad)
(bad)
(bad)
jnp
mov
in
outs
jle
xlat
retf
push
fdivr
popf
sub
mov
(bad)
(bad)
(bad)
fistp
cmp
push
pop
std
js
sbb
mov
ja
popa
imul
fwait
retf
mov
stos
push
jmp
retf
jo
push
out
mov
ss
jmp
jmp
mov
pop
bound
mov
sbb
xchg
dec
cmc
gs
pop
call
bound
jnp
dec
inc
pusha
inc
and
jg
push
add
dec
sub
pop
push
or
(bad)
in
xor
inc
pop
bound
xor
jp
sti
pop
jg
push
das
mov
mul
jp
jp
dec
fstp
and
enter
call
push
push
idiv
mov
call
pusha
mov
cmp
out
gs
(bad)
dec
addr16
push
sub
pop
loope
mov
pop
test
lods
test
(bad)
pop
push
call
ins
adc
push
arpl
icebp
sbb
stos
mov
mov
movs
fbstp
and
xchg
iret
mov
jae
pop
or
leave
daa
dec
pop
lds
(bad)
jmp
mov
jp
or
xor
push
jl
mov
out
push
pop
sub
add
push
sbb
mov
xlat
and
(bad)
pop
adc
cld
jmp
mov
mov
sbb
pop
out
pusha
cmps
or
inc
sub
movs
pop
js
push
jo
loope
xchg
(bad)
out
pop
pop
push
xchg
retf
mov
sub
stos
sub
sub
imul
mul
lods
mov
(bad)
call
cmp
mov
test
sub
cmp
cmp
pop
clc
ret
inc
mov
mov
sti
das
and
ret
mov
inc
push
fldcw
(bad)
dec
(bad)
sub
out
pop
xchg
or
dec
rcl
hlt
and
lods
das
and
scas
test
and
pop
lahf
mov
iret
outs
in
daa
sbb
aas
ss
lods
scas
sub
and
outs
and
fidivr
dec
imul
and
push
and
inc
mov
data16
ins
adc
push
inc
push
jbe
sbb
das
jmp
(bad)
(bad)
mov
(bad)
cmp
test
sub
inc
and
retf
loop
add
xchg
adc
(bad)
std
loopne
add
popa
and
es
out
movs
cmp
and
pop
dec
jmp
or
dec
jmp
scas
jl
outs
(bad)
das
popa
in
jmp
ins
and
inc
(bad)
(bad)
(bad)
jecxz
dec
mov
sbb
lea
xor
fnstcw
mov
inc
mov
aaa
std
(bad)
(bad)
inc
retf
or
sbb
in
das
loopne
ds
mov
imul
movs
mov
add
mov
in
loopne
jns
lods
sahf
push
sub
pop
inc
xor
add
sbb
adc
sbb
cmp
or
aaa
shl
mov
out
fs
mov
(bad)
(bad)
push
sbb
mov
xor
in
movs
cmp
cmp
and
push
push
(bad)
push
mov
jl
retf
or
push
mov
mov
mov
clc
mov
mov
xor
mov
dec
jo
repnz
cmp
mov
(bad)
(bad)
(bad)
push
iret
lds
sbb
and
and
jb
pop
jmp
adc
cwde
jb
and
mov
xor
sub
and
mov
(bad)
repnz
and
cli
(bad)
push
push
cli
addr16
stc
imul
int3
icebp
js
dec
add
sar
ret
push
test
or
test
push
xchg
lock
sub
push
neg
mov
sub
ins
and
xchg
cmps
jge
mov
test
outs
pushf
test
mov
scas
gs
retf
and
(bad)
(bad)
call
sub
gs
fisttp
pushf
scas
int3
sub
jnp
sbb
ret
inc
lods
pop
xor
data16
(bad)
jmp
add
sub
cmps
out
fidiv
(bad)
int
cmp
bound
movs
fidivr
push
sbb
mov
scas
jg
push
dec
push
mov
imul
adc
inc
and
cli
pop
sar
dec
jmp
das
rol
mov
daa
mov
mov
shl
es
pop
sub
xchg
stos
mov
mov
sub
push
xor
jnp
jg
test
push
outs
mov
call
sahf
clc
lods
sti
cli
push
add
push
jl
cmp
add
lea
pusha
or
jg
cwde
sbb
and
das
retf
xchg
push
ret
jmp
imul
imul
pop
loop
cli
(bad)
(bad)
in
mov
sbb
enter
idiv
lahf
pop
sbb
jle
mov
cwde
add
mov
mov
pop
cld
or
add
cmp
xchg
mov
les
mov
xor
dec
ins
fmul
xchg
scas
push
mov
ror
ret
(bad)
(bad)
jmp
retf
pop
leave
push
cmp
sub
and
les
sub
sahf
fucomi
sub
rcr
xchg
stos
fimul
cmp
mov
xchg
es
adc
cmc
sub
push
(bad)
(bad)
jmp
sub
mov
sti
mov
sub
imul
out
pop
jnp
shr
jle
mov
(bad)
(bad)
inc
push
movs
mov
jmp
pop
jp
add
cli
outs
cmps
out
cmp
out
cli
jmp
jb
je
mov
in
lea
cli
cmp
ret
into
dec
(bad)
(bad)
call
jmp
mov
sbb
popa
sbb
push
shr
int
hlt
cmp
mov
lds
retf
lods
in
pop
adc
clc
pop
call
out
ss
(bad)
in
mov
jmp
test
pop
jg
stos
(bad)
(bad)
(bad)
jmp
lea
gs
inc
mov
cmp
xchg
fist
ret
(bad)
push
jmp
sub
cmp
das
push
fnstsw
stos
(bad)
call
pop
dec
enter
jmp
ss
sub
loopne
loop
das
bound
shl
add
sbb
icebp
dec
outs
pushf
mov
fprem
(bad)
(bad)
mov
lods
fwait
jmp
call
sub
sub
mov
mov
adc
jg
push
rcr
pop
cwde
lea
jg
xor
xchg
dec
sbb
mov
jmp
jl
leave
cmp
mov
push
mov
outs
and
or
scas
cmp
in
(bad)
test
imul
sub
addr16
(bad)
(bad)
push
jmp
retf
out
mov
repnz
mov
out
mov
adc
sbb
push
and
cmp
pop
sbb
cmp
or
push
xchg
jmp
(bad)
(bad)
(bad)
push
into
fcmovnbe
pop
sub
retf
aam
stos
popa
jmp
sub
(bad)
(bad)
(bad)
cmp
(bad)
fbld
mov
sub
and
sub
adc
fidivr
jle
pusha
xchg
lods
inc
mov
jmp
xchg
test
stos
fist
xchg
out
jg
scas
and
add
sub
imul
add
pop
loope
xchg
(bad)
dec
xor
bswap
mov
(bad)
mov
add
and
adc
movs
js
ficomp
xor
in
pop
pushf
ret
nop
lock
dec
mov
aas
retf
sbb
add
ja
adc
mov
mov
(bad)
fdivr
(bad)
(bad)
jmp
lods
mov
mov
add
mov
mov
cmp
pop
add
(bad)
push
jmp
sar
fidivr
lea
dec
gs
cs
jl
loope
xchg
cmp
push
mov
(bad)
(bad)
jmp
sub
cmp
and
xchg
bound
cmp
mov
scas
arpl
cmp
xchg
sbb
inc
jmp
add
retf
push
add
clc
or
sub
fs
cmps
jg
xor
out
aas
cmps
outs
outs
cli
push
js
ret
call
adc
fwait
push
fadd
clc
jmp
push
sahf
outs
and
mov
adc
repz
(bad)
out
clc
mov
jae
mov
adc
icebp
sub
jo
retf
push
mov
pop
mov
sub
adc
(bad)
call
jmp
(bad)
xchg
mov
mov
cmp
inc
std
int3
xor
lahf
fldenv
or
pop
out
outs
and
das
out
rcr
(bad)
call
push
call
pop
mov
js
pop
pop
jmp
(bad)
jg
pop
shl
repnz
xor
pop
or
or
out
push
sbb
or
mov
dec
inc
or
(bad)
aas
mov
mov
mov
scas
imul
mul
loop
mov
inc
loope
call
iret
movs
shr
adc
fsubr
jbe
or
sar
(bad)
(bad)
mov
in
loopne
sub
fisttp
mov
fwait
adc
clc
sub
nop
mov
dec
cld
repnz
xchg
popa
mov
fisub
(bad)
(bad)
jmp
add
xchg
shr
dec
jb
je
cmps
xor
mov
cmps
sar
sub
stc
cmps
not
out
jo
add
jmp
xchg
jns
fbld
jmp
bound
mov
cmp
dec
ins
sub
xor
and
sbb
mov
aas
pop
jge
dec
lock
lock
xor
or
iret
sub
mov
xchg
lock
fs
and
fnstcw
add
imul
sbb
sti
ror
inc
push
outs
jmp
inc
jmp
pusha
push
mov
(bad)
popf
addr16
cdq
jmp
mov
(bad)
(bad)
(bad)
call
pop
(bad)
int3
cli
jecxz
sti
push
adc
mov
fistp
retf
pop
xchg
inc
(bad)
mov
pop
cmp
mov
mov
enter
push
pop
sar
dec
xchg
cld
call
cs
cmp
fiadd
(bad)
(bad)
call
jo
mov
leave
stc
add
xor
dec
fsubr
pop
imul
xor
retf
imul
in
and
mov
push
lods
ins
test
push
retf
fcom
xor
das
mov
push
add
xor
outs
mov
push
js
test
(bad)
add
or
cli
pop
mov
call
pop
xchg
cmp
stc
scas
push
ja
fist
push
push
(bad)
jg
(bad)
lahf
(bad)
call
rcl
pop
jmp
jg
(bad)
(bad)
(bad)
std
retf
sub
movs
iret
lahf
push
or
sbb
in
sbb
std
cmp
cdq
rcr
dec
pop
(bad)
jg
call
jmp
xchg
mov
sbb
adc
scas
int
mov
sbb
mov
fistp
sub
(bad)
push
pop
in
xchg
out
xor
add
jno
mov
add
pop
scas
adc
in
mov
ror
adc
clc
add
jmp
sti
ror
call
push
clc
mov
inc
enter
fsubrp
xor
ret
bound
(bad)
call
leave
cmp
movs
xchg
mov
test
adc
and
enter
cdq
jp
fimul
out
push
push
pop
(bad)
dec
jg
(bad)
dec
fwait
push
jp
push
std
call
(bad)
fcomip
dec
cmp
push
push
retf
sub
push
or
(bad)
jmp
sub
fisttp
pop
std
jmp
call
in
fwait
dec
cmp
xsha1
cmps
or
cmp
lahf
mov
mov
inc
das
imul
ret
scas
imul
mov
xchg
out
inc
stc
sub
(bad)
loope
loope
stos
dec
sub
or
lods
(bad)
(bad)
(bad)
inc
scas
or
jmp
mov
jmp
scas
iret
dec
inc
call
retf
int3
jno
popa
ds
mov
(bad)
cmp
iret
or
stos
pop
in
das
jp
push
aam
mov
repnz
jg
cmps
and
and
loop
fs
mov
pop
lock
xlat
imul
mov
or
mov
pop
cmps
jb
push
inc
dec
sbb
jb
(bad)
mov
jp
push
fnsave
call
xchg
cmps
dec
push
loope
out
pmaddwd
cmps
jno
and
outs
or
mov
dec
fimul
(bad)
call
pop
fisubr
mov
xor
ins
sbb
out
(bad)
call
inc
jp
jp
and
mov
sbb
cdq
push
fs
enter
bnd
ins
jmp
xor
jmp
loope
fbld
add
sub
mov
add
imul
retf
lods
(bad)
dec
inc
out
sub
jns
pop
jmp
cwde
mov
(bad)
in
fwait
cmp
fwait
jl
jmp
ds
xchg
(bad)
jne
sub
adc
push
jb
push
(bad)
cs
popa
adc
push
sbb
mov
mov
ret
mov
(bad)
(bad)
(bad)
fistp
sbb
jg
das
daa
jmp
(bad)
sbb
pop
jmp
(bad)
cmp
mov
retf
jno
stos
add
test
push
leave
or
(bad)
push
retf
xor
mov
dec
dec
imul
jmp
retf
sbb
pop
das
retf
or
fwait
xor
(bad)
(bad)
(bad)
inc
lods
fist
sub
ds
fistp
(bad)
mov
(bad)
scas
out
adc
fidiv
jmp
leave
jo
mov
mov
pusha
stos
enter
stos
cmc
repnz
(bad)
lahf
stc
xchg
les
mov
call
int
and
pusha
stc
repnz
jmp
into
call
sub
cmps
lods
cwde
stc
mov
lods
jp
out
adc
(bad)
fcom
lock
mov
jg
xor
mov
mov
iret
sub
std
adc
adc
rcr
pop
mov
and
scas
ss
cmp
xor
mov
mov
add
frndint
cmp
(bad)
mov
mov
jmp
ds
ret
add
fnstcw
(bad)
(bad)
call
mov
fbstp
sub
push
fsub
addr16
add
cs
(bad)
dec
push
jns
mov
pusha
out
cli
xchg
push
cli
push
cs
mov
retf
scas
out
(bad)
call
jge
xor
(bad)
fistp
mov
pslld
add
stos
sub
and
fcomip
inc
movs
xor
jle
jne
in
dec
shr
xchg
add
repnz
(bad)
mov
movs
sar
aas
jecxz
xchg
adc
(bad)
fcomip
out
mov
mov
es
mov
and
pop
sbb
mov
clc
push
cmp
loope
sti
xor
pusha
xchg
cmps
out
xor
jmp
shl
add
outs
arpl
jmp
xor
call
rcr
xchg
in
jmp
pop
call
es
mov
xchg
inc
sbb
pusha
jp
call
cmc
push
add
push
xchg
or
(bad)
(bad)
jmp
cmc
pop
mov
adc
sar
rcr
clc
ror
leave
clc
pop
fdivr
(bad)
mov
dec
aaa
ss
mov
or
(bad)
jbe
jge
mov
(bad)
mov
or
push
jmp
mov
jns
sub
sbb
outs
(bad)
(bad)
(bad)
jmp
jno
stc
in
enter
(bad)
mov
mov
shl
shl
retf
adc
sbb
rol
clc
(bad)
push
dec
cmps
cmp
iret
movs
adc
jp
and
(bad)
(bad)
call
mov
repnz
pop
dec
test
int
sbb
sub
aaa
sub
push
jbe
cmp
push
pusha
dec
aas
iret
stos
lahf
mov
dec
lock
and
imul
jne
push
mov
sbb
cs
(bad)
(bad)
call
out
xor
mov
cmp
jo
inc
sbb
xchg
pop
std
(bad)
in
mov
xor
ja
jmp
js
enter
or
std
into
imul
cld
cdq
push
adc
(bad)
(bad)
call
pop
sub
sub
sub
lods
es
ss
fimul
bound
ds
ss
pop
xchg
std
mov
aas
pop
lods
fs
and
adc
int
cdq
lock
clc
xor
enter
test
loop
nop
push
jmp
(bad)
fistp
or
push
mov
jmp
out
mov
add
(bad)
call
pop
pop
jo
cmp
repnz
mov
sub
clc
ja
or
mov
dec
add
call
adc
and
pop
xchg
and
loop
pop
pop
sub
retf
or
sbb
jmp
cli
mov
sbb
test
leave
icebp
dec
in
imul
jns
dec
fwait
repnz
(bad)
(bad)
(bad)
in
or
pop
mov
mov
sbb
push
outs
popa
shl
sbb
adc
sbb
fild
nop
das
cli
sbb
outs
jmp
mov
retf
ret
stc
adc
(bad)
jg
mov
dec
outs
sbb
xor
xchg
add
std
sar
ins
call
leave
clc
je
dec
pop
sbb
stc
adc
scas
in
lahf
dec
push
lods
scas
mov
push
rcr
rcl
dec
(bad)
(bad)
(bad)
push
jmp
or
ins
aam
sub
jb
rep
mov
pop
dec
outs
stc
imul
inc
inc
rcl
sub
bound
div
sub
jno
(bad)
dec
bound
into
ficom
mov
mov
inc
dec
scas
clc
das
push
ins
ret
push
pop
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
call
jnp
sub
sahf
(bad)
rcl
imul
loopne
stos
cs
imul
push
pop
imul
add
(bad)
dec
xchg
push
xchg
pop
fisubr
xchg
sub
mov
js
fiadd
push
lahf
hlt
popw
fwait
arpl
stos
(bad)
(bad)
(bad)
jmp
out
cli
dec
out
ret
dec
inc
stc
scas
inc
scas
or
mov
push
or
push
jae
(bad)
(bad)
dec
cmp
in
out
mov
loop
scas
pusha
and
lahf
fld
mov
stos
(bad)
jg
dec
jmp
leave
mov
xchg
sub
inc
loop
loopne
jae
fisubr
out
jmp
mov
push
cs
inc
mov
adc
imul
(bad)
(bad)
jmp
imul
mov
xchg
or
dec
gs
ret
jmp
call
xor
xor
cli
gs
jle
mov
stos
sbb
cmp
pop
jmp
imul
scas
mov
mov
xor
push
stc
loopne
(bad)
call
mov
mov
xchg
jmp
fistp
loopne
sub
inc
mov
outs
sbb
adc
dec
test
lahf
shl
fwait
inc
clc
pop
dec
xor
aas
jp
sahf
nop
(bad)
sub
loopne
fcomp
push
sbb
and
std
dec
out
jmp
add
cmp
(bad)
push
ret
mov
out
cld
call
mov
fldenv
(bad)
(bad)
(bad)
dec
mov
xor
dec
dec
or
cmp
mov
push
js
ficom
loopne
arpl
ja
ret
push
pop
sahf
stos
gs
xchg
les
call
loopne
inc
sub
shl
push
ins
add
pop
jb
jne
js
lods
or
gs
hlt
mov
fdivr
cmp
loope
xchg
cmps
or
(bad)
mov
call
push
xor
dec
mov
ret
addr16
(bad)
(bad)
jmp
mov
in
addr16
mov
sbb
pusha
icebp
or
sub
(bad)
mov
push
call
mov
rcr
push
fsub
int3
loop
cmp
and
retf
movs
sub
mov
sub
jmp
push
gs
sbb
push
or
sti
sbb
mov
imul
pop
jge
test
cld
sbb
out
jg
dec
ret
add
push
call
std
push
iret
mov
es
mov
mov
push
repz
sbb
arpl
mov
imul
jb
iret
mov
jl
push
out
xor
sub
mov
js
int3
xor
xor
pushf
ja
jmp
fmul
jmp
jg
cmp
mov
iret
call
(bad)
out
push
mov
cmp
dec
pop
cmps
xlat
or
pop
fcomip
jmp
inc
sub
mov
mov
sbb
mov
xchg
and
test
out
test
push
sub
or
pop
mov
xchg
ja
scas
push
adc
sub
call
jg
mov
shl
in
push
or
out
(bad)
pop
inc
xor
or
pop
lods
cmp
xchg
in
jecxz
(bad)
and
(bad)
in
sahf
test
ss
inc
add
mov
mov
(bad)
mov
lock
jmp
scas
enter
sub
inc
mov
adc
xchg
ja
ja
(bad)
(bad)
(bad)
inc
call
sahf
retf
jge
push
and
cs
jno
dec
(bad)
dec
jmp
call
sar
jnp
add
mov
stc
call
or
xchg
jo
imul
mov
mov
cli
outs
(bad)
inc
cld
add
xor
inc
push
sub
fstp
(bad)
(bad)
call
arpl
pop
movs
repz
mov
dec
mov
lds
cmps
adc
loop
test
(bad)
jge
mov
shr
sub
mov
or
jl
mov
iret
pop
pushf
imul
loop
xchg
test
shl
dec
push
and
dec
pop
(bad)
or
dec
xchg
mov
adc
cmp
sahf
xchg
call
add
loopne
cmp
push
or
aaa
fdivr
pop
fist
jp
pop
cmp
fldcw
(bad)
(bad)
inc
push
xor
test
mov
int3
mov
test
pop
addr16
(bad)
(bad)
(bad)
jmp
mov
fsubr
imul
xor
loop
outs
jns
test
push
test
mov
clc
jmp
sbb
nop
sub
mov
cmp
aam
(bad)
jmp
sub
mov
and
popa
test
adc
sti
jp
das
aas
push
adc
(bad)
dec
pop
cwde
retf
pop
scas
adc
pushw
and
cld
and
(bad)
call
outs
jmp
xor
pusha
js
fimul
or
push
jmp
js
stos
loop
mov
xor
add
mov
xchg
sahf
cs
inc
or
jb
cmp
sub
or
(bad)
dec
iret
mov
cmp
out
popa
add
in
xor
mov
(bad)
(bad)
(bad)
inc
jecxz
retf
mov
jp
sub
frstor
aad
cmps
push
dec
pop
movs
mov
out
movs
lock
retf
inc
mov
daa
movs
push
push
inc
cdq
cmp
std
sub
pushf
cmp
jge
mov
push
std
(bad)
(bad)
inc
int
add
push
dec
mov
shr
sbb
dec
ret
pop
jl
ds
xor
test
(bad)
call
jo
sub
push
daa
stos
das
std
addr16
das
add
cmps
adc
mov
shr
push
lock
(bad)
in
lods
xor
shl
std
movzx
sub
cli
adc
pop
inc
push
out
inc
mov
xchg
mov
and
mov
mov
in
push
mov
pop
sub
mov
(bad)
stos
push
int3
fdiv
push
pop
pop
popa
cdq
mov
mov
cmp
jae
mov
and
mov
scas
push
imul
dec
int3
xchg
inc
cld
dec
fsubr
aaa
jmp
fsubr
and
jg
jae
scas
dec
outs
outs
xlat
push
test
xor
and
(bad)
(bad)
jg
dec
fstp
scas
ins
icebp
outs
mov
and
sti
mov
mov
xchg
dec
or
(bad)
(bad)
(bad)
call
test
dec
(bad)
stos
jp
stos
xor
mov
test
pop
mov
lods
push
in
dec
sub
aad
mov
and
or
cmps
sub
or
sbb
outs
cwde
mov
add
pop
call
mov
push
cli
cmp
pop
jp
pop
add
call
mov
mov
pop
mov
inc
(bad)
add
mov
or
test
call
and
(bad)
(bad)
dec
jmp
mov
and
(bad)
(bad)
dec
push
dec
xchg
sbb
cmc
adc
mov
jmp
std
test
jnp
mov
pop
sahf
add
xchg
inc
dec
mov
pop
pop
mov
imul
test
inc
imul
and
jb
(bad)
mov
lds
ret
push
fwait
ds
mov
mov
pop
jnp
jb
ret
sar
push
aas
mov
mov
mov
push
in
(bad)
loope
pop
sub
(bad)
stos
(bad)
jmp
sub
xor
jbe
or
adc
or
and
mov
or
fcomp
cmp
mov
loop
daa
jo
scas
stos
or
ret
lds
or
adc
mov
(bad)
(bad)
jmp
stc
cmps
popf
sbb
leave
scas
mov
cmp
add
cmps
mov
cmps
stos
inc
mov
inc
inc
clc
jmp
repnz
(bad)
xchg
mov
xor
sub
mov
arpl
cld
aaa
lods
fcomp
jg
adc
cli
sar
inc
inc
fdivr
stos
pop
or
push
cs
(bad)
ficomp
sub
mov
ins
jecxz
scas
imul
and
scas
mov
dec
mov
test
mov
push
adc
cmps
sbb
pushf
mov
pop
xor
xlat
sub
ds
in
adc
(bad)
mov
pop
add
movs
(bad)
push
mov
fld
mov
(bad)
jns
call
or
sti
and
out
enter
scas
cmp
cmp
sub
push
repnz
das
mov
ins
ins
or
jmp
test
repnz
js
jmp
pop
test
test
movq
(bad)
call
push
and
js
mov
fst
cli
cwde
fistp
es
pop
sar
in
lahf
jl
lods
mov
mov
pushf
cmp
push
(bad)
(bad)
(bad)
jmp
fcmovu
add
sub
xor
outs
fdiv
xor
pop
test
lds
adc
pop
add
ds
or
pop
adc
add
inc
or
call
bound
cmp
dec
loop
ss
into
dec
lock
xacquire
clc
sbb
cmp
cdq
out
mov
hlt
push
mov
in
fidivr
sub
iret
push
mov
cs
call
sub
add
sub
stos
adc
(bad)
sti
push
popf
into
cdq
popf
imul
mov
call
jmp
clc
scas
push
sub
imul
(bad)
(bad)
mov
repnz
cmp
sbb
ret
cwde
test
jg
or
stos
jg
dec
cld
pushf
cmp
adc
loop
fadd
(bad)
dec
sub
inc
and
jl
sub
sbb
mov
cmp
cmp
imul
adc
sub
ins
jg
das
cld
mov
ror
sbb
add
cmps
mov
nop
sbb
adc
int
data16
jmp
les
fimul
(bad)
(bad)
(bad)
(bad)
push
sbb
jl
icebp
cmp
inc
add
mov
loopne
mov
daa
jmp
add
(bad)
ficomp
retf
lods
mov
sub
(bad)
call
ds
ret
movs
pop
fdivr
(bad)
mov
std
jp
mov
(bad)
push
jg
pop
leave
fwait
pop
stc
mov
sub
test
sub
ja
dec
jmp
pop
(bad)
adc
sti
lea
jmp
(bad)
mov
dec
sub
xchg
nop
mov
jmp
jle
pop
and
dec
mov
cmp
ret
cmps
(bad)
call
cmp
clc
(bad)
jmp
xchg
sbb
xchg
call
stos
retf
jg
mov
add
fwait
cmps
jmp
mov
call
loopne
inc
jecxz
xchg
push
aaa
shl
sahf
into
push
push
pop
call
idiv
(bad)
fld
test
xchg
ds
mov
jmp
or
outs
pop
push
scas
clc
sub
cmps
arpl
cmc
(bad)
(bad)
(bad)
jmp
int
stos
and
lods
fisubr
fnstsw
mov
lea
sub
repnz
enter
pop
cmc
(bad)
jge
mov
push
cmp
pop
dec
cmp
imul
or
(bad)
(bad)
jmp
lock
mov
test
xchg
jae
dec
cwde
clc
jns
out
cmp
std
(bad)
jmp
mov
adc
or
loopne
clc
jp
call
push
jmp
mov
aam
xchg
cmps
add
mov
dec
(bad)
(bad)
(bad)
call
cmps
dec
fistp
iret
xor
sbb
jne
push
fwait
ss
sub
aad
mov
es
(bad)
(bad)
(bad)
push
sbb
ins
retf
mov
je
icebp
xchg
and
mov
iret
mov
clc
mov
xchg
out
fmul
or
jl
inc
pop
cmp
(bad)
fbstp
and
cmp
loope
jo
xchg
popa
or
(bad)
(bad)
jg
mov
xor
int
xor
sub
outs
jbe
fistp
cmp
(bad)
(bad)
jmp
xor
inc
sub
pop
or
retf
cmps
test
es
movs
jl
pop
hlt
cli
(bad)
(bad)
jmp
mov
mov
inc
push
push
dec
mov
sbb
or
jb
inc
xor
dec
ins
aaa
or
(bad)
push
push
(bad)
shl
cmp
cli
mov
or
pop
js
mov
mov
dec
pop
lahf
mov
rcr
jo
xchg
(bad)
lahf
pusha
(bad)
adc
in
pop
adc
jle
loop
cs
ficom
mov
mov
(bad)
(bad)
(bad)
(bad)
faddp
imul
mov
cmp
(bad)
push
or
adc
movs
push
dec
add
(bad)
jl
adc
sub
(bad)
push
add
mov
das
into
push
jp
sahf
je
mov
push
(bad)
pop
leave
pop
dec
sti
or
or
addr16
pop
iret
outs
mov
in
in
ss
or
cmp
outs
mov
imul
aas
leave
mov
lahf
fs
adc
retf
mov
dec
enter
add
jg
in
add
test
scas
(bad)
(bad)
(bad)
mov
and
xchg
test
repz
retf
call
call
inc
xor
call
(bad)
dec
pop
das
pop
test
out
mov
outs
stos
dec
dec
loop
das
jb
mov
sbb
sbb
sub
jmp
out
repnz
ror
inc
ficomp
mov
push
mov
dec
ficomp
mov
leave
mov
outs
dec
(bad)
(bad)
(bad)
dec
ret
mov
sub
das
iret
inc
or
pop
fdiv
xchg
mov
(bad)
push
lods
outs
ins
test
pop
rol
mov
cmps
rol
out
xor
pop
and
adc
(bad)
mov
jmp
imul
hlt
(bad)
mov
push
std
mov
cmp
pop
retf
dec
retf
jns
mov
into
retf
or
mov
push
jp
retf
mov
(bad)
(bad)
(bad)
jg
mov
and
adc
cmps
into
aad
lahf
std
scas
adc
cmp
adc
jmp
xor
loop
jnp
jbe
in
popa
pushf
(bad)
call
(bad)
(bad)
lock
dec
pusha
cmp
fidiv
adc
ins
pushf
fdiv
sahf
sub
test
jns
adc
mov
add
std
or
retf
sahf
call
lods
test
and
cmp
xchg
(bad)
into
mov
stos
pop
out
and
sbb
(bad)
inc
test
ins
loop
mov
lods
and
ror
or
loopne
(bad)
jmp
repz
in
ds
sbb
pop
scas
sub
mov
xor
xchg
lock
loopne
scas
pop
dec
cmp
lock
ficomp
mov
dec
movs
(bad)
(bad)
(bad)
push
sub
rcl
dec
xchg
stc
mov
outs
fs
cmp
ins
adc
and
pop
xor
pop
or
mov
scas
iret
xor
(bad)
(bad)
(bad)
call
push
mov
or
add
cmp
retf
dec
retf
es
pmulhuw
retf
ins
jmp
call
mov
lods
push
loope
iret
adc
mov
scas
fcomp
cmp
imul
adc
outs
cdq
call
daa
mov
pop
cli
mov
gs
ss
(bad)
dec
cdq
outs
std
cmp
add
icebp
mov
jmp
(bad)
(bad)
(bad)
jmp
or
(bad)
(bad)
js
push
ret
or
dec
mov
push
adc
es
jmp
cmp
call
cmps
call
mov
sub
pop
out
and
or
call
sub
sbb
adc
cmp
cs
sub
rcr
hlt
sahf
mov
(bad)
out
and
mov
imul
(bad)
jmp
pop
jne
dec
sbb
in
retf
xor
out
inc
pop
sub
jl
(bad)
mov
jmp
out
out
and
das
mov
and
push
in
ror
push
lock
sub
mov
pop
pop
(bad)
(bad)
(bad)
call
or
mov
jbe
es
out
test
push
pop
pop
sub
dec
cmp
cmp
inc
inc
retf
sub
retf
cmp
mov
sbb
add
enter
push
ja
jg
jmp
cmp
out
leave
aad
ror
mov
jmp
sbb
mov
ret
jmp
mov
icebp
loop
popa
mov
es
dec
cs
sbb
push
and
sar
(bad)
jmp
bound
outs
xchg
scas
lock
(bad)
fisub
or
sbb
call
std
(bad)
inc
jge
pop
sub
cmp
push
sub
cmpxchg
std
sbb
pop
jge
or
push
aas
adc
pop
or
mov
cmc
aad
xchg
sub
(bad)
outs
clc
call
jmp
shl
or
add
dec
pusha
cmps
mov
(bad)
sbb
gs
nop
sbb
jmp
es
(bad)
(bad)
(bad)
clc
cmps
dec
jb
or
sub
call
scas
add
out
adc
aaa
addr16
mov
repnz
loopne
test
fucomi
jbe
mov
aas
or
(bad)
mov
popf
fs
inc
retf
mov
(bad)
mov
mov
(bad)
cmp
cmp
(bad)
mov
ins
cld
inc
loop
xor
xchg
aam
outs
(bad)
(bad)
jg
push
jecxz
sub
enter
sbb
pop
fild
movs
scas
(bad)
(bad)
(bad)
(bad)
mov
sub
xor
repz
retf
fidiv
jo
cmp
cmps
(bad)
mov
ficomp
aad
icebp
(bad)
movs
jne
outs
fld
lea
scas
mov
jmp
sub
js
mov
loop
std
cmp
in
call
test
(bad)
call
inc
mov
xchg
dec
scas
sub
sbb
xor
stos
pop
stos
in
(bad)
lds
scas
push
(bad)
(bad)
(bad)
jg
ins
out
pusha
aaa
sub
int
sti
clc
bound
push
jle
pop
and
pop
nop
xchg
enter
aaa
cld
mov
ss
push
xor
fs
sub
lahf
xchg
stos
mov
(bad)
call
cmp
sub
mov
and
jno
mov
adc
sub
xlat
pop
outs
add
sbb
adc
adc
add
inc
sbb
pop
movs
retf
dec
dec
(bad)
pop
mov
dec
cld
outs
lock
pop
add
jmp
adc
ds
fwait
jb
aam
or
(bad)
(bad)
(bad)
(bad)
cld
cmp
popa
mov
and
mov
out
lock
lods
mov
mov
mov
cli
dec
ficomp
and
call
and
out
xor
push
push
daa
js
adc
add
call
es
iret
jnp
icebp
push
fild
push
xor
clc
scas
pusha
pop
or
clc
pop
hlt
pop
inc
iret
xchg
retf
(bad)
mov
push
call
mov
(bad)
cs
ret
mov
movs
xchg
das
or
jmp
ret
jb
xchg
jg
push
pop
push
sti
or
bound
outs
loope
xor
pop
lock
(bad)
mov
(bad)
(bad)
push
pop
imul
add
aas
sbb
mov
fnstsw
mov
cwde
add
repz
mov
test
ja
(bad)
jmp
jns
pop
imul
scas
dec
mov
inc
xor
(bad)
(bad)
fld
call
or
mov
jg
iret
mov
or
lds
xchg
dec
mov
cld
stos
imul
mov
and
fwait
mov
dec
or
repz
jo
jmp
ds
(bad)
(bad)
(bad)
dec
push
lahf
(bad)
xor
stos
mov
sub
jecxz
int
mov
mov
(bad)
call
(bad)
inc
lahf
dec
and
cmp
push
cmp
mov
fbstp
loop
sub
mov
std
mov
scas
pop
xor
or
outs
push
mov
xchg
loopne
loopne
mov
movs
repz
stos
cmovs
js
aas
cwde
js
test
retf
xor
enter
fbld
iret
cmp
mov
test
(bad)
(bad)
(bad)
(bad)
ffree
add
adc
mov
sub
xchg
mov
popf
aad
xor
mov
(bad)
(bad)
call
rcr
cmp
lock
adc
neg
test
xchg
xor
call
pop
xor
scas
call
(bad)
xchg
(bad)
ds
adc
xor
ds
(bad)
and
push
(bad)
fbstp
push
mov
out
pop
cwde
ins
fmul
cwde
add
ins
mov
cmp
(bad)
(bad)
push
shl
pushf
shl
push
push
cmp
(bad)
jns
mov
test
pop
icebp
icebp
(bad)
(bad)
mov
mov
add
cmp
mov
fisub
cs
sbb
sbb
mov
movs
cmp
frstor
push
pop
xor
or
in
call
pop
and
loope
loop
iret
stos
test
fs
mov
dec
nop
adc
mov
adc
xchg
and
pop
jl
sar
icebp
cmc
dec
outs
xchg
in
retf
xlat
(bad)
(bad)
jmp
mov
enter
je
les
(bad)
lods
mov
jp
cmc
jmp
mov
int
ins
bound
dec
xchg
int
(bad)
(bad)
jmp
add
or
stos
inc
mov
icebp
cld
mov
ds
cwde
mov
mov
or
loop
daa
push
bound
pop
inc
loope
ss
mov
sbb
fidivr
cmps
jb
(bad)
(bad)
jg
push
jg
retf
loope
retf
inc
sbb
sbb
sub
jmp
mov
push
xor
xchg
not
std
or
sti
sub
or
(bad)
(bad)
(bad)
in
mov
loope
and
in
out
push
fstp
xor
mov
mov
mov
pop
(bad)
(bad)
mov
pop
sub
xor
jg
xchg
lods
fstp
test
sar
outs
cld
(bad)
lock
sbb
dec
loopne
mov
imul
addr16
jmp
stos
fs
cld
push
fwait
lods
cmp
je
push
adc
and
lods
inc
call
inc
idiv
das
xchg
sbb
and
add
pop
in
or
pop
dec
adc
(bad)
in
sar
dec
cwde
mov
pop
out
(bad)
(bad)
(bad)
dec
or
xchg
and
lahf
xchg
test
or
pop
mov
(bad)
(bad)
(bad)
call
push
cmp
xchg
jmp
retf
scas
ss
sar
ss
mov
mov
cmp
pop
call
sub
add
aaa
sub
mov
mov
loopne
mov
fs
push
xchg
cli
mov
fbld
xor
push
imul
out
fild
mov
sub
fisttp
xchg
bound
xchg
mov
call
mov
fldenv
call
jmp
cli
loop
dec
fnsave
pop
cwde
xor
sub
(bad)
(bad)
out
scas
xchg
stos
in
dec
push
pop
dec
fucomp
sub
mov
adc
test
scas
jns
stos
inc
(bad)
jo
call
stos
pusha
mov
xor
mov
cmp
dec
push
cld
call
bound
test
call
icebp
in
cmps
cmp
dec
aam
fcmovne
mov
fild
(bad)
(bad)
(bad)
mov
nop
jb
cli
arpl
xchg
data16
call
out
sub
lahf
push
sub
ret
pushf
fcomip
(bad)
call
sub
fisubr
mov
cmc
out
add
lock
fistp
jmp
outs
scas
jmp
clc
(bad)
mov
and
dec
push
cdq
adc
mov
fdiv
rcr
cmc
movs
mov
(bad)
inc
fwait
jmp
sbb
mov
cmps
sbb
pop
jmp
iret
or
ja
mov
std
rcl
sbb
mov
(bad)
(bad)
(bad)
jmp
daa
test
adc
wbinvd
js
dec
jp
pop
out
mov
cmp
jb
sub
idiv
(bad)
jmp
mov
jo
movs
out
dec
sub
xor
pusha
cmps
or
(bad)
(bad)
mov
push
sbb
ins
mov
hlt
add
pop
call
cs
pop
(bad)
(bad)
(bad)
(bad)
fidiv
iret
cmp
fwait
push
jle
mov
mov
or
cmp
(bad)
cmp
mov
div
xrelease
das
inc
test
(bad)
lock
pop
inc
ret
mov
mov
inc
pop
or
and
mov
pop
xchg
sub
cmp
pop
push
dec
sti
or
(bad)
test
pop
pusha
push
pusha
(bad)
call
pusha
fbstp
pusha
movs
movs
pop
mov
fbld
call
lock
mov
enter
sub
pop
std
jmp
(bad)
test
sbb
cld
mov
mov
sahf
push
add
sub
mov
loopne
call
jmp
(bad)
(bad)
(bad)
call
retf
cmp
cmp
rol
mov
arpl
movs
pop
xchg
dec
mov
pop
xchg
push
mov
(bad)
stos
int3
cmp
push
xchg
sar
mov
mov
dec
loop
clc
daa
lahf
fsubr
push
fld
rcr
ins
fwait
(bad)
fwait
push
jmp
jg
(bad)
call
pop
push
cmp
inc
jmp
push
pop
retf
popf
out
shl
mov
jae
in
jg
xor
lock
jle
jno
retf
push
cmp
cwde
or
mov
aam
dec
cmp
test
call
movs
cmps
fcomp
in
adc
push
lods
mov
lods
cli
int3
mov
and
add
mov
adc
mov
inc
mov
jl
(bad)
(bad)
(bad)
jmp
sub
loopne
repnz
pop
sbb
jns
mov
jmp
mov
lock
je
stos
mov
cmp
cmps
and
pop
or
jmp
adc
sub
dec
test
inc
fwait
loop
retf
fidiv
dec
mov
movs
call
inc
jcxz
hlt
call
xor
mov
pop
hlt
dec
dec
xchg
stc
test
fbld
sbb
hlt
cmp
(bad)
call
cwde
jmp
xchg
mov
pop
jp
or
adc
mov
jge
ds
mov
push
(bad)
cmc
inc
lds
bound
push
jmp
mov
push
and
call
test
add
jno
test
sub
(bad)
scas
lock
(bad)
call
dec
nop
pop
push
mov
lock
in
mov
or
inc
test
mov
in
mov
(bad)
push
cmc
jns
inc
dec
clc
push
ds
lahf
ds
(bad)
(bad)
(bad)
dec
xor
rol
and
(bad)
cmp
cdq
sti
cmp
mov
iret
stc
sub
(bad)
(bad)
jmp
mov
cs
sub
cmp
(bad)
stos
ja
stos
and
jp
pop
(bad)
mov
dec
ror
lods
stc
in
iret
cmp
loopne
xor
cmps
mov
mov
inc
std
(bad)
(bad)
cmp
cdq
inc
mov
cld
sub
xchg
mov
mov
sbb
inc
push
jl
sbb
jge
fdivr
ficomp
inc
call
sbb
popa
ins
call
cmp
(bad)
(bad)
call
xchg
pusha
scas
(bad)
pushf
ret
aaa
movs
test
mov
or
add
gs
hlt
into
(bad)
mov
add
jl
scas
mov
cmp
adc
retf
adc
test
xor
mov
ret
adc
out
fcom
dec
int3
push
nop
or
mov
loop
or
(bad)
call
(bad)
out
sbb
cs
add
int3
sbb
xor
lea
xchg
push
lahf
jmp
stos
sar
pop
fwait
js
out
jle
mov
inc
clc
inc
jno
outs
xor
sar
movs
mov
fdivrp
call
idiv
sar
stc
pop
sti
call
jl
sar
sub
fs
(bad)
call
or
and
or
and
dec
xor
cmp
fsubrp
or
(bad)
sti
xor
sub
inc
stos
stos
iret
mov
pusha
sahf
(bad)
(bad)
(bad)
jmp
sahf
aaa
cmp
mov
mov
mov
mov
in
stc
int
fst
(bad)
stos
dec
iret
dec
xchg
shr
imul
(bad)
call
mov
mov
ins
sub
sbb
aam
cli
sub
jp
repnz
inc
inc
pop
scas
dec
scas
std
outs
into
iret
cld
jae
or
call
dec
push
push
mov
add
jp
mov
leave
pusha
mov
mov
(bad)
(bad)
jmp
jo
pushf
shl
sahf
fs
mov
in
mov
repnz
jbe
jmp
mov
into
(bad)
pusha
jecxz
add
test
xchg
mov
add
or
sub
(bad)
push
hlt
(bad)
(bad)
(bad)
jmp
jmp
call
sub
sbb
mov
stos
inc
jbe
mov
sub
adc
stos
push
loop
inc
movs
iret
std
pop
out
stos
movs
ins
lahf
cmp
(bad)
cmps
movs
sbb
dec
dec
ss
movs
out
ins
dec
jmp
outs
jp
jmp
movs
out
repz
dec
xor
and
idiv
pop
xchg
icebp
mov
mov
es
fidivr
fistp
or
stos
and
fcmove
cmp
ror
(bad)
call
push
dec
inc
pop
xor
rol
cmp
jmp
popa
fstp
icebp
ss
jbe
cmps
adc
jbe
mov
dec
or
(bad)
(bad)
jmp
or
mov
rcr
sbb
xlat
outs
sbb
and
arpl
or
sti
(bad)
(bad)
(bad)
jmp
mov
adc
nop
push
jae
add
mov
push
xchg
pop
mov
and
pushf
dec
mov
sbb
loop
test
dec
mov
jb
repnz
sub
out
sbb
(bad)
call
cmp
movs
fidivr
mov
mov
into
xchg
mov
je
xor
loopne
retf
jb
push
leave
clc
scas
and
jb
ja
and
inc
mov
ret
or
or
sti
adc
push
dec
or
addr16
xor
mov
mov
or
sub
cmp
ds
sub
cmc
push
xor
scas
int3
or
(bad)
(bad)
jge
mov
icebp
cs
xchg
sub
adc
mov
(bad)
aaa
cmps
adc
lock
(bad)
push
fnstenv
mov
jmp
in
(bad)
test
dec
stos
mov
pop
mov
mov
mov
sar
(bad)
(bad)
(bad)
push
mov
sbb
sbb
xor
(bad)
dec
and
pop
xor
loopne
xor
(bad)
(bad)
dec
cmp
out
adc
push
push
sub
add
lea
and
rcl
cli
pop
push
pop
test
in
jno
or
test
(bad)
jmp
cli
xor
cmps
sbb
outs
nop
push
aaa
pusha
mov
lods
ret
add
cmp
(bad)
(bad)
dec
(bad)
jnp
jmp
jnp
sub
xchg
sub
push
push
pop
jb
imul
inc
inc
jge
lods
fwait
movs
aad
cmps
adc
add
mov
call
(bad)
(bad)
(bad)
jmp
push
popa
(bad)
clc
clc
shl
mov
cmp
rol
out
ror
mov
fnsetpm(287
std
scas
xchg
mov
jnp
sbb
fsub
or
gs
cmc
pop
mov
(bad)
(bad)
(bad)
(bad)
jmp
ins
jo
pop
push
sbb
and
scas
sub
fidiv
cld
push
push
jmp
lods
outs
leave
lods
and
mov
sbb
(bad)
fimul
mov
jg
iret
lea
stc
adc
fwait
in
sub
fdivr
mov
cli
out
xor
lods
test
xor
push
iret
mov
mov
(bad)
call
fisub
cmp
adc
cmp
scas
pop
push
out
pop
pop
pushf
test
add
adc
mov
dec
pushf
add
call
mov
push
xchg
(bad)
in
cmp
inc
cld
pushf
fsub
aam
test
jno
dec
retf
fcmovb
(bad)
mov
cmc
push
or
out
jp
mov
and
sbb
rol
pop
adc
(bad)
(bad)
push
in
lock
push
retf
push
add
mov
cmps
lea
icebp
fnsave
es
(bad)
icebp
ins
push
mov
stos
test
sub
or
ficomp
(bad)
(bad)
jg
pushf
jns
push
mov
mov
add
lahf
pop
fistp
test
(bad)
in
mov
dec
stos
(bad)
(bad)
(bad)
call
sub
sahf
xchg
xor
pop
ret
mov
mov
sbb
and
mov
(bad)
or
fsubr
lods
(bad)
mov
retf
imul
out
out
jecxz
iret
sar
or
jmp
ror
lock
sub
inc
fwait
sbb
arpl
(bad)
fst
in
push
and
mov
cmp
add
(bad)
(bad)
jmp
sbb
fiadd
addr16
scas
mov
pusha
shl
test
cwde
jo
cdq
cmps
xchg
call
out
mov
jns
or
add
scas
cdq
push
cld
(bad)
mov
mov
call
cmp
push
push
mov
sub
jbe
sbb
test
fist
mov
js
dec
aas
pop
loop
sbb
repz
(bad)
push
loopne
jae
pusha
je
fwait
fs
int
lods
pop
sub
call
(bad)
(bad)
call
popf
out
xor
and
loopne
test
dec
xchg
add
push
jne
mov
or
add
mov
or
push
lods
jmp
dec
mov
or
pop
or
push
(bad)
(bad)
inc
movs
jne
pop
dec
ins
daa
mov
rcr
mov
arpl
sub
in
push
and
cmp
adc
push
outs
fst
sar
std
stc
push
add
mov
test
scas
cmp
fld
jno
(bad)
out
xchg
lea
mov
pop
pop
pop
xor
mov
outs
dec
stos
cmp
jge
cmps
lds
jb
jecxz
mov
sbb
aad
out
sub
movs
inc
inc
pop
jns
cdq
lds
cmp
fsub
pop
fcomip
(bad)
(bad)
fldcw
mov
jecxz
das
ds
fcomp
fwait
jb
add
fwait
and
jmp
sub
jbe
sub
je
repnz
mov
jmp
adc
call
xchg
push
mov
xor
daa
gs
ret
mov
(bad)
cmp
push
clc
aad
hlt
mov
stos
int3
cmp
dec
aam
ds
and
mov
mov
sar
out
and
sub
push
mov
leave
test
out
and
(bad)
(bad)
jnp
hlt
sti
int3
mov
jne
stos
icebp
jne
ficom
jb
aad
sub
xor
ret
jmp
stos
stos
(bad)
dec
xor
xchg
clc
jno
stos
cmp
call
cmp
sbb
inc
lahf
cli
call
xor
fucomip
in
dec
es
dec
xchg
lds
scas
sub
sbb
sbb
movs
jmp
(bad)
inc
fdivr
sub
lock
mov
add
sub
cs
jecxz
aaa
pop
loopne
xchg
jbe
loop
and
into
cmps
(bad)
(bad)
(bad)
mov
daa
jmp
fcom
clc
cld
sub
add
dec
imul
push
mov
mov
loope
adc
and
lahf
js
cld
call
(bad)
xchg
and
push
sub
dec
push
mov
cmps
nop
xor
pop
pop
jmp
mov
enter
sbb
ds
(bad)
(bad)
(bad)
mov
jmp
sti
jbe
movs
pop
sbb
cmp
fcmovne
cs
outs
sub
dec
(bad)
jmp
cmp
movs
sbb
mov
pop
and
pop
adc
mov
out
xchg
stos
fisttp
xor
jmp
sti
jmp
or
jle
adc
aaa
(bad)
(bad)
mov
in
pusha
and
aad
lahf
cmc
fsub
xor
out
(bad)
inc
clc
ins
mov
call
(bad)
in
(bad)
call
xchg
ja
pop
push
xor
adc
in
rcr
(bad)
(bad)
(bad)
push
inc
into
jecxz
hlt
cmc
fs
xor
cmps
call
divps
bound
mov
mov
(bad)
fistp
scas
mov
jne
clc
dec
lock
push
cmp
stos
les
fsubr
mov
pop
mov
inc
outs
sbb
mov
nop
cli
mov
add
cmp
test
cwde
in
add
inc
cmp
mov
call
dec
mov
xor
(bad)
std
mov
pop
push
inc
sahf
data16
ins
ficom
jnp
(bad)
inc
call
aaa
call
dec
into
call
cmp
(bad)
(bad)
cmp
mov
pop
or
test
pop
push
or
mov
add
cld
(bad)
(bad)
(bad)
inc
pop
push
loop
and
mov
(bad)
aas
sub
xchg
loope
imul
jg
sub
push
mov
mov
xchg
hlt
cli
pop
iret
and
sub
jns
inc
pop
mov
dec
jp
cmp
retf
xchg
push
ficom
add
test
adc
cmp
rcl
push
or
dec
scas
adc
fwait
sbb
movs
aam
mov
loopne
pop
stos
cmp
or
inc
mov
call
mov
or
jmp
cmp
femms
cmp
pop
test
push
jmp
cs
pop
sbb
scas
cmp
push
mov
push
imul
scas
inc
hlt
mov
call
retf
lods
lock
adc
xchg
scas
iret
cmp
ret
push
call
pop
push
sbb
xchg
add
call
mov
test
push
mov
cli
dec
aas
scas
mov
daa
cmps
jnp
jnp
sbb
sub
(bad)
repnz
cmps
push
div
aam
cmps
mov
fwait
cmp
test
mov
(bad)
(bad)
inc
stos
xor
push
sub
test
enter
or
sub
imul
push
inc
ja
mov
jmp
add
inc
jmp
pusha
adc
dec
cli
je
mov
(bad)
(bad)
dec
repnz
jmp
lock
fsub
retf
cdq
inc
adc
sbb
and
xchg
lock
jg
mov
cli
(bad)
(bad)
out
jl
jp
cli
jno
pusha
push
push
dec
and
dec
je
sub
adc
add
push
sbb
(bad)
(bad)
call
pop
sbb
or
pusha
call
dec
xor
mov
mov
jmp
mov
(bad)
push
pusha
stos
out
pop
mov
pop
and
jmp
fidivr
inc
cld
ins
and
mov
and
jmp
fisttp
dec
mov
fild
mov
cs
int3
mov
and
mov
push
cdq
sub
aam
clc
push
sub
and
sbb
push
fisub
dec
fist
sub
dec
out
sub
sahf
test
(bad)
dec
sub
pushf
add
mov
jae
mov
loop
(bad)
lds
sub
int3
nop
add
cmp
aaa
xchg
inc
sbb
pop
out
mov
test
mov
lods
scas
and
sub
dec
sub
jmp
mov
mov
push
enter
and
stc
mov
push
cld
push
push
cmps
ffreep
fisubr
ficom
outs
add
stos
mov
cli
cld
leave
bound
jle
or
sbb
mov
pop
mov
sbb
xor
out
imul
xlat
cmps
xchg
xchg
xchg
xchg
lahf
sbb
mov
jns
push
jb
pusha
pop
xchg
into
clc
mov
jae
add
std
jge
cmp
xchg
mov
dec
jmp
mov
fwait
outs
call
es
es
mov
dec
jmp
xor
jb
jg
xchg
jo
mov
out
and
push
xchg
ret
pop
jmp
test
test
out
ja
push
xchg
cmp
(bad)
fcomip
sub
mov
mov
jle
xor
xchg
loope
stos
stos
xor
push
fisub
rcl
(bad)
dec
rol
push
mov
fcomp
fldcw
or
mov
aaa
sub
mov
ins
push
fcomp
dec
paddw
ds
cmp
lahf
es
mov
mov
fild
sbb
in
or
repnz
(bad)
(bad)
(bad)
mov
movs
(bad)
sub
sbb
pop
jg
iret
cdq
dec
mov
shl
inc
stos
inc
call
(bad)
(bad)
dec
test
mov
repnz
scas
push
movs
mov
cmps
into
cmp
adc
jns
jno
or
daa
jmp
sub
pop
xor
inc
test
out
fisttp
sub
cli
and
cmp
mov
push
aad
popf
adc
dec
jb
jl
fld
scas
xchg
out
sti
(bad)
(bad)
(bad)
inc
or
xor
mov
jnp
(bad)
mov
test
push
jbe
(bad)
loopne
push
and
(bad)
inc
jecxz
mov
das
cwde
pop
aam
popf
ret
dec
cmp
dec
mov
call
add
test
data16
push
pop
test
sti
push
lock
mov
push
adc
mov
cs
shl
or
test
sbb
scas
pop
adc
test
pop
lods
xlat
scas
(bad)
jl
mov
(bad)
(bad)
dec
aaa
out
fwait
out
adc
mov
push
fnstcw
cmp
lahf
jo
(bad)
mov
adc
jmp
(bad)
adc
mov
mov
jle
(bad)
(bad)
(bad)
jmp
mov
sub
push
fisttp
stc
out
sub
div
fs
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
xchg
sbb
add
push
(bad)
std
mov
push
dec
jb
test
jmp
push
std
dec
out
sbb
shr
xor
jnp
out
(bad)
(bad)
(bad)
call
xor
add
dec
sub
jns
cdq
push
fisub
clc
test
jb
enter
sahf
loop
aad
pop
cli
sahf
and
mov
jmp
cmp
mov
jmp
and
(bad)
sub
mov
sti
sbb
mov
out
bound
cmps
mov
lahf
pushf
adc
mov
push
pop
outs
(bad)
(bad)
jg
mov
fucomi
aas
fst
mov
pop
mov
dec
(bad)
(bad)
(bad)
inc
sbb
std
sar
test
data16
jle
jmp
loopne
data16
dec
sub
jae
movs
pop
fadd
(bad)
mov
lahf
push
jne
inc
mov
push
or
or
lods
popa
push
pop
mov
sub
(bad)
mov
mov
jmp
int
sbb
add
pop
cwde
test
jmp
mov
cmp
jb
mov
mov
mov
dec
jne
hlt
sub
(bad)
dec
pop
fwait
jbe
sbb
movs
mov
jg
sbb
nop
add
sbb
scas
or
jecxz
inc
adc
or
pop
dec
sbb
pop
iret
pop
addr16
fwait
sbb
push
test
sub
cmps
stos
xchg
out
enter
(bad)
jmp
call
loope
dec
sar
iret
lahf
mov
dec
jp
lahf
fisttp
test
lock
add
ins
dec
mov
jmp
(bad)
jmp
shl
pop
lods
daa
cmp
jne
xchg
mov
(bad)
fist
xchg
nop
imul
sub
jge
mov
clc
sbb
(bad)
(bad)
dec
sbb
in
fsub
or
int3
retf
jg
movs
cmp
and
retf
call
mov
push
sbb
call
dec
pop
stos
inc
jmp
loopne
or
leave
ja
stos
shr
(bad)
(bad)
(bad)
mov
data16
push
pushf
scas
bound
test
sbb
sub
das
test
cmp
or
aaa
outs
jmp
mov
cmp
stos
push
dec
pop
enter
(bad)
(bad)
out
adc
lods
sub
retf
mov
cs
stos
mov
scas
out
jecxz
(bad)
call
or
shr
pop
repnz
adc
jmp
jge
jmp
sbb
mov
iret
out
dec
in
or
or
retf
pushf
jne
lahf
inc
xchg
xor
and
(bad)
(bad)
(bad)
mov
push
hlt
mov
mov
loope
and
dec
mov
xor
or
mov
and
jg
test
int3
pop
pop
lahf
mov
push
sub
mov
cs
lock
(bad)
jmp
xchg
xlat
test
xchg
ins
xchg
push
fs
mov
sbb
imul
sub
pop
sub
jmp
sub
mov
pop
(bad)
jp
pop
xchg
das
jb
imul
xor
cmp
loop
mov
(bad)
jg
mov
fidiv
data16
sub
lock
mov
pusha
lods
xchg
in
retf
ror
mov
(bad)
dec
sub
test
mov
test
push
adc
ja
out
cmp
hlt
(bad)
(bad)
clc
mov
jmp
pop
retf
pop
hlt
and
jp
sub
ja
jmp
mov
(bad)
(bad)
jmp
outs
lods
dec
sbb
out
pop
mul
in
cli
scas
sub
and
fdivr
(bad)
(bad)
(bad)
cmc
mov
leave
add
xor
test
jle
cld
mov
jg
dec
repz
in
dec
pop
inc
lods
lahf
push
std
fisubr
xchg
stos
push
jmp
mov
(bad)
cmp
mov
jno
sbb
pusha
cmp
rol
int3
push
push
and
cld
(bad)
jmp
dec
cs
cmp
push
adc
dec
into
pop
les
xor
push
mov
inc
movs
les
(bad)
push
in
mov
scas
push
retf
mov
movs
mov
test
and
mov
or
xchg
jl
mov
call
iret
mov
mov
sub
mov
dec
or
pushf
push
and
ins
js
test
(bad)
jmp
leave
ins
and
push
push
mov
fbstp
lods
xor
(bad)
jg
les
and
sbb
sbb
test
call
and
xchg
or
aaa
out
lahf
sbb
xor
sahf
mov
xchg
push
ret
lock
mov
push
cmp
jo
cdq
cmp
je
stos
mov
mov
rcl
(bad)
push
push
scas
ror
call
pop
or
jnp
mov
xlat
(bad)
mov
cs
sub
sbb
jnp
and
sbb
add
(bad)
mov
aam
fwait
inc
stc
mov
jmp
sbb
(bad)
push
push
jb
ret
push
cmp
sahf
in
out
jmp
jmp
dec
or
ret
jo
inc
call
sbb
xchg
mov
pop
ins
out
(bad)
sub
inc
scas
pop
pop
fnstenv
(bad)
jmp
adc
jb
outs
sar
outs
cdq
stc
shl
scas
xchg
ds
call
xchg
jbe
mov
mov
mov
inc
bound
add
or
out
(bad)
(bad)
(bad)
jnp
ror
mov
mov
sar
dec
and
jmp
and
cdq
mov
and
adc
movs
sar
dec
adc
xchg
popa
or
es
ins
cwde
jmp
rcr
(bad)
mov
jmp
xchg
or
mov
sti
sar
(bad)
(bad)
out
push
call
lea
aas
mov
push
push
loopne
mov
pushf
invlpg
(bad)
(bad)
jg
stos
sub
fsub
sar
call
retf
dec
and
mov
mov
rcl
into
mov
test
div
sbb
fwait
sbb
(bad)
push
add
add
cmc
stos
outs
mov
or
in
mov
sub
xchg
mov
frstor
mov
movs
cmp
movs
stos
dec
sbb
xor
(bad)
(bad)
(bad)
jmp
cs
or
mov
cmp
jb
out
iret
xchg
dec
int
popf
std
mov
stos
cmp
xchg
(bad)
(bad)
call
or
cmp
cs
mov
iret
cs
std
push
push
add
push
sbb
sub
dec
out
mov
xchg
sub
sub
mov
adc
ret
xor
leave
dec
push
add
ror
(bad)
fild
jnp
bound
out
sahf
mov
pop
(bad)
(bad)
mov
les
ja
or
int3
sub
adc
aad
in
(bad)
jb
mov
loope
cld
(bad)
dec
scas
inc
call
mov
xchg
push
repz
sub
lods
push
mov
push
arpl
jg
popa
cwde
test
hlt
xor
addr16
(bad)
mov
jmp
xor
sub
cmps
cmp
mov
ins
sbb
xor
xchg
sub
pop
ret
ds
push
clc
mov
jle
cmp
(bad)
push
pop
add
aaa
(bad)
call
retf
jne
sbb
(bad)
retf
dec
adc
(bad)
idiv
push
jmp
jne
xchg
leave
movs
repnz
nop
xchg
adc
ds
imul
ss
mov
or
arpl
xchg
lods
loop
xchg
or
jo
pop
pusha
jns
sub
std
mov
cld
push
jnp
adc
pop
cmp
mov
sahf
or
inc
pop
hlt
push
mov
sbb
xor
adc
mov
xchg
imul
sub
sbb
je
jle
stos
idiv
test
out
inc
cmp
mov
icebp
jmp
loop
aam
jmp
lods
push
push
xor
scas
loopne
hlt
mov
xor
imul
das
pushf
popf
pop
cmps
jnp
or
xlat
or
out
add
cmp
cli
mov
xor
lock
scas
mul
dec
mov
sar
cmps
scas
ja
push
mov
jmp
inc
push
(bad)
cmps
push
ror
xchg
xor
lods
ret
sbb
ror
ins
inc
mov
dec
cmps
loop
inc
pushf
popa
mov
jb
int
lock
ss
mov
mov
jg
adc
or
mov
ret
mov
dec
enter
(bad)
cmp
xor
mul
lods
pushf
out
sub
jb
ret
(bad)
(bad)
(bad)
sti
imul
sbb
pop
sub
cmps
mov
sub
cli
inc
(bad)
cmp
(bad)
fisttp
inc
sub
in
(bad)
xchg
mov
sahf
push
pop
add
(bad)
out
mov
popf
adc
test
sahf
adc
into
inc
jno
(bad)
jg
into
mov
mov
cmp
retf
mov
sub
cmp
in
pop
call
movs
jmp
push
sub
call
loopne
repnz
sbb
sbb
inc
call
and
daa
lods
fdiv
push
pop
enter
push
sar
daa
dec
jl
sbb
mov
rol
adc
push
xchg
pop
or
int3
scas
out
add
cmps
nop
and
or
cmps
push
in
(bad)
(bad)
push
or
cwde
leave
mov
pop
test
sub
cwde
jae
shl
mov
mov
(bad)
(bad)
(bad)
(bad)
cmp
imul
cld
gs
fdivrp
xchg
jg
retf
test
push
jmp
cmps
into
das
mov
mov
test
push
push
adc
sbb
(bad)
pop
(bad)
cmp
ja
sub
imul
inc
fsub
in
jge
cmp
ds
lahf
jnp
(bad)
jg
mov
adc
jns
mov
sbb
lds
cmp
jmp
loopne
jmp
das
add
enter
(bad)
mov
(bad)
(bad)
call
je
push
ins
xchg
stos
mov
sbb
scas
call
mov
cld
xchg
in
aam
fbstp
(bad)
(bad)
jmp
xor
(bad)
push
js
cmp
gs
sub
loop
mov
jecxz
cmp
cmp
cmp
push
ficom
mov
xor
xchg
inc
shl
(bad)
(bad)
mov
cdq
inc
fstp
sbb
xor
bnd
(bad)
jmp
sub
push
sbb
pop
ds
xchg
lahf
cmp
(bad)
cdq
sar
sub
aaa
cmps
inc
scas
(bad)
(bad)
call
enter
push
xchg
mov
mov
loope
cmp
inc
(bad)
std
test
adc
jmp
scas
rcr
pop
data16
and
aad
fldcw
or
(bad)
jg
or
cld
mov
mov
cmp
cmp
lahf
push
add
(bad)
in
push
mov
shl
jecxz
jp
(bad)
inc
sub
fisttp
ja
retf
(bad)
or
push
and
push
jg
jns
or
(bad)
(bad)
(bad)
jmp
cmc
sub
shr
and
test
mov
into
shl
(bad)
call
fwait
sub
(bad)
call
lods
pop
push
out
jecxz
or
dec
dec
and
mov
icebp
int
pop
jo
jecxz
lahf
cmp
push
mov
dec
(bad)
(bad)
mov
cmp
ret
in
xchg
or
dec
mov
rcr
xchg
or
cmp
jmp
mov
inc
dec
jle
mov
cmps
cld
movs
inc
retf
sbb
push
ss
out
popa
mov
loop
push
rcr
sub
push
sub
push
outs
jg
(bad)
call
aaa
and
gs
fwait
push
jb
mov
aam
mov
pop
cmp
(bad)
call
fstp
xchg
into
mov
stos
stos
mov
and
adc
ds
(bad)
jmp
push
cmp
jecxz
mov
lods
bound
add
mov
(bad)
(bad)
(bad)
mov
mov
sub
lock
call
adc
mov
(bad)
jnp
je
(bad)
jg
push
pop
mov
enter
pop
push
pop
jo
adc
mov
hlt
mov
je
mov
lock
mov
add
fsub
xchg
pop
pop
xchg
mov
aad
push
stos
(bad)
(bad)
(bad)
jmp
cmp
ficomp
pusha
or
std
mov
arpl
mov
xor
jg
dec
cwde
fisttp
xchg
cmps
call
xchg
mov
mov
xchg
out
jmp
(bad)
(bad)
cmp
fild
or
mov
repnz
xchg
movs
(bad)
ds
cmps
jmp
sub
gs
(bad)
cmp
add
cmp
ins
push
(bad)
dec
clc
(bad)
(bad)
fnstenv
sub
test
jmp
icebp
cmp
push
call
std
add
mov
mov
push
nop
movs
adc
(bad)
dec
sub
(bad)
cmp
add
ja
(bad)
fild
dec
fisttp
sqrtps
test
cld
jnp
fcomp
(bad)
jmp
icebp
cli
call
xor
(bad)
jmp
call
and
lods
loop
xchg
mov
ins
cmp
sub
sbb
leave
dec
fisub
xor
test
movs
(bad)
(bad)
(bad)
inc
in
sbb
or
rol
pop
lock
pop
scas
sahf
das
fidivr
mov
mov
or
scas
jmp
mov
smsw
call
fwait
lods
cmps
(bad)
mov
and
fld
xchg
sbb
sub
inc
adc
mov
dec
mov
call
sbb
das
loop
mov
xor
outs
and
js
xchg
dec
retf
call
inc
or
mov
mov
mov
mov
call
jmp
movs
movs
sub
cld
mov
and
cmp
outs
stos
push
into
in
(bad)
movs
mov
dec
test
sar
outs
and
mov
and
xchg
test
and
jecxz
je
fisubr
in
mov
(bad)
(bad)
mov
test
dec
jg
mov
stos
inc
fstp
fmul
aaa
sub
jg
inc
cld
mov
outs
cwde
outs
sub
inc
(bad)
fiadd
(bad)
(bad)
(bad)
call
cmp
adc
scas
pop
leave
mov
xchg
js
jae
xor
test
push
lods
dec
(bad)
(bad)
in
dec
sbb
sub
les
aad
gs
jecxz
in
add
hlt
scas
call
ret
xchg
cs
xor
and
clc
cld
(bad)
cmp
(bad)
cmp
xchg
xor
into
mov
and
movs
inc
lahf
(bad)
push
clc
das
pop
sar
sbb
jmp
add
(bad)
jmp
mov
mov
aas
mov
not
pop
mov
inc
mov
shr
(bad)
(bad)
mov
enter
leave
mov
jl
push
adc
xchg
push
xor
popf
(bad)
(bad)
(bad)
jmp
mov
jmp
lods
in
mul
and
jns
clc
adc
mov
clc
(bad)
(bad)
push
aaa
out
push
add
rol
sbb
mov
xor
or
(bad)
inc
aam
pop
dec
inc
mov
mov
pop
lahf
(bad)
(bad)
(bad)
(bad)
clc
iret
push
test
cmp
stos
xchg
sbb
mov
fdivr
or
push
pop
pop
xchg
nop
xor
mov
ret
mov
(bad)
or
cs
(bad)
jmp
std
adc
jg
call
push
push
loop
repnz
lods
inc
mov
(bad)
mov
ins
sub
(bad)
(bad)
(bad)
in
sub
add
sub
push
inc
test
test
xchg
mov
ficomp
dec
adc
xchg
or
ins
mov
pop
bound
(bad)
popa
push
or
pop
jb
(bad)
jg
sub
je
adc
retf
cwde
adc
pop
enter
lods
and
das
mov
leave
ret
outs
lods
cmp
test
cmc
jg
(bad)
sbb
or
sahf
(bad)
mov
outs
mov
(bad)
(bad)
(bad)
jmp
inc
js
test
sbb
pop
(bad)
int3
push
inc
call
add
test
or
dec
mov
jmp
(bad)
(bad)
(bad)
jmp
hlt
jmp
lahf
daa
out
clc
mov
jns
fisttp
imul
retf
mov
lahf
or
mov
jl
sbb
mov
(bad)
(bad)
jmp
sub
mov
ror
mov
movs
iret
and
scas
push
cs
stos
(bad)
inc
or
mov
mov
mov
jmp
mov
push
(bad)
(bad)
fcomip
retf
or
adc
sbb
call
pushf
push
pop
(bad)
add
repz
bound
sar
jg
(bad)
push
mov
nop
outs
mov
mov
leave
or
cs
mov
push
dec
and
inc
cmp
jae
xor
dec
inc
scas
adc
mov
(bad)
(bad)
call
mov
clc
jmp
retf
and
add
xor
cmp
jle
stos
fsubr
(bad)
(bad)
push
adc
cli
stos
pop
enter
fwait
(bad)
jmp
xor
mov
retf
xchg
ret
call
scas
(bad)
(bad)
out
jp
push
sub
add
into
shr
sahf
sbb
mov
jmp
jecxz
call
retf
sub
mov
fs
add
inc
mov
adc
sbb
or
or
sub
cmps
and
inc
imul
xchg
add
xor
(bad)
(bad)
(bad)
mov
out
bound
sbb
or
jbe
les
test
repnz
xchg
mov
or
mov
call
ds
push
frstor
imul
jg
(bad)
jmp
push
ins
clc
leave
lods
cld
test
ret
xchg
xor
(bad)
(bad)
(bad)
jmp
shl
pop
test
dec
push
stos
dec
(bad)
retf
sbb
dec
pop
jmp
adc
fcmovb
call
stos
ins
pop
sbb
cmc
mov
and
icebp
cwde
(bad)
(bad)
(bad)
dec
loop
xor
sub
sbb
or
jmp
sub
sbb
scas
cmp
mov
sar
jmp
iret
xchg
sahf
adc
loop
jmp
mov
cmps
jg
push
loop
dec
(bad)
jno
out
call
mov
outs
adc
(bad)
cmp
mov
mov
loop
(bad)
out
loopne
add
push
sub
and
mov
or
pop
ins
push
sti
dec
test
pop
mov
call
mov
ds
mov
ss
(bad)
jg
or
lahf
test
stc
mov
cs
jl
jmp
out
out
and
loopne
(bad)
call
mov
bound
mov
xor
ins
or
jb
xchg
fstp
lahf
pop
xor
cmps
cli
push
sub
jp
push
dec
outs
cs
in
mov
push
and
push
adc
xor
inc
imul
or
cmp
(bad)
(bad)
(bad)
jmp
retf
leave
xchg
clc
into
sub
sbb
fs
ret
cmps
add
ins
test
jg
xor
xchg
mov
jne
scas
jl
std
push
cmp
repnz
enter
adc
fcmovu
mov
xchg
imul
mov
fcomip
(bad)
js
xchg
movs
ins
mov
not
retf
dec
leave
(bad)
jmp
mov
inc
adc
ins
scas
cmp
mov
(bad)
(bad)
(bad)
jmp
fxch
out
bound
fistp
(bad)
mov
mov
mov
lods
or
(bad)
jmp
in
cmp
in
aas
mov
adc
mov
lods
pop
lds
or
jl
(bad)
iret
mov
add
imul
mov
out
(bad)
(bad)
(bad)
(bad)
cli
mov
je
rcl
mov
and
or
dec
xchg
jnp
mov
push
pop
fnstenv
mov
pop
sbb
(bad)
inc
sub
cmp
js
cmp
repz
in
xor
pop
jle
out
add
xor
fisttp
out
jb
jmp
cs
dec
fldenv
or
jle
into
scas
push
loop
(bad)
call
mov
movs
sbb
push
xor
in
icebp
sub
jp
das
js
sar
fild
dec
jbe
pop
test
retf
and
or
movs
inc
sbb
retf
std
sub
cmp
jmp
fnstsw
call
cmp
retf
(bad)
fcomip
dec
cmp
pusha
retf
sub
jno
and
test
cmc
cs
ins
push
cmps
ins
and
icebp
push
xchg
cli
popa
mov
cmps
ja
nop
(bad)
fistp
into
xor
in
jb
jmp
out
add
pop
hlt
jmp
pop
arpl
enter
dec
out
push
int3
mov
iret
mov
mov
cmps
icebp
(bad)
call
loop
mov
sub
out
sbb
adc
call
imul
push
add
(bad)
loopne
xor
std
cmp
(bad)
(bad)
(bad)
(bad)
cld
clc
or
test
cs
jo
popf
mov
push
in
xchg
test
loopne
shr
push
adc
pop
mov
retf
(bad)
(bad)
(bad)
jmp
fst
add
or
test
stc
pop
stos
cmp
leave
(bad)
adc
sub
mov
xchg
icebp
pop
imul
cli
jl
(bad)
jg
sbb
mov
cmp
pop
jno
test
(bad)
(bad)
mov
jo
and
retf
test
mov
xchg
popf
loope
(bad)
(bad)
(bad)
mov
sti
xor
jo
push
call
add
(bad)
mov
jle
daa
xchg
fidiv
icebp
sbb
or
cmp
popa
aaa
mov
fs
jo
call
nop
call
lahf
int3
cdq
jo
call
sub
sti
xchg
sahf
jb
(bad)
cmp
lods
pmaxsw
cli
js
stos
or
sbb
dec
lahf
fisub
pop
stc
ret
dec
mov
(bad)
(bad)
(bad)
jmp
lock
in
retf
int
inc
sub
sub
jbe
pop
lock
out
push
clc
(bad)
(bad)
(bad)
fisub
push
jo
mov
and
add
mov
cmp
dec
imul
(bad)
out
or
sbb
scas
mov
cmp
pop
mov
push
mov
sahf
mov
push
cld
stos
ror
dec
call
sti
lock
ss
das
call
loope
nop
int3
inc
test
pop
ret
sub
cmp
loope
(bad)
jmp
or
xchg
lahf
mov
xlat
mov
les
clc
(bad)
mov
add
sbb
cld
dec
(bad)
mov
pop
fistp
loop
popf
in
push
fisub
(bad)
(bad)
(bad)
push
jne
mov
icebp
mov
mov
lahf
loopne
stc
xchg
lahf
fs
fldl2t
jmp
ds
scas
mov
pop
call
std
(bad)
out
hlt
mov
mov
imul
xchg
(bad)
mov
fisubr
(bad)
(bad)
call
repnz
out
stos
mov
sub
retf
test
scas
into
cmps
fist
das
xlat
into
mov
fwait
jg
(bad)
dec
mov
ficomp
ror
xchg
mov
lods
mov
std
push
inc
dec
jb
out
pop
inc
sbb
mul
mov
jns
sub
lds
mov
jb
inc
lods
(bad)
(bad)
(bad)
jg
popa
fisub
out
sub
sbb
enterw
dec
mov
or
sbb
pop
(bad)
(bad)
(bad)
(bad)
(bad)
clc
inc
mov
cmps
adc
arpl
mov
ss
push
adc
dec
or
(bad)
dec
mov
pop
pop
xchg
pop
sbb
(bad)
(bad)
fbstp
sub
mov
cmp
movs
jbe
retf
scas
enter
fbstp
icebp
jno
cmps
xchg
xor
(bad)
fnsave
jnp
pop
jns
mov
sbb
rcl
lods
enter
addr16
xor
shl
or
cs
sahf
(bad)
stos
stos
push
std
(bad)
jmp
dec
shr
or
dec
push
leave
pushw
pop
mov
adc
(bad)
(bad)
dec
mov
in
add
jmp
mov
sbb
jl
fcomip
call
fcom
popaw
jmp
aaa
xchg
push
ins
sub
xchg
or
cs
lock
call
fstp
retf
stc
retf
retf
stc
fwait
sub
sbb
jmp
add
dec
push
loope
mov
xchg
push
popa
daa
cld
(bad)
(bad)
dec
test
(bad)
call
dec
mov
jle
daa
xor
sahf
push
gs
dec
scas
pop
call
pop
sub
fdivrp
es
es
test
mov
xchg
adc
adc
out
and
push
mov
pop
dec
out
mov
das
pop
mov
jge
pusha
jle
test
fbld
cmps
inc
inc
jmp
stos
or
stos
sub
std
(bad)
in
pop
mov
sub
pushf
mov
jmp
jl
call
jmp
in
fisttp
mov
fs
cwde
int
mov
comiss
add
and
jmp
sub
or
lds
or
pop
xchg
(bad)
mov
out
mov
and
aas
test
mov
data16
pop
(bad)
push
es
pop
ins
adc
inc
sbb
pop
xchg
retf
mov
sub
or
dec
shl
call
lock
mov
push
push
and
push
or
or
test
shr
call
xor
push
pop
mov
enter
mov
outs
pop
pop
sub
fstp
sub
or
add
ds
jl
repnz
adc
or
jg
aad
sub
jo
sub
xchg
sbb
cmp
(bad)
(bad)
jmp
push
push
sbb
sbb
movs
cmp
test
(bad)
push
inc
in
in
cmp
leave
sbb
push
dec
sub
ror
pop
daa
data16
icebp
sub
pop
xor
in
push
(bad)
push
(bad)
mov
outs
add
jmp
in
xor
sbb
gs
push
sbb
push
lock
mov
test
into
dec
shr
add
add
jmp
cmp
sub
add
xor
fucomp
dec
hlt
xlat
cmp
adc
lds
adc
dec
cs
(bad)
mov
(bad)
(bad)
(bad)
inc
cmps
or
cmp
cli
dec
stos
mov
daa
mov
mov
pop
dec
mov
mov
(bad)
cmp
inc
and
out
in
fistp
retf
mov
pop
out
ret
jns
xchg
cdq
jmp
(bad)
(bad)
(bad)
inc
sbb
push
jmp
cmps
xchg
aas
xchg
movs
out
pop
mov
fidiv
mov
mov
jmp
retf
adc
xchg
mov
stos
dec
mov
jb
adc
loope
sbb
movs
bound
or
push
std
or
loopne
fst
fs
mov
push
in
bound
das
xor
xor
mov
aam
sar
dec
(bad)
(bad)
(bad)
jmp
shl
scas
add
imul
pushf
scas
or
jg
sbb
cmps
(bad)
(bad)
jmp
cmp
(bad)
cmp
lea
sub
bound
jp
cmps
test
ja
(bad)
(bad)
fisubr
mov
or
retf
mov
xchg
sahf
jno
and
mov
jb
fisttp
(bad)
(bad)
mov
or
cmp
ds
iret
push
test
sub
cmp
mov
push
push
test
aad
rsqrtps
mov
idiv
repnz
ja
movs
xor
push
nop
(bad)
jg
pop
ret
xchg
jmp
(bad)
(bad)
(bad)
jmp
adc
stos
jne
hlt
xor
std
(bad)
xor
call
mov
(bad)
(bad)
push
fdiv
cli
push
adc
stc
(bad)
cs
mov
fld
mov
iret
inc
ret
jmp
push
popa
xchg
imul
imul
or
dec
cwde
std
loope
jb
dec
aad
push
rol
cmp
out
sub
push
push
outs
(bad)
(bad)
jg
jmp
pop
push
(bad)
retf
out
mov
xchg
jmp
stos
sub
outs
or
sub
(bad)
(bad)
(bad)
jmp
or
mov
call
(bad)
sub
dec
stos
inc
cmp
xchg
sub
movs
enter
loopne
adc
mov
ret
shl
imul
(bad)
(bad)
jg
and
mov
js
or
test
xor
in
mov
add
push
sar
cmps
js
jb
cli
call
fimul
pushf
cdq
inc
cwde
daa
div
dec
movs
pushf
and
add
push
lahf
jmp
call
idiv
jecxz
sar
cmp
in
push
arpl
fwait
mov
jmp
mov
cmp
and
sub
retf
ret
mov
xor
push
mov
lock
bound
call
push
jo
push
daa
lahf
xchg
and
mov
clc
push
push
xor
in
rcl
lock
cmp
das
xchg
push
or
(bad)
std
push
adc
add
mov
jnp
(bad)
(bad)
fild
mov
dec
dec
jne
adc
xor
dec
mov
sub
mov
movs
adc
mov
lds
mov
call
clc
adc
scas
int
mov
into
(bad)
(bad)
(bad)
jmp
sub
stos
int3
push
inc
cmps
sbb
(bad)
sub
xor
jmp
xchg
call
scas
add
xor
dec
mov
sub
cmps
aaa
(bad)
jmp
ret
or
sub
movs
inc
ret
mov
mov
stos
test
mov
pop
pop
addr16
sbb
das
inc
test
or
(bad)
pop
mov
and
lock
rcl
mov
into
clc
movs
dec
inc
(bad)
mov
lock
xor
add
ins
pop
pop
(bad)
inc
push
sub
xchg
leave
sahf
jg
sbb
repnz
rcr
pushf
dec
loope
aaa
retf
mov
push
out
pop
cwde
popa
pop
dec
add
jg
imul
jmp
lods
test
dec
adc
dec
nop
out
call
(bad)
(bad)
cmp
mov
xchg
int
cmps
adc
out
jle
xor
push
clc
call
mov
mov
out
fisubr
jo
vcvtsi2sd
(bad)
(bad)
jmp
lods
sub
xchg
mov
push
int3
mov
stc
sub
push
cmps
push
sbb
cmp
(bad)
(bad)
push
call
push
and
sub
fcos
(bad)
(bad)
out
adc
ficomp
push
movs
call
sub
(bad)
mov
sub
ja
jmp
xor
mov
aad
mov
mov
push
out
(bad)
(bad)
(bad)
dec
sahf
pop
mov
jp
mov
xor
xor
mov
sub
dec
into
(bad)
(bad)
(bad)
(bad)
jmp
jg
pop
fcomi
mov
or
data16
mov
test
(bad)
(bad)
dec
stc
(bad)
mov
stos
cmps
sar
arpl
test
ficomp
jno
ds
enter
scas
dec
lock
(bad)
jmp
jge
jg
mov
jecxz
sbb
ja
sbb
mov
add
push
sub
js
jmp
push
mov
cdq
je
das
cmps
(bad)
(bad)
(bad)
inc
into
xchg
neg
stc
mov
test
push
out
mov
sbb
(bad)
fbld
(bad)
mov
inc
fnstenv
inc
daa
mov
mov
mov
hlt
lods
rol
pop
pop
(bad)
(bad)
(bad)
jmp
aas
aaa
cmp
aam
jmp
pop
in
aas
(bad)
xchg
outs
sbb
jmp
mov
pop
es
mov
ins
lods
movs
cmp
jae
outs
xchg
retf
xchg
cmp
cmps
xor
ss
dec
xor
icebp
adc
dec
pop
adc
jmp
and
pop
(bad)
imul
dec
or
cmc
(bad)
push
enter
xchg
shr
mov
outs
hlt
(bad)
fcmovbe
mov
popa
cli
jmp
mov
(bad)
pop
loop
scas
pop
mov
dec
push
and
outs
in
adc
pop
stos
(bad)
mov
sub
cwde
mov
mov
add
daa
xor
mov
nop
lock
cmps
std
mov
fwait
mov
cmc
sbb
jmp
(bad)
push
(bad)
(bad)
cmp
jo
mov
in
mov
mov
fadd
push
(bad)
cli
sub
push
pop
test
pop
mov
pop
cmps
pop
mov
push
push
mov
push
(bad)
mov
imul
sub
shl
call
pop
adc
xchg
(bad)
mov
les
jmp
(bad)
pop
mov
push
push
pushf
sub
push
add
call
std
dec
jnp
dec
(bad)
addr16
(bad)
jg
cmp
out
das
pop
in
in
push
fwait
sub
popf
fwait
or
adc
mov
xor
cmp
sub
push
xor
and
xchg
cmp
sub
movs
inc
push
push
sar
jmp
mov
mov
sub
(bad)
inc
pop
fs
pushf
and
lahf
fistp
test
lock
popa
rol
scas
sub
mov
(bad)
(bad)
(bad)
call
xor
stos
mov
inc
repz
cwde
clc
in
test
and
(bad)
(bad)
mov
push
(bad)
lods
mov
fsubr
(bad)
jg
inc
cs
xchg
pop
cmps
loopne
loop
xchg
jo
mov
mov
jecxz
mov
retf
loop
bound
cmp
cmc
add
(bad)
jmp
fidiv
iret
repnz
out
mov
cmps
cmp
dec
cmp
shl
mov
repnz
(bad)
(bad)
jmp
cli
jge
push
and
mov
lods
jmp
jo
xor
or
hlt
sbb
jge
imul
scas
adc
(bad)
jmp
in
lods
pusha
loop
fwait
xchg
retf
cmp
daa
stos
xor
dec
mov
cli
cli
stos
out
jb
add
(bad)
jg
lods
fmul
rcr
jmp
ss
push
es
enter
inc
mov
xor
dec
fsubr
sub
push
(bad)
(bad)
(bad)
jg
inc
pop
mov
mov
in
pop
ds
leave
daa
or
and
in
in
mov
loopne
(bad)
fisub
xchg
xchg
call
xor
push
and
xchg
fmul
mov
jmp
clc
retf
retf
xor
in
aas
pop
xor
pop
es
dec
push
(bad)
push
ins
fidivr
retf
jmp
call
lock
xor
sbb
push
cs
les
jnp
(bad)
(bad)
call
sub
mov
xor
jns
test
call
sub
popf
stos
test
sub
(bad)
call
sahf
scas
test
sbb
stos
movs
retf
push
or
xchg
bound
rcr
retf
int
rcr
cld
(bad)
jg
xchg
inc
scas
jl
fisubr
mov
xchg
mov
(bad)
inc
mov
mov
(bad)
jg
sub
in
cs
xchg
jmp
lahf
mov
mov
sbb
cmp
sub
dec
imul
dec
pop
(bad)
scas
sub
lods
or
test
jmp
mov
out
push
call
addr16
adc
push
or
in
lods
mov
stos
adc
icebp
(bad)
call
je
add
stos
mov
mov
dec
and
cli
dec
repnz
mov
xchg
mov
mov
call
or
dec
out
mov
ss
mov
push
sub
clc
mov
and
push
retf
and
mov
loop
mov
pop
ror
cmps
cmp
loopne
aad
cmp
dec
jmp
cld
ins
pop
retf
(bad)
(bad)
jg
xor
(bad)
fisttp
jle
cs
adc
sar
outs
xchg
call
jmp
sub
cmp
inc
mov
cmps
adc
jmp
dec
jb
mov
mul
inc
fld
and
push
scas
call
movs
mov
leave
sub
arpl
and
fbstp
ds
pop
loopne
jbe
mov
mov
mov
mov
inc
enter
push
mov
in
cmp
lock
sahf
sub
jo
out
call
dec
test
(bad)
jmp
cli
adc
mov
iret
xchg
clc
xchg
mov
inc
pop
dec
js
inc
jmp
jmp
inc
fs
mov
stos
mov
dec
retf
inc
cli
mov
add
retf
xchg
ins
sbb
pop
push
xchg
aam
and
sbb
dec
cmps
push
or
in
mov
popf
sar
mov
bound
js
adc
iret
test
sub
clc
(bad)
(bad)
inc
pop
stc
fimul
sub
inc
xor
pusha
mov
jmp
dec
(bad)
mov
je
mov
adc
xor
sbb
(bad)
(bad)
(bad)
inc
jbe
or
fsubr
dec
popf
(bad)
jp
in
jg
test
jmp
lods
rcr
pop
xor
push
sbb
mov
pop
or
push
sbb
mov
jecxz
jb
retf
ror
out
stc
or
mov
xchg
mov
bound
mov
sti
pop
pop
ins
xchg
mov
jg
(bad)
dec
xor
cmp
bound
loopne
or
stos
test
call
es
bound
sbb
mov
mov
pcmpgtw
int
and
(bad)
jg
inc
cmp
push
ror
sbb
jo
jb
pop
and
sbb
mov
xchg
lock
pop
cmps
and
xchg
push
cli
adc
(bad)
jg
cmp
pop
adc
loop
jg
inc
lahf
sbb
or
fisttp
cmp
ret
xor
and
cld
(bad)
dec
enter
mov
(bad)
and
cli
jb
xor
mov
jmp
call
daa
mov
sbb
jnp
rcr
cmp
(bad)
(bad)
(bad)
inc
mov
add
in
cmp
pushf
xor
mov
push
fidiv
stos
jg
movs
ins
inc
or
dec
jne
cdq
or
addr16
out
mov
pop
adc
nop
in
add
movs
idiv
jg
lahf
test
(bad)
call
xchg
jl
lods
or
mov
call
or
(bad)
(bad)
mov
push
out
test
jmp
dec
sub
pop
sub
movs
(bad)
cmps
(bad)
jg
(bad)
jnp
pop
mov
mov
push
inc
mov
or
sbb
imul
mov
jp
pop
add
mov
mov
frstor
adc
mov
mov
(bad)
(bad)
jg
mov
sbb
into
mov
pop
jge
cdq
mov
lods
mov
cmps
add
sbb
test
cmp
(bad)
gs
jmp
or
movs
push
sbb
pop
call
(bad)
loope
xchg
fisttp
stos
(bad)
(bad)
(bad)
jmp
stc
sub
or
mov
sbb
fiadd
cli
add
stos
xor
jmp
popf
pop
pusha
mov
push
add
div
jecxz
push
iret
mov
call
outs
mov
xchg
psubb
dec
adc
mov
dec
xchg
or
push
mov
dec
cdq
clc
in
js
cdq
jmp
leave
dec
inc
sti
and
out
(bad)
(bad)
dec
xchg
pop
es
inc
adc
sbb
popf
nop
je
es
retf
bnd
call
dec
shl
stos
js
in
sbb
popf
and
aam
iret
sar
jg
pop
fwait
dec
in
dec
rol
sar
nop
pop
cmp
pop
xchg
scas
iret
inc
enter
(bad)
call
jmp
pop
cs
add
mov
or
jl
sbb
add
mov
or
(bad)
pop
dec
mov
repz
jmp
sahf
shr
clc
push
and
cmp
enter
(bad)
(bad)
(bad)
jmp
inc
cmp
xchg
jno
inc
(bad)
pop
jb
adc
ins
out
stos
mov
repz
push
(bad)
(bad)
call
push
or
jnp
std
or
repz
xchg
xchg
or
mov
test
add
das
rcr
out
or
in
fldenv
int3
mov
jmp
(bad)
(bad)
(bad)
jp
push
test
mov
shr
out
push
gs
mov
sub
fwait
jmp
scas
dec
sti
sub
xor
cmps
pushf
scas
(bad)
lahf
out
xchg
or
imul
xlat
push
std
or
fs
or
sbb
das
ror
scas
mov
cmp
(bad)
pop
push
mov
cmp
adc
(bad)
pop
(bad)
jmp
sub
mov
sahf
in
or
out
mov
mov
ins
xchg
nop
mov
push
adc
sbb
mov
cld
(bad)
dec
ret
sub
cdq
loop
xor
test
test
pop
ds
(bad)
test
mov
retf
mov
icebp
mov
stos
dec
cld
imul
adc
sti
pusha
pop
(bad)
(bad)
(bad)
jg
sbb
push
stos
popf
lahf
mov
sub
mov
nop
scas
push
cs
cmp
(bad)
(bad)
jg
jmp
hlt
xor
mov
lahf
jb
pushf
(bad)
adc
(bad)
jmp
jge
sar
cs
mov
rep
(bad)
(bad)
mov
xor
sub
shr
inc
iret
push
test
push
xchg
das
sub
call
xchg
sub
ret
call
jne
aaa
and
(bad)
(bad)
inc
ret
jmp
sbb
xchg
adc
lds
mov
(bad)
loope
mov
jmp
or
fstp
and
ret
mov
pop
inc
sub
jmp
jl
jge
push
fimul
movs
push
mov
mov
fisttp
dec
pushf
aas
push
jns
jg
repnz
cld
imul
in
ffreep
and
retf
in
and
ss
sub
sbb
out
adc
cmp
(bad)
mov
xchg
mov
loop
jo
ror
cdq
xchg
iret
xor
jmp
push
or
jae
call
mov
int3
loopne
pop
lea
cmps
lock
test
xchg
ja
mov
and
mov
or
(bad)
lock
(bad)
(bad)
(bad)
inc
push
pop
mov
mov
jno
shr
mov
mov
es
add
dec
and
sbb
add
(bad)
(bad)
in
add
cmps
out
sbb
jnp
cmp
pop
inc
xchg
sub
out
adc
call
jmp
pushf
arpl
push
js
movs
cld
mov
das
clc
push
ret
(bad)
push
cmp
cdq
mov
sub
jo
mov
iret
mov
and
(bad)
(bad)
ffreep
pop
mov
push
pop
or
jb
push
and
sbb
in
es
inc
bnd
mov
jmp
ficom
dec
(bad)
(bad)
fmul
out
add
fmul
dec
jp
std
mov
retf
fcomp
std
ror
pop
or
mov
sub
xor
mov
ds
dec
lock
data16
adc
push
and
add
mov
ss
cld
cli
aam
test
mov
inc
clc
fistp
es
andnps
dec
xor
fsubr
xchg
push
movzx
or
adc
mov
jns
pop
or
in
movs
cli
inc
fisttp
mov
(bad)
call
push
xchg
lods
out
push
div
stos
inc
pusha
call
and
(bad)
out
clc
jmp
stos
out
jp
jg
js
push
sbb
sti
in
adc
movs
lods
mov
(bad)
push
pushf
or
cmps
or
push
sub
sub
fbstp
and
or
into
cli
mov
adc
mov
pop
cmps
outs
cdq
xor
sub
cmp
sub
sahf
cmc
mov
mov
mov
ins
(bad)
jmp
mov
into
loopne
icebp
mov
pushf
jmp
inc
xchg
clc
mov
or
sbb
mov
jle
dec
mov
(bad)
pushf
sub
repnz
stos
call
mov
and
add
mov
xor
call
push
mov
scas
and
cmp
cmp
dec
or
push
mov
pop
dec
int
push
xor
pop
lock
fld
push
aad
jmp
stos
sbb
sahf
cs
push
cwde
xor
stos
mov
mov
mov
data16
test
jl
(bad)
dec
(bad)
(bad)
(bad)
(bad)
cmp
fwait
movs
cmp
push
dec
mov
call
push
dec
pop
and
jge
cwde
sub
cmp
sar
jmp
pusha
(bad)
mov
outs
adc
push
test
and
jno
push
(bad)
mov
sbb
in
inc
xchg
mov
xchg
(bad)
(bad)
(bad)
(bad)
clc
popa
outs
cmc
dec
cs
pop
mov
sahf
adc
movs
int
lods
ds
sub
mov
lahf
call
js
daa
out
das
mov
push
retf
ror
lahf
add
cdq
push
fbstp
test
(bad)
dec
mov
repnz
jns
cmps
or
loop
std
(bad)
mov
fsubr
push
mov
inc
or
lock
stos
xchg
(bad)
(bad)
(bad)
mov
xchg
bound
xor
lahf
idiv
add
inc
pop
mov
out
outs
mov
xchg
fild
(bad)
adc
les
cwde
jmp
jno
(bad)
(bad)
jmp
nop
sub
or
das
push
sbb
mov
mov
xchg
test
outs
clc
(bad)
push
pop
lea
sub
or
mov
jmp
sahf
pop
add
(bad)
mov
stos
and
out
xchg
fdiv
push
ret
push
jp
stos
sub
call
jecxz
out
jp
(bad)
call
sbb
sub
mov
jno
xor
mov
lods
dec
jmp
outs
dec
add
loop
mov
adc
(bad)
call
xor
pop
pop
test
mov
loopne
das
xor
out
cld
push
ret
mov
ins
xchg
xchg
stos
cmp
mov
push
xchg
ja
scas
mov
loop
out
data16
mov
sub
pop
sub
out
fld
xor
ror
(bad)
in
(bad)
mov
ins
mov
dec
outs
mov
iret
cmc
(bad)
(bad)
(bad)
(bad)
cmp
das
xchg
(bad)
jne
call
loope
xchg
in
push
fimul
sbb
lahf
sti
lea
push
(bad)
dec
xor
jmp
fwait
in
push
and
test
inc
stc
lods
retf
add
mov
cmp
int
lock
jne
addr16
cld
loop
out
mov
(bad)
(bad)
jl
mov
mov
stos
scas
xchg
push
mov
dec
or
out
test
repz
cli
fsub
(bad)
(bad)
(bad)
call
xor
retf
bound
sahf
cmps
sub
mov
movs
cwde
xchg
iret
sub
jecxz
jg
hlt
and
or
dec
sub
mov
stc
retf
push
loope
stos
in
push
(bad)
jmp
(bad)
int3
int3
lods
cli
sbb
jmp
xor
push
cli
add
push
sbb
ja
xor
cmp
mov
fidiv
pop
ins
sub
jg
stos
pop
retf
sbb
jle
mov
jle
in
mov
or
(bad)
jg
mov
xor
mov
pop
sbb
mov
and
jmp
xchg
cmps
lahf
sub
cmps
scas
mov
push
mov
cmps
mov
add
call
stos
sub
scas
and
xchg
hlt
(bad)
(bad)
call
jecxz
jmp
push
dec
ds
hlt
retf
lods
jmp
mov
(bad)
iret
lds
out
xor
mov
xchg
dec
into
aas
and
lods
add
lods
pop
aas
adc
clc
(bad)
call
mov
aas
push
xchg
jnp
sub
stos
or
shl
(bad)
(bad)
(bad)
call
test
push
imul
test
bswap
add
cli
add
bound
das
add
stos
lods
adc
test
outs
js
cs
std
das
clc
(bad)
std
xchg
stos
pop
jo
(bad)
sbb
and
out
imul
mov
popf
adc
dec
ins
mov
mov
xor
cmp
fbld
ret
mov
mov
(bad)
(bad)
(bad)
call
in
sub
add
aas
xor
outs
mov
int3
xor
mov
add
mov
(bad)
mov
(bad)
xor
fsubr
std
call
(bad)
(bad)
fild
cmp
jbe
cwde
popa
sbb
jp
sub
mov
xchg
inc
mov
mov
sbb
(bad)
mov
mov
stc
lds
push
lds
lea
(bad)
sbb
popf
dec
adc
das
mov
hlt
(bad)
dec
xor
clc
sub
fwait
stos
fisttp
iret
(bad)
mov
pop
cmps
in
fs
call
inc
js
mov
push
add
movs
and
sbb
(bad)
xor
or
std
adc
call
adc
scas
outs
push
fimul
jb
mov
adc
fs
lods
adc
in
cdq
xchg
bts
ds
jno
fnstsw
out
pop
(bad)
inc
ret
or
dec
stos
sub
call
stos
dec
loope
pop
push
sub
cli
xor
(bad)
(bad)
call
push
adc
pop
aas
call
push
mov
push
add
rol
sub
(bad)
(bad)
(bad)
into
fmulp
dec
and
mov
shl
scas
repz
pop
push
cmp
fs
or
jbe
rcl
fimul
mov
call
pop
mov
mov
push
jns
push
push
and
cli
cmp
xchg
mov
jo
mov
cs
and
fld
push
leave
aam
fsub
sar
hlt
(bad)
call
loope
inc
push
aad
sub
dec
or
sub
(bad)
(bad)
call
add
pop
and
stos
cli
xor
pushf
stos
mov
mov
int3
(bad)
(bad)
(bad)
jmp
mov
outs
push
dec
or
jo
jle
inc
mov
dec
mov
loop
cli
sahf
(bad)
mov
fptan
into
cmp
cmp
(bad)
out
call
pop
sub
jae
mov
lods
mov
mov
ret
shl
aas
pop
xchg
(bad)
(bad)
call
jmp
aaa
sub
xor
push
sub
adc
test
fwait
push
mov
mov
(bad)
jmp
mov
xchg
iret
xlat
jns
mov
dec
or
call
mov
(bad)
(bad)
cld
jmp
pop
pop
jge
cs
dec
std
sbb
xchg
(bad)
(bad)
call
sub
(bad)
adc
(bad)
(bad)
push
cdq
cmps
dec
mov
or
push
test
loope
jmp
jmp
push
int3
push
and
adc
call
mov
(bad)
call
sub
sub
repnz
mov
sub
mov
fwait
(bad)
fdivr
pushf
pop
jmp
div
(bad)
(bad)
call
fisttp
push
mov
mov
call
sbb
icebp
sub
xchg
add
in
imul
jno
in
or
das
sti
inc
inc
jmp
shl
mov
(bad)
sbb
movs
push
sbb
popa
popa
repnz
es
or
jmp
das
cwde
xor
(bad)
jg
push
ins
sbb
std
push
sub
ins
inc
retf
push
test
pop
scas
leave
test
jecxz
mov
push
std
call
mov
jo
jl
jnp
xor
into
mov
xchg
pop
mov
(bad)
in
(bad)
cmp
cmp
(bad)
hlt
int
scas
mov
es
pusha
mov
cmps
mov
(bad)
mov
and
or
xchg
(bad)
cmp
xchg
dec
adc
cmp
clc
pop
pop
mov
(bad)
(bad)
(bad)
(bad)
jmp
in
(bad)
cmp
pop
xor
cmp
mov
push
adc
addr16
mov
jmp
add
or
dec
mov
clc
push
nop
jmp
ja
adc
sub
sub
inc
mov
mov
pop
fmul
das
ins
push
sub
pop
or
ret
enter
ret
loop
aad
lods
sbb
push
idiv
xchg
(bad)
call
mov
out
int3
xchg
mov
pop
ds
aam
lea
sbb
or
(bad)
call
adc
push
aas
push
xchg
sbb
retf
pop
ins
sbb
xchg
mov
pop
enter
(bad)
jmp
repnz
mov
xor
shl
mov
mov
(bad)
test
push
inc
adc
pop
outs
add
(bad)
(bad)
(bad)
jmp
sbb
call
xchg
fcomp
cmp
jmp
dec
mov
cmp
push
cmp
imul
in
mov
lahf
jo
call
aaa
std
mov
mov
ja
jle
adc
mov
jbe
cmp
dec
push
xor
cmp
scas
shl
xchg
or
cs
or
mov
das
sbb
(bad)
jmp
rcl
in
sub
lods
mov
(bad)
sub
pop
mov
adc
fistp
js
sahf
dec
pop
sahf
test
and
fcomip
jmp
outs
push
in
xor
fcomip
sar
cmp
mov
or
jmp
mov
mov
stos
sub
stos
mov
es
pop
(bad)
(bad)
(bad)
jmp
push
cmps
cdq
lods
loop
js
mov
or
push
or
imul
mov
sub
add
jp
cs
mov
(bad)
(bad)
(bad)
jmp
jo
jp
cli
mov
fcom
pusha
daa
call
fidiv
pop
cmp
retf
(bad)
(bad)
(bad)
jmp
mov
pop
pop
sub
and
int
jmp
scas
imul
jg
(bad)
cmps
xor
test
push
push
test
add
fst
outs
clc
(bad)
jg
or
bound
cmp
out
movs
push
shr
std
outs
movs
test
adc
(bad)
(bad)
dec
mov
mov
loop
bound
(bad)
in
stc
sub
mov
call
mov
call
push
sub
rcr
stc
mov
fwait
push
out
outs
xor
push
call
adc
jmp
add
fwait
mov
pusha
mov
sbb
pop
mov
sub
jne
mov
mov
sbb
loop
call
mov
mov
imul
pop
fisub
jns
bnd
(bad)
(bad)
(bad)
jmp
dec
fst
je
lahf
mov
mov
cmp
xor
pop
xchg
setp
sub
xlat
mov
retf
and
or
(bad)
dec
retf
cmps
fst
fisub
xor
adc
mov
add
mov
pop
(bad)
mov
mov
(bad)
(bad)
(bad)
jmp
xchg
push
stos
rcl
call
cwde
jle
hlt
jmp
imul
retf
test
xor
and
(bad)
fcmovb
out
mov
(bad)
(bad)
call
mov
repnz
adc
stos
sbb
push
in
sbb
dec
mov
jno
push
mov
call
cmps
cmps
lahf
scas
pop
mov
push
mov
not
shl
into
cmps
clc
call
popa
in
retf
repnz
shr
xchg
jnp
mov
movs
call
add
jmp
pop
inc
push
ret
mov
inc
or
mov
xchg
push
adc
sbb
repnz
xor
test
push
or
shl
aaa
push
pop
cmps
cdq
cli
jmp
(bad)
mov
pop
out
pop
and
hlt
cdq
xchg
cmc
mov
or
sar
or
mov
pop
fstp
cs
test
(bad)
(bad)
(bad)
call
jo
retf
(bad)
lahf
sbb
(bad)
call
neg
dec
push
jl
out
movsx
and
fistp
cs
jns
cmp
(bad)
fild
mov
and
(bad)
(bad)
jg
iret
retf
call
add
jmp
dec
repz
push
cmps
enter
gs
push
dec
(bad)
(bad)
jmp
je
scas
xor
clc
fimul
fcmovb
mov
inc
push
sub
pop
jmp
(bad)
mov
sbb
sub
cmp
fstp
mov
sbb
adc
jmp
push
lods
xchg
cld
jne
fsub
pop
add
shld
cli
(bad)
call
stos
(bad)
mov
int
mov
ficom
(bad)
jmp
pop
jb
(bad)
(bad)
(bad)
jmp
int
neg
(bad)
pop
jmp
and
xchg
inc
mov
and
(bad)
inc
xchg
stos
cs
mov
pop
outs
lods
mov
std
call
sub
mov
sub
or
add
xor
es
sub
fisub
fs
(bad)
shr
dec
xchg
call
mov
sub
pop
data16
xchg
mov
mov
cld
(bad)
(bad)
mov
fidivr
test
sub
and
aam
mov
rol
fs
jecxz
aas
adc
cmc
enter
(bad)
out
mov
push
pusha
lock
jb
mov
(bad)
imul
dec
ds
mov
out
call
das
ror
or
xchg
sub
call
add
jb
test
scas
mov
jmp
cmps
or
dec
(bad)
dec
cmp
add
out
pop
add
mov
and
mov
add
shl
shr
add
mov
(bad)
(bad)
(bad)
jmp
xchg
das
or
iret
jle
adc
stos
jmp
retf
cmps
fdivr
ret
cld
jmp
pop
xor
(bad)
(bad)
call
mov
dec
mov
add
mov
jns
(bad)
(bad)
(bad)
dec
jecxz
(bad)
xchg
jmp
test
and
mov
jne
mov
repnz
mov
jg
pusha
push
(bad)
(bad)
jg
mov
lea
mov
loopne
mov
lods
push
lock
add
(bad)
dec
dec
lods
xor
inc
add
pop
push
adc
pop
xchg
pop
movs
dec
lods
cmp
push
(bad)
cdq
arpl
scas
adc
jne
clc
in
jecxz
push
popa
jmp
xchg
or
jg
cli
mov
add
ds
jge
or
(bad)
push
sbb
out
out
pop
repz
ds
lods
loop
loop
cli
(bad)
jmp
jl
sub
pop
sbb
ins
mov
adc
movs
pop
sub
imul
push
movs
sbb
imul
(bad)
jmp
das
adc
pop
stos
lods
jo
jno
hlt
iret
adc
(bad)
jg
xchg
pop
mov
push
jo
jl
dec
cmp
cdq
xor
ins
fistp
cmc
je
es
xchg
stc
push
jb
in
outs
pop
adc
(bad)
aaa
ss
pop
jbe
xor
pop
sahf
or
adc
jmp
daa
cmp
outs
push
push
jg
mov
push
sub
gs
retf
adc
int
mov
jmp
sbb
xor
or
xchg
sub
mov
enter
clc
(bad)
and
mov
pop
mov
cmp
mov
outs
push
pop
xchg
scas
sub
or
lods
outs
(bad)
(bad)
(bad)
push
loop
and
cmp
push
ds
pop
adc
jp
pop
scas
cli
pop
cmp
je
cli
ret
lods
ret
call
add
push
loop
push
loop
retf
jge
or
cmp
jmp
xchg
(bad)
inc
sub
lahf
fist
aas
push
sar
push
in
sub
jne
imul
leave
ss
jae
(bad)
inc
or
push
imul
ins
dec
inc
sub
jns
sub
movs
psrld
add
pop
cld
jge
or
xchg
call
jmp
sub
(bad)
inc
nop
add
rcr
sahf
mov
or
data16
(bad)
(bad)
mov
sub
mov
xchg
sub
pop
(bad)
(bad)
(bad)
jmp
fist
sbb
mov
repnz
dec
pop
or
imul
call
(bad)
call
inc
lods
pop
call
xor
add
or
cli
lahf
sub
pop
sub
jb
or
sub
adc
out
fadd
fs
cmp
push
mov
test
fist
(bad)
pop
fsubr
pop
jmp
jo
loopne
cmp
retf
mov
dec
jmp
dec
test
pop
mov
outs
push
xor
mov
ins
add
push
jno
sub
dec
mov
loopne
ror
sub
adc
(bad)
(bad)
(bad)
fdiv
out
push
cmp
shl
je
and
jne
pop
cmp
arpl
and
and
sub
inc
mov
call
outs
outs
mov
jmp
retf
push
xchg
(bad)
call
xchg
and
(bad)
(bad)
(bad)
jmp
add
mov
mov
call
in
lahf
cmp
repnz
call
pavgb
ret
lahf
test
sar
or
cmps
adc
sar
(bad)
(bad)
(bad)
jmp
(bad)
mov
mov
mov
push
(bad)
lea
ds
pop
loopne
call
push
in
call
shl
pop
inc
cmps
(bad)
(bad)
(bad)
(bad)
jmp
cdq
pop
mov
das
cmp
add
xor
call
call
outs
sub
(bad)
jp
cmp
cmp
jmp
lods
inc
je
adc
jp
sbb
mov
cld
scas
push
call
xchg
in
jno
xor
jg
movs
push
cmc
call
mov
sub
or
(bad)
(bad)
(bad)
(bad)
fstp
sbb
inc
scas
ja
jmp
xlat
dec
repz
mov
sub
(bad)
jg
call
push
clc
jp
cmp
test
jle
adc
push
jmp
mov
jg
cs
stos
jbe
outs
js
stos
(bad)
mov
mov
dec
test
in
aad
das
add
mov
pop
stos
(bad)
(bad)
dec
out
mov
shl
push
mov
mov
test
shr
loopne
outs
cli
(bad)
(bad)
fnsave
lock
fs
jns
sahf
sahf
(bad)
hlt
fldenv
dec
cmps
loop
jae
call
test
jge
mov
imul
dec
xchg
push
movs
lock
push
es
pop
arpl
adc
dec
push
movs
pop
mov
sbb
nop
and
push
sbb
xchg
cmp
(bad)
(bad)
jmp
(bad)
stos
xchg
(bad)
mov
push
sub
fsubr
jl
mov
mov
out
scas
retf
loop
(bad)
dec
xor
mov
push
mov
jp
mov
arpl
mov
sub
cmp
scas
scas
and
mov
cmp
inc
retf
mov
lods
(bad)
cli
(bad)
mov
pushf
mov
in
(bad)
pop
inc
and
fwait
and
outs
loop
iret
retf
in
jmp
jb
or
mov
sub
call
xor
popf
sahf
in
in
imul
mov
push
ins
sar
(bad)
(bad)
dec
adc
aad
(bad)
loope
sbb
dec
popa
cmps
and
cmp
or
sbb
or
sub
(bad)
(bad)
(bad)
inc
into
xchg
add
push
in
pop
jo
mov
es
jle
arpl
scas
repnz
into
test
(bad)
cmp
and
data16
cmp
jmp
inc
push
add
add
jmp
sbb
adc
sub
cmp
hlt
xor
cmps
sbb
loop
mov
jmp
jbe
sub
jne
mov
jne
cli
and
xor
outs
xor
jno
f2xm1
sbb
push
mov
call
add
adc
std
movs
mov
mov
(bad)
(bad)
dec
(bad)
ficomp
mov
(bad)
push
ret
pop
movs
ins
pop
lods
aas
inc
test
(bad)
lods
xor
(bad)
dec
jo
sub
scas
imul
enter
cmp
jo
pop
aam
sbb
aad
fidivr
xchg
jmp
das
mov
(bad)
(bad)
jmp
in
mov
sub
mov
and
icebp
das
and
push
pop
push
fadd
dec
mov
(bad)
dec
call
bound
(bad)
push
jnp
js
in
and
inc
mov
std
mov
adc
xor
jne
push
jmp
or
jp
fist
inc
aam
adc
dec
stos
iret
sub
bound
ret
or
icebp
push
sub
sahf
or
arpl
add
(bad)
call
loopne
fist
(bad)
loope
ficom
out
rcl
push
nop
call
and
fwait
sub
dec
adc
stos
jmp
jg
sub
cmp
push
out
in
add
inc
(bad)
mov
push
or
scas
adc
test
inc
ja
pop
xlat
enter
add
fucomip
and
mov
retf
or
pop
inc
ss
fiadd
add
test
(bad)
fistp
in
jmp
aaa
lods
scas
mov
mov
enter
add
adc
add
(bad)
es
inc
xor
push
inc
pop
sbb
or
add
scas
mov
add
dec
inc
sbb
mov
(bad)
jmp
xor
dec
cmp
in
sbb
ret
das
cli
cld
fs
sbb
nop
lods
addr16
(bad)
dec
pcmpeqw
mov
aas
and
inc
mov
shr
mov
loopne
(bad)
(bad)
call
mov
test
scas
pop
mov
iret
push
lock
add
add
mov
push
std
scas
mov
std
sbb
sti
mov
xor
(bad)
jmp
xor
test
ds
in
pop
stos
test
xchg
mov
inc
(bad)
or
mov
scas
cwde
ins
popa
sub
std
jmp
pop
rcr
addr16
jns
fcmovb
scas
xchg
outs
clc
(bad)
jmp
scas
cwde
cli
push
xor
cli
shl
das
pop
xor
add
and
sub
sub
jp
(bad)
loop
das
cmp
es
(bad)
sub
cmp
jmp
pop
(bad)
(bad)
(bad)
mov
add
arpl
pop
repz
pop
loope
mov
fldenv
adc
pop
daa
sub
mov
das
lock
or
fdivr
arpl
xchg
scas
jmp
(bad)
inc
dec
and
push
fwait
push
js
ror
lods
cld
lods
sbb
aas
call
(bad)
cmp
and
aad
add
jnp
out
ret
lods
adc
stos
jno
mov
dec
stc
jl
and
retf
out
stc
scas
xchg
sub
out
addr16
add
add
mov
(bad)
jmp
and
adc
push
lahf
push
jp
movs
(bad)
mov
imul
fnstsw
sub
mov
dec
or
shl
in
mov
push
call
(bad)
(bad)
call
jl
sbb
retf
or
movs
xor
cmp
push
dec
pusha
mov
(bad)
mov
gs
cmp
daa
out
inc
lods
mov
cmp
loope
mov
loop
fmulp
iret
inc
push
(bad)
(bad)
(bad)
in
das
popf
sub
int
loop
ss
cmp
cmps
in
or
sub
sbb
or
nop
sub
ja
outs
adc
ret
mov
or
icebp
dec
ret
jb
test
or
aas
(bad)
(bad)
call
out
push
jb
js
std
(bad)
out
ror
pop
das
imul
push
mov
cmp
xchg
push
sbb
(bad)
(bad)
call
call
sahf
sub
xchg
jmp
mov
std
mov
xchg
cmp
jle
imul
(bad)
(bad)
dec
js
cs
out
das
inc
scas
jmp
mov
push
movs
cmp
jns
xchg
out
popf
ror
jmp
adc
jmp
add
scas
cli
es
std
xlat
or
cmc
dec
test
jmp
cli
or
sbb
dec
cmp
add
cli
(bad)
(bad)
mov
mov
loopne
loopne
nop
lock
cli
xor
je
pop
rol
(bad)
(bad)
(bad)
call
fwait
pop
scas
jb
enter
push
shr
and
mov
movs
stos
jbe
mov
or
xor
jae
fwait
mov
push
push
sub
clc
or
adc
cmc
dec
js
mov
mov
sbb
(bad)
in
outs
jl
dec
sbb
imul
sbb
jg
jl
and
das
xchg
jle
call
scas
sub
jl
jnp
test
in
in
pusha
mov
shr
xor
or
leave
mov
fdiv
jmp
jp
xchg
jmp
mov
sbb
and
lea
xor
sbb
(bad)
jg
add
in
adc
in
sbb
and
adc
push
(bad)
(bad)
dec
test
push
scas
mov
cli
scas
pusha
mov
cmp
leave
mov
cmpps
cmp
movs
out
sub
mov
or
jmp
add
scas
mov
mov
nop
cmp
ror
(bad)
cmps
push
(bad)
hlt
mov
inc
push
(bad)
mov
pop
mov
test
retf
pop
jmp
push
cli
movs
jae
sbb
mov
push
scas
dec
mov
adc
cld
(bad)
call
or
fwait
les
(bad)
sar
mov
js
fbld
icebp
clc
(bad)
push
sbb
mov
mov
pushf
cmc
gs
xchg
je
dec
push
push
sbb
ins
ret
fcmovbe
cmp
cmps
in
xchg
fcomi
xchg
(bad)
(bad)
(bad)
dec
sub
stos
pop
pop
adc
lods
fld
out
sahf
bound
push
cs
nop
pop
dec
mov
fwait
dec
sub
xabort
jle
sub
fistp
push
sbb
mov
jnp
(bad)
(bad)
call
stos
cmp
mov
scas
gs
mov
mov
jmp
(bad)
(bad)
(bad)
dec
repnz
arpl
enter
sahf
add
(bad)
scas
dec
xor
cli
(bad)
jmp
test
loope
dec
(bad)
stc
clc
imul
bound
(bad)
inc
mov
xchg
mov
test
sub
cmp
call
(bad)
push
jns
push
fisubr
or
cli
(bad)
cmp
test
push
shl
xor
dec
or
mov
sbb
dec
(bad)
(bad)
(bad)
dec
sub
dec
push
out
push
sbb
sbb
push
sahf
fs
data16
(bad)
(bad)
fist
xchg
aam
xchg
sti
mov
lds
pushf
retf
shl
bound
in
idiv
inc
popf
mov
or
dec
dec
adc
sbb
retf
mov
or
clc
jmp
xlat
or
call
cmps
mov
cmp
and
repnz
ins
lods
mov
(bad)
dec
inc
push
mov
in
pop
pop
and
sbb
mov
push
lock
mov
pushf
dec
ja
lods
jmp
xchg
and
push
adc
cmp
aaa
pop
mov
push
retf
stc
pop
jmp
out
xor
ja
outs
jp
mov
dec
stos
push
sub
sub
fwait
jmp
clc
mov
pop
adc
(bad)
(bad)
dec
iret
je
jb
cmps
sbb
inc
adc
sub
jmp
adc
out
sub
outs
mov
sub
test
(bad)
jl
xor
call
movs
mov
jo
pop
and
pusha
adc
ffreep
cmc
call
ins
ds
pop
cli
test
movs
stc
mov
mov
mov
inc
call
mov
(bad)
(bad)
(bad)
(bad)
jnp
adc
addr16
int3
mov
jecxz
fwait
jns
stos
sbb
int3
pop
sahf
mov
cmp
(bad)
jmp
pusha
test
and
aad
jg
push
add
(bad)
jmp
in
cs
mov
nop
jnp
xchg
fadd
mov
pop
icebp
(bad)
(bad)
mov
retf
adc
scas
xchg
out
ins
stc
arpl
jg
enter
sbb
dec
inc
scas
dec
dec
and
call
sub
(bad)
jmp
sub
inc
js
push
fisubr
in
fwait
xor
jbe
sbb
ja
(bad)
aaa
cmps
fsub
jns
cmp
mov
jmp
push
int3
adc
dec
cmc
or
sub
xlat
out
adc
mov
stos
outs
pop
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
mov
mov
and
cmp
and
mov
fmul
pop
(bad)
(bad)
(bad)
jmp
fild
xor
fwait
(bad)
push
loop
test
enter
pusha
ja
movs
cmps
jmp
cwde
test
ret
lods
retf
inc
imul
call
pop
inc
inc
mov
sub
lods
adc
pop
add
and
in
(bad)
(bad)
(bad)
mov
xchg
xchg
pusha
xor
cmp
or
js
clc
mov
ja
push
sti
xor
or
or
jmp
push
xlat
add
mov
cmp
mov
fnstenv
sbb
mov
sbb
push
xchg
dec
push
stos
mov
call
jo
jns
rol
push
(bad)
(bad)
(bad)
out
pop
jns
test
sbb
adc
cmc
dec
mov
es
add
(bad)
jmp
shr
lahf
jecxz
sub
pop
arpl
xor
xor
stos
pushf
dec
outs
ss
jnp
jp
ret
mov
adc
scas
or
stos
ret
sub
mov
(bad)
mov
push
jmp
mov
movs
jb
gs
cli
mov
mov
fwait
jmp
mov
cmp
mov
inc
stos
fwait
dec
and
sub
mov
scas
pop
imul
mov
push
dec
pop
mov
add
sub
cmps
cld
(bad)
(bad)
fbld
sub
sahf
xrelease
inc
loope
add
mov
pop
pop
(bad)
xchg
push
retf
in
mov
call
add
sub
aas
call
cmp
inc
(bad)
(bad)
(bad)
call
inc
jge
ins
(bad)
adc
sub
mov
call
xor
xchg
std
sub
stos
test
repnz
clc
mov
cld
pushf
call
jmp
dec
mov
sub
inc
into
mov
repnz
fmulp
mov
pop
stc
nop
fwait
mov
aaa
std
(bad)
dec
mov
cmps
adc
pop
or
mov
(bad)
push
xor
dec
ins
jp
clc
(bad)
(bad)
mov
test
mov
xchg
mov
call
and
adc
lods
push
or
dec
(bad)
(bad)
call
xchg
or
add
jns
mov
ins
push
pop
mov
add
(bad)
inc
stos
icebp
add
or
xor
xor
call
clc
jmp
int3
mov
pushf
jg
lahf
jl
(bad)
(bad)
(bad)
(bad)
jmp
repz
sub
sub
mov
pop
xor
cs
(bad)
(bad)
(bad)
inc
pop
call
and
pop
dec
pop
sbb
sub
ret
scas
shl
(bad)
(bad)
jmp
xchg
jb
push
(bad)
pop
dec
push
cmps
fldenv
mov
imul
xchg
jge
(bad)
sub
mov
xchg
loop
mov
movs
add
(bad)
(bad)
cmp
or
jo
mov
ja
and
add
cs
cli
(bad)
push
ins
out
mov
movs
out
scas
dec
(bad)
sbb
push
(bad)
call
mulps
pop
cmps
fwait
je
bound
xor
(bad)
(bad)
jp
push
push
dec
cmp
ins
mov
fisttp
pop
dec
xchg
adc
(bad)
(bad)
(bad)
jmp
xor
ins
push
sub
fnstsw
sbb
ss
mov
mov
and
jmp
lahf
ds
pop
pop
xchg
inc
xchg
das
mov
add
in
mov
ja
xor
test
mov
or
fisub
mov
mov
pop
fimul
mov
(bad)
(bad)
jmp
ss
cmp
mov
xchg
cs
(bad)
and
daa
cs
jnp
ret
xor
(bad)
cmp
aad
mov
test
sub
std
sbb
(bad)
sbb
adc
mov
adc
push
mov
enter
pop
sub
jp
xchg
sub
mov
dec
ins
jmp
ror
ret
icebp
neg
clc
push
stos
dec
fs
mov
or
sub
lods
pop
push
push
pop
(bad)
(bad)
(bad)
call
mov
mov
pusha
sub
jecxz
sub
fsubr
xor
pop
cmc
(bad)
mov
sahf
mov
sbb
xlat
iret
pop
loopne
retf
(bad)
jmp
pop
fsubr
and
enter
push
dec
mov
in
sbb
push
inc
mov
out
jae
xor
xchg
in
xor
xchg
clc
mov
add
pop
ss
jmp
mov
lods
fucomi
mov
clc
sub
push
push
lods
push
sti
lods
lods
or
outs
in
aas
sub
mov
ss
or
sub
sti
bound
stos
mov
cmp
mov
jae
fs
mov
shl
or
dec
cmp
imul
mov
jp
sub
mov
mov
call
and
and
pop
mov
aaa
(bad)
pop
mov
retf
imul
sub
sbb
sub
(bad)
inc
(bad)
cmps
das
mov
mov
add
add
dec
mov
cmc
jmp
push
aaa
pop
call
retf
(bad)
in
jmp
lds
sbb
stos
adc
vmread
popf
mov
inc
loop
cld
jnp
pop
and
and
cmps
sbb
std
call
imul
mov
jge
cs
pop
gs
es
xlat
(bad)
(bad)
push
add
fsubrp
jmp
sub
adc
inc
dec
adc
xor
mov
js
or
das
pop
mov
arpl
movs
(bad)
(bad)
jmp
dec
fsubr
cmp
sub
mov
jmp
loopne
push
inc
cmp
ja
push
loopne
jmp
(bad)
(bad)
(bad)
jmp
(bad)
lods
icebp
cmp
cmp
mov
shl
jae
jmp
jl
loop
nop
out
outs
cdq
push
dec
ror
xor
dec
mov
dec
pop
push
loopne
iret
ins
in
jl
call
cmp
fs
(bad)
push
pop
pop
jmp
mov
pop
sbb
call
push
retf
btc
fsqrt
imul
scas
clc
repnz
adc
mov
xchg
xchg
sahf
mov
jnp
push
push
add
call
stos
leave
mov
test
movs
lock
jo
cmp
loopne
ficom
sub
mov
add
lods
call
mov
test
and
scas
cmp
sbb
sub
mov
je
lahf
mov
retf
enter
fcmove
(bad)
mov
es
bound
out
jl
rcr
leave
popa
cld
(bad)
(bad)
mov
sub
push
pop
cmp
jae
jg
xchg
or
jl
ins
or
(bad)
(bad)
fistp
jnp
push
popa
cmp
fsubr
fmul
mov
jmp
js
cmp
imul
out
clc
(bad)
mov
call
cld
push
mov
scas
xchg
(bad)
push
into
popa
or
(bad)
mov
mov
pop
loopne
or
shl
cmp
cld
xor
call
sub
das
xchg
xor
sub
fisub
cmps
push
(bad)
(bad)
jg
mov
pusha
sbb
and
sti
mov
mov
(bad)
into
pop
iret
mov
ja
movs
push
xor
sub
movs
test
mov
and
(bad)
(bad)
(bad)
(bad)
jecxz
xchg
call
mov
or
aas
cmps
push
dec
fisttp
mov
adc
mov
sar
loopne
out
xchg
(bad)
dec
movs
(bad)
(bad)
(bad)
inc
cmp
sar
adc
push
mov
mov
test
ins
mov
sti
dec
(bad)
mov
xchg
sbb
mov
or
test
mov
cmps
dec
cmp
mov
cmps
inc
jg
mov
repz
iret
in
jg
dec
mov
shl
or
add
jmp
clc
sub
xor
add
cmp
(bad)
scas
sbb
mov
push
cmp
mov
fdivr
mov
cmc
fdivr
pop
test
mov
sti
pop
lock
push
sub
jo
cmps
and
jmp
mov
data16
(bad)
jg
shl
or
stos
fist
retf
cmps
or
(bad)
(bad)
inc
inc
out
mov
int3
mov
push
das
jle
xchg
push
mov
jmp
mov
mov
add
jmp
test
mov
es
push
cmp
icebp
add
pop
stos
or
(bad)
(bad)
(bad)
fistp
clc
cmp
cdq
and
cmp
sub
jne
test
add
in
(bad)
cmp
mov
adc
jecxz
adc
pop
dec
ins
call
std
xchg
jl
es
inc
cmps
mov
pop
cld
fucom
pop
cli
mov
fistp
mov
xchg
js
mov
out
retf
mov
jg
mov
mov
es
fild
push
lock
push
adc
clc
out
imul
fimul
pop
adc
cmp
jb
into
sbb
loope
mov
(bad)
fcmovnb
les
jae
les
retf
std
iret
movs
ins
cld
das
and
mov
lods
js
das
sbb
mov
cwde
out
mov
add
xchg
push
out
loop
cmp
lods
push
sbb
sub
outs
dec
mov
jmp
std
(bad)
(bad)
push
ins
aas
div
int
pushf
movs
ds
into
into
js
mov
std
(bad)
(bad)
(bad)
(bad)
cmp
out
pop
mov
jl
xor
mov
sbb
scas
xor
hlt
(bad)
(bad)
(bad)
(bad)
call
jmp
sahf
jl
adc
pop
pop
mov
repz
dec
jo
(bad)
(bad)
(bad)
dec
out
lds
mov
jp
inc
std
cmp
movs
or
sahf
mov
stos
lods
into
inc
sti
jbe
(bad)
(bad)
call
fstp
cwde
and
mov
xchg
cld
mov
outs
shl
popf
sbb
(bad)
(bad)
(bad)
mov
xor
daa
imul
mov
pop
adc
xchg
sub
aaa
jo
(bad)
(bad)
mov
mov
mov
movs
adc
fistp
push
test
(bad)
xchg
scas
cs
push
push
mov
mov
push
inc
in
mov
jg
push
mov
iret
xchg
jbe
repz
lahf
(bad)
jmp
jg
iret
pop
repnz
ins
cs
adc
xor
xor
dec
mov
(bad)
call
cmp
pop
shl
fisubr
imul
mov
ficomp
(bad)
inc
cdq
je
add
sub
mov
ror
stos
and
stos
(bad)
fwait
and
mov
test
xchg
jmp
xchg
retf
fcom
cmp
frstor
lods
and
mov
(bad)
dec
or
sbb
imul
dec
or
sbb
push
sub
jnp
dec
(bad)
dec
xlat
sbb
ss
(bad)
jmp
cmp
sub
sbb
(bad)
(bad)
call
dec
mov
fdiv
or
or
sub
xchg
or
xor
(bad)
mov
jno
stos
jp
pop
in
rcr
xchg
(bad)
inc
popa
adc
(bad)
and
mov
call
out
leave
das
call
(bad)
and
pop
or
sti
(bad)
jmp
call
dec
cmp
xlat
and
mov
mov
push
test
cmp
(bad)
(bad)
jmp
sub
cmp
pop
mov
ficom
pop
lahf
leave
or
cmp
dec
add
cs
mov
xchg
xchg
mov
retf
retf
add
push
mov
jb
mov
or
stos
imul
mov
cdq
dec
loope
xchg
ds
jmp
(bad)
(bad)
jmp
pop
mul
jno
mov
jmp
clc
cmc
sub
pop
(bad)
in
mov
push
fprem
jmp
jge
pop
dec
push
xchg
cs
outs
cmp
(bad)
pop
inc
in
pusha
pushf
adc
cmps
fsubr
mov
aad
mov
or
push
push
fiadd
fild
imul
dec
(bad)
dec
inc
movs
cld
mov
xchg
mov
ficomp
jl
test
fist
cli
mov
sahf
xor
add
mov
adc
sub
push
mov
mov
pop
popa
cld
sbb
mov
sub
pop
push
ins
cwde
por
aas
cmp
pop
and
std
mov
sub
fsubr
dec
push
clc
mov
sub
iret
in
addr16
mov
(bad)
call
out
and
cmps
je
lahf
jl
and
sub
shl
dec
(bad)
test
(bad)
(bad)
(bad)
cld
outs
icebp
lock
xchg
test
in
cmp
aas
xor
push
jmp
mov
mov
mov
inc
cli
adc
ret
rcl
loop
lods
xchg
and
das
clc
ret
stc
dec
enter
cs
dec
in
repnz
lock
js
aad
(bad)
call
inc
jmp
mov
shr
repnz
sbb
or
fidiv
push
loopne
mov
mov
inc
mov
cdq
push
jnp
push
popa
ins
pop
mov
hlt
jmp
dec
outs
lea
adc
xchg
into
sbb
jo
mov
or
ins
out
xor
(bad)
in
bound
imul
sbb
lock
mov
stc
jae
sbb
loopne
ror
out
data16
xor
loopne
repz
(bad)
(bad)
(bad)
jmp
lds
out
or
in
int3
pusha
jns
jl
call
xchg
(bad)
(bad)
(bad)
(bad)
mov
push
cmp
test
imul
or
ja
ds
sti
ud0
(bad)
call
sub
pop
shr
push
popf
leave
xor
retf
mov
shr
loopne
sub
aaa
leave
ror
cld
mov
cmp
mov
into
fimul
(bad)
dec
add
xor
imul
imul
repz
scas
call
es
call
(bad)
mov
lods
add
sbb
ja
(bad)
adc
int
sub
mov
popa
adc
stos
inc
mov
repz
mov
mov
mov
xchg
jl
inc
lods
cmp
cmp
out
mov
jmp
sub
mov
ins
cmps
xchg
pop
jle
mov
mov
and
xlat
push
sbb
inc
jl
sub
push
fcmovnb
call
lea
leave
lods
cmp
jb
mov
(bad)
(bad)
(bad)
inc
ins
scas
mov
iret
(bad)
iret
jmp
scas
jmp
movs
lea
lods
bnd
sub
ja
sar
pop
dec
mov
pushf
fmul
push
addr16
jb
stos
xlat
call
pop
nop
out
or
arpl
mov
in
lahf
call
into
xor
push
pushf
dec
fwait
fs
or
or
or
je
push
je
in
call
or
cli
dec
jmp
fldcw
mov
loop
(bad)
dec
inc
fisttp
bound
xchg
cmps
(bad)
sub
xor
not
jmp
popa
adc
push
(bad)
jg
pop
mov
xor
sti
pop
jl
dec
sub
in
ds
adc
in
(bad)
(bad)
(bad)
dec
ds
imul
sub
fldz
cs
xlat
pop
mov
add
sub
(bad)
jmp
and
mov
lock
test
xchg
imul
or
(bad)
xor
lds
dec
pop
dec
(bad)
(bad)
mov
mov
push
and
push
cmps
call
and
std
sub
in
test
or
fwait
lods
mov
cmps
jecxz
dec
mov
mov
call
sub
jg
(bad)
hlt
dec
sbb
sub
stos
cmp
ret
call
(bad)
(bad)
(bad)
fisttp
retf
aaa
retf
ins
cli
jmp
(bad)
nop
loop
nop
xor
test
adc
call
push
xchg
mov
mov
stos
jmp
imul
xor
dec
imul
push
sub
add
cmp
retf
lock
test
lock
dec
xchg
mov
(bad)
out
xor
mov
pushf
cmp
jbe
dec
sbb
xchg
in
in
lods
and
das
clc
mov
dec
add
xchg
fistp
jge
mov
mov
jb
xor
xor
retf
cmp
pop
scas
scas
xchg
pop
pop
xchg
sub
enter
push
shr
clc
(bad)
call
jecxz
and
das
mov
xchg
jmp
mov
push
push
in
in
(bad)
jg
jmp
stos
outs
and
cmp
sti
call
scas
imul
in
fcmovne
pusha
loopne
jo
pushf
lods
(bad)
mov
(bad)
(bad)
jmp
xchg
mov
imul
outs
addr16
sub
sar
push
sbb
mov
cmps
mov
ss
(bad)
jmp
fsub
mov
cmp
ror
fistp
icebp
(bad)
rcr
ins
adc
cmp
scas
push
sub
sti
loope
push
daa
pop
mov
jns
mov
stos
dec
(bad)
sub
jmp
jmp
xchg
ins
pop
cmp
mov
push
repz
dec
sbb
push
and
imul
lods
repnz
cmps
fbstp
not
xchg
(bad)
jg
xchg
dec
mov
lods
lods
cmps
(bad)
jmp
push
and
mov
ds
lahf
lahf
ds
and
xor
test
shr
stos
(bad)
(bad)
(bad)
out
push
xlat
mov
or
inc
pop
or
mov
jae
sbb
mov
xchg
mov
sub
or
xchg
fwait
sub
(bad)
dec
jmp
inc
mov
imul
add
push
(bad)
call
cdq
mov
call
and
ds
ret
mov
lahf
aad
mov
ss
(bad)
(bad)
(bad)
dec
pusha
mov
xor
mov
cmp
xchg
xchg
jmp
loopne
std
sbb
and
xchg
std
call
es
cmp
aaa
cld
adc
jo
loope
pop
lock
mov
push
fwait
mov
dec
cmp
adc
push
shl
rcl
(bad)
(bad)
sub
mov
mov
sub
inc
lods
mov
push
or
sub
data16
jae
sub
and
jg
push
ret
or
or
test
mov
stos
js
push
mov
cmp
mov
fsub
loopne
dec
sub
xchg
retf
or
(bad)
dec
jmp
es
mov
mov
out
and
lea
jecxz
mov
(bad)
(bad)
inc
in
ret
pop
inc
es
jb
mov
pop
mov
push
retf
dec
adc
(bad)
and
call
xor
inc
in
mov
mov
std
mov
call
cmp
cmp
push
sub
repz
jb
inc
inc
cli
cs
inc
mov
jns
ret
sub
push
mov
out
(bad)
jl
dec
fnsave
jecxz
adc
xchg
ret
in
mov
(bad)
push
mov
and
leave
cmp
sub
add
frstor
push
shl
or
push
lock
sti
push
pusha
sub
std
mov
xchg
or
aam
out
mov
xor
mov
das
sar
inc
fild
push
es
ret
loop
push
sbb
jecxz
(bad)
(bad)
inc
in
test
mov
movs
in
push
push
dec
test
inc
cmps
imul
sub
mov
(bad)
fwait
push
push
mov
loop
add
lea
dec
scas
add
test
(bad)
(bad)
jmp
mov
jg
xchg
sti
xchg
in
jnp
popa
xor
ja
push
dec
xchg
adc
push
sbb
(bad)
inc
pop
xchg
aad
sub
dec
sti
add
xchg
adc
jne
(bad)
outs
adc
inc
mov
jmp
dec
imul
or
fld
fcmovnbe
mov
and
add
popa
in
(bad)
(bad)
(bad)
jmp
jl
cmps
scas
dec
jbe
lahf
jae
and
mov
pop
add
mov
out
hlt
icebp
movs
sti
and
(bad)
(bad)
(bad)
jmp
lock
sub
dec
adc
mov
pop
sub
pop
mov
jns
out
stos
mov
cmp
shr
mov
pop
sbb
fild
call
mov
cmp
and
mov
call
call
cmc
jmp
js
call
sbb
mov
add
xchg
iret
movs
in
pop
ins
add
out
sbb
push
sar
call
int3
pop
push
data16
fsubr
clc
sub
fcom
enter
ja
imul
popf
pop
sar
fsub
lahf
xor
int
mov
mov
aam
stos
mov
cmp
mov
xchg
jno
mov
(bad)
jmp
cmp
imul
idiv
repnz
stos
(bad)
mov
jmp
adc
repz
out
adc
loop
xchg
aaa
push
add
mov
mov
xor
push
mov
dec
pop
ins
or
imul
push
cmps
call
test
jmp
mov
sahf
jecxz
jecxz
ret
jl
sub
cmps
les
(bad)
(bad)
jg
push
add
or
fstp
xchg
and
sub
xor
jle
fiadd
adc
sbb
mov
mov
(bad)
ss
jbe
iret
jo
(bad)
(bad)
call
jnp
mov
mov
mov
sbb
mov
sub
(bad)
jle
sbb
inc
jg
sbb
(bad)
(bad)
(bad)
call
sub
pop
sub
idiv
(bad)
cmp
stos
js
sub
repnz
ds
xchg
mov
(bad)
dec
add
es
mov
and
stos
fild
jmp
fs
mov
icebp
(bad)
cmp
shl
push
sub
(bad)
jmp
clc
mov
into
sub
in
movs
das
sbb
pop
repnz
push
daa
test
cld
call
jmp
or
lahf
int3
(bad)
(bad)
(bad)
jg
(bad)
or
cwde
mov
dec
jge
or
stos
sub
call
jle
loop
(bad)
pop
std
pop
pop
pop
pushf
lods
xchg
mov
and
sub
cmps
(bad)
(bad)
jg
jge
dec
fdivr
push
loope
xor
test
cmps
xchg
fld
icebp
and
push
iret
mov
mov
push
pop
cs
arpl
gs
mov
and
(bad)
(bad)
call
lea
sar
sbb
pop
mov
iret
dec
lea
sbb
sbb
outs
test
dec
jmp
cmp
test
cmp
ja
call
add
idiv
cmp
call
pop
call
sbb
sub
mov
in
daa
lea
lock
add
xor
out
(bad)
jmp
clc
jp
cmps
sbb
outs
jmp
ins
xchg
xor
mov
stos
retf
mov
enter
mov
out
cli
pop
jle
cmps
adc
repnz
(bad)
jmp
call
push
test
ds
mov
push
sub
sti
jle
(bad)
(bad)
xchg
mov
mov
push
inc
mov
ins
mov
in
sbb
bound
jne
aad
and
and
es
pop
add
into
xchg
mov
adc
and
jg
jmp
cmp
cmps
xchg
das
aas
daa
(bad)
mov
scas
retf
dec
inc
xor
std
sbb
xchg
loop
(bad)
fsubr
mov
fst
jecxz
retf
std
fbld
mov
xor
sub
push
scas
push
(bad)
push
std
mov
outs
pop
cld
stc
xchg
adc
mov
mov
or
bnd
mov
xchg
ja
ret
aaa
mov
movs
fst
jp
cmp
(bad)
(bad)
mov
loop
popf
fstp
add
mov
fdivrp
(bad)
dec
stos
push
in
cmp
in
imul
pop
fcomip
dec
mov
mov
sub
xchg
movs
or
mov
stos
push
cmp
(bad)
(bad)
call
add
stos
lods
mov
dec
cmp
xor
packssdw
(bad)
mov
pop
ins
loopne
mov
repnz
imul
(bad)
(bad)
(bad)
jmp
mov
into
inc
sbb
in
cmp
fisub
xchg
hlt
lock
sbb
cmc
jmp
leave
addr16
dec
rcl
fs
(bad)
xchg
mov
and
(bad)
(bad)
(bad)
jmp
(bad)
aam
xor
jnp
mov
adc
popf
and
add
ins
lods
xor
(bad)
(bad)
call
repnz
mov
mov
cs
xor
mov
stos
mov
dec
cld
mov
loopne
data16
xor
repz
fldcw
or
pop
call
jmp
dec
pop
neg
jg
add
nop
mov
fisttp
mov
adc
(bad)
(bad)
jg
sub
mov
xacquire
sub
lahf
ficom
shl
inc
(bad)
dec
fisubr
popa
aam
in
(bad)
lahf
pushf
je
popa
sar
sbb
xchg
mov
adc
(bad)
call
test
pop
xchg
div
loope
sbb
(bad)
(bad)
(bad)
call
push
cdq
xor
mov
pop
(bad)
(bad)
stos
dec
lea
fisubr
stos
push
ds
bound
xchg
rcr
adc
call
repnz
mov
(bad)
mov
out
dec
test
lock
call
add
sbb
aas
movs
xor
and
jbe
xor
mov
mov
test
cld
mov
cmp
in
jle
or
mov
fcomp
sar
call
ret
imul
es
fistp
sub
out
cmp
pop
in
dec
adc
pop
stos
repnz
fistp
shl
push
push
jnp
adc
mov
(bad)
call
imul
or
shl
jno
outs
movntps
(bad)
(bad)
(bad)
cmp
cwde
dec
ss
cmp
mov
enter
enter
fwait
scas
xchg
std
mov
sbb
mov
mov
add
dec
ds
lods
stos
inc
sbb
add
std
push
push
outs
loopne
into
test
cld
jo
shr
jns
loop
(bad)
xor
enter
js
pop
sub
(bad)
clc
(bad)
(bad)
mov
push
and
lahf
ins
or
stos
pop
clc
push
aaa
jb
(bad)
outs
(bad)
jmp
mov
sub
mov
xlat
fs
daa
jmp
mov
push
jp
call
pop
dec
fistp
retf
out
pop
add
jne
inc
imul
pcmpeqd
cli
or
jnp
dec
popa
or
mov
(bad)
sub
mov
(bad)
call
fdivr
call
(bad)
mov
js
sub
fimul
enter
mov
into
or
setno
jmp
mov
fwait
clc
dec
scas
shl
outs
(bad)
fisttp
scas
adc
or
shl
cs
stos
mov
or
mov
fsubr
(bad)
jge
ins
xor
imul
arpl
ret
pop
inc
gs
mov
cmps
sub
daa
(bad)
pop
sub
lods
push
(bad)
(bad)
inc
push
call
test
mov
test
mov
xchg
fistp
(bad)
jg
test
xor
pop
pop
arpl
and
dec
stos
sub
outs
cwde
push
stos
fdivr
clc
inc
jmp
jbe
mov
loope
inc
mov
in
adc
popa
or
push
in
int
jae
push
cmc
(bad)
jmp
sub
dec
mov
daa
jmp
mov
pop
cmp
push
ja
ret
pop
jb
lea
dec
cmp
(bad)
fild
mov
mov
mov
pop
cli
(bad)
(bad)
jmp
fdiv
daa
out
mov
stos
or
rol
gs
mov
(bad)
out
add
pushf
mov
clc
and
clc
(bad)
int3
sub
ins
jle
mov
add
test
pop
jp
je
mov
(bad)
push
mov
shr
inc
in
retf
sti
cmps
test
push
stos
pushf
xlat
test
scas
popa
out
mov
in
jo
(bad)
(bad)
jg
movs
dec
cmp
push
mov
popf
or
out
icebp
sub
je
or
or
call
sub
dec
(bad)
jmp
sti
push
jecxz
mov
imul
popa
or
imul
rcr
mov
je
cmp
xor
(bad)
jg
xchg
or
mov
stos
movs
out
push
mov
repz
adc
(bad)
call
in
dec
inc
dec
add
cli
lock
mov
packuswb
jo
imul
hlt
add
inc
ficomp
repnz
cmp
dec
push
push
(bad)
(bad)
mov
clc
dec
outs
push
cmp
cvttps2pi
push
pop
(bad)
pushf
shr
pop
jge
push
mov
mov
xchg
in
sub
aaa
dec
rcr
(bad)
sti
mov
push
cmp
mov
aam
inc
xor
loopne
mov
add
pop
sti
push
in
ror
xor
jns
add
pop
leave
data16
push
mov
push
sub
mov
out
out
iret
pop
and
add
jmp
lock
xor
or
sbb
lahf
jmp
pop
mov
mov
dec
cmp
dec
andnps
outs
mov
sbb
sub
cwde
xor
(bad)
cmp
mov
mul
mov
mov
mov
loop
scas
mov
(bad)
(bad)
(bad)
fsub
push
or
sbb
mov
lods
pop
pushf
pop
mov
xor
(bad)
mov
inc
sub
add
pop
or
dec
js
mov
mov
xchg
mov
and
(bad)
(bad)
(bad)
jmp
ins
pop
sub
rcl
pop
loop
cmps
xor
xor
fnstsw
xor
pop
hlt
(bad)
mov
lahf
addr16
loop
sbb
std
call
cli
outs
add
cdq
out
or
pop
mov
jmp
mov
adc
mov
and
mov
retf
test
scas
xor
mov
jmp
jmp
and
pop
push
test
lahf
lods
sti
push
jp
xor
out
inc
push
jae
popf
pop
ret
mov
push
sbb
(bad)
(bad)
(bad)
fmul
and
xchg
jmp
mov
lods
pop
out
sub
mov
adc
(bad)
push
popa
sub
push
lds
lock
xchg
scas
sub
cli
fcomp
into
or
sar
mov
out
in
mov
pop
pop
add
sub
mov
xor
jmp
mov
(bad)
dec
imul
pusha
push
jge
mov
(bad)
mov
idiv
mov
(bad)
(bad)
(bad)
(bad)
cmp
jg
pop
xchg
mov
adc
mov
push
in
pop
scas
mov
or
inc
pop
mov
fcmovne
mov
mov
push
call
cmp
push
movhlps
sbb
inc
add
push
sti
or
stos
enter
rcl
(bad)
mov
stc
lods
sub
pop
push
fisubr
ror
adc
(bad)
(bad)
push
mov
in
pop
clc
movs
mov
retf
dec
cmp
cdq
xchg
mov
jae
ss
call
cmp
mov
jae
mov
jb
(bad)
(bad)
push
mov
mov
mov
mov
xlat
mov
sbb
loope
mov
mov
(bad)
jmp
movs
lahf
loopne
popf
inc
mov
jg
add
dec
dec
inc
test
sar
(bad)
dec
mov
jp
scas
dec
mov
pop
cwde
lahf
and
jmp
lds
mov
(bad)
inc
aaa
jmp
sbb
mov
mov
sbb
mov
bound
(bad)
(bad)
(bad)
push
std
leave
and
inc
jg
out
mov
jmp
les
jl
pop
or
int
fucomi
add
mov
mov
fsubr
call
push
mov
inc
outs
outs
loop
and
cld
(bad)
call
xchg
sub
mov
aaa
sub
fcom
outs
enter
xchg
mov
movs
lea
hlt
aaa
out
mov
nop
sbb
fiadd
sbb
sub
cs
sar
ret
fsub
lods
(bad)
idiv
inc
mov
sbb
js
mov
xchg
add
(bad)
in
jmp
repnz
mov
mov
dec
clc
mov
fdiv
in
shr
sbb
in
sbb
or
(bad)
(bad)
jl
sub
dec
repnz
das
cli
mov
dec
fadd
jb
cmps
mov
sbb
(bad)
mov
es
add
mov
std
(bad)
(bad)
mov
mov
arpl
adc
lea
leave
test
push
jecxz
sbb
or
fs
je
icebp
pusha
leave
sar
jmp
adc
mov
inc
jmp
ins
pop
lods
std
(bad)
call
xor
pop
jb
pop
ret
in
add
mov
retf
mov
(bad)
call
in
popa
jg
mov
lock
fptan
pop
fdiv
cmp
jmp
(bad)
jmp
shl
into
cwde
(bad)
aas
clc
mov
sbb
ror
or
clc
stos
push
sbb
cli
jmp
es
or
mov
add
or
jecxz
or
adc
jb
stos
mov
pop
icebp
sbb
lods
mov
retf
cs
mov
(bad)
(bad)
adc
mov
(bad)
in
in
mov
add
jmp
mov
cli
(bad)
repz
std
(bad)
cmp
(bad)
scas
cmp
cs
sub
and
mov
xor
(bad)
cmp
add
cmp
pop
test
cs
nop
mov
call
fimul
mov
or
adc
test
mov
cld
cmps
mov
mov
mov
das
fsubr
(bad)
(bad)
push
das
fidiv
mov
hlt
retf
sbb
es
sbb
pop
jnp
movs
(bad)
mov
ins
jle
out
mov
cmp
mov
std
jmp
(bad)
adc
stos
sahf
jge
popa
mov
fstp
repz
add
bound
cmp
out
push
xchg
fnstcw
dec
fdivr
cs
rcl
dec
repnz
(bad)
dec
lock
pop
or
mov
sbb
pop
inc
shr
or
(bad)
(bad)
(bad)
(bad)
jl
loop
or
call
mov
cmc
test
sti
mov
loopne
out
cmp
pop
jg
cs
call
retf
movs
ins
jmp
mov
mov
mov
mov
jp
loopne
push
sbb
sti
inc
xor
imul
sub
stos
inc
iret
rcr
dec
imul
sar
dec
pushf
imul
retf
sub
std
mov
iret
cwde
repz
rol
jmp
(bad)
(bad)
jmp
pop
sbb
loop
jmp
retf
push
mov
test
add
cs
in
ficom
lock
jmp
(bad)
pop
push
les
xchg
in
cmp
mov
popa
adc
(bad)
dec
test
rcl
push
mov
sbb
out
mov
xchg
xchg
aad
sbb
mov
in
ins
or
shl
sub
sub
or
rcr
jnp
(bad)
(bad)
jg
sub
clc
ins
sbb
jmp
mov
(bad)
(bad)
(bad)
(bad)
js
test
cld
data16
mov
fidivr
in
ja
enter
imul
in
ds
xchg
pop
mov
mov
stos
gs
dec
and
lahf
mov
(bad)
(bad)
(bad)
out
cmp
mov
jle
movs
sbb
jmp
jl
inc
sti
add
push
inc
lock
pop
sub
and
(bad)
push
leave
lods
xchg
stc
ret
ret
or
jle
jge
pop
mov
lahf
xor
inc
xlat
out
bound
(bad)
(bad)
js
adc
jne
sbb
mov
mov
mov
leave
or
hlt
(bad)
cmp
imul
or
push
enter
inc
add
or
out
mov
and
out
out
mov
(bad)
mov
fstp
sbb
adc
mov
loopne
test
xor
loopne
call
ss
call
dec
ret
test
rcr
cld
pushf
sbb
cmc
jne
adc
(bad)
stc
sub
sbb
push
jmp
mov
pop
jge
xchg
push
mov
jle
test
rcr
ja
jg
jmp
repnz
xor
inc
sbb
bound
in
fwait
inc
jmp
cli
or
(bad)
and
and
cmp
jo
mov
pop
cmps
jmp
adc
sbb
or
mov
jmp
nop
shl
movs
cli
jg
imul
sub
mov
xchg
shr
aas
(bad)
(bad)
(bad)
push
stc
mov
mov
out
popf
jmp
jge
adc
mov
shl
sub
cdq
or
test
inc
arpl
or
lock
cli
aas
push
jmp
clc
sub
lock
jp
inc
jo
cmps
add
(bad)
inc
loopne
adc
sub
cld
mov
or
jb
(bad)
pop
scas
mov
out
(bad)
jg
dec
sar
loopne
test
lock
stc
lock
dec
dec
lea
sub
(bad)
jg
stos
(bad)
test
(bad)
stos
pop
or
jno
inc
mov
pop
pop
jl
repnz
jmp
xchg
mov
outs
pop
dec
imul
inc
pop
icebp
inc
sbb
das
add
sub
(bad)
(bad)
jg
xchg
fld
pusha
push
stos
ja
pop
sub
add
mov
add
mov
pop
cmp
jmp
repnz
retf
cmp
cmp
mov
(bad)
(bad)
(bad)
(bad)
retf
test
in
xchg
ins
inc
jmp
and
(bad)
jp
mov
mov
mov
push
(bad)
inc
jl
push
add
or
push
pushf
cmps
(bad)
iret
adc
inc
cs
mov
repz
(bad)
pop
sti
aas
cmp
ja
pop
sub
outs
mov
sub
push
sub
pusha
neg
mov
ficomp
movs
jp
jno
xor
movs
(bad)
(bad)
(bad)
mov
xor
stc
stos
stos
mov
add
cmp
mov
mov
inc
clc
cmp
fsubr
(bad)
(bad)
jmp
stc
mov
js
dec
ins
retf
out
out
imul
fcomp
lea
std
pop
sbb
and
scas
cli
jg
enter
xchg
xor
mov
loop
sub
(bad)
inc
bound
lahf
scas
push
call
lods
push
cmc
(bad)
(bad)
dec
push
aam
aam
adc
ds
sub
add
imul
fistp
(bad)
sbb
add
mov
idiv
in
sub
inc
icebp
inc
(bad)
enter
cmps
cmp
jmp
jmp
inc
movs
mov
mov
mov
scas
pop
xor
jg
pop
jmp
or
xchg
mov
retf
stos
xor
in
(bad)
call
repz
leave
push
xor
je
pop
push
sub
lods
loopne
cmp
add
jg
xchg
mov
scas
pushf
sbb
sahf
cmp
mov
je
xchg
add
out
js
sub
dec
push
fs
cmc
cmp
sbb
retf
shl
aad
mov
push
xchg
out
sar
mov
(bad)
(bad)
xor
or
mov
out
loopne
out
iret
push
cli
push
jnp
mov
mov
(bad)
mov
sbb
(bad)
or
xor
iret
pushf
retf
mov
jl
shr
jmp
fisubr
stos
imul
ss
(bad)
mov
xor
or
pushf
shr
clc
mov
leave
in
imul
fnstcw
adc
outs
lock
cs
(bad)
out
(bad)
(bad)
(bad)
call
pop
mov
loopne
call
cmp
mov
pop
aam
push
jmp
cli
mov
add
cmps
cmps
rcr
add
pop
mov
retf
mov
pusha
push
mov
invd
mov
sti
or
adc
jl
add
cwde
cmc
mov
ror
mov
stos
inc
cs
jle
push
and
std
mov
adc
sub
and
push
add
fldcw
dec
bsr
push
xor
jecxz
ja
ror
ds
rcr
sub
scas
fnstcw
out
and
mov
ror
loopne
and
shl
pusha
sbb
fcomp
cwde
das
imul
adc
test
mov
mov
fnstsw
js
cmp
xor
jp
pop
xchg
sbb
or
sub
jg
inc
mov
add
loop
loop
rcr
or
jmp
and
out
in
arpl
mov
sub
shl
out
dec
adc
stc
ret
xchg
loope
aam
(bad)
(bad)
(bad)
out
stos
push
adc
out
cmps
test
sub
mov
mov
and
(bad)
(bad)
(bad)
jmp
popa
(bad)
ja
xchg
(bad)
in
cmp
enter
sahf
and
scas
or
mov
mov
sub
ror
jb
stos
je
lods
inc
inc
shl
inc
mov
movs
sbb
mov
call
add
mov
mov
test
push
sub
push
lods
add
(bad)
dec
mov
adc
sub
iret
daa
(bad)
xor
and
jne
fisub
or
push
(bad)
push
pop
mov
(bad)
(bad)
call
add
mov
xchg
les
mov
fidivr
sahf
pop
ror
sub
sbb
push
adc
out
lea
jp
ins
inc
es
cmps
in
adc
mov
mov
jmp
mov
lods
(bad)
xchg
ins
(bad)
jns
aam
sar
push
not
push
and
fbstp
mov
or
(bad)
dec
mov
adc
add
push
jmp
mov
call
jmp
inc
cld
push
push
jo
xlat
cdq
pop
retf
jmp
idiv
mov
jmp
pop
imul
sar
jle
mov
movs
push
jmp
xchg
(bad)
(bad)
inc
fstp
jmp
retf
push
xor
pop
movs
jnp
das
cld
push
mov
or
sbb
dec
pop
inc
(bad)
(bad)
jmp
xor
and
mov
fwait
xor
push
dec
mov
xor
loop
cmc
(bad)
(bad)
mov
or
add
out
(bad)
bound
sub
jmp
rol
jbe
sbb
cmc
sar
(bad)
jmp
xchg
sbb
sub
iret
fnstenv
(bad)
push
fistp
mov
mov
sbb
push
mov
jmp
sti
pop
pop
inc
xchg
jmp
or
and
(bad)
mov
loopne
(bad)
(bad)
mov
sbb
and
stc
cdq
outs
fidivr
pop
jle
sub
mov
push
push
add
jp
mov
loop
je
(bad)
cs
aas
fisubr
in
(bad)
fnsave
dec
ret
aad
cld
fcom
std
(bad)
inc
mov
ficomp
cmp
xchg
jg
(bad)
out
test
dec
fisttp
ret
dec
jmp
cmp
in
das
out
push
cmp
in
into
mov
(bad)
(bad)
(bad)
(bad)
fimul
cli
xchg
jmp
push
cmps
and
jnp
push
stos
jecxz
push
out
clc
rol
(bad)
out
cli
adc
fsub
push
or
clc
test
shl
call
call
stos
jl
mov
xor
sbb
call
jge
aaa
pop
ins
push
test
push
push
imul
dec
sbb
mov
pushf
scas
les
addr16
jns
xor
cld
jmp
xor
bsf
je
(bad)
mov
mov
xchg
pop
jae
cmp
push
sub
sbb
(bad)
call
mov
push
out
sub
retf
loop
adc
int
pop
(bad)
call
or
add
call
sbb
adc
(bad)
fild
mov
add
pop
push
inc
adc
(bad)
jp
add
dec
xor
lock
dec
je
(bad)
(bad)
fistp
mov
(bad)
test
(bad)
fmul
movs
mov
pop
mov
ds
add
mov
mov
movs
inc
cmps
mov
scas
ja
(bad)
jmp
cs
rol
es
cmps
jb
jo
inc
ret
ret
push
pop
sbb
movs
cmp
aaa
(bad)
sbb
dec
jmp
ret
pop
jmp
push
dec
lds
pop
loopne
push
ss
pop
lock
mov
adc
and
mov
pushf
daa
push
lea
(bad)
(bad)
(bad)
mov
int3
(bad)
cmp
jge
or
xchg
test
add
clc
and
mov
fadd
ds
lock
pop
and
mov
push
scas
or
stc
xor
mov
enter
and
call
push
mov
dec
das
mov
mov
outs
or
mov
jp
out
and
mov
jmp
(bad)
(bad)
(bad)
fisubr
or
sub
ret
mov
mov
in
dec
push
lods
(bad)
(bad)
call
retf
das
ja
sbb
xor
mov
push
cmp
or
outs
call
mov
outs
mov
lods
bound
retf
jp
in
retf
ret
mov
(bad)
(bad)
(bad)
jg
jp
adc
ficom
fwait
das
and
mov
jmp
pop
and
adc
fistp
adc
(bad)
(bad)
js
mov
jle
mov
test
imul
mov
adc
stos
sub
aas
js
in
lock
jmp
xchg
fdivr
push
leave
dec
mov
aas
retf
xchg
je
js
scas
dec
cli
mov
(bad)
frstor
mov
sub
mov
mov
sub
dec
push
fld
mov
xchg
pop
and
sbb
sbb
mov
cwde
aad
fnstcw
add
mov
loop
adc
mov
pop
inc
and
(bad)
(bad)
jmp
adc
sub
imul
iret
out
or
inc
jne
(bad)
or
ins
ins
(bad)
push
mov
cli
jno
mov
sar
jp
das
mov
push
test
mov
cmp
sahf
(bad)
(bad)
(bad)
dec
sub
push
dec
sub
pop
das
sbb
sub
push
fisub
dec
xchg
sub
fimul
mov
popf
or
xchg
es
(bad)
add
stos
xchg
lds
cli
(bad)
jmp
jno
int3
xchg
in
cmp
hlt
push
gs
popa
in
ret
mov
mov
loopne
or
mov
jbe
pop
(bad)
(bad)
jg
inc
adc
adc
js
xchg
imul
stc
sbb
dec
cdq
lds
xor
push
add
adc
(bad)
dec
xchg
xchg
push
adc
sub
aas
xchg
and
pop
sahf
xchg
mov
jg
jmp
xor
cs
lods
stos
jle
sub
(bad)
(bad)
push
loop
data16
ror
sub
mov
stos
pop
sbb
sbb
sub
lods
loop
sub
jg
std
(bad)
fcomip
adc
das
jp
adc
in
mov
pushf
xor
mov
or
inc
es
mov
call
push
fbld
dec
push
cmp
mov
fldcw
and
imul
xchg
mov
mov
sbb
sar
rcr
cmp
stc
or
das
xchg
mov
inc
mov
(bad)
(bad)
call
sub
sbb
and
into
call
daa
in
(bad)
mov
cmp
dec
inc
xchg
jmp
dec
ficomp
shl
cmps
enter
call
(bad)
push
cmp
(bad)
fisub
xchg
in
in
mov
(bad)
(bad)
jp
retf
mov
jns
mov
xchg
(bad)
(bad)
(bad)
mov
mov
or
jns
mov
inc
cmp
add
and
jns
and
push
mov
fisubr
sbb
sub
call
cmp
dec
xor
imul
mov
(bad)
fimul
stos
push
(bad)
dec
dec
xor
mov
or
cmp
mov
add
mov
pop
ins
mov
mov
sub
clc
test
ss
push
rcl
cld
scas
jg
mov
add
cmp
jmp
sar
lahf
dec
jmp
mov
imul
mov
mov
or
inc
daa
into
imul
add
out
in
cdq
dec
(bad)
(bad)
(bad)
(bad)
cmp
mov
fdiv
or
push
repnz
sbb
mov
pop
sbb
clc
test
(bad)
xchg
(bad)
xchg
or
sub
lods
adc
(bad)
(bad)
mov
(bad)
xor
ds
cli
sbb
sar
mov
ret
pop
icebp
inc
(bad)
(bad)
cmp
or
pushf
call
or
pushf
push
mov
push
add
add
sub
add
(bad)
(bad)
clc
mov
sub
and
xchg
and
dec
enter
cwde
sub
cmp
popf
sbb
movs
pop
dec
push
pop
push
mov
add
call
out
clts
stos
mov
icebp
out
jp
sub
cli
clc
or
cwde
js
cwde
sbb
mov
pusha
sar
jmp
les
iret
in
std
dec
lods
add
cmp
pop
inc
(bad)
(bad)
(bad)
push
inc
shl
sbb
leave
inc
sar
jecxz
loope
jo
cmps
in
scas
lods
xchg
ins
cmps
ret
(bad)
(bad)
dec
xchg
push
test
stos
pop
pushf
xchg
add
cmc
popf
sub
mov
mov
(bad)
jg
leave
retf
cmp
inc
shl
stos
pop
mov
scas
pop
jb
stos
mov
cmp
ficomp
(bad)
jmp
mov
ja
mov
jmp
sbb
daa
mov
(bad)
cmp
adc
push
adc
pop
sti
mov
std
shl
sbb
and
jno
scas
clc
(bad)
jmp
xchg
scas
scas
and
(bad)
(bad)
mov
mov
mov
cmps
cs
(bad)
(bad)
(bad)
jge
push
(bad)
sbb
fisttp
ret
sub
push
add
add
fistp
sub
or
pusha
pop
sbb
push
cld
mov
push
pop
iret
ins
and
sbb
jle
mov
pusha
(bad)
inc
pop
cmc
cli
cmp
mov
es
stc
or
add
lock
push
iret
ds
push
out
lock
mov
jmp
push
jmp
push
imul
sub
mov
nop
inc
pushf
dec
aaa
imul
and
xor
jge
ficom
outs
cli
jg
jle
pop
or
loope
and
ja
jle
mov
and
and
in
(bad)
(bad)
(bad)
push
jne
sbb
stc
popf
mov
mov
iret
jno
call
loop
(bad)
call
jmp
in
mov
jle
shr
movs
mov
pop
imul
test
add
push
out
xor
cmp
inc
xchg
int3
fsub
sub
bound
cmp
dec
sbb
loop
call
dec
xchg
jmp
push
jle
sbb
ret
add
dec
call
(bad)
mov
xchg
mov
inc
sub
(bad)
inc
out
inc
out
and
sar
mov
(bad)
jmp
add
das
pop
push
and
sub
pop
fmul
and
add
cmp
(bad)
mov
pop
in
xchg
mov
cmps
xchg
(bad)
cld
(bad)
in
mov
into
imul
and
(bad)
jg
repnz
cmp
lahf
sub
xchg
test
clc
push
repnz
ret
cmp
jns
(bad)
fst
ja
aaa
xor
fwait
push
mov
and
cdq
and
push
add
in
fnstenv
or
mov
(bad)
jg
sar
bound
jmp
xchg
loop
(bad)
call
xor
ja
jmp
pop
cs
cli
loope
pop
adc
(bad)
(bad)
(bad)
dec
pop
sbb
psllw
out
add
repz
ret
push
mov
sbb
add
(bad)
call
scas
stc
sub
fdivr
mov
cmps
pop
xor
fldenv
dec
jmp
cli
outs
mov
imul
js
cmp
or
stc
or
lock
jmp
cmp
(bad)
call
ret
xor
mov
push
test
sar
jg
sti
push
adc
call
sar
out
(bad)
das
(bad)
jg
mov
pop
adc
push
and
(bad)
fwait
push
(bad)
mov
adc
outs
loop
(bad)
(bad)
cmp
sahf
ds
jle
inc
mov
pop
pop
cs
mov
inc
out
(bad)
jmp
imul
and
jp
and
mov
dec
sub
out
and
rcl
mov
(bad)
jg
mov
push
push
cli
(bad)
sub
jp
aad
bound
(bad)
push
sbb
mov
mov
inc
int3
sub
(bad)
(bad)
(bad)
dec
call
inc
push
imul
ror
bound
jnp
leave
pop
xor
lock
lock
jp
jle
icebp
stos
xchg
je
std
lds
jmp
(bad)
(bad)
(bad)
fild
mov
pop
cmp
cli
mov
mov
xor
icebp
into
or
mov
mov
stos
cmps
adc
add
or
mov
stos
div
into
ins
and
bnd
into
cs
shr
xchg
jmp
pop
(bad)
(bad)
call
cwde
jl
out
aas
mov
sub
pushf
mov
pop
fisttp
addr16
das
loop
(bad)
push
retf
ret
aas
jmp
cs
cs
or
outs
out
pop
loopne
pop
cmp
(bad)
(bad)
mov
jg
or
jnp
in
vpshufhw
xor
(bad)
xor
call
cld
ffreep
out
sbb
cmp
cmp
retf
call
mov
cli
ins
loope
clc
adc
jne
push
or
adc
stos
sbb
or
push
push
mov
or
cmp
call
(bad)
aaa
cs
ja
in
sub
daa
cld
cmps
xchg
outs
adc
test
sbb
std
push
mov
(bad)
repnz
xchg
xchg
lea
push
or
(bad)
jg
xor
js
cli
adc
add
mov
dec
in
loope
and
lock
clc
and
add
add
(bad)
call
mov
sets
loopne
test
jmp
call
in
loope
stos
hlt
popa
sub
imul
arpl
add
cwde
les
fdivr
sar
(bad)
mov
in
cwde
jmp
cmp
inc
std
push
push
cld
mov
jnp
je
push
mov
or
fucomi
test
stos
sahf
pop
lea
cmp
xlat
popa
dec
icebp
call
lea
lea
or
push
shr
dec
in
fiadd
lods
or
push
scas
sub
push
dec
(bad)
icebp
cmp
lods
push
(bad)
jmp
push
out
mov
jmp
mov
call
sar
mov
into
loopne
test
xchg
stos
cmp
and
jno
cli
or
fiadd
cmp
jmp
(bad)
(bad)
(bad)
fbstp
cld
aad
push
sbb
xor
movs
iret
int
ja
push
in
imul
jb
mov
(bad)
(bad)
(bad)
call
call
pop
stc
mul
(bad)
into
loope
in
inc
gs
cmp
dec
mov
outs
fiadd
push
push
pusha
outs
sub
mov
push
xor
imul
mov
add
adc
pop
lods
xchg
pushf
stc
popa
aas
push
jg
lock
ins
inc
loop
pusha
inc
movs
mov
movs
cmp
push
stc
mov
dec
inc
int
iret
hlt
fwait
fwait
mov
stos
lea
call
pop
or
pushf
push
cmp
cmp
push
sti
idiv
movs
iret
dec
popa
test
sbb
scas
push
pop
outs
push
(bad)
(bad)
in
cdq
jmp
test
lea
cmps
xchg
stos
mov
jmp
jg
ins
mov
inc
push
int3
sub
shl
pop
xor
cs
out
mov
dec
mov
in
and
push
mov
sub
out
pop
mov
shl
test
xchg
sahf
mov
inc
in
and
imul
stos
push
hlt
data16
fcmovnb
scas
dec
lods
enter
stos
in
out
fisttp
add
or
add
movs
inc
pop
rcr
mov
jmp
jmp
mov
out
or
mov
push
stos
or
sub
mov
inc
jnp
cmp
mov
(bad)
push
and
mov
scas
sub
xchg
loop
pop
xchg
out
mov
clc
push
mov
or
mov
in
fld
push
loopne
sub
jmp
addr16
xchg
push
movs
loopne
cs
lock
mov
push
jle
xor
or
xor
cwde
clc
push
jecxz
mov
sub
mov
mov
scas
loopne
xchg
mov
imul
jo
sub
sub
sub
repnz
push
add
js
test
rep
scas
mov
push
imul
add
inc
in
test
ss
pusha
xor
(bad)
jp
das
xor
push
lahf
iret
aad
movs
pop
xchg
fbstp
inc
add
aaa
mov
mov
stos
shl
out
mov
cmp
jp
rcl
xchg
test
leave
pop
jbe
in
in
jmp
out
push
(bad)
mov
in
movs
sub
aad
xor
cmp
pop
test
ficomp
mov
lea
ss
(bad)
(bad)
jmp
sub
std
xor
add
push
mov
inc
xchg
std
sbb
push
(bad)
(bad)
(bad)
push
shr
sub
inc
mul
or
or
hlt
or
mov
push
dec
call
push
clc
jmp
adc
test
pop
retf
push
fwait
sub
mov
stos
(bad)
mov
test
mov
(bad)
inc
mov
push
mov
and
clc
pop
add
dec
mov
(bad)
sub
adc
sub
mov
mov
hlt
mov
mov
jle
(bad)
(bad)
push
jle
mov
pop
xchg
or
fisttp
movs
sbb
jmp
je
adc
enter
retf
fsubrp
jnp
mov
mov
(bad)
jmp
popf
jle
push
sbb
xchg
leave
stos
frstor
mov
test
push
(bad)
outs
movs
mov
push
ins
jg
test
retf
vmovss
sub
xor
xor
mov
pop
or
ins
test
mov
lods
cmp
movs
dec
imul
or
call
cld
xchg
mov
push
adc
scas
(bad)
sbb
adc
mov
std
call
cwde
mov
(bad)
clc
xchg
daa
mov
(bad)
jg
and
jmp
inc
lods
and
rcl
gs
imul
movs
dec
retf
stos
neg
pushf
push
dec
(bad)
(bad)
(bad)
jg
pop
scas
jge
mov
iret
mov
pop
es
and
mov
mov
call
sbb
push
xchg
or
mov
aad
xchg
push
mov
(bad)
jg
rcl
es
je
popa
js
jmp
and
jnp
(bad)
(bad)
push
into
dec
inc
cmp
call
mov
cdq
test
in
pop
and
out
xor
out
aam
test
clc
mov
sub
xor
or
ret
retf
jmp
inc
shl
sub
dec
sbb
xchg
(bad)
iret
loop
pushf
clc
(bad)
clc
jmp
adc
arpl
dec
xor
setb
lahf
(bad)
jmp
hlt
out
dec
sub
sbb
fimul
(bad)
out
cli
push
push
cmp
mov
shl
push
or
stos
jno
add
or
stos
ret
enter
fidivr
xor
dec
daa
ds
sub
sbb
rcr
dec
xchg
out
fisubr
(bad)
jg
outs
mov
jle
inc
(bad)
xchg
adc
call
mov
(bad)
(bad)
(bad)
push
fistp
xor
lods
sub
shr
mov
and
xor
jle
ds
(bad)
push
add
test
loopne
inc
pop
int3
xchg
mov
lods
jle
sub
daa
jmp
call
adc
(bad)
jecxz
sbb
jl
xor
out
push
jno
dec
lods
dec
daa
mov
adc
fcomp
iret
ret
add
mov
or
mov
dec
das
add
ins
pushf
int3
(bad)
(bad)
(bad)
jg
sub
mov
scas
xchg
pushw
les
js
(bad)
lahf
adc
sub
sbb
stc
dec
test
mov
cwde
movs
ficomp
push
(bad)
(bad)
(bad)
jmp
in
out
jp
mov
in
mov
mov
add
adc
jmp
sbb
jp
das
sar
jp
dec
add
sbb
push
sub
mov
jmp
adc
aaa
xchg
retf
xor
dec
dec
pop
ds
out
clc
js
outs
jp
out
aad
pop
lods
mov
jl
and
repnz
out
add
mov
aad
pop
call
test
mov
push
les
sub
bound
adc
(bad)
(bad)
inc
test
sub
loopne
xchg
cmc
push
cmc
(bad)
mov
das
jbe
jle
in
aam
je
xchg
div
rol
stos
test
dec
fwait
das
aam
loop
out
(bad)
(bad)
(bad)
hlt
enter
jmp
mov
push
call
jle
retf
fcomi
ins
mov
jmp
es
jl
test
shl
sbb
pop
mov
mov
mov
call
xor
mov
push
xchg
in
rcl
cmp
(bad)
jmp
fucompp
pop
sbb
movs
or
outs
mov
sbb
mov
mov
(bad)
daa
ror
jle
pop
or
push
adc
mov
repnz
and
(bad)
call
(bad)
sti
jnp
xchg
cld
cmp
js
lahf
das
pop
outs
imul
repnz
(bad)
(bad)
call
xor
jmp
add
add
jnp
mov
mov
hlt
(bad)
call
jbe
repnz
movs
sub
shl
(bad)
(bad)
leave
sub
aad
jno
inc
scas
add
mov
sub
jg
push
xor
(bad)
xor
mov
push
inc
pop
inc
dec
cld
pop
xchg
(bad)
jmp
adc
mov
test
inc
mov
lock
mov
sub
scas
aas
and
(bad)
out
add
mov
imul
sbb
vcvtsi2sd
fmul
dec
jge
ror
inc
sub
fwait
push
sahf
(bad)
xchg
(bad)
(bad)
inc
test
pop
mov
in
xchg
mov
int3
pop
jecxz
(bad)
cli
sub
pop
(bad)
(bad)
(bad)
jmp
sbb
fcmovbe
mov
mov
fisttp
pop
ins
or
dec
pop
or
(bad)
out
test
mov
sahf
mov
call
loopne
push
xchg
lods
pop
rol
push
in
sbb
lahf
test
inc
call
mov
sub
outs
ins
daa
push
mov
or
adc
loop
cmp
jmp
std
mov
cmp
adc
jns
popf
or
inc
jmp
inc
lods
aam
mov
cmc
or
sbb
fisttp
test
xchg
lock
call
push
(bad)
out
and
pop
loop
sub
adc
(bad)
(bad)
jg
xchg
dec
inc
aas
retf
inc
mov
mov
outs
jmp
xor
jne
push
inc
retf
mov
jmp
mov
add
loope
mov
std
dec
sub
mov
jmp
dec
clc
pop
es
pop
fdiv
pushf
pause
or
dec
pop
jmp
push
js
mov
stos
das
(bad)
(bad)
jg
add
mov
push
fmul
jo
mov
mov
mov
cs
scas
pop
cmp
xor
jle
sub
add
adc
jmp
mov
sub
add
xor
mov
inc
into
cmps
sbb
mov
or
mov
sub
shl
dec
dec
sbb
sbb
(bad)
(bad)
jmp
jg
mov
outs
or
scas
add
xlat
cmp
test
pop
push
jmp
or
(bad)
(bad)
jmp
or
sub
clc
(bad)
mov
add
ins
xor
gs
call
cld
sbb
into
dec
jecxz
cmp
movs
lea
(bad)
scas
mov
je
(bad)
call
sahf
or
(bad)
loop
adc
adc
lahf
mov
(bad)
sbb
or
mov
or
retf
les
mov
push
aam
and
xor
mov
inc
hlt
jg
or
pop
shr
cdq
dec
in
or
push
push
cli
sbb
fst
call
xor
jmp
mov
mov
(bad)
out
cli
sub
fiadd
(bad)
jo
aaa
pop
push
jmp
push
ins
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jns
sub
into
mov
jge
sub
xlat
sbb
inc
iret
add
aaa
retf
clc
dec
sahf
push
fucomi
sub
dec
mov
or
dec
sub
xchg
or
fsubr
in
call
mov
pop
bound
in
pop
fistp
mov
in
jbe
mov
push
add
push
cli
mov
or
out
jmp
popf
cmp
cwde
push
mov
and
sti
jnp
cmp
cld
add
mov
ss
test
or
jp
gs
out
call
jns
es
mov
sti
or
add
mov
dec
fild
out
jnp
mov
xor
pop
in
in
mov
or
(bad)
aaa
inc
jmp
in
mov
or
xor
xchg
sti
and
int
pop
add
int
shl
fldcw
xchg
cld
or
sub
dec
popf
xor
repz
inc
ins
ss
ins
ins
xchg
(bad)
fistp
hlt
cmps
dec
push
imul
pushf
xor
mov
xor
mov
pop
xchg
cmp
mov
mov
imul
outs
add
jmp
clc
or
and
call
idiv
pusha
dec
iret
ss
adc
mov
stos
stos
xor
bound
mov
ins
inc
xchg
cwde
or
cdq
fnstsw
push
or
push
dec
(bad)
call
cmp
pop
mov
test
clc
push
push
ret
call
and
lock
jmp
popa
call
mov
cmp
add
pop
jecxz
fidivr
jae
ret
and
(bad)
out
mov
push
push
cs
mov
xor
mov
cmp
scas
pop
or
jmp
push
mov
cmc
add
inc
stc
test
es
push
hlt
and
pop
dec
lahf
ret
lock
jmp
mov
inc
cmp
and
jge
mov
xchg
or
mov
call
xchg
dec
fcomp
push
ret
jmp
out
lods
pop
out
mov
retf
mov
cli
(bad)
(bad)
(bad)
fiadd
retf
scas
cmps
adc
outs
add
aad
(bad)
cld
test
cli
xor
pop
mov
es
movs
push
cs
iret
xchg
and
mov
shl
(bad)
(bad)
(bad)
mov
add
sbb
jp
jmp
cs
loopne
fucomip
push
lock
mov
xor
inc
and
fld
or
dec
test
mov
in
out
sbb
jecxz
je
sub
sahf
rol
mov
fist
sbb
fisubr
std
mov
cmps
lods
into
mov
popf
cmps
jo
or
(bad)
(bad)
(bad)
jmp
push
push
(bad)
cld
mov
mov
movs
sub
mov
cmp
fisub
jmp
dec
ja
jecxz
mov
in
nop
bound
push
mov
mov
push
fidiv
int
(bad)
call
sub
cmps
xchg
jle
push
xor
push
sar
(bad)
bound
jge
sub
inc
jmp
int
mov
adc
push
stc
cmp
rcr
in
add
xor
bound
lods
cdq
(bad)
retf
stos
scas
cmps
mov
push
push
sbb
data16
(bad)
call
loope
pop
jg
push
arpl
xchg
pop
dec
or
mov
pop
mov
add
aam
lds
pop
sbb
ins
scas
or
mov
xchg
jbe
int3
sahf
(bad)
and
cs
mov
scas
adc
(bad)
mov
dec
retf
repz
jnp
xor
adc
das
push
mov
(bad)
inc
cmps
jg
neg
xor
push
sbb
ja
lods
mov
jmp
cmp
sbb
xor
arpl
sti
ret
lods
(bad)
mov
call
inc
and
mov
enter
push
mov
inc
adc
int3
sub
fistp
dec
rcr
movs
xchg
clc
sbb
and
xchg
jecxz
les
out
(bad)
(bad)
jmp
clc
push
dec
sbb
adc
cmps
scas
lahf
in
retf
test
lea
call
into
sbb
mov
(bad)
(bad)
(bad)
inc
push
or
in
stos
scas
pop
das
xor
ficom
inc
mov
sub
in
test
(bad)
call
es
pop
pop
xchg
mov
xchg
daa
xor
out
mov
mov
iret
jne
cli
into
sub
(bad)
fnstenv
inc
add
xchg
pop
dec
ja
repz
adc
(bad)
(bad)
(bad)
push
fistp
and
jmp
jecxz
mov
(bad)
data16
aas
lods
jmp
pop
and
(bad)
imul
test
js
fmul
sub
int3
add
sub
in
push
frstor
xor
cli
movs
das
btc
std
fwait
nop
iret
js
jmp
mov
enter
aad
std
ss
sbb
xchg
call
or
fidivr
inc
mov
adc
outs
pushf
xchg
sub
inc
call
(bad)
inc
jecxz
push
cmp
test
fdiv
jecxz
das
cmp
push
xchg
push
out
xor
xor
(bad)
mov
mov
enter
out
cmp
sub
(bad)
stc
retf
or
sbb
cs
jmp
repnz
(bad)
(bad)
call
popf
gs
(bad)
(bad)
shl
and
scas
call
scas
dec
out
jnp
(bad)
mov
xor
outs
xchg
cli
test
aad
xchg
jge
daa
icebp
inc
aaa
pop
cmp
push
push
xchg
dec
loopne
scas
pushf
dec
pop
xor
cmp
or
dec
xchg
mov
lock
ss
fmul
add
(bad)
dec
adc
jmp
and
inc
std
pop
push
cmp
sbb
push
sbb
jg
inc
jl
mov
and
js
xchg
lahf
(bad)
push
dec
adc
retf
pop
das
cli
ins
jp
fcmovnb
pop
add
and
or
in
rcr
dec
add
mov
sub
sbb
mov
pop
mov
(bad)
push
xchg
scas
test
pop
lods
and
int3
adc
cmp
frstor
and
and
(bad)
(bad)
mov
lods
cmp
sub
and
lahf
cmovnp
pop
cmp
(bad)
dec
outs
xor
(bad)
and
test
hlt
sbb
push
fidivr
or
mov
mov
mov
dec
pop
sbb
aad
movs
mov
loopne
xor
(bad)
(bad)
dec
pop
mov
in
adc
sahf
push
mov
cmp
rol
cld
call
mov
iret
cwde
cmp
sub
jge
fwait
or
sub
mov
xor
(bad)
(bad)
jg
mov
pop
outs
sub
adc
imul
dec
xchg
call
push
das
jb
fwait
fwait
xchg
stc
sub
(bad)
(bad)
mov
push
mov
adc
push
lahf
(bad)
scas
call
aas
cmp
call
mov
call
mov
sbb
imul
or
mov
lods
repz
test
and
rcr
sub
(bad)
mov
jg
int3
pop
scas
lods
shl
sti
xor
loop
jae
jle
or
(bad)
(bad)
dec
stos
cmps
adc
imul
sbb
(bad)
nop
push
xor
push
fst
(bad)
outs
mov
mov
add
mov
(bad)
mov
jnp
outs
mov
pushf
mov
sbb
pop
dec
push
dec
inc
cmp
inc
push
movs
jmp
lahf
sbb
pop
sbb
sub
cmps
fild
call
iret
mov
inc
ficom
shl
std
pop
lahf
sahf
clc
(bad)
fbld
scas
mov
sar
(bad)
(bad)
jmp
or
sub
aas
call
push
je
clc
mov
shl
fbstp
sbb
or
sbb
lock
call
xor
cmp
or
mov
sub
outs
(bad)
(bad)
mov
lods
mov
xor
sbb
mov
push
in
push
xor
dec
in
cld
mov
mov
push
and
out
adc
(bad)
(bad)
(bad)
push
lods
push
movs
in
dec
neg
retf
lds
mov
out
sub
mov
jmp
mov
jns
jnp
pop
sub
sbb
mov
daa
(bad)
(bad)
(bad)
jmp
sub
cld
jne
push
int
loopne
aaa
adc
call
mov
cli
or
and
pop
call
cli
mov
leave
popa
mov
xor
ret
mov
out
call
jp
and
sub
cmp
stos
jle
xchg
inc
or
mov
dec
cmp
stos
enter
loopne
sar
(bad)
(bad)
(bad)
jl
add
movs
cmp
sub
pop
movs
jecxz
jp
arpl
retf
fwait
test
sub
clc
(bad)
dec
lods
pop
pop
leave
cmp
ins
cmp
mov
fistp
sbb
pop
or
mov
xor
push
dec
sahf
mov
add
fild
mov
or
adc
push
inc
je
add
push
stc
mov
jmp
lock
sbb
cmp
and
mov
in
cs
cld
sub
cmps
xchg
sbb
or
or
mov
fcomp
mov
lahf
int3
iret
lahf
mov
fisttp
addr16
xchg
dec
mov
bswap
dec
imul
arpl
enter
jg
scas
test
pop
cld
out
xchg
popa
stos
add
mov
cmp
mov
jmp
jnp
mov
push
adc
mov
loope
adc
stos
outs
jo
jbe
imul
pop
mov
push
movs
cwde
pop
push
rep
or
jno
mov
jns
retf
(bad)
(bad)
inc
in
xcrypt-ofb
cmps
sub
xchg
in
imul
stos
xor
sub
or
and
or
add
push
sub
add
outs
fisub
(bad)
mov
lahf
or
xchg
jge
out
xchg
scas
retf
call
loop
fild
(bad)
pop
pop
add
adc
pop
xchg
cmc
sub
jnp
sub
inc
jmp
cdq
sub
scas
push
lods
(bad)
mov
je
(bad)
(bad)
(bad)
enterw
cmc
cmp
test
leave
or
jns
mov
stos
and
add
(bad)
(bad)
call
push
pop
rcl
sub
pop
mov
sbb
js
push
push
xchg
cmp
mov
cmps
mov
into
arpl
(bad)
(bad)
dec
mov
xchg
mov
shl
push
or
fdivp
dec
and
mov
xchg
scas
mov
sbb
into
aad
mov
fwait
jmp
clc
push
mov
jnp
loop
cld
dec
test
cmps
push
mov
push
loopne
(bad)
mov
out
sbb
jo
xor
inc
jae
sbb
jmp
test
hlt
mov
cmps
shr
xchg
(bad)
(bad)
(bad)
(bad)
jg
or
je
mov
lea
int3
jge
shl
test
arpl
mov
pop
(bad)
pushf
pusha
call
scas
push
sub
add
sub
pop
jmp
jmp
(bad)
jg
dec
or
xor
sbb
adc
out
pop
sub
mov
retf
(bad)
(bad)
(bad)
push
sti
cli
repz
mov
cwde
into
jle
xor
sar
mov
mov
xchg
std
(bad)
(bad)
(bad)
mov
sbb
xor
lods
arpl
sub
bound
sbb
inc
shl
jmp
xchg
push
ret
mov
lock
pop
push
imul
push
imul
mov
xchg
and
aaa
jb
lea
in
loope
out
clc
cmp
(bad)
cmp
stc
pop
sbb
call
mov
cmp
movs
dec
in
dec
add
(bad)
call
call
and
push
ret
sub
shrd
icebp
mov
xchg
(bad)
(bad)
push
arpl
outs
out
sub
fisub
sti
dec
test
inc
popf
mov
or
xlat
movs
push
xchg
push
push
sar
lahf
scas
test
mov
jmp
scas
jmp
(bad)
call
stos
push
data16
or
ret
push
dec
data16
mov
pop
loop
iret
pop
cld
cmp
data16
fwait
mov
push
cli
imul
sub
retf
sub
mov
jo
fs
repz
push
dec
xchg
std
cs
outs
adc
scas
or
fcomp
xchg
out
jmp
or
aad
stos
jmp
cmp
and
mov
cmps
js
les
cld
(bad)
(bad)
mov
adc
repnz
xchg
sar
push
mov
sahf
sbb
sub
jle
(bad)
call
shr
retf
int3
mov
ret
enter
test
cs
ret
jmp
mov
test
seto
cmps
les
and
call
mov
or
and
hlt
(bad)
inc
clc
cmps
clc
mov
popa
adc
stc
imul
(bad)
(bad)
fbstp
sbb
mov
pop
bound
retf
cmp
sahf
sub
push
push
pop
hlt
sbb
outs
fwait
cmp
imul
cld
or
nop
inc
pop
cmp
test
test
jg
(bad)
(bad)
(bad)
(bad)
in
pop
sub
sub
mov
xor
push
xlat
or
(bad)
(bad)
(bad)
jmp
pusha
outs
ins
push
stc
ret
out
mov
rcr
imul
lods
adc
mov
mov
scas
lods
mov
stos
sar
test
scas
xor
test
stos
fucomip
(bad)
out
adc
es
jle
cmp
cmps
xor
mov
cmp
dec
jns
dec
pop
jmp
mov
outs
xor
mov
fcomp
movs
test
(bad)
(bad)
jmp
movs
jmp
es
(bad)
xchg
or
sbb
cdq
imul
jmp
test
jl
xchg
(bad)
(bad)
cli
mov
mov
es
fidiv
jbe
mov
sar
sub
stos
or
jmp
mov
sbb
sub
mov
or
ins
mov
(bad)
mov
pop
pop
ss
sub
and
(bad)
call
dec
(bad)
retf
shr
out
pusha
addr16
call
fsubr
push
inc
dec
int3
sbb
frstor
jle
dec
and
xor
das
(bad)
(bad)
(bad)
(bad)
mov
ficomp
mov
adc
mov
icebp
jg
add
pop
mov
imul
js
jmp
movs
jnp
lock
retf
bound
in
ds
mov
jmp
sahf
xor
(bad)
pop
push
imul
(bad)
(bad)
fild
jmp
pop
xor
add
call
push
inc
mov
icebp
cmp
jmp
(bad)
xor
in
cmp
jge
retf
pop
mov
mov
jmp
loope
dec
cmp
adc
test
ret
sar
repnz
mov
mov
imul
scas
add
cmps
jmp
imul
sbb
adc
pusha
lahf
aam
mov
dec
and
xor
mov
fs
(bad)
fadd
fnsave
fneni(8087
ins
(bad)
(bad)
call
retf
cmp
out
in
loopne
adc
jmp
test
stos
dec
mov
adc
xchg
(bad)
js
push
mov
ins
loopne
pop
and
es
jbe
cmp
add
(bad)
(bad)
call
imul
cmp
sahf
xor
bound
(bad)
jg
(bad)
in
mov
add
sar
push
mov
sbb
fld
in
(bad)
(bad)
(bad)
jmp
in
mov
pusha
push
loop
adc
mov
sub
stos
lods
mov
(bad)
push
mov
sbb
int3
mov
push
pop
fisttp
pop
mov
adc
sbb
xor
ds
(bad)
(bad)
dec
ds
es
shl
mov
movs
or
iret
dec
clts
fmul
retf
sbb
pop
test
or
push
or
mov
lahf
adc
jg
add
mov
or
xchg
fmul
sahf
or
das
sar
das
in
sub
sbb
sub
clc
pusha
fidivr
cdq
inc
mov
pop
(bad)
cmp
mov
inc
lock
mov
test
xchg
mov
xor
and
mov
out
outs
(bad)
fmul
call
xchg
scas
mov
pop
cld
adc
les
sub
(bad)
fisubr
mov
pop
and
xor
cwde
fisubr
cmc
stos
into
pop
pop
lods
ds
mov
sbb
(bad)
(bad)
call
push
clc
shr
mov
sub
hlt
sahf
dec
or
pop
cmp
sub
(bad)
mov
imul
stos
xor
push
data16
(bad)
(bad)
jmp
jmp
mov
in
or
fidiv
or
fsub
ret
adc
(bad)
mov
test
jnp
jle
pop
pop
cld
retf
gs
dec
mov
mov
(bad)
(bad)
fist
adc
stos
stos
nop
ret
add
aaa
scas
test
sub
sub
cmp
bnd
pop
jge
inc
scas
xchg
or
lods
mov
mov
cmp
sub
jle
mov
xchg
scas
stc
sub
lock
repnz
jg
sub
mov
add
(bad)
pusha
push
das
(bad)
(bad)
(bad)
(bad)
mov
ins
test
mov
ins
jnp
stos
or
adc
xchg
add
push
jecxz
jle
lea
cs
mov
in
(bad)
mov
mov
das
ins
or
xlat
mov
(bad)
(bad)
(bad)
inc
cwde
lock
jb
fwait
cmp
retf
mov
movs
cmp
fs
mov
(bad)
(bad)
(bad)
dec
xchg
iret
add
sub
xchg
push
rcl
into
stc
mov
jmpw
(bad)
inc
out
jne
rcr
bound
sbb
fisttp
call
std
adc
stos
cmps
mov
cmps
jecxz
fnstsw
sub
js
jno
fst
(bad)
jg
cmp
stos
sub
(bad)
ss
mov
xchg
lods
arpl
mov
cld
dec
or
pop
out
out
(bad)
mov
arpl
call
jb
stos
lods
jl
out
aam
cmp
push
not
mov
cld
das
stos
xchg
stos
push
iret
daa
mov
ret
pop
pop
or
push
mov
test
sbb
dec
push
mov
out
out
jne
mov
(bad)
in
fcomip
push
mov
fdivr
ret
shl
or
dec
mov
mov
std
das
xchg
fcomp
pusha
movs
sub
scas
push
test
pop
fisub
sbb
call
inc
cld
std
add
js
loop
and
inc
retf
mov
iret
jb
(bad)
jmp
xchg
sbb
out
jmp
nop
clc
or
jl
(bad)
(bad)
(bad)
dec
enter
ins
outs
push
push
mov
loope
mov
fsub
dec
stos
xor
or
idiv
lods
call
mov
aaa
std
scas
push
fxch
jecxz
js
or
fstp
pop
xchg
repnz
scas
mov
icebp
dec
jns
cmps
cmp
cmps
jp
adc
dec
cs
loope
jmp
cmps
dec
ss
pop
and
movs
pop
rol
sbb
xchg
in
lods
pop
pop
in
mov
jb
sub
imul
xlat
test
and
(bad)
out
sub
mov
cwde
add
xchg
lock
dec
fdivr
xor
sbb
xchg
(bad)
call
pushf
sub
sub
call
es
imul
dec
and
add
mov
and
mov
ja
cmp
icebp
(bad)
(bad)
inc
jg
out
add
jg
test
stos
out
cmp
adc
cli
call
fnstenv
or
push
retf
call
gs
xor
xor
sbb
das
push
cmps
dec
inc
lods
jbe
inc
pop
pop
(bad)
call
jp
loop
xor
repnz
mov
mov
push
sbb
mov
ins
(bad)
push
cmp
(bad)
(bad)
(bad)
dec
inc
push
fisttp
leave
mov
retf
call
push
sub
sub
iret
std
mov
cdq
call
nop
and
xchg
and
nop
into
das
out
test
mov
add
push
sbb
xor
adc
add
push
push
mov
add
sub
call
sub
sbb
loopne
jbe
sbb
sub
js
or
daa
out
aas
adc
pop
or
adc
push
cld
fcomip
int
cmp
and
test
pop
cmp
xor
pop
pop
mov
cld
or
test
bound
add
sub
push
add
lds
sub
add
bound
sbb
mov
xchg
sti
cmp
dec
sub
daa
loop
das
popf
pop
cli
or
add
jb
or
jmp
mov
push
mov
and
(bad)
(bad)
inc
jmp
clc
and
cmp
fwait
mov
js
cmp
dec
mov
(bad)
call
mov
bound
xchg
and
outs
mov
push
paddusw
add
add
sbb
jmp
test
ss
jp
mov
out
pop
jns
mov
inc
dec
pop
sbb
int3
lahf
stc
xchg
jle
xor
lahf
xchg
jnp
push
sub
cwde
pop
inc
call
and
push
cli
bound
cld
cli
sti
cmp
pop
pop
and
(bad)
fdiv
inc
mov
test
imul
sub
ds
adc
jmp
xor
push
add
jle
dec
int3
sbb
jmp
jp
pop
enter
and
retf
xor
or
cld
ja
(bad)
imul
or
adc
mov
push
(bad)
push
cwde
inc
cmps
push
cmp
(bad)
(bad)
jmp
in
retf
test
mov
mov
add
add
xor
dec
(bad)
jg
inc
iret
xchg
je
fiadd
fcmovne
aam
xchg
dec
data16
(bad)
cld
and
fidiv
jg
jp
cmc
mov
(bad)
jmp
adc
mov
iret
pop
aad
push
dec
retf
out
loopne
or
mov
or
mov
mov
or
and
inc
(bad)
sub
or
dec
(bad)
(bad)
(bad)
mov
pop
daa
jmp
stos
dec
add
imul
push
das
jmp
push
mov
(bad)
(bad)
call
dec
cmp
in
clc
mov
sbb
clc
pop
cmp
imul
inc
mov
(bad)
(bad)
(bad)
jmp
std
loop
inc
(bad)
sub
mov
push
dec
or
in
pop
push
fild
not
std
(bad)
(bad)
cmp
ret
adc
and
pusha
pop
scas
adc
jno
mov
inc
sub
jbe
in
xor
fs
jle
xor
push
adc
cmp
cmp
cli
xchg
jo
mov
shl
xchg
lock
pop
or
std
pusha
mov
xchg
add
scas
sbb
mov
add
jae
(bad)
(bad)
(bad)
jmp
das
mov
jne
(bad)
(bad)
sbb
ins
cdq
xor
enter
jae
mov
scas
js
fcomp
lods
sub
mov
js
(bad)
leave
cld
or
add
(bad)
call
daa
jle
pop
in
cmp
shr
loopne
add
sbb
xlat
push
push
ss
outs
call
cmp
pop
add
es
(bad)
jmp
ret
outs
sub
mov
sub
aam
mov
jno
mov
mov
mov
(bad)
jp
mov
and
pop
pop
or
int
hlt
jmp
pop
scas
xchg
sub
or
xchg
sub
xchg
add
(bad)
jnp
inc
jecxz
adc
pushf
jmp
inc
mov
add
(bad)
jg
pop
pop
mov
jecxz
sub
jo
sub
(bad)
(bad)
mov
repz
sbb
cmps
(bad)
adc
sub
loop
dec
jb
cmp
repnz
push
je
cmp
(bad)
lods
call
imul
jmp
cld
(bad)
call
and
mov
(bad)
(bad)
jg
pop
xor
sub
icebp
out
mov
(bad)
xlat
adc
push
outs
test
cld
out
xchg
xor
mov
pop
outs
jb
fwait
out
xor
jge
scas
mov
mov
jmp
mov
mov
cmc
(bad)
push
imul
mov
push
adc
adc
(bad)
fild
imul
xor
inc
push
lock
sub
je
pop
call
sub
ret
mov
je
fwait
es
mov
cmps
loop
push
(bad)
jmp
lods
outs
nop
mov
push
mov
xor
xor
pop
aam
(bad)
(bad)
(bad)
dec
jo
call
call
jecxz
sub
sbb
mov
lods
(bad)
jmp
test
(bad)
push
mov
scas
out
and
cld
ins
js
xchg
cmps
enter
inc
mov
out
xlat
push
call
pusha
addr16
call
mov
mov
adc
loopne
xor
sub
(bad)
cmp
pusha
jmp
mov
out
call
pop
daa
(bad)
mov
mov
or
stos
xor
xor
and
lods
dec
cli
repnz
jns
mov
adc
and
jg
sub
rcr
cmps
ret
xchg
mov
mov
mov
loopne
jmp
mov
aaa
pop
es
loopne
dec
leave
push
pusha
xchg
out
(bad)
(bad)
call
fnsave
push
mov
inc
add
cdq
gs
sub
inc
and
clc
push
mov
mov
loope
jmp
addr16
pop
lods
cld
stc
stos
loop
xchg
sti
or
es
sub
pop
fistp
fild
dec
cmp
popf
xchg
(bad)
call
lds
jp
jp
and
fs
push
das
mov
(bad)
(bad)
(bad)
push
sub
jge
mov
push
and
ds
sbb
pop
bnd
(bad)
(bad)
(bad)
cmp
xchg
push
cmp
pop
aam
jmp
jnp
mov
movd
in
mov
or
dec
push
std
pop
fstp
mov
xor
mov
jmp
mov
outs
ret
inc
icebp
xor
ins
repnz
pop
fcomip
jmp
mov
mov
dec
jg
inc
mov
out
mov
jp
pop
dec
jp
in
sti
and
lods
jbe
adc
fdivr
clc
(bad)
(bad)
dec
scas
int3
push
cmp
mov
imul
arpl
aad
cwde
(bad)
(bad)
jmp
cwde
jg
mov
jmp
lahf
and
in
inc
pop
jae
mov
or
dec
mov
sub
xchg
push
(bad)
(bad)
(bad)
jmp
cld
inc
and
stos
repnz
jle
or
scas
and
ss
rol
xchg
pop
sub
(bad)
fbld
dec
pop
jno
scas
inc
mov
and
(bad)
(bad)
(bad)
inc
jae
(bad)
jecxz
xchg
jmp
xchg
mov
push
mov
adc
ud0
push
cld
or
dec
stos
jp
mov
and
mov
(bad)
(bad)
dec
into
cmp
mov
and
sub
mov
shr
dec
jg
and
and
cwde
int3
jge
dec
loopne
in
push
les
mov
stc
(bad)
push
add
(bad)
(bad)
inc
out
enter
ins
sahf
ins
mov
lock
xchg
dec
jb
aaa
(bad)
(bad)
(bad)
jmp
mov
sti
mov
jg
dec
mov
jg
cwde
push
cmp
jo
mov
mov
(bad)
(bad)
call
mov
jmp
mov
pop
pop
loopne
mov
adc
in
push
sub
push
out
seto
dec
add
scas
div
jecxz
in
stos
push
cld
pop
cwde
mov
aaa
xor
or
push
mov
cmp
push
es
xchg
inc
and
and
jmp
loope
inc
jecxz
jecxz
mov
inc
mov
(bad)
iretw
fdivr
pop
jo
inc
cmp
mov
ja
(bad)
push
out
out
test
add
fld
in
dec
and
scas
std
fcmovnbe
xchg
data16
add
cmp
push
data16
les
fucomp
inc
mov
jl
push
mov
or
sbb
add
cmp
ins
mov
(bad)
push
inc
dec
mov
sbb
stos
seto
loopne
dec
fimul
sub
jp
mov
mov
mov
dec
pop
sub
mov
xchg
jmp
jne
(bad)
(bad)
(bad)
(bad)
std
mov
dec
mov
dec
cs
xchg
stos
aad
pop
and
or
or
daa
ret
sbb
jp
add
mov
add
inc
sub
push
les
pop
dec
sbb
push
xor
sub
pop
out
pop
or
(bad)
call
jbe
pop
sbb
jb
clc
retf
retf
mov
xchg
imul
(bad)
call
add
dec
adc
ins
or
stos
dec
xor
adc
jo
xor
(bad)
(bad)
call
out
ds
ror
scas
mov
lods
mov
mov
push
push
adc
inc
loopne
out
sbb
fldl2e
dec
adc
push
rcr
xor
dec
adc
adc
sub
inc
test
mov
rol
rcl
cmp
imul
std
jp
popf
inc
imul
mov
jg
or
in
scas
push
add
iret
xchg
cmp
mov
sub
jmp
or
imul
inc
xor
out
pop
retf
pop
cmps
loop
adc
not
xor
add
sti
cmp
retf
or
mov
cli
(bad)
mov
ds
pop
adc
call
pop
add
and
mov
ds
push
and
mov
(bad)
(bad)
push
sbb
inc
mov
cmp
scas
mov
jmp
out
inc
pop
cld
push
idiv
(bad)
mov
ret
shl
lahf
out
fidiv
cmp
cdq
jp
inc
cmps
sub
das
and
(bad)
(bad)
jg
out
daa
mov
pop
and
cmp
jne
sbb
(bad)
add
(bad)
(bad)
call
or
mov
or
xchg
mov
popa
xchg
dec
scas
or
cmp
xchg
mov
add
jmp
and
jmp
adc
scas
xor
adc
loopne
(bad)
jmp
lea
pushf
stos
mov
jb
mov
adc
mov
(bad)
fdivr
(bad)
(bad)
jmp
out
mov
xchg
pop
ret
movs
xor
std
sbb
cli
ss
(bad)
(bad)
(bad)
call
pop
call
xchg
std
sbb
cdq
push
jge
arpl
in
sbb
lea
mov
call
in
push
mov
(bad)
(bad)
(bad)
(bad)
out
mov
push
sub
and
xchg
mov
aaa
push
xchg
call
cmp
dec
mov
push
jo
and
call
pop
jge
mov
xor
clc
(bad)
jg
sub
call
mov
sub
adc
jb
outs
adc
pop
cmp
push
sbb
dec
(bad)
dec
(bad)
repnz
mov
cmps
iret
mov
sub
fild
dec
or
stos
and
(bad)
(bad)
(bad)
jg
gs
scas
cmp
pop
repnz
test
cmp
std
push
ror
and
fucomip
call
push
mov
add
mov
mov
add
add
int
in
(bad)
scas
(bad)
(bad)
(bad)
dec
dec
mov
jmp
out
xor
(bad)
scas
scas
(bad)
jns
iret
test
cmp
jb
pop
jb
(bad)
mov
ret
sub
dec
enter
inc
jne
sub
adc
jmp
icebp
pusha
or
stc
mov
(bad)
(bad)
(bad)
push
mul
scas
mov
ret
sbb
retf
outs
ss
sub
dec
pop
sbb
aas
push
mov
pop
mov
sbb
jg
sbb
movs
pop
add
dec
push
adc
lahf
scas
pop
or
jbe
idiv
xor
sub
addr16
and
xlat
imul
jl
cli
(bad)
call
add
js
pop
jmpw
stos
sbb
or
or
push
jo
stos
mov
jle
lock
mov
push
shl
sub
mov
fs
sbb
xchg
jo
clc
jecxz
dec
xchg
mov
dec
dec
loop
xor
sahf
lods
loopne
inc
sar
push
xor
xchg
test
push
mov
fcomip
adc
push
js
and
push
jb
jmp
loope
push
icebp
fcomip
dec
mov
and
sub
ins
test
or
cmp
retf
fild
mov
jp
daa
sbb
sahf
push
imul
mov
into
imul
cmp
jp
cld
ins
xchg
in
mov
movs
stos
push
out
adc
jno
mov
pusha
pop
stos
jo
jno
push
or
push
sub
adc
push
std
shl
in
sbb
fwait
or
xchg
jg
mov
loopne
loope
les
push
jmp
into
fbstp
int
pop
push
test
xlat
inc
pusha
popf
dec
dec
popf
or
(bad)
in
jmp
push
int
sbb
cdq
pop
pop
cdq
daa
cmp
(bad)
jmp
int3
mov
and
shl
adc
bound
fsubr
ins
xchg
mov
cmp
dec
(bad)
loop
lock
inc
adc
push
mov
(bad)
(bad)
push
fldenv
aas
or
mov
xchg
inc
mov
push
pushf
and
mov
movs
je
jmp
or
jmp
sbb
sbb
mov
jmp
pop
adc
push
loop
mov
jg
jmp
add
cwde
jae
imul
sub
xchg
test
push
mov
in
sub
(bad)
inc
inc
outs
retf
cmp
push
or
jno
dec
adc
das
pusha
out
add
int3
das
call
jmp
mov
retf
cmps
and
loopne
das
data16
mov
(bad)
(bad)
aas
fld
jge
cdq
cmp
loop
and
sbb
sub
in
jnp
shl
sbb
(bad)
jmp
call
cmp
sar
cwde
shl
in
cmp
sub
cmp
(bad)
(bad)
(bad)
(bad)
fcom
imul
sub
mov
cld
shr
push
xchg
or
mov
les
sub
mov
into
dec
cmp
push
sbb
test
inc
call
mov
cmp
inc
lahf
cmp
test
sub
cld
inc
test
punpcklbw
jge
xchg
sub
(bad)
(bad)
(bad)
dec
sub
mov
adc
sar
push
popf
jmp
in
(bad)
gs
(bad)
(bad)
push
or
push
iret
arpl
add
dec
sbb
mov
mov
outs
(bad)
in
sar
(bad)
cmp
push
clc
popa
pushf
sub
cmp
js
mov
(bad)
inc
sub
popf
mov
or
cs
ins
loopne
adc
and
in
call
pop
mov
mov
sbb
cmp
lahf
ret
stc
daa
shl
cmc
call
adc
es
push
nop
sbb
outs
jmp
inc
(bad)
(bad)
call
repz
or
push
fisubr
in
aam
sbb
lds
imul
mov
sbb
fwait
imul
mov
not
(bad)
(bad)
(bad)
mov
in
sub
push
dec
xor
mov
mov
cwde
test
scas
loope
in
loop
call
sub
ret
mov
mov
inc
or
retf
scas
push
rcl
inc
lds
or
add
(bad)
aam
(bad)
mov
mov
cmps
sub
sub
lods
xchg
outs
ins
outs
cmps
fsubr
dec
lods
sbb
xchg
out
or
aas
cs
xchg
loope
fdivr
dec
mov
les
outs
or
leave
lea
call
in
push
xchg
pop
loopne
ins
dec
in
jmp
dec
ds
or
fcmovu
ins
cwde
add
out
sub
sti
call
mov
lods
out
dec
(bad)
inc
out
xor
outs
mov
xor
aas
outs
add
pop
inc
add
stos
cmp
push
repz
test
(bad)
jg
imul
scas
imul
push
jecxz
loopne
inc
pusha
lods
ins
ins
into
dec
pop
pop
movs
jecxz
sbb
mov
ret
fsubr
neg
cmps
mov
sbb
js
lods
test
and
cwde
cmp
jo
ins
jg
arpl
add
call
(bad)
(bad)
inc
xchg
mov
ins
cld
fild
dec
or
cmp
jl
(bad)
lds
loopne
shl
lods
repz
(bad)
jg
in
mov
call
(bad)
jb
adc
xchg
mov
sar
(bad)
call
xchg
lock
ss
retf
fidivr
repz
and
mov
or
dec
pop
pusha
es
push
hlt
loopne
stos
leave
gs
push
jmp
xor
test
and
push
gs
mov
jb
call
mov
mov
jg
jge
mov
dec
addr16
mov
fnstsw
inc
sbb
add
add
add
xor
cmps
cwde
movs
out
in
aad
push
dec
cli
cmp
mov
jmp
(bad)
(bad)
jmp
push
jae
lods
cmp
ror
(bad)
push
popf
jns
jl
sti
neg
jns
sahf
lock
sahf
retf
xchg
pop
addr16
cwde
ret
(bad)
(bad)
jg
dec
cmp
test
call
icebp
imul
push
adc
pop
(bad)
call
push
adc
loopne
mov
push
mov
arpl
pop
scas
push
or
push
(bad)
(bad)
(bad)
(bad)
mov
out
cwde
push
push
sbb
cmps
retf
inc
sub
fiadd
fsubr
lods
repz
loopne
(bad)
jmp
test
(bad)
ins
and
and
adc
aas
jecxz
(bad)
call
imul
jne
inc
int
cs
ror
xchg
inc
jne
(bad)
call
push
add
(bad)
popf
(bad)
jmp
sar
imul
(bad)
mov
sti
mov
jmp
xchg
shr
or
icebp
inc
or
(bad)
(bad)
call
pop
arpl
mov
les
loope
loop
adc
jmp
(bad)
cmp
cmps
and
(bad)
ss
jmp
push
xchg
sub
mov
loop
ins
cld
pop
and
push
cmp
int3
sbb
rcr
push
(bad)
(bad)
jg
dec
push
mov
leave
adc
push
pop
push
fst
push
lock
add
scas
das
lods
je
rcl
(bad)
push
out
or
mov
(bad)
(bad)
mov
jge
int3
pusha
xor
mov
scas
js
call
(bad)
fidivr
stc
call
xchg
cmc
mov
aaa
and
in
cmc
jmp
xchg
(bad)
(bad)
call
int
in
cmc
mov
mov
(bad)
in
jmp
outs
push
in
ret
cmp
in
jmp
(bad)
cmp
movs
add
add
in
ins
mov
sub
jmp
cwde
xor
in
inc
(bad)
ins
and
test
out
out
call
out
dec
sub
pop
mov
out
xor
push
test
push
(bad)
out
inc
dec
or
jle
in
xchg
or
test
outs
fwait
in
(bad)
sub
js
add
retf
xchg
out
scas
mov
(bad)
mov
mov
cli
outs
(bad)
lock
hlt
imul
lods
call
std
(bad)
js
or
cmp
(bad)
jecxz
sbb
das
or
retf
outs
lods
in
sub
lods
in
sub
ins
clc
push
std
(bad)
dec
cmps
loope
repnz
das
mov
mov
imul
xor
mov
inc
clc
mov
aam
push
lea
cmp
mov
sub
int3
cmps
data16
scas
mov
test
outs
sar
jmp
xor
pop
fst
pushf
xchg
inc
(bad)
(bad)
jmp
cmps
sub
test
mov
cli
push
into
enter
(bad)
dec
xor
mov
aaa
pushf
shl
pop
jbe
rcl
enter
fwait
push
test
pop
and
pop
and
mov
adc
retf
jmp
cmp
xor
mov
leave
leave
daa
leave
jo
ins
adc
mov
call
aas
test
push
inc
jno
push
cmc
xchg
cmc
adc
das
ficom
push
mov
mov
pop
inc
inc
test
push
add
mov
mov
push
pop
jl
(bad)
dec
aaa
dec
cmp
fdiv
fisub
push
lock
and
int
stc
adc
iret
adc
sbb
inc
inc
push
(bad)
dec
mov
inc
jmp
nop
mov
xchg
sub
push
push
imul
sbb
jbe
aam
xchg
stc
stc
out
icebp
lock
(bad)
stos
inc
(bad)
pop
movs
movs
shl
(bad)
dec
xlat
lds
mov
dec
je
arpl
and
(bad)
sti
dec
ret
outs
sahf
push
push
mov
cmp
inc
nop
mov
mov
(bad)
inc
inc
test
and
mov
push
rcr
push
rol
addr16
dec
xor
xchg
hlt
xchg
test
(bad)
std
call
push
into
push
bound
cwde
fwait
movs
movs
nop
gs
xchg
(bad)
push
push
stc
push
or
jecxz
(bad)
(bad)
mov
pop
pop
pop
inc
repz
das
das
jge
add
sbb
or
and
push
push
push
cmps
cmps
cmp
daa
dec
das
or
adc
jno
(bad)
call
or
or
mov
mov
pop
pop
scas
leave
mov
lea
mov
ss
mov
pop
pop
(bad)
jmp
dec
(bad)
jg
repnz
repnz
adc
aaa
jno
inc
jno
popf
fsubr
jg
cmp
xchg
add
mov
adc
scas
hlt
pop
in
aad
xchg
(bad)
(bad)
xchg
call
push
retf
cmps
adc
dec
and
pop
stc
jmp
cli
cli
jmp
sub
mov
pop
les
in
shl
popf
lahf
not
(bad)
(bad)
call
clc
adc
mov
das
sbb
mov
loopne
jmp
pop
stos
sar
sar
jge
xor
push
jecxz
xor
(bad)
dec
repz
fisub
inc
push
jo
mov
push
adc
jg
pop
adc
cwde
mov
je
(bad)
mov
adc
inc
mov
jg
int3
repnz
fist
ja
jmp
mov
cmp
fld
and
dec
push
fisubr
inc
(bad)
loopne
mov
pop
inc
inc
mov
addr16
pop
push
dec
div
out
js
jg
pop
mov
xor
das
stos
push
push
(bad)
push
mov
pushf
dec
fcmovu
imul
sbb
mov
les
cwde
fisub
paddw
add
loope
pushf
jmp
pop
push
xchg
xchg
leave
xchg
ins
icebp
sbb
lds
pop
pushf
pushf
mov
nop
test
(bad)
outs
lea
or
mov
call
call
cmp
ds
cmp
and
dec
push
jb
mov
cmp
cmp
jge
mov
cmp
lea
sahf
aaa
repnz
inc
add
test
xor
xchg
push
cs
and
pop
dec
(bad)
mov
shl
and
and
cmp
add
pop
loopne
cmp
add
enter
sbb
mov
aas
jge
or
jge
scas
pop
xor
sub
or
test
imul
neg
adc
cdq
mov
add
in
inc
xchg
call
fdiv
fwait
jbe
inc
rcl
jmp
sub
cs
out
pop
cs
push
pop
push
adc
xchg
out
or
or
mov
mov
in
pop
maxps
xor
(bad)
ja
inc
jae
test
test
mov
(bad)
mov
mul
or
inc
ret
dec
add
inc
add
mov
dec
ud0
out
out
jle
add
and
xchg
int
retf
sbb
mov
mov
out
lock
std
out
pop
in
shl
hlt
fidiv
pushf
pop
mov
and
(bad)
dec
call
popf
popf
mov
push
add
mov
call
scas
or
or
sub
sub
cs
xchg
sbb
pop
les
repz
fs
ja
shl
not
pop
lea
pop
ret
mov
inc
mov
pop
pop
cmps
dec
sub
or
jb
(bad)
in
jg
cmp
jns
ss
rcl
int3
shl
cdq
pop
stos
loopne
std
in
mov
jne
push
leave
out
sahf
sbb
pusha
sbb
ror
dec
int
repz
aas
pop
int
int
xchg
fs
or
mov
mov
call
ins
sbb
(bad)
xchg
icebp
icebp
inc
icebp
mov
fucomp
push
push
ret
cmp
cmp
or
or
push
out
scas
scas
jg
add
add
(bad)
cmp
pop
xchg
repnz
xchg
adc
push
sub
aaa
add
push
push
adc
jns
out
pop
gs
hlt
xchg
retf
cld
dec
pop
(bad)
(bad)
inc
add
add
fbld
call
call
cld
test
lds
add
sub
popa
pop
cld
xchg
dec
push
or
fistp
dec
aam
inc
inc
inc
mov
mov
xchg
movs
ins
sub
call
push
xchg
jne
dec
aam
mov
jle
in
add
or
pop
stc
jmp
std
std
ss
push
popa
add
retf
retf
push
add
mov
push
(bad)
ja
call
add
out
icebp
aaa
(bad)
pushf
aas
mov
dec
dec
sub
dec
pop
pop
ins
mov
dec
aam
xchg
(bad)
call
fucom
inc
nop
icebp
or
and
and
mov
ret
ret
mov
out
mov
push
xor
or
neg
nop
clc
clc
jecxz
stc
dec
jg
mov
jmp
adc
out
inc
sti
clc
ja
cmp
(bad)
test
cmp
ja
fs
(bad)
add
mov
dec
cld
dec
push
sbb
sub
call
push
sub
movs
sub
lods
hlt
bound
(bad)
jmp
cli
(bad)
call
pushf
mov
adc
mov
test
sahf
jle
mov
stc
call
mov
xchg
xchg
lds
mov
push
jmp
push
jecxz
clc
sub
dec
dec
sub
inc
sahf
sahf
mov
mov
adc
xlat
gs
sbb
jg
lods
mov
jmp
loope
jmp
mov
adc
(bad)
pop
clc
jl
(bad)
cmp
jl
out
ds
popf
jp
cmp
cld
add
xchg
(bad)
mov
push
push
pop
push
shl
cmp
dec
hlt
dec
xlat
adc
call
call
cmp
sbb
xlat
int
adc
ret
adc
inc
pop
outs
(bad)
(bad)
cld
inc
dec
mov
movs
movs
mov
dec
push
push
outs
call
push
dec
clc
dec
push
sbb
jmp
mov
adc
(bad)
mov
imul
mov
mov
mov
push
push
(bad)
dec
pop
jne
jecxz
jecxz
inc
stc
scas
aad
adc
imul
(bad)
fnstsw
inc
mov
pop
sub
xchg
pop
enter
mov
mov
call
adc
aam
adc
adc
xor
fist
addr16
out
out
xchg
repz
call
iret
iret
dec
add
jp
or
and
pop
mov
call
pop
push
inc
inc
mov
mov
or
or
out
fdivr
fild
adc
mov
mov
mov
test
mov
lahf
lahf
mov
mov
fbld
adc
lea
sbb
mov
sub
das
fmul
lahf
jae
dec
jae
xchg
fdivr
pop
cld
cs
daa
sbb
out
repz
mov
in
in
jbe
sar
(bad)
mov
or
lds
push
into
into
cli
into
or
pop
shl
pusha
cmp
(bad)
lock
adc
rcr
pop
jmp
mov
out
sub
jne
mov
mov
mov
retf
retf
das
retf
mov
xchg
(bad)
jg
or
jbe
in
aad
cmp
cmp
cmps
xchg
cmp
call
mov
push
jbe
jo
xlat
jne
dec
shl
mov
inc
shr
xchg
je
dec
(bad)
xchg
call
(bad)
data16
pop
repnz
(bad)
sub
and
call
jmp
loope
js
loopne
add
ds
push
mov
std
outs
outs
jl
pop
mov
and
and
pop
je
ret
ret
mov
and
cwde
(bad)
and
aaa
fld
aaa
or
rol
adc
nop
push
stc
jnp
push
pop
jecxz
add
sar
(bad)
fstp
hlt
push
movs
push
pop
das
cmp
mov
sbb
(bad)
(bad)
(bad)
mov
cli
pusha
inc
fsub
fdivr
daa
adc
fcmovnu
inc
push
js
fidivr
setb
inc
add
cwde
adc
push
pusha
aam
int3
mov
cmp
jne
push
cmp
hlt
sbb
bound
adc
or
jle
call
fbld
(bad)
into
xor
leave
jl
call
in
cli
(bad)
(bad)
fistp
int
mov
fnstenv
cmps
mov
jecxz
test
loop
arpl
cmps
sbb
push
sub
(bad)
mov
inc
add
cmp
mov
out
ds
es
push
push
ins
push
in
mov
xor
push
push
or
call
push
stos
mov
sahf
pop
cmp
jp
add
xor
push
jmp
outs
mov
mov
retf
or
daa
(bad)
jl
call
(bad)
fist
xchg
cmp
mov
sbb
pop
push
test
call
push
scas
(bad)
(bad)
cmp
jl
adc
fbld
adc
retf
in
test
(bad)
(bad)
(bad)
(bad)
(bad)
jg
push
and
push
jo
mov
cld
leave
sub
ja
stc
sub
ds
pop
dec
(bad)
jmp
imul
shr
pop
sbb
mul
dec
jmp
pop
jle
movd
stos
sbb
bound
pop
call
dec
fdivr
(bad)
jg
dec
cs
or
sbb
push
shr
adc
test
(bad)
out
push
(bad)
outs
pop
mov
test
push
test
popa
std
(bad)
mov
adc
repz
adc
loope
lods
pop
inc
ror
(bad)
(bad)
jg
push
repnz
sbb
inc
or
popf
ds
repnz
mov
dec
sbb
fistp
test
repz
stos
loopne
stos
outs
test
popa
aaa
aad
and
jmp
shl
inc
jmp
jnp
das
out
out
xchg
push
loopne
inc
cmps
mov
push
mov
call
movs
pop
push
sbb
retf
repz
sub
das
and
outs
pop
sar
pop
push
xor
adc
popf
pusha
ret
sub
mov
dec
or
sub
sbb
std
dec
dec
out
mov
(bad)
sti
fsubr
test
fnsave
cld
mov
out
push
push
pop
lock
test
test
dec
clc
push
call
pusha
(bad)
call
dec
jae
or
sbb
mov
ret
fisubr
dec
outs
inc
(bad)
inc
enter
retf
add
jp
push
mov
sub
sbb
(bad)
jmp
fwait
dec
jge
mov
cmps
inc
outs
lods
mov
stos
daa
jmp
push
bound
push
inc
push
mov
fbstp
sahf
cli
mov
clc
push
or
pop
call
xchg
jmp
pusha
dec
cmp
nop
or
pop
mov
and
push
(bad)
mov
mov
add
dec
pop
dec
clc
mov
mov
bound
ret
call
adc
das
(bad)
loopne
inc
mov
cli
jmp
jb
scas
xchg
outs
push
dec
jl
(bad)
jmp
or
sqrtps
fcomip
scas
(bad)
cmp
mov
jmp
cmc
push
xchg
fdiv
cmps
jg
movs
ins
pop
sub
fbstp
or
sub
(bad)
call
cdq
xchg
xchg
dec
jns
xchg
stos
xchg
jl
sbb
(bad)
(bad)
(bad)
fcomip
pop
ret
imul
ins
rol
iret
inc
mov
pop
outs
cmp
nop
icebp
(bad)
(bad)
ds
mov
fist
jecxz
(bad)
sub
in
frstor
fprem
call
nop
jns
ds
imul
pushw
(bad)
adc
pusha
fnstsw
sti
xchg
sar
stos
dec
and
jle
fidiv
and
fnstsw
stos
push
jecxz
sar
push
xchg
mov
stos
mov
test
sub
aaa
jle
mov
sti
mov
push
imul
jmp
add
sub
xor
sahf
dec
(bad)
(bad)
call
iret
fistp
sub
fldcw
mov
pop
adc
ds
pop
sub
pop
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
cmps
add
loop
dec
sub
dec
pop
pushf
movs
xor
adc
mov
lods
(bad)
jp
aad
hlt
addr16
call
and
je
(bad)
jmp
cli
push
add
xchg
stos
fld
or
ja
les
mov
pop
jmp
dec
or
daa
inc
mov
add
call
cld
arpl
(bad)
mov
xchg
aas
inc
mov
mov
jnp
cs
jge
outs
push
mov
push
dec
(bad)
xchg
mov
jl
pop
(bad)
(bad)
fwait
(bad)
call
mov
les
pop
out
and
mov
mov
mov
lock
nop
mov
inc
test
pop
xchg
pushf
jo
int3
out
dec
out
lds
pop
push
outs
sub
lds
popa
mov
mul
mov
xchg
(bad)
or
and
sahf
mov
sbb
stos
jle
scas
call
add
jl
lods
fwait
cwde
js
into
or
pop
lods
dec
iret
sbb
push
(bad)
mov
jmp
lea
xor
je
push
or
jge
or
imul
push
imul
add
add
push
js
retf
imul
xchg
jg
stos
sub
mov
jp
mov
xlat
sbb
out
clc
cs
dec
sub
test
test
dec
es
(bad)
call
(bad)
(bad)
sbb
test
test
sbb
mov
(bad)
(bad)
(bad)
adc
clc
sbb
mov
scas
add
adc
pop
jmp
sub
scas
mov
je
call
add
mov
out
(bad)
and
or
scas
cmp
push
jae
lahf
mov
icebp
mov
jmp
call
push
js
dec
in
dec
movs
retf
inc
xor
test
int
mov
mov
dec
hlt
jmp
mov
loop
xchg
mov
jmp
xor
stos
(bad)
call
mov
cmp
jbe
cmp
or
jmp
xchg
test
stc
loop
popf
(bad)
(bad)
(bad)
call
stc
xlat
adc
cmp
iret
mov
cmps
(bad)
fistp
pop
jecxz
push
outs
(bad)
(bad)
(bad)
(bad)
cmp
scas
mov
imul
fimul
xchg
push
fucomp
iret
lahf
add
lods
cmps
jb
inc
test
and
sbb
(bad)
(bad)
jmp
add
fild
mov
mov
mov
sub
lahf
dec
(bad)
lahf
push
inc
jle
xchg
mov
ficom
pop
call
mov
adc
arpl
call
jmp
in
retf
mov
mov
add
cli
sub
scas
sar
or
aam
lods
or
inc
mov
cmc
(bad)
jg
xchg
pop
mov
movs
scas
cmps
das
ss
imul
popf
rcl
pop
hlt
loopne
in
mov
(bad)
lods
sub
pop
mov
(bad)
push
add
rcr
xchg
dec
xor
scas
mov
(bad)
(bad)
(bad)
dec
sub
(bad)
jmp
mov
(bad)
ficomp
cmp
arpl
(bad)
jmp
call
fstp
ja
ds
iret
jle
sbb
push
and
(bad)
lods
das
mov
stos
mov
cmps
(bad)
loopne
dec
cs
(bad)
mov
cld
iret
pop
(bad)
aad
movs
or
push
sahf
out
xchg
gs
adc
pop
mov
xchg
stos
mov
mov
popa
cmp
cmc
mov
cmp
jmp
aaa
push
movnti
movs
sub
aaa
in
clc
call
repnz
sub
cmps
push
clc
ins
sub
and
dec
test
icebp
(bad)
cmp
jne
dec
clc
sbb
mov
outs
jmp
adc
fmul
and
jmp
add
sub
mov
jns
out
push
fimul
in
test
sahf
sub
or
(bad)
mov
xor
jno
jge
and
addr16
(bad)
(bad)
cmps
arpl
cs
es
outs
aas
retf
push
(bad)
(bad)
dec
clc
aas
or
mov
movs
sbb
xchg
into
dec
aas
xchg
jp
mov
das
or
sub
jns
pop
adc
int3
ds
fistp
(bad)
(bad)
jmp
stos
imul
sbb
cmp
movs
add
(bad)
call
mov
mov
cmp
mov
mov
fcomip
(bad)
jecxz
push
push
sbb
(bad)
call
fsubr
jae
outs
xchg
sbb
sub
fild
loope
jge
sub
adc
jg
(bad)
(bad)
call
pop
xor
xor
mov
sub
loopne
(bad)
(bad)
(bad)
jmp
mov
and
pop
inc
out
xor
stos
jmp
mov
lock
(bad)
sbb
(bad)
fild
or
test
jb
jmp
(bad)
(bad)
dec
sbb
test
in
mov
push
dec
loop
call
cmp
in
add
aad
in
call
dec
dec
sub
inc
loopne
and
test
adc
loope
retf
(bad)
cmp
fstp
xchg
sub
call
jno
(bad)
(bad)
dec
adc
mov
xor
imul
or
sti
call
jp
jae
enter
mov
add
pop
mov
xchg
sub
xchg
call
(bad)
cmp
xor
mov
push
cwde
pop
lods
sbb
iret
dec
adc
jmp
cmp
mov
ins
sub
inc
sbb
cmps
(bad)
hlt
cs
or
call
ds
popa
std
fild
sbb
mov
test
(bad)
jg
sub
xchg
push
scas
inc
pop
jbe
xchg
stos
(bad)
cmps
dec
push
stos
push
in
aaa
mov
sub
xor
lock
add
adc
ins
ds
out
(bad)
jmp
push
jbe
dec
pop
addr16
cmps
xchg
lods
outs
push
mov
mov
(bad)
call
pop
sub
and
lea
mov
in
test
hlt
scas
call
loop
(bad)
inc
jg
popa
shr
mov
call
jmp
or
imul
test
out
push
push
cld
mov
jbe
mov
ret
xchg
cli
loope
or
(bad)
xor
cli
(bad)
(bad)
fild
shl
inc
sti
fnsave
pop
aaa
cmp
stos
cmp
jmp
(bad)
(bad)
jne
cdq
adc
popa
cld
jns
in
ins
movs
stos
retf
stos
inc
cld
cmp
push
retf
jne
into
jbe
(bad)
cmp
sub
mov
(bad)
cmp
push
mov
sbb
(bad)
jmp
xor
std
test
call
dec
int3
mov
(bad)
(bad)
call
xchg
xor
mov
repnz
dec
pop
pop
hlt
xchg
or
push
aaa
mov
in
mov
pop
lock
cmp
retf
sbb
or
stc
aaa
push
das
mov
lea
scas
dec
clc
enter
(bad)
repnz
and
sub
jecxz
pop
mov
fwait
ja
push
inc
mov
sub
jae
mov
mov
mov
pop
mov
xchg
inc
dec
jmp
mov
ds
jmp
or
mov
sbb
adc
leave
daa
mov
cli
neg
clc
jge
(bad)
(bad)
call
cmps
es
cmp
mov
adc
cwde
mov
jns
pop
mov
(bad)
(bad)
dec
into
scas
mov
imul
mov
loopne
or
fmul
(bad)
(bad)
jmp
dec
sar
test
cdq
leave
mov
and
lahf
mov
ret
pushf
pop
hlt
adc
add
ds
fst
add
(bad)
jmp
sub
(bad)
cli
mov
ret
mov
adc
(bad)
or
hlt
and
sub
outs
mov
lock
mov
scas
ror
(bad)
jbe
fsubr
out
push
ins
sub
call
pop
sub
jg
add
(bad)
(bad)
(bad)
(bad)
(bad)
out
inc
push
add
mov
das
or
mov
stc
imul
(bad)
(bad)
(bad)
jmp
hlt
pusha
pop
aas
loope
outs
sub
cli
mov
shl
mov
ins
pop
out
out
jmp
(bad)
push
in
sbb
in
add
or
adc
push
sbb
loopne
push
xchg
pop
outs
out
inc
or
fidivr
cli
adc
nop
xchg
adc
or
(bad)
(bad)
jmp
mov
cmps
inc
inc
enter
das
sbb
aaa
outs
dec
retf
lahf
adc
outs
pop
and
mov
push
sub
out
pop
xchg
cwde
fdivr
or
inc
sub
mov
das
pop
idiv
or
dec
push
jmp
pop
pusha
fs
jecxz
pop
out
shl
sti
nop
cmp
test
xchg
cmps
enter
(bad)
(bad)
jmp
jb
mov
fnstcw
js
call
add
jp
sbb
dec
(bad)
pop
(bad)
(bad)
(bad)
jmp
cli
mov
mov
movs
jmp
or
push
xor
jmp
xlat
and
or
int3
in
cmp
mov
cli
sbb
clc
fidivr
jg
mov
stos
stos
cli
or
and
sub
cmp
into
or
(bad)
sbb
xor
rcl
push
adc
jmp
(bad)
(bad)
dec
pushf
adc
dec
jmp
adc
cmp
call
jno
gs
lods
js
push
sti
xchg
mov
jmp
push
stos
and
pop
pop
(bad)
(bad)
(bad)
jmp
or
adc
test
retf
std
cmp
mov
(bad)
in
lods
ficomp
icebp
mov
enter
call
jo
or
js
add
(bad)
jmp
outs
pop
mov
cmp
mov
cmp
pusha
fisub
sub
leave
loop
out
(bad)
jg
sbb
cmps
xor
sub
xor
fisttp
pop
(bad)
(bad)
mov
mov
mov
mov
repnz
pop
dec
mov
test
(bad)
(bad)
jg
pop
pop
xchg
in
ins
cmp
aas
fld
test
cmp
sbb
mov
cmps
(bad)
(bad)
(bad)
jmp
mov
cmp
addr16
adc
scas
sub
das
xchg
push
scas
push
js
(bad)
(bad)
call
fcomip
sub
(bad)
cwde
ret
pop
in
(bad)
fisub
cmp
fcmovnb
or
sbb
repnz
in
lahf
(bad)
(bad)
(bad)
push
pop
pop
out
pop
cmp
mov
std
jl
repnz
cmp
ds
aas
bound
mov
dec
inc
pop
rcl
inc
sbb
cli
sahf
stos
xor
imul
mov
xor
loop
jmp
mov
xchg
mov
sbb
pop
ret
adc
sbb
(bad)
(bad)
mov
pop
push
mov
sub
adc
shl
out
imul
xor
std
out
call
or
or
test
xchg
xchg
or
and
fiadd
cmp
add
xchg
pop
push
scas
ss
enter
lahf
fild
(bad)
(bad)
(bad)
jnp
dec
scas
mov
push
stos
sbb
pop
mov
jmp
cmp
add
scas
add
mov
dec
test
inc
imul
loopne
mov
mov
(bad)
(bad)
jmp
cdq
retf
and
or
mov
pop
test
jmp
jmp
loop
(bad)
(bad)
(bad)
(bad)
jmp
mov
dec
mov
inc
imul
sbb
jmp
xor
scas
clc
jmp
push
xchg
sub
sar
or
dec
sbb
das
cli
(bad)
dec
jo
mov
out
lds
fnstsw
xor
test
jo
or
inc
sar
out
sbb
pusha
jmp
adc
xchg
loop
mov
imul
dec
mov
(bad)
(bad)
mov
pop
adc
gs
fwait
sbb
cmps
mov
repz
sar
sub
ja
and
out
(bad)
mov
mov
xchg
sub
adc
cmps
inc
call
sahf
add
xor
(bad)
(bad)
(bad)
(bad)
inc
icebp
push
(bad)
sti
or
sub
adc
sub
sub
rcr
mov
test
(bad)
inc
fimul
or
ret
mov
and
ins
clc
or
xchg
test
xchg
and
leave
in
mov
out
(bad)
cs
sub
xchg
mov
loope
sti
std
imul
mov
fcmovb
and
and
fwait
pop
fdivr
push
and
movs
jp
or
jae
loop
jae
daa
sahf
fs
(bad)
call
scas
jnp
jbe
and
mov
sti
mov
cmps
cmps
(bad)
(bad)
(bad)
mov
cs
pop
mov
mov
mov
pushf
into
call
fadd
sbb
outs
cmp
jg
pop
stc
dec
retf
and
mov
sub
(bad)
(bad)
jg
jnp
jg
enter
xchg
push
out
or
mov
inc
das
xor
into
push
cwde
mov
(bad)
cli
das
ss
imul
data16
mov
mov
mov
fwait
jmp
mov
test
inc
adc
and
shl
je
scas
shr
fcomip
cmp
or
retf
call
add
mov
sub
inc
mov
lahf
lahf
(bad)
mov
adc
(bad)
jg
ins
and
sub
jno
lock
add
icebp
jmp
repnz
adc
(bad)
(bad)
(bad)
jmp
jnp
sar
test
and
repnz
fs
jl
or
(bad)
(bad)
call
xor
fnsave
fdivr
inc
push
xor
mov
lods
mov
push
clc
stos
sbb
sbb
or
jmp
(bad)
(bad)
push
xchg
mov
and
inc
mov
call
sub
lock
(bad)
das
cli
sub
aad
pop
and
jp
sub
sbb
pop
leave
mov
pop
repnz
ins
mov
cmps
jg
test
jl
popf
das
leave
sub
push
imul
jmp
call
loope
mov
add
(bad)
mov
mov
pusha
mov
sub
lock
and
ret
cs
mov
pop
stos
fisub
cmp
(bad)
dec
adc
out
add
mov
int
sub
imul
cmp
xchg
jae
mov
sub
(bad)
call
loopne
jmp
mov
popf
and
mov
jle
test
(bad)
imul
push
mov
dec
sub
in
mov
push
jmp
(bad)
ds
addr16
lahf
push
mov
and
ins
pop
dec
cmps
cs
mov
jl
jl
(bad)
inc
fdivr
ins
push
fistp
(bad)
stos
xor
or
(bad)
pop
mov
adc
mov
arpl
test
mul
in
mov
push
ret
xor
(bad)
dec
mov
shr
retf
inc
stc
inc
mov
jns
cli
pop
mov
jae
(bad)
mov
cmp
mov
out
fisubr
scas
push
test
sub
hlt
in
cwde
mov
sub
fisub
into
popf
mov
lahf
cli
popa
adc
pop
(bad)
(bad)
jmp
mov
test
ss
or
outs
sbb
or
test
push
ins
js
repnz
fwait
cmp
pop
cli
inc
mov
pop
call
outs
stos
(bad)
(bad)
call
push
xor
cs
sbb
outs
mov
cmc
or
sub
movs
push
stos
mov
(bad)
(bad)
(bad)
jmp
cdq
call
lods
loopne
repz
dec
xor
cs
movs
shr
loopne
push
dec
sbb
add
inc
push
stc
push
je
enter
sbb
(bad)
lods
pop
pop
pop
fistp
mov
scas
mov
fidivr
and
movs
cmp
push
test
jnp
and
cli
inc
ror
jae
fcmovbe
scas
or
stos
ret
in
add
dec
sbb
rcr
in
or
int
lea
rcl
arpl
adc
aad
jp
outs
neg
xchg
xor
push
jmp
push
mul
cli
(bad)
(bad)
(bad)
dec
test
js
cdq
test
cmps
pop
(bad)
or
adc
icebp
cld
fistp
or
jp
push
mov
jg
adc
pop
cmp
(bad)
scas
sub
dec
(bad)
sub
into
ret
pop
xchg
rol
out
add
dec
pop
xor
rcr
fmul
sub
out
and
(bad)
add
(bad)
call
lahf
push
and
shr
jmp
push
mov
imul
adc
jmp
sbb
pushf
xchg
dec
sub
loope
jecxz
(bad)
jmp
and
mov
inc
mov
jb
xchg
imul
(bad)
cmp
sub
or
jmp
adc
repz
(bad)
stos
(bad)
push
sti
and
in
sub
cmps
fldcw
fiadd
fs
mov
mov
enter
jmp
movs
add
je
mov
push
cli
sub
sbb
cmps
cld
stos
mov
push
fwait
repz
push
gs
je
xor
jp
scas
aad
jg
ja
and
das
mov
mov
movs
scas
nop
retf
adc
push
and
mov
xor
das
clc
push
jp
int
pop
sbb
cmp
addr16
sub
ja
(bad)
(bad)
(bad)
mov
push
lods
mov
sahf
out
xor
sub
mov
shl
adc
xchg
test
cmp
es
mov
adc
cli
mov
(bad)
jo
mov
cmp
or
jl
ins
mov
sbb
mov
retf
jns
dec
nop
sbb
call
sbb
xchg
scas
scas
and
(bad)
cwde
or
(bad)
ret
stos
nop
mov
pusha
outs
cmps
cmp
nop
pushf
fsubr
jmp
mov
add
fild
(bad)
or
int3
push
daa
ins
cld
jg
icebp
ret
retf
push
sbb
icebp
cwde
repnz
ja
(bad)
(bad)
(bad)
jg
out
xor
inc
mov
push
sar
stc
lahf
cmp
push
sub
sub
das
cli
(bad)
dec
adc
jnp
test
aad
mov
pop
nop
cld
(bad)
and
xor
push
(bad)
fld
mov
fwait
sbb
jg
sub
(bad)
jmp
popa
sub
sub
mov
sub
pop
(bad)
shl
push
arpl
loop
xchg
jp
jns
frstor
call
jns
js
outs
addr16
sar
scas
mov
lods
cmps
mov
sub
push
push
stos
or
bound
(bad)
jg
cld
ja
xor
lahf
mov
nop
movs
mov
adc
test
sub
sbb
jp
ja
ror
dec
cmp
xchg
ret
(bad)
(bad)
jmp
and
lock
cmp
imul
mov
(bad)
scas
cli
jmp
jmp
shr
stos
(bad)
mov
(bad)
push
cmps
mov
and
(bad)
(bad)
(bad)
call
add
movs
mov
(bad)
test
daa
mov
test
cmp
jl
push
and
loopne
pop
icebp
or
daa
pop
cdq
inc
iret
popf
(bad)
jl
les
iret
pop
inc
xor
(bad)
(bad)
inc
bound
pop
xor
mov
push
iret
(bad)
(bad)
call
push
in
xor
mov
in
xchg
sub
shr
xor
(bad)
(bad)
(bad)
fstp
fnstenv
cli
(bad)
push
in
out
outs
cli
or
(bad)
rcr
push
in
ret
cmc
mov
push
(bad)
call
int
adc
loop
or
(bad)
aad
or
mov
sti
inc
push
mov
adc
aas
xchg
cmps
pop
ins
(bad)
std
fwait
shr
sbb
adc
data16
jnp
sub
jp
mov
mov
stos
stos
addr16
(bad)
(bad)
(bad)
cmp
(bad)
jecxz
xor
sbb
leave
jecxz
stos
xchg
mov
(bad)
xchg
cmps
sub
sub
repnz
jmp
call
jo
cmps
inc
aam
movs
loope
sub
cwde
sbb
push
retf
inc
mov
repnz
repnz
jne
mov
xchg
arpl
sub
push
cld
push
xor
add
js
cld
outs
adc
add
jp
cmp
cmp
pop
dec
mov
mov
(bad)
(bad)
(bad)
inc
push
jle
mov
das
and
xor
xchg
aaa
int
ret
mov
fiadd
ror
lock
(bad)
sub
mov
(bad)
(bad)
mov
lods
mov
sub
push
sub
iret
ror
cmps
sti
in
lahf
mov
(bad)
(bad)
call
cwde
int
xchg
xchg
and
(bad)
and
adc
pop
cmps
leave
push
leave
call
out
sar
sbb
push
cmp
and
hlt
push
call
enter
push
mov
(bad)
inc
jmp
test
pop
jne
cmp
jg
adc
out
adc
push
push
test
jmp
mov
test
mov
test
mov
(bad)
xchg
jo
dec
or
xchg
iret
pop
cmp
sub
call
in
mov
(bad)
fistp
xchg
repnz
or
pop
mov
data16
jbe
jbe
mov
sub
std
jmp
or
loop
xchg
pop
mov
pop
or
out
std
and
test
push
jp
jl
or
pop
stos
pop
cmp
repnz
inc
cmps
js
mov
cld
mov
out
pop
jl
lods
inc
sub
push
lods
or
add
lods
cmp
scas
ret
loope
mov
loope
push
dec
or
mov
mov
and
and
(bad)
dec
mov
stos
repnz
sub
pop
add
xchg
mov
fadd
jmp
stos
mov
xchg
loope
(bad)
(bad)
(bad)
jmp
repz
call
mov
push
mov
push
pushf
push
dec
jmp
cdq
fwait
or
pushf
adc
push
pop
ret
ror
mov
sahf
jg
jne
shl
stos
xchg
retf
inc
or
pop
popf
inc
sar
clc
mov
repz
ret
or
lods
lock
(bad)
mov
mov
mov
cmp
mov
cmp
mov
xor
jp
pushf
fstp
ss
xor
cli
cs
out
adc
inc
inc
jne
xchg
mov
call
das
add
ficomp
iret
mov
jge
or
xchg
push
stos
(bad)
(bad)
fistp
daa
pop
retf
cmps
std
imul
or
xchg
jmp
stos
out
ja
pushf
call
sahf
fwait
or
(bad)
(bad)
call
jnp
mov
push
mov
outs
sub
das
mov
fist
lds
sub
cs
std
dec
xchg
dec
jmp
out
(bad)
(bad)
(bad)
call
sbb
out
fwait
cmps
hlt
jg
xchg
push
imul
mov
call
mov
jmp
aas
push
test
and
jmp
jg
cs
scas
xor
add
outs
sub
cmp
xor
out
mov
(bad)
clc
test
or
movs
movs
jmp
movs
inc
leave
mov
scas
mov
mov
ret
sbb
mov
xor
lds
stos
adc
loop
call
cmp
idiv
das
jp
into
sahf
lahf
addr16
mov
jns
mov
sub
jp
cdq
mov
(bad)
(bad)
(bad)
jmp
ins
push
xchg
sbb
loop
mov
imul
psubusw
add
dec
sub
int3
xchg
mov
push
jmp
imul
cmps
in
pop
pop
in
fstp
xor
das
and
inc
push
mov
out
(bad)
mov
sub
xchg
addr16
(bad)
sub
dec
cwde
jg
ins
test
(bad)
call
fnstsw
pusha
sbb
mov
sahf
adc
mov
push
add
jecxz
xor
cmp
pop
pop
out
push
or
(bad)
jmp
movs
scas
xor
inc
out
test
mov
cld
(bad)
jmp
inc
ins
sti
mov
fcomi
call
dec
popa
jmp
outs
xor
cmp
xchg
or
in
mov
xchg
sti
(bad)
adc
mov
(bad)
push
xchg
mov
sti
lods
mov
or
fnsave
(bad)
(bad)
(bad)
call
nop
cli
push
and
movs
mov
pusha
mov
mov
pusha
imul
or
mov
fist
das
je
mov
lock
sub
xchg
pop
sub
jg
pop
pop
pop
inc
cld
mov
test
ror
mov
(bad)
int
(bad)
cmp
(bad)
(bad)
call
mov
mov
xor
clc
mov
sub
iret
(bad)
dec
xor
adc
jecxz
scas
xor
idiv
pop
(bad)
xor
scas
xchg
lods
cmc
call
loop
jmp
sbb
cmp
mov
mov
call
xchg
xchg
pop
out
(bad)
(bad)
mov
jge
xor
cmp
jo
pop
lahf
out
xchg
scas
lahf
push
jg
(bad)
(bad)
in
or
or
iret
lds
ja
lods
mov
mov
rol
jle
test
jo
pop
ins
add
sbb
xchg
sub
sub
jns
push
fstp
(bad)
inc
push
loopne
shr
iret
xchg
sub
mov
and
out
mov
adc
scas
aam
jl
inc
sahf
ja
(bad)
(bad)
clc
mov
lods
mov
mov
iret
xchg
xchg
jo
(bad)
(bad)
(bad)
(bad)
mov
jmp
add
mov
and
dec
outs
rol
das
cmp
aaa
jecxz
(bad)
(bad)
dec
daa
mov
pop
mov
sub
repz
jecxz
or
cli
loopne
xchg
loopne
sbb
or
repnz
inc
or
jle
adc
imul
(bad)
call
push
(bad)
call
in
xor
push
mov
out
(bad)
clc
(bad)
(bad)
call
sub
jmp
das
aas
sbb
dec
icebp
push
fisub
fmulp
pop
cwde
and
jg
gs
add
mov
add
(bad)
jmp
stos
adc
out
popf
fidivr
shl
int
or
inc
pushf
(bad)
(bad)
(bad)
jg
std
fs
call
xor
in
push
and
arpl
pop
out
jns
inc
pusha
or
mov
(bad)
(bad)
fcomip
test
sbb
(bad)
fst
xchg
xchg
jnp
xor
cli
mov
push
loop
sbb
xlat
pop
cmp
mov
fst
push
pop
(bad)
mov
dec
adc
stos
sub
cmps
test
xor
dec
and
ds
sub
sub
fild
ds
jne
mov
push
sbb
adc
ds
mov
sub
stos
cmp
pusha
mov
jbe
fidivr
sti
in
cmc
and
dec
(bad)
dec
or
retf
xchg
enter
pop
push
stos
test
and
jl
fdivr
xor
es
sbb
inc
retf
pop
adc
iret
mov
add
sub
inc
inc
jmp
retf
mov
jae
xor
dec
call
dec
mov
sahf
cmp
xchg
dec
imul
mov
fstp
jle
loop
mov
out
stc
sub
mov
add
sbb
push
sar
ins
pop
and
push
test
xchg
(bad)
jg
add
(bad)
mov
aam
sbb
(bad)
fldcw
mov
mov
in
pop
push
bound
dec
or
add
sub
mov
imul
std
mov
sub
retf
stos
cs
mov
mov
sub
cld
ins
xchg
adc
sub
stos
jl
xchg
jmp
and
inc
leave
addr16
dec
jle
push
dec
mov
xchg
into
lea
inc
push
pop
push
xchg
shl
jg
ja
pop
fisttp
cmp
fcomp
adc
ret
out
and
pusha
(bad)
cdq
(bad)
das
ins
inc
repnz
inc
mov
add
and
aaa
loope
cmp
lods
scas
inc
cmps
pop
fdivr
call
fcmovnu
loope
xchg
pop
push
xor
in
push
aaa
cld
(bad)
cmp
or
(bad)
pop
in
or
cld
bound
addr16
dec
fwait
dec
jg
mov
mov
adc
nop
stos
icebp
enter
idiv
call
cmp
mov
call
sub
pop
aam
mov
ins
mov
sbb
outs
(bad)
sbb
iret
(bad)
inc
mov
mov
mov
ret
aam
push
sbb
rol
cld
ret
(bad)
(bad)
jg
mov
push
(bad)
add
xchg
into
fisubr
dec
mov
sub
(bad)
push
mov
push
mov
mov
xchg
push
jbe
lods
(bad)
sti
rcr
lods
mov
(bad)
(bad)
fucomip
ins
repnz
inc
pop
fwait
repnz
loop
xor
in
(bad)
or
lods
add
(bad)
(bad)
stc
xchg
stc
adc
dec
out
fwait
add
sub
jp
inc
xlat
or
stos
cld
sub
mov
mov
sub
pop
sbb
in
bound
sub
dec
enter
(bad)
(bad)
(bad)
(bad)
cld
mov
pop
mov
cwde
lods
or
mov
aad
scas
and
or
pusha
dec
scas
(bad)
(bad)
(bad)
(bad)
cmp
mov
sub
mov
pop
xlat
xor
pop
enter
scas
jle
inc
movs
mov
push
mov
inc
lods
stos
mov
xchg
(bad)
(bad)
mov
and
(bad)
mov
fldcw
mov
push
fdiv
(bad)
or
dec
outs
inc
cld
(bad)
jg
test
test
mov
push
sub
jmp
jmp
or
call
mov
and
imul
(bad)
and
cmp
sbb
or
or
test
lock
mov
fsubp
mov
sbb
retf
push
push
xor
add
or
inc
jmp
mov
in
mov
(bad)
loopne
mov
push
clc
push
imul
dec
mov
(bad)
das
mov
ins
out
daa
(bad)
mov
dec
jge
(bad)
call
jle
mov
adc
cmp
cmp
call
(bad)
dec
lods
jl
jmp
enter
pusha
jge
out
push
shl
hlt
(bad)
push
scas
jg
pop
adc
je
jmp
mov
fidiv
dec
cmc
push
xchg
adc
dec
imul
xchg
mov
add
jg
mov
mov
xchg
lock
push
mov
xor
test
sti
stos
jmp
push
das
sub
aad
ficom
test
scas
cli
(bad)
jmp
das
loop
fwait
lahf
push
mov
and
jb
xchg
add
(bad)
call
push
retf
mov
sbb
and
iret
jl
adc
cmp
test
mov
sbb
out
cli
mov
enter
aas
call
imul
fsubr
mov
out
icebp
(bad)
(bad)
(bad)
out
lods
dec
and
jmp
mov
jmp
jmp
inc
fbstp
(bad)
dec
cwde
xor
push
addr16
cmp
(bad)
(bad)
jmp
push
into
cli
ins
movs
cmp
xor
js
test
mov
jnp
retf
adc
test
(bad)
call
cmp
ss
rol
push
outs
adc
mov
stos
aas
dec
mov
mov
in
neg
out
stos
xchg
jmp
(bad)
mov
xlat
jae
xor
add
(bad)
mov
cmp
cmp
bound
xor
cmps
test
mov
enter
out
js
sub
mov
test
mov
lock
cmps
(bad)
and
out
sbb
sahf
rcl
and
daa
jmp
lods
shl
leave
outs
clc
inc
mov
fucomi
retf
push
pushf
mov
xchg
xor
(bad)
std
ins
dec
mov
and
jb
outs
inc
mov
(bad)
(bad)
jg
adc
pop
inc
adc
fbstp
pop
scas
iret
pusha
jbe
mov
imul
dec
jmp
das
inc
cs
sub
imul
lock
cmp
pop
sub
mov
(bad)
call
inc
stos
(bad)
adc
cs
lds
hlt
push
retf
cmps
sub
test
add
retf
icebp
dec
lahf
xchg
cs
stos
push
out
add
(bad)
jmp
add
adc
xor
mov
inc
stos
xor
(bad)
jmp
ja
neg
sub
xor
test
mov
sti
std
dec
and
inc
push
cmp
adc
lods
pop
sub
cld
dec
xor
jno
sub
(bad)
jmp
or
rcl
inc
xchg
mov
hlt
and
cmp
and
(bad)
(bad)
(bad)
(bad)
cli
mov
stos
std
jnp
fwait
ret
lahf
mov
inc
dec
cmp
fwait
pop
xor
dec
call
rcl
push
in
mov
sar
(bad)
cmp
xor
in
fisttp
retw
jle
fbstp
retf
mov
ja
shl
ja
sahf
push
jmp
jmp
shr
adc
sub
hlt
inc
or
push
sub
cmp
mov
cmps
sahf
pop
or
pop
int3
mov
or
ss
jmp
clc
popa
sar
mov
jecxz
mov
mov
xchg
js
mov
push
stos
adc
and
and
mov
xchg
jl
(bad)
(bad)
cli
or
jecxz
daa
fcomp
outs
inc
and
scas
clc
mul
leave
popf
icebp
and
in
jo
imul
call
inc
(bad)
(bad)
(bad)
call
iret
in
les
in
in
cli
pop
mov
pop
test
add
(bad)
jmp
leave
mov
mov
gs
xor
clc
cli
(bad)
(bad)
(bad)
jmp
pop
das
dec
sbb
(bad)
inc
test
(bad)
repnz
std
fimul
mov
sbb
mov
pmulhuw
call
and
movs
enter
imul
stc
ret
or
scas
lods
cmp
jmp
add
and
call
sub
cwde
in
sub
add
mov
or
cmp
push
(bad)
in
dec
mov
push
xchg
jmp
fstp
push
jo
lods
imul
jne
add
sbb
(bad)
jmp
loop
movs
ja
ins
ss
pop
out
adc
mov
or
leave
call
ret
xchg
inc
dec
fild
mov
xchg
(bad)
(bad)
push
mov
mov
mov
dec
test
out
fwait
retf
lods
adc
(bad)
dec
stos
add
adc
call
(bad)
(bad)
(bad)
(bad)
sti
inc
cli
adc
stos
call
mov
(bad)
sub
jecxz
in
stos
jmp
jmp
inc
sub
in
jp
das
clc
sub
stos
or
pop
mov
dec
push
outs
jmp
sbb
std
push
ret
dec
jmp
push
inc
mov
cmp
(bad)
(bad)
call
mov
or
mov
les
lods
adc
aad
call
cmc
cmp
mov
pop
rcr
jle
popf
cmp
xchg
retf
retf
gs
fsub
dec
mov
ds
int
imul
std
cwde
shr
sbb
and
std
test
(bad)
(bad)
(bad)
jmp
push
lods
sahf
jge
cld
gs
pop
adc
pop
push
jg
call
call
(bad)
jmp
sbb
lods
and
fistp
gs
fnstsw
add
std
gs
cli
inc
(bad)
(bad)
mov
lds
out
gs
in
sub
mov
dec
mov
test
jp
jmp
(bad)
(bad)
jmp
in
cmps
mov
mov
pop
icebp
out
repnz
sbb
scas
or
add
xor
(bad)
inc
in
cmps
xchg
fidiv
scas
pop
mov
inc
inc
mov
leave
sub
(bad)
(bad)
call
cdq
in
jmp
sbb
repnz
test
and
cmp
xor
mov
xor
ins
in
ds
popa
mov
jno
adc
ja
jmp
dec
push
scas
inc
stos
sbb
into
sub
cli
fldenv
imul
(bad)
jmp
fsub
(bad)
pop
retf
mov
mov
leave
leave
mov
out
sti
pushf
(bad)
daa
jnp
pop
popa
mov
outs
lods
nop
(bad)
scas
clc
(bad)
jmp
or
mov
aas
arpl
scas
sti
dec
push
add
cmp
xor
push
imul
js
stc
push
xor
es
cld
(bad)
(bad)
call
sub
adc
outs
sbb
push
ins
add
ror
sbb
movs
test
dec
iret
mov
add
test
add
sar
jmp
aas
test
pop
or
in
data16
mov
or
cmp
nop
aas
into
int
push
sub
dec
mov
adc
add
jnp
inc
(bad)
(bad)
(bad)
(bad)
fbstp
xlat
aas
(bad)
lahf
mov
jo
add
sub
or
dec
mov
jl
fwait
sar
jmp
sub
pop
sbb
test
(bad)
pop
(bad)
mov
std
hlt
(bad)
cmp
jmp
jle
(bad)
push
std
ins
sbb
adc
shl
mov
(bad)
(bad)
jg
repnz
push
ds
movs
inc
sub
into
call
cmp
out
xor
xor
inc
sbb
lock
mov
xchg
mov
mov
mov
out
(bad)
(bad)
(bad)
jmp
mov
add
loope
xor
das
or
adc
inc
lds
ror
cmp
es
jno
inc
in
daa
in
inc
in
(bad)
(bad)
(bad)
jmp
xor
js
cs
cmp
mov
fst
sbb
inc
dec
cmps
pusha
dec
add
rcr
push
sub
sbb
pusha
jmp
cmc
ficom
ror
das
(bad)
(bad)
call
jp
addr16
jl
loopne
cld
in
xchg
scas
movs
jmp
scas
cmp
(bad)
out
test
mov
pushf
adc
add
fbld
(bad)
fbstp
test
add
arpl
movs
test
or
cmp
cmp
pusha
sbb
pop
ret
pop
push
sub
lea
or
(bad)
jmp
(bad)
dec
mov
fwait
stos
das
add
dec
pop
jmp
sub
(bad)
nop
cdq
fadd
mov
scas
imul
loope
add
adc
(bad)
jmp
mov
out
mov
push
xor
mov
xor
jg
mov
and
xor
add
(bad)
jmp
mov
or
cdq
and
lea
scas
aam
imul
call
lar
sbb
mov
cld
add
fisttp
mov
or
mov
push
stc
mov
aas
jne
xchg
jmp
push
sbb
cli
push
movs
lea
or
adc
push
adc
adc
inc
sar
(bad)
jmp
(bad)
cmp
xchg
mov
jge
lahf
das
fdiv
cld
pop
out
sub
(bad)
(bad)
(bad)
call
add
pushf
xor
leave
das
mov
sub
sbb
xchg
xlat
jno
fucom
pop
jle
mov
jl
jmp
jge
fdivr
jg
test
and
(bad)
(bad)
out
movs
inc
fsub
(bad)
sbb
fisub
pop
outs
push
test
pop
js
rcl
repnz
mov
test
sub
mov
add
fdiv
xchg
out
jnp
jmp
push
cmps
(bad)
cmp
lods
aas
push
call
out
std
dec
mov
inc
(bad)
ins
sub
mov
js
lods
lea
lods
mov
pop
inc
(bad)
(bad)
(bad)
call
push
lods
sti
loopne
test
adc
imul
or
(bad)
(bad)
(bad)
(bad)
call
and
scas
mov
push
mov
mov
fwait
cmps
pop
inc
inc
jmp
imul
ins
xchg
fisub
inc
push
push
push
sub
ficomp
stos
(bad)
stos
cdq
pop
sahf
cmp
in
inc
adc
fld
dec
adc
add
jg
fprem1
jae
movs
movs
and
sbb
lea
inc
sub
(bad)
(bad)
jmp
addr16
in
or
dec
cs
mov
xor
je
push
push
sbb
push
jno
adc
dec
lahf
or
xor
test
into
cmp
(bad)
push
adc
pop
movs
(bad)
movs
in
dec
shl
test
jmp
push
pop
in
and
das
add
clc
inc
fidivr
and
in
lock
(bad)
(bad)
jmp
je
lds
and
stc
add
xlat
adc
xor
aad
xor
repnz
or
call
es
jae
movs
cs
jno
pop
and
push
pop
mov
fist
adc
push
rcl
fnstsw
(bad)
call
test
fadd
xor
add
in
test
fcmovnu
lods
push
(bad)
sbb
fldenv
inc
(bad)
(bad)
inc
cld
ror
or
rcl
jne
das
lea
ins
or
push
out
push
or
xor
icebp
fmul
or
pop
xchg
aam
cmps
lods
(bad)
dec
lock
test
scas
pop
jmp
fs
push
lods
outs
push
xchg
fild
cmps
dec
sbb
scas
jmp
ror
test
sbb
jmp
and
sub
(bad)
fcomip
out
mov
pop
mov
sti
js
jno
(bad)
movs
shl
mov
and
(bad)
(bad)
clc
push
aaa
mov
fwait
out
dec
push
push
sti
add
call
stos
ror
retf
(bad)
lock
sub
sub
sti
data16
rcl
jno
mov
mov
test
dec
outs
std
fcomp
jns
adc
(bad)
push
mov
ja
into
fsubr
(bad)
(bad)
(bad)
mov
xchg
(bad)
xor
cmp
jle
xor
inc
adc
xor
mov
jns
ja
(bad)
(bad)
inc
in
loopne
xchg
mov
mov
add
or
xchg
into
mov
outs
and
std
shl
test
pop
sbb
(bad)
mov
push
mov
pop
mov
(bad)
cmp
inc
and
mov
lea
(bad)
out
sub
in
or
cs
pop
imul
(bad)
jl
pop
mov
dec
sbb
test
call
mov
adc
xchg
cmp
push
sahf
gs
sbb
mov
add
std
xor
in
cmp
mov
imul
adc
mov
xchg
adc
(bad)
jmp
fcmovnbe
rol
in
outs
ins
(bad)
les
xchg
in
mov
sub
jg
inc
cld
std
out
sbb
cwde
dec
retf
call
push
pop
rcl
mov
push
jp
or
daa
(bad)
daa
adc
clc
(bad)
dec
and
lods
out
in
imul
add
xchg
inc
jno
call
mov
push
in
lods
and
sbb
loopne
ins
(bad)
(bad)
jg
mov
xor
jmp
out
mov
lock
xchg
push
sahf
aam
(bad)
mov
lods
xor
mov
fisubr
js
or
fcomp
stos
addr16
push
js
adc
ss
or
out
sti
jnp
push
cmp
ins
sub
adc
push
call
or
test
sub
addr16
sti
jne
stos
and
jg
dec
in
adc
in
lahf
inc
push
movs
inc
movs
sub
mov
(bad)
dec
or
iret
sub
cmps
in
or
jmp
jae
mov
movs
lods
sahf
or
adc
pop
(bad)
dec
outs
iret
xor
push
pushf
in
mov
jl
scas
jnp
aas
mov
cmps
std
fstp
loope
fld
or
and
adc
scas
push
aas
sbb
jmp
test
and
mov
mov
lock
push
inc
std
call
pop
(bad)
retf
hlt
or
ja
mov
retf
and
sbb
inc
sbb
pop
jno
cld
(bad)
in
dec
fnstsw
iret
lahf
dec
inc
add
jg
adc
iret
mov
inc
mov
push
mov
(bad)
sar
push
and
adc
jmp
sub
fabs
dec
aad
cdq
(bad)
into
scas
sub
fwait
add
in
sub
(bad)
push
stc
cli
push
test
add
xor
mov
lds
lahf
xchg
outs
(bad)
(bad)
(bad)
fucomip
cmps
add
mov
arpl
(bad)
cmps
jmp
cmps
mov
fisubr
(bad)
(bad)
(bad)
push
xchg
ins
enter
inc
ins
pop
movs
xchg
je
bound
ds
sub
ins
js
mov
mov
(bad)
jmp
sbb
mov
shr
jmp
jbe
test
sub
pop
dec
cwde
dec
imul
mov
(bad)
(bad)
(bad)
jg
mov
sub
fbld
xchg
mov
jnp
loopne
xchg
xchg
cmp
xor
sub
jne
mov
cs
sbb
das
scas
inc
and
mov
dec
push
push
mov
mov
push
(bad)
aaa
cwde
outs
fs
inc
xchg
cli
(bad)
mov
test
push
stos
xchg
aas
mov
fdivr
jle
cwde
(bad)
push
fisub
add
sti
lods
pop
pop
retf
pop
test
mov
(bad)
(bad)
dec
pop
xor
rol
iret
sbb
mov
test
adc
add
inc
int
and
dec
jno
sbb
inc
inc
cli
pop
out
daa
jmp
sub
es
(bad)
mov
test
aam
mov
mov
jecxz
mov
lea
xchg
mov
pop
or
mov
inc
scas
mov
call
dec
(bad)
out
nop
mov
mov
sub
retf
push
(bad)
(bad)
inc
add
in
sbb
jg
mov
pop
cld
push
in
(bad)
(bad)
adc
rcr
aas
lods
inc
push
mov
std
jbe
mov
and
faddp
dec
aam
pop
test
pop
jmp
cmp
inc
sub
mov
fidiv
out
push
in
and
fs
mov
movs
movs
in
and
gs
adc
pop
lea
call
mov
lods
and
xchg
mov
test
inc
fld
retf
adc
jns
test
inc
ins
cmp
mov
(bad)
(bad)
(bad)
inc
call
push
div
cmp
aad
xchg
jmp
push
sbb
jmp
call
retf
call
cmp
(bad)
mov
add
mov
pop
adc
and
mov
and
jg
cmc
inc
test
lahf
iret
fs
loope
popa
(bad)
out
out
sub
adc
sub
es
into
adc
les
shr
(bad)
jg
mov
out
loop
imul
neg
pop
pop
fmul
mov
fnsave
cli
lods
stos
je
cmp
and
std
lock
dec
or
dec
cmp
fild
(bad)
jg
fdiv
and
call
sahf
mov
inc
cmp
mov
lea
or
fs
dec
cwde
mov
jecxz
call
add
pop
scas
xchg
int
data16
imul
(bad)
(bad)
dec
mov
jp
lock
lock
add
xchg
push
(bad)
movs
add
or
adc
dec
and
addr16
jnp
int
xor
(bad)
or
push
loopne
push
iret
xor
retf
lods
dec
sar
inc
mov
int
mov
mov
aas
jno
(bad)
(bad)
call
mov
cmp
std
cmp
out
sbb
movs
sub
lock
inc
pop
mov
scas
clc
sbb
lock
mov
add
dec
cli
ucomiss
xor
sub
xor
push
fs
(bad)
call
in
sbb
jge
pop
loope
imul
call
cld
(bad)
(bad)
dec
xchg
xchg
dec
sbb
push
fldcw
into
jmp
sub
push
retf
outs
in
sub
es
sar
mov
(bad)
(bad)
stc
arpl
pop
inc
ss
test
lahf
retf
inc
or
xor
push
mov
pop
pusha
push
or
push
sub
ins
popf
fdiv
xor
jb
mov
(bad)
jle
lahf
push
clc
stos
leave
mov
xchg
mov
xchg
dec
adc
ins
fisub
jbe
cmps
inc
imul
jg
outs
loopne
cli
mov
aas
aad
aas
cwde
(bad)
lahf
js
adc
mov
jb
stos
pop
mov
sbb
outs
mov
inc
aaa
mov
add
dec
mov
xchg
add
mov
sub
fidivr
fist
xor
mov
cmp
jmp
mov
lods
cmp
imul
sub
jmp
push
and
jmp
scas
shl
call
sbb
retf
and
(bad)
add
xchg
cmp
stos
test
and
lds
cmps
push
dec
movs
std
jg
(bad)
in
retf
mov
jns
cmps
pop
xor
sub
idiv
pushf
fisttp
inc
mov
aad
cld
or
(bad)
jmp
jo
jecxz
(bad)
retf
test
retf
ins
test
(bad)
(bad)
(bad)
jmp
(bad)
iret
ror
fisttp
pop
je
jl
gs
enter
hlt
xchg
fbld
(bad)
(bad)
(bad)
jmp
xchg
mov
jb
or
sub
adc
adc
push
test
daa
adc
push
(bad)
(bad)
(bad)
push
xchg
ins
sbb
pop
call
push
and
jb
add
sbb
(bad)
(bad)
call
dec
adc
clc
js
retf
dec
mov
in
jmp
or
ins
inc
(bad)
push
sub
aaa
mov
shl
out
jg
fbstp
jp
xor
lods
movs
ds
ffreep
sub
xor
call
sar
call
cmp
popf
or
fsub
xchg
mov
mov
mov
in
mov
fst
popa
xor
fld
cmp
(bad)
stos
inc
test
call
cs
inc
push
(bad)
(bad)
mov
jp
dec
imul
add
fistp
(bad)
(bad)
dec
data16
pop
dec
loope
jmp
aas
xor
adc
cld
in
stos
dec
lds
addr16
aaa
or
jp
lahf
jg
ror
inc
jmp
mov
sbb
dec
test
dec
mov
pop
scas
add
xchg
pushf
stos
into
mov
mov
cld
mov
mov
jg
lods
inc
mov
and
(bad)
dec
xor
jg
adc
sbb
sub
iret
bound
cmp
mov
and
(bad)
dec
jle
cmp
xor
push
push
mov
adc
dec
dec
cmp
push
or
(bad)
(bad)
(bad)
call
cld
cmps
movs
mov
stos
jg
call
ins
and
shl
ror
sbb
push
pop
mov
push
mov
mov
shl
mov
adc
fs
in
(bad)
(bad)
(bad)
(bad)
aas
imul
stos
sbb
xchg
xor
ror
mov
lods
cmp
sbb
outs
xchg
mov
(bad)
into
xchg
xor
outs
xchg
or
bound
sub
mov
scas
mov
xchg
(bad)
(bad)
jg
les
pop
sbb
add
enter
mov
jp
fbstp
sbb
pushf
xchg
jp
adc
pop
ins
(bad)
call
sub
stos
icebp
int3
aas
out
rol
jp
(bad)
xchg
cld
(bad)
mov
ficomp
test
sbb
dec
iret
push
sbb
push
mov
mov
clc
mov
jle
cmp
(bad)
jmp
mov
test
sbb
sbb
jge
add
dec
push
mov
inc
fsubr
sbb
cli
jae
std
hlt
dec
dec
add
mov
jle
ror
dec
mov
or
mov
(bad)
(bad)
(bad)
mov
xchg
in
retf
xor
sbb
in
cmp
jnp
retf
dec
push
mov
(bad)
jmp
push
add
inc
dec
adc
call
adc
add
mov
cmp
dec
adc
aad
in
push
retf
call
dec
mov
mov
mov
(bad)
(bad)
(bad)
mov
adc
aad
fcmovbe
add
test
pop
stos
loop
outs
sbb
mov
ror
pop
mov
fwait
mov
test
rcl
fimul
sbb
out
int
dec
aas
sbb
add
mov
xchg
mov
mov
mov
adc
jg
sub
dec
sbb
push
jle
jg
imul
hlt
jmp
imul
loopne
sti
sar
dec
cmps
xchg
add
xchg
jmp
lock
mov
push
fs
(bad)
mov
mov
retf
mov
idiv
inc
loop
push
pop
call
mov
pushf
cs
mov
push
push
shr
push
retf
pusha
pop
sahf
inc
test
fwait
stos
or
(bad)
jmp
add
das
mov
out
rol
lods
pop
packssdw
add
aam
popa
(bad)
shl
das
sub
fs
fcmovbe
mov
pop
fiadd
cmps
xchg
popa
test
sub
outs
pop
mov
sbb
ja
inc
sbb
jg
outs
sbb
fs
in
(bad)
jecxz
fistp
les
fdivrp
(bad)
inc
aad
xor
es
sbb
into
mov
sub
cmp
xor
or
loopne
mov
inc
repnz
or
in
push
les
(bad)
(bad)
(bad)
jmp
jmp
add
ja
or
add
ss
xor
sbb
cli
fs
(bad)
jmp
mov
sahf
out
add
and
ds
(bad)
outs
sar
mov
in
imul
stc
and
and
test
dec
test
sub
(bad)
call
mov
xchg
jnp
(bad)
pop
sbb
enter
sub
and
mov
inc
xor
cmp
cmp
xchg
or
(bad)
(bad)
(bad)
(bad)
fisubr
pop
outs
icebp
mov
inc
call
dec
call
or
mov
in
in
add
ins
data16
adc
push
sub
scas
push
(bad)
(bad)
movs
pop
(bad)
int3
xor
mov
cmp
dec
push
mov
inc
fdivr
inc
mov
retf
dec
dec
or
jmp
enter
sub
(bad)
(bad)
jmp
scas
add
jns
xchg
mov
vmovntpd
jmp
or
fisttp
(bad)
(bad)
(bad)
fidivr
mov
mov
mov
xor
ret
adc
jmp
mov
xor
adc
addr16
pushf
shr
lock
jmp
jp
and
das
push
pop
rcl
cmp
xchg
call
push
(bad)
popf
fistp
inc
jmp
pop
inc
sbb
sub
adc
inc
adc
mov
dec
push
sub
and
mov
push
pop
das
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
xchg
jge
pop
add
xchg
mov
cmps
push
mov
(bad)
or
bound
add
push
add
jmp
outs
retf
clc
sbb
mov
mov
mov
push
mov
fsubrp
pop
cli
or
pop
sbb
xchg
cmp
(bad)
(bad)
(bad)
jmp
scas
(bad)
cdq
test
int
retf
or
(bad)
fld
imul
sub
retf
ss
imul
push
and
lea
dec
sbb
mov
outs
lods
das
and
enter
scas
sub
or
jnp
std
(bad)
and
push
xchg
fldl2t
sar
jmp
(bad)
call
mov
lods
lds
ret
clc
(bad)
(bad)
(bad)
cmp
bswap
lods
ret
aad
xor
xchg
or
sbb
and
push
(bad)
(bad)
jg
push
jmp
popf
out
test
jle
aas
xchg
jle
push
dec
sbb
cmps
fwait
test
add
fs
adc
out
jp
jnp
call
(bad)
jg
movs
xor
dec
pop
push
mov
adc
or
xchg
js
xor
rcr
inc
xchg
stos
loope
(bad)
mov
xor
pop
int3
xor
sahf
sahf
stos
inc
inc
imul
mov
call
inc
and
xchg
es
and
jp
inc
inc
cdq
or
or
pop
ja
inc
mov
popf
fdivrp
(bad)
(bad)
dec
cmp
mov
jge
jmp
inc
movs
call
mov
call
retf
cmc
enter
aas
repnz
ret
xor
sahf
bnd
push
sbb
jb
pop
lods
or
retf
adc
mov
sub
mov
dec
das
fist
add
(bad)
dec
nop
fsubrp
stos
jl
xchg
aas
loopne
fs
repnz
ret
call
dec
test
mov
mov
(bad)
jg
mov
mov
jge
xchg
jns
sar
mov
sub
cmp
ret
in
push
fbld
(bad)
push
sub
mov
or
cmp
out
gs
adc
retf
mov
dec
lds
retf
je
mov
mov
xor
retf
xor
div
pop
(bad)
(bad)
(bad)
out
mov
add
loope
or
jmp
pop
lods
icebp
sub
test
add
and
into
daa
fdivr
sub
div
out
cli
out
lahf
fucomip
(bad)
xor
jmp
lea
das
(bad)
call
adc
mov
and
or
mov
pusha
jmp
daa
scas
cmp
enter
xchg
std
jg
lea
movs
mov
ss
aas
fldcw
mov
retf
stos
dec
(bad)
cmp
mov
pop
pop
mov
jmp
aas
fwait
lock
imul
call
push
(bad)
imul
cmp
fisttp
pop
(bad)
mov
int3
sub
(bad)
push
sub
jae
push
ret
imul
lods
sub
add
mov
xchg
mov
bound
adc
inc
imul
adc
xor
(bad)
(bad)
out
push
test
in
jle
xchg
lods
imul
div
int
mov
inc
sbb
cmps
lods
xlat
push
push
jb
add
outs
les
(bad)
(bad)
(bad)
push
cwde
push
scas
lahf
lahf
int3
mov
loop
and
push
xor
enter
sbb
fisubr
jle
xchg
popf
and
jge
mov
jmp
cmp
icebp
jo
push
sbb
outs
lods
lods
cld
mov
iret
ficom
(bad)
(bad)
mov
hlt
mov
jmp
in
mov
dec
pop
xor
mov
icebp
(bad)
(bad)
(bad)
jmp
repnz
(bad)
sti
xchg
jno
(bad)
pop
shr
(bad)
retf
jp
jmp
push
cmc
(bad)
call
out
clc
add
adc
push
push
sub
jns
gs
(bad)
(bad)
out
jo
pop
rcr
mov
sub
ins
xchg
cmp
inc
(bad)
jbe
(bad)
push
fmul
fld
sub
lods
(bad)
(bad)
inc
mov
in
cmp
fcmovu
sbb
sbb
dec
and
jp
dec
add
jmp
sbb
(bad)
(bad)
(bad)
mov
dec
cli
jecxz
das
push
sub
(bad)
sbb
pusha
jp
inc
ret
ja
pushf
adc
and
sar
(bad)
(bad)
out
sub
jp
fld
cs
cmp
repz
std
sbb
add
xor
push
or
jae
and
mov
retf
cmp
sbb
mov
dec
sbb
cwde
push
imul
or
outs
clc
sbb
and
mov
(bad)
call
xor
xchg
sbb
cmp
sbb
outs
push
jp
ins
movs
jle
in
lock
push
les
inc
fcomp
dec
mov
cmp
add
push
enter
inc
push
scas
pop
mov
movs
xchg
jne
xor
dec
jmp
xchg
pop
fadd
icebp
mov
jb
psubusb
push
sbb
cs
jg
pop
jo
cs
fs
out
and
mov
pop
dec
loope
aaa
cmp
call
movs
arpl
(bad)
(bad)
call
iret
aaa
pop
stos
sub
jp
dec
movs
adc
xchg
loop
push
sbb
shr
in
iret
sbb
daa
sti
(bad)
(bad)
call
nop
and
xor
sbb
loop
cmp
mov
push
icebp
mov
xchg
(bad)
(bad)
jg
dec
sbb
xchg
mov
sbb
sbb
jmp
xchg
cmp
jb
cmp
rcr
stos
adc
(bad)
fbld
mov
std
ins
stos
mov
dec
sbb
cmp
mov
sbb
call
shl
adc
xor
shl
sub
(bad)
call
jb
les
push
and
outs
xor
adc
sbb
cmps
dec
fdiv
scas
mov
pop
add
push
pop
jmp
push
jp
lods
mov
pop
movs
xchg
fnstsw
stos
test
scas
push
dec
jecxz
(bad)
jmp
sub
or
sbb
mov
aad
xchg
or
(bad)
mov
aad
and
mov
xchg
pop
jmp
jecxz
or
and
test
pop
hlt
mov
arpl
es
call
xor
pop
mov
jg
lods
add
ss
in
xchg
and
cmps
xchg
(bad)
call
dec
fstp
stos
fs
(bad)
ficomp
iret
int
dec
and
stos
test
dec
pusha
xchg
mov
sbb
dec
daa
fwait
jb
loop
mov
std
dec
scas
xor
mov
and
mov
or
and
xor
jmp
inc
(bad)
nop
mov
adc
mov
jg
jne
cmp
cmp
(bad)
mov
clc
fcomp
lods
mov
call
cmps
movs
dec
clc
jns
jmp
xchg
movs
retf
cwde
test
sbb
sub
(bad)
(bad)
(bad)
jmp
lods
xchg
in
mov
mov
jg
aam
cmp
dec
(bad)
mov
aas
mov
add
ficomp
adc
jne
adc
mov
xor
mov
aad
scas
clc
(bad)
(bad)
dec
sub
xor
fsub
ret
sbb
dec
sub
sbb
add
aad
xchg
pop
stos
cmp
xchg
mov
inc
mov
ss
jmp
jne
rcl
push
lahf
jge
rcr
cwde
xchg
(bad)
call
das
sbb
retf
adc
sbb
test
sar
cld
push
cmps
mov
adc
sahf
call
jle
movs
and
imul
sar
mov
in
jg
cmp
stos
ds
(bad)
call
mov
(bad)
mov
mov
add
stos
sub
push
clc
mov
(bad)
push
fild
cmp
jg
call
cmp
pusha
sti
sub
xchg
mov
clc
aad
gs
(bad)
std
xor
or
add
dec
jmp
in
sub
xchg
xchg
sub
int3
add
ror
and
ins
lahf
mov
jg
xchg
sub
cmp
sub
cld
and
xchg
mov
test
mov
xchg
or
bnd
mov
cmp
mov
hlt
inc
in
or
and
popf
test
hlt
(bad)
(bad)
cmp
sub
out
stos
cs
inc
(bad)
jle
push
sub
(bad)
out
or
push
add
mov
sbb
pop
pop
jns
daa
dec
push
and
dec
mov
push
push
mov
hlt
out
sbb
pushf
or
mov
(bad)
(bad)
call
loopne
jmp
pusha
movs
sbb
or
add
(bad)
jg
call
mov
mov
retf
repnz
add
fcmove
cmp
fiadd
push
ret
push
popa
mul
hlt
lahf
or
xor
(bad)
(bad)
(bad)
jmp
mov
jg
mov
inc
xchg
bnd
jb
mov
ins
stos
in
mov
in
or
add
rcl
test
push
retf
lods
std
in
movs
call
cmp
jmp
(bad)
mov
inc
clc
daa
fist
shl
xchg
scas
xor
pusha
adc
(bad)
fwait
dec
and
cs
int3
sub
enter
push
sub
(bad)
dec
inc
lock
add
xor
test
xchg
pop
cmp
mov
adc
dec
lods
xchg
and
push
pop
push
leave
(bad)
(bad)
mov
daa
and
cmp
dec
mov
movs
cmp
movs
mov
dec
stos
(bad)
scas
push
jno
in
pop
call
std
call
cmp
mov
lahf
and
test
adc
call
sbb
(bad)
(bad)
(bad)
inc
fst
inc
(bad)
xchg
dec
popa
xor
sub
aas
scas
xor
iret
pop
cli
jg
adc
ja
int
jmp
cmp
aas
(bad)
outs
mov
mov
cwde
ins
sbb
dec
cwde
cli
jg
jns
cmps
mov
mov
in
aad
xchg
ret
and
and
ja
cs
(bad)
(bad)
jg
loopne
sbb
xchg
mov
mov
hlt
iret
fist
xchg
sti
(bad)
jle
(bad)
(bad)
dec
test
or
aas
adc
add
sub
push
mov
jo
outs
dec
push
and
loopne
add
hlt
sub
mov
mov
stc
jnp
(bad)
(bad)
call
mov
sbb
xor
cmp
sub
cmps
daa
add
jl
loop
call
jno
xor
pop
push
jl
test
jl
call
or
mov
outs
mov
jbe
adc
test
sbb
jbe
jbe
test
call
jmp
in
and
push
xchg
mov
out
cli
(bad)
(bad)
in
cdq
xchg
sub
fild
leave
adc
loope
xor
lock
mov
(bad)
jmp
stos
imul
jge
into
adc
gs
in
cmp
dec
add
jge
adc
mov
add
jmp
hlt
mov
dec
pushf
stos
ficom
in
cmp
(bad)
call
or
sub
lahf
cmp
mul
jmp
ret
dec
idiv
push
mov
repz
outs
ficomp
and
(bad)
(bad)
mov
dec
mov
call
mov
add
jmp
adc
les
stos
pop
cdq
clc
(bad)
(bad)
(bad)
mov
scas
mov
and
sbb
and
push
mov
scas
xor
cmp
jmp
inc
lods
popa
push
add
or
(bad)
(bad)
(bad)
mov
xchg
test
xor
pop
sub
ret
dec
test
ror
pop
lods
xchg
int3
jmp
(bad)
jmp
sbb
bnd
mov
pop
sbb
bound
cli
add
and
jmp
jbe
aas
icebp
jb
xchg
dec
sbb
adc
push
or
nop
stos
jp
hlt
(bad)
(bad)
jmp
clc
inc
cdq
loope
sub
arpl
mov
stos
imul
call
inc
stos
inc
scas
in
mov
(bad)
call
(bad)
ins
push
mov
pop
fs
pop
add
mov
pop
cmp
sub
mov
(bad)
(bad)
(bad)
dec
imul
sub
mov
movs
push
iret
outs
(bad)
addr16
test
cmps
mov
pop
les
jae
jmp
js
loopne
adc
mov
mov
(bad)
out
xor
fist
shr
outs
test
sub
mov
stos
mov
jg
(bad)
call
pop
jns
ret
inc
dec
adc
movs
jne
push
mov
mov
jmp
xchg
lahf
pop
gs
pop
sahf
or
dec
sti
push
cs
xor
sbb
(bad)
(bad)
(bad)
push
add
pop
pop
or
fwait
lods
mov
(bad)
movs
stos
inc
cmps
aas
jmp
call
inc
(bad)
call
(bad)
mov
out
inc
mov
out
rcl
dec
add
bnd
stos
clc
xchg
mov
cld
retf
loope
jmp
pop
dec
mov
and
scas
dec
mov
(bad)
aam
stos
mov
scas
mov
scas
fisub
push
pop
in
dec
mov
add
push
mov
mov
jg
inc
mov
jp
mov
mov
jg
test
xchg
outs
outs
lods
je
jmp
cmc
nop
jnp
jmp
cli
jmp
pop
mov
retf
das
adc
sub
xor
dec
lock
dec
nop
sub
pop
ins
das
mov
jns
fnstcw
test
inc
jns
jmp
fisttp
inc
add
cmp
retf
push
cmp
popa
xchg
(bad)
(bad)
(bad)
(bad)
dec
jb
adc
imul
or
fimul
mov
inc
dec
imul
pop
push
pop
std
cld
stos
push
sbb
and
push
ins
call
leave
(bad)
or
(bad)
(bad)
dec
and
icebp
imul
test
mov
mov
mov
out
xor
jmp
popa
sbb
test
pop
sti
adc
stos
movs
add
(bad)
(bad)
mov
fidiv
rol
imul
adc
stos
rcr
sbb
mov
cmps
cld
retf
(bad)
(bad)
fistp
mov
cmp
lock
sti
(bad)
loopne
push
mov
jb
(bad)
fbstp
mov
add
pusha
fsub
push
int3
mov
inc
sar
pop
lock
jae
cs
aad
add
ja
test
aas
pop
outs
jae
popa
or
call
scas
setp
adc
clc
test
and
mov
loope
ja
xchg
fld
scas
pushf
and
mov
cmp
push
call
push
(bad)
(bad)
(bad)
fistp
cmp
retf
int
jmp
pusha
and
out
out
test
lds
jmp
jmp
or
leave
jnp
pop
popf
jae
and
cmc
xchg
jg
shr
mov
(bad)
ror
xor
mov
(bad)
dec
cmps
sub
loopne
inc
dec
cmps
retf
and
clc
(bad)
(bad)
mov
add
jne
movs
sbb
out
mov
dec
mov
add
push
mov
mov
sub
(bad)
(bad)
(bad)
jg
jnp
mov
outs
ror
fsub
pusha
stos
inc
in
push
daa
add
add
inc
(bad)
std
call
int3
pop
cmps
push
jne
sub
(bad)
jmp
pop
jae
not
stos
(bad)
sbb
(bad)
pop
push
test
sbb
or
fisttp
sti
mov
and
(bad)
(bad)
(bad)
cmp
mov
jmp
inc
out
out
fidiv
daa
ret
or
(bad)
mov
sub
xchg
push
retf
xor
enter
fld
or
int
(bad)
(bad)
jg
jno
pop
add
icebp
and
std
mov
test
loope
cmp
fild
js
ret
sbb
rol
xchg
retf
rol
(bad)
(bad)
jmp
call
jb
sub
rol
xchg
loopne
fnstcw
call
inc
add
(bad)
dec
in
xchg
aas
test
push
or
(bad)
(bad)
(bad)
jmp
push
(bad)
push
fsubr
cmp
inc
iret
stos
jecxz
xor
xchg
mov
sbb
stos
jg
test
sub
repnz
retf
clc
xlat
bound
push
out
cli
daa
pop
jmp
lods
lods
dec
aad
sbb
and
add
test
pop
iret
sub
(bad)
jg
sub
test
ss
dec
mov
movs
pop
xor
(bad)
(bad)
call
pop
movs
cmps
outs
mov
les
pop
cmp
mov
push
adc
mov
inc
adc
mov
mov
add
das
mov
lahf
adc
stos
cmps
stos
fs
out
ds
or
jle
fbld
out
add
or
pop
std
adc
cmc
mov
daa
fist
es
mov
push
stc
mov
call
mov
sbb
into
push
cdq
(bad)
lods
pop
sub
sbb
std
xchg
in
mov
dec
mov
sbb
(bad)
(bad)
(bad)
jmp
jbe
out
cmc
jbe
pop
ja
or
leave
int3
push
or
add
aam
call
(bad)
out
mov
inc
ret
paddusb
imul
cwde
push
dec
push
xor
push
push
das
cli
(bad)
jmp
pusha
sbb
test
stos
cdq
pusha
mov
in
rcl
inc
cmp
iret
sbb
scas
clc
push
scas
test
mov
fist
in
iret
out
(bad)
jmp
fild
jmp
or
test
repnz
in
test
jmp
add
imul
ret
xchg
sub
jl
jno
mov
std
sub
retf
int3
popf
jns
sbb
adc
mov
sbb
jne
and
int3
hlt
(bad)
(bad)
mov
leave
dec
(bad)
aam
cmp
retf
inc
adc
xchg
cwde
retf
and
and
inc
adc
(bad)
stos
mov
push
sti
dec
jecxz
(bad)
(bad)
(bad)
dec
das
add
fdiv
add
jmp
push
pushf
lods
xlat
fs
addr16
(bad)
(bad)
call
xchg
jp
adc
aam
sbb
cmp
jecxz
mov
cmp
xchg
scas
push
inc
sub
mov
(bad)
(bad)
(bad)
cmp
and
adc
or
retf
xchg
(bad)
fild
lods
sub
cmps
fldenv
jnp
adc
cli
mov
or
or
inc
or
addr16
or
test
outs
mov
repz
push
(bad)
out
mov
fisttp
adc
int
std
(bad)
(bad)
jmp
test
mov
mov
add
ins
fisttp
push
lods
stos
cld
mov
inc
jg
sub
adc
or
cmps
fmul
mov
xor
sbb
add
mov
jmp
mov
aaa
mov
stos
movs
call
xor
ins
stos
lods
lea
retf
cmps
inc
shl
mov
jmp
sbb
data16
stos
(bad)
(bad)
(bad)
mov
aaa
ret
repz
(bad)
mov
mov
dec
mov
pop
pushf
sub
in
jg
test
pop
push
aad
xchg
jle
psrad
enter
cmps
add
mov
aas
xchg
das
adc
es
xchg
js
jns
scas
or
jg
jg
ins
mov
mov
test
or
pop
fbstp
inc
nop
es
fistp
leave
gs
pop
(bad)
(bad)
(bad)
call
adc
stos
inc
popf
sti
out
ins
xlat
jo
push
repnz
retf
(bad)
sbb
(bad)
(bad)
(bad)
dec
and
ret
iret
pop
pop
inc
fisttp
dec
mov
xor
imul
sbb
pop
sar
push
stos
or
add
mov
ror
outs
xchg
push
xchg
call
in
inc
inc
lea
leave
dec
mov
hlt
(bad)
inc
and
cs
sbb
inc
xor
mov
dec
pop
sub
stos
stos
push
jmp
sar
es
pop
loopne
pop
(bad)
inc
scas
add
pop
jmp
arpl
ret
mov
add
mov
stos
rcl
mov
cmp
push
ja
add
repnz
call
and
dec
sub
push
outs
pop
cmps
push
jmp
sub
(bad)
(bad)
jg
std
dec
or
and
mov
in
jnp
mov
add
mov
xor
sub
jmp
lds
mov
xor
cmps
mov
(bad)
(bad)
jmp
xor
ret
sbb
jmp
aam
mov
jecxz
dec
mov
add
jmp
cli
push
inc
(bad)
div
sbb
mov
cmp
js
or
outs
or
mov
imul
mov
aaa
daa
in
add
mov
pop
xchg
jbe
mov
jle
mov
scas
call
cmp
call
sub
imul
sub
lds
(bad)
call
nop
jmp
loop
stos
ret
int3
mov
ret
xlat
and
stc
pop
jecxz
imul
mov
or
or
inc
aaa
outs
test
call
test
mov
call
cmps
aas
push
mov
sbb
stos
jle
sahf
sub
out
adc
out
(bad)
fld
in
mov
(bad)
(bad)
inc
daa
(bad)
data16
xchg
cs
jmp
sub
test
push
std
or
(bad)
(bad)
(bad)
jmp
movs
dec
mov
cmps
arpl
fcmovnb
ja
and
adc
pop
add
repnz
push
mov
jb
and
call
loopne
jb
enter
inc
xchg
addr16
mov
xor
xor
jb
scas
nop
aas
mov
(bad)
(bad)
dec
out
cmps
(bad)
(bad)
mov
lea
adc
push
xlat
jge
in
cmp
out
in
(bad)
jmp
test
mov
leave
cld
cmp
push
icebp
push
mov
push
and
jecxz
mov
cs
cmp
and
push
pop
adc
xchg
xchg
(bad)
push
inc
into
pop
adc
scas
in
call
add
sub
call
or
mov
mov
mov
xor
cmps
inc
pop
sub
adc
and
call
js
in
mov
push
adc
loopne
sub
(bad)
jg
shr
and
xchg
cmp
mov
dec
pusha
add
jb
push
(bad)
call
sbb
dec
out
dec
lods
lods
sbb
ss
imul
mov
jmp
imul
xchg
arpl
and
(bad)
jmp
stos
stos
(bad)
call
mov
xor
push
mov
icebp
and
daa
xchg
or
push
cld
retf
mov
repnz
xor
add
(bad)
(bad)
call
mov
aas
sar
aas
inc
imul
cmps
mov
pop
loope
cdq
jbe
ror
imul
dec
cmp
pop
adc
mov
movs
call
loope
xchg
pop
pop
adc
(bad)
xchg
mov
mov
stos
dec
adc
not
jbe
mov
pop
cmp
faddp
and
(bad)
(bad)
(bad)
cld
or
div
(bad)
ror
sahf
adc
out
mov
into
cwde
(bad)
retf
adc
jg
or
test
add
(bad)
mov
sub
(bad)
jmp
out
scas
cli
std
jnp
lds
inc
mov
sbb
loop
std
(bad)
(bad)
jmp
dec
or
inc
(bad)
(bad)
out
das
sub
in
mov
in
mov
fadd
(bad)
(bad)
(bad)
jmp
sar
push
ins
sahf
retf
sbb
std
dec
or
mov
add
push
mov
xchg
movs
in
in
jecxz
stos
dec
test
sbb
push
xchg
xchg
gs
add
cmc
repz
(bad)
(bad)
mov
push
xchg
xor
or
stos
push
sub
push
sub
lock
push
jmp
cli
(bad)
adc
scas
add
loopne
dec
stc
rcr
push
ret
xor
add
xchg
sti
xor
(bad)
(bad)
jmp
add
dec
stos
mov
movs
and
dec
cmps
push
jle
inc
mov
(bad)
(bad)
repnz
outs
(bad)
jmp
push
loopne
imul
stos
mov
add
retf
inc
stos
jmp
std
mov
push
mov
ret
mov
cmps
scas
sbb
sub
into
fimul
mov
pop
xchg
dec
push
jbe
adc
pop
inc
jle
add
and
add
call
sub
das
fxch
or
(bad)
mov
lock
mov
or
call
dec
push
adc
xor
add
scas
xchg
push
jg
mov
mov
inc
add
clc
and
and
leave
pop
sbb
xchg
lock
push
test
or
mov
push
xchg
stos
add
aaa
pop
fst
inc
sar
jg
push
pop
retf
mov
xchg
retf
mov
in
aad
adc
pop
jle
mov
cwde
jle
add
adc
mul
(bad)
(bad)
(bad)
jmp
enter
jmp
cmp
and
test
inc
cli
sti
jns
xchg
in
shl
inc
retf
ret
or
xchg
push
mov
(bad)
(bad)
(bad)
out
dec
arpl
dec
xchg
stos
stos
dec
push
adc
or
jb
stos
and
sub
leave
ins
cmps
cwde
es
aad
(bad)
jmp
inc
jge
jge
sbb
push
mov
mov
and
pusha
test
repnz
mov
dec
fstp
seto
pusha
mov
mov
test
daa
jg
loop
stos
mov
fst
inc
retf
and
adc
mov
mov
push
inc
aam
int
add
mov
fld
in
pop
imul
(bad)
call
xor
mov
inc
xor
or
mov
push
or
outs
shr
jbe
ins
cmc
(bad)
xchg
rcl
xor
mov
xchg
cmp
(bad)
(bad)
jg
pop
add
clc
mov
test
cld
pusha
jmp
mov
jmp
(bad)
(bad)
dec
adc
clc
mov
dec
xchg
fs
adc
mov
pop
std
call
repz
repnz
movs
mov
cmp
out
das
fs
imul
mov
push
jbe
es
cmp
fiadd
sub
(bad)
call
(bad)
(bad)
(bad)
(bad)
mov
cld
pop
(bad)
inc
ins
aad
pop
sub
sub
fild
scas
loope
or
pop
cmp
or
js
(bad)
(bad)
(bad)
jle
pop
mov
rol
lock
loop
in
lock
ret
int
or
mov
inc
int
fwait
int3
cli
cmp
(bad)
(bad)
jg
(bad)
jnp
push
(bad)
dec
retf
enter
push
inc
jp
fistp
or
outs
mov
mov
xchg
clc
jg
inc
dec
in
(bad)
lahf
mov
sbb
inc
(bad)
jmp
int3
push
mov
add
idiv
mov
in
sbb
(bad)
(bad)
(bad)
call
mov
pop
cmp
push
test
out
mov
(bad)
or
stos
mov
ss
adc
push
lds
jecxz
popf
lahf
cmp
(bad)
sub
mov
xchg
dec
test
add
jmp
sti
std
shr
aas
xchg
xor
scas
imul
fidivr
hlt
(bad)
(bad)
(bad)
fidivr
mov
call
ins
dec
pop
xchg
dec
scas
mov
mov
(bad)
fbld
lods
in
fs
pop
es
adc
add
pop
add
repnz
push
adc
(bad)
dec
mov
test
sub
pop
test
out
or
mov
sub
inc
(bad)
(bad)
(bad)
dec
out
pop
cmp
sub
mov
xor
int
jo
movs
pop
push
das
adc
pop
(bad)
lods
jge
pusha
imul
push
push
jmp
push
sar
xchg
add
mov
cmp
test
mov
lods
jmp
daa
repnz
pop
cld
shl
loopne
aad
das
sar
jp
pop
and
dec
adc
adc
xchg
test
mov
or
mov
std
lods
out
or
inc
push
sub
fisubr
sbb
dec
jmp
mov
pop
dec
mov
push
adc
(bad)
mov
(bad)
jmp
xchg
cmp
fucomi
xchg
jecxz
(bad)
mov
xlat
shl
scas
or
bound
outs
clc
call
dec
and
and
fisubr
call
(bad)
loope
js
mov
out
in
inc
(bad)
(bad)
(bad)
jmp
fidiv
enter
inc
loop
or
shl
inc
fld
mov
cdq
push
repz
clc
or
out
xchg
mov
add
and
cli
inc
ficom
bound
and
lahf
adc
rcr
(bad)
(bad)
jmp
xor
adc
call
outs
add
adc
pop
cmp
leave
rcl
mov
and
std
mov
cld
push
outs
adc
(bad)
xchg
adc
pop
test
test
xor
lea
(bad)
jg
dec
or
push
pop
repz
stc
xchg
jl
movs
cmp
test
mov
dec
mov
outs
sub
push
test
dec
scas
inc
mov
xchg
(bad)
(bad)
mov
inc
(bad)
in
mov
xchg
movs
js
stos
sbb
or
(bad)
(bad)
(bad)
(bad)
clc
movs
test
jg
xor
lahf
push
in
rcl
jo
xor
in
ret
mov
aas
sti
lahf
xor
pop
sub
enter
daa
cmps
add
mov
call
(bad)
pushf
movd
adc
(bad)
cmp
adc
call
pop
cmp
jb
add
jg
imul
cld
test
aad
iret
shl
jg
inc
int
fiadd
push
cmp
inc
in
jo
adc
retf
mov
mov
mov
ja
or
adc
stos
pop
sub
lahf
and
or
fisub
mov
(bad)
inc
into
pushf
mov
movs
mov
sub
icebp
in
jno
cmp
cld
dec
push
add
mov
sti
adc
dec
cdq
ss
sub
(bad)
nop
cmps
lods
jmp
jmp
mov
ret
mov
imul
add
cmp
jle
loopne
push
push
(bad)
imul
mov
pop
icebp
(bad)
(bad)
mov
sbb
rcr
dec
in
data16
out
and
push
call
repnz
jns
add
mov
(bad)
(bad)
(bad)
call
xor
std
jle
scas
jne
imul
sti
xor
(bad)
mov
jo
mov
xchg
xchg
and
lea
les
adc
mov
adc
mov
clc
sbb
mov
xchg
cdq
pop
adc
inc
(bad)
call
fwait
sub
xchg
and
cmp
sbb
cmp
jge
popa
std
into
ins
mov
pop
cdq
sub
jmp
fcomip
aaa
push
sbb
inc
mov
loop
or
(bad)
jne
(bad)
mov
mov
sti
gs
std
mov
test
fsubr
cld
retf
xor
mov
cli
call
inc
pop
sub
sar
jns
push
jp
fs
xor
stos
push
and
pop
add
scas
movs
jmp
dec
div
adc
cdq
push
shl
fwait
daa
fwait
rcr
jmp
bound
sets
pop
out
aam
into
jmp
mov
xor
mov
(bad)
jmp
les
mov
sti
sbb
mov
ja
pop
shl
enter
cli
(bad)
push
xchg
(bad)
loopne
imul
loop
sub
cmp
loope
stos
adc
jmp
jg
jmp
adc
sbb
or
xchg
call
jmp
(bad)
pop
adc
push
adc
aam
stos
dec
pop
out
jae
mov
scas
cmp
shl
mov
adc
sbb
push
(bad)
(bad)
(bad)
jmp
bound
fidivr
xor
outs
fwait
pop
mov
sub
and
into
xchg
movs
(bad)
jmp
sub
cwde
fst
inc
cmps
xor
jg
(bad)
out
cmp
mov
fs
call
in
in
jo
cmp
(bad)
(bad)
dec
mov
aam
adc
out
fbld
dec
mov
stc
dec
scas
mov
xchg
cmp
(bad)
pop
hlt
jmp
ds
stos
jle
jmp
push
mov
sbb
(bad)
(bad)
cmp
add
(bad)
mov
mov
dec
xor
push
mov
jbe
scas
xchg
outs
test
movs
jb
ins
jae
iret
dec
repnz
sti
mov
aaa
test
or
pop
call
inc
or
js
int3
sar
test
or
mov
mov
push
sub
pop
cmp
pop
sub
dec
sub
daa
dec
psadbw
ss
mov
popa
and
call
mov
stc
test
jbe
shr
and
push
push
adc
adc
movs
stos
jo
push
(bad)
(bad)
jmp
scas
shl
mov
sahf
dec
cmp
fsubr
mov
mov
inc
enter
push
jbe
hlt
stos
fcmovnb
add
cmp
add
arpl
lods
outs
test
mov
fstp
push
jns
dec
mov
lods
cli
call
pop
sbb
repnz
jle
jno
mov
mov
cld
(bad)
(bad)
dec
ror
adc
ret
aad
mov
and
cmps
ds
mov
std
das
nop
test
push
fwait
(bad)
pop
dec
(bad)
adc
xchg
dec
jmp
cmps
pushf
inc
das
dec
add
pop
loope
xlat
xchg
fdivr
lods
(bad)
(bad)
(bad)
mov
jo
cld
dec
mov
leave
sub
cmps
(bad)
cmp
jmp
sahf
icebp
movs
cld
(bad)
call
ss
mov
mov
movs
popa
pop
(bad)
jo
mov
jmp
dec
adc
addr16
dec
std
(bad)
inc
and
xor
push
retf
gs
enter
mov
and
popf
fdivr
stos
dec
fs
and
cld
sbb
sbb
sbb
(bad)
(bad)
jmp
mov
cmps
jle
fisubr
cmp
mov
xchg
inc
sbb
inc
pusha
pop
mov
inc
pop
xchg
dec
out
dec
mov
add
mov
pop
adc
shr
dec
call
cmps
ja
mov
mov
jg
test
push
scas
pop
mov
ss
mov
call
stos
aas
rcl
inc
sub
jp
pop
and
fs
sbb
dec
jnp
sub
jmp
shr
cmp
push
adc
call
popa
xor
imul
ja
call
xchg
cwde
jge
scas
jmp
mov
sahf
push
in
clc
add
imul
sbb
cmp
push
sub
inc
mov
sub
ins
dec
dec
(bad)
(bad)
mov
repnz
jmp
pop
pop
sub
dec
push
shl
cmps
popa
repnz
mov
push
js
xchg
(bad)
(bad)
call
pop
rcr
inc
and
pop
les
sub
cmp
aam
jo
imul
sbb
jae
push
cmps
dec
or
push
push
add
fwait
(bad)
lods
std
push
(bad)
fwait
adc
scas
and
pop
test
sub
and
or
int
push
icebp
loope
jno
call
add
iret
repnz
push
hlt
cmps
cmps
stos
push
fadd
dec
pop
inc
lahf
movs
stc
sbb
fwait
scas
and
push
xchg
sti
clc
jmp
lods
mov
inc
mov
repz
jmp
or
es
out
push
fdiv
push
xchg
jg
(bad)
out
test
ss
movs
add
mov
inc
jg
jl
fwait
scas
repz
mov
enter
jmp
loopne
mov
pop
fnsave
pop
bound
enter
das
(bad)
add
adc
adc
mov
mov
test
(bad)
(bad)
jmp
aas
call
jecxz
shl
xchg
xchg
rol
or
popa
dec
jmp
dec
rcl
mov
cmps
sbb
movs
mov
inc
push
or
or
sub
inc
(bad)
outs
cs
sti
or
add
xor
mov
mov
add
push
mov
mov
add
pop
inc
retf
push
adc
push
push
shr
sub
sub
test
aad
mov
or
push
scas
cmps
jnp
xchg
(bad)
jmp
and
sub
jo
pop
ret
push
mov
sub
and
(bad)
jg
test
pop
add
out
ins
in
sub
ja
(bad)
jmp
cs
retf
sahf
cmp
pop
jle
icebp
sbb
push
test
imul
out
mov
fistp
dec
cld
(bad)
push
ins
mov
jp
arpl
pop
mov
(bad)
(bad)
jg
jmp
icebp
das
retf
shl
sbb
test
scas
cli
ss
repnz
xchg
aas
movs
push
nop
pop
ret
pop
icebp
xchg
pop
jne
jb
das
(bad)
(bad)
(bad)
call
cli
(bad)
mov
and
clc
jo
sbb
mov
retf
(bad)
xchg
inc
sbb
sub
push
into
push
mov
arpl
ret
adc
push
or
(bad)
(bad)
(bad)
jmp
in
fs
popa
push
mov
dec
sti
shl
aam
pushf
mov
dec
and
jno
stos
pop
xchg
cmc
(bad)
mov
stc
(bad)
mov
and
les
das
scas
pop
or
sub
leave
inc
pop
stos
aad
(bad)
into
mov
sub
and
inc
dec
jmp
adc
and
loop
pop
mov
mov
lods
je
sbb
mov
aam
push
inc
leave
repnz
in
test
(bad)
loopne
cmp
jmp
aaa
iret
adc
pop
es
fwait
add
cmp
lock
mov
sbb
xor
or
mov
jmp
bound
jmp
call
pop
adc
push
test
push
xor
sbb
sti
mov
mov
loop
add
shr
cli
pop
imul
mov
mov
(bad)
(bad)
push
inc
jmp
sub
jp
xchg
leave
mov
jne
jmp
pushf
sub
in
adc
fsub
or
pushf
sbb
(bad)
(bad)
jmp
jl
add
stos
jecxz
fmulp
sub
ins
(bad)
jg
mov
xchg
xchg
inc
(bad)
inc
(bad)
push
or
mov
dec
in
xor
std
cld
(bad)
(bad)
(bad)
call
jno
cmp
dec
retf
jnp
mov
imul
mov
dec
cwde
(bad)
jg
iret
lock
(bad)
inc
jmp
test
jns
cmp
mov
mov
mov
sar
jmp
pushf
add
stc
loop
pop
retf
and
bound
push
fadd
gs
sbb
das
ror
movs
ss
dec
out
jno
inc
stos
(bad)
(bad)
inc
mov
in
test
xchg
ins
fst
mov
movs
aas
xchg
(bad)
mov
and
sbb
xor
js
fadd
mov
mov
out
cmp
ins
and
sub
mov
loope
popf
popa
shl
movs
call
aad
sub
(bad)
jmp
cwde
cmp
lock
add
out
inc
lods
div
mul
and
push
jle
sub
movs
(bad)
(bad)
jmp
loop
push
jmp
loop
stos
jae
and
cmp
pop
je
cmp
push
xchg
sbb
(bad)
pop
fld
sbb
cli
mov
pop
sub
(bad)
push
jns
ja
cmp
mov
stos
jge
(bad)
(bad)
call
xchg
lock
dec
movs
pop
imul
(bad)
sbb
jb
xchg
xor
and
scas
clc
fisub
popf
xor
clc
lods
movs
sub
push
cmc
jb
(bad)
(bad)
(bad)
out
xchg
test
sub
test
and
xor
cli
push
adc
jb
xchg
sbb
into
call
hlt
mov
movs
sbb
inc
mov
inc
mov
(bad)
call
test
inc
pop
sub
dec
pusha
or
in
cmp
adc
mov
cmp
cmp
std
call
mov
inc
cmps
add
fidivr
aaa
sbb
mov
fs
cmp
or
(bad)
(bad)
js
sub
cmp
adc
test
mov
add
jle
inc
sbb
jae
sbb
shr
mov
jns
mov
aad
test
stos
fdivr
and
cli
or
add
cmp
pop
pop
(bad)
(bad)
(bad)
(bad)
cmp
push
fwait
jmp
retf
push
mov
int3
mov
(bad)
dec
xor
loopne
loopne
retf
sub
into
push
mov
sub
cmp
or
(bad)
mov
sub
jle
dec
sbb
push
ret
(bad)
mov
push
and
jle
mov
ins
(bad)
(bad)
call
bound
fwait
cmps
mov
dec
inc
fdivr
adc
xchg
(bad)
(bad)
call
(bad)
(bad)
rol
cmps
jmp
sub
imul
fwait
retf
out
movs
or
inc
xor
(bad)
(bad)
push
mov
mov
mov
call
xor
or
popa
sub
(bad)
(bad)
(bad)
fild
das
repnz
cmp
xchg
repz
inc
mov
(bad)
fs
es
push
out
jo
(bad)
(bad)
(bad)
cmp
adc
xchg
(bad)
xchg
daa
jg
and
enter
fnstcw
gs
pop
lods
ficom
jg
or
jmp
jmp
push
cld
outs
pop
jnp
retf
sub
jb
xor
outs
sub
addr16
dec
fstp
and
aas
sub
stc
scas
xor
sub
outs
xor
jg
movs
jge
(bad)
jmp
sub
cmc
sbb
(bad)
cmp
mov
mov
adc
int
cwde
loope
sub
and
cmp
sub
into
xor
in
push
xor
add
jmp
int
rol
test
ss
sub
outs
test
rol
pop
xchg
sub
mov
into
test
repz
mov
push
mul
call
ret
scas
leave
leave
call
jmp
mov
mov
push
adc
(bad)
mov
add
(bad)
(bad)
in
dec
cmp
std
mov
out
aad
mov
inc
int
call
and
sub
into
jl
or
jmp
ficom
mov
cmp
stos
mov
out
cdq
(bad)
jmp
add
pusha
sub
xor
xchg
mov
jae
or
out
xchg
cmp
cli
clc
ins
leave
sbb
mov
mov
gs
lods
inc
loope
or
rol
(bad)
mov
xor
cmp
stos
dec
inc
std
sbb
dec
sbb
cdq
imul
fadd
mov
or
scas
push
dec
(bad)
dec
ror
cmps
cmp
push
ror
inc
or
movs
mov
lock
jmp
push
loope
test
js
(bad)
jmp
ror
stc
sub
mov
or
std
or
scas
jg
dec
repnz
call
dec
inc
sub
das
ret
jmp
outs
cmp
and
repnz
push
movs
sar
inc
pop
sbb
jmp
ret
mov
data16
push
dec
cwde
inc
(bad)
(bad)
(bad)
jg
mov
ret
in
mov
ret
push
push
dec
stos
jmp
js
out
int
(bad)
ins
cmp
xor
add
or
clc
mov
or
iret
dec
test
xor
mov
cmp
loope
loopne
je
push
sub
xchg
enter
(bad)
add
jle
xchg
(bad)
(bad)
mov
leave
iret
mov
jp
in
out
mov
movs
repz
scas
mov
xlat
lock
(bad)
jmp
pop
in
xchg
mov
mov
inc
cmp
pop
jo
jmp
jge
xchg
sbb
cs
out
jmp
and
cmp
sbb
movs
call
jecxz
jmp
outs
nop
sub
(bad)
out
movs
out
movs
scas
scas
and
js
in
jle
adc
ins
sub
call
xchg
and
loope
mov
and
std
jmp
rcr
cmp
and
(bad)
(bad)
call
jmp
sub
inc
mov
jnp
and
jmp
push
test
dec
mul
mov
test
loopne
and
mov
mov
out
xchg
(bad)
(bad)
(bad)
call
inc
jae
dec
mov
push
retf
dec
mov
lea
push
mov
jmp
pushf
scas
scas
iret
cmp
fiadd
mov
jmp
cmp
jne
cld
add
call
cdq
jo
pop
pop
xchg
loopne
aas
cmp
fucomp
mov
std
(bad)
jmp
inc
lods
rol
mov
loop
sub
jl
jmp
mov
adc
mov
fcmovnb
cmc
pop
popa
inc
dec
mov
fst
fdivr
fild
push
jns
fmul
jmp
sub
jmp
les
leave
push
sub
(bad)
(bad)
(bad)
fild
enter
and
outs
call
out
jmp
sub
sub
push
movs
(bad)
and
sbb
icebp
or
mov
push
push
cwde
(bad)
(bad)
(bad)
call
cmps
mov
push
imul
mov
mov
pop
mov
(bad)
(bad)
mov
gs
pusha
es
push
jle
cli
jg
stos
imul
dec
cmp
shl
test
loope
in
cmp
pop
stos
inc
mov
mov
jmp
mov
or
fild
inc
mov
dec
hlt
call
push
(bad)
mov
push
xchg
call
push
jmp
shl
(bad)
call
inc
aad
cdq
lods
scas
into
aam
cmps
push
lods
push
clc
pop
cwde
xchg
sbb
mov
(bad)
mov
jb
fs
adc
jns
and
xchg
aad
sbb
call
pop
sub
push
or
lahf
jb
outs
mov
test
lods
push
add
out
sub
pop
cli
je
pusha
lea
push
push
repz
into
movs
(bad)
jmp
lea
or
cmp
fcom
mov
jmp
mov
cmp
xor
(bad)
push
shl
jg
not
mov
mov
in
int
mov
(bad)
call
test
(bad)
lea
sub
adc
(bad)
mov
(bad)
fldpi
mov
sub
sbb
mov
mov
xchg
fmul
call
enter
jno
clc
imul
dec
mov
outs
clc
sbb
cs
movs
sbb
nop
out
xchg
pop
dec
add
and
mov
sub
lods
sbb
sbb
mov
mov
jle
imul
call
cmp
sbb
(bad)
call
repnz
popf
add
push
int
sbb
out
out
mov
mov
mov
or
(bad)
call
cmps
mov
cwde
pop
repnz
outs
and
dec
adc
jl
pop
arpl
gs
js
jmp
(bad)
(bad)
(bad)
jmp
sub
mov
sub
and
push
das
and
cmps
and
stos
rcl
cdq
(bad)
jg
(bad)
cmp
cmps
jge
jbe
or
cld
in
pop
sub
in
bswap
std
mov
das
nop
hlt
jmp
leave
xor
inc
in
imul
jmp
pop
lea
mov
dec
mov
lock
mov
(bad)
in
mov
imul
lds
pusha
sub
jmp
add
xor
and
mov
(bad)
dec
mov
aas
movs
jmp
cwde
pop
je
lahf
js
mov
ja
(bad)
(bad)
(bad)
dec
movs
ja
mov
daa
and
(bad)
and
std
movs
addr16
jl
jg
aaa
or
sar
pop
cmp
out
int
test
mov
add
cmps
mov
cmp
mov
and
mov
jmp
pop
push
imul
jge
mov
in
mov
cmps
(bad)
(bad)
inc
sub
es
cmp
dec
pop
jl
pop
stos
adc
xor
jmp
mov
std
aad
push
rol
repnz
ds
in
add
(bad)
(bad)
ficomp
imul
repnz
cmps
and
push
mov
(bad)
mov
out
and
sahf
ja
push
fild
repnz
out
(bad)
repnz
jno
dec
jmp
push
test
jmp
retf
scas
mov
jp
cwde
cli
test
(bad)
call
pop
shl
or
push
gs
scas
test
out
test
(bad)
(bad)
(bad)
inc
call
inc
jb
jns
sub
push
mov
mov
mov
ds
popf
and
jbe
and
retf
(bad)
cli
jecxz
(bad)
dec
adc
sub
cmp
and
jg
add
retf
mov
(bad)
inc
iret
adc
movs
std
shl
push
mov
fist
push
(bad)
adc
repz
dec
jns
pop
icebp
(bad)
mov
pop
adc
(bad)
dec
mov
pop
lock
cmp
dec
test
push
sub
repnz
movs
mov
add
lea
lods
cmp
loopne
and
(bad)
(bad)
js
aaa
fisubr
loop
ins
(bad)
(bad)
pop
add
lea
dec
outs
xchg
cli
or
dec
retf
into
sbb
pushf
leave
std
ss
xor
addr16
enter
(bad)
scas
and
loop
fs
mov
fs
fnstcw
inc
jmp
call
pop
ins
jmp
mov
cmps
movs
pop
lahf
ror
mov
lahf
cmp
cmp
aam
leave
jp
cli
sti
jle
jg
dec
mov
(bad)
(bad)
imul
cmp
adc
mov
xor
push
inc
dec
call
cmps
mov
inc
mov
out
aas
mov
mov
mov
or
xor
(bad)
and
sub
cmc
mov
or
(bad)
(bad)
jmp
movs
(bad)
aam
inc
jne
cmc
leave
dec
jl
retf
xor
jnp
or
xchg
push
in
adc
jmp
pop
xchg
(bad)
lods
cdq
nop
fbstp
ds
jmp
xor
xchg
cmps
popf
loope
ret
out
xor
mov
push
sbb
scas
mov
mov
jmp
ret
mov
and
bound
sbb
xchg
or
adc
mul
adc
xchg
lods
stos
pop
dec
out
cmp
mov
sub
sub
sbb
mov
add
jmp
inc
loopne
cdq
(bad)
out
and
jge
jmp
cmc
(bad)
jmp
in
jmp
imul
test
push
(bad)
jb
inc
add
hlt
(bad)
jg
push
xlat
jo
mov
or
add
jmp
mov
je
jo
dec
jmp
inc
mov
mov
adc
xor
mov
cwde
or
test
sub
pop
mov
fwait
lahf
sbb
(bad)
call
mov
imul
pop
xchg
mov
xor
lock
or
ja
xor
mov
jb
inc
ja
or
(bad)
mov
and
adc
dec
sub
loopne
and
cwde
stos
lahf
bound
xor
xchg
jo
std
je
std
addr16
cmc
(bad)
call
sub
ficomp
mov
data16
push
mov
(bad)
(bad)
(bad)
push
inc
mov
or
mov
jmp
out
sub
push
mov
pop
lods
sub
jmp
clc
cli
jge
outs
dec
(bad)
push
and
adc
cdq
es
outs
sub
and
mov
into
add
xor
mov
outs
jl
dec
xchg
fld
(bad)
(bad)
jmp
movs
les
(bad)
xchg
mov
lods
fadd
adc
mov
fdivp
adc
mov
adc
stos
jg
or
cmp
outs
ret
inc
dec
mov
or
fwait
jle
jne
adc
cmps
test
sub
add
inc
xchg
mov
pop
call
stos
movs
scas
es
test
ins
psadbw
jmp
cmp
repnz
sbb
in
scas
loope
fadd
or
inc
(bad)
fistp
loop
or
int3
in
js
shr
test
mov
(bad)
inc
pop
test
cmps
mov
inc
out
fimul
call
xor
retf
and
inc
jp
inc
inc
fiadd
cld
test
(bad)
inc
dec
mov
and
mov
jmp
pop
ret
mov
clc
inc
mov
stos
mov
(bad)
lods
std
inc
and
(bad)
jmp
stc
hlt
stos
push
movs
aas
stos
inc
shl
call
nop
and
cwde
dec
mov
into
ja
sbb
xchg
sbb
dec
sbb
ficom
mov
lock
jle
(bad)
(bad)
jg
(bad)
lock
sub
cli
out
lods
out
aad
movs
cs
fldcw
(bad)
enter
call
lods
mov
push
jge
aas
sbb
dec
inc
push
push
mov
xor
aas
int
dec
xchg
(bad)
jg
sub
faddp
movs
xchg
retf
mov
mov
pop
mov
mov
mov
iret
dec
pushf
pop
sbb
mov
lods
or
mov
push
out
(bad)
(bad)
call
sub
scas
in
mov
fld
mov
pop
and
pop
or
inc
xchg
out
sbb
cmp
mov
xor
mov
cmc
mov
(bad)
(bad)
jmp
sub
fdiv
mov
cmps
and
lods
adc
jmp
push
mov
mov
xchg
scas
cmc
stos
xchg
jp
mov
cmp
push
adc
into
add
lds
xor
mov
push
mov
push
popf
(bad)
repnz
mov
outs
in
sub
loopne
jmp
jle
pop
nop
popf
and
adc
xchg
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
push
pop
sub
call
pop
mov
mov
imul
cmps
enter
out
je
mov
mov
mov
mov
ret
iret
movs
into
sub
(bad)
(bad)
dec
pop
test
adc
pop
ret
mov
(bad)
or
mov
cli
inc
or
inc
bound
mov
cmp
or
aas
(bad)
(bad)
call
fldenv
dec
jp
mov
adc
xor
mov
lea
lea
xchg
sub
push
outs
jns
mov
fmul
xor
hlt
mov
xor
stos
add
(bad)
jmp
push
xchg
mov
cmp
cwde
fist
push
add
or
and
(bad)
push
and
(bad)
(bad)
(bad)
sub
ins
jl
jge
pushf
repnz
fist
idiv
(bad)
(bad)
dec
idiv
fdivr
adc
outs
fwait
cmp
idiv
lods
repz
jns
call
rcr
adc
dec
inc
mov
mov
xchg
(bad)
out
mov
cmp
dec
inc
out
data16
fstp
frstor
nop
data16
aas
jg
fsub
sbb
cli
mov
or
adc
fwait
loop
(bad)
fcomip
jmp
movs
sub
push
fnstsw
repnz
fsub
mov
jbe
(bad)
(bad)
dec
jge
and
mov
xor
xchg
pop
icebp
pop
loope
or
popa
aaa
fwait
stc
sbb
(bad)
(bad)
(bad)
jmp
or
into
dec
gs
jmp
test
es
jmp
push
or
pop
addr16
mov
sub
dec
xchg
aaa
retf
arpl
(bad)
adc
push
xchg
(bad)
(bad)
call
and
inc
or
push
ret
ins
dec
ret
call
(bad)
(bad)
fdiv
(bad)
sub
in
mov
mov
stos
push
cwde
call
cdq
pop
cmps
sub
xrelease
call
fs
enter
or
mov
lods
xor
sub
mov
cmp
lea
mov
jp
mov
push
or
add
sbb
mov
(bad)
dec
retf
jl
out
dec
pop
loop
jle
mov
xchg
out
fcmovnu
scas
lea
(bad)
(bad)
(bad)
push
cli
mov
and
je
add
loope
imul
enter
sbb
jg
mov
push
cmp
sub
(bad)
and
push
xchg
and
sbb
fmul
fmul
xchg
(bad)
and
dec
cld
sbb
mov
retf
mov
mov
add
ret
adc
not
cmc
(bad)
in
adc
xlat
push
xchg
ds
add
cmps
xor
jle
fwait
push
mov
cmp
inc
jmp
ins
or
or
in
jb
(bad)
(bad)
mov
fmul
std
(bad)
mov
jb
cmp
sub
lods
inc
pop
jmp
loopne
add
scas
(bad)
inc
cmp
mov
and
push
sub
loop
fcmovbe
push
pop
add
(bad)
repnz
sub
jg
scas
mov
icebp
aad
mov
jp
cmps
in
test
or
cmc
or
cmps
rcr
call
add
pop
fcmovb
lock
mov
cmps
imul
sub
(bad)
std
(bad)
push
and
stos
es
test
ins
push
cld
das
outs
sbb
push
add
call
hlt
inc
mov
sbb
gs
adc
sub
push
cmp
(bad)
mov
(bad)
repnz
mov
movs
jl
cmps
xor
jmp
(bad)
jmp
push
adc
push
or
lods
sub
jg
into
or
mov
inc
fwait
data16
dec
(bad)
call
pushf
popa
mov
xor
mov
push
pop
aam
lock
push
sub
out
cdq
shl
xor
dec
sbb
in
in
fucomip
sub
cmp
fwait
add
dec
data16
and
push
adc
pop
aad
push
adc
xchg
sbb
jp
push
(bad)
pusha
xchg
sar
(bad)
dec
rcr
jo
fisttp
or
jb
jno
std
(bad)
inc
lahf
loop
cmp
xor
cmp
lods
popa
gs
adc
xchg
xor
mov
push
mov
psrad
aaa
push
movs
idiv
sub
ss
imul
cdq
cmp
sub
outs
pop
into
adc
call
sahf
mov
sar
scas
fadd
mov
sbb
lea
shl
call
sbb
and
sbb
mov
js
repnz
ins
shl
(bad)
test
(bad)
sti
(bad)
pop
leave
(bad)
cli
into
mov
pop
(bad)
jg
scas
fcom
in
jns
dec
mov
cli
fwait
dec
(bad)
mov
ret
jmp
push
call
or
into
(bad)
(bad)
jg
stc
and
repz
jno
js
call
iret
mov
lds
fwait
inc
stc
sub
and
stos
js
adc
cmp
(bad)
jb
push
sub
xchg
jno
mov
jno
lods
xchg
sub
push
mov
in
sbb
sbb
int3
add
test
xchg
mov
call
dec
add
fild
mov
jb
out
icebp
call
xchg
jae
nop
call
cmp
mov
mov
(bad)
std
add
rcl
iret
movs
aad
icebp
mov
mov
add
aas
out
test
lea
inc
mov
jp
call
jmp
mov
xor
mov
addr16
dec
xchg
jbe
cmp
fdiv
call
cmc
into
aad
push
adc
js
xor
push
mov
stc
sbb
hlt
mov
pop
adc
jl
fwait
jmp
outs
cli
out
sbb
dec
xor
lar
jp
xchg
and
(bad)
(bad)
inc
and
(bad)
fcmovu
test
mov
mov
daa
cmps
sub
lahf
xor
add
mov
cmp
mov
(bad)
scas
pop
mov
sbb
mov
cmp
clc
inc
cld
inc
mov
sbb
sbb
adc
aad
sbb
push
sub
lods
repz
mov
mov
std
fwait
jmp
(bad)
(bad)
call
and
test
mov
sbb
mov
cdq
xchg
xchg
in
or
mov
test
jg
pop
cmp
(bad)
(bad)
jg
repnz
sbb
call
cmp
test
jl
push
mov
test
scas
mov
mov
fbstp
imul
inc
in
dec
dec
icebp
(bad)
(bad)
(bad)
call
dec
cmp
jl
dec
test
sub
fwait
rol
repnz
loop
cli
cs
fidivr
sbb
cdq
jp
adc
inc
push
movs
repnz
ins
push
xchg
neg
imul
fisub
inc
scas
sbb
loop
adc
stos
jb
or
add
inc
call
jg
cmp
repz
or
call
sahf
jle
call
dec
retf
inc
mov
aaa
adc
or
int
xchg
mov
add
fisttp
mov
mov
adc
adc
xchg
mov
call
jb
cli
or
mov
mov
cmp
mov
sub
jmp
fsubrp
repz
and
sub
cld
mov
sar
and
cmp
mov
movs
and
pusha
mov
pop
or
and
jmp
and
xor
(bad)
bound
add
cmp
(bad)
(bad)
in
inc
das
into
and
pop
(bad)
push
or
out
lods
add
aad
jno
pusha
cmp
(bad)
(bad)
(bad)
jns
jg
jecxz
nop
xchg
or
mov
mov
(bad)
mov
mov
inc
ret
icebp
aam
xor
les
cmp
(bad)
(bad)
dec
sbb
push
jno
push
xchg
dec
mov
ds
cmp
or
out
xchg
stc
cmp
sub
jg
lods
add
jp
sub
sub
xor
add
mov
(bad)
jmp
sbb
in
cld
mov
cmp
adc
test
push
inc
aaa
jns
std
mov
pop
jb
stos
mov
or
imul
loopne
add
adc
pop
cmp
scas
clc
repnz
fwait
fwait
push
jns
adc
inc
movs
adc
sub
(bad)
jmp
cmc
xchg
mov
cs
add
test
push
(bad)
(bad)
(bad)
dec
xor
pop
rol
pop
pop
xor
pop
mov
stc
div
jns
push
cs
(bad)
out
add
imul
ret
or
jg
jb
ret
xor
jnp
retf
push
xor
pop
push
mov
pop
jg
and
sbb
gs
mov
mov
and
sbb
nop
mov
adc
push
(bad)
pop
mov
mov
adc
fdivr
jb
sbb
jb
fwait
ins
sub
(bad)
call
aad
fmulp
jnp
sub
sub
adc
sub
dec
dec
inc
retf
or
movs
stos
dec
mov
call
sbb
lods
adc
int3
nop
xchg
jl
inc
xor
sti
(bad)
mov
lods
imul
add
cmps
push
(bad)
mov
scas
jmp
cli
push
mov
push
xor
ins
ja
xchg
jne
mov
sahf
add
or
fidiv
cmp
push
mov
mov
inc
dec
bound
imul
(bad)
call
jmp
add
sub
adc
iret
lahf
adc
iret
xchg
neg
jno
jnp
xchg
test
icebp
iret
and
fwait
aam
or
cmp
fbld
fsub
xchg
jmp
mov
(bad)
jmp
pop
cmp
out
cwde
mov
push
shr
sbb
add
inc
jb
les
aaa
das
push
cmp
sbb
push
jbe
sub
jg
inc
or
add
das
push
and
add
dec
pushf
retf
call
pusha
call
arpl
sub
xacquire
adc
sbb
retf
lods
pop
ret
mov
(bad)
mov
ret
add
jecxz
in
rol
push
ret
xchg
sub
and
mov
xor
cmp
shl
add
leave
std
and
push
(bad)
(bad)
jg
fstp
sub
sbb
mov
xchg
sub
add
jmp
jle
ss
mov
retf
sub
ds
dec
retf
cmp
and
mov
sbb
sahf
fs
cmp
stos
movs
sti
repnz
mov
mov
mov
pop
std
xchg
lods
jmp
stos
push
push
xchg
aas
(bad)
(bad)
out
nop
mov
sbb
add
cmp
inc
push
dec
stos
cmp
cli
mov
jecxz
(bad)
pop
test
and
push
or
pop
xchg
lods
cmc
shl
inc
add
mov
movs
xor
(bad)
(bad)
(bad)
jmp
pop
mov
out
sub
and
shr
xchg
sahf
adc
fbld
stos
call
shr
xchg
and
fcomp
loop
js
add
pop
movs
out
push
mov
(bad)
push
sbb
aas
or
aad
ins
addr16
pop
xchg
lock
pusha
ss
dec
scas
(bad)
pop
les
loop
and
pop
add
mov
push
mov
push
lods
jge
out
sub
mov
jmp
mov
sub
lock
push
mov
mov
data16
inc
loope
ins
daa
add
dec
std
push
push
jp
xor
(bad)
cmps
or
inc
mov
nop
or
add
mov
mov
or
scas
fimul
jmp
or
sub
xchg
fidivr
(bad)
push
pop
add
inc
out
mov
mov
inc
ins
mov
sub
loopne
cld
dec
test
icebp
jo
sbb
in
imul
(bad)
cld
and
movs
loope
lds
mov
leave
dec
(bad)
(bad)
(bad)
(bad)
call
xchg
mov
lahf
mov
lods
dec
or
or
and
out
pusha
adc
mov
jns
outs
int3
bound
or
ins
push
cs
out
clc
mov
js
or
jg
or
or
jo
adc
out
mov
push
adc
popa
gs
jge
aaa
and
mov
in
mov
fcomip
and
fcom
cwde
repnz
sub
sti
ins
addr16
cmp
(bad)
(bad)
jmp
test
mov
sub
fsub
xchg
cwde
xchg
jns
stos
call
cwde
cmp
jmp
call
push
mov
cmp
inc
push
xor
xor
cmp
(bad)
(bad)
(bad)
jmp
mov
dec
lahf
xchg
xor
in
mov
test
fwait
xchg
in
jecxz
aaa
add
sub
cli
jns
scas
retf
hlt
mov
(bad)
dec
test
jmp
mov
rcr
jmp
dec
cwde
mov
cmp
int3
movs
frstor
sub
push
ret
inc
and
es
pushf
sbb
arpl
(bad)
(bad)
(bad)
jmp
test
stos
in
cmps
dec
iret
jg
jmp
add
fwait
sbb
jb
stos
iret
stos
pop
icebp
dec
or
add
push
or
sar
inc
stos
retf
imul
(bad)
dec
sub
stos
mov
adc
adc
mov
pushf
jae
loope
(bad)
data16
cmp
sbb
cmps
loop
cmc
data16
(bad)
call
sub
sub
stos
jecxz
(bad)
das
inc
mov
inc
sub
cmps
movs
arpl
fild
pop
sbb
adc
stos
mul
adc
fisttp
jg
mov
cwde
mov
loopne
lods
call
mov
(bad)
inc
out
mov
(bad)
retf
and
ins
jae
mov
hlt
jg
add
push
push
dec
mov
mov
jne
cmc
scas
cmps
fdivr
in
jl
aam
mov
(bad)
(bad)
inc
leave
fwait
std
movs
fsub
mov
mov
and
repnz
mov
std
inc
pop
loopne
lahf
outs
sbb
(bad)
in
xchg
out
inc
(bad)
mov
(bad)
cmp
jmp
scas
xchg
xchg
mov
mov
mov
mov
retf
ins
int3
adc
mov
xchg
test
(bad)
shr
pop
push
leave
jmp
pop
loope
dec
sahf
inc
movs
mov
add
fldl2t
shl
push
mov
jl
add
pushf
fcom
loope
(bad)
retf
(bad)
(bad)
(bad)
mov
call
mov
bound
or
jle
mov
mov
cmp
inc
inc
mov
fisubr
rol
and
(bad)
(bad)
call
pop
jmp
xchg
and
out
mov
loope
xchg
adc
pop
and
jb
aas
jmp
and
int
jo
sbb
sbb
shl
mov
loop
daa
mov
xor
(bad)
push
and
outs
xchg
xchg
ins
and
cli
or
cmp
outs
inc
adc
mov
mov
stc
nop
stos
lahf
add
mov
(bad)
jmp
sub
xchg
mov
call
adc
pop
cli
jp
inc
sbb
push
das
mov
jge
ret
jl
sahf
cmp
call
out
js
shr
hlt
mov
cmp
call
pop
movs
jmp
sub
retf
mov
sti
pop
jno
(bad)
jmp
xchg
push
imul
adc
aam
loop
data16
adc
and
repz
je
repnz
mov
(bad)
fist
cmp
mov
fisttp
pop
xchg
fisttp
adc
add
movs
aas
fucompp
pop
jmp
je
movs
mov
test
mov
lahf
cmps
xor
stos
adc
bound
adc
(bad)
call
fistp
mov
push
mov
mov
mov
ins
loopne
pop
(bad)
sub
stc
add
and
xchg
clc
call
iret
xchg
pop
pop
fidiv
mov
call
jb
(bad)
jmp
cmps
in
xor
adc
imul
push
push
mov
jle
aad
add
mov
stos
pop
cs
jle
(bad)
push
push
or
sub
inc
cli
ss
ds
and
fwait
mov
sar
cmp
out
test
and
daa
mov
sbb
arpl
pop
inc
add
sub
outs
test
push
pop
(bad)
sub
(bad)
(bad)
ficomp
fisttp
movs
adc
inc
cmps
and
or
dec
pop
cmp
mov
int3
(bad)
fld
xchg
jp
mov
dec
dec
dec
and
sbb
sbb
in
int3
and
lea
es
adc
adc
retf
mov
mov
sbb
mov
and
and
xchg
fidivr
cmp
(bad)
(bad)
(bad)
inc
pop
iret
mov
(bad)
aas
gs
mov
hlt
jle
xchg
pop
repnz
cmps
out
fwait
cmp
push
sub
(bad)
loop
mov
sub
retf
xchg
adc
mov
dec
es
xor
add
cmp
mov
and
inc
dec
jecxz
movs
inc
cmp
jmp
xor
and
fcmovu
add
or
sar
mov
repz
loopne
mov
dec
(bad)
(bad)
jmp
sahf
in
fisubr
cdq
cs
push
mov
stos
sub
sub
xchg
mov
mov
pop
rcl
add
mov
stc
call
in
jne
push
jmp
push
cmp
das
sub
or
(bad)
(bad)
dec
or
and
arpl
push
sub
shr
fisub
mov
cli
(bad)
(bad)
(bad)
inc
sub
adc
outs
clc
dec
fsubr
enter
call
(bad)
out
cli
adc
aad
leave
ds
sbb
sar
stos
cli
push
xor
mov
jnp
(bad)
retf
(bad)
call
adc
pushf
mov
cs
push
scas
sub
in
(bad)
mov
enter
push
mov
sar
cwde
test
jnp
call
adc
iret
imul
adc
push
out
xchg
add
pop
pusha
mov
adc
inc
sbb
stos
xchg
or
xor
sbb
mov
push
push
(bad)
(bad)
(bad)
inc
mov
lahf
push
dec
lods
inc
jmp
sahf
push
jb
sub
mov
(bad)
call
mov
mov
xor
out
dec
movs
(bad)
(bad)
(bad)
out
mov
imul
bound
gs
xchg
ins
test
call
or
jmp
fs
adc
jns
pop
mov
jns
(bad)
call
(bad)
loop
jns
repnz
outs
cmp
dec
jns
or
ret
repz
sbb
int
(bad)
(bad)
jmp
in
jmp
xchg
movs
and
les
bound
lods
stos
imul
sbb
(bad)
(bad)
(bad)
cmp
dec
dec
or
in
rcr
jnp
jnp
or
outs
outs
mov
(bad)
(bad)
(bad)
dec
and
cmp
xor
pop
push
popa
pusha
push
pop
test
jns
adc
and
mov
movs
(bad)
(bad)
(bad)
dec
pop
scas
cmps
jg
btr
clc
js
mov
sub
pop
ja
out
cmp
push
ja
dec
ja
sub
stc
arpl
inc
cli
mov
loopne
mov
cli
xchg
mov
push
sbb
inc
adc
lock
(bad)
(bad)
(bad)
(bad)
inc
addr16
dec
out
sub
outs
gs
sar
leave
adc
sahf
sbb
xor
call
jl
cmp
fwait
jl
call
jp
mov
(bad)
(bad)
call
jmp
xor
scas
into
rcr
test
jmp
call
rcr
(bad)
mov
cmp
jl
mov
gs
xchg
jp
cmp
in
mov
(bad)
retf
or
mov
cs
xchg
test
mov
(bad)
call
or
(bad)
push
dec
push
pop
int3
std
in
outs
(bad)
(bad)
(bad)
dec
xchg
add
pop
sbb
or
loope
sub
mov
add
(bad)
call
mov
cmp
rol
push
(bad)
(bad)
(bad)
jmp
arpl
xchg
retf
mov
call
cmps
loop
add
xor
jp
(bad)
dec
dec
push
bound
and
movups
in
sbb
mov
jmp
mov
fwait
add
push
dec
sbb
pop
jp
jmp
mov
and
cmp
inc
adc
(bad)
xchg
in
movs
adc
(bad)
(bad)
(bad)
(bad)
std
mov
jb
movs
pop
loope
(bad)
push
pop
stc
pop
dec
adc
dec
fld
(bad)
(bad)
(bad)
dec
gs
dec
aas
les
ds
push
inc
mov
test
mov
xchg
inc
push
or
dec
es
pop
sbb
and
inc
cmp
push
lods
mov
clc
mov
movs
movs
addr16
jo
and
cmp
dec
push
(bad)
jmp
cmp
adc
ds
pusha
xchg
pop
push
(bad)
push
(bad)
dec
add
loop
(bad)
(bad)
call
add
mov
ins
movs
push
into
xchg
adc
sbb
popa
jo
into
nop
pop
adc
lods
push
or
into
fild
adc
lahf
stos
scas
cli
(bad)
call
sar
scas
sub
xor
xchg
cmp
dec
lds
sti
call
mov
pop
pop
and
push
stos
inc
movs
cld
lahf
or
loope
or
(bad)
xchg
xchg
stos
push
jbe
jb
(bad)
call
adc
push
loop
test
mov
jmp
pop
call
ins
jo
dec
sub
(bad)
inc
jmp
mov
jg
popa
sub
jle
jnp
cmp
(bad)
jg
popa
sbb
ds
cs
fwait
xor
ins
scas
sbb
scas
push
icebp
(bad)
ds
mov
(bad)
mov
pop
adc
or
in
jg
add
push
sub
cli
icebp
(bad)
(bad)
(bad)
call
jmp
dec
fwait
adc
(bad)
cmc
mov
jbe
jmp
dec
adc
sbb
js
(bad)
sub
xchg
dec
loopne
in
or
cmps
sahf
shl
loop
scas
aaa
pop
(bad)
jmp
push
lea
xor
test
push
add
call
sub
lods
ss
pop
add
sbb
inc
repz
stos
lods
call
jle
sub
(bad)
fstp
push
mov
xchg
call
ins
std
and
pop
stos
(bad)
gs
stos
dec
push
test
(bad)
(bad)
jmp
movs
imul
pop
arpl
push
ds
call
cmps
ss
sbb
jb
fcmovb
or
imul
stos
adc
popaw
inc
pop
cmp
(bad)
(bad)
jg
add
movs
loop
push
jae
fucomi
and
addr16
mov
call
data16
cli
add
adc
test
xlat
sbb
cmp
sbb
add
call
pop
or
sub
and
dec
jmp
mov
outs
mov
fild
sbb
xchg
push
retf
data16
sbb
push
add
pop
out
pop
sahf
test
jae
jmp
add
mov
enter
movs
cmp
aad
or
mov
sub
retf
pop
mov
or
(bad)
call
mov
call
gs
or
pop
and
call
clc
jmp
int3
push
dec
pop
pop
stos
or
add
sar
(bad)
push
sbb
aas
aas
(bad)
push
xchg
jmp
imul
sub
xchg
sbb
cli
(bad)
dec
cmp
stos
mov
push
test
fmul
(bad)
cmp
mov
test
mov
sub
sbb
pop
inc
ret
cmp
stos
add
mov
ins
outs
cdq
gs
mov
jmp
mov
shr
sbb
(bad)
(bad)
mov
mov
mov
mov
daa
imul
sub
(bad)
mov
retf
or
hlt
jg
xchg
push
fnsave
frstor
imul
lds
inc
mov
dec
jb
mov
cmp
and
sbb
and
retf
pop
or
inc
push
push
xchg
dec
std
call
mov
inc
enter
ret
cmp
sbb
(bad)
(bad)
jg
cld
mov
mov
daa
ins
call
call
add
clc
(bad)
mov
movs
scas
pushf
retf
jge
push
leave
and
(bad)
(bad)
call
int
xchg
retf
movs
pushf
cli
jmp
push
dec
movs
or
enter
push
aaa
jae
mov
sbb
(bad)
(bad)
dec
sub
test
inc
sbb
inc
xchg
jmp
call
stos
mov
and
std
pop
pop
dec
and
loope
(bad)
jg
aaa
aaa
std
pop
adc
leave
and
popf
movs
arpl
mov
int3
addr16
jmp
daa
mov
loope
lahf
out
(bad)
(bad)
fild
lahf
pop
mov
push
push
adc
in
adc
es
push
cmps
ins
mov
adc
cmp
(bad)
(bad)
(bad)
(bad)
std
cmp
mov
pop
cmp
jno
mov
pop
je
int
xchg
dec
jecxz
jmp
es
inc
std
mov
and
pop
dec
ss
(bad)
jmp
dec
out
je
out
arpl
or
inc
mov
mov
dec
cwde
shl
(bad)
jmp
push
outs
xchg
xor
ret
sbb
push
scas
sub
out
ins
fild
jmp
les
outs
and
xor
mov
es
movs
mov
hlt
push
fwait
int3
shr
jle
clc
pop
(bad)
adc
cs
sbb
out
ja
sbb
and
(bad)
jmp
xchg
push
or
sti
cdq
scas
xor
or
pop
dec
cdq
sbb
test
mov
shr
xchg
add
add
cmp
and
call
jp
cmp
(bad)
sbb
in
popa
and
or
inc
mov
fld
and
imul
mov
(bad)
mov
jb
or
cwde
fwait
scas
dec
and
test
(bad)
pop
xlat
mov
std
inc
xor
xchg
clc
add
lock
ss
dec
jmp
arpl
pop
(bad)
jg
or
call
dec
stos
pushf
cmp
sub
(bad)
dec
test
adc
fcmove
pop
call
pop
int3
xchg
scas
int
loop
(bad)
lods
dec
mov
enter
movs
add
lods
jb
mov
dec
fisubr
pop
(bad)
mov
adc
test
cs
dec
pop
fwait
jno
call
(bad)
fild
mov
cmp
(bad)
call
jp
and
cmp
adc
adc
lods
ins
xchg
nop
dec
pop
out
into
(bad)
inc
dec
sbb
inc
mov
pop
cmp
lods
or
sbb
cld
(bad)
(bad)
fld
call
mov
aaa
movs
and
int3
scas
xchg
loopne
(bad)
(bad)
jmp
or
out
stc
scas
mov
jecxz
aam
lods
xchg
fwait
in
sub
push
cmp
jmp
out
sbb
inc
in
xchg
aam
or
and
test
call
test
test
sub
(bad)
push
jg
cwde
ss
mov
test
jp
xor
mov
(bad)
(bad)
(bad)
jmp
into
inc
out
mov
test
and
pop
and
xor
pop
in
pop
mov
sahf
(bad)
(bad)
(bad)
(bad)
inc
sbb
aam
sub
xchg
call
cmp
aad
dec
(bad)
ds
and
push
cli
test
(bad)
fisttp
ror
out
outs
sbb
inc
mov
mov
xchg
cmp
shl
jmp
(bad)
dec
fisubr
retf
add
movs
jl
sbb
sub
in
sbb
(bad)
mov
stc
mov
cmc
(bad)
(bad)
(bad)
(bad)
jmp
jne
dec
sub
mov
test
sub
mov
retf
in
out
push
jg
imul
in
sub
mov
sar
mov
das
sbb
or
retf
pop
jbe
xchg
pop
and
jg
cmp
ins
stos
dec
bound
lods
shr
ror
push
add
sub
mov
(bad)
jmp
cmps
cmp
leave
in
mov
jo
cmps
(bad)
(bad)
int3
cmp
dec
aad
adc
push
dec
imul
call
(bad)
xor
sub
mov
mov
pop
call
mov
or
movs
push
test
jmp
add
int3
pop
in
pop
outs
cmp
std
or
and
pop
adc
xchg
lods
push
xlat
pop
lods
stos
lea
(bad)
xor
(bad)
jg
scas
jmp
sti
xchg
repz
dec
xor
add
cwde
shl
(bad)
(bad)
(bad)
inc
and
xor
out
bnd
mov
iret
or
test
scas
or
lds
or
pop
cmp
js
sub
fdivr
shl
ret
and
ja
in
sub
xor
(bad)
sti
mov
add
mov
in
jb
sub
int
std
sub
pop
std
mov
fcmove
cli
retf
loopne
jge
fcmove
mov
cmp
jmp
dec
imul
les
cwde
add
pop
xor
movs
push
fucomp
jg
dec
adc
inc
ret
jg
and
xor
mov
push
jo
sub
movs
lods
icebp
cmp
pop
fldenv
(bad)
(bad)
adc
cmps
or
test
xor
adc
jmp
jb
ins
ficomp
mov
int3
ret
stos
(bad)
(bad)
(bad)
mov
mov
shr
loop
sub
cmp
ins
mov
pop
inc
or
into
test
mov
loope
enter
sar
movs
sbb
and
cmp
jl
mov
loop
sub
mov
arpl
xor
mov
or
mov
sub
dec
xor
(bad)
inc
aas
xor
sub
jnp
scas
mov
ret
mov
das
lock
xchg
inc
ficom
mov
dec
ins
cwde
cmp
or
jmp
leave
jle
mov
ss
(bad)
(bad)
jg
jmp
mov
dec
pop
loop
loop
jmp
push
stos
xchg
sbb
add
or
into
test
frstor
popf
je
or
rol
shl
(bad)
(bad)
call
mov
cli
mov
cmp
sbb
cmp
push
pop
ins
inc
mov
and
jg
and
mov
lar
jno
test
jmp
sbb
fcomp
(bad)
xchg
pop
sub
or
pop
retf
and
(bad)
(bad)
inc
push
dec
push
sub
jnp
pop
or
pop
aaa
push
scas
int3
fild
cdq
int3
scas
(bad)
lahf
(bad)
jmp
xchg
mov
mov
add
call
leave
(bad)
adc
mov
retf
(bad)
in
mov
jg
mov
loop
jmp
pop
inc
inc
ror
dec
xor
jmp
mov
adc
xchg
add
retf
inc
jmp
add
jge
push
or
das
adc
test
(bad)
push
adc
xor
lahf
out
or
popa
sbb
(bad)
fcomp
jo
imul
(bad)
mov
sbb
inc
sub
je
retf
enter
jg
pop
push
rol
sbb
retf
or
jbe
aaa
jmp
mov
pop
test
sub
jmp
jge
(bad)
mov
or
shr
js
dec
sbb
leave
std
jp
pop
cld
(bad)
dec
loope
jae
dec
add
(bad)
retf
test
movs
jmp
test
out
clc
lds
inc
retf
call
push
jmp
ret
mov
shl
imul
pop
sub
xor
loopne
shl
(bad)
cmp
push
push
push
push
test
mov
test
sub
jmp
retf
and
fimul
adc
mov
aad
or
test
imul
mov
(bad)
mov
jb
mov
stos
daa
push
pop
shl
mov
mov
jbe
or
rcl
cld
push
fstp
sub
pop
mov
cmp
jmp
lahf
addr16
push
push
and
es
aaa
or
rol
std
out
clc
pop
shl
push
jmp
push
dec
adc
mov
pop
mov
jl
sub
fs
into
dec
push
add
(bad)
(bad)
(bad)
in
mov
lahf
pusha
xchg
cs
xchg
or
mov
xchg
out
shr
xchg
hlt
(bad)
pop
ins
xchg
push
dec
ss
fldenv
jno
call
cld
jg
sub
nop
fisubr
lock
inc
add
call
stos
pusha
xor
jmp
mov
jmp
push
ret
stos
cmps
test
push
sar
(bad)
(bad)
jmp
sub
shl
xchg
add
dec
imul
mov
retf
out
pop
sub
or
call
cli
push
jmp
mov
push
lahf
inc
sbb
int3
std
dec
push
sub
call
movs
pop
push
and
test
enter
hlt
mov
jg
pop
xchg
jecxz
cwde
inc
(bad)
mov
push
aam
or
pop
or
(bad)
mov
outs
(bad)
enter
jmp
cmp
ds
lods
push
adc
dec
or
push
dec
ss
(bad)
cdq
mov
ret
fisttp
test
imul
(bad)
(bad)
(bad)
out
and
(bad)
(bad)
lods
outs
sbb
and
push
fsubr
mov
gs
(bad)
fild
pusha
lea
jp
cmps
jns
adc
loop
(bad)
call
daa
call
outs
jecxz
push
rcr
cwde
mov
mov
movs
es
mov
ins
loopne
(bad)
mov
call
push
push
fwait
mov
pop
ja
xchg
pusha
int3
mov
cmovle
(bad)
dec
push
ins
sbb
jge
adc
push
ds
and
aam
mov
jb
fnstsw
sub
pop
mov
dec
call
aam
pushf
and
and
xchg
(bad)
aaa
inc
clc
loope
lahf
or
mov
call
adc
adc
stos
or
mov
mov
out
or
jmp
push
mov
sbb
test
retf
sub
xor
mov
mov
stos
sbb
or
mov
jne
sbb
movs
icebp
(bad)
dec
ds
movs
sbb
sti
mov
sub
pop
and
test
rcl
fstp
data16
scas
and
iret
mov
sub
enter
rcl
dec
mov
and
fist
jmp
jmp
inc
add
pop
dec
sub
leave
mov
and
jl
call
cmc
mul
(bad)
jmp
in
xor
xor
lods
push
outs
sub
loop
outs
pop
jne
enter
push
clc
sub
and
dec
(bad)
(bad)
mov
sub
mov
sbb
jmp
pop
popa
call
push
out
jmp
and
or
jmp
add
push
lock
ret
pop
mov
mov
sub
loop
or
cli
push
mov
or
lea
movs
pop
mov
fwait
nop
mov
inc
or
jmp
scas
adc
movs
mov
jmp
(bad)
cli
mov
pop
inc
mov
inc
(bad)
push
test
call
or
or
call
(bad)
ss
mov
mov
mov
popf
pop
ins
(bad)
(bad)
fistp
scas
ins
into
retf
ja
ins
shl
and
adc
(bad)
(bad)
(bad)
(bad)
mov
(bad)
mov
mov
jmp
jo
call
pop
pop
push
inc
(bad)
(bad)
(bad)
jmp
movs
out
cmp
arpl
iret
(bad)
stc
cmp
or
mov
lods
mov
mov
push
popw
mov
iret
push
xor
push
fidivr
xchg
mov
jno
mov
(bad)
(bad)
(bad)
(bad)
in
and
(bad)
scas
(bad)
int3
push
xchg
int3
lea
loop
(bad)
cli
lock
stos
add
dec
mov
push
stos
dec
scas
mov
mov
or
stos
add
dec
cli
xchg
(bad)
scas
fiadd
mov
push
(bad)
push
xchg
iret
lods
dec
outs
clc
sub
test
or
(bad)
(bad)
(bad)
dec
repnz
and
pop
jge
and
call
clc
and
pop
scas
add
cdq
xchg
jb
sbb
sub
fwait
sbb
addr16
pop
jle
add
sbb
into
dec
rcl
cmp
xor
dec
dec
std
daa
xchg
sti
stos
dec
imul
test
push
imul
mov
pop
sub
pop
xor
mov
imul
or
dec
mov
clc
stos
mov
jo
sub
mov
fnstsw
mov
push
daa
pop
push
(bad)
(bad)
(bad)
mov
cld
cmp
out
dec
mov
popa
int3
sbb
(bad)
push
and
cld
(bad)
(bad)
jp
mov
mov
mov
mov
mov
sar
sbb
add
shr
loop
pop
cli
int
xchg
(bad)
clc
clc
(bad)
(bad)
(bad)
dec
push
fidivr
mov
mov
das
push
lock
mov
mov
icebp
(bad)
jmp
out
mov
test
pop
pop
stos
mov
dec
push
inc
jno
out
(bad)
(bad)
inc
adc
or
sub
push
push
pop
mov
retf
xchg
fldenv
ins
data16
push
cwde
(bad)
jg
les
scas
cs
mov
cmps
cmps
in
mov
jg
jmp
movs
mov
lahf
cmp
cmp
jecxz
test
add
push
mov
mov
adc
fs
jecxz
mov
in
std
lock
jg
pop
dec
fild
adc
fisttp
iret
mov
jb
dec
fidivr
mov
loop
(bad)
(bad)
sub
ins
cld
mov
sub
(bad)
mov
add
mov
add
jmp
jmp
xchg
stos
add
mov
test
jl
(bad)
(bad)
inc
das
clc
xchg
jmp
clc
test
sub
pusha
retf
jp
(bad)
(bad)
(bad)
jmp
push
out
stc
mov
fbld
jb
rcr
in
add
or
push
mov
fwait
adc
jg
lea
out
sub
cld
and
sar
retf
mov
bound
cs
(bad)
jg
and
pop
mov
push
jne
mov
fimul
sbb
jb
cwde
jb
lds
mov
and
and
les
pop
js
in
pop
pop
mov
mov
bnd
imul
(bad)
xor
mov
dec
inc
jmp
push
call
clc
gs
jb
pop
and
inc
cmp
scas
clc
stos
ins
adc
iret
lods
out
sub
dec
jl
in
popa
ins
iret
cs
sub
mov
xchg
arpl
push
idiv
pop
repnz
mov
push
cmp
cmp
pop
xchg
(bad)
(bad)
(bad)
push
movs
push
adc
mov
push
into
fnstenv
mov
gs
ins
pop
(bad)
jmp
xchg
mov
stos
out
in
(bad)
(bad)
call
in
(bad)
mov
jno
out
rol
pop
and
into
cmp
outs
in
in
imul
push
in
mov
fsubr
mov
jbe
(bad)
(bad)
inc
or
(bad)
scas
repz
sub
(bad)
jnp
ins
or
add
cld
in
pop
sub
lahf
add
pop
js
ficom
jmp
lods
pop
loope
ins
adc
aas
movs
mov
call
sbb
sbb
push
dec
imul
xor
mov
jmp
(bad)
(bad)
(bad)
(bad)
fidivr
fsub
arpl
test
xchg
dec
xor
ja
iret
push
pop
add
fs
(bad)
jmp
(bad)
cmp
in
push
repnz
pop
(bad)
fisttp
adc
stos
repz
dec
movs
neg
call
pop
fs
aas
jg
das
jo
jecxz
fsubr
iret
mov
xchg
(bad)
(bad)
(bad)
jmp
xor
mov
call
ret
(bad)
cli
clc
loop
add
push
adc
(bad)
(bad)
jmp
pop
into
adc
jg
not
or
and
mov
cmp
mov
call
in
cmps
cld
(bad)
(bad)
(bad)
jmp
dec
jns
push
popf
(bad)
mov
gs
data16
retf
mov
movs
mov
icebp
(bad)
call
mov
imul
adc
bound
test
cmps
dec
(bad)
(bad)
(bad)
call
cmovae
jle
xchg
sub
mov
push
fwait
retf
cmps
sar
or
jmp
jo
scas
cmc
add
int
jmp
push
mov
rcr
rcr
nop
repz
(bad)
inc
cmp
outs
mov
dec
cmp
mov
xchg
pop
xchg
ds
(bad)
(bad)
jmp
push
out
mov
(bad)
in
cdq
jns
es
xchg
sub
xchg
xchg
(bad)
cmp
(bad)
jg
sbb
loope
or
(bad)
(bad)
(bad)
(bad)
dec
adc
jmp
mov
add
call
push
mov
lods
sub
(bad)
mov
add
mov
out
sbb
dec
or
pop
dec
and
xchg
push
out
push
push
mov
sub
js
fsubr
mov
jmp
stos
shr
inc
jl
sub
cmp
push
lods
outs
cmps
in
rcl
(bad)
(bad)
(bad)
dec
and
sbb
out
mov
jmp
mov
and
or
inc
push
sbb
(bad)
push
cdq
mov
imul
dec
into
into
int3
call
dec
or
(bad)
in
sbb
mov
loop
and
aas
xlat
rcl
dec
add
cmp
jns
jg
(bad)
mov
scas
pop
inc
cmps
or
test
shl
xchg
jmp
adc
or
mov
shr
jbe
(bad)
(bad)
push
sub
shr
jp
sti
test
cmp
sub
(bad)
(bad)
dec
lds
pop
out
sub
mov
inc
movs
mov
mov
icebp
jbe
mov
fisubr
sub
pop
sub
add
dec
and
(bad)
xchg
xchg
sahf
sbb
adc
sub
xchg
mov
cmp
dec
sahf
loop
cmp
mov
in
mov
push
mov
stc
mov
daa
aas
call
test
xor
pop
sub
xchg
imul
das
je
cmp
das
(bad)
jmp
inc
pop
call
jmp
std
dec
push
mov
adc
xchg
dec
(bad)
inc
inc
stos
out
clc
imul
inc
jne
dec
adc
mov
mov
pop
sub
int
sbb
xor
jmp
mov
es
push
sub
or
mov
imul
(bad)
call
and
sub
arpl
sub
pop
sbb
jp
sub
dec
lock
pop
scas
inc
sti
mov
(bad)
jmp
mov
jmp
popa
push
cmp
int
sbb
or
jno
(bad)
(bad)
(bad)
mov
loope
adc
jmp
or
pop
sbb
loop
jb
cmps
dec
aas
mov
(bad)
(bad)
mov
cs
out
cmp
inc
push
and
fld
pop
outs
nop
dec
pushf
(bad)
jo
mov
sbb
popa
std
inc
xchg
sbb
xor
jmp
scas
rol
(bad)
(bad)
mov
loop
xchg
and
cmps
and
cli
push
scas
movs
fcmovbe
cmps
pop
(bad)
out
movs
lock
jp
sbb
sbb
and
jmp
out
loop
inc
ror
fstp
loopne
mov
xchg
sub
(bad)
mov
jecxz
push
scas
outs
inc
add
cmp
(bad)
(bad)
jg
inc
test
imul
adc
inc
jmp
mov
(bad)
sbb
cmp
hlt
adc
add
push
sub
mov
cs
popf
stos
(bad)
das
mov
fwait
imul
pop
sub
mov
push
out
mov
loop
jge
(bad)
xchg
jb
cs
jo
cwde
bound
enter
adc
fild
dec
hlt
fwait
jb
adc
enter
fisttp
adc
xor
enter
(bad)
(bad)
(bad)
inc
lods
xchg
mov
cmps
(bad)
into
xor
pop
xor
sub
clc
daa
mov
mov
scas
fs
aad
in
test
and
stc
cs
mov
adc
(bad)
call
je
pop
xor
push
ins
daa
dec
lods
xchg
sbb
movs
mov
push
aaa
dec
sbb
push
lahf
clc
and
test
mov
mov
(bad)
out
mov
lea
jp
mov
lahf
dec
dec
out
xor
call
pop
xor
adc
cmp
mov
ins
cmc
xor
(bad)
ds
daa
sbb
cmc
mov
test
sub
jmp
call
je
out
or
rol
cs
(bad)
mov
test
xchg
dec
cmp
in
add
sbb
cmps
shl
cmps
pop
and
(bad)
jmp
call
cdq
loop
push
mov
outs
inc
nop
test
sub
push
scas
cli
mov
test
rol
dec
cmp
repnz
mul
pop
(bad)
mov
fiadd
pop
push
lds
repnz
or
lods
nop
pop
sbb
inc
sti
daa
icebp
(bad)
(bad)
jg
mov
sbb
push
fstp
mov
adc
xor
(bad)
(bad)
(bad)
mov
jno
push
clc
mov
aad
clc
repnz
sub
enter
shl
cli
jmp
ins
mov
fs
add
outs
mov
xor
xor
clc
call
shl
mov
mov
stos
call
in
inc
add
mov
retf
add
push
jnp
mov
add
dec
imul
shl
cmps
mov
cld
(bad)
jmp
add
add
mov
gs
xchg
shl
jp
inc
cmp
cmp
or
js
call
cmp
(bad)
(bad)
(bad)
dec
cli
xlat
pop
add
mov
adc
(bad)
xchg
push
fdivrp
out
mov
sbb
fst
mov
pop
dec
clc
sub
xor
cmp
in
mov
mov
jle
or
or
loopne
and
inc
mov
lea
aas
jns
jmp
push
mov
cwde
push
or
jecxz
and
retf
fiadd
sub
dec
cld
sub
mov
mov
cwde
out
mov
dec
or
retf
(bad)
adc
sbb
imul
es
hlt
cmps
out
cli
mov
dec
jmp
adc
mov
jp
leave
sbb
fst
xchg
sbb
(bad)
(bad)
call
stos
mov
dec
lds
sub
cli
mov
push
(bad)
dec
sbb
mov
mov
push
mov
jb
(bad)
mov
pop
mov
daa
xchg
mov
add
pusha
pop
inc
mov
xor
adc
sub
inc
sahf
mov
jno
psllw
jno
(bad)
(bad)
push
pop
xchg
inc
add
and
and
xchg
stc
clc
aaa
pop
mov
mov
push
and
xor
jmp
(bad)
(bad)
push
stos
inc
add
dec
ficomp
std
sub
mov
dec
cs
mov
mov
mov
mov
outs
or
dec
pop
mov
(bad)
(bad)
(bad)
(bad)
jle
inc
cmp
pop
xor
adc
mov
or
and
push
das
(bad)
cmps
push
and
sub
test
pop
adc
mov
and
sub
mov
xchg
fisub
inc
mov
jmp
mov
xor
sti
cdq
or
lock
mov
and
cld
(bad)
call
ds
mov
sar
sbb
mov
(bad)
jmp
xlat
mov
pusha
and
ins
mov
popw
cmp
mov
pop
add
adc
call
aam
jp
test
add
pop
(bad)
push
and
inc
sahf
or
cdq
xchg
and
mov
fwait
cwde
movs
sbb
mov
pop
(bad)
(bad)
(bad)
mov
sub
cmp
shl
dec
jg
int
in
mov
and
(bad)
(bad)
(bad)
push
in
mov
xlat
fcomp
pop
movs
lods
js
mov
fimul
stos
(bad)
ja
xchg
pop
aad
stos
adc
in
cmp
loopne
adc
stos
rcr
jle
push
rol
mov
test
lea
(bad)
jge
cmp
push
movs
push
mov
(bad)
jg
jmp
add
retf
loope
iret
adc
xchg
jb
popa
imul
rcr
inc
mov
adc
mov
movs
sub
jno
das
push
aas
int
data16
test
or
cmp
sub
into
xchg
and
sub
fs
xor
cmp
in
xchg
mov
xor
fcmovbe
add
shl
and
lock
loopne
adc
imul
test
(bad)
lds
dec
jns
cld
call
xchg
mov
ja
ficomp
imul
or
cmp
loope
int3
jecxz
into
sub
adc
jg
add
sub
jmp
fimul
into
test
(bad)
(bad)
(bad)
jmp
mov
test
or
cld
cmps
mov
ins
inc
xchg
scas
dec
ret
movs
mov
fmul
call
mov
sub
cli
mov
icebp
mov
(bad)
mov
call
je
jmp
or
or
or
movs
aaa
popa
dec
jmp
sub
vmwrite
(bad)
jmp
scas
jns
arpl
mov
sbb
pop
(bad)
jmp
enter
mov
fs
loop
jmp
jnp
jmp
mov
out
in
and
hlt
out
jns
sub
lahf
sub
call
mov
std
add
jmp
mov
sbb
loope
add
xchg
into
mov
(bad)
dec
mov
cld
arpl
dec
inc
jg
retf
push
cwde
dec
xchg
adc
push
push
mov
sti
cmp
pop
(bad)
(bad)
jmp
sub
call
ror
out
sahf
in
mov
sub
gs
dec
iret
inc
pop
pusha
loopne
xor
mov
mov
jmp
(bad)
(bad)
jmp
fwait
ret
daa
mov
and
gs
mov
imul
xchg
cld
sub
xchg
jbe
lea
stos
pop
aam
(bad)
inc
dec
mov
and
mov
mov
ret
jmp
sub
sbb
mov
std
xor
inc
loope
or
mov
movs
(bad)
dec
sbb
sub
jl
adc
xchg
mov
cmps
push
shl
iret
mov
clc
push
into
mov
pop
enter
xchg
push
jbe
call
fcmovb
jge
mov
jmp
movs
bound
push
ins
loop
ret
pop
push
add
ds
icebp
outs
nop
mov
in
jmp
jmp
shl
inc
(bad)
jns
das
cwde
clc
sub
mov
xor
push
mov
xchg
inc
(bad)
call
loope
(bad)
jmp
mov
xor
fidivr
inc
mov
pushf
mov
xor
loop
scas
fild
mov
fwait
add
adc
sub
pop
jne
pop
out
out
(bad)
(bad)
(bad)
mov
xchg
rsm
outs
push
in
push
mov
mov
and
inc
call
dec
ins
jmp
cs
pop
popf
push
sub
inc
sub
aam
int3
and
(bad)
(bad)
(bad)
cmp
leave
jno
fwait
adc
jge
inc
(bad)
mov
(bad)
cmp
or
xchg
outs
addr16
mov
and
stos
mov
push
mov
test
(bad)
mov
dec
adc
lds
mov
es
enter
das
nop
mov
(bad)
cli
xchg
sar
jecxz
or
xchg
adc
int3
cmp
pusha
mov
lods
enter
jg
mov
cmps
xor
repz
in
lahf
mov
movs
sub
dec
(bad)
(bad)
(bad)
call
pop
shld
sub
in
mov
jl
cmps
sbb
gs
cli
(bad)
(bad)
jmp
dec
inc
retf
cmp
mov
imul
ret
cmc
inc
inc
inc
int3
adc
outs
mov
mov
pop
outs
push
(bad)
(bad)
(bad)
jmp
int3
pop
jp
mov
loopne
(bad)
mov
jle
jne
add
sub
dec
les
or
jp
mov
aad
nop
dec
adc
iret
aas
mov
cdq
loope
jg
in
cli
popf
test
movs
pop
loopne
data16
jnp
(bad)
(bad)
(bad)
(bad)
call
fiadd
adc
push
sbb
addr16
ret
(bad)
pop
ins
dec
xchg
sub
(bad)
jmp
pop
ret
shl
fwait
test
adc
mov
(bad)
jmp
lea
data16
call
push
mov
test
pop
or
mov
(bad)
dec
(bad)
data16
pop
call
sbb
adc
sub
mov
or
cli
cmps
dec
dec
arpl
or
kortestb
fiadd
(bad)
(bad)
inc
sub
addr16
or
or
inc
pop
mov
mov
in
outs
cmp
ret
inc
and
sbb
fdivrp
jge
push
retf
dec
loopne
dec
jmp
(bad)
(bad)
jg
in
repnz
pop
dec
lods
jmp
repnz
cld
mov
in
jno
adc
add
(bad)
dec
loopne
jno
cmc
xchg
or
fcomp
pop
ret
mov
(bad)
(bad)
cmp
and
fucomi
add
mov
cmps
sub
outs
adc
mov
or
scas
sub
mov
or
stos
jns
fild
xor
jp
jle
shl
sbb
loope
adc
sub
sub
sbb
mov
(bad)
mov
mov
sub
mov
aad
push
inc
adc
lock
call
inc
retf
cs
push
pop
(bad)
push
loop
mov
or
iret
(bad)
fbstp
je
(bad)
(bad)
jmp
daa
int
cmp
dec
shr
or
mov
aas
mov
mov
and
js
(bad)
(bad)
jmp
in
or
pop
into
jmp
or
aas
sub
sub
xor
ret
mov
pop
stc
ins
jp
sub
fcmovnb
mov
inc
and
es
mov
(bad)
(bad)
(bad)
jmp
fbld
(bad)
cli
mov
cs
dec
cmp
or
cmps
retf
mov
(bad)
(bad)
call
out
inc
loop
jle
cld
call
imul
mov
push
pop
cmps
out
pop
(bad)
(bad)
(bad)
jmp
outs
pop
or
xor
mov
fidivr
or
adc
outs
mov
(bad)
(bad)
push
push
xor
scas
call
outs
mov
arpl
xchg
add
inc
std
push
adc
fisubr
mov
jmp
call
push
test
(bad)
in
mov
sbb
mov
out
dec
int3
rcr
push
mov
dec
and
outs
cli
(bad)
jmp
aas
(bad)
sub
loopne
or
add
lock
lock
add
bound
push
scas
pushaw
mov
add
cld
xchg
clc
stos
mov
xchg
adc
fcomip
jmp
or
ret
mov
mov
push
cs
jmp
das
stos
sahf
sti
lods
(bad)
(bad)
(bad)
fdivrp
(bad)
push
inc
test
sub
cmp
mov
bound
sub
push
mov
int3
cmps
stos
xchg
sbb
jle
adc
xor
(bad)
jmp
mov
xchg
mov
push
and
pushf
enter
cwde
sub
gs
xchg
clc
inc
cld
outs
jnp
mov
bound
mov
sub
dec
adc
adc
int
mov
xor
mov
cli
mov
in
out
mov
(bad)
(bad)
mov
cmp
or
test
iret
or
jbe
xchg
lods
stc
mov
jb
xlat
sub
mov
bound
aaa
std
push
add
stos
sub
popa
push
sub
(bad)
fwait
pop
in
lea
push
adc
repz
push
dec
imul
cmp
or
cmp
pop
scas
dec
jle
stos
aad
aas
or
out
adc
ror
mov
test
lock
imul
das
push
cmps
xchg
retf
sti
add
ficomp
mov
cs
stos
(bad)
jmp
mov
and
leave
cld
dec
jnp
and
repnz
clc
mov
call
leave
clc
cmps
xor
dec
(bad)
sar
pop
sub
lds
je
mov
sub
(bad)
pop
stc
add
dec
dec
sub
xchg
pop
jl
sub
jnp
pop
in
mov
fucomp
xchg
add
test
sub
fcom
xchg
leave
scas
call
outs
cli
fadd
inc
inc
mov
add
sbb
inc
jns
cmp
ins
(bad)
sbb
icebp
or
loop
(bad)
iret
add
dec
mov
(bad)
(bad)
jmp
and
lds
push
and
mov
in
push
call
or
int
cli
(bad)
(bad)
jmp
aas
pop
(bad)
outs
ins
xor
adc
adc
cwde
daa
jmp
in
sub
(bad)
dec
inc
mov
in
and
sbb
out
sbb
test
(bad)
(bad)
mov
dec
stos
dec
push
sti
idiv
rcr
mov
xor
call
ss
xchg
imul
cmps
(bad)
jmp
push
dec
sub
retf
mov
das
add
or
cmp
jg
inc
test
stos
dec
inc
mov
or
lea
jmp
mov
dec
xchg
cld
add
mov
das
and
or
mov
inc
mov
imul
outs
mov
call
adc
std
cld
mov
fisttp
add
sbb
pop
and
push
mov
push
dec
mov
(bad)
enter
add
in
push
pop
cli
mov
jmp
mov
(bad)
(bad)
jmp
test
xchg
mov
sub
pop
mov
stos
(bad)
jp
jecxz
and
sbb
and
mov
sbb
sbb
jb
fist
mov
out
lods
into
cmp
add
ds
mov
push
(bad)
outs
(bad)
dec
movs
xchg
out
mov
gs
(bad)
in
xchg
scas
sub
and
ins
sub
stos
scas
(bad)
(bad)
(bad)
push
mov
and
in
mov
stc
push
and
mov
int3
movs
(bad)
(bad)
(bad)
(bad)
cmp
dec
stos
xlat
dec
dec
arpl
ins
and
call
test
mov
mov
ins
mov
(bad)
jmp
ins
test
(bad)
and
cmp
daa
js
mov
inc
cld
fwait
pop
pusha
dec
push
jle
pop
xchg
(bad)
(bad)
mov
push
cmps
pop
push
jl
lods
nop
sub
pop
and
(bad)
(bad)
mov
push
mov
mov
add
inc
in
xlat
loopne
enter
dec
or
(bad)
jmp
ja
loop
and
jno
sub
mov
outs
dec
xor
popa
div
call
jl
dec
add
(bad)
(bad)
adc
pop
ret
mov
mov
or
in
(bad)
bound
loopne
add
mov
movs
and
mov
cwde
movs
sbb
scas
cwde
cmp
call
mov
out
mov
mov
xlat
jmp
loopne
cli
jg
cmp
sub
in
adc
xchg
cdq
xchg
mov
(bad)
push
and
in
dec
repnz
sbb
sbb
ds
call
mov
or
jo
iret
cli
mov
mov
mov
sub
(bad)
out
scas
nop
jmp
fbld
(bad)
jne
daa
aas
xor
(bad)
(bad)
(bad)
(bad)
scas
xchg
test
xor
xor
cmps
imul
mov
xchg
ret
dec
inc
cld
(bad)
push
jle
imul
xor
mov
movs
jbe
jp
aad
fstp
mov
xor
leave
sbb
(bad)
call
sbb
aas
sub
fld
das
cmps
sub
push
mov
out
std
mov
mov
ss
call
xchg
cmps
lock
movs
daa
and
scas
dec
in
(bad)
pop
push
stos
mov
pusha
dec
cmps
ja
add
cmp
add
pusha
pop
pop
jb
mov
fadd
xor
fild
push
adc
cli
lahf
retf
sub
retf
data16
mov
pop
aaa
or
or
adc
jl
add
sbb
jmp
call
(bad)
(bad)
(bad)
jmp
jmp
in
(bad)
xchg
pusha
or
jae
inc
scas
mov
stos
xchg
add
call
std
or
push
cmp
jecxz
test
gs
movs
loop
nop
aad
mov
scas
call
sub
mov
dec
scas
(bad)
cli
imul
enter
fs
scas
sub
mov
pop
mov
mov
das
std
adc
inc
mov
cwde
lods
sbb
sar
mov
or
jp
(bad)
(bad)
jmp
dec
ds
and
mov
int3
lods
repnz
inc
xor
pop
inc
stc
mov
xchg
push
(bad)
(bad)
dec
adc
pop
movs
loope
leave
pop
int3
mov
and
ins
(bad)
(bad)
(bad)
(bad)
inc
and
mov
jb
inc
adc
imul
inc
mov
inc
jnp
fimul
(bad)
(bad)
jmp
outs
mov
mov
popf
or
call
cmp
adc
pop
test
jge
outs
and
jmp
out
movs
fimul
sbb
sbb
fild
or
push
stos
inc
or
test
(bad)
(bad)
jg
fidiv
das
mov
mov
imul
(bad)
mov
mov
outs
iret
pop
push
cmp
test
stos
inc
call
ins
xchg
sub
es
(bad)
in
push
dec
sub
push
repnz
cmps
mov
imul
sub
or
(bad)
(bad)
(bad)
call
mov
push
dec
leave
cld
shl
sub
lods
in
dec
or
das
pop
stos
xor
ss
xchg
mov
xchg
mov
mov
add
mov
push
push
cwde
xchg
dec
inc
fnstsw
push
inc
(bad)
repnz
lds
jg
mov
nop
fs
ss
push
sahf
cmc
push
add
inc
inc
std
sbb
dec
inc
aad
std
mov
iret
call
mov
xor
cdq
lea
and
(bad)
not
or
mov
dec
and
ss
ret
sbb
(bad)
mov
pusha
int
mov
sub
mov
mov
add
jecxz
fcmovu
inc
cmp
sbb
sbb
cli
add
add
xchg
xchg
in
jmp
stos
xchg
pop
jle
(bad)
(bad)
inc
sub
mov
pop
fsub
leave
jp
enter
mov
scas
and
push
int
pop
pop
pop
scas
sar
(bad)
jmp
cdq
frstor
jb
cmp
mov
popa
loope
sbb
(bad)
(bad)
jmp
jno
fistp
jo
and
pop
popa
outs
in
fisubr
pushf
or
cmp
xchg
or
ins
and
sub
sub
sub
(bad)
push
movs
mov
sahf
fwait
out
in
mov
(bad)
(bad)
jmp
mov
in
push
add
push
mov
cs
into
sbb
in
cmp
fwait
sub
(bad)
jecxz
(bad)
push
pushf
push
xchg
pusha
pop
stos
pushf
leave
(bad)
mov
jb
pop
or
inc
ins
dec
push
pop
movs
push
push
jmp
inc
jp
loope
dec
push
add
(bad)
push
dec
add
stos
and
jg
push
mov
dec
dec
popf
gs
inc
cmp
jns
jecxz
lods
pushf
ds
jp
fcomip
aaa
or
scas
lods
loopne
aas
imul
call
lods
test
stos
mov
in
cmp
add
push
add
imul
repz
dec
std
(bad)
jmp
retf
xchg
cs
pop
out
fwait
mov
and
cmps
push
sbb
ror
push
adc
call
or
sub
enter
js
lds
inc
mov
jno
and
in
call
js
in
cmp
es
or
cs
mov
in
data16
(bad)
(bad)
(bad)
dec
adc
mov
mov
jns
sub
call
loop
adc
(bad)
(bad)
inc
les
dec
sub
jmp
int
cwde
mov
jmp
test
(bad)
jmp
push
sub
in
enter
or
(bad)
(bad)
jg
pop
iret
cs
xor
mov
adc
or
xchg
loope
sbb
push
sar
mov
dec
sahf
cli
lods
cmp
retf
loope
push
push
cli
dec
mov
out
mov
mov
out
and
call
jp
std
jp
sbb
push
inc
xchg
(bad)
out
mov
mov
xchg
jne
adc
mov
mov
sbb
push
mov
int3
sbb
cmp
mov
retf
in
leave
mov
lea
(bad)
(bad)
call
or
adc
das
jmp
mov
mov
xor
ret
sbb
sub
push
sub
es
mov
add
dec
add
dec
nop
mov
jmp
test
pmaxub
push
lock
push
stos
cs
bound
or
xor
jl
add
cld
call
push
inc
std
mov
fisttp
add
xchg
(bad)
fild
mov
sbb
cs
sar
pop
jp
(bad)
(bad)
(bad)
call
jb
data16
ficomp
ficom
push
adc
cmc
xor
and
inc
push
jl
loopne
ret
add
cli
add
jns
clc
or
mov
sub
dec
sbb
and
mov
push
mov
sar
inc
enter
test
and
es
iret
loop
ins
mov
fild
add
fwait
fwait
retf
lahf
push
xchg
xor
xchg
int3
dec
(bad)
(bad)
(bad)
push
mov
xor
push
in
jecxz
int3
xor
push
dec
sti
pop
and
mov
out
(bad)
cmp
pop
lock
in
cmp
jg
fdivrp
in
jne
mov
add
lds
ins
stc
(bad)
in
sub
inc
outs
mov
mov
jne
and
sub
scas
ss
push
clc
(bad)
(bad)
fistp
xchg
in
nop
mov
sub
ss
push
sbb
lods
scas
adc
int
(bad)
jmp
bound
or
ins
xchg
ret
fucomi
xchg
sub
call
sar
inc
cli
mov
lock
leave
(bad)
in
adc
cmp
sbb
sti
(bad)
(bad)
(bad)
mov
scas
mov
pop
sbb
ins
out
sbb
mov
(bad)
cld
ins
std
(bad)
(bad)
jg
mov
aas
pop
or
cmps
popf
xor
cmps
imul
jp
pop
inc
call
jp
sub
data16
cld
inc
stos
jp
add
call
mov
ret
jnp
dec
mov
fisttp
push
xor
pop
sbb
xchg
xchg
aad
jg
retf
out
mov
sbb
pop
call
mov
jp
or
push
and
mov
clc
sahf
push
pop
mov
int3
cmp
outs
mov
inc
pop
out
and
pop
fiadd
popa
add
jmp
inc
out
pusha
pmaxsw
stos
std
jl
(bad)
(bad)
(bad)
(bad)
mov
mov
push
sbb
jmp
in
xlat
and
loopne
(bad)
(bad)
(bad)
jmp
rcr
mov
(bad)
inc
mov
ficomp
fsub
std
dec
mov
movs
enter
int3
leave
xchg
mov
pop
cld
(bad)
inc
push
pop
xor
out
in
fisub
or
push
add
(bad)
(bad)
jg
push
xor
adc
scas
cmp
pop
jmp
(bad)
call
mov
pop
sti
es
scas
(bad)
inc
in
pop
repnz
mov
or
ins
repz
es
imul
inc
sti
pushf
fwait
jecxz
iret
mov
adc
ror
push
cmp
sar
sub
fwait
ins
mov
je
or
call
pop
jg
bound
pop
mov
cmp
mov
xchg
jne
(bad)
(bad)
cmp
(bad)
(bad)
dec
retf
sbb
(bad)
cli
ret
scas
cmp
mov
xor
or
(bad)
loop
sti
mov
ficomp
fimul
jmp
data16
sbb
(bad)
(bad)
(bad)
(bad)
in
js
pop
mov
scas
xchg
dec
inc
mov
and
add
shl
dec
jne
dec
enter
inc
add
stos
gs
add
popa
jno
add
adc
(bad)
mov
xchg
sbb
ror
(bad)
(bad)
jmp
retf
icebp
and
dec
cmps
pop
cmps
sbb
scas
clc
xor
sub
adc
sar
mov
(bad)
mov
cmp
jge
mov
aaa
repz
fstp
sbb
xchg
mov
mov
mov
mov
sti
es
out
test
inc
(bad)
std
pop
adc
xchg
sti
(bad)
div
push
or
cli
call
fistp
rol
xchg
(bad)
jp
add
pop
jno
fist
dec
(bad)
pop
inc
pop
push
mov
xchg
jp
outs
aaa
leave
aam
cmc
and
loop
mov
cwde
cs
xor
outs
cli
fs
stos
and
dec
and
xchg
push
cld
sub
or
jle
(bad)
jne
(bad)
fild
xchg
icebp
and
dec
mov
mov
xchg
fisttp
inc
inc
test
cpuid
sbb
fisttp
jl
push
push
mov
fisubr
out
movs
jmp
push
sahf
pop
cmp
pop
pushw
mov
mov
outs
sti
cmps
fimul
jmp
sbb
adc
xchg
adc
or
addr16
pop
cli
sbb
mov
and
call
jmp
jns
sbb
mov
mov
shl
clc
pusha
xchg
mov
movs
int3
call
mov
add
and
fild
xor
(bad)
(bad)
inc
mov
ins
push
scas
mov
test
ds
mov
add
jp
movs
(bad)
jmp
gs
je
mov
js
jmp
sub
pop
(bad)
xchg
mov
push
cwde
fisub
les
shl
scas
mov
in
dec
cmps
(bad)
push
cmp
dec
ss
sub
ficomp
inc
(bad)
mov
push
movs
int3
mov
or
test
sub
push
js
shr
aaa
pop
(bad)
jmp
stos
lock
inc
jg
pop
or
(bad)
(bad)
call
out
pop
out
adc
mov
in
scas
inc
jne
daa
dec
xchg
(bad)
push
stos
iret
pop
sub
das
(bad)
(bad)
(bad)
jmp
out
scas
add
imul
sub
and
std
cmp
in
hlt
aas
icebp
jmp
stc
call
mov
jge
cmc
test
movs
aas
call
fucomip
fwait
scas
out
pop
mov
mov
sti
sbb
leave
or
(bad)
in
sub
stos
(bad)
(bad)
inc
in
adc
mov
cs
or
rcl
push
pop
call
sbb
pop
jno
jge
repnz
imul
sub
pop
iret
retf
loopne
jg
lds
dec
jb
retf
cmps
retf
sahf
out
dec
or
in
lods
test
push
shl
sub
repnz
push
pop
and
or
push
add
aaa
std
xchg
imul
pushf
mov
shl
jge
push
xor
(bad)
jg
mov
in
fmul
adc
push
xchg
sub
cld
sbb
mov
std
inc
push
add
jmp
cmp
retf
std
(bad)
(bad)
fild
icebp
mov
sub
scas
xlat
cwde
inc
lahf
scas
divps
jge
jmp
stos
sbb
inc
cs
mov
mov
mov
add
(bad)
mov
test
jp
pop
dec
adc
or
and
cmps
dec
xor
je
or
xchg
sbb
aaa
fld
lock
mov
out
clc
inc
cli
je
(bad)
push
adc
add
das
pop
leave
sahf
stc
xor
or
or
lock
(bad)
(bad)
(bad)
jmp
push
xchg
cwde
adc
icebp
into
fwait
loop
inc
arpl
mov
or
(bad)
(bad)
(bad)
mov
mov
fiadd
out
dec
xchg
out
out
adc
scas
cmp
jmp
xchg
adc
cmps
mov
cwde
mov
in
pop
cmc
xchg
icebp
(bad)
cmp
sbb
sub
mov
(bad)
push
cs
pop
cmp
lea
push
sbb
jb
mov
push
pop
sbb
out
mov
sbb
movs
mov
xor
retf
ret
adc
mov
out
cli
jge
or
(bad)
push
jmp
jp
pop
or
jbe
xchg
jl
iret
sbb
sbb
cs
adc
(bad)
(bad)
dec
scas
add
push
pop
(bad)
sbb
scas
out
jmp
jmp
cli
mov
mov
inc
loopne
push
xchg
aam
(bad)
jmp
mov
gs
movs
(bad)
xlat
outs
jae
cdq
adc
loope
push
dec
outs
outs
cli
(bad)
dec
(bad)
sbb
dec
xchg
(bad)
into
jbe
scas
or
push
jle
inc
shld
mov
in
repz
aas
div
sub
or
pop
push
mov
mov
in
sti
idiv
pusha
fwait
mov
ss
inc
add
stos
dec
or
(bad)
(bad)
(bad)
push
retf
pop
jmp
pop
mov
cmp
call
bound
gs
mov
cmp
ins
(bad)
(bad)
dec
cmp
leave
div
mov
popf
test
call
inc
shl
sbb
mov
loopne
mov
(bad)
(bad)
call
imul
jge
sub
daa
fbld
loopne
inc
(bad)
(bad)
(bad)
call
sbb
cmp
inc
adc
mov
test
push
and
iret
call
add
inc
lock
cwde
mov
test
and
(bad)
jmp
shr
sbb
jb
sbb
sbb
idiv
ja
or
or
cli
scas
add
(bad)
cmp
stc
cmps
retf
aaa
(bad)
enter
jo
mov
div
lock
cmp
sub
fdivr
jmp
test
push
mov
cmp
stos
loopne
out
inc
jg
dec
cld
mov
scas
ins
ret
es
ins
sbb
pusha
mov
jle
sub
adc
sub
xor
and
sbb
loope
and
(bad)
(bad)
jmp
mov
mov
retf
pop
pop
scas
test
jmp
retf
loopne
out
push
pop
push
pop
(bad)
(bad)
call
adc
test
movzx
ret
jge
cmp
push
mov
push
adc
cli
xchg
xchg
stos
push
and
push
dec
(bad)
fild
aas
adc
jg
dec
mov
sbb
jnp
retf
jmp
inc
aaa
jp
(bad)
(bad)
push
clc
bound
adc
aad
adc
shl
and
xor
jmp
sar
sub
in
call
mov
out
pop
pop
arpl
(bad)
(bad)
jmp
dec
stos
imul
cmps
mov
or
sbb
mov
dec
push
loop
mov
arpl
cmp
dec
adc
push
adc
cmp
add
jmp
mov
shr
push
jg
xor
(bad)
fild
jmp
stc
mov
(bad)
(bad)
in
lds
xor
sbb
dec
adc
in
jmp
inc
jmp
pop
ds
jb
jle
aam
or
js
(bad)
(bad)
(bad)
call
popf
xchg
jno
stos
sbb
sub
pop
pop
je
jle
jmp
aas
pop
out
clc
jp
scas
cmps
inc
mov
(bad)
push
and
pop
mov
int
push
and
mov
in
(bad)
jg
inc
and
ds
and
stos
jo
mov
sub
ins
call
aad
inc
(bad)
aad
leave
xor
mov
call
mov
jle
mov
push
shl
ss
add
imul
(bad)
(bad)
(bad)
jg
xor
or
dec
inc
out
and
add
and
sbb
mov
cdq
xor
(bad)
push
loope
stos
mov
cmps
pop
imul
push
std
loope
jp
mov
mov
or
cmp
and
and
or
daa
call
(bad)
jno
loopne
(bad)
(bad)
call
(bad)
imul
inc
stc
jb
or
adc
dec
jmp
mov
mov
xor
pusha
inc
xchg
(bad)
mov
xor
push
dec
push
mov
stos
pop
sbb
mov
jmp
out
(bad)
adc
add
loop
and
mov
pusha
or
sub
pminsw
xchg
jae
or
push
jmp
mov
mov
cmp
jge
sub
and
jg
dec
push
cmps
sbb
xchg
inc
adc
std
push
add
push
mov
iret
sbb
aad
jmp
mov
(bad)
inc
xchg
mov
adc
inc
scas
push
jne
sbb
ud0
jmp
push
pop
and
mov
shl
outs
sub
mov
mov
mov
rol
mov
inc
je
jle
cmp
(bad)
inc
add
pop
sub
out
sbb
inc
push
loopne
out
xchg
mov
sahf
sub
mov
mov
sar
pop
or
fdivr
pop
jo
sub
pop
push
and
xchg
out
sbb
sahf
and
and
inc
or
cli
out
cmp
push
pusha
sti
ins
adc
or
pop
(bad)
pop
mov
movs
mov
call
sub
out
outs
movs
pop
push
(bad)
dec
fwait
out
gs
call
mov
mov
mov
inc
push
movs
sbb
pop
mov
(bad)
(bad)
push
mul
push
repnz
mov
add
std
outs
out
cld
out
test
push
(bad)
mov
or
mov
pop
sbb
outs
cli
inc
push
mov
icebp
mov
cmp
jmp
push
jge
pusha
daa
stos
push
pusha
or
call
dec
in
xchg
adc
ins
out
mov
addr16
adc
and
mov
ror
inc
(bad)
(bad)
(bad)
dec
out
mov
outs
mov
sub
loopne
and
retf
fld
xor
test
xchg
(bad)
jmp
or
jge
stos
xchg
leave
das
(bad)
(bad)
inc
stos
mov
imul
mov
fwait
lds
fwait
gs
adc
and
or
pop
xchg
adc
(bad)
and
dec
(bad)
fist
test
dec
les
and
and
std
into
mov
dec
mov
jmp
mov
dec
retf
mov
sbb
call
dec
inc
xor
xlat
std
add
pop
xor
clc
popf
cli
mov
imul
mov
inc
out
fdivr
call
mov
jle
sbb
lea
inc
nop
cs
fs
loop
inc
cli
popa
pop
cmp
mov
adc
adc
pop
dec
dec
xchg
in
and
inc
bound
jl
stos
or
jecxz
xor
retf
aam
or
mov
retf
repz
mov
and
clc
aas
loope
cmp
sbb
add
mov
into
scas
jge
inc
lods
movs
fisttp
mov
(bad)
call
mov
test
(bad)
cmps
retfw
xchg
inc
sbb
test
out
daa
ins
pop
adc
(bad)
call
xor
mov
push
sub
(bad)
(bad)
mov
fadd
inc
into
idiv
repnz
and
test
fwait
and
outs
mov
or
ss
cli
mov
(bad)
(bad)
mov
in
ja
(bad)
call
in
push
pop
aad
sar
inc
mov
adc
mov
inc
fwait
inc
jmp
push
jmp
test
imul
(bad)
adc
lock
(bad)
(bad)
jmp
adc
fild
adc
inc
adc
call
jle
mov
(bad)
(bad)
(bad)
jmp
movs
pop
jle
loop
push
popa
fs
out
pop
cmps
dec
stos
adc
daa
int3
and
aad
stc
push
lock
stc
jge
call
add
les
or
int
pop
and
into
and
ds
out
adc
pusha
xchg
jmp
call
lods
adc
or
lea
popa
out
setp
xchg
inc
pop
retf
gs
or
(bad)
(bad)
mov
movs
in
stos
mov
mov
dec
sbb
stos
and
cwde
and
(bad)
call
jnp
lock
add
scas
dec
mov
call
push
(bad)
dec
sti
push
movs
jb
aaa
out
mov
(bad)
and
jb
fst
pop
icebp
(bad)
jmp
movs
add
pusha
std
mov
(bad)
fwait
push
(bad)
cmp
lods
xchg
movs
dec
stos
loope
std
and
cmps
ss
sub
cmps
call
cmps
mov
jp
(bad)
(bad)
jmp
outs
popf
mov
scas
inc
or
and
test
sar
sbb
sub
loopne
xor
xchg
int3
cmp
mov
jmp
add
into
into
or
test
cmps
inc
mov
mov
gs
dec
push
sub
in
(bad)
std
js
mov
jmp
shr
and
mov
mov
mov
pop
dec
jo
fadd
mov
into
popa
movs
jmp
ret
(bad)
movs
push
stos
scas
sub
iret
fcmovu
pusha
arpl
push
mov
(bad)
call
mov
das
and
fisub
ins
dec
or
movs
jle
mov
movs
test
ss
or
add
or
mov
pop
inc
pop
inc
loopne
add
pop
movs
and
mov
rcl
and
in
sub
sub
push
(bad)
(bad)
jg
fldcw
jp
out
and
jmp
mov
dec
popa
adc
cdq
aaa
sar
call
and
int3
inc
test
imul
(bad)
(bad)
(bad)
stc
sbb
movs
push
or
xchg
(bad)
jmp
jge
int3
dec
or
push
cdq
sbb
or
dec
sbb
call
out
xchg
and
fstp
jo
cmps
pop
mov
std
(bad)
cmp
jnp
ret
lods
pop
fwait
and
and
mov
dec
jno
xor
dec
mov
out
js
jg
mov
cs
sti
or
sub
lods
pusha
(bad)
(bad)
(bad)
dec
je
pusha
push
jb
daa
mov
ins
movs
or
add
mov
popa
test
jno
in
imul
(bad)
(bad)
dec
pop
aaa
push
or
loopne
leave
xor
jl
mov
scas
push
inc
sar
pop
inc
rcl
xor
sti
into
call
mov
sub
lds
jle
jmp
movs
mov
jge
sbb
jge
sub
mov
movs
mov
mov
repz
clc
(bad)
inc
pop
in
iret
popf
test
loopne
sub
inc
push
cmc
enter
in
sub
clc
dec
ins
loop
mov
or
(bad)
pop
aam
jb
int3
pop
sahf
(bad)
and
push
or
cmps
sub
aad
(bad)
sub
sbb
repnz
push
sub
rcr
popa
sub
cmps
or
mov
and
add
cwde
mov
xor
rcl
popa
mov
daa
sub
dec
sub
(bad)
jmp
popa
sbb
and
adc
sbb
and
pop
fsub
or
jmp
inc
add
pusha
inc
icebp
xchg
inc
icebp
dec
add
inc
lahf
gs
cmc
(bad)
jmp
push
ret
pop
and
xchg
mov
dec
cwde
jle
push
mov
in
es
ret
add
cmps
aad
mov
mov
add
lods
push
mov
adc
mov
(bad)
mov
test
scas
jmp
popf
mov
out
pop
sbb
std
pop
in
xchg
mov
lds
cmc
mov
ja
sbb
addr16
(bad)
(bad)
(bad)
out
cli
call
pop
mov
imul
mov
sbb
(bad)
fild
push
push
sbb
jmp
aaa
sbb
push
stos
inc
daa
mov
in
xor
push
and
and
icebp
out
bound
adc
fwait
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
scas
and
loope
xchg
jp
xchg
loopne
xor
(bad)
inc
int
cmps
shr
add
inc
out
jmp
lock
mov
sbb
dec
sti
mov
stos
mov
es
(bad)
jmp
push
xchg
stos
sub
mov
cwde
xchg
icebp
test
push
and
mov
pop
mov
imul
movs
(bad)
push
call
inc
sbb
call
xchg
dec
in
push
mov
or
pop
ss
adc
push
sbb
xchg
mov
shl
lock
inc
dec
int
jbe
inc
inc
mov
call
xchg
sbb
mov
dec
(bad)
test
sbb
sbb
out
lods
scas
test
shl
fisubr
cwde
mov
pop
lea
xchg
sbb
push
push
add
xor
xchg
jp
mov
mov
cdq
gs
test
popf
push
jle
loope
call
(bad)
sub
jmp
mov
(bad)
frstor
mov
cwde
(bad)
fcomip
mov
mov
fcmovnbe
pop
or
sbb
dec
cmp
jmp
jl
das
jecxz
jae
shr
call
aaa
leave
ja
(bad)
(bad)
(bad)
(bad)
out
jmp
call
cmp
sub
inc
shl
es
cmp
adc
(bad)
(bad)
jl
add
add
mov
cmp
fstp
push
dec
add
(bad)
push
shr
sub
mov
out
dec
sub
or
cmp
aam
mov
jg
shr
retf
in
inc
fsubr
or
loopne
cmp
jmp
mov
xor
(bad)
and
fistp
add
push
sub
cmp
nop
lea
icebp
call
cwde
(bad)
adc
fwait
or
retf
pop
neg
popa
imul
mov
loop
stos
(bad)
sub
adc
(bad)
sbb
sub
in
(bad)
retf
test
mov
ja
(bad)
mov
or
push
pmullw
jmp
retf
jmp
mov
rcr
repnz
push
loopne
mov
(bad)
jmp
push
xchg
repz
xor
or
mov
(bad)
push
xchg
xor
jnp
xor
fsubr
push
and
es
(bad)
popf
and
ret
mov
call
mov
(bad)
(bad)
(bad)
(bad)
cli
ficomp
fcom
sbb
mov
iret
mov
retf
mov
call
(bad)
(bad)
call
in
dec
mov
or
or
mov
mov
js
add
add
(bad)
call
xor
test
cs
(bad)
(bad)
inc
mov
mov
int
jge
sbb
dec
pop
dec
jl
imul
add
out
leave
xor
aam
or
adc
xor
fdiv
into
xchg
pop
inc
jl
jbe
jg
push
(bad)
jg
mov
mov
cwde
inc
xchg
sar
mov
(bad)
fild
rol
mov
fisttp
gs
popf
cmp
idiv
cmc
cwde
pop
and
sub
(bad)
jg
push
outs
dec
out
sub
cmp
fnstsw
pop
jmp
cmp
or
es
daa
movs
aaa
std
sub
mov
add
(bad)
jg
ficomp
push
out
lods
sub
ficomp
lods
movs
shr
mov
cdq
lock
mov
call
(bad)
(bad)
(bad)
call
mov
inc
xchg
sbb
mov
adc
pop
mov
mov
adc
push
adc
inc
popa
xlat
clc
cmp
sar
xchg
pop
mov
fs
jmp
movs
outs
test
jp
mov
pop
sahf
sub
outs
cli
jmp
mov
(bad)
std
push
or
cmps
mov
mov
shl
jae
jb
scas
call
out
adc
pop
adc
popa
imul
lods
ret
(bad)
jg
lods
loopne
inc
xor
pusha
pop
into
das
mov
sub
fldcw
test
(bad)
(bad)
jg
jp
fs
cmps
in
js
push
xor
jmp
or
inc
xchg
mov
sbb
out
aam
enter
push
bound
add
jp
mov
or
dec
icebp
(bad)
(bad)
inc
push
or
and
retf
dec
in
neg
bound
xor
call
dec
sub
and
sbb
fwait
mov
shld
fst
loop
(bad)
mov
in
cmps
int3
pop
into
repz
inc
and
fiadd
adc
sub
lods
cmp
xchg
add
out
ret
dec
fidivr
ss
push
std
mov
xor
jmp
clc
pop
rcl
fs
call
ret
push
jne
inc
pop
jmp
or
ficomp
jg
add
fild
cmp
mov
xchg
fisttp
add
stos
test
mov
and
daa
loope
ins
(bad)
jmp
xchg
faddp
mov
leave
cmc
jnp
movs
pop
mov
clc
popf
or
call
fst
enter
sbb
mov
pop
scas
dec
lahf
outs
pop
pop
xchg
push
cmps
ins
add
into
sub
popf
in
test
pop
out
or
dec
cmp
int
icebp
jl
dec
adc
in
cld
in
test
imul
(bad)
call
inc
pop
std
sub
lods
push
cmp
dec
int3
cmp
popf
adc
fcomp
loop
pop
lea
stos
cld
pushf
pop
lods
pop
js
dec
pop
push
push
cmp
ins
(bad)
fistp
fcom
fadd
fdivrp
(bad)
(bad)
jg
inc
push
rcr
dec
popf
pop
retf
std
fcomp
mov
lahf
aam
(bad)
rcr
pop
outs
push
(bad)
sbb
push
sar
in
popf
jg
lock
cld
and
mov
jl
sub
adc
pop
call
fnstsw
fcmovu
popf
ins
or
pop
lods
pop
fwait
and
or
ret
and
fstp
in
push
sub
sub
pop
mov
int
(bad)
(bad)
jmp
push
test
pop
cdq
xchg
pop
sub
ins
sar
sbb
fcmovnb
int3
pop
fisttp
cli
call
sub
addr16
xchg
popa
adc
or
dec
dec
mov
sub
mov
out
push
test
jg
inc
adc
sahf
and
aam
es
loopne
mov
bound
sub
outs
and
imul
sub
(bad)
mov
push
xchg
sbb
fisttp
daa
cmp
call
mov
push
inc
(bad)
pop
sbb
cmp
clc
ds
jmp
out
pop
cmp
dec
std
sub
loope
test
movs
sbb
ret
jg
ror
mov
mov
lds
mov
(bad)
(bad)
mov
sub
into
mov
mov
and
rcr
cmp
push
dec
pop
lea
and
xchg
pushf
cmp
adc
pop
(bad)
call
mov
retf
mov
jl
sub
push
mov
fmul
jmp
(bad)
stc
jns
ins
std
and
or
fisubr
jns
lock
(bad)
jmp
dec
std
jl
popa
fsub
sbb
ins
(bad)
(bad)
push
in
das
jno
jl
clc
stc
mov
stos
pop
imul
jg
sub
and
sbb
in
inc
dec
ret
test
mov
pushf
sub
sbb
inc
sub
ffreep
int
pushf
pop
ret
and
out
pop
lea
imul
scas
in
sbb
repz
pop
pop
iret
sahf
jnp
and
(bad)
(bad)
(bad)
(bad)
call
or
fstp
retf
mov
jp
lds
(bad)
xchg
xor
loopne
mov
pop
pop
jb
jmp
add
sub
retf
xchg
inc
sbb
mov
pop
out
lahf
dec
(bad)
(bad)
(bad)
(bad)
mov
int
pop
dec
pop
pop
outs
ret
dec
pop
jmp
je
pop
lods
lar
pop
sahf
(bad)
(bad)
out
and
out
fdivr
inc
pop
jg
sub
dec
cmps
out
(bad)
scas
jecxz
add
stos
sahf
push
in
int
jle
scas
mov
std
stos
fs
pop
aas
and
dec
xchg
cli
and
cli
push
sbb
fmul
pop
sti
lods
inc
cli
cmp
jo
test
stc
fwait
(bad)
jmp
leave
mov
pop
pop
shr
scas
fcmovnu
cs
(bad)
fbld
outs
scas
pop
pop
outs
pop
sub
(bad)
(bad)
(bad)
jmp
mov
or
dec
cdq
xor
out
in
sahf
stc
mov
retf
outs
fs
add
mov
push
stos
push
(bad)
clc
fadd
lods
xchg
lahf
loopne
ds
cmps
fiadd
jmp
(bad)
push
test
scas
aad
out
pushf
mov
aaa
es
mov
or
(bad)
(bad)
in
jne
dec
test
inc
test
inc
into
fwait
jae
cmp
mov
push
mov
add
mov
dec
push
retf
(bad)
(bad)
call
std
lods
scas
ins
(bad)
or
(bad)
das
iret
mov
jmp
mov
call
loopne
into
fs
mov
fldcw
mov
clc
into
ds
xchg
add
(bad)
(bad)
inc
into
ret
dec
sahf
and
fchs
outs
push
stc
popf
arpl
add
(bad)
(bad)
call
jmp
pop
cmp
or
inc
xor
xor
push
inc
jns
loopne
clc
dec
mov
pop
ja
sub
test
(bad)
call
mov
push
les
dec
stc
mov
pop
mov
or
(bad)
(bad)
call
js
jg
daa
mov
popa
dec
dec
jns
xchg
fbld
imul
or
jmp
sub
js
or
jp
sub
dec
cmp
(bad)
(bad)
(bad)
jl
cmp
stos
imul
xchg
jle
sahf
test
fistp
dec
fcmovu
call
push
in
cmps
mov
cmps
mov
cmps
mov
dec
mov
pop
icebp
(bad)
jmp
mov
es
dec
int
inc
xchg
jae
inc
lods
pop
xor
scas
lods
and
aas
cmp
(bad)
(bad)
(bad)
call
(bad)
sahf
in
movs
ret
fist
dec
lods
and
push
lods
dec
out
test
xor
push
rcl
jle
cmp
movs
sahf
push
xor
aad
jg
(bad)
in
jno
mov
add
data16
pushf
scas
imul
cmps
(bad)
xchg
jno
pop
add
push
add
jmp
jp
dec
stos
stos
fwait
fwait
sti
sti
retf
retf
cmp
or
imul
sbb
push
in
cwde
cwde
clc
clc
jmp
push
int
std
add
mov
sub
sbb
mov
into
arpl
sbb
push
push
outs
outs
cli
mov
(bad)
das
das
pop
pop
or
dec
dec
mov
(bad)
inc
inc
push
cwde
sbb
mov
jl
ret
int
cmp
jle
or
mov
xchg
bnd
pusha
mov
add
mov
add
call
shl
and
adc
inc
inc
mov
add
loopne
(bad)
jmp
mov
jo
inc
mov
icebp
rol
xor
add
push
push
mov
(bad)
(bad)
fnsave
out
(bad)
es
push
jbe
inc
inc
cmps
cmps
xchg
xchg
div
mov
call
add
xchg
jp
xchg
hlt
hlt
(bad)
les
and
mov
test
shl
adc
out
hlt
inc
mov
pop
dec
movs
mov
push
cld
mov
test
dec
mov
aaa
cwd
push
mov
(bad)
in
(bad)
dec
pop
jp
inc
mov
mov
je
or
push
sbb
inc
mov
fisubr
mov
daa
cmp
mov
mov
mov
xchg
imul
retf
retf
or
dec
test
leave
fst
dec
loopne
lods
pop
xchg
dec
(bad)
retf
ja
jae
or
adc
sub
mov
mov
or
cmp
inc
cs
cs
sub
fidiv
sbb
mov
leave
push
sbb
pushf
inc
dec
push
dec
xchg
dec
fwait
add
call
jbe
sub
dec
nop
dec
jmp
retf
imul
dec
stos
mov
and
adc
call
into
cmp
cmp
int3
mov
retf
sbb
sbb
xlat
adc
cmp
dec
push
jno
inc
lds
push
adc
mov
sbb
adc
dec
cmp
jg
dec
fadd
and
pushf
call
sub
mov
mov
mov
inc
jns
std
mov
push
mov
mov
mov
js
loope
fld
sbb
retf
lea
fstp
inc
dec
retf
shr
fst
adc
sub
xor
call
pushf
inc
inc
dec
inc
xchg
mov
and
xchg
mov
mov
idiv
call
dec
test
stos
jns
mov
ja
xchg
jae
clc
not
popf
dec
mov
daa
out
dec
xor
xchg
dec
jg
popa
xchg
cmp
mov
cmp
je
dec
sub
sbb
push
adc
jns
jge
div
inc
dec
jns
inc
dec
inc
mov
dec
cmp
fist
adc
xchg
dec
retf
lds
stos
mov
mov
sti
pop
retf
test
lock
lods
sub
or
aad
sbb
mov
sub
sub
dec
sbb
pop
(bad)
stos
dec
xchg
dec
push
and
sbb
and
bound
stos
jmp
(bad)
loopne
aad
test
xor
mov
pop
rcl
jmp
jnp
fidiv
dec
ss
je
aad
fisttp
sbb
inc
fs
xchg
pushf
cld
dec
outs
mov
inc
inc
xor
cmp
push
jge
aad
cmp
inc
mov
mov
sar
pop
imul
inc
or
cmp
adc
fld
sub
mov
add
push
int
or
dec
inc
ds
dec
lds
mov
sbb
mov
add
mov
stc
dec
jb
cmps
pushf
(bad)
dec
cld
clc
inc
push
(bad)
sub
add
je
fs
dec
sbb
outs
(bad)
jg
dec
js
stos
mov
jmp
ja
call
out
int3
jbe
jp
cmp
enter
mov
sti
jno
mov
sbb
sbb
iret
mov
add
cld
pusha
rol
mov
pop
xchg
mov
ret
xchg
hlt
cmps
jmp
jmp
jmp
das
mov
dec
sbb
jno
es
sub
dec
dec
mov
(bad)
pop
xlat
ror
mov
add
movs
dec
sub
push
cld
pop
rcr
sub
fwait
inc
ja
ror
retf
out
push
sbb
fs
jle
call
inc
adc
cli
fcmovu
jecxz
das
adc
in
cld
popf
push
inc
stos
lds
out
(bad)
lahf
mov
test
cmp
sub
clc
cmp
push
stos
ins
pop
pusha
vsubsd
add
outs
push
pushf
pop
out
dec
jmp
jmp
fisttp
out
jno
aaa
das
or
pop
addr16
mov
xchg
in
shr
add
fs
push
movs
inc
xchg
in
ret
or
es
add
ror
enterw
dec
and
call
imul
test
adc
mov
fsubr
dec
dec
pop
(bad)
cmp
sbb
dec
pop
test
and
(bad)
fldcw
cmp
sbb
pop
(bad)
push
cmp
push
cmps
xchg
cs
push
outs
jle
pop
loopne
(bad)
(bad)
call
dec
(bad)
out
or
aas
bsf
pop
loopne
sub
ins
jl
cmp
popf
in
std
cs
call
add
sahf
fnsave
sub
icebp
outs
je
xor
cmp
and
mov
int
inc
mov
and
adc
(bad)
(bad)
call
cmc
rcl
and
jb
mov
scas
adc
rcr
(bad)
jmp
sbb
sub
cld
xchg
inc
lods
sub
mov
mov
scas
cli
(bad)
mov
sbb
mov
jns
test
pop
push
test
fcmovu
(bad)
(bad)
(bad)
fadd
sahf
cmp
aaa
add
lds
xchg
neg
int3
dec
xlat
sub
inc
(bad)
(bad)
jg
mov
loop
lea
jle
or
or
in
push
push
cmps
dec
(bad)
fistp
data16
mov
push
callw
scas
mov
lods
cmp
(bad)
mov
and
or
clc
call
mov
(bad)
out
add
add
cmp
xchg
stos
les
inc
and
retf
mov
test
xor
jmp
cdq
push
mov
adc
push
xor
pop
fdivp
lock
or
test
inc
pop
mov
sub
inc
(bad)
(bad)
call
dec
lea
xlat
and
call
repnz
add
fwait
out
popf
(bad)
call
xchg
(bad)
sub
loopne
mov
dec
sub
ins
dec
les
push
out
fstp
inc
ins
push
sti
call
jmp
scas
ins
ss
mul
pop
fstp
fdivp
aaa
test
inc
(bad)
(bad)
(bad)
mov
mov
icebp
push
and
lea
rcl
cmps
je
mov
ret
dec
enter
ins
add
pop
cmc
jg
pop
push
xor
xchg
test
repnz
mov
dec
fistp
(bad)
das
shr
mov
jp
rol
add
inc
or
cmp
sbb
inc
and
imul
or
aam
mov
cmp
pop
and
addr16
pop
out
or
dec
mov
fdivr
(bad)
call
push
push
mov
sub
xchg
and
jecxz
inc
mov
fild
(bad)
call
addr16
push
inc
stos
adc
jmp
and
mov
xchg
xor
ins
mov
sti
inc
xchg
or
inc
jg
xor
lds
outs
inc
dec
xchg
rcl
cdq
add
push
outs
push
(bad)
(bad)
(bad)
(bad)
call
or
push
sbb
bound
push
xor
sbb
and
out
enter
daa
mov
mov
mov
inc
pusha
ins
mov
push
mov
repnz
cwde
sar
ins
add
cld
adc
dec
xor
cli
(bad)
(bad)
mov
jl
cmp
sbb
loop
push
movs
es
adc
(bad)
push
inc
mov
mov
mov
and
or
pop
out
daa
sub
(bad)
(bad)
mov
cdq
mov
push
dec
in
or
add
or
mov
(bad)
inc
pop
fmul
push
int3
and
ret
cmp
inc
add
push
pop
(bad)
xchg
lock
jl
xchg
adc
ficomp
mov
push
adc
das
xchg
ror
mov
xchg
mov
pop
leave
lea
idiv
sbb
adc
mov
inc
mov
out
pop
adc
lahf
ficomp
inc
mov
aad
and
or
shl
lock
rol
xor
xchg
icebp
(bad)
out
stc
outs
dec
pushf
call
adc
adc
cmp
(bad)
sbb
xor
mov
or
call
jmp
call
(bad)
push
cdq
inc
fisubr
sbb
xchg
push
dec
cmp
and
cmps
pop
in
es
cmp
xchg
jmp
sub
jno
cmp
or
stos
mov
(bad)
dec
xor
inc
clc
push
fsub
pop
adc
and
in
call
std
imul
dec
scas
inc
pop
pop
clc
(bad)
mov
icebp
jns
rcr
lahf
adc
adc
outs
push
push
sbb
iret
ror
pop
cmp
push
lds
mov
imul
dec
sub
mov
pusha
popf
call
mov
jg
pop
lods
adc
inc
mov
mov
add
or
jne
icebp
gs
pop
xchg
mov
cmp
(bad)
and
(bad)
out
inc
ds
xchg
test
cdq
dec
push
loopne
fwait
adc
inc
pop
push
test
mov
inc
xchg
dec
cmps
loope
mov
jle
push
cli
pop
pop
repz
mov
mov
inc
(bad)
(bad)
push
pop
inc
pop
imul
loope
inc
adc
sbb
movs
jp
mov
dec
jo
push
sub
inc
mov
mov
mov
xchg
sub
call
fisttp
inc
js
add
pop
mov
pop
data16
icebp
(bad)
in
cmc
xchg
repz
(bad)
jmp
xor
movs
pop
and
shl
ins
aaa
and
int3
sbb
ret
(bad)
(bad)
jg
repz
fucomp
or
ret
cmc
mov
(bad)
push
stc
jae
push
jmp
call
mov
sbb
inc
js
hlt
xchg
mov
dec
pop
retf
sub
push
movs
and
adc
in
call
jnp
pushf
and
push
mov
sub
sbb
test
xor
(bad)
push
mov
call
sub
es
popf
idiv
jg
je
xchg
push
xor
sbb
sti
cmp
pop
fistp
in
jl
popf
xor
mov
int
test
les
pop
xor
inc
call
fistp
ret
test
aaa
jp
jo
test
rol
xor
dec
cli
jmp
clc
lds
lock
mov
ficom
(bad)
(bad)
(bad)
out
ret
(bad)
dec
xor
or
icebp
dec
cmp
pop
jmp
adc
jge
sar
and
xor
push
fild
cmp
(bad)
or
mov
lock
cmp
outs
das
scas
fwait
aas
mov
(bad)
fild
in
push
add
out
pop
cld
jae
pop
sub
(bad)
pop
aad
fisub
mov
test
mov
(bad)
jle
jg
movs
ret
outs
enter
dec
push
xor
pushf
dec
dec
mov
(bad)
(bad)
mov
dec
jmp
shl
mov
loop
pop
sub
test
pop
cdq
sar
fisubr
inc
pop
fs
(bad)
(bad)
(bad)
out
jge
and
fild
or
pop
andnps
push
sub
sbb
clc
jno
cmp
fwait
mov
lds
ins
popf
fimul
xchg
(bad)
fdivp
mov
pop
fldl2t
int
shl
add
mov
cmps
pop
(bad)
(bad)
(bad)
dec
es
jbe
test
add
mov
push
sbb
xchg
dec
sub
(bad)
(bad)
(bad)
jl
pop
(bad)
push
pop
call
lds
shr
lea
push
popa
pop
fnstsw
adc
cmps
add
aaa
push
and
sbb
(bad)
(bad)
in
dec
sbb
les
shl
pop
and
fimul
popa
add
(bad)
(bad)
fucomip
(bad)
jge
xor
fs
pop
mov
sahf
cmp
sub
sub
(bad)
push
sti
mov
sbb
call
mov
aad
ja
es
ja
or
dec
stos
jg
(bad)
(bad)
(bad)
frstor
adc
mov
jmp
mov
aas
je
push
test
push
push
xchg
(bad)
xchg
ret
push
hlt
call
xchg
or
imul
xchg
push
sbb
std
jmp
addr16
cmp
aam
mov
(bad)
sub
inc
into
or
stos
arpl
dec
sti
(bad)
sub
imul
xlat
dec
dec
ror
test
jnp
ret
enter
cmp
xchg
sub
cwde
pop
mov
adc
pop
xchg
add
(bad)
popa
xchg
xchg
es
shl
sub
mov
(bad)
inc
repnz
das
cld
mov
adc
sbb
inc
inc
sbb
pop
pop
shr
(bad)
fisttp
sar
std
fidiv
mov
ja
and
data16
ret
jno
adc
inc
jmp
add
fild
into
outs
sbb
test
(bad)
call
popa
ret
shr
lods
adc
arpl
adc
jno
xor
mov
scas
adc
cld
mov
sub
xchg
loope
imul
and
adc
mov
movs
and
xor
repz
(bad)
jmp
pop
xchg
je
mov
sub
cmp
stc
dec
(bad)
pop
(bad)
(bad)
mov
inc
ret
inc
xor
cld
(bad)
(bad)
jmp
sub
pushf
lea
adc
into
xchg
adc
xchg
jbe
test
aaa
push
(bad)
(bad)
jmp
push
test
add
(bad)
jmp
popf
imul
xchg
shr
and
(bad)
push
jmp
stos
mov
pusha
dec
test
test
adc
nop
sti
pop
ins
pop
cmps
pop
push
add
dec
or
push
jnp
pop
cld
cli
mov
dec
daa
(bad)
jle
ret
(bad)
dec
push
in
mov
push
into
enter
and
rcl
xchg
call
call
in
push
cmp
add
fdivp
add
lds
in
mov
jmp
cmc
(bad)
jmp
jb
inc
cmc
jmp
in
jnp
lods
pop
cwde
add
mov
jb
fs
(bad)
movs
xchg
sar
ins
aas
fld
lods
in
inc
push
rol
fld
call
push
dec
rol
cmp
daa
push
and
shl
mov
xchg
push
scas
cld
push
gs
packuswb
sbb
loop
(bad)
xchg
cli
fdiv
jne
inc
dec
dec
xchg
mov
popf
pop
jbe
jmp
scas
sahf
fcom
loopne
sub
hlt
dec
inc
sub
push
jl
aam
dec
into
mov
(bad)
aad
(bad)
push
jo
pop
ffree
sub
jns
aad
mov
imul
(bad)
cmp
aad
sti
mov
clc
out
dec
sbb
xor
call
test
shl
sar
(bad)
(bad)
out
jecxz
push
mov
cmp
(bad)
call
jmp
and
push
jnp
repz
mov
mov
cld
inc
xchg
ja
cmps
rcl
pop
mov
dec
sbb
jge
jno
jl
or
call
adc
mov
fdivrp
pop
(bad)
movs
pop
or
adc
sub
jmp
ret
adc
sbb
xlat
loopne
dec
sub
jb
fadd
inc
pop
pop
bound
and
movs
(bad)
rol
or
inc
sbb
fst
mov
loopne
dec
sbb
stc
inc
inc
test
repnz
aaa
adc
cmp
mov
dec
aad
ss
out
(bad)
(bad)
jmp
jl
mov
rcl
mov
mov
push
inc
pop
hlt
(bad)
(bad)
dec
rcl
scas
(bad)
fdiv
add
or
test
xor
jg
ret
cmps
popa
fsub
jmp
add
mov
cmp
cwd
pop
mov
iret
push
or
xor
dec
(bad)
(bad)
fcomip
in
ins
mov
mov
lods
pop
fsubr
outs
sti
lods
xchg
push
inc
mul
sahf
jl
in
sbb
ret
inc
ss
mov
fisttp
push
inc
call
pop
mov
pop
mov
test
stc
mov
clc
add
(bad)
jmp
push
sbb
xchg
mov
mov
mov
pop
int3
push
sti
mov
push
movs
repz
sbb
or
sbb
add
(bad)
(bad)
call
xor
bound
inc
sub
cmp
mov
mov
jge
push
and
out
add
jne
xchg
dec
sub
(bad)
push
xchg
mov
push
dec
xor
dec
pop
or
jne
in
movs
push
mov
and
ja
mov
mov
bound
pop
cmp
fldcw
arpl
push
cld
and
addr16
jp
mov
stos
sbb
(bad)
(bad)
cmp
sbb
adc
jge
inc
sbb
mov
mov
(bad)
jmp
pop
fwait
adc
jo
mov
adc
sbb
and
aad
aas
mov
rol
in
jo
sub
sbb
data16
std
mov
dec
sub
jg
mov
aam
adc
adc
push
sub
push
mov
aaa
(bad)
clc
jns
xchg
mov
aas
retf
pop
xchg
push
out
ret
or
aaa
or
in
(bad)
dec
call
ret
xor
inc
inc
xchg
in
fbld
aad
and
lods
std
sub
call
mov
pop
sub
jmp
xlat
cdq
sbb
xchg
mov
or
mov
stos
imul
and
xor
(bad)
(bad)
mov
in
dec
xor
sub
xchg
dec
rcl
int3
lahf
in
inc
xchg
inc
inc
dec
cld
(bad)
mov
adc
loop
jnp
cmp
repz
mov
aas
(bad)
out
dec
mov
mul
inc
inc
mov
mov
sbb
cmps
cli
adc
mov
mov
sar
sar
xor
js
cdq
into
mov
mov
and
(bad)
(bad)
jmp
movs
cmp
mov
dec
jnp
jns
or
lock
ret
mov
(bad)
(bad)
aas
scas
sub
xchg
pop
shl
retf
adc
mov
pop
jbe
mov
xchg
retf
icebp
mov
jg
mov
bound
(bad)
(bad)
out
xchg
outs
lods
xchg
icebp
retf
sub
cmc
cmps
add
lods
stos
mov
add
addr16
cdq
sar
test
pushf
add
cwde
jecxz
jmp
sbb
xchg
in
inc
shl
idiv
call
int
aas
inc
cmp
cli
pop
and
lea
mov
ins
xor
(bad)
jmp
lea
loope
mov
and
sub
lock
push
push
sbb
push
dec
les
fwait
mov
pop
jge
dec
mov
inc
push
or
fldenv
(bad)
mov
jmp
sbb
stos
lods
scas
fld
or
cmc
add
(bad)
(bad)
inc
cmovae
mov
pop
scas
fadd
xor
mov
or
dec
imul
out
(bad)
sbb
mov
mov
sar
or
leave
jg
dec
std
jae
adc
jecxz
xchg
nop
(bad)
and
xchg
cld
inc
and
jb
jnp
popf
test
adc
outs
pop
adc
cmp
enter
or
test
(bad)
push
ret
xchg
cmps
lds
sahf
add
test
mov
(bad)
push
cld
xor
scas
sti
adc
hlt
push
(bad)
pop
in
add
sub
ret
push
das
call
ja
push
pop
(bad)
pop
aad
pop
(bad)
(bad)
(bad)
(bad)
jmp
xor
mov
jo
cmp
xchg
hlt
dec
sbb
cmp
push
pcmpeqw
(bad)
mov
shl
push
pusha
test
(bad)
dec
push
mov
js
ins
push
clc
push
(bad)
call
(bad)
pop
adc
test
(bad)
repnz
cmc
and
mov
lock
jmp
je
out
and
fistp
sub
int3
xchg
mov
mov
std
je
dec
ret
aad
dec
xchg
xchg
out
cli
(bad)
(bad)
jg
sti
add
in
clc
mov
in
sub
xchg
sbb
imul
dec
fimul
xor
jl
sbb
dec
adc
addr16
fild
jg
(bad)
xor
imul
(bad)
(bad)
fnstsw
xchg
mov
jo
mov
inc
push
aaa
clc
(bad)
dec
test
xchg
dec
adc
mov
pop
(bad)
(bad)
(bad)
dec
shl
jns
xchg
cmp
inc
mov
sub
call
js
cmp
(bad)
mov
add
push
inc
ins
das
inc
es
movs
inc
pop
scas
jge
(bad)
(bad)
(bad)
jmp
sbb
xchg
xchg
loope
dec
or
ja
push
aas
or
or
dec
div
popa
and
lea
push
mov
xchg
add
mov
pop
imul
pop
mov
pop
out
sbb
std
(bad)
inc
lods
pushf
dec
lds
dec
in
fistp
lea
and
(bad)
jmp
push
scas
scas
data16
dec
or
xchg
loop
mov
inc
mov
or
mov
push
and
mov
push
movs
pop
pop
adc
stc
push
jnp
mov
mov
sti
mov
(bad)
(bad)
jmp
loopne
sbb
jmp
push
cmp
mov
add
(bad)
(bad)
(bad)
out
dec
imul
xchg
mov
and
shl
out
inc
pop
inc
ret
cmps
sub
or
or
(bad)
(bad)
mov
mov
mov
sar
inc
aad
cmc
sahf
push
cmp
sub
push
adc
pop
icebp
(bad)
push
fsubr
rol
gs
clc
sti
jecxz
mov
add
(bad)
(bad)
inc
in
and
dec
fidiv
(bad)
cld
scas
xchg
dec
call
pop
test
pop
and
inc
mov
jbe
sub
push
push
cmp
call
xchg
dec
test
sub
push
in
test
inc
mul
mov
jg
(bad)
call
dec
pop
xor
leave
sbb
jnp
xchg
pop
out
pop
outs
hlt
mov
pop
dec
push
cmp
mov
dec
dec
jbe
mov
retf
cli
jnp
jne
xchg
xor
cwde
inc
cmc
cwde
(bad)
(bad)
(bad)
dec
mov
mov
jbe
iret
mov
std
psrlq
retf
dec
popfw
xchg
or
push
push
inc
cmps
xor
jmp
jmp
mov
(bad)
(bad)
(bad)
jmp
test
stos
pop
and
xchg
cli
cmp
frstor
add
(bad)
dec
rcr
int
cmps
dec
mov
lods
mov
adc
movs
(bad)
(bad)
push
clc
arpl
into
aad
mov
(bad)
repnz
jb
add
xor
xor
cmp
adc
out
pop
jle
mov
(bad)
cmp
out
inc
mov
clc
cmp
les
xchg
(bad)
(bad)
call
test
inc
xchg
push
push
ffreep
lea
fnsave
add
int3
cmp
es
mov
adc
sub
outs
sbb
scas
adc
pop
jbe
sbb
or
pop
mov
add
mov
hlt
call
push
cwde
mov
push
icebp
jno
and
(bad)
(bad)
push
jle
ret
cmps
and
xchg
sti
jnp
aam
inc
push
out
pop
sbb
cmps
pop
cmps
mov
(bad)
es
test
iret
ret
or
loope
fs
and
icebp
(bad)
push
add
ss
cs
jmp
pop
or
or
out
scas
cld
(bad)
inc
or
mov
scas
pop
int3
pop
cmp
rcr
and
xchg
js
pop
idiv
(bad)
jmp
shl
mov
push
shr
int
rcr
in
push
add
aas
mov
xlat
je
aad
pop
or
push
cmp
or
mov
stc
aas
inc
popa
ja
add
pop
pop
jl
sub
ds
xchg
inc
hlt
inc
mov
mov
xor
in
loope
jmp
(bad)
jne
sar
out
sbb
jg
cmps
inc
push
mov
inc
sbb
cmp
lock
scas
mov
sub
push
jle
xlat
push
in
lea
outs
iret
loope
out
cli
cmp
inc
cmp
mov
mov
das
(bad)
(bad)
mov
pushf
jg
pop
mov
xchg
jmp
push
out
or
adc
sub
mov
sar
test
or
mov
call
sub
lds
adc
mov
add
cli
icebp
(bad)
bound
(bad)
loop
(bad)
or
add
rcr
mov
push
pop
mov
jmp
add
iret
add
fcomip
(bad)
fbstp
xchg
xchg
ss
sub
stos
ins
jmp
test
pop
test
dec
adc
add
dec
stos
inc
mov
xor
lds
cli
pop
sub
(bad)
paddd
mov
in
xor
push
jp
inc
push
test
xchg
add
movs
popf
movs
mov
cmp
test
in
cli
jmp
push
mov
out
imul
in
push
inc
rcr
sbb
add
mov
push
mov
cmc
sbb
push
out
sbb
mov
xlat
outs
adc
pop
jbe
arpl
cld
test
jecxz
call
call
jno
push
test
mov
jle
clc
jno
xchg
call
push
(bad)
inc
inc
jno
cmp
repz
sub
inc
jo
pop
mov
call
mov
add
mov
data16
xchg
or
movs
nop
inc
repz
mov
fs
adc
loope
stos
data16
ins
mov
(bad)
dec
mov
lods
or
aaa
call
pushf
stos
movs
in
in
fisub
sub
call
xchg
movnti
xchg
xchg
adc
adc
adc
push
adc
popa
or
push
call
(bad)
inc
push
stos
fs
or
cmp
out
lds
pop
lahf
mov
mov
cmp
push
fcomp
push
mov
imul
push
or
std
mov
jg
(bad)
jmp
dec
aaa
cmp
add
fsubrp
mov
imul
cmp
(bad)
(bad)
out
imul
mov
xchg
add
push
push
push
fsubr
clc
(bad)
jmp
jle
es
add
lock
jmp
add
(bad)
(bad)
(bad)
dec
mov
push
dec
add
mov
jle
xchg
aaa
dec
test
and
aad
iret
jae
(bad)
jmp
dec
push
cmps
pushf
je
push
sbb
sub
repnz
(bad)
(bad)
fstp
sub
rcl
cmp
mov
cmps
pop
idiv
outs
mov
and
inc
mov
push
aas
cmp
in
cmc
lahf
ret
(bad)
(bad)
call
cwde
dec
pop
dec
inc
arpl
jno
push
cmps
push
dec
dec
add
cmp
mul
lock
mov
adc
xchg
ins
xchg
aam
(bad)
call
or
cmp
mov
movs
ss
(bad)
(bad)
call
iret
mov
jecxz
test
pop
rcr
push
dec
or
call
mov
inc
jecxz
and
mov
(bad)
jg
dec
sbb
lea
inc
jne
pushf
maskmovq
test
test
aas
jmp
fisubr
pop
sub
mov
loop
add
jecxz
sti
inc
cmp
push
xor
stos
out
addr16
out
jecxz
xchg
xchg
add
ret
mov
mov
fs
mov
mov
xor
cmp
push
lock
jp
push
aam
fs
inc
cld
dec
and
out
inc
adc
xor
and
das
inc
pop
adc
cld
(bad)
jmp
dec
pop
and
cmp
cmp
es
mov
stos
out
gs
loope
scas
or
call
pop
mov
jmp
pushf
push
(bad)
jp
pusha
(bad)
(bad)
push
cli
rol
int3
es
push
pushf
jns
jmp
daa
out
sbb
outs
mov
pop
ficomp
call
xlat
mov
test
(bad)
push
jbe
or
stc
into
popa
sbb
mov
push
mov
xor
push
xchg
mov
jecxz
loop
mov
cmp
fprem
inc
pop
pop
in
sbb
or
bound
(bad)
call
movs
aaa
jmp
pop
and
and
dec
and
aas
stc
call
cld
bound
inc
int3
sahf
pop
adc
dec
ret
pushf
clc
and
pop
loopne
mov
jb
loope
xchg
add
push
mov
sub
adc
pop
in
inc
imul
lods
int3
adc
sbb
pop
repnz
add
(bad)
dec
pop
loop
fdiv
movs
rcr
cmps
hlt
dec
movs
out
(bad)
in
(bad)
jmp
out
mov
nop
(bad)
fisub
push
jg
icebp
les
iret
sub
sbb
xchg
sbb
inc
inc
push
add
jns
sar
fst
nop
loope
out
xchg
movs
cdq
mov
repz
call
in
sahf
aam
sub
pushf
sub
mov
and
sar
or
std
mov
clc
stos
sub
jmp
fld
xchg
outs
clc
jmp
bound
pop
inc
loopne
sbb
mov
sti
and
cli
mov
push
mov
xor
fist
inc
push
rcr
fisttp
imul
mov
inc
ins
js
dec
ret
scas
xchg
repnz
cmc
dec
(bad)
mov
or
sub
mov
fnclex
xor
mov
outs
in
fs
jmp
sbb
rol
aaa
add
push
sub
clc
push
mov
(bad)
inc
cmc
adc
nop
fistp
int
jmp
push
push
(bad)
test
movs
jbe
jle
fstp
inc
mov
mov
inc
jmp
ds
pusha
or
cli
mov
lds
or
mov
inc
aad
mov
lds
xlat
call
(bad)
(bad)
jg
cld
mov
jne
pop
cmp
or
and
add
cli
(bad)
mov
xchg
ds
ficom
pop
cwde
pop
aam
add
test
inc
dec
jg
(bad)
pop
stos
sbb
sub
into
mov
jle
and
inc
loop
add
mov
lods
test
inc
adc
daa
retf
dec
ss
fadd
mov
cmp
push
shl
pop
sahf
and
push
and
mov
pop
sar
int
adc
mov
cmp
push
adc
fwait
(bad)
(bad)
push
ror
popa
rcl
inc
mov
mov
or
call
je
stc
(bad)
push
or
and
adc
cmp
cmc
sub
pop
pop
aam
(bad)
jmp
mov
cmp
out
data16
enter
repnz
push
(bad)
out
sub
push
rcl
ds
or
loop
jnp
stc
pop
inc
cli
xchg
add
xchg
mov
jmp
cmc
dec
mov
in
add
or
into
mov
fmul
inc
gs
(bad)
jg
mov
in
dec
mov
call
repz
sahf
ins
cmps
jl
clc
(bad)
(bad)
aas
mov
push
out
ins
cmp
lods
mov
cli
int
xchg
mov
cwde
call
ss
adc
mov
jg
clc
push
jns
adc
add
stos
pop
pop
lods
mov
out
(bad)
pop
cwde
mov
push
inc
inc
push
xor
adc
std
push
ficom
and
cs
cmc
jo
xchg
jb
mov
stos
lods
adc
mov
jg
fs
xchg
or
push
xor
(bad)
fild
inc
add
cmp
pop
(bad)
out
add
jecxz
push
out
std
mov
dec
inc
jb
jne
pop
xor
scas
sbb
jle
fs
or
movs
add
pop
jmp
(bad)
mov
fild
aad
cdq
and
gs
xor
jnp
adc
push
fistp
mov
push
jno
mov
cmp
xchg
cld
(bad)
dec
hlt
sbb
push
(bad)
pop
int3
cmps
jb
xor
jmp
shr
enter
mov
into
das
clc
(bad)
dec
and
mov
xchg
ins
imul
in
jb
enter
call
dec
pop
cmps
xlat
push
pop
scas
mov
add
(bad)
dec
cmp
dec
lods
push
mov
test
ins
lea
or
pop
pop
jo
and
(bad)
inc
bound
push
inc
and
pop
scas
mov
pop
push
fbld
ds
cmp
pop
jge
(bad)
push
cld
inc
daa
scas
and
(bad)
cmc
(bad)
call
enter
pop
xchg
cmp
push
cwde
dec
mov
cmps
xor
in
mov
cld
jne
xor
int
(bad)
fucomip
dec
mov
mov
push
and
dec
push
jl
push
dec
loop
test
repnz
jmp
hlt
push
add
ret
cs
xchg
adc
push
sub
add
push
push
fnstsw
cli
dec
jmp
sub
and
(bad)
ret
into
addr16
iret
fsubr
(bad)
(bad)
call
jbe
adc
cmps
aam
loope
hlt
dec
mov
and
lods
dec
aam
mov
test
int
(bad)
out
call
xchg
stos
mov
(bad)
out
(bad)
jne
je
aad
cmc
mov
jno
jo
mov
lods
(bad)
(bad)
fiadd
sahf
mov
pop
sbb
inc
dec
mov
imul
cmps
xchg
adc
data16
fcomp
mov
ds
push
hlt
jg
pop
and
mov
test
repz
or
inc
xor
cmp
sbb
inc
outs
add
std
mov
or
in
and
in
jo
sub
xchg
icebp
nop
dec
mov
inc
cli
mov
lea
dec
and
int
hlt
retf
inc
std
mov
mov
add
sbb
mov
and
cmp
mov
pop
mov
mov
dec
mov
sub
stos
jl
(bad)
(bad)
jmp
jne
xor
push
xor
inc
outs
or
jle
inc
mov
bound
inc
js
ret
das
mov
xor
push
and
fsub
pop
xchg
in
(bad)
fbld
add
ds
shl
adc
sbb
xor
push
xor
stos
fs
(bad)
mov
out
ds
ror
scas
popa
popf
xlat
imul
ins
lds
mov
call
pop
cmps
and
push
(bad)
(bad)
inc
xchg
push
loope
mov
(bad)
and
dec
stos
call
and
xor
jmp
dec
mov
(bad)
fdivr
shr
inc
cdq
sbb
data16
(bad)
(bad)
jg
and
mov
jmp
and
(bad)
(bad)
inc
mov
push
lock
mov
pop
lea
rol
or
cmps
dec
cld
ja
leave
mov
hlt
xchg
pop
jp
es
mov
push
push
mov
fdivr
push
sar
xchg
hlt
mov
dec
rol
cdq
pop
sub
xor
(bad)
(bad)
call
jl
lods
ds
lods
cs
fistp
xor
sub
loope
call
pop
stos
pusha
jmp
ret
push
clc
loop
sub
sbb
xchg
mov
sub
jnp
mov
sbb
repnz
jmp
les
add
call
mov
test
(bad)
(bad)
call
mov
lahf
xchg
xor
fyl2xp1
inc
test
xchg
jae
xor
pop
push
fisttp
inc
shl
sbb
fbld
in
sahf
jmp
or
out
adc
pop
cmp
jae
jne
rcl
in
pushf
pop
in
xchg
push
push
dec
call
pop
pop
jmp
or
sbb
jl
or
sahf
ss
xchg
push
pop
f2xm1
cmps
aaa
(bad)
jg
pusha
test
sbb
push
call
fdivr
mov
inc
pop
cmp
in
cli
or
fwait
push
sub
call
push
push
push
in
add
dec
and
sar
pusha
mov
inc
and
add
inc
adc
add
lea
loop
(bad)
fisttp
(bad)
mov
push
(bad)
jns
enter
loop
dec
les
loopne
(bad)
jl
cmc
(bad)
xchg
ins
push
adc
enter
inc
mov
cdq
leave
xchg
movs
dec
add
jg
scas
mov
aam
call
or
inc
fnsave
mov
rcr
jecxz
inc
retf
fcomp
stos
out
cdq
ss
mov
jnp
lock
sub
jle
outs
jns
(bad)
int3
shl
outs
xor
jg
pop
fs
mov
jg
(bad)
pop
pusha
pop
mov
loope
push
into
mov
inc
jl
lock
out
mov
fisttp
cmps
and
mov
and
clc
les
retf
sub
enter
adc
mov
clc
or
mov
add
std
idiv
call
jo
cmp
push
in
sti
mov
rcl
scas
imul
sbb
popa
inc
add
call
jno
iret
mov
test
inc
push
jp
nop
mov
inc
and
call
in
xchg
dec
std
(bad)
(bad)
call
loope
push
jno
aam
cmp
ja
mov
(bad)
mov
xchg
es
imul
cmp
jmp
std
push
repnz
mov
mov
js
push
test
(bad)
pop
clc
sbb
or
cld
(bad)
jmp
call
pushf
(bad)
test
lock
xchg
mov
inc
or
out
ss
xlat
mov
(bad)
jg
out
mov
retf
jnp
mov
std
adc
fucom
mov
mov
pop
dec
mov
out
cwde
cs
aaa
cmp
outs
inc
pop
mov
loope
push
pop
lock
std
ret
in
ret
pop
je
inc
xor
in
push
jae
in
shl
aad
adc
sbb
dec
out
cmp
add
hlt
lds
imul
xchg
cld
and
pop
fwait
clc
push
mov
es
or
mov
or
pop
aaa
sub
shr
mov
dec
xlat
stos
dec
rcl
push
clc
(bad)
(bad)
(bad)
mov
lea
add
dec
xchg
add
mov
push
fnclex
inc
mov
inc
fisub
mov
(bad)
push
inc
out
push
iret
pop
adc
xchg
and
mov
jbe
inc
loope
sub
mov
(bad)
push
ror
stos
xor
cmps
xchg
call
test
ror
test
repz
hlt
add
popf
and
mov
(bad)
jmp
mov
mov
pop
pop
xchg
inc
push
pop
or
cld
loopne
outs
das
(bad)
(bad)
jmp
test
cmps
mov
outs
add
push
in
ret
(bad)
cmp
and
(bad)
mov
lds
mov
sub
cli
jg
outs
movs
mov
mov
push
and
xchg
lock
inc
daa
fld
sub
push
cmp
sti
xchg
cmp
adc
mov
(bad)
jg
pushf
adc
xchg
int
data16
push
in
sub
pop
jmp
xchg
fst
sar
fcomp
mov
inc
cmp
(bad)
(bad)
sbb
xrelease
adc
sbb
jmp
pop
ja
adc
dec
push
imul
(bad)
(bad)
(bad)
call
(bad)
call
gs
retfw
call
out
ret
int
vphaddwq
clc
(bad)
push
jbe
xchg
imul
add
or
(bad)
fild
inc
test
repnz
call
fwait
lea
repnz
xchg
sbb
jecxz
push
or
push
cld
aaa
imul
dec
adc
or
cmc
das
xchg
jnp
jae
out
out
(bad)
jg
loopne
fild
mov
cli
xchg
xchg
test
aam
shl
call
inc
cmp
aam
les
(bad)
jg
mov
movs
retf
cs
mov
data16
and
adc
adc
push
inc
add
cmp
dec
or
mov
adc
(bad)
mov
adc
mov
push
cld
push
add
in
(bad)
call
xlat
fs
and
rol
xor
test
jle
aad
xchg
test
inc
push
adc
loope
and
adc
mov
mov
movs
xlat
rol
dec
js
retf
pushf
stos
cmps
mov
cli
inc
pusha
out
fst
or
cli
push
stc
repnz
add
inc
fwait
push
xchg
icebp
in
cmps
xor
out
imul
es
and
mov
pop
sub
repz
xor
sub
push
out
add
dec
loopne
call
add
cmp
pop
xor
cli
repz
mov
call
push
xchg
rol
mov
and
pop
stos
cld
out
cmp
dec
cmp
(bad)
jmp
ja
dec
inc
cmp
popf
dec
mov
xor
sub
dec
mov
(bad)
fimul
lods
xchg
mov
movs
xchg
popa
(bad)
enter
pusha
push
in
or
sbb
xchg
mov
js
in
pop
mov
jbe
ds
sub
movs
mov
(bad)
cld
(bad)
call
mov
(bad)
pushf
retf
shl
xchg
int3
fiadd
pop
inc
std
(bad)
(bad)
cli
dec
fwait
mov
mov
(bad)
aam
ss
(bad)
push
gs
(bad)
push
es
rol
cmp
in
cmp
iret
shl
push
out
vcomisd
popa
aad
cmps
mov
push
add
fdivr
test
inc
and
icebp
pop
cmovs
shl
or
fild
fimul
or
and
add
mov
mov
ffreep
xchg
(bad)
(bad)
dec
xchg
pop
dec
scas
scas
not
fild
dec
xlat
mov
push
(bad)
call
mov
inc
in
mov
mov
fistp
hlt
mov
push
sahf
loop
push
call
aad
inc
and
xchg
mov
add
xchg
sti
(bad)
xlat
sbb
in
xchg
jle
push
test
aaa
sahf
loope
add
mov
push
test
(bad)
inc
test
popf
repnz
mov
(bad)
(bad)
fbld
sub
imul
and
popf
stos
cmp
mov
pop
ss
arpl
(bad)
inc
pop
fwait
jb
fisttp
sbb
xchg
(bad)
loope
add
xlat
lock
sti
retf
jge
mov
sbb
push
xchg
in
aas
(bad)
xchg
(bad)
fwait
pop
test
shr
(bad)
pop
dec
push
cli
xlat
push
jl
add
ins
xchg
push
cmp
lock
(bad)
inc
ss
pop
out
in
iret
fcmovnbe
or
jbe
sub
xchg
xchg
add
cmp
pop
test
mov
dec
pop
scas
xor
test
loopne
(bad)
sti
outs
sub
enter
or
movs
mov
scas
clc
bound
dec
mov
inc
fwait
cwde
cli
sub
popa
nop
outs
dec
pop
pop
addr16
mov
call
inc
dec
mov
das
repnz
cmp
sar
pop
sbb
push
icebp
fst
call
push
xchg
mov
cwde
(bad)
iret
std
in
or
std
test
aad
sub
pop
and
sub
push
(bad)
cmps
aam
int3
popa
(bad)
jmp
push
sub
and
bndstx
dec
lds
std
test
jmp
adc
add
aad
enter
cmp
lods
pop
arpl
sub
nop
je
add
inc
(bad)
pusha
sbb
cmp
xor
repnz
fcmovnu
shr
call
repz
jbe
push
cmp
(bad)
(bad)
std
inc
retf
add
movs
xor
sub
mov
(bad)
(bad)
jmp
and
cmp
and
mov
dec
pop
and
dec
into
(bad)
lahf
mov
inc
fsubp
(bad)
call
jl
aam
push
jae
add
push
(bad)
fild
lods
cdq
test
sub
push
shr
outs
je
pusha
lahf
dec
loopne
call
test
xchg
xor
je
and
ror
inc
adc
movs
(bad)
dec
mov
push
xchg
sub
mov
jno
cmp
mov
dec
dec
mov
xor
mul
data16
push
cmp
(bad)
jmp
cmp
jmp
neg
xchg
push
ss
push
fucomi
mov
sub
mov
jmp
cmp
mov
pusha
out
(bad)
(bad)
(bad)
(bad)
aas
int3
mov
lods
push
imul
jmp
pop
push
xchg
push
aad
test
cmps
dec
(bad)
jg
or
or
xchg
pop
xchg
sbb
jbe
inc
in
imul
js
push
pop
outs
scas
out
pop
adc
cmp
aaa
inc
add
push
pop
ds
ja
(bad)
jmp
dec
mov
xor
or
dec
push
jge
cld
(bad)
inc
and
sbb
pop
add
jb
outs
outs
bound
movs
test
clc
add
int3
and
or
outs
sub
inc
jmp
sbb
mov
dec
xchg
and
aaa
jbe
and
(bad)
jl
mov
cmp
push
fisub
jecxz
dec
bound
call
add
xchg
jnp
pop
mov
mov
pop
cmp
jg
std
cmps
(bad)
add
push
clc
popa
add
cs
pusha
clc
sar
(bad)
(bad)
call
jno
aam
pop
aam
jne
xor
popa
add
mov
jmp
bound
ds
jmp
mov
pop
cmps
enter
xor
(bad)
mov
jbe
repz
cdq
lods
jne
jmp
jmp
es
inc
(bad)
(bad)
dec
mov
add
pop
test
inc
or
mov
repz
(bad)
dec
cmps
xchg
test
jg
(bad)
push
jg
mov
fmul
add
retf
popf
pop
cwde
dec
in
cwde
xchg
(bad)
(bad)
dec
stc
enter
jecxz
cdq
cdq
test
dec
sti
push
in
sbb
in
clc
cmp
daa
xor
(bad)
(bad)
push
mov
xchg
jnp
mov
sub
xchg
lahf
cs
pop
std
push
dec
stos
repz
cmp
(bad)
(bad)
push
sar
jmp
dec
or
cwde
stc
aad
ror
cmps
inc
loopne
add
ins
and
call
(bad)
jmp
pop
out
cmp
movs
push
xor
pop
push
out
ss
xchg
sbb
fwait
into
js
dec
adc
(bad)
call
repnz
cs
push
cmp
ret
popf
cdq
add
inc
std
(bad)
mov
cmp
es
dec
(bad)
lea
sub
jae
std
jmp
push
std
pop
pop
out
jne
xchg
das
xchg
mov
xor
pop
sub
xchg
ret
push
cld
(bad)
(bad)
jmp
int3
mov
imul
push
ss
xchg
mov
(bad)
rcl
jmp
ret
cmps
pop
(bad)
jle
daa
in
xchg
lods
sub
aas
out
int3
dec
movs
(bad)
fistp
mov
pop
ins
mov
jbe
test
inc
in
mov
shl
scas
cdq
fidiv
pop
sahf
adc
jmp
push
leave
and
test
dec
repz
adc
rcr
xchg
pusha
lock
pop
cmps
fs
mov
loope
popa
pop
and
inc
clc
(bad)
jmp
adc
adc
xchg
loopne
mov
test
add
clc
ds
cs
popa
stos
jmp
push
pop
mov
(bad)
(bad)
mov
sahf
scas
xor
arpl
pop
lods
popa
xor
dec
icebp
or
in
cli
call
inc
ins
stc
aas
es
jno
adc
sar
jg
call
(bad)
lgdtd
(bad)
arpl
or
dec
jns
ds
out
add
loopne
(bad)
(bad)
out
mov
fld
int
fwait
out
es
jmp
or
cmp
call
cli
je
ret
pop
sub
xor
aas
xchg
cmp
jb
call
clc
inc
sub
bound
je
outs
sbb
xchg
jg
stc
jnp
(bad)
jmp
mov
mov
(bad)
mov
adc
out
cmc
call
jno
adc
mov
sub
ss
push
sub
loopne
mov
and
jno
imul
push
std
(bad)
cmp
(bad)
jg
cmc
sbb
js
xchg
iret
(bad)
push
pop
pop
jb
mov
adc
mov
lods
inc
pop
pop
sub
cmp
jmp
sub
scas
mov
aam
add
fcmovbe
add
mov
jbe
mov
mov
test
in
push
jecxz
daa
mov
adc
scas
ds
mov
jnp
imul
inc
int3
shr
in
lods
push
pop
ret
push
add
stos
xchg
in
cld
std
or
addr16
xchg
xchg
ret
sub
push
stos
cmp
daa
sbb
cmps
(bad)
stc
inc
dec
inc
xor
xchg
push
push
inc
add
stc
cmps
sbb
cmc
sbb
mov
inc
adc
dec
dec
add
call
lds
pusha
mov
inc
inc
mov
daa
cmps
and
push
push
cmp
popa
fcompp
add
es
ficomp
xchg
dec
pop
(bad)
or
fidiv
jle
(bad)
in
(bad)
call
ror
xchg
dec
cmps
lock
inc
in
fwait
es
dec
(bad)
aad
mov
(bad)
fcos
(bad)
aas
clc
das
xor
pop
adc
inc
test
mov
(bad)
pop
mov
(bad)
(bad)
test
into
popa
sub
add
push
das
and
jmp
jo
scas
push
into
pop
sahf
cmp
jmp
call
and
lds
ret
add
sub
xchg
cli
push
out
adc
inc
add
shl
retf
and
xor
jmp
lock
mov
sbb
mov
repnz
imul
in
retf
sub
imul
test
jo
ret
imul
and
enter
inc
xchg
pop
pusha
fs
fbstp
xor
sub
aaa
(bad)
dec
xor
fisttp
(bad)
fbld
(bad)
test
mov
ror
lods
fsub
sub
inc
(bad)
(bad)
fst
mov
jl
inc
aam
scas
push
(bad)
pop
retf
cmp
sub
adc
jb
mov
pop
(bad)
(bad)
jmp
push
aad
add
mov
xchg
xor
(bad)
(bad)
call
xchg
or
xchg
nop
fisttp
or
lods
(bad)
call
jne
fcom
push
sub
retf
pop
jns
sbb
adc
clc
push
dec
sar
cs
div
leave
mov
or
push
dec
cld
(bad)
push
xchg
add
jb
shr
inc
add
(bad)
or
cli
and
mov
sub
retf
dec
ja
xlat
movs
sti
shl
mov
sar
scas
neg
sbb
cmp
cmps
dec
mov
xor
cs
int
(bad)
jmp
psubd
add
xchg
xor
shl
push
(bad)
(bad)
(bad)
dec
lahf
jmp
pop
push
ins
ds
imul
test
mov
cmp
iret
push
std
(bad)
jmp
cli
bound
imul
test
add
cmp
movs
mov
(bad)
(bad)
(bad)
test
das
adc
iret
push
(bad)
int3
inc
xchg
adc
jmp
mov
cmp
dec
cmp
mov
dec
push
sahf
clc
(bad)
(bad)
jg
aam
rcl
xacquire
and
mov
out
int
pop
sub
cwde
std
(bad)
fist
mov
imul
mov
mov
dec
dec
loopne
pop
add
repz
dec
jno
add
(bad)
(bad)
(bad)
jg
int
xchg
int3
cmp
jns
dec
jmp
xor
jmp
jmp
jns
cmp
mov
pop
and
lods
sbb
sub
(bad)
(bad)
jmp
mov
jne
mov
jae
les
and
loope
(bad)
xor
add
lahf
fistp
das
sub
pushf
dec
and
sbb
(bad)
(bad)
dec
dec
and
mov
in
pop
mov
test
push
scas
stc
push
and
popa
scas
(bad)
mov
movs
scas
jns
jno
xchg
inc
stos
das
ds
mov
xchg
inc
je
das
ret
pop
pop
jb
(bad)
cmp
movs
jecxz
pop
mov
add
repz
(bad)
(bad)
jmp
ja
jno
adc
repz
pop
fs
out
mov
fcmove
call
sbb
jmp
mov
repz
or
in
mov
ret
xchg
mov
mov
std
(bad)
dec
push
js
gs
fnstenv
xchg
push
cmp
test
(bad)
mov
adc
mov
movs
cmp
inc
jmp
jp
ud0
leave
clc
inc
adc
mov
int3
mov
repz
pop
sbb
push
(bad)
cli
mov
mov
jecxz
jbe
adc
inc
adc
mov
jmp
or
mov
mov
fistp
fs
(bad)
push
and
jg
add
sahf
pop
(bad)
into
adc
sub
add
call
cmp
and
xchg
aaa
(bad)
adc
sti
mov
ficomp
jnp
movs
jne
and
inc
xchg
fbld
or
xor
push
out
sbb
not
mov
call
cmp
pushf
inc
mov
adc
bound
xchg
scas
xchg
adc
push
and
or
push
mov
jl
lahf
ja
inc
cs
(bad)
out
(bad)
dec
push
das
dec
push
in
inc
sbb
fiadd
pop
mov
jmp
test
loope
sub
pop
mov
lods
repnz
stc
aam
(bad)
stc
adc
retf
fcomp
add
jbe
out
mov
xor
and
mov
jmp
js
ds
out
cmps
(bad)
in
push
jp
jns
push
(bad)
(bad)
(bad)
jmp
lods
mov
neg
pop
mov
push
xchg
call
in
clc
lock
dec
hlt
xlat
and
das
mov
repz
(bad)
inc
(bad)
inc
pop
(bad)
sbb
adc
mov
inc
push
dec
loop
xlat
push
clc
call
(bad)
in
and
test
ret
movs
scas
sbb
cld
(bad)
(bad)
jns
scas
test
adc
test
test
sub
loope
cmp
imul
ds
jmp
and
gs
mov
inc
jg
out
jmp
mov
fcom
(bad)
(bad)
mov
mov
es
cmp
adc
retf
sti
push
(bad)
dec
loope
call
pop
call
dec
(bad)
call
fdivr
mov
pop
rcl
mov
mov
push
data16
push
jmp
mov
hlt
sbb
loop
push
aam
lods
pop
push
mov
inc
jge
or
setge
(bad)
call
bound
test
out
inc
loopne
mov
adc
inc
jmp
(bad)
(bad)
(bad)
jmp
fldcw
xchg
mov
dec
dec
xchg
test
jp
ins
adc
cmp
idiv
(bad)
call
fwait
dec
repz
jno
leave
mov
xchg
push
fnstenv
sub
push
test
(bad)
(bad)
call
(bad)
ja
jmp
lods
push
cs
mov
mov
(bad)
call
mov
call
pop
dec
in
sbb
xor
xor
das
gs
call
xchg
sub
ja
iret
cs
add
popa
inc
(bad)
(bad)
out
dec
fwait
mov
mov
add
pop
imul
repz
frstor
or
pop
or
jle
enter
cli
push
add
(bad)
(bad)
jmp
mov
pushf
mov
add
stos
or
jl
stos
ret
retf
cld
mov
out
adc
dec
pop
jo
push
pop
lods
in
xchg
movs
and
inc
pop
cmc
(bad)
jmp
shr
cmp
adc
push
cli
aam
out
(bad)
js
and
(bad)
cmp
push
ins
or
sub
add
and
mov
lds
or
mov
sbb
cmp
adc
lahf
push
aas
xchg
inc
cmp
sbb
push
popf
pop
loop
mov
lods
xchg
push
xor
sub
mov
sar
ja
(bad)
mov
retf
clc
dec
iret
xchg
int
xor
mov
test
sub
(bad)
dec
int3
loopne
or
and
cmps
dec
dec
add
mov
jg
mov
cwde
aam
mov
add
add
call
add
mov
inc
add
mov
enter
mov
shl
sub
fsubr
sub
dec
movs
mov
sahf
push
pop
lahf
paddd
test
jns
test
inc
inc
pop
mov
(bad)
scas
dec
(bad)
cmp
sbb
(bad)
ds
dec
neg
es
(bad)
(bad)
ficomp
fdivr
in
jecxz
mov
int
std
in
jp
(bad)
sbb
or
jbe
and
repnz
out
(bad)
retf
cmps
or
out
jmp
mov
hlt
pusha
mov
add
jle
out
sub
pop
(bad)
(bad)
jmp
mov
scas
mov
imul
pushf
sahf
cwde
sub
or
inc
test
mov
jnp
movs
cmps
test
test
repnz
adc
fistp
jecxz
fneni(8087
mov
retf
xlat
ret
fistp
(bad)
call
adc
stos
fwait
call
rol
lods
lods
scas
jmp
(bad)
jmp
imul
mov
in
(bad)
leave
in
inc
test
cld
(bad)
out
jmp
jecxz
repnz
sub
or
(bad)
jg
lahf
(bad)
outs
scas
outs
imul
push
sbb
jb
pop
jmp
xchg
movs
sub
inc
fnstsw
popf
sahf
cdq
and
(bad)
ffree
mov
mov
pushw
test
pop
ins
mov
in
(bad)
fcomp
in
lea
jmp
call
mov
loop
ret
in
cmp
scas
scas
scas
stos
mov
xchg
push
sbb
jp
loope
ret
(bad)
dec
arpl
jp
cmc
push
pop
pop
loope
rcr
das
(bad)
push
or
xchg
out
dec
sub
add
stos
mov
pop
out
idiv
lods
mov
xchg
call
(bad)
jmp
into
mov
ins
mov
jb
push
add
aad
and
pop
pop
and
stos
xchg
jg
loope
mov
lahf
sahf
fwait
in
(bad)
and
jbe
(bad)
(bad)
(bad)
jns
(bad)
into
leave
push
cwde
fcmovu
mov
xchg
adc
push
dec
xchg
dec
imul
adc
xchg
xchg
fwait
outs
mov
test
(bad)
mov
mov
mov
sub
popa
xchg
push
pop
fs
cmp
movs
xchg
xchg
not
out
idiv
leave
rcr
jmp
(bad)
out
es
test
in
lods
out
call
push
sub
(bad)
jmp
xchg
sub
gs
retf
mov
push
sbb
mov
enter
push
inc
in
loopne
test
idiv
mov
add
mul
(bad)
jmp
dec
cmps
cmps
cmps
stos
sub
sahf
(bad)
jecxz
jl
add
in
idiv
call
cld
adc
js
xchg
push
pop
(bad)
pop
mov
inc
jmp
add
jmp
cli
sti
test
mov
or
movs
out
loopne
push
dec
add
rcr
outs
sar
mov
and
ss
fisttp
adc
les
rol
(bad)
push
inc
dec
imul
stos
mov
fisub
mov
cmp
mov
cld
stc
and
cdq
xchg
or
mov
cmp
add
cmps
(bad)
(bad)
(bad)
fild
xchg
push
pop
cs
pop
enter
cmp
pushf
(bad)
dec
xchg
(bad)
(bad)
jmp
pop
out
(bad)
(bad)
mov
pop
pop
bound
mov
mov
(bad)
(bad)
mov
xchg
jmp
push
loopne
shr
mov
and
sub
pushf
pop
jg
hlt
push
cs
push
adc
popa
add
imul
mov
mov
and
jg
(bad)
dec
out
mov
sbb
cmps
imul
sub
pop
arpl
out
xchg
or
(bad)
into
retf
in
popf
fcompp
mov
mov
jbe
in
scas
(bad)
jmp
repnz
sub
clc
and
xchg
xchg
hlt
(bad)
aas
std
cwde
and
mov
xchg
push
pop
outs
(bad)
dec
dec
and
adc
mov
mov
mov
ins
mov
pop
pop
in
out
movs
movs
cmps
test
and
shl
mov
retf
sub
out
outs
lock
mov
jmp
call
movs
and
sbb
jmp
cmp
dec
mov
or
in
movs
dec
inc
mov
or
add
out
sub
outs
clc
sub
and
push
loopne
data16
addr16
in
and
out
lods
out
cmc
sub
call
ins
ins
sub
push
in
push
in
in
test
adc
in
addr16
fs
xchg
test
cmps
in
loopne
in
and
mov
imul
outs
jmp
test
mov
and
out
jmp
mov
(bad)
mov
cmps
in
out
out
movs
out
out
jg
sub
bound
jg
add
jmp
xlat
mov
imul
addr16
and
inc
outs
jmp
addr16
in
jecxz
inc
imul
ja
movs
call
push
push
mov
sbb
adc
gs
jmp
clc
jmp
nop
nop
adc
outs
in
pusha
in
jecxz
std
mov
push
dec
add
jmp
fidivr
or
fs
and
outs
out
jecxz
and
pop
add
mov
in
out
call
add
sub
in
push
adc
(bad)
mov
adc
push
push
outs
ins
loope
call
adc
push
out
sub
mov
sbb
or
arpl
in
push
pusha
jmp
jmp
fisttp
arpl
mov
inc
and
(bad)
jmp
or
sub
xchg
in
das
jecxz
in
scas
stos
fcmovnu
(bad)
(bad)
jmp
xor
add
out
popa
cmps
imul
and
out
push
out
imul
call
sub
jmp
mov
ins
sub
cld
scas
(bad)
adc
lods
jecxz
mov
mov
jge
jnp
je
ins
push
retf
jp
nop
call
arpl
loope
push
sbb
dec
(bad)
jmp
std
fwait
fs
add
popa
and
xor
(bad)
(bad)
(bad)
jmp
ins
call
mov
in
in
or
imul
out
cmps
lahf
call
jmp
or
pusha
sub
cmps
sub
and
sub
shl
push
jmp
popa
in
out
pop
ficomp
sub
in
popa
xor
fs
out
pusha
scas
movs
idiv
(bad)
fstp
and
jmp
in
fisubr
sub
int3
retf
xchg
in
and
std
cmc
pop
sbb
out
loop
cmp
outs
fwait
inc
shl
fcomip
add
mov
mov
push
outs
or
add
out
fs
and
scas
popa
and
ins
push
dec
mov
test
in
fistp
push
xchg
inc
clc
jg
fistp
gs
dec
inc
pusha
pusha
or
mov
imul
call
shr
inc
cmp
call
mov
loopne
es
out
sub
adc
loop
cmps
mov
cmps
push
fsubr
pop
mov
data16
pop
je
sub
stos
imul
jns
jmp
xchg
jecxz
pop
add
jge
mov
mov
ins
ds
sahf
arpl
mov
mov
outs
adc
loopne
xchg
gs
sub
les
shr
sub
cli
in
scas
cmp
test
stos
aaa
mov
fwait
imul
jecxz
bound
call
jmp
or
pusha
xchg
push
mov
test
mov
test
movs
adc
inc
imul
jl
lds
pusha
mov
add
ins
popf
imul
in
pop
pusha
cmps
addr16
mov
test
dec
fistp
xchg
pop
(bad)
out
clc
out
cli
out
mov
gs
adc
xor
sbb
scas
clc
xor
mov
mov
bound
(bad)
out
xchg
ins
(bad)
gs
lods
nop
sub
jmp
nop
jmp
out
shl
mov
inc
lock
(bad)
jg
loop
data16
arpl
cmc
std
in
in
fwait
push
mov
fwait
sbb
fbstp
lahf
pusha
xchg
mov
dec
(bad)
call
mov
mov
mov
outs
jmp
in
bound
addr16
xor
jo
outs
mov
loop
inc
dec
inc
inc
jp
mov
xchg
je
cli
inc
inc
imul
movs
xchg
or
mov
sahf
popa
mov
mov
xor
ret
mov
ins
pushf
call
movs
cli
out
adc
mov
and
or
int3
xchg
outs
lea
fist
data16
pusha
sti
dec
lock
mov
push
or
lock
shl
test
add
sub
data16
movs
loopne
outs
mov
sub
inc
nop
(bad)
jmp
lods
push
aam
scas
addr16
mov
mov
loope
out
in
xchg
push
sbb
push
test
jmp
or
call
retf
xchg
loope
scas
fiadd
pusha
mov
mov
cmp
sub
mov
retf
loop
jle
and
or
dec
mov
call
and
cwde
shr
mov
aad
sub
outs
inc
cli
mov
xor
mov
scas
or
mov
push
inc
push
mov
scas
jecxz
mov
pop
mov
sub
in
mov
mov
and
call
mov
movs
stos
sti
mov
push
push
push
ror
cmps
popa
mov
(bad)
loop
mov
out
or
cmps
(bad)
mov
cwde
jbe
call
xchg
sub
out
xchg
imul
ins
mov
test
sbb
out
jmp
imul
lods
jecxz
loop
retf
cmp
mov
push
mov
scas
bound
or
mov
retf
loope
out
fwait
jmp
add
mov
dec
call
loope
mov
loop
out
sub
addr16
ret
or
and
xchg
ins
and
and
sub
(bad)
out
sbb
jg
add
xchg
in
movs
dec
inc
mov
call
addr16
(bad)
jmp
cmp
adc
and
retf
nop
nop
pop
cwde
and
call
adc
fild
gs
push
call
ds
adc
call
xchg
(bad)
out
mov
mov
outs
pop
jns
inc
std
mov
jmp
clc
(bad)
dec
ins
js
outs
(bad)
scas
repnz
ss
imul
imul
aaa
adc
out
pop
in
outs
jp
(bad)
jg
mov
js
ins
out
ins
cmp
mov
ficom
(bad)
adc
outs
(bad)
std
mov
fcmovbe
aaa
xchg
jb
movs
mov
loopne
adc
mov
shl
jecxz
pusha
mov
mov
out
retf
scas
push
loopne
cmp
fisubr
adc
in
clc
(bad)
out
sub
ret
ins
push
outs
sbb
out
push
jle
push
jmp
(bad)
jmp
mov
cs
mov
dec
das
and
lea
jnp
(bad)
out
jo
mov
xchg
shr
cs
rcr
call
data16
push
lock
retf
in
inc
ins
mov
jecxz
in
(bad)
jmp
dec
mov
not
mov
xchg
loope
popa
xlat
not
xchg
(bad)
mov
pop
out
imul
mov
hlt
jb
fistp
push
fs
cmps
push
and
shr
dec
xor
inc
inc
or
fs
fs
or
dec
out
add
cs
dec
loopne
ins
push
imul
pop
mov
push
xchg
adc
jecxz
in
cli
popa
adc
dec
or
cmps
mov
cmc
call
jmp
in
call
in
mov
in
dec
shl
out
mov
into
cli
dec
cmps
loope
or
mov
cmps
imul
cli
xchg
xor
mov
or
dec
in
jmp
jl
sub
outs
cli
push
sub
jbe
jmp
xchg
into
data16
jmp
add
out
shl
in
sti
mov
pop
inc
sub
fcomp
jg
sbb
popa
fsubrp
add
loop
out
out
sub
cli
ja
mov
addr16
dec
(bad)
jbe
cs
add
ret
das
dec
push
pusha
dec
jecxz
jmp
jbe
rcl
mov
mov
imul
push
xchg
sbb
ret
xor
mov
data16
push
imul
add
inc
dec
and
ds
xchg
fisub
dec
pop
cli
(bad)
call
cmp
retf
aam
jnp
inc
jmp
repnz
sbb
pusha
xchg
cmps
ds
inc
in
in
(bad)
mov
pop
imul
push
wbinvd
pop
(bad)
fcomp
push
(bad)
call
cld
call
dec
jmp
pop
in
cmp
movs
fadd
call
test
pop
cmc
dec
mov
jne
arpl
neg
fs
mov
cli
retf
loopne
push
call
mov
mov
arpl
mov
aaa
mov
dec
(bad)
(bad)
(bad)
(bad)
jl
adc
(bad)
ror
clc
enter
mov
clc
or
js
dec
scas
or
stos
shr
(bad)
(bad)
(bad)
cmp
ja
loopne
pop
ja
imul
stos
scas
dec
icebp
mov
mov
(bad)
(bad)
mov
into
adc
push
cmp
mov
cli
add
sub
sub
fld
jnp
pop
mov
dec
(bad)
fild
stc
stos
sbb
fisubr
and
push
pop
retf
mov
sub
pop
mov
cmp
xchg
add
(bad)
stos
and
jae
sub
leave
push
or
or
push
mov
dec
mov
pop
jmp
imul
movs
xchg
jecxz
leave
lock
hlt
stos
xor
stos
adc
stos
adc
mov
sti
mov
clc
mov
cmp
or
jle
(bad)
call
mov
std
mov
repnz
jmp
xor
dec
push
mov
adc
test
jbe
push
mov
mov
pop
adc
jne
cli
loop
sbb
js
mov
dec
sbb
fisttp
mov
adc
push
cmp
sbb
call
xchg
mov
mov
xchg
mov
mov
(bad)
out
xor
adc
jno
test
mov
cmc
(bad)
(bad)
jg
mov
xor
call
sbb
sbb
scas
(bad)
call
pop
call
mov
call
rcr
cmc
cmps
and
bound
mov
ret
xor
call
cmc
dec
sbb
bound
ror
xor
jmp
jmp
(bad)
jmp
jmp
pushf
jmp
scas
sbb
jmp
xchg
in
jmp
jbe
push
jmp
push
idiv
popa
jne
xchg
cli
sbb
cmp
sbb
fdivr
cmp
pop
fisttp
(bad)
cli
mov
cli
cld
mov
adc
or
xor
push
cli
sar
adc
lock
std
fisttp
xor
push
cli
push
cli
mov
idiv
pop
cld
(bad)
out
inc
(bad)
xchg
cli
adc
retf
fcmovne
pop
retf
sbb
jmp
push
hlt
dec
retf
ds
lahf
(bad)
(bad)
jg
retf
pop
inc
retf
cmp
retf
jae
mov
nop
retf
xor
adc
(bad)
call
retf
aaa
retf
retf
adc
ficomp
fcmovu
das
push
movs
(bad)
(bad)
ficomp
ficomp
mov
push
and
aaa
push
cli
mov
jl
add
and
jae
push
(bad)
(bad)
mov
ficom
ficom
xchg
ficom
fidiv
aad
ja
ret
sub
sub
cmp
cmp
cdq
sub
mov
mov
sub
sub
pop
sub
mov
(bad)
adc
lock
dec
jo
push
pushf
push
mov
jmp
sub
pop
sub
mov
xor
push
jmp
sub
retf
sahf
cmp
cmp
stc
cmp
cmp
cmp
pop
cmp
into
pop
cmp
mov
cmp
enter
push
cmp
cmp
cmp
(bad)
cmp
cmp
cmc
cmp
cmp
fwait
or
mov
or
ds
or
adc
sbb
shr
adc
(bad)
push
push
ror
xor
push
or
or
or
or
mov
push
or
or
or
or
(bad)
inc
or
sbb
sbb
sbb
out
(bad)
mov
mov
sbb
sbb
sbb
sbb
bound
mov
cld
fucomip
xor
xchg
sbb
sbb
ja
mov
add
sbb
adc
sbb
push
push
push
or
test
push
call
push
cmp
push
push
push
push
test
push
xchg
push
push
push
push
push
pop
or
push
push
push
std
and
aad
jp
inc
daa
jge
inc
pop
jp
jp
ss
cld
call
jns
pop
jp
jp
jp
jp
jp
jp
jp
push
jg
fdiv
nop
jp
jp
jp
jp
inc
ss
jp
jp
in
das
add
jp
jp
jp
jp
jp
cmp
(bad)
(bad)
dec
fisttp
dec
mov
inc
dec
stc
dec
sbb
dec
fisttp
dec
jg
sbb
mov
(bad)
std
dec
jge
ror
dec
repz
adc
dec
rcl
xor
dec
mov
call
je
push
dec
xor
gs
fistp
pop
cmp
push
sahf
pop
ficomp
pop
pop
pop
lahf
pop
aas
pop
pop
pop
fcomp
pop
pop
cld
push
call
pop
mov
nop
pop
rcr
pop
xchg
inc
icebp
pop
adc
pop
xchg
pop
aaa
pop
xor
push
xchg
(bad)
mov
call
(bad)
(bad)
mov
cmp
js
stos
jns
pop
stos
mov
stos
sbb
ret
jb
pop
sub
sbb
push
stos
mov
(bad)
dec
cmp
stos
aam
mov
xchg
stos
jne
stos
in
mov
jg
loope
cmp
aas
mov
std
(bad)
mov
mov
adc
sar
idiv
(bad)
(bad)
inc
mov
push
mov
jp
jnp
pop
mov
mov
(bad)
dec
lahf
mov
mov
mov
push
mov
mov
popa
loope
push
mov
mov
mov
mov
mov
cmps
loope
mov
mov
cmps
out
fcomp
sahf
(bad)
(bad)
cmp
fistp
cmp
jl
sbb
dec
ret
mov
fwait
jae
push
fwait
push
fwait
adc
popa
idiv
fwait
aaa
fwait
push
fwait
adc
je
xchg
fwait
xor
adc
cdq
jmp
jmp
(bad)
sti
(bad)
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
jmp
shl
and
(bad)
pop
sti
clc
sti
cmp
(bad)
cmp
call
sti
fsincos
jns
mov
sti
pop
sti
cld
sti
fdivr
sbb
idiv
(bad)
sti
jge
pop
sti
xchg
sti
push
sti
mov
sar
adc
icebp
sti
adc
mov
idiv
jbe
xlat
sti
aad
(bad)
(bad)
(bad)
sti
fcmove
cmp
pop
retf
fwait
retf
sti
retf
cmp
sbb
clc
retf
cdq
retf
cmp
jns
dec
pop
pop
inc
clc
dec
dec
cmp
jl
pop
retf
std
retf
xchg
retf
adc
xor
inc
(bad)
(bad)
call
icebp
retf
jno
xchg
retf
push
retf
xchg
retf
push
xchg
aaa
retf
pop
retf
mov
hlt
retf
inc
loope
add
aad
xor
fcmovnu
(bad)
(bad)
(bad)
jg
mov
fcmovnu
fistp
fist
fist
lock
(bad)
fist
fcmovnu
mov
mov
xor
xchg
fcomi
fist
fisubr
fwait
add
sub
sub
sub
je
push
mov
pushf
dec
or
sub
adc
(bad)
mov
shr
jo
xchg
sub
sub
sub
inc
aaa
sub
hlt
sub
cmc
sub
sub
cmp
cmp
cmp
cmp
cmp
jecxz
(bad)
(bad)
cmp
cmp
cmp
cmp
pop
cmp
cmp
(bad)
jg
jae
fisttp
mov
or
stc
or
jle
mov
or
or
ror
xor
push
(bad)
or
scas
mov
xor
or
test
cli
or
or
sbb
mov
sbb
sbb
sbb
call
call
sbb
popf
sbb
xchg
sbb
sbb
neg
mov
xlat
sbb
sbb
(bad)
(bad)
(bad)
call
cmp
imul
fsubr
imul
push
xchg
loope
imul
imul
lods
imul
call
mov
imul
shr
imul
lock
mov
(bad)
(bad)
mov
mov
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
lock
mov
repz
jnp
jnp
jnp
jnp
jnp
sti
call
jnp
jnp
jnp
jnp
jnp
jnp
dec
fiadd
sbb
dec
frstpm(287
(bad)
(bad)
dec
dec
sbb
dec
jns
ds
jle
pop
dec
jl
mov
dec
repz
mov
aad
(bad)
jg
dec
adc
dec
test
push
dec
ja
xchg
dec
push
dec
aad
jne
mov
or
call
pop
cmp
pop
push
pop
dec
pop
std
(bad)
jg
call
pop
repnz
mov
rcr
pop
jae
lock
push
inc
icebp
pop
adc
pop
mov
aam
adc
(bad)
(bad)
fistp
and
test
test
test
test
test
test
test
test
(bad)
push
xchg
test
test
test
test
test
test
test
test
test
test
test
test
test
test
jmp
icebp
imul
test
jmp
out
adc
mov
ds
(bad)
(bad)
call
mov
jge
repnz
mov
push
mov
mov
(bad)
(bad)
(bad)
(bad)
std
mov
hlt
inc
xor
mov
cmc
mov
cmp
mov
(bad)
jg
dec
push
mov
pushf
mov
mov
mov
mov
mov
(bad)
dec
ror
mov
hlt
mov
(bad)
mov
sbb
pop
cwde
cdq
cwde
stc
cwde
(bad)
cwde
mov
cwde
(bad)
(bad)
cmp
pushf
cwde
sbb
xchg
cwde
sbb
rcr
push
cwde
neg
adc
xchg
cwde
push
cwde
xchg
cwde
xor
call
(bad)
(bad)
fild
call
pop
call
cmp
call
(bad)
(bad)
fucomip
mov
push
call
imul
push
call
aaa
call
cmc
call
std
(bad)
(bad)
call
fwait
clc
aad
fdivr
mov
(bad)
jg
mov
clc
mov
jb
xchg
clc
sar
jae
push
clc
adc
mov
call
push
clc
jno
jbe
aaa
clc
mov
aad
xor
aas
adc
dec
pop
enter
enter
enter
enter
lahf
enter
(bad)
aas
enter
enter
enter
enter
enter
enter
enter
(bad)
(bad)
call
enter
enter
enter
stc
fcomp
fdivr
lahf
fdivr
fcomp
(bad)
(bad)
call
add
jl
popf
fcomp
fcomp
repz
fdiv
rcr
push
fcom
clc
(bad)
jg
fdiv
fdiv
inc
call
sub
sub
mov
dec
stos
sub
sub
sub
or
std
sub
sub
or
test
imul
aaa
sub
sub
je
aad
call
jg
pop
xchg
cmp
fidivr
jg
cld
cmp
pop
cmp
cs
mov
push
cmp
cmp
cmp
dec
idiv
xlat
cmp
push
or
cmp
or
or
pop
or
aas
inc
(bad)
dec
pop
or
or
jl
popf
or
ror
ror
call
hlt
jae
xor
or
jbe
ja
xchg
or
(bad)
jg
push
fcomp
mov
sbb
push
sbb
call
cmp
idiv
call
jl
pop
sbb
sbb
sbb
sbb
jbe
aam
adc
xchg
sub
(bad)
call
xor
push
cwde
push
cmp
push
cmp
(bad)
(bad)
jmp
push
xchg
push
xchg
push
push
push
xchg
push
mov
mov
fidivr
popf
lock
call
js
js
js
js
js
js
js
js
js
cmc
(bad)
push
js
js
js
js
js
dec
call
dec
jg
jmp
dec
cdq
dec
(bad)
dec
pop
dec
fisttp
dec
add
(bad)
call
dec
pop
dec
repnz
xchg
dec
ror
dec
nop
dec
lock
mov
ror
(bad)
aas
xchg
mov
jbe
xchg
dec
aam
adc
cli
pop
cmp
pop
mov
inc
clc
(bad)
cmp
pop
(bad)
pop
push
pop
jle
mov
pop
std
pop
jge
lods
(bad)
call
pop
xchg
pop
lock
adc
pop
xchg
pop
push
pop
mov
xor
(bad)
(bad)
jle
aam
je
cmc
inc
xor
test
fldcw
aas
test
sar
test
jge
repnz
nop
test
push
test
(bad)
test
xlat
test
push
test
call
(bad)
cmp
js
cmp
push
jmp
(bad)
mov
mov
pop
mov
mov
mov
and
(bad)
call
mov
aad
push
or
sti
mov
mov
cmp
(bad)
(bad)
out
cmp
mov
mov
pushf
mov
pop
mov
mov
mov
mov
ror
daa
jmp
mov
mov
mov
xor
je
xchg
mov
mov
cdq
clc
in
cdq
mov
add
sub
mov
cdq
fcomp
cld
cdq
popf
cdq
cmp
ret
cdq
cmc
(bad)
jmp
push
xor
xchg
cdq
adc
mov
jne
mov
jmp
(bad)
jmp
push
jmp
fucomip
pushf
jmp
mov
in
jmp
ins
mov
shr
jae
lock
(bad)
(bad)
in
out
cld
ss
mov
jmp
jnp
js
stc
sbb
mov
(bad)
call
stc
pop
das
mov
stc
jge
mov
jb
push
stc
xor
pop
aam
call
stc
mov
sar
jno
push
stc
xchg
stc
idiv
ja
or
stc
push
stc
cli
inc
aam
dec
fcmove
mov
leave
push
leave
pop
leave
lahf
in
(bad)
(bad)
(bad)
(bad)
aas
leave
mov
leave
adc
push
leave
jo
push
leave
xor
adc
jbe
mov
xchg
leave
xor
aad
mov
inc
fstp
fstp
(bad)
fnstcw
fstp
jg
mov
fnstenv
nop
fnstenv
and
push
fst
fnstenv
neg
push
fnstenv
fld
dec
push
sub
sub
pop
xchg
sub
inc
sub
sub
sub
push
sub
sub
sub
sub
push
sub
imul
xlat
sub
mov
xchg
add
cmp
cmp
icebp
(bad)
cmp
pop
cmp
mov
cmp
jge
xchg
(bad)
dec
sar
adc
cmp
cmp
cmp
scas
cld
call
jbe
ja
hlt
cmp
push
cmp
sti
or
fmul
sbb
mov
nop
mov
or
or
or
or
or
(bad)
(bad)
fnsave
mov
ror
jbe
test
adc
xchg
or
call
sbb
movs
mov
out
xchg
loope
and
mov
sbb
sbb
sbb
lods
(bad)
call
lock
sbb
shl
xor
xchg
sbb
sbb
mov
xchg
sbb
sbb
imul
imul
(bad)
out
push
lahf
imul
imul
(bad)
jmp
imul
imul
jecxz
jp
cmp
jns
jns
std
(bad)
(bad)
mov
jns
jns
jns
jns
jns
jns
jns
jns
jns
clc
(bad)
(bad)
jg
mov
sar
jns
jns
jns
jns
jns
jns
jns
jns
jns
dec
cmp
fmul
dec
xchg
xor
ja
fcomp
cdq
dec
mov
dec
cld
dec
fisttp
dec
ror
add
dec
jno
push
dec
jo
xchg
dec
test
std
pop
(bad)
xlat
dec
pop
dec
mov
aam
push
outs
dec
sbb
outs
pop
stos
jg
inc
cld
push
pop
mov
pop
fcomp
pop
jge
inc
(bad)
call
pop
mov
jo
push
pop
jbe
xchg
pop
ja
xor
(bad)
dec
inc
jmp
scas
clc
scas
sbb
sahf
scas
(bad)
cld
out
test
scas
jg
mov
scas
mov
mov
nop
scas
xor
jle
dec
or
scas
push
scas
adc
(bad)
(bad)
mov
mov
sti
mov
out
cmps
and
aas
mov
sbb
fnstsw
(bad)
(bad)
jg
mov
jno
push
mov
push
mov
cli
mov
mov
mov
cwde
mov
mov
pop
imul
mov
mov
mov
mov
mov
mov
mov
inc
pop
adc
mov
sahf
pop
cwde
jg
cld
jg
sahf
cdq
sahf
fstp
fistp
jb
xchg
sahf
lock
(bad)
call
icebp
sahf
jno
(bad)
sahf
push
sahf
mov
aam
adc
je
or
jg
rol
out
sbb
fucomi
cwde
out
cmp
pop
pop
out
dec
push
inc
lahf
out
aas
out
cld
out
pop
out
xchg
out
(bad)
(bad)
jg
push
pushf
out
mov
lock
adc
jo
jno
push
out
ss
xlat
out
pop
out
xor
call
(bad)
fwait
(bad)
sbb
(bad)
(bad)
jmp
and
(bad)
(bad)
mov
(bad)
pop
(bad)
push
(bad)
nop
(bad)
jo
push
(bad)
adc
ins
stos
xor
fcomip
call
(bad)
in
pop
pop
test
mov
sbb
sub
lea
xchg
cmps
(bad)
(bad)
jg
adc
int
scas
(bad)
hlt
push
cmps
sub
jno
mov
(bad)
(bad)
(bad)
cld
aam
pop
ins
std
cmp
jge
sub
cmp
and
or
sbb
sub
dec
push
outs
pop
inc
in
pop
mov
out
mov
in
comiss
and
(bad)
(bad)
cld
pop
adc
xchg
inc
icebp
pop
lods
and
sbb
call
pushw
out
xchg
mov
mov
pushf
test
cmp
dec
test
push
cli
nop
dec
dec
(bad)
(bad)
(bad)
call
mov
dec
cmps
mov
or
mov
test
cmp
imul
jmp
push
add
dec
push
jb
jo
sub
mov
cli
mov
inc
leave
cli
in
pop
adc
aam
dec
cdq
pop
dec
pop
stos
outs
(bad)
dec
std
mov
pop
rcr
sub
fs
mov
test
(bad)
push
mov
inc
pop
jbe
lods
and
sub
in
pop
out
xchg
ja
(bad)
(bad)
(bad)
fst
stos
push
inc
pop
pop
mov
pushf
sub
cmps
dec
pushf
adc
pop
outs
inc
vunpcklps
(bad)
inc
sbb
loope
dec
dec
push
(bad)
fcmovnu
pushf
daa
in
cwde
cli
(bad)
(bad)
in
out
cmp
pop
mov
imul
pop
fs
(bad)
idiv
dec
push
or
mov
cmp
fstp
(bad)
dec
lods
pop
mov
dec
mov
(bad)
das
scas
shl
lods
fisttp
sbb
mov
retf
pop
nop
(bad)
fcomip
push
push
pop
movs
and
das
pop
daa
push
pop
ret
add
mov
fild
(bad)
(bad)
in
data16
das
pop
mov
stos
fucomi
loope
mov
mov
cmp
jmp
int
cld
fmul
push
xor
jmp
mov
pop
pop
jmp
lock
(bad)
jmp
pop
cmp
(bad)
and
rol
into
adc
pusha
std
pop
(bad)
jg
mov
ficomp
cmc
mov
mov
scas
mov
scas
mov
out
call
jge
xor
pushf
push
push
mov
jp
pop
jne
(bad)
call
mov
aad
stos
pop
call
stos
sar
call
test
pop
(bad)
lods
js
rcr
jle
(bad)
push
(bad)
mov
jne
movs
dec
sub
jle
popa
jmp
cmps
fst
pop
add
adc
je
mov
push
push
outs
loope
sbb
push
jne
jne
xchg
jl
mov
push
stc
pop
push
adc
or
call
add
mov
push
pop
push
jl
and
es
xchg
scas
mov
retf
mov
sti
loop
retf
mov
std
mov
jmp
cmp
mov
push
lods
js
mov
push
ret
sar
mov
cmp
inc
sbb
(bad)
test
sub
imul
pop
(bad)
(bad)
push
jge
pop
pop
or
mov
push
imul
fsub
(bad)
mov
sbb
push
sub
push
repz
dec
sahf
sbb
pop
jmp
pop
mov
jl
mov
stos
inc
icebp
int
dec
dec
(bad)
in
mov
das
xor
ror
push
int
jg
fnstenv
inc
(bad)
(bad)
fistp
sbb
je
sub
inc
push
call
(bad)
(bad)
jg
cld
ds
mov
not
pop
jns
stos
ins
and
cmps
(bad)
cli
and
cs
imul
add
pop
(bad)
jmp
sub
cld
jg
addr16
jo
imul
inc
idiv
mov
lods
ret
sti
cld
ret
jl
push
dec
push
popa
and
mov
ins
sub
mov
popf
fcomp
retf
mov
inc
sbb
cld
push
adc
xchg
and
cmp
(bad)
(bad)
call
ss
sbb
(bad)
fld
cmp
ds
add
or
sti
and
pusha
xchg
and
lar
sub
aaa
or
mov
cdq
fstp
jb
(bad)
mov
adc
add
fs
or
pop
ret
mov
sar
push
xchg
shr
in
adc
cmc
inc
bound
cmp
xlat
dec
bound
jae
xchg
mov
rcl
call
add
push
aaa
add
in
daa
dec
cli
push
pop
dec
sub
sub
sbb
fcmovnu
or
(bad)
jmp
and
sub
mov
movs
jne
xchg
or
out
inc
xchg
popa
push
mov
imul
jno
pop
enter
push
xchg
fsubr
or
test
jecxz
jmp
and
sbb
jo
out
(bad)
jg
jge
adc
inc
xor
pop
inc
push
shr
mov
fimul
cmps
jg
add
cwde
sbb
jmp
rcl
mov
xlat
push
and
ja
mov
retf
mul
wrmsr
jp
loope
and
ja
push
shl
shl
jle
stc
ss
mov
or
add
inc
out
sub
jns
fnstenv
(bad)
out
sar
jecxz
jo
lahf
dec
hlt
pop
sub
mov
fsub
mov
fcmovnbe
fsub
dec
pop
adc
adc
je
je
inc
ins
(bad)
(bad)
(bad)
inc
inc
out
sbb
pop
jmp
les
push
cdq
test
mov
push
mov
push
and
mov
(bad)
out
test
aas
scas
(bad)
push
and
scas
mov
jnp
in
xlat
inc
dec
in
inc
lds
cmc
push
dec
lods
pop
into
and
icebp
and
mov
ss
das
(bad)
and
cwde
xor
inc
pop
jnp
cmp
call
push
das
psadbw
out
sbb
push
jl
push
cs
(bad)
mov
or
rcl
sti
inc
test
xchg
sub
mov
adc
(bad)
mov
cmc
scas
add
adc
data16
fwait
imul
(bad)
mov
test
mov
pop
and
dec
imul
std
push
push
int3
mov
inc
mov
pop
sbb
in
mov
dec
jl
scas
call
adc
dec
cmp
aas
in
nop
sbb
mov
mov
daa
inc
out
popf
xor
shl
pop
jae
out
push
add
fidiv
xchg
movs
loopne
int3
or
pushf
std
call
arpl
in
les
ss
xchg
jae
js
jne
inc
(bad)
(bad)
out
push
mov
ins
ficomp
cwde
movs
(bad)
jmp
popf
gs
ins
add
sbb
push
es
xor
sar
add
cmps
shl
or
fild
cmc
xchg
sub
push
js
mov
or
(bad)
shl
mov
test
in
xchg
imul
into
bnd
adc
cmp
dec
mov
div
dec
aam
ja
(bad)
jle
add
lea
in
rcl
scas
ja
test
cmp
add
cmp
shl
dec
fdivp
in
iret
fnsave
jmp
xchg
mov
int
jecxz
rol
sbb
dec
mov
out
dec
(bad)
jmp
jl
std
dec
(bad)
popf
test
push
sahf
lahf
cwde
mov
jecxz
push
clc
mov
mov
cmps
ficomp
(bad)
(bad)
jg
dec
jl
pop
fdivr
dec
int3
(bad)
leave
mov
ror
(bad)
xchg
push
popf
cmp
mov
pop
(bad)
jmp
movs
push
jp
in
std
(bad)
cld
test
mov
mov
add
jl
ds
pop
lds
mov
jmp
test
fisubr
and
jmp
test
adc
mov
(bad)
(bad)
dec
jl
test
lods
push
xlat
mov
loopne
fnstcw
sub
sbb
popf
sbb
pop
cld
sbb
inc
movs
fld
or
jl
and
pop
(bad)
es
cli
(bad)
(bad)
dec
jae
das
fwait
sub
test
xchg
pop
sar
fdiv
cmp
push
pop
mov
inc
xchg
sahf
lods
sub
pushf
ret
in
stos
mov
sbb
int3
cmp
jecxz
(bad)
(bad)
jmp
clc
ins
int
iret
call
cdq
rcr
jp
pop
aam
je
push
(bad)
(bad)
jmp
and
cmp
movs
inc
pop
(bad)
(bad)
mov
inc
dec
ret
ficomp
jg
pop
lods
cmc
sub
call
mov
mov
shr
leave
jmp
test
(bad)
(bad)
(bad)
push
je
jp
push
lds
sub
pop
out
mov
xor
mov
sbb
in
pop
cld
pop
jl
sar
(bad)
jmp
add
mov
test
cld
xchg
mov
mov
cld
cmp
das
push
std
sub
out
cli
mov
test
lods
test
cs
ret
xlat
(bad)
(bad)
in
retf
in
arpl
and
push
mov
dec
leave
mov
sar
push
cli
(bad)
mov
sbb
mov
(bad)
pop
icebp
jmp
fdivr
pushf
jnp
in
lea
pop
pop
fs
sub
fmul
pop
push
(bad)
in
call
pop
pop
sbb
or
out
cmp
mov
fdivr
icebp
daa
xchg
jmp
xlat
pop
jg
bound
pop
out
(bad)
jg
stos
xchg
sar
jae
push
push
call
sub
les
(bad)
mov
xchg
pushf
in
imul
test
les
mov
in
dec
lods
pop
test
(bad)
call
mov
pop
inc
retf
add
add
xchg
jge
js
(bad)
(bad)
(bad)
fistp
(bad)
adc
stc
fst
cmps
sbb
(bad)
mov
mov
mov
push
mov
inc
push
pop
fisubr
sti
movs
mov
(bad)
mov
push
dec
mov
fadd
sub
(bad)
jmp
es
scas
inc
(bad)
mov
into
jl
hlt
and
lds
imul
lahf
pop
jns
cmp
fst
mov
push
and
sahf
out
lea
mov
lahf
push
daa
(bad)
iret
(bad)
cmp
push
sub
jge
fstp
scas
dec
pop
clc
(bad)
jmp
dec
mov
xchg
fsubr
icebp
jl
adc
out
mov
xchg
(bad)
jmp
mov
icebp
mov
int
mov
mov
scas
jp
fadd
add
pop
sar
fistp
mov
scas
cmp
es
mov
lea
pop
mov
pop
and
pop
icebp
mov
pop
mov
cld
mov
or
sub
and
jg
test
xchg
xchg
test
das
add
mov
out
ds
retf
pop
(bad)
pop
jb
sub
leave
mov
ret
fcos
(bad)
jmp
jle
cmps
dec
add
fcomp
push
call
sbb
rcl
fyl2x
(bad)
(bad)
call
loopne
pop
iret
(bad)
and
aas
pop
movs
test
add
loope
stos
fcom
mov
add
jmp
pop
in
jmp
js
data16
push
inc
sbb
pop
mov
outs
out
aam
adc
aad
(bad)
pop
push
(bad)
aas
fimul
cmp
dec
and
fisttp
je
leave
pop
xchg
(bad)
(bad)
(bad)
jg
ins
pop
xchg
fild
add
sbb
or
jle
pop
(bad)
push
add
call
pop
push
stos
out
pop
jg
pop
sahf
cs
push
imul
mov
fisub
(bad)
inc
lods
sbb
popf
out
shr
dec
pushf
pop
sbb
pop
mov
(bad)
(bad)
jmp
or
bound
mov
sub
mov
inc
repnz
(bad)
(bad)
(bad)
(bad)
dec
sti
dec
test
pop
fisubr
iret
mov
retf
mov
mov
(bad)
clc
(bad)
(bad)
jmp
push
xor
push
fld
pop
lods
arpl
mov
mov
and
cmps
lea
(bad)
(bad)
inc
mov
fs
xchg
mov
stos
stos
scas
dec
retf
mov
add
into
xchg
sub
test
push
mov
into
and
movs
jmp
cs
add
inc
cmp
push
pop
(bad)
mov
cmp
adc
test
(bad)
(bad)
in
and
imul
loop
mov
out
scas
mov
test
push
imul
test
cli
fsub
inc
lods
call
(bad)
mov
les
int
pop
push
shl
retf
cmps
sub
adc
and
movs
retf
ja
jg
jg
ret
dec
fisubr
inc
pop
dec
ficomp
movs
dec
push
aaa
leave
les
int3
out
retf
or
sub
fwait
xlat
fdivr
jmp
push
rcl
xchg
pushf
rcl
mov
aam
xchg
xchg
sbb
leave
fild
scas
(bad)
(bad)
call
pop
(bad)
(bad)
adc
cmp
pop
mov
fdivr
cld
cmp
or
mov
stos
fistp
jle
(bad)
mov
cmp
jp
mov
stc
neg
(bad)
(bad)
fisttp
repnz
(bad)
jmp
pushf
lahf
sar
mov
fisttp
test
retf
fild
mov
cmc
xchg
fs
ds
out
(bad)
(bad)
call
sbb
sar
mov
push
into
adc
dec
lods
test
(bad)
(bad)
(bad)
jmp
cmps
inc
lahf
inc
push
(bad)
(bad)
jno
pop
pop
call
dec
ret
mov
pop
xor
(bad)
(bad)
cwde
fidiv
adc
mov
rol
movs
fcom
(bad)
outs
adc
fwait
inc
pop
fldcw
lds
or
(bad)
jg
push
or
dec
pop
mov
and
shl
stos
push
push
imul
fs
pusha
inc
rol
mul
scas
bound
xor
out
rcl
dec
fucom
fldenv
(bad)
jg
and
inc
movs
into
out
dec
cmps
mov
push
call
fisubr
ins
dec
xlat
in
(bad)
fsub
daa
push
dec
and
inc
or
neg
rcr
sub
pop
out
out
fsub
inc
jl
jecxz
mov
cwde
dec
sbb
fcmovbe
(bad)
(bad)
jg
dec
data16
mov
aad
inc
cmp
icebp
cld
mov
(bad)
call
pop
mov
mov
inc
rcr
mov
(bad)
data16
sub
in
pop
es
cwde
inc
add
int
aaa
std
inc
(bad)
push
test
shl
ds
xchg
sahf
sbb
outs
sahf
rcr
(bad)
(bad)
in
xchg
mov
out
movs
test
aaa
into
hlt
jecxz
push
fmul
js
fs
idiv
add
call
dec
dec
fstp
es
retf
dec
cdq
arpl
push
mov
(bad)
fild
push
out
add
outs
push
cmp
in
pop
aad
cmp
(bad)
(bad)
jg
sub
fdiv
pop
lds
rcl
pop
cs
mov
js
hlt
pop
ja
fdivr
mov
or
xlat
in
cli
dec
pop
or
add
pop
inc
icebp
outs
jle
fisttp
in
or
mov
neg
sbb
sbb
ret
inc
out
in
mov
(bad)
(bad)
call
xchg
js
out
or
pop
aaa
mov
in
mov
xlat
into
fcomp
mov
outs
mov
push
retf
retf
mov
add
xchg
jge
lods
or
retf
sti
scas
(bad)
(bad)
call
sub
retf
jmp
cmp
jnp
int
mov
(bad)
mov
pop
pop
dec
out
out
fstp
or
test
mov
cmp
inc
and
popf
sub
(bad)
(bad)
mov
sar
(bad)
call
jge
dec
rcr
adc
cmps
les
inc
mov
test
mov
sti
imul
push
sub
(bad)
(bad)
(bad)
jmp
push
and
fimul
jl
pop
mov
lods
fcomp
cmp
xchg
mov
pop
dec
dec
test
lods
sbb
fsubr
ins
pop
das
sar
fsubr
(bad)
mov
jo
jp
loopne
mov
hlt
(bad)
jmp
mov
fcomp
cmp
test
(bad)
call
xor
js
int
inc
mov
test
sub
lea
(bad)
jmp
stos
lods
inc
idiv
jo
mov
adc
mov
in
in
popf
fs
inc
dec
std
scas
lods
or
inc
daa
dec
mov
jle
in
shl
sar
(bad)
call
rcl
pop
cmps
lods
loop
jle
aaa
stc
jmp
pushf
sub
das
stos
mov
or
jnp
(bad)
(bad)
(bad)
mov
cmps
aas
ins
sbb
fld
mov
les
sub
std
lods
cmp
out
dec
movs
dec
call
dec
mov
cli
out
mov
inc
mov
and
outs
pop
mov
in
adc
std
mov
out
addr16
sub
mov
sub
scas
mov
push
ja
(bad)
jmp
xchg
jmp
pop
sbb
ficom
xlat
retf
shl
fisubr
mov
mov
repz
cmc
fisttp
pop
sub
fmul
jle
xchg
retf
pop
aaa
(bad)
fist
mov
aas
test
pop
nop
pop
pop
jp
jmp
pop
std
dec
int3
fist
sar
jmp
ss
stos
fmul
ret
(bad)
jg
ss
xlat
pop
retf
xchg
push
pop
pop
fdiv
aaa
(bad)
(bad)
mov
retf
sbb
fmul
js
inc
shl
push
jl
and
or
pop
cmp
lock
(bad)
(bad)
(bad)
fsubr
and
push
sti
pop
sahf
outs
lock
enter
ret
lahf
dec
ds
ja
jl
adc
into
sahf
dec
lock
jo
icebp
pop
sbb
pop
pop
sbb
neg
fld
loopne
(bad)
dec
jno
je
pop
fdiv
fcomi
pop
or
push
(bad)
jns
sti
(bad)
(bad)
call
movs
mov
mov
fstp
frstor
mov
mov
sub
cmp
(bad)
(bad)
call
stos
fistp
call
fimul
(bad)
leave
cmps
je
jno
retf
cld
mov
xchg
inc
adc
lds
into
iret
in
jmp
inc
repnz
mov
cmps
pop
mov
lahf
sub
jmp
push
(bad)
push
leave
(bad)
outs
pop
out
jge
les
cmp
dec
rcr
hlt
dec
and
mov
push
push
stos
sub
or
loopne
jmp
outs
call
(bad)
(bad)
jmp
jmp
leave
test
push
fbld
lahf
fmul
cld
js
(bad)
call
adc
sub
ins
(bad)
pop
mov
pop
sub
inc
lods
fnsave
clc
jg
(bad)
jmp
sti
fst
push
rcr
and
pop
gs
push
(bad)
jmp
and
(bad)
and
mov
mov
pop
dec
jl
cmc
fmul
(bad)
(bad)
call
lods
pushf
jb
jl
mov
pop
pop
arpl
ja
pop
das
pop
mov
(bad)
(bad)
call
mov
cmp
movs
(bad)
fnstenv
and
dec
pusha
std
jnp
sub
(bad)
mov
pop
cmps
jp
adc
jmp
retf
sub
repz
push
dec
jl
in
inc
(bad)
pop
inc
imul
leave
push
aaa
leave
or
retf
lahf
scas
test
movs
(bad)
and
(bad)
(bad)
(bad)
mov
push
adc
stos
retf
dec
(bad)
lahf
test
or
mov
xchg
push
arpl
adc
fisubr
pop
ins
lods
add
ins
fdivr
(bad)
cld
popf
das
clc
fwait
dec
sub
stos
inc
fnstcw
or
adc
stos
push
xchg
das
or
out
add
out
clc
call
dec
push
lahf
mov
call
jmp
retf
fiadd
xchg
dec
and
retf
(bad)
(bad)
jmp
js
mov
adc
ror
jmp
ret
sub
cmp
lods
pop
sbb
pop
inc
(bad)
hlt
(bad)
ror
into
dec
cli
retf
outs
ss
cmp
mov
xor
jns
movs
leave
dec
(bad)
das
rcr
dec
js
(bad)
fcomip
push
xor
mov
cmp
shr
test
test
push
pop
mov
fcom
or
mov
add
mov
mov
inc
push
mov
mov
inc
call
sbb
mov
sub
or
mov
scas
and
js
dec
sub
(bad)
(bad)
jmp
int
pop
mov
lods
jbe
int3
mov
xlat
inc
dec
push
popf
pop
fadd
iret
mov
sbb
mov
or
jmp
(bad)
inc
jecxz
mov
mov
mov
cmps
cmp
sbb
ins
dec
fcomp
inc
std
(bad)
mov
mov
jge
xchg
jmp
das
sub
aam
fbstp
arpl
addr16
adc
mov
pop
push
dec
ds
jo
adc
jg
jmp
out
fcmovu
cwde
call
push
sub
mov
cdq
mov
(bad)
jmp
loop
sahf
lods
gs
(bad)
xlat
icebp
pop
fsub
sbb
(bad)
(bad)
mov
loopne
mov
das
rcr
shl
pop
nop
bound
icebp
(bad)
(bad)
call
lea
mov
leave
std
out
fcomp
outs
inc
pop
mov
pop
mov
sbb
lock
inc
fs
ror
fldcw
mov
icebp
or
loopne
loopne
and
xchg
or
cli
pop
out
leave
cmp
jb
jmp
(bad)
push
sbb
add
mov
scas
bt
mov
das
daa
dec
mov
push
dec
in
sar
(bad)
fisttp
push
shl
sahf
hlt
pop
and
cwde
popa
pushf
push
fsubr
pop
cld
div
mov
sub
mov
sub
pop
in
xchg
inc
enter
push
mov
mov
cwde
jmp
clc
ja
mov
pop
dec
(bad)
cs
mov
jecxz
das
pop
push
dec
in
adc
(bad)
(bad)
(bad)
in
mov
or
pop
into
enter
cwde
pop
sbb
mov
dec
data16
fstp
fsub
push
lds
xor
dec
pop
sub
mov
jmp
(bad)
(bad)
(bad)
outs
lods
in
retf
pop
scas
push
sub
xchg
xor
pop
(bad)
mov
xchg
cmp
pop
retf
xadd
mov
mov
(bad)
pop
fwait
sub
and
or
mov
push
mov
mov
pop
test
dec
and
jl
mov
cmp
arpl
(bad)
(bad)
dec
jmp
cmp
(bad)
addps
xlat
adc
sbb
imul
mov
mov
das
lods
cmp
fcomip
mov
popf
bound
out
adc
pusha
mov
push
adc
pop
neg
xor
pushf
(bad)
(bad)
pop
daa
mov
(bad)
call
sbb
pushf
xor
pop
lahf
sub
mov
mov
xchg
mov
std
jmp
push
sbb
jno
add
mov
mov
jmp
jo
add
daa
mov
shr
jl
enter
xchg
pop
cmp
sbb
out
mov
stos
pusha
fcom
lds
pop
pop
int3
(bad)
(bad)
in
fstp
daa
or
rcr
sti
mov
pop
jp
push
into
(bad)
call
(bad)
push
outs
mov
out
call
(bad)
jmp
sub
dec
movs
add
lahf
push
(bad)
xlat
cmp
add
shl
lock
imul
sub
js
enter
stc
test
scas
repnz
jnp
icebp
scas
jp
xor
pop
mov
pop
cmp
jmp
pop
push
fdivrp
(bad)
(bad)
(bad)
jmp
repnz
stc
fsub
lock
into
daa
add
(bad)
pop
sbb
(bad)
pop
adc
add
cmp
and
sub
inc
(bad)
mov
mov
sbb
add
mov
xlat
dec
xlat
mov
out
adc
xlat
sub
jmp
mov
and
adc
shl
sti
aad
xchg
jmp
icebp
push
(bad)
(bad)
call
aas
and
adc
push
pop
adc
dec
fyl2x
jp
mov
(bad)
(bad)
jg
es
fdiv
pop
jecxz
add
mov
mov
pop
mov
call
mov
stos
jle
aas
mov
ins
dec
(bad)
inc
aas
daa
add
sub
retf
mov
adc
add
sbb
(bad)
test
cdq
fxch
sbb
mov
sbb
ds
and
jmp
pop
push
enter
ret
(bad)
sub
xchg
cmp
sub
fdivr
and
pop
fstp
mov
mov
jno
pop
nop
out
aas
scas
(bad)
mov
loope
or
fcomip
jmp
icebp
cmp
icebp
fdivr
fmul
in
jg
ins
mov
mov
cmps
pop
daa
or
jmp
jle
in
jmp
fild
mov
cmp
popa
into
ins
(bad)
out
cmp
call
ds
(bad)
(bad)
jmp
pop
pop
mov
fsub
xor
sahf
sub
and
push
inc
cmps
(bad)
(bad)
inc
dec
jb
cld
into
xor
mov
pop
sub
sahf
in
mov
mov
jmp
sbb
mov
push
cdq
jge
sub
stc
mov
inc
or
int
sub
(bad)
sub
scas
cld
sti
mov
test
push
(bad)
call
mov
cdq
lock
das
cmp
mov
clc
pop
jmp
cmp
std
test
cmp
inc
jg
test
push
mov
pop
dec
movs
or
fxch
(bad)
(bad)
(bad)
(bad)
out
stos
cmps
mov
aad
(bad)
test
mov
or
jg
popa
std
jne
mov
out
jmp
scas
sbb
sbb
inc
shl
sbb
jmp
outs
pop
rol
sar
les
push
(bad)
(bad)
inc
cmp
and
or
js
sub
pop
sub
cmp
cmp
sub
je
mov
mov
push
mov
(bad)
jmp
cmp
ror
call
std
(bad)
call
fdiv
rol
push
rcl
pop
enter
dec
fidivr
aas
xchg
mov
sub
scas
cli
pop
sub
cmps
sub
test
mov
je
repz
mov
cmp
ret
not
push
pop
pop
stos
neg
xor
gs
mov
mov
imul
(bad)
call
inc
fs
xor
mov
push
add
sahf
mov
push
(bad)
push
adc
cmp
repz
es
sub
sbb
jbe
popf
xor
push
scas
movs
push
mov
xor
leave
jmp
ss
xchg
mov
add
imul
fidiv
not
gs
icebp
push
nop
xor
push
or
adc
mov
xor
(bad)
out
out
sti
inc
loope
or
push
xchg
adc
mov
mov
add
pop
or
dec
mov
sahf
cwde
call
push
sbb
push
mov
fwait
mov
xchg
iret
xchg
mov
jmp
and
aad
adc
jbe
std
mov
out
div
and
dec
jmp
retf
and
(bad)
outs
outs
or
mov
push
xchg
test
cmp
or
popf
loopne
or
pop
hlt
popf
into
mov
ror
jb
gs
(bad)
(bad)
call
dec
aam
and
sbb
and
arpl
mov
push
scas
(bad)
(bad)
fisttp
iret
cmp
dec
mov
or
es
or
push
dec
adc
fld
(bad)
dec
xchg
int3
test
in
dec
jnp
mov
shr
and
aad
movs
sub
sub
mov
ins
or
dec
sub
(bad)
(bad)
jg
retf
or
leave
fild
ret
enter
inc
and
and
in
jno
add
ins
jmp
and
push
jae
sahf
jnp
push
dec
pop
sar
in
js
loopne
call
or
mov
cmp
idiv
popf
(bad)
push
mov
push
fcomip
imul
cmp
lahf
ret
data16
scas
loop
mov
ss
xchg
cmc
call
sbb
dec
xor
add
clc
push
scas
inc
add
pop
xor
(bad)
push
cmp
retf
(bad)
cmps
jno
mov
(bad)
popf
push
and
jmp
aam
shl
out
scas
(bad)
(bad)
repnz
retf
and
xor
inc
dec
push
jno
cwde
repz
(bad)
(bad)
dec
cli
pop
icebp
mov
sbb
jns
mov
dec
fst
sub
(bad)
(bad)
jg
inc
fadd
cs
mov
or
adc
hlt
jno
mov
sar
cmp
cmps
aam
pop
loope
jge
aaa
and
out
pop
(bad)
(bad)
(bad)
fist
out
sub
push
jno
fmul
push
dec
in
scas
test
scas
xor
(bad)
(bad)
mov
stc
imul
int
mov
scas
xchg
or
add
push
pop
ret
sbb
data16
(bad)
(bad)
jg
lock
sbb
and
arpl
inc
adc
pop
add
ror
sub
cmp
xor
mov
jp
(bad)
fcomip
mov
mov
movs
xchg
mov
data16
push
xor
jl
push
outs
jg
icebp
call
in
jp
in
loopne
and
sub
lahf
out
push
push
cli
call
mov
sub
cmp
xor
xor
(bad)
push
clc
cmp
cs
cmp
fs
sub
test
dec
push
mul
call
cs
ja
(bad)
dec
sub
out
sub
stc
inc
xchg
sub
aas
dec
or
pushf
(bad)
inc
cli
add
mov
cli
push
ror
fisubr
out
clc
sbb
retf
jge
fnsave
jnp
sub
inc
dec
(bad)
call
adc
inc
inc
mov
ret
sub
pop
mov
push
ror
es
rol
push
int
xor
cmps
mov
inc
pop
mov
lds
in
pop
cmp
mov
lock
std
cmp
and
pop
mov
fcmovne
and
mov
(bad)
(bad)
cmp
retf
cmps
(bad)
out
sub
push
mov
jge
fnstcw
mov
jecxz
or
ret
imul
and
sbb
xchg
xchg
das
fistp
(bad)
fnstsw
pop
fcom
add
adc
in
or
dec
scas
out
push
lahf
sbb
(bad)
out
xchg
sub
inc
mov
gs
and
mov
add
mov
enter
jg
aad
sbb
and
mov
call
movs
(bad)
(bad)
push
push
push
add
cli
pop
jecxz
pop
adc
fild
idiv
movs
call
xor
(bad)
aas
push
fcomp
mov
outs
bound
cmp
rcr
lods
mov
test
mov
add
sbb
fbld
test
lock
mov
inc
(bad)
test
mov
mov
push
icebp
jmp
dec
in
cwde
jge
in
mov
sbb
cli
shl
sahf
fnstsw
popa
das
test
inc
rcl
hlt
cli
xchg
into
push
inc
jmp
jmp
outs
int
mov
std
xchg
push
pop
cs
and
(bad)
(bad)
(bad)
cli
add
mov
push
call
mov
(bad)
add
adc
sub
inc
(bad)
jmp
adc
push
stos
outs
jecxz
add
cs
cmps
les
and
xor
retf
fcmovb
xor
and
retf
call
jo
pop
push
or
jmp
xor
xchg
je
xchg
sbb
mov
cli
(bad)
out
clc
imul
pop
test
leave
sub
aam
xchg
or
jp
scas
nop
test
imul
mov
cmc
pop
or
icebp
loope
loope
or
mov
daa
add
xchg
aam
adc
dec
and
popa
cld
jnp
mov
fldcw
imul
xchg
mov
mov
and
loopne
test
call
mov
cdq
mov
daa
clc
ret
pop
xchg
mov
aam
push
ins
pop
inc
retf
sbb
cld
test
inc
push
shr
push
aam
inc
pop
mov
bound
loop
xor
xchg
clc
mov
sub
sbb
mov
aas
sub
sub
cmp
lea
pop
mov
ins
or
xchg
dec
int3
mov
adc
cld
sub
call
inc
in
(bad)
mov
mov
lea
xor
dec
aam
push
movs
hlt
(bad)
(bad)
jmp
and
push
shr
cmps
or
aad
stos
pop
int
push
pusha
cld
mov
sbb
shl
dec
sbb
dec
out
fadd
lds
lea
inc
mov
(bad)
(bad)
out
aam
in
gs
outs
repnz
cmp
nop
or
and
loope
in
jae
pop
test
sahf
jo
into
cmc
and
fiadd
dec
repz
inc
call
and
aas
ins
mov
sahf
jmp
test
push
stos
dec
jp
out
test
fld
or
jnp
(bad)
call
pop
mov
jmp
stos
cmp
(bad)
(bad)
(bad)
push
imul
aad
adc
adc
sub
push
(bad)
cmp
push
adc
ret
out
fcomip
dec
xor
xchg
dec
aam
sub
jp
mov
stos
push
sub
mov
ins
daa
movs
jmp
and
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
aas
adc
inc
mov
inc
gs
mov
(bad)
(bad)
inc
jl
jg
or
daa
dec
fistp
xchg
les
mov
fadd
outs
adc
push
inc
mov
retf
pop
inc
(bad)
call
out
pop
cwde
inc
stos
call
nop
dec
loop
pop
scas
pop
cmp
scas
mov
shr
or
inc
push
(bad)
(bad)
dec
test
jle
adc
mov
xchg
pop
push
cld
(bad)
fisttp
cdq
xchg
movs
imul
retf
push
adc
push
retf
rcl
cmp
stos
lahf
jbe
push
int
iret
sti
(bad)
jmp
and
cs
xor
(bad)
call
out
jno
adc
pusha
and
(bad)
jmp
out
idiv
add
push
push
ret
icebp
sub
cmc
popf
sub
in
cmp
loope
sbb
(bad)
mov
sub
sub
jge
addr16
cwde
mov
add
loopne
call
sahf
fadd
push
pop
or
dec
std
(bad)
jmp
in
dec
pop
xor
xor
mov
cmp
aas
mov
pop
mov
in
jmp
adc
(bad)
ds
ins
cmc
call
(bad)
(bad)
dec
mov
sbb
out
inc
jl
inc
push
inc
test
ret
movs
mov
add
inc
shl
pop
dec
xchg
stc
dec
aam
and
xor
sbb
xchg
mov
daa
pop
stos
jmp
pop
inc
enter
ficomp
mov
xor
and
in
jnp
mov
add
ins
mov
adc
jl
iret
sub
loop
pushf
cmps
sti
inc
ret
and
and
dec
(bad)
(bad)
(bad)
call
push
enter
pop
cmp
or
inc
jne
sti
push
ds
and
hlt
jl
cli
stos
mov
jmp
loop
pop
cdq
jl
movs
xor
sub
in
std
xor
fwait
(bad)
call
cld
dec
rcl
outs
stos
dec
sub
pop
add
sbb
add
(bad)
aad
cmp
cmps
ss
jmp
push
pop
(bad)
jl
lock
pop
repnz
fs
mov
test
sbb
mov
std
dec
and
int3
dec
xor
mov
jmp
inc
rcr
fimul
inc
sub
aas
test
and
or
(bad)
nop
out
(bad)
(bad)
push
jg
adc
and
loope
shl
cmp
cmps
push
adc
test
adc
les
mov
(bad)
in
mov
push
jne
jge
call
(bad)
jp
mov
outs
rol
mov
jmp
test
push
xchg
cmp
call
mov
(bad)
call
add
cdq
and
ds
pop
stos
sbb
adc
ror
sub
adc
push
push
push
ds
fcmovnb
ret
xchg
xor
rcl
inc
in
arpl
cld
jmp
and
in
test
(bad)
sub
movs
xor
cwde
stos
jae
aad
call
pop
je
stc
in
fcmovbe
stc
mov
fdivr
mov
jle
ret
gs
hlt
or
jmp
adc
inc
mov
jg
sub
sub
fs
(bad)
(bad)
push
cmps
lock
jg
add
(bad)
jecxz
sub
xor
adc
sbb
aas
sub
lock
(bad)
dec
push
dec
cmc
pop
jbe
retf
(bad)
stos
xchg
jo
dec
mov
fsubr
(bad)
repz
adc
mov
mov
outs
cmps
xchg
push
xchg
mov
and
xchg
jo
pop
mov
loope
rol
sbb
rcr
mov
or
and
and
pushf
xor
(bad)
clc
call
adc
mov
pop
push
and
push
dec
cmp
pushf
xchg
xor
bound
bound
pop
sbb
inc
push
sbb
xor
or
(bad)
mov
in
icebp
imul
mov
sti
cvtdq2ps
scas
cli
(bad)
(bad)
cmp
push
gs
mov
cld
popf
sub
test
in
xchg
push
mov
push
mov
iret
addr16
test
js
sbb
(bad)
(bad)
jmp
lock
jl
enter
xchg
lock
jmp
mov
adc
call
test
sbb
mov
lahf
sbb
imul
outs
jecxz
and
(bad)
(bad)
push
ficomp
jg
push
das
mov
mov
popw
nop
aaa
jmp
cmp
sar
test
and
fcmovb
and
push
and
out
push
loop
(bad)
(bad)
std
push
test
xchg
mov
addr16
adc
sbb
cmp
mov
or
call
call
xor
xor
fsubr
fcomp
or
dec
shr
sahf
dec
pop
mov
and
inc
gs
cmp
in
and
push
xor
xor
arpl
stos
fcom
pop
mov
xchg
mov
lods
cmp
and
lahf
push
jmp
adc
call
add
in
push
mov
push
cli
add
test
xor
fldenv
stos
neg
(bad)
call
loopne
ins
mov
jbe
(bad)
mov
outs
push
popf
call
(bad)
inc
add
push
loopne
outs
cdq
push
cmp
(bad)
icebp
rcl
rcr
pop
div
(bad)
(bad)
jg
mov
fcomi
push
adc
and
mov
sbb
add
(bad)
(bad)
std
xor
test
les
add
mov
hlt
daa
mov
int3
push
retf
mov
pop
pop
and
push
pop
inc
in
mov
cmp
scas
cmps
div
(bad)
call
mov
mov
aad
sbb
jecxz
push
(bad)
xchg
push
fst
inc
or
arpl
pop
shl
pop
fldenv
lds
or
je
pop
mov
jg
xchg
femms
xchg
shl
push
ret
sbb
out
jbe
fisttp
inc
xor
scas
inc
add
fldenv
(bad)
xor
(bad)
call
retf
inc
stos
(bad)
xchg
and
jge
dec
call
(bad)
mov
sar
sub
jecxz
iret
ficom
inc
adc
aaa
push
mov
sub
fmul
fimul
adc
sbb
inc
xor
stc
enter
dec
pop
or
(bad)
mov
daa
mov
or
retf
mov
pop
in
repz
or
(bad)
mov
outs
jae
push
jo
enter
jge
and
rcl
pop
mov
das
clc
(bad)
mov
fsub
jbe
mov
adc
iret
movs
mov
iret
add
mov
(bad)
dec
jae
xor
popa
out
adc
adc
mov
movs
pop
out
jo
call
jns
mov
jmp
(bad)
mov
dec
rol
int3
(bad)
(bad)
(bad)
out
fucomip
dec
inc
ins
cdq
push
adc
mov
xor
mov
push
mov
clc
stos
add
push
pusha
xchg
fwait
adc
(bad)
jmp
push
cld
popa
cmp
leave
and
push
cli
adc
iret
sub
leave
in
stc
retf
repnz
fwait
sti
pop
add
push
and
call
push
leave
mov
stos
(bad)
jl
mov
aam
add
call
call
xlat
pop
mov
scas
call
ror
shl
xor
dec
(bad)
(bad)
inc
test
stos
xor
(bad)
cmp
sub
mov
add
(bad)
call
pop
mov
aam
mov
std
gs
cld
lahf
movs
push
outs
out
hlt
(bad)
inc
(bad)
cld
(bad)
(bad)
jmp
xor
imul
in
lock
dec
sti
arpl
sub
mov
mov
cli
call
sub
or
mov
mov
hlt
lahf
jbe
pop
cwde
jne
(bad)
push
cmp
mov
jmp
inc
sub
inc
mov
(bad)
mov
(bad)
(bad)
call
(bad)
cmps
and
into
and
aas
mov
dec
jmp
call
xor
dec
cmps
cmp
push
fisttp
inc
je
dec
dec
retf
imul
mov
test
jl
sar
js
and
push
fucomi
mov
aad
sub
(bad)
out
or
and
jl
loopne
add
mov
jne
(bad)
cmc
dec
sub
or
(bad)
out
mov
add
xor
xor
(bad)
(bad)
call
ja
mov
pop
bound
je
and
dec
pusha
arpl
pop
jbe
dec
cld
ret
lahf
arpl
inc
call
(bad)
out
cld
fcomip
(bad)
jp
loope
pop
aad
stc
dec
ja
jmp
mov
fwait
movs
push
inc
(bad)
(bad)
push
call
call
mov
ins
ret
push
jmp
adc
test
mov
cmps
(bad)
call
mov
push
ds
or
dec
rcl
push
dec
es
jmp
xor
lods
sub
add
mov
call
mov
xor
fstp
cli
sbb
mov
jnp
push
jmp
jmp
inc
loopne
les
stos
xchg
xchg
pop
pop
ins
mov
(bad)
sti
add
jecxz
jmp
or
daa
movs
sub
pop
jmp
mov
stos
pop
sbb
(bad)
mov
dec
out
jge
sub
and
push
outs
xchg
and
jmp
loopne
xor
(bad)
push
cmp
push
jbe
mov
mov
inc
outs
push
add
sbb
mov
xchg
(bad)
jmp
mov
fsubr
mov
or
scas
inc
mov
push
jns
pop
mov
and
ds
std
(bad)
out
inc
std
mov
fnstsw
mov
push
jae
hlt
rcr
addr16
cmpps
iret
push
out
in
cmp
call
stos
mov
hlt
xchg
sbb
xchg
call
leave
xor
shl
jb
das
cmp
(bad)
jmp
cmps
push
sub
pop
scas
xchg
sbb
mov
in
add
into
sahf
ins
push
mov
ror
inc
call
and
pop
loopne
imul
aaa
cmp
push
mov
mov
scas
jmp
xchg
(bad)
(bad)
dec
shl
aas
cmp
ret
mov
mov
in
lock
or
out
push
call
(bad)
out
and
xchg
cmp
jle
inc
cmc
(bad)
mov
cmp
fmulp
adc
jle
and
test
(bad)
(bad)
(bad)
mov
xor
pop
pop
push
fstp
add
sbb
repz
test
test
dec
in
stos
jl
push
pusha
out
inc
sar
(bad)
(bad)
call
adc
aad
inc
shr
rcl
mov
test
es
cmp
outs
jmp
mov
jmp
ret
shr
mov
add
mov
mov
call
push
daa
push
hlt
(bad)
cmp
dec
mov
loope
inc
fst
ins
stos
mov
(bad)
jmp
push
or
cdq
adc
sbb
mov
pop
fwait
cwde
stos
rol
mov
out
or
mov
mov
pop
outs
or
xor
bound
sbb
inc
push
add
jo
ja
(bad)
(bad)
mov
aas
cdq
sbb
jo
iret
ror
sub
sub
dec
jle
cmp
push
push
push
cld
retf
inc
call
sbb
jmp
retf
cmps
out
imul
repz
and
lock
es
fidivr
and
jno
hlt
cmp
mov
mov
fcom
ret
cmp
push
nop
loope
std
or
jmp
int
inc
fs
call
pop
pushf
adc
call
cmp
bound
stos
arpl
push
cmp
jg
imul
sahf
add
push
push
into
sbb
pop
pop
(bad)
(bad)
(bad)
jmp
mov
dec
cwde
ja
or
fsub
mov
lahf
les
cli
adc
sub
ja
call
arpl
mov
(bad)
dec
xchg
xor
and
test
out
lock
sbb
xchg
add
fcmovu
clc
into
icebp
sahf
(bad)
sub
cli
jmp
es
inc
(bad)
mov
ret
pusha
call
push
test
dec
jae
aaa
ficom
and
into
stos
cmp
jns
and
jmp
loopne
adc
push
mov
xchg
loope
jo
jnp
shr
add
cs
movs
rol
push
jmp
imul
(bad)
call
jle
push
ret
pop
gs
outs
cli
jp
(bad)
das
push
test
pop
stos
pop
push
sar
mov
out
sub
mov
dec
xor
ins
mov
aad
(bad)
retf
adc
push
dec
bound
pop
imul
call
mov
ja
stos
jl
ret
jle
out
dec
enter
(bad)
(bad)
mov
jle
int3
loop
jbe
adc
mov
push
mov
sub
mov
mov
add
mov
adc
push
sbb
(bad)
fild
sub
fsubr
xor
and
sub
(bad)
(bad)
(bad)
enter
clc
or
fidivr
out
ficom
dec
cld
(bad)
jmp
out
retf
adc
test
jne
sbb
cs
clc
sbb
fistp
movs
out
add
(bad)
(bad)
(bad)
jmp
xor
cli
xor
aas
push
dec
fild
adc
xchg
mov
add
sbb
or
mov
xlat
fidivr
in
mov
cmps
dec
jns
fisubr
repz
jge
cmp
clc
jmp
cmps
ret
sbb
xor
sbb
or
std
(bad)
inc
jmp
inc
mov
inc
sub
xlat
gs
xchg
(bad)
(bad)
jmp
and
stos
xor
and
xchg
cmp
push
fbld
stos
pop
loopne
arpl
ja
add
cld
(bad)
jmp
retf
jge
sbb
push
leave
mov
sbb
sbb
jmp
jg
inc
cwde
sbb
cmp
inc
enter
cli
push
sub
push
out
fdivr
dec
clc
(bad)
call
pop
call
add
cs
(bad)
(bad)
pushf
or
std
sti
jmp
scas
fcomp
inc
aad
xor
dec
(bad)
push
fistp
imul
jecxz
nop
aaa
out
mov
inc
or
pop
and
or
xlat
or
test
push
mov
jp
pop
aam
cdq
xchg
xor
dec
hlt
mov
cmp
call
xlat
push
adc
push
mov
(bad)
fsub
xchg
dec
lock
and
mov
cmc
(bad)
mov
pop
pop
out
cmps
mov
movs
es
(bad)
(bad)
jnp
stos
sub
std
fstp
(bad)
ror
jl
int3
add
test
fcomp
push
mov
icebp
sub
test
mov
inc
clc
arpl
rcr
ins
bound
mov
mov
or
sub
adc
psrld
sub
push
cmp
xchg
push
stos
(bad)
xchg
pop
(bad)
cmp
sub
mov
or
dec
clc
(bad)
inc
test
scas
scas
bound
push
cld
sub
movs
es
ret
mov
retf
cld
dec
(bad)
loop
ret
scas
fadd
jl
ins
or
mov
mov
fst
dec
fst
fst
stos
pop
push
mov
ja
enter
xor
loope
lds
mov
and
jg
test
sahf
out
xor
into
aam
inc
ret
cmp
dec
sub
enter
(bad)
(bad)
out
(bad)
fstp
xor
dec
or
outs
movs
shr
mov
std
jg
retf
(bad)
mov
sub
push
div
(bad)
jg
nop
push
lock
pop
test
sar
setnp
dec
lods
jmp
out
cmp
pushf
push
inc
stos
xor
in
mov
dec
add
movs
or
dec
dec
adc
dec
mov
or
ss
inc
add
test
jle
jmp
mov
rcl
mov
push
add
push
neg
push
js
mul
jno
mov
mov
(bad)
call
xchg
push
add
ret
ds
mov
mov
hlt
stos
sub
out
ror
xchg
(bad)
or
sar
sub
jmp
pusha
int
jmp
pop
xchg
and
pop
test
xor
nop
xchg
pop
jmp
fild
dec
ins
out
jl
jmp
jne
movs
dec
aad
cmc
mov
std
jg
cld
dec
ins
ret
(bad)
xor
mov
mov
lds
in
fmul
xchg
(bad)
in
dec
xor
(bad)
(bad)
(bad)
(bad)
mov
mov
jle
sbb
or
xchg
mov
(bad)
int3
in
push
push
movs
sar
add
jmp
and
push
std
jg
(bad)
fdivr
mov
fstp
sar
std
(bad)
fadd
adc
pushf
clc
out
fwait
push
lahf
int3
enter
iret
out
(bad)
(bad)
(bad)
inc
pop
scas
fld
mov
add
pop
and
(bad)
mov
(bad)
call
add
rcr
sub
cmp
ficom
jg
jmp
inc
int
rcl
push
mov
test
outs
cmp
fcomp
icebp
mov
push
xlat
dec
push
iret
jge
lahf
aad
dec
mov
jo
dec
es
push
mov
call
clc
arpl
into
call
(bad)
js
or
pop
push
fadd
jl
push
ja
xor
int3
or
int
std
(bad)
(bad)
jl
fincstp
push
mov
aad
imul
xor
int3
int3
(bad)
rol
jmp
pop
in
cmp
add
sahf
mov
retf
shl
cmp
call
push
mov
inc
jnp
lods
lds
jle
arpl
mov
clc
(bad)
jmp
lahf
sbb
call
cmp
inc
dec
arpl
dec
push
add
(bad)
dec
cli
pop
jle
outs
dec
xlat
inc
aas
nop
iret
sub
add
lods
mov
pusha
mov
xor
outs
iret
xchg
push
pop
cwde
mov
jl
jbe
jmp
sbb
out
les
(bad)
cs
sub
sbb
call
jmp
cmp
jbe
ret
cli
mov
adc
jmp
mov
or
pop
xor
(bad)
fistp
shl
hlt
scas
aad
mov
inc
popa
aad
mov
(bad)
(bad)
cli
add
ins
inc
push
mov
cwde
xor
add
inc
fwait
push
and
(bad)
(bad)
push
(bad)
cmp
retf
repnz
push
sbb
(bad)
mov
leave
in
dec
test
fs
mov
movs
inc
jae
inc
cmc
fwait
out
or
(bad)
jmp
mov
mov
inc
sbb
push
dec
mov
mov
icebp
fsubr
es
add
inc
xlat
sub
jne
clc
(bad)
(bad)
jp
mov
mov
test
(bad)
and
mov
(bad)
out
retf
stos
in
mov
mov
ret
les
hlt
push
or
cmp
(bad)
(bad)
jg
pop
shr
cmc
mov
cmp
neg
pop
cmp
test
movs
inc
aaa
or
pop
pop
imul
push
jno
dec
and
inc
xchg
outs
pop
(bad)
pop
lds
in
paddsb
or
(bad)
(bad)
(bad)
jmp
push
inc
ror
mov
sbb
stos
push
adc
or
std
(bad)
(bad)
dec
sbb
push
sbb
push
xchg
inc
dec
shl
iret
fisttp
adc
mov
ja
pop
push
jmp
ret
nop
mov
out
sahf
cli
or
(bad)
jmp
cdq
js
sbb
ds
pop
mov
lods
outs
call
(bad)
stos
cmp
and
or
push
test
pop
stc
dec
xor
ins
(bad)
fistp
dec
fdivr
iret
mov
iret
mov
xchg
adc
ret
xor
iret
lock
lea
pop
pop
aam
rcr
or
shl
(bad)
loopne
mov
(bad)
mov
sub
leave
sbb
cmp
imul
sub
aam
movs
mov
add
fwait
add
retf
or
push
hlt
(bad)
call
inc
and
fisub
mov
repnz
lods
arpl
fnsave
arpl
xchg
cmp
jg
jmp
sbb
sub
pop
in
js
mov
jmp
scas
mov
test
popa
mov
ss
call
test
push
cs
cmc
(bad)
mov
sbb
dec
fwait
pop
les
lds
movs
(bad)
cmp
xor
mov
dec
cmp
test
call
ret
ret
fisubr
or
mov
sub
jbe
or
gs
out
(bad)
(bad)
push
jbe
es
push
sbb
add
imul
imul
mov
mov
mov
in
and
mov
inc
test
lahf
mov
xchg
mov
or
inc
or
or
not
add
adc
xor
inc
mov
fwait
or
stos
sbb
mov
leave
clc
(bad)
jmp
cmp
gs
sub
arpl
inc
(bad)
(bad)
jmp
add
repnz
call
and
fisubr
hlt
mov
(bad)
(bad)
mov
xchg
ds
add
(bad)
mov
inc
call
(bad)
dec
xor
movs
sbb
lods
shl
fsubr
inc
xchg
out
leave
daa
lods
rcl
jp
(bad)
out
pop
call
mov
jp
adc
jmp
pop
cwde
jmp
jo
xchg
or
jno
(bad)
xor
fadd
pop
add
mov
out
sub
stos
jle
ret
jbe
stos
aaa
loope
sar
sahf
cld
(bad)
jg
fcomp
pop
out
repnz
fnstenv
inc
pop
and
fadd
btr
aad
xor
scas
(bad)
(bad)
(bad)
jmp
ja
sbb
pop
icebp
daa
ficom
sub
fdiv
jae
mov
mov
(bad)
(bad)
jg
push
lods
sbb
cmc
pop
fisubr
mov
test
das
push
bound
cld
leave
pop
ins
(bad)
jmp
fldenv
push
shr
xor
add
in
dec
(bad)
sbb
aaa
shl
repnz
in
sbb
pop
dec
push
push
inc
push
dec
push
mov
push
and
(bad)
call
push
daa
push
jg
aas
adc
lods
stos
call
add
sbb
ins
(bad)
push
(bad)
cli
fcomip
push
rol
jp
imul
retf
aam
fmul
pop
dec
pop
mov
sbb
out
test
mov
test
cmps
cwde
pushf
dec
sub
(bad)
push
sti
stos
rcl
jl
cmp
call
sub
outs
jle
ficomp
(bad)
push
push
mov
mov
sbb
inc
xchg
ret
imul
dec
call
sbb
pop
jbe
jp
and
ins
out
pop
push
call
inc
ror
mov
aad
retf
pop
sti
rcr
cwde
(bad)
(bad)
(bad)
call
dec
cli
daa
xchg
in
in
mov
mul
push
mov
(bad)
pop
dec
inc
(bad)
(bad)
out
cli
popa
fwait
lods
jmp
pop
es
pop
retf
movs
push
cmps
pop
mov
ss
and
(bad)
(bad)
(bad)
jmp
bound
rcl
dec
lods
xor
add
mov
push
xchg
mov
arpl
sub
push
call
call
cmps
push
dec
and
es
push
mov
pop
and
mov
fst
sub
inc
mov
sbb
mov
sub
and
daa
xchg
and
cmp
sbb
mul
retf
imul
xlat
jnp
daa
add
(bad)
inc
aaa
pop
stos
mov
and
imul
mov
mov
lods
pusha
push
test
fsubr
ins
jo
inc
fdivr
pop
lock
clc
and
test
cmps
push
ror
test
out
rcr
jmp
jg
fstp
in
and
dec
lods
adc
pop
sub
popa
test
push
xchg
outs
mov
in
inc
push
mov
imul
movs
adc
movs
mov
stos
std
(bad)
inc
and
test
pop
in
ss
mov
push
sti
mov
ds
call
push
in
je
mov
jnp
cmp
and
sub
jmp
fnstcw
and
sub
or
(bad)
jg
cmp
mov
adc
or
add
or
mov
out
pop
cmp
rcl
sahf
mov
(bad)
(bad)
inc
in
mov
ret
push
dec
sbb
and
stos
ficomp
pop
fcom
loopne
or
(bad)
dec
cmc
pop
das
cmp
repnz
mov
stos
mov
iret
retf
outs
sbb
xor
(bad)
(bad)
jl
fsubr
mov
(bad)
or
lods
adc
(bad)
(bad)
dec
lods
sub
out
fistp
fistp
lods
rcl
(bad)
dec
retf
in
pop
dec
jl
stos
ret
inc
lea
and
mov
inc
cli
(bad)
ds
movs
popa
cdq
retf
pop
push
push
(bad)
in
int
mov
fsubr
sub
pop
mov
pop
inc
mov
push
lods
pop
jl
popf
das
lock
rcl
jns
call
(bad)
fcmovbe
cmp
outs
mov
(bad)
jmp
adc
mov
shr
push
lods
push
test
sub
cmp
xchg
imul
and
push
setb
fstp
(bad)
call
jns
and
idiv
retfw
(bad)
call
or
cmp
addr16
mov
jbe
inc
pop
shl
push
movs
pop
sbb
(bad)
dec
fdivr
push
dec
sbb
cmps
aam
retf
into
dec
sub
inc
mov
xchg
push
aad
inc
loopne
and
fistp
mov
jl
mov
push
sbb
mov
lods
dec
(bad)
mov
(bad)
cmps
fsubr
mov
std
dec
pop
sub
dec
cs
in
outs
pop
pop
outs
mov
fwait
test
(bad)
push
jmp
mov
mov
test
sub
add
call
pop
push
jae
adc
rcl
mov
lods
mul
mov
cmps
xchg
scas
movs
(bad)
(bad)
call
inc
jl
retf
dec
aaa
fisubr
movs
ret
mov
pop
inc
stos
dec
push
mov
(bad)
mov
or
push
jge
je
test
xchg
cwde
retf
pop
(bad)
inc
mov
mov
mov
sbb
jl
retf
pop
mov
add
push
jbe
inc
loop
inc
test
scas
fst
ins
retf
xchg
test
hlt
dec
fsub
mov
push
cmp
lods
movs
dec
cmc
cmc
(bad)
(bad)
inc
sbb
xor
pop
lods
leave
xor
stos
mov
or
shr
lock
call
aaa
dec
inc
xor
jne
lods
sbb
stos
pop
pop
and
jnp
mov
adc
movs
lods
mov
mov
stos
jle
fiadd
sub
cmps
jmp
jne
f2xm1
(bad)
(bad)
dec
inc
ret
clc
popf
fcomp
xchg
pop
inc
cli
in
mov
pushf
xor
sahf
into
stos
mov
outs
es
mov
pop
mov
cwde
call
(bad)
sub
call
scas
sbb
xlat
pop
lods
hlt
add
ds
add
mov
enter
hlt
jmp
jmp
push
cmps
jno
or
pop
in
sub
loope
outs
nop
mov
cmc
fistp
fild
sub
(bad)
(bad)
push
ror
cmp
push
push
out
into
(bad)
xor
adc
lods
jb
pop
mov
mov
mov
icebp
cmp
sbb
fsubr
and
add
push
cwde
cs
out
(bad)
(bad)
mov
das
cwde
fcmovbe
loop
scas
(bad)
(bad)
jmp
push
leave
imul
jp
adc
test
fwait
mov
data16
push
(bad)
(bad)
(bad)
jmp
mov
inc
push
or
popa
out
adc
cdq
dec
(bad)
outs
pop
pop
jle
xor
or
mov
out
pop
stos
mov
ins
mov
(bad)
in
cmp
retf
pop
jmp
test
cmps
jle
fild
scas
test
add
xchg
add
stos
push
mov
xchg
inc
(bad)
fst
clc
das
adc
nop
pop
loop
inc
sti
add
js
ins
fmul
push
mov
retf
sub
xchg
pop
loop
fisubr
mov
cmp
push
data16
cmp
call
loop
inc
xchg
sar
(bad)
(bad)
call
sub
push
pop
pop
adc
in
fsubr
ds
in
aam
daa
pop
ins
jg
jg
adc
stos
mov
pop
dec
pop
mov
dec
fild
movs
cmp
cmc
jmp
push
push
out
sbb
test
mov
inc
nop
inc
mov
bnd
mov
out
mov
dec
test
iret
pop
cli
loopne
stos
sahf
pop
sub
jo
sbb
fmul
dec
sbb
jg
mov
std
jmp
sub
mov
push
(bad)
(bad)
(bad)
push
mov
leave
cmps
or
pop
mov
pushf
cld
xor
stos
sub
mov
dec
and
push
mov
movs
mov
mov
xchg
cmp
dec
mov
ja
fidiv
cmp
outs
or
sbb
pop
daa
jnp
icebp
std
jmp
(bad)
stc
imul
cld
fcomp
aad
int
into
aas
jns
(bad)
test
iret
or
push
cs
jle
lods
int
sbb
xchg
push
xchg
mov
inc
push
loope
xchg
xchg
jge
int3
adc
or
mov
or
fld
in
push
(bad)
mov
xchg
aam
(bad)
ja
jno
jne
outs
(bad)
cmp
sbb
pop
fcos
(bad)
(bad)
(bad)
std
inc
fimul
sbb
dec
pop
push
mov
pop
fucom
sub
rcl
fstp
cmp
sub
(bad)
dec
mov
data16
jae
fist
cmp
std
pop
pop
test
ins
mov
lock
sub
pop
movs
jp
pop
pop
pop
jle
push
(bad)
(bad)
jmp
adc
pop
popa
mov
icebp
dec
xchg
stos
pop
xlat
into
jb
ret
pop
rcr
jle
into
push
ins
clc
mov
jo
rcr
and
fmul
and
mov
mov
scas
out
push
notrack
ins
sub
push
je
test
xor
inc
(bad)
cmps
push
aam
clc
dec
push
lea
jge
sub
pop
pop
mov
ins
cld
out
mov
push
jmp
fnsave
inc
popa
sar
jg
loop
cmps
or
mov
push
xchg
xor
out
out
sub
dec
cli
fcomp
push
mov
mov
adc
nop
out
mov
fisub
lock
int3
sar
imul
mov
rcr
or
pop
inc
push
sahf
mov
sub
(bad)
(bad)
(bad)
jp
imul
or
inc
sub
fld
mov
jecxz
stos
mov
(bad)
(bad)
(bad)
jns
dec
sub
push
fcomp
in
inc
mov
sbb
in
sub
fcomp
lea
shr
lock
(bad)
dec
mov
icebp
xchg
fsubr
into
cmp
pop
test
pop
adc
icebp
fst
mov
lods
ds
(bad)
(bad)
call
aad
pop
std
(bad)
pop
sti
pop
mov
xchg
mov
js
lods
sub
(bad)
jp
sub
mov
in
fidivr
and
mov
popa
cmp
ficomp
stos
fimul
fmul
rcl
jmp
lods
lahf
in
sbb
or
(bad)
(bad)
inc
lock
(bad)
push
popf
cmp
adc
(bad)
(bad)
(bad)
cld
sbb
cmp
jno
shl
pop
fstp
jl
rcr
std
xchg
sbb
movs
leave
jmp
call
cmp
sbb
xor
jl
ins
dec
sbb
sar
(bad)
jmp
cmp
mov
pop
popa
mov
pop
push
mov
jnp
pop
jae
(bad)
(bad)
jmp
pop
popf
and
adc
pop
shl
sbb
sbb
or
call
imul
push
jl
hlt
(bad)
(bad)
call
iret
icebp
jg
sub
std
inc
dec
enter
sbb
lods
pop
cmps
iret
mov
xlat
pop
cld
inc
cmp
dec
test
fld
retf
dec
mov
sar
(bad)
jg
mov
sbb
bound
outs
jl
jae
nop
(bad)
jmp
pop
mov
pop
mov
(bad)
(bad)
(bad)
mov
mov
daa
stos
mov
pop
pop
jbe
adc
mov
ins
add
(bad)
(bad)
fidivr
fimul
(bad)
dec
push
sub
cs
test
(bad)
mov
fiadd
(bad)
dec
fisub
out
lahf
shr
(bad)
icebp
pop
jnp
(bad)
jg
movs
sti
sub
mov
jl
mov
in
cmps
fsubr
fstp
mov
in
sub
frstor
mov
mov
mov
(bad)
(bad)
(bad)
call
addr16
push
dec
das
pop
sar
popa
leave
pop
cmps
pop
pop
cmps
inc
out
push
cmp
ins
cmp
dec
outs
movs
cmp
rcl
fild
pop
mov
das
add
(bad)
aaa
adc
pop
sub
pop
mov
xchg
shr
jl
popf
daa
mov
ins
cli
cs
(bad)
retf
push
in
addr16
(bad)
(bad)
(bad)
call
clc
std
outs
stos
scas
lods
fiadd
mov
sahf
std
lods
loope
mov
inc
ds
sub
sub
or
(bad)
in
loope
xor
mov
xchg
xchg
scas
mov
jmp
rol
jl
enter
dec
pop
cld
mov
mov
call
(bad)
fmul
fsubr
ror
sub
scas
pop
mov
inc
call
(bad)
(bad)
jmp
iret
sahf
iret
ss
fdivp
inc
fsub
(bad)
fstp
mov
pushf
mov
sti
addr16
(bad)
(bad)
mov
les
sbb
rcl
into
pop
sbb
pop
dec
sbb
popf
mov
(bad)
(bad)
jmp
adc
cmp
lods
es
in
fwait
dec
stos
fdiv
push
jnp
and
sub
(bad)
out
ja
(bad)
(bad)
mov
jns
lahf
mov
add
cmp
sbb
xor
fcomp
adc
mov
call
into
call
dec
push
jae
cmps
mov
xor
and
push
ret
adc
or
retf
jo
stos
inc
cld
mov
iret
jb
mov
mov
add
adc
ret
or
push
enter
(bad)
mov
mov
mov
xchg
jno
(bad)
xlat
cmc
fstp
mov
or
dec
nop
dec
ret
push
adc
mov
push
pop
sub
fild
fwait
stos
jb
push
sbb
mov
rcr
inc
(bad)
push
mov
das
int
cdq
cmps
sbb
fwait
dec
dec
push
sahf
mov
(bad)
inc
dec
in
int
jg
inc
popa
jbe
fcmovnbe
fild
(bad)
jle
jmp
pop
push
hlt
push
(bad)
push
iret
into
xchg
push
test
mov
xor
loope
loope
mov
ret
xchg
outs
add
mov
cli
inc
add
mov
push
ins
(bad)
fild
hlt
in
xlat
fmul
jbe
mov
out
cmp
jnp
js
cli
inc
mov
(bad)
pop
fcmovnu
sub
(bad)
(bad)
(bad)
(bad)
cmp
mov
out
push
out
push
rol
ror
(bad)
pop
cwde
jmp
icebp
or
(bad)
(bad)
push
mov
ss
pop
mov
stc
je
rcl
cmp
icebp
inc
mov
std
cmp
cmps
mov
mov
cmp
fbld
mov
xor
(bad)
(bad)
jg
and
ja
scas
mov
sbb
pop
mov
cld
mov
add
mov
or
lods
push
pop
das
jmp
mov
clc
push
jl
or
(bad)
fnclex
xor
cld
push
mov
imul
cmps
(bad)
lods
int3
dec
xlat
loop
daa
scas
retf
cmc
jmp
or
pop
stos
pop
push
jno
mov
pop
jl
xor
mov
sar
sar
stos
dec
mov
push
or
mov
push
mov
scas
jecxz
mov
cmp
fsubr
jmp
inc
test
push
sub
fiadd
sbb
pop
jg
cmp
lahf
js
aas
add
int3
js
or
ret
or
addr16
pop
fstp
cmps
into
mov
mov
js
into
std
inc
cmp
sbb
shr
jg
mov
sbb
mov
pop
mov
or
dec
pop
sub
cld
fiadd
pop
das
cmp
fistp
mov
inc
popf
jmp
lahf
ficomp
cmps
enter
call
add
jmp
(bad)
sub
das
sub
sbb
(bad)
(bad)
js
cmp
arpl
jne
sub
frstor
lods
fsubr
dec
xchg
sbb
imul
in
lea
(bad)
out
call
(bad)
push
pop
retf
popf
pop
adc
pop
sub
push
jmp
(bad)
mov
xchg
pushf
jl
sahf
sahf
jle
(bad)
int
lea
pop
shl
dec
add
call
pop
rcr
xor
add
ror
aaa
scas
inc
leave
and
les
ins
fmul
(bad)
(bad)
or
push
(bad)
push
into
leave
dec
add
movs
dec
ror
cld
int
lods
stos
push
and
ret
call
dec
mov
sbb
loope
lods
jle
outs
rcr
jbe
push
cld
out
das
jmp
xchg
or
jl
leave
int
adc
dec
pop
push
icebp
adc
push
(bad)
test
sahf
retf
pop
scas
fdivrp
adc
(bad)
std
push
fnstcw
dec
and
xchg
or
cwde
(bad)
(bad)
(bad)
call
addr16
sbb
addr16
lods
das
mov
cld
pop
and
loopne
inc
mov
lock
pushf
xchg
fsub
and
jmp
fdivr
movs
enter
out
cld
add
pop
sub
pushf
dec
stos
xlat
movs
jecxz
(bad)
jmp
loopne
push
cdq
dec
push
bound
stos
fnsave
(bad)
(bad)
push
lahf
out
dec
xor
stos
iret
popa
mov
jmp
movs
lahf
adc
clc
(bad)
fcomip
cld
ins
sti
fsub
lea
jl
pop
sub
cmp
pop
shl
pop
shr
test
or
mov
(bad)
(bad)
call
fdivr
cmps
dec
arpl
add
mov
fadd
cmp
xchg
ror
(bad)
jnp
sub
cmp
add
mov
sahf
jl
ja
dec
int3
cmp
jle
xchg
push
mov
pop
int3
sbb
sbb
aad
(bad)
sbb
(bad)
(bad)
jmp
lahf
retf
sub
ficomp
not
(bad)
mov
mov
jno
outs
loope
fild
lods
jbe
fisub
div
sbb
jo
pop
dec
fdivrp
(bad)
mov
jmp
ror
cmp
xchg
js
and
(bad)
(bad)
(bad)
push
daa
cli
movs
xchg
push
and
push
cmp
scas
cmp
fisubr
(bad)
push
outs
push
iret
stos
ret
push
push
lods
mov
push
jl
cli
mov
mov
ins
pop
fsub
mov
mov
cmp
stos
mov
rol
jge
mov
sahf
mov
mov
lods
das
idiv
mov
mov
xchg
rol
sbb
add
pop
sahf
xchg
in
push
ror
pop
cmp
push
lods
(bad)
mov
hlt
inc
fbld
mov
fs
popf
pushf
ror
dec
fild
mov
mov
fist
push
cmp
or
cli
sbb
outs
call
test
mov
ins
jle
rcr
push
std
mov
xor
(bad)
mul
leave
jo
push
lahf
push
xchg
jmp
push
(bad)
scas
(bad)
into
or
mov
jmp
fidivr
sub
into
mov
lods
(bad)
pop
jl
test
pop
fmul
ins
clc
(bad)
call
jle
cmps
movs
dec
sar
ror
mov
or
(bad)
(bad)
cmp
push
mov
fsubr
dec
jmp
jb
fild
sub
(bad)
jmp
inc
mov
jo
mov
jmp
mov
dec
stos
or
push
or
inc
pop
jge
adc
mov
ins
push
sbb
fsub
dec
loope
loopne
pusha
fcomp
mov
pop
mov
and
or
jmp
call
pushf
mov
mov
mov
call
nop
jmp
out
adc
stos
inc
mov
jle
sar
push
cs
sbb
mov
repz
fstp
(bad)
push
mov
xchg
js
outs
loop
jno
shr
fcomp
xchg
inc
std
(bad)
mov
adc
pop
jg
cwde
jle
outs
stos
(bad)
das
js
jo
pop
neg
xlat
push
or
xchg
push
jge
push
sbb
(bad)
movs
mov
mov
out
ss
(bad)
int
add
mov
cmp
pop
int3
loopne
es
stos
rcl
jmp
xchg
jb
and
(bad)
mov
and
mov
lahf
dec
sbb
pop
pop
add
cli
(bad)
(bad)
(bad)
call
std
aaa
outs
retf
scas
mov
cmp
pop
adc
cmp
push
lahf
std
lds
lea
mov
shr
cmp
stc
xchg
mov
xor
mov
pop
xchg
sbb
dec
mov
pop
pusha
pop
enter
out
addr16
sahf
pop
jae
inc
pushf
sub
sub
push
into
adc
push
pop
push
fisubr
inc
or
mov
mov
stos
sbb
(bad)
(bad)
(bad)
fisttp
sub
pusha
in
push
sbb
dec
push
inc
push
pop
loope
je
enter
cmps
dec
dec
fcmovnu
push
cmp
jae
inc
sub
das
xor
push
jmp
call
call
adc
pop
cdq
cdq
push
das
pop
(bad)
(bad)
call
xchg
sub
inc
mov
clc
xchg
outs
shl
fdivr
mov
clc
pop
fisubr
sbb
cmp
fcomip
(bad)
dec
enter
push
cmps
sbb
je
mov
and
popf
lods
fwait
lods
int
(bad)
mov
bound
sub
mov
lods
mov
mov
repnz
sub
retf
sti
in
pop
fxch
sub
scas
and
inc
loopne
mov
mov
mov
add
(bad)
mov
sbb
jo
pop
test
(bad)
push
push
sar
cdq
loopne
mov
jp
lock
pop
leave
leave
xor
enter
mov
sub
mov
pop
hlt
(bad)
call
ins
je
sbb
mov
pop
ret
jl
jb
xor
push
jle
mov
jg
jbe
rcr
(bad)
call
int
adc
jnp
mov
dec
mov
mov
lods
mov
mov
stc
(bad)
sti
(bad)
dec
jmp
fstp
sbb
pop
cdq
into
stc
fistp
push
js
loopne
mov
pop
fs
sub
mov
add
sub
and
call
xchg
cmps
inc
cld
pop
call
into
scas
sbb
cmps
cwde
int
dec
cmp
dec
push
fsubp
xchg
pop
push
mov
pop
pop
cmps
rcr
jmp
test
iret
push
clc
jmp
bound
add
or
mov
mov
dec
sub
cmp
(bad)
jmp
fsub
mov
mov
cmp
sbb
mov
ins
jl
mov
jmp
test
aad
movs
call
ins
xor
mov
xchg
pop
fbld
ins
inc
sti
mov
push
xchg
popa
(bad)
or
(bad)
(bad)
dec
ret
cs
pop
jle
lods
scas
and
sbb
mov
and
cdq
stos
cmps
das
jg
and
outs
outs
sbb
pusha
sub
in
dec
lods
jns
sar
sahf
pop
sbb
(bad)
(bad)
(bad)
mov
cld
in
pop
pop
cmp
cwde
iret
iret
sbb
sbb
cdq
pop
out
outs
sbb
(bad)
sub
call
aad
ss
lods
ss
mov
(bad)
pop
cmp
adc
pusha
not
outs
ins
mov
js
and
lods
loop
(bad)
inc
repz
mov
pop
stos
shl
cmp
mov
jl
mov
(bad)
(bad)
jmp
scas
imul
inc
out
shr
jmp
je
push
and
or
pop
jno
fldcw
jg
sub
pusha
js
sti
xchg
inc
stos
jg
push
inc
je
sub
ds
pop
retf
sub
sbb
sbb
(bad)
jmp
out
push
(bad)
(bad)
(bad)
fmul
sahf
dec
in
jl
out
jle
push
lds
fisttp
int
popf
or
push
mov
push
and
mov
mov
ins
fmul
(bad)
(bad)
(bad)
mov
mov
sub
repz
out
pusha
push
ds
js
jmp
cs
(bad)
(bad)
dec
pop
mov
or
stc
test
dec
out
xchg
xor
leave
lahf
dec
push
sahf
sahf
dec
(bad)
(bad)
retf
(bad)
in
(bad)
(bad)
(bad)
inc
stos
mov
aam
jnp
leave
jmp
jle
jecxz
mov
dec
and
(bad)
idiv
(bad)
mov
int
sub
rol
out
pusha
jle
scas
push
jg
jmp
jg
lock
in
pop
mov
cmp
loopne
fsub
mov
aam
js
test
push
sahf
sbb
iret
push
adc
mov
push
pop
test
pop
in
pxor
cmp
and
cmp
adc
imul
mov
or
movs
mov
jecxz
cli
xchg
xor
mov
inc
(bad)
das
adc
pop
scas
(bad)
aas
leave
pop
jns
and
(bad)
(bad)
cmp
sahf
add
inc
sahf
pusha
jo
xchg
sbb
mov
or
dec
pop
or
fisttp
std
dec
lahf
pop
aad
(bad)
out
popa
rcr
dec
mov
push
cld
(bad)
(bad)
aas
jae
or
ins
and
(bad)
mov
lods
pushf
mov
cld
shr
pop
pop
sbb
stos
sub
loopne
xor
xchg
jge
dec
imul
rcl
(bad)
mov
stos
in
cmp
dec
xchg
(bad)
(bad)
jmp
stc
jp
mov
scas
cwde
mov
ror
cmp
arpl
inc
icebp
call
mov
pop
and
push
fdivr
(bad)
(bad)
push
sbb
retf
jge
(bad)
mov
fistp
mov
push
std
dec
cwde
cld
imul
shl
das
cmp
(bad)
push
push
pop
dec
fmul
pop
and
adc
in
pop
jl
call
adc
jo
call
and
lods
mov
adc
sti
scas
mov
nop
pop
push
cmc
or
ret
fcomp
pop
mov
(bad)
in
sub
mov
loope
retf
out
pop
fistp
repnz
dec
pushf
mov
(bad)
call
pushf
(bad)
sbb
adc
mov
cmp
std
push
test
push
pop
jae
fbld
loope
mov
or
outs
inc
push
(bad)
fsubr
xor
(bad)
and
(bad)
xchg
pop
push
add
adc
fist
cmps
sar
rol
push
sub
push
(bad)
inc
cld
jle
mov
ds
adc
iret
fst
fnsave
clc
push
scas
stos
sar
xor
fdivr
cld
cmp
inc
out
loope
mov
xor
outs
lahf
cmp
(bad)
iret
sbb
jbe
pop
ss
xlat
cmp
sti
aaa
or
fcom
mov
rol
cs
call
cld
cmp
scas
sbb
js
pop
fimul
std
call
iret
repz
ret
xlat
add
fcomp
xor
sub
cdq
sahf
pushf
cmp
push
dec
test
lock
ins
je
pop
pop
fcompp
cmp
call
and
outs
cmp
pop
pop
pop
stos
xor
pop
mov
lods
xlat
aam
add
(bad)
jmp
and
lods
mov
out
pop
sub
jg
pop
pop
jl
addr16
inc
test
jmp
fs
xor
sar
xchg
test
ins
dec
and
cmp
or
(bad)
push
jo
dec
scas
(bad)
loopne
mov
mov
imul
mov
fild
push
dec
sub
mov
xlat
jb
out
add
adc
ja
fldl2e
xchg
fnstsw
sub
sub
mov
or
jle
test
cs
lock
pop
pop
sar
stos
sbb
out
call
mov
and
outs
dec
(bad)
(bad)
(bad)
jg
inc
jae
(bad)
iret
fnstcw
out
sub
stos
or
arpl
inc
dec
jae
mov
inc
mov
fs
xchg
or
jle
sub
add
pop
call
(bad)
cmp
ins
cmp
jl
in
fbld
rcl
pop
shr
xchg
inc
pop
jmp
cmps
dec
scas
ror
leave
sbb
stos
or
in
push
inc
jecxz
sub
xor
lock
(bad)
inc
jo
jecxz
and
repz
into
cmp
into
imul
jo
or
(bad)
(bad)
fistp
pop
mov
push
out
daa
and
int3
retf
and
mov
sbb
(bad)
(bad)
(bad)
call
neg
bsf
ds
enter
int
bound
outs
sti
dec
sbb
cld
(bad)
jmp
add
sub
fst
leave
cwde
(bad)
inc
jle
xchg
out
adc
cmps
cmp
pop
pop
or
test
pop
cdq
stos
cmp
retf
cli
ficomp
cmp
mov
fld
xchg
(bad)
(bad)
(bad)
dec
imul
pop
mov
rcr
mov
je
pop
push
mov
lea
inc
xchg
lods
mov
pop
lods
fst
cdq
imul
mov
(bad)
cld
jns
jmp
outs
out
lea
fmul
pop
xor
xchg
je
mov
out
push
idiv
adc
(bad)
(bad)
(bad)
call
js
push
push
add
ds
or
and
movs
nop
(bad)
sub
add
(bad)
jmp
inc
dec
push
xchg
in
pop
ss
push
rcl
push
inc
jbe
cmp
hlt
fcomip
jg
cli
aam
add
leave
ret
scas
rcr
popa
lods
mov
(bad)
stc
call
xlat
(bad)
mov
ret
sub
pop
(bad)
cmp
loop
aaa
fist
jmp
call
scas
adc
fsub
sar
enter
(bad)
mov
jb
inc
adc
ds
sar
fcom
pushf
in
or
call
call
pushf
jp
outs
xor
sub
js
call
jl
aaa
std
dec
mov
(bad)
sbb
adc
lods
fcomp
lds
push
out
push
(bad)
xor
add
(bad)
(bad)
(bad)
call
push
pusha
mov
(bad)
pop
pop
out
test
sub
jmp
sti
adc
fcomp
sbb
outs
mov
inc
pop
push
div
das
xchg
pop
ficomp
mov
ss
xchg
repz
daa
push
(bad)
push
jb
rcr
push
hlt
push
jg
push
(bad)
mov
dec
or
cmps
out
stc
dec
fcmovnb
in
call
fisttp
stos
mov
dec
repnz
scas
xor
xor
sub
sbb
fcomip
(bad)
jg
fcomp
or
ror
jo
js
js
pop
test
(bad)
push
xor
sar
call
pop
fbstp
out
cwde
mov
stc
(bad)
les
mov
cmps
or
jl
sub
mov
test
js
aaa
mov
shr
adc
dec
sbb
mov
mov
cmps
sbb
js
pop
mov
mov
(bad)
(bad)
jmp
shr
jmp
lods
or
add
or
push
mov
daa
movs
jl
scas
fstp
(bad)
icebp
lea
shr
arpl
aaa
fnsave
or
cs
out
sahf
enter
pop
jno
repnz
or
scas
popf
jecxz
js
(bad)
(bad)
dec
inc
fstp
lahf
dec
jle
aad
jnp
mov
adc
pusha
fistp
dec
test
xchg
and
mov
ret
pop
nop
shl
hlt
retf
in
icebp
jmp
sar
lods
iret
fild
jno
in
iret
pop
out
inc
stos
add
(bad)
and
test
das
sbb
bound
fcomip
mov
out
add
(bad)
(bad)
add
jns
lahf
fsubrp
(bad)
les
jg
add
sbb
dec
(bad)
mov
rcr
clc
call
xchg
jle
es
jmp
ficomp
(bad)
(bad)
out
mov
pop
enter
or
scas
imul
cs
jae
fwait
mov
shr
pop
jno
push
or
sbb
pop
push
inc
lea
(bad)
push
loopne
nop
mov
jp
addr16
fcomp
cwde
(bad)
dec
fld
gs
fdivr
mov
push
and
cli
add
ficomp
popf
clc
lock
(bad)
push
ds
(bad)
call
ror
mov
ins
xchg
aaa
sbb
mov
sub
dec
aam
dec
(bad)
daa
dec
mov
or
(bad)
(bad)
mov
add
outs
pop
mov
pusha
pop
sbb
enter
ror
int3
fistp
(bad)
scas
clc
xchg
retf
push
adc
sub
fdivr
(bad)
fist
mov
mov
(bad)
(bad)
fsubr
(bad)
out
mov
lea
mov
(bad)
mov
mov
jp
ficomp
xchg
jp
add
outs
fucomip
sbb
dec
fs
inc
mov
dec
pop
sti
xchg
mov
ds
movs
mov
lea
push
fdivr
int
cmp
pushf
lods
je
(bad)
push
dec
imul
lds
pop
iret
jl
shl
(bad)
(bad)
(bad)
jns
loop
or
add
out
(bad)
cmp
jnp
pop
je
push
test
pop
pop
mov
lds
test
cs
repnz
shl
jnp
imul
xchg
(bad)
jmp
adc
ins
hlt
out
dec
push
mov
push
cmc
data16
xchg
(bad)
jmp
sub
pop
cmp
out
or
xchg
ins
cli
scas
jl
loopne
fild
mov
fiadd
jmp
call
push
fsubr
cli
stc
je
ins
popf
fistp
into
js
stos
bswap
pusha
aas
(bad)
test
push
mov
(bad)
(bad)
fadd
sti
(bad)
sbb
and
(bad)
push
pop
rcl
dec
jl
push
(bad)
mov
lock
or
call
dec
mov
iret
pop
pop
jne
call
push
pop
in
mov
ret
adc
inc
call
lods
sub
out
fsub
in
lahf
pop
(bad)
in
mov
out
cli
(bad)
call
adc
mov
fnstcw
data16
xor
cs
(bad)
(bad)
inc
jle
jmp
test
clc
push
dec
adc
mov
jl
dec
call
sti
call
push
jg
ret
daa
pushf
out
mov
sub
mov
lods
retf
mov
call
jl
das
leave
mov
ret
sub
add
(bad)
(bad)
jl
test
sbb
mov
sub
lahf
sbb
aaa
lods
add
mov
add
jnp
inc
rcr
mov
cmc
mov
mov
mov
mov
push
mov
or
retf
inc
mov
push
out
(bad)
popa
mov
(bad)
(bad)
sub
jns
push
cmp
das
cmp
adc
pusha
adc
inc
shr
test
je
(bad)
fisttp
mov
jb
cmp
push
lahf
pop
call
add
call
sub
stos
(bad)
(bad)
pushf
xchg
fcomp
cs
or
sub
imul
int3
fstp
and
mov
(bad)
call
icebp
imul
int3
pop
pop
jno
sbb
pop
pop
pop
loop
das
fcom
pop
repnz
cmp
pop
push
cmp
add
(bad)
push
ret
pop
pop
mov
cmp
mov
jmp
ja
dec
fnstsw
into
cmps
mov
lds
jnp
mov
sub
inc
fwait
jb
lahf
mov
ss
(bad)
(bad)
(bad)
dec
or
cld
dec
pop
das
fwait
jp
pop
xchg
pop
pop
in
adc
mov
sbb
or
jmp
loopne
retf
fdivr
inc
clc
imul
sbb
fsubr
fdiv
xchg
adc
xor
and
mov
jmp
or
cmp
push
repz
dec
es
clc
fisttp
je
outs
xor
xchg
ficomp
push
ror
(bad)
(bad)
(bad)
jmp
sbb
adc
int3
pop
xchg
mov
rcr
shl
movs
jo
push
(bad)
(bad)
(bad)
inc
mov
jmp
fst
jl
in
xchg
push
mov
or
out
sub
in
enter
ins
cli
not
jns
lock
retf
pop
(bad)
(bad)
(bad)
call
lods
xchg
mov
out
fstp
cmp
sub
out
sti
jno
mov
push
scas
repz
push
jmp
push
push
fmul
bound
test
out
outs
and
lds
jmp
push
dec
ins
(bad)
xchg
in
mov
jp
pop
(bad)
adc
jmp
jp
jmp
pop
push
cmp
fild
jns
pop
out
lds
out
out
(bad)
(bad)
call
sub
lahf
lods
(bad)
or
int
pop
cmp
mov
dec
imul
hlt
fldcw
mov
(bad)
out
xchg
lock
xor
mov
icebp
cli
or
xlat
jbe
push
hlt
fmul
push
retf
(bad)
push
sbb
pop
push
push
pushf
mov
mov
cli
jb
dec
jp
cld
sbb
(bad)
lods
jmp
fld
test
(bad)
(bad)
call
sub
xor
xchg
out
mov
frstor
js
mov
(bad)
inc
xor
hlt
js
or
fnsave
mov
xor
jnp
into
dec
movs
sahf
mov
mov
sti
(bad)
loopne
pusha
jle
adc
ficomp
inc
in
pop
or
call
or
(bad)
mov
test
sbb
cmc
adc
mov
cmp
(bad)
(bad)
call
dec
and
(bad)
mov
cmps
popf
cmp
scas
mov
mov
pop
das
adc
pop
(bad)
(bad)
(bad)
dec
enter
sub
leave
jmp
pop
mov
shr
push
loop
(bad)
js
mov
push
xchg
xchg
(bad)
hlt
(bad)
call
push
xor
(bad)
and
jnp
xor
pop
sahf
add
and
add
mov
sub
mov
mov
popf
in
pop
pop
cli
push
or
pop
imul
dec
lods
inc
push
popf
mov
mov
(bad)
dec
mov
pop
fwait
int3
sar
stos
push
sub
lock
js
fcomp
pop
iret
mov
dec
dec
cmps
mov
cwde
jmp
fild
and
int
(bad)
das
push
mov
(bad)
inc
cli
pop
mov
fdiv
(bad)
mov
push
cld
(bad)
call
xchg
xor
pop
fstp
(bad)
fdiv
lea
enter
loopne
jmp
stos
push
mov
inc
adc
(bad)
cmp
pop
call
sub
add
test
pop
out
jae
pop
push
xchg
mov
push
call
and
mov
cmp
fidivr
das
(bad)
(bad)
(bad)
push
inc
xchg
pop
mov
mov
pop
cdq
into
mov
jp
into
lahf
pop
cmps
sub
ins
mov
push
xor
(bad)
(bad)
cli
das
push
fist
addr16
dec
sahf
out
outs
pop
fisttp
(bad)
and
(bad)
jmp
in
hlt
mov
out
or
int
std
pop
aaa
std
(bad)
jmp
movs
dec
dec
retf
mov
pop
fisttp
push
test
or
popf
fwait
mov
mov
jno
out
daa
xor
dec
adc
mov
and
imul
mov
jl
cmp
sbb
lock
jle
pop
(bad)
sbb
stos
dec
pop
sub
inc
shl
mov
ja
jle
fmul
outs
ds
das
sti
dec
pop
sub
mov
(bad)
call
inc
scas
mov
shl
inc
test
pop
pushf
sahf
push
call
test
mov
push
push
test
test
push
icebp
aaa
adc
sbb
dec
jmp
cwde
(bad)
pop
mov
(bad)
xor
or
mov
(bad)
call
xlat
push
in
(bad)
(bad)
inc
sbb
addr16
std
out
pop
shr
add
mov
pushf
sti
ss
fcmovu
scas
inc
xchg
pop
mov
adc
rcl
pop
sbb
ins
pop
or
mov
test
mov
(bad)
jg
idiv
mov
loop
cli
dec
xor
sar
mov
imul
(bad)
std
lea
lahf
mov
mov
dec
dec
jnp
(bad)
(bad)
(bad)
inc
rcr
cmp
popa
sbb
dec
scas
jge
mov
lods
ret
dec
pop
pop
mov
mov
add
mov
shl
ss
xor
mov
(bad)
call
sbb
sub
sbb
mov
sub
loop
jp
(bad)
(bad)
(bad)
(bad)
js
xchg
sar
cmp
jl
rcr
pop
call
cmps
test
jae
or
dec
lock
jmp
cmps
mov
lock
xchg
and
jnp
cmp
fmul
js
fild
and
mov
mov
xor
mov
(bad)
jmp
js
and
rcr
jle
mov
pop
pop
sub
out
pop
hlt
(bad)
call
(bad)
cld
shr
pushf
inc
das
adc
cwde
ds
mov
inc
add
(bad)
(bad)
inc
cmp
cmps
sbb
dec
popf
ins
fsub
cs
clc
(bad)
mov
ds
jle
aaa
shl
push
mov
sbb
ins
push
push
mov
or
lods
nop
lock
jmp
xchg
addr16
adc
inc
aaa
int
xor
sbb
jmp
test
and
mov
stos
(bad)
xlat
cmp
icebp
sub
pushf
mov
sbb
dec
pop
add
ror
fdivr
ror
rcl
mov
xor
sub
inc
vmulsd
stc
pop
pushf
inc
mov
call
shl
sbb
fistp
daa
stos
mov
test
fisubr
call
jmp
imul
(bad)
fdiv
test
outs
or
std
ja
sbb
ins
mov
pusha
sbb
cmp
push
cld
mov
cs
ret
(bad)
mov
stc
stos
adc
std
lock
(bad)
cmp
pop
cmp
imul
dec
mov
xchg
(bad)
jo
adc
inc
ror
lock
sub
(bad)
dec
adc
stos
rcr
in
nop
(bad)
clc
inc
nop
pop
and
sbb
in
mov
call
(bad)
adc
jno
pop
mov
mov
movs
push
adc
vpsrlw
ins
push
pop
inc
cld
test
mov
std
int3
mov
sahf
pop
or
nop
mov
pop
sahf
dec
sub
mov
mov
mov
(bad)
jg
mov
mov
leave
call
pop
and
jp
add
(bad)
(bad)
inc
mov
inc
and
enter
add
daa
cmp
pop
(bad)
fstp
dec
(bad)
xchg
movs
sub
cld
fcomip
aad
lea
or
int
mov
out
stos
jmp
fild
(bad)
(bad)
jmp
and
rcr
inc
sub
jae
adc
and
das
dec
hlt
(bad)
(bad)
(bad)
push
push
daa
cmp
test
adc
and
cld
stos
mov
jg
pop
inc
dec
mov
pusha
(bad)
jg
jecxz
repnz
aad
jbe
push
stos
pop
dec
mov
ucomiss
loope
std
(bad)
fidiv
lods
pushf
dec
aad
sbb
sbb
push
xor
mov
ror
jmp
cmp
ret
sbb
sar
fwait
(bad)
cwde
rcl
mov
jmp
mov
mov
and
(bad)
jmp
fnstcw
(bad)
jmp
or
jmp
cmp
daa
mov
mov
retf
(bad)
and
stos
dec
retf
fidivr
pop
mov
enter
call
cmp
ja
jo
mov
jb
pop
mov
stos
xchg
mov
ins
xchg
jb
int
sbb
retf
jg
test
mov
or
sbb
std
xchg
ret
fdivrp
(bad)
push
sbb
ret
push
mov
(bad)
dec
leave
es
jne
(bad)
jnp
dec
jmp
stos
shr
sar
dec
adc
jl
jmp
outs
je
or
cld
retf
test
sub
cmp
out
clc
das
xor
push
add
inc
lds
sar
(bad)
jmp
jnp
jmp
das
movs
sub
cmp
repnz
shl
push
call
cli
jmp
pop
push
les
dec
pop
mov
sub
icebp
pop
fbld
mov
dec
xor
fwait
retf
sub
jmp
fwait
call
in
jmp
leave
fistp
mov
in
jmp
xor
pop
cmp
cmp
xchg
jmp
mov
push
or
mov
dec
das
int
mov
(bad)
jb
fs
lahf
(bad)
(bad)
(bad)
(bad)
fidiv
or
mov
pop
leave
jmp
dec
xor
test
outs
mov
fldcw
or
hlt
cmp
mov
fwait
jb
(bad)
call
cmp
xchg
xor
adc
test
xchg
lods
jge
mov
fidiv
cli
pushf
xchg
outs
pusha
push
mov
shr
add
or
mov
add
in
jnp
enter
or
sti
and
ret
call
sbb
outs
daa
xchg
icebp
test
or
mov
push
call
or
add
call
clc
push
add
(bad)
adc
rcl
retf
imul
cli
mov
jnp
in
int
jp
cli
mov
in
add
cmp
and
xor
je
(bad)
(bad)
jg
fwait
jl
aaa
mov
pop
icebp
int
jl
rcr
adc
fs
push
jp
fld
sub
es
data16
retf
pop
xor
(bad)
(bad)
jle
cmps
mov
das
mov
mov
jmp
lahf
push
jge
push
mov
jmp
adc
mov
rcr
mov
stos
aaa
mov
sbb
in
cmp
jb
int
ins
sub
(bad)
inc
lods
ins
cmps
mov
in
mov
sbb
pop
retf
ficomp
fsub
mov
shl
mov
ds
push
cli
cmp
xor
sbb
adc
outs
clc
pop
jp
pop
mov
int
test
das
daa
mov
push
pop
mov
pop
stos
(bad)
(bad)
push
jmp
mov
sbb
ja
aad
in
out
xchg
push
retf
pop
and
inc
jmp
or
or
xchg
test
dec
inc
mov
das
jmp
push
hlt
outs
mov
inc
bound
cs
es
aaa
adc
jns
mov
xor
mov
cmp
push
pop
std
mov
jmp
cld
call
dec
cmp
mov
das
xchg
icebp
(bad)
jbe
mov
retf
cmp
mov
mov
in
cmp
pop
mov
mov
dec
sar
pushf
sahf
ret
stc
or
(bad)
xchg
outs
bound
jmp
inc
xorps
cmp
mov
movs
out
jo
jp
shl
or
mov
or
or
jp
xchg
icebp
or
pop
test
or
int3
xor
jb
or
loopne
and
cmp
inc
call
sub
pminub
sar
cmp
clc
mov
std
mov
clc
mov
fmul
push
dec
dec
sub
test
stc
sub
mov
std
push
imul
ins
je
push
test
cmp
out
sti
and
cmp
in
lods
mov
test
addr16
xchg
aaa
xor
retf
jo
mov
xchg
shl
sbb
mov
(bad)
aaa
into
scas
std
lods
gs
sub
rol
and
add
(bad)
dec
jmp
stos
or
mov
outs
xchg
icebp
mov
bound
sbb
add
adc
cwde
cmp
dec
sbb
jmp
sbb
pop
(bad)
inc
cmp
mov
push
sub
inc
sbb
mov
jmp
fwait
mov
(bad)
jmp
adc
data16
adc
leave
adc
jnp
pop
ins
sub
sti
scas
dec
std
(bad)
(bad)
(bad)
sti
mov
mov
push
ins
mov
cmp
xor
sbb
xchg
jne
sbb
pop
mov
pop
and
dec
stc
push
js
dec
xchg
enter
mov
add
clts
sti
add
jns
retf
push
xor
or
fimul
cmp
cwde
or
add
cmp
add
adc
(bad)
pop
push
and
push
repz
out
mov
cmps
lods
sub
xor
mov
jmp
sbb
gs
jmp
push
push
shl
pop
jmp
sti
call
adc
cli
sti
cmp
fcomp
sub
call
fdivr
rcl
cld
jle
xchg
pop
jmp
(bad)
shr
std
mov
jmp
jmp
cmp
sbb
mov
call
cmp
mov
sub
dec
push
js
pop
ror
dec
add
dec
or
mov
mov
push
retf
or
add
adc
call
cwde
cmp
inc
sbb
jp
dec
int3
fcom
sahf
or
mov
sub
jmp
cld
test
sar
jbe
cwde
pop
cwde
fstp
cli
sbb
cmp
call
(bad)
push
call
jbe
pop
lods
pop
fcomp
lods
clc
dec
fmul
mov
mov
(bad)
out
or
adc
xchg
adc
add
jecxz
jle
aaa
rcl
mov
pop
fild
adc
shl
mov
ret
retf
pop
sub
es
call
outs
je
sti
cmp
repz
aam
(bad)
(bad)
jg
lods
fxch
lahf
dec
push
ins
retf
pop
(bad)
(bad)
pop
das
scas
mov
addr16
sub
ja
popf
mov
dec
pop
shl
shr
jp
cmp
std
scas
mov
faddp
pop
repz
movs
fcmovbe
pop
in
adc
and
fcmovb
popf
mov
idiv
(bad)
aam
sub
test
xor
bound
and
outs
mov
imul
mov
inc
in
push
imul
in
sub
push
(bad)
aas
mov
sub
sub
jmp
enter
daa
mov
(bad)
(bad)
call
stos
into
inc
sahf
stos
fsubr
test
sar
dec
loope
jmp
xchg
pop
and
pop
jmp
in
(bad)
pop
adc
jecxz
retf
sar
xchg
pop
cmp
pop
adc
dec
dec
xchg
sub
retf
(bad)
jmp
jae
adc
cmp
sub
or
mov
ficomp
pop
mov
fisubr
xor
clc
pop
cmp
aam
call
sbb
fldenv
retf
pop
add
xor
movs
test
loope
in
out
pop
pop
inc
(bad)
fisttp
push
mov
jle
(bad)
(bad)
(bad)
jmp
cwde
bound
call
dec
lods
clc
push
mov
in
or
dec
scas
fsubr
in
jecxz
fld
(bad)
scas
sub
sub
adc
or
ins
push
push
push
(bad)
(bad)
(bad)
call
adc
push
pop
jmp
pushf
pop
daa
cmps
js
ja
dec
rcr
out
dec
push
mov
shl
call
fisubr
clc
(bad)
fidivr
or
add
ficomp
in
add
arpl
lock
pop
lock
paddusw
sub
fstp
loope
shl
mov
sub
fcom
retf
dec
fidiv
cmps
(bad)
loope
xor
cmp
pop
cmps
pop
loopne
sbb
loopne
mov
sub
pop
sbb
das
jns
push
dec
mov
jmp
dec
push
jle
lahf
inc
add
outs
(bad)
std
call
fs
daa
mov
sbb
cmps
popa
sahf
jbe
xchg
xchg
pusha
sub
shl
jecxz
and
(bad)
pop
mov
mov
into
jle
std
push
push
pop
sahf
mov
pop
lods
outs
fidiv
adc
scas
push
shl
sub
aam
pop
lock
je
push
shl
push
outs
xor
jecxz
outs
imul
xchg
ins
sub
mov
sub
push
mov
(bad)
push
scas
pop
pop
es
shl
mov
jg
(bad)
pop
lock
cmps
mov
ins
push
das
out
ds
(bad)
jecxz
sub
lock
iret
dec
jle
or
sub
popa
adc
xchg
pop
cs
fwait
arpl
sub
lods
scas
xadd
mov
mov
outs
jns
sub
xchg
pop
and
dec
stos
jg
inc
mov
jns
in
pop
inc
jmp
lods
add
dec
popa
dec
mov
lahf
movs
mov
jecxz
jg
sub
loopne
repnz
pop
xor
mov
(bad)
(bad)
mov
cmp
addr16
sub
ds
rol
mov
ss
push
test
or
sub
ret
jno
fistp
xor
sub
gs
rol
and
movs
in
clc
push
fcomp
daa
dec
cmps
data16
pop
arpl
lods
push
mov
fimul
loopne
cmp
fiadd
push
movs
lock
sub
popf
push
int3
sahf
mov
in
xchg
mov
(bad)
pop
jo
idiv
pop
push
retfw
retf
sub
ret
pop
scas
clc
nop
nop
and
fsubr
and
fsubr
adc
out
ins
push
movs
push
xchg
xor
jge
(bad)
(bad)
mov
adc
push
ins
lods
dec
push
mov
fcmovb
bound
pop
push
in
jl
fist
lods
adc
cmp
and
fs
mov
jge
std
and
cmp
and
xchg
fidivr
out
cmp
mov
in
rcr
inc
(bad)
(bad)
loop
outs
lea
addr16
add
adc
pop
cmp
and
mov
lods
cs
sub
inc
or
lods
clc
sub
cli
jl
add
(bad)
(bad)
clc
lods
jbe
and
add
pusha
in
scas
xchg
mov
imul
repz
fs
dec
sbb
inc
ret
pop
hlt
sbb
inc
daa
(bad)
xor
xor
es
ja
loope
xlat
dec
pop
push
popa
ficom
xchg
pop
pusha
ficom
pop
hlt
arpl
jp
dec
out
arpl
mov
pop
xor
inc
push
push
inc
in
mov
ja
fidivr
pop
retf
js
ins
(bad)
push
xchg
test
sbb
add
in
ficom
xlat
jg
imul
inc
in
mov
xchg
pushf
pop
hlt
icebp
jmp
rcl
retf
and
dec
or
ins
xor
fild
cld
sub
pop
test
jle
pop
jmp
pusha
push
out
jae
fisubr
pusha
cmc
jo
call
in
enter
pop
jg
stos
pop
shl
mov
and
aaa
jp
repz
sbb
lock
mov
mov
push
pop
jmp
inc
das
sar
cmps
icebp
jmp
call
or
cmp
pop
inc
pop
lock
clc
pop
cs
ss
add
ficom
or
repnz
pop
aas
fsub
leave
sti
int3
out
movs
fidiv
ja
inc
inc
pop
aam
push
clc
cmp
mov
fisub
push
rcr
sub
mov
loope
arpl
std
fiadd
stos
pop
jmp
sub
pusha
add
rcr
inc
cmp
pop
lods
outs
out
imul
pop
pop
add
ret
or
addr16
push
call
push
pop
cld
xor
pop
fsubr
lods
and
pop
sbb
adc
sahf
inc
mov
sahf
dec
sar
sub
mov
out
shr
jo
fidiv
fimul
mov
dec
es
jle
fisttp
neg
pushf
(bad)
loope
pushf
xlat
pop
mov
in
pop
daa
pop
push
out
pop
fisttp
call
fiadd
pop
sti
cmp
push
icebp
xor
loopne
xor
(bad)
loopne
mov
inc
pop
mov
sbb
rep
pop
fbld
mov
fimul
jle
ret
pop
jl
les
xor
xchg
and
(bad)
mul
icebp
mov
fmul
push
paddsb
fsubr
outs
fiadd
idiv
unpcklps
out
rcr
and
sar
je
lock
add
add
ficom
pop
fs
rcr
fadd
clc
xlat
sub
out
cmps
test
les
adc
in
cdq
fnsave
sub
pop
dec
ret
in
(bad)
aad
adc
ss
pushf
and
xor
pop
or
add
adc
pop
das
and
adc
xor
ret
adc
in
mov
and
in
fist
in
int3
mov
and
push
inc
mov
loopne
inc
mov
inc
call
jo
pop
daa
jecxz
cli
test
retf
repnz
in
loop
ficomp
ins
fisubr
sbb
mov
inc
jae
xor
mov
ror
test
cmp
outs
fisubr
stos
out
fidivr
or
sar
sub
fstp
rol
ficom
ret
dec
stos
pop
xchg
push
lods
jo
mov
pop
pop
daa
loope
lock
fcomp
jmp
and
clc
push
cli
sti
daa
fild
in
(bad)
pop
call
das
cmp
pop
pop
shr
shl
popa
(bad)
mov
pop
ror
imul
int3
push
jmp
xchg
ret
shl
outs
ror
and
call
mov
pop
push
bound
mov
call
fwait
push
clc
pop
xlat
pop
das
out
enter
dec
pushf
jg
sub
aam
stos
sub
aam
inc
cmp
mov
adc
push
mov
push
lock
cmc
jl
cmp
pop
sub
test
cmc
pop
out
sbb
cmc
sbb
stos
ins
adc
cmp
mov
jmp
rcr
sbb
shr
mov
loope
(bad)
fsub
pop
mov
cmp
sub
dec
fisttp
sbb
inc
into
sar
aaa
or
cmp
sbb
lahf
sbb
inc
inc
shl
mov
jl
sub
loope
push
sbb
mov
pusha
sahf
adc
test
and
sub
and
pop
into
xchg
mov
xor
xor
pop
aad
pop
sar
bound
mov
rol
pop
outs
div
test
or
(bad)
xor
imul
dec
mov
div
jge
rcr
add
pop
lock
sbb
sub
iret
in
pop
push
test
lds
jg
fcmovu
pop
push
inc
fs
das
pop
call
pop
ror
pop
rcr
push
bound
push
ror
outs
pop
sar
dec
mov
lock
push
pop
inc
xchg
dec
xchg
pop
rcr
lods
pusha
jmp
push
pop
sbb
out
cmp
cmp
jbe
enter
or
loope
or
mov
fnstsw
cmp
mov
mov
inc
mov
outs
sbb
in
out
outs
ins
pop
xchg
mov
xchg
call
popf
sub
jl
(bad)
bound
bound
(bad)
out
cmp
pop
cmp
lods
push
outs
mov
loope
sbb
inc
outs
dec
loopne
(bad)
out
mov
das
scas
in
jp
or
call
clc
(bad)
out
or
pop
sub
add
sub
mov
mov
adc
clc
scas
sub
ror
dec
cli
dec
fs
dec
sub
pop
std
mov
xor
cmp
pusha
jge
icebp
das
les
jecxz
pop
adc
xor
sti
push
lods
lods
mov
scas
mov
shr
sub
pop
mov
test
ss
loop
nop
jmp
sub
int
inc
(bad)
pop
add
push
push
push
sub
sar
pusha
pop
ror
icebp
adc
pop
ror
adc
push
xor
lock
(bad)
mov
jecxz
pop
ss
and
push
sbb
mov
mov
(bad)
(bad)
cmps
adc
pop
mov
aaa
pop
cs
push
push
pop
xor
je
adc
aas
sub
mov
xor
mov
ss
cmps
popa
adc
add
(bad)
push
mov
in
cmp
jecxz
loop
repz
std
sar
test
int
mov
das
int
cmp
fidiv
mov
mov
or
inc
stos
cmp
aam
mov
xchg
inc
mov
pop
fs
popf
adc
pop
and
ud0
out
pop
cmps
mov
iret
loope
sbb
pop
arpl
jnp
in
sub
loopne
or
or
cmps
mov
shr
inc
sar
cld
(bad)
call
fcomp
ja
std
mov
push
shl
retf
mov
cmps
adc
out
icebp
xchg
pusha
xor
jo
sbb
inc
call
jp
mov
cmc
test
push
test
into
test
lock
xor
mov
mov
xchg
push
in
or
pushf
adc
xchg
push
and
fdivp
pop
inc
mov
pop
or
lock
in
cmp
pop
popa
sub
aaa
hlt
mov
dec
add
or
dec
adc
cld
jmp
popa
pop
dec
sub
jno
sub
stos
ds
inc
dec
mov
jge
pop
cmp
sub
mov
std
aam
xchg
stos
mov
pop
or
sub
push
jl
jo
dec
out
dec
xor
mov
add
push
es
shl
jl
ins
in
push
outs
mov
sbb
outs
es
jne
inc
or
sahf
jbe
daa
cmps
clc
test
test
sub
or
pop
fsub
sub
enter
scas
and
mov
jmp
sbb
or
dec
daa
jmp
(bad)
push
mov
es
pop
es
mov
rol
paddsw
mov
lods
and
or
clc
lods
sub
shl
add
pop
ret
(bad)
mov
clc
cs
mov
xchg
xchg
push
test
fist
inc
or
aas
es
xchg
and
or
xor
ret
les
and
fisubr
and
adc
jmp
mov
and
and
nop
jbe
pop
loopne
inc
push
adc
and
push
and
or
scas
or
and
mov
or
out
fsubp
adc
dec
pusha
and
and
dec
fidivr
aad
call
sub
in
pop
out
and
retf
push
inc
daa
scas
in
pop
add
sbb
adc
jle
stos
leave
sbb
std
sub
(bad)
and
call
or
add
stos
lock
mov
and
loopne
xlat
(bad)
sbb
jnp
popf
popa
pusha
mov
test
xor
call
in
es
push
sub
cli
sub
fcmovne
pop
icebp
cmps
ficomp
fld
call
cmp
cmps
ja
cmps
jmp
sbb
pop
cmp
and
data16
movs
jp
cmps
pop
push
dec
hlt
and
rol
and
sub
cld
mov
mov
lock
pop
cmp
scas
and
sti
pop
clc
mov
mov
jle
(bad)
jle
push
pop
in
fnsave
push
test
pusha
js
stc
or
dec
sbb
or
sub
shl
(bad)
outs
stc
dec
pop
jmp
pop
xlat
aas
jo
mov
aam
pop
imul
pop
test
loope
lock
mov
jmp
sub
mov
fdiv
push
cmp
daa
fcmove
aas
adc
shl
out
fsubr
push
arpl
adc
push
mov
nop
or
mov
ins
xor
mov
das
fisubr
outs
pop
ds
push
jmp
aas
mov
gs
inc
(bad)
ror
sub
mov
popa
ficomp
pop
ins
fdivr
aam
or
mov
retf
lods
cs
mov
retf
ins
out
sub
jge
mov
imul
inc
pop
(bad)
pop
es
pop
ins
in
mov
or
jecxz
pop
pop
pop
and
scas
xor
ret
arpl
ds
loopne
pop
and
and
jbe
inc
pusha
adc
into
test
or
fiadd
sub
jle
frstor
shr
movs
lahf
push
sahf
push
call
outs
mov
sbb
jle
arpl
mov
add
lahf
daa
lods
sbb
push
pop
and
lahf
xchg
mov
or
and
(bad)
pop
push
sub
loope
sub
iret
inc
cmps
es
in
pop
scas
das
add
xchg
mov
mov
push
xor
aam
sub
jmp
loopne
jo
cld
push
scas
jmp
cmp
mov
xor
test
pop
cmp
shr
push
cli
cmp
cmp
mov
call
ret
xchg
or
sub
push
test
inc
int3
cmp
cmp
or
imul
loope
sbb
sbb
sub
lods
push
cld
addr16
sti
mov
scas
pushf
dec
pop
or
and
pop
das
ss
icebp
add
lods
dec
cli
outs
mov
or
je
lea
sbb
test
lods
jl
mov
and
popf
ror
pop
or
and
clc
retf
pusha
sub
adc
das
or
push
mov
outs
pop
jae
jge
icebp
push
int
cs
popf
loopne
pop
xor
sbb
pop
jo
mov
jl
adc
ja
pop
icebp
pop
dec
push
jecxz
xchg
sub
push
dec
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
shl
in
shl
ret
sub
mov
push
sar
(bad)
std
in
daa
and
lock
pusha
xor
pop
sbb
jmp
ins
ins
lahf
test
adc
outs
bound
xchg
push
cmps
cmc
push
dec
lahf
pop
gs
dec
mov
mov
clc
push
cmp
and
je
and
in
sbb
jecxz
cmps
movs
pop
sub
repz
xchg
bnd
sub
scas
ret
aam
les
rcl
popf
outs
test
add
(bad)
cwde
popf
and
pusha
(bad)
(bad)
push
jne
je
push
data16
push
mov
pop
mov
xchg
adc
and
jg
cmp
cmp
mov
lds
push
push
mov
lea
in
xchg
mov
pop
inc
fs
jns
out
xor
data16
(bad)
sbb
loopne
mov
ja
lock
add
and
add
rcr
ret
pop
mov
mov
dec
xor
in
test
repnz
adc
mov
or
bound
mov
push
cmps
mov
mov
mov
push
mov
enter
loopne
pop
mov
js
aaa
popa
movs
fs
test
rcl
mov
out
or
cmps
popa
jp
or
in
xchg
xor
cs
mov
push
gs
in
inc
mov
xchg
loop
jno
sub
add
ins
or
mov
cmps
(bad)
call
push
mov
cs
dec
imul
shr
pusha
pop
ss
mov
pop
adc
push
(bad)
ds
es
lods
sbb
icebp
jne
ss
mov
loope
xor
pusha
pop
or
cmps
loope
pop
lods
lods
jbe
test
and
mov
loope
movs
movs
pop
and
cmp
cmp
ins
clc
mov
xchg
cmp
or
pop
pop
add
or
dec
xlat
shl
daa
mov
xor
sub
lock
inc
cmp
adc
pop
pop
and
cs
movs
add
lock
es
mov
or
or
xchg
sub
in
mov
hlt
pop
ja
and
test
add
jno
sub
push
dec
movs
(bad)
stos
cs
(bad)
or
es
in
jg
(bad)
jmp
into
add
retf
fisttp
mov
push
jbe
push
dec
push
inc
fst
push
and
call
sub
in
cmps
mov
in
retf
popa
and
add
aas
cmc
jecxz
xchg
cmp
ins
das
in
out
test
(bad)
cmc
cmp
lds
inc
cwde
pop
ins
loopne
aad
mov
neg
sub
and
mov
(bad)
gs
dec
jg
out
scas
adc
sub
movs
jne
cmp
pop
mov
mov
aas
bound
mov
cmp
dec
or
jo
(bad)
out
inc
add
sbb
dec
cmps
xor
retf
push
mov
mov
sub
sub
cli
or
iret
cmp
lods
or
cmp
sbb
jmp
nop
scas
push
and
sub
add
fsubr
jmp
pop
cmp
retf
pop
mov
shl
mov
push
inc
mov
xchg
add
loop
dec
sbb
ins
(bad)
idiv
outs
jmp
movs
mov
lods
push
test
test
mov
adc
(bad)
xchg
cmp
cmc
sub
fidivr
(bad)
cmp
push
or
aam
hlt
test
pop
push
cmp
mov
mov
fidivr
ret
mov
push
fidivr
push
mov
loopne
js
fidivr
lods
fimul
pop
gs
test
call
stos
jmp
ss
in
leave
jo
pop
add
add
dec
push
sub
movs
fsub
pop
fsub
sub
out
and
or
dec
sbb
fwait
jg
adc
sub
mov
stos
js
call
cmp
mov
push
inc
and
pop
jae
cmps
mov
pusha
test
add
mov
cmp
stos
das
jb
test
aam
add
pop
pop
cld
push
das
std
or
out
cs
ret
loop
mov
cld
shl
outs
mov
loop
je
out
movs
xchg
cmp
retf
push
in
addr16
ss
das
pop
jns
adc
(bad)
or
adc
mov
sub
push
jo
in
stos
stos
dec
(bad)
cli
in
pop
pushf
and
adc
pop
dec
inc
sahf
xor
jne
push
push
xor
scas
ret
out
stos
loopne
xchg
mov
fcomp
pop
mov
push
xor
push
outs
adc
out
in
sbb
dec
stos
lock
clc
test
out
cs
mov
add
mov
xchg
shl
or
int3
loopne
push
and
shr
sub
fidiv
lods
gs
mov
and
push
out
cmc
call
in
fist
jge
pop
sub
das
inc
cmp
shr
add
aas
call
ror
pop
andps
pop
jl
pop
pop
or
sub
outs
jecxz
data16
mov
cmps
stos
lock
cld
dec
pop
out
add
mov
xchg
lods
push
scas
xor
call
push
repnz
jle
call
gs
loope
in
test
icebp
cs
loope
sub
loope
or
and
sub
adc
das
inc
pop
pop
mov
bound
shr
mov
retf
fcmovb
cld
lods
pop
or
xchg
jp
lea
fmulp
mov
dec
inc
in
pop
push
jg
pop
cli
and
pop
cmp
xor
stos
pop
stc
out
fstp
out
es
cmp
xchg
clc
mov
pop
sub
sbb
loope
dec
ins
pop
fidivr
shl
or
call
dec
cmc
xor
imul
pop
outs
scas
pop
rcr
pop
(bad)
imul
in
out
pop
scas
jmp
or
stos
popf
sbb
dec
push
movs
imul
adc
inc
mov
jg
add
cmp
and
ss
lea
arpl
sbb
push
adc
fcmovbe
pop
loop
and
cli
push
dec
in
das
xor
out
add
and
push
jb
out
pop
and
into
jmp
outs
push
jle
add
inc
dec
jmp
pop
aas
mov
popa
cli
sbb
loopne
(bad)
jg
push
repnz
bound
xchg
cs
cdq
sub
repz
cmps
ret
or
rcl
(bad)
(bad)
(bad)
call
xchg
jl
pop
dec
les
lods
push
ret
inc
xchg
mov
into
in
sub
inc
rcl
cmp
dec
dec
mov
aad
into
mov
aam
sub
(bad)
sub
retf
fimul
add
mov
lds
jg
jmp
or
jo
pop
inc
jb
xchg
int
(bad)
ja
hlt
inc
xchg
sbb
sbb
movs
cmp
mov
(bad)
lods
push
sub
fild
adc
stos
jno
dec
vmovntps
(bad)
(bad)
jmp
clc
mov
add
repz
and
xchg
sar
iret
dec
pop
sbb
mov
pop
das
inc
pop
mov
hlt
and
(bad)
(bad)
jmp
fld
cmps
int
scas
leave
dec
or
lea
add
(bad)
xor
popa
mov
call
iret
inc
leave
inc
add
pushf
sub
clc
push
xor
loop
xor
hlt
(bad)
dec
cmp
test
mov
and
es
xchg
push
xor
ret
and
(bad)
(bad)
(bad)
jmp
sub
cmp
xchg
repz
icebp
inc
sub
or
pop
push
ror
mov
and
cli
retf
mov
sub
add
(bad)
jg
(bad)
std
retf
bound
stos
ror
enter
stos
cmps
fwait
das
mov
in
cld
push
jmp
jmp
push
aad
retf
clc
mov
dec
lods
cmp
mov
push
ret
shr
xchg
ds
jmp
repnz
(bad)
fcomip
arpl
cli
xchg
add
daa
movs
inc
sbb
jecxz
inc
retf
mov
ins
cs
fdivr
jmp
cmps
aas
dec
fiadd
stc
mov
inc
mov
movs
sub
xchg
sub
(bad)
enter
test
inc
movs
pop
cmps
ret
out
cmp
sub
fisttp
mov
inc
inc
int
adc
(bad)
std
lods
jmp
sub
dec
fwait
and
cmp
dec
inc
ret
jp
dec
leave
test
(bad)
xor
rol
aad
(bad)
inc
es
fadd
sbb
push
lahf
retf
loopne
inc
xchg
and
push
retf
cmp
(bad)
xor
cmp
int
lock
les
aam
repnz
fmul
call
sbb
inc
sub
dec
(bad)
scas
clc
(bad)
in
es
mov
and
bound
inc
sar
nop
out
dec
or
das
rol
fidiv
into
inc
sub
(bad)
(bad)
mov
inc
mov
sub
inc
addr16
add
sub
pushf
pusha
bound
std
out
clc
cmps
cmps
sub
enter
enter
cwde
pusha
inc
or
jecxz
mov
jle
js
inc
mov
movs
pop
ins
(bad)
adc
test
sbb
mov
dec
retf
(bad)
mov
inc
ror
mov
dec
int3
inc
xchg
or
into
sbb
sbb
dec
shl
stc
fcom
mov
dec
retf
or
or
xor
sub
or
fld
retf
inc
mov
or
inc
inc
into
inc
imul
leave
inc
daa
add
push
or
push
xchg
add
retf
jb
mov
idiv
jg
inc
cmps
dec
or
cmc
int3
dec
retf
sbb
xchg
dec
ror
int3
cmp
inc
retf
clc
push
sbb
dec
jge
mov
pop
add
ret
or
mov
clc
aaa
inc
sub
(bad)
retf
sbb
mov
dec
or
sbb
mov
dec
lahf
dec
(bad)
cs
(bad)
retf
dec
xor
cs
jmp
into
add
jns
dec
ret
pop
(bad)
sub
dec
leave
dec
adc
jmp
ja
enter
or
sahf
inc
jb
stos
push
nop
iret
xchg
inc
into
sub
ror
or
cmp
pop
adc
js
pop
xchg
loope
push
stos
lock
mov
retf
das
xor
jns
pushf
xor
inc
ret
mov
sub
jecxz
add
or
frstor
mov
clc
cmp
dec
xchg
(bad)
jp
xchg
lods
dec
ror
cmc
jp
call
clc
(bad)
dec
dec
pop
sub
shufps
loope
inc
shr
inc
mov
rcr
mov
inc
inc
(bad)
jg
movs
aaa
retf
fidivr
out
ficom
std
in
pop
push
call
jmp
mov
fdivrp
es
push
lods
cmps
add
dec
or
movs
lods
(bad)
outs
xor
(bad)
jns
stos
push
or
sahf
jp
jmp
retf
inc
test
mov
fs
lahf
fidiv
mov
mov
imul
or
mov
mov
gs
inc
dec
jno
test
and
cld
jmp
sahf
cmp
(bad)
sub
and
pop
and
push
and
pop
imul
inc
inc
aad
clc
fsubr
ficom
aam
dec
fs
ret
push
lahf
push
jae
inc
(bad)
pop
sub
leave
fidiv
call
lods
es
loope
(bad)
aas
lods
aam
and
popa
(bad)
stc
in
retf
and
icebp
test
ins
dec
retf
add
xchg
imul
dec
rcr
add
sbb
(bad)
mov
(bad)
sub
jle
mov
mov
inc
mov
(bad)
inc
in
mov
int
fcomp
aam
leave
dec
xchg
jmp
(bad)
(bad)
jmp
sar
ret
popa
jle
stos
nop
sbb
fistp
sbb
cmp
(bad)
jmp
in
iret
or
sub
rol
dec
inc
mov
dec
retf
dec
aam
inc
inc
retf
ret
(bad)
xor
adc
dec
arpl
push
mov
push
outs
and
dec
rol
mov
call
icebp
xchg
inc
jnp
cmp
aam
cmp
adc
mov
rol
je
cmps
call
adc
dec
call
aas
cwde
lods
inc
add
(bad)
(bad)
mov
loop
ret
cmp
pop
mov
shl
dec
retf
sbb
shl
inc
movs
xchg
lods
imul
call
xchg
js
fwait
sub
ret
mov
mov
jge
das
xor
iret
retf
mov
cmp
jge
inc
jg
cmp
xchg
dec
mov
and
out
fwait
pop
in
mov
and
lods
outs
mov
and
fmulp
mov
ret
idiv
rcl
dec
call
fmul
cs
and
sar
mov
out
mov
jmp
cmp
push
in
imul
or
pop
sbb
mov
cmp
retf
aaa
cmp
daa
mov
mov
sub
aaa
jg
mov
enter
mov
sbb
call
enter
cmp
retf
or
pop
(bad)
retf
not
push
push
sub
fwait
sti
(bad)
(bad)
dec
movq
xchg
mov
test
rcl
retf
ror
das
sub
jmp
int3
xor
inc
stc
dec
dec
repnz
or
add
inc
jp
les
into
dec
outs
imul
(bad)
dec
pushf
push
jl
push
adc
jmp
(bad)
cmp
retf
aad
rol
inc
mov
pop
repz
xchg
sub
cwde
(bad)
das
(bad)
(bad)
inc
mov
add
cmp
jecxz
aam
push
js
mov
(bad)
sbb
(bad)
(bad)
(bad)
mov
push
shl
out
inc
or
mov
push
pop
jmp
(bad)
(bad)
fistp
fdivr
(bad)
dec
rcl
cli
(bad)
sub
pop
push
cli
iret
sub
shr
cld
(bad)
(bad)
jmp
ror
add
cli
enter
dec
lea
fistp
mov
pop
inc
(bad)
(bad)
push
cmps
mov
icebp
jnp
pop
xchg
mov
and
dec
inc
lds
retf
sar
fst
fsub
loopne
dec
repnz
xchg
dec
push
std
(bad)
call
fiadd
mov
inc
fstp
rol
sub
shr
aam
idiv
(bad)
(bad)
jns
stc
push
xlat
(bad)
push
pop
pop
push
mov
mov
jb
test
xchg
fcmovnb
mov
push
clc
mov
fmul
jg
les
push
repnz
(bad)
(bad)
dec
cmps
sti
pop
punpckldq
cmps
call
cmc
cmps
into
fistp
rcl
inc
pop
dec
iret
xor
cmps
and
jns
rcl
rcl
pop
lock
dec
test
xor
stc
out
sahf
pop
mov
loopne
into
inc
(bad)
push
cld
adc
dec
jb
aad
movs
cmps
cmp
(bad)
(bad)
jnp
pop
call
push
(bad)
push
es
(bad)
pop
lock
rcl
sub
mov
mov
sbb
jecxz
(bad)
(bad)
in
fisub
call
mov
push
mov
stos
inc
inc
clc
pop
cld
cmps
pop
add
mov
cli
call
clc
mov
lods
call
mov
int3
sub
stos
pop
minps
push
pop
cli
lods
mov
pop
rcr
adc
jg
adc
or
(bad)
jl
pop
push
lods
shl
loopne
xor
cmps
call
jecxz
(bad)
(bad)
(bad)
mov
sahf
adc
(bad)
jns
add
pop
dec
scas
jmp
dec
or
cmps
mov
popf
mov
cmps
jnp
cmp
adc
scas
add
xor
pop
cmp
ror
(bad)
leave
sub
push
push
or
mov
popf
cmp
jmp
push
mov
(bad)
push
or
stos
(bad)
fsubrp
stos
pop
push
inc
sahf
fnstsw
pop
pusha
mov
push
sar
sub
jmp
enter
dec
retf
fcomp
(bad)
dec
lock
loopne
ins
fs
fisub
push
inc
rcr
(bad)
inc
retf
jp
dec
movs
xor
fisttp
pop
xor
in
push
mov
jp
mov
outs
rol
ret
pop
loopne
inc
mov
fimul
jo
cmps
dec
push
or
(bad)
js
cmps
(bad)
dec
int3
inc
cli
add
call
rol
dec
into
movs
ds
(bad)
call
xchg
inc
pop
pop
outs
ins
scas
dec
fstp
cmp
pop
les
retf
pop
mov
ds
aaa
xchg
ror
es
(bad)
(bad)
and
retf
mov
aam
loopne
icebp
aad
ds
(bad)
(bad)
(bad)
dec
inc
dec
psrlw
mov
jb
js
int3
jmp
pop
dec
inc
pop
mov
or
jge
lds
(bad)
fwait
dec
lods
jle
mov
in
into
fiadd
cmp
xchg
dec
inc
mov
push
sbb
jae
loopne
xor
and
mov
pop
iret
inc
pop
(bad)
mov
rcr
fisttp
andps
sbb
push
call
inc
fstp
mov
(bad)
call
repz
dec
mov
das
sar
fnstcw
std
test
hlt
jge
std
(bad)
inc
fbstp
das
pop
dec
outs
dec
aam
inc
fs
pop
lods
(bad)
out
cmc
fisttp
ds
cmp
or
sbb
mov
scas
inc
dec
pop
sar
mov
call
pop
fsubr
xchg
rcr
jg
ins
cld
js
inc
cmps
or
xlat
push
into
aaa
adc
dec
pop
stos
mov
std
push
daa
mov
stos
ficom
dec
inc
(bad)
out
xchg
or
mov
push
cli
mov
xlat
fistp
adc
int
push
repnz
dec
cld
call
mov
call
push
cli
dec
fdivr
adc
sbb
pop
pop
icebp
jg
fwait
mov
sub
push
xor
mov
mov
sbb
fisttp
cdq
stc
fstp
int
loop
loopne
pop
fdivrp
das
mov
std
sbb
shl
push
in
push
ret
pop
dec
sar
outs
add
push
retf
pop
pop
call
call
popa
pop
sub
mov
xor
sub
push
(bad)
xacquire
jmp
pop
cmc
fdiv
pop
pushf
or
pop
and
and
or
out
dec
mov
push
or
sub
into
loope
call
clc
into
cli
sub
shl
xlat
dec
mov
clc
call
das
push
jmp
mov
lds
cli
xchg
call
fwait
push
or
jle
mov
pop
icebp
sbb
xchg
sub
sbb
push
xor
iret
cmps
lahf
jo
stc
test
xor
dec
cwde
stos
in
inc
aad
ror
inc
or
rol
mov
aam
xor
and
cmp
sbb
xor
(bad)
aaa
cmp
stos
enter
leave
or
mov
test
ins
cwde
inc
or
or
shl
and
inc
push
outs
cdq
xor
or
sub
rcr
inc
pop
jecxz
cld
pop
cmps
mov
push
jg
pop
enter
(bad)
aam
outs
xchg
test
cmp
jle
test
xor
dec
xchg
mov
(bad)
jmp
or
retf
fld
dec
rcr
lock
(bad)
imul
cmps
mov
pusha
aas
cs
dec
cld
pop
loopne
pop
sub
hlt
jp
xchg
inc
retf
call
push
outs
and
clc
inc
push
test
pop
xor
jmp
mov
mov
fisub
sahf
fwait
xor
jae
add
mov
retf
push
cwde
cwde
jg
aaa
cld
inc
xor
cwde
mov
fwait
test
mov
ficomp
int
mov
lock
jmp
mov
sub
push
and
push
xchg
cmp
mov
dec
pusha
jo
xor
rcl
(bad)
ret
popa
mov
inc
mov
bound
aad
lock
or
mov
push
adc
push
push
jp
inc
inc
fisub
out
jp
mov
push
jp
ror
add
out
adc
sbb
sub
loopne
cmp
call
es
daa
sbb
fwait
es
arpl
adc
aaa
inc
push
(bad)
mov
xchg
jnp
test
ss
inc
add
jbe
pop
xor
and
adc
in
add
inc
leave
xchg
aam
cmp
mov
out
add
ja
jmp
in
mov
addr16
pusha
das
pop
fadd
pop
cs
shl
sti
mov
jbe
push
cmps
movs
cmp
mov
call
into
xlat
daa
popf
neg
fst
xchg
enter
or
add
or
inc
sub
add
push
movs
xchg
call
fimul
repnz
and
stos
add
jne
inc
ret
adc
(bad)
dec
add
adc
(bad)
mov
pusha
cmps
fcmovb
sub
out
xchg
mov
(bad)
(bad)
jg
mov
cmp
int
dec
mov
fs
fucomi
pop
ins
or
(bad)
mov
in
or
pop
mov
fdivr
(bad)
mov
ins
hlt
sbb
xor
or
adc
fdivr
(bad)
(bad)
push
je
jo
pop
sahf
aad
sub
add
sbb
xchg
dec
std
inc
mov
(bad)
dec
rcr
fcom
arpl
jae
mov
lods
test
push
nop
fistp
mov
call
jecxz
fild
cmp
sbb
inc
sar
call
xor
sar
fcomp
xor
out
pop
mov
call
call
or
pop
ds
cs
and
mov
popa
sbb
dec
movs
out
inc
cld
jmp
xchg
popa
aam
fs
retf
scas
and
outs
cmps
mov
inc
cmps
in
and
sbb
les
jmp
add
sub
mov
or
push
nop
aas
out
sbb
or
jmp
stos
inc
mov
loopne
(bad)
(bad)
jmp
sbb
repnz
imul
iret
nop
fnstsw
cld
adc
push
int
outs
inc
pop
sub
stc
mov
call
sub
adc
aaa
ror
mov
(bad)
aas
ret
int
js
pop
dec
sahf
inc
xor
movs
jge
jmp
out
ds
ret
out
mov
stos
dec
dec
(bad)
push
sub
stos
fs
shl
mov
std
or
into
cmp
stc
xor
and
jmp
mov
fstp
ds
adc
aad
pusha
push
clc
(bad)
(bad)
mov
cmp
mov
test
or
ja
(bad)
jmp
mov
mov
dec
call
loopne
pop
mov
inc
xchg
icebp
std
out
jp
loope
fcomp
popf
lahf
or
dec
dec
cmp
xchg
mov
inc
sub
pop
jns
aas
mov
jmp
dec
test
or
fmul
scas
mov
push
dec
stc
das
fsubr
push
movs
mov
and
dec
test
push
dec
xchg
jae
test
jg
popa
cld
mov
pop
fcomp
mov
(bad)
js
push
sub
push
push
cmps
add
sbb
mov
sbb
sbb
and
mov
stos
pop
adc
ja
outs
xor
out
jmp
sbb
int3
mov
push
dec
dec
push
test
test
add
in
psrlw
fcom
xchg
push
cmc
(bad)
fyl2xp1
stos
cdq
mov
push
dec
fstp
pop
inc
or
mov
fisub
mov
(bad)
sbb
ret
jg
(bad)
(bad)
fmul
xchg
shl
leave
cmps
sar
dec
sbb
imul
sub
push
test
mov
mov
cmps
mov
aad
stos
sub
mov
mov
idiv
lock
mov
loop
and
daa
fcomip
out
cli
mov
les
xor
jbe
fisttp
sbb
pop
lock
pushf
and
(bad)
push
sahf
es
shl
lods
inc
loop
lea
in
test
test
push
fldenv
cli
xor
sti
mov
sti
or
or
sub
test
aad
pop
inc
loop
or
adc
fcom
imul
and
(bad)
jg
fidivr
fdiv
mov
test
dec
mov
scas
fmul
sub
mov
shl
fs
ins
mov
fidiv
retf
outs
xchg
lahf
cli
fstp
pop
scas
pop
xchg
xchg
bound
(bad)
fstp
fdivr
add
retf
fild
cld
(bad)
fistp
iret
fmul
loop
dec
sahf
scas
out
lods
ins
pop
mov
(bad)
jmp
out
push
cmps
push
jp
bound
push
(bad)
test
std
jmp
bound
leave
not
lods
fmul
add
jg
(bad)
xchg
dec
scas
mov
adc
test
std
outs
sbb
call
into
cmps
xor
mov
rcl
in
(bad)
in
mov
push
shl
cmp
sub
push
and
(bad)
cmp
mov
iret
cmp
sub
sub
push
adc
daa
or
sub
mov
outs
jmp
inc
sub
sub
lods
sbb
jecxz
(bad)
push
adc
fild
or
mov
int3
idiv
pusha
mov
pusha
cli
pop
out
push
jo
and
es
mov
bound
and
push
push
and
push
and
into
add
xchg
pop
fld
scas
hlt
sbb
shl
loopne
xor
retf
jp
pop
mov
mov
push
sub
push
repnz
push
mov
mov
sub
mov
mov
fdivp
jge
out
aad
(bad)
mov
stos
adc
(bad)
(bad)
dec
and
out
stos
int3
imul
fadd
mov
fcom
xchg
test
sbb
push
(bad)
(bad)
in
add
data16
sbb
sar
rcr
rol
cli
outs
test
pop
retf
inc
mul
mov
jmp
dec
scas
sub
push
(bad)
call
aas
push
jbe
out
jg
lds
mov
fimul
and
rol
in
pushf
scas
pop
rcr
mov
mov
shr
add
lods
js
xchg
mov
rcl
push
aaa
xor
ror
shr
cmps
mov
dec
jbe
int3
out
lods
jmp
mov
dec
loop
dec
dec
cmps
cld
cld
lods
pop
pop
or
aad
sbb
int3
test
movs
pop
jnp
cmps
dec
mov
mov
adc
jmp
mov
push
inc
mov
jg
call
inc
ficomp
retf
sar
xchg
out
push
call
push
test
(bad)
(bad)
dec
jmp
lods
cmps
adc
sub
mov
or
dec
scas
push
push
jg
jmp
imul
in
push
jge
push
xor
imul
sbb
push
push
stos
(bad)
(bad)
call
adc
aam
cmp
mov
lods
mov
call
mov
cmp
sbb
dec
push
pop
pusha
loop
daa
inc
pop
mov
push
mov
add
jmp
sub
dec
sbb
lods
push
push
add
add
mov
popf
and
ret
call
(bad)
fisub
xchg
clc
push
pop
cli
pop
sar
scas
mov
and
cmp
jmp
clc
mov
pop
aad
loop
out
pop
sub
adc
or
popf
test
mov
ja
adc
dec
push
test
repnz
cmp
(bad)
cmp
call
enter
rol
leave
jmp
mov
pushf
pop
jle
xchg
pop
(bad)
mov
popf
(bad)
(bad)
inc
int3
int3
sbb
imul
outs
test
jns
pop
sub
sub
sub
push
mov
jg
clc
shl
rcr
loope
js
jnp
cmp
dec
(bad)
pop
cli
cwde
ret
daa
push
jle
shr
ins
cs
(bad)
(bad)
call
mov
push
cmps
sbb
cmp
mov
fidiv
xchg
lods
jl
retf
pop
fcomp
xor
loopne
or
loopne
jp
(bad)
(bad)
jg
int3
pop
shr
je
cmp
pop
and
jmp
mov
mov
mov
pop
call
mov
scas
xor
sub
mov
jg
dec
lods
push
pop
das
jp
sub
imul
mov
mov
cli
imul
test
mov
fistp
sar
outs
cli
jmp
test
cmps
add
adc
cmovnp
js
mov
xor
cmp
js
ja
dec
push
and
dec
cmps
cmp
clc
jg
inc
jnp
stc
jle
jns
retf
test
out
cmps
jl
pop
fdivr
mov
(bad)
(bad)
inc
cmp
jg
cdq
and
xor
stos
sbb
test
sub
(bad)
(bad)
(bad)
mov
jp
mov
cmp
fmul
mov
mov
push
icebp
xchg
push
sbb
aam
sub
mov
mov
into
in
pop
sub
sub
aad
cld
push
test
fsubr
xchg
icebp
mov
push
cwde
pop
ins
cli
adc
rcl
and
je
sbb
dec
(bad)
(bad)
jmp
xor
int3
icebp
out
mov
adc
hlt
pop
sub
in
xchg
jge
or
push
(bad)
(bad)
(bad)
push
inc
xor
test
mov
(bad)
out
pop
sbb
loopne
xchg
mov
cmp
push
xchg
outs
inc
popf
in
fstp
mov
outs
test
neg
mov
(bad)
bound
push
js
aaa
or
and
hlt
arpl
call
cmp
sti
stos
pop
lock
faddp
loopne
lock
fbld
pop
sbb
rcr
sbb
sar
call
stos
inc
sub
pop
fadd
iret
sub
test
ds
push
sbb
mov
dec
inc
(bad)
mov
cmp
inc
sub
(bad)
jmp
nop
and
mov
pop
mov
mov
je
aas
fsubr
xchg
pop
cli
test
(bad)
(bad)
mov
fisttp
into
pop
pop
push
pop
sub
popa
mov
jmp
mov
sbb
pop
cmp
pop
(bad)
push
dec
push
mov
sub
loopne
xor
pop
lock
outs
xor
scas
lea
jmp
dec
daa
fcomp
pusha
lock
pop
ffreep
sub
push
out
mov
dec
pop
fcomip
(bad)
call
in
mov
aaa
aaa
fsubr
jp
stos
hlt
fucomp
mov
loop
out
minps
fs
jmp
(bad)
lods
push
out
cs
sbb
test
call
outs
mov
rdtsc
cld
xchg
test
fnstenv
std
dec
cli
pop
pop
pop
test
movs
outs
cmp
xor
cpuid
jb
jg
pop
fcomp
call
iret
jg
mov
jp
pop
sub
or
popf
mov
jbe
stos
jg
add
fsubr
nop
jg
es
sub
sbb
dec
cld
(bad)
dec
faddp
fist
sbb
sbb
mov
sub
dec
cmp
fdiv
pop
(bad)
(bad)
push
pop
jl
jp
xor
leave
sub
fmul
xchg
mov
mov
or
adc
fmul
dec
mov
jg
jge
sub
addr16
mov
jnp
xchg
ffree
in
cs
ficomp
cmp
push
aas
mov
mov
das
sbb
mov
stos
pop
pop
jl
xchg
xor
pop
or
jo
int3
mov
jmp
lea
adc
adc
and
aad
ja
fcomp
outs
ins
dec
jb
fsubr
outs
push
inc
inc
lds
cmp
mov
pop
cli
ret
movs
xchg
and
call
inc
ret
leave
inc
fcmovne
shl
xchg
daa
outs
xchg
dec
mov
int
push
xlat
push
xor
int
(bad)
cdq
pop
push
sub
(bad)
(bad)
mov
mov
popf
into
dec
sbb
adc
pop
imul
imul
fcmovnbe
(bad)
(bad)
push
mov
stc
mov
pushf
cmps
and
mov
fmul
add
call
(bad)
jmp
out
add
mov
pop
fsubr
add
sub
(bad)
xor
cmp
mov
pop
mov
popa
mov
mov
jns
lods
fidivr
(bad)
(bad)
(bad)
inc
cmp
pusha
lods
imul
jmp
scas
(bad)
fidivr
lahf
aaa
dec
and
outs
es
fdiv
push
sbb
clc
push
popf
mov
jmp
xor
jmp
mov
add
mov
dec
jnp
jmp
ins
mov
(bad)
fcom
test
mov
or
stc
retf
sub
(bad)
call
pusha
stos
aam
out
dec
(bad)
mov
or
mov
movs
outs
lea
adc
(bad)
out
(bad)
(bad)
dec
mov
repz
lods
stc
inc
xchg
inc
sti
stos
fnstenv
test
mov
jmp
pop
add
sbb
fmulp
mov
mov
mov
xor
sub
lods
ret
aam
call
mov
sbb
pop
sti
inc
daa
mov
sub
sbb
retf
pop
adc
stc
(bad)
(bad)
call
stc
loopne
imul
aad
scas
mov
inc
aad
and
jmp
mov
jp
pop
sbb
pop
jge
fld
push
push
std
mov
add
sub
or
pop
out
pop
popf
arpl
jmp
stc
(bad)
or
mov
pop
ror
or
int
fcmovnbe
jl
jb
js
mov
(bad)
(bad)
push
inc
mov
sub
loopne
fisttp
dec
jle
(bad)
sar
mov
pop
and
xor
xchg
cli
sub
add
cmp
je
pop
out
cmps
add
push
push
stos
inc
test
movs
inc
jl
nop
retf
xchg
cmps
sub
(bad)
(bad)
(bad)
jmp
outs
push
jmp
fst
or
(bad)
lahf
dec
cmp
sar
pop
mov
dec
test
push
(bad)
pop
es
mov
call
movs
iret
jl
pop
aas
xor
cli
sar
dec
aas
push
mov
inc
or
or
mov
fsub
sub
jmp
push
movs
add
or
pop
cwde
(bad)
adc
aad
push
adc
sti
and
push
retf
mov
mov
adc
retf
jmp
and
int3
cmp
das
cmps
mov
cmp
push
cmp
enter
test
aad
xchg
pop
bound
(bad)
dec
dec
jmp
adc
sub
dec
int
fnsetpm(287
dec
cmp
aam
xlat
sbb
pop
xor
push
cmp
cld
into
ror
sbb
pop
(bad)
scas
pop
push
int
push
mov
push
ficomp
ss
(bad)
mov
ss
cmp
push
rol
push
dec
cld
jmp
dec
adc
out
clc
inc
pop
mov
addr16
inc
pop
test
movs
(bad)
sti
push
sti
out
xor
in
mov
out
dec
dec
mov
loope
(bad)
(bad)
mov
push
popa
call
push
fdivr
add
(bad)
(bad)
(bad)
jmp
jbe
ds
call
or
xchg
imul
fsubr
jmp
call
add
add
jmp
pop
or
sar
or
bound
inc
sub
(bad)
(bad)
call
call
push
cmps
fnstcw
adc
push
out
pusha
or
loope
pop
(bad)
push
cld
fxch
mov
mov
mov
sub
mov
scas
add
add
arpl
sub
jle
mov
dec
lahf
fnstcw
inc
adc
(bad)
push
movs
std
pop
fst
lea
inc
shl
pop
pop
adc
adc
aaa
fiadd
mov
jmp
je
(bad)
(bad)
cmp
retf
jl
xchg
lods
fisttp
mov
test
ss
add
sub
inc
mov
movs
fwait
add
ss
hlt
(bad)
jmp
loop
add
push
rcl
cmps
push
fs
sti
ins
shl
pop
or
mov
cwde
mov
bound
xor
pop
lahf
repz
pop
push
jp
(bad)
(bad)
(bad)
call
ret
fadd
(bad)
mov
pop
jmp
sub
test
jg
push
xor
push
repnz
pop
loopne
jae
pop
fs
call
mov
sbb
jg
cmp
pop
out
jg
outs
cmps
inc
jmp
ins
dec
repnz
sub
xor
mov
movs
out
cmp
adc
jmp
popa
pop
mov
loopne
(bad)
(bad)
jmp
pop
and
ins
mov
popa
dec
popa
pop
dec
outs
sbb
neg
shl
push
push
ins
sbb
sub
out
int3
dec
xchg
aam
ror
push
fst
loope
xlat
push
(bad)
(bad)
mov
loopne
push
arpl
sar
pop
cli
push
enter
lods
stos
cmp
icebp
mov
push
mov
pop
outs
(bad)
jg
pop
call
xchg
push
xchg
js
mov
icebp
dec
aam
ins
pop
dec
mov
nop
jno
jmp
das
out
rcl
in
jmp
mov
shl
sub
sub
push
fimul
dec
(bad)
jmp
imul
mov
cmp
stos
or
xchg
jmp
retf
sahf
(bad)
(bad)
fild
jae
scas
sub
fsub
jmp
retf
pop
lahf
mov
jns
mov
mov
std
inc
or
out
mov
mul
idiv
(bad)
(bad)
jmp
mov
repnz
retf
push
popf
lods
sbb
out
fiadd
inc
(bad)
(bad)
push
fwait
mov
add
adc
leave
fmul
adc
in
add
call
or
adc
call
cmps
pop
aad
pop
(bad)
mov
lahf
mov
popf
ror
cmp
mov
fist
jb
es
cmp
push
dec
popa
sub
arpl
ss
outs
cmps
(bad)
stc
(bad)
push
sub
imul
bound
sub
fsub
pop
bound
rcr
pop
jne
rcr
push
out
push
iret
sbb
(bad)
(bad)
(bad)
(bad)
clc
push
pop
setp
pop
dec
fnstcw
or
or
aas
mov
in
loope
movs
repz
push
sbb
and
leave
mov
sub
mov
(bad)
(bad)
call
mov
cwde
and
hlt
or
(bad)
fsub
cli
pop
das
mov
mov
hlt
jmp
mov
sbb
jl
test
loopne
movs
mov
(bad)
out
add
pushf
fimul
cmp
clc
nop
sub
or
sub
ja
(bad)
cld
fsub
dec
mov
call
push
inc
(bad)
(bad)
(bad)
jmp
int
pop
and
push
mov
std
ins
retf
je
iret
dec
cmp
pop
or
mov
mov
enter
jecxz
xchg
loopne
movs
and
adc
outs
inc
sbb
pop
(bad)
fidivr
(bad)
stos
mov
test
mov
dec
mov
lods
mov
call
and
inc
(bad)
(bad)
(bad)
(bad)
fidivr
pop
in
mov
clc
ficom
pop
mov
mov
xchg
test
je
jmp
stc
mov
add
(bad)
(bad)
fldcw
cmp
adc
cs
dec
add
add
add
or
idiv
stos
cmp
(bad)
jmp
es
pop
or
cmp
mov
ret
or
sbb
or
in
fstp
lock
loopne
sub
test
popf
daa
(bad)
jg
icebp
aaa
lods
adc
jbe
cmps
sar
dec
ret
cmp
(bad)
(bad)
dec
mov
xchg
sub
mov
sar
test
adc
cmp
sbb
push
jno
pop
test
dec
inc
movs
dec
and
scas
call
add
call
mov
call
or
movzx
push
jae
jp
dec
imul
sub
sub
(bad)
(bad)
jmp
clc
cmp
sub
out
mov
mov
sahf
fcmovbe
jecxz
xchg
test
(bad)
(bad)
(bad)
(bad)
cmp
enter
sbb
ficomp
call
dec
in
fisttp
mov
xor
ret
aam
and
sbb
push
or
clc
aad
fst
or
icebp
dec
out
fistp
stos
fisubr
cld
(bad)
(bad)
(bad)
call
cmps
cmp
cwde
xor
pop
mov
dec
rol
das
retf
icebp
fs
mov
fdivr
in
test
mov
xchg
inc
nop
mov
aas
pop
lock
add
repz
retf
inc
jge
std
(bad)
mov
pop
pop
ins
daa
adc
out
pop
jnp
jge
sbb
(bad)
(bad)
lods
sbb
jmp
mov
inc
das
out
fbld
and
pop
jg
dec
bound
shl
adc
scas
jb
mov
(bad)
(bad)
push
mov
sbb
es
push
mov
push
jmp
icebp
(bad)
(bad)
call
retf
das
test
leave
mov
rcr
ror
sub
push
add
(bad)
fisttp
test
imul
(bad)
(bad)
jmp
jecxz
scas
aas
sbb
fisubr
pop
fcomi
sub
cld
mov
or
call
(bad)
fwait
sub
(bad)
in
(bad)
cli
and
mov
jp
addr16
test
cmp
fwait
loope
dec
xor
retf
jecxz
inc
out
mov
sbb
fcmovu
das
loopne
or
inc
push
call
ret
scas
push
ja
clc
mov
fstp
xchg
movs
fldcw
in
es
dec
cmp
popa
ror
rcl
dec
leave
out
scas
leave
add
push
sar
(bad)
jg
rcl
stos
and
(bad)
jmp
daa
pushf
rol
pop
mov
mov
out
xchg
test
movs
or
push
(bad)
cld
test
add
clc
retf
gs
xchg
clc
(bad)
jmp
dec
loope
loop
dec
xchg
pusha
out
sub
inc
mov
(bad)
(bad)
mov
adc
retf
inc
in
push
jl
sbb
pop
aad
pop
dec
adc
dec
cmps
or
pop
into
jg
and
call
sub
test
popa
xchg
sub
(bad)
fcomip
stos
(bad)
imul
dec
or
test
into
psadbw
call
pop
ins
sub
retf
out
pop
stc
movs
jp
cmp
test
clc
or
(bad)
(bad)
fcmovne
pop
popf
push
jmp
mov
push
xor
shl
mov
jp
push
and
repnz
int3
mov
movs
(bad)
pop
xor
pop
aaa
sbb
js
add
push
xchg
xchg
mov
pop
es
gs
(bad)
clc
into
test
pop
push
xlat
imul
out
clc
(bad)
jg
fidiv
pusha
mov
and
jmp
mov
jl
sub
sub
dec
clc
jle
mov
int3
outs
inc
cli
jmp
pop
inc
cmp
dec
test
(bad)
(bad)
dec
jmp
mov
jne
dec
push
out
fstp
in
ins
and
std
(bad)
jmp
or
adc
out
js
fcom
and
jmp
repnz
mov
(bad)
(bad)
(bad)
call
loop
loop
mov
jnp
pop
mov
shl
lods
cld
fadd
mov
in
hlt
fisttp
pop
xchg
leave
jp
jg
test
cwde
xchg
jle
pop
mov
ss
(bad)
jmp
push
out
out
lds
mov
cmp
(bad)
mov
push
mov
push
int3
and
and
sbb
data16
(bad)
(bad)
jmp
sbb
dec
pop
push
mov
jae
mov
pop
clc
sbb
ja
add
fld
(bad)
(bad)
cmp
(bad)
mov
stos
loope
js
push
pop
xchg
pop
pop
(bad)
(bad)
(bad)
dec
fcomip
stos
fwait
jns
fiadd
mov
pop
cld
aad
arpl
pop
sar
fneni(8087
es
pop
enter
movs
mov
push
cs
outs
leave
cli
mov
push
fcmovne
add
sbb
mov
scas
mov
sbb
stos
mov
(bad)
(bad)
jg
add
leave
cdq
popf
or
mov
std
jmp
sti
daa
dec
(bad)
(bad)
fisttp
mov
rcr
ins
sub
xchg
out
jne
mov
(bad)
fcomip
sbb
dec
pop
pop
push
stos
jmp
fsubr
(bad)
popf
xor
(bad)
pop
cmp
mov
into
cdq
dec
daa
sub
pop
sub
mov
call
xor
or
xchg
ficomp
adc
dec
adc
jle
out
pop
ins
add
xchg
in
mov
(bad)
fistp
pop
inc
or
(bad)
das
les
xchg
pop
stos
push
sub
xchg
cmp
jmp
push
movs
mov
hlt
cmp
and
or
push
cdq
stos
inc
jns
sahf
jbe
sub
push
jl
addr16
push
call
jecxz
das
jmp
inc
mov
xchg
out
and
jg
mov
div
jmp
(bad)
call
(bad)
cmc
int
repz
lods
retf
dec
stos
popa
clc
or
xlat
pop
movs
push
or
and
lds
fiadd
sti
(bad)
out
adc
call
std
xchg
in
fimul
fld
in
std
push
dec
pusha
or
pop
retf
retf
ds
lds
scas
pop
sub
(bad)
fdiv
jmp
cmc
fistp
ja
test
call
(bad)
inc
mov
cmp
test
or
adc
pop
dec
(bad)
cmp
jp
fnstenv
mov
mov
(bad)
push
jecxz
mov
push
jmp
loop
and
cmp
mov
(bad)
lds
std
(bad)
fisttp
pop
ror
out
push
dec
scas
mov
xor
pop
imul
call
test
pusha
adc
test
sub
cli
(bad)
repz
sub
stos
jmp
push
(bad)
loop
(bad)
inc
mov
cmp
and
dec
(bad)
mov
(bad)
(bad)
(bad)
mov
iret
sbb
call
daa
mov
mov
(bad)
std
jge
cmp
das
fisubr
and
push
iret
lods
pop
fld
fxtract
mov
idiv
(bad)
(bad)
inc
pop
mov
or
(bad)
jmp
enter
test
mov
add
sar
inc
(bad)
call
test
adc
sub
js
sub
pop
and
pop
retf
addr16
inc
(bad)
pop
push
call
and
pusha
loopne
sub
retf
in
sub
imul
rcr
push
in
in
push
dec
das
push
push
inc
xlat
jae
(bad)
(bad)
fild
sub
push
pop
sub
push
cmps
fisttp
clc
in
dec
push
adc
(bad)
jmp
icebp
cmp
jns
movs
popa
aam
or
aaa
ret
loop
xchg
xchg
jg
idiv
push
jl
(bad)
fisubr
mov
mov
pop
pop
fistp
jmp
(bad)
mov
test
test
mov
pop
jl
inc
dec
repnz
call
hlt
mov
enter
scas
sub
jns
add
dec
or
test
repz
addr16
pop
clc
jmp
(bad)
push
(bad)
(bad)
xlat
dec
test
scas
jp
fdiv
cmp
les
xor
std
rcr
ret
jno
cmp
add
(bad)
call
ins
mov
fldcw
cs
(bad)
jmp
pop
jg
call
das
mov
ja
cmp
repz
dec
aaa
cld
mov
mov
xchg
pop
fdivrp
(bad)
call
rcr
mov
cwde
xchg
stc
mov
sbb
or
neg
and
scas
(bad)
mov
mov
xadd
fcompp
mov
push
mov
(bad)
(bad)
jmp
or
mov
pusha
js
inc
cmps
clc
mov
mov
pop
fbstp
sub
aad
arpl
jl
xchg
call
dec
(bad)
jmp
xchg
or
xor
mov
jmp
call
and
call
mov
pop
pop
push
pop
cli
rcr
mov
stc
(bad)
leave
das
fnsave
idiv
pop
hlt
jmp
xor
test
into
cmp
or
push
mov
call
loopne
or
outs
xor
mov
enter
xor
cli
and
test
pop
in
cmp
sar
(bad)
(bad)
out
sub
pop
xor
repnz
stos
sub
iret
add
into
mov
(bad)
sub
test
mov
jo
(bad)
mov
mov
es
push
(bad)
(bad)
call
cmp
pop
push
rcr
icebp
pop
xor
sbb
mov
movs
popf
pop
pop
jo
test
pop
sub
stos
ins
(bad)
daa
icebp
push
push
je
bound
sbb
xlat
sub
and
retf
mov
fdivr
(bad)
jg
inc
add
ins
fadd
or
mov
adc
xchg
sbb
push
imul
cmp
loopne
ficomp
stc
bound
movs
mov
(bad)
mov
mov
adc
icebp
fnstenv
jmp
xchg
rcr
cmp
adc
std
fcomp
cli
(bad)
(bad)
call
sbb
cmp
jmp
jno
je
fisubr
lock
pop
(bad)
jmp
xchg
fcom
mov
cmp
shr
pop
rcr
call
scas
cmc
or
rcr
adc
jl
sub
(bad)
dec
and
fcom
lock
xlat
fdivr
sar
(bad)
call
hlt
(bad)
add
mov
jl
mov
pop
mov
fisttp
jbe
neg
pop
mov
mov
jo
je
(bad)
(bad)
dec
xchg
popf
fldcw
pop
lea
jecxz
pop
fmul
adc
repnz
cmp
mov
(bad)
(bad)
dec
jp
pushf
xor
ja
retf
push
ffreep
movs
or
popf
xchg
loop
(bad)
(bad)
(bad)
cli
lahf
add
daa
lods
out
mov
mov
dec
adc
(bad)
sub
fstp
retf
imul
stos
daa
mov
fld1
cmc
clc
into
mov
fistp
test
std
sub
mov
es
cmp
add
jns
icebp
pop
sub
pop
mov
(bad)
jg
(bad)
fmul
mov
ror
test
test
or
jecxz
call
lock
pop
sti
fucomi
jae
mov
lock
call
aad
mov
int3
mov
cmp
pushf
fcomp
push
dec
sub
js
dec
mov
lahf
inc
out
mov
(bad)
std
mov
jge
dec
pop
mov
push
aad
(bad)
cld
and
retf
add
inc
(bad)
(bad)
mov
inc
fcomi
push
or
sub
push
fsub
push
dec
pop
std
rcr
xchg
out
mov
(bad)
jl
je
mov
mov
push
stos
les
ins
ffree
lock
popf
and
stos
sbb
retf
ins
xlat
pop
lds
mov
inc
punpcklbw
frstor
(bad)
(bad)
jg
fisttp
es
jg
cmp
fimul
pop
mov
push
jl
or
fst
sbb
push
add
lock
xchg
pop
xchg
jmp
cli
push
shr
fcomp
fisub
rcr
(bad)
cmp
jmp
cmp
(bad)
(bad)
push
jnp
pop
push
mov
and
sahf
or
push
jmp
mov
pushf
pop
dec
pop
mov
push
(bad)
jg
dec
pop
data16
das
lahf
fmul
(bad)
cld
js
or
leave
aaa
adc
(bad)
(bad)
(bad)
call
pop
mov
push
cli
add
xchg
shl
js
cmps
or
cmp
or
push
(bad)
push
in
movs
push
jmp
pop
sub
cmp
fxch
pop
xor
add
jg
sub
(bad)
sub
push
sbb
jmp
dec
fisttp
pop
inc
mov
pop
xlat
(bad)
jmp
pop
or
daa
mov
pop
push
pop
movs
cli
(bad)
jg
jg
pop
sbb
nop
mov
sar
sti
pop
nop
mov
push
and
(bad)
inc
popf
cmp
ret
jne
jl
cmp
push
shl
fmul
mov
fsubr
or
lock
mov
mov
jl
mov
xchg
daa
(bad)
push
pop
or
or
jmp
or
jle
fcom
mov
push
cld
dec
jl
je
ret
dec
pop
or
in
cmp
fwait
dec
fsub
sbb
fdivr
inc
jg
(bad)
stos
push
je
mov
div
fcmovbe
(bad)
inc
sbb
cdq
(bad)
dec
shl
xlat
fstp
out
xchg
xor
pop
inc
(bad)
js
daa
pop
cmc
fst
mov
jg
pop
aad
jecxz
sar
and
mov
pop
dec
adc
daa
dec
xor
or
jge
mov
inc
or
push
enter
mov
fidivr
dec
mov
repnz
fmul
imul
pop
mov
outs
ficom
cmp
scas
lock
push
or
cli
das
out
inc
mov
mov
or
aaa
pop
pop
aad
jo
enter
mov
jmp
lods
ds
push
mov
addr16
pop
pop
mov
jg
mov
frstor
jmp
(bad)
mov
ror
pop
leave
fcomp
push
dec
push
pushf
mov
das
sbb
cmp
fs
mov
call
inc
pop
jo
inc
pop
fst
mov
pop
stos
push
mov
sub
or
mov
jecxz
popf
sbb
fisub
push
cmp
mov
mov
loope
fadd
pop
cli
xchg
mov
xor
mov
inc
push
in
(bad)
jmp
sbb
(bad)
(bad)
(bad)
(bad)
fadd
(bad)
cwde
cmp
ret
xchg
test
arpl
cmp
xchg
stc
add
test
mov
enter
push
f2xm1
mov
in
cmp
fst
cs
cld
mov
imul
int
pop
adc
pop
(bad)
(bad)
(bad)
(bad)
mov
push
lock
outs
test
fsubr
test
jmp
cmps
mov
add
call
aam
mov
lods
stos
sub
pop
and
in
and
sub
mov
mov
(bad)
jg
or
fisttp
cwde
fcomp
das
jmp
mov
call
aad
mov
pop
or
movs
call
dec
loope
dec
out
cs
aaa
int
mov
mov
(bad)
pop
inc
(bad)
sub
clc
out
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
ds
into
lods
je
rcr
jnp
mov
xor
ret
sub
mov
sub
cdq
jmp
dec
push
sbb
mov
xor
push
mov
fisttp
loopne
mov
call
jmp
cs
std
mov
test
popa
loope
stos
pusha
icebp
(bad)
(bad)
call
cld
or
stos
int3
lds
sub
ds
pop
cmc
(bad)
cmp
and
int3
dec
outs
aas
fistp
pop
and
or
(bad)
fcomip
jp
jns
call
fcom
jmp
movs
push
shr
cwde
fld
and
lock
mov
mov
cmp
mov
or
mov
(bad)
push
cdq
fdivrp
stos
jecxz
std
pop
sbb
pop
cld
ror
or
pop
idiv
out
mov
sar
pinsrw
mov
pop
pop
sbb
out
xor
dec
jle
mov
sbb
popf
fxch
add
stos
push
pop
clc
xchg
icebp
mov
int
ret
inc
sbb
pop
cmp
(bad)
out
mov
sbb
ins
lock
adc
push
stos
mov
daa
cmp
out
clc
(bad)
inc
movs
rol
adc
daa
xchg
pop
fs
ds
cmps
ror
pop
(bad)
jmp
sub
retf
dec
scas
stc
jl
jbe
(bad)
fistp
sbb
pop
mov
mov
push
pop
sbb
call
or
shl
fnstsw
mov
cmp
mov
push
aam
leave
and
mov
push
in
pop
pop
and
pop
adc
out
rol
loop
sub
fwait
jmp
into
pop
aaa
pop
ins
cld
xchg
bound
iret
sbb
mov
pop
push
std
xchg
lds
pop
fcmovnb
mov
(bad)
jmp
sbb
fcmovbe
pop
pop
les
je
neg
sti
pop
xchg
fs
add
test
mov
pop
jg
cmp
add
pop
into
pop
adc
cmp
inc
cli
(bad)
jg
loopne
mov
ror
lods
mov
mov
xchg
mov
in
jmp
fdivr
jae
mov
test
dec
iret
inc
lods
xor
push
mov
push
std
push
out
nop
call
mov
movs
pop
mov
push
fild
inc
mov
and
add
ficomp
jb
ficom
jge
lods
stc
fs
dec
ret
pop
fcomp
jg
out
and
push
push
cmp
lahf
fsub
out
loop
pop
fistp
push
dec
pop
lods
sbb
cli
shr
mov
popf
call
mov
movs
retf
pop
and
retf
lods
and
jl
adc
xor
pop
adc
jmp
(bad)
mov
fistp
pop
dec
out
popa
loop
retf
imul
push
mov
mov
inc
(bad)
(bad)
(bad)
(bad)
cmp
scas
cmp
je
pop
fnstenv
or
loop
cmp
inc
push
call
(bad)
(bad)
(bad)
js
jecxz
sahf
es
mov
addr16
jl
(bad)
int
inc
mov
pop
jl
out
outs
mov
daa
pop
(bad)
(bad)
(bad)
mov
mov
aad
xor
cmp
mov
out
ror
mov
call
mov
outs
ins
jp
test
adc
clc
jmp
cli
ret
add
lock
mov
dec
fstp
pop
and
dec
cmps
fwait
loop
jg
mov
(bad)
(bad)
(bad)
fsubr
call
stos
into
cmp
adc
pop
popf
fdivr
loop
aad
repnz
scas
mov
jmp
scas
jno
imul
mov
mov
cmp
call
cmp
in
sbb
mov
mov
(bad)
cmp
clc
jmp
pop
leave
ins
xchg
jmp
mov
sub
xchg
(bad)
jg
or
jne
int
fsubr
fdiv
lahf
pop
or
icebp
cmps
(bad)
(bad)
(bad)
call
cld
je
xor
fld
shl
sbb
push
pop
gs
(bad)
jmp
cld
ret
cs
pop
pop
or
pusha
(bad)
sub
mov
add
push
out
fsub
xor
(bad)
(bad)
cld
sub
push
pop
jne
pop
mov
xor
clc
movs
(bad)
enter
movs
out
pop
sbb
add
jb
(bad)
shr
or
jmp
xchg
imul
push
push
cmp
fdiv
call
push
repnz
call
mov
ficom
fidiv
enter
pushf
sti
repnz
(bad)
(bad)
mov
or
sar
pop
dec
shr
jmp
fld
(bad)
(bad)
(bad)
fsubr
lock
or
jl
ret
arpl
movs
int
mov
(bad)
das
mov
loop
mov
or
jmp
cmp
je
and
ficomp
imul
pop
or
mov
(bad)
out
clc
pop
into
test
xchg
mov
dec
mov
(bad)
mov
and
pusha
mov
pusha
fsub
(bad)
push
or
scas
cmp
fisubr
jecxz
fsubr
sar
(bad)
mov
mov
add
cmp
stos
mov
jg
test
inc
pop
pushf
mov
xchg
movs
outs
ret
xchg
cwde
sub
inc
add
fld
(bad)
fisttp
(bad)
in
and
mov
dec
inc
out
xchg
hlt
sub
(bad)
pop
add
fbstp
(bad)
mov
and
mov
dec
mov
div
inc
adc
das
pop
call
and
and
jmp
cld
pop
out
cli
mov
sbb
jmp
sar
and
xchg
retf
pop
pop
xchg
jo
and
fisttp
repnz
jg
add
cmp
xchg
mov
pop
cmps
jle
sar
enter
pop
enter
(bad)
mov
sub
stc
pop
shr
sbb
and
std
xchg
sar
jmp
js
sbb
push
lahf
push
pop
mov
repz
cmp
inc
ds
xor
push
push
lock
sti
lea
adc
push
sahf
adc
(bad)
cmp
mov
xor
outs
xchg
sbb
mov
push
pusha
jp
pop
ficom
jnp
cmps
pop
cdq
sbb
push
(bad)
cmp
adc
cmp
(bad)
out
xchg
adc
pop
call
jno
sahf
lahf
leave
add
mov
cmp
mov
jmp
fcomp
sbb
lea
jp
cli
cmp
fistp
leave
sar
pushf
je
sub
fmul
(bad)
js
mov
mov
(bad)
(bad)
(bad)
fld
push
jb
mov
int3
sbb
pop
adc
jp
inc
and
pop
stos
(bad)
(bad)
(bad)
call
mov
cmps
mov
xor
and
cmp
icebp
out
pop
push
push
adc
adc
rcl
mov
pop
sub
test
fs
loopne
(bad)
(bad)
dec
ins
pop
pushf
aam
js
jg
mov
or
pop
pop
mov
stc
mov
lods
pop
pop
pop
mov
(bad)
(bad)
push
shl
mov
pop
pop
jl
mov
xchg
fbstp
stc
push
mov
sub
in
xchg
jmp
mov
mov
nop
mov
outs
push
cli
sbb
scas
outs
xchg
bound
aam
or
call
mov
jle
fist
movs
xchg
sub
(bad)
(bad)
(bad)
dec
mov
retf
fisubr
stos
outs
rcr
inc
cmp
jg
dec
(bad)
(bad)
(bad)
dec
std
fdivr
pop
or
fld
sub
push
adc
pop
(bad)
(bad)
(bad)
(bad)
fcmovnu
cmp
jno
retf
or
(bad)
jp
xor
lock
cmp
cld
pop
push
mul
pop
aas
xor
arpl
xor
push
push
mov
mov
lods
jl
mov
and
cmp
rcr
(bad)
(bad)
(bad)
jg
fild
mov
fidivr
fwait
stos
scas
sahf
cmp
mov
leave
inc
(bad)
and
xor
(bad)
call
(bad)
mov
popf
mov
inc
push
or
push
in
clc
(bad)
(bad)
call
call
mov
or
outs
lods
mov
xchg
cmp
(bad)
(bad)
call
out
pop
in
jmp
dec
jge
xor
pushf
add
fs
out
enter
pop
sbb
add
stos
repz
loopne
inc
push
fisub
call
or
sbb
dec
popf
mov
mov
in
and
or
mov
loope
jmp
or
jmp
inc
data16
shl
lock
into
out
mov
xor
(bad)
(bad)
(bad)
aas
inc
dec
pop
push
inc
fs
push
stos
and
cmp
rol
jle
push
push
sar
cmp
stos
stos
cmp
popf
add
add
mov
sbb
jmp
pop
daa
pop
sbb
fnstenv
(bad)
call
cmp
sbb
push
(bad)
mov
sub
pop
adc
add
mov
and
cmp
mov
mov
mov
jae
xchg
jmp
jmp
call
xor
and
mov
fiadd
(bad)
(bad)
push
jle
fadd
stos
mov
cwde
test
pop
mov
mov
or
inc
daa
das
lods
out
or
ror
stc
sub
fimul
out
pop
inc
inc
out
sbb
les
mov
sbb
scas
mov
sub
fsubr
imul
retf
mov
dec
and
lahf
(bad)
(bad)
(bad)
dec
mov
add
(bad)
cmp
popf
popf
mov
test
jb
add
jmp
(bad)
mov
fisub
sub
jmp
sub
(bad)
lods
cli
sar
or
out
clc
pop
imul
fnsave
test
into
pop
sub
jg
cmp
(bad)
in
cmp
adc
(bad)
sbb
xchg
push
ins
sub
pop
adc
cld
ja
outs
cli
or
sbb
sbb
mov
cmp
mov
scas
(bad)
jg
test
pushf
icebp
shl
popf
push
xor
(bad)
pop
dec
cld
xchg
xchg
dec
lock
(bad)
js
or
pop
sbb
jb
xor
dec
dec
xor
inc
(bad)
cmps
adc
(bad)
(bad)
(bad)
jmp
lods
xor
fwait
mov
mov
pop
xor
shl
pop
es
aam
mov
std
aad
(bad)
(bad)
call
pop
ret
xchg
mov
cmp
(bad)
iret
sbb
cmps
(bad)
call
pop
or
pop
pop
pcmpgtb
mov
mov
sbb
js
loope
fistp
shl
lods
cmp
rcl
fcomp
ror
(bad)
cmp
push
cmps
stos
jmp
shr
mov
adc
call
(bad)
in
popa
mov
and
(bad)
dec
add
leave
push
and
jmp
fdivr
(bad)
(bad)
fistp
push
sbb
mov
loope
jo
pop
adc
fdiv
(bad)
jmp
pop
cmp
hlt
mov
(bad)
fdivr
mov
(bad)
dec
mov
dec
push
xor
jmp
push
call
rcl
rcr
xor
jmp
sub
out
(bad)
cmp
js
jmp
mov
ror
rcl
sbb
aam
fst
(bad)
fmul
cdq
pop
(bad)
(bad)
dec
test
mov
mov
mov
mov
rdmsr
mov
rcr
clc
(bad)
(bad)
(bad)
out
pop
dec
jp
pop
xchg
mov
das
sbb
js
sbb
shl
and
sar
push
and
aad
sbb
and
(bad)
nop
pop
xchg
cmps
(bad)
(bad)
(bad)
call
jmp
push
adc
sub
pop
dec
out
lods
fwait
pop
mov
(bad)
(bad)
mov
adc
lahf
fdiv
cmp
mov
xor
ds
add
lock
scas
jp
and
jmp
cmp
mov
std
enter
je
rol
cli
(bad)
mov
bound
rcl
loopne
out
rcl
mov
cli
fs
or
(bad)
(bad)
jmp
sub
jae
neg
aas
mov
(bad)
shl
loope
xchg
aad
(bad)
(bad)
(bad)
(bad)
jmp
rcpps
std
sub
or
repnz
jmp
mov
xchg
jae
xor
mov
sub
adc
push
std
mov
loope
pop
mov
rol
iret
nop
stc
rcl
(bad)
jg
sub
or
pop
push
ret
cmps
pop
pushf
(bad)
ficomp
push
add
cmps
out
imul
pop
push
cmp
and
push
dec
clc
lahf
inc
call
and
mov
sub
mov
dec
sbb
fdivrp
(bad)
(bad)
dec
pop
dec
mov
add
push
mov
pop
fidiv
retf
dec
addr16
xor
sub
sub
hlt
dec
pop
inc
out
dec
enter
(bad)
(bad)
jg
inc
daa
out
(bad)
retf
add
adc
call
and
sahf
or
jp
xchg
xlat
inc
ins
mov
jl
sbb
xor
jg
fs
mov
movs
cmps
inc
(bad)
jmp
in
dec
div
sub
cmp
jns
mov
stos
sub
push
int3
cmp
jp
dec
cmp
pop
cmp
sub
dec
dec
daa
push
pop
(bad)
mov
add
xchg
pop
add
push
jo
mov
lds
adc
sahf
(bad)
(bad)
(bad)
mov
aas
pop
lods
loopne
call
fbld
inc
mov
mov
pop
push
mov
cmps
add
and
xchg
inc
cld
jmp
dec
mov
shl
sar
adc
push
add
ror
out
sbb
and
ret
mov
cmp
cli
(bad)
dec
fdivr
retf
mov
jmp
mov
xchg
(bad)
jno
(bad)
cli
ins
mov
cmp
(bad)
and
sbb
push
sub
mov
xor
(bad)
call
push
mov
jmp
sahf
stos
or
add
push
jmp
out
sahf
dec
dec
fwait
inc
mov
clc
(bad)
(bad)
fisttp
xrelease
cmps
dec
call
xor
call
(bad)
(bad)
(bad)
dec
xor
out
pushf
jns
das
rcr
das
xchg
push
mov
dec
sbb
pop
into
dec
push
add
shl
fs
(bad)
push
sahf
dec
sar
mov
sbb
es
call
ficom
mov
aad
sub
hlt
push
sub
retf
adc
(bad)
call
dec
cmp
lods
icebp
xchg
div
jb
fistp
stos
rol
adc
out
aas
pop
push
fisub
xchg
(bad)
(bad)
push
(bad)
xor
dec
ss
movs
jmp
retf
enter
sar
fistp
scas
dec
fsubrp
xchg
call
sbb
scas
retf
es
mov
test
dec
mov
push
psubb
cld
(bad)
(bad)
out
shr
sbb
push
add
cmp
fnstenv
jbe
push
mov
mov
mov
inc
movs
mov
or
mov
loope
cmps
int3
inc
push
sbb
ja
bound
mov
(bad)
(bad)
jmp
rol
pop
and
sub
test
fnstcw
leave
mov
mov
cmp
scas
test
inc
push
push
push
into
dec
jle
test
sub
mov
sar
(bad)
call
call
mov
pop
test
dec
jne
sahf
test
test
mov
(bad)
jg
outs
out
stos
(bad)
dec
xor
imul
loop
enter
jbe
sub
mov
pop
pushf
jo
(bad)
dec
push
mov
xor
(bad)
adc
sub
mov
ror
or
ret
es
jns
inc
push
arpl
mov
pop
mov
mov
fcmovne
call
movs
outs
pop
cli
mov
fisub
jb
pop
ret
(bad)
(bad)
inc
lods
shl
mov
sub
dec
(bad)
(bad)
xchg
(bad)
push
xor
(bad)
(bad)
dec
mov
mov
sbb
or
out
js
jge
or
mov
rol
fbld
inc
adc
lods
mov
fnstcw
clc
test
std
mov
mov
dec
dec
lahf
cld
xor
dec
aaa
clc
fisttp
inc
xchg
scas
fstp
pop
sar
shr
push
call
(bad)
mov
pop
mov
(bad)
(bad)
(bad)
aas
sub
std
sar
ins
movs
dec
jl
sbb
test
xchg
rol
mov
call
cmp
sub
mov
jo
mov
xor
mov
jmp
pop
cmps
jl
in
pop
ror
mov
cli
jmp
daa
sbb
ss
xchg
scas
cmps
mov
dec
adc
dec
ret
push
ins
loopne
mov
jb
inc
ficomp
add
xor
loop
ret
pusha
dec
movs
(bad)
pop
cmc
jmp
es
fadd
(bad)
pop
jo
and
sub
(bad)
cdq
cdq
pushf
mov
call
add
or
sub
call
pop
rcl
stos
dec
cdq
stos
add
stos
(bad)
fcomip
call
ror
fild
push
pop
call
dec
dec
pop
(bad)
(bad)
dec
fisub
adc
icebp
and
xlat
into
sub
(bad)
mov
mov
dec
js
fisttp
call
ffree
mov
(bad)
or
popf
and
popf
pop
mov
push
dec
rcr
push
pop
cli
mov
lock
mov
mov
fcomip
jmp
ins
repz
cmp
rcr
(bad)
push
je
xchg
pop
fdivr
mov
mov
loopne
pop
or
xchg
xchg
stos
(bad)
lds
mov
es
push
push
daa
mov
adc
jbe
dec
and
sub
bound
retf
(bad)
jmp
xchg
lock
popa
fnstenv
stos
pop
cmp
and
call
mov
(bad)
jmp
stos
fild
int
lds
jo
es
dec
(bad)
pop
xchg
shl
iret
mov
es
test
les
out
and
jns
movsx
sbb
outs
rcl
call
pop
push
stc
pop
movs
pop
add
into
test
xor
ins
fmul
lock
xchg
out
fst
sbb
cli
fldenv
fild
pop
cli
enter
es
mov
or
dec
call
push
or
push
clc
mov
aam
movs
ss
push
loope
mov
jl
(bad)
jg
enter
or
sub
test
cmp
sub
icebp
sar
xchg
dec
add
sbb
xor
(bad)
(bad)
jg
cli
xor
leave
loop
or
je
push
jle
xor
outs
(bad)
pop
mov
mov
clc
mov
mov
mov
sar
data16
push
mov
out
popa
sahf
push
cmps
cmp
and
cmp
(bad)
jmp
xlat
sbb
in
scas
fcmovbe
pop
sub
pop
jecxz
lods
ins
aad
mov
pop
push
adc
jmp
clc
loope
fcomp
int
cmp
xor
cmp
ficomp
(bad)
mov
nop
(bad)
mov
jb
int3
push
add
pop
arpl
or
call
retfw
addr16
mov
sbb
jnp
push
cmp
jmp
pop
inc
movs
pop
add
pop
push
lods
dec
mov
xchg
sub
and
dec
adc
(bad)
(bad)
call
ficom
inc
lods
fsubr
loop
adc
cmp
arpl
fwait
mov
bound
push
cmp
(bad)
dec
call
dec
xlat
jle
imul
inc
adc
ja
inc
mov
mov
sbb
mov
aad
test
push
repz
pop
cli
push
mov
mov
inc
(bad)
lahf
ss
and
jmp
fcomp
mov
mov
imul
jmp
pop
icebp
mov
stc
rol
lods
sbb
scas
das
ror
xlat
mov
fcmovb
call
ja
dec
imul
inc
test
mov
cs
mov
call
mov
ret
and
not
cld
(bad)
call
ror
mov
retf
inc
pusha
cmp
pop
cs
mov
and
stos
and
sub
dec
pop
push
imul
push
lods
ret
add
cmps
push
sub
(bad)
retf
mov
div
cmps
dec
and
cmp
pop
popf
or
(bad)
(bad)
(bad)
jmp
add
push
loope
dec
loop
fstp
arpl
pop
push
cmp
fist
fistp
(bad)
sbb
mov
(bad)
(bad)
(bad)
call
jb
jb
push
push
lahf
js
inc
inc
lahf
pop
pop
sbb
sub
fistp
xor
inc
or
mov
std
push
add
mov
call
(bad)
mov
ret
pop
fsub
sub
mov
int
icebp
mov
cmp
pop
sub
xor
mov
cmps
jo
xchg
jecxz
ret
out
clc
push
ficomp
cmps
mov
stos
fxch
call
lock
jp
call
pop
push
mov
cmp
shl
scas
movs
cmps
jmp
ins
ds
pop
and
mov
cmp
or
(bad)
(bad)
fsubr
sbb
fwait
stos
mov
enter
sub
fmul
call
jmp
lds
test
daa
push
(bad)
(bad)
(bad)
mov
f2xm1
dec
jmp
test
lahf
loopne
and
push
pop
mov
cld
pop
lock
ret
popf
test
push
cli
call
xor
loop
jp
sbb
jmp
pop
jns
(bad)
retf
lods
inc
cld
das
clc
pop
cs
daa
dec
pushf
(bad)
sahf
sub
clc
jg
in
fnstcw
pop
paddd
sti
ror
push
or
pop
mov
clc
pop
std
add
and
lods
clc
(bad)
pop
mov
lea
out
pop
(bad)
cmp
cli
cs
neg
sbb
(bad)
(bad)
jmp
fs
inc
add
test
inc
lock
daa
xchg
cmp
outs
and
(bad)
cmp
mov
mov
xchg
mov
cld
(bad)
call
jl
jmp
jb
xchg
push
sbb
xor
popa
je
jnp
sbb
(bad)
(bad)
cmp
pop
fisubr
fwait
push
xchg
and
lahf
mov
mov
sbb
push
fnstenv
sbb
pop
xchg
mov
popf
fsubr
jo
sbb
call
push
and
sub
xor
sub
test
xchg
(bad)
pop
sahf
xlat
fdivrp
(bad)
call
mov
(bad)
je
cld
sbb
mov
mov
int
or
call
cld
mov
fsub
fbld
push
ret
add
xchg
shr
(bad)
(bad)
(bad)
call
fadd
jg
es
dec
mov
(bad)
pop
popf
rcr
mov
mov
add
(bad)
(bad)
(bad)
call
jl
push
pop
sar
jno
dec
pop
sbb
stos
call
mov
jl
xlat
aam
sbb
shr
data16
push
mov
jmp
push
mov
pop
fs
aad
jnp
mov
pusha
cmp
je
sbb
sub
dec
pop
clc
cld
jle
popf
sub
fild
fisttp
(bad)
(bad)
call
loope
icebp
jmp
das
idiv
fistp
and
mov
lods
xchg
out
pop
add
mov
fistp
and
outs
push
xor
sar
and
inc
xor
mov
clc
sbb
scas
nop
or
jmp
scas
mov
add
add
push
or
jo
mov
mov
call
repnz
jbe
push
cwde
stos
inc
mov
pop
adc
sub
and
int3
cs
(bad)
mov
fs
int
sbb
push
ins
call
mov
xchg
xchg
icebp
push
push
jle
cld
daa
mov
jp
stos
(bad)
jmp
add
ds
mov
pop
(bad)
mov
out
shl
stos
sbb
inc
call
fiadd
cmp
pop
ret
fimul
mov
pop
lods
retf
xchg
in
pushf
mov
sub
ss
call
inc
pop
cmp
sbb
stos
or
or
and
daa
adc
int
cmp
jmp
or
lods
ror
pop
mov
and
retf
push
loopne
stos
loopne
mov
push
dec
inc
cld
(bad)
call
mov
call
movs
xor
ins
imul
iret
adc
(bad)
dec
xchg
outs
push
retf
xor
movs
adc
mov
jo
dec
outs
ror
(bad)
(bad)
(bad)
(bad)
jmp
ficomp
call
in
arpl
sub
lds
mov
(bad)
push
cmp
ds
pop
lods
mov
pop
add
imul
ret
arpl
fdivr
jecxz
test
mov
retf
and
fld
inc
mov
push
stos
dec
je
xchg
dec
cld
push
aam
mov
in
ror
jg
push
inc
cs
sub
loopne
jmp
dec
std
bound
(bad)
(bad)
call
icebp
std
push
sub
sub
out
fs
pop
cmps
jmp
call
sub
sbb
dec
stos
imul
xchg
(bad)
(bad)
(bad)
sub
popa
std
arpl
pop
sub
and
inc
sbb
(bad)
(bad)
push
fst
jae
call
ror
daa
(bad)
iret
dec
adc
dec
cmps
mov
or
mov
stos
into
nop
push
pop
ret
or
(bad)
(bad)
jg
(bad)
mov
inc
fidiv
mov
fiadd
(bad)
(bad)
jg
mov
lock
sub
push
pop
lds
in
mov
rcr
xchg
mov
rcl
jle
cwde
shr
xchg
ror
aad
ins
jg
dec
sbb
and
mov
sub
xor
sub
ficom
shl
jg
xor
aam
fwait
scas
mov
jmp
rcr
test
pusha
jb
sub
push
out
(bad)
(bad)
(bad)
push
dec
cmps
lods
push
retf
cmps
out
inc
or
loopne
xchg
and
stos
fsubr
movs
jae
xor
push
jmp
xchg
sub
push
retf
adc
fst
(bad)
mov
pop
and
lds
xchg
mov
and
and
dec
retf
ins
shl
iret
in
pop
lock
or
fwait
mov
(bad)
(bad)
(bad)
fbld
and
sti
in
push
retf
inc
enter
pop
call
mov
xchg
cmc
(bad)
push
leave
jmp
sbb
mov
sub
dec
out
imul
ds
out
xchg
mov
pop
cli
and
(bad)
(bad)
inc
ins
jmp
push
push
retf
arpl
cli
out
fcomp
push
outs
cs
pop
into
xor
(bad)
call
inc
push
fistp
xor
mov
or
in
clc
bound
jbe
inc
aam
dec
cmps
mov
lods
sbb
sub
(bad)
in
pusha
dec
popa
call
jg
jecxz
scas
faddp
out
movs
fdivr
ins
fcomp
sub
je
(bad)
out
mov
shr
mov
push
cwde
(bad)
jmp
das
movs
mov
cli
ins
dec
fmul
push
dec
jp
mov
push
push
ret
jmp
retf
shl
adc
shl
enter
pusha
push
mov
dec
adc
jmp
mov
jmp
shr
sub
stos
sub
dec
cmp
push
pop
popf
or
cmp
sub
(bad)
(bad)
jmp
mov
push
shl
bound
dec
push
cwde
pop
stc
sub
icebp
sbb
imul
sub
icebp
or
adc
outs
push
aad
mov
sub
pop
mov
fidiv
js
mov
call
stos
push
push
call
scas
lock
fimul
shl
call
call
(bad)
sahf
hlt
and
leave
pop
(bad)
mov
das
dec
dec
clc
call
mov
lahf
push
test
and
push
(bad)
ds
jbe
icebp
int
dec
shl
sar
(bad)
call
bnd
mov
mov
sbb
mov
repnz
(bad)
(bad)
jmp
hlt
loopne
out
pop
jae
mov
repz
in
and
fsubr
cmp
test
sub
ror
pop
mov
pop
pusha
pop
fwait
sbb
sub
shl
fild
mov
into
ins
adc
adc
call
fistp
mov
jp
mov
mov
jo
mov
pop
or
(bad)
fild
std
stos
cmp
add
lods
ficom
(bad)
fstp
(bad)
push
cmc
dec
jb
in
push
pop
cmp
ror
mov
jmp
jb
pop
xchg
mov
cmp
push
pop
fs
push
icebp
nop
lock
inc
fcomp
pop
jle
or
cld
push
push
pop
mov
lea
rcr
pop
cmp
jnp
call
cmc
sbb
push
not
pop
pop
or
lods
adc
fidivr
js
test
mov
repz
fsubr
cli
cmp
(bad)
enter
stos
fwait
movs
aam
iret
sub
xlat
std
js
sbb
cmp
lods
lock
or
add
jmp
sbb
ror
mov
dec
(bad)
sar
push
fistp
(bad)
(bad)
jmp
stc
fcmovne
pop
push
ret
mov
jb
sbb
pop
mov
mov
retf
into
loopne
(bad)
(bad)
(bad)
sti
(bad)
pop
mov
mov
push
or
leave
out
clc
fldz
mov
mov
ja
push
std
outs
mov
scas
inc
loop
jmp
jmp
ret
inc
test
xchg
(bad)
mov
sbb
fld
dec
test
mov
shr
sub
pop
sbb
cmps
add
ret
pop
rol
(bad)
adc
sbb
sub
push
mov
jmp
mov
mov
add
call
sbb
mov
scas
jns
ds
test
(bad)
call
mov
loop
push
cs
mov
push
jle
(bad)
call
scas
leave
sti
pop
test
outs
jo
stc
fistp
rol
inc
enter
mov
jecxz
sub
inc
or
ret
mov
(bad)
(bad)
(bad)
jmp
push
ins
mov
jb
stc
jno
(bad)
fistp
das
or
xor
mov
add
jl
add
pop
scas
je
xchg
(bad)
jmp
jl
les
jne
lock
(bad)
mov
clc
add
je
jnp
xchg
fistp
(bad)
pop
daa
je
(bad)
repnz
push
call
pop
pop
ja
int
clc
cmp
jmp
inc
push
push
sbb
pop
mov
ror
fldlg2
rcr
mov
(bad)
mov
pop
icebp
mov
into
(bad)
fucomi
je
out
add
jmp
mov
jl
clc
(bad)
(bad)
sti
sbb
fnstcw
jo
(bad)
xchg
aam
mov
(bad)
or
icebp
(bad)
mov
dec
jp
sbb
mov
jno
mov
pop
or
das
mov
dec
es
xlat
pop
xchg
out
sub
adc
pop
retf
fs
hlt
scas
xor
in
pop
mov
lods
push
leave
fdivrp
(bad)
mov
lea
mov
outs
mov
push
aaa
pop
mov
clc
(bad)
(bad)
jmp
dec
mov
xchg
xchg
js
pushf
pop
cs
jge
cdq
fmul
cs
stos
or
bound
cmc
pop
or
dec
test
mov
loop
jae
add
xchg
mov
(bad)
(bad)
inc
xor
mov
cdq
pop
loope
push
push
cmp
fbstp
mov
mov
(bad)
inc
mov
cmc
mov
loop
xor
cmp
test
sar
(bad)
(bad)
jmp
nop
lods
iret
mov
sbb
pop
fcomi
loope
pusha
jp
fdiv
cmp
pop
(bad)
(bad)
(bad)
inc
jo
push
fisttp
aad
mov
push
(bad)
dec
imul
mov
xchg
pop
push
mov
jle
mov
je
nop
outs
test
popf
jo
jg
inc
std
xchg
lea
daa
(bad)
pop
and
imul
adc
xchg
xchg
adc
cmps
mov
jo
(bad)
int
jns
sahf
jo
fisttp
fmul
int
adc
jp
pop
rcl
scas
lods
ficomp
sub
scas
scas
clc
(bad)
popf
jg
or
sub
dec
out
jns
pusha
ret
sar
jmp
stos
pop
sbb
sub
pop
xor
jne
pusha
mov
push
call
ins
cld
pop
push
push
outs
mov
push
cwde
ins
leave
clc
js
(bad)
(bad)
(bad)
(bad)
in
push
pop
pushf
cmp
xchg
clts
aad
test
aas
sar
xchg
and
cmp
iret
stos
mov
fisubr
push
inc
cmps
xchg
cwde
jl
enter
call
(bad)
fmul
pop
(bad)
(bad)
mov
ins
fsub
ficom
popf
sbb
loop
cmp
lds
jo
shl
mov
imul
sbb
lds
add
mov
fcomp
dec
jmp
rcr
repnz
fimul
repz
jg
fld
sbb
mov
(bad)
hlt
out
dec
aas
adc
cmc
(bad)
fbstp
or
and
leave
pop
mov
mov
cmp
cmc
mov
stos
in
loopne
push
clc
call
dec
push
push
xchg
push
fstp
pop
sub
push
jnp
jmp
inc
mov
in
and
sti
loop
cmp
out
or
push
aam
retf
mov
push
adc
out
add
test
imul
(bad)
pop
mov
(bad)
rcr
dec
and
in
pop
push
inc
pop
jl
es
mov
cmps
stos
adc
loope
(bad)
(bad)
mov
loopne
arpl
mov
lahf
(bad)
iret
mov
js
push
enter
dec
ret
inc
gs
je
nop
mov
pop
mov
fild
fiadd
stos
dec
aaa
adc
stos
sar
jae
mov
push
lods
rol
les
mov
cli
(bad)
dec
(bad)
(bad)
stos
fucomp
mov
push
(bad)
js
outs
pop
pop
imul
jl
scas
cs
jb
call
fisttp
dec
adc
jmp
pop
and
aaa
mov
pop
js
imul
push
fisub
scas
(bad)
jg
inc
mov
shl
(bad)
sub
out
mov
fist
pop
and
retf
xchg
push
js
shr
xchg
push
add
(bad)
(bad)
(bad)
push
ins
push
js
scas
mov
mov
loope
ins
push
push
xor
loopne
and
mov
ffree
es
test
das
(bad)
(bad)
(bad)
mov
rcl
shr
mov
iret
rol
icebp
adc
jmp
fprem
pop
jae
and
mov
retf
call
pop
rcr
push
js
jmp
test
out
cli
(bad)
call
mov
fnstenv
mov
rcr
mov
fcom
adc
or
fsubr
dec
sub
mov
pop
call
mov
retf
mov
sbb
je
call
sbb
test
imul
dec
das
shl
mov
mov
mov
leave
aad
mov
leave
mov
pop
pop
sbb
cmps
(bad)
(bad)
(bad)
fisttp
retf
cdq
xlat
pop
jmp
movs
(bad)
jno
xchg
out
lea
push
push
rol
inc
daa
fst
aad
mov
xchg
mov
push
movs
mov
pop
(bad)
(bad)
jmp
pop
mov
inc
mov
mov
dec
cmp
dec
mov
pop
sti
loop
(bad)
call
mov
pop
fistp
mov
pop
xchg
and
mov
cmp
imul
mov
add
loop
pop
out
out
jle
retf
(bad)
call
das
daa
retf
repnz
push
lahf
sub
inc
call
add
jno
xor
push
(bad)
xchg
mov
fist
inc
jo
adc
pop
and
or
pop
jg
out
pusha
fcomp
fcomp
push
jp
cmp
jmp
std
popf
fdivr
jb
xor
or
je
ins
cmps
(bad)
(bad)
(bad)
inc
mov
adc
sar
fcom
das
sbb
push
nop
iret
(bad)
inc
jo
mov
cdq
pop
add
xchg
sub
in
or
xchg
(bad)
(bad)
(bad)
dec
sti
pop
daa
aas
sbb
cs
(bad)
mov
cmp
mov
pop
sar
sbb
inc
nop
xlat
mov
test
or
sahf
fld
jle
cmp
jo
hlt
adc
jne
mov
xor
out
pop
inc
push
adc
pop
xchg
icebp
jb
push
cld
adc
dec
je
in
mov
or
push
fnstenv
jmp
addr16
mov
mov
enter
outs
xor
sbb
mov
mov
popf
fstp
sbb
(bad)
pop
dec
jmp
dec
pop
rcr
in
add
ret
mov
repnz
dec
push
stos
into
sbb
or
movs
sahf
pop
test
dec
(bad)
jmp
out
xchg
cwde
push
fadd
test
inc
imul
ret
rcl
imul
outs
jmp
shl
dec
dec
loopne
inc
and
dec
in
cmps
test
inc
push
daa
jge
xchg
xlat
jns
call
outs
jo
sub
(bad)
(bad)
call
sub
das
cmps
cwde
sbb
mov
fs
rcl
test
clc
pop
cdq
mov
push
addr16
xchg
out
lods
sub
add
call
rcl
dec
adc
fnstcw
pop
loope
push
pushf
test
mov
sbb
(bad)
inc
push
(bad)
mov
sub
dec
(bad)
iret
clc
jae
adc
jge
push
mov
in
jbe
mov
pop
pop
lods
pop
mov
jmp
push
enter
dec
fldln2
mov
and
pop
iret
and
mov
push
push
fcos
(bad)
mov
pop
jl
fldpi
into
fs
jmp
arpl
rcr
jns
out
inc
mov
sub
(bad)
jmp
mov
or
mov
sti
mov
pop
sub
mov
(bad)
(bad)
mov
and
pop
rcr
sar
cli
and
sbb
pop
and
mov
jp
aaa
fwait
ret
sub
mov
cmp
out
je
int
push
mov
dec
mov
ja
js
cwde
push
mov
shl
sub
sub
scas
arpl
cli
aam
mov
sub
push
cli
bound
ffree
cmps
into
mov
inc
cwde
lods
fxtract
nop
cmps
sub
dec
pusha
push
sbb
jl
pop
daa
fdiv
jg
(bad)
call
push
pop
push
pusha
jg
pop
fwait
ret
lods
sbb
pop
sub
call
lock
lahf
cs
sbb
data16
fmul
fisubr
mov
mov
rcl
lods
xchg
pop
cli
push
sub
in
popf
fcomip
(bad)
call
pop
fwait
and
bound
fiadd
retf
jb
cli
push
call
aas
js
sbb
xor
mov
daa
jl
mov
pop
mov
loop
mov
(bad)
push
stos
movs
(bad)
inc
jb
repnz
fdivrp
fisttp
pop
lods
outs
pop
in
push
ret
scas
cmp
daa
mov
das
clc
(bad)
(bad)
fcomp
loope
outs
int
mov
bound
push
int
nop
sub
xchg
(bad)
dec
mov
mov
pop
and
inc
dec
ret
movs
xor
inc
jmp
cli
cmp
sub
mov
jecxz
pop
mov
dec
dec
push
push
leave
dec
call
jmp
sub
xchg
(bad)
mov
mov
mov
fs
ror
jle
fmul
sahf
xchg
fs
pushf
fdiv
retf
and
adc
icebp
loop
sbb
retf
cmp
ret
jg
sub
jmp
test
sub
jl
inc
mov
fcomp
test
adc
mov
clc
push
fstp
dec
fsubr
mov
sub
fdivr
add
pop
cmp
mov
(bad)
in
frstor
loop
(bad)
ja
repnz
(bad)
sub
dec
mov
mov
push
fist
sbb
mov
xchg
pop
(bad)
outs
daa
es
sbb
(bad)
jg
movs
into
adc
popf
mov
mov
mov
pop
(bad)
and
inc
push
aaa
je
pop
pushf
mov
push
imul
sub
cmp
fimul
add
lock
sar
pop
mov
dec
mov
cwde
mov
call
loope
jmp
mov
(bad)
sbb
push
mov
lahf
and
call
sti
and
sahf
test
jae
mov
sub
or
add
retf
sar
data16
outs
sub
mov
xchg
loop
scas
xchg
js
mov
cmp
push
pop
repnz
out
inc
lea
out
push
jge
xor
jg
inc
lds
das
xchg
in
addr16
into
mov
mov
mov
fsub
xchg
test
call
iret
cs
test
ss
shl
mov
xor
lods
mov
icebp
lock
enter
jo
jbe
ins
sub
jbe
or
int
sub
scas
cmc
inc
ins
pop
jnp
jl
cmp
inc
sub
shl
(bad)
pop
or
mov
xor
cmp
outs
push
sbb
xchg
ins
loope
cwde
dec
mov
aaa
cld
call
sbb
sbb
jg
pop
sbb
mov
xchg
icebp
(bad)
ds
mov
push
cmp
in
aad
inc
call
pusha
test
int
ror
mov
fs
(bad)
ja
rcl
mov
stos
xlat
xor
push
dec
push
les
pop
jnp
fidivr
out
inc
fisttp
sub
pop
jne
lods
(bad)
(bad)
(bad)
(bad)
out
xchg
aad
cmps
jb
pop
(bad)
mov
dec
pushf
daa
sub
cmps
(bad)
int
sub
inc
xchg
(bad)
call
sub
cmp
jmp
inc
or
mov
xlat
or
(bad)
call
mov
cmp
fld
and
jmp
mov
sti
pop
int3
pop
(bad)
push
lods
xor
leave
ror
pop
(bad)
call
int
das
and
jg
cli
cmp
mov
jns
push
or
test
mov
inc
sub
mov
stos
ficom
pop
cmps
call
jmp
pop
dec
xor
sub
(bad)
(bad)
(bad)
mov
pop
outs
bnd
adc
mov
repnz
retf
xor
pop
cmp
ret
jno
pop
mov
mov
push
xchg
(bad)
(bad)
inc
test
ja
jne
(bad)
cmp
and
mov
cmp
pusha
neg
pop
cmc
pushf
jg
das
movs
pop
retf
test
(bad)
(bad)
jmp
bound
clc
xchg
(bad)
sub
imul
jns
(bad)
(bad)
inc
sbb
mov
dec
cld
push
int
sar
fcom
repnz
pop
jmp
(bad)
(bad)
(bad)
jmp
mov
mov
retf
int3
mov
and
cs
(bad)
call
sbb
sub
push
cmp
leave
enter
int3
fwait
pop
test
cli
(bad)
(bad)
(bad)
std
cld
in
mov
out
pop
push
lahf
mov
cld
mov
cmp
sar
push
hlt
adc
fist
mov
(bad)
cmp
jmp
xchg
pushf
out
push
test
bts
inc
stos
stos
xor
dec
push
pop
retf
dec
ss
std
cli
(bad)
(bad)
call
push
pop
cdq
adc
pop
loop
pop
mov
inc
mov
lods
jbe
push
inc
pop
inc
ins
(bad)
gs
xchg
mov
pop
jmp
xor
mov
fdivr
jnp
retf
dec
leave
adc
out
dec
jmp
pop
xor
xchg
fwait
imul
outs
(bad)
mov
pop
cmc
cmps
add
jg
hlt
(bad)
fcomp
stos
frstor
call
pop
mov
push
pop
stc
jb
mov
sbb
mov
sbb
in
pop
mov
ficomp
outs
(bad)
(bad)
(bad)
(bad)
push
mov
stos
cmps
cmps
mov
in
aam
(bad)
loop
mov
mov
dec
(bad)
out
scas
rol
dec
js
xchg
fadd
(bad)
cmp
mov
ja
pop
fst
iret
ds
mov
push
sahf
mov
sub
in
jg
dec
cs
and
mov
ins
lock
repnz
sbb
cli
stos
call
pop
jecxz
cwde
rcr
jo
call
jl
pop
fstp
mov
cmp
jg
push
mov
pop
mov
(bad)
aaa
(bad)
leave
add
out
inc
es
(bad)
inc
into
adc
out
sti
pop
add
inc
fcmovnbe
or
mov
pop
xor
sub
test
mov
pop
nop
mov
loopne
jl
sti
test
std
(bad)
jmp
icebp
out
mov
retf
add
imul
out
push
xchg
jmp
out
xlat
out
shl
rcr
mov
push
jmp
imul
in
mov
jle
call
test
(bad)
(bad)
push
(bad)
jmp
ja
fwait
mov
pop
lahf
loope
and
mov
ret
int
pop
out
or
(bad)
in
mov
lahf
sub
fisttp
shl
retf
imul
pop
mov
pop
sub
inc
sar
sub
fisubr
inc
mov
ret
jno
std
(bad)
jmp
retf
fimul
movs
inc
pop
(bad)
fstp
vmovdqu
(bad)
es
popa
movs
out
jo
jmp
dec
pop
(bad)
pusha
mov
fisubr
add
hlt
(bad)
(bad)
(bad)
fild
call
(bad)
loop
push
iret
lods
je
sub
dec
and
mov
data16
jmp
xor
das
(bad)
mov
push
(bad)
cs
push
mov
(bad)
js
imul
sub
cwde
push
das
(bad)
(bad)
(bad)
jmp
mov
cli
aad
fnstcw
xor
pop
(bad)
out
(bad)
call
push
fs
fsub
cmp
and
xlat
(bad)
(bad)
inc
inc
push
fstp
add
push
push
loope
xor
sub
out
or
(bad)
jmp
push
test
inc
or
cmp
bound
leave
cli
pop
jp
fcomp
pop
js
jp
loop
pop
outs
call
xchg
sub
scas
pop
in
fistp
(bad)
out
push
movs
sub
sub
fdivr
jns
ins
fbstp
cld
(bad)
call
pop
jp
adc
pushf
mov
fstp
mov
das
cli
xchg
mov
mov
call
fisubr
sub
inc
movs
jl
rol
into
mov
loope
(bad)
jg
jmp
(bad)
dec
bound
sti
cmp
jmp
jecxz
(bad)
leave
inc
pop
bound
aam
jg
dec
(bad)
int
add
push
daa
push
sbb
shl
sub
pop
cmp
out
sub
mov
ffreep
mov
sar
pop
es
xor
or
mov
mov
mov
retf
push
(bad)
(bad)
jg
sub
movs
ret
mov
xor
dec
and
sbb
mov
inc
cmp
out
adc
xchg
repnz
js
daa
sub
and
jl
mov
fcom
call
fadd
(bad)
(bad)
jmp
lock
sub
mov
cli
dec
fwait
jo
jp
ficom
js
bound
mov
mov
xor
(bad)
(bad)
mov
mov
jns
daa
pop
jae
sub
mov
lods
fmul
lahf
sbb
(bad)
(bad)
(bad)
(bad)
jo
stc
ror
xor
jp
mov
cs
fidiv
sar
mov
push
movs
cld
(bad)
(bad)
jmp
fwait
add
mov
push
aam
loop
xchg
(bad)
call
pop
shl
jecxz
mov
sub
ret
cmc
xor
cmp
fprem
(bad)
(bad)
out
sbb
pop
cld
pop
add
sub
inc
or
jmp
jp
cmps
inc
(bad)
(bad)
mov
adc
shr
(bad)
mov
pop
jae
or
mov
pop
enter
pusha
sbb
jl
mov
cmp
mov
push
mov
jg
fs
repnz
cmps
out
(bad)
(bad)
mov
cli
lds
push
(bad)
nop
loope
xor
pop
scas
sbb
lods
xchg
mov
mov
hlt
pop
scas
and
(bad)
jmp
add
clc
imul
fsubr
sub
(bad)
fdiv
mov
clc
add
test
and
out
cmps
int3
xor
push
sbb
popa
pop
add
mov
into
fadd
pop
mov
sbb
je
sub
cmp
push
mov
std
push
sbb
sti
lods
cld
sbb
pop
call
pop
data16
jb
rcl
(bad)
mov
lss
pop
repz
pusha
xor
push
fisubr
xchg
bound
lods
jmp
loope
bound
cmc
push
stos
mov
std
pop
jl
jmp
add
sub
(bad)
repnz
fist
push
(bad)
inc
cwde
mov
mov
pop
mov
jmp
stos
pop
pop
aam
out
mov
fdiv
xchg
hlt
cld
(bad)
xchg
sbb
sbb
fdiv
xchg
pop
inc
dec
jmp
cmp
cs
pop
mov
mov
stos
cli
shl
out
fimul
mov
cmp
push
sub
cld
jmp
cmp
jp
dec
jl
inc
das
fisttp
fwait
inc
leave
add
push
and
or
cdq
out
rol
mov
fisttp
cbw
cli
sbb
repz
pop
(bad)
(bad)
(bad)
dec
pop
pop
aad
xor
sub
pop
es
pop
mov
stos
adc
lods
loop
pop
mov
call
sbb
inc
stos
xchg
dec
sub
or
mov
popf
ins
shr
ins
test
int
hlt
pop
cmc
xchg
daa
xlat
mov
stos
cdq
mov
cmp
sar
jmp
push
rcr
jl
retf
fidivr
(bad)
(bad)
(bad)
call
ja
shl
mov
mov
movs
jns
xchg
lods
fsubr
ds
sub
mov
ds
pop
cmps
retf
push
ja
sub
pop
test
shl
jge
mov
cli
mov
ins
sub
enter
inc
aad
(bad)
dec
mov
(bad)
pop
(bad)
(bad)
mov
retf
mov
jp
imul
hlt
mov
(bad)
out
push
cs
(bad)
(bad)
jmp
cmp
movs
push
mov
shl
daa
call
call
mov
imul
adc
sbb
cmps
popa
cmps
(bad)
scas
fst
mov
and
rol
jecxz
daa
and
mov
dec
or
mov
movs
and
movs
mov
(bad)
push
sbb
ins
cmp
outs
shr
enter
in
pusha
push
lea
mov
mov
rol
push
rcr
sbb
sub
or
outs
out
int
or
and
fldenv
jae
ja
jmp
push
pushf
daa
push
lahf
(bad)
rep
jmp
repz
stos
jle
sub
mov
inc
push
fisubr
cld
bound
into
fcmove
int
jmp
fcmove
imul
xor
fcom
dec
(bad)
jmp
(bad)
fdivr
pop
add
cmp
(bad)
(bad)
(bad)
mov
sbb
and
fidivr
pop
icebp
sub
pop
xchg
sub
(bad)
dec
loop
pop
sar
push
mov
cld
das
push
cmp
test
and
mov
call
ret
cmp
xchg
push
push
cmp
push
(bad)
adc
int
jnp
mov
cmp
pop
pop
out
mov
aaa
outs
cmp
mov
mov
not
sbb
mov
(bad)
mov
pop
mov
outs
pop
push
retf
mov
push
cmp
mov
idiv
in
push
mov
and
rcr
xchg
mov
xor
xchg
sub
xchg
fwait
out
dec
mov
sub
and
aas
push
das
xor
lods
push
mov
(bad)
icebp
sub
push
pop
mov
mov
pop
pop
mov
cmps
adc
das
push
cmp
test
mov
pminsw
adc
push
idiv
mov
cld
enter
fwait
pop
addr16
and
js
in
out
dec
xchg
pop
cmp
mov
cmp
or
jo
and
pop
or
mov
xchg
cmp
pop
retf
cdq
mov
push
enter
shr
and
mov
push
int3
and
enter
retf
cmp
loop
xchg
fdivr
jns
das
and
mov
dec
mov
jae
cmp
push
call
test
mov
cs
shr
mov
bound
sub
mov
jl
sbb
push
sbb
pop
pop
mov
sub
push
in
sub
mov
jno
xchg
(bad)
mov
in
jl
mov
or
retf
aas
enter
pop
je
stc
les
adc
fwait
jb
sar
rcr
jo
mov
sub
stos
int3
ja
mov
pushf
jmp
jp
fistp
jp
std
adc
sbb
dec
and
pop
mov
add
(bad)
call
mov
add
pushf
enter
push
loopne
loop
aaa
mov
add
jo
mov
loope
jg
push
mov
bound
mov
cli
ins
mov
pop
pushf
fidivr
mov
(bad)
(bad)
(bad)
jns
mov
test
pusha
cmc
cmps
dec
dec
sbb
mov
sbb
aad
repz
jmp
(bad)
(bad)
fistp
mov
jp
rol
fsubr
jecxz
bound
mov
or
pop
dec
fcomp
fbstp
adc
out
aam
fcomp
out
cmp
sar
or
pop
fimul
mov
mov
mov
call
cmp
pop
jl
pusha
jb
ftst
pop
pop
cdq
loope
add
lods
mov
(bad)
(bad)
(bad)
mov
shl
mov
sub
fistp
jecxz
iret
fwait
pop
xchg
mov
fisubr
sub
fcomp
pop
and
cli
(bad)
(bad)
jg
rcr
pusha
mov
iret
fdivr
jle
sar
out
fdivr
push
(bad)
inc
sub
jnp
pop
int
out
sub
dec
enter
pusha
mov
retf
add
jmp
pop
lods
clc
enter
das
sbb
pop
mov
ins
xchg
(bad)
fdivr
imul
je
lahf
fiadd
xor
mov
jne
lahf
push
push
adc
mov
add
sahf
and
mov
xchg
out
dec
mov
data16
sbb
mov
pop
dec
cmp
mov
lahf
loop
inc
std
scas
aam
sar
sub
adc
cmp
(bad)
out
cli
push
jl
mov
mov
pop
(bad)
pusha
cmp
pop
mov
sbb
and
clc
stos
jmp
test
mov
(bad)
ds
js
ret
(bad)
jg
sbb
mov
aad
cmp
sub
sbb
or
push
test
cmp
mov
cmp
(bad)
mov
mov
fnstsw
pop
mov
and
or
repnz
push
sub
xrelease
(bad)
(bad)
(bad)
(bad)
(bad)
in
dec
leave
pop
test
aam
mov
(bad)
jp
jae
cmps
retf
mov
(bad)
jmp
xchg
fmul
test
mov
mov
mov
in
(bad)
fistp
shl
mov
test
inc
mov
cmp
jmp
popf
cli
ror
inc
(bad)
mov
aad
pop
and
mov
cmps
(bad)
mov
je
scas
cli
call
repnz
leave
mov
dec
cmp
leave
or
jg
cld
stc
fucomp
jecxz
mov
(bad)
fimul
je
fs
out
enter
dec
push
movs
mov
les
fidivr
fmulp
push
ffree
jle
cld
xor
xchg
jle
shr
ss
fstp
cmp
iret
mov
adc
pop
(bad)
(bad)
(bad)
jmp
sbb
or
aad
add
mov
sahf
sub
mov
inc
mov
(bad)
call
push
dec
mov
fnstcw
out
xor
sub
add
retf
and
mov
mov
mov
or
ret
cli
iret
xlat
mov
(bad)
mov
fcom
dec
adc
push
movs
push
rcr
add
dec
mov
adc
pop
out
mov
out
(bad)
clc
xor
rol
jmp
cs
sbb
add
or
dec
push
jno
stos
xor
dec
aad
mov
push
(bad)
(bad)
(bad)
push
mov
xchg
push
ins
mov
mov
jle
das
fidiv
cld
lds
push
xor
push
sbb
and
fdiv
sbb
mov
(bad)
into
mov
sbb
mov
push
daa
xor
jne
movs
xlat
mov
int3
out
push
xchg
cmp
push
stc
js
cli
call
(bad)
es
dec
fsub
in
rcr
mov
jmp
or
sbb
loop
xchg
cmps
mov
popa
cli
int
mov
mov
sub
sbb
pop
cwde
push
cmp
cwde
push
sar
mov
mov
movs
daa
retf
jmp
rol
mov
inc
loop
call
sti
sbb
cli
(bad)
(bad)
(bad)
jl
jl
pusha
mov
xchg
sbb
mov
xchg
imul
jp
cmp
xor
fisubr
sar
xor
(bad)
call
lds
(bad)
dec
and
(bad)
dec
xchg
(bad)
jmp
sbb
mov
pop
pop
stos
je
and
pop
sub
(bad)
(bad)
push
fstp
mov
bnd
xchg
dec
loop
pop
mov
call
fild
(bad)
call
sbb
scas
jne
adc
pop
aad
mov
jo
and
pop
push
fcmovnb
shr
(bad)
(bad)
(bad)
fst
(bad)
bound
stos
mov
mov
mov
sub
shr
sbb
dec
(bad)
(bad)
(bad)
jmp
(bad)
leave
push
ror
into
fimul
push
push
and
adc
call
(bad)
call
jae
or
test
pop
call
or
push
xchg
daa
jg
dec
cld
add
sub
movs
into
jle
sub
and
nop
lock
push
into
mov
xor
fs
inc
jmp
mov
push
rol
push
(bad)
jmp
cli
push
lods
fstp
(bad)
call
dec
es
sub
call
(bad)
cs
(bad)
push
jg
(bad)
call
inc
jo
cld
push
pop
leave
movs
lods
rcr
xchg
leave
push
sbb
frstor
sub
(bad)
jmp
sub
imul
(bad)
or
lods
(bad)
fild
jmp
and
push
fild
add
push
mov
das
fidivr
fcom
add
ins
int
(bad)
(bad)
jmp
jecxz
popa
bndstx
xchg
stos
fmul
dec
jbe
mov
and
ror
xchg
sbb
inc
push
fmul
push
mov
dec
dec
and
mov
pop
pop
fs
stos
cs
ins
push
mov
push
sub
bound
xchg
mov
cli
dec
in
inc
shl
jmp
(bad)
(bad)
jmp
mov
cdq
leave
mov
push
cdq
test
pop
(bad)
(bad)
jmp
leave
mov
dec
ret
mov
push
popf
lea
dec
sbb
call
dec
and
adc
rcl
xor
test
mov
cmp
jbe
sub
mov
dec
push
push
cld
mov
ins
mov
add
jmp
int3
inc
jno
mov
retf
or
hlt
or
xchg
in
xor
mov
fisubr
add
or
push
stos
pop
test
inc
retf
cmps
and
cmp
adc
mov
icebp
(bad)
mov
mov
stos
xor
in
call
mov
mov
jle
jle
jae
mov
xor
pop
pop
mov
stos
push
scas
mov
push
mov
push
mov
(bad)
mov
lahf
mov
ficomp
clc
call
fcom
sub
mov
xor
mov
cwde
jb
fild
or
pop
ins
(bad)
(bad)
(bad)
jmp
stos
dec
dec
jge
stos
enter
outs
retf
stos
aaa
adc
sub
or
pop
mov
dec
pop
cmp
xchg
sub
or
loope
dec
jecxz
loopne
(bad)
(bad)
mov
btc
call
(bad)
cmps
xchg
jb
mov
dec
fwait
jmp
lock
stos
aas
retf
test
inc
(bad)
dec
lods
add
mov
jp
sbb
scas
push
mov
pop
out
push
or
mov
jnp
adc
(bad)
(bad)
(bad)
jg
imul
dec
dec
sub
scas
bswap
pop
sbb
test
stos
into
inc
mov
stos
(bad)
(bad)
(bad)
(bad)
faddp
(bad)
adc
or
cs
cwde
or
push
pop
call
or
cmps
shl
enter
cli
jmp
out
repnz
loop
cmp
inc
(bad)
(bad)
(bad)
jmp
or
and
push
ret
mov
imul
pop
and
hlt
(bad)
(bad)
dec
test
add
dec
add
push
sub
dec
neg
std
call
sahf
pop
pop
xor
mov
scas
out
call
ja
(bad)
jmp
hlt
jmp
fist
(bad)
(bad)
(bad)
call
das
movs
ins
mov
xchg
mov
mov
imul
ret
cmps
sahf
loop
lods
icebp
stc
sub
(bad)
(bad)
jmp
sub
jmp
fcompp
cs
test
mov
js
sti
outs
jbe
push
jmp
cld
(bad)
push
jle
pop
add
pop
xor
pusha
dec
scas
out
sub
xchg
outs
mov
stos
js
and
jb
or
fnstenv
shl
and
jmp
out
fisttp
jp
xor
ret
retf
loope
jnp
call
jmp
sub
(bad)
jmp
das
dec
fldcw
fwait
leave
dec
(bad)
mov
lods
push
sbb
mov
das
xchg
adc
jnp
sbb
push
mov
js
cmps
dec
mov
test
or
ds
add
popf
repnz
test
(bad)
(bad)
jmp
aam
add
and
mov
dec
mov
sub
loop
call
mov
mov
and
movs
mov
mov
and
(bad)
loopne
inc
xchg
retf
xor
and
pop
fbld
dec
mov
lahf
cld
push
add
sahf
xchg
fcmovnu
mov
inc
call
add
mov
mov
sbb
mov
dec
xchg
repnz
mov
pusha
and
sub
cmp
(bad)
jmp
cmp
jb
ins
test
iret
out
daa
sub
push
dec
pusha
pusha
ret
add
je
(bad)
(bad)
call
fadd
sahf
push
enter
lahf
sbb
es
xor
sub
iret
bswap
push
(bad)
scas
int
call
daa
jp
sub
sub
cld
mov
or
mov
sub
(bad)
mov
test
lock
test
xor
xchg
aaa
xchg
and
cmp
xchg
jnp
jmp
adc
call
push
cmp
push
fcomip
add
dec
pop
cdq
or
addr16
mov
(bad)
stos
fild
dec
or
cmp
pop
sub
mov
mov
outs
push
dec
push
outs
scas
adc
add
scas
call
cli
(bad)
(bad)
std
fmul
cmp
ds
mov
outs
dec
les
movs
add
(bad)
inc
jae
fild
js
sub
fcmovu
js
jbe
pop
enter
es
ins
lea
push
pop
mov
cmp
adc
push
or
sub
lods
lods
imul
mov
(bad)
(bad)
call
sahf
sbb
mov
pop
mov
mov
call
dec
cmp
jmp
pop
sbb
dec
dec
sbb
mov
mov
icebp
push
xchg
lods
mov
fsin
mov
inc
pop
or
es
jmp
popa
mov
neg
ret
cld
retf
loop
inc
imul
mov
out
(bad)
(bad)
inc
sub
sbb
pop
mov
adc
mov
aad
(bad)
xlat
pop
dec
mov
pusha
and
mov
fidiv
inc
(bad)
jns
sbb
lods
(bad)
(bad)
jmp
test
stos
pop
ds
mov
and
pop
cmp
outs
jp
sub
fcomi
xor
iret
(bad)
call
jle
jbe
ss
nop
fisub
(bad)
test
push
mov
(bad)
(bad)
(bad)
(bad)
jnp
fnstsw
ret
cwde
loopne
loopne
ret
xor
popf
(bad)
push
test
sar
lods
int3
and
fwait
shr
cmp
fdiv
call
(bad)
xchg
(bad)
xor
push
cmovle
lea
fwait
js
scas
add
cmp
sbb
push
cld
push
mov
in
mov
cmps
sbb
in
xor
jnp
ret
jb
adc
inc
icebp
(bad)
(bad)
fist
or
push
mov
xchg
clc
stc
cli
pop
out
bswap
lahf
jle
shl
add
test
ds
add
(bad)
ds
sti
jg
add
jl
movs
or
jecxz
add
leave
fwait
or
(bad)
xlat
gs
(bad)
(bad)
(bad)
push
pop
and
jecxz
push
jg
lods
dec
xor
dec
pop
out
into
enter
dec
sub
mov
stos
leave
push
xchg
(bad)
sbb
sahf
xchg
push
sbb
jge
fdivr
mov
(bad)
(bad)
push
pop
mov
ror
push
ret
sbb
mov
(bad)
popf
pop
lods
loopne
in
into
icebp
icebp
xor
mov
movs
dec
(bad)
rcl
xor
xchg
sub
popa
clc
(bad)
jmp
push
xchg
mov
inc
data16
pop
sub
into
mov
sbb
push
mov
sub
cld
sbb
int
xchg
les
cmp
lods
aas
pop
xlat
push
repz
sbb
pop
cwde
leave
push
adc
pop
jmp
loopne
mov
or
sbb
in
mov
inc
push
aaa
std
ss
dec
mov
inc
leave
sbb
out
mov
(bad)
stc
push
jb
aaa
xor
(bad)
call
jae
arpl
sbb
dec
lods
mov
pop
dec
sub
and
call
(bad)
(bad)
(bad)
(bad)
mov
pop
sbb
cs
xlat
stos
lahf
(bad)
xlat
inc
xor
(bad)
(bad)
(bad)
fdivr
mov
sbb
cs
sbb
inc
cmp
sbb
inc
pop
pop
xor
das
cli
(bad)
std
mov
xchg
rol
sbb
pop
stc
outs
xor
leave
adc
cs
mov
pop
das
inc
fs
enter
(bad)
(bad)
(bad)
(bad)
fcmovnu
ds
test
cli
jno
pop
mov
sub
mov
call
int3
cmps
dec
je
(bad)
dec
rol
retf
test
call
sbb
add
xchg
sub
push
mov
mov
sbb
jne
pop
mov
xor
mov
std
call
call
sbb
mov
dec
xchg
pop
dec
sahf
cld
dec
add
xchg
loop
ret
xor
adc
pop
(bad)
js
mov
psrlq
imul
add
shl
xor
add
int
inc
push
mov
icebp
mov
rcl
xor
arpl
arpl
fimul
es
push
push
mov
dec
sbb
stos
hlt
jmp
mov
test
push
pop
sbb
sar
bound
xchg
fs
push
test
test
cmp
dec
mov
jecxz
leave
into
aas
lods
jmp
fmul
mov
dec
and
in
cmp
mov
(bad)
(bad)
(bad)
jmp
ins
cmp
ror
out
addr16
mov
(bad)
std
ror
fbld
cli
(bad)
sti
lahf
inc
in
mov
jmp
sub
and
jmp
xchg
clc
add
or
aam
popf
aad
ret
mov
sub
xchg
ds
push
mov
in
(bad)
xchg
out
push
dec
inc
mov
(bad)
(bad)
dec
scas
and
jno
ror
scas
addr16
lods
fdiv
jg
ret
pop
jb
(bad)
(bad)
call
mov
les
mov
sub
jg
repnz
lahf
pop
fimul
jmp
dec
out
add
lahf
lock
and
mov
and
xchg
lahf
dec
daa
mov
cdq
inc
test
inc
or
outs
bound
push
outs
xor
pop
pop
js
cdq
mov
or
mov
daa
outs
sar
pop
pop
or
dec
lods
in
(bad)
(bad)
(bad)
dec
and
retf
mov
out
jp
cmp
jbe
lods
imul
cli
cmps
xor
and
cmps
fimul
and
in
mov
push
stos
arpl
fistp
(bad)
sub
xor
add
loop
mov
add
jmp
jnp
call
or
mov
fcomp
pop
cmp
call
jecxz
(bad)
js
js
push
in
scas
dec
pop
fldenv
xchg
fstp
mov
(bad)
fld
push
mov
cwde
fwait
leave
mov
sbb
dec
mov
jmp
imul
dec
fisub
int
cmp
fisttp
das
sub
fwait
add
sahf
retf
out
lea
(bad)
(bad)
in
sbb
pop
pop
mov
fld
xchg
fistp
dec
xchg
pusha
(bad)
(bad)
(bad)
jmp
in
and
mov
retf
mov
push
fs
arpl
inc
push
sbb
pop
pop
adc
mov
(bad)
aaa
add
mov
std
push
inc
scas
rcr
test
retf
fdiv
inc
outs
aas
clc
(bad)
jg
xor
lock
not
jmp
adc
repnz
(bad)
mov
push
push
add
pop
cld
outs
pop
xchg
fmul
(bad)
out
push
push
xor
jmp
mov
mov
pop
cmc
(bad)
in
call
(bad)
push
inc
dec
cmps
retf
mov
mov
mov
(bad)
call
scas
mov
mov
cli
scas
cli
mov
mov
sti
sub
or
and
out
or
aaa
xor
imul
jge
clc
jg
push
xchg
inc
xchg
mov
call
add
pop
dec
push
or
aam
loope
aad
(bad)
out
pop
or
enter
dec
mov
dec
fsub
retf
int
inc
dec
enter
mov
stos
jp
xor
lods
(bad)
jmp
stos
lods
pop
push
lods
dec
mov
ds
cld
jg
jg
cmps
pop
dec
pop
cli
push
inc
mov
stos
cmps
arpl
ins
fcom
jg
ins
push
pop
shl
(bad)
jmp
dec
fidivr
pop
sub
and
pop
cmps
or
dec
(bad)
fisttp
add
dec
pop
sub
mov
xchg
add
lods
pop
out
dec
in
xchg
push
cmps
pop
inc
mov
hlt
push
or
je
push
adc
mov
in
int
fadd
lods
call
test
fs
push
inc
pop
data16
loopne
inc
scas
fld
sbb
fcomip
fild
pusha
sbb
scas
dec
pop
scas
inc
mov
dec
pop
idiv
out
mov
inc
movs
pop
inc
push
xor
adc
mov
fdivr
push
jge
and
mov
(bad)
fisttp
(bad)
aaa
cmp
pop
lods
dec
pop
(bad)
ins
adc
das
xchg
scas
(bad)
rcr
cld
(bad)
(bad)
call
scas
cld
pop
test
cmp
and
es
es
loope
loopne
mov
pop
or
(bad)
jecxz
loop
in
(bad)
jmp
sub
jl
sar
push
pushf
retf
jp
outs
call
retf
xchg
leave
adc
or
dec
shr
(bad)
call
xor
cmps
test
pop
inc
ins
jbe
inc
cld
ins
inc
test
dec
fs
dec
pop
outs
lods
pop
inc
movs
pop
je
imul
imul
nop
pop
addr16
pop
xchg
sbb
es
xor
ja
outs
clc
mov
sub
push
nop
sbb
out
inc
pop
jmp
inc
pop
call
inc
pop
jmp
inc
and
push
loope
in
nop
push
or
adc
loop
pop
ror
scas
inc
push
sub
pop
dec
dec
push
out
push
xor
ret
push
adc
popa
pop
mov
mov
sub
mov
push
mov
outs
sub
jb
lock
push
dec
popf
nop
add
pusha
(bad)
pusha
lods
push
cs
xlat
inc
xor
adc
pop
data16
pop
dec
scas
push
out
aaa
cld
(bad)
inc
sub
push
add
inc
inc
push
scas
push
daa
pop
pusha
xchg
ja
cmps
(bad)
lock
mov
mov
and
adc
ins
ror
dec
stos
loop
sub
lahf
jmp
in
out
and
jge
sbb
hlt
jbe
imul
mov
div
ss
sub
in
data16
pusha
jb
jecxz
ins
sub
fistp
push
out
adc
dec
sub
ret
cmp
jae
(bad)
stc
out
int
vminpd
cs
lea
push
jmp
movs
mov
mov
mov
(bad)
(bad)
sti
std
imul
int
pop
(bad)
movs
and
cmps
add
pop
loopne
and
or
adc
call
mov
mov
cld
fild
(bad)
xor
icebp
mov
dec
ins
cld
xchg
outs
jle
pop
outs
scas
pop
sti
jno
aad
ficomp
add
adc
out
sub
ins
jmp
jmp
fst
adc
fdivr
cmps
sub
mov
sbb
mov
cmc
adc
mov
sub
ja
xchg
push
pop
scas
dec
pop
(bad)
or
imul
cdq
les
inc
pop
sub
pop
pop
and
lea
sub
addr16
xchg
inc
inc
es
loope
dec
dec
jg
jmp
rcr
cmp
push
ins
pop
(bad)
out
ja
ins
or
retf
ficomp
inc
add
popa
mov
cmp
mov
inc
hlt
sub
es
xchg
xor
xor
dec
(bad)
fwait
inc
cmp
retf
addr16
ret
out
js
dec
sub
sahf
pop
sbb
(bad)
ja
push
in
rcl
or
inc
push
out
pop
rcr
adc
jl
inc
ins
jmp
clc
pop
sub
add
dec
xchg
jnp
(bad)
xchg
movs
jp
inc
mov
add
add
call
rcl
into
outs
pop
ins
scas
pop
push
xor
stos
pop
lods
rcl
or
outs
test
lock
xchg
inc
jno
dec
mov
test
xchg
jne
adc
dec
fs
mov
pusha
les
inc
(bad)
dec
push
push
movs
sub
in
pop
inc
movs
sbb
pop
inc
pop
ins
outs
data16
jmp
push
xchg
xor
pop
test
arpl
mov
and
lds
int
adc
lea
mov
popf
sub
(bad)
jnp
aas
imul
lods
sbb
popa
or
sbb
xchg
es
cmp
enter
mov
dec
daa
pop
(bad)
jmp
mov
ds
jae
cdq
mov
movs
inc
lds
retf
les
leave
mov
mov
out
scas
adc
xchg
mov
and
leave
pop
shl
in
inc
sbb
std
popa
retf
ins
inc
scas
loop
shr
pop
or
aaa
test
inc
dec
aam
pop
and
(bad)
pop
add
cmp
push
inc
lods
jmp
pop
and
sub
and
push
es
not
pop
sub
jl
stos
fs
aam
fs
(bad)
sti
(bad)
dec
loopne
dec
xchg
xchg
push
test
pop
in
jns
adc
sub
mov
int
fisttp
inc
cmps
sar
movs
out
sub
adc
inc
pop
fwait
ins
sar
pop
mov
push
mov
iret
mov
sti
popa
mov
mov
cmp
add
jbe
rcr
add
loop
mov
or
add
cmp
dec
mov
mov
fild
jge
stc
dec
mov
push
jns
sub
outs
inc
push
xchg
adc
pop
dec
movs
pop
adc
sbb
xchg
mov
stos
movs
icebp
fist
dec
adc
jb
clc
imul
and
inc
icebp
inc
xor
imul
add
fucomp
mov
sbb
pop
outs
int
xor
dec
push
inc
outs
pop
add
pop
loopne
mov
mov
xchg
add
rol
dec
jmp
fadd
nop
jle
inc
std
sbb
call
das
jl
xor
push
mov
inc
pop
jbe
inc
(bad)
xlat
inc
lods
imul
ja
rol
and
fldenv
stos
push
xor
popa
cld
lods
pop
jmp
jmp
mov
sbb
mov
retf
fmul
ins
pop
loop
lods
cli
call
pop
inc
test
icebp
dec
mov
push
in
inc
imul
mov
jge
out
loopne
inc
imul
sub
dec
push
int
stos
sbb
pop
jmp
aaa
inc
inc
xor
dec
in
push
pop
in
lds
je
mov
inc
out
add
sub
dec
das
add
std
sub
push
test
dec
dec
push
fld
adc
xchg
xchg
ror
pop
dec
jne
not
icebp
push
adc
dec
jp
hlt
lods
outs
mov
inc
pop
cs
dec
pop
mov
ja
push
stos
pop
cmc
sti
(bad)
test
je
cmps
aam
outs
test
xchg
push
out
or
imul
stc
cmps
in
in
jns
mov
movs
inc
pop
mov
lahf
aam
lock
inc
je
(bad)
shl
bound
mov
dec
pop
das
loop
or
inc
cmp
stc
movs
sub
sub
nop
inc
mov
movs
jmp
inc
cmp
dec
push
movs
pop
dec
scas
xor
mov
je
es
inc
mov
pop
mov
or
in
out
sub
imul
shr
fbld
fstp
in
(bad)
cmps
sub
std
mov
cld
lods
lods
outs
dec
scas
jl
fadd
sub
add
int3
pop
ds
jg
fimul
inc
in
in
cmps
(bad)
loope
mov
inc
add
add
jge
scas
(bad)
jg
push
mov
dec
jmp
call
repz
(bad)
fcomp
push
pop
je
or
addr16
ins
and
(bad)
jecxz
loop
in
xchg
lods
retf
and
inc
je
push
or
retf
sub
sub
mov
retf
mov
enter
mov
cli
jnp
push
sbb
out
bound
jg
(bad)
(bad)
pop
jns
ins
loope
pop
xor
dec
sahf
in
dec
inc
in
pop
lds
pop
inc
inc
cmc
stos
add
stc
pop
fdivr
sar
mov
xchg
inc
(bad)
jecxz
pop
adc
icebp
repnz
push
cs
jae
stos
(bad)
mov
pop
push
pop
imul
sbb
sti
(bad)
(bad)
jl
int
dec
sub
imul
push
inc
fcmove
jp
ins
inc
into
test
mov
xlat
jae
cmp
pop
sahf
outs
mov
dec
test
push
nop
shl
loop
sbb
adc
imul
fadd
and
jo
daa
inc
es
pop
jl
mov
jle
cmps
pushf
movs
pop
cmp
es
movs
xor
fwait
(bad)
cs
lods
pop
rol
push
cli
pop
iret
pop
inc
fdiv
or
dec
sbb
mov
add
mov
pop
ds
or
adc
jg
and
scas
pop
div
xchg
hlt
fadd
loope
mov
pop
pop
loopne
jg
pop
sahf
jecxz
mov
pop
scas
sub
sbb
mov
jmp
sbb
jge
aaa
mov
cli
repz
ins
pop
and
mov
mov
adc
shl
pop
jmp
inc
sub
sub
fisub
sti
dec
push
cmp
dec
dec
(bad)
loop
imul
out
scas
retf
aaa
sbb
cwde
ja
inc
into
mov
lods
jmp
fcom
dec
or
cmps
mov
shl
mov
movs
pop
inc
(bad)
retf
cld
jmp
data16
pop
shl
push
mov
jle
lods
les
enter
dec
retf
push
aam
push
cli
loope
mov
pop
outs
psubd
cmps
neg
iret
(bad)
cmp
call
mov
dec
push
enter
(bad)
movs
jg
scas
pop
dec
es
mov
dec
xchg
jne
mov
pushf
test
pop
movs
add
push
retf
mov
or
scas
cmp
ret
int3
cld
into
ins
leave
sbb
dec
je
jno
sbb
retf
jp
jle
dec
mov
cmp
dec
mov
inc
jecxz
and
push
push
(bad)
(bad)
dec
jl
jle
ret
repz
dec
adc
repz
push
jge
in
xchg
dec
xor
shl
pop
xlat
(bad)
(bad)
sti
push
dec
imul
retf
addr16
and
push
nop
or
rcr
mov
and
add
cli
call
add
mov
pop
in
int3
pop
outs
and
jmp
scas
cld
or
mov
call
ret
jmp
aas
rcr
clc
out
mov
call
int3
inc
add
adc
fisubr
sub
loope
(bad)
stc
cmp
push
das
movs
jp
dec
popa
inc
adc
mov
call
sub
das
mov
cwde
jmp
or
mov
inc
(bad)
dec
movs
popf
fsub
(bad)
(bad)
(bad)
push
loope
imul
pop
pop
mov
push
dec
inc
pop
scas
pop
loop
pop
jo
hlt
inc
add
mov
lds
mov
mov
fist
fdivr
jp
xchg
call
push
pop
mov
les
mov
pop
mov
iret
and
cld
push
(bad)
stos
data16
test
popa
mov
jmp
(bad)
clc
loop
sub
or
jl
cld
stos
dec
jmp
jmp
jecxz
cmp
fwait
(bad)
ins
out
ins
(bad)
sub
mov
mov
mov
(bad)
push
ror
jnp
mov
pop
pusha
inc
(bad)
lods
adc
xor
mov
push
(bad)
(bad)
jg
sub
inc
sbb
je
sub
test
or
retf
(bad)
(bad)
aas
cli
pop
lahf
addr16
cmps
sbb
pop
add
inc
retf
iret
jge
shl
lods
xor
das
xchg
mov
bound
repz
mov
ror
add
push
int3
adc
cmps
dec
or
(bad)
push
sbb
popf
xchg
xchg
add
dec
sub
in
popf
nop
add
jmp
push
call
cmp
fsub
popa
les
cmc
pop
ret
dec
lods
cdq
mov
xchg
pop
inc
lods
dec
pop
std
or
clc
fwait
jmp
shr
jmp
dec
push
and
ja
push
cld
das
clc
jnp
pop
std
or
mov
inc
pop
cmp
xchg
std
(bad)
jmp
inc
test
into
add
out
jno
xlat
inc
pop
inc
mov
ds
std
dec
in
dec
cmps
in
dec
add
push
xchg
mov
or
xchg
sbb
inc
mov
cs
inc
sahf
push
jo
mov
scas
jg
test
push
popf
in
or
or
addr16
pop
es
out
mov
dec
pop
dec
ins
add
cmc
and
pop
xchg
addr16
push
mov
cdq
cmp
dec
push
xor
dec
pop
sub
bound
cli
data16
mov
pop
(bad)
fsub
pop
lea
jae
outs
mov
fadd
pop
sub
fwait
xor
cmp
dec
outs
push
nop
lock
imul
mov
xchg
daa
movs
es
out
clc
outs
(bad)
jmp
xor
mov
aam
popf
mov
outs
pop
mov
xchg
jae
outs
(bad)
jmp
imul
jmp
bound
lock
in
daa
xor
add
lods
dec
mov
fiadd
out
jae
or
pop
loop
push
ins
loop
out
bnd
adc
mov
cld
pop
gs
nop
scas
shl
fld
clc
jg
pop
outs
mov
xor
sub
push
ds
arpl
call
pop
pop
daa
and
and
or
outs
fild
push
out
mov
inc
pop
loope
push
sub
adc
in
jl
add
out
int
adc
and
ret
push
es
ins
std
sub
fldcw
pop
loope
sub
jmp
sub
xor
loopne
jle
cmps
arpl
(bad)
fcomp
es
or
jp
jge
int
dec
es
ss
jl
dec
gs
stos
sub
call
sub
rcl
jno
nop
and
adc
(bad)
(bad)
jmp
and
jp
lods
retf
push
int3
adc
dec
outs
jp
mov
(bad)
(bad)
dec
mov
leave
mov
fcom
fisubr
fidiv
bound
fwait
mov
iret
mov
adc
cmc
push
mov
inc
scas
retf
out
scas
imul
(bad)
pop
ins
add
(bad)
into
mov
cmp
out
jmp
cmps
ja
and
jmp
enter
or
inc
and
ficomp
nop
and
ror
push
adc
out
inc
cdq
push
jns
fcmovb
hlt
sbb
mov
ficom
jne
fiadd
pop
pop
dec
or
or
dec
fsub
push
jne
xchg
pop
inc
mov
fisttp
dec
shr
data16
and
push
sbb
push
mov
inc
push
pop
or
pop
push
imul
(bad)
ficomp
inc
lahf
add
dec
pop
and
inc
mov
lahf
popa
fnsetpm(287
push
ret
leave
scas
cmps
outs
lods
mov
pop
pusha
pusha
mov
loop
xchg
inc
stos
aam
push
inc
inc
cmps
pop
popa
lds
lock
out
bound
inc
inc
icebp
push
ja
pop
and
pop
icebp
or
mov
icebp
inc
pop
lods
dec
pop
in
dec
loop
scas
mov
movs
enter
mov
cli
mov
mov
lea
(bad)
mov
adc
inc
test
hlt
and
jmp
imul
out
and
mov
dec
(bad)
lahf
xor
dec
ret
aas
sbb
pop
xchg
clc
rcl
fsubr
xlat
inc
test
es
scas
es
inc
mov
sub
inc
pop
js
rcr
lea
ret
inc
dec
test
pop
cs
xor
sub
or
shl
sub
push
enter
inc
mov
mov
test
or
push
mov
dec
cwde
push
out
sub
or
sti
(bad)
jg
in
(bad)
not
mov
mov
dec
pop
pop
dec
loop
mov
inc
jns
add
jo
cmps
dec
scas
jmp
(bad)
scas
add
pop
arpl
ins
or
stos
call
dec
pop
inc
push
sub
fmul
cld
outs
das
nop
(bad)
nop
int
sbb
inc
pop
jmp
sti
mov
mov
dec
xchg
mov
dec
push
mov
stos
scas
inc
das
sub
mov
outs
lods
loopne
das
push
inc
mov
es
outs
adc
out
add
out
cmp
int
adc
pop
and
cmps
mov
pop
mov
in
cmp
in
cmps
cmp
jmp
std
add
dec
ins
pop
sub
sbb
fcom
dec
rcl
add
shl
sbb
and
ins
lea
lods
popf
cs
jmp
cld
mov
jo
sub
or
mov
and
lods
ins
outs
mov
add
icebp
stos
jge
pusha
movs
jg
inc
clc
shl
dec
push
loope
mov
xor
test
out
jmp
jmp
adc
cmp
mov
or
add
ret
dec
ins
and
xchg
popa
inc
ret
outs
inc
call
repz
dec
sub
out
out
in
bound
mul
jb
mov
inc
outs
inc
outs
mov
ss
arpl
push
sub
call
movs
out
jmp
out
pusha
mov
and
repz
ret
stos
mul
and
cmps
shl
mov
and
inc
dec
es
(bad)
adc
arpl
into
cmc
pop
jmp
imul
shl
lahf
call
nop
(bad)
(bad)
hlt
fs
lods
xchg
xchg
loopne
out
lock
sbb
mov
shl
js
push
clc
dec
lock
in
test
mov
movs
fidivr
dec
out
sub
stos
mov
or
popf
jge
mov
dec
pop
dec
aam
outs
pop
mov
mov
sbb
shr
dec
movs
pop
xchg
in
inc
mov
loop
dec
xchg
fs
dec
pusha
jp
movs
fs
add
mov
and
shl
adc
dec
sbb
in
inc
call
scas
fadd
fcom
mov
mov
mov
mov
data16
in
shl
outs
dec
lods
jno
mov
outs
fsub
dec
mov
adc
mov
pop
sub
push
sbb
or
push
pop
mov
lds
lock
push
cld
dec
inc
int3
pop
push
or
mov
push
jo
dec
pop
and
outs
sub
sub
out
call
imul
cmps
fs
mov
and
ins
and
mov
xchg
dec
sub
out
jge
pop
jnp
je
lods
sub
popa
test
inc
inc
hlt
inc
call
mov
fild
and
sbb
(bad)
call
fwait
ds
pop
push
push
xchg
xor
outs
sub
sub
pop
mov
hlt
dec
sbb
movs
fisub
inc
or
or
sti
dec
xchg
dec
mov
cmp
mov
mov
xchg
dec
dec
push
xchg
jl
dec
dec
ss
pop
and
(bad)
jb
mov
inc
mov
inc
adc
sub
jmp
jmp
sub
inc
lods
and
xor
fdivrp
scas
jb
push
adc
jp
mov
xor
fdivr
mov
clc
inc
std
pop
or
inc
pop
dec
repnz
or
inc
std
pop
sbb
dec
jo
in
cmps
pop
(bad)
fcom
inc
sbb
dec
nop
pop
arpl
and
in
(bad)
call
leave
out
int3
jmp
sbb
in
out
in
mov
hlt
push
xor
cmp
int
bound
aaa
cld
mov
outs
sbb
out
ins
sub
(bad)
in
out
es
and
(bad)
aaa
mov
movs
sub
bound
mov
hlt
and
cwde
sbb
push
out
adc
sti
repnz
fmul
lods
dec
and
call
(bad)
(bad)
jmp
lea
mov
rcr
loop
pop
in
mov
icebp
call
not
cli
mov
pop
scas
dec
movs
cs
pop
jp
push
clc
call
sub
retf
mov
sub
cmp
lds
jmp
(bad)
cli
cwde
push
mov
mov
loopne
sti
cs
in
out
imul
in
pusha
in
out
mov
cmp
push
(bad)
fidivr
push
xlat
and
fucomi
retf
jns
pop
jecxz
mov
(bad)
in
inc
sbb
xchg
aad
or
xor
fdiv
test
pop
or
(bad)
jmp
pop
stos
sub
push
sbb
sub
jae
lds
das
retf
xor
inc
inc
jno
sbb
mov
push
outs
lock
inc
ror
movs
mov
(bad)
(bad)
jg
or
xchg
dec
test
sub
mov
scas
mov
push
data16
dec
loop
sbb
aaa
ins
inc
jle
inc
inc
or
xchg
add
dec
scas
or
mov
stc
lock
leave
mov
loop
adc
pop
loop
cdq
jae
sub
loopne
hlt
sub
xor
pushf
cmps
in
cmps
call
push
neg
inc
pop
ret
scas
pop
lods
retf
pop
les
adc
in
mov
sbb
les
push
les
call
call
fbld
sbb
add
mov
lahf
stos
pop
mov
fadd
imul
ret
stos
pop
std
mov
inc
adc
fsubr
bound
or
adc
jnp
cmp
fs
in
retf
inc
out
inc
mov
or
ds
push
fisub
pop
inc
sti
push
in
popa
ror
mov
test
mov
xor
and
push
xchg
and
sub
(bad)
call
sub
mov
dec
sub
mov
lock
lahf
call
pop
in
sar
ror
outs
stos
jge
aaa
cs
pop
test
push
aaa
dec
mov
inc
adc
stos
frstor
xor
in
daa
repz
mov
lods
arpl
out
xor
sub
jmp
addr16
out
pusha
sar
and
scas
sub
cmp
lock
jmp
or
ins
jbe
ins
and
fwait
jne
bound
data16
inc
loop
add
ret
sub
(bad)
call
loopne
rcl
call
mov
add
inc
out
(bad)
and
pop
jecxz
ins
mov
adc
clc
dec
sub
lods
inc
fs
xchg
out
ja
mov
movs
mov
ret
out
push
jmp
stos
or
sbb
inc
clc
and
ins
sub
shl
mov
das
fldcw
xor
cs
push
and
mov
aaa
popa
shr
jmp
and
mov
leave
pop
addr16
call
pop
mov
call
lods
retf
fldenv
cmp
xor
(bad)
cli
adc
push
cdq
mov
(bad)
and
inc
inc
retf
sar
lods
jecxz
mov
push
pop
xor
movs
pop
sub
cmp
outs
out
daa
movs
imul
lods
out
lahf
lods
xlat
(bad)
mov
fdivr
stos
push
inc
cmp
shl
pop
enter
mov
pop
in
out
out
or
and
loop
popa
mov
pop
gs
std
jg
div
push
cmps
inc
pop
test
fsubr
push
adc
dec
sar
push
std
xor
fimul
and
fidiv
adc
dec
jbe
jns
inc
js
or
ds
call
sahf
xchg
movs
jbe
outs
cmc
test
pushf
repnz
loopne
rol
loop
movs
pop
outs
push
lock
shld
lods
pop
push
imul
lock
mov
pop
cmps
movs
and
and
fcmovnu
adc
pop
dec
ss
jbe
mov
scas
jg
dec
dec
mov
addr16
popa
add
shr
pop
add
adc
and
add
pop
lock
push
mov
mov
test
xchg
push
jmp
inc
shl
xor
fadd
movs
xchg
and
mov
or
pop
sbb
pop
lds
pop
mov
in
pop
rol
and
int3
pop
and
fsub
jmp
add
or
loop
test
and
dec
push
dec
lods
das
sar
xor
mov
mov
add
std
mov
jae
mov
call
sub
pop
jnp
cmp
int
psrlq
je
scas
or
test
cld
call
in
and
addr16
push
jae
inc
mov
cmp
sbb
(bad)
mov
mov
mov
repnz
cwde
pop
fsubrp
ret
sub
(bad)
cmc
scas
rcr
shl
xor
in
in
cmp
dec
jp
bound
lods
push
lods
mov
sub
jmp
jecxz
lds
test
daa
shl
and
std
div
and
ins
xchg
out
add
dec
rcl
nop
jae
loope
cld
(bad)
in
pop
sti
mov
movs
push
out
mov
jle
dec
or
pop
shl
fwait
mov
sbb
add
jno
xor
push
push
scas
ror
shl
mov
cs
movs
xor
mov
aad
dec
adc
jb
ret
and
pop
fs
xor
addr16
inc
movs
pop
inc
test
jmp
mov
adc
cmp
(bad)
out
pop
retf
gs
addr16
es
es
and
mov
call
or
sbb
lea
fcomp
dec
ins
in
fsubr
fsub
adc
stos
mov
sar
(bad)
dec
je
sbb
add
loope
xor
xor
data16
lahf
shl
mov
loopne
or
fs
call
and
test
push
(bad)
(bad)
(bad)
jmp
stos
pusha
sub
out
add
rcr
ds
dec
cmp
aaa
leave
repz
mov
adc
scas
lods
dec
or
adc
fidivr
or
inc
(bad)
dec
inc
jp
dec
sub
test
es
and
lods
sbb
dec
gs
fbstp
mov
or
data16
call
jg
jae
sbb
and
arpl
mov
movs
cmp
dec
pop
jae
push
mov
jns
fs
pop
outs
lods
pop
inc
pop
cdq
stos
lods
pop
inc
pop
lock
sbb
inc
pop
inc
movs
add
jmp
retf
mov
push
jmp
xor
and
test
pop
cmp
or
pop
xor
pop
jg
mov
fwait
push
out
jmp
idiv
inc
mov
enter
push
dec
test
inc
xchg
ja
sub
daa
int
mov
retf
and
or
jge
arpl
dec
and
(bad)
xor
cmp
push
xor
stos
adc
in
call
call
shl
hlt
stos
ret
pop
data16
push
imul
imul
bound
pusha
and
xor
movs
popf
and
push
push
pusha
arpl
inc
jmp
push
into
sub
xor
and
adc
(bad)
idiv
jmp
pop
mov
sub
cwde
fcomp
scas
jb
and
pop
mov
ja
dec
fs
dec
test
fisttp
mov
test
sbb
lea
push
mov
jmp
in
fdiv
xor
xchg
dec
sahf
in
fwait
mov
add
mov
sbb
mov
mov
scas
pop
mov
push
out
sub
mov
hlt
dec
push
retf
dec
dec
loopne
dec
pop
dec
test
or
shl
push
call
pop
inc
mov
retf
in
outs
lods
out
clc
das
inc
scas
xchg
pop
pop
dec
mov
add
pop
cwde
imul
dec
fcomp
sub
xor
out
popa
cmp
or
das
cmp
add
(bad)
fisubr
call
inc
jb
and
out
in
jg
lea
(bad)
std
in
int
ds
das
(bad)
sbb
jecxz
add
dec
out
fmul
ja
in
call
mov
in
push
cld
pop
(bad)
dec
pop
cmps
ins
fbld
(bad)
mov
ficomp
out
pop
fadd
js
mov
dec
(bad)
jg
rcr
inc
pop
popf
sbb
push
aam
pop
mov
imul
or
inc
jle
(bad)
cmp
inc
pop
movs
data16
push
icebp
dec
pop
in
(bad)
fisub
xchg
lahf
push
fsubr
cwde
or
cmp
push
pop
hlt
mov
dec
inc
mov
adc
call
mov
adc
xchg
out
inc
arpl
lock
cmps
ds
and
pop
dec
movs
inc
popa
push
dec
inc
or
push
cmp
cli
jg
mov
mov
in
inc
adc
ins
lds
inc
pop
scas
es
add
and
jmp
fisub
out
popa
frstor
and
jg
jg
in
sub
loop
jecxz
scas
int3
call
movs
jg
(bad)
mov
or
sbb
popf
cs
ins
jl
dec
outs
push
cmp
dec
xor
add
rcl
mov
stos
ret
add
movs
(bad)
fistp
lods
and
sub
inc
mov
and
es
jg
jg
jb
sub
in
cld
jmp
cli
jno
mov
jle
pop
or
pop
or
xor
jp
scas
push
jmp
mov
sbb
repz
stos
mov
stc
jmp
adc
cmp
mov
mov
es
scas
mov
inc
js
mov
out
sub
(bad)
imul
pop
sbb
sar
sub
ins
and
inc
mov
inc
sub
push
imul
rcr
pop
stos
cld
dec
inc
int3
pop
aaa
clc
fwait
ds
jmp
and
in
ins
ins
or
dec
add
arpl
sbb
dec
ins
aaa
jle
sub
sub
pop
int3
push
push
mov
push
mov
popf
mov
mov
dec
pop
stc
mov
mov
pop
loope
aad
out
(bad)
and
aaa
mov
mov
pop
or
movs
retf
mov
and
mov
addr16
lods
ror
adc
je
inc
add
adc
popf
mov
dec
pushf
daa
and
xchg
sub
sbb
pop
lock
add
(bad)
aas
mov
in
cmps
cld
pusha
or
mov
imul
in
sbb
sbb
mov
push
cmp
loope
jmp
lea
jmp
test
and
scas
pop
aam
adc
inc
outs
fucomi
dec
frstor
mov
adc
movs
outs
sub
adc
into
retf
fnstsw
mov
out
push
lock
sbb
ins
call
xchg
pop
jle
ret
int
pop
add
push
js
sub
(bad)
or
cmps
dec
cli
dec
xchg
mov
stos
mov
lahf
mov
add
push
sbb
stc
imul
cmp
and
jge
das
adc
int
adc
sbb
jo
pusha
imul
outs
stos
fcom
cmp
in
aaa
xchg
jo
adc
cmps
out
mov
(bad)
fistp
mov
das
in
nop
and
pop
push
ret
xchg
jae
inc
pop
sbb
inc
xlat
sub
test
jo
inc
pop
pusha
in
hlt
push
shl
and
sub
movs
(bad)
out
sti
pop
lock
retf
fnstcw
jmp
pop
mov
idiv
stos
int
mov
scas
jp
jg
hlt
fs
and
jl
xchg
rol
jg
lds
(bad)
lods
add
outs
pop
(bad)
dec
push
nop
sbb
jge
movs
dec
out
xchg
xor
and
(bad)
fisttp
cmp
scas
retf
push
and
(bad)
scas
fisttp
cli
push
cmp
jbe
stos
cmp
loopne
lods
cmp
cs
xchg
pop
dec
out
loope
mov
and
inc
bound
scas
pop
ret
sbb
dec
sub
fadd
call
movs
xchg
retf
pop
jnp
push
pop
sahf
int
inc
sub
or
in
out
cmps
ins
(bad)
cli
imul
fisttp
int3
cmc
cmp
repnz
cmp
inc
stc
(bad)
(bad)
(bad)
cmp
in
inc
rol
mov
mov
xor
adc
scas
test
mul
mov
xchg
mov
ret
in
jg
call
int
clc
arpl
add
push
std
sar
and
push
add
add
arpl
jb
jo
or
loope
(bad)
ja
imul
es
xor
int
sub
sar
xchg
(bad)
mov
(bad)
out
mov
bound
fidiv
dec
cmp
and
add
inc
and
sbb
enter
ror
push
cwde
(bad)
(bad)
(bad)
mov
jge
dec
(bad)
ret
call
fadd
jmp
dec
cmc
bound
jmp
adc
mov
ja
push
pop
dec
int
mov
pop
mov
out
fidivr
add
inc
lods
adc
xor
inc
(bad)
(bad)
(bad)
jg
fsub
mov
and
add
inc
mov
sbb
lods
in
xor
mov
inc
push
dec
aaa
and
pop
imul
inc
mov
in
lock
adc
(bad)
call
mov
or
imul
rcr
pop
mov
sub
lea
cwde
inc
stc
(bad)
call
daa
call
xor
stc
inc
mov
(bad)
jmp
or
sub
arpl
lahf
inc
call
dec
or
lods
mov
pop
adc
xchg
fmul
mov
push
mul
frstor
pop
or
(bad)
(bad)
(bad)
call
fidiv
xchg
or
mov
rol
sbb
jmp
out
dec
sub
xor
fild
xchg
idiv
in
or
dec
inc
add
shl
xor
pop
ret
xor
cmp
add
call
or
add
rep
push
mov
cmp
and
jne
pop
xor
pop
jbe
(bad)
(bad)
call
call
mov
(bad)
movs
xchg
mov
xor
nop
scas
lods
icebp
jns
xor
xchg
stc
mov
je
ror
pop
das
xor
adc
push
mov
push
and
and
fild
mov
mov
or
test
sbb
stos
jne
(bad)
out
(bad)
jmp
leave
pusha
push
pop
pop
sahf
mov
pop
gs
aaa
add
ins
jg
or
(bad)
(bad)
sub
pop
(bad)
in
or
dec
popf
mov
daa
in
sub
aaa
retf
loop
pop
out
(bad)
jmp
enter
jae
clc
push
add
xlat
cdq
cmp
bound
and
(bad)
in
sar
(bad)
jg
fistp
pop
das
jmp
pop
inc
push
adc
scas
jmp
cdq
jo
out
add
inc
(bad)
sti
stos
cli
add
hlt
push
inc
inc
inc
sbb
push
ins
ds
out
call
repz
sbb
(bad)
in
movs
jg
icebp
push
sbb
lds
ret
cmc
dec
movs
fiadd
sbb
mov
mov
push
sub
jmp
push
jl
(bad)
(bad)
inc
lods
fidivr
test
xchg
mov
jo
addr16
jg
xchg
pop
push
call
(bad)
(bad)
call
cmp
xchg
jmp
cs
and
push
pushf
mov
and
fs
(bad)
(bad)
inc
pop
push
ins
mov
push
xor
adc
ror
in
outs
push
sbb
fld
xor
outs
(bad)
out
(bad)
call
add
in
cs
repnz
xchg
pop
push
fldpi
pop
test
test
sbb
repz
ja
jmp
push
js
fwait
sbb
(bad)
jmp
dec
sbb
sub
cmp
mov
push
push
daa
push
out
xchg
add
mov
call
push
mov
ss
in
push
cmps
shl
ret
push
jb
(bad)
(bad)
jmp
add
xchg
xor
mov
cmps
imul
mov
push
xlat
test
lods
cmp
(bad)
(bad)
mov
mov
adc
jg
sbb
fidivr
ins
sub
push
jmp
mov
xor
xchg
pop
and
call
push
xor
clc
pop
sbb
shr
jecxz
or
in
sub
(bad)
(bad)
(bad)
fcom
jno
add
ror
sub
sahf
(bad)
out
fbstp
mov
loope
cmps
cmps
pusha
(bad)
call
xor
add
(bad)
in
in
sbb
js
mov
pop
int3
push
dec
jo
std
(bad)
jmp
pop
sub
ss
pop
outs
neg
(bad)
jmp
pop
add
scas
cmc
int
not
adc
mov
sub
rcl
push
hlt
cld
movs
fldenv
shr
pop
and
ins
push
data16
mov
push
idiv
sar
jnp
inc
and
dec
or
and
inc
or
ss
inc
imul
mov
push
into
pop
lods
dec
test
int3
push
clc
inc
and
jnp
add
out
(bad)
dec
(bad)
mov
xchg
mov
cmp
sbb
clc
mov
fsubrp
pop
pop
sbb
out
add
(bad)
(bad)
adc
pop
dec
pop
sub
ret
push
cwde
mov
pop
or
inc
(bad)
dec
pop
hlt
dec
lahf
inc
jo
cmp
jecxz
and
(bad)
fld
jns
dec
std
ss
into
enter
out
enter
loope
xchg
leave
and
aam
test
and
lods
mov
(bad)
jmp
push
jecxz
int
scas
test
iret
fsubp
rcr
push
cld
mov
fimul
sar
sbb
test
adc
cdq
adc
in
mov
dec
xchg
sbb
add
push
dec
inc
div
(bad)
(bad)
(bad)
jg
adc
jnp
into
sub
imul
sar
imul
adc
mov
and
and
imul
mov
sub
inc
and
push
cli
pop
and
push
jae
ja
xchg
pop
ret
(bad)
inc
add
in
gs
jmp
and
adc
inc
fisubr
loopne
in
(bad)
dec
mov
add
gs
and
js
jae
push
retf
push
cwde
sub
loope
jmp
sub
in
arpl
sbb
vpsubb
add
pop
in
stos
xchg
jae
ror
sbb
popf
cmps
out
daa
bound
clc
(bad)
call
xor
ins
(bad)
in
inc
mov
in
aas
mov
cmps
add
inc
xchg
mov
das
lock
(bad)
mov
fwait
ss
adc
mov
bound
arpl
(bad)
(bad)
inc
cmp
outs
leave
lods
retf
out
and
fcom
out
outs
test
test
and
inc
loope
inc
hlt
xlat
sbb
(bad)
push
xchg
add
adc
int
mov
and
popf
dec
pop
sar
(bad)
(bad)
dec
loopne
repnz
mov
cmp
(bad)
fwait
scas
pop
mov
pushf
arpl
ja
shl
(bad)
stc
jg
push
call
call
mov
jae
imul
retf
(bad)
pop
in
xchg
fnsave
(bad)
fistp
mov
sbb
cmp
pop
mov
pop
je
(bad)
pop
lahf
pop
fist
aad
and
lock
sbb
dec
pop
jl
test
retf
and
adc
fdiv
call
fcom
sbb
pop
mov
mov
rcr
addr16
sub
pop
inc
pop
xlat
fld
movs
(bad)
push
lods
jmp
mov
sar
test
sbb
ss
(bad)
out
nop
mov
pop
stos
add
retf
movs
pop
fisub
mov
pop
and
mov
aaa
stos
test
ds
sbb
stos
aas
mov
imul
sub
stos
movs
mov
aaa
sti
mov
(bad)
(bad)
push
mov
lods
cmp
pop
rcl
(bad)
(bad)
mov
and
lea
mov
pop
nop
mov
fs
int
inc
enter
pop
scas
icebp
pop
fcom
mov
mov
stos
hlt
and
(bad)
ror
fwait
mov
pop
dec
pop
pop
or
pop
pop
ss
(bad)
(bad)
inc
mov
lea
(bad)
cmps
xor
sbb
pop
test
mov
sbb
dec
ror
rol
call
pop
test
rcr
and
inc
and
cld
jmp
pop
dec
(bad)
loope
push
repnz
pop
push
add
mov
sti
or
ror
(bad)
loope
fild
call
call
pop
push
mov
sub
cmp
stc
pop
mov
imul
or
mov
sbb
inc
in
out
pop
inc
lods
test
mov
(bad)
dec
mov
cwde
bound
gs
test
test
bound
pop
mov
mov
pop
or
add
mov
cmps
shl
pop
xchg
or
cld
sar
dec
jecxz
xor
add
push
sub
push
sub
pop
cmc
adc
inc
psrlq
push
nop
retf
xchg
mov
xchg
dec
(bad)
(bad)
mov
shl
dec
loope
test
push
or
ss
mov
dec
jecxz
retf
cs
retf
(bad)
std
dec
(bad)
popa
and
mov
jmp
fcmovnu
adc
sub
xchg
adc
(bad)
jbe
dec
(bad)
scas
es
dec
jecxz
inc
xchg
mov
out
loopne
fimul
retf
xchg
sub
(bad)
inc
aam
sbb
int
(bad)
mov
or
push
mov
shl
jecxz
int3
and
lahf
adc
dec
bound
outs
ror
ins
movs
pushf
sub
dec
sub
stos
sub
sbb
and
daa
out
movs
out
ja
pusha
cld
jmp
out
inc
and
daa
ret
call
ror
jle
dec
call
(bad)
mov
dec
stc
pop
sar
ret
sbb
pop
add
sub
js
shl
pop
mov
push
xor
pop
ret
scas
xchg
pop
call
mov
popa
(bad)
jg
movs
inc
jo
pop
jmp
je
inc
sbb
test
lods
sbb
jo
call
outs
jne
hlt
or
cmp
call
cmc
scas
mov
jb
push
inc
scas
xor
dec
shr
inc
mov
push
mov
xor
and
push
ds
sub
bound
fiadd
xchg
and
mov
fdivr
jb
lods
movs
ins
mov
inc
inc
xor
add
xchg
test
loop
enter
fild
and
out
out
adc
xchg
icebp
pop
cli
aad
mov
or
mov
cld
(bad)
(bad)
inc
inc
mov
jp
fld
mov
std
int
cs
mov
rcl
xor
hlt
jg
idiv
adc
andnps
movs
fwait
add
out
push
mov
clc
hlt
(bad)
(bad)
mov
xor
and
es
mov
shr
mov
out
xchg
jno
or
aas
sub
inc
pop
mov
lods
cmp
pop
paddsb
push
pop
jb
dec
mov
push
das
fcmovnbe
mov
pop
cmps
pop
adc
add
call
nop
rol
rol
ins
push
cli
jno
ret
cdq
jns
popa
mov
hlt
mul
push
(bad)
aam
xchg
inc
mov
adc
(bad)
(bad)
fnstsw
out
jecxz
les
pop
and
sbb
out
jbe
inc
add
inc
fadd
(bad)
aas
(bad)
jmp
cmp
jo
mov
jecxz
call
add
or
mov
ud0
mov
ins
mov
pop
inc
retf
repnz
adc
(bad)
(bad)
(bad)
call
xor
lock
pusha
mov
popa
in
ins
into
cmps
ja
dec
pushf
sbb
fst
das
mov
mov
or
or
cmps
pusha
imul
jne
sbb
dec
jg
and
sub
mov
xchg
ret
add
fsub
pop
jmp
mov
xchg
mov
inc
rcl
cmps
fild
lock
icebp
mov
add
inc
enter
push
mov
inc
inc
sbb
cli
push
(bad)
clc
push
aas
jmp
adc
and
fbstp
imul
mov
push
push
retf
push
movd
xchg
pop
inc
push
inc
xchg
shl
or
fldcw
cmovl
mov
adc
sub
call
(bad)
(bad)
(bad)
dec
mov
jb
mov
mov
sub
sbb
std
popf
fisttp
ins
add
mov
push
aaa
mov
pop
mov
push
and
les
cwde
sbb
mov
mov
pop
jle
fucomip
pop
int3
into
(bad)
(bad)
(bad)
call
pop
and
mov
retf
retf
cwde
jl
ds
jbe
cli
jae
pop
dec
add
shl
outs
cmp
or
je
scas
push
and
clc
dec
adc
iret
xlat
cld
mov
cmp
imul
(bad)
in
loopne
(bad)
mov
adc
or
jl
push
dec
ins
(bad)
in
imul
(bad)
call
out
in
dec
ins
leave
pop
pop
fcmove
stos
pop
mov
fnstsw
and
clc
call
sbb
and
sbb
sub
je
test
fwait
or
(bad)
call
mov
fidiv
leave
inc
inc
jmp
ds
or
push
sbb
mov
int
aad
fs
xchg
fmul
(bad)
mov
and
stos
jmp
jl
cmp
les
push
jmp
sub
jno
nop
lahf
js
adc
mov
sar
in
out
pop
fistp
sub
fldcw
repnz
pop
or
sbb
mov
(bad)
lea
dec
mov
add
ss
sub
(bad)
inc
cmp
push
(bad)
jle
test
stos
xchg
add
sti
in
cmc
xlat
bound
jmp
push
ret
cmp
(bad)
jnp
lahf
add
outs
inc
push
cli
dec
mov
jl
cld
sbb
ins
jl
xor
cld
pop
rcl
imul
stos
cmp
(bad)
(bad)
jmp
jo
inc
cmp
sbb
mov
popf
cwde
mov
sahf
inc
jnp
mov
mov
mov
(bad)
push
lods
je
sbb
jb
das
adc
push
pop
mov
aas
jecxz
sbb
jnp
push
clc
out
int
(bad)
(bad)
push
cld
shl
jmp
pop
test
in
add
mov
cli
pop
sub
shl
dec
fsubr
jb
ror
(bad)
je
(bad)
jmp
and
stos
fld
lods
push
shl
jge
test
inc
cmp
cld
(bad)
(bad)
call
out
sub
retf
imul
cmc
xor
xchg
or
mov
jg
call
add
sbb
jge
mov
shr
(bad)
(bad)
call
jb
jmp
mov
lahf
fidivr
ins
sub
mov
mov
mov
fdiv
dec
xchg
cmc
fsub
mov
and
dec
lods
rcl
pop
cmp
push
mov
(bad)
(bad)
mov
mov
cmp
mov
dec
pusha
stos
jo
stos
jno
(bad)
dec
pushf
dec
stos
dec
add
movs
mov
not
cld
call
fstp
xor
cmp
push
stos
push
movs
push
sahf
rol
or
mov
xor
stos
jmp
lods
pushf
or
scas
repnz
mov
pushf
sbb
sub
jmp
(bad)
(bad)
dec
mov
cmp
push
mov
dec
out
sub
sub
call
inc
pop
mov
xor
mov
loope
scas
ins
cld
inc
push
inc
cmp
aam
push
jmp
mov
jmp
in
popf
push
adc
fstp
sub
sti
jmp
xchg
mov
retf
push
ror
or
sbb
or
or
cli
sub
push
cli
jp
cmp
(bad)
out
cli
mov
(bad)
retf
loop
sti
stos
fidivr
dec
mov
cli
dec
lahf
mov
push
dec
adc
dec
imul
stos
loopne
stos
mov
(bad)
cmp
js
dec
sbb
jae
push
xchg
or
or
push
push
fcos
sub
mov
retf
adc
fimul
dec
dec
stc
fisttp
sub
fidivr
sbb
stos
or
push
idiv
fistp
movs
push
jno
jmp
arpl
fisttp
jmp
sbb
or
test
sbb
pop
(bad)
(bad)
dec
mov
movs
les
mov
sbb
or
imul
pop
jmp
stos
fild
call
sub
sub
pop
adc
(bad)
jmp
fisubr
cli
mov
clc
retf
(bad)
(bad)
call
push
stos
outs
adc
stos
cli
sbb
and
dec
dec
stos
sbb
(bad)
(bad)
dec
movs
lds
or
mov
mov
mov
mov
sbb
mov
jp
jmp
push
sahf
dec
push
dec
test
sub
(bad)
mov
adc
retf
mov
ds
fstp
repnz
fwait
mov
pop
and
imul
cmp
dec
ret
push
fwait
or
mov
xchg
sub
pop
cmp
(bad)
(bad)
(bad)
jmp
les
pop
push
xchg
lds
jmp
jp
stos
mov
inc
fidivr
jp
push
cmp
jg
mov
mov
pop
mov
je
test
mov
sbb
int
fstp
das
push
jle
ja
jp
mov
dec
sbb
(bad)
push
push
cmps
or
dec
imul
dec
loopne
sbb
(bad)
fdivr
xchg
(bad)
mov
jecxz
inc
or
test
mov
jmp
fidivr
inc
mov
cmps
mov
fisttp
push
hlt
movs
jmp
jecxz
movs
add
scas
outs
(bad)
in
stos
movs
xor
call
(bad)
jg
and
imul
test
mov
or
int3
mov
mov
enter
inc
das
lods
cmps
stos
inc
dec
cmp
pushf
mov
jmp
inc
fsubr
out
mov
sbb
out
movs
xor
xor
inc
lahf
jno
inc
inc
jmp
dec
pop
retf
mov
cmp
mov
mov
mov
cwde
sbb
sar
call
fneni(8087
mov
pop
pop
lods
dec
retf
mov
aas
movs
sub
popf
movs
(bad)
xchg
sbb
sbb
movs
fs
or
pop
dec
es
mov
or
cmp
mov
loop
les
jmp
or
fadd
out
movs
jp
pop
xchg
(bad)
jmp
ins
cmp
and
adc
movs
mov
(bad)
(bad)
dec
into
pop
rol
stc
sahf
fcmovnb
cmp
movs
pop
inc
pop
xlat
push
mov
mov
dec
sbb
call
test
fisubr
dec
retf
fstp
push
lahf
adc
push
cmc
icebp
pop
sub
(bad)
adc
cmp
(bad)
(bad)
fistp
fild
push
out
pop
sbb
ficomp
jmp
fwait
jg
or
adc
sub
dec
adc
dec
fstp
fisttp
cmp
cld
push
(bad)
(bad)
(bad)
call
enter
daa
jbe
sbb
stc
sub
enter
imul
add
adc
(bad)
dec
rcr
inc
sbb
jg
sbb
(bad)
sub
mov
pop
ficomp
or
inc
scas
cli
pop
cmc
inc
(bad)
sub
sti
fstp
sti
add
(bad)
(bad)
(bad)
jnp
enter
sbb
pop
fstp
jb
inc
mov
mov
adc
loop
stos
mov
fild
mov
retf
xlat
movs
bextr
cmp
or
fiadd
add
jmp
ret
push
jmp
scas
retf
shl
movs
push
enter
push
or
push
sbb
ins
add
test
retf
frstor
pop
cwde
dec
fcomip
stos
pop
sbb
pop
or
jmp
push
push
aam
in
int3
mov
dec
scas
mov
das
mov
(bad)
dec
leave
cmp
retf
ja
jg
ins
es
dec
dec
xchg
ss
dec
inc
adc
mov
call
dec
or
jo
rcl
mov
fdivrp
(bad)
(bad)
call
stc
dec
ficomp
jp
test
or
dec
sbb
dec
js
sbb
xlat
(bad)
push
pop
fisub
stos
mov
or
cmps
stos
mov
xchg
push
jp
add
out
clc
in
lds
or
movs
movs
push
lods
inc
mov
mov
(bad)
jg
(bad)
lea
movs
pop
add
dec
sub
scas
jmp
fucomip
mov
xor
inc
pop
fdivr
(bad)
dec
inc
jmp
call
pop
retf
shl
(bad)
jg
retf
or
sbb
into
mov
movs
test
imul
les
shl
mov
call
jb
adc
cmp
mov
and
(bad)
(bad)
(bad)
mov
dec
jns
push
retf
jnp
es
xlat
fidivr
scas
aam
push
dec
mov
add
das
mov
jmp
ins
and
mov
loop
out
adc
push
pop
or
movs
push
jmp
icebp
sar
push
cli
cmps
or
stos
fisttp
mov
fcmove
sub
cmp
aaa
dec
jo
inc
cli
mov
(bad)
(bad)
mov
icebp
rcr
and
retf
or
das
cmp
(bad)
mov
mov
nop
mov
fwait
and
xchg
cmp
cmp
imul
mov
xchg
stos
cmp
test
ret
jmp
mov
sahf
std
push
jmp
fdiv
out
clc
inc
ficomp
out
push
mov
dec
inc
bound
lahf
es
les
pop
rcr
pop
mov
cmp
dec
cwde
cs
std
(bad)
jmp
inc
pop
movs
call
mov
cmp
fdivr
pop
mov
jmp
mov
lds
xchg
push
mov
or
cmp
scas
sbb
popa
movs
mov
jmp
or
shld
dec
and
(bad)
push
sbb
mov
fbld
and
jp
test
cs
stc
and
data16
and
push
shr
cdq
jg
cs
mov
cwde
push
sub
dec
add
jmp
imul
mov
rcl
jne
or
push
cld
retf
cli
sub
vpshaw
sar
pop
cmps
mov
mov
sbb
jg
push
and
push
call
(bad)
mov
inc
pop
inc
scas
pushf
pop
fiadd
imul
mov
shr
(bad)
das
dec
(bad)
(bad)
and
push
xchg
movs
dec
adc
hlt
add
fiadd
mov
movs
mov
jmp
enter
dec
dec
test
mov
mov
or
fsub
cmp
popa
xchg
test
into
push
jnp
js
jge
push
imul
inc
sti
sub
bt
cmps
(bad)
inc
push
das
int3
mov
gs
cmc
mov
dec
adc
mov
call
push
stos
loop
sub
out
clc
cs
pop
sbb
enter
mov
dec
vfrczss
test
lock
sbb
jle
or
or
pop
inc
sub
call
inc
out
out
push
ins
lods
retf
mov
dec
mov
idiv
or
sahf
js
or
fcmovbe
mov
dec
jmp
cmp
cmp
retf
push
call
jmp
push
xor
fimul
test
(bad)
call
ins
jp
mov
cmp
mov
fnstcw
sbb
mov
repnz
out
mov
or
ds
mov
(bad)
push
cmp
aam
pinsrw
xor
outs
inc
test
fs
test
inc
xchg
xchg
jp
std
(bad)
jg
sub
out
xchg
aas
mov
sbb
mov
and
(bad)
sbb
jbe
pop
or
push
call
outs
call
outs
cdq
pop
mov
ror
imul
(bad)
mul
mov
out
cli
and
sbb
test
mov
sub
stos
xlat
add
xor
enter
add
add
push
outs
add
scas
(bad)
(bad)
jmp
inc
fsubr
mov
xchg
push
mov
repnz
in
sub
push
cld
dec
mov
jne
cli
or
jle
and
pop
nop
lock
jo
add
jg
imul
lahf
pop
mov
mov
(bad)
gs
jl
clc
clc
pop
pop
ins
fs
jns
add
jns
cwde
retf
dec
(bad)
jmp
jle
dec
inc
mov
lahf
cwde
sub
mov
cwde
mov
out
pop
loope
pushf
popf
dec
mov
stc
mov
cs
mov
push
cmp
mov
cdq
jle
pop
cmps
sbb
or
lds
dec
mov
jmp
sub
stos
push
cmp
fwait
adc
fs
sub
(bad)
(bad)
(bad)
inc
sahf
jmp
jle
fild
outs
dec
in
dec
js
or
mov
inc
scas
popa
jmp
inc
scas
movs
cwde
jmp
jge
mov
mov
scas
clc
cmp
add
adc
scas
cli
movs
or
or
sar
jg
ja
nop
xchg
ins
mov
add
mov
push
fisubr
(bad)
(bad)
mov
or
or
add
enter
mov
dec
dec
(bad)
(bad)
(bad)
(bad)
fldenv
lods
out
clc
fwait
dec
sbb
test
test
dec
adc
pop
loop
cld
cmp
push
sub
push
imul
jb
cmp
xchg
inc
pop
push
sbb
push
ds
nop
push
jo
cdq
xor
cmp
xor
(bad)
(bad)
(bad)
call
and
test
fist
inc
mov
xchg
push
add
cwde
sub
clc
pop
or
fsubr
cld
(bad)
cmc
ret
pop
dec
cmp
js
mov
(bad)
out
outs
scas
mov
sti
sub
fsincos
cmp
mov
inc
and
mov
dec
sbb
jmp
out
nop
adc
retf
inc
add
fcomp
rol
pop
fnstcw
popa
add
idiv
jg
call
test
sub
dec
pop
stc
add
stos
inc
fiadd
mov
cld
neg
ret
ffree
test
pop
(bad)
js
dec
mov
mov
sub
imul
scas
adc
dec
add
xchg
push
fistp
mov
push
cld
(bad)
mov
sub
xchg
mov
retf
inc
jle
dec
mov
pop
(bad)
(bad)
(bad)
dec
loopne
stc
or
or
xor
repz
into
in
dec
bound
lahf
je
sar
xor
or
retf
retf
push
lods
mov
mov
clc
push
pop
(bad)
pusha
in
jl
adc
pop
lods
jmp
into
arpl
(bad)
fcomip
js
push
push
or
and
mov
test
movs
inc
mov
and
dec
cli
(bad)
mov
add
jo
(bad)
mov
xlat
add
mov
push
pop
add
(bad)
(bad)
jg
(bad)
push
or
(bad)
jp
mov
sahf
adc
(bad)
(bad)
jmp
sbb
mov
inc
add
fdivr
or
xchg
mov
out
lds
ds
jmp
jp
sub
into
cmp
test
je
sub
test
add
cld
(bad)
(bad)
pop
(bad)
pop
mov
ja
and
enter
jg
test
imul
add
or
cmps
imul
scas
push
add
ds
add
inc
loopne
mov
or
ds
and
push
pop
jne
fimul
movs
push
cmc
add
push
outs
mov
dec
cmp
arpl
jmp
cmp
aaa
mov
(bad)
jbe
jge
and
cmp
sub
(bad)
call
cmp
push
pop
mov
call
stos
adc
and
pop
mov
(bad)
pop
fcom
lock
popa
mov
call
adc
fwait
mov
cmp
fs
(bad)
imul
dec
sub
stos
dec
cs
outs
jl
or
iret
dec
push
imul
sub
(bad)
(bad)
mov
stos
sbb
retf
loop
or
jne
dec
fstp
fwait
mov
mov
das
dec
retf
stc
dec
data16
mov
dec
fwait
dec
push
fwait
jmp
dec
fld
fisubr
push
(bad)
jl
or
jp
(bad)
jmp
dec
or
adc
push
and
pop
pop
pop
dec
retf
(bad)
(bad)
(bad)
dec
in
mov
cli
mov
cmp
dec
loope
test
pop
(bad)
(bad)
(bad)
jmp
jmp
stc
mov
pop
or
leave
mov
stos
(bad)
(bad)
jne
imul
enter
add
in
in
retf
sub
mov
push
shl
fild
adc
sar
mov
or
nop
out
cli
pop
std
mov
cmp
dec
mov
pushf
pop
dec
or
inc
mov
add
or
test
fist
pop
inc
xor
fimul
push
sub
std
sub
cdq
repz
mov
add
hlt
(bad)
mov
and
inc
push
pop
jmp
fbld
in
sbb
(bad)
cli
out
push
inc
lods
js
lods
js
(bad)
(bad)
inc
clc
int3
test
pop
fidivr
cmp
sub
ret
pop
clc
(bad)
push
(bad)
mov
or
pop
es
push
sub
mov
or
jmp
dec
cmp
loope
movs
push
stos
push
fwait
inc
repnz
push
jp
mov
test
jmp
enter
sbb
or
(bad)
call
movs
jne
add
int
js
loop
ds
movs
or
sbb
mov
xchg
popa
in
sbb
xchg
lods
jg
js
pop
nop
fcmovnb
sar
std
(bad)
mov
fdiv
mov
in
(bad)
(bad)
cmp
mov
adc
in
mov
imul
cld
or
push
jno
and
out
sub
mov
(bad)
out
jb
stos
sti
mov
pop
clc
push
clc
sub
jg
mov
repz
mov
inc
sar
mov
mov
clc
sub
(bad)
call
lods
addr16
sbb
sub
test
pop
xor
mov
mov
lods
mov
clc
retf
mov
sbb
nop
in
loopne
sbb
retf
popa
or
dec
pop
pop
xchg
add
add
das
adc
cli
mov
add
cli
cmp
movs
aam
sahf
push
fistp
movs
xchg
shl
push
std
xor
xchg
enter
add
fsubr
push
(bad)
inc
mov
pop
cli
jp
scas
test
lock
add
dec
jne
(bad)
stc
or
push
scas
stos
lods
mov
jmp
or
lock
dec
retf
add
lods
movs
push
mov
icebp
jg
pushf
sahf
jns
cli
sbb
(bad)
(bad)
dec
cmp
cmp
inc
(bad)
das
fisub
stc
jmp
mov
mov
loopne
call
or
cmp
lods
or
loopne
mov
mov
scas
test
fwait
and
jmp
jmp
fist
mov
push
dec
stos
ss
adc
retf
outs
inc
sbb
cmp
je
push
pop
push
retf
(bad)
(bad)
call
xchg
mov
clc
inc
push
inc
fidivr
push
add
jmp
lods
dec
add
mov
mov
mov
jmp
fbld
mov
cmp
dec
cli
pop
retf
dec
(bad)
and
and
mov
(bad)
(bad)
jg
jns
pop
mov
ins
adc
(bad)
pop
xchg
je
das
test
cdq
movs
cmp
jp
shr
mov
repnz
push
imul
cmp
sbb
test
fdivr
(bad)
call
pop
imul
pop
cld
jg
push
push
sbb
fcmovb
(bad)
push
fcomip
dec
jl
sub
push
movs
scas
sar
bound
xchg
inc
cmc
(bad)
inc
(bad)
mov
fbld
outs
or
movs
pop
mov
mov
mov
and
dec
sti
sbb
movs
dec
inc
and
scas
in
movs
outs
or
cdq
mov
jmp
outs
inc
jno
or
push
mov
out
mov
(bad)
(bad)
call
add
mov
dec
icebp
mov
loop
adc
std
retf
movs
enter
shl
(bad)
call
daa
ja
mov
jl
retf
cmps
adc
adc
outs
out
in
movs
iret
cli
test
test
xchg
mov
gs
and
add
retf
sbb
jge
jmp
dec
sbb
fcomp
sbb
clc
jmp
sti
sti
imul
sub
fdivr
fs
movs
sahf
push
test
push
push
pop
push
sbb
sbb
cmp
(bad)
(bad)
jmp
out
in
push
xchg
je
jmp
jnp
ja
mov
mov
push
mov
imul
push
jg
add
cli
pop
lock
sbb
call
outs
mov
ret
arpl
js
mov
in
jmp
cs
fs
push
sti
stos
(bad)
rol
pop
icebp
cmp
fidivr
stc
mov
pop
adc
test
pop
(bad)
stos
mov
adc
push
pop
dec
and
push
repz
or
sbb
sub
loopne
inc
fmulp
mov
movs
push
push
sub
fcomp
cli
jmp
cmc
sbb
clc
cli
sub
(bad)
sbb
or
dec
popf
cli
cs
fild
ret
pop
mov
ret
dec
cmp
pop
addr16
push
std
and
test
dec
ficomp
dec
fnsave
fisubr
or
(bad)
(bad)
(bad)
(bad)
call
cli
cmp
cwde
sub
std
gs
cdq
sub
sub
mov
cmp
(bad)
fstp
jle
retf
fucomip
cmps
retf
ins
imul
dec
inc
dec
jmp
mov
sti
fwait
(bad)
outs
fisubr
cmp
fisub
fcos
(bad)
(bad)
mov
mov
dec
fs
test
out
(bad)
popf
and
push
jecxz
sbb
adc
pop
mov
push
fisubr
push
mov
bound
mov
cmp
mov
mov
xchg
pop
test
dec
xor
(bad)
(bad)
jmp
push
pop
jbe
sti
sub
lock
mov
cmps
inc
adc
push
add
call
jmp
add
jecxz
clc
sub
push
sti
mov
push
jecxz
jecxz
leave
cdq
mov
leave
mov
pop
or
mov
shl
std
cmps
mov
fdiv
imul
sub
fisttp
ins
add
ficomp
sub
and
int
idiv
shr
and
jns
dec
sub
add
or
retf
cmp
retf
in
or
jmp
ds
clc
add
dec
outs
or
call
jo
lds
mov
cdq
outs
lahf
(bad)
(bad)
mov
imul
adc
stos
into
pushf
fcmovne
adc
stc
mov
lds
sbb
or
das
mov
mov
(bad)
(bad)
clc
js
cwde
push
std
jae
cmps
cwde
cdq
cmp
mov
test
ret
add
push
cmp
mov
fisttp
inc
fstp
stos
sbb
pop
cld
scas
das
enter
repz
repnz
xchg
pcmpeqw
dec
inc
sub
push
das
lahf
arpl
push
in
imul
add
pop
cmp
retf
and
mov
enter
(bad)
mov
imul
int
fimul
mov
stos
fwait
push
add
inc
cmp
push
xchg
push
stc
or
pop
jl
imul
sub
outs
pop
leave
or
(bad)
mov
mov
cdq
jmp
dec
mov
in
(bad)
(bad)
dec
xor
sar
jnp
mov
rcl
fldl2t
fwait
(bad)
mov
stos
mov
fcmovnu
shl
imul
iret
or
cmc
ds
inc
retf
ficomp
jmp
adc
rcr
and
test
push
sar
ret
mov
lahf
mov
retf
movs
inc
cli
dec
(bad)
movs
and
inc
push
sti
or
or
cmp
mov
xchg
idiv
sub
push
pop
pop
xchg
mov
(bad)
(bad)
push
jle
retf
mov
sbb
ins
mov
or
rcr
repnz
(bad)
call
outs
jnp
xchg
sbb
dec
sbb
mov
gs
idiv
retf
or
test
and
cli
(bad)
(bad)
call
pop
jne
mov
or
icebp
xchg
sub
cli
aas
call
push
xor
jmp
pop
add
int3
cmp
test
ror
scas
push
cli
out
jmp
push
outs
or
jae
(bad)
call
hlt
push
dec
imul
push
mov
adc
jb
out
pushf
iret
sub
stc
(bad)
(bad)
out
clc
enter
pop
mov
loop
(bad)
pop
mov
imul
rcr
clc
jle
dec
call
and
mov
nop
lds
sbb
pop
int3
lods
lods
cmps
movs
or
jg
daa
mov
mov
cwde
ins
icebp
adc
fstp
int
hlt
ror
or
aas
fcom
(bad)
(bad)
(bad)
fidivr
das
push
lods
pop
cld
cli
fisubr
movs
mov
test
lahf
pushf
scas
push
jno
(bad)
(bad)
inc
mov
loop
sbb
sti
push
or
movs
lea
cmp
mov
test
push
and
leave
into
inc
aas
xchg
mov
add
(bad)
add
inc
loop
mov
scas
mov
movs
adc
mov
out
mov
inc
clc
mov
in
sub
dec
dec
add
adc
in
dec
enter
mov
push
imul
(bad)
(bad)
mov
mov
stos
sbb
jo
movs
movs
sub
int
inc
adc
pop
jo
sub
ja
call
inc
call
add
jns
stos
or
loopne
xchg
scas
in
mov
sar
clc
mov
push
push
pusha
aas
in
or
pushf
xor
arpl
push
shl
(bad)
inc
pop
sub
stos
fcmovnb
pop
repz
out
push
mov
push
mov
sub
or
push
lds
test
jmp
mov
(bad)
(bad)
mov
mov
mov
push
movs
push
jmp
push
movs
dec
fadd
stos
sub
jnp
js
cli
push
or
fwait
test
cs
mov
jp
mov
scas
xchg
sbb
(bad)
or
js
loop
(bad)
jg
cld
sbb
int
cli
pop
mov
sbb
sub
push
push
cmps
push
or
or
retf
bnd
scas
fild
js
es
push
cdq
(bad)
in
dec
out
in
(bad)
cli
cli
call
dec
mov
jnp
mov
fwait
cmp
clc
jmp
shl
sbb
cmp
sub
xchg
or
mov
rcl
aam
lods
fsubr
pop
sbb
and
or
sti
enter
cmp
mov
loop
stos
iret
cmps
std
(bad)
(bad)
dec
xchg
jp
in
mov
retf
dec
gs
cmps
imul
xchg
push
push
es
sbb
retf
(bad)
fisttp
or
fidiv
jp
lods
jle
cmp
sub
dec
jmp
daa
cmp
pop
mov
mov
(bad)
(bad)
(bad)
jmp
mov
push
(bad)
fcmovnb
mov
mov
dec
std
push
mov
or
xchg
pop
cmp
mov
cwde
xchg
pop
stos
pop
sub
mov
jmp
call
les
mov
xchg
jmp
mov
push
push
sbb
(bad)
(bad)
leave
sti
test
jmp
jmp
or
dec
mov
aad
cwde
enter
mov
ja
cmp
or
leave
fsub
add
cmp
lock
outs
ds
inc
cld
jmp
mov
(bad)
sbb
cmp
aaa
adc
int3
arpl
into
pop
mov
jp
je
bound
mov
aad
mov
fmul
(bad)
retf
mov
clc
out
es
dec
(bad)
mov
call
mov
clc
aad
das
pop
es
mov
pop
int3
mov
or
push
push
push
icebp
mov
test
or
imul
and
jg
cmc
mov
enter
psrlq
adc
inc
adc
mov
aaa
je
fwait
inc
retf
or
pop
cld
dec
aas
cmp
dec
mov
comiss
retf
in
sub
mov
pop
outs
jo
popa
lods
movs
pop
cmp
repnz
pop
leave
scas
fidivr
fldenv
into
sbb
adc
fidivr
call
das
or
mov
std
jg
fisubr
js
push
fwait
ins
inc
ror
(bad)
mov
jno
or
mov
(bad)
mov
or
jbe
retf
call
ret
nop
pop
jne
push
xor
mov
loop
or
jnp
(bad)
(bad)
mov
fwait
addr16
into
clc
test
js
sub
push
aas
pop
adc
mov
pop
mov
(bad)
(bad)
jmp
xchg
mov
cli
(bad)
je
xchg
data16
sub
imul
(bad)
jp
pop
leave
cs
sbb
imul
movntps
retf
mov
sti
dec
jmp
(bad)
(bad)
call
fbld
dec
ins
mov
push
mov
bound
push
push
movs
outs
sub
movs
icebp
pop
std
(bad)
aas
mov
push
push
jg
aam
(bad)
fsub
stos
push
sub
mov
jle
lods
add
scas
ja
and
fadd
dec
iret
ds
call
mov
cli
les
and
mov
cmp
(bad)
(bad)
(bad)
jmp
loopne
lods
leave
add
push
leave
icebp
pop
scas
imul
movs
js
idiv
dec
mov
(bad)
jg
jae
call
push
cmp
mov
test
mov
mov
std
inc
(bad)
shl
adc
and
daa
outs
mov
jg
jecxz
pop
dec
dec
dec
(bad)
(bad)
(bad)
jg
dec
mov
pop
icebp
test
(bad)
std
mov
cld
xor
pushaw
sbb
(bad)
push
add
or
(bad)
(bad)
(bad)
jmp
rcl
nop
mov
pushf
das
fmul
imul
push
jmp
jns
outs
fdivr
push
push
test
(bad)
jmp
sbb
repnz
sub
and
dec
pop
lods
(bad)
mov
leave
lea
imul
mov
mov
fistp
movs
ins
out
outs
jg
cld
jns
dec
enter
test
outs
xor
dec
mov
or
xor
mov
clc
sbb
push
(bad)
jg
sub
addr16
cli
mov
dec
pop
loope
(bad)
jmp
out
fidivr
fisub
mov
clc
add
push
add
cmp
dec
imul
sub
jp
enter
push
mov
cwde
(bad)
leave
clc
jg
inc
cld
push
mov
js
jns
mov
(bad)
(bad)
jg
fstp
mov
push
jmp
push
movs
ds
pop
cmps
sbb
adc
(bad)
in
lahf
xchg
das
cs
(bad)
call
stos
fisub
mov
movs
cld
or
fisttp
mov
lods
shr
fcmovne
sub
test
lock
or
mov
or
add
call
add
cdq
cs
lea
test
movs
test
cs
mov
jg
int3
mov
ins
inc
mov
inc
push
cli
jl
xchg
mov
ss
push
mov
fldl2t
scas
mov
and
mov
(bad)
jmp
dec
fstp
xchg
or
sub
out
(bad)
aam
(bad)
jg
add
repz
or
loope
fadd
(bad)
popa
pop
mov
mov
das
mov
sbb
mov
fstp
adc
dec
int3
int3
movs
icebp
mov
movs
pop
mov
ds
test
cmp
aas
xchg
jg
fs
test
dec
pop
mov
stos
fisttp
movs
mov
jmp
repnz
retf
jmp
pusha
sbb
inc
int
or
(bad)
cli
(bad)
(bad)
(bad)
ds
lods
cmps
sub
ret
into
xchg
imul
mov
scas
adc
(bad)
cs
adc
ss
out
mov
(bad)
inc
cld
std
scas
mov
dec
cs
dec
retf
imul
mov
jo
test
sub
jmp
cmp
jp
dec
pop
cli
sti
jmp
fucomi
sub
shl
test
fwait
into
push
call
or
cwde
enter
push
dec
cmp
push
dec
mov
sbb
scas
call
add
imul
fisubr
push
(bad)
cli
mov
push
and
into
xchg
jae
cmp
or
cdq
pop
imul
xchg
repnz
cmp
cwde
fstp
(bad)
dec
dec
mov
dec
retf
and
cdq
fcmovnb
lds
scas
sbb
cli
outs
cli
push
cli
sub
call
sahf
movs
mov
arpl
pop
push
pop
fidivr
and
lods
dec
ret
(bad)
(bad)
(bad)
(bad)
out
cdq
or
cli
or
retf
call
inc
sub
dec
repnz
inc
sti
cli
cli
(bad)
js
dec
fidivr
jg
(bad)
fadd
mov
cmp
cmp
ins
jmp
mov
(bad)
sti
test
sub
enter
(bad)
mov
adc
loope
mov
neg
jp
xor
ins
push
pop
dec
fmul
mov
fdiv
(bad)
(bad)
dec
es
iret
sbb
loop
mov
adc
lea
dec
das
call
cdq
ds
fld
sbb
cli
cmps
sub
sbb
add
sub
sbb
or
in
sti
add
sar
nop
cmc
enter
cs
cmp
or
retf
push
sbb
dec
mov
movs
mov
sub
push
cld
inc
lds
(bad)
fild
(bad)
dec
sub
dec
test
jmp
dec
ins
push
scas
mov
pop
and
jmp
rcr
mov
jae
or
sti
mov
call
mov
sub
pop
dec
fidivr
mov
fist
jo
and
clc
adc
or
or
xchg
push
mov
call
jmp
push
ds
and
mov
push
cli
sbb
ss
inc
xchg
icebp
xor
test
imul
xchg
jmp
(bad)
(bad)
inc
pop
push
das
and
into
arpl
enter
or
mov
jae
mov
fucompp
or
push
in
add
pop
lods
push
icebp
cmp
jl
cs
mov
fcmovb
inc
shl
pop
sub
or
inc
pushf
aad
push
(bad)
(bad)
(bad)
inc
inc
push
cmp
(bad)
ficomp
sub
dec
(bad)
sub
push
push
movs
js
cmp
inc
into
loop
(bad)
icebp
add
cli
ja
sub
das
retf
pop
jne
movs
mov
mov
xor
and
mov
dec
sbb
sub
test
fld
jg
fdivrp
dec
sbb
sbb
or
mov
dec
mov
push
dec
jne
add
mov
pusha
mov
xor
and
test
in
push
jl
pop
mov
jmp
mov
(bad)
(bad)
call
ins
or
mov
add
test
or
mov
cmp
movs
jbe
add
jmp
dec
cmp
or
adc
movs
sub
inc
enter
icebp
mov
or
fst
(bad)
sub
dec
out
jo
mov
cmp
or
sti
sbb
mov
push
pop
push
push
mov
ds
(bad)
fwait
test
(bad)
dec
int
sub
fucomp
leave
retf
retf
stc
xchg
pop
sbb
test
cmc
jmp
push
(bad)
pop
jnp
into
pushf
gs
cs
test
(bad)
jg
mov
cmc
mov
sti
retf
js
mov
test
pop
leave
stc
push
cmp
jle
int
add
sub
jmp
push
sar
or
mov
xchg
(bad)
(bad)
push
dec
dec
jmp
and
and
scas
jmp
sub
dec
mov
push
retf
sub
call
sbb
rcr
stos
and
push
call
pop
cmp
inc
adc
call
mov
push
cmp
sub
nop
(bad)
(bad)
(bad)
inc
(bad)
fcmove
dec
push
stos
sti
scas
jp
push
lock
sub
sub
fst
dec
(bad)
mov
mov
sub
call
xor
xchg
pop
das
xor
call
loop
pop
dec
retf
cdq
sub
mov
mov
movs
(bad)
fsubrp
mov
cmp
add
mov
call
es
pop
mov
push
cmp
nop
pop
movs
push
lock
inc
jmp
cwde
(bad)
xor
movs
xor
(bad)
call
mov
pop
fnstsw
or
jmp
test
cmp
or
or
movs
ss
xchg
mov
mov
inc
data16
mov
inc
xchg
pop
mov
or
outs
push
xlat
or
or
dec
dec
sbb
std
or
push
out
(bad)
jmp
pop
(bad)
repnz
sbb
sub
push
mov
(bad)
jmp
in
fs
or
outs
sbb
mov
mov
mov
ret
stos
or
or
cmp
cmc
(bad)
call
(bad)
clc
fcomi
mov
sub
enter
cmp
sbb
cmp
xchg
push
sahf
dec
sub
sbb
mov
or
xchg
sub
retf
xchg
cmps
and
lahf
push
(bad)
(bad)
(bad)
ins
or
fwait
enter
movs
add
(bad)
mov
movs
gs
jp
xchg
jmp
loop
mov
sub
inc
pop
outs
cmps
mov
cmp
in
jns
movs
popf
mov
inc
sbb
inc
cli
sbb
fwait
call
jnp
ins
sub
sbb
fild
adc
sbb
ror
push
outs
pop
cs
(bad)
(bad)
dec
jecxz
dec
dec
push
not
jg
jmp
fcomp
push
pop
outs
push
shl
xor
stos
and
jp
jmp
cli
(bad)
sti
enter
pop
sub
jle
stos
jmp
mov
(bad)
fild
mov
into
pop
(bad)
cli
pop
retf
xor
dec
cmps
aaa
pop
clc
pop
mov
jp
inc
(bad)
xchg
and
(bad)
dec
lahf
sub
cmp
or
push
mov
xor
into
repz
jnp
mov
mov
add
cmp
xor
pop
dec
pop
jmp
inc
cmps
mov
retf
jg
sub
or
cmp
loop
jg
mov
test
psubusw
cmp
mov
dec
pop
fst
push
sbb
das
push
clc
clc
fwait
sub
cmp
(bad)
(bad)
mov
cli
inc
adc
add
dec
inc
cmp
in
cmp
int3
(bad)
xchg
jle
sti
test
daa
sahf
or
int3
out
and
(bad)
call
outs
mov
lods
pusha
sbb
in
sub
(bad)
dec
jmp
dec
or
loope
cmp
mov
xchg
neg
mov
jns
cmp
fisub
das
sub
cwde
fadd
test
cmp
lods
jp
cmp
(bad)
(bad)
jmp
retf
(bad)
dec
cmp
fsubp
jp
cmp
and
cmpps
add
mov
(bad)
(bad)
dec
mov
dec
pop
xor
stos
movs
push
sahf
and
inc
call
imul
scas
mov
xchg
test
cwde
clc
jmp
in
mov
lock
and
bound
sub
(bad)
aad
(bad)
mov
(bad)
(bad)
movs
push
outs
test
cwde
mov
(bad)
call
inc
movsx
inc
sub
mov
jg
fdivr
cmp
dec
or
and
jmp
enter
ss
sub
dec
jmp
clc
(bad)
(bad)
call
mov
out
imul
jecxz
test
mov
and
scas
(bad)
adc
jmp
adc
add
jmp
sub
fbstp
inc
mov
and
outs
lea
sahf
push
outs
pop
and
cli
sub
cli
retf
pop
dec
push
ret
mov
(bad)
mov
enter
addr16
stos
inc
sbb
lods
sub
je
or
call
ja
mov
jmp
cdq
shr
push
lods
mov
or
sub
pop
mov
add
scas
jnp
pop
test
fcomip
(bad)
fsubr
sahf
retf
(bad)
fnsave
out
imul
cld
pop
or
mov
fdivr
jg
inc
inc
(bad)
push
cmp
jge
popf
jmp
call
rcl
mov
xor
add
fist
cmc
test
(bad)
(bad)
fisttp
mov
jae
pop
or
call
push
mov
and
test
push
sar
jmp
retf
mov
rcl
movs
out
test
pop
mov
ins
sar
popf
sar
pop
lds
fld
dec
movs
jecxz
sbb
push
test
nop
cli
mov
pop
mov
jne
call
cmps
dec
aad
(bad)
(bad)
dec
cld
jmp
adc
cdq
test
inc
mov
stos
enter
sub
jl
inc
xor
(bad)
(bad)
dec
scas
cmp
push
sbb
sub
sbb
jmp
ret
jmp
push
mov
sbb
cs
sub
(bad)
jmp
cwde
sub
in
call
les
shl
sbb
mov
scas
mov
call
mov
mov
adc
shl
sub
(bad)
jmp
xchg
loopne
cli
xchg
lods
sbb
xchg
sub
pop
or
mov
(bad)
(bad)
push
clc
push
int
dec
or
xor
adc
add
adc
adc
xchg
jl
std
out
push
aam
mov
mov
adc
and
and
mov
xchg
mov
adc
sub
xchg
pop
or
sti
(bad)
(bad)
(bad)
call
sbb
stos
in
pop
add
mov
outs
cmp
out
nop
pop
js
jg
inc
xchg
test
sbb
sub
mov
fild
cld
sub
xchg
jmp
sar
in
sbb
movs
popa
jp
jmp
lock
std
jmp
push
cmps
fcmove
sbb
fild
sbb
xor
jmp
sub
icebp
(bad)
(bad)
dec
mov
sbb
clc
fisubr
jle
mov
cmp
pop
fwait
std
(bad)
jg
pop
sbb
push
sbb
jne
call
imul
cmp
rol
pushf
xchg
idiv
push
pop
add
lods
mov
ds
dec
sbb
sti
stc
outs
imul
mov
(bad)
(bad)
dec
adc
stos
ins
out
imul
add
in
mov
sub
enter
ficomp
test
ret
jecxz
addr16
inc
pop
(bad)
cmp
xor
push
into
sbb
(bad)
in
out
mov
push
or
lock
jg
and
in
push
clc
scas
repz
call
(bad)
push
stos
mov
or
call
cli
(bad)
push
outs
movs
and
icebp
adc
sbb
and
jg
inc
adc
sub
out
jle
loope
xlat
inc
movs
mov
cli
call
out
sub
retf
sub
jp
pop
pop
lock
cmps
pop
sbb
lods
jmp
das
fcomp
inc
sub
sub
movs
iret
mov
sti
xor
(bad)
(bad)
mov
popf
sbb
hlt
mov
pop
push
jo
out
loope
pop
aad
retf
cdq
in
pushf
shl
pop
mov
aaa
out
das
push
leave
pop
je
retf
and
and
or
pop
add
aas
mov
jno
cld
(bad)
(bad)
(bad)
fnstenv
call
iret
iret
pop
stos
or
add
cli
mov
js
mov
(bad)
pop
imul
cmp
lock
call
adc
call
dec
push
pop
out
jo
mov
mov
(bad)
jg
aaa
test
fs
mov
mov
lods
cmps
sub
(bad)
(bad)
jl
mov
rcl
push
pushf
sub
fmul
retf
imul
pop
cmp
fisttp
sub
das
sbb
jmp
imul
push
(bad)
jnp
mov
sar
call
sub
push
mov
jmp
outs
push
jge
std
(bad)
mov
mov
jo
sahf
ins
(bad)
fisubr
icebp
sar
mov
fcomip
mov
push
cmps
mov
push
push
mov
stos
ss
stc
jp
mov
mov
cld
sbb
cli
cli
in
and
test
mov
lock
add
retf
jmp
clc
or
hlt
(bad)
jmp
mov
push
cmp
das
mov
out
adc
aas
adc
or
into
sub
(bad)
jmp
(bad)
(bad)
jmp
cli
mov
and
sahf
mov
stos
sbb
pusha
test
jmp
mov
cmps
ins
jp
(bad)
mov
or
sbb
loopne
in
repnz
or
stc
cwde
sub
pop
adc
inc
sub
sti
jmp
lock
loop
cmp
xchg
inc
xchg
mov
cmp
jecxz
(bad)
mov
stos
add
adc
jmp
int3
arpl
test
sub
aad
mov
fistp
mov
out
ins
jae
adc
imul
or
stos
add
clc
call
mov
dec
mov
sti
add
and
bound
pushf
out
cdq
(bad)
(bad)
jg
or
jp
mov
mov
stos
pop
daa
sub
lds
int3
shl
cmp
jg
int
jp
xchg
or
cmps
bound
sub
rcl
mov
dec
fs
es
cmp
mov
call
mov
mov
fcom
jp
enter
xlat
jmp
enter
call
shl
dec
mov
call
call
ins
sub
pop
cmps
inc
jnp
sub
popf
lea
cli
aam
jno
adc
or
mov
cld
lds
aam
dec
add
mov
leave
sub
cmps
cmc
call
mov
sub
jmp
xor
add
add
pop
repnz
cs
jp
push
jp
jb
std
sub
fist
add
retf
(bad)
jg
lods
mov
dec
xchg
inc
gs
push
stos
and
mov
popf
sbb
sub
cs
sbb
sbb
xchg
and
lea
stos
mov
lods
in
std
mov
xor
adc
leave
mov
jle
or
std
cmp
cld
xchg
mov
mov
stos
(bad)
xchg
mov
jb
pop
xchg
jne
int
add
mov
std
aad
pop
adc
ficom
(bad)
jmp
push
xor
sub
aad
lahf
call
mov
push
pop
rol
fiadd
pop
jmp
mov
stos
ret
and
ja
and
test
ret
mov
aas
cmp
in
(bad)
adc
loop
call
div
xchg
scas
sub
arpl
repz
sub
xor
fidivr
push
scas
fidiv
fild
test
cmp
outs
fidiv
call
mov
test
es
gs
mov
fstp
(bad)
cmp
adc
adc
call
arpl
callw
sbb
inc
loopne
push
jmp
xchg
or
lahf
fist
xor
cmp
mov
mov
jb
mov
sub
call
dec
cmp
std
add
mov
pop
mov
add
mov
adc
add
xchg
nop
out
sub
js
cmp
lahf
outs
lods
sub
out
lahf
div
push
jmp
pop
or
(bad)
stos
dec
ja
fnstsw
ds
push
xchg
jno
push
inc
lahf
sbb
pop
xchg
lods
mov
(bad)
fistp
in
stos
lea
fcomp
mov
sbb
stos
pop
outs
inc
push
out
mov
jl
js
inc
jl
mov
stos
mov
sbb
mov
push
dec
dec
in
test
cmp
fisubr
ficomp
(bad)
data16
pushf
out
push
and
in
dec
or
inc
loope
mul
popf
add
fdivr
stos
push
fcomi
push
out
push
inc
pushf
inc
jnp
cmp
push
dec
dec
div
fidiv
or
(bad)
in
sbb
mov
imul
and
retf
mov
ficomp
push
push
or
(bad)
loope
mov
in
push
dec
xchg
ins
(bad)
sbb
ins
ret
adc
lock
stos
jp
pop
fadd
addr16
les
in
es
xchg
pop
xchg
sub
add
xchg
xchg
imul
pop
pop
sbb
sar
mov
jg
pop
inc
inc
sub
out
push
push
pop
sub
push
neg
in
adc
jnp
loope
into
fild
call
neg
ins
jle
mov
icebp
cs
addr16
push
fnsave
out
jnp
xlat
sbb
fstp
pop
int3
(bad)
ja
jnp
push
in
fistp
jae
rcr
mov
inc
mov
cmp
lods
jle
sbb
inc
(bad)
cmp
push
in
icebp
loopne
jnp
fadd
das
cmp
outs
stos
daa
retf
imul
xchg
add
inc
ret
sbb
es
xor
ins
out
stos
stc
mov
sbb
jbe
xchg
push
mov
jl
cs
jp
sti
icebp
sub
test
ss
in
test
popf
int
push
aam
hlt
stos
add
fwait
iret
push
inc
stos
dec
xchg
scas
mov
pop
inc
add
aad
movsx
stos
jle
cld
arpl
daa
cmp
repnz
loope
popa
jns
iret
test
xchg
imul
lea
imul
rcl
dec
call
call
outs
or
pusha
retf
jle
in
outs
jbe
sub
adc
lahf
dec
adc
mov
mov
outs
pop
mov
lea
(bad)
fistp
in
scas
lea
ss
popf
sti
sti
push
xor
mov
pushf
in
pop
retf
mov
sbb
push
inc
inc
fcomp
or
dec
call
xchg
mov
mov
sub
loop
add
xchg
mov
call
fcomp
outs
dec
mov
loope
cmps
loopne
push
pop
aam
pop
mov
cli
dec
and
out
sub
sub
add
aad
mov
inc
push
cmps
push
lods
xor
stos
push
mov
xor
imul
idiv
outs
test
lods
push
mov
sbb
test
mov
push
scas
push
stos
mov
dec
push
mov
xchg
mov
es
imul
cs
pop
pop
push
or
inc
movs
dec
sub
cmps
jbe
jnp
mov
push
scas
adc
jl
mul
and
ins
imul
repz
ss
push
movs
jle
lods
pop
mov
push
scas
dec
cmps
bound
push
ror
jbe
retf
inc
ss
cli
femms
test
lods
outs
push
into
pushf
jne
imul
div
movs
xchg
push
ds
mov
(bad)
mov
fbld
mov
scas
in
es
out
jge
movs
push
cmps
bound
push
mov
out
in
cmp
movs
pop
xchg
js
outs
lahf
in
push
inc
stos
(bad)
mov
jecxz
movs
push
stos
shl
int3
push
es
sti
cdq
frstor
cmps
sbb
push
pop
call
movs
push
push
mov
mov
(bad)
movs
add
inc
push
aam
je
mov
div
push
push
retf
ds
test
movs
test
mov
movs
pop
cmps
inc
fild
neg
push
mov
hlt
push
mov
addr16
mov
jmp
arpl
and
scas
stos
mov
(bad)
popf
dec
dec
mov
mov
xor
movs
push
scas
fisub
ins
mov
movs
les
(bad)
fild
or
push
stos
mov
fstp
mov
push
movs
js
sahf
in
cmps
test
sub
push
scas
loop
fistp
mov
cwde
lods
enter
cmp
leave
call
mov
lods
movs
pop
push
push
ds
imul
(bad)
mov
stos
stos
(bad)
fild
es
mov
jmp
adc
mov
ds
dec
sti
xor
ss
stos
cmp
lods
sahf
in
jecxz
lods
fstp
ss
imul
cmps
push
scas
add
pop
out
mov
sub
jns
fdivr
clts
scas
fldenv
dec
loopne
lahf
jle
lods
sbb
out
(bad)
mul
jle
xchg
repz
mov
push
jbe
idiv
test
push
mov
pop
sahf
fnstcw
in
mov
mov
cmps
stos
(bad)
push
fdiv
push
test
mov
jnp
pop
cmps
dec
fidivr
or
jnp
ds
inc
and
mov
push
jge
sti
out
movs
mov
push
ins
push
mov
dec
icebp
(bad)
pop
retf
cs
mov
fucomp
sahf
movs
cmps
pop
sbb
scas
scas
push
lods
out
out
fisub
push
cmps
push
movs
mov
mov
pop
cmp
jnp
mov
lods
fldenv
push
cmp
addr16
stos
(bad)
fsubrp
mul
mov
scas
test
push
mov
out
jae
ds
sub
jecxz
sahf
aas
das
push
mov
cmps
ss
rcr
push
(bad)
stos
mov
jg
push
lds
int
dec
stos
inc
mov
fild
lahf
stos
push
movs
or
pop
jbe
cmp
sti
es
jp
test
mov
cmp
retf
lods
sub
out
mov
mov
sub
jns
cmps
dec
mov
imul
loopne
into
pop
push
sahf
outs
movs
pop
es
mov
mov
dec
push
mov
(bad)
jnp
sub
mov
in
scas
dec
stos
idiv
cmp
push
dec
scas
movs
jge
in
iret
mov
lods
lods
sahf
mov
sbb
test
sahf
lods
cmps
scas
lea
jl
es
movs
movs
popf
loope
repz
mul
jnp
aad
sahf
cmps
stos
fmul
movs
int3
push
lods
psadbw
jl
cld
push
lods
in
scas
mov
iret
jnp
pushf
push
push
stos
movs
cmps
mov
lods
cs
outs
sahf
es
xchg
movs
mov
or
push
mov
dec
xchg
cmps
scas
xchg
dec
fdivr
shr
test
mov
push
test
mov
std
xchg
aam
push
stos
loopne
inc
push
add
jns
scas
cmps
mov
jno
cs
mov
lods
cmps
popa
inc
sti
sahf
add
push
scas
push
mov
ffree
or
lods
pop
sub
cmps
int
std
in
movs
push
jns
ret
(bad)
scas
lock
outs
push
pop
mov
f2xm1
mov
jmp
lahf
out
pop
cmps
stos
jle
outs
scas
iret
into
out
shr
stos
pusha
jnp
(bad)
cmps
push
movs
adc
push
movs
stos
ds
push
mov
fbstp
mov
test
scas
pop
addr16
out
mov
mov
mov
push
mov
push
push
push
lods
scas
stos
movs
stos
div
cmp
push
sti
cmps
scas
push
retf
xchg
movs
inc
into
ja
out
push
sahf
neg
idiv
stos
push
cmps
pop
xchg
pop
mov
mov
push
test
mov
repz
stos
mov
ins
pop
pop
xchg
lods
(bad)
cs
cmps
test
mov
push
mov
fld
sub
sub
outs
dec
sahf
loope
dec
repz
scas
pop
test
lods
sub
repz
fistp
push
cmps
daa
into
push
mov
out
mov
les
movs
call
(bad)
push
movs
stos
push
cmps
cmps
cs
scas
movs
jns
neg
jnp
inc
pop
xchg
ss
mov
push
mov
out
push
arpl
leave
iret
jbe
test
cs
nop
(bad)
jnp
push
imul
cmp
test
adc
in
in
cmps
in
movs
stos
push
mov
imul
cmps
add
push
stos
xchg
push
nop
mov
inc
push
scas
loopne
lods
mov
dec
xor
imul
push
cmps
lods
push
movs
push
test
xor
out
mov
push
pop
(bad)
cmp
mov
add
test
sar
movs
push
pop
neg
ret
test
jbe
sbb
pop
outs
xor
mov
mov
inc
pop
push
es
test
psllw
dec
push
jle
fcmovu
adc
mov
int
mov
ds
pop
xchg
cwde
fnstsw
mov
test
fisubr
scas
push
scas
jg
push
imul
push
push
int3
out
add
pushf
call
push
pop
cs
push
test
push
mov
(bad)
into
mov
cmp
cmps
push
test
jmp
out
ds
push
iret
push
stos
movs
stos
test
(bad)
scas
jnp
mov
iret
sahf
ss
dec
movs
dec
xchg
jnp
cmp
push
jbe
jns
sub
jle
test
mov
loopne
xchg
call
out
mov
jne
sbb
ins
ss
jmp
retf
movs
cmp
mov
push
(bad)
inc
cmp
sbb
jnp
jbe
cwde
xchg
enter
xchg
fidiv
lods
push
scas
neg
push
lods
sahf
in
loop
xchg
cmc
jbe
mov
sbb
aam
jb
ss
int
pop
iret
mov
mov
jns
jmp
iret
repz
test
lods
imul
loopne
or
lock
push
pop
mov
jbe
dec
mov
push
mov
push
stos
cmps
scas
movs
scas
mov
sahf
mov
test
ins
vmread
cmps
(bad)
scas
es
cmps
sahf
scas
rcl
fsubr
stos
dec
inc
cmp
jae
xchg
mov
scas
scas
jge
add
lock
data16
push
loop
test
push
shl
ror
cmps
push
cmps
movs
push
call
xchg
cli
dec
lods
(bad)
movs
sti
sahf
idiv
test
push
lods
scas
push
movs
xchg
jge
ficom
push
inc
push
jno
outs
movs
popa
inc
mov
imul
push
lods
scas
loop
scas
jnp
cmps
(bad)
mov
pop
xchg
popf
ds
lods
push
ins
adc
cmps
sub
scas
inc
xor
cmp
or
push
mov
inc
lea
sbb
dec
mov
mov
cmp
push
test
ja
fcmovnb
push
dec
(bad)
jle
mov
or
outs
xchg
aad
xchg
cmp
mov
out
mov
push
into
push
lods
jbe
push
mov
mov
mov
xchg
cmp
push
lods
jnp
push
popa
add
cmp
ds
lods
or
mov
jmp
cmps
cmps
lods
mov
mov
push
push
xchg
movs
xchg
inc
push
mov
stc
cmp
mov
fstp
push
sub
cmps
scas
sub
cmp
push
jno
cmps
sahf
fisttp
mul
rol
scas
loopne
outs
jl
popa
aas
into
sahf
push
mov
pop
daa
scas
cmps
movs
jmp
jns
cmps
sbb
jns
push
push
test
neg
pusha
and
inc
call
jne
cmp
push
stos
mov
daa
mov
pxor
push
inc
mov
mov
cmps
lods
(bad)
mov
jno
je
mov
or
loopne
out
xchg
aas
faddp
jecxz
lods
jle
stos
push
cmps
ds
push
cmps
or
push
mov
or
mov
add
push
push
shl
xchg
xchg
sub
stos
icebp
jle
das
xchg
mov
test
(bad)
shl
jle
fidiv
lods
jmp
rcr
pop
scas
es
inc
dec
dec
neg
cmps
scas
ds
and
cmps
in
into
jge
dec
repz
test
xchg
int3
cmps
scas
test
mov
cmp
cmps
jge
stos
repnz
scas
test
test
sbb
ss
movs
add
data16
scas
out
push
cmps
sahf
add
sahf
movs
lds
aaa
inc
pop
inc
mov
or
mov
fdiv
push
mov
cmp
movs
or
jmp
test
or
jns
mov
movs
mulps
push
push
pop
js
lods
out
pushw
push
loope
aad
cmp
pusha
mul
lods
(bad)
add
sbb
repnz
dec
mov
out
stos
push
test
mov
aaa
js
xlat
mov
lods
lods
jl
out
movs
movs
mov
pushf
jmp
push
cld
push
cld
scas
inc
stos
loope
rol
test
daa
xor
sub
sbb
cmp
push
scas
scas
mov
(bad)
jo
int
ds
lods
push
stos
ins
pop
test
pop
add
jo
adc
sbb
push
mov
add
in
test
js
adc
dec
push
movs
test
outs
scas
nop
mov
inc
ds
test
mov
push
xor
cmps
movs
cmps
add
test
jbe
rcl
shl
push
xchg
out
cmp
es
movs
(bad)
(bad)
push
and
iret
mov
mov
lods
mov
cmps
movs
xchg
mov
push
test
push
sahf
imul
scas
add
push
inc
ja
shl
es
pop
mov
cs
stos
scas
push
movs
sub
push
cmps
fldcw
dec
lods
and
sbb
xor
mov
es
movs
out
out
cmp
mov
xlat
sub
push
movs
cmp
mov
push
test
sar
stos
mov
add
ror
ficom
mov
push
cmp
imul
mov
iret
xchg
in
mov
cs
in
jae
push
lods
pop
push
mov
out
sahf
out
lods
test
movs
mov
movs
ss
popf
push
test
lahf
out
mov
lods
test
mov
mov
mov
pop
test
test
push
pop
push
(bad)
not
mov
pop
jns
aaa
cmp
mov
out
test
add
lahf
out
movs
mov
cmp
inc
mov
lods
inc
stos
cmp
mov
mov
out
outs
test
scas
or
mov
adc
lods
int
fimul
jl
pop
inc
push
test
push
test
(bad)
push
sub
test
jbe
into
mov
mov
lods
outs
scas
dec
mov
clc
inc
scas
rcl
mov
mov
jbe
sub
jo
mov
scas
pusha
cmps
add
ret
mov
es
push
jo
add
shr
popa
(bad)
jae
or
mov
daa
rol
test
pusha
mov
add
js
out
inc
mov
mov
ss
push
data16
cmc
adc
ss
push
cmps
fistp
fwait
es
test
(bad)
sti
sahf
movs
out
es
push
scas
test
sahf
fadd
sub
ins
dec
jo
inc
cs
pop
or
cs
jle
mov
lds
stos
push
push
xchg
mov
cdq
hlt
int
pop
scas
push
test
pop
cmp
cmp
mov
(bad)
call
aaa
scas
(bad)
icebp
js
clc
push
mov
into
ins
(bad)
sbb
into
or
icebp
movs
fadd
ret
scas
inc
lahf
imul
dec
push
pusha
outs
xchg
sahf
bswap
rcr
mov
hlt
dec
cmps
enter
inc
xchg
or
mov
imul
cmps
rol
lods
xchg
adc
xchg
test
mov
or
cmp
scas
icebp
pop
mov
fldcw
jle
call
adc
ds
iret
cmps
push
cmps
mov
push
add
cmp
neg
push
sti
(bad)
lods
pop
cmps
add
js
jle
lods
movs
scas
xlat
jo
ja
mov
ds
movs
inc
jp
out
es
data16
loopne
aaa
iret
not
stc
mov
cmps
xlat
mov
sbb
movs
(bad)
test
add
popf
jle
fst
push
or
add
cs
movs
sbb
int
jbe
(bad)
mov
lods
sub
push
fcom
dec
cmps
(bad)
scas
jg
movq
cmps
xchg
scas
outs
stos
out
push
push
and
stos
push
iret
aad
hlt
lock
pop
enter
pop
sbb
div
cmps
cmps
cmp
je
fld
lods
sbb
sub
sub
push
test
fdiv
fsubrp
scas
test
add
lahf
lods
push
out
cmps
xor
lock
xchg
cmps
mov
inc
xchg
jle
cmps
das
mov
mov
inc
cmps
iret
add
jo
jno
iret
scas
ds
jecxz
pop
fsubr
test
mov
ror
sbb
popa
mov
add
push
xor
cs
jecxz
sar
mov
mov
add
inc
add
mov
cmps
push
ss
push
lods
scas
sub
adc
idiv
cmp
cmp
cmp
push
fdivr
iret
mov
mov
add
je
std
ins
push
push
mov
lahf
push
stos
cmp
lock
sbb
sbb
mov
sub
pop
movs
jnp
jl
and
cmps
shld
add
lods
add
les
test
adc
xchg
add
add
pop
add
repnz
pusha
movs
sahf
scas
jmp
stos
das
mov
and
adc
test
scas
inc
lds
aas
dec
cli
sbb
test
sub
cmp
(bad)
test
mov
cs
cmps
mov
add
jecxz
lds
cmps
stos
xchg
mov
inc
ins
pop
jmp
retf
icebp
into
jmp
add
mov
mov
push
jae
in
fisub
or
imul
mov
into
dec
sti
scas
jns
mov
push
sub
aaa
mov
bound
sbb
sbb
into
push
inc
xor
test
inc
and
pusha
leave
push
test
cmps
pop
scas
push
jl
fiadd
test
mov
addr16
adc
lods
(bad)
push
sahf
cmps
jnp
test
sti
xor
jnp
test
movs
retf
sbb
lods
movs
push
mov
add
cmps
stos
pop
(bad)
adc
add
cmp
test
mov
mov
out
ins
outs
mov
lods
sahf
clc
cmp
push
push
test
jle
(bad)
test
mov
mov
sub
rol
push
test
push
jl
cmc
push
scas
inc
mov
cmp
add
jne
ds
xlat
pop
cmps
push
cmp
mov
mov
test
cmp
sub
mov
movs
in
popf
mov
jbe
ja
mov
test
mov
out
scas
mov
push
stos
(bad)
jle
movs
jbe
imul
mov
daa
lods
in
jge
shr
daa
aad
out
test
scas
xchg
fcomp
pusha
das
aad
push
mov
sbb
addr16
xor
add
shr
cmp
(bad)
movs
dec
sahf
cmps
sahf
loope
mov
mov
ds
sbb
push
or
imul
rol
outs
leave
ins
and
cmp
js
xchg
fidiv
fld
fidivr
dec
mov
ja
push
mov
mov
test
scas
jnp
jnp
sahf
cmps
mov
mov
add
lods
cmc
into
pop
mov
push
or
imul
jg
xor
cmps
pushf
lods
(bad)
and
sar
mov
dec
xchg
dec
movs
(bad)
mov
push
(bad)
mov
lahf
sbb
jge
loope
sahf
jo
bound
movs
scas
test
push
fcomp
out
ds
cmps
ss
adc
jmp
in
stos
mov
push
scas
dec
mov
mov
out
fnstenv
in
sub
add
add
mov
mov
cmp
js
pop
mul
in
mov
ins
xchg
jle
add
lea
xchg
push
loopne
dec
cmps
jns
mov
cs
imul
test
mov
into
test
loopne
neg
jle
inc
dec
scas
add
sbb
daa
add
(bad)
cmps
test
pop
push
out
je
(bad)
int3
out
pop
xchg
cwde
test
test
and
loopne
dec
cs
(bad)
addr16
dec
pop
mov
push
push
mov
cmpps
push
ds
ja
mov
mov
pop
es
stos
add
xchg
inc
(bad)
xchg
test
push
iret
xchg
outs
mov
out
lods
retf
sub
loopne
cld
push
sar
push
test
push
stos
cmp
or
jbe
push
mov
or
cmps
or
iret
mov
sbb
(bad)
cmp
(bad)
test
loopne
mov
sbb
js
rol
cdq
jmp
adc
mov
adc
data16
(bad)
data16
or
adc
cmps
sub
out
sahf
test
mov
pop
js
call
fidivr
faddp
push
fisub
sahf
hlt
rol
sbb
into
lods
push
scas
(bad)
loop
sbb
cmp
imul
push
cmp
ss
pop
test
stos
out
imul
cs
lods
mov
inc
jle
mov
xchg
push
push
movs
mov
(bad)
cmps
dec
(bad)
xor
cmp
or
mov
sar
xchg
movs
test
inc
test
push
dec
mov
jo
cs
mov
fyl2x
or
out
mov
loopne
scas
outs
scas
and
mov
outs
cs
lods
into
mov
sub
cmp
in
mov
sbb
or
out
ret
mov
imul
sub
es
inc
inc
lea
scas
scas
test
js
mov
xchg
test
push
mov
xor
iret
loope
push
test
lods
fisttp
push
add
enter
mov
jmp
sbb
jecxz
add
es
push
push
scas
push
or
lods
push
(bad)
movs
xchg
(bad)
mov
mov
out
lock
scas
cmp
test
scas
pop
ret
es
icebp
jne
clc
push
push
es
push
stc
lock
scas
mov
dec
clc
es
fnstsw
dec
scas
mov
or
loope
add
sahf
scas
cmps
pop
jp
xchg
ins
or
push
imul
std
adc
pop
icebp
push
adc
jbe
data16
push
jecxz
icebp
xchg
cmps
push
ds
pop
push
stos
push
lods
ds
jo
call
dec
cli
push
stc
mov
mov
(bad)
mov
push
out
in
jbe
xchg
xlat
fisubr
inc
movs
lods
in
cmps
lods
popa
mov
fmul
das
ss
pop
addr16
mov
xchg
lea
fisubr
push
mov
test
out
scas
ins
(bad)
cmp
mov
push
pop
inc
xchg
fdivp
mov
(bad)
lock
out
mov
add
scas
push
dec
ror
lods
stos
rcr
xor
stos
inc
sysret
jo
loope
scas
pop
push
sar
popf
mov
into
call
(bad)
stos
mov
fisubr
pushf
cli
push
mov
stc
(bad)
mov
div
push
dec
pop
stos
cmps
xchg
jne
scas
cmps
cs
mov
mov
(bad)
jbe
cld
push
adc
movs
fsubrp
cmc
mov
ds
xchg
movs
f2xm1
adc
push
out
in
(bad)
mov
rcl
(bad)
cmps
xor
lds
ss
pop
pop
xchg
mov
push
lods
js
cmc
cmp
cmps
into
(bad)
rol
adc
out
leave
jecxz
push
mov
mov
and
mov
jno
es
fist
mov
std
fidivr
jp
test
movs
dec
mov
xor
imul
mov
pop
push
jg
(bad)
into
cli
mov
scas
movs
push
scas
movs
int
jnp
mov
scas
cmps
test
faddp
idiv
cmp
jmp
lds
sub
outs
test
or
xchg
push
mov
cmp
cmps
pop
rcr
push
outs
loope
inc
cmps
test
rcl
cmp
jmp
cmp
movs
jbe
push
adc
xor
pop
scas
addr16
(bad)
jp
daa
or
cmps
or
cmps
out
push
(bad)
sub
out
sbb
cli
push
cmps
pop
and
add
mov
mov
cmps
ds
cmps
jmp
mov
cmps
xlat
add
pop
idiv
js
fld
lods
int3
lahf
inc
imul
push
mov
or
cs
sahf
loopne
out
scas
popf
jbe
cmps
sahf
enter
push
loope
push
mov
xchg
stos
mov
xchg
stos
leave
dec
mov
ret
ja
cmps
xchg
push
push
popf
scas
stos
sti
inc
sub
pop
push
mov
jp
addr16
test
and
xchg
lods
mov
movs
jnp
neg
xchg
push
scas
mov
mov
push
stos
nop
arpl
(bad)
mov
mov
fidivr
cs
cmps
stos
(bad)
mov
push
lods
and
ds
fcom
dec
jle
test
push
mov
cmps
mov
cmc
ins
push
sahf
test
mov
push
test
xchg
push
xchg
imul
loope
mov
cmps
push
mov
repz
scas
push
lahf
fbld
daa
movs
push
lahf
cmps
rol
push
jne
push
test
cli
push
push
push
movs
pop
xchg
sbb
inc
sahf
sbb
into
cmps
push
inc
cmps
push
(bad)
ror
mov
lods
push
mov
ja
out
push
mov
outs
mov
jp
cmp
mov
scas
push
movs
sahf
call
cmps
scas
pushf
mov
pop
scas
mov
call
jae
push
ds
mov
xchg
pop
pop
outs
jl
(bad)
cmps
scas
xlat
inc
fidivr
push
dec
mov
mov
scas
dec
outs
mov
dec
scas
imul
ds
out
jno
fs
push
push
and
push
sbb
adc
mov
jns
cmps
push
scas
cmps
test
ss
icebp
push
mov
cmp
xor
lods
call
rol
outs
jl
mov
out
push
mov
lods
mov
push
adc
and
icebp
jecxz
scas
jbe
pop
xchg
cli
scas
movs
aad
xchg
or
icebp
or
pusha
cmp
int
sbb
push
push
xchg
xor
(bad)
push
and
daa
adc
loopne
mov
jo
mov
mov
cmps
sar
mov
mov
scas
ret
mov
(bad)
mov
jmp
pop
jnp
das
lods
xchg
outs
or
mov
loopne
scas
jmp
lods
mov
inc
adc
mul
xor
mov
sbb
or
mov
fdiv
mul
push
lods
ja
gs
and
mov
enter
out
cmps
retf
push
clc
pop
scas
pop
outs
push
cmps
push
cmps
ror
xor
(bad)
shl
js
jno
repnz
push
cmps
cmp
fisubr
lods
sub
(bad)
addr16
stos
cmp
clc
mov
mov
xchg
mov
shr
mov
lods
femms
nop
cmps
mul
les
mov
xchg
pop
and
data16
into
pop
aaa
leave
fucomp
jbe
iret
push
ins
fisubr
dec
pop
out
inc
or
mov
clc
cmp
test
test
mov
jbe
add
cmp
out
lds
btc
cmc
scas
pop
outs
cmps
dec
cli
lahf
mov
loop
pop
xchg
sahf
mov
daa
dec
and
inc
xchg
aaa
(bad)
ja
outs
jns
lock
cmps
xchg
push
scas
(bad)
mov
cdq
dec
mov
in
shl
mov
sub
pop
mul
add
push
mov
loopne
jo
imul
sub
das
aaa
and
jno
cs
movs
mov
enter
push
push
data16
rol
inc
push
lods
lods
push
mov
in
jge
pop
lods
cli
adc
(bad)
out
(bad)
mov
xchg
inc
dec
mov
mov
inc
test
das
loopne
xchg
mov
call
aas
scas
mov
mov
addr16
(bad)
mov
mov
rcl
and
clc
cmp
out
out
push
lods
loop
rcr
movs
repnz
outs
cmps
mov
lods
mov
mov
push
cmps
mov
jp
rol
inc
scas
pop
shr
iret
pop
enter
mov
ds
scas
ja
sbb
mov
inc
pop
push
add
mov
rcl
dec
sub
scas
dec
sahf
test
pop
mov
push
xlat
jle
(bad)
xchg
into
mov
pop
xlat
mov
push
cmps
lods
outs
ret
shl
sub
ss
push
aad
and
data16
call
movs
jmp
push
ds
jno
jne
test
movs
xchg
test
sbb
out
stos
scas
xchg
add
mov
test
(bad)
(bad)
sahf
push
sub
scas
or
xchg
add
or
push
movs
xchg
sbb
mov
lahf
ja
or
cmps
shr
scas
jge
movs
scas
scas
xchg
jbe
mov
leave
(bad)
pop
scas
cmps
div
ror
(bad)
scas
inc
cs
stos
addr16
mov
retf
or
mov
sar
cmp
ds
cs
rcl
dec
sahf
pop
mov
test
cs
sar
(bad)
lods
dec
ja
jmp
dec
scas
mov
dec
mov
cmps
cmps
xchg
inc
sahf
jns
mov
pop
es
mov
jle
mov
movs
test
push
dec
ror
(bad)
ss
call
push
ficomp
test
scas
aas
inc
or
push
scas
or
cmps
pop
pop
push
lods
mov
movs
iret
stc
dec
inc
fistp
push
es
dec
imul
push
test
outs
push
mov
neg
lods
es
pop
push
call
xchg
adc
pop
inc
or
pop
es
mov
cmps
es
add
das
inc
packssdw
out
lods
inc
or
push
mov
push
scas
fisub
mov
movs
nop
cmps
inc
mov
out
pop
mov
pushf
mov
ss
push
(bad)
dec
dec
in
add
lahf
pusha
call
aas
out
xchg
lds
movs
sahf
cmps
dec
mov
addr16
push
push
(bad)
cs
xor
repz
mov
cmps
stos
push
fidivr
mov
mov
sbb
jmp
inc
push
dec
scas
push
inc
ss
or
(bad)
inc
stos
xor
punpcklwd
push
lods
enter
rcl
into
xlat
jle
push
and
pop
lds
es
test
hlt
cs
push
lock
dec
movs
dec
stos
jmp
aaa
dec
idiv
es
sahf
or
out
push
in
pop
es
mul
pop
jmp
(bad)
push
clc
sahf
lods
xchg
cs
inc
and
fbstp
test
jbe
jle
inc
mov
aad
fisubr
clc
push
test
xchg
neg
mov
daa
push
stos
xchg
pop
lock
popf
fimul
push
xchg
sub
dec
jnp
mov
movs
add
xor
mov
push
xchg
push
out
ins
fnstsw
lods
sub
dec
cmps
gs
daa
outs
lods
sahf
lods
sar
imul
xor
or
mov
mov
sub
loope
adc
push
dec
mov
les
jbe
mov
(bad)
scas
outs
outs
mov
mov
inc
cs
cmps
neg
clc
fidivr
mov
mov
stos
mov
sbb
push
movs
xor
mov
cwde
mov
add
aaa
mov
and
mov
mov
or
aas
scas
mov
sbb
aaa
jo
cmp
or
lods
addr16
pop
jbe
sbb
xchg
out
dec
ja
jl
cmp
xchg
scas
mov
jge
adc
push
mov
mov
shl
not
mov
div
cmp
scas
inc
push
push
cmps
iret
retf
mov
dec
out
push
stos
addr16
(bad)
cmps
arpl
aaa
pop
push
mov
out
stos
out
sahf
mov
inc
adc
test
into
add
push
lea
jne
xor
test
cmps
mov
jle
push
pop
(bad)
loopne
and
pop
cmps
sub
stos
mov
push
ds
pop
or
mov
push
stos
push
stos
cmps
xchg
loope
add
ja
shl
sbb
jnp
sti
daa
inc
push
push
loop
xor
nop
inc
push
add
int
scas
addr16
jmp
stos
cmp
cmps
mov
inc
movs
push
lods
mov
xchg
mov
pop
add
imul
outs
lock
imul
scas
loop
cmps
test
not
movs
cs
test
jecxz
lods
push
movs
scas
loope
movhps
jle
es
sub
ror
cmps
es
pop
movs
es
push
jnp
dec
mov
mov
xchg
scas
cmps
pusha
xor
scas
out
pop
out
fisubr
cmp
cmps
repz
mov
ja
xor
cmps
xchg
cmps
shl
test
test
inc
jnp
ret
fbld
scas
data16
stos
push
mov
xor
out
push
and
cmps
pop
xor
mov
mov
scas
mov
mov
mov
xor
hlt
scas
scas
push
push
push
lods
ss
dec
mov
or
lock
std
push
ja
gs
scas
pop
into
jnp
out
test
ja
(bad)
cmp
inc
cmps
inc
scas
cmp
xchg
stos
jle
dec
outs
mov
stos
xor
fild
scas
xchg
out
mov
fcomp
fidiv
fld
(bad)
mov
mov
sbb
(bad)
dec
mov
cmps
rcl
mov
test
mov
scas
xor
outs
jecxz
mov
out
pop
stos
mov
mov
cmps
dec
arpl
loope
(bad)
jns
jbe
out
cmp
mov
cmps
mov
sub
fisub
cmps
mov
cmps
adc
xchg
sbb
fidivr
pop
outs
movs
add
pop
or
movs
mov
xchg
mov
pop
test
pop
rcr
push
mov
mov
popf
jmp
push
(bad)
jl
add
daa
pop
cmps
rol
sbb
lods
cmps
fimul
mov
test
movs
outs
cmps
push
addr16
push
mov
jle
jle
jns
sbb
push
dec
(bad)
lods
(bad)
imul
xchg
adc
adc
(bad)
cmp
push
stos
mov
into
fbld
cmp
lods
es
fist
and
xor
push
push
neg
push
mov
stos
push
mov
mov
test
mov
lahf
ds
sbb
mov
stos
sub
sahf
out
xchg
sbb
scas
add
scas
ror
scas
push
mul
cmp
pop
jbe
pop
cmp
dec
xchg
aaa
movs
cmps
xchg
push
ficom
cmp
push
mov
stos
sbb
add
push
xchg
mov
out
pop
inc
outs
(bad)
fidiv
jbe
push
movs
daa
xlat
test
jnp
pop
pop
out
push
adc
jne
add
sub
ret
in
xchg
mov
add
jnp
mov
mov
out
pop
cmp
test
push
scas
es
cmps
movs
sbb
mov
xlat
(bad)
stos
ja
or
xchg
stos
out
cmp
dec
mov
xlat
loop
jp
lahf
push
(bad)
out
pop
vmread
mov
(bad)
mov
les
push
ss
adc
inc
imul
lods
cwde
jbe
dec
nop
mov
jno
push
movs
aaa
hlt
push
lods
test
inc
loopne
sbb
aad
mov
shr
scas
cmp
mov
push
mov
mov
outs
push
lods
adc
jb
scas
into
adc
jne
es
cmps
or
movs
cmp
cmps
sbb
stos
and
movs
fldcw
es
aam
les
push
cmps
push
test
push
push
stos
test
cmps
sbb
(bad)
push
lods
mov
addr16
cmps
aas
outs
int3
push
push
test
rcr
iret
pop
test
int
mov
inc
ds
aas
mov
call
ja
enter
lods
mov
stos
push
fdivp
push
xlat
(bad)
daa
jbe
jo
xor
push
fidiv
movs
pusha
sar
pop
xor
mov
push
cmps
rol
mov
pop
fnsave
(bad)
dec
add
mov
jns
loop
push
lods
bound
lods
mov
jbe
and
movs
ret
out
out
je
arpl
push
adc
jle
into
mov
dec
inc
jmp
push
sub
test
sahf
(bad)
push
lods
rcpps
popf
and
push
scas
cmp
cmps
and
ins
mov
push
test
push
iret
repz
mov
(bad)
dec
mov
repz
int
repz
repz
out
in
jns
out
cli
fucomi
test
sahf
pop
popf
ret
jbe
int
jns
xor
repz
repz
subps
iret
add
hlt
inc
jns
cmps
or
out
sahf
out
and
cmp
mov
das
or
iret
repz
adc
cmps
stc
cmp
repz
addr16
dec
cmp
jns
cmps
jnp
fidivr
sahf
out
sahf
add
push
pop
xchg
cmp
sar
dec
leave
dec
outs
repz
repz
xor
call
mov
out
sub
inc
inc
loope
lahf
out
inc
in
cli
push
repz
repz
dec
iret
repz
inc
mov
sahf
out
ds
jp
sahf
fild
sahf
out
jge
nop
rcl
jl
out
hlt
in
dec
pop
iret
repz
pop
js
pop
jl
cmp
repz
and
out
je
pop
clc
pop
(bad)
jns
out
push
mov
jns
ja
inc
mov
iret
repz
mov
inc
loopne
cmp
repz
cmc
fwait
mov
test
sub
sahf
int3
int
push
jae
jge
out
cmps
mov
movs
mov
xchg
call
jns
out
(bad)
jecxz
xchg
idiv
out
xlat
and
pop
fwait
(bad)
jns
out
push
mov
out
sahf
out
mov
out
sahf
test
cmp
repz
or
dec
and
cmp
repz
out
movs
sahf
out
mov
mov
jns
outs
fmul
out
adc
xlat
iret
sar
xor
jle
iret
repz
or
cmp
xrelease
add
out
sahf
out
fisttp
leave
sahf
sahf
out
sahf
scas
aas
cmp
xchg
add
out
inc
popa
test
xor
cdq
sahf
scas
jns
out
mov
xor
out
add
xchg
sar
xor
fnstcw
repz
pop
(bad)
cmp
and
add
repz
div
sahf
out
ds
sahf
out
scas
ds
dec
cmp
jns
out
dec
push
loopne
int
jns
xchg
mov
mov
sbb
pop
sub
pop
repz
repz
and
and
cmp
cmps
xlat
movs
mov
jns
mov
add
out
mov
sahf
ja
out
cmp
push
cwde
jmp
scas
scas
lods
in
loop
jns
out
and
movs
iret
repz
aad
dec
mov
fisubr
iret
repz
dec
push
mov
repz
xlat
and
cmp
jns
cmps
cmp
out
sahf
popf
jge
mov
lock
out
push
inc
(bad)
out
repz
out
adc
iret
repz
test
cdq
or
cmp
dec
xchg
add
es
(bad)
stos
out
sahf
out
mov
jns
lods
sub
jns
out
adc
mov
scas
pop
iret
repz
jg
mov
mov
cmp
xlat
xchg
inc
push
jns
cmps
stc
sbb
out
sahf
out
pop
pop
pop
pop
sahf
out
sahf
and
lock
out
out
mov
jp
repz
rcr
mov
push
iret
repz
fisttp
mov
repz
add
iret
repz
in
clc
sbb
jns
out
mov
into
sahf
out
sahf
fisttp
sahf
out
icebp
cmps
aaa
movs
sub
repz
sar
fdivr
dec
pop
iret
repz
int3
lods
ins
and
call
mov
js
sahf
out
into
mov
jl
out
push
push
dec
sub
repz
pop
repnz
out
fidivr
pop
sub
int
sahf
out
add
cmp
repz
or
dec
iret
repz
ins
cmp
call
sub
sti
jns
out
clc
mov
jns
out
add
mov
sahf
ja
jmp
jns
out
das
sub
repz
out
sahf
rcl
mov
js
iret
repz
scas
outs
lods
adc
cmp
repz
sahf
out
dec
js
in
sbb
xchg
pop
cmp
repz
fcomp
jle
repz
rep
lea
cmp
icebp
test
jne
sahf
out
call
jns
out
shl
add
fiadd
push
out
fcomp
nop
rcl
sahf
out
inc
test
mov
iret
repz
imul
mov
push
cmc
mov
repz
sahf
iret
or
jecxz
call
pop
jmp
jns
fistp
sahf
out
push
(bad)
push
mov
iret
repz
sbb
sbb
int
iret
repz
and
aaa
fs
out
inc
jmp
sub
(bad)
jns
out
inc
push
daa
adc
repz
jp
clc
imul
sub
mov
or
jns
out
rcl
push
iret
repz
je
cmp
or
in
cmp
repz
adc
jno
jns
iret
repz
sub
clc
cs
sahf
out
jb
xchg
iret
repz
imul
fucomip
mov
xor
es
xchg
jns
cmps
stc
sbb
fstp
out
sahf
out
ret
jno
repz
jbe
push
jmp
cmp
imul
shl
xchg
fs
dec
sti
sahf
out
sahf
enter
cld
in
jns
out
xchg
shl
icebp
ss
out
test
pop
sub
iret
repz
jmp
std
cmp
repz
shl
jns
iret
repz
in
scas
cmp
out
sahf
out
cmp
(bad)
fcomp
push
nop
loope
xchg
cmp
out
and
pop
mov
iret
repz
mov
lock
stc
cmp
stos
mov
out
imul
jns
out
xor
sahf
cmps
inc
inc
mov
sahf
pop
cmp
repz
test
cmp
repz
iret
repz
push
(bad)
xlat
push
inc
stos
sahf
out
call
jns
out
lods
mov
jns
out
cmps
daa
xor
iret
repz
(bad)
sub
into
call
add
repz
push
stos
into
sbb
jns
out
or
(bad)
fcomp
and
mov
cmp
repz
sub
call
iret
repz
lods
dec
ret
repz
mov
cs
out
sahf
clc
cmp
inc
loopne
sahf
out
mov
test
ds
ror
out
cmp
and
sahf
out
sahf
jnp
imul
out
cmp
repz
out
inc
imul
scas
iret
repz
fucomip
in
xor
call
mov
jns
out
cmp
jns
out
mov
repz
mov
jle
jle
std
cmp
repz
push
adc
push
mov
dec
fld
cld
xor
out
cmp
push
js
pop
lods
out
sahf
out
adc
int
jns
xchg
xchg
add
jmp
mov
repz
repz
loop
mov
iret
inc
in
mov
jns
out
sbb
xor
jns
movs
sbb
iret
repz
in
repnz
dec
push
dec
jns
out
cmp
mov
out
xchg
push
sbb
iret
repz
mov
adc
repz
and
cmps
stc
jmp
jns
out
bnd
cmps
iret
repz
xor
iret
sbb
out
lods
cmp
xchg
push
in
iret
repz
push
(bad)
lahf
mov
xchg
xchg
adc
pop
in
das
jnp
out
sahf
out
cld
jge
push
iret
sar
je
aas
clc
mov
cmp
adc
repz
adc
pop
cld
cmp
repz
mov
inc
(bad)
jns
out
je
pop
sbb
pop
out
sahf
out
inc
arpl
dec
repz
xchg
in
sub
leave
cmp
repz
fistp
stc
cmp
repz
out
push
jmp
js
das
dec
sahf
out
sahf
ret
out
mov
iret
sar
jnp
fisubr
cmp
repz
rcl
out
ds
mov
cmp
fstp
lods
pop
xchg
arpl
ss
sub
test
iret
repz
adc
xchg
cmc
sahf
out
ds
push
out
dec
loop
and
daa
push
or
iret
ficomp
fst
loopne
call
sub
pop
or
jae
sar
test
in
sbb
repz
mov
adc
repz
inc
jno
movs
out
mov
movs
add
pop
test
out
sahf
mov
bnd
out
repz
ss
cmp
out
mov
iret
repz
outs
pop
ins
jge
mov
iret
repz
(bad)
aaa
movs
out
sahf
cmp
fwait
clc
sub
sahf
out
sahf
iret
sbb
xchg
mov
jns
out
xchg
out
fs
fisubr
or
iret
repz
outs
sbb
mov
repz
pop
cmc
push
enter
jns
scas
jl
xor
jns
out
push
hlt
xor
cmp
mov
lods
xchg
adc
repz
mov
adc
jns
cmps
stc
retf
sbb
scas
fisttp
sahf
out
mov
sar
cmc
jp
enter
iret
repz
fst
arpl
stc
cmp
repz
addr16
jp
out
sahf
cmps
test
sahf
das
or
out
sahf
ins
repz
mov
cmp
sar
fisttp
jns
repz
repz
sbb
imul
pop
mov
sahf
out
sahf
(bad)
jl
inc
shl
cmp
repz
stos
lods
jnp
out
repz
repz
mov
stc
cmp
es
push
mov
jns
cmp
push
das
int3
int
sahf
out
adc
xor
out
xor
iret
repz
or
in
std
and
cmp
repz
xor
aaa
xor
sahf
out
xor
dec
out
sahf
out
dec
dec
dec
inc
sahf
out
sahf
and
ss
cmp
sar
jnp
jns
repz
repz
cmp
inc
out
inc
call
mov
jns
out
arpl
push
push
in
cmp
repz
mov
cmp
into
lahf
mov
iret
repz
loopne
ss
jns
iret
repz
fstp
out
sahf
out
push
das
lods
cmp
out
sahf
popf
mov
jl
out
daa
hlt
test
iret
ror
enter
repz
pop
pop
fcomp
cmp
repz
icebp
xchg
cmps
movs
jns
iret
repz
push
jmp
out
sahf
out
cdq
dec
fistp
repnz
loope
xor
out
daa
add
push
dec
repz
repz
repz
add
test
adc
push
or
sbb
jns
out
scas
jg
mov
out
sahf
out
xchg
aam
iret
repz
cli
ins
jmp
sub
lods
cmp
repz
xor
adc
ds
repz
movs
test
jge
push
clc
cmp
repz
(bad)
(bad)
cmp
repz
repz
push
inc
inc
cmps
out
cmp
movs
mov
jne
dec
sahf
out
sahf
stos
dec
cmp
scas
jns
out
dec
aas
dec
cmp
out
sahf
out
ret
pusha
cmps
test
inc
push
fcmovnu
cmp
repz
outs
jg
(bad)
cmp
repz
adc
movs
out
call
push
sahf
out
sahf
dec
frstor
add
cmp
out
pop
push
mov
iret
repz
iret
repz
jge
mov
xchg
mov
gs
sub
out
test
dec
into
movntq
out
ins
and
sahf
add
xchg
repz
stos
xchg
fdivr
repz
out
sahf
out
loop
cmp
push
sahf
out
sahf
aas
cmp
mov
icebp
jmp
out
xchg
xchg
iret
repz
add
sti
cmp
repz
xchg
cmc
cli
ret
iret
repz
pop
xor
cmp
repz
add
aad
shl
jns
cmps
mov
out
sahf
rcl
jo
xchg
in
jns
jns
fisub
mov
out
sahf
push
outs
lods
ret
jl
out
out
adc
mov
shr
mov
repz
rol
test
sahf
out
sahf
dec
mov
jl
out
xchg
xor
push
repz
sar
iret
repz
std
xor
rol
inc
repz
repz
test
bound
sub
repz
(bad)
sbb
jecxz
and
ja
mov
out
pop
cs
sbb
out
sahf
out
and
ss
repz
sbb
sbb
dec
jg
iret
repz
loop
nop
icebp
imul
xchg
cli
push
jmp
jns
out
sbb
outs
lods
sahf
out
sahf
dec
jb
and
jns
test
mov
jns
fsubr
(bad)
out
in
lea
out
loop
shl
repz
out
inc
adc
jp
iret
repz
call
sbb
xchg
mov
shl
jns
iret
rep
in
sbb
jns
out
sub
ret
out
sahf
xchg
(bad)
inc
in
xchg
retf
cmp
repz
scas
(bad)
in
mov
and
push
test
jns
iret
inc
sub
pop
lahf
int3
sahf
out
sahf
cmp
xor
fwait
repz
pop
repz
repz
xchg
(bad)
out
ds
inc
xchg
fcmovb
test
sahf
out
sahf
push
ins
ins
(bad)
shl
fucom
jns
xchg
sub
push
push
fstp
pop
dec
rol
jo
sahf
out
out
fs
(bad)
repz
ror
pushf
sbb
iret
xchg
push
movs
jmp
cdq
mov
cmp
out
addr16
repz
repz
popf
add
iret
cmps
mov
loopne
sti
jns
out
sub
in
popf
out
sahf
out
add
xchg
iret
sar
add
fistp
repz
sub
cmp
repz
out
sahf
cmps
sub
out
sahf
dec
mov
adc
jns
aad
inc
fld
repz
repz
(bad)
jl
xchg
iret
repz
add
xchg
(bad)
and
sahf
out
ds
push
test
sahf
out
jns
out
or
and
repz
out
daa
xor
mov
fdivr
pushf
int
ds
repz
jbe
push
cmp
js
fistp
add
repz
inc
sti
or
ins
cmp
repz
xchg
jbe
aad
repz
push
mov
mov
cmp
mov
ds
repz
fs
jns
out
sbb
aas
jl
out
sahf
xor
add
movs
cmp
repz
retf
push
repz
sbb
repnz
repz
mov
out
lds
out
call
jns
out
jge
inc
icebp
push
sar
movs
movs
inc
jp
mov
cdq
into
dec
in
adc
iret
repz
out
lds
imul
cmp
lahf
out
sahf
loope
daa
aam
call
call
cmp
repz
in
loop
or
cmp
add
cmps
stc
cmp
mov
mov
jns
das
cmp
add
jns
out
push
mov
hlt
iret
repz
vmovss
dec
fsubr
cmp
repz
pushf
popf
and
repz
repz
inc
xor
jns
out
pusha
mov
popf
lahf
out
sahf
and
aaa
and
repz
pop
ds
or
cmp
repz
mov
adc
cmps
stc
cmp
pop
je
mov
jns
clc
test
jns
out
mov
push
data16
sar
je
lds
cmp
or
js
into
out
cmp
repz
sub
repnz
repz
repz
xchg
mov
cmps
stc
cmp
div
out
sahf
fwait
mov
jns
out
ins
frstor
and
out
sahf
out
cmps
out
xchg
iret
repz
inc
jp
cwde
mov
cmp
pop
xchg
add
cmp
repz
movs
adc
out
sahf
out
cmp
jns
mov
and
jns
mov
shr
dec
int
iret
repz
adc
xchg
lds
loope
mov
in
xor
out
inc
mov
movs
cmc
repz
repz
imul
dec
iret
repz
fst
rol
daa
call
fwait
ror
dec
cmp
mov
jns
out
and
inc
mov
repz
gs
mov
iret
repz
xor
popa
push
jns
iret
repz
aad
and
sub
jns
out
fadd
(bad)
iret
sar
(bad)
cdq
out
ins
cmp
repz
mov
ds
repz
mov
fsub
jns
out
das
jl
jecxz
out
sahf
shl
adc
repz
or
loop
cmp
repz
(bad)
adc
popa
out
sahf
cmps
jnp
scas
fsubr
out
sahf
mov
call
mov
sub
(bad)
loopne
jbe
out
call
sbb
jg
int
mov
sahf
out
and
in
repz
repz
mov
iret
jg
loop
jo
mov
movs
(bad)
out
iret
repz
pop
mov
cmp
repz
mov
pop
push
jns
cmps
stc
cli
mov
sbb
out
mov
sar
aad
xchg
repz
mov
cmp
repz
stc
cmp
push
movs
and
out
sahf
mov
jge
out
adc
test
fsubp
push
cwde
mov
out
jge
xor
daa
repz
out
push
sub
js
iret
repz
(bad)
jl
push
mov
call
sub
fstp
out
sub
push
aas
cmp
jns
out
rol
shl
int
sahf
jbe
mov
cmp
repz
or
cmp
cmps
xchg
fisub
or
jns
cld
fld
jns
out
xor
loope
daa
repz
out
push
fwait
cmp
repz
scas
jg
mov
arpl
iret
repz
push
pop
xchg
sbb
jns
out
sub
sbb
out
sahf
out
xchg
and
iret
repz
xor
push
sub
repz
popf
xchg
ret
xchg
imul
aad
data16
jns
out
fisttp
inc
int
jns
and
test
repz
push
pop
ins
mov
cmp
repz
sahf
out
inc
clc
or
sahf
mov
inc
ss
cmp
sar
dec
imul
adc
out
ds
mov
sti
cmps
call
sahf
out
(bad)
in
in
shl
lahf
out
adc
movs
stos
mov
repz
repz
iret
repz
xor
sahf
cmps
stc
cmp
push
dec
stc
jle
sahf
out
in
dec
repz
mov
cmc
ficom
iret
jmp
rol
into
repz
addr16
cmp
repz
dec
mov
jle
repz
repz
add
cmp
push
inc
mov
sahf
out
mov
pop
mov
jns
out
and
int
(bad)
test
das
cmp
cmp
jno
inc
push
jns
out
or
cdq
push
dec
out
sahf
out
mov
pop
add
jmp
pop
cs
mov
adc
inc
mov
clc
jns
out
out
jg
push
and
jl
out
addr16
stos
pop
cmp
repz
out
outs
std
adc
iret
repz
fs
fdivr
out
mov
repz
out
(bad)
inc
xchg
push
iret
repz
sbb
lahf
sub
cmp
repz
rol
jbe
jns
iret
repz
mov
jle
jns
out
mov
sar
sub
out
lods
cmp
repz
xor
hlt
aad
sahf
cmps
stc
pop
push
enter
out
sahf
out
cmp
out
sahf
xchg
out
xchg
mov
repz
enter
repz
repz
bound
(bad)
out
ds
movs
inc
cmp
sahf
int3
ins
xor
push
cmp
out
ja
call
repz
(bad)
repnz
repz
shl
inc
dec
sahf
out
call
jns
out
or
repz
repz
in
scas
pop
xchg
iret
repz
mov
adc
cmps
stc
cmp
dec
hlt
cwde
stc
cs
out
das
dec
loop
push
repz
out
mov
fs
fsin
iret
fsubr
loop
xchg
out
jns
out
in
aam
(bad)
out
sahf
out
std
adc
pusha
dec
repz
adc
test
iret
repz
push
mov
stc
cmp
repz
out
sahf
cmps
mov
int
jns
and
adc
iret
repz
in
dec
jecxz
imul
adc
jns
out
sub
adc
iret
sar
movs
retf
or
iret
repz
pop
lods
dec
push
repz
repz
shl
cmps
stc
cmp
xchg
movs
inc
push
jnp
out
sahf
sbb
sahf
outs
pop
and
out
jecxz
shl
sar
xchg
movs
inc
cmp
repz
fsubr
mov
iret
repz
xor
mov
call
sub
out
sahf
out
fistp
sahf
out
sahf
push
popa
jbe
inc
gs
fidivr
movs
fiadd
sub
sahf
out
sahf
(bad)
ret
(bad)
ja
dec
repz
cmp
cmp
repz
mov
cmp
shl
mov
sahf
out
call
jns
out
mov
jns
out
jbe
inc
jmp
test
cmp
repz
inc
push
out
jns
iret
repz
or
or
out
sahf
out
aas
sbb
adc
push
push
xchg
test
call
cmp
repz
lods
loop
adc
repz
xor
out
push
push
sahf
out
ds
(bad)
sahf
jle
sahf
out
dec
lods
ret
sar
push
pop
mov
aad
iret
repz
call
cmp
xchg
test
iret
repz
push
pop
dec
outs
pop
cmp
repz
mov
ds
repz
addr16
xor
out
cdq
into
das
mov
dec
mov
inc
ss
out
daa
les
sahf
out
sahf
call
popf
jns
out
add
sahf
out
hlt
test
adc
iret
clc
sub
dec
ins
cmp
repz
xor
popa
imul
ja
aad
gs
out
sahf
out
jns
sbb
lahf
out
sahf
xor
jne
iret
repz
mov
cmp
repz
rol
cmps
stc
cmp
test
call
js
outs
outs
(bad)
bnd
out
inc
loope
xchg
sahf
out
out
mov
pop
iret
jns
out
or
xchg
shl
stos
popf
out
xor
retf
jbe
pop
jns
out
cdq
scas
out
in
popf
out
sahf
out
xor
test
aad
mov
iret
repz
dec
sbb
repz
cmps
mov
cmp
cmp
aad
push
push
jmp
iret
rep
pop
mov
shl
repz
ss
add
jp
sahf
out
sahf
dec
cmp
lods
dec
jns
out
push
add
out
(bad)
or
repz
imul
iret
repz
add
xlat
test
out
test
cli
cmp
leave
out
sahf
out
mov
out
sahf
and
data16
sbb
out
sahf
ja
push
dec
sbb
lea
mov
daa
movs
push
cmp
repz
stc
mov
fdiv
cmp
repz
cmps
stc
cmp
mov
xchg
cli
sub
clc
sbb
sahf
out
ret
xor
push
ja
xor
out
xchg
call
iret
sahf
dec
jg
fst
cmp
repz
xor
jbe
jns
iret
repz
and
out
sahf
out
outs
or
sahf
out
sahf
xor
add
push
cmp
repz
mov
repz
repz
iret
repz
xor
lock
cmp
push
pop
mov
(bad)
cld
int
ret
nop
cmp
repz
jbe
movs
je
call
jmp
out
sahf
out
(bad)
pop
sbb
sahf
out
sahf
mov
repz
jns
xchg
repz
dec
sbb
iret
repz
lahf
pop
xchg
jecxz
loope
iret
repz
ss
in
call
dec
sti
out
sahf
out
sub
jns
scas
das
pushf
ins
in
cmp
out
ret
shl
fiadd
loop
fwait
pop
mov
(bad)
(bad)
jmp
push
push
sbb
dec
inc
push
push
push
sbb
mov
mov
jns
loopne
mov
imul
cmps
call
(bad)
push
rol
push
(bad)
jmp
cmc
or
mov
jle
repnz
or
stos
sub
add
mov
loopne
jbe
add
sub
cmp
loop
sbb
imul
fisubr
push
fidivr
fidiv
stos
mov
clc
mov
sbb
mov
loop
outs
cmp
or
cmp
sbb
mov
clc
ja
ror
sub
fimul
aaa
add
loop
sub
cmp
push
mov
fild
stos
push
cmp
add
dec
ficom
fidiv
cmp
fmul
pop
inc
fcmove
or
sub
add
mov
loopne
fsub
jmp
lods
push
mov
pop
repnz
pop
pop
stc
jmp
mov
ret
and
add
sbb
cmp
jmp
sub
adc
mov
dec
sbb
adc
sub
adc
stos
push
jp
jp
and
(bad)
(bad)
sbb
das
cli
jmp
out
push
cmp
sbb
dec
or
cs
jp
push
push
stos
loope
dec
push
or
mov
or
sar
cmp
sbb
xchg
xchg
jmp
xor
lods
fiadd
sbb
or
or
pop
mov
jmp
sub
scas
or
jmp
dec
jmp
sub
dec
mov
ret
ret
stos
cmp
outs
stos
fild
xchg
loopne
mov
stos
xchg
stos
sbb
fiadd
mov
leave
sar
push
fdivr
jp
cmp
stos
pop
mov
inc
mov
stos
sbb
dec
fist
mov
enter
pop
jns
clc
jmp
stos
call
push
into
push
pop
pop
mov
jle
stos
sub
std
mov
pop
stos
jp
xor
mov
(bad)
lahf
push
jg
or
mov
out
stos
jmp
ret
(bad)
das
cmp
inc
push
stos
bndldx
cs
dec
adc
cwde
mov
mov
pop
adc
in
jb
cld
adc
adc
fmulp
xor
or
jmp
add
adc
ins
shl
jp
dec
out
bound
dec
mov
loopne
xchg
call
stos
inc
call
test
mov
mov
cmc
jp
jp
int3
ret
mov
mov
jp
dec
ror
jp
jp
dec
das
push
push
dec
push
pop
mov
cs
fsub
fild
or
in
gs
pop
mov
and
push
lods
adc
jp
int
jmp
adc
or
ins
stos
and
jge
jl
dec
xor
mov
jmp
jnp
inc
jp
dec
mov
dec
movs
jmp
into
jmp
es
dec
xchg
shr
and
or
cmps
pop
js
xlat
cli
bound
stos
push
sub
call
sbb
mov
jmp
jmp
jecxz
push
push
xor
data16
dec
sub
fwait
adc
pop
js
ret
or
fdivp
push
mov
inc
sub
cmp
stos
mov
arpl
stos
mov
outs
nop
mov
push
push
stos
sbb
sbb
jmp
xchg
mov
stos
out
lock
rcl
push
stos
mov
stos
aaa
jl
xchg
mov
call
inc
call
lock
ror
data16
push
push
or
cld
(bad)
dec
dec
mov
sbb
pop
test
pop
and
pop
es
or
mov
mov
out
add
(bad)
fild
cmp
pop
and
mov
pop
xchg
pop
xor
je
stos
mov
rcr
ins
sbb
pop
out
arpl
mov
push
pop
mov
pop
jmp
pop
xchg
lea
cld
jge
jb
mov
push
pop
jp
ret
(bad)
jg
pop
ret
pop
jl
mov
lock
mov
sbb
jg
(bad)
inc
pop
push
pop
jecxz
xchg
pop
adc
pop
(bad)
pop
rcr
fild
int3
pop
rcr
pop
loope
xchg
pop
sub
push
and
push
pop
test
or
popf
pop
xchg
and
pop
jno
adc
pop
sub
leave
adc
bound
outs
jmp
cmps
mov
jmp
add
or
adc
cld
jmp
push
push
push
push
push
push
scas
jp
sub
push
dec
dec
clc
lea
push
movs
in
push
push
dec
xor
push
retf
mov
stos
xchg
stos
pop
mov
mov
xor
stos
push
or
mov
jmp
sti
ins
clc
push
mov
cwde
mov
xchg
inc
and
add
das
ror
push
mov
mov
cmp
mov
stos
adc
and
add
(bad)
cli
mov
retf
mov
dec
mov
movs
test
adc
mov
jle
(bad)
mov
sub
lea
fs
shr
dec
(bad)
cli
and
enter
cmp
ss
adc
cli
popa
stos
jno
add
push
push
inc
call
ror
sbb
mov
cmps
repnz
push
mov
xchg
pop
cmp
sbb
mov
cli
out
lods
sub
stos
shr
fisttp
ss
push
dec
push
dec
jbe
jecxz
sub
push
dec
cmps
inc
sub
cmps
cmp
push
sub
rcr
sub
rcr
dec
adc
sub
jmp
sti
call
call
mov
imul
xor
es
call
mov
mov
sub
sub
mov
stos
ss
push
cmp
pushf
fidivr
dec
fisub
pusha
push
add
adc
pop
pop
push
clc
mov
mov
inc
or
sub
fwait
sbb
pop
retf
cmp
add
retf
outs
push
jmp
fwait
and
dec
fisub
int3
dec
jecxz
int3
fimul
out
(bad)
stos
(bad)
fcmovu
in
fisub
xlat
stos
daa
stos
aaa
stos
movs
or
outs
clc
pop
stos
add
stos
test
push
sar
call
ss
sub
movs
sub
sub
or
sub
sub
sub
sub
sbb
pop
mov
or
dec
stos
pop
cmp
sub
(bad)
(bad)
fld
jns
sub
jp
dec
retf
jp
mov
(bad)
mov
dec
or
dec
dec
jp
jp
jp
fdiv
loope
push
dec
sub
dec
or
push
jp
jp
dec
mov
(bad)
fst
mov
push
xlat
call
mov
mov
outs
dec
imul
ins
cli
(bad)
jg
jmp
jp
sbb
jp
or
aam
in
loope
loopne
lock
cmp
sbb
dec
daa
mov
jle
nop
or
dec
xor
jg
ja
add
jp
dec
shr
xchg
dec
movs
mov
dec
dec
(bad)
(bad)
(bad)
jmp
jp
jp
dec
cld
jp
jp
jp
dec
add
jp
dec
and
aas
jp
jp
cmp
jp
gs
inc
and
mov
jne
(bad)
sbb
or
dec
(bad)
(bad)
(bad)
jmp
or
or
push
sbb
sbb
mov
dec
cmp
dec
or
mov
sub
fild
dec
call
sbb
popa
dec
or
cmp
cmc
(bad)
push
sbb
or
or
idiv
push
cmp
jg
lds
add
cmp
es
xchg
or
movs
cmp
ss
popf
xor
or
dec
data16
mov
or
sbb
jg
sub
sbb
cmp
cmp
mov
icebp
cmp
cld
or
cmp
cmp
dec
sub
cs
jg
(bad)
mov
pop
scas
jp
push
cmp
cmp
pop
(bad)
mov
pop
xchg
xor
or
jp
xchg
lock
pop
jns
xchg
dec
xchg
and
sbb
ret
ret
add
sbb
ins
sbb
sbb
stos
test
out
and
inc
ja
movs
jecxz
jmp
cmp
or
sbb
mov
cmp
aaa
mov
(bad)
mov
sbb
or
push
sbb
es
aas
push
cmp
add
cmp
or
fwait
adc
sub
or
sbb
fnstcw
cmp
(bad)
out
add
mov
sub
fs
test
sub
scas
or
sub
inc
push
sbb
ss
xor
xor
pop
cmp
dec
fs
je
mov
push
dec
cdq
dec
test
adc
push
es
sub
stos
fwait
mov
pop
std
cli
ret
call
push
jmp
mov
cli
loop
scas
and
jmp
lea
add
inc
push
test
cmp
pop
xor
sbb
ins
mov
outs
xor
mov
add
outs
inc
sar
enter
pop
cmc
fwait
cmp
mov
dec
test
pop
stos
pop
test
(bad)
dec
pop
pop
dec
cmp
sbb
pop
or
aam
stos
mov
and
call
lock
mov
jmp
mov
xchg
xchg
push
int3
mov
mov
pop
or
mov
push
fstp
sbb
loope
retf
rcr
stos
push
stos
jp
dec
pusha
jmp
sub
mov
sbb
jle
fwait
push
pop
mov
imul
sbb
or
pop
or
pop
mov
(bad)
and
dec
jmp
cld
das
mov
mov
mov
out
and
stos
movq
jmp
lods
mov
mov
mov
fidivr
sub
std
stos
xor
jmp
(bad)
(bad)
call
jge
push
mov
ret
mov
(bad)
stos
fldcw
sub
xchg
cs
retf
mov
(bad)
jg
mov
jmp
mov
dec
jmp
stos
sub
pop
sub
mov
push
(bad)
fimul
dec
mov
jp
stos
std
ds
iret
stos
jg
adc
in
mov
mov
repz
enter
mov
loopne
sub
add
adc
mov
std
ins
stos
nop
es
dec
stos
shr
mov
cmp
fisubr
mov
shr
mov
mov
mov
sub
sbb
dec
sbb
stos
mov
mov
lds
and
push
fsub
sbb
mov
ss
mov
adc
pop
mov
(bad)
push
push
push
mov
loop
xchg
push
pop
mov
pop
mov
out
xchg
adc
pop
push
mov
dec
xlat
pop
scas
cmps
sar
dec
mov
inc
dec
movs
dec
push
dec
or
xor
push
bound
xchg
adc
ins
and
call
es
xchg
es
push
push
mov
mov
les
mov
loopne
sub
dec
cmp
sub
(bad)
push
jl
mov
cmp
call
(bad)
mov
cs
clc
jmp
mov
ds
ds
(bad)
mov
into
pop
push
mov
mov
push
push
push
mov
in
xchg
(bad)
(bad)
jmp
push
jmp
mov
and
stc
sbb
mov
jl
inc
std
dec
jp
call
xlat
push
push
inc
(bad)
(bad)
jg
or
mov
in
mov
push
sbb
cmc
call
ins
dec
or
push
sbb
sbb
or
dec
push
or
sbb
pop
or
xor
fld
sbb
or
sbb
xchg
rcl
add
mov
add
jp
pop
cmp
ja
mov
inc
mov
aas
mov
sti
jp
jp
push
popa
dec
cmc
sbb
sub
sub
stos
loopne
sub
les
(bad)
jmp
scas
or
mov
push
add
jno
jg
sub
dec
cs
(bad)
mov
mov
neg
addr16
outs
jmp
scas
jmp
(bad)
jmp
add
imul
mov
mov
mov
fdivr
cmp
or
sbb
stos
ins
mov
inc
jmp
sbb
scas
add
pop
outs
(bad)
push
or
mov
cdq
rcr
jne
mov
or
cmp
loopne
into
or
sbb
push
ret
add
jg
ins
dec
movs
cmp
sbb
sbb
pop
sbb
push
sub
cmp
or
sar
sbb
or
push
or
push
mov
or
sbb
sbb
scas
pop
jno
jl
add
rcr
pop
or
push
sbb
sbb
push
push
cmp
mov
dec
mov
xchg
fdivr
std
xchg
xchg
cmp
mov
or
sbb
sbb
mov
ret
sbb
or
push
fmul
adc
mov
sbb
popa
aad
cmp
repz
loop
sbb
sbb
sbb
push
sbb
les
add
mov
int
inc
or
or
fldcw
clc
or
sub
jl
cmps
into
pusha
sbb
jp
dec
pop
les
daa
inc
test
pusha
dec
mov
scas
add
pop
push
pop
mov
clc
jb
out
adc
ins
jecxz
idiv
sub
pop
stos
pop
sub
adc
mov
cmps
or
mov
dec
push
xchg
cmp
cli
clc
pop
fwait
inc
mov
mov
and
ror
jb
sub
stos
or
or
mov
dec
pusha
shl
je
pop
mov
sub
pop
xchg
push
das
cli
fwait
or
retf
pop
(bad)
repnz
ss
fcmovnu
ret
cmp
or
inc
or
out
xor
cs
inc
jp
jmp
add
push
fisub
mov
inc
sbb
mov
dec
mov
cmp
mov
jmp
dec
dec
sub
jmp
xor
retf
and
dec
fucomp
loope
dec
vsubss
mov
idiv
mov
inc
mov
mov
and
jmp
(bad)
mov
sub
retf
cmp
call
mov
out
sub
mov
sbb
cli
dec
cli
jg
dec
cld
movs
sbb
inc
jmp
mov
mov
push
cli
leave
xchg
dec
in
xchg
xchg
loopne
test
jmp
or
or
cli
jo
cli
jne
cli
(bad)
and
ja
ror
into
push
jmp
outs
sub
aad
jg
sub
stos
cli
dec
or
jmp
xchg
loop
cmps
retf
adc
push
call
in
or
jb
test
mov
sar
and
adc
pusha
fdiv
and
inc
push
mov
push
inc
leave
pusha
mov
mov
loope
or
mov
fidivr
mov
(bad)
(bad)
mov
sbb
jle
stc
mov
mov
call
(bad)
jmp
add
ja
and
popf
jmp
mov
mov
std
jmp
fild
test
dec
jmp
push
call
add
sub
sub
cli
rcr
mov
sti
cli
data16
push
stos
fdivr
xchg
jle
mov
xchg
inc
sbb
cmps
out
std
in
(bad)
cli
pop
jp
dec
pop
jp
dec
(bad)
add
push
loop
in
jae
cli
jmp
jmp
data16
or
(bad)
mov
jae
loop
out
or
(bad)
(bad)
(bad)
(bad)
jmp
xlat
mov
aaa
mov
addr16
jmp
fwait
jmp
cmc
jmp
push
jle
sbb
pop
(bad)
dec
lds
call
xchg
dec
call
mov
leave
fimul
jmp
push
mov
ss
mov
push
push
or
jmp
aad
jp
aam
mov
fiadd
ds
(bad)
jp
mov
(bad)
jp
js
sub
mov
adc
and
xchg
mov
ret
mov
icebp
xchg
dec
jmp
dec
dec
ret
jp
dec
loope
mov
inc
jp
dec
gs
jle
jp
dec
jp
mov
clc
fwait
and
dec
fisubr
scas
stos
xor
sub
mov
add
mov
movs
mov
les
inc
pop
add
xchg
mov
lock
test
or
cli
idiv
dec
(bad)
cli
es
jmp
mov
or
push
stos
push
stos
pusha
mov
and
xlat
stos
fisubr
mov
clc
(bad)
fstp
mov
add
mov
mov
xor
or
and
ins
stos
std
or
(bad)
mov
mov
stos
loope
stos
add
lods
call
pop
mov
mov
shr
jmp
jo
dec
mov
stos
xor
stos
shr
mov
jp
stos
ret
stos
ret
mov
retf
mov
sbb
or
cmp
fwait
and
and
sbb
xchg
dec
inc
mov
pop
es
sub
jle
mov
jns
sar
daa
ret
clc
jg
fld
stos
scas
sbb
btc
mov
cmps
mov
(bad)
mov
adc
xchg
std
stos
pop
mov
mov
mov
ja
dec
and
or
push
cmp
out
or
sbb
or
or
sbb
das
or
aam
shr
push
sbb
cmc
(bad)
push
inc
sbb
repnz
or
mov
outs
push
sbb
sbb
inc
push
sbb
or
inc
mov
out
je
sbb
lds
cmp
inc
(bad)
sbb
cli
sbb
cli
dec
cmp
stos
add
pusha
cli
int3
stos
mov
jmp
pop
mov
pop
retf
rol
ret
jmp
adc
adc
jmp
fidiv
jmp
aam
jmp
fs
pusha
mov
retf
(bad)
fisub
dec
jb
loopne
test
push
cli
xchg
cli
ret
(bad)
(bad)
out
jp
pop
je
mov
pop
xor
mov
pop
call
sub
sub
sub
sub
or
mov
sub
repnz
or
hlt
xor
add
mov
mov
sbb
push
xor
jl
mov
and
jp
dec
call
out
mov
pop
jo
mov
daa
ficom
add
jmp
icebp
or
sbb
je
jle
mov
mov
mov
cmp
push
fsubr
dec
add
fild
mov
sbb
call
push
sub
sbb
mov
mov
pop
mov
mov
sub
cs
mov
mov
call
inc
push
in
or
fld
mov
imul
fild
out
mov
mov
mov
adc
sar
mov
ins
cmp
pusha
rcr
(bad)
mov
outs
xchg
jle
push
lds
ror
mov
mov
dec
adc
pop
fisubr
sub
fimul
fidivr
outs
sahf
push
mov
sub
or
lock
(bad)
mov
cmp
iret
mov
cmp
inc
sub
inc
push
sbb
mov
mov
push
cmp
jg
dec
mov
adc
mov
mov
mov
int3
mov
mov
cmp
fidivr
inc
cmp
dec
mov
push
pushf
jl
mov
cmc
or
mov
add
cmp
call
call
xchg
jp
mov
loopne
outs
xor
adc
jp
call
(bad)
jg
inc
cmp
cmp
call
out
mov
ret
dec
std
mov
cmp
or
add
(bad)
fiadd
jne
in
jns
fisubr
retf
mov
int
lods
frstor
int
adc
mov
les
dec
mov
jp
dec
out
jp
jp
jp
std
(bad)
fcmovne
and
dec
shr
and
mov
mov
sub
or
cmps
push
jp
repz
iret
sub
jb
das
clc
add
ret
call
cmp
adc
add
mov
mov
test
fiadd
add
ins
fneni(8087
retf
bound
inc
mov
test
adc
sub
call
or
jp
cmp
call
push
xor
push
call
pop
inc
(bad)
pop
dec
jmp
jp
mov
popa
inc
mov
mov
cmp
dec
sub
fiadd
and
mov
push
mov
aaa
mov
sbb
mov
sbb
cmp
mov
loopne
rcr
lock
ror
sub
call
sub
sub
sub
pop
bound
xchg
sub
sub
mov
mov
push
mov
push
mov
mov
or
pop
sbb
ss
(bad)
xchg
sbb
mov
push
xchg
xchg
push
or
(bad)
(bad)
call
cmp
icebp
sbb
sbb
or
lods
or
cdq
or
pop
add
cs
bound
loop
xchg
(bad)
enter
loopne
or
push
icebp
sbb
or
mov
jmp
jp
and
dec
ins
stos
jmp
test
test
mov
sbb
je
sub
stos
lds
mov
push
stos
dec
jmp
mov
xchg
jmp
mov
inc
out
jp
jmp
cmp
mov
pop
adc
jbe
inc
mov
cmps
mov
mov
mov
retf
xchg
xor
cli
out
not
mov
cld
mov
(bad)
jmp
cs
cmp
stos
push
mov
cli
mov
xlat
outs
mov
dec
pop
fcmovbe
mov
inc
push
mov
dec
cmp
add
test
ja
das
dec
lods
jp
add
or
and
adc
jmp
mov
jno
sbb
in
or
push
fistp
xchg
hlt
sbb
sbb
inc
sbb
and
mov
stos
ja
inc
mov
mov
push
push
or
cmp
sbb
push
sbb
sub
dec
mov
jl
pop
(bad)
pop
cli
int
push
mov
cli
mov
sub
movs
push
test
or
or
test
cmp
xor
add
int
dec
sub
retf
adc
xchg
xchg
push
push
add
bound
adc
data16
mov
cwde
sbb
dec
xchg
call
adc
pop
adc
add
inc
call
jnp
in
mov
or
(bad)
jmp
push
stos
mov
aaa
cli
mov
test
adc
mov
mov
mov
mov
pop
add
cli
mov
jne
inc
mov
cwde
or
call
adc
js
popa
mov
dec
mov
dec
push
dec
add
clc
push
loop
pop
call
ret
stos
push
add
cmp
inc
push
clc
(bad)
mov
call
jmp
loope
sub
mov
call
test
(bad)
jg
int3
push
jmp
imul
imul
push
cli
cmps
imul
stos
stos
retf
dec
push
js
mov
dec
call
mov
sbb
mov
jp
jp
jp
aad
push
test
push
jp
je
scas
xor
sbb
mov
adc
add
mov
sub
call
std
mov
sbb
fldcw
push
push
sub
aaa
sbb
call
out
mov
pop
cli
(bad)
pop
or
or
or
add
or
or
or
es
in
fisubr
adc
in
xor
cli
cmp
add
idiv
or
into
jb
cs
jp
call
call
fs
mov
mov
sbb
sub
xchg
movs
retf
push
cli
xchg
cli
les
push
fcmovb
cmp
cmp
mov
out
sar
(bad)
dec
call
cld
cmp
icebp
fisub
test
stos
icebp
(bad)
jmp
sbb
mov
loope
das
mov
xchg
sub
add
jg
setp
call
call
mov
loope
call
call
sbb
jmp
jmp
call
out
xchg
ds
dec
call
or
mov
call
clc
push
cld
call
call
cmps
mov
stos
call
fdivr
dec
call
icebp
dec
mov
push
xor
jp
dec
pushf
jp
stos
in
jne
ja
in
out
loop
repnz
call
xor
cmp
retf
bound
call
retf
retf
(bad)
jmp
mov
mov
mov
(bad)
out
or
and
push
jo
out
ds
dec
pop
int3
xor
add
aad
cmp
sub
sub
imul
pop
mov
pop
bound
es
cmp
mov
int3
mov
and
lea
pusha
sub
adc
aaa
pop
ins
push
rcr
call
popa
jg
pop
xchg
pop
popf
cld
in
mov
or
(bad)
(bad)
mov
std
dec
fisttp
lahf
cld
out
loope
dec
xchg
mov
mov
out
pop
lahf
out
mov
or
push
dec
fimul
stos
mov
fsub
mov
and
lods
lea
xor
sub
std
jl
mov
add
push
test
jle
xchg
dec
inc
push
daa
dec
sub
or
fisubr
es
dec
xchg
fisubr
shr
es
ja
in
mov
jne
in
pop
sbb
add
sub
adc
imul
inc
cmovle
fisttp
in
or
movs
xor
xchg
retf
push
movs
mov
jae
mov
xor
mov
push
test
add
das
xor
jnp
mov
and
dec
in
(bad)
pop
jl
or
mov
and
std
mov
rcl
and
and
sub
fcmove
popf
arpl
ins
outs
ins
mov
mov
sbb
shr
pushf
push
mov
ins
ins
(bad)
sbb
dec
adc
imul
jbe
in
push
xor
sub
sub
sub
scas
(bad)
mov
sub
lahf
sbb
add
cld
lea
int3
ins
jb
pop
in
add
dec
jl
pop
mov
fidivr
das
and
push
dec
add
dec
popf
popf
cmc
ret
dec
cs
es
mov
inc
cld
mov
mov
das
jge
mov
sub
add
in
xor
sahf
dec
pop
pop
cdq
sub
out
add
push
cmps
sub
dec
mov
sbb
xor
sub
pop
pop
lods
cmp
dec
inc
pop
bound
scas
pop
outs
out
test
mov
push
jl
popf
sbb
add
pusha
cmp
pop
in
sub
inc
inc
mov
in
push
and
sub
add
dec
mov
push
test
sub
fidivr
out
sub
dec
or
std
sub
out
into
sub
(bad)
and
add
sbb
fcmovbe
sbb
mov
mov
mov
mov
inc
and
sub
sub
adc
clc
fst
jno
push
mov
mov
test
in
cmp
aad
call
sbb
sbb
mov
mov
sbb
pop
pushf
in
adc
add
xor
sbb
mov
sub
popf
push
dec
pop
in
and
push
test
sahf
mov
ins
mov
pushw
pop
lods
pop
ror
das
shl
cmp
cmp
sbb
adc
mov
mov
and
(bad)
xchg
xchg
sbb
sub
and
out
iret
ds
ds
dec
pop
in
lods
das
sub
dec
test
or
sub
cmps
xor
sub
popw
sbb
int3
add
and
(bad)
in
outs
in
das
cmp
cmp
sbb
jmp
jo
sbb
jnp
ss
xor
in
mov
fmul
daa
int
and
or
int3
sbb
adc
pop
ins
pop
dec
push
and
(bad)
sub
and
cmp
mov
and
and
xchg
push
or
shl
inc
nop
fsub
pop
lahf
xor
mov
imul
mov
dec
lds
in
mov
sub
dec
test
mov
pop
int
xchg
lds
imul
daa
in
mov
fldenv
in
and
push
loopne
mov
in
(bad)
and
std
mov
or
sbb
add
mov
shr
fmul
loopne
inc
sbb
lods
ins
clc
mov
mov
out
sub
bound
and
sbb
lock
mov
push
pop
sbb
aas
and
pop
pop
ss
mov
cmp
jbe
fdiv
sbb
inc
push
mov
pop
sub
and
dec
js
pop
data16
jmp
mov
or
mov
pop
leave
jmp
push
arpl
inc
test
pop
or
push
mov
mov
fisub
outs
xor
ds
pushf
cld
lods
adc
cmp
cmp
daa
in
pop
repnz
std
int3
popf
dec
popf
jnp
loop
pushf
mov
shr
fwait
icebp
les
xchg
data16
in
sub
scas
inc
out
ins
pop
adc
push
in
or
std
mov
fdivr
jo
mov
loop
lods
pop
dec
jnp
mov
jl
xchg
push
(bad)
ror
and
mov
fdivr
mov
pop
sbb
gs
lea
jmp
pop
int3
das
mov
fisubr
and
aaa
cwde
sub
sub
int3
mov
shr
ret
jle
sbb
sbb
pushf
cmp
sub
leave
sbb
in
adc
(bad)
outs
push
std
mov
push
ins
cmp
mov
inc
js
in
rcr
sub
in
inc
int3
xor
lahf
sbb
sbb
adc
pop
ins
adc
mov
mov
jle
sbb
sub
and
fsubr
adc
loopne
adc
dec
dec
lea
(bad)
in
sub
sub
iret
(bad)
(bad)
out
pop
pop
and
mov
sub
push
fcomp
and
gs
outs
mov
push
pop
movs
popa
(bad)
sbb
shufps
dec
in
dec
adc
sbb
sbb
ret
add
xor
lea
mov
(bad)
in
sub
sbb
rcr
bound
sbb
cwde
inc
jl
pop
and
jbe
adc
adc
mov
pop
pop
gs
and
lods
adc
cmp
lea
ret
out
adc
leave
popf
or
ret
shl
sbb
jl
popf
cmp
sbb
cmps
popa
or
add
jmp
hlt
push
xor
sub
xlat
lds
cmp
sbb
pushf
lods
fsub
or
mov
or
and
stos
dec
jnp
sbb
nop
stos
fidiv
aas
lds
(bad)
or
xchg
inc
jne
pop
sbb
mov
add
pop
dec
mov
dec
mov
dec
out
pop
adc
sub
fldcw
imul
and
sub
int3
ja
rcl
xor
cmp
enter
das
rcr
popf
sub
inc
lea
enter
inc
adc
dec
sub
clc
sti
test
fimul
cmc
sbb
mov
rcr
mov
ins
cmp
and
pop
inc
mov
pop
mov
push
lods
pop
inc
cmp
xor
rol
or
inc
stos
lds
sbb
ins
add
std
aam
cmps
xchg
pusha
sub
mov
and
mov
lods
mov
mul
imul
push
imul
imul
pop
pop
pop
sub
ins
fldlg2
mov
(bad)
sahf
scas
ficom
and
xlat
mov
cmp
xlat
cmp
cld
lods
imul
mov
movs
sbb
pop
sbb
ins
mul
lods
retf
adc
dec
adc
cmp
cld
mov
adc
adc
adc
mov
sti
mov
xor
adc
repz
or
loop
popf
fnstsw
jo
or
ret
sub
pop
mov
mov
inc
adc
xor
and
fcomp
push
sbb
test
push
push
enter
cmp
stc
leave
pop
add
add
sub
sub
ss
(bad)
loop
push
out
cmp
scas
sub
xor
sub
push
fimul
pop
cs
push
ret
sbb
adc
jnp
in
leave
adc
adc
sar
(bad)
ret
mov
sub
cmp
and
in
bound
adc
sbb
xor
pop
jnp
sbb
sbb
xor
push
ins
imul
sbb
pusha
mov
sbb
add
xor
push
sub
cmp
jbe
imul
in
pop
add
lods
cmp
fnstcw
cmc
test
cmp
imul
cmp
sub
pop
pop
pop
adc
adc
js
dec
(bad)
mov
ins
pop
stc
xchg
push
mov
aam
sub
imul
clc
std
in
pop
sub
or
xor
sub
mov
pusha
or
adc
dec
fist
pop
lea
or
add
mov
sub
mov
std
xchg
std
cmp
data16
lods
mov
jo
xor
pop
xchg
sbb
mov
or
stos
fstp
out
push
xor
mov
cmp
mov
adc
(bad)
push
out
pop
inc
mov
adc
add
outs
jbe
pop
dec
inc
xchg
mov
imul
in
rcr
mov
xchg
mov
pop
(bad)
movs
mov
sahf
loope
add
adc
jp
pop
outs
push
ds
sti
xor
or
jno
mov
das
sub
and
mov
sbb
fcomp
mov
adc
movs
into
inc
les
div
dec
sar
pop
mov
mov
lahf
jo
in
dec
int3
pop
iret
mov
jle
shl
js
cdq
inc
das
pop
xor
movs
inc
lea
cld
in
out
jl
add
mov
jecxz
js
out
xor
sbb
(bad)
mov
cmp
outs
xchg
mov
nop
fiadd
or
cmp
mov
cmp
xchg
mov
sub
into
js
pushf
aas
xor
mov
pop
imul
inc
mov
inc
inc
add
mov
pusha
retf
test
dec
mov
sti
popf
aas
ja
mov
pop
push
sub
rcr
shl
xor
cmp
out
aas
adc
xchg
and
mov
(bad)
hlt
sahf
stos
xor
lock
pop
in
sub
push
xor
loopne
xchg
pop
imul
inc
sbb
fucomi
sub
dec
pop
inc
cmp
retf
mov
mov
sbb
fisttp
push
pusha
jle
and
bound
lea
bound
lock
ins
sub
adc
xor
mov
ins
pop
xor
pusha
sub
xor
pop
dec
xchg
mov
add
fiadd
fnstenv
jmp
dec
sub
mov
xor
dec
and
and
outs
in
cmp
ins
das
outs
imul
push
pcmpgtd
ud0
mov
fistp
repz
sub
sbb
adc
xchg
and
xchg
mov
sub
cwde
pop
or
aam
(bad)
in
sub
mov
cld
aad
ins
add
jbe
popf
ss
xor
(bad)
(bad)
inc
xor
loop
std
mov
aad
push
fs
sbb
mov
outs
lds
cmp
add
pusha
cmp
sbb
ins
mov
lahf
pop
cmps
and
mov
or
xchg
jnp
(bad)
jne
xchg
retf
in
jne
adc
and
std
es
ja
ins
cmp
adc
pop
dec
into
jmp
dec
mov
rcr
int3
xor
adc
fnsave
cmps
sar
call
into
clc
scas
xor
inc
retf
sub
adc
inc
push
rcr
xor
cdq
popf
popf
(bad)
mov
int
xchg
mov
dec
sbb
ins
sbb
dec
jnp
push
and
and
int
mov
add
and
push
jnp
pop
add
push
fld
sbb
std
adc
inc
pusha
fnstsw
das
aad
mov
outs
pop
out
shr
pop
(bad)
mov
sti
lea
pop
pop
out
cs
(bad)
mov
movs
ss
xchg
daa
adc
retf
cmp
cmp
cmp
data16
or
pop
aam
rcr
push
cmp
mov
(bad)
adc
les
and
dec
ins
sub
lds
and
fisubr
shr
leave
jmp
fsub
bound
inc
mov
mov
and
mov
in
ins
sub
add
xor
shr
sbb
sbb
lods
mov
add
aaa
(bad)
mov
scas
mov
arpl
mov
mov
(bad)
out
sub
sbb
mov
mov
popf
ja
lea
cmp
call
dec
hlt
sbb
inc
sbb
pusha
dec
mov
mov
in
add
inc
mov
(bad)
sub
rcl
add
mov
sub
mov
mov
loope
fcom
and
inc
rcr
test
aad
fs
sti
xchg
sbb
fdivr
stc
rol
mov
sbb
mov
adc
pop
and
sub
(bad)
fisubr
adc
das
xchg
pop
add
cmp
dec
sub
jl
inc
dec
fnstenv
cmp
or
mov
and
inc
ror
imul
pusha
push
daa
sbb
mov
sub
adc
inc
add
stos
dec
jmp
sub
mov
popf
and
or
daa
cmp
imul
add
add
lods
mov
push
xor
mov
popf
mov
adc
popa
and
sbb
and
sub
sbb
and
fistp
jmp
mov
mov
sbb
popf
popf
imul
popf
cmp
xchg
test
popf
and
lods
nop
sbb
push
shr
das
and
add
ins
int3
cmp
ss
das
or
pop
jnp
in
mov
push
and
fimul
fmul
add
enter
data16
cmp
jp
cmp
fnstenv
pop
pop
ins
and
les
sub
inc
cmp
test
fidiv
sbb
mov
push
pop
sub
sub
test
cmps
mov
push
sbb
sbb
xchg
cmp
add
nop
jbe
cdq
inc
fisttp
call
popf
cmp
dec
test
sub
pop
lds
mov
sbb
pop
jl
lea
imul
push
cmp
pop
fwait
cld
aas
loopne
inc
or
dec
stos
sbb
mov
popf
daa
lds
mov
sub
in
cmp
adc
push
pusha
mov
dec
mov
es
mov
in
das
pop
pusha
or
inc
in
sub
xor
fadd
ins
sub
jae
mov
test
sbb
(bad)
add
sbb
pop
sbb
je
sbb
add
inc
dec
cmp
and
dec
push
xchg
dec
nop
xor
ins
push
fld
cmp
jns
fisubr
aas
out
(bad)
das
out
outs
and
xchg
mov
pop
in
inc
jnp
inc
sub
mov
push
or
arpl
pop
sub
lahf
lods
add
lahf
mov
frstor
jne
in
icebp
repz
pop
das
jno
cmp
and
test
aad
xor
sub
mov
jp
loope
xlat
(bad)
xchg
inc
(bad)
popf
sar
fistp
cmp
mov
cmc
adc
imul
nop
mov
lahf
pop
fsubr
xor
mov
pop
mov
pop
popf
pop
(bad)
in
mov
pushf
dec
and
pop
pop
enter
dec
cmp
out
cmp
and
imul
jbe
mov
xchg
cmp
mov
adc
pop
jnp
mov
sub
sbb
scas
das
adc
setg
push
pop
sbb
pop
imul
pop
fsub
emms
or
les
cmp
and
enter
ins
sbb
aaa
adc
xlat
mov
push
cmc
sbb
sbb
sbb
and
mov
mov
mov
add
pop
push
xchg
xchg
mov
inc
iret
fld
sbb
mov
fistp
mov
(bad)
add
movs
xor
pop
sbb
scas
and
dec
pusha
shl
not
scas
cmc
icebp
sub
cs
push
or
add
sub
popa
push
cmp
and
clc
aam
(bad)
pop
jmp
xor
cmp
mov
mov
stos
inc
popa
int
daa
test
push
pop
fiadd
arpl
and
imul
nop
or
(bad)
rcl
mov
lea
or
sbb
dec
das
pushf
xchg
and
rcr
das
lods
sub
das
das
cmps
fcom
pop
aam
(bad)
shr
mov
stos
add
loope
in
pusha
fdivr
mov
in
or
pop
and
sub
or
dec
dec
cld
cmp
bound
lods
pop
movs
and
stos
loopne
jmp
sbb
das
ja
inc
xor
popf
xchg
popf
xor
popf
popf
push
ret
aad
das
mov
jbe
inc
in
jne
fistp
aas
and
jp
mov
rcl
int
mov
popa
jp
das
fisub
in
lea
div
push
mov
ins
cmp
sub
imul
sbb
and
adc
xor
mov
aam
in
dec
adc
fld
sub
push
pop
sub
dec
cmps
add
sub
xchg
and
lock
sub
add
dec
and
mov
int
cld
or
adc
icebp
cld
ins
in
pop
sahf
xor
adc
sub
or
or
daa
pusha
mov
int
sbb
sbb
dec
ins
in
call
dec
dec
xor
push
sahf
call
xchg
push
ficom
pop
retf
or
dec
lods
lods
xchg
pop
lods
cmp
pop
sbb
cdq
scas
mov
imul
jl
add
rcr
xor
jg
mov
pop
and
pop
or
jbe
sbb
mov
js
imul
and
cmp
adc
push
pop
ins
add
sbb
popf
rcr
scas
sar
cwde
cmp
cdq
clc
mov
add
ds
fldenv
shr
aas
lods
and
pop
daa
dec
fisubr
ins
adc
dec
fldcw
xchg
adc
jl
ins
xchg
push
mov
jns
dec
pop
push
pop
add
test
mov
shl
cmp
push
(bad)
in
mov
ins
mov
add
pop
inc
dec
ins
mov
(bad)
mov
lahf
sub
and
and
fsub
xor
push
(bad)
cmps
popf
and
nop
pop
dec
sub
imul
arpl
adc
aad
push
sub
ins
das
popa
add
xchg
fisubr
pop
stos
movs
push
jo
push
vprotq
xor
movs
sbb
push
jne
das
adc
or
add
shl
push
sbb
mov
cmp
pusha
test
inc
js
popa
inc
push
aas
adc
rcr
push
mov
bound
fwait
lds
dec
fadd
cmp
or
and
add
icebp
jb
mov
xor
popa
and
jb
pop
cmp
nop
popa
mov
inc
pop
retf
xor
add
aaa
push
and
sbb
cli
sub
push
fsub
mov
daa
jmp
das
mov
loopne
in
sbb
shl
sub
cdq
shl
mov
mov
push
and
jbe
jmp
push
mov
push
fild
push
popf
adc
loopne
jnp
xlat
sub
inc
in
cmp
rol
pop
rcl
adc
aaa
pusha
sub
push
or
push
aaa
add
ins
shl
and
sbb
or
ret
mov
nop
sub
rcr
pop
inc
mov
mov
push
pop
cmp
push
popf
sub
popf
inc
and
test
and
xchg
sbb
das
popa
pop
push
adc
das
pop
and
shl
fwait
xor
les
jne
movs
test
popf
jae
adc
pop
adc
xor
mov
popf
retf
popf
es
and
popf
popf
stos
test
push
add
add
(bad)
jno
mov
dec
inc
dec
xor
in
mov
sub
sub
stos
in
pop
jecxz
pop
sub
stos
imul
das
rcr
jne
xor
rol
push
and
(bad)
(bad)
pop
(bad)
cs
jecxz
and
ficom
jge
dec
xor
and
fcomi
and
das
fmul
pushf
sub
jg
imul
xchg
movs
and
bound
les
icebp
sub
call
xor
push
shl
sub
addr16
push
ficom
sub
jmp
and
fcmovbe
push
inc
aam
dec
adc
cmps
daa
inc
sub
daa
sub
jbe
sub
or
sub
fnstsw
xchg
mov
sub
adc
clc
sub
ins
add
das
fnstenv
lods
sub
out
lahf
daa
(bad)
fadd
cwde
das
retf
das
in
sbb
xchg
dec
add
lods
into
mov
mov
mov
shl
sub
xor
nop
push
jl
mov
pop
inc
push
popf
and
daa
int3
lods
sub
mov
stc
fwait
ja
mov
or
sub
and
add
pop
jge
sub
test
sub
in
enter
out
fisub
add
fcmovnu
repz
movs
push
ds
jmp
lahf
push
push
mov
ds
sub
test
dec
in
movs
jbe
mov
pop
jmp
sbb
mov
mov
fadd
sbb
das
bound
enter
lds
dec
lea
sub
pusha
mov
rcr
mov
push
cmp
mov
lods
daa
shr
jbe
fild
sbb
mov
bound
jns
pop
xor
mov
add
mov
bound
mov
mov
and
in
mov
dec
adc
stos
dec
ja
mov
pop
push
loope
pop
cmp
push
sbb
rcl
scas
rcl
and
(bad)
sub
bound
addr16
nop
cmp
pop
gs
and
int
and
xchg
fadd
and
pop
jae
aam
pushf
xchg
mov
(bad)
pop
mov
outs
or
sub
pop
inc
dec
mov
adc
pop
pop
lds
les
inc
add
push
jae
(bad)
daa
jno
push
jg
sub
dec
lods
sub
pop
aad
push
retf
and
popa
xchg
mov
fidiv
daa
mov
inc
sbb
out
shl
mov
or
ret
test
and
sbb
jmp
mov
jl
sbb
stos
mov
sub
stos
outs
push
mov
shr
scas
sub
lea
sbb
inc
(bad)
stc
sbb
add
dec
mov
ret
mov
mul
pop
movs
sub
mov
sbb
mov
jnp
sub
adc
pusha
pop
add
mov
pusha
fbld
mov
lods
pop
mov
mov
inc
pop
fild
push
in
lahf
sub
ins
sbb
mov
mov
daa
push
mov
fs
test
leave
cmp
rol
mov
test
or
mov
cmp
mov
popf
jge
outs
push
popa
pop
or
xor
int3
lea
xor
xor
sti
dec
in
and
push
mov
push
das
pop
and
leave
and
ins
sbb
sbb
popa
xchg
das
ins
stos
pop
in
jg
dec
and
fisub
sub
test
das
or
adc
in
mov
pop
pop
push
xchg
add
nop
mul
popf
les
or
and
xor
and
sub
sub
ins
(bad)
mov
mov
push
inc
pop
popa
movs
xor
and
mov
and
fstp
adc
jmp
and
popa
mov
jle
dec
sbb
jb
dec
(bad)
xchg
mov
xor
cmps
scas
scas
mov
xor
sub
pop
ja
sub
cs
aad
push
dec
and
in
push
and
ins
and
and
lods
add
push
outs
xor
jbe
mov
xor
xchg
lahf
xor
xor
bound
inc
and
xor
push
xchg
pop
adc
stos
stos
int3
jp
cmp
mov
dec
mov
mov
jae
lods
jl
jne
and
popa
adc
iret
jno
loopne
sub
adc
popf
popf
dec
fisub
push
xor
cmp
mov
mov
test
in
sbb
lds
xchg
das
or
loopne
push
and
sbb
pop
ret
shl
adc
test
sbb
or
fdivr
call
sub
mov
popf
pushf
jl
shl
or
inc
or
and
sbb
pop
or
dec
in
test
pop
int3
aas
dec
dec
or
(bad)
lods
ins
pop
jg
dec
and
fist
dec
and
or
dec
leave
fsub
pusha
and
mov
loopne
sub
cmps
ins
lock
mov
xchg
pop
pop
and
and
add
xchg
nop
fcomp
add
push
sbb
int3
jae
xor
ins
fisttp
movs
adc
arpl
jbe
sbb
add
lock
adc
add
pop
das
sub
dec
ins
mov
sub
iret
sub
scas
das
sub
mov
pop
icebp
(bad)
stos
movs
stc
neg
jns
sub
sbb
popf
mov
xchg
ins
(bad)
cmps
mov
sub
fadd
sub
mov
or
cdq
sbb
mov
mov
xchg
inc
movs
and
push
mov
stos
test
in
fisub
pop
sub
lss
or
adc
jno
xchg
mov
dec
adc
mov
sub
fstp
adc
cmp
mov
ins
sbb
imul
mov
dec
inc
jmp
push
dec
sbb
pushf
mov
lea
sbb
mov
pop
jmp
sbb
pop
in
sbb
pop
jmp
push
aas
jmp
or
(bad)
adc
fnsave
and
sbb
sub
xchg
mov
and
jle
sbb
ficomp
push
mov
fadd
mov
popf
mov
test
cdq
sub
sub
fyl2xp1
rcl
je
clc
popa
pop
pop
nop
das
out
(bad)
call
pusha
arpl
aad
popa
sbb
ficom
cld
dec
mov
ss
adc
or
test
imul
mov
call
and
lods
jae
in
xchg
push
sbb
pusha
adc
repnz
adc
test
push
jb
xchg
(bad)
push
cmp
dec
sub
inc
ret
and
fnstsw
gs
push
imul
mov
aad
and
xor
daa
nop
add
mov
or
adc
mov
outs
jmp
stc
pop
mov
pop
out
sub
daa
js
xchg
pop
push
pop
ret
push
not
jnp
push
pop
and
and
imul
cmp
daa
jge
inc
dec
sub
pop
in
xor
pop
jle
and
fisub
imul
and
gs
push
(bad)
imul
sahf
(bad)
mov
rcl
imul
pop
and
xor
gs
mov
mov
arpl
outs
pop
frstor
test
pop
adc
imul
out
mov
adc
pop
pop
in
push
cmp
stc
stc
mov
in
popf
sahf
mov
arpl
sbb
dec
repz
push
mov
shr
pop
cwde
daa
(bad)
fidiv
fistp
cdq
mov
shl
daa
sbb
nop
div
sbb
adc
das
dec
in
lods
test
jmp
jmp
ins
inc
(bad)
and
mov
sub
test
adc
cmpxchg
aaa
pusha
or
or
mov
lahf
scas
push
sbb
lods
and
out
pop
hlt
in
das
xor
pop
push
cwde
xor
ds
in
mov
or
add
add
test
lahf
popf
ficom
ja
ins
add
and
adc
ins
inc
ret
out
(bad)
cmp
rcr
push
cld
and
jo
rol
(bad)
and
add
outs
pusha
sbb
lea
fadd
and
sbb
or
jne
cmp
mov
lods
into
pop
sbb
test
neg
(bad)
adc
pop
in
adc
cld
retf
inc
daa
mov
rcr
cmp
dec
sbb
frstorw
pop
jns
jbe
arpl
cs
add
pusha
xchg
neg
lock
and
inc
sbb
cmps
ins
adc
in
fs
or
xor
sub
jbe
pop
daa
mov
mov
retf
aaa
lea
and
imul
data16
add
jnp
and
cmp
fst
push
sub
sub
pop
jmp
and
mov
cmp
mov
outs
aad
arpl
stos
imul
pop
mov
rcl
call
push
or
sub
lods
and
stos
sbb
jbe
xor
lods
mov
cmp
sbb
fcomp
and
in
div
pop
gs
cmp
mov
mov
xor
(bad)
ret
mov
test
repz
xor
lods
aaa
xchg
aaa
xor
inc
fwait
xor
jbe
xor
dec
sbb
inc
inc
adc
maxps
cld
lea
mov
add
pop
nop
mov
or
(bad)
cmp
adc
add
and
and
mov
xor
jbe
and
rcr
and
and
mov
pusha
push
iret
pop
push
(bad)
out
and
and
push
fwait
cmp
movs
mov
dec
push
sbb
mov
ja
cmp
scas
jne
shr
dec
fisubr
xor
(bad)
popa
cmp
das
sbb
xor
mov
stos
imul
add
mov
cmp
fiadd
(bad)
cmp
sbb
and
adc
lods
lods
dec
inc
lods
cdq
dec
or
add
in
pop
push
std
in
pop
int3
int3
das
rol
sbb
data16
sub
mov
mov
int
idiv
pop
and
fdiv
push
pop
icebp
xchg
ins
imul
xor
in
movs
int
mov
inc
lea
fcomp
cdq
add
push
ret
push
and
std
push
dec
js
jl
add
ins
push
cmp
mov
ret
mov
mov
cmp
mov
movs
jne
cld
push
sub
and
mov
cwde
shr
xor
xor
mov
outs
mov
and
(bad)
sbb
pop
sub
les
arpl
jmp
cmps
jmp
xor
sub
neg
les
sbb
and
adc
xchg
or
ret
leave
jg
xchg
icebp
(bad)
(bad)
int
nop
push
in
sbb
pop
xor
and
ins
fcomp
jl
xor
jns
aas
rol
inc
and
les
nop
ss
and
pop
lea
adc
sbb
sbb
inc
daa
daa
fdivr
mov
and
and
push
dec
cmp
daa
ret
adc
repnz
mov
enter
pusha
(bad)
push
add
pop
add
out
push
xor
sbb
inc
mov
frstor
xor
lea
outs
int
mov
fsub
push
mov
pop
cs
adc
and
bound
jl
imul
pop
fiadd
sbb
fstp
test
adc
inc
daa
das
dec
push
les
daa
push
mov
lods
cmp
sbb
in
pop
leave
sbb
out
mov
dec
mov
and
inc
mov
sbb
and
sbb
push
fcomp
call
sbb
xchg
ss
sbb
cmp
ret
mov
pop
(bad)
sub
bound
inc
push
(bad)
and
jecxz
dec
and
dec
fdivr
pop
sbb
mov
lock
and
(bad)
in
fstp
mov
mov
sbb
and
test
add
pop
push
mov
mov
daa
jnp
or
pop
mov
les
fstp
xchg
sbb
sub
iret
shl
cmp
ins
sub
repz
movs
sub
xor
call
das
and
sar
das
(bad)
outs
and
and
fsubr
popf
sub
or
xor
fld
xchg
mov
aaa
leave
xor
mov
inc
fld
popa
and
push
inc
std
(bad)
or
sbb
xor
push
(bad)
and
pop
fisttp
gs
imul
sub
adc
sbb
fsubrp
js
push
das
dec
jne
ss
sub
ins
xor
lds
inc
jb
pop
sub
inc
jnp
mov
cmp
movs
xor
mov
add
das
(bad)
aam
sti
inc
sub
mov
mov
sub
and
inc
fisubr
mov
inc
xor
push
iret
adc
sub
sub
fld
fadd
adc
dec
ret
pop
sub
daa
seto
mov
mov
inc
mov
sub
inc
mov
push
adc
scas
jmp
xchg
(bad)
lods
test
sub
sub
xlat
cmp
inc
mov
out
lock
fistp
daa
mov
in
mov
aas
ss
dec
fcomp
push
and
push
pop
cmp
inc
cmp
and
mov
sub
(bad)
sbb
ins
test
lea
mov
ins
and
sbb
dec
sub
loopne
push
movs
sub
loope
mov
ror
cmp
ins
mov
sub
jl
ins
rcr
and
mul
sub
and
mov
int
aam
cdq
daa
dec
sub
pop
sbb
ret
or
cmps
pop
inc
and
sbb
bound
pop
das
daa
mov
das
or
mov
cld
jl
daa
das
imul
mov
pop
das
add
cmp
ins
xor
into
and
mov
xchg
or
cmps
adc
xchg
fcom
lods
fstp
sub
pop
and
arpl
imul
dec
sbb
ins
lods
ss
mov
adc
add
add
movs
lods
aad
(bad)
mov
daa
std
sub
mov
into
mov
in
sar
popf
and
mov
or
cmp
sub
or
ins
or
and
sbb
xchg
pop
push
xlat
scas
ror
vmaxpd
add
mov
in
nop
cmps
and
sub
xchg
fadd
inc
imul
test
(bad)
imul
push
stos
addr16
ins
and
out
in
push
fld
or
dec
cmp
ins
imul
push
retf
jno
data16
rol
jnp
sar
outs
xchg
dec
cmps
movs
in
(bad)
rol
cdq
sub
xor
xor
mov
and
mov
and
imul
movs
mov
mov
dec
sub
pop
push
in
adc
icebp
pop
adc
add
cmp
mov
ficomp
cmp
ins
xchg
xor
jg
sbb
push
and
dec
adc
shl
dec
pop
ficomp
and
inc
sub
test
jbe
add
daa
mov
sahf
and
nop
cdq
(bad)
sti
adc
bound
cld
push
shl
sub
mov
test
pusha
sbb
adc
dec
inc
and
sbb
movs
pop
ficomp
out
and
ins
jecxz
imul
sbb
or
cmp
(bad)
outs
xor
lods
xchg
sub
or
mov
test
lds
dec
dec
ret
or
jg
dec
lea
mov
mov
push
push
int
inc
mov
bound
jae
(bad)
push
rcr
(bad)
fimul
push
xchg
sub
leave
mov
bound
imul
pop
out
lahf
add
mov
push
aaa
xor
fwait
jmp
xchg
xor
popa
mov
(bad)
mov
mov
leave
sub
sbb
je
push
out
pop
popf
adc
xor
scas
and
pop
xchg
sub
inc
sub
ins
add
pop
or
rcl
sbb
(bad)
mov
bound
imul
test
sub
mov
pop
mov
scas
scas
es
mov
pop
bound
add
push
push
out
ret
lahf
mov
mov
ficom
in
xchg
pop
jnp
and
sub
add
pop
jnp
fisub
pusha
adc
fcomp
push
and
sbb
fsubr
adc
sbb
dec
cld
call
and
mov
ret
mov
mov
inc
push
ins
adc
fiadd
test
(bad)
inc
fstp
out
pop
outs
adc
add
sub
pop
add
adc
mov
sbb
outs
add
test
jmp
leave
mov
pop
jae
or
jmp
stos
das
pop
aaa
ds
mov
lods
cmp
mov
int
(bad)
cs
mov
mov
frstor
mov
inc
pop
push
(bad)
and
adc
ins
mov
sahf
xchg
mov
(bad)
mov
fbld
dec
inc
in
cmp
retf
pop
int3
or
pop
in
adc
fs
lds
add
retf
outs
shl
pop
(bad)
lods
ins
stos
and
outs
imul
mov
jnp
pop
cmovge
mov
(bad)
and
cmp
lahf
adc
sub
mov
mov
mov
fmul
mov
jb
cmp
dec
fisubr
push
xchg
clc
cld
sub
mov
pusha
xor
mov
xor
jnp
add
adc
ret
sbb
mov
sub
daa
pusha
mov
and
arpl
mov
pop
cmp
ret
sahf
adc
sub
or
sub
adc
mov
ja
call
sub
or
mov
pop
cmps
add
not
sbb
jge
dec
and
dec
jmp
in
mov
add
cmp
push
or
ins
fist
pop
pop
fld
jnp
leave
or
adc
fcmovbe
and
mov
fstp
jge
sub
cld
or
mov
pop
pop
fldenv
(bad)
(bad)
rcl
jge
arpl
dec
les
in
add
int3
inc
pop
add
pop
pop
fdivr
out
sbb
or
jo
daa
ja
xchg
bound
pop
pop
or
pushf
pop
outs
add
adc
fild
daa
mov
jno
ss
std
adc
and
into
mov
jle
cmp
sub
push
pop
jnp
sbb
pop
fcomp
stos
dec
and
mov
sub
mov
lahf
sahf
mov
pop
pop
sahf
lods
nop
xchg
ret
or
pop
lahf
das
dec
(bad)
sub
xor
jo
ins
pop
ss
xor
sar
or
push
shl
and
mov
xchg
xchg
xchg
pop
and
pop
add
dec
das
lahf
pop
fldenv
lods
mov
adc
inc
pop
popf
sub
shr
pusha
lock
das
in
popf
stos
inc
es
or
les
or
push
xor
fadd
ins
cmp
popf
mov
dec
mov
fimul
xor
sbb
lods
lods
ficom
dec
cmp
loope
add
sub
shl
push
sub
add
mov
mov
and
gs
cmp
mov
adc
sub
in
mov
dec
mov
imul
sub
add
pop
xchg
test
(bad)
ficomp
dec
ror
ror
add
cmp
jl
fsubr
ins
sbb
fmul
popf
cmp
mov
rcr
(bad)
and
loopne
lods
pop
pop
add
es
xchg
xchg
sub
les
inc
sub
xor
mov
lods
and
add
repnz
jae
and
lods
cmp
cmp
adc
stos
es
jo
sbb
fs
popf
popf
mov
jmp
(bad)
retf
adc
lahf
scas
pop
mov
push
out
push
ins
jmp
cmp
pop
pop
xor
jge
cdq
cmp
and
test
das
in
add
pop
pop
lods
lods
add
daa
sub
imul
imul
mov
add
mov
push
xor
je
gs
xchg
movs
imul
adc
aaa
xor
inc
ret
rcr
sbb
dec
lods
mov
loop
pop
pop
dec
fadd
ficomp
or
and
sub
addr16
fldcw
loopne
and
aad
xchg
jne
ins
add
pop
inc
and
mov
rcr
fbld
pop
adc
mov
add
add
daa
and
add
cmp
lea
shl
push
add
push
jnp
imul
aas
jg
fcmovbe
push
pop
mov
popf
sub
fimul
xor
push
cmps
sub
pop
add
xor
xor
sub
push
and
daa
ins
mov
pop
sbb
add
push
add
popf
popf
enter
popf
popf
xchg
or
adc
and
pop
sub
in
inc
imul
ins
jae
outs
ficomp
adc
cmp
jge
les
or
dec
jnp
div
aas
ins
iret
push
adc
syscall
pop
mov
inc
or
mov
aam
sbb
pop
add
sub
nop
fmul
xchg
adc
inc
mov
mov
push
pusha
jnp
sar
push
aas
add
std
pushf
in
sbb
loopne
dec
daa
and
jo
ds
adc
(bad)
jbe
xor
imul
adc
sub
jl
ja
sbb
xor
arpl
sub
xchg
sbb
cdq
sbb
outs
jae
test
dec
ins
sub
push
jecxz
rcr
and
shl
sub
mov
sub
dec
mov
dec
adc
mov
jmp
mov
(bad)
stc
sbb
xor
push
pop
imul
inc
push
or
popf
adc
cmp
nop
popf
popf
add
(bad)
sbb
dec
or
ficomp
rcr
ret
daa
or
ins
shr
cmp
or
icebp
test
adc
fild
ds
arpl
imul
lods
mov
imul
mov
lea
pop
pop
les
mov
sub
push
stc
das
dec
mov
push
bound
pop
popa
sub
xchg
sub
bound
(bad)
inc
les
ins
ins
pop
daa
and
add
inc
inc
push
mov
push
imul
push
cmp
sbb
fiadd
push
mov
sar
je
cdq
push
push
fisttp
out
or
inc
xor
and
daa
mov
fsub
popf
cmp
fisub
shr
adc
xchg
or
xchg
adc
sub
ret
out
sbb
pop
mov
sbb
retf
xchg
and
sub
in
and
cmp
ins
imul
push
dec
sub
sub
adc
sub
mov
sbb
dec
sbb
repz
das
loop
and
pop
popf
icebp
shl
mov
test
sahf
sbb
mov
or
sbb
cmp
push
mov
out
or
mov
sti
std
xor
test
addr16
cmps
cdq
cmp
iret
rcr
xchg
shl
(bad)
fisubr
xor
fadd
ret
jl
and
cmp
shl
mov
sbb
(bad)
fst
daa
cmp
cdq
jnp
pop
adc
addr16
test
push
and
arpl
imul
sub
adc
dec
adc
pop
mov
ins
sub
fdivr
pop
dec
xlat
pop
std
popa
aam
and
cmp
in
mov
movs
ss
int
dec
inc
dec
ins
rcl
das
push
push
push
fld
aad
push
cmp
mov
pop
sub
cmp
sub
jl
cmp
inc
ficomp
mov
fistp
pop
sub
retf
adc
cs
mov
or
lock
mov
mov
adc
fdiv
add
xor
pop
fild
cs
pop
add
xor
adc
push
aad
jnp
ins
aaa
and
mov
nop
mov
popf
push
or
inc
mov
push
push
sub
jmp
sbb
mov
cmps
mov
sbb
cmp
add
std
and
and
popa
pop
ror
call
arpl
or
data16
in
in
or
adc
sub
push
and
push
(bad)
(bad)
aas
inc
cmp
lods
fadd
cmp
pusha
mov
and
sub
jmp
dec
xor
push
fidivr
xchg
lods
dec
mov
or
xor
aas
xor
sub
mov
cdq
popa
fild
mov
jp
es
dec
add
sbb
lds
mov
ins
xor
mov
add
mov
test
inc
add
add
out
push
and
shl
pop
sbb
xor
retf
dec
xor
data16
aas
test
pop
shr
adc
adc
and
push
stc
out
out
sbb
imul
sar
sub
cmp
fisttp
pop
popf
push
and
and
data16
ss
xchg
sub
bound
test
mov
sub
add
add
lea
inc
cmp
cmp
(bad)
and
fisub
jno
mov
fisub
lods
mov
xchg
xor
stos
adc
scas
mov
repz
sbb
(bad)
push
adc
sti
jl
daa
and
mov
stos
sub
pusha
pop
vcomisd
mov
pop
mov
aaa
das
adc
dec
mov
in
push
mov
and
in
or
daa
popf
(bad)
push
mov
ins
push
or
jmp
cmp
push
movs
mov
and
xor
sub
sub
push
cmp
das
stc
sbb
sub
mov
pop
ins
jne
mov
in
sub
push
mov
or
sub
mov
je
(bad)
dec
mov
sahf
dec
lea
mov
movs
lods
mov
rcl
leave
xchg
xor
inc
pop
mov
or
xchg
adc
dec
sbb
fbstp
inc
cmp
mov
lods
test
jecxz
xchg
cmp
push
in
aaa
mov
sub
sub
adc
push
sub
mov
cmp
or
mov
lods
mov
adc
push
inc
(bad)
mov
jecxz
lea
adc
bound
dec
cmp
out
or
adc
xor
ret
sub
mov
repz
scas
popf
out
test
(bad)
adc
mov
xor
(bad)
das
imul
mov
cmp
mov
mov
sbb
shr
mov
add
pop
and
push
mov
(bad)
mov
inc
dec
sub
adc
cmc
push
ins
fbld
sub
mov
mov
les
mov
ret
xor
repz
rcr
mov
mov
push
in
sub
sub
mov
xchg
and
push
push
rcr
sbb
adc
(bad)
jbe
sbb
adc
push
es
sub
pop
xlat
pop
shl
cmp
push
adc
pop
test
adc
fcomp
bound
push
lds
loope
pop
xor
pop
sub
jb
mov
popf
pop
mov
cwde
dec
in
arpl
xor
and
xchg
fcmovnb
std
lea
mov
call
fst
sbb
pop
lods
fldcw
xchg
mov
push
pop
dec
sbb
aas
icebp
ins
imul
sub
test
sbb
xor
sbb
pop
pushf
das
sbb
mov
sar
xchg
cmp
icebp
mov
test
scas
repz
pop
lock
pop
pushf
popf
or
xchg
cmp
(bad)
fcomp
mov
inc
test
cmp
adc
jae
adc
(bad)
jmp
add
stos
sbb
(bad)
mov
push
movs
sub
sbb
sbb
xor
mov
xor
ficomp
push
dec
xor
stc
pop
xchg
pusha
outs
mov
sub
sbb
mov
push
mov
pop
jne
sbb
inc
or
jecxz
daa
dec
mov
imul
add
or
jbe
xchg
fimul
test
mov
stos
cmp
pop
cmp
cmp
cwde
add
and
movs
sbb
cmp
sub
aaa
test
(bad)
or
jp
mov
pop
xchg
(bad)
xor
fstp
sub
frstor
and
bound
jae
jbe
rol
push
and
inc
jle
add
ret
adc
xor
dec
inc
(bad)
loopne
mov
(bad)
int
jmp
adc
imul
cmps
aad
ins
sub
push
xor
mov
mov
sub
aas
xor
mov
and
and
cmc
mov
pop
mov
adc
adc
stos
pop
outs
das
dec
mov
movs
pop
sub
push
adc
add
jnp
int
outs
push
jo
int
xor
add
add
mov
sub
rol
ins
shl
push
xchg
sbb
mov
(bad)
(bad)
jbe
push
xor
loop
mov
mov
push
dec
das
xchg
bound
add
xor
stos
dec
sub
sub
xor
push
cmp
pop
inc
pop
xor
push
outs
les
mov
popa
mov
sub
(bad)
dec
bound
xor
sbb
mov
das
dec
pop
and
xchg
pop
pop
fadd
test
fwait
inc
or
movs
cmps
xor
mov
movs
xor
add
cmp
sbb
push
dec
mov
or
cmp
mov
lods
test
or
sbb
jmp
add
xchg
inc
and
adc
inc
dec
dec
and
and
pop
and
inc
out
out
cmp
sbb
and
test
into
push
push
ret
ja
pop
fidivr
lahf
dec
cmp
push
mov
arpl
in
or
sbb
les
int
rcl
repnz
lods
cmp
cld
sbb
adc
cmp
pushf
test
mov
ins
xor
pop
pusha
xchg
sub
xchg
and
ins
popf
xchg
icebp
scas
iret
push
icebp
push
movs
mov
push
lea
fwait
jns
aas
imul
jge
xchg
sbb
jp
outs
xchg
dec
(bad)
std
lods
ins
sbb
mov
fsubr
mov
lea
ja
fcomp
pushf
clc
xchg
icebp
(bad)
mov
daa
sub
(bad)
xchg
repz
repnz
sub
cmp
scas
and
sbb
dec
xchg
call
inc
mov
sub
and
fiadd
rcr
push
inc
pop
push
aas
sub
and
inc
imul
rcr
pop
jl
pop
pop
and
or
add
jnp
adc
out
sahf
xchg
add
mov
jo
dec
aam
stos
push
sub
arpl
jmp
push
out
or
inc
and
mov
loope
daa
lea
movs
icebp
daa
mov
shr
sub
sbb
and
ins
fist
inc
pop
sbb
test
sub
es
lock
and
sbb
mov
mov
call
aaa
ins
mov
shl
outs
add
xchg
add
fsubr
mov
mov
add
loope
rol
mov
sub
sub
sub
fimul
and
xor
outs
sub
and
and
scas
and
mov
add
and
ret
iret
and
or
lods
mov
cdq
test
in
fiadd
mov
sub
bound
ins
xchg
test
xchg
sbb
jg
add
add
and
ins
adc
adc
adc
test
adc
pop
loope
test
and
rol
and
mov
ins
and
and
add
daa
in
and
xchg
daa
add
sbb
pop
or
sbb
cmp
pop
test
adc
and
mov
div
sbb
jmp
adc
and
loopne
add
and
sub
push
add
lahf
aaa
imul
mov
add
shr
ret
fldcw
sub
push
popa
test
or
pop
bound
pop
das
adc
sub
in
gs
retf
cmp
inc
sub
and
add
iret
mov
push
inc
arpl
xchg
out
movs
not
sub
push
xor
pop
jae
pop
jbe
mov
cmps
and
sub
dec
push
dec
pop
mov
in
in
lods
mov
ret
sub
imul
lea
es
fild
mov
fimul
js
fistp
or
sbb
fcom
jmp
sbb
and
and
sbb
and
and
fisub
ror
daa
sar
push
push
mov
pusha
mov
arpl
dec
lods
and
(bad)
and
inc
fimul
loope
push
push
dec
(bad)
arpl
xchg
sbb
push
xor
fxch
sub
inc
nop
setns
mov
add
push
jae
sub
outs
mov
and
sub
ror
aad
sub
movs
rcl
sub
movs
test
shr
push
ins
xchg
fidiv
pop
loop
push
xor
loope
mov
push
inc
xchg
es
and
in
arpl
ja
sub
and
or
in
rol
xor
xor
or
xchg
or
jne
call
test
mov
scas
add
adc
(bad)
fild
rcr
movs
or
in
mov
(bad)
in
pop
inc
mov
sub
add
inc
jp
mov
or
push
pop
xor
es
sub
cs
adc
mov
adc
imul
and
sbb
(bad)
pop
add
pop
daa
sbb
stos
mov
or
sub
fisub
mov
sbb
mov
and
mov
ins
pop
inc
in
and
push
and
pop
xor
in
shl
pop
sbb
outs
inc
jp
in
in
adc
push
xchg
in
in
push
xchg
outs
sub
sub
and
pop
xchg
outs
adc
and
in
mov
push
sub
xor
mov
and
in
in
dec
imul
mov
in
rcr
mov
and
and
mov
ret
and
and
mov
in
hlt
push
imul
rcr
mov
and
and
inc
pop
in
mov
in
lea
frstor
in
lods
dec
pop
sub
daa
in
fisub
lods
and
movs
dec
outs
inc
in
sbb
ins
mov
movs
mov
in
mov
imul
inc
fidiv
movs
aaa
fst
in
push
xchg
outs
xchg
in
in
ins
xchg
(bad)
sub
push
in
es
movs
test
add
add
ss
(bad)
dec
std
mov
pop
shl
sbb
sub
std
mov
jnp
sar
ins
or
fisttp
ss
pop
bound
les
or
inc
xchg
mov
or
mov
ins
stos
or
or
or
ins
cmp
daa
cmp
cmp
aad
rol
xchg
test
es
and
stos
mov
(bad)
call
lods
rcl
add
rcr
test
mov
push
ficom
pop
or
ret
sub
jnp
adc
dec
or
mov
mov
lods
lods
pop
push
or
rcr
daa
pop
stos
mov
xchg
or
wbinvd
sbb
fisttp
and
or
ja
push
imul
or
ficomp
test
push
dec
or
test
or
jae
or
sbb
(bad)
push
mov
dec
(bad)
and
and
or
sbb
js
pop
xor
push
xor
mov
in
push
xchg
or
xlat
int
bound
mov
gs
cld
mov
or
(bad)
and
xchg
fimul
sbb
push
xchg
sub
or
ins
sub
adc
ret
adc
sbb
push
mov
pop
or
push
push
popf
sbb
and
add
push
std
jl
or
jmp
xor
mov
pop
mov
adc
inc
sbb
xchg
and
lods
test
mov
lods
xor
pop
inc
gs
lock
rcr
sub
ins
mov
xchg
pop
int3
test
ret
(bad)
adc
pop
imul
mov
aaa
add
adc
popf
mov
dec
pop
icebp
sub
sbb
adc
fist
sbb
lods
or
emms
js
bound
mov
int
les
sbb
call
jbe
cli
or
xchg
imul
ja
in
stos
pop
pop
adc
xor
cs
fcom
je
in
push
mov
int
xor
shl
out
and
push
mov
sbb
xchg
dec
jmp
and
add
movs
mov
inc
mov
clc
pop
mov
or
loopne
push
dec
idiv
ret
mov
xchg
lock
scas
clc
or
das
xchg
cmp
xchg
xchg
out
xchg
clc
ror
mul
(bad)
lahf
jnp
test
test
mov
scas
mov
push
mov
nop
imul
mov
adc
cmps
sbb
call
ret
outs
scas
out
in
nop
scas
das
add
jmp
rol
out
push
inc
pop
mov
jl
jo
xchg
stos
push
stos
mov
pop
ins
pop
pop
call
mov
das
sub
jbe
push
daa
jne
inc
shl
inc
push
inc
fwait
push
enter
push
pop
or
ins
call
adc
cmps
cs
call
lea
jmp
dec
push
mov
or
pushf
cli
out
clc
jg
std
jp
ret
push
je
push
dec
xor
into
jmp
adc
mov
xor
adc
out
add
dec
sbb
iret
(bad)
(bad)
jmp
imul
dec
out
xchg
out
jae
je
sbb
or
scas
outs
dec
pop
or
(bad)
(bad)
aas
xchg
(bad)
mov
loope
inc
push
fcmovnu
mov
mov
cmp
cmp
jmp
pop
or
out
das
clc
jmp
or
jmp
jmp
xchg
bound
jmp
push
pop
push
pop
shl
pop
loope
push
call
jge
xor
cmp
(bad)
(bad)
fisttp
sub
mov
arpl
popa
mov
call
clc
dec
pop
mov
xchg
and
mov
data16
adc
jp
and
(bad)
inc
cmp
mov
imul
int
push
sahf
(bad)
(bad)
(bad)
jmp
mov
jg
mov
es
addr16
dec
xchg
push
push
(bad)
in
mov
sbb
mov
cmps
in
fwait
bound
lods
lods
pop
adc
lahf
xchg
adc
push
xchg
cmp
pop
loop
jmp
in
sub
out
or
aas
mov
jp
cmp
sbb
jg
adc
cmp
je
mov
mov
xchg
dec
ins
stos
xlat
or
mov
add
aas
aaa
aad
fnsave
mov
imul
adc
iret
movs
mov
sub
aad
push
ret
stos
data16
(bad)
inc
scas
push
rcl
jmp
sub
sbb
jmp
sbb
aaa
sub
ficom
inc
and
cli
mov
test
scas
lds
or
hlt
mov
call
pop
ins
inc
adc
fst
adc
cdq
push
xor
push
clc
mov
in
adc
leave
jle
call
jmp
mov
sbb
mov
jne
pop
(bad)
ficomp
(bad)
(bad)
mov
movs
rol
push
and
pop
test
sub
mov
jmp
adc
in
call
push
int
retf
mov
jp
rol
popf
pop
outs
clc
pop
icebp
ds
dec
push
jmp
test
fisubr
sub
es
(bad)
(bad)
call
pop
es
sbb
outs
call
ins
into
and
repnz
std
das
adc
movs
adc
(bad)
(bad)
fild
push
lods
fadd
lods
pop
ins
adc
(bad)
(bad)
jmp
fcomp
mov
sbb
cmps
repnz
scas
pop
loop
sbb
clc
(bad)
jmp
cs
loope
fnstenv
in
enter
into
mov
mov
and
out
(bad)
(bad)
jmp
mov
(bad)
into
ins
fwait
mov
lods
push
mov
add
and
adc
jge
(bad)
(bad)
jmp
scas
dec
push
and
lds
je
mov
dec
dec
sbb
cs
(bad)
mov
jbe
loope
or
jmp
jns
and
test
jecxz
(bad)
inc
test
rol
mov
stos
outs
and
fsubrp
scas
outs
xor
retf
stos
(bad)
(bad)
(bad)
mov
hlt
and
(bad)
adc
mov
pop
inc
sub
mov
mov
cld
xor
pop
sub
adc
jp
test
imul
dec
xor
mov
lock
sbb
jbe
cmp
mov
(bad)
dec
mov
call
dec
dec
fs
popa
int
pop
cwde
fild
dec
dec
cmps
(bad)
rcr
sbb
push
adc
jge
cmc
mov
mov
xchg
push
fdiv
cmp
cli
pop
(bad)
call
call
call
mov
push
xchg
dec
(bad)
jg
call
daa
retf
ins
sub
hlt
mov
call
push
inc
cmps
adc
call
fbstp
mov
daa
and
(bad)
push
dec
in
imul
push
jnp
add
jmp
mov
call
sbb
popf
or
mov
sub
push
je
int
ja
scas
cld
mov
sub
mov
or
out
push
xor
mov
pop
push
pop
push
push
test
fisttp
pop
inc
push
jmp
retf
xchg
gs
inc
jle
rcr
movs
jae
xchg
xchg
lods
xor
cli
(bad)
jmp
add
and
and
test
iret
mov
mov
lods
lods
ss
mov
es
lea
(bad)
(bad)
(bad)
jmp
sti
lea
push
fcomp
adc
cmps
mov
mov
cli
dec
fisubr
(bad)
outs
lds
and
call
(bad)
mov
xor
fcmovu
or
fdivrp
(bad)
cmp
jo
jle
js
test
(bad)
jle
pop
jmp
mov
xor
add
inc
fidivr
mov
xor
jmp
(bad)
(bad)
(bad)
mov
fidivr
or
fistp
mov
adc
retf
cmp
jecxz
mov
push
(bad)
call
out
or
(bad)
mov
sti
in
mov
mov
xor
cmp
nop
int3
push
call
ins
or
mov
mov
pop
mov
jne
test
push
sub
pushf
pushf
fisttp
out
fistp
inc
push
jmp
push
mov
add
or
(bad)
or
add
call
fisub
rol
pop
jbe
pop
bound
in
jnp
adc
fadd
push
jmp
fsubrp
call
retf
xchg
loope
scas
xor
xchg
int
fiadd
in
out
rcr
jg
jmp
sbb
jmp
jb
mov
or
xor
stc
cs
jmp
cmp
jmp
sub
dec
jl
retf
sub
sub
stos
ds
inc
mov
adc
(bad)
push
jmp
inc
ret
mov
retf
mov
test
outs
sub
mov
pop
std
popa
adc
mov
es
shl
or
call
hlt
ss
push
and
sub
adc
loopne
shl
jae
mov
mov
mov
and
mov
ret
mov
je
test
jmp
dec
stos
or
stos
arpl
or
push
(bad)
out
xchg
mov
call
mov
fs
lock
dec
rol
clc
inc
fbld
jmp
std
or
test
adc
(bad)
mov
inc
aaa
scas
std
scas
out
fucomip
ffreep
sbb
push
daa
dec
std
call
std
cmp
jo
push
or
xchg
jne
sub
enter
test
(bad)
(bad)
mov
inc
pop
cmps
shr
lods
dec
push
jecxz
dec
pop
test
push
mov
add
(bad)
(bad)
call
repz
sbb
push
enter
mov
lahf
inc
push
popa
clc
dec
bnd
jmp
and
mov
cmps
xchg
dec
adc
sub
(bad)
shl
sbb
mov
sti
xchg
and
(bad)
jmp
out
jmp
adc
ror
push
retf
dec
out
push
aad
jg
pop
or
jmp
adc
sub
inc
adc
rcr
test
repnz
iret
mov
and
push
adc
sbb
das
sar
(bad)
jg
adc
sub
lds
jmp
xchg
sub
push
xor
mov
jno
push
dec
push
jmp
lds
jnp
or
aad
jg
and
sbb
pop
add
and
push
pop
sub
sbb
sbb
xchg
jmp
or
ret
dec
dec
pop
xchg
cmp
loope
inc
lea
mov
sahf
pushf
sub
inc
call
and
(bad)
jmp
sahf
das
pop
dec
leave
fs
cmp
or
xor
sbb
push
dec
loope
(bad)
mov
cmp
jp
call
aas
std
(bad)
dec
sbb
xor
sub
fs
pop
lahf
jb
mov
mov
mov
repz
les
inc
sub
adc
(bad)
jmp
adc
neg
mov
cwde
icebp
xchg
xor
jg
dec
xchg
test
test
xchg
in
lahf
movs
pop
jmp
dec
push
ins
cmp
and
cdq
xchg
rcl
(bad)
(bad)
mov
xchg
stc
dec
push
xchg
ja
outs
jecxz
and
sbb
test
mov
xlat
mov
pop
dec
xchg
aam
and
mov
add
repnz
mov
jg
ja
xor
push
and
add
sub
fwait
cli
call
ins
cmp
mov
push
popa
daa
(bad)
(bad)
(bad)
(bad)
std
call
out
std
push
adc
dec
sub
fisub
and
adc
push
call
es
sbb
scas
shl
add
fsub
pushf
mov
call
data16
xchg
adc
xchg
jmp
bts
iret
data16
pop
jg
xor
pop
add
(bad)
(bad)
mov
push
pop
cmps
inc
cdq
je
(bad)
xor
out
adc
and
cdq
out
xor
sbb
mov
ret
jns
mov
mov
(bad)
(bad)
push
adc
in
sub
sbb
std
test
ins
sbb
aad
dec
in
mov
push
into
imul
(bad)
(bad)
call
test
stos
mov
cmp
fisubr
inc
mov
(bad)
movs
push
mov
mov
inc
jmp
and
or
pop
mov
and
push
fisub
xchg
out
pop
loop
fwait
nop
cmp
mov
pop
pushf
imul
pop
adc
fsubrp
or
(bad)
gs
dec
gs
mov
ja
sub
push
cmc
(bad)
(bad)
jmp
ror
jns
pop
push
cmc
ja
jo
imul
idiv
sar
(bad)
call
push
sbb
jb
retf
and
repz
rcr
mov
daa
stos
outs
adc
pop
push
xchg
or
push
cs
outs
inc
dec
jmp
(bad)
call
inc
(bad)
xchg
movs
scas
cli
cwde
push
cdq
pop
mov
jmp
sub
(bad)
(bad)
(bad)
in
mov
outs
inc
pop
int3
mov
mov
cmp
into
scas
cmp
sub
mov
bound
je
pop
sbb
xchg
leave
out
add
and
dec
enter
lock
inc
mov
sub
add
hlt
(bad)
call
xchg
add
or
je
sub
add
retf
or
mov
lods
gs
jmp
and
es
ss
(bad)
jmp
inc
xor
mov
mov
jo
sbb
movs
lahf
jg
lods
push
das
lods
repnz
mov
call
adc
dec
aad
nop
adc
(bad)
enter
(bad)
call
std
sbb
jae
sbb
iret
orps
in
cmp
xor
xchg
scas
mov
ins
dec
outs
(bad)
inc
ins
jne
dec
jmp
out
sub
push
lods
push
movs
dec
iret
popa
je
mov
mov
pop
sbb
cmp
das
mov
xchg
push
in
dec
imul
fild
int
(bad)
(bad)
push
xchg
(bad)
(bad)
dec
sti
jno
jmp
lahf
dec
aad
aad
cmps
add
pop
retf
dec
das
popf
je
ja
cli
pop
ret
stos
pop
or
test
push
loop
daa
jmp
(bad)
(bad)
pop
cmp
daa
jle
stos
or
fisub
mov
aad
movs
ret
sub
ins
les
in
ins
(bad)
push
push
push
(bad)
jmp
fbstp
scas
jmp
mov
(bad)
(bad)
jmp
add
jle
or
call
inc
rdmsr
jnp
scas
push
mov
mov
jb
pop
popa
std
dec
cmp
(bad)
mov
mov
push
fild
inc
dec
jns
loopne
and
and
(bad)
(bad)
ds
in
sub
cld
push
push
sbb
adc
out
mov
adc
mov
inc
cmc
(bad)
adc
lock
mov
cs
fcomip
push
call
data16
mov
pushf
xor
call
jle
or
xchg
or
fmul
icebp
popa
xor
scas
cli
pop
cwde
xor
sub
scas
mov
push
pop
loopne
(bad)
(bad)
jmp
cmps
or
jge
retf
jp
out
(bad)
js
mov
aaa
lock
scas
stos
(bad)
(bad)
jg
pushf
call
stos
dec
push
into
xchg
test
mov
nop
pop
sbb
mov
(bad)
(bad)
(bad)
call
dec
pop
nop
lea
scas
jno
stos
or
iret
jl
push
mov
sti
ror
or
lock
xchg
cs
enter
call
sub
iret
sbb
das
xor
sbb
and
(bad)
push
pop
jo
cwde
jb
cmp
jp
cmp
push
adc
adc
add
xchg
sub
(bad)
dec
adc
into
jg
call
sub
jae
adc
(bad)
push
push
lds
cmp
test
test
xor
and
xchg
push
ret
stos
pop
mov
mov
(bad)
mov
jge
pop
pop
cmp
jmp
inc
push
(bad)
std
scas
xacquire
and
lods
mov
cmp
mov
iret
(bad)
sbb
addr16
(bad)
(bad)
dec
sbb
inc
xor
lods
fldcw
out
cmp
add
pop
add
retf
mov
(bad)
fisub
pushf
mov
push
xchg
mov
outs
fxch
push
mov
and
sub
mov
xchg
and
mov
(bad)
hlt
sahf
push
or
ror
in
(bad)
mov
fild
dec
cmp
inc
mul
cmp
lds
and
sbb
cmps
pop
call
mov
fist
in
inc
sub
pop
loopne
loopne
mov
neg
dec
mov
outs
mov
push
add
jmp
clc
and
fcmovnb
push
ins
mov
add
lods
scas
push
pop
dec
fsub
ret
sub
call
test
jecxz
inc
sub
test
mov
jns
pusha
inc
call
cmc
sub
jmp
fs
dec
test
mov
dec
call
retf
or
outs
cli
(bad)
(bad)
cmp
jmp
or
stos
sbb
mov
(bad)
(bad)
call
mov
test
jo
mov
dec
dec
cmps
daa
ficom
lods
cmp
cmp
(bad)
dec
pop
jle
stc
mov
in
iret
call
or
dec
mov
outs
dec
sub
mov
pop
ss
mov
(bad)
call
(bad)
cmp
mov
shl
xor
adc
mov
(bad)
jmp
ins
pop
aam
shl
scas
(bad)
imul
mul
(bad)
(bad)
(bad)
jmp
ins
mov
mov
lahf
daa
lahf
pop
mov
jge
push
mov
out
cmps
cmp
sub
fbstp
xchg
es
jns
(bad)
mov
add
pop
stc
inc
repz
(bad)
jg
test
loop
fst
jmp
mov
data16
pop
jne
lahf
push
loopne
add
movs
(bad)
jg
adc
outs
daa
in
cmp
mov
mov
dec
xor
or
mov
rcr
pop
and
inc
sbb
adc
xor
mov
popa
dec
xor
(bad)
(bad)
(bad)
(bad)
fst
pop
call
mov
push
pop
jecxz
loop
fwait
mov
sahf
or
or
push
std
dec
sub
push
mov
pop
sub
dec
jecxz
(bad)
jg
gs
popf
inc
retf
movs
lock
std
pop
es
cmc
jnp
pop
jmp
(bad)
jmp
sub
jmp
loop
adc
lods
push
jns
cmp
(bad)
mov
fistp
in
sub
neg
sub
dec
mov
mov
fnstsw
fdivr
push
xchg
adc
movs
jg
mov
jmp
ror
int3
stos
jg
adc
aas
cs
(bad)
(bad)
mov
mov
fisubr
inc
cmps
push
ror
sub
xor
fidiv
xchg
jge
(bad)
(bad)
(bad)
jg
dec
cmp
cmp
gs
int
jp
mov
jns
pop
imul
fdivr
adc
aad
adc
cli
scas
fcomp
xchg
pop
js
push
fild
mov
movs
dec
shr
int
or
and
cld
xchg
pop
sbb
ret
pop
cmp
icebp
mov
hlt
jmp
outs
adc
popa
sub
iret
mov
loopne
mov
call
mov
cli
retf
pop
jg
sbb
jae
push
cmps
fbld
pop
test
es
lock
inc
dec
fwait
dec
pop
sbb
mov
movs
xchg
jle
mov
cld
dec
xor
and
sub
(bad)
add
and
es
pop
mov
pop
repz
(bad)
lds
inc
adc
scas
(bad)
(bad)
call
mov
and
mov
sub
inc
test
mov
sub
push
sbb
cmp
push
(bad)
call
cwde
adc
add
in
in
fnstenv
and
ror
gs
dec
fidivr
int
in
push
adc
(bad)
mov
movs
sbb
or
jecxz
sbb
jp
scas
mov
xlat
(bad)
(bad)
jl
jp
sub
push
jb
fimul
sbb
add
mov
loopne
jmp
loopne
sub
jge
shl
je
push
iret
and
jb
imul
sbb
pop
test
enter
cs
push
cmp
in
lods
sub
push
aas
and
jbe
(bad)
test
dec
dec
mov
jge
pop
fwait
jle
call
dec
mov
out
push
mov
ins
pop
sbb
(bad)
loopne
in
lods
xor
(bad)
(bad)
call
daa
inc
add
iret
push
xlat
pop
fsubr
nop
imul
inc
jmp
cmp
shl
stos
(bad)
(bad)
jmp
out
in
sbb
adc
fisttp
(bad)
bswap
adc
mov
call
mov
jmp
push
movs
int
mov
fistp
fistp
es
lahf
mov
sub
retf
icebp
push
add
iret
sahf
shr
sub
cmps
nop
stc
jmp
fdivr
dec
fwait
sub
fiadd
lea
fmul
lock
retf
clc
fistp
fsubr
mov
jl
(bad)
(bad)
dec
popf
dec
nop
adc
sub
int3
int3
mov
lods
fild
mov
mov
(bad)
(bad)
push
sbb
xor
ja
addr16
fbstp
pop
dec
iret
sbb
inc
repz
jmp
inc
pop
stos
push
xor
imul
(bad)
(bad)
(bad)
(bad)
cmp
out
popf
jmp
adc
or
scas
mov
adc
mov
(bad)
(bad)
(bad)
call
inc
sub
xlat
inc
xor
retf
push
shl
stos
sbb
fisttp
call
inc
(bad)
mov
jmp
(bad)
call
shl
dec
push
ret
push
xchg
scas
cwde
adc
loop
pop
hlt
(bad)
jmp
cli
mov
jmp
pop
jno
adc
(bad)
call
jmp
mov
lods
jg
pop
imul
jge
js
push
cmp
sbb
fst
sub
mov
test
cli
stos
inc
or
sbb
test
sbb
int3
jb
inc
inc
inc
retf
push
mov
dec
dec
(bad)
das
and
push
call
mov
and
add
(bad)
adc
and
movs
jmp
stos
mov
pusha
add
mov
repnz
call
nop
dec
push
int3
pushf
pop
inc
in
xor
dec
jge
cmp
adc
jnp
add
cmps
(bad)
jmp
shl
or
push
mov
xchg
jg
(bad)
mov
cmps
and
pop
lahf
enter
sub
cmp
(bad)
(bad)
call
jle
sub
sub
mov
jb
pop
(bad)
jg
mov
stos
imul
loop
mov
pop
hlt
add
mov
imul
imul
dec
ins
rol
das
mov
push
scas
imul
lods
cmps
add
into
dec
push
xor
stos
ror
pop
clc
call
mov
push
js
js
daa
test
mov
imul
out
popa
mov
sbb
inc
xchg
sub
stos
aas
xor
push
fdivr
sub
mov
inc
cmp
sub
icebp
pushf
cwde
stc
push
in
clc
push
lods
sbb
cwde
pop
cmp
fld
in
pushf
cmp
(bad)
(bad)
push
stos
adc
movs
and
in
outs
scas
mov
les
sub
dec
stos
adc
pop
and
(bad)
mov
mov
in
mov
or
pop
mov
jmp
and
imul
xchg
push
mov
in
aam
popf
pop
icebp
pop
add
aam
movs
shl
or
leave
out
push
push
inc
mov
call
mov
popa
cmp
jb
imul
adc
pop
dec
push
mov
cwde
cs
dec
inc
aam
(bad)
dec
fld
in
push
mov
jg
mov
call
dec
test
push
stos
pop
arpl
stos
or
(bad)
cs
stos
rcr
int3
push
cld
mov
fisubr
push
or
push
jmp
movs
out
mov
(bad)
das
adc
or
jmp
cmp
dec
fild
jmp
sub
scas
lods
(bad)
(bad)
(bad)
(bad)
jmp
pop
test
repz
sub
jns
mov
xlat
push
fsubr
fsubrp
pop
dec
(bad)
cs
inc
mov
jmp
jmp
outs
sar
push
jmp
mov
mov
fild
push
or
jmp
push
push
cdq
inc
scas
(bad)
(bad)
(bad)
call
sahf
jmp
xor
sub
dec
sub
std
pop
dec
and
das
sub
lods
mov
cmp
iret
sub
mov
shl
retf
mov
(bad)
call
fimul
or
and
nop
jmp
cwde
repnz
mov
cli
and
cmps
push
sti
test
inc
out
jne
cmps
mov
xchg
push
mov
rcl
dec
ror
leave
iret
adc
iret
pop
jg
push
or
mov
mov
mov
call
lods
(bad)
sbb
(bad)
jmp
popf
loop
daa
movs
jmp
test
mov
(bad)
(bad)
(bad)
call
dec
mov
dec
or
mov
sti
dec
mov
push
sub
push
dec
(bad)
call
repnz
leave
into
aam
movs
fcmove
cmps
cmp
jmp
fild
mov
sbb
cli
jmp
cs
sub
sub
out
mov
pop
xchg
ret
inc
push
pop
pop
ins
cli
(bad)
ins
fld
lods
sub
(bad)
jmp
inc
cmc
int
movs
fsubr
lods
push
(bad)
jmp
push
rol
inc
mov
sbb
aas
jle
sbb
(bad)
aaa
(bad)
xsaves
sti
sbb
xor
out
stos
outs
(bad)
scas
adc
(bad)
(bad)
(bad)
jmp
sub
push
sub
loop
pop
push
cli
loopne
sub
lock
inc
test
xlat
ficomp
xchg
add
add
adc
pop
dec
dec
inc
mov
push
inc
xor
cli
(bad)
push
and
or
ret
xchg
push
call
sbb
sbb
and
sar
scas
mov
outs
push
and
cli
push
jge
xor
(bad)
pop
push
or
(bad)
(bad)
mov
retf
or
lods
jmp
arpl
aas
jg
push
(bad)
(bad)
inc
(bad)
scas
test
push
iret
sub
call
movs
mov
jg
(bad)
xor
imul
mov
push
lea
je
(bad)
(bad)
call
mov
in
je
mov
std
js
mov
std
arpl
ins
add
sub
pushf
mov
jnp
push
cmps
ja
push
scas
(bad)
mov
sbb
or
pusha
cmp
(bad)
jb
push
pusha
mov
test
bnd
fcomp
shl
out
lods
ins
mov
or
test
push
ins
pcmpgtb
fs
jmp
(bad)
and
lahf
dec
or
xor
(bad)
(bad)
mov
push
pushf
xor
fwait
scas
loop
ret
lea
test
add
bound
or
sbb
cmp
imul
sahf
jmp
push
cmp
push
cmp
mov
call
and
xor
test
mov
call
iret
pop
sbb
test
(bad)
(bad)
jmp
pop
sub
in
xchg
or
ja
dec
cld
add
shl
movs
pop
mov
push
(bad)
push
cld
aad
sbb
arpl
bound
ja
jecxz
mov
fsubp
in
push
mov
ss
pop
(bad)
push
adc
xlat
xchg
xchg
dec
fbld
jmp
cwde
jne
bound
pop
adc
cld
add
push
std
dec
push
shl
fisub
xor
outs
adc
dec
pusha
cdq
sub
pop
pop
pop
jg
iret
lods
jmp
popa
loope
lahf
and
xchg
repz
mov
js
add
or
scas
fadd
sbb
or
mov
std
push
add
add
push
and
das
stos
mov
arpl
loopne
not
inc
sub
call
mov
movs
ror
inc
push
mov
cmp
mov
mov
scas
push
xor
xchg
hlt
jg
cmps
jp
mul
dec
push
ins
jns
(bad)
call
or
mov
cs
xlat
cs
xchg
frstor
mov
xchg
(bad)
(bad)
(bad)
cli
sub
vmwrite
or
ret
or
scas
aad
or
popf
(bad)
jmp
cmp
sbb
mov
mov
and
mov
leave
sub
adc
(bad)
mov
scas
cmp
adc
retf
jmp
(bad)
(bad)
inc
mov
push
add
jmp
(bad)
dec
aam
xchg
int
or
pop
cmp
retf
(bad)
std
or
(bad)
(bad)
ficomp
push
cli
xchg
add
or
(bad)
jmp
jbe
mov
js
mov
outs
retf
or
call
inc
or
in
ret
(bad)
(bad)
push
stos
in
jb
mov
test
les
sti
int3
push
into
daa
mov
add
and
(bad)
call
call
push
call
or
jnp
test
(bad)
sub
cmps
add
adc
inc
retf
sub
sbb
in
add
pop
add
cmp
xchg
retf
mov
mov
fcomip
ins
mov
leave
jnp
mov
ins
cmp
or
and
pop
push
call
adc
sub
out
dec
xchg
add
jg
test
(bad)
mov
movs
pop
out
jmp
jb
push
add
push
cs
in
push
push
xchg
push
sub
(bad)
xor
pop
jp
loope
mov
test
xchg
fst
dec
sbb
mov
imul
jae
sub
mov
imul
das
fsubr
push
or
xor
mov
test
inc
xchg
ret
aaa
enter
sti
mov
add
iret
lahf
scas
test
das
adc
xor
mov
ret
sbb
pop
cli
inc
xor
adc
sub
(bad)
(bad)
(bad)
jmp
push
not
int
(bad)
jle
in
pop
dec
jge
cmp
add
and
jecxz
(bad)
push
xor
jge
push
fstp
cs
enter
les
and
mov
push
sbb
sbb
pop
inc
frstor
adc
inc
sbb
mov
int3
and
cli
dec
pop
inc
mov
repnz
or
mov
je
add
(bad)
(bad)
call
mov
xor
or
in
ucomiss
inc
imul
jmp
cli
push
das
fld
mov
(bad)
cmp
daa
pusha
inc
out
push
mov
jb
mov
mov
mov
mov
dec
call
jle
push
pop
lea
das
or
cwde
inc
mov
xchg
stc
inc
imul
dec
sub
ins
scas
shl
add
dec
fdivr
repnz
dec
pop
mov
pop
enter
mov
and
push
inc
mov
xchg
dec
and
(bad)
jmp
or
cmps
pop
rcr
pusha
fisubr
or
sbb
inc
mov
mov
sub
push
in
test
fmul
jo
aaa
inc
les
dec
mov
call
mov
cmp
fild
dec
movs
jmp
push
and
and
(bad)
(bad)
call
mov
mov
inc
push
or
push
sbb
data16
aam
fbld
pop
push
push
jge
fcomp
inc
xor
inc
test
out
and
retf
stos
fwait
repnz
(bad)
jmp
mov
imul
stos
mov
(bad)
xlat
push
(bad)
neg
mov
test
(bad)
(bad)
(bad)
jg
mov
fwait
push
sbb
fmul
xchg
bnd
xchg
or
out
retf
mov
sub
(bad)
push
inc
adc
cmp
or
mov
pop
(bad)
fcmove
push
pop
(bad)
push
das
add
mov
jg
call
sbb
icebp
test
imul
jg
push
mov
dec
in
mov
mov
pop
cmp
jl
pop
pop
ror
bound
mov
retf
or
xor
das
mov
stos
(bad)
pop
mov
xor
lods
scas
add
cmp
mov
call
shr
addr16
xchg
test
sub
mov
outs
pop
mov
jmp
scas
scas
jb
mov
sbb
inc
lahf
or
mov
xchg
fcomip
fcmovbe
or
pop
sub
cmp
in
cmp
ins
sub
mov
jle
sub
sbb
sti
xchg
push
cmp
test
inc
(bad)
(bad)
(bad)
(bad)
call
xchg
xor
mov
repnz
pop
fsub
lods
popa
adc
sbb
int
sub
cmp
enter
mov
jmp
push
sbb
shr
sbb
das
push
rcl
out
dec
lods
std
fdivr
cmc
pop
loopne
pop
scas
lea
pop
out
inc
out
inc
scas
je
mov
jbe
cmp
out
fsubr
out
and
push
(bad)
cmp
pop
add
xchg
add
fdivrp
call
(bad)
scas
inc
mov
fwait
stos
faddp
ret
mov
mov
dec
(bad)
jmp
imul
adc
(bad)
(bad)
clc
inc
inc
pop
inc
cdq
cbw
ret
pop
or
push
pop
in
lods
xor
nop
in
(bad)
jg
lods
scas
enter
loop
jmp
pop
and
or
pop
dec
adc
scas
cmp
std
ficom
out
jg
sub
(bad)
dec
mov
or
cli
mov
out
pop
sbb
fs
int
loop
jmp
dec
sbb
pop
push
push
int
fwait
ins
(bad)
mov
(bad)
(bad)
cmp
out
inc
mov
add
std
cdq
pusha
enter
push
xchg
data16
std
test
out
pop
hlt
sub
mov
es
or
xchg
inc
call
pop
out
adc
scas
cli
(bad)
call
mov
adc
retf
push
jns
dec
mov
pop
adc
cmps
scas
popa
or
or
gs
cmp
call
push
and
sbb
mov
or
cli
stos
das
or
sub
test
cli
call
(bad)
fcom
lea
pop
mov
ins
iret
jae
cmps
ds
sub
ins
(bad)
(bad)
jmp
nop
xor
sbb
mov
xchg
cmps
mov
and
int
stc
dec
dec
iret
je
(bad)
push
call
sub
cmp
push
push
mov
or
xchg
repnz
std
push
pushf
dec
mov
clc
cs
call
outs
cli
dec
(bad)
das
movs
scas
loopne
cli
xchg
in
cs
addr16
ret
ds
addr16
(bad)
(bad)
dec
mov
push
out
gs
mov
stc
adc
mov
dec
movs
into
push
retf
in
enter
popa
std
(bad)
jmp
das
pop
jle
dec
loopne
push
popf
mov
scas
lods
mov
ins
or
jg
lock
jmp
jmp
clc
adc
mov
jmp
stos
imul
jnp
jmp
jmp
(bad)
or
jecxz
sub
ret
sub
sub
sub
scas
push
(bad)
(bad)
(bad)
jmp
or
mov
(bad)
lods
mov
and
push
push
pop
lea
mov
call
sub
(bad)
std
sub
jnp
pop
sbb
add
rdmsr
pop
out
test
sub
dec
clc
cs
fcmovb
fs
(bad)
jmp
mov
adc
sar
iret
sub
dec
scas
ficomp
push
ins
jmp
aad
arpl
iret
cdq
(bad)
jno
lock
(bad)
jmp
ret
retf
jae
sub
mov
mov
sub
imul
fisub
mov
inc
xchg
outs
lock
test
jp
(bad)
(bad)
push
out
cmp
popf
fwait
mov
dec
push
lahf
mov
mov
add
stos
stos
sub
sbb
out
inc
xchg
(bad)
call
jmp
jns
inc
outs
sub
es
sub
iret
or
in
jg
enter
(bad)
fcmovne
aam
stos
pop
mov
lea
inc
iret
test
ins
pop
xor
jg
jmp
jg
jge
shl
xchg
sub
shl
jo
bnd
sub
push
es
stos
inc
sbb
mov
dec
inc
fwait
(bad)
(bad)
(bad)
(bad)
cmp
movs
dec
sbb
call
jmp
inc
popa
cdq
inc
in
pop
outs
fs
(bad)
(bad)
fcom
jge
mov
sub
das
mov
lock
in
push
add
and
pop
add
pop
mov
aad
jg
jecxz
cdq
test
lahf
mov
rcl
cli
lods
(bad)
(bad)
jmp
and
mov
call
push
push
test
jg
inc
call
ins
and
inc
icebp
add
pop
sbb
scas
fst
(bad)
(bad)
(bad)
dec
sbb
gs
js
and
sub
sub
out
push
cmp
mov
adc
ret
fbld
push
iret
adc
outs
fucomip
jb
(bad)
(bad)
call
in
ins
nop
xor
dec
mov
(bad)
push
out
cmps
cmp
sub
and
dec
loop
out
daa
loopne
inc
lea
movs
call
(bad)
jg
jg
cli
and
push
sub
or
inc
(bad)
fiadd
rcl
add
fnsave
mov
test
inc
(bad)
(bad)
(bad)
dec
in
mov
jmp
mov
aas
seto
nop
push
lods
mov
clc
repnz
sar
mov
imul
jecxz
pop
shr
jg
bound
or
retf
mov
femms
mov
mov
jbe
jb
iret
scas
sub
cmp
lock
mov
mov
inc
cwde
clc
and
ins
nop
in
loop
dec
mov
(bad)
(bad)
jg
ds
scas
xor
sbb
add
popa
mov
dec
in
(bad)
jg
dec
scas
into
inc
mov
sahf
popf
movs
lods
push
mov
fbld
ficom
add
pop
lock
adc
sbb
dec
sbb
(bad)
(bad)
call
int3
ins
cmc
retf
pop
fidiv
mov
adc
fwait
sbb
ins
stc
mov
call
cdq
rcl
imul
xchg
jmp
sar
sbb
fsubp
fcom
(bad)
frstor
cmc
cwde
sub
ror
and
shl
cdq
(bad)
das
in
mov
call
std
xchg
pop
push
pop
pop
mov
xchg
pop
into
int
std
ins
push
enter
add
xlat
(bad)
(bad)
jmp
sub
pop
mov
cmc
gs
mov
stos
test
cmps
(bad)
inc
jl
mov
jb
stos
(bad)
adc
inc
dec
popa
test
hlt
data16
std
inc
mov
and
shl
ss
or
std
call
mov
(bad)
repz
ja
ja
(bad)
dec
stos
pop
xor
repnz
or
or
ret
(bad)
in
outs
jb
scas
jle
cdq
dec
sub
out
rcr
add
ins
mov
push
mov
(bad)
sbb
jnp
pop
add
jmp
arpl
sbb
jg
inc
out
mov
repnz
push
loopne
int3
out
dec
sbb
xor
dec
lock
sub
call
adc
inc
(bad)
mov
not
(bad)
mov
add
ins
sub
cli
js
test
jmp
lahf
push
movs
dec
test
or
(bad)
call
pop
xor
gs
fisubr
adc
push
push
pushf
push
in
cmps
rcr
test
call
cmp
ins
mov
adc
mov
call
cli
push
mov
mov
mov
repz
jmp
inc
sbb
repnz
lea
int
in
dec
sti
fwait
mov
sub
push
inc
movs
push
push
jmp
and
xchg
ins
xchg
push
jge
sbb
(bad)
call
icebp
repz
movs
xchg
ins
clc
xor
stos
pop
test
repnz
loop
repnz
(bad)
call
inc
cmp
out
fidiv
adc
(bad)
fcomip
pop
mov
ins
out
sbb
fdiv
movs
push
mov
fdivr
cdq
pop
jnp
dec
lock
xchg
pop
fadd
sub
cld
adc
rcr
ficomp
add
fistp
call
add
dec
or
xchg
mov
cli
(bad)
(bad)
dec
sub
(bad)
iret
sbb
and
sub
mov
aaa
lock
je
add
retf
or
mov
push
test
fbld
add
add
lds
adc
jecxz
mov
lods
je
or
scas
imul
fld
push
or
cli
adc
arpl
imul
stos
mov
(bad)
(bad)
mov
mov
pop
ins
mov
lods
sub
es
fwait
adc
call
sbb
repnz
add
add
mov
pop
and
imul
hlt
jne
jl
nop
xchg
mov
xchg
sbb
int3
ins
fwait
sti
ret
retf
fwait
retf
fstp
or
(bad)
jmp
rol
imul
data16
cmp
or
in
sub
int
lds
add
mov
cli
mov
mov
push
call
(bad)
(bad)
aad
lea
(bad)
(bad)
(bad)
cli
jns
mov
dec
sub
mov
cwde
repnz
adc
adc
rcr
pop
gs
arpl
cwde
push
mov
and
mov
sbb
(bad)
push
sub
mov
mov
sub
pop
pusha
xor
inc
push
call
fisttp
sahf
jmp
(bad)
(bad)
push
or
or
lahf
mov
cmp
pop
lods
enter
ins
(bad)
stos
dec
loop
mov
pop
mov
and
loop
dec
jmp
fist
popa
call
cmp
scas
jg
dec
cld
dec
(bad)
adc
jmp
nop
ret
(bad)
out
sub
or
mov
mov
or
out
sbb
retf
or
(bad)
(bad)
(bad)
mov
daa
inc
lock
pop
mov
std
inc
jmp
ins
or
fld
jmp
or
inc
pop
or
xchg
movs
mov
call
in
leave
ds
rcl
or
out
pusha
adc
bound
test
(bad)
call
loopne
or
pop
out
fistp
mov
(bad)
pop
pusha
stos
and
or
mov
(bad)
fild
test
adc
adc
push
inc
jle
mov
int3
adc
pop
cmps
jp
test
cmp
test
ror
ficomp
enter
(bad)
mov
mov
mov
mov
xchg
and
jbe
jmp
cmp
aad
mov
fstp
scas
push
movs
(bad)
(bad)
(bad)
jg
sbb
mov
loop
sub
jg
in
xchg
adc
aad
(bad)
(bad)
(bad)
push
(bad)
(bad)
fsub
stos
ret
enter
jmp
mov
(bad)
push
jl
loop
pop
xor
add
dec
(bad)
fcom
out
push
test
(bad)
(bad)
call
sbb
outs
or
mov
retf
das
inc
push
dec
jmp
sbb
jmp
pop
or
pop
outs
iret
push
mov
enter
mov
push
cmp
cmp
iret
js
or
push
movs
into
mov
aas
jmp
ins
xchg
loope
xchg
loope
(bad)
call
push
test
test
rcl
push
xchg
je
lds
dec
jns
cmps
dec
(bad)
(bad)
(bad)
mov
sub
(bad)
je
hlt
mov
sub
mov
push
shl
lea
sbb
(bad)
dec
mov
in
pop
ror
cmp
cmp
call
mov
cli
mov
adc
(bad)
in
jge
cmp
test
sub
(bad)
call
popf
xor
(bad)
xor
add
lahf
call
(bad)
mov
xor
in
mov
mov
xor
and
jbe
or
pop
clc
(bad)
jmp
imul
scas
mov
push
lahf
cmp
retf
sbb
sbb
(bad)
(bad)
(bad)
jmp
pop
repz
xchg
jns
xor
repz
adc
jg
and
mov
cli
mov
dec
test
(bad)
inc
cdq
ss
inc
mov
bound
and
aam
inc
xor
mov
call
ja
push
or
and
lods
loop
jno
or
mov
clc
(bad)
jns
ret
xor
ins
mov
retf
leave
je
jmp
shr
xor
push
std
or
clc
mov
pop
or
hlt
(bad)
mov
pop
push
sub
mov
clc
out
or
add
lds
and
test
imul
std
xchg
rcr
adc
add
jmp
call
nop
mov
ret
imul
jp
pop
leave
std
pop
aad
int
or
sar
dec
ins
cmps
adc
sahf
sub
sbb
jp
cld
aaa
(bad)
(bad)
push
xor
dec
movs
pop
mov
iret
inc
sub
enter
dec
add
ins
add
scas
mov
inc
mov
sub
add
dec
into
lahf
popa
dec
jne
lods
test
test
mov
and
das
call
(bad)
(bad)
(bad)
dec
(bad)
test
test
retf
mov
pusha
rol
xchg
push
jns
adc
push
pop
imul
sub
xor
push
addr16
int
test
call
fidiv
idiv
js
xchg
cmp
repz
fmul
push
(bad)
(bad)
cmp
into
mov
jb
fwait
add
jno
push
loop
add
sub
sub
jne
ins
dec
inc
pop
jmp
(bad)
fistp
cwde
sti
out
out
fidiv
stos
les
or
sub
mov
xchg
(bad)
jmp
sbb
push
cli
dec
sub
(bad)
(bad)
(bad)
mov
lahf
xchg
lea
xchg
out
jle
movs
pop
stos
mov
bnd
push
jae
mov
mov
lock
(bad)
popf
jl
(bad)
std
rcr
(bad)
(bad)
inc
pop
nop
(bad)
xchg
cli
mov
scas
rol
retf
add
sub
mov
into
add
(bad)
inc
(bad)
and
(bad)
push
(bad)
es
mov
nop
stc
and
sar
gs
lods
jo
cmp
je
jp
mov
or
inc
ja
sub
xor
(bad)
(bad)
(bad)
jg
cmp
and
xchg
fwait
add
adc
xor
or
xor
aaa
push
scas
iret
add
xchg
inc
div
fisubr
fild
outs
add
or
dec
(bad)
mov
cmps
mov
into
or
scas
pop
mov
(bad)
push
das
jmp
inc
sahf
(bad)
(bad)
(bad)
dec
retf
push
cs
in
daa
sub
xor
mov
xchg
lock
not
retf
cmp
(bad)
(bad)
inc
ror
pop
cmp
pop
(bad)
sbb
out
pop
mov
(bad)
(bad)
call
push
mov
and
sub
imul
mov
pop
sub
mov
mov
(bad)
(bad)
(bad)
cld
adc
sub
pop
(bad)
mov
push
add
iret
sub
scas
push
xor
inc
loop
xchg
xchg
jae
xchg
mov
ret
sbb
jmp
or
ss
stc
or
div
call
imul
out
sbb
ins
adc
and
retf
or
push
sbb
cmps
sahf
sub
sar
outs
pop
ja
cs
jb
jl
(bad)
(bad)
dec
fimul
jo
mov
mov
jmp
mov
dec
call
cmps
(bad)
jmp
pushf
fs
jmp
jmp
(bad)
(bad)
jmp
ret
es
pop
adc
push
lods
jg
mov
arpl
push
(bad)
(bad)
inc
cli
ror
ins
jp
sub
outs
cld
dec
xchg
and
imul
xor
mov
(bad)
(bad)
inc
out
or
nop
scas
xor
mov
cmps
jns
mov
cmps
in
sub
dec
call
(bad)
fsubr
cdq
mov
icebp
cmp
push
(bad)
sub
mov
mov
(bad)
call
or
pushf
shr
jmp
movs
xlat
xchg
mov
(bad)
fidiv
bsf
das
repnz
fisub
or
scas
pop
lock
or
pusha
pop
(bad)
(bad)
jmp
cmp
or
push
(bad)
scas
push
xor
or
and
push
sub
scas
cli
jp
fwait
adc
jmp
pop
sub
inc
cld
popf
out
data16
cmp
mov
mov
test
jp
xor
into
jg
cmp
pop
in
iret
das
and
clc
fisubr
and
push
pusha
shr
fst
xchg
cvttps2pi
ja
je
pop
(bad)
sti
cmp
dec
cmp
(bad)
(bad)
jmp
push
scas
inc
sub
cmps
sahf
leave
adc
adc
push
and
cmps
mov
mov
int
cmp
pop
(bad)
dec
in
clc
xchg
sbb
inc
sar
lds
sub
xor
rcl
mov
sbb
jmp
fistp
dec
sbb
std
xlat
fsubr
ds
outs
jmp
test
out
jmp
mov
mov
pop
rcl
jno
out
mov
loopne
add
adc
cmp
fisubr
call
push
daa
imul
movs
and
lahf
ret
sbb
mov
and
jmp
jle
cwde
jnp
mov
pop
cmc
inc
test
xor
pop
inc
push
test
stos
cs
mov
fsub
movs
cdq
xchg
adc
xchg
mov
imul
push
ret
jg
and
jb
push
or
fnsave
add
(bad)
(bad)
jmp
js
inc
and
cdq
push
fst
or
lods
cmp
jb
and
(bad)
(bad)
fstp
icebp
stos
or
add
je
jmp
cmp
sti
pop
icebp
fist
imul
dec
sbb
dec
mov
push
or
aaa
xor
sbb
jnp
dec
cmp
dec
push
add
push
jmp
jne
icebp
xlat
xor
dec
inc
inc
xchg
dec
mov
add
push
pop
xchg
inc
test
inc
fwait
cli
in
add
sub
int3
and
add
sar
sub
iret
mov
mov
dec
sub
mov
retf
and
push
inc
cli
jmp
sub
(bad)
xor
sub
sbb
(bad)
(bad)
(bad)
stc
(bad)
ins
outs
mov
loop
cmps
sbb
mov
xchg
xchg
sbb
dec
(bad)
jmp
pop
in
adc
cs
push
xchg
jmp
mov
call
cmp
inc
dec
mov
pop
hlt
imul
les
or
xor
lods
movs
or
ret
cmp
gs
jo
mov
fs
lahf
cmp
in
or
xchg
lods
jno
push
inc
adc
jmp
stos
ret
ins
(bad)
fcomip
inc
(bad)
mov
and
or
movs
and
mov
lock
adc
push
push
fdivrp
mov
call
lods
adc
push
in
leave
pushf
aaa
or
cmc
sub
mov
call
sar
(bad)
cmp
dec
sub
test
nop
dec
lock
inc
inc
xchg
inc
or
add
loope
aad
cmc
call
or
jg
xor
inc
cmp
pop
inc
fsub
mov
mov
and
dec
mov
mov
out
pop
sub
or
fsub
fdivr
cmp
mov
rcl
xor
adc
lods
scas
nop
sub
mov
push
stos
jb
sbb
(bad)
(bad)
(bad)
call
jg
jnp
(bad)
mov
loopne
or
(bad)
(bad)
cmp
in
push
mov
stos
cmp
out
enter
movs
inc
in
mov
sub
pop
gs
xchg
mov
(bad)
rcl
(bad)
mov
sti
ret
stos
and
mov
outs
(bad)
in
enter
nop
call
adc
(bad)
mov
push
push
mov
fisttp
aad
jno
jg
sub
sub
cli
in
addr16
and
cmps
cwde
(bad)
(bad)
(bad)
jmp
push
jne
cld
xchg
mov
mov
adc
in
adc
repnz
mov
lock
xchg
(bad)
(bad)
jmp
xor
mov
jmp
dec
jp
cdq
loop
stc
imul
(bad)
sbb
jecxz
push
cld
cmp
dec
call
test
mov
(bad)
dec
jecxz
test
adc
sbb
lahf
sbb
lahf
and
(bad)
(bad)
(bad)
call
jmp
adc
stc
and
das
imul
(bad)
dec
sbb
loope
addr16
mov
mov
pop
adc
and
(bad)
(bad)
jmp
cmp
jbe
fisubr
pop
xchg
mov
into
punpcklbw
mov
outs
mov
(bad)
cmp
inc
(bad)
jg
sbb
add
retf
xor
cmc
xor
sub
adc
inc
jmp
xchg
stos
sub
sub
sar
(bad)
inc
xchg
mov
or
mov
mov
fwait
mov
outs
pop
into
mov
mov
enter
into
push
into
sub
(bad)
(bad)
(bad)
fistp
cmp
xor
sub
pop
nop
or
frstor
dec
cmp
xchg
mov
mov
or
jns
mov
jg
(bad)
dec
and
push
rcl
mov
dec
test
fsub
movs
cmp
(bad)
call
leave
into
sub
out
sbb
(bad)
cmc
jmp
movs
stos
inc
mov
(bad)
fbld
dec
sbb
dec
sub
sbb
not
xor
(bad)
(bad)
(bad)
jmp
adc
scas
stos
cdq
je
ss
dec
mov
ds
adc
xor
fs
cli
(bad)
(bad)
(bad)
in
push
add
mov
in
adc
cmps
dec
cdq
pop
mov
es
(bad)
(bad)
jmp
push
(bad)
push
sub
dec
loopne
pop
cli
lahf
mov
dec
scas
sub
ins
and
test
mov
dec
(bad)
(bad)
(bad)
(bad)
call
or
popf
popa
sub
jl
sahf
mov
jno
dec
dec
sub
mov
nop
sbb
push
mov
ficomp
(bad)
(bad)
jmp
rol
cmp
mov
loope
iret
cdq
xchg
inc
pop
sti
loope
push
xchg
sub
(bad)
(bad)
(bad)
call
xchg
ror
loopne
xchg
mov
mov
pop
call
aas
mov
sub
call
loopne
or
jp
sbb
xchg
push
ret
adc
nop
je
(bad)
call
inc
ins
out
or
and
test
push
outs
into
push
xor
icebp
ins
lea
pop
neg
loopne
push
add
loop
ins
leave
jg
ins
mov
push
cli
stc
xor
mov
rol
adc
or
push
call
push
jmp
jae
pop
push
out
mov
aad
iret
loop
push
fcomi
or
fs
nop
(bad)
(bad)
(bad)
dec
or
and
loop
xchg
xor
dec
gs
mov
and
jmp
sbb
and
cmp
xor
cmc
cmp
fmulp
adc
stos
mov
clc
sub
pop
add
inc
or
sbb
loopne
or
(bad)
dec
sub
pusha
mov
call
jmp
scas
xchg
adc
rol
adc
fiadd
or
rol
mov
mov
(bad)
(bad)
call
pop
push
cmp
daa
dec
mov
dec
inc
aas
mov
and
cdq
in
or
(bad)
jmp
xchg
jmp
clc
mov
and
leave
out
cmps
xchg
sbb
jo
dec
jp
sbb
stc
adc
icebp
(bad)
(bad)
jmp
movs
nop
push
xor
dec
icebp
movs
cli
cs
mov
jg
int
mov
fdivr
xor
out
(bad)
call
push
xor
mov
(bad)
(bad)
ud0
cli
cmp
mov
xchg
or
fcomip
dec
mov
fldenv
and
lds
sbb
fsub
(bad)
mov
jno
mov
(bad)
jmp
push
js
xlat
iret
rcr
xlat
scas
(bad)
fldenv
fs
inc
cdq
push
sub
push
sub
jp
ja
dec
test
sahf
cmps
push
loop
add
sub
inc
mov
mov
mov
mov
loope
(bad)
or
pop
xchg
retf
loop
adc
jo
cs
jl
inc
clc
(bad)
inc
enter
in
std
adc
cmps
jmp
push
add
push
cmp
cmp
mov
jbe
retf
outs
sbb
mov
addr16
aas
xor
(bad)
scas
pop
daa
jnp
cmp
(bad)
(bad)
(bad)
jmp
repnz
or
sub
fild
mov
fsub
lahf
out
mov
div
inc
scas
in
fcmovne
sbb
fisttp
jae
test
sbb
(bad)
jmp
and
stos
fisttp
ins
in
adc
pop
sbb
(bad)
call
xchg
mov
lahf
sbb
push
mov
loop
lds
push
mov
aas
or
mov
(bad)
(bad)
(bad)
inc
mov
mov
stos
sbb
inc
inc
ficomp
or
jl
add
pop
xchg
enter
std
(bad)
jl
sbb
stos
push
mov
test
push
jo
jmp
sub
fs
idiv
ins
imul
lahf
sahf
or
mov
dec
mov
stc
mov
cmps
push
push
hlt
(bad)
cmp
adc
mov
sbb
xchg
mov
pop
pop
mov
adc
dec
(bad)
(bad)
(bad)
jg
cmp
mov
fiadd
jmp
add
sub
lahf
inc
das
push
dec
push
mov
or
outs
cmp
outs
inc
(bad)
mov
xor
jp
cwde
mov
mov
xchg
mov
(bad)
(bad)
call
inc
and
mov
push
xor
push
scas
aas
sub
and
mov
push
call
adc
mov
mov
jl
xchg
(bad)
(bad)
jmp
aam
ficom
inc
xor
call
ja
or
call
fwait
push
std
scas
add
pop
push
xchg
mov
iret
call
jg
mov
jo
sub
fld
add
mov
inc
sub
mov
ins
dec
cmp
jmp
(bad)
(bad)
cmp
jecxz
dec
ins
call
mov
inc
cwde
loope
lods
jl
xlat
(bad)
(bad)
push
mov
cdq
xor
mov
mov
mov
sbb
das
es
(bad)
(bad)
jg
sbb
mov
std
test
mov
dec
outs
jmp
fiadd
jmp
push
sub
sub
push
loopne
(bad)
(bad)
jg
cwde
inc
inc
add
not
fsubr
xchg
and
jnp
mov
mov
jnp
lock
dec
jns
gs
jmp
dec
lock
xchg
xor
xchg
shl
jns
or
push
test
mov
jns
sbb
xchg
xlat
inc
sar
adc
mov
call
add
dec
clc
(bad)
stos
adc
push
(bad)
xchg
je
cli
jg
inc
xchg
xor
or
les
cmps
sub
dec
or
imul
add
lds
push
in
pop
sub
jp
add
pushf
in
imul
aaa
inc
inc
mov
ret
ror
mov
sti
push
int3
push
movs
mov
adc
aaa
or
loope
pushf
ror
movs
addr16
push
lock
(bad)
sbb
or
(bad)
sub
std
in
bound
stos
jl
(bad)
push
add
fidiv
loop
xchg
ds
idiv
sub
(bad)
ins
inc
test
push
xchg
test
mov
clc
jmp
push
adc
aas
lds
clc
cmp
into
in
inc
shl
(bad)
jmp
jl
or
sub
scas
mov
(bad)
jmp
retf
push
mov
and
loopne
push
ret
lods
and
or
push
adc
sub
mov
jmp
pop
repnz
push
sub
jg
dec
retf
ja
add
cmps
mov
rcr
xchg
sar
pop
cld
hlt
repnz
jle
dec
mov
inc
repz
fucompp
mov
and
mov
cmp
ror
pop
out
(bad)
das
arpl
lea
dec
push
out
iret
inc
cmp
arpl
push
stos
jecxz
jnp
fst
outs
jmp
(bad)
mov
cmp
(bad)
(bad)
dec
cmp
stos
inc
cmps
and
mov
sub
mov
dec
inc
mov
outs
(bad)
mov
or
cmp
adc
jmp
inc
xchg
inc
sbb
jmp
dec
imul
(bad)
mov
shl
mov
(bad)
(bad)
mov
xor
mov
loope
hlt
leave
sub
cmps
jl
cmp
cmp
jmp
es
xchg
inc
ds
scas
stos
jb
jmp
call
cmp
jg
in
retf
scas
int
retf
xchg
jge
mov
nop
jg
or
outs
(bad)
pop
stos
inc
aad
sbb
aaa
sbb
or
retf
or
push
out
xchg
stc
popa
inc
xchg
adc
ins
cmps
retf
test
dec
test
xor
or
ds
gs
(bad)
jmp
sub
xor
mov
lods
call
jmp
mov
out
sub
sahf
or
pushf
xchg
mov
cdq
(bad)
(bad)
(bad)
(bad)
jmp
std
jmp
shl
mov
xchg
pop
xlat
xchg
xchg
fwait
imul
std
dec
mov
push
lods
(bad)
(bad)
(bad)
jmp
mov
int
pop
ds
pusha
or
push
retf
jnp
jmp
jns
and
(bad)
(bad)
jmp
mov
ret
fwait
xchg
sub
fsubr
mov
iret
sbb
ds
(bad)
(bad)
push
(bad)
mov
and
add
mov
sti
mov
jno
outs
add
(bad)
jmp
lahf
test
in
mov
adc
pop
sub
sub
mov
xor
push
jmp
inc
xchg
mov
test
shr
xor
dec
dec
cli
inc
sbb
out
sub
test
lahf
mov
add
push
ja
outs
cwde
add
sub
sub
dec
repz
pop
(bad)
jmp
(bad)
inc
stos
mov
into
xor
ss
pop
xor
sub
(bad)
lahf
(bad)
and
or
nop
jns
or
cdq
push
loopne
(bad)
push
jmp
cmp
fwait
shl
sbb
and
retf
jmp
stos
cmp
dec
inc
mov
outs
jl
and
sub
stos
movs
mov
mov
inc
mov
stos
xchg
lods
(bad)
es
adc
cli
fcomip
(bad)
push
loopne
and
in
scas
add
inc
js
pop
jmp
fcomp
inc
pop
inc
es
call
pop
lahf
fidiv
push
jmp
sbb
inc
mov
sub
(bad)
scas
mov
clc
dec
pop
xchg
pushf
data16
jns
xchg
mov
cld
(bad)
inc
jns
jp
fsubrp
jbe
loop
loop
fldenv
mov
mov
js
loopne
(bad)
inc
jo
enter
ret
dec
out
inc
cmc
not
stos
adc
jmp
sub
inc
iret
and
pop
adc
cs
ss
cmp
mov
pop
push
ficomp
(bad)
(bad)
mov
es
inc
test
jmp
frstor
retf
dec
pop
scas
loopne
(bad)
call
repnz
out
out
xchg
mov
cmps
mov
xchg
sbb
scas
les
push
call
or
outs
and
imul
clc
fild
jmp
ja
retf
cli
scas
shl
in
push
scas
adc
(bad)
inc
xor
add
cwde
div
mov
lods
inc
mov
xor
xor
dec
fnstcw
add
outs
jp
or
lds
inc
std
int3
in
into
mov
mov
and
(bad)
push
push
imul
mov
push
test
(bad)
(bad)
call
imul
cmps
dec
leave
(bad)
outs
movs
aam
dec
xchg
xchg
cmp
dec
mov
lods
mov
retf
jmp
adc
mov
and
call
xor
stos
and
cmp
push
jmp
and
dec
aad
push
cs
stc
xor
popa
cmp
inc
jae
or
add
xchg
(bad)
(bad)
(bad)
dec
call
mov
mov
dec
data16
jmp
or
sbb
jo
pop
test
push
sar
mov
jg
sbb
mov
xchg
xchg
js
lods
inc
std
push
inc
dec
mov
aas
cli
xchg
das
mov
pop
gs
ins
in
call
std
jmp
es
jno
mov
sub
mov
sbb
out
push
add
test
dec
(bad)
and
(bad)
(bad)
call
bound
xor
adc
and
inc
cdq
mov
pop
movs
add
or
(bad)
(bad)
dec
in
jle
sub
cmp
or
pop
dec
xor
sbb
xchg
(bad)
imul
adc
and
add
scas
inc
(bad)
(bad)
dec
push
xchg
(bad)
movs
push
or
push
jmp
retf
fidivr
mov
call
cdq
push
daa
hlt
sub
xlat
lods
mov
jp
(bad)
(bad)
jmp
fst
fs
cmp
fmul
(bad)
jge
cmps
rcr
mov
loop
loope
gs
in
lock
inc
mov
(bad)
loope
cld
mov
jg
sbb
(bad)
jg
and
adc
daa
sbb
gs
cmp
mov
shl
and
mov
mov
inc
lods
in
adc
cmps
test
inc
imul
fsubr
movs
inc
repz
pop
sbb
sub
jmp
ret
and
(bad)
(bad)
jmp
lock
sbb
xchg
movs
cmp
inc
mov
daa
mov
ret
jl
in
sbb
repz
call
fdivr
aas
in
nop
cmps
test
(bad)
(bad)
jmp
cmps
jns
jle
fwait
dec
pusha
jmp
adc
jge
xor
inc
scas
cli
or
dec
test
(bad)
(bad)
cli
mov
int
sub
imul
jge
jle
sbb
dec
cld
scas
nop
or
jmp
jg
xor
jp
push
(bad)
fsubr
fstp
test
movs
adc
movs
call
dec
mov
cwde
imul
iret
pop
push
pop
pop
(bad)
in
dec
stos
mov
rol
mov
(bad)
fcomip
shr
cli
movs
ror
pop
push
ror
out
push
mov
(bad)
(bad)
mov
inc
and
or
dec
iret
das
jg
sbb
imul
clc
inc
xchg
cld
fcomip
xor
ss
and
adc
daa
gs
leave
jg
setg
sbb
(bad)
(bad)
dec
inc
mov
movs
rcr
push
dec
sbb
cdq
mov
rol
or
test
add
ds
(bad)
(bad)
mov
jb
(bad)
mov
mov
loop
mov
sub
dec
jne
mov
(bad)
(bad)
(bad)
(bad)
cld
push
mov
mov
sub
mov
mov
or
sbb
sub
int
fcom
jmp
fsubr
push
sbb
(bad)
push
jp
push
jbe
cmp
movs
jge
dec
fcom
fs
xchg
mov
and
shl
jns
retf
dec
ins
mov
add
pusha
push
rcl
stos
push
(bad)
cli
dec
cmp
(bad)
sub
fwait
lea
sub
mov
pop
sbb
pop
push
jp
push
or
pop
(bad)
in
sub
pop
pop
sub
rcr
or
mov
jmp
push
fimul
add
xchg
pop
std
sub
mov
stos
jecxz
or
test
(bad)
fild
cmps
stos
xor
test
fwait
add
sahf
and
adc
push
add
cmps
dec
adc
(bad)
(bad)
dec
add
mov
jb
xor
push
xor
inc
(bad)
das
dec
out
inc
shl
shl
mov
shl
mov
lds
and
push
pop
cmp
mov
pop
jne
push
jmp
mov
pop
fwait
and
jb
(bad)
(bad)
call
std
jnp
loop
mov
jge
jmp
lods
add
inc
mov
cdq
push
push
(bad)
(bad)
(bad)
jmp
mov
ror
mov
into
mov
into
xchg
outs
cmp
push
pop
aam
out
cmps
fmul
xchg
pop
mov
xchg
into
iret
sar
(bad)
jg
(bad)
bound
dec
dec
xchg
(bad)
pop
mov
adc
xor
cmp
(bad)
fisttp
cmp
mov
add
sub
call
inc
sub
lods
xor
sub
dec
std
mov
push
test
clc
push
std
sub
mov
or
(bad)
popa
loope
push
mov
shl
sub
imul
mov
push
inc
cmp
fstp
(bad)
(bad)
mov
(bad)
mov
cli
lea
mov
scas
xor
(bad)
add
(bad)
jmp
mov
dec
pop
scas
push
scas
(bad)
(bad)
fcomip
lds
adc
ror
lods
(bad)
lods
add
(bad)
cmp
sub
(bad)
(bad)
dec
mov
test
inc
fidiv
mov
mov
jmp
xchg
inc
test
push
fwait
sub
mov
ret
add
mov
mov
inc
test
xchg
adc
mov
imul
(bad)
fild
out
test
mov
shr
jb
dec
(bad)
repnz
(bad)
call
jg
cmp
daa
mov
das
sbb
std
dec
test
shl
(bad)
jmp
and
jb
cs
dec
loop
cmp
dec
retf
in
xchg
(bad)
(bad)
(bad)
jmp
adc
dec
or
xchg
cmp
jae
dec
jnp
iret
test
fisttp
pop
int
add
test
sub
xchg
dec
push
and
outs
jb
mov
mov
test
(bad)
(bad)
(bad)
push
addr16
fnstcw
mov
add
enter
arpl
sub
mov
mov
(bad)
or
xlat
and
das
or
sub
jns
and
dec
pop
mov
mov
push
xor
in
push
sbb
xor
adc
das
sar
sbb
jp
fcomp
sub
aas
mov
ss
and
sbb
stc
and
mov
in
es
or
add
cli
in
pop
and
lods
repnz
push
cli
sub
cmps
xchg
mov
lahf
ret
jg
test
test
mov
scas
dec
movs
lock
in
cli
mov
cli
loope
call
loopne
adc
push
loopne
cmps
mov
xchg
push
iret
mov
cwde
sbb
sub
or
(bad)
jg
call
ss
mov
fcmovne
jg
inc
mov
add
lods
jmp
mov
mov
in
cmp
sbb
add
(bad)
mov
das
call
and
inc
push
jnp
xor
push
std
scas
repz
xor
mov
sub
mov
ficom
std
(bad)
mov
xchg
or
daa
push
dec
push
mov
dec
push
mov
adc
call
inc
cmp
add
mov
mov
leave
ret
pushf
pop
cmp
pop
mov
test
stos
mov
push
fisubr
cmp
(bad)
mov
or
xchg
mov
sub
mov
js
imul
push
mov
lods
or
scas
add
sbb
lahf
(bad)
(bad)
jmp
sbb
fldcw
sub
bound
push
pop
xchg
(bad)
fcomip
dec
iret
sub
mov
mov
(bad)
(bad)
(bad)
mov
and
fsubr
call
xor
sar
sub
cmp
pop
inc
sub
dec
inc
stos
ret
fisttp
retf
sub
pop
cmp
repz
sbb
adc
das
pop
int
in
ins
push
test
adc
ss
add
pop
std
mov
sub
jmp
cli
repnz
add
jle
call
sub
ss
pop
mov
pop
(bad)
inc
pushf
ret
adc
popa
inc
repnz
fidiv
sbb
out
cmc
outs
mov
dec
out
adc
lods
push
leave
stos
ja
rcr
and
loop
pop
push
add
call
jmp
enter
dec
jmp
ret
cmps
cmp
or
xchg
or
add
fild
movs
cmps
rep
in
mov
mov
sahf
ret
(bad)
in
scas
arpl
sar
into
fs
xchg
sub
cmp
sub
or
aas
push
(bad)
(bad)
fisttp
xor
ret
lods
jmp
cmps
imul
ss
(bad)
(bad)
inc
sub
xor
pop
inc
out
add
test
dec
(bad)
cmps
in
out
int
scas
push
imul
cli
(bad)
call
mov
mov
dec
sub
jp
sub
cmp
(bad)
inc
push
cmps
mov
or
push
frstor
sahf
and
and
or
dec
jmp
and
into
std
(bad)
mov
mov
sbb
xor
mov
call
xor
push
loop
xchg
inc
inc
into
pop
call
mov
and
xor
nop
mov
pop
mov
sbb
movs
call
cld
fs
xchg
jge
xor
sbb
cld
sbb
call
imul
enter
scas
sbb
jb
inc
jmp
call
cmc
xchg
mov
fbld
inc
out
scas
or
lods
loop
push
jg
popa
cld
mov
mov
fnstcw
cli
jmp
(bad)
mov
sub
imul
dec
daa
out
fs
dec
xor
push
sbb
aad
xchg
imul
pop
repz
jmp
or
int
pop
add
retf
xor
cmps
inc
pusha
pop
jae
idiv
(bad)
(bad)
call
adc
xchg
jp
cmp
mov
adc
test
cmp
popa
test
sub
idiv
(bad)
(bad)
out
call
dec
pop
push
or
xchg
iret
(bad)
sar
cli
push
sub
cmp
jle
movs
push
pop
sub
sub
push
sar
(bad)
(bad)
mov
adc
shld
push
dec
imul
sub
mov
inc
push
cmp
jmp
cli
aaa
adc
aam
mov
jmp
ret
(bad)
pop
stos
aaa
(bad)
mov
mov
sub
mov
jb
xchg
(bad)
inc
add
mov
imul
mov
cmp
(bad)
(bad)
dec
xlat
or
or
jmp
pop
sahf
adc
fistp
and
mov
mov
movs
scas
(bad)
(bad)
jg
movs
std
pushf
xchg
sahf
or
ficomp
add
aad
test
dec
fsub
ins
in
(bad)
(bad)
(bad)
jmp
(bad)
mov
xchg
jb
mov
inc
push
mov
mov
retf
lods
sub
(bad)
jg
in
retf
push
sahf
dec
call
rcl
and
repnz
loopne
stos
(bad)
call
(bad)
call
rol
test
sub
adc
sub
loopne
neg
jg
push
outs
pusha
or
and
xor
xor
sbb
stos
mov
(bad)
dec
push
jbe
sub
xchg
jnp
jmp
addr16
retf
mov
loope
ja
scas
scas
cdq
call
push
dec
cmp
retf
imul
jg
xchg
sub
xor
int
(bad)
clc
pop
jb
retf
loop
cmp
(bad)
jmp
mov
ins
sahf
pop
sub
test
adc
push
pop
and
(bad)
(bad)
dec
inc
daa
pop
call
push
fimul
cmp
ror
push
cli
inc
mov
mov
sub
mov
(bad)
lock
(bad)
(bad)
(bad)
cmp
(bad)
cmp
int
mov
or
imul
hlt
pop
add
jmp
(bad)
(bad)
(bad)
call
mov
mov
mov
xor
hlt
out
cmp
push
xor
mov
pushf
cmp
cs
(bad)
(bad)
jmp
add
lahf
sub
retf
popf
idiv
sub
cli
outs
mov
jmp
(bad)
(bad)
dec
pop
jb
inc
in
jnp
xchg
pushf
dec
mov
int3
cli
mov
jg
jnp
test
aad
(bad)
(bad)
(bad)
dec
ins
ror
jmp
mov
jl
mov
fcmovnu
(bad)
(bad)
jmp
and
es
popa
imul
mov
jle
sub
or
mov
movs
sbb
mov
sub
out
mov
xlat
cmps
icebp
shl
mov
dec
(bad)
inc
mov
enter
dec
mov
dec
add
dec
push
mov
(bad)
(bad)
call
stos
cmp
jns
retf
mov
das
lahf
retf
mov
push
and
(bad)
(bad)
(bad)
jmp
lods
push
sti
and
retf
popa
mov
scas
xchg
ret
repnz
jb
retf
pusha
hlt
(bad)
(bad)
push
cmp
add
xchg
hlt
sbb
loope
into
sbb
sub
xor
mov
xchg
icebp
in
adc
(bad)
call
mov
fild
push
out
call
adc
scas
mov
cli
(bad)
(bad)
cmp
mov
push
sbb
test
push
jmp
jmp
jle
test
(bad)
call
sub
movs
sub
shr
sub
and
lea
mov
mov
jmp
jge
or
cmp
push
fadd
imul
aas
xor
in
std
stos
sti
sbb
xchg
es
inc
ret
pop
push
movaps
mov
(bad)
call
(bad)
call
leave
pop
jo
xchg
push
dec
retf
(bad)
sbb
inc
xchg
int3
pushf
dec
and
das
out
outs
mov
push
fidiv
sbb
popa
inc
adc
sbb
mov
mov
push
icebp
push
out
dec
or
fwait
jecxz
pop
shr
pop
mov
mov
mov
jecxz
mov
mov
jb
sub
mov
or
(bad)
(bad)
(bad)
cmp
cmps
scas
(bad)
adc
in
mov
leave
(bad)
xchg
dec
sub
pop
cs
cdq
cmp
in
shl
(bad)
(bad)
(bad)
(bad)
call
ds
das
outs
push
lea
cld
xchg
mov
inc
cdq
mov
icebp
call
movs
sub
ds
sbb
jbe
cmp
pop
repnz
bound
stc
imul
fst
sub
mov
jle
cwde
jmp
adc
mov
jmp
lahf
mov
cmp
jp
pop
xchg
(bad)
mov
imul
mov
(bad)
dec
(bad)
sub
imul
cmp
stos
mov
add
sub
mov
xor
pop
cld
test
ss
mov
dec
(bad)
fcomip
dec
jmp
mov
in
xor
mov
mov
add
(bad)
(bad)
jge
(bad)
sub
mov
mov
daa
mov
ret
jp
jmp
push
adc
and
cmps
daa
sub
xor
std
sbb
retf
int
in
cwde
(bad)
(bad)
(bad)
(bad)
in
sub
sub
in
inc
outs
movs
movs
(bad)
mov
mov
xor
sti
add
mov
(bad)
(bad)
fdiv
je
xchg
lahf
iret
mov
jmp
push
mov
jge
sub
jmp
call
(bad)
leave
div
and
cmps
stos
sub
mov
stos
cmp
jg
(bad)
(bad)
fsubr
pop
into
test
repnz
adc
fs
jb
(bad)
sbb
pop
(bad)
cmps
in
mov
(bad)
dec
sub
pop
dec
(bad)
rcl
dec
sbb
sbb
fistp
ret
dec
xchg
(bad)
(bad)
call
mov
add
mov
nop
(bad)
repz
mov
in
lock
enter
(bad)
(bad)
cmp
lods
jmp
lea
pushf
cs
and
inc
loope
iret
push
aad
fidiv
xor
and
(bad)
(bad)
push
push
sbb
cmp
jb
outs
(bad)
sbb
in
ret
pop
ins
cs
fld
cmp
cli
dec
sub
movs
dec
xchg
add
daa
inc
shl
(bad)
(bad)
jmp
pop
scas
add
sahf
mov
cmp
xor
mov
loope
jmp
lock
iret
lahf
mov
push
or
sub
pop
mov
(bad)
call
adc
cs
aad
clc
pop
shr
or
mov
sub
pop
dec
(bad)
(bad)
cmp
jmp
(bad)
push
sbb
jge
clc
mov
inc
(bad)
(bad)
(bad)
jmp
sub
xor
adc
pop
or
or
sub
xor
sub
js
mov
pop
mov
(bad)
jmp
sub
cmp
call
mov
icebp
int3
pop
push
ins
call
cdq
push
lock
call
shl
mov
add
call
test
sbb
retf
imul
(bad)
(bad)
(bad)
jmp
jecxz
ret
shl
sbb
sbb
and
dec
stos
add
mov
push
sub
xchg
sub
xor
push
jmp
cli
pop
and
and
cmp
adc
imul
movs
(bad)
(bad)
mov
dec
mov
sub
gs
push
or
(bad)
push
jmp
dec
cmps
movs
test
and
pop
sbb
xlat
or
push
es
test
ins
ins
fstp
inc
mov
(bad)
cmp
sar
fwait
cmps
jg
cmp
jmp
cli
ret
test
in
xor
inc
inc
dec
lods
cwde
clc
(bad)
(bad)
and
inc
or
jne
add
mov
mov
call
jbe
(bad)
jg
push
shl
dec
or
sub
out
or
fisttp
lods
or
call
retf
(bad)
(bad)
mov
cli
mov
enter
push
pushf
mov
adc
mov
add
loop
sub
fistp
popf
(bad)
popa
mov
mov
(bad)
(bad)
(bad)
jmp
xchg
aas
out
pop
lahf
jmp
or
dec
std
movs
jo
mov
call
cmp
mov
jmp
and
inc
inc
or
imul
(bad)
jmp
mov
and
xor
scas
jp
in
xchg
or
rol
dec
(bad)
(bad)
push
xchg
loop
and
mov
loopne
push
aad
test
enter
(bad)
(bad)
dec
adc
repnz
inc
mov
mov
or
inc
jnp
mov
stos
dec
xchg
push
xabort
stos
cmp
out
sbb
cmp
mov
mov
icebp
stos
iret
(bad)
sbb
lock
push
out
ret
inc
inc
jle
out
xchg
test
mov
xor
jmp
sub
cli
retf
or
retf
jecxz
fwait
enter
pop
mov
in
pop
test
pop
cdq
movs
mov
mov
cmp
jmp
inc
movs
pop
(bad)
(bad)
pop
arpl
cmp
and
and
in
hlt
jg
(bad)
jg
daa
adc
arpl
imul
fwait
cli
push
adc
lods
push
(bad)
call
test
stos
fmul
scas
sar
or
cmps
adc
imul
pushf
fisub
in
or
or
inc
clc
sub
add
push
fbld
lods
mov
fwait
retf
and
xor
cmp
dec
std
ret
jp
(bad)
cli
cmp
mov
adc
pop
jmp
leave
mov
mov
sub
iret
and
scas
or
push
mov
hlt
aaa
mov
jmp
icebp
ins
add
push
xchg
xor
out
mov
stos
and
add
fidiv
(bad)
mov
adc
sub
mov
push
(bad)
cld
sub
ins
jge
push
outs
imul
(bad)
jg
or
jno
mov
push
(bad)
adc
clc
and
das
inc
add
mov
cmp
loopne
sahf
adc
xchg
mov
ret
(bad)
push
lea
hlt
mov
std
jg
movs
ds
adc
enter
adc
or
(bad)
call
sub
enter
and
scas
cmp
jge
mov
fadd
repnz
sub
jg
xchg
sub
mov
jne
or
push
clc
in
(bad)
(bad)
(bad)
call
adc
js
mov
arpl
test
neg
mov
(bad)
(bad)
fcomip
mov
inc
jo
xchg
sub
inc
mov
mov
out
cli
mov
jne
(bad)
(bad)
call
loop
int
sub
dec
mov
pop
icebp
push
jmp
jb
stos
jnp
(bad)
(bad)
mov
mov
lock
push
cmp
popa
ret
jae
jl
stc
test
mov
stos
push
mov
mov
cmp
cs
mov
add
pmulhuw
jle
mov
add
inc
jbe
mov
adc
(bad)
(bad)
(bad)
cmp
mov
mov
out
jnp
daa
adc
ret
xchg
jne
push
in
inc
pop
mov
test
call
pop
jo
xchg
out
dec
pop
repz
scas
jns
sub
idiv
(bad)
jle
cmp
cmp
cmp
adc
ins
xchg
pop
cli
popf
mov
(bad)
jg
lds
adc
mov
in
lods
and
test
das
pop
mov
(bad)
jg
push
pop
jmp
sar
pop
and
cmp
fsubr
(bad)
(bad)
(bad)
call
mov
push
ins
sub
retf
push
pop
dec
jmp
neg
add
std
(bad)
(bad)
(bad)
fistp
jb
jmp
cmp
cmps
bndstx
and
idiv
mov
pusha
sbb
jg
hlt
imul
scas
pushf
sub
jnp
and
out
mov
mov
loop
int
jmp
(bad)
fwait
(bad)
sbb
add
pop
or
mov
cmp
(bad)
(bad)
(bad)
call
cmc
and
jmp
fs
cmp
mov
sbb
add
std
cs
rcr
inc
pop
mov
jmp
jmp
js
and
xor
iret
xchg
mov
add
inc
push
jle
hlt
sub
push
retf
pop
cmp
mov
pop
cwde
and
or
dec
sub
push
retf
imul
or
(bad)
jg
and
jg
ja
(bad)
dec
das
call
jo
cli
xchg
hlt
jmp
pop
cld
(bad)
fcomip
shr
mov
mov
sbb
mov
loopne
push
sub
or
call
lock
pop
or
dec
pop
or
test
jns
(bad)
out
clc
mov
ret
repz
pop
mov
mov
or
cwde
or
dec
sub
or
or
rol
push
xlat
mov
dec
sub
in
ficom
mov
sahf
jmp
sub
mov
shl
jg
add
cmp
inc
bound
push
int
push
cld
or
(bad)
(bad)
(bad)
jp
mov
bndldx
mov
push
push
mul
push
ss
xchg
shr
xor
popa
movs
adc
(bad)
fst
push
addr16
in
daa
pop
add
mov
sahf
cwde
std
(bad)
jg
fild
mov
jmp
mov
not
cmps
mov
pop
jle
sub
lods
pop
dec
stos
mov
imul
xor
es
mov
mov
cmp
stos
pop
loopne
sbb
cmp
shl
(bad)
(bad)
(bad)
jmp
xor
jns
jb
xor
repnz
stos
jp
sbb
sub
sub
xchg
(bad)
(bad)
(bad)
jmp
js
push
leave
outs
test
cli
std
cmp
(bad)
mov
xchg
inc
bound
sub
std
(bad)
call
mov
cmc
lods
scas
and
pop
push
mov
xchg
adc
pop
out
fcomip
or
fistp
nop
test
inc
jl
das
stc
mov
fwait
mov
xor
sub
in
mov
dec
(bad)
cmp
xchg
aam
enter
mov
pushf
fild
sub
fcmovbe
call
mov
mov
jo
imul
or
sbb
inc
lock
dec
ret
scas
outs
inc
mov
jmp
sbb
scas
aas
loopne
mov
hlt
loopne
jmp
cmp
(bad)
dec
jp
mov
or
and
(bad)
(bad)
(bad)
stc
and
cmp
cmps
adc
inc
cmp
pop
inc
repz
rol
(bad)
(bad)
call
jle
sbb
loopne
lds
sub
jae
idiv
fnstsw
add
loop
call
pop
pop
sub
cmp
retf
fwait
(bad)
push
xor
sbb
imul
(bad)
jmp
test
data16
pop
sbb
or
shr
mov
cli
mov
jmp
pop
sti
popf
test
out
dec
retf
out
dec
cli
push
mov
sahf
jb
mov
es
push
std
pop
cmc
add
adc
dec
and
add
lea
test
mov
call
out
jbe
lahf
cmps
xchg
dec
add
or
(bad)
pop
shr
pop
sbb
je
jle
(bad)
call
jbe
ret
movlhps
push
or
hlt
scas
or
and
inc
mov
test
sub
cdq
sub
ret
cmp
mov
nop
mov
and
sti
jmp
(bad)
inc
sar
xchg
mov
sub
mov
imul
push
pushf
clc
ret
xchg
push
call
(bad)
cmp
stc
stos
aam
std
sti
sbb
in
push
sub
(bad)
call
dec
pop
ja
test
jnp
push
icebp
jg
ss
mov
popa
push
outs
ja
add
(bad)
(bad)
(bad)
mov
gs
push
push
fstp
imul
idiv
(bad)
jmp
(bad)
and
mul
dec
in
jg
out
mov
in
mov
(bad)
mov
inc
fidiv
aam
lock
jae
dec
ret
xchg
ja
dec
imul
div
std
dec
cmp
and
sbb
nop
cmc
iret
fistp
sub
(bad)
fnstsw
clc
and
sub
fist
shl
mov
and
mov
push
xor
pop
outs
cmp
bound
pop
outs
ins
movs
push
int
inc
add
mov
arpl
loopne
(bad)
inc
sbb
sbb
xor
stos
jmp
jmp
sub
(bad)
adc
das
sbb
mov
in
and
int
or
idiv
sub
retf
and
fcomip
sbb
inc
sti
movs
pop
cmc
sub
movs
xchg
inc
in
pop
(bad)
(bad)
(bad)
call
lea
(bad)
jne
imul
sbb
mov
sbb
adc
pop
adc
enter
adc
fimul
pop
sar
lock
in
jp
arpl
jmp
pop
inc
jbe
mov
mov
sub
pop
jno
test
(bad)
dec
js
iret
sbb
lahf
leave
and
xchg
pop
mov
cld
pop
fisubr
mov
mov
call
mov
daa
sub
mov
shl
cmp
test
mov
(bad)
inc
je
(bad)
cmp
in
jle
jno
fdivr
(bad)
mov
mov
cld
(bad)
inc
xchg
sub
sub
repnz
jge
cdq
mov
add
push
or
mov
pop
(bad)
(bad)
mov
cmp
lea
fisubr
mov
(bad)
(bad)
(bad)
jmp
cli
call
add
mov
(bad)
mov
iret
cmp
mov
pop
loopne
call
cdq
stos
(bad)
sbb
mov
xchg
mov
jno
(bad)
jmp
gs
out
or
shr
pusha
js
neg
test
cli
ja
jp
cmps
inc
inc
scas
sbb
std
mov
cmp
mov
xor
push
std
and
mov
pushf
xchg
adc
xchg
sbb
call
test
dec
mov
cmp
sub
(bad)
(bad)
(bad)
inc
or
mov
out
xor
xchg
or
shl
or
dec
leave
fisttp
inc
push
jnp
and
jmp
lock
in
movs
mov
mov
inc
(bad)
(bad)
(bad)
jg
mul
imul
adc
sub
ror
xchg
cmp
pop
adc
mov
(bad)
mov
ins
inc
jns
ins
add
pop
daa
jmp
retf
pop
xor
fisub
fs
dec
(bad)
pushf
sbb
adc
(bad)
jmp
stos
mov
mov
retf
es
pop
and
(bad)
repnz
mov
jmp
stos
dec
test
out
faddp
addr16
(bad)
(bad)
push
loop
lahf
inc
fsubr
pop
lods
and
ret
cmp
pop
int
sar
xchg
sub
ret
(bad)
mov
cmp
retf
test
repnz
ficomp
or
jmp
jecxz
inc
add
or
inc
pushf
or
jns
fnstsw
cli
add
mov
and
ret
jecxz
cli
scas
mov
retf
fldcw
cmp
push
shl
jb
jmp
outs
aad
jnp
lea
cli
(bad)
inc
test
nop
lods
lock
push
pop
add
fisubr
(bad)
xchg
cmp
cmp
add
mov
cli
mov
pusha
mov
icebp
in
in
mov
es
xchg
and
sbb
mov
nop
and
push
lds
hlt
(bad)
(bad)
jmp
pop
clc
dec
gs
pop
jnp
mov
pusha
sub
mov
ror
ss
(bad)
mov
lsl
pusha
imul
(bad)
mov
scas
test
loop
xchg
(bad)
jg
inc
dec
pushf
cmps
jecxz
in
xchg
adc
mov
sub
jmp
cmps
ins
jmp
je
call
popf
jns
pop
xor
mov
cmp
loope
(bad)
jns
lods
repnz
stc
mov
adc
adc
inc
adc
inc
add
mov
lock
mov
inc
adc
into
adc
push
xchg
sbb
add
call
pushf
xor
sub
bound
(bad)
popf
loope
(bad)
sub
jbe
frstor
mov
push
mov
(bad)
(bad)
push
out
pop
cmp
jbe
cdq
push
mov
mov
ins
in
out
(bad)
(bad)
(bad)
push
or
mov
pop
inc
mov
ret
inc
or
sub
fdivr
mov
xor
cmp
cmps
inc
adc
dec
xor
adc
imul
hlt
and
test
mov
data16
js
sub
cld
call
(bad)
cli
lahf
add
scas
movs
add
xchg
mov
cmp
inc
into
mov
inc
ds
mov
in
out
loope
stos
lods
sub
(bad)
jmp
in
sti
sbb
dec
nop
add
or
mov
mov
cmps
into
out
mov
mov
sub
cli
(bad)
mov
or
arpl
sub
dec
(bad)
(bad)
(bad)
dec
das
sti
pop
inc
icebp
jecxz
cmps
scas
mov
xchg
cli
sbb
sub
adc
push
jb
cli
push
stos
cmp
call
xchg
outs
or
scas
mov
imul
pushf
xor
cmp
cld
call
test
popa
sbb
cli
imul
and
push
push
jge
mov
retf
xchg
cld
(bad)
call
je
jmp
and
out
popa
aam
imul
push
mov
sbb
stos
adc
hlt
pop
fsub
push
add
fdivr
jo
and
retf
sbb
pop
cmp
pop
mov
clc
lock
(bad)
(bad)
call
sbb
dec
dec
pop
and
bound
daa
jle
int3
nop
jmp
pop
mov
or
sub
sahf
leave
scas
mov
js
mov
sub
pushf
mov
pop
pop
test
cmp
imul
in
aaa
jl
dec
xchg
fist
out
mov
and
push
stos
js
(bad)
(bad)
out
aam
or
fnsave
sub
lea
pusha
mov
cmp
rcr
push
add
push
cld
ret
setp
xor
add
(bad)
dec
cmp
test
jns
sub
mov
or
jl
mov
sub
xlat
jb
xor
test
movs
loopne
ins
mov
dec
dec
adc
push
pop
add
sbb
(bad)
fbstp
add
dec
jp
retf
enter
(bad)
call
std
xchg
mov
mov
jae
sar
add
jne
jne
dec
and
(bad)
(bad)
(bad)
jns
sbb
test
adc
and
out
and
test
cli
repz
test
mov
(bad)
(bad)
call
and
xchg
mov
(bad)
imul
(bad)
(bad)
jmp
clc
rcr
add
cld
(bad)
inc
xchg
mov
retf
pop
or
(bad)
jg
mov
pop
push
movs
mov
add
push
movs
push
mov
dec
xchg
clc
dec
xor
pop
mov
adc
(bad)
dec
and
arpl
xchg
mov
inc
mov
dec
sti
pop
xor
push
inc
dec
js
pop
mov
push
or
gs
(bad)
js
add
dec
add
call
adc
cmp
sub
in
or
or
lock
shl
clc
push
dec
out
xchg
sub
idiv
jg
(bad)
fldenv
(bad)
(bad)
(bad)
call
dec
mov
dec
xchg
push
call
dec
ins
jae
rol
sbb
jnp
inc
pop
cmp
(bad)
ret
in
xchg
jno
pop
into
and
dec
mov
sar
xlat
push
in
sub
or
mov
je
jmp
fimul
lods
(bad)
push
adc
mov
cmps
mov
(bad)
mov
push
xor
icebp
jmp
cmp
inc
aaa
add
arpl
sub
shl
sub
(bad)
(bad)
mov
xchg
inc
std
mov
int3
popa
imul
retf
pop
cli
aad
cli
mov
inc
jmp
add
push
dec
fcomp
cmp
dec
sub
icebp
test
es
push
pop
ins
push
adc
inc
add
cmps
xchg
das
fsub
pushf
cmps
shl
dec
inc
(bad)
sub
cmp
mov
push
mov
lock
inc
cmp
sub
outs
shl
and
popa
mov
jb
out
ror
xchg
idiv
sar
mov
hlt
adc
(bad)
xchg
xor
std
lods
sub
xor
out
sub
pop
icebp
aaa
cld
jmp
push
mov
mov
cmp
adc
cmp
call
sar
(bad)
jmp
mov
sub
test
(bad)
mov
into
mov
jb
mov
out
sub
cwde
sahf
lods
jno
sub
or
call
icebp
stos
(bad)
repz
pop
push
mov
lea
pop
jg
(bad)
(bad)
(bad)
jmp
xchg
cwde
ds
sub
inc
loop
not
fisub
push
mov
cmp
cmps
fisttp
mov
std
cmp
pop
leave
imul
inc
sub
adc
cmp
inc
xchg
icebp
(bad)
jmp
jecxz
sbb
(bad)
fild
loop
stos
mov
aad
xor
jbe
retf
leave
(bad)
jg
jg
inc
xchg
ins
push
mov
pop
retf
inc
cld
mov
xchg
retf
push
cld
call
cmp
repz
fs
outs
sub
push
cmps
inc
or
gs
add
push
test
es
cmp
bound
cmp
sbb
bound
sub
lods
pop
sub
sub
cmp
gs
jmp
clc
cdq
jb
cmps
push
(bad)
jmp
jp
lds
into
adc
dec
sbb
iret
xchg
out
repz
rcr
jmp
mov
adc
out
mov
call
or
sbb
icebp
adc
jge
scas
cli
cmp
mov
xchg
mov
jno
stos
mov
call
cmps
in
add
cli
(bad)
jmp
mov
lea
cmps
jmp
mov
adc
frstor
leave
jmp
and
pop
adc
out
dec
and
cmp
add
jmp
dec
fidiv
(bad)
rcl
and
dec
dec
(bad)
cmp
icebp
(bad)
fiadd
mov
loopne
rcr
ret
jle
mov
adc
lahf
sti
sti
xchg
imul
mov
aaa
leave
ret
dec
idiv
sbb
or
stos
push
loopne
dec
xor
lahf
lahf
xchg
push
fdivr
call
mov
call
out
xor
mov
push
test
(bad)
jmp
mov
cmp
leave
inc
xchg
xor
inc
cmp
scas
mov
cmc
dec
popf
push
stos
sub
das
mov
(bad)
(bad)
(bad)
jmp
test
or
cdq
out
call
mov
sar
jmp
in
mov
xlat
xor
(bad)
xlat
call
jmp
sub
(bad)
mov
mov
in
std
int3
dec
adc
xor
(bad)
mov
mov
scas
pop
cmp
jp
jbe
adc
(bad)
call
bound
in
lea
(bad)
mov
int
add
rcl
loopne
cmp
lea
fbstp
movs
(bad)
mov
push
sub
pop
dec
pop
sub
pop
mov
push
add
cld
xchg
pop
dec
and
movs
(bad)
out
cmps
fdiv
sub
sub
(bad)
(bad)
call
aam
(bad)
sub
inc
inc
mov
fwait
cdq
ret
and
stos
loop
(bad)
call
(bad)
(bad)
(bad)
push
mov
sub
ret
mov
sbb
in
sub
(bad)
cmp
inc
mov
retf
adc
retf
jg
mov
push
int3
sbb
xlat
fild
mov
ja
jmp
mov
outs
int3
mov
stos
xor
fidivr
hlt
loopne
jmp
sbb
movs
sar
mov
cs
cmp
push
(bad)
out
movs
add
inc
scas
mov
xor
call
fstp
stos
mov
call
pop
out
mov
ins
xchg
(bad)
jmp
cli
jp
(bad)
ins
cdq
int3
sub
push
xchg
cwde
lods
xor
aaa
(bad)
fist
enter
lea
push
jns
ss
pop
add
enter
mov
mov
imul
cs
in
mov
call
jmp
sbb
cmps
stos
and
das
scas
push
lahf
int3
enter
pop
call
mov
movs
ins
mov
xchg
sbb
outs
jmp
movs
cmp
mov
jle
and
retf
jg
(bad)
(bad)
out
or
dec
iret
mov
mov
leave
out
push
arpl
addr16
movs
push
jp
jmp
xchg
addr16
jo
pop
dec
(bad)
(bad)
(bad)
jmp
imul
nop
lods
mov
adc
(bad)
imul
test
add
pop
inc
xchg
(bad)
push
jp
fisttp
pop
jg
(bad)
(bad)
frstor
mov
sub
jp
cld
ja
sbb
adc
out
stos
and
test
xchg
fisttp
(bad)
sti
dec
imul
jmp
inc
pop
cli
push
lods
or
xor
push
adc
repnz
in
cmp
(bad)
(bad)
jmp
sub
inc
sbb
sub
out
adc
std
mov
mov
jbe
push
pop
das
sar
add
ins
xor
aad
mov
jbe
xor
push
ret
mov
push
dec
(bad)
(bad)
(bad)
aas
daa
hlt
ins
inc
shl
js
nop
or
sub
jmp
pop
sub
(bad)
inc
mov
inc
inc
loop
adc
in
mov
sbb
add
jmp
call
ret
fstp
cmp
adc
mov
(bad)
inc
ret
mov
xor
or
in
jle
(bad)
fcomip
pop
outs
cmc
adc
adc
cmp
pop
call
adc
hlt
call
adc
ror
sub
loop
test
sub
mov
pop
dec
and
call
mov
dec
cmp
je
add
sbb
and
pop
cwde
sbb
sbb
and
sub
lods
sub
adc
xchg
imul
out
clc
(bad)
inc
xor
pop
push
loopne
jmp
push
mov
ds
add
sub
xchg
pushf
sahf
test
mov
scas
mov
std
aaa
pop
xor
adc
rcr
pop
mov
(bad)
(bad)
(bad)
jg
addr16
in
pop
jle
and
jb
out
inc
add
mov
movs
cli
sub
or
scas
sub
(bad)
(bad)
call
loopne
push
sub
dec
push
push
inc
retf
xchg
hlt
mov
mov
mov
xchg
adc
sub
dec
jne
ret
shl
ja
jmp
mov
das
adc
adc
adc
push
or
fild
das
aas
(bad)
(bad)
(bad)
(bad)
cmp
or
lds
sub
(bad)
adc
cmp
test
(bad)
xor
jecxz
jmp
(bad)
jmp
jmp
das
mov
pop
add
cmp
test
test
std
mov
push
cli
loop
lods
into
push
xor
js
jp
xchg
outs
jno
out
(bad)
dec
pop
cmps
adc
sub
or
mov
add
out
cmps
cmp
xor
mov
xchg
in
push
jp
into
mov
or
sbb
sbb
repz
sub
scas
sub
(bad)
(bad)
mov
pop
cmp
mov
pop
loop
movs
scas
scas
push
pop
xchg
fwait
mov
dec
mov
mov
push
jp
imul
push
push
mov
call
loopne
clc
lods
imul
scas
pop
mov
mov
and
mov
mov
aaa
aam
adc
clc
(bad)
inc
sbb
and
mov
das
cmps
cld
add
lds
adc
cmps
test
(bad)
(bad)
call
adc
test
into
leave
mov
jmp
ja
pop
sub
mov
ds
aas
cwde
in
push
(bad)
cwde
mov
pop
data16
xchg
and
call
jl
cmp
push
in
outs
dec
and
clc
(bad)
(bad)
push
std
imul
movs
test
mov
fsub
imul
sub
mov
(bad)
jmp
loopne
jo
mov
push
call
popa
jns
daa
adc
ins
mov
push
xor
jecxz
mov
inc
stos
imul
jmp
test
dec
jmp
fadd
loopne
call
(bad)
dec
cs
push
jmp
dec
lods
scas
or
(bad)
(bad)
ins
mov
(bad)
sub
iret
mov
scas
push
(bad)
(bad)
jg
cld
pop
fmulp
pop
adc
in
lods
inc
sbb
out
sub
sub
jmp
test
mov
(bad)
(bad)
(bad)
fistp
rcr
sahf
sbb
push
mov
clc
sbb
cmps
and
sbb
ds
xchg
stos
out
(bad)
jle
(bad)
(bad)
(bad)
push
ins
add
lea
xchg
outs
fisttp
test
pop
cmp
(bad)
push
cwde
mov
and
or
in
lods
and
fucomi
mov
cli
popa
call
jo
adc
cmp
das
imul
pop
inc
sbb
cdq
pop
add
or
test
mov
xor
jbe
sub
call
cli
push
ret
std
(bad)
stc
in
(bad)
pop
add
xchg
push
stos
cmp
add
jecxz
jg
mov
test
(bad)
mov
and
mov
rcr
out
jle
enter
push
xchg
fld
into
repz
sub
nop
pop
pop
je
mov
push
or
lock
or
pop
std
xlat
push
inc
push
sub
jb
ss
mov
dec
sub
jbe
sar
imul
dec
pop
fwait
xor
sbb
cld
adc
call
or
mov
mov
(bad)
lods
xor
in
(bad)
(bad)
jg
sub
dec
mov
inc
mov
shl
jae
sub
and
outs
bound
out
jg
xlat
test
ins
and
mov
add
es
(bad)
inc
call
adc
sub
jp
sub
repnz
(bad)
(bad)
mov
mov
sub
lds
mov
loop
cmp
or
(bad)
sahf
adc
xchg
and
push
out
and
mov
(bad)
push
ret
js
ret
dec
fcomp
inc
adc
and
inc
pop
adc
(bad)
mov
sub
ficom
clc
ret
jmp
adc
mov
inc
pop
iret
sub
movs
xor
jmp
mov
pop
pop
cmp
call
ret
pusha
mov
out
mov
sub
dec
cmp
fwait
pop
bound
sub
icebp
(bad)
jmp
loop
bound
mov
cwde
adc
retf
mov
cmp
jle
jecxz
xor
in
fsub
test
push
xchg
mov
in
jp
dec
std
(bad)
jmp
pop
pop
aam
sub
sub
gs
cs
scas
add
fdivrp
cmps
(bad)
(bad)
stc
(bad)
iret
mov
aam
in
fidiv
sub
sbb
retf
dec
sbb
mov
add
(bad)
dec
mov
add
xor
push
pop
scas
jmp
add
cli
xchg
bound
call
sbb
jno
dec
repnz
mov
mov
cmp
js
sub
sub
mov
nop
out
push
jb
cmp
call
imul
movs
fisubr
push
jb
jne
cmps
or
(bad)
(bad)
call
adc
js
call
stos
ret
les
das
fsubr
outs
cmps
mov
jp
cmp
and
adc
or
dec
mov
sub
jns
cmc
mov
push
call
inc
out
aas
(bad)
(bad)
(bad)
push
lahf
stos
push
mov
or
shr
adc
ds
shr
adc
scas
call
test
out
cmp
mov
inc
cmps
ja
imul
lock
ds
xor
movs
mov
lods
inc
lods
leave
ins
into
or
iret
adc
lock
mov
xor
push
adc
test
shl
mov
sar
add
sbb
scas
ds
ins
or
mov
jmp
loopne
or
and
lods
pop
in
std
(bad)
dec
rol
mov
mov
cmp
sbb
pop
inc
sar
xor
mov
cmp
es
and
sar
push
ret
cmp
repnz
lods
das
mov
jge
shr
(bad)
out
add
sub
hlt
xor
and
(bad)
inc
jp
retf
jp
and
jno
jle
cld
(bad)
dec
fiadd
xor
psrlq
xchg
jl
repnz
adc
(bad)
inc
sbb
test
out
into
les
pop
movs
(bad)
(bad)
(bad)
call
xor
jne
call
repnz
cmp
call
inc
fild
ins
push
and
(bad)
(bad)
(bad)
cmp
fdivr
sbb
shl
(bad)
aad
mov
fwait
mov
enter
ins
mov
stc
mov
inc
push
stos
xchg
clc
push
mov
call
retf
test
cmp
int3
(bad)
cmps
das
pop
xchg
jmp
adc
pop
and
fld
adc
out
dec
daa
mov
hlt
jg
lea
sbb
mov
mov
sar
pop
int3
ffreep
jmp
sub
fidivr
nop
dec
nop
jnp
fist
(bad)
jmp
loop
inc
cmp
lds
out
dec
test
mov
fbld
mov
movs
xor
call
mov
or
jmp
nop
or
mov
mov
push
sbb
sub
mov
sub
xor
pusha
mov
cli
fs
in
(bad)
jg
mov
mov
js
test
cmp
fidivr
pop
inc
jns
sub
clc
ds
fild
test
lods
inc
(bad)
sub
mov
loop
xchg
pop
pop
aam
mov
dec
or
je
clc
(bad)
(bad)
mov
retf
fcompp
xor
xor
test
sub
nop
sub
push
dec
and
sub
dec
cli
adc
jmp
push
stos
fisubr
push
xchg
dec
(bad)
(bad)
jmp
retf
iret
pusha
inc
jmp
std
imul
or
sub
mov
(bad)
jg
retf
jg
repz
(bad)
imul
mov
retf
adc
call
int
adc
hlt
(bad)
(bad)
mov
int3
and
push
lea
mov
aam
inc
sub
adc
(bad)
(bad)
(bad)
dec
sbb
cs
sbb
jmp
fbstp
push
mov
mov
(bad)
(bad)
(bad)
jmp
clc
test
xor
xor
or
inc
mov
adc
or
clc
mov
dec
pop
sub
(bad)
jmp
pop
lods
jo
lds
cdq
jmp
shl
in
pushf
adc
mov
iret
mov
aam
nop
and
mov
push
clc
call
sub
scas
shr
scas
loope
stc
popa
movsx
dec
std
(bad)
(bad)
(bad)
fdivr
xor
(bad)
fisttp
test
cmp
cmc
xchg
pop
sub
shr
sahf
sbb
jge
dec
and
(bad)
(bad)
jg
(bad)
xacquire
daa
mov
jo
mov
mov
adc
sbb
push
test
jmp
movs
add
scas
stos
clc
inc
inc
jecxz
push
cmps
imul
cmp
jmp
pop
bound
mul
inc
push
mov
push
cmps
mov
pop
jmp
xchg
sti
jmp
repnz
out
daa
mov
test
pop
bound
(bad)
(bad)
mov
adc
mov
sub
popf
fstp
repz
pop
push
xchg
outs
xchg
xor
repz
push
xchg
and
xor
and
inc
mul
sbb
fsubr
iret
mov
shl
sbb
(bad)
fild
in
movs
(bad)
sbb
(bad)
push
pop
pop
jmp
cwde
xchg
(bad)
mov
jmp
xchg
outs
imul
sub
or
push
idiv
xchg
jo
stos
dec
push
call
in
or
(bad)
(bad)
fild
fwait
adc
pushf
dec
mov
and
sub
jae
mov
jmp
imul
pop
xor
(bad)
push
mov
(bad)
(bad)
(bad)
cmp
xchg
and
dec
sub
xlat
js
lahf
(bad)
stc
jge
pop
repnz
popa
xchg
push
push
jmp
das
and
and
mov
out
push
push
sub
clc
add
push
mov
xor
mov
xor
push
js
dec
mov
in
ds
xor
call
sbb
mov
mov
aas
lods
std
pop
adc
push
(bad)
(bad)
jmp
adc
(bad)
inc
mov
jo
(bad)
(bad)
(bad)
jmp
std
jp
stos
mov
xchg
or
mov
mov
sbb
or
(bad)
(bad)
call
lods
jmp
cld
sub
iret
pop
mov
imul
push
jmp
or
push
mov
outs
retf
cli
adc
cmp
imul
pop
mov
call
imul
sub
jmp
mov
xchg
xor
jmp
scas
repz
pop
call
pop
(bad)
(bad)
(bad)
jmp
pop
xchg
sbb
std
popa
jae
scas
push
outs
test
in
arpl
and
test
addr16
jecxz
(bad)
(bad)
call
sahf
jns
lods
dec
cli
xchg
fstp
adc
dec
push
sub
es
sub
add
(bad)
(bad)
fadd
sub
mov
into
xchg
mov
inc
mov
lods
call
xchg
pop
(bad)
retf
out
call
movs
(bad)
jmp
jmp
xlat
cld
imul
adc
(bad)
(bad)
jg
clc
fidivr
adc
add
inc
xchg
out
inc
loop
stos
sub
bound
(bad)
(bad)
(bad)
(bad)
call
xchg
jle
out
sub
dec
dec
or
movs
sub
mov
cli
lods
mov
shr
vpaddb
(bad)
(bad)
jmp
jmp
and
in
std
fidivr
add
bound
mov
inc
dec
cld
(bad)
jg
push
dec
call
mov
mov
pop
std
(bad)
inc
jmp
jnp
daa
mov
sub
sub
pop
in
mov
dec
push
loop
movs
pop
cmc
(bad)
inc
outs
(bad)
jg
sub
push
out
or
mov
or
or
(bad)
(bad)
(bad)
jmp
push
or
pushf
or
mov
and
jmp
mov
sti
scas
ja
(bad)
(bad)
(bad)
jmp
pop
xchg
sub
cmp
stos
push
cmps
clc
clc
mov
or
das
push
mov
(bad)
(bad)
(bad)
(bad)
cs
lods
mov
lahf
pop
add
mov
mov
ja
rcr
(bad)
lods
(bad)
pop
loopne
xchg
mov
into
test
mov
jmp
ud0
sub
jmp
fdiv
gs
mov
xchg
lods
push
sub
jmp
jno
mov
cs
xor
jbe
mov
cmps
std
jle
fld
(bad)
fistp
mov
pop
daa
mov
dec
cs
out
test
pop
imul
div
dec
ins
clc
(bad)
(bad)
dec
call
xor
jp
fbstp
sar
xabort
inc
shr
dec
sbb
sbb
pop
movs
mov
(bad)
jmp
push
fmul
popf
sbb
cmp
sbb
pop
outs
adc
(bad)
(bad)
mov
xchg
popf
es
jnp
(bad)
(bad)
mov
pop
nop
mov
fcomip
inc
call
lahf
dec
jmp
fwait
arpl
stos
imul
mov
xchg
(bad)
(bad)
(bad)
inc
lahf
xchg
pop
fst
or
mov
call
sub
jmp
mov
idiv
(bad)
push
out
inc
loop
inc
sysexit
inc
sub
jmp
sbb
cmps
stos
scas
test
inc
dec
arpl
mov
mov
and
lea
movs
ins
xor
cli
(bad)
dec
sub
jmp
pop
and
xchg
jbe
mov
shl
cdq
clc
inc
test
mov
nop
xchg
test
mov
dec
and
cmp
or
div
pop
jne
sub
push
rcr
inc
push
aad
mov
iret
or
fs
dec
xchg
jmp
and
aaa
fcmovb
or
mov
add
cmp
xor
(bad)
dec
push
loope
mov
scas
test
int3
cs
stos
(bad)
(bad)
(bad)
jmp
mov
add
sbb
sbb
push
(bad)
in
pop
cs
shr
aam
fcomip
jmp
addr16
mov
aam
adc
idiv
int3
push
inc
test
daa
retf
imul
sbb
lock
pop
call
adc
(bad)
(bad)
(bad)
call
fcomp
push
push
mov
cvtps2pi
adc
int3
mov
adc
sbb
xchg
mov
pop
(bad)
cmps
mov
push
cmp
in
shl
cmp
lods
xchg
int3
push
adc
(bad)
pop
cwde
(bad)
push
jl
add
(bad)
test
sub
fld
jmp
sub
push
mov
(bad)
(bad)
mov
je
mov
stos
xchg
(bad)
mov
pusha
xor
std
call
dec
xchg
jno
cmp
pusha
mov
pushf
mov
xor
(bad)
jg
dec
cs
adc
xchg
fisubr
bnd
outs
repnz
loopne
mov
aad
clc
(bad)
(bad)
push
les
adc
adc
sub
test
or
cmp
adc
add
add
int3
mov
xor
pop
cmc
ja
lods
or
fst
pop
xor
ins
or
xchg
fwait
xor
pop
cli
movs
mov
or
punpckldq
ins
std
(bad)
jmp
jmp
jb
fsubr
push
(bad)
(bad)
sub
mov
sub
arpl
mov
add
add
hlt
and
mov
jmp
ins
stos
add
pop
mov
sub
xor
cmps
test
(bad)
mov
aaa
adc
xchg
inc
add
pop
jb
ja
dec
push
sub
(bad)
(bad)
call
and
push
loopne
and
push
jg
pop
mov
sub
(bad)
(bad)
(bad)
(bad)
cmp
sub
cli
pop
xchg
ret
dec
cmps
fmul
scas
or
inc
xor
mov
pop
dec
add
or
pop
xchg
scas
scas
and
lds
mov
push
push
leave
pop
push
js
dec
add
pop
push
test
or
xchg
sbb
int
(bad)
mov
int3
sbb
enter
daa
dec
cli
pop
xchg
add
jmp
out
sub
dec
movs
dec
scas
xor
mov
sub
scas
xchg
(bad)
pop
or
ins
call
xchg
cmps
mov
mov
mov
fs
cmp
jmp
sar
call
mov
sub
ins
das
sub
(bad)
(bad)
pop
jmp
(bad)
(bad)
jmp
fwait
outs
push
and
scas
mov
pop
in
(bad)
pop
outs
and
outs
pop
mov
cli
ja
inc
es
mov
pop
in
into
clc
ja
inc
clc
dec
std
cs
ror
cld
add
cmp
cli
stos
jle
mov
rol
not
ins
cmp
repnz
pop
aad
cmp
mov
pop
push
and
cmp
(bad)
mov
out
cmp
out
pop
mov
in
mov
sub
dec
clc
cmps
jb
out
test
pop
scas
in
lods
sbb
or
(bad)
(bad)
jmp
push
xchg
mov
and
jno
xchg
fbstp
inc
out
or
xchg
xchg
push
jmp
cwde
sar
mov
dec
add
dec
sub
(bad)
push
sahf
or
faddp
mov
xchg
pop
(bad)
dec
scas
mov
(bad)
(bad)
(bad)
fbstp
sub
dec
das
pop
ret
stos
adc
push
or
(bad)
(bad)
(bad)
(bad)
jmp
pop
fwait
and
retf
aas
mov
inc
or
mov
enter
push
mov
cmp
scas
mov
dec
ror
ds
into
imul
sub
dec
fdiv
pop
mov
mov
cld
retf
(bad)
sub
icebp
sbb
cmp
xor
sub
push
hlt
daa
mov
mov
cmp
pushf
cmp
jg
or
(bad)
dec
xor
xor
mov
movs
mov
stc
jb
fldenv
imul
cld
(bad)
jg
mov
outs
sub
(bad)
sbb
sub
jmp
int3
psrad
(bad)
jg
or
int3
iret
clc
outs
dec
pop
jle
mov
pusha
jg
(bad)
push
jg
cmp
lods
pop
mov
inc
(bad)
(bad)
(bad)
inc
out
(bad)
or
in
dec
mov
mov
sub
scas
and
(bad)
(bad)
jmp
sub
cmp
dec
mov
std
call
rcr
inc
xor
inc
imul
bound
call
fiadd
sub
or
stc
jmp
rcr
sbb
jmp
inc
les
cmps
shl
or
xchg
pop
mov
hlt
cmp
(bad)
(bad)
(bad)
mov
stos
sbb
mov
and
adc
jmp
adc
sbb
xchg
lods
(bad)
out
clc
movs
fimul
das
mov
retf
xchg
or
(bad)
jmp
xchg
add
mov
sub
sahf
mov
cmc
add
add
xor
(bad)
out
dec
retf
and
retf
and
movs
ds
xchg
test
mov
dec
jle
std
sub
push
retf
lahf
jl
sbb
cmp
sbb
out
(bad)
(bad)
inc
jecxz
and
push
ins
mov
les
imul
(bad)
mov
add
xchg
(bad)
dec
movs
dec
pop
sahf
btr
adc
mov
or
call
jo
in
push
sbb
pop
movs
mov
jmp
scas
mov
jmp
or
and
cld
lods
and
add
mov
xchg
cli
leave
mov
(bad)
(bad)
(bad)
(bad)
ficom
retf
sbb
sub
dec
mov
or
inc
stos
or
dec
inc
xor
cmp
es
add
(bad)
jg
add
outs
pop
out
inc
push
arpl
xor
cmps
scas
loopne
call
sub
rcl
test
xlat
dec
sub
xor
dec
or
sub
mov
dec
xchg
dec
cmp
jbe
outs
js
jmp
inc
mov
pop
jmp
xchg
jecxz
repnz
(bad)
mov
or
loopne
call
sub
(bad)
jmp
repnz
out
(bad)
(bad)
mov
(bad)
and
or
mov
sbb
enter
sbb
mov
aad
jmp
mov
or
mov
cdq
push
pop
xor
loopne
inc
xchg
fisub
hlt
push
jne
or
push
fidivr
mov
(bad)
(bad)
call
loopne
dec
jns
imul
push
or
sub
mov
loope
(bad)
(bad)
(bad)
(bad)
cmp
mov
loope
hlt
hlt
stos
jecxz
xchg
daa
sbb
stos
sahf
movs
adc
push
call
(bad)
fcomip
jmp
cmp
dec
pop
dec
push
jne
mov
fidivr
jb
jns
mov
pop
in
(bad)
(bad)
(bad)
(bad)
fmul
iret
out
in
mov
out
xchg
test
and
cdq
addr16
(bad)
jge
ffreep
dec
cmps
jle
inc
pop
mov
or
loop
xor
mov
cmps
mov
mov
clc
adc
jl
(bad)
(bad)
jg
(bad)
or
sub
fisubr
push
pop
xchg
sub
inc
scas
fst
jmp
stos
pop
and
pop
lods
call
adc
div
dec
sub
jmp
outs
add
jae
test
test
loope
loope
inc
xchg
outs
jg
outs
pop
movs
sbb
outs
retf
mov
lods
pushf
adc
ret
cmps
mov
pop
sub
jmp
(bad)
pop
popa
or
sar
(bad)
call
aad
arpl
mov
mov
retf
jl
or
(bad)
aad
dec
lock
jg
sbb
cli
fiadd
xchg
jmp
jmp
push
fstp
jp
xchg
test
iret
xor
or
loopne
and
(bad)
(bad)
dec
std
jnp
out
les
call
add
jo
lods
adc
xor
(bad)
mov
push
stos
jno
jo
mov
xchg
fcomp
(bad)
(bad)
mov
std
cli
imul
add
cld
push
lahf
lea
(bad)
(bad)
(bad)
mov
mov
iret
jns
cmps
(bad)
in
enter
ja
mov
mov
jmp
in
dec
clc
(bad)
(bad)
dec
in
stc
daa
xchg
pop
outs
aad
jb
jo
add
and
fcmovu
and
jno
in
mov
dec
and
xchg
fst
cmp
or
mov
inc
lahf
jg
sbb
ret
call
inc
scas
cmp
ja
dec
pop
xchg
jne
dec
ds
inc
std
mov
inc
fs
push
mov
ret
cmp
in
fsubr
jle
xor
popa
xchg
stos
and
(bad)
(bad)
(bad)
in
aaa
lods
mov
dec
stos
jmp
fst
push
in
add
dec
stos
call
mov
aad
sbb
jmp
xchg
stos
adc
pop
enter
cld
cld
sti
fild
shr
iret
jp
and
(bad)
(bad)
jmp
cmp
shr
fs
mov
cmc
jo
sti
fstp
in
sub
mov
pop
mov
cld
(bad)
(bad)
call
mov
stos
sbb
adc
nop
imul
(bad)
(bad)
(bad)
jmp
adc
push
add
jns
mov
mov
mov
inc
sbb
and
retf
out
cli
sbb
xor
jns
stos
pop
push
push
dec
popa
imul
push
inc
inc
adc
(bad)
mov
movs
fisub
xor
out
(bad)
cmp
outs
call
inc
mov
dec
stos
inc
pusha
repz
push
stos
(bad)
(bad)
dec
inc
(bad)
aaa
and
call
dec
cmp
jmp
cmp
push
pop
xchg
je
and
das
sub
(bad)
jg
xchg
and
std
xlat
pop
add
sub
push
cmp
sub
jmp
or
call
(bad)
and
mov
mov
cmps
cdq
lock
(bad)
push
and
xchg
call
(bad)
mov
scas
xlat
fcmovnu
push
bound
or
(bad)
(bad)
fistp
dec
push
sbb
sbb
dec
test
aam
sbb
jg
inc
fs
retf
adc
test
(bad)
push
or
jmp
fsub
ror
mov
pushf
cli
loope
ins
daa
mov
dec
and
scas
(bad)
dec
add
enter
jne
inc
loopne
ins
pop
dec
sti
int3
sbb
lock
(bad)
mov
mov
sub
enter
pop
(bad)
out
sub
adc
add
call
and
bound
mov
add
dec
shl
pop
jl
sub
(bad)
(bad)
push
test
and
jnp
mov
inc
push
gs
loopne
bound
xchg
mov
jb
fwait
js
xchg
adc
sub
loop
dec
adc
test
xor
dec
icebp
loopne
out
jle
fild
jmp
ds
cwde
std
out
(bad)
mov
scas
pop
xchg
push
ins
loope
aad
call
inc
in
or
mov
add
pop
mov
inc
dec
jge
cmp
cli
jmp
retf
adc
ffree
sbb
sbb
(bad)
(bad)
jmp
imul
jbe
and
xchg
sub
iret
sti
(bad)
(bad)
(bad)
(bad)
inc
cli
(bad)
cli
div
mov
add
jb
stos
(bad)
(bad)
pop
in
xor
neg
or
mov
mov
jne
int3
adc
int3
inc
or
push
sub
(bad)
(bad)
jmp
es
test
mov
loop
sub
(bad)
jmp
push
add
stos
add
int
scas
xchg
cli
enter
aaa
mov
lea
cwde
int
icebp
mov
sub
(bad)
call
imul
sub
pop
fcmovnb
push
mov
mov
cmps
sub
push
push
imul
push
movs
out
mov
jo
mov
add
ins
inc
cmp
inc
loopne
jno
es
mov
xor
(bad)
movs
cmp
jmp
sti
jp
pop
call
add
pop
(bad)
(bad)
jmp
jmp
pop
pop
mov
mov
iret
in
lods
loop
push
add
jmp
stos
jns
or
retf
mov
jg
jmp
cli
push
dec
fmul
jb
adc
loop
jge
sub
idiv
mov
mov
(bad)
jb
mov
pop
ret
ja
jl
inc
pop
hlt
and
int3
enter
cmp
das
xor
(bad)
(bad)
(bad)
push
mov
jg
arpl
push
dec
cmps
(bad)
scas
mov
mov
cdq
loopne
in
add
aaa
ins
clc
mov
mov
lock
sub
leave
fincstp
jp
jg
gs
pushf
mov
lahf
and
dec
call
xchg
shr
pop
mov
retf
sbb
shl
mov
(bad)
jmp
or
xchg
sbb
pop
mov
sub
call
(bad)
std
movs
push
add
jmp
dec
push
sti
mov
jmp
sbb
hlt
mov
dec
jge
repz
push
mov
in
add
ins
lock
call
pusha
sbb
xor
leave
movs
mov
call
nop
jl
inc
leave
call
or
loop
(bad)
xor
cmp
rcr
lock
push
stos
ins
in
jle
cmp
xor
cmp
push
iret
(bad)
das
data16
loop
dec
fs
setb
int3
pop
div
push
(bad)
(bad)
jmp
in
mov
xor
sbb
mov
movs
jge
pop
xchg
loopne
dec
cmp
std
mov
mov
call
clc
sub
outs
xlat
out
sbb
or
popf
popa
ds
push
daa
and
cmp
xor
mov
dec
sbb
cmps
xor
inc
retf
cs
call
pop
ret
loop
jg
jmp
cmps
cmp
mov
adc
pop
cld
aaa
cld
call
loope
lahf
aas
jb
xchg
cld
punpckldq
add
xchg
leave
push
(bad)
fstp
xor
sub
mov
(bad)
(bad)
jg
mov
(bad)
jmp
sbb
mov
sbb
cs
sti
xlat
call
(bad)
(bad)
jmp
adc
push
jmp
pop
mov
xor
ins
xor
out
fwait
lea
lods
mov
test
(bad)
cmp
(bad)
jae
fcmovne
lods
add
repz
cwde
and
push
leave
sub
inc
or
xor
(bad)
fisttp
mov
pop
in
mov
xchg
mov
fxch
(bad)
fucomip
scas
std
mov
mov
imul
add
neg
mov
dec
jecxz
jecxz
fs
cmp
cdq
mov
sub
sbb
add
adc
(bad)
(bad)
cmp
fs
daa
push
mov
scas
sbb
in
fwait
sub
pop
adc
scas
lods
sub
(bad)
(bad)
jmp
cmp
inc
into
icebp
stc
sub
mov
ins
jg
bound
dec
(bad)
jle
test
push
(bad)
in
mov
mov
cmp
cmp
xchg
pop
fstp
sbb
call
fdivrp
(bad)
(bad)
(bad)
(bad)
sbb
sbb
push
cs
xchg
std
dec
out
pop
cli
(bad)
jae
addr16
(bad)
scas
out
pop
push
(bad)
(bad)
(bad)
jmp
cli
loop
repnz
in
inc
jmp
jns
mov
(bad)
out
call
in
mov
or
(bad)
call
sub
add
adc
mov
das
(bad)
shl
push
lock
xchg
icebp
enter
sqrtps
dec
mov
xchg
test
enter
cmp
cwde
ss
mov
push
sub
loopne
adc
test
xchg
mov
sub
jmp
jmp
(bad)
or
nop
shl
jb
sub
xchg
cs
loopne
add
inc
out
(bad)
je
ds
and
call
outs
mov
mov
dec
scas
dec
xchg
(bad)
or
dec
(bad)
(bad)
push
sbb
(bad)
lods
movs
sub
mov
pop
dec
loopne
pushf
das
dec
pop
xchg
xor
and
xor
movs
jge
inc
ins
mov
ficomp
clc
jg
adc
fild
lods
leave
adc
rcr
dec
xor
fld
pop
mov
test
(bad)
(bad)
push
test
adc
xor
jmp
or
(bad)
mov
mov
mov
clc
or
movs
push
add
jmp
mov
mov
xor
clc
fwait
mov
sbb
scas
(bad)
(bad)
cmp
mov
ret
or
jo
cs
push
sbb
adc
out
push
in
jg
ins
jge
jno
mov
popa
mov
sub
fwait
mov
add
rcr
loop
fbld
(bad)
mov
test
inc
jno
mov
bound
sub
mov
dec
cmps
push
(bad)
(bad)
push
repnz
pusha
lods
adc
jo
jmp
movs
test
mov
(bad)
fcomip
push
adc
sub
test
xchg
dec
xchg
mov
dec
push
(bad)
mov
inc
or
mov
scas
dec
std
test
sbb
das
(bad)
mov
cli
call
or
mov
cld
test
in
lods
cdq
push
(bad)
(bad)
(bad)
jmp
pop
jne
out
ja
cmp
mov
mov
call
or
xchg
je
dec
loope
fisubr
pop
sbb
(bad)
jmp
mov
out
push
sbb
mov
mov
adc
or
(bad)
dec
clc
sub
push
pop
inc
movs
mov
mov
stos
sar
pop
pop
gs
mov
sbb
(bad)
push
call
dec
mov
mov
and
sbb
dec
inc
int
nop
imul
(bad)
jmp
scas
dec
scas
imul
or
retf
cld
arpl
neg
or
mov
sub
dec
adc
push
(bad)
clc
mov
sbb
push
call
jmp
jl
ins
cmp
jo
out
inc
out
(bad)
cs
push
repnz
ins
sub
dec
sub
mov
jmp
mov
(bad)
pop
idiv
jnp
stos
cli
mov
(bad)
sbb
xchg
add
(bad)
jmp
mov
xor
data16
cmp
jb
inc
push
stos
nop
clc
repnz
mov
pop
pop
dec
(bad)
dec
(bad)
push
leave
(bad)
(bad)
jmp
lahf
call
cmps
clc
xor
idiv
scas
mov
jnp
bound
inc
sbb
sbb
fisttp
mov
outs
sar
cdq
ds
xor
js
scas
and
rcr
movs
les
ret
dec
mov
dec
inc
(bad)
push
test
call
fild
retf
scas
xchg
or
push
stos
pop
movs
(bad)
(bad)
call
cmp
push
cmp
in
lea
mov
mov
shl
out
(bad)
int
jmp
push
jg
sbb
mov
add
rcr
scas
jmp
mov
retf
xchg
add
or
inc
sti
sub
mov
mov
jp
xchg
(bad)
sar
fcomip
sbb
cmp
mov
test
jg
xchg
xchg
xchg
shr
pusha
pusha
cmps
sbb
mov
adc
adc
(bad)
(bad)
(bad)
dec
xor
popf
add
add
movs
sub
retf
push
xor
in
call
push
xchg
push
mov
fwait
xchg
push
sti
mov
stos
lods
outs
pop
adc
xor
cmp
std
cmp
ins
dec
dec
lock
mov
or
out
loope
call
jno
bound
retf
hlt
inc
iret
jae
in
mov
mov
push
cli
push
pop
(bad)
or
int3
or
jb
and
(bad)
(bad)
(bad)
call
test
cwde
cmp
popa
fst
cmp
lods
adc
jno
hlt
dec
dec
sub
lods
lahf
xor
sub
test
dec
dec
sbb
loop
outs
test
cwde
mov
movs
(bad)
push
jp
aaa
cld
jmp
mov
loope
ins
adc
repnz
xor
clc
(bad)
(bad)
push
adc
mov
aad
aad
lahf
sub
repnz
out
and
rcr
add
movs
mov
mov
push
fwait
push
mov
cmps
or
jmp
pop
xchg
or
pop
xchg
cmp
mov
mov
or
retf
es
push
rol
test
mov
cmps
sbb
(bad)
shr
in
(bad)
call
inc
cdq
add
pop
sbb
ja
aad
aad
cwde
add
or
ret
sbb
gs
push
cwde
mov
(bad)
push
fnstenv
pusha
dec
adc
jg
movs
mov
pop
pop
pop
or
lock
mov
retf
sub
mov
jge
test
fwait
dec
(bad)
jmp
ret
mov
test
sbb
aam
jle
jmp
out
es
fistp
jae
jae
adc
not
dec
movs
outs
adc
push
xchg
inc
(bad)
(bad)
(bad)
jmp
ror
and
test
dec
sbb
xor
pusha
cmps
push
imul
cmps
cmps
xchg
icebp
fcomip
adc
or
fdivr
lds
cmp
pop
rcl
dec
jo
sub
push
push
pop
mov
xchg
mov
mov
mov
ja
movs
push
out
mov
(bad)
sbb
inc
dec
cli
cwde
inc
aad
add
call
inc
test
mov
mov
mov
outs
cmp
xor
push
sub
sbb
or
jl
shl
(bad)
(bad)
inc
mov
and
outs
push
outs
xchg
outs
mov
arpl
movs
and
push
cwde
xor
(bad)
(bad)
call
lds
stos
xchg
imul
cmp
fidivr
cwde
xchg
jo
push
(bad)
loope
mov
push
adc
push
xchg
inc
cwde
es
cwde
mov
movs
push
(bad)
lods
dec
sub
dec
xor
mov
cli
sub
data16
mov
scas
cli
adc
mov
add
out
and
push
sbb
(bad)
(bad)
(bad)
dec
sub
push
(bad)
imul
addr16
gs
sub
out
aaa
xchg
mov
jb
add
jg
cmp
cmps
sbb
mov
push
mov
xor
(bad)
dec
mov
bound
add
add
jle
leave
scas
pop
in
xchg
cli
(bad)
mov
add
shr
sub
xor
(bad)
(bad)
jmp
daa
fs
sub
adc
jb
icebp
in
popf
pop
push
cdq
mov
or
ret
call
jo
cdq
pop
(bad)
sbb
pop
stc
xchg
inc
cwde
(bad)
jmp
or
cdq
imul
mov
lods
xchg
lds
cmps
cmps
sbb
mov
cld
shr
xlat
lods
enter
pop
popa
sbb
mov
(bad)
sbb
jle
xchg
mov
(bad)
(bad)
(bad)
inc
mov
or
pop
not
pop
add
or
push
and
push
(bad)
adc
push
adc
adc
dec
dec
adc
push
dec
xor
out
leave
sbb
mov
push
sub
and
push
and
(bad)
(bad)
call
mov
sahf
fsubr
mov
xchg
pop
sbb
lea
inc
sahf
into
arpl
sub
mov
jge
push
(bad)
jmp
clc
stos
mov
add
cmp
add
test
retf
mov
fist
ins
cld
lea
push
dec
sub
(bad)
(bad)
fisttp
add
fwait
mov
lahf
stos
in
sub
fcmovne
(bad)
jg
(bad)
sti
jmp
xor
sbb
jp
sub
dec
int3
cmp
jnp
jbe
mov
retf
adc
mov
adc
mov
fadd
inc
(bad)
mov
adc
jp
sub
mov
clc
dec
mov
out
(bad)
cmp
inc
outs
ins
cli
call
cli
lods
test
or
fst
sbb
inc
inc
les
sbb
retf
xor
(bad)
fistp
das
test
inc
rol
prefetcht2
(bad)
(bad)
mov
mov
popa
outs
(bad)
outs
push
ror
mov
add
mov
call
aaa
out
sub
push
in
jbe
sub
mov
push
jns
mov
movs
in
pop
jae
ret
mov
call
dec
inc
sahf
mov
ja
jmp
fdiv
push
push
test
xchg
lahf
pop
inc
cmp
test
cld
rol
test
push
jg
scas
mov
movs
js
mov
cmp
cmp
xor
sub
mov
mov
dec
sahf
movs
(bad)
(bad)
loopne
stc
sub
ja
sar
sub
push
imul
sub
lods
test
(bad)
(bad)
jmp
add
or
out
test
not
icebp
js
add
ins
call
in
xor
loopne
inc
or
jns
dec
mov
mov
cdq
ss
pop
add
mov
push
dec
pop
push
(bad)
xor
xchg
add
shl
jle
call
dec
dec
daa
jp
call
outs
or
loopne
or
sub
or
out
xor
imul
pop
pop
mov
or
call
push
push
jmp
push
(bad)
sub
jl
jmp
jb
stos
push
xchg
mov
dec
fdiv
in
test
lods
pop
pop
mov
out
int
imul
aam
xchg
cli
(bad)
(bad)
fbstp
idiv
inc
scas
fiadd
or
scas
test
call
in
leave
popaw
and
jns
and
mov
xchg
dec
inc
inc
or
or
sti
jb
(bad)
(bad)
jmp
jmp
dec
xor
xchg
push
pop
call
iret
jne
into
inc
and
fistp
dec
stos
and
scas
int3
jl
outs
int3
ins
and
(bad)
dec
push
mov
sub
sub
test
and
and
(bad)
mov
pop
push
shr
sbb
test
sbb
mov
dec
fisubr
ss
call
add
popa
dec
adc
jecxz
out
js
dec
push
(bad)
fstp
and
ret
test
or
jmp
or
call
cdq
scas
cli
push
dec
inc
inc
das
mov
(bad)
dec
push
stos
lds
push
rol
cld
clc
xor
jge
sub
pop
add
in
(bad)
(bad)
mov
movs
icebp
dec
scas
mov
scas
daa
ficom
arpl
sbb
mov
(bad)
cmp
xchg
imul
movs
scas
lds
cmp
pop
jmp
add
mov
jne
dec
xchg
jb
push
cld
iret
imul
adc
(bad)
dec
ss
bound
(bad)
pushf
sti
inc
retf
in
in
iret
sub
and
add
sbb
cmc
cdq
stos
mov
sub
das
sbb
jmp
pop
stos
cmp
xor
jnp
inc
(bad)
inc
push
sahf
imul
add
enter
jne
sub
mov
push
cld
lods
jb
mov
push
lds
or
and
and
cmp
mov
fs
aad
and
ins
(bad)
sub
pop
lods
(bad)
out
inc
or
add
xchg
cli
jg
jmp
xchg
in
ret
add
jmp
outs
add
xchg
mov
dec
inc
pop
in
push
sub
(bad)
(bad)
jg
outs
xor
adc
leave
and
cwde
xchg
sbb
cwde
dec
scas
dec
lods
push
ror
ja
inc
sbb
add
sbb
mov
lds
push
sub
lea
call
inc
pop
daa
and
sub
xchg
loop
popa
or
mov
cmp
mov
(bad)
(bad)
(bad)
(bad)
jp
cdq
and
cmp
into
push
xor
rcr
(bad)
out
or
xor
mov
and
jnp
jecxz
std
or
fwait
scas
sub
sbb
(bad)
(bad)
(bad)
(bad)
lock
dec
das
repnz
ret
(bad)
sar
cdq
stos
ins
(bad)
mov
cmp
and
ficomp
xor
cld
inc
repz
icebp
(bad)
(bad)
(bad)
jmp
pop
mov
jo
jecxz
daa
mov
fcom
test
pop
mov
adc
mov
aaa
push
(bad)
push
sbb
mov
push
xor
jo
jg
(bad)
dec
std
into
shl
sub
push
xlat
or
retf
xor
push
arpl
ud2
ins
jmp
test
pop
xor
inc
stos
imul
mov
mov
mov
mov
stc
test
xor
cdq
cmps
pop
out
fdivr
rol
call
mov
popa
mov
mov
sti
xor
lea
inc
clc
(bad)
(bad)
(bad)
fcmove
shr
jg
cmp
loop
sbb
dec
popa
mov
(bad)
(bad)
dec
xor
adc
push
out
mov
int3
push
sub
(bad)
(bad)
(bad)
jp
int3
inc
push
adc
out
add
arpl
shl
mov
loop
aaa
and
(bad)
(bad)
fnstsw
sub
mov
or
mov
test
mov
xchg
push
xor
bound
mov
mov
test
stc
sbb
call
pop
mov
mov
xor
inc
add
and
push
push
sub
ja
dec
cdq
ds
pusha
cmps
std
das
xchg
test
es
mov
mov
fimul
push
jp
(bad)
fimul
jns
std
mov
mov
jmp
add
push
adc
inc
mov
add
imul
clc
imul
mov
sub
jne
retf
lea
gs
dec
outs
sub
call
push
cmp
xchg
mov
dec
sbb
retf
cwde
fbld
mov
adc
call
std
call
mov
xchg
js
sub
dec
stos
fimul
mov
push
lock
jge
sub
mov
call
inc
clc
push
or
fsubr
in
xor
int
(bad)
or
lock
and
inc
sub
fidivr
adc
fsub
sub
sahf
(bad)
(bad)
call
leave
out
repnz
pop
(bad)
mul
xchg
mov
pop
cmps
(bad)
outs
xchg
add
pop
(bad)
ficomp
or
sub
mov
mov
sbb
cmps
je
jg
out
dec
retf
add
leave
push
cli
xchg
idiv
pop
sar
push
jmp
stos
int
(bad)
(bad)
(bad)
clc
test
pop
outs
(bad)
add
nop
loop
scas
jmp
or
jmp
sbb
in
das
add
(bad)
inc
cmps
into
outs
call
add
and
into
add
scas
ds
into
fld
xchg
mov
mov
pop
inc
sub
lahf
rcr
push
(bad)
adc
cs
sub
jg
(bad)
jbe
jp
mov
clc
mov
and
push
(bad)
sub
xchg
xchg
add
call
and
(bad)
(bad)
call
in
enter
stos
jp
jmp
push
repnz
inc
pop
mov
add
mul
mov
jg
test
fs
jns
pop
mov
mov
(bad)
(bad)
dec
imul
xchg
pop
out
les
mov
cmps
mov
fild
stc
xor
(bad)
(bad)
call
loope
test
push
push
adc
stos
mov
pop
xor
and
push
pop
(bad)
pop
adc
adc
sub
lods
lods
mov
adc
fcomip
out
(bad)
mov
jmp
jecxz
(bad)
(bad)
inc
pop
int3
test
aad
xchg
xor
ins
out
xor
lods
push
(bad)
dec
sub
stos
dec
syscall
xor
xor
jmp
mov
push
icebp
adc
fild
shr
sub
mov
fisub
(bad)
loop
or
sub
dec
or
mov
jecxz
mov
dec
or
ds
inc
fisubr
dec
mov
mov
mov
(bad)
cmps
scas
add
push
jae
(bad)
(bad)
dec
aaa
mov
cmps
and
jp
mov
sti
pop
(bad)
xor
scas
movs
jno
mov
out
ins
enter
int
and
sbb
jmp
mov
pop
sub
dec
and
jo
jg
mov
push
(bad)
call
sbb
ret
mov
jmp
mov
repnz
loop
mov
(bad)
jg
push
mov
mov
jle
xchg
cmp
je
mov
jo
mov
pop
ds
push
repnz
bound
inc
xchg
dec
imul
jmp
stos
xchg
stos
inc
test
sar
(bad)
call
cmp
sub
xchg
xchg
jmp
sub
jae
push
push
adc
cs
mov
test
fisub
jmp
repnz
cld
fild
push
popf
jg
inc
xchg
call
xchg
movs
js
mov
outs
ins
ret
cmp
scas
push
scas
imul
cmp
dec
mov
cmp
push
dec
movs
leave
in
jge
sub
(bad)
(bad)
(bad)
(bad)
mov
xor
stos
into
cmps
icebp
push
rol
or
seto
mov
sub
jp
(bad)
mov
(bad)
fmul
mov
retf
imul
test
sti
imul
loopne
(bad)
mov
and
gs
fdivrp
(bad)
(bad)
call
lods
iret
scas
pop
sub
dec
icebp
pusha
shl
mov
push
sub
aam
inc
jg
outs
fimul
or
jo
ror
push
sub
(bad)
(bad)
inc
xor
rcl
or
adc
sbb
imul
mov
or
mov
mov
adc
test
push
mov
mov
jne
outs
dec
inc
test
sub
cmp
jb
mov
cmps
icebp
jmp
(bad)
and
mov
inc
loope
in
(bad)
scas
sar
das
ret
(bad)
(bad)
jmp
mov
in
mov
add
iret
mov
xchg
dec
(bad)
call
mov
imul
sbb
lods
mov
imul
jo
mov
inc
and
clc
(bad)
(bad)
jmp
push
add
scas
cmp
sbb
mov
call
mov
pop
sbb
add
call
lea
call
xchg
sub
push
in
or
sbb
jb
mov
sub
mov
into
mov
(bad)
pop
mov
enter
cmc
sub
mov
aas
in
mov
scas
nop
test
sub
test
adc
(bad)
(bad)
(bad)
mov
mov
pop
jmp
pushf
sbb
push
xchg
movs
out
sub
and
stos
stos
jmp
repnz
pushf
retf
(bad)
stos
imul
rol
fdivr
std
cmp
or
push
mov
(bad)
(bad)
call
dec
test
mov
mov
mov
sbb
inc
sub
daa
jb
aaa
adc
call
inc
mov
xchg
bound
mov
(bad)
(bad)
push
(bad)
out
mov
lock
in
(bad)
cmp
pop
cmp
cmp
test
lahf
mov
lods
jp
lods
test
sti
ins
lods
xchg
lock
gs
cmps
jb
mov
pop
jp
(bad)
cmp
sub
pop
xchg
cmc
(bad)
cli
mov
and
sbb
(bad)
mov
sar
sbb
in
call
sahf
mov
das
sar
sub
mov
stos
fwait
rcr
outs
test
imul
mov
fdivr
pop
or
pop
or
jmp
sbb
in
or
mov
mov
dec
fstp
mov
retf
xchg
mov
ins
data16
cli
and
mov
ret
jmp
add
inc
adc
fcmove
in
icebp
pop
or
fwait
mov
adc
das
mov
(bad)
mov
mov
ins
movs
std
(bad)
(bad)
(bad)
mov
xchg
cmps
adc
mov
lea
dec
cdq
mov
dec
outs
lods
cmp
(bad)
jmp
push
and
ins
mov
je
mov
ins
sub
retf
in
into
jb
pop
dec
clc
inc
shl
inc
movs
xchg
xchg
out
ret
mov
(bad)
imul
pop
xor
adc
(bad)
jg
jmp
xor
push
push
cli
or
xchg
sbb
mov
lds
or
xchg
cmps
pop
int3
int3
push
aam
pop
ins
retf
pop
rol
fbld
cli
mov
idiv
xchg
ds
add
lahf
mov
pop
fdivr
pop
xor
stos
cld
mov
clc
pop
mov
dec
call
cmps
mov
push
ret
cmp
(bad)
inc
fsubp
pop
lods
ror
sbb
scas
jne
mov
mov
mov
jmp
into
sub
(bad)
in
mov
fimul
jns
sbb
cld
shr
dec
(bad)
(bad)
inc
bound
daa
dec
jle
fwait
mov
xor
sub
ds
sub
retf
dec
dec
in
sub
stos
and
xchg
or
(bad)
inc
sbb
dec
outs
iret
mov
mov
(bad)
(bad)
dec
retf
loop
loopne
rcr
imul
mov
mov
imul
add
(bad)
inc
cmps
test
unpckhps
(bad)
mov
int3
adc
ret
mov
jmp
cld
mov
movs
ds
xor
call
mov
in
dec
sub
dec
test
loope
call
xor
(bad)
(bad)
(bad)
dec
inc
mov
mov
mov
cli
loope
push
mov
mov
and
add
std
and
(bad)
out
mov
pusha
call
in
repnz
(bad)
(bad)
(bad)
jmp
dec
mov
sar
fisub
sbb
loop
out
sar
(bad)
(bad)
(bad)
mov
sbb
cmp
dec
add
sbb
scas
xchg
xor
xrelease
gs
or
retf
cli
jmp
(bad)
js
jge
out
cli
and
inc
iret
imul
mul
fmulp
xchg
(bad)
sub
outs
push
sub
pop
call
outs
cmp
mov
mov
div
push
pusha
mov
inc
dec
push
jg
das
sbb
mov
out
add
(bad)
push
sub
adc
mov
ins
mov
fistp
mov
sub
mov
(bad)
(bad)
inc
hlt
adc
jns
stc
bound
or
jg
sti
push
mov
jmp
pop
inc
leave
mov
push
lock
call
add
pushf
inc
je
mov
jne
dec
call
mov
ret
mov
lods
mov
(bad)
in
pop
retf
inc
scas
sub
data16
jmp
shl
lea
push
inc
adc
(bad)
mov
jecxz
and
cdq
pop
hlt
push
cwde
sahf
fwait
inc
cli
pop
dec
loope
scas
cmp
ja
mov
and
push
stos
sahf
cmps
inc
jg
in
mov
pusha
jo
sbb
(bad)
(bad)
jmp
xchg
movs
cs
cmp
jg
jns
mov
pop
sbb
popf
cmp
test
sbb
hlt
(bad)
(bad)
call
dec
imul
aaa
add
pop
stc
iret
(bad)
leave
sbb
sbb
or
call
in
imul
pop
sbb
leave
lock
jg
inc
xor
sub
jbe
loopne
lahf
pop
xchg
out
inc
retf
(bad)
call
ins
lock
and
cmp
in
aam
and
out
mov
mov
outs
pusha
fwait
mov
(bad)
(bad)
(bad)
call
ret
sbb
fidiv
mov
mov
out
mov
xor
arpl
(bad)
(bad)
in
push
and
sbb
cmp
sbb
xchg
cs
inc
out
fbstp
sbb
jmp
push
pop
xchg
mov
mov
sbb
sar
sbb
movs
xchg
rcl
inc
call
xor
xor
or
sar
retf
pop
scas
js
popf
jle
ror
push
inc
outs
adc
push
aad
aam
inc
pop
sub
(bad)
push
or
(bad)
(bad)
jg
pop
daa
ja
popf
mov
adc
lahf
or
pop
jbe
pop
push
dec
or
cmps
push
cmc
(bad)
(bad)
call
jno
nop
retf
retf
push
fcomp
ss
mov
jo
jp
test
jp
std
inc
pusha
xor
or
cmps
push
dec
sub
dec
push
fwait
adc
dec
int
mov
call
pop
pop
cmp
adc
sub
sub
xchg
(bad)
mov
push
ss
mov
jo
ins
pop
outs
jmp
mov
add
lahf
jns
add
push
push
push
jmp
inc
jl
out
dec
ficomp
ins
jp
cmp
mov
mov
imul
cmp
call
call
dec
mov
and
mov
(bad)
jmp
fwait
sbb
sbb
(bad)
jno
cmp
pop
rcl
imul
and
sbb
push
xor
sbb
and
in
nop
(bad)
jmp
and
retf
sub
pop
leave
push
mov
lock
and
fistp
mov
and
loopne
mov
push
push
(bad)
(bad)
(bad)
inc
adc
dec
in
test
xchg
fs
push
das
mov
movs
cmp
and
jno
dec
(bad)
test
jmp
std
stos
rcl
rcl
pop
inc
jmp
pop
cli
call
xchg
or
retf
fwait
popa
(bad)
aam
(bad)
(bad)
js
adc
inc
pop
mov
sbb
add
pop
and
addr16
mov
push
mov
in
mov
daa
cs
jmp
movs
mov
dec
inc
adc
jmp
loopne
cli
cs
add
fimul
or
call
sbb
pop
lahf
test
mov
lahf
pop
call
add
js
cmp
jno
call
(bad)
push
xor
cmp
push
xor
gs
fcomip
lock
mov
loop
es
sti
mov
(bad)
mov
aam
lock
clc
(bad)
call
inc
popf
(bad)
dec
stc
(bad)
mov
jmp
xlat
loopne
sub
add
jae
aaa
scas
in
pusha
outs
movs
inc
pop
ins
ror
int3
out
xor
cld
xchg
movs
inc
inc
cli
jmp
retf
xchg
ds
push
call
loopne
xor
inc
xchg
and
xor
xor
adc
dec
loop
(bad)
(bad)
call
aam
out
repz
sbb
add
sbb
and
(bad)
(bad)
call
hlt
mov
inc
jno
add
cmp
add
push
jmp
(bad)
xor
jp
sbb
ins
dec
cmp
cli
outs
mov
and
mov
scas
xor
jno
out
pop
pop
shl
lods
fisttp
add
nop
mov
addr16
jb
mov
mov
push
fcomip
(bad)
(bad)
ds
loope
scas
iret
pop
aaa
daa
rol
loopne
aaa
loop
cmp
mov
(bad)
(bad)
stc
and
jmp
add
retf
xlat
scas
(bad)
(bad)
(bad)
(bad)
inc
xchg
adc
jle
cwde
popa
(bad)
pmaxub
scas
cwde
cdq
out
sub
enter
pop
dec
je
into
jmp
(bad)
cli
aaa
fstp
mov
cli
sub
xor
mov
sbb
sbb
call
pop
data16
(bad)
(bad)
jmp
sbb
push
cmps
jbe
ins
mov
in
xor
push
inc
sub
aam
(bad)
call
push
cmp
sub
xor
mov
sub
push
jge
(bad)
call
push
aam
push
or
xchg
sub
fsubp
jg
push
(bad)
hlt
jae
enter
push
fdiv
sti
mov
mov
jmp
jbe
adc
cmps
mov
sub
jecxz
mov
inc
mov
jns
div
int3
stos
add
jmp
shr
stos
fcmovb
sbb
jmp
mov
jle
lahf
dec
and
jecxz
mov
dec
movs
sar
(bad)
jmp
loop
jp
ficomp
add
mov
xchg
gs
mov
pop
test
cli
mov
jae
pop
jo
movs
push
hlt
xchg
out
jp
mov
or
mov
mov
push
in
adc
mov
push
push
cmp
in
and
fwait
or
loop
adc
(bad)
(bad)
dec
fstp
push
add
clc
xor
nop
out
fsubr
pusha
jmp
jmp
mov
mov
(bad)
(bad)
push
add
push
imul
mov
in
cli
imul
mov
xor
dec
jmp
mov
pop
jmp
dec
stos
(bad)
call
clc
jb
sti
data16
pop
and
rcl
or
(bad)
adc
pop
je
sbb
aam
(bad)
jmp
clc
(bad)
fs
test
loope
dec
push
jmp
cmps
xchg
repnz
jnp
(bad)
mov
push
ret
aam
xor
cmp
sbb
adc
sbb
sbb
(bad)
call
push
jmp
call
sbb
xor
out
adc
aaa
cmps
out
outs
or
mov
and
dec
loop
add
fnstcw
clc
push
test
xor
loope
fs
std
lods
(bad)
dec
push
mov
jno
dec
mov
ja
shl
call
fsub
scas
(bad)
or
(bad)
mov
xchg
arpl
test
mov
jmp
inc
pop
mov
jb
mov
(bad)
inc
mov
jae
sbb
inc
lods
jae
cli
xor
(bad)
dec
retf
push
xchg
(bad)
fimul
sti
mov
idiv
in
dec
in
push
adc
xlat
sbb
popa
xlat
mov
fwait
cmps
dec
(bad)
xor
outs
or
scas
(bad)
(bad)
(bad)
fcmovne
mov
push
mov
jno
mov
xchg
aam
fiadd
jo
les
(bad)
(bad)
mov
cli
add
add
jle
pop
or
outs
aad
adc
ja
jl
sub
(bad)
(bad)
inc
pop
inc
mov
mov
loope
fld
scas
mov
pop
adc
pop
mov
(bad)
(bad)
(bad)
jmp
dec
xchg
std
jge
stos
cwde
dec
in
mov
adc
dec
ret
neg
xchg
test
(bad)
fcomip
jle
aad
data16
xchg
inc
add
xchg
jbe
xor
(bad)
(bad)
jmp
push
dec
test
scas
popa
rcl
movs
mov
adc
sub
call
inc
dec
sub
jl
mov
cdq
mov
icebp
sub
mov
push
jg
push
xor
mov
cmps
mov
call
popa
jne
out
xchg
sub
loopne
jmp
je
clc
dec
stos
enter
ret
aad
call
or
sbb
and
jle
xchg
iret
inc
js
sub
cmp
test
inc
dec
jecxz
add
test
repz
push
cli
mov
adc
inc
shl
(bad)
(bad)
jg
dec
adc
push
mov
pop
(bad)
cmc
or
jp
lock
inc
sub
ret
call
(bad)
frstor
fisubr
(bad)
xor
fucomip
in
in
xor
(bad)
(bad)
dec
inc
push
inc
clc
and
pop
(bad)
mov
call
loopne
sub
(bad)
(bad)
call
lock
mov
sbb
mov
and
div
push
sar
(bad)
(bad)
jmp
pushf
into
or
in
and
pop
adc
mov
lock
call
(bad)
mov
outs
sti
mov
mov
fimul
mov
call
jns
call
xchg
mov
dec
sahf
push
xlat
inc
mov
call
int3
xchg
mov
cmps
iret
xchg
push
aad
jg
int3
sbb
mov
cli
pop
loopne
fisttp
les
pop
mov
je
rcr
aad
stos
(bad)
mov
int3
xchg
js
ins
retf
(bad)
jb
and
dec
push
(bad)
mov
sub
push
or
pop
pop
jg
es
dec
mov
mov
push
(bad)
xor
mov
call
xchg
xchg
ds
pop
ins
or
sub
push
outs
pop
gs
push
cmp
dec
sub
or
shl
dec
push
nop
(bad)
mov
retf
mov
pop
pop
ret
dec
fs
mov
jg
ins
sbb
scas
inc
jmp
lock
(bad)
(bad)
dec
std
call
std
fist
adc
imul
and
mov
(bad)
lock
cli
les
stc
mov
and
test
test
sub
js
aaa
adc
xchg
rcl
gs
movs
push
loop
xchg
push
inc
cmp
(bad)
(bad)
inc
mov
jmp
jp
movs
lods
shl
mov
call
(bad)
(bad)
call
mov
retf
xor
and
dec
jle
pop
test
mov
aad
bnd
mov
(bad)
(bad)
push
sub
es
jmp
dec
cdq
xchg
jne
mov
imul
push
pop
add
fadd
sub
add
stos
fcmovnb
xchg
push
ds
push
ss
mov
mov
or
out
mov
mov
xor
add
fsub
pop
pop
sbb
inc
and
dec
bound
ins
lods
mov
mov
lahf
test
daa
xlat
cdq
(bad)
(bad)
(bad)
dec
push
adc
daa
cmp
and
call
xor
xor
mov
leave
xor
jle
cwde
cli
pop
cwde
std
or
shr
cld
test
mov
repnz
xchg
jns
jge
test
fsubr
mov
jno
(bad)
mov
mov
imul
push
(bad)
sbb
fisttp
in
(bad)
fcomip
(bad)
fdivr
outs
push
cmp
sub
test
ror
lock
and
das
pusha
add
call
sbb
inc
xchg
push
add
loop
(bad)
(bad)
(bad)
aas
mov
je
jecxz
out
lea
test
es
dec
rcl
and
cld
add
out
xchg
imul
les
(bad)
(bad)
(bad)
jmp
aaa
(bad)
mov
lods
mov
mov
dec
add
xchg
add
and
sub
(bad)
(bad)
fdiv
add
dec
sar
mov
and
jmp
xchg
sbb
pop
cmps
es
(bad)
ins
pop
out
xchg
mov
loopne
or
sub
enter
fs
push
call
sbb
rcl
std
dec
int3
dec
std
ror
dec
outs
repnz
jmp
jmp
ret
test
sub
cmps
sub
into
out
xor
jg
push
xchg
mov
std
in
scas
jb
jmp
xchg
mov
add
std
call
fsubr
pop
scas
out
fisttp
(bad)
jmp
daa
push
pop
push
fmul
pop
ins
pop
(bad)
xor
mov
sahf
js
mov
push
(bad)
(bad)
(bad)
(bad)
cmp
cmp
imul
adc
std
scas
mov
hlt
mov
stos
sub
adc
cli
rcr
xchg
jp
out
and
das
push
(bad)
jmp
sub
scas
sbb
ja
xchg
sbb
es
ret
into
imul
inc
add
push
call
and
movs
jmp
test
mov
ret
repz
pop
pop
jl
call
mov
inc
fwait
mov
sbb
cs
mov
push
cwde
xchg
push
xor
dec
lock
mov
sti
fsub
dec
(bad)
and
adc
(bad)
(bad)
(bad)
push
daa
les
out
jmp
add
mov
dec
mov
lods
fwait
scas
movs
std
or
cli
(bad)
call
or
sub
lea
retf
(bad)
into
cs
or
push
inc
sub
ret
mov
mov
sub
scas
jnp
sub
out
sub
jmp
xor
adc
cmp
mov
lods
cli
cmp
out
loope
movs
mov
(bad)
(bad)
inc
hlt
sbb
jmp
mov
jmp
std
(bad)
mov
loop
cmp
and
jmp
retf
rcr
rdtsc
sub
(bad)
(bad)
dec
and
cs
loope
loope
sub
int
rcr
mov
jb
ins
push
xor
(bad)
push
fdivr
adc
cli
je
cmp
sbb
mov
xchg
push
xchg
xchg
retf
push
or
dec
lock
loop
inc
cld
jns
(bad)
(bad)
jmp
inc
sbb
cmc
mov
sub
enter
adc
shr
stc
mov
jmp
cli
push
pusha
lahf
push
pop
inc
aad
test
shl
(bad)
int
pop
daa
clc
mov
ins
loope
mov
jmp
mov
out
add
out
cdq
lods
mov
repz
sbb
lock
sub
jmp
repz
into
rcl
push
out
push
mov
outs
ss
dec
cmp
in
mov
stos
fs
mov
(bad)
inc
cmp
stos
cli
fist
lahf
add
retf
xchg
fwait
(bad)
clc
mov
pop
dec
fisttp
inc
jb
push
sbb
(bad)
xchg
nop
pop
test
mov
out
pop
dec
cmc
call
into
jbe
jmp
mov
dec
mov
add
loope
ins
clc
add
cli
mov
push
mov
push
test
les
lods
hlt
ret
mov
out
adc
scas
out
adc
inc
or
test
ret
je
or
mov
hlt
dec
stos
inc
or
stos
(bad)
jg
or
ins
cli
xchg
or
mov
out
(bad)
(bad)
(bad)
call
sbb
scas
fistp
out
dec
sar
jno
sub
fld
ss
call
ja
xchg
mov
dec
call
cli
add
dec
mov
ds
mov
jge
cmp
call
mov
sub
pop
and
iret
adc
mov
and
shr
es
jmp
cli
movs
cmps
sbb
lock
scas
fs
(bad)
jno
stos
popf
jbe
or
clc
imul
inc
xor
(bad)
ja
movs
mov
(bad)
(bad)
fbstp
daa
test
(bad)
xor
mov
pop
jo
ins
lods
je
sub
dec
lods
clc
(bad)
and
data16
cwde
mov
push
jbe
(bad)
fnstsw
adc
inc
mov
cs
cmp
xor
(bad)
(bad)
jmp
cmp
shl
iret
fadd
and
ins
jmp
mov
and
xchg
sub
aad
mov
xchg
and
cmps
out
icebp
mov
cmp
adc
call
ret
push
(bad)
(bad)
(bad)
in
adc
cmp
retf
dec
cld
mov
imul
xlat
mov
stos
aas
jmp
call
aad
(bad)
jmp
pop
pop
mov
in
shr
cmp
sub
or
(bad)
call
jecxz
xor
and
sub
mov
retf
jnp
and
adc
(bad)
(bad)
jmp
call
dec
pop
test
ins
sahf
xchg
xor
cmp
out
sub
dec
mov
sbb
jmp
in
(bad)
scas
fild
lock
repnz
xchg
test
(bad)
jmp
sub
mov
mov
jmp
sub
in
pushf
xlat
mov
jne
ss
xchg
inc
ins
call
(bad)
jg
pushf
and
sbb
cmp
in
nop
jb
ins
scas
sub
std
stos
mov
inc
mov
mov
in
dec
xchg
cli
dec
jo
dec
in
arpl
cmp
nop
adc
jmp
iret
pop
and
(bad)
adc
push
jmp
sub
add
mov
call
(bad)
or
or
rcr
addr16
(bad)
(bad)
call
jbe
in
ins
rcr
sub
data16
aad
sub
or
fwait
cmp
dec
sbb
fcomip
jmp
jo
inc
and
jge
mov
ins
lahf
and
jg
add
addr16
retf
iret
xchg
adc
stos
shr
call
mov
loope
(bad)
jg
stos
movs
dec
dec
dec
(bad)
iret
mov
int
idiv
jge
pop
and
imul
fwait
add
repz
test
or
(bad)
(bad)
jmp
xor
and
ficomp
lahf
in
jo
loop
enter
or
mov
(bad)
(bad)
push
ins
mov
mov
xor
scas
fwait
(bad)
pop
cs
jmp
(bad)
(bad)
jmp
faddp
repnz
clc
jno
call
arpl
mov
cmp
retf
cmc
jmp
xlat
sbb
hlt
int3
push
ret
dec
clc
lahf
sub
add
push
xchg
(bad)
call
adc
cmp
sbb
fild
(bad)
push
push
iret
mov
adc
mov
loop
in
lods
mov
(bad)
jmp
stos
dec
jle
fidivr
inc
test
fs
int3
out
in
mov
(bad)
shr
(bad)
(bad)
(bad)
(bad)
call
movs
sar
cmp
dec
(bad)
not
push
retf
mov
lods
outs
mov
or
add
(bad)
(bad)
(bad)
fisubr
fild
sub
call
icebp
jne
sbb
clc
sbb
add
(bad)
inc
jno
cmp
mov
fcomp
(bad)
pop
sbb
pop
jmp
cmps
or
aas
push
sbb
add
sub
jnp
outs
ins
cmps
dec
call
outs
inc
or
ds
sub
int3
mov
mov
movs
out
(bad)
jmp
addr16
loopne
pop
mov
inc
mov
push
fdiv
cmc
mov
mov
pop
push
xor
(bad)
inc
shr
sahf
sub
inc
ins
rcr
jmp
xchg
xor
xchg
mov
lahf
test
pop
cmp
ins
movs
cmc
ja
pop
lock
xchg
ins
cmp
or
loopne
push
and
push
sbb
std
or
retf
icebp
jg
jmp
cld
loopne
fnstsw
(bad)
mov
push
cmps
pop
adc
(bad)
(bad)
fistp
call
sbb
(bad)
jmp
mov
xor
cmps
sbb
(bad)
(bad)
call
jge
mov
inc
(bad)
scas
dec
adc
shl
sbb
idiv
retf
ret
and
(bad)
call
dec
mov
mov
sbb
mov
sub
in
add
mov
pop
mov
jmp
fmul
mov
push
daa
or
out
int
cmps
(bad)
call
jmp
cld
arpl
sub
pop
inc
stos
std
outs
sub
jmp
jmp
dec
inc
or
test
sbb
adc
ficom
int3
dec
(bad)
(bad)
(bad)
(bad)
mov
outs
mov
stos
ficomp
retf
sbb
pop
mov
adc
ret
call
daa
inc
iret
adc
movs
jg
sub
jmp
mov
in
fsubr
ret
shl
dec
mov
or
add
or
scas
scas
(bad)
(bad)
(bad)
jg
mov
push
fadd
aaa
pop
bound
dec
pop
push
call
inc
stos
cmp
inc
and
mov
in
movs
movs
js
stos
or
cmc
adc
scas
movs
push
or
cs
jg
jo
xor
dec
xor
lds
hlt
add
and
and
je
xchg
(bad)
mov
leave
in
int3
stos
stos
ins
ds
jbe
xchg
mov
jp
jg
mov
mov
sbb
mov
loop
popa
retf
fcmovbe
jl
test
add
xchg
scas
clc
(bad)
fild
push
out
mov
cli
mov
adc
pop
mov
ja
(bad)
(bad)
dec
or
shr
mov
shl
out
pop
xor
(bad)
std
push
sbb
mov
dec
movs
gs
jle
jmp
(bad)
(bad)
inc
xchg
push
sub
xchg
xor
inc
sub
xor
pop
mov
dec
call
clc
popf
or
sub
pop
push
rol
sub
cmp
mov
mov
sbb
(bad)
fisttp
xchg
push
stos
cli
mov
push
mov
xchg
sahf
jp
rcl
sub
retf
push
inc
push
mov
outs
enter
push
cdq
(bad)
push
push
add
(bad)
movs
or
sub
jo
push
adc
inc
test
inc
mov
std
test
mov
mov
retf
dec
dec
lds
cmp
ss
(bad)
call
mov
movs
sub
repz
mov
mov
lods
mov
jns
mov
dec
(bad)
(bad)
jmp
mov
imul
sbb
dec
loop
push
imul
mov
js
or
mov
fs
(bad)
(bad)
jmp
sub
outs
retf
call
pusha
retf
push
and
(bad)
(bad)
(bad)
(bad)
in
pop
test
cmps
push
out
outs
sbb
cld
fs
ins
cmp
sub
mov
mov
sbb
aaa
or
mov
xor
out
mov
mov
mov
(bad)
mov
gs
stos
xchg
jmp
add
nop
outs
jne
retf
(bad)
call
call
mov
mov
adc
fdiv
jmp
mov
lods
adc
mov
pop
cmps
cmps
in
(bad)
cmps
inc
sbb
rcr
jmp
iret
jge
frstor
cmps
cwde
cli
pop
ret
inc
jb
jmp
loop
pusha
call
(bad)
(bad)
(bad)
out
into
rol
jnp
pop
pop
les
and
add
cmps
or
(bad)
(bad)
(bad)
push
int3
jl
ret
retf
rcl
cmps
out
das
pop
xchg
jnp
sub
std
dec
add
mov
mov
ins
dec
in
call
jmp
movs
cmp
cmp
xchg
(bad)
(bad)
(bad)
(bad)
mov
(bad)
shl
ficomp
pop
les
pusha
stc
and
out
pop
pusha
jmp
cmp
(bad)
(bad)
call
and
lea
and
in
enter
in
xchg
and
push
mov
mov
add
(bad)
inc
mov
fcmovne
or
cs
ret
push
outs
(bad)
mov
int
(bad)
jg
(bad)
mov
test
push
xchg
pop
add
in
sub
mov
(bad)
dec
push
dec
aas
sub
outs
daa
cli
daa
or
cmp
(bad)
(bad)
jg
inc
xor
cmp
(bad)
in
xor
das
pop
jns
iret
iret
(bad)
(bad)
(bad)
(bad)
mov
into
mov
scas
ret
call
mov
mov
stos
das
sar
call
jns
lock
les
addr16
push
inc
mov
stos
ins
std
nop
bound
xchg
push
or
mov
push
mov
or
cmp
pop
mov
(bad)
(bad)
jg
adc
scas
loopne
pop
retf
dec
xchg
stos
mov
push
bnd
xchg
js
add
(bad)
fldcw
mov
test
dec
ret
sbb
mov
icebp
and
test
mov
jmp
pusha
sub
call
retf
imul
fild
ins
or
loop
ins
push
and
(bad)
(bad)
jmp
dec
fisubr
cvttps2pi
dec
test
adc
pop
(bad)
(bad)
xor
cld
mov
(bad)
sahf
(bad)
(bad)
(bad)
(bad)
js
stos
cwde
cli
fs
rep
das
repnz
stos
shl
aas
cmc
mov
hlt
enter
scas
inc
mov
(bad)
mov
push
adc
loop
push
mov
mov
mov
cdq
lds
outs
gs
mov
jb
adc
inc
or
mov
adc
(bad)
std
daa
(bad)
(bad)
(bad)
dec
outs
xor
inc
gs
push
sub
outs
scas
pusha
icebp
mov
ret
mov
adc
lods
mov
leave
clc
jb
fstp
aam
stos
rol
sub
cmps
mov
mov
pop
jb
jno
imul
inc
jmp
add
sbb
imul
shr
sbb
(bad)
jmp
les
pop
add
dec
push
mov
or
mov
stc
das
test
(bad)
(bad)
dec
adc
inc
bound
stos
scas
into
cmc
jb
mov
mov
sti
cmp
mov
(bad)
jmp
sub
fwait
das
cli
leave
dec
arpl
jmp
shl
fs
mov
scas
das
cmp
mov
xor
mov
add
sti
test
cmps
(bad)
dec
push
sub
data16
mov
or
jmp
inc
out
adc
test
call
jg
cmc
inc
mov
mov
push
fwait
dec
or
pop
jmp
(bad)
jmp
mov
repnz
dec
ins
mov
ins
inc
cmp
bound
dec
adc
or
or
mov
xlat
mov
into
scas
cmp
push
jg
or
xor
inc
and
les
or
jo
into
retf
jp
mov
sub
(bad)
mov
and
mov
scas
fiadd
xor
loop
cmps
jp
test
std
sub
retf
into
or
xchg
jl
lea
mov
(bad)
call
es
add
dec
xchg
pop
pop
or
popa
dec
push
mov
mov
mov
mov
sub
xor
mov
mov
mov
(bad)
push
pop
dec
stos
mov
cld
pop
pop
outs
mov
jecxz
mov
sub
pop
jecxz
mov
(bad)
(bad)
(bad)
(bad)
fldcw
sub
outs
sahf
test
ins
jge
popf
and
mov
inc
or
sub
(bad)
(bad)
call
(bad)
mov
mov
lea
sahf
out
repnz
mov
pop
add
xor
nop
lods
fsub
pop
cli
ds
cmp
inc
aam
push
and
outs
adc
cmp
retf
into
and
xchg
inc
(bad)
(bad)
(bad)
push
sub
aam
fcomp
xchg
adc
mov
into
jg
sub
(bad)
mov
(bad)
dec
in
idiv
dec
into
fs
inc
in
dec
repnz
rcl
(bad)
clc
lods
fprem
or
in
inc
add
and
std
jns
call
(bad)
jg
mov
or
les
pop
jae
pop
(bad)
ins
jl
lods
stos
adc
fidiv
out
call
add
repz
inc
dec
inc
scas
pop
xlat
fs
push
mov
(bad)
(bad)
(bad)
jmp
int
ds
adc
ficom
dec
dec
shr
lock
(bad)
dec
call
dec
call
jns
push
repz
(bad)
(bad)
(bad)
call
out
inc
xor
sub
aas
adc
in
ins
hlt
and
fwait
shl
adc
or
adc
lods
mov
(bad)
mov
aad
xor
(bad)
jmp
sar
lods
movs
mov
dec
fistp
mov
call
ss
(bad)
(bad)
(bad)
(bad)
fisttp
mov
sub
call
add
(bad)
mov
or
jecxz
xor
cld
pop
pop
xor
mov
mov
mov
jmp
dec
(bad)
call
mov
sub
sbb
test
(bad)
sub
inc
cld
mov
cmp
(bad)
jmp
test
das
mov
xchg
cmp
test
mov
test
enter
pop
clc
jg
(bad)
loopne
jae
xchg
push
add
adc
fiadd
add
(bad)
(bad)
jmp
sbb
or
lahf
dec
mov
add
test
scas
clc
jmp
mov
xchg
mov
fdiv
jmp
jmp
call
xchg
pop
jp
cli
pop
leave
pop
pop
dec
mov
lods
(bad)
xchg
bound
sub
push
push
cld
mov
push
jmp
jmp
(bad)
fild
mov
or
jle
inc
sub
cld
cli
xor
pushf
aas
mov
call
and
ret
pop
std
scas
addr16
cdq
xchg
xchg
sub
hlt
lea
test
mov
stos
ret
imul
cmps
add
stos
movs
pop
dec
xor
jmp
mov
jmp
imul
dec
scas
cdq
mov
pop
out
aaa
cld
dec
xchg
adc
gs
xor
push
cli
sub
mov
fnstsw
mov
repz
xchg
xor
and
pop
push
ret
inc
cmps
jo
pop
and
(bad)
(bad)
(bad)
jmp
mov
cmps
jo
jecxz
scas
sti
inc
fstp
xlat
cmps
or
fstp
or
cmps
jmp
(bad)
sub
sbb
cmp
scas
jmp
scas
sub
(bad)
(bad)
cmp
fwait
mov
xor
loop
xchg
out
xchg
mov
call
fsub
gs
mov
push
movs
sub
(bad)
(bad)
(bad)
call
stos
pop
mov
mov
jne
mov
(bad)
loop
pusha
jmp
jle
inc
jg
dec
std
sub
scas
cmp
fld
es
(bad)
ficomp
sub
mov
sar
mov
dec
les
sbb
push
mov
jg
(bad)
jg
xor
adc
adc
dec
cmp
js
not
xor
stos
sub
(bad)
(bad)
push
out
inc
stos
and
cmp
popf
add
xor
adc
(bad)
xor
cmps
das
cmp
sbb
ins
sub
push
dec
popa
push
jno
addr16
mov
pop
add
mov
(bad)
(bad)
jg
fisub
aam
xchg
and
ret
fnstcw
adc
(bad)
jp
cmp
into
retf
cmp
add
jmp
push
out
mov
pop
dec
inc
mov
xchg
push
push
adc
cdq
sub
scas
adc
stc
(bad)
(bad)
call
in
movs
mov
xor
add
cmc
test
cmp
call
test
sbb
lods
ror
mov
dec
cld
ins
pop
inc
dec
jge
adc
scas
push
dec
mov
(bad)
(bad)
push
mov
jb
push
arpl
clc
cmp
stos
sti
js
ss
test
inc
add
mov
jmp
pop
xchg
(bad)
loop
inc
pop
arpl
stos
inc
sub
sub
sub
lock
inc
stos
repnz
pop
fwait
lods
cli
retf
or
stos
lock
(bad)
(bad)
inc
cmps
jmp
and
repz
test
test
xor
arpl
add
pop
and
fadd
sub
stos
nop
call
stos
or
sbb
mov
arpl
fs
pmaxsw
call
lock
xor
fdivr
(bad)
pop
(bad)
pop
(bad)
(bad)
(bad)
(bad)
ds
pusha
xor
les
(bad)
pop
add
mov
lods
ins
xchg
or
(bad)
call
mov
movs
(bad)
jg
jmp
fstp
push
dec
jp
mov
test
mov
mov
gs
(bad)
(bad)
(bad)
(bad)
push
dec
cmove
call
or
imul
xchg
movs
dec
in
lock
adc
jmp
loopne
je
sub
ret
mov
cmp
out
or
push
leave
mov
iret
int3
sbb
xlat
movs
mov
mov
(bad)
fidivr
stos
cmp
fucomi
adc
popf
and
push
idiv
(bad)
(bad)
cmp
jmp
icebp
test
jb
sbb
sbb
out
call
push
jnp
push
out
push
adc
push
adc
cmp
add
adc
loope
ins
xchg
cmp
dec
cdq
jle
lock
imul
(bad)
mov
or
xor
movs
pop
cld
(bad)
jmp
in
dec
shl
inc
adc
xor
(bad)
jmp
inc
push
mov
ret
mov
lods
aaa
dec
sbb
in
(bad)
(bad)
(bad)
jmp
push
adc
add
scas
dec
fidiv
xor
push
mov
jbe
mov
cmp
loop
mov
arpl
in
mov
sub
(bad)
(bad)
jmp
lods
mov
test
mov
push
cwde
xchg
xchg
retf
mov
movs
mov
icebp
add
dec
or
mov
xchg
or
dec
wrmsr
fwait
stos
fld
lock
int
adc
sbb
ret
(bad)
call
(bad)
add
cdq
stc
out
stc
mov
mov
xor
mov
jecxz
imul
pop
(bad)
push
inc
int3
loope
mov
(bad)
cmp
cmps
mov
stos
mov
dec
es
lds
cmc
fimul
jecxz
shr
in
ret
mov
or
and
sahf
push
jmp
add
mov
push
mov
(bad)
(bad)
(bad)
jmp
in
jmp
out
stos
dec
retf
repnz
mov
loop
mov
jg
push
call
loopne
ds
mov
push
sbb
scas
cmps
icebp
dec
sbb
mov
jecxz
dec
jmp
adc
test
jnp
jle
mov
(bad)
(bad)
(bad)
(bad)
jmp
into
xchg
clc
mov
sbb
mul
fstp
inc
mov
test
sahf
adc
cs
lea
cwde
mov
inc
pushf
loope
cmp
(bad)
(bad)
(bad)
in
out
iret
(bad)
shl
mov
push
or
stos
in
outs
cdq
stos
movs
mov
xchg
fwait
jmp
mov
call
pop
fild
push
scas
or
cli
sub
push
retf
dec
push
sbb
outs
dec
sahf
aaa
in
ss
inc
or
call
mov
stc
in
(bad)
out
stos
ss
jmp
lds
xchg
out
mov
cmps
lahf
scas
mov
jmp
jb
sbb
sbb
xchg
call
mov
inc
xchg
cmp
mov
mov
aam
dec
jnp
push
and
imul
ret
dec
repnz
pop
fs
pop
loopne
mov
mov
ins
ins
out
jae
shl
pop
add
ins
pop
adc
mov
jg
pop
jmp
inc
nop
dec
pop
dec
sar
cmp
std
jmp
mov
adc
dec
mov
pushf
cmps
imul
call
(bad)
jg
mov
push
sbb
xor
cmc
adc
cmp
sbb
cmp
dec
(bad)
(bad)
(bad)
(bad)
in
or
sub
lahf
leave
xor
pop
pop
mov
stc
pop
jb
ficom
or
(bad)
(bad)
sti
dec
pop
call
fadd
call
mov
mov
fbld
(bad)
mov
mov
test
jmp
gs
mov
mov
mov
nop
mov
test
mov
dec
shr
push
dec
aam
fisubr
jg
sub
sbb
test
mov
sub
and
push
pop
dec
or
aaa
mov
adc
and
cld
bts
sub
or
mov
cwde
dec
jp
adc
or
push
(bad)
(bad)
(bad)
call
mov
fwait
sbb
mov
push
lds
mov
mov
fwait
jmp
daa
mov
jmp
or
sub
cdq
jge
jg
std
push
es
fist
mov
daa
pop
mov
push
test
cmc
lock
or
(bad)
jne
imul
(bad)
(bad)
call
cmp
std
scas
outs
push
mov
retf
mov
mov
inc
mov
adc
cmp
popf
push
mov
fist
inc
mov
sub
into
es
mov
mov
mov
addr16
fdivr
(bad)
(bad)
mov
add
pop
dec
jmp
(bad)
inc
adc
pop
sbb
movs
enter
push
(bad)
loopne
ret
sbb
in
pusha
fwait
adc
(bad)
mov
pushf
fucomip
pop
sbb
sub
sub
add
bound
loop
push
cmp
jg
shr
jbe
push
cli
dec
std
mov
dec
adc
bound
adc
(bad)
shl
(bad)
(bad)
call
mov
mov
xchg
test
(bad)
mov
into
repz
mov
pusha
cwde
dec
ja
push
mov
inc
sub
mov
xchg
stos
sbb
push
jb
xor
popa
ror
mov
sahf
fisttp
jbe
and
push
mov
jmp
adc
sbb
in
sbb
jmp
sahf
lods
daa
sub
out
es
jmp
pop
xor
retf
mov
and
jo
call
push
ins
push
js
outs
pop
mov
dec
sbb
js
stos
or
std
(bad)
mov
dec
shr
out
and
dec
jmp
mov
cmp
pop
lods
stc
fimul
dec
ins
dec
cli
(bad)
(bad)
(bad)
mov
adc
push
inc
enter
jle
jo
arpl
scas
lds
mov
push
std
outs
and
mov
imul
and
mov
jge
mov
xchg
bound
or
test
test
(bad)
push
enter
adc
dec
adc
nop
push
outs
(bad)
(bad)
jmp
les
inc
ins
jle
clc
jo
(bad)
dec
lods
adc
pop
cmp
xchg
aad
fsubr
mov
push
sub
call
mov
arpl
stos
(bad)
inc
fs
rcl
cmp
ss
aaa
push
clc
(bad)
(bad)
in
sti
cdq
jge
test
mov
fldpi
test
push
push
outs
xchg
mov
pop
jmp
sub
mov
sbb
loop
sbb
dec
icebp
test
or
rcr
push
sub
icebp
cmp
jb
mov
fs
and
push
imul
sub
sbb
in
sahf
hlt
jmp
fwait
sub
outs
pop
mov
ror
ins
loope
jl
scas
push
sbb
mov
scas
imul
cdq
je
nop
clc
inc
cmp
sbb
sub
(bad)
call
imul
enter
adc
inc
or
cmp
mov
inc
pop
inc
movs
bound
xchg
enter
scas
pop
jmp
js
jo
and
clc
xchg
lods
pop
push
cld
(bad)
(bad)
(bad)
mov
jecxz
mov
push
push
test
mov
or
(bad)
(bad)
call
cmp
xchg
pop
sub
and
cdq
cmps
pusha
mov
popa
or
mov
ss
pop
cdq
cli
push
mov
push
pop
hlt
fild
cmp
jmp
rol
js
mov
pop
dec
sub
in
aam
inc
add
bound
outs
dec
or
jmp
retf
or
push
lock
shl
std
popa
clc
call
sub
scas
sub
mov
mov
dec
xor
sti
aaa
pop
push
(bad)
xor
(bad)
cmp
test
pop
mov
(bad)
in
jl
loopne
add
pop
mov
mov
push
jo
repnz
inc
(bad)
call
scas
or
bound
shl
dec
mov
das
xchg
fsubrp
mov
adc
stos
pop
loop
clc
(bad)
in
push
sub
jo
loopne
lods
sub
fimul
(bad)
pop
(bad)
test
pop
mov
lock
dec
mov
fdivrp
es
call
pop
jmp
out
cli
call
or
stos
and
div
call
jmp
fistp
mov
add
jecxz
sbb
cwde
xor
jmp
cmp
pop
push
add
enter
(bad)
(bad)
(bad)
mov
cwde
jp
scas
ins
jmp
lods
scas
push
out
enter
out
rol
cdq
mov
fld
mov
dec
imul
mov
nop
(bad)
(bad)
(bad)
push
or
mov
outs
outs
pop
iret
lods
or
jb
sbb
(bad)
mov
sbb
adc
or
add
daa
pop
pop
add
std
pop
sub
popf
cli
(bad)
(bad)
jmp
pop
sub
mov
pop
sbb
sbb
cmp
test
mov
rol
sbb
das
movs
call
stos
aaa
cmp
dec
(bad)
(bad)
fcomip
jecxz
shl
call
stos
xchg
fimul
cmp
mov
cmp
push
push
les
adc
inc
dec
cmp
outs
int3
push
(bad)
(bad)
(bad)
jmp
in
sbb
dec
inc
mov
cmp
pop
(bad)
ins
cmp
ja
(bad)
call
scas
inc
and
push
xchg
or
test
adc
pop
jmp
in
(bad)
(bad)
(bad)
call
push
std
retf
ins
cmp
inc
mov
mov
fwait
rol
jle
pop
stos
rcl
hlt
jp
fwait
pusha
es
and
es
les
arpl
test
cmp
xchg
(bad)
jmp
adc
and
cmp
mov
pop
call
or
ins
(bad)
(bad)
(bad)
push
mul
icebp
xor
xchg
aaa
stos
in
mov
cmps
call
pop
xchg
(bad)
(bad)
dec
es
(bad)
call
and
inc
add
xor
and
ror
push
loope
icebp
jmp
cdq
test
shl
mov
jecxz
loop
outs
repnz
aad
jmp
inc
inc
adc
push
jne
stos
js
cmp
popa
leave
inc
pop
adc
out
(bad)
mov
xor
fs
adc
cmp
jnp
ds
fild
xchg
xor
jns
sbb
or
sar
(bad)
jg
test
xor
(bad)
jg
call
cmp
lods
std
scas
call
std
jmp
scas
fbstp
sub
cdq
sbb
cmp
sub
mov
sub
iret
test
fs
nop
call
xor
stos
mov
mov
sub
(bad)
(bad)
(bad)
(bad)
mov
add
inc
add
and
mov
jmp
(bad)
call
or
lods
and
mov
stos
pop
stos
setl
mov
mov
(bad)
jmp
outs
cmps
loopne
shl
jmp
(bad)
(bad)
dec
adc
xor
sub
test
(bad)
setae
fild
mov
push
nop
jecxz
sbb
test
sahf
es
lds
push
pop
cdq
jecxz
mov
imul
fidivr
xchg
pusha
arpl
sub
in
ror
cs
fimul
dec
test
lods
test
cmp
push
(bad)
lods
(bad)
mov
mov
mov
lods
hlt
sub
outs
push
push
ins
idiv
pop
test
mov
daa
(bad)
call
pop
cmc
xchg
je
es
xchg
inc
ds
cmps
(bad)
lahf
pop
aaa
sbb
fst
loopne
inc
es
lahf
cmp
ud2
sub
fstp
jnp
xchg
imul
test
sbb
pushf
jg
and
adc
out
lock
push
mov
mov
mov
and
ret
fst
(bad)
int3
xor
jl
push
xchg
retf
and
retf
xchg
and
scas
mov
stc
test
test
(bad)
(bad)
jg
imul
in
sub
push
xchg
(bad)
mov
adc
pop
mov
rcl
aad
(bad)
call
icebp
xchg
retf
in
ret
pop
push
pop
jmp
sbb
sbb
cmc
(bad)
jg
sub
in
xor
imul
arpl
retf
call
(bad)
jmp
cmp
ror
dec
loopne
jae
xchg
fisubr
push
dec
add
jmp
and
(bad)
(bad)
(bad)
(bad)
dec
or
push
imul
lea
ret
outs
fild
int3
dec
mov
(bad)
inc
cmps
mov
test
xchg
in
cld
(bad)
push
xchg
sahf
or
and
cdq
loopne
rcl
int3
and
(bad)
dec
into
push
dec
dec
test
xor
mov
xor
(bad)
stos
ret
outs
lods
mov
fstp
xlat
or
ins
cmp
inc
sar
jge
dec
push
xor
mov
sub
pop
or
sbb
jmp
mov
mov
sbb
daa
mov
(bad)
jmp
cmps
mov
jne
cmp
idiv
or
cmp
sub
jecxz
or
jo
jb
imul
(bad)
(bad)
inc
and
aaa
sbb
(bad)
out
inc
cmp
lods
jl
or
push
xchg
outs
in
xlat
sub
stos
inc
add
pusha
fild
sbb
out
lock
jg
rcl
push
stc
(bad)
jmp
ja
imul
dec
pusha
mov
lahf
fidivr
xchg
bound
push
(bad)
jge
leave
clc
aaa
rcl
cmps
adc
push
cmps
add
pushf
mov
call
cmp
fstp
fild
std
(bad)
inc
inc
xchg
pushf
in
call
sti
pop
adc
sbb
cli
(bad)
(bad)
jg
lock
in
adc
push
fnsave
retf
std
xor
push
sbb
adc
mov
xor
inc
push
sub
or
cs
pop
call
jmp
or
push
xchg
jmp
(bad)
(bad)
(bad)
(bad)
cmp
mov
iret
repz
clc
aas
(bad)
cwde
sub
iret
xlat
jl
fimul
in
js
mov
dec
cmp
jmp
jg
jmp
into
aad
jmp
inc
ret
sbb
adc
cmp
push
fwait
jge
mov
scas
mov
mov
cli
ins
in
das
in
cli
mov
lahf
jbe
mov
jmp
retf
loop
lods
gs
push
(bad)
(bad)
jg
bound
dec
push
push
jno
jno
in
std
stc
ins
xor
pop
call
mov
mov
inc
inc
lods
lea
(bad)
(bad)
jmp
push
mov
ss
cmps
sub
mov
sub
imul
cli
and
ins
mov
inc
cld
dec
call
cmp
(bad)
(bad)
(bad)
out
outs
xchg
pop
imul
shl
repnz
mov
mov
ror
stos
retf
popa
(bad)
(bad)
(bad)
jmp
stos
adc
cmp
shl
mov
xor
jbe
(bad)
sbb
test
(bad)
jmp
xchg
cmps
loope
xor
icebp
aas
mov
push
xchg
idiv
fld
enter
pop
pop
outs
xor
ss
cs
shl
xor
mov
sbb
xor
cmp
sbb
rol
sub
enter
stos
stos
xchg
cmps
cmps
cs
mov
sbb
(bad)
dec
leave
icebp
pop
sahf
xchg
and
pop
push
xchg
sub
pop
adc
(bad)
(bad)
call
popf
or
std
leave
mov
std
dec
stos
(bad)
jl
out
jle
scas
cmps
movs
cli
xchg
fs
jl
mov
fsubr
pop
(bad)
xor
outs
add
or
lods
(bad)
in
mov
jmp
ss
cdq
mov
out
outs
(bad)
(bad)
(bad)
push
ds
lods
scas
add
enter
stos
mov
adc
add
add
ja
push
sbb
dec
out
cs
call
xor
or
lods
and
and
mov
mov
sbb
mov
popa
repnz
int
dec
ja
retf
lea
rcr
hlt
pop
add
call
daa
stos
jg
add
enter
std
sbb
dec
in
retf
mov
pop
push
add
stos
jmp
(bad)
fcomip
adc
mov
or
mov
mov
xchg
sbb
xchg
icebp
call
(bad)
inc
or
(bad)
xchg
pusha
mov
sub
adc
jg
nop
ficomp
je
scas
(bad)
fidivr
dec
js
sub
mov
or
cmps
push
pop
push
or
inc
push
add
(bad)
icebp
mov
pop
inc
sar
fs
ss
int3
dec
ret
cld
adc
pop
adc
xor
and
fmul
rep
hlt
jo
cmp
out
je
mov
call
inc
test
cdq
test
cmp
(bad)
mov
push
inc
pop
lahf
sbb
sub
retf
aad
lock
dec
jbe
(bad)
fnsave
adc
and
leave
jbe
jbe
push
cli
fisttp
or
mov
cmp
(bad)
jg
es
stos
imul
outs
mov
mov
mov
or
sub
scas
sbb
std
jecxz
popf
mov
scas
enter
mov
or
sub
and
out
push
or
enter
adc
xchg
(bad)
push
push
cs
mul
xor
xchg
cmps
mov
scas
sbb
jle
mov
neg
mov
retf
ds
int3
cmps
push
stos
jle
mov
sahf
mov
rol
pop
(bad)
(bad)
(bad)
dec
push
mov
cmc
movs
push
sub
and
sbb
cdq
fmul
aad
sti
and
xchg
(bad)
mov
push
sub
cmp
push
adc
(bad)
out
push
aam
test
xor
mov
xor
mov
sub
(bad)
(bad)
(bad)
stos
shl
out
icebp
sbb
jp
mov
out
add
mov
(bad)
(bad)
jnp
adc
mov
pop
call
mov
(bad)
jg
enter
pop
call
call
daa
sub
scas
fild
cmp
cmp
cmp
out
jp
scas
jl
sub
inc
cmp
add
jmp
aad
adc
pop
xor
(bad)
fild
push
sub
fwait
cmp
xor
jb
ret
mov
ds
stos
fisub
jmp
adc
pop
dec
clc
pop
in
pop
xor
cmps
adc
pop
inc
cli
mov
cmp
sti
inc
out
cmps
pop
xchg
rcl
js
ja
jmp
(bad)
inc
loop
mov
ret
imul
scas
popf
test
and
enter
or
add
mov
xor
ret
inc
test
dec
push
test
inc
lods
out
mov
or
xacquire
(bad)
inc
add
in
cli
sub
cmp
and
aam
cmp
ret
scas
xchg
xchg
xor
clc
stos
(bad)
sti
fidivr
sub
leave
scas
nop
fisub
shl
pop
mov
add
push
push
cmp
mov
(bad)
mov
mov
jmp
call
(bad)
(bad)
dec
lods
jmp
xor
call
mov
retf
add
test
fisubr
cld
(bad)
push
jp
(bad)
shr
push
cld
in
cs
dec
jmp
movs
push
jg
sub
jno
pop
sbb
(bad)
mov
cmp
xlat
outs
dec
pop
js
inc
pop
push
pop
loop
jmp
sub
fild
fidiv
dec
movs
test
fisttp
cld
pop
sub
pop
cs
inc
push
mov
test
xchg
dec
fisubr
adc
(bad)
jg
jmp
loopne
movs
or
cmc
clc
fsubp
ins
inc
cli
mov
inc
cs
scas
dec
push
xor
sub
into
je
lock
cmps
std
(bad)
inc
fimul
cwde
mov
into
cs
jmp
mov
mov
aad
(bad)
(bad)
(bad)
mov
add
(bad)
loopne
pop
sub
mov
xor
imul
cli
fild
or
movs
xor
ss
(bad)
(bad)
(bad)
call
ja
out
pop
pop
jle
in
mov
xor
sbb
cs
mov
int
clc
mov
fst
repz
jp
fdiv
xchg
fstp
sub
cmp
(bad)
adc
movs
mov
test
adc
in
inc
add
stc
stos
or
(bad)
dec
mov
pop
clc
clc
lock
cmps
xchg
jns
or
fwait
lea
movs
lods
das
ficom
repz
mov
sti
sub
adc
arpl
cmp
(bad)
push
repnz
mov
data16
inc
ds
loopne
(bad)
(bad)
jmp
cmp
movs
mov
xor
jl
in
xchg
imul
sub
aad
push
or
jno
or
lock
push
(bad)
clc
pop
hlt
cmp
std
pop
in
mov
push
(bad)
imul
mov
ins
(bad)
sti
stos
push
mov
fimul
push
xchg
add
jp
cld
mov
inc
jne
loopne
push
in
or
call
das
clc
cs
cld
mov
mov
add
or
in
dec
aas
cs
fistp
dec
cmp
cld
outs
jecxz
(bad)
cmp
mov
ins
sbb
jg
jmp
loopne
push
call
mov
pop
pop
in
sub
jmp
movs
adc
jle
mov
lods
mov
shr
ss
add
push
retf
shl
inc
mov
fild
lea
mov
shl
outs
test
jl
lods
jecxz
lahf
mov
cmps
adc
jecxz
mov
mov
outs
xor
into
and
fimul
mov
sbb
cld
mov
stos
repz
iret
(bad)
jecxz
loopne
push
bound
sbb
lahf
or
repz
mov
sub
add
and
mov
adc
shl
nop
into
xor
and
(bad)
(bad)
jmp
mov
ds
inc
rcl
(bad)
stos
mov
xor
xchg
imul
and
repnz
jbe
dec
adc
cld
in
jg
push
ret
(bad)
inc
or
cli
jbe
mov
push
sbb
es
call
loopne
fisubr
push
stos
outs
(bad)
(bad)
mov
(bad)
repz
push
or
imul
ret
lods
outs
pop
pop
xchg
iret
or
(bad)
jmp
mov
jae
jg
repz
pop
ds
dec
sbb
enter
push
sti
scas
out
sahf
lods
cmp
scas
out
imul
ret
in
sbb
in
(bad)
jmp
ret
inc
mov
stos
out
or
cs
ficom
mov
mov
jmp
or
cmp
pop
mov
push
mov
mov
lahf
(bad)
out
mov
inc
dec
mov
ds
xchg
and
lods
mov
xchg
(bad)
jmp
sbb
sub
pushf
sbb
pusha
cmp
jecxz
scas
scas
mov
das
and
js
or
sub
adc
jg
mov
add
ins
xchg
mov
test
jae
mov
pop
pop
daa
mov
(bad)
push
push
bound
sub
cdq
dec
jecxz
movs
(bad)
push
ss
je
shr
fild
sti
push
sub
push
push
push
out
test
mov
lock
in
sbb
cmp
(bad)
lock
(bad)
jmp
push
dec
out
xlat
xchg
stos
and
fmul
mov
lea
lock
mov
jo
jmp
cmp
mov
ins
lods
xchg
(bad)
sbb
jmp
les
and
test
aam
dec
xor
pop
xchg
and
sbb
out
jns
(bad)
(bad)
cmp
mov
fistp
fist
jne
push
or
pop
jp
adc
xor
pop
cmc
out
lock
add
scas
jae
mov
jbe
and
mov
call
cli
enter
cmp
or
cmps
mov
call
sub
es
clc
aad
xor
cdq
push
cld
(bad)
(bad)
mov
jnp
adc
mov
push
mov
fisttp
jo
mov
mov
pop
cwde
imul
stos
xor
dec
mov
jo
(bad)
fild
sbb
out
imul
popa
(bad)
test
inc
iret
add
lock
dec
mov
xchg
movs
mov
test
scas
mov
shr
mov
pop
xchg
imul
lods
add
dec
and
out
cdq
or
jmp
enter
sub
xor
and
shr
jg
inc
cld
or
xor
push
and
(bad)
inc
fild
aad
pop
dec
sub
cwde
es
jg
test
(bad)
(bad)
push
ja
fnstcw
xchg
jne
sub
mov
test
ins
pop
std
sub
mov
pop
lods
addr16
loopne
call
xor
adc
fistp
xchg
(bad)
(bad)
(bad)
(bad)
cmp
push
jb
inc
pop
pop
cmp
pop
mov
imul
or
clc
cmp
jge
pop
lock
mov
out
pop
pop
mov
(bad)
inc
cld
add
loop
sub
sar
(bad)
sbb
jmp
cli
jmp
pop
addr16
jns
leave
pop
(bad)
sbb
dec
(bad)
fstp
(bad)
(bad)
(bad)
jmp
dec
sti
in
pop
mov
faddp
adc
call
repnz
int
add
dec
pusha
(bad)
(bad)
(bad)
(bad)
jmp
loop
(bad)
push
xchg
cld
and
jmp
adc
retf
shl
jmp
fistp
cmp
mov
pop
rol
mov
(bad)
retf
clc
out
dec
mov
shr
and
dec
jp
push
jo
in
mov
xor
pop
inc
mov
stos
mov
aam
jmp
test
daa
(bad)
sub
les
aam
in
mov
jmp
adc
hlt
sbb
inc
adc
in
retf
stos
fcomi
fsub
pop
cli
nop
mov
cmps
adc
(bad)
(bad)
(bad)
(bad)
daa
retf
dec
mov
fcmove
into
ficomp
addr16
loope
test
out
(bad)
call
cli
jmp
cs
movs
push
sti
add
push
loop
cmp
xlat
(bad)
(bad)
(bad)
(bad)
jmp
sbb
dec
jmp
sbb
xchg
sbb
(bad)
(bad)
jg
(bad)
fst
mov
adc
das
push
or
retf
sbb
call
aad
sbb
add
adc
mov
iret
xor
popf
sbb
xchg
add
div
mov
movs
aaa
xor
or
cmp
push
pop
std
shl
jg
loop
mov
jmp
jg
leave
xchg
xor
daa
mov
stc
sbb
(bad)
aaa
adc
dec
enter
test
or
adc
sbb
mov
pop
dec
pop
(bad)
jle
mov
imul
(bad)
(bad)
(bad)
cli
mov
mov
das
jb
sub
lock
push
xor
idiv
in
loop
iret
(bad)
mov
jg
xchg
xchg
cmp
mov
int3
ins
into
jg
sub
cli
pushf
push
jmp
(bad)
(bad)
(bad)
jmp
cmp
ins
and
xchg
mov
stos
jmp
adc
jo
(bad)
(bad)
(bad)
inc
mov
and
out
pop
loop
sbb
pop
int
xor
push
scas
xor
int
(bad)
(bad)
(bad)
jmp
stos
movs
loop
lock
adc
jg
jae
outs
addr16
das
fbstp
rcl
fwait
and
jmp
xor
mov
movs
cmp
loopne
xchg
jb
push
cli
rol
or
mov
std
dec
mov
das
sub
aad
sub
cli
into
add
cmps
jmp
jg
jo
dec
sbb
(bad)
jmp
or
add
jnp
mov
(bad)
(bad)
push
pop
cwde
ins
or
jno
in
std
mov
pop
addr16
daa
jb
cmps
mov
call
call
sub
push
stos
in
adc
add
int
mov
dec
dec
pop
push
dec
stos
mov
adc
sbb
xchg
dec
into
mov
mov
ret
(bad)
(bad)
inc
or
ror
mov
dec
(bad)
lahf
in
ins
das
dec
das
addr16
fcomp
aam
jg
fucom
dec
lods
jmp
repnz
push
pop
(bad)
(bad)
push
(bad)
cli
pop
pop
add
es
test
fwait
std
inc
adc
xor
dec
cmp
inc
pop
fdivrp
(bad)
(bad)
(bad)
cmp
xchg
mov
push
or
inc
xchg
test
jae
push
mov
jl
das
clc
push
add
loop
dec
mov
(bad)
(bad)
clc
or
mov
loopne
(bad)
inc
and
scas
enter
jmp
retf
dec
push
and
mov
(bad)
(bad)
jmp
mov
ins
popa
cmp
cmp
cmp
cmp
push
jbe
jae
jp
stc
sbb
pushf
or
(bad)
ja
scas
mov
lock
add
arpl
sbb
xchg
(bad)
int3
cs
aaa
cld
(bad)
inc
cmps
xor
fisttp
pushf
adc
ins
cmps
(bad)
inc
call
dec
xchg
push
movs
lock
xchg
shr
push
cmc
xchg
(bad)
(bad)
mov
cwde
mov
ja
or
adc
mov
ret
jns
dec
push
sbb
cmps
mov
mov
push
clc
dec
mov
call
outs
sub
inc
jmp
shl
dec
aas
cmp
xor
cmc
push
xchg
pop
clc
jecxz
mov
popa
ret
(bad)
(bad)
(bad)
call
sbb
xlat
test
push
dec
mov
jmp
dec
jmp
(bad)
cmps
cmps
xor
mov
xchg
cmps
pusha
fisubr
inc
cmp
ret
mov
call
repz
sbb
jge
jno
inc
add
pop
sbb
sub
bound
adc
(bad)
sbb
add
push
call
pop
mov
stc
add
or
xchg
pop
lock
pusha
jmp
jg
test
xchg
(bad)
(bad)
(bad)
inc
pop
inc
jmp
jmp
sub
adc
std
or
fld
dec
push
xor
add
sbb
jb
push
inc
add
(bad)
sti
outs
mov
rcr
into
scas
mov
add
jle
dec
std
outs
mov
xor
outs
iret
in
push
int3
push
or
inc
cmp
adc
dec
in
inc
xor
cwde
or
addr16
jg
push
xlat
jmp
(bad)
ds
mov
outs
sbb
call
je
mov
cli
(bad)
and
pop
cmp
lods
out
(bad)
cmp
ror
dec
sub
retf
xchg
ins
out
or
cli
dec
sbb
and
jmp
push
and
jae
loope
bound
jmp
imul
mov
dec
or
mov
sbb
xchg
push
(bad)
call
test
scas
pop
sub
loopne
aaa
cmps
dec
or
fistp
mov
jmp
bound
test
mov
stc
dec
xchg
jmp
xchg
stos
fsubr
jmp
lods
mov
mov
outs
dec
in
test
adc
cmp
jmp
adc
dec
and
stos
(bad)
push
(bad)
iret
les
cmc
(bad)
out
clc
sub
jmp
push
ins
dec
fistp
scas
lahf
push
in
fwait
(bad)
(bad)
(bad)
(bad)
fist
pop
cmps
(bad)
repnz
mov
repnz
xchg
ret
pop
shl
and
sub
jnp
jmp
inc
cmp
sbb
inc
mov
jmp
sub
cmp
(bad)
jmp
mov
inc
mov
inc
jb
dec
or
adc
test
popf
push
xor
sub
mov
cli
jg
mov
push
imul
pop
ror
(bad)
(bad)
out
adc
sub
xchg
mov
adc
fcomp
push
mov
call
cli
cs
jb
stos
add
mov
cmps
push
aad
(bad)
lock
xor
leave
dec
(bad)
pop
and
ret
fbld
hlt
cmps
xor
popa
lahf
enter
ret
(bad)
mov
mov
pusha
or
icebp
stos
ins
pop
sub
push
(bad)
das
clc
rcl
or
gs
(bad)
mov
pop
or
leave
leave
sbb
xchg
call
(bad)
dec
cmps
je
sbb
jmp
dec
fdiv
push
sub
jmp
xor
pop
xor
mov
pop
cmp
add
(bad)
loop
mov
arpl
cmp
mov
jmp
cli
dec
test
loop
es
retf
and
neg
(bad)
out
xor
lea
or
push
movs
call
(bad)
jmp
cwde
popa
adc
daa
jnp
mov
movs
sub
shr
outs
(bad)
(bad)
(bad)
(bad)
jns
lods
sub
sbb
repnz
scas
test
int
add
add
xchg
iret
imul
push
fs
mov
or
sahf
hlt
outs
fdiv
push
mov
cmps
sbb
(bad)
(bad)
jmp
sub
jg
in
fst
movs
or
(bad)
dec
fwait
pop
or
jl
outs
mov
scas
push
push
sub
call
loop
jno
pushf
out
dec
mov
mov
int3
addr16
je
mov
(bad)
(bad)
jmp
or
mov
loope
lahf
sub
cmp
or
sub
sbb
mov
inc
mov
add
push
aad
sub
(bad)
(bad)
mov
mov
jge
cmp
xor
or
sbb
and
or
scas
adc
pop
repz
or
out
sbb
cmp
outs
and
fbstp
add
out
xor
mov
in
repz
jmp
fs
into
sub
xor
or
(bad)
das
jbe
out
dec
dec
dec
in
gs
inc
stos
cmps
hlt
sub
mov
in
(bad)
(bad)
push
fimul
mov
fnstenv
sbb
sub
or
lahf
inc
cdq
pop
jae
mov
jbe
add
add
(bad)
pop
pop
cli
fsubp
shr
and
ins
xor
sbb
loopne
jnp
mov
test
lahf
jg
adc
pop
into
lods
pop
cs
and
or
dec
cmps
mov
sub
pop
mov
adc
mov
in
(bad)
(bad)
push
scas
sub
mov
test
cs
jmp
(bad)
sub
loop
arpl
add
imul
ror
cli
mov
and
(bad)
ja
push
sbb
pusha
push
scas
dec
cdq
jmp
inc
or
(bad)
call
sahf
mov
or
lock
mov
push
xlat
sub
add
(bad)
(bad)
(bad)
inc
fdivr
je
sub
sbb
imul
scas
push
cli
(bad)
(bad)
inc
xchg
mov
jo
cmps
mov
enter
xor
les
push
push
sbb
mov
mov
(bad)
jne
(bad)
jmp
inc
les
and
sub
jns
nop
cli
xor
aad
sar
(bad)
(bad)
mov
out
imul
cmp
ins
push
cmps
test
push
bound
dec
lods
call
jg
hlt
int3
jb
pop
out
repnz
push
call
(bad)
push
std
fnstcw
dec
mov
fst
dec
call
leave
sbb
jmp
xchg
push
rol
push
cli
mov
pop
mov
adc
frstor
clc
scas
aaa
loope
call
push
popa
push
pop
push
cmp
push
xlat
jnp
das
mov
dec
(bad)
(bad)
call
rol
stos
inc
push
mov
repz
cli
outs
test
jle
cs
(bad)
scas
sahf
mov
sbb
(bad)
(bad)
mov
add
mov
in
cmovge
dec
jmp
div
popf
sbb
sti
std
mov
mov
lock
into
push
mov
sub
mov
in
mov
jne
dec
repnz
jecxz
call
bound
mov
mov
jl
movs
dec
inc
pop
mov
dec
mov
loope
mov
cmp
cmp
mov
jno
fwait
sub
call
jg
(bad)
push
out
nop
push
or
retf
and
fbld
in
fbld
mov
add
push
and
int
mov
push
hlt
xchg
(bad)
(bad)
call
iret
pop
fild
(bad)
in
mov
fist
jmp
pop
xchg
mov
add
test
sbb
mov
fdivr
les
xchg
xchg
sbb
(bad)
(bad)
(bad)
fbstp
fistp
fist
fidivr
adc
loope
lock
dec
rcl
popf
push
std
sbb
enterw
inc
outs
in
push
inc
lea
(bad)
adc
push
cmp
xor
sbb
jg
retf
clc
(bad)
jg
mov
sbb
xor
mov
fwait
adc
jae
cwde
and
pop
xchg
(bad)
mov
cmp
test
sbb
stos
enter
out
inc
sub
int3
std
mov
shl
sbb
jmp
jb
je
fcomp
aam
call
xchg
jge
sahf
xchg
and
repnz
dec
ins
iret
mov
inc
aaa
fwait
sar
sub
push
cs
(bad)
jg
fs
fisttp
pop
push
(bad)
aam
pop
shl
add
call
imul
jns
xor
(bad)
(bad)
(bad)
cld
mov
xchg
stos
loopne
pop
popa
mov
pop
rcl
add
lods
(bad)
out
sub
ins
movs
jge
push
cld
mov
mov
(bad)
xlat
outs
cmps
lock
fistp
pop
lods
or
jnp
pop
or
mov
adc
call
cmp
(bad)
(bad)
(bad)
jmp
inc
aad
retf
or
xlat
xor
dec
push
jecxz
adc
mov
ficom
arpl
aad
or
call
xor
call
dec
icebp
aaa
in
sub
dec
xor
nop
test
adc
lods
lods
jp
cld
(bad)
inc
into
push
stos
outs
jns
or
std
fld
outs
push
mov
(bad)
mov
mov
(bad)
(bad)
(bad)
call
loope
or
cmp
test
outs
dec
ret
in
fwait
int3
(bad)
repnz
(bad)
(bad)
(bad)
(bad)
dec
pop
inc
mov
ja
lods
daa
sub
fbstp
call
or
sub
mov
(bad)
(bad)
(bad)
dec
and
xchg
mov
jbe
push
out
inc
cmp
pop
test
pop
and
sub
xchg
inc
int
call
fidivr
(bad)
dec
pop
dec
cmp
(bad)
neg
in
jns
mov
retf
pop
push
(bad)
inc
xor
sbb
neg
cli
(bad)
call
adc
shr
and
fimul
sti
scas
or
mov
push
push
mov
ds
sub
or
lahf
mov
loopne
bound
push
jae
jmp
scas
and
nop
mov
add
inc
jg
rcr
(bad)
(bad)
(bad)
inc
and
adc
and
mov
or
retf
ret
xor
fistp
mov
xor
das
test
sub
or
adc
push
call
std
jl
cmp
jnp
mov
and
xor
cmps
sahf
test
add
out
jmp
(bad)
(bad)
jmp
ret
xchg
mov
mov
scas
call
mov
jo
push
call
inc
clc
lea
fwait
mov
fadd
cdq
jmp
xchg
sbb
jmp
mov
(bad)
ja
ficomp
push
imul
shr
mov
test
pop
adc
jae
adc
pop
add
jmp
jecxz
cmp
add
jmp
add
stos
sub
(bad)
mov
retf
in
in
pop
fcomip
(bad)
(bad)
(bad)
and
cs
retf
inc
neg
push
mov
add
lods
cmp
jmp
cmp
data16
into
std
pop
(bad)
xchg
cli
in
test
retf
or
scas
cli
mov
lods
(bad)
scas
setnp
and
lock
icebp
out
mov
and
xchg
mov
(bad)
(bad)
inc
push
mov
jg
pop
iret
aad
mov
dec
(bad)
dec
mov
mov
sub
(bad)
jmp
lahf
sbb
sahf
sbb
mov
inc
pop
inc
scas
mov
in
jns
sub
cli
(bad)
(bad)
call
cmp
call
sub
pop
adc
(bad)
(bad)
push
cld
push
push
push
mov
out
cmps
jbe
fistp
mov
loope
mov
mov
xchg
xor
in
inc
aad
loop
mov
arpl
dec
add
add
enter
cmps
and
dec
mov
(bad)
out
inc
jmp
cmp
cld
pop
jmp
sbb
call
mul
mov
adc
xor
je
loope
lods
retf
addr16
or
jp
bound
inc
xchg
or
push
push
scas
mov
scas
mov
lea
stos
minps
jne
mov
jbe
not
add
je
or
call
cmc
(bad)
(bad)
dec
sbb
and
xor
jle
and
lahf
push
(bad)
jmp
out
fwait
sbb
enter
add
dec
cli
cli
jb
xchg
jmp
adc
push
outs
cs
sbb
es
dec
fdivrp
(bad)
xchg
jne
push
adc
mov
aaa
adc
(bad)
call
pop
cs
mov
mov
push
or
(bad)
jg
inc
mov
cmp
mov
jmp
addr16
sbb
pop
(bad)
(bad)
(bad)
push
and
icebp
dec
ret
mov
call
cmp
jecxz
or
(bad)
(bad)
inc
xadd
jmp
inc
sub
imul
cmp
out
pop
fwait
cdq
push
(bad)
push
add
cs
xchg
popa
and
ja
push
lods
inc
movs
mov
ffree
pop
iret
cmp
inc
push
int3
cmps
(bad)
(bad)
(bad)
inc
mov
mov
push
push
in
es
scas
loopne
out
nop
mov
(bad)
mov
lahf
xchg
imul
mov
add
(bad)
(bad)
call
push
imul
hlt
in
sbb
sub
mov
aas
inc
xor
scas
test
out
sub
sbb
add
mov
push
idiv
(bad)
call
cmp
sub
imul
movs
mov
add
xchg
cmp
push
dec
sub
(bad)
jmp
inc
gs
iret
test
add
mov
(bad)
iret
test
imul
cli
out
cli
(bad)
jp
das
sub
stc
fwait
pushf
pop
sub
retf
cmp
cmpps
mov
or
das
adc
or
add
mov
retf
jae
movs
(bad)
(bad)
call
lock
pusha
push
add
sbb
(bad)
out
pop
dec
(bad)
scas
xor
ins
test
mov
(bad)
popa
scas
push
mov
or
(bad)
jmp
in
mov
icebp
loopne
jecxz
not
sub
daa
mov
xchg
retf
fld
sub
sbb
mov
jmp
call
sub
add
imul
mov
ds
sahf
in
fistp
push
call
ja
jbe
jae
movs
adc
cli
pop
mov
outs
(bad)
(bad)
in
(bad)
cmps
xchg
repnz
pop
sar
mov
(bad)
cmc
cmp
jle
mov
adc
dec
jnp
loop
dec
call
fwait
repnz
mov
sub
fcomip
fwait
idiv
cmp
jo
or
jmp
xchg
adc
(bad)
(bad)
call
ss
pop
cs
in
xchg
jmp
mov
pop
out
mov
ds
dec
test
mov
(bad)
fild
sub
(bad)
(bad)
(bad)
jg
mov
push
jb
out
jmp
mov
mov
and
mov
dec
ss
cmp
lods
sub
(bad)
call
in
jmp
mov
sbb
sbb
cdq
xchg
mov
pop
add
jb
out
pop
fcom
hlt
(bad)
(bad)
cld
fisub
in
dec
or
sbb
sub
outs
dec
lock
push
stc
adc
dec
test
mov
iret
pop
jecxz
into
test
cmps
scas
adc
ja
in
cmp
(bad)
jg
push
pop
mov
dec
sub
cmps
push
inc
stos
mov
retf
add
mov
(bad)
(bad)
inc
scas
in
xchg
out
mov
std
or
fdiv
fisubr
mov
(bad)
out
cli
(bad)
call
jo
mov
mov
push
cli
mov
test
ror
adc
dec
clc
sub
iret
sub
scas
fisttp
jg
adc
jmp
(bad)
movs
std
inc
push
(bad)
cmp
mov
loopne
(bad)
ficomp
push
or
jno
mov
mov
(bad)
clc
arpl
sbb
stos
call
(bad)
jmp
jnp
cs
call
sbb
jp
popf
lock
dec
loop
mov
fsubr
jns
lods
mov
call
stos
pop
dec
jmp
loopne
into
mov
pop
pusha
rol
mov
shl
and
retf
dec
std
jmp
(bad)
retf
icebp
sar
xchg
(bad)
jg
xchg
loopne
adc
daa
pusha
xor
push
pushf
sbb
or
(bad)
jge
adc
pop
and
nop
mov
std
mov
cmp
cld
jmp
hlt
sbb
cmps
or
ins
mov
es
jg
add
js
ss
xlat
push
mov
and
repnz
mov
push
push
aam
cmp
mov
fild
mov
mov
ret
inc
jno
stos
sub
call
test
daa
(bad)
cwde
leave
(bad)
jmp
xor
aaa
mov
iret
repnz
mov
(bad)
(bad)
inc
or
sub
jo
fcom
pop
(bad)
inc
mov
mov
fwait
arpl
inc
cmc
(bad)
(bad)
mov
outs
sti
lods
adc
mov
jp
adc
push
lods
mov
int
(bad)
(bad)
push
out
dec
sti
push
cmp
stos
pop
sti
and
mov
movs
cdq
xor
sbb
std
pop
add
aam
sub
dec
pop
out
cs
or
sub
pop
sub
leave
stos
retf
(bad)
jmp
cli
loopne
repnz
cs
mov
jmp
call
test
pop
loopne
(bad)
jmp
sti
call
pop
inc
test
out
nop
mov
cmp
pop
dec
test
pop
mov
outs
fs
mov
stc
ins
sbb
jp
push
push
adc
test
pop
xchg
fld
push
stos
in
adc
push
dec
mov
push
mov
(bad)
jg
inc
xlat
mov
sbb
pop
add
sub
rcr
push
in
repnz
push
jge
xchg
icebp
inc
jmp
ror
or
jg
mov
movs
inc
outs
stos
stos
mov
jnp
push
sbb
mov
mov
jmp
cmp
(bad)
pop
jp
in
push
sbb
lods
mov
mov
js
loope
xchg
es
stos
popf
imul
shr
and
(bad)
mov
daa
imul
lock
into
pop
sbb
jmp
dec
inc
sahf
add
or
(bad)
in
push
addr16
jge
arpl
xchg
rol
xor
test
(bad)
jmp
loop
cmp
and
mov
cmp
aam
mov
(bad)
fbld
stos
es
sub
(bad)
jmp
(bad)
ret
repnz
jne
or
mov
jb
jmp
scas
imul
mov
sbb
dec
or
retf
adc
add
call
or
and
mov
enter
call
sbb
mov
jmp
push
test
add
mov
imul
and
or
sbb
sub
pop
dec
cmp
xor
imul
retf
iret
and
sub
call
mov
repnz
and
jge
cmps
into
rcl
adc
xor
scas
shl
lock
out
popf
int3
sbb
call
mov
shl
xchg
out
jle
mov
or
mov
adc
jae
dec
pop
push
sbb
mov
add
bound
jns
dec
(bad)
(bad)
(bad)
inc
xchg
xchg
test
ds
add
lahf
cmp
cs
xchg
dec
mov
xchg
mov
mov
int
cmc
in
jbe
mov
(bad)
fbld
sub
fild
mov
sub
mov
loopne
(bad)
call
add
jmp
jne
std
mov
push
xor
inc
or
(bad)
(bad)
(bad)
cmp
(bad)
aas
sub
std
cmp
stos
or
cs
je
int
mov
ins
sub
fild
jmp
pop
daa
fist
pop
cwde
pop
cmps
dec
inc
cmp
dec
(bad)
(bad)
in
pop
mov
push
call
addr16
mov
jne
xor
sbb
inc
(bad)
xor
iret
cmps
jno
cs
(bad)
(bad)
mov
mov
cmp
push
repz
bound
xor
dec
neg
mov
(bad)
dec
push
scas
js
mov
jmp
scas
int
push
nop
scas
in
std
stos
scas
into
int3
or
sub
loopne
or
mov
mov
pusha
(bad)
mov
lods
scas
push
int
xor
in
ins
adc
jo
stos
lea
int3
call
loope
mov
hlt
add
sub
call
sub
(bad)
(bad)
(bad)
jmp
mov
jmp
push
sbb
scas
test
dec
push
ins
mov
mov
(bad)
(bad)
dec
mov
jmp
hlt
popf
mov
pushf
mov
mov
test
add
cmc
add
out
clc
ja
adc
cmps
xchg
push
sub
fmul
xchg
rcl
(bad)
dec
ret
pop
stos
add
retf
and
and
jns
mov
inc
cmp
mov
in
js
xor
xchg
je
and
std
retf
and
fild
mov
sbb
xor
fstp
inc
(bad)
(bad)
(bad)
push
ret
out
dec
inc
push
loope
arpl
call
(bad)
and
adc
mov
fild
jle
cmps
or
hlt
push
std
pop
iret
idiv
enter
push
bound
lods
test
je
or
mov
mov
fnstenv
fbld
inc
pop
leave
test
xchg
addr16
(bad)
(bad)
(bad)
cld
mov
ror
(bad)
ret
xor
js
cdq
mov
xor
fisttp
(bad)
dec
push
(bad)
(bad)
(bad)
inc
call
aam
sub
xor
cld
mov
xchg
inc
pusha
cmp
(bad)
call
push
jns
or
retf
out
sub
in
xchg
dec
mov
mov
or
mov
mov
(bad)
and
sar
jno
or
nop
xlat
add
int
pop
jp
xchg
xor
sub
fst
sahf
ds
std
gs
lahf
inc
pusha
test
(bad)
jmp
push
add
mov
ret
cdq
push
xchg
jg
jmp
(bad)
adc
mov
cmp
push
mov
pop
jne
cmc
or
xchg
fwait
xor
and
dec
push
(bad)
call
inc
or
mov
in
xor
jne
in
cmp
dec
push
jnp
loop
pop
mov
das
adc
loop
call
push
jmp
dec
push
cmp
iret
call
call
sbb
call
xchg
dec
scas
push
retf
dec
inc
push
mov
iret
(bad)
mov
fstp
add
outs
test
mov
adc
inc
outs
adc
call
scas
xchg
or
(bad)
call
mov
fwait
cmp
mov
cs
(bad)
jmp
push
loop
add
mov
std
clc
cdq
mov
shr
loope
and
pop
push
mov
test
mov
fisubr
cmp
cmp
mov
(bad)
(bad)
mov
shl
and
enter
mov
(bad)
outs
and
ror
pop
addr16
(bad)
(bad)
inc
dec
cmc
mov
out
jge
sti
mov
and
(bad)
mov
mov
adc
mov
icebp
pop
mov
pop
sar
push
clc
push
dec
mov
cwde
icebp
jecxz
cmc
push
cmps
(bad)
(bad)
jmp
xchg
ins
repnz
mov
sbb
sub
xor
repnz
jo
xchg
(bad)
jmp
and
stos
loope
fwait
or
add
jmp
add
sbb
jle
(bad)
out
into
add
mov
cs
mov
nop
sub
jp
jae
aam
fdivr
(bad)
(bad)
jmp
je
pusha
loopne
dec
cs
cwde
cmp
lods
mov
jnp
pop
jp
into
scas
mov
pusha
(bad)
call
sar
pop
dec
sub
mov
jg
dec
(bad)
cwde
pop
add
jmp
xchg
call
int3
mov
add
pop
inc
(bad)
(bad)
(bad)
(bad)
jmp
sbb
mov
adc
ror
out
cdq
pop
leave
imul
shr
icebp
loopne
call
dec
(bad)
mov
inc
jmp
push
sub
ins
in
call
dec
sar
(bad)
jmp
mov
push
xor
xchg
or
repnz
mov
mov
pop
xor
pop
mov
outs
mov
das
shl
push
mov
retf
mov
mov
arpl
mov
(bad)
(bad)
(bad)
call
push
dec
jmp
cmp
sub
xchg
stos
addr16
stos
and
add
sbb
dec
fdiv
inc
cmps
pushf
nop
sbb
ss
lods
(bad)
(bad)
inc
mov
mov
shr
mov
addr16
sahf
es
loop
sbb
sub
fdivrp
jmp
fstp
xchg
or
int
loopne
sub
xchg
retf
or
mov
xor
push
cld
(bad)
call
stos
popf
xor
adc
loopne
cmps
xchg
call
scas
pop
sbb
dec
sub
mov
ror
fisttp
mov
int3
repz
sub
leave
test
push
das
stos
jnp
xchg
repz
or
or
mov
jns
and
outs
scas
cli
stos
add
sub
inc
cmp
(bad)
sub
jmp
stos
xchg
inc
push
(bad)
inc
ds
adc
pop
mov
cmps
inc
sbb
outs
std
cmc
or
jns
pop
loope
test
int3
push
and
movs
test
push
stos
loopne
ror
stc
ret
mov
xlat
in
or
add
outs
xor
(bad)
push
jmp
mov
pop
sbb
sbb
cmp
out
add
das
movs
outs
popf
sar
jg
sub
or
ror
mov
sub
(bad)
(bad)
(bad)
jmp
push
mov
mov
retf
into
sub
bound
xchg
js
sub
xchg
and
daa
push
pop
xlat
(bad)
(bad)
(bad)
jmp
or
xchg
cmps
jo
pusha
lea
daa
lock
ins
in
mov
outs
dec
mov
mov
add
(bad)
call
cdq
xor
mov
jae
mov
push
xchg
push
iret
fstp
(bad)
or
repnz
adc
je
pushf
cmps
mov
push
adc
xchg
mov
sbb
mov
mov
lods
in
(bad)
aaa
pop
rcr
jb
sbb
call
fs
add
mov
das
clc
(bad)
jg
xchg
mov
fsub
jnp
add
cli
push
and
inc
scas
jmp
add
xchg
pusha
jmp
pop
mov
(bad)
(bad)
call
inc
call
sbb
jge
test
inc
leave
mov
sub
ds
pop
inc
mov
gs
cli
sbb
mov
pop
and
test
(bad)
(bad)
(bad)
jmp
xchg
push
inc
test
push
pop
jno
call
mov
enter
in
fsubp
(bad)
(bad)
(bad)
jmp
test
test
jnp
bound
rol
add
mov
and
sub
(bad)
dec
mov
or
xchg
push
add
movs
arpl
je
inc
jp
mov
jmp
mov
fcmovu
loope
(bad)
mov
adc
sti
mov
sub
sub
dec
fcmove
arpl
outs
pop
inc
scas
sahf
lea
outs
or
(bad)
mov
mov
dec
outs
sbb
jge
and
pop
icebp
(bad)
cld
jp
jmp
lods
jmp
mov
sub
(bad)
(bad)
(bad)
jmp
cli
scas
xchg
dec
xor
sti
dec
or
inc
dec
mov
ins
or
outs
cli
in
dec
sub
xor
in
adc
call
xor
movs
out
out
adc
(bad)
fist
add
jp
(bad)
dec
cmp
movs
and
rcr
ss
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
sbb
icebp
test
jbe
leave
mov
fbld
cwde
pop
call
push
xchg
mov
scas
cmp
movs
cmps
jne
sub
sbb
mov
pop
es
call
jl
dec
dec
xor
push
mov
mov
xor
jg
(bad)
dec
cli
jp
(bad)
jb
sub
xchg
and
sar
mov
pushf
retf
loope
jns
movs
push
sub
cmp
out
(bad)
(bad)
(bad)
jmp
fstp
xlat
leave
mov
int
sub
jl
cmps
dec
lods
pop
pop
jl
repz
mov
cmp
jmp
movs
ret
loop
xor
xor
call
push
inc
mov
ds
loopne
push
ret
sub
call
mov
stc
or
xchg
lock
mov
icebp
stc
test
icebp
push
add
shl
mov
and
adc
cwde
and
push
(bad)
mov
loop
int
and
pop
pop
iret
scas
cld
sti
mov
pop
mov
stos
aaa
mov
mov
ror
sbb
out
int
mov
cmp
loop
sub
fild
movs
or
mov
bound
cld
xchg
mov
xlat
jle
(bad)
(bad)
dec
adc
or
add
loop
cmps
test
push
mov
movs
push
jmp
mov
dec
pop
mov
cs
ret
fisttp
inc
mov
sbb
add
jmp
and
ret
mov
mov
dec
outs
jecxz
(bad)
(bad)
call
cmp
mov
mov
pop
test
cmp
xor
test
je
(bad)
(bad)
push
inc
repnz
lds
pop
scas
stos
push
stos
ret
mov
rcr
cli
xchg
pop
aaa
add
out
xchg
(bad)
fbld
cmp
jmp
push
cmp
mov
sbb
(bad)
(bad)
(bad)
dec
cmps
mov
stc
loop
call
loope
pop
jle
sti
jmp
(bad)
dec
adc
mov
mov
xor
mov
dec
mov
xor
xor
mov
(bad)
mov
inc
adc
dec
(bad)
(bad)
push
pop
mov
cli
push
mov
sub
push
sar
call
out
mov
mov
ret
jno
ss
retf
shr
outs
stos
jbe
inc
jg
popa
inc
clc
stos
cmp
rol
dec
pop
ds
push
std
pop
add
push
jmp
(bad)
int
(bad)
aaa
sub
dec
lock
shl
sbb
mov
lea
add
(bad)
(bad)
(bad)
jmp
sbb
mov
(bad)
clc
loopne
jp
ds
out
push
pop
and
jecxz
sub
ja
(bad)
call
into
call
jp
add
outs
rcl
mov
pusha
(bad)
mov
push
fistp
dec
cmps
push
mov
pop
sar
or
ds
enter
popa
cld
(bad)
dec
sub
sub
call
into
popa
rcr
jmp
push
ins
fld
enter
call
push
test
(bad)
(bad)
out
mov
movs
test
add
cmp
jnp
fcomp
(bad)
(bad)
(bad)
jmp
into
inc
xlat
ror
sbb
pop
mov
or
or
jns
cli
add
add
sahf
xor
inc
cld
jmp
xor
mov
rol
mov
ins
sub
jmp
fbstp
add
into
add
cld
addr16
psubd
loop
or
jp
pop
std
call
xchg
push
pop
push
jnp
pop
popa
or
call
jbe
mov
and
jg
fidivr
add
inc
das
mov
out
gs
dec
sub
(bad)
jg
xchg
dec
push
out
mov
push
test
push
call
jge
add
mov
push
sti
(bad)
(bad)
call
adc
sti
push
mov
leave
lods
push
rol
mov
bound
scas
mov
lods
mov
pop
jo
test
scas
mov
in
(bad)
(bad)
call
push
mov
mov
call
push
movs
pop
cmps
mov
sub
(bad)
(bad)
push
loop
test
das
aam
push
stos
shr
pop
add
sbb
xchg
jae
dec
dec
sbb
sub
pop
mov
jo
in
xchg
fldl2e
add
loopne
clc
pop
mov
lods
ja
mov
fnstsw
(bad)
call
and
pop
and
iret
and
das
push
loope
jne
or
call
adc
in
rcr
movs
dec
pop
ror
imul
js
mov
(bad)
(bad)
(bad)
call
mov
stos
dec
sub
or
mov
stos
jne
and
mov
pusha
cmp
mov
jmp
mov
data16
(bad)
(bad)
jmp
sub
addr16
scas
cs
das
jae
outs
outs
scas
out
sub
(bad)
(bad)
(bad)
cmp
mov
mov
out
cs
and
clc
(bad)
jg
cmps
xchg
aad
cmp
dec
stos
mov
and
xchg
inc
loopne
into
nop
ret
mov
adc
and
out
dec
mov
mov
leave
sbb
aad
push
movs
pop
push
cmp
sar
mov
(bad)
(bad)
push
and
into
mov
stos
or
lock
cmps
adc
adc
nop
adc
or
(bad)
mov
push
mov
jge
cmp
cs
and
int
add
(bad)
(bad)
call
sub
sub
jne
sbb
or
pusha
andnps
das
push
push
addr16
and
(bad)
mov
mov
(bad)
call
repnz
(bad)
(bad)
jmp
cmp
(bad)
retf
(bad)
enter
mov
push
inc
loope
(bad)
(bad)
mov
and
mov
fwait
and
xchg
inc
mov
add
loope
aaa
adc
in
add
das
mov
clc
dec
fcomp
js
(bad)
push
(bad)
in
mov
fs
jmp
ror
into
pop
jmp
(bad)
dec
popa
jns
enter
cmp
mov
icebp
jg
call
stos
(bad)
cmp
outs
(bad)
jmp
cmp
retf
cmps
sub
sub
mov
pop
leave
adc
add
(bad)
jmp
dec
jl
push
jb
sub
add
push
xchg
inc
rcl
sub
(bad)
ficom
out
xor
addr16
in
mov
(bad)
(bad)
push
cwde
scas
mov
push
or
mov
jb
push
fistp
loope
mov
inc
outs
(bad)
(bad)
(bad)
push
push
mov
pop
inc
jo
jmp
jmp
sub
push
push
fistp
sbb
push
mov
add
jbe
jmp
(bad)
(bad)
call
jge
ret
retf
mov
stos
inc
ret
jmp
dec
stc
add
das
cli
jmp
lahf
xchg
call
or
mov
fbld
fnsave
cmc
call
push
popa
pop
ja
xchg
(bad)
(bad)
(bad)
jmp
arpl
sti
mov
mov
fmul
mov
data16
push
adc
sbb
bound
repz
sbb
(bad)
rcl
(bad)
jg
cmp
xchg
add
call
push
retf
push
xor
int
add
into
or
pop
std
(bad)
(bad)
(bad)
mov
imul
push
in
dec
cmp
cmp
adc
cmp
(bad)
jmp
push
or
add
mov
ja
push
xor
and
ins
fiadd
(bad)
(bad)
call
and
enter
and
(bad)
lock
and
inc
jb
mov
(bad)
(bad)
(bad)
dec
jp
push
ja
or
fs
sahf
mov
jp
cwde
ret
std
push
or
mov
rol
or
push
lods
gs
and
cli
mov
rcl
mov
mov
add
jmp
(bad)
cmps
pop
mov
push
mov
popa
pop
call
jmp
inc
pop
movs
call
aaa
mov
fucomip
cs
retf
jl
pop
xabort
cmps
(bad)
out
push
and
sbb
jl
add
pop
stc
or
or
jecxz
test
xor
call
and
push
mov
(bad)
call
sub
push
adc
sub
jmp
cmp
pop
out
fs
jp
(bad)
mov
ret
xor
mov
dec
fistp
mov
inc
xchg
fisubr
into
(bad)
(bad)
(bad)
jmp
js
push
dec
movs
jo
push
mov
stc
movs
ret
mov
int
pushf
inc
out
(bad)
inc
in
(bad)
and
mov
xlat
out
inc
jmp
ret
jmp
add
retf
ds
sar
stos
(bad)
dec
mov
retf
outs
xchg
pop
hlt
call
pop
mov
in
inc
movs
aam
test
adc
cli
push
cdq
inc
lods
in
mov
mov
xor
pop
lods
xchg
xor
(bad)
push
cs
xor
(bad)
(bad)
cmp
push
cmps
stos
pop
mov
mul
shl
inc
mov
cdq
pop
(bad)
jmp
and
pushf
scas
out
xchg
add
(bad)
sub
or
stos
jno
dec
(bad)
(bad)
pop
mov
sbb
xlat
lea
(bad)
mov
imul
and
(bad)
(bad)
(bad)
call
ja
lods
stc
jnp
push
xor
cmps
call
ds
inc
and
call
jecxz
dec
inc
jp
std
sub
retf
jg
(bad)
(bad)
(bad)
(bad)
call
dec
adc
or
(bad)
out
stos
push
ds
xor
dec
scas
pop
(bad)
(bad)
(bad)
cmp
cli
add
cmp
js
popa
enter
xchg
lock
ja
mov
or
imul
in
imul
(bad)
call
jmp
in
cmp
(bad)
mov
mov
fnstcw
shr
jg
or
add
adc
sub
push
lods
inc
cmp
jmp
add
push
pop
push
sub
fs
retf
mov
mov
ja
jle
je
pop
loop
mov
xor
pop
sub
call
std
in
or
fwait
inc
in
mov
in
mov
push
mov
movs
dec
sar
imul
xchg
lods
cld
test
xor
sbb
stos
sub
add
test
mov
jmp
dec
in
push
ror
pop
aad
sti
stos
mov
retf
adc
or
dec
es
add
(bad)
(bad)
mov
stos
fcom
and
(bad)
or
in
and
mov
pop
aas
(bad)
(bad)
(bad)
fistp
out
test
clc
lock
shr
cdq
sub
or
iret
sbb
sub
(bad)
(bad)
dec
and
mov
int
ret
mov
idiv
fs
sub
cmp
mov
imul
jmp
fstp
call
fwait
std
cmp
test
stc
jmp
sub
stos
shr
sub
and
(bad)
(bad)
call
ins
jmp
test
out
fldenv
mov
sbb
push
inc
sbb
xor
sar
outs
push
pop
clc
(bad)
xor
mov
hlt
(bad)
(bad)
jmp
(bad)
stos
add
adc
jp
test
push
cmc
popf
call
ffreep
mov
in
mov
mov
cmps
(bad)
jmp
push
retf
retf
mov
inc
mov
xchg
mov
dec
fimul
imul
or
lock
add
idiv
jmp
sub
scas
mov
daa
outs
leave
dec
cli
vmovaps
or
ja
(bad)
call
sub
lahf
mov
(bad)
mov
mov
mov
sar
in
mov
xor
inc
outs
inc
add
fnstcw
loopne
adc
cmp
fwait
and
mov
das
push
mov
push
cmp
inc
pop
or
std
outs
retf
dec
add
push
test
(bad)
(bad)
out
mov
stos
sub
adc
test
cmp
cdq
outs
mov
dec
out
mov
inc
jo
mov
mov
movs
pop
pop
les
loop
scas
xchg
bound
push
repnz
mov
adc
mov
frstor
outs
cli
(bad)
(bad)
jle
clc
dec
mov
fisubr
sbb
test
ficomp
or
leave
mov
dec
mov
or
mov
outs
mov
or
mov
out
mov
or
and
xor
in
enter
sbb
inc
cmp
(bad)
(bad)
call
jb
scas
in
mov
xor
outs
sbb
or
jmp
sub
mov
sub
lods
lock
jp
pop
mov
enter
sbb
pop
rcl
cmp
std
cs
adc
fcomip
jmp
mov
xor
pop
ins
test
adc
sbb
(bad)
(bad)
call
jnp
std
dec
call
(bad)
call
mov
pusha
(bad)
(bad)
dec
cmps
push
movs
sub
fwait
dec
mov
loopne
addr16
jecxz
jne
mov
mov
(bad)
(bad)
ja
ret
inc
or
jmp
sbb
call
adc
aaa
xchg
jb
mov
sbb
jl
sub
add
(bad)
jp
imul
inc
(bad)
jg
fs
sbb
loop
aaa
in
inc
fmul
lock
std
call
mov
pop
fld
mov
movs
mov
daa
sbb
jmp
inc
or
ret
mov
popa
xchg
fstp
mov
adc
ss
movs
jmp
loop
cmps
mov
jmp
in
das
iret
test
into
shl
dec
retf
cmp
sub
xchg
mov
sub
scas
xor
rep
in
xchg
mov
cwde
mov
out
add
mov
inc
ins
add
pop
jp
cmps
fwait
mov
push
cli
pop
and
out
test
adc
push
sub
inc
jnp
mov
(bad)
(bad)
push
outs
adc
mov
xchg
jecxz
mul
lock
pop
push
movs
lock
fild
pushf
cli
mov
imul
out
xchg
pop
mov
shr
bound
cmps
call
push
jmp
dec
loop
les
out
cs
jmp
adc
and
push
mov
fisubr
sbb
and
mov
stos
sbb
(bad)
inc
push
mov
xor
mov
jl
lods
lea
cli
xchg
fcom
pop
inc
iret
mov
cmps
das
push
mov
pop
ins
enter
stos
(bad)
in
mov
aad
mov
sub
(bad)
(bad)
in
dec
pushf
push
push
mov
fstp
pop
mov
in
fidivr
out
pop
ret
shr
sub
inc
lods
cmp
repnz
(bad)
call
add
call
xor
sub
call
pop
fcomp
fidivr
loopne
gs
xor
outs
into
outs
sub
loopne
(bad)
jmp
sub
in
rol
xchg
or
sbb
inc
fbstp
and
sub
(bad)
fbld
and
dec
lahf
lods
addr16
pop
aam
mov
jmp
sub
inc
pop
xchg
adc
jp
push
push
or
outs
xchg
sbb
out
or
cmps
lea
mov
hlt
cmp
lods
push
fcom
ror
fs
lds
fild
enter
inc
pusha
inc
into
das
(bad)
dec
mov
push
pop
mov
mov
loop
outs
outs
imul
loop
mov
(bad)
fcomip
xchg
add
aaa
inc
jl
mov
mov
neg
xchg
dec
push
xlat
(bad)
(bad)
dec
int3
xor
xor
ret
stos
pop
sub
(bad)
out
mov
mov
sub
jb
push
sub
pop
in
pop
retf
lea
mov
xchg
push
push
mov
out
fwait
sub
push
jle
aam
lods
push
add
jmp
loop
fbstp
push
cmp
push
mov
inc
dec
call
cmps
(bad)
cmp
test
mov
xor
push
daa
push
cmps
xor
test
or
sub
loopne
and
sahf
pop
lods
outs
fistp
dec
push
or
sbb
mov
dec
iret
sub
mov
mov
repz
pop
movs
xor
mov
enter
cmp
mov
adc
addr16
inc
pop
dec
in
fwait
movs
pop
out
and
dec
int
mov
adc
and
js
push
(bad)
mov
sbb
xchg
push
adc
call
fisub
test
pushf
or
sbb
sub
ins
shr
test
jmp
inc
sar
iret
and
call
or
push
pop
leave
shl
jnp
out
ins
jmp
or
loope
mov
pop
cdq
adc
xchg
sbb
sbb
sahf
lods
cmp
dec
inc
inc
mov
outs
repnz
test
(bad)
(bad)
inc
push
rcl
daa
mov
mov
mov
or
sbb
mov
(bad)
call
retf
imul
cmp
pop
push
scas
adc
dec
ret
rcr
mov
mov
nop
test
shl
pop
(bad)
fs
sar
(bad)
call
ret
enter
jle
push
cmp
mov
mov
jmp
test
in
loop
ror
cmc
inc
test
jbe
js
nop
(bad)
(bad)
(bad)
dec
xchg
sub
adc
jb
fist
jmp
xor
imul
cmp
test
call
imul
test
dec
jl
je
jb
lods
mov
popa
push
fnstsw
lahf
sub
inc
(bad)
cmps
es
(bad)
(bad)
jmp
cmp
sub
jp
jb
(bad)
(bad)
jmp
mov
daa
pop
jb
jo
lock
xor
jmp
(bad)
(bad)
(bad)
call
movs
or
cmp
test
jmp
push
fucomip
jmp
dec
lds
(bad)
(bad)
jp
inc
sub
push
cdq
lds
jns
in
xchg
inc
or
(bad)
jg
sbb
fist
sbb
inc
retf
int
sub
mov
jnp
(bad)
(bad)
inc
add
sahf
lahf
mov
mov
lods
xlat
pop
xchg
mov
mov
sub
jae
(bad)
(bad)
(bad)
mov
pop
push
pop
inc
jb
dec
gs
out
scas
pop
add
lods
(bad)
(bad)
(bad)
call
ins
daa
or
jb
push
lahf
js
xor
xchg
mov
not
inc
movs
std
fisttp
stos
dec
dec
loopne
imul
cld
aaa
cld
push
xor
mov
stos
jb
cmps
pop
sub
pop
outs
push
jb
(bad)
jg
dec
mov
jmp
iret
jmp
inc
mov
mov
mov
push
dec
sbb
add
jno
jge
jmp
pop
sub
jno
mov
push
sub
xchg
mov
cmps
mov
jge
nop
xor
and
test
lea
mov
pop
jecxz
adc
cs
clc
int3
sbb
xor
sti
push
dec
cmp
dec
test
icebp
sub
and
mov
lds
cmp
(bad)
(bad)
mov
and
push
push
in
sbb
pop
aad
cmc
mov
(bad)
jg
scas
jmp
push
call
inc
int3
mov
retf
dec
or
pop
mov
xor
cmp
inc
lods
jo
or
shr
mov
mov
(bad)
pushf
mov
ins
outs
jmp
pop
loopne
(bad)
mov
inc
and
and
sbb
mov
(bad)
call
retf
retf
xor
xchg
and
push
test
jmp
das
dec
and
scas
stos
xor
repnz
daa
push
test
inc
cli
ror
inc
enter
dec
clc
(bad)
fisttp
scas
mov
add
dec
push
mov
int
mov
div
fisubr
cli
cwde
and
les
out
sar
pop
inc
adc
add
mov
ret
cli
clc
ret
(bad)
cmps
lahf
in
(bad)
(bad)
dec
bswap
add
xor
(bad)
retf
out
loopne
lahf
stos
into
fwait
retf
ret
mov
or
mov
fwait
aam
or
in
jl
cmp
add
retw
(bad)
sti
mov
and
sub
push
(bad)
(bad)
call
scas
cmp
std
clc
push
fild
je
mov
mov
inc
(bad)
(bad)
dec
cs
xchg
iret
std
fistp
cmps
scas
movs
jmp
pusha
pop
sub
(bad)
(bad)
fbld
call
mov
(bad)
cmp
jge
and
(bad)
(bad)
(bad)
(bad)
cmp
pop
mov
push
xchg
jle
mov
in
movs
xchg
outs
pop
lods
sub
jle
push
sbb
and
xor
xor
neg
mov
dec
mov
aas
inc
mov
sbb
cwde
pusha
mov
(bad)
jg
cmp
pop
add
adc
add
mov
dec
push
shr
mov
vhsubps
(bad)
(bad)
(bad)
ficom
or
sub
sbb
inc
retf
xor
enter
in
pop
arpl
(bad)
(bad)
(bad)
call
pop
into
movs
mov
jp
sub
ficomp
xchg
daa
pop
cmp
sub
jg
pop
sahf
sub
adc
por
icebp
dec
xor
and
sub
bound
pop
push
lds
add
or
jb
add
adc
sub
push
dec
test
lods
inc
cld
(bad)
fidiv
test
sub
sbb
in
sub
(bad)
ret
or
(bad)
(bad)
(bad)
fist
lea
ins
sbb
out
cmp
arpl
xchg
cdq
mov
(bad)
jmp
loopne
mov
add
into
(bad)
mov
mov
mov
fild
out
dec
mov
call
push
loopne
aaa
pop
sbb
sbb
or
push
or
cmp
repz
sub
and
fiadd
lods
fcomp
mov
and
mov
(bad)
(bad)
(bad)
fbstp
bound
test
in
jmp
jo
inc
ds
mov
hlt
call
movs
mov
call
out
test
adc
pusha
xchg
jb
dec
dec
cli
(bad)
(bad)
(bad)
call
inc
and
jo
or
and
rcl
push
or
hlt
lods
cmp
push
std
(bad)
mov
sub
pop
retf
dec
push
lock
mov
pusha
and
adc
dec
jbe
mov
mov
jns
mov
xlat
(bad)
call
inc
cwde
dec
dec
in
sub
sub
or
sbb
sar
call
(bad)
and
lods
pop
sub
pushf
push
jle
hlt
mov
mov
call
adc
jae
xchg
pushf
loop
cmp
(bad)
(bad)
(bad)
jmp
ret
repnz
mov
clc
lahf
push
ret
(bad)
cmc
xchg
lahf
push
sbb
(bad)
call
push
dec
jmp
(bad)
dec
or
in
outs
cli
(bad)
fcomip
mov
std
ficomp
mov
test
mov
jae
mov
fbld
enter
cmp
mov
out
es
or
and
add
std
or
jle
mov
test
jg
(bad)
inc
adc
jmp
or
push
mov
xchg
imul
pop
(bad)
(bad)
(bad)
call
test
js
mov
push
fs
scas
xchg
dec
aas
retf
add
push
mov
(bad)
(bad)
(bad)
inc
cli
push
iret
loopne
mov
push
mov
loop
clc
or
mov
loope
mov
fdivr
sub
adc
hlt
test
dec
loop
jbe
out
(bad)
int3
jmp
(bad)
lods
sahf
iret
adc
clc
repz
pop
mov
call
cmp
retf
mov
pop
loopne
cs
fwait
xchg
std
retf
dec
push
(bad)
push
imul
push
jmp
mov
mov
lahf
gs
stc
scas
repz
add
adc
jmp
stos
dec
xor
(bad)
(bad)
jmp
enter
js
std
arpl
push
inc
pop
shl
adc
int3
inc
out
cli
push
les
(bad)
jmp
sar
jg
sub
lods
xchg
imul
jmp
ds
xor
shr
int
stos
or
sbb
lods
jl
inc
pop
hlt
or
push
ret
(bad)
jge
push
or
cmps
stos
(bad)
jmp
rcr
push
lods
jb
sbb
pusha
xchg
mov
sub
xchg
test
loop
dec
mov
pop
xor
or
(bad)
(bad)
(bad)
jge
jg
mov
sbb
out
jb
fisubr
retf
jle
repnz
sub
imul
push
stos
arpl
mov
sub
mov
sub
jo
loop
(bad)
cmp
push
jmp
xchg
sub
dec
xchg
dec
ins
ins
push
mov
cdq
and
rcr
ror
rcr
(bad)
(bad)
jg
mov
retf
pop
bound
std
adc
cmp
cdq
popf
imul
cmp
scas
push
mov
mov
imul
dec
mov
outs
and
push
fcomip
out
adc
push
or
or
ins
and
or
cmc
(bad)
(bad)
stc
push
mov
lods
and
jbe
or
sar
push
cmp
icebp
(bad)
mov
ins
(bad)
pop
pop
push
mov
push
data16
stos
jg
(bad)
icebp
es
jg
outs
fild
test
push
push
ins
cmp
in
enter
cmp
(bad)
(bad)
jmp
mov
jns
cmps
pop
push
retf
clc
xchg
cdq
mov
loop
jge
xchg
mov
ja
dec
nop
jge
clc
jmp
sub
xlat
or
nop
mov
push
(bad)
loope
dec
sar
out
daa
test
xor
mov
(bad)
adc
push
jmp
lock
mov
jmp
arpl
add
jl
cmps
inc
les
call
push
pop
mov
adc
(bad)
aas
sub
push
sub
test
or
or
mov
dec
(bad)
ins
pshufw
(bad)
dec
push
je
jmp
dec
iret
or
xor
jecxz
(bad)
(bad)
inc
test
loop
rcl
leave
fisttp
test
inc
mov
cli
jmp
aam
inc
cmc
(bad)
call
test
sar
xchg
call
inc
xor
movs
jmp
pop
ins
ss
adc
jmp
sub
(bad)
(bad)
call
shr
push
scas
int3
daa
jl
stos
ret
std
call
and
cmps
das
pop
(bad)
push
dec
xchg
(bad)
jmp
jnp
ret
jnp
movs
fisub
push
mov
push
mov
push
and
push
push
adc
jg
push
cdq
(bad)
(bad)
adc
xor
call
pop
jg
or
ret
push
jmp
je
(bad)
(bad)
(bad)
push
mov
ret
das
sub
frstor
out
call
sbb
jmp
sub
repnz
(bad)
scas
out
scas
sub
(bad)
jg
scas
and
test
aas
nop
pop
jmp
and
jae
sub
dec
jg
xor
cld
pop
ins
push
mov
sahf
sub
sahf
sahf
adc
jne
cwde
cmp
popf
adc
out
fisubr
mov
imul
in
stos
(bad)
mov
sbb
sbb
mov
dec
(bad)
(bad)
(bad)
push
mov
aaa
cs
repnz
lahf
jnp
mov
inc
dec
imul
push
pop
(bad)
cmp
inc
mov
(bad)
push
push
pop
jb
add
fadd
sub
jl
ret
lahf
iret
jb
add
jns
ret
hlt
mov
inc
fisubr
fisubr
call
aad
fist
rcr
jle
int3
adc
mov
and
sub
mov
dec
sbb
dec
jmp
(bad)
shl
jns
sti
mov
lahf
or
jmp
sub
jmp
pop
ds
sti
inc
xor
jno
cmp
or
add
and
scas
std
jg
pop
popa
adc
sbb
in
stos
mov
test
lock
(bad)
(bad)
(bad)
in
push
ds
(bad)
mov
sbb
mov
int
ds
mov
enter
icebp
(bad)
jmp
(bad)
fdivr
adc
arpl
rcr
lods
fs
xor
xor
mov
mov
cli
pushf
fst
xor
mov
add
(bad)
call
daa
pop
jmp
or
add
jnp
lahf
shr
(bad)
call
mov
cmps
pop
add
push
lahf
adc
(bad)
(bad)
inc
push
mov
pop
xor
inc
(bad)
sbb
mov
outs
add
mov
push
push
pop
adc
clc
mov
adc
sahf
data16
(bad)
(bad)
jmp
cmps
ins
call
jl
pop
test
push
icebp
adc
cli
pop
mov
dec
xchg
pop
mov
(bad)
(bad)
mov
dec
iret
add
inc
mov
push
imul
iret
sbb
(bad)
jg
cs
push
cld
cwde
pop
ins
cmc
stos
dec
fdiv
cmps
in
mov
sahf
pop
mov
push
inc
mov
(bad)
(bad)
(bad)
push
mov
inc
(bad)
and
gs
mov
stc
dec
jl
call
(bad)
dec
cmps
xor
repnz
retf
outs
jae
pop
or
push
ficom
dec
in
mov
mov
fadd
mov
iret
out
sar
jecxz
or
mov
scas
sbb
dec
sbb
push
std
adc
jae
jno
xor
dec
test
pushf
loop
(bad)
jg
shr
and
cmps
loopne
add
cmp
arpl
adc
(bad)
(bad)
mov
jo
adc
xchg
stos
or
mov
mov
(bad)
xchg
cmps
icebp
push
push
ret
retf
pop
lahf
sub
mov
movs
mov
sahf
xor
(bad)
jmp
adc
pusha
push
je
neg
test
rcl
ja
test
cbw
(bad)
fist
ss
and
(bad)
(bad)
(bad)
call
stos
imul
mov
nop
mov
jg
iret
or
pop
jmp
jmp
pop
sub
push
(bad)
inc
or
xchg
push
(bad)
test
xchg
punpcklbw
lods
(bad)
(bad)
call
xlat
dec
push
xor
fld
es
pop
movs
loop
fcomip
outs
xor
mov
cmp
dec
cmp
(bad)
mov
ret
lods
dec
mov
jns
repz
fbstp
add
xlat
push
jmp
je
sub
mov
or
pop
xchg
pop
jbe
outs
sub
cmps
imul
(bad)
(bad)
call
dec
push
cmp
inc
cmp
push
cs
call
adc
sub
cmp
fnstcw
ret
jbe
pop
cwde
in
(bad)
(bad)
(bad)
jmp
mov
jmp
push
xchg
call
xchg
mov
mov
mov
jge
push
stos
(bad)
(bad)
(bad)
mov
mov
or
mov
dec
mov
pop
dec
loop
ret
xchg
(bad)
jg
rcr
dec
cmp
in
mov
mov
(bad)
(bad)
mov
cmp
inc
cmps
mov
cmp
cmps
sub
xchg
and
inc
xchg
(bad)
(bad)
(bad)
jns
jno
sbb
mov
aam
inc
pop
adc
loopne
ret
fnstcw
pop
loop
dec
adc
(bad)
cmp
push
sbb
jmp
mov
jmp
movs
inc
xor
mov
je
shr
add
adc
mov
out
out
xor
loop
ins
push
mov
push
ret
inc
add
or
(bad)
(bad)
(bad)
fist
pop
loop
cmps
sbb
outs
ja
add
or
in
clc
loopne
jo
dec
(bad)
(bad)
mov
xor
in
and
jmp
cmp
cmps
or
inc
js
(bad)
(bad)
jmp
into
jmp
cmp
add
dec
cs
scas
sub
xlat
mov
test
gs
cmp
cmps
cwde
ss
cmp
(bad)
jg
cmp
dec
das
pop
cmp
(bad)
clc
mov
add
outs
clc
call
mov
mov
xor
fld
cmps
or
ins
jecxz
add
dec
cwde
cwde
sub
call
cmc
call
(bad)
out
or
jmp
push
jge
sub
call
call
jb
bt
pop
mov
call
fwait
cld
(bad)
(bad)
call
and
xchg
ins
cmps
(bad)
sub
pushf
or
mov
add
jns
cmp
jecxz
pop
cli
pop
jge
mov
inc
pop
pusha
pop
mov
jno
mov
jmp
xchg
(bad)
(bad)
(bad)
jmp
lea
push
sub
enter
pushf
pop
mov
xchg
sub
sub
(bad)
call
ja
mov
in
or
jp
sub
outs
inc
cli
xchg
pop
lods
in
(bad)
(bad)
(bad)
(bad)
out
xor
mov
jmp
adc
dec
sahf
cwde
lea
sub
das
movs
xchg
and
add
scas
aaa
stos
sar
cmp
call
test
in
(bad)
fisubr
int3
xor
aaa
jb
push
sbb
std
sbb
mov
das
stos
pop
out
inc
call
cld
mov
xor
mov
adc
and
enter
sbb
clc
jb
sub
push
std
dec
sbb
aaa
pushf
mov
mov
ins
cmp
adc
iret
dec
stos
jp
push
xor
sub
loopne
std
inc
mov
pop
call
inc
push
push
stos
fwait
es
cmp
int
xchg
mov
sbb
xchg
pop
int3
xor
lods
sub
jb
imul
sahf
xchg
mov
jp
pop
xchg
pop
or
neg
call
add
push
sub
sub
pop
inc
shl
sub
(bad)
(bad)
push
xlat
pop
in
retf
les
std
pop
pop
xor
sbb
test
dec
jno
je
(bad)
(bad)
(bad)
jmp
push
jmp
jg
jbe
jp
pop
sub
or
and
xchg
outs
es
(bad)
jmp
or
lea
(bad)
push
dec
mov
das
or
xchg
in
and
scas
or
inc
push
(bad)
(bad)
(bad)
jmp
xchg
sar
pop
(bad)
test
das
call
shl
jno
or
into
cmp
sti
mov
movs
inc
cli
pop
jmp
fcomp
adc
jo
mov
call
out
(bad)
cmp
ficomp
repnz
push
aas
loop
mov
sbb
call
stos
call
(bad)
nop
stos
push
push
push
scas
retf
jns
retf
sar
dec
(bad)
(bad)
(bad)
(bad)
jns
cwde
jns
sub
or
jns
sub
add
test
push
pop
mov
jmp
(bad)
(bad)
jmp
nop
icebp
es
adc
loop
xor
push
lods
mov
fs
xchg
cmps
(bad)
(bad)
jmp
dec
cs
fisttp
loop
jnp
adc
int3
jno
js
mov
std
(bad)
push
std
jle
(bad)
pop
xchg
sub
sar
sbb
sbb
stos
inc
sar
(bad)
mov
and
out
out
ror
(bad)
(bad)
mov
sahf
loopne
in
imul
sbb
(bad)
sbb
sub
mov
adc
sar
mov
mov
(bad)
(bad)
jmp
add
cmp
clc
adc
cmp
popf
push
inc
fisttp
mov
add
dec
xchg
add
shr
imul
movs
dec
sub
lea
loope
adc
in
outs
imul
sub
(bad)
(bad)
out
and
jge
dec
sbb
mov
mov
test
cmp
sub
icebp
out
push
lods
jg
imul
(bad)
das
outs
movs
add
(bad)
jo
leave
popa
mov
mov
push
arpl
(bad)
call
inc
cmps
push
inc
lock
sbb
scas
cmps
js
(bad)
(bad)
(bad)
jg
adc
out
stos
add
cwde
sub
retf
ret
mov
(bad)
cmp
jmp
fsubrp
das
xchg
movs
mov
cmp
cmp
mov
cs
test
push
jecxz
or
(bad)
mov
(bad)
xchg
jecxz
stos
sub
fisubr
inc
mov
lahf
mov
(bad)
jmp
das
movntps
sub
jmp
call
repz
(bad)
(bad)
call
sbb
ja
je
(bad)
ret
or
lods
mov
out
mov
xor
in
repnz
outs
dec
in
cld
(bad)
inc
mov
pop
jecxz
cs
or
xchg
pop
in
outs
vcvttsd2si
lock
lock
sbb
(bad)
jmp
scas
add
(bad)
jmp
sub
cmp
lods
dec
mov
or
fild
mov
shr
push
pop
(bad)
cld
jb
jns
es
jg
(bad)
jmp
inc
sbb
addr16
ins
sti
das
in
imul
jp
orps
lods
call
stos
adc
movs
ss
std
into
or
jne
fisttp
(bad)
(bad)
call
inc
retf
popa
cmps
imul
je
cmp
ds
lds
fcmovne
out
mov
(bad)
(bad)
(bad)
(bad)
mov
or
pushf
std
lahf
loop
lahf
xor
jecxz
jnp
imul
lods
popa
cmp
(bad)
(bad)
jmp
call
mov
psrlq
rcr
sbb
or
js
cld
fisttp
sub
enter
jle
clc
jmp
adc
mov
xor
fcom
push
xor
(bad)
push
sub
lea
in
ror
sti
movs
dec
(bad)
push
leave
ret
inc
test
mov
leave
and
xor
test
ds
and
das
clc
cmps
cmps
repnz
jp
scas
iret
(bad)
out
ins
outs
scas
cdq
inc
fist
xchg
jmp
mov
nop
inc
cli
cmps
ins
(bad)
shr
sbb
or
(bad)
(bad)
inc
mov
rcr
aad
test
sub
lea
test
in
lods
jl
xor
mov
hlt
test
loopne
cld
(bad)
out
call
out
dec
pop
sub
jle
popf
jnp
sub
movs
test
mov
sub
xchg
mov
lods
inc
(bad)
jmp
cli
sbb
adc
cmp
add
sbb
sub
popf
xchg
jmp
push
xor
mov
outs
loopne
(bad)
call
cdq
sbb
sub
jns
imul
xchg
mov
mov
icebp
push
mov
jmp
mov
stos
mov
jmp
repnz
shr
xchg
and
(bad)
(bad)
(bad)
jmp
nop
mov
dec
add
push
aam
outs
leave
add
pop
xchg
into
(bad)
(bad)
(bad)
dec
mov
dec
ss
sahf
mov
mov
dec
es
pop
dec
mov
push
mov
mov
xor
jle
aaa
outs
mov
pop
call
mov
popf
adc
lods
jp
fdivr
jae
fcom
mov
(bad)
(bad)
(bad)
jmp
mov
jecxz
mov
jb
mov
(bad)
cmps
pop
push
cmp
stos
inc
push
leave
clc
(bad)
(bad)
jmp
xchg
jecxz
jl
ror
cmp
movs
in
and
(bad)
aas
sbb
scas
call
adc
jmp
push
add
and
inc
inc
int3
loop
std
aaa
cld
mov
fdivp
adc
push
dec
mov
das
mov
mov
jge
and
fwait
(bad)
(bad)
jg
js
adc
jg
dec
mov
mov
push
push
cmps
push
cs
(bad)
inc
xor
loopne
popa
pop
inc
cmp
jle
scas
xor
mov
shl
repnz
and
sti
(bad)
(bad)
(bad)
dec
or
ds
pop
and
dec
add
div
fistp
cmp
(bad)
inc
call
adc
ret
sub
xchg
jnp
stos
outs
repz
or
sub
scas
fist
loopne
and
hlt
mov
cmps
cmp
shr
(bad)
sub
(bad)
push
and
sub
lods
scas
in
popf
stos
and
push
imul
jecxz
sub
(bad)
push
jmp
loope
test
cs
cmp
and
xor
mul
sbb
stos
cmp
jg
(bad)
sbb
out
dec
pop
mov
arpl
mov
clc
daa
fwait
cmc
and
mov
jmp
or
or
xchg
call
add
ret
bound
test
loopne
mov
mov
cli
add
jne
sub
loop
aaa
in
retf
mov
jns
sbb
inc
inc
jns
sub
jg
mov
xchg
sbb
xchg
(bad)
xchg
add
test
rcl
mov
fimul
pop
xchg
fisub
std
pop
pop
mov
mov
push
mov
scas
jbe
add
push
stos
sbb
lods
pop
std
jp
mov
(bad)
push
enter
mov
inc
jmp
sahf
adc
fst
daa
inc
movs
pop
push
or
push
leave
test
or
enter
jo
jmp
push
ins
xchg
adc
(bad)
shr
jns
mov
and
or
pop
arpl
aas
movs
add
pushf
stos
mov
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jmp
das
push
leave
retf
mov
jge
jmp
neg
mov
(bad)
(bad)
jmp
sub
jmp
dec
call
sub
rol
clc
cld
sub
out
loop
jmp
mov
jae
dec
in
adc
fistp
call
xchg
sub
sub
pop
dec
pushf
fcmovnu
adc
frstor
or
jg
test
and
jle
sbb
add
mov
cmp
jp
or
pop
cmp
idiv
or
jmp
add
in
scas
push
pop
fs
cmc
jmp
mov
je
pop
out
scas
cmc
adc
cmps
xchg
sbb
(bad)
(bad)
(bad)
(bad)
jg
addr16
and
and
movs
mov
adc
or
movs
inc
sbb
inc
jmp
pop
cmp
lock
pop
aad
push
or
(bad)
mov
call
mov
jmp
mov
or
push
jb
(bad)
aad
xchg
cdq
mov
adc
mov
pop
aaa
sub
hlt
(bad)
call
fld
mov
push
lds
inc
and
leave
mov
sbb
jmp
and
jmp
dec
cmp
sti
mov
xchg
xchg
call
scas
pop
mov
jmp
(bad)
mov
es
dec
add
mov
mul
loopne
mov
arpl
jmp
ret
shl
inc
es
jns
rcl
(bad)
jmp
retf
enter
cli
push
xor
adc
jmp
push
cmps
imul
(bad)
(bad)
mov
cmps
and
fwait
lea
sbb
mov
add
mov
rcr
push
(bad)
push
mov
arpl
scas
shr
retf
push
pop
lods
scas
jo
dec
mov
adc
call
sub
js
dec
xchg
sbb
cdq
sub
(bad)
(bad)
js
ss
mov
clc
dec
jno
xchg
push
sbb
inc
xor
sti
stos
test
jae
fdivr
push
sub
retf
mov
mov
js
jmp
jmp
mov
ja
fsub
sbb
shr
push
sti
jmp
mov
mov
movs
stos
or
das
cmps
scas
outs
jb
push
mov
or
cmp
xor
dec
push
outs
xchg
icebp
call
xchg
push
or
es
and
jmp
inc
ret
jg
adc
jg
or
mov
pop
fidiv
pop
mov
hlt
jmp
loop
pop
rol
leave
sahf
fwait
and
push
pop
mov
fwait
pop
sub
sar
cmp
jmp
std
mov
mov
and
dec
or
imul
scas
push
lds
scas
test
inc
adc
stos
std
or
fdivr
adc
cmp
movs
xor
test
in
(bad)
(bad)
(bad)
inc
sahf
xchg
dec
cs
dec
push
dec
and
jb
push
pop
adc
sti
jg
dec
std
dec
jb
(bad)
push
push
xchg
cli
mov
push
jb
(bad)
(bad)
jmp
or
xchg
jb
push
mov
bnd
cmc
inc
daa
cmps
ins
push
jmp
jmp
push
cmps
xor
push
cmp
mov
or
mov
(bad)
(bad)
jg
pop
ds
aad
aad
cmp
adc
or
push
mov
fisubr
xor
add
js
push
mov
dec
test
(bad)
(bad)
jnp
or
or
shl
sub
addr16
sub
cmps
sub
sbb
std
(bad)
(bad)
(bad)
fsubr
fld
cmps
jp
xlat
in
cwde
outs
sub
test
cdq
and
(bad)
lods
sar
call
inc
xchg
bnd
test
pusha
into
ss
(bad)
call
pop
gs
movs
bound
call
push
lock
or
je
cmp
inc
and
dec
push
stos
push
daa
aad
(bad)
push
fldcw
or
cmp
mov
inc
cmps
out
mov
jmp
cld
cmp
loope
lods
imul
push
add
out
sbb
adc
ins
dec
sbb
(bad)
(bad)
jmp
sub
mov
dec
sub
repnz
stos
into
add
or
mov
call
js
jmp
jmp
loopne
sub
push
aaa
ins
std
jg
scas
and
sahf
pop
scas
test
mov
add
(bad)
jg
popf
cli
and
and
call
scas
mov
jg
mov
mov
test
mov
jmp
bound
ficomp
pop
std
enter
outs
sub
dec
jmp
dec
inc
(bad)
test
scas
imul
(bad)
call
pusha
xor
or
mov
dec
cmc
icebp
and
fsub
in
sbb
sub
into
mov
test
jae
into
mov
fnstenv
adc
and
(bad)
fild
std
cmp
adc
int
retf
mov
add
daa
aaa
(bad)
jmp
mov
mov
stc
bound
dec
shld
call
lock
inc
into
mov
out
or
and
test
inc
imul
das
cli
(bad)
in
nop
icebp
xor
cmp
add
out
and
sbb
leave
imul
jno
cmp
xchg
xor
ss
sbb
sub
cmp
cmp
aam
sar
cmc
mov
jae
test
sub
lods
sub
jb
aam
cli
fst
inc
(bad)
(bad)
(bad)
jmp
pop
imul
dec
push
pop
sub
repz
or
adc
mov
in
fstp
add
jb
and
int3
ins
pusha
scas
dec
sub
or
jno
xchg
mov
push
or
(bad)
jmp
cmps
movs
adc
imul
sub
dec
stos
dec
sbb
xchg
inc
and
inc
sub
sbb
xlat
les
mov
dec
je
dec
cld
fimul
cmp
push
jmp
sbb
lods
mov
sub
dec
mov
xchg
pop
inc
cmc
imul
adc
imul
push
enter
pop
into
imul
inc
xchg
(bad)
jmp
arpl
cmp
mov
cmp
cdq
repnz
adc
test
sub
outs
add
ins
les
imul
cli
sub
dec
cmp
mov
push
adc
in
or
dec
push
in
mov
mov
mov
fld
push
or
aad
test
mov
xlat
ror
bound
or
movs
ffree
add
mov
mov
inc
ret
jno
cli
stos
adc
data16
add
icebp
add
add
scas
dec
jb
imul
loopne
in
lock
pop
mov
cs
dec
and
jmp
jmp
sub
inc
mov
mov
xor
leave
fst
fdiv
rcl
jmp
mov
sub
es
pop
pop
les
(bad)
add
cmp
cmp
(bad)
(bad)
imul
mov
sbb
pop
js
fist
push
push
xchg
(bad)
scas
retf
xchg
loope
mov
cdq
lea
fild
cwde
cs
pop
xchg
call
in
mov
xor
xchg
mov
xor
das
push
inc
dec
sub
dec
int
aad
mov
cmp
xchg
mov
out
cwde
es
mov
pop
dec
adc
mov
adc
(bad)
call
push
inc
(bad)
xchg
out
rcr
push
xchg
int3
and
loope
mov
and
fwait
sub
icebp
mov
std
lea
sbb
dec
pushf
push
mov
fisttp
sub
cli
dec
xchg
movs
(bad)
(bad)
(bad)
jmp
loop
outs
adc
int
das
scas
dec
push
in
xchg
fcmovnu
cmp
xor
cwde
dec
std
add
mov
or
retf
mov
in
xchg
fbld
mov
in
push
adc
or
in
xlat
popf
and
xchg
fldcw
gs
pop
fwait
add
sbb
aad
les
loope
cmp
ins
cmp
rol
(bad)
(bad)
jmp
mov
dec
xchg
jmp
call
movs
sbb
(bad)
jg
lods
inc
enter
mov
outs
aad
rcl
out
push
xchg
test
pop
push
and
fsubr
jp
bound
call
push
xchg
shr
es
pop
ins
jp
stos
aas
add
cmps
cmp
ja
lds
shr
ins
sub
dec
arpl
adc
jmp
jge
xchg
push
cld
stos
shl
outs
jg
jo
push
sub
imul
mov
ds
jbe
and
sahf
sub
test
xor
pop
das
fsubr
sub
xor
push
pop
stos
pop
mov
mov
xlat
dec
out
mov
sbb
xor
js
dec
call
mov
stos
or
and
(bad)
(bad)
(bad)
jmp
cmp
jbe
xor
pop
adc
in
fdivr
sub
pop
(bad)
(bad)
(bad)
(bad)
jmp
test
and
in
mov
out
stos
imul
mov
cs
cli
ins
xchg
shr
das
inc
fidiv
jmp
lock
adc
call
add
clc
cwde
stos
dec
jg
addr16
dec
dec
inc
out
cmp
pop
into
xor
mov
es
push
xor
shl
mov
(bad)
(bad)
mov
mov
sub
ficom
mov
push
mov
mov
inc
(bad)
(bad)
(bad)
push
stos
lds
popf
mov
call
xlat
xor
inc
mov
(bad)
out
clc
push
into
adc
inc
dec
dec
fidiv
mov
jmp
cmp
movs
add
xchg
or
pop
mov
and
imul
inc
xchg
jle
es
mov
sub
inc
dec
dec
loop
(bad)
mov
mov
fucomip
lods
aad
jg
(bad)
inc
xchg
popf
arpl
aad
pop
iret
dec
cli
cmp
mov
outs
imul
jbe
(bad)
loopne
inc
aam
outs
push
shr
xor
sub
(bad)
(bad)
(bad)
fucomip
jmp
cmc
push
sub
sahf
jmp
add
(bad)
in
aas
cmp
xor
out
ds
xchg
into
(bad)
(bad)
(bad)
jmp
into
jl
int
or
lods
imul
sbb
jp
iret
xor
retf
xor
(bad)
(bad)
dec
scas
cmp
or
jmp
iret
int
jmp
inc
cmc
addr16
mov
cmps
lock
(bad)
(bad)
jns
jo
inc
mov
jb
push
fisubr
(bad)
ds
pop
pop
lock
jmp
adc
sub
xchg
sub
out
mov
(bad)
(bad)
(bad)
jmp
push
repnz
call
or
mov
and
aad
mov
(bad)
push
cld
and
xchg
xor
mov
fs
mov
inc
enter
out
ja
ins
fsubrp
daa
ja
pop
in
in
dec
stc
mov
xor
adc
mov
pop
mov
jb
(bad)
popf
sar
and
fisub
xchg
call
xchg
cmp
jmp
sbb
mov
and
ret
(bad)
(bad)
cmp
call
ins
stos
sbb
aam
out
scas
xchg
jmp
mov
sbb
adc
cmp
(bad)
(bad)
mov
(bad)
pop
mov
test
mov
inc
lds
sub
sub
arpl
loopne
aaa
push
icebp
xchg
sub
clc
icebp
xchg
inc
into
sbb
test
pop
add
cmp
and
ja
scas
fsubr
add
mov
pop
xchg
pusha
adc
fwait
push
cmp
das
push
sub
ins
xchg
pushf
mov
add
jl
(bad)
cmp
std
xchg
dec
cmp
dec
pop
sub
sub
arpl
arpl
int
inc
add
mov
pop
and
sub
clc
call
or
sub
mov
fs
jb
aad
jmp
pop
or
fcom
mov
cmps
adc
fcomp
shl
(bad)
(bad)
(bad)
call
jl
or
push
sahf
scas
xor
sub
dec
pop
in
adc
jbe
xchg
imul
sub
sub
cmp
inc
sub
jge
push
dec
mov
cmps
adc
mov
cmp
(bad)
adc
enter
lahf
xor
inc
sub
sub
call
(bad)
jmp
inc
stos
idiv
or
push
dec
cmp
adc
fwait
ror
jmp
adc
imul
mov
(bad)
xchg
and
and
enter
inc
movs
iret
(bad)
or
sbb
popf
imul
sub
(bad)
jmp
stos
stos
mov
sti
icebp
and
inc
fidivr
outs
repnz
fs
inc
jmp
bound
xchg
fwait
mov
int
sbb
in
(bad)
inc
call
(bad)
in
sti
fisubr
adc
jp
adc
fild
xor
dec
(bad)
out
adc
sub
push
dec
rcr
pop
cdq
in
or
inc
addr16
or
(bad)
(bad)
(bad)
ds
leave
jp
adc
cmp
adc
xchg
dec
mov
and
mov
inc
xchg
jns
(bad)
(bad)
(bad)
mov
cli
jp
daa
mov
(bad)
arpl
bound
sub
ins
(bad)
jmp
cs
adc
movs
mov
adc
movs
dec
out
mov
loope
cld
(bad)
fcomip
cmps
mov
sbb
scas
sahf
fnstsw
mov
add
jmp
stc
mov
js
xchg
xchg
in
jge
mov
fs
fbld
sub
stos
sub
pop
outs
sbb
mov
mov
test
sub
xor
out
cli
retf
inc
repnz
cli
mov
stos
call
mov
lahf
mov
imul
call
xchg
ss
mov
inc
in
dec
neg
dec
retf
or
call
lods
test
push
in
loop
mov
or
out
or
cmps
jmp
push
sbb
outs
movs
jl
jmp
jmp
sahf
in
ins
cld
icebp
mov
out
or
fbld
jmp
cwde
mov
push
das
rol
call
retf
(bad)
(bad)
(bad)
inc
jg
mov
test
jg
das
ret
adc
xor
rol
cwde
in
push
shl
sbb
(bad)
inc
pop
cmps
fs
xor
dec
cli
inc
stc
(bad)
(bad)
call
ds
stos
xor
xor
iret
jle
inc
mov
jg
ror
xchg
imul
jns
dec
push
iret
push
(bad)
cmc
in
(bad)
(bad)
out
xor
fcmovnb
stos
outs
sub
mov
movs
jnp
cdq
jmp
mov
inc
mov
pop
popa
jne
xchg
mov
shr
je
(bad)
iret
pop
test
push
dec
cld
call
mov
inc
cld
pop
mov
mov
pop
arpl
add
and
(bad)
cmp
xchg
retf
mov
daa
push
mov
lods
jg
test
add
and
sbb
push
in
mov
xchg
repnz
and
and
cld
aaa
add
and
mov
bound
in
inc
add
jg
mov
xchg
jo
sub
push
and
scas
pop
repz
jmp
lock
xor
jmp
call
jmp
and
movs
and
data16
dec
fcomip
loop
imul
mov
(bad)
dec
in
and
test
aam
out
mov
push
hlt
movs
lea
test
repz
inc
fnsave
inc
adc
imul
sbb
test
pusha
sti
pop
loopne
sub
das
repnz
imul
(bad)
xchg
lock
daa
lods
mov
dec
dec
iret
dec
in
mov
adc
pop
pop
shl
shr
loope
sbb
sub
mov
out
arpl
mov
ja
mov
js
popa
and
hlt
in
out
jmp
iret
push
shl
and
test
push
cld
(bad)
mov
pop
scas
sbb
movs
jle
std
test
loope
jecxz
scas
dec
xor
clc
inc
jp
or
in
push
jmp
cmp
pushf
cmp
push
pop
std
dec
(bad)
push
sbb
jb
xor
adc
cmc
imul
fwait
mov
data16
mov
stos
mov
jmp
fsub
cmps
dec
test
inc
ins
jg
retf
fwait
mov
jbe
(bad)
retf
mov
loop
or
fcom
add
test
imul
jle
sub
cli
inc
xchg
xor
push
jns
js
inc
sbb
into
mov
sub
fidiv
jns
rcr
pop
xchg
mov
sub
pop
or
fmul
cmp
xchg
and
loopne
mov
lods
pop
pop
rcl
pop
inc
shl
mov
push
ja
jecxz
push
push
gs
fst
leave
or
enter
cmp
dec
out
push
dec
inc
scas
outs
xchg
test
icebp
pop
pop
retf
mov
ror
sbb
bound
in
adc
push
rcr
cmps
inc
stos
movs
bound
cs
jmp
sti
mov
mov
sbb
lds
mov
sti
fistp
mov
jno
aad
dec
call
js
cmp
ja
pop
(bad)
(bad)
xor
pop
push
nop
pop
inc
lods
mov
sti
pop
lds
mov
mov
mov
pop
mov
inc
xor
push
or
mov
jo
retf
xor
mov
bnd
inc
mov
mov
pushf
xor
cmp
imul
(bad)
(bad)
fild
repnz
push
xchg
inc
pop
pop
sahf
(bad)
cmp
xchg
sbb
push
js
mov
scas
sub
jo
push
mov
jmp
mov
popf
jns
sbb
fs
addr16
out
mov
inc
cld
cmps
das
scas
ror
cmp
jo
std
popa
loope
stc
push
and
xchg
pusha
loopne
jecxz
(bad)
push
lahf
ins
(bad)
mov
xchg
out
sahf
xchg
enter
pop
jmp
(bad)
(bad)
push
dec
mov
mov
mov
push
add
inc
out
inc
stos
movs
xor
inc
lods
(bad)
into
mov
jle
std
mov
mov
push
pusha
xchg
mov
sbb
in
xor
fcomp
(bad)
daa
cmps
pop
stos
mov
sub
std
cdq
inc
ins
(bad)
sbb
pop
jns
xor
jmp
test
add
jo
into
movs
bts
adc
hlt
inc
enter
fbstp
push
leave
retf
fs
leave
imul
xchg
stos
adc
(bad)
adc
sbb
cmp
pop
mov
lds
sbb
jmp
imul
fsubrp
enter
push
inc
adc
jp
cmp
jge
mov
repnz
mov
and
cmp
inc
xor
push
sub
sub
jg
shr
les
pop
jle
fdiv
adc
dec
and
mov
mul
out
fadd
inc
pop
mov
hlt
sbb
mov
xor
inc
adc
adc
add
jmp
ins
xchg
lea
rcl
sbb
hlt
pop
mov
xchg
cmps
dec
(bad)
mov
cmps
es
jns
mov
jmp
mov
test
call
call
js
mov
aad
out
fwait
pop
mov
icebp
pusha
sbb
mov
mov
(bad)
mov
jbe
mov
adc
test
sbb
dec
mov
pop
loop
cli
push
pop
jo
cs
(bad)
xchg
pop
pop
mov
mov
mov
shr
out
inc
test
scas
loopne
fcom
xor
sub
cmp
(bad)
(bad)
jmp
push
(bad)
in
imul
mov
in
add
stos
or
cmc
and
sub
push
fs
movs
addr16
xor
repnz
out
data16
popa
and
mov
(bad)
repz
test
xchg
add
hlt
shl
ret
lds
les
push
shl
xor
aas
add
sbb
inc
xor
xor
imul
and
push
mov
jmp
popf
bound
sbb
sub
cli
sub
retf
fwait
pop
dec
pop
(bad)
fisttp
add
push
loope
loope
lods
mov
in
sub
jmp
mov
out
and
mov
imul
push
jns
in
popa
pusha
xchg
mov
fcmovnbe
test
cmp
retf
loopne
in
scas
retf
inc
mov
xor
ds
jbe
loopne
cmp
inc
adc
imul
adc
(bad)
mov
frstor
outs
sbb
shr
mov
mov
cmp
(bad)
cmp
add
dec
mov
pop
sahf
shl
(bad)
(bad)
(bad)
(bad)
push
xchg
adc
int
ja
cmps
pop
neg
mov
push
nop
shl
aas
(bad)
pop
out
jmp
lods
mov
jmp
push
inc
sbb
mov
or
fdiv
mov
pop
sbb
call
jmp
out
lds
(bad)
(bad)
dec
mov
pop
and
jmp
popa
sbb
dec
or
jg
sub
jmp
icebp
xchg
pop
imul
les
mov
inc
jp
xchg
scas
iret
mov
cmp
adc
cli
dec
outs
enter
push
inc
stos
mov
icebp
outs
(bad)
(bad)
jmp
sahf
cmp
pushf
adc
sub
pop
es
imul
jmp
push
ds
(bad)
jg
jl
add
inc
xor
hlt
pop
xchg
sub
(bad)
(bad)
mov
mov
add
sbb
imul
(bad)
adc
dec
or
retf
cs
push
call
inc
inc
mov
rcl
lahf
adc
iret
movs
sar
cli
call
imul
aad
aas
pop
ins
mov
(bad)
(bad)
inc
pop
stos
fxch
xor
xor
cs
stos
jne
fs
sbb
pop
arpl
inc
mov
adc
ret
pop
(bad)
dec
fst
dec
ror
sub
xor
call
xchg
rcl
xchg
xor
mov
(bad)
mov
nop
mov
mov
xor
and
jmp
sub
data16
ins
bnd
outs
(bad)
(bad)
jg
sbb
jmp
mov
push
(bad)
mov
pop
sub
mov
mov
(bad)
call
aaa
sub
rep
retf
cld
call
(bad)
out
or
cmp
in
sub
dec
pusha
pop
xor
lods
jmp
mov
data16
test
rcr
mov
lahf
or
int
into
pop
pop
(bad)
(bad)
(bad)
call
test
cmp
adc
or
lds
or
sbb
loope
mov
(bad)
(bad)
(bad)
ds
sbb
test
xor
sbb
clc
shl
(bad)
mov
cwde
(bad)
std
adc
lea
jl
adc
mov
cmp
xrelease
xlat
jecxz
(bad)
call
xchg
mov
lahf
xor
ss
ins
lods
cmp
mov
push
(bad)
dec
loopne
jl
std
cmp
in
mov
scas
jmp
jns
(bad)
not
lods
es
inc
dec
cmp
(bad)
mov
scas
(bad)
(bad)
(bad)
dec
mov
mov
cmps
or
dec
in
sbb
or
cwd
and
cmps
cmp
mov
mov
or
or
(bad)
(bad)
(bad)
call
jnp
dec
sbb
fwait
(bad)
adc
out
sub
and
pop
jmp
nop
clc
mov
cmp
sub
or
or
jb
push
xlat
fwait
adc
mov
pushf
dec
int
sub
inc
movs
push
(bad)
fstp
or
call
sub
add
adc
jmp
repnz
fcomp
adc
es
mov
outs
push
movs
inc
stos
pop
inc
stos
mov
cdq
fimul
hlt
(bad)
(bad)
out
mov
push
mov
and
push
mov
sahf
xor
mov
xlat
inc
stos
push
inc
inc
in
inc
ds
adc
sbb
iret
sbb
mov
xor
pop
push
lock
dec
push
pop
inc
mov
call
lock
cs
pop
mov
loop
mov
sbb
or
pop
jo
ss
(bad)
(bad)
(bad)
jmp
add
push
or
adc
jmp
cli
inc
out
test
lahf
xchg
ins
jb
adc
inc
xor
inc
sub
push
mov
sub
sub
jmp
les
daa
pop
addr16
test
(bad)
jg
jmp
push
or
repnz
or
dec
mov
neg
xor
(bad)
(bad)
jmp
jnp
xchg
and
mov
push
daa
mov
jmp
push
ficom
pop
mov
shl
jle
call
pop
leave
sub
cs
stos
xlat
(bad)
(bad)
(bad)
inc
outs
imul
dec
add
movs
repnz
cmp
scas
std
pop
icebp
(bad)
push
fwait
adc
mov
inc
imul
dec
clc
sbb
std
test
retf
lahf
cmp
(bad)
clc
xchg
icebp
sub
cs
ins
or
ss
jo
pop
sbb
test
or
scas
imul
push
(bad)
(bad)
call
mov
adc
sub
mov
jge
les
sub
(bad)
jg
call
jmp
imul
mov
stos
ds
test
mov
outs
add
(bad)
enter
dec
sti
lea
sub
push
aad
push
pop
ins
lods
imul
call
sub
pop
inc
es
push
inc
xor
mov
aaa
dec
sub
adc
add
mov
push
dec
and
mov
lea
fisub
test
and
movs
xor
ret
sub
sahf
jg
fcmovnu
sbb
je
mov
pop
jb
push
mov
out
(bad)
(bad)
(bad)
jmp
mov
stos
dec
push
push
cmp
jmp
arpl
test
xchg
scas
jecxz
cs
jmp
mov
cdq
push
dec
sub
mov
xor
and
pop
xchg
shl
cmps
sub
pop
loope
js
cmps
mov
(bad)
(bad)
call
out
popa
call
icebp
shr
sub
jmp
movs
es
inc
sub
sub
cmp
gs
cmps
mov
jmp
imul
cdq
push
lock
mov
jo
mov
mov
cwde
sbb
jmp
shl
mov
add
stos
mov
mov
mov
cmp
cs
dec
bound
dec
push
jle
cwde
sahf
sbb
out
movs
outs
clc
jo
into
(bad)
(bad)
jmp
test
mov
xor
jmp
in
call
nop
aam
add
(bad)
call
(bad)
push
int3
push
pop
lahf
int3
sub
hlt
stos
cmp
pop
mov
std
scas
inc
mov
xor
or
lea
(bad)
(bad)
jg
jle
sahf
inc
in
mov
jmp
mov
stos
int3
fdivp
dec
ror
imul
pop
inc
adc
sub
fsubrp
fisttp
dec
adc
fsubr
xlat
mov
sub
mov
xchg
pusha
imul
das
js
in
lods
nop
scas
mov
cmp
fs
mov
loop
cmps
gs
xchg
retf
dec
or
ins
push
int3
or
sub
mov
adc
dec
or
(bad)
jg
cwde
scas
call
pop
jmp
outs
fdiv
(bad)
(bad)
dec
sbb
mov
scas
dec
cmp
loope
inc
pop
enter
sub
(bad)
(bad)
dec
adc
neg
(bad)
mov
out
mov
in
xor
call
jnp
out
test
dec
daa
mov
fst
jnp
push
(bad)
mov
add
int
mov
pop
loopne
loop
cmps
add
cmc
mov
push
sahf
popa
mov
xchg
out
add
cmps
pop
inc
pushf
(bad)
std
cmp
(bad)
(bad)
call
das
test
in
shr
js
lods
in
call
(bad)
sti
inc
ror
in
arpl
leave
mov
or
ja
(bad)
scas
and
js
mov
sub
push
sbb
inc
cli
sbb
sahf
loopne
(bad)
(bad)
ficom
cmp
in
cmps
cs
cmps
stos
jb
xlat
bound
sahf
xlat
das
cli
adc
dec
out
mov
cmp
out
int3
jl
pop
jno
lock
cwde
test
call
jp
in
in
or
scas
into
dec
xor
mov
jecxz
movs
shr
(bad)
(bad)
jmp
bound
dec
adc
rcl
stos
int
into
stos
inc
bound
bound
pop
lods
push
outs
sub
(bad)
(bad)
call
adc
xchg
lods
cdq
pop
in
mov
lods
or
add
fstp
lahf
into
popa
ins
(bad)
lea
call
std
lock
fsubp
test
loopne
adc
test
mov
push
and
jne
std
and
(bad)
(bad)
call
pop
arpl
jle
call
fpatan
jmp
and
outs
jle
mov
and
add
es
in
scas
pop
arpl
cmps
jae
or
sbb
int
retf
add
mov
ror
xchg
jns
cmps
outs
lea
dec
mov
xor
xchg
popf
es
out
mov
or
adc
and
fcomip
(bad)
jmp
or
test
ret
push
ret
push
into
sbb
sbb
sti
mov
push
stos
sub
lods
(bad)
(bad)
jp
and
scas
jmp
add
test
inc
aaa
push
jnp
and
sbb
sub
xor
xor
outs
cmp
(bad)
(bad)
cld
dec
retf
call
sub
loope
shl
outs
and
addr16
arpl
and
or
or
ins
cmp
lea
cli
(bad)
(bad)
call
jge
adc
inc
jb
cs
hlt
pushf
sub
scas
or
in
xchg
mov
cmp
call
outs
mov
test
(bad)
(bad)
stos
test
mov
imul
test
not
movs
xchg
repnz
cmps
outs
in
popf
or
add
(bad)
(bad)
gs
enter
push
mov
add
or
lods
and
fwait
call
cld
dec
cmp
outs
jbe
sbb
js
jmp
(bad)
(bad)
call
jmp
mov
cdq
lds
stc
sub
fiadd
sahf
dec
aam
(bad)
(bad)
jmp
pop
mov
leave
movs
mov
stos
dec
dec
push
inc
ins
ret
ret
sar
push
sbb
(bad)
push
xchg
pop
cmp
pop
es
adc
outs
jmp
lods
mov
(bad)
(bad)
jmp
sbb
xchg
xor
in
scas
mov
sub
fldenv
rol
repnz
fiadd
add
retf
push
xchg
movs
push
mov
jmp
mov
dec
pusha
push
add
nop
out
adc
iret
cmp
shl
push
sahf
cdq
(bad)
mov
rcr
call
ret
out
mov
mov
inc
jo
outs
out
sub
mov
cs
(bad)
pop
lock
pushf
push
or
sbb
jp
sbb
add
and
mov
popf
jmp
(bad)
(bad)
mov
jno
mov
icebp
sbb
xor
dec
ret
lods
clc
push
(bad)
(bad)
(bad)
jmp
(bad)
retf
nop
repnz
mov
ret
mov
(bad)
jmp
arpl
push
idiv
outs
mov
xor
cs
shl
mov
sub
clc
ror
adc
call
(bad)
inc
aaa
out
aaa
xchg
pop
mov
call
enter
mov
ficomp
mov
add
int
add
pop
mov
rcl
mov
sub
sar
stos
push
dec
fdivr
adc
(bad)
(bad)
(bad)
ds
mov
div
sti
es
jnp
out
fcmovb
scas
push
push
adc
ds
cmp
inc
sahf
add
mov
ret
(bad)
call
xchg
(bad)
cmp
add
sub
arpl
pop
daa
and
out
inc
cmp
inc
inc
scas
and
mov
push
sbb
or
(bad)
(bad)
(bad)
(bad)
jmp
inc
cs
shr
scas
inc
cs
sbb
scas
inc
bound
ds
mov
call
hlt
scas
ss
(bad)
and
(bad)
sub
adc
inc
jmp
adc
mov
mov
or
repnz
(bad)
fdivrp
mov
in
pop
cmp
out
addr16
mov
xchg
adc
push
or
add
mov
pop
mov
ds
aaa
sar
cmp
mov
(bad)
ins
ins
push
clc
or
repz
cwde
jle
lods
cs
sti
gs
adc
outs
ficom
push
aas
jl
add
call
(bad)
(bad)
mov
in
in
mov
jno
lods
inc
ins
fld
pusha
ss
dec
xor
xor
test
(bad)
push
mov
xor
in
dec
inc
bnd
fidivr
sub
xchg
xchg
loope
fisttp
lods
push
jno
mov
inc
or
or
or
fcomip
fwait
imul
sub
add
mov
mov
adc
scas
mov
jmp
cli
xchg
popf
movs
sub
push
stos
(bad)
mov
mov
sub
rol
mov
push
xor
cdq
push
sbb
aaa
pop
and
sbb
in
pop
call
cld
(bad)
ds
sahf
inc
mov
jns
popa
adc
pop
rol
fild
inc
loope
rcr
mov
out
mov
icebp
ja
xchg
scas
aad
loope
pushf
adc
jp
mov
adc
(bad)
(bad)
dec
mov
(bad)
jmp
test
lock
and
imul
mov
inc
jmp
mov
imul
cmp
mov
(bad)
(bad)
call
cwde
pop
loopne
mov
mov
outs
sbb
ins
mov
mov
scas
in
stos
cwde
mov
movs
(bad)
cwde
lahf
test
dec
jmp
jo
mov
(bad)
(bad)
(bad)
ficomp
outs
sub
je
or
inc
mov
shl
int
mov
out
cli
jmp
js
js
fsub
ja
xchg
scas
es
push
frstor
ss
scas
jo
or
iret
(bad)
(bad)
(bad)
jmp
mov
push
jle
call
fiadd
push
out
sbb
adc
inc
mov
jle
add
inc
mov
adc
lea
iret
(bad)
call
je
sbb
(bad)
dec
ret
(bad)
jle
fild
sahf
lds
adc
jmp
mov
pop
pop
mov
xor
stos
push
push
jno
cld
and
pop
and
(bad)
(bad)
mov
addr16
cwde
test
ret
and
mov
popa
movs
xlat
fldcw
push
and
push
scas
fstp
xchg
mov
mov
cmps
push
mov
add
(bad)
(bad)
(bad)
jmp
or
(bad)
mov
jne
leave
ret
mov
repnz
xchg
iret
add
fs
mov
call
in
or
push
test
sub
dec
cli
inc
add
(bad)
out
sub
daa
xchg
sub
(bad)
cmps
cwde
mov
je
or
dec
mov
push
enter
mov
jmp
hlt
cs
in
fidivr
mov
adc
(bad)
jmp
ja
(bad)
dec
es
cmp
xchg
mov
xor
add
(bad)
(bad)
dec
test
jmp
dec
sub
xchg
call
ja
or
call
mov
jmp
push
pop
(bad)
sub
js
test
addr16
jb
mov
push
mov
lahf
aaa
sbb
push
sahf
mov
jle
inc
jmp
and
(bad)
inc
ret
ss
call
pop
mov
cwde
or
out
ret
dec
outs
push
xor
inc
or
cld
ja
clc
push
int
pop
scas
jmp
mov
mov
ds
retf
clc
cmps
mov
(bad)
jg
dec
outs
jg
cmovns
jno
add
lahf
xchg
cmp
daa
scas
call
mov
pop
test
sub
add
mov
dec
mov
push
retf
ins
mov
jmp
(bad)
jmp
std
xchg
pop
jecxz
jmp
pop
ret
pop
jmp
xor
test
pop
cmps
cmp
xchg
dec
jae
xchg
jb
pop
or
into
pop
xor
sub
shl
call
bound
or
pop
es
and
mov
dec
fild
in
mov
push
call
enter
jo
xlat
push
and
sar
(bad)
(bad)
(bad)
jns
jns
pop
dec
addr16
and
sahf
sti
push
outs
sub
jmp
in
ss
xchg
dec
push
mov
ss
rcl
mov
dec
cmp
jns
das
fild
retf
dec
test
bound
fisub
clc
cmp
push
ror
(bad)
add
(bad)
fcomip
(bad)
std
jg
mov
jl
jo
fidiv
xchg
xor
mov
call
jecxz
mov
push
out
iret
xchg
cmps
and
rcr
cmps
inc
cdq
neg
add
push
inc
sub
test
imul
(bad)
jg
(bad)
cmp
out
sub
in
mul
mov
mov
test
push
(bad)
call
xchg
adc
mov
and
ja
ins
sub
outs
stos
jmp
cs
stos
idiv
sub
pop
mov
cmp
(bad)
daa
lods
jg
(bad)
scas
inc
stos
fldcw
jg
loop
cli
(bad)
dec
fist
bound
push
pop
out
mov
fidivr
inc
xor
sub
cmp
test
mov
pop
sbb
push
sti
xor
call
sbb
inc
(bad)
in
pop
push
adc
xor
inc
jl
fadd
xchg
hlt
(bad)
fild
jmp
mov
(bad)
(bad)
jmp
jle
mov
arpl
add
stos
and
retf
test
ret
sub
jmp
(bad)
or
daa
dec
imul
jmp
ror
movs
pop
cs
pushf
leave
sub
je
jb
aaa
xchg
cmps
push
jmp
sbb
call
mov
or
jmp
(bad)
dec
(bad)
inc
jae
jns
sub
repz
jmp
lods
test
or
imul
jns
retf
call
cli
xor
mov
mov
pop
(bad)
mov
mov
cwde
cmp
xchg
mov
(bad)
(bad)
call
rcr
and
das
push
test
adc
scas
push
sub
mov
pusha
shr
imul
stos
stos
ja
pop
loop
push
adc
add
dec
jnp
mov
push
movs
outs
push
mov
add
xchg
test
retf
popf
push
lea
adc
(bad)
inc
push
dec
fs
aaa
imul
stos
push
push
retf
aad
cli
inc
int3
fs
dec
jne
push
retf
jge
(bad)
fimul
pushf
fwait
fwait
aam
or
mov
loopne
mov
(bad)
(bad)
(bad)
dec
shr
sub
repz
dec
adc
mov
(bad)
(bad)
(bad)
jmp
dec
fsubr
mov
and
ds
xchg
jb
mov
xchg
push
(bad)
xor
mov
mov
pop
cli
test
dec
(bad)
xlat
(bad)
(bad)
push
cmp
popf
mov
stos
mov
xchg
cli
sar
jl
idiv
mov
push
scas
daa
jl
sub
pop
mov
mov
mov
dec
idiv
test
cwde
mov
ins
jnp
(bad)
(bad)
(bad)
call
sub
xchg
mov
jecxz
repnz
loopne
xchg
lods
and
jmp
cli
idiv
jmp
scas
test
in
lods
xchg
jp
lahf
jp
call
xchg
lock
icebp
dec
enter
xor
pop
sub
fbld
dec
sub
mov
pop
iret
and
mov
lds
imul
dec
iret
lock
mov
cmp
dec
call
out
xchg
test
jmp
or
std
(bad)
mov
xchg
aad
mov
mov
movs
mov
lahf
ret
adc
sub
mov
inc
ret
ins
retf
(bad)
call
sahf
adc
mov
pop
aam
pop
push
test
dec
stc
adc
clc
lods
sub
ja
(bad)
fisttp
mov
pop
jmp
xchg
mov
pusha
mov
add
add
fsub
mov
fisub
xor
and
cmps
shl
cwde
sub
(bad)
(bad)
jmp
ins
movs
cs
xchg
ror
pusha
loope
xlat
sbb
jnp
push
jp
fist
push
sub
mov
int3
fcos
shl
jae
into
lods
mov
mov
fstp
mov
arpl
icebp
test
xor
(bad)
(bad)
dec
jle
movs
clc
nop
scas
ins
nop
fcomp
es
in
mov
clc
jl
loope
inc
cli
(bad)
clc
in
sub
and
ds
fbld
or
add
(bad)
jmp
out
mov
mov
add
in
aas
adc
(bad)
(bad)
(bad)
jg
fnstsw
js
ins
pop
test
sub
cld
out
sub
fisttp
stos
(bad)
push
ins
stos
mov
mov
xchg
push
mov
xor
into
dec
push
dec
push
gs
sbb
lock
mov
mov
mov
pop
pop
xchg
mov
jge
out
jmp
adc
js
loop
jecxz
mov
pop
(bad)
(bad)
cmp
inc
cmp
scas
stos
bound
call
rcl
out
lea
dec
push
aas
loop
loop
jle
pusha
rol
sar
xor
(bad)
mov
popa
mov
add
mov
add
jno
lock
push
mov
(bad)
(bad)
jmp
sbb
scas
fild
mov
or
test
mov
add
mov
mov
les
fcmovb
out
fbld
out
and
push
cli
fcomp
icebp
(bad)
(bad)
(bad)
(bad)
mov
out
push
mov
(bad)
clc
jb
lods
sub
mov
jbe
aam
and
(bad)
(bad)
(bad)
push
cmp
(bad)
sbb
mov
mov
mov
(bad)
pop
iret
add
out
jg
(bad)
call
loopne
dec
into
push
pop
rcr
mov
cmps
add
mov
sti
(bad)
(bad)
jmp
in
push
adc
mov
adc
popf
mov
mov
ins
xor
inc
inc
pop
push
fcomip
jmp
aam
lea
mov
mov
imul
out
outs
aaa
cld
(bad)
fisubr
mov
mov
cmp
dec
pusha
dec
xor
sub
add
fiadd
jmp
or
inc
(bad)
(bad)
(bad)
(bad)
aas
out
mov
std
adc
jns
lods
dec
pop
rcl
mov
jecxz
cli
pushf
and
mov
push
clc
push
fist
inc
ds
inc
retf
mov
popf
sahf
add
mov
inc
cmc
pop
lahf
(bad)
aas
and
mov
(bad)
(bad)
(bad)
out
inc
push
(bad)
pop
xor
repnz
lods
loope
(bad)
js
xchg
push
lahf
movs
in
cld
daa
popa
call
or
or
out
pop
call
out
int
lods
(bad)
fwait
(bad)
(bad)
(bad)
jmp
lods
mov
dec
sub
push
mov
mov
lods
daa
imul
dec
test
scas
and
inc
dec
xchg
xor
ja
mov
(bad)
(bad)
inc
sub
ins
add
jmp
xchg
scas
pop
cmp
fst
outs
popa
in
js
(bad)
(bad)
dec
cmp
in
loope
dec
xchg
bound
or
clc
lahf
xchg
in
pop
ss
pop
dec
mov
es
(bad)
call
jp
addr16
stos
sub
pusha
fmul
mov
scas
pop
(bad)
mov
test
xor
push
das
mov
scas
clc
sar
adc
sub
pop
fsub
adc
scas
adc
js
(bad)
(bad)
(bad)
call
sbb
pop
mov
in
pop
push
mov
inc
or
dec
dec
xchg
(bad)
xor
push
out
in
mov
popa
neg
sar
cwde
push
cmp
adc
xchg
ins
push
pop
data16
(bad)
(bad)
call
lods
mov
test
lods
icebp
cld
adc
das
xlat
cs
std
sub
xor
(bad)
(bad)
clc
test
outs
sub
and
dec
xchg
adc
test
lock
nop
lock
adc
ins
pop
(bad)
(bad)
std
add
and
es
iret
lods
mov
add
inc
ins
(bad)
sbb
xchg
(bad)
push
pop
mov
sbb
push
(bad)
call
in
jnp
pop
push
and
mov
sahf
push
stc
popa
mov
jg
mov
sbb
aad
cmps
in
mov
ror
fist
fbld
mov
clc
call
test
mov
mov
out
(bad)
call
mov
jns
pop
scas
mov
mov
pop
mov
or
mov
mov
call
or
fist
cli
call
test
loope
sub
xor
inc
sub
jg
test
ret
jmp
out
or
ss
test
mov
rcl
std
pop
cmp
mov
(bad)
(bad)
(bad)
push
icebp
xchg
sti
out
fsubr
push
adc
mov
xor
xchg
nop
sbb
test
sbb
(bad)
(bad)
(bad)
inc
cmp
dec
push
call
adc
adc
pop
mov
mov
push
clc
stos
pop
adc
pop
mov
or
fwait
es
cs
mov
or
call
movs
loop
ror
mov
into
sub
test
pop
cs
xor
(bad)
out
add
jnp
add
bound
lds
inc
push
stc
aad
dec
xchg
jg
sbb
jmp
iret
ficomp
mov
adc
inc
dec
cmp
test
movs
(bad)
call
gs
int
out
and
adc
mov
sahf
mov
pop
sbb
mov
sub
(bad)
(bad)
dec
jmp
inc
cld
mov
ror
in
push
pop
sub
retf
stos
xor
cmps
out
inc
pop
retf
push
loope
dec
cld
stos
retf
or
scas
xor
fisub
loope
mov
mov
adc
imul
push
mov
dec
push
jle
jns
sub
in
lods
outs
das
out
scas
cdq
add
add
and
call
xor
stos
ret
and
and
xchg
jecxz
rcr
cmp
fwait
leave
add
sbb
enter
fiadd
fwait
icebp
iret
cmp
pushf
ja
ja
ja
add
mov
fcom
inc
xor
nop
nop
scas
inc
out
outs
scas
inc
mov
mov
fidivr
inc
pop
add
and
loopne
ficomp
cmps
ja
cmps
imul
inc
push
push
in
and
movs
in
pop
enter
shl
sub
mov
adc
icebp
fwait
icebp
fwait
icebp
fwait
icebp
scas
jae
cmp
arpl
cmp
icebp
ja
ja
dec
sbb
into
ja
test
xchg
dec
clc
ins
out
icebp
popf
js
lock
mov
cmp
fld
cmc
lahf
cmc
jo
cmp
lahf
cmc
lahf
cmc
jnp
jmp
shl
cmc
pop
cmc
ja
cmc
sub
cmc
ja
jo
popf
push
push
hlt
in
cmc
fwait
neg
fwait
icebp
fwait
out
cmp
cmp
fwait
in
icebp
fwait
icebp
ja
out
jae
ja
ja
ja
scas
jae
icebp
ja
ja
icebp
push
cld
and
jne
lock
and
icebp
fwait
icebp
pop
out
xlat
add
call
adc
adc
lock
add
(bad)
jmp
adc
loop
or
dec
mov
(bad)
jg
fisttp
test
xchg
add
loop
in
push
cmc
fistp
xchg
add
or
cmps
cld
cli
xor
out
fild
mov
(bad)
loop
mov
cmps
and
xchg
ret
jle
(bad)
(bad)
(bad)
call
mov
jecxz
mov
call
mov
and
pop
fbld
call
ud0
cmps
(bad)
jge
xor
movs
cmps
or
mov
out
add
lea
push
jmp
lods
setb
pop
xchg
les
dec
pop
std
add
(bad)
(bad)
fld
ficom
call
aad
pop
sti
mov
movs
jnp
mov
xchg
test
sub
out
call
sbb
adc
retf
jp
sbb
loopne
pop
sub
das
cli
stos
push
sub
push
dec
pop
jg
into
mov
fild
ins
jle
(bad)
adc
aas
lods
inc
mov
fistp
push
pop
ficom
dec
scas
or
push
retf
push
add
lods
push
push
push
add
inc
out
lahf
and
mov
sbb
fs
inc
sti
sbb
jb
jb
inc
xchg
push
sar
(bad)
jmp
call
out
imul
ins
inc
or
jmp
retf
pusha
cmp
shl
nop
add
div
inc
gs
mov
call
aaa
xchg
pop
movs
fmulp
ret
fdiv
(bad)
(bad)
cmp
retf
out
retf
pop
call
(bad)
stc
add
push
sub
(bad)
cmp
(bad)
out
adc
loope
call
sahf
jo
add
xchg
clc
inc
retf
gs
popf
mov
jmp
sub
add
sub
call
jmp
(bad)
(bad)
(bad)
fimul
scas
retf
loop
cmp
call
pop
dec
push
cmps
fcomp
push
js
pop
inc
call
retf
rol
call
ins
fwait
cs
push
xchg
aas
(bad)
(bad)
(bad)
mov
outs
dec
shl
cmp
sub
mov
stos
mov
dec
xor
(bad)
jmp
js
mov
test
loope
or
fdivr
(bad)
call
sbb
add
mov
test
test
push
dec
cli
and
fdivrp
fcomip
call
push
jp
in
mov
jmp
mov
in
int3
lds
es
add
mov
loop
mov
push
inc
mov
inc
(bad)
(bad)
mov
in
pop
(bad)
sbb
jmp
xchg
xchg
xor
es
retf
push
fwait
jmp
mov
fisttp
and
adc
retf
sub
cs
mov
or
sahf
jno
sbb
js
in
and
stos
lods
push
mov
inc
push
es
pop
aam
and
push
sub
jg
jmp
jmp
aad
dec
mov
loop
sahf
mov
dec
in
jno
sub
ror
shl
call
test
in
retf
ins
loop
sub
push
int3
(bad)
call
or
xchg
cmps
retf
fs
jp
push
pop
mov
(bad)
(bad)
(bad)
(bad)
out
ins
adc
or
sub
inc
jno
call
dec
cwde
adc
xchg
aam
sbb
add
inc
fs
xchg
cmps
pop
aas
cld
(bad)
(bad)
dec
mov
add
jle
fnstcw
je
loope
not
sbb
stc
adc
xor
pop
adc
pop
xor
xor
(bad)
jmp
call
mov
inc
retf
or
push
add
in
addr16
(bad)
jmp
inc
push
aad
inc
inc
sbb
movs
out
dec
stos
std
pop
mov
test
jmp
(bad)
dec
hlt
stos
jo
les
xor
jmp
adc
dec
sbb
into
(bad)
(bad)
(bad)
jmp
test
movs
cmp
lods
mov
std
in
mov
or
in
inc
imul
stos
retf
adc
aam
cli
mov
xor
cmps
dec
movs
dec
fld
cmp
pop
add
jne
stos
sub
aas
bound
sahf
stos
and
fstp
dec
aas
dec
pop
(bad)
mov
inc
cli
nop
(bad)
call
jmp
js
mov
pop
popa
mov
add
js
pushf
add
sub
add
aaa
jmp
outs
cmps
outs
push
pop
cmp
(bad)
dec
push
fnsave
std
cwde
aad
inc
or
stos
dec
push
pop
mov
stos
jb
ret
(bad)
(bad)
jmp
push
mov
aas
mov
gs
retf
test
adc
clc
xchg
lock
(bad)
(bad)
jg
ret
aas
xchg
pop
mov
cli
mov
test
or
dec
cwde
lods
jmp
js
dec
fistp
test
or
fsubr
jp
aas
pop
test
jmp
and
dec
call
addr16
fincstp
(bad)
out
les
fs
xor
mov
dec
mov
test
sub
aaa
pop
mov
movs
mov
dec
test
mov
add
sbb
xchg
sub
(bad)
sub
xor
ins
mov
std
movs
fdivr
mov
jo
daa
or
mov
xlat
cwde
mov
add
xchg
inc
sub
jmp
mov
out
xor
adc
dec
jecxz
cs
push
retf
clc
pop
pop
adc
retf
test
movs
jecxz
or
addr16
push
scas
loope
pop
add
stos
jmp
push
cmps
popa
aas
rcr
mov
push
pop
out
sub
cs
cld
cld
pushf
xchg
scas
pop
or
mov
lods
push
pop
int
xchg
push
(bad)
mov
rol
lock
je
push
push
jle
(bad)
(bad)
(bad)
mov
ds
xchg
cld
mov
fsubr
inc
push
mov
sub
jecxz
pop
cmc
inc
(bad)
std
jb
gs
dec
inc
push
imul
dec
inc
push
(bad)
jmp
adc
ins
mov
inc
mov
mov
and
leave
xchg
sub
add
pop
adc
or
bound
imul
add
jae
gs
inc
cmp
add
std
pop
jno
xor
mov
mov
jg
pop
pop
or
(bad)
jg
les
cmp
test
cmps
adc
sbb
(bad)
(bad)
call
das
daa
div
(bad)
pop
add
outs
pop
add
into
outs
ins
dec
adc
sub
adc
mov
(bad)
(bad)
(bad)
jmp
out
inc
push
sbb
imul
je
pop
xor
(bad)
scas
push
sbb
mov
push
cli
imul
out
pop
in
cmps
cmp
push
cld
or
stos
jno
push
add
cwde
fistp
fwait
(bad)
adc
repz
lds
movs
retf
sbb
dec
popa
in
mov
out
add
(bad)
jmp
add
mov
xchg
jge
dec
mov
and
add
inc
push
push
mov
(bad)
lds
add
(bad)
push
call
rcl
loopne
std
aaa
push
retf
lods
push
sti
popa
int3
mov
rcr
mov
cmps
mov
push
and
dec
jge
sub
xor
jmp
xlat
(bad)
xor
leave
cmp
enter
jecxz
(bad)
push
dec
popf
jmp
jg
stos
mov
mov
pop
jb
ins
jl
mov
sar
dec
cli
dec
call
pusha
push
loope
add
jmp
add
arpl
aas
mov
(bad)
xchg
add
xchg
stos
iret
out
outs
xor
loope
iret
ja
add
mov
(bad)
push
aaa
mov
cld
and
in
xchg
mov
fadd
outs
out
cmp
dec
xchg
in
in
and
add
inc
clc
inc
loop
in
aam
push
inc
call
xchg
call
gs
lods
jp
out
std
into
gs
(bad)
(bad)
fidiv
or
ins
mov
jbe
sub
sar
jb
add
sub
push
jmp
out
ds
mov
mov
jbe
cwde
mov
ins
lods
mov
out
cmp
(bad)
(bad)
(bad)
jmp
xchg
nop
jg
mov
aad
xor
sti
or
adc
and
xchg
(bad)
sub
(bad)
fldcw
mov
iret
sar
inc
aas
and
mov
retf
sti
inc
aas
(bad)
es
add
jmp
inc
xchg
jmp
jne
addr16
daa
jae
push
push
push
push
icebp
cmps
jno
add
test
add
(bad)
jmp
xchg
stos
outs
aam
repnz
inc
enter
movs
jmp
(bad)
repnz
jl
sbb
and
arpl
dec
pusha
std
jmp
push
push
sbb
sub
(bad)
(bad)
jmp
cmc
inc
dec
sub
js
scas
dec
imul
in
or
arpl
in
fucomip
xor
scas
ins
mov
(bad)
data16
add
std
lods
sub
aam
fcomi
dec
adc
jmp
and
cdq
sub
xor
aad
ja
shl
dec
(bad)
(bad)
(bad)
push
lahf
inc
fild
push
out
jns
jge
adc
dec
jg
dec
mov
jl
test
pop
sbb
popa
fdivrp
add
pusha
iret
sbb
mul
inc
jne
add
ss
stos
dec
sub
call
std
cli
aas
addr16
stos
std
sbb
sub
aas
mov
jmp
sar
sahf
push
jns
lods
outs
pop
das
in
or
gs
gs
cmps
add
(bad)
call
test
jg
aas
push
cmps
and
add
pop
and
push
gs
(bad)
jmp
test
iret
cmp
jnp
ret
push
add
fistp
mov
pop
inc
adc
push
sahf
and
scas
sti
dec
and
mov
(bad)
call
scas
imul
out
or
mov
ja
jg
(bad)
in
je
lahf
inc
punpckhwd
mov
jnp
repnz
(bad)
inc
in
xchg
clc
mov
jmp
jmp
ja
xor
lock
inc
inc
clc
mov
sub
sub
mov
mov
mov
or
sub
sar
(bad)
call
lods
push
mov
cmp
mov
mov
and
shr
jmp
(bad)
push
dec
into
mov
add
dec
dec
mov
mov
inc
clc
(bad)
(bad)
jmp
loop
hlt
test
mov
and
sbb
and
push
and
fistp
fmul
clc
pop
xchg
cli
jp
jge
aaa
pop
cli
ret
xchg
mov
pop
movs
xchg
sub
cmps
cmc
mov
and
(bad)
jp
dec
jmp
lea
int3
pop
pop
retf
leave
push
push
dec
stos
out
push
test
push
rcr
push
cmc
inc
push
pop
dec
push
adc
lods
push
pop
jno
cmps
shl
(bad)
jmp
pop
adc
aaa
leave
pop
outs
add
push
call
lods
mov
xor
sar
sbb
inc
mov
pop
(bad)
(bad)
fild
and
push
scas
add
mov
xlat
std
push
loop
cmps
pop
xor
sbb
mov
and
sar
(bad)
jg
push
inc
loopne
adc
fld
adc
jmp
in
inc
data16
pop
mov
bswap
dec
jmp
mov
lahf
sbb
mov
xchg
stc
and
(bad)
pop
push
in
addr16
leave
jle
call
sbb
dec
mov
lahf
adc
dec
cmps
loopne
sub
mov
fs
adc
lods
inc
ins
sar
(bad)
jg
add
cwde
jl
or
sub
shl
aaa
std
inc
mov
jnp
xchg
xchg
dec
movs
push
cli
outs
cmps
mov
sub
mov
or
jmp
fiadd
scas
jae
mov
sbb
mov
mov
shl
call
aad
(bad)
jmp
and
addr16
xchg
mov
mov
inc
mov
loopne
jmp
inc
fdivr
mov
inc
mov
cmp
mov
adc
gs
test
lods
xchg
ins
loopne
(bad)
call
mov
scas
fs
jecxz
pop
sub
pop
jmp
or
and
std
push
xor
adc
ret
sub
mov
stos
or
add
test
jae
pop
sub
add
jg
neg
test
jnp
(bad)
(bad)
(bad)
jl
xchg
jmp
cmp
sub
stos
or
add
dec
mov
jne
dec
xchg
mov
pop
fwait
add
shl
push
imul
test
lahf
add
gs
scas
jne
mov
push
std
dec
cmc
xchg
in
leave
adc
mov
mov
addr16
mov
dec
inc
push
pop
or
call
mov
scas
mov
cmp
inc
mov
(bad)
sub
inc
leave
in
mov
and
sub
(bad)
(bad)
cmp
or
and
ds
stos
in
cmp
mov
outs
jle
(bad)
dec
test
leave
gs
mov
sbb
xor
inc
test
jg
(bad)
jmp
xchg
call
mov
popa
cmps
xchg
add
inc
(bad)
dec
(bad)
arpl
mov
xchg
jg
mov
jge
stos
shl
inc
mov
or
daa
bound
pop
pop
xor
cmp
lods
call
js
(bad)
(bad)
cmp
xchg
inc
and
cmps
in
dec
cli
ins
inc
jns
movs
xchg
mov
sbb
(bad)
out
or
iret
sub
sti
jo
iret
icebp
push
cmps
mov
(bad)
(bad)
(bad)
jmp
out
cmps
or
retf
mov
outs
mov
mov
jnp
mov
popa
pop
js
fstp
add
(bad)
call
jge
dec
sub
mov
out
mov
js
movs
(bad)
mov
xor
(bad)
js
add
sub
push
add
inc
call
out
(bad)
stc
addr16
imul
xor
call
adc
stos
fbstp
add
mov
inc
jo
pop
mov
addr16
punpcklwd
push
sti
(bad)
lods
clc
call
push
stos
dec
xchg
sbb
ins
cli
pop
imul
daa
mov
std
pop
inc
jbe
nop
cmp
push
sub
(bad)
call
add
pushf
jecxz
bnd
or
iret
inc
in
retf
cli
jmp
movs
(bad)
mov
in
adc
(bad)
call
sbb
out
push
scas
cmp
add
lods
icebp
xor
mov
dec
and
add
push
es
add
dec
cmps
ffree
call
pop
push
xchg
mov
cld
sub
ins
mov
clc
dec
push
jmp
mov
(bad)
dec
xchg
mov
call
dec
and
(bad)
jmp
sub
jno
enter
clc
and
call
fs
jg
push
ds
lods
mov
add
arpl
clc
jmp
hlt
test
in
or
push
cmp
call
(bad)
jg
movs
movs
(bad)
stos
cmps
add
push
jmp
mov
jmp
out
push
dec
cwde
push
adc
mov
ficom
push
dec
fnsave
test
retf
inc
xchg
jb
retf
(bad)
(bad)
call
out
movs
fdivr
cmp
xchg
mov
jle
imul
sbb
pop
push
xor
pop
(bad)
jg
add
int3
les
iret
(bad)
mov
in
xlat
jmp
outs
sahf
jmp
lods
mov
mov
mov
clc
or
adc
ins
loopne
cld
(bad)
(bad)
jp
cs
push
adc
shl
movs
inc
inc
fist
movs
pop
add
(bad)
mov
mov
sbb
jle
fsubr
call
pop
add
ss
dec
outs
iret
xchg
mov
xlat
cmp
(bad)
mov
int
inc
sub
ret
mov
xor
in
and
or
rol
stc
(bad)
fistp
adc
(bad)
pop
shr
push
sar
and
mov
jmp
xchg
fnstenv
gs
add
pop
mov
inc
jle
or
jo
test
in
cli
sub
push
add
pop
push
hlt
outs
sbb
and
sbb
dec
outs
mov
inc
mov
cld
(bad)
add
stos
pop
ret
or
jp
push
and
add
inc
jp
cdq
push
and
xor
lods
jns
inc
mov
sub
inc
lock
pop
cwde
into
stos
pop
xchg
ret
pop
sar
add
add
add
jle
sbb
add
pop
and
stc
push
inc
add
inc
int
inc
inc
nop
mov
xacquire
jmp
and
sbb
inc
push
cs
push
cwde
cmp
jmp
dec
mov
in
xor
ss
mov
enter
(bad)
mov
mov
repnz
scas
or
loop
mov
add
dec
outs
das
add
or
sahf
sbb
and
dec
ins
test
aad
add
das
clc
fidivr
test
fisubr
mov
dec
scas
push
sub
ror
retf
movs
push
outs
ror
outs
cli
mov
lods
cmp
call
inc
int3
mov
or
xchg
bswap
loopne
xchg
das
cli
sub
cs
sub
scas
mov
xchg
jge
mov
mov
or
mov
in
test
imul
scas
adc
push
nop
mov
and
std
dec
inc
inc
and
mov
jp
jb
test
add
sub
(bad)
cmps
scas
cs
sub
xor
adc
pop
arpl
push
add
(bad)
inc
mov
sub
cmps
or
int
retf
inc
add
mov
dec
stos
cmp
lds
call
sub
int3
std
add
cs
adc
cmp
imul
jne
cwde
imul
unpcklps
gs
adc
jle
jmp
out
cli
(bad)
(bad)
mov
add
pop
ds
loop
in
rol
leave
pushf
or
clc
in
xor
xchg
aaa
cmp
and
call
mov
pop
setns
aas
in
out
mov
pop
je
out
fstp
lock
adc
retf
(bad)
push
xor
fwait
int3
or
sar
inc
jmp
leave
ret
movs
call
pop
mov
movs
scas
pop
in
dec
sub
adc
jmp
sahf
rcl
jmp
mov
(bad)
aas
mov
lock
xor
sub
test
scas
add
mov
repnz
fnstsw
stos
pusha
push
xor
xchg
inc
retf
imul
mov
(bad)
(bad)
xor
dec
les
outs
mov
call
dec
jecxz
and
mov
xchg
add
dec
aad
cmp
in
fwait
(bad)
push
or
idiv
pop
lock
mov
xor
jp
mov
or
addr16
add
(bad)
push
sti
daa
xor
xor
cmps
xor
std
les
(bad)
(bad)
(bad)
fist
sar
out
cmps
js
push
cmp
popa
arpl
jo
dec
jmp
out
and
in
repnz
sub
(bad)
fisubr
or
cmp
es
sbb
aaa
ffreep
cmps
fwait
addr16
cmp
pop
dec
xchg
ja
(bad)
(bad)
cmp
addr16
sbb
push
pusha
mov
cmps
aaa
rcl
(bad)
aas
or
jb
sub
mov
clc
call
sar
mov
fs
add
dec
scas
mov
es
ins
mov
mov
es
pop
scas
mov
adc
jmp
(bad)
loope
mov
mov
dec
int3
shl
jb
imul
mov
adc
dec
and
adc
imul
movs
das
inc
mov
ret
movs
pop
xor
out
mov
jmp
mov
sub
mov
ins
std
(bad)
mov
push
icebp
add
mov
cmp
mov
jg
rcl
int3
push
stc
mov
scas
mov
add
sbb
and
push
(bad)
cmps
xor
loopne
push
mov
xchg
mov
call
jmp
push
movs
adc
retf
push
cmps
jne
stos
in
dec
xchg
dec
push
sub
das
adc
pop
aam
(bad)
clc
(bad)
push
fcmovbe
aas
mov
or
mov
pop
push
mov
call
pop
push
sar
ds
dec
mov
mov
test
mov
(bad)
clc
lahf
dec
fwait
test
cmp
add
repnz
jg
push
movs
data16
cmps
call
std
stc
inc
(bad)
repnz
sbb
mov
jg
add
fldenv
ins
(bad)
retf
cld
dec
iret
add
(bad)
(bad)
(bad)
dec
xor
iret
jmp
retf
mov
push
gs
pop
mov
xor
jp
(bad)
(bad)
call
push
xchg
orps
fidivr
mov
jb
jg
data16
(bad)
enter
(bad)
mov
add
jmp
jno
outs
sti
push
aad
dec
repz
cld
pop
loop
cdq
or
mov
fst
inc
jmp
das
iret
sub
sar
out
sub
sbb
mov
xchg
jb
cdq
arpl
aas
add
bound
movs
es
jne
fmul
mov
and
in
imul
leave
sbb
fstp
outs
push
int3
push
xchg
arpl
push
stc
xchg
add
jmp
and
push
stc
add
push
cld
mov
int
nop
aad
clc
mov
pop
jne
call
lea
cmps
jnp
cmp
in
jo
and
add
dec
lea
mov
add
sti
repz
(bad)
frstor
bound
sub
adc
add
je
cmc
(bad)
pop
mov
sar
add
xchg
(bad)
pop
mov
add
addr16
aad
ret
cld
push
idiv
mov
daa
mov
in
cs
add
add
(bad)
(bad)
call
jno
sub
jle
icebp
das
jo
jecxz
xchg
sbb
xor
aaa
add
dec
pop
mov
pop
movs
add
dec
loopne
aas
mov
loope
add
nop
xor
call
das
das
lods
imul
sar
jnp
lahf
aas
adc
inc
loopne
fisub
xor
loopne
sbb
sbb
jge
scas
mov
mov
out
jae
mov
sub
nop
xchg
sbb
dec
arpl
push
mov
sub
fstp
sub
fwait
and
and
sub
(bad)
(bad)
leave
inc
cdq
sbb
adc
lods
aad
mov
aad
and
sub
sbb
ins
xchg
and
(bad)
mov
add
cdq
or
inc
cmp
jp
call
mov
fisub
in
loope
add
pop
mov
pop
jp
test
(bad)
(bad)
stc
adc
xlat
outs
and
sbb
adc
fidivr
test
icebp
jmp
push
gs
adc
sbb
sbb
sub
sbb
jb
sti
push
sub
jge
cmp
dec
stc
(bad)
add
aas
add
call
popf
adc
cmp
fdiv
(bad)
jg
(bad)
rol
in
mov
sbb
push
cmps
int
repnz
add
jl
push
movs
aaa
(bad)
(bad)
jmp
sub
sti
mov
sbb
xchg
mov
lods
xchg
(bad)
and
dec
ds
xchg
inc
or
jae
inc
push
pop
push
jae
mov
cmp
cwde
in
mov
pop
dec
push
test
cmp
popa
retf
mov
icebp
gs
mov
push
mov
pop
or
xlat
bound
rcl
in
mov
cmp
call
fistp
jno
loopne
fidivr
add
sbb
popf
and
push
adc
add
push
es
aas
adc
(bad)
jmp
xor
and
lods
cdq
jnp
and
call
jnp
or
repz
jns
das
loopne
jg
add
pop
mov
leave
shr
sahf
inc
(bad)
xor
add
cmp
sub
sub
ret
(bad)
inc
aam
push
mov
mov
sub
jmp
loop
adc
pop
xor
dec
cmp
call
pop
sbb
add
(bad)
dec
mov
and
cmp
and
repnz
add
jnp
imul
(bad)
dec
dec
stos
inc
dec
adc
movs
jns
mov
(bad)
pop
add
cld
fisubr
int3
push
ror
pop
mov
loopne
add
clc
ret
inc
pop
movs
add
add
call
mov
cmp
push
(bad)
repnz
sub
jb
ds
dec
retf
or
jmp
sub
dec
xor
inc
in
cli
fcomip
sub
cli
aas
add
idiv
mov
cmps
xchg
sub
dec
add
imul
jl
mov
(bad)
out
test
add
sbb
sbb
adc
call
test
cdq
xchg
scas
push
mov
(bad)
(bad)
jmp
ins
in
leave
cmp
jb
(bad)
cmp
sub
arpl
add
dec
jmp
std
push
fsubr
mov
sbb
dec
mov
mov
xor
and
mov
call
and
clc
outs
mov
push
sbb
push
fs
adc
dec
sahf
test
mov
movs
popf
sub
shl
stos
or
call
inc
(bad)
dec
add
cdq
out
xchg
shl
test
adc
(bad)
fild
mov
or
mov
xchg
xor
sar
(bad)
out
lds
test
leave
arpl
out
cmp
add
das
push
mul
add
jg
jecxz
sbb
adc
jmp
inc
(bad)
(bad)
call
(bad)
jmp
pop
mov
inc
data16
jge
mov
adc
cmps
rcl
pop
sar
test
dec
(bad)
mov
inc
ins
push
or
call
mov
mov
retf
je
call
adc
(bad)
mov
cmps
lods
mov
xchg
mov
clc
mov
scas
arpl
xor
mov
cmc
(bad)
fdivr
lds
arpl
std
(bad)
inc
sbb
bound
xchg
cld
movs
in
jl
call
sub
mov
mov
sub
loope
pop
test
lahf
adc
mov
adc
loop
fwait
mov
cli
sbb
jmp
and
cwde
ins
stos
cli
jmp
ins
jmp
push
cmp
stos
movs
adc
jle
jmp
inc
test
imul
fst
sbb
mov
and
(bad)
(bad)
jnp
cmp
lds
add
ja
xchg
cs
mov
(bad)
ins
dec
sahf
jmp
add
pop
xor
jg
test
retf
mov
bound
movs
jnp
jmp
ds
xchg
mov
mov
fsub
cli
mov
mov
mov
adc
mov
pop
jmp
jg
(bad)
dec
stos
mov
ret
and
or
pop
jmp
push
(bad)
(bad)
mov
rcl
or
lahf
or
mov
mov
outs
ins
inc
ret
jbe
int
hlt
cmps
sub
mov
std
jnp
test
(bad)
jmp
ficom
fldcw
jmp
pop
daa
sub
lahf
mov
mov
xor
pusha
aas
xor
inc
out
aaa
(bad)
lock
mov
add
jle
es
lods
xor
clts
xor
adc
dec
aas
jmp
lods
mov
cmp
sbb
inc
shr
nop
imul
call
cmc
mov
psadbw
sub
mov
jmp
inc
jg
inc
(bad)
push
in
(bad)
dec
mov
xchg
ins
retf
sub
mov
les
xor
push
dec
movs
test
ins
retf
adc
pusha
jnp
bound
inc
fwait
dec
mov
mov
(bad)
inc
fimul
popf
jmp
stc
push
(bad)
(bad)
dec
inc
in
aaa
cmp
dec
stos
mov
sub
mov
pop
add
mov
dec
pusha
pop
inc
lds
jmp
mov
sbb
push
mov
sbb
adc
(bad)
int
cmp
in
ret
mov
mov
aam
mov
and
mov
mov
das
xchg
or
push
daa
add
inc
mov
(bad)
(bad)
(bad)
mov
or
in
sar
ss
mov
jl
rol
out
mov
call
push
imul
pop
jns
mov
pop
adc
jno
mov
gs
mov
(bad)
jmp
cmp
push
mov
cmp
cwde
xchg
adc
js
fisub
and
sub
mov
movs
adc
add
std
stos
daa
cmp
lahf
leave
(bad)
stos
jo
dec
dec
popa
push
xor
mov
(bad)
inc
stos
popa
call
ins
sub
retf
call
(bad)
fdivr
data16
int
iret
int3
shl
mov
push
or
push
clc
(bad)
(bad)
jmp
xor
dec
jmp
mov
imul
mov
dec
lods
enter
mov
test
in
xchg
fdivrp
mov
xchg
(bad)
(bad)
(bad)
jmp
push
pop
mov
arpl
push
out
call
or
sahf
aas
in
iret
or
sbb
inc
aas
cmps
and
mov
(bad)
sti
or
js
pop
out
std
fld
inc
cmp
sub
mov
jecxz
es
(bad)
(bad)
mov
jp
push
push
xor
aas
adc
sti
inc
jp
stos
loope
pop
xor
mov
cli
aaa
std
dec
jge
sbb
sbb
jns
jge
aad
mov
add
enter
(bad)
call
stos
out
xchg
nop
int3
lods
fcom
in
cmps
mov
aad
cmc
(bad)
dec
jle
jmp
inc
cwde
push
jmp
and
sahf
mov
push
into
jnp
test
ja
adc
clc
ja
mov
and
xor
fs
jne
out
mov
dec
fisttp
(bad)
inc
in
mov
jg
ds
cmp
mov
jmp
ret
lock
sar
or
adc
pop
ins
mov
mul
jmp
and
clc
mov
lahf
cvtpi2ps
adc
cld
sbb
lahf
call
stos
retf
test
xor
and
repnz
and
mov
pop
aam
movq
push
or
(bad)
mov
push
fdivr
add
cmp
or
inc
mov
retf
mov
out
mov
jg
(bad)
(bad)
jmp
int3
gs
stos
dec
sub
push
push
and
jae
sbb
das
cli
es
mov
(bad)
mov
shr
jns
jle
fld
add
stos
ins
jmp
retf
test
fiadd
sti
(bad)
(bad)
(bad)
dec
outs
outs
mov
outs
sbb
stos
enter
in
adc
out
sbb
(bad)
(bad)
aaa
jo
dec
mov
cmp
in
je
(bad)
or
adc
(bad)
call
iret
push
xlat
xor
xor
and
add
imul
xchg
adc
sbb
stos
scas
shl
retf
xchg
(bad)
xor
cmps
popa
adc
mov
mov
cmp
sub
(bad)
(bad)
push
lock
xchg
sbb
jns
sub
(bad)
cmp
out
lds
lea
call
aad
lods
imul
mov
fdiv
aaa
jge
pop
(bad)
call
in
out
sbb
cwde
fbld
sub
call
mov
jne
cmp
clc
out
nop
mov
dec
jecxz
arpl
or
das
sar
jmp
add
daa
dec
sbb
pop
je
scas
sub
mov
(bad)
push
stos
inc
xor
pop
dec
mov
out
dec
int3
push
dec
push
inc
pop
dec
loop
and
dec
mov
mov
outs
mov
sbb
ss
(bad)
(bad)
call
or
fstp
scas
push
sub
mov
dec
sub
daa
aas
sbb
push
adc
dec
(bad)
(bad)
in
xor
gs
xor
sbb
(bad)
stc
push
xchg
and
jb
mov
(bad)
fcmovu
std
retf
iret
jb
in
(bad)
xchg
dec
sti
mov
jno
mov
call
inc
or
pop
stc
(bad)
aam
ds
adc
test
(bad)
jmp
daa
bound
stc
retf
imul
in
adc
adc
mov
sub
test
jmp
rcl
mov
loop
lds
lods
scas
xchg
imul
popa
mov
xor
sbb
(bad)
in
adc
push
and
jge
fistp
or
call
inc
sbb
lahf
stos
inc
(bad)
(bad)
jg
lahf
adc
cmp
lods
iret
inc
fcomp
sbb
sub
fist
(bad)
mov
xchg
daa
ins
addr16
popf
aad
and
add
scas
test
les
dec
inc
jp
es
(bad)
(bad)
(bad)
(bad)
fcmove
push
das
arpl
sub
sub
mov
or
dec
mov
call
mov
pop
(bad)
push
mov
and
(bad)
adc
enter
cmps
push
jmp
push
xchg
push
add
inc
scas
or
xchg
sar
pop
push
dec
loop
cmp
mov
test
mov
outs
pop
test
jb
ins
fwait
push
icebp
enter
(bad)
inc
push
sbb
repnz
lods
mov
mov
aas
(bad)
mov
fmul
sub
stos
jle
retf
mov
movs
xor
call
push
movs
mov
in
push
jle
sahf
mov
icebp
jg
push
add
pop
push
mov
ds
movs
or
sahf
call
sub
pop
out
out
jp
sbb
dec
mov
sbb
outs
loope
xor
data16
jo
es
fbstp
push
jns
mov
push
ins
sbb
sbb
cs
call
ins
outs
sub
sub
sbb
sbb
outs
pop
cmp
mov
(bad)
jmp
lahf
aaa
xor
mov
mov
(bad)
(bad)
call
xchg
dec
mov
jmp
pop
jecxz
leave
mov
in
jp
and
(bad)
jmp
rol
jbe
push
enter
cli
jmp
mov
mov
cmps
imul
jb
mov
dec
push
dec
in
retf
pop
dec
pop
cmp
loopne
push
mov
movs
lods
addr16
daa
adc
mov
(bad)
in
stos
scas
movs
or
movs
push
aam
ror
mov
jmp
popa
jne
pop
push
dec
stos
cmp
fsubr
pop
lock
sub
jg
mov
popf
and
jo
dec
(bad)
(bad)
(bad)
jg
sub
fcomp
and
out
int3
dec
adc
lods
dec
addr16
daa
pop
scas
sub
add
das
imul
add
ins
iret
adc
adc
(bad)
(bad)
jmp
(bad)
mov
xchg
or
add
xchg
stos
lahf
or
call
or
dec
or
stos
jg
pop
inc
cmp
sti
imul
int3
std
loopne
pop
rcl
in
aas
aad
movs
mov
jmp
inc
inc
inc
stos
fisttp
dec
dec
es
call
imul
cld
fbstp
dec
adc
dec
adc
mov
mov
push
sub
push
sub
repz
cmp
or
frstor
clc
sbb
cmp
jne
mov
adc
push
pop
jmp
mov
cli
pushf
sbb
adc
and
mov
cmp
popa
jbe
sub
es
dec
xor
pop
sub
push
sub
sub
sub
test
add
(bad)
jg
mov
retf
mov
inc
and
jecxz
stc
inc
and
(bad)
(bad)
(bad)
jmp
sbb
ret
fs
xchg
sbb
mov
pop
(bad)
dec
das
mov
jb
and
(bad)
(bad)
(bad)
jmp
leave
jbe
into
enter
int
mov
mov
mov
repz
mov
(bad)
(bad)
dec
scas
inc
gs
pop
loope
push
pushf
jmp
xor
or
sub
mov
inc
cwde
(bad)
(bad)
(bad)
jmp
out
jae
mov
sti
xchg
jp
pop
jecxz
fs
dec
push
pusha
pop
mov
mov
cmp
and
ins
push
inc
enter
into
outs
imul
push
jmp
call
lock
lods
sub
or
(bad)
(bad)
(bad)
inc
dec
gs
lods
(bad)
(bad)
sahf
add
aaa
aaa
push
mov
adc
int
hlt
and
clc
jmp
lahf
jno
call
mov
lds
add
mov
(bad)
dec
sbb
aas
pushf
(bad)
and
sub
popf
imul
adc
push
jmp
popa
call
and
into
xchg
dec
push
(bad)
(bad)
call
xchg
jmp
outs
mul
outs
mov
cmp
cmp
(bad)
cli
(bad)
push
idiv
(bad)
inc
stos
mov
ds
mov
icebp
sbb
call
mov
cs
add
mov
clc
jg
test
movs
mov
adc
push
loopne
(bad)
(bad)
jmp
mov
pushf
pop
mov
out
in
ja
ins
push
fsubr
aad
repnz
ins
cwde
mov
aad
and
(bad)
jmp
add
test
cmps
lds
or
and
sar
pop
icebp
das
sbb
call
(bad)
test
push
jne
loope
imul
clc
ja
(bad)
ficomp
mov
test
inc
or
jns
or
mov
enter
jnp
call
sbb
fs
pop
(bad)
(bad)
(bad)
jmp
jg
cs
outs
imul
mov
mov
scas
push
in
retf
addr16
(bad)
(bad)
(bad)
jmp
ds
call
push
lods
(bad)
adc
cli
mov
fnsave
lods
mov
mov
sar
data16
out
cdq
jmp
(bad)
jg
cs
cs
mov
xor
push
out
pop
cmc
jb
repnz
jg
data16
cmp
mov
ret
(bad)
(bad)
jmp
cwde
sar
in
sub
jmp
scas
fs
mov
retf
sbb
dec
add
js
mov
mov
sub
lods
cmc
lods
(bad)
aas
dec
add
test
push
add
inc
lods
loope
inc
fs
sub
xchg
rol
mov
fnsetpm(287
sahf
pop
push
lods
dec
test
daa
scas
add
(bad)
inc
xchg
leave
retf
popa
pop
outs
and
aas
adc
jmp
out
lock
jmp
pop
std
mov
aas
and
clc
(bad)
add
xchg
inc
out
mov
and
dec
out
jae
call
sub
mov
in
mov
imul
jg
dec
adc
xchg
lods
push
dec
(bad)
jmp
and
in
in
mov
aas
stos
(bad)
(bad)
dec
and
test
cld
ret
mov
addr16
out
mov
sar
movs
sub
jmp
add
xor
rol
or
cmps
(bad)
fsubrp
bound
dec
xchg
aam
add
mov
and
(bad)
aas
call
inc
jmp
(bad)
(bad)
dec
addr16
in
ror
nop
cmp
aas
mov
pop
jnp
sub
imul
out
push
adc
cmp
or
fcomip
jmp
fnstcw
repnz
jmp
in
mov
inc
mov
mov
(bad)
inc
jo
sbb
(bad)
and
sub
push
cld
(bad)
dec
sbb
xchg
jmp
in
data16
jg
push
cmp
gs
xor
daa
and
jmp
inc
lods
fnstsw
or
or
(bad)
stos
js
scas
xlat
mov
sti
popa
(bad)
dec
fidiv
push
std
(bad)
(bad)
jmp
enter
jne
sbb
iret
xchg
pop
xchg
adc
cmp
imul
std
dec
sub
inc
sbb
cmp
xor
add
loop
(bad)
jg
dec
cmp
or
sub
scas
leave
daa
pop
movs
lahf
(bad)
(bad)
(bad)
(bad)
inc
add
je
mov
ds
loope
sub
gs
fidiv
cmps
out
push
mov
mov
jns
mov
sub
push
test
add
jne
ins
je
fmul
sub
aaa
cld
(bad)
inc
lods
cld
lahf
aad
jecxz
ss
push
pop
ja
in
mov
push
mov
pop
sub
mov
loope
scas
cs
cmp
iret
lods
dec
xchg
and
fsub
push
pop
cmp
mov
xor
pop
je
fbstp
sbb
push
loop
jmp
push
xchg
push
xchg
lahf
adc
mov
jns
std
call
mov
adc
or
cmp
sub
and
push
dec
imul
and
xchg
sbb
fsubr
push
sbb
cmp
sar
jge
inc
push
(bad)
dec
pop
jg
repz
and
rol
(bad)
(bad)
(bad)
(bad)
jmp
mov
xor
dec
call
std
stos
(bad)
cmp
cmp
mov
(bad)
(bad)
jmp
jo
gs
dec
push
jmp
test
xchg
stc
retf
jp
hlt
fwait
sub
dec
or
test
xchg
inc
into
push
jg
into
cmps
addr16
jl
add
ja
mov
sub
es
arpl
xor
jne
fwait
into
dec
jmp
call
xchg
scas
(bad)
stos
jg
lods
fbstp
int
ja
cdq
inc
mov
push
test
or
enter
or
push
mov
mov
stos
pop
retf
out
or
xchg
jo
int
mov
ret
std
mov
les
and
xor
jns
fcomp
stc
inc
fcom
xor
test
jmp
sbb
dec
dec
jae
cwde
call
dec
cld
shl
fist
fdivr
jnp
dec
adc
push
ins
dec
sbb
sub
jbe
(bad)
pop
jle
lods
jg
call
sbb
sub
push
fcmovb
mov
das
xchg
stos
call
sbb
adc
mov
mov
xor
dec
mov
(bad)
call
inc
mov
scas
pop
xor
fldcw
ror
jmp
mov
aad
or
and
ret
mov
mov
or
std
fcom
dec
push
(bad)
(bad)
(bad)
inc
cs
jae
fisttp
xlat
fsubr
jl
and
cli
mov
ret
dec
mov
and
mov
pop
pop
aam
(bad)
in
addr16
mov
push
xor
mov
das
clc
mov
les
mov
jmp
sar
iret
leave
stos
xlat
cmp
add
in
jecxz
(bad)
cmps
scas
in
gs
push
(bad)
(bad)
(bad)
(bad)
mov
add
inc
iret
popf
cmp
sub
(bad)
ret
scas
out
inc
aaa
aam
test
mov
fcomip
pop
push
(bad)
and
retf
inc
iret
mov
inc
in
fisttp
add
call
jl
ins
and
bound
or
sahf
ss
lea
xor
mov
push
sub
out
adc
jmp
or
sub
mov
retf
add
jmp
mov
(bad)
(bad)
mov
mov
rcr
addr16
fucom
pop
aaa
sub
adc
dec
cdq
dec
cmps
out
mov
add
icebp
scas
call
push
leave
xchg
data16
(bad)
call
xlat
xor
ins
daa
dec
push
pushf
cmp
adc
inc
(bad)
(bad)
mov
ins
test
mov
ret
sbb
push
dec
(bad)
jg
add
daa
sbb
jmp
pop
(bad)
add
pop
sbb
lea
mov
stos
es
(bad)
(bad)
jmp
jmp
jmp
sbb
(bad)
dec
enter
mov
pop
dec
std
fwait
inc
inc
jae
loop
and
mov
jmp
fcmovne
pop
test
aas
push
adc
add
rol
loope
outs
jle
add
out
daa
jbe
mov
xchg
stos
inc
add
clc
repz
add
mov
repz
xor
loopne
add
adc
test
test
or
(bad)
in
or
push
xchg
dec
movs
icebp
jo
mov
mov
jmp
into
lods
sub
sub
cmp
scas
or
test
fidiv
aas
cmc
jne
push
ins
std
jmp
shr
cld
and
push
leave
pop
cmc
(bad)
aas
adc
or
mov
adc
gs
cmps
lods
iret
je
ss
sbb
ret
dec
xchg
sub
sbb
dec
fisubr
test
or
sub
call
retf
data16
dec
push
inc
mov
push
mov
dec
cwde
nop
std
loopne
push
push
add
(bad)
(bad)
jp
out
arpl
push
test
mov
jmp
mov
(bad)
jg
jnp
das
jle
test
clc
cmps
sub
fwait
add
mov
outs
das
jp
inc
sar
or
cmps
mov
xchg
or
push
out
imul
pushf
repz
je
dec
add
mov
or
or
adc
int3
cwde
or
add
inc
push
mov
push
jmp
cld
inc
push
cwde
fsubr
dec
fisub
imul
jb
and
mov
int
stc
push
pop
sub
and
cli
mov
cwde
lahf
sub
jmp
jg
adc
imul
adc
retf
sbb
(bad)
(bad)
push
pop
lods
and
mov
push
sahf
loope
push
out
nop
daa
jmp
gs
scas
fst
adc
sbb
add
lahf
dec
or
jno
fsubr
pop
mov
sbb
dec
rcr
inc
cmp
mov
pop
rep
das
xchg
mov
adc
cld
push
xchg
sti
clc
test
and
inc
add
sub
adc
push
xchg
jns
repnz
test
pop
mov
cmp
mov
(bad)
call
adc
test
dec
mov
add
(bad)
(bad)
dec
push
iret
pop
xor
test
clc
hlt
ror
xchg
adc
call
fisubr
dec
mov
test
out
enter
cmp
std
out
sbb
cmc
mov
pop
fstp
mov
(bad)
(bad)
(bad)
push
fisubr
pop
ins
iret
push
cld
add
inc
cmps
and
stos
adc
push
adc
imul
(bad)
(bad)
call
and
jl
stc
mov
mov
sub
lea
fisttp
add
ins
je
lods
pop
lods
(bad)
call
mov
adc
int
(bad)
mov
fisttp
test
pop
outs
add
xchg
stos
pop
loop
loop
jmp
adc
ret
pop
mov
cmp
cmp
sub
sub
mov
sub
(bad)
(bad)
call
xor
popf
mov
xor
sbb
(bad)
ins
(bad)
pop
in
push
vpcomuw
mov
clc
lods
cdq
and
pop
lods
(bad)
push
dec
bound
pop
test
jo
fiadd
(bad)
(bad)
(bad)
call
std
push
add
jns
or
ss
movs
retf
adc
jle
sbb
test
xchg
mov
loop
or
mov
sub
mov
add
sub
(bad)
dec
rol
into
into
xchg
outs
out
lds
cmps
fucomip
test
mov
push
or
ins
jmp
adc
jo
mov
daa
add
out
loopne
dec
and
test
xchg
mov
mov
mov
lock
call
dec
mov
xchg
push
fwait
cs
cdq
adc
pop
data16
sub
movs
(bad)
(bad)
aas
outs
retf
push
outs
mov
test
es
je
push
add
dec
jle
push
mov
mov
pop
cmp
pavgw
test
movs
jmp
loopne
(bad)
jmp
xor
(bad)
jnp
jmp
test
ret
cli
mov
mov
pop
std
xor
mov
dec
pop
ins
fdivr
dec
(bad)
(bad)
jmp
test
and
add
mov
xchg
(bad)
ss
xchg
pop
mov
cwde
test
xchg
shl
cli
jge
lahf
adc
lock
sbb
sbb
adc
add
dec
repnz
loope
mov
mov
out
or
jmp
jl
(bad)
lods
std
loopne
dec
(bad)
fdivr
loop
icebp
adc
repz
jae
test
sbb
jmp
add
enter
ja
jmp
xlat
(bad)
(bad)
(bad)
jmp
cmps
push
cmps
mov
sub
aas
jb
cmpxchg
cmp
gs
sbb
(bad)
in
sub
and
(bad)
mov
loope
or
add
(bad)
push
cmp
in
loope
xor
mov
push
mov
out
xor
mov
js
rol
jl
jge
cmp
mov
xchg
add
dec
sbb
adc
fdiv
fwait
and
jp
sti
or
add
outs
add
xchg
mov
(bad)
(bad)
inc
in
mov
in
jmp
call
cwde
loopne
shl
(bad)
mov
pusha
jnp
mov
jb
outs
pop
and
fbld
cld
mov
inc
add
fdivr
mov
loope
sbb
std
lahf
inc
sbb
leave
or
out
mov
cli
lock
(bad)
jg
dec
outs
cmp
fist
lods
loopne
or
mov
mov
test
(bad)
(bad)
(bad)
inc
stos
mov
movs
sub
xor
push
test
iret
mov
movs
jmp
dec
hlt
add
(bad)
dec
in
arpl
mov
or
movs
xchg
(bad)
mov
add
mov
or
enter
dec
cmp
mov
jle
jge
push
jl
lock
pusha
cmp
sbb
movs
(bad)
(bad)
(bad)
call
dec
add
jmp
nop
stos
add
or
loopne
mov
(bad)
fcmovne
imul
nop
movs
popa
pop
loop
test
(bad)
jmp
mov
sub
mov
mov
loop
into
js
mov
rol
pop
ret
inc
popf
out
and
and
adc
pop
pop
cmc
inc
(bad)
cmp
call
sub
inc
xchg
jmp
xchg
or
stos
int3
movs
sbb
mov
cmps
and
xor
in
push
fidiv
pop
inc
aam
dec
add
or
scas
cmp
test
add
(bad)
jmp
or
(bad)
ins
aas
adc
clc
outs
mov
push
or
jnp
xor
jmp
loopne
or
stos
test
gs
xchg
sbb
imul
retf
(bad)
and
xor
retf
movs
mov
fbld
repnz
jmp
mov
cmc
or
sub
out
call
pushf
jecxz
and
cmp
das
push
jge
adc
outs
(bad)
pop
icebp
jmp
retf
iret
loope
adc
std
sbb
sbb
and
sar
xchg
das
adc
fsqrt
mov
je
pusha
std
inc
leave
inc
or
add
pushf
scas
xor
fidiv
cmp
aad
call
hlt
mov
xchg
out
dec
sub
mov
daa
or
(bad)
mov
push
fdivr
adc
(bad)
(bad)
jmp
in
mov
in
dec
in
mov
xor
xchg
adc
outs
dec
cmp
mov
adc
sub
das
adc
sbb
adc
cmp
push
shl
clc
ins
mov
pop
pop
jmp
mov
clc
cld
xor
push
call
(bad)
(bad)
cmp
call
pop
jg
jmp
into
fs
es
fist
sub
scas
push
arpl
clc
lock
xchg
(bad)
(bad)
(bad)
jnp
xchg
mov
scas
enter
out
shr
dec
es
cmp
cmp
mov
jne
pop
push
mov
or
cli
scas
push
mov
cmps
sbb
enter
inc
test
pop
mov
inc
mov
cmp
(bad)
(bad)
fistp
das
lahf
mov
dec
ror
mov
mov
iret
jecxz
adc
(bad)
mov
or
push
pop
icebp
test
add
dec
aaa
inc
out
fiadd
push
clc
xor
and
dec
cld
outs
mov
mov
imul
(bad)
jg
add
call
push
dec
adc
mov
das
jmp
nop
sub
dec
cld
adc
(bad)
sti
inc
sbb
push
cmp
sbb
mov
stos
repnz
push
cmps
inc
std
cmc
sbb
pop
xor
mov
cmp
cli
lea
test
sbb
push
mov
sub
clc
(bad)
(bad)
mov
and
jmp
imul
inc
rol
pusha
xchg
out
(bad)
(bad)
mov
mov
adc
inc
jmp
(bad)
sti
dec
cmps
loopne
inc
(bad)
stc
adc
push
push
xchg
push
repnz
push
or
call
call
cmp
jb
(bad)
fwait
inc
fsqrt
cmp
adc
test
sbb
jne
stos
pop
sub
(bad)
(bad)
jmp
fadd
sub
jg
sub
pusha
cmp
xchg
stos
movs
data16
push
int3
rol
add
push
pop
call
pop
cli
adc
xchg
out
or
(bad)
inc
jmp
push
cmp
fcomip
dec
sub
mov
dec
mov
in
test
clc
outs
adc
data16
xchg
gs
cmps
push
xor
xchg
sub
xchg
and
mov
and
jg
sub
mov
sub
aad
(bad)
stos
loope
mov
push
iret
or
sub
mov
es
mov
mov
pop
ud0
call
out
adc
pusha
retf
mov
stos
xlat
or
sbb
call
std
inc
mov
mov
aad
mov
in
sbb
sub
xchg
lea
sub
cmp
fiadd
add
jmp
adc
rcl
and
(bad)
(bad)
(bad)
mov
enter
push
stc
mov
fnstsw
into
push
and
mov
int
or
jp
outs
jb
mov
and
mov
mov
loop
les
push
add
into
xor
scas
jns
icebp
push
int
adc
xor
(bad)
(bad)
call
fiadd
jmp
movs
cwde
dec
test
loop
(bad)
lahf
aas
mov
pop
pop
xor
sub
and
pop
add
dec
scas
int3
push
mov
lods
jg
test
xchg
mov
stos
mov
cmp
cmps
idiv
test
fcmovnbe
cmps
(bad)
(bad)
jg
in
cmp
sub
test
fdivr
repz
test
(bad)
(bad)
(bad)
in
ins
lahf
pop
xchg
(bad)
test
xchg
mov
sub
dec
fwait
ja
(bad)
(bad)
dec
mov
adc
jb
pop
xor
pop
pop
loopne
es
call
dec
cmp
jp
mov
mov
mov
pushw
mov
inc
int
std
ret
loope
es
fs
mov
mov
mov
in
(bad)
(bad)
(bad)
jg
mov
jmp
pop
loope
out
xor
das
jmp
dec
cmp
push
int3
mov
aas
lds
(bad)
inc
mov
rcl
stos
popf
mov
mov
add
mov
mov
nop
retf
dec
add
(bad)
(bad)
call
push
add
loope
push
test
push
dec
xor
push
mov
stos
jmp
sar
add
lods
cli
dec
popa
popa
lods
cli
(bad)
call
jle
cld
cli
mov
jno
xor
or
fstp
sar
sar
arpl
adc
jmp
cld
sbb
add
sar
jmp
or
dec
and
popa
mov
ss
mov
dec
push
sub
sahf
dec
xchg
stos
mov
push
sbb
dec
loopne
jp
(bad)
mov
imul
cli
cs
sbb
dec
cmp
cmp
sub
mov
mov
dec
mov
(bad)
call
cmps
fcmove
enter
jns
ret
outs
mov
jge
pop
(bad)
fbstp
sub
pop
push
enter
(bad)
fild
mov
int3
or
jb
test
lods
push
inc
stos
(bad)
cmp
sub
sbb
fsubr
mov
scas
cdq
mov
test
(bad)
jmp
inc
or
or
arpl
(bad)
mov
aad
(bad)
aaa
push
push
ins
scas
ss
lahf
pop
xchg
rcr
hlt
mov
(bad)
mov
add
rcr
test
nop
mov
ins
std
das
fdiv
out
jle
mov
inc
(bad)
cwde
div
sub
out
mov
mov
push
ins
xchg
add
loopne
jnp
addr16
sar
push
mov
add
sbb
(bad)
sbb
ja
sub
push
xor
repz
scas
clc
add
adc
mov
jbe
pop
sbb
mov
pushf
retf
mov
xchg
clc
inc
jle
jecxz
mov
bound
(bad)
fisttp
or
xor
mov
ret
ret
mov
add
inc
mov
add
push
jmp
mov
mov
push
outs
stos
mov
mov
retf
inc
xor
lea
mov
aaa
loopne
or
mov
mov
mov
inc
mov
mov
sub
add
cwde
in
inc
mov
and
mov
fwait
sub
cmp
mov
movs
xlat
or
xchg
pop
loopne
pop
xor
repz
scas
call
jo
inc
pop
jp
add
mov
ss
cld
mov
dec
adc
fbld
sbb
dec
outs
sbb
ror
idiv
repnz
jmp
ja
outs
jmp
movs
pop
rol
(bad)
(bad)
call
jne
or
mov
mov
mov
cdq
or
push
pusha
bound
ins
mov
call
fsubr
jmp
into
xchg
mov
mov
xlat
jb
jmp
sar
add
sbb
mov
mov
(bad)
jg
aas
dec
jb
cmp
xor
adc
adc
jp
mov
iret
jle
mov
(bad)
inc
and
jmp
inc
scas
jl
lods
movs
das
xor
pop
leave
std
pop
cld
(bad)
(bad)
(bad)
(bad)
mov
push
pop
dec
cvtps2pd
mov
sbb
out
mov
aad
(bad)
xchg
movs
mov
inc
(bad)
call
cmp
jmp
out
out
inc
cli
xchg
fdivr
inc
cld
dec
cmp
mov
outs
mov
and
(bad)
out
js
push
and
sub
jns
cdq
dec
movs
stos
push
mov
(bad)
fucomip
and
mov
in
nop
and
dec
int3
jge
push
dec
push
retf
sbb
hlt
jmp
mov
daa
mov
(bad)
jmp
dec
fld
movs
call
jle
test
clc
push
xor
nop
sbb
(bad)
(bad)
push
ds
mov
lods
or
lahf
mov
retf
les
mov
repnz
(bad)
(bad)
push
into
add
cli
ret
xchg
lods
mov
pop
cmp
sub
imul
mov
inc
ss
mov
test
nop
sub
in
in
retf
sub
das
cmp
jmp
stos
movs
xor
js
sti
sti
xor
mov
jl
xor
inc
imul
cmp
loop
push
and
inc
test
jmp
popa
fsub
scas
add
mov
inc
cmp
aas
dec
pop
fst
ds
sub
adc
fwait
add
xor
fcos
mov
jmp
(bad)
jmp
fistp
hlt
clc
mov
scas
sub
dec
and
jg
xchg
mov
(bad)
repz
shr
push
imul
addr16
inc
push
ins
cmp
dec
loope
in
sbb
mov
iret
dec
(bad)
xchg
sbb
in
sbb
xchg
rep
out
push
in
ins
std
call
push
adc
push
cmps
sub
push
(bad)
jg
test
xor
adc
and
scas
push
loope
pop
dec
stos
stos
(bad)
in
mov
adc
je
mov
std
mov
cmp
mov
or
(bad)
jmp
cmp
mov
bound
shr
(bad)
mov
cmp
les
dec
adc
adc
or
sar
mov
in
mov
jmp
loopne
out
mov
std
mov
sti
cmp
je
add
xchg
push
xchg
mov
movs
movs
push
push
xor
(bad)
(bad)
call
push
out
push
cmp
cdq
arpl
mov
retf
or
aas
jmp
add
pushf
mov
add
dec
pop
mov
shufps
repnz
retf
sbb
mov
push
retf
sbb
std
and
or
dec
and
add
sbb
frstpm(287
adc
pop
sbb
push
or
add
jg
pop
fistp
push
adc
xchg
inc
cmp
punpcklbw
xor
jl
ins
ficom
pop
stc
(bad)
jg
inc
js
mov
loopne
cmp
scas
adc
add
(bad)
mov
dec
pop
inc
mov
mov
jb
(bad)
stc
cmp
frstor
movs
xchg
shl
or
in
fsubr
outs
fsubr
in
push
cli
pop
inc
cmp
fcmovnbe
fcomp
stos
pusha
mov
pop
cld
(bad)
call
add
add
or
mov
call
sbb
mov
imul
pop
adc
pop
jle
inc
or
add
push
(bad)
pop
cld
pushw
pop
test
add
stc
cmp
das
aad
(bad)
call
call
cld
dec
call
loopne
mov
cmps
out
xor
cld
and
and
in
sahf
mov
iret
(bad)
call
loop
push
lea
jmp
movs
in
cdq
js
dec
and
loope
fadd
icebp
loop
clc
in
mov
and
imul
xor
mov
pop
fs
push
sub
scas
pop
fist
icebp
std
movs
adc
(bad)
push
push
cmp
sub
xchg
cmp
pop
(bad)
(bad)
(bad)
jmp
cmps
mov
shl
movs
(bad)
into
stos
(bad)
or
cmp
dec
sub
mov
or
(bad)
loopne
push
int
jbe
push
rol
adc
(bad)
(bad)
js
dec
jmp
ret
adc
lods
jnp
sub
(bad)
dec
loop
outs
in
call
jge
adc
test
pop
and
(bad)
push
lds
std
in
xchg
out
push
push
jge
pusha
jmp
mov
aam
push
lsl
push
mov
int3
sub
imul
loopne
dec
or
retf
mov
sahf
push
imul
add
arpl
mov
scas
movs
pop
push
adc
add
cmps
or
and
jmp
sub
daa
stc
out
fwait
dec
lea
pop
or
stos
push
dec
scas
jge
call
(bad)
fdivr
inc
pop
not
xchg
and
xchg
mov
add
movs
pushf
and
adc
mov
loope
inc
jmp
xchg
outs
sbb
and
pop
mov
add
or
xchg
sbb
sub
dec
aaa
rcl
retf
(bad)
(bad)
out
popa
gs
movs
scas
jmp
or
cmp
inc
pop
sahf
xor
or
outs
or
stos
sbb
dec
pop
xchg
pop
(bad)
xor
add
pop
retf
cmp
jmp
jecxz
add
(bad)
dec
dec
ss
(bad)
lock
push
jmp
mov
mov
add
cmp
lsl
pop
pop
stos
xchg
mov
outs
jle
aas
rol
(bad)
cmp
push
jg
fwait
and
xor
mov
cmp
add
jmp
pop
mov
test
mov
scas
mov
dec
jmp
lds
sub
or
pop
sbb
add
ret
cmp
clc
push
mov
movs
(bad)
(bad)
inc
out
dec
lds
dec
loop
je
imul
xchg
fadd
in
retf
fcmovb
push
dec
add
(bad)
push
leave
lods
aaa
pop
push
(bad)
lods
scas
adc
(bad)
xchg
retf
or
mov
call
out
xchg
push
lock
movs
out
dec
repz
cmp
push
inc
mov
mov
dec
aas
in
ret
dec
mov
sbb
and
call
mov
scas
push
ja
jg
pop
inc
sbb
jge
sub
(bad)
enter
lock
push
popa
addr16
dec
movs
(bad)
(bad)
call
jl
lahf
mov
inc
gs
cmp
sub
daa
(bad)
lock
add
jnp
pop
(bad)
aaa
loop
add
pop
push
and
popf
movs
mov
dec
rcr
(bad)
(bad)
call
fstp
lahf
sbb
cmp
add
push
in
hlt
xor
jmp
call
stos
xchg
xlat
jecxz
in
jmp
bound
(bad)
(bad)
jg
arpl
mov
jo
mov
enter
pop
retf
sub
sub
mov
add
adc
fnsave
push
pop
xchg
ins
ror
arpl
out
enter
rep
mov
jno
(bad)
aad
(bad)
jns
aaa
add
ins
sub
inc
or
gs
fld
aas
sbb
gs
movs
sub
aad
shl
jns
pop
push
or
jmp
add
cmp
fistp
in
or
ret
add
scas
and
and
mov
fs
(bad)
sbb
fld
dec
loopne
(bad)
(bad)
dec
imul
mov
mov
call
or
in
dec
jb
dec
(bad)
(bad)
(bad)
dec
bound
arpl
addr16
jb
rcr
pop
stos
nop
in
adc
lods
jb
jmp
(bad)
(bad)
(bad)
mov
in
pop
xchg
jo
inc
test
(bad)
(bad)
in
pop
mov
in
cmp
pop
ror
push
ins
adc
enter
(bad)
inc
cli
and
imul
out
sbb
out
cmp
ja
xor
ins
std
out
push
rcl
iret
test
add
test
adc
test
push
pop
push
mov
(bad)
call
cmp
cwde
inc
fwait
push
dec
stos
cmp
add
popa
ds
into
jbe
ret
cmp
iret
retf
dec
and
pop
push
call
arpl
pop
cmp
mov
inc
sbb
sahf
or
and
cdq
pop
pop
ror
pop
(bad)
call
push
mov
cdq
ins
pop
in
sbb
or
loop
das
hlt
xchg
mov
mov
mov
add
sub
and
iret
mov
lea
(bad)
sbb
scas
jmp
cli
(bad)
dec
cmps
sbb
or
das
pop
or
or
pusha
(bad)
(bad)
jmp
mov
cdq
adc
into
xchg
and
jb
adc
add
jb
pop
xlat
sub
pop
jg
sub
pusha
mov
cwde
sahf
scas
retf
xchg
cmps
aam
jmp
mov
fisub
xchg
add
fs
and
(bad)
dec
inc
mov
js
mov
or
adc
(bad)
inc
fdivr
xor
hlt
dec
sub
test
cmp
stos
stc
repz
ret
adc
je
xor
mov
(bad)
mov
mov
leave
mov
cmps
push
push
push
pushf
push
fmul
cli
(bad)
call
mov
sahf
movs
or
aad
mov
adc
movs
enter
out
fdivrp
(bad)
mov
mov
rcl
(bad)
out
movs
sti
fdiv
loop
lock
std
inc
faddp
out
(bad)
mov
pop
ins
(bad)
jmp
repnz
std
xchg
add
inc
or
jmp
dec
inc
in
jns
imul
cmp
xchg
aas
retf
pop
loop
out
ret
call
push
imul
imul
gs
(bad)
call
loop
pop
add
adc
das
call
mov
mov
push
lock
push
js
xchg
(bad)
(bad)
dec
and
adc
adc
push
mov
inc
mov
fcom
test
mov
retf
add
and
into
ret
bound
adc
xor
(bad)
(bad)
inc
sahf
push
mov
push
out
fidiv
jmp
inc
mov
loopne
(bad)
inc
dec
mov
jo
aad
jmp
lods
daa
jecxz
iret
scas
sar
(bad)
jmp
ins
mov
sbb
adc
jmp
(bad)
dec
imul
(bad)
sti
dec
xchg
jno
stos
shl
mov
stos
jg
mov
inc
mov
push
fwait
and
out
xor
test
(bad)
cmps
pop
sub
and
pop
std
jmp
add
add
int3
inc
ficomp
cmps
add
(bad)
push
push
pop
movs
inc
(bad)
arpl
movs
movs
out
das
or
mov
jmp
dec
call
ret
aam
push
sbb
(bad)
call
arpl
fwait
cmps
push
cmp
xor
or
or
push
mov
(bad)
(bad)
(bad)
mov
inc
data16
(bad)
test
popf
jle
mov
sbb
daa
je
(bad)
call
fld
cs
dec
sub
jbe
popf
or
mov
cmc
push
lock
add
cmp
int3
(bad)
call
push
sbb
div
inc
daa
adc
adc
push
push
lock
sbb
pop
and
inc
test
std
(bad)
call
fdivr
fmul
sub
cmps
xor
xchg
pop
push
push
jmp
mov
in
jg
ins
push
mov
mov
imul
sbb
add
les
cmps
mov
jl
adc
pop
gs
imul
imul
imul
add
xor
mov
ins
or
out
jle
adc
lods
out
mov
xchg
cs
dec
shr
cmp
sub
dec
idiv
retf
aam
xchg
popfw
sbb
jmp
retf
pop
mov
cvttps2pi
sub
push
(bad)
(bad)
aas
push
push
sbb
frstor
in
or
xor
js
push
popa
movs
push
lock
cmp
xchg
mov
stc
inc
mov
or
sti
popa
out
std
(bad)
(bad)
push
fimul
jmp
jb
loope
(bad)
push
test
imul
call
ja
fucom
xchg
das
push
daa
fisubr
movs
xchg
js
dec
cmp
(bad)
clc
mov
loop
cli
fwait
lods
(bad)
pop
repz
sbb
(bad)
call
pop
xor
mov
sub
mov
sub
sub
mov
test
into
push
cmp
stos
leave
mov
aad
fld
xchg
ret
xor
hlt
(bad)
jmp
jp
sub
pop
adc
scas
fsub
mov
imul
adc
adc
in
mov
mov
scas
retf
push
in
push
jg
cmps
outs
stc
cmps
test
dec
pushf
dec
jmp
retf
mov
cdq
sub
xor
push
push
jne
push
cmp
(bad)
(bad)
mov
rcl
or
cwde
sub
mov
mov
cmps
in
outs
imul
(bad)
inc
cmp
retf
jnp
mov
scas
xchg
scas
sbb
add
(bad)
call
ror
cmp
in
sub
fwait
shr
(bad)
push
mov
cmp
mov
adc
fldcw
push
mov
dec
adc
out
add
and
jb
mov
stos
(bad)
ja
aad
add
(bad)
pushf
adc
dec
and
retf
ja
add
enter
daa
shl
add
dec
cmp
cld
(bad)
(bad)
(bad)
mov
das
xor
and
sbb
clc
mov
or
add
(bad)
(bad)
jmp
mov
jnp
mov
sub
scas
pop
les
(bad)
jmp
add
cmps
mov
pop
mov
in
xchg
ret
add
mov
arpl
dec
(bad)
(bad)
push
xor
push
mov
int3
adc
call
sbb
and
or
sbb
leave
mov
neg
pop
out
pushf
fild
xor
retf
(bad)
inc
push
mov
add
scas
hlt
or
sbb
sti
inc
adc
lods
int
out
sub
pop
loopne
and
push
stc
movs
leave
adc
push
retf
sub
mov
int3
ins
imul
repz
out
cli
(bad)
(bad)
(bad)
dec
ficomp
mov
mov
fst
pop
repnz
jge
fiadd
cmp
(bad)
(bad)
(bad)
jge
fistp
aad
cli
jmp
mov
addr16
inc
dec
data16
xchg
mov
std
sar
xor
(bad)
(bad)
push
out
int
loop
pop
push
ja
or
stos
in
fidivr
or
clc
jmp
(bad)
int
push
enter
(bad)
(bad)
dec
or
inc
scas
mov
stos
fs
lds
stos
(bad)
rcl
xchg
ins
add
test
mov
clc
inc
gs
imul
(bad)
(bad)
(bad)
jmp
sub
inc
xchg
stos
pop
stos
cmp
out
and
cli
call
into
xchg
imul
and
into
in
jmp
out
mov
aaa
(bad)
jmp
mov
scas
addr16
mov
or
pop
daa
(bad)
call
in
test
mov
jge
push
inc
pop
(bad)
(bad)
cmp
mov
dec
xchg
sub
xchg
inc
mov
mov
aaa
push
std
(bad)
stc
mov
cwde
arpl
out
(bad)
stos
sbb
cmp
call
adc
lock
(bad)
push
inc
jecxz
push
ja
mov
clc
(bad)
lods
bnd
add
sub
mov
(bad)
es
mov
push
retf
std
(bad)
(bad)
jmp
cmp
scas
sub
into
or
fcomp
dec
mov
mov
int
out
in
(bad)
push
mov
das
scas
xchg
push
jecxz
lds
dec
jae
mov
scas
pop
inc
or
dec
inc
loop
nop
adc
dec
loopne
daa
sub
int3
jg
mov
(bad)
and
out
push
pop
inc
(bad)
sub
call
test
call
scas
xchg
mov
jns
jmp
call
sahf
loopne
(bad)
call
(bad)
fldenv
mov
xchg
xchg
arpl
mov
mov
cwde
mov
cmp
into
and
in
clc
inc
or
jmp
pop
in
ins
(bad)
movs
xlat
(bad)
(bad)
jg
inc
iret
call
mov
fcmovu
pop
dec
lods
and
lods
imul
icebp
push
(bad)
cmp
imul
lods
sar
(bad)
push
lock
cmp
inc
jg
dec
(bad)
jge
fdivr
mov
cmp
in
(bad)
sbb
dec
retf
or
(bad)
js
cs
xor
mov
sub
leave
sahf
test
(bad)
call
or
sub
sub
jmp
int
ficomp
ins
scas
push
ins
inc
(bad)
call
test
or
xchg
mov
(bad)
(bad)
call
sbb
jmp
leave
cmp
bound
xchg
mov
out
inc
xchg
lock
inc
and
push
shld
rcr
push
cmp
loopne
(bad)
dec
es
inc
or
sbb
ja
ficomp
(bad)
xchg
aad
mov
(bad)
(bad)
(bad)
jmp
test
int3
push
sub
jp
enter
xchg
jmp
cld
add
shrd
(bad)
jmp
cs
xchg
movs
or
cwde
ins
out
or
cmp
mov
mov
dec
test
out
add
call
mov
pop
mov
(bad)
sub
xor
std
hlt
loop
cmp
pop
mov
sbb
(bad)
jmp
cmp
add
sahf
mov
or
add
pop
xor
jb
and
sub
xlat
iret
jbe
push
adc
push
hlt
push
fiadd
cli
xor
hlt
dec
add
outs
inc
xchg
fadd
lock
fisubr
xchg
outs
or
clc
mov
test
stos
lock
call
and
shl
(bad)
call
add
repnz
jae
xor
hlt
inc
sbb
pushf
call
loopne
imul
out
fsubr
push
xor
jp
push
lahf
popa
imul
xchg
ror
inc
loopne
test
mov
push
sbb
cld
dec
add
dec
xor
mov
sbb
scas
(bad)
(bad)
inc
cmp
xchg
mov
retf
xor
mov
xchg
gs
(bad)
fs
scas
arpl
hlt
aad
dec
or
imul
(bad)
mov
add
(bad)
push
dec
xchg
add
dec
push
(bad)
shl
test
push
sub
scas
in
int
mov
add
sbb
pusha
or
sbb
pushf
fucomi
sub
add
lds
push
sbb
fdivr
adc
and
ds
and
call
(bad)
mov
(bad)
add
(bad)
(bad)
fsub
sti
mov
mov
sar
(bad)
(bad)
push
dec
and
inc
push
dec
adc
cwde
cmps
adc
shr
out
daa
xor
movs
imul
test
call
dec
in
bswap
cmp
sbb
out
aas
sub
jmp
jb
inc
cmp
pop
(bad)
cmp
add
sbb
imul
(bad)
(bad)
(bad)
(bad)
stc
(bad)
fs
inc
adc
xchg
ins
ret
mov
mov
or
cs
in
(bad)
(bad)
push
xlat
call
inc
mov
push
in
fisubr
push
in
jmp
xor
pop
loopne
mov
mov
push
fdiv
in
mov
or
movs
or
cwde
(bad)
push
fwait
ds
cmp
pop
icebp
jmp
sub
sbb
mov
or
or
sar
sbb
cmp
(bad)
inc
adc
pop
push
xor
mov
cli
xchg
retf
movs
sbb
jbe
shr
jp
mov
(bad)
call
or
ins
in
add
push
jge
adc
fiadd
outs
dec
es
sub
movs
cmps
rol
sub
ds
mov
push
hlt
pop
call
mov
test
dec
pop
dec
cmc
movs
mov
std
jg
lods
int
movs
add
ficomp
out
cli
dec
aad
repnz
adc
xchg
scas
ja
call
adc
dec
and
adc
add
sbb
mov
mov
aaa
rcl
mov
sub
ror
scas
cmps
lea
dec
cmp
dec
cmp
iret
mov
jno
call
daa
mov
call
in
mov
loopne
mov
dec
fldcw
mov
jge
ds
jmp
sbb
xchg
adc
xchg
mov
imul
ins
mov
mov
pop
je
aaa
das
jp
lods
mov
jmp
lods
ins
std
jg
inc
or
mov
dec
mov
test
sub
jmp
xor
dec
pop
inc
cmps
cli
sbb
dec
dec
xlat
aad
call
cmp
mov
in
adc
call
push
movs
mov
cli
push
mov
ins
xchg
adc
dec
pop
mov
sbb
call
and
xchg
in
repz
data16
xchg
sub
and
jmp
dec
icebp
outs
in
fwait
sbb
pop
minps
mov
lahf
aas
dec
cmps
(bad)
jge
inc
ins
sub
jmp
add
mov
es
shl
fisttp
xchg
into
inc
pop
call
jp
daa
(bad)
call
adc
mov
and
movs
fcomp
(bad)
(bad)
jmp
jo
out
xchg
mov
mov
scas
movs
(bad)
cld
mov
inc
cmps
mov
jmp
(bad)
fwait
imul
mov
mov
(bad)
call
shr
mov
jb
(bad)
jg
outs
dec
xor
shl
lods
out
cmp
retf
outs
imul
cmps
(bad)
addr16
or
dec
dec
xchg
fidiv
(bad)
mov
mov
pop
loop
push
stos
fdivr
mov
scas
and
in
cmps
sahf
and
outs
call
cli
cli
in
cmp
es
shl
in
push
test
cli
lea
(bad)
(bad)
jmp
mov
call
repz
mov
cs
and
in
sbb
or
(bad)
out
clc
mov
scas
sub
lods
outs
jge
icebp
fnstsw
ror
fisttp
ss
je
dec
mov
mov
ins
dec
jecxz
adc
dec
out
pop
mov
stos
mov
(bad)
jmp
add
pusha
add
jg
ins
std
cmps
inc
jle
jp
pop
dec
sbb
jnp
inc
loope
out
popa
mov
fidivr
jne
or
adc
jg
push
ror
and
std
lahf
imul
xchg
and
inc
bound
push
aaa
stos
cmps
lods
push
push
adc
fcom
jb
(bad)
(bad)
bound
aas
jg
jg
dec
sahf
adc
test
push
mov
imul
push
retf
icebp
dec
sbb
shl
jmp
mov
retf
imul
mov
ins
mov
xchg
lahf
scas
sub
int3
cmp
in
adc
jb
or
push
out
dec
pop
iret
ja
lea
cld
repnz
int
ja
std
push
repnz
sub
outs
dec
push
xchg
or
mov
jge
cmps
lods
jmp
adc
test
cmps
cmp
jae
mov
iret
mov
ret
leave
ins
inc
test
js
and
xchg
sub
xchg
mov
add
ins
rcr
sub
into
mov
and
(bad)
cmp
ficom
addr16
and
retf
ins
in
retf
ja
cs
outs
and
pop
mov
cmp
mov
cdq
push
call
jne
xor
repnz
add
mov
retf
jg
ins
pop
pop
scas
add
sbb
fcmovu
aad
ins
cmps
jle
jmp
jmp
jmp
and
lods
data16
mov
dec
inc
arpl
outs
(bad)
fwait
imul
mov
pop
sbb
(bad)
(bad)
push
push
jno
in
(bad)
out
loope
movs
out
xor
arpl
and
aas
mov
jecxz
ins
jb
jno
fidiv
sar
fisubr
xlat
and
add
ret
scas
xchg
xor
call
dec
adc
mov
pop
stc
xchg
call
push
fs
sub
adc
xchg
sar
jmp
pop
out
sub
shl
mov
daa
and
mov
call
xchg
dec
ja
and
xor
or
adc
mov
inc
stc
addr16
push
lahf
add
cwde
xchg
test
mov
pop
jo
dec
stos
dec
stc
into
jns
inc
gs
adc
cdq
imul
les
mov
mov
dec
(bad)
mov
std
jbe
sbb
pop
jmp
xchg
into
inc
sbb
cli
jmp
jp
popf
(bad)
pusha
jno
cmp
jmp
mov
imul
and
cdq
mov
dec
sbb
ss
add
mov
imul
pop
lea
loopne
stos
xchg
or
mov
(bad)
jg
sub
dec
stos
daa
in
mov
test
shr
(bad)
int
jmp
push
ficom
jnp
dec
shl
mov
dec
or
fimul
push
pop
gs
cmps
lods
push
xchg
adc
bnd
and
fcmove
aaa
rcl
and
js
aaa
dec
jne
sbb
mov
push
je
popf
sub
push
outs
cmps
lods
pop
mov
enter
rcl
or
jno
out
mov
cmc
mov
jbe
lods
out
scas
sbb
push
mov
into
mov
pop
mov
sbb
dec
pop
into
jge
mov
call
sbb
sub
(bad)
fwait
imul
xor
jge
push
dec
ins
cdq
fisttp
pop
enter
xor
xor
inc
nop
cmp
xor
(bad)
jg
dec
inc
std
ficom
jl
pop
jns
add
mov
rol
dec
iret
ins
ss
fwait
imul
jle
jp
cpuid
cs
cmps
lods
jmp
sbb
(bad)
jle
mov
jge
addr16
jg
push
jl
retf
pop
and
cmps
add
retf
inc
cmc
(bad)
dec
sub
and
sub
retf
mov
dec
mov
popa
xchg
mov
loope
pop
push
jle
pop
retf
dec
jnp
ror
stos
jl
pusha
xlat
dec
mov
mov
lods
pop
push
add
mov
pop
cmp
sub
je
add
xlat
sub
pop
out
sub
inc
xchg
js
outs
sub
mov
mov
in
sti
mov
(bad)
(bad)
out
sub
stos
popa
lock
test
push
dec
jmp
xchg
xchg
lods
sti
cdq
mov
out
les
iret
jg
xchg
adc
jle
xchg
jmp
popf
imul
arpl
add
cmc
dec
std
pop
mov
repnz
out
arpl
jp
mov
imul
dec
call
mov
push
inc
ds
sub
mov
mov
(bad)
push
mov
shr
adc
cwde
ds
mov
or
push
ja
sbb
jmp
push
enter
test
mov
push
jmp
call
adc
jp
arpl
dec
sub
pop
cmps
loope
and
rcl
mov
aaa
jg
mov
pop
mov
call
add
xor
(bad)
jns
inc
cmps
mov
lds
jnp
xchg
jmp
pusha
sbb
das
mov
cmps
cmp
mov
dec
test
ja
xchg
or
add
lea
movs
popa
out
out
jo
(bad)
dec
mov
(bad)
enter
push
sbb
pop
stos
cwde
add
test
cli
dec
(bad)
cdq
mov
std
jno
and
daa
cmps
stos
push
(bad)
dec
shl
push
xchg
dec
pop
(bad)
pop
push
ins
jge
sbb
sub
das
or
and
out
adc
cmp
mov
movs
aam
pop
data16
ror
std
sub
ds
sub
fcomp
sbb
pop
out
rol
mov
jl
xor
inc
jp
add
iret
movs
stos
sub
div
sbb
jmp
sar
test
sub
scas
cli
cdq
imul
jge
pop
out
dec
pop
jnp
lods
xchg
loope
out
dec
sbb
jae
mov
std
js
neg
push
loopne
(bad)
jmp
cmps
movs
ja
jl
sub
jge
push
jns
push
repz
jge
les
fucomi
cld
cmp
test
pusha
inc
pop
movs
jbe
dec
ins
std
lahf
imul
inc
mov
in
push
add
in
loopne
into
(bad)
pusha
movs
add
xchg
dec
jmp
fwait
imul
jecxz
mov
rol
(bad)
adc
into
test
and
out
shrd
sub
add
xchg
into
jl
ins
mov
(bad)
out
jge
pop
cmps
fwait
adc
add
adc
fidivr
xchg
mov
jg
test
(bad)
dec
jg
sahf
sbb
int3
in
mov
inc
xchg
movs
fstp
loope
inc
mov
mov
movs
xchg
jle
jecxz
(bad)
mov
pushf
retf
inc
test
mov
dec
cmp
xor
sbb
call
mov
in
aam
inc
in
std
(bad)
dec
ja
sbb
loop
test
leave
jge
mov
push
adc
inc
pop
aas
xor
and
mov
dec
ja
mov
out
xor
rcl
dec
or
pop
cld
sti
dec
cmps
inc
jl
jo
fidiv
sti
sub
push
ins
jne
or
or
jmp
int3
imul
in
lods
lds
(bad)
ins
ds
mov
pushf
jae
mov
jle
lods
mov
jb
xchg
sub
mov
cmc
popa
xchg
xor
cdq
jb
xor
sbb
ret
sub
(bad)
lahf
imul
sub
aas
sar
push
lds
ja
jno
xchg
aaa
and
ja
js
and
nop
dec
addr16
pop
adc
dec
jnp
test
jbe
mov
jmp
popa
add
ret
sub
cmp
xor
dec
pop
adc
or
retf
popa
add
mov
les
aad
cdq
imul
(bad)
(bad)
stc
test
and
inc
jb
mov
loope
icebp
push
ja
lods
jmp
pop
out
cmp
repz
fucomi
repnz
jle
and
and
mov
(bad)
jg
xor
sbb
cmps
mov
xor
jbe
mov
imul
mov
cwde
ins
xchg
jns
mov
iret
lahf
jne
jno
jle
fs
mov
fs
(bad)
cdq
jae
gs
push
rcr
ins
call
mov
jg
ins
jae
pop
inc
push
xchg
xor
mov
(bad)
inc
xchg
pop
mov
jb
cli
push
sub
dec
pop
jbe
add
outs
cmps
je
inc
push
mov
mov
jno
mov
dec
mov
test
sub
jo
das
mov
mov
outs
cmp
test
xchg
xor
pop
cli
jg
repz
push
adc
or
stos
(bad)
push
enter
cwde
adc
cwde
jl
or
sbb
(bad)
jp
sub
jne
adc
cmps
jmp
call
push
fstp
dec
push
xchg
dec
(bad)
mov
jmp
lods
and
jle
inc
repz
mov
dec
mov
lods
push
shl
mov
rcl
xchg
mov
dec
sub
out
jno
cmp
aaa
js
scas
xchg
jmp
sbb
inc
add
sub
jecxz
jo
pop
xor
sbb
repz
imul
mov
xchg
fisubr
and
xor
jle
mov
hlt
dec
scas
ret
ja
es
gs
jmp
dec
mov
sub
inc
in
mov
pop
inc
jb
outs
aad
call
popf
push
cs
xchg
test
cdq
mov
jmp
jno
jge
mov
bound
pop
(bad)
push
mov
sub
mov
(bad)
(bad)
(bad)
push
gs
push
sub
sbb
retf
scas
add
dec
in
repnz
ror
or
(bad)
(bad)
(bad)
cmp
xchg
jb
nop
push
jb
aam
and
(bad)
aas
jne
scas
mov
iret
sub
dec
xor
mov
cmps
xor
inc
sub
loope
jo
mov
ret
movs
imul
dec
rol
jle
(bad)
dec
adc
or
arpl
inc
fimul
add
push
loopne
js
imul
fidiv
sub
mov
(bad)
cmps
out
mov
mov
aaa
je
fisubr
out
ins
retf
in
sbb
in
imul
xchg
sti
(bad)
jae
test
imul
inc
jmp
idiv
dec
dec
pop
repnz
cwde
sbb
inc
imul
ss
dec
stos
jnp
scas
movs
pushf
(bad)
out
mov
inc
(bad)
push
(bad)
xor
push
std
inc
imul
mov
iret
cdq
inc
ret
div
(bad)
(bad)
call
cmp
repz
fstp
call
pop
repnz
mov
(bad)
mov
or
enter
jmp
call
test
fwait
mov
lahf
and
ds
test
in
repz
mov
aas
(bad)
push
mov
xchg
jmp
(bad)
repz
std
(bad)
(bad)
(bad)
call
imul
(bad)
push
sahf
retf
je
lea
std
enter
lock
mov
(bad)
aas
jg
(bad)
jmp
jle
js
sbb
movs
jbe
and
cld
addr16
retf
cmc
dec
adc
les
mov
stos
fidiv
lock
inc
ror
push
sub
mov
inc
pop
imul
cmp
jg
dec
jle
rcl
jnp
push
div
(bad)
mov
dec
sub
lahf
pop
sub
(bad)
push
std
inc
adc
iret
ffreep
rol
pop
mov
push
shr
sar
(bad)
in
nop
mov
cdq
das
push
sub
pusha
(bad)
(bad)
call
js
retf
js
adc
mov
lods
jp
in
xchg
mov
cmc
(bad)
inc
fucomi
xchg
xor
(bad)
cdq
cld
movs
cmps
adc
jl
mov
(bad)
(bad)
out
mov
(bad)
or
out
jge
sub
push
mov
add
mov
dec
test
mov
add
jg
or
sub
sbb
lods
jmp
inc
(bad)
jmp
push
cmps
retf
loop
imul
xor
fs
out
cli
jg
add
test
push
mov
push
push
in
ss
push
jg
add
imul
(bad)
pusha
lahf
add
and
cmps
add
jb
cmps
cmp
js
inc
scas
(bad)
stos
(bad)
jmp
jmp
jbe
jae
test
mov
push
xchg
mov
(bad)
mov
mov
fstp
pop
xor
ret
mov
hlt
pop
retf
inc
loop
mov
out
aam
ds
or
aas
int3
nop
cmp
bound
mov
pusha
mov
lahf
icebp
or
fsub
cvtps2pd
add
pop
and
out
retf
cmc
fild
push
scas
and
sbb
sub
sub
call
jge
fld
add
mov
cmp
jg
dec
popa
aad
xor
popf
cmp
fsub
(bad)
cmp
loop
loop
jl
adc
rcr
mov
test
xchg
lahf
test
sub
sar
inc
and
inc
sub
scas
sbb
adc
and
scas
sub
shl
(bad)
dec
retf
jns
stos
ret
cmp
std
(bad)
adc
sbb
dec
jne
sar
adc
cmp
das
(bad)
(bad)
lock
test
fbstp
shr
xor
inc
gs
ret
dec
(bad)
inc
adc
mov
xchg
and
outs
(bad)
mov
cmp
or
(bad)
xchg
(bad)
dec
sbb
adc
ror
inc
jg
lahf
mov
sub
mov
add
aaa
inc
pop
popa
cmp
push
dec
xor
add
hlt
(bad)
jmp
call
retf
or
mov
ins
(bad)
fcomip
(bad)
mov
lds
jo
mov
cwde
dec
pusha
imul
out
test
jmp
movs
cmp
(bad)
jmp
jle
aas
mov
call
or
or
jle
(bad)
(bad)
dec
sbb
and
push
into
dec
pop
pop
rcl
test
jg
mov
dec
data16
lea
cmp
and
(bad)
(bad)
jmp
mov
dec
mov
and
or
imul
sub
hlt
cmp
sub
loope
(bad)
(bad)
(bad)
(bad)
jmp
inc
cmps
mov
fisub
scas
in
pop
ds
dec
cli
xlat
or
dec
(bad)
(bad)
(bad)
push
ret
lods
iret
lods
or
xor
stos
dec
pop
xor
adc
stos
fsubr
aad
push
push
xor
jmp
or
cli
(bad)
in
test
pop
jbe
je
cmps
cmp
(bad)
(bad)
inc
pop
sbb
scas
mov
test
push
mov
pop
sahf
jne
xchg
sub
scas
mov
mov
stos
sub
mov
and
(bad)
sub
jmp
in
sbb
adc
mov
outs
pop
leave
retf
shr
add
retf
(bad)
(bad)
jl
lea
and
stos
dec
clc
mov
or
movs
add
sar
dec
sbb
arpl
sub
or
loop
or
pop
(bad)
call
sub
mov
aas
xchg
addr16
imul
add
sbb
inc
mov
(bad)
xor
fadd
push
call
mov
pop
shl
sbb
sub
ins
pop
mov
jge
lock
popf
lahf
adc
(bad)
(bad)
push
fmulp
js
fcmovu
dec
and
or
call
push
movs
jbe
popf
jnp
push
xchg
in
fist
jmp
ds
xor
call
(bad)
aad
(bad)
mov
(bad)
(bad)
adc
xchg
ins
test
cmp
mov
jecxz
pop
hlt
sub
cmp
(bad)
mov
in
mov
sub
call
neg
xchg
adc
jmp
fnstsw
xor
aad
mov
pop
xor
ret
movs
xchg
dec
sub
leave
push
or
call
aas
sub
or
repnz
(bad)
(bad)
jae
in
aaa
jge
cwde
jmp
pop
sti
aam
push
out
xor
(bad)
mov
ds
out
test
mov
jg
push
out
cs
mov
mov
pop
inc
dec
pushf
shr
dec
sub
daa
sbb
inc
call
or
cdq
jle
in
jmp
mov
mov
pusha
ds
test
rcl
mov
(bad)
jmp
enter
jmp
inc
popf
mov
sar
and
call
iret
add
sahf
mov
out
cld
(bad)
jns
fld
rcr
cmp
pop
sub
jl
sbb
dec
xor
movs
or
jbe
gs
leave
jb
cld
sbb
stos
push
ja
jge
das
or
(bad)
stos
sub
cmp
loopne
jle
je
dec
adc
mov
mov
mov
dec
mov
retf
outs
aad
mov
sub
push
add
call
ror
jmp
(bad)
inc
ds
xchg
inc
daa
sub
add
aaa
jmp
out
stos
cmps
icebp
adc
inc
pop
mov
lods
imul
out
in
dec
xchg
jmp
hlt
std
sub
loop
call
cmps
inc
lock
dec
and
push
movs
aas
into
sbb
dec
jg
mov
or
int3
leave
mov
arpl
es
fucomip
addr16
(bad)
(bad)
inc
cmp
aad
sub
rcl
pop
pop
sahf
push
fnstsw
sub
in
daa
(bad)
(bad)
(bad)
push
dec
in
icebp
adc
mov
pop
adc
ret
imul
cs
mov
push
sub
int3
sbb
(bad)
(bad)
push
or
out
or
sahf
mov
iret
arpl
(bad)
cwde
xchg
and
or
dec
dec
push
push
rol
mov
jge
sbb
push
(bad)
jg
addr16
clc
into
or
iret
mov
pop
lods
jb
and
(bad)
(bad)
cli
fcomp
push
movs
jg
add
sbb
movs
(bad)
(bad)
call
nop
ins
push
sbb
mov
or
test
stos
mov
(bad)
(bad)
(bad)
inc
mov
mov
push
adc
add
sub
sub
jbe
iret
sbb
xchg
xor
push
cld
jmp
push
ins
test
shl
ss
sbb
test
jmp
add
(bad)
(bad)
fisubr
and
scas
push
cmp
push
mov
loope
das
clc
(bad)
jg
adc
das
cmps
adc
sub
mov
xor
test
inc
mov
(bad)
(bad)
cld
ret
das
jmp
xchg
mov
mov
sbb
mov
xchg
mov
push
hlt
inc
test
shr
sub
int3
movs
call
inc
scas
jmp
xchg
adc
xchg
ret
fs
xor
es
pop
sahf
js
ins
imul
jmp
cmp
add
mov
xchg
aad
lods
(bad)
cmp
(bad)
das
vstmxcsr
dec
fcomi
jmp
stos
retf
xor
jmp
es
frstor
sub
inc
daa
sub
(bad)
cmp
push
and
mov
daa
fs
(bad)
(bad)
inc
in
imul
push
xor
jmp
mov
movs
sub
(bad)
(bad)
call
in
inc
enter
test
dec
lods
sub
add
push
loop
aaa
jmp
push
sar
call
sub
test
push
or
sbb
bound
pop
pop
(bad)
push
sub
sub
mov
sub
pushf
mov
and
dec
dec
call
pop
lock
sub
mov
bound
in
push
sub
jmp
sbb
(bad)
jg
clc
mov
dec
xchg
mov
push
clc
pop
push
push
dec
push
loop
fyl2x
mov
mov
mov
adc
movd
cmc
(bad)
cmp
nop
inc
xchg
and
push
imul
(bad)
(bad)
inc
(bad)
call
cwde
dec
xchg
adc
mov
cli
popa
add
cmp
mov
mov
(bad)
(bad)
call
mov
loopne
fwait
mov
mov
fild
jmp
aam
retf
cmc
ds
(bad)
call
fisubr
jg
mov
cmp
outs
pop
(bad)
addr16
or
and
jmp
jmp
loope
lds
hlt
(bad)
mov
call
add
call
dec
(bad)
sbb
js
xchg
xlat
mov
mov
sbb
dec
dec
push
(bad)
fcom
mov
jmp
test
pop
push
(bad)
dec
sub
and
mul
dec
mov
enter
std
mov
imul
fcomip
(bad)
jg
out
jmp
imul
popf
lods
push
jl
dec
pop
dec
sbb
(bad)
jmp
lods
add
lods
fimul
jle
inc
mov
pushf
(bad)
sub
mov
mov
add
xor
stc
cdq
or
or
mov
and
mov
or
cmp
mov
movs
(bad)
(bad)
jmp
jmp
or
in
out
sub
iret
push
jecxz
sub
(bad)
scas
fst
call
lea
shr
inc
push
mov
(bad)
call
and
or
fsub
push
addr16
mov
pop
cwde
sub
mov
xor
add
cmps
in
nop
cli
ficomp
jmp
mov
cli
repnz
lock
scas
mov
pushf
add
fld
mov
out
cmp
outs
mov
(bad)
(bad)
(bad)
out
mov
jge
jge
hlt
sbb
imul
mov
mov
(bad)
(bad)
cmp
mov
daa
inc
aaa
cmp
cmc
push
jecxz
sub
dec
stos
repz
outs
sub
pushf
retf
sub
mov
and
sub
dec
push
cmp
bound
mov
test
fisubr
test
loop
jae
cdq
mov
(bad)
or
sar
dec
repnz
xchg
(bad)
jmp
push
inc
mov
and
ins
(bad)
fstp
cdq
jno
and
mov
clc
dec
js
cdq
dec
inc
mov
dec
cli
push
sbb
(bad)
jmp
cmps
lahf
push
jns
mov
sub
(bad)
aas
je
push
sbb
inc
jnp
or
xchg
aaa
ret
sbb
mov
shl
and
push
fdivr
mov
adc
push
into
cmp
ins
sar
cs
(bad)
push
data16
scas
cmc
or
sub
call
mov
push
ja
mov
iret
mov
or
aad
(bad)
jmp
pop
or
stos
xchg
mov
addr16
and
jmp
ffreep
stos
call
mov
jns
dec
movs
inc
fwait
jb
mov
mov
pop
mov
add
push
inc
cmps
test
(bad)
(bad)
jg
leave
lods
loopne
std
call
in
push
loope
mov
xchg
fsubr
cs
add
arpl
push
mov
iret
adc
call
shr
jne
dec
loopne
jmp
cmp
(bad)
outs
rol
dec
jb
int
cmp
sbb
or
mov
data16
mov
iret
push
cmp
and
movs
fiadd
pusha
mov
loope
pop
popf
or
xchg
jecxz
daa
(bad)
sar
ins
add
pop
dec
lea
stos
mov
or
dec
mov
outs
ror
pop
pushf
mov
clc
(bad)
fisttp
(bad)
mov
push
and
mov
in
sub
fidivr
lds
scas
outs
lock
xor
retf
mov
(bad)
sub
(bad)
dec
(bad)
sbb
call
and
scas
inc
sub
mov
mov
jb
jmp
shl
xor
clc
(bad)
(bad)
(bad)
(bad)
call
mov
pop
ret
(bad)
sar
mov
sbb
or
jg
push
lahf
sbb
in
jle
pop
pop
add
push
push
cmp
or
(bad)
jg
cmp
add
mov
imul
inc
dec
jge
jmp
or
mov
and
cmp
cmc
lea
outs
mov
jl
call
addr16
(bad)
(bad)
(bad)
mov
clc
ss
adc
test
out
(bad)
push
loopne
(bad)
cmps
sbb
jmp
stc
push
stc
adc
stos
in
push
xchg
fcomp
outs
or
(bad)
call
mov
out
mov
in
or
in
dec
shr
(bad)
(bad)
(bad)
cmp
dec
and
jle
(bad)
cs
call
jp
ja
dec
xchg
loop
push
cmc
(bad)
dec
dec
(bad)
dec
out
inc
mov
dec
mov
dec
xor
out
lock
ror
shl
jmp
ficom
pushf
stos
call
stos
mov
aaa
or
fcmovnbe
jle
sub
xchg
ins
sbb
mov
jg
lods
aad
push
int3
mov
cmp
call
mov
aaa
xchg
inc
xchg
scas
mov
jmp
mov
jmp
scas
push
mov
test
clc
movs
pop
pop
dec
outs
inc
retf
ins
xchg
int
pushf
push
dec
mov
fld
sub
pop
pushf
ins
dec
in
popf
and
inc
push
js
cdq
sbb
(bad)
(bad)
js
jl
(bad)
jle
push
pop
jnp
sub
lds
mov
pop
bound
sahf
retf
je
fldl2t
pop
pop
mov
add
dec
retf
push
push
in
test
int3
test
outs
fstp
mov
test
lds
sub
adc
mov
pop
push
pop
jmp
sbb
mov
imul
inc
call
or
mov
sahf
add
(bad)
or
loop
retf
pop
pop
ss
cld
(bad)
(bad)
mov
cmps
stos
fcmovbe
jae
lea
je
ins
jmp
adc
jg
enter
dec
popf
cld
call
pop
pop
dec
stos
pop
cmps
shr
push
dec
les
dec
ins
test
or
inc
fidiv
xchg
sar
les
imul
imul
or
adc
xchg
rcr
imul
pop
std
int3
(bad)
pushf
lods
cmp
xor
icebp
aas
aam
addr16
add
push
js
pop
sar
cdq
shl
jg
pop
xor
ds
pop
fcomp
lods
add
iret
pushf
pop
xchg
xchg
push
mov
das
pop
retf
add
mov
push
cmp
jbe
ss
(bad)
(bad)
(bad)
inc
or
xchg
test
ins
pop
inc
cmps
retf
sub
retf
jmp
push
jmp
hlt
ins
rcl
retf
pop
mov
test
push
in
mov
stc
mov
pop
scas
xchg
inc
aaa
dec
stos
lea
mov
outs
mov
pop
adc
movs
popa
cmps
inc
mov
cli
(bad)
inc
push
mov
in
pop
leave
pop
cmps
mov
pop
jp
adc
inc
call
sbb
outs
dec
out
fild
test
inc
pop
mov
mov
pusha
ficomp
jg
cmps
xchg
sbb
push
je
outs
int3
pop
mov
mov
ja
xchg
stos
pop
adc
sti
call
push
enter
mov
mov
mov
call
mov
shl
rcl
loope
pushf
mov
(bad)
(bad)
fbstp
sbb
pop
sbb
mov
iret
fcom
and
pop
icebp
out
pop
adc
pushf
(bad)
(bad)
(bad)
inc
loop
test
push
mov
pop
mov
aas
fsub
mov
xchg
adc
add
pop
sbb
jnp
pushf
mov
jo
(bad)
push
jle
pop
ret
add
push
pop
xlat
fdivr
clc
ret
push
ja
mov
pop
pop
fdiv
jbe
inc
icebp
jl
mov
out
mov
pop
hlt
jl
add
je
je
mov
adc
rcr
fistp
sub
std
sahf
sbb
(bad)
(bad)
(bad)
fcmovnbe
add
aam
jno
xlat
pop
or
(bad)
and
jp
mov
mov
(bad)
jmp
clc
cwde
int
lods
push
fsubr
nop
jo
xchg
lahf
(bad)
cmps
cwde
push
fmul
test
fwait
imul
mov
lahf
push
pop
ins
jg
push
or
pop
add
fdivr
mov
stos
inc
sti
pop
pop
sahf
lods
jmp
inc
cli
fs
pop
fmul
mov
js
push
pop
jmp
adc
imul
mov
mov
dec
add
cmp
sbb
shl
clc
push
mov
sbb
fisubr
retf
cli
(bad)
aad
jb
hlt
outs
clc
jl
aam
jg
mov
or
mov
mov
xchg
or
in
pop
pop
mov
push
pop
push
push
sub
pop
jl
fdivr
nop
mov
jmp
xlat
mov
lods
push
sbb
jmp
push
aad
push
mov
fist
push
lock
xor
jle
or
aad
xlat
or
fdivr
(bad)
movs
test
dec
fmul
mov
mov
retf
loope
sar
clc
pushf
sbb
cmp
add
or
xchg
or
jl
add
sub
push
retf
or
fstp
pop
stos
pop
and
pop
fist
std
jg
loop
rcr
mov
cdq
test
mov
cdq
pop
icebp
pop
ins
lods
mov
inc
fst
mov
repnz
jg
adc
ja
jno
call
push
dec
pop
or
and
cdq
stos
(bad)
sbb
fisttp
jl
or
mov
(bad)
(bad)
jmp
cmp
mov
test
mov
or
pop
sbb
xor
fwait
add
stos
cld
in
ja
sub
pop
in
(bad)
xchg
sub
jmp
mov
dec
clc
mov
mov
ins
shl
retf
or
adc
mov
or
jno
pop
mov
ror
movs
cmps
xchg
mov
jns
mov
sub
xchg
cmps
cmps
sar
cmp
dec
inc
dec
sbb
fnsave
dec
add
(bad)
stc
cmps
pop
stos
adc
(bad)
dec
adc
or
test
mov
add
out
fidivr
mov
jecxz
inc
(bad)
pusha
jge
call
cdq
adc
int
jb
and
xchg
fisub
push
push
mov
mov
pop
push
add
sub
(bad)
(bad)
(bad)
(bad)
cli
adc
mov
ins
cli
loop
pop
mov
repnz
push
sbb
mov
loop
sti
mov
dec
sti
sbb
push
mov
push
xor
xor
mov
stos
mov
test
cs
je
(bad)
call
cmp
inc
pop
sbb
mov
arpl
inc
adc
or
das
and
(bad)
(bad)
fcomip
cwde
push
sub
cli
mov
jmp
jmp
xor
sub
dec
sbb
jg
(bad)
jg
imul
inc
test
sub
dec
jmp
ds
and
(bad)
and
and
imul
mov
cmps
push
mov
ror
or
test
mov
dec
test
jns
cmps
push
mov
adc
nop
lods
dec
cmp
pop
jp
push
inc
movs
sub
mov
or
rol
imul
pop
js
mov
div
(bad)
dec
retf
call
inc
ror
je
retf
pop
scas
pop
call
pop
sbb
addr16
or
retf
or
push
dec
mov
in
enter
stos
jle
or
mov
mov
call
test
(bad)
rcr
dec
and
dec
cdq
pop
(bad)
cs
popa
aam
cwde
ins
pop
outs
(bad)
mov
cs
push
inc
repz
mov
pop
pop
aas
xor
sub
or
mov
cld
(bad)
(bad)
call
inc
popf
loopne
sar
dec
dec
int
dec
and
lea
pushf
pop
mov
inc
sub
in
cmp
stc
pop
xchg
dec
mov
sbb
jbe
cmp
(bad)
mov
cwde
test
pop
mov
mov
xor
call
sub
mov
test
sub
and
mov
mov
daa
xchg
pop
jnp
sahf
lahf
pop
or
std
(bad)
inc
push
aam
leave
lock
cmp
neg
dec
ds
(bad)
dec
sar
in
sub
js
in
ins
popf
jl
pop
test
adc
(bad)
(bad)
(bad)
inc
ins
lea
mov
cs
stos
mov
loope
jp
ja
pop
icebp
pusha
movs
leave
popf
pop
cli
pop
pop
hlt
and
cmp
fisttp
(bad)
in
or
stos
xor
adc
stos
cmps
(bad)
dec
aaa
mov
out
add
cdq
mov
dec
idiv
mov
jmp
mov
stos
cmp
mov
scas
and
(bad)
in
mov
data16
je
cmps
ss
(bad)
out
sbb
pop
(bad)
sub
call
pop
push
(bad)
js
mov
or
pop
mov
mov
dec
fild
ins
mov
mov
jmp
pop
or
adc
scas
sbb
pop
ds
xchg
stos
dec
scas
xor
std
mov
lods
aad
test
sub
gs
pop
or
dec
pop
aad
sbb
rcl
or
cmp
(bad)
out
(bad)
mov
push
dec
out
int3
js
jmp
fsubr
push
add
aaa
pop
dec
sub
std
jmp
mov
outs
cwde
into
int
adc
or
lock
(bad)
mov
inc
in
xchg
sar
pop
pop
sub
jb
pop
adc
das
mov
leave
dec
iret
push
test
xchg
fmul
jmp
inc
mov
mov
mov
jmp
fimul
ret
inc
sbb
pop
rcl
stos
aad
dec
pop
int
fwait
mov
int
loope
(bad)
ror
mov
sahf
lods
sub
fcmovnbe
int
or
test
fcmove
lahf
outs
add
popf
adc
call
in
mov
and
movs
stos
mov
fstp
sbb
call
inc
dec
mov
mov
inc
dec
and
dec
(bad)
(bad)
fild
int
cmp
sbb
cs
fcom
mov
sbb
pop
js
(bad)
mov
sbb
(bad)
push
in
lods
jne
fisttp
inc
mov
mov
dec
out
pop
into
leave
sub
pop
pusha
push
out
fadd
pop
test
mov
push
cmp
push
push
mul
pop
test
sti
and
mov
iret
jl
retf
mov
xchg
mov
push
pop
shr
mov
sub
pop
(bad)
fneni(8087
dec
xor
loopne
jecxz
(bad)
jg
fisttp
cs
loop
lahf
test
cmp
in
retf
push
movs
ins
das
int
adc
pop
in
pop
pop
into
(bad)
inc
cld
test
cwde
outs
mov
pusha
jne
dec
outs
es
idiv
scas
das
mov
(bad)
fstp
cmp
daa
sub
pop
jmp
sub
retf
call
scas
mov
jmp
idiv
sub
push
cld
pop
fidiv
sub
in
dec
push
fistp
fild
out
pop
lods
adc
call
jae
daa
pop
stos
sub
pop
lock
cli
mov
inc
cmps
repz
jmp
out
mov
pop
cmps
xlat
mov
sub
hlt
dec
loope
inc
cli
cld
mov
pusha
sub
cmp
and
call
daa
(bad)
cs
mov
(bad)
jecxz
push
mov
cmps
test
inc
leave
daa
adc
ds
cmp
mov
ss
call
add
ret
dec
dec
clc
push
loopne
xchg
sahf
js
out
imul
sub
stos
dec
add
in
test
push
retf
repz
das
ror
mov
cmps
idiv
(bad)
and
push
push
add
sub
pop
jmp
mov
outs
push
(bad)
ret
test
sbb
movs
scas
add
adc
call
and
movs
pop
test
jmp
mov
push
jecxz
cmps
bound
dec
xor
shr
xchg
(bad)
mov
jg
cmp
movs
sbb
std
enter
sbb
dec
or
clc
addr16
mov
mov
outs
push
sub
jge
js
(bad)
fst
xchg
cmc
push
cmp
mov
je
xor
fild
adc
out
(bad)
(bad)
(bad)
push
and
je
mov
dec
fdivr
(bad)
ds
fcomp
stc
lea
stos
pop
push
xchg
call
repz
pop
jb
mov
cs
push
pop
aam
or
pop
pop
sbb
ins
sub
sbb
(bad)
gs
pop
rcr
mov
inc
pop
sub
pop
out
inc
scas
out
movs
jmp
sub
(bad)
ror
and
add
rcr
push
adc
cmp
pop
aaa
xchg
mov
dec
mov
jl
add
push
rcl
jno
push
sbb
js
cld
cld
adc
jg
ja
sbb
push
outs
pop
bnd
pop
(bad)
push
je
fsubrp
inc
cs
jg
inc
pop
jmp
dec
fyl2xp1
sbb
inc
outs
cli
or
push
mov
pop
stos
ja
loop
(bad)
(bad)
push
fimul
sbb
or
push
sar
ds
ror
mov
rol
xchg
mov
add
add
mov
or
pop
pushf
push
stos
stos
pushf
mov
out
mov
or
inc
jg
jge
pop
pop
test
das
fisub
sub
push
pop
pop
or
inc
(bad)
(bad)
(bad)
(bad)
aas
pop
mov
(bad)
mov
sub
adc
dec
dec
mov
iret
mov
outs
jmp
sti
lods
scas
es
stos
cld
mov
retf
clc
gs
(bad)
js
xor
adc
std
daa
dec
fidivr
inc
mov
retf
or
jp
mov
mov
je
cmc
pop
ss
pushf
sub
(bad)
fidivr
cli
(bad)
mov
test
movs
and
pop
clc
fpatan
sar
test
and
call
sbb
jp
mov
push
stos
cmps
(bad)
jg
shl
lods
sub
mov
pop
sbb
push
xor
or
(bad)
call
sahf
(bad)
mov
push
sbb
sbb
outs
cli
adc
jmp
call
lods
dec
mov
cmp
(bad)
mov
mov
push
xor
es
xchg
fiadd
or
mov
cli
into
into
dec
das
mov
test
jmp
pop
cmp
das
mov
adc
ficom
leave
xchg
jge
push
inc
sbb
ror
dec
and
fisub
pop
ins
push
xor
das
je
mov
clc
add
in
pop
mov
int3
fimul
mov
rol
fst
cs
jmp
jb
adc
pop
sub
cmp
jp
call
ret
sub
mov
call
sub
jmp
mov
push
cmp
ret
fbstp
push
ror
mov
inc
pop
or
mov
icebp
scas
repz
jbe
pop
lock
lock
repnz
mov
sbb
pop
repz
fld
(bad)
mov
cmp
push
mov
das
ss
loope
cmps
and
adc
std
(bad)
in
stos
or
xor
fstp
jmp
jg
outs
xor
pop
sti
sub
pop
das
add
outs
mov
pop
jo
mov
(bad)
mov
mov
mov
pop
pop
(bad)
call
or
dec
cmps
mov
in
or
test
and
(bad)
(bad)
push
cmps
popf
std
popa
test
std
stos
jmp
add
dec
pushf
push
fisttp
(bad)
push
sbb
(bad)
sahf
mov
dec
lea
mov
jne
ja
int
fisttp
pop
dec
fild
pop
rcl
pop
dec
push
ja
or
fmul
xchg
inc
sahf
sahf
(bad)
call
cld
lahf
out
je
push
sbb
dec
pop
mov
pop
pop
sahf
pop
fnstcw
ss
push
dec
sahf
push
lods
sar
cmp
into
hlt
in
jo
js
lahf
lahf
(bad)
enter
xor
pop
(bad)
je
daa
push
push
sti
(bad)
mov
das
cmp
mov
lahf
test
in
mov
mov
push
mov
mov
sahf
lea
fst
mov
pop
dec
pop
iret
pop
in
sbb
jle
pop
cs
cs
imul
jg
and
dec
lahf
arpl
sub
iret
jmp
arpl
fistp
inc
in
cwde
sahf
pop
push
xchg
add
(bad)
cmovno
pop
lea
rcl
push
fdivp
jle
sub
arpl
lea
(bad)
cmps
add
push
lahf
inc
pop
cmp
in
(bad)
push
add
cmp
xor
pop
push
dec
into
call
fld
dec
pop
scas
sar
(bad)
jmp
arpl
xchg
xchg
cmp
mov
(bad)
shl
(bad)
(bad)
inc
dec
lahf
add
ds
scas
iret
enter
(bad)
ror
inc
dec
mov
jno
inc
inc
dec
out
inc
ds
sahf
and
(bad)
or
sbb
jecxz
pop
dec
repnz
jle
sahf
dec
fadd
dec
jg
cli
pop
and
in
movs
int3
cmp
push
mov
xor
cld
fst
leave
movs
lock
std
popf
sub
adc
(bad)
(bad)
jmp
fadd
js
cdq
adc
dec
mov
cli
sub
icebp
mov
pop
es
jg
ins
stc
dec
stos
lods
aaa
jle
lahf
add
inc
in
cld
mov
jg
dec
outs
not
or
rol
or
das
mov
dec
sub
das
idiv
dec
add
dec
ret
int3
inc
mov
lea
(bad)
sbb
call
ret
sub
pop
in
push
pushf
xchg
jmp
pop
(bad)
(bad)
(bad)
call
and
dec
sub
(bad)
cmp
or
cmp
ficom
inc
pop
out
ins
sub
(bad)
(bad)
call
div
mov
ins
dec
fsubr
test
int
and
xchg
jno
fmul
lea
fcomip
pop
bound
sub
add
pop
faddp
mov
loop
sub
call
loop
loope
clc
push
xlat
jl
aad
sbb
add
leave
mov
xchg
mov
xchg
(bad)
xor
pusha
mov
inc
popf
ret
push
xchg
mov
ret
add
out
pop
test
ror
(bad)
aas
push
int3
mov
dec
pop
mov
add
scas
rcr
ins
in
out
clc
popf
cmp
(bad)
(bad)
(bad)
(bad)
jg
shr
lods
ret
out
dec
pop
or
jne
mov
std
in
mov
pop
cli
aaa
push
(bad)
(bad)
xchg
adc
fstp
inc
xor
fs
fcomp
jg
mov
call
(bad)
jg
ret
std
or
fld
cdq
mov
test
jo
and
cdq
scas
in
rcl
cdq
ret
inc
pop
(bad)
scas
test
mov
(bad)
jg
xchg
mov
add
cmp
je
pop
fadd
js
(bad)
fcom
ret
fcmovbe
jle
js
fmul
inc
scas
xor
lahf
(bad)
call
push
jns
test
mov
pusha
add
test
test
pop
ins
(bad)
(bad)
(bad)
call
dec
xor
scas
pop
shl
js
stos
fucomi
imul
arpl
sub
(bad)
jmp
sahf
movs
int3
cs
adc
xor
in
pop
(bad)
xchg
pop
add
das
clc
push
mov
pminub
inc
sub
sub
(bad)
call
mov
fiadd
mov
or
fcmovnu
dec
xor
pop
shl
xchg
test
pop
or
lods
pop
cmp
xlat
cli
(bad)
out
mov
xor
loope
fdivr
xchg
fsubr
cmps
sar
fst
lods
pop
push
retf
vorps
push
xchg
(bad)
jmp
inc
sti
pop
aad
ins
cli
xor
inc
test
sub
or
(bad)
(bad)
push
(bad)
shr
fwait
cdq
dec
fldlg2
add
sub
mov
test
loop
jl
call
call
fdivr
ja
jno
leave
mov
(bad)
(bad)
(bad)
dec
mov
push
pop
fmul
xchg
imul
jl
clc
adc
pop
sub
xchg
fld
iret
dec
push
pop
push
push
fsub
popf
pop
ss
mov
jl
test
xlat
cmps
repnz
sbb
jns
das
mov
mov
int
mov
jmp
cmp
loope
ins
pop
int
bound
mov
mov
cld
(bad)
jmp
test
mov
mov
mov
jmp
(bad)
fldcw
mov
sub
xchg
rcl
in
sub
daa
stos
adc
mov
mov
cdq
sub
pop
push
or
dec
(bad)
(bad)
(bad)
inc
dec
inc
cli
popf
mov
dec
stc
xor
loop
inc
and
bts
das
cli
jmp
mov
pop
lock
in
in
pop
clc
dec
je
retf
(bad)
sbb
sahf
sub
sub
loopne
pop
pop
movs
fwait
sub
add
rdmsr
hlt
inc
or
popa
ficomp
ins
inc
cld
or
data16
(bad)
dec
loopne
iret
push
lods
sub
or
inc
fistp
ret
stos
sub
(bad)
(bad)
(bad)
(bad)
jl
popf
push
clc
lods
xor
mov
mov
sub
or
fs
sub
leave
test
mov
cld
(bad)
(bad)
jmp
ficom
daa
or
mov
fxch
jmp
cmp
or
fsin
inc
sub
imul
dec
cdq
mov
jmp
bound
(bad)
push
loope
pushf
icebp
jo
pushf
mov
leave
xchg
push
cmp
test
jb
dec
stos
lea
(bad)
call
popa
fxch
ret
xadd
frstor
jns
clc
(bad)
(bad)
call
es
nop
jp
adc
(bad)
pop
fild
jp
xor
mov
push
xor
(bad)
(bad)
mov
(bad)
jl
cmp
std
addr16
jne
fisttp
or
push
push
fdivp
mov
mov
(bad)
call
cmps
iret
fld
pop
rcr
or
pop
or
push
push
pop
mov
(bad)
call
div
stos
pop
cdq
xor
movs
lahf
mov
inc
ins
push
fisub
inc
mov
(bad)
(bad)
(bad)
call
xor
push
icebp
(bad)
sbb
sbb
scas
cmp
les
sub
stos
xchg
mov
jns
test
pop
iret
and
int3
mov
jno
int3
(bad)
push
out
cmp
push
sbb
retf
inc
xchg
xchg
adc
daa
pop
fistp
dec
(bad)
fsub
outs
and
dec
jmp
shl
mov
inc
cwde
or
mov
(bad)
call
lods
adc
fcmovnu
loope
fdivr
mov
ja
mov
push
icebp
dec
into
fwait
adc
enter
and
jmp
jmp
jnp
pusha
or
ja
hlt
pop
and
sbb
retf
jmp
(bad)
fst
push
cmp
lahf
sub
gs
je
pop
jne
push
(bad)
(bad)
(bad)
jmp
retf
or
mov
mov
fldcw
jae
mov
ins
(bad)
(bad)
(bad)
dec
pusha
call
in
fcom
pop
push
(bad)
loopne
mov
adc
cmc
xlat
mov
sbb
lock
mov
out
(bad)
js
daa
and
pop
jnp
jl
mov
fnstcw
sbb
ror
clc
dec
std
and
fs
inc
icebp
jmp
in
pop
adc
test
dec
in
iret
cmp
(bad)
and
ror
retf
or
push
ret
(bad)
(bad)
call
mov
idiv
dec
imul
sar
mov
(bad)
(bad)
pusha
pop
jl
test
(bad)
mov
inc
adc
sbb
mov
test
shr
inc
pop
mov
test
pop
in
(bad)
jg
movs
push
enter
ror
ins
cmp
popa
mov
xlat
(bad)
(bad)
(bad)
inc
lods
ret
dec
repnz
fstp
mov
mov
mov
mov
nop
in
sahf
sub
cmc
(bad)
(bad)
jmp
cmp
pop
xchg
dec
jmp
pop
inc
repnz
mov
ror
dec
xor
jp
icebp
call
arpl
stc
mov
(bad)
cmc
int3
push
ins
(bad)
fild
repz
cmps
mov
mov
pop
dec
jno
retf
(bad)
call
loopne
push
pop
test
cmp
pop
mov
mov
movs
dec
xchg
ror
(bad)
jmp
inc
scas
or
nop
dec
rcl
test
cmp
aas
mov
scas
cmps
movs
ins
cmp
push
ins
sti
xor
push
jp
ud0
(bad)
jmp
lods
sbb
pusha
sbb
repz
stos
pop
pop
(bad)
cwde
inc
mov
ds
push
fidiv
(bad)
sbb
jge
sar
(bad)
(bad)
jmp
sbb
(bad)
je
ret
pop
push
fld
fcomp
pop
push
xchg
adc
pop
popf
mov
movs
sbb
dec
mov
inc
out
cmc
(bad)
out
pop
mov
dec
ins
add
pushf
cwde
mov
pop
(bad)
call
xor
fidiv
jbe
int
(bad)
lods
ja
js
mov
fistp
jo
(bad)
(bad)
call
push
mov
imul
adc
or
pop
adc
ja
retf
cld
lods
jmp
std
pop
cmc
call
das
ja
ret
pop
mov
in
mov
cmp
adc
jg
add
mov
xor
stos
aaa
movs
in
sub
(bad)
dec
lea
sub
mov
or
outs
pop
mov
lods
xor
ret
scas
or
mov
jge
(bad)
(bad)
call
mov
lea
cmp
sub
xor
pop
push
cmp
fisubr
sar
fstp
call
push
arpl
mov
mov
jp
sub
add
(bad)
dec
inc
dec
int
sub
mov
xchg
sbb
push
pop
jge
retf
std
pop
add
icebp
sub
pop
rcr
jg
(bad)
fstp
fwait
xor
ror
sbb
or
es
pop
push
pop
jl
pop
jl
mov
sub
fisubr
clc
(bad)
call
je
mov
out
mov
scas
cmp
fstp
ins
and
sar
(bad)
(bad)
fsubr
pop
pusha
lea
cmp
movs
sub
loopne
mov
sub
cmc
jg
test
enter
loop
enter
push
mov
adc
dec
stos
adc
(bad)
(bad)
(bad)
dec
addr16
adc
adc
mov
dec
stos
ret
sbb
test
jb
push
(bad)
(bad)
(bad)
call
sbb
cmps
xchg
into
pushf
fsub
mov
xor
std
adc
(bad)
sub
and
dec
lahf
ficomp
lock
into
(bad)
fisubr
not
(bad)
fnstenv
cmps
das
mov
fsubr
(bad)
(bad)
(bad)
(bad)
in
sti
sub
dec
ins
jle
call
xor
lods
inc
fadd
mov
mov
jmp
mov
jmp
pop
popa
out
mov
neg
in
(bad)
jle
hlt
mov
(bad)
aad
xor
sbb
jecxz
xchg
jae
jbe
sbb
pop
call
(bad)
(bad)
call
pushf
cmp
nop
push
mov
stos
mov
idiv
dec
mov
fwait
test
cmp
mov
push
std
jl
xchg
pop
std
mov
pop
aaa
sbb
loope
xchg
pop
xchg
sti
mov
stos
(bad)
push
stos
sbb
call
test
ins
fbld
icebp
jle
(bad)
jg
dec
shr
jl
lahf
aad
dec
cmps
fnstcw
in
sub
xlat
dec
xchg
(bad)
dec
adc
jmp
fist
icebp
ins
stos
fnsave
sub
std
cmp
fidivr
inc
lods
mov
xchg
fsubr
daa
add
ss
fmul
je
call
pop
sti
and
scas
fsubr
outs
std
mov
cld
push
mov
pop
in
cld
ror
cmp
cmp
std
cld
pop
xchg
stos
(bad)
mov
(bad)
push
cmps
sub
push
jle
aad
mov
mul
xchg
jp
pushf
js
fisttp
cli
sbb
pop
mov
(bad)
(bad)
call
sbb
out
fucomi
xchg
fmul
ret
fcomp
(bad)
mov
shr
cwde
pop
enter
cmp
jnp
pop
fcom
aam
or
iret
mov
lods
(bad)
(bad)
(bad)
jmp
xor
fdiv
push
ficomp
std
movs
repnz
pop
cwde
jmp
imul
std
jle
xchg
iret
mov
pop
pusha
in
jns
dec
out
or
mov
test
(bad)
cmps
sbb
out
push
fst
push
sbb
rol
sahf
nop
mov
jmp
clc
mov
fadd
pop
repnz
add
sbb
int3
call
shr
jle
dec
(bad)
scas
and
std
es
daa
pop
pop
pop
and
pop
sahf
outs
sbb
and
xchg
(bad)
(bad)
fist
(bad)
int3
into
jbe
into
jnp
pushf
jl
mov
out
push
mov
push
cmps
xor
or
pop
out
(bad)
mov
sahf
mov
jle
adc
ds
push
mov
js
jp
jg
push
aas
lods
cmp
pop
sbb
dec
lods
dec
add
pop
sub
cli
ins
dec
leave
mov
push
repz
pop
out
or
push
mov
and
or
(bad)
in
jl
push
leave
pop
sbb
(bad)
mov
pop
loopne
(bad)
pop
shr
pop
mov
jnp
xor
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
sbb
int
push
(bad)
out
or
sub
dec
daa
mov
or
out
pusha
js
(bad)
call
adc
pop
sahf
call
dec
fs
jmp
push
pop
jg
mov
pop
test
add
das
js
fstp
rol
or
fbld
cli
jg
inc
ss
inc
cmp
(bad)
lea
cli
xor
out
(bad)
bound
pop
(bad)
adc
or
std
call
ja
jo
dec
(bad)
push
push
or
jne
mov
adc
and
xchg
inc
loope
movs
inc
dec
(bad)
out
ds
cdq
add
sub
(bad)
(bad)
out
dec
ins
iret
in
inc
mov
pop
pop
fiadd
add
add
jge
das
icebp
inc
pop
rcr
(bad)
(bad)
jmp
out
call
pop
lock
rol
adc
jno
pushf
xchg
and
add
mov
add
pusha
pop
sbb
cmp
mov
popf
rcr
add
call
or
xor
adc
pop
pop
loopne
fisttp
mov
lods
pop
push
inc
scas
fimul
fadd
push
jmp
pushf
fdecstp
neg
fstp
retf
iret
xor
pop
adc
or
pop
(bad)
fcomip
mov
rcr
pop
mov
lock
shl
pop
mov
(bad)
(bad)
(bad)
clc
daa
pop
mov
sbb
or
push
jo
lock
(bad)
(bad)
jg
pop
mov
jb
aad
icebp
ret
mov
leave
add
aad
(bad)
fmul
mov
cld
pop
icebp
dec
xlat
or
int
xlat
xchg
mov
in
mov
mov
lods
pop
into
cmp
lods
jmp
test
pushf
or
mov
call
(bad)
stos
pusha
jle
mov
cmp
rol
pop
rcr
ins
cmp
and
mov
sar
leave
loope
(bad)
sahf
mov
(bad)
xchg
dec
(bad)
jmp
icebp
push
dec
stos
sahf
pop
div
lds
pop
pop
cmp
and
out
imul
adc
jns
dec
pop
out
scas
clc
pop
ins
fmul
sbb
lahf
les
mov
cwde
popa
loope
sub
mov
inc
mov
daa
iret
adc
fwait
push
xchg
sub
fisubr
lahf
push
clc
(bad)
aas
xchg
jg
and
in
stos
sbb
(bad)
jmp
mov
mov
arpl
dec
sar
ss
jo
cdq
sbb
push
cdq
lock
pop
or
test
js
pop
and
pop
dec
xchg
sbb
pop
jl
out
icebp
pop
mov
das
mov
lds
mov
push
pop
push
xchg
xchg
loope
mov
shl
cmp
(bad)
(bad)
inc
pop
xchg
dec
fstp
dec
popa
pop
add
push
pop
pop
jmp
jmp
das
sub
(bad)
out
out
inc
mov
pop
inc
movs
fistp
stc
or
call
ror
dec
cld
pop
clc
add
(bad)
movs
int3
test
cmc
dec
jecxz
push
mov
mov
add
iret
sahf
mov
sbb
out
outs
cli
(bad)
(bad)
fdivr
shl
cli
adc
cmp
mov
mov
sub
clc
xlat
add
and
ins
dec
or
jnp
pop
xchg
xlat
(bad)
fnstcw
fisub
int
std
(bad)
call
pop
lahf
fldcw
retf
push
fist
mov
push
xchg
pop
or
mov
sbb
push
std
dec
cs
addr16
jp
(bad)
outs
mov
cmp
xor
out
push
mov
add
jmp
xor
outs
sbb
dec
cmp
retf
(bad)
(bad)
in
inc
cmp
xchg
dec
push
fcomp
mov
sub
mov
xor
fistp
mov
aaa
or
mov
rcl
ins
aaa
fild
xor
mov
cld
(bad)
push
cmp
push
mov
cld
or
dec
cli
dec
gs
repnz
xlat
add
and
(bad)
(bad)
dec
(bad)
icebp
rcr
adc
fld
iret
loopne
icebp
div
stos
jns
push
sbb
popa
jnp
scas
mov
(bad)
(bad)
(bad)
dec
pop
neg
jo
inc
mov
mov
adc
pop
mov
fst
jo
jmp
aad
lods
(bad)
call
ss
mov
ret
cdq
push
add
ins
js
icebp
jbe
mov
jp
jle
addr16
(bad)
jle
pop
xor
fild
shr
pop
jmp
jmp
or
sbb
push
(bad)
(bad)
(bad)
cmp
pop
jns
(bad)
pusha
rcr
shl
sub
xchg
out
xor
(bad)
clc
(bad)
(bad)
(bad)
jle
cli
daa
retf
ins
push
jle
ds
neg
pop
pop
outs
jo
sbb
cmp
fld
(bad)
jmp
loop
mov
fsubr
cmp
mov
hlt
int
cmc
mov
xchg
inc
xor
mov
push
mov
into
xor
mov
stos
inc
test
jg
rcr
and
cmp
pop
mov
je
mov
mov
retf
stos
call
sbb
lock
fbld
push
fucomp
lods
mov
pop
call
test
mov
cmp
or
cwde
fstp
ret
retf
cdq
mov
ret
mov
mov
mov
(bad)
fild
cmp
cmps
lods
push
push
push
adc
lahf
inc
shl
push
icebp
stc
test
mov
jmp
fisub
pop
cmps
retf
jo
add
sti
scas
lods
pushf
adc
sub
and
fld
mov
leave
je
push
mov
adc
movs
scas
mov
(bad)
frstor
and
std
dec
js
ins
dec
dec
cld
(bad)
out
sub
mov
sub
push
mov
cmp
mov
aam
out
pop
lahf
cld
lods
jmp
cli
stos
mov
out
cld
pop
out
cmovae
fisubr
pop
pop
adc
dec
inc
inc
sbb
pop
(bad)
jg
pop
fs
mov
ins
fild
jb
movs
hlt
inc
cld
cld
pop
loope
iret
test
mov
sbb
fimul
fidiv
pop
imul
cwde
imul
rol
mov
jle
pop
adc
jl
cwde
inc
cwde
jmp
scas
clc
(bad)
jmp
lahf
rol
fidiv
sub
and
test
jmp
cmp
pop
les
ins
sub
dec
popf
sahf
xchg
xchg
push
pushf
adc
loop
fsubp
shl
sub
jl
add
jmp
ret
movs
inc
lahf
into
jle
movs
cmp
mov
add
aaa
in
jle
mov
mov
add
test
(bad)
call
mov
mov
mov
jecxz
ss
(bad)
call
mov
dec
or
enter
lods
push
mov
pop
in
nop
lds
mov
out
dec
bound
dec
cmp
das
add
sbb
fbld
loop
(bad)
(bad)
(bad)
dec
(bad)
fdivr
out
out
jnp
sub
lea
mov
mov
push
retf
jmp
xchg
mov
cmp
call
mov
cli
jmp
cld
sub
dec
fiadd
adc
add
push
xchg
mov
dec
push
(bad)
cmp
jae
sbb
sbb
sub
fild
(bad)
dec
pop
shr
dec
adc
std
mov
pop
sbb
out
push
adc
pop
push
ss
lock
mov
mov
out
stos
std
test
in
push
xor
add
mov
inc
test
mov
pop
dec
sbb
pop
sbb
fwait
pop
add
jg
or
inc
stc
mov
push
pushf
fild
pop
not
or
fstp
jmp
call
hlt
(bad)
sbb
inc
fwait
mov
jle
and
(bad)
stc
stc
test
mov
push
mov
std
mov
and
ja
sbb
(bad)
in
mov
fisubr
mov
mov
loop
xor
mov
mov
push
js
jmp
jle
movs
xchg
jo
add
inc
iret
cmp
sahf
sbb
cdq
jecxz
mov
xor
mov
daa
inc
cmovs
sbb
call
mov
mov
lea
mov
cli
sbb
test
rcr
inc
mov
ss
call
sub
ret
fcmovb
xchg
cli
stos
and
outs
test
ins
mov
add
and
dec
add
jo
mov
imul
add
(bad)
call
dec
inc
mov
jg
and
or
jge
aas
nop
lods
stos
adc
pop
mov
inc
test
or
ins
jl
lods
cmps
add
(bad)
mov
std
int
sub
jge
pop
stos
push
std
repz
jp
dec
bswap
stos
call
repnz
ja
pop
add
jge
sub
fs
and
jg
sub
add
test
lea
mov
in
retf
test
outs
fisttp
fbld
iret
test
in
mov
(bad)
(bad)
mov
push
pop
xor
xchg
mov
fsubr
mov
cmc
int
lds
dec
lods
fcomp
cld
pop
mov
pop
jp
add
ror
les
adc
mov
fwait
gs
pop
clc
shr
adc
imul
clc
fld
or
pop
or
mov
sti
jmp
xor
call
cmp
push
add
cli
adc
jmp
dec
shl
cmp
pop
xchg
push
cmp
sti
cwde
xor
push
repnz
sub
inc
push
dec
sbb
add
xchg
xchg
cmp
ror
add
out
dec
jne
push
out
loop
(bad)
mov
or
jbe
push
into
sti
out
mov
(bad)
rcr
push
in
pop
sub
ja
push
mov
out
and
cmp
add
add
(bad)
ror
push
ss
cmp
add
pop
and
mov
std
inc
in
cmp
xor
push
xchg
or
stc
push
jmp
cmp
sahf
jnp
(bad)
std
fimul
inc
arpl
push
push
push
rcl
push
sar
inc
cmp
dec
cmp
into
and
inc
dec
inc
in
test
mov
add
add
jmp
fwait
mov
out
jbe
sar
scas
push
push
cmp
mov
stos
pop
ret
inc
fwait
and
rol
in
out
lahf
push
sar
pop
or
jae
ins
shr
cmps
out
enter
and
(bad)
(bad)
(bad)
dec
shl
inc
lock
daa
out
xor
arpl
enter
outs
add
into
call
out
dec
outs
jmp
mov
pop
rcr
adc
std
in
(bad)
mov
cld
rol
icebp
mov
push
jmp
push
test
nop
xor
call
dec
call
call
push
mov
je
mov
retf
out
add
lahf
pop
cmps
into
es
(bad)
cmp
mov
push
mov
data16
mov
leave
test
sub
sahf
loope
inc
test
scas
imul
fs
(bad)
(bad)
inc
xor
fild
push
in
daa
icebp
lahf
(bad)
jge
xor
or
push
aas
lods
cld
adc
(bad)
jmp
or
cmp
pop
jl
pop
mov
dec
outs
pop
lods
(bad)
(bad)
call
mov
inc
ins
pop
ins
popf
pop
out
sbb
sbb
fwait
jmp
mov
pop
and
inc
inc
pop
retf
ret
xchg
pop
xor
pop
and
xor
fwait
cli
fcom
cdq
push
push
fxch
shl
cli
cmp
cli
jmp
bound
(bad)
jmp
xor
in
in
dec
fscale
(bad)
mov
cli
test
and
mov
sub
in
mov
jg
ja
xlat
push
jmp
jmp
and
cli
inc
pusha
cmps
cli
push
retf
jmp
cmp
repnz
adc
cmp
inc
cmp
mov
pop
not
pop
loopne
movs
es
ins
jmp
sub
or
mov
and
cmp
stos
pop
ins
sbb
in
mov
sub
push
(bad)
(bad)
cli
pop
pop
out
jp
cmp
dec
mov
movs
in
lds
imul
fisub
xor
pop
dec
and
jmp
or
add
push
jle
sti
in
fild
(bad)
jmp
mov
fsubr
lods
je
(bad)
retf
push
in
outs
(bad)
jg
(bad)
std
test
jmp
sub
outs
icebp
stos
mov
cmp
mov
pusha
in
mov
(bad)
pop
push
push
iret
mov
scas
pop
push
aam
pop
or
pop
jmp
and
retf
mov
addr16
es
add
jg
jmpw
push
inc
mov
stc
pop
mov
pusha
leave
pop
dec
fdivrp
pop
ret
popa
and
mov
jbe
enter
lea
jmp
sub
(bad)
rol
mov
jbe
mov
mul
bound
call
ret
push
fadd
cdq
fcom
fs
rol
mov
sbb
pop
pop
pop
cli
out
into
sahf
pop
cld
mov
jecxz
jl
push
pop
pop
ins
(bad)
pop
push
cmp
sub
jmp
jnp
scas
fcomp
pop
and
test
popa
mov
or
(bad)
(bad)
in
imul
mov
ins
pop
jmp
sahf
ror
aam
(bad)
dec
lock
popa
sar
pop
and
test
adc
cld
(bad)
(bad)
jmp
dec
jmp
in
xchg
pop
outs
loop
xor
xchg
add
jmp
xor
ret
iret
mov
jmp
in
xor
pop
call
(bad)
jmp
cmp
pop
dec
out
adc
dec
xchg
xchg
cld
sbb
lods
inc
dec
arpl
mov
loop
pop
pop
adc
push
pop
mov
add
pop
mov
lods
and
in
or
inc
push
outs
xor
add
arpl
ret
cwde
call
ret
out
inc
(bad)
dec
scas
dec
mov
jae
pop
pop
test
jmp
in
inc
sub
(bad)
jl
mov
daa
push
push
push
pop
mov
mov
adc
jecxz
loop
add
mov
pop
jmp
je
outs
cld
push
cld
jmp
jmp
pop
pop
sub
ror
jmp
xchg
xor
jle
push
xor
sti
pop
rol
add
add
nop
dec
and
push
add
jb
mov
cli
push
mov
inc
leave
dec
sub
das
sbb
in
sbb
sub
test
jle
sub
(bad)
push
jmp
cwde
stos
movs
push
lock
or
daa
jp
ja
mov
in
sub
mov
or
or
push
dec
and
mov
pop
scas
sbb
mov
mov
jmp
sbb
(bad)
mov
dec
jmp
(bad)
pop
nop
call
push
mov
mov
or
clc
pop
call
xchg
stos
mov
jecxz
mov
pop
scas
in
jg
pop
in
adc
dec
ins
lods
xor
adc
out
mov
mov
sar
enter
cwde
push
ins
sbb
push
ins
push
sar
out
pop
fidivr
xchg
enter
inc
sbb
cs
sub
jg
call
pop
imul
lea
in
mov
in
lods
push
pop
call
popa
dec
cmp
mov
pop
push
or
icebp
icebp
test
sub
jb
outs
mov
(bad)
(bad)
fistp
aaa
jmp
adc
lds
add
cmc
movs
sbb
add
out
(bad)
cmp
pop
dec
imul
leave
mov
(bad)
(bad)
(bad)
jmp
test
aad
(bad)
retf
dec
add
cmps
retf
test
fnsave
adc
(bad)
jmp
dec
bound
std
adc
ret
scas
mov
xchg
xchg
out
adc
call
adc
adc
aaa
out
adc
xor
push
mov
push
push
data16
sbb
rcl
push
lods
pop
sbb
fsub
push
push
sub
mov
pop
xchg
mov
(bad)
inc
(bad)
mov
call
sub
mov
jbe
stos
dec
mov
pop
call
fcom
aam
adc
dec
(bad)
(bad)
dec
pop
in
and
sub
ret
mov
push
inc
sub
sbb
and
or
(bad)
jg
ficomp
pop
cmps
daa
cmps
and
test
mov
popa
std
fisttp
cs
jp
rol
shl
das
test
push
jl
iret
pop
sbb
push
(bad)
fidivr
pushf
pop
push
ret
xor
sbb
je
cli
je
xor
add
add
adc
test
outs
jle
jge
test
mov
jmp
in
(bad)
mov
push
jno
jbe
int3
clc
popf
gs
lods
pop
sub
adc
daa
dec
and
cmps
pop
and
jle
out
xchg
retf
fstp
add
push
cmps
fwait
in
pop
rcr
sbb
mov
pop
shl
call
lea
(bad)
cmp
xchg
stos
fwait
pop
mov
aam
pop
ins
jmp
stos
das
and
and
inc
test
inc
hlt
mov
inc
fmul
(bad)
fimul
push
inc
lods
inc
movs
add
cld
mov
xlat
icebp
cmps
ds
fsub
ins
xor
es
cdq
sub
mov
dec
xchg
mov
adc
dec
jecxz
sub
dec
dec
or
jge
or
mov
jmp
pop
fdivrp
fwait
and
push
and
pop
pop
in
mov
ins
loope
cmp
pop
inc
les
outs
pop
and
cmps
mov
xchg
(bad)
outs
xchg
pop
out
dec
pop
cs
popa
ret
mov
add
add
and
jmp
or
pop
push
and
sub
stos
test
cmove
ins
fwait
pop
loop
(bad)
push
ffreep
xor
pop
inc
hlt
out
pop
out
pop
sbb
rol
movs
inc
ins
aad
push
jl
xor
mov
mov
and
mov
xlat
dec
fdivp
xchg
sar
jmp
ficomp
fisttp
out
sub
inc
or
icebp
fcom
pop
cld
shr
fisubr
mov
jmp
push
pop
sub
mov
sub
ins
clc
dec
pop
sbb
lods
cmp
mov
lods
pusha
fs
push
adc
or
fisttp
inc
pop
outs
pop
imul
loope
daa
and
test
daa
xlat
ret
adc
mov
fcomip
mov
fild
sbb
(bad)
in
hlt
neg
inc
push
inc
dec
test
pop
cmp
add
scas
cmp
cs
add
cs
xor
fcomip
cmp
dec
lods
xor
aaa
xlat
dec
test
inc
pop
test
fcmovnu
stos
int
jae
sub
cs
out
and
test
in
push
sub
fcmovnu
or
bound
in
dec
xchg
xchg
pop
mov
xor
mov
lock
sub
fsub
dec
or
xor
push
jl
ins
cmp
cmps
cs
pop
das
pop
inc
cmps
js
repnz
jle
rcr
cmps
sbb
out
dec
inc
shr
sbb
ss
pop
and
cli
push
loopne
test
dec
bnd
movs
pop
inc
(bad)
dec
mov
cmps
icebp
jg
pop
cld
sbb
shl
inc
pop
mov
cli
dec
mov
push
rol
pop
repnz
in
cmps
mov
imul
sub
movs
cmp
pop
pop
lock
push
stos
call
ret
movs
in
lods
icebp
inc
mov
call
aam
sbb
das
mov
(bad)
mov
xchg
push
mov
xlat
sbb
push
mov
iret
push
ins
jle
out
ret
(bad)
(bad)
(bad)
pop
in
jns
pushf
lods
rcr
fwait
inc
mov
mov
lock
pop
inc
mov
cld
sbb
push
fbld
jge
lods
push
lods
inc
bound
pop
mov
pop
cs
jmp
shl
dec
xlat
inc
sub
adc
pop
pop
cld
and
mov
xor
movs
add
jp
in
mov
add
(bad)
pop
outs
dec
pop
inc
pop
out
hlt
test
cld
add
lods
and
jp
mov
pop
pusha
scas
xchg
cmps
mov
loope
dec
jp
pop
pop
(bad)
loop
in
jmp
mov
es
int3
pop
and
cld
aas
and
cmps
or
sbb
ins
bound
adc
sub
jmp
mov
push
inc
dec
dec
dec
in
xchg
hlt
or
add
mov
cli
outs
dec
popf
stos
(bad)
in
cmp
push
lods
imul
addr16
sahf
sub
xchg
mov
or
es
mov
and
bound
or
sub
jmp
outs
and
addr16
data16
adc
shl
sub
lods
jnp
fcomip
ret
sbb
es
and
push
dec
and
test
ins
jb
js
cdq
scas
inc
call
nop
fisub
hlt
sub
(bad)
in
call
cmp
and
loop
in
jle
xchg
repz
scas
dec
mov
mov
mov
mov
sahf
and
mov
int3
sub
lods
dec
fimul
mul
shr
and
add
loopne
outs
into
popa
imul
in
sbb
(bad)
scas
cli
std
test
fimul
jmp
daa
jmp
retf
cld
aaa
dec
and
mov
outs
fld
sub
dec
test
fidiv
mov
stos
sub
clc
mov
out
enter
push
dec
push
jmp
push
jmp
sahf
sub
add
cmps
and
loopne
lock
fisubr
(bad)
inc
scas
shr
and
xor
int3
out
adc
inc
dec
loope
arpl
fcomip
outs
shl
jo
inc
aaa
dec
das
ldmxcsr
dec
(bad)
int
push
sub
lahf
movs
and
aad
icebp
mov
and
cli
jg
clc
cwde
out
xor
push
mov
inc
fucomp
adc
and
dec
scas
xchg
and
sbb
inc
lods
push
das
cmps
pop
cs
aaa
aaa
rcr
imul
jg
mov
sub
data16
in
stos
adc
cmps
out
test
lock
and
mov
push
stos
jmp
jmp
mov
loope
test
es
pusha
push
mov
scas
jbe
inc
sub
jmp
outs
call
gs
in
cmps
mov
rol
mov
cmp
lods
aas
clc
outs
jmp
mov
xchg
pop
dec
sub
jmp
dec
xchg
scas
pop
and
mov
inc
mov
call
push
call
fwait
inc
sti
pop
mov
in
inc
lods
cmp
or
sbb
and
push
sbb
ins
pop
lods
scas
es
outs
mov
adc
or
clc
fucomip
and
call
(bad)
retf
ins
retf
cs
sub
pop
cld
or
sub
mov
fwait
pop
mov
ja
loop
cmp
loop
ins
les
test
and
mov
dec
inc
fmulp
cmp
push
cld
(bad)
lea
call
call
cld
mov
movs
sub
outs
pop
loopne
loop
call
(bad)
sti
scas
mov
psrad
stos
aas
fisub
es
mov
jecxz
std
pop
or
jl
outs
dec
sub
stos
into
fs
add
(bad)
call
movs
jecxz
in
fs
cmp
push
cwde
imul
or
sbb
idiv
movs
and
pop
(bad)
push
jmp
jl
lds
jmp
lods
pop
and
test
pop
out
jne
inc
jmp
sbb
cld
inc
push
jg
ror
add
push
arpl
mov
jmp
test
push
std
mov
(bad)
out
push
pop
(bad)
sub
pusha
cmp
lea
sub
ror
nop
jp
test
jmp
popf
dec
xchg
fisubr
mov
sbb
clc
ret
jecxz
mov
mov
sar
xor
and
rcl
cdq
stos
push
retf
call
mov
dec
xchg
movs
aam
sub
adc
addr16
push
retf
inc
shr
dec
or
mov
dec
dec
inc
scas
fcomp
iret
add
aam
and
ins
fld
imul
dec
mov
imul
lods
adc
fld
fcmovu
xor
inc
out
call
pusha
and
test
(bad)
(bad)
(bad)
jg
xor
or
cmp
aad
inc
retf
add
pop
stos
adc
out
pop
or
lods
pop
movs
mov
or
add
add
pop
scas
out
out
cli
in
sub
fistp
jmp
jge
in
mov
sub
and
pop
ins
cmp
ins
hlt
cmp
loop
outs
clc
cmp
cmp
mov
sbb
cli
rcr
pop
mov
push
scas
mov
mov
bound
xor
inc
dec
sbb
dec
mov
mov
adc
inc
mov
(bad)
pop
dec
in
mov
push
mov
jp
and
sti
cli
imul
in
or
and
call
lods
and
cld
nop
mov
repz
pop
fcomp
cli
inc
jle
lds
adc
sub
mov
sub
xor
mov
mov
in
pop
sbb
(bad)
jg
loop
fimul
stc
pop
cmp
dec
and
pop
pop
mov
div
movs
jg
and
push
(bad)
jmp
sbb
jle
mov
push
into
cli
inc
(bad)
fmul
pusha
retf
ret
loope
add
jbe
test
push
jmp
mov
mov
sub
add
out
in
stos
sub
imul
(bad)
retf
aam
and
mov
ins
mov
jecxz
mov
lods
pop
push
lods
out
aam
outs
scas
mov
(bad)
das
mov
cmp
(bad)
ret
dec
aaa
dec
pop
(bad)
mov
mov
fadd
fst
shl
(bad)
clc
jmp
push
cli
mov
mov
push
cmp
inc
popa
test
pop
cli
xchg
je
ds
sbb
dec
push
shr
add
adc
call
mov
xor
shl
in
adc
push
pop
adc
or
mov
leave
sub
or
or
mov
mov
xchg
mov
leave
or
cmps
mov
push
push
fisttp
xchg
popf
and
shl
pop
clc
std
cmc
jbe
mov
jne
mov
xchg
push
aad
xchg
or
inc
push
inc
and
adc
sbb
xchg
fisttp
xchg
push
shl
dec
adc
push
mov
and
push
or
pop
nop
in
inc
push
mov
xchg
push
inc
pop
and
mov
pop
xchg
or
in
nop
push
or
push
inc
pop
or
fcom
pop
rcl
inc
rcl
pop
js
jmp
push
inc
inc
add
mov
inc
nop
and
dec
(bad)
mov
dec
push
retf
and
fst
enter
hlt
ficomp
inc
rol
push
bts
fsubr
inc
in
mov
mov
iret
(bad)
(bad)
(bad)
out
sbb
xor
mov
pop
mov
retf
add
jle
xor
out
sub
in
(bad)
adc
(bad)
call
imul
aad
xor
ret
sahf
cmp
xor
pop
xchg
fisubr
cmp
(bad)
jg
push
add
or
mov
mov
cmps
mov
add
outs
movs
inc
jp
push
pop
adc
jecxz
pop
pop
mov
sahf
jle
dec
scas
or
xchg
jle
mov
and
stos
or
jmp
inc
sub
lods
into
retf
mov
popf
call
xchg
(bad)
cmp
int3
pop
jb
mov
call
or
fistp
jl
(bad)
pusha
sti
(bad)
in
ins
dec
in
jg
(bad)
(bad)
jmp
sub
loopne
adc
mov
pop
push
fiadd
lahf
lods
jge
int3
out
xchg
(bad)
(bad)
call
in
sahf
daa
mov
pop
inc
mov
jle
mov
mov
cdq
sti
std
jecxz
ins
loopne
call
shl
ds
cmp
inc
sbb
mov
cli
sar
jmp
dec
xchg
dec
mov
js
xchg
into
or
pop
out
rcr
loope
clc
das
scas
(bad)
hlt
xor
mov
addr16
mov
(bad)
(bad)
cmp
sub
sub
outs
jno
mov
mov
pushf
pop
jl
(bad)
(bad)
in
das
ret
xchg
repnz
out
or
mov
jecxz
sbb
dec
out
test
jnp
fdivr
cmp
(bad)
(bad)
(bad)
call
push
inc
js
fucomip
pusha
mov
jl
mov
xchg
lahf
dec
cld
repnz
fbstp
xchg
dec
in
(bad)
(bad)
pop
fcmovnbe
popa
lods
cmp
(bad)
push
jae
sbb
aaa
sti
mov
out
in
cmp
jecxz
repnz
hlt
fcomip
outs
test
pop
pop
scas
adc
push
jno
sub
aaa
outs
in
mov
test
lahf
mov
in
lods
cmp
push
loope
(bad)
(bad)
(bad)
dec
fs
int
cdq
aam
and
or
mov
aas
mul
cmps
dec
sub
int
(bad)
jge
mov
xchg
sbb
(bad)
(bad)
(bad)
cmp
dec
int
mov
outs
mov
js
lahf
mov
add
inc
and
pop
mov
cmp
mov
mov
or
xchg
push
and
fdivrp
adc
icebp
sbb
mov
jo
rcr
mov
mov
jb
movs
or
push
jmp
jmp
push
push
mov
das
push
adc
and
pop
jecxz
stos
jne
nop
mov
(bad)
call
jbe
jo
jle
in
imul
push
jl
push
loope
jmp
jbe
and
out
stos
push
jb
sbb
das
daa
jnp
inc
or
test
(bad)
jle
mov
test
mov
fstp
cmp
call
inc
jmp
and
pop
jmp
jg
std
jmp
dec
push
retf
shr
pop
adc
jo
shr
inc
mov
scas
rol
(bad)
(bad)
(bad)
jg
dec
in
aad
ss
(bad)
into
pop
stos
or
mov
push
movs
shl
add
inc
dec
adc
jmp
and
sbb
nop
cli
or
sbb
cmp
add
inc
rcr
clc
xchg
jmp
or
xor
std
or
xchg
or
mov
iret
shr
sahf
jmp
xchg
push
jecxz
lock
jmp
inc
or
sub
add
test
retf
call
cmps
push
push
mov
push
sbb
call
jo
test
push
out
lods
mov
jmp
sub
test
test
(bad)
and
lods
data16
mov
or
jbe
test
mov
into
dec
adc
mov
inc
(bad)
dec
lods
mov
mov
cli
jle
inc
sbb
pop
sbb
inc
bswap
add
retf
popa
dec
sub
lods
add
(bad)
out
loopne
int3
ficomp
jecxz
mov
mov
cli
jo
jmp
push
push
clc
cwde
icebp
leave
sub
jmp
in
(bad)
xor
test
inc
outs
fimul
and
sar
add
clc
jmp
inc
cmp
cmp
push
into
into
mov
fcmovb
and
pusha
push
jecxz
scas
(bad)
call
dec
test
loope
cmps
sub
pop
ins
aad
mov
out
clc
mov
test
ja
dec
jmp
mov
jmp
jle
lock
repz
test
(bad)
mov
sub
in
xor
dec
mov
shl
push
jmp
or
shl
inc
nop
jbe
or
lea
ins
int
ret
jmp
or
iret
stos
lock
push
inc
rol
lock
retf
fsubr
jl
aas
add
jg
or
jg
jmp
outs
fild
sbb
mov
pop
add
jmp
jmp
dec
jo
inc
or
outs
sbb
push
cmp
into
clc
int
inc
sti
jp
dec
icebp
jmp
cmp
cli
shl
cld
pop
out
jo
inc
inc
gs
ror
ins
std
je
inc
pop
or
inc
mov
inc
mov
stc
in
test
pop
or
mov
sub
(bad)
pushf
ds
test
sbb
jb
(bad)
std
inc
mov
mov
sbb
xor
mov
repnz
push
test
fcomip
fisttp
scas
mov
or
cmp
mov
xchg
dec
push
ins
int3
push
mov
xchg
push
in
mov
cmp
movs
fdivr
or
or
jle
pop
adc
rcl
jo
lahf
push
inc
bound
call
loopne
in
movs
cmc
stos
cdq
or
inc
pop
mov
shl
movs
adc
aam
in
in
fucomi
xchg
pop
push
mov
into
mov
mov
(bad)
es
pop
pop
(bad)
(bad)
xchg
js
cmp
sti
gs
or
dec
pop
xor
mov
shl
shl
scas
test
shr
ror
jmp
jmp
lahf
sbb
call
cs
cmp
mov
js
or
jmp
dec
fdiv
sub
stc
repnz
or
fimul
cmp
pop
and
vsubsd
out
movs
es
mov
mov
mov
and
setns
inc
outs
nop
lock
pusha
adc
mov
dec
cmp
jns
sub
pop
out
cmp
mov
and
movs
idiv
fisub
fs
js
mov
(bad)
(bad)
mov
mov
dec
mov
cli
test
mov
jmp
call
(bad)
(bad)
dec
movs
cmp
add
dec
retf
sti
mov
inc
call
je
pop
std
(bad)
dec
or
dec
mov
aas
je
adc
jmp
in
stos
ins
jmp
pushf
and
lahf
mov
movs
(bad)
(bad)
call
popa
outs
mov
mov
sub
mov
dec
dec
xor
jmp
xor
movs
je
cwde
into
jne
idiv
test
mov
mov
cdq
sahf
(bad)
(bad)
(bad)
jmp
xor
sbb
test
push
cmp
mov
retf
inc
test
mov
ficomp
loope
aad
(bad)
(bad)
(bad)
fstp
fidivr
jns
fcomp
ins
mov
fbld
inc
jge
fisub
ret
(bad)
out
push
xchg
mov
xchg
sub
test
(bad)
(bad)
(bad)
(bad)
(bad)
mov
lods
add
xchg
ss
(bad)
mov
xchg
movs
mov
(bad)
dec
sbb
int
icebp
mov
hlt
fisub
int
movs
dec
mov
cwde
cmp
(bad)
ror
mov
enter
add
pop
stos
(bad)
mov
jecxz
(bad)
dec
dec
jmp
movs
mov
pop
push
out
mov
test
inc
mov
dec
or
add
or
(bad)
jge
push
sbb
outs
clc
(bad)
in
repz
dec
or
mov
sub
mov
or
push
sub
fdivrp
pop
(bad)
mov
or
adc
or
or
aam
jmp
or
cmp
xchg
fs
std
outs
jp
inc
stc
movs
scas
jmp
mov
fwait
or
mov
ss
fsubp
cdq
jle
cmp
sbb
cli
(bad)
jmp
inc
lds
retf
stos
sbb
movs
mov
cli
push
(bad)
(bad)
jmp
add
ins
dec
aam
scas
int3
push
and
jne
bound
mov
fild
lea
(bad)
(bad)
(bad)
jmp
mov
movs
je
push
loop
add
or
stos
sahf
xchg
cwde
inc
std
adc
stos
jecxz
loopne
(bad)
(bad)
dec
into
popa
mov
push
sbb
inc
jmp
movs
dec
mov
or
(bad)
dec
cmp
cmp
dec
jae
int
mov
(bad)
jg
cmps
stos
shr
cmp
pop
imul
jmp
mov
xchg
aaa
retf
aam
or
stc
(bad)
nop
pop
inc
lahf
dec
test
movs
dec
mov
(bad)
dec
push
lods
cmp
call
dec
or
jg
mov
clc
movs
pop
push
pop
add
mov
movs
fidivr
das
cli
adc
xchg
leave
loop
mov
dec
push
in
das
call
out
lahf
pop
cmp
jmp
mov
push
jb
fsqrt
adc
cli
movs
in
ficomp
add
(bad)
(bad)
cmp
pusha
dec
push
cmp
pop
sub
mov
repz
mov
call
and
mov
mov
add
in
sub
dec
push
call
dec
xor
pop
aam
xchg
mov
xchg
push
cmp
cmp
pop
(bad)
(bad)
mov
sbb
sti
call
mov
mov
(bad)
inc
jp
push
add
int
fnstcw
push
sbb
jnp
jmp
int
in
adc
inc
push
push
add
(bad)
(bad)
push
imul
sbb
out
mov
add
test
cdq
fcos
cmp
js
or
jmp
or
mov
add
cmp
push
(bad)
(bad)
jmp
jg
add
bswap
mov
mov
sub
scas
cmp
rcr
(bad)
jmp
movs
movs
cmp
pop
rcl
mov
fdivr
(bad)
jg
test
cmp
clc
icebp
or
mov
sbb
lahf
out
popa
push
push
jmp
call
dec
dec
mov
inc
xchg
(bad)
(bad)
fisubr
mov
jne
fcmovne
leave
movs
int3
bound
(bad)
mov
pop
or
sbb
sub
(bad)
mov
cmp
push
arpl
or
jle
ficom
push
pop
mov
leave
xchg
stos
clc
mov
inc
fist
enter
dec
add
push
push
test
push
mov
dec
jnp
jnp
(bad)
fild
(bad)
movs
push
cmps
and
aaa
cmp
or
pusha
sbb
mov
loop
and
or
cmp
or
call
or
test
cmp
outs
cli
sbb
int3
mov
dec
fstp
add
shr
dec
(bad)
call
aam
loopne
imul
adc
push
push
test
or
fwait
das
clc
(bad)
(bad)
jmp
sub
imul
jmp
movs
sub
ins
mov
or
std
(bad)
cli
(bad)
out
pop
in
into
mov
ret
add
jl
out
mov
dec
cmps
jmp
dec
fisubr
jmp
test
dec
xchg
xor
fsubr
clc
retf
call
pop
stos
scas
or
sbb
sbb
dec
and
scas
add
pop
cmp
mov
cmp
push
rcl
je
cmp
jns
popf
inc
mov
jmp
jnp
jg
jle
fidivr
and
jmp
cmp
adc
(bad)
jg
sbb
fnstenv
(bad)
sub
imul
dec
outs
jmp
xor
test
sub
jl
fcomp
adc
inc
dec
repz
fsub
fldln2
jmp
(bad)
(bad)
inc
fldcw
(bad)
into
hlt
inc
pop
int
push
dec
jmp
cmp
std
das
clc
(bad)
jmp
jle
out
neg
int3
dec
mov
adc
mov
scas
shr
lea
retf
pop
cld
mov
pop
jl
mov
sub
(bad)
dec
sbb
pop
call
fwait
push
mov
cmps
cld
ss
sar
inc
sub
push
outs
movs
sub
mov
nop
push
daa
sub
call
dec
ins
pop
test
sbb
and
scas
retf
mov
cmp
sti
test
std
(bad)
cli
dec
cli
mov
enter
retf
dec
pop
rcl
or
jg
cli
or
daa
push
cld
inc
fldcw
fcom
mov
adc
and
inc
mov
mov
dec
retf
dec
pop
ficomp
dec
add
sub
sub
call
rcr
das
sub
retf
adc
mov
sub
cwde
out
out
mov
sub
retf
sbb
call
cmp
icebp
mov
mov
or
xor
movs
loopne
pop
sub
mov
mov
sub
out
stc
inc
in
(bad)
cli
stos
popa
retf
fimul
pop
and
inc
nop
repz
xchg
sub
pop
ficom
gs
(bad)
mov
xor
adc
out
cmp
mov
jnp
pop
sub
test
push
xchg
pop
mov
and
add
imul
add
jmp
mov
mov
ficomp
cmp
sbb
cli
shr
mov
jp
or
mov
fimul
or
pop
das
fwait
call
repz
and
sbb
cmp
or
iret
or
xlat
outs
mov
xor
or
mov
retf
aas
pop
dec
sbb
test
out
push
jp
dec
jo
jp
sub
scas
or
mov
sbb
je
and
adc
call
cli
sub
mov
sub
in
cli
cmp
sbb
jg
pop
xchg
push
fdivr
scas
dec
int3
and
movs
inc
call
rcr
xchg
mov
fldcw
push
mov
rcr
out
add
loope
(bad)
jg
and
sbb
mov
test
mov
fisub
pop
(bad)
jg
test
jmp
in
or
stos
mov
inc
pop
push
(bad)
push
(bad)
cwde
jp
sub
jns
popf
lods
or
pusha
or
dec
dec
cmp
mov
mov
mov
sbb
mov
dec
mov
inc
in
pop
push
test
mov
pop
fstp
mov
mov
dec
popa
mov
sbb
cld
out
sbb
mov
cmp
enter
add
(bad)
aam
inc
cmp
inc
inc
cli
jg
fnstcw
into
pop
lea
mov
inc
dec
pop
mov
xchg
cli
movs
sahf
mov
call
ds
sub
cli
cmp
mov
jmp
dec
or
inc
or
and
adc
push
(bad)
movs
or
cmovno
(bad)
dec
pop
jmp
pop
fld
hlt
or
aas
movs
inc
mov
icebp
jmp
repz
push
cld
add
js
add
and
cli
push
adc
lods
call
fdiv
xchg
inc
and
fldenv
push
and
cli
inc
pop
and
or
and
cmps
push
and
jb
mov
and
retf
movs
and
int
jp
jne
sbb
jmp
fucom
push
sub
test
inc
mov
shl
add
cld
push
or
mov
mov
leave
jns
cmp
inc
lahf
pop
out
mov
add
add
and
inc
cli
dec
sbb
jmp
imul
xchg
pop
arpl
cld
call
dec
inc
lods
mov
in
jnp
xchg
loop
inc
nop
push
dec
inc
mov
cwde
movs
lods
mov
xchg
add
mov
jmp
lock
punpckldq
mov
dec
daa
lock
mov
(bad)
jmp
clc
outs
and
mov
and
mov
in
push
push
in
adc
mov
cs
imul
xor
mov
mov
outs
sub
sbb
std
jp
imul
mov
jl
(bad)
in
inc
shr
jbe
cs
in
shl
jecxz
dec
mov
cmp
rcl
cs
jecxz
cmps
mov
ret
xchg
mov
(bad)
jmp
mov
sbb
movs
and
test
cmps
movs
outs
in
stos
stos
call
inc
fprem
jmp
push
sub
mov
loop
out
ret
or
daa
fmul
(bad)
jmp
gs
mov
push
es
call
xchg
push
sbb
mov
dec
rol
sbb
jp
and
jmp
jmp
(bad)
adc
nop
(bad)
(bad)
(bad)
jg
dec
xor
shr
retf
pop
scas
pop
cmp
ror
dec
(bad)
retf
jle
dec
push
call
nop
dec
(bad)
lods
mov
mov
test
dec
adc
inc
pop
mov
out
(bad)
ror
(bad)
(bad)
(bad)
jg
jle
loopne
cmps
mov
jmp
and
jmp
les
lds
stc
fisubr
cld
sbb
mov
scas
and
lods
leave
or
cli
out
call
test
sub
ds
stos
add
xor
jg
call
pushf
mov
jge
jp
sub
nop
inc
mov
pop
jb
cli
icebp
cli
lods
push
in
mov
nop
jg
cmp
adc
jg
push
sbb
jmp
dec
ds
xor
test
inc
inc
mov
shr
and
cmp
cli
cli
and
add
add
hlt
ja
push
xchg
ret
jle
mov
sbb
push
daa
jb
add
and
and
dec
(bad)
and
shl
call
or
out
sub
rcl
xchg
push
mov
mov
jl
stos
(bad)
ds
push
imul
test
lods
cmps
mov
imul
and
push
stos
sbb
neg
leave
push
test
mov
fbstp
lods
(bad)
push
cmps
cmps
fnstcw
push
cmps
push
outs
lods
jbe
neg
ss
scas
push
push
xchg
fistp
push
test
movs
cmc
push
sbb
ja
fld
in
mov
xchg
push
push
stos
push
mov
repz
ds
xchg
dec
sub
lea
ja
push
pop
outs
pop
out
add
sbb
cmps
jns
ja
es
out
push
leave
in
jge
in
leave
movs
lahf
ficom
scas
pop
cs
mov
movs
stc
pop
dec
ss
push
in
dec
idiv
das
xchg
mov
lods
or
jnp
sahf
in
and
fmul
movs
push
rcr
jmp
mov
push
ins
push
dec
(bad)
scas
fnstcw
dec
push
and
test
out
push
cwde
push
xchg
cmps
movs
jnp
lock
dec
cmp
jbe
(bad)
pop
into
push
scas
pop
movs
jns
test
scas
scas
fdivr
mov
cmps
mov
sbb
stos
sti
mov
ja
mov
inc
push
jo
push
lods
ss
cmp
test
mov
fstp
(bad)
sahf
push
mov
mov
bt
lods
aas
lods
mov
ja
mov
mov
mov
push
mov
dec
mov
cmp
push
mov
cdq
dec
jg
pop
mov
fisub
test
mov
mov
test
lods
cmc
xchg
inc
ss
scas
add
pop
mul
mov
mov
call
lods
test
movs
lahf
dec
call
lods
mov
jnp
ja
push
scas
mov
test
lods
cmp
jp
jns
or
scas
cdq
or
mov
cmp
cmps
cmps
iret
push
test
mov
mov
ss
add
jo
test
mov
cmp
mov
movs
jg
mov
mov
xor
mov
stos
dec
movs
pop
loopne
out
fisubr
push
mov
iret
(bad)
mov
inc
test
js
mov
mov
jl
shl
jbe
test
mov
scas
jge
dec
push
cmps
push
stos
push
scas
cmp
mov
mov
lods
push
mov
ficom
test
dec
jmp
out
ins
mov
ficomp
mul
iret
test
movs
push
mov
(bad)
jo
sbb
ss
mov
or
lods
push
stos
sbb
mov
lods
mov
cmps
cmps
pop
jns
out
xchg
push
mov
jl
out
inc
fs
cmp
sbb
paddsw
rcr
movs
in
out
jns
out
mov
repz
out
out
inc
sub
iret
repz
sti
push
cmp
repz
xchg
jbe
gs
repz
push
fcomp
cmp
add
je
xlat
jns
out
test
out
pop
ins
repz
out
push
push
xor
daa
iret
repz
clc
sahf
or
push
push
sahf
out
cmp
test
sahf
out
cmp
repz
repz
sbb
jle
fcomip
cmp
repz
ja
inc
fist
repz
cmp
into
aas
lea
out
cmp
lock
add
jns
mov
jno
int
jns
push
fidiv
fpatan
cmp
rep
in
in
ret
repz
rcl
gs
sahf
out
sahf
dec
cmp
dec
and
sahf
out
xchg
ss
jmp
call
repz
dec
int3
int
add
call
mov
cmp
jns
out
pusha
push
in
iret
repz
stos
mov
dec
fidivr
cmp
repz
push
rcl
test
push
fwait
sbb
repz
repz
pushf
mov
cmp
xor
add
addr16
jns
out
push
cmp
into
(bad)
dec
out
sahf
out
rol
push
cmps
fnstcw
push
out
or
sub
mov
jns
out
rcl
xchg
(bad)
repz
out
mov
iret
repz
in
mov
sahf
out
cmp
mov
(bad)
enter
out
dec
adc
jl
out
pop
cmc
dec
aam
iret
repz
sbb
cmp
repz
jo
mov
pushw
(bad)
repz
add
repz
in
xor
or
jns
out
(bad)
pop
popf
xor
inc
out
xor
cmp
sar
dec
dec
dec
push
arpl
jbe
stos
sbb
jmp
push
dec
imul
jbe
mov
out
and
mov
rcr
clc
xchg
and
mov
inc
dec
scas
call
mov
pop
stos
pop
mov
sub
push
stos
xchg
(bad)
jp
inc
bound
inc
ja
cwde
fstp
add
in
stc
mov
jge
repnz
and
or
xor
les
push
mov
sub
out
mov
sar
(bad)
xor
mov
cld
mov
repnz
ret
mov
inc
or
cdq
retf
sub
nop
and
mov
inc
mov
and
mov
cld
push
cmps
adc
mov
dec
aad
and
mov
stos
fdiv
xchg
dec
or
push
or
ins
stos
js
leave
in
aam
pop
jle
mov
rol
leave
ds
dec
stos
ret
xchg
add
mov
shr
into
stos
or
loopne
stos
imul
jge
pop
ret
shr
push
shl
pop
pop
adc
fwait
cmps
ret
mov
fstp
mov
outs
xchg
mov
or
sub
inc
into
mov
and
scas
dec
outs
sub
stos
(bad)
mov
mov
mov
mov
in
dec
xchg
ret
and
push
push
(bad)
mov
push
stos
cmps
adc
cmp
popa
stos
inc
cmp
call
mov
arpl
jg
dec
stos
pop
mov
mov
xchg
mov
test
pop
outs
stos
sahf
inc
dec
add
stos
mov
add
or
lea
add
inc
stos
mov
jo
stos
std
retf
add
mov
adc
or
mov
adc
int
fwait
mov
lea
lods
int3
inc
pop
or
pop
lods
inc
les
adc
pop
cmp
das
les
ret
and
sbb
mov
or
mov
fdivr
sub
arpl
or
jbe
cmp
adc
sub
dec
xor
dec
dec
cwde
xchg
adc
xchg
sub
mov
and
xchg
or
dec
add
or
and
inc
add
pop
dec
(bad)
pushf
mov
inc
mov
daa
and
mov
or
daa
loop
mov
(bad)
xor
pop
fiadd
aas
push
aas
popf
inc
rol
adc
dec
pushf
das
xor
div
mul
js
sub
dec
sahf
mov
mov
or
bound
xor
ret
sub
or
jne
mov
pop
push
inc
or
adc
jle
xor
inc
les
mov
adc
add
cmps
jae
xchg
or
mov
mov
push
adc
mov
xchg
aaa
or
push
mov
jge
das
xchg
xor
xor
pop
cmp
pop
pop
in
ret
jae
arpl
mov
sbb
xor
popf
xchg
popf
bound
mov
stos
or
sbb
sbb
dec
lds
mov
xchg
xor
mov
in
mov
inc
add
mov
push
and
in
cmp
push
(bad)
xlat
lahf
mov
mov
add
fild
sub
pop
xor
push
fsubr
(bad)
dec
inc
icebp
fsub
jecxz
pop
mov
test
xor
loopne
popf
mov
ins
clc
sub
lods
popf
sbb
int
mov
ins
aas
imul
xchg
daa
jg
push
jo
xor
dec
or
mov
in
inc
cmp
add
mov
dec
lods
jno
inc
mov
mul
cmp
test
nop
xor
add
dec
enter
rcr
daa
ins
dec
in
cmp
in
lods
aaa
jl
mov
mov
in
sub
aaa
clc
cmp
or
add
mov
shr
movs
and
sub
sub
cmp
add
mov
out
jne
mov
pop
xor
shr
fsubr
cmps
cmp
int
and
aam
push
sbb
pusha
add
xchg
arpl
or
and
adc
test
sub
mov
mov
das
ins
sub
(bad)
mov
pop
sbb
inc
adc
imul
pop
xor
sbb
test
fcmovu
add
(bad)
popf
das
push
out
inc
push
loop
pop
adc
and
xchg
cs
xchg
fwait
push
inc
mov
fsubr
add
add
xor
cmp
push
dec
cmp
popa
(bad)
out
daa
push
daa
push
xchg
sub
cmp
add
sub
and
or
mov
mov
and
lods
mov
stos
inc
lea
(bad)
stos
aad
jl
clc
test
sbb
dec
adc
or
push
in
cmp
and
xchg
jns
(bad)
scas
nop
xchg
daa
or
add
mov
test
stos
repz
shl
aad
and
pop
pop
mov
outs
xchg
inc
add
sbb
pop
jnp
push
push
pop
in
push
jg
inc
xchg
icebp
jo
imul
call
shl
mov
sbb
xor
lods
stos
and
mov
inc
lea
push
mov
ss
add
push
push
dec
adc
xor
adc
cmp
and
movs
das
mov
aam
in
jg
jbe
push
pop
fimul
fmul
loop
dec
pop
or
sbb
jnp
mov
jge
dec
add
fwait
dec
lods
lods
add
and
push
mov
add
imul
mov
dec
and
mov
push
add
mov
sub
lods
repz
aam
jge
xlat
div
pop
adc
call
sbb
adc
ss
in
and
or
push
mov
popf
inc
sbb
add
popf
fidiv
out
inc
stos
sub
sub
lock
jae
repz
popf
and
mov
loop
mov
mov
mov
std
adc
mov
push
or
jge
fisttp
sbb
xor
ds
push
rcr
xor
or
mov
xor
aaa
xchg
stos
(bad)
mov
test
mov
and
mov
mov
sub
fwait
popf
pop
popf
mov
xor
adc
cmp
shl
dec
push
test
dec
fstp
aaa
mov
jns
aaa
push
aaa
push
imul
jnp
sbb
or
mov
bound
push
loopne
lea
rcl
sub
pop
sub
adc
mov
sbb
push
or
add
pop
push
sub
sub
pop
jno
fild
or
xor
test
cs
and
sub
icebp
sbb
stos
mov
cdq
in
cdq
adc
pusha
sbb
add
std
jg
shl
clc
sahf
out
outs
ret
add
push
rcr
call
jl
retf
retf
ds
mov
ins
adc
and
sbb
pop
push
adc
nop
mov
rcl
mov
ja
ror
dec
cwde
ds
add
test
mov
ins
push
sar
xchg
fnstcw
int
lea
xchg
inc
test
data16
xchg
adc
push
vmovsd
clc
pop
fdivrp
pop
in
loop
xor
shr
xchg
icebp
aam
cmps
pop
je
xor
repz
in
out
pusha
clc
outs
jo
test
rcl
clc
clc
out
stc
aas
add
repz
inc
add
add
shl
push
add
add
add
add
mov
cld
mov
sbb
repz
repz
push
pusha
ins
jl
repz
mov
call
and
jl
out
inc
jo
xchg
hlt
iret
repz
out
xchg
adc
push
cmp
sahf
out
cmp
js
mov
enter
mov
push
repz
data16
sbb
xchg
pop
dec
pop
push
jo
jnp
leave
adc
fdiv
mov
inc
and
xchg
mov
arpl
out
hlt
pushf
(bad)
popf
push
sbb
cmp
cmp
repz
pop
push
cmp
test
rcl
in
repz
or
push
xor
iret
repz
push
fs
nop
test
iret
repz
enter
lahf
iret
repz
test
xor
push
cmp
repz
jo
mov
mov
jns
iret
cld
or
and
cmp
out
sahf
dec
pop
push
sahf
out
movs
mov
aam
sahf
out
out
add
dec
jns
out
pop
ins
adc
mov
aam
lock
repz
add
adc
xor
pop
cmp
repz
adc
repz
aam
clc
mov
repz
jo
repz
pause
mov
imul
movs
sbb
out
sahf
xor
push
pusha
ins
jns
out
js
nop
pushf
test
jns
out
(bad)
fsubr
cld
iret
repz
or
and
inc
push
fs
repz
test
out
call
push
out
sahf
out
test
push
dec
hlt
push
or
cmc
cmp
push
call
jnp
out
cmp
push
mov
in
push
movs
mov
cmp
repz
out
call
sub
inc
dec
pop
fs
jo
daa
add
push
mov
mov
inc
or
ja
or
pop
pop
pop
mov
cmp
jbe
(bad)
lahf
cmp
bound
adc
scas
sbb
sbb
xor
cmp
popa
pushf
dec
xor
jbe
sub
daa
dec
push
sahf
fstp
or
ds
aas
xlat
out
fadd
iret
ds
aas
loope
jns
and
fsubrp
mov
outs
js
pop
ins
mov
ins
dec
aaa
mov
pusha
mov
daa
and
pusha
and
imul
(bad)
or
or
dec
data16
xchg
sbb
and
ins
sahf
int
and
cs
xor
int
mov
cmp
mov
push
sub
add
pop
add
shl
push
sub
xor
pop
inc
sub
scas
jns
push
cmp
pop
stos
aam
test
ins
and
pop
pop
iret
(bad)
fwait
ins
sti
add
js
les
and
adc
mov
data16
test
xor
fwait
(bad)
xchg
mov
and
ins
sub
fwait
cs
pop
pop
scas
mov
fstp
jp
cmp
inc
fisub
cmps
test
iret
data16
stos
push
push
push
push
sahf
out
sahf
sub
pop
ins
jl
sahf
out
nop
pushf
lods
mov
out
hlt
add
adc
iret
repz
xor
pop
ins
adc
mov
sahf
out
cld
or
and
ret
jns
out
ins
jl
mov
cli
add
add
pop
bound
cmp
mov
push
or
ins
repnz
adc
sub
arpl
inc
push
data16
add
push
sub
add
ud2
daa
mov
jno
pop
push
or
rcl
mov
pop
or
mov
or
or
push
and
add
or
add
push
std
test
sbb
sbb
add
mul
in
or
pop
pop
or
adc
adc
repz
cmp
cmp
sbb
iret
repz
inc
pop
jo
cwde
lods
lahf
cmps
stc
cmp
aam
in
add
cmp
repz
and
inc
push
repz
repz
xchg
movs
iret
repz
mov
fsubr
clc
or
cmp
mov
inc
pusha
js
repz
nop
movs
mov
cmp
add
push
sbb
inc
iret
repz
push
fs
pushf
mov
inc
in
cmp
add
in
repz
outs
inc
xor
inc
push
outs
pop
mov
in
push
mov
call
mov
push
mov
dec
mov
mov
pop
pop
sbb
repnz
out
mov
leave
repz
pop
cmp
push
inc
xor
mov
jne
add
fdiv
mov
pop
stc
mov
jmp
das
pandn
jne
sub
pop
pop
cmp
lock
mov
repz
cld
adc
out
sahf
out
dec
pop
ins
jl
out
sahf
nop
movs
mov
jns
jns
adc
push
xor
sahf
out
sahf
pop
ins
jl
lods
shl
jns
call
repz
repz
pusha
jo
addr16
into
xchg
add
jecxz
push
sahf
out
sahf
nop
movs
mov
int3
fdivr
adc
and
out
out
add
push
pusha
jo
jnp
out
mov
scas
or
iret
int3
fsub
push
pop
dec
ja
nop
or
inc
and
ins
inc
mov
leave
sub
sar
into
add
popa
jo
nop
add
repz
cli
retf
add
inc
dec
dec
inc
popf
mov
popa
sbb
and
push
cdq
inc
outs
jb
aaa
call
jmp
add
inc
adc
inc
push
dec
push
pop
mov
cmp
addr16
add
push
add
jg
dec
dec
push
inc
push
dec
inc
push
dec
dec
dec
xchg
jl
sub
dec
ss
pop
or
bound
mov
outs
adc
inc
sbb
or
iret
(bad)
jg
mov
push
or
pop
pop
or
or
or
push
add
adc
add
and
adc
sbb
daa
add
ins
adc
aam
je
sbb
cmc
mov
aas
and
and
shr
sub
or
or
add
inc
push
shld
and
adc
adc
adc
pusha
pop
push
push
nop
pop
scas
add
lar
and
mov
imul
push
fbld
pop
clc
jmp
jae
add
sbb
movs
iret
leave
sbb
add
call
add
inc
push
push
add
cdq
bound
pop
aam
sbb
jle
loopne
mov
add
add
or
mov
cmp
repz
(bad)
aam
hlt
push
shl
push
pop
rcl
xor
pop
jbe
ja
add
sbb
addr16
inc
gs
or
cwde
test
xor
pop
add
ss
xchg
mov
stos
xchg
icebp
adc
sti
jbe
adc
xchg
push
dec
push
jns
pop
popa
add
outs
or
push
push
inc
daa
inc
add
ins
add
add
enter
inc
pop
xor
outs
xchg
inc
add
in
imul
mov
jbe
data16
push
cmp
sub
xlat
je
xchg
xor
pop
jo
mov
fimul
popf
dec
add
or
cmp
div
pushf
ds
mov
sbb
dec
dec
imul
pop
xchg
xchg
lods
cwde
js
cmps
fnstcw
loopne
js
pop
xor
sub
out
mov
mov
movs
jbe
xor
cld
push
lods
mov
cmp
sbb
inc
ds
mul
sbb
es
rcl
sbb
push
ds
outs
dec
call
ds
sub
rol
push
adc
ins
std
faddp
sub
fidiv
idiv
pushf
dec
cmps
loopne
lahf
es
test
sahf
shl
mov
push
and
push
add
or
xchg
scas
lock
mov
fadd
mov
jge
ja
rol
cwde
push
aam
mov
push
lock
push
mov
(bad)
clc
in
cmps
mov
(bad)
and
mov
xchg
test
into
dec
jbe
(bad)
push
push
cld
fiadd
dec
mov
xor
mov
es
push
push
fiadd
(bad)
mov
cmp
ret
rol
push
call
lock
cmp
cwde
pop
ss
rcr
sti
push
mov
cmps
pop
xchg
(bad)
push
xchg
outs
inc
push
lock
ds
push
xor
push
in
fiadd
cmc
pop
aam
cwde
adc
xor
lock
in
fs
rcr
outs
(bad)
jnp
fiadd
mov
pop
fistp
push
sahf
ss
push
sub
mov
push
and
outs
adc
cwde
push
mov
adc
cmp
jle
into
fdiv
sahf
enter
dec
rol
test
loopne
loopne
inc
ror
test
jbe
inc
pop
out
jecxz
or
data16
and
mov
ret
jnp
adc
mov
in
aaa
ss
sub
mov
push
cs
mov
push
dec
inc
cs
xchg
jnp
cmp
and
xchg
sar
sahf
lds
sahf
je
xchg
into
jl
mov
dec
push
jle
outs
push
xor
stc
icebp
icebp
outs
clc
jle
ds
pop
cld
pop
pxor
push
push
xchg
mov
xchg
cld
ss
pxor
sbb
cld
xchg
out
cmp
ss
imul
sub
sbb
movzx
inc
mov
or
enter
push
ja
xchg
cmps
(bad)
fidivr
test
sbb
hlt
fiadd
data16
in
ins
push
mov
loop
jg
mov
(bad)
sbb
ret
aad
mov
(bad)
ins
ss
push
test
sub
cmp
xor
test
dec
movs
outs
push
mov
lods
mov
push
lock
mov
dec
(bad)
jmp
mov
fs
test
mov
imul
push
mov
pop
dec
fs
sahf
mov
jbe
and
js
ja
xchg
push
test
cmp
out
sbb
neg
(bad)
sub
ins
outs
cmp
mov
(bad)
adc
push
push
fmulp
ss
enter
ret
sar
movs
scas
or
(bad)
fisubr
out
call
cld
mov
dec
add
push
(bad)
(bad)
ds
xor
push
fdivp
(bad)
push
push
out
call
sub
inc
xchg
call
cs
pxor
jle
out
push
int3
jle
cmp
pop
inc
test
mov
cmc
lods
fdivrp
inc
push
outs
fsubr
xor
ja
pop
pop
sbb
push
clc
push
in
mov
(bad)
ja
sahf
mov
js
sub
ss
mul
loop
sbb
(bad)
lock
loopne
out
call
push
in
aam
nop
faddp
sar
and
pusha
(bad)
js
xor
sar
sti
push
adc
cbw
pushf
push
shr
cmp
mov
outs
call
(bad)
push
pop
sbb
shl
cmp
fild
add
and
nop
inc
movs
pop
or
dec
pop
pcmpgtd
call
push
jo
sahf
ror
cmps
test
int3
jbe
cmc
push
fidivr
test
xchg
and
push
xor
test
out
pop
cmp
mov
sbb
jnp
movs
xchg
xchg
faddp
sbb
sbb
out
mov
rcr
push
or
cmp
in
xor
lods
inc
into
add
mov
sub
dec
add
call
lock
daa
cmps
in
mov
mov
sahf
hlt
mov
fimul
loopne
cmp
pop
push
or
jnp
out
loopne
cmp
movs
mov
cmp
neg
adc
mov
add
fmul
or
iret
pop
xlat
jle
out
xchg
xor
js
dec
(bad)
inc
fidivr
push
pop
xchg
mov
dec
mov
loopne
mov
mov
xchg
push
out
mul
test
cmp
(bad)
test
call
add
cmps
nop
sahf
test
cld
jnp
nop
push
cwde
xlat
sbb
in
test
mov
or
push
xor
call
lock
jnp
lods
out
(bad)
cwde
mov
jno
adc
es
push
pop
pop
sub
in
pop
push
rol
mov
cmp
mov
enter
sub
scas
sahf
add
sbb
cwde
push
push
out
loope
(bad)
loopne
pushf
out
outs
xor
outs
mov
or
popa
add
js
(bad)
xor
js
mov
mov
push
clc
dec
inc
mov
stos
not
push
mov
inc
inc
mov
fiadd
mov
jo
enter
sub
xchg
stos
lock
pop
test
cmps
fcom
out
sbb
push
mov
mov
cmp
loope
xor
sbb
jle
mov
push
cmp
out
jae
das
aaa
(bad)
hlt
fdivr
push
ss
push
je
lock
cs
push
clc
(bad)
fadd
adc
jo
xor
pop
mov
test
es
ss
div
push
push
clc
push
fdivr
enter
sub
push
mov
or
stos
pop
lock
push
push
mov
jnp
loope
mov
out
js
mov
clc
out
lock
jo
rol
in
scas
dec
mov
lock
(bad)
push
cs
sar
pop
cmp
adc
inc
jle
inc
pusha
pop
sub
div
sub
sahf
lds
dec
inc
add
pop
dec
lock
fiadd
(bad)
ins
mov
into
fs
dec
ss
adc
ret
push
lock
sbb
xchg
js
sub
cmps
mov
and
mov
jbe
push
sbb
fsubrp
push
js
add
loopne
(bad)
mov
sti
push
cld
(bad)
jle
out
push
pop
dec
ret
(bad)
je
cwde
pop
sahf
dec
xor
xor
mov
add
mov
adc
jg
outs
mov
nop
mov
nop
push
cmp
adc
data16
mov
and
mov
in
cld
(bad)
pushf
push
mov
push
mov
out
sahf
idiv
pop
push
outs
add
cs
jge
out
cmp
test
je
icebp
xchg
cmp
inc
pop
je
push
inc
mov
adc
cmp
je
inc
cs
into
mov
addr16
shl
pusha
cs
xchg
jo
loopne
mov
shl
cmp
jo
inc
mov
sub
push
cmp
fmul
inc
pop
sbb
loopne
mov
mov
loope
js
ficom
fadd
rol
dec
loope
loope
into
rcr
push
es
mov
mov
cmp
test
fdivr
cmp
push
add
nop
ss
cmp
clc
dec
xor
shl
cmp
loopne
out
sub
dec
mov
ror
inc
jbe
in
sbb
dec
les
test
mov
cs
test
(bad)
js
scas
pushf
into
call
icebp
sahf
ds
clc
mov
pop
mov
and
mov
or
push
xor
scas
aas
(bad)
(bad)
test
dec
sahf
pop
lock
sub
and
cwde
pop
sub
xchg
mov
push
jp
sahf
sahf
add
dec
add
loopne
mov
and
fidivr
call
dec
ds
clc
adc
enter
shl
into
faddp
jnp
xchg
add
scas
inc
test
dec
out
jo
loopne
push
lock
out
loope
(bad)
pop
scas
sbb
or
jo
lock
xchg
js
pop
dec
cmp
es
adc
(bad)
cmps
and
mov
and
(bad)
sbb
out
mov
sub
mov
cs
push
fsubrp
jbe
pop
dec
sahf
sub
mov
xor
mov
test
nop
iret
mov
add
into
push
cmps
sar
jp
pop
dec
push
inc
call
cmp
cmp
mov
cs
push
cmp
into
inc
dec
ss
push
call
mov
ror
inc
sahf
cwde
cmp
shr
xor
push
and
loopne
push
mov
sahf
push
and
dec
pop
inc
jl
cmps
push
cmps
in
ret
mov
push
les
jno
fidiv
pop
adc
jo
je
lock
push
ds
dec
xchg
jp
loopne
jle
jbe
jbe
cs
pop
sub
push
mov
inc
out
cmp
lea
adc
cmp
(bad)
ss
adc
mov
dec
into
xchg
not
cmp
push
mov
in
lock
js
pop
or
jbe
(bad)
xor
and
hlt
xchg
data16
les
aad
data16
push
mov
adc
fcomp
sub
cmp
push
cmp
pop
cwde
ins
push
add
cmp
push
les
pop
lock
inc
sahf
xor
rol
push
or
lock
push
cs
sub
into
enterw
mov
lock
in
pop
pusha
mov
mov
test
push
out
cs
neg
add
cs
in
cmps
pop
push
rcr
jnp
ss
push
sbb
or
inc
ds
adc
js
inc
xchg
(bad)
fdiv
pop
lods
je
push
aam
js
ds
faddp
add
pop
adc
movs
mov
out
sbb
push
mov
cmp
icebp
mov
lock
lock
and
inc
add
pop
sbb
sbb
shl
inc
sahf
lock
out
loopne
(bad)
pop
dec
mov
hlt
inc
push
push
inc
out
ret
inc
faddp
jl
push
mov
push
sub
test
lock
sub
fs
nop
inc
(bad)
dec
fmul
test
faddp
jge
and
(bad)
or
sbb
jle
and
cmc
mov
pop
push
sbb
xor
sub
lock
dec
add
lock
outs
test
out
jmp
push
hlt
ds
outs
add
jns
js
scas
jbe
dec
and
xor
jecxz
iret
xchg
mov
pop
dec
add
push
mov
jo
mov
mov
loope
or
xchg
(bad)
lock
or
dec
cmp
jns
sbb
mov
aam
call
pusha
jle
xchg
es
adc
xor
loope
data16
mov
push
add
test
xchg
mov
push
cs
idiv
push
jp
or
mov
pop
push
pop
into
adc
scas
pop
ja
pusha
or
ds
push
sbb
cs
push
mov
jecxz
je
and
out
cmp
cwde
ds
jae
aam
xchg
ror
pushw
test
cmp
nop
es
cmp
loopne
jl
sbb
rol
lods
cs
or
push
xchg
(bad)
fdivrp
(bad)
enter
push
(bad)
hlt
ss
fs
sub
in
cwde
push
and
and
sub
push
sahf
test
es
ins
int3
inc
sub
out
add
xor
rol
push
cmps
inc
adc
jl
cmp
fiadd
xchg
inc
inc
js
jmp
or
(bad)
pop
jle
dec
pop
push
xor
into
fsub
jnp
pop
mov
or
(bad)
call
rcr
jbe
add
dec
das
mov
not
ret
jnp
out
push
rol
out
xchg
mov
fs
outs
pop
faddp
adc
inc
push
sbb
or
scas
scas
push
push
sub
outs
inc
data16
inc
out
jo
not
into
js
fcomp
into
sbb
mov
jle
cmps
sahf
enter
out
inc
lock
loopne
scas
faddp
data16
es
push
mov
ss
push
aaa
inc
pop
inc
ja
rcl
cmps
mov
push
mov
push
sub
lods
not
vorps
test
aas
xor
lods
jbe
dec
cmp
cmps
cld
(bad)
loopne
(bad)
(bad)
inc
adc
cs
mov
fcom
pop
dec
ret
hlt
inc
ss
mov
jno
push
cmp
into
add
loopne
sbb
xor
or
xchg
push
xchg
xchg
sbb
lods
aaa
jle
xchg
mov
push
push
push
jne
add
push
pop
push
xchg
enter
sbb
jecxz
cmp
cmp
push
jl
mov
fidivr
out
loop
add
hlt
dec
inc
sahf
rcl
push
cwde
(bad)
mov
mov
lock
push
xor
push
clc
es
add
dec
push
in
and
inc
inc
enter
inc
push
add
mov
add
and
cmp
push
movs
mov
add
or
sub
mov
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
cmp
dec
add
sub
out
fcomip
xor
pop
add
dec
and
dec
add
(bad)
mov
and
add
inc
add
push
imul
not
inc
push
push
ja
dec
cs
dec
push
ja
neg
or
mov
inc
mov
push
jnp
pop
cmp
or
pusha
out
mov
push
call
in
fld
cmp
mov
push
mov
div
or
mov
pop
dec
mov
out
mov
inc
xchg
dec
sbb
pop
sbb
inc
test
dec
ret
push
out
fstp
dec
add
pop
xchg
dec
or
mov
dec
pop
push
pop
dec
aaa
mov
pop
dec
stos
dec
fwait
and
jns
mov
out
xchg
push
loop
inc
lock
pop
inc
pop
fist
add
fiadd
inc
out
add
push
movntq
inc
fist
push
cs
ja
or
inc
mov
dec
adc
xlat
fisubr
or
push
dec
push
cs
sbb
ds
repnz
push
sub
dec
push
inc
mov
bound
or
push
dec
ja
rcpps
inc
push
inc
dec
pop
mov
push
mov
into
mov
jae
jmp
or
arpl
mov
push
or
jbe
pop
cmps
sub
(bad)
push
outs
imul
xlat
(bad)
ficom
pop
xchg
inc
outs
jle
pop
mov
retf
pop
pop
(bad)
out
ja
rol
or
push
dec
dec
lock
jmp
pop
js
loopne
xor
(bad)
daa
push
ds
ja
dec
mov
xor
push
out
mov
sbb
dec
inc
inc
push
stos
mov
xlat
jnp
nop
or
xor
inc
adc
sub
push
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
inc
push
pop
push
lock
mov
mov
push
das
cmovb
jns
sahf
xchg
arpl
gs
out
cmp
inc
cmp
sahf
dec
push
xchg
out
push
imul
jns
dec
ins
dec
outs
dec
sahf
xchg
out
outs
push
jo
out
cmp
push
jb
jns
sahf
xchg
jae
je
jne
out
cmp
push
ja
jns
sahf
pop
js
jns
sahf
xchg
out
jp
loopne
loope
cmp
ret
jecxz
sahf
xchg
out
in
in
out
cmp
(bad)
out
jns
sahf
xchg
call
xchg
out
cmp
jmp
in
cmp
sahf
int
into
out
iret
sahf
xchg
out
out
shl
shl
in
jns
shl
shl
dec
sahf
xchg
out
hlt
aad
(bad)
out
cmp
fdivr
fnstcw
sahf
xchg
stc
(bad)
(bad)
xchg
out
cmp
cld
(bad)
mov
(bad)
cmp
lea
add
add
xchg
out
add
in
jns
or
or
dec
sahf
xchg
out
movups
adc
in
jns
adc
push
jns
sahf
xchg
pop
sbb
sbb
xchg
out
cmp
dec
sahf
and
and
and
xchg
out
and
in
jns
sub
sub
(bad)
xchg
out
das
xor
mov
jae
push
xor
xor
ss
repnz
cmp
cmp
cmp
iret
leave
jae
ds
inc
inc
jae
pushf
cmp
inc
inc
inc
cmp
iret
leave
inc
inc
dec
dec
dec
leave
jae
pushf
dec
dec
dec
dec
pushf
cmp
iret
push
push
push
push
push
iret
leave
jae
push
push
push
pop
pop
repnz
cmp
pop
pop
pop
pop
daa
iret
leave
jae
pop
pusha
popa
bound
pushf
cmp
fs
iret
leave
addr16
jae
pushf
ins
ins
outs
outs
pushf
cmp
iret
jo
jb
je
leave
jae
jne
ja
jmp
mov
push
jp
jnp
and
adc
jnp
or
test
xchg
add
push
add
xchg
jnp
sbb
pushf
cmp
(bad)
pop
add
mov
setno
xchg
setae
push
mov
and
jnp
push
mov
seta
sets
cdq
(bad)
popa
in
pushf
outs
add
outs
(bad)
popa
lahf
push
add
mov
out
cmp
movs
movs
cmps
stc
(bad)
enter
push
test
test
fistp
lods
push
lods
fxrstor
jae
push
mov
mov
add
pop
add
mov
mov
mov
mov
repnz
mov
pushf
cmp
(bad)
mov
cmp
repz
enter
daa
iret
leave
repz
iret
rcl
jae
pushf
cmp
rcl
aad
daa
iret
leave
(bad)
xlat
fcomp
fcmove
jae
pushf
fcmovnu
(bad)
pushf
cmp
iret
loopne
loop
in
leave
jae
in
out
jmp
jmp
jae
out
icebp
repz
iret
leave
repz
cmc
not
cmp
clc
stc
cli
cmp
iret
leave
sti
cld
std
(bad)
push
mov
add
add
add
iret
leave
jae
add
repnz
cmp
or
or
daa
iret
leave
or
leave
jae
pushf
adc
adc
pushf
cmp
iret
push
pop
sbb
sbb
leave
jae
sbb
cmp
and
and
daa
iret
leave
jae
daa
sub
sub
pushf
cmp
sub
cs
iret
leave
das
xor
xor
repnz
add
leave
jae
scas
mov
cmp
mov
(bad)
cmp
iret
leave
into
xchg
mov
mov
jae
pushf
xchg
mov
mov
cmp
iret
xchg
mov
mov
iret
leave
jae
mov
mov
cmp
call
jae
mov
repnz
cmp
lahf
mov
leave
shl
repnz
movs
les
iret
cmps
(bad)
cmps
(bad)
test
leave
jae
enter
retf
cmp
stos
retf
fcmovu
daa
iret
leave
jae
fstp
fnstsw
jae
pushf
cmp
loop
in
daa
iret
leave
in
out
jmp
jmp
iret
out
out
cmp
push
add
iret
leave
xor
push
add
jae
pushf
cmp
add
add
push
push
push
pop
push
leave
jae
pushf
or
pop
pushf
cmp
iret
or
pop
or
leave
jae
pop
or
pushf
cmp
maxps
xor
iret
leave
jae
xor
xor
jae
pushf
cmp
adc
adc
xor
leave
jae
pushf
sbb
sbb
pushf
cmp
iret
sbb
sbb
sbb
leave
jae
cmp
cmp
cmp
pop
aas
and
iret
leave
jae
inc
and
jae
pushf
cmp
and
and
inc
es
daa
inc
leave
jae
pushf
sub
dec
pushf
cmp
iret
sub
dec
sub
leave
jae
dec
sub
pushf
cmp
das
dec
pusha
popa
daa
iret
leave
jae
arpl
jae
pushf
cmp
push
iret
leave
imul
leave
jae
pushf
jo
jb
pushf
cmp
iret
je
jbe
js
leave
jae
jns
jnp
jge
pushf
cmp
jle
add
lea
pushf
cmp
xchg
xchg
xchg
cmp
iret
leave
xchg
xchg
xchg
cwde
cdq
leave
jae
pushf
call
iret
sahf
lahf
mov
jae
mov
repnz
cmp
test
stos
stos
daa
iret
leave
jae
lods
scas
scas
mov
repnz
cmp
mov
mov
daa
iret
leave
mov
mov
mov
mov
cmp
iret
mov
iret
leave
jae
(bad)
(bad)
enter
pushf
cmp
rcl
rcl
daa
iret
leave
jae
aad
xlat
fdiv
pushf
cmp
fcmovu
fdivr
iret
leave
fstp
fnstsw
loope
jae
pushf
loop
in
pushf
cmp
iret
out
call
jae
jmp
in
out
out
repnz
cmp
lock
repnz
iret
leave
jae
cmc
clc
stc
xor
add
leave
jae
arpl
xor
daa
ss
addr16
iret
leave
jae
push
repnz
cmp
cmp
cmp
iret
leave
ins
cmp
jae
pushf
aas
outs
inc
jo
cmp
iret
inc
jno
jb
iret
leave
jae
jae
je
jne
pushf
cmp
inc
jbe
ja
iret
leave
jae
js
jns
jae
pushf
cmp
dec
jnp
cmp
iret
leave
jl
jge
jle
jae
pushf
dec
jg
sbb
adc
jae
adc
ins
sahf
cmp
push
xchg
push
add
leave
jae
mov
add
push
pop
or
or
leave
jae
or
cmp
adc
adc
daa
iret
leave
jae
adc
repnz
cmp
sbb
sbb
daa
iret
leave
sbb
leave
jae
pushf
and
and
pushf
cmp
iret
es
sub
sub
leave
jae
sub
cmp
xor
xor
daa
iret
leave
jae
xor
repnz
cmp
cmp
cmp
daa
iret
leave
cmp
leave
jae
pushf
inc
inc
inc
inc
pushf
cmp
iret
inc
inc
dec
dec
dec
iret
leave
jae
dec
dec
dec
dec
dec
repnz
cmp
push
push
push
push
daa
iret
leave
jae
push
push
push
pop
jae
pushf
cmp
pop
pop
pop
cmp
iret
leave
pop
pop
pop
pusha
popa
leave
jae
pushf
bound
gs
cmp
iret
addr16
iret
leave
jae
imul
repnz
cmp
jo
jb
daa
iret
leave
jae
jne
ja
jae
pushf
cmp
jp
jl
daa
iret
leave
jge
jg
or
add
xchg
jae
mov
cmp
nop
xchg
xchg
xchg
daa
iret
leave
jae
xchg
mov
pushf
cmp
movs
movs
cmps
cmp
iret
leave
cmps
test
stos
stos
leave
jae
pushf
lods
lods
scas
scas
pushf
cmp
iret
mov
mov
mov
leave
jae
mov
mov
mov
mov
iret
leave
jae
mov
repnz
cmp
(bad)
(bad)
daa
iret
leave
(bad)
enter
leave
jae
pushf
int3
int
iret
pushf
cmp
iret
rcl
rcl
aam
leave
jae
aad
xlat
fcomp
repnz
cmp
fcmovu
(bad)
daa
iret
leave
jae
fnstsw
loope
jae
pushf
cmp
in
out
daa
iret
leave
out
jmp
repnz
in
in
out
out
pushf
cmp
iret
lock
repnz
iret
leave
jae
cmc
div
clc
stc
push
dec
sbb
or
wbinvd
add
add
jns
sahf
or
or
or
add
in
jns
sbb
sbb
dec
sahf
xchg
out
adc
adc
in
jns
sbb
sahf
xchg
and
and
and
and
cmp
sahf
sub
sahf
xchg
out
daa
cmp
cmp
in
jns
cmp
cmp
dec
sahf
xchg
out
xor
xor
jns
aas
aaa
dec
jns
sahf
xchg
inc
dec
inc
dec
inc
xchg
out
cmp
dec
inc
cmp
sahf
dec
inc
pop
push
pop
sahf
xchg
out
push
pop
push
pop
push
in
jns
push
sahf
xchg
out
bound
ins
out
cmp
ins
outs
jns
sahf
xchg
outs
mov
in
mov
dec
sahf
mov
xchg
out
test
cmp
cwde
nop
cdq
xchg
dec
sahf
xchg
out
xchg
fwait
xchg
pushf
out
cmp
popf
xchg
sahf
jns
sahf
xchg
xchg
lahf
xchg
test
xchg
out
cmp
jns
sahf
stos
mov
xchg
out
movs
scas
cmps
scas
cmps
in
jns
mov
sahf
xchg
out
jo
jno
out
cmp
enter
dec
sahf
xchg
jae
je
jne
out
cmp
ret
fcom
cmp
sahf
(bad)
fidiv
sahf
xchg
out
ja
loopne
loope
cmp
jmp
out
in
js
out
cmp
cli
jl
push
dec
sahf
xchg
jge
repz
int
out
out
sub
imul
sub
in
(bad)
jns
outs
pusha
push
jo
popa
jno
sahf
xchg
out
jb
jae
je
cmp
gs
jbe
sahf
xchg
out
ja
js
out
cmp
push
imul
xchg
jnp
jl
jge
out
cmp
outs
jg
sahf
xchg
int
and
and
sar
sar
sahf
xchg
aam
aad
(bad)
xchg
out
cmp
jns
sahf
mov
sahf
xchg
out
fcmovnb
fadd
fucom
cmp
(bad)
faddp
fisttp
xchg
out
loopne
loope
out
cmp
leave
jecxz
jns
sahf
xchg
in
in
out
out
cmp
out
call
iret
jmp
and
in
jns
and
jns
sahf
xchg
inc
and
out
cmp
inc
sub
jns
sahf
sub
dec
sub
sub
sub
dec
cs
das
dec
dec
sahf
xchg
out
push
xor
out
cmp
xor
jns
sahf
xchg
push
xor
out
cmp
push
cmp
jns
sahf
cmp
pop
xchg
dec
jb
xlat
inc
inc
inc
dec
xor
and
inc
inc
xor
and
inc
dec
dec
leave
and
dec
dec
dec
dec
and
dec
xor
dec
xchg
dec
xor
push
push
push
push
dec
xor
and
push
push
xor
and
push
pop
pop
xor
iret
ins
pop
mov
pop
xchg
dec
out
adc
rol
es
fs
es
fs
(bad)
enter
dec
leave
retf
xchg
dec
es
int
xchg
dec
es
iret
rcl
dec
es
fs
aam
cdq
fs
aad
fcomp
cdq
fs
dec
fcmovu
fadd
pop
addr16
dec
mov
add
and
push
or
leave
and
or
leave
and
dec
adc
adc
xchg
dec
xor
sbb
xchg
dec
xor
sbb
and
dec
xor
and
sub
sub
xor
nop
cmps
add
pop
xor
and
dec
xor
cmp
dec
xor
cmp
leave
inc
inc
inc
inc
dec
xor
and
dec
dec
xor
and
push
push
push
leave
and
dec
push
pop
pop
and
dec
xor
xchg
dec
xor
bound
dec
xor
and
ins
outs
xor
and
jo
je
shl
push
xor
pop
test
xchg
dec
pop
xchg
cvtpi2ps
test
pop
cwde
iret
test
cdq
mov
popa
stos
mov
lahf
lods
test
scas
push
cdq
sub
mov
aas
mov
mov
call
es
movs
sbb
retf
int
cdq
fs
dec
rcl
aad
xchg
dec
xlat
(bad)
cmps
dec
cwde
inc
dec
xchg
dec
loopne
in
xchg
dec
es
jmp
icebp
repnz
test
clc
ret
fs
cld
pop
dec
xor
push
aas
add
add
leave
and
push
or
leave
and
dec
or
adc
dec
xor
adc
xchg
dec
xor
sbb
sbb
dec
xor
and
and
xor
and
sub
sub
es
dec
xor
cmps
pop
mov
xchg
test
push
es
push
(bad)
nop
popaw
xchg
test
push
cmps
pop
cwde
xchg
pop
xchg
cwde
fs
imul
push
cmps
pop
cmps
cmps
(bad)
popaw
call
push
es
mov
das
sub
pop
inc
lahf
cdq
xor
and
pop
xchg
dec
mov
xchg
xchg
dec
xor
xchg
xchg
xchg
xchg
dec
xor
and
xchg
cwde
xor
and
cdq
call
popf
sahf
adc
dec
movs
stc
out
ret
es
fs
movs
movs
cmps
cmps
cdq
fs
dec
test
stos
xchg
test
mov
pop
shl
imul
pop
(bad)
scas
leave
and
or
dec
xor
loopne
xchg
dec
xor
in
call
and
pop
lock
test
repnz
fs
mov
fs
dec
adc
push
pop
sbb
cdq
sbb
sbb
cdq
fs
sbb
push
pop
cdq
fs
dec
and
and
and
es
sub
cdq
sub
sub
cdq
fs
sub
cs
fs
jmp
xchg
dec
es
add
add
es
fs
fs
or
or
cdq
fs
dec
or
push
xchg
sub
pandn
es
bound
cdq
fs
push
fs
dec
jo
je
xchg
dec
es
jp
dec
es
jl
or
mov
xchg
xchg
xchg
xchg
cwde
cdq
fs
dec
call
mov
es
cmps
test
dec
es
lods
scas
mov
cdq
fs
mov
mov
cdq
fs
dec
mov
dec
es
xchg
dec
es
retf
rcl
dec
es
fs
fsub
cdq
fs
fcmovu
fsubp
cdq
fs
dec
loop
out
xchg
dec
es
es
out
lock
or
fs
pop
fbstp
dec
xor
and
xor
leave
and
xor
xchg
dec
cmp
cmp
dec
xor
cmp
xchg
dec
xor
ds
inc
inc
dec
xor
and
inc
inc
xor
and
inc
inc
inc
leave
and
dec
dec
dec
dec
and
dec
xor
dec
xchg
dec
xor
dec
dec
push
push
dec
xor
and
push
push
push
fsub
xchg
push
pop
xchg
dec
es
dec
es
fs
or
es
fs
or
adc
cdq
fs
dec
adc
sbb
sbb
xchg
dec
es
and
and
es
fs
es
fs
sub
xor
cdq
fs
dec
xor
cmp
cmp
xchg
dec
es
inc
inc
inc
dec
es
fs
dec
dec
es
fs
dec
dec
push
push
cdq
fs
dec
push
push
pop
fs
dec
es
pop
pop
xchg
dec
es
pusha
bound
cdq
fs
cdq
fs
ins
outs
jo
cdq
fs
dec
je
js
xchg
dec
es
jle
dec
es
add
xchg
xchg
mov
mov
xor
and
mul
xchg
dec
cmps
test
and
dec
xor
leave
mov
mov
dec
xor
and
mov
xchg
rol
leave
and
dec
(bad)
enter
dec
xor
into
rcl
aam
fmul
and
(bad)
xor
and
loopne
in
and
dec
out
jmp
lock
dec
xor
repnz
test
in
popa
test
or
or
dec
es
or
cdq
sbb
sbb
cdq
fs
sbb
dec
sub
sub
es
cs
dec
es
das
cmp
dec
es
cmp
cmp
cdq
fs
cmp
fs
dec
dec
dec
dec
fs
dec
es
dec
pop
xchg
dec
es
pop
pop
pop
dec
es
fs
fs
imul
stos
test
xchg
mov
fs
leave
retf
test
daa
fcmovu
scas
cmps
dec
cwde
fs
stc
daa
jmp
cli
dec
cmps
push
cwde
sti
inc
mov
cdq
fs
mov
xchg
dec
lea
es
cdq
call
popf
dec
es
fs
lahf
test
cdq
fs
test
fs
dec
lods
scas
scas
sub
pop
sub
mov
int3
fcomp
sub
lahf
call
shr
sysret
dec
es
es
fs
bound
gs
fs
dec
addr16
dec
imul
ins
ins
outs
xchg
pop
sub
mov
dec
xor
and
mov
xchg
mov
xchg
dec
mov
dec
xor
ret
dec
xor
(bad)
(bad)
dec
xor
and
leave
retf
and
retf
int3
int
popa
fwait
dec
into
pop
(bad)
dec
es
in
and
es
fs
and
es
cdq
fs
dec
sub
sub
sub
cs
xor
cdq
xor
xor
cdq
fs
xor
ss
(bad)
cmp
pop
cdq
cmp
loopne
test
repnz
(bad)
(bad)
xchg
mov
jle
add
adc
out
ficom
cs
sbb
ja
mov
fadd
and
cs
jns
and
and
daa
jns
sahf
xchg
sub
xor
push
dec
sahf
out
cmp
dec
inc
add
lock
inc
jae
dec
fiadd
dec
dec
cs
dec
mov
pusha
popa
add
mov
pop
jmp
add
add
pop
pop
xchg
push
xchg
add
in
leave
jae
cdq
call
in
jns
pushf
mov
pushf
cmp
test
stos
stos
daa
iret
leave
jae
lods
lods
lods
scas
mul
jns
add
scas
mov
pop
fwait
jge
outs
or
mov
pop
or
mov
pop
or
adc
fucomip
mov
pop
or
push
mov
add
add
add
pop
adc
mov
mov
in
fwait
jge
mov
mov
mov
popw
push
push
mov
int3
ds
add
pop
sbb
jnp
sbb
(bad)
les
pop
sbb
fnstenv
ja
pop
(bad)
enter
push
push
pop
and
cwde
mov
xor
push
pop
and
ret
push
push
pop
and
push
out
in
repz
and
push
push
push
xlat
push
push
pop
sub
jo
pop
and
dec
fmulp
daa
inc
fistp
jecxz
daa
iret
leave
cmp
inc
in
call
cmp
jmp
in
in
push
movs
fst
and
pop
in
out
test
inc
xor
xor
xchg
out
xor
ss
out
cmp
cmp
cmp
sahf
xchg
cmp
cmp
in
aas
inc
inc
inc
cmp
sahf
inc
inc
inc
inc
inc
sahf
xchg
out
inc
inc
inc
inc
inc
in
jns
dec
dec
dec
dec
(bad)
(bad)
(bad)
idiv
pop
pop
(bad)
out
jnp
xlat
inc
or
inc
push
or
ja
cs
in
jns
mov
idiv
idiv
pop
cmps
or
das
mov
gs
pop
or
pop
or
pop
or
das
int
int
or
fld
and
pop
push
or
push
or
jl
retf
mov
pop
or
dec
jnp
retf
push
cmp
jns
idiv
push
dec
imul
jbe
retf
jp
fisub
sbb
sbb
push
xor
jns
cmp
pop
(bad)
jno
xor
dec
pop
xor
fld
cs
or
xchg
ja
push
add
repz
(bad)
pop
fisub
pop
push
(bad)
adc
xchg
mov
sti
mov
pop
pop
pop
test
sbb
jl
shl
shl
ror
rol
add
iret
leave
repz
fcomp
fcomi
in
cmp
loope
loope
xor
sti
mov
xor
mov
int
and
sub
cs
out
sahf
das
loopne
call
popw
and
jle
inc
ja
cld
(bad)
or
pop
jg
ror
inc
push
add
push
ret
or
lds
(bad)
shl
leave
sbb
shl
and
push
push
(bad)
into
push
daa
iret
dec
shl
xor
xor
shl
aam
aad
shl
aas
fimul
xor
inc
fild
dec
fnsave
dec
loope
shl
push
in
shl
pusha
call
arpl
jmp
shr
ins
in
outs
in
dec
shl
js
xor
shl
bnd
adc
test
xchg
dec
shl
nop
sti
xor
shl
cld
xchg
std
cdq
repz
call
repz
add
cmp
repz
scas
push
mov
repz
repz
mov
mov
or
mov
adc
mov
push
jns
test
push
out
jbe
add
lds
adc
rol
add
fsub
push
add
adc
fiadd
sbb
adc
lock
inc
in
sbb
inc
in
adc
xchg
sbb
ret
adc
dec
push
lock
inc
cmovg
add
and
and
call
add
cmps
imul
cmps
imul
xchg
xchg
sub
repnz
es
fsubrp
aaa
push
cmp
cmp
mov
cmp
iret
rep
stos
pop
pop
inc
es
dec
inc
sahf
out
cmp
push
ss
push
dec
cmp
cmp
pop
push
dec
pop
dec
jns
ja
pop
bound
gs
repz
sahf
out
push
imul
out
cmp
jno
je
mov
iret
cmp
jp
jge
(bad)
pop
sbb
mov
pusha
mov
loopne
jns
(bad)
xchg
push
arpl
cmp
xchg
fs
fwait
sahf
dec
sahf
out
imul
ins
stos
ins
lods
in
sahf
xor
jns
out
mov
mov
ret
lds
out
push
dec
retf
(bad)
js
jns
sahf
adc
jl
out
in
frstor
loopne
in
cmp
out
scas
jmp
in
mov
out
repnz
iret
cmp
sahf
cmc
sar
sti
repz
shl
add
aad
repz
pop
(bad)
or
iret
repz
fstp
fisub
fld
fdiv
fmulp
repz
aaa
fistp
iret
repz
loop
jecxz
repz
repz
out
call
pop
jmp
cmp
repz
in
gs
imul
iret
repz
jno
je
iret
repz
ja
jp
jge
cmp
repz
stc
cmp
repz
repz
mov
xchg
std
loope
cmp
xchg
(bad)
cwde
call
sahf
aaa
adc
push
add
out
add
jns
add
mov
sahf
out
or
jns
out
or
jns
or
retf
jns
out
adc
adc
adc
jns
out
adc
adc
sahf
out
sahf
adc
jecxz
sahf
out
sbb
sbb
sbb
jns
out
sbb
push
repnz
out
sahf
pop
cmc
es
daa
sti
xor
out
sub
sub
add
repz
repz
or
fsub
fsubr
das
cmps
mov
add
xor
and
cmps
call
xor
imul
imul
imul
cmps
imul
imul
imul
cmps
imul
imul
imul
pop
and
add
push
jl
mov
sub
xchg
dec
gs
jno
push
xchg
add
xchg
int
push
push
sahf
add
or
add
sub
cmps
pop
add
fwait
mov
mov
ja
ror
add
outs
rol
(bad)
mov
mov
(bad)
rol
mov
sub
enter
fiadd
repnz
(bad)
rcl
fadd
sub
inc
push
xlat
sahf
fs
add
scas
loop
test
add
test
dec
sysret
jmp
push
adc
add
add
cmc
add
mov
cs
(bad)
xor
mov
lock
inc
ror
mov
hlt
adc
xchg
ror
inc
(bad)
push
stc
and
add
push
es
or
out
and
push
push
sub
sub
xor
out
shl
sub
xor
cmp
repz
xor
pop
iret
repz
cmp
pop
cmp
repz
pop
dec
pop
dec
repz
repz
dec
pop
push
retf
iret
repz
push
int3
pop
fcomp
call
xor
fs
jnp
jns
fisttp
push
ins
repnz
out
push
jo
push
jae
dec
or
jns
aaa
dec
push
jns
jl
sahf
out
sahf
jg
adc
mov
mov
mov
or
xchg
rcl
enter
popf
outs
push
mov
out
dec
or
push
sahf
out
sahf
lods
fisubr
lahf
out
mov
mov
cmp
repz
rcl
iret
repz
(bad)
pop
retf
jae
iret
repz
jne
jbe
repz
repz
sbb
iret
fistp
cmp
repz
lods
jmp
out
ficomp
(bad)
adc
cmps
ret
adc
imul
sbb
lea
cli
add
pop
mov
js
add
add
iret
pop
or
or
adc
repz
sbb
sbb
cmp
repz
or
repz
(bad)
adc
adc
adc
adc
adc
cmp
repz
repz
pop
dec
sbb
push
cmp
repz
push
sbb
repz
repz
sbb
repz
pop
imul
iret
repz
jb
jne
repz
repz
jnp
jle
repz
daa
sub
iret
repz
mov
lea
(bad)
ret
sub
pop
mov
es
push
cmps
mov
xchg
push
jmp
push
xor
xor
(bad)
lods
lahf
cmc
xor
outs
aaa
push
xchg
(bad)
ret
cmp
mov
js
ds
mov
cs
inc
loope
pop
iret
push
(bad)
sub
push
test
add
sub
fiadd
movs
push
in
out
pop
mov
add
ret
lock
pop
mov
pop
push
or
ss
add
addr16
or
push
jns
out
adc
sbb
out
sahf
out
es
sub
sahf
out
sahf
das
push
xor
pop
jns
out
cmp
pop
ds
sahf
out
inc
pop
inc
pop
sahf
out
sahf
dec
pop
push
pop
push
pusha
jns
out
push
popa
pop
bound
sahf
out
pop
bound
out
sahf
push
push
jp
sub
jns
out
mov
sahf
out
sahf
(bad)
outs
xchg
outs
xchg
jo
sahf
out
cwde
jno
jb
out
sahf
out
mov
out
sahf
cmps
jbe
ja
js
sahf
out
mov
mov
mov
jnp
jl
jge
out
sahf
retf
jle
jg
cmp
jns
adc
sahf
out
fld
sahf
jecxz
out
jmp
jns
mov
mov
out
sahf
out
cmc
mov
(bad)
int
jns
sti
mov
pop
pop
nop
cmp
repz
xchg
pop
xchg
or
cmp
repz
or
repz
adc
cmp
repz
cdq
pop
fwait
and
cmp
repz
iret
repz
sub
cmp
repz
cmps
cmp
iret
repz
test
cmp
push
stos
pop
lods
popa
lods
cmp
repz
scas
ins
scas
jae
cmp
repz
mov
mov
repz
test
cmp
repz
mov
mov
repz
repz
iret
repz
scas
mov
cmp
repz
mov
cmp
repz
int
iret
repz
rol
fld
ffreep
cmp
repz
(bad)
jmp
icebp
lock
repz
retf
gs
std
pop
nop
int3
push
sahf
out
sahf
add
push
into
or
jns
out
or
psrlw
rcr
shl
aam
out
sahf
daa
aad
(bad)
xor
jns
out
cmp
aas
fld
jns
out
dec
fist
sahf
out
sahf
push
fstp
arpl
jns
out
imul
jns
out
jnp
and
xchg
mov
(bad)
out
sahf
out
nop
call
jns
out
lahf
jmp
in
sahf
out
sahf
stos
in
mov
mov
jns
out
mov
out
sahf
out
iret
repz
sahf
out
sahf
aad
fdiv
fcomi
push
sahf
out
fdivrp
loope
cmp
mov
out
add
add
cmp
repz
add
add
add
dec
add
pushw
or
adc
iret
repz
adc
pop
or
cmp
or
cmp
repz
adc
adc
repz
adc
inc
adc
iret
repz
adc
cmp
repz
sbb
repz
gs
sbb
repz
and
jge
cmp
repz
repz
(bad)
es
daa
fwait
sub
repz
sub
repz
repz
mov
xor
repz
xor
xor
repz
repz
xor
xor
jecxz
jmp
mov
cmp
cmp
clc
or
pop
shl
or
dec
push
pop
iret
repz
cmp
sbb
repz
pop
inc
and
cmp
repz
ret
iret
inc
aaa
dec
cmp
aad
inc
or
dec
dec
sahf
out
sahf
dec
dec
dec
push
push
pop
jns
out
push
pop
push
popa
push
out
sahf
out
push
ins
push
jae
out
sahf
push
jns
jg
test
out
pop
mov
pop
out
sahf
out
pusha
call
bound
jns
out
gs
mov
out
push
out
sahf
push
imul
(bad)
jns
out
ins
fsubr
outs
out
sahf
out
jo
jb
sahf
out
sahf
je
jbe
js
shl
std
or
cmp
repz
add
or
jae
repz
test
xchg
xchg
iret
repz
inc
mov
repz
repz
mov
arpl
repz
lea
(bad)
jle
iret
repz
xchg
iret
repz
xchg
pushf
xchg
movs
iret
repz
xchg
scas
xchg
mov
sar
cmp
leave
cdq
iret
call
ficomp
popf
dec
lock
or
out
fiadd
push
or
sahf
mov
sub
out
movs
xor
sahf
out
test
test
sahf
stos
pop
stos
bound
lods
je
jge
out
sahf
out
mov
mov
sahf
out
sahf
mov
mov
mov
jns
out
mov
mov
mov
lods
mov
out
sahf
mov
mov
ret
ret
(bad)
out
sahf
out
(bad)
into
enter
jns
retf
fcmove
fnstsw
out
into
loopne
jecxz
out
sahf
out
shr
shr
sahf
out
sahf
(bad)
repnz
cmc
fdivr
pop
scas
out
fsin
ficomp
or
out
add
pop
fisttp
sahf
out
sahf
loopne
loope
loop
jns
out
in
in
out
jns
out
out
call
sahf
jmp
xor
out
in
xor
aaa
repz
sahf
out
hlt
inc
test
jns
test
int
jns
push
call
repz
scas
pop
int
out
cmp
into
fs
addr16
sahf
out
sahf
push
ins
or
and
sahf
out
jae
jbe
jns
jns
out
jl
jg
sahf
out
sahf
and
mov
sahf
out
mov
outs
xchg
out
sahf
out
xchg
jno
je
out
sahf
call
sahf
out
mov
out
sahf
out
lods
test
sahf
mov
mov
mov
jns
scas
mov
sahf
out
(bad)
sahf
out
sahf
retf
jmp
shr
(bad)
in
(bad)
jns
pop
jbe
xor
fist
out
sahf
loop
in
call
jns
pop
out
pop
icebp
out
sahf
out
hlt
pop
mul
loopne
sahf
cli
(bad)
std
gs
cs
add
repz
repz
jno
jae
repz
pcmpeqb
jbe
ja
iret
repz
jns
jp
repz
repz
jge
xchg
iret
repz
daa
sahf
sub
cmp
mov
mov
repz
repz
mov
mov
aas
mov
cmp
repz
ror
repz
repz
push
leave
iret
repz
push
rcr
pop
sar
repz
aam
(bad)
data16
repz
imul
cmp
outs
fdiv
jne
cmp
repz
idiv
jle
cmp
repz
cmp
add
xchg
or
xchg
add
sahf
call
sahf
out
cmps
xor
sahf
out
scas
inc
mov
sahf
out
sahf
mov
mov
sahf
out
ret
inc
mov
dec
iret
dec
ror
out
sahf
xlat
dec
fisttp
jns
out
jecxz
out
jmp
jns
out
out
push
repz
sahf
out
sahf
not
push
call
iret
sar
push
pop
push
or
cmp
repz
mulps
pop
iret
repz
pop
jo
jno
jb
iret
repz
jae
je
repz
repz
jbe
jl
jns
iret
cmp
sahf
out
sahf
sub
inc
sub
jns
out
sub
out
sahf
out
xor
pop
sahf
out
sahf
xor
popa
xor
jns
out
xor
out
sahf
out
cmp
jae
out
sahf
cmp
jns
jl
sahf
out
inc
jg
add
sahf
out
inc
mov
sahf
out
sahf
inc
mov
dec
xchg
jns
out
dec
xchg
dec
call
dec
mov
fs
xchg
dec
popw
add
add
cs
and
cmps
inc
inc
pop
jb
fiadd
dec
pop
dec
dec
pop
shl
xchg
pop
shr
xchg
imul
pop
(bad)
push
ja
scas
pop
mov
pop
inc
popa
or
(bad)
xlat
ja
das
outs
popa
jb
and
xchg
dec
scas
pop
cmps
gs
imul
dec
imul
(bad)
ja
add
leave
mov
imul
ja
xlat
scas
pop
jb
jne
jns
jns
xor
daa
add
dec
cs
fstp
mov
pop
inc
mov
pop
jb
and
mov
xchg
or
inc
ficom
addr16
jb
and
pop
mov
xchg
pop
pop
sub
push
jo
fiadd
gs
inc
xchg
addr16
das
push
push
xchg
pop
jb
pop
pop
daa
cs
imul
dec
cmps
push
in
cmp
jb
and
dec
outs
xchg
pop
sub
out
dec
scas
pop
shl
pop
dec
mov
ins
pop
dec
pop
ins
ins
fcom
ja
dec
mov
outs
pop
das
daa
daa
je
xchg
pop
or
iret
add
xchg
imul
add
push
push
or
push
pop
in
outs
in
jb
das
daa
daa
xlat
xchg
ja
ret
xchg
je
pop
das
add
push
in
fidiv
push
cmps
jae
scas
pop
mov
pop
push
inc
je
jbe
xlat
pop
push
jg
pop
das
xchg
pop
jb
add
push
dec
cs
or
or
jbe
or
pop
pop
das
in
or
mov
pop
mov
pop
mov
addr16
pop
and
push
jne
jbe
fiadd
popa
pop
dec
mov
or
outs
push
in
or
in
stos
sub
cs
or
or
and
pop
pop
adc
das
inc
dec
popa
dec
in
loop
das
inc
inc
push
daa
loop
imul
out
in
dec
scas
pop
addr16
imul
sub
das
out
pushf
test
cmps
xchg
add
cdq
add
mov
outs
pop
mov
loop
addr16
das
(bad)
loop
dec
scas
pop
out
clc
pop
mov
cmps
comiss
mov
ret
xchg
pop
inc
inc
gs
mov
inc
gs
dec
inc
imul
dec
inc
imul
fidiv
outs
pop
push
inc
xlat
scas
pop
mov
jb
push
in
fidiv
push
inc
jne
jb
leave
jae
es
jbe
xchg
pop
je
xlat
push
mov
xchg
inc
nop
pop
pop
loop
pop
test
das
pop
add
fiadd
pop
das
rol
das
pop
pop
jecxz
sub
jns
fistp
xchg
das
xchg
pop
xchg
in
dec
cs
lahf
movs
sub
mov
mov
pop
mov
mov
ins
and
scas
not
aas
mov
mov
leave
shl
jg
pop
das
and
add
push
das
sbb
ja
cs
pop
pop
mov
pop
xor
imul
mov
mov
add
pop
mov
inc
ss
adc
xor
xchg
or
aas
fidiv
fadd
pop
dec
cs
xchg
xchg
out
aaa
sbb
cs
cmp
push
ds
jmp
cs
and
inc
pop
and
pop
inc
or
fidiv
pop
sub
xchg
pop
dec
daa
outs
push
je
dec
cmps
pop
push
dec
das
push
xchg
imul
out
fidivr
pop
cs
adc
dec
pop
sbb
in
dec
and
das
cmp
xlat
mov
mov
in
ss
pop
cmp
in
dec
cs
sbb
dec
fnstcw
dec
dec
sahf
xchg
push
and
cmp
sahf
xchg
xlat
(bad)
mov
mov
pop
enter
mov
outs
and
pop
xor
or
ds
and
fxch
iret
imul
add
and
mov
pop
dec
push
repnz
jb
push
pop
inc
mov
jb
jae
jb
mov
jb
leave
xor
adc
jno
and
leave
push
popa
adc
and
pop
inc
pop
(bad)
in
dec
mov
inc
dec
aad
xor
aaa
fidiv
inc
xlat
fs
jb
and
xor
and
daa
movs
fs
test
pop
leave
in
add
gs
fiadd
pop
mov
das
inc
out
adc
cs
xor
xor
(bad)
test
das
es
addr16
imul
push
mov
in
sub
and
cs
dec
(bad)
or
pop
mov
lds
dec
pop
imul
pop
jb
and
xor
inc
ins
pop
das
jbe
cmps
dec
(bad)
ins
das
dec
mov
ins
sub
pusha
dec
ins
pop
das
pop
imul
sub
pop
pop
jb
mov
pop
outs
dec
outs
mov
das
xor
sub
sub
das
pop
or
mov
das
dec
mov
outs
das
pop
pop
fdiv
pop
jo
xlat
xchg
das
jb
pop
jb
and
push
loope
pop
jo
jb
push
mov
xlat
scas
out
pop
push
xlat
jae
push
lods
dec
mov
repnz
mov
add
pop
or
ins
mov
das
out
pop
mov
pop
ins
das
push
pop
je
and
and
or
jb
xor
jb
and
das
xor
push
(bad)
jne
mov
mov
dec
inc
fistp
mov
in
push
(bad)
jbe
das
and
xor
pop
push
mov
pop
leave
and
add
ret
xchg
pop
jb
pop
pop
push
in
fidiv
pop
inc
js
lods
sbb
xchg
pushf
cmp
scas
inc
jns
pop
add
cs
mov
xchg
xor
push
add
or
pop
jg
in
adc
inc
popa
pop
(bad)
mov
pop
das
or
pop
sub
das
pop
sbb
add
or
nop
add
fild
shr
jg
fild
nop
or
push
push
push
in
mov
cs
or
push
aad
sub
dec
outs
cs
gs
cs
or
or
pop
and
mov
das
pop
add
aaa
pop
inc
push
das
pop
addr16
fadd
gs
mov
xlat
cs
xlat
imul
in
fisubr
dec
das
outs
or
pop
dec
outs
and
mov
das
pop
add
or
ja
xor
das
dec
outs
outs
or
add
fisubr
pop
add
nop
or
add
or
add
ins
adc
pop
jb
imul
das
or
sbb
push
pcmpeqw
in
sbb
pop
add
inc
cs
or
or
in
mov
ins
add
mov
jbe
pop
pop
inc
jns
pop
jb
mov
das
or
add
adc
adc
rcr
outs
add
pop
pop
enter
add
or
and
xchg
dec
enter
xchg
xchg
xchg
sbb
add
add
mov
adc
inc
das
dec
xchg
imul
das
xchg
out
xchg
cs
or
xchg
xchg
xchg
in
mov
inc
cs
or
add
lods
das
mov
xchg
pop
rcl
sbb
xchg
xchg
xchg
xchg
pop
jb
mov
pop
and
add
sbb
xchg
cdq
cdq
pop
enter
cdq
cdq
jb
pop
and
pop
mov
pop
ins
das
dec
pop
cs
out
lahf
lahf
in
mov
cs
or
xchg
(bad)
sub
dec
ins
pop
ret
call
movs
pusha
pop
add
movs
pop
movs
xlat
pop
rol
leave
sbb
or
pop
add
and
push
pop
mov
test
mov
das
pop
add
inc
mov
imul
popa
sbb
and
inc
stos
dec
lods
das
daa
ja
and
add
mov
jb
inc
inc
in
cmp
das
adc
push
mov
add
add
ins
xchg
mov
mov
das
adc
aad
ficom
ja
(bad)
push
leave
push
jb
add
push
pop
and
fsubr
adc
add
pop
mov
add
jb
inc
or
adc
xchg
das
in
stos
pop
mov
pop
add
(bad)
xchg
pop
and
mov
jb
inc
push
in
sbb
adc
add
push
mov
add
inc
scas
pop
xor
push
pop
add
rcl
aaa
pop
pop
inc
pop
push
and
pusha
ja
pop
add
lods
inc
dec
xchg
pop
test
mov
(bad)
inc
pop
adc
push
or
xchg
mov
push
pop
mov
(bad)
xchg
add
sbb
stos
mov
ins
leave
mov
pop
add
(bad)
jb
and
lds
pop
(bad)
imul
(bad)
out
shl
movs
pop
add
mov
test
pop
adc
xlat
leave
enter
leave
leave
leave
mov
and
inc
mov
and
cmp
cs
ror
and
or
and
and
leave
inc
inc
cmps
dec
cmp
and
dec
fidiv
pop
fs
gs
dec
cs
cs
jnp
mov
xchg
mov
cs
cs
das
mov
mov
xor
xor
dec
cs
cs
pop
pop
mov
popa
fs
dec
cs
xchg
fsubr
call
leave
jne
js
pop
jb
and
xchg
imul
dec
cs
cs
cs
mov
dec
(bad)
(bad)
enter
cs
call
rcl
aad
pop
jb
fcomp
fcmovnu
mov
out
pop
lock
dec
cs
repnz
pop
aam
mov
imul
daa
or
sub
(bad)
cmp
and
xor
sbb
adc
dec
add
jmp
xchg
pop
ret
daa
xchg
outs
ins
fmul
xchg
pop
mov
push
rcl
rcl
jb
and
leave
and
fisub
(bad)
xchg
pop
jb
loopne
jecxz
xchg
pop
shl
jb
and
in
or
in
push
das
(bad)
(bad)
sub
push
and
add
ins
xor
add
push
xor
mov
ss
iret
repz
adc
adc
mov
scas
mov
inc
adc
push
mov
pusha
push
jmp
bound
arpl
and
sbb
push
gs
pushw
ins
in
xchg
push
push
lahf
leave
leave
leave
leave
icebp
repnz
leave
leave
leave
leave
cmc
div
clc
cmp
leave
stc
or
push
sbb
or
imul
jb
enter
or
outs
or
jb
out
call
jb
jmp
in
in
jb
out
out
hlt
(bad)
cmc
imul
in
idiv
out
xchg
xchg
xchg
push
(bad)
xchg
xchg
xchg
xchg
or
or
outs
xchg
xchg
xchg
or
or
dec
call
dec
dec
dec
in
in
out
out
cmp
cmp
or
or
cmp
cmp
or
or
cmp
cmp
or
out
jb
jb
call
jb
jb
in
out
out
out
sahf
ja
push
sbb
push
repnz
leave
dec
xchg
lahf
or
or
leave
leave
leave
or
or
mov
leave
leave
or
or
out
daa
daa
daa
call
daa
daa
daa
in
in
out
out
popf
pushf
sbb
ds
mov
imul
or
outs
or
push
push
push
push
push
push
push
push
in
xchg
and
push
push
push
mov
jb
push
pop
push
pop
push
rcr
rcl
pushf
pushf
pushf
pushf
aad
xlat
fsub
inc
sahf
pushf
fldenv
mov
and
enter
(bad)
(bad)
cmova
daa
movaps
sub
addr16
sbb
inc
fist
lahf
inc
adc
enter
adc
adc
adc
dec
adc
xchg
and
imul
adc
jb
enter
adc
outs
adc
inc
mov
adc
jb
sbb
repz
jae
je
jne
cmp
repz
sub
js
cmp
repz
cs
sub
cmp
jnp
jl
(bad)
out
push
das
sub
cs
push
ss
push
loopne
jns
xchg
or
add
add
jns
out
push
in
in
out
sahf
or
or
push
call
adc
adc
in
xchg
and
sbb
sbb
mov
jb
sbb
sbb
sbb
sbb
inc
sbb
jo
outs
je
xchg
and
jne
jbe
ja
out
fs
js
jns
add
cmp
add
add
cmp
cmp
test
cmp
push
cmp
sahf
out
push
ds
inc
push
out
sahf
out
pop
inc
pop
inc
sahf
out
sahf
pop
dec
pop
dec
pop
dec
jns
out
pop
dec
pop
push
pop
cmp
xchg
out
pusha
popa
and
bound
and
sbb
and
and
in
xchg
and
push
sahf
out
push
imul
sahf
out
ins
push
outs
push
cmp
jns
outs
and
jb
cmp
cmp
jne
cmp
cmp
ja
jns
cmp
cmp
jnp
jge
repz
cmp
jno
sub
xor
and
dec
dec
dec
dec
and
and
dec
dec
dec
dec
and
and
sahf
out
dec
and
pop
ins
pop
jns
out
outs
pop
outs
sbb
jns
out
jno
jb
cmp
aas
jne
cmp
cmp
ja
jns
cmp
cmp
jnp
jge
cmp
cmp
jg
add
cmp
cmp
xchg
cmp
mov
cmp
cmp
cmp
cmp
cmp
push
cmp
pop
jbe
cmp
repz
push
jns
repz
repz
jnp
jl
repz
push
jge
jle
jg
in
cmp
and
in
add
xchg
in
mov
in
nop
xchg
xchg
mov
jecxz
xchg
pop
inc
and
scas
and
enter
xor
and
cmp
xor
xor
xor
xor
xor
xor
xchg
xor
leave
leave
leave
leave
xor
xor
mov
xor
push
sbb
xchg
xchg
or
(bad)
(bad)
call
(bad)
(bad)
(bad)
stc
xchg
xchg
xchg
(bad)
(bad)
inc
add
jns
out
add
sahf
pop
or
pop
pop
es
repz
jle
or
iret
repz
adc
push
sub
cmp
int
repz
pop
adc
adc
adc
repz
pop
rcr
int
stc
daa
add
bound
repz
repnz
ins
ss
or
add
push
(bad)
(bad)
xor
nop
std
(bad)
call
repnz
sub
push
add
add
xchg
add
jmp
push
add
pop
mov
mov
or
push
or
or
or
in
(bad)
(bad)
dec
jl
or
push
mov
retf
push
fimul
call
adc
adc
jb
jp
push
sahf
cmp
mov
pop
adc
dec
dec
add
add
jmp
dec
sahf
out
mov
sbb
out
dec
jo
enter
pop
(bad)
in
cmp
lahf
ja
push
in
adc
xor
push
xor
xchg
outs
inc
leave
repz
mov
dec
leave
repz
push
push
bound
pushf
cmp
leave
mov
sahf
xchg
pop
mul
cmps
or
cmp
inc
jns
out
inc
dec
dec
dec
jo
jns
out
add
enter
repz
pushf
mov
inc
inc
leave
leave
leave
leave
dec
push
add
sahf
out
int
or
inc
dec
in
sahf
out
dec
push
push
mov
(bad)
int3
cmps
into
out
in
or
cmp
dec
sahf
aam
xor
xor
pop
daa
iret
repz
dec
mov
mov
mov
dec
outs
xchg
xor
lock
xchg
sbb
test
nop
push
xchg
sar
sahf
cdq
mov
pushf
cmp
leave
xor
aaa
cmp
sahf
out
pop
mov
mov
pop
push
push
rcl
rcr
mov
pop
sub
add
jbe
xor
mov
sti
pop
and
sahf
addr16
and
or
inc
dec
jns
out
dec
add
out
enter
cmp
out
mov
mov
repnz
retf
int3
out
into
iret
jae
repnz
ds
inc
dec
dec
jae
repnz
push
cmp
rol
enter
repnz
xlat
add
push
inc
pushf
cmp
repz
add
repz
(bad)
enter
cmp
xchg
(bad)
or
or
out
inc
inc
dec
dec
dec
jns
out
push
add
jmp
repz
in
rol
aas
jg
adc
xor
out
cmp
mov
mov
cmp
repz
add
ds
mov
push
(bad)
and
dec
cmps
sahf
out
jecxz
push
cmp
xchg
jne
push
inc
imul
ror
or
das
mov
sub
pop
es
je
dec
sahf
xchg
push
xor
dec
daa
push
jle
rol
cmp
or
add
mov
inc
dec
mov
jmp
and
loope
adc
movs
pop
dec
cmp
mov
mov
jmp
mov
ja
call
mov
xchg
sbb
icebp
scas
cmps
out
test
es
mov
push
jmp
xchg
xor
xchg
out
dec
mov
mov
adc
or
das
icebp
jmp
and
push
sub
sub
pop
push
test
iret
jg
sysret
or
out
outs
mov
sub
imul
sti
shr
add
add
sbb
inc
xchg
xchg
das
mov
add
xchg
xchg
xchg
push
or
or
xchg
xchg
xchg
push
adc
adc
xchg
xchg
xchg
push
sbb
sbb
xchg
xchg
xchg
push
and
and
xchg
xchg
xchg
sub
sub
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
cmp
cmp
aas
inc
inc
inc
xchg
xchg
xchg
xchg
inc
dec
dec
dec
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
pusha
bound
xchg
xchg
xchg
push
cmp
jbe
out
xor
jnp
jge
ja
cwde
jg
pop
xchg
mov
es
xchg
jno
mov
mov
inc
movs
(bad)
leave
in
sub
test
and
mov
mov
cmp
(bad)
retf
cmp
cmp
rcl
aad
cmp
cmp
(bad)
fsubp
cmp
cmp
loop
out
cmp
cmp
jmp
cmp
div
pusha
pushf
fadd
cld
(bad)
pop
daa
daa
daa
pop
pop
add
or
daa
daa
daa
or
adc
daa
daa
daa
adc
sbb
daa
daa
daa
sbb
and
daa
daa
daa
and
sub
daa
daa
daa
daa
sub
xor
(bad)
adc
sbb
mov
mov
cmps
stos
push
ror
leave
leave
repz
(bad)
leave
leave
leave
leave
loopne
in
leave
leave
leave
leave
call
mov
les
daa
pop
(bad)
in
in
fs
in
in
outs
jo
in
in
je
js
in
in
jl
or
xchg
xchg
in
in
xchg
cwde
call
mov
in
cmps
test
lods
in
in
scas
mov
mov
in
in
mov
loop
mov
jb
jb
retf
rcl
jb
jb
aam
fcomp
jb
jb
(bad)
loopne
jb
jb
in
call
jb
out
lock
clc
(bad)
push
adc
mov
pop
jb
jb
add
or
jb
or
adc
jb
adc
sbb
jb
sbb
and
jb
and
sub
jb
sub
xor
jb
xor
cmp
jb
cmp
inc
jb
jb
inc
inc
inc
dec
jb
jb
dec
dec
dec
push
jb
jb
push
push
push
pop
jb
jb
pop
pop
pop
pusha
jb
jb
bound
jb
jb
push
outs
jo
jb
jb
je
js
jb
jb
jl
xor
jb
test
jb
mov
jb
xchg
mov
jb
cmps
test
jb
jb
lods
scas
mov
jb
jb
mov
mov
jb
mov
jb
(bad)
(bad)
enter
jb
int3
into
rcl
jb
jb
aam
fcomp
jb
jb
(bad)
loopne
jb
jb
in
call
jb
out
lock
jb
hlt
idiv
or
adc
push
pusha
loop
dec
cmp
in
in
pop
pop
pop
pop
dec
adc
dec
scas
outs
sahf
xchg
cmps
imul
inc
aaa
sti
push
add
jns
out
pop
or
out
adc
out
dec
dec
sub
sub
sahf
xor
and
xchg
xchg
xchg
aaa
jp
stos
mov
enter
fcomip
clc
inc
add
leave
leave
leave
add
leave
leave
or
leave
leave
adc
leave
leave
sbb
leave
leave
and
leave
leave
sub
leave
leave
xor
pushf
pushf
pushf
cmp
inc
inc
repz
pushf
pushf
inc
inc
dec
dec
leave
leave
leave
leave
dec
dec
dec
push
leave
leave
leave
leave
push
push
push
pop
leave
leave
leave
leave
pop
pop
pop
popa
leave
leave
leave
leave
arpl
imul
ins
outs
jno
leave
leave
leave
jae
ja
pushf
cmp
leave
jl
add
mov
leave
xchg
cdq
fwait
sahf
mov
mov
leave
leave
rep
lods
mov
repz
leave
mov
mov
leave
leave
(bad)
leave
int3
into
leave
leave
leave
leave
rcl
aam
cmp
leave
leave
fcomp
(bad)
fistp
in
pushf
pushf
pushf
pushf
jmp
leave
leave
repz
stc
in
leave
leave
sti
std
inc
add
in
add
in
or
in
adc
in
sbb
in
and
in
in
das
xor
cmp
lahf
out
lods
nop
add
rcl
aad
(bad)
jb
fstp
loope
jb
jb
in
jmp
jb
out
out
repz
leave
leave
sbb
popa
arpl
leave
leave
leave
imul
outs
jno
jne
leave
leave
leave
ja
jnp
leave
leave
leave
leave
jg
lea
xchg
xchg
xchg
xchg
leave
leave
leave
leave
cdq
fwait
popf
lahf
leave
leave
leave
leave
mov
leave
leave
leave
test
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
leave
leave
leave
ret
int3
leave
leave
leave
leave
rcl
aad
leave
leave
leave
leave
(bad)
fstp
leave
leave
leave
leave
loope
in
leave
leave
leave
leave
jmp
leave
leave
leave
icebp
repz
stc
daa
and
add
add
pop
or
or
movups
adc
pop
sbb
sbb
pop
and
and
daa
sub
sub
das
xor
xor
aaa
cmp
cmp
aas
inc
inc
inc
daa
daa
daa
daa
inc
dec
dec
dec
daa
daa
daa
daa
dec
push
push
push
daa
daa
daa
daa
push
pop
pop
pop
daa
daa
daa
daa
pop
popa
arpl
daa
daa
daa
imul
outs
jno
jne
daa
daa
daa
ja
jnp
daa
daa
daa
daa
jg
add
mov
daa
(bad)
xchg
xchg
xchg
jb
repnz
mov
jb
cmps
test
jb
scas
mov
mov
jb
jb
mov
jb
mov
jb
jb
leave
retf
int
jb
jb
rcl
aad
jb
jb
(bad)
fnsave
jb
(bad)
jecxz
jb
jb
out
jmp
jb
jb
out
icebp
repz
call
push
pop
jns
out
adc
jns
out
inc
inc
push
push
sahf
out
sahf
pusha
addr16
add
xchg
mov
sahf
out
mov
mov
out
mov
rcr
xlat
loopne
repnz
in
out
div
jg
or
dec
dec
sahf
addr16
movlps
xor
xor
dec
cmp
sti
push
adc
or
pop
inc
xchg
lds
pop
jecxz
in
enter
push
xor
add
dec
fisubr
mov
cmp
repz
mov
daa
iret
repz
out
jp
lahf
addr16
pop
add
inc
push
enter
mov
xor
repz
xor
bnd
ds
sahf
lahf
mov
xor
xchg
add
xlat
lock
push
inc
pushf
cmp
repz
jno
aad
sahf
addr16
cld
adc
adc
ins
and
jns
add
cmp
leave
push
pop
popa
test
nop
xchg
test
mov
repz
cmp
mov
(bad)
cmp
repz
loope
icebp
add
test
adc
iret
repz
sub
xor
xor
cmp
pop
pop
cmp
jae
pop
jb
test
lea
cmp
rep
mov
mov
daa
daa
daa
iret
mov
cmp
sbb
test
adc
repz
repz
xor
xor
pushf
cmp
cmp
cmp
pop
popa
test
repz
xchg
cdq
call
lahf
mov
iret
rep
scas
mov
mov
add
adc
repz
sub
xor
repz
popa
test
nop
xchg
test
mov
iret
jae
cmp
fsubp
loope
cmp
sbb
out
push
adc
repz
repz
cmp
iret
repz
test
out
pushf
cmp
rol
push
sahf
out
sahf
xor
xor
sbb
out
dec
dec
lea
sahf
lahf
mov
jns
out
stos
lods
mov
out
dec
sahf
mov
rol
iret
xor
ffree
pop
inc
inc
dec
imul
mov
adc
and
jns
out
daa
sub
push
dec
repz
push
shl
add
pop
pop
sub
repz
test
adc
out
jns
push
push
or
dec
out
jns
dec
push
push
pop
pop
out
jns
pop
pusha
xchg
sahf
lea
in
sahf
mov
mov
jns
(bad)
rcl
fcomp
lock
jle
sahf
out
pop
adc
jns
out
dec
pop
mov
int
adc
push
outs
jbe
dec
repz
call
sahf
out
call
and
adc
scas
push
push
xor
iret
repz
mov
jl
out
xor
out
je
mov
ror
lods
push
xlat
(bad)
vmwrite
cmp
jo
jo
out
jl
cmp
pop
and
pop
pop
sub
cmp
repz
cmp
repz
jae
inc
inc
inc
inc
out
ds
mov
cmp
out
sahf
xchg
(bad)
lock
jo
jb
repz
cmp
jbe
call
jno
mov
out
(bad)
retf
xlat
call
add
and
out
lea
xor
mov
stc
aas
jmp
add
mov
adc
in
xor
xor
mov
arpl
daa
and
jnp
(bad)
fwait
leave
leave
enter
and
inc
jb
leave
leave
jge
sub
or
jb
jb
or
adc
jb
adc
sbb
mov
jb
ds
xor
pushf
pushf
cmp
cmp
pushf
inc
inc
pop
pop
dec
inc
sahf
pushf
pop
or
cmp
and
bound
add
enter
cmp
cmp
fs
and
sub
cmp
sbb
or
or
cmp
adc
adc
sbb
push
pop
aas
std
daa
daa
and
(bad)
cmp
cmp
daa
daa
daa
ds
inc
inc
daa
daa
daa
daa
pop
pop
pop
or
cmp
out
adc
cmp
jae
sub
das
cmp
daa
daa
iret
repz
inc
pop
mov
daa
mov
pushf
cmp
pop
add
in
pushf
pushf
ret
repz
or
sahf
out
sbb
push
aam
stc
xor
add
or
in
xchg
jo
or
push
xchg
push
test
leave
mov
push
sti
popa
adc
repz
push
in
aam
cmp
pop
fcmovu
add
push
pop
or
and
and
jns
out
xor
cmp
int
jns
inc
inc
dec
dec
add
add
jns
ds
dec
dec
push
sahf
out
sahf
push
push
push
pop
popa
push
push
(bad)
jle
push
add
pop
or
vmwrite
pop
and
cmp
cmp
sub
cmp
leave
leave
repz
lods
in
leave
leave
mov
test
jl
mov
pushf
cmp
sti
pop
xchg
push
call
pushf
cmps
scas
into
iret
mov
aam
icebp
jl
cmps
stc
push
or
or
and
mov
outs
es
bound
or
sbb
leave
leave
repz
pop
pop
loop
inc
ds
jmp
movs
enter
repnz
aas
push
fist
xchg
and
imul
repz
out
pop
pusha
daa
daa
daa
daa
test
mov
out
call
int
jns
rcr
in
je
jne
in
cmp
test
jns
ror
fstp
in
xor
out
out
std
(bad)
fwait
xor
inc
cmps
add
leave
leave
shl
jb
leave
mov
add
push
std
out
xchg
iret
(bad)
cli
or
add
sahf
out
sahf
add
pop
sbb
xor
dec
dec
dec
cmp
out
int3
iret
clc
xchg
cmp
repz
or
iret
repz
push
sbb
and
daa
sub
xor
repz
pushf
cmp
iret
repz
mov
cmp
rep
scas
int
rcr
aad
mov
cmp
or
and
sub
sub
cmp
call
es
dec
pushf
repz
add
xchg
push
mov
cmp
rol
push
cmp
sbb
jno
cmp
repz
(bad)
push
push
or
cmp
iret
repz
dec
push
cmp
jae
push
pop
pop
popa
addr16
jae
xchg
cwde
scas
mov
daa
jns
out
and
inc
sub
fwait
out
jae
repz
aad
lock
pushf
cmp
enter
adc
ss
cmp
repz
ds
nop
out
push
(bad)
imul
push
sub
jnp
hlt
cmp
jae
mov
retf
sar
gs
dec
(bad)
xor
jnp
repz
out
(bad)
nop
movs
mov
iret
mov
rol
(bad)
sahf
xchg
xchg
daa
in
call
icebp
jns
std
call
adc
or
and
popa
lds
test
scas
xlat
(bad)
fiadd
rcl
add
mov
add
es
adc
cmc
stc
pop
ret
adc
pusha
lods
jg
outs
adc
add
dec
xor
dec
inc
lahf
dec
adc
and
(bad)
out
icebp
mov
shl
cli
es
mov
mov
(bad)
test
es
mov
popa
in
iret
fistp
jne
add
shl
mov
push
xor
mov
repnz
push
push
outs
aas
sub
lods
das
(bad)
pop
push
adc
sub
lods
xor
movs
scas
dec
jbe
shl
in
in
xor
cmp
mov
hlt
pop
inc
outs
adc
sbb
jg
(bad)
aad
pop
pop
(bad)
jg
sbb
aam
mov
xor
inc
lods
adc
cs
inc
cli
(bad)
bound
dec
mov
pop
popa
outs
mov
pop
lock
lods
dec
arpl
iret
(bad)
inc
push
inc
pusha
and
bound
mov
das
and
add
and
wbinvd
in
pusha
fistp
fucomi
icebp
or
push
push
and
xor
inc
add
xchg
dec
test
cmp
dec
sahf
idiv
das
and
jp
mov
jecxz
lahf
add
and
outs
fstp
or
das
pop
aas
test
dec
test
nop
pop
mov
fisttp
mov
bound
inc
loopne
(bad)
(bad)
pop
pcmpgtd
imul
push
test
mov
push
(bad)
ficom
ins
jno
call
(bad)
sub
add
ss
mov
add
add
fadd
mov
paddq
paddsb
dec
and
dec
fiadd
aas
scas
mov
shl
iret
and
pop
sbb
into
xor
mov
(bad)
movs
and
lahf
adc
sbb
cli
inc
and
pop
xchg
ss
call
pusha
xchg
das
iret
fwait
cmp
ins
push
xor
lods
pop
aas
pop
cmp
imul
jg
stos
aam
mov
pop
push
dec
stc
xchg
cwde
je
sbb
cmp
test
sbb
or
rol
push
add
or
add
add
fnsave
cdq
jg
in
es
shl
cmp
pusha
xchg
xor
sar
xchg
push
sahf
test
xor
jle
mov
mov
or
pop
or
fistp
iret
jmp
mov
in
push
cmovb
cmp
sub
loop
add
out
(bad)
mov
or
sbb
daa
xor
inc
dec
das
movs
sbb
mov
shl
lahf
mov
test
outs
nop
das
cmps
add
adc
add
and
mov
xor
sub
xchg
das
or
ud0
cdq
sub
dec
call
fild
movsx
xor
pop
fistp
out
push
sub
(bad)
out
xor
inc
leave
leave
repz
dec
push
push
dec
rcr
xchg
mov
je
aaa
inc
jg
into
add
xor
push
sbb
and
add
(bad)
popa
loop
movs
pop
(bad)
jle
call
iret
rcl
imul
mov
xlat
cmps
imul
call
cmps
jmp
dec
push
mov
gs
inc
pop
sbb
int
dec
rcl
(bad)
jecxz
lock
mov
outs
es
xor
das
shl
retf
xor
into
rcl
add
add
out
pop
or
sbb
in
jns
push
push
push
push
dec
ror
pop
push
pop
cs
pop
adc
shl
rcr
out
(bad)
dec
cmp
dec
out
and
push
rcl
sub
or
pop
jle
shr
xor
xor
sub
dec
xchg
dec
dec
pop
sub
call
shl
fsubr
xchg
lahf
fiadd
(bad)
in
fs
cmovge
out
in
pop
imul
jbe
adc
mov
adc
xor
outs
jo
jb
daa
daa
daa
je
js
pop
xchg
es
jl
mov
pop
ror
mov
shr
cmps
imul
arpl
cmps
jmp
and
mov
pop
scas
pop
int
leave
leave
leave
enter
or
leave
leave
leave
leave
es
inc
inc
iret
leave
leave
leave
dec
pusha
bound
cmp
repz
jne
jns
repz
repz
loopne
jmp
xor
push
dec
dec
dec
dec
push
push
pop
pop
dec
dec
dec
dec
pop
pop
pusha
bound
dec
dec
imul
jae
jbe
in
sahf
out
jp
jge
in
in
sahf
lods
scas
mov
in
in
mov
mov
mov
in
in
(bad)
out
sahf
out
rcl
aam
sahf
out
sahf
xlat
(bad)
(bad)
hlt
and
xchg
dec
test
outs
scas
push
push
sub
xor
stos
pop
cwde
iret
pop
daa
inc
scas
pop
mov
pop
pop
and
adc
loope
movaps
leave
leave
pop
jnp
stos
ret
leave
mov
shl
inc
xor
xor
jle
sub
test
dec
cmps
outs
adc
dec
shr
fbstp
sub
scas
adc
or
jmp
shr
out
scas
inc
(bad)
pop
movs
and
(bad)
mov
es
add
daa
xor
or
or
push
pop
jb
cmovno
movs
sub
pop
pop
pop
or
pop
out
ffreep
dec
ds
pop
lds
inc
das
dec
data16
outs
pop
cmp
push
cmps
iret
out
cmps
push
pop
popf
fist
pusha
movs
imul
cmps
out
sub
aad
push
add
dec
dec
leave
dec
shl
push
pop
adc
leave
test
(bad)
int
int
jne
jecxz
out
lea
xor
dec
out
ds
lods
push
jle
dec
xor
or
nop
dec
push
cmp
inc
imul
out
outs
push
test
xchg
in
push
pop
int
test
test
add
and
inc
add
in
and
int
push
and
inc
outs
mov
iret
push
or
jle
mov
dec
adc
xor
push
jg
push
pop
push
aas
jno
mov
nop
test
pop
pop
or
add
add
pop
add
xlat
or
inc
(bad)
mov
sbb
mov
pop
jmp
aas
mov
bound
push
adc
adc
and
mov
movs
lahf
scas
mov
or
jmp
and
jnp
outs
nop
test
aas
dec
lods
movs
out
mov
cmps
aas
mov
lods
add
add
(bad)
loopne
sbb
imul
shr
pop
cmp
jnp
outs
sbb
pop
sbb
cmp
aaa
add
dec
out
adc
inc
arpl
mov
inc
fs
sbb
out
jmp
inc
popw
sbb
jnp
mul
sbb
pop
sbb
sbb
dec
or
pop
sahf
into
mov
imul
dec
ins
cmps
jae
out
sbb
pop
sbb
(bad)
mov
outs
pop
sbb
div
pop
sbb
pop
sbb
cmp
sbb
pop
sbb
out
push
je
sbb
pop
sbb
sar
sbb
pop
div
sbb
pop
sbb
pop
jnp
jnp
sbb
pop
jecxz
test
fld
bound
inc
pop
arpl
inc
pop
fwait
jge
outs
sbb
sbb
sbb
data16
inc
pop
sbb
push
push
ret
and
fbstp
imul
pop
ins
sbb
mov
dec
pop
outs
sbb
outs
jge
outs
neg
dec
pop
jo
push
pop
jno
push
data16
fwait
pop
jb
push
pop
jae
push
pop
je
fnstenv
sti
sbb
sbb
jbe
push
mov
test
ja
push
pop
js
pop
pop
jns
in
fwait
jge
pop
pop
jp
pop
pop
mov
mov
jge
pushf
add
rcl
mov
sahf
into
cmp
ret
sbb
jecxz
sbb
in
out
jmp
in
sbb
out
jnp
div
out
sbb
call
popf
sbb
jmp
cmps
jae
out
sbb
jmp
sbb
jb
and
or
pop
int
sar
pop
gs
out
pop
div
sbb
lock
sbb
icebp
pop
cmp
shl
pop
sbb
repz
out
into
pop
sbb
hlt
pop
sbb
cmc
sar
(bad)
test
fdiv
fdivr
pop
sbb
stc
pop
sbb
popf
jnp
idiv
pop
sbb
sti
pop
sbb
out
into
cmp
std
pop
sbb
mov
fdivrp
pop
add
sbb
adc
mov
rol
sbb
pop
loop
mov
neg
ret
sbb
pop
in
les
in
fwait
pop
in
lds
out
mov
mov
mov
jmp
test
jmp
pop
adc
dec
ds
int
fnstenv
out
sbb
pop
out
sbb
pop
lock
outs
neg
rol
icebp
sbb
pop
repnz
data16
fwait
pop
repz
pop
hlt
sbb
pop
cmc
mov
aad
neg
(bad)
pop
clc
sbb
mov
test
stc
sbb
pop
cli
sbb
pop
sti
fucomip
fwait
jge
fild
cld
sbb
pop
std
sbb
out
aaa
sti
popw
(bad)
sbb
pop
call
js
pop
ja
xchg
mov
push
or
add
sahf
jnp
mov
and
push
test
xchg
push
push
or
pop
bound
and
push
or
pop
sbb
mov
push
or
pop
in
jnp
mov
or
pop
js
mov
push
push
or
pop
in
cmp
and
pop
fidiv
lods
shl
push
adc
cmp
pop
xor
ja
or
pop
sub
add
cmp
mov
mov
sbb
enter
sub
sbb
pop
cmp
and
push
sbb
sbb
jp
mov
pop
pop
cmp
out
cmp
and
pop
jecxz
out
mov
and
pop
mov
xor
pop
fidiv
and
or
jnp
lods
cmc
pop
int3
xor
mov
sub
aas
sbb
or
mov
fisubr
pop
shl
and
push
sub
sub
mov
cs
pop
cs
aas
xchg
enter
jne
test
pop
xor
sub
cdq
xor
xor
mov
xchg
mov
fsub
pop
mov
xor
pop
sub
add
pop
retf
iret
or
and
pop
in
cmp
and
pop
fidiv
mov
xor
cmp
jle
and
adc
or
pop
mov
and
mov
mov
and
push
inc
or
pop
mov
and
push
inc
or
pop
mov
add
dec
sbb
test
or
enter
dec
pop
mov
and
push
dec
or
pop
mov
cmp
mov
or
pop
mov
inc
mov
push
or
pop
mov
neg
push
or
pop
icebp
fidiv
mov
and
pop
fidivr
sbb
push
or
pop
jnp
mov
push
pop
or
pop
out
mov
and
out
or
inc
xor
mov
inc
xor
push
pop
or
pop
jb
pop
loop
out
push
pusha
or
pop
push
xor
push
bound
pop
push
and
cmp
or
pop
mov
fcom
xor
pop
jnp
cmp
push
push
fcom
push
xor
cmp
dec
xor
and
ins
pop
dec
xor
push
outs
or
pop
dec
xor
jnp
and
pop
dec
xor
push
jb
jae
adc
jnp
cmp
or
pop
mov
fcom
xor
pop
pop
into
cmp
push
push
xchg
cmp
call
out
mov
and
out
or
fdiv
and
mov
add
and
push
jg
mov
cmp
pop
add
cmp
pop
enter
out
dec
and
pop
cmp
mov
push
xchg
out
test
or
and
push
mov
mov
push
mov
pop
mov
addr16
pop
out
scas
xchg
xchg
pop
sbb
xchg
pop
xchg
xchg
pop
int3
jmp
and
pop
das
in
cmc
push
js
add
dec
xchg
test
cmc
jp
pop
xchg
pop
pop
xchg
push
js
test
call
pop
pushf
outs
outs
popf
or
movs
add
add
lahf
jnp
mov
jl
mov
sub
or
jae
mov
add
iret
mov
xor
in
mov
and
adc
and
and
cmps
repnz
in
and
mov
and
push
scas
mov
jmp
push
mov
mov
sub
mov
cmp
and
pop
neg
sbb
(bad)
xor
not
xchg
mov
out
or
mov
out
mov
and
add
les
mov
pop
fstp
(bad)
pop
sbb
or
pop
mov
pop
add
leave
mov
fsubrp
pop
sbb
or
pop
outs
out
sbb
ds
pop
sbb
mov
into
pop
xor
and
push
iret
or
pop
xor
and
push
ror
pop
xor
sbb
mov
or
pop
xor
add
aad
(bad)
pop
xor
neg
xlat
or
pop
hlt
fidiv
dec
xor
pop
fidivr
or
fisttp
pop
jp
mov
push
fstp
or
push
fimul
pop
dec
inc
fnstcw
xor
pop
xchg
mov
and
pop
fnstcw
or
xor
pop
mov
xor
jnp
or
call
fldl2t
pop
xor
and
mov
xor
and
push
in
or
pop
xor
or
or
pop
xor
pop
js
xor
mov
add
sbb
repz
mov
retf
mov
sbb
or
pop
push
cmp
add
xor
sar
mov
ficomp
stc
pop
inc
addr16
mov
jp
and
push
cld
or
pop
jp
mov
push
(bad)
call
dec
jp
and
ja
popw
sub
and
test
cmp
sahf
jnp
mov
and
mov
jp
and
fimul
or
pop
jp
and
push
or
pop
jp
aaa
sar
and
pop
jp
push
jp
mov
sysret
jp
out
cmp
adc
pop
call
xor
pop
mov
xor
pop
neg
and
pop
fidiv
mov
sbb
jnp
or
and
mov
jp
and
sar
sbb
test
or
pop
jp
and
push
mov
push
jp
mov
push
and
and
push
pusha
xor
pop
mov
xor
sahf
jnp
loope
jb
and
mov
push
xor
fisubr
sub
aaa
xor
jnp
cs
pop
mov
mov
xor
sub
add
call
xor
pop
xor
neg
and
sub
jnp
mov
pop
mov
and
push
cmp
out
jnp
out
data16
dec
aas
jle
pop
inc
sbb
(bad)
jnp
jg
pop
inc
dec
inc
pop
mov
test
push
inc
call
out
mov
sbb
pop
sbb
pop
add
inc
pop
and
or
pop
xor
push
dec
or
pop
xchg
aaa
fidivr
xor
pop
xchg
(bad)
jnp
mov
or
pop
fucomip
mov
push
push
sbb
pop
push
fdivp
sti
jle
ins
sub
push
sbb
pop
push
sbb
mov
sbb
ficom
push
push
push
sbb
push
pop
sbb
push
pop
and
pop
loop
push
push
pusha
sbb
fistp
loop
push
arpl
rol
sbb
cmps
pop
push
sbb
std
ficom
in
push
imul
sub
outs
sbb
jle
mov
sub
jb
inc
mov
jne
sahf
and
idiv
jge
fs
sbb
ficomp
loop
push
sbb
push
mov
iret
loop
and
mov
call
outs
call
sbb
dec
mov
push
or
mov
ret
pop
inc
or
daa
cdq
add
jo
jno
iret
jge
pop
push
jb
jae
out
mov
and
cmp
cmp
and
out
sti
sbb
add
jl
inc
pop
jge
inc
mov
xchg
pop
cld
adc
pop
sbb
scas
cmp
sbb
xor
sbb
out
out
mov
add
cdq
pop
jecxz
imul
or
fdivp
fidiv
pop
sbb
pop
sbb
repz
fidiv
pop
sbb
mov
mov
call
iret
jnp
rcr
mov
iret
jnp
jnp
sbb
mov
pop
sbb
rol
jnp
sbb
mov
les
movs
lds
sbb
mov
cmps
mov
mov
test
(bad)
idiv
retf
pop
js
loop
push
leave
mov
sub
mov
push
scas
sbb
pop
cmp
mov
lds
adc
icebp
sahf
push
mov
ins
push
mov
jnp
out
pop
ins
push
mov
ins
push
mov
addr16
sahf
lds
mov
ins
push
push
out
pop
mov
mov
imul
lds
ins
push
mov
sub
test
add
mov
push
mov
sbb
mov
iret
ins
push
rcr
push
rcr
dec
icebp
sub
push
ret
iret
bound
add
js
add
cmp
sbb
mov
iret
add
retf
mov
sub
push
retf
sbb
iret
jmp
sbb
push
mov
sbb
push
iret
or
pop
xor
dec
outs
or
rol
fwait
aad
dec
sti
shl
(bad)
pop
or
neg
pop
and
jnp
xor
pop
js
mov
push
fmul
adc
xor
neg
pop
jecxz
shl
and
jnp
mov
and
(bad)
test
push
out
lods
icebp
fsubp
or
pop
shl
and
push
out
out
shl
mov
jnp
and
pop
shl
(bad)
js
mov
jmp
rcr
out
cmp
in
or
pop
jecxz
out
shl
and
pop
hlt
cmc
fcomp
xor
sbb
btc
pop
rol
stc
add
hlt
cmp
jecxz
imul
clc
pop
jnp
fcomp
ins
and
xchg
not
js
cli
adc
pop
or
jnp
cmp
out
jnp
sub
ja
jl
data16
cs
push
mov
push
pop
sbb
push
pop
sbb
jns
pop
not
adc
add
push
pop
sbb
push
pop
sbb
jns
jns
push
pop
sbb
pop
pop
sbb
jns
jns
pop
pop
sbb
pop
pop
sbb
jns
jns
pop
pop
sbb
pop
sbb
pop
pop
sbb
pop
pop
sbb
jns
jns
pop
pop
sbb
xor
sbb
jns
jns
xor
sbb
xor
sbb
mov
add
sbb
pop
sbb
xor
pop
sbb
mov
pop
sbb
cmp
sbb
mov
pop
sbb
cmp
sbb
mov
pop
sbb
pop
sbb
cmp
pop
sbb
mov
pop
sbb
inc
pop
sbb
mov
pop
sbb
inc
pop
sbb
mov
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
mov
pop
sbb
dec
pop
sbb
mov
pop
sbb
dec
pop
sbb
mov
pop
sbb
pop
sbb
dec
pop
sbb
dec
pop
sbb
shl
add
out
jnp
add
xor
dec
push
xor
addr16
sahf
lds
xor
dec
push
push
out
pop
mov
xor
lds
sbb
aaa
sbb
pop
mov
sbb
cmp
sahf
lds
dec
push
cmp
dec
push
cmp
addr16
sbb
cmp
dec
lds
out
push
cmp
sbb
addr16
sahf
push
aas
sbb
inc
sbb
out
pop
dec
push
inc
sbb
inc
sbb
sahf
lds
inc
sbb
push
out
pop
mov
inc
sbb
sahf
lds
inc
sbb
inc
sbb
pop
mov
sbb
dec
sbb
push
dec
sbb
dec
pop
mov
push
dec
sbb
jnp
out
push
dec
sbb
dec
sbb
addr16
sahf
push
dec
sbb
bswap
jmp
scas
sub
push
sbb
push
push
mov
sub
push
sbb
scas
test
add
push
sbb
jp
jmp
push
push
sbb
push
push
sbb
mov
pop
sbb
push
pop
sbb
jmp
scas
sub
pop
sbb
push
pop
mov
sub
pop
sbb
jmp
scas
test
pop
sbb
repz
sub
pop
sbb
push
pusha
or
iret
mov
xor
sar
pop
mov
and
push
fs
pop
mov
add
push
data16
pop
lock
mov
and
pop
jnp
mov
push
push
imul
neg
mov
and
add
or
pop
mov
and
push
outs
or
pop
mov
mov
push
jo
jno
inc
aaa
fidivr
xor
pop
inc
sar
xor
pop
out
cmp
and
pop
mov
xor
sahf
jnp
loopne
mov
and
(bad)
test
mov
fidivr
jl
jge
cmp
mov
push
jle
jg
sub
add
out
mov
or
pop
sub
add
push
mov
pop
fsubrp
fidivr
xor
pop
sub
push
jp
mov
or
pop
adc
out
cmp
nop
or
pop
mov
xor
pop
neg
and
pop
fidiv
(bad)
in
and
jnp
mov
and
mov
in
and
(bad)
jnp
fwait
pop
in
and
push
pushf
or
pop
in
and
push
sahf
or
pop
in
jnp
mov
or
pop
in
outs
mov
mov
(bad)
neg
movs
or
pop
icebp
fidiv
repnz
pop
fidivr
mov
test
test
aaa
repnz
pop
out
mov
and
out
or
inc
xor
mov
inc
xor
push
mov
mov
inc
add
jnp
xor
pop
jnp
mov
push
mov
mov
sub
mov
and
pop
sub
add
pop
fidivr
mov
mov
mov
and
out
or
jp
and
mov
loopne
and
push
ror
dec
mov
ret
dec
and
push
ret
or
pop
adc
pop
loop
out
push
lds
pop
adc
neg
(bad)
or
pop
fidivr
sbb
leave
or
pop
out
mov
and
out
cmp
jnp
loopne
int
into
pop
(bad)
xor
push
iret
sbb
sahf
jnp
loop
cld
xor
mov
or
pop
cld
xor
push
aam
aad
cld
xor
out
mov
xlat
pop
jecxz
out
inc
xor
pop
mov
xor
pop
neg
and
pop
fidiv
(bad)
repnz
jnp
mov
and
mov
repnz
(bad)
jnp
jecxz
repnz
push
in
in
repnz
push
out
out
repnz
mov
or
pop
repnz
neg
and
pop
repnz
neg
in
or
pop
icebp
fidiv
repnz
pop
fidivr
mov
lock
pop
out
mov
and
mov
sub
add
neg
sbb
pop
add
and
out
add
xor
fdivrp
or
pop
xchg
xor
sar
and
pop
adc
or
mov
std
pop
call
xor
pop
loopne
fstp
xor
scas
sahf
jnp
mov
and
mov
xor
fiadd
add
push
push
mov
pop
pop
xor
push
or
pop
xor
push
or
pop
xor
call
or
or
mov
push
or
pop
mov
and
pop
hlt
fidiv
xor
pop
fidivr
or
adc
adc
sub
or
pop
out
mov
and
cmp
xor
inc
out
or
pop
xor
mov
xor
push
push
or
pop
xor
push
and
pop
xor
push
and
pop
cs
push
and
and
iret
mov
or
pop
jp
mov
push
xor
pop
sahf
neg
cwde
cli
adc
sbb
arpl
sbb
pop
sbb
test
sbb
addr16
neg
push
sahf
neg
push
sbb
imul
cmp
pop
sbb
test
sbb
outs
sahf
neg
jo
sbb
sahf
neg
jb
sbb
sahf
neg
je
sbb
sahf
neg
jbe
sbb
sahf
neg
js
sbb
sahf
neg
jp
sbb
sahf
neg
jl
sbb
sahf
neg
jle
sbb
sahf
neg
add
push
sbb
sbb
sahf
neg
test
sbb
lods
icebp
sahf
test
inc
push
out
pop
pop
cmc
out
bound
out
sahf
lds
arpl
out
fs
pop
mov
sbb
push
sbb
push
addr16
push
push
sbb
push
imul
out
push
push
out
imul
mov
ins
sbb
push
ins
sbb
out
pop
out
outs
sbb
push
outs
sbb
sahf
(bad)
jo
out
push
out
pop
mov
jb
out
sahf
lds
jae
out
je
out
pop
mov
sbb
push
jbe
sahf
lds
out
ja
out
js
mov
push
jns
out
jnp
out
push
jp
out
jnp
out
addr16
sahf
push
jl
out
jge
jnp
out
pop
out
jle
out
jg
addr16
sahf
(bad)
sbb
push
push
out
pop
mov
sbb
icebp
sahf
lds
sbb
push
test
out
pop
mov
sbb
push
xchg
sub
js
out
xchg
jns
adc
adc
les
fsubr
push
jns
retf
add
mov
add
movs
add
out
cmp
movs
add
repnz
push
cmps
pop
pop
test
repz
sahf
or
test
jns
stos
or
stos
or
dec
in
sub
out
cmp
scas
push
push
scas
sahf
cmps
repnz
cmpxchg
adc
adc
mov
sub
push
jns
mov
adc
adc
adc
test
pop
push
sahf
cmps
repnz
mov
sahf
retf
sbb
iret
push
mov
test
mov
cmp
out
push
mov
sahf
cmps
shl
shl
jns
retf
and
ret
in
sub
and
les
fld
dec
lds
sbb
cmps
pop
jge
arpl
add
in
jnp
mov
and
pop
out
mov
and
cmp
push
xor
or
or
pop
push
xor
mov
push
xor
push
or
pop
push
xor
push
or
or
lock
push
push
or
pop
push
pop
fidivr
xor
pop
push
ret
mov
or
pop
js
mov
push
adc
adc
pop
push
xor
pop
mov
xor
neg
jnp
pop
push
xor
jnp
mov
and
test
or
pop
push
xor
ficomp
or
pop
push
xor
push
and
pop
push
xor
ret
and
pop
push
xor
out
mov
and
cmp
es
pop
loopne
out
push
xor
pop
neg
and
pop
jnp
or
push
sub
mov
pop
xor
push
cs
pop
xor
loope
out
push
xor
pop
rol
push
xor
pop
lock
clc
xor
pop
fidivr
mov
ss
pop
jnp
mov
push
cmp
pop
out
mov
and
cmp
clc
xor
or
or
pop
clc
xor
mov
clc
xor
push
inc
or
pop
clc
xor
push
inc
or
pop
clc
xor
push
inc
or
pop
clc
pop
fidivr
xor
pop
clc
ret
mov
or
pop
js
mov
push
dec
or
pop
out
cmp
and
pop
mov
xor
neg
jnp
pop
clc
xor
jnp
mov
and
test
or
pop
clc
xor
ficom
pop
clc
xor
push
push
or
pop
hlt
xor
js
mov
pop
pop
jecxz
out
hlt
xor
pop
neg
and
pop
jnp
or
push
pop
or
aaa
xor
pop
pop
hlt
xor
push
pusha
or
pop
cld
xor
push
bound
pop
xor
mov
fs
pop
lock
xor
pop
jnp
mov
push
push
test
push
push
sbb
out
or
pop
xor
push
ins
or
pop
xor
lock
push
outs
or
pop
sar
xor
pop
out
cmp
and
pop
neg
sbb
xor
outs
add
push
mov
or
pop
ds
sar
push
js
jns
jl
add
mov
jnp
loopne
out
xor
pop
neg
and
pop
jnp
or
push
or
add
add
sar
or
out
xor
jecxz
out
push
test
sahf
jnp
and
pop
fidivr
or
mov
pop
out
mov
and
out
add
push
xor
mov
push
xor
push
mov
pop
push
add
jnp
xor
pop
js
mov
push
xchg
or
pop
mov
xor
sahf
jnp
loopne
push
xor
inc
adc
adc
dec
or
out
xchg
into
addr16
ja
fcmovnbe
popf
or
jns
mov
mov
popa
xchg
mov
test
adc
call
fwait
mov
push
cmp
dec
sub
sahf
cmp
pop
mov
jae
mov
or
pop
mov
cmp
movs
pop
mov
fidivr
cmps
or
pop
mov
iret
and
pop
mov
mov
stos
pop
mov
xor
pop
loop
out
mov
or
pop
mov
xor
pop
neg
and
pop
fidiv
mov
or
jnp
cmp
and
mov
mov
mov
mov
neg
or
pop
mov
out
cmp
pop
mov
out
push
mov
xor
neg
and
pop
mov
xor
pop
icebp
fidiv
mov
or
pop
fidivr
cmp
(bad)
or
pop
out
mov
and
out
adc
js
and
mov
js
and
push
int3
or
pop
sub
add
push
into
or
pop
pusha
xor
js
mov
rol
loopne
out
bound
and
pop
neg
and
pop
jnp
sbb
push
(bad)
or
ja
(bad)
pop
bound
and
push
fmul
pop
bound
pop
loopne
out
push
fimul
pop
bound
and
pop
fidivr
sbb
fimul
pop
out
mov
and
out
add
bound
and
mov
bound
and
push
in
in
bound
fidivr
xor
pop
js
mov
push
call
out
add
and
sahf
jnp
loopne
bound
and
xor
in
pop
bound
and
push
out
or
pop
bound
add
mov
icebp
pop
loopne
out
bound
and
pop
neg
and
pop
jnp
sbb
push
test
add
test
add
push
clc
or
pop
bound
pop
loopne
out
push
cli
or
pop
bound
and
pop
fidivr
sbb
dec
pop
lea
and
test
pop
pop
sbb
pop
pop
idiv
mov
pop
pop
add
or
pop
add
sti
jge
out
or
pop
add
push
sbb
pop
pop
mov
sbb
pop
pop
mov
sahf
jnp
ret
(bad)
add
ret
(bad)
add
ret
fdivr
cmp
(bad)
add
ret
jae
mov
ret
(bad)
add
ret
(bad)
idiv
jle
add
adc
sbb
pop
adc
sbb
pop
idiv
mov
pop
pop
adc
sbb
pop
adc
sahf
jnp
out
sbb
pop
adc
(bad)
mov
imul
(bad)
mov
neg
(bad)
mov
add
(bad)
mov
sub
pop
and
std
mov
pop
and
sub
pop
and
sub
jge
out
test
pop
and
es
out
sti
sbb
pop
pop
daa
sbb
pop
pop
ret
(bad)
sahf
jnp
mov
add
ret
(bad)
add
cmp
add
ret
(bad)
add
out
mov
add
ret
(bad)
add
sti
jle
jae
(bad)
add
xor
cmp
pop
xor
std
mov
pop
xor
cmp
pop
xor
cmp
jge
out
test
pop
xor
ss
out
sti
sbb
pop
pop
aaa
sbb
pop
pop
ret
(bad)
sahf
jnp
mov
add
ret
(bad)
add
cmp
add
ret
(bad)
add
out
mov
add
ret
(bad)
add
sti
jle
jae
(bad)
add
inc
jmp
sbb
mov
pop
inc
sbb
pop
inc
sbb
jnp
out
test
pop
inc
sbb
pop
(bad)
out
cmp
stos
(bad)
mov
neg
jnp
add
(bad)
push
nop
jne
mov
pop
or
inc
je
add
mov
adc
pop
pop
pop
push
ss
add
movs
adc
fcomi
mov
pop
push
arpl
rcr
sbb
into
mov
pop
pop
pop
push
arpl
movs
xor
adc
pop
pop
pop
cmp
mov
sub
push
pop
sbb
mov
add
sub
pop
popa
sbb
pop
bound
push
pop
arpl
idiv
jle
imul
sbb
sbb
idiv
mov
outs
pop
pop
sbb
pop
mov
(bad)
add
ret
(bad)
add
neg
add
ret
(bad)
add
ret
fdivr
cmp
(bad)
add
ret
mov
add
ret
(bad)
add
jo
mov
jge
jno
mov
enter
fcomip
sti
jle
leave
pop
pop
je
retf
jne
retf
out
idiv
mov
ficomp
pop
ja
fistp
pop
out
sti
jge
js
clc
pop
pop
jns
stc
pop
pop
jp
idiv
jle
jmp
pop
jl
cli
pop
pop
or
fistp
sti
pop
pop
sbb
lea
sbb
adc
mov
sub
adc
mov
int
adc
mov
imul
sub
push
mov
inc
call
adc
xchg
aaa
rol
mov
pop
mov
add
push
or
xor
add
xor
shl
or
xor
imul
push
pop
pop
sub
nop
aaa
shr
and
cwde
xchg
sub
push
cdq
xchg
sub
in
xor
adc
call
pop
adc
fwait
xchg
sub
jns
int
push
pushf
xchg
sub
imul
adc
call
daa
adc
lahf
push
adc
inc
cwde
pop
nop
sub
mov
sub
imul
fwait
jno
adc
pop
xor
pushf
ja
sub
push
or
popf
jge
sub
add
mov
iret
movs
test
das
mov
int
push
test
sub
mov
sbb
test
push
call
arpl
stos
shr
inc
movs
sub
lods
xchg
xchg
aaa
movs
sub
push
lods
lea
mov
push
scas
cmps
pusha
movs
pop
in
addr16
scas
test
cs
test
push
xor
imul
test
xor
rol
lods
ja
ins
lods
push
jo
mov
sbb
mov
outs
scas
mov
outs
sti
jge
pop
mov
mov
mov
and
mov
jo
js
add
push
ss
adc
mov
mov
lods
adc
popf
or
jo
jbe
mov
add
sbb
jp
cmp
pop
add
pop
aaa
sar
pop
mov
mov
pop
push
dec
push
push
jae
cwde
mov
rol
(bad)
je
retf
movs
pop
in
ss
mov
call
scas
adc
pop
fimul
(bad)
xlat
adc
mov
(bad)
add
das
ja
fld
jp
and
test
movs
jmp
movs
ja
je
jmp
pop
dec
dec
jecxz
jle
out
mov
test
sbb
pop
pop
rcr
je
lods
ss
sbb
adc
dec
dec
push
scas
outs
jecxz
sub
fcmovnbe
inc
adc
rcr
retf
cmp
out
xor
add
xchg
ficom
aam
pop
adc
cli
es
pop
scas
aam
in
sti
jge
loope
jmp
(bad)
dec
aaa
sbb
fnstcw
dec
ja
and
rcr
mov
or
pop
out
fld
or
adc
pusha
ins
shl
sbb
xlat
(bad)
loopne
stos
(bad)
loope
sbb
jp
xchg
adc
fsubrp
out
pop
sbb
in
sbb
xchg
aam
adc
sbb
stc
cmp
adc
cld
hlt
sub
mov
xchg
ins
jmp
adc
pop
(bad)
add
das
jp
cmp
adc
sbb
adc
sbb
jl
fidivr
jmp
pop
sbb
add
mov
and
sub
fld
and
mov
sbb
sbb
add
push
pusha
or
pop
idiv
sbb
pop
idiv
pop
sbb
idiv
pop
sbb
pop
idiv
pop
sbb
pop
idiv
pop
sbb
pop
idiv
pop
sbb
idiv
pop
sbb
pop
pusha
mov
mov
test
js
loopne
stos
push
jno
stos
push
xor
fidiv
stos
push
jae
stos
js
loopne
push
je
stos
push
jne
test
sbb
loopne
sub
jns
fidiv
js
stos
push
jp
stos
loopne
xor
jnp
stos
push
jl
fidiv
js
stos
push
jge
stos
push
jle
cmp
push
jg
stos
push
cmp
ja
or
pop
sub
add
inc
push
imul
pop
in
out
out
pop
sbb
out
out
rol
sbb
out
out
aad
sbb
mov
sbb
out
out
fld
sbb
fiadd
sbb
out
out
fild
sbb
fadd
sbb
out
out
fld
sbb
fiadd
sbb
out
out
fild
sbb
loopne
sbb
out
out
loope
sbb
loop
sbb
out
out
jecxz
sbb
in
sbb
out
out
in
sbb
out
sbb
out
out
out
sbb
call
loope
mov
add
jae
sbb
loope
xchg
push
rcr
scas
push
aam
fidiv
iret
scas
push
aad
scas
push
(bad)
sbb
push
xlat
sbb
iret
loope
scas
push
fstp
scas
push
xchg
sbb
ficomp
scas
push
fistp
scas
js
loope
push
fcomp
scas
push
fstp
neg
jae
push
ficomp
scas
push
fistp
iret
loope
xchg
push
loope
fidiv
sbb
loope
xchg
push
jecxz
scas
push
in
fidiv
iret
scas
push
in
scas
push
out
cmp
push
out
scas
push
call
sbb
push
pop
xchg
push
mov
sub
jns
adc
pop
sbb
xor
sbb
jns
jns
xor
sbb
pop
sbb
xor
pop
sbb
jns
jns
aaa
pop
sbb
cmp
sbb
jns
jns
cmp
sbb
cmp
sbb
jns
jns
cmp
sbb
pop
sbb
cmp
pop
sbb
jns
jns
aas
pop
sbb
inc
pop
sbb
jns
jns
inc
pop
sbb
inc
pop
sbb
jns
jns
inc
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
jns
jns
inc
pop
sbb
dec
pop
sbb
jns
jns
dec
pop
sbb
dec
pop
sbb
jns
jns
dec
pop
sbb
pop
sbb
dec
pop
sbb
dec
pop
sbb
jns
jns
dec
pop
sbb
push
pop
sbb
jns
jns
push
pop
sbb
push
pop
sbb
jns
jns
push
pop
sbb
pop
sbb
push
pop
sbb
push
pop
sbb
jns
jns
push
pop
sbb
pop
pop
sbb
jns
jns
pop
pop
sbb
pop
pop
sbb
jns
jns
pop
pop
sbb
pop
sbb
pop
pop
sbb
pop
pop
sbb
icebp
ds
mov
pop
xor
rol
push
out
jns
xor
rol
xor
shl
sahf
(bad)
jnp
xor
rol
xor
out
push
ss
push
aaa
sbb
push
cmp
rol
cmp
out
sbb
push
cmp
rol
jnp
out
push
cmp
rol
cmp
sar
sbb
push
sbb
out
jns
push
aas
sbb
push
inc
sbb
icebp
sahf
(bad)
rol
inc
sbb
push
push
out
jns
inc
sbb
push
inc
sbb
icebp
sahf
(bad)
jnp
inc
sbb
push
inc
sbb
jns
out
push
inc
sbb
push
inc
sbb
push
dec
sbb
push
dec
jns
out
sbb
push
dec
sbb
(bad)
jnp
out
push
dec
sbb
push
dec
sbb
mov
dec
sbb
push
dec
sbb
out
jns
push
dec
sbb
push
push
sbb
icebp
sahf
(bad)
rol
push
sbb
push
push
out
jns
push
sbb
push
push
sbb
icebp
sahf
(bad)
jnp
push
sbb
push
push
sbb
jns
out
push
push
sbb
push
push
sbb
push
pop
sbb
push
pop
jns
out
sbb
push
pop
sbb
(bad)
jnp
out
push
pop
sbb
push
pop
sbb
mov
pop
sbb
push
pop
sbb
push
pusha
or
pop
inc
not
div
and
pop
movs
mov
jge
pop
sbb
rcr
pop
data16
pop
sbb
out
mov
mov
push
icebp
fidiv
push
imul
jnp
xor
pop
inc
mov
and
pop
dec
in
inc
inc
sbb
outs
push
xchg
out
cmp
jo
push
jb
inc
loope
jae
mov
neg
pop
sub
add
push
jle
aas
movs
jg
cmp
inc
add
shl
push
or
jnp
mov
push
test
not
fiadd
fimul
out
push
xchg
pop
shl
das
loope
out
push
mov
pop
rol
push
mov
pop
fidivr
mov
mov
adc
xor
out
dec
js
shl
and
mov
shl
and
push
xchg
or
pop
rcl
fidivr
xor
pop
jp
mov
push
xchg
or
pop
mov
xor
sahf
jnp
call
push
call
pop
loopne
and
push
pushf
or
pop
loopne
add
mov
lahf
pop
loope
out
loopne
and
pop
neg
and
pop
jnp
mov
push
movs
or
not
fisub
fimul
out
push
cmps
or
pop
jl
das
loope
out
push
test
test
sahf
jnp
and
pop
fidivr
mov
lods
or
pop
out
mov
and
out
dec
js
jl
and
mov
jl
and
push
mov
mov
jl
fidivr
xor
pop
js
mov
push
mov
mov
out
cmp
and
pop
mov
xor
neg
cmp
pop
movs
xor
jnp
mov
and
mov
or
pop
movs
xor
faddp
or
pop
movs
xor
push
ret
pop
movs
xor
jnp
and
pop
movs
xor
js
mov
mov
div
and
pop
jecxz
out
movs
xor
pop
mov
xor
pop
neg
and
pop
fidiv
mov
ror
mov
xor
ret
rol
jl
and
push
aam
aad
jl
and
push
(bad)
or
pop
cmc
fidiv
jl
and
pop
fidivr
sbb
fimul
pop
jnp
mov
push
fmul
ret
and
or
or
pop
jl
and
push
loopne
loope
jl
xchg
lock
push
loop
jecxz
jl
jnp
mov
or
pop
jnp
mov
push
in
or
pop
sub
and
mov
loopne
idiv
jle
adc
sbb
mov
mov
adc
add
movs
adc
add
out
movs
adc
push
sbb
cmps
adc
sti
jle
out
or
test
pop
or
test
std
mov
pop
or
stos
adc
or
lods
adc
out
test
pop
push
sbb
fucomip
sti
sbb
mov
pop
adc
mov
mov
adc
mov
pop
adc
mov
pop
adc
out
idiv
sbb
adc
push
sbb
jge
pop
sbb
mov
idiv
jle
mov
mov
mov
adc
sbb
mov
mov
jge
push
sbb
mov
idiv
jle
rcl
and
rcl
and
ret
idiv
mov
adc
and
les
pop
and
out
lds
pop
inc
cmps
mov
sub
fidivr
add
pop
js
mov
push
inc
or
pop
mov
xor
sahf
jnp
loop
mov
out
cmp
pop
add
and
push
dec
or
pop
add
inc
js
mov
dec
pop
loop
out
add
and
pop
neg
and
pop
jnp
lea
push
or
aaa
ficom
mov
js
push
push
or
pop
mov
out
push
push
or
pop
mov
xor
pop
fidivr
lea
pop
pop
out
mov
and
out
inc
js
fdiv
and
mov
repnz
push
pusha
or
pop
add
cmp
push
bound
pop
add
fidivr
xor
pop
add
jnp
mov
or
pop
jp
mov
push
push
cmp
and
pop
mov
xor
neg
cmp
pop
dec
xor
jnp
mov
and
mov
or
pop
push
xor
fiadd
and
push
xchg
pop
push
xor
push
mov
pop
push
xor
push
mov
pop
push
adc
cmp
mov
ficom
xor
pop
mov
xor
pop
neg
and
pop
fidiv
mov
xor
jnp
sub
and
mov
push
xor
dec
mov
or
and
push
and
and
outs
movs
neg
pop
hlt
xor
push
sub
pop
hlt
xchg
fidivr
xor
pop
hlt
sar
mov
or
pop
js
mov
push
cs
pop
mov
xor
sahf
jnp
jecxz
mov
and
mov
or
pop
mov
and
push
ss
pop
mov
pop
js
mov
cmp
loope
out
les
and
pop
neg
and
pop
jnp
lea
ds
aaa
push
fidivr
pop
les
and
push
inc
or
pop
repnz
push
inc
or
pop
repnz
fs
mov
inc
pop
repnz
neg
inc
or
pop
fs
mov
push
dec
or
pop
neg
and
pop
out
mov
and
sahf
jnp
fs
repnz
inc
test
repnz
push
push
or
pop
repnz
push
push
add
pop
mov
fcomp
repnz
pop
jnp
mov
push
push
or
pop
neg
sbb
repnz
mov
repnz
and
pop
pop
repnz
push
pop
or
pop
repnz
and
and
pop
repnz
mov
fsub
pop
repnz
mov
or
pop
mov
fcomp
repnz
pop
jnp
mov
push
data16
pop
neg
sbb
repnz
mov
repnz
and
imul
xor
push
ins
or
pop
repnz
sar
and
pop
hlt
xor
push
jns
jp
sub
add
out
mov
or
pop
sub
add
push
jge
sbb
jg
fidiv
movs
hlt
dec
and
jnp
sbb
and
mov
fdiv
and
sar
pop
fdiv
and
push
xchg
pop
fdiv
and
push
mov
pop
test
(bad)
jmp
fsub
pop
out
xor
push
xchg
pop
pop
dec
cmp
push
mov
xchg
jnp
xor
pop
push
sar
mov
or
pop
jp
mov
push
cmps
or
pop
out
cmp
and
pop
ret
inc
push
xor
out
push
sbb
adc
mov
add
aaa
imul
ins
add
add
add
out
sub
or
dec
xchg
ins
cmp
mov
je
cdq
movs
jne
push
or
xor
je
add
fst
adc
aaa
call
xor
inc
imul
pushw
cmps
jle
dec
cmps
mov
retf
dec
pop
outs
ins
pop
ins
xor
test
mov
adc
sbb
mov
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
mov
pop
sbb
dec
pop
sbb
mov
pop
sbb
dec
pop
sbb
mov
pop
sbb
pop
sbb
dec
pop
sbb
dec
pop
sbb
mov
pop
sbb
push
pop
sbb
mov
pop
sbb
push
pop
sbb
mov
pop
sbb
pop
sbb
push
pop
sbb
push
pop
sbb
mov
pop
sbb
pop
pop
sbb
mov
pop
sbb
pop
pop
sbb
out
cmp
scas
push
inc
sbb
push
inc
sbb
cmp
scas
push
inc
sbb
push
inc
sbb
out
sbb
ret
jnp
out
push
dec
sbb
mov
dec
sbb
push
out
cmp
push
dec
sbb
lock
ret
scas
push
push
sbb
mov
push
sbb
push
push
sbb
cmp
scas
push
push
sbb
push
push
sbb
out
sbb
and
push
out
push
pop
sbb
loopne
loopne
sub
sub
mov
mov
pop
sbb
sub
jnp
jnp
adc
sbb
iret
jnp
push
cs
sbb
das
pop
sbb
jnp
or
pop
sbb
xor
sbb
jnp
or
pop
sbb
xor
sbb
jnp
or
pop
sbb
iret
jnp
push
ss
sbb
aaa
pop
sbb
jnp
adc
pop
sbb
cmp
sbb
jnp
adc
pop
sbb
cmp
sbb
jnp
adc
pop
sbb
iret
jnp
push
ds
sbb
aas
pop
sbb
jnp
sbb
sbb
inc
pop
sbb
jnp
sbb
sbb
inc
pop
sbb
jnp
sbb
pop
sbb
iret
jnp
push
inc
pop
sbb
inc
pop
sbb
jnp
and
sbb
dec
pop
sbb
jnp
and
sbb
dec
pop
sbb
jnp
and
pop
sbb
iret
jnp
es
pop
sbb
dec
pop
sbb
sahf
inc
mov
sbb
sub
out
jns
out
push
sub
sbb
sub
fsubp
js
sbb
sub
sbb
sub
sbb
push
sbb
(bad)
jnp
out
push
das
sbb
push
xor
sbb
sbb
push
xor
jnp
out
jns
push
xor
sbb
xor
out
sahf
(bad)
sbb
xor
out
jns
sbb
push
aaa
sbb
icebp
sahf
(bad)
jnp
cmp
sbb
cmp
out
jns
out
push
cmp
sbb
cmp
sahf
(bad)
jnp
sbb
cmp
sbb
cmp
sbb
push
sbb
(bad)
jnp
out
push
aas
sbb
push
inc
sbb
mov
inc
sbb
push
inc
sbb
out
jns
push
inc
sbb
push
inc
sbb
icebp
sahf
(bad)
sbb
inc
sbb
push
push
out
jns
inc
sbb
push
inc
sbb
icebp
sahf
(bad)
jnp
dec
sbb
push
dec
sbb
jns
out
push
dec
sbb
push
dec
sbb
push
dec
sbb
push
dec
jns
out
sbb
push
dec
sbb
mov
push
out
push
dec
sbb
push
add
in
not
ud1
mov
xchg
dec
add
or
retf
in
mov
mov
push
sbb
sbb
retf
in
push
and
and
jb
pop
sub
sub
cs
retf
in
xor
cmp
jb
pop
cmp
xchg
retf
inc
inc
inc
dec
dec
retf
in
mov
mov
pop
pop
pop
pop
xchg
retf
in
pusha
bound
jb
pop
cs
outs
jo
xchg
retf
in
je
js
add
in
jnp
add
adc
inc
mov
pushf
mov
lahf
mov
dec
jae
cmps
test
inc
shl
mov
jb
call
cs
retf
retf
rcl
retf
in
mov
mov
loopne
in
xchg
retf
in
call
dec
rcr
idiv
cli
movs
jae
xchg
cld
(bad)
repnz
retf
add
or
or
in
mov
mov
sbb
sbb
xchg
retf
in
and
and
sub
pop
sub
xor
and
imul
mov
dec
jo
call
mov
mov
cs
shl
cs
retf
movs
fcomp
(bad)
loopne
jb
pop
loop
out
pop
cs
retf
jmp
cmp
xchg
mov
mov
jne
sbb
pop
(bad)
(bad)
adc
(bad)
cmps
cmc
imul
lahf
jno
xchg
(bad)
movs
cmc
and
shl
pop
pop
test
movs
pop
xor
loope
cmp
imul
sbb
pop
xchg
leave
xchg
mov
jne
sbb
pop
(bad)
xchg
fnstenv
mov
pop
pop
pop
(bad)
adc
(bad)
xchg
jne
rcr
dec
dec
(bad)
xchg
jne
stc
mov
in
jns
(bad)
retf
xchg
and
test
xor
or
pop
mov
cmc
ins
inc
sbb
cmc
int
pop
(bad)
test
pop
push
sub
(bad)
fnsave
lea
cmp
pop
(bad)
xor
sbb
(bad)
and
jge
(bad)
pop
xor
or
xlat
mov
jne
inc
sbb
cmc
int
into
push
aam
call
pop
cs
add
or
xchg
retf
in
or
adc
adc
mov
sbb
xchg
retf
in
and
and
in
mov
cs
cs
retf
xor
xor
cmp
in
mov
mov
inc
inc
dec
dec
xchg
retf
in
dec
dec
push
push
push
jb
pop
cs
pop
pop
pop
cs
retf
in
pusha
bound
jb
pop
push
cs
retf
jo
je
js
in
mov
mov
test
in
mov
mov
mov
in
test
lods
scas
in
mov
mov
cs
retf
mov
retf
in
mov
mov
int3
into
rcl
xchg
retf
in
aam
fcomp
fdiv
pop
cs
loop
cs
retf
in
call
jb
pop
lock
neg
xchg
retf
clc
cli
cld
(bad)
shl
sbb
dec
das
cmp
dec
dec
pop
arpl
pop
mov
dec
and
pop
je
pop
xor
lahf
test
pop
rcr
pop
mov
pusha
jl
in
pop
inc
sti
dec
dec
rcr
pop
or
mov
and
dec
rcr
sub
shl
aas
inc
add
mov
into
ret
fs
arpl
pop
cmp
mov
sbb
arpl
jo
cs
fisub
add
in
mov
mov
retf
mov
in
mov
mov
mov
retf
in
stos
lods
scas
mov
jb
pop
cs
mov
in
mov
jb
pop
(bad)
enter
cs
retf
into
rcl
aam
retf
in
mov
mov
cs
loopne
jmp
push
mov
outs
loopne
clc
pop
aaa
(bad)
push
scas
and
sbb
scas
inc
pop
sahf
and
sbb
jg
push
sahf
and
cmp
mov
cmp
mov
loopne
pop
out
adc
add
(bad)
lahf
or
adc
or
mov
add
and
adc
push
inc
pop
push
add
adc
add
push
add
add
clc
fbstp
and
sub
or
out
or
scas
sub
ja
daa
loopne
js
call
add
daa
loopne
js
aaa
phaddd
and
or
mov
mov
mov
add
lea
mov
push
and
cmps
imul
and
sahf
lahf
mov
call
dec
sar
add
dec
shl
push
sbb
cmp
xor
sar
ds
inc
inc
cmps
imul
imul
dec
shl
shl
fdiv
sbb
cmp
push
outs
lea
retf
mov
popa
add
stos
mov
and
jo
out
cs
into
mov
push
add
jb
pop
or
or
retf
adc
adc
jb
sbb
cs
and
retf
in
sub
retf
movs
imul
mov
inc
inc
inc
inc
pop
cs
jae
dec
dec
dec
dec
retf
in
mov
mov
pop
pop
pop
popa
xchg
retf
in
arpl
imul
outs
jno
cs
retf
in
ja
jl
xchg
retf
movs
imul
lea
jb
xor
mov
call
imul
cs
cmps
mov
retf
in
mov
movs
imul
fstp
pop
cs
retf
loope
in
jmp
jmp
out
lock
mov
std
cs
retf
add
add
pop
or
or
retf
adc
adc
jb
sbb
cs
and
retf
in
sub
cs
jae
cmp
inc
inc
inc
out
mov
dec
movs
mov
call
jae
call
dec
shl
xlat
fnstenv
pop
cs
(bad)
cs
retf
in
in
jmp
pop
in
out
repz
clc
sub
xor
popa
add
jb
pop
imul
cs
retf
in
jne
jns
in
mov
mov
retf
lea
in
mov
mov
mov
retf
in
test
jb
pop
cs
mov
cs
retf
in
mov
jb
pop
(bad)
enter
mov
rcl
aad
xchg
retf
in
(bad)
fstp
in
mov
out
cs
retf
jmp
retf
in
mov
push
pop
cs
sti
std
inc
add
mov
mov
movups
adc
pop
sbb
sbb
and
and
loopne
jne
inc
fnstenv
jns
add
xchg
retf
in
add
mov
adc
cs
retf
in
pop
sbb
sbb
pop
and
and
daa
sub
sub
mov
mov
cmp
in
inc
inc
inc
dec
dec
jb
pop
cs
dec
push
push
cs
retf
in
push
pop
pop
pop
in
mov
gs
cs
retf
imul
mov
mov
jnp
jg
xchg
retf
in
add
pop
lea
call
xchg
retf
in
movs
cmps
test
pop
cs
mov
mov
xchg
retf
in
mov
jb
pop
rol
(bad)
pop
cs
retf
leave
retf
int
ror
in
mov
mov
fstp
loope
xchg
retf
in
in
jmp
pop
cs
icebp
repz
das
xchg
retf
in
stc
sti
std
call
call
adc
cmps
imul
cmps
imul
imul
cmps
imul
ret
(bad)
ror
xor
rcl
xlat
loopne
repnz
dec
shl
div
or
push
retf
in
xor
adc
xor
shl
cmp
imul
mov
pushw
imul
xchg
retf
movs
add
lea
retf
xchg
xchg
xchg
cdq
fwait
retf
in
mov
mov
cmps
test
in
scas
mov
mov
jb
pop
cs
xchg
retf
in
ret
(bad)
in
mov
rcr
retf
rcl
xlat
(bad)
int
jb
fstp
loope
in
arpl
jb
push
mov
add
cmps
inc
inc
inc
cs
retf
in
dec
dec
dec
push
in
mov
pop
pop
cs
retf
pop
pop
pop
popa
arpl
in
mov
mov
add
lea
cs
xchg
xchg
and
and
xchg
(bad)
inc
sub
xor
xor
aaa
cmp
cmp
aas
inc
inc
inc
inc
out
mov
dec
in
mov
push
pop
cs
retf
pop
pop
pop
pop
popa
retf
in
mov
rcr
imul
js
cs
dec
jp
jg
or
jb
test
cs
xchg
mov
scas
in
test
push
and
sti
push
inc
cmps
mov
test
add
call
sbb
mov
call
aad
push
aaa
push
imul
dec
repz
out
pop
(bad)
add
cmp
shl
fcmovu
imul
sbb
cmps
imul
imul
bound
jp
cs
and
add
retf
repnz
cwde
lahf
mov
scas
mov
mov
add
or
add
dec
jl
mov
add
xor
jae
ret
(bad)
cs
sar
adc
add
dec
pop
jo
imul
sub
pop
xor
imul
sbb
xor
rcr
and
ss
sub
add
cmp
dec
dec
xor
rcr
bound
cs
jae
mov
jae
mov
jecxz
or
shl
dec
push
int
imul
sbb
(bad)
xchg
dec
jae
int
jecxz
or
rcr
inc
inc
dec
in
xor
push
bound
shl
add
shl
push
push
jb
xor
bound
mov
out
int
jecxz
retf
dec
jae
add
bound
ror
movs
imul
cmp
dec
mov
mov
mov
jb
mov
neg
add
aaa
cmp
jle
test
xchg
cmps
jne
pop
into
xor
call
cmp
cmps
imul
xor
movs
add
cmps
dec
sbb
add
pop
add
shl
jb
cmps
mov
(bad)
leave
shr
adc
xchg
cmps
imul
sub
cmp
pop
sbb
shl
pusha
bound
inc
dec
shl
jl
jmp
xor
cmp
call
and
cmps
mov
in
out
icebp
shl
xor
aaa
rcl
dec
shl
in
add
cmps
fld
sbb
sbb
xor
and
add
sub
(bad)
jmp
call
sub
jl
lock
retf
add
fisub
sbb
test
dec
add
push
add
mov
mov
shl
ss
imul
imul
out
push
call
shl
es
add
imul
add
cmps
or
cmp
aas
shl
inc
add
mov
mov
cmps
imul
ret
inc
rol
inc
lods
push
out
shl
jae
add
out
inc
dec
dec
dec
call
mov
cmps
imul
xor
daa
cmp
jge
xchg
cmps
ror
int3
mov
cmps
mov
ds
inc
dec
dec
jae
call
xor
shl
(bad)
enter
xor
rcl
test
shl
cmp
imul
call
or
pop
call
adc
dec
rol
xchg
push
jne
repnz
repz
add
sub
jb
dec
into
sub
xor
cmp
push
push
bound
call
mov
movs
(bad)
call
dec
rol
(bad)
enter
cmps
imul
cmps
imul
rcr
push
popa
retf
call
cmps
imul
inc
inc
cmps
mov
mov
cs
stos
out
in
out
cmps
xor
and
sub
call
and
dec
rcr
mov
push
xor
movs
adc
mov
mov
mov
xor
xor
dec
sub
in
out
jmp
dec
in
push
add
jae
mov
mov
push
pop
data16
jb
daa
inc
daa
cmp
mov
mov
add
in
ret
push
es
cmp
imul
stc
rol
pop
shl
in
mov
add
out
or
or
xor
or
or
or
xor
shl
or
or
in
mov
or
ror
push
fsubr
cmpxchg
aaa
xor
add
cdq
loopne
mov
push
jmp
shr
ins
dec
add
fld
mov
add
cdq
sbb
data16
push
pop
sbb
cmps
push
dec
xor
cmps
pop
test
test
xor
add
fldcw
sub
adc
add
call
adc
add
outs
add
xlat
add
add
inc
or
lock
shl
mov
xor
xor
and
cmp
out
out
retf
add
inc
je
inc
add
and
xchg
dec
rcl
add
bound
jnp
bound
sub
mov
mov
xor
jb
ja
lock
jnp
mov
jle
fdiv
sub
pop
sar
imul
xchg
xchg
int
add
sbb
je
imul
mov
fwait
add
jmp
mov
inc
hlt
xchg
add
sub
xor
and
xchg
xor
xor
xor
shl
or
shl
inc
xor
pop
call
and
fidivr
push
or
sbb
add
xor
mov
jge
or
or
jg
jnp
(bad)
and
xchg
add
rol
jno
das
pop
jbe
ror
add
retf
addr16
add
sbb
or
pop
mov
ja
fadd
hlt
and
fild
mov
add
push
and
add
imul
cmps
movs
push
sbb
loopne
add
test
out
pop
out
mov
cmps
imul
cs
fs
cmps
imul
call
add
and
mov
ret
ds
ret
xor
test
ffreep
loopne
outs
xor
sbb
push
adc
adc
sar
nop
xor
and
add
in
xor
shl
in
out
retf
in
add
add
push
dec
cmc
add
sub
xchg
retf
and
jno
inc
push
push
push
pop
sub
cld
adc
pop
inc
sbb
sbb
jge
sub
ss
or
jno
retf
push
jg
pushf
jge
call
cs
dec
jae
cmp
out
fst
add
cmps
jb
mov
add
mov
movs
mov
iret
test
jmp
imul
add
add
add
mov
in
cli
jmp
imul
shl
cmps
rcl
out
out
cli
imul
adc
adc
fcomp
dec
movs
mov
jmp
adc
int
rcr
mov
add
push
pop
popa
xor
shl
ja
jg
shl
xchg
test
mov
mov
mov
mov
cs
ins
call
shl
adc
sub
xor
xor
xor
shl
pop
pop
pop
jb
call
xchg
cmps
imul
imul
fwait
loopne
or
add
shl
sub
dec
shl
cmp
pop
pop
pop
popa
jno
call
nop
xchg
pop
call
sahf
shl
test
cdq
cmps
xor
scas
mov
imul
movs
imul
shl
popa
test
nop
xchg
test
mov
mov
mov
ss
loope
repnz
or
dec
rcl
adc
cmp
jae
popa
jp
test
xor
xchg
call
ins
cs
push
xor
xor
rol
xor
and
cmps
imul
imul
call
sub
rcr
fmul
imul
ins
imul
jne
add
shl
pop
popa
cmps
imul
pop
call
in
rol
mov
dec
push
imul
imul
imul
shl
call
sbb
sbb
hlt
add
outs
add
sbb
or
push
imul
imul
pop
call
call
stos
fisub
int
cmc
mov
imul
or
cmps
rol
or
add
call
jbe
inc
dec
imul
sar
mov
sbb
add
dec
pop
xor
shl
jmp
mov
clc
xor
mov
cmps
test
call
mov
rol
into
shl
fcomp
push
xor
mov
lahf
mov
xchg
push
sub
call
loope
ins
je
xor
dec
add
lahf
mov
cmps
cmp
mov
push
jl
cld
or
call
in
call
add
pop
or
cmps
imul
imul
and
xor
jl
imul
cmps
sub
inc
cmps
imul
pop
call
cmps
imul
imul
sbb
xor
shl
adc
and
bound
loop
imul
mov
(bad)
retf
adc
sti
xlat
ds
fnstenv
sti
pop
dec
shl
cmp
call
inc
inc
sti
mov
imul
dec
(bad)
xchg
(bad)
lock
std
xchg
mov
cmps
jb
add
cld
(bad)
shl
jno
mov
dec
ret
iret
rcl
push
sahf
ss
mov
jg
or
sub
cmp
cmps
imul
sti
imul
mov
ror
repnz
add
inc
inc
dec
cmps
imul
fs
iret
push
add
xchg
add
xchg
or
xor
sub
push
or
add
xor
fwait
and
or
adc
cmps
imul
call
inc
push
pusha
call
dec
add
adc
ins
scas
adc
outs
and
loope
icebp
xchg
cs
cmp
add
or
add
cmps
add
(bad)
push
push
xor
add
sbb
cli
add
push
mov
aaa
xchg
add
pop
inc
add
mov
cmps
add
dec
aas
call
mov
bnd
add
add
push
sbb
outs
adc
gs
mov
and
cs
cs
retf
xor
adc
das
xchg
pop
arpl
pop
fild
pop
jnp
(bad)
jb
lods
mov
push
inc
retf
in
lea
and
mov
ins
outs
jo
xchg
retf
in
je
out
jmp
sub
xchg
retf
in
xchg
mov
xchg
xchg
xchg
xchg
retf
in
(bad)
and
and
mov
or
or
push
adc
jns
pop
sbb
sbb
push
pop
pop
(bad)
xor
cs
cmp
retf
in
inc
pop
pop
pop
or
cmp
bound
fist
jp
inc
mov
push
pop
cmp
cmp
mov
jb
jle
sub
imul
imul
jae
jb
pop
jne
out
sub
xchg
retf
jmp
out
test
xchg
jb
pop
mov
xchg
retf
nop
xchg
xchg
xchg
cwde
in
jb
(bad)
std
and
sub
xchg
dec
and
or
jb
pop
or
cs
retf
pop
sbb
push
pop
retf
movs
mov
aas
std
sbb
cmp
cmp
inc
inc
xchg
retf
in
inc
dec
pop
pop
pop
mov
(bad)
cmp
cmc
jb
pop
or
and
movs
imul
pop
cs
retf
add
or
fist
loopne
add
xchg
and
retf
in
mov
call
and
imul
pop
call
mov
mov
jle
xchg
mov
rol
repz
call
add
or
pop
push
pop
push
aam
push
cmp
stc
fcomp
mov
pop
gs
xor
hlt
or
mov
enter
ss
rcr
(bad)
dec
adc
add
push
push
inc
int3
outs
add
in
test
pop
call
call
ins
add
or
sub
sbb
sbb
fwait
cmps
imul
popa
rcl
add
call
inc
sbb
xchg
cmps
imul
imul
call
inc
mov
push
mov
pop
stc
sub
pop
retf
add
push
add
xor
cmps
imul
imul
sbb
pop
mov
xor
fs
xor
mov
add
sti
cmps
movs
add
pop
call
jle
xor
repz
div
ja
iret
clc
xchg
es
sar
cs
add
shl
(bad)
xor
fisub
fistp
adc
fucomip
stos
adc
push
imul
cmps
imul
imul
mul
inc
add
out
or
bndldx
mov
and
fs
pop
add
push
pop
jns
or
or
push
mov
add
cmp
and
adc
dec
fidiv
shl
jae
outs
and
inc
rol
imul
xchg
xlat
div
add
dec
or
inc
and
jl
call
inc
inc
dec
xor
rcr
call
mov
push
aam
jmp
imul
fnstenv
loope
and
sar
outs
shr
shr
retf
sti
shl
push
add
fdivr
(bad)
jmp
xor
inc
add
dec
ins
call
fs
cs
cmps
test
loop
jae
pop
jmp
fistp
xchg
sti
adc
jmp
test
sar
add
mov
repz
icebp
or
lods
lods
lods
stc
or
push
fist
retf
fdivr
std
push
inc
loopne
in
jl
sub
enter
test
retf
in
scas
mov
dec
shl
(bad)
jmp
cmps
mov
jne
cmps
test
mov
cmps
imul
cmps
imul
xor
aam
cmps
jo
and
mov
mov
mov
inc
pop
lea
cmps
add
jns
pop
cs
mov
add
cdq
push
push
inc
jmp
std
(bad)
test
or
xchg
xchg
cmps
test
or
xor
push
popf
or
pop
pop
cs
rcr
pop
xor
cmp
cmps
mov
into
stos
push
fcomp
ss
gs
adc
push
popa
(bad)
push
je
dec
shl
call
push
or
call
push
and
in
imul
cmp
dec
dec
call
lahf
mov
mov
movs
imul
or
aad
jmp
add
pop
imul
imul
xor
imul
add
dec
pushf
dec
rcr
add
rol
xchg
mov
and
jo
call
xchg
sar
cmps
mov
das
add
inc
fbstp
sub
jmp
cdq
add
repz
call
add
adc
loope
jae
and
aaa
cmps
imul
hlt
xchg
add
inc
xchg
call
je
dec
shl
sub
jg
call
shl
xor
mov
es
add
dec
or
movs
xor
sub
add
aaa
cmp
jae
ja
push
add
std
in
cmps
imul
call
jns
xor
shl
es
fs
shl
mov
scas
fst
mov
inc
rcr
sub
shl
xchg
mov
shl
ror
fistp
icebp
add
xor
call
repnz
inc
jbe
ins
call
add
cmps
imul
cmps
imul
lock
ds
inc
push
mov
idiv
cld
hlt
or
(bad)
sti
inc
not
xchg
dec
shl
adc
sbb
call
and
imul
shl
add
pop
xchg
sbb
push
or
xor
add
arpl
or
jl
in
shl
jo
jbe
push
dec
jp
mov
cmc
dec
adc
inc
cmp
loope
lahf
les
rcl
inc
dec
xor
adc
les
or
pop
sbb
out
test
hlt
or
popf
cmp
stos
add
ins
add
or
cmp
adc
sbb
jo
push
ret
nop
loop
push
and
mov
clc
add
xchg
mov
xor
mov
pop
pop
jo
ret
pusha
and
loopne
cdq
lods
adc
test
ret
nop
or
add
test
adc
lock
bound
cmp
js
cmp
inc
data16
cmp
fdivr
mov
pop
xchg
pusha
bound
and
pop
ret
jmp
add
mov
cmp
xchg
loope
push
pop
adc
add
dec
sbb
ss
pop
adc
mov
test
dec
rol
cld
mov
jl
pop
leave
xor
xor
or
inc
xchg
in
shl
and
dec
addr16
test
mov
lock
adc
fisub
sub
adc
mov
inc
push
xor
sbb
push
mov
add
xchg
inc
mov
push
sub
jne
ror
or
xchg
cdq
add
push
pop
stos
movs
add
pop
or
pop
and
(bad)
stos
xchg
out
and
mov
test
in
cld
pop
push
jp
inc
and
mov
mov
pop
inc
sub
lods
xor
cmp
pushf
pusha
adc
dec
sti
add
mov
es
jecxz
and
inc
mov
add
outs
mov
xchg
inc
es
inc
loopne
add
dec
nop
sbb
and
dec
hlt
les
jnp
shr
inc
sti
and
jbe
jnp
add
dec
fucom
(bad)
xor
or
ds
sub
cs
and
mov
nop
mov
scas
xchg
test
sbb
std
rcr
or
inc
mov
add
jne
pushf
cs
push
jl
nop
mov
popa
mov
adc
dec
pop
fst
mov
loope
test
arpl
pop
pop
popf
dec
add
push
test
jnp
mov
cmp
stos
or
mov
sti
push
sbb
shl
pusha
add
mov
adc
mov
or
mov
and
fimul
lahf
sub
iret
mov
cmc
aaa
adc
or
add
or
js
pop
data16
xchg
sbb
arpl
popa
and
pop
das
fst
mov
cmp
sbb
(bad)
in
test
test
pop
cmp
and
and
les
hlt
loop
into
mov
pop
ret
adc
pop
dec
fsubr
into
mov
and
das
adc
push
loopne
xor
movs
jo
sub
hlt
xor
xchg
ret
jmp
and
add
test
pusha
sub
sub
cwde
sbb
pop
and
pop
mov
add
jp
dec
(bad)
sbb
outs
jb
jl
dec
push
and
scas
pop
cdq
or
stc
rep
(bad)
pop
cmp
dec
repz
pop
out
jb
and
cmp
mov
or
add
in
inc
add
adc
sub
add
mov
or
bound
sub
sahf
mov
clc
and
or
xor
mov
push
imul
cmp
sbb
lahf
icebp
mov
sbb
jnp
push
or
mov
fdiv
adc
jno
and
loopne
hlt
sbb
add
sub
adc
and
ins
mov
adc
push
cmp
or
add
and
cmp
shl
pop
add
ffree
or
dec
add
or
mov
sbb
test
and
bound
mov
mov
or
or
sub
cmp
stos
imul
jne
sub
adc
sub
jmp
sbb
sub
jle
xor
outs
sub
outs
adc
jno
scas
add
add
sbb
and
iret
(bad)
xchg
rcr
ret
or
sbb
add
es
push
sub
not
stc
sbb
cmp
mov
fwait
loopne
popa
and
add
pop
dec
add
adc
add
lods
movs
xlat
inc
mov
xor
inc
inc
leave
jl
mov
mov
cmp
sbb
popf
les
js
dec
add
or
sub
adc
mov
xor
or
or
lods
lods
pop
cmp
dec
push
stc
and
adc
push
imul
or
cmovo
lods
imul
imul
mov
mov
int3
add
ja
lods
mov
out
add
fild
lea
or
xor
or
ds
add
retf
(bad)
mov
ret
add
push
push
jae
add
pusha
push
rol
imul
push
dec
js
cmp
pop
inc
in
inc
gs
in
cmp
stc
add
inc
loopne
cmp
int3
dec
es
js
adc
jo
sbb
push
dec
sbb
xchg
aas
xor
or
dec
stc
add
adc
add
mov
add
adc
enter
pop
add
or
adc
mov
mov
mov
mov
mov
shl
rol
inc
fabs
loopne
sbb
xchg
mov
inc
icebp
gs
int
(bad)
push
nop
adc
fisubr
fbstp
pop
cmp
xchg
dec
imul
dec
mov
jg
mov
stos
mov
fsub
sbb
lods
jecxz
cmc
mov
call
xor
mov
(bad)
and
inc
inc
add
jne
pop
adc
push
dec
popf
dec
fcmovne
in
(bad)
imul
cs
sub
pop
xchg
dec
rcr
sbb
push
(bad)
in
xor
push
push
pop
test
jbe
shl
gs
xchg
sbb
pop
fidiv
xor
and
adc
retf
movs
imul
rol
cs
xchg
shr
or
xor
push
mov
je
mov
sbb
mov
jle
add
fcomp
inc
mov
addr16
fiadd
fimul
pop
mov
add
retf
in
push
pop
imul
jns
xchg
popf
mov
cmps
lods
mov
jns
cld
push
sbb
or
xchg
retf
or
adc
mov
fld
call
cmp
dec
push
mov
fwait
jns
inc
test
pop
pop
icebp
jge
or
int
out
outs
sub
adc
pop
and
rdpmc
mov
ss
cmp
das
sub
jae
dec
push
push
aaa
stos
ror
test
push
and
out
add
popf
pushf
push
and
imul
cmp
test
adc
jg
fbld
popa
shr
push
fld
or
dec
shl
es
das
xor
mov
dec
pusha
shl
je
dec
shl
test
mov
sbb
jecxz
in
jmp
test
cs
jbe
jl
inc
movs
or
lahf
cs
cmp
sub
xchg
retf
in
push
push
push
pop
in
mov
pusha
pop
cs
retf
bound
imul
jae
jbe
dec
shl
xchg
jl
cmc
or
scas
retf
in
mov
mov
mov
retf
in
ret
leave
shl
aam
xlat
shl
(bad)
lahf
push
sbb
test
or
xchg
cs
test
ds
inc
mov
dec
adc
ja
or
adc
dec
and
and
xchg
push
mov
adc
and
and
movs
inc
outs
or
pop
sti
mov
inc
movs
mov
add
out
or
mov
add
jmp
pop
cs
pop
aaa
mov
push
sar
test
dec
cmp
push
dec
inc
adc
add
sbb
xor
sbb
iret
rol
shl
dec
dec
jle
jnp
xchg
daa
jno
xchg
jo
sbb
sti
jns
fsubrp
mov
mov
lds
sbb
sub
xor
jae
cmp
push
push
or
pop
clc
pop
or
rcl
(bad)
sbb
and
jne
movs
sbb
jmp
loope
mov
inc
cmp
inc
add
dec
retf
inc
dec
pop
sub
rol
(bad)
xlat
in
popa
jns
push
and
push
sahf
leave
cmps
imul
jo
call
cmps
mov
add
fcmovu
movs
imul
out
dec
shl
cli
sti
std
movs
adc
mov
or
leave
int3
and
imul
sub
cmps
imul
cmps
imul
retf
jbe
jmp
call
xor
xor
cmps
imul
cmps
imul
retf
in
jbe
jp
(bad)
cs
shl
xchg
cwde
call
cmps
test
mov
rol
rcl
call
loop
out
call
cli
pop
call
add
sahf
dec
xor
rcr
xor
imul
(bad)
aad
fisttp
xor
fsubp
out
hlt
idiv
mov
aam
stc
sti
loope
add
shl
adc
cmps
imul
imul
shl
fs
jno
call
xchg
cmps
imul
imul
cmps
imul
call
add
xor
imul
add
cmps
jo
ins
pop
sub
cmps
mov
int3
pop
test
or
es
adc
cmps
popa
dec
lock
or
inc
scas
mov
jp
or
cmc
dec
mov
or
add
pop
pop
pop
pop
pusha
(bad)
shl
xor
jmp
dec
sub
hlt
add
cmc
jb
mov
push
sub
pop
ins
(bad)
retf
in
jge
push
add
inc
data16
test
es
add
call
daa
fwait
sbb
es
test
sbb
int
mov
add
shl
pop
outs
xor
pop
add
into
ja
add
sbb
je
shl
imul
adc
push
sbb
in
pusha
and
cmp
push
push
pop
or
fs
outs
mov
xchg
cwde
push
cmps
pop
mov
mov
shl
cmp
cmps
jge
cmp
add
ds
leave
cmp
xchg
mov
xor
call
and
fadd
jecxz
in
xor
hlt
in
stc
or
push
xchg
retf
movs
imul
imul
cmps
imul
and
jns
mov
shr
add
loop
in
out
repz
mov
xchg
dec
fs
gs
cmp
and
cs
movs
dec
fadd
ja
test
mov
sub
push
xchg
pop
add
add
pop
mov
cs
or
and
movs
shr
fs
add
add
test
ret
fst
jecxz
add
push
cmp
ret
or
jmp
test
lmsw
pop
sub
jmp
push
jmp
pushf
cmp
int
test
or
fs
arpl
enter
int
fs
jecxz
sbb
pop
dec
repnz
mov
xchg
aas
mov
inc
inc
jmp
mov
and
and
mov
jno
mov
mov
leave
pop
cdq
pop
pushf
push
push
test
adc
add
stos
mov
nop
push
push
adc
sbb
(bad)
stc
in
and
add
sub
cmp
and
shr
ficomp
push
aam
xchg
aad
fsub
push
xor
sbb
fwait
test
pop
cmp
std
jns
mov
or
shr
mov
add
pop
xor
in
add
push
pop
rol
mov
ins
jg
sub
inc
mov
add
jo
test
sub
cmp
mov
es
inc
stc
shl
movs
xor
sbb
or
cmps
fnstsw
ja
test
adc
loopne
add
cmp
pop
popf
jno
or
test
push
test
mov
mov
std
std
adc
test
cmp
mov
add
mov
inc
inc
pusha
int3
xchg
pusha
jo
push
add
and
add
xchg
jmp
pop
pop
xor
je
iret
dec
and
pop
ret
mov
dec
dec
inc
add
push
cmp
push
sahf
mov
cmps
push
push
sub
imul
or
xchg
icebp
mov
xchg
mov
push
inc
repz
rcr
or
ins
mov
push
ja
mov
sub
retf
push
ja
jns
pop
add
jmp
add
mov
cmp
sbb
(bad)
push
add
or
jne
pop
imul
pop
dec
fwait
imul
stos
mov
add
push
add
pop
ins
push
pop
pop
in
loopne
mov
pop
imul
imul
sub
lods
xchg
push
daa
fnsave
pop
out
xor
add
adc
(bad)
(bad)
int
(bad)
jb
bound
mov
(bad)
cmp
mov
dec
add
call
inc
imul
shl
daa
imul
adc
push
mov
xor
add
pop
(bad)
cmp
cmp
sub
les
das
stos
imul
add
shl
cs
stos
imul
das
jmp
xchg
push
push
imul
jmp
add
stos
ror
jecxz
in
fldcw
cmp
mov
mov
cmp
mov
or
stos
retf
adc
lods
pop
push
mov
jne
dec
sbb
cmp
sbb
mov
and
cmp
(bad)
pop
push
(bad)
pop
rcr
rcl
xchg
fbstp
gs
pop
and
jnp
xchg
(bad)
dec
lahf
or
xor
mov
data16
add
jae
push
repnz
inc
movs
imul
arpl
add
pop
fimul
retf
adc
dec
mov
mov
mov
(bad)
xor
repz
push
or
add
add
xor
rol
add
add
add
or
or
or
xor
ror
or
or
or
adc
xchg
addr16
pop
add
add
pop
dec
xchg
add
nop
in
aas
imul
inc
jmp
cmp
rcr
adc
add
mov
sbb
pop
dec
popa
push
add
movs
popa
int3
push
stos
shl
movs
pop
or
add
call
es
xlat
movs
je
mov
add
cli
add
call
ja
add
scas
push
mov
pusha
xor
mov
and
bound
rol
mov
jl
js
push
pop
adc
call
xor
xchg
pop
pop
aas
sub
stc
std
inc
mov
stc
jne
pop
cmp
popf
xor
test
das
sub
xchg
sub
sub
add
popf
mov
(bad)
add
dec
mov
sub
push
mov
pop
arpl
xor
jmp
push
mov
or
gs
gs
imul
clc
cmps
imul
add
pop
sub
fwait
push
add
push
sahf
push
out
mov
arpl
xchg
ret
sahf
(bad)
jnp
push
iret
(bad)
add
sub
inc
jmp
pop
lods
pop
loop
les
xor
lahf
les
sbb
imul
rcr
push
out
test
cmp
(bad)
popa
out
sbb
xchg
dec
fs
stos
test
aad
icebp
dec
shl
and
je
xchg
inc
fadd
shl
loope
out
dec
mov
mov
or
mov
xchg
call
mov
mov
rcr
push
and
movs
sbb
mov
xor
mov
loop
and
mov
rol
retf
mov
loop
out
xchg
out
in
add
inc
pusha
add
test
xor
mov
popa
mov
jns
gs
push
mov
push
xchg
shl
dec
es
cli
xor
imul
fs
dec
ss
and
dec
sbb
sar
movs
imul
dec
lods
xchg
push
aas
test
aas
mov
inc
xor
dec
fisubr
mov
mov
pop
dec
in
and
sub
mov
bound
xor
shl
pop
add
xor
dec
dec
lods
xor
test
retf
add
mov
push
push
pop
repz
pop
bound
xchg
movs
test
push
lahf
pop
inc
dec
retf
ror
jl
xor
mov
add
push
push
mov
xor
mov
cmps
imul
mov
div
sub
add
pop
xchg
xchg
dec
das
bnd
sub
cs
pop
add
pop
psrld
xor
add
jne
inc
aam
mov
mov
bound
addr16
mov
lods
add
add
arpl
cmps
push
pop
add
pop
jge
sub
push
fnstcw
add
dec
push
repz
xor
dec
das
test
test
xchg
add
adc
sub
push
or
mov
or
sbb
cmp
push
sbb
adc
jecxz
clc
xor
add
xchg
add
push
or
jmp
xchg
or
add
sub
shr
push
jns
fiadd
int3
add
pop
pop
aas
add
inc
sub
aam
pop
(bad)
fistp
cmc
mov
sub
int
mov
adc
mov
cmp
movs
mov
push
shr
sbb
scas
push
cli
pop
xchg
cmps
mov
adc
and
and
sub
aad
fist
or
loopne
imul
or
cmp
jbe
or
cmp
push
rol
fidiv
mov
jo
scas
je
das
mov
push
mov
jne
cmp
cmp
out
aaa
and
add
mov
xor
sbb
add
push
test
mov
add
retf
sar
js
scas
je
inc
das
sahf
add
or
(bad)
dec
jp
xchg
inc
sub
add
cmp
daa
nop
sub
repnz
in
addr16
or
mov
add
add
or
add
or
iret
jle
mov
or
add
mov
outs
int
adc
mov
push
cli
fld
mov
mov
xchg
jb
sub
cli
adc
call
sbb
cmp
sbb
dec
or
sahf
or
bound
add
pop
add
in
xchg
or
dec
and
sbb
add
sub
in
add
add
and
je
add
daa
push
add
adc
add
mov
cmp
xchg
or
jbe
mov
cmp
add
jns
jae
outs
add
add
add
add
std
fst
add
retf
add
add
sub
sbb
loop
addr16
add
add
and
ins
aas
mov
fiadd
cld
add
cmp
cmps
imul
shl
add
inc
dec
push
shl
pop
pop
ficomp
jb
fadd
fwait
das
xchg
cmps
mov
push
push
pop
cs
pop
add
pop
jecxz
out
jns
in
xor
xor
retf
movs
imul
xchg
inc
inc
dec
repnz
push
or
and
cmps
(bad)
add
sbb
sbb
imul
(bad)
in
mov
retf
cmp
xchg
xchg
(bad)
call
inc
cmp
aam
jge
jae
or
mov
call
lods
hlt
add
xor
add
into
jle
xor
in
scas
inc
add
pusha
test
call
inc
dec
in
xor
dec
push
push
push
pop
imul
int
outs
sub
add
test
add
mov
stos
lods
scas
ror
pop
add
inc
shl
pop
movs
xchg
cmps
mov
(bad)
repz
add
retf
jmp
add
in
xor
xor
mov
inc
inc
inc
sbb
rol
icebp
push
inc
inc
add
mov
mov
push
call
aam
lea
pop
lea
sbb
push
outs
std
(bad)
add
imul
jle
lock
xchg
rol
xor
ror
retf
int3
rol
sbb
xchg
aam
jnp
add
jo
add
lods
jne
retf
imul
pop
mov
shl
and
add
retf
push
jl
add
cwde
add
pop
sub
in
xchg
xor
add
adc
pop
bound
iret
jmp
rol
popa
int
lock
lea
xlat
add
xchg
mov
adc
movs
cdq
sub
scas
add
jecxz
or
pop
jp
add
dec
cmp
dec
push
dec
fisubr
scas
push
adc
pop
add
add
pop
retf
movs
sbb
add
shl
test
ficom
xor
or
adc
in
into
sbb
retf
ins
fimul
jg
in
mov
fistp
jle
daa
int
fistp
mov
sub
imul
push
rol
cmovle
das
inc
jo
push
call
cld
mov
dec
pop
leave
in
mov
xor
pop
xor
outs
jb
mov
jbe
popa
fistp
js
bound
fdivp
es
push
jp
arpl
sub
ins
outs
shl
jl
jle
jo
rol
push
mov
and
int
in
mov
or
mov
sahf
cmp
das
and
cmp
add
iret
jo
cmp
popf
dec
adc
adc
mov
push
push
or
in
jmp
and
das
push
imul
das
push
push
and
das
sub
dec
es
push
pop
pop
daa
and
aaa
add
add
sub
jmp
sub
jge
xor
jle
mov
xchg
inc
jg
xor
in
xor
mov
and
dec
test
test
gs
retf
cmp
aaa
cdq
pusha
or
jb
stc
dec
xor
ja
js
in
jb
jns
jp
xchg
xchg
retf
aaa
jnp
jl
xor
or
cmp
inc
xchg
xchg
retf
leave
adc
inc
adc
daa
inc
adc
adc
inc
push
inc
pop
leave
in
jb
sbb
daa
xchg
xchg
retf
dec
sbb
dec
pushf
pop
dec
cs
sbb
mov
retf
leave
in
and
push
cs
xchg
xchg
and
push
and
pushf
pop
dec
push
and
jb
push
daa
pop
sub
ret
leave
in
sub
pushf
daa
xchg
xchg
out
popa
sbb
pop
dec
cs
mov
mov
retf
leave
in
mov
daa
xchg
xchg
movs
push
imul
test
test
outs
stos
outs
stos
xchg
retf
leave
in
lods
jno
dec
cs
xchg
jb
jae
je
mov
mov
in
jb
mov
mov
xchg
xchg
retf
leave
mov
mov
xor
call
sbb
add
in
popf
popa
and
cmp
xor
add
add
jb
sbb
add
add
jb
add
adc
cmp
add
sbb
inc
dec
or
or
or
call
push
leave
movs
dec
rol
adc
xchg
retf
or
or
and
or
pop
xchg
retf
ins
nop
push
or
fs
ud2
adc
in
xor
adc
sbb
sbb
adc
or
adc
out
sbb
pop
dec
cs
add
or
jb
mov
and
in
jb
cmp
cmp
add
adc
daa
xchg
xchg
retf
and
xchg
daa
xchg
push
sub
aas
push
dec
sub
xor
push
cmp
sahf
pop
and
push
das
pop
push
sahf
push
sahf
push
cmp
xor
gs
push
sahf
push
sub
xor
jns
cmp
push
sub
ins
sub
jns
jns
xor
jbe
push
jns
xor
jns
pop
in
in
inc
ins
inc
jmp
repz
xchg
ds
cs
rcl
enter
or
or
cmp
cmp
cmp
popf
lock
dec
pop
pop
loopne
fdiv
push
mov
dec
shr
iret
mov
sub
or
movs
jmp
sub
push
sub
sahf
jnp
imul
outs
push
or
cmp
push
push
adc
push
or
das
sub
sbb
fisubr
sbb
and
jbe
xor
and
in
out
sub
push
push
mov
dec
push
das
sub
xor
mov
push
jae
cmp
or
inc
jbe
unpcklps
pop
push
iret
and
jle
xlat
jbe
fdiv
or
outs
paddsb
push
loop
je
jbe
movups
push
mov
idiv
add
dec
or
in
xor
adc
leave
test
in
leave
xor
sbb
sub
int
imul
xchg
retf
xor
xor
cs
jns
push
xchg
test
jmp
pushf
pop
dec
xor
xor
mov
sbb
jb
xor
push
sbb
mov
sbb
sbb
daa
xchg
fist
outs
outs
repnz
push
ss
mov
push
mov
imul
jb
imul
in
sbb
fistp
push
shr
daa
xchg
cmp
cmp
retf
inc
outs
repnz
add
xor
cmps
rcr
and
sbb
and
nop
and
ss
fisub
call
push
cmp
dec
cmp
loopne
fs
popa
out
xor
je
sub
cmp
cmps
jne
daa
cmp
pusha
ins
ds
adc
push
in
add
xchg
dec
xor
ins
nop
xor
jae
adc
hlt
xor
sbb
jl
push
xor
cmc
xor
outs
sbb
div
es
ins
mov
push
xchg
ss
sbb
xor
jo
dec
fwait
push
clc
xor
outs
outs
sbb
xor
push
sbb
es
(bad)
xor
push
sbb
xor
pop
sbb
xor
nop
push
outs
jb
sbb
xchg
push
das
ins
push
sbb
loope
xor
sbb
jae
sub
push
iret
loop
mov
popa
mov
push
out
or
(bad)
leave
shl
out
cs
std
xor
rcl
addr16
sbb
fistp
pop
sbb
outs
outs
jnp
pop
adc
pop
xchg
out
cmp
imul
cmp
push
push
imul
test
xor
cs
ret
sub
jns
dec
inc
cmc
push
shl
and
push
(bad)
sbb
adc
push
out
add
gs
lods
mov
xchg
out
addr16
mov
mov
xor
xor
(bad)
add
adc
daa
int
mov
push
test
pop
xor
mov
xor
xor
sub
iret
loopne
hlt
adc
adc
mov
leave
xor
cli
xchg
push
out
jns
sahf
ret
test
shl
shl
in
push
cmc
xor
dec
xor
adc
sbb
in
movs
jb
xor
jns
sub
dec
adc
sar
cmp
cmp
out
fs
shl
push
jne
push
test
add
shl
pop
dec
lea
in
lds
pop
sahf
jnp
ins
sub
aam
adc
popf
push
push
leave
in
test
fisub
repnz
sbb
cmp
aaa
mov
push
pop
aaa
out
aaa
push
mov
in
aaa
pop
sub
jmp
adc
leave
push
ja
std
sbb
repz
pop
push
daa
iret
loopne
or
fisttp
sbb
daa
sub
std
cmp
push
cs
cmp
cld
hlt
repnz
sub
packuswb
addr16
sub
std
rcr
dec
sahf
ds
(bad)
std
cmp
xchg
dec
in
cmp
cmp
sub
push
cmp
cld
cmc
loopne
jnp
adc
lods
push
xlat
pop
dec
push
sbb
push
loope
shl
mov
je
pop
aaa
(bad)
jmp
retf
mov
je
push
sar
sbb
adc
push
inc
sbb
rol
cmp
sahf
jnp
es
adc
inc
push
jbe
movs
dec
ja
add
add
cmp
jl
adc
push
or
out
push
jns
push
sbb
gs
adc
xor
mov
adc
pop
dec
imul
dec
imul
or
push
jae
push
inc
mov
jo
adc
rcl
cmps
push
inc
jnp
ficom
stos
sbb
or
sbb
adc
xor
das
in
movs
mov
sbb
ins
test
loopne
xor
add
rol
sbb
xor
(bad)
(bad)
mov
mov
inc
or
lds
sbb
ror
btc
adc
lods
and
sbb
ss
mov
shl
inc
movs
and
test
fnstsw
add
ins
neg
sbb
fucomi
add
ins
verw
mov
and
mov
(bad)
pop
sub
cmp
out
jle
and
iret
jmp
aam
sub
push
ret
or
fdiv
xor
inc
test
loop
jae
xor
daa
iret
jge
cmp
add
iret
popf
fmul
shl
sbb
jns
ins
add
leave
leave
xor
xor
ds
add
push
sub
cmc
sbb
mov
gs
add
mov
adc
mov
scas
or
or
adc
outs
out
daa
or
sbb
movs
add
push
rol
push
mov
rcl
mov
jns
sar
dec
ins
adc
cmp
mov
pop
mov
jo
or
fmul
cmp
outs
aas
outs
pop
xor
lock
cld
push
inc
stc
(bad)
in
inc
dec
out
xchg
adc
inc
add
shl
fcmovnb
xor
sbb
xchg
cmps
sbb
inc
push
inc
or
xchg
sub
adc
adc
push
sub
adc
or
xchg
mov
psrlq
xlat
das
add
and
out
or
push
outs
sbb
push
mov
rdpmc
lods
push
ret
dec
ds
xor
push
mov
cmp
aas
lahf
mov
std
cs
mov
jb
in
leave
adc
fimul
mov
add
es
xchg
ret
retf
push
adc
inc
adc
add
sbb
fndisi(8087
call
inc
adc
pop
movs
retf
or
fistp
inc
or
add
clts
ins
scas
dec
cmp
retf
mov
mov
jmp
arpl
outs
out
mov
movs
sub
sub
iret
loope
test
pcmpeqb
fcomp
mov
sahf
lds
push
xor
outs
or
fmul
or
movs
ins
sahf
test
mov
aad
aam
add
cmp
dec
inc
mov
ret
inc
add
inc
ja
out
mov
jno
ins
pop
jno
fmul
ds
or
mov
jno
mov
add
jne
inc
outs
movs
or
add
mov
xchg
stos
mov
rol
adc
dec
(bad)
adc
push
sbb
dec
in
dec
jmp
pop
fistp
add
daa
int
pushf
push
adc
mov
mov
xchg
outs
rdpmc
out
push
or
push
iret
rol
push
popf
cmps
fcmovne
xor
mov
aas
mov
(bad)
lahf
fidivr
jb
cmp
push
iret
loope
push
(bad)
or
neg
or
and
push
sub
xor
cmp
fisub
nop
xor
dec
jbe
int3
pop
and
adc
imul
or
and
and
cmp
sub
xlat
adc
lahf
inc
cmp
getsec
and
jo
jns
or
xor
push
sbb
xchg
and
cmps
aad
psraw
loope
push
jae
xor
outs
scas
cmp
jbe
fisttp
fstp
pop
pop
ja
inc
bswap
aam
shl
in
popa
movs
popa
mul
dec
push
jp
jbe
cmp
push
arpl
push
scas
int3
out
adc
int
and
add
add
jae
pushf
xor
add
push
xchg
dec
xor
call
in
fwait
mov
push
adc
mov
(bad)
jae
xchg
jbe
push
retf
loope
sti
sbb
mov
inc
fsubr
adc
(bad)
setge
sub
adc
cmp
psubusb
in
jo
cmp
sub
jns
iret
pop
push
cmp
sub
inc
xchg
scas
push
mov
clc
push
xor
pop
dec
movs
xchg
adc
pushf
int3
mov
das
or
daa
iret
popf
mov
in
jb
repnz
lds
jno
mov
addr16
inc
adc
mov
dec
int
add
mov
mov
(bad)
dec
call
and
sub
ss
mov
ficom
xsha256
cmps
aam
stos
fsubrp
leave
xor
jb
(bad)
clts
mov
leave
inc
ds
or
cmp
out
cmp
push
fisubr
sar
sbb
jle
mov
pop
iret
xor
adc
in
pushf
mov
enter
aas
mov
cmp
movs
call
adc
xor
inc
dec
fild
add
dec
fimul
inc
daa
sub
sbb
fstp
jnp
(bad)
xor
(bad)
pop
mov
inc
mov
leave
xor
inc
pop
cmp
xor
popf
push
adc
ja
push
mov
or
pop
sub
ds
leave
jae
cmp
sub
stc
rol
lock
stos
sbb
dec
dec
dec
xchg
adc
push
dec
rcr
cs
ds
dec
inc
adc
in
popa
xor
push
test
retf
addr16
cmps
push
je
iret
xor
sbb
pop
adc
outs
adc
outs
daa
inc
dec
adc
cmp
daa
daa
iret
loopne
ret
loopne
jl
sbb
daa
lods
das
cmp
js
jmp
and
sbb
out
push
and
ss
into
stos
adc
adc
fld
inc
mov
inc
dec
jae
dec
or
inc
and
imul
adc
fsub
repnz
adc
(bad)
pcmpeqw
dec
add
sbb
xchg
lahf
je
jns
adc
repnz
outs
ret
daa
push
test
test
sbb
popf
adc
rol
aam
rcl
fcmovbe
dec
rcr
and
mov
ss
sbb
aam
fcmovnu
into
or
sub
dec
fidiv
dec
or
neg
fistp
push
sbb
neg
xchg
test
jg
movs
jge
mul
outs
sti
movs
in
sub
adc
fmul
dec
mov
(bad)
or
dec
(bad)
lea
adc
fcomp
ficomp
add
add
jnp
ss
(bad)
loop
and
mov
sar
arpl
int3
sbb
in
add
sub
arpl
scas
addr16
int
adc
(bad)
psrad
cmp
push
cmp
sahf
lds
daa
jecxz
jb
pop
dec
inc
inc
aas
das
(bad)
iret
aaa
push
push
adc
jp
ds
in
pop
jle
fimul
mov
xchg
imul
add
sbb
pop
pusha
sbb
fisub
and
xor
jl
xchg
test
push
push
adc
jbe
jmp
xor
jns
jecxz
rcr
paddq
or
ins
aas
fiadd
pop
inc
cs
loopne
jbe
pandn
ror
lds
jns
and
mov
in
scas
das
dec
inc
mov
leave
enter
aad
adc
loopne
in
aam
sbb
sbb
sar
out
push
xor
fucomi
in
outs
mov
dec
mov
lods
xchg
sbb
jbe
das
iret
add
push
adc
xchg
in
or
adc
movlps
pop
jo
pop
jae
daa
in
neg
push
jae
sub
lock
adc
icebp
push
in
pop
leave
leave
mov
outs
bndstx
cmp
in
loope
pop
sub
(bad)
rcr
inc
sbb
dec
das
jge
adc
jo
xchg
rcr
push
jbe
add
adc
add
sbb
cmp
push
pop
cmp
prefetchwt1
or
pop
sbb
adc
data16
outs
jb
pop
or
sbb
and
sbb
add
xor
jp
push
adc
(bad)
ja
pop
inc
(bad)
aad
add
push
dec
jle
dec
outs
push
pop
outs
daa
iret
loope
test
out
sbb
sub
inc
xor
das
cmp
mov
loop
jo
jo
cmps
push
and
push
sub
addr16
adc
fs
ins
dec
xor
sub
bound
imul
adc
and
jg
adc
cmps
push
adc
loop
sbb
pop
add
inc
popf
fsubr
popf
push
mov
dec
aas
inc
sbb
leave
xor
pop
dec
(bad)
fsubr
jecxz
scas
movntq
leave
inc
sub
fldcw
movs
mov
js
fneni(8087
in
push
add
(bad)
or
push
sbb
imul
inc
in
sbb
dec
jnp
aad
push
fsub
push
or
xor
in
or
or
ins
pop
es
adc
adc
imul
sbb
out
jnp
call
or
movs
dec
and
scas
sbb
and
sub
and
sub
jbe
mov
je
inc
pop
cmp
addr16
adc
in
push
jne
xchg
iret
loop
dec
xor
pop
cmp
xchg
sbb
retf
leave
in
in
in
(bad)
test
sbb
call
and
push
sub
mov
sbb
add
add
mov
lds
push
jle
out
lahf
cmp
add
in
sbb
cmps
stc
or
(bad)
mov
popf
int3
add
test
dec
sbb
pop
adc
jmp
mov
retf
cmp
jns
sbb
imul
lahf
xchg
lods
pop
fild
(bad)
cmp
pop
sahf
push
push
adc
fimul
add
cmp
xor
add
adc
fld
pop
mov
push
das
out
in
cmp
inc
cmc
push
xchg
push
dec
sahf
ret
in
dec
aas
aaa
push
jle
push
in
pushf
fdivr
mov
lds
sbb
mov
outs
pop
movs
ror
sbb
mov
fisttp
jmp
sbb
fmul
pop
(bad)
int
push
dec
aam
sahf
(bad)
ins
push
jg
add
jo
fisttp
das
out
sbb
cmp
mov
xchg
outs
pop
repnz
add
add
clc
inc
add
xor
dec
call
js
mov
jbe
sub
or
inc
ficomp
adc
(bad)
aam
aad
outs
daa
and
in
jbe
repnz
add
fucomi
pop
cmp
push
dec
push
in
in
in
call
scas
pop
push
mov
in
nop
push
adc
jge
jbe
fadd
xchg
and
sahf
jnp
add
cmp
adc
repz
mov
daa
and
aam
jmp
adc
sub
leave
leave
xor
outs
and
aad
dec
sahf
ror
iret
repz
(bad)
call
sub
sbb
push
fst
out
push
cmp
ds
pop
idiv
push
adc
repnz
in
dec
(bad)
pop
push
inc
loopne
adc
jnp
pop
dec
jne
or
mov
mov
movs
outs
push
add
mov
ds
popa
loope
clc
cmps
fimul
jns
movs
sbb
stos
sbb
inc
xchg
add
fcomp
sbb
adc
fiadd
popa
rcr
scas
sbb
mov
push
sub
mov
test
loope
xor
daa
sti
test
sbb
xor
in
ret
outs
sbb
inc
out
div
sbb
ror
or
frstor
lods
shl
mov
push
shl
add
js
dec
mov
push
out
inc
ret
push
out
pop
push
mov
fst
xchg
stos
(bad)
in
or
sbb
iret
jmp
jmp
in
mov
aas
push
je
push
add
daa
mov
ret
mov
(bad)
sahf
mov
cwde
xchg
xchg
xchg
xchg
mov
pop
mov
mov
mov
pop
jmp
ins
push
sbb
loope
cmp
cmp
push
daa
inc
mov
dec
mov
sbb
jne
imul
in
not
inc
mov
imul
popf
idiv
mov
in
dec
call
int3
leave
push
and
or
pusha
neg
fcomp
and
adc
aad
inc
jns
daa
iret
xchg
push
lock
pop
push
mov
jnp
mov
aam
in
shr
xchg
out
push
mov
and
mov
fidiv
cmp
push
enter
adc
dec
xchg
ins
sub
js
ss
jns
xor
(bad)
and
in
cld
repz
movs
jb
sbb
push
pcmpgtb
mov
or
sub
push
or
mov
sub
bound
repnz
bsr
icebp
mov
iret
inc
mov
in
inc
sahf
fsubr
test
mov
repnz
rol
js
iret
loop
add
jle
xchg
shl
into
sbb
add
add
call
mov
inc
fcmove
ror
gs
mov
add
or
aaa
imul
aam
jb
pop
out
adc
fcmovne
sbb
pop
movs
in
dec
call
inc
popf
xor
fisttp
add
(bad)
shl
fstp
or
sbb
sbb
movs
sub
sub
xor
out
aam
inc
out
icebp
sbb
push
das
xchg
mov
jns
iret
loop
pop
push
es
push
mov
in
jbe
xchg
pop
and
bsf
outs
mov
aas
inc
lahf
xchg
xchg
ds
in
pushf
aam
dec
push
ret
inc
jecxz
mov
rol
imul
jmp
adc
iret
loopne
lock
push
fsub
xor
and
push
aam
aad
add
push
and
out
dec
mov
repz
mov
jns
xchg
(bad)
iret
mov
jmp
addr16
add
data16
mov
addr16
sub
fstp
imul
ja
imul
popf
int3
into
ds
aam
and
pop
lock
in
jbe
mov
pop
pop
sub
or
sahf
ret
(bad)
add
dec
push
push
cs
loopne
jl
dec
cmc
push
jno
pushf
mov
sbb
pushf
ror
pop
sbb
pop
daa
daa
int
jbe
sub
add
imul
test
add
adc
and
cmc
inc
push
icebp
aam
cdq
cmp
rcl
jb
and
xlat
(bad)
iret
add
sub
mov
xor
jb
jb
shr
clc
add
add
shl
push
int3
inc
outs
jae
ror
adc
js
sub
out
adc
in
adc
outs
adc
sub
(bad)
sub
outs
cmp
ret
jae
leave
push
pop
or
cwde
xor
or
adc
imul
sahf
push
pop
fstp
sub
pushf
mov
ret
jo
cmp
push
ds
pop
and
mov
jno
leave
jnp
add
test
bound
dec
jbe
repnz
mov
cmps
in
repnz
adc
cmp
pop
(bad)
setae
daa
and
(bad)
aad
mov
cvtdq2ps
test
sbb
sub
daa
mov
iret
dec
dec
sahf
mov
pushf
cmp
dec
imul
addr16
jecxz
in
imul
adc
and
jno
dec
mov
adc
sub
xchg
inc
cmps
sbb
dec
sahf
mov
fistp
jp
push
xchg
(bad)
lock
imul
cmp
sub
aaa
daa
xor
push
rol
iret
unpcklps
aam
nop
pop
sub
dec
xor
in
push
ds
(bad)
clc
xchg
push
les
in
in
cmp
fidivr
pop
pusha
sar
mov
pop
sete
mov
repz
out
xchg
ins
rcl
call
xor
xchg
mov
cmp
ins
or
cs
in
in
ins
aaa
sbb
cmp
daa
setae
sub
popa
fcomi
js
dec
adc
dec
push
xchg
pop
popf
cmp
fst
push
lds
ret
addr16
lar
xchg
cmp
or
push
and
out
jb
pop
cmc
dec
jns
popf
pushf
cmp
jl
fisubr
xor
movs
adc
rol
rcr
mov
dec
jae
aad
adc
ins
mov
leave
xchg
adc
xor
mov
das
(bad)
pushf
add
xor
pop
sahf
adc
sbb
push
ins
inc
rol
movs
mov
test
ss
pop
stos
ins
xor
xor
ret
popa
fdivr
xor
mov
xchg
(bad)
cs
vpmulhuw
dec
es
pop
cwde
or
fmul
neg
jg
inc
iret
loope
dec
xchg
dec
sti
push
push
in
jo
jns
cli
ret
mov
jbe
adc
jns
addr16
sbb
sub
dec
fisub
fcmovnbe
jns
adc
inc
adc
(bad)
sub
inc
push
inc
pop
dec
dec
jae
dec
or
inc
and
imul
adc
xchg
addr16
imul
arpl
setns
fucomi
cmp
(bad)
setle
leave
enter
dec
pop
jle
jbe
fisttp
dec
das
pop
sti
dec
pop
setae
shr
aas
jg
cs
retf
ror
inc
outs
repnz
outs
daa
dec
xor
shr
ror
sbb
xlat
sbb
aad
fcmovne
dec
test
arpl
out
sub
dec
mov
imul
in
aaa
or
test
dec
inc
dec
(bad)
jg
push
mov
sbb
sbb
sub
sbb
sbb
mov
(bad)
fmul
push
or
or
test
movs
adc
or
outs
imul
and
sbb
int3
jle
jnp
mov
int
je
or
clc
in
outs
icebp
sub
jbe
arpl
nop
popf
adc
daa
mov
frstor
pop
xchg
aad
cwde
xor
pushf
outs
rsqrtps
pusha
mov
out
dec
lea
in
jge
mov
fimul
fucomi
sub
enter
push
cld
push
addr16
fsub
jo
daa
int
rcr
jo
adc
rcr
retf
shr
push
push
jo
in
mov
adc
inc
ds
setp
push
gs
std
jb
mov
lds
in
pop
setno
loope
xor
daa
daa
sub
lods
repnz
jae
xor
pop
in
in
mov
push
call
fcmovne
bound
sub
outs
cli
pop
(bad)
sqrtps
mov
dec
sahf
pop
(bad)
scas
inc
push
push
jb
ss
scas
sub
cmps
popa
dec
sbb
jbe
mov
jb
push
adc
mov
int
adc
(bad)
(bad)
pop
jnp
leave
adc
sbb
loopne
xchg
jbe
sub
xor
adc
lea
into
push
retf
ins
sbb
repnz
xchg
call
push
mov
leave
xor
addr16
fwait
in
sbb
psraw
test
or
xchg
inc
jp
(bad)
fisttp
xchg
xor
adc
push
gs
pop
sbb
add
push
inc
fwait
adc
in
dec
cs
sbb
cmp
sbb
add
xor
push
push
adc
jne
test
lds
enter
sysret
lods
in
add
fist
cs
aad
push
fmul
aas
push
lds
fs
fucomi
xor
cwde
pop
fwait
or
sub
xchg
adc
int
push
je
inc
and
add
imul
sub
dec
outs
and
iret
adc
(bad)
nop
popa
aam
out
dec
iret
loopne
imul
cmp
std
sub
pop
(bad)
fild
outs
int
xor
xor
inc
mov
cli
adc
sar
dec
jns
or
ins
jo
scas
sbb
or
fistp
cmp
adc
cmp
jne
sbb
sbb
sbb
xchg
outs
sar
cld
mov
push
or
jae
dec
or
or
popa
ror
mov
movhps
jne
sbb
sbb
in
js
ss
fdiv
sbb
int3
mov
in
into
in
sub
and
sub
out
movs
sub
jle
stos
push
lds
pop
test
xor
push
push
(bad)
aam
cmc
cmp
add
(bad)
cs
in
jbe
jg
bswap
pop
ss
mov
das
sahf
pop
fs
or
mov
inc
cmp
xchg
dec
loop
fwait
movs
and
jne
add
jae
frstpm(287
fidiv
adc
iret
fstp
retf
pop
lahf
iret
push
fwait
mov
xchg
xchg
aad
addr16
das
add
js
daa
pop
femms
gs
mov
mov
leave
jmp
imul
fmul
call
push
lahf
mov
jb
push
sbb
mov
dec
call
pop
adc
es
jae
cwde
or
clc
jmp
dec
inc
mov
aam
aad
cwde
mov
shr
outs
int3
aas
xchg
addr16
add
cs
cmp
out
push
mov
push
jnp
mov
pop
pop
js
sbb
mov
pop
sbb
jecxz
xchg
xchg
iret
cmp
add
popf
leave
in
in
out
ds
setns
iret
popa
in
(bad)
jns
push
cmp
jg
pop
rcr
in
sbb
push
xchg
pop
mov
loop
pop
jns
add
retf
stc
inc
add
xor
mov
movs
sbb
mov
dec
xor
test
jb
imul
aam
push
and
ss
dec
cs
iret
loope
cmp
dec
sahf
aas
mov
fsubr
dec
xor
call
in
shr
push
pop
add
jp
mov
add
jp
push
adc
cmp
sub
outs
add
and
pushf
jge
iret
aam
rcl
mov
in
lahf
xor
fwait
(bad)
outs
mov
lsl
pop
imul
shl
jmp
jae
and
(bad)
pop
jmp
jns
aaa
push
or
retf
popf
jge
push
pop
das
push
pop
cmps
rcl
loopne
loope
movs
test
in
loop
test
lods
nop
add
sbb
inc
jle
(bad)
loop
fnsave
js
fdiv
adc
cmp
outs
jb
cs
adc
jecxz
mov
clc
jl
daa
push
movs
rdtsc
push
push
mov
push
xor
push
pop
nop
push
mov
out
inc
mov
add
and
aaa
test
xchg
push
inc
push
imul
push
push
popf
sub
adc
sub
push
dec
pop
dec
pop
lahf
ss
cmps
cmp
loopne
sub
jns
mov
xchg
push
imul
push
ins
pop
outs
call
jno
sub
jae
mov
push
dec
ja
jne
js
push
call
mov
mov
mov
jae
dec
push
imul
mov
cmp
xchg
xchg
add
fucom
mov
test
push
stos
pop
das
mov
or
arpl
mov
xchg
adc
mov
push
mov
add
inc
dec
fwait
movs
imul
add
in
and
cmp
in
and
and
jmp
or
imul
das
ins
xchg
mul
(bad)
cmp
mov
jmp
xchg
hlt
sub
push
test
(bad)
loop
xchg
jbe
xor
test
out
stos
setae
xlat
in
pop
push
fcmovu
dec
xchg
pminub
daa
and
stos
xchg
push
xchg
xlat
pop
pop
cs
enter
xor
sbb
outs
jnp
sbb
sbb
sbb
aaa
jns
xor
sbb
idiv
xlat
sete
pop
pop
xchg
xchg
out
imul
retf
movs
(bad)
movs
jb
xchg
call
sub
add
jb
and
das
leave
and
fs
fisttp
fwait
jmp
sub
mov
and
xchg
ss
jnp
lahf
cmp
fistp
jmp
jae
sub
sub
(bad)
(bad)
pop
imul
popf
pushf
mov
(bad)
mov
jbe
aas
xchg
imul
and
out
rcl
in
push
ficomp
mov
mov
adc
push
stos
or
cmp
cmp
outs
shl
jle
sbb
jnp
xor
cmp
sbb
and
leave
leave
in
in
adc
pminsw
pop
pop
mov
sahf
xor
mov
call
dec
dec
and
pusha
xlat
retf
fs
sahf
mov
push
popa
mov
in
daa
ins
fs
das
sub
popf
out
(bad)
bound
xor
leave
leave
mov
arpl
sahf
popf
fmul
sahf
mov
out
sub
clc
ret
in
add
cmc
lahf
mov
das
ins
nop
dec
dec
lahf
dec
sbb
dec
ins
xchg
ins
arpl
dec
xor
dec
sbb
mul
das
dec
dec
sbb
out
sahf
xlat
cmp
mov
fs
sbb
mov
pop
(bad)
enter
mov
icebp
in
lds
repnz
xlat
push
ins
xchg
fcmovne
mov
mov
jb
lea
pop
mov
ins
xchg
addr16
mov
imul
das
mov
add
jle
mov
adc
fisubr
inc
add
call
popa
xchg
jbe
adc
pop
lods
movs
ss
movs
or
sbb
in
xor
pop
sbb
adc
(bad)
jae
pop
div
shl
push
imul
mov
cmps
das
cmps
push
xor
sbb
(bad)
mov
xchg
daa
lods
test
stc
cmps
xlat
xor
cli
sbb
(bad)
xchg
test
add
shl
lods
cmp
dec
jnp
scas
cmp
das
in
and
add
jb
imul
cmp
jmp
cmp
not
data16
cmp
shl
imul
daa
mov
sub
(bad)
psubd
rcr
lss
sbb
popa
sub
xor
lods
mov
mov
inc
inc
adc
movs
int3
xor
mov
test
xchg
inc
push
and
das
ss
sbb
ins
xor
and
mov
xchg
pop
fimul
sbb
mov
sbb
sbb
mov
cld
rsm
xlat
(bad)
jmp
shr
push
pushf
cmp
xchg
stos
push
std
pop
push
jno
jns
popf
pushf
aaa
data16
pop
dec
imul
cmp
lahf
cmp
jb
aas
push
(bad)
(bad)
dec
leave
jae
(bad)
packuswb
lods
pop
fst
jae
cmp
(bad)
pop
push
adc
mov
sub
adc
pop
fisub
adc
adc
pop
ficom
adc
cmp
jnp
dec
sbb
out
push
shufps
jbe
jb
mov
scas
add
iret
loope
in
cmp
mov
les
fnstenv
movzx
(bad)
add
shl
in
cmp
jne
xor
movs
je
add
xor
call
(bad)
sbb
mov
and
xchg
cmp
fisub
fimul
dec
and
add
sbb
xchg
jmp
and
movs
int
xchg
cmp
mov
cmp
xchg
fcmovnu
in
sbb
and
(bad)
xor
fcmovnu
ss
xor
ret
adc
int3
ficomp
(bad)
pop
add
sqrtps
sahf
(bad)
push
cmp
jb
mov
imul
leave
mov
pop
ja
jbe
mov
sbb
adc
xchg
jbe
adc
push
scas
shl
adc
rcl
mov
sub
inc
xchg
retf
mov
sbb
xor
xor
push
imul
xor
dec
jnp
push
dec
xor
push
xor
(bad)
adc
jns
cmp
pop
retf
mov
cmps
cmp
btc
retf
xchg
xchg
xchg
xchg
(bad)
sbb
add
aas
rsqrtps
push
jns
push
mov
int3
adc
jne
cmc
mov
xchg
out
mov
movs
cmp
ins
fwait
ins
into
xor
int
scas
inc
popa
daa
mov
lgs
cmps
cmp
loop
pop
jl
mov
or
into
(bad)
mov
lea
movsx
(bad)
or
inc
movsx
jb
js
mov
movs
(bad)
int
add
jnp
dec
dec
and
xor
sbb
fstp
adc
(bad)
pop
rcl
mov
pushf
mov
cmp
rcr
sahf
(bad)
push
rcl
(bad)
push
cs
cmp
(bad)
dec
loope
pop
loopne
in
sbb
or
jbe
gs
and
mov
icebp
adc
mov
or
push
rcr
add
daa
sbb
push
inc
pushf
pushf
fmul
bswap
or
inc
ret
popf
cmp
jnp
mov
or
dec
pop
mov
leave
enter
aad
push
dec
xlat
dec
dec
dec
inc
mov
fst
or
add
adc
add
loopne
mov
adc
mov
ins
ficom
inc
xchg
retf
ss
mul
sbb
pop
push
sbb
sbb
mov
mov
rcr
push
xor
sbb
movs
lods
test
fidiv
aam
adc
repnz
(bad)
(bad)
mov
pop
in
(bad)
(bad)
(bad)
pop
dec
jno
jb
(bad)
jge
xchg
addr16
push
test
punpcklbw
sbb
mov
adc
(bad)
cs
rcr
leave
jae
iret
pop
push
xchg
call
dec
dec
inc
mov
fxch
push
xchg
adc
or
daa
leave
xchg
fisttp
cmp
hlt
xor
into
and
adc
leave
int
data16
and
imul
data16
enter
add
pop
fisubr
cmp
movs
sbb
addr16
and
ins
mov
sbb
xor
xor
repz
sub
adc
(bad)
cmovle
xor
xchg
fisttp
retf
push
stc
sub
fst
pop
add
add
adc
adc
adc
xor
movs
imul
jnp
add
sub
fcom
rcr
fisttp
add
dec
in
outs
ins
in
lock
in
rcr
out
push
out
ins
and
adc
ins
lock
hlt
xchg
dec
ja
daa
clc
adc
jbe
rol
push
mov
push
pop
xor
ins
outs
push
push
adc
fnsave
ins
adc
pop
cmp
dec
jae
jecxz
add
ins
in
cs
mov
lock
cmp
cmp
adc
cmp
out
jge
pop
jae
fcmovnu
adc
repz
mov
inc
stc
adc
in
dec
push
push
jbe
frstor
jne
inc
fsub
adc
cmps
xchg
retf
jle
sahf
ret
xchg
adc
xor
(bad)
nop
arpl
jae
pushf
ins
adc
mov
dec
rcr
xor
dec
adc
ss
shr
movs
push
call
cmp
pop
aam
and
and
mov
paddusw
loop
push
call
fcmovnbe
jo
aam
and
push
mov
dec
imul
sub
and
inc
add
imul
cmp
xchg
data16
sbb
adc
push
add
lea
push
sub
and
mov
xchg
jnp
fwait
adc
inc
adc
push
adc
shl
add
cmp
inc
and
sub
add
mov
cmp
add
push
mov
popf
pop
adc
inc
cs
outs
jb
sbb
fisubr
add
push
or
mov
imul
enter
push
mov
rol
adc
scas
dec
or
mov
adc
sub
or
fucom
adc
call
nop
sbb
mov
das
sub
push
les
sub
inc
(bad)
jns
das
repnz
mov
push
or
adc
not
data16
sbb
mov
imul
jmp
mov
mov
sahf
ret
fcmovnu
sbb
adc
ror
jno
stos
push
inc
(bad)
imul
push
sbb
jecxz
das
in
jb
mov
sahf
mov
in
sbb
stc
adc
int
jecxz
cmp
inc
jae
in
xor
jae
fcmovnu
not
sub
jne
adc
pop
cmp
out
sahf
adc
push
xchg
xchg
pop
push
xchg
jae
mov
sub
imul
inc
adc
out
and
add
inc
sub
add
push
out
repnz
movs
adc
inc
jp
jnp
pop
xchg
jbe
inc
adc
fwait
into
xor
out
adc
push
cmp
cmp
popf
cmps
stos
push
sub
pushw
das
jbe
adc
adc
jne
sti
inc
or
pop
or
ins
sub
daa
(bad)
pop
popf
sub
int3
mov
pop
popf
sbb
aam
sbb
test
push
aad
enter
sbb
mov
leave
enter
push
inc
shl
jb
lahf
adc
push
add
shl
inc
mov
cdq
sbb
leave
sbb
leave
dec
fwait
pusha
inc
pop
sbb
push
xor
sbb
ja
mov
ins
inc
sbb
ins
add
xor
push
dec
and
push
push
sub
iret
movs
add
pop
stos
adc
cdq
mov
adc
jae
lods
out
sub
ret
cs
cdq
repnz
pop
adc
xor
popa
int
adc
add
into
movs
xor
imul
xor
cmp
fdiv
idiv
cli
xor
push
xor
or
int3
xor
xor
jae
push
scas
pop
xor
(bad)
pop
ins
xchg
ret
pop
sbb
dec
jbe
aaa
sbb
adc
lea
pop
jns
scas
fdivp
mov
pop
sbb
mov
dec
dec
(bad)
sbb
scas
outs
jnp
fwait
sbb
arpl
(bad)
adc
xchg
cmps
jns
lods
adc
push
push
fisub
rol
xchg
not
es
aaa
sbb
add
mov
mov
aaa
add
jecxz
mov
cmp
jns
adc
add
inc
call
clc
add
pop
xor
outs
adc
dec
inc
cld
mov
sahf
jb
mov
mov
jge
cmovs
pop
imul
aaa
out
sbb
fistp
jns
and
imul
sbb
jns
cmp
or
leave
fcmovnu
adc
xlat
sub
cs
or
cmp
fistp
ins
sub
imul
nop
test
ins
aaa
jns
pop
and
aaa
(bad)
jmp
sbb
fwait
dec
(bad)
imul
repz
inc
ins
jmp
in
or
imul
sbb
mov
mov
inc
sub
push
mov
gs
xor
fiadd
sbb
not
aad
mov
cmps
jns
shr
unpcklps
sub
push
stos
xchg
add
cmp
xchg
mul
rol
sbb
dec
dec
imul
es
leavew
mov
sbb
mov
adc
ficomp
repnz
add
add
push
sub
push
fnstsw
mov
push
jne
jns
mov
pop
mov
cmp
out
adc
mov
in
movs
sbb
arpl
out
add
jo
add
jnp
and
sbb
int
dec
adc
adc
and
push
ins
mov
adc
inc
dec
cld
dec
fcmove
fld
and
inc
or
rcl
cmp
jecxz
mov
imul
ret
adc
sbb
add
xchg
mov
daa
fwait
out
imul
add
pop
aaa
leave
fcmovnu
jbe
push
adc
sub
mov
les
jge
mov
push
ret
add
cmp
adc
popa
out
mov
popa
push
(bad)
mov
daa
iret
js
les
sbb
mov
adc
cmp
mov
test
and
leave
jbe
js
mov
mov
and
sub
popa
jnp
imul
and
adc
es
clc
adc
cdq
jns
iret
jnp
int3
push
add
(bad)
retf
je
pop
mov
imul
inc
cmp
popa
jnp
dec
push
sbb
outs
sbb
adc
mov
leave
fld
adc
ins
push
inc
adc
fnstsw
iret
push
xchg
int
mov
into
inc
jno
push
inc
lahf
adc
repnz
imul
div
xor
outs
jb
mov
jnp
jge
loope
ins
adc
sub
inc
mov
sub
mov
pop
mov
fidivr
ror
ret
div
jae
xor
in
dec
ficomp
xor
dec
movs
mov
ins
in
add
sub
aam
ror
and
out
cmp
rcr
sets
nop
inc
jle
outs
nop
push
imul
pop
fidivr
add
sbb
xor
mov
ret
int
xor
cwde
mov
ins
ss
ja
cmp
adc
push
jge
mov
pop
ja
push
aad
aaa
push
inc
shr
xlat
repz
les
cmp
sub
call
cmp
inc
adc
fcmovnb
ins
adc
pop
inc
add
inc
fidivr
xchg
sbb
mul
sbb
jg
cmp
adc
cmp
in
shr
dec
ins
or
mov
adc
sub
call
push
cmp
dec
push
nop
into
fcmovne
idiv
or
sbb
mov
sbb
push
not
and
stc
aaa
push
cmp
dec
cli
sbb
ss
adc
jnp
mov
adc
sub
test
add
mov
or
lods
dec
retf
mov
int
leave
adc
mov
sub
xor
outs
jnp
dec
call
xchg
stc
outs
fwait
cs
sbb
mov
jns
mov
icebp
xchg
int3
mov
arpl
lods
loop
fwait
mov
int3
jg
inc
fstp
inc
int
inc
xchg
aaa
imul
push
outs
jnp
inc
inc
adc
lds
mov
fistp
call
fiadd
and
mov
sbb
lea
ret
xchg
rol
xor
ins
out
adc
hlt
imul
jb
jns
mov
movs
in
ins
mov
(bad)
sbb
mov
popa
inc
imul
inc
cmc
fcmovnu
outs
mov
rol
dec
jae
mov
jns
dec
dec
pop
adc
xchg
push
nop
jge
in
mov
inc
mov
int3
or
aaa
push
not
sbb
mov
ret
mov
push
mov
fwait
sub
ins
das
ins
mov
jle
imul
popf
mov
dec
adc
fimul
sbb
adc
mov
sahf
fwait
jnp
xor
sbb
jns
sbb
adc
aad
adc
mov
adc
push
add
inc
inc
ins
mov
mov
push
retf
loope
fdivp
adc
sub
(bad)
adc
sahf
inc
ja
cmc
adc
push
cmp
and
inc
ja
push
push
inc
xlat
fst
xchg
ins
adc
sbb
fmul
push
jns
push
fstp
movs
cmp
cli
fst
js
and
push
jmp
and
in
add
neg
or
and
pop
lods
jle
adc
iret
sbb
adc
adc
repnz
push
nop
out
add
mov
cmp
pop
push
jmp
sub
iret
call
fcmovne
fwait
mov
adc
scas
inc
outs
jnp
sbb
(bad)
sbb
adc
xor
outs
sub
push
adc
daa
shl
cmp
xor
ins
sbb
and
ins
das
or
sbb
adc
fstp
adc
stos
adc
inc
mul
in
movs
inc
fiadd
icebp
adc
inc
outs
repnz
dec
scas
pop
adc
add
add
inc
add
sti
or
inc
fsubrp
sbb
add
sub
fisub
dec
xchg
add
aaa
scas
mov
pop
call
cld
imul
pop
xchg
data16
inc
call
ret
sbb
sbb
fisub
cmps
loopne
mov
js
out
mov
jbe
xchg
sbb
fmul
enter
cld
sti
sti
ret
xchg
ss
out
sti
outs
imul
push
mov
dec
pop
xchg
repnz
(bad)
push
icebp
movs
dec
repnz
sbb
enter
fidiv
sbb
add
push
sbb
outs
aad
cmps
xchg
movs
in
sbb
pop
int
pop
adc
repz
js
mov
repnz
push
xchg
hlt
stc
mov
pop
cs
sti
cmps
repnz
jno
push
add
jns
push
dec
mov
pop
aas
jp
pop
push
popa
aas
xchg
push
jns
push
pusha
pop
push
push
jnp
push
jne
cmp
push
push
aas
push
pop
aas
jle
iret
cmp
push
dec
push
push
dec
push
mov
jg
bound
gs
xchg
cmps
jnp
push
fs
push
pop
aas
sbb
cmp
push
pop
aas
push
ja
xor
movs
push
js
jns
push
jbe
push
mov
dec
test
jb
sub
dec
push
jl
xchg
jge
sahf
jnp
push
jp
push
jnp
add
push
sub
dec
in
mov
fst
mov
test
sbb
or
cmps
push
xchg
mov
shl
mov
mov
cwde
sahf
(bad)
cmp
iret
movs
push
ins
add
out
jnp
das
push
imul
aas
cmps
fdiv
imul
aas
out
sub
push
nop
aas
test
movs
push
sahf
jnp
(bad)
aas
push
aam
cs
jae
cmp
aad
push
xchg
aas
scas
out
mov
xchg
aas
push
xchg
aas
not
mov
push
call
popf
dec
push
cwde
aas
mov
in
out
push
xchg
aas
push
cdq
aas
push
sahf
imul
lahf
push
mov
neg
jae
push
mov
push
lods
aas
jnp
sub
lods
push
stos
aas
push
stos
aas
out
popf
sahf
push
ret
test
out
mov
push
push
cmps
push
push
loope
cmp
push
lds
loopne
fld
cs
ss
fimul
(bad)
stos
push
(bad)
ja
sahf
fwait
cmp
adc
dec
push
je
imul
movs
jmp
fistp
retf
ficomp
inc
int3
inc
pop
in
out
push
std
dec
push
in
ds
neg
push
push
out
push
in
push
rcr
shl
jnp
in
scas
adc
xor
jmp
aad
movs
adc
fadd
cmp
or
test
xchg
dec
xor
retf
mov
popf
inc
mov
push
dec
movs
cmp
push
xchg
xchg
xlat
xchg
cmps
test
int3
ret
jns
retf
(bad)
dec
or
sbb
mov
xor
(bad)
sbb
in
jbe
cmp
xor
(bad)
adc
fs
(bad)
mov
imul
sub
cmps
jmp
retf
(bad)
not
sbb
xor
ficom
fs
dec
dec
shl
fcom
push
int
mov
add
or
rcr
inc
sbb
sbb
or
mov
add
fmul
outs
cwde
int
not
sub
xor
push
mov
movs
cmp
das
add
push
outs
add
push
push
movs
inc
push
jo
add
cmp
adc
inc
push
aaa
gs
test
cmp
push
cmp
jno
add
test
arpl
mov
inc
push
fs
movs
jnp
push
mov
push
jae
pop
gs
out
jnp
inc
inc
push
mov
push
mov
mov
inc
push
je
or
fdiv
adc
xor
inc
dec
not
or
imul
push
mov
neg
inc
imul
pop
or
adc
jnp
jnp
pop
xor
and
sahf
push
push
ds
test
dec
push
jl
add
sub
jbe
imul
mov
ins
push
js
punpckhdq
fdiv
xor
mov
jnp
mov
adc
xor
jb
sahf
push
jp
adc
mov
inc
push
ins
inc
push
jnp
adc
jnp
sub
push
gs
call
adc
cmp
outs
pop
sbb
jno
call
jae
inc
jmp
rcl
push
je
and
rcl
jne
jbe
ja
xor
cmps
sub
jns
imul
jnp
jl
call
ss
movs
mov
add
push
imul
lods
rcl
xchg
pusha
push
sub
out
sub
ret
dec
fst
out
push
ret
pop
bound
push
das
arpl
cmps
xor
push
push
pop
lds
(bad)
das
gs
push
(bad)
sar
push
push
retf
xchg
cmps
jnp
push
push
push
das
push
repnz
int3
imul
fst
push
int
pop
pop
imul
imul
jmp
ror
pop
pop
outs
dec
sar
das
outs
pop
repnz
push
jns
pop
jo
aad
(bad)
pop
in
lods
jno
pop
push
pusha
jb
xlat
cmps
xor
push
push
popa
pop
jae
push
je
imul
rcl
arpl
xchg
test
sub
mov
call
stos
dec
stos
cmp
scas
mov
xor
push
cmps
pop
lods
ss
cmp
call
cmp
mov
cmps
xor
push
push
lods
das
mov
push
je
imul
movs
push
sahf
shr
aas
dec
movs
test
push
imul
cmps
rcl
ins
xlat
ins
fldenv
fnsave
or
sub
xor
sbb
add
or
pop
sub
or
push
sub
adc
cmp
cmp
ds
sub
inc
inc
imul
push
push
call
sbb
pop
and
imul
movs
xor
adc
pop
sbb
push
xor
push
add
inc
shl
add
xor
aaa
xor
aaa
xor
out
test
push
call
inc
sub
cmp
xor
je
dec
shl
adc
mov
push
lahf
mov
adc
and
xlat
unpckhps
dec
mov
add
add
leave
ins
push
test
movq
fcmovne
xor
or
shr
rcl
adc
push
adc
jnp
and
and
xor
pop
es
sub
call
push
sbb
xor
add
retf
je
cmp
adc
sub
dec
xchg
retf
bound
fs
test
jb
sub
jbe
ja
jb
pop
cmp
pop
sub
jge
retf
test
test
mov
movs
jb
xchg
lods
mov
sub
xchg
retf
jmp
pop
in
mov
mov
popf
jne
call
mov
test
movs
dec
xlat
clc
pusha
jbe
dec
shr
dec
imul
or
lahf
dec
movs
push
ficomp
aas
or
inc
or
or
or
call
inc
or
arpl
push
inc
push
push
inc
dec
push
imul
ins
test
or
fs
or
sub
cli
stos
repnz
dec
inc
mov
fst
mov
push
sahf
push
inc
push
bound
gs
push
sahf
push
inc
sub
inc
mov
push
inc
xlat
jbe
imul
cmp
cmp
pop
xor
lods
jnp
pop
pop
push
push
sbb
test
xchg
pop
sub
dec
dec
push
retf
test
test
push
push
pop
push
xchg
retf
pop
pop
pop
pop
pop
jb
pop
sub
pop
bound
xchg
retf
gs
jb
pop
imul
leave
jno
sub
je
mov
sub
jbe
ja
sub
js
adc
add
jnp
dec
jl
mov
adc
mov
ds
cmp
(bad)
(bad)
jne
popf
and
shl
cld
enter
fcmove
xor
add
dec
fdiv
push
ficomp
add
add
dec
jno
lods
jnp
cmp
rol
jb
mov
retf
jns
cmc
add
dec
sti
and
push
jb
shl
imul
movs
hlt
cmps
popa
push
iret
cmp
rcl
jae
push
push
shr
cmps
pop
call
lock
js
cdq
test
jns
mov
jg
je
push
imul
dec
mov
retf
stos
lds
in
pusha
loopne
aam
jne
movs
jge
movs
test
stos
mov
jae
movs
loopne
fidivr
or
fisub
ret
sahf
sti
fidiv
and
and
neg
out
push
adc
xchg
neg
out
adc
retf
outs
adc
or
js
mov
push
mov
lds
in
adc
loope
shr
or
jmp
inc
jo
mov
out
xchg
xor
imul
ja
pusha
dec
mov
mov
lods
enter
test
add
inc
std
fcomi
mov
mov
fcom
sub
int
xlat
and
scas
jb
lock
mov
mov
mov
repz
mov
push
ja
xchg
dec
mov
add
inc
cmps
push
inc
sbb
hlt
push
fcmove
lock
mov
(bad)
fstp
and
sahf
mov
stc
lock
gs
pop
and
out
pop
push
mov
popf
jnp
out
mov
add
ficomp
shl
mov
ins
adc
jno
jl
jae
ins
fistp
mov
sbb
mov
push
mov
inc
and
mov
mov
fstp
jle
push
mov
iret
pop
jg
adc
inc
push
and
retfw
popf
(bad)
shl
xchg
out
mov
addr16
ret
loopne
jnp
sub
xor
mov
les
xchg
adc
push
and
(bad)
cmp
adc
loop
adc
fcom
jne
ja
es
jae
sbb
sbb
xor
test
xor
neg
jecxz
push
sub
out
mov
push
xchg
retf
in
xor
push
push
xchg
int3
out
jne
imul
cmp
fdiv
sbb
push
sub
xchg
iret
jne
inc
rol
add
(bad)
fisub
add
fs
jnp
dec
and
fist
xor
jnp
jmp
rcl
sbb
rcl
add
aad
mov
jnp
cmps
(bad)
sbb
out
adc
ror
xor
aad
ret
ins
xor
mov
arpl
shr
xor
stc
inc
mov
sub
(bad)
xor
dec
sti
dec
repz
sbb
in
cmp
pop
popa
call
fldenv
jae
mov
rcr
sbb
and
cmp
outs
rcr
cmp
pop
xchg
adc
fisubr
scas
fstp
ret
shr
(bad)
in
je
loopne
xor
ds
(bad)
push
fidiv
dec
call
bound
mov
(bad)
outs
and
aaa
fnsave
adc
aas
pop
fild
sti
fist
lock
fiadd
mov
sbb
add
addr16
push
inc
pop
fcompp
jne
fcmovnu
out
inc
pop
and
sbb
push
fidiv
add
jmp
inc
sbb
ds
adc
lods
es
int
shl
fbstp
movs
jge
push
outs
jecxz
dec
sub
push
sahf
jnp
out
test
test
xchg
loopne
sar
dec
in
loope
mov
dec
add
out
mov
and
imul
mov
dec
in
dec
scas
and
sub
repz
xchg
push
in
push
out
repz
sbb
pop
push
outs
pop
out
xchg
sar
push
xchg
pop
jmp
test
stc
jmp
push
and
ss
push
adc
push
xor
push
push
push
inc
shl
push
out
jecxz
sub
adc
push
cmc
inc
in
clc
imul
adc
mov
out
mov
jae
cli
pop
in
fwait
sub
out
pop
push
out
jae
add
sti
popa
jnp
inc
test
and
jnp
movs
icebp
std
adc
and
fsub
adc
xor
push
mov
sti
ds
gs
mul
rcr
hlt
das
push
popf
lock
adc
shl
push
pushf
add
push
call
dec
in
dec
test
push
cwde
imul
cmps
push
fwait
pop
sbb
add
movs
sub
out
mov
aas
ss
add
fst
movs
add
dec
call
push
imul
mov
neg
jae
push
push
das
push
xchg
pop
push
test
pop
movs
push
pop
xchg
cs
mov
lahf
sar
push
lods
dec
sub
and
sub
push
fcmovb
add
femms
or
das
xor
push
pop
imul
push
test
ins
or
mov
test
ds
movs
mov
push
movq
dec
loopne
cmc
adc
push
add
sub
jne
sbb
jb
mov
fwait
cwde
(bad)
mov
adc
push
adc
push
add
xlat
push
cmp
sbb
jae
fild
pop
das
mov
push
cmp
inc
imul
dec
sbb
xchg
push
pop
push
sbb
sahf
jo
push
fiadd
scas
push
sbb
cmps
enter
push
sbb
rcl
cs
add
xchg
test
xor
aam
cmps
imul
or
inc
dec
lock
jne
push
push
pop
mov
push
(bad)
xlat
push
add
mov
(bad)
pop
mov
pop
aas
push
sahf
das
xor
and
pop
add
lock
and
xor
mov
xor
(bad)
and
mov
test
push
mov
sbb
cmp
jge
push
arpl
inc
adc
dec
neg
sub
jae
cmp
es
push
pop
dec
push
dec
jmp
xlat
push
stos
aas
pushw
daa
das
sbb
imul
pop
movs
test
and
cmp
imul
fistp
jne
repnz
sub
out
cmps
push
pop
movs
sbb
push
xor
cmp
mov
add
mov
jmp
add
and
push
xor
xor
push
xor
aaa
jmp
cmp
adc
dec
movs
cmp
popa
cmp
sbb
xchg
imul
push
cmp
iret
xor
dec
adc
xor
imul
imul
push
inc
pop
lods
inc
sar
sysenter
inc
pop
xchg
inc
jne
in
push
inc
xchg
sbb
shr
dec
movs
push
inc
movs
pop
mov
inc
cmps
shl
(bad)
loopne
in
loopne
xchg
nop
push
jle
je
adc
es
adc
and
ror
aaa
pop
add
neg
add
push
mov
xchg
cmps
mov
xchg
push
lea
dec
dec
dec
les
dec
push
jg
jnp
mov
movsd
dec
js
inc
cmps
jmp
sahf
and
and
stos
jl
mov
push
dec
int
test
retf
lahf
cs
(bad)
cmps
shr
aam
push
fist
lods
imul
mov
push
imul
xor
mov
outs
and
adc
add
jnp
add
sbb
and
push
pop
sub
push
sub
jmp
pop
aas
call
pop
pop
push
pop
xlat
push
pop
xchg
lahf
jns
pop
lods
dec
push
jns
push
pop
test
pop
mov
xchg
cmps
repnz
out
sbb
cmp
pop
and
push
fs
dec
dec
movs
push
xor
stos
mov
test
mov
xchg
push
call
add
dec
movs
test
mov
jne
jecxz
ins
out
push
ins
(bad)
movs
test
outs
repz
mov
inc
cmp
ds
xchg
pop
xchg
(bad)
mov
xor
or
jb
lods
xor
xor
mov
jae
jp
pop
lods
xor
push
jne
jmp
dec
(bad)
jnp
jbe
jl
ja
loope
ror
clc
and
jge
js
jg
jns
call
jnp
scas
push
xchg
sar
xsha256
cmps
rcl
jle
jg
movs
test
or
sub
repz
xlat
push
cld
xchg
sbb
pop
mov
mov
push
call
xchg
push
call
mov
(bad)
dec
imul
test
mov
xchg
(bad)
iret
jecxz
xchg
mov
sub
mov
xchg
inc
xchg
push
cwde
fild
cdq
aas
popf
outs
mov
movs
jne
test
call
shr
jo
fwait
pop
push
pushf
push
jns
test
add
dec
lahf
fwait
pop
mov
cmp
xor
outs
scas
imul
push
pop
xchg
push
mov
(bad)
movs
cmps
mov
test
push
cmps
push
sub
xchg
cmps
ja
add
rcl
add
cmp
mov
mov
pop
call
imul
repz
xor
xor
jg
cwde
dec
movs
jne
jae
mov
test
mov
mov
pop
imul
add
sar
add
imul
add
xor
xor
cmp
push
pop
imul
add
jne
add
jg
movs
(bad)
push
imul
leave
int
push
call
dec
in
cmps
std
int
lahf
add
adc
dec
push
imul
cmps
rcl
rcl
lea
repz
lahf
push
aad
add
dec
cmp
jo
retf
add
js
cs
or
sbb
mov
movs
mov
xchg
mov
cwde
inc
mov
push
inc
dec
daa
pop
and
dec
repz
push
mov
push
enter
jecxz
mov
lods
push
les
xchg
adc
adc
adc
or
stos
jno
fiadd
inc
dec
mov
or
imul
or
cmps
push
ret
ret
lods
push
sbb
lods
xchg
dec
test
ret
and
pop
int
ret
inc
movs
outs
or
jmp
mov
stos
adc
or
test
dec
fld
mov
scas
add
xchg
xor
jmp
(bad)
and
stos
and
retf
pop
dec
adc
test
nop
nop
dec
aaa
jmp
nop
inc
adc
cwde
adc
scas
dec
pop
fiadd
or
mov
pop
and
sub
jmp
lea
lahf
jmp
sub
adc
adc
sub
add
xchg
inc
or
outs
gs
mov
mov
jmp
sub
add
and
(bad)
or
(bad)
mov
stos
jb
loope
jno
xchg
sub
popf
sub
movs
add
cmp
in
fld
sub
movs
shr
pop
out
or
movs
rol
popa
xor
inc
mov
lods
add
pop
pop
mov
or
dec
mov
adc
adc
ret
cmc
adc
dec
xchg
mov
or
or
in
dec
rol
pop
outs
sbb
leave
jnp
sub
inc
mov
sbb
or
fwait
lods
cmc
push
repnz
popa
pop
or
and
add
ins
int
push
xchg
push
sub
lods
cdq
ror
cwde
rcr
add
fwait
inc
mov
mov
iret
pop
pop
test
sub
pop
test
mov
pop
outs
sub
mov
add
inc
add
jmp
sub
nop
push
jne
and
push
test
add
sub
pusha
adc
adc
adc
dec
pop
jo
dec
and
or
push
xchg
or
test
and
mov
add
aas
repz
je
dec
das
push
push
dec
movs
dec
ins
push
dec
xor
jo
pop
adc
adc
push
daa
test
jge
popa
aad
pop
pop
xor
sub
pop
pop
and
mov
adc
adc
adc
dec
and
add
test
mov
jno
jno
pop
xchg
add
cdq
adc
and
movs
inc
les
or
movs
xor
sbb
movs
ficom
and
sbb
mov
(bad)
dec
adc
adc
in
inc
push
inc
dec
add
ret
and
jmp
add
push
adc
test
mov
xchg
cwde
bound
sbb
sbb
outs
dec
ret
dec
or
or
jb
fwait
inc
sbb
fist
hlt
jne
push
push
popa
int
push
shl
mov
and
int
aas
and
and
das
mov
and
inc
imul
push
sub
iret
xor
xchg
adc
mov
xchg
push
ins
popa
adc
adc
test
inc
xor
add
dec
pop
das
pusha
aaa
test
sub
pop
imul
pop
iret
push
xor
or
aad
sub
xlat
adc
push
add
or
add
mov
ror
mov
or
inc
mov
sgdtd
sbb
leave
je
call
jle
ret
pop
or
cmp
mov
add
movs
pop
inc
mov
sub
movs
jecxz
stos
jae
push
sub
(bad)
and
lahf
lea
fld
mov
pop
movs
sbb
lahf
add
pusha
rsqrtps
and
mov
sbb
sub
mov
add
xchg
gs
mov
ror
or
push
add
stc
ror
mov
mov
ficom
ins
inc
and
or
xchg
ret
addr16
push
mov
mov
lods
retf
sbb
jae
lods
fcomp
(bad)
mov
push
add
and
shl
jmp
mov
xor
stos
mov
fdivrp
pop
movs
add
inc
int
add
dec
add
pop
pop
sub
out
enter
out
lods
sub
cmp
cmp
push
add
mov
ins
lods
addr16
stos
lods
test
out
bound
int
add
xchg
mov
lahf
xor
ret
mov
(bad)
lahf
sub
add
mov
test
adc
xchg
retf
pop
sbb
and
sub
pop
aaa
test
adc
mov
pop
(bad)
out
scas
xor
xor
sub
pop
push
pop
retf
test
inc
imul
icebp
pop
adc
and
adc
push
add
sbb
jmp
push
inc
test
shr
sbb
or
sbb
add
or
icebp
inc
or
push
push
sbb
mov
dec
jb
pop
sub
push
sub
pop
imul
jae
jb
adc
jbe
adc
inc
jecxz
xor
stc
cmp
xchg
dec
xchg
popf
pushf
mov
mov
stos
add
xchg
mov
jne
call
pusha
xor
pop
and
xchg
mov
mov
and
pop
dec
pop
bound
ss
sub
and
mov
mov
pop
or
daa
jne
and
out
fs
mov
iret
arpl
fdivr
mov
ret
dec
mov
in
cmps
aas
inc
or
dec
add
mov
ret
and
sub
ror
call
push
movs
mov
aas
popa
and
mov
fadd
in
xor
xchg
sbb
mov
sbb
inc
push
or
mov
add
add
and
adc
jmp
pusha
xor
fadd
pusha
mov
int
push
push
push
fsubr
sbb
push
and
adc
ins
das
test
popf
add
sbb
stos
ins
loopne
addr16
lods
ins
pusha
add
xor
pusha
mov
lds
ins
adc
add
imul
out
pop
xchg
mov
xchg
out
inc
ds
cmp
add
adc
rol
xor
sub
sub
xor
or
xor
xor
sub
xchg
add
xor
add
jno
and
mov
scas
dec
dec
adc
enter
xchg
cwde
xchg
pushf
gs
xchg
push
xchg
daa
and
lds
mov
xor
push
pusha
and
ror
lea
and
and
lea
dec
mov
lods
xchg
les
sub
(bad)
mov
mov
sub
mov
retf
or
and
inc
jns
and
inc
or
mov
and
xchg
ret
xchg
popa
cmp
mov
cmp
mov
mov
jge
inc
bound
dec
int
dec
ins
pop
repnz
inc
sub
add
dec
push
inc
or
xchg
dec
movs
add
jno
add
mov
xor
adc
mov
loope
inc
mov
loope
mov
and
jo
sub
and
and
repz
mov
shr
stos
inc
mov
sbb
jne
pop
mov
xchg
mov
pop
push
test
push
sub
sub
push
dec
pop
mov
sub
push
mov
iret
xchg
mov
test
xchg
ins
mov
inc
test
stos
je
dec
mov
xchg
test
dec
xchg
test
xchg
test
and
and
mov
sub
cs
dec
test
push
movs
dec
ret
and
inc
add
sbb
adc
and
add
and
inc
cmp
and
jnp
inc
adc
inc
add
push
and
mov
jmp
pop
nop
nop
push
(bad)
nop
data16
test
sub
bound
popa
add
or
arpl
nop
mov
jmp
add
push
sbb
xchg
sbb
loop
mov
mov
or
mov
call
mov
les
pop
shl
inc
add
cwde
pusha
sub
sbb
push
mov
(bad)
mov
cdq
bound
mov
xor
les
mov
mov
adc
popa
dec
lods
add
push
movs
add
test
les
stos
dec
lods
or
adc
add
mov
mov
(bad)
cmc
bound
mov
icebp
loope
lods
add
(bad)
rol
dec
lahf
inc
or
(bad)
xor
push
lea
cwde
inc
test
push
ja
xor
dec
test
retf
lea
mov
or
bound
mov
dec
lods
stos
inc
dec
adc
imul
xchg
jg
ret
mov
sub
cdq
cmc
rcl
imul
data16
mov
mov
adc
bound
lods
sbb
push
add
ret
sub
outs
adc
mov
and
and
movs
push
inc
cmp
push
inc
cmp
movs
pop
aas
mov
jae
add
sub
mov
pop
and
lods
add
push
sub
nop
mov
or
or
or
add
and
mov
or
and
lods
fist
pop
mul
adc
nop
nop
ss
or
inc
dec
and
jecxz
call
test
sbb
pop
or
cmp
pop
aaa
int
push
mov
xor
(bad)
and
inc
and
adc
dec
pop
add
rep
pop
adc
mov
cmp
lods
adc
xor
and
xor
nop
sbb
and
mov
and
arpl
sub
adc
add
dec
cmp
aaa
inc
adc
xor
cmp
ja
xchg
adc
nop
ss
or
arpl
or
dec
aaa
test
xor
sbb
adc
jno
push
and
aaa
lea
int
ficom
mov
and
arpl
inc
push
xchg
xor
push
ins
pop
xchg
test
xor
adc
xor
popa
fwait
adc
xor
outs
ror
popa
loope
adc
adc
jae
add
ss
inc
adc
add
ja
add
outs
add
sbb
adc
jo
jge
add
test
out
or
adc
test
fild
lds
adc
in
adc
mov
test
fstp
shl
add
inc
and
(bad)
test
sbb
test
push
and
sbb
adc
or
and
test
inc
daa
sub
adc
dec
int
push
psrlw
xor
pop
inc
mov
rcl
or
fld
and
imul
mov
and
xchg
push
inc
cmps
and
imul
stc
test
mov
icebp
shl
dec
or
xchg
adc
adc
sti
jne
test
or
mov
push
cwde
sub
cmps
mov
mov
or
jbe
inc
stos
push
(bad)
retf
or
push
mov
inc
inc
cs
ret
inc
test
(bad)
rol
dec
adc
mov
retf
add
sub
cmps
sbb
or
adc
add
or
add
test
mov
adc
adc
out
xor
std
add
xor
jecxz
add
sub
mov
aas
jge
mov
or
add
adc
adc
push
das
dec
out
inc
pusha
add
repz
mul
xor
inc
adc
inc
cdq
stc
adc
pushf
jecxz
or
std
adc
inc
push
and
sub
or
inc
inc
data16
add
push
inc
fwait
test
xchg
mov
cmps
xchg
call
dec
xor
call
xchg
or
fwait
inc
sbb
adc
dec
adc
popa
fsub
sub
lea
jbe
aaa
iret
dec
arpl
rcr
pop
xchg
arpl
(bad)
int
pop
ss
dec
pop
dec
sub
cmps
inc
popa
add
or
ins
lods
push
mov
pop
mov
(bad)
cdq
in
mov
retf
add
sbb
cmps
mov
mov
imul
dec
arpl
jbe
imul
cmp
push
sbb
out
bound
jbe
pop
sub
dec
and
bound
pop
jmp
sbb
pop
bound
sahf
pop
leave
fs
dec
and
adc
out
add
retf
inc
sub
mov
mov
xor
fmul
add
dec
scas
pusha
dec
push
sbb
sbb
ins
push
pop
cdq
stos
dec
pop
es
sub
sub
ins
movs
mov
(bad)
jg
adc
mov
(bad)
cmp
jnp
loope
ret
fild
test
add
mov
adc
lods
xchg
sbb
xchg
movs
test
adc
(bad)
pop
xchg
pop
sbb
inc
movs
daa
or
or
icebp
add
push
ins
cdq
icebp
lea
inc
pop
movs
xchg
mov
cdq
sbb
mov
dec
not
add
pop
(bad)
sbb
fdiv
push
sub
mov
add
add
scas
in
push
jns
push
fwait
dec
mov
mov
xlat
mov
adc
ja
fbstp
repz
xchg
pop
and
and
adc
lds
stos
inc
add
adc
cmc
and
add
daa
bound
jbe
pop
pusha
cmp
rcr
and
jg
(bad)
(bad)
push
dec
dec
mov
test
adc
(bad)
sar
mov
push
lods
adc
test
gs
ins
rcr
arpl
ins
cdq
dec
arpl
lods
push
adc
inc
adc
mov
mov
pop
scas
ret
push
sub
sub
mov
in
sti
imul
mov
mov
test
or
movs
sbb
cmp
add
mov
movs
or
popa
or
mov
adc
cdq
pop
inc
xor
inc
inc
and
test
jnp
add
or
repz
ret
push
sbb
movs
lea
mov
and
and
mov
xor
cmp
and
pop
xor
inc
xor
fld
ss
inc
arpl
(bad)
mov
arpl
push
rcr
dec
popf
cmp
(bad)
xchg
rcr
inc
arpl
sbb
fsubr
mov
lahf
xchg
xor
retf
mov
mov
dec
stc
arpl
mov
pop
or
xchg
xor
arpl
sbb
cmps
iret
fst
push
call
inc
and
xchg
fsubr
sti
bound
mov
inc
xchg
jbe
pop
dec
cmc
test
mov
fsubr
and
push
jno
and
sbb
and
add
fidiv
outs
push
add
pop
jmp
pop
adc
xor
fcomp
leave
pop
bound
popa
movs
dec
add
inc
cmp
and
lods
rcl
loope
sbb
movs
mov
fisub
dec
ins
movs
and
test
icebp
xor
mov
test
and
nop
inc
xor
mov
mov
mov
pop
aam
sti
stos
test
push
retf
pop
push
push
mov
mov
aam
pop
push
aam
adc
mov
in
mov
mov
mov
xor
test
aam
mul
inc
adc
mov
mov
inc
ja
mov
push
pop
aam
pop
mul
xlat
test
rol
jge
mov
mov
sbb
inc
ja
sbb
sub
ss
inc
daa
dec
mov
inc
sub
stos
pop
inc
shr
add
cdq
add
stos
add
mov
sub
mov
test
add
dec
add
add
inc
add
imul
inc
pop
add
inc
add
nop
inc
add
mov
add
jecxz
test
add
nop
add
push
mov
(bad)
jmp
mov
sub
dec
jnp
ins
movs
fidivr
das
xor
test
dec
xor
ja
xor
add
mov
shr
or
dec
xor
and
cmp
add
das
add
jecxz
mov
xchg
rcl
and
inc
xchg
or
bsr
pop
dec
and
lea
sub
fmul
and
adc
inc
pusha
and
jo
shr
push
add
or
sbb
and
push
xor
mov
and
adc
xor
dec
pusha
adc
and
sbb
cmp
add
inc
and
xor
push
aad
pusha
inc
xchg
rol
jbe
sbb
and
push
gs
mov
jl
je
add
add
imul
or
push
test
pop
and
movs
ret
or
mov
pop
ss
inc
cmp
neg
shr
or
inc
imul
leave
jmp
or
das
adc
imul
adc
or
add
add
sub
imul
shr
scas
sbb
fld
je
pop
or
adc
add
sbb
xchg
and
push
push
add
dec
movs
shr
mov
pop
add
xchg
mov
aad
jae
sbb
xchg
pop
mov
xor
je
outs
push
outs
add
jne
pop
aaa
fld
nop
(bad)
add
adc
neg
pop
add
fild
add
xchg
mov
sar
inc
jg
pusha
pop
add
add
add
mov
add
imul
xchg
es
popa
xor
inc
imul
sub
xchg
popf
call
das
add
or
ror
sub
rol
dec
add
cmp
push
jmp
ret
ins
inc
add
or
fadd
aad
fadd
test
inc
mov
movs
aad
cmp
or
movs
rol
and
or
movs
xchg
gs
add
cmp
mov
mov
pop
or
aad
push
or
xor
aas
pusha
adc
mov
fiadd
sub
inc
sbb
shr
cmp
lahf
or
pop
int
add
add
mov
ror
add
mov
aaa
inc
fsubr
add
or
sub
mul
adc
or
lds
mov
or
add
std
adc
or
aaa
xchg
xchg
adc
mov
push
fld
xchg
imul
sub
imul
adc
adc
inc
nop
push
shl
lea
(bad)
mov
popf
add
mov
and
adc
out
pusha
and
adc
inc
popa
fwait
adc
adc
inc
pusha
cmp
lds
pusha
adc
sbb
jecxz
pusha
pop
sbb
adc
and
or
sub
add
ret
mov
pop
shl
add
or
dec
add
mov
push
dec
aas
dec
add
add
add
stc
cmovns
add
push
rol
inc
inc
dec
loopne
xchg
add
aad
arpl
dec
pusha
aad
in
sbb
adc
mov
inc
int3
add
int
addr16
xor
data16
int
adc
adc
push
mov
mov
in
test
rol
dec
add
and
fwait
test
mov
or
inc
xor
stos
and
xchg
ror
or
and
adc
(bad)
add
mov
xchg
ror
jg
nop
inc
sub
and
mov
adc
jge
inc
and
cdq
inc
add
or
lods
imul
and
and
cmc
mov
and
and
or
or
add
mov
sar
rol
movs
dec
shl
mov
and
movs
or
push
lahf
movs
add
fwait
mov
push
sub
retf
or
ins
xchg
xor
and
or
mov
and
and
loopne
xor
retf
jge
add
or
and
add
xor
inc
jmp
pop
iret
inc
stos
xor
cmc
add
sbb
and
sub
adc
xor
jmp
xor
sbb
dec
and
dec
and
sbb
sub
test
dec
xchg
shl
lea
(bad)
je
dec
adc
pop
sub
xchg
les
imul
pop
xchg
xchg
adc
shl
xchg
(bad)
cmps
or
mov
xor
jne
pop
xor
add
(bad)
jmp
(bad)
xor
mov
xor
inc
sub
cmps
mov
or
pop
mov
sbb
push
xchg
ins
movs
adc
es
aas
jmp
sub
fstp
and
sbb
test
ret
mov
push
inc
xchg
inc
sbb
cmp
jae
sbb
rcr
dec
dec
aaa
lea
xchg
jne
mov
push
(bad)
xchg
std
or
mov
adc
ret
nop
push
xchg
adc
inc
or
and
jne
int
lea
(bad)
sbb
pop
ss
push
(bad)
push
aam
bound
sbb
and
rcl
or
(bad)
jmp
int
add
adc
jge
and
movs
push
push
mov
and
stos
and
push
cmp
movs
inc
ror
and
adc
pop
sub
mov
dec
add
push
cmp
xor
add
adc
cwde
and
pusha
xchg
outs
or
or
sbb
cmps
xchg
and
and
dec
adc
test
or
sub
push
jbe
popf
jne
mov
pmuludq
bswap
mov
das
enter
add
rdmsr
mov
ja
and
(bad)
or
or
scas
jl
push
pop
add
xchg
add
xchg
or
xlat
shl
push
punpckhwd
pop
jns
jg
adc
xchg
adc
out
jns
mov
adc
push
pcmpeqw
inc
sbb
pop
pmaxub
push
ficom
test
sbb
push
call
sbb
add
push
(bad)
scas
pop
pop
jns
je
sub
add
push
pop
add
push
fidiv
bswap
test
and
mov
repnz
inc
xchg
and
fadd
xchg
add
pop
xor
shl
sub
cld
sub
pop
imul
dec
jmp
push
add
jg
xor
pop
shl
iret
shl
outs
adc
cmp
dec
out
scas
imul
divps
push
call
xchg
xchg
push
fisubr
dec
outs
fwait
add
cli
popf
add
mov
cmp
jns
(bad)
mov
jns
mov
xchg
add
adc
inc
mov
inc
dec
in
mov
pusha
jl
inc
jle
mov
bound
retf
in
ror
dec
jg
xchg
add
dec
sbb
pop
add
dec
das
fidiv
cmp
mov
call
je
dec
push
inc
shl
fisttp
mov
int3
push
lahf
sbb
add
mov
dec
in
call
pop
iret
pop
(bad)
cmps
rcr
das
jbe
cmovge
pop
mov
pusha
push
imul
jo
jmp
pop
xchg
gs
data16
je
je
test
das
adc
je
mov
ret
ins
pop
pop
movs
es
ins
(bad)
hlt
lea
pop
dec
outs
stos
mov
das
mov
jno
jb
dec
dec
and
fbld
mov
mov
xlat
je
mov
das
imul
leave
jp
sub
imul
sar
push
call
add
push
add
pcmpgtd
xor
sbb
dec
shl
lods
xchg
push
dec
xadd
iret
call
xlat
je
into
mov
dec
add
pushf
mov
scas
cmps
imul
nop
call
call
and
xchg
mov
ret
push
mov
jge
lods
xor
sar
outs
cwde
scas
es
out
test
ficomp
xor
sbb
pop
popf
fbld
cmps
mov
(bad)
fadd
pop
mov
je
pop
iret
cmc
movs
out
jnp
inc
shl
scas
cmps
pop
sub
cmps
jne
pmulhuw
frstor
scas
stos
lahf
mov
hlt
mov
scas
lahf
or
scas
fistp
pop
xchg
lods
xor
xor
inc
(bad)
test
stos
mov
dec
mov
cmp
mov
scas
dec
xlat
mov
mov
mov
pop
mov
je
loope
pop
xchg
ficom
mov
dec
test
xchg
mov
scas
cmps
ret
ror
rcr
ret
call
shl
lahf
mov
xor
(bad)
fild
(bad)
lahf
mov
add
out
jnp
repz
inc
ror
push
inc
retf
das
outs
mov
xor
xor
or
pop
jne
xor
call
rol
ret
mov
and
iret
js
(bad)
dec
sub
lahf
sbb
mov
mov
dec
mov
lahf
inc
(bad)
pop
(bad)
pop
xchg
pop
gs
or
loope
dec
loop
cmps
push
sar
jecxz
in
jg
push
loop
outs
jns
scas
jmp
call
imul
mov
fsubrp
(bad)
jmp
in
bts
sbb
out
(bad)
out
scas
cwde
lock
daa
inc
or
test
repnz
or
push
pushf
xchg
lahf
lahf
hlt
xlat
xor
sbb
xchg
cmc
out
retf
neg
jb
jl
call
add
and
or
cli
shl
mov
cld
das
pop
mov
std
sub
xlat
dec
add
cmp
cli
mov
pop
add
sbb
add
(bad)
sahf
add
test
rcr
scas
jne
push
inc
lfs
(bad)
pop
xchg
add
dec
unpcklps
cmovge
jo
jle
(bad)
or
sub
(bad)
sahf
or
mov
(bad)
rcl
pop
pop
add
je
scas
mov
push
sub
psubsw
sbb
cmp
sbb
pop
imul
sbb
push
push
ds
pop
mov
adc
and
clc
and
cmps
sub
out
fisubr
outs
shl
sub
sub
call
cmovae
mov
aas
dec
xor
imul
movs
imul
push
push
aam
shl
iret
inc
cmp
test
jmp
xor
fidivr
outs
sub
xchg
cmp
outs
aas
push
xor
cmps
mov
inc
dec
adc
popf
rcr
loop
push
je
je
xchg
inc
pop
ds
pop
inc
movs
imul
inc
mov
jmp
scas
outs
fs
imul
push
dec
das
into
dec
jg
dec
push
sub
movs
js
cmovns
call
push
push
xchg
cmps
rcl
lea
shl
xor
scas
out
push
jno
push
scas
(bad)
push
cli
das
pop
mov
jle
cmovno
pop
add
dec
jb
add
retf
mov
mov
jns
mov
pop
je
(bad)
scas
push
out
pusha
jg
popa
setbe
add
(bad)
fs
sbb
scas
mov
or
adc
push
dec
(bad)
push
cmp
fidiv
out
out
inc
add
shl
cs
mov
jp
pop
jb
push
pop
imul
push
jbe
(bad)
mov
psubd
jns
push
cmps
push
push
imul
imul
add
mov
push
push
and
into
test
iret
sub
sub
fld
dec
(bad)
cmps
inc
xchg
mov
or
pop
popf
xor
mov
cmp
arpl
test
push
push
push
loope
nop
fild
pop
scas
jmp
(bad)
xchg
bndstx
push
xchg
dec
imul
xor
inc
fistp
bswap
call
(bad)
pushf
pop
popf
das
cmps
ja
sahf
pop
aad
dec
xor
out
mov
dec
jno
clts
jne
mov
stos
movs
pop
sbb
call
push
test
test
mov
stos
(bad)
cmp
xor
scas
inc
dec
and
jl
pop
pop
mov
xchg
ds
aas
cmp
cmp
and
mov
xchg
xor
aam
inc
mov
xchg
jmp
mov
out
loop
dec
ja
bswap
mov
test
jle
mov
ror
in
cmps
mov
lahf
ret
in
or
dec
cdq
xchg
add
pop
cdq
push
jns
xchg
add
jl
iret
enter
add
leave
pand
out
rol
retf
or
dec
mov
fwait
add
cli
pop
iret
cmovp
add
pop
fisubr
aad
add
cmp
prefetchnta
aam
aad
xchg
push
fimul
dec
push
add
rcr
jle
fcomp
xor
call
inc
xchg
xor
pop
sbb
add
adc
pop
mov
push
sbb
pusha
xor
pop
repnz
xchg
lsl
add
out
sub
add
mov
lods
pop
test
ret
in
stos
xor
mov
imul
adc
mov
shl
rcl
shl
xor
aad
(bad)
cmp
xchg
retf
cmp
cmp
movs
jb
pop
cmp
cmp
pop
sub
loopne
retf
test
sub
jne
inc
out
jb
pop
dec
call
xchg
retf
dec
mov
imul
dec
lds
or
mov
mov
push
mov
stc
push
jno
push
pop
mov
or
outs
adc
outs
inc
pop
aas
inc
xchg
cwde
pop
cmp
adc
jo
xor
arpl
loope
push
inc
dec
add
mov
inc
inc
mov
push
adc
jno
push
jb
add
sub
push
jne
bound
add
and
or
jno
mov
or
or
pusha
lea
xchg
add
inc
adc
loop
cwde
mov
vmovhpd
aaa
mov
xchg
aas
or
xchg
aas
je
jo
jno
aas
jno
frstor
into
call
popf
mov
mov
les
inc
sub
adc
mov
adc
call
cmp
push
or
aaa
mov
stc
aam
test
adc
inc
sub
push
pop
adc
adc
outs
in
(bad)
retf
inc
push
inc
sbb
dec
lds
out
adc
adc
cwde
outs
fucom
sbb
push
mov
xchg
call
mov
push
sub
outs
shl
sub
sub
sub
pop
xchg
and
xchg
movs
mov
and
leave
and
not
stc
pop
popf
and
stos
test
pop
adc
inc
mov
xchg
inc
stos
inc
ss
bound
imul
scas
(bad)
mov
pop
stos
popa
lods
sbb
mov
movs
sbb
test
sbb
popa
xchg
inc
mov
leave
jne
popa
movs
sbb
daa
pop
and
mov
dec
and
ret
xchg
ror
cmp
mov
add
arpl
push
pop
xchg
(bad)
rol
and
and
and
mov
popf
es
cmp
imul
rol
or
inc
mov
xor
cmps
retf
cmp
push
xor
adc
popf
mov
adc
xor
sti
push
adc
xor
(bad)
(bad)
popa
bound
pop
sbb
aaa
cmp
les
cwde
pop
ds
xchg
test
call
stos
dec
rol
movs
cmc
imul
movs
mov
gs
cmps
xchg
inc
xchg
dec
adc
cmp
dec
xor
mov
or
mov
stos
push
xchg
dec
pop
sub
(bad)
dec
bound
fsub
jge
dec
push
movs
push
pop
aaa
test
sbb
dec
and
push
dec
push
xor
ins
jbe
leave
js
loope
adc
lahf
enter
test
mov
cdq
xchg
xor
add
jmp
push
enter
es
imul
bound
call
mov
mov
cdq
sbb
push
fwait
add
push
popa
shr
adc
(bad)
in
movs
cdq
les
mov
sub
mov
inc
pop
and
dec
adc
or
xchg
jnp
mov
adc
movs
pop
(bad)
mov
mov
adc
cmps
lea
dec
movs
mov
dec
mov
mov
sbb
leave
dec
xchg
add
dec
xchg
mov
xchg
je
dec
jns
(bad)
and
xlat
or
mov
je
jo
pop
lea
push
or
addr16
or
sbb
and
pop
xor
mov
adc
xchg
ror
sub
xchg
jnp
mov
sti
mov
dec
arpl
add
mov
arpl
ins
and
es
dec
jmp
adc
push
lods
rol
sub
stos
rol
sub
movs
stc
iret
sub
stos
retf
dec
test
jge
xor
xchg
adc
sbb
fist
(bad)
shl
cmps
cmp
mov
add
mov
mov
dec
lahf
adc
xor
and
push
add
imul
pop
jns
adc
xchg
ror
aas
push
pop
mov
xlat
or
pop
xor
arpl
xor
inc
xchg
xor
pop
xor
leave
pop
xchg
or
or
icebp
cmps
mov
cmp
ret
xchg
xor
mov
ja
adc
xor
push
xor
inc
pop
dec
xor
and
popf
js
and
test
adc
mov
lods
inc
jns
popa
lods
sbb
shr
mov
mov
xchg
mov
sbb
pop
pop
sbb
call
test
inc
movs
pop
inc
adc
or
sbb
xchg
xor
mov
test
mov
adc
and
sub
pop
test
xor
adc
dec
mov
xchg
stos
(bad)
xchg
mov
dec
mov
xor
add
rcr
push
retf
xor
dec
mov
test
scas
cmp
sbb
lds
cdq
push
xor
pop
lea
mov
lea
pop
ja
xor
pop
scas
xor
retf
pop
mov
mov
push
retf
sbb
and
imul
dec
sbb
lods
push
(bad)
mov
call
icebp
imul
sub
add
and
push
jb
add
xor
mov
pop
sbb
xor
and
jp
adc
and
inc
and
jle
lods
movs
inc
int3
add
stc
adc
ret
popf
xor
xor
mov
cmc
xor
pop
and
popa
sbb
fldcw
out
or
cmp
mov
(bad)
mov
or
xchg
dec
inc
je
sbb
cmc
mov
and
ret
sti
ss
popa
arpl
imul
test
push
fstp
jae
mov
sub
aad
sbb
push
push
mov
enter
push
xor
or
rcr
xor
adc
or
leave
pop
daa
ins
jge
(bad)
and
adc
jns
push
xor
xor
mov
data16
cdq
(bad)
loop
imul
sbb
addr16
(bad)
stos
add
jmp
(bad)
mov
push
sbb
add
add
test
mov
mov
sar
mov
ror
xor
or
fwait
or
adc
and
enter
in
push
movs
push
cmp
dec
xor
fimul
aaa
addr16
outs
push
push
outs
xor
xor
loope
xchg
fsub
jecxz
inc
bound
dec
lds
pop
mov
xchg
pop
pop
movs
test
jne
jo
gs
fimul
mov
pop
ror
rol
xchg
adc
mov
mov
dec
pop
and
and
or
inc
(bad)
inc
push
outs
pusha
in
es
lahf
rol
pop
sub
stc
shl
enter
jecxz
icebp
dec
gs
shl
pusha
movs
add
sbb
xchg
stos
icebp
fs
lgs
push
sbb
test
xchg
xchg
sub
sbb
xchg
or
test
test
test
sub
sbb
ja
mov
cmp
add
ss
test
ret
out
mov
jo
cmp
cmc
adc
sbb
sub
(bad)
and
jo
cdq
aas
jecxz
jno
lea
pushf
inc
sbb
cmp
sub
mov
aas
mov
mov
(bad)
mov
lods
mov
ja
leave
xchg
lea
arpl
popa
arpl
cmp
inc
xor
dec
jecxz
mov
(bad)
adc
and
push
arpl
sbb
arpl
push
and
pop
test
lea
adc
sar
sub
ror
dec
xor
inc
iret
(bad)
aas
invd
mov
inc
xchg
mov
(bad)
and
xchg
loope
cmp
leave
mov
loopne
inc
movs
mov
mov
or
or
out
sbb
cmp
dec
jmp
inc
jmp
inc
mov
and
jns
jno
xchg
lock
dec
imul
sbb
push
nop
and
pop
div
jmp
push
add
lods
shr
xchg
pop
mov
sbb
data16
mov
xchg
jmp
or
test
mov
add
daa
lods
aaa
cmps
rcr
push
test
call
lea
gs
test
aas
pop
gs
or
imul
push
test
pop
jno
push
test
xchg
fimul
adc
mul
nop
fiadd
xchg
test
mov
sub
mov
inc
mov
and
test
mov
aad
xor
sbb
inc
mov
add
cmp
fcom
sub
in
mov
mov
sbb
enter
mov
mov
shr
stc
mov
rol
and
sbb
or
dec
dec
ins
or
and
or
dec
sub
ins
inc
mov
or
inc
pop
jmp
and
mov
mov
adc
sbb
std
mov
popf
fs
cwde
sbb
cmp
mov
push
jns
inc
bound
nop
movlps
repnz
jle
nop
add
ja
outs
fadd
xor
mov
mov
xor
sbb
and
fisttp
xor
adc
mov
sub
movs
dec
es
les
adc
mov
sub
test
les
mov
iret
in
and
xchg
(bad)
cmp
sub
pop
and
push
xchg
clc
imul
ins
dec
jns
jno
mov
xchg
adc
loope
pop
mov
les
add
lea
mov
adc
or
add
and
outs
dec
or
sub
pop
xor
movs
psraw
or
sbb
push
in
icebp
mov
rol
sbb
mov
rdmsr
add
shl
mov
fwait
loope
nop
mov
pop
mov
xchg
cdq
xchg
stos
popa
in
sbb
push
ret
ret
cmp
ja
xchg
(bad)
(bad)
arpl
ret
dec
push
sub
or
sbb
add
daa
mov
icebp
shl
mov
mov
and
call
xchg
pop
add
push
pop
mov
pop
inc
mov
xor
scas
inc
or
daa
int
imul
outs
imul
bound
imul
jb
retf
mov
mov
mov
movs
mov
shl
add
inc
test
cmp
xor
add
dec
or
outs
mov
mov
push
xchg
sbb
adc
mov
cpuid
push
aam
push
inc
inc
ins
adc
push
mov
inc
fst
adc
mov
mov
aam
arpl
mov
add
jno
jmp
jbe
sbb
gs
xchg
movs
lea
imul
shld
dec
imul
jbe
dec
jns
imul
dec
(bad)
jne
push
rcl
out
xchg
mov
xor
pop
mov
rcr
imul
mov
xor
in
xor
cmps
scas
adc
jo
xor
or
dec
in
fisttp
add
pop
jne
or
arpl
sub
mov
and
xchg
sar
push
mov
or
test
push
push
sbb
fst
aam
sub
sub
in
ror
stos
xchg
fwait
jl
mov
imul
ins
sbb
jmp
xchg
jbe
test
movs
push
inc
ds
jne
rol
lds
(bad)
sub
imul
xchg
push
inc
aam
cmps
xchg
rol
push
fwait
dec
sub
aam
fwait
cmp
test
and
xchg
fiadd
repz
dec
or
in
push
inc
push
sub
sub
and
sbb
pop
cmp
jmp
sbb
sbb
pop
add
retf
rol
xchg
das
mov
imul
nop
pop
pop
dec
imul
jbe
(bad)
aad
ja
pop
lahf
jg
sub
nop
arpl
ja
push
ret
(bad)
jns
adc
pop
ins
push
test
imul
aaa
lods
stos
ret
or
repz
push
jne
add
inc
or
push
xchg
test
(bad)
pop
push
mov
and
frstor
xor
mov
sub
mov
enter
imul
or
and
sub
xchg
xchg
jno
adc
ss
pop
inc
iret
out
mov
fst
sub
jmp
dec
pop
ja
rol
mov
(bad)
xchg
pusha
in
cdq
inc
mov
jae
cmps
xchg
dec
push
test
cdq
fisub
mov
aam
cmps
int
in
and
in
dec
arpl
push
sub
sub
mov
aam
test
dec
ins
fst
out
jne
mov
push
call
adc
push
sub
pop
or
lea
add
mov
mov
in
movs
imul
ins
jmp
or
dec
fwait
sub
ror
aad
scas
mov
add
jbe
dec
fisubr
pop
push
addr16
inc
sar
mov
cmp
inc
and
mov
or
ins
push
test
dec
frstor
adc
push
aam
push
inc
mov
mov
xchg
or
jno
mov
push
mov
mov
shl
jne
test
lods
aaa
and
or
add
imul
imul
test
xchg
dec
arpl
pop
mov
rcl
in
mov
and
fs
mov
push
pop
cmp
jb
add
mov
loope
pop
add
adc
cmps
jbe
jnp
fs
test
pop
test
das
dec
push
dec
sub
enter
in
push
cmps
pop
inc
pop
sub
push
aaa
test
mov
or
enter
push
inc
push
inc
dec
push
lahf
pop
adc
inc
sahf
sub
gs
jbe
sbb
jo
xchg
ror
push
cmp
fidiv
jbe
daa
dec
xchg
js
repnz
imul
xlat
or
sub
or
cs
mov
xchg
jne
dec
mov
frstor
xor
xor
es
stos
dec
xor
sbb
jmp
xchg
inc
xor
mov
nop
push
pop
mov
and
inc
pop
aam
push
add
mov
jmp
push
mov
(bad)
or
add
sbb
sub
inc
in
movq
jmp
push
pop
sbb
retf
rcl
sub
mov
shr
cmp
call
xchg
xchg
stc
xchg
jne
mov
mov
pop
fwait
fs
push
sub
fwait
popa
lods
xchg
pop
add
xor
fwait
jnp
lods
ss
aad
inc
push
cmp
xchg
xor
mov
sbb
ins
mov
xchg
push
in
aam
fnstsw
and
and
add
ins
adc
or
inc
out
sbb
or
ret
lea
add
test
inc
sahf
sub
outs
rcl
bound
sub
mov
retf
and
adc
fimul
jne
popf
xchg
ss
jmp
sub
pop
popf
test
nop
jne
lods
or
mov
inc
jecxz
(bad)
pop
loope
sbb
mov
adc
pop
add
nop
dec
push
push
gs
push
xor
mov
shr
es
aaa
mov
or
mov
inc
push
xor
or
push
aam
xlat
stos
arpl
in
adc
sub
pop
or
lea
add
test
dec
aaa
sbb
(bad)
rcl
nop
addr16
gs
fild
add
push
fisub
push
lods
aad
jbe
ja
sub
mov
jne
mov
retf
and
xchg
lods
jae
jbe
ficom
or
pop
or
sub
lods
lea
add
lods
test
mov
adc
and
call
nop
push
sbb
dec
sbb
aam
push
xchg
movs
outs
and
test
punpckhdq
mov
sub
test
mov
and
xchg
jnp
addr16
aaa
mov
sub
nop
ins
das
sbb
add
sbb
movs
or
pop
ins
imul
mov
aad
or
pop
fstp
cmp
adc
jp
mov
xchg
ja
jne
mov
inc
fs
enter
xor
dec
ret
imul
lea
add
xchg
inc
frstor
imul
call
dec
ror
cwde
pop
popa
mov
cmps
push
inc
xchg
fimul
cdq
aam
movs
push
loope
pop
push
xor
push
mov
addr16
pop
dec
pop
mov
cmp
test
or
fimul
fwait
cdq
adc
sbb
push
rol
xchg
push
push
lahf
imul
dec
fwait
sub
xchg
jmp
inc
jmp
push
jo
inc
mov
rcr
pop
jne
lods
fstp
arpl
or
(bad)
and
and
or
test
fwait
pusha
sub
(bad)
es
mov
push
rcl
dec
push
in
dec
in
xor
test
pop
xchg
fimul
aam
movs
push
stc
or
dec
in
dec
addr16
outs
jne
jle
mov
push
test
xchg
cdq
push
sbb
stos
or
xchg
mov
xor
outs
dec
cmp
pop
mov
fcmovbe
pop
movs
sub
fs
ss
ficom
fucomip
lahf
xor
(bad)
imul
xor
pop
dec
std
dec
push
pop
dec
imul
stos
pop
fiadd
and
adc
push
push
ret
pop
shr
dec
fstp
mov
movs
push
adc
test
dec
pop
sub
xchg
push
dec
fistp
imul
and
xchg
push
dec
pop
addr16
imul
inc
daa
test
fisub
imul
xor
(bad)
shl
xchg
inc
jp
(bad)
xchg
fstp
mov
mov
sar
fistp
fild
movs
ja
(bad)
jg
leave
leave
leave
adc
leave
leave
leave
leave
call
leave
leave
leave
in
in
out
out
leave
leave
leave
leave
lock
repnz
imul
push
fisubr
pop
stc
leave
stc
ins
or
mov
dec
stos
or
push
sbb
inc
outs
mov
fst
xchg
je
ja
jb
popf
sub
imul
dec
sbb
mov
daa
dec
out
mov
and
ror
dec
inc
mov
xchg
pop
or
addr16
pop
fidiv
push
cmp
sbb
shr
jbe
fistp
call
pop
cmp
(bad)
xchg
push
pop
xchg
movs
dec
xchg
xchg
popa
imul
shl
rcl
sbb
retf
dec
movs
inc
dec
jmp
jbe
int
lahf
cs
sbb
sub
fnstenv
jmp
cmps
xor
sbb
scas
test
dec
xchg
ss
adc
cmp
mov
xchg
je
add
cmp
mov
aas
(bad)
mov
test
mov
(bad)
fidivr
mov
jb
push
les
dec
xchg
mov
inc
shl
movs
fwait
sub
loope
push
in
jbe
mov
mov
ror
fist
fistp
shr
adc
call
lahf
pop
pop
pop
pusha
pushf
pushf
pushf
pushf
popa
bound
call
add
fnsave
ins
sub
shl
mov
xchg
jg
fidiv
jg
push
cmp
mov
xchg
js
mov
push
jnp
xor
dec
push
jge
xchg
push
jns
mov
push
shl
xor
add
pop
xchg
jb
movs
mov
popa
cmps
mov
and
xchg
inc
mov
ins
mov
fisttp
mov
xchg
ficom
mov
inc
dec
inc
std
xchg
pop
sbb
gs
cwde
pop
xchg
movs
ja
call
dec
mov
leave
mov
cld
mov
mov
movs
adc
cmp
pop
leave
xor
imul
sbb
push
push
pop
dec
jmp
xchg
rcr
cs
mov
sbb
mov
mov
mov
mov
mov
add
shl
dec
inc
mov
mov
shl
(bad)
xchg
cs
rol
dec
imul
push
mov
(bad)
jg
(bad)
push
or
push
sbb
xchg
rol
loopne
inc
mov
inc
sahf
call
aad
aaa
mov
add
fcomp
daa
fcmovu
(bad)
daa
daa
daa
daa
(bad)
loopne
daa
daa
daa
daa
loop
in
daa
daa
daa
daa
out
call
daa
jmp
daa
out
out
lock
daa
daa
daa
daa
repnz
cmc
daa
daa
daa
daa
div
clc
stc
daa
daa
daa
daa
cli
sti
cld
std
add
daa
(bad)
inc
pop
mov
add
add
jmp
stos
add
or
retf
pop
add
add
or
dec
add
add
mov
mov
int
add
lods
mov
add
mov
pop
stc
(bad)
inc
pop
fwait
pop
cmc
lods
mov
rcl
push
pop
fwait
ins
inc
mov
int
fwait
imul
mov
aas
(bad)
add
jne
in
xchg
mov
ins
aad
pop
or
ret
nop
mov
(bad)
fstp
fs
jg
pop
xchg
lods
add
shl
aas
lods
adc
dec
sub
pop
adc
and
mov
push
repz
xchg
imul
dec
sbb
or
cmps
adc
nop
(bad)
push
imul
(bad)
push
sbb
mov
test
pop
mov
pop
sbb
push
pop
(bad)
or
mov
and
mov
and
pop
imul
(bad)
outs
sbb
mov
mov
and
cmps
sbb
mov
(bad)
or
movs
jecxz
mov
sub
mov
sti
or
bound
fwait
ret
add
add
sub
sub
adc
ins
inc
stos
add
sbb
movs
cmps
mov
(bad)
jecxz
add
cmp
(bad)
dec
push
imul
movs
jmp
pusha
scas
add
cmp
dec
mov
(bad)
imul
or
or
or
xor
or
add
js
pfrcpit1
rcl
adc
dec
xlat
push
fisubr
add
aas
addr16
lea
dec
pop
pop
xchg
cmps
inc
shl
outs
int3
(bad)
imul
xchg
ja
fist
add
fisubr
pop
das
mov
test
and
ja
popf
arpl
push
imul
bswap
daa
in
mov
sub
call
dec
sub
push
cs
das
jae
movs
test
jg
retf
daa
xor
or
xor
jo
ss
retf
fisttp
pop
arpl
add
jmp
psllw
mov
cmp
cmp
sahf
cmp
cmp
dec
aas
cmps
rcl
inc
mov
inc
xchg
inc
adc
rcpps
movs
test
inc
inc
push
imul
dec
mov
push
call
dec
dec
shr
push
orps
pop
pop
dec
shl
pcmpeqb
pop
imul
push
dec
add
push
(bad)
imul
push
pop
mov
xor
rdtsc
pop
pop
lods
imul
xor
in
add
pop
(bad)
add
pop
bndldx
and
pusha
shl
add
bound
in
imul
dec
arpl
pop
xor
daa
gs
cmp
mov
addr16
ss
xchg
cmps
xor
push
ja
je
imul
add
xlat
pop
push
ret
outs
(bad)
push
outs
pop
out
push
pop
imul
add
jne
js
jae
pop
inc
cmove
dec
push
pop
jne
and
aaa
xor
call
outs
jns
xacquire
pop
sbb
into
mov
pop
les
out
pop
push
dec
push
imul
push
call
sub
call
sub
xchg
xchg
dec
bound
lahf
and
mov
mov
mov
test
mov
pop
mov
retf
jns
(bad)
xchg
mov
rdtsc
push
fsubp
in
add
add
xchg
setbe
xor
cwde
push
call
bound
rcr
popf
pop
xor
cmps
int
xlat
lahf
stc
cmps
retf
sbb
add
xlat
je
sbb
das
xchg
movs
out
aam
add
xlat
xchg
movs
push
cmps
cmovs
cmps
dec
rcr
dec
test
push
call
test
scas
scas
scas
fisubr
dec
movs
mov
mov
mov
cmps
xor
bndstx
mov
mov
mov
out
or
push
arpl
or
add
imul
mov
cmps
cmp
popf
jecxz
mov
(bad)
ror
pop
ret
push
aas
imul
jo
scas
test
enter
push
fmulp
pop
push
retf
xor
retf
addr16
imul
hlt
sysenter
xchg
ja
dec
into
pop
sbb
add
xchg
shr
call
ror
xchg
push
add
mov
imul
call
lods
add
inc
xchg
aas
pop
(bad)
sbb
fistp
cmps
repnz
test
xor
fimul
cmps
imul
test
push
in
jnp
push
pop
ins
xor
in
shl
in
pop
out
imul
inc
jmp
call
sub
out
das
ss
pop
fucomi
sbb
mov
and
lock
cmp
icebp
push
scas
jmp
dec
repz
jb
xsha256
cmps
rcl
cmc
mov
jns
imul
or
pop
cli
push
fdivrp
xor
sti
pop
mov
push
bswap
(bad)
push
iret
mov
push
add
stos
ja
add
imul
imul
push
cmp
comiss
or
or
cmp
pop
shl
outs
sar
add
mov
maxps
divps
add
push
call
adc
jo
sub
sbb
fisttp
adc
imul
sbb
jge
push
imul
mov
sbb
jno
sbb
pushf
push
lods
mov
inc
add
sub
divps
cmps
xor
or
and
dec
xlat
push
and
cmps
repnz
unpcklps
sub
add
mov
mov
add
movs
sub
popf
popa
in
sub
subps
test
test
xor
sub
xor
aas
les
xor
ja
and
in
ss
add
ds
out
movs
test
(bad)
add
lahf
and
cmp
cmp
xchg
ja
jns
dec
add
cmp
ds
xlat
push
fidiv
add
inc
aas
mov
inc
pslld
push
add
movs
test
add
jmp
dec
dec
dec
lahf
cmp
push
call
dec
pmovmskb
sub
dec
sbb
js
pop
push
imul
push
dec
jecxz
jo
xor
add
mov
pop
call
pop
push
(bad)
push
por
inc
add
mov
pop
mov
sub
pop
dec
pop
jl
add
dec
ja
cmps
pop
add
aas
out
pusha
(bad)
in
push
jmp
bound
(bad)
cmps
imul
leave
fs
daa
gs
mov
pop
add
jl
das
mov
jmp
jecxz
add
push
xchg
ins
arpl
or
(bad)
xlat
je
scas
outs
out
jle
cmovne
xor
jb
sub
jae
je
xor
shr
pop
jne
fnstenv
jg
push
fimul
add
jns
cmp
jp
jnp
xchg
push
fisubr
fisub
and
jge
jle
call
or
xor
adc
add
jb
sbb
push
pop
imul
xchg
xlat
xchg
mov
mov
imul
lea
mov
scas
jmp
mov
rcl
mov
dec
movs
jmp
mov
call
in
mov
sbb
packsswb
imul
popf
jg
sahf
out
mov
mov
shl
pop
int3
mov
fsub
ins
add
aad
sub
(bad)
arpl
psllq
fstp
lods
pop
lods
outs
sub
add
pop
scas
punpcklwd
jns
mov
shl
mov
mov
push
xchg
dec
shl
pop
addr16
rcl
mov
mov
xchg
mov
loop
jns
mov
sub
xlat
je
xchg
loope
jmp
mov
ret
pop
pusha
idiv
call
jbe
(bad)
outs
push
cmps
push
push
enter
scas
mov
retf
add
scas
js
int3
jmp
jns
int
into
cmpxchg8b
jns
iret
mov
rcr
jo
add
ficom
rcr
test
add
stos
aad
dec
rol
dec
rcl
lea
retf
call
fld
add
dec
movs
jmp
mov
jns
je
(bad)
paddq
out
dec
pop
loopne
rol
je
xchg
loop
nop
xchg
psllw
(bad)
into
mov
xchg
(bad)
jmp
xchg
out
out
dec
cmps
cli
jg
hlt
pmovmskb
fdivr
inc
push
imul
add
pop
jns
pop
adc
mov
out
mov
adc
pop
mov
lahf
cld
or
add
das
out
mov
xchg
add
lahf
aas
jg
mov
add
and
add
sbb
add
dec
aam
jbe
dec
loopne
mov
imul
or
xchg
sahf
ins
mov
add
punpcklbw
sub
mov
add
pop
loop
jmp
dec
movs
aas
cdq
movs
xcrypt-ofb
cmps
imul
movs
push
ret
or
retf
into
or
xor
mov
xlat
push
fimul
inc
pushf
add
mov
in
comiss
add
mov
xlat
push
clc
adc
add
mov
rcl
mov
push
pop
push
dec
add
stc
sbb
(bad)
xor
loope
sbb
and
bndstx
dec
movs
test
add
add
pushf
fmul
add
pushf
pop
or
xchg
mov
xlat
xchg
add
adc
adc
leave
add
fs
fisttp
or
daa
daa
daa
or
mov
ja
unpcklps
daa
daa
daa
daa
cmp
push
pop
stc
xor
daa
scas
movlps
daa
or
xchg
mov
pop
cmp
mov
push
aas
or
sysret
or
or
add
xchg
ret
mov
fstp
femms
unpckhps
in
in
pop
sbb
outs
leave
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
pop
and
and
leave
leave
leave
and
leave
daa
sub
sub
leave
leave
leave
sub
cs
ss
xor
add
jns
repnz
pop
add
sbb
mov
inc
jo
sbb
xchg
mov
and
xor
jg
enter
jmp
pop
pop
add
out
push
add
outs
lock
rep
cs
add
ss
aaa
fdivp
ins
mov
or
or
cli
js
cmp
mov
popa
lods
dec
stos
ror
(bad)
cli
arpl
stos
mov
in
fisub
lods
dec
stos
shl
addr16
scas
shr
lock
icebp
cmp
repz
repz
cmc
imul
repz
stc
rol
pop
int
mov
ret
pop
les
lds
(bad)
fldcw
pop
mov
or
or
imul
mov
ins
ss
or
outs
or
iret
repz
out
call
iret
repz
in
out
out
hlt
fwait
int
mov
or
test
out
aaa
adc
into
or
or
jns
out
or
or
or
out
jmp
out
in
in
out
out
or
jns
out
or
or
or
fstp
or
or
or
jae
mov
ins
or
or
out
fimul
out
out
jmp
out
in
in
out
out
lock
jns
int
adc
adc
adc
out
or
jns
out
or
or
jns
mov
or
or
jns
jnp
idiv
jl
jge
out
out
jns
out
jmp
out
lahf
out
out
or
or
or
or
push
or
jno
jb
jae
mov
ins
or
or
dec
push
push
ins
ss
int
push
add
push
add
add
fld
push
pop
pop
or
ror
jns
out
rcl
aam
(bad)
jnp
sahf
out
fcomp
and
int
add
add
add
and
fldcw
pop
sub
sub
sub
int
sub
adc
das
int
mov
sbb
sbb
sbb
sbb
sbb
jbe
adc
inc
push
add
fldcw
inc
add
add
fisub
pop
dec
or
nop
dec
xchg
xchg
out
sahf
out
xchg
xchg
xchg
xchg
ins
jbe
sahf
cwde
cdq
imul
adc
data16
ins
adc
outs
adc
jo
cmp
adc
je
fldcw
jne
jbe
ja
js
jns
int
mov
jp
jnp
jl
jecxz
pop
dec
shl
out
push
daa
lock
pop
fwait
int
mov
loope
loop
jecxz
in
in
mov
ins
ss
out
call
iret
repz
hlt
cmc
stc
cmp
repz
clc
stc
adc
fwait
int
mov
sbb
sbb
sbb
adc
ss
sbb
sbb
sbb
sbb
fwait
int
inc
sbb
dec
sbb
dec
sbb
fldcw
dec
sbb
dec
sbb
repz
dec
sbb
rcl
rcl
cmp
repz
(bad)
xlat
fcomp
int
ret
neg
inc
sbb
sbb
ins
ss
sbb
xchg
out
addr16
sbb
sahf
out
sahf
xchg
xchg
xchg
xchg
xchg
cwde
int
repz
push
sbb
push
sbb
ins
ss
sbb
sbb
push
sbb
data16
sbb
mov
mov
jns
out
mov
mov
data16
sahf
mov
inc
sbb
sbb
ss
int
sbb
sbb
sbb
sbb
sbb
mov
dec
sbb
push
push
iret
repz
push
push
push
push
push
pop
cdq
sub
cmp
mov
ins
fild
ja
js
jns
out
mov
and
and
jns
out
test
fild
lods
sub
sub
push
data16
ins
sub
sub
push
ins
ss
int
pop
xor
pop
xor
pop
dec
popa
mov
xor
xor
mov
and
int
mov
and
and
push
and
push
imul
and
ins
ss
ins
adc
outs
adc
iret
repz
jb
je
jbe
cmp
repz
jns
jnp
in
cmp
jg
push
sub
and
cmp
add
inc
ds
repz
and
and
and
cmp
repz
and
and
ss
int
cmp
outs
adc
jno
cmp
ins
daa
jb
jae
mov
iret
repz
js
jp
repz
repz
jle
or
cmp
add
xchg
cmp
repz
repz
xchg
xchg
xchg
xchg
xchg
xchg
cmp
repz
cwde
cdq
call
test
in
in
out
iret
repz
out
lock
repnz
cmp
repz
div
clc
stc
repz
repz
sti
cld
std
(bad)
ins
jg
(bad)
push
js
data16
add
jp
jnp
jl
out
ss
jge
jle
jg
or
out
sahf
add
sahf
out
mov
jns
out
mov
jo
xchg
xchg
cwde
or
lock
adc
fwait
int
mov
add
add
and
mov
ins
ss
sub
sub
cmp
cmp
mov
sbb
mov
int
outs
add
and
add
add
ins
ss
and
add
daa
fwait
int
mov
sub
sub
push
inc
push
inc
push
mov
ins
ss
push
inc
push
inc
push
inc
push
ss
int
inc
pop
inc
pop
dec
pop
push
pop
dec
pop
outs
mov
ins
dec
pop
dec
pop
dec
pop
dec
add
cmp
repz
add
xchg
mov
fwait
int
dec
mov
mov
mov
mov
mov
mov
ins
push
mov
push
mov
push
mov
pop
mov
out
push
push
cmps
cmps
cmps
cmps
cmps
mov
out
cmps
cmps
cmps
inc
or
iret
repz
out
jmp
fdiv
cmp
out
out
xchg
ss
ins
or
xor
or
ins
push
xor
test
ins
ss
imul
jae
fld
fmul
(bad)
add
fwait
int
test
add
data16
pop
test
rcl
jns
out
rcl
aam
(bad)
out
lahf
out
fcomp
test
jns
stos
stos
stos
stos
stos
stos
push
test
jns
stos
stos
push
stos
mov
ins
ss
add
add
add
add
aaa
fwait
int
add
clc
or
or
mov
push
adc
inc
clc
sahf
ins
push
push
push
sar
es
push
push
(bad)
(bad)
inc
inc
or
ins
ss
lods
js
push
add
add
add
add
fadd
or
push
or
int
mov
adc
sbb
adc
fldcw
adc
and
and
fwait
int
mov
sbb
pop
sbb
sbb
ins
ss
pop
pop
and
popa
and
arpl
and
push
arpl
mov
cmp
sub
sub
ins
ss
sub
imul
int
mov
xor
xor
outs
inc
ins
imul
fiadd
inc
and
sahf
inc
pop
dec
es
fidivr
adc
adc
dec
ds
repz
repz
push
push
push
push
sbb
out
push
jbe
ss
shl
cmp
out
pop
pop
add
cmp
jnp
pop
jle
popa
push
bound
out
jns
mul
push
addr16
push
fidiv
ins
ins
push
outs
outs
jnp
out
jo
jno
jae
push
mov
cmp
jne
or
sub
fcmovnb
and
enter
adc
cwde
mov
ins
and
dec
popa
shr
rol
aaa
(bad)
cs
sbb
fwait
int
xor
push
add
add
xchg
fldcw
cmps
push
cmps
pop
test
mov
cs
or
pop
push
add
pop
sbb
pop
sbb
pop
adc
push
pop
push
adc
sbb
ins
mov
mov
inc
push
add
inc
int
mov
add
adc
inc
adc
popf
out
mov
pop
or
data16
add
adc
pop
adc
js
sahf
out
ds
jnp
jge
ds
out
jg
call
fwait
int
mov
arpl
add
addr16
ins
or
imul
fwait
int
push
ins
pop
ins
and
outs
and
mov
ins
and
jb
jae
je
ss
int
jne
jbe
ja
js
jns
data16
pusha
jp
jnp
jl
jge
fldcw
jle
push
rcl
add
fwait
int
mov
push
add
pop
or
cmp
aaa
or
data16
push
pop
ins
ss
int
pop
and
popa
and
arpl
jne
fldenv
adc
data16
cmps
push
mov
jns
ins
outs
outs
add
add
add
data16
ins
add
add
push
iret
repz
or
or
or
or
fdivp
cmp
push
ucomiss
adc
sahf
out
adc
out
iret
pop
sbb
sbb
sbb
sahf
out
sbb
sahf
idiv
and
sahf
out
sub
sub
sub
repz
sub
xor
sahf
out
cs
sahf
idiv
cmp
cmp
jnp
jnp
scas
inc
inc
push
inc
mov
out
jns
inc
inc
push
dec
dec
dec
cmps
neg
repz
dec
outs
dec
(bad)
push
cs
jnp
push
push
push
ss
push
push
pop
ss
ins
iret
pop
pop
push
sub
sub
fldcw
pop
push
push
pusha
or
bound
out
pusha
rcr
rcl
rcl
out
sahf
out
rcl
rcl
sahf
out
sahf
rcl
rcl
rcl
mov
push
and
adc
test
ror
add
add
xor
int
add
outs
xor
dec
fimul
ror
fmul
cmp
repz
fcmovnu
fstp
repz
repz
loope
jecxz
repz
in
out
call
cmp
jmp
in
out
repz
repz
lock
repnz
repz
hlt
cmc
div
clc
stc
cmp
repz
sti
cld
std
(bad)
mov
mov
jmp
push
ss
lds
or
add
add
sub
sbb
cmp
xor
and
xchg
push
(bad)
(bad)
les
fsubr
pop
in
add
mov
enter
sub
cmp
push
(bad)
mov
sahf
mov
mov
add
jb
dec
xor
cdq
in
add
ins
inc
dec
test
test
pop
ror
mov
pop
jo
pusha
shl
xchg
add
psubb
or
add
push
out
lahf
cmps
fldcw
neg
out
(bad)
cmp
cmp
add
loopne
lock
and
paddb
(bad)
aas
and
ficomp
das
ds
xchg
pop
lock
push
add
std
cmp
outs
cmp
mov
stos
mov
inc
jb
push
jbe
out
into
repz
sbb
push
js
dec
sahf
xchg
pusha
inc
pop
rol
inc
inc
pop
inc
lock
push
xor
push
cdq
dec
mov
ins
xor
jg
test
cmp
jmp
jo
jp
dec
and
int
or
and
in
push
retf
xorps
dec
fld
loopne
pop
outs
pop
add
mov
mov
lock
aas
mov
pop
es
rol
ja
jnp
inc
pop
outs
daa
(bad)
sbb
cdq
scas
add
pusha
aaa
add
sahf
push
nop
add
xlat
pop
sbb
sub
dec
out
mov
add
inc
nop
jo
dec
in
ds
jle
add
lds
pop
in
fs
adc
adc
out
inc
aas
nop
aas
xor
add
xchg
push
les
cld
push
cmp
mov
ins
push
fsubr
aaa
add
lds
lock
aaa
and
sbb
inc
fwait
int
(bad)
jge
cmp
sbb
push
sub
mov
ins
ss
add
inc
add
popa
push
pusha
xor
sbb
push
push
sbb
inc
in
aaa
cmps
ins
scas
add
(bad)
push
xor
in
clc
aam
not
clc
fcomp
jl
sbb
ins
fwait
int
push
sbb
or
test
cs
xchg
mov
and
repz
pop
pop
rep
xchg
rcl
or
mov
add
dec
xor
call
into
pop
(bad)
cmps
and
add
repz
push
cmp
pop
rol
sbb
adc
add
adc
add
div
pop
cld
and
jns
iret
icebp
pop
aas
popw
push
ins
in
(bad)
cld
add
pop
or
cmp
in
aas
(bad)
je
pop
or
jo
lock
pop
or
add
loope
fld
add
fdiv
retf
inc
push
pusha
retf
(bad)
and
fisubr
and
inc
inc
inc
sahf
out
sahf
inc
inc
pusha
pusha
pusha
pusha
ins
lahf
out
pusha
pusha
pusha
pusha
loopne
sahf
xlat
popf
out
add
jns
out
mov
out
sahf
out
mov
out
sahf
rol
rol
jns
out
loopne
loopne
loopne
add
out
loopne
loopne
mov
iret
repz
and
iret
and
inc
ds
shl
inc
ds
in
loopne
cmp
push
ds
push
shl
cmp
pushf
push
inc
inc
into
push
xchg
xchg
pop
loopne
push
ds
sbb
push
rcl
push
ds
in
or
push
ror
xor
inc
sbb
push
inc
inc
ins
jo
mov
inc
addr16
loopne
inc
loopne
sub
pusha
push
mov
out
and
and
and
and
inc
inc
inc
popf
popf
out
inc
inc
inc
clc
push
out
sahf
out
pusha
pusha
pusha
pusha
pusha
sahf
out
sahf
pusha
pusha
pusha
add
add
sahf
out
mov
out
sahf
mov
sar
jns
rol
shl
sahf
out
loopne
loopne
loopne
jo
loopne
(bad)
jge
out
in
loop
shl
sub
ds
repnz
inc
mov
push
inc
rol
inc
ds
jb
push
addr16
inc
shl
rcr
inc
inc
adc
push
inc
rcr
loopne
inc
inc
ds
push
rcl
jo
inc
inc
sar
inc
mov
loopne
push
fadd
and
push
cmp
sahf
and
xchg
inc
and
add
xor
sbb
mov
push
add
dec
add
mov
inc
movs
and
push
push
jns
stos
push
pop
scas
add
mov
and
mov
or
xor
fs
ror
xor
jb
stos
sub
(bad)
jg
mov
scas
jg
aaa
imul
in
aaa
repz
sbb
mov
aas
pop
jg
pop
pop
shl
and
adc
xor
push
jbe
test
xchg
mov
cmp
sub
imul
pop
push
mov
daa
sbb
cmp
(bad)
and
fnsave
xchg
cs
xor
fisub
adc
and
jae
fidiv
inc
cmp
clc
dec
push
dec
push
ja
int
mov
push
push
daa
or
xor
daa
xchg
fidiv
in
push
(bad)
sbb
sbb
add
inc
daa
mov
neg
adc
clc
ins
out
not
cmc
sbb
inc
mov
cmp
and
xchg
xchg
xor
cmp
aas
xchg
and
daa
in
pop
fs
push
movs
daa
dec
sub
fidivr
push
aas
push
xor
mov
loope
daa
cmp
cmp
jns
cmp
pop
push
es
mov
xchg
push
int3
push
and
jbe
mov
and
mov
cmp
pop
push
(bad)
cmp
and
fs
fs
xlat
push
pushf
sti
mov
retf
push
and
push
lods
enter
push
or
mov
xsavec
icebp
ss
push
xbegin
in
push
mov
pop
jo
call
ja
test
inc
inc
inc
or
sahf
(bad)
dec
push
pop
es
ins
movs
cld
mov
orps
aaa
jns
lods
dec
dec
pop
daa
mov
jns
enter
xchg
(bad)
jo
xchg
add
imul
daa
add
lods
push
popa
mov
add
ins
repz
out
inc
cmp
or
pushf
es
and
shr
add
inc
arpl
cmp
pop
jg
ds
shl
xor
arpl
cwde
pushf
clc
rol
xor
(bad)
lahf
rol
in
arpl
repz
out
fisttp
fcom
cmp
push
cmp
xor
daa
mov
push
aas
daa
dec
retf
jmp
inc
inc
es
mov
dec
add
jle
mov
fistp
xor
in
repz
outs
out
jecxz
jbe
pop
xor
fbstp
shl
nop
in
inc
xchg
sbb
or
stos
movs
xor
push
repz
or
daa
xor
idiv
cmps
arpl
aas
das
es
repnz
mov
daa
push
inc
sub
popf
rcr
ret
pop
and
sub
lods
and
push
sub
pop
inc
ins
pop
outs
data16
inc
push
lahf
cdq
enter
out
push
inc
mov
fwait
and
je
stos
inc
aas
call
ret
fsubr
popa
sbb
ins
lock
(bad)
loopne
and
pop
xor
dec
and
mov
mov
leave
stos
xor
ja
mov
mov
gs
or
jne
adc
cmove
or
stc
daa
int3
and
jle
adc
cdq
xchg
test
add
xchg
sbb
cmps
sbb
pushf
rcl
and
cmp
or
clc
or
sbb
sub
dec
xchg
xchg
fcom
daa
retf
outs
jnp
dec
xor
dec
xor
dec
daa
dec
(bad)
fsub
mov
dec
daa
clc
dec
je
neg
cmp
adc
adc
cmp
(bad)
dec
out
aas
push
jl
sbb
(bad)
ret
test
mov
xor
daa
or
call
cdq
retf
xor
mov
mov
push
sub
sbb
daa
repz
cwde
popa
or
movs
aaa
dec
add
mov
add
(bad)
jb
or
(bad)
and
push
sbb
(bad)
adc
mov
sub
ret
aas
push
mov
stos
adc
jg
xor
and
cmp
and
and
clc
shr
(bad)
(bad)
jmp
loop
add
push
inc
xchg
pushf
mov
(bad)
ret
retf
loopne
(bad)
aaa
data16
outs
ret
into
aaa
daa
and
pop
pushf
push
and
cwde
stos
sub
aaa
sub
pop
push
popa
daa
ins
mov
add
lds
push
les
mov
jno
sbb
in
sbb
inc
push
lahf
xor
fldenv
xchg
pop
dec
inc
mov
stos
mov
ror
push
aad
lds
(bad)
add
(bad)
vmread
test
(bad)
imul
test
mov
sub
dec
pop
dec
iret
sub
cmps
pusha
mov
popa
movs
cvtps2pi
lds
out
hlt
jg
add
mov
in
(bad)
repnz
mov
mov
movups
mov
ja
lods
neg
add
add
mov
adc
and
mov
cmp
mov
and
push
mov
mov
scas
out
(bad)
add
stos
repz
and
rcr
scas
jg
fild
rol
(bad)
lock
ja
jg
aaa
repz
pop
mov
aas
jg
sbb
pop
pop
sbb
jb
aaa
sbb
ja
or
xor
sbb
sar
daa
pop
ja
xchg
or
pop
lock
scas
mov
das
adc
mov
lldt
or
mov
push
xor
or
jae
clc
push
jg
aas
dec
mov
pop
out
lock
arpl
inc
les
push
pop
and
sbb
push
(bad)
jbe
mov
out
jae
popf
dec
(bad)
icebp
punpckhwd
jns
sbb
or
(bad)
in
mov
lock
dec
pop
add
retf
daa
sub
icebp
dec
xor
xor
fsubr
js
xor
pop
mov
lock
and
fcomi
psubsb
out
xchg
cmp
in
sbb
add
outs
fistp
dec
adc
iret
bound
jo
fmul
iret
mov
int3
iret
dec
(bad)
icebp
jg
add
adc
icebp
iret
adc
inc
mov
jg
and
pop
adc
lock
push
mov
adc
pop
adc
push
pop
push
and
xchg
jl
or
add
and
mov
inc
and
popa
mov
jae
xor
mov
fist
pop
mov
xor
dec
sbb
pop
xchg
test
pop
outs
bound
addr16
jmp
stos
ins
jb
je
jo
scas
(bad)
jbe
fs
and
fstp
jge
and
jo
popa
pop
das
or
xchg
shl
ins
mov
out
jnp
imul
gs
outs
sub
inc
jnp
imul
jecxz
cmp
jp
fistp
pop
or
addr16
imul
push
out
dec
ins
push
jo
je
in
cmp
push
dec
fs
sahf
stos
ret
xor
cmp
mul
in
jbe
ins
and
adc
xchg
sub
dec
and
pop
mov
js
jnp
add
sbb
jnp
popa
pop
ins
pop
jp
lock
mov
daa
fs
adc
mov
cmps
xchg
jb
cmp
ins
mov
addr16
ffree
imul
push
pop
jo
fidiv
fistp
mov
test
sti
mov
rol
mov
cmps
jae
jo
je
mov
retf
jge
mov
xchg
jp
imul
ret
daa
ins
push
addr16
cmps
jne
sbb
loopne
xor
fs
mov
ret
or
(bad)
loop
push
pop
sti
or
out
jne
ss
jbe
xchg
ins
push
in
fsubr
aaa
fidiv
lds
mov
aaa
rol
push
lds
aaa
or
xchg
in
xchg
jb
push
mov
push
aas
xor
mov
arpl
mov
xor
dec
xchg
inc
jo
fwait
mov
and
and
outs
stos
jbe
jmp
imul
sbb
stos
clc
mov
fild
mov
jmp
and
imul
(bad)
push
aas
xchg
mov
jae
mov
cmp
fwait
fs
in
ret
mov
inc
jecxz
(bad)
out
ja
aam
pop
jne
outs
imul
add
repnz
jne
mov
jo
push
or
add
(bad)
lds
int
cs
inc
mov
xor
cmps
pop
neg
push
sub
nop
mov
dec
add
loopne
push
push
push
arpl
jb
je
mov
sub
jns
mov
push
imul
push
lahf
mov
jae
popa
iret
mov
cmp
sub
inc
add
or
push
add
and
dec
pop
out
cwde
add
push
add
push
add
loope
pop
mov
xchg
loop
(bad)
push
pop
gs
push
mov
ret
ins
outs
scas
adc
mov
add
pop
outs
mov
jecxz
out
or
inc
inc
push
or
arpl
js
fwait
imul
test
xor
lock
adc
push
and
mov
sahf
mov
shl
or
fs
pop
mov
or
pop
dec
in
pop
test
cmpxchg
push
mov
fsubrp
shl
dec
out
jo
cs
inc
(bad)
cmp
xlat
mov
rol
sub
adc
sbb
xlat
pop
push
das
xchg
push
lea
mov
mov
ins
bound
jnp
outs
jnp
mov
fwait
icebp
aam
ins
aaa
jecxz
jno
fadd
fwait
mov
inc
mov
jne
sbb
test
inc
dec
imul
addr16
cmp
test
adc
sub
xchg
push
mov
jmp
push
add
xchg
imul
out
icebp
(bad)
repnz
lods
push
imul
pop
adc
cmp
je
popa
and
(bad)
retf
xor
mov
mov
pop
shl
push
sbb
lahf
aad
jne
aas
xlat
cmp
jge
inc
pop
jae
or
ret
push
xor
jecxz
push
iret
cmp
jae
rol
mov
xchg
ret
add
or
add
jg
push
out
cmc
push
push
xor
dec
repz
test
inc
pop
lahf
mov
icebp
jp
cmp
rcl
cmp
push
ja
call
pop
fld
inc
sbb
pop
or
ins
xchg
shr
or
icebp
adc
push
loopne
add
sub
shr
sbb
sub
inc
fwait
je
into
fcomp
push
push
fisub
xor
inc
je
push
sub
and
push
loope
inc
pop
fld
add
push
adc
sbb
sbb
pop
adc
adc
sbb
aam
xor
fist
jbe
adc
aaa
aas
xchg
cmp
jmp
jecxz
mul
adc
cmps
push
daa
imul
xchg
aas
ins
sub
xor
(bad)
je
imul
inc
xchg
cmps
cmp
inc
xchg
loope
in
sbb
outs
call
imul
adc
adc
xor
rcr
addr16
and
dec
pop
fiadd
or
(bad)
retf
mov
cmp
outs
sub
mov
addr16
mul
sub
dec
xchg
imul
push
adc
retf
and
and
sub
and
jae
imul
(bad)
add
mov
sbb
imul
push
bound
pop
mov
adc
pop
adc
fiadd
inc
(bad)
pop
push
mov
stos
mov
aad
shr
add
js
sbb
add
fistp
imul
dec
dec
clc
scas
adc
div
outs
adc
xchg
jl
scas
mov
or
ror
imul
add
or
or
pop
dec
retf
xor
jge
daa
add
xchg
xor
stos
inc
add
into
mov
add
jg
fsubr
mov
push
pusha
add
inc
jae
inc
pop
mov
jecxz
mov
mov
push
or
scas
push
sub
mov
and
cs
ret
(bad)
add
cmp
xlat
jae
mov
imul
call
imul
pop
imul
xchg
ins
(bad)
jecxz
pop
pop
jno
or
push
sbb
test
mov
sti
jg
aaa
cs
xchg
dec
cmp
xchg
les
fwait
jo
iret
imul
mul
jecxz
fwait
mov
adc
sub
adc
and
js
mov
rsm
inc
outs
and
lods
mov
inc
xlat
cmp
ss
push
add
ins
xchg
and
pop
mov
test
sub
jmp
mov
iret
and
push
fild
rol
das
and
adc
jle
lahf
comiss
bound
inc
or
xchg
aaa
inc
sbb
dec
mov
mov
push
iret
cmp
imul
cwde
sub
stos
jae
retf
push
and
add
movs
scas
lds
mov
mov
push
test
ds
(bad)
inc
add
cmp
inc
pop
lahf
xor
jnp
push
mov
xlat
xchg
fiadd
mov
push
movs
add
bound
jns
and
pop
pushf
je
xor
das
rcl
pop
jne
out
loopne
and
dec
and
dec
or
sbb
mov
push
jecxz
xchg
jbe
pop
xchg
out
iret
inc
adc
cmps
cmp
sbb
xlat
and
sub
sub
nop
je
pop
fs
mov
sbb
mov
xchg
sbb
popa
stos
dec
cmp
cmp
inc
jno
and
inc
lods
mov
adc
mov
xor
sbb
outs
add
das
inc
and
jb
dec
xchg
dec
stos
imul
fcmovbe
xchg
mov
xor
data16
mov
sub
jne
pop
xor
push
sub
mov
rcl
xchg
jmp
or
add
cmc
mov
ret
xor
dec
pop
ja
dec
push
ret
mov
and
sub
adc
push
inc
fsub
pop
xor
or
pop
mov
mov
inc
inc
outs
inc
sub
pop
inc
xor
inc
push
ret
stos
push
inc
push
xor
mov
pusha
mov
pop
ror
dec
(bad)
dec
adc
adc
loop
sbb
das
sub
mov
dec
pop
loop
rcr
dec
mov
ja
pop
fist
es
out
cmp
pop
(bad)
dec
push
fist
and
jbe
ins
ret
pop
mov
out
out
loop
(bad)
sub
pop
add
mov
cmp
mov
push
jne
jg
ret
lods
(bad)
and
daa
ret
loopne
lods
es
fwait
and
test
ja
les
ret
mov
push
jne
sub
fstp
and
outs
cmp
mov
inc
mov
or
fcmovnb
mov
mov
push
dec
push
aad
and
dec
pusha
inc
shl
imul
or
add
push
and
inc
xor
mov
inc
fbld
shr
push
xchg
neg
pop
dec
and
mov
pop
jp
(bad)
dec
sahf
cmc
dec
pushf
pop
ins
imul
xor
out
mov
bound
shl
repz
repz
add
dec
das
maskmovq
test
jp
pop
pop
rcl
mov
(bad)
outs
jmp
outs
xchg
dec
pop
maskmovq
imul
xchg
inc
push
xor
or
pop
jo
daa
daa
mov
cmp
and
inc
pop
loopne
loop
iret
sbb
or
push
xchg
cmp
inc
sbb
cmp
out
xor
jae
ja
add
mov
xor
or
pop
mov
loopne
loop
xchg
adc
cwde
dec
ins
jae
mov
xchg
sub
pop
or
adc
push
jnp
mov
scas
or
xchg
loop
push
(bad)
jbe
xor
loopne
daa
ss
imul
jne
imul
ror
xor
dec
stos
sti
(bad)
mov
add
or
sub
and
mov
pop
repnz
ins
mov
pop
les
mov
mov
cli
mov
inc
xor
pop
push
push
pop
sti
adc
jmp
xchg
push
pop
jae
les
and
(bad)
mov
dec
dec
mov
sub
mov
or
adc
pop
mov
mov
inc
pop
dec
xchg
test
jae
sahf
dec
mov
and
jnp
pop
inc
stos
lods
xchg
dec
je
cmp
pop
jno
sbb
fisttp
dec
jle
sbb
inc
push
ret
dec
pop
out
gs
dec
iret
ins
cmp
add
das
mov
push
ins
pop
jg
and
pop
fist
scas
adc
stos
rcl
sbb
je
or
mov
xor
inc
xchg
(bad)
imul
jno
fisubr
stos
daa
push
daa
push
jno
aaa
imul
mov
das
push
loope
je
push
outs
push
ret
cs
test
adc
lahf
sti
sub
or
out
or
adc
pop
fstp
mov
pop
xlat
inc
ret
or
xor
enter
add
add
xor
xchg
sbb
imul
ret
outs
push
sti
cmps
arpl
add
and
cmp
mov
push
je
mov
adc
fild
fwait
xchg
adc
lahf
js
into
in
nop
pop
outs
(bad)
and
fistp
add
mov
(bad)
aad
mov
jnp
inc
inc
pop
adc
retf
jo
dec
dec
fst
sub
sbb
mov
push
jbe
bound
jne
xor
shr
addr16
mov
aad
mov
pop
rcr
pop
pop
push
mov
jmp
mov
je
movs
xor
and
addr16
pop
xlat
mov
test
frstor
pusha
add
jmp
je
and
add
ret
push
sbb
push
test
loop
push
mov
outs
mov
aam
mov
mov
(bad)
retf
addr16
mov
cmp
cmc
aam
jne
inc
cmps
mov
imul
iret
or
mov
mov
sbb
popa
mov
push
cmp
jl
stos
mov
inc
sub
mov
pop
or
jmp
dec
sub
mov
loopne
xchg
pop
or
sbb
ds
mov
push
mov
mov
add
sahf
cmp
mov
fsubrp
arpl
mov
data16
repz
mov
(bad)
(bad)
imul
xchg
mov
(bad)
sub
inc
mov
out
rol
iret
dec
or
cwde
push
ret
ja
push
dec
arpl
inc
or
outs
outs
dec
data16
fcom
pop
xchg
cmps
sub
xor
call
das
add
(bad)
inc
outs
xlat
shr
test
jne
dec
sub
add
rcr
jae
pop
addr16
loop
sub
xchg
arpl
cmp
jmp
sub
dec
add
not
pop
inc
(bad)
sbb
mov
sub
ds
pop
xchg
mov
push
ins
imul
mov
xchg
clc
push
adc
pop
stos
fnstsw
xor
pop
mov
aam
and
das
sub
mov
inc
test
adc
jbe
or
mov
scas
sub
push
inc
or
pop
mov
out
jo
dec
pop
sbb
ins
or
sub
imul
mov
sbb
dec
addr16
loop
sbb
mov
sbb
in
mov
lods
stos
or
adc
inc
(bad)
jbe
(bad)
adc
push
and
sbb
dec
sbb
ins
dec
dec
push
pop
push
pop
rep
or
pop
push
jae
stos
sbb
adc
cld
rcl
jg
stos
push
clc
adc
mul
mov
xchg
sti
xor
aaa
push
imul
test
shl
fidiv
cmp
cmp
repz
add
sub
(bad)
jae
pop
repz
ja
sub
push
or
push
add
push
das
push
lods
and
(bad)
fild
mov
bound
movs
sbb
push
push
push
mov
test
mov
pop
inc
dec
xchg
or
arpl
imul
xchg
ret
cmp
add
push
ret
popa
iret
mov
stos
sub
mov
push
mov
lds
jnp
inc
mov
pop
adc
call
xlat
sub
add
xchg
fld
or
mov
jnp
fistp
push
daa
xchg
jb
lea
jb
outs
cmp
(bad)
pop
ja
xor
push
add
add
ret
ins
lahf
outs
mov
mov
mov
sbb
aas
and
inc
and
imul
bound
pop
fs
push
pop
sbb
mul
pop
sub
cmps
xor
lods
das
xchg
add
mov
ficom
sbb
push
(bad)
pop
movs
pop
and
dec
mov
cmp
imul
adc
in
or
mov
push
adc
mov
adc
push
add
pushf
xor
mov
mov
and
daa
lahf
pusha
xlat
and
imul
or
sbb
cmp
test
sbb
sub
cmc
loop
xlat
mov
or
pop
push
lods
cs
test
outs
add
push
outs
jae
xor
or
dec
cmps
mov
cmp
(bad)
xchg
mov
cmp
pusha
test
mov
or
ret
push
mov
mov
imul
pusha
jecxz
sti
iret
pusha
xchg
push
and
(bad)
adc
daa
stos
mov
push
sub
(bad)
and
mov
test
lods
and
inc
push
mov
imul
fbld
xchg
out
push
jecxz
fwait
sub
inc
stos
sub
test
adc
ret
stos
sbb
or
mov
xchg
pop
stos
retf
out
das
aaa
cmp
pop
popa
push
dec
lods
adc
test
xchg
adc
pop
popa
and
xor
push
mov
outs
lds
jg
lods
and
loope
mov
fwait
jg
sbb
sahf
retf
cmps
inc
sub
pop
mov
adc
daa
bound
sub
jne
pusha
adc
or
lahf
ja
ret
adc
movs
ss
pop
shr
out
(bad)
add
js
mov
in
fwait
push
cmp
aad
dec
arpl
in
ror
push
sbb
call
(bad)
jb
sbb
adc
or
add
adc
dec
push
sub
dec
ror
xor
vpmacsdqh
push
xchg
cs
fstp
mov
push
push
jmp
lds
pop
dec
adc
test
pop
mov
ins
mov
clc
add
es
aam
cmp
xor
hlt
ss
ja
pop
pop
sub
iret
jb
push
jecxz
push
das
add
mov
jp
cs
(bad)
es
sar
pop
or
mov
idiv
cmp
xor
xor
aaa
shl
dec
mov
ja
ret
fs
adc
cmp
loop
inc
sub
scas
stos
test
push
aas
xor
ins
fucomip
ror
cmp
test
pop
add
mov
jle
add
xor
mov
nop
push
xchg
adc
xchg
jmp
inc
and
push
mov
sbb
or
js
in
(bad)
(bad)
jg
mov
sbb
and
addr16
hlt
sub
arpl
jmp
ja
adc
imul
(bad)
ret
mov
test
inc
aaa
add
mov
ret
jecxz
retf
add
sub
test
es
sti
mov
or
stos
repz
rcr
retf
jecxz
sbb
bound
(bad)
popa
pop
mov
jmp
cmps
and
sub
addr16
dec
ret
xor
das
jb
xor
aam
jae
cmp
add
dec
xlat
adc
inc
(bad)
or
push
fisttp
aas
push
mov
cmp
rol
adc
jo
inc
push
add
and
pop
push
push
adc
ins
pop
sbb
outs
add
ret
sbb
sub
pop
push
daa
test
sbb
mov
mov
add
and
inc
mov
pop
dec
sbb
mov
xlat
add
rcl
stos
cmp
or
ret
inc
jecxz
nop
or
cmp
and
jl
ja
clc
mov
jae
jo
loopne
or
xchg
fwait
jno
jp
cmp
aaa
sub
inc
sub
mov
lds
mov
jmp
fwait
es
add
ss
inc
imul
and
push
mov
dec
inc
sub
ss
push
cmps
adc
retf
mov
add
clc
inc
(bad)
fld
push
lods
pop
imul
les
or
jo
add
gs
push
pusha
add
push
iret
push
jmp
mul
push
sub
mov
sub
sub
add
(bad)
dec
mov
mov
inc
call
add
mov
mov
aaa
cmp
inc
(bad)
pop
fist
(bad)
push
shl
xor
jmp
daa
push
add
sbb
or
push
push
inc
sub
sbb
es
rcl
fwait
and
mov
movs
adc
(bad)
pop
das
pop
xchg
daa
out
push
mov
dec
sub
aaa
jne
adc
inc
pop
pop
add
ins
out
aad
shl
push
mov
out
mov
mov
mov
mov
or
popa
mov
sbb
imul
mov
pop
mov
dec
inc
sub
or
sub
jg
enter
das
fcmovnu
or
jmp
mov
pusha
outs
sbb
sub
sub
mul
jno
inc
dec
push
ror
push
test
mov
test
xor
fwait
jl
stos
add
pusha
aam
add
jne
out
and
add
je
outs
dec
lds
dec
jno
rcr
das
daa
dec
gs
inc
mov
rcr
mov
sub
and
or
adc
mov
fist
xor
xor
sub
and
das
and
sti
sub
jmp
sub
xor
sub
xchg
cmc
mov
jnp
mov
daa
call
sbb
sub
push
sub
xchg
sub
sub
loop
shr
jbe
sar
xchg
aam
dec
mov
imul
sub
push
add
mov
dec
adc
push
push
(bad)
out
adc
out
test
mov
xor
stos
cmp
pop
jo
push
rcl
adc
ja
jmp
sbb
sub
adc
mov
(bad)
and
mov
and
arpl
sub
ja
push
xchg
mov
jnp
xor
arpl
pop
fwait
mov
sbb
sub
or
mov
push
pop
enter
mov
jmp
cmp
push
(bad)
div
aas
push
sbb
inc
or
rcl
xchg
jno
test
repz
out
pusha
int
and
xor
xor
arpl
mov
inc
jge
lods
das
inc
out
push
mov
xchg
inc
dec
push
pusha
xor
pop
adc
jae
adc
in
sub
pop
and
sub
pop
fs
add
pop
jns
add
loop
ss
popa
inc
mov
sahf
mov
sbb
aas
mov
dec
xor
iret
daa
sti
aaa
inc
mov
mov
lea
outs
scas
push
movs
loope
pop
fbld
lock
mov
add
test
and
dec
sbb
adc
and
and
popf
call
xor
xchg
punpckldq
lods
dec
leave
mov
and
xor
loopne
into
cmp
mov
sub
pop
dec
and
lea
dec
adc
jae
ror
sbb
push
sbb
lgs
das
and
mov
mov
mov
push
bound
push
inc
les
mov
sbb
imul
push
add
ds
add
cs
bound
shr
addr16
or
test
jg
add
sub
and
mov
stos
dec
(bad)
rol
xor
outs
rcr
mov
xor
mov
adc
mov
push
push
enter
imul
and
retf
aas
lahf
(bad)
aad
lods
xor
lock
dec
pop
xor
sahf
add
sub
add
adc
loope
or
mov
adc
pop
div
xor
test
inc
push
or
(bad)
and
xchg
inc
push
add
stos
lods
adc
xor
inc
pop
out
sbb
mov
inc
dec
(bad)
dec
test
shl
adc
inc
test
iret
cmp
mov
lods
mov
xor
lahf
pop
sti
rol
sti
mov
adc
and
xchg
inc
inc
(bad)
pop
mov
xor
push
push
or
pop
or
or
push
add
inc
sub
inc
or
ss
popf
add
adc
push
inc
push
loopne
sar
cmp
jmp
sub
pop
aaa
aaa
mov
fwait
mov
bound
pop
xchg
cmp
inc
ret
dec
mov
mov
dec
push
mov
stos
scas
sbb
out
dec
mov
inc
repz
add
sub
push
loop
ficomp
push
lea
adc
or
(bad)
and
retf
and
adc
jae
aas
daa
xchg
adc
push
addr16
push
les
mov
out
mov
cwde
fbstp
pop
and
call
gs
(bad)
jnp
inc
lods
jbe
mov
cmps
lea
jbe
push
pop
or
jg
movs
sub
das
mov
inc
jl
mov
sbb
retf
mov
test
sub
mov
pop
or
shl
movs
test
sbb
cmp
add
retf
xor
call
or
sar
scas
and
sub
cmp
xchg
push
and
sti
sub
je
mov
lahf
fs
sub
and
jecxz
inc
pop
sar
or
sbb
and
sub
mov
(bad)
out
aaa
in
push
inc
or
adc
retf
mov
mov
es
js
movs
iret
jnp
add
or
sub
aas
dec
pop
movs
push
pop
rcl
sub
mov
adc
jecxz
test
retf
pop
add
mov
xor
ret
inc
jg
sub
sub
movs
xchg
loopne
and
ins
scas
inc
push
arpl
sbb
iret
add
adc
inc
mov
outs
pusha
push
and
push
adc
ror
xor
in
(bad)
je
imul
inc
fisubr
mov
stos
sbb
je
test
jae
push
sub
add
dec
xchg
mov
jecxz
or
shr
sbb
xchg
add
outs
arpl
xor
or
imul
pop
ret
push
xchg
inc
fist
adc
dec
xlat
retf
pop
xchg
sbb
inc
push
or
sbb
movs
adc
mov
retf
out
xchg
dec
ror
adc
movntq
adc
das
adc
ja
adc
mov
dec
outs
stos
add
rcr
inc
ficomp
out
mov
xlat
jnp
mov
test
sub
sbb
push
xor
out
mov
xchg
jno
mov
iret
pop
sahf
mov
xlat
stos
outs
adc
pop
mov
xor
shl
jb
push
inc
pop
mov
push
arpl
test
leave
adc
bound
and
add
jae
je
inc
jg
stos
mov
retf
and
sbb
push
add
pop
mov
fs
push
xor
shl
push
and
imul
mov
mov
mov
sahf
daa
(bad)
or
bound
test
or
ror
cmp
ret
popa
or
iret
jbe
jne
lahf
adc
outs
mov
sub
mov
xchg
arpl
mov
cmps
(bad)
sbb
push
mov
add
push
scas
dec
push
dec
and
adc
lods
sbb
pop
adc
xor
dec
pop
push
dec
pop
rcr
sbb
lea
and
push
popa
lods
xor
adc
add
inc
mov
outs
and
adc
sbb
push
or
dec
push
scas
or
and
dec
idiv
ja
dec
and
jo
lahf
dec
jo
inc
aas
sub
inc
test
scas
mov
outs
and
test
jae
add
rcl
inc
pop
test
jo
lods
adc
xchg
test
fwait
xchg
ret
fild
adc
or
test
push
call
inc
mov
jae
xchg
pop
xchg
ret
or
xchg
push
imul
push
pop
inc
adc
arpl
outs
data16
sub
dec
ds
push
sti
push
(bad)
mov
out
xchg
sub
pop
cmps
dec
push
mov
aaa
shr
pop
in
sbb
sbb
mov
or
add
mov
iret
pop
push
popa
mov
xor
mov
sbb
mov
xlat
adc
sub
pop
mov
arpl
lea
jb
js
push
sub
in
nop
mov
push
nop
arpl
popa
rol
sbb
xor
mov
mov
rcr
adc
push
xchg
xchg
pusha
mov
lods
push
dec
aaa
dec
mov
and
adc
dec
pop
lds
pop
add
xchg
scas
add
sbb
add
cs
bound
stos
lods
outs
outs
mov
ja
xchg
fisttp
lods
adc
push
cli
les
mov
outs
bound
arpl
fisubr
sub
popa
test
mov
sub
shr
dec
lods
pop
fstp
nop
lock
and
sbb
daa
and
or
fimul
jp
gs
dec
sub
mov
push
fwait
mov
arpl
call
inc
xchg
or
push
sbb
stos
sti
adc
test
cmp
sub
outs
mov
add
pop
cmp
out
push
or
push
push
sub
fbld
(bad)
rcr
stos
push
and
test
and
mov
outs
inc
push
add
xchg
xlat
push
dec
shr
jae
ja
pop
xor
dec
xchg
pop
cs
add
fcmovnbe
jle
fadd
fst
mov
fld
sbb
btr
cmp
xchg
sub
lahf
retf
sub
and
dec
sub
pop
sbb
xchg
outs
jmp
jb
test
imul
adc
jmp
pop
push
adc
stos
sbb
mov
dec
sbb
or
adc
sbb
mov
add
push
mov
ud0
cmp
push
bound
daa
aas
xchg
add
mov
inc
mov
push
ffreep
mov
xor
and
add
stos
fwait
cmps
push
push
lods
dec
pop
push
or
xor
and
je
push
(bad)
out
or
inc
movs
inc
cmp
dec
adc
outs
mov
inc
sti
push
dec
pop
xor
inc
lds
or
mov
sbb
add
fwait
ins
mov
arpl
mov
sbb
or
sub
and
out
out
jecxz
test
sbb
or
or
aad
adc
sub
sbb
inc
mov
pop
add
inc
movs
adc
mov
sub
sbb
jnp
cs
adc
stos
add
cs
ror
inc
lahf
dec
stos
jmp
das
or
inc
mov
lods
jno
jg
lods
add
or
or
aas
test
(bad)
test
imul
pop
add
dec
fadd
adc
pop
pop
cmps
adc
inc
scas
push
cmp
sbb
xchg
add
shl
jne
cmp
or
pop
adc
mov
push
or
adc
pop
mov
arpl
pusha
ins
loope
xchg
ret
stc
pop
or
outs
or
cmps
out
inc
fidiv
imul
jmp
or
out
shl
ins
dec
xor
aaa
sbb
jecxz
imul
mov
push
adc
outs
dec
mov
fstp
rcl
or
aas
bound
add
sbb
call
adc
cmp
pop
sbb
scas
inc
jno
add
dec
push
mov
pop
ja
xchg
aaa
pop
ja
cmps
add
arpl
xor
aad
add
test
pop
sub
mov
or
pop
or
lahf
push
adc
mov
push
mov
mov
sub
or
sub
ss
mov
xchg
cmps
inc
rol
inc
cmps
mov
das
add
inc
dec
adc
jne
dec
aaa
imul
fist
and
sbb
rcl
dec
pushf
dec
jo
jmp
pop
test
push
outs
fist
mov
mov
mov
(bad)
pop
xor
sub
or
aaa
loop
adc
push
xchg
dec
add
xchg
push
and
dec
aaa
cmp
or
xor
cmps
push
mov
cmps
sbb
ins
adc
xor
push
push
mov
cmp
dec
pop
shl
ficom
pop
push
lahf
cmp
das
jp
add
mov
push
mov
push
iret
jmp
dec
jge
adc
call
and
sbb
shr
adc
aam
adc
ins
or
or
inc
lea
jnp
sbb
xor
xor
mov
pop
add
mov
pop
add
xor
sub
xor
pop
les
push
repnz
aas
(bad)
(bad)
retf
sub
xchg
dec
rcl
mov
and
stos
mov
jl
pop
(bad)
push
add
rcl
sbb
push
inc
jg
adc
jbe
jg
cmps
jmp
movs
xor
dec
sub
ins
push
xchg
(bad)
fwait
jecxz
pop
stos
add
pop
jo
sub
sbb
jae
aam
push
fcom
inc
add
lods
xchg
mov
jnp
outs
ds
or
jae
shr
adc
arpl
mov
or
dec
xor
adc
enter
(bad)
jne
test
mov
add
mov
add
jae
inc
add
pop
add
loope
sub
outs
loope
cmp
pop
add
(bad)
ja
add
pop
pop
repz
aas
mov
adc
popa
btr
push
inc
inc
mov
outs
and
add
jg
sbb
push
push
xchg
mov
movs
mov
das
lods
pop
ret
neg
push
or
pop
mov
adc
imul
pop
ret
sub
stos
fimul
fwait
pop
or
push
stos
dec
pop
outs
and
add
pop
add
out
push
pop
push
bound
(bad)
sbb
add
pop
stos
mov
mov
sub
inc
push
pop
pop
lea
add
add
sbb
scas
add
inc
not
push
out
loop
inc
retf
cmp
pop
rcl
arpl
xor
mov
adc
push
add
adc
dec
pop
or
clc
test
test
adc
push
arpl
(bad)
dec
add
push
outs
inc
aas
xchg
pop
xchg
push
jne
mov
push
sub
dec
jmp
inc
sub
fwait
sub
push
inc
inc
bound
outs
jmp
sub
retf
or
adc
mov
imul
jmp
adc
fbstp
xor
mov
ficom
dec
add
sbb
or
xchg
mov
push
es
ja
pop
sbb
adc
fsubr
add
sbb
push
sar
inc
les
xchg
fistp
popa
dec
fdivr
daa
das
xlat
adc
push
xor
pop
dec
(bad)
inc
pop
and
scas
mov
jne
scas
dec
fld
push
push
or
(bad)
ja
add
scas
daa
aad
sub
lods
mov
add
fist
add
push
add
mov
lods
mov
xlat
ffree
sub
inc
pop
aas
jae
inc
stos
adc
sbb
push
or
xor
dec
mov
xor
dec
cmp
inc
(bad)
les
and
sar
ret
fist
outs
or
push
and
stos
pop
mov
loope
mov
adc
outs
mov
call
cmp
pusha
adc
(bad)
(bad)
jbe
ja
nop
cmp
jmp
pop
jmp
cmps
push
mov
pop
lods
data16
dec
mov
repz
clc
pop
sar
cmp
push
mov
fistp
push
sbb
push
test
cs
adc
jae
fld
loop
xchg
mov
or
dec
mov
out
and
jbe
shl
sbb
ret
sbb
fist
inc
inc
(bad)
pop
pop
and
adc
mov
adc
xor
popa
inc
mov
das
xchg
push
xor
sbb
(bad)
or
rcl
adc
icebp
cmps
retf
sbb
add
jnp
lods
or
retf
push
popa
sub
xchg
pusha
adc
mov
imul
ja
push
mov
loop
sti
add
rol
jae
das
bound
xor
xor
iret
outs
(bad)
test
daa
mov
out
ret
pop
aam
mov
(bad)
xor
sbb
stos
inc
pop
bound
jmp
adc
test
test
push
in
(bad)
mov
add
lahf
push
gs
lods
(bad)
arpl
jo
sub
add
jb
jg
lods
mov
rcl
or
je
dec
pop
shr
adc
cmp
pop
xchg
out
fcom
sbb
repnz
dec
xlat
mov
mov
cmp
movs
push
mov
pop
adc
in
xor
and
int
aad
push
xchg
inc
loopne
jmp
test
xor
and
add
inc
adc
push
out
sbb
ins
push
pop
jecxz
add
out
and
arpl
inc
fwait
dec
es
push
sub
pop
dec
int
xchg
out
test
ins
lahf
push
mov
adc
adc
add
sub
mov
dec
aaa
scas
sbb
popa
cmp
cmp
push
repz
clc
mov
aaa
aaa
mov
xchg
xchg
adc
mov
mov
movs
inc
xor
cs
pop
jae
adc
test
add
mov
scas
dec
jb
push
pop
sbb
add
inc
adc
push
xor
xor
push
mov
xchg
inc
adc
or
movs
push
sub
iret
xchg
xor
inc
sub
xchg
ret
daa
cmp
ds
push
inc
and
retf
pop
shr
outs
sbb
pop
sub
push
push
mov
cmp
es
push
mul
push
inc
push
adc
aaa
ret
sbb
les
add
mov
push
or
adc
push
xchg
retf
idiv
mov
(bad)
xchg
sub
enter
ja
xlat
lods
adc
stos
inc
and
cmp
push
or
cmp
or
out
sub
or
fisttp
scas
mov
arpl
pop
add
push
loope
pop
(bad)
bound
(bad)
and
xchg
mov
or
inc
xchg
pusha
stos
das
ret
and
aas
das
push
dec
mov
sti
xchg
mov
or
or
(bad)
arpl
xor
nop
xor
xchg
pop
test
ja
pop
mov
pop
or
adc
sbb
(bad)
mov
dec
and
mov
hlt
add
scas
cmps
pop
test
shl
jo
xor
jl
xchg
inc
xchg
mov
or
out
cmps
xor
sbb
add
or
loop
pop
pop
out
xchg
adc
adc
push
lods
jp
inc
mov
push
and
pusha
(bad)
jnp
inc
sbb
add
rcl
das
adc
xlat
sbb
(bad)
jmp
aad
adc
cmp
or
xchg
inc
xchg
push
test
adc
mov
jcxz
push
jo
ret
jle
and
rcr
or
(bad)
fcomi
add
loopne
arpl
inc
test
xchg
enter
sbb
xchg
fisub
mov
repz
mov
rcr
imul
mov
jne
push
bound
repz
pop
(bad)
ins
fwait
sbb
ins
mov
ins
aaa
ja
(bad)
cmp
sub
push
dec
jbe
pop
inc
or
jnp
xor
and
pop
dec
enter
lahf
push
dec
pop
adc
and
stos
xchg
jecxz
xor
and
and
mov
add
xlat
pop
xchg
push
pop
pop
mov
iret
sbb
sbb
popa
sti
(bad)
or
(bad)
pop
xor
(bad)
pop
rol
repz
(bad)
xchg
add
lds
xchg
mov
jnp
pop
pop
test
push
add
sbb
out
shl
call
mov
es
push
imul
xor
(bad)
shr
adc
mov
pop
daa
add
adc
jecxz
add
jecxz
and
les
push
add
and
adc
xchg
out
mov
movhps
dec
or
adc
test
xor
aas
imul
mov
push
sub
mov
dec
test
scas
sub
rcl
mov
xor
daa
out
pop
xchg
outs
imul
(bad)
sub
mov
and
call
adc
or
call
mov
xlat
arpl
push
pop
xchg
retf
mov
bound
(bad)
jmp
push
sub
push
mov
imul
xor
cmp
jmp
dec
movhps
pop
div
inc
and
retf
addr16
imul
pop
icebp
dec
ret
sbb
dec
or
mov
or
push
adc
pop
add
xor
js
adc
xor
popa
shl
push
clc
icebp
scas
aam
sbb
push
(bad)
push
lea
stos
mov
cmp
adc
movs
mov
pop
dec
push
cmps
add
pop
jne
or
inc
dec
dec
fild
mov
push
inc
or
pop
ret
cmp
adc
inc
or
and
dec
inc
aas
je
stos
dec
cwde
adc
push
push
inc
xor
add
push
repnz
imul
sbb
popa
loop
sbb
sub
mov
and
jns
xor
sbb
rol
mov
cmps
(bad)
mov
sub
mov
and
or
(bad)
push
out
pop
ret
mov
and
retf
punpcklbw
outs
aaa
dec
pop
aad
sub
and
mov
(bad)
inc
jecxz
ret
jae
jmp
ret
cmp
or
sub
adc
xchg
inc
ret
lds
mov
rol
adc
ficomp
pop
sbb
dec
sub
adc
xor
ror
lods
mov
xchg
into
adc
pop
test
xchg
inc
test
sbb
dec
sub
out
mov
adc
inc
pop
ret
mov
movs
mov
adc
dec
test
fild
popa
ins
mov
mov
mov
mov
fisttp
add
and
mov
lahf
mov
pop
popf
add
push
pop
mov
dec
movs
mov
xchg
das
(bad)
add
adc
sbb
lods
dec
addr16
push
jne
ins
aas
dec
pop
push
es
xchg
sub
dec
sub
jnp
dec
shr
aad
mov
or
pop
ret
add
inc
sub
push
iret
mov
xchg
push
push
inc
add
bound
aas
enter
jae
inc
add
outs
ja
inc
adc
stos
pusha
dec
mov
and
stos
das
inc
xor
push
add
jmp
or
rcl
call
call
ja
test
repz
pusha
xor
ins
xlat
cmps
adc
ret
ror
adc
cmp
pop
pop
add
aas
xchg
xor
dec
jg
xor
aas
adc
loopne
(bad)
sbb
sub
arpl
xchg
adc
add
arpl
inc
push
jp
ja
lods
outs
add
jnp
imul
mul
mov
jecxz
stos
ret
add
ja
pusha
push
adc
mov
adc
and
mov
lea
(bad)
jg
sub
inc
popa
fwait
jne
xor
frstor
push
pop
mov
xchg
arpl
sti
sub
aaa
pop
add
or
add
sub
pop
xchg
mov
sub
adc
stos
jnp
stos
inc
sbb
or
lods
pop
push
cmps
push
aam
ret
repnz
iret
mov
inc
outs
inc
aaa
cmps
mov
xchg
sub
jg
or
mov
jnp
and
mov
mov
aas
sub
and
pop
ja
xchg
ret
fs
daa
scas
rol
mov
scas
push
inc
stos
sar
popa
cmp
cmp
mov
mov
cmps
mov
imul
lods
rol
mov
nop
mov
jl
pop
add
les
fs
mov
xchg
iret
bound
test
lods
push
add
inc
sbb
inc
retf
pop
lods
and
adc
test
mov
rol
ret
pop
fistp
mov
add
fwait
xchg
stos
mov
or
or
iret
shr
rcl
push
mov
or
dec
out
or
add
sub
pop
nop
adc
cs
sbb
jno
mov
jae
mov
xlat
call
addr16
add
shl
push
pop
push
pop
mov
aam
movs
ret
jae
mov
sbb
lea
test
(bad)
push
stos
test
inc
scas
xlat
sub
retf
cmp
(bad)
pop
and
mov
add
push
push
add
lea
sub
rol
pop
sub
push
mov
shr
inc
jmp
add
out
scas
cmp
test
mov
popa
popf
les
sti
pop
test
or
inc
or
mov
or
pop
aad
imul
inc
cmps
rol
adc
pusha
add
sub
and
inc
outs
xor
push
sti
js
cdq
pop
mul
pop
xchg
loop
mov
and
ja
lea
mov
test
repz
xor
push
mov
and
inc
sub
fwait
sub
daa
dec
xor
and
mov
mov
fs
jne
jg
dec
adc
mov
mov
imul
dec
xchg
inc
dec
push
ins
jp
adc
and
fdiv
mov
jnp
mov
pop
xor
xor
mov
mov
fisttp
mov
mov
or
cmp
or
mul
push
push
inc
test
test
inc
inc
sub
addr16
sub
pop
pop
mov
adc
xlat
outs
add
sbb
(bad)
lea
mov
ja
cmp
inc
popf
xchg
mov
push
dec
adc
bound
arpl
mov
or
js
xlat
jmp
xor
push
dec
bound
mov
add
loope
or
mov
(bad)
dec
inc
mov
dec
sbb
and
(bad)
loop
xchg
retf
inc
and
bound
stos
jmp
stos
inc
dec
ss
xor
pop
(bad)
ffree
movs
or
aas
and
pop
inc
dec
test
test
pop
push
or
cmps
jp
inc
shr
arpl
inc
mov
shr
(bad)
add
ret
repz
jo
ret
xbegin
xchg
or
xor
jb
xchg
cmp
sub
popa
adc
jmp
jo
jne
cmp
dec
cmp
mov
dec
rol
imul
jo
or
daa
aas
adc
jae
inc
ret
pop
mov
or
(bad)
data16
scas
pop
push
xchg
cmp
mov
dec
mov
daa
cmps
inc
add
push
push
test
and
(bad)
pop
inc
loope
outs
daa
inc
mov
push
jg
pop
push
shr
fcmovnbe
push
push
or
(bad)
out
pop
dec
adc
cmp
push
pand
aad
popa
dec
jae
dec
pusha
sub
push
or
shr
sbb
adc
push
mov
mov
sbb
xchg
add
mov
dec
xchg
nop
inc
sub
cmps
jne
bound
mov
cmp
sbb
sub
adc
add
(bad)
je
mov
pop
xchg
adc
sbb
fild
pop
xchg
jae
bound
adc
add
das
arpl
mov
or
dec
jecxz
add
imul
and
push
popa
push
add
(bad)
add
fwait
pop
dec
sbb
les
pop
sbb
fild
inc
bound
ret
mov
push
pop
out
or
xchg
pop
or
call
(bad)
sahf
mov
or
(bad)
ror
aaa
xlat
and
mov
fisttp
dec
std
adc
jecxz
push
ja
mov
inc
fwait
or
jmp
mov
pop
or
shl
add
inc
ins
out
push
ficomp
pop
rol
adc
xor
in
cwde
stos
mov
mov
jae
adc
aad
daa
mov
or
popa
adc
addr16
(bad)
xchg
push
(bad)
(bad)
mov
aas
xor
retf
rol
mov
cwde
xor
rcl
cs
(bad)
adc
arpl
sbb
push
gs
push
ror
sbb
aaa
mov
or
mov
lahf
sbb
ss
sbb
(bad)
pop
adc
or
inc
xor
xchg
scas
sbb
dec
or
push
scas
pop
xchg
outs
push
adc
xchg
dec
lods
push
xor
or
ja
stos
ss
rol
sbb
xchg
nop
jo
dec
jae
pop
mov
mov
cmp
into
rcr
out
dec
pop
push
push
lahf
jae
sub
adc
outs
push
outs
mov
adc
push
sub
mov
pop
inc
dec
ins
es
pop
sbb
sbb
dec
daa
pop
push
test
xor
mov
push
(bad)
push
inc
loop
das
pop
rcl
mov
mov
sbb
xchg
dec
jg
mov
xor
scas
xchg
rcr
pminub
test
and
xlat
ficom
mov
xchg
push
add
add
or
xor
mov
add
add
pop
xor
mov
das
mov
(bad)
mov
push
jns
jno
mov
cmps
mov
add
bound
lea
sysenter
stos
nop
or
cmp
xor
sub
and
add
je
add
adc
arpl
stos
mov
mov
adc
(bad)
rcl
cmp
inc
push
loop
xchg
adc
push
loope
xlat
test
xor
inc
adc
(bad)
adc
shl
sbb
push
test
adc
test
sbb
add
sar
and
add
ss
lods
dec
ins
pop
jmp
fs
loop
or
push
loopne
sub
daa
mov
adc
jmp
sub
stos
push
jo
sub
push
xor
push
xchg
adc
mov
or
fld
push
(bad)
and
div
push
jnp
jne
or
xlat
adc
jcxz
and
cmp
jb
mov
dec
imul
push
add
mov
cmp
sub
enter
xchg
sbb
or
cmp
repz
les
push
ss
rol
repz
xchg
sbb
inc
pop
shl
pop
mov
xor
inc
jno
dec
jecxz
sbb
cmp
je
push
push
dec
sbb
rcl
or
sub
mov
cmps
or
inc
inc
or
add
and
add
cmp
add
xor
and
sub
cmp
adc
xor
add
ss
bound
cmp
shl
push
add
fs
add
add
sbb
jae
or
mov
sub
push
lods
adc
lods
or
fidiv
jg
test
test
jmp
adc
adc
add
arpl
inc
dec
mov
push
cmp
fwait
inc
ffreep
add
test
cmp
inc
or
and
xchg
xor
add
pop
ins
push
rol
mov
pop
test
push
dec
inc
stos
or
call
cwde
mov
test
xor
aaa
sti
add
stos
aam
inc
mov
add
sub
sbb
movs
xor
imul
xchg
adc
xor
add
adc
inc
xor
mov
add
mov
pop
daa
fild
jle
enter
das
enter
pop
inc
mov
add
arpl
ret
dec
sbb
loopne
mov
inc
aaa
push
sbb
xor
push
sbb
nop
add
test
enter
push
ret
push
repz
inc
sub
stos
daa
pop
pop
adc
out
cmp
and
sbb
repnz
pop
sub
or
addr16
ret
mov
mov
jmp
test
push
adc
add
add
xchg
push
rcl
xor
cmp
inc
popa
dec
cmp
stos
and
xor
and
aas
cs
fstp
sub
adc
pop
xlat
jg
add
pop
and
sbb
sub
mov
xchg
add
sbb
dec
adc
mov
test
and
cwde
(bad)
jl
test
inc
ret
inc
or
jg
push
xor
inc
adc
or
mov
xor
add
push
and
and
aad
mov
dec
sub
or
push
loop
pop
adc
nop
adc
pop
push
xor
add
sbb
xchg
sub
and
out
adc
scas
push
daa
imul
push
sbb
adc
fwait
sti
xor
loopne
push
sub
cmp
dec
push
(bad)
or
adc
pusha
push
cmps
mov
push
cmp
mov
pop
add
xor
ret
scas
pop
dec
add
xrelease
pop
aaa
fild
push
jp
fsubr
adc
iret
xlat
adc
ret
test
and
imul
dec
adc
test
lods
sahf
mov
je
fisub
or
and
shr
retf
test
mov
add
inc
mov
inc
add
mov
fild
retf
push
into
mov
cmp
les
iret
adc
xchg
inc
(bad)
dec
add
pop
jae
xchg
push
pop
push
xor
xchg
add
das
dec
repz
and
mov
mov
or
push
(bad)
sbb
or
push
mov
xor
daa
aas
xchg
sub
add
lahf
sub
xor
rcl
or
push
push
add
and
dec
addr16
dec
mov
push
push
push
add
fidivr
es
out
arpl
mov
xchg
arpl
adc
test
push
or
(bad)
dec
repnz
sub
sub
mov
out
inc
add
sub
pop
xchg
test
push
aas
pop
and
dec
pop
es
inc
adc
jg
dec
xchg
push
(bad)
aad
dec
scas
test
push
daa
push
dec
add
add
or
shl
iret
xchg
sbb
push
inc
outs
stos
js
push
les
add
arpl
aam
dec
xchg
fcom
jmp
sub
dec
sub
mov
push
ror
push
xor
or
push
or
js
test
addr16
pop
dec
popa
dec
xlat
cmps
dec
loop
mov
add
inc
jo
push
(bad)
and
imul
dec
xor
dec
or
adc
cmps
add
pop
sbb
add
fld
or
ret
imul
sub
(bad)
dec
sbb
xchg
aas
or
lods
(bad)
jnp
push
rcl
sub
rol
leave
adc
dec
cmp
rcr
ja
and
cmp
push
mov
push
arpl
jnp
adc
adc
adc
push
and
jne
dec
xlat
dec
dec
dec
test
(bad)
dec
imul
test
pop
ror
add
bound
mov
dec
inc
mov
adc
add
cmp
xor
xor
fwait
add
mov
adc
pop
in
movs
mov
xchg
imul
test
ins
outs
inc
mov
adc
add
mov
mov
or
test
lock
and
xorps
aaa
add
mov
outs
mov
add
aas
outs
fs
sbb
dec
sbb
and
pop
mov
js
pop
inc
pxor
scas
fisub
pusha
inc
dec
dec
jnp
pop
pushf
push
xchg
ficom
cwde
fisub
nop
pop
cmp
push
dec
in
add
ror
fsubr
mov
outs
arpl
push
aam
add
push
call
inc
adc
adc
fild
adc
push
add
mov
ret
jmp
add
or
sub
lea
mov
sbb
(bad)
fwait
push
sbb
ja
jmp
mov
sbb
lahf
aaa
test
jmp
mov
push
inc
mov
or
add
shl
jg
mov
mov
xchg
and
test
imul
add
adc
push
and
outs
ins
pop
sbb
xor
and
or
xchg
outs
scas
and
retf
shl
ins
loopne
scas
inc
dec
adc
daa
imul
in
cmp
push
push
je
adc
and
imul
jae
outs
sub
jmp
and
push
inc
sti
iret
pop
sub
pop
push
(bad)
xchg
outs
push
add
ins
inc
adc
jno
js
dec
mov
add
ret
dec
xchg
mov
pop
mov
push
call
push
cmp
pop
loop
and
push
mov
shl
jae
shl
imul
cs
das
push
sbb
push
rcl
and
adc
and
push
mov
imul
dec
pop
mov
xor
sar
mov
arpl
ja
xor
dec
nop
xor
or
mov
les
sub
sbb
cmp
fwait
and
jecxz
adc
inc
push
cmc
mov
sbb
pop
inc
packssdw
xor
push
adc
inc
and
ins
xchg
sbb
cmp
push
lea
mov
nop
(bad)
or
dec
cmps
jo
shl
sub
push
fist
push
push
cmp
out
mov
sbb
imul
push
xchg
add
cmp
sbb
sub
repz
push
dec
xchg
data16
stos
ins
stos
add
and
sub
in
ret
jo
adc
dec
jmp
xchg
test
inc
scas
xchg
mov
inc
inc
addr16
sub
ja
pop
push
mov
imul
fcmovbe
lea
outs
mov
or
mul
pusha
adc
adc
call
(bad)
mov
out
xor
sbb
xchg
adc
mov
sbb
mov
ja
les
(bad)
sub
aad
sbb
mov
(bad)
jno
aas
pop
popa
cmp
mov
fwait
sbb
test
pop
(bad)
mov
jne
jmp
jbe
cdq
pop
pop
jae
xor
imul
scas
sub
pop
sub
push
or
cmc
bswap
adc
aaa
pop
test
add
loop
mov
lock
mov
cs
inc
push
xor
outs
loopne
dec
and
or
dec
or
jb
inc
test
es
(bad)
inc
or
dec
into
mov
push
pusha
pusha
daa
sbb
cmc
add
sub
mov
ins
adc
bndstx
mov
jg
adc
xor
mov
mov
sbb
cmp
push
ror
or
call
lods
add
retf
rol
adc
movs
cs
adc
push
pop
nop
inc
repz
adc
xchg
cwde
adc
push
push
or
sti
ret
or
add
adc
sub
ret
mov
or
shl
adc
pop
inc
aam
shl
lea
fwait
add
stos
push
and
arpl
push
xchg
cmps
call
mov
sub
pop
or
or
adc
imul
xor
addr16
sti
stos
ins
shr
lahf
cmp
(bad)
cli
outs
jae
scas
adc
adc
enter
div
movs
cmc
mov
ss
inc
shl
adc
adc
cmp
lea
inc
inc
ja
xchg
dec
jae
push
dec
mov
xchg
and
adc
dec
push
pop
aaa
add
push
ja
mov
pop
sbb
ss
bound
push
sub
push
add
adc
inc
jnp
push
and
inc
sub
ja
jl
mov
repz
mov
ins
das
fwait
push
mov
cmp
and
ret
xchg
ret
rcr
test
sub
sbb
or
sbb
(bad)
adc
addr16
pushf
pop
mov
mov
lods
or
sti
dec
jnp
adc
add
shl
sti
fst
pusha
push
xor
stos
inc
cwde
mov
and
push
sub
pop
das
and
mov
dec
inc
adc
push
dec
popa
ret
dec
push
mov
adc
inc
add
push
enter
and
xor
popa
lods
sub
xor
adc
lea
mov
cli
fld
or
daa
ja
push
jnp
inc
mov
dec
popf
add
sbb
add
sub
imul
inc
adc
(bad)
xlat
bound
push
stos
jbe
fiadd
push
addr16
push
or
sbb
bound
es
sub
xor
xchg
mov
mov
sbb
adc
sub
add
jmp
lods
pop
mov
(bad)
jne
mov
sbb
mov
xchg
(bad)
in
imul
adc
addr16
sub
gs
xchg
les
pop
fld
movs
or
dec
mov
pusha
test
loopne
shr
out
test
stos
and
cwde
pop
xchg
pop
and
inc
imul
test
(bad)
xor
pop
xor
push
mov
push
inc
dec
adc
icebp
scas
and
jmp
dec
adc
sbb
and
out
in
jecxz
sbb
imul
inc
call
or
inc
sub
xor
mov
pop
lds
add
das
sbb
daa
loopne
fistp
je
xchg
je
fs
adc
xor
jae
mov
outs
mov
pop
pop
pop
fst
push
sbb
pop
xor
test
sbb
inc
ins
movs
mov
sbb
inc
sbb
cmp
ret
add
or
retf
loop
push
arpl
push
jne
inc
jl
xor
push
push
sti
push
push
aaa
iret
xor
push
jmp
mov
jbe
jbe
daa
or
and
inc
and
mov
xchg
dec
sub
sbb
inc
xchg
jmp
out
jno
pop
pop
pop
ret
jae
mov
cmp
sub
daa
data16
fisubr
mov
movs
aad
dec
inc
stos
xchg
mov
rol
dec
in
add
(bad)
jae
adc
mov
mov
adc
mov
push
mov
adc
push
dec
out
lds
and
inc
ficom
add
outs
or
inc
into
add
fldenv
test
add
xchg
adc
sahf
test
adc
add
xadd
out
dec
addr16
or
scas
jne
(bad)
or
frstor
rep
shld
jbe
and
sub
out
adc
mov
xchg
je
mov
cmp
movs
or
movs
push
retf
stos
lods
les
xchg
dec
and
add
lods
xor
xor
fisub
aaa
pusha
je
test
sub
ds
dec
stos
push
xchg
lea
packssdw
test
or
jg
xor
dec
jb
dec
mov
add
inc
mov
sbb
jnp
test
fsubr
push
add
popa
test
loop
repz
push
fwait
shr
mov
adc
sub
mov
push
out
sar
add
and
adc
sub
lods
aad
pop
xor
adc
loop
and
inc
outs
inc
(bad)
jecxz
cmp
cmp
jmp
add
inc
jg
pusha
adc
or
mov
adc
add
lods
fs
dec
shl
jno
push
mov
stos
and
jo
es
sub
aaa
push
cmps
pop
or
cmovs
cmps
sbb
xlat
cmps
xchg
add
bound
cmps
adc
cvttps2pi
jne
mov
rcl
mov
jb
aas
sub
xor
lahf
add
push
pop
adc
aaa
inc
adc
inc
mov
arpl
pop
(bad)
iret
dec
push
call
sbb
stos
add
test
mov
dec
nop
push
pop
and
rcl
add
dec
push
out
and
dec
sub
xlat
pop
add
add
jmp
push
push
jecxz
inc
in
add
cmps
jae
jno
fimul
pop
mov
lahf
push
mov
jae
xor
sub
and
in
iret
jnp
jecxz
stos
ret
cmp
or
ret
lods
shl
ss
aas
adc
mov
mov
pop
(bad)
loop
sbb
adc
or
ja
cdq
pop
and
(bad)
or
rol
je
sub
inc
arpl
pusha
shr
pop
jg
imul
mov
pop
xchg
arpl
pop
sbb
test
cmc
pop
test
xchg
lea
clc
pop
xor
mov
ret
push
sbb
sbb
imul
sub
add
dec
push
dec
mov
push
ja
fs
cmp
aaa
test
add
and
and
dec
add
mov
sub
adc
jmp
adc
adc
and
xchg
mov
pop
outs
add
inc
arpl
push
shl
dec
push
test
xlat
repz
cmp
mov
mov
in
popa
adc
jg
ja
lds
ds
inc
add
jp
out
sbb
pop
jecxz
shl
pop
adc
mov
iret
popa
push
dec
mov
sub
fiadd
mov
pop
or
mov
(bad)
(bad)
cmp
aaa
mov
pop
fwait
cmp
push
sbb
in
sbb
xor
sbb
adc
test
int3
or
outs
push
add
mov
js
push
jns
je
ins
dec
outs
outs
jb
popa
div
out
arpl
fs
int3
mov
outs
addr16
and
dec
inc
xor
add
popa
ins
pop
cmp
mov
sub
dec
push
pop
sti
(bad)
pop
fist
push
jns
gs
push
dec
xchg
push
imul
push
mov
sti
popf
data16
arpl
sbb
into
gs
ins
xor
push
jle
jne
arpl
gs
fild
xor
mov
ins
popa
jae
cmp
dec
pop
mov
outs
or
addr16
push
popa
push
popa
outs
je
sbb
out
data16
iret
push
sbb
jbe
inc
arpl
gs
movs
push
adc
aas
outs
ins
adc
push
ret
jmp
push
push
push
movs
mov
inc
ins
dec
bound
jno
lahf
cmp
push
pusha
xlat
ins
daa
sbb
sub
add
aas
and
out
jl
mov
dec
sbb
push
xor
adc
add
mov
sbb
adc
cmp
sbb
sbb
xor
mov
ds
jns
inc
nop
arpl
mov
push
lock
sub
xor
cmps
inc
out
jp
sti
aad
test
imul
outs
ins
pop
or
push
ins
dec
sbb
mov
in
jo
sbb
push
jae
pusha
(bad)
cmp
cmp
xor
aaa
adc
xchg
sub
xchg
jbe
fst
mov
or
fs
sub
mov
imul
xchg
je
jb
imul
mov
cmp
inc
add
lods
outs
clc
jbe
push
mov
lods
lea
dec
dec
push
cmp
sbb
dec
jo
add
repz
jb
fucomi
les
fld
cmp
je
mov
stc
in
outs
popa
ins
sbb
inc
bound
xchg
sbb
inc
div
pop
push
shl
ins
outs
bound
fidiv
push
or
es
fs
mov
int
sbb
popa
pop
les
fwait
mov
mov
mov
inc
jbe
rcr
jl
push
mov
fwait
cmps
dec
in
xchg
adc
int3
in
fiadd
pop
push
outs
or
int
or
jo
sbb
push
jae
loopne
cmp
imul
xor
out
movs
sbb
inc
push
inc
and
shr
imul
rol
bound
bound
call
in
pop
popa
or
mov
jo
gs
xlat
xchg
fs
mov
rcr
fmul
push
push
dec
sar
sahf
dec
in
mov
pushf
retf
mov
sub
fnstcw
xor
sub
mov
dec
inc
sbb
jno
add
dec
fistp
push
dec
xor
push
sbb
out
popa
pop
fiadd
inc
call
rol
outs
cmp
add
pop
gs
int3
mov
sbb
out
push
xchg
lods
pop
fidiv
test
push
inc
pop
jne
ins
pop
pop
and
call
cmc
jb
fwait
(bad)
ror
jge
dec
xor
adc
test
inc
cmp
pop
xor
shr
jne
je
pop
cld
inc
adc
or
jo
jns
push
xor
sbb
adc
bound
sub
popaw
push
lea
adc
add
fisubr
inc
shr
imul
call
push
xor
pop
jmp
push
jnp
mov
ins
imul
ins
mov
or
mov
mov
cs
cmp
nop
loop
je
js
dec
or
jg
daa
(bad)
xor
and
imul
pop
cmps
cmp
cdq
inc
mov
shr
scas
jne
pushf
push
data16
mov
imul
inc
aam
dec
shl
sub
add
and
sub
mov
xor
add
jnp
or
pop
fisub
jae
bound
xchg
inc
sub
outs
imul
dec
dec
hlt
xchg
pop
pop
dec
fidiv
iret
xor
mov
cs
dec
call
jne
(bad)
test
sub
push
sub
loope
mov
sub
and
jae
xor
pop
and
popa
jp
add
imul
push
dec
fidivr
xor
xor
dec
push
sub
out
or
fs
(bad)
fs
cmc
mov
adc
in
int
stc
push
fcomp
pop
imul
mov
push
adc
arpl
mov
ret
jo
mov
bound
xor
rcl
mov
jg
and
bound
outs
sub
push
bound
enter
sub
bound
jecxz
aaa
adc
fbstp
jb
(bad)
adc
out
and
sbb
cmps
cmp
jmp
(bad)
mov
xor
inc
pop
je
mov
push
and
add
jae
cmps
jb
inc
and
push
cmp
xor
mov
adc
mov
in
cmp
lods
mov
imul
mov
adc
sbb
inc
ins
sbb
mov
push
adc
or
inc
inc
je
pop
dec
lock
ins
addr16
or
pop
ins
bound
imul
add
sbb
scas
inc
(bad)
pop
mov
push
sbb
data16
mov
inc
out
mov
mov
inc
inc
add
js
fisttp
pop
popf
jbe
outs
arpl
or
xchg
fs
dec
push
push
fwait
lock
inc
arpl
inc
inc
add
test
pop
daa
dec
call
shl
popa
mov
cmps
dec
data16
xchg
push
inc
push
pop
and
ror
and
push
dec
cmps
cmps
cdq
out
mov
dec
dec
inc
adc
nop
test
ins
popa
push
jl
jo
cld
add
gs
ins
ins
fs
mov
jo
or
pushf
xchg
rcl
jae
mov
cmp
sbb
xor
and
push
push
outs
mov
scas
sbb
push
scas
mov
int3
mov
pop
test
inc
outs
xor
or
jne
call
fmul
jno
adc
fimul
xlat
rol
in
mov
push
sbb
add
dec
push
es
adc
sub
outs
rol
cmp
movs
jecxz
push
dec
inc
scas
bound
mov
(bad)
jecxz
mov
(bad)
aad
mov
je
sbb
or
mov
mov
stos
jno
sbb
inc
sbb
(bad)
repz
push
out
test
jns
adc
mov
adc
dec
imul
or
outs
sbb
push
in
xchg
push
push
loope
dec
mov
jl
loope
outs
arpl
or
xor
add
jae
imul
leave
shl
lock
fisubr
mul
inc
pop
sub
sbb
fwait
dec
ins
lods
scas
stos
inc
call
in
scas
sub
data16
hlt
or
pop
popa
push
inc
ins
cmp
adc
inc
sub
dec
push
pop
inc
xor
cwde
add
shl
sbb
fwait
xor
iret
dec
jae
ss
add
adc
jmp
cmps
jmp
add
add
loopne
retf
js
and
push
xlat
push
push
sbb
int3
inc
je
mov
push
cmp
call
or
xchg
adc
inc
pop
sbb
dec
push
inc
xor
test
in
or
adc
out
mov
push
push
pop
mov
sub
ins
ficom
outs
adc
inc
or
(bad)
data16
mov
push
push
sub
push
push
inc
xchg
push
inc
mov
data16
adc
mov
data16
fidivr
aam
sub
push
push
push
sub
add
inc
ins
int
push
test
and
inc
movs
jo
(bad)
mov
sub
dec
fmul
adc
sbb
inc
in
sbb
loope
dec
xor
enter
dec
push
sbb
mov
pop
aad
push
push
push
(bad)
push
nop
loop
sbb
gs
sbb
add
jno
or
add
jl
outs
cmp
fidiv
inc
inc
fs
bound
lds
addr16
or
push
adc
out
sub
mov
test
adc
cwde
call
or
push
add
and
or
je
adc
or
or
push
jae
push
mov
push
cmp
push
fisub
and
dec
(bad)
dec
outs
cmp
jae
or
sbb
sbb
ret
jb
push
je
push
add
xchg
or
loopne
out
mov
add
cli
and
jmp
add
arpl
je
gs
pop
pusha
and
mov
clc
or
jae
mov
adc
in
popf
dec
xor
add
push
inc
and
test
pushf
mov
(bad)
adc
push
mov
jmp
je
push
push
dec
xchg
and
dec
icebp
sbb
add
add
(bad)
clc
add
adc
out
outs
lods
add
mov
jae
xor
ss
in
es
popa
les
pop
and
pushf
mov
fs
rcr
or
xor
mov
jge
(bad)
adc
(bad)
inc
imul
or
inc
lods
jne
sbb
es
iret
pop
cmps
leave
or
aam
and
int3
or
ficomp
and
push
jne
or
jo
bnd
jae
ret
add
ret
pop
adc
push
or
xchg
or
pop
push
adc
inc
jmp
sbb
inc
shl
jae
sub
aad
ins
sub
es
add
cdq
mov
inc
cmp
iret
xchg
xchg
retf
xor
out
xchg
add
dec
push
cli
xchg
or
or
fld
nop
jmp
mov
add
or
cmovne
out
mov
js
sbb
enter
outs
mov
test
jp
ins
and
or
push
(bad)
(bad)
jae
lahf
pop
ins
imul
or
lock
add
lods
retf
push
add
push
xor
add
lock
push
jns
out
dec
push
cmps
setge
cmc
push
or
div
mov
fld
dec
push
std
or
fwait
and
and
mov
fsub
add
jle
or
adc
lods
adc
and
ins
outs
popa
ds
sbb
push
push
shl
or
adc
cmps
adc
mov
movs
not
cmps
add
push
imul
gs
or
popa
sub
dec
add
adc
mov
shr
and
jae
inc
outs
and
sub
add
adc
dec
add
add
mov
add
pusha
xor
or
push
rcl
sbb
in
and
jmp
and
ret
or
dec
jnp
add
ins
mov
test
fs
sub
pop
(bad)
daa
call
es
inc
addr16
bound
ret
add
mov
fwait
dec
jb
add
stos
mov
dec
inc
enter
mov
dec
cld
enter
bound
sbb
and
cmp
mov
shl
jae
push
push
add
adc
addr16
enter
in
and
jge
outs
push
push
xor
mov
jns
pop
and
xchg
(bad)
imul
jo
jnp
(bad)
arpl
fimul
sub
push
or
xchg
pop
inc
push
push
mov
inc
scas
add
(bad)
scas
fmul
dec
cmp
fnsave
and
or
or
mov
das
cwde
add
cmp
add
add
scas
add
into
aad
loopne
loope
adc
push
rcr
and
inc
neg
shr
xchg
or
add
push
aam
popa
or
pop
lods
mov
push
cld
pop
adc
cdq
(bad)
test
inc
or
push
adc
xor
and
sbb
or
arpl
inc
retf
inc
sub
enter
sbb
pusha
hlt
xor
mov
push
jbe
adc
add
rol
mov
adc
or
dec
dec
xchg
adc
fadd
or
in
call
add
and
adc
sbb
in
sub
outs
pop
push
xchg
jo
lds
pop
cmp
xchg
sub
ins
jns
add
rcl
loope
jns
cs
dec
dec
mov
jae
or
(bad)
lea
jns
add
sbb
mov
shr
test
push
stos
jbe
lock
adc
or
vcvtss2sd
cmp
xor
aam
inc
add
adc
js
mov
sbb
pusha
enter
sbb
xchg
adc
add
or
sub
sub
xor
aas
dec
fcomp
ror
adc
pop
js
add
fs
dec
stos
dec
gs
sub
enter
ss
mov
or
inc
or
push
push
stos
popa
and
gs
jge
pop
xchg
pop
xor
or
sbb
inc
push
es
out
hlt
inc
out
sub
test
jb
add
sbb
int
adc
sbb
adc
add
add
inc
fwait
sub
imul
rol
mov
retf
mov
test
inc
loope
sbb
xchg
mov
sbb
add
jecxz
inc
pop
sub
stos
and
pushf
dec
xchg
xor
push
sub
aaa
dec
xor
or
mov
inc
sbb
shl
rcr
or
loopne
lahf
inc
cmp
dec
or
add
aaa
cmp
inc
inc
test
cmp
sbb
daa
or
popa
and
cmp
data16
xchg
cmp
rcr
sub
inc
xor
jge
ror
std
and
fild
pop
or
fadd
dec
adc
lea
xor
out
adc
scas
dec
and
bound
dec
jbe
or
outs
fs
clc
pop
add
xchg
ins
push
and
fnsave
outs
enter
sub
aaa
add
imul
add
mov
cmc
or
icebp
xchg
xor
push
or
sub
or
fimul
mov
ficomp
out
fsub
mov
adc
or
cmc
imul
aad
push
inc
inc
inc
and
dec
push
mov
sbb
ins
jmp
sbb
fdivr
jge
push
push
mov
jo
ins
hlt
add
inc
leave
inc
inc
gs
cmp
mov
adc
les
ins
cmp
cmc
pop
aas
bound
xor
gs
ja
cmp
sub
dec
adc
cmp
and
mov
xchg
and
dec
and
or
xor
add
add
addr16
ret
adc
add
imul
add
mov
add
inc
or
cmp
xor
leave
aas
push
loopne
or
lock
add
or
leave
daa
push
stos
pop
add
pop
add
dec
hlt
daa
lock
add
bound
xchg
movs
add
dec
jo
daa
xchg
push
dec
cs
sti
jl
je
loope
add
pop
pop
inc
in
jae
push
popa
imul
in
imul
aas
or
loopne
adc
sbb
ins
call
push
push
mov
aam
or
dec
ret
or
push
outs
pop
or
or
xchg
or
mov
test
xor
cmp
xchg
shl
push
pop
jmp
jne
sbb
or
lea
lea
cmp
cmp
fs
pop
and
mov
push
cmp
and
popf
dec
leave
leave
ja
jnp
push
adc
loope
pop
test
jbe
dec
pop
sub
rcl
jno
add
inc
sbb
and
(bad)
arpl
jl
sbb
or
sbb
daa
pop
adc
xor
push
fimul
fiadd
adc
cmps
add
xor
js
loopne
popa
(bad)
jo
pop
cmp
adc
add
dec
push
adc
dec
push
or
and
push
ins
or
push
cwde
call
add
mov
sub
sbb
mov
jo
mov
add
ret
xor
mov
pop
in
and
or
sub
repz
imul
js
imul
push
or
or
pop
fist
add
push
sub
in
lock
aaa
or
ret
popf
pusha
dec
or
sub
mov
mov
cmp
dec
arpl
movs
lock
jnp
pop
xchg
nop
pop
loope
xchg
and
dec
xor
cs
pop
cmove
inc
push
dec
push
pop
inc
xchg
lock
dec
push
push
inc
push
or
addr16
inc
mov
or
shl
or
mov
retf
rol
ins
popa
jno
je
add
inc
mov
mov
pop
pop
retf
adc
int
popa
or
sub
icebp
inc
inc
scas
or
arpl
ja
jmp
and
xor
dec
add
mov
outs
mov
dec
ins
outs
or
add
add
and
or
enter
rcl
addr16
out
pop
jns
jge
nop
xchg
push
inc
dec
or
ss
sub
ret
sbb
imul
dec
sbb
add
icebp
repnz
loope
lahf
outs
in
iret
int
mov
xchg
cwde
cdq
std
(bad)
(bad)
cmps
cmps
cmps
mov
mov
fcmovu
xlat
out
jecxz
out
fstp
fcmovne
daa
(bad)
out
mov
scas
lods
stos
scas
lods
stos
cmp
mov
mov
push
imul
jl
test
cdq
cdq
call
movs
mov
(bad)
xlat
(bad)
loope
mov
cmc
hlt
repz
mov
mov
add
scas
scas
sahf
pushf
cdq
nop
lea
aas
jo
pop
test
jg
nop
fdivr
int3
sub
sub
pop
xchg
dec
and
test
clc
neg
mov
sub
fldcw
jne
(bad)
ret
fidivr
sti
xchg
mov
dec
pop
jno
stos
xchg
xchg
xchg
stos
lea
idiv
call
scas
scas
mov
cwde
mov
ins
fidiv
ins
fild
sti
(bad)
fld
(bad)
cwde
lahf
lods
movs
movs
mov
fwait
out
add
bound
push
jb
jnp
jge
outs
scas
ss
adc
outs
loopne
das
push
js
ret
call
mov
or
out
inc
jns
aaa
jb
add
xor
xchg
mov
aas
(bad)
cld
(bad)
jmp
mov
jnp
push
sub
je
add
jle
dec
jl
or
out
ss
leave
fprem1
(bad)
cld
(bad)
(bad)
mov
push
test
inc
rol
out
jg
je
jmp
and
add
scas
fstp
repnz
arpl
mov
aas
test
fcom
mov
push
sub
xchg
call
xchg
icebp
cmp
in
or
mov
cld
pop
loop
mov
mov
leave
retf
fwait
mov
mov
test
addr16
in
clc
add
in
jmp
mov
sahf
stos
(bad)
das
mov
xchg
lock
sub
(bad)
mov
jg
dec
add
nop
call
mov
retf
(bad)
fisttp
into
into
int
in
xchg
xchg
xchg
mov
cmp
mov
jp
mov
aad
mov
repz
jg
xchg
icebp
leave
fdivr
push
push
les
sbb
xchg
mov
mov
mov
(bad)
cld
add
imul
xlat
(bad)
xlat
loopne
jmp
jmp
out
jg
stos
repnz
or
xor
inc
xchg
sar
dec
inc
cmp
or
test
leave
dec
cmovne
jns
jns
and
jae
jne
xor
sbb
call
lods
adc
jp
push
imul
mov
nop
and
or
inc
dec
cs
daa
sub
test
sub
(bad)
cs
mov
(bad)
add
dec
dec
pop
lea
dec
fmul
or
aad
add
dec
adc
test
add
imul
add
or
adc
xchg
pop
aad
add
jo
popa
inc
mov
add
add
xor
and
imul
push
test
movs
or
mov
add
dec
rol
gs
idiv
adc
in
jae
or
adc
addr16
cmps
pop
push
das
pop
pusha
cmp
inc
mov
neg
icebp
push
dec
and
dec
push
bound
ja
push
imul
loope
scas
arpl
add
and
fld
adc
mov
dec
mov
xor
rcr
pop
adc
(bad)
into
ret
arpl
xchg
sub
or
cmp
aam
sub
lods
sbb
or
sar
add
iret
adc
bound
sub
push
(bad)
dec
mov
or
adc
jo
xor
xor
add
jecxz
sub
push
pusha
adc
rcl
dec
add
adc
inc
pop
xor
and
add
add
ja
repnz
sbb
mov
ins
outs
adc
cs
fsub
xor
mov
or
inc
xchg
jo
cmp
ret
cmp
or
mov
ins
sbb
add
inc
rcl
movs
stc
sub
es
add
or
stc
ret
mov
or
push
inc
adc
push
cmp
cdq
popf
loope
xor
jns
or
(bad)
scas
or
pushf
or
xor
(bad)
les
inc
js
movs
mov
arpl
dec
data16
imul
or
jno
test
pop
sub
shl
sbb
push
xor
pop
jno
pop
pop
or
jae
jg
adc
xor
mov
ret
fsub
and
adc
jae
call
or
push
pop
mov
je
hlt
jae
pop
mov
dec
push
addr16
add
in
shl
call
mov
popf
and
ins
add
mov
ret
or
retf
push
ins
inc
ins
ins
sub
sub
sub
cmp
lea
cmp
dec
imul
xor
add
cmp
and
sub
dec
ret
push
and
xor
or
das
xor
cmp
xor
in
xor
sbb
inc
xchg
sub
loop
call
outs
aaa
popf
or
or
or
test
sbb
push
or
lock
test
inc
and
sbb
cmp
loopne
xor
jno
sub
test
(bad)
out
and
jae
mov
adc
bound
or
mov
shl
adc
jp
pop
pop
not
xchg
(bad)
and
or
lods
xor
or
xor
jbe
xchg
and
adc
pop
lahf
cld
cmp
ret
mov
sbb
adc
push
mov
movs
in
or
in
or
push
push
sar
inc
in
and
or
adc
mov
xor
or
nop
repnz
scas
adc
ror
int
cmps
or
loop
or
lods
ss
sub
mov
push
dec
loop
mov
or
adc
add
repz
or
int
add
icebp
cmp
pop
inc
push
and
scas
fcomp
xor
mov
mov
mov
cmp
inc
jmp
mov
add
dec
xchg
popa
xchg
hlt
out
pop
push
sub
mov
adc
adc
push
das
inc
retf
loope
js
pop
adc
ins
xchg
xor
and
sub
inc
mov
es
test
push
popa
fs
mov
xchg
imul
jmp
imul
jmp
jecxz
lds
xchg
or
in
or
or
jns
test
add
fs
lods
push
jmp
loop
add
mov
mov
fiadd
out
inc
dec
adc
dec
gs
div
adc
mov
les
inc
popf
mov
das
sub
es
inc
add
add
and
inc
cmp
movs
cmp
sbb
add
cmp
dec
add
mov
and
js
clc
push
xor
adc
add
or
adc
xor
inc
call
mov
dec
add
inc
pop
adc
xchg
inc
mov
div
repnz
neg
jbe
mov
cdq
cdq
fnsave
inc
add
xchg
and
adc
xor
pop
ins
ss
add
into
mov
sahf
adc
pop
xlat
or
cdq
inc
pusha
(bad)
push
sbb
call
les
int
ins
inc
and
retf
xchg
imul
xchg
push
or
es
and
call
xchg
add
rcr
and
mov
scas
cmp
(bad)
aam
call
cdq
popf
fldcw
push
adc
jbe
mul
inc
dec
sub
adc
add
inc
es
repnz
jbe
int
push
inc
int3
xor
ins
ss
(bad)
jmp
and
sbb
or
add
dec
xor
push
add
push
ja
pop
xor
mov
rcr
pop
adc
mov
push
popa
sub
call
je
add
ror
ins
outs
call
shl
pop
fsub
jo
sub
push
in
and
js
and
shl
call
cmp
adc
push
cld
add
pusha
pusha
push
mov
lock
mov
cwde
nop
dec
sti
or
add
xchg
and
fcomp
cmp
jbe
push
pop
adc
mov
out
addr16
rcr
push
out
or
bound
cmp
dec
ss
and
aam
pop
push
(bad)
mov
dec
inc
push
je
dec
or
mov
enter
or
bt
fs
into
add
cmp
inc
ds
or
mov
push
sbb
adc
int3
jmp
mov
cdq
jae
mov
adc
data16
push
int
jno
lods
clc
(bad)
sbb
inc
mov
sub
xchg
mov
rol
pop
sbb
adc
mov
and
loop
xchg
sbb
or
mov
call
mov
xor
ficom
or
mov
push
xchg
mov
pop
pop
pushf
xor
je
add
push
sbb
test
cmp
popf
movs
or
or
push
icebp
xor
popf
ds
les
jbe
outs
push
xor
inc
xchg
(bad)
(bad)
mov
mov
ds
mov
loopne
leave
dec
xchg
int3
je
loop
mov
fisubr
pop
ret
(bad)
xchg
popf
mov
jo
sbb
sbb
inc
or
add
xor
popf
and
push
adc
mov
in
fsubr
mov
(bad)
retf
in
cmp
out
jno
scas
imul
mov
jle
adc
out
ror
jae
or
add
sbb
add
sub
and
sub
cmp
mov
je
jo
xor
xlat
pop
inc
fs
add
stos
pusha
pop
data16
and
jb
jl
shr
cld
jbe
jmp
(bad)
mov
sahf
outs
nop
sub
push
repz
pop
mov
and
int3
mov
pop
sub
fild
gs
pusha
cmp
add
inc
add
loopne
sub
sbb
cmp
dec
inc
push
mov
mov
and
out
mov
sahf
mov
jle
pusha
mov
mov
add
xchg
loopne
push
push
mov
push
mov
sar
fucomip
add
loop
cmp
ficomp
xor
jmp
dec
inc
movs
mov
(bad)
jecxz
lock
push
fiadd
mov
pushf
cmp
push
in
push
je
dec
sub
inc
and
jne
leave
ss
mov
sub
imul
and
rol
xor
repz
popf
or
sahf
push
and
sahf
movs
pusha
jne
sbb
jb
out
add
ss
sub
loop
push
mov
pop
repnz
add
mov
inc
stos
fs
ret
xor
data16
lods
mov
pop
cdq
dec
pop
cmp
add
inc
add
mov
ins
add
popf
xlat
shl
add
ins
sahf
mov
pushf
mov
pop
cmps
in
(bad)
jp
sub
ret
call
jo
mov
out
mov
push
paddusb
cmps
add
fcom
push
pop
fsubr
movs
rol
adc
ins
repnz
dec
jbe
retfw
and
sbb
int3
xchg
cmp
mov
add
cmp
icebp
push
icebp
dec
jge
sub
mov
add
jb
int3
sub
cmp
stos
pop
jb
in
or
ret
sbb
sbb
and
cmp
in
mov
push
cli
bound
mov
loopne
(bad)
int3
les
add
sbb
jp
and
xor
sbb
xchg
mov
stos
push
sahf
sub
jno
xor
mov
adc
push
xor
stos
repnz
push
daa
xor
daa
pop
rcr
lods
loopne
pop
gs
cmp
loope
jo
cs
xchg
or
sbb
(bad)
daa
sbb
cdq
pop
mov
retf
out
sub
cmp
test
jmp
fisub
mov
mov
mov
rol
jo
movs
scas
mov
or
call
fsubr
je
int3
inc
sbb
cmp
jnp
dec
test
adc
sar
outs
adc
fsub
inc
scas
push
out
shr
sub
mov
psubusb
loop
add
clc
ror
push
adc
adc
mov
jmp
and
inc
add
cmp
or
sbb
sbb
cmp
jne
jnp
addr16
mov
test
dec
les
sbb
mov
aad
add
lds
test
jne
cmps
xchg
cmp
sub
sbb
cmps
or
mov
lock
or
test
adc
dec
ja
ins
dec
and
fcmovu
add
dec
loop
comiss
xor
in
inc
cmp
loopne
jl
(bad)
ror
ret
pusha
add
pop
fsub
cmp
sub
ret
jl
sub
ret
and
(bad)
pop
push
sbb
mov
stos
test
into
push
dec
pop
xchg
cmp
push
add
pop
or
inc
add
inc
int
mov
call
and
lods
mov
fwait
xor
mov
xchg
scas
xchg
es
stos
xor
sar
mov
pop
sbb
mov
push
cs
mov
sbb
inc
pop
cmp
xchg
jae
ret
add
rol
jle
stos
xchg
sar
call
mov
sub
outs
or
imul
lds
pop
pop
shr
mov
xor
ss
xchg
mov
inc
cmps
(bad)
mov
push
inc
mov
jb
xchg
jo
js
mov
cmp
(bad)
(bad)
(bad)
nop
pop
cmp
cmp
push
pushf
mov
ret
pop
add
bnd
jbe
test
jp
mov
xor
ret
in
out
mov
push
sub
sbb
dec
or
sbb
loope
mov
sub
mov
mov
push
xor
xor
aaa
push
push
les
repnz
sbb
adc
mov
ss
aas
loopne
mov
xor
data16
fsub
dec
les
loopne
and
or
mov
cmp
and
test
xor
aam
mov
movhps
fs
push
(bad)
mov
sbb
or
hlt
sbb
cmp
data16
inc
ret
call
sbb
xchg
add
xor
jnp
lods
xor
xchg
(bad)
rol
sti
cmp
jmp
cmp
mov
fsubr
add
dec
mov
add
mov
sub
ficomp
fdivr
ins
ret
xor
ror
inc
mov
pushf
pusha
test
push
add
icebp
mov
cwde
test
adc
add
xchg
sub
jle
lods
in
or
sub
jo
pushf
lods
push
and
sbb
(bad)
fcom
popf
fstp
js
push
jno
(bad)
mov
mov
dec
sub
ds
addr16
mov
and
pusha
push
xor
test
aas
lods
push
ja
loop
rcr
adc
fcomp
lock
loope
loope
cmp
push
mov
push
pop
xor
adc
loopne
loopne
loopne
call
lods
icebp
jo
jl
xor
xchg
ret
jmp
mov
pop
sbb
pop
mov
cmp
inc
mov
jp
bound
pushf
sbb
sbb
inc
cmps
ror
inc
mov
jb
push
fidiv
xlat
pop
mov
dec
cli
pop
inc
rcl
sti
xor
jno
jl
aaa
lock
add
sub
mov
xchg
mov
add
add
add
push
xor
loope
or
cmp
fs
mov
in
je
fcom
sub
test
movs
pop
jl
jb
and
mov
push
or
pop
add
cmp
pop
push
mov
test
xlat
push
cs
jp
stos
jo
sbb
mov
adc
push
and
(bad)
daa
sbb
ds
sub
cdq
push
xchg
in
data16
pop
or
pop
in
jo
mov
xor
mov
mov
(bad)
dec
daa
sbb
aas
test
push
or
xchg
sub
lea
mov
pushf
ror
out
daa
into
push
push
daa
hlt
xchg
repnz
xor
mov
pop
mov
and
sbb
out
pusha
rcr
ds
cmp
lods
out
outs
mov
or
bound
iret
loopne
ret
or
cmp
mov
pop
fst
pop
jmp
sbb
add
mov
sar
jmp
ins
or
loope
push
call
cmp
mov
pop
cmp
mov
jno
mov
outs
add
sbb
jge
mov
lock
je
leave
into
dec
lahf
mov
xor
sbb
pop
int3
or
or
pop
add
and
sub
push
daa
pop
pop
sar
lods
shr
pop
adc
scas
in
mov
dec
push
js
xor
cs
out
sub
cld
add
into
fldenv
adc
xor
inc
fld
xor
fdivp
lods
daa
push
jp
add
jb
and
test
and
jmp
pop
into
inc
inc
scas
fwait
add
shl
mov
or
sahf
je
pop
cmps
lds
(bad)
dec
inc
mov
ja
xchg
pop
out
and
fwait
and
push
adc
nop
and
dec
mov
rol
mov
test
fst
ss
shr
pusha
loopne
mov
cmp
adc
outs
sub
add
push
mov
jno
sub
loopne
inc
loopne
mov
call
sub
jmp
mov
xchg
popa
push
pop
popa
mov
add
push
jmp
stos
and
jo
mov
cmc
add
or
dec
cmps
add
or
out
jb
test
test
sbb
mov
pop
into
hlt
in
push
lahf
push
xor
pop
sbb
pop
ja
icebp
add
sub
sbb
neg
mov
adc
jp
adc
sbb
je
mov
orps
xchg
inc
into
out
(bad)
(bad)
cmc
sar
mov
xor
inc
imul
jmp
mov
xchg
pop
(bad)
lock
loope
inc
test
jne
fnstenv
mov
add
sbb
pop
or
hlt
loop
push
(bad)
mov
addr16
add
fisub
sar
in
push
sahf
or
into
js
call
test
shr
in
ds
sbb
pop
popa
jno
adc
cwde
xor
in
cmp
xchg
pusha
gs
cld
ret
fucom
xor
popa
jle
call
loopne
nop
jb
xchg
into
sub
add
ds
(bad)
imul
sub
jmp
add
and
sbb
bound
xchg
jo
push
mov
push
or
pop
mov
ins
bound
ret
fmul
dec
iret
outs
and
(bad)
mov
fld
fs
adc
or
mov
sbb
xchg
push
mov
loope
cwde
push
mov
push
ja
sub
adc
push
jnp
mov
call
adc
cmp
mov
test
and
xchg
cdq
add
enter
xchg
pop
popf
mov
xchg
(bad)
pusha
pop
fmul
cmp
or
cmp
and
cmp
mov
pushw
into
jmp
xchg
xor
mov
and
ret
popf
loope
sbb
mov
outs
or
je
add
xor
call
loop
xor
xchg
cmp
sbb
push
xor
aad
or
add
sub
retf
(bad)
pop
dec
fs
cmp
mov
call
xor
bound
imul
pop
(bad)
mov
pop
pop
into
xchg
pop
std
int
dec
xor
aaa
xor
aaa
and
inc
jo
sbb
dec
cmp
sub
loopne
daa
inc
xchg
dec
dec
xor
and
(bad)
xor
rol
js
jae
jnp
cmp
rcl
test
push
mov
push
add
(bad)
paddusw
xchg
inc
add
push
or
je
rol
sbb
enter
mov
daa
cmp
(bad)
sar
mov
add
js
fcomp
cmp
aam
pop
fdiv
jo
dec
fcom
xor
or
je
mov
sub
pop
sahf
and
push
in
scas
call
adc
into
jmp
ss
pop
popf
je
mov
pop
imul
ss
jbe
rcr
mov
js
and
cwde
sub
jge
pushf
cmp
and
mov
cmp
ret
popa
mov
inc
xor
icebp
push
jp
mov
sbb
pop
jmp
push
or
jmp
xor
mov
xchg
les
pop
mov
sbb
xcrypt-ofb
cmps
imul
aad
xchg
cmc
cmp
mov
mov
ror
or
sub
pushf
loope
sahf
inc
scas
daa
jo
adc
inc
sar
loop
stos
nop
sbb
or
rol
addr16
aaa
dec
jbe
jb
jnp
xor
push
les
or
xor
pop
and
sbb
out
mov
repnz
loopne
mov
jbe
ret
add
je
lds
adc
rcl
je
sub
data16
and
jle
push
fs
ret
mov
sbb
lods
push
or
jo
fnstenv
cmp
dec
add
fwait
clc
cmp
xchg
scas
out
xchg
cmp
jmp
hlt
jo
jmp
mov
pop
dec
push
add
(bad)
dec
cld
mov
mov
cmp
lock
arpl
xlat
(bad)
popf
xor
outs
je
pop
arpl
(bad)
or
mov
loop
push
xchg
push
es
or
mov
test
stos
scas
xchg
bound
test
loopne
mov
xor
call
jo
xchg
push
cwde
push
add
push
div
aaa
pusha
adc
movs
add
mov
or
mov
mov
cmp
lock
fucom
movs
loopne
ret
ja
or
fmul
add
pusha
aaa
mov
call
pusha
jno
jmp
loopne
xchg
xor
sbb
stos
das
ffree
mov
bound
lahf
xor
inc
xchg
shl
nop
mov
cmp
das
add
push
lods
cmp
xor
imul
fsubr
cmp
sbb
add
loopne
fadd
loop
mov
cmp
sub
inc
sbb
xor
int3
or
pop
sub
loope
add
js
dec
fmul
push
adc
xchg
add
loope
sub
in
adc
add
out
stc
mov
dec
xchg
or
pop
sbb
popa
or
add
retf
retf
sbb
push
push
scas
add
add
push
push
sbb
sbb
add
lods
add
js
push
call
rcl
sbb
pop
es
into
rcr
pop
mov
mov
xchg
test
cmp
outs
les
push
add
mov
mov
fstp
ins
and
cmp
gs
sbb
pusha
ficomp
and
jo
add
push
movs
loopne
shl
loopne
xchg
(bad)
xchg
and
push
outs
mov
inc
ss
ins
outs
mov
lods
adc
add
ja
outs
and
inc
jle
(bad)
leave
jmp
cmp
push
push
ins
mov
pop
repnz
push
cmp
add
sub
test
daa
cmp
jmp
test
loopne
push
push
add
xchg
push
dec
cmp
or
push
dec
fnsave
or
out
rol
mov
pop
pop
jecxz
push
out
imul
test
mov
push
pusha
cmc
cmp
sbb
pop
or
mov
outs
jp
jo
(bad)
add
aad
adc
or
ror
aas
mov
mov
dec
mov
cmp
add
ret
inc
cpuid
or
dec
pop
js
pop
or
ret
fst
inc
cld
mov
fs
cmp
bound
mov
push
jns
fldenv
lods
adc
xchg
pop
sbb
add
dec
pop
mov
out
call
cdq
add
daa
fcomp
int3
and
test
ins
test
leave
jbe
lods
dec
or
add
mov
lods
cmp
mov
push
xchg
icebp
aam
test
and
mov
ret
hlt
inc
or
nop
dec
xchg
fadd
xor
mov
sbb
fdiv
cmp
add
adc
enter
out
pusha
idiv
add
std
adc
mov
mov
rol
push
pop
(bad)
into
add
or
jno
push
cmps
pushf
jno
and
jbe
fidiv
jmp
rol
or
push
mov
mov
sbb
fsub
xchg
(bad)
inc
fcom
imul
arpl
cmp
lock
or
popa
jo
pop
and
je
or
pop
mov
test
das
cmp
inc
in
jne
push
push
mov
adc
loopne
mov
shl
inc
lea
xchg
shl
(bad)
pop
and
cmp
bound
sahf
xor
sbb
les
or
mov
enter
xchg
sbb
test
pop
cmp
in
jmp
int3
add
into
aaa
and
adc
dec
jo
push
mov
arpl
pop
popa
in
loopne
mov
adc
loop
rol
pop
(bad)
jp
sbb
push
mov
mov
daa
cmp
pop
add
rcl
out
ins
popa
add
dec
push
loop
into
xchg
pop
out
push
cwde
jbe
jb
cmp
pusha
out
inc
push
add
jmp
push
ret
xor
add
mov
ret
push
cmp
in
(bad)
sbb
mov
mov
or
push
(bad)
retf
sbb
cmps
cmp
ret
arpl
push
popa
je
imul
or
lea
lock
ss
ret
imul
dec
xor
pushf
test
fstp
div
mov
dec
test
xor
pop
pop
or
int3
mov
loopne
xchg
fst
pop
sub
pop
and
cdq
add
jp
mov
add
inc
sbb
mov
xor
add
lods
mov
enter
or
or
neg
push
and
sub
ja
pop
iret
fmul
adc
xchg
push
outs
or
aam
jbe
(bad)
fiadd
dec
(bad)
out
mov
les
lock
mov
and
and
jecxz
(bad)
test
sub
dec
push
mov
cmp
sbb
pop
dec
cmps
repnz
retf
rcr
jo
sbb
addr16
in
mov
cld
push
into
jns
je
idiv
sbb
out
inc
inc
jle
js
inc
out
pop
dec
pop
sub
test
dec
or
pop
cwde
aad
out
mov
push
xor
push
cwde
fsub
lods
xchg
cmp
mov
sub
inc
(bad)
ret
sbb
jb
or
sahf
jo
adc
pop
data16
and
jae
xchg
add
inc
push
mov
out
test
cmp
cmp
xor
pop
lock
(bad)
jne
or
cmp
sbb
mov
sbb
inc
ins
or
pushf
jge
cld
movs
add
dec
sub
out
jne
jl
shr
mov
or
pushf
adc
push
mov
mov
mov
outs
jmp
push
data16
cdq
(bad)
pop
push
add
pusha
(bad)
out
push
xor
or
outs
cmp
(bad)
push
push
or
mov
add
(bad)
mov
mov
and
icebp
ret
xchg
jo
loopne
inc
cmp
out
push
pop
jp
hlt
je
add
mov
rol
test
xor
add
inc
(bad)
in
shl
sbb
adc
or
js
mov
sbb
cli
mov
loop
ror
in
sbb
pop
iret
mov
bound
pop
push
mov
pushf
lds
sub
add
or
inc
and
pop
dec
pop
mov
pop
movs
mov
dec
mov
cmp
xor
xor
sbb
cmp
lods
xor
inc
aaa
js
adc
jns
mov
cli
or
js
mov
push
push
fld
sbb
pop
mov
push
ud2
mov
jo
outs
sar
int3
pop
int3
add
sub
popa
sub
dec
js
jb
movs
jge
loopne
ret
push
out
gs
adc
sbb
jnp
cmp
lock
inc
xchg
add
jnp
add
pop
cmp
and
not
xor
mov
push
add
cmp
dec
inc
pop
sbb
jo
loopne
mul
out
sbb
and
arpl
pop
imul
mov
mov
xchg
pop
mov
cmp
push
lock
nop
(bad)
cwde
sbb
cmp
add
jne
cmp
pop
jnp
sbb
adc
pop
into
dec
sub
out
cmp
pushf
cmp
outs
popa
jne
cmp
mov
dec
mov
sbb
fsub
pop
aam
push
jmp
add
ret
ficom
addr16
(bad)
outs
not
lea
add
fnstsw
add
sbb
das
mov
mov
fwait
cmp
add
push
inc
scas
cmps
fsubr
inc
jp
ss
xchg
push
mov
add
jecxz
mov
into
inc
in
sbb
shl
adc
push
xor
adc
mov
add
mov
sbb
pop
mov
mov
mov
(bad)
xor
inc
xchg
sbb
retf
rol
push
aad
pop
test
add
mov
cmp
loopne
aad
and
push
sub
adc
fs
sub
mov
jb
push
pusha
(bad)
addr16
cmp
pop
sbb
sbb
loopne
pop
aas
sub
fstp
sbb
loopne
jno
dec
jnp
add
add
mov
mov
mov
mov
fidivr
repnz
dec
or
ds
nop
xchg
in
out
dec
xchg
mov
arpl
outs
pusha
push
test
inc
bound
inc
mov
or
rol
mov
arpl
dec
jmp
push
push
ret
dec
inc
xor
ja
pop
pop
and
ret
push
repnz
rcr
sbb
sbb
sbb
pop
adc
sub
and
cmp
scas
pushf
movs
sbb
jnp
lea
pop
(bad)
repnz
cmp
xor
pop
cs
and
cmp
inc
test
pop
popa
je
lock
adc
ret
data16
outs
(bad)
into
add
and
loope
pushf
push
xor
jecxz
aam
rol
mov
jp
mov
xlat
push
sub
pop
pushf
add
pop
xchg
into
jp
adc
xchg
adc
xchg
(bad)
sbb
movs
cmp
mov
sub
test
mov
xchg
jmp
ror
sbb
add
mov
add
daa
in
imul
add
sbb
xor
cmps
repz
push
mov
bound
(bad)
repnz
jne
push
sbb
test
cmp
jb
in
rcl
mov
push
sbb
lea
and
not
pop
cmp
addr16
nop
and
sbb
cmps
shl
sbb
mov
push
adc
fild
mov
jecxz
jbe
xchg
sbb
push
sbb
push
fidiv
test
out
inc
add
push
dec
sub
mov
aad
add
(bad)
aad
xchg
cmp
ret
mov
pushf
dec
cmp
sbb
js
jne
dec
mov
pop
pop
retf
ins
push
call
or
arpl
ins
ret
xchg
push
lods
xor
jo
and
dec
jae
sbb
mov
jns
sbb
das
pop
lds
and
mov
loop
sub
push
or
sbb
stc
aam
sbb
mov
pop
add
int3
lods
repnz
leave
movs
adc
mov
not
rol
xchg
inc
mov
arpl
dec
js
and
pop
or
int3
adc
and
arpl
add
mov
jmp
add
and
xor
push
xor
inc
movs
jmp
cs
sub
ss
in
ret
leave
push
out
ror
fild
cmp
dec
(bad)
retf
nop
push
enter
int3
fldenv
imul
sub
dec
sbb
arpl
jb
rol
cwde
dec
cmc
mov
push
outs
cwde
lea
(bad)
hlt
cwde
and
dec
mov
pusha
cld
sbb
ja
or
loop
dec
jne
sbb
add
mov
lock
neg
pushf
int3
pusha
mov
push
sub
arpl
loopne
shr
sbb
sets
cmp
pusha
sub
pusha
adc
dec
les
push
mov
(bad)
cmp
stc
jb
and
pop
mov
cmp
cs
push
aam
rol
xchg
jno
outs
pusha
and
xor
xor
cld
(bad)
int3
jo
enter
aam
movzx
xor
mov
popf
xchg
popa
jne
jno
jmp
cmp
xchg
frstor
out
fimul
xchg
outs
mov
mov
imul
cpuid
jp
movs
push
lock
cmp
push
mov
mov
dec
mov
outs
sub
sbb
inc
cmp
inc
loope
mov
sti
cmp
sbb
jo
imul
push
ficom
push
pop
sbb
dec
mov
push
div
not
pop
imul
mov
pop
cmp
dec
push
xchg
jecxz
or
and
xor
cmp
or
dec
je
add
xor
loop
jo
mov
mov
loop
push
fdivr
movs
push
fiadd
sbb
inc
outs
jp
test
or
push
lahf
mov
pop
adc
stos
adc
les
repnz
xchg
mov
ins
ret
jmp
js
ret
add
imul
sar
inc
jbe
movs
repnz
ficomp
imul
into
adc
xor
cli
fdiv
movs
mov
repnz
cmc
les
jo
lea
cmps
movs
sar
ret
inc
dec
mov
fnstcw
sbb
out
in
mov
scas
mov
cmp
loope
pop
cmp
add
or
add
pusha
or
or
lods
out
add
popf
pop
push
bound
add
ret
ror
clc
and
ror
and
push
push
dec
fnstenv
ret
mov
and
jmp
shl
scas
or
gs
fadd
cmp
add
leave
imul
ds
jo
cwde
jmp
cmc
push
pusha
cs
ret
or
shl
xchg
mov
xor
jmp
adc
jbe
ds
outs
xor
cmp
popf
in
xor
and
cmp
rol
mov
cmps
jno
jbe
and
xchg
adc
jno
shr
and
jp
pusha
addr16
jle
cwde
into
(bad)
fsub
fs
jbe
adc
sbb
addr16
xor
jo
jl
pop
mov
push
sub
push
pop
sbb
inc
cmp
dec
scas
jp
xchg
sub
pushf
pusha
test
sbb
ficom
jl
mov
dec
aam
cmp
mov
add
dec
push
jmp
cmp
fmul
(bad)
jl
mov
cli
and
jp
push
shl
loope
daa
mul
sub
out
ins
js
xlat
mov
out
sub
xor
rcr
imul
push
ja
ficom
pushf
xchg
cmp
pmullw
add
mov
test
xchg
jb
jp
xlat
imul
ja
dec
(bad)
pop
mov
shr
adc
mov
cmp
test
test
popa
push
pop
scas
pusha
sub
dec
xchg
add
call
push
add
loop
jg
retf
pop
ja
out
xlat
(bad)
push
mov
xchg
cld
jp
cmp
sbb
nop
out
push
ja
cmp
xchg
xor
push
xor
aam
sub
(bad)
xor
add
and
push
loop
mov
pop
push
pop
pop
pusha
xor
rol
aad
fimul
cdq
sub
ffree
jae
cmp
mov
pop
sbb
pushf
add
sbb
mov
call
or
cli
hlt
pop
or
arpl
dec
cmp
xor
or
jl
or
add
mov
push
movs
jns
inc
and
sub
xchg
cmp
mov
add
mov
inc
inc
xchg
push
shl
and
xchg
cmc
pop
addr16
das
fs
scas
xor
aaa
fdiv
sbb
dec
or
inc
pop
jp
jmp
(bad)
sbb
mov
ret
mov
pop
mov
popa
dec
xchg
repz
sub
pusha
outs
jo
push
or
sub
shl
pop
data16
cmp
mov
pop
jp
outs
pusha
je
jb
pop
loope
xchg
ret
arpl
cmp
sub
jp
lock
fmul
cmp
xor
(bad)
sub
xor
sbb
mov
add
pushf
dec
sub
out
or
sbb
cmc
loopne
push
add
mov
pop
mov
add
xor
sub
cmp
cmp
xchg
pop
dec
and
jns
loop
ficom
scas
xlat
inc
fcom
inc
les
inc
sbb
movs
xchg
add
xchg
and
dec
out
sbb
push
lds
out
aad
cmps
xchg
(bad)
cmp
cwde
pop
call
sbb
jo
daa
imul
mov
mov
cmp
add
sub
loopne
xor
adc
adc
add
push
les
mov
fstp
out
sbb
loopne
pop
pop
pop
pushf
sbb
jg
outs
loope
les
addr16
mov
stc
sbb
add
jns
sar
idiv
jle
xor
fs
loop
pusha
sahf
cmp
clc
adc
push
mov
inc
(bad)
fisttp
push
sbb
jnp
lock
mov
add
sbb
mov
jmp
stos
pop
inc
mov
xor
nop
sbb
mov
xchg
in
xor
in
lea
or
mov
dec
inc
bound
mov
or
psubusb
jg
sbb
scas
in
mov
jbe
and
popa
out
push
xor
fiadd
lods
and
sbb
out
aam
mov
loop
mov
add
add
ret
les
and
rol
pop
outs
movs
cmp
pop
lock
mov
hlt
xor
xor
jmp
jl
loop
sub
cmp
mov
mov
imul
cmps
mov
push
push
xchg
cmp
or
push
jp
sbb
dec
ror
add
dec
pop
or
ror
and
aam
xchg
and
lock
daa
pop
es
sub
sub
outs
sbb
xor
sub
and
cmp
xor
js
cli
mov
add
fwait
lock
and
jmp
push
cmp
rcr
push
enter
pop
imul
pop
jb
add
pop
jmp
jecxz
xor
pop
je
inc
fadd
xchg
push
dec
adc
pop
pop
sub
cmp
fmul
dec
sbb
sti
or
movs
adc
popa
mov
imul
int3
mov
xchg
pop
inc
fucom
and
dec
xchg
es
das
jmp
loopne
sbb
sbb
cmp
into
jp
hlt
cli
dec
outs
bound
pop
call
das
mov
xlat
dec
ins
mov
add
and
sbb
test
push
and
ror
lods
je
dec
call
loopne
pop
push
adc
inc
and
jmp
jecxz
sub
dec
jns
sub
add
lods
in
xchg
mov
aam
push
mov
jo
jl
push
fimul
ret
int3
clc
test
pushf
in
sub
(bad)
leave
inc
xor
fcom
shr
test
push
inc
mov
cmp
sbb
adc
xor
jmp
inc
loope
mov
pop
push
cmp
and
push
xor
xchg
(bad)
adc
xchg
cdq
es
je
popa
xor
ret
aad
mov
idiv
loop
mov
rcr
fdivrp
adc
jno
sub
test
mov
mov
mov
add
mov
pop
mov
test
push
adc
xor
ja
xor
sub
cmp
lock
xchg
or
jno
mov
mov
mov
mov
lea
lahf
sub
aaa
sub
add
mov
into
or
mov
push
pop
in
pop
inc
and
and
pop
lods
xor
xor
dec
mov
rol
mov
jp
test
push
(bad)
loope
adc
xchg
ins
test
ret
sbb
pop
pushf
cwde
and
inc
cmp
cmp
adc
xor
sbb
sbb
std
sbb
popf
lds
push
inc
imul
xor
into
jo
dec
cmp
mov
sbb
jne
inc
lock
push
pop
loopne
mov
shl
pop
mov
lods
xchg
xor
dec
js
xchg
mov
imul
dec
aam
mov
mov
jp
jmp
inc
inc
sbb
push
and
pop
sbb
jmp
outs
movs
and
and
enter
and
rol
sbb
cld
adc
cmp
mov
shl
in
xchg
mov
mov
pusha
inc
sub
xchg
sub
fadd
into
cwde
sbb
xor
mov
pusha
inc
dec
adc
nop
sub
dec
(bad)
push
cmp
add
xor
sbb
mov
or
or
fisub
mov
push
inc
push
xor
nop
pshufw
or
das
loopne
jle
push
rcr
dec
add
stos
dec
dec
ja
sub
in
add
mov
rcr
aaa
mov
jbe
add
pop
push
dec
jp
jle
mov
mov
mov
out
jl
jle
stc
es
pop
sub
pop
xchg
cmp
out
jo
push
mov
mov
xchg
cmp
js
push
pop
lds
cmp
dec
or
and
movs
lods
and
fs
xor
xor
aad
jl
pop
xor
sbb
xchg
pusha
xchg
(bad)
push
inc
pop
add
scas
outs
call
jp
xchg
mov
add
and
push
sub
ror
push
cmps
jmp
cmp
mov
test
bound
popa
mov
test
or
pop
inc
jbe
movs
inc
clc
xor
or
cmp
(bad)
fisubr
fcmovbe
loopne
leave
test
mov
popa
jno
bound
daa
adc
cmp
dec
and
add
inc
jbe
outs
(bad)
add
xor
fs
(bad)
loopne
rol
sub
retf
sbb
bound
mov
(bad)
push
lods
add
and
loop
and
ss
mov
ret
ins
movs
cmp
add
cmp
inc
lock
dec
adc
loope
mov
xor
push
js
enter
pop
cmp
mov
jp
sub
(bad)
(bad)
retf
call
adc
mov
aaa
and
call
rol
adc
paddusw
pop
call
mov
out
push
pop
dec
rol
add
sbb
jge
xlat
add
sub
and
dec
xor
es
mov
mov
lods
sbb
inc
in
cmp
or
xor
add
ret
or
fadd
push
inc
pop
push
add
xchg
movs
cmp
inc
mov
pop
push
pop
dec
add
rol
fs
(bad)
lock
ins
add
or
sahf
push
out
dec
sub
aas
(bad)
je
jns
cmc
push
iret
add
sbb
clc
jge
cmp
loopne
sbb
pop
sub
xchg
adc
xchg
loope
in
push
adc
test
pop
adc
xlat
or
mov
imul
cmp
add
cdq
push
push
add
sub
test
jecxz
cmc
nop
pushf
dec
into
push
dec
(bad)
lock
pushf
pop
aas
xor
ror
repnz
xor
adc
cmp
pop
imul
adc
add
ret
or
pusha
mov
ret
cmp
sbb
test
rcr
and
sbb
cmp
jns
push
(bad)
xchg
(bad)
lods
loop
mov
xor
cmp
int
in
test
ret
and
sub
push
push
ds
je
sbb
pop
dec
dec
les
or
add
rol
sub
fcomp
sub
jnp
les
mov
ins
push
js
call
out
xor
rol
cdq
jns
aam
xor
adc
push
movups
jo
js
(bad)
mov
arpl
sbb
daa
enter
(bad)
push
cmp
in
mov
and
in
imul
aam
popa
sbb
nop
loop
and
and
mov
adc
dec
mov
sub
or
imul
cmp
nop
js
and
into
jp
sbb
mov
ds
mov
ror
dec
fbld
lods
mov
cmps
mov
bound
daa
and
ret
xor
ins
xchg
aam
cmp
(bad)
fdivr
xchg
sahf
mov
imul
mov
adc
mov
or
lock
adc
sbb
or
ret
xlat
sbb
mov
pop
push
and
loop
inc
and
mov
aaa
push
sub
popf
into
mov
sbb
lods
push
js
stos
aad
inc
push
fndisi(8087
popa
movs
sar
ins
jp
mov
ret
mov
rcr
sahf
pop
cwde
sahf
push
test
daa
dec
enter
inc
adc
pop
pop
adc
fs
jnp
push
loopne
in
xor
lock
int
repnz
fst
js
mov
dec
pusha
cmp
cmp
xor
dec
ins
dec
sbb
pop
sbb
inc
mov
jo
es
mov
popa
dec
xchg
jmp
cmps
xchg
data16
cmp
fsubr
movs
push
mov
fadd
adc
movs
xchg
ins
xor
lock
jge
loopne
xor
dec
repz
add
addr16
iret
add
inc
jo
push
(bad)
mov
pusha
pcmpeqb
(bad)
call
dec
push
pop
or
push
jne
sub
push
xchg
push
lahf
push
push
jo
xchg
dec
push
int3
pop
shr
pop
or
fdivr
in
mov
push
outs
mov
test
dec
lock
mov
mov
stc
mov
fldcw
sar
sahf
scas
mov
adc
dec
mov
dec
push
ret
dec
ret
or
jmp
fs
jo
je
mov
inc
aaa
js
(bad)
inc
inc
or
pop
addr16
and
push
jo
add
into
xchg
pop
leave
lods
jo
jp
mov
inc
dec
adc
jbe
lock
mov
jg
js
inc
fidiv
jbe
push
mov
ss
push
push
inc
fldcw
mov
inc
int
imul
add
push
mov
mov
adc
push
pop
js
cmps
mov
jno
pop
jnp
or
pusha
ja
push
out
adc
rcr
rcl
mov
or
cmp
add
lds
fadd
pop
inc
fadd
and
xor
and
stos
adc
call
les
movs
(bad)
mov
div
cmp
push
xchg
mov
in
xchg
mov
mov
mov
js
pop
dec
push
imul
test
adc
and
or
pop
nop
pushf
in
and
push
push
ret
push
push
push
mov
mov
add
mov
fiadd
jmp
sub
mov
imul
sbb
shl
je
ss
xchg
or
in
mov
mov
ins
movs
mov
jmp
shl
adc
mov
jb
cmp
jne
je
icebp
retf
fmul
das
mov
das
mov
sub
cmc
adc
sbb
and
jmp
mov
and
leave
add
adc
outs
mov
inc
adc
movs
es
or
mov
sub
fdivr
daa
into
xacquire
(bad)
js
jo
jo
jbe
inc
cmp
push
mov
pop
nop
aaa
cmps
js
jb
cmp
adc
imul
add
cmps
inc
sub
pop
sbb
push
cmp
push
xor
gs
jp
sbb
sti
mov
dec
loopne
inc
jnp
(bad)
cmp
push
fcom
push
mov
mov
sahf
cmp
sub
das
sbb
or
pop
pop
inc
sub
mov
loopne
cmp
test
fs
int3
push
popf
push
imul
test
lea
pop
xor
add
out
push
bnd
sub
xlat
and
adc
xor
dec
sbb
inc
dec
add
rcl
push
jbe
or
pop
pop
adc
loopne
adc
mov
dec
es
enter
sub
outs
lods
dec
xchg
sbb
jo
lea
repnz
and
mov
xchg
into
shl
mov
jnp
movs
push
out
mov
add
lods
movs
xchg
cmp
sahf
mov
pop
in
mov
lock
jg
leave
add
(bad)
xor
adc
popf
sbb
fs
out
cmp
mov
add
cdq
xchg
xchg
(bad)
ret
dec
div
or
outs
sbb
pusha
or
xor
icebp
or
loope
xor
into
pop
jne
push
daa
xchg
js
dec
cmp
add
cmp
inc
js
pop
push
push
xlat
jo
lahf
(bad)
test
retf
add
fst
sub
cmps
adc
inc
and
mov
ins
(bad)
popf
mov
(bad)
aad
push
pop
xchg
jge
xchg
sub
push
inc
ret
add
push
mov
aam
jl
sar
daa
jmp
mov
pop
jo
sub
jnp
dec
and
pop
pop
xor
das
outs
sub
cmp
mov
adc
movs
xor
div
stos
add
(bad)
and
scas
add
add
test
aam
jb
adc
sub
mov
dec
mov
enter
xor
ficom
movs
xor
dec
jmp
out
ret
leave
retf
adc
lods
arpl
daa
mov
enter
loope
pop
pushf
int3
mov
or
dec
test
or
(bad)
pop
(bad)
into
jecxz
test
xchg
lds
push
sar
xchg
xchg
add
sub
mov
jae
js
ret
mov
lods
add
sbb
inc
iret
or
daa
jmp
fadd
loopne
xchg
mov
out
adc
pop
jb
fiadd
pusha
adc
(bad)
or
sbb
jecxz
mov
(bad)
and
dec
jno
jb
push
in
mov
xchg
mov
sti
dec
jl
xchg
pop
push
jno
inc
aad
int3
sar
pop
sahf
pop
jb
ret
and
fnstcw
and
imul
or
mov
pop
sub
push
rcr
mov
(bad)
loope
shl
push
out
movs
mov
retf
jb
push
cmp
mov
mov
iret
pop
in
or
mov
pop
pop
ja
xchg
fmul
dec
retf
outs
test
inc
sub
psubsb
ret
push
cmp
inc
cmp
and
push
ror
cmp
jb
shl
mov
cmp
popf
(bad)
pop
fcom
push
pop
jne
add
inc
push
in
or
adc
push
inc
inc
cmps
push
sahf
add
fadd
mov
pop
push
ror
mov
add
jp
adc
lods
sub
or
rcl
lods
mov
push
sbb
sub
aam
icebp
jmp
xor
xor
adc
fst
sbb
sar
or
sbb
out
mov
sahf
xchg
lea
mov
jl
pop
cs
and
lods
dec
sbb
dec
pop
xchg
cmc
and
fbld
aad
test
cwde
shl
mov
outs
movs
mov
ds
dec
je
xchg
test
pop
dec
js
test
lods
xchg
cmp
sub
push
fst
test
jge
fst
xchg
sub
sar
ret
push
call
xchg
cmp
es
inc
jns
lods
dec
inc
cmps
mov
and
shr
and
jb
sbb
push
dec
shl
push
(bad)
shl
test
ja
loopne
dec
add
loope
addr16
sub
daa
jo
push
sub
pop
mov
add
mov
dec
aaa
add
adc
push
dec
(bad)
(bad)
call
dec
cs
(bad)
and
pop
xchg
sub
mov
popf
add
loopne
dec
imul
adc
jno
push
(bad)
mov
call
adc
enter
push
push
aas
xor
inc
add
lds
int3
sbb
sar
or
fs
and
inc
mov
xor
and
mov
inc
mov
bound
and
xor
lods
(bad)
or
sub
ret
mov
mov
xor
add
ja
push
sub
sub
jb
and
cmc
rcl
mov
push
(bad)
fdiv
mov
dec
cmps
mov
fsubr
ret
aam
mov
inc
mov
dec
sbb
mov
inc
pop
pop
sbb
rcl
mov
hlt
or
push
or
imul
dec
out
sub
jmp
dec
xor
add
pop
sub
sub
pop
pop
or
movs
sar
pop
mov
add
adc
outs
xor
ret
mov
push
leave
push
sbb
dec
bound
and
inc
std
or
jmp
inc
jo
arpl
movs
(bad)
xor
inc
add
out
push
and
es
(bad)
hlt
adc
mov
xchg
aad
(bad)
shl
and
aam
movs
push
and
pop
push
mov
fisttp
lods
loope
aaa
or
adc
or
adc
mov
loope
push
pshufw
shl
cmp
cdq
xchg
jbe
add
xchg
scas
jnp
jns
or
jp
pushf
mov
push
cmp
iret
cmp
faddp
add
adc
aaa
add
imul
dec
aam
adc
mov
pushf
loope
fdiv
mov
jbe
sbb
cmc
imul
jo
mov
pop
loope
mov
cld
sub
into
sub
xchg
fadd
loopne
cmps
xor
ret
sub
sbb
ins
test
xlat
cmp
fidivr
add
rcr
jge
or
add
in
in
shr
xchg
mov
mov
aaa
mov
loop
xchg
shl
fidiv
into
mov
leave
jb
push
pop
call
sbb
cmp
cmp
mov
xchg
mov
fs
push
xchg
sub
and
cld
mov
adc
sbb
and
push
test
bound
sbb
ret
dec
int3
retf
fmul
repz
gs
cmp
inc
sub
push
out
scas
loope
adc
pop
mov
pop
pop
repz
and
stos
aas
mov
xor
dec
add
bound
lods
xor
loopne
ins
jge
mov
outs
jmp
pusha
jne
xchg
(bad)
pop
inc
xchg
in
(bad)
add
jb
imul
add
fadd
imul
jge
fdivr
jno
mov
(bad)
add
or
mov
mov
add
sub
and
pop
mov
test
cmp
add
mov
jno
xchg
pusha
xlat
xchg
or
push
pop
inc
(bad)
pop
(bad)
repnz
cmp
aad
xchg
iret
and
mov
pop
mov
and
pop
sub
push
lods
cmp
jno
rol
ret
popf
jne
call
rcr
sub
cmc
push
and
jns
leave
lahf
(bad)
adc
add
cmp
mov
ret
xchg
xchg
sbb
xchg
rcr
xor
dec
mov
sbb
in
push
pusha
jno
add
loopne
sbb
cmps
xchg
test
push
jnp
xchg
adc
and
add
(bad)
rol
sbb
test
or
sbb
add
xchg
xor
sbb
and
fadd
or
in
stos
or
daa
addr16
mov
loop
sub
dec
pop
inc
fsubr
imul
mov
ds
push
sub
xor
inc
xchg
imul
not
mov
shl
jmp
adc
sub
ja
jge
dec
fnstcw
shr
scas
mov
dec
dec
add
fdiv
xchg
shl
cmp
push
bndldx
push
sub
jne
int
xchg
push
jp
sbb
cli
ins
sub
cmp
or
mov
rcr
and
mov
xor
push
add
fldcw
call
dec
add
loopne
adc
ret
loope
push
fcmove
(bad)
pop
hlt
jbe
mov
mov
xor
or
(bad)
xchg
and
sub
cmp
or
or
outs
loop
retf
test
mov
shl
pop
leave
cmp
add
xchg
sbb
cmp
sub
pop
fadd
xor
fcomp
les
sbb
mov
ret
jo
lea
push
mov
push
or
xchg
adc
inc
push
out
xchg
retf
cmp
mov
jmp
(bad)
cmp
push
adc
imul
rol
loopne
cmp
jno
je
rcr
jo
add
and
push
sbb
and
ret
ret
inc
ret
push
imul
test
push
jmp
jg
in
xor
repnz
add
daa
mov
xor
push
icebp
add
pop
fld
aam
(bad)
enter
xchg
sub
xchg
push
cmp
push
inc
jo
sbb
imul
jo
ret
(bad)
xor
imul
out
pushf
xor
mov
and
rcr
add
xor
pop
in
dec
(bad)
add
sbb
xor
sbb
(bad)
xlat
mov
mov
inc
mov
xor
imul
and
push
ret
fs
cmp
daa
xor
scas
push
inc
aas
nop
imul
std
cld
clc
nop
adc
lods
add
movs
mov
mov
sbb
mov
push
call
jmp
cmps
rcl
repz
daa
mov
jmp
cmp
cmp
(bad)
mov
dec
aaa
xor
add
sahf
push
sub
sub
sbb
sbb
sbb
xchg
lds
inc
inc
(bad)
and
bnd
sbb
retf
mov
popf
mov
test
sbb
mov
and
xor
push
mov
adc
les
add
mov
xor
pushf
mov
push
add
jmp
sti
jmp
dec
jp
inc
arpl
inc
fmul
pushf
mov
and
fadd
mov
mov
sahf
pop
jns
dec
mov
pusha
or
out
cmp
daa
loop
popa
xor
push
push
xchg
les
pusha
jo
or
(bad)
jle
ja
aam
fsubr
adc
jnp
mov
or
xor
adc
jo
aad
push
jmp
pop
sbb
mov
int
jmp
ins
mov
cmp
sbb
push
rcr
cmp
push
icebp
push
jp
ror
add
je
les
mov
xchg
fidivr
shr
xchg
rcr
dec
xor
fs
popf
scas
and
push
pop
mov
ret
ret
sub
test
outs
sub
adc
clc
std
(bad)
mov
adc
out
movs
(bad)
in
bound
xor
or
lea
and
arpl
xor
js
jg
es
retf
jecxz
mov
ror
xchg
shl
mov
sub
fidiv
in
jo
lods
hlt
lock
std
test
les
pop
mov
mov
pop
jns
pop
into
pop
out
outs
adc
loope
pop
push
add
cmp
retf
(bad)
lods
dec
xor
nop
arpl
es
or
jbe
out
hlt
ror
cmp
jecxz
sbb
imul
xor
dec
(bad)
test
sbb
loope
push
jp
shr
push
ins
cdq
mov
dec
pushf
sahf
loop
daa
mov
sbb
movs
jnp
je
push
jmp
mov
cmp
pusha
fmul
pop
add
jo
push
je
mov
mov
jno
fst
and
cli
dec
push
xchg
mul
add
and
cmps
pushf
ja
xchg
pop
stos
int3
(bad)
sti
pop
or
jno
loope
sbb
or
cmp
cmp
sub
cmp
mov
lock
adc
loopne
mov
pop
xchg
imul
or
xor
call
hlt
xchg
or
xchg
xchg
popa
scas
xor
nop
aaa
je
jb
mov
dec
push
add
(bad)
cmp
data16
xor
cmc
cmp
call
or
icebp
aam
xchg
adc
pop
outs
mov
int
ss
dec
push
mov
xchg
int3
lock
push
and
sub
mov
pop
pusha
inc
out
shl
or
or
in
stos
inc
mov
popf
sar
pop
fst
je
rcr
or
retf
mov
ret
jb
sbb
aam
je
inc
mov
rol
inc
fiadd
sbb
and
mov
jae
mov
jle
fs
(bad)
push
clc
fcomp
andps
push
pop
mov
mov
jb
cmp
xor
gs
mov
add
push
ins
cdq
add
add
xchg
add
pop
pop
clc
mov
add
rol
xchg
(bad)
ffreep
pop
or
xor
xor
xor
inc
data16
aas
adc
or
in
daa
mov
mov
mov
ins
mov
scas
out
loope
push
push
add
es
das
movs
ds
mov
xor
dec
dec
xchg
enter
jno
cwde
xor
sets
or
add
je
out
(bad)
cmp
addr16
xchg
pop
bound
ror
add
xchg
ret
outs
arpl
dec
sub
clc
loopne
mov
mov
xchg
rol
mov
test
jbe
popf
popa
mov
mov
lods
fadd
aad
sub
mov
sti
cmp
into
cmp
pop
mov
jecxz
aam
sbb
sbb
add
pop
push
mov
in
jmp
push
daa
jns
les
adc
mov
inc
sbb
jnp
inc
mov
fistp
test
xchg
dec
test
push
cmp
sbb
nop
ds
sub
repz
push
jb
ins
sbb
cmp
sbb
rol
push
cmps
mov
das
cmp
into
mov
push
movs
lahf
mov
ret
add
mov
arpl
jmp
les
mov
mov
push
scas
sbb
or
rcr
aam
outs
retf
inc
mov
jmp
into
es
cdq
cmp
fcmovnb
loop
sbb
sbb
mov
jmp
sysexit
mov
jne
push
dec
or
add
jnp
push
and
cmp
xor
sub
leave
cmp
lods
xchg
shr
lock
pop
jp
loopne
pop
sbb
call
dec
loope
push
in
nop
mov
adc
mov
test
js
pop
outs
or
loop
jo
bound
dec
call
add
pop
call
push
test
loope
mov
or
or
dec
xchg
in
mov
sub
mov
add
sbb
mov
aad
xchg
xor
outs
test
ror
push
xchg
add
xchg
imul
rol
mov
js
leave
rol
jecxz
pop
or
mov
xchg
adc
int3
and
das
add
jmp
rol
cmp
mov
push
sub
jo
push
dec
jge
jp
and
xor
dec
aaa
js
fidivr
imul
push
xor
js
push
push
rcr
ror
ss
sub
lods
cmp
(bad)
loopne
in
test
add
jl
sbb
lods
and
mov
retf
push
mov
shl
mov
nop
lds
lock
pop
lods
and
lea
cli
adc
mov
or
jl
enter
cmp
and
fnstenv
rcr
mov
add
cmc
jne
push
stos
daa
loope
repnz
jo
into
js
cmp
lea
xor
cmp
sub
fimul
jmp
out
pop
enter
imul
pop
addr16
jne
xchg
push
mov
sub
pop
nop
push
jns
mov
xchg
xor
es
loopne
jecxz
or
cmp
sub
mov
(bad)
add
ins
lods
push
daa
cmp
test
xchg
mov
aaa
nop
push
dec
dec
into
pop
lahf
add
in
icebp
sub
jmp
jp
xor
pusha
test
dec
dec
sub
cs
jb
loopne
sbb
cs
dec
jns
xchg
lea
ins
jne
test
lea
aad
test
je
push
dec
jle
sub
data16
out
sbb
or
push
icebp
add
add
push
and
push
xchg
mov
test
mov
dec
iret
lds
ret
out
jbe
loope
mov
and
and
ja
cli
test
sbb
test
xor
out
ds
rol
add
cmps
(bad)
mov
push
push
nop
jmp
das
push
or
bound
loope
lods
ficomp
loop
push
retf
dec
(bad)
mov
push
(bad)
mov
cmp
mov
push
ss
adc
adc
stc
cmp
push
repnz
dec
inc
test
mov
fidivr
xchg
mov
pushf
xchg
or
call
dec
popf
push
inc
sbb
cmp
adc
jge
mov
fimul
push
out
jp
mov
int3
fs
inc
test
jo
cmp
repnz
sub
fdiv
xor
loopne
sbb
push
adc
mov
mov
pop
ret
aad
push
xor
or
rcl
jp
jns
pop
loop
pop
jmp
xor
cmp
and
or
popf
call
lods
bound
push
sldt
push
xor
pop
add
xor
movs
jo
or
cmp
sbb
xor
xchg
and
adc
add
push
popa
sub
ins
sbb
in
movs
outs
xor
cmp
cwde
push
rcl
into
loopne
jns
in
push
jnp
lods
movs
adc
pop
(bad)
dec
xor
dec
stos
out
dec
xlat
and
pop
mov
loop
mov
add
ja
call
mov
pop
inc
add
xor
mov
sub
fs
out
push
loop
test
js
cmp
ret
(bad)
call
lock
loop
rcl
and
icebp
lea
aaa
mov
imul
in
mov
std
or
fstp
pop
in
push
dec
mov
out
mov
or
xchg
fimul
sbb
movs
test
or
dec
(bad)
punpcklbw
pop
pop
jmp
jno
xchg
push
sbb
add
imul
jne
mov
outs
pop
cld
mov
(bad)
jmp
shr
cmps
in
cmps
push
(bad)
call
aas
pop
push
lock
fisub
adc
outs
arpl
test
sub
(bad)
or
test
popa
loope
jl
sbb
(bad)
jbe
mov
adc
jo
adc
test
inc
fld
add
fild
pusha
push
arpl
into
add
xchg
adc
xor
mov
ret
mov
xchg
rcr
jle
into
(bad)
push
mov
pop
lea
test
loopne
sbb
or
add
in
add
js
das
sbb
jle
ret
jecxz
pop
sbb
(bad)
jmp
or
xor
jecxz
sub
dec
cmp
jmp
jp
loopne
adc
lahf
js
iret
push
xchg
daa
sub
aad
inc
movs
es
jbe
add
lods
mov
mov
(bad)
xor
loopne
neg
sbb
push
and
bound
adc
daa
mov
adc
or
cmp
icebp
sahf
je
sub
pop
jmp
(bad)
mov
xchg
push
scas
scas
aam
and
addr16
mov
cmp
push
out
push
loope
out
jo
mov
jno
bound
push
loop
and
in
sbb
push
cmc
(bad)
loop
inc
pop
lods
add
sbb
xchg
or
mov
jns
jb
mov
mul
pop
mov
out
xchg
jecxz
sub
add
sbb
jbe
sbb
mov
in
sub
jl
retf
or
xchg
pop
add
dec
cmp
inc
fidivr
mov
loopne
xchg
movs
and
xor
pop
jmp
ror
xchg
pop
adc
push
mov
mov
cmp
and
sbb
fsub
jmp
adc
pop
and
inc
icebp
fs
xor
xchg
outs
adc
scas
sub
add
push
rcr
cmp
inc
push
inc
out
adc
dec
movs
jne
xchg
arpl
xchg
pop
loopne
xchg
mov
mov
push
xor
push
mov
dec
inc
push
and
in
(bad)
loopne
pop
jg
pusha
jge
xor
push
add
das
mov
loopne
mov
mov
imul
jno
add
pop
test
cs
cmp
pop
test
std
mov
pop
mov
sbb
aaa
adc
adc
mov
inc
pop
arpl
mov
int3
and
pop
loopne
sbb
aam
mov
in
sbb
mov
or
je
or
fbstp
or
jnp
js
repnz
imul
jg
xor
ret
int3
fst
xchg
xor
pop
sar
sub
daa
call
fmul
add
cmp
(bad)
push
shl
sbb
jl
lock
sub
arpl
sar
push
add
imul
cmp
mov
xchg
xor
fiadd
mov
jmp
loopne
cmp
xchg
inc
sahf
xchg
jp
pusha
xor
pop
xchg
popa
pushf
popa
and
ret
aad
or
mov
jbe
inc
push
(bad)
jno
adc
push
mov
inc
ret
loopne
lds
or
out
jno
into
(bad)
xchg
fdiv
cdq
push
dec
cmp
mov
push
aas
test
test
cdq
loopne
call
mov
push
imul
enter
inc
fadd
inc
ins
mov
outs
imul
sub
or
add
addr16
adc
xor
mov
cmp
push
inc
dec
rol
cmp
xor
sbb
fwait
push
shl
(bad)
in
push
frndint
cmp
add
pop
jnp
adc
and
pop
(bad)
mov
pop
xchg
sub
addr16
or
je
movs
mov
(bad)
nop
das
sbb
dec
rol
loop
add
jmp
pop
jmp
mov
xor
sbb
jo
and
out
dec
push
jb
sbb
cmp
pop
nop
(bad)
retf
pushf
add
pop
fwait
and
ret
test
cmp
(bad)
fmul
das
outs
leave
icebp
jnp
push
mov
lods
(bad)
and
loopne
es
nop
cmp
int3
jecxz
sub
xor
or
sub
rcl
dec
fsubr
inc
xor
mov
cmp
cmp
sbb
lods
pushf
mov
ret
mov
pop
lods
stc
test
adc
push
mov
daa
push
push
test
test
in
pop
repnz
loop
dec
enter
cmp
xchg
add
lock
cmp
clc
dec
leave
sbb
and
pop
fsub
pusha
pop
xchg
int3
add
and
and
(bad)
in
add
aam
mov
je
xchg
lock
jns
retf
add
and
or
adc
fidiv
fnstcw
push
or
mov
mov
call
and
rcr
xchg
mov
cmp
mov
ret
test
xlat
or
xor
rcl
sbb
call
outs
cmps
arpl
add
in
clc
xlat
sub
enter
stos
neg
test
xchg
xchg
in
das
aam
xor
inc
cmp
mov
xor
enter
cld
scas
ins
adc
shl
mov
shl
je
add
(bad)
jno
enter
add
sbb
fidiv
ja
lea
sbb
and
arpl
or
push
sub
pop
js
push
push
aaa
sbb
fisttp
mov
inc
push
or
fsub
push
push
pop
sub
cli
inc
jl
mov
lock
ficomp
ret
adc
or
sub
push
xchg
add
scas
arpl
inc
pop
div
pop
es
push
push
push
fisub
loopne
mov
aam
aad
sbb
outs
idiv
or
add
es
test
mov
xor
xor
cmp
sbb
jo
xor
test
(bad)
sub
aad
out
jno
jmp
add
daa
dec
loope
dec
pop
xchg
jg
cmp
shl
jp
int3
sbb
xor
rcr
ficom
mov
popf
(bad)
sar
mov
xchg
add
inc
aas
loop
lea
js
sbb
mov
sbb
ret
es
dec
arpl
fs
cmc
adc
inc
test
pop
(bad)
mov
lahf
or
aaa
push
div
mov
ins
jl
lea
jb
and
mov
(bad)
ret
add
mov
jbe
ror
dec
add
push
pop
pusha
test
mov
jp
rol
mov
out
mov
outs
out
dec
add
add
and
mov
and
mov
and
add
test
jbe
or
push
movzx
mov
and
(bad)
ror
inc
sub
stos
xor
ins
popf
int3
mov
pushf
inc
push
dec
jecxz
mov
inc
fsubr
mov
fstp
ret
sbb
or
add
xor
enter
push
data16
cmps
cld
push
cwde
lea
mov
push
pop
imul
pop
pop
enter
test
sbb
jecxz
pop
dec
mov
daa
sbb
iret
add
jp
hlt
rcl
push
pop
in
fdiv
rcr
fnstcw
js
in
adc
sahf
es
adc
xlat
fidiv
mov
mov
mov
fwait
push
inc
(bad)
adc
inc
lds
aad
mov
fistp
mov
add
jo
xchg
nop
xchg
mov
jne
into
rcl
add
mov
inc
int3
mov
(bad)
pusha
es
jmp
sbb
fidivr
push
mov
mov
mov
push
mov
hlt
dec
ja
jge
mov
sar
cmp
scas
and
sahf
ret
mov
cs
cmp
in
xor
shl
jae
cmp
xor
xor
mov
retf
into
inc
pop
pop
mov
mov
pop
dec
mov
fadd
int3
jnp
inc
(bad)
jg
ret
or
dec
test
sub
imul
push
adc
imul
mov
popa
inc
pop
adc
mov
push
and
fstp
or
es
in
adc
add
xor
adc
push
sbb
push
mov
cmp
dec
out
jo
adc
imul
or
pop
dec
push
aam
jmp
es
sub
push
mov
xchg
and
js
ror
sbb
adc
mov
add
adc
(bad)
call
jo
pop
icebp
mov
pop
or
movs
push
into
rcl
aam
das
push
mov
cmp
out
ret
popf
xchg
or
pop
mov
jmp
movs
xchg
sbb
mov
ret
inc
jp
xchg
stos
mov
adc
imul
lea
sbb
add
(bad)
call
cmp
ret
lea
sbb
sbb
lock
popa
rcl
out
inc
sbb
(bad)
xchg
jle
mov
clc
or
jne
cmp
adc
add
add
sub
add
xor
mov
mov
test
movs
pop
cmp
or
mov
cwde
dec
or
dec
movs
xor
pop
popf
into
inc
(bad)
push
mov
sbb
js
sbb
mov
int
mov
add
lock
and
or
adc
retf
faddp
mov
retf
mov
outs
sbb
rcl
inc
or
outs
cmp
adc
inc
lods
pusha
add
inc
inc
rcl
cmc
add
fst
xchg
mov
nop
xor
sbb
loope
ret
sbb
add
(bad)
dec
js
dec
cmp
ret
in
inc
inc
cdq
pop
cmp
movs
push
into
dec
mov
jmp
jmp
mov
mov
fs
out
xor
in
cmp
sbb
add
imul
xor
out
std
mov
pop
in
sbb
aaa
scas
xchg
inc
rcr
mov
or
imul
jb
outs
lods
adc
sub
cmp
mov
or
add
ror
popf
fisubr
or
fsubr
mov
xchg
out
sub
pop
es
push
mov
mov
in
or
rol
mov
outs
xchg
popa
xchg
icebp
sbb
ds
pop
add
pushf
cmp
call
(bad)
das
jmp
shl
adc
jecxz
inc
popf
xchg
add
icebp
fistp
add
pop
cmp
pusha
into
adc
sahf
xacquire
xor
jge
adc
fmul
icebp
jle
movs
xchg
pop
jecxz
cmps
xor
pop
mov
in
xchg
loop
mov
repz
add
scas
out
cld
fdiv
and
push
imul
dec
test
jl
jb
popa
call
dec
inc
cs
and
sub
shl
ds
pop
(bad)
push
movs
icebp
pop
cmp
or
push
cmc
add
pushf
jo
inc
and
(bad)
mov
jp
ror
xchg
es
mov
xor
std
add
sub
sub
pop
mov
sub
adc
push
mov
in
pop
leave
jbe
and
or
jnp
or
cmp
mov
ret
push
scas
repz
sar
push
cmp
sub
loopne
je
mov
je
rcr
arpl
mov
xor
pusha
addr16
adc
(bad)
iret
jne
sbb
push
pop
xor
cmp
mov
repnz
fstp
mov
xchg
sbb
loopne
mov
sub
or
sbb
mov
xor
ss
in
fs
out
sub
jo
add
sbb
push
aam
loope
sahf
xchg
mov
jp
mov
(bad)
in
inc
mov
adc
mov
inc
jbe
jno
jns
mov
adc
rol
and
push
imul
clc
out
data16
and
cmp
dec
retf
in
stos
pop
or
mov
jb
add
inc
sbb
fndisi(8087
mov
pop
outs
add
pusha
in
popa
adc
ret
fwait
sbb
xor
pusha
and
adc
pusha
sub
loopne
xchg
add
sbb
mov
(bad)
xor
mov
cmps
(bad)
mov
rcl
fist
add
icebp
xchg
and
cmp
xor
jecxz
loop
ret
push
cmp
cmp
mov
lea
add
cmps
adc
mov
sbb
push
test
mov
xchg
(bad)
mov
sbb
push
add
ret
sub
xor
add
hlt
adc
ret
sbb
fs
inc
(bad)
retf
loope
ret
mov
xchg
sub
mov
xchg
pop
jnp
xor
pushf
xor
aam
xor
push
cmp
in
add
cmps
xchg
sahf
sub
call
cmp
xor
jnp
add
es
mov
hlt
pop
enter
repz
js
xchg
rcr
loope
imul
aam
hlt
sub
dec
sbb
jmp
shr
ss
xchg
sbb
clc
cli
xor
dec
arpl
push
or
ror
jle
sub
or
cmp
cli
push
mov
aam
out
inc
cwde
in
add
jmp
push
(bad)
jnp
into
push
mov
(bad)
call
lea
sbb
add
sbb
or
adc
outs
jns
hlt
mov
jp
or
mov
imul
fldl2t
push
dec
push
dec
mov
in
jge
(bad)
(bad)
lea
jecxz
sahf
jbe
add
in
adc
aad
xor
fdiv
xor
test
cmp
ror
jb
jecxz
dec
lods
icebp
mov
nop
out
sbb
pop
inc
and
sub
outs
or
push
(bad)
mov
ins
cmp
xchg
aam
leave
adc
xchg
outs
and
sbb
inc
or
jno
aad
int3
fistp
push
fadd
mov
mov
sbb
xchg
out
pop
cli
pop
and
dec
fiadd
xchg
(bad)
xor
fs
fisttp
or
xor
mov
xchg
cmp
mov
add
sub
xchg
pop
ror
rcr
ss
imul
jge
stc
cmp
mov
add
rcr
push
into
pushf
(bad)
adc
adc
mov
xor
mov
enter
mov
and
dec
mov
xchg
nop
mov
je
xchg
pop
cmp
div
(bad)
loopne
cwde
int
dec
fild
out
out
mov
dec
ret
and
pop
jmp
sub
es
pop
fistp
scas
and
pop
outs
jno
or
cmp
test
ret
ss
fsub
xor
mov
shl
adc
jmp
or
fwait
retf
nop
fisubr
int3
addr16
mov
jge
mov
rol
fcomp
add
push
aam
pop
pop
in
test
cmp
jne
add
ror
inc
pop
xor
inc
sbb
sbb
sub
xor
cmp
repnz
mov
or
add
pop
jl
sub
mov
jbe
push
or
cs
jle
fsubr
loopne
add
mov
pop
popa
pop
push
cmpxchg
leave
retf
stc
das
es
pushf
adc
inc
xor
adc
adc
xchg
and
mov
cmp
sbb
add
sub
or
cmp
add
dec
test
sti
sbb
xchg
jp
inc
adc
mov
jp
int
push
xchg
push
add
aad
mov
add
xchg
jo
out
ds
repz
xchg
call
sbb
sahf
repnz
pmaxub
mov
push
mov
test
outs
addr16
inc
rcl
lds
xchg
sbb
lea
test
mov
xchg
in
push
aam
jbe
add
fucomp
ss
mov
bound
xchg
fcom
mov
push
sbb
retf
test
mov
call
inc
jecxz
mov
ret
add
gs
pusha
adc
mov
dec
pushf
mov
jp
loopne
out
retf
jb
or
hlt
shl
mov
lea
pushf
in
or
sub
dec
jae
cmp
fld
cdq
push
pop
and
mov
push
scas
lods
daa
js
xor
mov
movs
rcr
neg
adc
clc
adc
daa
and
adc
or
sub
pop
sbb
dec
mov
pop
je
dec
xor
shr
stos
cmp
jno
dec
or
pop
xor
rcl
(bad)
in
ret
sub
or
jmp
cwde
or
mov
pop
jmp
jmp
sub
jmp
mov
cmp
loope
mov
call
das
shl
test
std
cmp
sahf
or
mov
and
test
mov
sbb
cmp
iret
jno
inc
mov
cmp
dec
ret
(bad)
js
pushf
inc
bndstx
mov
fadd
add
or
mov
jl
pop
lods
xor
outs
or
clc
daa
push
mov
cs
jecxz
sub
aaa
push
int
addr16
mov
add
jnp
cwde
sub
lahf
retf
or
push
not
(bad)
and
mov
repnz
call
lods
inc
xchg
xlat
ror
call
mov
faddp
(bad)
(bad)
sub
push
sbb
lods
sub
mov
adc
mov
mov
sub
xchg
xchg
daa
lock
sub
loopne
push
push
mov
movs
out
les
das
fidivr
push
pop
push
push
bound
das
retf
and
inc
pop
jmp
jle
adc
jl
add
out
pop
dec
ja
mov
xchg
xchg
mov
cld
movs
xlat
sbb
sub
add
jge
or
push
push
add
(bad)
retf
sbb
and
repnz
jo
adc
jge
adc
hlt
aam
cmps
adc
push
js
nop
cs
psubsb
lea
test
fdiv
add
pop
pusha
test
sar
push
rcl
cmp
push
and
ins
cmps
mov
cmp
test
(bad)
shr
sbb
pushf
cmp
and
pop
cmp
call
pop
(bad)
adc
mov
xor
loop
cmps
xchg
push
add
pop
js
push
(bad)
in
lock
jae
or
adc
outs
mov
mov
rcr
push
and
mov
mov
enter
lea
mov
test
mov
sub
pop
ret
aad
cmp
xchg
xor
stc
in
jne
aam
movs
shr
inc
fsubr
adc
loopne
mov
push
jo
ins
inc
inc
mov
rcl
xor
sbb
lods
xor
lock
mov
shl
lock
add
sbb
jns
(bad)
cmc
loope
lock
fistp
mov
sysret
(bad)
mov
out
mov
push
cwde
and
ret
push
mov
cmp
popf
push
rcl
bound
xor
shl
int3
cmp
pushf
xchg
mov
add
imul
nop
movs
loope
push
cmp
mov
fiadd
aas
add
adc
add
pusha
pop
dec
push
xchg
add
xchg
push
(bad)
push
xchg
daa
imul
inc
ja
cmp
lods
ror
movs
or
xor
sbb
mov
repnz
loope
bound
test
sar
jo
call
mov
out
scas
jo
jecxz
loop
retf
pop
pop
popf
dec
outs
or
pop
popa
lods
daa
push
push
inc
loop
dec
jo
cmc
mov
test
mov
aam
or
jo
loope
rol
xor
sbb
xor
push
push
cmp
and
mov
jb
xchg
mov
mov
inc
jmp
nop
cdq
rol
retf
and
ret
add
sti
(bad)
imul
mov
rol
das
xchg
mov
jecxz
gs
cmc
ins
(bad)
mov
add
mov
mov
out
rol
(bad)
push
out
xor
add
into
cmp
loope
mov
(bad)
and
cmps
xor
adc
and
and
cs
cmps
adc
cmp
pop
(bad)
push
xchg
jb
dec
sbb
and
es
jmp
adc
cmp
fcomp
sub
sbb
inc
or
sub
mov
ficomp
outs
inc
loope
cmp
es
into
jmp
sub
lods
arpl
aaa
cmp
inc
dec
sbb
push
jbe
into
leave
retf
add
adc
xchg
cld
xor
mov
mov
inc
push
movs
push
outs
ret
adc
aaa
aam
lods
test
call
dec
or
jo
mov
popf
adc
jp
push
scas
ss
movs
loopne
mov
jg
xchg
into
jo
inc
cmp
add
repz
shr
inc
addr16
mov
xchg
push
jno
pop
push
test
mov
sbb
push
ja
stos
fbstp
jl
push
sbb
es
enter
scas
and
pop
fsub
add
add
pop
gs
lds
cmp
inc
shl
fimul
imul
xor
sub
pop
idiv
xor
xor
adc
mov
add
cs
add
cmp
aad
inc
popf
push
cmp
in
push
sar
or
outs
sbb
push
add
imul
jp
adc
addr16
sbb
nop
in
mov
call
add
xor
xor
mov
adc
shr
(bad)
(bad)
repnz
(bad)
xchg
popf
xchg
(bad)
adc
test
movs
mov
sub
repz
or
mov
jne
mov
(bad)
sub
lock
or
dec
fs
mov
pop
call
aaa
mov
push
jecxz
mov
imul
fild
or
dec
enter
add
pmullw
outs
or
sub
add
adc
mov
aaa
aad
xor
js
in
ret
cmp
inc
push
lods
call
xchg
mov
shl
(bad)
adc
or
push
in
pusha
add
jo
and
loop
or
push
cmps
sub
es
inc
mov
out
iret
mov
inc
push
and
pop
mov
jns
in
sub
mov
ret
mov
dec
stos
scas
pop
push
ja
pushf
les
cli
push
mov
push
xchg
mov
fidiv
dec
outs
loopne
sbb
jns
sub
xchg
movs
popa
fs
xchg
scas
cld
dec
xor
sbb
and
leave
jmp
sbb
pusha
fcom
or
ret
dec
xor
adc
or
mov
jbe
retf
jne
mov
sub
adc
and
scas
mov
cmp
pop
xor
add
sub
mov
lock
test
pop
jmp
ins
(bad)
pusha
dec
mov
push
pop
jecxz
cmp
mov
and
jp
cmp
add
add
adc
ret
and
js
xlat
xlat
jmp
xchg
and
xchg
mov
dec
(bad)
shl
or
clc
push
xor
lahf
pop
xor
jno
cmp
push
into
rcr
and
and
(bad)
and
(bad)
sbb
mov
cmps
pop
cs
adc
lods
dec
loop
lock
pop
test
sahf
xor
dec
(bad)
sbb
mov
js
retf
sbb
ret
xchg
fdivr
jmp
rcr
div
push
push
add
in
fcomp
dec
enter
jne
fisub
ror
cmp
xchg
push
sar
cdq
xchg
js
mov
inc
popa
movs
and
inc
loopne
cwde
adc
ret
mov
add
cli
scas
(bad)
push
xchg
push
es
push
push
arpl
out
cmp
push
mov
add
pop
push
loop
pusha
and
xchg
bound
not
loope
pop
pushf
cli
dec
addr16
fcom
sbb
les
adc
xchg
sahf
jmp
movs
adc
test
dec
lods
les
loop
cmp
mov
retf
adc
sbb
cmp
lods
outs
leave
loop
mov
mov
mov
addr16
imul
dec
outs
fucomi
jne
adc
add
es
loopne
mov
inc
test
add
retf
ror
sahf
xor
adc
loopne
inc
inc
retf
or
pusha
add
iret
mov
mov
(bad)
mov
(bad)
ja
mov
adc
js
push
jo
mov
test
popa
or
jmp
mov
or
ss
pop
retf
repnz
xor
sbb
(bad)
cmp
sub
lods
es
pop
push
pop
push
ins
std
mov
pushf
add
test
and
mov
js
mov
sub
ja
arpl
dec
push
lods
(bad)
push
xor
sti
or
and
sbb
sbb
mov
jg
(bad)
xor
pop
fst
neg
xor
cmp
jne
rcr
out
push
jmp
call
lods
test
into
inc
js
jp
popf
stos
sbb
cdq
int3
sub
pop
fisttp
fs
mov
in
aaa
xor
add
outs
add
ret
jecxz
mov
js
in
cmp
mov
mov
pushf
add
out
mov
add
push
inc
ret
add
xchg
call
mov
adc
add
inc
fs
xor
mov
add
jp
dec
push
int
sbb
xchg
mov
iret
xor
or
jo
sbb
jecxz
sub
push
add
retf
dec
outs
or
or
xchg
dec
loope
add
jne
and
movs
enter
or
cmpps
jp
dec
xor
jp
fdivr
push
jno
push
xadd
invd
push
cmp
loope
cs
sub
xor
mov
pop
popf
test
jo
loopne
inc
repnz
add
aas
out
push
(bad)
(bad)
repz
ins
pop
fmul
dec
imul
mov
add
mov
fs
or
adc
gs
outs
or
push
mov
mov
test
pushf
icebp
cmp
xor
nop
cwde
(bad)
hlt
and
xor
jo
ja
fsubr
sub
mov
mov
int3
call
shr
mov
and
pop
cmp
push
add
inc
(bad)
retf
out
add
sbb
js
out
add
jmp
cmp
or
(bad)
fwait
sar
loope
xor
test
push
sbb
or
push
push
out
in
pop
scas
movs
inc
adc
(bad)
dec
mov
test
or
push
pop
(bad)
xchg
jne
inc
add
aam
sbb
push
xchg
shl
mov
out
mov
or
adc
daa
or
sahf
jp
rep
inc
rcr
mov
lods
mov
movs
push
dec
pop
ja
xor
xchg
pop
pop
add
push
(bad)
dec
dec
inc
imul
test
imul
gs
popf
cmp
jmp
lods
pop
and
add
loopne
sbb
sbb
mov
rol
adc
jmp
or
push
aaa
test
ror
(bad)
loope
inc
inc
pushf
add
mov
pop
imul
pop
fstp
add
dec
sahf
xchg
jno
gs
push
adc
pop
mov
jp
push
lea
push
and
jo
pushf
(bad)
lahf
(bad)
shl
xor
add
dec
ror
das
add
or
popf
add
mov
adc
and
ds
adc
jmp
mov
iret
add
cmp
adc
xlat
jmp
and
daa
push
nop
loope
jge
outs
or
pop
pushf
in
imul
cmc
cli
push
and
mov
les
(bad)
mov
lock
or
arpl
(bad)
xlat
les
test
cmp
mov
test
mov
inc
add
mov
pop
mov
xchg
mov
sbb
mov
out
rol
loop
cmc
mov
lods
outs
fimul
xor
sub
enter
dec
ret
mov
sbb
lea
test
push
(bad)
dec
xchg
ins
pop
iret
cmp
mov
fst
mov
in
in
xchg
lock
add
push
xchg
pop
(bad)
lods
cmp
or
pusha
pop
inc
out
pusha
ins
nop
adc
xor
out
xor
call
ret
jmp
mov
push
pop
pause
push
and
xor
lds
mov
sub
sbb
lea
jl
xrelease
(bad)
dec
jnp
out
pop
loopne
xor
pop
sbb
fnstenv
mov
popa
inc
popf
ret
sub
enter
jp
in
mov
cmp
mov
(bad)
and
or
xor
aaa
in
in
sbb
cmp
pop
sub
enter
cmps
xor
mov
adc
movs
dec
mov
push
or
mov
pop
pusha
movs
push
add
xchg
cmps
mov
das
jnp
jg
inc
cld
ficomp
inc
test
mov
or
iret
add
sub
fs
je
or
cmp
jne
hlt
ror
mov
adc
sbb
not
js
in
jo
icebp
(bad)
retf
jb
pusha
or
aam
ins
or
pop
push
push
xor
cmp
or
lods
sahf
imul
loop
(bad)
cs
je
stos
movs
xchg
gs
xor
(bad)
jl
mov
dec
cmp
ret
xor
xchg
adc
mov
push
fcom
inc
jecxz
out
in
and
loope
in
ret
test
sbb
movs
stos
loopne
ret
or
psllw
test
jp
add
ss
and
xor
cmp
ss
pop
pop
fistp
popf
(bad)
adc
repnz
mov
inc
shl
sar
je
out
push
pushf
gs
retf
(bad)
not
cmp
mov
xor
movs
push
test
dec
and
adc
push
push
and
imul
add
popa
xchg
add
int
adc
js
sar
shl
xor
in
mov
pop
sub
js
into
push
and
in
mov
stc
or
lds
pop
stos
rcr
js
adc
or
ret
scas
add
clc
dec
ret
or
aas
icebp
cld
push
ret
push
enter
aad
je
mov
movs
or
mov
xor
icebp
sub
or
movs
xchg
lock
repz
pop
rol
mov
sub
lahf
inc
cld
ret
mov
push
and
sbb
call
dec
pop
mov
cmp
jl
das
jmp
mov
test
pop
jge
(bad)
pop
ja
sbb
ret
dec
imul
(bad)
sbb
jb
test
jno
mov
rol
ret
or
scas
mov
mov
xchg
xor
ret
mov
sahf
inc
sbb
sbb
das
cdq
sbb
cmp
int3
jle
aam
mov
sbb
push
xor
jns
add
sbb
mov
push
dec
xchg
pop
lock
jecxz
pop
fimul
into
fadd
enter
sbb
ror
js
or
push
dec
push
mov
cmps
and
pushf
or
jp
mov
pop
sbb
sbb
push
hlt
jo
push
das
(bad)
mov
sub
dec
dec
sbb
imul
sub
pop
sbb
sbb
aaa
shr
jp
popa
sub
mov
xchg
add
or
sbb
sub
mov
inc
fidivr
adc
or
call
pop
jmp
jecxz
pusha
fidiv
pop
push
test
lock
ret
mov
(bad)
out
jnp
fld
pusha
push
inc
repz
ret
mov
popa
out
jo
icebp
daa
arpl
and
out
sbb
mov
jecxz
jmp
sbb
inc
fadd
les
xchg
leave
mov
shr
add
test
dec
mov
ss
js
sbb
je
cmp
ja
push
into
movs
bound
fidivr
mov
(bad)
pop
adc
loop
push
jnp
retf
add
icebp
sub
hlt
push
or
xor
push
inc
push
out
ins
leave
(bad)
cmp
xor
xchg
xchg
and
and
add
fld
push
out
fld
(bad)
gs
xor
scas
mov
fs
xchg
lods
test
xchg
rcl
dec
and
lock
pusha
or
popa
dec
mov
call
pop
pop
shr
mov
push
pusha
ss
jo
mov
sub
cmp
pop
int3
pop
outs
pushf
jnp
jle
rcl
push
cmp
fiadd
popa
push
cmp
cmp
push
adc
xchg
jne
pop
ret
dec
dec
in
rol
mov
scas
daa
adc
pop
cli
cmp
lods
push
mul
into
lods
xchg
mov
ror
les
scas
pusha
pop
dec
push
test
ficomp
push
pop
data16
ret
pop
pop
sub
add
pop
mov
sbb
add
add
xchg
movs
mov
pusha
cdq
push
or
rcl
or
and
mov
icebp
push
xchg
dec
ud1
xchg
aam
dec
sbb
push
inc
or
push
dec
push
push
aam
push
or
int
xchg
int3
pop
dec
push
inc
mov
and
sbb
or
or
mov
lock
(bad)
in
pop
mov
aam
loop
shl
inc
arpl
jg
jo
loopne
sub
jge
pusha
adc
xor
sub
add
jne
loope
xchg
inc
add
test
lods
nop
je
add
adc
xchg
out
mov
fimul
mov
sar
(bad)
jmp
sub
jno
or
cmp
pop
arpl
sub
lods
out
push
pop
out
pop
and
push
mov
outs
popa
mov
inc
jnp
loop
xchg
sbb
js
sbb
ins
xchg
xor
cmps
push
daa
pop
retf
xchg
cmp
lds
sbb
int3
push
dec
and
mov
scas
js
push
jp
je
push
popa
inc
add
cdq
fisubr
add
aam
sub
xchg
sahf
ret
jmp
xchg
add
ret
das
adc
fs
fdivr
or
sub
fs
xlat
xchg
sti
cmp
pusha
in
shl
(bad)
loope
sub
arpl
cs
ins
(bad)
lea
mov
pop
lea
push
enter
bound
jne
or
pop
shr
sbb
sub
sub
addr16
dec
push
je
add
cmp
push
shr
in
lods
jnp
in
jb
mov
inc
pop
fdivr
cmp
sbb
push
scas
or
inc
push
loopne
daa
lea
je
adc
fst
xchg
jge
fdiv
sub
loope
ds
jnp
pop
adc
pop
add
sbb
push
or
sub
cmc
xor
clc
ins
cmp
pop
xchg
jo
xchg
rcr
or
es
stos
pop
xor
mov
cld
pop
cvtpi2ps
mov
xchg
jg
dec
mov
cmp
push
mov
inc
and
out
push
push
mov
add
sbb
test
out
jo
mov
add
pusha
add
ret
or
add
data16
sub
dec
pop
add
movs
mov
push
rol
cmc
add
sbb
sbb
mov
(bad)
(bad)
pop
in
mov
add
(bad)
out
js
pop
test
push
sbb
cmc
add
mov
inc
inc
jge
push
mov
sahf
sbb
sub
mov
or
mov
mov
int3
jg
inc
pop
enter
hlt
cmp
cwde
cmp
arpl
ret
jo
sbb
dec
push
hlt
and
push
dec
jmp
jb
loopne
loopne
cdq
aam
xchg
xchg
jg
leave
sbb
pop
leave
inc
out
loopne
dec
mov
stos
xchg
in
hlt
or
cmp
mov
and
add
pop
xchg
and
pop
sbb
pop
jb
mov
mov
xchg
(bad)
sub
sbb
cmps
jns
pushf
adc
push
add
loopne
add
aad
sbb
mov
(bad)
add
enter
mov
xchg
add
mov
mov
(bad)
hlt
adc
or
sar
xchg
pusha
test
add
xchg
ins
push
hlt
mov
arpl
mov
xor
mov
xor
adc
scas
popa
sbb
jp
sub
(bad)
test
xchg
add
movs
dec
mov
cld
jns
and
or
sti
mov
loope
xchg
adc
jecxz
daa
mov
mov
sbb
dec
or
mov
adc
bound
add
cmp
pop
mov
repz
nop
mov
sub
jp
cmps
test
xor
cmp
mov
sub
cmp
aad
lods
cmps
push
lock
cwde
xor
inc
arpl
and
sub
jnp
nop
shl
call
int
sbb
jno
sbb
out
aad
fldenv
xchg
cmps
mov
xor
leave
pop
adc
or
fisttp
sub
jmp
mov
mov
xor
loopne
retf
into
retf
popa
mov
pusha
dec
or
pop
push
scas
test
sub
cwde
xor
xlat
pushf
mov
push
inc
shr
jns
dec
and
aas
mov
adc
add
cmp
outs
pop
lods
adc
cwde
xchg
cmps
pop
inc
sbb
inc
pushf
add
repnz
sbb
xchg
retf
mov
(bad)
jns
inc
push
(bad)
jo
sar
pushf
sbb
shl
pusha
sar
sbb
loope
sbb
push
jle
not
push
out
sahf
pop
js
pop
mov
ja
sbb
adc
daa
push
out
dec
(bad)
stos
(bad)
movs
hlt
scas
push
jbe
push
adc
adc
xor
(bad)
retf
loopne
(bad)
or
sub
clc
adc
ds
mov
add
or
push
jae
test
cmc
pop
jne
mov
pop
dec
ins
popf
mov
inc
fmul
js
test
lea
sbb
push
and
mov
inc
cmp
cmp
or
sub
inc
fst
(bad)
push
add
ins
js
icebp
test
repnz
fadd
imul
pop
sbb
sub
ds
sbb
dec
sbb
in
xor
mov
popf
mov
cmp
and
dec
(bad)
mov
fist
mov
sub
test
xchg
mov
ret
ja
sbb
fwait
inc
rol
xchg
test
and
cmp
fadd
pop
(bad)
xchg
sub
xor
push
in
rol
(bad)
loop
ins
pushf
cmp
xor
push
push
test
sti
and
jae
ins
push
sahf
sub
pop
jmp
jle
xchg
popa
fldcw
outs
in
repnz
pop
jge
xor
inc
pop
loopne
repz
fmul
stos
test
ret
dec
pusha
mov
inc
scas
or
shl
cmps
out
add
jmp
popf
add
repnz
mov
test
sub
add
xchg
jmp
jmp
sar
out
mov
jmp
xchg
imul
xor
or
cmp
imul
cmp
dec
sbb
arpl
and
daa
enter
add
call
das
rol
daa
adc
mov
fld
ret
cmp
add
mov
jne
je
inc
fsubrp
mov
inc
jmp
imul
mov
sbb
pop
jmp
hlt
and
jns
stc
retf
outs
add
cmc
nop
and
xchg
cmp
test
jmp
mov
clc
in
les
movnti
mov
arpl
dec
push
xlat
cmp
sbb
inc
rcr
hlt
lods
dec
fsub
push
dec
add
mov
test
stc
mov
rcl
(bad)
push
push
dec
mov
xor
cmp
fwait
pop
and
sbb
jno
movs
push
add
lahf
mov
inc
ins
add
in
dec
dec
dec
xchg
and
loopne
or
ror
(bad)
pop
xchg
test
sub
scas
loopne
jp
mov
cmp
ficomp
sub
inc
(bad)
test
or
das
cmp
add
rcr
jecxz
jge
sbb
jo
push
into
imul
loope
in
adc
aaa
fidivr
pop
mov
fdivr
push
or
or
add
xor
lods
test
in
pop
ficomp
cmp
sbb
add
inc
cmp
lods
pop
arpl
fcmovb
inc
add
icebp
int3
xchg
cmp
cmp
or
inc
cwde
arpl
and
fnstenv
aam
(bad)
jp
(bad)
out
inc
enter
(bad)
jmp
ins
cmp
xchg
mov
inc
jmp
ror
ds
push
add
daa
push
popa
ja
pop
popf
pusha
push
inc
push
mov
mov
es
jno
pop
add
mov
cmps
or
adc
jecxz
sub
scas
shl
and
sbb
fdiv
mov
xchg
add
test
fisub
fcom
arpl
ret
sub
(bad)
pop
loopne
jp
inc
xor
leave
add
cmp
dec
jecxz
push
mov
sbb
mov
sub
dec
and
cld
mov
(bad)
in
jecxz
jae
cmps
sbb
adc
xchg
pop
mov
mov
test
addr16
mov
mov
sbb
arpl
dec
cmp
mov
mov
jne
dec
add
cmp
adc
sbb
repz
js
xor
xor
out
pop
add
and
hlt
push
js
jne
stos
mov
loop
mov
pop
mov
mov
ret
std
shl
cmp
repnz
and
mov
pop
adc
cld
vaddss
call
popf
mov
push
lods
sub
cmp
(bad)
loopne
fcom
sbb
xor
loope
inc
js
das
sbb
or
pop
fidivr
sub
dec
fst
mov
sbb
xor
mov
mov
scas
repnz
and
xchg
pusha
loopne
sub
and
call
shufps
aam
push
ret
(bad)
jae
add
jo
pop
jecxz
sbb
cmp
lock
cmps
imul
popa
sub
sub
add
les
(bad)
shl
sub
xor
jns
push
jmp
push
mov
push
fcomp
mov
js
jmp
mov
push
(bad)
inc
dec
pop
dec
jne
pusha
cmp
sbb
ins
(bad)
xchg
stos
and
movs
aaa
fadd
pop
add
dec
fisub
test
sbb
sbb
popa
dec
jo
(bad)
sbb
loope
mov
data16
jno
add
inc
lods
out
push
or
ss
and
sbb
ins
cmps
ret
and
and
xchg
inc
mov
dec
cld
adc
add
or
out
lods
and
adc
jle
inc
cmp
pop
jmp
popa
mov
fs
add
add
jbe
push
pop
sbb
push
add
dec
push
es
push
jb
or
xor
icebp
xchg
lock
movs
sub
pushf
daa
mov
add
jmp
fsub
pusha
(bad)
mov
daa
inc
and
cmps
push
cmp
push
add
sbb
jmp
or
sub
pop
inc
jae
xchg
movq
adc
xchg
sub
push
xchg
add
mov
push
jp
jb
ror
adc
gs
fdivr
outs
xchg
sbb
push
sub
or
jo
cmp
ror
call
sbb
(bad)
cli
push
mov
arpl
mov
(bad)
lock
add
xchg
mov
test
jns
mov
dec
shl
enter
ss
lock
pusha
cmp
scas
sub
scas
add
gs
popa
or
dec
arpl
rol
addr16
sub
push
addps
cmps
sbb
cmp
in
cmc
inc
sub
push
jo
jmp
fdiv
(bad)
cmp
dec
inc
sub
push
dec
ret
jmp
(bad)
mov
fwait
retf
sbb
(bad)
fs
repnz
mov
jmp
idiv
mov
cwde
mov
jl
out
cld
hlt
pushf
or
mov
fchs
adc
jg
adc
and
hlt
and
mov
adc
or
ret
push
mov
ror
test
das
js
push
cmp
jmp
call
shl
in
shr
arpl
sub
fs
mov
pop
sub
mov
sbb
pusha
add
jbe
or
mov
pop
cdq
adc
adc
mov
shl
xlat
inc
addr16
mov
add
call
ja
mov
mov
xor
mov
jbe
xchg
add
lods
scas
mov
addr16
gs
push
add
fadd
xchg
out
or
in
mov
inc
adc
cmp
jp
pop
xchg
and
fucom
test
bound
inc
addr16
adc
adc
add
cmp
jo
cmps
lock
jecxz
dec
push
mov
mov
xchg
or
push
sbb
sbb
adc
mov
jp
test
jmp
in
mov
data16
push
inc
cmp
add
(bad)
pop
ret
outs
call
nop
mov
pop
cwde
ja
add
dec
imul
and
sar
xchg
cmp
add
in
out
iret
pop
xor
pushf
retf
lea
jb
sbb
cmp
mov
cmp
int3
icebp
xor
or
push
rcr
or
xor
rol
and
push
ja
bound
dec
mov
inc
jbe
clc
(bad)
movs
loopne
push
push
(bad)
icebp
cmps
cwde
adc
jb
cmp
dec
aaa
cmp
jmp
mov
out
dec
movs
and
add
pop
ins
ret
push
pop
dec
mov
add
inc
test
jle
pop
jns
sub
sar
fld
(bad)
icebp
pop
(bad)
add
and
rol
sbb
push
xor
inc
sbb
bound
sub
mov
cmp
mov
add
movs
and
fstp
push
push
pop
push
rcr
sbb
jae
mov
pop
adc
popf
xchg
outs
push
rcr
sahf
enter
cmp
loopne
rcl
aaa
test
adc
imul
sahf
sub
mov
xchg
cmp
jmp
outs
sbb
sub
je
mov
call
mov
push
mul
add
sar
loope
mov
mov
ret
push
js
pop
sbb
push
or
mov
lods
mov
cmp
test
cmp
jb
js
xchg
into
test
pop
add
cmps
mov
sub
call
ins
loope
test
or
dec
into
add
inc
fnstsw
xchg
pusha
(bad)
push
xchg
lock
inc
jb
shr
enter
ror
outs
and
or
clc
js
popa
ja
test
outs
sbb
ret
sbb
xor
out
push
jmp
add
add
push
inc
(bad)
ror
push
ret
bound
fsubr
out
bound
mov
and
xor
ret
sbb
jns
mov
ret
loope
jno
add
adc
cwde
(bad)
or
les
dec
add
jo
retf
fsubr
call
popf
rol
adc
xchg
cs
pop
loope
push
push
sbb
les
jle
movs
pop
cmp
mov
cmp
cmp
in
or
add
push
xor
scas
loopne
push
inc
sbb
adc
jle
call
cmp
addr16
fcomp
xchg
sbb
stos
xor
mov
ret
fld
aam
pop
in
(bad)
and
shl
mov
cmp
pop
xchg
mov
inc
call
repnz
pop
adc
xor
popa
mov
cmp
or
cmp
or
cwde
in
lods
sar
pop
mov
mov
or
or
cmp
or
addr16
mov
sub
xchg
xor
movs
inc
orps
mov
in
js
xchg
or
repz
out
or
mov
mov
sub
push
mov
adc
cwde
imul
enter
or
push
pop
mov
adc
in
mov
in
daa
das
retf
popa
cli
daa
outs
push
xchg
dec
sbb
(bad)
or
cwde
(bad)
mov
push
push
mov
add
icebp
fld
pop
inc
leave
out
mov
loopne
addr16
dec
mov
push
fsubr
ror
pop
cwde
rol
inc
bound
test
cli
add
(bad)
fisubr
test
cmp
inc
jmp
dec
jp
cmp
sub
loopne
into
sbb
xchg
push
je
push
retf
js
js
fld
hlt
mov
popf
pop
push
sahf
int
xor
mov
mov
loop
sub
dec
daa
hlt
jbe
in
into
loop
icebp
shl
pop
xor
pop
cmp
shl
xor
mov
ja
gs
loope
add
int3
movs
or
xor
test
dec
rol
(bad)
fisttp
in
xchg
sar
aaa
xor
sbb
les
pop
dec
mov
fs
or
pop
push
and
jns
imul
fidiv
jge
dec
xor
mov
lds
push
mov
aas
add
fdiv
loope
ret
adc
and
xlat
sbb
mov
sti
in
inc
add
sub
callw
mov
pushf
in
adc
push
rol
call
and
ret
test
push
pop
leave
pusha
adc
iret
repnz
mov
mov
in
ss
pop
ror
repz
push
adc
inc
jg
and
les
cmp
loopne
cli
fnstsw
fcomp
mov
inc
sbb
mov
test
dec
call
xchg
mov
(bad)
sbb
call
jne
mov
add
fsub
int3
xor
or
adc
push
sbb
lods
sbb
adc
adc
push
aaa
rcr
jp
ror
(bad)
pop
frstor
adc
aad
mov
int3
cmp
ret
dec
pop
dec
mov
stos
dec
jb
adc
sub
push
cmp
shl
fsub
(bad)
loopne
in
push
jb
lock
popa
aam
adc
or
jne
mov
adc
mov
gs
movs
dec
jmp
push
push
xor
sbb
push
enter
xchg
jbe
(bad)
xchg
xor
es
cs
dec
add
pop
sub
xor
in
pop
rcr
jb
popa
bound
imul
mov
lea
loopne
cmp
and
add
gs
int3
mov
or
inc
push
or
xor
popa
imul
pop
retf
daa
into
push
push
lock
cmp
sub
sbb
bound
rcl
jb
xchg
loop
rcpps
jo
jno
icebp
pop
and
jmp
scas
push
adc
test
xchg
xchg
into
leave
push
jno
fiadd
inc
jb
and
inc
mov
cmp
adc
add
cld
add
or
out
fdivr
inc
cmp
push
xor
inc
and
push
xchg
mov
jp
in
mov
adc
cmp
retf
mov
mov
xor
jp
xchg
jne
call
aaa
mov
sbb
xchg
pop
push
mov
jmp
or
sbb
loopne
xor
add
test
(bad)
sbb
rcr
loop
pop
stos
add
retf
retf
xlat
out
add
shl
or
loop
mov
or
mov
pop
leave
(bad)
add
adc
add
jno
scas
in
and
cdq
rcr
addr16
mov
jo
push
xor
adc
es
pushf
pop
xchg
adc
inc
or
jo
xlat
hlt
aad
rcr
or
xlat
lods
add
xchg
add
cmp
xchg
pop
inc
(bad)
add
sahf
shr
pop
rcl
sbb
fistp
mov
and
add
loope
in
jl
imul
sar
or
pop
mov
(bad)
or
jp
loop
add
jg
push
pushf
and
inc
pop
in
or
sub
sbb
sub
cmp
xor
jge
cdq
fsub
xchg
(bad)
int3
ret
and
or
nop
retf
inc
es
add
jae
aam
xor
adc
loope
movs
xchg
xchg
(bad)
jmp
sbb
jbe
les
jl
pushf
sbb
pop
add
add
adc
lock
ds
jb
jnp
nop
xchg
fmul
leave
ins
jecxz
out
test
jbe
inc
test
sahf
xor
pop
retf
adc
add
and
pop
call
shr
lods
push
cmp
je
xchg
retf
and
jbe
outs
or
loope
iret
adc
aaa
push
adc
cmc
push
mov
arpl
xchg
inc
mov
aad
icebp
cmps
mov
aad
sbb
mov
cmc
xor
inc
pop
aam
shr
push
sbb
repz
fldcw
xchg
je
adc
js
test
pop
inc
sub
pop
ja
add
in
popa
mov
dec
pop
stos
outs
sub
mov
pop
sbb
sbb
xchg
inc
cli
and
adc
jge
ret
sbb
pop
rcl
lds
dec
fstp
mov
mov
sti
sbb
lods
scas
dec
shl
js
into
mov
mov
push
mov
ins
gs
lea
idiv
sub
dec
mov
dec
loopne
les
aam
add
inc
leave
rcr
daa
fadd
add
test
test
clc
aaa
mov
mov
xor
inc
cmp
loope
pushf
jo
(bad)
enter
cmp
scas
push
out
icebp
lods
fild
gs
sahf
pop
sbb
add
adc
ret
leave
jl
cmp
mov
sub
or
ficom
jle
push
test
popa
push
mov
dec
push
rcl
out
fsub
loope
scas
mov
test
aad
cmps
jmp
out
and
into
xor
retf
add
stos
ss
sbb
or
popf
add
xor
mov
fisub
and
add
sub
jo
or
popa
pusha
and
cmp
dec
pop
xchg
cdq
xor
loop
mov
push
lods
push
xchg
pop
and
dec
hlt
hlt
pop
lods
hlt
aam
push
sbb
(bad)
popa
test
shl
hlt
add
cmp
sub
xchg
add
adc
sub
ss
(bad)
bound
jb
mov
xchg
or
sbb
pop
in
retf
push
xchg
jno
call
pop
or
jmp
add
sbb
into
xchg
adc
push
jp
stos
stos
push
stos
or
nop
or
dec
mov
sbb
and
pop
mov
jecxz
fadd
xchg
or
jbe
push
mov
or
mov
loope
cmp
cdq
jno
lock
jae
jle
cmp
jp
jo
pop
sbb
pop
mov
pop
or
and
dec
js
add
mov
or
lea
(bad)
call
aaa
xor
aaa
or
xor
pop
daa
pop
scas
jmp
(bad)
loope
loopne
xchg
cld
mov
dec
jo
mov
jo
mov
js
and
clc
sub
pop
inc
xor
loope
iret
je
(bad)
test
lea
jle
nop
push
and
cmps
pusha
jmp
pop
sub
xor
jmp
mov
mov
cmps
and
scas
pop
out
inc
sbb
or
imul
and
fiadd
or
jo
xchg
push
mov
mov
sbb
or
(bad)
push
xchg
mov
sbb
ja
int3
sub
or
push
push
movs
aas
pop
test
or
jecxz
cmp
cmp
cdq
push
inc
jle
or
mov
pop
jmp
test
fmul
add
pop
bound
cmp
jmp
repz
sbb
mov
imul
add
xor
add
inc
retf
repz
mov
add
fld
jae
(bad)
and
mov
xor
xlat
call
mov
leave
mov
rdpmc
push
push
jo
les
or
inc
aam
ret
inc
mov
popf
ret
fnsave
out
push
xor
pop
int3
xchg
pusha
mov
or
dec
aad
add
icebp
xchg
and
inc
ret
fwait
adc
xchg
js
data16
mov
mov
push
xchg
adc
mov
push
or
int
push
(bad)
adc
jno
xchg
popa
ret
pop
pop
add
inc
popa
mov
dec
sbb
js
cld
call
inc
dec
and
cmp
loopne
imul
ficomp
in
mov
sbb
fidiv
push
daa
shr
std
ret
outs
add
popf
rcl
pop
(bad)
and
or
adc
inc
mov
dec
jno
in
cdq
cmp
mov
movs
lock
inc
out
mov
xor
das
cmp
pop
and
sar
sbb
xchg
sbb
or
dec
jp
lock
rcl
pop
xchg
loopne
jae
add
pop
xor
popa
loopne
repnz
sbb
xchg
stc
xlat
pop
push
fiadd
sbb
(bad)
out
arpl
push
push
cmp
(bad)
mov
mov
movs
push
mov
std
or
push
add
cmp
call
sar
retf
pop
ss
inc
test
push
loop
ja
xchg
sar
push
push
in
fs
jo
mov
cmp
push
repnz
gs
and
jle
in
imul
push
mov
lods
or
jb
ret
xor
add
cmp
add
inc
sub
xchg
iret
std
mov
adc
mov
add
push
sahf
les
cmp
jo
adc
mov
rcl
rcl
out
xor
lock
add
adc
rcr
add
push
popf
sbb
or
outs
sbb
loopne
add
pop
jecxz
dec
mov
and
movs
ja
mov
mov
adc
push
test
mov
xchg
push
or
pop
sbb
push
pop
sbb
into
inc
mov
cld
and
and
ins
imul
add
test
popa
add
cs
cmp
jmp
adc
xchg
adc
sub
ja
loopne
rol
mov
or
hlt
jno
xchg
and
ds
call
inc
push
stos
ret
mov
mov
pop
mov
enter
lods
popf
mov
pop
js
lock
or
pushf
js
lods
je
push
pop
xchg
push
sub
bound
aad
dec
push
retf
sub
jno
cmps
mov
enter
add
cmp
scas
xor
scas
mov
add
sub
jmp
sub
xor
push
sahf
shr
cs
retf
test
add
sbb
add
daa
mov
mov
dec
xchg
out
add
xor
aaa
pusha
jmp
or
pop
mov
pop
xor
jno
fbstp
std
pop
retf
mov
xchg
add
pop
adc
inc
adc
mov
shr
jp
sbb
not
mov
inc
enter
nop
mov
loop
shr
mov
pushf
add
add
and
mov
push
or
adc
sbb
push
xor
or
xchg
add
pop
mov
mov
test
push
inc
ret
xchg
add
add
inc
inc
inc
or
pop
mov
push
call
sub
push
inc
sbb
je
hlt
(bad)
int3
add
jns
popa
or
je
cwde
jbe
fisttp
push
in
mov
pop
js
jge
packuswb
sahf
cmps
inc
jo
push
(bad)
adc
sti
sub
adc
jns
mov
fcomp
mov
sahf
or
pop
sbb
xchg
and
or
into
nop
mov
adc
lock
retf
jge
and
fcomi
test
ret
inc
inc
jge
(bad)
js
mov
mov
sub
jae
pushf
cmc
outs
xor
cwde
jge
mov
cmp
add
outs
and
arpl
jp
daa
lods
cmp
pop
lock
push
jnp
dec
cmp
xchg
stc
pop
dec
mul
push
jo
or
mov
sub
jecxz
mov
add
in
pop
xchg
inc
sbb
icebp
repnz
scas
sub
and
dec
jbe
adc
test
cmp
push
pop
fmul
sub
inc
jo
and
cmp
and
jne
retf
xor
popa
imul
xor
push
mov
cmp
shl
mov
ret
pop
aas
into
gs
and
jecxz
xor
mov
outs
mov
lock
inc
sub
movs
sahf
ficomp
and
xchg
cli
rcr
mov
retf
pop
jp
stos
mov
dec
jp
les
mov
ins
xchg
and
xor
fst
dec
jmp
add
into
outs
cmp
or
and
mov
pusha
xlat
lea
cmp
mov
xor
inc
(bad)
xchg
xor
mov
enter
push
adc
or
jb
jmp
mov
push
idiv
fiadd
add
and
pop
shr
shl
scas
and
jmp
pop
cmp
lock
xchg
popa
jo
sbb
pusha
mov
les
jecxz
adc
in
mov
inc
jmp
test
ins
(bad)
ss
call
cmc
rcl
or
sub
lock
dec
or
enter
nop
xchg
jo
rcr
push
dec
call
movs
sub
push
and
sbb
lock
outs
add
pop
cmp
dec
int3
xor
das
cmp
ror
arpl
daa
cmp
pop
and
out
xchg
test
jo
idiv
rcl
sbb
cwde
movs
push
addr16
xchg
inc
push
jp
adc
or
imul
or
retf
daa
cmps
cmp
sti
stos
test
mov
mov
in
or
xchg
mov
pop
push
inc
repz
pusha
popa
mov
sub
test
call
or
cdq
jo
xchg
sbb
popa
mov
enter
scas
es
or
rcl
sbb
pushf
add
adc
sub
fs
pop
sar
jge
and
jnp
xor
add
jmp
jmp
or
inc
inc
popf
push
jne
cs
fdivr
mov
cmp
mov
inc
fs
jecxz
mov
test
xor
imul
cmp
(bad)
sub
ret
jecxz
mov
dec
int3
cs
adc
xor
adc
shr
and
loop
(bad)
(bad)
xchg
pusha
inc
cmp
loope
mov
and
ja
add
into
xchg
addr16
jo
pusha
pop
jmp
mov
pop
ret
fcmovne
popf
xor
add
cmp
pop
adc
sbb
icebp
jmp
test
mov
fabs
fcmovnbe
arpl
inc
fstp
mov
xor
xor
mov
mov
dec
test
sbb
xor
push
xchg
(bad)
and
lea
loope
xchg
sahf
push
into
rcl
sbb
je
cmp
in
dec
mov
mov
or
push
mov
mov
cdq
inc
push
(bad)
xchg
test
jp
sbb
adc
push
adc
push
pop
leave
inc
mov
data16
adc
sub
push
pop
or
loopne
sub
or
in
mov
mov
xchg
cmp
cmp
les
ss
or
pop
sbb
es
jne
fst
xchg
jo
or
loop
(bad)
out
sbb
(bad)
lock
xchg
je
call
sahf
test
(bad)
idiv
sbb
or
(bad)
cmps
loopne
in
jo
movs
ins
dec
cmp
sub
push
ret
rcr
gs
or
xor
cmp
pop
and
into
mov
lock
addr16
dec
aam
mov
push
aaa
jb
push
mov
repz
(bad)
and
lock
movs
sbb
mov
or
rol
jmp
push
and
fs
jae
in
push
frstor
fild
jo
cmp
fstp
push
fsubr
jno
pop
cmp
xchg
xor
mov
ret
mov
test
adc
jnp
push
adc
pop
call
test
dec
and
xchg
leave
nop
inc
mov
mov
dec
cmp
pop
je
adc
sbb
in
(bad)
loopne
test
push
fdiv
add
sbb
(bad)
in
jp
inc
jmp
jo
push
out
test
lock
loopne
inc
rol
adc
shl
fdivr
xor
(bad)
cmp
call
cmp
adc
dec
das
jns
or
aad
fld
fld
pop
xchg
or
(bad)
mov
add
scas
xchg
stos
test
and
inc
sbb
lods
js
sahf
inc
aaa
add
aas
add
mov
adc
sbb
add
or
mov
jae
test
fcomp
jecxz
or
xchg
cmp
fsubr
cmps
daa
or
cmp
add
push
(bad)
sar
cdq
nop
jbe
sbb
fdivr
(bad)
shl
rol
movs
sbb
sbb
pop
in
adc
sub
movs
pop
ret
sbb
mov
into
int3
neg
xchg
jmp
cmp
xchg
loope
out
dec
push
push
mov
sbb
and
sbb
lods
xor
jb
and
mov
pushf
xor
pop
push
rcr
rcl
xchg
sub
sbb
ins
xchg
mov
and
out
fdiv
cmp
test
(bad)
test
inc
fst
test
test
jmp
cmp
and
dec
lock
pop
aam
cs
lock
inc
ins
cmp
sbb
pop
cmps
push
fs
in
cmps
in
movs
(bad)
or
push
out
in
or
inc
fwait
in
dec
enter
jnp
mov
push
cmp
jo
sbb
mov
push
stc
(bad)
lods
je
ins
jecxz
retf
lock
jmp
jp
dec
(bad)
call
dec
mov
fs
imul
fdiv
fmul
inc
dec
pusha
out
les
add
cmps
sub
icebp
stos
repnz
xchg
sbb
adc
adc
and
mov
xchg
jp
fsubr
iret
push
xor
add
les
sbb
sbb
loopne
rol
sbb
mov
stos
test
or
imul
fwait
inc
xchg
ss
add
add
or
cmp
jo
xchg
mov
or
arpl
and
nop
mov
arpl
imul
mov
fisttp
or
das
cmps
or
or
xchg
jecxz
mov
rcl
sub
jmp
jb
ret
loop
mov
pop
ret
shl
push
jno
pop
aas
push
mov
inc
jmp
fdivr
pusha
cmc
mov
adc
imul
fs
mov
cmp
jo
aaa
call
inc
adc
aam
mov
shl
loop
adc
cwde
mov
fwait
sub
jp
adc
fiadd
push
mov
cld
es
cmp
dec
jg
push
sbb
daa
call
sbb
int3
pop
dec
dec
enter
mov
xchg
adc
cmp
stos
outs
loope
retf
bound
jo
sbb
add
imul
lea
ret
xchg
repnz
pop
jae
add
(bad)
mov
sub
dec
fsub
xor
xchg
hlt
lock
push
dec
mov
sub
cmp
clc
dec
cwde
dec
jecxz
cmp
inc
mov
fdivr
aaa
mov
xchg
je
rol
dec
sub
daa
mov
sub
sbb
adc
arpl
ret
in
ins
retf
add
mov
ret
aaa
cmp
xor
sar
mov
xor
xor
in
push
imul
ret
fsubr
pushf
lds
into
push
push
ins
pop
fld
xchg
pushf
xor
xor
(bad)
dec
dec
inc
rcl
jns
imul
cli
and
ins
xor
outs
aaa
push
sahf
rcl
pusha
test
inc
imul
mov
mov
lock
leave
nop
jmp
aam
(bad)
jne
add
adc
xor
xor
xor
pop
shl
aam
(bad)
xchg
mov
sbb
or
dec
push
pop
fucomp
mov
cmps
and
leave
sar
call
xor
or
rol
lods
movs
push
mov
aam
xchg
xor
push
pusha
xor
pop
or
fst
or
xchg
test
xchg
cmp
ror
das
jae
mov
fld
out
pop
lea
sbb
std
nop
pop
add
outs
leave
sbb
xor
mov
into
adc
adc
daa
sbb
cmc
add
or
ret
sbb
add
shl
enter
enter
js
leave
into
movs
pop
cmp
sbb
jl
push
mov
out
pusha
hlt
fdiv
xchg
jne
and
loop
jne
mov
cwde
sub
inc
cmp
or
pusha
xor
loopne
xor
shl
cs
mov
jmp
xchg
sbb
sti
or
fs
mov
in
mov
call
test
scas
xor
fldcw
mov
fcom
mov
jbe
add
addr16
add
mov
add
movs
jo
push
inc
xchg
das
xchg
mov
rcl
jno
pushf
test
sahf
cld
and
loopne
fs
adc
icebp
push
xor
sub
xchg
xchg
ficom
xor
add
inc
jmp
mov
pop
lods
mov
icebp
movs
inc
retf
(bad)
mov
pop
xor
into
icebp
sbb
lods
pusha
inc
jns
jns
add
jne
pushw
lock
jae
dec
push
(bad)
stc
leave
or
fs
xchg
sbb
sub
gs
push
sub
jl
add
repnz
push
sbb
dec
shl
fdivr
retf
xchg
push
pop
ja
xchg
fiadd
xor
push
or
popa
lods
adc
lock
sbb
lea
sub
jo
add
ret
retf
sbb
cmp
ret
pop
scas
cli
fwait
shl
sbb
xchg
jmp
gs
movs
mov
addr16
popf
add
loop
sbb
ds
push
mul
int3
fnstsw
das
jmp
pushf
or
cmp
dec
mov
rcl
push
mov
dec
mov
adc
mov
add
cmp
outs
mov
sbb
retf
popa
int3
adc
adc
sbb
out
sub
jmp
push
pop
mov
adc
xor
inc
loop
jne
int3
xor
sub
pusha
pop
add
pop
pop
mov
mov
addr16
push
(bad)
mov
sbb
or
adc
cmp
inc
test
out
test
cmp
sar
out
mov
cdq
daa
shr
test
out
pop
pop
movs
and
push
mov
imul
push
xchg
fisub
sub
mov
cmp
sahf
add
fisubr
pop
popf
mov
mov
push
pop
mov
sbb
test
jl
mov
add
or
and
cmp
adc
loopne
xchg
std
(bad)
retf
dec
dec
pop
xchg
aas
retf
dec
popf
add
pop
inc
jmp
popa
cmp
cmp
(bad)
repz
mov
jl
fucom
xor
push
pop
and
test
jnp
or
sub
xchg
mov
mov
sub
mov
cmp
inc
pop
pushf
sbb
xor
mov
xor
mov
dec
jle
cmps
loope
pushf
enter
xor
in
imul
das
inc
js
pop
imul
and
mov
jecxz
add
and
push
fidivr
(bad)
jp
mov
mov
sub
js
loopne
retf
jno
jecxz
add
jno
(bad)
fdivr
call
pop
loop
mov
jo
mov
pop
in
jns
jno
sub
(bad)
adc
out
aaa
inc
pminsw
nop
pop
add
jle
xchg
test
push
xchg
or
and
or
pop
(bad)
ffree
cmp
dec
push
inc
mov
and
test
or
mov
mov
rol
or
lods
into
adc
pop
jo
and
loope
sbb
mov
or
dec
addr16
repnz
adc
mov
in
sub
sbb
jbe
push
and
ret
repz
dec
(bad)
adc
jo
pop
test
sbb
mov
sbb
push
add
les
xchg
in
cli
push
pusha
and
dec
sbb
mov
jmp
adc
jp
call
clc
daa
sub
dec
cmp
jnp
mov
call
cmps
jmp
mov
loope
mov
xchg
add
add
ja
js
dec
pushf
out
mov
dec
adc
into
sbb
enter
fs
aam
and
scas
sbb
ja
pop
enter
ret
dec
sbb
in
inc
mov
mov
jno
jae
mov
call
nop
mov
enter
jl
sbb
pop
mov
mov
retf
cmp
retf
push
mov
push
mov
push
xchg
xor
loopne
in
push
les
push
pop
sbb
sub
arpl
push
movs
pop
pop
rcr
sti
jmp
movs
cmp
mov
jmp
test
into
pop
inc
sbb
jo
imul
push
das
or
jp
mov
lock
xchg
jo
jl
jmp
enter
dec
add
jne
mov
sti
loope
sbb
sar
jae
fisubr
cmp
iret
aad
test
arpl
sub
repnz
and
jmp
and
rol
pop
pop
test
or
es
push
lds
xchg
mov
push
movs
xor
and
adc
dec
xchg
out
xchg
loope
rol
stc
mov
(bad)
jmp
test
sbb
xor
dec
call
test
movs
xchg
test
shl
(bad)
in
xchg
xchg
test
and
call
adc
and
push
pop
lods
push
xchg
dec
repnz
sbb
xchg
push
pop
and
mov
push
xchg
xchg
inc
jecxz
jecxz
cmp
fidivr
jmpw
rol
add
xchg
movs
inc
les
or
cli
fs
and
fldcw
lock
retf
jne
dec
rol
xor
add
jmp
adc
mov
pop
push
jl
add
imul
pop
mov
or
arpl
shrd
mov
add
jl
pusha
and
call
enter
adc
add
or
imul
shr
add
push
repnz
clc
popa
rol
imul
int
repnz
mov
movs
ret
ss
xlat
pop
add
mov
dec
inc
xchg
xor
in
mov
push
clc
pop
xchg
xor
fs
sahf
pusha
lods
add
cmp
pop
and
sub
or
adc
mov
xchg
popf
add
cmp
jo
ins
int
xor
jo
fs
and
popa
add
push
dec
ret
sbb
outs
jmp
loopne
test
dec
rol
fiadd
jne
sub
sar
jo
cmc
or
xchg
pop
std
stos
and
inc
dec
in
ret
add
add
add
cs
ds
cmp
ret
push
mov
repnz
push
ja
adc
add
dec
add
or
dec
daa
or
fdiv
cs
mov
js
sahf
mov
lea
or
rcl
js
mov
pop
outs
pop
inc
xchg
cli
mov
leave
adc
mov
sbb
add
adc
mov
dec
mov
frstor
sahf
add
pop
push
hlt
and
mov
mov
icebp
cmps
(bad)
cmp
dec
(bad)
and
retf
mov
xchg
push
xchg
or
jmp
jne
dec
sbb
in
mov
into
sar
jbe
nop
in
mov
push
or
enter
sub
cmps
fs
inc
inc
add
sbb
xor
or
cmp
xor
data16
inc
(bad)
xor
ins
out
sub
cmp
fisubr
pop
push
xchg
xor
push
pop
or
jl
dec
outs
mov
xchg
jp
push
popa
movs
mov
push
daa
popf
push
sub
jne
or
jno
mov
mov
adc
mov
jecxz
jno
push
or
pop
cmp
mov
js
push
mov
mov
retf
push
sbb
or
add
in
lock
dec
push
cmc
mov
sub
jne
lods
push
cmps
sar
xchg
stc
loope
in
inc
or
call
std
pop
repnz
outs
jmp
fild
cmp
aaa
cmp
cmp
rol
js
jno
inc
pop
push
dec
cmps
xchg
fmul
test
add
in
inc
xchg
(bad)
adc
fucom
je
or
xchg
inc
scas
sub
dec
push
retf
clc
popf
pop
pop
loope
adc
clc
or
stos
enter
bound
js
test
and
(bad)
pop
aad
push
das
cmp
dec
pop
nop
movs
xchg
lock
mov
cmp
(bad)
xor
popf
jo
sbb
les
adc
adc
nop
adc
fnsave
xchg
push
imul
or
mov
push
lea
loope
fidiv
mov
add
jmp
mov
jecxz
(bad)
fist
mov
call
jno
retf
pop
cwde
inc
shl
xchg
xchg
inc
add
arpl
pop
cs
cmp
outs
cmp
pusha
xchg
cmp
cmc
test
push
sbb
adc
pop
jecxz
(bad)
leave
sbb
jne
aam
aaa
jne
xchg
dec
sub
push
ins
(bad)
sbb
cmp
stos
out
mov
mov
loopne
mov
fldenv
jle
sar
mov
gs
loopne
(bad)
cmp
mov
fist
sub
inc
pop
and
and
add
leave
mov
jecxz
js
pop
(bad)
rcr
nop
xor
sar
mov
ret
or
sbb
outs
rcr
add
shr
ret
int
push
inc
leave
xchg
sbb
mov
(bad)
xor
dec
sbb
add
adc
xor
and
or
mov
test
sahf
adc
imul
add
push
mov
mov
mov
in
or
ret
xchg
or
mov
movs
xchg
into
push
xchg
(bad)
adc
adc
xor
ja
sahf
and
pop
leave
mov
mov
inc
dec
mov
test
out
out
pusha
cmp
add
jp
push
shl
push
mov
sti
xor
fs
add
lahf
dec
cmp
sar
mov
mov
repnz
(bad)
sbb
mov
xchg
pop
jg
and
ret
leave
in
mov
jmp
fadd
xor
adc
push
jo
xchg
mov
cmps
ret
loope
(bad)
mov
clc
mov
jbe
fild
mov
jb
cmc
xchg
and
pop
addr16
xchg
xchg
add
jns
xlat
je
out
mov
lahf
cmp
mov
in
push
cmp
sub
or
jmp
call
sar
ja
lock
dec
addr16
mov
sbb
fcomp
or
out
inc
mov
add
fist
dec
adc
lahf
and
leave
push
push
and
inc
fstp
mov
mov
xchg
xchg
xor
sub
loop
retf
pop
mov
test
dec
jo
xchg
pop
aaa
and
lods
mov
dec
xor
loope
inc
xor
jnp
inc
pusha
xor
and
mov
ss
adc
(bad)
sbb
in
inc
sub
imul
or
leave
or
inc
dec
leave
jmp
int
mov
or
and
lods
cmp
mov
sahf
sub
inc
push
push
sbb
jnp
loope
ja
push
popa
mov
sub
ret
sub
xor
and
pusha
icebp
jg
add
pop
adc
or
lahf
icebp
sub
pop
dec
add
loopne
test
imul
add
jno
inc
mov
and
test
ret
das
cs
inc
xor
sbb
add
sbb
push
inc
xchg
add
inc
lods
xchg
pop
xor
popa
xchg
movs
pop
pop
mov
ficomp
cmp
add
les
dec
sbb
mov
icebp
(bad)
addr16
push
mov
adc
in
imul
inc
pop
mov
jl
ja
xor
jg
inc
jno
hlt
out
xor
cmp
and
hlt
shl
les
xor
inc
xor
js
xchg
jle
or
cmp
lods
out
pusha
pop
sub
shl
(bad)
fimul
int
leave
mov
retf
sbb
inc
stos
mov
shr
inc
lock
jo
sub
and
and
loop
movd
lods
xor
aas
(bad)
jmp
rcl
add
mov
arpl
repz
cmp
jo
ret
mov
sbb
dec
xor
add
inc
lods
mov
into
aad
cmp
pusha
popa
sbb
std
sbb
mov
inc
sbb
ss
cmp
int
add
xchg
mov
push
jmp
pop
jecxz
movs
pop
sbb
js
dec
into
or
add
xchg
fcom
push
ja
push
cwde
loop
and
loope
test
pushf
call
cmp
mov
mov
pop
xor
cld
add
call
ret
add
pop
dec
sbb
mov
test
arpl
or
dec
pop
cmps
push
outs
fmul
mov
xor
adc
out
mov
repz
or
mov
frstor
xchg
rcl
iret
mov
or
les
scas
xchg
pop
add
sbb
jmp
xor
jmp
je
xchg
mov
dec
pop
adc
es
xchg
call
je
mov
dec
cmp
inc
mov
sbb
pop
popa
mov
(bad)
fisub
sub
lods
xor
pop
scas
jo
aam
fdivrp
lods
sar
retf
aaa
mov
adc
pop
cmps
add
das
jmp
mov
add
test
loop
fsubr
cdq
xchg
cwde
(bad)
and
or
xor
sbb
add
push
mov
push
pushf
adc
dec
ror
adc
outs
sub
pop
dec
std
shufps
jmp
jecxz
jg
leave
inc
pop
push
pusha
cmc
xor
add
out
add
(bad)
xor
cmp
mov
pop
fwait
sar
xor
ds
inc
inc
xor
test
rcl
dec
out
clc
adc
xchg
lods
in
pop
xchg
add
ja
test
inc
lods
scas
mov
pop
fldenv
out
inc
pop
fcom
ret
xchg
push
or
fdivr
push
test
xchg
push
das
cmp
fs
fistp
xor
lea
lods
sub
inc
aaa
outs
sbb
ror
sbb
inc
inc
fdiv
loope
pushf
xor
inc
xchg
xor
mov
lock
adc
pop
retf
mov
movs
sbb
popa
sub
retf
dec
mov
popf
cmps
cs
and
dec
js
cs
mov
and
rol
pushf
fmulp
add
dec
fwait
(bad)
nop
pop
jmp
loop
sbb
mov
xchg
(bad)
jp
xor
sbb
mov
mov
mov
cmp
lods
jb
adc
pop
outs
jns
mov
mov
das
lea
pop
fucom
dec
ffreep
add
jbe
fnstcw
sar
pop
or
sub
sbb
in
and
daa
cmp
adc
inc
call
in
pop
les
cmps
es
add
or
repz
ins
jmp
mov
mov
mov
(bad)
cmc
add
xor
lods
hlt
xchg
sub
add
sub
loope
pop
jecxz
mov
loopne
xor
outs
inc
dec
jns
adc
lock
shl
sub
push
mov
inc
fisttp
scas
(bad)
mov
(bad)
shr
pop
mov
leave
or
xchg
fadd
movs
push
inc
jae
aaa
lock
fbstp
sbb
std
js
adc
mov
dec
cmp
popa
fidiv
or
test
lea
cmp
sub
into
pop
lods
stos
mov
push
in
out
in
mov
movs
ror
aad
xor
mov
dec
lock
mov
sub
pop
mov
adc
jb
push
hlt
mov
enter
cs
xchg
xor
push
(bad)
jns
popa
mov
pop
mul
adc
and
repnz
xor
xchg
cwde
cmp
imul
add
(bad)
shr
xor
sub
push
aaa
push
adc
in
aam
adc
sbb
ficomp
mov
xchg
pop
mov
mov
loop
arpl
or
mov
mov
or
enter
retf
lock
sbb
cli
mov
dec
xchg
sbb
loopne
rcl
xchg
pop
sbb
sbb
mov
test
push
aaa
shl
dec
cmp
sub
inc
out
mov
jp
fst
xchg
xlat
fst
adc
std
sahf
addr16
pop
xchg
jmp
sbb
enter
pop
in
loopne
cmp
pushf
(bad)
ror
push
je
out
push
vmwrite
movs
add
mov
sbb
inc
ja
and
dec
lock
inc
xchg
aas
push
or
js
dec
mov
xchg
inc
div
or
sbb
aam
sbb
mov
ds
js
adc
in
vpshlb
add
jmp
mov
js
push
push
cmp
mov
(bad)
jmp
sbb
xchg
fmul
cmps
pusha
or
call
xchg
xor
jle
aaa
mov
popa
cs
mov
or
es
ja
add
dec
sub
ror
jb
fst
sbb
mov
push
mov
jecxz
add
inc
(bad)
call
mov
jne
xor
loop
mov
xor
mov
sbb
loope
mov
sbb
mov
rcl
and
lock
lahf
or
arpl
cmp
xchg
sbb
js
or
inc
or
in
ja
adc
imul
js
jg
retf
push
cmp
jo
in
mov
inc
(bad)
nop
test
dec
and
mov
js
jle
jo
(bad)
test
sub
mov
fadd
hlt
mov
in
cmp
sub
mov
inc
les
fld
pop
adc
push
adc
adc
loope
xchg
adc
call
sub
lods
pop
cld
fisttp
jo
pushf
jno
test
adc
outs
cwde
mov
call
push
lock
test
xchg
scas
or
pop
(bad)
sub
jno
(bad)
hlt
retf
xchg
mov
and
fiadd
call
outs
xchg
(bad)
cmp
add
lock
pop
aaa
sbb
loop
xor
mov
cmc
stos
rep
cs
mov
or
sub
sar
je
pop
(bad)
mov
add
inc
xchg
add
mov
cli
inc
dec
sbb
call
pop
loop
and
fild
outs
jecxz
hlt
enter
push
loop
(bad)
shl
sub
addr16
out
retf
ret
pop
jge
xchg
sahf
pop
push
mov
(bad)
scas
and
mov
dec
ja
mov
(bad)
jo
(bad)
xor
rcr
cmp
ja
or
push
mov
cmp
call
sbb
sbb
jp
in
sbb
add
mov
xchg
(bad)
jnp
clc
cmp
mov
lock
push
cmp
cld
shl
dec
arpl
xchg
(bad)
lods
aaa
xor
imul
outs
jne
hlt
sahf
ret
jle
mov
jg
mov
mov
sub
lods
popa
loopne
jnp
and
pop
cmp
push
aaa
jmp
sahf
or
jno
inc
mov
ret
xor
aam
dec
(bad)
mov
inc
call
jmp
jo
movs
into
xchg
mov
mov
adc
inc
jb
push
xchg
add
adc
sbb
mov
push
push
or
repz
shr
sub
test
imul
sub
lds
xchg
mov
xor
daa
popa
nop
xchg
jbe
mov
add
cmps
mov
mov
dec
xchg
jb
lds
mov
mov
add
xchg
xchg
rol
sti
stc
rcr
popf
cmp
and
pop
rol
xchg
lods
xor
fsubr
scas
fiadd
pop
jno
ins
in
call
(bad)
in
pop
add
xchg
cmp
jl
sbb
sahf
in
dec
dec
sub
popf
dec
or
xor
rcr
ret
iret
fdiv
add
out
cmps
adc
inc
jo
popa
xchg
dec
inc
push
mov
loopne
(bad)
push
setnp
or
loopne
adc
add
sbb
in
(bad)
in
mov
in
ret
jnp
jmp
call
(bad)
loopne
add
push
shl
loope
daa
push
mov
mov
xor
lea
add
xchg
and
add
loop
push
xchg
lea
aaa
test
mov
sub
ret
dec
pushf
vhaddpd
aas
jp
xchg
and
test
jns
(bad)
movs
jne
xchg
mov
les
cmp
call
jo
retf
or
sbb
mov
pop
cmp
inc
cwde
pop
adc
pop
mov
adc
adc
xor
or
sub
mov
lock
inc
adc
or
imul
into
loope
sbb
imul
stos
add
pop
mov
cmp
lahf
mov
pop
dec
jbe
mov
sahf
push
out
pop
mov
bound
pop
not
pop
mov
or
mov
xchg
(bad)
ss
adc
mov
shl
and
jecxz
test
push
sbb
pop
sbb
retf
cmc
push
lods
sbb
mov
(bad)
mov
repnz
xchg
mov
adc
add
dec
push
xchg
push
outs
sbb
sbb
loopne
(bad)
mov
ret
mov
and
loope
xor
ror
aaa
adc
jp
dec
lea
cli
loop
loopne
and
adc
ins
lods
hlt
sub
or
add
ss
mov
or
lock
pop
loope
and
in
icebp
xchg
add
mov
or
fcom
or
mov
pusha
out
addr16
sbb
mov
fstp
neg
and
mov
loopne
hlt
imul
dec
push
jb
aaa
cmp
push
push
call
inc
lar
pop
inc
dec
adc
fbstp
test
ret
jmp
mov
sbb
xor
push
test
loopne
je
xchg
sbb
and
pop
jl
and
dec
jo
movs
outs
popa
in
jecxz
add
add
fsub
scas
out
(bad)
jo
fdivr
mov
test
adc
pop
call
mov
or
add
inc
push
div
add
sub
cmp
push
scas
add
xchg
adc
lods
ja
fcom
mov
loopne
ror
pop
inc
or
push
out
cmp
or
and
dec
dec
inc
rcr
push
jbe
pop
pop
neg
sbb
je
retf
loop
addr16
and
(bad)
rcr
add
push
sar
(bad)
repz
aam
pop
jle
and
xchg
xor
or
jbe
inc
es
test
sar
push
ud2
jle
lods
lods
jbe
les
jne
mov
jmp
stos
mov
pop
adc
sahf
pop
jb
inc
sbb
pop
cmp
out
jno
or
push
and
popf
jns
shr
scas
gs
outs
aam
mov
adc
mov
push
clc
stos
jp
or
jne
push
fcom
and
mov
js
movs
cmp
xor
jmp
sbb
pop
push
add
icebp
mov
jmp
inc
fmul
ret
ror
add
xchg
mov
push
paddusb
push
push
push
sbb
pop
repz
adc
and
jl
pop
xchg
pop
dec
sbb
out
and
pop
retf
push
sub
add
stc
call
je
add
ret
in
push
or
das
popf
or
cmp
push
mov
mov
jbe
xchg
or
aad
cmp
test
jo
pop
add
loopne
jae
mov
jo
mov
stos
loop
sub
or
push
sub
daa
pusha
jne
dec
call
and
push
mov
sub
jle
jns
clc
and
popa
pop
mov
dec
(bad)
outs
or
mov
je
mov
loopne
cld
and
ja
stos
add
pushf
in
fdivr
mov
sub
xlat
add
dec
pusha
mov
pop
mov
mov
sub
stos
fdivr
jecxz
xchg
and
test
ja
sub
add
aam
(bad)
retf
cmps
rol
mov
jne
mov
dec
xor
jmp
(bad)
popf
aad
sbb
jns
sbb
adc
jge
xor
lods
icebp
fimul
push
ja
adc
push
and
xor
pop
sbb
(bad)
ss
add
ret
cwde
rol
pop
sbb
push
loop
mov
mov
cdq
fwait
clc
nop
in
push
jb
and
pop
ret
pop
pop
pop
xchg
cli
jmp
dec
or
idiv
or
rcr
xor
push
add
cmp
cld
cmps
loop
pop
ret
adc
push
(bad)
jmp
repnz
and
mov
pop
pushf
outs
cmps
dec
push
xchg
push
add
mov
sbb
jbe
mov
adc
les
out
add
loope
dec
rcr
and
sbb
cmp
into
sbb
jle
outs
cwde
rol
in
pusha
loope
jl
dec
(bad)
mov
pop
pop
jecxz
push
mov
jae
and
arpl
hlt
xchg
pusha
push
add
mov
sbb
mov
xor
and
mov
jnp
sbb
or
cmp
fist
icebp
aam
pop
dec
icebp
es
mov
ins
or
inc
add
lods
and
mov
pmaddwd
jno
and
sub
add
pop
lock
in
dec
inc
fcomp
sar
iret
pop
test
ins
cmp
and
fadd
or
mov
and
mov
and
cmp
mov
cmc
cmp
cmp
sti
jnp
sub
(bad)
mov
jecxz
imul
mov
dec
daa
getsec
mov
(bad)
inc
in
pop
push
adc
and
scas
xchg
(bad)
mov
pop
push
jmp
test
inc
(bad)
daa
outs
jo
out
push
cmc
outs
or
aad
pusha
inc
ds
loopne
mov
cmps
pop
test
aad
test
mov
bound
test
push
pop
mov
push
stos
add
adc
push
mov
jbe
sub
pop
loopne
popf
inc
outs
and
lods
ret
pop
cmp
and
xor
cli
adc
call
int3
add
in
mov
xchg
test
pop
mov
das
or
aad
scas
movs
push
dec
sti
es
push
sub
test
out
jecxz
and
pop
jmp
(bad)
push
xchg
test
mov
into
or
hlt
xchg
push
xor
push
jecxz
cmp
and
fidivr
test
mov
pop
outs
sbb
(bad)
int3
inc
ret
and
adc
xor
mov
xchg
add
add
sar
cwde
push
cs
arpl
xor
inc
ret
push
adc
sbb
popf
rol
retf
adc
mov
int3
sbb
dec
das
sbb
jno
push
mov
pusha
ret
jmp
jno
outs
push
jmp
cli
test
pop
push
sub
xchg
and
inc
ror
test
sbb
rol
jb
rcr
jo
bound
push
xor
xor
sub
cmps
ret
mov
sahf
xchg
sub
pusha
(bad)
mov
fsub
js
mov
sbb
add
data16
mov
cwde
sbb
sub
jo
mov
jecxz
jb
stc
shl
xchg
add
cmps
push
jno
pop
add
jmp
inc
cli
xchg
cmp
leave
mov
enter
test
push
mov
dec
int
movs
xchg
push
data16
xor
xor
movs
dec
sbb
push
ret
inc
cmp
call
push
jmp
loope
jmp
push
jb
cli
pop
mov
call
cmp
pop
or
out
mov
(bad)
outs
enter
movs
pop
pushf
sbb
pop
push
sbb
cmp
out
loopne
ret
leave
loopne
out
add
xchg
cmp
jl
call
push
aam
jb
dec
add
test
leave
ret
in
sub
or
jecxz
jmp
jecxz
jmp
sub
xor
pop
loop
inc
or
sbb
cmp
js
xchg
push
adc
inc
or
cdq
xchg
sbb
ror
(bad)
shl
sbb
cmp
cmp
bound
lods
pop
inc
xchg
pop
pushf
add
dec
(bad)
pop
pop
inc
adc
cdq
gs
call
sbb
cmp
adc
dec
pop
jo
or
pop
inc
nop
xchg
jp
lock
addr16
cmp
xchg
rcl
ror
adc
cmp
aaa
xor
mov
(bad)
mov
out
mov
and
cmp
cmp
mov
daa
sub
bnd
les
jnp
ss
stos
test
adc
cmp
push
mov
mov
dec
sub
stos
jp
sbb
mov
out
xchg
es
xchg
xlat
arpl
ficomp
hlt
xchg
cmp
test
push
add
shr
pushf
loope
addr16
rol
pop
add
jle
xchg
ja
mov
push
inc
cmp
fwait
xchg
and
repnz
push
jle
nop
pop
pop
push
push
ja
push
xor
add
xchg
push
mov
jp
inc
mov
out
inc
push
inc
jne
ss
aam
push
push
mov
sbb
lds
and
jl
adc
adc
inc
jbe
sub
leave
retf
jle
js
les
push
jno
pusha
lock
(bad)
das
rcl
popa
cs
into
or
adc
das
daa
popa
mov
push
mov
pop
(bad)
or
popf
and
and
shr
dec
dec
loop
lods
cmp
mov
xchg
and
vcmpps
pushf
push
retf
adc
outs
(bad)
shr
dec
mov
out
(bad)
adc
sbb
adc
dec
push
stos
test
ins
jo
mov
daa
ja
fdiv
and
pop
nop
and
sbb
mov
loope
int
push
adc
and
xor
(bad)
repnz
pop
xor
add
cmp
js
mov
inc
clc
xor
mov
call
adc
mov
lods
xchg
(bad)
mov
arpl
pop
dec
cmp
sbb
jmp
ret
cdq
xor
sbb
cmp
jb
xchg
adc
das
add
jmp
xor
popa
sub
xchg
lock
das
pushf
push
dec
xchg
cwde
imul
or
or
mov
xor
rol
cmp
push
mov
mov
push
in
adc
xchg
ror
and
jno
ret
mov
cmp
inc
fcom
sub
adc
ret
dec
cmp
add
ret
into
or
hlt
icebp
mov
jl
jmp
lea
not
ret
imul
push
add
(bad)
das
push
jmp
sub
lods
or
pop
sbb
es
xlat
push
out
dec
(bad)
xor
jb
mov
add
fmul
xchg
cmp
jmp
pop
add
pusha
add
es
add
aam
sub
xchg
add
lods
sub
out
into
call
fwait
sub
inc
ret
pop
cmp
ret
sbb
ds
mov
lea
inc
in
call
out
pusha
dec
int
mov
test
scas
pop
popf
dec
jb
in
xor
fidiv
(bad)
jmp
ret
dec
into
sbb
fstp
addr16
lea
jno
inc
not
test
add
ret
push
add
sbb
loop
cmp
mov
xchg
jbe
push
jmp
call
or
jb
cmp
or
sti
loop
xchg
iret
add
loopne
or
dec
sub
inc
mov
mov
ja
and
psadbw
fs
pop
pop
mov
jo
jne
dec
sub
lock
cmp
cmp
dec
mov
loopne
push
pop
or
dec
mov
pop
pop
aaa
aam
push
out
or
aad
stos
inc
push
js
push
mov
xor
stos
jne
mov
lods
dec
lods
cmp
mov
ret
jbe
popa
lock
xchg
cmc
cmps
scas
add
repnz
shl
add
jne
loope
icebp
xchg
pusha
(bad)
dec
mov
mov
out
mov
into
nop
or
push
sub
loopne
mov
mov
xor
cmp
jecxz
push
sbb
xor
sbb
fisttp
scas
xor
addr16
sbb
repz
add
out
test
push
aaa
fcomip
inc
addr16
fstp
imul
scas
adc
add
add
pop
and
shl
mov
sbb
mov
js
inc
lods
mov
jo
fadd
jmp
sbb
mov
mov
stc
test
icebp
stos
cmp
cmp
cmp
inc
dec
loope
sbb
xchg
rcr
mov
fld
xor
mov
push
test
adc
jg
fsubr
daa
movs
fcomp
or
mov
fs
pop
jo
xchg
fnstenv
ins
mov
and
inc
cmp
rcr
push
mov
dec
mov
push
ror
out
pavgb
xor
ret
lods
jnp
inc
xchg
imul
daa
retf
mov
int3
dec
push
xor
sbb
(bad)
icebp
jp
jne
(bad)
push
mov
add
lods
xchg
dec
daa
cld
xchg
xor
xor
fcomp
add
or
test
outs
fistp
sbb
jo
cmps
ins
jmp
(bad)
lock
(bad)
in
or
je
out
inc
pop
pop
push
dec
sbb
jns
mov
outs
pusha
dec
arpl
not
addps
mov
cmp
mov
popf
xor
nop
sbb
jp
pop
mov
add
sub
outs
pop
test
xchg
std
arpl
fisub
loopne
inc
xor
push
mov
retf
cmp
shr
push
adc
loope
mov
lock
mov
jmp
add
jp
xor
fwait
push
cmc
and
adc
lods
jbe
adc
ret
or
ins
lock
xor
or
(bad)
push
inc
call
jmp
outs
(bad)
arpl
(bad)
cmp
or
pop
dec
cwde
(bad)
test
js
add
sbb
pusha
je
std
ss
cmp
je
sbb
xchg
sar
or
xor
jecxz
inc
dec
or
ret
jne
xchg
loope
sbb
lods
xor
or
mov
invd
sbb
ror
je
ret
(bad)
cwde
repnz
das
jns
mov
mov
(bad)
in
or
aaa
push
lods
cmp
cmp
jmp
dec
cmp
mov
mov
and
mov
xchg
lods
push
(bad)
xchg
ret
mov
int3
cmp
mov
leave
dec
xchg
sub
(bad)
daa
loopne
mov
repz
sub
xor
retf
jmp
xchg
or
aaa
rol
fisttp
leave
outs
inc
ret
sbb
add
pusha
mov
je
add
jne
int
(bad)
adc
and
mov
lock
pop
adc
cmp
ins
mov
mov
inc
fwait
ret
loopne
aam
cmp
int3
std
mov
dec
enter
dec
test
loope
dec
mov
lock
fld
push
mov
outs
push
sti
je
jb
popa
dec
pushf
scas
bound
jp
dec
nop
rcr
pop
dec
sub
enter
dec
js
lods
pushf
push
(bad)
pop
inc
pop
sub
jno
jecxz
or
es
mov
push
ror
pop
and
enter
cmps
cli
pop
retf
mov
std
fidiv
(bad)
popf
fdivr
or
sbb
sbb
sti
nop
pop
pop
sbb
and
cmps
cmp
inc
push
pushf
aad
out
xor
xchg
clc
lahf
test
aas
cld
xchg
inc
in
fstp
add
dec
and
cmp
stos
cmp
scas
test
cmps
inc
ret
popa
das
add
adc
or
sar
mov
aam
pusha
sub
clc
enter
stos
xchg
out
and
mov
popf
(bad)
cmp
push
(bad)
xor
jge
inc
mov
pusha
jmp
and
cmp
fmul
lea
sahf
cmp
test
inc
inc
popa
sbb
mov
add
in
dec
ja
push
xor
sbb
jl
mov
add
cmps
int
sbb
std
dec
push
sub
lea
loopne
(bad)
aam
jb
scas
jno
out
(bad)
jmp
mov
or
dec
sub
cmc
cmp
push
repnz
add
sub
repnz
popa
sar
movs
sub
sbb
push
dec
ins
xchg
cmp
dec
ja
popa
pop
cs
mov
sbb
mov
push
loope
pop
mov
fs
stos
or
fisttp
add
movs
pusha
adc
outs
xor
(bad)
xor
call
add
jne
push
jmp
ds
or
adc
sub
mov
adc
xchg
adc
aas
inc
out
scas
imul
dec
adc
scas
push
xor
mov
add
pop
cmps
icebp
jno
fnsave
xchg
clc
lahf
sbb
mov
jmp
pushf
std
adc
cmps
fcmovb
cwde
lock
adc
ret
sbb
shl
and
bound
ret
push
outs
dec
popf
out
sub
pusha
fwait
call
inc
xor
dec
xchg
add
addr16
push
test
not
jmp
test
xchg
icebp
mov
sbb
jb
lods
and
(bad)
add
cmps
sahf
nop
pop
cmc
mov
jo
aaa
lods
inc
push
dec
sub
push
test
inc
movzx
aaa
xchg
cmp
push
adc
xor
fldenv
push
daa
push
jo
loop
xchg
mov
(bad)
jo
(bad)
mov
cmp
mov
das
daa
fcomp
sbb
inc
add
sahf
push
mov
lahf
xchg
or
sbb
mov
jp
aad
fbld
mov
mov
xor
xor
xor
bndstx
jp
out
fdiv
pop
sbb
xchg
and
shl
jo
test
push
scas
push
fwait
adc
das
daa
cmp
jo
push
je
dec
inc
ret
sbb
xlat
popa
mov
les
mov
leave
or
jae
jmp
sbb
(bad)
add
fcomp
adc
sbb
popa
jne
lea
sahf
and
(bad)
js
sbb
xor
rcr
rol
(bad)
rcl
or
adc
xchg
mov
retf
xchg
xor
add
cmp
cmp
aas
xor
fs
cmp
fldenv
mov
and
fld
imul
xor
push
cdq
cmps
push
push
xchg
js
pop
inc
iret
sub
loopne
rcl
fsub
pop
test
sahf
test
adc
rcl
dec
xor
ja
ror
nop
pop
fadd
retf
loopne
outs
pop
push
inc
push
aaa
xor
push
xchg
push
ja
and
call
sub
push
iret
mov
lahf
arpl
add
sub
out
mov
fcom
icebp
xchg
adc
loope
pop
jecxz
or
mov
aad
sub
sub
and
mov
lods
mov
aaa
mov
popf
and
adc
popa
jne
and
lock
popa
xchg
leave
js
sbb
fnstenv
jecxz
pop
dec
sbb
xor
dec
in
cmp
xchg
ror
cmp
cmps
out
test
sbb
mov
inc
ja
test
jp
ret
imul
imul
xchg
out
jno
leave
clc
es
inc
cmps
or
and
jmp
or
cmp
sub
loop
stos
push
mov
jno
fst
imul
add
and
sub
lea
xchg
xchg
movs
fs
jne
cmp
dec
stos
mov
pop
mov
pusha
call
mov
mov
stos
inc
mov
and
loopne
repnz
sti
mov
push
sbb
ja
mov
xchg
inc
loopne
sbb
pop
dec
call
pusha
sub
ins
fbstp
push
xor
fild
ret
xchg
jge
arpl
xchg
mov
mov
mov
retf
(bad)
out
enter
xor
sbb
lods
xor
imul
ret
jle
add
inc
mov
and
(bad)
iret
in
or
cmp
sti
cdq
or
loopne
cmp
arpl
xchg
push
pop
xor
lods
pushf
loope
jae
js
imul
xor
sbb
fdiv
cmp
ret
fs
pop
push
jmp
and
xor
xchg
or
xlat
cmps
pop
ret
xchg
fucom
mov
jnp
adc
inc
retf
push
sbb
jmp
jp
test
xchg
loop
bound
lock
sahf
inc
xor
mov
and
clc
add
dec
test
xor
jge
mov
pop
inc
jne
mov
imul
loopne
jbe
mov
or
jmp
arpl
sub
mov
adc
call
push
xlat
add
or
xchg
jbe
xor
sbb
jmp
adc
dec
(bad)
jecxz
bound
call
lock
sbb
xchg
out
cwde
xor
pop
ror
aas
pushf
add
sar
imul
cdq
xchg
js
ds
iret
popa
dec
ret
icebp
xor
cs
xor
shl
(bad)
push
movs
mov
lock
mov
ins
hlt
out
pop
(bad)
ret
cmp
sbb
jo
cmp
cld
lea
(bad)
jns
jnp
sub
add
mov
pop
ins
imul
pop
or
and
adc
faddp
add
and
cmp
mov
add
ret
pop
dec
call
dec
dec
fwait
pop
shl
mov
push
and
jmp
(bad)
dec
and
scas
in
mov
dec
fstp
sub
mov
jmp
aam
in
sbb
shr
pop
cmp
aam
push
jo
push
and
xchg
pop
into
cmp
and
mov
dec
(bad)
mov
add
loop
xor
mov
xor
dec
pop
cmp
ret
out
test
adc
jns
cs
rol
push
xor
sbb
xor
pop
ja
dec
enter
push
sbb
lods
mov
popa
pusha
dec
cmp
addr16
outs
cmp
and
and
out
mov
adc
out
rol
cmc
cmp
jns
outs
xchg
push
or
add
jne
push
bswap
nop
sbb
loop
ror
push
mov
push
jp
lds
std
sbb
and
jo
pop
js
push
xchg
ja
inc
lock
iret
enter
jmp
and
pusha
add
jp
dec
xchg
dec
out
retf
sbb
test
fistp
pushf
pop
js
je
xor
jns
pop
cmp
dec
cmp
sub
outs
ss
or
add
cmp
std
xor
in
inc
ret
je
push
xor
jb
aad
push
pop
cmp
out
xchg
loopne
or
leave
jns
imul
ss
and
inc
shl
mov
add
rcl
jl
iret
pop
sub
loopne
cmps
gs
lahf
xor
xchg
rol
jecxz
in
loop
cmp
ins
cmps
jo
inc
pop
cmp
mov
pmullw
daa
ror
adc
ret
loopne
sub
imul
ret
shl
add
sbb
ins
and
rol
mov
inc
outs
jp
aad
sbb
mov
and
rol
dec
lods
or
int
pushf
cmp
jge
xor
pop
cmp
enterw
push
(bad)
sub
imul
(bad)
cmp
mov
jmp
lds
in
push
imul
fs
pop
push
jmp
xchg
cmp
push
div
ret
pop
sahf
test
loope
sahf
neg
ret
mov
or
adc
cmp
mov
xchg
xor
pop
mov
adc
sahf
iret
cmp
retf
sbb
mov
mov
and
lods
std
test
sbb
adc
dec
push
addr16
shl
jp
or
adc
ja
mov
xchg
lock
sbb
xchg
mov
xchg
sbb
jecxz
imul
xor
mov
les
(bad)
js
jb
rol
shl
daa
sub
adc
out
aaa
je
mov
retf
test
lock
(bad)
or
inc
lahf
sahf
cli
add
or
shr
mov
push
sub
(bad)
cmp
adc
or
leave
xor
sbb
div
(bad)
in
or
shl
pushf
and
pop
sub
lahf
sbb
fidiv
pop
inc
dec
push
cmp
das
icebp
and
test
sbb
inc
data16
cmp
cmp
js
iret
adc
mov
pop
push
int
adc
mov
add
imul
je
scas
jne
pop
shl
pop
or
jns
retf
dec
mov
das
xchg
les
outs
lock
cs
aam
cmp
pop
ret
js
les
push
jp
mov
test
mov
or
test
and
cmp
mov
(bad)
leave
gs
pop
out
sub
das
out
xor
sub
mov
out
jo
push
repnz
enter
or
mov
sbb
jbe
popa
inc
cwde
lds
cmp
fnstcw
mov
xor
mov
out
dec
sbb
aas
daa
jno
loop
je
mov
xchg
and
pop
sub
mov
sbb
sahf
mov
inc
(bad)
xchg
aad
ror
test
(bad)
xor
pop
inc
or
je
jl
xor
inc
push
push
popf
retf
pop
ret
and
pop
mulps
retf
xchg
xchg
lods
push
hlt
or
in
jne
add
dec
lahf
fsubp
cwde
shl
mov
jnp
jle
push
and
jge
rol
test
add
cmp
cmp
jno
(bad)
loope
adc
sub
inc
pushf
mov
cmp
loopne
outs
bound
sub
js
dec
xchg
mov
sar
aam
cmp
ret
nop
or
fmul
dec
out
jns
outs
jmp
ror
retf
dec
sub
mov
and
mov
mov
add
popf
aam
ret
dec
mov
sbb
mov
sbb
add
and
clc
pusha
imul
daa
cmp
(bad)
jmp
(bad)
pop
nop
mov
and
adc
dec
push
clts
stc
retf
retf
rcl
adc
dec
push
js
and
call
bound
mov
mov
inc
addr16
lea
je
or
mov
ss
sub
test
jo
cwde
pusha
sti
sbb
pop
loopne
cwde
add
popf
es
mov
xor
or
mov
ret
pushf
es
mov
outs
movs
sbb
popf
pop
(bad)
jecxz
mov
jg
out
shl
cmova
ret
retf
in
xor
pop
add
sbb
jno
pushf
dec
cmp
je
popa
lds
das
mov
and
rol
jb
(bad)
sbb
pop
cmp
movs
and
cmps
popf
js
jecxz
xor
xlat
jp
sahf
dec
push
inc
(bad)
cmp
add
mov
daa
and
(bad)
push
xor
scas
adc
mov
or
adc
sub
jge
mov
adc
clc
jo
add
sub
xor
or
xchg
lods
inc
push
shr
mov
call
cs
pop
xchg
aam
pushf
cmc
dec
arpl
movs
mov
clc
xchg
adc
fsubp
in
pop
arpl
add
icebp
ficomp
jp
movs
cld
aam
pop
loop
aas
rcr
pop
pop
mov
nop
ret
adc
sub
fcmovb
jecxz
movs
jno
retf
or
loope
popa
(bad)
aam
sbb
xor
sub
inc
xor
(bad)
cmp
add
sub
pop
rcr
xor
and
leave
sub
jmp
sub
pushf
pop
sub
cmp
inc
mov
add
xlat
push
mov
dec
js
dec
or
mov
leave
jns
test
pop
cmp
push
jae
cmps
arpl
push
ja
xchg
cli
pop
dec
jmp
daa
jnp
xlat
push
outs
popa
jge
mov
dec
pop
jo
inc
dec
test
push
rcr
or
jno
xchg
xlat
dec
scas
mov
xor
push
mov
jo
push
pop
lock
mov
jle
shl
dec
jp
add
pushf
push
xor
inc
dec
mov
inc
sbb
jmp
sbb
popa
movs
aad
test
pop
arpl
add
icebp
mov
jecxz
vmwrite
dec
aas
sbb
xor
sbb
fcmovnu
(bad)
add
imul
push
stos
cmp
ss
push
push
push
shr
xchg
or
mov
pop
add
aam
test
pop
or
sbb
ret
out
and
(bad)
cmps
add
adc
sub
sahf
aad
loope
push
jecxz
aam
inc
sbb
pop
arpl
add
xchg
sbb
add
mov
xchg
pusha
mov
loopne
mov
sbb
dec
sub
and
shl
popa
dec
mov
rol
xchg
jb
stos
loopne
inc
(bad)
push
xor
add
scas
pusha
cmc
in
xchg
jp
ret
(bad)
push
sar
daa
call
add
cdq
out
jno
push
mov
sub
pop
(bad)
cmp
sub
sbb
aad
ret
ffree
es
das
rol
xchg
lock
sar
or
je
jo
shl
lea
sbb
inc
add
xor
dec
lahf
fsub
push
scas
inc
push
cmp
xchg
sbb
mov
sbb
sbb
adc
xor
pop
jnp
call
mov
sahf
cmp
jg
daa
(bad)
xchg
push
mov
xor
das
and
mov
mov
dec
daa
lods
cmp
daa
adc
rol
xor
cmp
mov
(bad)
ror
adc
or
loope
sar
aaa
neg
add
jo
test
cs
(bad)
enter
imul
or
ds
mov
call
pop
retf
jp
rep
or
push
jo
dec
push
push
mov
nop
movs
mov
mov
cmp
mov
fiadd
push
es
jge
mov
cmp
daa
adc
(bad)
repnz
popf
rcl
int
push
lods
sar
imul
mov
push
imul
cmp
cmp
xor
or
call
adc
movs
jns
add
vpshaq
sahf
mov
retf
daa
call
movs
push
aam
pushf
outs
xchg
add
loopne
pop
dec
sbb
inc
scas
and
pusha
add
or
jl
adc
xor
out
push
pop
test
inc
inc
push
ja
sub
xchg
adc
push
jb
cli
sbb
sbb
pushf
sbb
sbb
(bad)
loopne
sar
sahf
push
add
hlt
imul
mov
in
xchg
icebp
js
jns
dec
cmp
pop
cmp
inc
pop
pop
ss
sbb
or
hlt
adc
jne
sbb
pop
and
sahf
xchg
xchg
ret
loope
mov
mov
cmps
sub
cmp
(bad)
pop
jecxz
stos
(bad)
setge
cli
push
lods
dec
sbb
xlat
xor
mov
adc
add
js
daa
div
inc
fld
iret
shl
(bad)
mov
aaa
pushf
ds
push
and
jne
jb
push
out
movs
and
or
(bad)
or
jne
rol
pop
call
cmc
and
rol
fdiv
shl
jne
cmp
sub
xchg
cmp
sub
pop
inc
mov
push
xchg
jmp
push
sahf
inc
or
bound
sub
pop
sbb
xchg
sbb
pop
xchg
ja
js
adc
xor
pop
sar
sub
mov
adc
mov
or
int3
popf
cmp
repnz
aaa
and
and
ficom
and
pop
rcl
mov
jnp
enter
loop
pop
fsub
hlt
cmp
jb
fmul
pushf
(bad)
or
dec
push
(bad)
jnp
push
dec
sbb
scas
sti
(bad)
rcr
jmp
and
dec
adc
sahf
(bad)
jmp
jl
imul
inc
(bad)
cmp
jmp
ret
daa
lock
test
pop
imul
add
popf
sbb
cmp
iret
xor
sbb
lock
mov
into
push
shl
ret
and
jo
js
(bad)
push
data16
pop
movs
add
test
mov
shr
hlt
test
sahf
clc
and
mov
jnp
jo
ret
fdivp
arpl
adc
dec
popf
fadd
adc
inc
dec
cmp
xchg
je
sbb
daa
js
add
cmp
pop
in
and
jb
neg
lods
sub
mov
inc
cmp
loope
jnp
sbb
add
mov
loopne
sbb
sbb
cmp
dec
stos
(bad)
sub
enter
fsub
(bad)
js
sahf
xlat
mov
cmp
mov
nop
adc
adc
shl
jno
stc
out
inc
jp
add
lock
dec
push
adc
pop
sub
mov
xchg
add
cmp
cdq
pop
leave
pop
push
daa
jb
sbb
cmp
sbb
or
cmp
or
ror
xchg
push
mov
xchg
dec
shl
loop
cmp
mov
sbb
cmp
daa
in
push
test
and
cmp
sar
or
adc
jns
frstor
mov
xor
mov
inc
test
(bad)
in
jmp
gs
out
pushf
xor
pop
into
nop
jnp
sub
jo
jp
lock
add
shl
aas
adc
pop
cmps
push
mov
ror
test
or
pop
sub
and
dec
pop
fbld
mov
mov
ror
leave
adc
ror
lock
imul
push
xchg
inc
adc
adc
dec
inc
sub
add
inc
repnz
test
pushf
sbb
cmc
mov
mov
mov
adc
mov
outs
and
mov
into
ret
mov
scas
add
and
lock
mov
in
mov
aad
push
jmp
sbb
or
push
stos
sub
push
push
jo
add
fnstsw
adc
imul
subps
xchg
mov
lahf
or
inc
sub
movs
add
xor
les
mov
push
repnz
popf
ret
addr16
xchg
mov
pop
mov
movs
rol
inc
call
add
mov
jo
ficomp
lea
jge
sbb
mov
ret
or
cmp
cwde
xor
sbb
sbb
add
shr
dec
jns
sbb
sbb
shl
inc
retf
fidiv
xchg
icebp
(bad)
fnstenv
test
mov
xchg
mov
sub
pminsw
cmp
or
push
daa
add
and
mov
ja
popa
cmp
inc
mov
loopne
retf
jmp
xor
mov
add
add
add
push
hlt
mov
sub
xor
icebp
and
mov
inc
mov
into
outs
repnz
or
mov
add
jbe
jns
adc
mov
sbb
cdq
ret
pop
ins
sbb
jo
and
out
out
ficomp
and
mov
inc
out
pop
cmp
mov
std
inc
cmp
sbb
and
icebp
add
jecxz
nop
sbb
or
into
pop
stos
lea
fwait
pop
fcmovne
retf
or
jle
ret
push
dec
ins
jmp
sbb
stc
popa
popa
pusha
gs
xlat
rcr
adc
or
and
and
sbb
inc
sub
movs
xchg
aam
arpl
jmp
rcr
rcl
xor
int3
sub
dec
push
mov
jecxz
jae
xor
push
mov
repz
push
test
inc
ror
pop
arpl
mov
add
jnp
sbb
cmp
lods
push
das
les
in
mov
or
loop
inc
fstp
cmp
mov
fs
xchg
aaa
jl
das
adc
push
rol
xchg
test
xchg
push
or
ds
bound
add
imul
inc
shr
mov
xor
pop
leave
sar
aaa
out
xlat
add
add
adc
cmp
pop
mov
sub
lea
rol
outs
mov
add
dec
outs
leave
sbb
jb
sub
add
xor
arpl
push
xor
mov
xchg
into
add
jno
mov
sbb
cmp
mov
ins
jecxz
mov
pop
adc
addr16
test
ins
scas
daa
add
mov
xchg
cmp
loope
mov
out
add
jbe
or
mov
inc
pop
or
or
cmc
sbb
sub
mov
jnp
lock
test
sub
mov
mov
ret
mov
js
xor
sbb
pop
and
cmp
xchg
cld
(bad)
rcl
cmps
cmp
(bad)
xor
imul
jo
jb
sar
mov
(bad)
lock
fwait
cmp
xchg
das
fs
push
or
adc
fiadd
dec
lds
sbb
cmp
dec
ds
movs
cli
lods
add
add
inc
push
sar
outs
addr16
cmp
out
test
in
adc
ret
sbb
and
jmp
pop
cmp
daa
jae
pop
and
nop
cmp
out
push
(bad)
ror
lock
mov
daa
adc
pop
dec
add
fsubr
or
mov
ins
cmc
adc
and
lods
jo
mov
xor
sub
bound
shl
mov
loopne
sbb
add
rol
lock
sub
sbb
loop
mov
fstp
push
mov
test
movs
mov
xor
rcl
hlt
or
xor
outs
popf
ds
les
imul
inc
jmp
xchg
test
mov
or
js
dec
repnz
repz
sub
popa
(bad)
out
rcl
les
fs
loopne
push
and
sbb
out
js
scas
adc
aaa
or
rcr
cmp
pop
inc
pop
push
push
loopne
mov
cmp
mov
pop
enter
inc
fadd
and
inc
(bad)
nop
fcom
inc
test
sbb
jl
cmp
add
outs
loopne
js
loopne
jmp
jo
sub
test
or
rcl
cmp
pop
je
jno
jl
out
adc
or
call
adc
add
mov
dec
scas
sbb
stos
mov
dec
cmp
lea
sbb
or
jne
ret
rcr
mov
fmul
xchg
inc
iret
pushf
ds
adc
sub
enter
xor
out
loope
xor
lods
je
or
pop
add
mov
lds
xor
mov
lea
aaa
les
ss
adc
ss
mov
shr
jge
or
mov
ja
leave
out
or
mov
in
jo
mov
add
xchg
add
dec
arpl
add
cmp
cmps
pop
imul
nop
or
test
(bad)
and
cdq
call
sti
sub
pop
std
fnstenv
push
js
enter
and
mov
and
mov
neg
lods
push
and
neg
xchg
lahf
(bad)
jns
pop
dec
(bad)
sbb
dec
in
and
mov
pop
ins
jmp
xchg
aam
popa
inc
push
cmp
ret
cmp
xor
lock
push
sub
sub
js
mov
or
aam
jge
mov
shl
test
rol
adc
push
and
lea
imul
inc
xchg
pop
pop
stos
jnp
cmp
psubsw
nop
out
push
or
leave
cmp
arpl
pop
mov
adc
pop
repz
xor
pop
retf
imul
xor
xor
push
cwde
mov
dec
clc
xchg
sub
rcl
enter
addr16
adc
and
pop
pop
add
inc
and
retf
pop
dec
push
xchg
pop
retf
(bad)
pusha
and
int3
ret
mov
xchg
jb
pop
xor
and
cmp
jmp
fadd
sub
addr16
in
mov
dec
mov
sahf
xchg
(bad)
jns
adc
and
ds
sub
jno
dec
jmp
les
test
xchg
pusha
pop
lock
mov
mov
jno
mov
lock
mov
loope
mov
sti
out
out
(bad)
or
push
pop
iret
push
or
push
movs
push
mov
dec
push
xchg
xor
test
mov
das
sub
mov
add
jmp
jo
sbb
lods
js
pop
adc
retf
out
dec
pop
lock
jno
adc
ds
sub
popa
rol
dec
nop
lds
(bad)
sub
popa
lods
xor
test
ror
inc
cmp
leave
push
add
daa
or
lods
jo
xchg
test
test
test
pusha
inc
adc
sbb
in
imul
jl
inc
(bad)
jmp
bound
or
or
es
loopne
mov
js
sub
xlat
cld
xor
lock
cmp
jmp
loopne
mov
bound
dec
stos
pop
adc
adc
cmovo
imul
adc
adc
dec
jns
lock
arpl
cs
mov
push
xchg
dec
mov
jo
jmp
adc
lock
pop
mov
lods
cmp
inc
adc
pop
cmp
dec
cmc
sub
mov
dec
pop
push
scas
mov
or
xchg
push
pop
inc
in
adc
dec
jne
xchg
add
lock
(bad)
retf
jnp
sahf
dec
popf
nop
jnp
push
xor
sbb
add
add
out
movs
push
ja
rcr
jge
xchg
and
in
and
adc
xor
jo
cmp
add
jns
out
xor
and
adc
adc
int
sbb
inc
out
xchg
add
aaa
adc
cld
inc
ja
call
cmp
mov
dec
out
movs
pusha
push
add
retf
push
test
xchg
or
pop
adc
pop
dec
mov
or
and
cmps
mov
dec
push
aaa
adc
cmps
pusha
je
jno
jmp
sub
inc
jl
or
or
mov
push
ins
sub
cmp
shl
lods
into
int
jne
sub
(bad)
popa
dec
mov
add
inc
push
cmp
test
retf
jne
xor
xor
push
sbb
or
push
ret
and
(bad)
(bad)
push
cli
int3
mov
sub
test
movs
shl
push
call
add
bound
xchg
(bad)
dec
dec
shl
mov
(bad)
cmps
fcomp
and
rcl
stos
jae
fiadd
or
add
pop
add
lods
dec
pop
jb
jne
pop
and
ins
or
xor
stos
push
xchg
cmp
icebp
pop
add
jecxz
add
pop
add
imul
repnz
inc
add
jp
cmp
jmp
xchg
test
scas
xchg
jo
loope
imul
clc
shl
sbb
mov
pop
or
mov
add
jb
ror
icebp
push
or
fmul
lock
jo
xchg
pop
or
mov
iret
jmp
jno
cmp
mov
popa
stos
sbb
das
outs
sbb
push
sub
push
ret
aam
jmp
push
cmp
sbb
mov
sbb
push
jmp
pop
pusha
cmps
test
pop
pop
add
ror
js
xchg
or
fs
add
dec
cmp
addr16
xchg
cmp
push
push
sbb
sub
xor
sub
jp
out
call
aaa
cmps
push
xchg
mov
retf
(bad)
cwde
mov
sbb
jnp
add
das
shl
out
sub
and
inc
sbb
pop
dec
or
stc
shl
loop
xor
add
das
enter
lds
psrad
mov
in
jb
(bad)
or
sub
cmps
sub
scas
fwait
cmp
push
aaa
cmp
jae
mov
ins
add
xlat
dec
fdiv
cmp
sbb
add
push
mov
ja
xchg
adc
rcl
daa
pop
hlt
sbb
xor
or
daa
jbe
pop
add
xor
xlat
lods
test
mov
mov
pushf
sbb
xchg
cmp
push
mov
cmp
ja
(bad)
shl
or
dec
xor
inc
loop
push
jb
pusha
lock
fidivr
pusha
mov
xchg
pop
xchg
inc
inc
push
add
into
cmp
fldcw
into
pop
cmp
cmp
arpl
and
and
mov
sub
aad
sbb
or
mov
jne
pop
cld
cmp
nop
gs
lods
dec
jno
ror
inc
pop
xchg
das
adc
imul
or
fisub
fnstenv
(bad)
jmp
lock
jb
jmp
ficomp
add
and
jb
inc
mov
rcr
dec
jne
mov
or
xchg
or
fsubr
js
sbb
inc
call
add
mov
movs
addr16
imul
pop
add
fisttp
inc
mov
xor
jne
sub
movs
jne
and
adc
pusha
fs
adc
mov
mov
jmp
jo
(bad)
lahf
push
cmp
retf
test
and
mov
jne
rol
pushf
fs
sbb
mov
xor
gs
mov
sbb
cmp
sbb
icebp
push
addr16
movs
add
(bad)
cld
pop
xchg
(bad)
sbb
pusha
pop
xchg
pusha
mov
and
push
test
popf
jne
cli
fdivp
in
ret
or
mov
or
outs
(bad)
adc
add
push
adc
icebp
or
mov
call
call
push
(bad)
shr
loopne
push
pop
sbb
in
jne
cmp
mov
or
jmp
xchg
ins
dec
icebp
jle
mov
pushf
sub
cmps
xchg
out
dec
inc
xlat
xchg
xor
les
fld
cmps
test
retf
push
sub
add
es
xor
mov
loopne
pop
call
mov
sar
adc
push
xchg
and
sub
cmp
sbb
push
fwait
sbb
test
and
out
push
push
punpckhbw
cmp
(bad)
ins
sbb
sub
jle
inc
sub
out
and
or
fidiv
popa
icebp
add
adc
and
repnz
and
sbb
mov
dec
cmp
push
cmp
mov
xchg
jo
mov
mov
pop
push
or
jo
jecxz
dec
pop
sar
add
mov
repnz
jno
cmps
lods
inc
cmp
pop
clc
lds
sbb
cmp
or
icebp
push
xchg
add
jo
test
in
inc
mulps
clc
xchg
nop
push
cmp
xchg
dec
cmp
pop
jno
xchg
or
add
daa
jmp
ret
enter
fild
dec
mov
clc
lds
xchg
sbb
sub
sbb
push
add
imul
popa
stc
pop
pop
jmp
fs
rcl
sahf
int3
leave
test
out
sub
movs
push
cmp
mov
rcr
lods
js
push
push
rcr
(bad)
outs
mov
mov
das
ret
pop
imul
add
popa
mov
xor
daa
push
rcr
lods
inc
xor
sbb
push
sub
inc
mov
xchg
pop
fld
in
pop
xchg
cmp
jmp
push
adc
ins
pushf
popa
out
repnz
inc
std
pop
or
ret
repz
stc
sbb
mov
add
mov
add
sub
sti
jo
popf
mov
sub
sub
pusha
dec
jb
sub
into
imul
rcl
mov
shr
inc
fstp
jge
sub
jle
add
and
fdivr
xchg
and
or
cmovnp
rcl
adc
ds
and
mov
icebp
adc
retf
push
and
daa
ds
ds
sub
(bad)
and
dec
push
(bad)
or
call
not
or
push
sub
xchg
lldt
jp
clc
inc
or
inc
xchg
xchg
sar
xchg
add
cmp
sbb
ret
add
clc
sub
cdq
mov
add
sub
xchg
mov
aam
or
sbb
aam
adc
lods
xchg
push
dec
push
mov
(bad)
and
call
js
movs
sti
inc
or
mov
xchg
dec
xchg
mov
ja
mov
sahf
mov
inc
scas
inc
sbb
push
jmp
xor
push
stc
int
leave
inc
cmp
jns
pop
psraw
hlt
push
sbb
add
push
inc
cdq
sbb
ret
cmp
loope
jle
push
rcr
outs
mov
pop
or
add
inc
sbb
inc
sbb
dec
sbb
imul
sbb
xchg
retf
xchg
loope
sbb
repnz
adc
ret
aad
bnd
adc
mov
sbb
push
ss
pop
je
sbb
dec
loope
ret
cld
popa
xchg
sar
leave
xor
xor
pop
sbb
adc
sub
and
imul
fs
mov
in
adc
sbb
add
xor
imul
inc
rcl
test
adc
clc
xchg
mov
push
ffreep
add
push
(bad)
cdq
mov
ins
lods
jno
and
popa
in
sub
xchg
xchg
test
push
lahf
sbb
cld
pusha
rcl
jo
iret
add
js
adc
pop
nop
xchg
aaa
loopne
(bad)
addr16
inc
loope
(bad)
sti
xchg
cmp
or
push
out
inc
pop
jnp
add
retf
cmp
mov
or
mov
or
les
mov
lahf
adc
jl
mov
int3
jecxz
and
arpl
inc
sbb
and
mov
or
jae
pop
fisttp
fistp
popa
and
mov
sbb
hlt
aaa
jecxz
mov
mov
sub
xor
cmp
and
xor
loop
mov
fdiv
jecxz
push
pop
pop
jns
mov
jp
out
sar
push
movs
test
je
dec
dec
xor
xor
loop
push
ret
aas
jbe
imul
inc
adc
mov
push
or
adc
(bad)
sbb
and
addr16
test
into
push
pop
jecxz
inc
add
xchg
sub
lock
aaa
sahf
dec
ror
call
and
ror
mov
xlat
adc
pop
cmps
add
xor
sub
push
out
outs
pop
sub
inc
cmp
ins
and
rcr
or
inc
call
hlt
add
arpl
clc
xor
ret
push
into
imul
lock
add
fsubr
lods
or
push
sbb
jae
inc
inc
wbinvd
inc
cmp
icebp
mov
rcl
add
rol
enter
adc
(bad)
movs
hlt
mov
or
mov
mov
mov
sub
cmp
jmp
aad
lods
lods
dec
sbb
call
and
(bad)
dec
mov
and
dec
rcr
or
adc
addr16
add
aas
jne
xchg
in
jmp
rcr
gs
push
pop
adc
ret
xchg
and
loop
and
dec
or
movs
adc
pushw
pop
pop
jmp
add
out
lock
loop
je
imul
bnd
gs
dec
cmp
xor
mov
xchg
sbb
jmp
dec
das
jl
ss
mov
iret
aas
or
adc
add
mov
dec
and
iret
test
xor
call
xor
(bad)
sbb
push
mov
and
mov
popf
pop
jecxz
les
adc
jp
into
cmp
inc
jns
sub
mov
mov
cmp
je
push
loope
jl
mov
and
add
sbb
js
sbb
jo
xlat
test
add
gs
int
inc
jne
xchg
jecxz
fst
jo
sti
mov
pop
jmp
mov
and
test
dec
mov
xchg
or
sbb
aad
push
nop
add
aaa
dec
hlt
jbe
xor
or
add
inc
shl
loopne
inc
retf
jno
retf
xchg
cmps
ja
fsub
jmp
mov
aam
add
mov
mov
jecxz
add
popa
sub
xlat
adc
dec
cmp
sar
jp
or
and
dec
cmp
(bad)
loopne
dec
sbb
idiv
test
ret
gs
dec
cmp
mov
pop
ret
sbb
jno
dec
retf
jmp
sbb
jle
cmp
fs
adc
(bad)
and
loope
jmp
xor
enter
dec
jl
pop
cmp
push
jo
(bad)
hlt
sub
fwait
test
(bad)
mov
pushf
push
ror
inc
(bad)
mov
rcr
int
inc
inc
and
or
(bad)
nop
xchg
dec
sbb
popf
iret
lock
pop
mov
push
fwait
adc
(bad)
mov
pusha
outs
lods
sbb
inc
jmp
imul
sbb
ret
push
mov
outs
sub
jo
mov
lea
jmp
sbb
call
test
sar
popa
enter
push
cwde
add
jmp
add
test
pop
pop
cmp
adc
dec
cmp
(bad)
retf
ror
fucomip
lods
ins
outs
sub
or
mov
sbb
pop
aaa
pusha
ss
xchg
mov
shr
mov
inc
push
iret
repnz
loope
rcr
nop
in
sbb
gs
adc
lods
add
shl
jae
cmc
ret
iret
loopne
retf
xchg
lods
sbb
dec
pop
sbb
cwde
js
retf
and
daa
in
push
add
test
inc
ja
push
mov
jmp
jge
and
pushf
loope
movntq
dec
pop
add
mov
test
adc
adc
enter
loope
aam
imul
scas
inc
gs
loopne
loope
push
mul
or
jmp
add
sbb
add
or
and
jg
pop
stos
ret
push
add
sbb
fadd
bound
cdq
mov
fisubr
add
ficomp
adc
jnp
cmps
nop
cld
mov
aaa
and
outs
xchg
xchg
aad
retf
add
mov
jo
shr
jmp
lea
sub
addps
pop
push
jmp
xor
xchg
cmps
or
inc
daa
push
mov
or
lock
and
xchg
mov
xchg
cmp
sub
mov
lods
xor
retf
xchg
jnp
ret
(bad)
test
inc
fstp
xor
pushf
or
mov
lahf
aam
pop
or
out
mov
bt
dec
add
xchg
or
scas
mov
mov
out
xchg
test
jge
mov
add
(bad)
jmp
inc
gs
fdivr
xor
cmp
and
lods
dec
ror
push
out
sbb
in
les
xchg
loop
test
fs
pop
int3
sub
or
movs
xchg
mov
pusha
or
mov
shl
sbb
add
bound
push
cmp
cmp
ror
pop
pop
sub
in
add
pop
push
test
and
(bad)
mov
adc
sbb
daa
pusha
pusha
fs
adc
jno
and
inc
pop
and
mov
jmp
shl
xor
out
popa
dec
outs
or
or
jmp
fadd
push
rcr
add
or
jae
mov
imul
and
shr
sbb
scas
sbb
je
retf
inc
or
xchg
sbb
push
push
outs
es
cmp
sub
mov
xor
xchg
fadd
loopne
js
fnstsw
lods
or
mov
sbb
cmp
js
sbb
pop
test
sbb
mov
xor
cmp
pop
(bad)
jbe
je
out
inc
or
sbb
cmp
xlat
xchg
(bad)
stc
into
pop
jne
xchg
aas
ins
cld
fmul
ret
std
adc
dec
das
pop
sbb
and
inc
or
repz
loopne
ret
scas
pusha
and
loop
xor
adc
xchg
sub
cmp
loope
ret
popa
mov
retf
xor
jmp
sbb
sub
push
push
or
pop
push
sahf
movs
sub
movs
clc
adc
imul
push
cmc
(bad)
pop
push
int
mov
sbb
push
mov
sar
and
cs
fnstcw
imul
pop
rcl
and
jb
out
sbb
and
push
xor
cli
cmp
push
dec
pop
stc
push
mov
mov
cwde
push
xchg
push
dec
xor
arpl
call
in
push
js
xlat
sub
in
pusha
jno
mov
pop
or
pusha
cld
mov
rol
aas
inc
pop
push
inc
xor
inc
ja
jne
movs
or
into
push
pop
jle
add
cmc
push
hlt
call
fidivr
cmps
mov
or
cmps
cs
mov
xchg
cmp
cmp
lock
or
cmp
jecxz
inc
les
daa
jecxz
es
loopne
pop
or
cs
clts
adc
shr
dec
aam
cmp
data16
loopne
add
cmp
push
ins
xchg
gs
pop
fs
loope
fst
push
xchg
enter
or
dec
ret
dec
mov
mov
cli
mov
test
jmp
add
or
adc
xor
pushf
jae
push
xor
dec
inc
leave
mov
push
(bad)
xor
nop
or
pop
(bad)
(bad)
sbb
cmp
and
call
loopne
(bad)
jmp
and
pop
fcom
outs
or
sub
mov
cwde
add
or
inc
sbb
add
in
ins
push
lahf
xchg
sbb
and
push
pop
adc
xor
xor
adc
shl
dec
push
retf
cmp
pop
int3
lds
out
test
fisttp
pop
into
add
cld
and
bound
mov
daa
bound
in
movs
fstp
inc
add
psadbw
sub
sbb
xchg
fnstsw
or
xchg
mov
cmp
mov
dec
jb
mov
cli
aam
nop
and
dec
je
sub
or
(bad)
fcom
retf
push
ret
movs
push
xchg
dec
pop
ret
adc
aas
xchg
xchg
loopne
sbb
mov
dec
pop
(bad)
adc
jp
ja
jbe
xor
add
mov
scas
mov
jecxz
jl
rcr
or
sbb
pop
clc
mov
mov
jno
popa
jns
pusha
imul
jmp
cmp
cmc
sub
fistp
or
aam
hlt
and
loope
push
call
enter
xor
xor
fmul
imul
and
and
adc
int3
ins
das
dec
scas
and
enter
mov
xchg
test
xchg
sbb
scas
sub
call
lods
pop
mov
mov
cmc
out
loopne
(bad)
aad
lods
je
sbb
loope
imul
sbb
mov
xchg
mov
cmp
xchg
xor
xor
popa
pusha
test
test
popf
mov
lock
xlat
leave
in
retf
mov
inc
sti
xor
sub
outs
iret
inc
bound
enter
mov
inc
pop
cmp
or
dec
es
xchg
test
or
imul
adc
xchg
js
mov
dec
cmp
mov
ds
sbb
jno
into
mov
popa
inc
fdiv
pushf
sbb
push
jo
pusha
inc
mov
mov
rcl
es
loope
rol
or
pop
sar
mov
dec
sub
test
test
das
jae
or
jmp
mov
pusha
xchg
rcr
sbb
enter
inc
add
aam
add
ins
cmp
push
xchg
or
adc
xchg
adc
movs
sbb
add
int3
xor
sbb
cmp
pushf
xchg
mov
fs
sub
ret
aaa
xchg
adc
push
sub
jo
test
(bad)
loopne
(bad)
inc
mov
ret
loopne
push
movs
js
repnz
mov
movs
xor
gs
shr
or
shr
call
movs
xlat
test
xchg
pusha
sbb
ja
mov
dec
call
cmp
add
inc
and
mov
pop
loopne
adc
loope
adc
xor
stos
xor
mov
lock
inc
xor
rcr
hlt
stos
sub
out
xor
ins
sub
inc
loop
inc
add
pop
loopne
into
in
outs
add
add
or
push
shrd
jbe
pop
dec
cmp
outs
pop
ret
adc
cs
scas
cmp
pop
xchg
(bad)
xor
rcr
cmp
pop
inc
mov
push
add
ins
lods
xchg
xor
or
xchg
popa
xor
arpl
xchg
xor
dec
or
cmp
push
or
int3
je
test
lock
and
lods
inc
and
lock
pop
push
push
xlat
test
dec
out
cmp
add
out
outs
sub
icebp
nop
test
and
retf
loopne
ret
je
stc
shl
jns
data16
mov
popa
push
mov
cli
ficomp
ret
jl
add
mov
mov
xchg
jns
push
rol
hlt
aam
sub
xchg
retf
fwait
mov
pop
daa
cmp
icebp
or
ret
sub
add
(bad)
xchg
je
sub
sub
jo
ret
in
or
mov
add
loopne
inc
rcl
cmp
popa
inc
enter
push
out
jns
push
sete
xchg
pop
(bad)
pop
and
and
dec
xor
not
aad
ror
pop
jmp
movs
adc
ja
cmps
(bad)
push
cmps
lods
jmp
rcr
xor
push
mov
mov
pop
(bad)
mov
pop
loopne
aad
push
dec
pop
dec
add
push
ins
add
push
xor
popa
inc
sahf
cli
xchg
jne
mov
add
jno
dec
loopne
adc
and
push
mov
add
retf
in
dec
das
mov
fcomp
(bad)
pop
jno
cmp
jmp
cmp
nop
(bad)
loop
enter
ret
and
scas
rol
fs
inc
inc
add
cmp
leave
sub
popa
inc
sbb
dec
out
dec
int
out
lock
out
push
jns
jecxz
inc
loope
enter
out
mov
out
mov
mov
ret
jno
mov
rol
dec
xor
push
xlat
call
movs
mov
push
pop
and
enter
repz
mov
pop
rol
mov
jb
push
mov
pop
sar
mov
xlat
inc
arpl
lea
mov
call
imul
sbb
mov
inc
out
jbe
mov
or
dec
lock
outs
retf
in
cmp
jmp
add
repnz
or
or
cld
pop
cmp
cmp
imul
iret
(bad)
dec
and
inc
jnp
push
call
or
lods
add
mov
aam
push
(bad)
cmp
xchg
pop
ja
mov
(bad)
mov
cmc
mov
lods
xor
xor
xor
sub
leave
mov
imul
test
addr16
scas
dec
arpl
mov
ror
les
mov
sahf
inc
jmp
popa
add
add
repz
cmp
pushf
adc
ins
aaa
xor
outs
jmp
stos
ret
sbb
pop
je
pop
je
retf
jno
or
push
and
mov
repz
scas
xlat
repnz
icebp
mov
and
fwait
mov
sub
outs
loop
dec
push
cmp
sbb
mov
push
aam
jo
push
and
mov
mov
loopne
and
imul
(bad)
mov
sbb
push
test
add
cmp
lock
cmp
sub
mov
mov
mov
or
lods
and
jg
ret
or
push
cmp
cmp
push
loopne
(bad)
mov
inc
bound
gs
mov
mov
push
adc
dec
pusha
ja
rcl
pop
mov
frstor
dec
push
xchg
inc
les
add
inc
ret
add
dec
lds
and
shl
shl
cmps
sub
les
adc
and
xor
sbb
pop
ficomp
mov
rcr
ror
pushf
push
addr16
pop
push
lea
cmp
ja
test
les
mov
lea
add
js
jmp
push
cmp
fcomp
jns
xchg
xor
or
push
xlat
(bad)
dec
js
xor
push
mulps
mov
and
fcom
mov
ret
sahf
xor
dec
stc
mov
sub
aad
inc
xor
jo
in
dec
and
xor
push
pop
fmul
scas
aaa
outs
add
mov
cmp
sbb
fwait
inc
call
dec
inc
adc
arpl
scas
movs
sub
addr16
mov
pushf
mov
sub
sbb
jb
leave
les
pop
nop
jecxz
xchg
(bad)
pop
call
cwde
pop
leave
mov
and
int3
mov
mov
mov
retf
adc
xor
jl
rcr
mov
jbe
mov
dec
shl
call
push
(bad)
in
xor
loop
jl
iret
loopne
cmp
push
inc
cmp
pop
loop
inc
popa
cwde
mov
sub
or
mov
ret
cmp
dec
and
add
xor
xor
fidiv
jl
test
xchg
xchg
push
dec
cli
mov
(bad)
xlat
pop
adc
div
pop
mov
add
inc
cmp
in
ret
or
dec
movs
lahf
push
jnp
cmp
rol
jmp
add
xor
icebp
jb
sbb
shl
lea
(bad)
xor
popf
sub
xor
shr
vmovups
sbb
and
sub
mov
push
sbb
popa
nop
add
mov
jp
adc
mov
adc
rol
lods
inc
ds
or
xchg
loopne
lea
in
mov
test
inc
add
xor
neg
and
out
jmp
xchg
cmp
sub
mov
aam
out
rcr
not
push
lock
ror
aam
jns
and
inc
cmp
repnz
pop
ror
xor
mov
xor
dec
dec
sbb
and
loopne
or
xchg
loope
or
sbb
loopne
push
jg
cmp
xchg
inc
add
pop
mov
adc
mov
(bad)
fstp
xor
js
or
add
ror
mov
sbb
xor
je
shl
push
scas
mov
mov
mov
pop
sbb
adc
jl
sub
cmp
dec
lea
loopne
rcl
mov
or
xor
mov
sub
addr16
movs
add
ins
rcr
aad
das
mov
cmps
mov
aaa
sbb
iret
xchg
das
or
pop
jbe
rcr
cmc
sbb
or
dec
or
push
push
xchg
test
enter
imul
adc
(bad)
push
sbb
inc
ficomp
stos
lea
add
pop
push
mov
pop
pop
sahf
fild
sub
pushf
out
xor
ds
popf
xor
cmp
push
scas
(bad)
xor
sub
mov
in
mov
add
xor
pop
int3
push
xor
sub
mov
adc
cmps
or
pop
sahf
nop
or
(bad)
jnp
cmp
adc
dec
or
ret
dec
repnz
mov
test
inc
jb
mov
cmp
ins
loop
pop
scas
fst
out
inc
aas
xchg
xchg
sub
xchg
(bad)
jp
xor
fucom
push
into
popa
sbb
fsub
adc
and
(bad)
sbb
inc
cmp
adc
gs
push
mov
dec
add
or
(bad)
movs
add
or
push
icebp
nop
repnz
push
push
mov
push
loop
xor
add
inc
test
add
push
sbb
pop
out
mov
xchg
lds
outs
mov
(bad)
cs
scas
sub
or
mov
ret
fnstenv
xchg
js
aaa
and
adc
arpl
ret
add
sub
imul
mov
lea
in
adc
repz
rcl
loopne
jp
daa
sbb
outs
data16
mov
jmp
xchg
pmaxub
daa
add
add
cmp
sbb
sub
jmp
mov
call
js
push
push
mov
pushf
fst
mov
jle
xor
data16
dec
pop
push
xchg
mov
lods
dec
pushf
(bad)
xor
sbb
pop
add
lock
stos
mov
or
xchg
add
nop
jmp
les
popf
je
add
and
int
adc
xor
(bad)
pop
mov
je
sbb
popf
popf
or
mov
ret
sbb
hlt
into
das
or
(bad)
fsubr
mov
pusha
and
mov
cmps
xor
jne
iret
add
das
leave
(bad)
or
bound
rcl
sub
xchg
xchg
jo
jo
inc
ficomp
add
lock
loope
mov
lock
xchg
loop
pcmpgtb
pop
adc
aas
push
push
test
mov
jecxz
lods
pop
push
add
outs
mov
dec
(bad)
daa
mov
mov
int3
adc
bound
mov
jno
jae
jno
pop
cmp
jp
mov
popa
imul
mov
and
sub
pcmpeqd
pop
fwait
pop
sbb
call
mov
aaa
adc
xor
mov
xchg
ret
push
daa
dec
les
sub
mov
jb
adc
daa
push
aad
jbe
sbb
ss
xor
add
sub
cmp
sbb
dec
add
pop
and
enter
test
je
lods
xchg
pop
adc
sahf
loopne
popf
aad
jg
mov
or
jae
daa
jnp
js
pop
cld
js
cmp
mov
add
outs
mov
lods
cmp
inc
out
add
add
repz
repnz
cmp
shl
add
retf
pushf
mov
ss
mov
or
popa
and
jmp
jne
hlt
inc
push
ja
dec
pop
add
movs
addr16
push
js
retf
mov
mov
rcl
ja
imul
pushf
lds
fs
mov
ret
add
js
or
rcr
jle
push
mov
(bad)
mov
sbb
mov
js
jo
or
pop
hlt
cmc
loope
fs
popf
(bad)
adc
sbb
fmul
or
fcomp
gs
push
test
inc
xchg
in
pop
add
add
pop
lods
aam
mov
add
mov
hlt
mov
jo
retf
sar
and
into
les
pop
sahf
mov
cld
pop
pop
out
push
dec
and
out
push
cs
sub
out
test
or
inc
lods
cmp
jmp
sbb
mov
adc
pop
dec
sub
out
js
dec
mov
test
cmps
pusha
daa
sbb
leave
ret
fadd
xor
mov
cmp
loopne
add
add
add
addr16
pop
jae
adc
sbb
sbb
or
pop
rcr
enter
sbb
imul
aaa
and
push
lods
je
cmps
popa
push
mov
sbb
jb
mov
inc
xor
add
xor
push
cmc
fs
or
mov
pop
pop
sbb
aaa
jae
mov
cmp
pop
out
js
cmp
outs
mov
and
je
mov
inc
loop
and
fcmovnu
add
imul
cmp
rcr
add
loope
imul
jmp
add
arpl
shr
or
test
jne
xlat
stos
ret
mov
inc
or
loop
rol
and
sbb
sub
imul
or
call
jno
aas
mov
inc
cmp
lods
cmp
cmc
pop
clc
cdq
cli
mov
arpl
lock
div
cmp
fldenv
add
pop
gs
xchg
mov
push
and
xchg
lods
inc
add
and
mov
xor
dec
pop
mov
cmps
cmp
cmp
xor
adc
ss
mov
ins
xchg
les
cmp
js
cmp
xchg
add
cmps
sahf
fidiv
xlat
dec
mov
or
jmp
imul
mov
xor
xor
pusha
pushf
sbb
mov
sub
push
cmp
cmp
jle
add
lods
sub
jno
mov
out
add
mov
jne
inc
test
movs
mov
xor
mov
dec
sbb
test
sbb
in
add
adc
add
pop
retf
sbb
nop
ins
mov
inc
and
cmp
inc
ja
cs
mov
adc
sub
and
cmp
nop
adc
sub
push
mov
cmps
loopne
pushf
and
pop
xchg
mov
icebp
jge
ret
xor
mov
aas
xor
dec
stos
gs
adc
sub
mov
aad
adc
and
enter
fidivr
inc
sbb
xor
sbb
jb
pop
mov
shl
sub
xchg
push
jmp
je
push
push
adc
mov
xchg
out
sub
sub
(bad)
aad
bound
dec
inc
add
push
test
pop
jp
pop
popa
(bad)
add
xchg
mov
mov
imul
pop
ret
add
ror
enter
push
jecxz
mov
das
jp
or
cmp
jmp
jge
pop
inc
setbe
sti
cmp
test
dec
outs
test
xor
(bad)
mov
nop
test
fsub
repnz
(bad)
sbb
inc
jae
sahf
ins
fmul
adc
shl
sub
pushf
scas
mov
sub
mov
out
and
dec
sbb
and
addr16
pop
push
stos
sbb
xchg
inc
jp
pop
add
xor
movs
pop
push
sub
(bad)
mov
pop
arpl
test
icebp
jne
ins
enter
or
(bad)
loopne
inc
adc
iret
int3
jmp
adc
cmp
mov
shl
and
ins
fcomp
xchg
push
nop
push
icebp
xor
js
dec
mov
jns
sub
fmul
add
add
jno
pusha
mov
jns
mov
sub
jo
jecxz
call
aaa
mov
mov
mov
addr16
inc
sub
jb
mov
and
cmp
enter
push
xchg
ror
out
inc
rol
aad
mov
xchg
mov
dec
out
scas
pop
mov
(bad)
cmp
xchg
call
or
in
dec
cld
fiadd
push
les
xor
fild
adc
mov
(bad)
mov
sbb
imul
(bad)
ror
cmps
in
jnp
jo
cmp
and
push
mov
push
or
xchg
sub
leave
inc
cmp
mov
ror
add
(bad)
js
call
clc
xchg
adc
mov
sub
stos
sbb
scas
push
xor
mov
aaa
std
push
clc
and
adc
jge
stos
(bad)
sbb
jecxz
(bad)
out
add
sbb
sub
mov
faddp
dec
inc
out
into
add
and
test
enter
mov
or
sbb
mov
inc
cmp
xchg
into
or
repnz
iret
cmps
clc
adc
jo
add
sub
cs
in
dec
ror
xor
rol
ins
aas
xchg
in
add
cmp
xchg
in
fcomp
push
jl
add
rcr
mov
or
add
add
pop
test
(bad)
hlt
addr16
ficomp
loope
scas
into
fild
pushf
mov
sub
dec
sbb
stos
lods
or
dec
xchg
xor
jmp
retf
mov
cmps
repz
shl
les
or
and
int
in
hlt
push
ds
fcomp
add
pop
cmp
sub
addr16
adc
out
icebp
jb
jb
jo
mov
repnz
popa
data16
mov
sub
inc
xlat
test
test
js
and
adc
pusha
xor
xchg
pop
add
dec
lock
jl
cmp
out
mov
add
mov
xlat
loope
leave
add
jno
enter
enter
xor
fld
sbb
mov
inc
mov
jp
push
push
(bad)
jo
jmp
fidivr
dec
ins
js
aam
imul
or
pop
inc
inc
add
sbb
xor
out
pusha
inc
mov
jmp
retf
in
adc
xor
and
mov
test
fdiv
imul
daa
fbstp
sbb
pop
inc
push
mov
mov
xor
mov
cmp
je
js
ret
add
push
adc
lods
test
add
inc
push
pop
sahf
xor
outs
shl
mov
repz
(bad)
adc
loopne
push
(bad)
xchg
sbb
int3
sbb
test
or
rcr
(bad)
fisubr
shl
retf
xchg
icebp
mov
scas
add
(bad)
sbb
jnp
mov
sahf
xlat
jl
rol
mov
pusha
mov
js
shr
js
ins
sub
adc
inc
arpl
or
mov
cmp
inc
daa
or
or
rcl
pushf
xlat
pop
mov
repz
adc
movs
lods
(bad)
dec
add
mov
lock
dec
arpl
jmp
repnz
jne
pop
pop
mov
sbb
loop
test
lahf
imul
add
xchg
pushf
and
ja
sbb
push
cmp
add
jp
popa
leave
rcl
jo
push
xor
adc
add
adc
sub
pusha
out
jmp
push
jmp
mov
(bad)
popa
hlt
retf
add
scas
movs
xor
lock
push
in
jcxz
cmp
add
sti
aad
ror
iret
in
sub
pop
addr16
xchg
daa
je
pushfw
cmp
jmp
push
jae
mov
jns
jg
inc
outs
cmp
push
shl
and
sbb
jne
sub
push
ret
xchg
test
aaa
add
cs
pushf
ret
stos
and
mov
loop
xlat
add
loopne
xchg
out
sbb
add
not
loope
lods
(bad)
(bad)
js
ret
jecxz
popa
sar
cli
and
cmp
mov
xchg
rol
adc
ds
ret
popf
(bad)
sub
push
ins
cld
xchg
movs
pop
arpl
xchg
retf
lock
nop
(bad)
xor
sbb
pop
xlat
cmp
ja
cmp
push
push
inc
push
ror
mov
pop
test
add
sar
mov
fsub
sbb
(bad)
sub
fsub
add
repz
movs
xchg
sub
push
icebp
add
sbb
add
sub
sbb
push
lods
(bad)
or
cmp
cli
xor
aad
mov
out
sub
add
aad
into
dec
test
call
lods
add
adc
push
clc
dec
pop
imul
push
ror
lea
aas
adc
or
pop
xchg
scas
sbb
sahf
fld
jae
jecxz
xor
cs
dec
stos
cmp
jmp
mov
add
cmp
and
inc
xor
(bad)
in
inc
aad
or
loopne
cmc
mov
(bad)
xchg
push
cmp
xor
ret
and
add
pop
jecxz
call
je
jb
push
pop
das
xchg
sub
iret
loop
xchg
or
aam
pop
pop
mov
xor
aad
mov
add
add
cmp
mov
rcr
test
inc
jecxz
add
sbb
loop
fs
pushf
lock
ss
cmp
stos
lds
movs
add
or
movs
mov
mov
jmp
pushf
inc
push
ror
or
mov
xchg
add
hlt
std
mov
or
sbb
mov
inc
mov
push
or
ins
adc
outs
dec
arpl
cmp
inc
sbb
push
and
in
mov
sub
mov
std
pushf
pop
rol
xor
or
adc
push
ja
fs
into
ja
fwait
or
les
pop
(bad)
add
iret
sbb
adc
call
mov
cmp
test
nop
sub
or
add
in
pop
rcr
movs
jno
jecxz
shl
dec
sbb
jae
mov
sub
aaa
(bad)
adc
jne
enter
lods
jo
jo
xor
cmp
mov
adc
retf
xchg
mov
jo
imul
push
ds
and
fidiv
push
call
call
jecxz
push
pusha
mov
xor
pushf
jo
imul
lock
sahf
inc
jae
mov
call
sub
add
sbb
cmp
jmp
or
or
sbb
mov
(bad)
or
or
call
addr16
test
add
lods
hlt
or
scas
pop
push
sahf
cmp
enter
rcr
outs
mov
add
(bad)
adc
sub
push
bsr
hlt
imul
mov
sub
jmp
ror
les
push
push
xchg
sahf
ss
jmp
cdq
retf
ds
cmp
inc
test
jecxz
daa
mov
mov
ret
repz
mov
inc
sub
fsubr
retf
(bad)
movs
and
pop
add
add
xor
rol
and
or
pop
mov
or
out
mov
aad
out
adc
fcomp
pop
cmp
xor
xchg
ror
popa
jne
mov
mov
leave
mov
icebp
or
push
and
outs
mov
and
cmp
cmps
or
movs
mov
int3
or
cmc
sbb
jp
adc
sbb
and
cmp
cmp
shl
or
mov
imul
mov
xor
test
jo
loopne
ja
and
dec
mov
inc
pop
test
cdq
ss
ret
shl
sti
xchg
sbb
cli
(bad)
bound
xor
push
pop
leave
lds
or
clc
test
and
jne
cmp
test
aaa
cmp
jo
fisub
bound
andnps
inc
call
(bad)
(bad)
out
loop
pushf
sar
or
inc
add
mov
ror
ins
cmp
mov
adc
inc
clc
imul
fadd
cmp
in
popf
or
pusha
enter
imul
or
mov
(bad)
or
js
pusha
mov
call
enter
(bad)
into
push
jl
loope
sub
sub
je
lahf
push
xor
add
sar
fs
push
pop
mov
mov
fs
cwde
(bad)
pop
iret
or
lea
mov
dec
aaa
loope
gs
jg
mov
xchg
ret
xor
sbb
cmp
mov
pushf
and
imul
pusha
(bad)
cmps
or
mov
add
pop
inc
sbb
bswap
ret
dec
sbb
sbb
sub
test
add
ins
sub
add
dec
jbe
sbb
mov
adc
jae
inc
jns
dec
pusha
aam
fdivrp
add
shl
jle
xchg
cmp
in
or
into
imul
add
sbb
sbb
inc
gs
test
cwde
mov
das
dec
sar
shl
or
retf
sub
es
and
cdq
sbb
jne
imul
jbe
xchg
js
movs
cmp
shl
and
ss
ins
cmc
and
mov
into
cmps
outs
sub
xchg
ficomp
retf
mov
ja
jl
cmp
jle
test
ins
addr16
dec
add
rol
sub
pop
test
inc
ret
jmp
loopne
aam
icebp
xchg
mov
jne
add
inc
aaa
xchg
sbb
cmp
and
loopne
cmps
lods
int3
or
cmp
sbb
dec
dec
sub
cmp
mov
cwde
xchg
loopne
loope
fnstsw
jmp
stos
repz
xor
adc
popa
add
repnz
das
int3
sbb
ja
sbb
mov
mov
rcr
jne
pusha
sub
or
out
or
mov
cmps
xchg
stos
xor
dec
addr16
dec
hlt
addr16
fld
push
dec
and
jo
clc
pop
pop
lods
icebp
mov
ins
dec
scas
inc
mov
cmp
je
ins
mov
or
retf
add
out
hlt
xchg
jne
je
ret
sbb
scas
ds
adc
loope
or
sahf
pop
movs
lods
sbb
inc
inc
(bad)
retf
retf
mov
jecxz
mov
jmp
aam
push
jecxz
mov
or
das
les
mov
int3
mov
mov
outs
ins
xor
(bad)
pushw
rcl
xor
enter
(bad)
imul
mov
sub
test
push
inc
sbb
sbb
cmp
add
cld
retfw
popa
pop
js
sub
stos
aaa
inc
sub
fsub
sub
(bad)
xchg
cmp
or
enter
pop
sub
and
mov
xor
jg
pusha
or
shl
pop
push
or
and
adc
jb
mov
jb
movs
cmp
rcl
outs
sub
sbb
jno
cmp
lods
loopne
inc
lods
stos
js
add
jbe
xor
mov
inc
xor
push
or
sbb
xlat
jo
sbb
cmp
popa
fcom
jle
rcl
seta
movs
aaa
mov
mov
sbb
adc
or
jo
jmp
add
rcl
adc
add
fidivr
loope
sbb
mov
dec
mov
sub
ror
or
bound
push
sbb
jle
pop
daa
cmp
push
mov
ret
mov
loop
xchg
push
xor
icebp
dec
movs
iret
push
not
push
jl
xor
frstor
test
imul
sub
aad
fcom
push
xchg
xchg
mov
inc
or
js
pusha
out
and
push
mov
outs
mov
add
fiadd
add
in
pop
jp
nop
mov
dec
jns
xchg
rcr
dec
(bad)
cmp
enter
mov
add
(bad)
cmp
push
push
rol
lea
mov
imul
sbb
xchg
in
add
mov
rol
pop
pop
loopne
rcl
xor
add
out
mov
clc
jecxz
aad
pop
jns
stos
mov
jo
sbb
push
jno
(bad)
jp
cmp
mov
dec
fadd
sar
jns
cmp
les
jl
data16
ret
xor
xor
inc
jb
lea
mov
jmp
pop
lods
xchg
cmp
ret
jecxz
sar
push
dec
iret
jle
pop
add
test
jmp
xor
jmp
cmp
xchg
add
push
in
sahf
push
loop
sub
jnp
nop
mov
cmps
test
ret
dec
mov
push
pushf
add
mov
and
loope
jg
add
es
push
pop
pushf
jne
pop
retf
xor
sbb
cmp
movs
adc
mov
inc
fbstp
mov
lods
mov
xor
xchg
mov
sbb
cmp
fiadd
sub
dec
adc
out
je
test
lods
loope
(bad)
adc
pop
test
lds
(bad)
rol
loopne
mov
xchg
dec
into
mov
adc
lock
out
push
sbb
adc
out
jl
loop
add
push
or
cmp
(bad)
aad
sub
adc
jae
les
imul
rcl
retf
daa
sub
inc
sbb
inc
xchg
or
mov
jb
(bad)
mov
cmp
movs
enter
xor
mov
push
adc
dec
pop
jecxz
inc
push
inc
lods
mov
daa
and
and
pop
pusha
dec
fld
lahf
ss
sub
push
push
repz
movs
add
fcom
add
cmp
add
call
pop
movs
add
inc
pop
push
push
mov
inc
jp
fst
pop
push
cmp
xchg
pop
pop
addr16
arpl
out
or
xchg
loop
pusha
movs
and
(bad)
pop
or
push
clc
sbb
mov
inc
daa
repnz
dec
inc
clc
stc
jmp
inc
daa
inc
cmp
add
push
inc
cmp
mov
in
(bad)
rol
shl
xchg
outs
jp
dec
adc
cmp
sbb
inc
cwde
(bad)
sti
pop
add
jbe
add
and
xor
loop
jecxz
and
mov
push
mov
das
push
idiv
pop
mov
cmp
js
cmp
or
dec
push
xor
sub
pop
gs
loopne
movs
fs
sbb
xchg
xchg
xor
sub
add
je
sbb
aam
call
addr16
mov
mov
pop
fwait
push
into
adc
sbb
pop
loope
pop
push
mov
xchg
and
ret
push
fucom
push
addr16
out
nop
jbe
cs
jns
pop
push
xchg
xor
sbb
mov
pop
(bad)
pop
ror
cmp
lock
movs
in
adc
dec
aam
adc
sub
mov
add
movs
arpl
test
test
mov
test
push
not
call
cmp
adc
clc
lds
cmp
xor
cmp
or
jmp
arpl
addr16
and
in
jo
call
mov
lods
push
dec
pushf
rcl
mov
mov
stc
or
dec
cmps
mov
ja
lea
dec
bound
(bad)
add
push
daa
stos
jns
or
nop
add
jg
loop
mov
push
xchg
xchg
pop
cmp
stos
mov
adc
sbb
jno
sbb
or
mov
sbb
(bad)
jl
pushf
scas
lods
sbb
popf
test
loope
ja
or
popa
add
push
enter
sub
or
xchg
cmp
push
in
les
pop
and
shl
(bad)
jbe
rol
es
lods
or
push
ins
jb
inc
xor
icebp
pushf
pop
xor
(bad)
(bad)
push
icebp
imul
hlt
aam
mov
or
ds
pop
dec
shl
repnz
lock
call
jo
lea
aaa
dec
mov
jmp
mov
iret
shl
test
into
scas
jb
push
lods
xchg
xchg
push
lods
sub
mov
repz
outs
add
or
sub
mov
sbb
jns
and
or
repz
jb
push
mov
mov
mov
fs
push
add
or
push
sub
gs
frstor
jno
(bad)
fxch
pusha
add
mov
leave
loop
rcl
out
sbb
sahf
jp
rcl
pop
ror
add
sti
sbb
(bad)
and
add
retf
mov
sbb
aam
leave
push
add
or
jns
xchg
xlat
ret
pop
jae
rcr
adc
or
xor
inc
(bad)
add
xor
sub
leave
jb
xchg
xchg
mov
enter
aaa
xlat
lock
ret
rol
daa
add
sub
sub
and
mov
hlt
xor
mov
or
sbb
loope
push
mov
dec
les
sbb
add
adc
packssdw
xchg
xchg
or
jo
jecxz
ror
mov
mov
cmp
jmp
or
rcr
adc
jb
dec
jp
out
adc
cmp
iret
test
or
cmps
jo
adc
cmps
adc
lock
xchg
iret
ja
push
fmul
in
jns
lods
jno
mov
sub
test
or
push
mov
inc
ins
lea
or
mov
and
(bad)
mov
ret
mov
add
pop
pop
lods
and
push
sbb
in
adc
jns
out
hlt
or
ds
cmp
mov
inc
nop
xchg
mov
std
out
sub
retf
pop
jne
(bad)
pushf
cmp
js
mov
test
mov
outs
enter
sbb
mov
pushf
mov
xchg
cwde
mov
retf
out
mov
xchg
repz
push
jbe
adc
lods
(bad)
fild
pop
or
sub
sbb
jo
mov
dec
adc
dec
jns
repnz
pop
or
stos
cli
dec
xchg
sti
out
or
shl
retf
dec
mov
xor
lds
and
mov
setge
test
add
push
lods
in
and
rol
ror
sahf
or
ins
push
pop
popf
add
cmps
xchg
leave
or
sbb
int
imul
xchg
nop
faddp
inc
sbb
movs
inc
or
cmp
ins
sub
adc
cmp
mov
push
xlat
fidivr
xchg
rcr
mov
xchg
ret
cmp
add
popa
loop
mov
rdmsr
gs
out
retf
addr16
jne
inc
call
add
push
rcr
ret
cli
fs
mov
dec
adc
pop
add
cld
adc
sub
jge
mov
or
push
mov
mov
xchg
adc
daa
loope
into
lds
jb
sbb
mov
or
icebp
or
lods
adc
xchg
xchg
mov
lea
sbb
rcl
pushf
and
sub
or
outs
test
in
xor
add
gs
cmp
dec
sub
leave
jae
(bad)
lds
pop
mov
cmp
push
(bad)
hlt
mov
ins
add
sbb
inc
js
cld
int3
loopne
dec
fs
rcr
cmp
ficomp
into
cmp
adc
pop
pop
ret
mov
(bad)
ficomp
(bad)
xor
arpl
(bad)
jmp
rcl
push
(bad)
pop
lods
sbb
pop
sbb
jne
dec
fsubr
jmp
xchg
fs
ins
cmp
and
and
arpl
movs
or
sub
add
adc
nop
xchg
les
adc
sub
sbb
inc
mul
repz
mov
or
and
retf
add
jnp
inc
jns
mov
dec
pop
xchg
clc
movs
hlt
add
fwait
and
rcr
movs
or
out
scas
add
pop
push
push
mov
xchg
pop
fistp
add
sahf
outs
pop
jle
ret
inc
pop
adc
push
add
pop
rcl
stos
repz
or
add
rcr
fstp
inc
pop
icebp
(bad)
fcomp
pop
iret
sti
jecxz
push
mov
jb
xchg
xchg
sbb
int3
leave
dec
push
test
and
loopne
cmp
test
lods
push
addr16
enter
sti
aas
and
inc
mov
dec
add
(bad)
mov
movs
adc
or
inc
enter
cmp
cwde
fdiv
pop
dec
mov
xlat
add
ret
fmul
imul
pop
retf
ret
cmp
sub
sbb
fptan
mov
push
pop
ret
pop
or
sbb
adc
popa
mov
or
dec
inc
fisubr
xchg
out
popa
leave
mov
arpl
js
sub
mov
loop
push
sbb
cld
jl
ja
rcl
ret
mov
scas
gs
(bad)
stos
fisttp
xor
retf
nop
ror
aam
in
pop
lea
cmp
rcl
cmp
mov
les
cmp
xchg
push
cmp
outs
push
xor
inc
sub
lock
push
sbb
mov
push
sahf
inc
imul
pop
aam
fist
sbb
ret
(bad)
ds
xchg
push
mov
repz
popa
lods
pop
pop
ins
inc
pop
sbb
cmp
ss
cs
lock
pusha
adc
add
inc
push
scas
mov
ins
inc
xchg
mov
aaa
xchg
sbb
push
pop
or
jl
clc
(bad)
sub
jp
mov
or
add
or
push
loope
xchg
add
jns
lock
std
adc
adc
ins
clc
dec
sub
inc
add
sbb
cmps
bound
aaa
ret
fnstenv
hlt
popf
popa
or
ins
fadd
out
pop
xchg
mov
mov
inc
sbb
and
hlt
mov
fwait
mov
add
aad
pushf
push
pop
shr
or
push
movs
sub
xchg
sbb
and
sbb
push
jne
test
or
out
inc
ja
out
nop
jl
mov
mov
pop
ins
jae
add
shl
loopne
(bad)
add
ret
add
add
daa
out
ins
pop
stc
push
push
int3
loope
xchg
push
(bad)
adc
pushf
fmul
cwde
cmps
push
ins
cmp
and
jmp
or
and
cmp
xor
pusha
mov
imul
jns
mov
xor
je
push
jmp
retf
ret
js
jb
jo
loope
add
push
pop
cmps
push
sub
jo
pop
popf
cmps
icebp
add
jecxz
mov
into
adc
vorps
je
jbe
dec
sbb
jne
dec
scas
fldcw
mov
push
push
and
lock
jb
xchg
pop
xchg
inc
or
icebp
outs
pop
fdiv
xor
and
rol
add
sub
inc
mov
and
loope
int
dec
shr
mov
jle
mov
lods
mov
dec
ficom
mov
sahf
xchg
adc
mov
pop
int
leave
pop
dec
ss
mov
xor
pop
xchg
mov
jne
and
lds
popf
and
cmc
cmp
jns
or
daa
pop
and
pop
js
loope
outs
sbb
or
add
dec
dec
or
mov
xlat
mov
popa
dec
idiv
xchg
jmp
cmp
stc
cdq
dec
sbb
test
test
loopne
out
xchg
lock
pop
sbb
(bad)
loop
push
add
and
adc
popf
xor
loop
add
cmp
je
mov
test
imul
and
scas
pushf
fcom
jno
add
jp
pop
je
inc
mov
sahf
sub
xchg
lea
es
cmp
cmps
push
inc
push
dec
pop
loopne
mov
les
push
push
pop
ja
ret
cmps
xor
and
push
cli
std
push
push
sub
in
push
push
xchg
sbb
lahf
sbb
in
mov
stos
pop
sub
popf
sbb
add
(bad)
mov
inc
data16
iret
ret
mov
pushf
xor
push
rcr
out
mov
push
mov
cmp
mov
mov
mov
ret
add
icebp
pushf
mov
cdq
mov
or
jbe
pop
pop
jecxz
adc
ins
aad
push
push
push
push
jl
cmp
push
mov
ret
sbb
aaa
lahf
arpl
xchg
adc
aad
and
into
push
(bad)
xchg
div
mov
adc
adc
out
xchg
mov
adc
jecxz
jle
into
xor
mov
sbb
mov
adc
neg
push
movs
sti
add
push
jp
push
js
cs
jmp
dec
rcl
jmp
mov
mov
inc
ret
jne
dec
cmp
push
daa
sbb
pop
(bad)
loop
pusha
gs
add
fwait
pop
ret
gs
xor
fstp
xor
and
and
add
sbb
imul
adc
mov
adc
loopne
loopne
retf
cdq
fsubr
gs
dec
xor
cmp
push
and
cs
pop
loopne
xchg
inc
sub
mov
jnp
loope
ror
xchg
lods
stos
sbb
jo
inc
push
test
inc
paddq
and
and
data16
inc
sbb
sub
lahf
sbb
mov
pop
inc
(bad)
not
test
jl
dec
rcr
pop
mov
mov
mov
fstp
push
push
push
ds
imul
mov
or
inc
daa
lods
add
push
sbb
dec
js
mov
jmp
mov
dec
ja
loope
inc
push
pop
into
jno
enter
push
out
sub
mov
fidiv
or
inc
pop
push
mov
jmp
sbb
add
repnz
mov
iret
imul
mov
js
mov
dec
add
pop
mov
or
call
mov
mov
dec
mov
push
adc
mov
(bad)
jmp
mov
adc
imul
jae
push
nop
inc
(bad)
sub
lods
loope
retf
adc
or
mov
xor
cmp
pushw
cmp
pushf
sbb
sub
xchg
cli
jo
push
sub
and
rcl
sbb
call
and
mov
addr16
ficomp
push
(bad)
aaa
lods
out
imul
dec
cmps
out
dec
js
jg
sub
hlt
or
xchg
pop
les
sub
jno
jmp
retf
mov
rdmsr
or
jnp
jmp
cmc
(bad)
sub
arpl
push
(bad)
adc
icebp
out
xor
xor
hlt
vpinsrw
in
and
mov
scas
mov
and
(bad)
dec
cwde
loopne
push
adc
enter
test
popf
xor
push
cmc
or
std
push
les
cmps
mov
cmp
add
sbb
in
add
lods
dec
xchg
push
mov
or
push
pop
pusha
add
imul
js
dec
xor
js
aaa
mov
and
cmc
aam
or
mov
mov
cmps
mov
mov
xchg
pushf
call
mov
test
dec
mov
mov
xchg
lods
pop
xor
mov
imul
fsubr
test
mov
cmp
movs
scas
mov
mov
repnz
mov
cmc
ret
arpl
and
pushf
add
add
mov
mov
xchg
rcr
jp
mov
inc
add
mov
push
sar
aad
sub
mov
sbb
push
xchg
dec
pop
cmc
rcr
pop
push
jmp
add
inc
test
mov
sub
lea
ret
mov
imul
stos
jl
mov
call
sub
sub
or
imul
xor
lock
fs
gs
jge
out
jns
jmp
inc
js
addr16
xor
dec
or
(bad)
jmp
and
icebp
jo
repz
jecxz
mov
sti
ss
lods
icebp
(bad)
jmp
sbb
pop
dec
adc
pop
jl
(bad)
pop
add
les
test
mov
retf
icebp
inc
push
lock
xchg
add
push
cmp
add
loop
xchg
mov
jg
pop
adc
imul
adc
xchg
inc
and
mov
daa
add
mov
or
enter
push
push
inc
pop
out
and
dec
mov
xor
sub
or
enter
xor
inc
sbb
aaa
not
dec
jecxz
jo
adc
das
or
popf
adc
call
push
int3
daa
dec
pop
adc
stc
adc
xchg
lods
adc
pop
jmp
cmp
dec
popf
sub
pop
and
lock
push
jmp
repz
add
jmp
cmp
mov
neg
shr
xchg
and
scas
addr16
ret
xchg
jmp
mov
jne
adc
ins
leave
xchg
lea
push
js
add
sub
or
inc
test
ja
(bad)
pop
dec
aas
dec
xadd
fdiv
add
test
jo
fbld
lds
pop
popf
mov
mov
retf
adc
ret
add
xchg
push
pop
jmp
cmp
bound
add
sar
and
ins
dec
js
push
(bad)
push
sbb
add
movs
lock
pusha
or
sbb
bound
mov
sub
jmp
loop
dec
cmp
xchg
loope
test
mov
push
ret
xchg
sbb
xor
jo
mov
jp
jne
jns
push
pop
jl
outs
cwde
shl
push
(bad)
pop
fwait
js
cmps
ret
imul
or
dec
add
pop
sbb
aas
call
sbb
xchg
imul
add
jp
pop
repnz
xchg
shr
mov
clc
dec
mov
cmps
adc
pop
test
loopne
and
pop
es
push
into
stos
xor
jne
je
ret
or
movs
mov
(bad)
xchg
or
ret
cmp
sahf
aam
lsl
and
sbb
cmps
rcl
fist
sub
sub
popf
xchg
fs
(bad)
sbb
mov
xchg
data16
call
in
cmp
sbb
inc
stos
xor
arpl
adc
mov
fmul
push
and
xchg
jb
sbb
movs
lea
sub
mov
cwde
loope
(bad)
js
cmp
add
or
sbb
push
push
out
inc
in
ret
pop
push
sub
movs
push
fmul
push
and
pushf
cmp
das
add
cmp
call
inc
mov
push
mov
push
sbb
popa
mov
rcl
popa
cmp
or
push
imul
int3
sbb
retf
std
sbb
mov
outs
inc
imul
push
aaa
dec
or
add
fsub
and
int3
dec
pusha
stos
(bad)
push
scas
mov
jns
sub
stos
add
movs
loope
mov
je
into
add
and
cmp
stos
enter
lods
add
test
xor
pop
jmp
sahf
pushf
mov
xchg
test
jns
repnz
xor
cmp
or
ret
(bad)
jno
jb
xchg
push
adc
leave
push
js
or
cmp
xor
jnp
xor
or
push
jo
cmp
(bad)
mov
push
dec
and
mov
lock
aaa
add
xchg
or
wrmsr
fdiv
ins
sub
mov
movs
or
cli
fisub
dec
mov
or
sub
rcr
ins
add
xor
lea
jmp
lods
loope
retf
dec
das
or
js
add
and
popa
or
in
retf
dec
test
das
xchg
ds
mov
sbb
sub
cmp
shl
mov
push
add
dec
jecxz
rcl
pop
retf
fst
call
inc
rcr
js
xor
lock
xor
cli
push
cmp
inc
jecxz
jg
into
rcr
je
cmp
movs
xchg
ins
sub
mov
dec
or
bound
xor
inc
std
idiv
push
movs
xor
xor
xor
aam
mov
js
adc
inc
js
jo
nop
inc
js
ror
cmc
adc
fdiv
dec
ret
adc
shl
int
icebp
mov
scas
mov
je
cmp
int
sar
sar
out
sbb
xlat
and
pusha
loope
lods
neg
out
lock
ins
(bad)
inc
mov
jp
cmp
movs
nop
sbb
aaa
jp
xchg
sub
sub
mov
outs
and
add
xor
test
jb
push
xor
push
xchg
mov
push
(bad)
cmps
ja
jo
xchg
fcmovnbe
pusha
push
xchg
addr16
repnz
dec
stos
adc
cmp
add
jg
pop
pushf
sub
jmp
xchg
int
dec
push
and
jo
bnd
xchg
inc
add
push
xchg
repnz
xor
jno
stos
movs
je
xchg
and
dec
dec
xchg
push
jbe
mov
mov
pop
jecxz
xchg
push
bound
cmps
lods
or
pop
enter
adc
jmp
adc
popf
push
or
jmp
aad
stos
cmp
pop
adc
push
dec
jecxz
das
fstp
rol
xor
or
jb
popf
js
pop
xchg
cs
add
aam
sbb
or
inc
call
jl
rcl
xchg
shr
sbb
retf
pushf
adc
mov
jmp
sbb
lods
sbb
pop
add
je
ror
mov
push
imul
push
sahf
jae
neg
inc
add
retf
adc
inc
outs
sahf
mov
push
cli
add
or
push
scas
loopne
mov
and
rol
push
sbb
cmp
pop
xchg
fild
sahf
push
xchg
add
jp
and
dec
jnp
push
rcr
(bad)
addr16
jmp
jmp
pop
add
sub
popf
shr
mov
sbb
push
out
enter
mov
pop
mov
ds
jecxz
(bad)
xor
xor
rol
shl
mov
les
pslld
mov
push
loop
shl
out
test
sbb
lods
lock
mov
ret
call
ror
mov
push
ja
ret
loopne
js
sub
sbb
add
jb
inc
pushf
jno
push
ds
cmps
mov
sub
mov
enter
test
into
imul
inc
lahf
cmp
stos
outs
xchg
xor
adc
sub
jmp
lods
(bad)
cmp
push
mov
mov
pushf
pusha
or
jb
lea
cmp
loope
cmp
mov
mov
and
lods
adc
popf
repnz
push
push
sbb
loopne
xchg
setge
outs
inc
and
test
push
(bad)
sbb
xor
sbb
sub
ffree
jmp
push
inc
ja
cmp
mov
or
inc
add
mov
jb
push
and
pushf
mov
inc
sahf
pop
pop
pop
jb
addr16
popf
pop
fcomp
sbb
dec
add
adc
dec
mov
sti
and
or
mov
mov
push
xor
dec
mov
pop
xchg
jne
(bad)
imul
cmp
stc
ret
loope
ins
inc
or
or
and
push
cmps
xor
into
mov
mov
add
dec
adc
push
mov
iret
test
mov
pusha
and
fmul
pop
or
pop
mov
push
pop
dec
ret
aaa
jb
mov
repz
imul
mov
sbb
gs
aam
sub
(bad)
(bad)
retf
pusha
sbb
dec
xor
mov
push
cmp
and
jp
add
test
mov
cmps
pushf
cdq
popa
ins
in
loop
push
or
shr
cmp
mov
retf
leave
xor
in
cmp
arpl
sub
cdq
gs
sbb
inc
fisttp
pop
mov
inc
(bad)
or
sub
dec
fisubr
rol
mov
rol
rcl
or
and
mov
not
mov
cdq
movs
inc
pop
retf
mov
popf
aaa
inc
mov
dec
into
mov
dec
add
mov
and
and
hlt
pop
cmp
sub
pop
out
add
pusha
loopne
mov
(bad)
fcom
enter
ins
xor
aaa
adc
ss
mov
hlt
or
mov
sub
aam
arpl
std
repnz
dec
xor
iret
add
icebp
nop
shl
cmp
jne
mov
jbe
(bad)
loope
pop
clc
and
loopne
imul
sar
push
xchg
cld
add
add
xor
inc
imul
xchg
lods
ret
or
pop
cmp
enter
imul
ins
add
xchg
mov
ret
das
or
int
add
mov
mov
dec
push
lods
sub
adc
fsub
sbb
fidiv
push
lahf
(bad)
das
jl
sar
ja
adc
xor
pop
pop
sbb
sub
mov
xchg
mov
fisubr
and
popa
repnz
xchg
pop
(bad)
or
or
lahf
int3
xchg
(bad)
adc
icebp
mov
pop
rcr
popf
adc
(bad)
adc
arpl
or
lahf
outs
mov
icebp
and
push
movs
mov
call
inc
pop
adc
push
pusha
xlat
cmp
inc
mov
loop
pop
push
sub
jnp
or
retf
xchg
push
cmp
(bad)
push
inc
sbb
fidivr
sub
mov
test
dec
add
retf
mov
pop
or
lods
rcr
xor
mov
in
pop
add
call
push
lock
jp
jmp
retf
add
mov
pop
inc
jle
mov
popf
add
(bad)
or
jmp
cmp
inc
(bad)
xor
rcr
ror
jb
fwait
mov
xor
std
(bad)
loope
pop
sub
test
xor
push
sahf
sbb
ret
mov
popa
dec
and
mov
push
fistp
in
sahf
mov
lds
xchg
and
push
fisttp
mov
sub
cmp
je
fistp
(bad)
jle
add
outs
mov
pop
mov
xor
loopne
daa
pop
add
repnz
outs
add
xor
or
adc
add
wbinvd
imul
add
and
add
mov
dec
and
sbb
je
js
iret
ror
fld
fwait
ja
mov
repz
inc
sbb
adc
cmp
mov
lock
lods
lea
add
push
(bad)
sub
jl
xor
xor
imul
pop
cmp
xchg
mov
push
and
scas
inc
sub
dec
aaa
mov
imul
cli
fsubr
mov
xor
mov
xchg
xchg
loopne
cmp
xchg
mov
or
sbb
sbb
bound
or
verw
mov
jae
ror
adc
mov
sbb
popa
dec
fst
sub
pop
fst
lods
mov
adc
rcl
mov
push
sbb
inc
xor
push
sub
jmp
cmp
dec
cmp
or
loopne
push
xchg
xchg
ret
push
arpl
das
rol
mov
loopne
cmps
aad
add
jmp
xlat
ret
pop
ret
jmp
test
dec
loopne
in
sbb
(bad)
hlt
scas
jae
enter
int
push
sbb
dec
cli
adc
dec
clc
adc
js
sub
shr
in
sub
xchg
mov
xchg
inc
pop
into
test
mov
push
lock
scas
jmp
and
adc
adc
mov
das
fst
mov
rol
sub
dec
test
movs
gs
fwait
add
push
cmp
arpl
mov
push
sbb
dec
xor
inc
pop
inc
scas
pop
ja
xor
mov
sahf
adc
pop
inc
out
test
xchg
arpl
mov
push
dec
sti
add
mov
retf
mov
mov
mov
pushf
in
shl
dec
pushf
in
cmps
cdq
xchg
or
mov
ret
mov
pop
push
or
into
rcr
xor
or
add
mov
push
imul
mov
pop
xor
pushf
bound
retf
pop
add
jp
cli
fnstcw
and
aaa
mov
retf
pop
push
xor
outs
xor
push
lods
push
xchg
cmp
inc
pusha
xor
mov
enter
cmp
adc
mov
xchg
sub
mov
jp
call
rcr
and
daa
dec
adc
rol
xlat
xchg
push
push
xchg
(bad)
mov
ds
cmp
mov
or
aaa
add
out
mov
sbb
or
ins
jmp
adc
push
addr16
jns
jp
mov
pop
mov
lods
mov
push
scas
xchg
hlt
inc
xor
jge
xor
mov
daa
dec
cmp
pop
cmp
cmp
pop
and
inc
adc
fcomp
push
cwde
imul
mov
fdivp
push
xchg
xchg
push
dec
ror
sub
dec
call
inc
sahf
jnp
mov
sbb
push
ins
into
cmp
pop
sahf
retf
inc
pop
jbe
sub
pop
call
cmp
(bad)
or
adc
sub
popa
sbb
rcr
out
lock
xor
xor
xchg
clc
and
and
cmp
jne
or
lea
push
dec
add
lds
sbb
push
fisttp
pushf
jo
push
and
cs
jp
je
xchg
icebp
add
push
paddusw
pop
xchg
(bad)
js
jo
sahf
sub
pop
mov
lods
stc
add
dec
paddd
js
out
pop
push
jnp
call
mov
cld
(bad)
into
mov
pop
outs
pop
xor
dec
adc
std
mov
cmp
sbb
daa
mov
ja
cmc
dec
in
scas
cmp
retf
xor
shl
xchg
sahf
movs
xor
mov
xor
and
popa
adc
inc
cmc
push
adc
add
stc
mov
xchg
das
pop
pop
pop
pop
popa
(bad)
cmp
inc
or
dec
sar
sbb
mov
loopne
repnz
bound
mov
add
mov
push
xchg
lods
in
jnp
cmp
pop
cli
jg
fdivr
lock
adc
pop
mov
xchg
fs
pop
push
or
or
outs
lods
mov
jge
js
sub
add
imul
jno
mov
sbb
push
adc
adc
dec
push
ret
xor
jmp
enter
mov
rcl
xchg
pop
add
test
pop
mov
sub
cmp
and
mov
dec
cmp
ret
xlat
call
cmps
pop
retf
push
retf
nop
adc
xchg
int
dec
loop
jbe
das
pop
xor
add
cmp
or
out
jl
and
cmp
mov
dec
cmp
test
js
out
sbb
push
outs
cmp
jl
shr
add
cmp
sbb
mov
stc
add
imul
rcr
pop
pop
mov
ret
rcr
int3
dec
das
loope
aam
lahf
ja
imul
add
add
and
add
or
movs
jne
jge
mov
lods
xor
lock
mov
into
loop
xchg
gs
adc
ins
dec
cmp
ret
loop
or
jmp
jmp
ds
iret
cli
push
xor
mov
loopne
push
sbb
jne
ret
sbb
dec
mov
dec
push
into
nop
add
loopne
inc
ss
leave
shl
inc
pop
pop
js
mov
sbb
adc
inc
sahf
add
lock
out
mov
adc
les
mov
dec
fwait
xchg
aaa
into
(bad)
in
sub
pop
xor
xchg
push
dec
or
shl
or
xor
sbb
xor
adc
cmp
xchg
in
leave
popf
mov
pop
pop
test
arpl
cld
sub
xchg
hlt
lds
xchg
mov
movs
or
jb
push
sbb
xor
ret
xor
inc
add
jecxz
sub
loopne
jmp
arpl
gs
out
call
sub
cmp
call
daa
mov
out
out
pop
inc
or
inc
iret
sub
adc
shl
or
push
push
cmp
inc
add
sbb
mov
rcr
fcom
es
loope
(bad)
xchg
push
xchg
or
inc
cmp
out
mov
outs
sbb
sbb
stos
sub
lds
repz
xchg
mov
sbb
sbb
jecxz
aas
push
or
cmp
mov
ret
aad
rcr
or
fs
(bad)
idiv
push
jb
pop
fwait
jb
outs
cld
and
retf
sbb
jp
xchg
mov
ret
sbb
out
inc
dec
xor
jmp
enter
and
dec
mov
dec
cmp
addr16
or
adc
sub
test
test
or
xchg
xchg
popf
xchg
int3
xchg
daa
les
cmp
jbe
ins
push
sbb
xor
call
mov
xor
cmp
add
cld
aam
add
sahf
mov
repnz
inc
mov
cwde
or
or
jo
cmp
and
je
(bad)
fs
adc
addr16
in
mov
jmp
or
xchg
dec
mov
cmp
scas
fcomp
sbb
cmp
mov
sub
adc
inc
jp
mov
mov
not
cmp
inc
inc
call
sbb
mov
push
jle
mov
add
mov
push
xor
dec
daa
sub
add
stos
test
addr16
cs
and
and
xchg
xor
sub
icebp
mov
push
or
pop
rcr
sub
mov
and
sahf
or
adc
adc
retf
sbb
sahf
mov
nop
push
pop
and
shl
fdiv
mov
pop
jmp
mov
xchg
mov
inc
cmp
and
and
(bad)
sbb
(bad)
sub
enter
cmc
cmc
cmp
add
rol
jo
xchg
push
rcr
shr
inc
dec
and
enter
xor
cmp
mov
sbb
aam
cmp
mov
mov
stos
in
test
pop
xchg
fstp
push
xor
js
clc
ret
and
inc
pop
add
dec
daa
shr
loope
test
jns
jge
mov
arpl
mov
mov
outs
ret
push
sbb
pop
fwait
or
call
sahf
gs
push
or
pushf
lahf
push
out
sbb
jecxz
mov
popa
mov
das
push
js
movhps
sbb
add
gs
inc
or
test
mov
mov
push
xor
and
pop
in
daa
inc
jecxz
ds
test
and
and
in
loop
jmp
push
mov
xchg
jno
and
push
gs
push
pop
je
fcom
xor
inc
sbb
push
cmp
and
push
push
dec
sbb
cmp
pusha
fsubr
and
or
es
pop
rcr
daa
push
bound
inc
pop
outs
js
adc
xor
pop
or
xchg
aaa
or
shr
test
mov
scas
cmp
or
mov
scas
cmc
jo
es
add
xchg
test
jmp
test
pop
mov
dec
pop
mov
jecxz
bound
and
add
fucomi
dec
rol
cmps
xor
xor
jp
repz
pop
add
outs
dec
adc
out
add
inc
xor
shl
mov
xor
cmp
and
push
and
inc
cmp
push
jg
fild
mov
icebp
(bad)
dec
jecxz
add
jae
inc
jo
mov
add
or
xadd
mov
dec
aas
pop
rol
sbb
xchg
cdq
popa
dec
sbb
cmp
lods
imul
add
mov
pushf
fucom
or
push
dec
fucomp
and
and
(bad)
lock
add
sbb
push
mov
sub
daa
out
and
add
xor
movs
cmp
pop
(bad)
fld
pushf
jle
mov
mov
add
pop
loopne
add
lods
dec
lock
push
ins
cmp
je
add
push
mov
clc
adc
mov
inc
inc
repz
lock
in
xchg
fisttp
jle
inc
movs
pop
sub
repnz
movs
push
xchg
adc
test
adc
cmp
pusha
inc
ja
pop
or
mov
call
and
icebp
mov
adc
jo
dec
js
pop
aaa
scas
fdivr
and
(bad)
mov
xlat
mov
mov
push
xor
xor
call
ror
mov
mov
shr
lods
movs
push
cmps
dec
pushf
aad
jb
push
div
mov
inc
add
adc
sbb
out
jb
(bad)
push
repz
call
fnstsw
or
retf
xchg
mov
neg
or
jle
and
cmp
outs
in
cmp
or
pop
scas
cli
lock
movs
dec
cmps
jae
rcl
aaa
mov
add
hlt
or
or
sbb
push
and
inc
dec
inc
jae
push
add
xchg
jmp
test
xor
mul
inc
jnp
jno
cmp
inc
mov
or
test
dec
adc
add
(bad)
(bad)
imul
jo
test
push
(bad)
mov
enter
movs
jmp
add
and
test
sbb
ret
push
jne
inc
fmul
xor
pop
pop
pushf
mov
xor
jmp
or
ja
push
mov
int3
jge
cmp
fxam
cs
adc
add
lds
xchg
rcl
loopne
(bad)
xor
retf
inc
ins
out
loopne
xor
test
not
push
adc
(bad)
loop
clc
xchg
pushf
and
sub
cdq
sbb
iret
push
push
ror
xor
sahf
cmp
repnz
pushf
add
mov
dec
and
sbb
cmp
in
add
fidivr
sbb
xor
outs
xor
aam
inc
and
ja
test
mov
dec
inc
and
fs
lock
and
sbb
mov
sub
mov
sbb
push
mov
jno
inc
push
in
mov
add
cmps
mov
inc
test
dec
push
fidiv
or
mov
sub
lods
movs
adc
ins
xchg
loopne
mov
rcr
adc
jp
mov
mov
ficom
fs
lea
xchg
push
cmp
ret
nop
adc
test
ret
push
pop
outs
xor
jno
add
and
sbb
push
xor
jecxz
icebp
fs
test
mov
fsubr
cmp
lds
pop
sub
add
adc
fst
pop
loopne
xchg
scas
xor
inc
or
out
mov
loope
das
rcr
test
aam
mov
loop
mov
jnp
mov
jns
inc
cwde
rol
xchg
xchg
dec
int
mov
inc
pop
lds
shl
and
or
sub
xor
jo
imul
(bad)
mov
mov
dec
out
daa
lock
(bad)
xor
lea
outs
test
push
or
sub
fldcw
push
adc
and
inc
addr16
dec
scas
pusha
add
imul
sub
sub
push
cmpps
pop
push
pop
xor
pushf
scas
ret
ins
xchg
mov
adc
mov
cmp
(bad)
pop
shl
(bad)
out
cmp
sbb
aad
arpl
movs
pop
jl
mov
fs
dec
mov
cmp
cmp
jle
mov
loopne
mov
data16
cmp
cmp
sbb
sbb
lods
xchg
test
cmp
cmps
into
dec
adc
jle
pusha
cmp
sub
add
adc
pop
ror
(bad)
cmps
je
cmps
nop
leave
popf
cmp
arpl
aaa
data16
cwde
mov
and
lahf
or
cmc
sub
sbb
ror
cmp
retf
in
or
and
sub
or
adc
dec
ins
retf
mov
and
push
dec
out
loope
and
movs
mov
push
repnz
hlt
and
fwait
ret
xchg
idiv
adc
sbb
and
sbb
xchg
sbb
xchg
xchg
stos
inc
psllq
and
cmp
xor
shr
nop
xor
cmp
push
pop
pop
push
add
mov
cmp
das
popf
rol
mov
dec
int3
aaa
xchg
(bad)
sbb
inc
cmp
das
call
ja
les
pop
test
mul
scas
mov
mov
mov
outs
or
pop
push
cmp
xchg
sbb
jo
arpl
(bad)
jmp
stc
push
addr16
add
pop
ins
xchg
cdq
add
mov
mov
pop
xchg
xor
pop
sar
or
(bad)
ficomp
sahf
data16
rcr
add
mov
push
sub
add
or
inc
or
sbb
xor
jmp
pop
cmp
jmp
pop
out
fidivr
jbe
push
cmp
xchg
das
in
sbb
nop
sub
daa
test
sbb
out
pushf
jno
nop
sbb
das
inc
popa
test
mov
iret
push
jne
out
jmp
mov
inc
lahf
xchg
call
enter
mov
add
loop
cmp
popa
cmp
mov
jo
mov
sbb
pop
jecxz
loopne
pop
inc
test
mov
ret
push
sub
sbb
addr16
retf
bound
or
lods
mov
jo
jecxz
dec
or
pop
fmul
(bad)
pushf
jne
sahf
jl
mov
popa
cmp
push
adc
or
dec
mov
test
sbb
xchg
pop
or
adc
xor
loopne
and
daa
inc
ret
retf
inc
xchg
add
sub
xor
out
inc
test
xchg
or
mov
sub
popa
movs
add
gs
hlt
push
arpl
nop
scas
mov
lea
inc
adc
pop
aaa
mov
jmp
ffree
sbb
inc
jb
fsubr
xlat
aam
mov
movs
cmp
in
dec
repz
jb
shl
je
shl
jecxz
sub
jmp
out
gs
or
xor
mov
and
clc
aad
or
js
enter
lods
mov
jnp
jl
jp
aaa
int
dec
(bad)
rcr
lods
addr16
test
and
add
or
dec
xchg
loopne
out
shl
inc
or
add
mov
gs
repz
mov
(bad)
push
fistp
mov
push
xor
aam
mov
call
sbb
xor
stos
loope
or
xor
mov
pop
rol
mov
out
test
leave
fstp
in
mov
jmp
cmp
loopne
out
dec
fisub
shl
mov
rol
jle
cdq
faddp
cmp
sub
xor
inc
rol
test
jmp
fistp
js
mov
mov
arpl
add
stc
dec
and
add
pop
in
jmp
jae
in
mov
xchg
add
cmp
out
mov
aas
jbe
xchg
xchg
pop
mov
lods
push
mov
mov
mov
rcl
test
lods
sbb
hlt
jle
mov
mov
loop
jp
gs
add
adc
cmp
lods
dec
aas
adc
or
mov
vcvtdq2ps
enter
lods
push
add
mov
into
jmp
mov
mov
xchg
jo
aaa
push
aaa
mov
addr16
inc
ins
mov
xchg
scas
jcxz
aas
lods
adc
outs
sub
xlat
test
aam
ins
sbb
push
push
clc
adc
mov
nop
or
jbe
jne
cmp
push
xchg
(bad)
fisubr
ret
dec
mov
out
xor
jne
mov
int
loope
jo
call
pop
push
fcmove
xchg
(bad)
mov
sbb
cs
nop
shl
xor
xchg
cld
(bad)
jp
icebp
or
in
sub
ret
imul
mov
js
and
dec
mov
adc
inc
push
add
xchg
cmp
adc
ret
add
jo
dec
rol
jae
mov
arpl
(bad)
and
or
cmp
cwde
(bad)
(bad)
cwde
popf
mov
sub
xchg
mov
or
xlat
and
ds
xchg
out
jl
sub
lock
xchg
xor
xor
cwde
(bad)
leave
sbb
xchg
sbb
push
dec
movs
in
enter
cmp
add
mov
mov
data16
pushf
push
push
(bad)
fist
scas
xchg
bnd
sub
pop
jmp
sub
(bad)
and
and
jae
movs
xor
push
and
aaa
jne
or
cmc
mov
loop
mov
movs
push
imul
lahf
mov
fsub
dec
inc
add
mov
cmp
and
out
lea
out
inc
(bad)
sub
fdiv
xchg
xchg
icebp
jne
xor
sub
xor
les
dec
xor
cwde
pop
test
jne
pop
jno
pop
out
jo
in
adc
mov
and
sub
adc
cmp
int
ret
add
and
mov
fiadd
ja
movs
mov
xor
into
fwait
mov
add
(bad)
adc
mov
mov
jg
push
cmp
cmp
addr16
sub
test
pop
add
push
sbb
jp
cmp
or
mov
std
leave
gs
cmp
in
sti
pop
cmp
out
sbb
xor
cmp
pop
jge
test
adc
movs
in
add
jecxz
addr16
std
fs
mov
(bad)
xor
nop
xor
fild
(bad)
icebp
jo
(bad)
adc
and
xor
call
(bad)
out
ins
cmp
outs
test
add
rcl
stos
sar
add
jnp
dec
js
std
test
adc
arpl
dec
pop
inc
in
cld
adc
(bad)
jae
jmp
and
sub
mov
xor
and
mov
fs
in
mov
or
jb
or
aas
lods
movs
add
push
sbb
imul
or
or
jmp
pop
outs
in
fsub
inc
and
sub
xchg
movs
aam
pcmpgtb
pop
(bad)
mov
sbb
mov
lock
xchg
mov
les
mov
pop
pop
cmp
or
lods
ret
loope
xor
test
push
js
mov
mov
js
leave
call
push
fmul
cmp
retf
push
jecxz
aas
xchg
and
inc
or
or
and
popa
add
push
xchg
das
inc
outs
or
cmp
xchg
popa
mov
rcl
inc
pop
dec
js
mov
dec
inc
int3
test
inc
push
xchg
cmp
dec
cmp
adc
mov
xor
std
push
loopne
push
dec
dec
arpl
or
dec
ss
daa
fcom
jb
cmp
mov
cmps
adc
sbb
and
dec
mov
pop
cmp
ds
or
add
pop
xchg
push
mov
cli
and
or
ror
adc
jmp
or
mov
sub
adc
add
xor
and
popa
and
adc
xor
cmp
jmp
jle
sbb
call
imul
jmp
inc
mov
sbb
fistp
adc
out
ror
inc
fadd
mov
jnp
push
or
movs
xchg
aaa
rcl
dec
sbb
mov
sbb
loopne
fst
sbb
dec
in
shl
retf
inc
in
repnz
sbb
xchg
mov
mov
fistp
dec
loope
xchg
pop
retf
aad
pop
(bad)
mov
cmp
mov
add
or
repz
push
jmp
(bad)
cmp
sbb
adc
std
sub
sbb
and
push
fcom
mov
adc
stos
mov
fmul
cmps
xchg
mov
popa
imul
pop
or
rcr
jnp
sbb
pop
sub
movs
adc
jo
add
imul
xor
pusha
je
out
mov
shl
mov
jl
mov
cmp
mov
jmp
inc
adc
in
ror
pop
sub
bound
push
jo
xchg
add
imul
(bad)
push
cmp
movs
pushf
sbb
scas
(bad)
xchg
and
xchg
nop
jmp
push
lahf
outs
(bad)
in
fsub
or
or
pop
mov
sbb
(bad)
(bad)
test
inc
es
int3
dec
push
cli
or
xchg
add
mov
adc
inc
repnz
cmp
rol
cmps
pushf
sbb
push
push
push
fbstp
sbb
add
mov
test
jb
mov
lahf
mov
gs
sub
aad
or
push
sbb
xchg
mov
mov
jecxz
mov
test
push
retf
jmp
cmp
loop
ret
xor
ret
in
and
mov
shl
loop
adc
jmp
adc
jecxz
push
xchg
sub
push
lock
into
push
mov
inc
(bad)
cmps
or
xchg
js
gs
sbb
pop
sbb
out
add
cmps
popf
and
adc
add
sbb
pop
jl
jbe
idiv
jo
lahf
pop
shl
int
mov
adc
and
cmp
lock
add
or
pop
dec
push
sbb
nop
ins
cmp
js
cmp
loopne
sbb
ins
dec
push
mov
shl
push
outs
add
nop
mov
inc
jo
nop
adc
mov
fmul
enter
fsub
adc
jne
pop
adc
xchg
scas
jp
sbb
sbb
jb
and
xchg
jp
rcr
xchg
adc
jne
data16
xchg
jp
mov
sahf
mov
jmp
ret
push
sbb
movs
aad
loopne
add
ret
or
ret
pop
shl
and
cmc
cmp
addps
jo
mov
leave
jge
mov
js
adc
xor
jne
ret
call
xchg
out
add
test
sbb
loope
ins
or
mov
lea
or
in
push
xor
jnp
in
push
xor
inc
sbb
cmp
mov
mov
xor
pop
mov
cmp
cmc
(bad)
mov
adc
jl
lea
pop
cmp
lock
sahf
sub
jns
inc
lods
jno
(bad)
jns
test
jo
pushf
scas
pop
xchg
fdiv
xlat
add
xor
lods
cmp
fstp
or
mov
pop
sbb
cdq
mov
popa
dec
cmp
jb
mov
repz
pop
pop
fild
cmp
pop
cmp
inc
xchg
arpl
mov
jnp
push
pushf
sbb
cmps
in
rol
inc
sbb
jmp
xchg
cmc
sbb
in
cmp
mov
mov
in
fcom
imul
inc
(bad)
rol
test
jg
jo
(bad)
inc
pop
rcr
or
adc
add
into
mov
or
and
(bad)
daa
hlt
inc
imul
xchg
inc
cmc
ffree
enter
ds
rol
mov
pop
mov
out
dec
mov
mov
push
inc
or
mov
mov
pop
add
out
jp
(bad)
ror
mov
nop
xchg
sahf
iret
outs
add
fptan
rcl
aad
(bad)
xchg
repnz
push
push
sbb
jmp
or
rcr
inc
cld
jnp
addr16
or
sbb
(bad)
mov
add
jno
sbb
and
in
fsub
lods
xchg
and
addr16
push
out
and
mov
inc
or
mov
icebp
dec
cli
mov
fs
stc
mov
or
xchg
js
repz
lea
and
adc
aam
mov
xchg
add
dec
ret
ficom
sub
ret
mov
sbb
push
and
adc
jo
jmp
push
(bad)
jmp
das
arpl
test
cmp
pop
push
ss
or
push
nop
xor
inc
ror
call
mul
xor
sub
adc
cmps
in
shl
push
cmp
pop
sbb
jge
ja
cmp
cmp
ror
dec
es
jno
stc
push
inc
pop
pop
call
adc
xchg
add
xchg
xchg
mov
add
fcomp
xor
dec
dec
jo
jno
(bad)
xor
(bad)
pop
sbb
push
sbb
jne
push
inc
sbb
enter
rol
cmp
mov
test
dec
sbb
xlat
fbstp
dec
dec
arpl
jno
push
dec
adc
mov
mov
loope
add
js
push
in
mov
push
sahf
add
mov
xchg
lods
dec
pushf
mov
adc
pop
jge
test
ins
sbb
sbb
push
jns
mov
dec
mov
les
push
cmp
push
dec
jnp
jp
lock
mov
pop
test
pushf
sbb
scas
(bad)
cmps
add
(bad)
leave
push
outs
push
push
sti
xchg
inc
jmp
sub
imul
fcomp
icebp
jo
arpl
es
xchg
loop
push
add
dec
test
push
(bad)
add
jg
inc
jnp
inc
daa
mov
mov
cmp
rcl
out
mov
gs
iret
xor
cmps
dec
push
(bad)
sub
test
(bad)
pop
in
fsub
std
push
xor
sub
cmp
ror
xchg
jl
adc
jmp
jle
xchg
mov
ja
jg
sub
fs
mov
dec
mov
pop
xor
sub
xor
jb
sbb
in
sbb
inc
and
out
mov
sub
jle
dec
push
cmp
inc
cmp
dec
sub
or
mov
or
ret
xchg
cmc
inc
add
cmp
dec
xchg
fbstp
add
mov
imul
fldcw
fiadd
cmps
xor
or
dec
xor
add
clc
repz
and
push
imul
adc
or
inc
or
or
data16
bound
mov
gs
jns
xchg
arpl
mov
ins
sti
xor
stc
in
loop
jne
adc
pushf
xchg
ror
movs
xchg
sbb
adc
push
jb
loope
fild
sahf
cdq
jmp
ja
enter
lahf
call
pop
add
loope
add
ja
test
sub
bound
jno
adc
or
daa
leave
pop
xchg
gs
popf
xchg
and
call
ret
cmp
push
(bad)
adc
movs
ss
pop
adc
inc
gs
add
and
cwde
jns
loopne
inc
inc
or
rcl
cmp
nop
leave
retf
arpl
cs
sub
nop
jo
adc
out
or
pop
pop
push
inc
pop
ret
ret
sar
test
xchg
or
sub
jecxz
jecxz
js
call
je
loopne
jp
mov
dec
aaa
enter
and
bound
xchg
retf
repnz
popf
and
cmp
xor
pop
pop
push
pushf
gs
mov
and
mov
xlat
jns
inc
sbb
out
mov
ret
or
ret
aaa
push
retf
pushf
add
lahf
sub
and
mov
popa
and
xchg
or
xor
rcr
loopne
aam
pop
sub
test
xchg
add
ror
sbb
sbb
ror
leave
outs
cld
or
adc
or
arpl
mov
mov
mov
adc
inc
test
sub
outs
mov
ficomp
icebp
xchg
inc
loop
add
fwait
psrld
fs
pushf
or
cmp
mov
call
nop
shl
and
popa
mov
movs
fldcw
jo
jnp
rol
movs
inc
pop
sar
sub
into
xchg
nop
dec
xchg
mov
or
xchg
lods
dec
mov
and
sar
xor
mov
retf
outs
mov
dec
inc
out
sbb
gs
jbe
mov
test
push
push
in
adc
push
xor
sahf
outs
fistp
icebp
lods
mov
jo
loopne
push
jl
ss
jb
iret
ss
pop
mov
imul
rcr
mov
enter
retf
add
mov
sbb
and
int3
call
loop
test
mov
xchg
sbb
arpl
sub
xchg
mov
das
cmp
xchg
sar
std
cmp
dec
cmps
rcr
int3
xor
mov
adc
dec
cmp
pop
ret
ret
mov
popa
loopne
sbb
aam
das
mov
push
pop
retf
mov
sub
jmp
mov
mov
or
imul
mov
adc
push
cmp
and
repnz
adc
add
xlat
fild
rol
or
adc
addr16
sub
sbb
push
xor
xor
test
mov
fidiv
lock
nop
mov
push
imul
and
mov
add
arpl
jo
test
pop
popa
cwde
scas
jmp
sub
and
and
pusha
je
sbb
cmp
inc
mov
xor
sbb
jp
loope
jmp
adc
or
add
pop
frstor
cmp
adc
(bad)
js
mov
lods
jg
xor
xchg
mov
les
aaa
ds
jnp
ds
bnd
mov
jg
cmp
and
ins
popf
and
adc
push
xchg
sub
lock
mov
test
lds
sub
adc
daa
jl
xchg
sti
pop
pop
ret
retf
jno
in
inc
mov
sbb
pop
sub
neg
pop
cmp
ffreep
out
dec
ror
dec
mov
jmp
sbb
ficomp
or
ja
aas
inc
jno
xor
test
lods
xchg
js
sar
xor
imul
push
shl
xor
lds
mov
das
arpl
push
ror
retf
ins
pop
mov
pop
retf
movs
mov
add
cmovbe
push
xchg
jnp
outs
pop
dec
adc
jne
loop
inc
fldcw
fldlg2
popa
(bad)
movs
mov
jl
repnz
pop
jne
ss
test
fnstenv
adc
loope
in
mov
sub
sub
je
leave
fwait
mov
sub
shl
daa
mov
ret
jae
rcl
sub
inc
dec
neg
xor
pop
cwde
add
shr
sbb
mov
jb
and
dec
arpl
cmp
jno
xchg
cmps
stos
loop
mov
aam
(bad)
mov
xchg
cmp
pushf
sub
je
in
and
adc
fsubr
dec
mov
fcomp
mov
adc
jnp
lock
push
push
movs
scas
inc
ins
cmp
lock
inc
cmp
jecxz
xchg
hlt
mov
mov
mov
out
ret
jno
enter
out
adc
push
and
mov
leave
clc
jns
and
mov
add
mov
fmul
iret
xchg
xchg
and
test
(bad)
adc
push
dec
retf
(bad)
(bad)
xchg
add
lahf
lods
shr
js
mov
rcl
aam
inc
mov
sbb
xchg
hlt
mov
test
or
les
inc
ret
retf
xor
mov
or
ins
xchg
dec
push
mov
mov
stc
mov
ds
movs
pop
daa
sub
pop
faddp
jmp
pop
sbb
xchg
dec
stc
dec
rol
out
mov
pop
jmp
or
jecxz
lock
inc
lahf
push
or
fdiv
adc
adc
idiv
fcomp
mov
popa
and
addr16
out
dec
enter
or
lea
add
jae
xor
rcl
pop
imul
xchg
push
imul
hlt
int3
clc
sbb
(bad)
add
or
mov
sti
xchg
add
sub
add
cmp
clc
(bad)
fcmovne
jo
mov
jns
pop
mov
sub
shl
scas
repz
daa
mov
scas
lea
sbb
cmp
mov
dec
int3
sbb
cmp
jecxz
mov
sbb
nop
add
xchg
mov
out
lods
or
loope
aaa
test
push
or
addr16
shr
adc
xchg
ror
pop
popf
rol
inc
xor
(bad)
rcr
pop
inc
pop
xchg
jp
sub
pop
adc
mov
clc
pop
xchg
push
pop
icebp
rcl
push
fldenv
mov
jnp
pop
aam
shl
push
(bad)
cmc
clc
call
or
fisub
data16
ret
rol
jecxz
and
ret
jmp
es
xchg
xlat
pop
cmp
popf
xchg
add
and
sub
mov
xchg
mov
test
in
adc
jo
xor
sar
push
adc
add
jnp
jp
pop
shr
push
leave
and
in
aaa
adc
repnz
xor
mov
rol
fistp
pusha
fs
adc
push
jecxz
loope
aam
das
les
or
cmp
jmp
daa
jo
cli
scas
cmp
std
push
in
cmp
sub
sbb
cs
sub
mov
addr16
mov
pop
enter
je
repnz
dec
stos
inc
loopne
mov
mov
cmp
jno
outs
pop
cmp
jns
push
sbb
test
retf
cmp
dec
xchg
pusha
inc
dec
add
mov
ja
jo
jge
push
lock
in
pop
jno
rcl
lods
shr
pop
or
xchg
mov
mov
addr16
pop
or
int3
mov
xchg
cwde
push
mov
sub
outs
mov
cli
xchg
and
push
cwde
lds
mov
rcl
pusha
rcl
and
add
fisttp
js
push
repnz
(bad)
(bad)
movs
or
dec
hlt
mov
je
aaa
sahf
or
xor
mov
cmp
sub
or
xor
cdq
and
mov
push
xchg
xor
loopne
(bad)
sub
mov
mov
mov
ror
push
push
enter
les
push
push
aad
jmp
or
jns
lods
sub
xor
push
ret
imul
or
cmps
pop
fcomp
sbb
xor
or
jb
or
pop
(bad)
(bad)
sbb
push
or
dec
pop
pusha
enter
or
mov
cmc
jo
dec
cmps
add
stos
les
out
add
out
and
mov
sbb
xor
jno
test
rcl
hlt
movs
and
imul
add
arpl
out
ret
mov
addr16
mov
scas
rcl
inc
loop
push
outs
jecxz
ret
cmp
sbb
mov
mov
jle
ret
pop
and
pop
in
dec
aas
mov
sbb
mov
or
add
xchg
popa
mov
sbb
(bad)
sub
pusha
mov
pusha
inc
dec
ss
into
jp
jecxz
jmp
or
xchg
pop
pushf
sbb
mov
dec
xchg
pop
stc
ret
(bad)
push
fdiv
add
adc
push
push
xchg
ret
mov
fcom
(bad)
in
push
pop
aad
imul
pushf
xor
dec
je
std
sbb
sbb
cmc
jo
push
xor
mov
xor
call
loop
push
or
mov
fcomi
les
pop
mov
loopne
aam
imul
inc
mov
hlt
rol
and
imul
pop
dec
outs
hlt
pop
lods
lods
add
mov
mov
push
(bad)
jge
add
das
lods
xor
sbb
sbb
adc
sbb
fmul
dec
cmp
adc
cmp
adc
push
push
(bad)
retf
add
push
push
cmp
aam
into
or
adc
sbb
push
or
add
iret
pop
inc
addr16
jno
clc
in
loopne
xor
push
push
push
xor
in
fadd
mov
pop
js
inc
outs
pop
out
and
mov
add
popa
sbb
push
ja
mov
add
in
mov
sbb
or
jg
add
pop
addr16
jno
sbb
push
dec
packuswb
arpl
das
inc
jg
sahf
sahf
lea
inc
jno
mov
mov
sbb
or
mov
sub
pop
fst
jno
pop
retf
js
js
fistp
out
mov
lock
add
pop
xor
dec
in
scas
add
mov
not
jmp
lock
adc
jb
lea
jne
xchg
hlt
addr16
inc
sub
add
xor
adc
cmp
add
shl
pop
jnp
mov
repnz
in
and
frstor
xor
mov
cs
inc
outs
or
idiv
ret
push
stos
or
test
(bad)
ds
mov
xlat
push
mov
(bad)
popa
push
ret
frstor
sub
(bad)
sbb
ins
jl
xchg
aaa
pop
loope
xchg
dec
mov
push
dec
or
xor
loopne
and
xchg
pop
xchg
cmp
pushf
popf
push
loopne
pop
push
mov
jecxz
sub
add
imul
xor
js
mov
fcom
movs
push
repz
pop
and
pushf
mov
(bad)
and
shl
mov
scas
nop
pop
sub
pusha
adc
pop
or
cld
jmp
repnz
dec
out
arpl
mov
adc
xchg
xchg
shl
adc
rol
pop
in
pop
cmps
cmp
repnz
push
cmps
pop
sub
test
enter
or
push
add
sbb
mov
frstor
add
sbb
and
fst
sub
cld
fidivr
xchg
adc
inc
or
sbb
sub
outs
pusha
push
sub
out
sub
add
adc
sbb
rcl
(bad)
adc
rcr
mov
mov
add
mov
(bad)
adc
(bad)
adc
and
loop
add
aam
out
jo
pop
cmp
pop
mov
(bad)
popf
mov
js
cmp
or
bound
xlat
sbb
outs
adc
scas
popa
and
je
mov
and
test
add
es
arpl
push
push
lods
addr16
mov
mov
inc
imul
sbb
data16
cmps
push
addr16
into
mov
mov
push
dec
fcmovnb
cmc
xor
enter
or
popf
pop
fistp
mov
lods
sub
mov
xchg
rol
aam
sbb
sbb
sub
pop
shl
stos
mov
jne
outs
cmps
and
sbb
add
mov
loopne
repz
adc
jno
push
leave
mov
sbb
fld
inc
pop
mov
loope
fwait
repz
mov
inc
inc
sahf
inc
dec
ss
shl
xchg
icebp
dec
popf
cmc
add
add
shl
hlt
stos
xor
dec
jb
cmc
xchg
out
push
mov
jno
leave
cmc
and
pop
call
mov
imul
adc
fistp
jg
mov
js
jmp
jecxz
sbb
push
lahf
nop
lods
fild
pushf
cmc
cs
adc
mov
pushf
xchg
cmc
push
xchg
js
xor
and
call
inc
pop
call
inc
cmp
adc
loop
add
pusha
daa
clc
xchg
or
or
jae
push
cli
dec
dec
js
jne
jnp
into
jecxz
pop
add
(bad)
fist
(bad)
pop
or
push
nop
(bad)
mov
jmp
rol
sbb
pop
(bad)
lds
xor
pop
cmp
inc
and
add
repnz
(bad)
adc
pop
ret
ret
mov
inc
add
loopne
xchg
loop
sbb
mov
ds
dec
test
adc
hlt
(bad)
(bad)
in
inc
fld
sub
xchg
mov
push
mov
push
xor
xchg
mov
or
(bad)
push
sub
mov
(bad)
add
add
cld
jmp
mov
out
lods
adc
in
xchg
or
fbld
and
mov
fstp
add
mov
pop
sbb
sub
(bad)
jns
dec
(bad)
adc
das
inc
adc
js
addr16
into
jmp
popa
mov
mov
sub
pushf
sahf
loope
push
mov
pop
adc
add
adc
imul
push
pop
xchg
mov
int3
sti
mov
dec
cmp
fcomp
or
ficom
jl
push
cmp
inc
pop
mov
(bad)
fcmovnb
mov
xchg
or
push
inc
shl
add
jmp
jmp
xor
sub
xor
push
mov
mov
add
sbb
jns
pop
pop
leave
inc
call
test
sbb
movs
sub
jno
add
daa
jne
jg
xor
sub
cli
mov
ret
mov
test
jmp
add
(bad)
pop
mov
mov
or
sbb
mov
or
or
pushf
lods
push
adc
jecxz
pop
add
ins
jnp
icebp
push
dec
(bad)
xchg
dec
sub
xor
repnz
pop
imul
(bad)
lds
arpl
mov
mov
ret
jnp
xor
icebp
mov
inc
pop
js
mov
in
popa
pop
xchg
fadd
or
add
push
rcr
add
mov
inc
retf
dec
pop
arpl
pop
dec
mov
mov
inc
add
test
mov
pop
lods
in
adc
ret
fld
fcomp
and
mov
sahf
ins
cmp
sbb
xchg
ret
loopne
std
iret
push
adc
jmp
xor
fld
mul
add
xor
sbb
sbb
xlat
adc
dec
jo
jg
leave
into
loop
shl
add
sbb
ret
test
xor
add
loop
mov
(bad)
cmp
add
pop
jns
and
loope
cmc
rol
and
rol
or
pop
shr
add
jl
inc
inc
mov
cmp
xor
jb
dec
pop
out
and
mov
fcmovb
test
xlat
js
nop
pusha
inc
hlt
add
sbb
inc
mov
arpl
pop
adc
rol
dec
pop
xchg
push
and
xor
cmp
xchg
pop
into
inc
inc
inc
scas
icebp
xor
add
sahf
ins
popf
cmp
adc
(bad)
cs
ins
cmp
jno
sub
push
loopne
jecxz
pop
mov
out
test
jmp
adc
lods
sub
ja
dec
add
jp
or
ret
in
add
push
cmc
or
xchg
aad
add
dec
mov
cmp
inc
or
jo
inc
xchg
cmp
adc
adc
cmps
lds
push
or
rol
repnz
push
push
dec
les
jns
dec
daa
jnp
arpl
pop
inc
xor
sbb
dec
or
and
xor
push
test
imul
call
aad
jle
jp
dec
jmp
dec
sbb
fs
adc
bound
mov
(bad)
and
stc
xchg
call
cmp
cmps
push
test
cdq
xor
fstp
loope
adc
push
add
add
and
loopne
repz
and
pushf
jns
pop
xor
fsub
mov
cmp
fmul
pop
sbb
xchg
sti
iret
add
cmp
pop
jmp
jecxz
and
mov
dec
out
inc
popf
ret
sbb
adc
mov
jl
push
xchg
rol
mov
cmp
or
and
jmp
add
addr16
mov
mov
test
add
xor
push
dec
mov
mov
mov
jno
add
stos
or
push
ror
lock
(bad)
ret
cwde
add
pop
adc
enter
sar
and
jbe
out
adc
add
iret
(bad)
and
add
in
pop
xchg
mov
repz
push
mov
das
mov
pop
aaa
cmp
sti
call
mov
mov
push
in
add
aaa
movs
sbb
(bad)
aam
and
sar
mov
(bad)
mov
or
mov
pop
add
out
xor
(bad)
sbb
inc
pop
xor
js
jmp
stos
sub
daa
push
cmovle
jp
add
mov
jb
add
imul
pop
out
loope
sar
add
das
daa
jmp
dec
push
(bad)
fidivr
ja
pop
popa
test
mov
mov
rcl
mov
sbb
push
jno
inc
inc
into
enter
femms
xchg
and
xor
pop
sub
pop
mov
cmps
pinsrw
adc
dec
inc
jmp
rcl
xor
mov
and
(bad)
push
jmp
xlat
add
rcr
mov
sub
add
lock
jb
sub
and
cmp
ins
sbb
push
inc
fst
pop
popa
in
sahf
mov
pop
xchg
mov
add
xor
dec
rol
ds
mov
add
add
push
stc
fs
test
mov
out
and
mov
in
mov
adc
fisub
cdq
cld
push
icebp
cmp
dec
push
and
mov
mov
fnstsw
add
xor
sbb
mov
add
repnz
into
jb
sbb
sub
add
dec
cmps
pop
jne
in
mov
mov
xchg
(bad)
or
ret
cmp
xchg
and
xchg
xchg
adc
jp
loope
or
or
adc
pop
add
pop
add
cs
pop
loopne
loop
add
outs
or
pushf
inc
mov
int3
adc
aam
addr16
jns
inc
xchg
xchg
pop
add
jo
mov
push
call
js
sub
sbb
aaa
jp
push
movs
jb
xor
xor
popa
imul
loopne
hlt
lock
mov
and
mov
cmp
push
lahf
jle
xchg
sbb
outs
xor
dec
adc
mov
lahf
dec
jbe
xchg
adc
rol
xchg
ret
sub
pop
das
xor
cmp
js
mov
push
adc
lahf
cmp
nop
xchg
dec
fst
push
jo
pop
scas
mov
pop
inc
rcl
add
dec
push
ds
cmps
jnp
je
scas
push
pop
xor
rol
add
jecxz
sar
cld
push
test
pop
xchg
ror
inc
test
push
iret
add
daa
mov
and
iret
mov
adc
mov
mov
push
or
jbe
adc
sub
pop
mov
xchg
lods
rcl
(bad)
push
not
loopne
mov
out
mov
adc
dec
pop
push
sub
sub
js
sbb
fimul
jnp
mov
xor
xlat
pop
(bad)
mov
mov
and
mov
shl
add
pop
jge
les
push
and
repnz
js
call
lock
adc
out
adc
dec
mov
xor
or
add
imul
push
sahf
cmp
loope
mov
push
cmp
ret
add
retf
inc
mov
aam
or
pop
or
mov
or
gs
dec
and
fstp
bound
cmp
iret
repnz
push
add
in
data16
xor
arpl
or
cli
and
icebp
mov
les
js
or
jae
pusha
sub
fs
push
push
retf
or
xor
add
fld
rol
daa
and
inc
ret
dec
push
repnz
lods
or
sbb
inc
dec
lock
or
xchg
pop
loopne
xchg
jle
inc
test
sbb
ret
repz
sahf
inc
xchg
cwde
lahf
mov
jno
call
std
sbb
mov
mov
sub
jecxz
arpl
aam
scas
pop
loopne
sub
pop
xor
and
bound
in
add
xchg
xor
sbb
jb
inc
mov
mov
(bad)
movs
inc
inc
sbb
xor
xor
int3
leave
mov
xchg
add
dec
or
mov
int3
fld
pop
or
dec
xchg
out
loop
add
mov
mov
repz
mov
adc
ret
xor
or
nop
push
adc
into
dec
jo
fadd
push
push
loope
gs
sbb
lea
adc
fs
inc
xor
ret
cmp
into
fistp
xchg
or
mov
js
mov
pop
push
les
xor
dec
cmp
ror
pop
inc
clc
cmp
sub
ficomp
push
in
les
(bad)
xlat
inc
inc
jns
lock
lidtd
add
add
loopne
inc
sbb
loope
and
shl
nop
cmp
stos
sbb
sar
and
lock
jmp
fdivr
fs
xchg
push
add
or
dec
mov
movs
movs
aas
retf
push
xor
pop
mov
inc
or
xor
jne
ffree
inc
dec
repnz
pushf
add
jmp
jnp
pop
jmp
sbb
mov
or
cmp
sar
mov
mov
jb
cmp
jae
cmp
or
addr16
ret
stos
mov
aad
xor
test
dec
push
fisub
cmp
fldcw
(bad)
fcomip
xor
mov
cmp
nop
outs
je
mov
push
addr16
das
out
mov
in
cmp
aaa
xor
jg
movs
daa
push
jnp
dec
pop
fisttp
fild
mov
cli
pop
retf
loop
repz
fdiv
push
lahf
cwde
mov
es
add
dec
mov
jl
ds
add
inc
clc
pop
les
pop
aam
adc
fidivr
add
mov
cmp
push
xlat
add
add
in
retf
imul
add
in
cmp
cs
loopne
push
mov
push
mov
les
jecxz
jo
ret
jb
add
lods
ja
cmp
sbb
jmp
mov
pusha
xlat
scas
pop
sbb
sub
and
dec
mov
pop
mov
int
mov
sub
pop
xor
iret
out
mov
sbb
or
cmp
gs
xchg
pop
xchg
push
ins
aaa
push
lods
add
jge
ins
sub
mov
rcr
inc
mov
pop
js
pop
push
les
push
loopne
shl
movs
aaa
out
fidiv
hlt
(bad)
loopne
(bad)
xchg
or
push
pop
mov
inc
xor
sub
loopne
mov
cmp
repnz
pushf
mov
or
adc
sub
enter
push
xchg
icebp
mov
cmp
mul
and
dec
cmp
fidiv
shl
or
or
sbb
jmp
mov
adc
inc
mov
out
nop
mov
pop
xor
das
popf
xchg
inc
mov
xchg
scas
sbb
mov
ja
jnp
adc
jle
push
mov
cmovb
sub
sbb
lahf
sbb
in
or
cmp
popf
add
outs
sbb
mov
retf
xchg
sbb
cmp
push
cmp
aad
popa
xor
retw
add
or
sbb
test
jnp
movs
in
mov
sbb
mov
and
jbe
pop
stos
in
pop
aam
add
cld
mov
(bad)
jg
dec
xor
into
xchg
push
or
inc
imul
aam
xchg
adc
gs
sub
or
mov
jl
cli
rol
push
pop
mov
call
jecxz
in
jmp
xchg
dec
mov
inc
inc
repnz
leave
mov
lock
cmp
pop
pushf
and
xor
xlat
cmp
pop
sbb
add
retf
pushf
movs
dec
je
rol
cmp
test
push
inc
fst
mov
xor
inc
inc
sbb
movs
and
shl
dec
inc
cdq
xor
rcl
jns
sbb
sbb
aas
xchg
retf
enter
mov
sbb
add
add
dec
cmc
mov
sub
pop
push
fs
fwait
sar
mov
lea
leave
call
xchg
xchg
ret
adc
imul
ret
pushf
aam
or
clc
pop
shl
pop
pop
sbb
xchg
xchg
jecxz
jns
ror
xor
nop
mov
push
push
dec
mov
pop
inc
sub
push
adc
sub
daa
outs
(bad)
mov
test
out
add
shl
je
cmp
and
sub
or
popa
es
in
xor
push
rol
pop
fsubr
sbb
adc
fisubr
scas
jae
les
adc
hlt
lock
xor
cmp
out
ins
jl
in
sbb
push
mov
sti
cdq
cmp
(bad)
fld
rcr
lock
dec
cmp
inc
arpl
inc
arpl
movs
inc
xor
xlat
cmp
mov
shl
cmps
sbb
cmp
shl
lods
mov
jmp
xchg
ret
push
cmps
sub
sbb
pop
(bad)
aam
iret
ret
cmp
cmp
xchg
push
ficomp
jge
inc
arpl
dec
inc
pop
sbb
cdq
jmp
push
dec
and
test
add
and
fldenv
(bad)
mov
and
add
jae
adc
cmps
push
dec
int
retf
mov
ror
or
dec
sbb
popa
add
adc
cmp
sbb
pop
mov
and
jo
retf
lods
sub
mov
add
inc
push
fisttp
cmp
mov
pushw
xchg
dec
sbb
mov
xchg
aad
icebp
les
out
inc
rcl
(bad)
mov
adc
add
dec
clc
das
retf
add
popa
in
pop
jmp
dec
jb
(bad)
or
cmp
and
js
sub
mov
dec
loope
ret
rol
xchg
mov
loopne
mov
popa
call
xor
cmps
aad
jecxz
xchg
(bad)
int3
mov
pop
push
test
cmp
addr16
mov
call
push
push
push
pop
in
(bad)
ss
adc
and
por
cmp
aaa
xchg
and
push
jge
mov
movs
jne
pop
out
addps
add
mov
ret
imul
or
push
push
and
aaa
mov
push
sbb
(bad)
movs
add
sbb
rcl
jo
popa
add
movs
add
adc
and
adc
imul
or
mov
in
rcr
fld
push
jb
nop
sbb
xchg
lods
xchg
dec
ins
dec
sub
xor
js
pop
hlt
pop
inc
aaa
mov
into
push
iret
ror
add
and
jmp
mov
iret
js
pusha
in
iret
nop
rol
arpl
or
and
jge
shl
bound
and
xor
add
jp
mov
push
bound
(bad)
fdivr
dec
sahf
pushf
dec
(bad)
sbb
sub
out
test
adc
push
imul
jno
cwde
call
sub
lahf
ret
loope
mov
sbb
dec
add
adc
adc
mov
popf
mov
or
mov
push
and
and
das
cmp
cmp
jmp
lea
out
adc
repnz
xor
push
cmp
iret
dec
pop
mov
and
cmp
in
in
mov
jae
retf
cdq
pop
repnz
sahf
xor
adc
retf
sub
aam
or
fldenv
loopne
scas
xchg
dec
sbb
cmp
aaa
add
push
mov
add
or
cmp
push
add
popa
adc
jnp
shl
add
pop
adc
push
mov
xor
push
shl
fild
adc
jne
adc
xchg
jnp
cmp
ss
enter
jns
cmp
push
push
xor
fld
sub
gs
pop
loop
mov
or
imul
add
or
pop
lock
dec
and
pop
xor
push
add
pop
push
cmp
sbb
inc
jae
cmova
xchg
sar
call
add
pop
div
or
or
je
cmps
sahf
xchg
jg
mov
lods
div
push
gs
out
cmp
sub
int
lock
outs
into
loopne
add
and
mov
hlt
lods
aad
dec
mov
push
data16
dec
and
push
les
ja
retf
lods
xor
push
push
push
add
shl
out
outs
in
jne
sbb
loope
movs
xchg
pop
jmp
adc
lods
outs
ret
cdq
popf
mov
in
adc
ror
rcr
sbb
or
jb
dec
popf
lock
je
in
cmp
cmp
cmp
loop
adc
popa
les
lahf
cmp
cs
lods
inc
or
pop
adc
adc
les
call
fadd
mov
fld
nop
sbb
inc
dec
xor
mov
inc
push
ret
sahf
xor
add
in
sbb
ret
cdq
enter
xchg
inc
inc
fs
cmp
ins
mov
pop
push
sub
add
sbb
sar
sbb
imul
pop
pushf
mov
xchg
mov
mov
arpl
push
fadd
xchg
push
mov
adc
cmp
jae
dec
mov
call
retf
add
retf
jno
and
mov
rol
pop
jne
sbb
sbb
in
je
lock
cmp
(bad)
pusha
fsubr
movs
add
pop
cmp
cmc
ins
popa
loopne
dec
xchg
fcmove
xlat
dec
xchg
cli
xor
pop
dec
dec
sub
inc
int
adc
iret
scas
mov
mov
dec
adc
icebp
dec
retf
mov
pop
jae
popa
popa
xchg
adc
or
xchg
lock
dec
in
test
and
(bad)
aaa
scas
jbe
call
movs
addr16
mov
pop
addr16
mov
not
push
addr16
jmp
loopne
mov
sub
adc
inc
dec
fadd
daa
push
(bad)
jns
cli
xchg
in
sub
(bad)
adc
xor
out
retf
gs
jl
jno
mov
xchg
xor
loope
mov
mov
in
outs
add
stos
or
frstor
jecxz
pop
pop
adc
aad
js
mov
lock
mov
and
cmp
add
pop
add
cmp
mov
jle
dec
inc
push
popa
scas
fnsave
sub
leave
pop
cmp
mov
push
cmp
adc
and
popa
lds
into
fucom
retf
jbe
and
cmp
dec
add
inc
repz
lods
mov
xchg
out
inc
mov
xor
pop
pop
sbb
xor
mov
jl
xor
ss
adc
xor
xchg
and
mov
or
cmps
je
mov
xor
sbb
mov
mov
push
lods
lds
out
arpl
add
sub
xor
ret
pop
adc
les
stos
cmp
js
ins
retf
pop
in
dec
or
pop
outs
scas
add
add
or
int
mov
jbe
xor
mov
ret
jo
lods
lsl
pusha
aad
cld
mov
jo
dec
xor
xor
xor
ret
ror
inc
cmp
sub
mov
jns
and
push
js
adc
pop
fst
js
sbb
nop
xchg
test
and
cmp
pop
loopne
jae
and
cmps
add
sbb
int
mov
pushf
or
sub
mov
push
popa
sub
js
das
cmp
jle
lods
or
mov
pop
sub
jmp
or
sbb
js
mov
sbb
or
repnz
jbe
push
fdivr
sbb
sub
lods
dec
(bad)
cmc
ins
jmp
pusha
push
shl
sbb
pop
add
mov
(bad)
mov
(bad)
int3
sbb
dec
jo
add
shl
sub
pop
xor
lods
mov
mov
retf
push
xor
inc
mov
mov
xchg
push
pop
loope
mov
mov
cmp
rcr
adc
lea
into
in
mov
rol
xchg
fldenv
test
jge
dec
or
or
cmp
outs
or
add
inc
dec
movs
or
loope
movs
jae
or
addr16
sbb
jecxz
leave
clc
mov
xchg
sub
sbb
fcmove
imul
jbe
xor
add
dec
pop
push
or
daa
pushf
xchg
jo
cs
ret
mov
add
pop
push
xor
xor
leave
ret
sbb
loope
int
aad
xor
jecxz
nop
add
xchg
xchg
std
ror
dec
push
mov
push
inc
push
or
rol
(bad)
test
push
outs
js
xlat
stos
ud2
ja
add
and
add
lods
cmc
lock
mov
ret
adc
inc
xor
sub
pop
arpl
dec
loopne
push
in
add
xor
out
jo
and
and
cmp
movs
in
and
sbb
dec
cli
jmp
xchg
push
fwait
mov
mov
push
sub
sbb
movs
call
enter
mov
pop
jmp
frstor
loope
sbb
mov
mov
je
sub
pop
loop
mov
enter
add
jecxz
mov
cmps
enter
inc
popa
sub
ja
sbb
sbb
sbb
inc
pushf
out
into
pop
lods
adc
(bad)
js
jl
cmp
ja
aam
push
dec
mov
jns
xor
sub
add
push
dec
cmp
mov
fnstsw
gs
fcomp
out
xor
daa
test
rcr
je
repnz
and
mov
mov
loopne
fwait
test
sub
sbb
mov
sub
sub
sub
xchg
add
lahf
jbe
inc
arpl
fild
pop
mov
ret
push
into
sbb
or
jecxz
mov
imul
push
loop
inc
sbb
stos
nop
ja
mov
or
pop
int3
or
test
pushf
xchg
fld
fwait
(bad)
cmp
and
aam
mov
inc
nop
scas
into
adc
je
mov
inc
js
je
das
test
and
and
inc
sbb
add
or
in
loope
and
pop
sub
add
mov
pop
inc
pop
mov
pop
push
es
ror
jle
push
repnz
aad
mov
jno
test
and
test
lods
ins
retf
dec
xchg
test
or
in
sub
addr16
cmp
push
add
hlt
sahf
add
add
or
and
inc
inc
or
arpl
pop
adc
ror
mov
std
xchg
xor
pop
jnp
jmp
enter
cmp
jno
or
mov
pshufw
cmc
(bad)
out
mov
pushf
xchg
add
push
cmp
pop
ret
aad
test
sub
or
and
gs
lock
popa
inc
xor
cmp
clc
mov
add
or
loopne
jns
xor
mov
loop
push
jmp
cmp
push
ret
push
int
mov
and
loopne
lods
add
aad
pusha
je
in
mov
and
jbe
and
into
ret
sbb
cmp
pop
popf
popa
or
test
sbb
push
inc
int3
imul
mov
cmps
mov
mov
lods
mov
push
cs
pop
pusha
push
ins
mov
sub
inc
(bad)
retf
adc
loope
ret
or
leave
lahf
das
cmps
inc
call
dec
out
dec
leave
sbb
mov
imul
mov
jp
sub
daa
dec
add
add
in
(bad)
xchg
popf
movs
mov
aaa
pop
adc
pop
and
mov
xor
(bad)
push
imul
mov
jmp
add
fcom
jp
mov
dec
sar
push
test
jmp
test
mov
gs
jb
sbb
or
call
mov
or
dec
mov
shl
leave
sahf
mov
loope
movs
adc
sbb
int3
hlt
test
adc
dec
icebp
mov
fsub
jo
jecxz
sub
bound
sub
pop
jb
dec
ss
and
cld
in
mov
add
aad
sbb
xchg
mov
cmp
adc
and
push
cs
out
xchg
mov
mov
add
cmps
jmp
jge
push
jb
inc
add
movs
std
sahf
mov
retf
cmp
adc
in
push
mov
add
les
sbb
cmp
inc
fdivr
repnz
mov
frstor
ror
bswap
loop
push
mov
pop
leave
shr
out
movs
or
xor
pop
adc
xor
adc
fidivr
fmulp
sbb
xchg
and
pop
pop
test
lods
(bad)
adc
loopne
cmp
pop
and
push
ret
mov
add
inc
dec
xchg
cmc
inc
clc
in
inc
loope
retf
ins
push
aaa
rol
retf
loop
mov
pusha
popa
cmp
call
loope
stos
or
hlt
jns
pop
ret
and
or
lock
mov
pop
pop
jmp
outs
pusha
push
sbb
jno
jmp
jge
xor
or
test
and
adc
cs
inc
arpl
lods
cli
les
jmp
jmp
adc
push
push
dec
ficom
out
rol
xchg
fiadd
dec
pop
retf
xchg
sbb
pop
jno
test
sub
and
and
xchg
popa
add
imul
jnp
fld
sahf
jo
sbb
sti
aas
int
add
adc
cmp
das
pop
jmp
xchg
loope
jbe
sub
ds
sbb
cmp
sbb
imul
mov
cmp
push
push
test
icebp
jmp
sbb
dec
ja
ret
mov
rol
inc
mov
add
stos
pusha
loopne
arpl
ja
dec
repz
cwde
xchg
mov
lea
sbb
mov
lds
add
pop
cmp
lods
neg
(bad)
sbb
sbb
(bad)
call
push
movs
repnz
xor
stos
pop
ins
jmp
mov
shr
cmp
mov
lods
pusha
bswap
pop
dec
mov
mov
mov
jmp
sar
pop
addr16
sbb
inc
mov
push
(bad)
aad
cmc
mov
(bad)
repnz
sahf
inc
rol
int3
jge
xchg
fs
rcl
mov
icebp
and
adc
addr16
mov
nop
jp
cmp
out
inc
sbb
add
cmc
shl
inc
mov
je
push
gs
fild
adc
cmp
aaa
and
jmp
xor
enter
cmp
out
leave
push
mov
popa
sub
shl
rcr
movs
in
retf
xor
out
mov
inc
xchg
xchg
std
or
hlt
mov
adc
pop
popa
dec
and
inc
mov
adc
and
xor
adc
retf
add
sub
add
into
xor
out
dec
sbb
mov
and
fnstenv
retf
cmp
xchg
jl
jno
jae
mov
xchg
push
out
pop
add
mov
stos
add
js
inc
mov
mov
or
jb
lds
push
nop
jge
loop
sbb
ins
mov
sub
pop
clc
(bad)
stos
cmp
xor
sbb
ret
lods
mov
cmp
xchg
out
in
mov
call
out
push
movs
add
sbb
mov
or
call
mov
ret
int3
movs
sbb
xlat
aam
cmp
arpl
add
xchg
cmp
push
pushf
xchg
mov
dec
push
push
push
les
add
xchg
cs
cmp
inc
push
xchg
mov
aas
addr16
sub
in
popa
push
mov
ret
lods
fsubr
js
add
mov
dec
add
push
fcom
dec
test
sbb
movs
rcr
adc
xchg
xchg
movs
adc
sbb
mov
add
push
xor
shl
popa
pusha
imul
cmp
sub
push
outs
sub
inc
pop
ror
inc
sahf
push
dec
imul
test
mov
sbb
pop
ins
pop
cmp
mov
(bad)
es
mov
cmps
cmc
or
sbb
cmp
das
jmp
daa
test
test
jmp
push
push
cli
pop
retf
addr16
cmp
adc
rcl
jmp
xchg
ret
jle
jecxz
pusha
cmp
mov
mov
and
push
repnz
test
gs
mov
jo
ja
mov
jno
sbb
into
repnz
int3
shl
sub
cld
jb
pop
fadd
je
pop
cmp
push
sub
jb
sbb
xchg
push
into
cmp
daa
fnstcw
bound
daa
(bad)
loopne
loop
mov
pop
inc
mov
push
pop
inc
xchg
daa
add
(bad)
mov
(bad)
sub
or
out
add
xchg
push
fidiv
add
push
sub
retf
adc
and
pushf
and
data16
or
lds
jg
xor
add
and
imul
cmp
lds
mov
inc
dec
mov
jge
xor
push
sti
and
retf
or
xchg
repnz
dec
jmp
xor
lods
test
pop
imul
mov
push
cdq
mov
jb
xor
push
into
pop
enter
std
popa
push
mov
and
xchg
rol
pop
cmp
or
adc
adc
xchg
fcomp
push
cmp
pop
retf
cmp
sar
push
mov
push
pop
inc
or
call
jb
xchg
dec
js
ret
rcr
xor
dec
sub
fdiv
sub
or
fcom
ret
loopne
ret
sar
test
nop
into
lock
xchg
xor
mov
or
jmp
ja
jns
test
lahf
icebp
in
mov
cmp
adc
sahf
fisub
mov
pop
sbb
popa
mov
mov
fsubr
mov
movs
jmp
xor
jmp
ret
mov
xchg
or
adc
jns
in
dec
retf
jns
jmp
mov
pusha
mov
add
xor
pop
add
sub
ret
inc
leave
sbb
cdq
add
(bad)
mov
jp
and
and
sbb
push
rcl
adc
or
push
nop
ins
sub
dec
sub
and
mov
pop
mov
mov
dec
fiadd
add
(bad)
(bad)
fnstsw
je
push
or
cmps
mov
call
push
sub
(bad)
hlt
push
cmp
add
pop
add
jno
sti
add
or
shl
mov
scas
sbb
(bad)
sbb
jle
cs
das
mov
mov
push
push
js
leave
inc
inc
add
mov
add
push
xchg
jae
mov
sbb
xchg
test
add
cmp
(bad)
adc
ret
or
pop
cdq
dec
retf
(bad)
mov
fisubr
aam
movs
adc
add
lods
(bad)
into
sbb
or
div
enter
xchg
jb
imul
pop
jmp
movs
sbb
push
aas
mov
add
sub
js
sahf
rcr
mov
and
mov
stc
xor
daa
mov
mov
sub
cmp
sbb
mov
add
sub
jp
leave
jmp
sar
rol
popf
xchg
gs
add
repnz
cmp
or
sbb
xor
clc
push
loopne
push
imul
add
sbb
cmp
inc
lock
in
push
mov
mov
xchg
and
lods
icebp
sbb
data16
inc
rcl
lock
or
cmp
cmp
cmp
movs
xor
cmp
mov
add
enter
push
ss
push
cmps
(bad)
sbb
pop
push
cmc
push
popa
push
jmp
div
cli
jge
or
sbb
sub
mov
(bad)
in
fcomp
pop
rol
adc
jnp
rol
scas
jns
push
sub
jmp
mov
and
mov
sub
push
pop
push
or
(bad)
add
retf
clc
mov
add
ret
mov
xchg
adc
ss
dec
inc
nop
push
leave
mov
(bad)
outs
pusha
dec
outs
call
pop
pushf
push
inc
ins
shl
xchg
jg
sbb
mov
xchg
nop
push
xor
leave
xchg
push
iret
adc
and
push
or
in
loopne
add
mov
fdivr
js
jo
dec
sahf
scas
jae
loopne
inc
sub
and
mov
mov
idiv
cmp
shl
push
inc
cmp
mov
sub
cs
xchg
aad
std
adc
dec
leave
loopne
pop
rol
outs
jne
inc
jmp
fcom
push
enter
inc
sub
mov
and
adc
mov
fcom
xchg
add
adc
jbe
xchg
popf
xor
inc
mov
mov
push
addr16
jge
sbb
mov
stc
jl
aad
mov
outs
pusha
ins
pushf
aam
inc
add
or
leave
and
mov
aas
add
ins
mov
test
mov
mov
fimul
xor
pop
push
lahf
repz
mov
je
xor
inc
loop
cmp
cmp
mov
cmp
test
push
enter
leave
mov
cs
inc
and
(bad)
out
mov
sub
mov
sbb
je
inc
mov
push
mov
jle
xchg
xor
pop
sbb
imul
push
jl
hlt
sub
(bad)
std
sub
jo
cmp
cmp
pop
arpl
sub
jno
(bad)
daa
add
sub
fisub
sbb
pop
xor
test
jmp
mov
imul
xor
in
lea
add
mov
test
mov
and
lods
shl
xchg
xor
pop
cmp
adc
cmp
add
push
xor
int
inc
sbb
cmp
mov
cs
daa
pushf
jne
mov
je
mov
inc
lods
icebp
ins
sbb
outs
pop
outs
xor
pushf
add
imul
sub
xor
and
lea
xchg
outs
sub
jmp
aam
xchg
rcr
lods
inc
and
add
lods
jl
inc
loopne
sar
and
out
test
or
xlat
jecxz
bound
cmp
dec
cmp
repz
ss
xchg
cmp
test
shl
xor
ror
(bad)
in
fst
inc
fsub
shl
cmp
sub
mov
shl
lods
mov
mov
mov
mov
add
test
shufps
in
mov
xor
sub
repz
mov
adc
mov
or
push
imul
cwde
test
and
cmp
jo
sbb
mov
add
out
adc
inc
rcl
xchg
push
cmp
loope
int
adc
fs
ss
ror
jo
jecxz
add
lods
add
sub
dec
enter
stos
add
xchg
and
sub
push
aaa
mov
adc
mov
(bad)
push
add
pop
sub
into
int
or
jo
sahf
jns
add
add
jp
xchg
lahf
mov
jbe
and
fmul
push
retf
sbb
cmp
pop
jl
and
cmp
imul
jo
ror
xchg
push
xor
mov
ror
scas
sub
(bad)
lea
xor
sbb
bound
xor
sub
lds
pop
cmps
sub
dec
jno
js
sub
scas
out
jae
xchg
push
mov
lods
daa
inc
cmps
pusha
mov
enter
aad
adc
sub
ins
and
inc
stos
cld
mov
xor
push
dec
adc
shr
cmp
push
xchg
shr
sbb
cmc
les
sbb
js
or
adc
mov
out
fwait
add
call
pop
in
adc
sub
mov
ret
mov
inc
xor
aam
shl
xchg
push
cmps
adc
ins
mov
push
rol
cdq
loopne
xchg
push
xchg
sar
rol
movs
mov
data16
in
cmp
and
dec
push
daa
inc
push
sbb
sub
sbb
cmp
loopne
and
xchg
fimul
or
add
pop
add
inc
out
imul
lock
jp
sbb
movs
push
mov
cmp
popa
das
sbb
and
inc
push
adc
ror
xchg
hlt
add
mov
pop
dec
pop
xchg
sub
jo
fld
fimul
pop
push
add
jns
lahf
adc
ins
std
add
jne
sub
lahf
ds
cdq
xchg
rcr
inc
sbb
fild
test
fsub
add
jg
lock
add
fst
xchg
sub
sahf
xor
mov
cwde
add
xchg
movs
mov
or
push
pushf
movs
movs
push
outs
adc
push
mov
pop
push
mov
xchg
enter
xor
pop
pop
lods
sub
push
div
lock
rol
sti
sbb
sbb
addr16
dec
sar
mov
and
movs
jge
das
add
inc
inc
jmp
fwait
clc
outs
popf
or
add
aad
add
sbb
sub
adc
mov
ret
js
sar
push
dec
add
(bad)
pop
ja
shl
pop
or
clc
gs
cmp
mov
and
push
addr16
dec
loope
dec
pop
add
ret
push
jle
mov
pop
jns
popf
ror
cmps
cmps
inc
(bad)
test
inc
lods
outs
sbb
pop
pop
sub
loopne
ja
fcmove
lock
(bad)
sbb
mov
clc
add
fcmovnbe
inc
or
ja
xor
enter
pop
ret
jmp
ret
push
stos
and
mov
or
daa
lods
cdq
jb
jno
adc
xor
dec
(bad)
and
into
adc
adc
mov
and
in
je
aaa
jo
into
mov
mov
mov
(bad)
sbb
mov
and
outs
cmp
and
dec
pop
dec
aaa
fidiv
mov
mov
push
sahf
add
dec
xor
arpl
jno
sbb
xor
mov
mov
gs
mov
and
repz
dec
xchg
jo
into
sbb
ins
shr
pop
pop
rcr
inc
add
mov
adc
push
sbb
stc
jl
push
xor
mov
out
popa
sub
mov
in
lods
mov
pop
in
add
xlat
pop
inc
fnstcw
adc
or
pushf
and
push
loopne
cmp
jmp
ret
rol
sbb
add
sbb
sbb
mov
int3
push
jne
inc
sub
clc
xor
test
mov
js
or
cmp
mov
clc
xor
cmps
pop
xchg
jno
mov
push
sbb
inc
shr
xchg
dec
push
pop
and
jecxz
mov
pop
imul
sahf
push
inc
inc
xchg
sbb
or
inc
pop
arpl
and
and
cmp
imul
or
pop
sbb
in
sub
push
inc
addr16
push
call
or
cmps
inc
adc
rol
lds
inc
arpl
mov
stos
and
int3
adc
xchg
jmp
mov
mov
cmp
mov
mov
mov
adc
push
bound
shr
pop
dec
clc
test
sbb
adc
pop
daa
cmp
xchg
dec
cmp
or
pusha
loopne
dec
xchg
add
push
aas
data16
sbb
pop
shl
pop
mov
dec
cdq
inc
fbstp
loopne
sbb
push
cmp
push
mov
mov
xchg
ds
xchg
and
or
pop
inc
xchg
xchg
xor
jcxz
jo
sub
jne
arpl
mov
jno
jo
retf
add
sbb
add
imul
add
sbb
hlt
inc
repnz
je
fwait
mov
inc
ror
mov
je
push
(bad)
pop
push
and
sahf
and
arpl
sub
pushf
mov
test
jo
pop
loopne
sbb
ja
daa
cmp
inc
push
test
adc
inc
adc
int3
sub
cdq
push
(bad)
shl
cmps
push
aas
mov
lods
jle
cdq
(bad)
push
mov
ror
add
or
test
add
test
mov
pop
out
cwde
add
mov
add
ins
cmp
mov
mov
sub
stos
loop
cmps
ds
jnp
je
mov
movs
xchg
xchg
adc
jnp
setbe
push
rol
(bad)
push
cmp
xchg
call
fsubr
or
cwde
sbb
cmp
push
shl
jo
loope
add
xchg
jmp
cmp
xor
dec
outs
or
add
xor
aaa
sbb
xchg
inc
sub
jmp
xor
(bad)
retf
clc
xor
das
scas
stos
loop
je
dec
call
push
inc
push
and
xor
jecxz
sub
sbb
cs
and
ins
cmc
scas
(bad)
das
dec
fcom
mov
fld
nop
call
mov
mov
adc
div
js
jmp
inc
ins
dec
sbb
jns
adc
push
ficomp
leave
fdiv
push
pusha
inc
in
add
and
out
xlat
imul
fild
loopne
mov
lock
push
sahf
jp
push
cmps
fnstsw
inc
fist
repnz
jecxz
enter
sub
lods
aad
adc
xor
pop
mov
inc
js
lods
ror
loopne
aam
dec
cli
js
pop
push
sbb
jle
into
into
sbb
sti
mov
push
ja
mov
sbb
xchg
nop
aaa
loope
add
xchg
jns
xchg
int
and
popf
sub
enter
push
adc
and
sbb
loopne
rcl
nop
popf
push
(bad)
loopne
and
xchg
mov
cli
push
out
mov
mov
jmp
loope
adc
aad
jbe
mov
or
jno
ret
sbb
lods
jl
add
popa
add
jmp
movs
dec
inc
sbb
inc
fsub
outs
mov
add
mov
(bad)
cmp
aam
imul
push
xchg
jo
mov
dec
sbb
push
sbb
mov
push
les
sahf
cmp
js
loopne
retf
leave
pop
retf
std
add
sub
pop
xchg
(bad)
sub
cmp
(bad)
cmp
sub
cmps
sbb
push
xor
in
mov
inc
or
adc
push
aaa
inc
out
test
out
jmp
addr16
pusha
xchg
jge
pop
movs
and
ja
inc
outs
cmps
mov
sub
xlat
mov
xchg
inc
xlat
clc
mov
popf
es
outs
sbb
int
je
mov
push
int3
xlat
repz
jo
out
int
mov
dec
stos
or
mov
fsub
mov
jle
sub
rcr
cmp
repnz
xchg
jecxz
or
les
push
sar
ja
ret
sub
cmp
xor
jge
jnp
push
inc
aaa
mov
(bad)
push
dec
jmp
cwde
div
pop
(bad)
in
or
push
clc
sbb
inc
cmp
popf
mov
inc
pop
cwde
or
adc
dec
jns
mov
add
mov
sub
sbb
ins
pushf
and
push
lahf
adc
inc
or
rcr
imul
pusha
movs
cmps
jne
cmp
dec
xchg
test
fld
xor
(bad)
jl
xchg
cmp
xchg
xchg
outs
jae
pusha
or
mov
adc
add
mov
mov
jns
jb
pop
arpl
das
bound
repnz
dec
jo
jb
dec
adc
mov
dec
or
add
loop
add
loopne
mov
xchg
(bad)
loope
jb
adc
punpckhdq
fiadd
ss
jns
pop
xor
xchg
sbb
jo
sub
cmp
mov
loop
aaa
xor
mov
push
call
clc
xchg
inc
pop
mov
ficom
pop
adc
ss
and
(bad)
stc
add
xlat
or
xchg
sub
test
jo
jecxz
pusha
sub
aam
repz
sub
mov
mov
mov
xchg
xchg
xor
inc
cs
loopne
mov
inc
mov
dec
dec
adc
add
adc
iret
ret
fdivr
pop
xor
xchg
mov
xor
retf
or
pop
fisubr
push
jb
and
mov
sub
in
and
das
repnz
or
lds
add
(bad)
loopne
das
jecxz
loop
add
sbb
push
(bad)
xor
cmps
daa
push
push
xor
ret
inc
adc
shr
sub
jecxz
imul
fdivr
pop
xchg
add
and
mov
in
sbb
push
bound
test
mov
shl
inc
push
loope
mov
sbb
mov
es
mov
dec
int
push
or
adc
cmp
ds
add
push
and
das
adc
push
lahf
movs
mov
lods
icebp
adc
jmp
faddp
pop
movs
in
or
inc
pusha
sub
fcom
rcl
and
dec
aam
or
fimul
or
outs
mov
sbb
adc
sti
xor
(bad)
pop
cmp
scas
adc
xor
add
or
mov
cmc
or
mov
lods
test
cwde
sbb
addr16
sub
movs
shl
cmp
xlat
(bad)
popf
xor
push
or
inc
and
das
lea
stos
push
cmp
add
and
add
xor
js
push
cmp
dec
or
ret
or
pusha
hlt
inc
loop
pop
loop
pop
sub
or
into
mov
push
sub
mov
jo
repnz
dec
push
sub
pop
push
pusha
popa
jmp
in
sub
dec
js
cmps
xor
push
outs
sbb
sahf
ret
or
xchg
outs
jno
daa
mov
add
cdq
(bad)
test
popf
fisttp
or
(bad)
dec
cmp
hlt
mov
fs
xor
sbb
shr
in
loopne
dec
js
or
push
xchg
push
inc
mov
jns
push
add
pushf
jbe
sahf
ins
inc
push
scas
pop
ds
in
jmp
inc
lods
clc
stos
in
xchg
add
rcr
mov
iret
inc
dec
pop
or
int
mov
mov
pop
into
push
jnp
sbb
das
movs
pushf
add
or
jne
add
push
addr16
xchg
es
dec
lods
pop
ins
js
mov
and
xor
popf
inc
cmp
inc
dec
pop
pop
jno
sbb
lea
(bad)
lods
or
cmp
mov
mov
je
std
mov
cmps
xchg
dec
or
in
out
pushf
les
daa
cmp
xchg
ror
sbb
bound
inc
lods
mov
cwde
inc
add
cwde
xor
packuswb
outs
jp
xchg
cmps
jo
jae
push
inc
cmp
pop
mov
and
push
push
test
jo
sub
xor
mov
mov
sbb
xor
mov
push
inc
ret
cmp
call
or
inc
lds
mov
sub
arpl
rcl
cmp
adc
retf
sbb
pusha
inc
xor
sub
sbb
cmp
inc
cmp
mov
pop
int
xor
hlt
aaa
dec
sbb
mov
aaa
jp
inc
pop
dec
push
(bad)
fnstcw
inc
imul
cmp
in
ficomp
cmp
icebp
xor
lods
(bad)
mov
clc
or
mov
icebp
outs
in
adc
hlt
pusha
adc
adc
adc
mov
or
loope
push
adc
xor
push
dec
loopne
mov
std
add
cmp
sbb
cld
popf
aam
mov
push
dec
nop
ds
hlt
sbb
sub
std
sbb
cmp
js
mov
pop
jae
or
rcl
sbb
popa
pop
lock
outs
frstor
xor
dec
shl
adc
and
cmp
or
or
gs
or
les
popa
imul
loop
mov
test
xchg
mov
xor
xor
sub
(bad)
push
shl
xchg
and
pop
cmp
mov
jecxz
mov
ins
add
cmp
xor
(bad)
(bad)
sbb
daa
mov
mov
cmp
dec
popa
or
push
sbb
retf
pop
fcmovnu
xchg
add
dec
or
addr16
xchg
mov
in
adc
lods
retf
fcom
fadd
nop
sbb
cmp
(bad)
xor
loopne
call
add
scas
mov
add
push
mov
daa
jl
lods
(bad)
sub
cmps
jecxz
popf
jne
daa
data16
cmp
lds
test
and
ins
loop
std
ret
push
sbb
movs
mov
hlt
jno
xchg
cmp
rol
repnz
mov
pop
xchg
pop
(bad)
(bad)
enter
fs
sbb
sub
rol
sbb
bound
jbe
pusha
sub
adc
sbb
mov
out
jo
fcomp
sub
popa
arpl
or
xor
cmp
xor
mov
loop
jno
or
lods
ficomp
jge
and
or
dec
rcr
mov
sbb
loop
dec
and
lods
inc
leave
ret
mov
movs
mov
xchg
out
inc
push
jge
mov
hlt
mov
pop
inc
jae
dec
into
push
in
pop
rcr
fmul
js
jmp
pop
sbb
daa
xchg
jne
retf
shr
adc
mov
cli
add
ret
sti
lds
cs
daa
je
push
add
clc
test
pop
pop
imul
dec
mov
mov
loopne
dec
add
add
mov
shl
mov
xor
mov
jo
pop
sbb
or
or
out
rcr
aaa
mov
jl
push
jne
jmp
sbb
lods
rcr
cmp
xchg
xchg
xchg
xlat
inc
xchg
xor
imul
adc
sti
mov
hlt
les
into
add
jo
push
repz
or
jnp
gs
fdiv
xor
repnz
and
cmp
int3
clc
fwait
push
add
js
jecxz
add
inc
add
loop
rcl
jmp
mov
out
sbb
pop
sbb
sar
xchg
sub
out
cmp
or
adc
mov
mov
in
dec
inc
test
cmp
inc
outs
pop
push
lods
push
inc
xor
or
mov
popa
loope
push
and
mov
cs
js
aad
xchg
into
sbb
and
les
jo
cmp
mov
pushf
add
jb
jmp
xchg
aad
rcl
mov
out
add
cmp
daa
ret
xchg
cmp
retf
retf
popa
add
imul
cmp
inc
xor
retf
push
(bad)
and
shl
xor
(bad)
push
ret
adc
cmp
sahf
ins
ret
sub
sub
(bad)
ja
das
sbb
cdq
mov
cmp
jae
inc
jl
fisttp
or
nop
popa
jno
lds
jge
adc
test
cmp
fisubr
xor
mov
inc
adc
test
and
stos
rol
popf
cmps
pushf
sbb
jno
call
lds
jg
sahf
inc
imul
je
mov
fsubr
popa
mov
sbb
sbb
push
add
mov
add
ror
mov
jbe
ins
or
sub
inc
addr16
lea
aad
inc
add
les
sbb
dec
adc
jmp
pop
mov
test
movs
xchg
or
jns
je
jecxz
sub
pop
out
and
rol
out
inc
and
(bad)
les
mov
xchg
ins
movs
mov
loopne
fadd
dec
in
xchg
cs
push
mov
ret
xchg
fisubr
inc
js
mov
es
or
or
sbb
in
js
(bad)
inc
ret
sbb
inc
mov
mov
adc
lods
lods
jg
(bad)
lods
aad
sbb
mov
inc
ret
fcmovnb
dec
push
shld
mov
test
push
clc
out
aad
dec
cmp
sbb
loop
ror
xchg
enter
sbb
adc
(bad)
jp
jle
adc
xlat
fs
and
xor
daa
shl
xchg
pop
sub
xchg
loop
and
dec
loope
imul
nop
gs
cld
dec
jo
mov
sub
dec
adc
pop
pusha
mov
jo
cmp
and
mov
sub
jno
aam
loope
push
push
daa
inc
leave
sub
jl
push
jbe
sbb
inc
(bad)
mov
pushf
pop
rol
das
ret
adc
adc
je
add
nop
(bad)
bound
sbb
popf
sbb
adc
movs
movs
xchg
mov
push
cmp
xor
sti
ret
inc
jge
jo
les
xchg
(bad)
loop
sbb
scas
in
jns
jno
add
xchg
into
add
cli
loop
ret
xor
test
sbb
or
bound
dec
inc
lods
sub
hlt
retf
sbb
xchg
inc
mov
scas
push
popf
test
sbb
(bad)
lea
or
sub
xor
leave
pop
pop
push
xchg
retf
add
or
ret
arpl
sub
sar
out
push
jp
mov
mov
push
xor
mov
into
xchg
jo
jne
adc
sub
loopne
adc
inc
cmp
idiv
lahf
xchg
push
adc
xor
mov
lea
cmp
xor
jae
(bad)
pop
push
mov
mov
inc
dec
sbb
and
jns
or
pusha
and
xchg
adc
sub
movs
inc
cmps
jmp
or
pushf
popf
es
test
movs
and
cmp
pop
push
repz
rcl
add
sbb
ret
mov
mov
adc
xor
xchg
sbb
push
icebp
sbb
div
xchg
inc
(bad)
cmp
retf
into
dec
sbb
dec
sub
mov
lods
adc
adc
push
rcr
cmp
or
cmp
dec
inc
js
mov
pop
add
leave
push
sub
mov
ss
fiadd
in
in
dec
call
ja
in
retf
aam
cld
mov
sbb
fdiv
mov
mov
stos
add
push
ret
(bad)
js
pop
call
rol
inc
cmp
mov
aad
dec
jb
xchg
rol
adc
out
adc
add
push
je
xchg
mov
xor
and
xor
ficomp
lds
xchg
repnz
sub
push
mov
add
sbb
xchg
xchg
jo
jo
test
inc
sub
xor
shr
and
xchg
or
data16
call
add
or
not
sub
or
jmp
and
xchg
gs
push
mov
add
push
pop
rcl
test
(bad)
and
es
sar
rcr
pop
or
and
sub
fistp
or
pop
pop
ret
mov
imul
(bad)
mov
sbb
and
inc
pop
in
xchg
aam
sub
fstp
push
mov
retf
mov
icebp
sub
mov
add
sti
daa
loopne
adc
loop
cmp
into
mov
jp
dec
xchg
jle
cmp
imul
test
fist
adc
ret
mov
jmp
sbb
xchg
ds
test
and
sub
rol
cmp
sub
or
movs
push
das
sbb
in
cmp
add
aam
adc
scas
adc
cdq
movs
mov
xor
push
js
jb
pop
mov
movs
fist
mov
int3
push
mov
dec
mov
inc
inc
loope
xor
ins
add
push
xor
cmp
repnz
or
cmc
pop
and
popa
push
jp
jle
test
adc
mov
cmp
xchg
push
jp
out
xor
lods
je
dec
ficomp
mov
or
fimul
sbb
xchg
push
adc
out
mov
retf
mov
data16
gs
cmp
mov
mov
arpl
shl
ins
and
mov
jno
inc
fnsave
add
popa
or
push
test
push
and
(bad)
ss
rcr
or
mov
xchg
mov
push
inc
pop
dec
jno
mov
cmp
gs
and
fimul
ss
and
xor
inc
std
cmps
mov
leave
(bad)
fdivr
hlt
jae
test
jecxz
pop
push
inc
fdivr
mov
ror
sahf
dec
mov
pop
rcr
xor
repz
sbb
mov
mov
loopne
popa
shr
mov
sub
in
pushf
inc
jbe
outs
dec
scas
sbb
cmp
adc
add
jmp
mov
arpl
mov
push
inc
cvttps2pi
mov
pcmpgtb
sub
dec
dec
sub
call
xchg
pop
add
scas
pop
lock
cmp
and
into
leave
out
loop
mulps
in
cwde
(bad)
mov
out
sub
int
jp
dec
xchg
add
mov
retf
add
dec
cmp
shl
inc
dec
jns
int
and
mov
iret
dec
cmc
aaa
repnz
pushf
mov
jl
cmp
ror
adc
sbb
xchg
pop
cmp
fwait
stc
add
add
loope
cmp
xor
mov
inc
add
leave
adc
enter
push
jnp
adc
(bad)
adc
dec
jbe
fwait
(bad)
mov
inc
pop
sete
cmp
or
shl
lods
mov
int3
cmp
nop
jecxz
pop
sbb
or
loop
(bad)
dec
push
push
movs
inc
sbb
xchg
rol
jp
dec
dec
ret
jae
es
or
hlt
sub
(bad)
adc
sbb
add
cmp
cmps
lds
xchg
mov
aaa
jmp
ss
mov
nop
outs
jno
ss
sbb
and
movs
jns
or
mov
jne
sub
stos
addr16
daa
mov
and
adc
add
and
repz
lea
sbb
cmp
mov
push
cwde
not
pushf
or
aaa
add
pop
sub
inc
(bad)
pop
xlat
cmp
dec
dec
gs
push
cmp
pushf
movs
xchg
cmp
lock
cmps
mov
dec
mov
rcl
out
loope
enter
arpl
add
and
push
push
pushf
mov
pop
stos
dec
adc
rcr
push
outs
jl
into
xchg
jge
xchg
and
lods
and
jecxz
inc
add
xor
call
in
and
paddusw
into
mov
xchg
popf
pop
bound
inc
xchg
inc
inc
push
stos
fdiv
mov
add
add
inc
lods
push
add
cdq
cmp
rol
(bad)
or
xor
inc
mov
xchg
dec
pop
es
aaa
or
jl
mov
push
js
or
shl
mov
cmp
mov
cmp
or
test
arpl
test
pop
out
xchg
cld
and
adc
dec
fdiv
out
(bad)
pop
daa
or
add
xor
cmp
push
push
je
retf
cdq
xor
scas
shl
sub
sub
push
add
aam
imul
xchg
xchg
jno
jnp
jp
push
(bad)
mov
pop
add
daa
adc
js
mov
xchg
cmp
xchg
outs
add
gs
lods
int3
xchg
xchg
jmp
xchg
inc
call
adc
daa
sub
mov
cs
jae
and
pushf
cmp
push
xor
nop
pushf
fwait
cmp
inc
push
jge
add
(bad)
ds
ss
out
sbb
sub
jns
pusha
sbb
stos
xchg
push
or
stc
(bad)
cmc
push
(bad)
sti
adc
and
pushf
xchg
and
rol
daa
adc
movs
scas
push
dec
fs
sub
sub
cmps
pushf
xor
and
icebp
lods
and
or
in
hlt
or
jo
shl
jno
mov
cmc
inc
ret
sbb
sbb
pop
lahf
repz
adc
sahf
pop
fsubr
sbb
lods
xchg
pop
pop
jecxz
sar
dec
addr16
out
sahf
lods
mov
loop
ins
pop
or
lock
mov
loopne
clc
mov
push
cli
test
retf
sbb
push
mov
jae
pop
add
xor
mov
mov
xchg
lock
inc
arpl
dec
out
fadd
pushf
sti
leave
sbb
or
jns
and
add
jle
inc
es
ror
add
clc
mov
xchg
mov
shl
loope
add
adc
shr
cli
aad
dec
cmp
repnz
mov
sbb
lods
add
mov
sub
push
and
mov
inc
jb
fnstenv
loope
hlt
(bad)
loopne
fsub
bound
in
add
xor
sbb
cmc
adc
retf
add
jno
inc
movs
sti
xchg
xor
arpl
or
pushf
into
jmp
sub
(bad)
mov
pop
pop
rcr
cmp
inc
sub
dec
ret
daa
jns
sub
ficom
add
xchg
jmp
scas
dec
(bad)
add
rcl
(bad)
gs
sbb
add
ret
leave
jb
scas
mov
and
inc
aam
jbe
into
cmp
adc
fdivr
mov
scas
add
test
shl
inc
enter
add
dec
mov
sar
add
std
sbb
test
dec
retf
push
xchg
mov
sahf
inc
sbb
fst
add
jne
adc
and
cmp
and
ret
loopne
js
xchg
mov
imul
pop
pop
xchg
cmc
mov
mov
mov
and
and
push
(bad)
or
sub
loopne
mov
mov
les
adc
adc
push
mov
movs
fld
and
adc
shl
(bad)
into
jp
mov
mov
in
in
mov
dec
jmp
pop
push
xor
add
add
add
mov
cs
or
mov
xor
lock
mov
sbb
popf
fisubr
and
icebp
dec
faddp
adc
sbb
sub
add
xor
cmp
or
fist
xor
ficom
fld
xlat
inc
adc
loope
and
jnp
pop
jb
inc
aaa
dec
jecxz
dec
int
repz
(bad)
shl
pop
cdq
loop
mov
fs
aad
push
(bad)
cdq
lock
jl
cmp
mov
sub
repnz
(bad)
mov
mov
ror
xor
add
push
imul
std
dec
or
push
adc
pop
dec
pop
jo
sbb
fadd
push
popa
fbld
loopne
pushf
popa
mov
out
js
inc
in
arpl
leave
fild
xor
lock
arpl
pop
adc
dec
aad
xor
jmp
dec
aaa
push
fidivr
pop
ins
xor
(bad)
cmp
jmp
push
xchg
sub
xor
xor
(bad)
mov
cmp
shl
push
mov
xor
or
lea
push
add
adc
movs
(bad)
push
rcr
nop
add
retf
xchg
or
mov
push
call
ins
cmp
das
cmp
push
dec
imul
xor
fs
pusha
prefetch
je
repnz
or
call
mov
out
movs
xor
and
dec
icebp
mov
cli
rcr
xor
adc
js
lods
add
sbb
dec
dec
add
jmp
xor
xor
and
sub
cmps
and
jecxz
test
add
push
retf
mov
cmp
pushf
outs
mov
movs
test
dec
pop
(bad)
outs
xchg
cmp
lock
jg
sbb
or
pop
xchg
repnz
daa
or
fcomp
add
into
jmp
mov
les
iret
push
scas
test
jbe
iret
pop
nop
call
xor
xor
push
nop
pop
call
out
push
(bad)
or
dec
adc
xchg
int3
mov
jecxz
dec
test
enter
arpl
cwde
pop
jmp
test
dec
mov
inc
pop
int3
pop
push
push
test
inc
rcr
ins
jecxz
push
pop
loopne
addr16
arpl
pop
fsub
popf
mov
shl
pushf
add
out
adc
pop
xchg
cmp
pop
pop
dec
add
sbb
outs
loopne
in
cmp
adc
adc
dec
mov
rol
test
xchg
adc
(bad)
shl
cwde
mov
xor
mov
leave
fcom
adc
sbb
inc
(bad)
nop
cmp
loope
inc
fdivrp
mov
sub
add
mov
jge
and
pop
div
sbb
mov
pop
movs
jbe
test
(bad)
add
setge
(bad)
pop
mov
mov
push
es
xchg
xor
adc
push
or
inc
mov
cmp
sub
or
and
xchg
out
js
jno
and
cmp
retf
scas
adc
dec
pushf
in
cdq
test
pusha
in
or
nop
leave
sar
movs
retf
shl
dec
jecxz
and
js
lods
in
pop
sub
mov
add
packssdw
popa
pop
cdq
pop
loopne
cmp
jp
fwait
sbb
into
out
dec
pop
(bad)
xchg
xor
mov
jne
xor
cwde
jnp
in
xchg
mov
or
lods
add
icebp
or
pop
xor
cmps
test
jne
jae
mov
pop
sub
pop
push
inc
data16
xor
jb
adc
mov
push
addr16
xchg
shl
xchg
outs
inc
(bad)
hlt
fst
mov
add
xchg
jo
jle
add
sub
and
fwait
and
mov
and
adc
sbb
ret
xchg
or
mov
ret
test
lock
loopne
mov
fmul
bound
jbe
sbb
or
pop
add
cmp
xchg
xchg
dec
jo
or
jp
je
fcom
push
jne
js
or
hlt
xchg
xor
mov
ficomp
add
mov
mov
cs
popa
daa
or
mov
test
mov
push
ja
push
pop
mov
cmp
loopne
dec
sub
jo
imul
je
mov
cmp
xor
push
fmulp
add
ds
(bad)
retf
jne
and
repnz
arpl
xor
outs
je
pushf
sub
mov
sahf
imul
push
push
mov
rcl
sub
inc
add
lock
cmp
inc
imul
and
bswap
ret
into
mov
bound
das
cmp
fnsave
lods
jne
or
sub
push
cmp
xchg
cmp
or
mov
adc
jns
lock
push
dec
mov
add
or
cli
or
adc
adc
arpl
fwait
dec
inc
test
(bad)
jmp
add
rol
into
ins
imul
adc
jecxz
test
cmp
inc
or
ja
or
imul
sbb
inc
(bad)
lea
mov
push
dec
cmp
fs
xchg
arpl
sub
stc
lea
xchg
lods
cdq
test
cwde
cmp
fwait
and
jmp
push
jl
retf
fdivr
dec
cmp
mov
xchg
pop
jp
fs
aad
xor
cmp
retf
or
imul
(bad)
sbb
sbb
adc
fld
push
(bad)
pop
push
cs
jo
jmp
mov
pop
push
popa
sub
adc
les
or
js
jb
pop
int3
mov
ins
adc
in
adc
cmp
(bad)
xchg
lods
out
outs
sbb
add
out
aam
imul
(bad)
xchg
dec
or
pop
out
loope
(bad)
sbb
sbb
and
gs
sbb
outs
sub
adc
xor
hlt
hlt
adc
ins
enter
inc
ret
pop
lods
and
mov
out
add
sbb
sub
mov
add
xchg
in
hlt
xchg
xchg
or
sbb
loopne
ror
inc
cmps
in
or
adc
rcl
mov
xor
push
lods
cmp
icebp
ror
movs
sub
test
ror
ins
dec
pop
imul
jmp
scas
cmp
or
push
retf
adc
adc
inc
std
ja
dec
ret
push
or
sbb
pop
not
add
adc
xchg
or
leave
dec
loop
shl
lahf
adc
mov
xlat
loop
rol
inc
pop
jo
retf
jae
dec
arpl
mov
pop
pop
cmp
pop
lock
sub
sahf
xchg
lds
arpl
mov
lock
fs
jbe
xor
add
loopne
pop
push
rcr
and
xor
xchg
and
out
lods
pop
fisub
(bad)
sbb
xchg
xor
or
ret
enter
adc
inc
fst
ja
dec
sub
push
rcr
loop
push
jge
xchg
test
sub
pop
sti
outs
jp
movs
xchg
jmp
mov
mov
and
pusha
and
inc
cdq
(bad)
pusha
test
mov
dec
push
or
rol
loope
bswap
jg
movs
popa
adc
aam
mov
jns
push
and
leave
retf
shl
adc
(bad)
add
or
pop
cmp
jnp
jl
lds
rcl
dec
aas
rcr
out
push
fidiv
rol
loope
and
push
loope
lea
sar
xor
mov
jno
jnp
js
popa
xor
jb
pop
test
popf
mov
xchg
sar
shl
aad
lea
jge
outs
jecxz
mov
mov
cmps
std
(bad)
jmp
xchg
add
push
mov
and
inc
mov
cmp
inc
mov
fs
pop
retf
mov
xchg
and
mov
imul
mov
add
jle
jnp
lods
adc
add
icebp
ins
xor
mov
dec
rcr
push
xchg
shl
xchg
xchg
cmc
sub
loop
cdq
and
dec
pushf
jb
push
mov
sldt
xor
sub
pop
loope
cmp
cmp
add
imul
adc
ret
mov
gs
or
test
enter
cmp
jno
cmp
out
imul
aaa
je
aaa
outs
or
jle
cmp
mul
mov
mov
mov
pop
inc
pushf
lods
nop
adc
pop
xchg
xor
push
and
push
push
dec
mov
adc
inc
sbb
add
push
pop
xchg
sahf
mul
cld
mov
xchg
mov
hlt
ret
xchg
push
arpl
pop
pusha
call
loop
rcl
and
mov
test
sahf
js
lahf
es
dec
dec
add
repz
loope
push
push
retf
test
stc
mov
(bad)
lock
inc
sti
sbb
xor
jecxz
dec
inc
sbb
pop
mov
lar
lods
adc
lods
mov
xchg
sub
cmp
scas
jge
and
add
dec
cmp
push
or
mov
jno
inc
fcom
pop
loope
fiadd
push
pop
test
loopne
add
std
cmp
mov
inc
cwde
adc
and
ins
fisttp
inc
call
sbb
add
or
jne
cmp
in
xchg
cs
mov
movs
sub
push
adc
test
repz
mov
pop
enter
jecxz
push
rcl
sbb
mov
pop
call
or
imul
ret
adc
sbb
cld
push
xchg
daa
and
ret
cli
or
sub
push
hlt
mov
and
cs
les
scas
mov
inc
rcr
mov
jl
test
mov
cmc
xchg
and
shr
jb
mov
xor
mov
xchg
imul
(bad)
xor
xor
or
lods
mov
add
in
mov
into
lods
push
cmp
cli
or
add
rol
out
aaa
pop
fisttp
scas
test
shl
adc
test
pop
aam
cmps
cmp
fisttp
loop
test
es
or
cmp
mov
add
xor
enter
adc
test
pusha
loope
inc
cmp
push
das
sti
repnz
loope
ret
add
ins
gs
dec
mov
add
sbb
aaa
enterw
xchg
inc
jg
mov
test
lahf
scas
shl
mov
mov
js
inc
repz
push
(bad)
xlat
ins
jae
loope
jp
scas
daa
pop
adc
inc
inc
iret
sub
jge
loop
(bad)
rol
inc
or
jb
cmps
jnp
push
mov
movs
call
dec
rcl
xchg
rcr
dec
add
cmp
inc
test
push
out
add
sbb
and
retf
lds
mov
mov
xor
sbb
sbb
jne
dec
push
daa
cmp
ins
xchg
ror
sar
adc
pop
xor
adc
push
or
mov
push
jp
(bad)
mov
cs
cmp
leave
lock
and
adc
ins
test
xor
pop
jle
dec
push
xchg
adc
loopne
xor
add
inc
arpl
dec
mov
hlt
sbb
xchg
test
and
or
fnstcw
gs
shr
dec
lods
inc
jl
mov
arpl
js
icebp
sub
add
xchg
mov
adc
cmp
into
mov
add
arpl
sahf
mov
test
jl
das
je
in
retf
outs
(bad)
or
pop
pop
add
(bad)
mov
sbb
fisub
push
mov
lods
adc
pop
jmp
mul
xor
dec
xchg
jo
nop
popf
aam
push
cmp
test
daa
jp
ret
dec
jmp
add
mov
jo
daa
into
icebp
inc
push
jo
inc
movs
push
jo
xlat
rcl
cmp
or
cmp
sub
add
imul
ins
dec
cmp
push
outs
mov
mov
cmp
or
sbb
pop
add
and
loope
mov
in
fmul
js
out
into
dec
scas
cmp
jmp
inc
outs
inc
jno
or
(bad)
pop
repnz
retf
jb
or
jnp
into
sbb
jne
pop
sub
and
mov
jmp
xchg
jno
jmp
inc
jb
outs
or
inc
mov
data16
xchg
pop
sar
inc
cmp
pop
fisub
das
add
xchg
xchg
and
rcl
and
js
std
or
sbb
add
call
shr
shl
xor
ret
pop
pop
push
and
mov
fs
sahf
mov
aaa
sbb
add
popa
das
ror
ret
js
mov
imul
sub
out
clc
mov
lods
outs
inc
add
mov
dec
and
dec
and
jp
mov
inc
or
clc
clc
xchg
push
cvtps2pi
scas
cmp
push
xchg
cmp
test
(bad)
lea
pop
test
xor
add
push
mov
and
ror
(bad)
cmp
into
hlt
ins
ja
lods
pop
dec
mov
mov
cmps
test
out
loope
xabort
mov
fistp
pop
jae
sbb
dec
outs
or
xchg
add
ror
leave
test
sub
ret
sar
or
leave
dec
fld
loop
ja
rol
push
sahf
push
inc
xor
mov
mov
scas
hlt
lods
cs
repz
inc
scas
xor
repnz
xor
xchg
lds
adc
jp
xor
jmp
add
push
inc
(bad)
add
jg
and
(bad)
fcom
pusha
push
xor
rcr
xchg
adc
sub
jne
movs
sbb
jne
add
pop
add
pop
mov
sbb
mov
xor
jo
jns
shl
mov
psubsw
test
mov
leave
dec
push
mov
jo
jne
movs
(bad)
xor
rcl
cmp
add
or
jo
jns
clc
nop
aad
xchg
int3
push
daa
xchg
add
(bad)
outs
mov
jno
arpl
ror
pusha
fwait
dec
pop
jns
mov
(bad)
cmp
mov
retf
sbb
mul
mov
pop
int
jp
jl
sub
ins
xchg
sub
and
push
mov
mov
jg
xor
cmp
xor
stos
pop
fstp
mov
or
sub
pop
lea
or
out
lock
stos
sbb
and
push
imul
pop
sub
imul
pop
sub
nop
mov
ret
pop
mov
std
inc
sti
loopne
mov
mov
cli
lea
cmp
jl
ret
pop
(bad)
shl
push
sti
js
mov
push
jmp
retf
or
fs
loope
xchg
or
clc
jl
xchg
mov
sub
mov
jmp
pushf
add
lahf
sbb
and
jns
fwait
or
add
adc
push
shr
test
movs
sbb
jp
jb
push
jo
ror
and
sbb
mov
or
ret
cmp
bnd
pusha
add
inc
loope
xchg
mov
add
dec
xchg
or
or
arpl
inc
or
jbe
push
dec
mov
xchg
ret
sbb
jecxz
ja
dec
std
sahf
mov
sbb
push
(bad)
push
xchg
and
cmp
mov
or
dec
dec
sbb
jp
sbb
pop
(bad)
jmp
add
xor
mov
aam
add
push
jbe
ret
lock
ret
arpl
nop
mov
or
loope
mov
add
data16
add
adc
add
sbb
jecxz
add
xor
or
xchg
mov
pop
(bad)
fldenv
mov
jns
inc
add
loope
xchg
jmp
add
mov
ret
jo
adc
movs
mov
arpl
pop
xor
mov
loopne
cmp
test
pop
push
pop
pop
fimul
sbb
adc
xlat
push
lods
cmps
call
jmp
shl
xchg
jmp
cwde
push
ret
push
test
fidivr
cli
je
cli
lods
dec
pop
stos
pop
mov
mov
sbb
mov
ins
or
mov
pop
jae
xchg
clc
mov
xchg
lods
add
add
lahf
arpl
pop
mov
rol
pop
sbb
inc
mov
inc
xlat
xchg
sub
mov
or
and
retf
or
xor
jmp
lods
push
push
clc
test
mov
sti
loope
push
mov
add
sub
test
jmp
fsub
xchg
stos
lods
cmp
cs
mov
fs
add
sub
mov
cmp
(bad)
jmp
jp
fcomp
adc
pop
push
les
pushf
sub
adc
mov
jmp
test
jns
shr
fcom
out
js
je
dec
mov
imul
mov
ins
stos
pop
jo
push
jo
shl
add
shr
sbb
int3
sbb
pop
add
xor
fdivr
push
out
and
ret
retf
or
inc
sbb
sbb
push
mov
add
sbb
mov
ret
loopne
sbb
int3
or
cmps
cmp
cmp
pop
(bad)
xchg
push
sub
js
ror
cdq
xchg
jecxz
xchg
mov
push
data16
mov
pop
aaa
push
addr16
sti
data16
mov
dec
pop
and
loopne
sub
jae
shl
and
adc
hlt
retf
test
arpl
inc
push
xor
push
into
(bad)
mov
mov
cmp
adc
clc
xor
inc
rcr
xor
pop
mov
mov
leave
add
sbb
cmp
outs
mov
push
xchg
pop
sbb
loop
arpl
mov
gs
dec
jo
dec
cmp
aas
add
and
sbb
push
or
add
add
daa
xchg
gs
sub
add
or
and
or
enter
sub
add
or
daa
cmp
enter
int
sahf
xchg
xchg
lea
leave
inc
js
(bad)
in
imul
leave
pop
jle
cmp
cmp
adc
push
rcl
loopne
ret
popf
jns
outs
add
inc
jmp
(bad)
adc
cwde
lods
test
add
dec
sbb
ss
out
sbb
inc
sbb
aaa
xchg
lods
lock
fs
cdq
xor
mov
loop
jl
jo
loopne
sub
call
add
sbb
fidiv
xchg
xor
gs
sbb
lea
pop
add
jns
jo
cli
lea
and
or
ret
mov
sub
inc
pop
pop
cdq
mov
mov
cmp
lods
cmc
mov
add
sub
xor
test
retf
cmps
dec
ins
ds
add
sub
xchg
xor
lods
jno
inc
cmc
pop
push
idiv
add
jle
mov
shl
mov
pop
icebp
adc
sbb
xor
rol
mov
ret
xchg
je
pushf
in
lods
xor
adc
add
pop
mov
mov
and
cmp
fisubr
push
ret
test
push
(bad)
sub
bound
cmp
movs
into
sub
out
fst
mov
mov
gs
and
sti
ret
cmp
cmp
mov
in
mov
jne
xchg
pop
fstp
leave
dec
jb
icebp
jo
jp
jno
jmp
jnp
jmp
in
pop
(bad)
sar
bound
int3
or
leave
push
test
and
in
or
sbb
pop
cmps
fs
jmp
scas
cdq
cmps
xchg
push
into
int
cmp
pop
popa
add
inc
xor
add
xlat
es
sub
sbb
pop
or
or
xchg
cli
int3
add
arpl
inc
and
sub
sub
movs
mov
push
mov
test
aam
jo
imul
daa
loopne
add
pop
xor
jo
sub
and
das
loopne
(bad)
sub
dec
test
adc
not
adc
push
push
dec
ror
iret
shr
popa
sbb
leave
arpl
stos
retf
popa
or
jl
and
add
bound
add
pop
inc
outs
pop
inc
sbb
xchg
fs
jecxz
sub
in
adc
mov
cmc
test
cmp
retf
adc
mov
aad
cmp
sbb
jnp
push
ss
xchg
push
xchg
mov
inc
imul
bound
(bad)
xchg
xor
mov
mov
inc
push
sbb
dec
cli
sub
inc
jp
push
inc
and
push
into
pop
jmp
jns
mov
mov
inc
clc
cmp
add
sbb
or
je
mov
dec
xchg
std
loop
mov
xchg
jne
add
mov
cmp
push
cmp
and
cmp
mov
push
loope
adc
mov
mov
dec
shl
aad
sub
aaa
enter
push
push
ret
cmp
inc
mov
jo
pop
inc
retf
xor
cmp
add
pop
push
daa
pop
test
in
frndint
mov
enter
je
pop
test
js
adc
pushf
test
pop
xchg
mov
jnp
mov
add
and
in
cs
and
sbb
or
enter
lods
in
(bad)
js
xor
dec
mov
xor
retf
(bad)
retf
jecxz
fild
loop
les
popa
or
jns
jo
js
mov
inc
dec
xchg
adc
add
scas
or
xchg
cdq
push
push
xor
jg
imul
ret
popa
ret
xchg
movs
jnp
out
cli
push
mov
xor
(bad)
pop
mov
cmp
sbb
xchg
add
push
ss
fs
and
loopne
and
addr16
cmc
inc
aaa
mov
fadd
(bad)
lea
outs
mov
shl
dec
pop
cdq
inc
mov
outs
lea
add
mov
mov
movs
les
je
and
imul
sub
xchg
dec
aas
dec
inc
or
pop
js
fisttp
gs
jl
dec
mov
stos
adc
jmp
les
cmp
out
retf
js
or
jle
and
cmps
dec
xor
pop
mov
outs
mov
js
fsubr
and
sbb
sbb
mov
movs
inc
cs
push
pop
inc
push
sub
mov
cmp
data16
jno
and
adc
loope
dec
dec
sbb
inc
xor
cmp
pop
add
cmp
mov
adc
mov
lods
jne
gs
cmp
and
loopne
adc
jl
in
call
xchg
test
mov
mov
adc
dec
push
xor
mov
inc
imul
popf
lock
mov
mov
adc
ret
in
out
das
ret
xor
jo
rcr
pushf
inc
cmc
test
pop
outs
cmp
into
sbb
shl
sbb
jmp
out
into
adc
push
imul
inc
pop
add
mov
call
add
sbb
xchg
movs
mov
les
pop
inc
pusha
pop
(bad)
shr
clc
std
jge
cmp
and
ins
add
jo
push
jb
sub
fcomp
mov
fsubr
sub
jno
fild
sysret
das
and
mov
shl
aaa
xchg
fmul
outs
xchg
(bad)
jp
(bad)
test
mov
inc
push
inc
add
mov
imul
xchg
mov
ja
sti
or
jne
imul
or
sbb
jns
xor
jmp
cli
mov
retf
adc
mov
jmp
and
js
sbb
sbb
loopne
out
xchg
add
pop
mov
pop
or
fsubr
inc
inc
xchg
(bad)
sub
dec
inc
test
shl
test
out
push
test
nop
dec
pop
jo
setge
xchg
or
hlt
rcr
ds
fucomp
jbe
or
xor
out
int
lock
rcl
lock
jecxz
dec
call
cmp
inc
loope
xchg
popf
retf
outs
pop
inc
int
push
pop
rol
aad
test
pop
test
call
jl
mov
xor
in
adc
ret
and
das
sbb
inc
inc
mov
sub
adc
sub
mov
xchg
add
push
push
dec
(bad)
dec
das
and
pusha
or
sahf
movups
jmp
mov
mov
fs
ja
xchg
clc
cmp
adc
sub
enter
sub
ret
jecxz
cmp
test
fucomip
or
jmp
inc
mov
xor
inc
cmp
adc
popf
loopne
push
bound
in
cmp
loop
stc
pop
mov
inc
fsubp
pop
jp
cmc
test
xchg
mov
and
adc
dec
leave
rcl
retf
gs
pop
cmp
cmps
add
ret
imul
fdiv
dec
popa
popa
fld
or
into
inc
xchg
test
jmp
sbb
retf
dec
add
js
(bad)
xchg
(bad)
cmp
jg
mov
inc
(bad)
xor
aam
les
mov
outs
mov
pusha
icebp
(bad)
cmps
out
popa
inc
cmp
adc
adc
mov
dec
rol
jne
mov
lea
mov
and
mov
loopne
cmps
in
jo
jnp
pusha
cmps
in
mov
jp
or
movs
into
lds
aaa
add
(bad)
push
ret
add
xchg
adc
aaa
push
jo
xchg
adc
stos
xchg
ret
sbb
nop
and
test
ins
jne
mov
and
lea
loopne
fwait
add
jb
clc
out
push
pop
fcom
(bad)
rcr
int3
push
inc
js
mov
data16
xchg
add
dec
jmp
adc
jbe
cmps
jo
loopne
mov
mov
adc
add
shl
jp
push
icebp
jp
pop
sbb
or
or
xor
fisub
jg
add
cmp
stos
sbb
fcmovu
add
mov
sbb
fld
add
dec
pop
jmp
rcr
out
adc
sbb
inc
mov
jecxz
or
(bad)
or
sub
loopne
add
cld
push
mov
fs
jmp
aas
xchg
push
add
add
jae
push
xchg
and
popa
and
pushf
sbb
pop
dec
sbb
adc
loope
loopne
cmp
lock
adc
jne
stos
xlat
dec
inc
stos
outs
shr
imul
jecxz
popf
or
movs
in
test
and
scas
sti
sub
push
(bad)
push
cmc
retf
dec
les
xchg
ret
imul
popa
dec
push
and
xor
jns
fs
clc
arpl
sbb
pop
and
add
xchg
inc
(bad)
dec
cmp
push
loope
mov
ret
sbb
ja
mov
leave
bound
sbb
call
xchg
in
mov
add
push
inc
adc
cmp
pop
or
xor
test
test
cmp
test
add
repnz
sbb
or
push
daa
fcom
push
and
fiadd
je
xchg
lock
push
aas
and
xchg
lea
loope
pop
sbb
scas
push
cmp
sbb
mov
pusha
dec
xchg
call
int
scas
sub
mov
outs
frstor
mov
shl
inc
push
push
in
(bad)
fnsave
add
cmps
pop
adc
jp
mov
pusha
sar
mov
retf
or
push
or
xor
pop
in
and
pop
push
dec
push
into
ret
inc
jecxz
adc
imul
loop
lock
adc
jns
mov
js
xor
sub
sub
adc
mov
pop
push
idiv
jle
fs
lock
daa
dec
push
icebp
ss
mov
(bad)
inc
(bad)
push
sub
jmp
pop
mov
dec
mov
or
dec
(bad)
dec
jmp
loope
dec
imul
shl
xlat
ins
xor
inc
adc
add
movs
out
sbb
fst
jo
mov
dec
push
xchg
in
jo
push
pop
jle
sbb
sbb
es
nop
fcom
ds
xor
xor
cmp
jmp
scas
and
push
xchg
sahf
jo
bound
mov
pushf
scas
mov
sub
movs
push
test
dec
loopne
and
push
nop
jnp
sub
in
out
push
rol
mov
lea
lods
lds
pop
mul
dec
cmp
loopne
jo
inc
xor
xchg
test
loope
jl
mov
adc
jae
movs
inc
or
dec
inc
dec
les
cmp
pop
or
lds
xchg
mov
add
xchg
aaa
lods
pop
adc
pop
adc
enter
jmp
xor
xor
mov
loopne
jnp
sbb
jae
or
adc
ret
rol
mov
call
inc
test
ds
into
cmp
iret
mov
pop
mov
(bad)
sbb
sar
mov
inc
add
stos
nop
test
sar
mov
inc
sbb
loopne
add
adc
sub
ja
mov
or
sub
retf
mov
pop
pop
dec
mov
dec
lods
mov
fcom
add
(bad)
loopne
loope
mov
push
lea
xor
ja
sbb
pop
and
icebp
xchg
sbb
dec
jo
pop
cmc
add
cmp
push
fcom
ss
or
push
push
(bad)
aam
xor
adc
mov
xchg
sub
sar
mov
cmp
inc
or
adc
fidivr
scas
(bad)
bound
and
psllw
loopne
mov
dec
loopne
or
mov
xchg
or
or
push
mov
int
mov
or
lock
or
pop
pop
lock
je
cmp
add
cmp
push
outs
xchg
mov
jo
fadd
adc
cli
mov
or
shl
das
ret
leave
fidivr
sbb
push
inc
cmp
movs
adc
rcl
lds
cmp
add
or
xor
(bad)
aaa
and
lods
sbb
inc
sbb
and
and
cli
sbb
adc
test
cmp
mov
mov
or
test
xchg
cmp
ret
sbb
rol
fimul
xor
inc
mov
xchg
adc
out
mov
fild
sub
ror
jp
mov
outs
and
mov
fdiv
sub
xor
jmp
pop
ins
sbb
push
retf
pop
pop
adc
daa
aas
xchg
pop
mov
leave
sbb
sub
jp
rcl
jmp
or
mov
cmp
push
lds
sub
inc
fwait
sbb
(bad)
int
pop
rol
repnz
mov
xor
rcl
push
or
ret
retf
jne
std
sbb
jp
and
dec
push
pop
or
adc
and
movs
and
inc
ret
in
loopne
push
out
jb
movs
outs
dec
inc
add
sahf
inc
sbb
loope
and
inc
(bad)
jecxz
cmp
imul
sahf
mov
xor
mov
fldenv
mov
dec
or
pusha
pop
ret
sti
sub
mov
sub
mov
add
push
xchg
mul
cmp
or
or
push
je
jns
add
js
(bad)
lock
and
cmp
(bad)
cmps
lock
in
mov
or
xchg
and
cmp
or
mov
xchg
adc
pop
cmp
cmps
pop
push
mov
inc
dec
xlat
add
mov
test
or
sbb
pusha
fst
scas
and
jecxz
sar
pop
xchg
repnz
add
shr
mov
mov
pop
xchg
cmp
pop
sti
pusha
fs
add
xchg
xor
jne
inc
add
jmp
push
dec
or
je
ss
movs
outs
popf
rcl
pop
sbb
xchg
push
nop
sub
xchg
push
inc
xor
adc
loopne
and
push
pusha
jg
fs
inc
mov
or
mov
inc
jl
push
out
je
rol
data16
loope
test
dec
sbb
icebp
cmp
pop
popf
(bad)
pop
sbb
jnp
or
lahf
add
mov
xchg
add
mov
cmp
dec
add
jns
inc
xchg
cmps
mov
clc
inc
lds
xor
arpl
call
popa
mov
(bad)
jmp
mov
fmul
lods
je
jl
jmp
popa
ror
mov
jnp
scas
sbb
jo
mov
sub
sbb
scas
and
jecxz
inc
push
add
(bad)
push
xor
stc
scas
movs
test
mov
fdiv
pop
sub
daa
test
xchg
movs
push
xchg
cmp
jge
xchg
cdq
jle
rol
dec
pop
sub
fiadd
cdq
or
loop
fs
xor
rol
pop
mov
xchg
ret
mov
add
and
sar
call
(bad)
mov
and
ja
jb
bound
das
pusha
and
jecxz
(bad)
outs
pop
add
adc
sbb
sahf
adc
popa
and
out
mov
aaa
jecxz
js
jnp
inc
fdivr
dec
jb
ror
or
jnp
imul
xchg
inc
fdiv
dec
mov
adc
mov
(bad)
sbb
dec
icebp
aad
or
mov
and
sub
lock
dec
pusha
or
ret
add
lods
mov
lock
or
mov
leave
xchg
jno
xchg
mov
sar
imul
shl
test
loope
popa
retf
jge
mov
cmp
push
add
cmps
sub
xor
xor
cwde
sub
arpl
into
(bad)
fwait
jns
nop
xor
(bad)
sbb
inc
inc
cli
rol
repz
mov
adc
mul
or
jmp
mov
ret
mov
(bad)
xor
inc
jb
sub
xchg
push
pop
or
jecxz
add
ficomp
out
and
ret
add
dec
rol
xor
loope
fcom
jp
and
sbb
jns
ret
js
mov
and
call
xor
fstp
adc
and
mov
arpl
mov
test
xor
adc
test
icebp
popf
push
out
test
mov
(bad)
cwde
js
xor
test
fsub
push
mov
lahf
pop
dec
cmp
jb
xchg
fstp
jmp
es
jb
xor
or
int
xchg
cmp
adc
jmp
cmp
lods
cmp
sub
dec
js
ins
cmp
push
(bad)
clc
cmp
repz
mul
push
pop
cmp
loopne
lods
loop
hlt
pop
ret
ja
mov
sbb
or
push
mov
jle
xchg
cmp
popf
and
xchg
(bad)
daa
out
and
sub
in
xor
sti
out
aad
mov
and
xchg
mov
add
and
push
and
outs
dec
push
xor
leave
cmp
xchg
jo
loopne
and
adc
sbb
movs
xchg
shl
sbb
mov
mov
(bad)
cmp
dec
loope
idiv
loopne
sar
jae
lods
push
sbb
mov
in
je
jno
pop
push
add
jecxz
clc
jg
into
enter
jmp
bnd
mov
rcl
and
cmps
inc
add
mov
cld
adc
stos
adc
push
(bad)
push
push
and
div
cmps
cmp
js
dec
dec
xor
or
jno
pop
in
ret
pop
mov
mov
xchg
test
push
adc
cmp
js
sbb
add
pop
stos
jmp
inc
imul
or
cmps
xor
adc
adc
jecxz
cmps
pop
call
cmp
shl
and
mov
(bad)
xor
push
dec
frstor
xor
jl
sub
popa
mov
add
iret
sub
cmp
int
xor
xor
xor
or
or
pop
or
call
xchg
(bad)
rol
(bad)
mov
xor
jno
ja
popf
cmp
sbb
adc
popa
fs
and
mov
loope
retf
(bad)
mov
pop
dec
xchg
or
mov
repz
(bad)
sub
dec
arpl
sti
daa
pop
inc
or
jns
(bad)
int3
mov
daa
cmp
shr
adc
mov
int
stos
or
jmp
test
mov
mov
adc
hlt
sbb
outs
pusha
mov
xchg
mov
sub
dec
cdq
push
(bad)
pop
inc
cmp
dec
cmp
jno
(bad)
xor
(bad)
loopne
xor
pushfw
xor
dec
jne
test
das
or
xchg
cmps
xchg
popa
jmp
mov
hlt
fwait
inc
jnp
mov
in
mov
int3
add
outs
cvttps2pi
out
push
dec
dec
xor
jmp
aam
pop
cmp
xchg
bound
mov
jns
pushf
xchg
jne
and
leave
push
mov
or
adc
movs
push
pop
sbb
shl
and
scas
jae
retf
lahf
call
or
aad
jne
sahf
ins
mov
aad
dec
mov
ds
popa
xchg
or
mov
sbb
dec
mov
xor
sahf
and
jmp
push
sbb
pop
lahf
dec
rcr
loopne
shr
fild
xor
iret
xchg
add
call
dec
jmp
jne
push
xor
(bad)
ja
or
es
xchg
in
loope
mov
inc
mov
sbb
out
stos
add
mov
pop
fbld
sbb
lock
mov
retf
push
dec
(bad)
(bad)
vmwrite
stc
adc
and
pop
jo
jmp
sub
pusha
mov
adc
test
fs
cdq
cmp
add
cmp
dec
dec
xor
in
mov
add
retf
inc
sub
das
sub
mov
adc
cmp
sbb
sub
xor
sub
xor
add
shl
imul
mov
aad
mov
js
mov
ret
sbb
dec
mov
and
sub
jo
mov
sbb
mov
rol
xchg
cld
sbb
data16
(bad)
mov
dec
sub
cmps
rol
stc
pop
push
mov
(bad)
cmp
and
rol
popa
or
xor
mov
jne
or
(bad)
inc
xchg
scas
call
cmc
rcl
popf
in
cs
jns
inc
or
jns
mov
inc
packsswb
test
pop
mov
add
jne
into
pop
fisubr
cmps
into
(bad)
xor
xlat
adc
mov
not
sbb
cmp
stos
das
and
dec
mov
and
gs
loope
mov
into
sbb
pop
movs
nop
xchg
out
je
test
lods
ja
or
push
inc
cmp
adc
adc
ds
stos
dec
adc
inc
fmul
(bad)
mov
dec
cmc
sbb
push
pop
aaa
push
add
push
cld
push
ffreep
add
xchg
pop
in
sbb
cmps
dec
add
mov
sar
cmp
xlat
mov
aad
aaa
rcr
push
xchg
cli
ret
xchg
cmp
fist
cmp
(bad)
js
loopne
or
xor
jae
xor
sbb
in
nop
jl
sbb
adc
aam
mov
and
cmp
cmp
fs
js
ret
jns
outs
adc
push
dec
arpl
into
or
mov
jp
push
aad
or
mov
cdq
or
call
hlt
mov
mov
cmp
cs
mov
cmp
ss
sbb
mov
mov
push
jp
push
add
lea
pop
outs
inc
cs
sbb
fstp
ror
rol
jge
movs
mov
push
pop
mov
hlt
hlt
xchg
cmc
add
push
daa
jmp
mov
gs
push
cmp
push
pop
jo
shl
inc
stc
and
aaa
cmp
test
ret
jbe
cmc
sub
ins
add
into
shr
loop
inc
cmp
loope
xor
aas
cli
xchg
jne
test
lock
xchg
loop
pop
add
and
mov
icebp
xlat
sub
pushf
sbb
mov
adc
sub
pop
outs
adc
pop
adc
pop
ds
inc
lods
xor
outs
inc
movs
cmp
fcomi
popf
push
addr16
cmps
out
mov
sahf
pushf
cmc
cmpxchg
addr16
push
lock
sub
cmp
xchg
(bad)
mov
(bad)
cdq
rol
imul
xlat
imul
cmc
and
gs
jmp
and
xor
dec
push
pop
sub
pop
and
or
or
push
dec
js
adc
jg
sub
loop
add
jmp
fincstp
mov
mov
out
es
jmp
mov
push
aam
jmp
sub
ret
mov
adc
das
mov
mov
xor
jmp
jp
jecxz
cmp
dec
addr16
icebp
inc
adc
and
out
jg
xor
loop
(bad)
out
loopne
(bad)
icebp
adc
test
mov
gs
inc
sbb
sti
or
retf
retf
pop
xchg
inc
imul
add
(bad)
dec
sti
xchg
and
js
jnp
pop
dec
(bad)
or
add
add
cld
in
jmp
pop
imul
pop
cwde
js
push
aam
fwait
add
or
cmp
add
add
mov
pop
rol
add
ret
or
or
pop
mov
mov
mov
shl
sub
adc
ja
push
cs
jle
xchg
push
dec
jp
js
add
xor
xlat
pushf
mov
je
mov
cmp
or
pop
shr
sbb
cmp
mov
push
test
mov
push
and
xor
dec
push
icebp
cmp
retf
or
movs
or
adc
fisttp
xor
mov
cmps
push
(bad)
ds
cwde
fld
call
jg
icebp
enter
xchg
push
out
and
cmp
cmc
loope
nop
test
adc
js
or
in
rcl
lods
mov
test
jnp
lods
xor
mov
ror
push
adc
sbb
enter
das
inc
mov
(bad)
pop
aam
cmc
les
ss
rol
and
inc
push
xchg
cmp
xchg
pop
jl
xor
in
inc
pop
adc
and
jmp
dec
push
rol
mov
ret
outs
stc
sti
lock
hlt
xchg
push
(bad)
xchg
mov
xchg
cmps
int
es
cmp
mov
push
test
rol
adc
push
dec
push
jo
(bad)
mov
lods
icebp
mov
bound
je
test
mov
sar
xchg
push
pop
mov
es
sbb
stos
les
add
fs
sub
test
retf
and
dec
lods
adc
jo
imul
pop
add
push
ret
jp
pop
sub
lock
(bad)
or
or
cmp
fmul
push
inc
pop
push
test
sub
cmp
xchg
sub
lds
popa
test
or
push
push
test
sbb
ror
or
dec
dec
jge
scas
aaa
add
cdq
pop
mov
lods
shl
loope
jae
push
pushf
jp
nop
lds
xchg
push
push
cmps
jmp
es
js
idiv
lea
rcl
mov
jbe
mov
cld
or
out
adc
add
add
inc
in
add
xchg
fwait
sub
nop
movs
das
rol
pop
je
loope
loope
(bad)
ins
adc
mov
imul
dec
cmp
test
inc
mov
pusha
xor
jnp
jmp
push
call
sbb
and
(bad)
xchg
add
xor
gs
sub
lea
stos
cmps
xchg
dec
(bad)
cmp
mov
cmp
and
inc
out
cmp
rcr
mov
fmul
xchg
mov
outs
and
sub
stos
cs
sub
or
rol
add
sub
or
pop
or
or
add
pop
jmp
and
or
cmps
xchg
movs
xchg
add
xchg
inc
js
and
or
pop
imul
mov
nop
repnz
or
loop
mov
mov
sbb
sbb
lods
cmp
xor
push
add
inc
in
xor
rol
pop
shr
push
in
add
test
adc
push
adc
cmp
movs
push
loopne
jns
movs
retf
inc
jg
push
add
jb
xchg
xchg
xor
loopne
jmp
loopne
sbb
cld
push
or
adc
add
adc
mov
clc
dec
mov
(bad)
out
and
jae
inc
xor
mov
jno
lods
mov
stos
sub
push
xchg
jae
xchg
add
push
stos
fwait
test
push
mov
jbe
adc
xchg
das
sub
repnz
adc
test
mov
pop
jns
stc
add
psllq
and
mov
dec
arpl
add
add
jo
push
and
aam
in
push
inc
and
ror
add
stos
test
dec
test
dec
arpl
cmps
xchg
pop
test
pminsw
mov
and
jge
test
inc
xchg
pop
and
cmp
xchg
sub
repnz
or
sbb
jns
pop
ret
idiv
inc
add
mov
fcmovnu
jp
fsubr
mov
ror
lahf
push
add
das
pushf
pop
mov
jp
push
push
test
dec
loopne
arpl
mov
inc
jne
sbb
and
es
inc
xor
out
cmp
test
xor
dec
dec
cmp
in
fcom
jle
fcmovnu
les
test
and
icebp
push
js
in
ds
lahf
(bad)
xacquire
jno
test
dec
rcl
or
popa
and
fwait
pop
cmp
cmps
inc
cmp
adc
mov
inc
push
fild
xchg
xchg
stos
jge
popf
lods
sub
mov
add
cmp
sbb
inc
push
xor
rcl
mov
mov
nop
dec
sbb
loope
push
push
in
nop
xchg
add
loopne
leave
inc
iret
inc
stc
sub
test
loop
pop
push
dec
or
js
je
rcr
push
mov
mov
js
adc
inc
fadd
adc
ret
mov
pop
sysret
add
cmp
add
add
cmp
mov
inc
das
cmp
test
data16
push
lock
das
jb
add
pushf
mov
dec
jns
movs
(bad)
sbb
fwait
push
xor
pop
dec
mov
xor
pusha
add
fst
dec
xchg
jnp
add
push
sar
adc
ss
xchg
aad
jns
xor
test
push
ror
ret
xor
pop
outs
push
bound
mov
jnp
jle
mov
fs
loope
pop
mov
loope
xor
test
mov
sbb
cdq
cmc
shl
in
loop
fwait
mov
push
cmps
push
outs
or
jmp
add
retf
into
push
push
adc
jge
cmp
pop
pop
cld
mov
add
inc
push
xchg
xchg
sbb
xchg
lods
(bad)
and
or
jnp
or
(bad)
jbe
sbb
popa
xchg
lods
xchg
inc
loop
sti
sbb
add
fucom
cmp
fsubr
push
(bad)
push
lock
popa
adc
push
lock
jns
push
and
inc
or
cmp
ja
pop
leave
sbb
(bad)
test
fsub
pop
ins
sub
cmp
pop
dec
xor
pop
adc
add
inc
call
sbb
push
inc
jo
daa
in
popf
lds
jecxz
mov
loope
shr
pop
pop
mov
pop
xchg
add
inc
js
dec
(bad)
call
fs
iret
pop
sub
mov
popf
xlat
call
ins
loopne
and
pusha
sahf
jae
sbb
fldenv
aas
mov
jge
shl
loope
pop
mov
mov
cmp
and
lds
sbb
imul
mov
loope
or
repnz
mov
push
add
lea
mov
push
mov
or
dec
retf
mov
xor
out
out
loope
and
mov
imul
out
ins
or
jno
loopne
and
mov
cmp
(bad)
add
adc
daa
hlt
dec
loope
xchg
pushf
les
push
ins
mov
loop
and
loope
mov
add
rol
mov
cmp
pop
nop
test
dec
out
mov
inc
jecxz
gs
inc
sub
in
adc
dec
or
in
jns
out
retf
jmp
(bad)
cmp
js
xchg
fisubr
add
nop
inc
mov
loope
rcr
push
pop
mov
dec
push
stc
push
inc
sub
mov
and
(bad)
xor
ret
and
push
cmps
adc
lods
cmp
mov
mov
inc
pop
pop
(bad)
mov
xchg
adc
idiv
add
fmul
test
xchg
sub
mov
iret
cwde
xor
sub
cmps
dec
push
ja
fmul
inc
nop
pop
add
(bad)
inc
test
out
cwde
push
sbb
and
cld
in
sbb
sub
cmp
cmp
pusha
or
xchg
popa
add
ret
inc
adc
retf
add
or
jmp
mov
test
xchg
jl
and
cmp
xor
call
mov
pop
cmp
sbb
xor
iret
movs
add
pop
mov
mov
dec
mov
add
mov
mov
scas
imul
jno
dec
sub
shl
jb
xchg
xor
inc
add
leave
xchg
xchg
iret
ins
jp
or
jne
cli
div
jbe
lods
aam
sub
js
aaa
cmps
ss
xchg
ds
xchg
mov
push
in
cmp
sub
and
or
js
lea
lods
adc
xchg
sbb
pop
xor
leave
push
cmp
xor
or
mov
xor
or
or
pop
dec
dec
sub
addr16
mov
jg
fnstcw
arpl
xor
mov
push
push
xor
mov
or
push
push
mov
(bad)
xor
sub
call
loope
sbb
jbe
(bad)
and
or
dec
rcl
jmp
(bad)
or
mov
call
or
pusha
sub
or
fdiv
add
add
inc
push
jmp
push
push
pop
add
clc
and
dec
ret
push
or
dec
je
mov
ja
and
sub
and
addr16
int3
cmc
mov
mov
inc
or
pop
jmp
call
add
xchg
jmp
addr16
push
jo
in
test
fld1
sti
ins
sbb
and
cmp
imul
jle
loopne
je
xchg
jge
jp
push
pop
and
mov
mov
dec
adc
dec
out
add
cli
mov
add
imul
js
inc
dec
sub
mov
dec
xor
add
arpl
mov
call
add
xor
jnp
call
fcomp
outs
loopne
(bad)
test
js
cmc
jo
jne
enterw
mov
push
sar
ja
lods
mov
or
and
imul
add
ins
jno
and
xor
add
test
adc
push
inc
push
(bad)
mov
sbb
cmp
mov
sbb
rcl
loope
call
xchg
pop
retf
or
xchg
test
into
leave
push
cwde
std
cmp
mov
dec
xor
pushf
xor
xor
cmp
push
mov
inc
lock
test
(bad)
aaa
cmp
fmul
jb
movs
icebp
mov
jmp
cwde
imul
je
mov
mov
mov
cmp
ror
mov
inc
push
inc
mov
rcr
cmps
mov
add
shl
sub
test
xchg
push
or
data16
ret
idiv
fs
xchg
xor
pop
and
int3
data16
test
xor
inc
out
push
dec
push
xor
add
lods
mov
pop
xor
inc
cmps
fdiv
cmp
mov
xor
lock
clc
ror
test
in
jno
pop
inc
push
push
(bad)
mov
push
into
jne
shl
cmp
cmp
sbb
cmc
xor
sbb
mov
lods
xor
add
lds
push
lahf
test
xchg
dec
mov
xchg
xchg
push
or
aaa
les
imul
call
mov
enter
xchg
mov
pop
inc
push
mov
sbb
inc
and
outs
cld
in
and
push
lods
and
cdq
ret
jle
(bad)
jmp
or
and
pop
les
rcr
fidiv
aaa
imul
inc
pushf
push
bound
and
bound
lods
loopne
pop
fcomp
xchg
movs
icebp
mov
add
cmp
jl
(bad)
and
dec
sbb
cmp
lods
ja
sbb
push
je
shl
pusha
popa
mov
push
xchg
ret
int
push
les
popf
shr
mov
jnp
cmp
push
cmp
popf
cmp
push
je
dec
lods
xlat
and
cmps
mov
mov
pop
pop
dec
pop
xchg
dec
cmp
and
push
push
xor
popf
lock
clc
mov
xchg
test
or
adc
sahf
pop
sbb
cmp
int3
jbe
jmp
cmp
mov
pop
push
or
and
mov
and
and
iret
lods
into
js
inc
inc
xor
outs
movs
call
bound
popf
xchg
pop
mov
mul
dec
inc
pop
rcr
add
fdiv
jno
xor
mov
fcom
out
scas
hlt
pop
sbb
mov
mov
retf
sub
sbb
add
cmp
ss
nop
ds
or
adc
inc
mov
ret
lahf
and
dec
sbb
ret
scas
adc
dec
pop
or
and
mov
cli
test
xchg
xor
add
push
cmp
jne
xchg
mov
sbb
xchg
pop
push
push
sbb
add
mov
mov
or
daa
pop
cmp
ja
(bad)
les
and
cdq
mov
(bad)
daa
add
xchg
push
pop
lea
test
rol
imul
loope
popf
aam
cmp
aam
inc
ficom
pop
pushf
rol
push
fnstenv
leave
lods
or
mov
jl
pop
idiv
mov
out
cmp
loopne
sbb
pop
inc
lock
sub
push
sub
jo
sub
or
or
icebp
in
ret
mov
mov
or
sub
inc
dec
inc
sbb
or
xor
inc
or
jns
cmp
(bad)
cmp
adc
mov
ret
daa
sub
adc
and
mov
mov
imul
xor
push
les
and
inc
sete
cmp
mov
push
sbb
add
ret
add
xor
loopne
adc
retf
jns
rol
jl
or
or
jo
cmp
lea
in
ror
dec
pusha
sahf
int
pop
pop
shl
lods
or
mov
das
sub
dec
aad
xor
adc
add
and
mov
cdq
cmp
ret
adc
mov
and
xchg
shl
mov
xor
mov
(bad)
mov
mov
adc
movs
pop
lock
es
rcr
jo
cmps
lds
mov
or
shr
in
ffree
xchg
aad
pop
sbb
xchg
inc
cmp
jge
pop
jge
push
(bad)
ror
popf
dec
mov
scas
shr
xor
sbb
cld
in
or
lock
ret
sbb
test
sub
or
cmp
mov
fild
lods
js
sub
or
or
or
pop
in
jp
les
inc
push
js
push
addr16
push
cmp
pop
imul
sbb
fist
sbb
cmp
jnp
lods
or
(bad)
xor
repz
sbb
daa
mov
pop
mov
ja
sbb
aam
(bad)
xor
test
mov
sbb
pop
lods
jl
push
fcom
(bad)
add
lods
dec
mov
popa
push
mov
dec
jb
cli
add
shl
stc
xchg
jbe
lods
and
cmps
cmp
pop
ret
and
cs
clc
dec
mov
jge
mov
cmp
add
pop
xor
imul
pop
retf
xor
mov
cmp
jecxz
mov
push
lock
xchg
xchg
call
mov
shl
sbb
retf
pop
jmp
inc
pop
push
stos
inc
sub
(bad)
fistp
sbb
pop
xchg
and
loopne
retf
xor
adc
js
dec
push
xchg
pop
pop
inc
cmp
add
sahf
sbb
dec
jns
push
mov
js
hlt
fs
addr16
mov
and
inc
xchg
out
add
cmp
mov
push
(bad)
ffree
sar
mov
push
xchg
aaa
mov
int
or
into
mov
aad
xchg
call
push
mov
daa
push
pop
sbb
xchg
xacquire
cmps
retf
ret
test
test
lea
xchg
or
inc
pop
push
xchg
or
push
not
sbb
mov
mov
call
mov
inc
frstor
dec
shl
xor
push
xor
mov
pop
add
jecxz
push
les
mov
into
popa
gs
xor
xor
cmovae
shl
jo
push
mov
popa
push
xchg
pushf
mov
xchg
cmp
or
mov
xor
retf
and
stos
imul
mov
mov
mov
lods
jo
addr16
or
sbb
add
pop
gs
pop
sbb
push
aas
fs
pop
loopne
push
dec
(bad)
movs
push
or
bound
hlt
inc
sbb
jge
loope
rcr
ja
adc
ret
xchg
pop
movs
mov
xor
xchg
test
mov
pop
test
adc
dec
adc
lods
jmp
movs
sbb
into
push
mov
pop
pushf
jo
sahf
nop
mov
dec
rcl
inc
icebp
sti
test
pop
jp
(bad)
retf
add
(bad)
pop
loope
js
mov
loop
scas
retf
add
test
out
ror
push
jno
sbb
(bad)
mov
xor
push
dec
jbe
out
jp
sub
pop
cmc
sub
ret
xchg
or
pushf
fs
push
pusha
jns
jns
lods
repz
(bad)
jecxz
dec
ret
mov
xor
dec
and
arpl
movs
inc
cmp
dec
push
add
sbb
pop
jo
daa
scas
sbb
jl
xchg
xor
add
scas
gs
fld
mov
lock
(bad)
js
or
out
repnz
pop
cli
call
adc
inc
das
or
cmp
loope
fmul
gs
pusha
aas
in
or
in
jo
fs
adc
lods
xchg
fs
repnz
mov
addr16
cmp
pop
dec
sar
jb
jge
stos
mov
pop
xor
inc
movs
sbb
mov
mov
adc
sar
cli
mov
les
cmp
sub
cmc
add
sbb
add
ins
lds
popa
(bad)
aam
cs
or
in
or
sbb
enter
mov
inc
dec
ds
jo
and
dec
das
push
jb
inc
js
hlt
jmp
pop
inc
out
sbb
lods
dec
rol
retf
js
pop
xchg
mov
popa
or
aaa
sub
sbb
adc
ins
sbb
add
sbb
xchg
daa
xchg
jmp
add
xchg
and
adc
jns
movs
sub
xchg
xchg
imul
xor
sbb
pop
pop
fist
lods
and
aaa
mov
enter
ret
imul
cwde
push
outs
imul
or
in
add
adc
push
inc
loope
sbb
shl
jo
fsub
inc
js
jecxz
cmp
nop
addr16
pop
(bad)
mov
popa
xor
movlps
outs
pop
push
mov
test
dec
cdq
and
lahf
nop
push
das
jbe
movs
mov
aad
inc
ret
retf
jp
retf
push
faddp
jmp
clc
push
or
inc
adc
imul
test
ror
ret
retf
adc
mov
adc
dec
loope
popf
jne
add
push
push
adc
in
or
les
xchg
loop
inc
(bad)
sbb
push
popa
and
xor
inc
ret
push
test
in
dec
les
test
imul
(bad)
mov
lock
ja
and
lods
test
mov
sbb
enter
loopne
inc
(bad)
enter
into
mov
test
shl
push
mov
jo
pop
sbb
sbb
int
test
inc
dec
and
dec
mov
xor
push
and
fmul
cmp
and
retf
stos
xor
jne
sub
cmp
cs
and
dec
lsl
sti
push
test
cmp
xor
pop
and
repnz
aam
retf
or
imul
jne
aaa
xchg
pop
push
les
repnz
and
movs
(bad)
jo
and
fsub
add
and
test
adc
rcr
ffree
add
pop
adc
jo
push
out
cmp
pushf
shr
nop
fsubr
or
mov
jmp
jp
repnz
add
sbb
pushf
mov
xchg
lods
ja
cmp
sbb
push
mov
jb
loopne
repnz
imul
sar
stos
add
mov
add
and
mov
mov
(bad)
cmp
out
enter
dec
jl
repnz
mov
sub
mov
call
imul
add
ins
jno
adc
adc
clts
clc
adc
mov
pop
sub
gs
push
or
dec
dec
cmp
mov
idiv
or
dec
in
retf
cmp
mov
inc
pop
adc
add
adc
loope
add
xor
sbb
adc
(bad)
xor
les
add
aam
adc
loope
add
add
icebp
lar
and
lock
sub
pop
adc
sbb
push
psubusw
sbb
push
sbb
inc
fbld
movs
mov
or
xor
inc
repz
cmp
jmp
xchg
push
fnsave
mov
adc
pop
and
sbb
mov
sbb
into
or
push
cmp
xchg
xor
repz
pop
test
push
inc
adc
sub
punpcklbw
mov
xlat
add
sti
push
inc
cmp
loop
mov
or
cmps
push
sub
mov
gs
sub
daa
jecxz
daa
ins
jo
xor
div
xchg
dec
and
addr16
inc
js
and
pop
shl
rcr
inc
xchg
push
xchg
sub
mov
ins
popa
mov
mov
pop
xor
add
xchg
mov
movs
dec
sbb
cmp
dec
pop
jl
mov
ins
sub
fcom
mov
inc
inc
hlt
xor
ds
lea
test
xor
jo
test
pop
push
fs
cs
cdq
pop
sbb
dec
jl
(bad)
mov
sub
add
xlat
rol
xor
xor
xchg
pusha
push
inc
sub
or
vcmpss
cmc
mov
imul
sbb
je
pusha
es
pop
cmps
jmp
lods
test
mov
push
pop
or
push
jp
into
fidiv
es
(bad)
rcr
and
jecxz
lock
aad
and
test
push
fdivr
in
lods
pop
loope
inc
out
push
je
nop
int
push
jp
mov
loope
and
test
adc
pusha
nop
push
les
or
cs
pop
dec
aam
xchg
in
or
push
push
out
ins
adc
call
ja
and
add
push
cli
sub
push
stos
mov
cmp
sbb
mulps
cmp
dec
mov
pusha
lods
push
cmp
loopne
movs
add
xchg
xor
or
sub
add
adc
movs
jns
pop
cmps
adc
sbb
dec
jnp
retf
into
add
mov
mov
nop
nop
pop
mov
push
sub
cli
add
mov
jne
test
pop
or
rcr
mov
rcr
sbb
fiadd
into
lods
nop
dec
fwait
jb
js
xchg
imul
ret
mov
daa
cli
add
cld
or
cmps
retf
or
adc
pop
dec
sbb
(bad)
mov
mov
add
test
add
lods
sbb
inc
lahf
loopne
movs
and
mov
or
and
nop
xchg
arpl
adc
pushf
add
or
loopne
xchg
mov
xor
dec
gs
inc
jmp
jp
pusha
cmp
push
ds
cmp
shl
int
or
rcr
xchg
mov
or
or
sbb
adc
mov
lods
xchg
sbb
psubb
add
jmp
dec
or
fisttp
add
jge
pop
dec
not
lods
mov
aad
sub
or
out
push
adc
mov
adc
mov
push
or
stc
xchg
xor
shl
xchg
into
cmps
jo
sub
into
rol
(bad)
cmp
(bad)
loop
xor
test
lahf
mov
daa
mov
shl
shr
fbstp
push
mov
cmp
fsub
sbb
(bad)
out
test
pushf
mov
ja
mov
outs
je
or
(bad)
add
push
test
add
cmp
(bad)
cwde
sub
cmp
shr
mov
add
jmp
loopne
(bad)
call
jnp
xor
jns
sub
xchg
adc
ins
imul
mov
sub
popf
sbb
cmc
mov
aam
cdq
xchg
mov
jnp
or
dec
(bad)
out
jl
(bad)
mov
add
test
paddd
inc
push
das
stos
adc
xor
out
xor
test
mov
pop
(bad)
xor
into
lock
adc
jne
pop
mov
pop
ja
imul
sbb
inc
test
test
sbb
sub
test
gs
into
push
inc
xor
(bad)
mov
mov
test
or
adc
ret
lods
sbb
nop
pop
jae
sbb
pop
add
push
jmp
inc
outs
cmp
repz
add
ss
jae
dec
dec
pop
jmp
sbb
(bad)
jge
cmp
cmps
sbb
xor
cmp
sbb
pop
shr
ror
enter
ins
sbb
mov
call
add
mov
mov
sbb
pusha
imul
test
and
pushf
or
dec
pop
add
xor
cmp
xchg
ret
mov
nop
and
lods
jae
ficom
xor
cmc
push
sub
jb
cmp
pop
test
xor
sbb
pop
fcom
mov
push
adc
inc
shl
adc
mov
daa
dec
and
ror
rcr
shl
cmc
sbb
mov
rol
retf
pop
cmp
hlt
retf
mov
xor
pcmpgtd
and
add
fwait
and
addr16
pop
xor
loopne
(bad)
scas
sbb
rol
in
cmp
imul
xchg
cmc
popa
loope
xor
jo
add
cmp
sub
mov
jmp
hlt
dec
fisttp
daa
into
inc
lock
pop
and
dec
xchg
cs
aad
scas
outs
inc
std
push
xor
push
dec
js
sahf
xchg
fild
add
mov
popa
addr16
dec
cmp
sub
xchg
ret
pop
adc
push
test
retf
mov
add
inc
mov
add
stc
retf
sbb
and
xor
pop
call
movs
sar
dec
loop
sub
ret
or
adc
or
add
and
and
pushf
out
and
mov
or
sbb
sbb
inc
xchg
loope
rcpps
xchg
push
jp
sbb
adc
movs
outs
loope
cli
dec
pop
cmps
dec
fnstcw
arpl
pop
cs
test
jbe
repnz
push
add
bound
jno
push
fild
pop
test
ror
mov
sahf
cmp
push
mov
mov
sbb
mov
test
push
mov
mov
mov
jnp
mov
lods
push
nop
pop
pop
dec
aaa
clc
and
call
ret
push
jmp
mov
(bad)
jmp
fadd
cmp
adc
inc
aaa
lock
addr16
jl
retf
xor
repnz
mov
pop
addr16
out
mov
dec
(bad)
repz
or
movs
xchg
xchg
cmp
and
sub
cdq
rcl
xchg
jno
iret
adc
dec
sbb
mov
pusha
ret
adc
add
push
scas
jns
add
lods
xchg
xchg
shr
cmps
test
mov
stos
pop
pop
sbb
and
in
idiv
cmps
add
sub
inc
mov
cdq
dec
(bad)
xchg
arpl
push
xor
test
dec
push
out
out
and
sar
push
jp
sub
ror
movs
adc
and
mov
add
test
ror
xor
push
js
pop
push
in
sub
fisubr
nop
nop
ret
add
or
test
aaa
out
pop
push
sub
add
call
sbb
jle
xor
(bad)
inc
out
outs
popa
test
sub
idiv
loop
dec
pop
jl
scas
mov
sub
scas
mov
push
push
ret
in
in
add
mov
cmp
cmp
imul
jnp
jne
movs
outs
jo
push
jmp
mov
sub
je
popa
mov
imul
daa
addr16
loop
mov
jno
pop
cmp
sbb
xchg
sub
push
sbb
sbb
popa
outs
mov
aaa
pop
cli
cmc
hlt
or
mov
lahf
add
bound
sub
inc
dec
test
and
pop
mov
add
cs
jecxz
inc
add
xlat
imul
call
mov
fcom
jge
mov
xor
add
adc
es
push
es
jo
and
pusha
test
dec
fiadd
add
call
lock
push
push
add
cmc
pushf
xor
mov
mov
movs
adc
loope
push
and
sub
dec
(bad)
lods
jno
jecxz
sub
fisubr
test
sahf
fwait
in
dec
push
pushf
xchg
call
add
mov
xchg
out
(bad)
adc
cmp
cmp
inc
fcomp
fcomp
push
jns
cmp
popf
mov
push
sub
and
test
pop
mov
aas
into
movs
cmc
dec
jmp
sbb
mov
and
sub
inc
xor
push
or
add
and
pop
sbb
mov
or
rol
mov
sar
xlat
ret
jmp
jl
rcr
xchg
add
add
mov
sub
fwait
(bad)
add
test
inc
leave
jno
push
mov
icebp
sbb
mov
add
push
or
sub
xchg
popa
dec
sbb
lock
sub
mov
sbb
sbb
loop
sub
out
cmp
xor
sub
js
cmc
adc
or
mov
(bad)
or
inc
sub
cli
add
add
add
dec
inc
cmp
or
mov
(bad)
dec
adc
push
inc
add
sbb
jae
fcomp
shr
jbe
mov
test
das
jmp
adc
and
(bad)
fdiv
cs
inc
out
push
inc
xor
cmps
sub
add
test
cmp
lods
lea
enter
popa
nop
ror
cmps
adc
adc
adc
mov
sahf
sbb
cmp
adc
aad
ret
pop
fs
sub
cmc
lock
loop
pop
js
xor
sub
dec
movs
xchg
ins
or
sub
or
xor
(bad)
(bad)
sub
daa
cmp
push
sbb
lock
test
fs
push
movs
cs
push
xchg
cmp
test
adc
je
and
lods
xchg
xchg
(bad)
and
lahf
sub
xor
loope
sub
adc
mov
mov
scas
xor
dec
cmp
sbb
cmp
sub
(bad)
jmp
or
fcomp
or
mov
sub
sbb
jle
mov
imul
ror
mov
push
in
or
lods
mov
int3
lods
sahf
xchg
mov
jp
xchg
movs
shr
cli
div
xchg
aam
pop
inc
mov
lods
and
and
pop
ins
cmp
nop
cmp
add
sbb
ret
in
enter
rol
cli
and
and
sar
sbb
add
jge
in
fsubr
shr
adc
mov
or
lea
jo
cmp
pop
ficomp
xchg
xor
cwde
mov
(bad)
cmps
sub
gs
enter
mov
xchg
xor
leave
jae
or
ffree
or
mov
push
aad
xor
iret
leave
add
or
js
test
je
in
pop
imul
jne
arpl
hlt
inc
jmp
popa
imul
pop
imul
out
xor
add
movs
sbb
mov
shr
retf
mov
bound
dec
js
adc
pop
xor
cmp
pop
cmp
rol
ucomiss
push
out
cmp
add
ins
cmp
in
lods
push
add
scas
inc
movs
pop
popa
movs
dec
push
(bad)
add
pop
cmp
adc
sbb
lods
jo
hlt
neg
pusha
cmp
int3
inc
ret
xor
cdq
mov
enter
pop
and
dec
or
jne
leave
xchg
jp
mov
mov
sbb
setge
bound
push
bound
push
add
dec
xchg
jb
ret
push
sbb
xchg
pop
mov
or
jo
xor
dec
sbb
cmp
dec
ror
cmp
jns
repz
sbb
call
mov
push
cld
mov
and
clts
ja
fucom
or
mov
adc
and
push
or
add
fstp
xor
loopne
das
test
jp
pusha
mov
push
jo
loop
sbb
mov
push
and
push
rcl
addr16
test
pop
cmp
out
adc
stc
pushf
nop
add
mov
into
push
sbb
daa
lods
xchg
xchg
mov
cmp
das
emms
add
xchg
mov
pop
fst
aam
add
sbb
push
pushf
adc
jne
sbb
sahf
cli
jns
jae
pusha
mov
sub
add
jmp
test
or
mov
adc
mov
xchg
lock
add
pop
dec
or
mov
dec
cs
jle
pop
jns
loopne
ss
fwait
cmp
push
jnp
add
add
push
jne
arpl
mul
push
scas
pop
or
test
sbb
add
sbb
mov
gs
retf
inc
add
hlt
or
cmps
shr
xor
sub
stos
mov
and
clc
shl
daa
pop
pop
mov
retf
js
jge
pop
push
xchg
lea
xor
pop
xchg
neg
lods
mov
push
pop
and
ss
add
xchg
push
je
jp
enter
push
push
add
push
outs
and
outs
hlt
xchg
aad
test
xor
mov
pushf
nop
(bad)
nop
loopne
addr16
pop
sbb
add
adc
cmc
cmp
jmp
pushf
push
out
in
and
fstp
xchg
xchg
jle
retf
sar
pop
sub
push
push
adc
test
inc
pop
pushf
cmps
add
inc
or
cmc
mov
xchg
outs
jb
rcl
arpl
jno
mov
pop
pop
push
sbb
sbb
enter
xchg
popf
mov
sbb
icebp
xchg
leavew
inc
es
js
jns
(bad)
mov
mov
cmp
inc
leave
pop
and
loope
push
iret
xor
pop
jmp
sub
test
mov
mov
push
cmp
das
movs
(bad)
loop
xchg
sub
pop
cmp
pop
mov
and
inc
dec
add
dec
jge
test
pop
cmp
push
shl
or
pop
inc
aaa
jne
mov
and
sbb
or
nop
mov
sub
or
pop
jge
sti
js
jne
jp
push
imul
mov
std
cmps
inc
pop
cmp
in
jp
or
sub
add
jg
loop
gs
outs
and
pop
pop
ret
ror
rcl
pop
push
cld
ss
push
inc
dec
mov
fdivr
pop
dec
dec
ins
or
loope
bound
add
cmp
or
mov
sub
pop
xchg
xor
ret
push
lea
pop
lahf
ficom
push
jo
dec
jne
aam
fucomp
add
xor
cmp
push
jp
pop
std
xchg
or
dec
jecxz
es
or
xchg
test
and
aad
sub
sbb
enter
sti
outs
or
sbb
lods
and
imul
jb
cmc
ret
in
jp
xchg
shl
scas
popf
mov
dec
test
inc
jo
xchg
mov
sbb
aad
fs
shl
push
xlat
ss
out
pushf
pop
dec
rol
mov
or
cmps
ins
cmp
xchg
mov
mov
popa
jne
mov
clc
mov
mov
pop
scas
push
sbb
out
xchg
pop
cmp
dec
retf
rcl
sbb
sbb
outs
in
xor
mov
test
sbb
xor
sub
pushf
dec
iret
aad
mov
out
ins
inc
hlt
out
dec
js
mov
fdiv
imul
fs
jo
retf
pop
ins
imul
fsub
sti
sbb
inc
js
rcl
pop
sub
jbe
fldenv
pusha
or
lods
sub
xchg
sbb
mov
dec
arpl
and
mov
inc
mov
and
(bad)
xlat
loopne
inc
not
dec
retf
and
mov
push
or
dec
out
or
push
(bad)
ja
jmp
inc
daa
mov
push
aam
pusha
js
das
gs
enter
or
in
xlat
sub
xor
int3
test
icebp
dec
lds
rcl
sbb
lock
call
sub
mov
dec
enter
or
jbe
lods
retf
jle
and
inc
mov
inc
lods
xor
popf
inc
inc
sbb
push
nop
add
xor
popf
daa
cmp
xor
push
out
push
dec
cmp
dec
adc
jns
cmp
adc
inc
adc
cs
ret
jb
dec
cmc
scas
lds
(bad)
shl
in
cmp
mov
sub
pushf
push
daa
cmp
or
push
cmps
or
lock
push
ds
push
mov
mov
sbb
sbb
cdq
add
les
fdivr
nop
leave
mov
or
xchg
dec
or
enter
ror
rol
(bad)
and
movs
jae
inc
or
leave
mov
imul
push
jne
push
or
mov
xlat
outs
in
lods
(bad)
outs
movs
iret
or
lods
shl
push
mov
xchg
outs
dec
mov
push
jle
pop
push
pop
dec
shr
mov
xor
imul
mov
test
sbb
push
ret
jecxz
movs
inc
xlat
adc
inc
push
jge
dec
adc
mov
loope
inc
pop
dec
or
bswap
mov
retf
xchg
push
cmova
sub
test
mov
sbb
sbb
shl
cmp
and
shl
call
movs
xor
xlat
les
mov
movs
mov
shl
xor
scas
cli
retf
ret
ret
loopne
dec
pusha
pop
jp
xor
(bad)
js
xchg
add
adc
rcr
push
pop
jne
adc
gs
or
add
outs
jno
call
xchg
add
xor
pop
dec
mov
mov
mov
sub
inc
lea
(bad)
loopne
and
pop
sub
dec
xlat
ss
shl
cmps
jmp
lea
outs
or
xor
sbb
cmp
mov
enter
add
mov
xchg
sub
mov
gs
jmp
sar
les
jb
imul
sbb
cmp
ja
ds
rcl
mov
or
mov
icebp
test
sub
mov
jecxz
adc
dec
inc
sbb
dec
ja
outs
nop
cwde
test
push
int
(bad)
jecxz
(bad)
sub
dec
pop
ret
push
sbb
popf
out
lods
sub
retf
int3
fild
mov
dec
ins
pop
sub
sbb
sbb
cld
mov
sbb
int
or
mov
and
sbb
das
xor
call
loope
(bad)
movs
(bad)
mov
jo
mov
jns
adc
sub
sbb
push
sub
pop
mov
mov
push
add
push
clc
add
xchg
xchg
sbb
ins
in
and
mov
add
dec
out
mov
jne
inc
fsubr
mov
lock
nop
jae
add
sbb
test
push
cli
pop
and
sbb
inc
push
call
aaa
xor
lock
fwait
mov
out
pop
and
push
add
sbb
fadd
add
fcom
dec
cld
popf
and
cmp
gs
loop
fs
iret
ficomp
js
or
or
pop
loope
push
ret
int3
inc
adc
and
gs
push
sub
cmp
cmps
fidiv
push
clc
cmp
push
add
add
sub
(bad)
mov
inc
movs
sub
fsub
(bad)
xchg
cmp
push
push
movs
mov
(bad)
call
gs
cmp
xor
xor
xor
sub
lea
and
in
mov
fisubr
test
jno
cmp
xchg
add
outs
cmps
or
mov
pop
ficomp
xchg
jmp
loopne
mov
xor
jnp
lock
xor
jecxz
rcl
bound
bnd
cld
xchg
push
loopne
adc
movs
push
push
mov
ret
xchg
jnp
dec
cmp
xor
ins
nop
cmp
and
call
jo
adc
sbb
xor
je
xchg
xor
push
mov
add
inc
leave
adc
push
mov
repnz
in
mov
adc
mov
and
test
inc
lea
mov
push
mov
es
and
or
push
xor
fdivr
jae
test
mov
gs
and
and
dec
in
cs
cmp
shl
mov
add
xchg
inc
mov
mov
push
jo
add
mov
add
xor
sbb
pop
mov
loope
fadd
nop
sbb
in
cmp
retf
sub
int3
and
adc
adc
push
or
daa
enter
sti
xor
adc
lea
stos
add
sbb
push
pop
add
popa
jp
jnp
xchg
ret
adc
ins
cmp
mov
pop
sub
jmp
mov
add
loopne
leave
mov
pop
pop
sbb
fld
and
dec
mov
ja
add
(bad)
adc
or
mov
adc
fwait
and
rol
jbe
rol
pop
in
out
push
and
pop
ror
fcom
(bad)
call
or
dec
and
arpl
stos
fimul
jge
push
or
sub
stos
nop
stos
lea
adc
xchg
test
stc
pop
mov
jb
mov
mov
imul
cmp
xchg
push
add
jmp
xor
pushf
pusha
pusha
pop
(bad)
mov
sahf
push
mov
movs
and
xor
jp
mov
inc
xor
sar
hlt
ret
push
push
sar
icebp
adc
jns
fadd
cmp
sub
push
sub
xchg
xchg
aaa
dec
in
push
xor
sub
fsubr
and
imul
cs
(bad)
jmp
ret
aam
(bad)
jl
or
je
pop
xor
arpl
xor
addr16
loopne
fcom
icebp
add
or
jmp
push
push
push
imul
gs
jns
ja
jo
jae
inc
push
mov
mov
test
dec
into
fist
add
loop
arpl
push
inc
cmpps
mov
retf
dec
sbb
cmp
mov
mov
imul
jnp
and
xchg
mov
das
jmp
sbb
movs
je
sbb
add
xor
dec
or
aam
mov
push
push
(bad)
and
xor
jo
push
push
cmp
rol
or
(bad)
rcr
inc
jl
xor
sar
xchg
daa
mov
dec
mov
sub
retf
fisttp
sbb
adc
ror
rol
mov
add
dec
xchg
ret
add
jp
dec
mov
adc
ret
push
sbb
lock
sahf
pop
lea
push
add
out
mov
mov
or
and
mov
ret
sbb
cmp
sub
xchg
and
xor
sbb
(bad)
jl
ret
pop
fisttp
gs
cwde
xchg
shl
cmp
or
retf
xor
push
xor
loopne
push
les
xor
sbb
push
jo
es
outs
mov
jne
pop
adc
test
inc
xchg
sbb
out
sbb
into
mov
stos
retf
mov
dec
push
dec
add
ss
adc
ret
xchg
or
(bad)
test
mov
dec
add
rcr
push
pop
sub
ret
imul
dec
adc
fcom
xor
ja
push
dec
push
sbb
js
sar
into
shl
or
fmul
push
xchg
and
les
mov
enter
loop
fdiv
xchg
xor
xor
adc
or
xchg
adc
mov
arpl
mov
xor
lock
dec
add
jno
loop
sbb
mov
inc
sub
(bad)
pushf
pushf
push
xor
retf
and
rcr
retf
cs
inc
into
add
sub
or
cmp
pop
(bad)
or
fs
fcomp
stc
sub
ret
jns
sub
xchg
adc
cmp
out
ror
push
pop
imul
cli
rcr
sbb
jl
leave
mov
or
xor
imul
add
retf
jno
pop
jge
out
cdq
ss
sbb
(bad)
(bad)
in
inc
mov
sub
mov
out
and
jle
imul
cwde
mov
dec
int3
mov
xor
loope
jg
nop
mov
xchg
push
push
mov
lds
push
pop
fwait
mov
adc
cmc
das
aad
lock
pop
test
inc
or
jmp
rcl
push
xor
and
mov
add
cmp
leave
sub
ja
add
aas
enter
mov
push
cmp
mov
jo
xor
ror
adc
mov
sub
mov
push
iret
and
mov
xchg
(bad)
pop
ret
jecxz
pop
xchg
retf
sti
mov
add
and
das
or
jb
adc
pop
and
xlat
add
fs
push
sbb
iret
adc
imul
pop
jl
and
mov
icebp
jmp
or
loopne
dec
mov
rcl
pushf
test
cmps
mov
xor
fld
cmp
and
call
and
fld
into
shl
sahf
jb
out
shl
call
xchg
jg
(bad)
sbb
cmp
sbb
out
(bad)
and
nop
push
inc
xchg
mov
jo
add
sbb
sub
hlt
or
cmp
mov
jns
mov
adc
aam
out
nop
les
cmp
js
cmp
(bad)
jecxz
lock
outs
adc
out
xor
je
(bad)
aad
add
mov
leave
in
xor
push
sbb
cmp
nop
mov
adc
leave
sub
fadd
fucom
cmp
cmp
in
ror
loopne
pop
push
mov
retf
leave
mov
aaa
sub
enter
mov
mov
push
fdiv
add
lods
lock
je
jbe
mov
mov
push
xchg
sbb
hlt
dec
jmp
jne
cmc
sbb
js
cmp
ret
sbb
mov
add
adc
pop
cmp
stos
mov
mov
pop
jno
mov
or
icebp
xor
cmp
push
retf
gs
mov
and
leave
int
clc
mov
pusha
lock
xchg
lods
je
pop
clc
jmp
push
pop
inc
inc
gs
adc
lods
stc
adc
rol
mov
jmp
sbb
fstp
sub
iret
scas
mov
loop
es
cmp
dec
sbb
outs
push
lahf
rcr
sbb
xchg
pop
jo
sbb
push
movs
fldenv
push
mov
dec
rol
mov
ret
dec
(bad)
sbb
scas
cmp
mov
pop
sbb
dec
fadd
sub
xor
mov
push
loop
jns
pop
xchg
addr16
and
and
cmp
cmps
scas
inc
imul
or
(bad)
mov
xchg
mov
inc
xlat
mov
or
jns
scas
add
push
shl
xchg
fnstcw
shl
mov
pop
fisubr
pop
pop
add
fs
mov
xchg
pop
retf
adc
aas
ins
loope
dec
inc
sbb
cmp
out
xor
adc
(bad)
push
frstor
dec
lea
ret
add
jne
mov
xor
inc
push
daa
lods
outs
and
mov
dec
mov
push
pop
and
or
mov
popa
jb
jne
mov
lea
test
sbb
pop
xlat
mov
and
lea
pop
jl
sub
xchg
(bad)
mov
orps
add
in
or
into
cmp
adc
mov
cmps
into
pop
adc
push
lock
or
repnz
or
(bad)
adc
sbb
cmp
out
xor
adc
fnstsw
mov
dec
int3
push
popa
(bad)
pop
sbb
daa
and
pop
and
mov
stos
(bad)
stc
mov
push
fld
xchg
pop
out
mov
retf
dec
sahf
nop
sbb
enter
je
push
xchg
ret
push
mov
xor
adc
pushf
icebp
sub
adc
aaa
lock
push
call
adc
sbb
xchg
xchg
and
add
(bad)
retf
push
(bad)
rcl
adc
push
jle
fdivr
or
mov
cmc
mov
daa
jmp
cmp
je
sbb
ror
mov
xor
loope
sub
pop
leave
or
xchg
stc
test
sti
fadd
nop
sub
into
nop
push
jge
inc
stos
xlat
loope
adc
jmp
scas
xchg
push
add
or
aaa
test
pop
test
push
rol
loopne
mov
xchg
push
popa
and
fwait
cmp
daa
lods
jb
test
fcomp
xchg
retf
scas
jg
popf
or
xchg
xor
and
inc
jmp
js
dec
xchg
mov
lds
push
add
test
mov
mov
out
mov
(bad)
lock
or
mov
icebp
hlt
sbb
pop
aas
mov
ror
popa
lock
aad
mov
mov
push
fild
iret
mov
cmps
mov
ret
hlt
pop
sbb
push
js
xchg
add
shl
add
add
arpl
hlt
jp
sbb
pusha
loope
mov
xor
and
retf
inc
imul
gs
rcl
cmps
popf
cwde
cmp
sbb
inc
mov
cmp
sbb
pop
jbe
sub
nop
xchg
cmp
sbb
lods
outs
xor
mov
pop
mov
dec
leave
push
or
jo
sub
xchg
xchg
jns
int
push
jnp
(bad)
cmps
hlt
inc
sbb
shl
mov
lea
xchg
pop
push
pop
inc
fst
daa
sbb
adc
xchg
icebp
mov
sbb
add
sbb
cmps
sub
jae
pop
xchg
adc
je
js
or
loop
nop
bound
or
mov
call
add
inc
jb
xchg
icebp
les
fidiv
push
ins
popf
xor
and
rol
add
fwait
mov
shl
pop
(bad)
(bad)
clc
cmp
bound
imul
cmp
xor
add
adc
lds
jne
shr
sbb
inc
jns
mov
movs
mov
add
jb
into
rcr
jmp
push
hlt
pusha
retf
rol
mov
(bad)
adc
pop
mov
or
or
fbld
jns
js
dec
mov
mov
push
push
repz
adc
lock
dec
repz
je
push
test
sub
sbb
dec
nop
and
icebp
add
add
(bad)
mov
(bad)
fucom
push
jnp
pushf
or
aas
mov
cmp
jb
in
ss
hlt
jmp
push
test
mov
mov
dec
and
pop
add
shl
retf
sbb
push
sbb
mov
push
dec
pop
jmp
ror
sub
cmp
push
rol
push
sub
cmp
adc
xchg
mov
js
push
xor
jg
pop
pop
(bad)
xchg
inc
sub
loope
push
push
mov
pop
lock
sbb
dec
cdq
stc
test
sar
gs
iret
mov
add
xor
aad
cmp
pop
pop
or
imul
out
cmp
mov
adc
fs
mov
sbb
fild
ret
sbb
mov
je
bndstx
or
mov
imul
(bad)
dec
pop
or
xlat
mov
or
add
aam
push
jge
xor
pop
inc
adc
enter
mov
jo
loope
or
mov
push
sbb
or
jmp
add
adc
test
add
div
and
retf
(bad)
dec
and
push
addr16
(bad)
and
fadd
movs
outs
mov
dec
xchg
(bad)
enter
xor
rcl
push
ret
mov
int3
daa
or
adc
or
pop
cmp
and
adc
push
daa
sbb
ror
cmp
test
out
mov
cmp
xchg
xor
push
(bad)
(bad)
in
xor
leave
adc
sbb
retf
xlat
xor
inc
or
cmp
mov
xor
sysenter
ja
into
adc
ss
js
xor
and
fbld
shl
das
cmp
ja
adc
xchg
cmp
cmp
dec
xchg
fnsave
mov
ins
pusha
push
aam
xchg
mov
and
test
or
mov
xor
mul
fs
add
fcomi
inc
loopne
outs
pop
aad
ja
add
mov
pop
add
out
push
pop
or
push
xchg
mov
and
enter
add
adc
mov
gs
test
sbb
cmp
ret
ja
push
lea
call
pushf
xchg
xchg
jl
fcomi
xor
add
jnp
add
xchg
pop
add
push
add
in
add
ret
ret
icebp
mov
dec
jb
mov
add
call
mov
mov
cmp
sbb
fwait
lock
test
daa
and
lock
or
pop
adc
dec
orps
aas
add
xor
popa
loope
pop
inc
dec
mov
fisttp
adc
test
push
jb
xor
mov
mov
xchg
mov
cs
test
xchg
push
and
xchg
mov
xchg
jmp
xchg
shl
lods
lock
mov
lea
enter
xchg
push
dec
jno
xor
and
mov
pop
(bad)
int3
cli
sbb
jl
(bad)
(bad)
jmp
in
add
or
adc
cmps
mov
push
fild
and
mov
sbb
inc
xor
sahf
lock
je
sub
xchg
or
loope
cmp
jne
xor
adc
lods
jle
mov
mov
cli
push
or
shl
popf
ss
(bad)
retf
push
mov
(bad)
and
retf
sbb
mov
push
movs
xor
sbb
pop
sbb
sub
xchg
xor
dec
bound
mov
mov
mov
push
pop
push
out
aas
loop
mov
js
lahf
mov
out
lahf
push
add
dec
xchg
mov
rcr
xor
jle
add
pop
retf
lds
adc
loopne
into
repnz
in
sub
cs
mov
(bad)
call
cmp
sbb
mov
pop
out
xchg
pop
(bad)
xor
xchg
cmp
push
das
ss
loopne
daa
xchg
movs
push
xor
push
inc
jns
sahf
pop
nop
mov
adc
add
aam
inc
fld
jge
stos
ds
cmp
mov
fmul
cmp
mov
mov
fld
xor
sbb
or
push
add
pop
or
call
(bad)
arpl
or
xchg
dec
retf
(bad)
sub
cmpps
mov
adc
js
movs
mov
shl
mov
lahf
mov
cmp
inc
adc
rol
sub
jno
ins
pop
and
pop
pop
lock
ret
daa
mov
mov
xchg
retf
pop
arpl
jl
jo
pop
jl
jo
sub
jnp
adc
jl
mov
push
rol
not
inc
and
test
frstor
and
and
(bad)
popf
or
leave
mov
push
stos
xchg
icebp
pushf
or
xchg
jge
and
out
xor
loopne
int
lods
aaa
sub
cmp
lods
jb
movaps
jecxz
inc
retf
das
inc
cs
add
xor
cbw
movs
mov
in
push
out
cmp
lea
addr16
call
and
xor
repnz
xor
pop
jo
push
mov
sbb
ins
js
mov
shr
movs
loop
jb
daa
jb
and
adc
xchg
add
icebp
mov
hlt
xchg
rol
int
sbb
xchg
and
js
mov
fmul
xchg
mov
mov
icebp
addr16
inc
mov
fwait
les
(bad)
dec
in
xchg
jbe
and
pop
sbb
push
leave
ror
sbb
cmp
cld
dec
shr
xchg
es
adc
pop
ret
xor
retf
mov
dec
pop
ja
loopne
das
addr16
cmps
sti
arpl
shl
mov
xor
push
and
sbb
mov
cmp
iret
adc
mov
jo
loope
or
xchg
jo
push
pop
pop
icebp
xchg
jmp
xchg
ds
adc
mov
inc
imul
xor
jo
pop
push
sub
sahf
hlt
ret
jmp
ss
xor
int
push
sub
loopne
xor
or
and
inc
xchg
nop
or
loope
in
dec
inc
js
mov
jecxz
cmps
lock
xchg
pop
js
xor
sub
cmp
add
outs
std
fidiv
push
sahf
mov
imul
(bad)
push
movs
lods
addr16
retf
cmp
push
loop
pop
scas
sub
in
mov
mov
pop
mov
xor
mov
ss
or
in
pop
jge
push
xor
push
xchg
jmp
cmc
call
pop
fidivr
(bad)
mov
or
and
or
fld
push
push
retf
xchg
lods
les
jo
or
jmp
outs
or
sbb
push
sbb
jl
rcl
xor
ror
push
or
jae
push
ins
cmp
xlat
(bad)
and
add
ja
ret
pop
sbb
stc
cmp
add
fwait
rcr
pop
sar
je
ret
std
xor
mov
push
fnsave
or
rol
fild
mov
shr
mov
adc
and
or
and
pop
and
and
sub
xchg
adc
icebp
adc
scas
mov
in
add
jg
mov
jp
mov
pop
sbb
ret
lods
pop
sub
idiv
mov
sub
pushf
cmc
or
xchg
movs
rcr
cmp
lock
ret
pop
pushf
pop
mov
inc
and
loopne
xor
fsubr
retf
sbb
fidiv
add
pop
cld
outs
ret
movs
mov
cmp
mov
les
xor
(bad)
or
mov
imul
push
or
test
sbb
out
adc
xor
sub
pushf
mov
mov
addr16
jge
cmps
mov
shl
adc
or
and
inc
(bad)
push
(bad)
fisttp
sub
stos
dec
dec
jns
popa
or
or
push
pop
mov
rol
inc
pop
pop
std
and
pop
lock
dec
imul
loopne
mov
mov
and
xor
or
mov
cwde
xchg
push
les
in
adc
push
jmp
jbe
push
and
shl
cmp
call
jmp
ins
push
fild
lods
push
and
dec
jmp
add
cli
popf
pusha
or
inc
pushf
data16
xchg
lock
or
ds
or
dec
js
pop
and
inc
in
popa
mov
xchg
pop
jmp
loope
dec
cdq
sbb
shl
rcl
test
and
mov
cmp
mov
sbb
cmp
or
sub
sahf
inc
jecxz
test
pop
into
fucomp
push
das
enter
sbb
push
sbb
cmc
test
mov
scas
inc
(bad)
in
fdiv
lods
stos
add
cmp
inc
movs
scas
xchg
fs
inc
sbb
push
xor
ror
or
lods
cmc
sar
leave
rol
push
test
mov
nop
aad
scas
dec
dec
cmc
lock
inc
and
sub
push
js
das
sahf
into
inc
loopne
(bad)
mov
mov
mov
sbb
cmp
pop
cmp
xchg
test
ret
data16
mov
jge
loope
inc
pop
or
(bad)
sub
cmps
xor
xchg
aad
inc
push
or
(bad)
nop
inc
in
popa
mov
retf
mov
jge
mov
and
add
les
in
sahf
jno
test
(bad)
ror
adc
hlt
clc
xchg
hlt
out
imul
test
js
jnp
dec
ja
xor
dec
mov
add
adc
dec
retf
cmp
mov
into
imul
mov
imul
outs
sbb
jno
fisttp
cmp
sbb
inc
dec
inc
out
sub
sub
xor
loopne
loope
jmp
imul
test
sub
ret
xchg
push
(bad)
xchg
std
cmp
rol
add
and
pop
or
pop
clc
adc
fdiv
rol
int
add
(bad)
loopne
sbb
mov
daa
gs
pop
fsub
cmp
xchg
hlt
xchg
dec
js
cli
fcmovnbe
test
xchg
lock
imul
fs
mov
ins
pushf
pusha
jne
inc
in
loopne
xor
lods
cmp
ret
dec
xchg
lock
lea
fadd
sahf
or
call
add
xor
test
call
in
lods
cmps
jo
push
pop
mov
mov
popf
push
cmp
xchg
jmp
(bad)
sbb
add
xchg
push
lock
adc
ret
sbb
xor
pop
hlt
std
jnp
and
jne
lods
jno
inc
xchg
test
dec
popf
test
mov
xor
and
inc
sbb
jbe
jo
cmp
push
(bad)
cmp
inc
jmp
call
ret
mov
test
lods
adc
jl
xor
pushf
fwait
push
out
(bad)
fmul
ror
(bad)
inc
aaa
pop
cmp
sub
pop
dec
inc
test
imul
inc
dec
mov
sahf
xor
addr16
add
sub
int3
adc
in
lods
pop
push
or
cmp
into
adc
jae
xor
ds
retf
cwde
lds
cmps
ret
xchg
pusha
adc
cmp
ret
cmc
adc
(bad)
jmp
xor
sub
cwde
je
xor
push
add
pop
mov
xor
xchg
lock
xchg
in
shr
dec
xchg
dec
das
add
xchg
cmp
sub
repnz
into
ret
gs
pop
or
push
dec
jp
iret
cmp
in
xor
push
push
imul
mov
ins
sbb
sbb
loop
push
inc
and
lods
fiadd
push
jne
test
ret
repz
cdq
icebp
cmp
pop
and
or
iret
sbb
lock
call
(bad)
rol
xchg
daa
and
xchg
adc
mov
xor
jns
jno
push
push
pop
push
popa
mov
lock
push
xor
out
sahf
mov
(bad)
mov
mov
cmp
lock
fwait
sub
sar
sub
call
add
pop
and
loop
mov
cs
jno
sbb
add
adc
(bad)
arpl
push
jbe
outs
leave
ret
lods
jl
retf
dec
pop
div
mov
test
sbb
sar
and
gs
jmp
into
cmp
xor
jno
mov
jecxz
ret
test
sbb
mov
movs
pop
jb
xor
jns
xabort
pushf
xor
sbb
and
mov
das
jbe
cmps
outs
mov
pushf
scas
inc
lods
jo
lods
or
xchg
mov
pop
stc
leave
shl
jae
(bad)
jl
push
push
aaa
(bad)
lods
sub
xchg
pushf
in
inc
jo
mov
pop
xchg
mov
pop
adc
scas
fild
mov
addr16
and
dec
mov
add
aam
push
xor
mov
pushf
jl
inc
addr16
pop
sub
scas
pop
pop
sbb
ret
sbb
cmp
scas
pop
into
aam
out
adc
cmp
add
add
dec
(bad)
fisub
dec
mov
jae
fdivr
in
cmp
jns
pop
popf
nop
and
addr16
push
xchg
and
add
movs
mov
xor
pusha
xor
sub
xor
jbe
xor
test
add
or
ss
cmp
js
inc
clc
cmp
loope
xchg
dec
sbb
or
hlt
leave
pop
cmps
pop
xchg
ds
add
inc
pop
jmp
and
cmps
ror
out
mov
jo
ror
and
and
xor
add
je
inc
xchg
pop
cli
sbb
ss
aam
xchg
jo
out
pop
ja
dec
xlat
sbb
sub
or
or
jnp
je
and
fwait
xor
xor
pop
sbb
arpl
loop
test
ret
in
and
adc
and
adc
xchg
lock
pop
or
stos
daa
inc
mov
sub
adc
fild
fdiv
xor
dec
xor
dec
jo
(bad)
sar
xor
fimul
push
data16
xor
jno
and
add
std
add
cwde
sbb
jl
inc
sbb
adc
pop
pop
inc
dec
or
es
ja
and
rcr
or
rcl
frstor
xchg
xor
cmps
jge
lods
xor
xor
add
lods
cli
adc
mov
push
ja
jl
jne
js
pop
fs
ret
nop
pusha
add
push
popf
or
ror
adc
fld
add
add
push
sub
popf
xchg
lds
mov
sub
(bad)
loopne
iret
push
pop
mov
movs
clc
rcl
cmp
(bad)
outs
pop
lahf
jbe
pusha
sbb
std
sub
jb
in
adc
fist
sbb
ds
gs
inc
fs
cvtps2pd
or
or
call
ins
xchg
adc
fadd
fsubr
imul
mov
rcl
sub
mov
loope
mov
inc
pop
jecxz
push
jmp
mov
pushf
xchg
xlat
test
xchg
ret
loopne
inc
rol
push
sbb
movs
out
lock
and
jle
add
add
outs
loopne
or
mov
pop
cmp
cmp
test
push
(bad)
mov
loop
fstp
push
mov
lea
movs
and
popf
jbe
pop
sub
and
add
cdq
mov
sub
and
mov
push
push
xor
mov
sub
aad
and
fcom
xchg
jo
pop
loopne
ins
xor
jg
inc
into
or
lods
mov
dec
jmp
and
xor
and
sbb
pop
and
mov
call
or
dec
aam
fsubr
inc
pusha
outs
imul
mov
or
inc
(bad)
gs
mov
xchg
dec
add
pop
lods
add
sub
add
cmp
adc
pop
out
push
pop
dec
jb
pusha
into
scas
jo
scas
adc
test
sbb
mov
jmp
jae
pop
xchg
xchg
and
test
push
loopne
mov
es
xchg
dec
jo
inc
jb
out
mov
(bad)
jmp
ds
lods
xchg
mov
xor
jmp
repz
jmp
sbb
shr
xchg
test
inc
add
cmp
adc
add
imul
ret
push
repz
xchg
call
add
nop
xlat
xchg
scas
(bad)
push
push
jno
mov
add
add
(bad)
sbb
in
push
sbb
add
lds
inc
pusha
lods
add
pushf
adc
jbe
es
ret
loop
sbb
sbb
push
push
shr
pop
nop
push
sahf
sub
add
or
bound
nop
ret
les
jecxz
mov
inc
sub
sub
xcrypt-cbc
cmps
adc
mov
cs
in
clc
dec
cli
mov
or
jmp
dec
ja
js
xor
rcr
push
pop
loopne
arpl
nop
lea
test
inc
popa
add
loope
add
shl
add
or
xchg
adc
cmp
push
stos
dec
jno
xor
dec
cwde
clc
mov
lods
mov
mov
repz
or
aam
push
mov
out
arpl
repnz
lods
mov
cmp
scas
adc
dec
fidiv
jb
jne
pop
out
sbb
xlat
or
mov
(bad)
das
sar
jno
cs
into
adc
xor
cmp
je
xor
sub
dec
sbb
adc
jmp
cdq
jmp
ins
sub
xor
fst
jo
arpl
and
sbb
adc
lods
mov
push
adc
cs
outs
sub
pushf
sbb
or
jae
mov
rcl
adc
sub
lods
and
mov
test
push
mov
sbb
das
sbb
mov
int3
mov
add
fwait
cmp
or
mov
adc
cmps
mov
mov
or
call
push
mov
sub
or
test
addr16
lahf
stos
pop
push
stos
and
pop
leave
fistp
cmp
dec
ret
jle
adc
rcr
and
loopne
ja
or
loope
pop
push
les
clc
(bad)
dec
mov
neg
loopne
jg
xor
xchg
jp
jno
push
mov
imul
push
hlt
dec
inc
adc
(bad)
or
mov
sbb
sbb
mov
movs
sbb
imul
inc
pop
cmp
push
in
enter
bts
pop
pop
mov
in
ds
dec
sbb
cmp
ins
sub
jp
mov
sub
dec
cmp
repz
cmp
xchg
or
mov
sahf
aam
sbb
mov
into
fbld
add
cmp
mov
ret
lds
mov
push
push
inc
fdivr
push
pop
lea
add
or
cmps
das
add
add
movs
bound
call
sub
outs
and
sub
lds
call
movs
push
sub
add
bound
jecxz
fcom
and
out
mov
xor
xchg
ja
sbb
daa
leave
fucomip
in
scas
into
adc
popa
inc
popa
loopne
movs
mov
push
addr16
das
aam
imul
scas
pop
add
pop
dec
adc
sbb
popa
inc
js
out
cmps
clc
cmp
out
push
push
aad
adc
sbb
mov
rol
push
sub
movs
inc
add
adc
ret
int3
and
add
dec
(bad)
pop
xchg
and
enter
jno
mov
jge
xchg
arpl
mov
jnp
(bad)
imul
mov
add
gs
adc
in
bndstx
xchg
mov
stc
push
cmp
and
add
dec
mov
clc
jl
mov
inc
jnp
daa
lods
lods
in
es
push
cmp
and
data16
call
adc
je
mov
xor
fcom
mov
gs
push
xor
mov
jnp
fdivp
cmps
aad
inc
sbb
and
and
stos
pop
mov
daa
cmp
scas
mov
and
lds
add
pop
xor
cmp
or
lods
ret
xor
dec
(bad)
js
in
jne
mov
or
ds
rcl
arpl
sub
sub
pop
xchg
xor
xor
je
fld
push
xor
jmp
gs
add
outs
sub
mov
loopne
inc
jns
adc
or
popa
dec
ins
mov
cmp
movs
cmp
ret
pusha
cmp
inc
imul
and
inc
xchg
aaa
pop
ins
lahf
clc
adc
daa
xor
fist
ja
cwde
je
sub
jo
retf
std
mov
or
pop
cwde
sbb
cmp
ret
jmp
ja
jl
pop
dec
mov
call
or
adc
sbb
xchg
ds
or
pushf
add
loopne
sub
stc
in
push
test
jecxz
and
dec
jns
ja
test
add
loop
icebp
popf
pop
dec
cmp
and
into
addr16
dec
xor
mov
out
pop
push
pop
sbb
and
loope
mov
stos
sub
inc
cmp
ret
(bad)
mov
retf
xor
hlt
popa
xchg
pop
scas
jge
rol
cmp
dec
icebp
(bad)
loope
pop
add
xchg
and
and
sbb
and
ss
mov
arpl
push
push
add
pop
and
inc
cmp
lods
into
sahf
cs
and
(bad)
jg
adc
and
mov
sbb
push
and
cmp
outs
call
xor
lea
jl
inc
add
or
rcl
cmp
test
test
ss
mov
into
sbb
or
ret
daa
retf
dec
daa
or
jns
into
mov
pushf
push
xchg
mov
cmp
dec
outs
loopne
sti
mov
pop
in
xchg
lods
shr
mov
(bad)
int3
or
rol
xlat
cmp
dec
shr
jb
test
or
mov
push
jns
add
cmp
sbb
jmp
xor
shr
mov
xchg
pushf
into
adc
pop
inc
test
test
dec
pop
inc
mov
icebp
cmp
jl
adc
pop
jp
rcr
or
sbb
fbld
(bad)
sub
je
ja
test
(bad)
sahf
ss
sbb
in
pop
and
xchg
cmp
test
aas
add
bound
dec
lahf
and
rol
aaa
outs
shrd
or
add
scas
ret
add
nop
ja
sahf
sar
arpl
enter
lahf
cmp
add
jo
inc
mov
mov
dec
inc
movs
mov
outs
mov
sbb
ja
push
dec
nop
jg
or
pop
xchg
and
into
ficomp
sub
popf
xchg
mov
xor
mov
lds
shl
out
rol
into
lock
cli
mov
mov
(bad)
cmp
ins
sbb
sbb
xchg
inc
retf
bound
test
fst
adc
leave
and
sar
dec
ret
aam
mov
dec
popf
dec
pop
adc
and
gs
int3
rol
cmp
dec
lahf
mov
rcr
jle
jb
add
mov
cmp
adc
fs
sbb
xchg
add
in
push
mov
mov
das
shr
aad
add
sahf
not
icebp
enter
test
pushf
xor
packssdw
rcl
lahf
inc
test
movs
mov
mov
sti
aam
retf
cmp
sti
mov
sub
sub
repnz
inc
xor
adc
mov
xor
gs
icebp
or
mov
jmp
sbb
lock
xor
push
cdq
ds
or
push
pop
or
dec
jp
or
int3
pop
mov
fiadd
mov
sbb
jge
in
ins
add
and
mov
cli
mov
inc
pop
ja
mov
inc
mov
shl
std
adc
inc
adc
loopne
enter
xor
sbb
xor
cmp
dec
inc
adc
jmp
popa
hlt
punpckhbw
jg
out
sbb
add
stc
sbb
shl
cmp
adc
mov
jno
sub
pop
dec
mov
adc
jb
lock
xchg
cmp
fdiv
mov
fisttp
into
dec
pop
leave
or
je
ret
cdq
mov
pop
jbe
inc
mov
(bad)
jge
cmp
pop
xchg
mov
seta
stos
and
enter
in
outs
jne
fsub
adc
mov
inc
adc
jb
mov
and
jne
mov
xor
lock
jge
dec
cdq
popa
cmp
mov
mov
lock
inc
mov
inc
scas
pop
sbb
mov
iret
cdq
adc
cmp
cs
(bad)
scas
inc
int
les
xor
xchg
xchg
hlt
pop
push
rcl
cmp
loop
out
xchg
and
adc
pop
nop
add
pop
pop
sbb
fisubr
push
lock
or
dec
sub
jecxz
pop
pusha
sub
xchg
jo
xlat
xor
and
adc
pushf
adc
pop
popa
nop
pushf
and
jo
xchg
(bad)
xchg
mov
dec
add
push
mov
inc
and
ins
jmp
add
shl
jo
leave
es
mov
inc
xchg
stos
add
mov
not
jecxz
dec
push
jo
ret
das
nop
pushf
jno
ret
jbe
mov
push
or
bswap
sub
dec
out
xor
dec
shl
xchg
test
dec
pop
sbb
rcr
cmp
jecxz
int3
pushf
mov
xchg
or
inc
loop
fdivr
xchg
adc
and
outs
ror
mov
nop
dec
inc
lods
mov
sub
adc
(bad)
push
das
cmp
jb
inc
scas
push
outs
enter
cmp
adc
pop
nop
sahf
cmp
xor
dec
pop
or
ja
inc
mov
popf
sub
sub
in
mov
je
add
inc
sbb
pop
pop
aam
ror
call
pop
mov
push
push
into
and
arpl
add
aas
or
sub
sar
dec
mov
pop
jmp
loope
clc
sbb
add
fst
xchg
jo
dec
fst
lahf
pop
arpl
sbb
push
lahf
push
inc
daa
and
pop
push
sub
mov
(bad)
dec
daa
call
fnstenv
or
xchg
add
jge
cmp
cmp
fcmovnbe
loope
lods
int3
inc
cmp
inc
fcom
push
push
pop
mov
fiadd
(bad)
mov
cmp
clc
shl
inc
sub
sub
or
jo
gs
sbb
loope
jno
(bad)
pusha
movs
add
push
add
xor
adc
and
nop
mov
rcl
stos
push
jb
push
iret
retf
(bad)
loop
add
cmps
xor
jecxz
add
ins
imul
inc
fadd
mov
add
cmp
test
loopne
and
xchg
pushf
clc
xchg
or
add
pushf
fcomp
frstor
cld
xchg
clc
das
pushf
and
mov
xrelease
jb
sbb
add
pop
es
pop
xor
les
ins
jns
inc
mov
cs
push
aam
pushf
adc
loop
cmp
push
adc
fbstp
sbb
xchg
popf
xor
loop
movs
push
dec
push
xchg
shl
inc
shr
hlt
dec
xor
push
(bad)
sar
cli
cmps
in
lea
adc
movs
addr16
xor
mov
xor
dec
push
(bad)
dec
loopne
ror
dec
out
retf
nop
sbb
shl
dec
cmp
aaa
icebp
or
enter
mov
cmp
inc
pop
or
ret
or
cmp
cmp
les
add
mov
clc
addr16
or
sub
or
push
push
mov
rcr
dec
(bad)
in
inc
mov
hlt
adc
mov
cmp
xchg
or
push
call
dec
add
jo
jge
mov
xor
lods
imul
dec
adc
and
adc
fstp
push
ins
or
inc
dec
shr
pop
sbb
pop
fldcw
inc
mov
sbb
pop
mov
idiv
ror
push
inc
into
arpl
dec
pop
cmps
push
call
stos
add
xor
dec
jl
dec
cmps
sbb
dec
dec
push
cmp
pop
lods
mov
aad
aam
mov
jb
add
dec
pop
mov
fs
or
push
push
push
retf
lods
dec
rcr
or
push
fmul
jecxz
cwde
adc
pop
fs
inc
leave
adc
xorps
js
dec
push
cmp
fwait
cmp
dec
cdq
aad
mov
movs
inc
adc
sub
lock
nop
xchg
cmp
add
sbb
mov
das
and
adc
addr16
aaa
loop
push
ja
aaa
xchg
adc
iret
out
jmp
mov
add
js
or
push
cmc
jne
ret
test
enter
aaa
nop
mov
add
jmp
xchg
into
rcr
cwde
sbb
loopne
movs
xchg
add
gs
icebp
ret
not
cmp
addr16
(bad)
aam
imul
out
mov
in
shr
pop
mov
mov
inc
cmc
rol
push
fstp
push
cs
aaa
cmp
pop
(bad)
shl
sahf
jo
add
outs
xchg
or
cmp
xor
fmul
sbb
inc
sbb
shr
and
mov
push
inc
jl
and
imul
jmp
shl
pop
jns
(bad)
ror
xchg
movs
jnp
dec
imul
scas
or
inc
inc
mov
push
sbb
sahf
fld
inc
inc
sbb
cmp
jp
push
pop
push
xchg
and
cmp
imul
dec
dec
add
js
inc
sub
jne
sub
pop
ins
add
popa
jge
je
jmp
cmp
mov
pop
cmp
fild
mov
or
mov
jge
xor
add
pushf
push
add
add
sbb
scas
mov
xor
enter
add
lods
jne
cs
test
arpl
mov
xchg
jp
outs
pop
cmp
sbb
mov
push
lahf
mov
pop
sbb
mov
cmp
fsubr
add
and
movs
jge
jo
addr16
(bad)
xor
xor
ss
and
dec
mov
loope
jmp
inc
and
dec
mov
xor
out
out
les
neg
call
dec
mov
or
and
and
daa
pop
cmp
fstp
pop
mov
aam
adc
push
inc
dec
mov
and
stos
retf
jmp
aaa
adc
ficomp
sbb
push
popa
outs
ja
nop
inc
or
out
fiadd
dec
cmp
std
cmp
adc
push
xchg
xchg
add
outs
test
lods
lea
in
xchg
pop
out
or
lods
pop
mov
pop
pushf
inc
xchg
fsub
pop
sbb
inc
add
call
sti
into
xchg
pop
ret
add
adc
adc
dec
ins
dec
jbe
pop
ret
add
aad
add
sbb
xor
or
ror
imul
aam
iret
push
nop
fdivr
pop
dec
(bad)
jae
call
inc
adc
daa
push
ds
loope
mov
xor
push
popa
mul
sbb
or
xor
jb
inc
pop
or
mov
cmp
jge
addr16
push
pop
fistp
inc
xor
push
push
mov
lock
and
jmp
mov
add
xchg
push
dec
dec
out
cmp
lods
cmp
mov
inc
ret
scas
outs
mov
pop
aad
xor
push
adc
push
xchg
sub
in
ins
out
test
lods
add
jecxz
scas
jmp
inc
stos
xchg
push
inc
mov
xchg
or
and
and
aas
push
cmc
push
push
push
(bad)
dec
int3
xchg
jne
jmp
bound
mov
(bad)
mov
subps
inc
fs
je
inc
repnz
bound
ficomp
in
fnsave
stc
sub
dec
call
xchg
loop
lock
xchg
sbb
mov
jl
(bad)
xchg
loope
call
adc
sub
sbb
fdiv
mov
or
cmp
inc
aaa
aam
lock
shl
daa
push
pusha
or
rcl
xor
retf
mov
rol
add
fadd
xor
add
dec
jb
add
mov
mov
shl
test
push
or
push
or
imul
sbb
lods
xor
mov
xchg
pop
or
(bad)
dec
adc
int
test
popa
jno
sbb
or
mov
pop
jmp
xor
sbb
out
test
xchg
and
pop
js
test
cmp
push
xchg
adc
mov
pop
test
xchg
xor
pop
sub
stos
lds
adc
or
ret
popa
pop
mov
mov
dec
sbb
dec
inc
retf
bound
popf
mov
and
adc
inc
dec
dec
cmp
nop
fsub
in
adc
(bad)
adc
lar
mov
and
add
push
add
cmp
xor
xchg
(bad)
dec
iret
add
adc
das
add
or
dec
mov
jecxz
hlt
rol
cdq
shl
popf
and
jge
sar
mov
pop
sti
jo
sbb
fsubr
adc
or
arpl
dec
ror
cs
cmps
pop
pop
push
mov
cmp
cwde
push
aam
shl
xor
jno
retf
xchg
icebp
aad
or
movs
loope
shl
cwde
fild
jecxz
fst
or
sti
inc
shr
lods
in
add
dec
mov
mov
out
jo
mov
mov
mov
call
xchg
frstor
rcl
push
lods
aam
add
(bad)
jl
mov
jbe
xchg
icebp
inc
dec
cmc
push
retf
or
sub
mov
mov
and
hlt
jp
xor
mov
sar
call
jne
or
(bad)
shl
rdmsr
sbb
(bad)
mov
call
ret
add
or
ficom
into
les
inc
mov
or
pop
loope
cmps
cmp
cwde
xor
xchg
xchg
and
or
xchg
and
pushf
adc
call
pop
push
mov
retf
xchg
cs
je
ins
pusha
movs
int3
cmp
pop
jno
xor
in
or
retf
jecxz
inc
dec
mov
pop
push
js
adc
push
add
jae
aam
mov
xor
rol
push
dec
lods
(bad)
sbb
pop
inc
and
sbb
xlat
jmp
push
or
xchg
or
shr
imul
xor
mov
leave
sbb
popf
xor
ja
pop
les
int
xchg
pop
adc
daa
shr
(bad)
and
lods
inc
stos
inc
sub
ficom
pop
adc
pop
or
das
int3
dec
jmp
in
inc
test
push
ret
ds
add
pop
dec
xor
rol
push
xor
popf
clc
sub
push
push
inc
push
dec
dec
popf
repnz
mov
stc
dec
in
rol
mov
mov
leave
jnp
loope
mov
repnz
push
pop
sub
jo
push
inc
mov
loopne
sbb
and
dec
ror
adc
jno
or
cwde
je
xor
retf
outs
or
xor
arpl
jl
or
icebp
popa
mov
(bad)
loop
add
loopne
xchg
es
or
sti
icebp
dec
js
add
dec
push
add
in
aad
or
dec
sbb
mov
xor
mov
sub
fwait
sar
sbb
mov
push
adc
imul
xchg
gs
(bad)
pop
jb
cmp
loopne
ja
call
call
dec
xor
ror
mov
mov
sub
sub
pop
mov
adc
mov
in
push
push
and
imul
punpcklbw
lock
enter
inc
mov
adc
or
add
shl
cmps
sub
and
jmp
cmps
mov
push
cmp
pusha
popf
daa
data16
mov
add
loopne
test
push
or
xchg
xchg
lds
push
(bad)
cmp
and
pop
xor
xor
inc
leave
and
push
sbb
inc
or
mov
ret
push
mov
pop
dec
mov
aad
xor
ds
movs
sub
mov
xor
js
add
aas
pushf
pusha
and
popf
pop
cmps
in
sub
mov
or
or
xchg
jp
adc
retf
fild
mov
or
cmc
push
ins
ror
cli
xchg
add
add
(bad)
mov
push
pop
xchg
cmp
sub
jae
cmps
das
loopne
test
xchg
jno
cdq
inc
(bad)
shr
fwait
out
call
xchg
mov
cmp
sar
cmp
and
mov
inc
mov
push
cmp
jns
cmp
adc
mov
retf
jmp
add
and
mov
popa
add
gs
loopne
add
inc
jns
sub
loop
jmp
(bad)
in
mov
rol
xor
es
xor
mov
adc
xor
mov
xor
push
add
call
ror
push
ja
cmps
pusha
loope
jns
xchg
sub
cmp
ja
and
repnz
sub
repnz
clc
mov
dec
lds
mov
jecxz
sub
push
pusha
out
pusha
in
fld
test
pop
in
sbb
cmc
cmovae
shl
leave
arpl
mov
loopne
mov
dec
sbb
xchg
in
lock
push
inc
adc
add
test
xchg
out
adc
jo
jp
inc
or
(bad)
jb
inc
sbb
jbe
retf
push
stc
mov
mov
popf
cmp
or
pusha
add
mov
popa
inc
jns
fstp
jo
sub
dec
pop
retf
in
xor
lods
sub
xor
push
sbb
fwait
nop
(bad)
test
js
sub
js
xchg
scas
jne
das
enter
mov
add
lods
cs
cmp
retf
sbb
je
jae
xor
popa
sub
arpl
lea
icebp
sbb
inc
fs
and
cmp
xchg
cmp
pop
xchg
aas
or
push
cmp
sub
add
inc
sbb
fsub
test
icebp
loope
xchg
fisttp
xchg
call
jecxz
ror
sbb
lods
and
or
test
or
mov
and
sti
or
or
add
pop
fldenv
mov
aaa
in
cmp
mov
cmp
cmps
sbb
retf
or
imul
xor
xor
mov
adc
sbb
test
jp
jb
ja
or
movs
mov
retf
ror
js
ja
cmp
or
ret
push
rcl
jp
inc
pop
cdq
jp
sbb
in
mov
mov
loop
movs
mov
out
scas
mov
(bad)
loopne
ins
mov
ins
sbb
shl
les
sbb
(bad)
cld
sbb
movs
add
xchg
jb
out
push
pop
pop
pop
in
add
push
pusha
fild
push
rep
push
mov
ret
aad
sbb
jp
xchg
ror
mov
mov
(bad)
jl
mov
push
mov
sub
add
pop
sub
jae
sbb
jl
mov
outs
pop
lock
or
mov
int3
jecxz
adc
sti
call
inc
or
loopne
fdivr
xchg
rcr
adc
lahf
mov
xchg
ins
mov
adc
push
sbb
xchg
dec
mov
outs
addr16
xor
pop
ss
shr
add
(bad)
sbb
xchg
pop
push
mov
stos
sub
aad
in
cwde
jae
adc
add
pop
mov
outs
add
in
push
jmp
(bad)
xchg
call
and
mov
dec
sub
int
jge
adc
add
cmp
loopne
pop
jge
push
rcl
pop
fistp
mov
sahf
add
inc
mov
inc
out
xchg
scas
not
loopne
sbb
dec
ror
adc
jno
adc
popf
arpl
mov
push
pop
lock
push
pop
pop
mov
add
ins
cmp
enter
mov
xchg
popa
pop
stc
sbb
mov
int
sbb
inc
pop
daa
mov
jno
mov
repnz
mov
xor
cld
inc
cmp
cmp
sbb
mov
add
xchg
jmpw
pop
mov
sahf
add
mov
jmp
in
loopne
and
lea
and
ret
adc
movs
loope
dec
aam
adc
sbb
and
(bad)
mov
in
jle
adc
cmp
into
arpl
outs
pop
pop
mul
sub
dec
aam
mov
inc
imul
jo
dec
movs
push
push
addr16
xchg
push
scas
cmp
(bad)
icebp
add
(bad)
adc
lock
or
fs
fistp
adc
mov
mov
aaa
pop
je
retf
retf
mov
fsubp
dec
push
xchg
retf
sub
mov
inc
scas
int3
xor
outs
and
pusha
movs
cmp
out
xor
mov
outs
outs
lock
ret
inc
jg
inc
test
ins
pop
sbb
pop
xchg
xchg
mov
es
cmc
push
into
xchg
in
data16
and
inc
lock
mov
push
neg
movs
mov
stos
mov
pop
jno
fsub
addr16
test
xor
mov
mov
or
imul
push
xor
mov
daa
or
fsubrp
aam
cmp
nop
iret
frstor
or
add
sub
push
mov
xor
rol
stos
pushf
bound
movs
mov
repnz
jp
call
movs
imul
inc
push
xor
cmp
sub
scas
cmp
(bad)
(bad)
mov
jb
xor
imul
sbb
mov
inc
out
leave
push
ret
outs
pop
mov
fadd
mov
pop
addr16
lods
cmp
(bad)
jmp
jle
out
(bad)
call
in
cmc
and
rcr
jmp
dec
mov
add
mov
push
loop
cld
sbb
int3
push
pop
jmp
mov
mov
mov
jl
pushf
jno
pop
test
jp
loope
sbb
rol
retf
push
cmps
mov
add
out
loop
movs
xor
fmul
shr
mov
add
inc
imul
mov
and
movs
xchg
test
cmp
stos
sub
jne
jp
inc
or
loope
mov
xchg
add
dec
inc
(bad)
shl
sub
cmp
add
aam
xchg
retf
sub
shr
inc
jmp
push
mov
and
cmp
and
xchg
xlat
fnstcw
jmp
cmps
sbb
pusha
test
retf
dec
mov
xchg
push
add
push
sub
(bad)
or
ror
mov
or
ret
push
rol
sub
xor
loop
sub
xlat
inc
sub
dec
push
out
mov
loopne
ret
pop
iret
ror
clc
clc
shl
aaa
push
inc
ret
push
push
stc
adc
mov
sbb
cmps
add
or
imul
xchg
jo
mov
clc
inc
loop
out
push
add
int3
mov
lea
xchg
lods
test
retf
ds
mov
xor
pop
cmp
adc
mov
mov
xor
iret
into
cmp
movs
mov
push
push
pop
and
sbb
into
sar
xchg
shl
cmps
pushf
fdivr
pop
popa
out
sahf
daa
stos
popa
(bad)
(bad)
xor
xor
ss
lahf
rcl
(bad)
sub
leave
cmp
mov
xchg
sub
(bad)
pop
test
retf
fs
dec
inc
lds
nop
adc
ret
fisub
pusha
xor
call
sbb
xor
daa
xor
ret
add
or
out
sbb
add
cmp
repnz
sub
lock
inc
xchg
scas
pop
rcl
cmp
sbb
loopne
dec
out
xchg
add
add
sub
mov
rcl
pop
mov
jmp
cmp
add
ins
ret
ret
mov
cmc
push
mov
outs
sti
stos
inc
enter
arpl
cs
call
cld
pop
sub
dec
inc
pop
cld
outs
(bad)
mov
sub
and
mov
cmc
cmc
xchg
mov
or
inc
fist
or
(bad)
mov
popa
fwait
in
jecxz
rol
outs
push
and
(bad)
cmp
push
xchg
mov
mov
pop
sbb
mov
(bad)
out
push
jbe
popf
inc
pushf
loop
cmc
and
stos
outs
or
aam
sub
retf
test
inc
movs
pushfw
mov
rol
push
or
or
aam
sub
cmp
je
mov
je
jno
loope
and
js
rol
nop
inc
pop
jle
gs
loopne
push
mov
gs
add
jne
es
call
lahf
call
rcr
dec
out
sahf
retf
loopne
addr16
sbb
or
and
sub
cmps
repz
ins
or
jge
inc
jge
call
xchg
mov
xchg
cmp
lods
aad
or
pop
pushf
pop
jno
ror
inc
jmp
mov
jp
cmp
push
les
mov
call
iret
cwde
adc
fild
in
leave
adc
sub
adc
repnz
shl
hlt
(bad)
or
js
pop
cmp
sub
(bad)
fwait
clc
xchg
and
jmp
push
push
push
arpl
enter
xchg
sbb
rcl
or
test
mov
shl
mov
adc
mov
pop
shl
xor
ins
lods
ss
push
ror
or
es
dec
add
loope
sub
or
and
mov
xor
shl
and
or
xchg
jmp
xor
mov
push
or
push
xchg
xor
ja
lahf
cmp
cmp
lods
pop
adc
mov
int3
imul
push
mov
(bad)
ins
jecxz
cmp
pushf
pop
es
daa
je
ja
imul
rol
mov
hlt
pop
mov
push
push
xlat
sar
das
loop
mov
push
sahf
popf
sbb
inc
push
jg
jecxz
adc
fsub
out
push
pusha
bound
leave
cmp
inc
lods
sbb
cmps
shl
dec
mov
std
mov
leave
lock
dec
ret
in
pop
sbb
aaa
pusha
pusha
test
scas
pop
imul
pushf
xor
and
xor
jo
pop
(bad)
test
pop
mul
(bad)
xor
(bad)
stos
sub
add
mov
cmp
pop
gs
inc
shr
retf
xchg
les
or
ja
mov
push
les
pop
lock
xchg
shl
mov
loope
ficom
jns
add
cmp
jecxz
das
retf
push
out
inc
fld
and
adc
cmp
mov
cmp
repnz
out
sub
cmp
retf
sbb
adc
adc
or
in
loopne
adc
imul
pusha
sbb
gs
daa
jo
jmp
int3
or
mov
add
sub
push
in
mov
inc
rcr
xchg
(bad)
or
sbb
dec
jmp
sub
jmp
or
lea
and
mov
sbb
or
pop
push
dec
jns
fadd
sbb
add
mov
enter
ffree
jp
(bad)
outs
mov
loope
cmp
daa
cmp
sbb
ret
or
repnz
inc
and
scas
jno
dec
sbb
cmc
rcr
popa
retf
test
mov
cmp
loopne
xor
arpl
inc
cmp
int
mov
adc
add
mov
cs
lea
test
aam
or
out
imul
ror
call
(bad)
cmps
push
push
not
or
int3
dec
xor
jo
clc
dec
aad
or
and
in
popf
xor
adc
ficom
shr
or
iret
adc
or
add
daa
cmp
push
addr16
idiv
sahf
imul
movs
xchg
dec
cmp
ds
lods
cmc
cmp
(bad)
add
sbb
arpl
out
dec
imul
loopne
mov
ds
cmp
or
add
ss
mov
pop
lds
jo
cmc
popa
xchg
sbb
jp
lods
pushf
mov
in
adc
and
(bad)
adc
gs
cmp
fs
repnz
in
push
mov
mov
(bad)
ss
ret
inc
xchg
push
or
add
inc
pop
or
push
ja
rol
and
sar
mov
pushf
test
add
cmp
ss
cmovae
mov
adc
jecxz
sub
pop
loopne
mov
inc
cdq
shr
(bad)
xor
loope
into
xchg
mov
ror
cmps
inc
mov
imul
sub
lock
jo
fld
cmp
sbb
xor
ret
imul
xor
sub
imul
fidivr
xor
movs
stos
and
jo
loope
jbe
add
mov
pop
jnp
dec
pop
add
mov
scas
ret
sbb
cs
and
push
pop
mov
scas
in
sbb
arpl
movs
add
into
out
out
jno
(bad)
mov
xor
loop
imul
rcl
adc
xchg
mov
fwait
(bad)
in
cmp
mov
and
jo
jge
push
test
out
lock
lock
adc
jge
pusha
(bad)
fnstenv
and
mov
xchg
xchg
mov
imul
cmp
xchg
mov
mov
call
icebp
jb
xor
into
add
js
jmp
or
adc
xchg
js
ret
push
out
push
sub
cs
inc
sti
sahf
js
rcr
xchg
fs
js
push
and
and
sub
pop
inc
mov
pop
das
cmps
xchg
test
jmp
pop
in
or
setb
(bad)
and
imul
adc
mov
cmps
(bad)
cmp
mov
rol
neg
cmp
retf
mov
sahf
fdivr
arpl
adc
pop
sbb
jo
into
or
shl
mov
rcr
or
add
test
dec
ror
jmp
jo
add
cwde
rcr
pop
adc
dec
dec
iret
xchg
dec
push
inc
test
push
cmps
mov
fadd
push
xlat
rol
movs
movs
(bad)
jne
mov
sub
enter
outs
and
test
pop
jge
je
dec
mov
xor
fisubr
loopne
in
sub
clc
(bad)
nop
in
jne
retf
mov
inc
push
add
mov
dec
rol
movs
(bad)
js
cmps
call
pushf
and
adc
mov
pop
mov
icebp
dec
lods
pusha
or
(bad)
(bad)
mov
add
scas
push
inc
push
sahf
mov
adc
loopne
sbb
pop
pop
cmp
int3
inc
(bad)
call
bound
sbb
les
in
xchg
loope
inc
add
rcr
xchg
js
rcl
popf
(bad)
arpl
mov
jp
fldenv
iret
sbb
(bad)
ret
push
dec
jno
push
cmp
xor
and
mov
ret
rol
pop
repz
sbb
mov
stos
pusha
addr16
add
ret
leave
mov
rol
pop
stos
or
push
jo
cmp
mov
adc
ss
pop
cmp
ins
or
adc
enter
push
push
(bad)
aam
jo
retf
popf
xchg
push
and
shl
mov
fist
lds
push
loope
xchg
xor
and
nop
(bad)
cmp
test
inc
call
ins
fdiv
add
pusha
fld
scas
out
mov
pushf
out
push
mov
add
xor
leave
mov
cmp
loop
std
ret
jne
nop
adc
movs
in
imul
fiadd
inc
outs
mov
in
ins
enter
pop
test
out
adc
into
mov
xlat
les
mov
or
adc
pop
daa
pop
or
sbb
inc
pop
jmp
xor
dec
xor
cmps
jmp
les
sub
pop
rcl
xlat
push
xlat
jns
xor
mov
or
or
(bad)
dec
js
daa
lods
mov
pop
xor
lea
mov
sbb
pop
and
or
scas
sti
jnp
mov
pop
(bad)
loope
ret
fcomp
cmp
pushf
mov
mov
jmp
jns
xchg
pushf
sahf
sub
sbb
jo
cmp
rol
add
sbb
int
xchg
gs
cmp
mov
pop
inc
(bad)
icebp
sbb
aaa
mov
push
or
cmp
add
cdq
inc
or
xchg
mov
add
sbb
clc
ja
mov
inc
jg
icebp
mov
push
jge
jge
cmp
test
or
xchg
pop
mov
scas
mov
sub
push
into
rol
dec
retf
mov
mov
and
or
mov
mov
fistp
push
inc
and
cmp
mov
jp
in
repz
cmp
or
push
dec
dec
je
cdq
imul
and
in
aam
sub
or
sbb
popa
dec
rol
retf
push
in
js
mov
das
ret
lods
sub
into
sar
mov
adc
sbb
fwait
sbb
jp
fbstp
xor
and
adc
jl
les
rcr
rcl
xchg
and
xor
sbb
iret
pushf
ret
loope
test
jb
ret
push
xchg
sbb
pop
sar
or
rcr
popa
aad
das
fcom
ja
(bad)
xor
dec
ja
or
mov
loop
je
in
sub
inc
inc
pop
daa
pop
rol
popa
sub
jb
sub
loopne
(bad)
shl
xchg
data16
or
sbb
xchg
jnp
adc
mov
sub
xor
cmp
mov
ja
mov
pop
test
ret
dec
cmp
dec
push
loopne
cmp
cmp
inc
fild
outs
push
push
cmp
call
xor
push
and
imul
rcl
inc
mov
in
movs
sbb
push
sbb
and
cmc
sbb
sub
stos
(bad)
in
push
rol
shl
imul
sub
mov
add
mov
mov
mov
push
xchg
sub
push
mov
add
sub
call
lds
ror
ins
xlat
xlat
into
add
and
and
or
ret
sbb
pop
pop
xchg
pop
shr
and
retf
and
les
xchg
lds
ins
ror
xchg
xchg
or
je
pusha
mov
ins
div
leave
pop
jb
lods
mov
enter
popa
dec
into
ret
test
ret
jns
xchg
ja
cmp
les
pop
xchg
jo
mov
and
cmp
in
mov
ss
push
jns
xchg
cmp
xor
mov
sbb
dec
inc
mov
sub
or
mov
add
cmp
fwait
or
cmovo
movs
pop
inc
push
ror
xor
sbb
add
jge
jecxz
pushf
add
lds
sub
test
mov
xchg
jmp
mov
adc
add
xor
cmp
out
fsubr
fstp
sahf
pop
mov
sub
loopne
xchg
adc
mov
(bad)
sbb
mov
dec
jnp
push
pop
adc
fs
add
mul
sub
lods
jo
ror
out
push
sub
push
stos
lds
jle
push
loope
sbb
adc
adc
cmovnp
fscale
mov
cmps
pusha
fbstp
fs
inc
cmps
call
(bad)
in
lock
inc
pop
jl
cpuid
sbb
out
cmp
cmp
xor
je
mov
(bad)
pop
xor
and
movs
mov
jo
or
lods
in
push
loope
add
out
hlt
add
enter
popa
jmp
imul
imul
in
loopne
adc
xchg
fs
pop
adc
pop
lods
jne
xchg
adc
add
sub
cmp
rol
pop
ret
xor
add
pop
sbb
mov
mov
(bad)
add
sub
sar
fcom
pop
ja
enter
xor
pop
je
loopne
cmp
rcr
push
inc
sbb
out
dec
sub
sbb
dec
add
shl
jbe
aam
ror
ret
mov
lock
ja
xor
ins
cmc
rol
(bad)
nop
test
(bad)
push
mov
lds
out
imul
cmp
cdq
add
mov
fstp
dec
popf
jno
inc
inc
pop
dec
pop
mov
lods
(bad)
sbb
mov
ins
ja
bound
in
pop
retf
add
outs
fistp
mov
enter
in
fs
ret
or
mov
stos
mov
retf
or
hlt
pusha
pop
inc
pop
aaa
mov
xchg
mov
daa
cmp
into
rcr
or
adc
cmps
out
retf
(bad)
js
stos
xor
xor
jno
xor
ss
cmp
loopne
cmp
test
popf
pop
scas
out
test
jnp
or
into
loope
dec
cmp
xor
outs
fnstenv
jmp
imul
lock
push
xor
xchg
ret
mov
leave
adc
add
inc
enter
jl
(bad)
int3
xlat
xor
shl
sbb
cmps
add
ja
ror
or
jl
xchg
add
sbb
mov
bound
and
xor
out
call
sar
push
dec
adc
test
inc
scas
hlt
sub
lods
xlat
ret
imul
lahf
ror
mov
(bad)
lods
mov
test
xchg
ds
add
xor
add
ret
lea
jne
imul
gs
sbb
cmps
jb
push
cmp
fwait
xor
rcl
lock
sub
jp
in
inc
jo
sub
outs
jo
xchg
rcr
in
shl
nop
jb
mov
lock
rol
mov
add
shl
loope
inc
in
lahf
add
push
ss
cmp
mov
inc
(bad)
js
push
xor
repz
sbb
(bad)
in
xor
xor
cmp
daa
arpl
cmp
mov
in
sub
retf
mov
mov
mov
push
push
mov
inc
push
mov
sbb
inc
cdq
sub
pushf
jmp
cmp
inc
shr
mov
lahf
add
push
into
and
popf
ins
fcom
shl
inc
mov
cwde
in
rcr
popf
test
shl
fdiv
popf
sbb
shl
cmps
inc
mov
lea
loopne
push
push
mov
mov
ret
jo
fmul
fmulp
shr
movs
outs
popa
dec
mov
cmps
out
in
out
inc
cmp
loope
mov
fstp
add
jo
add
pop
jp
mov
mov
xchg
imul
aam
dec
add
push
dec
cwde
daa
sbb
add
xor
adc
push
mov
xor
jb
sbb
push
jno
dec
dec
and
dec
push
daa
jnp
jge
mov
jmp
rcr
jecxz
push
mov
test
cmp
pop
sbb
jmp
mov
das
inc
mov
xor
mov
or
push
pop
popf
pop
(bad)
mov
sub
adc
pop
sub
and
jbe
stos
les
shr
test
inc
jecxz
xchg
sub
loopne
xor
retf
retf
sti
adc
das
scas
test
and
xchg
sbb
jb
nop
ret
jmp
and
into
add
lods
(bad)
call
lods
jo
gs
inc
retf
loopne
push
inc
js
cmp
or
xchg
and
daa
push
ja
inc
adc
fs
xor
xor
mov
add
adc
and
sub
daa
pop
push
(bad)
ror
movs
push
dec
sahf
inc
ret
add
push
sub
pop
clc
addr16
loop
sbb
mov
inc
ror
loop
mov
in
std
scas
pop
movs
in
idiv
test
add
pop
or
sbb
push
xchg
cmp
div
inc
stos
pop
ret
outs
mov
sub
inc
push
fidivr
(bad)
cmp
jno
loope
adc
xchg
and
addr16
add
call
dec
aaa
es
and
aaa
into
jecxz
daa
push
mov
mov
(bad)
adc
(bad)
xor
inc
(bad)
xchg
xchg
ins
and
cmps
dec
dec
cmp
cmp
arpl
cli
stc
adc
lock
pop
dec
xlat
inc
clc
xchg
xbegin
test
or
or
add
rcl
retf
(bad)
sub
(bad)
push
out
retf
aad
dec
rcr
xor
ins
popa
pop
lea
jecxz
jno
inc
mov
(bad)
mov
and
rcl
and
jb
adc
(bad)
fsub
add
lods
dec
add
sbb
retf
and
jns
add
sub
adc
sti
(bad)
or
(bad)
ds
pop
pop
enter
xor
adc
loop
mul
cmps
push
seto
or
loope
add
pusha
lea
sbb
fwait
jo
mov
push
adc
ins
xor
cs
aaa
fldenv
fst
rcr
in
jne
push
adc
push
pusha
shl
loop
inc
imul
aaa
pusha
mov
sub
mul
xchg
push
jo
sbb
fwait
ret
add
scas
mov
jp
mov
js
fsub
adc
pop
pop
pop
lock
lods
pop
jecxz
cmp
es
push
adc
push
aas
jae
dec
add
ja
ds
push
fcom
ffree
dec
mov
rcl
jne
pop
pop
adc
ja
and
data16
(bad)
sub
pop
sbb
into
mov
shl
pop
xchg
push
mov
jno
mov
xlat
mov
movs
aaa
cmp
or
xlat
loopne
sub
in
sub
ret
xor
jmp
(bad)
retf
lods
jne
into
out
mov
scas
fwait
cmp
das
(bad)
ror
cli
pop
xchg
dec
jae
call
and
outs
add
in
mov
bound
xor
or
enter
adc
xchg
cmp
pop
add
inc
xor
push
out
imul
aaa
jne
adc
call
and
cmp
js
fcom
imul
daa
sub
jnp
jo
cmp
cdq
push
fwait
lock
mov
and
cmp
xchg
push
cmp
inc
sbb
retf
rol
push
stos
sar
nop
jno
pop
push
push
inc
xchg
enter
jno
cdq
sbb
and
loope
dec
pop
jge
adc
(bad)
fcomp
sti
ja
add
popf
data16
sbb
mov
cmp
dec
xchg
sbb
or
pinsrw
shr
je
sub
mov
scas
inc
push
sbb
add
or
test
pop
jecxz
(bad)
(bad)
(bad)
aam
and
jp
ror
(bad)
loope
mov
imul
in
push
(bad)
ret
pop
push
mov
retf
pop
in
and
and
push
push
and
(bad)
call
cli
mov
sar
pop
call
ficomp
mov
nop
push
ja
into
mov
mov
fsub
mov
stos
sbb
fcom
icebp
mov
lods
test
test
mov
adc
push
cmp
push
xchg
push
outs
cmp
cmps
xchg
je
sbb
mov
ror
imul
outs
call
pushf
mov
mov
adc
mov
test
into
or
push
sar
or
sub
popf
ret
lods
fs
mov
inc
pop
shl
pop
in
lock
jmp
dec
(bad)
mov
je
push
push
inc
aaa
add
add
or
ins
jecxz
cmp
movs
add
movs
(bad)
into
jp
pop
aaa
enter
and
fdiv
daa
or
xchg
(bad)
call
lods
mov
leave
js
xlat
push
xor
(bad)
loope
(bad)
adc
push
sub
sbb
iret
push
pop
jns
inc
or
sbb
adc
dec
xchg
(bad)
mov
xchg
mov
sbb
test
push
ss
sbb
rcr
lahf
addr16
mov
(bad)
pop
gs
call
jo
pop
ins
ss
mov
add
xchg
push
or
cmp
loop
fld
mov
add
mov
pushf
dec
lahf
cmp
adc
cmc
cmps
(bad)
and
fdiv
push
cmp
mov
addr16
lods
fst
int
adc
push
cmp
xor
pusha
lods
add
and
xchg
call
add
sub
cmp
xor
mov
sub
sub
jns
mov
arpl
sar
rol
cmp
jmp
add
movs
loopne
sbb
fwait
nop
fld
scas
sbb
bound
xchg
inc
mov
inc
addr16
cmps
or
or
adc
inc
push
or
jns
mov
xchg
mov
lods
pushf
mov
in
pop
mov
or
mov
dec
fst
add
fiadd
push
sar
sub
mov
dec
daa
loop
addr16
ret
loopne
sub
or
sahf
xchg
push
dec
sbb
outs
and
call
xor
pop
push
mov
xchg
xchg
xor
mov
mov
mov
cmp
pop
jecxz
shr
sbb
dec
mov
cmp
and
sub
cwde
add
sbb
push
dec
loopne
test
pushf
mov
popf
adc
mov
jae
cmps
popa
sbb
or
mov
and
mov
dec
stos
test
nop
mov
or
sahf
pop
jno
aaa
sbb
mov
cmp
adc
push
je
sbb
arpl
mov
sbb
dec
aaa
xchg
popf
push
xor
push
ins
and
cmp
xchg
outs
cli
cli
in
mov
cmpxchg
in
xchg
or
sbb
fisubr
call
add
pop
xor
jo
adc
daa
dec
div
test
std
adc
out
leave
lock
push
ss
movs
sbb
into
cmp
cmp
push
pop
jo
inc
movs
mov
cmp
psraw
mov
jp
or
or
shr
push
sahf
mov
sub
imul
add
clc
adc
xchg
adc
jle
xchg
lahf
cmp
scas
inc
cmps
push
jg
lods
popa
sub
push
in
sub
movs
pop
fsubr
mov
rcl
inc
xor
mov
and
mov
or
jne
call
jmp
cmp
sbb
stos
ret
test
push
sub
or
stc
(bad)
xchg
sbb
xor
fidiv
ins
cmp
scas
ret
push
mov
jno
inc
cmp
test
pop
loopne
aam
sbb
push
sbb
add
ins
and
or
push
lahf
aam
sbb
lods
pop
or
popf
inc
dec
add
mov
or
jl
hlt
xchg
lods
cmc
inc
and
ror
mov
push
pushf
sub
retf
cmps
and
mov
nop
jmp
cdq
sbb
sub
pop
and
enter
sbb
bound
pop
jp
sar
cmp
mov
leave
std
cmp
jmp
cmp
mov
and
in
xchg
mov
mov
inc
sbb
sahf
and
stos
jae
xchg
add
sbb
outs
mov
lea
das
dec
and
mov
mov
ins
xchg
jmp
lock
movs
clc
push
sahf
test
lock
mov
dec
mov
xchg
and
pop
mov
sbb
fsubr
repz
cmp
mov
adc
scas
sbb
dec
cmc
js
dec
push
rol
test
sbb
push
test
adc
cwde
js
lock
jmp
enter
mov
pop
popf
mov
or
adc
test
jno
xchg
jnp
imul
xchg
inc
pop
xor
xor
nop
mov
push
xchg
mov
push
lea
fld
cwde
mov
add
inc
and
lea
sbb
popf
jo
push
xor
lock
add
pop
movs
push
outs
cmp
adc
in
xchg
add
sbb
int3
call
icebp
xchg
in
mov
cmp
pop
xor
adc
sbb
push
push
jnp
adc
cli
xchg
cmp
cmp
test
cdq
sub
loopne
mov
gs
or
addr16
sbb
jmp
push
xor
ja
pusha
add
popf
push
inc
sbb
std
dec
(bad)
lock
sbb
mov
pop
shr
out
in
ret
mov
je
jb
cmp
in
(bad)
retf
call
bound
jne
pusha
fdivr
pop
adc
jno
(bad)
lock
ss
cmps
or
dec
test
loopne
lahf
xchg
jno
pop
or
add
outs
push
mov
dec
add
shl
popa
mov
pop
sub
push
mov
cmps
mov
clc
in
xor
sbb
add
push
add
lods
push
sub
fs
sar
dec
add
inc
add
xchg
sbb
cmp
shl
je
push
das
jmp
mov
lods
repz
mov
loope
out
cmp
scas
xlat
sub
mov
call
inc
outs
add
loopne
xchg
les
xor
mov
loopne
jmp
xchg
add
mov
xchg
mov
mov
inc
pop
sub
popf
gs
sbb
add
(bad)
loop
push
dec
test
xchg
sbb
xchg
dec
leave
sub
dec
xchg
adc
push
sub
xchg
jne
xor
dec
mov
sub
pop
sahf
or
adc
sub
rol
dec
mov
cmp
push
shl
xor
adc
imul
inc
arpl
jnp
xor
or
call
fld
mov
pop
add
adc
inc
call
ficomp
(bad)
dec
(bad)
inc
xchg
pop
imul
adc
cmp
mov
pop
repz
jno
push
mov
sbb
or
cdq
mov
cmp
fsub
push
push
arpl
inc
add
adc
stos
or
lock
ja
xor
es
xchg
sub
cdq
pusha
or
and
fs
mov
and
push
inc
movaps
push
sub
mov
fs
dec
sub
loopne
loop
leave
scas
jecxz
in
jle
movs
sub
cmp
test
jecxz
cmp
push
xor
mov
test
gs
pop
push
sbb
loopne
xchg
inc
push
add
and
sbb
or
cmp
leave
xchg
ins
jmp
(bad)
loop
jle
lods
xor
fnsave
mov
add
repz
sbb
or
jecxz
aam
cmp
cmp
nop
rcl
add
rcr
call
rcr
xchg
mov
xchg
cmp
lds
pop
dec
ret
jo
xchg
fs
sbb
cwde
and
imul
jb
add
xchg
mov
lods
and
movs
adc
or
push
pop
outs
cwde
(bad)
sbb
popa
(bad)
rcl
adc
push
stos
and
sub
push
push
into
sbb
and
dec
dec
inc
sbb
(bad)
jmp
pop
les
icebp
jo
sub
cmp
push
sbb
jno
inc
sub
sub
addr16
cmc
outs
js
enter
js
mov
inc
xchg
out
outs
inc
lahf
and
mov
pop
adc
mov
jno
inc
adc
cmps
jo
dec
ret
je
ret
or
cmps
pop
sbb
cwde
pop
iret
and
dec
or
ds
mov
test
repnz
icebp
bound
scas
push
adc
mov
or
(bad)
aas
pop
adc
or
shr
add
sub
pop
cmp
jl
add
pop
or
lods
mov
and
lea
adc
adc
fst
pop
push
shl
pop
das
adc
ins
iret
push
cmp
retf
or
add
mov
repnz
rol
jns
add
ins
imul
pop
cmp
push
xchg
subps
scas
jle
fst
adc
add
rol
sar
jecxz
ret
adc
ins
pop
or
dec
push
jl
jmp
adc
xchg
cmc
repnz
retf
add
retf
mov
data16
(bad)
pop
jno
pop
addr16
jbe
sbb
popf
mov
cmp
test
ss
test
shr
dec
push
stos
adc
jno
inc
mov
icebp
inc
lea
mov
jo
jo
pop
mov
test
fwait
mov
cwde
call
xor
or
xlat
inc
jns
cmps
sub
shr
dec
xchg
pop
jmp
or
outs
sbb
add
arpl
cmc
jno
scas
not
ss
dec
or
inc
sahf
ja
adc
cmp
(bad)
and
mov
add
mov
xor
sbb
sub
push
mov
rol
inc
sbb
pop
push
cmp
pop
pcmpgtd
or
(bad)
fcomp
fdiv
pop
xchg
inc
cmp
pop
enter
mov
pop
pusha
lock
mov
adc
xchg
sbb
and
std
div
push
lock
and
loop
xlat
sbb
call
por
cmp
add
inc
test
or
dec
(bad)
cmc
nop
mov
or
pop
fstp
dec
xor
xor
fst
pop
hlt
add
jne
jo
and
mov
adc
xor
es
cmps
sbb
cwde
and
push
popf
mov
add
mov
and
mov
movs
xchg
mov
inc
or
lds
daa
and
ret
rcr
jl
adc
push
rcl
cmp
dec
mov
imul
test
mov
sti
je
jns
add
adc
mov
lods
fistp
test
pusha
lods
sbb
cs
dec
xchg
ins
or
les
in
inc
inc
mov
retf
dec
stos
pop
ret
sub
add
mov
sbb
mov
mov
or
mov
cmp
push
push
ja
inc
cmp
inc
push
inc
inc
retf
in
(bad)
jmp
jb
add
add
sbb
test
and
fimul
or
fcomp
add
cdq
rol
mov
fwait
add
sbb
ret
jg
popa
pushf
mov
cs
adc
mov
sbb
ret
mov
or
add
add
sub
sbb
push
and
shr
push
rol
jnp
and
mov
int3
enter
pop
xchg
sbb
out
(bad)
into
fcom
fidiv
outs
in
and
inc
sbb
mov
rcl
and
or
cmp
sub
xor
xchg
jmp
or
rol
loop
ret
pop
loope
xchg
adc
pop
or
inc
jmp
mov
xchg
cmp
int3
jno
arpl
mov
sbb
inc
ja
xor
fs
mov
cdq
mov
test
cmp
xor
add
dec
sbb
std
daa
add
cmp
jo
loopne
repnz
pop
push
fadd
shl
cmp
xor
call
pop
daa
div
gs
cmps
and
mov
mov
add
push
xor
jl
lock
int
cmovp
and
popf
ret
bound
sbb
inc
aam
daa
sub
xchg
cmp
inc
sub
(bad)
je
dec
ss
push
ja
jmp
mov
mov
sub
push
outs
pop
jecxz
jno
push
pop
data16
ret
mov
xchg
into
sbb
cmps
push
sbb
jmp
das
mov
paddsb
data16
sahf
jp
pop
dec
std
loope
mov
and
xlat
xchg
push
pop
xorps
and
xchg
cwde
sbb
add
or
inc
dec
retf
js
and
jae
push
out
jns
mov
xrelease
cmp
js
ret
or
push
call
pop
mov
and
call
(bad)
enter
adc
xchg
pushf
cmps
outs
pop
xor
daa
jecxz
and
add
dec
xchg
dec
repz
mov
pusha
pop
dec
cmp
enter
pop
inc
das
jmp
pop
add
or
xor
out
mov
int
push
push
fsubr
fcom
xchg
push
ds
movs
or
or
add
push
nop
inc
add
xchg
in
mov
popa
cmp
ret
hlt
cmp
adc
fs
fnstcw
pavgw
and
sub
xchg
(bad)
cmp
push
sub
rcl
add
jo
dec
enter
dec
ror
bound
jp
add
ret
or
popa
jo
cmp
mov
es
add
cmp
loopne
addr16
inc
adc
add
fsub
mov
(bad)
push
cdq
xchg
je
loope
popf
loopne
pop
xor
xchg
mov
imul
das
sahf
pop
cmp
dec
retf
dec
aaa
adc
sbb
dec
jbe
(bad)
mov
pusha
pusha
je
cdq
mov
xor
loopne
jae
aaa
inc
or
cmp
mov
aaa
xor
sbb
gs
jle
push
into
cmp
ins
jecxz
ja
(bad)
inc
push
repz
scas
mov
mov
push
adc
sub
call
pop
iret
add
fcom
mov
ror
sahf
cmp
cmp
loopne
daa
mov
seto
mov
aaa
outs
pop
ja
dec
cwde
mov
das
fld
pushf
sbb
mov
xor
sub
sub
pop
sbb
movs
xchg
fwait
mov
es
lods
mov
icebp
jp
sahf
fldenv
xchg
xchg
mov
repz
add
hlt
(bad)
in
(bad)
data16
ret
push
inc
lds
das
adc
jo
dec
lea
fidiv
xor
ror
cmp
xchg
sbb
dec
int3
push
xchg
xchg
js
adc
sbb
or
popa
ret
mov
inc
popf
xchg
int
popa
rol
xor
mov
(bad)
mov
sub
xchg
les
mov
(bad)
into
retf
mov
push
push
jp
inc
cmp
push
ds
cmps
or
inc
and
or
cwde
mov
add
pop
jge
shl
adc
sub
jmp
fist
ret
or
push
cmp
pop
add
pop
adc
sbb
int
and
and
retf
xchg
jle
retf
daa
dec
or
sbb
adc
xor
(bad)
jge
aaa
push
rcl
das
sbb
or
scas
xor
(bad)
mov
inc
pop
mov
cmp
mov
dec
dec
add
sub
jp
jno
enter
retf
adc
xor
outs
sub
popa
dec
push
push
xchg
mov
cdq
xchg
adc
and
ss
retf
out
out
pop
push
(bad)
push
dec
add
push
dec
add
add
mov
les
enter
pusha
sbb
adc
push
sbb
and
add
pop
aam
add
push
add
rol
jg
(bad)
es
push
mov
test
test
or
mov
push
pushf
jp
mov
adc
lds
mov
push
(bad)
pushf
iret
sahf
cmp
sub
inc
pushf
mov
pop
jmp
and
adc
call
xchg
cdq
cmp
sbb
push
push
je
mov
pop
mov
adc
xchg
xchg
test
ret
ss
and
(bad)
xchg
movs
iret
or
and
push
call
ror
push
pop
imul
mov
mov
lods
jae
jp
pop
push
fucomip
xor
sahf
mov
call
fimul
xchg
mov
add
cwde
js
mov
xor
and
add
jnp
and
dec
mov
cmc
jecxz
aam
jo
xchg
xor
mov
shr
inc
shr
gs
cbw
inc
ss
jb
movs
retf
or
shl
movs
arpl
xchg
test
or
xor
xchg
je
cmp
out
stc
arpl
mov
or
xchg
xor
xlat
xchg
int3
cmp
xor
cmc
and
in
fstp
dec
push
mov
ins
pop
add
rcl
nop
(bad)
outs
and
stos
test
xchg
sbb
and
call
jbe
mov
ins
or
mov
mov
and
addr16
xchg
gs
jp
jns
jb
xor
add
std
inc
mov
inc
dec
fdivr
pusha
ffree
lds
mov
sbb
fistp
call
pop
inc
pusha
aad
sbb
adc
mov
pop
add
adc
push
xchg
ret
mov
rcl
pop
xchg
stc
ss
xor
mov
pop
xchg
inc
push
cmps
call
adc
loopne
jmp
jbe
dec
jmp
daa
add
mov
cmp
movs
push
add
sbb
iret
and
and
add
ins
shr
jmp
push
pop
into
inc
cmps
sbb
inc
(bad)
ret
mov
sbb
dec
push
lea
loopne
ret
mov
test
dec
fst
jno
movs
jle
enter
das
pop
pop
mov
cmp
aaa
lods
mov
push
popa
pop
xchg
inc
xchg
cmp
cmpps
sbb
jne
xchg
mov
lahf
and
sbb
cmp
stos
dec
push
dec
and
idiv
push
fmul
inc
mov
add
fist
hlt
sbb
mov
sub
and
add
mov
and
lea
jnp
loope
sbb
nop
pop
pop
int
loope
pop
rcl
jmp
mov
mov
jne
enter
les
or
jne
das
js
mov
cmp
lods
inc
(bad)
adc
dec
div
daa
(bad)
fidiv
mov
ja
inc
jo
movs
fcomp
adc
pop
imul
les
into
out
cmp
stc
dec
adc
scas
sar
add
in
push
mov
add
sub
inc
dec
add
das
out
ins
lock
inc
dec
out
mov
mov
adc
push
cmp
cli
call
sbb
gs
push
ret
dec
mov
or
sub
loope
or
lea
adc
lahf
loopne
xchg
pop
and
in
in
sub
add
pop
loopne
ins
sbb
jp
xchg
in
popf
pushf
aaa
test
or
into
sbb
push
sub
(bad)
sbb
dec
stos
inc
fcom
js
scas
icebp
push
(bad)
mov
mov
stos
movs
fsub
jns
xor
sbb
pop
pop
mov
repnz
jb
mov
sub
xor
sbb
imul
rcr
hlt
cmp
sbb
repnz
push
ja
push
mov
add
mov
push
jno
xor
cmp
or
movs
sub
dec
xchg
test
mov
int
pusha
sub
push
push
push
push
xchg
ret
repz
imul
cmps
js
dec
dec
mov
sahf
mov
sub
in
dec
and
pop
inc
int3
xchg
sbb
scas
xlat
or
sbb
xchg
sub
or
mov
aam
sahf
add
jecxz
ror
xchg
adc
aad
sbb
or
inc
add
outs
daa
cs
jo
loop
ficomp
xchg
inc
pop
add
jo
cmp
push
xor
mov
or
and
push
daa
push
cmp
lds
and
movs
sub
call
movs
inc
daa
sbb
adc
test
fld
mov
lods
aam
push
fistp
sbb
mov
mov
add
xchg
pop
or
dec
sbb
popf
mov
add
and
ret
ds
ins
sub
cmp
loop
pop
or
jo
pop
sbb
xchg
dec
loopne
dec
lods
enter
add
push
xor
and
hlt
pop
jge
test
mov
(bad)
stos
add
mov
cld
xor
ret
shl
hlt
cmp
xor
mov
cmps
out
out
call
shr
icebp
out
push
(bad)
jb
les
test
xor
xor
mov
mov
out
add
cs
je
xchg
xchg
push
sahf
mov
shl
push
mov
loope
je
mov
enter
mov
jae
outs
dec
mov
out
jl
out
xor
adc
pop
add
sub
clc
cwde
repz
xor
test
push
push
mov
or
ret
sub
mov
jecxz
add
mov
je
pop
xchg
xchg
pop
cmp
xor
in
jbe
popf
cmc
xor
mov
mov
or
and
sti
mov
or
and
inc
outs
jg
cmc
(bad)
adc
cwde
pop
cdq
mov
cmp
jecxz
and
nop
push
ficom
(bad)
shr
ds
in
jns
dec
and
cdq
(bad)
sbb
cmp
mov
les
sbb
nop
into
sbb
icebp
test
xchg
jo
push
psubsw
push
cmps
mov
mov
imul
xor
mov
or
dec
or
cmps
gs
test
pusha
fcom
psrld
ror
cs
test
(bad)
cmp
outs
add
xchg
cmp
xchg
idiv
adc
inc
sub
retf
or
inc
(bad)
out
adc
dec
movs
push
pop
bsf
add
lock
xchg
adc
cmp
test
mov
or
add
and
in
cmp
add
cmp
mov
dec
pop
add
adc
or
add
movs
add
sub
jp
add
in
fbld
das
add
or
xchg
lods
inc
jmp
sbb
(bad)
sbb
add
sbb
ja
xchg
sub
pop
out
xchg
ror
imul
inc
lock
xchg
mov
adc
daa
cmp
dec
xor
jmp
repz
rol
pop
out
xchg
in
imul
fst
pushf
mov
mov
push
sub
add
xlat
ja
push
sub
push
dec
xchg
std
pushf
mov
popa
dec
popa
movs
mov
das
sbb
ret
rol
icebp
mov
cmp
pop
mov
loope
ret
in
mov
(bad)
sub
gs
mov
loope
push
aaa
ret
pop
aam
rcr
enter
mov
test
(bad)
add
xor
mov
xchg
int
fnstenv
jb
sbb
enter
or
clc
sbb
and
pushf
cmc
stos
pop
out
lock
pop
pop
rcl
add
mov
dec
cmp
fstp
loope
adc
popa
sbb
aam
pop
mov
mov
mov
call
push
adc
sbb
in
leave
int3
mov
js
je
stos
ret
push
xchg
push
mov
dec
shl
in
add
pop
shl
xor
pop
lods
aam
loopne
add
mov
shl
dec
jp
addr16
dec
lea
dec
pop
shl
and
sbb
pusha
pop
push
int3
push
xchg
inc
lods
idiv
lods
pop
jmp
pop
push
imul
cmp
mov
(bad)
mov
sbb
or
ja
bound
mov
mov
test
into
sti
inc
out
shl
pushf
jo
ins
push
mov
mov
adc
cwde
js
push
and
out
add
jo
fdivr
and
jne
test
pop
out
and
imul
cmp
fild
jne
call
push
fs
test
lea
cmp
cmp
or
jmp
loopne
sar
push
int3
rcl
pusha
sub
loope
js
mov
mov
cmp
loopne
adc
or
ret
jmp
rcl
retf
aam
jne
xor
sbb
lock
loope
leave
add
or
cmp
lods
call
test
adc
mov
ror
mov
icebp
sub
dec
mov
cmp
idiv
fmul
xchg
jg
cmps
icebp
sar
mov
push
pop
das
sbb
add
mov
arpl
lods
hlt
mov
sbb
jb
xlat
mov
ja
inc
sar
mov
movs
jne
cmc
sbb
shl
mov
std
add
or
loopne
push
mov
sbb
popa
pusha
dec
mov
xchg
jbe
mov
mov
jecxz
int3
daa
push
ror
fcom
dec
xchg
or
pop
add
jp
xor
dec
pop
jo
push
xchg
cmps
cli
pop
ret
fadd
add
pop
adc
push
fs
add
mov
mov
xchg
nop
and
popf
add
adc
cmp
jecxz
xor
mov
std
stos
add
jmp
and
adc
call
mov
and
mov
rcl
scas
gs
adc
out
sbb
add
ret
cli
sub
or
rcl
mov
ja
mov
inc
and
test
js
sub
mov
pop
sub
jl
push
mov
mov
mov
pushf
sub
dec
pop
pusha
adc
arpl
pop
dec
fsubr
loope
ja
jl
(bad)
sub
(bad)
ins
jge
das
sbb
adc
and
xlat
das
xor
and
loope
jns
dec
or
xor
pop
shl
cmc
pusha
xchg
push
js
pop
in
sbb
or
add
or
stos
mov
sahf
inc
sbb
addr16
jmp
(bad)
mov
lods
push
inc
js
fistp
add
stos
pop
dec
sbb
(bad)
cli
jmp
lods
mov
pop
adc
cwde
cmp
sbb
xchg
inc
sbb
adc
loopne
dec
cmp
loope
sub
movs
pop
int
push
pop
ja
scas
outs
mov
pop
dec
arpl
lock
pop
sbb
adc
xor
out
in
push
ror
push
fidiv
in
mov
lea
sbb
lahf
loopne
push
ins
iret
mov
cmp
sub
out
rol
shl
push
imul
add
sbb
(bad)
retf
lock
(bad)
sbb
xchg
sub
pushf
into
imul
pop
jb
stos
cmp
rcl
pop
je
add
mov
adc
pop
and
scas
aad
mul
inc
add
imul
or
ja
sub
lock
lods
rcr
icebp
add
(bad)
inc
push
push
ret
mov
jne
push
jo
or
and
shl
fadd
mov
outs
fstp
add
retf
sbb
shl
jo
shl
and
xchg
arpl
pop
mov
(bad)
test
jmp
retf
push
pop
push
(bad)
dec
cli
adc
push
icebp
(bad)
xchg
shl
test
mov
dec
jmp
nop
js
out
nop
ins
js
arpl
(bad)
int
mov
outs
pop
jecxz
pop
add
call
rcl
mov
ja
add
jl
inc
(bad)
jmp
retf
sbb
cmp
cmc
ret
push
call
cmp
add
sbb
fidivr
es
push
fs
sub
xor
pop
push
or
mov
addr16
out
test
xchg
dec
ja
pop
add
mov
xchg
add
and
inc
ret
cmp
scas
leave
test
popa
test
cli
sbb
(bad)
push
xchg
xlat
rcl
mov
stc
les
cmp
sub
jecxz
retf
rcr
dec
cmps
out
sbb
jne
pop
mov
test
add
test
mov
push
and
push
mov
in
mov
add
scas
cmps
and
push
retf
mov
or
out
add
xchg
out
cmc
fs
jns
nop
adc
xchg
xchg
pusha
lea
dec
mov
out
scas
iret
add
shl
movs
pop
sbb
cwde
pop
push
imul
gs
push
je
inc
adc
adc
mov
ret
and
xor
gs
xor
js
iret
mov
in
js
call
xlat
addr16
mov
add
add
int
sbb
repnz
inc
addr16
clc
cwde
mov
repz
or
add
jp
sub
push
add
xor
sub
add
xor
jecxz
ins
or
and
adc
and
lods
out
daa
xchg
push
pushf
dec
xor
xchg
cmp
or
movd
aam
fwait
loop
shl
lods
jno
xchg
sahf
jp
clc
inc
mov
nop
and
movs
addr16
push
daa
ins
stos
stos
xchg
sbb
mov
push
push
mov
jmp
sub
xor
pop
push
into
dec
add
jp
not
sub
sub
aas
mov
add
rcr
mov
cld
xor
and
jl
cmp
xchg
push
dec
arpl
fnstcw
cmp
jno
push
inc
xor
ins
jnp
shl
cs
ja
or
or
xchg
cld
xchg
ds
and
inc
loopne
pop
shl
call
mov
outs
ja
push
jp
mov
leave
jmp
mov
push
xor
shl
clc
not
(bad)
frstor
ficomp
inc
or
retf
imul
das
dec
cmps
in
(bad)
mov
or
or
sub
mov
add
mov
sbb
or
int3
ret
inc
inc
pusha
or
jl
mov
gs
test
jbe
xor
aaa
pop
or
aaa
and
ins
enter
je
adc
pop
xchg
das
cmp
and
test
push
xchg
sbb
xchg
dec
xor
cmps
les
inc
lods
xchg
xchg
js
leave
ret
fcomi
dec
mov
push
repnz
les
ret
outs
pushf
inc
add
or
or
mov
mov
sbb
leave
es
pop
inc
adc
aas
sti
sub
shl
fs
ss
aad
sub
cmp
mov
jne
mov
fs
sar
lock
jmp
inc
push
xchg
sub
add
xlat
das
ror
mov
jns
add
push
in
mov
or
fidivr
adc
imul
sbb
aam
xchg
mov
sub
sbb
pop
jmp
push
pop
cmp
xchg
pop
add
data16
xor
dec
inc
mov
das
pop
rcl
xor
in
push
mov
loop
sub
add
call
mov
or
adc
enter
or
inc
inc
ss
imul
rcl
mov
mov
xchg
xor
adc
rcl
mov
stc
retf
and
xchg
xchg
mov
inc
add
and
sub
xchg
mov
cmc
jne
sbb
add
rcl
ret
mov
test
add
xor
dec
int
mov
sub
or
js
xor
xchg
cmp
adc
mov
dec
xor
xchg
mov
pop
pop
or
stos
dec
xchg
ret
bound
out
add
push
lea
(bad)
add
jmp
loope
or
fcmovnbe
nop
(bad)
scas
adc
sar
aas
test
sub
rcl
xor
and
imul
xchg
xchg
xchg
adc
shl
iret
sbb
movs
cmp
retf
pop
rol
adc
xor
sbb
(bad)
cli
fcmovne
inc
mov
stc
cmp
and
nop
cmc
push
gs
inc
outs
adc
adc
js
ins
or
or
rol
(bad)
mov
xor
popf
add
lods
rcl
xchg
jge
(bad)
pop
in
sub
stc
add
sbb
mov
lods
mov
arpl
push
xor
sar
push
(bad)
fisubr
dec
(bad)
shr
adc
adc
shl
cmp
push
in
dec
rcr
inc
xchg
sub
mov
or
pusha
inc
mov
loope
cmp
pop
loop
lock
int
bound
xchg
rol
mov
xor
sub
push
lahf
mov
xor
mov
xor
adc
push
cli
rcr
and
ret
leave
ret
cmp
imul
add
mov
loope
cmp
popa
mov
and
push
push
nop
xchg
pop
das
jnp
cmp
repz
or
cmp
(bad)
adc
dec
or
mov
loope
mov
pop
add
loopne
mov
jno
and
sub
scas
mov
(bad)
(bad)
rcr
adc
inc
outs
fisttp
clc
repnz
imul
jge
xchg
(bad)
mov
push
(bad)
mov
adc
push
mov
icebp
lods
xchg
add
fisubr
adc
fstp
dec
loopne
imul
loope
popf
xchg
push
pop
cs
sub
mov
jo
and
add
sub
mov
inc
cdq
fld
loope
pop
ss
scas
and
sub
setle
cmps
push
in
aas
mov
add
cmp
sbb
sbb
adc
pop
mov
test
xchg
pop
retf
push
scas
mov
add
movs
sub
or
cmp
retf
ja
fdivrp
mov
sbb
sbb
pop
iret
mov
jp
or
mov
call
loope
movs
fmul
and
mov
push
pop
(bad)
pop
xor
leave
repnz
retf
adc
pusha
pushf
icebp
sbb
inc
ror
and
jae
and
sahf
iret
add
mov
xchg
inc
add
push
fidiv
test
mov
out
(bad)
outs
popf
ret
loope
xor
push
and
push
sub
add
inc
cli
and
mov
leave
shl
or
sbb
inc
cmovno
popa
adc
adc
ret
push
pusha
and
add
dec
pushf
xor
cmp
cmp
pusha
mov
jnp
mov
hlt
dec
fwait
(bad)
mov
cmp
mov
push
jo
dec
pop
cmc
into
fwait
pop
sbb
aam
cmp
int3
sbb
cli
pop
xchg
(bad)
shl
push
cmp
ret
xchg
sbb
ret
jns
aam
sar
loopne
ds
leave
retf
add
push
mov
pop
rcl
mov
mov
jge
jno
mov
sbb
pop
mov
aaa
les
mov
pop
sub
lds
mov
js
fcmovb
lahf
cmp
das
or
mov
mov
add
or
jbe
test
nop
push
imul
(bad)
dec
sbb
mov
popa
movs
or
pop
div
cmp
xor
jmp
rol
shl
inc
mov
fidivr
mov
or
pop
(bad)
mov
je
leave
hlt
or
fisub
dec
or
pop
mov
cmp
jmp
imul
xor
mov
xor
dec
js
and
and
outs
add
dec
sbb
in
(bad)
addr16
xor
pop
cmc
js
and
(bad)
sbb
push
pop
pop
cmp
pop
add
cmps
(bad)
jns
mov
dec
ja
aam
div
scas
ins
jl
xchg
test
lock
cmp
dec
and
outs
adc
in
and
add
sti
dec
jo
add
xchg
add
shl
cdq
(bad)
mov
daa
pop
rol
sbb
mov
in
mov
inc
outs
xor
ins
imul
mov
pop
jmp
sbb
add
movs
xchg
icebp
xchg
xor
addr16
gs
ret
inc
cmps
das
pop
push
sbb
adc
pop
and
mov
test
mov
retf
rcr
cmp
fdivr
push
loope
sub
loopne
push
fdiv
xchg
mov
cmps
ins
ret
dec
or
adc
dec
js
mov
xor
push
cld
mov
xchg
cli
or
shl
xor
aam
add
test
mov
pop
push
(bad)
sbb
je
xchg
xchg
or
adc
mov
sub
ffree
stc
test
cmp
mov
mov
push
mov
mov
sbb
pop
ins
ins
fcom
or
push
call
jne
fmul
not
push
test
lock
push
or
sub
pusha
(bad)
xchg
add
pop
popf
lds
or
xor
jmp
out
mov
jmp
or
pop
dec
xor
js
jle
scas
xor
imul
in
cmp
call
mov
sbb
mov
inc
inc
inc
fiadd
cmp
dec
cmp
pop
fcom
sahf
fadd
push
inc
enter
pop
dec
(bad)
sbb
and
add
push
std
xor
inc
cld
sbb
jmp
retf
fwait
(bad)
jns
outs
loopne
out
lea
aaa
push
inc
or
arpl
pop
pushf
pop
in
movs
pop
sahf
and
test
call
adc
dec
sar
cmp
sub
and
add
outs
sub
sbb
dec
push
mov
mov
das
push
lea
pop
loope
mov
pusha
sbb
clc
xchg
imul
mov
fadd
cmp
aaa
and
pop
loopne
xor
cmp
jb
aas
mov
aad
sub
jp
je
inc
ret
mov
push
cdq
not
add
push
addr16
in
xchg
inc
in
add
js
mov
xchg
shr
stos
aad
pop
dec
or
leave
retf
xchg
popf
les
imul
mov
inc
inc
popf
and
rol
test
(bad)
stc
hlt
add
mov
push
sub
cmp
sub
xchg
add
scas
je
sub
adc
or
inc
enter
out
scas
dec
popf
jno
cwde
cdq
dec
arpl
sahf
(bad)
push
addr16
mov
add
js
ja
push
lods
push
fs
rol
xor
les
or
mov
and
push
pop
(bad)
nop
sahf
pusha
ret
das
add
scas
fild
lea
outs
sbb
ret
aas
loope
fs
jmp
sbb
setle
mov
xchg
push
ret
xchg
jp
adc
add
(bad)
adc
ret
enter
stos
lea
mov
test
adc
fcomp
sbb
imul
sbb
not
imul
pop
sbb
leave
sbb
js
pop
jo
dec
xchg
pop
test
cmc
xchg
cs
ffree
or
xchg
sbb
push
sbb
test
movntps
add
add
sbb
add
mov
(bad)
retf
ja
ror
push
xchg
sbb
shr
pop
push
mov
or
sbb
push
addr16
test
cmp
and
cmp
xor
push
(bad)
dec
add
shr
aas
add
fcom
push
test
dec
imul
mov
jb
gs
dec
pushf
out
add
xchg
scas
mov
xchg
lock
icebp
jo
cmps
arpl
dec
push
dec
mov
xor
add
xor
add
inc
dec
stos
sbb
pop
push
ja
gs
mov
pop
cs
xlat
xchg
inc
out
jb
inc
push
in
bndstx
rcr
psrld
push
or
cmp
jg
imul
add
sbb
fisubr
mov
imul
mov
dec
in
inc
test
mov
add
retf
dec
shl
cmpps
inc
fst
xchg
add
sub
sbb
sbb
xchg
sub
mov
out
or
mov
add
add
fbstp
jo
sbb
adc
bound
addr16
jb
pop
out
pusha
loope
sub
mov
mov
xor
mov
dec
pop
leave
sar
pop
add
add
mov
ds
sub
jo
loop
js
pushf
in
iret
mov
cmc
sti
pop
xor
shl
out
sbb
(bad)
mov
push
and
les
dec
mov
pop
test
ds
outs
jl
(bad)
mov
add
ficom
jo
push
sub
xchg
scas
jg
mov
gs
jmp
jmp
in
loope
retf
or
sub
fsub
shl
test
xchg
popa
dec
stos
cli
or
(bad)
aam
test
test
call
xor
or
test
mov
or
xchg
xor
jp
mov
pop
lea
outs
jp
in
movs
das
xchg
mov
daa
pop
pop
pop
outs
pop
lahf
sub
push
xor
xor
fld
sbb
scas
and
imul
push
test
clc
popa
test
mov
mov
sbb
pushf
mov
mov
rol
test
mov
jns
pop
pusha
test
scas
repz
and
ret
sbb
dec
imul
mov
mov
pusha
ja
jb
push
aaa
mov
or
jb
rcl
cmc
pusha
and
add
sbb
test
push
dec
cmp
repz
dec
out
pop
mov
jb
arpl
xor
hlt
stos
invd
ja
and
cmp
fcom
(bad)
mov
jno
dec
inc
push
mov
aas
shr
jns
pop
pop
shl
add
add
pop
loope
retf
jmp
jmp
(bad)
in
lods
push
or
and
xor
adc
mov
mov
jb
test
and
xor
jns
mov
mov
mov
inc
sti
pop
xor
adc
push
dec
movs
cmp
das
or
adc
inc
xchg
add
mov
mov
mov
cmp
stc
push
dec
daa
ins
cmp
(bad)
inc
mov
(bad)
pushf
imul
push
(bad)
ins
ins
pop
imul
leave
not
mov
into
xchg
cmp
xor
scas
inc
mov
or
ret
and
and
lea
call
ss
sbb
movs
ret
rcl
dec
and
daa
sub
mov
inc
jmp
or
lea
addr16
sub
ret
or
or
xor
es
dec
cmp
sub
add
pop
mov
call
cmp
daa
mov
add
sub
adc
shl
jo
lods
aaa
sub
int
movs
xor
xor
dec
sbb
lock
and
call
ds
inc
mov
xchg
adc
ss
jne
rcr
movs
fadd
mov
das
cmp
sbb
pop
mov
rcl
sbb
repnz
sbb
loopne
push
(bad)
sub
js
add
or
mov
pop
inc
adc
outs
test
cmp
sub
adc
sbb
ds
ror
cmp
push
fbstp
mov
pop
sbb
fcmovu
inc
cmp
and
push
dec
pop
add
(bad)
xor
push
ror
push
add
sub
fnstsw
adc
iret
cmps
cli
cmp
fs
jl
jge
clc
and
mov
imul
lea
pop
bound
scas
jl
jmp
fsubr
mov
dec
sti
hlt
adc
jnp
jne
ffree
push
add
xchg
fadd
pop
stos
and
rol
pop
adc
aas
lods
lock
inc
jmp
inc
adc
loope
mov
jne
test
lahf
jmp
bound
mov
jb
add
push
mov
jmp
ret
mov
movs
nop
repz
jns
sbb
inc
pop
cs
fistp
nop
popf
add
xchg
xchg
movs
jbe
xchg
jno
jo
fwait
sbb
cmp
arpl
lock
cmps
gs
or
or
leave
adc
(bad)
shl
inc
pushf
push
jp
(bad)
and
mov
cwde
dec
mov
jecxz
xchg
dec
(bad)
rol
sbb
mov
push
aas
hlt
xchg
dec
cmp
sub
addr16
mov
or
xchg
sub
jmp
cmp
mov
movs
pop
dec
xor
and
fsubr
push
lahf
cmp
lea
mov
ja
aaa
sbb
and
arpl
addr16
test
fcmove
cs
out
repnz
add
push
cmps
mov
push
pop
mov
test
loope
imul
loopne
sbb
cdq
fist
mov
clc
mov
rcl
and
xchg
sbb
xchg
nop
and
pop
cmp
repnz
shl
and
loopne
pop
cmps
xor
add
sub
addr16
or
xor
in
in
lock
fsub
popa
and
pusha
sub
call
or
add
retf
loope
xchg
mov
xchg
jb
xchg
ror
adc
pop
xchg
outs
cmp
mov
push
inc
ror
add
mov
xor
xchg
or
and
loopne
imul
pusha
out
inc
push
inc
das
sub
add
inc
(bad)
xchg
push
dec
jecxz
aam
push
lods
xchg
pop
ror
xor
cmp
jo
pop
imul
mov
(bad)
or
scas
sub
(bad)
rcr
ret
and
enter
and
mov
popa
sbb
mov
fs
mov
test
sbb
out
or
jge
mov
pushf
fisttp
adc
sahf
inc
push
mov
inc
enter
pop
mov
xor
push
fisttp
popf
pop
je
push
inc
loope
and
(bad)
loopne
cmc
div
ret
sbb
test
adc
inc
mov
std
dec
xor
leave
sbb
ret
or
cli
aaa
push
pusha
pop
mov
out
outs
mov
xchg
je
push
xlat
test
adc
(bad)
sbb
imul
mov
movs
or
(bad)
xor
sub
daa
icebp
add
mov
mov
jmp
fisub
std
dec
mov
cdq
mov
in
cmc
pop
inc
inc
xchg
dec
xchg
enter
imul
imul
loop
aam
cmp
pop
or
mov
lea
adc
js
push
out
retf
add
and
dec
add
fistp
xor
out
mov
xor
test
mov
inc
mov
xor
jne
pop
fld
test
push
jecxz
xor
sbb
xlat
aam
push
stos
les
cmp
je
mov
fwait
push
dec
mov
dec
push
pop
mov
jnp
mov
jg
mov
cli
js
popa
mov
add
fs
shl
sbb
xchg
mov
shl
rcr
add
loope
sub
mov
pusha
xchg
inc
popa
cdq
sub
loopne
inc
stc
mov
push
mov
mov
add
add
(bad)
xchg
leave
mov
jmp
(bad)
retf
push
sbb
jecxz
cs
dec
push
or
loope
icebp
ret
add
stos
sbb
shl
push
sbb
xchg
jp
movs
add
test
shr
mov
cmp
xor
pop
cmp
lods
ja
imul
retf
arpl
int3
fmul
fs
popa
sub
loop
rcr
test
cmp
jae
sbb
test
jnp
inc
jmp
(bad)
and
addr16
mov
fwait
jae
or
ss
jmp
popa
movs
test
std
inc
xchg
sub
push
and
ffree
popf
shl
loop
ret
ds
mov
add
cmp
xchg
mov
jns
jmp
aaa
jno
and
push
pusha
cmp
inc
mov
out
call
sbb
cmp
pop
ror
mov
xor
imul
pop
test
pusha
jne
gs
movs
test
cmp
js
in
mov
add
repnz
lods
into
adc
jae
hlt
arpl
fwait
les
dec
push
xor
jae
cmp
loopne
inc
out
ins
fcom
scas
ret
jb
rcl
pop
popa
pop
cmp
jb
shr
xor
inc
xchg
jbe
ret
rcl
jns
or
enter
into
cmc
loop
pop
pop
nop
pop
jb
stc
cmp
cli
les
add
pushf
add
adc
jp
mov
daa
cmp
push
cmps
cmp
xor
lea
xchg
xor
mov
(bad)
adc
arpl
faddp
test
lea
lods
jne
(bad)
iret
fsubr
dec
sub
add
xchg
cmp
add
xchg
je
pop
(bad)
xor
fiadd
dec
imul
out
shl
adc
lods
(bad)
jp
shl
add
pop
jae
addr16
jb
pop
pop
aam
sahf
xchg
push
add
cmc
cmp
jno
sbb
ret
sbb
and
xchg
mov
out
lods
xor
dec
daa
push
mov
dec
pop
jnp
inc
add
mov
and
dec
retf
jmp
pop
rcl
add
push
es
xchg
add
add
inc
sbb
out
lods
(bad)
in
xchg
mov
dec
or
rcl
mov
adc
enter
mov
mov
movq
add
icebp
shr
push
push
xchg
outs
sahf
cmp
xchg
rcr
inc
cmc
in
js
repz
mov
icebp
push
sbb
sbb
retf
repnz
js
fcom
sub
in
(bad)
fdivr
push
shl
sbb
ja
ja
adc
in
sbb
(bad)
fbstp
leave
repnz
cmp
xchg
adc
mov
inc
push
mov
xchg
push
fstp
ins
dec
test
and
fs
(bad)
fidiv
nop
into
cmp
imul
movs
sub
mov
lds
inc
jne
mov
pusha
sahf
push
je
movs
sbb
mov
mov
cmp
js
retf
shr
add
call
cmc
hlt
in
je
mov
dec
je
adc
pusha
sub
loope
jmp
jmp
cmp
popf
lds
addr16
cmp
pop
aam
daa
movs
inc
dec
xor
arpl
fcmovnbe
fwait
dec
call
cmp
sbb
(bad)
or
mov
lods
jmp
rol
xchg
lock
or
pop
mov
vpmovmskb
mov
pop
sbb
popa
lods
inc
and
sbb
ja
int
and
adc
pusha
xor
add
sbb
sub
call
add
dec
jne
fs
and
push
mov
push
scas
or
addr16
push
ret
sub
push
ja
xor
sub
inc
test
icebp
fcmovu
lods
daa
retf
pop
fistp
mov
and
div
or
add
jbe
cmp
(bad)
cmps
xor
arpl
jge
cmp
popf
dec
jg
arpl
and
lods
fld
or
or
pop
or
arpl
bound
add
sub
mov
add
mov
add
and
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
lods
(bad)
add
add
add
and
inc
or
xor
or
pop
leave
xchg
dec
or
add
add
xchg
pop
leave
add
wrmsr
inc
adc
stos
outs
call
cmp
gs
imul
inc
jb
popa
aas
sub
je
dec
jne
sbb
test
ficom
inc
ins
inc
imul
jg
push
ins
jae
xchg
popa
ins
jne
sbb
jge
mov
outs
arpl
inc
ins
ins
or
dec
outs
fs
dec
popa
outs
fs
into
fwait
or
and
fs
arpl
inc
adc
fld
imul
imul
in
out
jb
outs
hlt
je
inc
jns
ds
inc
outs
jb
imul
inc
dec
bound
arpl
imul
jb
pop
adc
(bad)
sbb
outs
je
pop
push
outs
ins
js
(bad)
popa
jo
gs
data16
push
sub
arpl
je
cs
dec
lock
or
jp
outs
push
gs
jne
pusha
pop
(bad)
psubsb
fs
jns
gs
imul
outs
out
fld
enter
bound
idiv
outs
mov
push
inc
jbe
push
adc
mov
push
loopne
mov
sbb
push
shr
sti
sbb
ins
gs
in
in
cs
sahf
jae
ds
jo
or
sub
adc
jo
xchg
ret
sbb
imul
pushf
pop
inc
dec
psrld
mov
pop
rol
pusha
test
fidiv
and
push
imul
jb
(bad)
dec
adc
jnp
imul
js
ss
imul
push
fs
jl
inc
jp
sub
dec
jo
adc
or
popa
dec
popa
inc
movs
sbb
jg
rol
cmp
gs
mov
ss
jns
je
jne
daa
dec
mov
dec
xchg
fist
imul
je
ins
inc
and
and
and
inc
fs
mov
sti
sbb
xchg
push
icebp
sti
lds
xor
inc
dec
inc
daa
push
imul
mov
std
das
adc
xor
inc
(bad)
jmp
add
pop
sbb
popa
retf
cld
and
pop
cld
or
rcl
je
pusha
xlat
mov
clc
je
dec
popa
loopne
dec
lods
sbb
and
mov
jae
not
(bad)
pop
jb
mov
daa
inc
(bad)
cmps
mov
mov
mov
jp
nop
mov
xor
jecxz
inc
in
jo
mov
cmp
rol
loop
jp
bound
inc
lods
cmp
out
adc
mov
outs
jbe
mov
adc
pop
popa
bound
(bad)
aaa
sbb
push
jo
arpl
retf
pop
inc
dec
jb
movs
jbe
mov
pop
cmp
and
out
jb
test
sbb
loopne
in
sahf
jb
inc
push
pop
push
gs
jbe
push
push
dec
xor
arpl
or
dec
pop
or
push
bound
push
neg
in
lods
popa
cs
pop
sbb
loopne
xchg
dec
jl
addr16
mov
stc
dec
mov
sub
push
dec
mov
xlat
dec
outs
dec
data16
pushf
push
push
push
cmp
jae
add
pop
pop
inc
in
jbe
in
push
sbb
into
jecxz
ins
sub
adc
sub
jne
dec
fnstenv
daa
pop
and
rol
(bad)
mov
inc
xor
stos
xor
out
ins
dec
outs
xor
ins
and
sub
in
mov
cmp
mul
cmc
out
jo
sbb
neg
ins
inc
das
std
daa
cmp
mov
push
sbb
out
sbb
jns
movs
push
lods
cmp
mov
inc
lock
int3
mov
popa
jne
jne
test
mov
xlat
xor
jne
sbb
mov
jb
adc
sbb
cmps
push
shl
xor
mov
mov
mov
mov
xor
pop
adc
rol
mov
jo
movs
sbb
xor
push
sub
inc
mov
ja
js
sbb
stos
pop
push
fstp
retf
imul
das
dec
lea
push
popa
scas
jno
js
jg
je
ja
sub
clc
sbb
push
popa
imul
inc
in
dec
mov
push
in
pop
in
inc
cmp
sbb
mov
mov
and
out
test
dec
gs
jae
ins
aam
mov
cwde
outs
imul
cmp
jne
mov
xlat
(bad)
sub
ja
add
push
sbb
jae
push
sbb
fsub
stos
fwait
inc
sbb
aad
aas
and
xor
xchg
sub
stos
shr
in
mov
jne
inc
mov
popf
mov
push
xor
daa
cld
js
mov
jo
mov
fsub
mov
imul
fcom
bound
push
mov
xor
mov
jae
retf
jo
pop
dec
mov
jl
mov
jle
arpl
pop
sti
daa
sub
in
outs
and
outs
inc
or
fdiv
sub
mov
fdivr
arpl
dec
jo
push
jae
outs
cmp
mov
jbe
fisubr
adc
add
sub
das
and
lods
and
mov
ja
or
fs
inc
mov
or
pushf
jecxz
sub
pusha
les
jo
jo
sub
mov
sbb
sbb
cmp
adc
mov
and
fadd
push
mov
in
cmp
enter
xor
or
popa
and
jae
dec
nop
xor
cwde
movs
aaa
adc
imul
mov
jle
jb
pop
pop
imul
pop
sbb
or
call
es
retf
lods
ins
sub
and
movs
fld
and
sbb
push
jg
push
addr16
dec
push
xor
push
imul
adc
movs
push
inc
inc
dec
inc
movs
push
mov
add
inc
jg
lea
out
sti
push
arpl
ins
sbb
sbb
ror
mov
imul
inc
push
fcmovnb
xor
adc
xor
stc
push
stos
fcmovbe
fidiv
and
sbb
jns
and
or
inc
maskmovq
mov
iret
inc
js
in
jae
and
mov
sub
push
ja
inc
cli
push
jno
pop
bound
inc
aaa
stos
cs
inc
sti
sub
fisub
cmp
inc
psubusb
sub
xor
cmp
mov
mov
jne
jae
not
adc
ror
sbb
jae
sub
inc
mov
jne
push
sahf
inc
push
mov
jo
push
pop
(bad)
jbe
cmp
inc
cmps
sbb
imul
sub
outs
rol
sub
mov
scas
push
aas
pop
sar
repz
sahf
sbb
jne
sbb
lahf
mov
and
enter
mov
mov
sbb
loope
ins
fs
mov
dec
xchg
outs
sub
inc
shl
packsswb
sbb
(bad)
push
loopne
(bad)
shr
daa
sub
dec
sub
jns
scas
rcr
inc
test
mov
and
fnstsw
add
dec
fcom
adc
lock
add
aaa
pushf
outs
xor
mov
pop
jmp
dec
xor
mov
(bad)
push
je
jb
mov
sbb
pop
jne
jne
jne
jecxz
mov
cmp
push
outs
mov
imul
jmp
sbb
inc
dec
push
dec
inc
xor
out
mov
ror
xor
and
or
jno
retf
dec
in
stos
push
pop
int
outs
clc
sub
and
jmp
enter
into
xchg
(bad)
push
or
addr16
outs
sub
xchg
and
out
outs
jl
rcl
inc
jno
imul
rol
leave
sub
nop
pusha
add
shl
adc
jne
test
ret
repz
aad
mov
pusha
dec
data16
sub
push
mov
es
ins
shr
adc
pushf
popa
sbb
dec
shl
sub
jne
sbb
jne
daa
aam
test
ins
lea
mov
outs
add
ins
mov
push
cmp
mov
out
sub
arpl
ins
sbb
sub
jne
inc
pop
jbe
retf
pop
call
jae
push
push
mov
sbb
xor
mov
mov
sbb
imul
mov
fsub
sub
fisttp
dec
fnstenv
dec
movs
sahf
adc
inc
mov
ret
jge
je
inc
mov
test
sti
xchg
mov
mov
popf
mov
jns
imul
pop
fstp
outs
adc
jae
imul
adc
push
sub
jmp
(bad)
pop
cwde
(bad)
into
aaa
sub
pop
jo
jo
lods
ins
pop
and
push
imul
xor
imul
into
ins
and
sbb
pop
cmp
sti
mov
scas
mov
mov
adc
and
sbb
sbb
repnz
not
arpl
data16
pop
pop
xchg
sbb
test
pop
sbb
xchg
aam
add
ins
or
cli
out
adc
iret
mov
test
mov
sub
inc
jbe
jne
add
jns
cmp
nop
push
je
lods
mul
mov
movs
push
movs
cmp
aaa
fadd
ins
bound
sub
(bad)
push
mov
outs
sbb
cmp
int
add
fld
fisub
push
jecxz
adc
push
add
xor
or
pop
mov
sbb
dec
mov
daa
push
jne
imul
(bad)
sbb
retf
jbe
and
dec
mov
loopne
mov
sub
adc
addr16
push
popw
popa
jo
les
xchg
inc
sbb
sbb
cld
mov
pop
sub
and
cmp
xchg
sbb
sub
dec
sbb
sbb
jl
or
push
dec
xor
test
and
dec
inc
test
inc
ins
jl
sbb
push
icebp
imul
clc
outs
mov
cs
xchg
or
pusha
aaa
pop
sbb
pop
inc
sub
outs
jbe
ror
pusha
(bad)
fs
xchg
inc
and
add
data16
push
push
adc
pop
fcmovnu
mov
mov
pop
mov
and
je
int
scas
mov
dec
aaa
mov
mov
mov
and
push
sub
dec
aaa
pop
push
and
ficomp
and
pop
jb
push
pop
jg
dec
push
inc
ins
addr16
out
mov
or
pop
pop
in
add
bound
rol
inc
sbb
ja
mov
add
mov
sub
jecxz
lods
not
sub
sub
scas
push
ins
xor
aad
jne
pop
dec
cmp
add
push
arpl
or
(bad)
inc
arpl
(bad)
out
imul
fs
es
and
jne
add
or
test
retf
sbb
int3
mov
iret
jo
push
pusha
in
inc
inc
mov
nop
popf
cli
(bad)
enter
jbe
xor
cmp
hlt
(bad)
sbb
shl
and
adc
gs
mov
test
fldenv
dec
push
add
out
mov
out
adc
pop
mov
adc
jb
and
mov
push
addr16
fs
sub
xchg
arpl
inc
bound
xchg
ins
arpl
sbb
sbb
mov
pop
lods
push
dec
data16
loop
or
pop
pop
ins
pop
imul
retf
ror
pop
sbb
hlt
add
in
xor
xlat
(bad)
outs
aam
push
add
add
(bad)
fistp
cld
ret
jo
pop
push
pop
pop
or
aaa
dec
fs
add
mov
(bad)
or
(bad)
mov
inc
pop
inc
push
pop
cld
add
inc
pop
push
inc
fs
cs
mov
mov
push
xor
xlat
mov
pop
xlat
sbb
scas
pop
adc
shr
jge
sar
mov
mov
in
mov
push
xor
ret
pop
inc
add
push
inc
add
add
pop
inc
sub
sti
ins
inc
add
sub
jle
daa
dec
loopne
adc
lock
xor
push
add
add
push
mov
mov
sbb
jb
pop
jnp
sti
push
inc
packuswb
add
call
cmp
aad
xor
inc
in
call
or
inc
dec
inc
inc
scas
xor
mov
xchg
aad
add
and
add
js
inc
inc
push
push
pushf
xor
xor
fisubr
in
pusha
dec
inc
push
rol
sub
shl
add
cs
repnz
fisub
out
dec
xor
jmp
out
lahf
cs
jae
or
lahf
inc
xchg
pop
jmp
inc
lahf
push
dec
fadd
idiv
cmps
add
push
fdiv
dec
pop
add
cmp
cmp
in
jg
and
inc
add
xchg
jmp
add
xchg
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
fsubr
add
push
add
