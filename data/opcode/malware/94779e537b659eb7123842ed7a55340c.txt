jo
or
add
add
dec
add
add
add
add
and
add
add
add
add
push
mov
add
mov
or
push
sub
add
sub
add
sub
add
xor
add
add
adc
lea
add
add
push
push
add
add
xor
add
add
add
add
adc
sub
add
push
or
add
pop
add
push
or
add
jo
aas
add
jo
sbb
or
push
add
or
adc
add
sub
add
adc
add
sbb
add
add
add
add
push
add
push
or
add
pop
add
push
or
add
sbb
add
sub
sub
add
xor
add
add
add
add
push
lea
add
add
jb
add
jo
add
lea
add
add
or
or
sbb
adc
adc
add
es
add
jo
lea
add
add
or
iret
add
jo
adc
add
dec
add
jo
push
lea
add
add
adc
add
mov
add
push
or
add
jo
ja
add
pop
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
push
je
add
sbb
lea
add
ja
add
pop
lea
add
add
movups
push
jb
add
jo
adc
sub
add
push
je
add
sbb
jo
ja
add
pop
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
push
je
add
sbb
add
adc
add
jo
ja
add
pop
lea
add
add
adc
adc
jb
add
jo
jg
add
pop
lea
add
add
adc
adc
adc
add
add
push
mov
add
push
je
add
sbb
push
push
adc
sub
add
push
or
add
adc
mov
jo
lea
add
add
or
add
adc
adc
jb
add
jo
sub
pop
jb
add
jo
add
add
pop
sub
add
push
adc
adc
push
sub
add
push
or
add
jo
stc
add
jo
pop
lea
add
add
adc
adc
push
mov
add
push
je
add
add
or
or
add
jo
push
add
push
je
add
add
or
add
jo
push
add
jo
or
lea
add
add
adc
adc
add
add
add
mov
add
push
ficom
adc
adc
sub
add
push
sub
add
push
fiadd
sub
inc
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
jb
add
jo
mov
sbb
or
push
add
or
add
mov
in
add
push
add
push
movs
or
add
mov
add
add
add
je
add
sbb
add
xor
add
add
add
add
adc
add
jo
adc
sbb
or
push
add
sbb
add
mov
push
sub
add
push
sub
add
xor
cmp
add
add
mov
mov
lea
add
add
push
or
or
pop
add
xchg
pushf
pop
pop
pop
or
add
or
push
push
add
or
or
add
sub
push
sub
add
sub
add
sub
add
sub
add
xor
jo
xchg
add
jo
push
lea
add
add
adc
add
sub
sub
add
xor
add
add
add
adc
sub
add
push
or
sub
add
or
adc
adc
adc
mov
add
push
add
push
je
add
add
sub
push
or
push
or
add
add
adc
xor
adc
or
add
add
add
xor
or
add
add
add
push
sub
add
sub
add
add
add
add
sub
add
add
or
and
add
add
or
add
add
add
add
add
add
push
add
add
or
push
add
pop
add
or
push
add
or
add
sub
add
add
or
and
add
or
add
sub
add
add
add
or
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
or
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
xchg
aad
cmp
pushf
mov
fcom
adc
mov
xor
pushf
sub
lds
adc
ins
or
leave
or
mov
dec
jmp
mov
sbb
call
jae
add
cmp
sub
sbb
scas
rcr
pop
xchg
test
fst
xor
out
mov
cmp
cs
push
aaa
in
push
mov
dec
push
aas
enter
popf
add
ficomp
sbb
bound
imul
std
or
add
push
add
aad
add
xor
add
add
add
or
add
add
jmp
add
inc
or
add
or
add
add
sub
add
or
add
icebp
add
add
add
add
add
sbb
add
sahf
add
add
arpl
add
mov
add
les
add
imul
add
add
add
add
add
add
add
add
add
jne
add
sbb
add
add
add
mov
add
push
dec
xor
dec
inc
dec
dec
dec
dec
sub
dec
xor
dec
inc
dec
cmovle
js
dec
dec
pop
dec
inc
dec
cmp
dec
push
dec
push
dec
xor
dec
cmp
dec
push
dec
add
dec
inc
dec
dec
dec
pop
dec
ss
push
dec
pop
dec
add
add
cs
dec
add
xor
add
dec
push
cmp
dec
xor
dec
sub
dec
add
jb
cs
pop
dec
gs
cmovle
dec
dec
adc
dec
aad
add
cmp
dec
sbb
dec
dec
dec
dec
dec
cmp
dec
jnp
dec
dec
push
dec
jl
cmp
dec
add
dec
jb
jae
je
push
dec
push
dec
push
dec
dec
dec
cmp
dec
and
dec
pop
dec
inc
dec
jecxz
add
dec
cmovle
dec
pop
dec
push
dec
or
dec
xor
dec
jbe
ins
dec
pop
dec
jp
gs
xor
dec
dec
dec
cmp
dec
adc
dec
addr16
push
dec
outs
dec
cmp
push
dec
sbb
dec
cmp
dec
jb
jbe
dec
dec
xor
dec
or
arpl
dec
jmp
aaa
dec
imul
dec
xor
dec
cmp
push
dec
das
dec
inc
dec
or
dec
pop
dec
ss
pop
dec
xor
dec
dec
addr16
ss
sub
inc
dec
sub
dec
pop
dec
sub
dec
cmp
dec
and
sbb
dec
add
dec
cmp
dec
push
xor
dec
ss
or
dec
sbb
dec
aas
dec
or
sub
dec
popa
dec
jb
addr16
push
dec
adc
add
and
pop
dec
sbb
dec
sub
sub
adc
dec
dec
jge
inc
dec
outs
dec
xor
dec
pop
dec
cmp
dec
add
dec
dec
dec
jl
xor
dec
inc
dec
pop
dec
dec
dec
and
pop
add
cmp
dec
and
dec
pop
dec
pop
dec
dec
dec
and
dec
sbb
dec
push
dec
outs
dec
inc
dec
dec
dec
and
dec
adc
dec
adc
dec
and
dec
cmp
dec
cmp
dec
add
dec
dec
xor
dec
dec
dec
pop
dec
inc
dec
pop
dec
ins
dec
addr16
dec
dec
push
dec
bound
dec
inc
dec
js
pop
dec
or
dec
sub
dec
push
dec
inc
dec
add
dec
arpl
dec
int
add
dec
sub
dec
dec
push
dec
adc
xor
dec
dec
and
arpl
dec
ds
inc
dec
push
dec
push
dec
sbb
dec
sbb
dec
arpl
dec
jae
dec
dec
inc
dec
sub
dec
or
dec
gs
ss
or
dec
sub
dec
or
dec
div
add
inc
das
dec
adc
xor
dec
and
dec
inc
dec
push
dec
sub
dec
pop
dec
sbb
imul
popa
dec
push
pop
dec
pop
dec
cmp
push
dec
jge
or
dec
push
dec
imul
add
jge
adc
dec
push
dec
mov
xor
dec
sbb
dec
pop
dec
push
dec
pop
dec
add
adc
dec
or
dec
or
dec
cs
push
dec
jo
push
dec
push
dec
adc
dec
jbe
push
dec
ins
dec
and
xor
dec
adc
dec
pop
dec
jle
or
mov
add
dec
xor
dec
dec
jno
adc
dec
bound
dec
pop
dec
push
dec
jp
adc
dec
pusha
dec
jge
and
dec
jne
je
ja
aaa
dec
pop
dec
inc
dec
dec
dec
and
dec
dec
dec
sub
dec
daa
dec
inc
dec
in
jmp
dec
ins
dec
add
dec
popa
dec
jl
or
dec
push
dec
dec
dec
sbb
dec
push
dec
popa
dec
and
es
jle
adc
dec
sub
dec
jb
pop
dec
inc
dec
or
dec
pop
dec
push
dec
push
dec
sbb
dec
push
dec
cmovle
outs
dec
and
sub
add
xor
dec
adc
dec
add
dec
sub
dec
sbb
dec
cmp
dec
cmp
dec
and
dec
or
dec
dec
dec
push
dec
add
dec
bound
dec
pop
dec
scas
popa
add
cmp
dec
xor
dec
sbb
dec
pop
dec
add
dec
sbb
dec
das
dec
imul
dec
sbb
dec
push
inc
dec
and
dec
xor
dec
ds
daa
dec
ja
dec
dec
dec
dec
cmp
mov
add
aaa
dec
addr16
add
dec
dec
dec
sbb
dec
inc
dec
push
dec
adc
dec
and
dec
push
dec
ss
push
dec
jle
ins
dec
fs
cmp
dec
je
adc
dec
inc
dec
cmp
dec
and
dec
sbb
xor
add
cmp
dec
add
dec
cmp
dec
adc
dec
inc
dec
inc
dec
ds
inc
dec
es
push
dec
fs
cmp
dec
sbb
jo
and
dec
and
dec
pop
dec
inc
dec
or
dec
adc
dec
sbb
sbb
dec
push
dec
daa
dec
adc
sub
dec
or
dec
pop
dec
daa
dec
sbb
or
dec
add
pop
dec
or
cs
dec
dec
sbb
dec
pop
dec
fs
dec
aas
dec
sub
out
inc
add
ss
dec
push
dec
dec
dec
push
push
dec
jbe
ins
dec
push
dec
xor
dec
jae
jb
sbb
dec
sub
dec
imul
addr16
bound
dec
aaa
dec
add
dec
inc
dec
pop
dec
jns
add
cmp
dec
and
dec
and
dec
pop
dec
or
dec
dec
adc
dec
sub
dec
pop
dec
jbe
pop
dec
cmp
dec
pop
dec
sub
dec
dec
dec
sbb
dec
push
dec
jnp
xor
dec
aas
dec
mov
dec
sub
sbb
dec
dec
dec
xor
dec
inc
dec
adc
dec
pop
dec
push
dec
dec
dec
and
dec
jo
sub
dec
pusha
dec
cmp
jl
mov
dec
dec
jl
inc
dec
pop
dec
pop
dec
sbb
jle
pop
dec
or
push
dec
adc
dec
pop
dec
xor
dec
cmp
dec
cmp
dec
and
dec
jle
push
dec
or
dec
cmp
dec
sub
dec
push
dec
pop
dec
push
dec
outs
dec
dec
dec
push
dec
add
dec
pop
dec
pop
dec
(bad)
add
xor
dec
add
dec
ss
aaa
dec
jnp
jae
sub
dec
jne
sub
dec
cmp
dec
jnp
push
dec
jb
jo
inc
dec
dec
dec
aas
dec
push
dec
sub
add
sbb
dec
dec
cmp
dec
imul
dec
aaa
dec
bound
dec
sbb
dec
ds
sub
imul
push
dec
sbb
dec
pop
dec
inc
dec
push
dec
push
dec
ins
dec
cmp
dec
fs
popa
dec
adc
dec
or
dec
in
push
dec
bound
dec
inc
dec
dec
sbb
dec
cs
pop
dec
inc
dec
jae
jns
push
dec
sub
dec
outs
dec
adc
dec
pop
dec
dec
dec
push
dec
cmp
dec
pop
dec
pop
dec
sub
test
add
dec
pop
dec
jbe
and
add
dec
adc
dec
jo
jge
cmp
dec
pop
dec
jbe
jae
add
dec
pop
dec
cs
adc
dec
popa
dec
or
dec
inc
dec
aas
dec
pusha
dec
pop
dec
add
dec
push
dec
add
dec
jo
push
dec
outs
dec
mov
pop
dec
pop
dec
or
dec
popa
dec
gs
jns
fs
adc
sub
dec
push
dec
sub
dec
sbb
dec
xor
dec
add
dec
jo
pop
dec
ds
lods
loope
add
dec
jne
pop
dec
cmp
dec
jle
das
dec
push
dec
sub
dec
arpl
dec
aaa
dec
dec
dec
and
dec
pop
dec
sub
dec
add
dec
or
dec
cmp
dec
(bad)
push
push
add
pop
dec
inc
dec
or
dec
add
dec
sbb
dec
xor
dec
and
dec
aas
dec
daa
dec
pop
dec
popa
dec
sub
dec
and
pop
dec
push
dec
mov
push
add
push
dec
jg
inc
dec
dec
dec
push
dec
inc
dec
xor
dec
pop
dec
pop
dec
cmp
dec
pusha
dec
pop
dec
sbb
dec
ja
je
dec
dec
cmp
dec
cmp
dec
push
dec
cmp
push
add
dec
sbb
or
dec
push
dec
adc
dec
pop
dec
jo
gs
or
dec
pop
dec
pop
dec
add
dec
or
dec
dec
dec
addr16
dec
dec
and
dec
dec
inc
dec
cmp
dec
pop
dec
dec
dec
popa
dec
js
push
dec
cmp
dec
push
add
dec
dec
dec
inc
dec
jbe
dec
add
dec
push
dec
pop
dec
pop
dec
adc
dec
xor
dec
popa
dec
jb
adc
dec
adc
dec
pop
dec
jae
xor
dec
inc
dec
sub
dec
xor
dec
sub
dec
cmovle
dec
push
dec
add
dec
dec
dec
xor
dec
ss
inc
dec
push
dec
jnp
push
dec
sub
dec
das
dec
ins
dec
push
dec
sub
dec
jne
inc
dec
sbb
dec
imul
jle
fiadd
add
dec
jne
cs
sbb
dec
sub
dec
cmp
dec
sbb
dec
adc
dec
push
dec
addr16
xor
dec
es
sub
dec
pop
dec
jp
sub
dec
push
xor
dec
pop
dec
push
dec
je
and
sub
add
dec
push
dec
je
inc
dec
pop
dec
add
dec
pop
dec
sub
dec
push
dec
jae
sbb
dec
or
dec
inc
dec
jg
ins
dec
sub
dec
jo
sub
dec
sub
dec
add
dec
arpl
cmp
dec
cmp
inc
dec
pop
dec
jge
ss
push
dec
ss
jp
adc
dec
pop
dec
jbe
cmp
dec
daa
dec
dec
dec
sbb
dec
add
dec
ins
dec
and
dec
add
dec
pop
dec
jae
arpl
movs
pop
add
jle
inc
dec
jns
add
adc
dec
pop
dec
ss
xor
dec
or
dec
inc
dec
and
inc
dec
sub
dec
pop
dec
or
dec
jns
jnp
cmp
dec
jae
pop
dec
sbb
dec
add
add
dec
bound
dec
pop
dec
jl
jg
inc
dec
inc
dec
and
dec
dec
dec
sub
or
dec
sub
dec
sub
dec
ins
dec
sbb
dec
pop
dec
dec
dec
add
add
jle
addr16
ja
cmp
pop
dec
push
adc
inc
dec
ins
dec
dec
dec
inc
dec
push
dec
pop
dec
jb
xor
dec
aas
dec
pop
dec
jp
sbb
dec
aas
dec
push
dec
sbb
dec
pop
dec
adc
cmovle
loope
or
and
xor
add
(bad)
xor
inc
sbb
out
hlt
mov
jne
ins
hlt
and
xor
lock
dec
and
out
inc
lock
jns
out
arpl
dec
xchg
ret
pop
sub
add
das
test
fmul
movs
jae
sbb
pop
cs
cmp
sub
lods
xchg
and
jnp
out
and
aas
cmp
dec
xchg
cmp
test
lods
lahf
adc
lods
test
mov
test
adc
cmps
fcomp
mov
lods
sub
jl
pop
mov
push
retf
cwde
mov
cmp
pushf
stos
outs
inc
inc
sbb
jmp
cmp
push
mov
jecxz
cmp
xor
and
sar
fld
dec
int
in
test
cmp
pop
jl
sbb
adc
xchg
or
jmp
popf
xchg
push
sub
jge
push
in
pop
xor
mov
std
int
pop
enter
cmp
bound
push
add
rol
cdq
sti
jg
xor
and
repz
pop
xor
lea
ins
and
adc
add
pop
cmc
xchg
push
sub
add
and
cmc
dec
scas
lock
cmps
pop
pop
call
xchg
mov
sbb
popf
lods
mov
cmp
mov
xchg
sub
gs
sub
jns
xor
inc
add
test
dec
sbb
inc
scas
fistp
outs
xchg
dec
imul
mov
cld
in
retf
imul
xchg
xor
(bad)
xchg
sub
adc
and
sub
mov
lods
pop
push
jno
pop
jle
mov
inc
xor
mov
mov
and
in
lea
jge
retf
xor
cld
addr16
pusha
outs
(bad)
into
mov
out
lods
cs
push
aam
cmps
scas
and
shl
or
test
inc
movs
fs
imul
pop
sbb
fmul
je
repnz
hlt
cmps
stc
nop
in
fisttp
jge
retf
into
adc
mov
pop
mov
outs
jns
mov
jmp
arpl
dec
(bad)
(bad)
inc
push
push
bound
gs
add
retf
clc
jne
jp
xor
xor
in
mov
mov
adc
jbe
push
sub
inc
arpl
and
popf
jecxz
or
(bad)
fisubr
xchg
int3
loop
push
add
pop
add
dec
mov
and
nop
(bad)
jle
jno
lods
pop
(bad)
push
out
rcl
cdq
ss
or
ret
fcmovb
cmp
scas
les
jl
sub
cmp
les
sbb
push
sti
mov
cmps
pop
mov
mov
adc
lea
pop
sar
jnp
push
fwait
push
xchg
sbb
lds
or
pop
inc
jmp
daa
aad
lea
fst
inc
pop
jmp
add
fnstsw
dec
jns
lea
das
retf
dec
stos
cmp
adc
mov
pmaxub
xchg
jno
xor
(bad)
(bad)
outs
fwait
sbb
cmp
dec
shr
and
inc
imul
clc
movs
cmps
mov
bound
ins
xor
sbb
cld
mov
mov
jmp
bound
mov
dec
hlt
xchg
sub
shl
inc
xor
outs
pop
pop
dec
xor
out
pusha
cwde
int
pop
cs
mov
(bad)
mov
int3
add
bound
push
dec
retf
ret
shl
stos
cmp
ja
gs
imul
cmps
xchg
push
in
fild
xchg
fild
mov
cmp
dec
div
push
int
scas
xor
and
xor
pop
bound
stc
test
jmp
movs
jecxz
retf
and
and
jmp
push
mov
dec
and
and
mov
(bad)
test
jo
cli
fisub
dec
into
popf
fadd
pop
cdq
dec
movs
dec
push
mov
repz
push
xchg
or
xchg
adc
mov
mov
mov
mov
sbb
xor
xor
(bad)
sahf
adc
pop
inc
test
mov
std
push
adc
sbb
and
dec
test
adc
bound
sbb
adc
std
fcmove
xor
inc
fwait
sbb
call
or
aam
push
stos
fxch
stos
in
ret
test
dec
lods
fwait
jmp
sbb
adc
lock
push
aaa
loop
mov
mov
xor
add
add
(bad)
repz
sub
add
std
add
dec
cmc
dec
mov
out
push
repnz
sar
mov
jmp
mov
push
stc
sub
sub
xchg
push
idiv
pop
(bad)
repnz
mov
mov
sub
movzx
enter
adc
and
cmp
add
in
stos
xchg
jmp
and
adc
das
mov
mov
or
pop
and
pop
dec
jge
test
gs
popa
push
or
in
adc
sbb
sub
loop
push
jns
mov
mov
xor
fcomp
ins
inc
movs
mov
mov
popa
out
popaw
cwde
xchg
cmp
add
pop
fiadd
fisttp
mov
pop
outs
inc
clc
ss
jno
cs
call
clc
pusha
push
jge
loop
mov
sar
(bad)
in
data16
sbb
ror
lahf
cwde
dec
push
ins
js
cdq
ss
mov
test
add
out
sbb
xor
popf
xchg
std
add
retf
xchg
sbb
sub
sbb
or
jp
pop
xchg
push
inc
jle
jecxz
dec
sub
pop
pop
cdq
test
ret
(bad)
mov
pop
jecxz
inc
shl
jmp
dec
push
sbb
jp
mov
hlt
mov
out
mov
xchg
add
dec
adc
mov
adc
test
loop
fsub
mov
rcr
pop
cmps
push
shr
scas
idiv
js
mov
sbb
lods
ja
dec
inc
cmp
cmps
or
xlat
push
add
outs
cmp
sahf
or
int
retf
stc
mov
popf
out
sub
cld
loope
jne
aas
hlt
repz
(bad)
ds
loopne
hlt
jle
test
sbb
pop
pop
cmp
pop
ret
xchg
add
cmps
jp
dec
dec
retf
adc
and
aam
lods
mov
sar
adc
test
jno
pop
(bad)
cmp
in
aas
inc
mov
aam
mov
(bad)
imul
arpl
popf
mov
mov
pop
shl
xor
pusha
imul
xlat
and
call
adc
repz
push
xor
jge
fs
mov
imul
mov
icebp
cmp
repz
mov
lahf
mov
arpl
pop
outs
and
adc
call
(bad)
rol
or
or
fstp
in
sbb
mov
(bad)
ja
xor
mov
aam
(bad)
and
lock
and
nop
inc
sbb
xor
les
cmp
sbb
cdq
push
pop
sbb
nop
sub
in
ret
push
xchg
add
fdivr
pushf
cmps
adc
stos
push
or
mov
std
dec
(bad)
mov
into
cdq
push
jae
pop
mov
pop
jmp
ficom
(bad)
(bad)
jge
push
push
xor
or
and
sar
nop
xchg
jecxz
push
fistp
sahf
mov
repz
or
jnp
jmp
xchg
inc
adc
xchg
in
mov
enter
ror
add
test
std
push
popf
sub
in
rol
movs
popf
out
ret
xor
lock
mov
add
call
add
cmp
sbb
ja
aas
popa
lds
jmp
mov
push
(bad)
mov
lahf
cli
ds
pushf
mov
rcl
jb
aaa
jo
popa
xchg
xor
jp
je
add
dec
fnstcw
cmp
pop
aam
outs
cmc
mov
clc
ret
adc
dec
call
scas
push
std
pop
push
adc
ja
shr
mov
and
lds
or
sar
daa
sub
in
jmp
leave
inc
xchg
xchg
pop
ret
mov
mov
sub
js
ret
lds
xor
aas
ja
movs
mov
(bad)
(bad)
jo
mov
jne
cld
test
ins
scas
dec
lods
sub
push
call
xor
pop
mov
ss
repz
mov
and
std
jl
lds
sbb
dec
sahf
push
in
(bad)
fdivr
loopne
sbb
or
add
push
add
push
cmp
sub
neg
mov
loop
aad
bound
not
jne
or
push
imul
and
leave
out
jecxz
cs
sbb
std
xchg
mov
or
popf
jae
jne
jb
inc
dec
sbb
xchg
rcr
rcl
imul
push
xor
ja
jmp
lahf
lock
(bad)
adc
inc
in
or
adc
into
mul
inc
mov
mov
dec
push
dec
and
into
dec
pop
movs
movs
cmps
adc
inc
int3
add
inc
push
or
lods
ret
push
cdq
adc
pop
push
out
mov
pop
retf
mov
or
std
adc
mov
ret
fimul
push
jbe
call
test
pop
xchg
add
into
or
xchg
shr
pop
lahf
gs
mov
cmp
sbb
leave
ffreep
xchg
ss
leave
mov
repz
jge
jle
data16
(bad)
pop
repz
pop
pushf
jae
cmps
cld
mov
addr16
outs
adc
mov
and
jmp
and
push
div
sbb
imul
scas
sti
and
icebp
sbb
mov
loop
mov
scas
outs
movd
add
popa
cmp
sub
dec
or
ret
pop
xor
(bad)
push
fstp
and
in
jle
push
mov
pop
movs
add
cdq
xlat
jmp
xchg
das
xor
call
gs
inc
or
jle
adc
cmps
sub
jmp
pop
push
dec
pop
rcl
jmp
retf
imul
push
call
cmp
test
out
inc
dec
clc
out
jle
into
push
(bad)
std
clc
bound
dec
xchg
mov
pop
pusha
adc
popf
or
in
rcr
popa
nop
ins
pusha
pop
(bad)
cmps
cmp
aaa
popf
fs
add
jl
xchg
jno
mov
push
mov
xchg
mov
jo
int3
adc
fiadd
cmp
sub
aad
pop
xchg
mov
sub
aad
add
mov
add
aam
outs
fimul
jb
shl
fisub
cmps
push
cmp
popa
shr
fcom
xchg
inc
jmp
adc
add
and
cmp
cmp
mov
int3
mov
loope
jecxz
icebp
cwde
bound
mov
inc
sti
mov
fs
test
scas
xor
aam
fcmovnbe
out
add
mov
scas
je
out
add
xchg
pop
mov
push
inc
stos
mov
pop
jae
es
pop
pop
mov
mov
test
and
or
push
cwde
mov
pushf
jb
mov
imul
ror
xor
sub
and
sub
mov
sbb
mov
out
or
outs
stos
aam
or
sbb
call
lods
xlat
fcmove
mov
xchg
pop
ret
bound
mov
test
scas
lods
fidiv
sbb
mov
ins
out
fild
push
jl
xor
mov
rcl
cmp
enter
stos
xor
mov
rol
pop
jns
or
popa
das
push
in
xchg
(bad)
pop
pop
fisub
in
gs
ja
push
inc
inc
mov
dec
and
loope
mov
mov
and
push
cli
mov
sub
out
push
add
das
mov
cs
daa
call
and
dec
push
push
imul
jne
dec
call
out
adc
pop
push
imul
xchg
and
mov
(bad)
push
nop
ficomp
idiv
pop
shl
adc
inc
cli
sti
dec
jle
mov
shl
daa
(bad)
clc
cmp
enter
ds
sbb
mov
cli
adc
arpl
add
call
jnp
(bad)
mov
push
add
pop
or
lock
fbld
pop
pop
stos
mov
in
addr16
test
xchg
addr16
xchg
xchg
mov
and
dec
ins
sti
mov
mov
movs
(bad)
leave
stos
pop
(bad)
dec
xor
ret
or
add
pop
mov
cwde
clc
mov
into
xchg
xchg
jmp
scas
pusha
dec
sar
into
fsubr
jg
sahf
sti
adc
mov
dec
(bad)
sub
push
and
sbb
das
mov
aad
sub
cld
(bad)
mul
jb
(bad)
fld
jecxz
test
iret
das
xchg
mov
retf
(bad)
lds
lods
or
cdq
push
(bad)
das
call
add
popa
sub
jae
adc
cmp
jl
pushf
(bad)
jp
ss
das
mov
mov
movs
or
rcr
push
and
stc
fnstcw
in
mov
jge
adc
imul
jbe
cs
mov
into
mov
fidivr
fdiv
es
push
movs
jecxz
mov
(bad)
pop
mov
mov
mov
out
dec
in
fimul
xor
sbb
jnp
mov
or
cmp
fsubrp
pop
loop
dec
jns
xor
mov
cmc
lea
lods
bound
pop
pop
xor
xchg
pop
fst
push
push
bound
inc
push
jnp
and
fadd
jbe
pop
push
aam
out
sahf
(bad)
mov
mov
in
sbb
pop
sub
xchg
push
inc
lock
fs
inc
mov
cmp
cmp
ror
dec
xor
pop
mov
pop
int3
push
jns
aam
std
test
stos
out
(bad)
sbb
dec
retf
(bad)
mov
or
shl
loope
lods
sahf
(bad)
clc
mov
mov
mov
ja
xor
mov
retf
rcl
iret
mov
leave
or
xorps
test
(bad)
int
daa
mov
test
add
push
loop
test
shl
mov
or
repnz
out
repnz
adc
mov
fwait
lds
or
shr
push
inc
daa
fwait
icebp
sub
outs
inc
mov
xor
out
add
jae
loopne
out
arpl
inc
and
or
pusha
fs
jle
test
movs
rcr
xor
sbb
lahf
and
inc
movs
test
nop
stos
sub
cmp
lds
call
jmp
jl
fdiv
mov
and
pushf
dec
push
adc
cdq
lods
in
inc
cld
lahf
ss
and
jmp
es
mov
dec
cs
shl
cmp
pushf
arpl
into
mov
lds
cmps
lods
dec
cmc
cmps
das
and
adc
(bad)
out
xchg
(bad)
push
xor
jecxz
pushf
and
call
das
in
pop
ds
mov
sbb
or
ins
jae
movs
sbb
pop
cmp
xor
mov
pop
or
jge
adc
cdq
cmps
movs
das
jge
fld
inc
push
add
jecxz
push
mov
xchg
les
rcl
cmp
inc
sub
cli
xchg
fdiv
mov
cs
inc
out
rcl
jbe
mov
shl
mov
fidiv
ja
mov
je
push
mov
clc
sbb
push
xchg
xchg
jne
repz
xor
fs
xchg
(bad)
addr16
inc
pop
cdq
jecxz
fdivrp
sbb
test
out
jns
jae
adc
add
pop
and
mov
cmp
push
bound
enter
sbb
cmp
ins
mov
jae
(bad)
cdq
mov
xor
mov
jmp
punpckhdq
sub
sub
popf
jp
xor
jl
popf
jmp
mov
pushw
pop
movs
jb
jns
aaa
lds
or
mov
jae
jle
or
mov
jl
mov
jae
mov
cli
int3
imul
daa
icebp
push
and
scas
cmp
fs
mov
fs
(bad)
ds
mov
pop
ins
aam
(bad)
adc
addr16
push
cmp
sub
popa
xor
dec
into
call
jb
mov
sub
neg
in
push
outs
xchg
mov
push
adc
stos
cmp
in
cli
in
sbb
or
add
push
sahf
icebp
aad
xchg
fistp
iret
pop
ja
push
call
push
nop
push
outs
mov
sbb
cmps
ret
cdq
sub
ss
xlat
cdq
mov
sub
dec
sbb
rcl
push
xchg
stos
shr
adc
and
cmp
xor
jmp
lods
cmp
ins
mov
or
add
and
jl
mov
pop
push
pop
mov
jo
int3
movs
out
sub
repz
or
aad
or
imul
and
inc
jp
or
int3
mov
mov
movs
jns
out
inc
pop
outs
push
pop
mov
add
ins
and
pushf
xor
loopne
and
sbb
pop
mov
xchg
lds
pop
leave
js
inc
daa
xor
jae
cwde
sbb
or
std
and
sub
lods
fsub
mul
mov
push
out
dec
fs
stc
outs
out
(bad)
sub
fs
jmp
mov
popf
mov
mov
cmc
stos
xchg
push
sti
rol
cli
mov
sub
cld
nop
sub
mov
dec
dec
test
enter
jae
call
rcl
pusha
mov
(bad)
or
rcr
and
lahf
frstor
imul
retf
jb
inc
mov
ret
lahf
daa
jmp
jo
dec
into
aam
xchg
dec
js
cmp
and
or
fstp
dec
dec
dec
clc
mov
sbb
in
mov
pop
sub
lods
push
(bad)
sbb
retf
arpl
movs
mov
adc
or
fnstenv
lock
out
and
ret
add
pop
rcr
loope
mov
call
xlat
dec
or
arpl
add
jo
mov
sar
xchg
ins
push
or
hlt
dec
lock
sahf
cmp
xchg
pusha
dec
cmp
adc
mov
into
pusha
aaa
test
pop
repnz
mov
and
lahf
int
pop
sbb
add
mov
lds
push
xor
xor
fwait
and
loope
stos
imul
cmps
or
xor
fs
outs
sub
sbb
xchg
rcr
pop
dec
test
cmp
in
dec
dec
rcl
pop
out
mov
out
jns
dec
or
ja
dec
sbb
hlt
gs
rol
enter
sub
sbb
and
test
shl
inc
into
mov
xchg
aas
sbb
jmp
push
sahf
mov
nop
mov
jae
mov
sub
call
xchg
ss
fstp
sbb
(bad)
jge
fwait
cdq
imul
in
mov
lods
loop
sbb
pusha
leave
xchg
repz
fstp
sub
adc
sub
push
repz
stos
gs
or
outs
dec
mov
hlt
or
inc
inc
pop
mov
getsec
loope
and
clc
mov
loopne
out
std
xor
popa
mov
mov
ja
inc
dec
jle
mov
push
out
lahf
mov
mov
push
lock
ficomp
jmp
stos
gs
jo
es
sbb
jb
fisub
sub
dec
xchg
inc
aas
enter
outs
adc
lds
je
mov
jo
or
inc
or
rdtsc
repz
(bad)
jmp
push
repnz
aaa
push
adc
xchg
xor
rcr
gs
out
xchg
outs
mov
push
nop
inc
mov
xchg
dec
jo
jmp
mov
inc
sub
xchg
js
or
mov
imul
mov
hlt
loopne
mov
push
call
jp
sub
into
lods
aas
int3
inc
xor
call
fwait
mov
sub
gs
jbe
mov
xor
cmp
ret
out
ret
sbb
les
call
or
lds
js
fisttp
test
sbb
hlt
addr16
inc
daa
cwde
sahf
xor
mov
imul
jmp
fstp
outs
shl
pushw
inc
js
jl
jl
dec
jns
lds
mov
xchg
sbb
push
mov
pop
sub
pop
push
cmp
retf
popf
pop
sahf
dec
cmp
mov
mov
das
cdq
shl
je
nop
js
in
loop
lds
popa
dec
inc
push
or
add
xchg
(bad)
stc
leave
push
fdivr
daa
sahf
out
sub
xor
icebp
xor
inc
cmp
movs
ja
dec
mov
sbb
xchg
dec
mov
arpl
dec
fwait
sbb
(bad)
dec
int
int
stos
mov
jmp
cmp
jo
jl
cmp
fst
loop
fdiv
test
and
rol
mov
retf
sub
scas
xor
aam
imul
outs
outs
adc
push
and
pop
fidiv
xlat
rcr
cld
adc
das
xor
jecxz
shl
sub
repnz
hlt
push
repnz
adc
xchg
jae
in
enter
loop
jbe
lods
into
mov
fnstenv
test
push
fcomi
ror
dec
outs
mov
repnz
out
jp
sbb
out
addr16
xor
pop
pop
arpl
xchg
imul
push
repz
cmc
(bad)
or
gs
fs
movs
add
outs
push
rol
out
stc
ret
int3
mov
ficomp
xlat
and
xor
mov
pop
out
outs
scas
lock
dec
lea
jae
test
cmp
rol
add
cmp
call
pop
in
cmp
dec
add
scas
or
cmps
test
inc
mov
test
sbb
or
cli
mov
std
jb
mov
cmps
shr
js
mov
cmp
inc
xor
std
cli
cli
int
adc
xchg
mov
dec
repnz
shr
loope
repnz
xchg
movs
pop
sahf
loopne
add
cld
adc
fdivrp
xchg
add
pop
dec
sub
push
cmp
mov
mov
or
out
leave
dec
xor
test
or
pop
xlat
mov
iret
mov
add
inc
sub
lahf
js
fwait
popf
mov
js
lock
jae
fadd
ins
mov
les
pop
and
or
(bad)
idiv
(bad)
std
cli
jle
xor
xchg
sbb
mov
call
mov
ficom
hlt
sbb
or
ficomp
or
push
lods
mov
repz
dec
xor
mov
int3
add
inc
pop
stc
mov
das
mov
pop
mov
or
int3
cmps
aas
sub
out
bound
pop
sub
xor
ja
add
mov
or
arpl
cmp
sti
mov
into
int
rol
xor
push
lea
daa
cmp
mov
addr16
add
ds
call
dec
loop
pop
stos
lea
add
stc
(bad)
jae
mov
fisubr
mov
pop
test
pop
fstp
cs
mov
hlt
bound
jmp
outs
aas
cmp
xchg
pop
inc
rol
in
push
mov
xchg
sub
xchg
into
ins
mov
cmps
sub
mov
jbe
test
jnp
pushf
mov
pop
mov
and
loope
lods
push
cmp
inc
fwait
jmp
test
mov
push
mov
add
repnz
cmp
inc
dec
mov
sub
mov
mov
movs
or
out
xchg
mov
arpl
cmp
sub
mov
inc
sbb
cmps
jo
es
pmulhuw
jns
in
xchg
and
sub
ins
xchg
mov
and
cdq
shl
push
es
mov
(bad)
shl
dec
imul
push
in
(bad)
jbe
lahf
lods
jo
push
push
nop
in
or
lds
fld
pushf
sbb
adc
ficom
pop
push
lods
jae
jb
adc
cld
lods
shr
xchg
fs
jg
push
mov
test
ret
mov
lods
jns
int3
call
loopne
loop
xchg
inc
out
cmp
cwde
sub
xor
sbb
jae
cmp
jb
les
pop
test
or
test
retf
sub
dec
in
push
cmp
dec
xchg
mov
sar
xchg
das
mov
mov
pop
cmps
xchg
daa
xor
popf
and
dec
lds
xor
sub
mov
mov
and
xor
loopne
icebp
enter
pop
mov
data16
sub
ss
and
fimul
push
addr16
inc
outs
xchg
and
enter
cmp
mov
ja
(bad)
mov
jnp
inc
cmc
sub
lods
retf
pop
rol
push
inc
and
outs
push
jmp
popa
inc
cmp
push
mov
jno
xchg
jge
jmp
mov
pop
outs
pop
push
mov
inc
sub
enter
cmp
test
push
cmp
jnp
xchg
(bad)
arpl
movs
je
mov
pop
adc
jbe
stos
pop
fwait
mov
and
hlt
stos
xchg
adc
les
and
int
xchg
sbb
inc
fsub
outs
movs
ror
data16
cmp
mov
lds
paddq
pop
push
pop
sbb
mov
inc
repz
cld
mov
aas
sbb
xor
(bad)
movs
jecxz
bsr
mov
or
push
int3
cmps
sbb
out
mov
in
fbld
imul
lock
inc
in
inc
xchg
adc
into
cmps
sbb
sbb
sbb
call
or
arpl
iret
scas
cdq
cdq
rcl
enter
push
push
aaa
test
outs
sub
push
mov
push
push
cld
inc
adc
mov
xchg
mov
adc
les
inc
mov
adc
add
jnp
sbb
inc
xor
addr16
or
or
push
xor
jmp
imul
dec
ja
xchg
xchg
and
ror
cwde
mov
cmc
mov
jns
je
int3
jbe
cdq
ins
jecxz
mov
shr
jle
dec
jle
mov
mov
call
fistp
sub
gs
pop
loopne
push
inc
fdivr
mov
outs
pop
scas
idiv
mov
push
adc
cli
jg
mov
fisttp
add
xor
xor
xlat
or
or
ins
repz
outs
in
outs
das
movs
pop
sti
add
xchg
push
push
fucomp
mov
out
xchg
or
xchg
shl
fld
cli
movs
adc
inc
sbb
je
outs
add
ins
cmp
daa
push
cmp
pop
in
call
ret
push
stos
push
cmp
cmp
mov
pop
mov
sub
mov
xor
inc
xchg
(bad)
shl
das
adc
pop
cmp
movs
jnp
xchg
xor
jno
lods
mov
xor
and
jmp
fldenv
cdq
push
sub
push
pop
sub
dec
pusha
leave
lock
lds
enter
loope
mov
movs
cmp
(bad)
pop
pop
or
xor
sahf
mov
leave
rcl
xchg
sub
jae
ins
push
iret
jecxz
add
mov
cmp
mov
(bad)
ins
in
popf
jo
call
(bad)
test
pop
mov
cmp
hlt
pop
sub
loope
mov
mov
mov
inc
(bad)
sub
jo
mov
inc
sub
jno
cli
jnp
pxor
cmps
rol
add
sub
fisttp
ror
clc
mov
popa
sub
mov
dec
sub
push
mov
push
or
lahf
aas
out
or
sub
push
repz
xchg
sub
lahf
repz
jno
xchg
mov
fwait
mov
cdq
pop
mov
sbb
add
mov
test
aaa
jne
stc
pop
add
retf
xchg
aas
gs
pop
add
mov
(bad)
gs
cld
ins
clc
or
xacquire
adc
das
add
sbb
jb
out
not
mov
push
sar
lahf
xchg
shr
fldenv
mov
mov
add
rcr
mov
pop
clc
and
xor
mov
ret
lea
xchg
fidivr
bound
iret
fcom
xchg
test
mov
(bad)
mov
push
mov
clc
push
aam
inc
xor
dec
lock
iret
pop
jp
or
or
ds
pop
ja
cs
cs
xlat
mov
inc
sar
not
xchg
cli
js
mov
mov
rcr
and
xchg
or
and
jmp
je
iret
push
sub
xchg
mov
mov
bswap
inc
loope
cmp
xor
call
push
dec
scas
cmc
push
in
sbb
(bad)
aas
cmps
out
mov
imul
ins
cmp
sbb
mov
shl
mov
mov
pop
sub
cld
sbb
mul
scas
es
mov
xchg
add
test
mov
cdq
fmul
inc
mov
add
int3
or
mov
pushw
and
jmp
jnp
pop
shl
add
(bad)
lahf
movs
(bad)
pop
and
cmp
cmps
aad
and
js
jge
test
sub
enter
cmps
inc
add
scas
sub
(bad)
xchg
push
and
clc
imul
in
push
hlt
and
div
aam
jb
das
leave
or
jne
jl
and
jne
(bad)
(bad)
addr16
mov
jbe
fsub
fdivp
test
sbb
dec
call
sbb
jb
mov
cmps
dec
sti
add
or
sahf
xchg
push
jmp
int3
adc
cwde
les
sbb
or
or
adc
aaa
jecxz
in
xchg
sub
ficomp
clc
adc
out
jae
aad
popf
mov
sbb
cmp
push
(bad)
aad
(bad)
jns
icebp
ss
mov
jb
stos
adc
pop
pop
es
call
scas
test
xchg
jo
push
aaa
clc
pop
outs
and
je
pop
and
outs
adc
js
lock
(bad)
push
fcmove
movs
mov
iret
aam
icebp
push
(bad)
pop
fimul
and
mov
sbb
dec
dec
daa
cmp
fmul
inc
sbb
nop
inc
shl
mov
lock
xchg
mov
rcl
pop
cwde
mov
mov
push
popa
ret
mov
lock
popa
add
mov
jb
adc
hlt
sti
(bad)
into
push
icebp
push
pop
(bad)
or
xchg
xor
jmp
dec
dec
(bad)
call
xchg
nop
repnz
pop
mov
aas
mov
clc
dec
and
fimul
movs
stos
sbb
das
add
mov
or
out
(bad)
cmp
popf
jecxz
jb
jb
cwde
and
out
icebp
mov
ds
adc
rol
aam
hlt
ret
lahf
adc
gs
retf
cs
pop
jns
mov
xor
xor
push
icebp
inc
aaa
inc
or
shr
mov
scas
dec
rcl
push
push
(bad)
and
mov
inc
sbb
daa
sub
scas
push
loope
push
cmps
(bad)
sbb
inc
jmp
sub
rcl
push
(bad)
sub
add
out
sbb
push
cmp
inc
mov
loop
pushf
cmp
sub
lods
in
or
xor
shl
pop
xchg
mov
not
cmc
inc
mov
pop
test
ds
push
repz
test
cmp
dec
mov
inc
pxor
or
cdq
mov
mov
es
mov
mov
dec
ss
jo
aaa
retf
jns
fbstp
inc
test
xor
rol
or
cld
popa
mov
pop
inc
mov
outs
cli
and
push
or
in
retf
out
xor
push
retf
jne
xchg
xchg
jl
mov
pop
jb
mov
test
push
js
sbb
aaa
ins
ins
push
imul
dec
ret
mov
shl
dec
cmc
jbe
out
dec
sbb
(bad)
jmp
daa
sbb
and
aaa
jge
pop
fist
dec
sbb
pop
js
int3
mov
inc
add
fsub
mov
jns
push
pop
pop
cmp
nop
lock
fdivrp
xor
mov
fwait
(bad)
into
jo
ja
stc
aaa
out
add
sub
jp
add
pop
add
mov
repz
lods
and
lds
gs
pop
and
cli
mov
mov
out
jnp
mov
sub
dec
lods
push
or
test
add
lds
test
ret
test
fs
inc
outs
out
lock
jmp
inc
or
out
jge
aad
dec
mov
or
push
test
popa
test
or
dec
xchg
pushf
cmp
jmp
mov
push
aas
xchg
scas
dec
call
mov
jb
repnz
(bad)
inc
(bad)
iret
push
imul
mov
sbb
call
jle
sub
sbb
fsub
ja
lods
xchg
in
mov
stc
into
popa
ficom
nop
jg
mov
rol
sbb
gs
adc
jmp
(bad)
lods
sahf
fcomp
xchg
les
retf
out
loope
adc
hlt
sub
dec
jecxz
pop
les
test
pop
(bad)
aaa
mov
xchg
outs
pop
xchg
inc
lea
idiv
aam
dec
cmp
jp
cmp
ds
xchg
repz
add
fs
(bad)
jmp
xor
mov
pusha
das
xor
or
cmps
mov
mov
ror
pop
fild
pushf
test
stos
repnz
push
aas
out
mov
and
call
in
xchg
rcl
adc
daa
pop
fs
loope
out
cmp
mov
(bad)
xchg
ret
mov
jmp
addr16
scas
mov
sbb
sbb
inc
add
in
xor
add
cmps
test
in
jmp
ss
daa
pop
pusha
hlt
popf
loop
jns
fs
lahf
sub
cld
pop
or
out
and
arpl
cwde
dec
out
dec
in
sti
sub
jno
popa
je
mov
cmp
pop
repnz
jae
pop
jnp
mov
inc
cmc
sbb
push
gs
repnz
pop
jmp
and
jnp
sub
push
mov
shl
lds
xchg
mov
cwde
push
push
cmc
sub
in
sar
or
arpl
pop
pusha
fistp
neg
and
loope
call
inc
sub
adc
cmp
imul
into
out
test
sub
sbb
xor
adc
cmp
add
fistp
clc
sti
or
inc
shl
nop
inc
dec
(bad)
pop
xor
pop
push
jmp
(bad)
js
dec
or
fisttp
dec
dec
aaa
jno
repnz
push
push
ss
sbb
dec
mov
ins
ds
outs
in
xchg
xor
sub
xor
sbb
xchg
mov
imul
lds
xchg
push
and
inc
pop
in
mov
repz
das
pop
xchg
lahf
mov
inc
jb
mov
or
add
pop
or
shr
add
add
das
jae
or
stos
add
inc
push
test
mov
enter
mov
mov
or
into
adc
mov
mov
into
ror
test
mov
icebp
push
fwait
cwde
test
inc
push
enter
aad
mov
mov
aaa
xchg
cdq
jne
pop
inc
fsub
dec
ficomp
mov
inc
push
retf
jle
or
call
add
(bad)
and
repnz
jns
mov
loop
jecxz
or
(bad)
dec
mov
mov
mov
dec
pop
cmps
cmc
xor
call
nop
xor
xchg
and
dec
push
xor
call
jl
adc
mov
add
pop
xor
xchg
pop
xlat
test
mov
loopne
add
in
daa
xchg
cmovp
mov
xlat
and
jnp
xor
xor
pop
bound
shl
mov
(bad)
repz
lock
mov
call
enter
fdivr
adc
xchg
dec
fcomip
mov
aas
sub
xchg
mov
dec
mov
pop
lds
xchg
mov
mov
pop
and
pop
adc
pushf
mov
inc
mov
in
sar
repz
mov
mov
cwde
push
repnz
push
or
test
xor
pop
inc
cwde
mov
les
enter
arpl
stos
stos
sub
push
sbb
loopne
jbe
dec
mov
cmp
fisttp
dec
aaa
jne
jo
sub
sbb
mov
or
push
hlt
aas
cmps
test
and
arpl
xchg
je
out
jle
ficomp
dec
inc
(bad)
lock
push
dec
sub
cwde
jecxz
jae
jecxz
(bad)
xor
mov
stos
cmp
sub
mov
xor
add
leave
int3
fimul
mov
mov
jecxz
push
fisttp
adc
repnz
pop
cmp
add
(bad)
xlat
out
xor
inc
jo
es
mov
lea
push
ret
(bad)
dec
push
sbb
add
push
dec
or
(bad)
stc
aam
mov
push
xchg
loop
push
sbb
push
mov
(bad)
shl
fs
or
push
mov
sub
cmp
push
hlt
pop
cdq
aam
xor
sub
xor
push
bswap
or
outs
add
mov
add
addr16
xor
push
fadd
mov
leave
adc
mov
and
call
mov
dec
jnp
add
and
shl
es
sbb
or
and
mov
push
pop
jbe
sub
loope
mov
mov
push
add
aaa
retf
sahf
test
mov
int3
xchg
jge
in
ret
and
mov
lods
test
clc
and
repz
sbb
push
rcl
xlat
je
push
bound
xchg
lods
test
mov
sub
xlat
in
and
dec
or
and
add
scas
mov
ret
int3
out
pop
pop
mov
push
dec
adc
and
mov
addr16
mov
pop
lods
sub
mov
pop
clc
ficomp
gs
and
sbb
xor
pop
xchg
pop
push
cmp
cdq
cli
sbb
xchg
aam
(bad)
call
lahf
pop
mov
test
nop
in
fs
push
lea
jl
lahf
mov
stc
and
inc
cdq
outs
xor
addr16
(bad)
pop
lea
call
jp
ret
xor
int
push
inc
cli
jmp
les
jge
fmul
dec
push
stos
js
out
sbb
rol
pop
cdq
retf
pop
cmps
mov
jmp
push
mov
call
mov
jmp
inc
imul
cs
sbb
lahf
adc
imul
movs
cmp
or
jns
ja
pushf
jecxz
aas
jb
sub
jae
xchg
inc
rep
cwde
gs
addr16
out
js
jmp
xor
mov
in
jmp
xor
jne
test
ret
cmp
cmp
ja
jne
(bad)
mov
int
add
sbb
push
test
les
xor
pop
cmc
scas
scas
retf
mov
repnz
push
xchg
push
outs
sub
mov
mov
adc
bound
int
lds
retf
out
test
adc
xchg
pop
add
mov
es
dec
cmc
aam
fcomip
push
jo
xchg
sbb
pop
xchg
mov
push
xor
mov
xchg
and
inc
call
sbb
jae
gs
add
cmp
xor
inc
cld
dec
sub
xchg
push
mov
aas
outs
sbb
in
leave
cmp
xchg
jg
jle
add
in
xchg
or
idiv
pop
xchg
cmp
cmp
jl
mov
xchg
mov
add
pop
ja
cmova
push
inc
data16
push
lods
fs
push
sbb
stc
or
loop
xchg
xchg
adc
xor
pop
mov
jecxz
push
jl
cmp
jl
cld
scas
add
ins
int
in
outs
(bad)
into
imul
cmp
dec
icebp
test
add
cmp
dec
xor
fsubr
fldcw
inc
jns
dec
inc
push
xchg
(bad)
pusha
cmp
mov
cmps
movs
dec
in
or
xor
ret
and
jne
aam
pop
mov
mov
xchg
xchg
outs
fiadd
or
lods
inc
inc
scas
(bad)
mov
and
xor
retf
das
jnp
or
adc
ja
call
pop
adc
xchg
rcl
test
push
mov
inc
sbb
inc
iret
test
mov
push
jmp
aam
pop
inc
mov
sub
mov
mov
loop
adc
mov
xchg
jmp
inc
lock
js
sar
sub
adc
dec
xor
or
es
jbe
inc
cmp
scas
sbb
iret
pusha
(bad)
sahf
call
mov
lock
and
stos
sti
and
mov
dec
mov
neg
adc
repnz
sbb
xchg
imul
cmp
test
adc
out
mov
xor
mov
and
sbb
cmps
lock
lahf
jae
cmc
mov
jmp
jge
lods
sub
push
outs
push
mov
sar
cmp
retf
xor
pop
lods
scas
and
xor
aad
mov
sbb
dec
nop
mov
js
pushf
out
sub
lea
pop
lock
imul
dec
in
in
call
pushf
pop
enter
adc
hlt
xor
inc
inc
mov
push
loopne
stc
int3
dec
sbb
cwde
jb
push
leave
pop
cld
shl
mov
xchg
sar
mov
or
inc
popa
out
(bad)
daa
jo
ds
int3
xchg
pop
outs
push
aam
fwait
les
cmps
or
in
and
adc
dec
outs
(bad)
mov
out
repz
call
and
call
ja
push
and
push
push
or
sub
ds
retf
nop
jns
pop
jo
mov
xor
sbb
push
outs
out
sub
inc
ins
push
mov
and
data16
(bad)
dec
jecxz
(bad)
pop
xchg
add
add
movs
cmps
jl
pusha
stc
dec
cld
jns
stos
dec
add
cmp
pushf
bound
je
jl
(bad)
mov
lods
xor
and
sub
or
(bad)
fild
push
pop
nop
or
mov
leave
jp
mov
sar
sbb
or
enter
sti
pop
retw
mov
bound
sub
cmp
sbb
dec
arpl
xchg
movs
pop
(bad)
cwde
lods
mov
pop
clc
sahf
push
jae
sbb
cmp
push
push
push
leave
jmp
sub
ret
mov
int3
inc
jns
sti
clc
xchg
std
nop
inc
jns
inc
push
xor
jbe
ins
push
fadd
sub
cmp
loopne
in
jae
cwde
mov
inc
sahf
push
in
loope
repnz
lea
out
dec
pusha
xor
mov
inc
test
add
xor
adc
fwait
cdq
(bad)
mov
push
mov
scas
fadd
push
inc
and
shr
pop
repz
call
repnz
push
pop
ror
jne
fstp
dec
cmc
and
xor
add
loop
rcr
lods
mov
aam
test
lds
fcomp
sbb
sub
retf
fsubr
in
ja
test
mov
push
sub
sbb
inc
lahf
xchg
mov
lds
arpl
and
mov
clc
pop
dec
neg
retf
dec
in
mov
outs
lods
jl
cli
cmp
mov
into
jo
jnp
adc
xor
aas
push
shl
xchg
pop
cmp
sbb
pop
sbb
adc
lods
ins
call
jge
jnp
std
mov
adc
sbb
movs
icebp
sbb
xchg
jno
mov
ffree
cli
ins
(bad)
sub
sbb
jmp
xor
and
or
or
scas
retf
adc
and
shr
rol
mov
xor
push
jb
mov
test
in
pop
inc
div
adc
adc
cmp
adc
xor
sbb
cmps
lods
ds
mov
add
jmp
mov
lock
pop
shl
jecxz
inc
jecxz
pop
ficom
fisubr
and
arpl
jb
jmp
(bad)
sub
cli
adc
fisubr
jnp
(bad)
jg
cli
inc
retf
nop/reserved
xchg
dec
mov
int
adc
xchg
ret
add
retf
xchg
dec
fxch
into
rol
push
push
(bad)
cmp
xor
ss
xor
and
push
lahf
retf
jne
dec
and
fnsave
test
sub
retf
imul
lahf
dec
dec
int
pop
push
mov
or
nop
in
dec
pusha
in
retf
mov
leave
cmps
lock
mov
pop
mov
sub
call
sub
jge
fwait
hlt
sbb
push
sbb
loope
cmc
cwde
ss
nop
or
xor
test
sbb
jg
fld
pop
cmps
lock
add
ds
mov
push
pop
and
push
xchg
xchg
or
rcr
lea
in
or
adc
sbb
xor
push
inc
pop
imul
dec
sub
aaa
stos
in
adc
mov
or
sbb
das
bound
sbb
shl
cmp
mov
mov
or
ds
(bad)
out
pop
jmp
xor
xor
adc
push
or
sahf
push
mov
jo
mov
int
scas
nop
mov
mov
jl
push
enter
stc
mov
sbb
repz
psubsw
loop
imul
adc
shl
xchg
mov
push
push
je
jmp
hlt
daa
bound
push
adc
pop
pop
imul
add
loop
shr
sbb
xor
(bad)
and
jge
mov
mov
dec
cli
or
xchg
mov
fldcw
movs
sbb
addr16
imul
push
dec
leave
bnd
add
inc
js
push
push
cwde
xor
mov
mov
pop
loop
mov
dec
cmp
adc
aas
add
call
vshufps
cmp
mov
ja
sti
aad
jl
push
mov
xchg
sbb
(bad)
mov
inc
mov
adc
jmp
out
loope
sbb
adc
(bad)
aam
nop
dec
out
retf
adc
dec
retf
sbb
inc
fcmovne
fwait
and
test
loopne
cmp
mov
outs
jbe
mov
xchg
out
imul
pop
xchg
dec
add
add
xchg
arpl
ss
or
imul
cmp
rep
rcl
cmc
in
ins
xor
lock
xchg
xchg
jo
xor
fst
in
shl
pop
pop
jecxz
add
stos
push
push
sub
std
or
rcl
neg
test
and
test
dec
or
rcl
pop
loope
ss
push
mov
push
push
and
lods
pusha
icebp
lods
dec
jmp
not
dec
popa
aaa
icebp
cwde
pop
cmp
cmp
into
fiadd
pusha
dec
hlt
hlt
cdq
movs
add
jg
jl
xchg
jns
mov
out
dec
pop
pop
shl
cmp
xor
ret
(bad)
fucomi
gs
mov
cs
sub
pop
aaa
pop
adc
inc
jge
fidiv
es
mov
or
xchg
and
loopne
sub
iret
mov
icebp
(bad)
inc
xor
not
movs
mov
inc
sti
test
test
ret
sahf
add
stos
popf
call
pop
and
xor
out
pop
cwde
dec
jno
in
sbb
ficomp
jmp
cmc
mov
cmp
dec
jns
xchg
or
dec
aam
lahf
and
dec
mov
shr
call
mov
jb
idiv
pushf
jbe
xor
stos
inc
mov
lds
je
lods
inc
pop
lock
mov
dec
inc
sub
mov
test
int
pushf
inc
(bad)
lock
sub
outs
inc
push
lea
shl
and
mov
scas
cmps
call
cwde
mov
mov
dec
repnz
scas
inc
jecxz
inc
push
stos
dec
adc
sub
scas
xor
nop
repnz
adc
sbb
int3
dec
sbb
fcmovnbe
adc
jmp
repz
ja
xor
dec
std
mov
jg
sahf
fdiv
push
jbe
shr
dec
mov
ret
rcl
aam
in
(bad)
cld
repz
in
cmp
ret
mov
pop
pop
in
mov
stos
xlat
lahf
lahf
(bad)
or
(bad)
nop
adc
in
(bad)
cmp
mov
mov
or
div
jo
lds
sbb
retf
push
icebp
outs
pushf
std
cmps
cmp
dec
shl
sub
pusha
mov
imul
mov
loope
or
cli
pop
stos
lock
fs
ins
ss
sbb
gs
jno
aaa
push
out
mov
adc
out
lds
es
or
retf
bound
fst
sti
popa
jne
dec
pop
push
aas
scas
ja
xchg
ficom
adc
push
add
outs
jl
jle
or
and
mov
fwait
enter
xchg
jle
mov
mov
jecxz
jge
push
jnp
add
shr
es
inc
mov
push
(bad)
jecxz
gs
mov
cli
call
ins
jp
adc
xchg
in
dec
adc
es
jne
popf
sub
jle
add
sub
fcmovu
pop
aam
adc
pop
(bad)
push
add
mov
repz
in
mov
addr16
icebp
fucomi
xchg
or
lods
inc
movs
out
ret
icebp
pop
shr
enter
inc
push
sbb
das
popa
call
add
or
push
mov
js
out
dec
and
scas
test
sub
mov
add
adc
jge
scas
fstp
push
xchg
push
test
add
div
sbb
pop
sbb
ret
loope
dec
out
pop
xchg
cmps
dec
and
popa
dec
sar
int
or
fwait
into
fisub
in
cli
leave
shl
pop
cmp
cmp
adc
shl
sub
loopne
movs
mov
inc
fst
leave
shl
sub
dec
mov
pop
pop
in
mov
pop
sbb
loope
les
mov
xchg
cmp
xchg
ds
xor
mov
mov
mov
push
mov
jl
test
xchg
lds
dec
test
jmp
xlat
jo
and
cli
jle
test
das
jns
jl
mov
shr
ret
jge
lods
push
mov
mov
sbb
push
popa
pushf
int
push
in
ja
cmp
enter
and
inc
lods
jno
xchg
fild
mov
out
ret
ret
cmp
cli
cmp
hlt
dec
cmp
outs
mov
sub
hlt
scas
cli
pop
sub
scas
cmp
cmp
stos
lahf
popf
sbb
xchg
xchg
test
xor
jle
in
imul
mov
arpl
ror
ds
cmp
lock
ret
pop
push
add
icebp
fucomp
clc
jbe
(bad)
mov
rcr
ins
je
pop
dec
add
mov
jg
add
pop
(bad)
pop
fxch
ins
cmp
dec
icebp
stos
jnp
dec
cdq
frstor
and
pop
cs
xchg
call
cwde
xchg
lea
loop
fsubr
fimul
retf
icebp
pop
mov
pop
jns
cmc
or
out
push
test
cmp
cmps
aas
repnz
cli
add
sub
jge
xor
mov
jae
pop
add
or
fsubr
jmp
cmps
mov
(bad)
loopne
sbb
cs
or
lods
pop
sub
(bad)
inc
loop
jo
adc
js
lods
ret
mov
leave
inc
jmp
jle
aad
mov
mov
jp
add
out
jl
inc
mov
inc
call
fcomip
aad
dec
push
mov
dec
cwde
jmp
pop
pop
xlat
jne
add
pop
push
jae
(bad)
cmp
push
jno
push
mov
idiv
je
pop
mov
and
fdiv
dec
inc
pushf
clc
pop
add
out
in
in
retf
pop
sahf
inc
mov
loop
fstp
fiadd
xchg
mov
ficomp
sbb
cmp
call
aad
data16
lods
jmp
adc
add
ror
out
cmp
and
out
cmp
fiadd
or
mov
ret
cs
sbb
aam
stos
stos
mov
test
pop
outs
xor
bound
int
xchg
fs
xchg
scas
clc
mov
stos
lea
ret
rcr
adc
xchg
mov
mov
sub
pop
xchg
gs
imul
out
and
mov
mov
jmp
shr
sub
jae
and
sahf
xabort
push
mov
scas
add
ja
shl
mov
je
pop
shl
pop
sahf
in
cmp
rcr
pop
sub
(bad)
fild
in
xor
jp
mov
sbb
inc
fsubr
sub
push
rcr
vcvtps2dq
push
mov
inc
stos
pop
call
sbb
sbb
mov
fwait
rol
mov
ss
in
and
cmps
packuswb
cmp
push
mov
and
fwait
in
jne
leave
push
push
xchg
call
mul
cmps
bound
in
xchg
add
or
nop
(bad)
daa
cmps
(bad)
lds
mov
jb
lods
push
push
mov
adc
xor
(bad)
dec
(bad)
and
test
adc
call
mov
mov
ds
add
fwait
cli
dec
jp
mov
fbstp
or
push
ffreep
jmp
sbb
icebp
and
lods
retf
fisub
dec
dec
jl
xlat
cmc
mov
mov
add
inc
cs
cwde
(bad)
jp
mov
out
jmp
fwait
pop
mov
add
out
(bad)
pop
std
ins
sbb
dec
xor
mov
lea
stos
stos
nop
les
or
cdq
inc
inc
or
in
sbb
sub
sbb
cmp
adc
cmp
cmps
out
imul
pop
and
xlat
popa
hlt
aas
push
fst
sbb
pusha
cmp
imul
pop
xchg
movs
cwde
cmp
cdq
mov
(bad)
sti
cmp
cdq
movs
jo
out
sti
das
mov
add
lea
adc
xor
xlat
pushf
and
fwait
gs
xchg
cld
sar
jbe
movs
jnp
jae
div
adc
and
test
mov
lock
std
fcom
ja
push
push
stos
inc
fdiv
push
arpl
xor
fs
jne
cs
mov
out
inc
clc
adc
inc
test
jg
or
shl
rol
jne
ins
out
cld
adc
push
dec
imul
ja
dec
and
mov
popf
push
add
and
or
lods
shr
iret
ss
mov
inc
pop
sbb
pop
xchg
ins
neg
int3
pop
jbe
scas
mov
shl
push
push
jb
add
jl
je
out
mov
mov
cmp
push
imul
(bad)
sub
sub
sar
pop
cmps
call
inc
addr16
jmp
outs
fbld
shr
push
dec
xor
fisttp
and
xchg
bound
imul
xor
aas
adc
imul
cmps
jle
pop
sub
jp
adc
cmp
(bad)
mov
or
jno
call
aas
mov
icebp
jge
mov
addr16
(bad)
aad
mov
loop
out
inc
aad
jecxz
retf
movs
add
cmps
shr
xchg
cs
cmc
mov
test
imul
cld
ret
pop
popa
mov
dec
xchg
mov
arpl
mov
(bad)
mov
mov
inc
repnz
jl
stos
aad
cmp
popa
retf
jmp
das
aam
mov
nop
das
mov
or
les
stos
mov
test
fidiv
jne
ret
and
lahf
push
cdq
out
cmp
movs
out
add
pushf
scas
retf
aaa
stos
mov
dec
not
out
in
pop
xor
jns
jl
cwde
ret
mov
aaa
scas
cwde
gs
add
xchg
call
sbb
jmp
and
dec
imul
cdq
mov
xor
dec
push
arpl
ins
daa
mov
adc
inc
shl
sub
imul
add
or
idiv
cmc
pop
adc
lds
(bad)
mov
mov
dec
mov
cmps
inc
adc
(bad)
jg
add
or
inc
pop
sbb
fst
dec
mov
lahf
sbb
or
in
cld
add
adc
pop
mov
gs
sub
stc
push
inc
movs
xor
dec
and
fldenv
jnp
push
pop
(bad)
hlt
repnz
rcl
adc
es
div
add
hlt
and
ret
mov
jo
push
adc
out
mov
sub
push
enter
mov
push
push
or
(bad)
aas
dec
rcr
adc
add
call
cmps
mov
inc
sub
(bad)
test
loopne
and
sub
loope
out
cmp
mov
push
repnz
es
mov
mov
jo
cwde
pop
inc
ror
xchg
jp
loopne
pop
mov
or
test
sar
sub
and
add
cmp
cmp
jne
inc
mov
imul
add
pop
movs
lahf
pop
(bad)
xor
mov
dec
das
jmp
sbb
fidiv
adc
cmps
outs
mov
iret
loop
jg
xlat
mov
xchg
int3
sub
popa
mov
sti
mov
jmp
jae
pop
bound
jmp
adc
jo
sahf
fcmovbe
mov
sub
xor
add
xchg
test
aaa
cmp
jl
jge
outs
jmp
xchg
jmp
dec
mov
add
jle
test
mov
pop
xchg
(bad)
mov
sbb
arpl
aas
ins
xor
lods
pop
outs
cmc
into
xchg
mov
jmp
add
jl
push
jns
adc
or
call
imul
pop
fs
mov
(bad)
ja
dec
inc
test
and
sbb
xchg
pop
mov
fucomp
mov
sub
test
mov
xlat
enter
ret
pop
push
push
ror
or
sahf
pop
jns
out
add
sbb
sar
das
push
mov
loop
push
retf
popa
mov
jnp
lods
push
xor
adc
jle
mov
cmc
js
cmps
mov
add
(bad)
je
push
scas
and
mov
cmp
mov
out
push
imul
xor
sbb
lods
mov
push
bound
push
cdq
mov
cmp
adc
adc
push
cmps
and
dec
sbb
cmps
dec
or
fbstp
inc
stos
inc
adc
test
repz
jle
into
cdq
into
xchg
sub
inc
push
(bad)
push
pop
push
inc
or
out
mov
dec
dec
aam
and
sub
fdivr
stc
test
(bad)
clc
jl
iret
sbb
and
sbb
movs
push
arpl
jns
je
xchg
sub
and
adc
and
int3
jmp
movs
jno
dec
fdivrp
retf
inc
pop
pushf
aad
cmp
jno
cmp
sub
sbb
add
call
loop
adc
(bad)
mov
icebp
adc
xchg
std
pop
sbb
out
(bad)
loop
sti
loope
cwde
mov
xchg
push
pop
pop
add
pop
out
stos
jne
fsub
dec
popa
dec
test
loope
int
sbb
gs
daa
and
call
xchg
xchg
and
imul
popf
dec
icebp
into
push
xor
pop
mov
into
cmp
popa
add
in
mov
sbb
ret
jmp
lods
(bad)
test
inc
test
(bad)
js
sub
scas
(bad)
and
cmp
and
jne
push
fisttp
mov
ficom
out
outs
js
fsubr
pop
pop
neg
lds
clc
xor
dec
push
sahf
and
sbb
mov
push
mov
jmp
pop
imul
ss
idiv
jb
mov
jb
cdq
jecxz
sbb
iret
stos
and
lea
dec
inc
(bad)
jecxz
test
(bad)
jl
pushf
jge
fild
stos
and
in
stos
stos
inc
mov
call
jle
(bad)
push
scas
into
sbb
test
pop
mov
movs
fs
gs
add
(bad)
in
push
push
lock
inc
out
bound
(bad)
les
mov
bound
push
rcr
stos
cmp
sub
fdivr
scas
push
sub
in
sub
xchg
dec
scas
lods
mov
loopne
shl
lods
jp
rol
pop
cwde
daa
cmps
enter
xor
test
xchg
das
adc
int3
add
cmp
mov
push
sbb
dec
xor
lods
not
ins
sbb
mov
lea
inc
xchg
mov
xchg
movs
adc
push
sbb
pop
cmc
call
cmp
xor
imul
jmp
arpl
clc
setb
xor
int3
nop
mov
mov
(bad)
pop
mov
outs
pop
pop
and
cmps
sbb
xor
sbb
aad
push
pop
test
sar
mov
shr
(bad)
js
push
ins
lds
mov
leave
scas
fdiv
xchg
push
(bad)
hlt
jle
xor
loope
sub
xchg
nop
xlat
sbb
jmp
imul
or
popa
xchg
aam
call
xchg
gs
jl
(bad)
jl
and
popa
xchg
cld
lahf
mov
(bad)
lods
pop
es
rol
outs
test
retf
pushf
and
dec
nop
mov
(bad)
adc
cmps
mov
mov
leave
and
add
cmps
bound
push
imul
fstp
mov
out
jle
sbb
push
jnp
imul
adc
(bad)
retf
sti
je
scas
pushf
cmp
mov
(bad)
(bad)
cli
inc
loope
rcl
out
cdq
popa
mov
movs
movs
ret
std
pop
test
pusha
mov
test
aas
add
sub
adc
and
add
fstp
mov
ds
sbb
adc
push
push
lods
push
call
and
pop
adc
ret
test
shr
retf
movs
xor
push
push
sub
jne
push
int3
mov
or
jp
mov
and
mov
rcr
and
push
mov
je
retf
(bad)
inc
mov
mov
lods
mov
jo
in
retf
lahf
in
shl
cmp
cmps
(bad)
mov
add
mov
push
inc
adc
cwde
xor
ins
rol
push
(bad)
in
or
cmp
outs
mov
lods
test
sub
mov
in
pop
mov
ret
xchg
jg
sar
jbe
in
cmps
pop
fiadd
sub
jge
push
cmp
jae
test
fisubr
mov
sti
cdq
push
(bad)
pop
jmp
cmp
add
mov
mov
enter
sub
js
ins
xor
cmp
cmp
clc
call
cmp
cmc
iret
iret
int
push
out
push
or
pop
jmp
dec
in
dec
sub
addr16
and
xor
cmp
xchg
pop
jmp
cdq
loopne
lods
xchg
test
jb
aad
lds
xchg
inc
cs
xor
repnz
ss
ret
xor
movs
inc
jmp
fdivr
je
xor
adc
cdq
push
pop
jns
cmps
push
ss
mov
pop
lock
mov
mov
lock
ds
sub
jge
cmp
mov
gs
aaa
mov
lods
movs
stos
aaa
in
imul
sbb
rcl
mov
pop
fld
dec
pop
pop
xchg
cmp
icebp
inc
adc
clc
aam
jb
push
lahf
ds
push
inc
call
push
loope
and
int3
sub
call
sub
mov
or
sahf
repnz
inc
clc
js
shr
pusha
mov
push
es
xor
or
fs
movs
sti
call
add
push
dec
in
and
jl
cmp
or
push
dec
or
jmp
jmp
or
or
pop
sub
ds
xchg
out
pop
dec
adc
xchg
and
push
xchg
(bad)
(bad)
imul
out
xor
ds
or
scas
bnd
jnp
fsubr
xchg
(bad)
test
sbb
adc
sbb
dec
adc
(bad)
fidiv
scas
cmps
add
cwde
repnz
int
cwde
xlat
jns
cmp
cwde
(bad)
cmp
push
les
jmp
mov
fild
xchg
scas
push
shl
out
in
pop
call
repnz
scas
popa
jle
icebp
jne
popf
xchg
lahf
(bad)
jecxz
push
movs
stos
dec
fs
retf
push
xor
shl
push
in
mov
inc
and
push
push
lods
cmp
cmp
neg
lods
cmp
imul
fwait
cli
cmps
jnp
or
nop
outs
push
mov
out
adc
pop
ror
cmp
inc
jmp
rcl
push
call
loop
or
shl
cmps
in
outs
sbb
mov
(bad)
std
mov
aad
sbb
mov
xchg
fstp
iret
push
push
fs
inc
es
cmp
sub
xor
mov
imul
mov
jae
xor
mov
lock
lds
pop
and
xor
jae
(bad)
push
adc
xor
push
out
and
fild
fld
xchg
ret
jno
add
mov
or
lea
rcr
inc
and
or
ins
pop
cmps
cli
xor
and
(bad)
movs
push
mov
jne
les
sahf
in
mov
pop
adc
sbb
jae
jo
pop
gs
jmp
(bad)
mov
mov
(bad)
leave
fs
stc
shl
sahf
push
ja
fwait
mov
xlat
add
mov
sub
fist
pop
gs
test
mov
fadd
push
and
push
mov
jo
daa
pop
fiadd
jne
xchg
test
jae
lods
fstp
call
test
and
nop
cld
not
mov
(bad)
mov
int3
shl
jge
xchg
jle
and
mov
daa
les
push
sbb
lods
push
imul
mov
retf
mov
into
lods
cwde
add
fdivr
mov
popf
mov
and
cmp
retf
or
mov
fisub
and
or
pop
mov
sbb
jb
push
bound
push
mov
(bad)
rcl
ror
loop
pop
xchg
push
mov
sti
nop
adc
movs
cs
fimul
arpl
hlt
adc
dec
loope
or
cmp
les
or
mov
jno
(bad)
repz
(bad)
(bad)
mov
lahf
ja
in
push
fiadd
jnp
std
cmc
add
fld
fisubr
lds
sbb
jb
js
push
aad
cmc
dec
out
jle
jmp
imul
mov
ret
sub
pop
int3
ret
push
aas
or
ins
jns
imul
movs
into
xlat
mov
cwde
sahf
sub
not
cli
mov
mov
mov
mov
sbb
in
ins
cli
mov
xor
xchg
inc
mov
and
jl
mov
push
jle
pop
jl
mov
or
push
mov
in
push
scas
stos
push
jp
mov
xor
xor
push
dec
repz
push
stc
xor
pop
mov
pop
setne
mov
iret
frstor
mov
ror
add
bound
out
out
cmps
xchg
dec
out
add
out
dec
pop
jmp
and
shl
inc
scas
mov
hlt
xchg
inc
mov
repnz
(bad)
add
jp
out
add
cmp
add
inc
or
jle
xlat
stc
or
fnsave
cmp
or
mov
sbb
shl
and
xchg
sbb
xchg
jns
test
cld
push
mov
movhlps
cld
jae
dec
stc
pop
push
jecxz
(bad)
inc
inc
pop
inc
fmul
jmp
nop
add
fcomp
pusha
xlat
ins
jmp
cmp
in
jns
fmul
nop
movs
sahf
xor
lahf
jnp
lods
imul
xor
inc
icebp
cmp
cmp
ja
rol
and
lods
fstp
add
sub
dec
pop
scas
inc
stc
aas
mov
ret
push
cmc
scas
int
and
aaa
imul
ins
lods
dec
push
rcr
pop
ins
sbb
adc
pop
inc
pushf
jb
xchg
loopne
xchg
cmps
jns
add
push
cmp
mul
push
or
add
jge
movs
jb
xchg
xor
sub
cmp
mov
cli
inc
sbb
mov
jge
xchg
mov
lea
in
jno
out
push
add
dec
or
lahf
loopne
popf
std
fnop
icebp
test
rcr
stos
sub
hlt
cmc
data16
adc
jns
xor
sbb
push
xor
cmp
jge
mov
cmp
xchg
fcomi
stos
cwde
iret
outs
ret
or
cli
(bad)
(bad)
jbe
mov
fidivr
in
mov
inc
push
xor
xlat
add
ss
and
(bad)
shr
push
mov
mov
inc
aam
mov
movs
jge
jmp
jmp
xchg
scas
mov
ins
jns
test
cmp
loope
(bad)
int
test
sub
mov
(bad)
aam
test
xchg
add
xlat
gs
push
xchg
jl
fidivr
xchg
xor
retf
mov
dec
cmp
xchg
add
out
call
jno
std
fld
xchg
push
jnp
out
imul
push
imul
mov
mov
mov
or
xor
cmp
mov
(bad)
stc
mulps
pop
xor
dec
out
cmp
and
ror
sbb
pop
adc
test
sbb
call
outs
test
jno
xor
adc
test
outs
not
add
xchg
sub
pop
inc
ror
sar
js
sbb
ja
iret
jecxz
out
cdq
iret
in
sub
cdq
or
mov
sbb
adc
push
xor
ins
push
mov
dec
sbb
jnp
xor
cs
and
jmp
inc
out
or
mov
clc
sar
(bad)
adc
inc
fnstcw
jg
mov
retf
inc
mov
mov
popf
sub
hlt
xlat
push
cli
or
push
push
mov
movs
and
mov
xor
scas
jbe
ss
cmp
(bad)
add
pop
xchg
push
push
inc
and
(bad)
retf
outs
mov
xchg
ds
lods
pusha
(bad)
cmp
xlat
jbe
js
sub
sub
pop
inc
in
pop
mov
mov
repz
mov
frstor
repnz
popa
pop
fwait
sar
bound
call
jns
pop
or
lock
sbb
scas
ja
fidivr
push
pop
or
lock
jno
adc
cmps
in
or
lods
jns
xor
or
scas
sti
movs
int3
ja
add
xor
or
dec
and
arpl
add
adc
push
sub
jbe
ror
in
inc
adc
inc
push
xor
jmp
fst
pop
loopne
xchg
movs
(bad)
mov
fst
cmp
xor
dec
mov
or
mov
aaa
stos
jmp
sub
adc
ror
dec
leave
sbb
mov
(bad)
mov
push
jmp
xor
fs
pop
cmp
ja
cdq
outs
cwde
daa
mov
lods
lods
jmp
pop
cli
shl
jno
fcmovnb
lea
cmp
or
fwait
imul
pop
sub
cli
mov
ins
ins
stos
stc
mov
inc
imul
dec
sbb
repz
pop
xor
mov
adc
cmc
push
test
mov
not
in
mov
inc
bound
bound
jp
cmp
adc
pop
dec
into
lea
pushf
pushf
cmps
sahf
pop
daa
jnp
mov
fist
inc
sbb
cwde
test
mov
aas
pop
iret
fdivp
scas
pop
or
or
add
jbe
dec
stos
(bad)
mov
in
fnstsw
push
adc
or
xor
dec
sub
ins
outs
adc
or
(bad)
out
xchg
loop
loope
(bad)
rdpmc
and
mov
shl
pop
and
cmp
xor
add
pop
jbe
push
cmps
jg
jg
sbb
stos
outs
sub
ds
fld
enter
imul
sbb
jmp
jbe
pop
dec
dec
cwde
gs
and
test
sbb
stos
fs
jo
dec
inc
dec
xor
push
mov
aaa
stos
(bad)
addr16
lahf
leave
test
or
mov
adc
inc
mov
ins
ret
fisttp
arpl
mov
sbb
sahf
leave
xor
fwait
push
or
mov
int3
sub
jns
xor
sub
outs
sbb
xor
dec
std
nop
popa
popf
sti
add
xchg
sub
mov
imul
loopne
aad
int3
cdq
jge
aam
in
jecxz
xor
push
outs
xor
lods
das
mov
nop
call
pop
aaa
adc
lahf
hlt
inc
sbb
fs
loope
xor
outs
pop
retf
inc
xchg
adc
or
add
dec
imul
sub
sub
loop
sub
fstp
mov
pushf
sub
dec
or
and
inc
sub
mov
dec
add
mov
xchg
(bad)
sbb
leave
ja
pop
test
inc
lahf
dec
test
ss
jge
xor
inc
in
into
arpl
pop
xor
mov
lods
outs
ficom
ret
pop
dec
cld
out
sub
shl
retf
stos
push
(bad)
test
aad
jl
inc
mov
stos
rcr
pop
ret
xor
ins
adc
lods
in
imul
lock
mov
retf
mov
push
mov
fst
iret
repnz
inc
dec
dec
lods
call
je
xchg
pop
xor
push
test
das
dec
mov
cmp
xor
test
scas
sub
or
cmp
push
shr
mov
xor
cmps
mov
std
pop
outs
jns
(bad)
pushf
scas
xchg
push
dec
mov
popf
adc
retf
test
xor
std
mov
fistp
cmc
pop
push
inc
mov
sub
jmp
dec
mov
cmp
lock
nop
xor
neg
or
xchg
out
movs
gs
rcr
dec
cmp
bound
daa
(bad)
outs
enter
repnz
pop
enter
repz
pushf
out
sub
xchg
push
cld
and
in
dec
dec
and
retf
hlt
adc
xor
jb
push
push
es
xor
xchg
and
sub
inc
pop
sbb
fsub
sub
leave
ret
fpatan
dec
repnz
adc
popf
xor
leave
adc
mov
in
pop
and
sub
push
push
push
ins
or
pop
stos
mov
sub
sahf
push
mov
mov
(bad)
mov
(bad)
out
in
cmp
movs
jge
push
stos
cmp
ja
push
neg
fisubr
lods
mov
jno
bound
(bad)
loop
push
mov
test
mov
dec
test
inc
(bad)
add
cmp
arpl
mov
retf
call
pop
pop
int
adc
arpl
loop
shl
addr16
addr16
inc
int3
or
out
mov
adc
stc
pop
in
je
jae
push
in
sub
mov
aaa
pusha
mov
or
lds
add
mov
inc
retf
pop
icebp
fcomp
enter
(bad)
sbb
cmp
jo
xor
inc
jnp
jo
lahf
leave
push
(bad)
fist
mov
ins
dec
add
cmps
mov
jno
mul
sar
dec
cmps
fild
or
push
aad
cmp
test
mov
xor
mov
cwde
(bad)
mov
(bad)
in
fs
lahf
mov
xchg
and
and
push
shl
test
pop
mov
push
mov
fnstsw
jp
dec
adc
pop
into
push
push
inc
inc
jb
leave
cmp
push
pop
mov
cwde
ret
out
jecxz
in
pop
dec
mov
inc
lods
(bad)
loop
jecxz
aam
mov
xchg
clc
or
jmp
pop
xchg
sub
daa
push
ins
push
xchg
cmp
mov
ret
iret
or
jge
mov
ret
mov
cmp
inc
loopne
iret
mov
sahf
adc
adc
xchg
push
and
push
retf
stos
imul
retf
xor
cmp
mov
add
lods
(bad)
sbb
aas
rcl
outs
push
sbb
in
fistp
jno
xlat
or
in
in
sahf
xor
aam
test
sahf
pusha
shr
repz
ins
and
sub
mov
adc
les
push
dec
cmp
pop
cmp
retf
jnp
mov
pop
or
jp
push
cmp
push
es
jno
into
rcr
cmc
jns
enter
aas
daa
inc
add
sti
pushf
jge
int3
xor
stos
aad
fsave
std
mov
and
jmp
sahf
mov
mov
jbe
jno
ins
dec
pusha
xchg
sbb
add
xor
or
xchg
mov
ds
pop
ins
ins
call
push
jne
inc
dec
lods
retf
mov
scas
mov
sub
jle
adc
xor
pop
movs
cmp
mov
(bad)
push
clc
and
cmp
mov
mov
jmp
push
adc
push
jae
mov
jl
mov
xchg
pop
xor
mov
shr
pushf
sbb
out
jae
sti
lods
adc
mov
repnz
cmp
in
xor
jb
imul
icebp
jmp
ret
cli
lods
or
adc
xor
sub
push
(bad)
push
rcl
add
xor
int3
hlt
and
fs
loope
dec
cmp
fcomip
dec
adc
pop
daa
cli
push
lock
sbb
es
xor
sub
std
sbb
sub
jae
stos
pop
cmp
xor
mov
(bad)
xchg
push
idiv
adc
imul
in
mov
cmp
add
jae
bnd
retf
js
out
iret
loope
push
mov
stos
mov
lock
in
push
cmp
ins
jp
imul
pop
xlat
(bad)
pop
or
lods
add
mov
xchg
fwait
mov
mov
xchg
push
sbb
cmp
adc
push
mov
mov
mov
sbb
add
jae
cli
pop
shl
xchg
sar
addr16
hlt
div
dec
mov
lea
arpl
dec
cdq
and
popf
and
(bad)
lock
mov
pop
cmp
sub
push
mov
out
sti
fnstcw
in
rcl
stc
arpl
(bad)
(bad)
test
(bad)
fidiv
jb
fwait
mov
nop
lock
pushf
dec
dec
lahf
es
aam
sub
mov
jae
leave
pusha
bound
xchg
inc
xor
(bad)
cmps
or
mov
dec
mov
add
dec
pop
(bad)
icebp
and
xchg
shl
or
cmp
test
ret
cmp
bound
stos
cli
pop
add
hlt
outs
and
enter
fcom
pop
adc
mov
cmp
sbb
pop
or
adc
or
dec
nop
pop
sub
xchg
stc
add
fdivp
pushf
pop
and
xor
out
mov
push
test
mov
pop
xor
push
adc
pop
shl
push
jecxz
mov
hlt
push
je
mov
pop
in
pop
cwde
aam
xchg
cmp
jb
(bad)
cmc
ins
jg
cmp
inc
je
xor
mov
cmp
(bad)
xchg
gs
xchg
into
addr16
retf
pop
mov
aam
test
sub
push
shl
cmp
inc
inc
je
jne
pop
mov
(bad)
sbb
mov
hlt
adc
outs
ret
test
(bad)
fsub
sbb
mov
push
add
popa
pop
test
(bad)
adc
sahf
shr
arpl
cli
jg
sbb
shl
inc
mov
dec
ror
test
mov
pop
lods
sahf
push
imul
xchg
cli
add
popa
imul
fs
sub
loop
repz
ficom
cld
or
and
loope
fsubr
sbb
jecxz
push
sbb
pop
cdq
or
ins
push
jb
adc
push
(bad)
cmp
xchg
enter
pop
xchg
rcl
cmp
(bad)
inc
arpl
sub
mov
cmc
hlt
cmp
movs
mov
mov
popf
imul
aam
mov
sahf
xchg
into
or
inc
aad
xor
cmp
push
daa
in
mov
fld
add
outs
nop
loopne
add
xchg
mov
mov
ret
mov
jo
test
adc
int3
pop
push
mov
pop
fwait
call
shr
loope
aaa
sub
outs
sbb
stc
push
jns
inc
sar
xor
lods
rcl
es
ss
jo
fnstenv
iret
jns
push
std
or
iret
addr16
xor
arpl
out
cwde
or
rcl
or
mov
cmp
jb
xchg
cmps
add
fsub
pop
in
push
sub
xchg
call
mov
popf
adc
mov
mov
cmp
out
add
not
test
pop
(bad)
push
cwde
aam
pop
mov
loopne
sub
jecxz
jo
ja
mov
cmps
in
dec
mov
inc
or
sbb
cdq
jno
out
rol
xor
jp
cs
out
cmps
sbb
test
cmp
mov
sahf
lea
mov
icebp
adc
std
out
addr16
jo
sub
cmc
lea
pop
push
lods
(bad)
in
(bad)
pop
fwait
push
xor
sub
nop
xor
sbb
mov
and
dec
cmp
clc
xlat
je
loopne
sub
jne
cld
and
cmp
pop
int
pop
mov
sar
pop
movs
cmp
mov
outs
dec
clc
adc
call
xor
femms
mov
and
call
(bad)
xor
and
sub
scas
adc
jge
ret
mov
in
pushf
iret
xchg
(bad)
fnsave
lds
fidivr
mov
pop
or
and
push
pop
iret
mov
mov
adc
xor
ins
mov
dec
mov
jle
or
ins
or
mov
shl
popa
sbb
and
jnp
pop
loop
scas
in
hlt
lods
jmp
sub
adc
push
cmps
sbb
shr
scas
xchg
aaa
jne
int3
leave
(bad)
fmul
xchg
or
xor
fstp
and
and
daa
sub
pusha
push
add
lock
mov
gs
dec
in
(bad)
ss
jne
mov
or
daa
jne
sub
sbb
or
std
shl
es
sbb
retf
sub
fld
sub
popa
jbe
sub
or
idiv
mov
jmp
leave
jbe
mov
jnp
cs
outs
xchg
(bad)
sbb
mov
imul
out
outs
popa
dec
(bad)
stos
leave
test
mov
xor
mov
hlt
call
sub
pushf
fcmovu
stos
ja
sub
mov
pop
sub
sub
dec
xor
push
sbb
pop
add
or
mov
ins
fadd
pusha
jmp
inc
stos
out
add
jnp
sbb
inc
sub
inc
mov
out
dec
jb
xor
jne
jno
pushf
xchg
push
or
das
mov
daa
std
(bad)
push
xchg
std
ds
mov
sub
jnp
lods
jl
adc
jge
cmp
test
inc
hlt
xchg
hlt
(bad)
push
or
add
daa
fnstcw
outs
push
jmp
das
and
or
std
pop
stos
nop
fiadd
push
clc
fiadd
sar
add
js
jns
push
jae
mov
ret
dec
and
dec
shl
lock
mov
mov
cmp
out
jp
pushf
stos
out
mov
pop
outs
mov
cmp
and
xchg
loop
add
push
js
add
(bad)
xor
adc
xor
mov
sbb
call
(bad)
in
repnz
dec
mov
cwde
test
daa
dec
fistp
in
std
sub
or
enter
push
xchg
push
push
cmp
ror
stc
jo
xlat
clc
sub
sub
add
pusha
sbb
lods
out
push
jb
pushf
mov
mov
pop
sti
sbb
jno
sbb
aas
pop
iret
or
rcl
add
pop
cmp
sar
pop
ins
leave
retf
mov
or
add
xchg
push
pop
jmp
add
jne
(bad)
jecxz
jg
mov
mov
stos
jl
pop
mov
scas
or
scas
jl
inc
mov
lock
dec
xchg
and
cmp
inc
push
mov
xchg
push
jmp
inc
mov
jmp
sub
test
fiadd
lea
lds
mov
sub
jns
mov
je
mov
repnz
sub
pop
hlt
sub
add
test
addr16
loope
mov
adc
push
(bad)
cmp
ins
push
int3
inc
shl
push
ret
lea
xor
outs
daa
nop
imul
sub
leave
in
push
mov
and
push
inc
fdivr
lea
xchg
mov
shl
outs
mov
mov
icebp
cmp
pop
or
jmp
cmp
push
xchg
in
cli
cwde
or
loope
and
arpl
into
and
and
test
cmp
xchg
outs
lahf
out
ds
fucomi
xchg
in
enter
sbb
push
mov
fiadd
stos
jecxz
adc
pop
push
out
retf
cmps
cmp
jnp
lea
fdiv
movs
(bad)
(bad)
cmp
lock
inc
scas
sbb
xchg
fwait
hlt
jecxz
test
inc
xchg
sub
(bad)
ja
fs
mov
pop
inc
xor
out
movs
sub
rcl
mov
push
mov
mov
lock
mov
cmc
aaa
es
mov
push
jb
jbe
ds
test
sbb
xor
sbb
test
stos
inc
or
aaa
ins
pop
das
loopne
call
ret
(bad)
and
mov
es
pop
adc
sbb
lock
std
dec
pop
mov
xchg
pop
or
rcl
bound
std
mov
cmp
jecxz
adc
push
inc
pop
mov
ds
push
outs
xor
movs
xchg
repnz
mov
xchg
xor
push
adc
js
mov
and
pop
lea
sar
pop
jg
mov
jae
imul
mov
(bad)
jl
inc
cmp
sahf
jae
lods
or
mov
call
mov
xchg
loop
jle
popa
pop
sub
dec
call
idiv
scas
fadd
(bad)
pop
lock
sub
jp
test
xor
int
or
retf
gs
je
mov
test
je
adc
mov
push
xor
scas
dec
leave
stos
adc
sbb
data16
mov
int3
movs
mov
adc
inc
cld
repnz
mov
xchg
sub
ror
mov
in
aad
popa
add
sahf
lea
imul
cmp
mov
stc
repz
cwde
sub
mov
js
arpl
mov
mov
fldcw
cmps
outs
shl
les
and
push
ins
dec
push
jg
push
scas
leave
mov
pop
cs
fs
scas
and
in
cmp
sahf
stos
daa
adc
(bad)
sub
push
pop
ret
cmp
test
dec
and
inc
add
adc
mov
arpl
cmp
sub
popaw
xchg
pop
fmul
fcmovne
pop
outs
sbb
out
mov
ins
pop
int3
cmp
std
xlat
fldenv
jmp
mov
mov
loopne
inc
inc
push
xor
and
repnz
push
push
fdiv
sbb
jecxz
and
inc
in
dec
not
lock
repz
jp
movs
popf
enter
leave
pop
pop
imul
sub
pop
das
jne
int3
fsubr
mov
ins
test
adc
adc
cwde
ss
arpl
loop
xchg
push
out
adc
(bad)
in
add
(bad)
jmp
pop
pop
call
inc
and
jno
lods
mov
call
cmp
xchg
xor
aad
pushf
add
test
adc
repnz
pop
xor
sub
sbb
mov
cmp
test
add
sbb
leave
sub
dec
ins
cmp
int3
sbb
mov
inc
sbb
add
jmp
jns
sub
movs
lods
cmp
xchg
inc
cmp
or
test
xchg
mov
aas
inc
mov
ror
popa
out
ins
scas
dec
jl
xchg
out
fld
int
pop
sbb
pop
pop
push
aam
test
pop
pop
dec
jb
dec
aaa
mov
mov
out
and
mov
fidiv
inc
pop
fistp
and
add
addr16
test
xor
ret
lods
nop
jp
inc
lock
dec
cwde
sbb
dec
stc
inc
jmp
das
rcl
(bad)
xor
or
push
enter
stos
stc
scas
(bad)
push
and
arpl
loope
push
ret
push
hlt
outs
mov
xchg
xor
imul
push
rcl
mov
fsub
jne
adc
les
mov
js
jmp
mov
or
pop
sti
out
pop
mov
das
push
es
lea
xchg
loopne
dec
cmps
inc
movs
mov
dec
mov
into
retf
mov
cmp
sbb
sub
fdiv
xchg
shr
or
loope
xchg
sti
xrelease
sbb
movs
cmp
xchg
adc
mov
(bad)
(bad)
xlat
xchg
sub
push
dec
gs
mov
jmp
test
sbb
lods
js
das
push
aam
mov
sub
sti
mov
xchg
xchg
ds
out
dec
cs
enter
movs
cmp
jae
retf
into
fnstenv
dec
sub
std
in
push
dec
in
call
and
push
push
stc
pop
movs
xor
push
xor
push
sub
outs
and
inc
cmps
inc
sahf
sti
ror
xchg
dec
int
jecxz
jg
xor
iret
mov
loop
and
mov
leave
cdq
cdq
or
stc
out
mov
(bad)
lock
or
or
dec
std
cmp
mov
out
mov
jmp
jbe
cdq
push
mov
or
push
int
pop
inc
fnsave
cmp
and
sbb
and
lods
mov
push
push
add
shr
sbb
mov
mov
jmp
outs
push
test
mov
mov
jmp
sub
sbb
out
inc
inc
pop
fmulp
popf
cdq
push
ds
jns
ja
je
jb
mov
loopne
xchg
movs
fild
out
mov
dec
dec
sbb
sub
xor
sub
into
mov
enter
aam
cmps
popf
jne
mov
shl
pushf
loopne
and
dec
sbb
mov
(bad)
mov
mov
sti
and
test
cmp
in
ins
lods
popa
jecxz
sbb
frstor
dec
xchg
popa
cmc
sahf
fiadd
movd
or
js
push
push
sbb
daa
dec
mov
sbb
jns
dec
pop
push
int
and
jae
sub
mov
mov
imul
scas
dec
fsubp
add
sub
mov
push
enter
ins
aam
push
adc
mov
mov
sti
pop
faddp
inc
fld
dec
and
xor
inc
arpl
cdq
inc
mov
rcr
jl
inc
xor
rcr
or
outs
wbinvd
push
inc
repz
icebp
cmps
add
movs
jp
jb
lods
inc
shl
mov
test
imul
dec
retf
mov
wbinvd
xor
int
popa
std
mov
bound
pop
adc
adc
jo
aas
lea
mov
jo
sbb
movs
outs
ins
aad
dec
std
push
stos
cmp
loope
pop
sub
mov
xor
repz
and
call
sbb
test
test
cmc
xchg
rcl
scas
fisub
cmp
cmp
mov
dec
and
fcmovbe
mov
ins
sub
adc
je
sub
xchg
mov
loopne
jg
ins
sub
cmp
xchg
das
sbb
out
test
mov
and
and
in
cmps
shr
mov
pop
ss
stos
lods
or
jno
xlat
int3
mov
xor
retf
sub
jmp
dec
push
inc
and
xor
aam
and
xchg
dec
data16
pusha
popa
inc
xor
and
(bad)
xchg
sub
pop
in
outs
jne
rcr
or
fidiv
fsubrp
cli
scas
adc
rol
xchg
scas
fwait
cld
sbb
xor
icebp
imul
sti
(bad)
ficom
loop
xor
data16
(bad)
push
xchg
jmp
fwait
in
stos
jecxz
xchg
dec
add
daa
sub
out
sub
das
mov
or
add
dec
arpl
cmps
adc
inc
loope
pushf
(bad)
not
cli
out
fld
int
and
ret
adc
pop
bts
fiadd
out
into
lock
lahf
jmp
icebp
scas
jnp
xchg
repz
icebp
mov
ss
xchg
pusha
inc
popf
dec
out
mov
cdq
cmp
int3
xor
inc
cli
ins
imul
inc
sbb
cmps
mov
xor
sub
icebp
sar
xor
push
pop
stos
mov
push
jb
mov
xchg
aad
out
inc
cs
xchg
pop
push
sbb
mov
dec
outs
(bad)
push
(bad)
sahf
gs
add
in
pop
cli
data16
mov
add
push
addr16
cmps
dec
or
sub
scas
cmp
inc
into
enter
add
and
pop
inc
ds
jecxz
and
or
jp
imul
sub
outs
repnz
mov
sbb
inc
aam
and
fcom
pop
imul
pop
push
loopne
dec
sbb
es
cmp
add
jns
rcr
mov
cli
icebp
pop
sub
xchg
mov
push
in
add
fwait
nop
lahf
cli
aaa
dec
inc
not
test
jbe
mov
nop
pop
jecxz
repz
sub
test
arpl
dec
inc
adc
ja
test
fs
fwait
sbb
imul
data16
out
punpckldq
adc
mov
and
int
shl
mov
and
xor
pop
fisub
jne
inc
sbb
fmul
mov
sbb
addr16
xor
adc
jo
fnstcw
pop
jmp
jmp
push
pop
and
lea
dec
dec
sbb
pop
out
retf
fdivr
fsubr
cmps
stc
loope
xchg
adc
in
or
cmp
mov
in
xchg
imul
xchg
mov
mov
arpl
test
mov
(bad)
jle
test
stos
push
pop
jnp
test
push
push
and
sti
fwait
adc
and
xor
sbb
cwde
arpl
push
test
fidivr
fwait
cmc
sbb
mov
outs
fldcw
aad
test
and
adc
pop
push
lea
sbb
neg
lea
and
dec
ret
mov
out
gs
or
sub
stos
and
or
cmp
xlat
cmp
mov
and
lods
dec
jmp
xchg
inc
in
cmps
mov
adc
pop
scas
adc
pop
mov
lock
out
es
mov
stos
add
xlat
in
lds
mov
(bad)
cmps
stc
push
ja
ret
or
pushf
jp
or
ret
adc
leave
mov
mov
movs
neg
xchg
test
dec
sub
jno
mov
ss
push
stc
retf
iret
sbb
mov
xchg
sbb
js
mov
jecxz
mov
dec
xor
mov
add
xchg
pop
mov
adc
mov
jns
xchg
sahf
mov
movs
imul
dec
lods
pop
stos
dec
mov
jg
xchg
bound
inc
stc
pop
and
mov
test
movs
mov
aad
(bad)
cli
in
loop
xor
add
dec
idiv
sub
push
lock
(bad)
cmps
dec
pushf
push
mov
mov
inc
mov
xor
lods
dec
mov
mov
pusha
fldcw
mov
ja
(bad)
in
and
pop
ret
jl
xchg
fs
xor
mov
cdq
inc
(bad)
pop
sar
xor
push
ins
pop
inc
imul
push
sbb
sub
pop
sub
mov
aaa
(bad)
cs
mov
imul
xchg
or
mov
cmp
adc
fistp
mov
jb
inc
xchg
sbb
popa
addr16
rcl
lods
retf
lahf
cmp
je
test
std
mov
xor
adc
test
add
mov
sar
inc
fdiv
adc
inc
jle
mov
push
pop
sub
sbb
or
(bad)
pop
test
mov
and
inc
pop
jae
xchg
iret
and
inc
mov
xchg
in
xchg
mov
inc
xor
push
shr
inc
fistp
adc
pop
push
cli
push
aas
or
mov
adc
bound
jbe
dec
scas
push
inc
fcmove
stc
xchg
add
mov
retf
xchg
nop
mov
push
mov
mov
push
mov
push
fisub
sub
sar
sbb
or
jne
jmp
mov
jmp
xchg
mov
pminub
call
(bad)
push
mov
inc
mov
popf
mov
bound
sbb
pusha
mov
je
cmc
or
inc
jg
scas
popf
mov
clc
test
mov
cmps
gs
mov
jmp
jno
and
daa
push
or
lods
add
add
jne
jns
xor
add
add
push
faddp
leave
mov
inc
ficomp
leave
iret
pop
cmp
dec
pop
pop
repz
jge
sar
cmc
push
add
lods
enter
pop
add
dec
das
ja
in
push
jb
fwait
adc
sub
fidiv
cmp
mov
add
mov
mov
push
adc
jbe
inc
xor
fiadd
sub
in
bound
jno
push
jnp
addr16
fiadd
and
cmp
pusha
repnz
repz
cmps
in
frstpm(287
ins
jecxz
jp
pusha
leave
adc
stos
jmp
test
jae
xchg
mov
int
rcl
dec
ins
xlat
fidiv
or
mov
or
adc
stos
fsubrp
pop
repz
push
es
jno
iret
mov
ds
add
adc
repz
adc
stos
data16
cmp
mov
sahf
mov
xlat
jg
mov
cli
adc
and
(bad)
in
xor
add
mov
aas
adc
mov
ins
dec
jb
xor
push
aam
mov
mov
aam
movs
cdq
loop
data16
pusha
fdiv
sbb
push
mov
mov
mov
push
add
inc
jmp
lea
cmp
or
out
loope
mov
outs
inc
mov
lock
push
jae
and
mov
xchg
mov
test
clc
add
xchg
cmp
test
inc
bound
cli
dec
(bad)
ds
mov
popa
(bad)
(bad)
mov
xchg
push
inc
mov
add
sbb
or
jne
push
pushf
pop
dec
hlt
jo
pop
inc
inc
rol
inc
jecxz
ja
js
jnp
xchg
xor
mov
mov
and
stos
bound
ror
dec
jnp
xor
cld
nop
(bad)
(bad)
mov
(bad)
in
push
cmp
std
daa
mov
mov
movs
or
xchg
shl
mov
dec
mov
call
in
rol
cs
add
xchg
add
(bad)
mov
cmp
sbb
stc
and
mov
dec
lods
pop
mov
rol
jecxz
(bad)
push
xchg
cs
push
shl
push
lods
and
xor
ds
test
sub
sub
sub
retf
fdivr
mov
sbb
mov
cs
fdivr
or
rcl
lea
push
push
cs
adc
test
cmp
dec
push
aas
cmp
pop
jns
push
push
inc
ins
iret
fldz
dec
(bad)
ds
rcr
sbb
mov
in
in
fcom
mov
and
in
xor
into
fisub
xchg
push
jnp
lods
mov
xor
inc
hlt
loop
retf
outs
out
icebp
mov
jl
xor
sbb
add
hlt
or
das
imul
inc
shl
pop
mov
pusha
aam
call
sub
or
add
je
gs
icebp
addr16
pop
ins
mov
daa
lock
xchg
xchg
in
iret
mov
adc
adc
out
cmp
sub
adc
clc
stos
pusha
cwde
cmp
push
data16
fistp
jb
push
lods
push
je
sub
(bad)
push
test
mov
loopne
dec
and
(bad)
movs
dec
aam
and
(bad)
mov
sbb
cs
frstor
sti
xor
or
popf
mov
sbb
in
outs
scas
dec
push
xchg
add
call
fist
stc
stc
jne
stos
jns
and
test
or
bound
pop
push
jl
push
cli
dec
mov
das
mov
jne
outs
jp
mov
popf
fidiv
data16
movs
xchg
cwde
cmp
or
mov
sub
ja
clc
retf
jp
jbe
stc
xchg
mov
mov
jae
movs
jno
dec
adc
mov
js
retf
or
inc
fild
fisttp
inc
pusha
test
test
mov
pop
mov
or
and
popa
fwait
movd
ins
loope
fisttp
adc
lods
(bad)
adc
out
mov
aad
push
scas
stos
add
pop
call
repz
stc
dec
push
mov
(bad)
xchg
fistp
mov
mov
inc
mov
adc
add
adc
in
inc
xchg
ins
inc
lods
cs
and
data16
or
das
rcr
push
or
push
movs
xchg
loope
mul
push
stos
push
or
xchg
mov
sub
in
ror
lock
std
std
sbb
mov
xchg
leave
not
sbb
pop
xchg
lods
jl
pusha
fldenv
or
mov
ins
push
or
mov
cmp
int
fcom
icebp
push
jns
mov
sbb
pop
imul
push
pop
ror
sub
cli
enter
scas
loop
stos
xchg
je
les
jo
inc
mov
inc
inc
push
(bad)
pop
dec
outs
loope
cld
outs
mov
jp
retf
mov
add
cmps
cld
loop
jle
add
jne
pop
add
jmp
xor
gs
xor
jo
gs
pusha
adc
push
out
ret
ins
mov
push
xor
xchg
in
iret
push
adc
dec
push
je
and
jmp
xchg
call
pop
outs
popf
add
daa
cwde
out
jecxz
ds
iret
pusha
inc
addr16
mov
inc
push
sbb
xchg
mov
fdiv
xchg
dec
pop
adc
mov
jno
cmps
sub
aas
push
inc
inc
stc
aam
or
xchg
cmps
mov
mov
inc
jge
rol
cmp
ror
fisub
add
sub
out
fs
test
(bad)
ret
clc
jae
add
cmp
nop
xlat
popa
adc
(bad)
retf
mov
sub
loope
loope
mov
sbb
pop
es
push
or
mov
or
push
xchg
pop
jae
out
and
iret
imul
add
jecxz
push
mov
das
imul
div
ja
in
xchg
pop
leave
in
mov
jl
inc
push
outs
inc
pushf
inc
inc
cmp
pop
adc
cmp
or
(bad)
sub
in
mov
dec
stc
sar
add
cmp
inc
dec
cwde
pop
es
(bad)
call
icebp
jo
cmp
outs
push
pop
push
push
mov
sub
mov
out
or
and
ss
out
pusha
pop
add
sbb
mov
sub
add
dec
test
or
stos
cmc
addr16
cmp
dec
movs
pusha
cli
sbb
push
mov
into
js
adc
hlt
into
sub
or
sbb
out
xchg
adc
rcl
test
fiadd
jle
cs
mov
sub
sbb
fadd
imul
fnstsw
ds
aas
jmp
and
xor
scas
shl
mov
leave
hlt
sbb
jle
pop
push
shr
in
stos
mov
sar
das
(bad)
and
pop
inc
fmul
mov
pop
(bad)
std
pop
jle
mov
pop
xadd
mov
arpl
in
repz
xor
test
mov
mov
jo
fidivr
or
in
ret
sub
push
int
enter
jecxz
es
xor
xchg
repz
pop
jg
xor
(bad)
mov
push
sahf
(bad)
xchg
and
call
adc
push
cli
daa
in
push
jnp
push
rcr
dec
(bad)
out
pusha
mov
mov
into
adc
push
xchg
dec
sti
sbb
and
mov
cli
adc
fld
or
pop
mul
sub
stos
nop
lea
lock
dec
in
dec
mov
aaa
push
je
xor
mov
mov
push
mov
outs
jmp
push
hlt
movs
imul
ins
out
imul
cmc
pop
sbb
mov
sub
lds
add
fwait
jnp
aad
pop
lahf
mov
data16
mov
test
(bad)
movs
pop
and
and
dec
pop
loop
mov
xor
imul
or
mov
scas
mov
shr
mov
mov
je
pop
cwde
push
daa
inc
fs
loope
retf
test
pop
movs
or
pop
mov
mov
or
(bad)
mov
cmps
and
push
aam
gs
(bad)
(bad)
xchg
cmp
mov
les
stos
mov
xor
xor
clc
sbb
fist
hlt
imul
add
or
adc
dec
je
sub
xor
mov
(bad)
ds
push
movs
lods
push
pop
push
mov
and
lock
pushf
xor
jns
cmp
jb
jp
dec
add
dec
mov
xchg
scas
cmc
in
xchg
repnz
xchg
icebp
(bad)
(bad)
test
cld
add
hlt
inc
mov
add
data16
sub
sub
cld
jmp
push
xchg
int3
jae
fs
sub
mov
cmps
mov
or
sbb
cmp
jg
(bad)
je
mov
or
std
stos
inc
mov
test
xchg
jno
lea
ins
pop
fstp
sub
stos
sub
and
inc
cwde
xchg
and
mov
inc
js
cmp
sbb
cmps
lahf
cld
xor
mov
inc
push
sub
add
jp
je
lods
nop
push
or
loopne
call
repz
fstp
ret
and
xor
lods
dec
fstp
and
push
and
dec
mov
and
jmp
pop
pusha
popa
xor
xor
jmp
mov
jns
mov
sub
jo
and
sub
sbb
sub
(bad)
daa
dec
lods
push
movs
movs
fsubr
jp
fidiv
lods
shr
sbb
push
scas
sub
mov
sti
xor
jae
into
mov
stos
test
add
xchg
push
and
cmp
hlt
cmps
pusha
mov
jle
scas
faddp
(bad)
jg
lock
rcr
and
mov
fidiv
mov
fucomip
inc
scas
neg
arpl
add
retf
rcr
cmp
aas
jg
mov
lds
cmc
js
ins
imul
popa
mov
out
aad
fistp
mov
inc
push
mov
push
dec
call
xor
jo
cmp
jmp
or
jp
fild
adc
div
shr
sub
mov
scas
cmps
jae
daa
mov
(bad)
push
imul
add
jae
pop
sbb
mov
or
bswap
bnd
fadd
lahf
jg
in
call
add
(bad)
out
mov
pushf
sub
mov
int
aaa
xlat
js
cmps
call
in
cld
dec
gs
mov
cmp
sbb
ror
(bad)
jg
xlat
loopne
test
xor
gs
pop
mov
mov
push
mov
fldl2t
and
(bad)
adc
add
mov
mov
int
cld
inc
jbe
movs
push
das
inc
jge
mov
sub
daa
pop
adc
lods
ja
cwde
inc
ror
daa
sub
test
inc
mov
xchg
clc
fcmovb
call
mov
lods
sub
cmp
dec
sub
loop
jmp
cmp
les
repz
add
fisubr
mov
arpl
pop
or
push
sub
push
jb
push
loop
sti
adc
aad
sbb
inc
sti
loope
xor
inc
ds
sub
push
mov
fwait
jmp
or
pop
shl
mov
add
sbb
in
fcom
loope
push
fs
je
xor
retf
sti
mov
psubw
or
cli
xchg
xchg
retf
push
mov
ror
dec
cmp
xlat
add
aam
mov
adc
arpl
jnp
jmp
std
rcr
scas
jae
jg
js
movs
stos
sbb
push
ins
mov
and
adc
ss
dec
mov
push
pop
lahf
bound
sbb
ficomp
arpl
push
jbe
daa
cmp
mov
mov
jmp
cmp
dec
loope
stos
(bad)
mov
jg
stos
jno
pop
arpl
stos
inc
sub
inc
mov
mov
mov
movs
mov
xchg
mov
mov
fisubr
int
adc
lahf
push
pop
cmp
cmc
and
mov
cmp
pop
and
mov
arpl
pusha
bound
xchg
dec
mov
stos
push
xor
xor
mov
cli
std
mov
out
inc
and
jne
or
dec
add
sub
xchg
mov
mov
out
jge
cmps
pop
pusha
inc
push
(bad)
(bad)
in
cld
outs
ret
mov
cmp
pop
jl
(bad)
mov
fisub
das
stos
scas
push
(bad)
cmovb
movntq
pop
xchg
mov
outs
(bad)
(bad)
push
lods
jb
loope
pop
ds
out
adc
mov
or
(bad)
js
ret
xchg
nop
out
cmp
loopne
(bad)
mov
retf
js
stos
jbe
vmovntps
xchg
mov
dec
ds
scas
mov
out
and
or
ror
mov
sub
fsubr
lods
pop
clc
in
outs
sti
jge
and
push
mov
jne
cwde
or
mov
ficomp
dec
mov
sbb
lock
push
mov
fdivr
das
ss
add
jnp
nop
pop
dec
push
push
lea
jno
mov
cmp
sub
icebp
jecxz
pop
mov
shr
stos
and
jmp
xchg
sub
pusha
mov
jo
stos
ret
jns
cmp
mov
ror
jne
dec
xchg
xchg
sub
xchg
ds
and
sahf
gs
enter
jae
inc
inc
idiv
or
add
fsubr
pushf
mov
dec
xchg
and
ror
loopne
add
inc
mov
mov
or
out
loope
rcl
fdiv
adc
fwait
add
call
nop
int
jl
or
pop
dec
inc
(bad)
cwde
in
ret
adc
out
mov
out
or
gs
jg
out
shl
push
arpl
mov
sub
movs
and
pop
idiv
xchg
retf
add
or
cmp
stos
retf
xchg
imul
fld
jp
movs
dec
sahf
add
xchg
es
les
inc
pusha
inc
in
jae
stc
xchg
mov
xor
outs
in
push
inc
dec
out
(bad)
jge
adc
pop
push
sub
test
xchg
lods
adc
out
xor
jb
std
mov
in
add
movs
idiv
sbb
cmp
and
jb
sbb
shl
push
std
xchg
mov
mov
xchg
stos
arpl
dec
das
or
or
or
lock
sub
jecxz
sbb
pushf
(bad)
dec
sub
mov
pop
fcmovnb
div
inc
jge
test
xchg
mov
mov
out
jo
int
retf
jge
dec
ds
xor
dec
shl
jl
movs
xor
into
ret
vpgatherqq
or
aam
adc
sbb
mov
inc
sar
js
repz
mov
inc
call
jo
jmp
pop
or
mov
push
jne
xor
sahf
div
lahf
xchg
mov
xchg
push
inc
or
in
(bad)
ss
adc
mov
cmp
mov
adc
xor
sub
adc
frstor
and
or
jae
fcomp
push
adc
lahf
mov
adc
adc
add
imul
fst
add
mov
mov
mov
add
aaa
mov
push
jns
ja
cmp
into
cmp
mov
xchg
sub
mov
cmp
je
mov
mov
repnz
aad
xor
(bad)
xor
sbb
dec
sub
dec
and
mov
mov
pushf
jg
sbb
xor
sub
xchg
push
ret
pop
xor
mov
xor
fisttp
add
sub
in
sub
ror
mov
lods
mov
ficomp
mov
mov
xchg
imul
mov
sbb
cwde
mov
push
add
ror
xor
pop
dec
jns
cmp
std
sbb
scas
pop
repz
and
inc
jae
or
xlat
ds
fisub
(bad)
xor
cdq
mov
and
inc
inc
out
pushf
mov
out
outs
pusha
sub
push
not
icebp
ds
inc
cli
ins
repz
mov
jo
lock
shl
xor
cmc
leave
stos
mov
mov
ret
cwde
jle
das
mov
js
push
mov
(bad)
adc
bound
mov
les
(bad)
outs
mov
dec
and
movs
mov
mov
ror
or
(bad)
out
aad
cmp
out
retf
cmp
arpl
fild
aam
push
inc
or
mov
jb
jb
and
jmp
retf
test
retf
mov
sti
jg
mov
sbb
rcl
adc
cmp
cmp
mov
adc
xlat
jmp
push
add
mov
ja
cmc
jb
dec
adc
pop
fisub
jns
fdivr
iret
pop
rcl
out
sub
mov
and
mov
loopne
retf
push
test
sbb
mov
rcr
cs
mov
xor
repnz
(bad)
stos
out
or
sar
push
xchg
adc
in
aad
cmps
rol
mov
ror
or
mov
test
or
pusha
bound
mov
sbb
mov
push
inc
ss
xlat
add
fwait
or
retf
jecxz
in
jecxz
dec
sar
cmp
ins
and
in
xchg
push
mov
push
les
push
je
push
cwde
pop
ja
icebp
sbb
out
scas
call
(bad)
or
aad
lock
xchg
or
lods
shr
sbb
add
mov
imul
sub
lahf
xchg
xor
nop
add
sbb
gs
ins
sub
mov
jecxz
xchg
and
loopne
call
and
push
addr16
mov
scas
rcl
sub
xchg
or
jns
jl
es
mov
pop
push
loop
ins
repnz
sub
mov
add
or
push
bound
fsubr
xor
ss
cmp
xchg
ja
out
sbb
int3
xchg
push
fisub
sbb
inc
lea
push
jmp
xchg
mov
sbb
sbb
inc
xor
cmc
(bad)
mov
outs
bound
(bad)
stos
pop
test
(bad)
cmp
sub
mov
pop
dec
test
mov
sub
test
add
or
sub
mov
aas
sub
lahf
leave
in
cmp
push
push
jle
xlat
imul
xor
not
jo
ret
jne
(bad)
sbb
outs
daa
cmp
mov
sub
in
inc
aas
sub
call
xor
dec
out
xchg
jno
mov
mov
movs
adc
inc
mov
cmps
inc
xchg
and
or
inc
jl
test
jg
push
ret
mov
jecxz
pop
mov
popf
push
fmul
jnp
add
daa
push
fidivr
stos
stc
dec
cmp
mov
mov
sbb
sti
jp
or
imul
repz
stos
inc
stos
jg
outs
dec
xchg
scas
(bad)
mov
mov
jne
jb
push
xor
popa
cmp
sbb
retf
dec
adc
mov
inc
xor
sbb
test
mov
push
aam
ins
out
out
test
xchg
loop
(bad)
les
jl
fwait
cmc
icebp
mov
and
mov
inc
test
ins
xchg
(bad)
jecxz
and
ss
stos
outs
shl
inc
xor
iret
push
adc
sub
add
and
ss
gs
fbld
pop
fwait
mov
cmps
push
cmc
in
in
stc
cmc
repz
ficom
mov
das
pop
and
call
bound
pop
or
ins
pop
push
sub
xchg
cld
and
(bad)
lods
push
adc
dec
sbb
push
jbe
dec
fcomp
(bad)
lea
dec
mov
jae
sbb
js
shl
ja
jns
mov
(bad)
into
inc
jb
aad
arpl
jecxz
adc
inc
test
or
add
(bad)
fild
pop
lock
dec
jb
cmp
add
inc
je
es
mov
test
pop
fistp
ret
shl
mov
outs
scas
(bad)
jecxz
lock
xor
cwde
sbb
add
das
(bad)
pop
sbb
pop
sub
movs
dec
sbb
cmp
test
xlat
repz
mov
push
push
data16
sub
sub
loop
add
cmp
cmps
adc
test
in
jge
test
fcmovne
push
mov
aaa
jge
cmps
dec
mov
cmps
xchg
xchg
or
inc
push
jg
jbe
pop
mov
mov
(bad)
fisttp
enter
sub
lods
inc
popa
sub
push
lea
ret
dec
jle
sar
adc
clc
adc
int3
call
push
test
mov
xchg
lahf
sub
dec
or
add
cli
xchg
(bad)
repz
(bad)
sbb
popa
sbb
adc
call
inc
(bad)
xchg
aaa
retf
sbb
sti
std
shl
ins
retf
test
outs
pop
cmp
push
stos
ret
xchg
and
int
push
mov
stos
push
inc
ins
and
call
xor
sub
sar
stos
div
xor
push
test
or
and
adc
jno
or
idiv
mov
scas
stos
shr
jp
ja
mov
lods
inc
add
out
mov
out
or
mov
and
add
loopne
mov
dec
xlat
int3
xlat
popa
sub
aaa
sahf
mov
(bad)
cmps
out
mov
push
mov
cs
adc
mov
(bad)
sbb
push
popf
adc
pop
push
lahf
cmp
inc
sub
shl
shl
cs
jle
in
jp
in
dec
ins
adc
mov
push
inc
jmp
(bad)
or
push
ins
cli
leave
adc
jge
push
(bad)
and
fcom
fadd
adc
(bad)
iret
outs
sbb
jg
dec
mov
es
add
push
and
(bad)
push
inc
adc
imul
dec
je
fs
bound
lahf
fsub
xchg
setl
adc
test
ins
jb
sti
inc
sub
add
and
sbb
jo
add
popa
je
jne
shl
repnz
mov
iret
stos
aam
pop
xchg
add
ja
mov
ja
cli
dec
push
jmp
(bad)
out
pop
retf
aaa
mov
arpl
stc
inc
std
xchg
jo
sub
jmp
dec
call
dec
sub
fisub
out
stos
fwait
push
mov
push
cs
mov
cmp
or
icebp
jge
adc
push
and
cmp
lds
call
add
mov
sub
outs
or
imul
or
inc
shr
or
jg
pusha
jns
xlat
add
dec
mov
sub
mov
cmc
dec
jae
loope
das
outs
jp
dec
mov
and
in
sar
jne
pop
xchg
ss
jecxz
push
lds
push
dec
xor
into
(bad)
push
shr
jae
in
jo
mov
cmps
inc
sbb
call
call
inc
outs
push
adc
in
pop
and
pop
add
add
mov
lods
push
fisubr
mov
jne
inc
out
out
js
xchg
popf
ins
sub
loopne
jl
inc
lahf
scas
ins
pop
pop
shr
addr16
mov
test
fsub
call
sub
inc
inc
cmp
pop
(bad)
mov
push
jae
lds
jge
xchg
scas
out
cs
add
repz
sbb
retf
mov
fistp
fsubrp
add
jp
sbb
jmp
cmp
push
in
push
add
ja
mov
sbb
cli
pop
ds
les
mov
jno
sbb
cmp
cld
jnp
push
movs
jmp
into
mov
bound
dec
ficom
mov
mov
jg
xlat
or
(bad)
inc
cmp
pop
dec
aas
cli
or
arpl
cmp
pop
into
cmp
fs
sub
(bad)
and
dec
xor
and
std
cmp
test
push
jmp
mov
jnp
mov
in
jns
mov
mov
adc
jge
stos
out
adc
mov
jno
mov
lods
test
lods
xchg
pop
add
mov
clc
sbb
in
stos
imul
xor
push
in
cdq
test
je
fpatan
ds
xor
out
or
iret
loopne
mov
jo
sub
mov
call
lods
mov
mov
imul
inc
dec
and
pushf
test
mov
xor
sub
je
cwde
adc
in
and
push
jne
ins
or
xor
mov
(bad)
cli
movs
retf
adc
test
neg
add
icebp
or
loop
xor
inc
cli
add
adc
or
xor
sbb
je
push
xchg
dec
bound
xchg
sbb
das
mov
adc
lds
jecxz
and
mov
mov
fisub
xchg
mov
jle
data16
sub
nop
mov
repz
adc
sub
pushf
sbb
cmps
lock
jecxz
lods
ja
jns
or
jp
movs
push
sbb
movs
in
rcr
mov
xchg
(bad)
mov
int
ja
sub
(bad)
(bad)
adc
and
xchg
lds
in
or
add
mov
cdq
push
add
pop
repz
push
push
push
dec
fcmovu
inc
mov
or
jge
jne
loopne
and
and
xchg
pop
push
add
shl
shl
and
mov
sub
(bad)
jg
in
inc
(bad)
ins
pop
add
call
ja
or
cs
add
jb
not
pop
jle
test
leave
jmp
jnp
or
mov
xchg
(bad)
ds
sub
int
mov
retf
inc
nop
fist
cmp
or
mov
push
aad
data16
shl
mov
mov
mov
mov
mov
sbb
shl
mov
add
xchg
pushf
adc
cmc
mov
ret
jb
shl
dec
xchg
mov
mov
adc
mov
outs
jmp
ficom
mov
mov
in
mov
xor
sub
fmul
bound
fistp
sbb
mov
sti
sub
sub
lods
inc
mov
rcr
mov
call
xchg
mov
in
jo
and
in
aad
scas
lds
xor
frstor
jno
es
imul
fimul
dec
test
std
inc
or
dec
sbb
mul
add
sti
mov
add
in
outs
dec
sub
xchg
test
mov
movs
add
in
pop
add
arpl
gs
js
jg
bound
mov
inc
scas
dec
push
cmp
lock
or
cli
enter
mov
inc
(bad)
out
sbb
int3
jg
pusha
(bad)
jo
jecxz
cmp
xor
cmp
sbb
das
aas
clc
stc
fist
sub
push
mov
stc
cld
dec
xchg
xchg
and
xchg
cmp
and
xor
popf
add
scas
push
cmc
add
jp
cmp
lods
push
dec
imul
mov
in
push
cmp
out
cmp
enter
jge
(bad)
in
dec
pop
or
cs
cmp
mov
js
xor
inc
pop
sar
mov
push
loope
adc
(bad)
clc
pop
mov
mov
or
scas
inc
sbb
adc
fimul
mov
xor
xchg
jnp
call
add
fstp
js
sbb
adc
push
outs
sub
in
dec
ins
mov
ret
rol
addr16
repnz
pop
in
inc
xchg
push
rcr
adc
push
mov
cwde
je
mov
ins
jmp
push
sub
add
bound
in
test
repz
mov
shr
or
add
pop
mov
push
(bad)
and
(bad)
fwait
call
sar
icebp
sub
cmc
ins
(bad)
movs
ds
pop
mov
mov
xor
rep
xor
call
test
movs
dec
cmp
add
sub
push
mov
ret
fnsave
xlat
sbb
inc
mov
mov
push
ss
inc
mov
xor
mov
adc
int3
xchg
clc
fst
and
mul
fucomip
enter
pop
xlat
sbb
popf
out
xor
data16
sbb
out
mov
stos
xchg
inc
and
mov
(bad)
call
mov
sbb
xor
jmp
or
cmp
add
fld
inc
add
push
push
mov
cmp
pusha
popa
cwde
mov
dec
push
pop
dec
sahf
cli
leave
cmp
mov
jmp
xor
mov
push
shl
or
(bad)
xchg
mov
add
mov
lock
clc
stos
ins
xor
xchg
sahf
jae
fcomi
in
pop
fwait
add
in
xchg
push
mov
in
jp
push
arpl
mov
mov
aad
adc
push
hlt
inc
call
push
fucomi
dec
loope
pop
dec
leave
cmp
out
shl
add
cmovle
sub
dec
mov
jb
loope
es
call
jo
stc
dec
mov
ins
inc
sub
mov
cmps
loope
push
cmp
(bad)
xor
lods
cmp
pop
sbb
mov
jnp
push
xor
not
je
mov
out
(bad)
popa
dec
hlt
fist
and
inc
xor
pop
out
xor
sub
lea
mov
sub
dec
inc
stos
(bad)
inc
repnz
scas
(bad)
sbb
mov
push
fcomp
cmps
jmp
outs
jmp
sbb
sub
out
inc
aam
test
pop
mov
fisttp
aaa
xchg
loop
loopne
cmp
sbb
in
xchg
hlt
cli
(bad)
jmp
pop
jb
jg
jg
mov
push
fldcw
sbb
sbb
push
nop
packsswb
repz
or
pop
dec
test
pop
ret
out
or
ror
jae
mov
call
xchg
mov
and
and
pop
and
push
cld
ror
or
xor
pop
xor
nop
jl
inc
and
jp
pushf
in
push
pop
pop
or
loop
sbb
push
pop
xchg
xor
mov
loopne
cmp
push
jmp
out
in
js
pop
cli
sub
add
cmps
add
(bad)
gs
cmp
in
cmp
mov
sti
loopne
fdivr
mov
jno
xor
pop
sub
es
in
pop
and
pop
rcl
push
aam
bound
movs
xor
lahf
xor
pop
stc
arpl
inc
push
dec
xchg
popa
iret
rcr
clc
mov
fisubr
leave
(bad)
iret
lea
clc
data16
mov
xchg
and
mov
out
jae
sbb
jecxz
xor
fs
in
pop
xchg
and
jne
xchg
cld
in
mov
aad
xchg
jmp
mov
out
dec
push
je
dec
ss
leave
int
jl
pop
retf
fcomp
push
sti
ret
fisubr
scas
dec
add
bound
and
mov
stos
ins
test
dec
je
or
hlt
mov
in
dec
xor
sbb
out
fnstcw
iret
idiv
test
sub
mov
xor
outs
push
mov
xchg
outs
mov
pop
dec
xchg
xchg
xlat
jecxz
sbb
fldl2t
loop
rol
fwait
icebp
push
mov
dec
add
or
mov
call
ret
aaa
cmp
adc
dec
mov
sbb
jg
xchg
sub
pop
xor
or
mov
fneni(8087
push
dec
aad
xlat
push
xor
aam
dec
enter
je
jecxz
in
sar
(bad)
loopne
inc
es
cmp
mov
dec
mov
(bad)
fs
jmp
sub
jmp
fdivr
cwde
scas
push
loopne
in
inc
lock
mov
adc
or
pop
or
arpl
sahf
mov
dec
(bad)
stc
into
neg
cmps
and
mov
mov
adc
stc
add
popa
aad
out
movs
jmp
jp
cs
out
lds
xor
movs
ficom
ss
cdq
loop
sub
ret
xor
mov
add
mov
xchg
inc
inc
dec
xlat
push
sbb
mov
retf
cmp
mov
xor
in
nop
repz
push
xchg
add
inc
adc
jno
xchg
imul
fndisi(8087
pop
mov
mov
nop
aaa
adc
push
loopne
adc
xchg
test
adc
loope
xor
scas
jg
jno
leave
ins
dec
outs
jle
cmp
jl
test
pop
rcr
(bad)
pop
and
outs
out
push
cmp
mov
mov
pop
les
mov
pop
into
push
jl
sub
mov
lods
or
shl
pop
lock
stc
fnstsw
or
xchg
fmul
jno
xchg
pop
call
mov
(bad)
stos
pop
mov
jne
or
repz
sbb
sbb
xor
int3
jbe
loopne
xchg
sbb
xor
add
out
stc
push
dec
test
pop
dec
mov
scas
add
pop
(bad)
lea
es
adc
cmps
pushf
and
test
adc
loop
inc
test
scas
mov
mov
add
add
(bad)
aas
xchg
punpcklbw
xchg
mov
cmp
push
(bad)
movs
mov
inc
(bad)
std
loop
xchg
inc
xchg
push
mov
les
push
mov
jg
cli
mov
leave
ja
out
stc
or
jmp
out
sbb
mov
or
dec
xchg
add
ins
cmc
or
shl
xchg
enter
xchg
fisub
(bad)
sahf
sub
ds
gs
sbb
loop
pushf
inc
cmc
bound
mov
xor
dec
jne
sar
mov
sub
je
xchg
cld
add
shl
mov
mov
xchg
jge
pop
mov
add
inc
test
inc
add
sbb
rol
aaa
or
clc
xchg
test
xchg
inc
xchg
test
mov
pop
mov
(bad)
mov
mov
scas
std
and
xor
ss
loope
outs
jno
mov
or
retf
out
mov
popf
popw
inc
sbb
out
sbb
into
arpl
movs
sbb
pop
fdivr
arpl
lea
shr
inc
imul
test
inc
inc
mov
add
and
jbe
or
sbb
inc
mov
and
(bad)
ret
pop
xor
push
dec
int
cmp
loope
mov
inc
scas
inc
in
je
clc
aam
mov
ds
push
sbb
das
mov
loopne
gs
cmps
dec
pop
xchg
out
push
or
mov
and
test
int3
push
gs
mov
(bad)
bnd
mov
sbb
push
mov
inc
test
ret
mov
dec
jmp
aam
fnstsw
retf
mov
scas
jmp
in
test
call
retf
mov
enter
adc
inc
retf
(bad)
mov
and
test
sbb
dec
pmullw
cdq
sahf
push
fistp
retf
inc
gs
(bad)
scas
or
adc
mov
fchs
popa
loopne
or
je
call
js
adc
scas
cmps
push
or
ins
xchg
(bad)
shl
xor
pop
cli
inc
ret
inc
outs
in
sub
(bad)
mov
xor
scas
mov
fadd
movs
add
push
(bad)
lock
inc
fadd
sub
out
shl
push
out
mov
pop
and
or
fidivr
add
lock
movs
mov
add
in
stos
xchg
push
add
sbb
dec
cmps
push
mov
in
mov
sub
pop
and
and
mov
push
lea
clc
popf
loope
icebp
pop
in
stos
and
test
into
fwait
popa
and
aam
out
mov
jno
cmc
data16
jle
add
push
hlt
nop
and
adc
scas
jns
cmp
adc
xor
dec
call
out
add
daa
mov
shr
add
in
pop
imul
mov
cld
or
inc
daa
mov
mov
aad
sbb
pcmpgtw
test
cmps
pop
xor
ja
pop
push
adc
push
mov
inc
mov
aas
push
and
out
scas
xor
fs
pop
mov
pop
lea
mov
stos
in
jns
and
and
jae
push
or
fist
mov
fld
loope
mov
call
sbb
(bad)
repz
or
rcl
inc
aam
jmp
dec
test
lds
xchg
mov
das
outs
mov
cmps
nop
ds
mov
cmps
test
dec
inc
sahf
cmp
mov
ret
mov
push
cmovae
push
rcr
jp
es
pop
loope
xor
sbb
xchg
or
cdq
xor
vandps
fdivp
test
pushf
jmp
jb
clc
in
pop
xor
push
ins
es
mov
adc
mov
cmp
sub
and
jecxz
cmp
dec
sub
jmp
xor
xchg
gs
clc
cs
popf
outs
stos
xor
mov
cmp
cwde
add
cmps
ss
inc
ss
mov
sub
mov
sub
pop
into
jl
push
xor
inc
ret
pop
or
stos
xchg
mov
mov
and
jmp
inc
mov
xor
shl
je
jb
or
loope
dec
inc
jne
out
inc
ja
and
push
out
cmps
call
inc
jp
js
pop
mov
push
jb
std
out
sar
jmp
sti
shr
jne
add
xchg
jmp
rol
or
aaa
outs
inc
xlat
mov
std
mov
dec
mov
mov
call
outs
aad
dec
push
out
dec
xchg
fist
das
fst
push
scas
mov
aas
mov
add
push
inc
call
clc
push
xor
test
add
sub
pop
pop
sub
in
fiadd
and
push
pusha
dec
push
xlat
add
shl
push
push
sub
ret
adc
in
dec
push
stc
out
pop
les
aas
jp
out
push
jo
xchg
leave
mov
cli
mov
int
in
fidiv
scas
pop
pop
sbb
int3
adc
cmp
cmp
cmp
pusha
jae
mov
adc
cmps
cmp
dec
mov
add
sti
fcom
mov
cmc
repnz
cmc
xchg
mov
xchg
adc
mov
xchg
inc
popf
ins
out
add
ret
int
adc
(bad)
les
scas
icebp
ret
mov
js
inc
mov
fcom
jle
mov
pop
xor
adc
movs
div
loope
xor
push
sub
adc
outs
out
pop
hlt
sub
test
cmp
loope
ds
cdq
jmp
pop
addr16
out
and
add
repz
cwde
xchg
add
inc
xor
clc
fwait
sub
xchg
adc
mov
std
sar
xor
xor
imul
mov
add
and
mov
rep
loope
mov
call
mov
and
mov
push
push
es
cmp
pop
enter
xor
ds
inc
inc
out
arpl
out
cvtpi2ps
xchg
add
xchg
mov
dec
mov
icebp
bound
xchg
in
daa
push
iret
jecxz
sti
jg
and
ret
cmps
or
push
and
in
je
rol
sbb
in
sbb
add
mov
(bad)
std
jmp
mov
fwait
popf
ficomp
mov
loopne
stos
lods
call
dec
sbb
movs
xor
call
mov
setne
sub
sub
cmc
gs
and
push
pop
in
push
aad
pop
ja
jg
loopne
jmp
sbb
mov
int3
(bad)
fwait
add
rcl
sahf
cmp
int
xchg
or
call
mov
or
daa
int3
dec
mov
retf
pop
pop
scas
xor
push
lahf
je
dec
inc
jg
fiadd
aam
adc
add
shl
pop
ffreep
mov
fst
dec
xchg
test
xchg
jbe
ror
fbld
inc
sub
xchg
sbb
call
out
outs
imul
add
ins
iret
mov
das
or
stos
sbb
gs
and
sbb
nop
je
sbb
cli
cwde
jnp
push
jge
pop
push
(bad)
and
dec
dec
and
in
mov
in
icebp
inc
jno
xchg
ins
cmps
xor
les
addr16
xchg
dec
sub
ins
cmps
hlt
fwait
cmp
inc
mov
sbb
scas
(bad)
bound
mov
mov
cmps
pop
push
fmul
int
xor
cwde
retf
popf
imul
into
mov
pop
movs
sub
push
scas
movs
pop
add
jl
sub
sub
movs
or
xchg
neg
ret
inc
int3
mov
imul
ror
icebp
adc
sub
cmps
test
shr
pop
in
mov
mov
iret
test
inc
cmc
push
retf
jae
mov
xchg
leave
cmps
int3
mov
mov
(bad)
scas
xchg
jae
push
push
fsubr
movs
adc
test
mov
enter
push
(bad)
lock
scas
add
mov
add
and
popa
push
inc
jle
jge
mov
adc
enter
nop
scas
and
out
cs
repz
add
sbb
or
sub
out
les
shl
ficom
in
pop
jg
aaa
(bad)
std
mov
loopne
mov
in
mov
or
add
adc
mov
jle
adc
aas
adc
jg
sbb
xor
xor
mov
mov
fstp
ins
cld
jnp
fwait
jb
jmp
mov
bound
pop
xchg
pop
inc
xchg
pop
inc
cmp
ins
ins
cmp
mov
inc
fs
xchg
add
add
or
sbb
nop
push
cmps
and
loopne
out
pop
jne
hlt
test
aam
push
out
mov
xlat
leave
add
and
and
cmp
call
stos
mov
cmps
(bad)
(bad)
arpl
pop
mov
inc
pop
jmp
xor
(bad)
stc
pop
adc
daa
je
gs
fwait
or
mov
not
ss
addr16
sub
pop
lds
sub
push
(bad)
jb
idiv
(bad)
movs
mov
movs
mov
add
cmc
cmp
ins
inc
or
mov
and
in
dec
mov
add
pop
imul
ins
jmp
popa
pop
arpl
adc
mov
push
stos
fs
sbb
(bad)
xchg
push
mov
dec
test
inc
cli
lea
test
movs
loop
mov
fs
jbe
stc
inc
or
mov
sbb
jae
ins
jecxz
pop
into
add
shl
push
aam
sub
cmps
call
adc
pop
fstp
mov
std
inc
lea
jo
mov
(bad)
pop
fcmovne
cmp
xchg
xchg
sbb
sub
test
mov
sub
call
push
jmp
mov
jnp
fmul
das
loope
lea
mov
bound
and
fstp
imul
pop
cld
lahf
push
aam
imul
fild
add
jno
cwde
inc
sahf
inc
xor
inc
sub
push
in
rcl
mov
or
sahf
aam
gs
jmp
dec
pop
and
mov
sti
clc
sbb
nop
mul
sti
iret
and
xchg
enter
mov
aaa
lea
dec
inc
cli
pop
in
lods
(bad)
jl
fiadd
mov
cdq
js
jb
fstp
pop
stc
lock
inc
push
rcr
in
push
out
sub
scas
or
rcl
neg
cmp
push
adc
add
mov
fwait
rcl
ds
xor
out
fld
cmp
add
dec
cwde
je
sahf
pop
cmps
mov
push
mov
outs
or
loope
inc
pop
addr16
xchg
sub
cli
fadd
and
inc
test
fwait
enter
inc
push
jns
out
int3
pop
js
call
hlt
fwait
push
(bad)
enter
add
lahf
ds
fnstsw
mov
cdq
aaa
inc
cdq
pop
jmp
(bad)
out
add
stc
pop
outs
in
out
dec
(bad)
jmp
leave
pop
jge
mov
ja
xchg
xor
inc
loop
sub
sbb
in
jbe
int
out
retf
cmps
or
sub
and
xor
ins
call
ins
mov
mov
aam
call
ret
out
inc
xchg
cmps
xor
clc
in
in
pop
jecxz
xchg
push
push
or
jbe
call
sub
jmp
dec
mov
sbb
jmp
sbb
retf
pop
cwde
inc
je
(bad)
cmc
push
add
into
push
lds
lods
lahf
dec
xchg
fs
push
mov
daa
sub
adc
push
jmp
jg
xchg
ds
adc
adc
adc
loopne
push
jno
std
cmp
inc
ret
adc
aam
sahf
retf
fild
sbb
loope
add
or
dec
xor
dec
cmps
popf
add
int
jp
mov
test
scas
push
and
add
jns
cmps
popf
push
in
sub
push
pop
mov
xchg
push
test
and
fist
jmp
and
mov
stos
pusha
ja
(bad)
div
movs
sbb
pop
aad
cdq
adc
out
ror
mov
cmps
xor
or
inc
inc
fsubr
pop
inc
test
xchg
cs
aaa
lods
addr16
push
cmp
push
int
or
stc
jl
xchg
mov
popf
std
int3
or
mov
jnp
rep
add
daa
xor
and
mov
stos
cmp
dec
sbb
das
test
retf
dec
lods
inc
aas
mov
or
call
dec
inc
not
fcomp
mov
mov
mov
ja
popa
or
fdivr
or
pop
cmps
push
int
add
out
inc
in
lods
add
pop
data16
adc
push
add
test
sub
gs
cmps
test
into
call
cdq
cmps
jecxz
sti
sbb
inc
dec
inc
add
mov
pop
jo
outs
mov
pop
add
repnz
or
pop
nop
pop
loope
clc
xchg
stos
iret
(bad)
jb
enter
dec
mul
jo
gs
jge
push
xor
dec
imul
mov
repnz
outs
push
icebp
sti
out
daa
clc
sbb
aaa
jb
(bad)
jbe
jo
adc
pop
hlt
and
gs
test
xchg
rol
dec
mov
mov
xchg
rcr
cmp
out
inc
cmps
daa
sahf
xor
xchg
daa
leave
add
fdivr
loopne
cmp
and
ins
(bad)
xchg
jle
gs
fild
push
mov
loopne
or
mov
jmp
outs
movs
fwait
call
cmp
sub
sub
jbe
sub
int3
aad
cmp
call
add
retf
int3
call
and
adc
or
(bad)
stos
data16
lds
jmp
pop
repnz
adc
or
sbb
in
mov
mov
add
into
xor
dec
and
add
sub
stos
stos
adc
cmps
adc
jmp
data16
into
pop
cmp
pop
retf
mov
inc
mov
xchg
test
pop
iret
aad
test
mov
pop
xor
dec
lahf
int
nop
or
jne
mov
push
mov
bound
jb
dec
icebp
push
sub
dec
sti
arpl
sub
push
push
or
push
sub
pop
dec
fnstcw
sbb
jae
sar
add
loope
add
sahf
jle
ficom
dec
and
adc
mov
int3
xor
xor
mov
or
test
hlt
mov
pop
aam
lahf
pop
cmp
stos
ins
ins
fdivrp
(bad)
shl
xchg
shl
lea
xor
icebp
lahf
jbe
outs
xchg
sub
popf
and
pop
mov
or
dec
test
mov
xchg
js
push
lahf
xchg
out
mov
mov
fimul
retf
pop
push
sbb
push
add
hlt
sti
pushf
xchg
scas
ror
aam
mov
aas
xor
out
ins
call
or
cmp
iret
in
cmp
out
cld
push
aas
jae
push
fcmovnu
inc
pop
dec
ds
test
repz
jecxz
push
add
mov
xchg
mov
jo
mov
mov
imul
scas
add
loope
cmp
scas
mov
dec
xor
(bad)
in
(bad)
jb
test
outs
sub
cld
aas
xchg
fsubr
sar
push
cmps
push
in
bsr
rcl
out
jnp
call
in
lea
push
bound
push
in
test
mov
mov
cmp
not
sti
jle
into
sti
outs
dec
cmc
je
and
or
mov
or
xor
ret
cmp
dec
ret
mov
lods
aad
retf
jp
cmp
push
in
cmc
call
inc
mov
in
out
mov
cdq
and
mov
xchg
pop
popa
ss
je
inc
jns
mov
push
pop
into
mov
iret
and
fisttp
dec
popa
test
and
jno
aas
test
sbb
xlat
xor
mov
out
mov
das
fisub
(bad)
aad
pop
pop
loopne
fcmove
inc
xchg
push
or
push
push
adc
test
xor
xchg
loope
mov
jb
xlat
mov
call
dec
xor
push
fst
mov
cmp
xor
mov
add
(bad)
das
cmp
jp
inc
repz
sub
into
out
jge
mov
ja
in
add
outs
icebp
xlat
cmp
jp
jne
push
inc
or
sbb
mov
inc
aaa
sub
jno
mov
aad
or
mov
outs
adc
lods
imul
cli
sbb
mov
jno
jecxz
xor
pop
(bad)
arpl
xchg
dec
movs
mov
cmc
or
cmp
repnz
stos
xor
es
(bad)
jp
(bad)
jns
push
in
xor
xchg
push
mov
push
mov
mov
inc
push
loope
pop
call
mov
das
sub
cmp
inc
inc
stos
(bad)
sbb
add
xchg
call
jg
pop
pop
stos
adc
mov
jg
xchg
sbb
cmp
int3
push
pop
es
leave
cdq
sbb
sub
fs
cdq
push
das
(bad)
nop
(bad)
xor
(bad)
fimul
fs
xor
scas
jecxz
xchg
daa
and
fnstsw
push
sti
and
(bad)
stos
pop
or
lds
cmp
mul
outs
inc
sbb
dec
stos
stc
sub
mov
sbb
adc
pop
lock
(bad)
ret
cmp
test
xchg
mov
stos
xchg
fisttp
mov
mov
dec
add
mov
ret
imul
les
cmp
push
daa
sub
std
icebp
scas
icebp
jae
push
sbb
jae
pop
or
jl
sub
(bad)
in
dec
adc
adc
mov
out
ret
sub
add
into
and
sub
xor
sub
sti
popa
jb
cs
jge
jge
pop
pushf
xor
or
js
in
out
mov
fcmovne
cmp
stos
dec
fdivr
(bad)
enter
addr16
and
push
add
push
mov
(bad)
scas
inc
pop
jg
push
fwait
call
fs
xchg
cs
lds
and
mov
and
dec
xor
pop
scas
mov
dec
xchg
fild
mov
ret
jmp
shl
mov
dec
fxch
jg
int3
repnz
jno
cwde
mov
sub
and
xchg
js
(bad)
daa
jl
out
dec
repnz
sahf
inc
test
(bad)
mov
fdivr
adc
dec
xchg
cmps
cmc
add
retf
inc
add
inc
or
test
test
arpl
sbb
or
push
cmp
xchg
fcmovne
mov
je
aam
pop
mov
retf
jecxz
jl
fs
add
lods
or
sub
cwde
cmp
icebp
add
(bad)
iret
mov
mov
sti
inc
xchg
xchg
mov
sahf
aaa
movs
adc
ss
xor
lds
mov
push
(bad)
in
dec
pop
pop
dec
cmps
ds
shl
das
cli
pop
mov
pop
dec
adc
into
sahf
fmulp
add
jnp
inc
hlt
in
jge
mov
push
mov
test
in
xor
mov
sahf
in
dec
inc
push
sbb
loopne
shl
sbb
ss
inc
or
cmp
test
rcl
stc
enter
int
mov
xlat
mov
ja
nop
adc
mov
rcl
movs
pop
rol
fmul
or
retf
and
xchg
inc
les
adc
mov
in
jbe
add
push
and
enter
loop
jne
stos
mov
jmp
outs
fwait
adc
cmps
mov
jne
dec
or
in
push
lahf
mov
cmp
adc
cmp
icebp
push
fisttp
int3
les
or
inc
adc
stc
dec
cmp
jae
mov
aaa
lahf
in
cld
pop
retf
out
lea
stos
ret
cmp
mov
jecxz
fdivr
jns
pop
and
leave
dec
rcr
aam
cmps
adc
in
out
je
out
into
gs
lds
sub
jl
test
mov
pop
mov
dec
imul
xchg
xchg
(bad)
retf
jnp
ret
sbb
cmps
cld
mov
mov
and
jecxz
push
dec
jecxz
les
mov
jmp
cmp
mov
add
loopne
cmp
mov
pop
cdq
add
and
aad
cmp
xor
cli
(bad)
pusha
popf
xor
push
gs
xor
je
push
or
movs
jae
xor
idiv
pop
cmp
(bad)
add
fs
add
cdq
dec
xor
push
ret
nop
mov
cwde
mov
or
jle
clc
imul
cmp
and
dec
ret
dec
mov
xchg
out
add
ret
xor
outs
cli
and
jg
jl
pop
sbb
clc
mov
data16
sub
pop
mov
cmp
add
dec
adc
cmps
lea
lods
enter
dec
mov
lahf
imul
aad
(bad)
xchg
aas
idiv
xchg
xchg
clc
pop
push
test
out
adc
and
pop
in
xchg
xchg
xchg
pop
or
and
mov
xchg
or
add
outs
xchg
pop
cld
sub
push
mov
rcr
jmp
mov
lahf
in
hlt
push
cmps
xchg
sbb
and
repz
aam
fadd
cmp
cmp
or
cs
xchg
cmp
ins
cmp
push
ins
mov
mov
xchg
sahf
dec
mov
fist
xchg
mov
cli
aas
sbb
pop
shr
cmp
mov
xor
dec
retf
add
and
cwde
cwde
jg
jno
cmp
mul
ret
adc
cld
rep
ja
out
mov
sub
pop
dec
jg
pop
xor
adc
push
lock
mov
arpl
inc
movs
xor
ss
hlt
xchg
dec
push
xor
fld
adc
jno
add
in
mov
fidivr
sub
cmp
cmp
jo
xchg
adc
int
xchg
push
add
data16
jle
dec
sub
std
movzx
mov
or
in
pop
inc
ss
sub
add
hlt
push
mov
call
popf
or
pop
sbb
dec
and
icebp
xchg
out
addr16
or
(bad)
std
and
pushf
mov
mov
ds
sbb
xor
xchg
dec
daa
sbb
adc
inc
lock
push
sub
dec
(bad)
xchg
hlt
ret
in
mov
jo
xchg
and
adc
ins
inc
mov
pop
dec
neg
loope
xchg
and
or
(bad)
retf
sbb
ret
(bad)
in
xor
outs
add
jecxz
cld
pop
cmp
or
dec
mov
pop
jmp
fbld
int3
inc
(bad)
push
out
dec
and
inc
repz
nop
sub
pushf
lock
push
jo
fadd
or
cdq
fnstsw
dec
repz
ja
xlat
adc
sub
mov
mov
dec
pop
int
arpl
popaw
cmp
lds
add
sar
icebp
shr
pop
xor
sub
jg
mov
int
jl
dec
out
scas
inc
ja
dec
mov
mov
mov
lods
bound
je
pop
jbe
popa
sbb
mov
pop
cmp
mov
xchg
jno
cmp
scas
mov
mov
adc
jb
add
pusha
lahf
adc
jbe
xchg
jmp
(bad)
pop
ffreep
or
add
outs
stos
rcr
jne
cwde
push
pop
lea
mov
sti
sti
pop
and
inc
dec
cmc
mov
add
push
mov
es
nop
adc
data16
mov
ret
push
xchg
pop
adc
neg
mov
bound
ror
clc
retf
iret
sahf
push
jg
pop
add
mov
test
cmp
enter
pushf
pop
xchg
ins
clc
adc
push
lahf
scas
test
cld
neg
cmp
sub
data16
sti
or
icebp
lahf
adc
dec
push
fcomp
push
retf
inc
sbb
push
fwait
jnp
lock
aad
data16
(bad)
inc
icebp
lahf
mov
ret
addr16
ret
sti
sbb
out
jp
or
add
pop
pop
push
nop
ja
sub
cs
pushw
jnp
fdiv
(bad)
fsubrp
pusha
xor
(bad)
imul
sahf
add
mov
inc
sbb
into
fcomp
or
stos
jg
pop
cmps
jbe
pop
lods
neg
cmc
pop
nop
push
dec
imul
ja
adc
push
push
dec
pop
jae
pop
sbb
dec
sub
xor
cmc
push
xchg
adc
push
or
pinsrw
in
push
dec
sbb
xchg
push
dec
sbb
pop
inc
inc
jecxz
inc
popf
pop
cmp
sub
mov
scas
xor
not
gs
lock
out
gs
xchg
hlt
mov
sbb
out
enter
in
pop
inc
in
mov
xor
mov
iret
imul
push
movs
jg
jp
rep
fwait
xchg
mov
mov
mov
xchg
cmp
mov
add
clc
push
jnp
jmp
mov
or
test
ror
cmp
in
inc
fcomp
sub
cs
xchg
call
(bad)
data16
pop
sub
pop
jmp
mov
mov
inc
push
cmc
push
ret
jae
cld
out
mov
ret
jl
int
push
addr16
xchg
rsqrtps
retf
push
adc
cld
jmp
and
stos
scas
push
mov
mov
pop
jmp
mov
lods
scas
mov
inc
loop
cmps
outs
push
stos
cli
dec
(bad)
adc
dec
jb
sbb
push
(bad)
in
out
mov
retf
mov
xor
mov
fld
out
xor
jbe
mov
aam
jmp
dec
sar
dec
dec
in
nop
jo
xor
cdq
mov
cmp
cdq
push
xor
pushf
push
gs
jbe
sub
cmps
sub
nop
or
test
iret
aas
jl
gs
es
out
addr16
mov
ror
xor
dec
xor
mov
add
in
scas
out
outs
jecxz
cli
(bad)
out
cdq
add
cmp
inc
lods
outs
mov
clc
cmp
inc
pop
pop
jbe
xchg
call
add
neg
or
jnp
leave
daa
daa
nop
add
xor
mov
mov
or
fdiv
popa
popf
fdiv
sbb
fnstsw
dec
aam
in
cmp
dec
les
push
out
cmp
leave
aaa
mov
cmp
dec
data16
aas
je
lds
into
lds
loope
mov
push
jecxz
mov
dec
pop
sbb
jb
shr
shl
sub
repnz
adc
and
jmp
add
js
fwait
mov
call
rcr
and
add
or
dec
xchg
hlt
add
mov
jae
sbb
cbw
lahf
data16
add
sbb
mov
mov
lahf
cli
xchg
iret
push
jmp
xchg
cld
mov
sbb
dec
xchg
ror
clc
fisubr
ins
cmp
daa
dec
int
push
clc
inc
mov
mov
and
test
fsubr
enter
adc
das
mov
mov
cmc
or
lock
iret
mov
xor
dec
and
sbb
ret
shl
(bad)
add
(bad)
xlat
scas
cmps
dec
pmullw
mov
cdq
xor
pushf
sbb
adc
mov
and
xchg
push
call
ss
ret
push
jns
or
cmc
lds
iret
nop
ror
bound
fldcw
and
rcl
mov
sub
les
(bad)
test
in
add
shr
jnp
ja
iret
push
xor
jne
cmp
lock
aam
jl
dec
mov
mov
sar
dec
fdiv
or
(bad)
neg
rcr
push
jmp
inc
icebp
xor
inc
pop
push
jp
xor
enter
stos
loopne
xchg
gs
dec
jns
and
inc
push
(bad)
mov
dec
sub
mov
test
mov
xchg
idiv
fst
adc
(bad)
arpl
sub
mov
pop
and
stos
mov
xchg
lahf
int3
push
jne
xchg
ret
pop
daa
mov
icebp
cld
icebp
(bad)
sbb
aaa
jo
call
test
and
lock
mov
cmp
pop
stc
adc
mov
mov
ret
jecxz
xchg
retf
pop
inc
iret
jmp
mov
out
sub
lods
and
xor
loopne
mov
fidivr
jb
sub
movs
lods
in
aaa
dec
cmp
sub
ret
nop
jmp
pop
(bad)
jbe
in
pop
add
shr
or
push
jl
pop
in
push
call
push
movs
xor
cmp
pushf
fbstp
mov
pop
neg
jmp
or
test
mov
mov
pop
sbb
in
in
dec
xor
dec
repz
out
cmp
movs
sbb
mov
in
dec
(bad)
xchg
in
lahf
out
cdq
popa
jno
lea
mov
ins
add
cmp
cmp
shl
push
ror
out
out
mov
or
movs
sbb
add
jb
sbb
cs
neg
push
and
(bad)
and
sub
loop
cli
fbld
mov
pusha
in
mov
mov
and
movs
js
mov
cmp
stos
pop
add
lods
inc
jg
xchg
add
push
inc
lea
aad
sub
jne
fcom
push
cmp
mov
pop
mov
dec
sub
dec
and
adc
adc
xlat
out
(bad)
lods
push
pop
mov
addr16
mov
mov
sbb
add
shl
std
xor
mov
sbb
jb
pop
xchg
ds
pop
jp
jecxz
div
int3
mov
adc
pop
xchg
push
scas
push
mov
inc
fisubr
jmp
in
jb
jg
and
(bad)
mov
fs
ins
jecxz
pop
xor
dec
(bad)
mov
fwait
mov
mov
imul
nop
jbe
ror
loop
mov
or
cmc
sbb
xor
scas
clc
pop
pop
dec
dec
nop
aam
rcr
stos
mov
stos
sub
pop
std
mov
inc
pop
dec
movs
daa
lahf
pop
xchg
outs
push
adc
sub
add
bound
lods
ret
push
inc
mov
stc
dec
add
adc
in
mov
fisttp
lea
fdivr
sbb
pop
imul
sar
inc
retf
out
aam
xlat
and
into
cmp
jne
(bad)
jnp
xchg
sbb
push
mov
sub
mov
cmp
mov
ficomp
ror
push
gs
xchg
push
test
sbb
sbb
sbb
and
jge
ret
sub
push
dec
(bad)
call
push
inc
mov
shl
pop
test
jecxz
mov
shl
add
sti
mov
inc
les
and
inc
xor
dec
mov
xchg
data16
cmc
sub
ret
xchg
fs
shl
out
fisubr
cmps
(bad)
fnstenv
xchg
sub
stos
mov
pop
push
ja
test
jmp
jno
loopne
icebp
mov
out
inc
int3
shl
pop
lds
sub
pop
aad
mov
mov
call
shl
aaa
mov
ds
inc
add
sub
icebp
sbb
add
out
adc
or
or
dec
pop
inc
shl
add
jecxz
mov
das
cli
jo
fidiv
mov
call
and
inc
jmp
or
arpl
(bad)
jns
adc
aad
iret
popa
(bad)
outs
fwait
adc
and
pop
jno
div
xor
xchg
push
test
add
cld
sbb
scas
js
sbb
jae
iret
popf
aas
std
inc
push
xchg
(bad)
fadd
lods
pushf
pop
cdq
lea
ss
lock
inc
sub
rol
xor
add
(bad)
fdivp
movs
push
jl
cmp
mov
sar
and
arpl
lea
cmc
cmp
aas
pop
push
arpl
mov
outs
cmc
pushf
push
call
pop
add
push
fist
in
and
sahf
and
sbb
xor
cmp
adc
ja
xchg
xor
mov
out
add
mov
imul
test
jo
cmp
xor
in
mov
in
adc
nop
pop
loopne
adc
sub
push
into
push
retf
aam
bound
sub
je
test
(bad)
lock
and
jg
cdq
cld
push
sti
xchg
inc
xor
xchg
pop
inc
push
cmp
and
push
(bad)
aam
dec
fidivr
and
jno
push
shl
call
xor
cmc
adc
and
fidiv
xor
pop
and
fs
adc
popa
loopne
aam
imul
xor
in
add
stc
sub
and
outs
scas
rcl
jne
out
or
test
jne
add
and
movs
mov
dec
call
cs
sub
ret
hlt
lea
fnstenv
xor
fldenv
xchg
dec
mov
jae
shl
clc
mov
loopne
shl
dec
dec
pop
jne
jae
jbe
sub
fist
cwde
or
cli
xor
imul
mov
push
jae
mov
mov
nop
pop
lods
cwde
jmp
sub
jns
(bad)
pop
jecxz
stos
inc
int3
into
mov
pop
and
das
sti
xchg
mov
sub
and
js
test
fwait
mov
(bad)
cmp
dec
jo
sbb
imul
lods
inc
jno
dec
icebp
cmp
mov
retf
fnstcw
xchg
xor
cmc
sbb
adc
int
iret
stc
(bad)
(bad)
xchg
jmp
and
jne
xor
lea
mov
mov
es
loopne
ins
ins
adc
je
test
dec
dec
sub
mov
mov
and
(bad)
int3
push
fs
je
(bad)
xor
sbb
mov
fs
xchg
into
xchg
add
xchg
jecxz
cmps
(bad)
ds
cld
dec
dec
mov
inc
addr16
rcr
out
out
jmp
adc
fimul
pop
sub
or
retf
lods
and
mov
(bad)
mov
stc
clc
xor
cwde
mov
mov
or
ss
or
inc
out
adc
mov
jbe
sbb
adc
xchg
aam
adc
div
mov
xlat
dec
mov
(bad)
ret
push
pop
fadd
sbb
dec
ret
je
mov
rol
dec
mov
(bad)
in
(bad)
nop
pop
jnp
hlt
jg
dec
fisubr
gs
(bad)
mov
inc
or
ds
test
outs
aas
repnz
jo
cmc
data16
(bad)
inc
xchg
stc
xor
cmp
inc
je
hlt
stc
dec
inc
and
jae
push
stos
je
cdq
xor
jne
mov
mov
(bad)
mov
mov
pop
lods
add
fsub
stos
ret
dec
in
sub
daa
in
mov
xchg
movs
icebp
mov
call
test
or
mov
fdivr
push
add
sbb
xor
and
fwait
out
fsubr
or
lock
cmps
in
and
aaa
arpl
outs
add
movs
jnp
cmp
dec
sub
add
or
dec
cli
jecxz
push
xchg
sub
cmps
movs
stc
movs
jmp
daa
push
test
das
mov
aam
jbe
scas
(bad)
or
pop
ret
mov
jae
(bad)
call
(bad)
push
loope
test
xor
adc
sbb
cdq
fs
test
inc
(bad)
repz
sub
(bad)
inc
xlat
push
mov
sar
iret
sub
pop
sahf
cmp
ret
scas
or
add
bound
push
sub
aad
nop
std
(bad)
cmp
dec
hlt
push
shl
inc
jb
rol
mov
ins
xchg
mov
hlt
cmc
adc
movs
push
xchg
and
test
call
in
(bad)
div
xchg
cld
push
cmp
cmps
dec
push
add
sub
pop
push
loop
cmp
loopne
shr
mov
xlat
popa
mov
pop
dec
inc
imul
add
mov
int
cmp
adc
jecxz
popa
or
mov
xlat
ins
lds
cmp
sub
pop
push
push
or
or
fwait
movs
fidiv
or
pop
or
(bad)
pop
sub
mov
test
sahf
cli
cld
lods
fisttp
sbb
std
cmps
nop
(bad)
jle
lahf
das
out
fs
(bad)
pop
mov
push
jae
sbb
daa
fadd
jno
arpl
les
adc
inc
dec
(bad)
loope
sbb
daa
push
push
out
cmp
sbb
lods
jle
ins
sub
push
mov
mov
add
in
pmuludq
jmp
hlt
jno
iret
jmp
adc
jne
push
dec
gs
jne
cmps
pushf
fistp
inc
xchg
aas
jge
inc
jmp
dec
je
push
and
test
mov
pop
mov
dec
jmp
jae
xor
daa
jge
sub
mov
outs
push
xchg
test
scas
inc
mov
xchg
mov
scas
jmp
fistp
cmc
les
out
sbb
mov
shl
mov
jb
adc
arpl
js
jge
push
pop
or
out
js
fidivr
(bad)
sti
test
and
jge
and
push
fisttp
mov
das
and
mov
ror
(bad)
test
adc
fs
cs
cmp
or
hlt
mov
call
out
xor
int3
mov
sbb
cmp
repz
xlat
outs
push
pop
jmp
(bad)
popa
addr16
or
mov
popa
adc
push
mov
pop
int3
in
push
sbb
mov
mov
mov
dec
mov
sub
cmp
jecxz
mov
jmp
jecxz
pop
push
mov
sub
pop
pop
mov
sub
ror
and
(bad)
out
sub
arpl
mov
jl
call
test
sbb
into
jmp
(bad)
loopne
je
and
pop
aaa
lods
mov
lods
fcmovnu
push
frstor
pop
push
mov
aas
test
je
adc
mov
imul
jle
xchg
repnz
js
mov
jnp
push
cmp
xor
imul
adc
sbb
(bad)
mov
mov
cmps
jo
popa
add
fs
retf
cwde
out
xchg
mov
pop
mov
enter
mov
sar
(bad)
test
test
add
in
sub
jae
push
loopne
jge
stos
rcl
outs
dec
cmp
outs
jns
sahf
xor
lds
sbb
pop
push
fcmovnb
cmp
cmps
lds
jle
inc
iret
sbb
lods
jo
pop
cmp
mov
push
fadd
cmp
les
xchg
loop
or
push
div
add
pop
and
and
mov
aas
or
test
xchg
adc
aas
jp
cmp
out
mov
xchg
addr16
iret
xlat
or
pop
add
les
push
es
sahf
out
adc
ret
dec
mov
xchg
mov
movs
add
push
in
lods
pavgw
movs
and
dec
fisttp
dec
add
ficom
pop
test
in
out
adc
adc
cmps
rol
ins
and
dec
out
daa
adc
or
aad
aaa
pop
jo
push
cmc
mov
clc
shl
xchg
add
inc
jbe
test
dec
jae
sub
cmps
out
(bad)
lahf
lock
ja
jl
jg
(bad)
popf
(bad)
mov
adc
aad
jg
inc
jecxz
call
imul
pop
sbb
int
mov
cli
scas
daa
xchg
mov
in
mov
call
js
sub
(bad)
aam
repnz
clc
and
jns
dec
test
xor
in
les
rol
mov
ret
pushf
dec
in
mov
or
xchg
addr16
(bad)
(bad)
ffreep
test
mov
mov
clc
sbb
jg
push
sub
rcl
dec
mov
mov
pop
xchg
int
iret
enter
sub
test
sbb
adc
and
mov
cmp
imul
jecxz
jge
cmp
shr
ret
jae
jo
cmp
mov
sub
(bad)
stc
cwde
mov
gs
mov
add
loop
mov
jno
or
dec
shl
inc
add
mov
add
xchg
(bad)
pop
retf
popa
ds
hlt
xor
push
add
xchg
adc
retf
ror
icebp
fcomp
sub
mov
sub
popa
movs
lods
xchg
test
xor
test
jae
adc
or
mov
arpl
in
loopne
sub
or
inc
pop
lods
sbb
retf
inc
fs
movs
inc
xor
gs
scas
test
or
rcl
sbb
mov
cmc
das
and
jge
pop
cmps
jle
arpl
(bad)
rcl
stos
data16
repz
into
cld
pushf
cwde
dec
int3
stos
add
sub
hlt
stc
loop
ss
data16
imul
das
int3
inc
push
xchg
mov
push
adc
mov
(bad)
mov
mov
cmps
adc
daa
fsub
mov
popa
mov
cmc
scas
jnp
xor
push
js
in
out
lahf
inc
rol
push
leave
mov
(bad)
fcom
or
(bad)
add
clc
pop
cmps
gs
out
aaa
ja
mov
and
test
sub
adc
xor
ja
jp
xchg
addr16
push
push
rcl
mov
ja
cs
xchg
std
cmp
ror
or
stos
pop
add
lds
cmp
out
and
inc
std
icebp
shl
lea
pop
imul
sbb
lods
mov
sbb
pop
xor
push
xor
sar
jp
sub
pop
pop
and
repz
in
rcl
xchg
nop
in
cmp
shl
inc
pop
fst
std
iret
cmp
ja
adc
sbb
xchg
aam
push
mov
or
add
retf
adc
jecxz
mov
data16
or
pusha
shl
fcomp
mov
in
popf
sub
mov
test
fldcw
push
rcr
xor
outs
fist
xor
movs
add
daa
xor
push
inc
inc
test
xchg
cmp
or
addr16
test
(bad)
jle
mov
outs
mov
mov
bound
mov
or
sar
jbe
jno
mov
inc
xchg
push
add
mov
push
cmp
jb
add
addr16
jb
scas
aas
rol
xchg
aas
add
xchg
addr16
add
mov
xchg
sbb
or
inc
push
and
loop
fidiv
adc
and
jmp
mov
and
rol
gs
inc
jae
out
shl
sbb
scas
mov
movs
add
sub
in
sbb
sar
test
shl
js
enter
dec
ins
lock
iret
mov
idiv
dec
(bad)
adc
xlat
mov
fwait
mov
jo
mov
pop
test
add
xchg
test
dec
fs
xchg
sub
call
in
pushf
movs
push
pop
in
pop
scas
pushf
xlat
dec
adc
jb
jmp
jb
outs
pop
jmp
jmp
or
cmp
movs
sbb
jb
icebp
jecxz
dec
popa
mov
xlat
daa
pusha
bound
imul
lods
jle
shl
fwait
rol
shl
add
pop
push
push
(bad)
ficomp
inc
sub
nop
sub
pop
sub
push
sbb
jmp
aas
add
movs
xor
or
je
lahf
mov
add
xchg
add
shr
or
xchg
pop
push
les
jno
or
lock
add
fwait
jne
pop
push
mov
mov
arpl
fild
mov
mov
adc
aam
pushf
mov
(bad)
jo
aaa
dec
push
sti
mov
test
scas
cmp
popa
xchg
test
or
xchg
add
sbb
xchg
cmps
js
imul
leave
pop
add
ins
in
mov
movs
in
mov
cmps
aas
push
xchg
inc
jo
inc
cs
loopne
popa
lahf
mov
jnp
jb
xchg
jg
loop
or
(bad)
jmp
mov
adc
or
(bad)
loopne
xor
xor
jbe
bound
int3
add
lock
jno
add
mov
jne
loope
loop
cwde
call
in
das
lods
lock
gs
sahf
in
pop
jno
xor
repz
or
into
lods
mov
mov
fnstenv
int3
cmp
xlat
out
aam
pop
inc
sahf
sbb
ss
xor
loope
add
cdq
arpl
or
add
lock
xor
or
(bad)
sub
repz
xchg
mov
mov
pop
mov
pusha
or
das
push
fld
inc
sbb
xchg
sti
dec
adc
fwait
push
popa
lds
sub
sahf
shl
in
push
add
dec
pop
cli
fld
push
pop
pop
sub
cdq
push
inc
push
sbb
sbb
pop
jl
sbb
daa
sbb
jae
or
icebp
adc
adc
clc
mov
adc
xor
sbb
test
jnp
dec
daa
jl
xchg
daa
test
out
fldenv
mov
cmp
pop
mov
adc
xor
test
aam
add
lods
push
pop
int3
hlt
xchg
cmps
mov
push
popf
(bad)
push
call
hlt
xor
scas
fidiv
fwait
jnp
inc
dec
and
popa
loope
pop
(bad)
ja
dec
bound
xchg
(bad)
enter
pop
mov
ror
sub
mov
and
inc
sub
and
dec
mov
sub
shl
dec
mov
jns
lahf
cmp
xchg
jmp
out
in
dec
push
adc
fisttp
retf
pop
dec
fisub
mov
cmps
test
mov
pop
ret
mov
sbb
push
aam
scas
mov
icebp
popa
sets
ins
scas
(bad)
js
out
clc
scas
sbb
movs
into
dec
mov
dec
pushf
xchg
xchg
aaa
jno
retf
sar
push
loop
loopne
out
shr
jle
movs
cs
add
jbe
push
or
test
and
adc
xor
dec
sti
mov
mov
lds
cmp
ror
dec
loopne
bound
test
adc
cmp
add
fnstsw
test
pusha
jecxz
jg
xor
aas
pop
mov
cdq
std
push
xor
aaa
repnz
or
fild
or
xchg
retf
(bad)
rcr
pop
test
adc
xor
(bad)
ror
outs
or
sub
and
imul
push
(bad)
mov
pslld
cli
rep
mov
mov
inc
push
addr16
cmc
and
pop
pop
jmp
scas
lock
mov
lods
inc
dec
or
out
enter
dec
lock
dec
imul
(bad)
push
out
jge
(bad)
mov
test
das
jmp
jl
loopne
mov
jecxz
in
add
bswap
sbb
push
cmps
dec
mov
add
fadd
push
sub
pushf
mov
pop
scas
icebp
out
add
mov
push
(bad)
jp
fbstp
mov
mov
lea
xor
nop
pop
ror
jge
shl
popf
or
inc
cmps
add
pop
call
push
xchg
fcmovbe
outs
pop
jnp
xor
push
ror
mov
das
sub
dec
jnp
sbb
inc
gs
loop
cmp
bound
icebp
mov
xor
movs
sub
outs
es
push
aas
int
cli
inc
mov
mov
and
mov
mov
push
imul
cmc
loope
cmp
test
lds
dec
mov
mov
imul
movs
aam
push
cmp
fmul
or
shl
cmps
out
or
jg
mov
pop
xor
ror
lahf
push
cmp
pusha
add
sbb
add
pcmpeqw
enter
pop
or
dec
pop
repz
mov
rep
out
jmp
sub
sbb
fdiv
add
sbb
dec
mov
ret
mov
imul
in
mov
pusha
rcl
or
mov
and
adc
in
xchg
outs
mov
jg
ficom
sbb
fadd
fidivr
int3
cmps
fcomp
pushf
fwait
or
and
adc
mov
sub
pop
sbb
sar
(bad)
jbe
pop
jle
inc
div
dec
push
jg
pop
inc
ins
fisub
mov
dec
mov
sbb
popf
pop
add
scas
retf
sub
xor
arpl
daa
add
adc
call
scas
cs
push
les
mov
addr16
cmp
add
fcom
je
ins
mov
xor
aad
add
push
pop
rol
cmc
cmp
dec
jecxz
add
shl
loope
sub
cdq
aas
jge
loopne
into
mov
loope
adc
dec
dec
xchg
sub
cld
pusha
ss
xor
(bad)
rol
retf
out
cmp
xchg
shr
(bad)
out
(bad)
dec
xchg
mov
push
ret
addr16
stc
outs
adc
pop
call
stos
les
jns
xor
or
daa
pop
retf
jo
jae
lods
mov
inc
push
jb
cmp
inc
mov
into
mov
or
push
jae
enter
ja
add
sbb
mov
pop
rol
inc
pop
xchg
or
leave
data16
cs
arpl
inc
fst
nop
mov
clc
cld
leave
out
pop
mov
mov
rcr
cwde
add
movs
(bad)
push
xchg
pop
mov
pop
adc
and
push
ror
mov
pop
jge
ret
xor
fadd
or
add
shr
mov
adc
ss
clc
rol
mov
repz
gs
pusha
xlat
and
je
pop
cmp
jg
rcr
mov
inc
xor
ja
jle
jae
jmp
loop
outs
mov
adc
push
push
push
xchg
push
loopne
mov
mov
fwait
lds
leave
push
inc
xchg
add
or
cmp
mov
mov
xchg
and
jecxz
mov
xchg
or
mov
das
scas
cwde
jbe
and
hlt
sahf
mov
mov
out
and
push
cmp
sub
std
mov
xchg
movs
imul
mov
imul
push
enter
lods
ret
pop
dec
mov
lods
adc
inc
adc
xor
inc
inc
lea
add
js
imul
mov
test
(bad)
scas
xchg
mov
shl
add
add
pop
lock
mov
inc
jg
inc
xor
aam
sbb
loope
pop
add
xchg
loope
je
dec
call
shl
fld
pop
das
out
lock
jnp
pop
mov
add
cmp
lock
fadd
jae
dec
pop
lods
or
aam
rcl
push
retf
inc
leave
retf
loopne
dec
cmps
(bad)
call
pop
clc
pop
mov
aad
neg
in
dec
iret
or
sbb
mov
out
dec
ret
popf
out
jo
xor
jmp
scas
adc
sub
jbe
cmp
or
xchg
test
ror
rcl
push
jno
retf
aam
inc
icebp
in
mov
cld
cmp
mov
mov
and
cmovb
add
(bad)
out
jmp
cmp
xchg
ficomp
fsub
xor
loopne
jae
scas
scas
pop
jo
cmp
mov
and
shl
jp
pop
mov
(bad)
es
in
inc
inc
mov
inc
(bad)
in
mov
fisub
outs
dec
dec
clc
jo
shl
sub
mov
xchg
retf
(bad)
sbb
cmp
loope
jo
imul
mov
xchg
mov
or
imul
inc
ja
popf
xchg
pop
shl
repz
xchg
mov
test
ret
sti
mov
add
in
data16
repz
jb
sahf
adc
bound
add
cld
sahf
and
jno
movs
sbb
xchg
(bad)
and
jo
(bad)
cli
mov
sub
and
in
cmp
mov
out
js
inc
push
add
jnp
gs
mov
daa
int
mov
pop
inc
jmp
pop
jne
(bad)
adc
aad
ret
lahf
call
jmp
loopne
ret
out
or
mov
dec
(bad)
retf
fidiv
ins
test
add
loope
cmp
ret
pop
mov
sub
sub
mov
js
sti
imul
mov
(bad)
mov
cmovb
dec
pop
(bad)
push
mov
cmps
jbe
jnp
push
fs
in
pop
sbb
mov
repnz
jo
in
jp
shrd
loope
loop
mov
cmp
pop
shl
push
jge
mov
jb
pop
fnsave
or
add
mov
mov
leave
xor
xchg
inc
pushf
das
fnstcw
xor
mov
jno
pop
out
and
es
icebp
out
adc
xor
push
dec
ins
movs
js
not
popf
(bad)
cli
out
gs
mov
inc
repz
ret
or
pop
adc
mov
adc
iret
aas
in
and
sbb
aad
sub
(bad)
cli
pop
push
inc
in
jbe
ret
push
jbe
iret
jnp
mov
rol
adc
data16
leave
jb
xor
repnz
adc
and
and
mov
call
adc
into
xchg
jge
or
ret
xor
iret
and
add
mov
jae
pop
pop
out
(bad)
sbb
jle
cs
lods
test
mov
call
add
and
aam
mov
enter
mov
mov
sub
sbb
nop
fwait
push
in
mov
sbb
sub
das
jnp
or
call
or
mov
add
gs
inc
mov
iret
(bad)
neg
ins
and
and
and
ins
jns
(bad)
jno
xor
mov
lods
and
pop
inc
or
lods
dec
popa
dec
daa
cwde
cmc
pop
(bad)
jbe
aam
cmps
ds
das
aaa
xchg
cli
call
jp
enter
mov
sub
repnz
arpl
(bad)
jecxz
xor
inc
ja
jae
sub
daa
mov
pop
hlt
xchg
mov
das
cmps
push
stos
es
sahf
and
fist
sub
adc
hlt
xor
inc
cli
mov
fldcw
xor
sbb
aad
mov
int
mov
sub
jbe
lods
jmp
sti
cmp
dec
sbb
int
ja
repnz
sbb
out
jmp
dec
xor
sub
push
in
push
rcr
sar
leave
rcl
outs
push
out
mov
in
xor
jb
mov
inc
int
xor
xchg
test
jno
mov
dec
enter
push
pop
aad
sbb
or
int
les
mul
or
cmp
fs
bswap
loope
pop
xor
stos
ja
xchg
pop
shl
ins
popa
fwait
sbb
test
in
mov
sub
xor
rol
pop
cmp
lock
cmovnp
imul
ror
push
shr
ss
and
add
or
pop
cmp
cmp
loop
adc
xor
sbb
pop
je
adc
dec
test
(bad)
mov
dec
pop
dec
ja
scas
pop
push
inc
mov
inc
pop
jmp
push
lds
add
dec
add
add
test
cmp
(bad)
lock
das
pushf
inc
push
outs
in
mov
ror
mov
push
mov
mov
xchg
cmp
mov
(bad)
cmp
and
in
call
das
and
xor
dec
out
outs
stc
aas
xchg
add
mov
add
xchg
sbb
mov
push
xor
inc
in
mov
aas
push
dec
and
xor
es
xor
clc
loopne
xchg
repnz
dec
jo
mov
cmp
scas
mov
add
cwde
mov
jo
popa
add
pusha
adc
es
dec
mov
mov
rcr
mov
out
add
icebp
inc
bts
sub
mov
test
sub
sbb
pop
pushf
rcr
es
fs
fnsave
pop
jl
adc
mov
in
push
cdq
sub
in
dec
or
sbb
popa
push
mov
mov
loope
shl
add
in
daa
pushw
scas
test
sbb
or
mov
mov
cmp
loop
add
mov
push
cs
pop
sbb
test
ins
or
inc
je
ss
fbld
and
sub
fmul
and
cdq
push
jbe
pusha
jmp
push
xor
scas
mov
inc
jno
dec
mov
int3
ret
fs
cmp
push
aas
pop
push
jbe
cmps
and
xchg
lods
pop
fistp
test
xchg
add
movs
pop
repnz
fldenv
ins
dec
fcmovnb
push
xor
wrmsr
or
adc
push
test
into
pop
adc
or
out
xor
mov
push
popa
jmp
push
mov
lea
cmp
cs
retf
jae
lock
cld
into
or
(bad)
mov
add
pop
xchg
xlat
xor
sub
add
push
outs
lods
loopne
push
sub
mov
in
pop
stc
mov
leave
ret
adc
sub
pop
mov
mov
xchg
lock
add
mov
fst
xchg
jg
(bad)
bound
mov
fimul
push
push
adc
pop
and
mov
in
xlat
movs
cmps
addr16
mov
xchg
push
or
mov
aas
ficom
pusha
sbb
imul
xchg
lahf
xor
jge
cmp
pop
mov
or
hlt
hlt
adc
push
lahf
test
out
fwait
xor
lods
das
mov
pop
ins
xor
jmp
and
stos
push
xor
and
bnd
int
xchg
add
sub
das
fsubr
cld
retf
xchg
push
fild
pushf
pusha
lds
xchg
rcr
arpl
in
sti
ds
xchg
and
xor
in
iret
push
sbb
cmovp
imul
add
inc
pop
sub
sbb
call
mov
jno
stos
cld
push
mov
push
jmp
nop
(bad)
je
cmc
mov
sahf
add
jg
and
rol
pushf
xchg
pop
int3
jle
test
lds
shl
test
push
xchg
data16
mov
pcmpgtb
(bad)
or
pop
cmp
mov
mov
fisttp
out
mov
in
test
adc
bound
pop
scas
sub
scas
pop
jno
out
inc
sub
adc
sub
cmp
shl
loope
sahf
shr
imul
dec
call
pop
dec
and
repnz
dec
addr16
stos
dec
ror
push
push
arpl
dec
add
outs
ret
lar
cmp
mov
fwait
aas
mov
fimul
mov
push
xchg
into
pop
ds
leave
cmp
shr
sub
in
pop
adc
xchg
call
call
std
pop
jne
push
pop
inc
add
lock
sub
ja
out
dec
gs
cdq
xchg
out
out
mov
pop
std
inc
fucompp
dec
xchg
pop
xor
sub
sub
shl
sbb
jge
in
fisubr
and
(bad)
dec
mul
das
mov
cmp
pop
xchg
mov
and
sar
pop
int3
inc
xchg
das
push
and
push
rcl
pop
cmp
mov
pop
imul
mov
out
mov
gs
and
push
and
sub
test
outs
dec
dec
sub
in
out
imul
push
popf
ror
fwait
pop
inc
xabort
pop
and
pushf
jmp
mov
ds
stos
inc
jne
shr
sar
lahf
test
or
cli
pusha
dec
pop
add
dec
cmp
add
(bad)
sti
cmp
inc
jle
loop
adc
sti
jge
mov
jmp
adc
in
mov
sub
into
mov
sbb
in
xchg
xor
out
xchg
out
mov
sbb
or
in
add
adc
ror
push
cli
lea
outs
fwait
pop
adc
outs
cmp
push
mov
test
mov
lea
and
js
pop
and
not
and
cmp
movs
aas
lds
inc
mov
inc
mov
outs
pop
sub
rcr
jnp
mov
bound
xchg
aam
mov
or
arpl
in
fimul
dec
iret
cld
inc
and
cli
push
inc
daa
out
or
push
mov
dec
pop
mov
in
scas
push
pop
fdivr
adc
aam
clc
jle
es
cmps
aam
pop
fidiv
retf
push
xor
arpl
sahf
std
gs
dec
test
(bad)
movs
jl
out
loop
arpl
popa
xchg
inc
dec
(bad)
lods
adc
test
dec
mov
cmps
xchg
xor
mov
ds
rcr
sahf
sbb
repnz
mov
add
or
xor
and
cmp
or
sub
fist
push
lock
cmp
shr
ins
cmc
sub
nop
sbb
das
movs
aaa
in
add
adc
repz
pop
sub
arpl
jmp
mov
adc
add
xlat
call
(bad)
push
add
cmp
shl
mov
fdivr
push
ja
jecxz
jg
popf
mov
mov
scas
jnp
sbb
pop
mov
xchg
dec
xor
jns
loop
into
not
pop
retf
fisubr
daa
arpl
jne
mov
into
addr16
mov
mov
cmp
cmp
push
pop
ds
cmp
push
repnz
scas
call
ss
mov
stc
pop
cmps
outs
cdq
dec
arpl
mov
mul
dec
xchg
pop
add
xor
adc
mov
icebp
addr16
or
jmp
sbb
test
iret
popf
xchg
adc
fnstenv
jae
or
inc
jmp
jnp
xchg
mov
mov
mov
xchg
(bad)
or
cmp
and
pop
test
pop
iret
lock
dec
cs
cs
imul
cdq
sbb
push
mov
fwait
jg
enter
ficom
sub
into
mov
xchg
test
inc
xchg
fwait
cmps
jle
and
push
and
popa
cmp
sahf
ret
leave
cmp
hlt
sub
dec
jge
je
in
(bad)
stc
dec
out
js
add
or
test
inc
ins
mov
into
dec
sbb
mov
enter
jo
test
or
arpl
mov
test
mov
fisttp
inc
push
add
sbb
adc
adc
retf
push
or
xchg
repnz
push
js
popa
aam
mov
mov
pop
cmc
sbb
imul
fisttp
dec
lea
xor
fist
(bad)
mov
mov
inc
or
pop
cmp
out
es
dec
imul
jl
je
xchg
dec
fstp
fadd
mul
pop
sub
inc
mov
fbld
stc
xchg
out
mov
call
mov
or
inc
int
test
cmps
out
mov
xor
cli
mov
dec
stc
stc
jns
pop
retfw
jo
test
pushf
(bad)
dec
xchg
add
fist
push
repz
fisubr
jp
xchg
jmp
sahf
aas
xor
pop
mov
jbe
xor
iret
jl
imul
pop
xchg
ins
mov
xor
movs
stc
sub
pop
cmp
scas
xchg
sub
jecxz
cmc
jge
and
pop
mov
lea
(bad)
repz
fs
pop
add
rcl
lds
rol
ins
sbb
pop
mov
inc
and
lahf
ins
sub
xor
dec
and
lds
sbb
fcmovnb
cmp
in
call
inc
ror
enter
sub
leave
mov
push
push
mov
or
jge
xchg
stos
aaa
mov
idiv
repz
mov
inc
xor
ins
les
and
ds
inc
pop
sbb
dec
rcr
sti
shl
pop
mov
pop
push
pop
jno
test
sub
lock
fdivr
popa
xor
jbe
int3
ins
out
xchg
(bad)
hlt
mov
js
jbe
sbb
pop
push
rcl
nop
push
das
or
mov
in
arpl
push
jns
outs
pop
ss
retf
jmp
push
lods
push
nop
dec
ja
sub
jno
out
xchg
mov
mov
fisttp
int3
fsub
ds
imul
(bad)
ror
xchg
aad
mov
pop
inc
lock
imul
sub
mov
dec
pop
xchg
adc
xlat
sar
jbe
sbb
shl
rcr
push
cmc
int3
dec
and
pusha
mov
cmps
sahf
sbb
int
dec
sub
jg
mov
(bad)
jp
das
push
mov
xchg
imul
sbb
fwait
les
ja
mov
ins
sub
clc
not
inc
inc
cmps
jne
add
push
cmp
out
xchg
les
pop
rcl
inc
sahf
sub
mov
fisub
imul
ror
in
mov
pop
or
cli
ds
gs
imul
xor
(bad)
xchg
in
sbb
or
or
in
and
sbb
mov
add
adc
adc
shl
movs
aas
cmp
sahf
mov
jo
into
sub
fcom
fmul
ss
repnz
jns
loop
cmc
mov
cmc
pop
in
xor
ins
cli
sub
addr16
cmp
test
stos
cmp
ins
in
fs
push
stos
xor
jecxz
loope
xchg
rcl
mov
imul
pop
sbb
sbb
inc
rcr
mov
out
mov
inc
outs
gs
jp
lea
add
call
fsub
bound
dec
mov
cmps
inc
inc
mov
cmp
cwde
pop
into
mov
test
jmp
popa
pop
in
mov
and
pop
stc
sub
stc
xchg
adc
int3
jp
pop
pop
inc
adc
repnz
lds
movhps
aad
rol
add
es
push
jg
push
sbb
adc
pop
mov
repz
stos
int
mov
jne
add
imul
les
pop
xchg
mov
outs
push
dec
jg
inc
mov
sub
es
sub
xlat
mov
stos
repnz
jbe
out
jl
call
adc
xchg
call
mov
push
ss
ds
push
ja
das
ret
mov
aaa
xor
cmps
cmp
fsub
test
push
out
fidiv
nop
loop
sar
push
scas
test
mov
ret
fcomp
sahf
adc
pusha
cmp
push
mov
cmps
ret
add
fnstcw
lods
jecxz
ret
test
and
and
shl
pop
int
add
cld
mov
scas
movs
fdivr
out
in
mov
nop
inc
arpl
inc
adc
fsubr
mov
push
cmp
dec
out
sbb
dec
inc
stc
ss
cmp
(bad)
pop
jmp
popa
inc
xchg
ja
mov
dec
adc
popa
call
out
or
adc
lods
dec
cmp
add
dec
mov
arpl
sub
lods
push
cmc
add
add
jmp
pop
iret
neg
cld
test
cmp
jnp
mov
rcr
or
(bad)
add
(bad)
xchg
inc
dec
dec
mov
mov
outs
ja
or
cld
and
push
push
shl
push
or
push
sahf
xor
push
mov
mov
inc
loope
add
lahf
inc
jo
mov
ret
imul
add
iret
loope
cmp
xchg
sub
sbb
mov
jl
popf
mov
retf
pop
out
xchg
hlt
dec
jbe
mov
add
lahf
inc
cwde
lods
movs
cs
jge
mov
add
in
push
add
jno
xchg
(bad)
in
and
sub
and
cmp
inc
xchg
push
arpl
loope
fs
cmps
in
es
push
ret
fldenv
push
inc
dec
dec
add
icebp
or
inc
mov
cmp
mov
mov
add
pop
xlat
retf
mov
jmp
xor
dec
outs
out
mov
dec
test
pop
mov
inc
mov
stc
test
fbld
mov
dec
dec
mov
push
ret
or
fimul
inc
fst
mov
out
push
mov
pop
add
out
mov
dec
inc
add
jl
mov
cmps
ja
xor
or
stos
jp
pop
repnz
xchg
push
inc
nop
pop
sbb
nop
ficom
sub
mov
mov
jmp
xchg
inc
sbb
xor
adc
(bad)
fbstp
mov
mov
ds
mov
xlat
inc
xchg
push
xchg
mov
add
test
(bad)
loopne
mov
pushf
sub
inc
push
jnp
clc
mov
pop
popf
movs
stos
cmp
shl
jno
rcl
xor
mov
movs
pmullw
mov
leave
cmp
stos
jmp
sbb
loop
sub
out
sbb
pop
and
repz
iret
cmc
jecxz
stc
xchg
(bad)
xchg
cmp
sbb
pop
fisub
in
or
mov
mov
int3
cmp
fiadd
cmp
es
jl
or
adc
aas
cmp
rcr
jge
sub
pushf
dec
and
mov
push
cs
imul
push
adc
inc
push
inc
xor
pop
movs
in
xor
ror
pop
sbb
mov
sub
jb
fs
mov
lds
sub
retf
cmp
ins
call
pop
cmp
mov
or
cdq
push
mov
inc
test
push
mov
gs
test
mov
daa
mov
int3
and
pushf
dec
aas
add
pop
jno
xor
ret
add
sahf
mov
xchg
out
sbb
dec
aas
xor
les
scas
mov
out
popf
xlat
sahf
in
stc
xor
and
sbb
xchg
popf
mov
lods
and
and
cmps
dec
scas
out
lea
mov
push
cmp
push
sub
in
cmp
or
dec
aad
int3
neg
arpl
outs
in
fldenv
and
outs
or
in
cdq
push
in
pop
pop
inc
dec
add
ret
jecxz
sahf
aam
pop
fisttp
jecxz
jmp
repnz
lea
aas
loopne
repz
add
add
lds
sub
and
(bad)
div
imul
test
aas
sbb
data16
ja
loopne
stos
jbe
std
xchg
icebp
outs
(bad)
mov
push
mov
ds
mov
and
jmp
aam
fidiv
mov
xchg
sub
enter
cdq
es
xor
fisubr
dec
retf
xchg
call
loope
test
xchg
xor
fwait
push
jo
cs
push
jg
xchg
(bad)
lods
mov
in
jbe
jae
sbb
jno
(bad)
mov
(bad)
xor
sub
mov
into
mov
in
sbb
mov
mov
xor
jge
(bad)
xchg
pop
dec
out
in
mov
scas
movs
movq
push
adc
movs
xchg
cmps
outs
test
pop
adc
push
and
int
cmc
mov
jle
pop
test
cdq
pushf
dec
add
int
(bad)
retf
xor
push
shr
fwait
pop
sahf
sub
push
repnz
jmp
out
and
call
out
or
pop
mov
(bad)
bound
dec
dec
push
cmp
rol
(bad)
dec
enter
jmp
xor
in
pop
fisttp
icebp
mov
clc
outs
jnp
sub
and
dec
jbe
pop
pop
mov
push
les
iret
(bad)
adc
sub
(bad)
int3
sub
mov
lods
popa
shl
xchg
xor
adc
mov
mov
int
and
scas
sbb
aas
nop
sbb
sbb
and
in
sub
ret
inc
push
xor
mov
loopne
jg
pop
sbb
pop
jae
test
movs
push
mov
ds
icebp
adc
dec
out
xchg
mov
ss
(bad)
push
lock
ins
lock
push
(bad)
xor
ja
fcom
mov
mov
push
push
ss
pushf
pop
in
js
pop
jno
ins
sub
and
add
push
push
mov
clc
ss
cmp
test
int3
and
sti
int3
dec
and
mov
ins
ja
jg
mov
push
sbb
mov
lock
rcr
cmp
xor
retf
ror
pop
sahf
arpl
xchg
xor
int
inc
imul
adc
ins
out
sbb
xchg
lods
lahf
rol
inc
jmp
and
mov
mov
les
dec
add
mov
mov
mov
push
xchg
aas
(bad)
jmp
add
scas
fisttp
mov
inc
mov
rol
mov
js
(bad)
retf
repnz
sub
test
sub
fsub
add
xor
cmp
mov
scas
(bad)
movs
loopne
int3
cmp
push
xchg
sub
mov
or
call
or
inc
xor
pop
or
sub
dec
dec
(bad)
inc
scas
adc
push
mov
pop
int3
cmp
shl
jmp
push
jb
aaa
mov
imul
fild
lods
push
js
iret
test
scas
shr
sbb
push
mov
aaa
mov
mov
sub
aas
push
or
sar
pop
mov
loope
dec
sub
inc
or
cmps
mov
inc
leave
mov
push
shr
jl
lea
mov
inc
adc
sbb
dec
add
add
mov
cmp
cmp
mov
cwde
pop
dec
dec
cli
mov
cmp
inc
retf
sbb
ret
pop
bound
call
das
cmp
cli
mov
aam
push
aaa
daa
test
mov
loop
dec
dec
xchg
lods
pop
xchg
fidiv
stc
push
outs
push
mov
imul
pop
addr16
add
or
outs
shl
jmp
in
adc
or
and
mov
aas
aas
push
xchg
xchg
je
add
pop
loope
dec
mov
xchg
xchg
push
and
call
cmps
movs
push
and
xor
pop
cmp
mov
movs
or
jne
fucomi
mov
add
int
push
mov
push
push
in
int
mov
fisttp
jecxz
mov
sbb
int
dec
and
push
push
cmps
cld
inc
or
fs
enter
shl
bnd
pop
bound
into
clc
adc
iret
fst
(bad)
xchg
fstp
xor
loop
rol
(bad)
shl
dec
les
pop
or
jo
lods
sub
test
ret
aaa
push
call
and
cmp
(bad)
pop
sahf
mov
mov
inc
lea
sub
or
imul
ja
mov
jecxz
ins
ds
adc
ror
jge
(bad)
mov
inc
(bad)
xchg
imul
mov
outs
scas
xor
mov
push
dec
push
fnstenv
and
sub
dec
dec
mov
mov
iret
icebp
jp
cmp
sbb
jecxz
popf
ins
inc
xchg
push
hlt
and
out
sahf
xor
popf
ret
(bad)
xor
sti
inc
pop
push
int
or
inc
movs
sbb
dec
aaa
lock
ins
clc
jecxz
je
sub
dec
lods
test
xor
sbb
inc
test
inc
sub
and
push
mul
mov
es
int
adc
or
mov
fimul
mov
xor
or
shr
sub
sbb
lock
jb
mov
xchg
sub
mov
outs
mov
(bad)
loope
jecxz
lock
inc
shl
xor
push
and
mov
ss
sub
mov
mov
push
ja
imul
int
and
bound
lds
jge
dec
and
push
adc
mov
aaa
lods
mov
mov
inc
sub
or
cmp
aaa
les
inc
pop
lods
xchg
sti
imul
ja
push
leave
aad
add
and
movs
(bad)
(bad)
mov
or
stos
xor
or
adc
imul
psllq
mov
hlt
dec
and
adc
add
sbb
adc
pop
out
cld
ss
fwait
test
mov
sub
sub
xor
repnz
sub
cld
cmovp
mov
out
call
sub
xchg
loope
push
sbb
dec
jecxz
fstp
dec
mov
sub
(bad)
hlt
cmp
das
xor
fild
es
mov
(bad)
pop
mov
inc
dec
or
pushf
dec
push
rol
dec
lahf
xor
sete
out
dec
mov
add
fwait
inc
cmp
lods
push
sar
mov
mov
mov
sbb
inc
xchg
or
data16
dec
xor
cmp
aaa
retf
mov
clc
leave
mov
push
mov
std
inc
xchg
jnp
dec
mov
jg
ja
add
sbb
adc
fld
outs
jns
enter
fucomip
push
push
sbb
xchg
mov
lock
stos
dec
into
lods
or
call
and
cmp
out
call
mov
fadd
retf
shl
jae
push
int3
pushfw
dec
vhsubps
mov
push
xchg
pop
ins
adc
cmp
sbb
fstp
out
les
xchg
aas
fnsave
add
adc
lods
daa
mov
cmp
fsubp
scas
aaa
retf
sbb
xchg
jbe
xor
adc
int
pop
adc
jge
dec
xor
pop
and
cli
test
jl
or
ficom
sub
mov
(bad)
mov
inc
fdivr
(bad)
es
bound
sbb
cmp
mov
jg
test
lods
xor
mov
jl
push
popa
fld
jg
(bad)
aad
inc
pop
mov
or
cmp
aas
stc
inc
mov
leave
repz
fild
repnz
add
jb
push
not
inc
movs
sub
loop
xor
mov
mov
push
into
(bad)
mov
data16
stos
xchg
retf
(bad)
stc
jmp
pop
test
dec
je
int
ret
cmps
jo
test
pop
mov
mov
add
mov
in
push
mov
jno
pop
addr16
into
loopne
aaa
pop
neg
mov
lods
jnp
push
call
rcl
imul
push
xor
pop
cmps
popf
xchg
cmp
mov
aas
out
pop
or
push
lahf
ret
fstp
rcl
bound
mov
movlps
jae
and
mov
jmp
in
jmp
inc
jecxz
xchg
add
xor
icebp
stos
push
sub
pusha
push
mov
jae
test
nop
cmp
loopne
(bad)
loop
jp
inc
sar
scas
fistp
iret
(bad)
into
or
push
popa
pop
inc
into
adc
dec
cmp
cmp
iret
push
push
sbb
pop
and
fbstp
inc
inc
loope
pop
and
aaa
inc
aad
lods
sti
and
gs
pop
mov
fwait
mov
dec
or
jge
in
ds
int3
out
add
xor
mov
sbb
jbe
mov
int3
dec
(bad)
ds
mov
cmp
mov
fisttp
and
repnz
sti
push
mov
add
cli
sbb
aas
cwde
stc
ret
cmp
lock
sub
sub
sub
inc
push
arpl
xchg
mov
lods
mov
jb
mov
pop
pop
pop
outs
dec
mov
jae
xchg
dec
push
pop
xchg
xor
xor
dec
aad
fsub
mov
out
xor
push
(bad)
cmp
in
adc
sub
nop
(bad)
cmps
mov
mov
aad
loope
aad
clc
or
cdq
pushf
mov
lds
cmps
cmp
xchg
sbb
lock
dec
adc
push
inc
test
mov
rcl
jbe
aas
jnp
stc
lahf
xchg
dec
test
dec
jg
stos
ret
mov
loope
mov
fcmovbe
push
outs
mov
mov
arpl
into
aad
lock
and
fwait
jae
xor
jecxz
pop
out
add
stos
dec
imul
adc
sub
bound
std
out
mov
mov
(bad)
jnp
sub
inc
dec
xchg
mov
scas
cmps
cmp
bound
inc
xchg
repz
fadd
(bad)
stos
jbe
jnp
or
mov
mov
pop
add
lea
in
sbb
inc
or
xchg
xor
mov
js
or
mov
loope
out
addr16
jne
fld
dec
push
in
fnsave
les
mov
xor
movs
je
cmp
ja
shr
pop
stos
mov
and
adc
adc
jmp
aaa
fs
stos
repnz
cmp
inc
cdq
dec
int3
js
xor
outs
dec
data16
int
retf
dec
push
mov
fadd
sub
xchg
call
orps
loop
or
std
mov
aas
pop
and
xor
bound
(bad)
fsub
in
ret
inc
adc
jge
inc
adc
mov
(bad)
mov
out
xor
adc
cwde
inc
maskmovq
not
jecxz
sub
retf
scas
test
retf
(bad)
int3
push
enter
shl
xchg
clc
pop
xlat
icebp
imul
stos
clc
xor
(bad)
int
(bad)
pop
(bad)
xchg
pop
rcl
ja
push
push
shl
sbb
lods
add
or
jecxz
push
mov
add
sub
jmp
(bad)
not
es
inc
sub
test
dec
fiadd
and
pop
popa
dec
dec
rol
adc
jp
scas
or
jno
cmp
xor
loopne
lock
mov
ret
xor
xchg
loop
dec
pop
into
rol
lea
jle
mov
and
mov
pop
jae
xchg
xchg
test
test
popf
outs
or
sbb
jl
data16
test
add
pop
(bad)
pop
xchg
mov
mov
pop
add
ret
stc
jb
(bad)
icebp
push
xor
fmul
add
cmps
hlt
fdiv
cmps
and
xchg
lods
jecxz
jg
jecxz
iret
shl
inc
das
sahf
(bad)
(bad)
popf
shl
inc
sar
dec
xchg
xor
sbb
xchg
mov
inc
xchg
jl
push
adc
call
mov
into
cdq
cwde
pop
inc
retf
out
enter
arpl
aas
xchg
add
mov
mov
addr16
sti
pushf
mov
mov
xor
cmp
inc
sub
addr16
jmp
xchg
and
fidiv
push
cmp
movs
imul
mov
(bad)
test
xor
hlt
mov
fld
push
jg
neg
das
inc
fwait
mov
pushf
add
mov
fiadd
pop
cmps
outs
push
ins
mov
lea
jecxz
stc
int3
ror
mov
pop
mov
fist
rol
add
pop
repnz
call
sub
test
pop
xchg
mov
xchg
ret
movs
xchg
jne
add
cwde
xchg
out
add
adc
mov
aam
xchg
into
retf
push
out
add
mov
fild
jecxz
ins
push
push
push
mov
(bad)
xor
inc
jmp
xor
dec
or
addr16
dec
mov
adc
loopne
call
data16
into
mov
or
sbb
jo
retf
push
gs
aaa
sbb
inc
or
xchg
dec
xor
push
mov
sub
fbld
movs
jne
cmc
cld
cmp
jns
(bad)
mov
jne
push
jns
icebp
xor
iret
add
add
mov
mov
(bad)
ins
add
shr
push
in
and
repz
movs
lods
and
lahf
inc
and
call
lods
sbb
xchg
rol
inc
pop
mov
test
mov
or
or
(bad)
hlt
dec
ret
test
add
cmp
jno
push
cdq
call
loop
jne
mov
std
jne
dec
cmp
jne
(bad)
in
hlt
inc
lds
add
cmp
repnz
push
and
mov
not
inc
cwde
sub
and
xchg
sub
push
mov
ror
mov
lds
mov
mov
fisub
cmp
xor
mov
shl
mov
jno
push
leave
xlat
inc
mov
xor
dec
inc
dec
call
xchg
sub
sub
mov
outs
add
add
xor
std
jle
call
mov
call
jns
fs
imul
fwait
xchg
mov
xor
xor
pop
sub
dec
dec
jmp
jns
mov
mov
jg
ror
pop
mov
inc
fsubp
rol
dec
dec
int3
mov
not
leave
mov
out
inc
push
xchg
aaa
fsub
jmp
out
mov
mov
pop
stos
xor
sbb
inc
lods
shr
xor
imul
and
fsubr
jno
and
ret
mov
call
(bad)
dec
rol
inc
add
xchg
push
aam
mov
or
hlt
and
inc
cmp
mov
add
pop
test
jnp
pop
cmps
mov
pop
std
push
test
fst
test
les
and
mov
fucompp
mov
call
adc
bnd
mov
shl
jmp
mov
mov
inc
out
pop
lods
pmulhw
cmc
pop
ret
add
pop
stc
test
jnp
aas
push
push
and
push
(bad)
mov
test
popf
lahf
push
sub
stos
jecxz
pop
push
dec
fisub
sbb
out
or
lds
push
(bad)
mov
add
arpl
push
in
lds
inc
pop
sti
mov
or
jecxz
inc
repnz
push
jecxz
mov
inc
aam
inc
xchg
inc
jo
add
fdiv
leave
sti
adc
mov
mov
stos
fldenv
jae
xchg
add
fwait
mov
gs
fcomp
sub
fimul
mov
or
arpl
bound
mov
cmp
sub
fs
sub
ins
inc
adc
or
mov
clc
add
or
imul
pop
lods
mov
movs
enter
out
adc
add
cmp
mov
jp
popf
xor
pop
into
xchg
out
cmps
mov
xor
retf
pop
mov
fs
push
and
in
(bad)
dec
stos
dec
pop
int
mov
test
ret
mov
xchg
call
fbstp
iret
dec
mov
ret
adc
xor
arpl
ret
adc
aas
imul
xchg
adc
data16
scas
loop
cli
call
pop
mov
retf
js
inc
in
repnz
sbb
leave
out
fsub
jb
dec
xor
out
jmp
retf
sbb
aas
lahf
lds
xchg
fnstcw
adc
scas
addr16
fwait
jg
in
and
inc
fcom
jns
scas
cmp
sbb
sti
rol
(bad)
stos
push
scas
add
es
adc
adc
fwait
and
mov
fdiv
adc
cmps
pop
mov
rol
aam
inc
pop
bound
(bad)
mov
inc
pop
cwde
loop
repnz
add
clc
sbb
(bad)
icebp
cmp
jne
into
dec
mov
addr16
aam
pushf
ds
cwde
sub
adc
stos
(bad)
dec
hlt
pop
cdq
jmp
test
jne
and
in
lea
push
jno
ret
out
sub
out
xbegin
in
xchg
jae
mov
mov
sbb
(bad)
sub
jl
cmp
jmp
call
push
sub
in
dec
repnz
mov
loopne
test
pop
inc
out
mov
or
je
ret
in
inc
out
fisttp
dec
and
fcmovu
jno
pop
mov
sbb
es
jle
or
push
jp
cmp
push
push
dec
in
rol
out
ins
jp
shr
das
jge
aaa
push
into
test
outs
in
and
add
mov
sub
mov
mov
inc
arpl
xchg
mov
jp
or
imul
cmps
sbb
or
sub
(bad)
jge
mov
jle
lahf
mov
jle
rcl
in
dec
cmp
in
gs
and
adc
ror
loop
or
inc
sub
sbb
mov
loop
and
pop
add
mov
mov
aaa
leave
mov
in
cmp
and
push
test
icebp
add
cmps
movs
ss
aaa
cmp
dec
jl
stc
out
aam
cmp
add
xchg
adc
mov
and
lods
nop
jp
inc
aam
sbb
nop
ds
jg
xchg
fld
imul
inc
cmp
xor
jle
mov
in
mov
stc
and
std
lock
jbe
popf
sbb
stos
ins
cwde
dec
push
pop
xor
inc
lods
and
add
mov
xor
jb
jg
popa
adc
and
aam
lock
jp
mov
xchg
rcr
fdivrp
ret
call
(bad)
pushf
sbb
(bad)
in
lds
fs
jmp
xchg
and
out
cmp
xchg
fwait
lea
xchg
repnz
scas
sti
int
xor
ins
test
cld
enter
in
ss
int3
fwait
loop
xor
mov
(bad)
gs
cmp
add
or
mov
mov
ins
pushf
dec
movs
loop
sbb
mov
jb
xor
stos
jecxz
dec
scas
sub
inc
stc
aas
(bad)
dec
mov
sahf
fistp
nop
add
fwait
push
not
cmp
pusha
test
pop
xlat
sub
gs
les
nop
aas
pop
mov
aaa
push
enter
repz
pop
aas
lea
add
lds
gs
call
int
lds
push
inc
lahf
rcr
jne
repz
jbe
dec
out
outs
es
jmp
jae
lods
call
cmp
into
xor
pop
jg
push
cmp
mov
idiv
sub
pushf
or
and
nop
sub
movs
and
pop
fld
(bad)
mov
outs
stos
(bad)
aad
push
or
fnstcw
shl
gs
add
push
push
push
iret
xchg
daa
mov
into
jno
xor
cmp
xchg
xchg
retf
cs
dec
adc
jae
sub
xchg
mov
pop
push
loope
push
stos
mov
mov
adc
out
inc
xor
xor
mov
loop
std
ficom
push
add
ins
cmc
test
and
pushf
add
sbb
arpl
ret
arpl
adc
mov
mov
dec
ja
jmp
shr
lods
inc
icebp
cmp
int
aaa
loop
inc
fwait
mov
pop
sar
pop
in
test
dec
xchg
stos
mov
sub
xchg
addr16
and
xchg
mov
cmp
mov
scas
dec
js
popa
sub
data16
cmps
inc
add
retf
mov
stos
or
cmc
call
add
jne
test
cmps
imul
sahf
daa
push
sahf
shl
or
adc
and
jge
clc
or
or
mov
je
fcos
repz
add
clc
pop
dec
aas
outs
mov
icebp
lods
retfw
call
pop
or
sbb
adc
push
xchg
sbb
xor
loopne
jle
into
jns
std
fs
sti
gs
add
fwait
(bad)
mov
sub
out
jns
mov
std
in
lahf
cmp
test
jb
fs
sbb
inc
and
jns
(bad)
cmp
jp
mov
xchg
dec
mov
cmp
jle
mov
stc
neg
data16
mov
add
repz
jnp
lock
mov
ss
mov
mov
add
sub
cmp
jb
cwde
xchg
out
sub
jnp
test
xchg
ficomp
aas
fdivr
rcl
sub
or
and
mov
jp
in
sahf
push
inc
aas
data16
mov
cmp
cld
retf
or
mov
(bad)
sti
loopne
ja
clc
mov
in
mov
(bad)
jecxz
fbstp
lods
rcl
pop
fiadd
add
scas
lods
ins
in
jbe
mov
xchg
push
push
mov
iret
inc
adc
(bad)
xor
mov
push
add
sub
xor
adc
ss
inc
mov
jp
mov
mov
(bad)
in
fiadd
(bad)
xchg
jnp
add
lock
jge
dec
mov
cmp
hlt
in
int
fs
push
and
movs
xchg
shl
push
mov
mov
repz
xchg
leave
aad
sub
push
fwait
ss
addr16
mov
aaa
mov
jae
(bad)
cmp
clc
in
xor
jns
sub
push
jb
into
aas
outs
push
jl
add
retf
fistp
test
sub
pusha
pop
cwde
cwde
or
cmp
mov
mov
pusha
cmp
repnz
pop
cmp
jo
lea
test
dec
mov
inc
retf
js
inc
inc
sub
cmps
test
bound
jns
fidiv
adc
and
std
push
jg
push
push
mov
push
pop
adc
push
add
push
push
inc
mov
add
jb
and
loope
hlt
or
mov
out
into
jae
xchg
fld
sbb
push
pop
fwait
inc
dec
out
rol
repnz
cmps
mov
push
lock
xchg
jl
cmp
cmp
sub
inc
test
xchg
or
xlat
or
sbb
iret
imul
sbb
jno
retf
pop
lds
mov
cld
loope
inc
cmps
arpl
mov
mov
retf
or
pushf
sti
pushf
mov
out
mov
jmp
aam
and
clc
jecxz
dec
pop
ins
ds
(bad)
push
xchg
xlat
mov
sahf
xchg
mov
retf
dec
mov
lds
jns
or
jle
ja
fwait
mov
cmps
les
ret
mov
cli
add
ins
inc
test
push
mov
add
xor
and
xor
xor
mov
sar
test
sbb
int
push
sub
and
lds
sub
push
adc
icebp
lahf
fsubrp
push
dec
aam
mov
cmp
popa
jecxz
jne
rcl
or
and
aad
push
cld
popa
pop
retf
or
rcr
jb
xchg
push
mov
dec
ror
test
out
imul
call
push
or
sti
add
push
cmp
aaa
sbb
aas
sbb
(bad)
xchg
push
loopne
pop
adc
dec
add
jb
cmc
push
pop
clc
popa
inc
cmp
mov
sub
and
and
bound
mov
aas
(bad)
repnz
out
adc
sbb
into
(bad)
mov
(bad)
cmc
add
loopne
aam
add
imul
cwde
dec
aad
mov
inc
fcomp
imul
dec
cmps
mov
in
push
cmps
iret
add
or
dec
addr16
push
adc
in
xor
xchg
cwde
jecxz
jns
cmc
clc
xchg
lahf
pop
sbb
sub
dec
iret
jmp
xor
push
xor
xchg
movs
mov
xchg
mov
push
push
mov
and
add
pop
into
cmp
fisubr
loop
in
cmps
sbb
das
mov
ins
or
sahf
push
adc
mov
push
fsub
aaa
sub
add
aam
pop
mov
ret
mov
fidiv
push
jnp
xor
jnp
sub
nop
inc
xor
ins
popa
std
scas
dec
pusha
sub
adc
sti
xchg
ds
repz
adc
dec
cmps
cmp
mov
cmc
add
jp
jecxz
fcomp
cmps
xor
pminub
sbb
cmc
ret
int3
jnp
fstp
icebp
xor
add
add
in
movs
daa
out
fild
mov
push
ds
inc
addr16
sbb
cmp
arpl
ins
sub
fs
xor
or
or
(bad)
push
mov
dec
loop
lea
mov
popa
outs
add
rcl
push
movs
and
(bad)
out
inc
push
lahf
iret
dec
fptan
and
jae
loopne
push
xchg
leave
mov
into
scas
fiadd
pusha
xchg
ficomp
adc
nop
add
lods
xor
mov
dec
push
mov
data16
scas
test
lds
mov
int
lods
jle
ins
mov
cmp
pop
adc
add
mov
dec
hlt
cdq
dec
dec
jno
in
mov
mov
mov
mov
fidiv
dec
jno
ss
idiv
shl
xchg
aam
vprotw
int
gs
xchg
mov
out
in
enter
sub
loop
xchg
lock
repz
inc
cmp
cmps
dec
dec
clc
call
jmp
out
fs
xor
loop
pusha
imul
pop
dec
nop
mov
mov
cmp
(bad)
into
xchg
cwde
movs
mov
add
jbe
sbb
mov
xchg
sub
scas
adc
push
add
pop
pusha
call
int3
lock
and
or
pop
rcr
mov
pop
add
fst
inc
mov
mov
(bad)
sub
es
xchg
arpl
jl
es
cmps
test
(bad)
rcr
xor
xchg
inc
hlt
mov
clc
fistp
sbb
ss
cmp
dec
xor
jns
ror
retf
out
ret
or
inc
jl
cmp
push
movs
nop
mov
leave
scas
dec
in
shl
mov
daa
mov
sbb
xlat
or
les
sub
aam
dec
cwde
iret
sub
jge
pop
fsubr
sbb
jmp
gs
xchg
sbb
cmp
ret
or
xchg
mov
call
and
sbb
inc
movzx
xchg
pop
call
shr
cdq
popf
and
sub
ror
(bad)
jae
fld
add
push
sbb
push
mov
sti
xchg
cmc
or
ja
cmp
and
std
cmps
jecxz
and
js
stc
xor
gs
cdq
cli
aam
push
aaa
sub
(bad)
dec
sub
or
fsub
cs
dec
sub
test
and
push
retf
(bad)
int
out
pop
retf
repz
adc
int3
or
enter
std
sbb
push
pop
cdq
or
cwde
xchg
jne
inc
mov
aam
pop
out
xchg
xchg
sub
adc
jmp
cmc
push
jp
icebp
and
sar
int3
loope
dec
in
xchg
jmp
mov
fst
jne
xor
rcr
sbb
push
mov
cld
stos
sub
push
loopne
lock
repz
ds
lahf
sahf
pushf
or
and
jmp
mov
jp
(bad)
xor
push
test
pop
inc
sbb
iret
jp
push
iret
out
lea
hlt
push
pop
cmp
sbb
or
fst
clc
mov
dec
mov
cmp
fsubr
hlt
outs
shl
pop
and
shl
cwde
xchg
(bad)
jl
cld
lahf
mov
cmp
inc
xor
cmp
and
dec
pop
ret
lahf
mov
pop
stos
test
cmp
mov
shl
and
pop
adc
mov
sbb
and
les
jb
in
inc
mul
mov
cld
hlt
mov
xlat
push
fwait
mov
repz
sub
mov
rcr
loope
or
push
mov
retf
inc
retf
inc
mov
mov
es
push
popf
push
xchg
sahf
pop
in
call
rol
push
inc
adc
pop
mov
xor
cmps
jle
test
fidivr
stos
call
fld
jle
jb
cmp
lock
fs
xchg
push
xor
xor
add
jbe
xchg
aam
test
inc
dec
push
retf
jmp
retf
ja
ins
jge
mov
push
lahf
add
jno
std
xor
adc
inc
fs
and
cmp
das
outs
push
add
pusha
fs
pop
nop
inc
ins
bound
sbb
jns
daa
inc
imul
sub
fldcw
ror
xor
mul
aad
mov
sbb
ins
push
jno
and
(bad)
jne
mov
mov
and
ds
pusha
and
add
jno
pop
ds
lods
and
popa
scas
dec
jno
mov
(bad)
jg
jns
inc
adc
ins
call
fdivp
out
dec
adc
jae
sub
(bad)
aam
int3
push
outs
sbb
(bad)
ins
mov
test
aam
dec
shl
je
fist
imul
and
xchg
dec
cld
out
mov
jns
mov
cmp
or
retf
cli
mov
and
addr16
xor
mov
repnz
inc
test
pushf
mov
pushf
adc
or
icebp
(bad)
sbb
push
aas
fs
add
sbb
or
xchg
fidivr
sbb
outs
aam
adc
rcl
loope
stos
cli
inc
ss
cmp
imul
mov
jns
push
ret
sub
pop
movs
ror
(bad)
jge
mov
call
push
and
in
mov
dec
dec
mov
in
dec
ins
or
cmp
pavgw
fwait
je
scas
movs
stos
or
mov
dec
sbb
mov
xchg
mov
retf
add
mov
pop
aam
call
dec
loope
stc
jmp
(bad)
mov
push
movs
out
(bad)
cmp
add
add
push
outs
add
xchg
fldcw
pop
jl
cmp
xchg
shl
stc
idiv
gs
aam
div
popf
mov
fstp
sub
fwait
mov
xchg
pushf
je
in
mov
pop
xchg
fiadd
add
cmps
push
pop
add
mov
pop
add
test
add
or
mov
mov
addr16
shl
cli
xor
ss
xchg
loop
in
scas
sbb
mov
push
cli
outs
push
jae
mov
adc
add
mov
jbe
push
push
outs
pop
ss
lods
mov
inc
jae
stc
(bad)
aas
push
push
and
jl
das
ss
pop
inc
dec
call
cmp
stos
lock
pop
and
data16
and
shl
dec
inc
cmp
invd
das
and
add
loop
clc
pushf
xchg
popf
push
sti
push
sbb
mov
jns
cmp
push
scas
lock
pop
fstp
sbb
xchg
ins
lods
ins
sbb
xchg
(bad)
sar
rcl
xor
aaa
add
xchg
mov
pop
mov
push
call
xchg
mov
and
xlat
mov
jnp
(bad)
loop
(bad)
(bad)
in
bound
(bad)
int3
shl
xor
popf
sub
mov
retf
ins
add
jnp
shr
call
jl
mov
xor
cld
mov
movs
pop
push
push
lods
mov
aad
or
sub
inc
iret
and
fiadd
repz
mov
aad
rcl
test
fcom
lods
call
add
mov
push
repz
fldcw
test
cld
loop
and
mov
ins
pop
repnz
ret
mov
sti
and
add
jl
icebp
jo
les
adc
inc
retf
es
dec
out
ja
mov
daa
movs
mov
cmps
(bad)
pop
int3
fst
mov
pop
xchg
push
int
and
add
shr
stc
je
cs
(bad)
in
jg
or
mov
push
(bad)
ins
jns
adc
mov
iret
inc
and
into
aam
xor
fadd
sahf
enter
js
mov
out
mov
jp
add
div
aas
and
ja
outs
dec
cld
je
sbb
das
inc
movs
xchg
add
push
std
cwde
add
scas
daa
or
arpl
nop
dec
adc
loope
in
mov
add
cmp
sub
nop
adc
mov
pop
push
scas
scas
sti
nop
scas
imul
mov
in
adc
leave
popa
push
or
sbb
lock
lds
in
popf
xchg
clc
inc
add
arpl
lods
xor
ss
jmp
push
add
mov
movs
dec
inc
aas
fwait
sbb
push
cmc
cmp
or
pop
test
fs
add
ins
xchg
ins
stos
mov
push
enter
jae
jno
jmp
or
aaa
(bad)
push
shl
pop
gs
pop
je
xchg
inc
xchg
mov
inc
out
mov
mov
cmp
add
adc
xlat
push
popf
sti
cdq
mov
sti
in
sahf
loopne
cwde
xchg
adc
lock
adc
lods
jg
out
push
cdq
ret
jne
stos
imul
sbb
loope
jbe
adc
push
fs
lahf
and
mov
div
lods
xchg
pop
retf
add
loop
std
mov
jae
sbb
cmp
int
add
movs
sub
inc
xor
or
jmp
add
or
outs
in
data16
enter
pushf
repnz
sub
movzx
mov
iret
mov
add
scas
fbstp
(bad)
(bad)
outs
push
inc
push
adc
mov
mov
lods
jge
jg
jle
ds
sahf
arpl
xor
jmp
cmp
ins
mov
aam
sub
and
dec
adc
fisttp
movs
sub
call
xchg
jl
mov
pop
cmp
jp
imul
fidiv
pop
ins
clc
mov
pop
dec
in
and
shl
ins
cli
xchg
pushf
sbb
cdq
pop
add
xor
cmp
jecxz
push
movs
pop
mov
add
cmp
xor
retf
push
js
and
mov
inc
and
inc
xlat
fisub
sar
mov
das
rol
mov
inc
sbb
xchg
xchg
sbb
popa
or
sbb
cmp
and
sbb
jg
ds
mov
loop
mov
and
test
inc
rep
fild
add
push
mov
sbb
out
movs
adc
in
popa
in
jbe
mov
(bad)
idiv
xchg
hlt
and
sub
mov
sub
push
mov
dec
fwait
adc
push
sub
xchg
out
in
inc
or
int
dec
mov
or
scas
xchg
ror
xor
fstp
adc
(bad)
(bad)
icebp
rol
aaa
js
or
xor
adc
stos
lods
inc
(bad)
pushf
dec
mov
(bad)
push
popa
mov
mov
pop
xchg
movs
imul
cmp
cmp
mov
lahf
jo
(bad)
adc
bound
inc
sub
or
cmp
and
lods
(bad)
jnp
aaa
fist
outs
fnstcw
lods
fxch
lahf
sub
popa
out
and
in
sbb
pop
and
mov
adc
call
(bad)
fsub
xchg
jns
inc
lock
iret
mov
adc
ins
jmp
iret
(bad)
xchg
xor
jl
pop
fwait
push
call
fs
mov
cmp
push
push
jg
loopne
push
and
out
dec
sbb
pop
or
xchg
test
xor
xchg
adc
aaa
aaa
arpl
inc
sub
push
dec
(bad)
call
jge
stc
shr
jno
ds
mov
push
and
adc
inc
(bad)
popf
dec
push
stos
pop
fs
sbb
ss
(bad)
jp
pop
enter
rol
mov
es
sub
cs
mov
(bad)
cmp
xor
aam
jns
sbb
retf
stos
stc
xor
out
dec
mov
push
add
add
dec
dec
xchg
lock
cmps
mov
in
and
push
dec
push
(bad)
out
and
jnp
das
xor
cs
lock
mov
loop
cmps
arpl
and
or
adc
sbb
loopne
xor
movs
jne
inc
int3
dec
push
xchg
dec
int
adc
cld
jne
cld
outs
js
mov
(bad)
jb
std
inc
aam
xlat
mov
mov
xlat
bound
sub
sar
or
jno
imul
out
mov
jo
movs
mov
or
fucomi
and
inc
push
popa
cmp
fld
xchg
enter
pushf
mov
lea
jne
adc
out
clc
pop
dec
out
pushf
pop
adc
cdq
aaa
pop
sub
dec
mov
addr16
adc
cmp
frstor
or
(bad)
mov
call
jmp
or
aaa
add
mov
cmps
(bad)
aad
jo
mov
int
int
pop
movs
scas
mov
popa
dec
mov
fs
push
push
push
in
sbb
adc
ret
pop
movs
dec
scas
sub
mov
test
stc
int3
sub
dec
jmp
sti
(bad)
jecxz
rcr
xchg
sbb
sbb
cmp
inc
mov
not
call
inc
pushf
xchg
daa
cmps
mov
cli
inc
mov
jl
and
pop
push
push
and
mov
mov
retf
dec
sub
test
or
or
and
das
push
mov
sub
ret
fs
push
jl
int3
adc
clc
inc
adc
mov
nop
int
mov
stc
add
add
inc
inc
jge
ror
pop
fdivrp
hlt
push
inc
cmc
or
lea
add
mov
ret
sbb
inc
lds
loop
cwde
xor
jg
inc
mov
leave
and
fnsave
pushf
adc
cmp
aas
jbe
(bad)
and
das
push
jl
loop
push
retf
jge
or
xlat
xchg
xchg
add
or
cmp
stos
sahf
retf
push
fiadd
mov
xor
bound
and
test
loop
push
call
pusha
sub
cld
mov
push
cmp
je
mov
push
pop
inc
rol
movs
xchg
mov
scas
shl
loopne
inc
mov
inc
inc
mov
dec
xor
jmp
adc
xor
js
mov
cli
pop
fdiv
or
xchg
out
cmp
jns
xchg
dec
and
xchg
or
andnps
sahf
(bad)
(bad)
cwde
sti
addr16
cwde
adc
dec
cmc
aam
(bad)
mov
inc
or
popa
dec
clc
pop
outs
aaa
xor
add
out
jecxz
shl
ins
mov
ret
ins
ins
cmc
add
jg
dec
fcom
add
icebp
jl
gs
mov
cmp
jns
ror
jmp
popf
add
inc
rcl
enter
mov
in
sbb
push
push
inc
bound
mov
or
sub
rcl
xor
mov
push
fst
shr
inc
fnstsw
ds
xor
push
fsub
sbb
test
dec
xadd
mov
ja
pop
xor
xchg
mov
push
inc
fistp
sub
xchg
lock
adc
cs
les
xchg
or
inc
dec
xor
push
ret
mov
and
movs
cmps
inc
sbb
dec
pop
mov
hlt
mov
cdq
cmp
js
loop
and
adc
jmp
inc
js
jnp
shl
(bad)
ds
sbb
push
ret
mov
cmp
jnp
inc
add
scas
adc
repnz
mov
aas
repz
push
sti
call
test
not
aam
sbb
scas
fdivr
add
scas
mov
cmps
out
xchg
sub
inc
push
and
in
jle
imul
pop
lods
pop
mov
push
mov
xor
sub
test
arpl
hlt
mov
test
fidiv
inc
inc
push
scas
mov
jmp
mov
ins
or
adc
sahf
jns
jo
dec
inc
mov
xlat
dec
sbb
push
nop
push
jge
jecxz
xor
out
xchg
push
(bad)
lea
popf
in
push
add
dec
clc
push
mov
ror
inc
sub
push
cmp
mov
push
leave
sub
cmovns
sub
mov
cli
inc
pop
cmps
movs
in
push
pop
test
cmp
in
call
imul
and
and
push
fidiv
pop
jecxz
mov
daa
inc
xor
popaw
scas
pop
aas
cmc
mov
adc
cmp
mov
mov
sub
sahf
test
mov
adc
add
pushf
mov
mov
gs
call
dec
je
daa
mov
out
push
repz
push
xor
mov
sahf
mov
bound
stc
ins
sbb
mov
sub
adc
jno
lahf
and
push
imul
shl
pushf
out
(bad)
movs
jle
dec
sub
out
out
pop
xchg
int3
adc
pushf
repnz
sti
jb
or
lahf
xchg
cs
sub
mov
jbe
add
jb
add
push
scas
add
clc
test
das
rcl
out
pop
popa
adc
xchg
lahf
jge
test
hlt
push
sbb
jne
stos
(bad)
div
es
cli
sub
ret
mov
stos
jb
inc
aas
dec
or
adc
sub
xlat
cmp
mov
jg
test
fs
ror
xor
push
loop
and
cmps
xchg
lds
mov
outs
cmc
test
sbb
jecxz
outs
and
jecxz
popa
add
xchg
push
mov
iret
mov
sbb
inc
ins
xlat
iret
fldenv
inc
aam
jmp
pop
push
sbb
pusha
jno
cmp
(bad)
scas
mov
add
gs
and
push
jl
popf
xor
mov
gs
sub
push
in
stc
sub
push
and
xchg
cwde
jmp
mov
ret
or
sbb
inc
pop
inc
sti
push
aaa
ins
sub
sar
inc
xor
dec
xchg
mov
jge
or
movs
mov
fsubr
sbb
or
inc
jg
retf
mov
pop
pop
out
das
dec
push
add
fdiv
cmp
int
outs
ins
in
jns
test
cmp
pop
cmp
test
xor
test
sub
fdivr
jl
data16
jmp
lods
cli
in
popf
jnp
pop
call
pop
fimul
shl
sahf
in
jge
aam
into
xchg
mov
arpl
add
and
or
fst
adc
lods
fdivr
pushaw
ins
mov
cmps
pusha
pop
dec
jmp
arpl
retf
jbe
jae
pop
mov
das
(bad)
leave
stc
scas
ror
repz
sub
xor
inc
cmp
outs
cmp
xchg
stos
(bad)
jmp
call
int
sbb
outs
mov
lods
sti
mov
and
dec
(bad)
fwait
das
add
jno
les
push
bnd
test
shl
std
inc
add
sub
jge
jne
pop
ss
xchg
fild
(bad)
fsubr
loopne
dec
mov
fsub
ins
pop
inc
out
push
push
xchg
xor
test
outs
mov
out
icebp
jg
pop
les
mov
sub
push
cli
sbb
call
xchg
jle
jno
or
rcl
xor
fs
pop
je
jno
jp
enter
mov
shl
stos
fs
ins
sti
cs
scas
shl
adc
adc
jecxz
clc
xchg
nop
and
fdiv
dec
jnp
inc
jns
nop
(bad)
mov
(bad)
add
shl
shl
(bad)
ins
ins
neg
pop
clc
adc
sub
adc
sahf
cmp
rol
push
push
jnp
(bad)
loope
nop
inc
inc
cli
ja
inc
sbb
inc
test
(bad)
icebp
imul
icebp
cmp
lea
jo
sbb
aam
xchg
pop
das
enter
mov
imul
mov
pop
jo
aas
stos
scas
mov
fistp
stos
ss
pop
in
inc
xchg
mov
scas
scas
adc
or
lods
mov
cmp
push
repz
inc
lock
mov
popf
ret
pop
popf
aaa
shl
cmp
(bad)
(bad)
xor
ins
clc
aad
test
mov
into
xor
mov
cmp
jno
inc
cwde
mov
mov
fimul
inc
jl
stc
mov
shl
xchg
cmc
pop
sub
daa
std
test
sbb
fldcw
mov
pop
(bad)
mov
xchg
pop
xor
jo
daa
fs
outs
sbb
xor
ins
enter
push
add
outs
adc
cmp
shl
das
mov
inc
cmp
inc
adc
sahf
mov
int
shl
call
jns
dec
popa
or
xor
lds
cwde
bswap
dec
adc
pop
lods
movs
inc
and
fld
rcl
retf
ret
outs
cmp
cmp
xchg
and
sbb
add
push
add
jg
adc
loopne
fucomip
and
adc
fiadd
shr
xchg
loopne
pop
scas
nop
fdiv
xchg
or
out
dec
sbb
sub
stos
in
dec
aas
push
rcr
aaa
or
lods
cmp
lods
int
xlat
add
sub
mov
ret
xchg
pop
ja
sbb
lock
inc
outs
push
daa
add
adc
xchg
mov
gs
or
adc
mov
in
inc
inc
pop
mov
popf
shr
pop
pop
add
cmps
mov
jmp
mov
aam
test
or
mov
addr16
mov
test
xchg
test
mov
(bad)
jb
jecxz
(bad)
test
inc
loope
lahf
jmp
xor
(bad)
mov
or
inc
outs
or
pop
rol
movs
(bad)
ds
repz
pop
jmp
cmp
jmp
test
mov
jge
mov
cmp
rol
push
ss
in
xor
aad
mov
adc
add
pop
mov
xor
pop
jo
push
jns
popf
inc
cmp
into
fwait
std
mov
jl
pushf
sbb
inc
sub
dec
lahf
out
sti
popf
mov
mov
mov
frstor
out
push
cli
enter
or
sbb
fmul
fidiv
sahf
icebp
pop
div
xchg
lds
mov
mov
leave
dec
or
sub
ja
lds
lahf
jo
cmps
mov
jb
or
aaa
xor
and
mov
ins
pop
cdq
nop
cdq
and
pop
pop
cmp
dec
sbb
dec
or
sahf
ins
cmp
pusha
(bad)
lods
outs
outs
jnp
icebp
test
jbe
xlat
push
(bad)
inc
inc
dec
and
enter
xchg
arpl
(bad)
loopne
mov
inc
push
fcomp
mov
cmp
xchg
mov
mul
sti
push
jns
and
movs
push
leave
jmp
icebp
out
loopne
and
popa
adc
rcl
jl
cmp
mov
xor
add
movs
fiadd
lods
cmps
sub
and
xchg
mov
jge
(bad)
push
xlat
loop
inc
les
or
js
and
push
out
dec
inc
sbb
cdq
mov
call
ret
inc
lahf
es
sub
retf
adc
(bad)
adc
mov
and
inc
adc
imul
fild
jl
inc
(bad)
ja
push
inc
sbb
mov
(bad)
leave
inc
sub
ds
pusha
icebp
adc
and
mov
fimul
xlat
sbb
in
sub
jb
push
dec
mov
movs
jmp
add
push
movs
or
ret
pop
add
popa
retf
inc
daa
sbb
cwde
add
data16
pop
pop
mov
mov
iret
cmp
daa
movs
mov
mov
push
lods
mov
push
mov
arpl
mov
mov
bound
push
push
or
add
in
in
popf
add
or
sub
je
fidiv
retf
pop
mov
jne
adc
sbb
mov
sub
dec
test
nop
mov
cmp
cld
in
mov
xor
inc
and
cld
(bad)
loopne
jns
out
hlt
add
ds
cmp
dec
and
std
push
and
jns
pop
inc
jmp
fs
push
out
sbb
adc
jmp
sub
add
fimul
xchg
dec
js
mov
clc
xor
push
scas
xchg
jo
xor
xor
out
shr
stos
imul
call
(bad)
jno
mov
in
jge
or
pop
mov
test
cmp
sbb
sub
sub
sahf
sub
push
push
pop
add
lock
lahf
mov
test
lahf
mov
das
dec
or
mov
cmc
pop
nop
xlat
fsub
mov
mov
(bad)
add
movs
sbb
je
or
sub
repnz
cmp
aam
stos
cmp
sub
jl
int3
repz
fsubr
fcmovu
(bad)
add
ins
hlt
mov
ret
psubw
cmp
nop
push
aas
lods
xchg
push
cmps
retf
scas
scas
sbb
iret
fsubr
shr
out
ret
shl
cmp
rcl
sub
ss
and
pusha
fisttp
rcl
add
or
mov
jne
sbb
add
sub
mov
add
lods
or
scas
pop
cmp
je
add
mov
mov
int3
out
cli
mov
retf
int
clc
icebp
jmp
adc
jo
dec
pop
adc
fisubr
sbb
call
mov
mov
add
aam
shl
mov
pop
lahf
mov
xchg
sub
aaa
enter
(bad)
jg
ret
adc
imul
pop
out
jp
bound
inc
mov
xchg
cmp
scas
sub
adc
push
cmps
mov
and
imul
fldcw
movs
fdiv
ret
jmp
push
sar
pop
mov
pop
push
sub
rcr
xor
and
ins
xchg
stos
jp
sbb
add
add
(bad)
jmp
jbe
add
cwde
mov
(bad)
jo
mov
push
pop
sti
sub
bound
jmp
test
jge
pop
dec
stc
div
in
cmovnp
dec
sbb
add
pop
in
sti
jae
jbe
xor
add
or
adc
(bad)
in
(bad)
xlat
add
inc
fadd
imul
add
sahf
lea
adc
sub
sub
jecxz
fcomp
fldenv
jne
cmp
fstp
daa
nop
and
aaa
out
and
mov
loop
and
stos
xchg
pop
ret
mov
mov
aaa
in
in
cdq
cld
cmp
outs
jnp
or
xor
mov
inc
popf
enter
loopne
xchg
mov
out
mov
jp
sbb
fwait
mov
lock
push
pop
push
ins
pusha
iret
fld
iret
fiadd
aaa
lahf
lods
xor
push
sub
popf
(bad)
loope
jne
arpl
push
add
xor
mul
jno
iret
es
call
sub
add
jp
xchg
aas
(bad)
mov
popa
retf
aaa
stos
(bad)
xchg
int3
wrmsr
nop
cdq
or
push
pusha
lods
dec
mov
loop
mov
cld
xchg
jp
jno
aaa
mov
mov
xchg
(bad)
mov
sbb
xchg
adc
shl
cmp
movs
pop
jmp
out
ins
(bad)
ins
xchg
mul
rol
ins
loop
cmp
mov
ss
lods
mov
bound
hlt
mov
stc
jne
and
xor
in
in
inc
and
xor
xor
add
mov
and
ins
inc
stos
dec
dec
mov
in
mov
mov
in
mov
sbb
cli
ret
aad
or
das
push
sar
mov
mov
inc
cmp
test
fistp
out
pop
imul
ja
cmp
dec
pop
and
gs
ud2
mov
retf
mov
fist
into
sbb
push
mov
mov
btc
dec
inc
mov
and
sbb
cdq
scas
repz
ja
add
pop
sub
dec
mov
test
xchg
xchg
sbb
mov
les
in
out
fucomip
push
mov
add
push
jmp
(bad)
jmp
call
xchg
jb
push
in
cmp
out
or
aad
mov
cmps
pop
out
inc
sub
and
pop
cmp
movs
push
bt
push
cmp
pop
xchg
hlt
repz
add
dec
out
jp
xchg
inc
test
outs
loopne
sahf
(bad)
adc
mov
and
dec
dec
xchg
lods
and
shr
repz
fucomip
ja
add
lods
mov
in
xchg
and
cdq
xchg
imul
xor
hlt
leave
pop
(bad)
pop
mov
pop
data16
ins
mov
push
push
sbb
sbb
xchg
sbb
loope
shl
(bad)
mov
or
rol
shr
pop
ja
sti
bound
xor
mov
mov
loope
fwait
ja
push
sbb
add
xchg
and
shr
(bad)
cmp
dec
mul
and
push
mov
sbb
push
retf
push
pop
mov
jmp
scas
mov
adc
repnz
mov
fucomi
mov
or
fimul
loop
imul
fs
pop
adc
dec
mov
mov
test
push
je
xchg
add
out
leave
xor
jmp
arpl
aaa
mov
push
ret
(bad)
pop
outs
inc
push
mov
test
ds
xor
add
push
or
push
pop
xchg
jmp
xchg
pop
popa
xchg
jg
mov
ja
push
push
add
ret
adc
or
xchg
sbb
or
nop
push
push
xor
sub
pop
cmp
pushf
sti
xchg
das
or
add
das
or
xor
xor
das
cs
fcmovb
mov
je
sub
imul
cmp
das
ss
pop
fwait
dec
cmp
or
or
aaa
dec
mov
xchg
scas
mov
cwde
pop
outs
js
dec
push
push
rcl
mov
rol
add
sbb
add
loopne
lods
adc
pushf
std
sti
inc
fst
xor
jbe
shl
mov
dec
and
fstp
rcr
in
and
mov
pusha
lahf
and
dec
lea
xchg
out
sbb
call
dec
sub
sub
fwait
cmps
jl
out
pusha
add
clc
pop
jge
mov
jnp
push
jmp
dec
int3
(bad)
mov
jbe
cmp
fisubr
mov
test
sub
add
or
aaa
jbe
cmps
shr
neg
repz
jo
mov
or
jp
shl
outs
inc
pop
jle
fsub
mov
scas
stos
repz
push
lds
add
cmps
jmp
not
jne
pop
mov
push
xchg
loope
rcr
into
pop
xor
jbe
jge
mov
mov
mov
lock
pop
cmp
sbb
pop
inc
dec
imul
mov
inc
iret
dec
and
jae
cmp
std
dec
jmp
xor
rcl
dec
dec
adc
imul
mov
scas
mov
adc
add
pop
loopne
arpl
mov
add
pop
mov
add
mov
jecxz
pushf
iret
movs
dec
frstor
add
scas
les
fucomi
cwde
fist
ins
jl
mov
pop
jb
add
sbb
and
push
into
movs
or
sbb
jnp
into
push
pop
loope
ins
pop
mov
xor
mov
mov
add
cwde
retf
mov
push
les
dec
mov
inc
jo
jg
ret
and
cs
xchg
js
mov
adc
mov
ins
jne
mov
inc
jle
mov
gs
int3
cld
dec
je
lea
push
and
das
add
push
(bad)
inc
ror
mov
jge
inc
mov
cmps
sbb
pop
cmp
pop
cmps
fistp
pusha
aas
jno
mov
push
add
xor
adc
cmp
ds
rcr
push
ror
pop
cmp
pop
cmp
mov
rol
cld
jno
aas
imul
xor
inc
inc
mov
les
cmp
add
inc
or
and
dec
mov
push
outs
pushf
mov
jp
out
jg
rcl
into
or
or
and
shr
and
jo
jb
in
dec
xchg
push
scas
nop
arpl
inc
and
stos
xor
add
cmp
pop
test
adc
mov
cmc
enter
loope
sub
movs
clc
div
mov
sub
fnstenv
lods
inc
mov
xchg
pushf
dec
jnp
mov
inc
mov
in
jno
push
cmp
jecxz
jbe
mov
test
xchg
dec
addr16
gs
add
xor
test
aas
sbb
push
loopne
xchg
imul
clc
push
popf
mov
add
aaa
xchg
mov
mov
mov
fidiv
cdq
adc
push
scas
std
out
jbe
cmp
sub
jle
repnz
ja
sub
xchg
mov
ret
mov
push
pop
or
stc
dec
mov
xchg
aad
sbb
bound
(bad)
out
jnp
mov
cld
fld
pop
enter
sub
dec
(bad)
sbb
(bad)
mov
fwait
cmc
std
or
aaa
sar
gs
sub
push
mov
lods
mov
(bad)
iret
cmp
xchg
mov
cdq
aam
add
mov
cmps
test
xchg
lock
scas
mov
add
inc
jns
in
movs
mov
lods
jle
mov
popf
and
push
gs
sbb
popa
dec
jno
in
enter
jae
cld
popf
test
and
(bad)
das
push
je
je
sti
in
les
pop
jb
aad
sbb
inc
aad
aad
mov
icebp
push
stos
leave
sbb
mov
jo
ss
inc
jg
icebp
test
push
iret
fiadd
rcl
arpl
outs
fld
dec
push
adc
adc
adc
es
into
sub
ficomp
mov
icebp
pusha
ins
ss
ins
sti
jnp
jno
aaa
hlt
mov
shr
cmp
fmulp
or
jb
test
jmp
inc
inc
mov
(bad)
mov
ret
repz
or
xchg
test
mov
dec
js
push
leave
pop
pxor
push
jmp
imul
or
pop
add
dec
cmp
xlat
cwde
push
sub
pop
imul
and
dec
jmp
and
push
dec
movs
movs
xchg
test
mov
clc
dec
inc
test
cmp
lods
inc
gs
aaa
outs
outs
cmp
stc
leave
cmp
cmp
cmc
into
inc
jmp
cmp
pop
dec
mov
(bad)
mov
sub
das
(bad)
mov
jb
movs
inc
xchg
loop
xor
pushf
aas
xchg
xchg
cmp
aam
std
scas
pushf
js
push
push
pop
jb
cli
mov
jne
cmp
push
cmps
pusha
inc
push
stos
fs
and
inc
pop
jns
ds
inc
nop
push
call
mov
sbb
sbb
out
jae
jecxz
(bad)
repnz
push
mov
rcl
mov
xchg
ficomp
out
or
push
pop
xor
aas
(bad)
in
ret
jb
out
pop
sar
mov
dec
or
mov
or
pop
cmp
sub
shr
out
stos
mov
pusha
mov
and
mov
loopne
shl
xor
aam
ins
adc
imul
mul
cmp
or
xchg
gs
mov
sub
sub
jg
aad
xchg
fisub
test
sti
dec
stos
adc
outs
mov
pushf
sti
mov
push
cmps
mov
jnp
push
daa
dec
sbb
popf
mov
mov
sub
inc
out
ss
les
dec
inc
call
in
js
cmp
or
or
outs
out
aas
fbld
push
push
push
xchg
push
cmp
sub
(bad)
jle
or
mov
jg
cmp
in
jle
add
mov
xchg
rol
jns
shr
mov
(bad)
jl
nop
pop
stos
pop
sub
imul
inc
xchg
add
sbb
sub
ss
fadd
pushf
add
mov
ror
push
test
mov
ins
mov
add
jge
lds
out
sbb
inc
imul
xchg
and
mov
sahf
rol
aam
mov
pop
push
mov
adc
pop
loopne
pop
mov
div
adc
popf
mov
xlat
int
imul
jl
dec
mov
test
mov
mov
scas
movs
sub
add
in
xchg
sbb
fcom
inc
mov
xchg
lds
cli
jnp
cdq
push
sbb
lock
sub
mov
loope
iret
fsin
push
and
sbb
(bad)
div
dec
pop
cmp
lods
fistp
jbe
(bad)
loop
stos
das
sub
mov
retf
loop
or
cvtpi2ps
movs
out
xor
movs
aad
mov
sbb
fisubr
fdiv
ss
test
push
mov
mov
push
call
xchg
js
mov
push
adc
inc
rcr
xor
aad
stos
inc
outs
cmp
pop
xor
aam
inc
adc
popf
sahf
in
into
shl
xchg
pop
sub
hlt
add
mov
pop
pop
inc
imul
push
sbb
inc
dec
into
mov
retf
sub
fstp
call
(bad)
fild
mov
xchg
ficom
lods
pop
ret
push
or
std
adc
jle
xchg
cdq
mov
mov
fwait
and
cdq
outs
pop
xchg
pop
mov
xchg
fisub
or
jae
mov
shl
test
mul
cmp
adc
fwait
ss
retf
or
dec
es
(bad)
or
(bad)
enter
stc
jl
jno
lea
movs
or
inc
add
or
cmp
ins
mov
xchg
mov
fdivr
mov
scas
mov
popa
lea
inc
neg
nop
xchg
leave
jg
inc
adc
imul
xchg
mov
mov
mov
and
dec
push
shl
mov
xchg
ins
fimul
xchg
mov
gs
lahf
sbb
test
cmps
into
sbb
push
retf
stc
fnstcw
inc
push
aad
sbb
sbb
stos
test
scas
push
xchg
xchg
mov
push
mov
pop
cmps
sbb
push
mov
shl
xor
xor
mov
sar
add
adc
xor
mov
add
mov
pop
push
icebp
pusha
inc
mov
dec
lods
(bad)
pusha
icebp
(bad)
mov
ins
hlt
fimul
adc
icebp
call
sub
aam
into
outs
lock
or
mov
adc
cmp
js
cwde
je
call
mov
fs
arpl
into
dec
inc
jge
jmp
ret
inc
inc
xchg
xchg
hlt
mov
shr
mov
or
push
mul
jno
pushf
addr16
push
jmp
rol
pop
sbb
fbld
(bad)
iret
and
jae
das
pop
arpl
ret
in
sbb
xor
or
ss
xor
out
(bad)
push
or
jno
pop
sbb
or
push
sub
mov
clc
cli
adc
lods
cmp
js
mov
push
jno
cwde
and
inc
mov
or
xchg
(bad)
in
and
jmp
adc
shr
es
lods
sub
cmps
xor
fistp
jg
call
push
bound
xlat
js
mov
arpl
lock
xor
cmp
inc
retf
jl
(bad)
mov
mov
cmps
and
jbe
in
nop
aam
shr
call
sbb
jp
inc
addr16
clc
inc
push
xor
bound
aam
mov
or
lahf
in
cmp
daa
or
call
and
sub
xor
sti
(bad)
hlt
retf
cmp
pop
cs
mov
and
mov
jmp
push
mov
mov
xchg
hlt
xchg
jo
fisubr
loope
jl
or
icebp
or
fcom
jp
pusha
fdiv
stc
pop
xor
sbb
fs
aam
out
cs
mov
cmps
fild
pusha
arpl
in
mov
lock
add
call
fistp
rcl
fwait
(bad)
pop
sbb
sub
int
xchg
and
jne
shl
inc
and
fwait
pusha
icebp
jnp
jbe
push
xor
iret
add
xchg
cwde
call
mov
sbb
pop
addr16
pop
in
int3
adc
dec
xchg
loope
out
jbe
cmp
jno
mov
sub
out
adc
int
push
sub
in
pop
dec
imul
mov
or
xchg
cdq
lods
jecxz
xchg
imul
aas
mov
mov
je
das
dec
mov
mov
push
clc
imul
xor
icebp
popa
clc
int
es
dec
inc
lods
stc
mov
pop
push
cmp
popa
adc
bound
push
mov
std
xchg
ins
or
loop
xlat
or
out
cmp
(bad)
sbb
daa
jb
mov
std
cs
movs
mov
ret
mov
mov
retf
jb
pop
mov
stos
adc
scas
cmps
cmp
bound
scas
adc
ins
out
jmp
push
inc
sbb
movs
and
sub
cmp
jmp
sub
jmp
adc
movs
mov
jp
xchg
adc
xor
pushf
movs
or
ds
adc
and
fimul
dec
add
inc
inc
(bad)
(bad)
sub
fisttp
cmc
or
int
dec
cdq
js
(bad)
push
rcl
and
and
jg
into
mov
icebp
xlat
xlat
imul
in
push
sub
call
gs
mov
pop
ds
push
rol
ret
cmc
pop
or
out
dec
adc
fmul
mov
imul
(bad)
test
inc
jbe
hlt
pop
popa
cmp
sub
repnz
hlt
out
xchg
lods
add
mov
mov
sbb
xor
and
jg
mov
scas
push
add
add
xchg
cwde
in
pop
jmp
daa
stc
std
xchg
or
ins
(bad)
mov
pop
inc
pop
dec
push
jmp
fs
lock
mov
inc
push
mov
leave
imul
pushf
not
jns
pushf
sti
iret
sub
lds
pop
cli
sbb
sub
js
fsubr
enter
aam
nop
(bad)
and
icebp
xor
nop
inc
cdq
inc
fimul
push
ins
test
mov
and
les
(bad)
sub
inc
fild
in
cmps
cld
mov
sahf
pop
imul
xchg
xor
daa
int3
xlat
push
inc
lock
cmp
dec
sub
jmp
mov
retf
mov
jb
add
mov
es
fs
ins
fs
movs
inc
add
call
or
and
std
mov
test
jo
ja
cmps
sub
xchg
adc
pop
jmp
es
jbe
lock
call
sbb
popa
dec
cwde
arpl
jl
popa
rcl
mov
push
pop
je
xor
lods
aas
out
jno
push
clc
xor
mov
pop
not
icebp
inc
ffreep
jecxz
sbb
pop
jnp
test
mov
retf
push
cs
mov
xchg
and
(bad)
scas
or
retf
inc
test
stc
outs
dec
mov
pop
mov
xchg
bound
fdivr
out
movs
jecxz
pop
add
cmps
dec
sub
ret
fdivr
pushf
mov
xor
mov
xchg
and
jmp
test
out
ins
push
sub
sub
and
dec
push
loope
xor
pushf
xchg
ins
jbe
cmp
ja
mov
adc
push
jno
jl
cwde
sbb
or
mov
arpl
adc
popa
jge
or
jns
push
cmc
sbb
or
sysenter
cmp
mov
je
add
cmps
inc
mov
sub
setge
jg
dec
pushf
pop
aas
repz
mov
ds
or
retf
mov
cmp
call
mov
pop
int3
xlat
pop
rol
dec
fild
dec
rcr
sahf
xor
mov
xor
and
adc
cmp
jno
out
xor
xchg
sbb
movs
aad
mov
pop
dec
adc
fmul
adc
arpl
push
or
test
xchg
shr
sbb
test
sub
jmp
adc
cmp
and
aaa
out
stos
mov
jl
xor
pop
mov
fmul
pop
mov
inc
outs
xor
cmps
push
and
iret
cmp
push
add
and
xor
push
mov
(bad)
lahf
and
sbb
mov
jb
add
sbb
jg
push
jmp
daa
scas
test
jl
sub
push
mov
cmc
imul
icebp
fmul
(bad)
ja
icebp
inc
daa
pop
sub
test
jl
push
push
or
test
adc
out
mov
inc
xchg
ds
mov
dec
mov
and
rcl
dec
jmp
jle
shr
les
mov
cdq
sar
push
jmp
sub
xor
aam
ins
out
sti
not
cmps
mov
add
xchg
cmp
add
xchg
push
sahf
or
jge
loopne
cdq
xchg
sysenter
pushf
loop
or
call
adc
xlat
dec
adc
pop
or
call
mov
push
jns
je
xor
mov
retf
mov
rcl
cmp
cmp
lahf
popa
jl
int3
or
jmp
into
ret
cmps
push
popf
mov
adc
push
mov
test
popf
sar
retf
scas
nop
lds
jp
mov
push
pushf
mov
mov
shr
shl
movs
lods
mov
adc
or
lock
sahf
fistp
mov
test
mov
add
pop
dec
xchg
dec
cwde
mov
jno
cmp
or
daa
xor
scas
(bad)
or
dec
add
js
xchg
mov
or
ja
dec
mov
retf
or
xor
aas
ins
pop
rcr
pop
or
outs
into
xchg
pusha
lahf
jbe
and
popf
iret
dec
call
out
mov
dec
inc
xor
sbb
repz
mov
inc
pop
(bad)
push
or
inc
mov
sub
daa
(bad)
and
push
mov
xchg
(bad)
pop
jae
mov
call
push
adc
out
pop
push
xor
push
sbb
xor
fwait
movs
fist
js
mov
xchg
push
das
pop
gs
xchg
push
mov
ins
push
dec
xor
inc
cmc
daa
imul
pop
sub
out
test
mov
jmp
arpl
mov
mov
pop
loopne
mov
stc
jmp
repnz
inc
popa
mov
das
retf
(bad)
js
inc
mov
fcomp
out
dec
cdq
or
jb
popa
mov
sbb
in
cmp
fdiv
shr
xchg
or
or
push
out
sar
dec
lds
popa
sbb
rcl
lods
es
in
ror
repnz
enter
out
ret
scas
mov
mov
cmp
shl
cmp
inc
jl
and
dec
rol
add
mov
sbb
fs
(bad)
ins
aam
fmul
aad
aaa
imul
xchg
rcl
mov
jno
push
sbb
xor
test
sti
pop
push
add
cli
fdivrp
imul
push
out
adc
fwait
out
sysenter
leave
dec
ja
mov
adc
pop
iret
pop
or
push
jbe
cmp
hlt
pop
out
pop
push
out
push
in
inc
fisubr
mov
(bad)
mov
sbb
shl
xor
inc
stos
adc
inc
dec
inc
add
mov
sbb
test
jmp
out
mov
xchg
into
inc
adc
inc
push
inc
add
aaa
out
jge
dec
mov
jb
in
call
sub
mov
test
ds
(bad)
fmul
rcl
mov
pop
sub
sti
adc
fmul
outs
sbb
retf
sbb
xlat
out
jp
mov
pop
in
fwait
stos
push
into
dec
sbb
jge
adc
mov
inc
jge
pop
(bad)
outs
std
sub
pop
dec
and
fimul
inc
(bad)
jmp
(bad)
sub
mov
cmps
mov
pop
es
push
mov
lods
aaa
inc
pop
lock
dec
movs
fadd
mov
xchg
adc
aas
sub
jp
jge
pop
scas
int3
dec
(bad)
cmps
adc
jbe
jle
loope
add
mov
or
enter
nop
lods
adc
inc
mov
and
sti
mov
repz
shr
add
cmp
hlt
sub
or
dec
aad
and
or
neg
mov
clc
mov
outs
jp
push
fwait
outs
in
mov
js
cdq
xchg
jns
sar
xchg
scas
frstpm(287
not
loop
daa
mov
adc
adc
int
mov
adc
jmp
cli
sub
test
adc
xchg
dec
xor
sbb
pop
mov
add
dec
xchg
loope
in
jnp
xchg
pop
cli
push
(bad)
xchg
pop
vlddqu
cmp
add
in
cli
or
imul
imul
dec
in
or
xchg
add
cmp
mov
xor
add
xor
into
jl
mov
adc
push
and
sub
push
inc
cmp
out
(bad)
rcr
pop
adc
movs
pusha
adc
jae
pop
pop
fnstcw
(bad)
addr16
mov
dec
ret
xchg
inc
sub
inc
xor
outs
mov
mov
call
mov
mov
and
push
xchg
cmp
hlt
xchg
and
xor
sbb
pop
aad
xor
lods
outs
mov
adc
loop
ret
nop
push
clc
fmul
(bad)
push
mov
ins
adc
push
jp
sub
jno
fxtract
ss
aam
inc
mov
jnp
adc
ja
daa
sti
cdq
adc
out
push
sti
jmp
xchg
movs
mov
cdq
jle
in
out
scas
sahf
pop
sub
cmp
imul
or
sbb
xlat
xchg
ins
adc
es
mov
cwde
in
inc
(bad)
sub
ret
jmp
sar
bound
mov
aam
push
outs
jecxz
inc
jno
add
leave
xor
in
xchg
push
add
mov
fstp
sub
loope
jne
sbb
cwde
jb
fistp
mov
es
and
out
sbb
sti
inc
pop
dec
fld
movs
xlat
imul
ss
and
cmp
lea
xlat
aam
stos
sbb
or
and
cmps
addr16
and
push
(bad)
iret
or
daa
sbb
adc
push
pusha
pop
jle
cli
push
cmovbe
xchg
mov
jp
push
add
icebp
(bad)
sti
jns
enter
xchg
pop
sub
add
or
push
xchg
outs
std
fwait
stos
ret
jno
mov
or
fwait
retf
shl
sub
leave
(bad)
ret
movs
pop
mov
outs
aam
xchg
dec
out
mov
sub
and
popf
dec
aas
daa
pop
shl
and
push
pop
add
psubusb
retf
cmovge
(bad)
pop
test
sbb
test
xchg
out
stos
aam
lock
xor
fldcw
pop
jbe
push
mov
cmps
sub
aaa
and
cmps
cs
inc
iret
test
sub
ret
loop
addr16
jns
gs
mov
dec
and
cmp
inc
aas
gs
sub
rol
movmskps
out
test
mov
add
mov
dec
test
mov
inc
xor
xor
out
add
cmp
cmps
in
adc
out
test
(bad)
aad
pop
xlat
fst
jb
movs
adc
shl
jle
sub
js
je
cs
sbb
xor
and
adc
or
or
adc
ret
mov
rcl
mov
mov
retf
dec
test
test
loopne
or
cmp
ja
mov
or
inc
inc
xor
out
adc
dec
mov
mov
jnp
call
adc
dec
sub
sub
mov
adc
dec
loop
pop
fs
popa
jecxz
outs
and
xchg
sbb
adc
dec
repz
bound
or
out
mov
adc
add
add
fcomp
push
mov
into
aas
pop
(bad)
je
or
lahf
mov
pop
rcr
dec
xchg
pop
movs
jns
loopne
mov
hlt
add
adc
jl
jo
adc
fwait
xor
add
pop
mov
data16
test
and
cmp
jp
or
in
adc
push
or
mov
xchg
mov
test
xor
and
cmp
pop
mov
push
sti
xor
xchg
inc
adc
add
sub
and
pushf
xchg
push
ss
pop
push
arpl
bound
adc
pop
push
aad
leave
aas
ret
dec
lds
pop
jae
aam
add
aas
mov
adc
dec
sub
or
mov
or
outs
retf
outs
test
jl
dec
mov
ins
cli
in
clc
test
cmc
in
shl
cli
jmp
inc
scas
mov
scas
sbb
or
daa
retf
push
fisubr
popa
lea
loopne
imul
mov
call
mov
sbb
sub
jo
dec
ja
xchg
ins
out
mov
adc
arpl
ret
std
fistp
arpl
lock
add
cld
test
push
cdq
mov
pop
xlat
loopne
push
mov
stos
test
or
and
mov
ret
stos
mov
adc
xor
outs
lea
inc
mov
dec
repz
repz
aam
cmp
mov
xchg
out
pop
shr
lahf
pusha
out
loopne
and
cmp
xor
ins
push
mov
pop
nop
mov
cld
or
ds
leave
pop
mov
add
mov
sbb
ror
test
push
je
mov
xor
adc
pop
cwde
adc
xchg
out
cdq
dec
push
cld
lahf
or
scas
rcr
mov
arpl
mov
mov
pushw
xor
out
cmc
jmp
push
cwde
or
ret
xchg
enter
enter
jae
dec
lock
dec
pop
sbb
push
cmp
mov
pop
sub
pop
push
sbb
ja
adc
and
stos
clc
jg
jnp
mov
inc
add
and
push
enter
or
mov
mov
push
loopne
sbb
xor
sub
jo
pop
test
cmp
cmc
lods
pusha
pop
mov
(bad)
xchg
test
sbb
fistp
adc
cmp
pop
mul
cwde
dec
bnd
das
pop
pushw
dec
pop
icebp
stos
mov
mov
dec
cmp
sar
fwait
xor
xchg
mov
or
loopne
push
pop
dec
data16
xchg
push
out
and
jae
sbb
cmp
push
add
or
outs
fld
js
loopne
clc
out
push
dec
inc
sbb
sbb
sub
xchg
push
adc
xchg
cmp
push
cs
lods
lods
out
lahf
(bad)
adc
adc
dec
loopne
lea
out
sbb
mov
xlat
mov
adc
ja
call
in
in
mul
lods
mov
hlt
lods
out
cmp
push
mov
scas
in
sub
jo
cdq
sub
jno
mov
test
sbb
fucom
pop
stos
imul
std
push
mov
push
sub
sub
inc
js
retf
and
test
or
in
sub
push
loope
mov
mov
clc
rcl
pop
sbb
adc
icebp
mov
xor
mov
and
mov
cmp
inc
daa
fcmove
pop
push
add
add
sti
inc
xchg
jmp
clc
(bad)
fistp
sar
into
aam
inc
cmps
jge
sbb
cwde
cmp
gs
pop
jae
adc
mov
sti
popa
scas
push
dec
sub
lahf
mov
nop
fs
(bad)
repnz
repnz
jmp
add
or
(bad)
fmul
daa
test
popf
aad
sbb
xor
sbb
sbb
or
std
jg
leave
rcl
pop
jg
not
rol
jae
in
es
cmp
fs
(bad)
pop
int
sahf
push
jg
ins
imul
fst
push
hlt
shl
pop
jmp
jns
(bad)
dec
or
mov
sbb
jmp
adc
pop
movs
loopne
cmp
mov
jno
mov
mov
or
and
fnsave
xor
adc
pop
fld
test
cld
and
and
ins
fcomp
mov
jg
pop
cs
les
popa
out
pop
dec
arpl
adc
in
mov
sbb
arpl
and
or
retf
mov
pop
fwait
test
jmp
adc
cs
out
cmp
gs
cmc
test
cli
mov
xchg
add
loop
adc
nop
push
mov
mov
sbb
aaa
fimul
fcmovu
iret
pushf
hlt
adc
dec
pop
push
sbb
mov
jae
cli
mov
or
cmp
jnp
scas
xchg
mov
iret
cmp
pop
pop
fdivr
or
out
dec
aam
cmp
xchg
(bad)
or
sub
inc
push
adc
(bad)
hlt
inc
les
int3
aas
neg
push
or
mov
dec
mov
shr
call
cwde
int3
aam
add
mov
fadd
inc
das
mov
int3
shl
fwait
pop
add
xor
mov
sub
inc
inc
loop
loopne
mov
or
(bad)
in
out
fadd
fwait
shrd
xchg
xchg
adc
sbb
daa
mov
out
cli
jge
push
ja
inc
out
jb
add
mov
fidivr
xor
and
mov
sub
xchg
addr16
fsub
mov
fwait
in
(bad)
in
sbb
jno
stos
mov
nop
cli
jo
(bad)
pusha
fiadd
into
test
pop
inc
iret
xchg
sub
or
jbe
ins
setae
mov
out
xchg
(bad)
jp
test
pop
or
es
jle
call
imul
push
repz
dec
pop
clc
inc
test
mov
test
dec
shl
push
xchg
inc
div
lods
mov
(bad)
and
call
or
and
xor
pop
loope
cmps
jmp
mov
xchg
aam
popa
test
sub
fisttp
js
sbb
cmps
scas
inc
int3
mov
xor
mov
mov
lahf
addr16
pop
popf
fwait
(bad)
jmp
mov
mov
pop
addr16
adc
or
xchg
inc
xchg
in
nop
call
adc
mov
or
(bad)
mov
jo
stos
in
fisub
cmps
jb
cmp
inc
cld
push
jp
gs
pushf
arpl
ret
add
inc
std
ror
add
fcomp
and
outs
test
fisubr
or
dec
cmp
test
fnstenv
mov
mov
f2xm1
or
mov
jb
mov
cmp
fld
fwait
mov
scas
cmp
rcl
jmp
fwait
imul
cmp
inc
test
add
(bad)
mov
(bad)
ja
or
and
add
ins
pop
mov
pop
push
mov
sub
mov
jp
pop
add
jecxz
dec
ins
cmc
dec
imul
sbb
adc
adc
and
loop
stc
and
lahf
mov
xchg
ret
jp
adc
lods
neg
arpl
mov
sub
jecxz
in
mov
test
stc
xor
pop
call
jmp
popf
mov
leave
sub
fcomp
retf
fiadd
aam
dec
sub
add
lock
xchg
xchg
inc
hlt
out
add
jmp
sbb
or
adc
sub
mov
push
ins
push
arpl
retf
mov
dec
(bad)
jbe
pop
js
sub
nop
dec
add
ret
fisttp
mov
fadd
xchg
fstp
sub
lods
jecxz
ins
daa
in
push
sub
dec
cmps
inc
pop
push
mov
xchg
sub
adc
xchg
xor
add
push
push
jp
mov
(bad)
(bad)
sar
cwde
jmp
fidiv
popf
stos
push
dec
sbb
stos
dec
sbb
xor
jg
jle
jo
loope
cwde
jo
add
xor
push
iret
es
push
pop
cmc
movs
cmp
jp
cmps
fstp
jmp
nop
bound
repz
mov
arpl
add
imul
mov
sbb
dec
xor
popa
cmp
xchg
stos
jne
mov
xor
out
cmp
push
pop
mov
mov
mov
call
jmp
shl
mov
hlt
mov
adc
xchg
cmp
push
push
out
cli
repnz
int3
mov
xor
and
popa
push
push
ins
add
cmps
out
mov
(bad)
rcr
jmp
loop
rcr
addr16
outs
outs
sub
repnz
pop
jl
outs
stos
push
scas
pop
sub
mov
repz
out
out
xor
aad
pop
(bad)
shr
and
xchg
cmp
out
rcl
add
cmps
(bad)
fld
iret
push
fsubp
in
mov
push
mov
mov
sbb
cmps
cmp
jg
ret
mov
clc
mov
fiadd
stos
or
fdiv
cmp
sub
jecxz
jle
call
rcl
push
mov
aas
adc
or
enter
jmp
add
or
mov
rcl
aaa
mov
xchg
sbb
dec
rcr
xchg
dec
inc
cmc
adc
adc
or
dec
mov
or
daa
add
mov
sub
jnp
add
adc
lds
mov
or
pop
repnz
inc
jns
test
inc
cmp
jecxz
mov
push
jge
mov
push
lahf
mov
adc
leave
inc
push
ret
mov
ss
js
fbld
and
mov
mov
cdq
mov
and
mov
out
xor
mov
movs
cmp
xor
push
ret
ja
in
dec
test
mov
dec
sub
push
bound
div
jmp
mov
adc
fdivr
xchg
mov
mov
rol
jge
xor
(bad)
retf
std
jb
mov
xchg
jae
xchg
fld
(bad)
mov
popf
push
and
repz
jo
cmp
ss
dec
mov
cmovle
push
cld
mov
cdq
mov
adc
popa
dec
ins
loope
je
adc
rcl
leave
out
fs
cmp
shl
sub
xor
imul
sbb
dec
jne
mov
mov
iret
ds
fcomip
lea
and
scas
data16
mov
ror
xchg
cmp
adc
das
mov
stc
jge
dec
out
movs
push
ja
push
retf
cwde
mov
inc
mov
loop
mov
not
add
psubd
sbb
sbb
in
sub
loopne
mov
jg
cmp
jo
pop
dec
out
or
xlat
or
jp
mov
je
pop
inc
adc
pop
mov
enter
pop
pop
arpl
push
and
lods
cmps
fstp
cmc
push
or
jecxz
dec
daa
lahf
mov
sbb
jp
pop
xor
inc
sbb
and
out
sbb
dec
loopne
and
sub
mov
sahf
or
ja
mov
in
dec
fwait
add
sub
pop
cmp
in
sub
lahf
mov
lods
jge
or
and
fdivr
cdq
mov
push
in
mov
xor
in
cmp
lods
xchg
mov
mov
dec
sbb
pop
pop
mov
mov
inc
sub
(bad)
add
xchg
sub
loopne
enter
mov
xchg
addr16
mov
rcr
cmp
loop
inc
add
push
xor
add
hlt
xor
push
sbb
xchg
add
sub
sub
jl
bound
dec
push
hlt
(bad)
out
push
sahf
out
movs
popf
or
jmp
ret
sub
outs
sub
mov
and
in
test
neg
jnp
add
es
test
mov
xchg
(bad)
dec
push
and
cmps
mov
mov
es
(bad)
sbb
lea
inc
cmp
lahf
xor
or
mov
inc
ret
jecxz
inc
loope
mov
mov
mov
push
or
jns
movs
movs
cli
jge
push
and
push
pop
leave
out
popf
xor
pop
mov
outs
retf
xchg
shr
push
dec
adc
adc
mov
mov
fmul
mov
pop
sbb
int3
movs
not
clc
cmc
adc
sbb
adc
fld
jle
in
inc
mov
ins
sub
js
nop
mov
fdivr
movs
mov
jl
pop
mov
or
in
jecxz
daa
mov
jmp
jo
lds
aam
push
sbb
mul
(bad)
or
adc
pop
push
xor
pop
or
(bad)
jmp
hlt
jb
aaa
cmp
hlt
clc
push
inc
test
not
cmp
push
jb
add
dec
xor
cmc
jns
sub
addr16
mov
ins
jne
or
xor
add
cmp
dec
pop
dec
not
adc
call
pusha
imul
stc
and
add
xor
lods
stos
jno
pop
popa
stos
int3
les
mov
test
xor
mov
xor
push
xchg
ins
ret
adc
loop
dec
lods
(bad)
jo
loop
sub
cli
ret
rcr
push
sbb
xchg
pop
pop
push
inc
das
call
add
mov
lods
int3
jbe
faddp
mov
add
test
cwde
push
loope
mov
ins
sbb
dec
out
pop
rcl
fdiv
sahf
dec
cwde
cmp
aaa
jnp
fild
ins
into
jo
cmc
fcmovb
scas
loopne
lock
sub
aaa
and
icebp
pusha
loop
cmp
fstp
mov
and
push
mov
sbb
jmp
in
cmc
jp
cld
cmp
inc
jae
sub
add
pop
or
sbb
adc
imul
aaa
adc
mov
push
mov
jle
push
jg
fidivr
popw
push
nop
out
aas
int
xchg
push
into
adc
push
or
retf
rol
xor
sbb
pop
jp
jb
mov
jg
fs
daa
mov
fnstenv
data16
(bad)
fist
inc
xor
popf
aas
lods
scas
pop
mov
mov
mov
and
jmp
mov
rcr
inc
mov
sbb
pop
mov
xchg
fs
cmps
in
leave
inc
jo
aad
dec
stc
mov
nop/reserved
movs
idiv
outs
repnz
cmp
push
xchg
hlt
jno
push
or
pop
fucomi
out
daa
push
mov
rol
jg
inc
cwde
inc
je
add
pop
fdiv
sbb
jne
jl
out
sub
jbe
sub
int
xor
jp
inc
xchg
(bad)
adc
iret
pushf
bound
xor
ret
cmp
dec
test
out
inc
pop
int
add
movs
mov
iret
shl
xor
xor
in
stc
push
sbb
cmp
xchg
inc
and
lods
aad
sbb
test
sti
mov
aad
fcmovbe
ret
mov
or
sub
inc
stc
xchg
lods
add
xchg
adc
ins
push
nop
mov
cmp
aad
mov
pop
or
adc
jae
imul
pop
cmp
dec
les
aaa
mov
popa
adc
(bad)
loope
aaa
(bad)
aad
js
gs
call
jns
call
sti
push
scas
in
fsub
sar
mov
mov
jmp
mov
(bad)
sbb
cmp
lods
ret
je
sbb
sub
jo
call
nop
push
jecxz
in
sub
(bad)
jmp
jo
xor
pop
push
ret
jg
shr
jp
imul
(bad)
repz
pushf
pop
jo
xor
in
push
jae
test
rol
xor
mov
stos
dec
xor
pop
push
pop
inc
mov
stc
inc
sbb
adc
aaa
clc
cli
inc
(bad)
xor
jne
sub
inc
inc
iret
pop
mov
jne
ret
jge
xlat
cmp
bound
mov
or
ins
pop
dec
cmp
pop
and
add
jge
mov
inc
pop
cmp
ret
aaa
pmaddwd
jecxz
mov
loopne
mov
cmp
push
xchg
imul
push
das
les
mov
sub
xchg
add
cdq
movs
jmp
sar
jns
xor
pop
in
sar
fistp
push
mov
cmp
inc
lods
mov
out
pop
popf
push
jns
mov
and
pop
fs
nop
sbb
sti
enter
xor
ins
data16
data16
push
sbb
test
or
mov
sar
stos
add
jl
mov
ins
das
icebp
inc
inc
into
adc
cmp
cmc
xchg
fs
imul
adc
sbb
inc
sbb
fisttp
sbb
jno
test
mov
(bad)
mov
movs
imul
int
or
addr16
inc
or
and
push
in
pop
add
xchg
or
jae
int3
sub
das
cdq
pop
sub
sbb
inc
stc
xor
jmp
in
out
shl
rcl
sub
fmulp
dec
in
arpl
test
aam
mov
dec
jo
jno
(bad)
sub
add
arpl
and
mov
outs
pop
outs
and
pusha
stos
outs
xchg
adc
into
imul
call
push
fs
xor
and
inc
pop
jp
xchg
bound
sub
pop
ja
test
sahf
dec
mov
or
add
mul
(bad)
sub
push
cmp
mov
call
sbb
hlt
xor
pop
cmp
movups
js
ret
push
ret
aaa
inc
mov
movs
fistp
inc
mov
ja
jne
fdiv
out
or
or
cmps
pusha
jmp
hlt
cmp
xor
jne
jl
xor
xchg
jbe
push
into
fldcw
mov
rcl
xor
sahf
jl
inc
ja
sbb
cmp
add
jns
push
push
cmp
out
arpl
sbb
xchg
xor
or
ja
repz
pop
sub
dec
vpand
ds
scas
adc
cli
pop
inc
add
add
push
addr16
pop
mov
in
jmp
js
stos
leave
js
(bad)
aad
es
jb
out
pusha
push
loop
xlat
movs
adc
inc
add
dec
ja
mov
push
and
mov
dec
push
pusha
in
bound
cli
out
mov
push
inc
out
test
add
loop
mul
dec
mov
or
je
mov
mov
add
in
or
(bad)
in
add
stos
mov
mov
out
sbb
cwde
jb
xchg
pop
rol
ja
call
xchg
mov
jo
mov
push
xchg
xor
fprem1
sbb
loopne
stc
into
dec
pop
adc
mov
jp
lods
leave
sar
xor
adc
mov
mov
inc
lock
mov
pop
aas
push
loop
call
addr16
enter
pushf
outs
sbb
fadd
les
cmps
lea
lea
in
ins
mov
ja
outs
pop
daa
cdq
push
or
inc
mov
xchg
pop
mov
cmp
outs
and
pop
rcr
and
std
(bad)
hlt
(bad)
(bad)
or
or
leave
out
add
cmps
call
jecxz
add
inc
std
out
xchg
jg
fcomi
cmps
jbe
retf
xor
out
mov
addr16
into
add
mov
mov
or
jp
cmc
bound
inc
jb
scas
in
outs
pop
or
addr16
(bad)
enter
push
std
cdq
push
ficom
aam
mov
cmp
mov
sar
push
mov
outs
aas
shr
into
(bad)
jp
push
(bad)
leave
mov
bound
pushf
jp
in
arpl
lea
xchg
mov
sbb
xchg
test
dec
and
pop
adc
inc
sbb
mov
sbb
xor
xor
dec
sbb
dec
ins
shr
test
or
enter
frstor
arpl
jmp
jmp
mov
cmps
sti
inc
bound
pop
xchg
push
enter
mov
inc
jno
xchg
or
test
lods
mov
pop
imul
(bad)
fimul
push
sahf
imul
clc
mov
in
ror
inc
adc
xchg
xlat
fwait
in
xchg
and
js
jg
cdq
push
ins
mov
clc
push
xchg
add
xchg
jl
add
cs
push
or
mov
scas
mov
sahf
mov
sbb
div
iret
retf
mov
lahf
repz
ficomp
call
int
dec
popa
mov
push
sbb
pop
leave
dec
and
mov
jae
cmp
push
dec
add
mov
call
mov
frstor
repz
or
mov
mov
daa
xchg
xlat
adc
adc
rcr
fadd
test
dec
add
mov
cmp
sbb
and
outs
jno
lea
push
test
jbe
cmp
mov
xchg
inc
adc
pop
sbb
cmps
xchg
and
inc
cli
pop
or
xor
push
sbb
xor
push
dec
sbb
push
jbe
mov
div
(bad)
not
pop
shr
mov
mov
and
out
out
adc
inc
add
ss
inc
mov
dec
pop
or
jo
mov
adc
(bad)
push
or
(bad)
or
shl
mov
lods
in
imul
das
aam
(bad)
js
shr
mov
lahf
dec
loopne
enter
mov
cmp
mov
fiadd
lods
cmp
imul
push
dec
xor
xor
jo
cli
add
xor
sbb
push
mov
sbb
or
push
inc
les
ds
cmp
test
dec
adc
xor
cli
mov
lds
icebp
or
je
scas
xchg
or
xor
lods
retf
(bad)
outs
(bad)
imul
repz
sti
pop
fst
in
mul
and
cs
mov
xchg
and
cmp
dec
fxch
mov
out
and
rcr
sub
test
in
add
add
jns
iret
fnsave
xchg
daa
jecxz
pop
leave
test
add
lds
ja
dec
fidivr
and
lahf
push
popa
repnz
jb
pusha
push
jnp
test
xor
and
pop
xchg
or
jge
jge
int3
adc
lahf
scas
jae
push
xchg
sti
scas
dec
sbb
stc
and
js
or
and
adc
mov
aam
push
dec
lock
ja
retf
mov
mov
dec
mov
mov
xor
out
adc
out
sub
xor
aam
mov
test
je
cld
arpl
fdivr
sbb
add
fdivr
and
jns
mov
movs
sbb
add
mov
rol
jle
test
or
mov
or
outs
pop
dec
imul
imul
sbb
xchg
stos
add
inc
mov
push
push
sub
fs
jmp
adc
aas
and
jg
xor
mov
jge
inc
fwait
or
sub
scas
sub
rcr
xchg
stc
cmp
stos
lods
cmp
call
adc
mov
inc
sbb
pop
inc
xchg
popf
int
sbb
jbe
or
jae
outs
push
jecxz
lds
fidiv
into
pop
mov
lahf
rcr
outs
call
inc
pop
dec
inc
add
dec
je
out
push
cmp
rol
cld
dec
sti
xor
jg
popf
iret
mov
adc
int
pop
add
xor
repnz
aad
xchg
arpl
mov
or
xchg
sbb
mul
call
fcmovb
add
cmp
shr
cmp
fdiv
pop
push
xor
xor
repnz
dec
retf
stos
cmp
add
rcr
xchg
mov
jecxz
aaa
adc
pop
dec
mov
push
mov
(bad)
pop
inc
out
xor
(bad)
(bad)
adc
pop
mov
push
mov
and
test
mov
mov
test
ja
jle
cmps
outs
dec
xor
sbb
pop
daa
cmp
ds
rcr
pushf
mov
xchg
sti
dec
mov
outs
fsubr
pop
mov
dec
adc
mov
adc
pop
jnp
ja
dec
xchg
cmps
push
adc
push
sbb
retf
mov
inc
dec
jo
inc
mov
mov
dec
pop
dec
cmp
push
xchg
mov
adc
sub
in
dec
in
mov
push
pop
pushf
mov
dec
pushf
ja
pop
xlat
cmps
popf
pop
push
push
mov
aaa
data16
xchg
adc
in
dec
add
dec
cmp
rcl
aam
je
test
nop
ror
sbb
push
sbb
call
(bad)
jg
mov
mov
push
into
out
out
add
adc
test
push
mov
inc
ins
aad
xlat
adc
data16
adc
ja
loopne
jo
ficomp
popf
aas
dec
iret
pop
ss
fcom
je
retf
inc
mov
je
add
mov
pop
icebp
clc
int3
out
cld
cmp
jnp
pop
cmp
out
xchg
lods
in
mov
push
jl
ins
xor
fisttp
(bad)
call
mov
shl
out
out
cmps
mov
mov
jecxz
sub
sub
inc
lds
push
dec
int
jno
rol
xor
mov
sub
ss
mov
lock
das
ror
fwait
xchg
add
jns
retf
loop
cmps
jmp
out
mov
sbb
jmp
ret
xor
out
xchg
jmp
out
or
loop
rcr
add
pop
sbb
fmul
pop
outs
in
icebp
inc
adc
cli
cmp
mov
xor
in
mov
or
cs
popa
mov
fwait
retf
cdq
jg
push
cs
jl
inc
inc
shl
push
fcomp
cmp
inc
cld
imul
cs
inc
mov
push
adc
jbe
mov
sub
lods
repnz
jmp
jecxz
(bad)
jmp
repnz
mov
cmp
lahf
fcmovnb
mov
xor
sti
mov
jns
xchg
push
ins
lock
pop
mov
sbb
adc
out
popf
sbb
pop
push
mov
cmps
popf
sub
cmp
lea
rol
cmp
sbb
pop
push
(bad)
push
(bad)
jecxz
frstor
jmp
jns
push
sub
imul
sbb
je
arpl
sar
imul
push
aaa
mov
div
fmul
sbb
sti
mov
mov
daa
bound
inc
fisttp
xor
rcl
in
nop
xchg
sub
out
xchg
int
mov
cmp
sbb
shl
popa
push
lods
fisub
sub
dec
test
mov
push
out
js
mov
jge
push
in
cdq
inc
shl
rcr
mov
iret
push
push
jl
dec
mov
sub
jnp
test
push
push
aad
xor
add
arpl
repz
inc
ss
or
mov
inc
inc
fiadd
icebp
shr
bound
mov
add
dec
test
mov
jnp
not
xor
popa
repnz
cli
daa
xchg
sbb
inc
(bad)
(bad)
pop
jb
sbb
mov
mov
pop
je
lods
or
cdq
(bad)
fwait
cmp
add
sti
mov
adc
cdq
scas
aam
mov
int
pop
mov
test
push
cmp
(bad)
xor
push
push
or
pushf
adc
fistp
imul
push
scas
cmp
enter
out
dec
jo
jbe
outs
enter
imul
xchg
xchg
or
dec
ds
test
mov
mov
ret
xor
rol
mov
inc
mov
sbb
fwait
sub
scas
(bad)
imul
adc
shr
iret
fldcw
cs
out
sbb
sub
xchg
jg
cmps
jmp
xchg
mov
pop
mov
add
push
mov
sub
mov
push
repz
loopne
aam
inc
ss
sub
enter
or
(bad)
bound
mov
dec
es
adc
sti
add
sbb
mov
jns
int
jmp
xor
ja
daa
(bad)
ins
jge
sub
push
das
retf
imul
mov
lahf
jbe
cmp
bound
dec
xor
or
dec
loop
xor
mov
ins
daa
inc
add
(bad)
mov
movs
push
(bad)
mov
jp
in
jp
sbb
int3
repz
xchg
sar
push
sub
sub
ss
push
imul
cmps
outs
fbld
fwait
mov
dec
xor
push
mov
jmp
mov
iret
adc
xor
idiv
jecxz
adc
loopne
mov
sub
inc
add
adc
pop
mov
or
call
jmp
jns
cmp
or
or
or
cli
mov
ds
lods
pusha
xchg
cmp
cmp
lahf
push
mov
fidiv
ret
mov
xor
sub
push
mov
xchg
rol
mov
mov
(bad)
sbb
and
mov
lods
sbb
lods
aas
mov
movs
sbb
and
pop
imul
adc
jo
xor
rcr
cmp
mov
add
push
(bad)
xor
pop
xchg
mov
and
rcl
push
fs
add
inc
xor
das
mov
dec
jno
add
test
sbb
xchg
inc
inc
sbb
or
repz
fnstsw
sub
out
xor
loope
push
dec
rol
mov
ss
out
xor
jp
jp
fs
aaa
aaa
arpl
push
loopne
jno
int3
fs
jmp
xchg
pop
ret
cmps
mov
loopne
outs
adc
stos
xor
jl
dec
mov
jo
mov
jnp
or
loopne
movs
mov
xchg
test
inc
es
push
stc
cmc
add
das
jle
lods
adc
cwde
arpl
(bad)
mov
or
cwde
cmp
rcl
adc
stos
imul
sbb
mov
and
(bad)
aad
sbb
movs
cmp
jnp
xor
jnp
fidivr
jb
and
cwde
fcom
or
pop
mov
into
push
fld
xor
std
pop
int
push
mov
and
in
lods
hlt
retf
mov
sbb
mov
inc
mov
dec
cwd
les
add
and
and
push
push
xor
fiadd
sub
xchg
and
or
push
inc
retf
pop
mov
js
in
sub
shrd
call
lahf
int3
push
retf
cli
pop
sub
(bad)
jo
sub
mov
inc
popa
ret
fld
mov
stos
push
out
inc
sub
call
nop
outs
push
je
(bad)
es
popf
les
xchg
dec
sub
push
and
pop
jo
imul
xchg
into
fadd
stos
out
aas
or
call
(bad)
out
jbe
mov
imul
(bad)
sahf
ss
sbb
mov
fwait
div
jae
jmp
ins
addr16
lods
pop
sbb
idiv
pop
jp
adc
mov
add
add
mov
iret
mov
shl
icebp
lods
(bad)
(bad)
(bad)
cmp
faddp
inc
jne
cmps
xchg
xchg
les
mov
jg
fstp
push
sahf
adc
push
mov
sub
gs
cmps
into
ret
ds
mov
mov
idiv
adc
mov
outs
and
xchg
shl
je
pop
dec
and
inc
or
aaa
and
mov
pushf
rol
std
push
bnd
fild
push
jmp
mov
mov
fld
sti
es
in
fdiv
mov
cwde
jb
adc
fsubr
pop
fmul
xchg
push
xchg
mov
inc
pop
xor
mov
jbe
ror
fdiv
lea
or
hlt
pop
inc
clc
fs
rcr
xor
inc
inc
push
or
cld
fwait
imul
fnsave
addr16
pop
out
pop
fisttp
cmp
jle
push
cmp
or
inc
mov
jb
ins
shl
or
push
or
xor
jae
push
sub
fucomip
sbb
outs
pop
fldenvw
push
sub
repnz
pop
in
adc
jne
jmp
outs
repz
xchg
inc
in
jb
es
sub
cmp
jnp
sub
lods
std
fstp
adc
mov
into
and
int
sub
call
bnd
hlt
arpl
ror
adc
xchg
fsub
jbe
inc
sbb
and
cld
mov
movs
scas
jge
add
and
sub
into
scas
jne
push
js
cmp
call
jl
int
cmp
adc
fwait
cmc
mov
add
dec
cmp
ins
jg
add
inc
inc
cwde
xor
pusha
mov
jmp
inc
lods
test
aam
in
dec
cmp
iret
in
std
add
inc
sbb
pusha
pop
(bad)
aaa
cvtps2pd
mov
jo
push
xchg
cmps
push
push
test
repz
out
in
inc
and
mov
sub
adc
int3
push
push
push
movs
js
pop
cdq
sahf
pop
int3
pop
ret
test
xchg
repz
test
push
lods
and
inc
inc
arpl
int
bound
lods
call
mov
movs
adc
(bad)
fld
pop
mov
cmp
sbb
dec
adc
test
jnp
mov
fsub
repnz
(bad)
jmp
xlat
(bad)
(bad)
scas
push
or
ficomp
push
fbld
pavgw
mov
fs
xchg
(bad)
adc
xor
out
jl
push
es
mov
dec
sub
mov
enter
pop
mov
pop
int
mov
jb
and
(bad)
jmp
jg
jno
dec
xchg
retf
ja
mov
(bad)
xor
hlt
pop
sub
std
sbb
push
mov
inc
adc
and
xchg
jbe
xchg
add
rcl
push
mov
add
es
inc
mov
bound
adc
shr
xchg
(bad)
sub
aad
and
stos
out
outs
test
stc
adc
xor
hlt
jmp
test
fwait
cmp
loope
retf
dec
sbb
push
hlt
and
gs
pop
sbb
xlat
loop
nop
fcomip
xor
test
dec
loop
mov
add
xor
repz
dec
jp
inc
mov
mov
pop
gs
fs
sti
and
or
sbb
mov
pop
pop
aad
inc
add
imul
sahf
mov
scas
and
test
aas
sbb
mov
jmp
fsubr
pop
es
add
loope
or
or
xor
lock
or
cmp
jmp
or
sar
or
(bad)
sar
sahf
stos
cmp
xor
retf
push
movs
mov
dec
ret
xor
push
push
or
repnz
jl
into
mov
sub
add
in
xor
retf
and
sbb
mov
cmp
shl
add
ret
rcr
jo
xor
cmps
jge
lods
xor
inc
or
and
fbstp
clc
cs
dec
and
mov
int
jmp
call
pop
pop
ja
push
adc
movs
add
nop
imul
lds
shl
call
push
stos
xor
sbb
push
out
mov
add
mov
gs
mov
aas
jne
rcl
es
loopne
fimul
cmc
shl
mov
mov
cs
mov
sub
cwde
ss
add
pushf
loopne
call
lds
(bad)
pop
(bad)
mov
or
mov
inc
clc
fsubr
xlat
xchg
xlat
pop
push
dec
cmc
pop
xchg
cmp
jnp
mov
repz
jb
nop
add
cmp
pop
mov
sbb
or
xlat
jne
dec
and
movs
leave
jbe
jnp
out
leave
scas
in
les
in
sbb
xor
inc
inc
xor
add
sub
cwde
mov
(bad)
pop
xor
in
and
cmp
mov
pop
fcmovbe
imul
arpl
mov
jecxz
jecxz
cmc
sbb
adc
cs
mov
(bad)
xor
test
cli
dec
loopne
out
cmps
adc
push
stos
(bad)
dec
sbb
xor
clc
jns
outs
retf
aad
fst
or
sub
out
jle
cmp
out
dec
jecxz
or
rcr
and
movs
in
xchg
dec
in
repz
inc
mov
pop
and
mov
mov
inc
jo
ret
fwait
(bad)
jae
clc
in
sub
and
and
sub
pop
jecxz
fadd
scas
test
adc
stos
clc
xchg
mov
les
out
int3
fs
fstp
jecxz
jne
bndstx
out
jb
cs
dec
dec
pop
arpl
inc
mov
add
mov
adc
test
pop
or
lods
sub
sub
aaa
push
dec
ret
and
mov
cmp
inc
push
(bad)
rcl
mov
add
cdq
push
and
das
ret
dec
(bad)
and
lds
cmps
aas
mov
cmps
in
and
push
rol
xor
mov
mov
inc
loop
ds
mov
jmp
cmp
jecxz
cmps
and
movs
xor
sub
inc
adc
sbb
aaa
xchg
mov
xchg
outs
push
mov
dec
je
cmc
stc
movs
sbb
mov
pop
push
inc
rcr
xchg
mov
or
aam
rol
lods
loop
xlat
(bad)
mov
cmp
and
inc
pop
sbb
mov
hlt
jns
fucomi
sar
aaa
add
inc
jo
jle
push
push
jl
adc
push
xor
and
out
push
sahf
mov
fsubr
cmp
aad
mov
les
add
movs
imul
int
fwait
les
push
aas
sbb
mov
sbb
dec
dec
mov
popa
pop
push
pop
and
ret
cmp
push
hlt
dec
dec
repnz
mov
fisttp
or
xor
aaa
iret
add
inc
(bad)
sbb
xchg
or
inc
mov
push
das
fxch
aad
jmp
xchg
or
daa
mov
pop
out
jnp
int
adc
cmp
jecxz
mov
mov
rcl
out
push
(bad)
dec
(bad)
mov
mov
ins
in
retf
xchg
fsubrp
mov
cmp
cmp
or
fwait
inc
push
add
xchg
es
add
les
cwde
adc
xchg
call
inc
mov
cwde
jne
lock
mov
mov
pusha
repnz
neg
cmp
dec
mov
mov
repnz
sahf
into
out
addr16
push
inc
scas
inc
(bad)
mov
(bad)
sbb
shl
sub
repnz
and
cld
scas
mov
int3
pop
cmps
dec
scas
add
imul
test
cli
push
icebp
sbb
inc
iret
inc
sbb
popf
and
popf
mov
fld
cmc
pop
jnp
sar
lods
mov
nop
cmp
neg
sub
adc
cmp
xchg
imul
sub
cli
loope
xchg
pop
mov
cli
mov
add
push
sbb
dec
sti
and
cmp
add
aas
pop
(bad)
hlt
js
jp
mov
inc
pop
push
mul
les
jae
inc
jmp
xor
not
jne
aam
hlt
out
(bad)
out
lock
or
scas
xchg
hlt
rcl
ret
inc
cmp
lock
cmp
pop
fild
test
call
add
in
aas
enter
test
pusha
(bad)
rcl
push
mov
mov
test
pop
movs
xor
or
stos
add
jg
setae
fmulp
push
or
push
loop
test
xor
pushf
and
lods
jp
jge
xor
pop
push
rcr
bound
cli
push
lea
leave
inc
test
movs
pop
sbb
push
cli
dec
pop
mov
and
cmc
lock
xchg
pop
push
add
xor
push
lock
jge
enter
sbb
lds
(bad)
mov
fcom
and
dec
shr
out
cwde
out
pushf
xchg
or
mov
cld
pop
xor
pusha
and
jns
hlt
mov
push
rol
jecxz
and
retf
pop
test
or
add
jg
inc
xchg
cdq
loop
add
xchg
out
(bad)
or
(bad)
sub
xor
sahf
xchg
dec
jnp
lds
in
xchg
push
push
mov
cmp
jl
sbb
mov
leave
sbb
and
dec
mov
je
mov
aam
ss
rcr
jp
data16
xchg
div
jecxz
repz
mov
jle
test
fsubrp
sahf
push
pop
and
stos
aaa
and
into
aam
lahf
cld
stc
out
push
mov
dec
retf
add
out
fsubp
jb
dec
mov
loop
sub
pop
stc
and
xchg
ss
sub
pop
inc
push
retf
sub
imul
cmps
mov
sbb
xor
xor
test
lahf
sub
std
mov
lea
xchg
fs
cmps
aas
or
icebp
rcl
add
imul
jb
pop
rol
sub
dec
dec
or
je
adc
scas
mov
jb
mov
clc
call
dec
push
jno
dec
xor
push
sbb
dec
bound
or
in
loope
pushf
mov
popf
ss
pushf
xor
fld
sub
jmp
cli
push
mov
stc
push
mov
leave
xor
retf
cmp
push
shr
jle
xchg
mov
mov
gs
cmps
jmp
xchg
xchg
adc
add
cmp
mov
adc
mov
movs
push
popf
(bad)
out
aaa
pop
inc
xchg
pusha
and
xor
mov
sbb
mov
or
adc
int
adc
jp
xchg
loop
lods
push
mov
(bad)
rcr
pop
cmp
ins
mov
add
loop
mov
pop
lock
jb
or
pushf
cmp
jnp
or
add
mov
jb
out
and
(bad)
mov
aam
sahf
iret
xlat
sub
pop
cs
xchg
clc
jbe
lods
out
and
stc
adc
retf
jb
xor
dec
adc
out
jae
jmp
pop
iret
pop
push
sbb
push
mov
pop
movs
test
push
mov
push
lahf
inc
push
and
leave
loope
mov
add
bound
(bad)
into
cmp
pop
xor
lahf
jne
dec
or
in
dec
pop
jle
inc
mov
xchg
dec
mov
cmps
mov
mov
scas
scas
fs
sub
jb
pop
ss
dec
into
mov
xchg
jns
dec
outs
mov
bound
sbb
mov
mov
out
mov
adc
scas
popf
add
cmps
in
inc
inc
test
aas
retf
mov
adc
iret
pop
ret
inc
loop
movs
sbb
xchg
int
dec
outs
cmp
and
adc
scas
les
pop
xor
xor
xchg
adc
fist
pop
add
les
mov
popf
adc
push
cmp
adc
cmc
cmp
push
inc
and
nop
ins
xchg
aam
mov
jecxz
mov
add
out
inc
jg
push
mov
in
movs
inc
movsx
stos
xchg
ret
test
mov
test
inc
mov
xor
sbb
jns
adc
test
cmp
mov
mov
jmp
imul
cmp
loopne
inc
jl
mov
movs
(bad)
in
xor
(bad)
sbb
test
in
pop
gs
jmp
rcl
cmp
cmp
sbb
dec
sub
cmp
xchg
jne
cdq
mov
in
sub
inc
cwde
dec
xchg
fcomp
daa
xor
aaa
cmps
cmps
and
outs
shl
out
dec
ds
jae
mov
sub
fdivr
sbb
loopne
cdq
dec
and
push
(bad)
loopne
add
dec
call
in
mov
pop
in
pop
loope
mov
adc
shl
das
pop
pop
mov
mov
dec
adc
or
jbe
adc
jmp
test
pop
cmp
(bad)
das
rcl
fcom
pop
call
mov
lea
add
mov
imul
fnstenv
adc
cdq
call
xchg
mov
arpl
xor
fwait
mov
fidiv
jno
fdivr
or
retf
mov
loopne
add
push
mov
sbb
add
imul
mov
adc
shr
jg
jne
xchg
popf
and
jle
out
fcmovb
push
icebp
jne
or
fcmovnbe
in
cmp
mov
cmp
(bad)
ficomp
outs
xchg
ror
out
mov
cmp
adc
mov
test
stos
(bad)
adc
in
repnz
sar
imul
pop
push
test
pop
(bad)
fwait
pop
outs
aam
xor
fcom
vlddqu
test
shr
dec
ja
and
loopne
push
loop
jecxz
fimul
jne
clc
jns
fwait
mov
pop
jb
rcr
mov
fld
and
test
or
mov
ins
pop
xor
repnz
fisttp
jg
das
loop
cmps
mov
popf
test
fnsave
add
lahf
jne
inc
pop
xchg
out
mov
popa
jo
adc
arpl
xchg
mov
nop
jnp
adc
cld
(bad)
pmulhuw
xor
pop
xchg
mov
or
cmp
xor
cwde
mov
lods
aaa
xor
inc
pop
dec
scas
jne
jb
adc
les
aad
mov
xor
cwde
rcr
or
mov
scas
pop
adc
cmc
sahf
and
jns
sbb
jecxz
jmp
mov
jo
add
push
xlat
test
push
jg
xchg
xchg
stos
or
mov
pop
call
mov
sbb
pop
xchg
addr16
mov
(bad)
fmul
and
outs
call
xor
sahf
jmp
sbb
scas
enter
test
mov
jge
sbb
inc
adc
int3
mov
imul
popf
clc
pop
fdiv
pop
mov
add
or
lods
cmc
sub
sbb
gs
rcl
jp
mov
sub
inc
outs
inc
jle
push
cdq
jecxz
adc
fsubp
fimul
jmp
mov
popf
ds
(bad)
mov
frstor
pop
sbb
ins
mov
iret
or
shl
std
jge
les
mov
jecxz
in
call
mov
lds
cmp
mov
sbb
or
mov
sub
or
xor
test
es
mov
test
lahf
pop
xchg
loope
lea
iret
xchg
mov
xlat
pop
pop
push
les
fcom
cwde
sub
xchg
sbb
sbb
sti
test
add
add
(bad)
add
into
leave
jo
sbb
dec
xchg
arpl
aad
sbb
(bad)
sub
(bad)
mov
xchg
mov
xchg
fisub
int3
mov
xchg
hlt
orps
ror
cmp
and
mov
popa
jmp
ficom
add
push
adc
lea
ror
inc
dec
dec
xchg
mov
dec
inc
loope
ret
in
dec
js
pop
xchg
jno
inc
mov
jle
adc
out
mov
cli
xchg
push
sbb
ret
popf
sbb
icebp
mov
in
push
mov
cmc
setnp
cwde
adc
sub
jp
fmulp
test
push
ins
sti
in
out
xchg
xor
add
test
push
mul
push
dec
jo
loop
dec
mov
icebp
add
lahf
pop
(bad)
mov
test
retf
jmp
imul
cmc
mov
addr16
mov
jbe
mov
cmp
inc
push
imul
inc
pop
mov
sti
scas
cmp
pop
(bad)
fldenv
popf
sub
cmp
xchg
sbb
sti
jmp
dec
cmp
pop
jo
adc
mov
imul
movs
or
mov
add
push
std
and
in
jns
aaa
ffree
imul
gs
pop
sbb
pop
sbb
xchg
adc
call
clc
dec
or
jns
dec
inc
push
outs
cmps
cs
out
std
xchg
pop
int3
test
inc
mov
repz
int3
pop
push
lock
mov
pop
pop
pop
xlat
mov
mov
xchg
ins
jnp
pop
adc
imul
daa
mov
dec
sbb
retf
mov
or
imul
retf
nop
inc
pop
mov
out
lds
or
inc
mov
mov
adc
inc
jl
std
pop
cmc
cmp
je
add
pop
mov
fdiv
push
cwde
jbe
mov
dec
(bad)
loop
fnstsw
xchg
fistp
icebp
ja
pop
loopne
daa
int
outs
std
push
aas
jmp
mov
mov
imul
adc
iret
int3
and
sbb
xor
push
push
fiadd
xchg
idiv
pop
xor
xchg
jbe
popf
fidivr
adc
mov
mov
imul
inc
or
mov
mov
ins
aad
in
inc
mov
bnd
in
xor
dec
mov
push
or
retf
cmp
inc
and
inc
inc
outs
cmps
xor
lahf
sub
psubw
leave
fild
jnp
xor
iret
mov
cmp
pop
xchg
jge
cmp
repz
cmp
dec
gs
int3
dec
mov
cmc
or
sub
call
cmp
mov
clc
mov
idiv
out
repnz
ror
je
test
push
mov
push
jb
div
xor
fcomp
push
out
xchg
out
dec
mov
pop
cmp
push
cld
sbb
leave
cdq
ins
jg
pop
repz
sbb
jns
clc
push
test
test
int3
or
xor
jae
ja
je
int3
pop
repz
ins
jnp
cmp
jg
push
(bad)
in
sbb
rcl
clc
movs
out
movs
or
cmp
xchg
jb
cmp
xchg
xor
rol
push
cwde
or
mov
jecxz
mov
xchg
adc
dec
(bad)
addr16
cmp
ror
mov
daa
push
psubd
test
xchg
mov
jbe
int
lock
popf
pushf
aam
mov
test
mov
inc
cmp
push
mov
in
pusha
jbe
jl
push
mov
loope
mov
jge
pop
mov
sub
pop
sub
xchg
xchg
xor
sbb
and
jl
lods
add
push
lock
icebp
fldcw
pop
call
mov
mov
movs
(bad)
xor
jle
ficomp
pusha
xchg
imul
repz
sbb
xchg
scas
outs
loopne
sub
scas
mov
pop
retf
xchg
nop
shl
sbb
inc
repz
(bad)
fadd
mov
es
push
movs
cmps
inc
movs
bswap
xor
push
popa
pop
mov
adc
jne
mov
cmp
dec
sub
push
nop
and
and
push
jge
mov
out
adc
jnp
push
out
add
jle
dec
cmp
fistp
repz
fist
(bad)
(bad)
(bad)
jmp
mov
mov
test
inc
mov
mov
adc
mov
jae
out
sub
fidivr
scas
leave
sbb
xchg
ret
(bad)
adc
mov
loop
xchg
mov
int
sbb
add
add
mov
mov
ror
jg
push
dec
jmp
addr16
jle
cmp
jb
sub
inc
popf
ficom
ss
add
mov
dec
adc
out
mov
push
les
cmp
test
pop
xlat
cmps
and
call
je
inc
fild
mov
jmp
adc
jmp
fsubr
push
jle
sub
sar
out
jb
ss
fisub
(bad)
lods
repz
hlt
adc
ret
into
fidivr
sub
ror
shr
xchg
arpl
pop
(bad)
loop
js
in
ja
mov
int
aaa
pop
sbb
cs
bound
dec
push
jge
add
add
ja
lahf
ret
push
cmp
test
in
jno
adc
std
sbb
xor
sub
mov
sbb
lea
pushf
mov
push
retf
pop
jg
xor
sub
jmp
jmp
sahf
mov
push
pop
jmp
cdq
cmp
out
mov
gs
cmp
adc
add
add
xor
ins
es
add
arpl
cmps
outs
ins
ja
sub
xor
inc
dec
inc
push
sbb
inc
pusha
sub
xor
fistp
jl
mov
push
dec
jge
jbe
stos
scas
sub
mov
ins
cmp
(bad)
pushf
and
stos
or
xchg
mov
xchg
mov
and
cmp
sbb
test
and
mov
sub
push
or
jbe
(bad)
xor
inc
cmp
test
mov
fucomip
sahf
icebp
pop
mov
cmp
jne
sbb
jb
xor
je
mov
movs
mov
imul
xor
mov
test
addr16
and
jo
std
pop
cdq
jmp
(bad)
ret
sbb
mov
and
adc
fld
add
xchg
jns
ficomp
bound
retf
cli
sbb
call
cmp
imul
repnz
add
add
mov
aad
les
and
mov
es
retf
xchg
fild
in
lods
xchg
add
jo
shr
pop
fidivr
jecxz
je
cmc
movs
and
mul
push
pop
mov
xor
(bad)
xchg
adc
push
fwait
repz
cdq
daa
pop
mov
mov
xor
jl
lea
or
push
jg
cmp
adc
mov
mov
jmp
mov
dec
outs
outs
mov
xchg
movs
repnz
bound
imul
call
enter
(bad)
pop
dec
mov
lahf
movs
ins
scas
mov
inc
add
sti
mov
xchg
aad
mov
lods
mov
or
dec
test
add
cmc
cmp
or
push
stos
es
dec
mov
xor
and
in
lds
pop
mov
out
pushf
inc
add
mov
sub
mov
das
xor
pusha
mov
hlt
ror
or
inc
stc
lock
inc
jnp
mov
dec
or
repz
mov
lods
fld
mov
popa
ss
or
cmp
sub
sub
xchg
xor
repnz
jle
jp
jl
adc
cld
mov
xchg
(bad)
in
nop
jo
outs
aad
(bad)
popf
es
(bad)
pop
mov
sbb
arpl
mul
and
inc
movs
mov
fistp
mov
jmp
(bad)
sbb
push
cmp
je
clc
lahf
ret
lea
mov
sub
xchg
pusha
sbb
shl
call
pop
mov
out
cmp
mov
dec
jecxz
sar
cmps
adc
or
test
nop
push
clc
stc
out
and
mov
mov
cdq
ret
sbb
outs
in
frstor
jbe
pop
dec
es
push
pop
cmps
imul
jne
gs
or
ror
jge
xchg
icebp
outs
call
mov
jmp
movs
retf
mov
fstp
mov
adc
sahf
inc
iret
xchg
mov
leave
jno
jmp
mov
pop
imul
cmp
push
in
mov
aaa
in
or
xor
mov
loopne
out
push
arpl
cmp
fnstenv
lods
hlt
or
pop
push
push
fs
jle
pop
push
cdq
cmp
mov
cmp
movs
cld
aaa
adc
fiadd
mov
jnp
lds
out
std
jg
jg
test
sub
mov
ss
shr
cmp
loop
mov
mov
ss
pop
mov
pop
das
xchg
mov
(bad)
fs
es
and
aaa
out
dec
test
fnsave
mov
popf
pop
sub
neg
sub
push
fcom
fadd
rol
es
setne
clc
jl
jo
scas
sbb
mov
cs
pop
inc
xor
ficomp
fist
ret
sti
jmp
int
push
daa
push
scas
cmp
icebp
jmp
(bad)
(bad)
mov
jno
(bad)
mov
loope
test
je
stos
xchg
jmp
sub
ins
cmp
mov
pop
and
mov
dec
push
and
dec
cmps
adc
push
mov
ret
mov
push
mul
inc
jns
movs
ja
mov
cmp
int
push
daa
(bad)
into
add
dec
in
mov
jmp
enter
xor
fcom
xor
push
leave
(bad)
(bad)
mov
sti
ret
dec
mov
jnp
push
mov
push
cld
jg
(bad)
mov
cmp
movs
push
rol
cli
sbb
mov
cmp
fcmovnu
stos
stos
aaa
cmps
inc
sbb
push
jo
fldcw
xor
maskmovq
test
cmp
dec
cmc
push
jmp
mov
daa
mov
sti
aam
sub
or
jne
cmp
and
jo
push
fs
xor
mov
mov
gs
ret
aam
mov
loop
pop
fnsave
jecxz
out
popf
add
add
fisttp
mov
mov
xchg
push
ret
call
shr
push
retf
push
aam
pop
pop
jmp
out
inc
and
or
into
movs
int3
dec
jo
xchg
mov
es
mov
xchg
test
mov
int
inc
into
movs
mov
test
loope
xor
adc
xchg
dec
adc
sub
cmp
std
push
mov
jmp
scas
fdivr
cmps
stc
dec
test
call
in
(bad)
retf
in
pop
cmps
std
js
cli
scas
jle
movs
outs
std
mov
lods
inc
mov
std
stc
or
adc
aas
mov
pop
mov
adc
stos
jl
stos
mov
(bad)
xlat
loope
imul
and
rep
out
inc
addr16
push
lds
sub
scas
pop
movs
adc
jmp
dec
jne
jl
movs
jae
sahf
(bad)
jmp
nop
push
push
fisub
jecxz
mov
pusha
mov
cs
(bad)
int
imul
mov
jo
in
mov
sbb
pop
inc
cmp
hlt
xlat
adc
xchg
ret
aad
or
jmp
outs
xor
xchg
mov
outs
(bad)
retf
xlat
add
iret
inc
xchg
push
frstor
lds
adc
ins
cwde
mov
mov
ret
xchg
das
test
and
dec
aad
icebp
push
sahf
inc
fidivr
ror
push
push
imul
cmps
rol
cld
retf
aam
retf
pop
aas
fst
cmp
push
jle
fst
sbb
mov
in
test
push
add
jmp
xor
std
push
jmp
sar
fninit
into
add
xchg
push
rcl
aad
mov
(bad)
iret
mov
push
into
push
cld
aam
lock
xlat
hlt
jmp
retf
stos
daa
mov
xchg
sub
mov
pusha
pusha
and
rcl
sub
sbb
loopne
mov
cs
and
(bad)
rcr
ins
mov
iret
repz
sbb
xchg
test
leave
inc
jns
adc
or
xor
pop
add
adc
pop
popa
sub
pop
adc
mov
fild
mov
mov
cld
sub
add
ror
jl
dec
mov
enter
jbe
jo
cmp
mov
aam
dec
adc
cdq
addr16
mov
or
shr
(bad)
and
xchg
xchg
popf
cmp
cld
jb
mov
jecxz
ds
cld
jnp
fsubr
mov
mov
popf
imul
(bad)
adc
xor
aas
fs
and
out
push
jecxz
push
pop
ficom
pop
sub
dec
cmp
iret
or
sub
xchg
sbb
xchg
push
and
add
jmp
out
mov
add
daa
ins
das
lods
inc
aas
aam
xor
ins
lods
push
jno
sbb
sbb
rcl
cli
cmc
push
lods
fdivr
fisttp
sbb
push
popa
mov
call
loop
pusha
ja
cmp
push
cmp
adc
shl
mov
ja
sub
test
dec
sbb
add
imul
test
inc
into
ins
ret
(bad)
fisttp
pop
icebp
xchg
test
jg
shr
sbb
popa
xor
movs
cli
js
xchg
or
push
adc
pop
loop
or
retf
and
dec
outs
jns
mov
repz
bound
js
dec
add
js
jmp
fistp
and
and
add
imul
aaa
ret
and
pop
mov
mov
mov
mov
enter
cmp
fnstenv
jo
adc
lods
out
call
sub
lds
arpl
mov
pop
outs
pushf
jg
daa
sub
mov
and
mov
mov
cmps
repz
sub
lea
xchg
and
cld
jecxz
cmp
pop
mov
mov
and
mov
push
sahf
xor
mov
mov
ret
fdivr
call
push
dec
int3
mov
jmp
ds
pop
enter
out
fwait
and
xchg
fbstp
scas
hlt
stos
scas
sub
mov
push
push
mov
cli
cmps
nop
sbb
out
or
sar
jp
stos
or
mov
fisttp
fimul
xor
mov
mov
call
cmp
movs
cmp
bnd
xchg
adc
in
or
push
int
adc
add
push
pop
fs
clc
xchg
mov
cmp
jle
loop
imul
nop
and
sbb
push
lock
cwde
push
pop
aad
fidiv
adc
mov
jp
mov
jmp
push
push
xor
mov
leave
jmp
add
inc
cmp
pop
push
push
push
loope
inc
sar
test
inc
call
movs
mov
shl
imul
lds
js
cmp
add
imul
mov
mov
(bad)
adc
in
mov
pop
fwait
xchg
and
mov
jne
pop
push
jmp
and
nop
mov
imul
(bad)
sbb
sbb
bound
add
test
cmp
jp
sub
pop
fucom
and
cmp
fcom
xor
xchg
mov
int
add
mov
push
cmp
fisubr
inc
mov
fmul
int3
sbb
test
jo
je
(bad)
jge
hlt
je
xchg
(bad)
movs
inc
cs
pop
addr16
xchg
daa
outs
inc
adc
mov
add
repnz
sahf
pop
js
addr16
adc
cmp
inc
fmul
(bad)
(bad)
xchg
pop
call
jle
cmps
inc
inc
stc
ins
cs
push
ins
or
sbb
add
hlt
outs
pop
sub
adc
les
sbb
push
inc
push
das
pop
and
retf
dec
adc
pop
push
jae
pop
cmp
xchg
imul
loope
mov
je
mov
cli
add
rcl
adc
add
ins
popa
jle
loop
cli
xor
cmps
(bad)
or
jne
data16
popa
xchg
sbb
mov
(bad)
out
mov
jp
or
cmc
lahf
xor
add
hlt
xchg
push
test
test
cmc
shr
or
jbe
aas
add
repz
and
push
xchg
sub
or
loop
fdiv
mov
daa
clc
dec
inc
inc
pop
push
sbb
int
jne
je
xchg
mov
mov
xor
adc
add
add
ficomp
xchg
es
stc
fs
push
dec
xor
adc
pop
out
shr
cmp
push
jo
test
stos
pop
adc
jne
out
push
push
inc
pop
lods
lds
hlt
pushf
test
(bad)
or
ins
dec
pop
cdq
int
adc
sahf
fwait
sbb
mov
cmc
sar
sbb
adc
cmp
xor
pop
and
jecxz
adc
iret
cmps
sti
jb
lea
jmp
mov
xchg
jno
nop
jle
cmp
ins
loopne
push
xor
in
pop
imul
leave
loop
fwait
dec
xor
stos
cmps
iret
(bad)
inc
in
mov
lods
push
jne
adc
out
inc
xchg
retf
adc
push
sub
repz
jmp
sar
xchg
popa
shr
shl
mov
les
cwde
adc
lds
push
mov
mov
cdq
cli
jno
ror
addr16
push
add
fs
cmp
aad
push
mul
iret
daa
push
(bad)
retf
inc
out
popf
lods
(bad)
push
ds
cmp
icebp
dec
xor
add
jb
ror
mov
and
fdiv
sbb
nop
cmp
xor
mov
xor
xchg
pop
xchg
fwait
(bad)
jecxz
xlat
out
stc
jecxz
cmps
pop
jo
adc
xor
retf
rcl
cmp
pop
pop
add
xor
(bad)
int
cli
lea
retfw
sub
add
dec
iret
xchg
cmp
pushf
push
es
jne
repnz
pop
loope
sbb
xchg
mov
(bad)
xchg
shl
xchg
xor
js
into
cmps
pop
loopne
and
xor
cdq
sub
mov
cmps
xor
ffree
shl
adc
jmp
pop
fs
xor
das
lds
cmp
bound
mov
jb
data16
out
aas
or
scas
pop
imul
add
cld
mov
add
call
lods
sbb
in
xchg
dec
jmp
leave
jmp
cmps
ja
icebp
xchg
js
mov
dec
mov
dec
mov
push
std
outs
pop
sub
in
test
sbb
das
jmp
jecxz
(bad)
mov
lods
or
lahf
mov
dec
repz
std
and
adc
lahf
mov
dec
inc
enter
fiadd
movs
mov
mov
sub
lahf
mov
out
xchg
fsubr
lock
in
inc
cmp
daa
jmp
call
retf
push
jnp
dec
(bad)
out
push
jo
jg
sub
inc
jne
jge
shl
sub
int3
pusha
or
pusha
int3
test
test
ins
cmp
or
xchg
in
sbb
rcl
adc
mov
push
push
stos
shl
xchg
cmp
mov
fstp
mov
ja
dec
xchg
and
je
gs
adc
add
repz
call
enter
int3
mov
pop
cli
mov
dec
mov
mov
movs
in
out
(bad)
sahf
xchg
dec
retf
int
dec
pop
cmp
push
js
mov
cmc
out
cmc
push
sti
cmp
and
or
dec
popa
fisub
retf
shl
inc
push
push
or
adc
cmp
jg
iret
mov
cmp
add
test
mov
jb
dec
mov
xchg
sbb
jns
std
fs
jle
mov
adc
loop
out
out
out
jns
iret
repz
sbb
loopne
xchg
mov
rol
fmulp
mov
push
push
sbb
jb
sub
fidiv
jnp
into
mov
and
daa
add
mov
test
xor
movs
sub
fdiv
pop
sti
jmp
shl
imul
or
mov
add
sar
idiv
mov
inc
adc
jne
and
mov
cmp
push
adc
adc
in
test
mov
xchg
sub
test
daa
pop
je
jmp
daa
not
jno
stos
clc
pop
scas
push
ins
sub
popa
cmp
or
push
popa
add
pop
movs
push
je
rcl
mov
cld
xor
cmc
sti
(bad)
into
aam
xchg
ss
dec
push
das
enter
add
std
and
sbb
cmps
call
fwait
xlat
pushf
mov
adc
or
sbb
sbb
jl
or
ins
ds
retf
sub
cmps
cmp
dec
ins
test
in
add
loopne
pop
mov
xchg
arpl
shr
sub
push
retf
jg
xor
pop
lea
xchg
sub
js
jne
inc
mov
fdivr
add
loopne
movs
aad
and
mov
ror
xchg
jecxz
inc
or
fdiv
inc
inc
add
jb
xchg
inc
pop
gs
cmp
xchg
gs
mov
leave
jp
or
out
movs
dec
and
mov
push
mov
rol
in
sbb
pop
lock
mov
outs
fcom
sub
sub
jmp
or
cld
icebp
inc
pop
xchg
cmc
and
xor
call
data16
pop
daa
loop
or
xchg
cmp
or
loop
mov
test
jl
test
ss
xor
pop
mov
and
xchg
xor
mov
test
push
jae
enter
adc
shl
adc
popf
add
jo
bnd
lods
and
popf
xor
fiadd
xchg
jb
bound
clc
xor
mov
adc
inc
xchg
or
(bad)
std
push
out
test
(bad)
lock
cmp
jmp
mov
movsx
sub
clc
pop
xor
scas
inc
pusha
inc
std
scas
inc
das
shl
sub
inc
mov
pop
fisubr
ds
jb
inc
xchg
sbb
cdq
out
ror
or
rcr
cs
(bad)
and
(bad)
push
pushf
stos
fsub
add
dec
mov
gs
fadd
imul
pusha
cwde
inc
(bad)
xor
popf
in
and
aad
mov
les
pop
sbb
add
fst
popf
or
xor
and
pop
pop
mov
or
xchg
inc
loop
mov
xchg
(bad)
jb
jns
popf
cmp
pop
fld
ss
jbe
out
jns
mov
shl
push
icebp
xor
cld
inc
jg
(bad)
jno
loop
xchg
jl
iret
aas
jns
lock
and
adc
ds
hlt
inc
and
test
inc
mov
out
into
test
inc
pop
retf
adc
dec
mov
std
outs
xchg
sbb
sbb
fadd
jns
cmp
pop
imul
mov
xchg
lods
(bad)
ds
pop
cmps
xor
scas
sub
xor
and
or
xor
push
pop
js
(bad)
(bad)
outs
or
aas
jp
cs
inc
out
and
jbe
and
retf
sbb
jnp
dec
in
clc
lods
ror
js
jne
ror
or
cli
dec
(bad)
icebp
push
int
or
sub
out
jo
jo
xchg
sbb
ins
mov
pop
nop
jne
clc
pop
sbb
xchg
cwde
cwde
loope
jmp
jmp
sub
ins
outs
imul
rcr
leave
push
sub
and
adc
sbb
push
inc
mov
jmp
cmp
(bad)
shl
fnstenv
int
leave
call
cmps
test
out
fstp
xchg
jmp
clc
outs
push
or
fnstcw
ss
cmp
ret
lahf
call
retf
lods
cs
in
inc
clc
push
jbe
cli
pusha
fcmovne
sbb
ror
out
repz
fild
adc
aas
cs
add
jg
ins
jo
mov
loope
clc
loop
jno
clc
sbb
jns
(bad)
xor
data16
cmps
ss
pushf
mov
xchg
pop
lods
pushf
enter
test
push
mov
cmp
dec
bound
pop
call
push
cmp
jne
adc
adc
mov
jp
push
dec
push
jmp
push
jno
and
jb
pushf
mov
pop
adc
stos
repnz
sbb
inc
test
(bad)
cld
ret
mov
mov
xor
imul
iret
leave
inc
test
jg
jne
enter
push
jg
fisub
stos
and
shl
dec
xchg
outs
ret
inc
loope
stc
push
dec
sahf
loope
and
push
data16
test
aas
aas
mov
mov
es
mov
lock
in
mov
(bad)
test
or
cs
inc
cdq
add
pushf
push
mov
pop
fs
sbb
sbb
pop
add
xor
xchg
adc
nop
pop
jmp
pushf
outs
inc
xchg
fstp
inc
fwait
inc
jg
jg
or
jmp
add
shr
scas
xchg
outs
dec
dec
push
daa
mov
push
pop
mov
pushf
shl
push
call
stc
(bad)
sub
xor
mov
push
mov
call
add
cmp
out
adc
call
lea
test
pop
mov
cmps
jno
adc
mov
sbb
adc
push
loope
cdq
mov
push
mov
jg
jecxz
out
dec
dec
cdq
sub
call
ss
fwait
imul
icebp
das
(bad)
pop
jbe
(bad)
loopne
addr16
in
aaa
call
sub
push
leave
dec
int3
pop
std
outs
dec
push
or
mov
mov
pop
or
stos
mov
(bad)
stos
mov
mov
ret
mov
imul
call
adc
imul
ror
test
add
cmp
retf
push
loopne
pop
stos
add
iret
cdq
les
dec
repnz
pop
bound
adc
cmp
jecxz
or
loope
mov
push
mov
inc
stos
imul
adc
mov
cmps
jmp
mov
cs
adc
add
hlt
ret
xchg
icebp
sbb
sar
xchg
or
dec
das
mov
pop
xor
mov
test
hlt
inc
aam
js
lods
inc
cmp
cmp
iret
fistp
pop
movs
es
mov
jl
push
dec
xor
jne
mov
cmp
rcl
push
outs
pop
jmp
add
inc
push
(bad)
cmp
jae
xchg
pop
(bad)
cli
add
xchg
sbb
pop
push
mov
sbb
pop
jmp
xor
pop
lds
push
pop
repz
fidiv
gs
cld
dec
push
adc
or
fmulp
lea
and
mov
lock
sub
in
fcmovne
push
dec
call
outs
xor
idiv
jecxz
(bad)
enter
jnp
pop
ret
xchg
loope
jle
into
sub
cmp
adc
gs
add
add
sar
pop
popa
xchg
add
mov
int3
xor
clc
fwait
mov
outs
les
test
not
and
xchg
nop
add
fwait
xor
lods
jle
cdq
mov
sub
bswap
mov
xor
hlt
dec
popa
mov
dec
out
popf
gs
data16
push
ficom
fwait
not
dec
sbb
mov
scas
ror
mov
cmp
pusha
into
sbb
jae
pop
rol
fnstsw
imul
inc
inc
ins
fild
outs
xchg
xor
ss
sub
sbb
stos
mov
in
push
js
adc
mov
inc
out
inc
ss
repz
mov
mov
mov
mov
retf
and
sub
jno
sub
and
jbe
pop
arpl
loop
sub
adc
aad
add
xchg
push
add
push
movs
mov
mov
sbb
push
dec
retf
fimul
push
cmp
ret
pop
push
(bad)
in
mov
add
pop
jge
cmp
push
retf
(bad)
pop
loopne
cmp
fs
clc
dec
xchg
shl
(bad)
inc
sbb
test
or
pop
loope
mov
mov
ss
xchg
xchg
rep
xchg
call
xor
int3
sbb
xchg
aad
jb
outs
or
inc
push
(bad)
shr
cmp
inc
pop
loopne
sbb
lods
stos
mov
loope
stos
xor
cmp
add
std
das
in
call
es
or
outs
push
sbb
dec
and
imul
or
ins
and
dec
ds
sub
mov
jmp
retf
stos
jmp
retf
lds
mov
mov
test
cld
push
test
push
lds
push
scas
les
call
popa
retf
ds
jle
js
rol
and
xchg
loop
or
or
mov
xchg
int
(bad)
push
mov
sub
xor
dec
mov
loop
adc
dec
in
push
movs
enter
loop
call
cmp
xor
cmp
cmp
enter
inc
gs
in
fld
lods
push
jl
dec
jo
sbb
call
inc
movs
mov
or
cmp
add
mov
test
js
inc
mov
test
cmp
les
ss
pop
test
cli
fist
xchg
and
repz
or
and
popa
sar
loopne
and
push
xchg
in
xchg
push
xor
jmp
sub
cmp
cmp
call
imul
daa
sar
or
imul
jns
or
fmul
jl
pop
jecxz
push
aad
mov
mov
ds
aas
push
cli
aaa
pop
adc
jg
out
sub
or
jb
dec
ret
lods
pusha
xor
sub
mov
adc
mov
(bad)
jmp
lock
call
inc
jg
pop
mov
sbb
or
mov
adc
imul
cmp
outs
jmp
retf
xor
fistp
or
test
push
cdq
imul
jp
add
js
stc
scas
push
pop
(bad)
push
lock
or
aas
or
ss
mov
stos
pop
mov
enter
in
nop
sub
jbe
retf
icebp
loop
or
fldenv
cmp
push
(bad)
or
lock
or
xor
cmc
test
mov
jecxz
je
mov
sti
loope
pusha
and
pop
sub
mov
popf
repz
test
xor
jl
test
lock
adc
rcl
or
inc
or
mov
lock
leave
mov
xor
js
jb
cmps
jo
xchg
stc
xchg
jno
sbb
and
jb
inc
ss
fcompp
fmul
jo
retf
push
lock
mov
jmp
std
sub
and
jo
xchg
inc
out
nop
pop
and
mov
aaa
adc
push
mov
fwait
out
nop
inc
inc
pop
sti
xlat
push
lds
retf
push
mov
add
mov
mov
into
add
test
loop
stos
jns
jmp
fild
and
jmp
in
cmp
mov
in
iret
add
loopne
fldlg2
fdivr
xchg
ss
push
(bad)
pop
mov
imul
cmp
xchg
xchg
and
test
stc
cmp
out
push
(bad)
fisub
dec
pop
lock
cmc
and
inc
mov
ins
sub
inc
dec
mov
stc
xchg
dec
sub
jge
dec
jmp
stc
push
mov
retf
outs
jl
icebp
push
mov
push
repz
fwait
pop
jmp
ja
(bad)
aam
jle
jno
mov
push
ja
icebp
or
jb
or
xor
mov
lods
stc
fld
sti
fs
cmp
jae
jmp
xchg
sub
xor
not
clc
inc
clc
iret
inc
sub
jl
mov
shr
loop
movs
(bad)
mov
sbb
xlat
mov
ror
(bad)
inc
ins
sub
jmp
iret
in
es
inc
shl
aas
jne
ins
icebp
stc
adc
movs
mov
dec
add
cmp
add
shl
sbb
xchg
push
dec
jbe
mov
cwde
pop
inc
mov
rcr
mov
pop
add
test
test
add
mov
jg
inc
jmp
mov
and
popa
cdq
inc
mov
and
jge
test
in
in
sti
lods
popf
sub
arpl
and
ins
pushaw
outs
es
or
and
ins
fsub
jle
push
fisubr
jge
shr
pop
xor
ins
in
mov
sbb
sub
xchg
retf
jo
pop
outs
rcr
pop
push
cmc
sub
stos
mov
dec
xor
push
dec
pushf
xchg
cli
in
cmp
mov
fsub
pop
int
push
mov
mov
je
inc
enter
push
mov
xchg
push
movs
cmps
(bad)
or
iret
jns
xor
call
test
jp
pop
adc
mov
inc
test
retf
add
mov
dec
add
ret
xchg
jl
xchg
and
add
jns
retf
retf
stos
mov
sub
ror
sbb
xor
pop
or
pop
fdivr
xchg
mov
inc
sub
sub
mov
jge
xchg
jae
fidivr
dec
mov
add
in
sar
sahf
sbb
(bad)
(bad)
test
add
iret
mov
and
popa
es
(bad)
xor
sub
mov
movs
dec
jbe
mov
jge
jnp
mov
cmp
pop
push
out
inc
jmp
mov
mov
dec
int3
sahf
lea
retf
test
es
mov
mov
in
xchg
xchg
dec
inc
xchg
pop
test
jo
sahf
sbb
in
dec
and
stc
ja
xchg
mov
int3
outs
jae
iret
and
das
scas
inc
jl
pop
(bad)
jbe
(bad)
int
lahf
mov
stos
ja
iret
(bad)
adc
sub
and
call
xchg
xchg
dec
push
stos
dec
out
ja
pusha
mov
rcl
hlt
stc
nop
ror
sbb
pop
jb
sub
jns
dec
test
js
jno
pop
xor
fdivr
retf
add
inc
stc
hlt
dec
in
jmp
add
push
jp
adc
sahf
mov
(bad)
in
cmp
out
jle
fld
jae
xchg
sbb
push
mov
cmp
pop
push
add
push
mov
movs
and
movs
sub
inc
pop
jg
mov
cmp
retw
in
lods
fstp
add
(bad)
les
jmp
fs
sub
push
push
sub
dec
fwait
aaa
sar
mov
pop
gs
std
std
sbb
adc
dec
dec
bound
and
popa
xchg
xchg
shl
movs
jo
fmul
cmp
push
push
out
test
in
add
sub
cmps
mov
adc
pop
mov
pop
jle
jecxz
sbb
sbb
inc
enter
(bad)
jae
jbe
push
pop
sbb
gs
out
pop
mov
adc
(bad)
adc
mov
in
lahf
cmps
cmps
add
(bad)
or
mov
sahf
pop
fs
(bad)
ja
sub
mov
sbb
in
aaa
jge
into
cmp
test
imul
daa
jecxz
pop
push
out
xchg
sbb
dec
es
xor
addr16
data16
jns
out
lds
jle
jmp
sbb
std
xchg
xchg
stos
call
adc
popa
add
nop
or
jecxz
add
xor
dec
inc
rol
je
cmps
xor
int3
add
shl
call
rol
sti
cmp
nop
adc
xor
aad
push
jae
xchg
jns
jne
int3
jo
mov
and
imul
stos
in
dec
aam
adc
in
sbb
inc
mov
jmp
movs
stc
push
inc
mov
dec
pop
stos
cli
adc
sub
adc
aad
int3
aas
daa
jnp
jb
fisub
aam
cmp
push
jl
push
imul
repz
mov
lahf
sbb
pusha
inc
sbb
inc
mov
xchg
cmp
rcr
cmp
fiadd
inc
(bad)
mov
lock
lds
sub
jo
cmp
popf
pop
(bad)
test
push
in
mov
cs
and
mov
sti
pop
cmp
adc
outs
lods
fistp
ret
mov
cmps
and
inc
inc
or
lahf
ss
movs
sbb
inc
inc
scas
in
inc
leave
jnp
out
xchg
cwde
jmp
aas
call
add
sbb
icebp
(bad)
clc
call
xor
sub
rol
daa
jg
mov
test
repz
std
mov
sti
jb
outs
or
sub
pop
mov
fidiv
sub
int3
add
sti
out
inc
jmp
pop
xor
push
(bad)
retf
daa
dec
cli
sub
dec
adc
adc
test
retf
dec
mov
mov
lods
jl
fs
pop
outs
stc
pushf
cmp
push
or
push
mov
repnz
rcr
xchg
sub
pop
leave
les
mov
mov
fbstp
xchg
inc
and
and
pusha
shl
xor
inc
in
fcom
jecxz
std
aas
add
(bad)
jge
mov
cwde
lahf
xchg
(bad)
fistp
ss
xchg
push
mov
mov
inc
fnstsw
(bad)
mov
out
mov
fst
adc
or
xchg
je
dec
inc
daa
fs
sbb
xchg
clc
dec
jmp
in
push
xchg
add
mov
cld
jle
bound
and
sti
cwde
jle
and
cmp
mov
fadd
outs
nop
dec
jmp
mov
lea
hlt
add
mov
fxch
rcl
in
xor
or
sub
pop
mov
pop
inc
shl
pop
inc
sbb
dec
or
(bad)
adc
add
(bad)
cmp
loope
shr
outs
mov
call
in
xlat
lods
retf
push
and
pop
adc
push
div
icebp
or
in
mov
test
mov
adc
mov
imul
mov
arpl
daa
adc
and
je
jle
xchg
adc
out
xchg
in
mov
xor
push
cmc
xchg
sahf
cld
fwait
mov
xchg
mov
jbe
push
or
fstp
xchg
enter
dec
xor
adc
and
shl
and
push
data16
repnz
cmp
cmps
hlt
cdq
iret
imul
mov
adc
stos
leave
dec
or
or
je
outs
mov
lock
in
fld
cmp
jae
pop
pop
sbb
ret
call
ret
inc
jmp
mov
std
ins
xlat
mov
mov
jg
mov
dec
mov
xchg
bound
stc
sub
enter
movs
arpl
push
out
add
ret
jne
clc
dec
cmps
jmp
fldcw
iret
xchg
push
(bad)
xor
jmp
rol
sti
xor
mov
push
fld
lds
xor
jno
xor
mov
packuswb
mov
push
in
pop
sub
jecxz
lea
loope
in
add
fwait
mov
hlt
in
cmps
ja
in
loopne
mov
ret
sahf
dec
adc
ja
pop
mul
mov
push
mov
or
sub
push
add
aas
dec
sbb
in
inc
test
xor
inc
fnstenv
test
inc
or
retf
mov
lahf
jb
das
ja
std
adc
test
ror
inc
mov
jmp
sti
push
ret
sar
sbb
imul
ja
jmp
je
push
adc
cdq
mov
ins
jl
inc
cmp
mov
in
scas
adc
cdq
mov
clc
pushf
jge
mov
push
cdq
mov
call
push
cld
out
or
(bad)
enterw
imul
mov
jns
mov
sti
repz
pop
repz
push
jle
stos
or
jae
call
popf
push
outs
xchg
jl
test
iret
outs
cmp
mov
call
aaa
mov
out
mov
inc
movs
fidivr
jnp
or
sub
sub
push
imul
imul
popf
dec
xlat
sar
cmp
jnp
xchg
mov
pop
and
sub
mov
xor
test
add
movs
xchg
sahf
inc
ins
xchg
je
push
inc
and
scas
inc
pop
dec
push
cmp
cld
(bad)
cwde
leave
and
sbb
jge
sub
push
mov
aas
cmp
jecxz
jecxz
jecxz
imul
and
adc
mov
ss
mov
and
or
mov
add
call
test
mov
imul
sub
sbb
mov
mov
sub
popa
and
mov
out
icebp
fisub
xor
jno
hlt
mov
int3
outs
mov
(bad)
jmp
jle
cmp
and
dec
call
out
xor
push
cmps
mov
fdiv
or
(bad)
adc
retf
sub
push
retf
adc
push
adc
xchg
out
lock
scas
scas
out
mov
clc
jmp
stos
mov
out
ret
out
retf
(bad)
cmp
jge
mov
push
cld
mov
in
push
pop
(bad)
adc
xchg
adc
mov
sbb
and
scas
scas
adc
add
mov
xor
aaa
or
into
mov
add
cmp
mov
clc
push
es
fbld
sbb
retf
and
loope
cmp
retf
sub
repz
dec
lods
add
out
pusha
xchg
inc
rcr
adc
js
ret
mov
jle
sbb
inc
mov
aad
test
das
icebp
cwde
xor
inc
cwde
push
ins
pop
xchg
sar
xchg
arpl
loop
sub
imul
xor
xor
bound
add
push
jp
ror
cwde
out
inc
cmc
push
loop
cmps
cli
jl
ror
lods
add
xchg
xlat
cmc
popf
inc
pop
dec
and
(bad)
hlt
fcom
loopne
cmp
loope
in
js
inc
cmps
arpl
call
out
cmp
jmp
ret
dec
outs
adc
int
dec
or
shl
gs
inc
inc
jmp
test
xchg
cmp
adc
imul
pop
xchg
xor
xchg
mov
mov
sub
mov
popf
(bad)
mov
sub
inc
lahf
fadd
int3
and
push
fld
imul
adc
mov
dec
mov
xor
cld
xchg
push
cmps
outs
sub
jl
push
lea
mov
imul
daa
inc
mov
or
out
mov
retf
in
adc
jmp
data16
pop
inc
pusha
xchg
pushf
sub
adc
div
mov
aas
test
sbb
jb
mov
shl
cmp
fwait
inc
pop
sub
or
cmp
stos
cmps
push
(bad)
or
movs
dec
cli
adc
and
fdivr
cmp
aam
xchg
es
int
loopne
cmp
add
xlat
test
ss
scas
mov
sti
push
push
cmp
ror
(bad)
xchg
jle
loopne
pop
sbb
sbb
fisubr
js
inc
dec
mov
iret
(bad)
mov
cmp
into
rcr
ror
out
pop
sub
cmp
fwait
xor
lods
cmps
pop
stc
test
jne
and
lods
ss
stos
fwait
push
xor
lea
imul
(bad)
sbb
push
test
(bad)
test
mov
adc
mov
pop
fldenv
(bad)
in
ret
imul
sub
mov
add
ror
cmc
jo
pop
mov
clc
mov
popf
pop
aas
inc
mov
pop
lahf
mov
jl
ret
mov
mov
mov
jnp
ins
cwde
jecxz
leave
pop
xchg
test
mov
jmp
mov
jns
jne
ror
or
daa
call
leave
shl
dec
sbb
dec
push
in
push
lahf
dec
sub
xchg
sub
repnz
shl
sub
mov
fldcw
pop
loop
popf
ja
not
sbb
sar
dec
retf
cli
push
mov
mov
out
and
cs
sub
cmp
mov
test
test
js
repnz
stos
mov
rol
mov
sbb
in
pusha
or
dec
jmp
out
fs
dec
pop
push
outs
sar
jecxz
add
push
sbb
mov
add
test
xchg
add
push
mov
or
mov
sbb
jo
lock
(bad)
xchg
jp
hlt
pavgw
(bad)
sub
push
xchg
add
mov
scas
pop
ror
xchg
clc
push
loopne
xlat
sub
inc
je
add
adc
pop
or
imul
dec
cmp
loopne
push
jg
push
jp
outs
sahf
fnsave
push
cs
push
out
sub
cmc
sti
push
dec
(bad)
(bad)
cmps
xlat
pop
imul
test
pop
imul
imul
ins
aad
fsub
pop
push
push
call
pop
mov
push
hlt
test
les
out
mov
data16
in
dec
sbb
push
aam
jns
rcl
sub
retf
push
cli
test
inc
mov
das
push
jne
mov
fbstp
test
bound
push
mov
adc
mov
je
mov
xchg
inc
cld
cmp
mov
jne
test
mov
jnp
xor
jmp
and
adc
gs
mov
jmp
xor
imul
and
cmp
retf
xchg
std
(bad)
and
adc
les
popa
jne
mov
add
lods
js
icebp
and
xchg
or
test
les
(bad)
cmp
sbb
or
dec
pop
xor
cmovnp
test
lods
loop
cmp
nop
lods
jl
cmp
sub
int3
gs
bound
jmp
cmp
sbb
fisub
dec
mov
adc
cld
or
push
ins
add
mov
lods
lods
jmp
cmp
push
push
inc
xchg
int3
pop
pop
pop
out
push
cmp
js
mov
and
(bad)
xchg
xchg
loope
loop
(bad)
mov
icebp
mov
mov
clc
jb
lods
hlt
(bad)
mov
sbb
fdiv
outs
xor
cs
inc
pushw
sahf
mov
and
dec
mov
cs
cmps
push
aad
dec
dec
cmps
cwde
or
xchg
repz
sti
xchg
sbb
nop
mov
daa
push
lds
stos
or
retf
jnp
xchg
lea
sub
aas
je
out
jg
jns
jo
pusha
hlt
icebp
imul
dec
fistp
inc
jg
ror
rcr
dec
mov
retf
inc
jecxz
and
inc
jae
jmp
jg
lods
sbb
adc
shl
mov
dec
mov
dec
jne
data16
aad
das
lods
and
popa
loope
lods
icebp
outs
or
mov
dec
adc
push
ficomp
into
or
push
dec
mov
cmp
fimul
mov
cli
pop
fadd
fsubrp
push
in
(bad)
cmc
call
dec
lock
and
push
je
fdivr
es
(bad)
xlat
mov
xchg
bswap
(bad)
jno
aaa
adc
loope
jbe
jg
xchg
ror
(bad)
ins
pop
dec
push
(bad)
cmp
fsub
xor
sar
nop
in
loop
repz
inc
and
jg
or
sub
jecxz
fnsave
sbb
mov
add
xlat
repz
xor
sbb
cmps
(bad)
test
adc
add
fadd
xchg
add
cwde
pop
mov
sub
retf
cmp
cmp
stos
call
adc
fidiv
pop
call
xchg
(bad)
out
scas
dec
retf
int3
dec
mov
cmp
iret
(bad)
inc
cmovle
stos
adc
cs
mov
scas
fld
les
pop
xchg
cmp
gs
in
stos
jns
iret
fild
stos
adc
jmp
rcr
into
(bad)
aas
xchg
cmp
push
scas
push
xchg
bound
cmp
mov
sub
adc
push
imul
adc
retf
loope
(bad)
mov
push
js
stos
jno
loopne
pop
mov
pop
jp
cdq
add
mov
add
in
sbb
or
gs
mov
sbb
mov
int
xor
idiv
sahf
xor
data16
xlat
pop
aad
sub
mov
out
scas
pop
and
jl
dec
into
jns
sbb
out
mov
ret
jl
mov
add
xchg
add
in
outs
sbb
adc
shl
iret
pop
retf
int
(bad)
ror
mov
dec
push
iret
push
cmp
xchg
mov
ror
and
adc
dec
cmc
cmp
mov
in
cmp
cmps
je
ja
retf
mov
(bad)
call
pop
adc
cmp
dec
scas
or
popf
fs
sub
ficom
cmp
push
jecxz
jne
push
imul
pop
ret
int
clc
mov
iret
cmc
sbb
outs
cmc
mov
loope
pop
cmp
push
das
dec
ficomp
je
mov
add
jne
mov
test
mov
pop
xchg
aaa
in
or
loop
mov
mov
ret
pop
ret
cmp
jno
sahf
sub
cmp
retf
mov
and
ret
test
jp
dec
in
cmc
arpl
out
rcr
xor
xchg
push
imul
je
jnp
lods
stc
loop
lock
pop
xchg
in
add
and
dec
aaa
and
or
push
mov
lahf
loop
add
fnstcw
outs
(bad)
loop
or
jbe
pop
pop
sbb
call
stc
daa
aad
arpl
cmp
idiv
cwde
mov
rcl
and
in
xor
push
icebp
popa
dec
or
ins
cmps
push
outs
ret
pop
pop
out
adc
aam
xor
cmp
cwde
add
aaa
ins
mul
jle
inc
mov
ficom
cwde
imul
call
mov
pop
sbb
cmp
pop
add
ret
icebp
dec
test
cmps
mov
inc
jmp
sbb
adc
xor
call
out
mov
shr
outs
mov
mov
add
pop
mov
fwait
(bad)
xlat
jnp
inc
jg
inc
lea
fisttp
xchg
cs
iret
imul
in
pop
sar
pop
sub
nop
rcl
pop
cmp
jg
retf
mov
inc
adc
movs
xchg
mov
push
fcomp
and
dec
pop
add
sbb
push
adc
mov
adc
pop
inc
call
push
sub
scas
mov
in
int
imul
jne
ficom
xchg
mov
das
outs
mov
cld
jmp
cmp
out
int3
retf
inc
push
mov
jns
cli
ss
icebp
inc
inc
cmps
(bad)
shr
in
dec
das
push
mov
sbb
push
mov
pop
adc
fstp
mov
movs
maxps
mov
sbb
retf
sahf
push
xchg
xor
sbb
push
es
jne
jnp
(bad)
scas
nop
sbb
cmp
push
jle
adc
int
call
fs
(bad)
dec
sti
or
inc
add
lds
inc
dec
test
in
fsub
push
repnz
call
add
(bad)
mov
or
pusha
imul
mov
jnp
sbb
imul
mov
xor
enter
jno
cmp
inc
mov
sbb
xlat
sub
mov
jb
popf
xchg
stos
mov
inc
pcmpeqw
dec
or
push
inc
test
repnz
shl
inc
in
les
add
jns
inc
cld
popf
inc
xchg
xor
into
call
(bad)
jl
out
jp
mov
xchg
lock
int
inc
jg
adc
adc
xor
out
adc
jp
or
jns
(bad)
jmp
xchg
nop
or
inc
and
(bad)
ss
jl
out
test
maxps
or
mov
test
sbb
mov
aad
sub
jle
or
mov
sti
rcl
adc
push
icebp
pop
in
sub
and
test
inc
ffree
ins
pop
popf
jg
and
jle
(bad)
adc
cdq
lea
(bad)
mov
icebp
in
xor
xchg
int3
adc
mov
lds
ret
mov
fmul
or
and
cld
mov
sub
dec
xchg
jnp
(bad)
imul
int3
ror
jns
and
pop
out
test
add
adc
or
scas
lds
xor
fldenv
push
in
mov
or
pusha
xchg
sbb
adc
adc
mov
mov
les
add
jg
and
inc
adc
dec
pop
fisttp
xchg
inc
mov
mov
push
dec
mov
movs
adc
push
(bad)
imul
xchg
pop
cld
je
dec
xchg
pop
mov
mov
cmp
lods
(bad)
xor
xor
inc
xor
inc
xor
jl
xor
sbb
sar
jecxz
cmp
ins
push
popa
and
xor
mov
push
ficomp
shr
stos
push
pop
xchg
mov
adc
loope
lods
retf
mov
pop
and
clc
mov
pop
or
fsubr
xchg
test
in
das
jg
sbb
sbb
fst
dec
scas
mov
mov
cmp
and
cs
mov
sub
addr16
mov
pop
mov
in
jbe
pusha
jp
jle
aad
dec
inc
cmp
or
cmp
lahf
push
lds
(bad)
idiv
loope
dec
popf
inc
jge
inc
arpl
jl
xor
lods
lock
mov
mov
add
xchg
mov
sahf
dec
in
add
outs
xchg
daa
sbb
icebp
or
jp
sti
inc
jge
mov
xchg
sub
cmc
loopne
jmp
dec
xor
cli
clc
es
and
push
das
jb
(bad)
jns
push
mov
mov
lahf
xchg
cli
outs
jg
push
shl
adc
mov
(bad)
in
into
imul
or
test
arpl
lock
inc
data16
push
mov
js
rcr
jbe
and
imul
fisub
rol
pop
mov
ret
cmp
cmp
pop
sbb
cmp
cdq
sub
cwde
into
sub
and
and
xlat
dec
push
movs
cmp
jno
or
dec
dec
xor
push
mov
aad
pushf
fwait
lods
stc
sub
xchg
push
aas
jne
adc
and
lock
daa
xor
add
loopne
repnz
aad
adc
mov
xor
lahf
mov
push
mov
leave
test
in
loopne
and
push
(bad)
cs
lds
adc
jmp
mov
xchg
stos
pop
xor
mov
je
xchg
push
fst
lea
imul
je
sub
cmp
imul
loope
fs
push
fld
ror
pop
sub
mov
lds
cmp
jno
(bad)
call
pop
fist
sub
cmp
mov
adc
mov
xor
pop
adc
jmp
das
lods
js
cmp
in
lods
pop
inc
idiv
push
sub
test
ins
test
xor
out
jne
push
test
jb
jnp
mov
or
rol
les
sub
add
or
sbb
mov
nop
xor
popa
es
loop
lods
jg
mov
(bad)
out
dec
add
test
lahf
mov
ja
xor
das
arpl
cmp
xchg
ins
out
sbb
pop
retf
(bad)
xchg
jns
push
and
sbb
lods
push
fs
add
cmp
sahf
mov
outs
aad
sub
lock
iret
mov
cmp
jb
jge
retf
hlt
rol
test
stos
dec
or
mov
mov
jmp
int3
mov
popf
call
xor
pop
cli
addr16
xlat
loope
iret
popf
jbe
jae
cmp
jp
leave
sub
pop
jecxz
dec
sub
loop
int3
pop
fs
scas
xlat
dec
(bad)
stos
pop
mov
daa
out
jmp
pop
cmp
jbe
push
or
push
movs
out
dec
adc
inc
sub
aaa
cmp
cmp
add
lock
lods
mov
inc
cmps
add
sbb
mov
test
js
or
sbb
mov
push
hlt
iret
ins
and
int3
ins
xchg
sbb
xchg
mov
jnp
xchg
jo
jae
into
adc
jecxz
dec
scas
adc
xchg
push
int3
sub
(bad)
(bad)
int3
mov
jmp
sbb
ss
rcl
shl
jle
jp
sub
xlat
mov
or
mov
inc
hlt
out
add
push
retf
int
mov
or
ins
jb
es
shr
in
cmps
jl
repz
xchg
cmp
push
rcl
(bad)
mov
xchg
push
cmp
inc
pop
sbb
stos
inc
jbe
ret
sbb
movs
out
inc
call
adc
add
mov
mov
jbe
jnp
fisttp
sub
daa
lea
cs
xchg
sbb
nop
cmp
clc
pop
mov
and
mov
pop
or
jno
mul
or
push
cli
or
jmp
adc
fdivr
call
dec
add
enter
mov
cld
mov
inc
push
pop
adc
cmp
addr16
cld
cmps
nop
(bad)
fldcw
enter
jg
mov
dec
push
adc
pop
shl
mov
aaa
mov
das
mov
xchg
sbb
mov
xchg
sub
call
stos
fiadd
iret
fprem
imul
iret
mov
(bad)
pushf
out
xor
add
xlat
jbe
fdiv
pop
push
xchg
cmp
test
xchg
xor
call
ds
sahf
add
xchg
(bad)
push
test
hlt
sbb
xor
mov
add
and
scas
add
sub
lods
ret
jb
aam
sbb
jmp
test
das
fld
loopne
pop
lahf
mul
mov
add
mov
pushf
fadd
jle
shl
mov
gs
test
cmp
xchg
adc
icebp
nop
jno
jmp
jne
dec
lock
sbb
shl
es
call
dec
pop
dec
inc
test
cmps
(bad)
mov
and
test
and
pop
sahf
fcmovbe
sub
add
outs
push
std
xor
int3
and
mov
xchg
out
push
dec
adc
pop
inc
mov
and
cmp
arpl
add
pop
in
or
jno
jo
mov
out
mov
std
cs
repz
or
fs
cmc
mov
test
in
mov
dec
sti
mov
and
adc
mov
inc
out
jno
retf
ins
call
lods
call
les
push
scas
cmp
jmp
loope
es
pop
fs
push
cmps
adc
stc
push
mov
jmp
jbe
fcmovu
sbb
push
stc
pop
and
ins
js
cmp
ret
xor
lea
inc
push
mov
pop
sub
dec
dec
in
xchg
dec
aad
movs
mov
in
pop
test
xchg
sub
dec
mov
repnz
fsubr
push
or
je
je
sbb
fucom
add
addr16
xor
call
test
iret
jae
fcmovnbe
(bad)
call
fld
push
frstor
jle
leave
push
into
mov
test
pop
pusha
cmps
mov
push
int3
adc
lods
adc
jmp
push
xor
(bad)
push
mov
call
inc
dec
sub
enter
sub
xor
lock
in
dec
and
dec
fisub
mov
fistp
mov
or
xor
mov
ret
arpl
ret
or
sbb
mov
jle
inc
add
mov
enter
inc
test
mov
cmp
bound
xchg
(bad)
jmp
outs
and
retf
pop
mov
fadd
mov
cmp
loop
xchg
xlat
retf
xchg
dec
add
jle
cli
add
scas
imul
dec
test
add
outs
inc
pop
cmp
push
add
dec
sub
nop
outs
xchg
pop
add
fwait
adc
sub
jle
cmp
mov
ins
push
or
bound
clc
dec
imul
or
icebp
mov
daa
jbe
push
test
sbb
rol
jp
mov
adc
dec
or
xchg
sbb
out
repnz
std
mov
mov
mov
push
retf
pop
xchg
fistp
mov
add
daa
push
(bad)
jmp
fmul
or
fild
fcmovu
xchg
fiadd
pop
(bad)
xor
lea
pop
xor
xchg
jo
aam
xchg
push
cmp
mov
aam
push
test
loopne
or
(bad)
cmp
(bad)
ror
cmps
xor
rcr
mov
cmp
sub
jl
push
fild
test
cmp
add
push
push
sub
or
ret
fsub
or
pop
sub
mov
fiadd
ss
aam
cwde
jno
rcl
push
scas
(bad)
push
enter
jne
int
dec
cmc
scas
icebp
into
add
inc
pop
sub
inc
push
scas
in
js
fistp
pop
add
jne
pop
int
adc
outs
aaa
xchg
mov
ret
aad
xor
idiv
dec
xor
pop
(bad)
or
(bad)
adc
mov
test
jb
cmp
jle
jns
pop
adc
mov
sub
push
(bad)
push
inc
call
clc
push
dec
enter
iret
cmp
mov
cmp
and
inc
retf
inc
jge
jp
pop
push
mov
xchg
je
hlt
push
jecxz
pop
push
inc
cmp
lods
sub
cwde
push
add
dec
inc
inc
jmp
aaa
pop
mov
push
mov
js
push
call
push
es
fdivrp
pop
(bad)
scas
aaa
(bad)
xor
retf
mov
adc
retf
pop
nop
rol
(bad)
and
mov
rol
ins
xchg
mov
repz
push
sbb
sub
jo
and
int3
out
xchg
ret
pop
out
or
dec
addr16
push
push
add
iret
or
int3
or
(bad)
xchg
pushf
retf
int3
cmps
ja
fiadd
adc
fld
enter
clc
xchg
or
popa
push
sub
jecxz
jmp
and
dec
leave
jo
pop
push
sbb
push
(bad)
(bad)
fmul
jg
sar
les
js
pop
(bad)
push
mov
mov
rol
hlt
mov
mov
adc
push
xor
hlt
inc
dec
pop
inc
xchg
mov
mov
pop
sub
jge
mov
inc
dec
jge
dec
adc
xor
enter
es
lea
in
inc
jne
adc
enter
or
js
dec
add
gs
mov
push
and
xor
sar
xor
sub
push
adc
stos
js
dec
(bad)
jge
pop
adc
mov
out
shr
js
loop
add
xor
xlat
test
dec
mov
lock
xlat
test
mov
xchg
lods
ss
jae
pop
cmps
add
pop
cmp
into
adc
sub
adc
stos
daa
lahf
pop
or
mov
add
adc
pop
mov
ret
aaa
adc
out
loope
jno
push
ror
lock
dec
sub
outs
mov
(bad)
inc
mov
mov
rcr
xchg
call
mov
xchg
push
sub
jmp
and
dec
in
push
nop
mov
frstor
repnz
sub
xor
in
stos
mov
push
add
imul
sub
mov
ror
mov
mov
pop
or
mov
repnz
test
into
movs
mov
sbb
mov
or
sub
dec
test
add
and
inc
retf
cmp
push
inc
lds
jno
and
xchg
(bad)
dec
fdivrp
mov
(bad)
mov
vcvttss2si
mov
sbb
push
shl
mov
and
mov
ret
jbe
inc
imul
ror
hlt
scas
scas
push
push
and
in
ret
add
push
xchg
inc
call
xlat
xchg
jo
dec
push
or
pop
jae
mov
fdivr
ret
push
in
aaa
sbb
lea
ror
pop
neg
adc
push
mov
mov
mov
mov
lods
loop
fild
mov
jg
out
in
adc
and
or
push
lods
cmp
cmps
pop
sahf
mov
dec
mov
or
shl
imul
xchg
dec
and
xor
int
push
daa
(bad)
into
and
xlat
daa
mov
pop
in
out
sti
repz
sbb
lock
lds
(bad)
and
sub
adc
adc
inc
add
fist
ficom
and
test
fisub
add
and
les
cli
pop
fcom
jmp
pop
and
jp
repz
push
cmp
sub
cld
ins
cmp
inc
adc
sbb
aas
out
and
stos
push
dec
(bad)
cli
mov
adc
daa
aas
mov
(bad)
aad
shr
test
daa
xor
popf
adc
sbb
mov
hlt
test
dec
ds
in
imul
mov
mov
push
or
imul
sbb
and
and
push
sbb
pop
jnp
into
outs
jnp
test
push
mov
cmp
mov
out
cld
out
and
jbe
icebp
in
sub
sbb
(bad)
nop
icebp
add
inc
pop
jmp
or
jnp
jmp
adc
stos
jne
mov
and
fld
pop
call
mov
jnp
and
ins
push
sbb
mov
mov
jae
sbb
ja
and
dec
xchg
fld
aas
lods
mov
in
dec
movs
jmp
sub
push
mov
jmp
movs
fwait
jp
jne
daa
popa
cmps
dec
call
aaa
mov
mov
(bad)
xor
sub
or
and
mov
test
stos
add
dec
xchg
mov
jl
push
dec
scas
xor
cmp
xchg
and
jae
div
nop
push
mov
sbb
sahf
inc
mov
and
imul
mov
sbb
push
aam
jecxz
sub
test
mov
in
pop
lds
mov
data16
fs
popf
cmp
mov
sbb
jp
pop
and
mov
cmp
mov
inc
es
mov
dec
jg
jmp
pop
sar
add
push
(bad)
mov
mov
shl
jl
das
dec
sbb
out
xlat
cmps
out
mov
pop
sbb
(bad)
mov
pop
inc
neg
sub
xor
call
mov
enter
xchg
sub
aas
fstp
mov
call
push
lea
vhaddps
push
and
and
sbb
icebp
int
xchg
sbb
and
mov
and
pop
std
sub
psubusb
mov
mov
mov
xor
pop
scas
inc
aad
shr
sbb
cwde
ret
aad
rcr
mov
cld
mov
icebp
pop
mov
lds
shr
jnp
push
and
cmps
adc
out
mov
aam
add
int
inc
add
iret
inc
retf
xchg
call
sbb
rcl
pusha
push
stos
(bad)
jmp
xchg
and
jne
cmp
add
mov
sub
push
mov
ret
cmc
xor
and
jge
adc
outs
mov
xchg
and
push
pop
mov
push
ins
lahf
mov
cs
pop
ja
shl
or
sub
xor
es
es
push
iret
push
fwait
cmp
sub
dec
outs
jmp
xor
mov
mov
sub
aaa
pop
cmps
lods
ins
out
inc
inc
adc
stos
adc
mov
push
js
and
sub
sub
outs
sbb
mov
stc
dec
push
mov
jns
and
fmul
sbb
lea
fdivr
mov
or
and
fsubr
pop
mov
dec
cmp
icebp
pop
mov
in
mov
push
fnstsw
stos
xchg
push
mov
test
leave
cmp
std
mov
jg
jnp
addr16
mov
fidivr
out
mov
or
push
jge
aam
xor
xchg
imul
inc
movs
xchg
stos
push
rcr
cmps
xchg
fisub
cdq
push
mov
cwde
not
xor
xchg
inc
push
cmp
mov
jmp
out
repz
ins
pop
sbb
push
rcr
dec
adc
mov
dec
rol
loop
das
js
gs
fwait
xor
std
popf
xor
inc
pushw
and
pop
pop
shr
push
xor
push
sbb
jnp
cld
test
pop
adc
mov
jp
pop
jge
inc
push
xchg
adc
xor
adc
or
mov
jle
frstpm(287
xchg
xchg
aam
xor
jg
(bad)
iret
addr16
adc
adc
ror
mov
push
mov
mov
or
mov
cmp
and
mov
mov
ficomp
test
inc
faddp
xchg
cmp
jp
cmp
mov
imul
lahf
sbb
dec
mov
mov
sbb
jmp
cmps
add
in
add
imul
jbe
cwde
mov
inc
mov
aam
dec
lods
test
inc
stc
inc
sbb
xchg
call
sub
inc
pop
fild
xor
cdq
in
push
pop
mov
pop
addr16
sbb
mov
sahf
jnp
add
pop
sub
loop
push
fisttp
cdq
mov
stos
jmp
jbe
fsubr
or
pusha
mov
pop
ret
add
mov
adc
arpl
mov
test
ret
mov
push
clc
ret
mov
mov
loope
call
mov
sbb
pop
dec
inc
adc
sar
mov
cmps
dec
jbe
add
dec
dec
inc
or
fadd
jp
push
push
into
sbb
mov
hlt
xlat
jecxz
adc
fnstcw
cmps
stos
(bad)
popa
mov
mov
mov
sbb
adc
cmp
cs
pusha
push
in
loopne
mov
dec
iret
scas
mov
outs
and
push
xor
cli
push
movs
inc
aam
imul
xchg
or
movs
stos
adc
ror
xor
mov
mov
inc
adc
(bad)
fwait
push
jo
mov
ss
inc
iret
js
adc
repz
and
add
aas
arpl
fwait
sub
jno
push
push
out
push
mov
xchg
movsx
test
sbb
pop
jecxz
adc
out
data16
add
mov
push
inc
xor
xor
stc
push
inc
cld
mov
inc
scas
outs
test
adc
call
mov
ins
inc
scas
jecxz
push
jg
sub
xchg
shl
add
call
push
cmp
aam
test
fdiv
pop
push
or
push
lahf
pop
pop
lods
addr16
push
mov
pop
mov
sub
xchg
cmps
ins
push
leave
sub
imul
lea
ja
push
lock
inc
imul
inc
retf
pop
movs
data16
add
push
lahf
out
repnz
mov
aad
inc
dec
jne
iret
lea
jne
dec
xlat
enter
mov
stc
imul
sbb
cmp
inc
pop
lods
pop
js
xor
dec
gs
stc
outs
ins
sub
mov
pop
mov
and
sar
out
aas
ins
push
js
mov
adc
aam
loopne
neg
shr
push
fcomp
icebp
test
adc
adc
mov
leave
sti
mov
(bad)
xor
out
and
sbb
lock
movs
dec
sbb
mov
(bad)
std
btc
out
sub
es
or
out
ins
mov
jno
pop
add
mov
jae
and
iret
rcr
dec
imul
and
call
push
(bad)
in
inc
and
bound
xchg
jmp
loop
in
xor
leave
rcl
mov
dec
in
mov
retf
add
das
in
test
dec
pop
clc
popa
rol
jne
mov
pop
mov
push
inc
xchg
push
ins
push
into
push
int3
sbb
or
push
inc
popf
xchg
jecxz
adc
arpl
and
fmul
sbb
ret
inc
aad
cmp
ds
jle
mov
shl
push
fsub
xchg
imul
xchg
push
daa
cmp
pop
mov
fnsave
iret
push
and
jns
repnz
std
pop
cli
jmp
push
iret
push
test
pop
stos
movs
or
(bad)
ror
jp
xchg
xchg
lds
push
outs
mov
and
loop
cmps
xchg
cmp
sbb
imul
cs
adc
popf
jmp
mov
fs
xchg
mov
in
push
and
mov
mov
dec
dec
in
adc
call
les
ins
mov
call
fdiv
outs
pop
fild
in
out
ins
jmp
cdq
xor
(bad)
adc
or
push
xchg
adc
and
ret
cmp
sub
out
sub
mov
jo
std
je
(bad)
ins
lods
ret
push
je
addr16
mov
jge
xchg
jmp
iret
dec
dec
lods
mov
and
pusha
not
pop
mov
and
sbb
jns
sub
or
jg
ss
xchg
push
jecxz
leave
pop
add
loope
sahf
dec
jmp
push
adc
sub
scas
call
dec
movs
cmp
call
ins
sar
mov
jmp
xor
retf
sbb
jo
and
mov
fnstenv
lock
mov
xor
idiv
xor
into
sub
fwait
hlt
mov
sub
scas
movs
xlat
mov
adc
not
mov
stc
push
shl
pop
lea
icebp
push
test
dec
je
faddp
imul
movs
sar
cmp
bound
jp
enter
ret
sbb
test
mov
jl
pop
imul
outs
rcl
fist
adc
fcomp
clc
outs
hlt
cld
dec
lods
mov
mov
aas
sbb
cmc
xor
sbb
sbb
mov
test
pop
(bad)
dec
mov
and
into
xchg
into
push
jge
mov
call
(bad)
in
dec
mov
push
jns
mov
cmp
dec
sub
sti
stos
adc
or
hlt
imul
jo
ja
lds
out
jp
cmp
hlt
mov
ficom
imul
adc
and
sbb
sbb
inc
pop
push
sbb
jb
xor
xor
or
fisubr
jg
test
mov
das
in
sbb
fdivr
cmps
jmp
xlat
add
sub
call
jno
push
sbb
sbb
outs
(bad)
enter
repnz
sub
adc
mov
inc
add
sahf
inc
stc
jns
xor
test
fadd
outs
cmp
scas
daa
test
dec
sbb
imul
arpl
inc
dec
pop
mov
dec
cmp
jmp
push
and
in
xlat
nop
cld
push
cwde
xchg
pop
pop
inc
cmp
mov
push
mov
jecxz
mov
ja
dec
dec
movs
sbb
(bad)
fs
in
in
call
call
mov
mov
mov
adc
xlat
imul
ins
inc
leave
xchg
and
in
dec
mov
xor
mov
jae
mov
mov
leavew
jae
jl
movs
mov
jmp
dec
mov
rol
sub
lods
orps
push
lock
xchg
fisubr
and
mov
shl
gs
jbe
xchg
aam
mov
jmp
adc
mov
push
fdivr
lds
mov
or
adc
jnp
sub
wbinvd
xor
mov
sub
pop
fld
cld
pop
(bad)
(bad)
adc
mov
fimul
mov
popa
fs
nop
in
mov
inc
xlat
ret
xchg
movs
pop
loope
adc
rcr
rol
nop
xchg
sub
xchg
sar
cmp
jmp
(bad)
cs
aas
push
cs
imul
jmp
scas
in
daa
sub
imul
push
dec
mov
sub
pop
loope
clc
adc
daa
lods
mov
popf
mov
jge
jbe
add
es
loope
ret
jmp
push
push
arpl
iret
push
mov
icebp
cld
or
xchg
sahf
loope
data16
das
adc
pop
xlat
fwait
jae
(bad)
cmp
outs
cmp
out
xor
div
stc
pop
(bad)
xor
out
add
and
sub
shr
test
and
xor
adc
out
stos
and
jmp
(bad)
or
sub
aaa
and
push
inc
mov
or
xchg
scas
and
outs
iret
jmp
or
jbe
lods
mov
mov
retf
shr
repz
cli
mov
in
or
xchg
jbe
mov
add
push
pop
into
scas
xor
fidivr
cwde
sub
lds
jnp
push
leave
inc
mov
jno
xchg
(bad)
lea
dec
and
gs
pop
mov
xchg
mov
sbb
push
jle
xchg
mov
frstor
add
cmps
sub
test
adc
(bad)
test
je
outs
daa
(bad)
sub
stos
xor
push
xchg
mov
mov
and
ror
gs
in
mov
or
into
test
mov
xchg
jp
fiadd
mov
add
sbb
jp
xlat
xchg
lea
lahf
ds
push
(bad)
adc
jmp
xor
push
adc
jge
sti
int
pusha
sar
inc
test
cwde
xor
xchg
fld
mov
or
sti
jge
mov
call
retf
nop
daa
sub
mov
enter
xchg
jp
push
adc
daa
pop
jns
inc
mov
ins
mov
test
push
fcom
aam
pop
jmp
cmp
adc
ss
push
int3
scas
sbb
movs
mov
test
push
cs
outs
inc
mov
ret
mov
outs
fmul
sbb
xchg
push
or
aas
movs
aad
adc
and
in
out
mov
cmp
jge
mov
sub
pop
dec
sub
ret
inc
imul
rcr
je
sub
sub
add
mov
cmp
mov
adc
push
lds
cmp
dec
cdq
arpl
sbb
cmp
and
xchg
inc
dec
sbb
out
add
sahf
mov
mov
outs
int3
mov
push
jle
jb
mov
pop
pusha
jmp
ret
mov
ret
jecxz
jmp
in
push
dec
and
sub
fdivr
xchg
jbe
fnstcw
idiv
xchg
shl
cld
out
in
jecxz
xchg
jo
fsub
and
daa
mov
imul
movs
mov
int
mov
add
sbb
das
adc
xchg
inc
hlt
dec
jl
(bad)
retf
jecxz
jnp
inc
cld
fsub
jo
mov
and
data16
vpackuswb
and
gs
xor
xor
outs
pop
xchg
loop
mov
imul
xchg
or
xor
lea
dec
push
movs
pop
xchg
mov
stos
add
cmp
sub
xchg
pop
push
icebp
scas
int3
call
outs
push
inc
push
mov
jg
pop
jecxz
cmp
jo
or
mov
or
not
xchg
sbb
cs
mov
jmp
jmp
(bad)
push
stos
sbb
ins
out
pusha
inc
jmp
jne
cmps
push
xchg
jno
mov
push
xchg
inc
popf
out
mov
jo
stc
inc
lods
cmp
sub
pop
dec
not
ficom
ret
and
out
stos
push
or
pop
call
push
sub
(bad)
or
out
int
das
stos
shr
jne
int3
pop
je
aas
mov
mov
cmp
cs
stos
gs
outs
inc
leave
pop
addr16
xchg
ret
or
jl
sti
hlt
jb
or
push
mov
sbb
ss
push
ficomp
adc
(bad)
xchg
cmp
jmp
popa
xchg
lea
fucomi
(bad)
cwde
mov
push
aad
sahf
shr
in
cmps
cwde
jmp
es
clc
cmp
jne
sub
in
inc
dec
in
call
cwde
packssdw
cld
ss
es
xchg
or
in
mov
retf
cmp
pop
inc
cmp
fld
clc
push
arpl
es
jmp
push
sub
pop
mov
out
mov
sub
jae
js
dec
jl
dec
rol
mov
or
cmp
loopne
push
repnz
cmp
mov
dec
push
add
adc
cmp
daa
shl
inc
cmp
in
jmp
cwde
nop
not
dec
dec
and
xchg
and
or
mov
push
test
push
icebp
(bad)
xor
xchg
cmp
ins
mov
lahf
leave
sti
inc
mov
out
inc
dec
dec
repnz
ss
in
xlat
fstp
or
push
sbb
fneni(8087
adc
cmc
gs
sti
psubsb
outs
popa
xor
mov
sub
int
cmp
mov
cmps
pop
ss
jnp
in
fcmovne
aam
daa
(bad)
jmp
jbe
jmp
push
popa
movlps
fisttp
xchg
pop
mov
loope
loopne
pop
ds
movs
das
sub
imul
cmps
dec
cmp
xchg
lock
dec
lods
rol
(bad)
mov
(bad)
pop
mov
imul
xchg
jecxz
add
xor
mov
inc
xchg
mov
adc
loop
je
dec
lock
jmp
pushf
in
movs
retf
cmc
movs
jo
cwde
inc
and
jmp
cli
mov
sub
cmp
push
shr
push
pop
pop
cs
dec
shr
hlt
cmp
data16
(bad)
mov
in
fidivr
in
jg
xchg
mov
out
add
addr16
pop
dec
cmp
push
push
fmul
cli
fsub
mov
mov
mov
cmp
ret
xchg
scas
aam
dec
jns
dec
push
(bad)
or
or
mov
jno
imul
jae
mov
paddb
xchg
mov
fs
(bad)
call
mov
adc
adc
pop
fiadd
stos
jp
js
push
jp
mov
mov
and
dec
jne
(bad)
sbb
popf
loopne
xor
retf
xlat
inc
cmps
in
adc
test
cmpxchg
shr
fild
sbb
shl
mov
imul
xchg
ins
sub
pop
mov
xchg
fist
mov
xlat
push
jge
test
dec
or
js
ret
add
sub
ficomp
scas
xchg
ins
inc
and
mov
adc
cld
stos
mov
arpl
xor
xor
clc
push
xor
lods
shl
(bad)
pop
mov
mov
addr16
sub
movs
pop
pop
cmp
dec
push
shl
mov
aam
adc
(bad)
leave
fs
cmp
xor
fsub
mov
lods
adc
sbb
out
pusha
push
lods
ins
adc
es
in
push
leave
mov
popf
mov
inc
mov
fldenv
push
pusha
push
cmc
and
dec
imul
mov
stc
fsubp
xor
inc
push
or
mov
arpl
jno
(bad)
mov
(bad)
loop
in
mov
inc
scas
in
sbb
sbb
jnp
lock
out
inc
and
popa
xor
mov
cmp
cmp
jbe
outs
int3
outs
mov
pop
jns
ja
mov
xor
mov
dec
ret
sub
jge
loopne
push
sbb
ins
std
out
pop
lods
inc
xchg
(bad)
repz
aas
xchg
push
xchg
pop
int3
outs
loop
or
mov
adc
xor
dec
sub
loope
cmp
mov
shl
scas
int3
fadd
jle
dec
sbb
gs
mov
jb
jle
cmp
icebp
or
cdq
jmp
shl
jl
cdq
dec
sbb
add
mov
lock
outs
ficom
mov
jmp
sbb
sub
outs
dec
push
mov
lock
sbb
(bad)
mov
rol
cmc
inc
hlt
stos
mov
stos
clc
mov
pop
adc
in
mov
movs
js
pop
addr16
adc
adc
mov
adc
das
sahf
pop
xchg
lds
ret
and
jl
into
ret
out
pop
inc
pop
iret
lock
out
scas
je
sub
push
push
inc
retf
(bad)
retf
add
out
push
sub
std
out
cmp
xchg
lahf
mov
or
aad
shl
xchg
mov
pop
pop
push
push
fstp
cmp
loop
lods
leave
lock
mov
pusha
cdq
(bad)
xor
imul
ret
retf
push
das
dec
xlat
and
movs
inc
xor
cmp
fld
rcl
mov
cmp
sub
into
fucomip
xchg
popf
jno
jns
imul
cmp
push
cwde
pop
jecxz
out
xlat
leave
mov
lods
ins
(bad)
mov
jmp
test
mov
jp
iret
aad
cld
arpl
mov
add
rcr
push
adc
leave
mov
mov
or
inc
mov
xor
add
cmp
fwait
imul
retf
cwde
mov
adc
and
loope
mov
cmp
cdq
in
div
mov
jle
and
cwde
push
retf
xchg
add
mov
in
aad
hlt
cmp
ror
fsub
pop
dec
call
lods
das
xchg
jge
jb
jmp
add
pop
data16
cmp
jno
mov
sti
mov
inc
xchg
add
jp
push
lea
inc
and
cmps
cmp
cmc
xchg
jg
and
repnz
repnz
mov
xor
jge
std
popf
sbb
and
add
loopne
cmps
add
and
in
mov
pop
sub
mov
xor
jle
push
xchg
je
fucom
test
neg
out
lds
pop
retf
ds
dec
lea
fwait
ret
sub
shl
enter
in
xchg
and
jmp
jo
dec
push
sbb
mov
sbb
jno
inc
cmp
xor
outs
push
inc
test
das
push
xor
ins
cmp
inc
cli
mov
mov
sub
daa
mov
push
xchg
add
dec
sbb
js
xor
jo
pushf
adc
mov
(bad)
sub
(bad)
(bad)
clc
dec
adc
pop
sub
aas
push
out
jmp
xchg
int3
mov
cmp
adc
dec
sbb
ror
adc
sbb
xor
xchg
retf
and
ss
stc
shl
je
jmp
add
or
jne
aaa
or
push
push
jp
cmp
rol
arpl
push
cmp
rol
in
cmp
mov
hlt
(bad)
push
pusha
dec
stos
fldenv
xor
inc
jae
sbb
fiadd
(bad)
aad
call
jmp
out
sub
test
jo
add
scas
cmp
pop
outs
jo
cmc
dec
xchg
mov
mov
lahf
ret
movs
in
aas
sub
sbb
sub
repz
xlat
inc
test
test
cmp
loop
xchg
inc
xchg
cmps
xchg
push
or
fsubr
add
repnz
outs
inc
int
fadd
or
popa
jo
sub
jae
bnd
out
cld
dec
mov
mov
fisttp
push
hlt
loope
pop
xor
pop
retf
sub
(bad)
sbb
cdq
jno
(bad)
scas
ins
stos
dec
or
push
push
(bad)
pushf
pop
outs
les
cmp
adc
bound
jns
test
lods
loop
in
int
mov
mov
nop
jae
mov
lea
out
dec
xchg
and
sar
enter
jp
fistp
pop
jne
out
in
add
daa
cmp
ss
in
adc
jle
sbb
jmp
into
repz
pop
push
pop
ret
mov
retf
mov
pop
or
jno
jmp
mov
dec
jmp
inc
mov
pop
jl
mov
inc
inc
xchg
fild
arpl
inc
loop
cmp
mov
(bad)
imul
and
retf
repz
xor
add
(bad)
in
or
mov
cwde
mov
push
xor
loopne
shl
sbb
xor
adc
inc
cmc
movs
xor
and
test
push
test
pop
sub
fwait
push
jle
sub
lds
lock
push
or
and
ds
dec
out
cmp
cmp
je
sbb
mov
or
leave
adc
pushf
push
or
shr
bound
and
xor
mov
movups
adc
lahf
cmp
cmps
movs
inc
push
bound
sti
adc
verw
call
pop
push
cmp
jg
popa
cmps
add
jge
dec
lea
or
(bad)
mov
scas
add
mov
cmc
cmps
nop
and
sub
daa
and
dec
xor
push
pop
pop
xor
add
adc
mov
icebp
fidivr
das
jg
stos
sbb
xchg
clc
sbb
aad
ins
inc
push
ins
mov
sub
jl
push
push
shr
and
(bad)
adc
cld
bound
mov
and
ins
in
out
loope
jle
cli
push
pop
push
pop
popa
or
jb
lock
pop
cld
mov
push
and
jecxz
and
popf
and
sbb
js
div
fwait
jo
dec
pop
pop
jne
adc
or
sar
push
add
pop
(bad)
mov
pop
(bad)
gs
mov
hlt
jmp
movs
xor
mov
mov
sub
repnz
loop
nop
jns
xchg
cld
popa
jb
and
call
sub
into
fisttp
mov
mov
clc
xchg
sub
test
mov
sub
jecxz
xor
cs
push
loope
jmp
movs
dec
or
pop
push
imul
jb
fwait
jne
out
jbe
lds
add
pop
dec
mov
icebp
jnp
mov
arpl
jbe
cmps
sub
push
aad
out
and
leave
adc
icebp
icebp
cmp
cmp
in
mov
je
lods
imul
adc
or
xor
xchg
mov
movs
dec
clc
jge
jmp
and
lea
enter
cdq
push
push
adc
sub
lock
inc
aaa
inc
stos
iret
inc
mov
test
test
xchg
mov
sub
stos
xor
call
mov
mov
ins
out
test
jp
sbb
movs
mov
mov
jae
lahf
popa
idiv
cmp
jecxz
in
push
or
add
inc
dec
das
push
in
aas
lods
lock
es
out
push
add
ja
push
sub
jnp
(bad)
jle
sbb
mov
sti
inc
(bad)
or
ins
scas
fbstp
mov
loope
stc
ja
or
es
pop
xchg
lods
(bad)
jo
neg
fwait
shr
jge
dec
call
movs
mov
(bad)
movs
mov
adc
mov
icebp
mov
clc
and
xchg
jp
fcmovu
mov
xchg
xchg
bswap
(bad)
mov
lock
lods
fs
push
sbb
push
xor
out
movs
test
loop
add
push
sbb
ds
sbb
pop
ins
mov
push
test
jmp
aam
inc
outs
popa
xor
loop
and
and
pop
mov
pop
pop
and
repnz
into
mov
push
frstor
jno
jb
sub
xchg
and
out
imul
cmp
pop
sub
add
mov
pop
or
int
out
sub
aas
mov
xor
lea
out
into
hlt
add
ins
add
adc
xor
xor
fiadd
and
push
lock
or
movs
sbb
push
test
jmp
inc
scas
mov
lea
test
pop
test
iret
dec
mov
jo
neg
push
jbe
xchg
aaa
mov
pop
jmp
aad
ss
pop
jns
push
bound
mov
mov
das
mov
inc
loop
cs
jmp
cmps
call
mov
xor
iret
in
mov
out
int
xor
pop
(bad)
inc
and
mov
add
xchg
jnp
enter
push
or
aaa
pop
hlt
add
sbb
scas
xchg
loop
jge
mov
call
sbb
xchg
std
sahf
or
xchg
(bad)
fisttp
lahf
xchg
hlt
push
pop
jmp
ins
or
sbb
jns
push
fnstcw
add
test
inc
leave
bound
sub
jmp
enter
mov
pop
xor
sbb
fwait
inc
cdq
pop
mov
rcr
adc
cmp
push
push
push
enter
push
mov
xor
sbb
pop
adc
lock
or
xchg
jo
clc
push
cmp
aas
adc
mov
add
test
in
rcl
mov
pop
mov
lods
add
call
lock
gs
adc
nop
out
push
adc
sbb
shl
inc
xchg
scas
mov
into
sbb
icebp
pop
es
dec
xor
mov
stos
mov
pop
fidivr
cmp
mov
sti
jo
pop
sbb
jg
outs
outs
jb
dec
enter
mov
dec
test
sub
scas
push
push
mov
sbb
test
fwait
ror
int
cmp
mov
out
push
fcmovne
xor
mov
mov
nop
sbb
xchg
xchg
lods
fld
and
add
movs
daa
xchg
or
stc
add
lods
adc
mov
into
jno
mov
int3
pop
fstp
arpl
cmp
(bad)
xor
movs
inc
xchg
cmc
in
mov
push
je
jns
imul
pop
pop
mov
xlat
(bad)
mov
test
adc
jle
cmc
movs
(bad)
rol
push
push
sub
pushf
scas
(bad)
adc
adc
sbb
and
mov
and
js
sub
pop
fdivr
add
outs
mov
mov
pop
movs
or
lds
pushf
aas
push
mov
stc
jmp
sti
sbb
jnp
ins
cmps
jmp
xor
and
push
repz
out
push
and
xchg
mov
dec
dec
ins
push
shl
jle
repnz
and
xor
aad
in
or
enter
gs
mov
xor
or
mov
iret
and
arpl
pop
ret
outs
sbb
rol
xchg
xchg
ret
mov
sbb
lock
push
mov
cmp
test
call
adc
push
add
cdq
xchg
mov
loope
arpl
xlat
pop
jl
sbb
fimul
mov
(bad)
in
pusha
push
sahf
inc
sub
loop
jne
xor
mov
inc
iret
mov
stc
xchg
jns
mov
cli
clc
mov
idiv
rcl
push
imul
and
ret
aaa
aad
test
and
sbb
xor
lods
sahf
jl
(bad)
push
iret
sar
imul
rcr
das
and
test
leave
xchg
dec
std
arpl
stos
scas
lds
jecxz
test
mov
xchg
loop
xchg
pop
jmp
jmp
adc
xor
or
sbb
je
push
pusha
sbb
inc
xchg
cmp
je
outs
iret
xor
mov
aam
add
leave
std
sar
pop
xor
mov
repnz
cmps
je
cmp
dec
push
sbb
repnz
or
mov
retf
(bad)
lea
sub
inc
dec
mov
sbb
pop
fisub
sbb
fmul
fsubr
adc
sub
pop
jp
push
fcmove
xlat
test
jl
sar
pop
inc
sbb
pop
mov
mul
aaa
cmps
loop
jl
not
cmp
mov
add
fiadd
cmc
jmp
cdq
fwait
adc
mov
mov
xchg
cmc
loope
aad
jmp
mov
ret
(bad)
mov
pushf
mov
cmp
rcl
jp
push
mov
inc
div
add
mov
xchg
pop
or
fdivp
push
xchg
(bad)
push
dec
leave
xor
imul
mov
test
inc
call
xor
pop
or
xchg
outs
pop
sub
in
out
loopne
mov
pop
pop
push
rcl
inc
mov
xor
mov
add
inc
cmps
add
sbb
dec
adc
xor
pop
mov
mov
or
mov
xor
dec
push
test
sbb
or
int
mov
fmul
inc
arpl
inc
sti
sbb
fist
adc
scas
lahf
leave
cmps
es
stos
jns
ins
dec
out
pop
mov
arpl
jmp
mov
(bad)
lods
cmps
cmp
loopne
sub
push
ja
dec
mov
cwde
ins
inc
pop
dec
ret
daa
sub
mov
repz
sar
movntps
xchg
lahf
adc
imul
mov
pop
lods
ror
in
icebp
stos
mov
jmp
sub
dec
scas
pandn
lods
je
pop
inc
or
xchg
out
push
pop
mov
jo
enter
cld
jb
out
in
std
lods
pop
pop
mov
pop
std
(bad)
jmp
outs
icebp
mov
pop
cmp
lods
sbb
inc
jmp
mov
retf
and
test
repnz
lods
sub
push
(bad)
in
jb
ins
(bad)
xor
fidiv
jno
daa
lahf
retf
inc
mov
out
xor
ret
xchg
sbb
(bad)
sbb
add
int3
or
sub
mov
out
scas
rcl
scas
in
movs
mov
pop
mov
dec
xor
fwait
retf
push
test
lds
das
push
inc
push
pop
pop
scas
das
mov
fldcw
mov
adc
daa
add
jl
and
mov
adc
and
movs
test
sbb
test
mov
mov
add
out
jp
push
loop
mov
xor
or
pop
mov
jmp
in
fisubr
jbe
dec
xor
xchg
ins
mov
lods
lock
sbb
inc
or
out
xor
mov
adc
jns
inc
retf
push
xlat
pop
lock
cmp
(bad)
adc
ss
and
pop
(bad)
in
cld
fninit
push
sub
or
sub
push
cmp
mov
iret
add
fst
arpl
pusha
aaa
loope
push
(bad)
and
mov
pusha
nop
fs
mov
(bad)
lods
sub
jle
cdq
push
mov
fmul
dec
ja
aam
jmp
out
push
pop
scas
adc
mov
cmp
pop
cmp
jmp
mov
xchg
dec
icebp
mov
xor
jae
or
in
xchg
push
call
pop
dec
shl
fld
sub
popf
bound
cmps
sub
mul
fild
mov
add
cmc
xlat
(bad)
pop
cdq
jno
adc
mov
mov
sar
push
push
mov
and
mov
ds
adc
call
shr
pop
movs
adc
lods
and
sub
je
cli
mov
int
mov
cmp
pop
stos
mov
or
fwait
out
je
mov
xlat
lahf
mov
mov
repnz
push
sbb
test
push
jnp
js
inc
xchg
lock
add
sub
scas
call
push
sbb
pop
js
push
add
xor
mov
push
enter
sbb
inc
retf
bound
imul
or
test
lds
xchg
ret
sbb
shl
es
out
test
mov
ret
push
or
fcomip
rcl
mov
sbb
imul
pushf
lds
and
inc
and
add
mov
push
dec
test
inc
daa
mov
mov
test
not
xchg
jp
imul
frndint
lahf
std
fcomp
mov
dec
loop
mov
(bad)
fidivr
pop
call
and
or
(bad)
ss
std
fiadd
or
lock
fcomp
js
das
inc
xchg
lock
in
or
int
jbe
dec
xor
aad
dec
adc
mov
dec
sub
cmp
into
sub
and
xchg
pop
in
data16
jo
xor
mov
mov
xlat
ret
stos
dec
mov
es
lods
call
adc
add
push
fcom
push
jmp
arpl
xchg
inc
lock
push
cmps
es
sub
shr
ds
pop
and
rcr
out
sub
rcl
jmp
sahf
imul
jbe
add
mov
iret
cmps
sti
inc
aaa
sbb
mov
or
adc
cmp
cld
mov
push
rol
enter
or
or
rcr
stos
mov
ret
xchg
add
stc
mov
mov
dec
sub
xor
in
enter
jg
dec
xor
test
xor
lahf
lea
inc
cmp
push
cmp
cld
jmp
push
jno
mov
push
in
dec
push
jae
aad
dec
mov
sbb
fs
xchg
mov
es
(bad)
jo
dec
rcl
jle
cld
dec
push
push
inc
or
inc
lahf
mov
call
test
neg
les
test
jmp
mov
in
sbb
dec
mov
(bad)
(bad)
jbe
sub
inc
ror
push
adc
lahf
add
mov
dec
ficom
retf
out
lock
jmp
jmp
xchg
(bad)
cld
xchg
in
xor
fimul
js
dec
clc
dec
mov
cmp
inc
cmp
sbb
jl
ror
lahf
pop
adc
stc
cs
das
shl
(bad)
packssdw
ret
and
retf
mov
inc
in
ss
pop
mov
(bad)
sub
or
xchg
in
sub
shl
iret
sub
js
cdq
jg
mov
out
mov
js
sbb
push
fld
lea
mov
pop
mov
bnd
pop
leave
mov
popf
xor
enter
inc
xor
cmp
sub
dec
sbb
mov
inc
aas
dec
call
pusha
xor
jb
dec
scas
les
push
mov
mov
into
sbb
cmp
mov
les
call
(bad)
fistp
xchg
(bad)
popf
das
and
lods
loop
sub
mov
add
mov
dec
mov
(bad)
stc
inc
jmp
add
mov
pushf
aas
cmp
test
inc
(bad)
outs
int
mov
push
jno
sbb
scas
mov
inc
es
mov
fmul
or
xlat
aas
mov
mov
ror
jne
jle
dec
inc
stc
neg
xchg
sub
sahf
scas
and
pushf
xor
mov
fist
mov
xor
cmp
jbe
push
xlat
aam
sub
in
sub
jmp
test
imul
push
sbb
in
and
mov
lods
and
pop
(bad)
data16
push
jbe
sahf
cmp
mov
fidivr
and
ja
mov
jmp
adc
and
and
xchg
xchg
fwait
aam
inc
mov
in
imul
pop
nop
mov
cmp
cmp
mov
or
cmp
pop
test
fstp
iret
daa
fdiv
loop
cmps
adc
pop
daa
ds
push
mov
hlt
dec
fwait
mov
jbe
ins
psllw
rol
loop
pop
push
in
lods
shl
aam
jecxz
add
sub
ret
mov
out
mov
dec
cmp
vmovhps
into
outs
lahf
cmc
sar
shr
mov
and
sub
xchg
or
popf
in
popf
jae
imul
daa
mul
fdivrp
jecxz
mov
test
test
sbb
xchg
cs
mov
cmp
sahf
fcmove
cmp
jp
fld
fidiv
mov
mov
and
outs
fldenv
adc
ds
and
jnp
in
stc
mov
sub
out
push
stos
cld
aad
cmps
leave
movs
inc
movs
iret
cmp
arpl
xchg
or
xor
fimul
push
jo
rcr
cmp
fdivr
sub
push
pop
test
lea
xchg
jecxz
stos
out
fst
dec
add
cld
aad
and
push
popa
aas
mov
inc
xor
dec
(bad)
clc
lods
cwde
xchg
and
and
imul
cld
fsubr
dec
es
inc
scas
fnstsw
sbb
push
daa
imul
lods
fnstsw
mov
popf
lods
cmps
std
outs
sbb
mov
mov
push
sar
mov
shl
pop
lods
test
and
xchg
out
test
or
loope
or
loop
jle
add
push
push
cmps
pop
in
out
movs
ret
fwait
jmp
fwait
arpl
xchg
loope
mov
loopne
aam
inc
mov
jmp
and
or
and
daa
pop
mov
xor
or
(bad)
pusha
and
pop
add
jns
rol
and
ror
movs
cwde
xchg
movs
cmp
ret
out
xchg
mov
js
mov
stos
shl
in
pop
call
js
mov
imul
jge
test
pop
or
mov
jg
pop
aam
push
sub
lods
sbb
clc
les
and
jbe
cli
fnsave
les
mov
sahf
push
fsub
fld
stos
xor
fwait
mov
stc
xor
pushf
pop
mov
push
and
add
push
add
test
sbb
jge
xor
dec
pop
(bad)
cmp
jg
adc
popf
mov
aaa
push
repz
(bad)
loope
adc
pusha
adc
lods
repz
mov
sub
push
cwde
loopne
outs
push
call
sub
mov
imul
jne
inc
fld
adc
js
cmp
lods
in
mov
sbb
data16
outs
shl
mul
or
stc
or
jp
ja
shl
rol
rol
xchg
test
push
call
jmp
in
cmp
(bad)
popf
xchg
inc
test
xor
pop
imul
stos
imul
adc
les
arpl
jnp
adc
jno
mov
jmp
xor
pusha
pop
into
xchg
mov
pop
adc
adc
in
mov
mov
adc
cmp
mov
stos
cli
sbb
movs
jecxz
enter
pop
pop
jb
std
push
cmp
and
sub
mov
test
sub
hlt
pop
rol
test
int
movs
xor
addr16
test
cld
(bad)
fsubr
pushf
enter
or
pop
ins
fadd
mov
dec
outs
loopne
sub
add
call
adc
das
test
xor
sub
clc
pop
push
mov
mov
retf
inc
test
cmps
leave
cmp
push
cmps
push
push
fwait
and
(bad)
leave
sub
stos
fwait
pop
inc
lahf
xchg
sbb
into
xor
xor
dec
(bad)
dec
aaa
addr16
fcomp
sub
add
xchg
mov
cld
mov
dec
aad
push
pop
test
scas
hlt
enter
stos
mov
aaa
xor
jns
jo
and
scas
sbb
xchg
test
jbe
clc
movs
mov
push
adc
add
jg
(bad)
sub
addr16
jbe
dec
push
add
jmp
dec
add
test
mov
fidivr
and
cmp
lahf
xor
jns
fstp
out
push
sbb
in
pop
fcomp
jne
or
inc
iret
sbb
push
fist
push
xchg
popa
cmp
fdiv
clc
neg
xchg
sti
mulps
inc
movs
xchg
(bad)
icebp
call
popf
mov
lods
inc
add
mov
ds
or
or
xor
jns
(bad)
or
test
mov
fild
mov
adc
or
sub
in
ret
inc
push
test
fist
retf
nop
xchg
mov
movs
imul
sbb
xchg
pop
pushf
mov
sbb
into
std
stc
lods
pop
jp
js
(bad)
mov
cmp
sbb
adc
dec
sahf
stos
lahf
inc
call
mov
xchg
pop
jnp
fidivr
dec
add
cmp
push
xchg
inc
dec
mov
and
sbb
dec
sub
push
push
jp
sub
jno
sub
les
jae
cmp
into
xchg
sub
in
loopne
mov
imul
dec
mov
push
jle
xor
mov
dec
aas
xlat
push
in
add
out
jno
xchg
sub
call
or
shr
mov
cdq
xchg
jmp
fisttp
xchg
xchg
xor
sar
adc
lahf
addr16
fimul
push
movs
adc
outs
dec
or
push
inc
les
out
xchg
inc
retf
stos
inc
inc
je
jno
jecxz
adc
enter
in
jle
out
popa
push
movs
shr
jmp
or
mov
adc
dec
test
or
xor
jae
div
std
push
jecxz
retf
pop
repnz
add
jmp
inc
dec
push
sbb
mov
mov
add
nop
(bad)
mov
xlat
dec
fiadd
cs
stc
imul
rcr
inc
xor
in
cmps
mov
mov
jge
add
fsub
push
test
push
jne
pop
scas
arpl
lock
cmps
cdq
cmp
popa
in
jno
sbb
adc
call
lods
dec
sub
pop
mov
jne
mov
mov
arpl
or
lock
stc
mov
out
test
mov
cmp
test
lahf
test
repnz
test
adc
sbb
mov
push
out
inc
jmp
push
or
mov
dec
mov
mov
or
xor
js
mov
cli
mov
jp
stos
stos
(bad)
pusha
adc
xchg
push
ds
pop
mov
call
(bad)
out
inc
cmp
xor
push
and
jmp
pusha
jb
in
stc
pop
mov
outs
mov
movs
shl
iret
or
cmp
and
loopne
adc
loopne
push
jmp
out
sbb
cmc
sub
lock
mov
xchg
cmp
dec
sbb
fcomp
cmc
dec
fcomp
xchg
int
out
mov
shl
dec
in
ss
dec
clc
push
adc
push
inc
inc
jge
in
mov
xchg
mov
jmp
(bad)
jmp
ja
cmovs
jecxz
adc
out
fmul
lds
add
out
or
aaa
inc
loope
push
cld
gs
and
push
xor
dec
dec
retf
xchg
into
mov
test
shr
pop
cmps
inc
and
add
xchg
xor
test
sub
mov
dec
add
mov
push
mov
xchg
mov
mov
dec
ds
cwde
loopne
je
push
or
bound
xor
test
push
mov
jl
inc
test
push
or
jmp
sub
ja
mov
xchg
in
call
add
imul
dec
dec
push
mov
clc
pop
sbb
jo
fwait
cmp
dec
pop
int
jne
xchg
mov
pop
outs
mov
jp
lods
pop
retf
jno
xchg
nop
punpckldq
adc
jmp
sbb
ret
mov
pop
cmp
addr16
mov
dec
cli
retf
sub
and
retf
xchg
(bad)
dec
stos
xchg
mov
pop
out
adc
mov
dec
mov
arpl
pop
fisttp
sar
aaa
mov
xchg
mov
dec
or
imul
popf
fstp
loope
cld
stos
fcmovbe
inc
cmp
push
fbld
cld
cmps
mov
mov
pusha
js
int
out
xchg
inc
and
sbb
xor
add
(bad)
xchg
mov
xchg
mov
popa
inc
cmp
add
addr16
aam
sub
jno
fyl2x
je
popa
cmp
cmp
aas
aaa
lock
fild
jno
(bad)
mov
add
cmp
psubsw
sub
stos
or
test
push
cmps
neg
fild
sub
or
add
pushf
sar
mov
nop
fst
cli
lea
into
jge
gs
inc
movs
cmp
cmp
in
push
pop
pop
ja
ror
test
out
inc
nop
adc
es
xchg
add
retf
push
xor
hlt
js
ret
push
test
imul
(bad)
rol
dec
jnp
xchg
mov
jae
cld
xchg
mov
mov
xchg
push
out
jle
lods
cmp
fsub
test
retf
ss
clc
in
int
sbb
test
xor
and
or
cmp
jecxz
call
mov
push
add
in
xchg
sbb
frstor
pop
mov
sbb
jl
xchg
ror
cmp
jle
sbb
inc
les
enter
sbb
pop
out
dec
enter
jge
or
cmp
pop
int3
or
sar
pop
pop
addr16
push
sbb
mov
(bad)
pop
xchg
and
mov
pop
inc
push
aaa
in
and
jge
aas
dec
dec
(bad)
sub
add
push
xchg
mov
into
mov
shl
pop
xchg
and
xchg
enter
sbb
add
out
imul
ins
jge
(bad)
fmul
movs
ret
add
fcmovb
inc
cs
jnp
popa
dec
int3
push
arpl
jo
xchg
(bad)
xor
fs
or
inc
sbb
stc
sub
nop
test
mov
js
xchg
xchg
cmps
sub
or
mov
jbe
pop
xchg
jns
inc
mov
sbb
jbe
xchg
pop
mov
mov
out
cwde
dec
cmp
loope
imul
cmps
xor
push
loope
call
ins
ja
clc
ror
push
arpl
xlat
popf
sar
mov
mov
pop
jno
fidivr
pop
imul
push
dec
imul
mul
xchg
mov
sbb
sbb
mov
out
xchg
arpl
adc
adc
mov
sbb
mov
sub
das
out
(bad)
fcomi
imul
jnp
push
pop
jns
aas
push
pop
mov
cmps
loop
jp
xchg
nop
das
scas
sub
imul
mov
mov
(bad)
push
lds
and
mov
push
jge
jle
(bad)
ja
mov
stos
loop
sbb
cmp
popa
das
add
jnp
sbb
add
push
inc
push
cmp
mov
in
dec
sub
mov
or
sbb
jmp
jmp
in
push
mov
xor
jns
pop
cmps
xchg
test
sub
xor
(bad)
rcr
adc
inc
cmc
sub
or
ins
push
outs
je
dec
mov
xchg
mov
les
jge
(bad)
push
dec
rcl
hlt
cmp
ror
xchg
sub
mov
mov
jp
add
out
xchg
xchg
inc
push
movs
dec
jp
sbb
and
sbb
pop
fcomp
inc
sbb
sbb
mov
sti
jns
ret
test
sbb
and
and
mov
ret
adc
inc
jge
dec
push
lahf
fstp
xor
ror
jmp
sbb
cmc
fmul
push
jp
dec
jmp
dec
mov
arpl
xor
mov
inc
and
jp
pop
mov
xor
dec
jmp
fisubr
jmp
mov
adc
mov
clc
sub
(bad)
loop
jg
lahf
mov
sub
cmp
cs
sub
lahf
push
fucom
xlat
call
jg
cli
dec
add
cmp
ror
cvttps2pi
or
ret
pop
cmp
pop
bound
shl
rol
xchg
sub
out
(bad)
cdq
call
pop
mov
and
adc
mov
sbb
test
push
sbb
cmps
daa
call
inc
xchg
or
xchg
cmps
inc
add
pop
std
or
jbe
leave
dec
mov
getsec
nop
cmp
pop
ins
enter
cmp
js
ror
sti
mov
retf
lods
sbb
out
mov
adc
shr
into
or
adc
hlt
mov
mov
sti
outs
jp
movs
add
sbb
add
(bad)
fld
iret
jo
sbb
(bad)
pop
mov
or
or
push
shl
jecxz
in
retf
pusha
xchg
dec
popf
test
jecxz
popa
mov
mov
dec
cmp
or
mov
and
or
xor
mov
dec
leave
jne
out
scas
fwait
in
mov
xor
cmp
ds
mov
mov
shr
adc
sbb
(bad)
xlat
push
cmps
mov
mov
sbb
sbb
adc
mov
push
push
ret
push
mov
out
dec
and
sbb
stc
imul
push
inc
mov
sub
mov
and
cdq
scas
mov
(bad)
iret
and
mov
shl
cmp
jb
jecxz
gs
out
je
enter
fwait
loop
push
mov
and
mov
sti
or
(bad)
call
stos
aam
outs
mov
jp
imul
mov
jle
scas
sbb
fwait
mov
js
jne
jp
cmp
test
lds
daa
gs
pushf
lock
cmp
out
(bad)
or
cld
cwde
mov
and
sbb
and
xor
mov
aas
mov
adc
sub
pusha
push
or
pusha
mov
mov
dec
mov
loope
daa
cmp
in
scas
adc
jbe
outs
aas
sub
push
pop
fiadd
inc
sbb
gs
adc
enter
fidiv
push
jne
jnp
dec
pop
das
pop
gs
ds
movs
in
or
in
jb
sbb
mov
cs
or
jmp
or
dec
push
adc
enter
cmps
dec
(bad)
test
in
inc
add
add
cdq
cmps
test
or
inc
nop
test
inc
and
mov
popa
dec
mov
pop
out
loopne
and
jmp
rcl
adc
sbb
clc
jl
xor
sahf
push
sbb
imul
in
data16
and
fst
jmp
iret
push
(bad)
xchg
out
mov
jle
xor
mov
ins
lods
lock
mov
sbb
xlat
sbb
sub
pop
inc
pop
inc
lods
xchg
scas
sub
pop
inc
pop
lods
jns
mov
jge
aam
ins
adc
stos
daa
sub
cmp
leave
push
lahf
popf
or
movups
arpl
lea
call
mov
pop
loop
or
out
mov
push
jb
fst
mov
jl
xchg
add
mov
adc
test
and
js
mov
mov
inc
pop
das
pushw
adc
je
imul
inc
xchg
dec
add
sbb
push
cmp
or
and
fsub
mov
adc
dec
ss
or
mov
push
mov
(bad)
shr
mov
test
cmps
test
in
fst
push
jmp
jno
push
into
idiv
mov
sub
adc
int
mov
imul
push
adc
mov
xchg
pop
loope
imul
or
out
mov
js
add
cs
shr
xchg
and
jge
adc
pop
dec
xlat
pop
pop
test
mov
fdivr
pop
mov
pop
mov
cmp
mov
jp
fdivr
dec
addr16
loope
outs
sub
push
div
sbb
push
in
ret
and
mov
jae
push
stos
call
xchg
xchg
inc
nop
jp
pop
xor
stc
pop
test
pop
das
test
adc
pop
mov
sti
jl
cmp
pop
mov
cmp
cmc
or
jl
xchg
stc
(bad)
inc
retf
xchg
idiv
jge
fist
mov
enter
sub
jecxz
xchg
xor
mov
inc
pop
and
popa
dec
int
mov
mov
sub
aad
pop
dec
dec
fs
jo
mov
push
retf
test
xchg
mov
or
push
dec
nop
aad
or
inc
xchg
icebp
fsubr
xor
xor
ds
pop
mov
out
fisttp
mov
dec
dec
cwde
push
stc
rol
(bad)
int3
out
xchg
les
push
add
inc
inc
xor
cwde
xchg
mov
(bad)
sti
or
push
xor
push
sar
adc
inc
es
mov
add
sbb
ins
cmp
dec
mov
pop
jg
mov
jl
or
jecxz
ds
adc
setns
outs
lds
(bad)
mov
sub
xchg
es
inc
sub
push
ins
not
mov
out
xor
fwait
mov
xchg
pop
inc
(bad)
fcmovnu
push
dec
inc
scas
div
lock
lea
aad
mov
pusha
push
pop
and
xlat
add
mov
dec
lock
push
fnop
cmp
xchg
add
mov
(bad)
or
push
fbld
dec
and
arpl
aaa
jo
jmp
repz
imul
test
imul
dec
out
movs
mov
out
lock
sub
aam
push
rcr
test
shl
aaa
movs
das
fisttp
fs
adc
arpl
adc
loope
scas
mov
adc
dec
es
lock
in
dec
(bad)
ins
cmp
loop
lds
mov
sub
ret
pop
jmp
mov
fisttp
fwait
loopne
jg
mov
imul
clc
jmp
mov
mov
add
xchg
xchg
mov
in
lods
xor
int3
adc
outs
and
jmp
or
dec
test
cmp
daa
out
xchg
mov
popf
daa
add
out
mov
adc
jns
mov
mul
inc
loopne
loopne
out
test
mov
xchg
inc
jbe
or
cmp
jl
arpl
xchg
fstp
xchg
jns
cmp
jns
sub
inc
hlt
adc
push
pop
lea
int
and
(bad)
add
daa
stc
out
pop
fdiv
add
pop
mov
push
sbb
(bad)
mov
fld
jle
push
sbb
mov
mov
mov
jae
mov
add
cmp
retf
ficomp
cmp
mov
push
dec
mov
xor
xchg
mov
jecxz
test
(bad)
jmp
and
jmp
jo
cld
inc
cld
xchg
sti
add
les
fiadd
test
in
(bad)
pop
(bad)
pusha
inc
mov
popf
fisubr
js
lods
mov
fwait
dec
adc
push
cmp
cdq
loop
mov
pop
rcl
data16
push
pop
fiadd
xchg
xchg
xor
js
cmp
outs
rcr
das
inc
push
shr
or
pop
mov
dec
xchg
arpl
dec
push
in
pop
out
mov
in
ret
ds
js
and
push
aad
movs
pop
ret
bound
pop
jle
inc
push
and
jnp
fucomip
retf
jnp
adc
add
xchg
mov
jge
adc
test
push
test
inc
outs
call
pop
push
scas
sub
push
push
push
xchg
addr16
mov
add
add
enter
sub
mov
or
out
mov
hlt
add
mov
jecxz
repz
lahf
cld
xchg
inc
sbb
fadd
xlat
xchg
push
jnp
icebp
pop
fwait
test
outs
(bad)
les
retf
and
ja
mov
sar
xor
and
inc
(bad)
push
push
scas
push
rol
xchg
shl
sbb
(bad)
test
add
sub
push
add
mov
rep
bound
int3
aaa
jnp
ins
jge
xchg
mov
mov
test
arpl
repnz
and
xor
aam
(bad)
icebp
pop
lods
pushf
movs
sbb
out
jb
scas
mov
mov
mov
xchg
lahf
loop
dec
leave
xor
out
push
mov
and
adc
aad
jno
mov
daa
pop
xor
xor
mov
(bad)
cmp
push
inc
int
lock
mov
sbb
ror
mov
xchg
test
fst
jns
push
push
ror
push
mov
in
scas
mov
ficomp
popa
xchg
adc
sti
mov
(bad)
jb
xor
fisubr
jle
mov
mov
pop
gs
push
mov
cdq
ja
or
adc
test
aam
mov
sub
xlat
repz
mov
retf
nop
cmp
sar
fimul
push
(bad)
sub
repnz
test
aam
xchg
inc
mov
(bad)
pushf
es
jg
mov
test
sub
xor
pop
dec
mov
dec
jae
enter
jb
jb
popa
bnd
pop
stos
ja
adc
pop
das
jle
jmp
mov
pop
addr16
inc
add
repnz
sub
enter
pushf
(bad)
and
mov
push
movs
inc
test
or
cli
xor
jmp
cmp
ds
sbb
and
sbb
jl
pop
sar
ds
fwait
int
inc
sbb
clc
pop
addr16
mov
jl
es
inc
mov
pop
push
push
pop
jle
add
mov
jle
lock
call
adc
cmps
pop
int
repnz
lahf
push
pop
lock
retf
loop
or
ins
lock
out
lods
pop
(bad)
add
stc
js
or
jmp
fwait
sahf
pop
aad
push
bound
xor
mov
call
icebp
pop
sbb
xlat
aaa
lds
or
mov
jne
and
call
mov
jae
std
icebp
mov
add
dec
adc
stos
xchg
mov
adc
push
lds
out
inc
add
in
(bad)
pop
pop
jmp
jl
adc
push
shl
push
iret
or
fld
add
idiv
xlat
dec
dec
xchg
xchg
mov
std
mov
in
push
sbb
xor
mov
or
call
mov
loope
outs
cmp
(bad)
push
test
pop
rol
sti
add
sub
and
pop
jns
push
cmc
mov
scas
sbb
cmp
popa
into
cmp
mov
cmps
in
mov
jnp
imul
mov
mov
(bad)
or
push
call
inc
xchg
in
and
mov
lock
jle
adc
inc
lock
or
test
xchg
out
aad
lock
jbe
fbstp
aaa
sbb
cwde
mov
(bad)
jmp
push
fist
test
sub
lods
test
int3
mov
cmp
pushf
sub
lds
sbb
mov
mov
in
(bad)
inc
push
mov
fwait
loopne
add
scas
add
sbb
xchg
jno
mov
jne
scas
call
mov
adc
sti
add
dec
mov
sub
inc
out
clc
shl
pop
(bad)
outs
sub
pop
stos
(bad)
repnz
test
xor
sub
ins
dec
xor
jne
pop
in
lea
sbb
lock
xor
push
jns
mov
mov
adc
cmps
push
cmp
xor
push
push
cmp
repnz
cmp
jo
jns
jg
sub
xor
pop
xchg
mov
add
adc
js
and
into
and
jg
lahf
fxch
jl
ja
xlat
sbb
mov
test
cmp
movs
and
sub
int
or
popa
jmp
lods
sbb
xchg
scas
and
repnz
daa
add
cmc
pop
mov
dec
pop
and
or
add
repnz
das
jmp
aam
and
movs
or
fdiv
aam
outs
push
mov
push
pop
mov
fild
add
ds
fwait
shr
mov
es
sbb
test
in
xor
mov
mov
jmp
stc
jno
mov
pop
pop
lds
inc
mov
cdq
call
shl
fdivr
ret
or
or
mov
push
cld
lahf
mov
sbb
lahf
xor
and
adc
es
fld
mov
jmp
cdq
popa
cs
jg
add
push
clc
xchg
pop
mov
dec
in
hlt
adc
and
dec
aam
pop
mov
mov
inc
adc
gs
jge
or
(bad)
add
jns
dec
lock
xchg
dec
or
shr
ins
sub
inc
in
iret
pop
and
loop
jno
mov
mov
jbe
push
adc
hlt
fs
adc
aad
icebp
add
mov
xchg
inc
xchg
add
adc
lahf
pop
or
xor
jecxz
repz
popa
mov
clc
adc
in
mov
arpl
pop
out
jl
dec
mov
sbb
fs
je
dec
ret
mov
xor
jl
pop
in
js
inc
jmp
sbb
mov
mov
movs
call
test
lods
cmp
pusha
push
push
push
(bad)
stc
xchg
jmp
dec
popa
xor
mov
xchg
jge
dec
sbb
rcr
pop
mov
loop
sbb
xchg
cmp
adc
test
adc
fdivr
jl
(bad)
daa
movs
test
and
mov
jbe
jns
sti
mov
jge
loope
jo
cmp
push
dec
mov
ja
jp
mov
sub
pop
sbb
pop
cld
xchg
sbb
sbb
and
and
mov
clc
pop
in
and
je
push
hlt
dec
in
ins
adc
repz
jno
inc
dec
test
stc
in
sbb
adc
(bad)
movs
lea
test
(bad)
out
and
jle
imul
dec
adc
xor
ins
repz
jle
and
test
cmp
daa
cmps
pop
add
cmps
push
inc
sbb
test
push
jb
xor
dec
cmps
jg
stc
imul
mov
aam
cmc
dec
sub
jae
and
cmp
adc
aaa
xor
sbb
fs
or
into
test
sbb
pop
cmp
daa
mov
jmp
jecxz
xchg
sub
fiadd
adc
fidivr
addr16
repnz
bound
test
pop
out
jne
mov
jge
aad
shr
dec
sub
leave
or
mov
hlt
in
add
push
push
daa
xchg
pushf
cmp
ror
mov
jae
in
or
ja
mov
xchg
test
push
mov
xchg
mov
in
sar
mov
sbb
push
test
mov
out
mov
mov
retf
mov
(bad)
inc
ins
imul
fadd
push
cdq
fmul
xor
inc
push
dec
ins
lds
mov
test
jp
cmp
in
and
mov
push
test
mov
js
xlat
lods
test
jmp
in
adc
sub
in
rcl
jne
push
add
mov
jne
mov
xchg
nop
sbb
pop
inc
pop
xchg
mov
xchg
js
mov
xor
xor
ja
shr
xor
mov
push
mov
(bad)
pop
xchg
sub
xor
xor
xor
xor
sbb
cmp
dec
push
fld
shl
hlt
xchg
and
mov
clc
outs
adc
ss
lock
fsubr
test
push
jae
adc
pop
fcmovnb
dec
or
stos
fsubr
jp
mov
sub
loope
dec
(bad)
imul
mov
mov
imul
sub
fs
sbb
push
and
test
lds
movs
arpl
sar
jae
fsubr
in
aas
ja
sub
ss
int
lea
test
cwde
cli
repnz
sub
dec
popf
mov
test
data16
iret
(bad)
xor
mov
fld
mov
jmp
arpl
aam
cli
out
sub
clc
jne
aam
xlat
outs
push
and
rol
call
call
stos
sub
sub
bound
out
std
std
mov
dec
mov
popf
out
or
cmp
adc
jnp
ret
outs
inc
lea
and
sbb
ret
imul
inc
enter
call
xchg
fldcw
gs
push
out
xchg
mov
out
iret
call
lahf
pop
ds
inc
ins
test
dec
xor
popa
jge
sbb
push
into
stos
int
xchg
adc
mov
lea
inc
mov
add
sar
xor
jae
xchg
dec
ret
xchg
sar
cmp
sub
ins
push
xchg
icebp
gs
push
leave
adc
hlt
lods
fild
std
test
xchg
jp
jae
sbb
repnz
adc
push
paddw
cdq
push
dec
adc
fs
rcl
cmps
hlt
icebp
mov
fsincos
dec
fild
push
xchg
mov
(bad)
mov
imul
and
leave
push
(bad)
mov
not
rcl
pop
cmps
mov
add
cld
add
xor
out
loopne
xchg
jbe
inc
inc
scas
div
pop
ds
dec
push
pop
xchg
push
cdq
cmp
pop
scas
mov
outs
push
call
sbb
xchg
push
fisub
inc
daa
movs
fbld
dec
cmps
test
movs
arpl
cmps
ins
xlat
add
mov
xlat
popf
jae
mov
std
xchg
test
jmp
add
test
imul
ret
sbb
inc
fs
add
sahf
add
cmp
adc
add
ret
je
loop
mov
call
inc
mov
addr16
adc
test
int3
(bad)
sti
add
jl
or
out
inc
pop
fdiv
daa
mov
dec
aad
jl
(bad)
dec
lods
jae
mov
lock
pop
pop
fild
and
imul
cmps
mov
loop
ins
dec
lock
jp
adc
movs
daa
ret
or
xor
outs
sub
jge
in
jp
das
sahf
inc
cmp
cmps
mov
sbb
(bad)
arpl
enter
mov
outs
and
inc
int
das
sub
inc
in
rol
xchg
mov
pop
dec
pop
scas
xor
fcomp
icebp
ja
or
bnd
icebp
jo
xchg
out
sbb
popa
(bad)
cwde
les
lahf
adc
xor
jmp
cmps
mov
mov
pop
dec
sbb
fwait
bound
out
mov
test
inc
movs
out
cwde
sbb
not
int3
jae
xchg
push
sbb
add
es
movs
push
mov
push
jmp
or
mov
dec
mov
cdq
pop
daa
dec
hlt
xlat
lods
rcr
cld
mov
inc
lds
loop
cmp
vpmulhw
xchg
loop
je
cmp
nop
adc
test
ror
popa
jae
or
cmp
stc
jns
scas
ror
cmc
mov
shr
jle
int3
or
mov
xchg
test
(bad)
rcl
or
mov
and
xchg
mov
pop
push
mov
cwde
(bad)
mov
and
test
push
clc
stc
pop
not
sar
inc
ret
inc
xor
adc
cmp
inc
leave
iret
fidiv
cmp
idiv
pop
or
pop
sbb
fstp
cmps
push
sar
xchg
(bad)
popf
iret
lea
lods
xchg
leave
adc
mov
in
jno
mov
cmp
aad
fs
nop
cmc
ins
jae
sbb
adc
ins
add
jnp
jbe
pop
xchg
jp
movs
cmps
pop
pop
and
lods
lea
jmp
jno
fbld
scas
popf
mov
add
pop
pminub
leave
hlt
sbb
sar
out
out
xor
cwde
outs
lock
mov
mov
xor
add
mov
ja
cmps
push
cli
jl
add
mov
les
aas
popa
push
mov
jl
push
fs
popf
inc
jne
mov
int3
inc
xchg
int
xchg
mov
mov
jbe
sbb
movs
lods
add
jns
mov
call
sar
push
dec
pop
inc
jns
nop
mov
jno
jns
sbb
into
lods
into
mov
jge
pop
or
inc
jns
fbstp
mov
ss
outs
sub
cmp
xchg
push
fstp
cs
test
add
push
int
or
pop
not
in
mov
mov
mov
or
xchg
mov
(bad)
in
mov
push
fisttp
push
fisttp
mov
lods
ja
fbld
js
adc
bnd
pop
xchg
mov
mov
jb
pop
push
xchg
mov
int3
test
dec
dec
cmp
push
lock
fadd
xchg
loop
stos
ror
sar
iret
cmps
call
dec
retf
je
jle
xor
jl
xor
scas
and
clc
lds
test
mov
int
xor
(bad)
movs
addr16
and
mov
sub
mov
and
mov
push
push
hlt
fld
jecxz
movs
jg
and
loopne
bound
shl
inc
(bad)
call
adc
xchg
cmp
dec
pop
adc
mov
add
pusha
cs
lds
sub
(bad)
icebp
xchg
inc
inc
popa
das
and
scas
xor
sbb
movs
pop
xchg
xor
mov
cwde
mov
push
inc
xchg
sbb
in
pop
sub
test
stc
pusha
xchg
add
ror
pop
repnz
add
loopne
pop
inc
mov
std
xchg
scas
fs
dec
dec
sar
daa
ret
mov
sub
pop
mov
mov
mov
inc
(bad)
xchg
push
add
xor
arpl
inc
test
add
es
and
and
dec
sub
aaa
jge
push
fbstp
pop
inc
push
jne
repnz
jne
mov
mov
clc
jns
sub
xor
into
btc
adc
(bad)
iret
int3
mov
jnp
scas
xchg
pop
scas
jmp
pop
xchg
jne
out
(bad)
call
test
test
ins
lods
pop
imul
mov
pop
inc
mov
stos
cmp
jno
lea
stos
daa
adc
pop
fidiv
outs
dec
mov
stos
cmp
imul
fwait
inc
shl
icebp
xchg
and
mov
add
mov
sub
xchg
ret
mov
stos
addr16
and
mov
icebp
mov
add
(bad)
ja
pushf
stos
aad
in
mov
mov
pusha
mov
ds
jl
(bad)
(bad)
out
into
dec
sbb
nop
call
jbe
cld
js
xor
scas
in
in
mov
adc
pushf
iret
cli
test
cmp
ret
sbb
in
hlt
push
cs
(bad)
test
pop
jne
icebp
test
repz
ins
jmp
cmp
sbb
adc
mov
cdq
adc
sub
jns
test
cmp
aam
inc
sbb
pop
jbe
add
sbb
scas
sbb
out
in
xchg
(bad)
cmp
push
push
adc
and
call
aaa
retf
(bad)
outs
call
xor
mov
jp
mov
push
cmp
xchg
sub
lods
pop
xchg
sbb
cmp
cmp
gs
pop
adc
adc
or
or
cmp
aam
enter
fwait
and
xchg
(bad)
repz
xor
pop
pop
pop
hlt
loop
sbb
mov
mov
dec
push
and
pop
mov
les
pop
lidtd
mov
and
out
pop
sub
cli
jns
inc
out
(bad)
and
ins
adc
out
xor
shl
cmps
mov
in
fisub
xlat
inc
xchg
fistp
inc
mov
pushf
cmp
and
adc
mov
gs
pop
(bad)
cmp
(bad)
fisubr
(bad)
fldenv
inc
xor
in
pop
fcomp
in
cmp
fsub
mov
add
push
pop
bound
mov
push
fdiv
dec
fld
xchg
or
jmp
cmp
lahf
adc
push
test
scas
jecxz
sbb
sbb
mov
xor
pop
mov
mov
dec
push
stos
mov
or
add
imul
fwait
push
cwde
mov
icebp
out
xchg
adc
(bad)
aam
add
pop
in
nop
fcomip
clc
sti
mov
jmp
iret
jl
sub
push
mov
jecxz
jl
adc
leave
pop
push
push
sbb
dec
jmp
sbb
inc
pop
arpl
sbb
add
adc
test
clc
pop
inc
xor
pop
dec
pop
cmp
and
xchg
movs
push
(bad)
sub
cmp
sti
hlt
mov
pop
mov
or
fwait
xchg
(bad)
sub
les
clc
(bad)
pop
and
scas
sub
inc
xchg
dec
push
sar
idiv
call
clc
mov
ins
cmp
adc
test
outs
in
sahf
add
data16
imul
out
movs
pop
call
pop
(bad)
push
cmp
pop
jnp
stos
add
in
bound
cmp
mov
inc
adc
aaa
push
daa
dec
sbb
fistp
mov
mov
scas
jg
dec
aam
xlat
push
sub
dec
cli
jmp
test
mov
js
mov
test
bswap
ins
and
add
jae
shl
adc
cmp
cmp
daa
scas
div
dec
mov
and
push
dec
js
add
dec
lahf
adc
jp
mov
es
pop
pusha
jle
das
in
xchg
(bad)
into
fwait
into
inc
add
push
jno
and
aas
test
dec
xlat
xchg
iret
in
pop
sub
mov
cmps
and
mov
jge
cli
iret
mov
les
or
cmp
ins
in
adc
or
push
jl
(bad)
call
les
xchg
mov
(bad)
push
enter
nop
sub
call
cmc
(bad)
cld
and
out
jbe
dec
in
outs
hlt
in
test
push
cdq
mov
sahf
and
push
mov
sub
mov
ins
jmp
je
jo
int3
cld
loopne
daa
in
inc
push
icebp
(bad)
(bad)
dec
outs
mov
into
mov
test
fs
jg
mov
fdivr
shr
ins
hlt
or
mov
idiv
pop
push
pop
loop
repnz
or
xor
ror
out
lahf
mov
cld
lahf
outs
lds
adc
dec
adc
movs
jno
pop
stc
out
retf
dec
jo
inc
test
xchg
loope
ror
div
(bad)
adc
lsl
jo
jmp
or
xchg
sar
retf
sub
push
cmp
shl
nop
sub
xor
das
add
mov
or
xchg
pop
scas
in
ins
sub
sbb
in
ret
xor
sub
hlt
stc
iret
bound
imul
jge
push
(bad)
add
xchg
sub
in
icebp
sti
cmps
push
pusha
shl
call
stos
xchg
mov
dec
sbb
jmp
stc
or
dec
retf
mov
xchg
sub
movs
mov
add
push
std
mov
dec
popa
aaa
mov
cdq
movs
into
mov
lock
bound
dec
push
or
fdivp
int3
aad
xchg
xor
mov
loop
sbb
pop
jnp
sbb
xchg
mov
cdq
mov
(bad)
in
icebp
pop
lds
cmp
(bad)
mov
xor
outs
pushf
aaa
xchg
repnz
mov
stos
push
mov
add
mov
call
or
repnz
xchg
inc
xor
icebp
retf
clc
sbb
add
xor
arpl
xor
adc
and
mov
fsin
mov
push
dec
jnp
jbe
lock
js
jge
xchg
cwde
and
jmp
mov
adc
push
call
xchg
retf
arpl
pop
jmp
xchg
loopne
jmp
pusha
mov
push
icebp
fcomi
and
sbb
mov
cmp
pop
jecxz
repnz
jne
push
add
hlt
rcl
sub
(bad)
(bad)
sahf
pop
xor
mov
(bad)
jl
push
mov
adc
jge
stos
ret
test
in
xchg
mov
adc
std
add
cwde
jae
xlat
fisub
ins
sub
xchg
outs
and
xlat
addr16
stos
cld
icebp
lods
outs
mov
ret
bound
adc
sub
stos
and
repnz
(bad)
sub
(bad)
xor
retf
cmps
iret
into
repnz
adc
addr16
inc
and
inc
sub
sbb
jg
lods
rcl
and
mov
data16
inc
push
repz
shl
jae
inc
hlt
or
test
inc
mov
adc
adc
psrlw
or
cmp
jno
add
out
cmp
out
jecxz
xchg
mov
cdq
out
jnp
push
adc
into
xchg
and
mov
dec
lods
inc
inc
sbb
and
out
pop
xchg
daa
mov
inc
xor
sar
dec
sbb
lea
add
add
xchg
and
(bad)
jg
loopne
sub
inc
push
or
and
adc
js
dec
test
enter
mov
scas
pushf
jmp
mov
ss
into
dec
sbb
jecxz
push
mov
jns
test
out
ror
loopne
iret
sub
ret
(bad)
es
inc
xchg
jmp
cld
inc
clc
and
dec
je
fisttp
sbb
shl
push
inc
out
ins
inc
repz
xchg
xchg
std
shl
ret
jns
pusha
sub
dec
add
ds
cmp
jg
rcl
lahf
in
das
mov
mov
mov
lock
pop
outs
call
inc
and
pop
std
inc
mov
cmp
xchg
std
jge
(bad)
loopne
xchg
scas
cmp
lea
dec
cld
sti
push
add
xchg
xor
int
daa
stc
mov
ja
mov
in
push
sbb
cmc
jnp
mov
xchg
sbb
jb
lock
jge
jg
fs
test
mov
mov
push
add
or
ss
jecxz
(bad)
in
ret
lods
sahf
mov
shl
xchg
mov
(bad)
and
hlt
out
mov
les
iret
outs
(bad)
pop
dec
dec
das
dec
inc
adc
add
retf
sbb
fnstsw
sti
je
and
inc
call
cwde
sub
fdiv
stc
mov
int
jno
aad
int
xor
jae
cs
imul
(bad)
ja
enter
pop
mov
sbb
xchg
inc
push
ds
push
loope
cli
mov
retf
jae
lock
xchg
xchg
dec
cwde
pop
mov
int
je
and
je
pop
call
add
sar
mov
sub
dec
xlat
int3
mov
push
sbb
adc
into
sbb
std
das
shr
loop
int3
xchg
dec
inc
jmp
cs
cld
adc
cwde
mov
lahf
sub
enter
mov
rol
popf
mov
in
leave
ret
mov
mov
ror
sub
daa
stos
mov
xor
push
xor
(bad)
pushf
hlt
bnd
sar
ret
(bad)
mov
push
push
test
out
movs
icebp
lods
das
and
leave
enter
shl
cwde
xor
test
(bad)
idiv
jge
sahf
cmp
mov
pmulhw
retf
mov
add
(bad)
pop
and
add
cdq
fisubr
loop
pop
push
sub
push
sub
dec
add
lods
fistp
mul
cmps
(bad)
push
and
out
leave
cmp
sub
mov
dec
fs
jo
ins
sbb
out
xchg
(bad)
ins
in
outs
daa
imul
cmp
(bad)
test
jp
sahf
lods
push
pusha
jns
xor
stos
or
pop
mov
les
out
or
inc
pop
sub
adc
scas
inc
inc
les
ins
jg
popf
pop
push
loope
adc
mov
push
and
xchg
mov
mov
jno
mov
dec
test
jge
fisubr
pop
sub
aaa
icebp
nop
sub
inc
xor
add
repnz
inc
dec
jne
mov
cmp
mov
shr
mov
cmp
pop
mov
xor
dec
push
jle
in
pop
pop
cmp
adc
mov
sbb
mov
mov
push
ja
mov
mov
rcl
xchg
cmp
aaa
es
add
jne
and
dec
jmp
mov
xchg
into
push
inc
mov
fs
hlt
daa
jae
mov
div
lods
retf
repnz
repnz
add
adc
std
(bad)
in
out
pusha
mov
scas
cmps
pop
add
stos
ficomp
mov
dec
push
adc
and
pop
pushf
in
mov
jbe
fs
rcl
adc
fild
ficom
add
lock
imul
inc
sub
data16
popa
jne
retf
sub
inc
jns
mov
add
pop
popf
mov
movs
ror
sub
mov
xchg
lea
push
ins
retf
clc
test
sbb
icebp
js
mov
xor
ds
inc
jns
mov
(bad)
bound
les
imul
sbb
fsubr
push
and
dec
xor
in
movs
mov
xchg
in
aas
retf
mov
adc
inc
shr
mov
add
inc
js
icebp
shr
dec
dec
call
xchg
les
xor
loope
mov
push
stc
push
nop
int
aas
inc
scas
and
pop
jle
js
test
inc
mov
jae
(bad)
inc
and
nop
and
repnz
loop
lock
xor
or
mov
jns
(bad)
iret
or
pop
in
setge
mov
xchg
xor
mov
icebp
mov
scas
(bad)
in
lods
cmps
push
mov
aad
sub
xchg
push
and
mov
pop
xchg
jmp
cmc
stos
inc
pop
xor
fld
enter
push
add
add
out
int3
or
and
cmp
call
push
or
mov
xor
xchg
sar
dec
jmp
or
push
pushf
mov
jmp
mov
pop
hlt
lds
hlt
add
scas
xor
cli
or
pop
(bad)
sub
lods
sbb
(bad)
sub
ret
add
mov
push
or
int3
sub
push
dec
fmul
fidiv
xchg
mov
(bad)
xor
ins
adc
pop
cmp
dec
jp
pushf
dec
adc
and
loope
repnz
cmp
sub
lods
aaa
xlat
imul
sub
push
xchg
jge
and
pusha
sub
in
inc
call
repz
lds
adc
retf
cmc
call
xchg
aam
mov
div
push
adc
adc
bound
sub
inc
(bad)
and
mov
xchg
pop
mov
outs
xor
or
outs
dec
pop
adc
ret
shl
mov
mov
(bad)
xchg
dec
fidiv
nop
ror
hlt
xchg
pop
scas
lods
jne
movd
lock
push
xor
mov
cmp
mov
jbe
and
bound
xchg
mov
add
xor
hlt
lahf
lods
ins
pop
stos
jns
fldenv
jge
lahf
xchg
fcom
add
cmp
lahf
scas
rol
or
fcmovu
jl
inc
leave
rcr
mov
xor
loope
pop
cmp
mov
lods
mov
mov
jnp
sbb
push
es
fstp
or
retf
scas
inc
popf
or
rol
adc
dec
sbb
push
popa
fstp
cmps
loop
test
add
and
call
int
ins
adc
call
or
adc
mov
dec
(bad)
icebp
push
push
clc
cmp
daa
(bad)
movs
xor
dec
dec
or
cs
test
movs
gs
dec
and
fcmove
mov
mov
mov
loopne
pop
pop
sbb
daa
mov
push
pop
daa
sub
jne
aaa
ret
mov
cld
dec
jl
movs
sub
imul
and
fs
push
sahf
mov
sub
(bad)
inc
les
dec
jg
es
xlat
ds
mov
mov
sbb
sub
scas
inc
movs
cmps
cmp
and
test
int
push
xchg
jmp
fistp
fwait
hlt
pop
ret
out
pop
idiv
mov
mov
iret
es
enter
rcl
nop
jg
and
xor
test
sbb
add
lds
inc
cmp
jnp
cld
jge
icebp
sub
xor
mov
cdq
mov
or
jae
pop
test
fisubr
test
repz
sbb
jge
(bad)
xor
jno
jge
pop
push
jne
dec
jmp
(bad)
xlat
or
in
sub
jo
repz
add
fadd
mov
xlat
sbb
stc
jl
sub
ficom
sahf
xchg
out
jno
jg
retf
jno
or
pushf
jge
adc
int
mov
and
jns
stos
dec
leave
loope
ror
fwait
into
push
mov
jge
push
lea
shl
mov
mov
into
pop
leave
cmc
imul
fimul
je
popa
sbb
jl
pusha
jg
inc
adc
xor
cld
cmp
cli
call
pop
inc
lods
push
and
jp
sbb
mov
div
mov
out
iret
test
mov
test
out
repz
mov
out
hlt
mov
or
mov
imul
xor
pop
nop
es
xchg
jbe
(bad)
cld
and
inc
aas
sbb
inc
cmps
jno
ja
popf
imul
xor
stos
mov
cdq
mov
xor
dec
and
dec
mov
mov
jmp
aam
into
fstp
fnstcw
mov
adc
retf
lods
cmp
jge
dec
xchg
or
loop
lds
and
inc
mov
cmp
in
popa
sub
out
jne
(bad)
adc
clc
fnstsw
jle
jmp
imul
or
xchg
lods
aaa
xor
xor
ret
je
xchg
pop
sub
push
retf
shl
stos
leave
retf
scas
aas
cmp
fs
inc
cmp
or
inc
sbb
jb
das
sub
jg
and
dec
hlt
sub
pushf
mov
push
shl
fld
int
pop
or
adc
outs
dec
pop
mov
dec
jl
lods
mov
and
mov
jp
or
jmp
lods
ret
mov
sub
pop
imul
dec
or
inc
adc
xchg
xor
retf
imul
enter
ins
fild
pop
ror
stos
movs
ins
cwde
and
(bad)
dec
xor
cli
addr16
idiv
cdq
sbb
mov
dec
sysret
mov
leave
mov
daa
rcr
xor
and
sub
ss
mov
pop
in
push
sahf
xchg
fst
clc
mov
jmp
test
push
adc
loopne
push
mov
test
loop
dec
jmp
stos
arpl
inc
or
leave
and
lock
mov
mov
add
ds
dec
xchg
cli
push
mul
mov
adc
pop
jo
inc
es
dec
inc
or
xchg
cmc
push
push
hlt
jnp
stc
dec
sub
mov
gs
xchg
cli
mov
in
rcr
in
mov
fld
lods
mov
mov
mov
and
pop
jne
ficomp
push
dec
or
xor
or
cli
cmp
ds
test
push
test
data16
jle
adc
cmp
mov
or
inc
ds
popa
sub
fsub
test
xchg
in
sahf
mov
mov
fmul
jle
push
sbb
cmp
sbb
push
outs
leave
test
and
stc
sbb
out
rcr
jmp
add
push
sub
jnp
mov
in
test
ret
rol
jg
mov
cld
mov
aam
add
pop
pop
ret
xchg
pop
mov
das
sahf
pusha
call
or
hlt
mov
adc
loop
mov
mov
enter
mov
out
fiadd
stos
lahf
(bad)
cmp
lods
adc
dec
sub
mov
in
push
pop
cmp
xor
pop
jns
xchg
in
repz
push
jecxz
je
leave
jg
int3
mov
retf
fild
mul
pop
imul
lock
into
movs
sbb
ins
aam
ds
stos
ret
and
aad
cmps
push
mov
loopne
mov
sub
mov
xchg
popa
pop
xchg
(bad)
mov
fistp
or
and
pop
dec
sahf
mov
push
call
sub
mov
loopne
cmp
jcxz
lock
dec
and
pop
shl
rcl
dec
xchg
pop
lock
pop
ds
daa
push
(bad)
and
jo
adc
pop
xchg
fiadd
stc
lea
aad
or
in
pop
push
jo
xchg
clc
mov
inc
and
pusha
adc
sbb
xor
adc
pop
sub
cs
(bad)
dec
test
sti
ja
loop
mov
fisubr
push
and
imul
test
popf
jnp
aas
(bad)
push
xchg
adc
popf
movs
imul
and
jmp
data16
ror
imul
adc
cli
xchg
mov
dec
stos
or
dec
dec
mov
push
div
(bad)
test
(bad)
mov
push
(bad)
sar
push
xchg
push
pop
outs
jmp
pop
fcmovb
xchg
cmc
pop
ja
mov
bound
ins
cld
mov
sbb
and
jo
scas
xchg
inc
aaa
ds
add
in
dec
shl
popa
or
stos
mov
jg
push
inc
push
mov
popf
aam
dec
mov
jo
mov
loope
or
mov
mov
(bad)
sub
and
out
cwde
xor
push
sub
inc
rol
stc
sbb
idiv
cli
xor
loope
inc
ins
xor
stos
fs
jle
movs
fbstp
add
pop
or
adc
sbb
mov
repnz
xor
call
pop
cmp
pop
xor
mov
cli
hlt
dec
or
pop
fsub
adc
(bad)
adc
lods
jnp
jge
jg
or
test
mov
jnp
imul
jge
pop
movsx
jl
mov
jnp
or
sahf
out
std
sbb
gs
sar
xlat
add
pushf
not
repz
movs
push
inc
mov
dec
jmp
push
mov
out
mov
jmp
imul
xchg
push
lods
inc
xchg
jae
mov
add
pop
adc
lods
sbb
adc
push
repnz
stos
shl
mov
in
add
idiv
mov
cli
mov
fs
bound
mov
jg
lds
and
pop
add
icebp
add
cmp
adc
daa
icebp
push
or
lds
pmulhw
push
add
loope
jle
cld
out
pusha
mov
mov
scas
cmps
adc
sub
inc
fmul
std
push
loop
out
cmp
sbb
shr
rcr
call
out
sbb
(bad)
pop
and
icebp
cwde
xor
dec
jle
mov
div
pop
es
push
xchg
pop
in
lock
cmps
lea
mov
das
cli
inc
pop
push
push
and
stc
jg
adc
icebp
sub
lock
pusha
mov
mov
scas
cmp
int3
add
aas
sub
push
cmps
xchg
ins
(bad)
in
push
neg
stos
lahf
add
bound
outs
fist
sbb
push
push
adc
stos
ins
mov
in
mov
inc
fsub
call
je
pop
cld
jmp
icebp
ret
inc
out
xlat
test
inc
inc
repnz
push
enter
out
push
mov
jl
or
stc
push
fabs
jo
sub
mov
imul
nop
fcomip
sub
sahf
sub
aaa
pop
add
inc
rcr
dec
jo
xor
adc
ret
sbb
add
xor
sti
fidivr
jb
jo
dec
pop
and
cmps
add
shr
pop
imul
sbb
push
mov
push
lahf
jmp
(bad)
jge
dec
pop
iret
movs
ins
cmp
ins
add
out
mov
fwait
lahf
adc
sbb
dec
mov
in
xor
and
jnp
retf
sti
std
mov
in
fisttp
jae
mov
ds
pop
jmp
mov
push
cmps
sub
push
jns
push
cmp
(bad)
sub
jle
test
mov
mov
in
jnp
ret
push
add
dec
not
not
and
mov
mov
ins
sub
stos
or
push
xchg
inc
jb
aam
xlat
cs
pop
imul
cmp
int
(bad)
jl
(bad)
test
pop
imul
lock
stos
ins
mov
pop
test
(bad)
ins
inc
call
mov
jns
push
jmp
retf
sub
xchg
mov
add
popa
sub
mov
sub
or
les
cmp
mov
xchg
bound
jecxz
xchg
jmp
stos
mov
(bad)
jecxz
push
pop
inc
loopne
or
dec
je
xchg
loopne
fcomip
cs
call
cld
inc
pop
data16
test
(bad)
cmp
mov
(bad)
fadd
sbb
sub
xchg
pop
sar
loope
fiadd
(bad)
data16
dec
add
jl
cmps
les
cld
inc
int3
xchg
sbb
les
movs
hlt
jne
sbb
bound
loope
push
and
outs
jns
shr
jmp
mov
inc
nop
mov
popa
mov
nop
jmp
cmp
xor
xor
pop
aam
sub
dec
bound
(bad)
sbb
push
add
mov
add
push
inc
xlat
imul
push
cld
cmps
and
(bad)
jae
add
das
push
(bad)
xchg
or
cmp
mov
scas
jg
add
push
mov
jae
addr16
sbb
shr
ror
mov
mov
mov
jne
or
pop
ds
(bad)
dec
test
xlat
and
jae
push
sar
mov
mov
pop
and
test
scas
popa
push
sbb
ficomp
lods
repz
aam
adc
lock
cmp
lock
popa
adc
dec
add
or
xchg
dec
and
xchg
or
retf
ss
mov
mov
movs
add
xchg
lahf
mov
enter
mov
lds
mov
ret
dec
call
lds
cmc
fild
aad
inc
sar
jbe
bound
jl
(bad)
sub
jne
scas
imul
dec
das
jno
movs
dec
imul
dec
push
sbb
aaa
push
cwde
dec
push
sub
rcl
sub
pop
dec
jp
mov
loope
push
sahf
mov
xchg
or
nop
ds
aam
fdivr
and
and
push
imul
fs
fs
mov
xchg
ret
jmp
mov
dec
mov
popf
rol
adc
xchg
retf
cld
not
sbb
inc
arpl
fiadd
movs
add
iret
xchg
xchg
sub
idiv
cld
jns
in
cmp
or
aam
movs
add
js
icebp
dec
test
not
imul
xchg
test
iret
dec
in
mov
cld
xchg
add
in
std
inc
pop
xchg
pop
mov
rcl
adc
jecxz
adc
cmp
loope
es
jbe
cmps
(bad)
pop
jecxz
push
push
test
arpl
movs
(bad)
push
stc
inc
mov
jmp
sahf
enter
or
pop
xor
xlat
jecxz
jp
repz
pop
adc
mov
mov
xchg
jns
cmps
(bad)
mov
in
fsubr
xchg
xor
enter
imul
(bad)
repz
in
jae
inc
jg
jae
sbb
frstpm(287
stos
push
inc
sub
mov
mov
mov
sti
cmp
mov
lock
inc
stos
inc
sbb
sub
shr
test
out
mov
loopne
hlt
ret
jno
mov
jmp
dec
(bad)
xor
adc
xor
add
fst
mov
sbb
(bad)
pop
add
out
out
sub
sbb
push
cmc
push
push
lea
mov
adc
nop
arpl
push
sub
dec
js
inc
sbb
push
or
nop
add
ret
je
inc
pop
hlt
lahf
pop
movs
ins
scas
mov
or
repz
cdq
pushf
popf
cmp
fdivr
xchg
push
inc
test
add
out
adc
das
hlt
js
enter
std
cmp
cli
fidiv
pop
call
das
je
xor
test
xchg
jo
mov
dec
jg
ins
and
push
push
fist
or
sbb
jne
inc
pop
test
dec
outs
mov
sub
jns
stos
sub
xor
and
aas
inc
(bad)
shr
xor
enter
sub
mov
(bad)
fsubr
stos
xor
mov
xor
sbb
add
cs
xor
ins
adc
aaa
mov
fmul
inc
sar
cmc
test
pop
xchg
ds
iret
push
jae
add
cli
pop
sahf
jmp
jae
jmp
add
rcl
jecxz
cs
arpl
outs
cmps
retf
push
jp
dec
and
add
pop
rcl
sbb
or
repnz
or
out
add
lds
cmp
neg
enter
push
mov
(bad)
xor
jb
in
push
stc
cld
call
xchg
sub
add
arpl
cmps
test
lods
(bad)
call
mov
cmp
sbb
(bad)
popf
mov
scas
int3
add
cwde
stos
push
test
pop
loopne
imul
popf
cmp
sbb
add
dec
cli
test
shr
outs
xor
(bad)
adc
fdiv
xor
mov
lods
int3
dec
imul
push
mov
pop
sbb
cmp
jp
shr
sbb
ins
das
xor
dec
pop
add
ins
daa
mov
xchg
ss
mov
mov
jle
xchg
or
mov
movs
sub
dec
in
icebp
inc
ins
mov
rol
rol
pop
xor
push
sbb
gs
cwde
pop
push
mov
mov
inc
retf
dec
xlat
xor
retf
and
call
adc
inc
mov
lods
sub
add
mov
sbb
mov
mov
movs
int
dec
lahf
enter
lock
loopne
retf
and
mov
push
add
push
add
sbb
das
(bad)
and
push
enter
and
push
cmp
adc
in
pop
pop
enter
mov
mov
mov
cmps
jae
adc
ja
leave
pop
mov
loopne
in
outs
cmps
pusha
push
pushf
jle
in
inc
push
cdq
mov
js
jo
or
pop
cmp
dec
xchg
jne
es
xchg
cmp
adc
jo
int3
xor
mov
movs
scas
xor
shr
cmp
test
movs
cmp
sbb
repnz
sti
mov
push
push
add
pop
stos
jbe
mov
xor
mov
sbb
retf
sti
jl
cdq
cmp
sbb
into
add
mov
ficomp
push
cmps
sti
test
push
scas
stos
(bad)
icebp
arpl
and
popf
mov
push
je
add
shl
add
fcmovnu
add
leave
dec
clc
sahf
fsubr
dec
pushf
cmp
or
clc
shl
push
jecxz
sub
addr16
mov
push
xchg
mov
imul
(bad)
int3
mov
mov
je
push
mov
pushf
icebp
fidiv
pushf
xchg
in
js
mov
push
adc
cli
xor
pop
test
sahf
add
sbb
mov
push
add
adc
shr
in
in
in
pop
fldcw
in
stc
cmp
mov
mov
mov
stos
pop
leave
add
mov
sbb
idiv
xchg
lds
sbb
add
jne
jbe
test
sbb
cmps
stos
and
pop
mov
scas
xchg
add
repnz
cs
rcl
or
mov
popa
pop
pop
and
adc
js
cmp
aam
nop
jmp
add
pop
scas
push
xchg
xor
arpl
or
adc
shr
pushf
pop
sub
fimul
and
in
jl
sbb
aam
jle
inc
mov
cdq
xchg
pop
dec
loope
cli
lds
rcr
test
imul
jne
in
test
pop
pop
push
imul
jne
pop
adc
pushf
shl
inc
rcr
sbb
mov
mov
and
sbb
mov
mov
mov
into
xchg
cmp
aaa
push
jg
popa
(bad)
dec
mov
jnp
(bad)
jmp
retf
and
inc
xor
movs
jno
les
fdivr
fwait
sbb
or
sbb
pop
mov
cld
mov
push
stos
or
jns
enter
add
(bad)
jl
pop
adc
scas
add
outs
add
mov
xchg
xchg
cmp
sub
ss
sbb
pushf
push
push
adc
dec
shr
pusha
or
jl
adc
pop
mov
push
scas
cwde
mov
aam
cdq
movs
sub
mov
push
pop
es
cdq
mov
and
retf
stos
jmp
popa
pop
(bad)
xor
jno
pop
daa
and
push
xchg
xchg
pop
xor
xchg
das
call
jg
pop
cmp
cld
or
ret
jle
pop
push
mov
cmp
or
cmp
push
xchg
pusha
daa
not
push
mov
sub
repnz
add
xchg
cmp
sub
cli
mov
xor
in
sti
out
cs
inc
(bad)
in
shl
int3
lods
sti
or
arpl
inc
pop
jnp
fucomi
fld
(bad)
loope
pop
stos
adc
xor
sti
je
fwait
dec
inc
addr16
mov
(bad)
jne
(bad)
lock
aad
sub
out
scas
lods
add
push
sbb
jmp
mov
fwait
jmp
or
cwde
rol
ja
mov
fisttp
sbb
bound
xchg
cdq
mov
inc
mov
int
xchg
xor
or
outs
dec
and
setbe
and
and
ins
pop
sub
or
(bad)
int3
pushf
xor
(bad)
xor
inc
popf
pop
jge
xchg
jo
jnp
lods
mov
and
inc
popa
push
mov
fbstp
test
imul
arpl
or
bnd
pop
mov
push
jmp
cmps
mov
pop
pop
pop
add
das
test
adc
mov
push
xchg
xor
cmp
sbb
pushf
into
in
cmp
ret
add
scas
cmp
jge
push
sub
push
and
dec
sub
loopne
or
cld
in
jmp
int
mov
xchg
loopne
push
aaa
push
mov
dec
(bad)
lock
xchg
aam
and
or
mov
mov
test
out
jns
cld
call
inc
lds
sbb
div
or
out
out
xchg
sti
xchg
mov
ss
(bad)
xor
les
mov
sub
sbb
inc
stc
adc
push
outs
add
fistp
leave
mov
(bad)
xchg
test
retf
jge
pushf
add
cmp
outs
retf
xchg
and
test
cmp
mov
sar
cwde
test
scas
pop
retf
mov
out
push
loopne
push
rcr
ret
out
rol
or
imul
sub
pop
sbb
lods
fisttp
test
ja
jge
xchg
pop
add
dec
inc
or
xor
jl
loopne
lock
les
or
sbb
mov
and
(bad)
rol
cdq
fisubr
inc
in
in
nop
pop
popf
cmp
mov
and
lahf
mov
(bad)
jns
test
mov
jmp
cmp
or
fidivr
cmps
repnz
je
inc
popa
stos
scas
in
lods
int3
pop
mov
pop
jmp
and
push
popf
pop
push
test
jns
xor
ficom
jle
cmp
outs
sbb
mov
pop
(bad)
fnstenv
push
ror
hlt
pop
sbb
into
fadd
and
inc
loope
push
ret
jae
sbb
int3
cmps
ja
pop
pop
or
pop
dec
xchg
aad
or
dec
inc
lods
inc
je
cld
fsubr
mov
rcl
push
jmp
and
push
pop
push
popf
std
jp
cmp
pusha
sti
ja
jge
mov
jb
das
pop
leave
sbb
add
xchg
sbb
xor
retf
xor
xchg
sahf
repz
add
aam
cwde
jns
push
shr
jl
push
mov
sahf
imul
sbb
adc
popf
cwde
mov
cmp
iret
cmp
cmps
sbb
add
inc
aaa
cmc
lea
adc
or
mov
xor
dec
xchg
cs
xor
cmps
mov
push
inc
jmp
cmp
mov
idiv
les
scas
call
mov
in
pusha
fs
inc
mov
(bad)
out
daa
stos
inc
sbb
cmp
test
aam
add
mov
icebp
sub
push
dec
jmp
pop
jmp
push
jb
dec
mov
fidiv
outs
jns
test
sub
fdiv
adc
xchg
mov
and
inc
xchg
ins
in
fwait
repnz
mov
sub
push
repz
jb
int
sub
ins
test
inc
and
test
push
cmp
sub
(bad)
fcom
jmp
addr16
cmp
adc
jmp
sar
cmp
push
inc
gs
add
test
jns
dec
add
push
xchg
fsubrp
dec
xchg
outs
gs
jnp
ins
ret
repnz
or
inc
adc
add
mov
in
out
test
sub
mov
hlt
pop
jmp
movs
pop
arpl
ins
(bad)
scas
shl
mov
adc
loopne
mov
daa
ds
imul
fild
inc
mov
stos
push
and
lea
mov
sahf
mov
dec
or
pusha
push
hlt
adc
pop
sahf
call
(bad)
sbb
push
add
push
rol
or
je
push
sar
push
push
and
mov
test
(bad)
fmul
js
lods
mov
jmp
push
iret
cmps
nop
mov
add
sahf
aam
arpl
fwait
cdq
shl
repnz
in
xchg
(bad)
call
push
into
inc
in
std
xor
xchg
repz
rcl
(bad)
mov
cdq
mov
cmps
dec
test
pop
and
je
xor
jbe
jecxz
fdiv
and
nop
rol
xchg
jo
fsubr
pop
push
test
mov
bound
push
sahf
cli
push
retw
neg
or
jge
int3
shr
push
push
stos
rcl
cmps
lods
cmp
jmp
lods
cmp
xchg
cmp
shl
adc
(bad)
pop
into
movs
fadd
sbb
and
inc
addr16
mov
cmp
iret
into
jb
jns
cs
retf
add
in
xor
and
(bad)
mov
dec
imul
lahf
ds
jge
xor
mov
jmp
push
sbb
lods
xchg
or
or
lods
add
add
sbb
ror
inc
mov
aaa
neg
movs
jnp
jg
push
push
inc
xchg
add
and
das
push
add
jae
xchg
sub
xor
ret
dec
(bad)
mov
push
shl
sbb
retf
jg
jmp
daa
(bad)
and
ss
sub
into
mov
cld
sub
mov
add
out
jle
mov
add
sub
push
mov
mov
mov
add
in
lods
xor
sub
loop
ds
dec
mov
subps
hlt
fild
stc
mov
sub
mov
inc
cmp
push
inc
iret
scas
hlt
cmp
sub
shl
push
jg
jnp
aas
mov
adc
leave
adc
pop
div
popa
cmp
fisubr
jmp
inc
dec
into
fimul
inc
add
imul
ret
push
inc
gs
mov
inc
movs
cmp
sub
xchg
jns
stos
(bad)
mov
jns
and
mov
jge
push
fild
loop
or
mov
sahf
aad
cmpxchg
lds
xchg
xchg
imul
cmp
push
cwde
mov
sub
test
jno
cmp
sbb
pop
pop
cmp
out
xchg
xchg
cli
mov
dec
mov
push
arpl
mul
hlt
xor
jb
mov
rcr
pop
pop
sbb
fwait
jmp
fbld
jecxz
sbb
xlat
je
loopne
adc
jb
push
jmp
stos
dec
and
aad
pop
bound
repnz
jge
or
and
lds
xchg
xor
cmps
xchg
xlat
in
xchg
repnz
addr16
add
jbe
push
loopne
mov
mov
inc
pop
out
shr
(bad)
pusha
adc
inc
mov
leave
adc
test
ret
es
clc
or
fstp
xchg
dec
outs
cmp
xchg
outs
add
cmp
push
in
and
inc
out
push
push
jno
rcr
sbb
adc
repnz
retf
cmp
idiv
sub
pushf
inc
dec
in
pop
stc
gs
out
sub
cmp
jne
add
pop
push
sub
aas
mov
push
(bad)
icebp
loopne
adc
mov
sar
imul
adc
adc
cmp
dec
push
add
loope
ret
fstp
xchg
and
fs
sti
inc
mov
or
jmp
mov
and
jb
int
mov
je
and
xchg
hlt
sbb
jnp
je
inc
shl
mov
jge
out
mov
mov
push
mov
xchg
ja
cli
xor
js
outs
fs
inc
inc
jecxz
lahf
ins
test
popa
clc
and
adc
mov
mul
mov
loop
mov
push
add
pop
cmc
inc
and
cmp
cmp
mov
daa
mov
outs
adc
mov
ss
xor
inc
cmp
xor
cmp
xchg
inc
test
and
jp
cmc
xor
(bad)
sub
push
iret
lods
enter
mov
mov
js
lods
jmp
add
push
push
ficom
mov
mov
lods
dec
dec
sbb
call
push
leave
mov
add
push
stos
outs
pop
cmp
push
fistp
rcr
dec
imul
fild
and
shl
aas
mov
push
mov
mov
fisubr
mov
inc
mov
and
(bad)
mov
add
call
add
pop
sub
xor
and
mov
dec
push
(bad)
int3
jno
or
leave
inc
sbb
mov
mov
sub
jmp
inc
imul
fidivr
fcom
out
fld
shl
cld
cmp
dec
dec
test
and
mov
push
pop
mov
outs
pop
fbld
cmp
dec
adc
sti
dec
repnz
pop
xor
in
fwait
adc
sbb
int
lods
jecxz
mov
jnp
inc
scas
lock
jno
aas
sbb
sbb
pop
aas
inc
daa
sti
int
hlt
enter
(bad)
std
lds
jge
xor
icebp
push
pop
xor
pop
xor
fldcw
xlat
or
sub
aaa
or
ret
xchg
cmps
retf
shl
mov
xchg
and
xchg
retf
sbb
jl
mov
add
xchg
sub
pop
retf
mov
push
repz
addr16
(bad)
ja
stos
ins
xor
xchg
cs
mov
aam
cmp
jo
les
icebp
les
pusha
loop
(bad)
xchg
jae
push
dec
aad
push
int3
pusha
stc
pusha
mov
mov
(bad)
dec
loope
add
mov
and
jne
xchg
adc
fiadd
dec
fcom
or
popa
pop
jl
(bad)
fisttp
xlat
jle
outs
out
rol
cmovae
push
das
retf
jp
ja
jp
or
shl
or
cmp
nop
loopne
dec
out
cmp
cld
dec
or
fistp
shr
pop
or
icebp
fdivp
ret
das
pop
sbb
or
inc
repz
pop
push
aaa
inc
retf
pusha
lock
es
jle
or
sub
ret
mov
(bad)
fdivr
adc
cmps
mov
cmp
bsf
jnp
sub
sub
aam
es
sbb
ds
in
xchg
movs
push
rep
mov
mov
sbb
push
sub
fadd
mov
cmc
xchg
icebp
mov
and
les
sbb
adc
mov
xor
and
dec
aad
(bad)
arpl
retf
mov
sub
rcr
and
out
bound
cs
pop
icebp
ins
ins
jmp
cwde
inc
idiv
stc
jmp
in
sbb
fimul
sbb
jmp
rcr
sbb
mov
enter
dec
cmp
and
jns
xor
movs
jnp
and
mov
adc
leave
cmps
mov
push
(bad)
adc
loope
mov
inc
sbb
push
or
push
dec
pop
aaa
iret
xor
mov
and
in
jl
or
and
mov
ret
sar
mov
xchg
or
shr
pop
cmp
cmp
adc
cmp
stos
imul
add
pop
and
out
or
jne
shr
out
sub
in
xor
sub
inc
sub
xchg
add
cld
mov
fistp
mov
xchg
sub
xchg
dec
mov
ja
loop
fucomp
leave
pushf
sbb
out
xor
mov
loopne
adc
inc
xchg
or
(bad)
sbb
rol
out
sahf
dec
in
add
jl
jns
hlt
leave
mov
test
add
dec
pusha
pop
shr
add
mov
popa
out
sbb
dec
retf
xor
enter
addr16
mov
pop
bound
arpl
js
lds
push
push
out
push
dec
push
addr16
xchg
movs
imul
add
and
adc
push
(bad)
int3
sbb
sbb
cmp
jp
xor
jl
or
adc
std
fdiv
ins
aad
sbb
ret
xchg
add
push
out
sbb
pop
hlt
dec
mov
mov
lea
dec
adc
jne
int3
int3
enter
jns
(bad)
icebp
and
or
jae
sub
add
pop
push
push
popa
jo
sbb
fld
jp
dec
jl
dec
push
(bad)
sahf
add
fidiv
push
and
ins
out
movs
add
cmps
outs
xor
push
ror
es
xor
or
jno
inc
out
cmp
imul
mov
sub
xchg
cmps
cmp
in
xor
ja
sbb
inc
das
cs
(bad)
(bad)
add
les
cmps
or
int3
aas
test
mov
out
adc
arpl
sub
das
and
or
push
mov
sbb
ret
std
es
cld
adc
mov
push
pusha
sti
dec
into
mov
iret
cmps
aas
xchg
mov
ds
jno
fiadd
inc
dec
(bad)
and
in
jnp
nop
ror
mov
jb
dec
(bad)
je
sar
jecxz
retf
ds
(bad)
or
aaa
lods
push
mov
outs
clc
fbld
lods
add
add
rol
xchg
fucompp
mov
frstor
enter
popf
xchg
cmp
cmps
sbb
pop
jne
jmp
jmp
jmp
pop
fimul
test
aad
outs
jne
lds
jns
add
les
add
fild
call
aam
add
pusha
dec
ret
sub
push
in
mov
pop
dec
pushf
nop
or
xchg
das
mov
adc
xor
test
xchg
sbb
wbinvd
ror
or
repz
pop
xor
pushf
dec
repz
mov
ins
jg
cmp
inc
pop
push
imul
push
ror
test
arpl
data16
les
mov
or
or
xchg
or
lods
xor
(bad)
or
jbe
dec
sahf
cdq
add
mov
test
test
outs
sti
sub
mov
mov
sbb
push
dec
xor
lds
push
sub
mov
or
es
das
mov
fsubr
gs
sbb
stc
xchg
cmp
fs
mov
stos
jecxz
push
mov
retf
mov
lods
xor
or
sub
pop
cdq
jae
repz
(bad)
or
outs
cld
mov
and
mul
scas
daa
call
fiadd
stos
jmp
fiadd
jg
push
or
mov
inc
add
add
jne
(bad)
in
div
jb
push
nop
dec
ret
jp
mov
retf
je
and
bound
(bad)
cmp
jmp
bound
mov
sbb
rol
jnp
xor
jnp
mov
repz
or
packssdw
add
jno
jmp
push
ror
sbb
or
scas
inc
leave
or
jno
sub
jmp
retf
call
out
shr
pop
push
shr
pushf
dec
repnz
or
sbb
or
ret
sub
cs
(bad)
jmp
sub
mov
mov
test
int3
mov
sub
inc
ror
loop
mov
pop
pop
pop
retf
cdq
or
loop
adc
mov
cmp
cmp
in
sbb
mov
inc
xor
pop
call
vmaxpd
adc
jmp
fcomp
int3
inc
and
jae
xchg
xchg
or
pop
dec
pop
or
(bad)
lahf
push
scas
adc
ins
sbb
in
ds
adc
xor
pop
int
mov
rcl
dec
pop
xchg
test
add
pop
mov
pop
xchg
adc
xchg
scas
push
mov
in
mov
mov
adc
mov
ss
ror
movs
test
lahf
out
push
fstp
or
out
pop
test
push
pop
mov
in
cmc
sub
add
mov
xchg
cdq
pop
jmp
fsubr
scas
aam
jno
into
stos
call
add
mov
xor
dec
retfw
int3
cld
cwde
add
iret
adc
add
cmp
int3
cdq
int
pusha
cmp
cmps
push
(bad)
push
mov
adc
and
movs
dec
(bad)
jae
dec
cmps
jg
nop
dec
push
xchg
jle
loop
dec
cmp
(bad)
jecxz
fmul
inc
mov
sbb
enter
clc
leave
stos
cwde
xor
push
push
pop
sahf
push
mov
mov
cmps
cli
cmp
sub
fsubr
mov
xchg
xchg
jno
adc
and
aas
mov
push
inc
test
aam
mov
std
jae
ja
sbb
les
ret
jmp
scas
sub
out
into
mov
xor
jae
nop
jae
lahf
fistp
sub
pop
inc
jo
leave
dec
(bad)
pop
hlt
outs
push
call
xor
pop
addr16
outs
sti
sbb
jo
cs
mov
mov
lea
pop
push
sbb
push
(bad)
mov
ins
jns
or
inc
cli
out
xor
repnz
fst
sub
enter
leave
mov
lock
in
outs
sahf
lods
mov
aas
lods
sbb
cmp
(bad)
pop
movs
mov
xlat
inc
or
int
adc
sbb
jg
jae
add
lea
hlt
dec
mov
sub
iret
jmp
adc
mov
jns
jge
xor
sub
xor
int3
mov
retf
sbb
mov
mov
(bad)
scas
cmp
jge
push
shl
adc
jnp
cmp
jp
stos
lods
cld
xchg
movs
cmp
and
sub
outs
mov
and
cdq
mov
movs
adc
popf
(bad)
mov
dec
adc
xchg
test
xchg
ret
jp
loopne
xchg
sbb
nop
retf
fdiv
es
imul
adc
jno
addr16
mov
push
inc
mov
xlat
les
outs
sbb
xchg
fcomp
imul
xchg
sub
aam
xchg
fist
in
jecxz
xchg
std
into
pop
lods
xchg
shl
cdq
lock
adc
inc
jl
and
and
popa
in
ins
test
(bad)
and
pusha
xchg
sbb
jmp
sub
outs
jl
lods
add
gs
mov
je
loope
fdiv
nop
mov
(bad)
jmp
ds
das
stos
fldcw
jae
sar
cwde
js
fnsave
jno
out
test
xor
sti
call
cmps
inc
push
xor
jmp
jge
lahf
pop
cdq
js
pop
scas
xchg
out
pushf
repz
cmp
sbb
add
cs
dec
aas
mov
fldenv
test
adc
xor
mov
mov
fwait
pop
pop
cdq
cdq
lods
mov
int
mov
cmp
mov
scas
iret
mov
ss
jo
fnstenv
push
ffreep
xchg
jo
mov
xchg
and
add
in
add
adc
sbb
mul
inc
call
dec
push
inc
pop
inc
repnz
movs
cmp
push
shl
inc
push
dec
mov
mov
or
mov
mov
mov
test
add
in
xchg
xchg
dec
dec
jno
pop
cmp
cmp
mov
sbb
cwde
rcr
push
loope
sbb
add
sub
mov
cmc
sete
sub
xchg
dec
inc
(bad)
add
xchg
xor
in
mov
addr16
ret
pop
mov
repnz
test
clc
mov
sub
cmc
pop
push
inc
nop
aam
push
lock
dec
xor
inc
sub
push
das
call
sbb
aad
stos
cmps
adc
movs
in
push
dec
iret
jge
enter
cwde
dec
mov
sbb
sub
or
(bad)
and
retf
cmp
adc
pusha
mov
jno
adc
fneni(8087
repnz
pop
inc
jae
pop
add
pop
or
ds
inc
adc
jne
not
gs
in
sbb
aaa
int3
lods
or
imul
test
lock
and
out
dec
stos
int
push
mov
in
sbb
sti
popa
cdq
mov
not
out
in
xchg
mov
aaa
call
xchg
jns
add
sub
jb
rep
ins
inc
aam
add
push
scas
add
aam
cmp
dec
sbb
popa
scas
push
inc
push
ret
les
jae
loop
sbb
mov
clc
ja
ja
sbb
nop
cwde
cs
adc
dec
repnz
adc
push
sub
loop
adc
ins
imul
movs
ret
shl
xor
mov
mov
mov
pop
mov
add
cmp
push
jmp
cwde
dec
push
mov
jge
std
lahf
cmp
ss
xchg
sub
mov
xor
je
jle
in
jg
lods
call
nop
leave
je
mov
fbld
xor
cmp
adc
ins
inc
xor
stos
and
std
imul
out
add
retf
pop
hlt
jmp
and
out
lods
adc
sbb
add
push
push
in
movs
cmps
je
es
push
mov
xor
push
test
pop
sbb
ret
xor
pushf
mov
arpl
jecxz
arpl
movs
xor
or
xchg
iret
in
fmul
and
sub
xchg
cmc
ins
rcr
mov
out
push
cmp
lock
loope
gs
outs
jecxz
loop
dec
fcomi
and
aam
xor
out
add
imul
dec
sub
or
sbb
mov
mov
in
fmul
inc
and
daa
inc
jb
mov
test
movs
pop
adc
push
out
nop
sbb
push
mov
stc
push
and
push
jmp
aas
aaa
add
or
(bad)
mov
jl
add
xlat
ret
dec
shr
add
aas
(bad)
push
mov
cmp
add
mov
sbb
lods
enter
shl
retf
outs
movs
out
out
cmp
lods
push
xchg
mov
xchg
bound
mov
jg
and
cmps
pusha
int
cmp
fadd
dec
into
mov
push
xchg
push
xor
lahf
sub
neg
push
inc
clc
mov
in
cmp
ins
cmp
(bad)
outs
and
fild
sbb
outs
pop
mov
sbb
mov
mov
es
add
cmps
iret
test
int
aad
pop
xor
sbb
stos
rcl
or
jmp
sub
mov
inc
inc
xchg
call
cmps
add
pop
push
cmp
mov
arpl
iret
lods
sbb
rol
xchg
pushf
(bad)
in
pop
jecxz
sub
dec
cdq
sub
and
jecxz
fbstp
mul
cmp
fstp
test
lods
add
out
ret
jecxz
mov
ja
jle
movs
std
push
xor
ins
xchg
fld
clc
xchg
(bad)
xchg
ds
push
jl
hlt
bound
ficom
push
faddp
iret
fwait
push
push
js
add
xchg
dec
sbb
add
int
test
push
nop
rcl
cmp
push
(bad)
lods
outs
out
xchg
inc
sbb
mov
adc
adc
bound
cmp
and
mov
mov
out
add
or
(bad)
stos
aam
(bad)
out
jmp
pushf
sbb
mov
and
jnp
xor
in
jmp
xor
push
mov
(bad)
ds
and
inc
cmp
loope
pop
mov
loopne
sub
dec
arpl
mov
cli
mov
test
push
iret
outs
cs
mov
pop
sub
mov
lods
lods
sub
mov
pop
pop
push
xor
bound
push
enter
out
mov
mov
scas
mov
jmp
jmp
mov
jmp
pop
lods
or
or
dec
or
xchg
fdivr
fisubr
pop
mov
pop
mov
mov
ret
inc
jnp
push
adc
in
jmp
ret
adc
xchg
jecxz
sub
in
push
sub
adc
jp
int
mov
pop
fwait
xor
sub
repz
adc
mov
jecxz
mov
bound
cmp
add
jae
push
setnp
hlt
or
rcl
ret
out
(bad)
loopne
mov
and
inc
xor
xchg
out
xor
movs
sahf
pop
xor
sbb
jmp
pop
aam
addr16
scas
retf
xchg
ret
mov
pop
pop
imul
jge
mov
test
or
push
mov
cs
pusha
cmp
mov
imul
imul
xchg
fwait
pop
lahf
inc
dec
mov
xchg
out
movs
lea
jl
xchg
mov
xor
lods
mov
test
rcr
int
add
imul
mov
mov
out
loope
fst
frstor
xor
mov
(bad)
push
pop
fcmovnu
arpl
mov
les
nop
dec
mov
xor
outs
dec
(bad)
mov
mov
pop
xchg
stos
loope
or
xchg
neg
jbe
cmp
and
and
or
adc
(bad)
sti
cmp
int3
shl
aaa
lock
push
pop
fwait
adc
jg
xchg
lea
push
and
dec
mov
imul
(bad)
jmp
out
inc
cmp
dec
push
mov
ror
arpl
push
push
cmp
in
or
mov
shr
jle
icebp
mov
daa
test
dec
or
mov
jmp
int
fidiv
mov
xchg
inc
push
push
push
lock
jmp
adc
mov
out
mov
mov
(bad)
dec
aas
das
mov
stos
cmp
xlat
test
fcomp
test
(bad)
out
bswap
fcom
pop
loopne
fldenv
lock
add
out
dec
jno
outs
sub
repz
cmc
dec
mov
lahf
cs
xchg
movs
sub
lods
cwde
inc
mov
and
ins
adc
mov
ins
jl
and
into
mov
sbb
mov
jno
rcl
sub
xchg
or
cld
jb
push
dec
dec
std
mov
mov
pusha
lods
arpl
bound
sub
or
jp
pop
sbb
jno
das
stos
ja
jo
aam
outs
in
mov
sbb
cmp
adc
mov
js
mov
add
iret
aam
js
test
cmp
sbb
test
ret
add
dec
sub
jp
movs
push
push
hlt
xchg
repz
call
pushf
into
mov
xchg
mov
sub
loope
xchg
and
sbb
mov
dec
mov
or
push
xchg
adc
mov
pop
mov
add
xor
jmp
and
xor
js
push
dec
out
or
sub
pop
mov
jno
dec
pop
pop
scas
push
add
aad
sar
or
fdiv
aaa
lahf
push
xchg
arpl
xor
sub
xchg
push
imul
fisub
cmps
in
adc
mov
mov
mov
retf
call
shl
or
call
outs
or
out
daa
sbb
mov
or
es
cld
fcmove
aad
stos
cdq
call
pop
fidiv
mov
pushf
aam
push
and
sub
sub
add
jg
out
lea
inc
or
(bad)
dec
mov
push
mov
test
outs
mov
imul
cmps
mov
sub
pop
cdq
stos
fidiv
movs
loope
(bad)
cmc
mov
(bad)
mov
or
add
push
aad
ds
or
adc
push
sahf
push
inc
(bad)
jne
lods
xchg
mov
and
or
test
cmp
pop
xchg
push
inc
mov
popf
push
iret
aas
xchg
adc
and
clc
adc
jmp
(bad)
pop
hlt
xor
loope
sbb
jae
clc
test
dec
push
ins
dec
fiadd
and
and
mov
scas
repz
mov
jmp
out
dec
loope
jmp
inc
pop
xchg
push
xlat
cmp
push
stos
dec
in
fiadd
sub
xchg
test
imul
add
call
jae
xor
movs
push
retf
jge
push
rcr
push
lds
or
push
adc
cmc
dec
and
push
or
aam
push
fwait
sti
lahf
loop
adc
jmp
dec
nop
ss
aas
mov
sbb
call
inc
push
popa
lods
cli
cmp
push
sbb
fst
call
fs
test
retf
inc
loope
test
out
sub
pop
mov
in
adc
cdq
cmps
out
and
ffreep
idiv
jmp
push
call
sbb
movs
jle
test
sub
and
adc
or
iret
nop
mov
ret
retf
sbb
loope
outs
pop
outs
cs
dec
adc
add
or
(bad)
addr16
fwait
sub
mov
mov
and
ds
cmps
and
mov
int3
(bad)
cmp
loop
addr16
jae
jle
fidiv
pop
jbe
dec
hlt
mov
ret
jno
mov
inc
sbb
mov
adc
add
push
inc
xchg
xor
mov
pop
push
iret
inc
sub
inc
push
xor
fwait
into
lds
pushf
jp
(bad)
xor
adc
inc
lods
sbb
test
xor
(bad)
fdiv
adc
leave
test
and
call
(bad)
movs
popf
cli
jmp
out
adc
xor
fnstsw
mov
cwde
cld
sub
sub
pop
hlt
mov
push
lods
popa
adc
lock
aas
mul
mov
shl
inc
sbb
xchg
lock
rcr
test
mov
pusha
std
dec
or
add
in
pop
and
stc
mov
jnp
(bad)
jecxz
cmc
or
aas
mov
xor
cwde
mov
sbb
push
data16
inc
mov
mov
jno
mov
pop
and
mul
mov
retf
or
(bad)
push
push
inc
imul
and
sti
pushf
push
repz
xchg
sbb
sbb
pop
in
fwait
sar
arpl
push
pop
sbb
mov
aas
xor
ja
shr
js
adc
xor
das
jbe
mov
cmp
push
sbb
repnz
shl
es
sbb
ins
xor
xor
sahf
dec
adc
add
cs
mov
mov
addr16
sar
jmp
push
cli
jg
pop
inc
ds
mov
popa
fwait
loop
rol
aad
cmp
repnz
sahf
fsubrp
adc
scas
dec
and
cdq
push
cmp
stos
pop
test
vmovhps
sub
lds
cdq
scas
push
sbb
sbb
cdq
fstp
mov
mov
pop
mov
in
adc
cmp
mov
and
xchg
ja
pop
jo
mov
and
pop
sbb
pop
les
or
sub
fsub
and
ret
scas
or
fs
sub
pop
dec
data16
(bad)
cli
add
hlt
sub
mov
pop
xchg
cmp
cmps
fwait
jno
ds
cld
ret
add
xchg
leave
sub
das
test
push
mov
push
and
push
aad
dec
sub
sub
mov
out
or
cdq
out
(bad)
mov
adc
push
pop
clc
sbb
je
push
inc
mov
mov
adc
push
inc
mov
xchg
pop
jl
scas
(bad)
idiv
fsub
inc
push
sub
pop
fld
sub
lock
push
sbb
jle
in
std
adc
mov
repnz
inc
enter
pushf
add
mov
test
dec
ret
and
inc
retf
push
jle
cmps
mov
aas
jnp
jmp
and
and
and
imul
jecxz
mov
leave
mov
ret
inc
(bad)
addr16
pop
into
int
call
lock
cmp
cmps
lahf
sub
push
mov
ror
cmp
je
add
mov
jmp
jno
or
push
aad
es
test
(bad)
mov
xor
fbstp
stos
xor
cwde
gs
cmp
cs
jge
les
iret
jge
pop
pop
call
inc
fidivr
test
ret
hlt
out
jo
or
cdq
xchg
sbb
nop
ret
shl
mov
mov
ss
dec
ins
(bad)
and
retf
dec
ds
das
push
aam
loope
cli
ins
sub
and
sub
xor
sbb
inc
and
jne
cmps
rcl
cld
cli
add
inc
cmp
cmp
mov
sahf
fisub
ret
xor
jns
push
and
das
sub
mov
jl
retf
fsubr
jb
outs
and
xor
sbb
sbb
gs
inc
ins
or
sbb
sbb
iret
adc
bnd
pop
sbb
test
out
sti
xchg
mov
xchg
out
push
fcmovb
dec
ins
(bad)
push
cmp
(bad)
nop
pusha
push
sub
dec
scas
adc
xchg
int
cld
movs
in
adc
fdiv
retf
aam
xor
test
push
push
cwde
dec
mov
sub
lea
dec
push
mov
inc
out
pop
xor
les
add
or
adc
enter
repz
fistp
pop
pop
test
sub
and
jo
gs
frstor
pushf
nop
pop
xchg
fdivp
test
push
sub
imul
push
add
leave
jbe
cld
mov
cdq
sti
mov
fild
arpl
in
out
arpl
mov
dec
mov
retf
or
aaa
push
add
pop
js
adc
jne
push
ficomp
sbb
sub
adc
iret
fucom
mov
adc
icebp
sbb
ss
rol
jae
jge
mov
test
loope
bound
dec
sar
dec
jns
popf
aam
in
in
push
mov
fistp
(bad)
mov
xchg
pop
dec
in
and
icebp
xor
mov
rcr
pusha
xlat
push
inc
mov
call
xor
inc
inc
scas
sbb
shl
jl
adc
(bad)
rcr
fwait
test
je
rcl
ins
jl
addr16
mov
pop
sub
mov
(bad)
adc
int
psubb
icebp
ja
cli
inc
aam
neg
mov
jns
xor
add
mov
adc
push
lahf
mov
retf
mov
mov
dec
xor
sbb
or
int
fidiv
xchg
pop
pop
jg
push
stc
xor
dec
aam
xchg
xchg
popa
mov
mov
push
ror
stos
loope
pop
pop
sbb
adc
sub
push
(bad)
mov
and
adc
mul
popf
xor
test
(bad)
out
fcmovne
ficomp
push
stos
lahf
xchg
mov
(bad)
rcl
jge
sbb
mov
cmps
in
dec
pop
mov
std
xor
rcl
jg
movs
loope
cmc
push
out
and
call
cmp
mov
sub
stc
add
sar
jb
and
jo
inc
sbb
pushf
loopne
dec
mov
cld
mov
or
test
adc
push
movs
adc
mov
jge
or
pop
sti
push
jo
popa
pop
dec
(bad)
dec
inc
adc
mov
sbb
push
dec
sbb
adc
mov
pop
mov
ins
sar
mov
mov
push
fdiv
sub
iret
(bad)
retf
lds
xchg
fistp
push
mov
lods
(bad)
clc
pop
ror
in
push
imul
neg
(bad)
cmp
ins
mov
mov
jecxz
rcl
stc
adc
jae
mov
push
sub
loopne
fild
nop
pop
mov
sub
pop
movs
fisub
ins
add
inc
push
pop
fldenv
loope
sbb
mov
addr16
jp
mov
loop
jecxz
or
out
loop
add
jo
es
xchg
sar
sbb
cmps
jle
movs
dec
rol
xor
jne
sbb
sbb
sub
fstp
pop
ins
or
lock
aam
ja
pop
repz
mov
sub
push
dec
or
jl
adc
in
adc
mov
mov
ins
and
and
enter
dec
inc
xchg
mov
dec
scas
mov
sbb
jbe
daa
add
paddd
lock
jmp
retf
bound
mov
retf
pop
iret
adc
arpl
sbb
sub
xor
pop
jg
das
ret
ins
std
in
jp
jmp
cwde
cwde
mov
test
xlat
retf
xchg
sbb
or
lock
pop
push
inc
sbb
mov
inc
jmp
or
cmp
jne
adc
ret
outs
xchg
fs
adc
stc
mov
je
xchg
jbe
je
lds
pop
lods
movs
test
lahf
jp
pop
or
sbb
jge
sub
sti
push
(bad)
sub
dec
es
mov
mov
lahf
push
rcl
test
retf
sub
lahf
cld
or
adc
jecxz
xchg
sti
jge
out
jecxz
out
fsubr
nop
and
push
icebp
mov
lock
pop
pop
cmp
push
dec
dec
dec
jmp
int3
jle
arpl
mov
imul
fxch
ins
xor
cmps
cmp
into
pushf
ror
mov
mov
adc
jecxz
jp
jb
or
cmp
inc
xchg
mov
iret
cmp
cwde
addr16
sub
mov
sub
retf
addr16
dec
mov
adc
adc
push
jns
xor
jp
sub
es
cmp
add
push
nop
fcom
cli
fld
pusha
loope
pop
cmps
pop
inc
xor
mov
leave
jae
cmp
les
std
jp
add
pop
mov
fsubr
sub
or
inc
das
sbb
and
lds
xor
mov
jg
cld
shr
dec
hlt
sub
(bad)
fdivr
frstor
lock
or
sti
jmp
fs
sub
jne
data16
pop
or
daa
jb
ins
dec
push
xchg
xor
repnz
repz
xor
mov
jecxz
stos
add
mov
cmp
mov
test
sub
(bad)
mov
and
movs
sbb
xchg
cmp
adc
push
addr16
jp
sub
dec
push
ss
not
int
ret
pop
cmp
popf
(bad)
sub
pop
or
int
push
(bad)
in
nop
and
jo
mov
imul
inc
sbb
pusha
(bad)
dec
and
sbb
cli
dec
dec
psubsw
mov
hlt
or
jmp
call
jle
sub
fld
push
lea
and
arpl
sbb
retf
iret
stos
daa
inc
stos
xor
cmp
in
sbb
xchg
test
push
out
xchg
out
(bad)
imul
div
pop
jnp
mov
test
mov
cwde
popa
cli
pop
cmp
pop
popa
in
sti
or
sub
push
mov
shl
cmovs
xlat
inc
fs
rol
xchg
add
pop
inc
lea
repnz
mov
(bad)
into
mov
outs
bound
pop
pop
and
out
shl
data16
mov
jl
pop
mov
xchg
sbb
mov
call
inc
add
mov
mov
fbstp
and
jae
out
jae
out
scas
sbb
fld
mov
adc
fwait
int3
(bad)
push
or
out
ds
xchg
ds
in
xor
outs
pop
cld
pop
and
push
mov
cmp
std
sub
xor
in
cli
ss
mov
das
icebp
sbb
add
cmp
and
aaa
scas
pop
in
xor
fcomp
jmp
mov
sbb
outs
das
std
fst
sub
xor
adc
rcl
and
movs
data16
bound
sub
inc
sbb
lahf
icebp
inc
(bad)
xor
lods
lahf
cwde
xlat
shr
add
jnp
pusha
dec
fiadd
mov
dec
mov
cmp
(bad)
shl
sbb
cmp
sbb
inc
cmp
scas
hlt
(bad)
pop
cmc
mov
(bad)
in
push
scas
push
js
mov
and
jns
add
sbb
pop
jo
dec
aad
nop
aad
cmp
mov
fidiv
mov
sub
mov
rol
or
es
inc
cwde
bound
mov
fs
mov
xchg
fs
jp
(bad)
adc
sbb
shl
sbb
xchg
xor
inc
mov
dec
sbb
ins
loope
jmp
mov
mov
lea
(bad)
(bad)
inc
lahf
sub
mov
stos
and
or
mov
mov
sbb
jns
test
es
mov
xchg
ret
xor
pop
inc
and
imul
xchg
or
in
sbb
fld
int3
dec
stc
jb
cmps
(bad)
lods
lods
or
cmp
jne
mov
in
sub
jns
jne
int3
mov
sahf
jns
imul
jbe
(bad)
xchg
(bad)
xor
cmp
sub
aam
mov
int
mov
mov
inc
sub
pop
repz
xor
les
lods
xchg
push
jl
popf
xor
pop
mov
xchg
cwde
dec
pop
inc
xchg
add
arpl
nop
neg
lock
mov
les
lea
mov
mov
inc
jnp
mov
pop
mov
xchg
imul
jnp
aad
sub
sbb
out
pushf
lds
xchg
sbb
movs
in
xor
sti
cmc
retf
jo
pusha
or
xlat
js
loop
pop
std
or
gs
sbb
test
xor
add
fisubr
popf
ret
push
(bad)
pop
int
neg
push
(bad)
push
adc
dec
(bad)
jl
inc
add
xor
mov
(bad)
aad
and
mov
dec
fwait
and
push
pop
jmp
repz
mov
imul
fs
sbb
sbb
test
cmp
jbe
dec
in
cs
adc
sahf
(bad)
repnz
inc
popa
mov
xchg
or
cmc
ds
jo
repnz
std
adc
cmc
scas
dec
add
(bad)
(bad)
div
pop
pop
jmp
mov
ret
xchg
cmp
and
daa
cmps
sub
scas
ror
cwde
loopne
aaa
xchg
cs
call
scas
addr16
xchg
(bad)
pop
sbb
lock
jmp
imul
adc
scas
ret
dec
dec
in
lods
pop
je
dec
scas
rcr
mov
outs
(bad)
mov
inc
adc
lds
pop
sub
cld
mov
cmp
mov
sub
loope
cmp
cs
adc
cmps
push
std
add
lea
xor
mov
lods
adc
and
jmp
inc
daa
imul
dec
push
or
mov
icebp
(bad)
test
adc
and
jg
sbb
xor
jnp
jnp
lods
ins
push
or
ret
lods
sti
mov
aas
jne
inc
sub
movs
push
inc
or
idiv
mov
pop
add
pop
sbb
xchg
dec
repnz
jbe
shr
pop
loopne
mov
repnz
(bad)
mov
fwait
cmc
test
push
lods
mov
adc
inc
push
xor
outs
test
pop
cmp
mov
loope
sbb
jnp
leave
loop
add
mov
xor
jne
pop
xchg
add
(bad)
(bad)
in
push
cmp
gs
movs
not
sar
jle
xchg
or
add
stc
sbb
fwait
adc
adc
mov
enter
adc
(bad)
or
sti
fdivr
cmp
hlt
loope
ret
dec
shr
pop
pop
jae
out
dec
dec
sbb
push
std
call
xor
call
aad
xchg
stos
cmps
jle
mov
out
adc
xor
popa
enterw
mov
dec
add
pushf
enter
out
(bad)
or
push
adc
inc
push
das
jecxz
mov
test
sub
std
aam
push
out
outs
jle
jae
pop
cmp
push
mov
test
rcl
jmp
or
jecxz
sbb
push
ins
adc
mov
cs
ret
mov
or
adc
out
mov
push
push
and
mov
call
add
in
add
jl
hlt
push
xor
int3
pop
pop
stc
cwde
and
inc
or
mov
lea
jbe
outs
scas
pushf
or
xor
add
cmps
jb
fcmovne
(bad)
pop
fbstp
imul
inc
pop
xchg
adc
or
cwde
xor
or
repz
sbb
cld
fwait
xchg
in
popf
sbb
cmc
gs
cmp
xchg
lock
mov
mov
nop
neg
mov
push
out
inc
mov
fwait
movs
mov
mov
ds
fistp
jae
popf
imul
mov
icebp
dec
outs
cmp
lods
dec
pop
push
inc
(bad)
jmp
sbb
xor
mov
adc
pop
setae
shl
mov
and
enter
pop
inc
rcl
pop
daa
jl
dec
fcomp
mov
xor
pop
mov
jnp
cmc
loope
add
and
mov
repnz
inc
lea
mov
or
jne
adc
adc
pop
fist
in
push
and
jnp
(bad)
int3
outs
jne
sbb
inc
mov
mov
push
sti
les
(bad)
ret
daa
inc
lock
mov
loop
adc
or
stos
inc
ffree
mov
cwde
cmp
xlat
mov
rol
jecxz
xchg
pop
sub
ret
popa
push
cdq
lods
cmp
sbb
lock
push
and
lods
aas
enter
lds
or
mov
call
imul
xor
pop
inc
jmp
stos
std
or
(bad)
cli
in
mul
mov
mov
pop
shr
sahf
push
(bad)
mov
push
inc
lods
sub
mov
(bad)
sbb
test
add
mov
and
and
lock
xor
ret
arpl
outs
shl
int3
mov
fiadd
and
xor
in
adc
sahf
scas
adc
ret
jmp
mov
xchg
mov
stos
dec
inc
inc
fadd
cmp
dec
cmp
mov
sub
dec
mov
iret
xchg
mov
pop
jb
or
loop
and
xchg
sub
adc
gs
pop
or
mov
mov
or
inc
outs
xchg
push
fstp
mov
push
popa
leave
bound
(bad)
cmp
daa
lock
jne
into
sub
mov
pop
xor
and
mov
pop
inc
mov
pop
pop
into
push
adc
mov
shl
aam
rol
aad
jl
rcr
xor
pop
retf
pop
mov
mov
inc
or
add
outs
sbb
mov
mov
mov
(bad)
and
(bad)
mov
jb
jmp
repz
mov
scas
mov
mov
xor
ins
dec
ins
xchg
out
lods
rol
add
cld
mov
clc
repnz
ss
(bad)
leave
sbb
data16
xchg
add
cmc
(bad)
xchg
lock
sub
dec
fld
lods
iret
cld
cmp
add
cmp
adc
(bad)
sbb
call
mov
stc
cmp
jmp
loop
add
ret
mov
std
pop
fild
(bad)
dec
shr
test
and
xor
or
xor
cmc
sahf
hlt
mov
push
inc
fistp
out
mov
mov
out
test
and
adc
mov
(bad)
pavgb
lds
das
dec
(bad)
(bad)
and
popa
(bad)
push
dec
xlat
push
and
das
outs
dec
add
mov
push
mov
xchg
inc
lods
mov
mov
sahf
sub
pop
and
jle
repz
dec
inc
(bad)
push
pop
pop
jnp
or
ins
push
cs
in
outs
add
pop
fimul
sub
cli
add
daa
sub
xchg
sub
inc
mov
and
jle
or
sub
imul
cmp
sbb
dec
jge
repz
lods
push
(bad)
(bad)
mov
fidivr
(bad)
mov
push
adc
sbb
cmp
or
push
jae
xchg
cli
cdq
inc
mov
jo
loope
sbb
cmps
mov
mov
add
fs
cli
stos
or
sub
sar
push
add
aad
jmp
mov
inc
aam
mov
shl
enter
push
adc
pop
mov
movs
enter
cmp
int
ror
loop
shl
cmp
pushf
call
jae
add
and
sbb
in
jecxz
jp
sbb
jp
clc
fsubr
ds
int
ficomp
cmps
push
sahf
xchg
or
mul
hlt
dec
dec
xchg
sbb
jno
cmp
push
scas
xor
jne
out
mov
fnsave
ins
into
xor
mov
mov
test
jle
xlat
jmp
or
dec
(bad)
ja
mov
cmp
loop
cmp
cmc
cs
mov
loope
mov
mov
pop
pop
ja
jb
repnz
out
adc
pop
adc
scas
stos
lock
xchg
cmp
lahf
adc
jmp
ret
cmp
xor
in
ja
aam
repz
push
mov
shl
outs
sbb
inc
aam
adc
ret
repz
mov
sbb
mov
xor
loope
cmp
in
rol
icebp
sbb
add
or
imul
dec
cmc
test
push
in
daa
mov
dec
fucomip
or
xor
xchg
jle
test
aad
aaa
jae
test
movs
test
imul
in
shr
int
cmp
jno
inc
(bad)
fistp
and
aam
outs
mov
es
fcom
aas
adc
(bad)
mov
cmp
or
push
xor
sbb
cld
pop
jmp
sbb
in
nop
dec
jg
add
adc
adc
(bad)
dec
sbb
pop
dec
out
(bad)
mov
adc
dec
adc
pusha
cmp
pop
test
movs
jo
or
test
cld
sbb
xor
test
xor
xor
aaa
mov
adc
scas
popf
aam
inc
(bad)
sbb
pop
je
call
or
adc
into
ins
fnstcw
outs
neg
push
mov
sub
mov
sbb
into
popf
aaa
sar
push
and
adc
leave
(bad)
in
loopne
xchg
addr16
push
jg
mov
ret
mov
sub
mov
fwait
sbb
mov
jae
mov
pop
cli
push
jmp
ss
fwait
xor
xor
ins
and
cdq
lock
push
jle
adc
aaa
lds
adc
xor
jnp
aad
add
jo
xchg
and
out
fdiv
fbld
repnz
sti
fadd
in
(bad)
cld
xor
pop
aam
fld
mov
or
sbb
jle
shl
mov
int
push
xchg
sub
mov
dec
mov
leave
aam
mov
(bad)
and
test
or
lods
xchg
mov
inc
loope
push
cwde
adc
inc
cmp
(bad)
gs
mov
test
pop
fdivr
fdiv
rol
dec
(bad)
push
mov
ficom
lds
outs
imul
jns
or
movs
(bad)
jle
push
dec
or
cmp
jp
data16
sbb
cli
enter
shr
out
(bad)
jne
jmp
std
mov
mov
js
mov
sub
add
mov
xchg
adc
movs
pop
ss
xor
scas
xchg
rol
jmp
out
outs
stos
jns
mov
push
jns
test
mov
repz
inc
and
xchg
push
daa
ins
sbb
into
pop
ins
xor
cmc
cmp
pop
mov
(bad)
vpminub
add
pushf
std
div
xchg
or
nop
xchg
dec
(bad)
cmps
xchg
in
mov
in
push
cmp
adc
out
(bad)
sub
pop
ficom
aaa
pop
gs
add
cmp
xor
jo
stc
push
cli
rol
out
not
fsubr
adc
outs
repnz
test
outs
stos
sub
int3
shl
mov
pop
and
into
call
and
push
ins
mov
xchg
xchg
add
push
xor
add
xor
sub
pop
dec
dec
sbb
rcl
mov
pop
outs
xor
sbb
inc
das
jmp
jne
out
mov
call
popf
jbe
fimul
fsubr
add
jns
add
dec
dec
or
sbb
mov
stos
call
push
xchg
or
fldenv
aaa
and
mov
dec
retf
sub
adc
out
rcl
cs
mov
mov
daa
std
ret
ror
mul
repz
lahf
xor
fcmove
cs
xor
pusha
xor
pusha
jmp
test
pop
mov
stos
xlat
fs
push
mov
fiadd
sbb
push
mov
or
sahf
mov
fmul
(bad)
out
neg
rcl
mov
enter
mov
mov
jp
push
imul
movs
aad
pop
jno
inc
mov
int
dec
ret
and
clc
cmps
iret
ret
pop
shl
pop
adc
pop
xor
sub
nop
shr
fdiv
fnstenv
scas
inc
cmp
outs
pcmpeqd
loopne
lds
xchg
shl
cs
and
bound
pop
fwait
mov
xchg
or
pop
call
xchg
in
popa
adc
mov
xor
pop
in
dec
mov
cld
pop
ror
xchg
repz
fs
dec
loop
jo
xchg
clc
mov
mov
pop
mov
popa
sub
mov
add
retf
adc
adc
movs
int3
or
mov
cs
xchg
jo
mov
push
push
sbb
and
dec
adc
jbe
jne
mov
cmp
outs
jno
pop
sahf
jmp
rcr
xlat
mov
or
and
test
lahf
mov
bound
cmc
(bad)
mov
test
xchg
daa
xor
mov
and
add
(bad)
js
into
and
xor
cdq
fwait
cmp
stos
cwde
mov
mov
into
cmp
dec
mov
ror
add
add
mov
sahf
stos
pop
fwait
cmp
arpl
retf
push
iret
and
dec
xchg
sbb
rcr
arpl
inc
in
inc
jbe
out
inc
mov
pop
jl
push
xor
dec
ds
xchg
sub
jbe
out
inc
pop
int
add
nop
push
stos
mov
fadd
enter
mov
mov
sahf
xor
out
adc
addr16
je
in
adc
or
out
pop
retf
retf
cmp
add
sub
hlt
scas
xor
xor
jbe
pop
and
sub
cli
data16
js
pop
stc
xor
add
out
pop
pop
sbb
(bad)
dec
mov
(bad)
bound
bound
lods
lods
inc
adc
mov
call
sub
pop
jno
and
jbe
jmp
cmps
xor
mov
ins
xor
dec
stc
lods
dec
add
sbb
xor
inc
jbe
sbb
loopne
jmp
sub
shl
or
or
adc
and
lock
jo
rcl
(bad)
shl
xor
iret
add
jae
push
push
push
enter
jne
call
xor
clc
mov
mov
idiv
pop
repnz
jmp
in
push
cli
xchg
ror
ror
js
js
dec
pop
test
test
test
inc
pushf
test
out
aas
test
fcmovnbe
(bad)
mov
inc
and
dec
ficom
jno
xchg
jae
fldenv
stos
pop
ja
push
sbb
adc
jmp
sub
les
and
sub
or
imul
adc
movs
mov
lods
repnz
sbb
adc
jmp
jae
test
leave
jle
call
mov
add
pop
scas
mov
mov
adc
or
idiv
inc
xchg
es
and
nop
stc
add
push
sahf
sar
dec
arpl
mov
ins
aam
rcr
inc
repnz
sbb
jo
add
aam
mov
test
ret
xor
rol
push
fidivr
icebp
mov
test
xchg
push
xchg
(bad)
jnp
mov
pop
push
lods
out
mov
leave
icebp
xchg
dec
cs
sub
mov
add
cmp
sti
add
sar
mov
iret
mov
mov
dec
cdq
mov
outs
jg
mov
daa
call
xor
adc
es
push
xchg
jnp
pushf
stc
test
out
adc
bound
lods
ins
jp
pop
fwait
clc
sbb
cwde
xchg
jge
popf
sub
fisttp
sub
mov
jl
test
movs
sub
adc
(bad)
add
sahf
adc
xchg
xor
je
adc
pop
xchg
(bad)
movs
scas
prefetch
dec
sub
aam
gs
xor
pusha
call
mov
add
stos
cwde
test
pusha
leave
shl
out
jb
mov
adc
lds
jg
and
mov
je
dec
js
mov
fmul
call
test
cmp
xor
xlat
dec
(bad)
sti
inc
pop
cmps
out
adc
out
stc
shl
loope
lds
aaa
cmps
aam
add
add
inc
add
aad
or
xor
imul
sub
mov
js
adc
fist
cmp
jmp
sub
call
cli
movs
test
aad
push
(bad)
xor
inc
sti
out
cmp
push
test
ins
fwait
imul
data16
dec
mov
mov
mov
push
pop
add
repnz
bound
xor
frstor
ret
sbb
inc
fisttp
ror
popf
idiv
sub
adc
retf
xchg
lds
lahf
push
ja
popa
icebp
popf
mov
xchg
cmc
inc
lahf
imul
inc
sub
fistp
imul
sbb
push
imul
cwde
das
in
mov
jne
pop
call
fist
lods
bound
mov
fimul
or
std
stos
push
retf
cmp
aaa
jmp
add
ss
in
es
call
jecxz
ins
mov
jmp
cmp
mov
jle
(bad)
xor
jns
aaa
mov
sub
jecxz
sbb
mov
push
and
fcomi
ins
lahf
outs
and
pop
sub
mov
cdq
call
cs
loope
cmp
(bad)
or
pop
int3
jbe
cmps
push
jecxz
(bad)
loope
and
push
cld
aad
ror
dec
cld
dec
jmp
dec
dec
inc
cmp
xchg
pop
mov
add
pop
add
jo
push
(bad)
xchg
seto
add
inc
inc
or
push
xchg
dec
push
adc
push
dec
out
xchg
cli
mov
cmc
mov
jecxz
in
cwde
jecxz
popf
(bad)
jmp
(bad)
movs
retf
push
dec
add
mov
inc
stc
cmp
mov
data16
fstp
xchg
int3
pop
sbb
(bad)
jmp
dec
fwait
sbb
xor
or
sbb
mov
dec
outs
or
mov
in
xchg
pop
mov
rcr
cld
inc
and
and
adc
mov
push
jno
mov
sub
adc
adc
sub
jmp
cmc
mov
and
pop
idiv
ss
sub
in
aas
pop
xchg
outs
or
inc
(bad)
xchg
data16
bound
js
rcr
and
(bad)
fsubp
adc
push
dec
mov
stc
pop
sub
or
and
mov
sub
jle
fwait
loop
es
inc
sub
nop
push
dec
int
lahf
cs
lea
adc
imul
sub
retf
mov
lds
outs
ja
popf
sti
lock
repz
mov
dec
fistp
jo
outs
pop
xchg
fs
es
pop
dec
into
in
lods
cmp
dec
(bad)
arpl
cld
mov
xchg
cmp
fs
push
js
rol
mov
pusha
pushf
pop
sub
or
ficomp
add
stos
in
pop
push
jmp
mul
jmp
mov
add
aad
push
ja
inc
inc
aam
mov
retf
in
cli
adc
test
mov
call
pusha
cmp
or
push
push
std
cmps
sbb
pop
cli
add
adc
(bad)
test
adc
outs
retf
cld
jno
loopne
and
inc
dec
xchg
test
out
mov
aad
add
pop
sub
cmps
loope
xchg
jge
stos
mov
mov
test
push
pop
dec
jns
sub
push
imul
lea
mov
pop
inc
xchg
mov
loop
mov
add
ins
test
rol
cmp
int3
xchg
mov
in
inc
mov
iret
pop
xchg
ret
add
mov
mov
dec
jne
and
or
xor
add
pop
push
mov
or
push
bound
jmp
imul
or
push
inc
mov
mov
and
repz
cld
lahf
imul
sbb
mov
jg
jns
retf
das
jl
xchg
jae
sub
ror
scas
hlt
int3
fs
inc
pop
push
sahf
gs
jg
outs
into
cmp
sub
add
lahf
mov
mov
(bad)
jle
cwde
dec
cmp
cmp
in
adc
hlt
jns
and
jnp
add
(bad)
sahf
cmp
inc
ja
sbb
cmp
push
mov
repnz
mov
cs
imul
jecxz
mov
or
jp
push
xor
jle
mov
push
dec
ds
xor
dec
xchg
or
test
mov
pop
test
inc
dec
inc
out
push
ins
add
call
jne
add
jmp
mov
into
sub
cwde
stos
adc
cmp
add
pushf
xor
mov
adc
sub
dec
stos
in
mov
lahf
ins
cmp
out
fmul
xlat
push
fcmovb
movs
(bad)
dec
add
mov
packssdw
xchg
push
cmp
mov
mov
out
sub
sbb
and
data16
gs
shr
mov
pop
mov
push
inc
mov
test
imul
mov
sti
cmp
hlt
outs
shr
pop
mov
imul
or
xchg
pop
pop
ficom
nop
jo
adc
dec
inc
cwde
pop
sbb
and
shl
add
adc
mov
cli
mov
je
xchg
cli
ss
cmp
adc
mov
xchg
pop
pushf
mov
push
ins
jecxz
and
push
adc
lds
add
rcr
rcr
bound
(bad)
lahf
pop
mov
retf
(bad)
mov
cmp
jecxz
inc
lea
mov
mov
push
dec
dec
xchg
mov
cmp
movs
lock
ja
bound
jmp
dec
aas
jbe
nop
sub
into
mov
mov
push
inc
jae
ins
pop
scas
add
jge
xlat
push
jnp
jmp
imul
mov
movs
xchg
fisttp
std
push
pop
and
rol
rol
ins
xor
lds
cld
xor
(bad)
out
jmp
mov
sahf
pop
pop
pop
pop
xchg
xchg
dec
int3
jbe
push
xchg
sbb
mov
sub
adc
xchg
push
pop
xor
bound
je
int3
stos
xchg
mov
mov
fsub
(bad)
fcomp
mov
fisttp
sub
inc
imul
popf
mov
es
in
ins
lock
sub
and
cmp
cmps
dec
pop
or
arpl
jne
gs
int3
add
adc
(bad)
push
xor
jb
lock
cld
cmp
mov
push
mov
mov
lock
in
pusha
inc
pushf
sar
lock
cdq
data16
aam
xchg
adc
loope
ret
jmp
movs
add
add
sbb
jae
push
pop
into
xchg
mov
int3
mov
mov
loopne
jecxz
in
stos
or
adc
lea
jns
and
mov
add
in
jmp
stos
mov
add
xor
push
aam
push
call
cmp
push
ret
xor
cmp
aaa
push
push
mov
mov
mov
pop
mov
pusha
fld
or
jge
cmps
(bad)
or
movs
fisubr
enter
cmp
(bad)
cmp
cs
jle
push
sbb
ror
and
jmp
bound
push
(bad)
test
sbb
popw
iret
xor
pop
push
loop
xchg
adc
enter
pop
jg
fs
adc
sub
pop
jmp
pusha
inc
inc
pop
mov
scas
cmp
mov
pop
add
add
ror
mov
stc
(bad)
fdivrp
adc
add
outs
jo
enter
retf
pop
(bad)
mov
dec
dec
imul
mov
jg
xor
push
mov
mov
adc
cs
das
out
enter
dec
popf
fsub
jmp
jmp
std
xchg
dec
inc
ds
push
jbe
adc
(bad)
dec
or
add
dec
mov
mov
xor
push
lods
sub
enter
pop
mov
sti
loope
outs
nop
push
adc
mov
ja
(bad)
jl
test
xor
(bad)
cmps
mov
cmps
idiv
cvtpi2pd
push
xor
cmp
dec
mov
leave
cmp
inc
std
(bad)
xchg
mov
and
scas
out
mov
cmps
into
dec
ja
pop
loope
out
rcr
inc
dec
in
test
in
or
mov
ins
arpl
jmp
push
lahf
pop
mov
fidivr
jg
ds
mov
xchg
mov
dec
xchg
add
pop
mov
ss
adc
mov
(bad)
dec
adc
sub
dec
mov
or
pushf
out
(bad)
iret
js
and
jg
pop
push
xor
mov
dec
cmp
ds
cmps
mov
push
idiv
into
daa
dec
dec
addr16
inc
cmp
loope
push
stos
ret
inc
xor
stos
and
hlt
loope
stc
adc
icebp
mov
neg
xchg
lds
mov
test
jl
clts
ds
js
jns
and
repnz
stos
shl
retf
inc
cmp
out
js
mov
fistp
fst
mov
jle
outs
shr
dec
pop
clc
test
ins
inc
cmp
sahf
cmp
inc
(bad)
aam
mov
iret
mov
xchg
and
adc
adc
popf
cmc
idiv
pop
test
mov
dec
shl
sub
ret
or
xor
pop
jg
push
xchg
push
idiv
dec
sahf
and
xchg
mov
sbb
xchg
mov
jbe
sbb
inc
nop
and
call
jbe
cdq
mov
push
pop
cs
jmp
leave
imul
pop
push
xchg
out
mov
xchg
hlt
in
mov
dec
push
mov
pushf
ss
retf
lods
xor
mov
push
pop
and
xchg
and
xor
jl
loop
dec
sti
or
loope
jl
out
jecxz
mov
sbb
and
je
push
hlt
xchg
in
retf
dec
in
sub
repz
and
inc
ror
sbb
fld
sub
and
loope
imul
es
jbe
fistp
jmp
sbb
jnp
clc
hlt
stc
test
sti
or
and
pop
ret
(bad)
daa
pop
pop
es
cmp
push
push
jnp
std
rol
in
fisub
in
les
cld
out
inc
ins
xchg
mov
adc
sub
movs
fdivr
cld
pop
cs
mov
jmp
retf
imul
retf
out
jl
ds
shl
call
sahf
cmps
fisttp
out
sbb
and
push
nop
das
mov
test
jg
ret
jmp
inc
and
push
stos
fs
int3
std
pop
out
jae
pop
sub
sub
sub
(bad)
xor
jl
push
xor
pop
lods
stc
push
xchg
sbb
sbb
jl
iret
fsubr
push
stos
les
jmp
xchg
xchg
xchg
les
mov
xor
adc
test
aaa
mov
cmc
mov
not
and
inc
icebp
jns
inc
mov
pop
daa
dec
push
test
jp
je
(bad)
jmp
ret
dec
xchg
rcr
stc
je
pop
leave
sbb
jne
jg
mov
dec
faddp
mov
outs
addr16
push
in
adc
(bad)
jae
jle
(bad)
dec
inc
mov
inc
ret
or
jp
test
cdq
movs
mov
dec
mov
xor
and
adc
and
xchg
jge
(bad)
shl
or
xchg
dec
and
imul
lds
sbb
pop
mov
clc
mov
pop
sbb
outs
aad
and
xchg
(bad)
int3
mov
and
pop
xor
push
sbb
mov
mov
das
scas
int3
into
fwait
movs
mov
adc
lahf
jb
push
out
daa
loop
ds
and
fist
adc
fs
ins
dec
fwait
add
(bad)
dec
rep
inc
sbb
sbb
inc
inc
shl
call
mov
pop
leave
in
fucomp
or
mov
popf
fiadd
fnstenv
mov
pop
inc
mov
cmp
jg
enter
mov
ja
ss
and
inc
daa
sub
inc
aas
or
cli
sub
jg
mov
inc
data16
xor
dec
fidiv
dec
in
adc
or
test
in
jno
inc
pop
cmp
in
sbb
jb
xor
sub
sbb
arpl
sbb
xchg
popa
call
mul
pushf
push
xchg
jge
aas
and
cs
stos
push
mov
jbe
stc
or
stos
and
jecxz
jns
dec
dec
pop
call
cli
sbb
ins
aaa
jecxz
movs
dec
rsm
mov
addr16
and
fldcw
cmp
int
and
gs
popa
mov
fwait
popf
loopne
retf
into
lds
lods
adc
popa
mov
and
adc
ret
cmp
rol
(bad)
dec
xchg
mov
jmp
(bad)
imul
into
ror
(bad)
fs
hlt
movs
xchg
xchg
aam
js
imul
gs
and
pushf
into
push
iret
xchg
mov
jmp
jns
rcl
cmps
cdq
adc
xchg
mov
or
(bad)
retf
ds
loopne
aam
les
clc
and
in
and
stc
mov
inc
rol
mov
jl
jecxz
dec
push
cli
sub
imul
fwait
bound
fcmovb
xchg
inc
adc
stc
sbb
pop
imul
push
outs
xchg
lods
dec
jnp
call
imul
or
jnp
pop
xchg
sbb
add
lahf
push
push
cwde
lods
xchg
adc
daa
mov
jmp
adc
ins
mov
cdq
mov
push
rcr
push
sub
jge
inc
sub
sub
lods
fidivr
pop
jecxz
das
jbe
xchg
inc
clc
rol
jmp
lock
aad
(bad)
and
xor
fisttp
aas
(bad)
push
jmp
sub
push
fcomp
add
scas
rcr
stos
jg
ficom
or
xor
cmp
rcl
jmp
movs
adc
inc
or
frstor
push
sti
cmps
(bad)
popa
test
jbe
mov
outs
jecxz
mov
mov
lahf
cmp
loop
or
push
rcl
push
and
mov
mov
sbb
das
js
fwait
les
and
dec
push
add
bound
std
ds
mov
mov
rcr
jb
adc
push
pop
jl
int
lock
mov
outs
pop
rol
jb
jno
jbe
sub
jmp
(bad)
je
lods
mov
jo
jle
mov
shl
push
idiv
inc
cdq
pop
ret
mov
push
mov
loop
jo
pop
cld
hlt
scas
into
adc
add
jl
stos
cmp
push
pop
mov
jbe
inc
mov
fst
int3
jo
sub
mov
outs
xor
mov
push
or
push
(bad)
jl
int
pop
xor
call
adc
jmp
add
mov
aas
popf
mov
sbb
mov
(bad)
jle
loope
lahf
ror
and
idiv
out
cmc
mov
rol
(bad)
mov
sahf
sub
push
cmps
imul
movs
mov
inc
dec
mov
mov
pop
fwait
pop
xchg
sahf
test
arpl
sub
mov
nop
(bad)
xlat
and
repnz
repnz
jmp
lds
movs
into
cmp
jb
mov
clc
push
shr
into
jle
cmp
ins
movs
sub
iret
out
sbb
xor
out
sbb
mov
mov
mov
xor
xor
push
popa
in
sti
add
(bad)
mov
icebp
pop
dec
mov
xchg
stc
idiv
in
adc
aad
push
shl
push
push
into
push
cmp
mov
jg
pop
dec
in
sub
lds
jge
in
movs
inc
shr
cld
push
jnp
ja
xchg
lea
push
and
inc
push
cmp
sub
xchg
mov
sbb
mov
shr
mov
(bad)
aaa
ins
add
sbb
add
inc
out
jmp
cmp
mul
cmps
xor
icebp
in
(bad)
in
data16
push
mov
xor
in
or
mov
mov
mov
mov
add
cmc
retf
pop
lea
jg
xor
test
sar
call
ret
mov
arpl
in
jecxz
sub
jb
jmp
loopne
ds
xor
je
je
add
mov
lock
push
sbb
mov
(bad)
outs
stc
sbb
cmp
cmc
sbb
dec
mov
sbb
xor
out
cmp
fist
cdq
push
inc
sub
(bad)
sub
call
lahf
fild
adc
or
sub
mov
ret
lods
mov
mov
movs
add
sbb
test
jo
inc
outs
cmc
movs
xor
dec
mov
cli
and
mov
sbb
aas
ficom
pop
inc
jno
sar
mov
shl
push
jne
or
jp
or
adc
sub
scas
js
mov
inc
outs
icebp
shr
call
mov
repnz
jmp
dec
jg
push
sub
aaa
jnp
gs
movs
pop
cli
jb
sbb
add
out
push
push
jb
dec
push
mov
xlat
pop
push
mov
push
add
push
out
mov
outs
stc
test
stos
dec
in
add
(bad)
and
sbb
das
in
dec
cmps
push
loop
ret
cdq
clc
dec
mov
mov
fnstcw
sub
pop
je
out
scas
(bad)
sub
push
sub
je
sbb
lock
adc
mov
jle
add
or
pushf
enter
sbb
cmp
cdq
out
dec
daa
pop
ds
(bad)
jle
mov
mov
pusha
xor
jp
inc
mov
lods
xrelease
mov
int3
mov
pop
cwde
test
cmc
int
dec
mov
imul
fimul
sub
mov
dec
in
mov
dec
icebp
dec
mov
in
adc
add
mov
(bad)
ror
lea
pop
nop
test
sbb
hlt
data16
out
(bad)
dec
cwde
dec
ja
cmp
fs
push
xchg
xchg
dec
fwait
ret
pop
pop
xchg
div
push
xor
in
add
and
mov
pop
push
sub
fnstsw
dec
jmp
jbe
dec
push
and
jmp
pmuludq
js
push
xchg
dec
push
mov
add
out
inc
enter
cmps
adc
xchg
sbb
pop
cmp
jbe
fcos
dec
sbb
in
and
arpl
cmp
cmp
aam
repnz
mov
outs
test
hlt
xchg
cmp
sbb
movs
pop
pop
arpl
add
adc
or
sbb
dec
jmp
cmps
inc
jae
stos
and
enter
adc
jnp
inc
rcr
fwait
inc
cmps
cmps
push
cmp
repnz
sbb
push
(bad)
call
sbb
xor
in
stos
mov
pop
jmp
xor
sti
mov
add
leave
push
sbb
mov
dec
ret
mov
(bad)
(bad)
aam
movs
int
xor
push
fnstsw
mov
xchg
or
cmp
int3
pop
jns
jno
stos
add
loopne
mov
xor
ins
push
mov
and
cmps
dec
iret
push
cld
dec
sbb
cmp
push
dec
mov
cmp
fidivr
jge
lods
pop
ins
(bad)
jl
inc
xor
(bad)
jmp
jb
test
movs
scas
bound
ficom
aaa
sub
inc
and
out
jne
mov
pop
hlt
mov
jle
pop
sbb
(bad)
repnz
clc
mov
leave
xor
mov
xor
push
imul
shr
loopne
sbb
shr
icebp
mov
(bad)
rcl
jle
outs
mov
and
cmp
jg
jne
call
in
das
repnz
cmc
loop
ret
cmp
mov
cmp
int3
push
jnp
sbb
pusha
test
inc
xor
inc
popa
push
inc
and
jecxz
adc
fwait
dec
dec
mov
push
adc
imul
and
mov
les
shl
stos
inc
imul
or
push
test
sar
push
aam
cmp
fs
sub
sar
dec
mov
fiadd
dec
inc
adc
mov
mov
mov
imul
sub
xchg
jmp
xor
daa
in
ret
jnp
xchg
cmp
inc
sbb
daa
inc
pop
loopne
jl
fstp
cmp
cmp
into
pop
mov
movs
and
jne
dec
gs
das
xchg
xor
xchg
(bad)
bound
imul
popf
cmp
jb
mov
sbb
jge
(bad)
imul
std
rol
int3
iret
xchg
dec
lock
jle
or
icebp
adc
push
sti
inc
adc
or
es
pop
adc
adc
gs
dec
data16
out
dec
neg
inc
pop
inc
add
mov
loop
faddp
sub
cli
nop
stc
ret
or
pop
cmp
adc
xchg
(bad)
adc
arpl
lock
enter
arpl
lods
retf
xor
(bad)
pop
mov
imul
mov
xchg
adc
sub
shr
mov
out
add
retf
(bad)
mov
int
fs
pop
jmp
daa
mov
fisttp
in
clc
in
xor
jmp
sub
out
sub
xlat
stc
into
mov
pop
fwait
cmp
cmps
out
ss
sub
sub
leave
dec
aaa
pop
cld
dec
call
or
sub
frstor
or
xchg
jle
mov
xchg
test
ret
add
fadd
pop
pushf
imul
jmp
nop
jnp
aad
lods
popf
mov
pop
inc
mov
adc
pop
or
sub
push
scas
cmp
cmp
pop
daa
inc
dec
popf
mov
xor
jecxz
loope
mul
mov
sub
sbb
(bad)
sub
add
push
push
adc
sahf
add
cli
mov
and
pushf
mov
rol
out
call
mov
and
add
xor
fiadd
mov
pop
cmc
(bad)
in
sbb
jle
bound
icebp
ret
fnstenv
jp
xor
daa
aam
jp
shl
js
add
cs
fchs
add
pop
mov
clc
rol
movs
nop
call
sbb
fs
xchg
test
imul
cdq
mov
xchg
ins
neg
cmc
dec
push
pushf
xchg
sbb
adc
mov
sbb
pop
shr
jae
adc
neg
add
cld
push
mov
icebp
imul
bound
test
sti
loope
leave
shl
xchg
mov
in
arpl
out
sub
mov
pop
or
push
push
sub
fwait
jmp
cmps
js
push
dec
and
xchg
nop
jnp
stos
mov
out
pop
jl
das
xchg
mov
inc
adc
mov
cdq
scas
jecxz
mov
lods
dec
aas
shr
idiv
outs
jne
cmp
dec
movs
xchg
shl
stos
addr16
inc
in
or
ret
cmp
inc
sar
sbb
jle
pop
imul
jno
mov
inc
xchg
iret
cmps
pop
dec
sbb
xchg
les
es
cld
and
fsubp
and
add
loopne
mov
fadd
and
jne
pop
cmc
xchg
inc
sub
ret
xchg
pop
and
push
xchg
push
adc
bnd
pop
imul
cs
test
lahf
mov
jne
mov
das
rcr
push
(bad)
mov
(bad)
jmp
xchg
(bad)
add
pushf
fdivrp
repnz
shl
sub
pop
cmp
bound
dec
add
push
test
(bad)
mov
aaa
xchg
xchg
ss
mov
mov
ins
imul
(bad)
loopne
fdiv
dec
(bad)
ins
cs
xor
(bad)
or
pop
cmp
clc
mov
(bad)
(bad)
mov
inc
inc
addr16
mov
test
stos
xchg
mov
jno
inc
leave
jns
jno
pop
dec
sbb
mov
int3
adc
out
xlat
repz
mov
arpl
fwait
scas
pop
xor
test
lahf
mov
mov
(bad)
ffree
fild
pop
repz
test
ins
cwde
hlt
pop
dec
jne
push
mov
and
cmp
and
jl
push
ins
cmp
pop
mov
fs
push
je
jecxz
or
adc
std
add
nop
sub
xchg
test
xchg
sub
and
inc
mov
clc
xor
push
lds
adc
and
mov
mov
push
fwait
adc
cs
sbb
out
les
push
jo
dec
clc
fisub
scas
xor
pop
mov
in
sub
jbe
daa
xchg
shl
inc
sti
ins
pusha
popa
mov
std
cli
cwde
cdq
fidiv
call
push
jno
fstp
or
aas
call
nop
xchg
stc
push
jmp
jle
and
ficomp
add
sbb
sbb
adc
in
add
lock
add
stos
mov
push
mov
add
and
mov
lds
mov
movs
mov
movs
(bad)
imul
jle
jecxz
mov
mov
and
stc
fwait
es
mov
inc
test
aad
pop
mov
mov
and
pop
and
fcomp
and
pop
mov
sbb
pop
push
jge
leave
pop
(bad)
icebp
jecxz
test
sub
mov
fsub
xor
movs
ins
adc
add
lods
fwait
scas
dec
leave
jbe
out
sub
iret
rcl
outs
adc
jb
mov
and
popa
mov
add
jl
pusha
cld
cmc
jo
mov
adc
test
pop
adc
mov
cmp
mov
pop
pop
stos
test
mov
arpl
fcmovu
das
pop
or
fwait
cs
fwait
dec
(bad)
gs
div
dec
aas
cmc
mov
jbe
pop
inc
mov
jae
mov
add
inc
and
dec
mov
fistp
out
loop
cmc
push
pushf
or
jmp
sub
pop
mov
inc
call
je
mov
xchg
sub
adc
xchg
neg
inc
aad
pop
ins
ror
pusha
cmp
mov
add
fdivr
sub
cwde
mov
mov
push
and
das
push
dec
dec
sub
pop
aaa
in
and
bound
add
test
xchg
add
jmp
dec
and
dec
inc
mov
jns
xor
movs
jbe
or
fwait
pop
in
mov
inc
scas
ret
jne
(bad)
sub
popa
xchg
out
imul
xor
movs
mov
sub
sub
in
bnd
out
nop
sub
retf
push
cmp
sub
adc
aaa
xor
arpl
(bad)
cld
imul
push
inc
cwde
sub
ror
pop
cmps
mov
mov
xchg
mov
pop
mov
xchg
adc
test
jecxz
arpl
pushf
daa
and
pop
cmp
imul
pop
ja
sahf
je
xor
push
and
ins
stos
shl
or
adc
(bad)
xlat
adc
out
lock
cld
and
cld
nop
cld
mov
(bad)
xor
jbe
jns
fnstcw
sbb
rcr
ja
mov
mov
cmp
adc
jae
inc
and
es
sbb
dec
fcomp
imul
out
fdivr
adc
add
int3
cmps
mov
push
into
das
pop
push
dec
sbb
or
ret
push
vcvtpd2ps
outs
mov
push
jle
out
cli
inc
aam
sbb
outs
mov
mov
cwde
clc
imul
jo
xchg
adc
add
int
xchg
dec
or
cs
js
xchg
lds
stos
iret
mov
sbb
xlat
call
add
(bad)
pop
rcr
(bad)
fwait
lock
add
leave
cmc
call
hlt
mov
push
mov
(bad)
sub
ja
dec
in
mov
fcomip
mov
imul
leave
nop
repnz
push
push
scas
push
call
dec
lea
in
outs
stos
fdiv
rol
dec
pusha
jecxz
sbb
ret
cmp
adc
adc
popa
adc
jbe
xchg
cmp
and
jmp
es
mov
lock
movs
in
xchg
and
fistp
in
loope
in
jmp
adc
add
mov
adc
movs
xchg
repz
icebp
sbb
iret
cmp
sbb
lds
xchg
jl
pop
sbb
stc
or
cld
jae
jo
jmp
pop
cmp
adc
std
stos
test
adc
popf
cdq
adc
sbb
push
stc
adc
xor
xchg
cmps
push
inc
dec
repz
(bad)
aad
cmc
sbb
jmp
sbb
sbb
xor
pop
xchg
mov
fidivr
mov
mov
pop
xchg
cmp
int3
jg
push
fidivr
aaa
push
mov
push
(bad)
int
scas
xchg
outs
xchg
cmps
xor
push
shl
or
scas
cmps
test
aas
sub
cwde
adc
sbb
mov
sub
popa
pshufw
mov
adc
cmp
loope
(bad)
cmp
ja
xor
push
push
iret
mov
ss
sub
popa
int3
std
mov
sbb
out
rol
and
xor
(bad)
sbb
mov
sti
or
push
(bad)
mov
sbb
call
retf
mov
mov
mov
fcmovne
sahf
loopne
loopne
sbb
pop
sub
fst
xor
add
cmps
jecxz
pop
cdq
jbe
sbb
movs
sub
push
dec
mov
(bad)
fwait
in
xchg
push
xchg
sbb
das
in
sbb
call
fnstcw
jl
xor
or
psubusw
or
imul
out
(bad)
xchg
push
lahf
sbb
jmp
xor
not
stos
push
fst
lds
xchg
iret
arpl
push
or
add
and
xor
pop
sub
shr
cdq
inc
cwde
adc
out
fdivr
push
lods
leave
and
movs
(bad)
sbb
xchg
scas
or
loopne
in
movs
jae
ins
xor
xor
xchg
les
xchg
jecxz
push
popa
add
outs
push
cmps
mov
test
rcl
push
cmp
jnp
push
mov
xchg
mov
ror
daa
js
mov
arpl
loop
pop
sub
jb
ret
ret
mov
not
pop
sub
cmps
push
inc
lods
pusha
mov
call
stos
jo
jno
rcl
pop
sti
xchg
mov
dec
fiadd
cmp
test
pop
jp
pop
mov
cs
push
add
movs
inc
outs
mov
lock
ror
scas
mov
(bad)
fnstenv
cli
lahf
sub
push
cwde
ret
cmps
fld
imul
inc
cmps
dec
dec
jae
fdivr
addr16
cmp
push
shl
movs
cli
cmp
jp
scas
sub
fucom
test
or
retf
hlt
xor
mov
ror
add
shr
cmc
into
ds
(bad)
cwde
sbb
mov
add
(bad)
jns
cmc
out
pop
xchg
ss
movs
dec
xor
xchg
addr16
xchg
retf
test
pop
add
lods
mov
jbe
mov
popf
fimul
stc
xchg
push
pop
xchg
nop
lods
data16
fs
sub
in
imul
imul
enter
inc
imul
outs
push
in
mov
out
sbb
push
adc
dec
rol
sbb
jno
push
mov
inc
mov
jmp
xor
mov
cli
pop
idiv
mov
sub
mov
push
jmp
push
xlat
test
inc
and
data16
xchg
in
fcmovnu
or
repz
push
call
xor
inc
es
cmp
add
in
inc
pusha
(bad)
or
icebp
aam
cvtdq2ps
mov
fild
jns
outs
jmp
pop
mov
dec
sub
loope
lock
push
and
push
push
push
cmp
js
outs
inc
jg
movq
outs
bound
inc
pop
daa
xchg
cmp
ficomp
gs
and
or
nop
jns
pop
mov
in
ret
xlat
and
jmp
fadd
out
pop
mov
adc
test
enter
enter
mov
dec
push
xor
fimul
push
or
xchg
sub
int3
(bad)
dec
lods
hlt
fs
call
and
push
pop
sub
aad
mov
xlat
jns
add
(bad)
ds
xchg
ficomp
lods
cmps
xchg
adc
fist
jne
cmp
pop
jmp
add
sbb
xor
push
add
mov
sub
mov
cld
es
(bad)
sbb
outs
pop
cmp
cwde
xchg
add
sbb
mov
mov
movs
int3
pusha
jne
xchg
adc
xchg
mov
xchg
cli
mov
retf
test
repz
in
popa
mov
leave
and
lds
sbb
pop
arpl
test
and
cmp
cwde
aam
popf
stos
retf
(bad)
cmp
in
scas
push
xchg
stos
int
push
out
mov
mov
pop
sbb
sti
inc
jne
xor
adc
cmc
add
pop
std
leave
ins
push
push
push
pop
cmp
ret
pop
retf
fwait
dec
fst
cmp
jnp
mov
inc
test
lods
hlt
call
ror
cmc
push
imul
push
push
dec
ss
inc
jl
mov
jl
mov
dec
fwait
push
fldenv
cwde
fdivr
ds
das
(bad)
cmps
jmp
enter
icebp
cdq
push
mov
aam
xlat
fcmovb
cli
ss
xor
dec
xor
mov
ret
jle
aad
mov
xchg
ins
mov
add
out
xor
add
push
fstp
inc
jnp
or
lods
repz
push
pop
lea
arpl
pop
test
mov
test
xor
retf
inc
jge
mov
leave
mov
nop
lock
sbb
iret
mov
test
xchg
cmp
inc
scas
test
mov
xchg
stc
xchg
pop
jns
cmp
in
adc
adc
mov
btc
and
(bad)
jle
out
and
or
daa
mov
xor
mov
jp
out
cmp
rcr
out
cmps
lods
sub
call
jns
fisub
stc
mov
mov
jno
mov
sub
cmp
gs
push
and
mov
retf
neg
jmp
and
inc
xchg
and
out
sar
mov
inc
stos
and
sar
jnp
out
std
dec
pop
mov
cmp
adc
sahf
out
es
std
ret
pop
and
pushf
xor
inc
pop
mov
pop
mov
mov
sbb
cmp
xlat
mov
fst
push
outs
xchg
mov
sbb
stos
icebp
popf
xchg
mov
mov
ss
mov
scas
xor
or
repnz
lods
mov
jl
mov
imul
js
enter
push
jg
call
add
cli
mov
jge
loop
pop
ss
adc
push
int
add
sbb
pusha
(bad)
bound
add
test
jle
pop
jns
ffreep
xor
je
xor
add
push
sbb
mov
(bad)
arpl
jns
test
xchg
scas
leave
add
bnd
(bad)
cmp
or
jne
loope
mov
jns
fdivr
mov
out
aad
mov
mov
stos
jne
mov
jle
xor
dec
add
cmp
xchg
out
lods
pop
add
mov
push
sti
imul
adc
dec
mov
shl
cld
idiv
ins
in
test
pop
mov
or
xchg
cmps
loop
cmps
sub
(bad)
mov
out
pop
xchg
loope
cmp
movs
xor
ret
xor
rcr
jmp
sub
gs
into
or
or
(bad)
sub
add
sbb
shl
and
imul
pushf
mov
mov
ins
(bad)
les
imul
mov
aaa
xchg
jb
cmp
jp
not
(bad)
aad
lock
push
push
lock
es
sbb
daa
lock
fidiv
inc
xchg
call
repnz
test
adc
jo
out
add
call
aaa
jmp
mov
ret
xchg
shl
pop
loope
pop
(bad)
add
data16
dec
pop
shr
cmp
sti
xor
pushf
dec
pop
xor
out
sbb
xchg
push
fs
xchg
test
sbb
dec
cmps
fist
enter
out
nop
add
dec
rol
push
(bad)
sub
push
lods
inc
sub
push
push
jbe
inc
pop
(bad)
jb
add
pop
gs
call
sub
jge
push
int3
push
xlat
cmp
dec
stos
fadd
sbb
xchg
xor
adc
cwde
add
call
xor
sub
cmp
int3
cmps
jo
xlat
jbe
ds
adc
aas
mov
add
adc
ds
out
adc
sti
std
mov
mov
push
clc
js
sub
mov
jle
bound
(bad)
jg
pop
in
mov
cmps
rcr
or
cmps
sbb
xchg
sbb
das
push
pop
setnp
xchg
xchg
daa
sub
sub
and
jb
and
pop
and
cwde
jmp
outs
retf
das
xchg
jbe
pusha
xchg
(bad)
cli
icebp
xor
aad
push
fild
into
ror
adc
jle
pop
xchg
(bad)
neg
mov
sub
xchg
into
sbb
sbb
sbb
cmps
call
cmp
ss
sbb
jp
mov
push
add
jmp
add
mov
(bad)
xor
retf
inc
fwait
xchg
push
jg
mov
stc
add
dec
mov
cmp
add
adc
inc
jmp
dec
add
pop
test
in
sub
out
ins
dec
push
jecxz
xchg
inc
fs
ins
es
and
xchg
(bad)
repz
loope
jne
jl
pushf
jnp
test
and
mov
hlt
stc
imul
(bad)
adc
or
or
cmp
adc
inc
lds
cwde
inc
pop
jg
call
fsubr
loope
(bad)
mov
movs
icebp
mov
inc
call
cli
(bad)
cmps
fisttp
pushf
or
and
out
rcl
sub
pushf
push
arpl
pop
data16
loop
popa
add
cli
ja
inc
movs
adc
shl
sar
add
cmp
pop
pop
pop
aam
mov
aas
loop
pop
(bad)
not
retf
call
ins
es
pop
dec
dec
sub
iret
cdq
inc
add
clc
(bad)
mov
into
outs
pop
jp
sahf
xlat
sbb
bound
fsubr
xor
fadd
or
or
mov
cwde
pop
daa
adc
mov
movs
add
imul
add
leave
mov
lods
ins
fst
ins
loopne
sub
test
mov
arpl
(bad)
mov
sub
jge
mov
sbb
imul
shl
mov
xchg
jno
fxch
or
jle
pop
cld
cmp
std
sbb
stc
ja
cmps
inc
cwde
outs
dec
sbb
(bad)
enter
mov
xchg
ret
ds
jmp
xchg
cmp
and
int3
adc
sub
sub
xor
mov
icebp
dec
mov
xor
imul
and
imul
jne
call
jno
jnp
jb
and
sub
aam
daa
mov
sub
xchg
ja
mov
push
retf
mov
mov
aaa
mov
mov
xor
fstp
test
mov
add
push
jb
aad
xor
push
(bad)
imul
ins
enter
and
cli
push
shl
bound
cld
pop
mov
sbb
cmp
adc
adc
dec
sbb
pop
cmps
jns
sbb
ret
movs
lds
or
(bad)
adc
sar
jge
sbb
pushf
mov
sbb
(bad)
or
lds
aaa
cmc
mov
push
test
dec
mov
xchg
int
movs
or
pop
movs
fwait
pop
call
icebp
std
sub
arpl
add
repnz
rcl
in
shl
shl
icebp
mov
jae
scas
jno
loop
cmp
dec
shl
sbb
or
in
or
sub
cmc
mov
push
push
xchg
aas
inc
bound
in
hlt
dec
mov
jae
xchg
or
mov
out
scas
daa
mov
test
lock
mov
mov
xor
xchg
imul
ins
iret
mov
push
jb
test
xchg
sti
arpl
add
jnp
cmp
cmc
mov
mov
push
(bad)
out
cld
cmp
fmul
dec
or
out
adc
rol
lea
int
dec
scas
outs
in
cmp
mov
xchg
ss
out
repz
mov
inc
xchg
sbb
mov
arpl
in
cwde
add
mov
int3
hlt
sbb
push
mov
ret
outs
add
push
mov
cmp
xor
inc
push
out
pop
xchg
clc
push
push
or
clc
cwde
cdq
xor
xor
lods
push
inc
jne
mov
push
or
push
stos
sbb
and
dec
sahf
js
and
(bad)
out
icebp
je
xchg
rcl
popa
pushf
test
sub
sbb
sbb
gs
das
mov
pop
pop
in
push
lea
cmc
push
sbb
sbb
xor
movs
sub
xor
int3
repnz
xchg
pop
push
aas
sahf
lock
clc
fstp
aad
and
jae
out
stc
push
int3
ins
add
adc
or
pop
pop
jmp
aam
cbw
out
dec
or
sar
int3
fdivr
ficomp
scas
xlat
(bad)
daa
dec
push
in
jle
lds
adc
and
retf
movs
xchg
mov
pop
mov
sub
jb
icebp
pushf
cmps
mov
sub
push
or
mov
cmps
cmp
inc
ds
mov
cvtpi2ps
je
div
xchg
popa
mov
ds
push
ret
arpl
jle
pop
loopne
mov
mov
cmp
sar
and
sbb
jo
test
push
lea
mov
lods
mov
jmp
jo
adc
xchg
shl
mov
pop
push
jle
jb
loop
lahf
jecxz
popa
ss
pop
cmp
mov
popa
clc
pusha
ret
ret
shl
inc
push
jmp
mov
call
cwde
ins
xchg
lea
rcr
out
rcr
dec
call
mov
(bad)
sbb
inc
repz
ins
and
mov
or
mov
aaa
jo
sub
sbb
push
aas
nop
cmc
and
lods
xlat
addr16
out
sbb
xchg
inc
lods
push
sub
adc
mov
dec
ffree
aam
or
pop
je
in
inc
pop
adc
fsub
int3
jl
push
fabs
loop
icebp
push
pop
stc
xor
test
ins
dec
stc
in
enter
loopne
and
fmul
add
mov
test
fld
ret
jmp
xchg
test
jae
cmp
movs
ret
mov
jp
in
scas
aas
fnstsw
jmp
xor
xchg
scas
push
ds
mov
imul
xchg
fs
xchg
test
add
int
lds
sahf
push
adc
sub
sub
movs
loop
daa
int
push
cs
cmp
and
fnstenv
mov
js
dec
jno
mov
sahf
adc
test
dec
fs
sub
shl
adc
mov
push
and
push
scas
add
xchg
push
mov
mov
dec
out
mov
(bad)
sbb
mov
test
outs
pop
retf
jne
stc
aas
outs
dec
jecxz
loope
repnz
shl
sbb
mov
imul
test
mov
imul
mov
jno
popa
loope
in
arpl
ss
pushw
dec
mov
xor
mov
scas
dec
xchg
outs
retf
sub
jl
jno
jecxz
out
pop
and
mov
cmc
xlat
out
mov
jns
in
ror
push
pop
mov
enter
pop
add
shr
xor
push
ret
icebp
inc
xchg
xchg
inc
mov
or
test
leave
push
aam
shr
out
dec
arpl
xor
(bad)
ja
sbb
mov
loop
call
xor
popa
pop
mov
and
cmp
add
retf
cmp
jmp
adc
jno
mov
mov
es
lea
pcmpeqw
xchg
or
xchg
shl
rol
add
jno
pop
out
imul
mov
retf
jge
out
jbe
cmps
fwait
inc
sbb
or
(bad)
lahf
pop
inc
loopne
nop
cli
je
xor
pop
xor
or
dec
(bad)
inc
inc
jg
pop
cmp
xchg
out
in
or
adc
and
pop
call
adc
(bad)
adc
pop
fsubr
sub
push
jecxz
arpl
adc
dec
mov
sub
mov
or
mov
mov
xchg
jl
sub
std
mov
sub
sbb
ds
aam
pop
call
push
sbb
pop
mov
imul
push
cmc
mov
das
xor
cwde
or
test
jle
loop
jo
adc
xchg
inc
pop
add
sbb
pop
lahf
mov
fdiv
push
add
pop
test
sti
outs
loope
mov
popf
mov
pop
adc
gs
loope
nop
test
ret
add
cmps
mov
cmp
push
sub
sbb
mov
cwde
sub
loop
cmps
push
push
cmp
jp
xor
mov
inc
fadd
nop
jb
lahf
xchg
icebp
inc
outs
test
mov
pusha
mov
mov
jecxz
pop
sbb
mov
jmp
lods
movs
cs
(bad)
xor
or
aad
xchg
cli
enter
xchg
enter
jno
sub
adc
mov
mov
stc
mov
jno
stos
mov
jmp
xor
popf
pushf
cmp
dec
mov
scas
in
int3
cdq
pop
aaa
call
enter
cmps
push
js
clc
lock
pop
push
fs
arpl
std
lds
inc
sub
jmp
dec
clc
dec
dec
and
(bad)
push
inc
jnp
outs
(bad)
mov
test
(bad)
fisttp
xor
leave
pop
leave
cdq
dec
push
jns
pushf
adc
pop
lods
inc
mov
adc
add
xchg
cmp
imul
in
sbb
retf
sub
xchg
inc
jecxz
ss
sub
(bad)
data16
inc
pop
arpl
mov
outs
popf
scas
dec
ret
jbe
aaa
sar
sbb
push
retf
push
retf
lods
cmp
aad
enter
dec
and
xchg
call
shr
jmp
rcr
mov
xchg
adc
sbb
sbb
pushf
aas
outs
(bad)
cmp
out
movs
stos
or
inc
scas
idiv
sahf
pop
mov
adc
mov
adc
mov
aam
add
xchg
std
push
push
or
pop
fdiv
movs
push
or
xor
sub
pop
rol
mov
sub
jno
leave
sub
lock
xchg
pushf
xchg
shld
(bad)
es
fmul
mov
pop
fidivr
in
jb
pmovmskb
or
push
rcl
aam
outs
mov
movs
jge
cs
xchg
movs
push
sti
test
jg
dec
xor
retf
jge
scas
icebp
push
ins
adc
cld
adc
test
mov
outs
adc
xor
dec
daa
xchg
xor
fwait
ja
xchg
adc
mov
call
dec
cmp
push
test
inc
xor
aas
mov
enter
sbb
mov
shr
jne
(bad)
mov
mov
xor
in
aam
or
sbb
repnz
cmp
adc
or
and
leave
inc
div
xchg
(bad)
or
or
ret
xchg
imul
cmps
sti
aam
add
push
loopne
xchg
fs
aad
stos
inc
setno
out
or
xor
jne
fisttp
enter
inc
dec
stos
pop
leave
add
or
xor
adc
cmp
rol
cmp
push
adc
out
mov
xchg
fwait
lods
inc
lods
inc
fimul
enter
dec
cmp
push
push
mov
and
js
or
enter
sub
loopne
ins
mov
int
mov
or
in
out
push
retf
ins
mov
fldenv
mov
xchg
push
dec
adc
leave
sbb
fcmove
out
dec
xchg
push
out
call
pop
push
jae
jbe
adc
xchg
lods
rcl
jge
call
imul
lds
ss
sub
div
xor
and
movs
xor
ror
mov
ficomp
sbb
test
pushf
dec
adc
or
shl
push
ret
xor
ss
sbb
int
in
enter
pushf
int3
ror
mov
sbb
mov
inc
mov
out
pop
mov
fstp
cwde
adc
push
out
or
mov
lods
jo
add
xchg
sbb
mov
add
imul
mov
cwde
fs
lahf
out
pusha
dec
sti
or
pop
sahf
cmps
add
cmp
sbb
cdq
test
mov
(bad)
in
cmp
jmp
sbb
mov
mov
pusha
into
ret
pop
push
add
(bad)
mov
imul
pop
inc
loopne
mov
cmp
(bad)
pop
sub
add
call
lods
mov
test
loope
test
mov
jge
call
ins
mov
inc
mov
mov
mov
(bad)
js
sbb
xchg
xor
call
test
icebp
aad
shl
enter
imul
add
mov
push
in
dec
out
dec
data16
mov
adc
mov
in
pop
jge
lods
pushf
sar
or
jmp
fst
dec
push
push
cwde
sbb
xchg
and
jmp
pop
xchg
jmp
mov
jns
and
icebp
test
test
pop
cmp
inc
xchg
inc
adc
frstor
adc
sub
daa
(bad)
shl
(bad)
cmp
aaa
sar
mov
jnp
inc
push
mov
hlt
sub
sbb
jo
inc
jmp
adc
test
popf
sub
push
call
mov
sbb
jp
adc
loop
mov
adc
fstp
adc
jl
clc
jle
es
jns
inc
fbld
fbld
pushf
jmp
bound
dec
cmp
call
(bad)
mov
push
cmps
call
leave
cmp
and
or
or
addr16
mov
pop
fiadd
ins
mov
jl
jae
and
mov
jg
lahf
and
test
outs
jecxz
hlt
xchg
je
pop
(bad)
and
je
(bad)
xlat
call
sbb
xchg
fadd
xor
and
out
or
pop
rcl
sbb
xchg
jnp
cli
xchg
fdivr
pop
loop
(bad)
adc
or
xchg
das
add
add
arpl
cmps
xchg
cmc
cmp
int
fiadd
movs
aaa
int
int
rcr
xchg
in
test
mov
xor
clc
jle
cmp
rcr
xchg
sub
add
jnp
mov
mov
sti
fild
dec
jns
jge
jo
jo
shl
push
fwait
retf
clc
clc
push
out
aad
imul
adc
aam
inc
iret
push
sbb
cmps
sbb
mov
mov
sahf
aad
adc
jno
add
or
mov
arpl
ror
pop
mov
test
aas
sub
mov
add
mov
dec
jecxz
je
cmp
ret
dec
int
and
sbb
jl
adc
mov
add
xchg
ret
add
shl
push
ror
mov
imul
inc
xor
loope
jl
cmp
lods
cmps
loopne
jnp
sub
test
mov
popa
std
adc
jne
test
pop
push
retf
jge
clc
jge
inc
xor
push
fiadd
jmp
pusha
arpl
cmp
cs
fdiv
rcl
or
dec
(bad)
sahf
add
lods
je
adc
cmc
mov
sti
nop
das
and
lea
cmp
sbb
cmp
iret
cmc
and
push
xor
xor
sbb
mov
retf
pop
es
and
mov
mov
inc
call
bound
fistp
test
mov
std
jmp
dec
pop
leave
hlt
cmc
jl
jle
mov
adc
push
push
inc
adc
imul
fisubr
mov
or
ret
(bad)
ds
sti
(bad)
sub
retf
inc
sub
fdiv
add
(bad)
jmp
fist
aaa
mov
mov
jns
bound
cmp
mov
ret
xchg
neg
jecxz
icebp
data16
and
pop
or
aaa
xchg
lahf
xor
ret
aam
inc
(bad)
jne
cmps
les
mov
lds
dec
pushf
cmp
js
dec
retf
test
jae
sub
adc
and
leave
test
stos
adc
sbb
test
out
jo
jg
jae
cdq
imul
int
neg
xchg
loopne
mov
fstp
cmp
fdiv
mov
pop
ins
ins
test
and
mov
cmp
sbb
popf
xor
jp
dec
enter
mov
in
aam
sub
mov
out
out
sbb
rol
mov
js
cs
adc
mov
jo
mov
fbstp
call
xchg
add
jecxz
xor
es
pop
push
loope
xchg
inc
push
mov
repz
pop
jg
cmp
out
jb
jmp
cli
xor
adc
ror
pop
xor
dec
ret
lock
and
ins
cld
rcl
into
mov
retf
dec
push
stos
aas
nop
fptan
pusha
in
cmp
das
pop
mov
or
outs
or
bound
scas
pop
adc
out
cmp
pop
std
mov
mov
hlt
lahf
mov
jnp
or
stc
call
imul
int3
adc
xchg
ficomp
sar
fdiv
out
stos
cs
pop
pop
es
movs
sbb
mov
jnp
add
cmp
movs
or
or
cli
mov
enter
in
in
jb
mov
ret
les
cmp
pop
inc
fsubp
xchg
fldenv
cwde
adc
dec
sub
fwait
cmps
clc
add
cli
aas
xchg
and
cmps
xchg
xlat
outs
les
mov
ror
cwde
cmc
fild
add
loopne
outs
shl
popf
repz
rol
adc
mov
xchg
and
jge
add
and
pop
repz
mov
movs
test
xchg
sbb
pop
xor
sub
add
pushf
mov
(bad)
xchg
sbb
jl
jmp
movs
pushf
loope
cli
aam
std
sbb
outs
gs
sub
je
hlt
xor
pop
rol
shr
jge
fwait
jmp
adc
pop
mov
mov
dec
lods
out
pop
adc
mov
shld
scas
mov
and
inc
jne
call
jecxz
mov
lods
movs
dec
movs
das
aam
test
pop
add
rol
adc
push
mov
mov
jae
sbb
popf
push
xor
jg
mov
jbe
jmp
(bad)
imul
(bad)
ret
xlat
cwde
push
pop
jne
or
mov
pop
and
pop
aaa
sbb
je
iret
mov
aad
clc
pop
add
or
pop
or
mov
loop
sbb
xor
push
lahf
and
pop
imul
pop
mov
sbb
jmp
daa
(bad)
adc
popf
mov
repnz
and
loope
adc
and
push
outs
inc
sar
fisub
sub
xor
pop
sub
fsubr
dec
ss
mov
(bad)
std
adc
sbb
and
dec
in
push
mov
scas
clc
test
xor
xor
popf
aam
xchg
sbb
fisttp
and
in
ja
repz
or
lods
popa
icebp
sbb
mov
arpl
out
outs
adc
retf
dec
into
pop
stc
cmp
jmp
repz
dec
pusha
pop
sub
xor
dec
aaa
pushf
push
loope
sbb
adc
dec
imul
imul
cld
mov
xchg
add
scas
pop
cli
xlat
sbb
add
xchg
and
xchg
pop
nop
int3
xchg
inc
and
push
cmovno
push
or
xchg
int
ret
test
dec
add
add
sbb
xor
pop
push
into
pop
fs
cmp
push
sbb
add
xchg
shr
enter
pop
data16
pop
pop
push
movs
cmps
jmp
cmps
mov
call
loopne
adc
xchg
pop
mov
jno
popa
out
pop
ins
add
lds
xor
cmp
cs
sub
xchg
push
sbb
test
sar
sub
pop
add
mov
inc
push
xor
inc
xor
fistp
sub
add
dec
fs
(bad)
push
mov
js
push
xchg
outs
addr16
shl
sti
cmc
xchg
mov
lock
inc
out
pop
mov
mov
push
mov
add
lock
cmc
pop
jns
inc
int
cdq
jmp
or
cmp
outs
or
mov
mov
add
xchg
jmp
xchg
hlt
lock
sub
xor
dec
loopne
xchg
push
fistp
xchg
frstor
jg
jp
push
test
(bad)
(bad)
jmp
aam
dec
sbb
enter
jle
xlat
call
mov
sbb
jmp
mov
add
aaa
pop
mov
dec
push
(bad)
sub
js
or
out
sub
loope
dec
cmp
aad
fs
outs
mov
bound
jno
adc
push
mov
mov
ret
in
xchg
push
arpl
out
cmps
push
inc
jecxz
xor
imul
fcomp
shl
cmp
xchg
je
pop
mov
cmp
mov
add
hlt
arpl
mov
jae
rcl
sbb
stc
and
fxch
call
daa
pop
pop
lea
and
pop
inc
or
xor
iret
jmp
and
les
cmp
jae
leave
movs
sub
or
mov
mov
add
cmp
mov
cmp
rol
lods
and
inc
in
cmp
stos
and
mov
inc
jns
pop
or
stc
ror
or
add
sub
test
sbb
lods
or
arpl
mov
loopne
xchg
sub
ds
ins
push
cs
mov
mov
neg
xchg
cmp
(bad)
imul
aas
into
(bad)
cmp
xor
jecxz
bound
xor
retf
add
aaa
movs
shl
xor
pop
or
ins
(bad)
cmps
mov
call
jno
add
test
pop
pop
xchg
movs
sar
outs
push
add
sub
or
inc
rcl
add
push
ror
test
out
dec
jb
in
mov
or
sub
adc
in
cli
hlt
cmp
xchg
jge
inc
fs
scas
sbb
icebp
cdq
add
ret
adc
hlt
jmp
fcmovnu
lahf
pusha
dec
mov
mov
ins
xchg
jge
lds
and
jecxz
mov
ror
test
mov
sbb
cli
pusha
aaa
mov
inc
xchg
inc
sub
adc
add
stos
jb
ret
xchg
sbb
push
(bad)
pop
push
test
gs
mov
paddb
pop
lea
faddp
pop
daa
gs
aad
xchg
or
add
in
clc
add
xor
shl
cmp
push
cmp
jb
icebp
aam
xor
scas
test
addr16
dec
out
xor
inc
iret
ret
ret
mov
movs
popf
push
call
in
pop
mov
pop
inc
mov
(bad)
pop
cmp
dec
and
dec
fimul
push
pop
inc
and
call
cs
pop
jo
fwait
(bad)
shr
js
jo
clc
call
rol
pushf
xor
out
int3
inc
xor
fwait
outs
pop
mov
xchg
jbe
rcr
cdq
out
repz
shl
and
xor
xor
call
sub
cdq
adc
jp
hlt
sub
push
mov
call
mov
mov
scas
daa
inc
addr16
jne
(bad)
cmps
fdiv
loope
enter
iret
jno
in
in
add
cwde
rcl
mov
in
into
mov
movs
pop
jl
push
or
jmp
jle
mov
inc
xor
(bad)
sbb
xchg
mov
adc
push
jp
mov
add
arpl
push
(bad)
jns
loope
or
into
shr
fdivr
mov
mov
jge
ret
and
pop
lods
inc
xchg
xchg
outs
je
mov
jmp
mov
add
xchg
mov
xchg
cs
fs
adc
test
inc
push
xor
push
sbb
aam
jae
imul
fcom
loopne
dec
stc
test
arpl
pop
int
das
jne
xchg
repnz
add
(bad)
sbb
outs
and
sbb
dec
xchg
cmp
inc
xlat
rcr
mov
ss
dec
gs
popf
pop
inc
jl
outs
movs
cs
sub
pop
add
cmp
jecxz
loopne
nop
ret
cdq
push
movs
sar
sub
xchg
mov
or
mov
xchg
mov
adc
cwde
adc
int
inc
jo
fldenv
retf
aaa
jecxz
cmp
adc
lea
adc
xor
mov
in
not
mov
xor
je
pusha
out
xchg
add
ret
sbb
jp
cmc
push
push
mov
sub
repnz
dec
lods
jne
jecxz
std
pushf
cli
or
dec
jno
dec
sbb
and
push
aad
pusha
cmp
fs
loop
pop
addr16
and
les
sub
arpl
inc
mov
dec
mov
inc
xchg
aas
cmp
xchg
pop
dec
in
movs
call
lods
dec
loopne
cmp
sbb
push
push
cld
sub
aaa
dec
push
inc
xchg
test
loopne
pusha
push
fadd
dec
stos
mov
ins
adc
out
outs
xchg
int3
loope
pop
scas
push
call
push
addr16
dec
fwait
cwde
(bad)
clc
scas
mov
xchg
ss
or
jle
daa
test
sub
jg
jbe
or
inc
mov
cmp
mov
or
stc
sub
cmp
dec
adc
shr
mov
popa
ret
ficomp
movs
hlt
sub
fmul
lods
sub
cmps
lods
fild
ins
pusha
lods
out
dec
nop
enter
xchg
out
sub
fs
jecxz
mov
push
xor
fld
cmp
pop
imul
push
out
pop
into
je
cmps
in
aam
lahf
sbb
(bad)
add
leave
bound
ss
sub
hlt
inc
popf
ret
sbb
inc
mov
adc
adc
mov
xchg
sub
push
and
inc
add
and
mov
addr16
adc
inc
jmp
push
cmps
inc
adc
mov
cmp
inc
mov
int3
(bad)
push
mov
sahf
inc
test
mov
pop
scas
adc
adc
gs
je
xor
sahf
in
fdivr
cmps
mov
ret
dec
in
or
xchg
loopne
push
fwait
and
movs
sbb
sbb
dec
(bad)
xlat
add
loop
mov
jns
mov
dec
add
(bad)
jg
xor
and
inc
adc
lahf
inc
enter
sar
mov
dec
pop
movs
jl
shl
mov
xchg
(bad)
jmp
xlat
stc
cmp
xor
and
popf
cli
jl
rol
and
or
add
lods
aaa
aad
test
cmp
call
pusha
leave
xchg
fs
retf
cmp
jb
lods
sbb
ror
xchg
rcl
dec
int
push
and
or
into
in
test
out
repnz
sbb
cwde
ins
cmp
hlt
(bad)
repnz
dec
mov
(bad)
imul
cs
push
ss
dec
popf
pusha
xor
fisub
pop
fisubr
ret
xchg
mov
mov
inc
loop
push
sbb
cdq
lods
out
gs
adc
cmp
std
push
push
adc
mov
ins
xchg
add
enter
test
ins
xor
int
out
jecxz
adc
push
(bad)
inc
and
mov
jb
lea
cs
or
adc
aam
push
mov
adc
mov
outs
(bad)
adc
cmp
cmp
lods
or
gs
lock
jl
scas
adc
push
cmp
add
mov
adc
inc
cmp
sub
(bad)
(bad)
loopne
mov
xor
add
neg
mov
shl
xor
mov
fld
leave
cmp
out
mov
sbb
cmp
mov
xchg
sbb
es
ret
nop
pop
push
cmps
es
dec
in
aas
cmp
(bad)
dec
push
dec
jne
xchg
aam
xor
and
or
adc
push
mov
add
sbb
and
stos
and
sub
xchg
outs
sbb
into
fadd
stos
(bad)
jp
retf
push
clc
inc
in
sbb
push
(bad)
scas
pop
push
mov
sub
adc
lods
lea
addr16
adc
jmp
xchg
out
aaa
sub
movs
dec
cmovae
arpl
jp
push
setne
stos
in
mov
push
mov
push
push
adc
in
fld
aas
push
imul
cmp
dec
arpl
popa
fld
adc
out
push
pop
dec
inc
xor
jle
cmp
and
dec
(bad)
or
jmp
cli
sbb
inc
je
push
shr
les
xchg
mov
lea
mov
test
fisttp
push
mov
mov
inc
imul
cli
mov
inc
and
out
rol
sbb
stc
aam
sub
or
pop
add
enter
in
jge
aam
cmp
dec
jo
sub
movs
bound
sub
or
ss
and
aas
ffreep
fs
push
test
cmp
fimul
dec
cmp
bnd
mul
std
(bad)
and
rol
lods
inc
scas
and
cmp
in
mov
nop
(bad)
push
fdivr
push
or
in
in
ins
and
mov
xchg
aad
mov
das
adc
ss
(bad)
rol
rcr
and
adc
sbb
popa
inc
push
ret
das
xchg
es
scas
daa
outs
mov
xchg
mov
daa
or
push
and
adc
sub
inc
popf
popa
and
jno
nop
(bad)
mov
mov
jns
jle
jecxz
fiadd
clc
add
shl
jle
repz
xor
and
cmps
mov
or
int
push
push
xchg
ja
push
mov
sub
pop
(bad)
mov
add
xchg
push
push
and
mov
pop
gs
cmp
xchg
iretw
jg
dec
lods
cmp
lods
gs
adc
push
lods
cli
fdiv
cmps
ins
call
jbe
scas
clc
jg
push
fadd
pop
(bad)
cmp
mov
pop
pop
loop
enter
and
inc
xor
icebp
cmps
mov
ret
and
cwde
xor
in
in
push
enter
shl
pop
enter
push
shl
mov
loop
jecxz
cmp
jne
test
or
cmp
(bad)
cmps
xor
pop
clc
fwait
or
and
cs
je
adc
and
repz
xchg
jg
fcom
jo
add
xchg
movs
daa
ss
test
sbb
sar
sbb
sti
aas
out
cs
mov
cmc
nop
std
ja
adc
cwde
ds
ds
jl
bound
dec
into
sbb
pop
mov
push
cmp
in
xor
daa
movs
xor
inc
es
pop
movs
imul
sar
pop
pop
sbb
dec
pop
sbb
enter
xchg
add
jae
cmc
movs
sbb
fwait
inc
pop
dec
mov
rcr
cwde
sub
and
fwait
div
aaa
and
mov
sub
stos
xchg
sbb
ins
pop
push
and
xlat
pop
push
test
into
loop
loope
addr16
sub
jbe
les
jecxz
mov
mov
ja
or
(bad)
ret
aas
dec
ds
cmp
repnz
push
inc
push
rcr
pusha
xchg
push
arpl
dec
pushf
xchg
mov
or
and
int
xor
sbb
out
ins
scas
and
pop
cli
test
fsub
outs
jno
xchg
xchg
mov
pop
jmp
xchg
pop
xchg
or
popf
add
jmp
push
cmp
mov
and
jle
inc
mov
out
add
mov
inc
fisttp
xor
sub
cmp
lock
inc
out
xchg
pop
movs
inc
out
or
inc
cld
fs
into
dec
movs
ret
div
iret
sbb
fisttp
shr
stos
cmp
out
jno
add
arpl
dec
adc
cld
mov
sbb
idiv
pop
jg
or
sbb
xor
push
fdivr
mov
mov
shr
lods
adc
cs
inc
shl
int3
and
out
jnp
nop
inc
pop
test
and
in
and
out
jno
jno
and
(bad)
fdiv
xchg
leave
aad
sbb
and
retf
js
iret
pop
daa
mov
imul
jp
jne
fwait
aas
pusha
push
fiadd
lahf
int
int
mov
mov
es
jmp
jb
mov
push
pusha
dec
dec
and
mov
pusha
inc
sbb
mov
loopne
fwait
pop
pop
nop
and
xchg
xor
mov
int3
mov
dec
push
xor
ins
and
das
sbb
push
and
shl
or
jne
std
jmp
sti
mov
inc
imul
mov
sub
mov
fmul
sub
ins
xor
out
dec
mov
xchg
aad
jecxz
pop
es
sbb
mov
dec
mov
rcr
jge
popa
movs
fstp
add
jg
es
sub
adc
jno
lea
adc
cmp
add
clc
dec
mov
aad
cmp
adc
sti
pop
nop
xor
lods
jp
add
xchg
test
mov
or
xchg
out
add
and
arpl
pop
rol
loop
aad
(bad)
out
fwait
lods
xor
dec
popf
pop
fisttp
jns
xchg
into
cmp
xor
push
inc
jmp
inc
shl
jbe
neg
mov
addr16
shr
inc
mov
push
loopne
fwait
sbb
popa
enter
mov
outs
mov
mov
ins
jno
cmp
sub
pop
icebp
sub
test
(bad)
cmp
pushf
dec
clc
fcmove
cmp
dec
jg
xor
or
and
aas
lods
cs
mov
sbb
jne
nop
cs
mov
loopne
sub
cmc
sti
pop
inc
pop
ss
in
add
push
sub
and
and
in
xchg
stc
in
push
adc
adc
outs
mov
cdq
jp
cmp
mov
dec
mov
cmp
es
stos
(bad)
outs
dec
sub
jecxz
push
ret
pop
enter
xchg
enter
cmp
sub
adc
cmps
stos
mov
xor
sar
xor
lahf
ins
sub
and
scas
ins
xchg
mov
jbe
loope
mov
add
scas
in
sub
mov
adc
jo
sbb
js
or
push
cmp
adc
jb
dec
and
jmp
xlat
cmc
outs
xlat
adc
mov
jb
aam
shl
ror
fld
fwait
out
lahf
inc
mov
ins
cmp
aad
push
scas
clc
loope
push
push
(bad)
or
pop
dec
and
sbb
out
jb
xor
jl
mov
bound
sub
mov
add
hlt
ins
adc
or
dec
ret
sub
daa
retf
pop
sub
sbb
adc
lds
(bad)
xor
inc
push
aas
int3
mov
inc
ins
or
jle
dec
hlt
sahf
dec
mov
xor
test
outs
nop
cld
ret
dec
je
mov
lahf
xor
jo
test
loopne
fstp
push
fwait
mov
aaa
popa
adc
lds
sub
push
pop
fdivr
aam
ja
ds
mov
sar
inc
mov
aaa
lods
pushf
pop
out
ret
pop
cmps
xor
push
test
mov
aad
cwde
and
and
pop
sti
pop
xor
aam
daa
(bad)
hlt
ds
std
fmul
test
push
clc
or
ror
jle
movs
mov
ja
mov
mov
stc
ret
jae
shr
mov
pop
fidiv
cmp
jmp
cmps
or
addr16
cli
outs
mov
addr16
pusha
popf
jmp
jle
cmp
fidiv
xchg
sub
jne
je
aas
cmps
pop
(bad)
jne
sti
push
pop
xor
mov
inc
jno
test
jns
jmp
inc
mov
call
mov
test
loop
mov
mul
mov
in
pop
movs
cdq
mov
sbb
mov
adc
stos
jmp
lea
add
or
mov
fwait
arpl
(bad)
push
adc
in
jmp
and
or
iret
shl
pop
sbb
sub
sub
aam
sbb
pop
sbb
xchg
sbb
in
aaa
adc
outs
cmp
in
and
xor
gs
sub
sbb
retf
popf
jno
xchg
or
lahf
(bad)
xchg
clc
lwpval
stos
popa
jge
sub
xor
cmp
mov
cli
sbb
add
aaa
and
mov
movs
push
mov
test
(bad)
std
in
iret
daa
cdq
fbld
xlat
and
mov
(bad)
sub
adc
push
in
xor
sbb
and
and
push
add
pop
popf
lea
mov
add
fcom
cdq
mov
stc
jnp
push
in
inc
call
cmp
pop
shl
cmp
push
es
inc
xor
mov
push
(bad)
push
loopne
fnstenv
fsubr
cmp
add
fs
push
cmps
in
ja
in
and
icebp
inc
ins
shl
pshufw
sbb
push
cmp
xchg
push
xchg
ins
out
in
adc
push
aas
xchg
mov
cmc
fisttp
daa
add
cli
push
add
out
lods
out
or
xchg
mov
retf
mov
and
daa
shl
push
lock
push
push
or
sbb
leave
push
mov
mov
(bad)
fmul
das
outs
mov
jno
sbb
cwde
mov
sbb
mov
adc
test
mov
mov
xchg
xchg
cli
xor
inc
push
sub
fcmovnbe
jle
std
mov
mov
inc
leave
ret
sub
jns
fnstcw
push
xchg
cmps
sbb
jle
jmp
in
pop
push
int3
retf
in
repnz
jmp
imul
sbb
cs
cli
xor
bound
fistp
rcr
test
out
inc
nop
lahf
fld
jno
push
pushf
aas
iret
jmp
push
mov
call
mov
add
ss
loop
clc
ficom
out
pop
repz
xor
test
shl
jmp
add
xchg
lods
(bad)
cmc
cmps
sub
cld
out
pop
xchg
cmp
out
sub
fnstcw
jp
jne
stc
push
jge
push
in
xor
pop
call
mov
ja
jne
push
and
xchg
cmp
sbb
and
push
pop
out
(bad)
inc
adc
ret
jbe
dec
mov
lahf
nop
ins
push
cmp
stos
mov
fcomp
and
dec
dec
out
jmp
int
add
jno
mov
jle
sahf
iret
xor
mov
dec
cmc
xchg
fadd
jge
test
xlat
adc
out
push
int3
(bad)
adc
(bad)
sub
js
mov
iret
popf
mov
push
aas
or
and
inc
imul
int
pushf
push
jb
in
pop
or
pop
nop
xchg
inc
cwde
scas
and
out
add
daa
add
pop
xchg
inc
rcr
mov
push
add
xor
jno
out
push
mov
push
cmp
xor
mov
cs
mov
outs
je
cmp
sub
ror
dec
mov
cmps
pushf
xor
ret
movs
call
gs
inc
dec
cmp
mov
adc
mov
mov
nop
adc
mov
popa
jnp
mov
movs
jmp
pop
arpl
add
dec
fucom
(bad)
fcomi
xor
mov
or
sub
aam
gs
jg
loop
std
fist
dec
and
lahf
test
adc
jecxz
scas
adc
div
push
fadd
pop
jno
push
lea
sahf
lods
cmp
popf
jp
push
sub
pop
inc
mov
mov
push
sub
ds
mov
lods
push
pop
mov
jmp
cmp
fmul
pop
jl
(bad)
pop
pop
sub
fisttp
push
jl
movs
aad
jne
outs
aas
pop
sbb
fwait
pushf
(bad)
fidiv
int
in
push
jle
mov
add
xchg
(bad)
in
ret
dec
call
das
out
jl
xchg
sbb
push
fwait
dec
mov
jnp
push
aad
call
fnsave
sbb
push
stos
mov
pop
mov
inc
xlat
jmp
sub
ror
or
mov
inc
loop
call
out
pop
frstor
xchg
cmps
cmc
fcom
push
and
aam
push
and
jge
test
add
jno
cmp
(bad)
out
or
hlt
jne
fwait
pushf
jbe
jne
xlat
jo
cmps
jo
leave
or
loopne
hlt
adc
add
push
pop
(bad)
jp
inc
das
xor
rcl
pop
push
fbstp
push
push
rcl
aaa
rcl
mov
or
add
mov
fwait
mov
(bad)
jnp
xchg
dec
inc
pushf
mov
push
(bad)
mov
std
inc
out
or
call
sbb
add
mov
jmp
std
mov
inc
dec
or
ins
inc
pop
xchg
call
lea
mov
xlat
adc
bound
rcr
sbb
das
pop
mov
dec
movs
ss
(bad)
xlat
mov
loope
or
mov
mov
inc
pop
and
in
test
jo
mov
enter
or
jmp
xchg
out
or
sbb
mov
xchg
mov
ret
cmps
dec
xor
push
mov
xor
lahf
rcr
out
repz
push
rol
and
ja
fmul
retf
jg
jb
add
adc
cmc
push
out
sti
pusha
jmp
dec
js
ja
jecxz
icebp
push
repz
xor
movs
int
jmp
cmp
out
retf
push
cwde
push
cmp
les
fstp
das
cmp
pop
ja
pop
pop
mov
jo
sbb
jmp
fs
cmp
out
in
pop
mov
mov
ss
and
fmul
ds
mov
xor
xor
jno
(bad)
xor
pop
aas
icebp
jnp
out
push
enter
jae
sti
mov
test
fs
outs
xchg
mov
pop
aad
jo
push
push
dec
pop
rol
sub
pushf
push
jae
pop
and
mov
jbe
mov
test
lds
pop
jmp
stc
outs
shl
enter
or
out
outs
and
inc
add
adc
or
cmc
rcr
clc
jo
repnz
rcl
scas
add
or
sub
ins
inc
cmp
jns
pusha
pop
jecxz
jmp
sbb
stos
(bad)
lods
jmp
sbb
push
outs
sub
lock
push
and
xor
xchg
data16
jae
test
dec
imul
shl
je
and
or
adc
stc
int3
cs
out
repz
push
add
sub
dec
and
mul
scas
into
lods
js
push
(bad)
stc
out
out
adc
cmp
jne
outs
xchg
sub
xchg
dec
sub
pop
jmp
inc
mov
loope
mov
movs
leave
ja
cmp
inc
clc
ins
cmp
fsub
push
fmul
inc
psadbw
iret
push
or
mov
icebp
adc
mov
outs
in
das
loope
test
sbb
loope
lds
call
xlat
imul
jmp
call
test
xlat
xchg
push
ss
push
js
add
repz
ret
les
jnp
push
inc
fiadd
nop
enter
inc
bound
(bad)
jmp
or
lock
mov
mov
test
inc
aad
pop
out
or
add
iret
pop
push
cmps
shr
(bad)
retf
or
adc
loop
into
cdq
out
mov
sbb
(bad)
div
(bad)
cmp
and
cmp
xor
fcompp
and
enter
cmp
xchg
test
push
leave
push
mov
rcl
pop
popa
cmc
cmps
inc
cmc
je
rol
inc
mov
stos
dec
mov
pop
adc
cmp
jp
dec
mov
add
sbb
adc
xor
jmp
pop
fmul
ds
rcl
jns
add
mov
and
vpshufd
mov
push
cmp
out
push
clc
xchg
sbb
or
jl
inc
cmp
(bad)
test
and
sub
add
dec
sub
in
loope
int
fistp
xchg
inc
je
pop
fldcw
mov
xor
pushf
inc
add
inc
hlt
ja
pop
push
or
adc
dec
xor
rcl
test
pop
jp
imul
fst
loop
cmp
int
cs
mov
sub
xchg
mov
jmp
lea
outs
jmp
call
pop
(bad)
mov
xchg
or
shl
jl
jno
jae
push
aad
xchg
pop
jmp
pop
push
and
jae
adc
retf
out
stos
jmp
out
fwait
sbb
inc
imul
imul
das
push
sar
add
rol
std
add
rol
sub
mov
outs
or
jecxz
aas
(bad)
cmc
jne
test
loopne
repnz
push
test
push
enter
jmp
jnp
and
popa
shl
test
xor
mov
leave
mov
xchg
cdq
movs
jns
daa
mov
and
push
pop
ja
or
or
cli
shl
cmc
and
(bad)
in
ins
add
stos
pop
mov
out
xchg
out
sbb
fld
mov
dec
pop
dec
xchg
xor
push
int3
ret
xchg
sbb
push
int
hlt
and
std
rol
mov
xchg
call
xchg
pop
loopne
lock
jl
dec
jo
and
lea
pop
fadd
jg
loop
cmps
jmp
xor
add
push
in
popf
mov
outs
jnp
xchg
mov
jo
ja
ins
(bad)
mov
popa
je
mov
inc
(bad)
mov
mov
jb
xchg
inc
imul
lods
(bad)
rcl
jns
mov
sub
xor
adc
aad
enter
or
push
push
(bad)
pop
adc
mov
jo
or
jo
mov
push
addr16
mov
pop
cmps
and
push
jmp
leave
dec
addr16
cmc
loop
(bad)
int3
pushf
iret
pop
and
xchg
sub
ror
push
dec
retf
daa
shl
scas
dec
and
into
or
(bad)
pop
ror
sbb
add
lods
out
push
bound
dec
clc
ret
sbb
sbb
pop
mov
pop
inc
(bad)
fadd
push
adc
enter
jmp
jo
js
je
movs
pop
not
fucomp
mov
fistp
cmps
rol
cmp
push
in
sub
jno
dec
add
xchg
ins
stc
push
pop
les
(bad)
jmp
cmp
mov
push
sti
cmps
and
xchg
mov
jae
fwait
fwait
popa
aaa
(bad)
sbb
ins
sub
aas
xor
pop
pop
add
mov
repz
pop
enter
nop
adc
or
adc
popf
jmp
call
jns
cmp
sub
pop
xchg
(bad)
ficom
and
ss
xchg
mov
pop
js
imul
add
das
mov
mov
clc
mov
pop
das
mov
shl
fwait
rol
push
sub
jbe
adc
into
add
or
loop
fsub
cwde
mov
fisub
push
call
lods
push
hlt
inc
sub
mov
jg
inc
jl
and
mov
outs
inc
push
xchg
in
iret
mov
loope
call
mov
lahf
ret
arpl
mov
mov
adc
inc
xchg
aas
sbb
into
pop
imul
ret
shl
pop
cmp
jnp
jmp
push
push
pushf
mov
jbe
iret
xor
es
dec
repnz
iret
adc
rcr
mov
sub
(bad)
mov
cmp
sbb
push
daa
cli
inc
mov
bound
nop
dec
mov
xlat
(bad)
retf
popf
cli
xchg
fsubr
pop
int3
cld
nop
mov
push
cmp
lods
clc
test
sbb
xor
dec
dec
in
jnp
sahf
add
jno
mov
rcl
or
xchg
(bad)
or
addr16
xor
loopne
test
in
loop
push
cwde
add
into
push
adc
sbb
pop
(bad)
int
add
retf
sbb
or
cmp
and
repnz
test
mov
ins
retf
adc
adc
add
xor
push
vprotd
adc
or
into
imul
dec
popa
clc
jecxz
jo
les
sub
aas
cmp
idiv
loopne
inc
cmps
mov
xchg
fld
and
push
dec
cli
imul
mov
(bad)
in
mov
mov
add
test
addr16
adc
jb
dec
hlt
(bad)
shl
cmc
sbb
call
xor
mov
rcl
fsub
mov
rcr
out
cmp
mov
mov
pop
shl
pop
fucom
adc
push
xor
mov
sbb
xchg
bound
jo
mov
sbb
out
aad
pushf
and
mov
fsubr
mov
fxch
iret
jnp
dec
jne
jle
(bad)
pop
mov
stos
cmp
dec
sar
lahf
inc
pop
js
push
lods
mov
adc
sub
or
and
into
test
pop
pop
xor
(bad)
mov
or
xchg
mov
mov
jecxz
repnz
mov
sar
test
div
aad
or
test
or
leave
or
inc
jns
stc
pop
and
dec
das
movs
jmp
xor
sbb
leave
sub
lds
out
sbb
pop
sub
jae
les
loop
mov
popa
test
dec
jbe
pushf
or
dec
stc
xor
das
lds
or
mov
lahf
in
into
cmp
out
shr
sar
in
iret
aaa
dec
add
cwde
call
mov
mov
jecxz
add
xor
pop
ret
ins
cmp
ds
fild
rcr
xchg
mov
sub
sub
sbb
add
xor
push
sbb
shl
in
adc
cli
(bad)
push
iret
mov
mov
jmp
shl
out
jnp
imul
sbb
ss
dec
mov
fucomip
mov
cmp
clc
test
(bad)
and
call
push
pop
mov
push
movs
inc
xchg
inc
dec
dec
sub
dec
arpl
(bad)
lock
xchg
and
mov
call
in
adc
call
out
shl
ret
and
xor
push
test
loope
jp
jl
rcl
or
xchg
adc
repz
mov
aam
and
out
pop
dec
jno
addr16
aad
jno
(bad)
imul
mov
push
cs
aas
mov
movs
or
adc
stc
leave
xor
sar
mov
and
ins
(bad)
fwait
add
fisubr
or
push
jno
and
call
int3
dec
push
push
dec
add
xlat
fucomip
movs
nop
mov
fsubr
sbb
mov
daa
dec
aaa
jle
push
xor
test
jge
cmc
pop
push
jae
mov
loopne
popf
fadd
adc
mov
fsub
in
(bad)
outs
or
adc
outs
repnz
add
shl
fdivr
and
shl
dec
mov
aad
push
fldcw
dec
add
jmp
dec
sub
(bad)
int
aam
dec
stos
mov
and
push
inc
jns
dec
jnp
call
fadd
mov
(bad)
xor
adc
leave
or
ins
rcr
xchg
inc
cmp
and
std
out
mov
cmp
cmp
retf
mov
xlat
mov
xor
mov
pop
fidivr
push
or
add
cmp
jns
shr
test
pop
cmp
js
jg
pop
inc
scas
xchg
outs
pushf
dec
rcr
sbb
les
dec
fnstenv
dec
es
sbb
mov
cld
sahf
loop
fcmovb
cmp
fcmovnu
mov
push
jg
pop
rcl
mov
js
int
shl
lea
add
pushf
fild
aaa
jnp
lods
ror
pop
outs
add
xor
ins
inc
cmps
mov
ins
push
fsubr
(bad)
mov
fild
call
sbb
xchg
sbb
or
sbb
jmp
mov
sub
mov
sbb
imul
ror
mov
mov
mov
js
arpl
dec
vmovq
stc
and
sub
mov
or
enter
xlat
cwde
push
sti
add
ret
mov
mov
int
adc
add
lods
cmc
lods
sub
idiv
loopne
fistp
out
inc
mov
xchg
punpckhbw
pop
ja
out
aam
jge
inc
mov
sti
aad
pop
mov
inc
jae
cmp
imul
fwait
add
adc
mov
mov
out
bound
sbb
das
outs
mov
lods
adc
or
pop
xchg
(bad)
or
out
lods
mov
mov
sub
push
push
xchg
jo
in
int
inc
mov
sub
add
enter
loope
and
mov
stc
repz
sbb
pop
ins
or
ss
es
test
push
cmps
jb
lods
cmp
adc
push
addr16
jmp
mov
aad
loope
out
pminsw
inc
ja
jns
jmp
push
out
cs
retf
dec
add
sbb
cmc
and
jg
cmp
mov
inc
add
pop
xor
inc
xor
ja
mov
pop
mov
scas
int3
push
push
popf
push
xchg
sub
jl
pushf
inc
pop
aad
ss
inc
sub
adc
xchg
(bad)
mov
scas
mov
movs
xor
inc
add
iret
(bad)
adc
jb
sub
pop
movs
fbld
loopne
jb
sub
pop
pop
mov
dec
jbe
loope
sbb
test
xor
push
mov
dec
push
adc
adc
int3
cmp
push
es
dec
sbb
xchg
cmps
(bad)
stc
(bad)
pop
jle
lock
push
dec
or
pusha
js
dec
mov
or
scas
test
loop
and
mov
cmp
cmps
xchg
iret
shl
clc
cmp
mov
enter
inc
mov
and
fcmovu
push
xor
pushf
or
push
es
xchg
fwait
mov
pop
mov
fcmove
push
(bad)
inc
movs
stos
pop
pop
in
mov
shl
push
bound
fs
jecxz
add
fstp
push
enter
les
(bad)
jge
movs
and
repnz
sbb
jle
pop
outs
scas
sti
or
add
jae
dec
push
cmps
inc
mov
adc
out
loop
push
and
ss
add
call
inc
push
push
clc
inc
pop
mov
jo
ror
jmp
add
push
xor
xor
mov
pop
pushf
ds
mov
out
sub
and
add
repz
xor
retf
pop
dec
push
sar
xor
mov
cld
out
hlt
and
xchg
js
out
into
nop
add
mov
cwde
retf
add
int3
cld
imul
add
pop
in
or
ss
movs
bound
push
push
mov
mov
and
adc
dec
mov
push
mov
inc
mov
fistp
adc
out
mov
maxps
push
ins
inc
gs
cmp
pop
mov
jnp
daa
je
in
lods
call
sar
push
mov
fldenv
pop
int3
stos
push
scas
add
sbb
int3
and
loope
xchg
iret
mov
cmp
cs
dec
sub
push
cmp
cmp
mov
or
cmps
mov
test
cmp
adc
jb
inc
jle
sub
and
daa
sbb
inc
enter
call
ret
xor
cmp
and
sti
sbb
mov
add
cmp
pop
and
mov
fcmovbe
int
pop
inc
gs
or
jp
retf
test
imul
in
sbb
shr
loop
cmps
pop
sar
lea
mov
sbb
in
xor
les
aam
cli
mov
add
mov
mov
mov
popf
jnp
into
fdivr
sbb
pop
fist
push
(bad)
and
ret
xchg
mov
mov
add
in
adc
fdivr
test
or
sar
mov
jmp
pop
sbb
call
mov
or
push
jmp
add
xchg
pop
xor
mov
fsubr
add
daa
sub
sahf
add
sub
push
mov
dec
into
lahf
mov
push
jnp
lahf
cmp
jg
or
adc
or
xchg
and
xchg
inc
adc
adc
int3
adc
mov
xchg
add
cmp
inc
test
cmp
jle
or
icebp
imul
neg
sbb
jmp
push
push
pop
push
cmp
sub
imul
xlat
add
std
jp
adc
jae
lods
aaa
add
repz
pop
call
(bad)
mov
ror
in
int
inc
stc
or
(bad)
cmp
jg
test
pushf
mov
mov
out
xchg
and
inc
retf
or
cmp
icebp
pop
jle
push
push
aam
int
(bad)
cwde
pop
lods
xchg
sbb
inc
pop
test
pusha
mov
into
or
dec
fwait
jne
add
adc
pop
pop
xlat
outs
jmp
or
adc
and
jmp
fild
int3
loop
adc
cwde
mov
into
xor
inc
xlat
mov
mov
xchg
sbb
sub
test
fdivr
push
shl
mov
jge
cmp
jge
pop
jb
cmp
add
out
lock
inc
dec
jg
fstp
mov
mov
pushf
lock
mov
shl
mov
mov
vmovaps
rcl
scas
imul
sub
pminub
movs
nop
and
sub
and
(bad)
jecxz
mov
aad
push
lock
fwait
mov
stc
popf
mov
fcmovnu
sub
div
loope
push
in
jge
rcl
loope
and
cmp
sbb
shl
cmp
icebp
jns
fisubr
shl
dec
call
push
dec
pusha
push
mov
scas
and
aas
jp
mov
add
fcomp
retf
jp
sbb
int3
pop
sti
push
jnp
fnsave
and
sahf
scas
jne
cmp
mov
retf
es
pop
test
call
out
pop
xor
loope
popa
push
pop
xor
sbb
lahf
scas
push
in
enter
xchg
add
loop
push
movs
pop
adc
nop
xor
mov
call
pusha
sbb
mov
arpl
sti
cmps
mov
cmc
cmp
mov
pushf
pop
dec
pop
inc
test
dec
retf
pop
and
pop
in
pop
xor
idiv
inc
xor
sub
pop
lods
sub
xor
inc
sbb
retf
repz
xchg
clc
outs
pop
clc
test
test
sub
xor
pop
and
dec
pop
mov
jo
jno
mov
mov
test
mov
scas
mov
sbb
test
call
lds
push
mov
adc
cli
cdq
scas
iret
push
xor
adc
daa
test
adc
push
int3
add
add
in
bound
push
mov
hlt
dec
cdq
fidivr
mov
leave
mov
mov
pop
cmp
sub
clc
sub
mov
mov
xor
fstp
mov
dec
aam
cmp
jnp
mov
inc
jmp
aas
sub
inc
in
dec
adc
lods
dec
mov
push
sbb
fadd
mov
pop
add
push
adc
push
sbb
sti
xchg
jne
fdiv
clc
in
dec
(bad)
outs
ins
pop
lahf
and
mov
mov
sub
daa
bound
xchg
cld
popf
scas
push
pop
cdq
pop
sbb
add
sbb
mov
in
inc
(bad)
fiadd
mov
lea
xchg
xchg
ss
lods
(bad)
les
shr
jns
adc
pop
mov
out
and
int3
jle
iret
repz
loope
mov
outs
int3
out
push
pop
aas
inc
sbb
dec
add
fimul
into
cwde
sub
xor
jge
mov
adc
pop
frstor
mov
mov
dec
addr16
icebp
pop
iret
dec
mov
in
pop
or
sub
add
test
fcomp
bound
or
pushf
jb
popa
pushf
sub
stos
add
aam
push
(bad)
sub
sbb
mov
xor
in
shl
ja
push
jge
pushf
push
pop
push
inc
sub
cmp
adc
loopne
jne
fdivp
xchg
inc
mov
inc
push
std
sbb
ins
xor
pushw
loopne
mov
mov
fstp
enter
imul
arpl
icebp
pop
inc
ds
out
ins
mov
sti
cmp
dec
jo
lds
push
push
mov
adc
addr16
jecxz
xchg
adc
mov
add
xchg
rol
fist
(bad)
in
push
mov
pop
hlt
jns
adc
push
pop
sar
xchg
xor
xchg
xor
mov
inc
xchg
int
cmp
test
inc
inc
call
dec
push
and
imul
addr16
out
mov
loope
cmp
mov
push
push
dec
test
jecxz
(bad)
sub
or
mov
aam
mov
adc
dec
icebp
aam
or
or
aaa
scas
pop
clc
mov
lods
stos
mov
xchg
call
test
xchg
mov
cmc
div
into
idiv
pop
sub
outs
cmp
cmp
mov
lock
cdq
or
add
cmps
cmp
outs
sbb
mov
and
out
mov
pop
sub
stc
dec
not
mov
sar
xor
inc
cwde
inc
push
(bad)
nop
mov
pop
mov
sbb
das
pushf
fxch
xchg
(bad)
and
jmp
ficom
push
(bad)
in
je
popf
frstor
sbb
(bad)
repz
push
lahf
dec
cmp
mov
idiv
sub
fidiv
in
mov
xor
hlt
mov
fistp
sti
dec
or
(bad)
lods
xchg
add
sbb
xchg
push
adc
(bad)
fcmove
jge
or
dec
scas
push
mov
and
aad
jmp
xlat
scas
fs
adc
fidiv
jg
inc
push
sti
into
xor
xor
cmp
sti
mov
mov
sbb
xchg
mov
enter
pop
cwde
add
jg
outs
bound
sbb
push
adc
sti
adc
xchg
loop
mov
imul
cmp
xchg
lahf
and
test
fst
les
jg
xchg
or
lock
mov
jbe
test
pushf
jae
mov
xchg
sub
inc
sbb
and
in
leave
pop
sbb
pop
and
push
outs
pushf
daa
or
jp
jle
or
xlat
lds
push
stc
(bad)
fistp
mov
stos
jb
aaa
in
sub
push
test
cmc
into
mov
or
out
push
in
add
add
push
and
or
gs
std
arpl
cld
call
test
mov
in
sub
aaa
adc
sub
push
in
es
add
(bad)
push
or
push
movs
ficom
imul
sub
es
pop
pop
fs
dec
dec
push
cmp
jbe
and
inc
xor
(bad)
cmp
sar
je
mov
daa
sbb
cmc
stc
jno
stc
das
(bad)
rcl
xchg
xor
popf
pushf
icebp
dec
push
jo
and
cmps
aad
adc
(bad)
push
test
repz
in
addr16
lods
xor
sbb
loopne
retf
and
dec
(bad)
ins
jmp
sahf
adc
addr16
jnp
xor
in
fxch
or
popf
ficomp
movs
push
xchg
dec
mov
scas
out
inc
(bad)
aad
imul
push
dec
dec
popf
push
fisub
add
test
push
adc
(bad)
cmc
push
arpl
xor
and
or
jg
dec
(bad)
das
shl
mov
xor
jge
pop
mov
sbb
(bad)
mov
fimul
xor
nop
pop
add
mov
imul
sub
leave
fdiv
mov
fcom
jge
es
push
adc
or
or
ins
mov
sub
(bad)
mul
push
fcomp
mov
idiv
movs
mov
sti
dec
xor
repnz
adc
dec
dec
jg
jmp
mov
pushf
xchg
and
xor
stos
xor
push
mov
hlt
outs
push
push
mov
push
ret
mov
test
lods
lods
enter
pop
mov
push
out
test
adc
jmp
cli
fcomp
push
dec
pop
push
sbb
jnp
jns
(bad)
dec
es
in
fcomip
daa
jmp
add
jp
aam
sar
jno
jno
cmps
mov
fs
das
ins
inc
sub
dec
push
clc
mov
sti
add
sahf
sub
inc
and
arpl
cmp
or
xor
sbb
fiadd
push
(bad)
mov
or
xor
dec
pop
xchg
push
jle
ret
jecxz
xchg
bound
sar
std
dec
inc
add
retf
cmp
aaa
pop
gs
cmp
cmps
fistp
fs
mov
jecxz
data16
xchg
sar
mov
test
repz
cmp
sub
xchg
push
lods
neg
mov
ror
sub
lahf
fs
or
xchg
cmp
out
cwde
scas
enter
mov
mov
call
pop
inc
inc
fsubr
adc
mov
add
cld
push
lods
rcr
movs
movs
mov
or
xor
mov
stos
enter
pop
push
cld
adc
scas
xchg
jb
jmp
lock
pushf
out
retf
or
push
xchg
push
add
pop
pushf
xchg
jl
leave
mov
xchg
or
push
mov
cmps
pop
or
and
repz
(bad)
(bad)
adc
mov
inc
hlt
cmp
rol
xchg
popf
push
add
cmp
mov
inc
inc
out
or
jle
sub
pop
shr
mov
inc
inc
inc
repnz
aam
sub
lods
stc
or
xchg
retf
repnz
pop
stc
arpl
xchg
test
or
dec
push
pop
xchg
fisub
stc
xlat
fisub
cmp
add
stos
sbb
sub
gs
push
int
or
cmps
xchg
into
fs
outs
pop
jne
push
mov
mov
adc
nop
pop
lea
cdq
jae
push
imul
ret
imul
fs
out
test
leave
ss
shl
and
sub
ds
push
imul
arpl
mov
mov
adc
inc
imul
mov
xchg
sahf
cld
icebp
sbb
xor
lahf
push
or
sbb
push
fcomp
inc
arpl
(bad)
imul
fsubp
mov
test
shl
aas
outs
fdivr
jns
sar
nop
div
jp
adc
xchg
leave
dec
mov
aam
pop
jge
ja
aas
outs
(bad)
cmp
pop
imul
and
xchg
push
push
sbb
mov
inc
mov
adc
mov
bound
cmp
jae
push
push
mov
add
cmp
mov
or
pop
in
add
jecxz
sub
mov
gs
mov
inc
sti
or
inc
pop
inc
scas
dec
fs
shl
bound
push
xchg
mov
das
inc
faddp
fwait
popa
pop
dec
les
jae
xor
stc
(bad)
stos
mov
cmp
inc
std
push
cld
cmp
loope
dec
mov
fcomip
sub
adc
dec
cmp
adc
add
dec
push
or
imul
retf
add
adc
cld
int3
xor
repnz
jne
fwait
sbb
cmp
mov
pop
xchg
sub
je
in
popa
movs
mov
sub
mov
fld
jmp
int3
mov
jg
inc
int
mov
aaa
mov
icebp
sbb
sar
test
push
sub
cwde
aam
xchg
(bad)
in
xchg
outs
repnz
push
loope
mov
jecxz
push
fld
bound
mov
cwde
lahf
pop
xor
jle
cs
xchg
mov
sbb
(bad)
jmp
mov
pop
arpl
cld
pop
pop
pop
mov
cdq
out
test
add
fabs
in
adc
pushf
rol
jno
es
inc
repz
cmp
pop
and
cwde
xchg
push
lods
or
xor
(bad)
cmp
ss
push
test
jae
cmc
sub
lds
push
mov
push
ins
lods
cmps
addr16
fs
scas
mul
aad
mov
iret
xor
loopne
ins
daa
test
jmp
cwde
inc
repnz
sbb
fldcw
dec
push
adc
retf
mov
pop
sub
leave
dec
loopne
pop
cmp
ins
inc
xor
jmp
(bad)
mov
out
sbb
stos
sub
outs
jl
mov
push
in
cmp
sbb
nop
push
fucom
in
pop
adc
inc
sti
repnz
in
pusha
jmp
pop
test
out
cmc
push
jmp
loope
add
inc
cmp
push
mov
mov
cwde
mov
test
data16
adc
rcr
sti
xchg
stc
xchg
repz
xchg
sar
es
or
adc
inc
leave
add
int
mov
sbb
cmps
xchg
(bad)
mov
outs
adc
xor
push
inc
sbb
sub
mov
xor
cwde
adc
cmp
in
mov
mov
pop
pusha
fs
cmp
adc
pop
xchg
jae
aad
and
and
sbb
into
jns
lahf
aam
push
nop
iret
jbe
add
retf
movs
(bad)
test
pop
push
ucomiss
movs
pop
add
repnz
mov
mov
(bad)
sub
xchg
jmp
mov
jbe
pop
lock
dec
ficomp
jnp
dec
xlat
xchg
bound
cmp
jns
adc
jmp
or
pop
pop
les
sbb
pop
fild
data16
in
and
push
ins
mov
scas
mov
aad
or
int
or
call
push
push
lds
test
outs
retf
xchg
sar
test
fsubr
bound
jmp
push
ja
mov
pop
test
fnstcw
add
xchg
and
xchg
not
lahf
mov
push
sub
test
jl
addr16
and
jg
pop
xor
jg
mov
leave
aaa
and
mov
cmp
add
xor
and
test
mov
sub
ja
add
and
rol
fs
push
imul
mov
mov
xor
xchg
push
retf
xchg
inc
aaa
xchg
and
scas
or
popa
mov
lahf
sbb
loope
jmp
mov
movs
out
and
fdivr
stos
xor
into
outs
inc
push
cmp
cli
test
cli
outs
sub
es
fld
push
adc
ja
jl
cwde
shl
and
dec
mov
inc
and
pop
sub
adc
fldcw
sub
add
dec
xor
movs
push
lea
adc
fwait
mov
rcl
or
lea
and
dec
pop
fbld
mov
dec
inc
push
mov
add
mov
or
loop
addr16
cmp
popa
sub
loope
mov
mov
dec
mov
js
inc
repnz
xor
imul
inc
call
sub
int
aad
adc
or
scas
cld
in
sub
lods
mov
cwde
fcom
or
or
retf
jecxz
xor
push
or
xor
daa
cmp
xchg
jns
ja
cmps
xor
and
and
and
clc
mov
mov
and
sbb
stc
pop
fst
push
shl
(bad)
mov
push
mov
cmp
push
jle
pop
pop
adc
shl
int
int
in
mov
xchg
inc
daa
std
scas
mov
adc
xchg
aas
aam
sbb
xor
inc
lds
lock
loop
mov
daa
mov
mov
aad
xor
jb
sar
dec
rcl
or
cmp
inc
pop
jbe
jae
dec
lea
push
mov
add
jmp
dec
aad
div
and
jecxz
dec
push
mov
sub
xchg
in
sub
gs
cmps
cmp
int
aam
push
pop
and
and
cdq
(bad)
sbb
mov
inc
inc
nop
adc
dec
xor
sub
sbb
clc
fs
xor
leave
sbb
xor
push
pop
cmp
adc
xor
mov
je
xor
push
push
add
enter
sub
xchg
imul
xlat
jns
outs
mov
enter
frstpm(287
imul
adc
ja
cmc
adc
movs
aas
add
daa
lahf
add
stc
xor
sbb
xchg
jbe
test
cmp
xchg
jp
(bad)
retf
repz
sub
add
in
adc
shl
pop
mov
out
and
inc
xchg
mov
mov
sub
movs
mov
mov
mov
movs
loop
mov
add
rcl
and
outs
mov
push
dec
add
xchg
xchg
cmps
sub
push
or
test
int3
inc
and
fsubr
in
mov
jae
and
pusha
mov
sbb
xor
mov
aaa
mov
inc
imul
pop
ret
adc
es
ins
loop
rcl
bnd
lahf
js
imul
xlat
rol
xor
test
mul
data16
jle
xor
adc
jns
shr
add
cmp
xchg
mov
sub
stos
push
es
mov
ret
xlat
push
xchg
dec
cli
add
mov
pop
pop
jbe
loop
add
push
rcr
inc
in
loopne
add
test
retf
hlt
retf
call
jle
div
and
add
and
shl
mov
test
in
sar
mov
jmp
add
retf
popa
or
mov
rol
daa
ret
fiadd
arpl
pop
inc
or
jb
js
sub
es
sbb
mov
sub
(bad)
push
push
cmps
fdiv
pop
rol
mov
cmps
dec
mov
push
xchg
push
mov
fild
imul
push
adc
and
dec
and
stc
mov
cs
pushf
adc
cmps
loope
mov
jmp
iret
and
pop
jo
popf
and
mov
cmp
jge
ins
movs
xchg
rcl
shr
shl
std
jmp
mov
or
pop
or
shl
push
push
dec
out
mov
and
xchg
(bad)
rol
and
xor
and
mov
xor
js
push
ret
or
dec
xchg
daa
ret
call
(bad)
aad
(bad)
adc
mov
pop
stos
in
push
aad
popf
test
in
in
enter
and
mov
imul
cmp
pop
mov
ins
out
imul
mov
jns
stc
push
(bad)
mov
jmp
mov
mov
jg
ror
int
push
mov
lock
mov
xor
push
scas
adc
(bad)
ins
fs
push
sbb
mov
or
gs
shl
(bad)
aam
fdivr
or
push
icebp
jmp
pop
repz
push
jno
hlt
add
dec
ins
push
sbb
and
arpl
in
sahf
push
dec
mov
push
adc
es
ret
mov
inc
mov
push
nop
lods
out
dec
cmps
mov
or
xor
out
sbb
adc
popf
out
mov
or
mov
test
mov
cmc
xchg
stos
(bad)
in
mov
sub
cmp
push
loop
push
fistp
adc
sbb
dec
out
xchg
std
lods
push
scas
fld
cmc
pop
sbb
test
and
stc
pop
out
mov
push
push
xlat
cmc
add
or
or
cdq
dec
sti
(bad)
rcl
outs
inc
lds
dec
push
jle
retf
or
mov
popf
xor
jno
fdivr
jb
add
sub
test
lods
dec
sahf
mov
call
sub
add
dec
push
push
test
mov
mov
sbb
mov
pop
shl
loop
or
push
mov
sbb
into
cmps
push
push
jo
scas
mov
cmp
add
cdq
mov
jns
or
int3
and
dec
outs
push
jge
xchg
xchg
dec
adc
ss
fisttp
sar
push
out
pushf
and
jl
popa
adc
pusha
cmp
sbb
mov
popf
int3
mov
fisttp
cmp
and
mov
xchg
scas
cmp
pop
push
retf
retf
repnz
cmp
ja
and
aad
rcl
shl
test
jecxz
push
int3
mov
xor
aas
stos
mov
or
dec
lock
jbe
pop
int3
pop
test
cmps
je
push
ss
fidiv
or
icebp
cli
shl
cdq
lods
outs
jmp
mov
imul
mul
pop
imul
cmp
pop
jge
xor
jl
retf
inc
loopne
xlat
xor
sbb
ror
repz
xchg
js
stos
and
or
push
mov
jnp
rep
xor
or
cli
and
fmul
outs
mov
and
fidiv
push
fisubr
arpl
xor
push
sti
mov
adc
adc
mov
jo
dec
inc
aam
mov
in
enter
pushf
add
(bad)
mov
ficom
fnstsw
or
call
xchg
push
mov
es
loopne
mov
mov
hlt
repnz
imul
xchg
xor
imul
pop
dec
or
mov
mov
xchg
js
test
cmps
ds
sar
xor
cmp
ss
adc
fnstenv
pop
mov
or
nop
test
scas
pop
into
(bad)
jecxz
jbe
lods
pop
add
push
sbb
ins
sti
call
pop
sbb
mov
leave
nop
in
repnz
mov
in
mov
mov
icebp
and
in
lock
pop
pop
push
mov
cmp
in
mov
jne
jbe
sar
xor
dec
pop
mov
scas
icebp
sub
cmp
cmps
gs
psraw
xchg
pop
sbb
aam
jl
ins
and
jle
pop
das
mov
mov
fsubrp
mov
pop
shufps
lock
fnstenvw
sbb
sub
(bad)
in
jmp
cmps
push
imul
gs
dec
xor
mov
leave
ficom
arpl
jo
fbstp
mov
dec
outs
es
clc
pop
sbb
je
ret
shl
loopne
mov
xchg
retf
jno
lods
fdivr
das
lods
pop
add
xlat
jl
jns
fist
sbb
ds
and
(bad)
push
jmp
jno
js
xor
pop
xor
dec
push
push
adc
adc
rcl
push
dec
push
outs
and
aam
(bad)
shl
push
and
xor
ja
push
xor
dec
imul
xchg
(bad)
gs
aad
xor
inc
mov
pop
movs
dec
jnp
xchg
cdq
mov
jmp
push
mov
sbb
inc
addr16
cmp
add
dec
sbb
les
(bad)
adc
pop
in
imul
retf
xchg
mov
icebp
pop
jp
(bad)
cmp
bound
imul
(bad)
mul
bound
loope
int
mov
cmp
test
es
push
lahf
ins
jo
cmp
xchg
adc
add
imul
call
out
jo
stos
out
inc
jp
(bad)
scas
and
ja
sahf
sbb
test
sub
out
inc
int3
add
push
mov
jbe
sbb
pop
hlt
lock
aaa
outs
and
popf
inc
mov
pop
mov
cmps
adc
push
dec
jp
fbstp
ret
dec
or
adc
and
cld
adc
(bad)
jns
repz
aas
call
xchg
cmps
mov
cli
dec
pop
adc
clc
mov
mov
dec
adc
pop
out
jmp
jmp
xor
jne
aas
mov
add
adc
(bad)
pushf
popa
gs
dec
mov
add
jns
ins
jp
mov
jp
mov
popa
jno
adc
sub
out
adc
pushf
scas
jnp
fldenv
aaa
mov
cmc
jo
and
push
rol
scas
imul
pushf
test
sti
jmp
inc
add
xor
in
cmp
sbb
mov
or
push
sub
cmp
inc
jmp
jnp
adc
stos
ds
push
movs
add
mov
push
mov
mov
pop
push
sbb
mov
dec
data16
(bad)
sbb
xlat
stc
mov
push
adc
inc
loope
add
mov
mov
cmp
or
pop
call
icebp
add
pop
jp
movs
or
aam
stos
push
mov
outs
into
xor
mov
fdiv
ja
outs
inc
or
push
sub
sub
cmp
xor
nop
mov
jecxz
(bad)
sub
popa
and
loop
sbb
jge
mov
sahf
cmp
dec
pop
adc
jl
mov
xor
xchg
movs
jbe
cmp
or
mov
adc
mov
out
or
push
pop
loopne
sbb
enter
pusha
jp
cmp
rcr
loopne
and
push
cmp
out
sub
or
gs
or
cs
jmp
aam
cld
adc
pop
fadd
xor
adc
xchg
push
shl
into
out
xor
or
inc
inc
sub
vpcmpgtb
fsub
push
mov
hlt
dec
and
push
data16
mov
pushf
ret
out
retf
(bad)
mov
pop
punpckhdq
sbb
(bad)
xchg
push
adc
jae
pushf
in
pop
sbb
ins
leave
pop
ret
nop
sbb
inc
test
mov
add
dec
inc
mov
or
inc
mov
shl
cmp
sar
xchg
popf
inc
retf
sbb
pop
das
jp
pop
add
data16
das
jae
repnz
es
ret
adc
or
adc
mov
js
push
mov
out
mov
mov
jecxz
loop
pop
icebp
fdivr
loope
mov
push
jmp
sbb
imul
in
xor
dec
loope
xor
push
sbb
mov
inc
sub
sar
sub
xchg
arpl
mov
shr
ret
das
mov
pop
les
inc
arpl
mov
pushf
jg
jns
sub
sahf
loop
loopne
cmp
sub
repnz
(bad)
mov
lea
test
popa
clc
cmp
lar
loope
call
mov
mov
mov
mov
cs
mov
cs
xchg
or
jecxz
jb
push
popf
ret
mov
and
and
jmp
adc
ds
aad
std
jmp
sub
shl
not
out
jae
stos
jne
mov
(bad)
daa
(bad)
mov
cdq
mov
dec
cwde
std
sbb
add
pop
mov
push
and
in
fistp
sub
lock
and
push
mov
rcl
or
sub
mov
fisubr
dec
mov
icebp
fidivr
xor
jb
fsubr
jp
pop
(bad)
clc
mov
gs
mov
test
mov
leave
mov
es
jo
sub
push
out
fisttp
retf
test
cwde
mov
dec
mov
dec
xor
pop
imul
mov
inc
movs
movs
int
bound
xor
add
out
aas
push
pop
pop
adc
cdq
ins
sbb
shr
pop
retf
mov
xchg
scas
and
pop
xchg
jmp
gs
pop
mov
das
inc
loopne
push
xchg
rcr
cmp
push
add
fsubr
cmc
dec
rol
push
je
cmp
mov
xchg
outs
in
add
inc
cwde
push
ror
jnp
sbb
sahf
mov
jb
imul
imul
call
sti
add
xchg
cmp
icebp
mov
into
jle
xor
mov
jl
mov
in
ja
sbb
js
lock
adc
sbb
popa
(bad)
(bad)
(bad)
fimul
or
shl
cdq
xchg
rcl
aaa
out
xchg
dec
mov
out
clc
xor
jecxz
(bad)
and
into
ds
sbb
or
mov
inc
cmp
mov
xchg
out
clc
dec
xchg
inc
jnp
pop
mov
leave
mov
and
jl
cdq
stos
dec
loopne
cwde
inc
mov
scas
cmps
sar
(bad)
ds
sbb
dec
and
xor
mul
mov
and
retf
ja
retf
cwde
dec
sub
push
push
imul
xchg
cmp
sub
aad
xor
push
(bad)
repnz
nop
aad
mov
leave
xchg
xchg
hlt
sbb
scas
sbb
gs
sahf
daa
push
repz
inc
jo
sub
js
test
adc
xchg
add
mov
adc
xchg
mov
jno
cli
push
and
add
inc
sbb
outs
call
pusha
mov
mov
and
int
mov
xlat
test
xor
sahf
pop
cmp
movs
icebp
(bad)
syscall
xchg
jno
das
aas
push
neg
fcmovbe
not
dec
test
mov
aaa
int3
iret
cs
jl
lds
mov
jbe
test
sbb
popa
add
mov
adc
fst
retf
sub
scas
hlt
mov
add
cmp
outs
test
mov
adc
iret
inc
out
mov
xchg
or
in
adc
or
(bad)
pop
in
mov
mov
stos
scas
leave
jmp
pop
sbb
inc
lock
ret
or
mov
pop
inc
pushf
pop
adc
mov
rcr
ds
adc
ja
sbb
xor
arpl
aaa
mov
jb
imul
push
fcmovbe
mov
and
(bad)
in
mov
in
xlat
add
inc
test
mov
test
sub
add
xor
lds
push
fs
ds
dec
sub
hlt
dec
pop
mov
push
mov
rcl
sti
clc
aaa
or
add
in
jne
aaa
jns
ins
lods
cli
dec
(bad)
mov
out
aaa
jg
pop
jne
jmp
ret
fild
inc
xchg
jnp
mov
mov
add
jmp
sbb
push
sahf
stos
pusha
iret
mov
aad
je
jmp
repz
clc
aad
mov
or
jge
in
cmps
mov
fimul
nop
adc
add
cmp
stos
loop
fld
stc
xor
inc
inc
sbb
mov
xor
test
(bad)
test
push
jmp
cmp
jb
(bad)
je
xchg
in
sti
xlat
popa
stos
scas
mov
ins
ret
pop
mov
cmps
mov
sbb
bnd
xchg
pop
ins
out
ds
sbb
cmp
je
lahf
(bad)
sbb
adc
cmp
ins
cwde
jo
pop
cmp
xchg
daa
lea
out
into
in
pop
ret
xchg
xor
sbb
jmp
lea
jmp
popf
and
jge
rol
pop
lods
lock
test
sub
fidiv
xchg
xchg
in
popa
pop
retf
adc
and
sbb
(bad)
retf
pop
adc
push
out
test
js
mov
out
push
sub
xor
dec
add
les
add
popf
pop
mov
fisttp
jl
(bad)
xchg
gs
jle
call
dec
add
sub
dec
xor
sub
push
or
jns
retf
pop
lods
mov
call
leave
mov
cmc
gs
fcmovbe
push
test
icebp
(bad)
mov
nop
and
push
in
outs
push
cmp
inc
mov
dec
popa
dec
pop
mov
sub
mov
stos
cmp
pop
cmps
ret
inc
shl
sbb
fild
dec
mov
mov
(bad)
xlat
xlat
jmp
mov
mov
lfs
fnstenv
cld
xor
add
push
imul
cmp
mov
cmps
cmps
std
cmps
pop
sbb
fnstsw
out
sub
push
lock
add
rcr
sbb
outs
es
ins
aam
arpl
(bad)
mov
mov
stos
in
outs
ja
retf
cli
int
mov
out
push
and
dec
les
xchg
movs
jg
fwait
rol
shl
push
scas
fcom
sbb
jns
adc
sbb
movs
pop
inc
push
fs
and
adc
add
loopne
sub
test
cmp
jb
ja
jp
jbe
int3
xor
add
jns
jmp
pop
mov
push
mov
sub
sub
adc
cmp
cwde
inc
mov
or
aaa
les
xor
movs
pop
loope
sub
pusha
jecxz
inc
xchg
or
js
pop
sbb
js
pop
push
gs
mov
adc
inc
add
fsubp
xchg
ret
cmp
retf
ret
loop
push
pop
pop
test
mov
out
(bad)
test
xchg
ins
push
(bad)
(bad)
aaa
cli
ret
fild
push
xor
mov
das
mov
call
jle
out
xchg
add
sbb
lods
std
adc
sbb
sub
lods
adc
push
(bad)
imul
mov
out
mov
gs
test
retf
inc
icebp
je
jno
mov
out
lahf
and
mov
inc
xchg
lods
into
ja
jge
xchg
fstp
xchg
lahf
outs
push
(bad)
cmps
adc
scas
popa
cmp
mov
aaa
jmp
jae
(bad)
rol
mov
dec
aas
rol
das
je
(bad)
lods
test
cmc
enter
mov
adc
cmps
sbb
(bad)
mov
add
xor
in
jae
sbb
test
and
movs
js
bound
inc
imul
gs
les
call
inc
loopne
cli
mov
jnp
sbb
dec
sub
inc
std
mov
fsub
loopne
mov
pushf
sub
retf
dec
pop
pop
stos
fild
or
xor
loopne
sahf
data16
mov
(bad)
and
outs
jmp
mov
sub
rcl
ins
jl
xor
jge
(bad)
sbb
(bad)
push
push
ss
popa
iret
mov
mov
test
enter
clc
sahf
adc
add
movs
push
and
add
mov
dec
lds
inc
xchg
mov
mov
lahf
retf
mov
and
jmp
lods
icebp
push
sbb
push
and
jg
xor
jbe
sub
(bad)
cld
sub
cwde
inc
jno
inc
pop
hlt
hlt
test
inc
push
pop
or
adc
sar
ret
and
fimul
popf
jecxz
cmp
jle
mov
inc
push
push
sbb
add
sub
ds
pusha
mov
(bad)
dec
in
sbb
popf
pop
sti
xchg
ja
jmp
aam
mov
mov
sub
inc
pop
sbb
or
loopne
and
jl
mov
push
fnstenv
mov
or
pushf
les
mov
adc
cdq
out
jo
loope
daa
mov
and
xlat
stc
mov
add
and
inc
push
cli
clc
push
xchg
xchg
jbe
sub
xchg
out
imul
call
repz
add
adc
fcomp
jno
jle
icebp
xchg
or
mov
ss
inc
and
imul
clc
cmp
aaa
jecxz
mov
int3
xchg
dec
cmp
pop
nop
fs
imul
rcr
pop
aaa
adc
and
das
int3
sub
daa
je
fst
sub
ss
cld
ret
and
mov
je
dec
mov
dec
outs
out
imul
push
movs
or
aaa
int
push
call
movs
dec
lock
or
sbb
shl
rcl
sti
ins
test
pop
out
jo
xchg
jb
pop
outs
pop
xchg
push
das
mov
xchg
retf
popf
pop
cwde
pop
cmc
jae
cmp
pop
sbb
jbe
lods
(bad)
je
in
sub
cmp
aam
pushf
icebp
cmp
xlat
int
cli
cmp
loope
sti
mov
fnstenv
popf
jne
sbb
popf
out
(bad)
xchg
jecxz
sub
add
out
mov
out
enter
ret
dec
jp
pop
xor
pushf
jnp
outs
add
and
cmp
in
sar
call
js
inc
outs
fdiv
sbb
(bad)
xchg
sbb
ret
and
addr16
sahf
or
and
shr
pusha
cmps
fnstsw
cmp
mov
cmp
sub
mov
fdiv
and
stos
push
pop
idiv
scas
or
sub
adc
dec
loop
mov
fild
in
mov
fdivr
dec
shl
jl
add
dec
xor
ins
jns
xchg
push
popf
pop
addr16
stc
aaa
popa
cmps
adc
push
adc
daa
aam
repz
lods
into
in
push
sbb
mov
ins
test
stos
(bad)
sti
adc
(bad)
loopne
xchg
scas
mov
and
mov
mov
push
(bad)
cmc
push
je
shl
rol
add
(bad)
mov
lea
add
cmp
push
inc
gs
cmp
dec
sub
repz
ret
mov
in
pushf
mov
xor
and
lahf
inc
push
dec
sub
xchg
daa
mov
test
and
shr
test
loope
xchg
cmps
(bad)
mov
in
mov
cdq
jl
test
inc
sahf
and
inc
sti
loopne
int
retf
into
test
push
jge
and
jb
mov
sbb
aaa
and
mov
hlt
push
jg
push
mov
icebp
ret
in
xchg
mov
mulps
pop
or
das
data16
inc
enter
aaa
in
mov
sahf
adc
fs
bound
xchg
ror
jae
mov
cld
lds
inc
xor
adc
pop
mov
movs
call
ret
(bad)
or
xor
jns
or
push
xlat
cwde
mov
add
(bad)
mov
cmp
mov
jnp
mov
pop
push
or
hlt
jle
mov
sub
jge
xchg
pop
xchg
jne
xchg
push
add
add
pop
dec
jbe
xchg
addr16
loop
repz
out
pop
sbb
test
sbb
push
int
outs
jmp
mov
ffreep
jle
repnz
dec
xor
jbe
mov
std
fld
pop
div
mov
jle
pop
add
and
jnp
stos
pop
das
scas
daa
cmp
and
inc
ins
xor
jecxz
ret
cmps
inc
push
xchg
jge
push
adc
dec
mov
sbb
fs
in
lea
es
pop
sub
call
xor
dec
dec
inc
xor
mov
pop
sti
adc
push
repz
cmp
adc
inc
dec
ins
pop
xor
jbe
lahf
hlt
push
jb
push
fsub
mov
cmp
or
lods
xor
inc
(bad)
or
in
pop
jbe
bound
(bad)
jp
sar
jne
leave
push
add
and
lock
mov
ins
rcl
lahf
lods
mov
imul
dec
mov
shl
push
ins
sbb
daa
cmp
dec
in
sub
xlat
das
shl
xchg
dec
ja
cwde
jmp
arpl
test
mov
adc
enter
fcomp
enter
scas
mov
lods
(bad)
(bad)
jl
aad
mov
inc
repz
dec
out
xchg
jl
sub
mov
xor
adc
cmc
dec
scas
xchg
jecxz
int3
fistp
add
dec
mov
icebp
in
mov
enter
push
adc
add
imul
sbb
test
mov
add
xchg
cmps
sbb
fucomip
stos
mov
sub
loopne
mov
xchg
add
push
dec
loop
mov
mov
dec
ds
jb
mov
dec
fcomi
test
cmps
or
mov
(bad)
mov
adc
lock
dec
xor
cmc
test
shl
and
fisubr
dec
sub
lahf
and
mov
jge
sbb
out
jg
xor
stos
inc
loop
jge
xchg
(bad)
movs
mov
retf
cld
mov
cli
jge
dec
lea
mov
push
popa
inc
push
mov
xchg
lock
aaa
jmp
lods
adc
pop
and
mov
mov
ins
jo
ds
push
jmp
inc
retf
fcmovnbe
movs
add
cwde
cs
mov
and
aam
fdiv
cmc
scas
mov
shl
(bad)
xchg
xchg
sahf
jne
lds
mov
adc
cmp
jne
sub
inc
(bad)
in
pop
aad
in
mov
adc
add
fist
bound
sub
push
(bad)
out
and
and
xor
in
jl
dec
xor
(bad)
or
loopne
out
int3
mov
sbb
dec
(bad)
outs
invd
or
sub
sub
jns
xlat
push
gs
pop
out
fisttp
(bad)
and
inc
jb
mov
cwde
jp
cs
xor
mov
repz
into
xor
test
ret
dec
inc
cs
(bad)
iret
les
fild
cmp
in
sti
push
xchg
das
sar
stos
mov
push
sbb
(bad)
xor
dec
pop
test
out
jae
sbb
outs
aad
cmps
test
repnz
cdq
fdiv
pop
pop
nop
fs
adc
and
fs
mov
addr16
xchg
push
mov
in
jnp
cmp
jl
je
mov
aam
fbstp
mov
jbe
jl
cmc
jno
xchg
aam
adc
sbb
in
sar
aas
fcomp
xor
sub
pop
pop
jb
ins
push
xor
sub
js
jmp
dec
adc
vmovlpd
and
mov
mov
sar
add
adc
cmp
fldcw
pop
mov
sahf
hlt
push
jp
fiadd
ret
imul
inc
xchg
and
mov
aad
neg
jns
jl
cld
rol
xchg
or
xchg
mov
mov
imul
gs
aas
pop
inc
stc
int3
xchg
pop
rcr
adc
call
repnz
cmp
lea
pushf
jmp
sbb
sub
jns
sbb
(bad)
jns
cmp
adc
idiv
xor
jle
and
mov
inc
pop
cmp
nop
mov
pushf
stos
pop
cld
xchg
and
xchg
cmp
xor
sti
pushf
aad
push
test
push
xor
sub
das
shr
enter
ror
cld
pop
jb
and
out
mov
in
loop
sub
jmp
imul
pop
test
aad
push
stos
test
rcr
sub
fwait
dec
jbe
push
dec
dec
int
call
xchg
dec
rcl
pop
xlat
daa
pop
cmp
in
test
inc
ss
test
pop
arpl
push
popf
inc
or
test
pop
mov
retf
test
xor
add
ins
scas
adc
sub
int
cmp
lds
and
mov
mov
cmp
lar
xor
shl
ret
sub
fild
pop
imul
cld
mov
xchg
cdq
icebp
enter
jae
xlat
push
in
pop
popf
clc
dec
in
inc
out
sar
imul
add
cmp
(bad)
cmp
gs
iret
xchg
sub
cwde
arpl
mov
hlt
and
mov
enter
repnz
add
ja
(bad)
pop
or
daa
adc
mov
inc
(bad)
xchg
ds
inc
cmc
fistp
jl
mov
fistp
sub
aaa
aad
inc
sbb
jl
cmp
sub
sub
add
xlat
sub
xchg
or
and
fisttp
ss
sub
push
xor
mov
mov
fdivr
push
cld
inc
pop
pop
(bad)
outs
mov
es
sbb
or
pop
shl
and
sti
xchg
push
push
jp
pusha
test
outs
cmp
push
xchg
mov
adc
cmp
ds
shl
xor
xchg
and
pop
push
cli
pusha
sbb
add
mov
jnp
xchg
adc
movs
sbb
dec
or
push
jle
add
es
mov
jb
xchg
jp
push
push
jmp
hlt
cmp
sub
push
ret
mov
call
popf
scas
jle
ret
inc
pop
xchg
jo
fstp
xchg
push
cwde
(bad)
cmc
add
sar
in
call
sahf
call
sbb
std
fs
daa
aaa
mov
lods
sti
sub
pop
mov
or
push
pop
mov
int3
scas
xor
pop
mov
cmp
sub
ins
inc
shr
sbb
sub
xor
mov
addr16
inc
mov
xor
test
out
and
hlt
mov
aam
and
pop
inc
jge
(bad)
adc
pop
pusha
cmps
jbe
add
jecxz
lock
imul
out
sub
mov
ret
mov
pop
pop
int3
lods
in
popa
retf
call
je
imul
add
inc
jmp
test
cli
cs
mov
or
movs
les
xchg
or
add
fwait
cmp
stc
stc
fiadd
mov
push
cmc
push
push
popa
hlt
sbb
push
jns
ret
and
fdivr
cmps
xor
sub
dec
fs
add
push
loopne
xchg
xor
mov
inc
dec
pusha
repz
jp
pop
pop
(bad)
dec
add
inc
dec
or
cmp
repz
mov
sbb
push
fnstenv
jne
fdivp
and
jae
mov
lods
data16
cdq
push
out
xor
cmp
xchg
gs
test
rol
pop
push
push
push
cmp
lds
retf
rol
sbb
dec
in
push
adc
fucom
xchg
adc
push
sub
cmps
jb
das
xchg
outs
into
cmc
add
mov
mov
jl
mov
mov
(bad)
mov
aam
inc
ins
or
fwait
dec
loop
fwait
inc
sar
rol
sbb
xchg
sub
pop
xchg
pop
cmp
sahf
ins
(bad)
int3
movs
retf
and
jne
or
les
sbb
pop
je
retf
repnz
das
std
cmp
cmps
gs
icebp
es
ror
cmps
div
mov
cld
aas
rcr
idiv
test
test
test
addr16
cli
sahf
cld
jbe
jb
mov
mov
sahf
adc
mov
js
adc
jecxz
sahf
mov
mov
jbe
rcr
jmp
outs
sbb
sbb
pop
inc
ins
ja
cmps
or
sub
push
aaa
in
ins
pop
add
mov
dec
into
repnz
fcomp
fwait
leave
int
movs
and
and
cmp
add
out
cmp
sbb
cmp
lock
push
mov
jb
adc
inc
idiv
xor
arpl
mov
ss
fsub
xchg
adc
enter
sbb
push
jg
inc
mov
jmp
test
jmp
jge
pop
push
jns
int
adc
lods
add
fisub
mov
fiadd
push
jae
push
add
sub
mov
into
mov
sar
std
cmps
dec
into
mov
mov
imul
push
sbb
dec
push
out
push
pop
add
es
add
fstp
(bad)
into
cdq
sub
test
adc
sub
div
jge
enter
outs
xor
sub
adc
jmp
loopne
mov
or
push
dec
stos
ja
(bad)
(bad)
lods
retf
nop
test
stos
daa
pop
icebp
fcomp
and
bound
movzx
cmp
out
ja
pop
inc
aas
inc
or
mov
mov
ja
jg
aad
mov
adc
xor
fcmovbe
push
stos
(bad)
aaa
imul
dec
loopne
sbb
fyl2x
jae
mov
jle
cmps
repz
jmp
jge
mov
lock
add
lods
jbe
pop
sub
mov
push
in
dec
mov
aam
jno
scas
pop
ror
xchg
lds
adc
push
das
push
jne
fldenv
and
inc
mov
pusha
(bad)
mov
ss
cmp
or
add
out
xor
(bad)
push
cmp
jae
test
cmp
inc
ins
jp
or
out
cmc
sub
sar
jmp
imul
dec
xchg
jecxz
mov
inc
test
adc
(bad)
inc
imul
cmps
retf
sahf
mov
sub
jg
(bad)
movs
jae
mov
(bad)
sbb
mov
xor
aam
xor
lods
inc
pop
inc
or
iret
cmps
mov
or
mov
leave
ret
(bad)
(bad)
jecxz
repnz
test
daa
call
aaa
out
inc
mov
or
rcl
sub
in
shl
in
inc
push
cmp
mov
aaa
test
leave
lahf
cmp
fsubr
mov
pop
data16
js
push
mov
xor
mov
aad
mov
ins
or
ficom
shr
sbb
jmp
and
sar
into
jbe
nop
pop
ror
in
add
repnz
jmp
ret
mov
mov
lods
push
lods
adc
retf
test
jne
cmp
aaa
std
pop
jmp
jl
lock
(bad)
mov
jbe
int3
idiv
mov
jp
das
xchg
sahf
ret
mov
ret
and
(bad)
cmps
mov
cwde
movs
jmp
sub
mov
adc
xor
ret
addr16
adc
sub
data16
sub
ja
and
rcl
stos
sub
xchg
adc
ins
mov
mov
push
addr16
outs
cmp
mov
or
out
mov
(bad)
(bad)
iret
mov
or
fs
mul
cmp
clc
mov
pushf
mov
push
mov
sbb
pop
shr
pop
inc
and
mov
repnz
sbb
pusha
xor
icebp
sbb
fdiv
fstp
dec
test
xchg
push
or
push
pushf
icebp
or
mov
mov
out
pop
push
fcom
scas
push
cmp
iret
int
ficom
mov
aaa
les
lock
fidivr
dec
jo
scas
mov
retf
ds
dec
enter
or
push
and
(bad)
cli
dec
icebp
add
lahf
xchg
mov
fwait
jbe
fistp
dec
adc
adc
bound
cmps
add
rcr
call
xchg
pop
les
jb
fisub
add
mov
mov
fisub
fs
(bad)
pop
jae
cmp
call
push
cli
and
sbb
(bad)
push
daa
inc
jo
push
bound
cmovge
push
test
aaa
cmp
mov
or
jne
int
adc
aam
enter
mov
xlat
and
popa
nop
dec
aaa
stc
cwde
mov
repz
fmul
pop
push
mov
jp
les
xor
adc
stos
xor
xchg
adc
loop
xchg
xchg
push
seta
inc
(bad)
sub
bound
data16
push
fst
adc
lss
int3
fwait
aam
imul
(bad)
retf
or
jb
(bad)
dec
neg
xor
out
mov
scas
sbb
rol
push
sub
cmps
push
mov
mov
pop
imul
jnp
mov
fwait
ins
mov
push
js
dec
int
test
fiadd
test
mov
dec
loop
jb
shl
sbb
pop
sbb
enter
push
or
cmc
fild
faddp
xchg
dec
push
imul
gs
adc
shl
xor
cmps
jp
loop
dec
or
jle
jae
imul
cld
xchg
xor
popa
push
outs
cmp
cmp
into
mov
adc
and
test
test
adc
inc
out
mov
adc
pop
adc
ret
outs
es
addr16
(bad)
add
jge
jg
jo
push
push
repnz
sbb
fidivr
jle
popa
jecxz
xchg
mov
add
xor
mov
dec
cdq
cmp
sahf
imul
xchg
sub
aad
and
sbb
mov
rol
xor
stc
add
(bad)
test
xchg
test
test
mov
fs
mov
movs
int3
imul
int
aaa
mov
in
jne
pop
xor
sub
aam
ins
mov
addr16
push
jmp
mov
outs
daa
mov
mov
and
mov
fldenv
lods
es
lds
mov
ficomp
sub
pop
test
xchg
lods
cmp
adc
push
mov
mov
imul
rol
mov
mov
adc
mov
lds
cmc
push
mov
xchg
int
xchg
jns
and
push
rcr
and
and
inc
jno
sbb
inc
mov
adc
pop
or
fimul
dec
sbb
pop
inc
enter
rcl
cli
or
es
fsubr
adc
nop
push
loop
and
adc
pop
cmps
sahf
enter
fcmovnb
lods
mov
popa
push
aam
dec
cmc
dec
xchg
lods
(bad)
in
xchg
cmp
out
or
std
dec
fmul
lods
cmp
mov
adc
jne
push
push
pop
std
jp
or
mov
mov
cmp
sub
pop
test
and
mov
ss
loopne
cdq
pushf
cmps
mov
push
xchg
arpl
imul
aas
xchg
xchg
int3
dec
popa
aaa
mov
fisttp
jl
outs
in
cmp
out
or
push
shl
dec
sti
sub
cmp
cs
aaa
jg
cmp
out
icebp
dec
push
fs
outs
lods
rcl
bound
fdiv
push
sbb
jg
add
test
dec
(bad)
cmp
add
in
ss
repnz
out
mov
and
and
mov
push
fwait
xchg
cs
repz
pop
fwait
xchg
xchg
(bad)
push
repz
mov
xchg
push
sbb
mov
lods
jo
sahf
cmp
arpl
inc
pop
jle
(bad)
icebp
sbb
sbb
lds
stos
dec
pop
add
push
cmp
nop
fcom
clc
shl
xor
enter
in
xor
pop
(bad)
and
stos
mov
mov
mov
xlat
xor
mov
push
and
nop
or
inc
inc
js
dec
xor
cmp
test
cmp
int3
out
cmps
aaa
aad
pop
int3
(bad)
sub
jns
cmp
mov
sub
(bad)
xchg
imul
xlat
and
mov
inc
add
dec
mov
xchg
add
pop
jne
clc
(bad)
daa
xor
out
imul
cmp
mov
and
or
cdq
mov
inc
rol
sar
aaa
add
arpl
mov
mov
nop
mov
push
cmp
and
pop
cmp
pop
fs
sub
imul
mov
cmp
add
cmps
xchg
cmovp
cmp
adc
and
or
push
mov
inc
dec
das
or
lods
mov
mov
int3
inc
mov
push
sub
push
add
inc
xchg
ror
repnz
add
jmp
sub
ror
sbb
sub
adc
lods
es
jge
adc
pop
stc
movs
sub
cmp
cmp
(bad)
push
outs
mov
jle
hlt
xchg
ins
das
sub
inc
sub
in
inc
cmp
inc
fs
jl
loopne
cs
sbb
in
pop
es
inc
fild
es
ins
jge
pop
cli
jns
and
std
adc
mov
out
jl
sub
stos
mov
push
inc
scas
pop
fcmovbe
leave
sahf
cmp
inc
and
retf
ret
inc
push
cmp
push
adc
pop
test
push
leave
jnp
ins
inc
push
push
fdivr
mov
dec
call
push
pop
dec
fnstcw
push
pushf
scas
pop
add
js
loopne
sub
inc
ins
ja
jae
stc
idiv
mov
lahf
jge
cdq
mov
push
clc
pop
push
int3
dec
out
test
mov
sub
lahf
sti
push
mov
adc
imul
cwde
into
mov
or
xchg
adc
ret
fucomp
test
in
sub
inc
fsubr
loope
or
stos
jb
fst
int3
sbb
aas
fcomi
(bad)
enter
adc
in
lock
in
popf
sub
adc
pop
fistp
aad
fisub
imul
shl
jl
ins
fwait
loop
idiv
mov
ja
push
int
pop
pop
and
gs
idiv
pop
or
pop
test
cwde
dec
in
push
adc
ins
daa
test
lock
inc
mov
adc
jns
stc
(bad)
jp
ret
fistp
dec
(bad)
dec
cmp
pop
into
js
cmp
lods
fsubr
mov
add
test
xchg
add
cmp
cmps
xchg
std
mov
pop
push
jo
cmc
mov
loopne
cs
or
ret
push
adc
in
xchg
mov
push
dec
adc
fistp
movs
js
aam
adc
dec
call
adc
jg
cs
xchg
add
mov
outs
mov
dec
push
jmp
adc
movs
mov
retf
dec
push
mov
shl
dec
cmp
and
dec
es
pop
retf
add
fnstsw
adc
loop
push
gs
retf
push
sbb
xchg
mov
sub
je
lea
stos
aam
mov
jmp
sbb
(bad)
iret
enter
mov
pusha
or
xor
sti
xchg
sbb
std
test
int3
dec
adc
call
xor
add
jle
jnp
bound
cmp
jo
jl
fiadd
xchg
or
je
aas
jg
pusha
nop
sbb
dec
mov
xchg
lahf
cli
shr
dec
push
sbb
cli
movs
mov
mov
mov
push
adc
mov
cmc
pop
bound
in
push
inc
in
dec
repz
fmulp
mov
rcr
push
(bad)
pop
loopne
aas
add
mov
xchg
stos
shr
jae
or
jg
push
cdq
cmp
sar
popf
arpl
xchg
movs
xchg
and
loope
jno
or
cmps
jbe
inc
rcr
jecxz
jbe
popa
mov
fisub
adc
mov
inc
push
fidiv
(bad)
mov
cs
(bad)
fdivrp
scas
lods
pushf
push
pop
loop
and
mov
adc
out
ret
mov
mov
(bad)
push
jp
movs
ret
mov
xchg
jp
mov
add
pusha
repnz
xor
lahf
movs
ret
inc
loope
leave
dec
lds
rcl
in
movs
mov
mov
dec
mov
in
addr16
in
mov
push
movs
ins
adc
bound
xchg
jae
clc
push
dec
imul
xor
xchg
dec
jecxz
fadd
push
mov
jo
retf
div
pop
into
popf
xchg
cmp
rol
out
push
push
pop
ja
sahf
push
push
sbb
mov
sub
pop
mov
mov
sbb
or
mov
es
fimul
fdivr
pop
inc
lods
pop
sub
push
inc
xor
lahf
pop
dec
cmp
mov
pushf
call
and
push
inc
push
lods
imul
(bad)
call
xor
jmp
out
popa
or
repnz
sub
push
js
mov
(bad)
fxch
pop
scas
sbb
push
aam
xchg
dec
loopne
dec
jo
xor
loopne
lds
test
out
shr
sti
adc
(bad)
mov
aas
mov
scas
stos
push
and
push
add
sti
cmp
jmp
lods
pop
sub
outs
lock
sub
mov
adc
std
xor
(bad)
cmp
adc
jo
or
repnz
and
dec
xor
repz
mov
lea
push
push
in
sbb
adc
dec
dec
push
hlt
pop
(bad)
jnp
enter
fisttp
mov
nop
push
push
out
jb
add
add
add
mov
jmp
repnz
or
ds
call
xor
lods
daa
push
mov
idiv
sub
jo
mov
pop
xor
cmp
mov
ins
jb
iret
lahf
inc
clc
adc
jmp
add
movs
adc
call
push
mov
jmp
add
pavgw
scas
fstp
dec
mov
punpcklwd
lods
inc
add
mov
enter
imul
idiv
ret
adc
ret
loope
repz
jno
dec
push
adc
test
or
mov
(bad)
push
cmp
cmps
adc
cmps
ins
cmp
pushf
dec
or
push
sub
sub
push
xchg
icebp
ins
xor
mov
push
mov
sbb
mov
dec
sub
mov
dec
int
in
retf
out
nop
ja
les
fild
int3
xor
push
jle
es
retf
mov
jns
fwait
adc
push
fstp
pop
jmp
sar
loopne
(bad)
xlat
jmp
add
aad
test
pop
sti
ds
dec
das
dec
adc
push
loopne
ins
daa
loop
cmp
cli
ds
test
cdq
push
aas
mov
adc
inc
cmp
sub
mov
je
xchg
neg
fist
sub
sub
icebp
cmp
int3
repz
loopne
or
adc
inc
out
push
adc
mov
xchg
dec
cli
sbb
dec
adc
in
test
js
xor
icebp
jl
mov
mov
ins
jbe
sbb
xchg
daa
gs
ror
leave
test
test
jp
mov
ret
outs
sbb
loope
fistp
cmp
ss
adc
and
push
popa
lahf
inc
or
mov
test
jno
jg
mov
imul
mov
js
ficomp
jmp
dec
daa
in
ror
xchg
dec
es
cmp
mov
add
xor
pop
sahf
stos
and
das
cmp
rsqrtps
inc
addr16
or
mov
add
iret
mov
lahf
mov
(bad)
dec
pop
test
and
fwait
or
inc
xchg
(bad)
popa
cmp
inc
cmpps
(bad)
sub
sahf
nop
dec
lds
inc
ror
pop
xchg
clc
icebp
scas
mov
ins
gs
xor
in
mov
ficom
movs
inc
arpl
jb
mov
sub
sbb
(bad)
and
sbb
inc
adc
std
pop
setae
adc
push
pop
addr16
ficom
fwait
cmp
ret
sub
(bad)
cmp
in
out
xchg
mov
std
inc
xor
daa
(bad)
adc
jecxz
cdq
test
dec
sbb
jp
setle
and
adc
movs
out
(bad)
xchg
nop
inc
and
rol
stos
repz
pop
(bad)
fstp
mov
fisub
outs
push
jns
leave
and
int3
mov
(bad)
or
fnstenv
inc
sub
or
pop
xor
fsub
cmp
int
mov
call
jmp
cdq
bound
cmp
fs
mov
dec
or
xchg
mov
(bad)
loop
out
ins
imul
int
pop
loope
pop
adc
xchg
or
lahf
ds
std
jmp
cmps
in
mov
jp
push
mov
fdiv
adc
pop
cmps
fimul
jmp
inc
add
movs
xor
loop
out
mov
popa
cwde
mov
sub
call
sub
pop
push
jmp
in
ds
les
add
dec
sbb
aas
add
mov
lds
pop
pop
leave
sar
sti
iret
inc
fs
ins
push
stos
mov
in
pop
or
iret
sub
(bad)
cmc
xor
xor
cmp
push
dec
or
out
ins
rol
inc
jle
cmp
movs
ror
mov
fild
xor
fdiv
sub
clc
(bad)
loope
cmc
(bad)
pushf
pop
in
(bad)
test
mov
cmp
sbb
fbld
and
sub
cli
cmps
xchg
rcr
dec
xor
jge
cdq
sbb
addr16
sbb
cmp
jbe
add
jge
daa
pop
loope
push
jmp
retf
push
ins
pushf
or
popf
mov
mov
test
add
dec
dec
or
in
retf
shl
dec
pushf
or
(bad)
push
sahf
out
jg
xor
bswap
(bad)
loopne
pop
mov
ss
fild
leave
and
xor
and
sbb
jo
mov
xchg
(bad)
push
imul
mov
dec
xchg
call
in
sbb
fwait
int3
mov
mov
pop
lods
mov
inc
pop
push
ret
xor
mov
xor
jae
dec
call
rcr
sbb
sbb
lods
inc
retf
shl
out
out
retf
ret
or
clc
imul
movs
xchg
push
int
js
jecxz
xchg
das
mov
retf
dec
mov
mov
push
and
out
pop
fs
push
or
mov
inc
xchg
mov
int3
sar
pop
jae
out
(bad)
adc
iret
dec
inc
addr16
sub
xchg
ins
popa
jnp
ds
pop
push
adc
push
(bad)
call
push
iret
add
and
outs
jns
or
sub
xchg
xchg
pop
add
out
shl
xchg
jmp
aaa
or
retf
stc
ds
jbe
push
and
ins
fndisi(8087
fisttp
cmps
jp
aad
mov
stc
cwde
sub
pcmpeqw
loop
mov
and
sub
aas
mov
xor
lock
popa
xchg
inc
sbb
mov
(bad)
lods
mov
(bad)
dec
lea
xchg
sub
fiadd
add
jl
inc
mov
fistp
hlt
mov
xchg
cld
or
dec
or
dec
sbb
xchg
daa
retf
sub
xor
jg
pop
add
mov
jle
xchg
sub
aaa
mov
fist
and
scas
sahf
push
loope
call
nop
test
push
pop
stos
mov
xor
push
sahf
outs
mov
dec
in
into
popf
or
push
or
sub
scas
iret
icebp
mov
in
iret
push
dec
xchg
movs
aaa
mov
xchg
xor
mov
adc
or
cmp
push
fwait
push
dec
leave
icebp
or
sbb
popa
add
outs
retf
xor
cmps
pop
int3
inc
inc
enter
xor
and
loope
inc
push
iret
mov
out
dec
jg
inc
pop
jl
add
fcomp
cmp
rol
or
push
adc
movs
mov
scas
fwait
retf
ret
int3
cmps
pop
cmc
cmp
or
pop
loope
fs
fidiv
cmp
cwde
mov
fimul
jae
stos
push
push
xchg
mov
add
in
fstp
out
mov
cmps
push
rcl
test
pop
jno
pop
mov
jo
push
lods
repnz
iret
cmp
mov
mov
sbb
fcomi
add
adc
xchg
icebp
xchg
and
test
xor
fsub
call
aas
hlt
and
mov
mov
ds
stos
inc
jg
pop
loope
pusha
inc
fwait
jnp
cld
popa
retf
pop
call
pop
std
(bad)
stc
aam
je
mov
int
into
loop
dec
sbb
std
pop
inc
mov
or
jno
sahf
pop
bound
adc
inc
dec
(bad)
cmc
cmp
aam
xchg
fucomp
retf
inc
ins
dec
lods
xchg
mov
(bad)
and
into
pop
ja
aad
or
mov
lock
int3
(bad)
lock
or
or
repz
sub
dec
cmp
mov
cmp
inc
call
aaa
xchg
dec
jecxz
or
sahf
dec
cmp
aam
mov
xchg
iret
repnz
sub
mov
sub
js
add
or
sbb
addr16
mov
push
inc
cs
pop
sbb
pop
sbb
mov
pop
dec
scas
iret
and
cmc
push
daa
mov
stos
mov
call
inc
ins
jo
mov
and
mov
cmp
mov
xchg
cmp
ins
xchg
fwait
jl
xor
cmps
das
pop
pusha
icebp
inc
cli
lods
ds
adc
add
xchg
(bad)
pcmpgtw
mov
aas
xchg
popa
dec
adc
fstp
leave
dec
iret
mov
jg
stos
(bad)
(bad)
retf
mov
cmp
xor
loopne
mov
not
ret
push
loopne
xchg
sbb
out
sbb
xchg
adc
add
sub
fidivr
mov
call
sbb
dec
test
mov
jmp
inc
mov
sub
pop
call
cs
adc
inc
stc
jl
mov
jbe
mov
push
add
inc
mov
fstp
jae
jnp
or
mov
pop
clc
sbb
dec
test
and
or
push
jo
call
push
call
fild
mov
mov
enter
pop
in
inc
add
lock
xor
fs
or
and
in
and
mov
cs
xor
lahf
lock
addr16
jge
jg
xchg
sub
int
and
add
mov
push
(bad)
es
xor
test
or
pop
call
cli
adc
push
test
jle
ficomp
int3
mov
pop
ins
jp
cwde
mov
xor
dec
mov
inc
mov
arpl
xchg
(bad)
jbe
call
dec
add
cmp
or
dec
popa
add
jb
sub
adc
fs
jb
call
in
mov
lfs
cmp
arpl
push
inc
inc
cmp
xor
in
enter
inc
xor
sti
movs
add
inc
fild
jle
dec
(bad)
and
mov
outs
ins
lods
pop
push
push
lock
jne
pop
xchg
clc
stos
dec
sti
xchg
hlt
sub
mov
cmp
sbb
mov
out
or
jecxz
and
movs
pop
addr16
fiadd
stc
outs
pop
(bad)
repz
xor
sbb
inc
mov
jmp
mov
gs
push
xor
pop
out
and
xchg
pop
sub
pop
mov
cld
lds
clc
(bad)
je
js
mov
and
imul
lods
add
ret
out
mov
push
mov
jmp
push
cld
xor
mov
sbb
mov
aad
dec
adc
sbb
fcomp
jge
mov
mov
mov
jmp
fst
pop
adc
pop
stos
imul
mov
push
daa
out
jbe
jg
mov
adc
(bad)
jns
(bad)
mov
rcr
pop
jb
clc
jp
cmp
std
clc
jmp
ds
mov
xor
mov
add
sub
and
leave
(bad)
shr
jno
jne
cwde
mov
and
jae
ror
xor
cmp
jb
xchg
inc
push
xchg
int3
mov
push
push
push
jo
adc
out
fcmovnb
or
jnp
js
push
push
jb
push
or
out
jbe
mov
test
push
lods
jmp
lds
mov
(bad)
cmp
or
(bad)
pop
lods
int3
pop
in
jg
popa
fnstcw
sub
(bad)
cmp
push
sub
cmp
adc
sub
test
repz
fs
and
and
movs
or
jecxz
daa
leave
mov
add
sub
mov
in
ret
shl
ins
cmp
push
sbb
cdq
adc
mov
test
pushf
mov
add
pop
sbb
sbb
pop
cwde
scas
mov
push
xchg
(bad)
inc
int
(bad)
daa
and
pushf
pop
xor
xor
push
cmp
push
add
shl
pusha
xor
inc
and
adc
punpckhwd
sbb
div
adc
enter
aad
ins
dec
cmps
cmps
dec
retf
push
pop
test
out
push
push
mov
fimul
lods
mov
pushf
mov
cmp
add
hlt
push
sbb
ret
repnz
imul
fs
call
aas
jmp
ret
js
div
pop
sub
mov
popa
cld
mov
imul
pop
inc
jae
or
icebp
std
cmp
xor
inc
xchg
adc
mov
shr
jno
or
sub
fprem1
mov
vpmacsww
scas
or
mov
push
mov
push
fnstcw
or
es
aam
and
iret
and
in
test
mov
push
sbb
add
pop
sub
dec
pop
add
jnp
(bad)
loopne
xor
pushf
sahf
jmp
mov
shl
lahf
(bad)
(bad)
cli
xchg
add
iret
pop
lods
push
push
loopne
sbb
int3
aad
sar
push
sub
add
xor
(bad)
dec
mov
mov
movs
pop
stc
(bad)
xor
arpl
dec
mov
mov
mov
sub
into
fsub
js
jo
jnp
iret
(bad)
adc
in
xchg
sbb
ret
dec
jns
adc
push
xchg
pop
mov
clc
mov
dec
bound
dec
rcl
imul
mov
rol
cli
jb
dec
mov
(bad)
push
xor
loopne
sub
jg
cmc
cmp
mov
int3
or
add
jl
call
cmp
adc
dec
sbb
shr
xchg
aas
sbb
(bad)
xchg
jmp
inc
push
rcr
aas
stos
jl
xor
ficomp
cmp
dec
sti
fwait
jne
and
(bad)
imul
test
int
fstp
sbb
cwde
inc
arpl
aas
push
dec
mov
push
out
cmp
into
dec
sbb
dec
fisubr
mov
retf
das
push
pop
or
popf
stc
push
cmp
push
jnp
dec
push
aam
je
mov
test
out
std
pop
ror
jl
pop
out
mov
ss
pop
dec
lds
adc
out
pop
int3
xor
push
add
arpl
je
mov
test
jnp
in
cli
push
inc
ret
pop
adc
pop
es
ins
mov
xchg
sub
aas
or
lods
inc
mov
pop
mov
sub
mov
push
push
push
jg
dec
test
pusha
inc
aaa
xor
mov
sub
std
push
pop
data16
xlat
jnp
pop
cmps
sub
(bad)
(bad)
fwait
push
shl
xor
dec
push
mov
push
test
jns
imul
pop
sub
inc
adc
aad
sbb
push
xor
aam
sub
sbb
ja
unpckhps
and
cli
mov
cmp
retf
push
ds
test
xchg
pop
pop
cwde
xchg
test
sub
jb
cdq
push
cmc
xlat
addr16
loopne
enter
out
mov
out
in
or
jl
out
xor
pop
adc
mov
std
repnz
xchg
mov
mov
mov
jno
sbb
inc
in
inc
mov
lods
cdq
jp
into
mov
jg
or
add
mov
out
add
jmp
jae
movs
dec
xchg
or
test
sbb
test
cld
sub
rol
imul
xchg
sub
or
shl
cli
rcl
stos
iret
fcom
jge
icebp
gs
imul
and
out
push
jns
pop
cmps
fisub
inc
shl
gs
xchg
jmp
sbb
and
mov
push
cmp
dec
call
icebp
(bad)
push
dec
jg
icebp
sahf
xchg
loop
(bad)
jge
pop
mov
mov
fwait
sbb
scas
loop
pop
shl
and
arpl
mov
icebp
stc
mov
mov
pop
xchg
push
jp
xchg
push
call
fbld
lea
ficom
int
int
pop
mov
sar
fs
or
cld
jge
test
sub
mov
jg
lea
mov
jge
rcl
adc
xor
push
js
fcomp
jle
(bad)
cmp
data16
sar
push
xor
mov
push
xchg
inc
shl
aam
enter
push
pop
ins
push
jne
gs
mov
jle
push
shl
ret
mov
loopne
ret
rcr
mov
inc
sub
data16
cdq
and
clc
cli
jo
mov
adc
cmc
in
les
xchg
mov
or
dec
cwde
xor
jns
jo
cmp
mov
fnstcw
lahf
sbb
mov
hlt
cld
not
mov
and
sub
cmp
jmp
inc
shr
jo
clc
cli
cmp
sub
and
inc
pop
call
lock
inc
mov
and
push
mov
inc
or
das
lods
mov
(bad)
cli
ret
out
pop
mov
movs
dec
sub
dec
sbb
dec
cmp
mov
clc
lods
or
sub
repz
jmp
pop
and
pop
xor
push
push
in
xor
xchg
es
push
xchg
jle
jmp
in
xor
cmc
sub
mov
in
data16
call
es
xor
stc
test
pop
or
ret
inc
lds
test
jmp
les
fmul
dec
and
or
addr16
(bad)
xchg
sbb
cs
dec
in
not
mov
mov
in
test
(bad)
repnz
stos
nop
jb
add
mov
bound
mov
pop
int3
mov
xchg
ja
mov
outs
sub
inc
jne
fild
movs
jle
sub
jnp
xchg
daa
stc
push
pusha
pop
pop
popa
mov
rcr
cld
jmp
xchg
shl
fdivr
mov
rcl
add
(bad)
es
loop
fs
shl
pop
stos
mov
jl
cmp
add
and
add
in
cmp
pop
xlat
pop
push
sar
loop
popa
xchg
or
push
cwde
sbb
dec
dec
dec
and
or
(bad)
sti
out
mov
xchg
jg
inc
jns
pop
and
inc
inc
jnp
push
xor
shr
dec
add
stos
mul
mov
cmp
retf
imul
dec
jecxz
mov
xchg
sbb
mov
hlt
addr16
out
inc
repz
cmp
dec
call
stc
cmps
mov
add
lods
outs
inc
enter
sbb
pop
xchg
inc
mov
sub
popf
lds
fst
or
rcr
cmp
cli
fadd
(bad)
std
popf
dec
(bad)
jecxz
push
mov
pop
sbb
in
dec
popa
mov
jnp
(bad)
add
and
and
cli
xor
popf
lds
jmp
nop
outs
loopne
std
inc
fnsave
in
out
mov
sub
mov
cdq
mov
inc
daa
pop
xchg
inc
lods
aam
mov
mov
(bad)
mov
cmp
sbb
sub
add
cld
sub
and
in
cli
jle
fwait
xor
adc
dec
xchg
xchg
xchg
sbb
xchg
call
and
repnz
fist
nop
jae
xlat
jp
loope
cmp
popa
jg
shl
cmp
repz
push
repnz
pusha
fisub
out
leave
(bad)
aaa
jmp
aad
xchg
icebp
jp
std
in
adc
jge
les
inc
inc
retf
mov
mov
repnz
gs
mov
pop
arpl
aas
xchg
sbb
imul
mov
push
fimul
push
js
mov
mov
icebp
push
mov
xchg
pop
fcmovne
outs
mov
add
fidiv
arpl
inc
jl
xor
dec
xchg
pop
fmul
sub
fistp
dec
push
test
pop
jo
out
nop
add
ins
push
adc
cld
xor
cmp
jmp
gs
mov
in
stc
sbb
pop
mov
dec
sbb
leave
pop
retw
xchg
pop
daa
lods
xchg
inc
cmps
push
cmp
mov
shl
mov
loope
inc
dec
mov
fst
out
test
shr
in
jmp
data16
push
idiv
jecxz
jle
shl
neg
sub
cwde
jne
adc
mov
mov
lods
pusha
repz
in
daa
push
sub
sub
mov
(bad)
sti
loope
jmp
ret
fild
std
inc
icebp
pop
mov
mov
sub
in
mov
adc
and
inc
mov
pop
out
push
lods
or
and
fcmovnbe
fcmovb
pop
pop
push
popa
add
lods
mov
adc
iret
test
push
outs
xchg
jmp
mov
ret
jne
sub
test
mov
and
xchg
in
pop
test
and
and
push
movs
sub
(bad)
push
mov
shl
pop
mov
ret
outs
loop
sbb
stc
call
gs
clc
shl
gs
xchg
and
mov
ja
and
cmps
(bad)
scas
cmp
ins
xchg
leavew
inc
mov
and
mov
retf
bnd
xlat
jmp
or
mov
scas
xchg
nop
inc
and
and
enter
pop
cmc
push
adc
das
add
xor
rol
fwait
dec
mul
mov
sub
sbb
lea
in
inc
in
adc
(bad)
icebp
inc
repz
add
std
rcr
sub
stos
stos
(bad)
xor
mov
jnp
inc
adc
and
idiv
sub
pop
movaps
cmps
mov
mov
adc
xor
xchg
jg
mul
dec
jge
inc
jp
mov
int
and
mov
ins
dec
out
and
pop
xor
and
das
leave
inc
aam
push
movs
jnp
(bad)
jmp
sub
jae
loop
jl
xchg
ret
adc
mov
mov
pop
je
jb
outs
mov
sub
xchg
or
mov
ss
sbb
arpl
mov
rcl
out
or
cmp
jns
or
scas
sbb
imul
sub
adc
ficom
adc
push
popa
xchg
push
mov
cmps
mov
cld
ins
mov
sub
jae
in
repnz
adc
and
xchg
mov
mov
sbb
xor
ror
outs
sbb
or
sbb
loope
lods
mov
cmps
push
cmp
movs
push
cmp
lock
stos
jl
retf
call
mov
popf
mov
mov
mov
scas
xor
pop
adc
std
(bad)
jp
out
inc
xchg
pop
les
mov
(bad)
cmp
mov
fild
int
in
mov
xor
cmp
outs
push
stc
jge
arpl
into
xchg
mov
fs
retf
mov
mov
shl
adc
jbe
mov
loope
mov
in
cwde
dec
int3
test
scas
and
mov
movlps
movs
or
xchg
xchg
jg
ret
test
mov
push
sub
mov
lea
push
(bad)
(bad)
push
dec
imul
pop
mov
mov
nop
mov
adc
(bad)
mov
call
mov
add
leave
(bad)
xor
cli
xor
cmp
(bad)
cmp
add
and
xchg
push
inc
mov
lahf
or
(bad)
lds
popa
and
or
mov
aam
dec
sub
and
cmc
ss
add
les
aaa
inc
sbb
sub
sub
aad
adc
cmp
outs
jb
jmp
push
(bad)
pop
ins
(bad)
sbb
(bad)
int
mov
or
add
add
sub
retf
loope
inc
and
cs
and
int
pop
pop
jo
cmp
mov
xor
sti
bound
lods
fdivr
and
ret
mov
repnz
jmp
fdivr
ins
mov
neg
test
jne
ret
mov
xchg
pop
inc
std
shr
sti
adc
push
je
dec
or
loopne
fisub
cwde
(bad)
adc
imul
jecxz
mov
jmp
stc
gs
jae
adc
cmp
pushf
cmp
jg
jp
or
or
out
enter
sti
lods
or
sub
rol
xor
aam
outs
in
outs
xchg
mov
clc
(bad)
lods
sbb
out
dec
adc
add
mov
pop
mov
pop
mov
aad
jmp
inc
xchg
out
outs
in
push
mov
xchg
mov
sub
pop
fisub
repz
test
int
xchg
mov
inc
nop
sbb
pop
scas
imul
push
sub
movs
fmulp
bound
cmp
std
clc
(bad)
mov
loopne
add
push
push
out
fcomip
xchg
sub
dec
pop
call
or
xor
lahf
pusha
sbb
imul
(bad)
push
test
test
push
enter
add
jp
lods
or
mov
inc
push
enter
jp
xchg
(bad)
mov
xor
ds
push
jne
clc
or
pop
xchg
inc
jmp
nop
aaa
cld
push
lahf
cmps
jp
scas
mov
ret
add
mov
mov
jg
push
dec
inc
xor
xchg
cmp
imul
aad
and
jne
xor
inc
stc
lss
jmp
dec
scas
out
(bad)
movs
scas
and
(bad)
mov
gs
and
sub
mov
lock
sbb
lds
add
fild
add
adc
ds
gs
fcomp
icebp
push
xor
iret
push
je
int3
data16
push
push
mov
pop
push
loope
clc
aas
(bad)
daa
cli
jae
and
repnz
dec
xor
ret
sbb
ins
mov
aad
(bad)
and
ss
addr16
fisttp
xchg
ds
and
ins
int3
(bad)
dec
xor
xchg
jecxz
int3
mov
mov
aas
mov
jbe
je
ficomp
or
or
and
sti
push
or
xchg
xchg
loopne
or
mov
lock
(bad)
dec
ret
std
fwait
out
dec
jle
xchg
jns
imul
mov
push
mov
int
addr16
stc
out
add
and
je
pop
ins
add
lods
push
cwde
aad
inc
xchg
or
jecxz
cs
xor
retf
sbb
or
clc
jmp
aaa
int3
stc
jl
lods
xchg
and
sbb
jne
inc
int3
dec
retf
sub
aas
mov
test
scas
add
(bad)
inc
jle
jmp
jno
adc
jge
inc
inc
cmp
clc
fld
or
ss
sub
sar
pop
push
jg
inc
xchg
pop
mov
pop
or
and
cmp
sbb
dec
iret
jbe
pop
xchg
cli
test
repnz
mov
mov
xchg
jle
repz
push
ror
dec
inc
imul
xor
mov
dec
or
ret
xlat
jns
data16
sub
xlat
ror
in
pop
(bad)
ja
add
(bad)
popa
xor
fidiv
inc
out
jo
out
xor
adc
xchg
pop
loop
das
dec
test
pop
das
popa
pop
outs
retfw
(bad)
rcl
xor
lock
mov
nop
rol
cmp
movs
aam
or
dec
inc
cmp
mov
pop
ret
and
sub
and
xchg
adc
inc
call
jne
xlat
mov
mov
icebp
scas
loop
aam
add
add
sbb
lods
jmp
in
out
jmp
loop
xor
cdq
xor
or
sub
sub
imul
icebp
cli
push
pop
pop
jmp
or
aam
push
aaa
cmp
mov
sbb
add
mov
adc
and
sahf
cmps
push
mov
leave
sbb
outs
and
pop
cmp
inc
pop
and
mov
xor
pop
pop
jp
fild
pop
js
xchg
icebp
cmc
sbb
pop
loop
popa
xor
hlt
ins
jmp
test
pop
sar
jmp
cmp
sti
les
cmp
sahf
jns
inc
imul
mov
stc
iret
push
in
push
sub
icebp
mov
and
inc
out
dec
and
lock
out
icebp
jge
xor
inc
sbb
(bad)
mov
mov
cmp
and
ja
(bad)
inc
push
or
cmp
(bad)
push
pop
cwde
mov
fstp
psubb
fimul
inc
retf
fdiv
and
add
retf
scas
cdq
cmc
mov
(bad)
scas
retf
fstp
test
jno
mov
mov
mov
jns
mov
loopne
add
xor
xor
sbb
repnz
pop
mov
imul
sbb
lods
add
cmp
mov
ins
xchg
out
sbb
mov
mov
adc
mov
out
in
enter
xor
test
jl
es
push
ret
lea
test
stos
cdq
adc
pop
add
cmp
or
cmps
or
sbb
aad
pop
retf
dec
mov
das
dec
cmp
pop
fnstsw
sub
jmp
mov
add
data16
dec
in
(bad)
and
sbb
(bad)
jb
sahf
out
repnz
out
mov
loop
test
fistp
add
sub
(bad)
jge
addr16
in
iret
cmp
jge
sbb
push
scas
push
cs
add
pop
xchg
call
cmps
ins
jl
iret
rcr
sub
cmc
mov
mov
daa
xchg
push
les
adc
mov
loope
int3
xlat
sahf
pop
xchg
outs
adc
aaa
lock
mov
sbb
(bad)
adc
or
icebp
into
popa
je
sub
and
mov
mov
sar
aas
sbb
loop
shl
(bad)
pop
push
jb
sub
(bad)
ds
sbb
fsub
shr
lock
pusha
sbb
call
or
add
out
push
call
(bad)
fidivr
cdq
pop
test
in
leave
mov
mov
cmp
es
inc
cmp
stos
inc
je
inc
mov
sbb
fstp
push
je
sbb
sar
add
jle
cmp
and
push
inc
je
rol
mov
jns
aaa
push
pop
mov
inc
and
shl
mov
sbb
clc
push
and
mov
test
stos
sub
push
iret
xchg
push
mov
xchg
lds
sbb
aas
repz
icebp
fist
mov
push
jecxz
ins
lds
cmp
cwde
sub
push
js
dec
in
or
fmul
stos
inc
enter
fst
in
mov
idiv
jae
sub
push
psubsb
pushf
mov
mov
xchg
push
push
xor
es
sti
int
hlt
fsub
(bad)
and
mov
sbb
push
loopne
inc
inc
pusha
cld
shl
into
call
or
and
adc
imul
(bad)
fmul
mov
mov
movs
(bad)
xchg
mov
add
pop
push
or
or
mov
fmul
inc
shl
jno
fmul
jmp
fwait
leave
cmp
xchg
call
jge
arpl
mov
xchg
in
adc
add
cli
in
test
mov
mov
add
int
fisubr
mov
xchg
xor
lods
stos
retf
(bad)
(bad)
leave
int
mov
(bad)
ficomp
push
sbb
sub
idiv
sti
sub
(bad)
xchg
les
mov
mov
dec
arpl
pop
fisubr
jmp
aaa
and
dec
inc
fild
stos
mov
test
inc
aaa
cwde
shr
mov
enter
inc
(bad)
fst
rcr
mov
jl
adc
dec
out
mov
out
cwde
(bad)
lock
add
add
cmps
imul
je
mov
addr16
mov
call
fsubr
xchg
ret
cmp
adc
je
rcr
dec
jge
imul
xchg
data16
out
fld
mov
in
das
je
scas
ret
cmp
gs
xor
mov
pushf
lahf
fwait
nop
sahf
(bad)
mov
xchg
jmp
(bad)
xor
sar
pop
jp
imul
mov
and
xchg
adc
jno
ds
pop
mov
pop
and
mov
ins
test
and
mov
sub
or
pop
and
rcr
and
lods
dec
and
push
inc
loopne
adc
mov
out
dec
popf
aad
fst
sahf
and
or
scas
xchg
pop
push
in
xlat
and
das
in
addr16
hlt
(bad)
xchg
cmp
das
iret
jns
pushf
and
push
jns
je
mov
push
cmps
(bad)
out
push
pop
jo
fistp
xchg
pop
jns
ins
daa
fistp
push
int
push
outs
out
retf
sbb
jne
and
in
add
cmp
dec
lods
dec
xlat
xchg
nop
rol
lds
lahf
scas
gs
jae
sbb
inc
cli
push
mov
test
sbb
sub
clc
repz
push
scas
add
fistp
cmp
sahf
and
mov
repnz
push
push
out
xor
push
aad
mov
cs
pop
push
dec
es
nop
popf
push
stos
lea
sub
jecxz
in
es
popf
test
stos
aad
(bad)
cmp
iret
pop
sbb
and
adc
inc
dec
push
xchg
inc
xor
ds
mov
cmps
jne
shr
jne
outs
dec
scas
or
push
pop
fimul
mov
pop
sahf
shl
mov
dec
mov
cmp
stos
mov
push
aaa
xor
pop
lock
push
int
mov
xchg
jmp
inc
xor
or
in
pop
lock
mov
dec
or
and
cmp
(bad)
enter
int3
loope
cli
jns
je
jno
mov
fild
aas
out
sbb
xchg
sbb
(bad)
fst
ret
dec
test
push
mov
sub
mov
pop
data16
in
imul
ret
inc
cdq
sub
lock
pop
enter
jp
mov
mov
jae
jmp
(bad)
push
jo
test
jg
dec
xchg
mov
popa
sbb
test
sbb
mov
fld
sub
mov
pop
pop
pop
sub
xchg
mov
ret
dec
inc
(bad)
fnstcw
lods
cld
adc
sbb
arpl
cwde
mov
ins
add
mov
inc
xchg
jge
lea
(bad)
pop
mov
sbb
adc
out
push
in
xchg
in
mov
and
xor
inc
add
imul
mov
(bad)
xchg
stos
aam
shl
cmp
dec
mov
test
add
dec
push
stos
push
jbe
xchg
(bad)
sti
mov
icebp
xchg
adc
and
mov
pop
cmp
ins
xchg
int
xchg
cmp
jbe
ins
lea
jmp
xor
push
nop
(bad)
in
xor
dec
adc
inc
jp
xchg
sahf
aas
dec
cmps
lds
mov
and
fs
add
or
cmp
or
inc
add
pop
add
add
or
cdq
hlt
mov
xchg
lds
mov
adc
cmp
cmc
push
mov
pushf
ret
clc
and
mov
push
adc
jae
sub
push
(bad)
js
add
outs
movs
int3
cs
inc
sahf
or
mov
jnp
out
sar
ins
or
jo
repnz
(bad)
mov
inc
shr
pop
add
lods
sub
loopne
cs
cmp
add
mov
pop
rcr
jmp
fwait
popa
sub
sub
adc
xchg
or
(bad)
lods
sti
out
(bad)
pop
inc
sar
and
retf
loop
xor
loope
adc
xchg
xchg
iret
pop
inc
addr16
in
rcr
xchg
iret
aam
out
popf
fstp
add
das
fimul
adc
xlat
js
adc
xchg
sub
push
popa
xchg
add
call
xor
jo
ss
dec
push
mov
add
call
pushf
cli
sub
add
retf
xchg
xor
shl
mov
inc
push
iret
pop
or
adc
sbb
nop
lods
mov
xor
push
fisttp
mov
mov
xor
inc
cmp
inc
hlt
adc
shl
inc
or
ret
in
xchg
inc
and
std
xchg
int3
mov
cli
pop
cmps
stos
push
mov
inc
enter
xchg
movs
retf
xor
push
pop
xchg
sub
mov
(bad)
out
test
adc
xlat
mov
xor
mov
push
pop
sbb
mov
and
iret
mov
pop
or
cmps
ds
adc
(bad)
into
pop
add
cmp
add
cmp
xchg
out
cmps
or
repz
xor
cdq
xchg
jae
mov
cmp
mul
cmp
mov
fld
cdq
retf
pop
shl
test
jns
hlt
fidiv
push
cmp
lds
jg
mov
pop
xchg
out
clc
call
sbb
push
jne
es
(bad)
(bad)
or
ret
stc
sub
movs
rol
nop
popa
aam
imul
movs
or
sahf
jmp
pop
adc
es
rcr
mov
sbb
shl
sub
adc
jbe
mov
test
or
sahf
loop
sbb
add
xchg
mov
and
push
mov
sub
repz
rcr
nop
xor
adc
add
pop
aaa
daa
scas
dec
sbb
cmp
mov
mov
out
and
cwde
cmps
addr16
and
sbb
jmp
or
jns
lahf
jp
(bad)
loopne
xchg
mov
fiadd
sub
push
sti
xchg
arpl
and
fisub
xor
jmp
int
jl
dec
cdq
in
pop
nop
mov
addr16
cs
cmps
xchg
neg
jmp
pop
ins
scas
lahf
test
pop
gs
and
das
jg
push
adc
xchg
push
adc
shl
inc
or
call
mov
adc
jl
clc
sub
or
or
xor
mov
mov
pop
cmc
jne
pop
ror
xor
std
pop
sub
pop
test
clc
ds
mov
jecxz
sbb
sub
mov
lods
ds
pushf
sub
mov
jmp
pop
out
js
mov
xchg
sub
retf
outs
inc
(bad)
aam
cmp
(bad)
mov
pop
fnstsw
test
xchg
mov
fwait
inc
(bad)
(bad)
jmp
xchg
outs
js
inc
int
sti
das
js
jns
or
sub
sbb
popa
ins
or
cwde
push
(bad)
psllq
inc
dec
dec
fimul
popa
xor
mov
add
jbe
dec
push
cmp
rcl
pop
dec
jge
mov
stos
pop
add
sbb
daa
je
jne
inc
out
xor
daa
jo
dec
xor
lea
ds
pop
aad
not
fs
pop
gs
not
push
int3
pop
adc
mov
add
loopne
or
mov
js
pop
add
add
pop
mov
jns
rol
cmp
mov
sbb
outs
bound
mov
aaa
shl
(bad)
pop
ss
xor
mov
pop
lock
xchg
int
adc
dec
bnd
fidiv
ja
mov
inc
enter
fwait
jns
and
test
sbb
push
int3
scas
stos
call
push
dec
ret
add
sub
jno
ins
push
dec
popf
push
das
jle
xor
outs
mov
dec
dec
cmp
xor
jge
mov
xchg
xchg
cwde
mov
xor
sbb
xchg
das
sub
cmp
in
jno
push
test
and
dec
ror
imul
cmp
jae
push
out
fwait
dec
inc
mov
sti
retf
inc
nop
out
in
mov
js
aas
(bad)
fwait
xor
ds
pop
adc
xchg
pop
pop
dec
and
outs
sbb
xchg
ins
jl
sti
mov
sub
mov
xor
cmp
enter
fist
data16
adc
mov
stos
enter
stos
pop
mov
mov
adc
xchg
mov
lods
(bad)
loopne
mov
or
inc
inc
sub
loop
daa
mov
(bad)
movs
fbstp
push
cmp
mov
out
clc
mov
push
std
add
fucomip
sbb
sahf
add
and
sahf
fwait
cmp
pop
push
es
xchg
dec
jbe
inc
push
add
adc
fsubrp
popf
dec
out
fstp
fcmovu
adc
jo
cmp
enter
sub
push
mov
sub
lock
push
xchg
mov
mov
(bad)
(bad)
cld
popf
das
js
inc
push
xchg
pop
mov
sar
ds
pushf
ds
(bad)
repz
rol
les
jnp
ficom
pause
dec
jge
xor
sub
sub
push
dec
push
rcl
pusha
cmp
hlt
in
push
and
push
icebp
cmps
push
std
dec
dec
cmp
jmp
fwait
dec
lock
daa
fwait
outs
mov
pop
mov
xor
icebp
sbb
test
mov
rcr
retf
int3
call
xor
ds
push
nop
iret
sub
outs
in
cmc
dec
or
push
sbb
dec
dec
loop
cs
sti
adc
xor
scas
cld
cli
rcr
dec
movs
stos
jl
jbe
pop
lock
addr16
inc
fwait
sub
mov
(bad)
mov
jo
cmp
das
out
adc
push
into
xor
xor
mov
or
cld
xor
jg
jl
std
inc
sub
popa
loope
std
xor
pop
ficomp
fsubr
(bad)
cwde
clc
out
cmc
xchg
adc
mov
jb
(bad)
into
dec
dec
jae
mov
dec
mov
rol
pop
adc
fild
dec
or
(bad)
xor
pop
cmp
fsub
sar
push
dec
xor
sahf
dec
aad
xor
pop
scas
push
fld
or
sbb
xlat
ins
jle
inc
(bad)
stc
pusha
ins
inc
ins
jae
pop
aas
daa
cmp
jmp
ficomp
into
scas
and
dec
aaa
jae
test
or
call
inc
js
in
js
sbb
cmp
mov
les
sub
sbb
xor
into
loope
pop
call
mov
aas
(bad)
fidivr
push
into
mov
in
push
sti
fldcw
add
mov
loopne
add
fstp
inc
test
inc
addr16
call
and
inc
mov
inc
sbb
jge
or
popf
sub
inc
retf
pop
movs
push
maxps
(bad)
push
push
cmp
mov
pop
mov
xor
ins
pop
rcr
push
add
retf
fstp
into
adc
fs
jp
(bad)
pop
nop
scas
enter
sbb
shl
cmp
xchg
fisub
nop
add
cld
data16
call
cmp
inc
push
movs
imul
pop
test
dec
xor
pushf
xchg
out
pop
icebp
sub
mov
loop
loopne
add
and
shr
jnp
das
les
sahf
xor
or
add
(bad)
push
movs
mov
ins
ss
inc
jne
bound
mov
stc
bound
xor
shl
jnp
nop
add
cmp
into
pusha
sbb
mov
fisttp
scas
jbe
(bad)
fimul
cld
pop
mov
adc
addr16
ret
data16
lea
xchg
add
sbb
mov
inc
(bad)
xor
std
clc
dec
dec
cmp
aaa
mov
test
sbb
scas
test
cmp
sub
mov
adc
mov
and
add
xor
xchg
mov
jge
into
cmp
mov
stos
pop
out
fist
lahf
lea
sahf
(bad)
mov
into
jge
mov
mov
pop
mov
shr
inc
call
mov
jbe
sar
addr16
jmp
and
rol
mov
inc
mov
cmp
add
lds
xchg
and
int3
push
in
ficomp
fdivrp
jl
ja
scas
mov
repz
das
mov
call
add
cmp
cmps
and
mov
repnz
xchg
mov
in
mov
pop
jb
hlt
inc
jne
ret
pop
xor
push
call
fistp
aaa
jmp
mov
out
in
iret
jne
out
stos
hlt
mov
ja
mov
mov
loope
adc
iret
fld
stos
push
pusha
outs
cli
push
mov
cmp
sbb
(bad)
pop
adc
std
aaa
or
sub
fwait
adc
pop
cmp
loop
(bad)
and
repz
lock
pop
mov
pop
lock
dec
sub
gs
ss
rcr
mov
out
push
jmp
aad
sbb
mov
arpl
ins
imul
mov
movs
jmp
mov
dec
mov
test
or
jl
mov
icebp
dec
sub
or
sbb
inc
aad
xchg
mov
test
push
adc
mov
sbb
xchg
mov
push
jno
mov
ins
cmp
pop
pop
pop
test
fild
inc
movhps
fidivr
div
push
outs
adc
scas
cmp
dec
je
xchg
dec
sub
mov
sub
rol
gs
pop
jecxz
ins
adc
repz
dec
retf
jbe
and
pusha
cdq
mov
push
ins
xchg
or
outs
pop
aaa
push
pop
mov
push
mov
or
sbb
out
xor
and
mov
sub
enter
movs
inc
gs
rcl
jb
shl
or
xlat
ss
pop
pop
cld
cmp
push
rcl
push
call
xlat
jecxz
das
nop
lea
cwde
movs
mov
dec
cmp
xchg
push
sbb
ins
stos
(bad)
fild
cmps
ficomp
ins
in
(bad)
shr
mov
sbb
push
in
retf
pop
mov
je
imul
(bad)
mov
jp
in
bound
movs
(bad)
leave
mov
add
mov
and
xchg
pop
test
xchg
add
dec
and
sbb
ret
dec
mov
adc
imul
mov
nop
cdq
fwait
jmp
movs
outs
mov
sbb
jmp
jg
jmp
inc
add
mov
into
or
(bad)
jecxz
jmp
das
mov
ror
aad
sbb
mov
in
mov
inc
fcom
(bad)
ret
xor
lahf
es
xchg
inc
jae
lea
xchg
sbb
adc
xchg
mov
mov
cmp
sbb
sub
sbb
adc
in
mov
enter
pop
sbb
stc
xchg
lods
xor
or
shl
pop
sub
mov
jbe
xchg
in
aaa
xor
cmp
xor
mov
add
in
aad
jl
(bad)
mov
xchg
ja
jns
dec
pop
xchg
pop
mov
pop
jge
pop
aam
push
inc
add
sub
push
add
fist
imul
inc
in
or
shr
in
mov
and
inc
xchg
je
pushf
je
fnstenv
es
stos
std
int3
push
scas
pop
pop
pop
add
les
test
and
(bad)
xchg
or
daa
test
int
sbb
movs
(bad)
iret
repz
pop
fdiv
icebp
aad
push
lds
loop
pop
sub
mov
or
mov
mov
push
mov
outs
call
sub
pop
stos
nop
outs
fbld
mov
test
arpl
xor
ds
jp
inc
mov
icebp
nop
int3
sbb
jge
xchg
iret
dec
pop
sub
xchg
jae
aam
xor
ds
into
jp
aas
jecxz
icebp
adc
or
jmp
out
sub
push
inc
mov
xor
cmps
jno
dec
mov
aam
jbe
aas
addr16
popa
sbb
in
adc
push
xor
ins
push
lods
ret
out
hlt
in
adc
out
jle
test
(bad)
sub
(bad)
cmp
mov
scas
int3
lahf
inc
in
xchg
pop
test
ins
and
std
popf
mov
not
(bad)
mov
(bad)
fisub
das
xlat
hlt
je
push
mov
mov
inc
shl
or
gs
loope
arpl
das
xchg
ficomp
lock
pop
je
xchg
mov
icebp
in
rol
dec
cmps
loop
shr
aam
pop
shr
sub
(bad)
jmp
pop
sub
cld
setns
push
outs
xor
cmp
aam
lods
jno
imul
cwde
xor
sub
fidivr
sbb
dec
sub
fdivr
push
test
push
pop
cli
popa
mov
enter
scas
and
lods
lods
les
nop
aad
pop
xchg
and
cdq
mov
mov
mov
data16
lods
(bad)
(bad)
fnstsw
xor
pop
sbb
xor
pop
mov
gs
mov
sbb
xor
mov
xchg
aad
or
push
cmp
sub
push
call
jecxz
xchg
mov
test
and
jl
pop
dec
jecxz
jecxz
ins
mov
bound
out
jnp
pop
mov
leave
imul
inc
sbb
inc
in
push
xchg
out
loop
bnd
call
ja
or
movs
sbb
dec
jg
add
adc
mov
pop
or
and
inc
mov
pop
inc
xchg
das
mov
outs
shl
or
bnd
or
add
cli
mov
mov
sbb
hlt
stos
mov
cmps
rol
ins
rcl
cli
push
imul
cmovge
mov
push
pop
dec
popa
and
shr
or
mov
sbb
jl
inc
aas
imul
call
ss
retf
repnz
sbb
fs
ret
cmp
add
dec
aam
mov
stos
adc
int
sub
xchg
lahf
mov
dec
div
pusha
pop
dec
or
mov
inc
call
les
call
in
lea
retf
xor
cmp
data16
sub
inc
sub
test
mov
imul
stc
xor
ret
mov
imul
retf
add
call
shr
movs
sbb
sbb
call
(bad)
xchg
loope
add
lds
push
call
ins
cmp
mov
sti
xchg
aam
inc
shl
sti
pop
xchg
out
or
dec
push
dec
or
aas
add
ins
xchg
xor
div
fnsetpm(287
shl
(bad)
aas
mov
push
loop
jnp
loope
out
dec
in
stc
jne
out
cmp
mov
rcr
ss
enter
ret
jp
mov
iret
mov
mov
and
cmp
retf
inc
sbb
pop
or
jp
lahf
add
mov
and
cmp
add
aam
push
mov
add
mov
cmp
or
xchg
add
sub
iret
repnz
loope
call
and
mov
test
pop
test
cmp
shr
mov
ror
test
and
stos
out
stc
pop
pop
pop
mov
sbb
inc
inc
xor
shl
fdivr
adc
inc
dec
fs
push
add
mov
sbb
test
xchg
xchg
pop
inc
mov
lock
xor
cmps
xor
sti
(bad)
out
or
es
ret
jae
(bad)
push
imul
jmp
into
aaa
adc
fwait
ret
(bad)
sbb
ror
pop
push
(bad)
mov
ds
mov
jmp
add
imul
pusha
cmp
xchg
lahf
aam
movs
int3
std
sub
mov
sub
or
push
add
shl
or
adc
repnz
daa
sub
retf
cld
fiadd
popa
cmp
push
jae
bnd
(bad)
es
jb
jae
pop
rcr
add
cld
sbb
sub
push
mov
inc
fcomi
pop
sub
js
imul
jmp
fcmovnbe
or
iret
ja
push
or
mov
or
mov
in
clc
mov
push
add
xchg
fstp
ss
retf
jecxz
inc
sbb
push
jno
jl
sar
xor
bound
mov
shl
sbb
dec
add
outs
inc
ficom
jp
cmp
ret
repz
pushf
pop
fdivr
es
mov
shl
ret
sbb
fistp
xchg
push
adc
and
jp
neg
dec
add
mov
inc
sahf
lahf
add
je
xor
mov
cwde
add
pop
pop
ja
in
mov
jne
mov
mov
and
adc
sar
sbb
sub
mov
push
not
jmp
adc
imul
mov
push
dec
lock
mov
mov
sbb
sbb
and
mov
sbb
add
sub
dec
push
ror
test
mov
and
pusha
lea
mov
pushf
call
mov
shr
(bad)
xchg
je
fst
cmp
(bad)
jle
mov
push
inc
(bad)
dec
scas
dec
imul
add
fcom
xor
xor
pushf
push
sub
outs
in
inc
cmc
mov
pop
scas
mov
push
push
adc
(bad)
sbb
or
adc
sbb
xor
loop
adc
cmc
(bad)
in
aam
test
sub
(bad)
push
adc
leave
dec
add
icebp
adc
fcomp
inc
or
addr16
inc
ret
xor
test
xor
cmc
or
adc
add
mov
test
mov
scas
je
push
retf
push
mov
and
rcl
ds
stos
test
call
push
int
repz
or
add
mov
into
push
dec
sahf
aad
xchg
ficomp
and
mov
xchg
fwait
or
retf
and
adc
mov
repnz
movs
stos
fstp
adc
mov
xchg
push
cmp
arpl
test
pusha
mov
adc
lds
adc
call
mov
pop
jne
jl
mov
mov
pop
push
inc
bswap
(bad)
pop
add
or
xor
pushf
cmp
push
mov
dec
jb
sbb
loope
xchg
jg
xchg
in
pop
mov
push
add
call
out
jno
sar
or
popa
std
sar
sbb
jp
ins
fiadd
add
int3
popf
ret
or
cwde
dec
xchg
mov
icebp
div
push
mov
pop
pop
and
ins
xchg
add
inc
mov
test
(bad)
inc
ja
or
sbb
stos
inc
addr16
dec
cmp
in
jae
fistp
push
xor
mov
push
and
cmps
call
(bad)
or
es
outs
mov
(bad)
call
sub
inc
shr
jbe
sbb
push
fsubr
or
mov
pop
and
push
stos
fisub
adc
cmp
fdivr
fsubr
test
(bad)
data16
test
add
(bad)
xchg
or
cld
sub
add
ss
dec
sub
mov
rcr
and
ret
cs
retf
inc
xlat
xchg
je
inc
cdq
push
shr
cli
push
fdiv
push
xlat
xor
outs
fwait
add
hlt
xor
les
ret
rol
cmp
stos
jg
jns
mov
pop
inc
lock
adc
add
mov
je
addr16
add
mov
inc
loopne
jo
jge
shl
push
fsub
push
mov
shl
ficom
mov
scas
loop
pop
mov
inc
dec
add
push
leave
cmps
movs
add
dec
and
sar
mov
popf
lods
icebp
pusha
pop
and
imul
mov
add
push
add
rcr
mov
jo
sub
pop
xor
pushf
xchg
cmp
rol
push
rcl
dec
pop
repnz
add
aas
jp
(bad)
sub
and
in
push
xchg
and
sbb
call
imul
(bad)
jae
pop
or
scas
inc
jbe
scas
movs
and
pop
rol
cmc
jae
jae
and
jmp
dec
jbe
jno
fnstsw
in
call
dec
inc
inc
std
cmc
(bad)
data16
(bad)
dec
scas
(bad)
cs
repnz
ss
push
mov
cli
xlat
pop
mov
jg
pop
jecxz
xchg
jmp
adc
fcom
sbb
loope
dec
push
fs
jae
sar
iret
call
fwait
sbb
jae
aas
push
mov
popa
call
sbb
or
int
push
ja
pop
fmul
std
jmp
cmps
sti
adc
push
dec
pop
dec
daa
test
sub
jg
ficom
aad
cmps
cmps
mov
out
jns
jecxz
push
or
sti
xor
pop
push
into
in
(bad)
fstp
cmp
sahf
pop
dec
fcomp
popf
ret
xor
sub
jle
sti
outs
lock
leave
repnz
fcomp
movs
push
adc
ins
mov
fbstp
aaa
stos
fcom
xor
push
mov
loop
inc
popa
jne
pop
pop
sbb
jg
and
inc
mov
mov
jae
xchg
inc
xchg
pop
inc
in
inc
jno
stos
inc
pop
sub
mov
fld
dec
lahf
mov
and
lea
xchg
sub
rol
arpl
movs
out
loopne
lahf
pop
scas
(bad)
test
lock
mov
mov
cwde
es
dec
pusha
jecxz
add
cld
xchg
xor
leave
test
fcmovnbe
xor
jmp
dec
aaa
cmps
add
pop
int3
sub
mov
hlt
in
out
repnz
es
movaps
push
sbb
mov
pop
pop
ret
sahf
dec
add
jae
xor
dec
iret
loope
into
cdq
ja
ja
cmp
repnz
sub
inc
add
cmp
adc
mov
or
mov
push
sub
and
xor
scas
call
test
scas
push
mov
cmps
pop
sbb
int3
mov
and
cmp
sahf
and
mov
(bad)
repz
add
xchg
inc
jnp
stos
cwde
cmp
jno
aad
shl
jge
and
or
sub
sti
xor
cmp
push
or
test
pop
mov
add
shl
push
adc
xor
test
jb
dec
mov
cmp
push
jecxz
and
mov
mov
mov
and
mov
fcom
add
cdq
xlat
test
pop
stos
das
xor
adc
das
adc
sub
dec
mov
clc
(bad)
test
xchg
jae
call
inc
jmp
inc
push
add
push
ins
lods
cmp
push
xlat
mov
adc
push
xor
sbb
inc
lods
sub
fs
mov
jb
mov
adc
mov
add
stos
fisttp
in
fdiv
mov
rcl
js
rcl
fmul
sbb
add
in
dec
inc
ficomp
ret
mov
cmp
xor
fmul
jnp
jne
fldenv
(bad)
fdivp
add
stos
mov
mov
pop
inc
cmp
inc
cmp
and
mov
loop
xchg
test
mov
loopne
cmp
sbb
call
into
in
inc
sti
fidivr
sub
push
stc
pop
and
xchg
adc
retf
push
sbb
dec
dec
icebp
or
and
dec
out
inc
loope
fcomp
dec
aad
adc
movs
adc
sbb
mov
xor
jnp
dec
sbb
pop
stos
int3
pop
pop
cli
push
and
xchg
std
repz
mov
xor
adc
loopne
retf
fld
jl
out
movs
push
lea
imul
add
mov
xchg
inc
jge
sub
(bad)
fxtract
or
add
xor
add
sti
jns
and
mov
or
out
bound
mov
mov
fwait
mov
push
ss
aas
mov
or
mov
sub
pop
sub
aad
mov
int3
mov
pop
adc
out
add
pop
or
adc
(bad)
call
adc
cli
and
retf
stc
pop
jo
inc
push
js
mov
aam
adc
fisttp
xor
adc
retf
das
fsub
and
cwde
rol
xor
dec
pop
or
push
cs
jecxz
xlat
or
and
sbb
inc
hlt
or
rol
push
mov
retf
sub
dec
neg
xor
mov
inc
loope
and
int3
mov
fidivr
push
add
test
or
cli
in
jmp
or
ds
jae
pop
ins
push
cld
rcr
jne
popf
outs
in
pop
outs
fdivr
ja
pop
or
sbb
nop
push
push
repz
add
and
add
jecxz
push
jae
pop
imul
add
pop
mov
shl
daa
dec
data16
jg
pop
ficom
push
dec
mov
shl
push
ins
lahf
sub
sahf
enter
sub
scas
push
push
push
lods
adc
sub
ins
bnd
and
push
scas
add
cmp
scas
call
inc
sub
mov
call
pop
add
jbe
mov
pop
outs
addr16
test
movs
arpl
repz
js
ins
push
and
jmp
inc
sahf
dec
(bad)
das
adc
aam
(bad)
popa
ja
cmp
pop
pop
int3
je
cmp
or
fcomp
iret
(bad)
fnstsw
xchg
push
push
adc
scas
pop
dec
rol
jg
mov
out
push
pushf
mov
push
pop
rcl
sub
cdq
dec
loop
hlt
call
call
jae
sbb
jns
sbb
push
mov
loop
or
pop
mov
sbb
sbb
cmp
push
mov
aam
scas
ins
pop
xor
dec
push
pop
ror
bound
inc
mov
(bad)
ret
movs
mov
jecxz
stos
int3
out
daa
mov
xor
mov
dec
ret
adc
jecxz
in
popa
xchg
xchg
jns
cli
mov
(bad)
cdq
jg
test
push
mov
call
jg
(bad)
pop
mov
imul
sbb
or
inc
mov
dec
push
sbb
mov
pop
out
adc
or
sub
out
sar
xchg
cmp
pop
outs
sbb
mov
cld
pushf
sar
sbb
shr
jae
iret
div
scas
cmp
add
dec
jl
pop
popa
jmp
push
retf
fadd
in
jae
cs
ret
gs
jmp
pop
je
xor
bound
data16
retf
push
push
out
in
popf
pop
dec
xchg
jo
mov
xchg
ja
(bad)
jmp
inc
xchg
int
jns
sub
xor
add
xchg
dec
fwait
(bad)
pop
ja
jno
scas
scas
adc
shr
mov
jae
pop
outs
div
mov
mov
inc
cmp
loopne
into
out
inc
mov
or
arpl
mov
je
xchg
lea
sub
push
mov
xchg
sbb
movs
cld
inc
aaa
(bad)
(bad)
cli
sti
jae
clc
and
dec
xchg
xchg
mov
(bad)
fisttp
inc
stc
dec
ror
loopne
dec
call
pop
std
pmulhuw
mov
adc
sub
repnz
ret
and
fsubr
xchg
adc
out
adc
mov
adc
add
push
fmul
fadd
mov
mov
and
dec
mov
or
fadd
xchg
scas
sub
xchg
sub
pop
inc
xchg
xchg
mov
add
repnz
repnz
(bad)
mov
cld
sahf
jae
rcl
mov
jne
mov
mov
cmp
jb
sub
sbb
pop
or
push
xchg
and
adc
pop
int
or
mov
icebp
adc
leave
fdivp
int3
rcl
mov
cmp
out
rcr
or
icebp
arpl
xor
leave
dec
mov
lods
cmps
dec
jno
xor
mov
outs
mov
(bad)
in
cmp
mov
and
mov
popa
jb
jbe
daa
xchg
cmp
xor
aas
add
ret
add
imul
push
cmp
imul
xor
push
push
shr
ret
adc
push
clc
cmp
cld
mov
xchg
dec
push
push
mov
mov
jmp
xchg
cmp
add
call
push
pop
test
mov
cli
js
sbb
into
hlt
xchg
adc
cmc
ret
jne
shr
out
daa
add
(bad)
lds
inc
nop
push
mov
(bad)
ds
inc
daa
inc
or
stos
xor
push
loopne
pusha
loop
adc
xchg
fist
jmp
test
fist
in
iret
pop
cvtpi2ps
dec
int
and
lock
retf
push
ja
loopne
inc
dec
and
mov
shl
adc
jb
or
xchg
repnz
dec
test
cli
push
pusha
pop
sbb
mov
sub
xchg
stos
inc
mov
pusha
shl
or
fimul
xchg
xchg
mov
mov
xor
inc
add
push
mov
push
das
jae
jo
mov
cmp
push
xor
cli
xchg
arpl
cli
mov
mov
mov
dec
pop
js
sub
add
adc
outs
loopne
add
gs
mov
out
(bad)
mov
fdivp
mov
push
mov
or
cmps
shr
pop
cmp
jge
sbb
fucompp
pop
jne
sbb
(bad)
dec
mov
jbe
div
push
lods
cmp
and
fcomp
inc
sbb
and
and
ins
add
mov
lea
popf
pop
out
push
shr
out
iret
into
lds
call
scas
pop
pop
dec
jge
inc
or
xor
ins
adc
fcom
add
shl
movs
dec
movs
int3
pop
inc
mov
mov
mov
adc
xchg
pop
neg
or
mov
dec
mov
xchg
xor
push
call
jmp
imul
xlat
mov
test
push
(bad)
ror
dec
js
inc
shl
bound
std
sub
int3
jle
fisubr
(bad)
lds
loopne
add
push
sbb
bound
mov
loope
outs
push
inc
sahf
mov
jecxz
jnp
cwde
add
xchg
aad
ins
inc
jno
mov
call
cmp
pop
cli
adc
in
iret
ret
scas
mov
cmps
pause
(bad)
add
mov
push
ret
or
mov
sahf
xchg
jbe
movs
fiadd
ror
inc
das
clc
add
cmc
pop
jp
push
sbb
jp
xchg
xor
or
mov
pop
outs
xchg
call
test
add
xlat
jle
ficom
push
not
inc
daa
mov
or
jns
lahf
xchg
push
or
fistp
jbe
dec
ror
mov
adc
(bad)
arpl
mov
cmp
pop
push
std
gs
and
movs
sti
inc
push
adc
or
adc
jecxz
fnclex
jl
jmp
test
das
dec
sbb
gs
pop
shl
ror
sub
fld
jae
out
pop
xor
bnd
outs
test
xchg
mov
xchg
stc
inc
sbb
push
ins
(bad)
mov
loope
inc
pop
ins
mov
jp
cmp
mov
push
in
sub
mov
adc
idiv
stos
mov
xchg
and
or
inc
movs
pop
cmc
inc
aad
loop
and
jg
sub
test
sbb
data16
jb
js
pusha
jb
xchg
ffreep
icebp
outs
loope
and
ret
fld
(bad)
popa
jo
dec
push
push
repnz
sahf
call
jle
fldenv
sub
mov
pop
movs
(bad)
inc
xor
addr16
std
dec
dec
ins
popa
retf
and
pop
mov
stos
dec
ins
inc
hlt
fisttp
dec
iret
(bad)
mov
sti
jl
mov
or
cmp
cmps
ss
pop
pop
or
xor
out
add
cmp
pop
popa
ins
mov
or
retf
fldenv
dec
cmp
call
mul
sbb
pop
gs
sub
jo
cmps
cdq
push
jl
(bad)
sub
mov
jg
inc
mov
orps
and
shr
mov
push
and
and
jl
loope
push
inc
xchg
cmp
mov
fadd
enter
push
mov
in
clc
xchg
add
jmp
jl
stc
push
into
not
rcr
adc
popf
adc
shl
test
in
loope
push
retf
rcr
xchg
fs
out
(bad)
fistp
movs
or
(bad)
jae
repz
dec
lea
mov
in
test
pop
ficomp
push
nop
(bad)
imul
ror
test
push
add
inc
repz
sub
mov
jmp
sub
clc
in
pop
(bad)
cld
gs
out
push
sar
jno
inc
dec
dec
mov
inc
jmp
imul
int3
push
aaa
inc
rcl
call
inc
sbb
add
jmp
push
add
test
mov
mov
popf
fwait
inc
pushf
sbb
dec
mov
cmc
sub
fwait
adc
push
dec
mov
pusha
pop
icebp
sbb
dec
mov
inc
iret
mov
cmp
and
jecxz
test
fwait
xor
(bad)
fiadd
fadd
jmp
mov
and
enter
or
and
sub
jmp
sbb
addr16
push
mov
and
xchg
push
or
mov
and
les
fdivr
pusha
mov
cmc
pop
xchg
jge
add
dec
mov
cld
pop
(bad)
jmp
and
mov
dec
(bad)
out
cmp
and
dec
add
inc
iret
lds
cdq
sbb
sbb
shr
pop
sbb
mov
cmp
int3
xchg
sub
mov
xchg
in
mov
mov
jo
(bad)
xchg
and
mov
dec
stos
in
mov
cwde
in
sti
fcomp
mov
fld
and
fs
hlt
in
jbe
aam
and
xchg
sbb
(bad)
shl
(bad)
rcr
inc
ins
cwde
enter
inc
push
dec
cmps
out
add
sub
scas
(bad)
dec
popa
cmp
test
dec
mov
mov
jne
dec
cmp
push
ds
das
mov
clc
jne
adc
xlat
movs
mov
in
je
mov
in
or
bound
pop
loope
ret
movs
xchg
scas
sbb
pop
jle
icebp
push
ror
pop
movs
in
cld
stos
and
test
xchg
jmp
pop
sbb
add
adc
cmp
xacquire
ret
out
mov
jle
sub
push
mov
das
push
in
call
(bad)
in
lock
xchg
push
ins
push
bound
pushf
jg
data16
repnz
pusha
loope
mov
ins
push
lahf
xor
jecxz
mov
clc
mov
mov
mov
fistp
cli
cmp
inc
stos
and
call
out
mov
pushf
jne
pop
fwait
mov
test
push
or
jb
mov
retf
add
xchg
lahf
aad
mov
shr
stc
adc
enter
call
rcl
sub
cmp
mov
mov
ins
inc
retf
adc
jno
lods
ja
mov
and
mov
jo
std
mov
hlt
inc
sbb
popf
dec
das
ins
in
dec
fisubr
mov
add
sub
push
xchg
clc
add
and
aad
mov
sbb
nop
rcl
push
pusha
jg
push
ret
xlat
inc
retf
xor
out
cmp
mov
or
mov
xchg
sbb
adc
pop
dec
gs
(bad)
addr16
push
imul
fbld
mov
mov
(bad)
hlt
hlt
adc
pop
push
(bad)
pop
cwde
push
xor
cmp
cmc
and
and
xchg
push
xchg
push
cli
(bad)
enter
push
mov
lock
cli
sub
lods
test
out
out
and
dec
test
retf
push
xchg
iret
enter
jmp
dec
ror
daa
lods
(bad)
push
call
cld
xor
das
cmp
mov
stos
stc
mov
sbb
mov
or
imul
fimul
jge
shl
xor
(bad)
outs
dec
push
sbb
add
mov
push
les
adc
cmp
je
pop
sbb
jbe
jno
mov
dec
sbb
repz
lds
fiadd
sbb
mov
mov
repnz
sar
jno
dec
adc
ins
pop
call
shr
inc
dec
shl
mov
hlt
lahf
and
mov
test
inc
cmp
sub
shl
pushf
jnp
and
js
mov
dec
xchg
mov
jo
xchg
aas
(bad)
repnz
cwde
and
jp
and
clc
cmp
cmp
cmp
sbb
out
inc
or
xor
aad
jne
xchg
addr16
in
cmp
xchg
push
aaa
push
push
stc
xchg
mov
icebp
fst
jmp
pop
ret
das
cmp
hlt
push
or
inc
xchg
(bad)
retf
mov
aaa
sar
inc
ffreep
(bad)
mov
movs
in
jg
cs
(bad)
nop
test
inc
xor
imul
mov
lods
pop
cmps
test
and
sbb
sbb
movs
jmp
xor
jbe
shl
outs
or
sub
call
(bad)
in
jecxz
aas
sub
cli
loop
ins
mov
fsub
scas
pop
leave
mov
inc
and
call
xor
jecxz
jecxz
cwde
int3
push
add
pushf
jmp
xor
mov
pop
or
es
retf
sbb
xor
loop
pop
mov
imul
into
icebp
(bad)
dec
clc
fstp
lock
add
or
das
or
sub
(bad)
repz
into
out
push
aad
out
pop
mov
call
cmp
fild
mov
jo
jb
pop
mov
aam
dec
jle
and
in
(bad)
pop
into
xchg
outs
lods
cld
std
shr
cmp
jbe
adc
movs
imul
out
gs
push
jb
add
je
and
mov
out
push
mov
jle
jmp
std
mov
pop
out
pop
(bad)
push
inc
xor
dec
call
mov
stos
jmp
mov
adc
cmc
(bad)
push
push
leave
test
inc
(bad)
enter
dec
mov
sub
clc
cwde
(bad)
mov
push
in
int
jmp
xor
jne
xor
pop
inc
pop
and
sbb
fimul
and
js
inc
cs
mov
lock
rcl
cli
jns
inc
add
add
push
mov
xchg
mov
imul
lds
push
inc
ror
xchg
inc
mov
xor
xchg
push
mov
test
pop
xlat
or
cmps
jae
comiss
dec
xchg
xor
mov
(bad)
push
and
fwait
and
dec
fmul
rcl
push
jns
push
cli
add
push
test
dec
jmp
clc
cmp
sub
push
ss
or
stos
ret
mov
movs
arpl
ret
mov
jb
bound
int
xor
lea
inc
cli
dec
in
sub
out
add
push
sbb
and
pop
lock
mov
push
or
adc
imul
in
xchg
or
jmp
retf
sbb
push
sar
inc
out
dec
sub
fisubr
pop
iret
sub
aas
(bad)
cwde
mov
mov
and
mov
push
in
or
push
out
iret
add
mov
leave
sbb
ss
ret
sbb
(bad)
ins
movs
sub
test
into
repz
fcmovnu
push
loopne
mov
out
xor
popf
mov
push
loop
sbb
test
xchg
jecxz
loop
fsubr
inc
in
xor
sub
ror
adc
adc
adc
add
(bad)
adc
out
ror
mov
scas
scas
rcr
movs
sti
push
sbb
mov
push
lds
leave
dec
and
repz
clc
cs
mov
std
imul
fisubr
xlat
ss
inc
fiadd
sub
push
shl
mov
xchg
adc
clc
popa
inc
cmp
push
in
jmp
sub
cmp
mov
mov
adc
aaa
xchg
or
int3
or
imul
xchg
adc
in
push
stos
xlat
std
jno
mov
imul
cmp
dec
iret
loop
sbb
jecxz
sti
mov
sbb
pop
inc
push
or
mov
(bad)
push
aaa
pop
jb
out
cmp
pop
sahf
ins
mov
lods
jmp
popa
mov
sbb
cwde
cmps
loop
adc
(bad)
(bad)
sbb
das
inc
adc
pop
cmps
lock
in
xlat
cs
outs
cpuid
push
retf
sbb
adc
rcl
dec
fistp
das
gs
aas
and
cmp
cmp
sbb
(bad)
out
test
inc
in
test
cmp
jae
mov
jl
mov
mov
push
loope
fidiv
cmps
sub
fistp
mov
add
cmp
cmp
sub
inc
sub
sbb
sub
jecxz
jns
outs
mov
pushf
fs
jl
add
int3
rcl
push
cmp
addr16
lds
ins
or
hlt
mov
and
mov
outs
xor
sar
ficom
jmp
shl
mov
jb
push
rcr
jmp
fnsave
lahf
xor
cld
test
xchg
cmp
fiadd
or
fs
lods
push
fnstenv
jecxz
enter
dec
ds
fwait
push
add
fmul
mov
jae
lods
mov
shl
jmp
imul
adc
or
(bad)
loopne
icebp
call
push
xchg
adc
adc
inc
cmps
jns
jecxz
sbb
cli
cmp
add
imul
mov
jmp
push
dec
or
clc
int3
jl
rcr
mov
sub
mov
lock
outs
adc
test
push
pop
(bad)
je
push
test
sub
into
adc
aam
aaa
push
xchg
push
mov
je
jmp
popa
int3
jbe
add
jmp
fcmovnbe
pop
cmp
mov
out
jmp
pushf
ss
pop
ja
mov
xor
lods
retf
dec
adc
mov
mov
mov
and
pop
out
sbb
add
pop
lock
call
stos
cdq
dec
leave
sub
pop
cmp
inc
push
je
mov
mov
popa
icebp
and
ss
pushf
lahf
les
mov
xchg
pop
xlat
mov
test
out
sahf
xor
(bad)
icebp
lock
clc
pop
pop
xchg
imul
mov
add
movs
mov
dec
xchg
stos
jne
sub
mov
mov
dec
fiadd
push
inc
call
test
lods
cmc
dec
xor
inc
jmp
fnstenv
xor
and
xchg
jns
(bad)
jns
and
lea
adc
inc
inc
in
sub
aad
retf
mov
jle
lods
sub
gs
mov
mov
shl
jae
in
in
mov
adc
push
sbb
xchg
xchg
inc
or
fdiv
ret
data16
xchg
(bad)
call
fbstp
int3
(bad)
in
nop
ret
jl
xchg
inc
ror
or
pop
jae
xor
hlt
jae
rol
or
adc
das
dec
bnd
pop
push
jl
pushf
pop
pop
nop
fwait
jnp
and
xchg
aam
mov
or
and
and
inc
pop
sub
mov
fs
call
clc
pop
inc
cmp
(bad)
popa
xor
mov
repnz
call
inc
(bad)
(bad)
or
lahf
and
jp
popf
dec
rol
jg
mov
sahf
es
(bad)
rcr
int3
push
mov
aam
or
xchg
cs
scas
sbb
ficomp
push
jle
iret
stc
xchg
(bad)
arpl
mov
imul
lock
push
cmp
inc
dec
int3
jnp
jecxz
std
inc
repz
dec
push
cmp
and
dec
stc
adc
mov
ror
ins
push
dec
or
test
or
adc
sbb
daa
ds
jmp
pop
mov
imul
ins
mov
pop
push
adc
or
iret
icebp
hlt
stc
push
mov
mov
jne
mov
xchg
repnz
lea
inc
push
push
(bad)
dec
push
xlat
inc
adc
cmp
mov
ss
outs
sbb
pusha
adc
jb
clc
mov
daa
dec
push
iret
out
nop
inc
loop
into
adc
cs
lds
and
cmp
popa
pop
sub
dec
test
ds
mov
inc
xchg
repnz
lea
imul
pop
jno
mov
test
sar
add
(bad)
clc
test
out
xor
(bad)
adc
cmp
jl
dec
call
mov
xor
jmp
xor
push
sub
xor
into
xchg
jmp
or
inc
sbb
xchg
add
fcom
data16
rcl
push
sbb
jns
add
enter
or
mov
mov
dec
inc
test
(bad)
jno
or
sahf
shl
xor
lods
fistp
loop
inc
cli
inc
mov
ficomp
fnstenv
out
push
inc
or
cmp
pop
sub
out
push
and
pusha
push
push
jns
or
mov
fmulp
dec
lods
pop
lods
cmc
pop
in
inc
push
sahf
inc
jno
outs
mov
cld
mov
dec
imul
fidiv
mov
addr16
cld
push
xchg
sbb
xor
popf
or
int3
pop
inc
enter
and
or
int3
not
shr
pop
pusha
popf
push
cmp
ds
lea
mov
cmp
mov
out
(bad)
lahf
ins
xor
rcl
mov
dec
ins
lods
push
xchg
fdiv
int3
les
cmp
in
stos
xor
test
pop
hlt
int3
add
mov
sub
call
mov
jg
sahf
inc
js
adc
movs
dec
xlat
test
lea
std
test
push
mov
pop
xor
add
pop
test
cmp
add
add
inc
iret
inc
in
cwde
int3
cld
cmps
in
out
fs
dec
or
push
cmp
lgs
aaa
std
mov
xchg
sbb
stos
and
loop
ins
test
push
adc
mov
out
int
shl
retf
mov
pop
jno
test
into
mov
pop
inc
add
dec
xor
sub
push
cmp
imul
xor
shl
lahf
push
jbe
aam
jo
ret
aad
jmp
test
or
xchg
sbb
in
loope
push
or
loop
(bad)
shl
adc
(bad)
repz
sti
test
mov
in
sub
rcl
arpl
and
sar
sbb
pop
push
xor
xor
fxch
xchg
adc
aam
(bad)
movs
sub
arpl
stos
addr16
mov
add
sbb
jp
lock
and
mov
push
mov
out
xchg
mov
shl
icebp
xlat
enter
lods
loopne
xor
mov
mov
mov
xor
push
mov
mov
pop
bound
out
adc
adc
(bad)
gs
jp
ins
lahf
inc
cs
fist
xchg
retf
adc
sahf
fadd
call
cmps
addr16
int
sub
cs
mov
fcomp
jb
stos
movs
lods
int3
pop
icebp
ja
jmp
stos
sub
scas
mul
mov
(bad)
pop
xor
lods
xchg
sahf
mov
cmp
xchg
sub
inc
cmp
pop
arpl
pop
leave
nop
xchg
pop
xlat
sub
sub
pop
test
dec
call
sbb
les
mov
test
xchg
test
btr
cld
mov
xchg
ins
xchg
or
xchg
push
cmp
lods
adc
(bad)
pop
mov
bound
push
nop
mov
dec
cmp
out
cmp
cmps
pusha
mov
xlat
sbb
dec
lds
daa
pushf
(bad)
sti
mov
test
ins
push
cmps
aaa
mov
mov
push
and
dec
les
push
sub
aaa
pop
clc
cmp
jo
xchg
push
xchg
and
mov
sti
push
(bad)
repnz
and
dec
and
in
mov
es
aas
shl
sahf
into
dec
mov
int3
push
add
loop
shr
test
mov
sbb
movs
sahf
hlt
mov
clc
ret
cmp
adc
lds
(bad)
movs
retf
jecxz
setge
fstp
jmp
stos
les
mov
dec
popa
ins
jns
mov
pop
lea
inc
repz
pop
jl
mov
lock
ret
sti
xchg
push
ficomp
push
push
cmps
and
pop
jmp
sti
jp
cmp
push
in
in
popf
cmps
adc
jno
mov
mov
push
stc
loop
adc
xor
jmp
sub
xchg
stos
push
fs
jmp
inc
pop
push
jg
dec
(bad)
mov
pop
jle
dec
xor
mov
out
mov
shr
push
lahf
pop
cs
(bad)
arpl
sub
nop
imul
sub
inc
xchg
jne
maskmovq
test
das
add
mov
push
adc
push
dec
movs
nop
dec
pop
popf
pushf
push
adc
or
test
adc
xchg
sbb
adc
outs
xchg
jg
mov
aaa
or
and
bound
cdq
imul
ins
int
add
xchg
xor
test
mov
mov
xchg
xchg
add
jmp
or
mov
outs
sbb
mov
icebp
call
mov
mov
and
outs
pop
push
pop
push
nop
or
nop
les
jmp
cmc
inc
inc
ret
push
call
jp
fs
rol
mov
jo
test
mov
movs
push
out
mov
ins
push
xor
xor
int3
xchg
fnstcw
mov
jmp
inc
sub
daa
sbb
adc
ss
mov
repnz
mov
dec
dec
ret
in
dec
add
and
(bad)
inc
retf
pop
add
adc
push
cmp
mov
rol
pop
out
jo
mov
xor
or
adc
xchg
sub
sbb
jbe
pop
cmp
cld
into
inc
sub
movs
aad
pop
dec
pop
dec
jmp
jnp
sbb
test
push
cmp
(bad)
not
and
fsubr
push
adc
jp
cmp
test
cmp
stos
mov
mov
(bad)
adc
(bad)
inc
xor
enter
add
retf
add
cmc
inc
xchg
or
sub
adc
xor
sbb
call
mov
add
clc
fstp
dec
fwait
cmp
and
xlat
inc
sti
xor
mov
push
mov
add
xchg
sub
retf
ret
cmp
aaa
loopne
in
add
adc
js
nop
sar
outs
add
idiv
jmp
jae
test
arpl
imul
add
data16
or
xlat
into
mov
push
cmp
lahf
int3
imul
and
sbb
or
in
iret
test
cdq
sub
or
add
xchg
jae
mov
out
push
mov
fnsave
pop
cmp
cs
mov
inc
sbb
out
mov
(bad)
inc
pop
fcmovne
and
sti
outs
push
add
mov
retf
ds
inc
ret
cld
mov
pop
inc
fst
sbb
dec
addr16
cmp
sbb
imul
mov
add
mov
cmps
enter
jae
out
fist
(bad)
ins
fmul
inc
pop
mov
mov
popf
pushf
fmul
or
mov
jmp
clc
sub
mov
inc
sti
ins
cmp
out
adc
xchg
cdq
and
lds
or
mov
jno
sub
xor
pop
inc
and
hlt
in
retf
cmp
int3
jl
xchg
cmp
mov
fist
jo
(bad)
loop
and
scas
scas
sbb
call
mov
cmp
les
add
fs
pop
shl
ss
pop
mov
push
and
les
mul
sbb
or
push
mov
test
mov
jge
rcr
adc
jbe
cmp
fdivr
dec
(bad)
jae
stos
mov
aaa
mov
xlat
adc
sbb
xchg
pop
push
shl
fdiv
jo
adc
xor
adc
shl
mov
(bad)
adc
push
or
out
gs
and
dec
ins
sub
cmc
popf
addr16
shr
ss
mov
das
jne
inc
pop
push
retf
xor
and
xchg
mov
mov
outs
enter
mov
mov
inc
mov
loop
js
es
mov
xchg
jg
lods
loope
aas
loopne
push
enter
rol
lea
pop
popa
rcl
call
das
icebp
xlat
adc
lods
and
sbb
call
add
xchg
mov
inc
inc
pop
repnz
or
pop
std
das
mov
mov
ds
inc
lock
aam
cli
mov
pushf
(bad)
cld
fmulp
xchg
push
lods
cmps
jmp
repz
cmc
sub
mov
push
cmp
jbe
fdivr
rcl
scas
sbb
icebp
ins
mov
xchg
test
aam
pop
sub
push
or
xlat
mov
and
in
cmps
or
sbb
nop
iret
dec
push
mov
retf
cmc
stc
sbb
inc
sub
lahf
jg
jg
mov
add
loopne
dec
retf
push
test
jmp
xchg
je
cs
mov
out
xor
mov
fisubr
icebp
dec
mov
scas
out
das
push
in
movs
pushf
mov
cmp
push
aad
imul
in
repnz
adc
sbb
mov
pop
jno
xor
out
pop
inc
fisttp
add
and
aaa
sub
aad
or
jp
pop
aas
sub
test
mov
and
cmp
add
pop
pop
or
cmps
aam
inc
add
jp
xchg
ret
iret
cs
dec
jno
and
adc
pop
mov
mov
stos
test
mov
sub
loop
fdivr
add
xchg
sbb
loop
enter
int
mov
mov
xchg
int
movs
scas
sbb
nop
xor
cmp
jb
jmp
cmc
mov
and
or
fild
pop
out
and
int3
pop
mov
xchg
in
fisubr
xor
sub
int
int3
cli
mov
inc
in
imul
gs
lods
jmp
xchg
cld
pop
jl
inc
xchg
xcrypt-ofb
cmps
out
mov
jle
cmp
cdq
xchg
aaa
xor
jp
cwde
mov
test
mov
popa
fcom
xor
mov
jne
out
in
div
mov
aam
mov
sbb
out
test
lds
fimul
je
dec
into
xchg
rol
cmp
popf
add
aaa
mov
pop
mov
dec
cmp
(bad)
call
jae
jp
lds
mov
or
test
ins
aas
xchg
xlat
inc
xor
popa
cld
movs
cs
jecxz
call
aam
and
xor
mov
(bad)
fidiv
xchg
mov
ret
std
outs
(bad)
cmp
lock
cmp
jb
cmp
lods
bound
repz
retf
jp
mov
jge
xchg
ds
dec
pushf
shl
inc
nop
scas
cmp
add
ror
fstp
mov
ret
test
loop
lds
or
loopne
pop
xchg
pop
xchg
pop
push
or
sub
in
mov
popa
push
pushf
(bad)
cli
mov
fyl2xp1
xor
loop
mov
pop
inc
fwait
push
ja
adc
mov
cmp
xor
pusha
fist
out
jge
push
call
lods
sub
test
fbstp
sub
jmp
not
push
lods
mov
fbld
test
mov
ja
push
and
and
mov
call
sbb
mov
push
pop
cmp
rcl
add
shl
cmps
xchg
cmps
arpl
adc
and
lds
mov
push
xchg
loopne
and
ficom
push
bound
add
add
add
mov
cmp
mov
sbb
pusha
cld
mov
adc
cmp
cmp
pop
cmp
arpl
mov
sub
push
dec
push
imul
or
or
cmps
je
retf
inc
aas
ret
int3
movs
jmp
es
push
mov
lds
mov
addr16
sbb
cmp
out
mov
mov
add
fisttp
or
jo
add
inc
fisubr
imul
loope
fiadd
fscale
out
in
cs
dec
mov
dec
cmp
push
es
sti
add
xor
loop
dec
and
cmp
push
xor
inc
fs
sub
mov
push
fucomi
clc
movs
dec
adc
iret
nop
push
daa
(bad)
loop
pop
stos
aam
push
adc
fwait
sti
int3
jno
and
or
int3
call
jno
push
loop
push
sub
test
cmp
and
jne
aam
lock
popa
xchg
push
cmps
or
sti
std
sub
shr
(bad)
mov
cmps
cmp
mov
mov
mov
leave
xchg
sbb
mov
sub
loope
add
inc
arpl
test
push
or
push
dec
aas
pop
(bad)
sbb
push
je
test
dec
out
push
idiv
fst
add
mov
in
sar
sub
jmp
xor
imul
imul
aaa
inc
lds
enter
nop
xorps
rcl
enter
jnp
test
(bad)
js
(bad)
or
pcmpeqd
lock
nop
pop
xlat
xor
scas
xchg
ja
mov
jmp
push
fistp
pop
push
into
les
retf
repz
cmp
sub
stos
xor
rol
jnp
inc
pusha
dec
xor
xchg
or
sbb
mov
imul
test
outs
push
and
xchg
inc
bound
fmul
pushf
jmp
cmc
sbb
push
cmp
cmps
das
test
ret
hlt
cmps
iret
mov
mov
repz
mov
ret
sbb
xchg
and
push
push
fistp
jnp
aas
scas
fimul
jne
xchg
lods
out
je
jne
sbb
out
mov
test
ins
lea
fiadd
imul
adc
push
or
ficom
ja
jg
jae
jae
mov
jp
mov
or
pop
cli
aas
out
gs
popf
lods
out
mov
lds
jg
fs
pop
dec
movs
or
in
and
inc
repnz
pop
pop
psrld
fsubrp
in
add
aaa
enter
mov
mov
hlt
mov
cmps
fimul
lock
test
and
les
cli
lock
jecxz
ds
mov
pop
bound
ss
jecxz
mov
out
add
int3
aad
enter
sbb
hlt
in
and
(bad)
pop
push
push
mov
les
xlat
in
adc
ret
push
call
and
jnp
add
shl
loope
jge
bound
jnp
dec
xchg
xor
test
sbb
jl
sub
in
fmul
inc
aaa
outs
pop
push
mov
inc
xacquire
mov
loop
and
adc
dec
xchg
adc
or
add
and
and
sahf
push
outs
or
mov
dec
aas
ja
cmps
out
stos
add
fnsave
mov
sub
(bad)
pusha
jae
xchg
xchg
xchg
pusha
jns
xchg
sbb
sub
push
sbb
daa
jmp
imul
enter
push
jnp
loop
repnz
out
pop
enter
add
mov
in
jecxz
lds
cli
mov
push
jge
jno
inc
loope
xchg
icebp
(bad)
or
jg
or
movs
inc
scas
idiv
pop
dec
dec
fnsave
popf
xchg
inc
test
jno
iret
xor
add
fsub
fcompp
ret
call
gs
fmul
mov
cs
in
rcl
adc
jmp
pop
jno
rol
add
je
movs
loopne
clc
and
nop
iret
popf
add
loop
add
repnz
xor
mov
or
in
inc
movs
cmp
jns
and
out
cmp
aaa
cld
dec
lods
mov
xchg
cmp
fwait
imul
rcl
mov
mov
sti
pop
cmps
jle
and
ret
fsubp
shr
and
xchg
adc
mov
rcr
adc
ja
mov
fimul
mov
icebp
test
adc
xchg
pusha
pushf
lahf
outs
clc
loope
pop
inc
ficom
sbb
inc
sbb
adc
xchg
loopne
ret
mov
aad
jbe
daa
xchg
cli
mov
call
sub
ins
lods
das
icebp
cmps
xor
ss
call
addr16
jle
push
hlt
push
rcl
jnp
into
ds
mov
jno
add
test
dec
pop
fbld
push
fisubr
fsubr
cmps
push
jmp
add
sar
and
sub
iret
lahf
sub
in
dec
retf
dec
push
xor
mov
test
(bad)
test
adc
mov
sub
div
loop
jnp
js
jg
push
jno
mov
jg
mov
pop
(bad)
fst
(bad)
pop
ret
pop
mov
cs
das
call
repnz
mov
shl
jae
mov
push
ror
sub
cmp
adc
pop
dec
mov
inc
or
adc
jno
xor
fs
inc
cld
push
int
sbb
inc
sahf
call
cmp
pop
cs
sar
sub
repnz
sub
mov
mov
arpl
pop
xor
and
in
sbb
jbe
or
pop
jmp
aas
cmp
outs
cli
cmp
jmp
aam
pusha
aad
into
add
fmul
aam
or
xchg
cmp
inc
fwait
(bad)
jo
inc
pop
clc
ror
test
dec
mov
in
jmp
gs
out
fdiv
rcl
mov
rcr
push
xchg
movs
jecxz
sbb
into
call
push
inc
ins
xchg
(bad)
call
jp
mov
mov
fistp
ins
cmp
lea
xchg
inc
sbb
repz
or
rcr
or
dec
pop
call
test
push
cmps
push
outs
out
jecxz
stos
sub
push
jno
fldenv
call
shl
aas
mov
push
xlat
jge
jbe
mov
mov
sub
jle
jle
lds
aam
shl
shr
jle
pop
dec
call
inc
fbld
es
rcr
jo
imul
cmp
iret
mov
adc
mov
mov
shl
or
pop
ja
push
imul
scas
bound
repz
and
jle
add
stos
in
mov
test
ds
dec
push
jbe
imul
and
xchg
std
ds
mov
pop
out
shl
addr16
hlt
mov
xor
and
dec
into
mov
mov
pop
lods
ds
sbb
in
inc
in
ret
aas
sbb
lock
aad
and
les
test
xlat
sub
popf
stos
push
test
jmp
jge
pop
lods
and
mov
into
shl
add
adc
and
cmp
test
jbe
mov
xor
mov
sbb
or
inc
adc
and
pop
pop
mov
push
rol
lahf
not
xor
or
jmp
xor
mov
mov
ret
scas
adc
(bad)
and
add
inc
push
out
mov
icebp
add
cld
dec
(bad)
mov
lods
dec
daa
les
das
aas
fnstcw
sbb
jp
neg
fisubr
mov
push
in
mov
ja
in
fisttp
xchg
xor
jo
mov
cmp
int
xor
xor
(bad)
mov
xchg
sub
sbb
inc
xor
inc
inc
adc
mov
jl
pop
lods
mov
jns
lods
dec
inc
lods
pushf
ffreep
xor
pusha
dec
dec
mov
dec
or
add
mov
push
inc
xchg
sub
add
inc
ret
outs
pop
mov
xchg
out
popf
out
push
rcl
into
dec
and
ins
push
xor
mov
sbb
ds
sbb
lea
sti
fadd
push
pop
and
scas
loop
scas
xchg
pop
dec
dec
mov
loope
mov
sbb
ja
in
mov
pop
adc
push
out
xchg
ss
clc
jle
ins
adc
mov
xor
test
push
dec
dec
add
jbe
push
pop
mov
test
jl
call
fnsave
xchg
mov
pop
xchg
sar
imul
xchg
out
adc
out
ins
or
add
xchg
outs
js
retf
adc
sbb
lock
jno
imul
fcom
enter
test
inc
retf
jecxz
loopne
mov
or
push
pusha
lods
xor
cmp
fild
xor
or
test
loop
popa
(bad)
mov
repnz
(bad)
xchg
mov
fidivr
mov
mov
mov
and
out
into
nop
rol
bound
fwait
cwde
loope
add
int3
mov
fist
xchg
mov
add
mov
mov
movs
aam
jbe
daa
clc
(bad)
int
adc
ffree
push
inc
cmp
xchg
xlat
mov
jecxz
sbb
adc
out
xor
adc
sti
jmp
fdivr
outs
sahf
into
or
popa
mov
inc
popa
pop
push
fwait
sar
or
sbb
push
and
cmp
call
xchg
fisubr
pop
js
jne
nop
js
push
jne
sub
pop
in
push
out
jmp
out
cmp
pop
sbb
fmul
je
test
mov
mul
add
test
repz
pop
add
adc
(bad)
pop
scas
js
mov
popf
call
(bad)
sub
fisttp
dec
pop
dec
sub
mov
cmps
xchg
test
xchg
cmps
jmp
or
(bad)
pop
clc
xchg
xor
dec
dec
movs
pushf
xchg
iret
pop
add
lods
push
xor
inc
and
xchg
shl
mov
loope
or
aas
dec
out
sub
dec
dec
repnz
or
loope
loope
retw
push
out
enter
pop
daa
std
sbb
dec
retf
retf
pop
add
xor
push
inc
pop
shl
push
push
inc
add
pop
mov
mov
mov
aam
adc
jae
xor
out
sub
stc
mov
aaa
sub
sti
jns
mov
pop
ja
daa
mov
cdq
mov
bswap
(bad)
fisub
or
bound
daa
shl
fcomp
sbb
vmptrst
jb
out
(bad)
outs
and
das
pop
repz
mov
mov
jbe
stos
call
in
adc
cmps
fadd
mov
test
(bad)
fstp
adc
cmps
inc
int3
pop
push
(bad)
stos
mov
js
cmp
scas
ins
sub
xor
mov
lea
or
ficomp
xchg
jb
pop
shl
pop
cmc
repz
(bad)
push
or
pusha
xchg
mov
cmp
add
(bad)
mov
mov
pop
pop
xchg
sub
push
push
ficomp
das
leave
adc
cmp
ret
inc
sbb
push
test
xor
sar
sbb
cmp
cmovle
or
ss
add
sbb
mov
pop
mov
xchg
adc
jo
pop
daa
xchg
int
sub
adc
or
pop
es
jg
aaa
sti
rcl
fld
pusha
setae
and
xor
push
scas
(bad)
in
pop
test
adc
pop
mov
mov
pushf
cld
nop
mov
pop
stc
ret
scas
test
inc
enter
push
pop
and
jb
pop
add
cmp
sub
aaa
cld
mov
pop
lock
mov
dec
es
pop
cmps
mov
es
cdq
and
pop
push
push
lahf
std
pusha
jbe
das
xchg
(bad)
mov
sbb
loopne
int3
sub
out
fidiv
sbb
or
ret
jae
push
jg
lea
cs
or
ds
jno
pop
adc
outs
cmp
adc
into
jb
adc
xor
mov
sti
lods
cld
jg
mov
std
test
ret
sub
mov
in
xor
add
sbb
ret
cmp
ins
bound
mov
lock
dec
dec
jns
cdq
repnz
mov
mov
loopne
sar
fild
xchg
aas
sub
clc
imul
js
push
pop
push
cwde
jno
sbb
das
call
jo
js
and
hlt
push
mov
out
cmp
mov
jl
mov
push
cmp
push
jecxz
inc
out
jne
icebp
test
add
mov
sub
mov
and
mov
int3
and
das
int
(bad)
pop
pop
jp
cmp
pop
je
cmp
rcr
out
loope
arpl
mov
mov
lods
stc
jns
dec
xor
jmp
into
clc
in
mov
jmp
jno
sahf
out
mov
pop
and
pusha
rcl
push
es
and
pop
jae
xchg
jg
jg
inc
xchg
lds
mov
(bad)
fistp
test
dec
test
imul
repnz
pusha
adc
in
aas
scas
lods
mov
inc
iret
jmp
outs
jp
adc
mov
mov
xchg
test
test
loop
jnp
int
adc
mov
push
shl
pusha
inc
mov
repz
mul
mov
push
inc
sub
dec
mov
clc
add
mov
imul
xchg
out
add
fwait
aas
lahf
dec
add
dec
ds
sub
sub
call
xor
mov
adc
or
push
xchg
(bad)
adc
sahf
pusha
inc
xor
inc
pusha
mov
lahf
pop
mov
loopne
push
xchg
js
xchg
or
scas
mov
pop
jae
xchg
mov
jg
adc
jnp
into
call
cmps
cmp
sub
lahf
(bad)
lahf
xlat
fimul
bound
inc
pop
push
push
and
(bad)
sub
and
aad
fadd
cmp
mov
mov
or
add
push
jns
inc
jecxz
push
cmp
jmp
sub
fisub
cs
inc
out
sbb
xor
clc
jp
test
inc
aaa
add
or
ds
mov
mov
mov
pop
outs
dec
dec
jo
jmp
movs
in
add
outs
out
fdivr
sbb
ror
(bad)
cdq
pop
sbb
jnp
xor
jnp
ins
jp
jmp
out
popa
push
test
cmp
cmp
xchg
mov
imul
pop
push
mov
std
dec
pop
jg
scas
or
or
sub
call
jp
adc
sahf
(bad)
lahf
sbb
push
mov
test
jno
push
cmp
jnp
mov
imul
pop
ffree
mov
in
sub
mov
mov
sbb
jl
or
mov
cmc
cdq
iret
xchg
dec
mov
daa
ss
jp
in
add
nop
xchg
fild
hlt
mov
and
push
pop
mov
mov
jbe
int3
add
scas
inc
call
xlat
fdiv
hlt
pop
xor
sbb
mov
or
xor
mov
mov
sahf
lock
push
push
dec
xor
xchg
mov
pop
xor
add
push
sbb
int3
xor
test
rcr
and
push
push
stos
dec
aas
popf
imul
(bad)
cmp
js
jno
pop
add
or
cmps
or
xchg
xchg
or
fist
and
shr
xlat
sbb
xchg
adc
mov
int3
sbb
in
and
xchg
fdiv
mov
iret
arpl
inc
call
sbb
push
shr
loop
or
sub
adc
fdivr
mov
(bad)
lea
icebp
and
pop
movs
sub
out
repnz
repz
lock
fcomp
stc
lahf
pop
pop
xor
jmp
scas
iret
or
inc
lods
arpl
mov
jle
mov
arpl
imul
daa
fs
aam
mov
jo
js
adc
dec
jp
adc
pop
xor
xor
out
jmp
cmp
mul
or
mov
test
or
addr16
sbb
pop
dec
mov
(bad)
lds
cmp
fmul
test
dec
add
push
pop
jae
sub
inc
adc
fldenv
and
sub
adc
cmp
jmp
and
lahf
popf
in
into
push
inc
adc
cs
daa
std
dec
outs
jl
or
mov
push
aad
jg
addr16
inc
cmps
sub
jmp
retf
sti
cmp
inc
xlat
jl
dec
fidivr
add
stc
add
inc
int
(bad)
imul
jl
xor
fxch
inc
mov
or
test
rol
cld
retf
add
fimul
lods
sub
jae
dec
xchg
or
mov
and
mov
nop
call
inc
cmp
(bad)
loop
outs
daa
mov
mov
mov
push
xor
fst
mov
test
cdq
fs
cmp
jecxz
jl
sub
xchg
push
xchg
les
adc
test
sbb
xchg
and
sbb
mov
cmp
aam
fdivr
mov
sub
or
int
jns
push
mov
(bad)
cmp
jmp
or
aad
mov
pusha
int3
ins
inc
test
dec
fadd
cmc
sahf
dec
loope
aad
fiadd
dec
jl
pop
out
stc
in
mov
sbb
(bad)
and
ror
add
jo
ss
daa
inc
jmp
leave
or
xchg
retf
ds
pop
dec
mov
sahf
cmps
or
out
je
(bad)
aad
or
push
shr
jmp
inc
mov
icebp
out
pop
sbb
rol
inc
jecxz
xchg
xor
test
mov
mov
mov
add
ret
idiv
mov
das
mov
lds
jne
js
add
pop
movs
out
pushf
cmp
mov
push
loopne
in
mov
mov
shr
inc
push
js
xor
stos
daa
sub
dec
adc
rcl
pop
cmp
fwait
dec
adc
retf
stos
loop
cmp
daa
jns
in
sbb
pop
mul
mov
sub
push
pop
movs
(bad)
jbe
cld
lods
jbe
push
jne
mov
repz
inc
lea
adc
fldcw
idiv
shl
fisttp
stc
sbb
pop
or
jle
push
inc
daa
ins
xchg
sub
lahf
dec
push
add
mov
sahf
out
daa
or
push
mov
ret
xchg
jns
ins
dec
lods
pop
int3
mov
(bad)
mov
call
jmp
mov
sahf
add
jmp
or
ret
out
xor
inc
iret
mov
or
pop
in
mov
push
loopne
xchg
mov
inc
(bad)
fadd
mov
and
inc
std
imul
ins
leave
jae
in
and
lods
lods
jmp
push
sub
jmp
add
adc
sbb
xchg
fld
dec
dec
fdiv
inc
fidiv
(bad)
test
test
pop
add
adc
mov
jp
cli
sub
jmp
jno
xchg
shl
mov
rcr
mov
inc
idiv
jns
add
addr16
neg
jne
retf
mov
mov
lods
inc
inc
retf
push
jbe
jno
clc
xor
dec
sbb
icebp
inc
in
xchg
or
fidivr
jmp
cs
les
call
xor
retf
cs
popf
pusha
xchg
(bad)
call
inc
or
mov
adc
jmp
iret
push
dec
cli
adc
and
add
fild
add
fild
fst
aas
shl
jo
xchg
shr
jmp
mov
mul
and
loopne
pop
test
icebp
jl
or
mov
xchg
fbstp
loope
mov
fist
push
xchg
add
jmp
mov
pop
mov
mov
sbb
ins
and
or
push
and
xchg
hlt
push
inc
and
or
bound
in
inc
mov
pop
push
fwait
in
jns
icebp
out
jns
sub
nop
pop
or
out
jg
hlt
jmp
ror
fdivrp
pop
xor
dec
lods
push
jge
ss
or
cmp
cdq
movs
jmp
mov
push
fxch
aas
mul
add
sbb
push
lds
cmp
jb
mov
out
aam
dec
fwait
in
xchg
ret
enter
fsub
(bad)
rcl
pop
jle
mov
or
ficom
push
popa
jmp
push
mov
dec
retf
mov
int3
mul
ret
call
dec
xor
xchg
cmp
dec
cmp
and
ret
and
inc
mov
or
sti
adc
jmp
xchg
cmp
out
cmps
adc
and
mov
add
dec
jnp
pop
jo
shl
movs
adc
or
(bad)
test
jl
sbb
xlat
jmp
mov
inc
shl
adc
aas
mov
adc
loope
push
cs
mov
lods
int
add
fwait
dec
sub
dec
mov
and
push
mov
icebp
mov
mov
hlt
add
leave
add
stc
mov
(bad)
jmp
hlt
sbb
add
sbb
pop
mov
or
pop
into
loopne
add
sub
mov
xchg
ins
aaa
xchg
in
dec
mov
(bad)
stos
xlat
dec
jp
inc
mov
jle
repz
jmp
mov
mov
and
pusha
popa
in
xlat
cld
dec
pushf
cmps
push
add
lods
out
pop
std
jmp
repnz
sub
jle
jg
pop
and
push
cmp
scas
call
sub
inc
push
dec
and
or
add
into
scas
outs
(bad)
lfs
mov
in
dec
pop
mov
adc
dec
mov
in
mov
call
(bad)
pushf
inc
(bad)
lahf
jge
sbb
xor
mov
aas
push
cmp
stos
and
mov
push
ret
inc
jb
das
dec
push
(bad)
lods
xchg
std
movs
push
std
sub
jnp
xor
push
mov
(bad)
push
mov
aad
mov
inc
mov
scas
jg
xchg
repnz
add
jne
xchg
test
push
stos
push
int
push
in
jmp
gs
fnclex
dec
sar
and
xor
or
sub
push
jecxz
jno
jno
inc
movs
mov
sub
into
fcmovnb
sbb
dec
mov
movs
call
sbb
mov
xchg
popf
add
jmp
sub
sbb
dec
sub
mov
dec
fcomp
shl
xchg
fucomip
dec
dec
lea
call
cmp
pop
dec
mov
lahf
and
call
push
cmp
mov
lahf
jnp
adc
popa
xchg
xor
test
add
jmp
sub
sbb
pop
cwde
mov
test
ret
mov
or
int3
je
inc
not
hlt
inc
test
cmp
mov
hlt
mul
shr
arpl
fucomi
push
scas
add
xor
mov
cli
sub
int3
ficomp
jo
dec
(bad)
fidivr
je
fs
inc
fstp
or
fcmovnb
sbb
(bad)
lds
popf
test
jbe
mov
je
aaa
out
aaa
loope
enter
cmp
mov
ss
mov
xor
xchg
pusha
or
add
xchg
and
cli
adc
(bad)
pop
adc
ret
movs
push
inc
repnz
(bad)
fmul
add
aam
test
and
dec
sub
mov
aad
add
add
arpl
jge
(bad)
xchg
cmps
(bad)
pop
pop
loope
lods
aam
fsubr
ss
or
sub
rcl
xchg
add
call
popa
loope
pop
ret
std
shr
imul
adc
rol
push
push
push
and
xor
and
dec
sbb
mov
mov
cmp
xor
xor
push
(bad)
and
cmp
popa
gs
mov
cmovnp
mov
stc
addr16
call
jo
adc
(bad)
dec
lods
xor
mov
push
cmp
nop
movs
fdivr
or
aaa
jns
jge
sbb
or
sbb
lea
and
loop
xor
pushf
ds
nop
or
push
imul
push
fiadd
test
add
mov
int3
cmp
aaa
fs
mov
jmp
add
js
mov
jge
pop
ret
clc
sub
mov
popa
inc
or
sar
outs
sub
cmp
lea
pushf
(bad)
cmp
inc
psubd
jecxz
pop
repz
jbe
jne
or
xchg
fst
sub
les
cmp
popa
push
inc
ficomp
test
cwde
jl
in
jp
xor
ins
pop
(bad)
jns
or
push
mov
mov
ja
push
das
add
mov
dec
movs
popf
je
mov
fidiv
pop
push
push
fldenv
and
ficom
stos
movs
hlt
dec
in
pop
nop
mov
mov
imul
fld
and
inc
stos
pusha
outs
dec
not
or
cs
mov
daa
scas
push
lods
add
sub
adc
stc
adc
test
arpl
into
(bad)
mov
test
xchg
xchg
mov
pop
sbb
shl
lods
dec
movs
xchg
sub
clc
popw
add
stos
dec
aaa
or
addr16
adc
inc
dec
pushf
call
sub
mov
and
std
mov
mov
ret
ret
sbb
jns
movs
cld
imul
repz
mov
sub
pop
mov
jne
jp
test
xor
sbb
(bad)
repz
popw
das
out
jnp
lahf
dec
popf
jo
in
cmp
test
push
repz
jmp
lds
stos
and
push
mov
daa
xor
repz
inc
hlt
popf
sub
cld
jns
mov
xor
jns
xor
jle
or
jl
xchg
sahf
mov
loope
imul
pop
push
lahf
add
lds
pop
cmp
cmp
and
push
loop
std
inc
mov
xchg
sbb
mov
and
clc
pusha
and
pop
es
cmps
sub
lds
mov
int3
std
inc
xor
(bad)
in
and
jecxz
pop
jns
nop
scas
sub
mov
xor
loope
test
das
mov
pop
icebp
push
inc
mov
into
fsub
and
lods
out
popf
aad
(bad)
adc
(bad)
scas
or
cmps
cmp
mov
inc
cmp
mov
push
push
jle
mov
scas
push
loope
xchg
psubsb
xor
dec
test
gs
xlat
test
xchg
pop
push
out
add
mov
(bad)
jae
scas
jns
pop
test
fcmovb
jmp
retf
das
push
push
pop
adc
add
mov
test
sbb
fisttp
mov
xor
aas
(bad)
retf
jmp
push
icebp
inc
vmulsd
xchg
pop
jo
(bad)
push
mov
jp
xor
cld
mov
add
inc
aaa
scas
push
push
xlat
je
xor
in
or
sbb
(bad)
stos
shl
out
jnp
push
(bad)
(bad)
int
iret
mov
mov
(bad)
or
inc
outs
push
mov
cs
mov
cmps
sbb
pop
in
push
and
sbb
pop
xor
mov
mov
cmp
xchg
enter
call
xchg
ret
push
(bad)
(bad)
jnp
sar
mov
xor
sbb
movs
mov
dec
hlt
mov
dec
enter
mov
mov
test
cmp
cmp
test
mov
sub
out
inc
rol
push
xchg
xchg
mov
(bad)
(bad)
in
mov
and
dec
cmp
push
add
mov
jge
stos
ins
inc
mov
fild
mov
push
jecxz
sar
sub
pop
cmp
inc
jmp
in
popf
mov
call
jecxz
jns
cmp
ins
xor
das
lods
push
mov
pop
mov
fisubr
fwait
hlt
daa
and
jle
aas
sub
sub
push
nop
ss
xor
xchg
jno
jg
clc
cmp
arpl
cmp
push
mov
call
(bad)
jmp
mov
mov
daa
mov
or
xor
xchg
in
fmul
or
into
push
mov
not
sbb
mov
inc
leave
jle
mov
and
push
test
jmp
shl
push
dec
fadd
mov
jle
ret
outs
push
mov
ss
das
dec
retf
mov
push
pop
daa
mov
adc
fs
addr16
push
fwait
mov
adc
jnp
xor
push
ja
xchg
adc
fs
(bad)
lahf
imul
jno
movs
(bad)
push
sbb
sub
ins
jge
aas
adc
int
(bad)
pop
ds
mov
add
loop
ret
mov
and
int3
mov
pop
test
sar
adc
rol
inc
inc
imul
(bad)
test
(bad)
mov
or
mov
clc
xchg
mov
fxch
sub
add
fs
mov
and
sbb
mov
add
leave
daa
xor
test
cli
or
(bad)
popf
or
imul
fbld
ds
mov
sub
cmp
loopne
adc
dec
mov
adc
imul
sbb
add
xor
jg
sar
icebp
ftst
inc
ret
sti
cmp
mov
inc
sbb
push
inc
fisttp
mov
scas
cmps
rcr
mov
sbb
mov
jns
xlat
push
xchg
ins
cmc
cmp
jecxz
(bad)
scas
imul
or
or
dec
jb
stos
sbb
push
add
push
push
addr16
push
aam
adc
lods
jecxz
lods
mov
add
add
inc
sar
jmp
imul
xchg
in
push
cld
mov
jb
xor
cmp
or
sbb
sub
imul
(bad)
sbb
mov
int
or
pop
adc
inc
stc
loop
or
jo
mov
mov
ror
adc
mov
(bad)
add
(bad)
mov
inc
sub
pop
mov
add
ins
sahf
aad
cld
mov
bnd
sar
das
ins
inc
call
pop
je
mov
and
in
in
jae
hlt
sub
mov
es
dec
ds
mov
ins
out
mov
je
jnp
pop
pop
imul
test
call
push
push
mov
shl
fisubr
cmp
pop
out
xor
bound
sub
loopne
inc
jmp
popf
sub
dec
mov
sbb
push
enter
xor
push
inc
fs
hlt
inc
pop
mov
bound
gs
cmp
dec
pop
mov
cmp
in
and
sbb
sbb
fwait
mov
je
push
add
retf
sbb
adc
addr16
cmp
push
hlt
mov
loope
loop
fisttp
lock
xor
outs
and
inc
push
aam
xchg
cmp
add
inc
fdiv
fisub
adc
test
add
sbb
aas
loope
lds
stc
mov
rol
jne
xor
outs
sti
ret
cmps
mov
(bad)
ss
jp
adc
out
jle
test
sbb
mov
movs
adc
xor
iret
mov
mov
arpl
mov
stc
rol
in
dec
ds
jmp
and
pop
inc
pop
push
sub
inc
cmp
jmp
dec
inc
xor
cld
popa
adc
push
add
ins
jns
mov
popf
xchg
adc
and
stos
push
pop
es
int3
inc
test
jno
repnz
xchg
rcr
nop
sub
xchg
pop
pusha
addr16
sbb
or
sub
sbb
lods
jg
inc
pop
popf
push
pop
jbe
imul
gs
cmp
mov
pop
(bad)
(bad)
jo
aas
ss
fs
cmp
mov
push
pop
dec
mov
mov
fadd
xor
jb
fmul
mov
lahf
neg
aaa
or
outs
(bad)
out
out
lds
ret
(bad)
adc
ins
retf
fimul
and
loop
sbb
ja
mov
adc
in
(bad)
xchg
xor
push
sbb
and
in
xlat
dec
es
aad
or
lea
pop
test
popf
icebp
pop
push
lea
add
sub
dec
jb
or
outs
or
enter
data16
cwde
and
fidiv
cmps
xor
cmps
out
inc
int
arpl
in
movs
lds
and
pop
jne
sbb
add
loope
call
fisub
xor
sub
push
cmp
pusha
jne
ds
dec
ins
out
test
add
loopne
sub
xor
lods
and
cmc
fcomp
jmp
cmps
add
mov
cmps
pop
inc
inc
mov
pop
xchg
pushf
and
sub
cmc
sub
jno
retf
mov
lds
(bad)
shl
pop
xor
call
in
cmp
test
ja
jmp
add
sbb
movs
jg
stos
ins
das
shl
pop
adc
rcl
mov
stos
into
jbe
dec
lea
inc
popa
iret
mov
imul
xchg
jl
cdq
retf
(bad)
test
mov
jecxz
lods
jo
shl
cwde
or
push
xchg
mov
mov
cmp
lea
mov
or
(bad)
(bad)
arpl
cmc
push
pop
pop
xchg
mov
fisub
call
push
push
mov
sub
into
jmp
dec
not
fiadd
mov
dec
pop
repz
cmps
jle
push
xor
es
je
pop
add
test
xlat
(bad)
mov
aam
inc
jnp
inc
ficomp
out
leave
xor
inc
cmp
imul
cmp
push
bound
xchg
mov
dec
in
pop
ins
ret
pop
nop
rcl
push
sub
stc
(bad)
int
push
fwait
(bad)
(bad)
call
push
aaa
movs
cmp
mov
ss
std
ret
cli
mov
jp
sub
sbb
jmp
push
movs
xchg
sbb
mov
push
sub
test
fld
push
jnp
mov
add
imul
cmp
xchg
push
inc
je
add
mov
outs
(bad)
int
hlt
lds
mov
dec
xor
push
std
pushf
test
daa
sub
push
mov
jle
dec
xchg
sbb
dec
or
lds
scas
dec
ds
adc
retf
xchg
imul
mov
dec
test
enter
nop
lock
lods
sahf
xchg
cdq
ins
sub
mov
in
stc
nop
inc
lods
jge
nop
cmp
cdq
(bad)
adc
in
dec
mov
sub
add
std
sbb
xlat
adc
or
jle
pop
cs
pop
rol
in
mov
inc
scas
mov
lds
xlat
add
mov
pop
or
xchg
mov
dec
adc
lea
xor
mov
push
mov
adc
mov
arpl
push
mov
std
fadd
sub
mov
xchg
pop
aad
clc
lods
sub
push
imul
mov
jg
or
and
enter
in
inc
je
mov
cmc
jg
jo
fild
scas
into
sbb
loope
aaa
mov
arpl
mov
clc
mov
ja
sahf
xor
out
xor
mov
pop
adc
pusha
cld
dec
adc
adc
aaa
aad
(bad)
sub
mov
mov
mov
or
xchg
icebp
rcl
jo
mov
mov
mov
and
cmps
int3
sbb
sub
or
ds
inc
cwde
push
sbb
sahf
ins
(bad)
adc
or
push
dec
mov
(bad)
xor
cmps
rol
retf
pusha
cld
dec
sbb
push
dec
push
icebp
jae
ror
fsub
fs
jno
outs
jo
push
int
mov
sub
das
shl
sbb
push
ficom
xlat
push
loopne
jbe
(bad)
pushf
cmp
mov
fimul
fdiv
push
and
add
pop
push
test
xlat
sub
add
retf
pop
inc
pop
xchg
sar
popa
xchg
jb
mov
fwait
mov
xchg
dec
xchg
inc
sub
cmp
enter
rcl
add
push
out
fcom
bound
cmp
push
pop
repnz
adc
inc
movs
dec
(bad)
fcomp
leave
mov
test
mov
add
push
mov
ja
shl
mov
test
jae
ja
pusha
fcom
outs
sbb
xchg
dec
mov
je
jno
aam
pop
ffree
pop
fidiv
test
adc
or
dec
sbb
in
div
adc
xchg
mov
xlat
sub
xchg
out
sbb
fcomp
test
mov
adc
inc
inc
test
fsincos
les
cmp
and
push
sub
in
je
push
fcom
scas
bound
mov
and
jae
stc
mov
xchg
cmp
enter
pop
pop
push
mov
cdq
aad
aad
mov
adc
popf
movs
clc
pop
jmp
add
sbb
test
inc
inc
dec
pop
stos
lea
cdq
out
mov
rol
cmps
cmc
fcom
xor
cmp
aaa
cdq
jle
push
repnz
int
iret
shld
mov
mov
cmp
sbb
(bad)
mov
leave
mov
test
fs
hlt
pop
lds
cs
loop
int
imul
jle
sti
jmp
push
cmp
into
shl
dec
(bad)
mov
leave
in
pop
xchg
cmp
retf
push
fst
sar
mov
fs
sti
mov
sti
es
aam
jmp
jo
imul
loopne
pop
jno
push
test
xor
and
xor
inc
popf
pushf
out
inc
out
jmp
test
sub
sub
(bad)
xchg
sti
inc
in
repz
addr16
cmps
jno
mov
out
lds
retf
xchg
nop
pusha
mov
clc
call
xlat
fstp
xor
bound
adc
clc
pusha
xchg
and
add
cmp
add
popa
lods
(bad)
jb
sub
sub
mov
jno
add
mov
dec
pop
jle
sub
lea
push
mov
xchg
mov
push
dec
jbe
adc
ror
hlt
sbb
cmps
adc
mov
call
inc
sbb
sbb
sbb
stos
dec
sub
mov
mov
in
loopne
cmps
xor
jns
jns
sub
fsubr
stc
fisubr
mov
push
mov
adc
cmp
in
dec
pop
es
sub
bnd
not
sbb
pop
jbe
sbb
stos
adc
cmc
cli
add
and
(bad)
fcomp
and
xchg
call
adc
pop
pushf
test
pop
iret
pop
lds
test
std
push
jae
bound
cmp
mov
stos
add
jmp
nop
push
in
aam
cmp
loop
fidiv
mov
mov
test
out
nop
sub
cmps
sbb
pop
mov
icebp
pushf
push
fstp
test
loop
pop
push
xchg
loop
inc
xlat
mov
rcr
aam
mov
rcr
sti
leave
mov
(bad)
push
jns
mov
jl
lds
cmp
loop
and
lds
dec
pusha
sbb
inc
xlat
cld
mov
stos
jo
fisubr
jo
scas
pop
imul
leave
or
out
fdivr
cmps
ret
pop
out
mov
or
xor
imul
mov
cld
jnp
(bad)
jnp
sahf
mov
fsubr
push
mov
dec
loope
cmp
(bad)
mov
sub
mov
dec
push
mul
outs
mov
dec
jl
inc
fiadd
sub
fdiv
inc
pusha
fcmovb
mov
lock
(bad)
cmps
mov
jl
push
out
pop
scas
clc
lahf
fbld
add
and
adc
test
ins
inc
mov
cmc
loope
sub
mov
loop
mov
xchg
push
enter
pop
fsub
test
dec
daa
push
jg
xor
ror
jp
int
std
in
stos
adc
sub
iret
jbe
add
(bad)
es
imul
and
(bad)
sbb
sbb
xchg
bound
ror
push
add
gs
or
pop
adc
push
mov
loope
push
cs
sti
mov
imul
dec
pop
fstp
adc
not
mov
and
mov
xchg
or
hlt
fsub
ins
inc
stos
gs
inc
xor
loop
imul
iret
cmps
pushf
in
mov
dec
mov
push
aaa
or
cdq
std
aaa
pop
cdq
push
scas
jnp
or
push
in
ficom
call
clc
xor
cmp
jbe
cmp
(bad)
mov
add
cmps
fisttp
retf
les
mov
fmul
mov
outs
dec
mov
inc
cmc
inc
and
jb
mov
inc
test
(bad)
jbe
addr16
movs
pop
xchg
and
xor
mov
aad
cmps
xor
in
inc
xchg
inc
or
and
movs
adc
jmp
out
imul
out
out
shl
jns
dec
stos
pop
and
mov
bound
cmp
pop
(bad)
rol
sti
dec
sti
fs
lea
mov
jle
pop
ret
push
lock
(bad)
sbb
(bad)
leave
xchg
loopne
xchg
inc
test
cmp
scas
lds
push
jle
xchg
test
mov
jle
pop
popf
daa
jno
retf
(bad)
jp
das
stos
popf
add
jae
add
mov
and
dec
mov
push
pop
stos
dec
hlt
lods
data16
ins
inc
xchg
(bad)
imul
mov
enter
dec
cmp
scas
xor
ds
pop
call
mov
cwde
lds
pop
repnz
inc
cmp
inc
ins
sub
fcom
push
jp
mov
bound
loope
push
sub
or
in
jb
scas
dec
mov
xchg
and
dec
and
xchg
cmp
xor
cli
mov
mov
xchg
call
jp
inc
pop
imul
popa
pop
mul
xor
add
mov
sbb
inc
loopne
or
mov
dec
mov
out
mov
and
xor
retf
(bad)
mov
push
gs
jg
inc
test
xor
jle
fcom
cmp
fistp
shl
adc
adc
jmp
jbe
std
loop
dec
pop
stos
(bad)
dec
lock
xchg
int
xchg
cs
test
arpl
and
mov
lock
div
out
add
pop
inc
mov
cmp
xchg
fidiv
cmp
sbb
push
hlt
pop
push
in
jo
outs
mov
or
mov
xor
cmp
jmp
xchg
in
xor
or
cmp
pushf
pop
mov
loope
pop
push
adc
adc
sbb
les
push
dec
dec
push
cs
cmp
mov
movs
inc
mov
stc
mov
push
mov
or
sbb
nop
icebp
mov
in
std
mov
scas
in
(bad)
movs
dec
add
pushf
sub
cmp
xor
inc
mov
mov
xor
or
sbb
adc
std
fs
mov
cld
xor
ins
aaa
lahf
sbb
fidiv
pop
or
dec
test
lea
jmp
imul
in
int
dec
sbb
dec
imul
add
xchg
lock
push
pop
mov
adc
movs
std
pop
sub
outs
dec
push
(bad)
push
pop
inc
mov
cs
aas
pop
loop
popf
push
sub
je
in
imul
pop
sti
arpl
repnz
dec
adc
cmc
cmp
push
sbb
jge
sbb
(bad)
and
push
sub
icebp
nop
xor
lods
repnz
imul
(bad)
mov
mov
shl
push
icebp
cli
mov
cwde
xor
movs
loop
add
stc
dec
retf
cmp
in
xchg
mov
add
sub
push
ficom
stos
dec
push
xchg
test
arpl
jbe
lock
mov
pop
scas
dec
and
cld
xchg
or
neg
pop
jb
jp
(bad)
xchg
sbb
stos
mov
sub
mov
in
retf
mov
jmp
pop
jl
std
cmp
pop
adc
aam
inc
pop
sbb
mov
or
adc
fcomp
and
sbb
lahf
push
inc
sub
xchg
jg
lea
cdq
pop
das
adc
xchg
aaa
ss
out
pop
inc
stos
das
sahf
pause
xor
xor
les
cli
add
push
rcl
jmp
inc
cmps
inc
sti
pop
mov
fwait
movs
lds
mov
test
jnp
dec
lea
mov
pushw
fwait
adc
mov
or
scas
call
sub
pusha
cmp
mov
(bad)
fldenv
(bad)
push
jecxz
loop
mov
ins
lea
adc
call
es
jl
mov
jmp
movs
sahf
mov
mov
movs
fnsave
sub
retf
rol
test
lock
clc
push
jns
adc
ins
push
mov
arpl
adc
shufps
inc
push
iret
push
and
test
test
clc
push
pop
xchg
or
xor
mov
(bad)
ss
cmps
(bad)
or
jne
cwde
pop
stos
js
ret
pop
out
loop
stos
ret
ins
cmp
shl
ror
retf
fstp
mov
repz
xchg
wbinvd
xchg
js
cmps
xchg
sub
je
outs
cld
repnz
jl
jmp
mov
test
ins
pop
push
pop
pushf
ins
inc
mov
fimul
sahf
sub
movs
pop
rol
inc
pop
pushf
(bad)
retf
or
in
imul
push
es
dec
aas
enter
ins
fidiv
daa
shl
jmp
(bad)
hlt
(bad)
fwait
ds
or
aaa
xor
xchg
out
retf
pop
add
fcomp
push
or
push
adc
(bad)
push
popf
jg
(bad)
ds
and
iret
out
push
loop
xchg
daa
xor
adc
xchg
push
outs
jmp
mov
dec
push
mov
fwait
addr16
retf
mov
in
xchg
nop
inc
xlat
test
das
jle
popf
fwait
enter
xchg
jle
inc
stos
(bad)
(bad)
and
and
jmp
push
cld
inc
pop
push
inc
out
pop
jo
mov
in
pop
repnz
popf
cwde
inc
jl
push
adc
dec
add
mov
dec
dec
ins
int
adc
or
push
loope
and
loope
xchg
xor
fcomp
inc
pop
(bad)
mov
push
int
fsubr
mov
pop
push
lock
add
inc
sub
mov
jp
xor
fnstenv
test
rcr
and
ficomp
jle
mov
les
stos
rcr
and
dec
fwait
and
shld
sti
ss
cld
dec
adc
imul
es
(bad)
movs
xor
fistp
xchg
jae
or
fwait
dec
pushf
xchg
push
add
jmp
sbb
sbb
sbb
pop
fcomp
mov
mov
into
fcmovu
mov
popf
adc
pop
or
imul
or
call
shl
sub
and
mov
cmp
adc
add
or
pushf
pusha
inc
mov
and
pop
les
jnp
push
mov
mov
mov
push
jecxz
shl
or
mov
sahf
cmp
pushf
sbb
mov
ja
mov
xchg
cs
(bad)
imul
push
movs
push
add
dec
adc
das
in
mov
cmp
jp
mov
mul
pop
mov
in
cmp
jl
lock
sub
push
pop
inc
pop
xor
push
mov
mov
sbb
out
xchg
imul
adc
jmp
xor
pop
loopne
cs
gs
cdq
xor
je
sahf
pop
jecxz
add
cmps
fistp
add
push
jnp
mov
call
mov
fwait
mov
(bad)
mov
daa
ret
mov
xor
bound
mov
int3
adc
adc
ins
out
jnp
and
pop
in
loopne
dec
or
jecxz
jmp
and
call
inc
ficomp
ins
test
mov
push
(bad)
xchg
and
jo
in
sti
ss
jae
push
inc
rcr
dec
mov
push
xchg
mov
push
lock
scas
(bad)
fild
dec
push
cmp
sub
gs
sub
pop
mov
pop
jl
sbb
jle
cwde
mov
test
pop
sbb
jne
jno
div
xor
call
mov
xchg
xor
xchg
mov
dec
dec
cld
mov
mov
jae
std
ja
mov
push
sbb
and
fwait
cmps
fmul
push
retf
and
jge
pusha
aam
(bad)
iret
mov
pop
(bad)
leave
dec
xchg
(bad)
fsub
stc
(bad)
dec
es
xor
popf
add
mov
cli
jbe
cmp
ret
(bad)
pop
rcl
shl
loop
cmp
jns
mov
cmp
pop
xchg
add
movs
dec
inc
std
neg
scas
jb
mov
xor
inc
push
cs
lea
fcos
dec
js
fwait
or
jmp
mov
ins
pop
call
div
cmp
fsubr
pop
outs
lods
jne
mov
add
inc
xchg
les
add
sub
das
fmul
adc
(bad)
data16
jp
sub
jmp
out
js
push
stos
cmp
aas
loopne
push
or
inc
push
cmc
dec
es
push
test
mov
xor
aas
or
pop
jg
pop
dec
sar
inc
je
xchg
fidivr
cs
or
sub
mov
add
pop
call
jns
push
ja
mov
(bad)
sbb
pop
or
xor
addr16
outs
or
push
fisubr
or
sbb
pop
hlt
jns
sub
inc
mov
fisub
xchg
add
mov
lock
mov
lods
cli
mov
cmps
pop
adc
call
mov
popa
sbb
xchg
(bad)
movs
icebp
out
arpl
cdq
inc
xchg
mov
cmp
repz
scas
jb
ja
push
jle
or
shr
and
mov
mov
adc
test
sub
popa
jae
push
sbb
mov
or
idiv
inc
push
(bad)
cli
sbb
mov
push
mov
jo
push
xlat
mov
ins
mov
xchg
and
mul
(bad)
jmp
lods
jp
int
cmps
dec
(bad)
pop
dec
js
mov
cmp
mov
sbb
and
fisub
shl
in
arpl
jmp
stos
test
mov
push
jmp
lods
pop
sbb
into
dec
sub
mov
bound
add
xchg
sub
ss
xor
cmp
jnp
jmp
add
leave
mov
push
into
inc
cmps
shl
mov
sub
and
ds
mov
mov
dec
(bad)
mov
lahf
jmp
iret
adc
adc
cld
xor
shl
data16
lock
cmp
push
cld
imul
pop
js
out
xor
or
adc
sahf
pop
adc
jae
mov
fist
or
test
bound
push
call
(bad)
cdq
add
outs
(bad)
(bad)
hlt
imul
popa
pop
cld
mov
mov
int
mov
das
xchg
sti
pop
call
or
add
or
mov
jns
xor
cmps
(bad)
les
mov
push
xlat
rol
xor
pop
ror
cmp
and
jmp
in
ja
mov
sar
test
xlat
repz
push
mov
jno
nop
icebp
imul
pop
dec
xchg
xchg
(bad)
(bad)
out
retf
mov
cmp
sar
mov
dec
jl
adc
arpl
xchg
push
xchg
dec
dec
jne
(bad)
xor
mov
cmp
adc
retf
dec
push
dec
inc
pop
push
xor
std
popa
fnstenv
and
repnz
cld
jne
or
sbb
and
imul
mov
int3
add
mov
xchg
imul
xchg
cmp
ins
mov
push
rcr
or
lahf
mov
repnz
xor
(bad)
fisub
int3
ret
mov
push
int3
sti
pop
stos
daa
xor
dec
mov
cli
idiv
fiadd
call
pop
add
mov
xchg
rcr
inc
xchg
cmps
push
cmp
fcom
mov
or
movs
xor
cmp
in
sahf
ins
(bad)
push
outs
dec
scas
ret
inc
pop
js
dec
dec
cli
jnp
jb
xor
mov
inc
xchg
add
jecxz
cmc
sbb
stc
pushf
inc
sub
cmps
out
out
vmovaps
mov
pop
adc
rcl
and
or
test
or
inc
adc
inc
or
jecxz
push
adc
fldcw
imul
adc
mov
or
cmp
jnp
clc
cmp
loopne
adc
fidivr
ds
or
pop
jns
loope
into
(bad)
out
mov
call
mov
pop
mov
or
cmp
loopne
or
je
test
test
retf
movs
ret
dec
shl
cmps
rcr
dec
xchg
ret
inc
jg
out
(bad)
fild
add
nop
pop
outs
je
push
pop
loope
daa
lea
iret
add
jl
sbb
subps
inc
jmp
xchg
movs
xchg
cmp
cdq
jmp
jae
cmp
ds
cmc
int
mov
inc
in
mov
jmp
jp
sbb
mov
jecxz
mov
cmp
pop
mov
mov
int3
test
lahf
lahf
repz
dec
push
jg
dec
icebp
push
cmps
fidivr
test
or
mov
xchg
sub
cmp
je
idiv
call
cwde
pushf
aas
or
iret
cld
cmps
popa
je
adc
mov
ss
push
out
or
int3
and
test
mov
pushf
mov
mov
add
adc
or
jmp
sub
test
pop
fnstenv
jmp
xor
repz
pop
enter
std
bound
fs
mov
iret
int3
add
pop
jecxz
int
inc
push
mov
push
mov
and
popa
push
mul
inc
xlat
repnz
loope
xor
mov
mov
sbb
or
(bad)
mov
lods
fistp
sbb
scas
jne
xchg
js
popf
or
imul
icebp
add
jecxz
ficomp
scas
fs
pop
hlt
imul
test
sahf
cmp
gs
(bad)
cmp
cdq
adc
cmp
adc
mov
outs
addr16
test
pop
sar
(bad)
mov
inc
adc
in
mov
clc
pop
pop
jg
jbe
sub
aaa
dec
ins
and
retf
dec
pop
mov
dec
repz
clc
pop
cwde
icebp
retf
jae
(bad)
mov
bound
gs
mov
jmp
mov
rcl
jnp
add
cmps
cmps
xor
stos
ficomp
jmp
das
xor
inc
xchg
rcl
push
test
arpl
or
test
xchg
out
sub
pop
mov
pop
test
and
xchg
ror
(bad)
and
cmc
xchg
jne
and
addr16
xor
mov
sub
push
xchg
into
sub
push
and
mov
adc
aas
inc
lahf
test
sbb
adc
ret
sub
dec
or
jo
add
loop
movs
cdq
adc
mov
and
mov
addr16
xor
retf
mov
stos
and
pusha
ss
inc
ins
mov
sub
xor
in
push
fwait
cmp
dec
(bad)
retf
ja
mov
sbb
push
shr
ret
fwait
adc
inc
and
iret
sbb
sti
enter
popf
sub
(bad)
(bad)
out
jo
aam
aam
shr
mov
mov
push
push
add
nop
movs
and
jmp
push
inc
adc
mov
(bad)
xor
repz
(bad)
out
popf
adc
mov
pop
sbb
shr
scas
xor
push
and
mov
shl
int
lock
clc
loope
add
or
sub
xor
and
popf
add
cld
inc
adc
pop
test
xchg
fdivr
int
xor
cmps
or
ss
out
gs
ins
sbb
cwde
int
add
xor
(bad)
lock
cmp
or
cmp
jge
mov
repnz
adc
inc
out
and
js
jns
adc
(bad)
sub
fcomp
mov
or
push
call
(bad)
pop
push
aam
push
lods
mov
xor
cmps
and
xor
in
mov
and
out
popa
sti
stos
cld
sbb
sub
call
das
call
xor
repnz
cmp
or
or
or
sahf
(bad)
dec
cld
push
in
fs
xchg
rcr
pop
push
in
test
ins
mov
lods
mov
sub
in
adc
dec
clc
and
pop
adc
pop
push
je
mov
ins
xor
in
or
pushf
sar
aas
and
lods
dec
xor
mov
jnp
cmp
hlt
add
lods
lds
out
loopne
stc
jb
pop
jmp
rcl
gs
out
jne
and
and
add
ins
mov
cdq
dec
push
adc
and
(bad)
xchg
dec
das
push
das
push
sar
ret
xor
pop
fst
mov
outs
in
test
jmp
fs
mov
js
xchg
cwde
and
ret
lahf
dec
mov
jle
inc
(bad)
ins
xor
sar
xchg
pop
out
pop
xchg
mov
aaa
xor
sub
out
adc
pop
cmp
in
lahf
jmp
int3
cmc
sub
cmps
adc
and
movs
sbb
push
pop
cwde
gs
and
dec
and
dec
in
daa
jecxz
and
test
mov
cdq
jnp
bound
adc
jbe
mov
shl
sub
call
in
hlt
mov
pop
call
add
and
cmp
je
cs
mov
imul
out
push
out
repnz
mov
sahf
cmp
cmp
or
mov
test
cmps
jne
ja
outs
push
rol
int
rcr
pop
stc
jae
aas
inc
mov
or
mov
(bad)
pushf
fnsave
std
adc
jecxz
inc
mov
out
lock
sti
or
hlt
pop
cs
mov
addr16
lock
sbb
addr16
pop
pusha
sbb
mov
int
jnp
inc
les
shl
sahf
movs
and
sub
nop
pop
push
or
(bad)
in
(bad)
lock
stos
loop
sub
retf
inc
into
mov
jae
dec
mov
sub
pop
inc
pushf
pop
ss
das
inc
add
fcom
shr
mov
das
rcr
push
(bad)
xchg
in
pop
out
cld
aam
int
(bad)
inc
lds
xchg
xchg
mov
iret
clc
imul
adc
aaa
mov
bound
inc
fisttp
and
fdiv
mov
sub
jnp
mov
aad
imul
ret
in
cwde
loopne
xor
fcmove
fwait
adc
inc
data16
cmp
jne
icebp
sbb
lea
lds
ret
nop
in
push
dec
push
add
out
or
push
cmp
(bad)
dec
add
(bad)
add
jne
mov
loop
jo
ror
push
daa
repz
mov
pop
mov
in
jecxz
or
adc
cdq
les
cld
or
jl
xchg
jg
cdq
in
or
adc
xor
push
fninit
addr16
fs
ror
or
retf
push
jb
jae
adc
js
sbb
out
sub
mov
cmp
mov
mov
fnstsw
inc
je
cmp
fcom
xor
ffree
cli
mov
jecxz
cmc
arpl
or
and
xchg
jg
test
push
popf
push
jg
inc
mov
lds
xor
xchg
push
mov
gs
xchg
je
sar
mov
jmp
cdq
dec
jnp
dec
aam
pop
cs
std
jle
lock
push
xor
adc
loope
retf
sar
bound
xor
jns
xor
xchg
mov
sbb
scas
adc
clc
jecxz
sbb
cmp
addr16
loop
cmps
(bad)
pop
aaa
aad
pop
sub
jae
add
adc
sub
lods
or
and
xchg
fmul
cmp
jg
mov
fidiv
jbe
jmp
inc
mov
lds
cs
mov
out
sub
add
cmps
pop
lods
cdq
jb
neg
repnz
call
dec
mov
push
sub
ror
sub
mov
(bad)
jmp
gs
push
call
adc
push
mov
mov
je
mov
mov
pusha
test
aaa
jb
popf
and
mov
cmp
jmp
push
cli
inc
test
push
out
rol
pop
aaa
pop
stos
mov
(bad)
sahf
fcmovnb
stc
and
cs
cmp
inc
sub
scas
dec
ffreep
or
or
pop
out
xchg
mov
and
mov
ins
add
mov
sti
test
arpl
mov
imul
fdiv
stos
loope
fdivrp
imul
mov
ja
mov
das
aad
cmp
push
xor
jmp
adc
je
cmps
pop
mov
sub
jle
sub
pop
jle
and
add
cmp
mov
xchg
ret
jo
add
adc
xor
push
repnz
les
xchg
inc
gs
pop
das
in
nop
(bad)
fld
fild
adc
int3
movs
out
rcr
shr
hlt
and
xor
sbb
lds
mov
mov
sub
leave
(bad)
sub
rcr
xor
mov
push
dec
jb
xchg
mov
daa
sub
or
movs
fld
sbb
and
outs
sbb
int
dec
jle
loopne
ja
xor
out
daa
into
mov
std
push
sar
mov
adc
mov
neg
sub
bound
lahf
test
and
and
out
rol
dec
test
shr
out
adc
jbe
adc
aam
sub
xchg
popf
rol
fucomi
inc
les
pushf
icebp
add
je
stc
js
mov
jae
mov
jb
sbb
cmp
xor
daa
and
ins
add
(bad)
push
in
icebp
into
stc
sbb
cdq
add
inc
and
idiv
in
push
xor
dec
fimul
and
test
dec
(bad)
jnp
xchg
addr16
paddusb
pop
lds
(bad)
pushf
inc
sahf
cmps
xor
mov
adc
mov
xor
sbb
dec
loopne
add
cmc
push
pop
mov
pop
xchg
(bad)
jno
cld
cmps
adc
xchg
data16
push
icebp
out
sti
push
fisttp
gs
rcl
test
push
dec
mov
jmp
xor
jmp
push
jne
push
or
pusha
pop
fnstenv
daa
fisub
mov
or
ins
out
nop
jb
out
jp
jg
jbe
into
push
xor
cmp
pop
ins
cmp
pop
sti
cmp
mov
add
mov
jg
test
mov
repz
mov
xchg
bound
mov
pop
or
mov
dec
sub
xor
pop
(bad)
jo
ret
push
or
pop
je
adc
mov
fild
mov
sbb
add
mov
movs
mov
sti
jae
lea
jb
mov
inc
jmp
sbb
rol
mov
std
xchg
and
outs
mov
repz
pop
add
sahf
add
leave
pop
pop
cmps
pop
or
out
xor
push
xlat
inc
push
gs
adc
push
(bad)
xlat
push
fwait
pop
and
mov
push
pop
and
mov
mov
pop
ss
call
mov
jmp
call
mov
cs
loopne
inc
mov
xchg
call
pop
pop
pop
movs
pop
dec
test
(bad)
mov
shl
fwait
aam
inc
inc
fnstenv
mov
xor
mov
mov
sub
sahf
lahf
loope
hlt
xor
push
dec
call
in
pop
daa
dec
and
dec
mov
movs
adc
repz
ret
call
xchg
cdq
add
mov
dec
call
cli
jmp
outs
dec
and
iret
out
fstp
jp
sbb
adc
(bad)
jmp
sub
jns
mov
jbe
sub
pop
mov
mov
cmp
cwde
pusha
(bad)
call
js
inc
sbb
scas
pusha
rcl
mov
cmc
outs
jecxz
mov
int3
repnz
add
cdq
mov
dec
mov
shl
popa
dec
cdq
jbe
fcom
fisubr
(bad)
xlat
mov
push
add
mov
ja
xlat
arpl
mov
dec
js
add
shl
mov
sub
out
loop
jmp
sbb
or
aam
push
jns
lods
push
and
xchg
or
imul
mov
and
inc
pusha
cmp
ins
jg
leave
pop
pop
repz
fwait
or
test
loop
ror
inc
nop
adc
dec
ja
mov
push
rcl
add
pop
xchg
add
lock
dec
mov
(bad)
not
movs
ins
cmp
int
lahf
aas
int
jno
aaa
mov
movs
mov
outs
movs
scas
inc
lea
inc
jne
int3
hlt
call
data16
daa
loope
test
and
imul
aaa
repz
pop
sbb
ror
mov
sar
popf
and
call
outs
in
mov
add
ins
mov
jg
f2xm1
(bad)
adc
dec
or
add
sub
ins
pushf
(bad)
mov
in
mov
mov
inc
les
into
jcxz
xchg
mov
xchg
aas
cmp
xchg
in
aam
pop
pushf
ret
push
lods
jbe
pop
sar
mov
dec
mov
dec
daa
fdiv
das
mov
ss
iret
je
jne
dec
push
mov
test
inc
or
xchg
push
mov
jno
fisubr
popf
jecxz
xlat
mov
or
shl
fiadd
and
jg
leave
pop
sub
or
std
addr16
sub
mov
add
mov
aam
in
dec
clc
call
arpl
pop
dec
loop
add
inc
neg
or
sbb
jno
inc
jle
cdq
mov
shr
out
push
in
sbb
out
icebp
pop
xchg
mov
mov
xchg
popf
push
ret
idiv
xchg
sub
mov
lea
retf
movs
mov
pop
mov
inc
les
mov
xor
inc
outs
out
inc
cmps
mov
inc
dec
jmp
and
dec
jecxz
inc
cwde
ss
imul
mov
jecxz
xchg
fucomip
shr
data16
(bad)
pop
pushf
aam
jno
lock
(bad)
das
je
fsubr
cmp
mov
jne
lods
pop
add
(bad)
push
sbb
arpl
in
test
jge
dec
cmp
mov
pop
shr
push
mov
(bad)
in
fs
(bad)
mov
ja
nop
repz
stc
fsub
(bad)
mov
pop
sub
sbb
and
dec
ins
aam
sbb
jg
push
in
out
jno
dec
xchg
pushaw
pop
movs
jmp
xchg
inc
jo
mov
cmp
add
lods
cmp
iret
inc
or
in
adc
sub
push
sub
stos
mov
jg
mov
jl
sub
int
xor
inc
clc
push
sbb
or
inc
dec
mov
mov
dec
add
jp
and
mov
xchg
push
adc
pop
repnz
cmp
inc
inc
test
inc
pushf
inc
mov
lods
cwde
inc
ret
inc
shr
xchg
call
adc
push
in
sbb
or
add
xchg
xor
jno
pop
sub
pop
out
lock
jns
repnz
fwait
or
in
push
pop
add
aas
test
pop
popf
or
sbb
es
fist
mov
jge
imul
(bad)
xor
lahf
mov
int
cdq
in
rol
push
pop
push
ja
lock
pusha
xchg
fcos
out
jno
inc
or
push
and
mov
addr16
xchg
sbb
je
or
lds
cmp
stc
and
push
adc
dec
add
rcr
mov
xchg
mov
sti
pop
ret
es
cmp
pop
cmp
(bad)
scas
lahf
jg
adc
pop
call
idiv
inc
scas
into
push
inc
jo
pop
push
ror
push
sub
jno
and
shl
pop
ins
xor
push
xor
es
stos
mov
push
and
repnz
sbb
leave
lahf
imul
ret
mov
arpl
mov
retf
push
std
mov
aas
enter
(bad)
mov
add
jp
jno
pop
jb
cdq
dec
mul
dec
push
retf
call
xor
pop
mov
in
dec
test
mov
jno
sub
mov
jb
or
push
orps
mov
add
fs
aam
imul
adc
xchg
or
mov
lahf
mov
addr16
dec
add
movs
mov
lods
sub
adc
adc
retf
jg
mov
dec
lds
or
outs
inc
mov
stc
mov
or
xor
out
scas
fstp
add
je
push
xor
in
stos
fnstcw
push
out
jle
jae
add
mov
push
xchg
push
cmps
adc
dec
aaa
pop
scas
mov
aad
sub
or
iret
mov
pop
mov
xor
jle
scas
movaps
xchg
addr16
idiv
pop
mov
xchg
mov
enter
xchg
out
inc
jg
pop
xor
in
fcom
push
repz
sub
or
mov
jne
and
ins
rcr
xchg
stc
mov
pop
ror
daa
or
mov
mov
outs
inc
test
aas
or
sub
xor
mov
xchg
retf
push
sbb
ins
xor
aaa
cmp
ficom
fcom
push
sub
mov
ret
scas
and
int3
inc
or
sub
xchg
(bad)
gs
inc
ss
rcr
mov
sbb
sbb
cmc
xchg
dec
sahf
sahf
repz
movs
popf
cmp
mov
fiadd
add
sti
ror
or
int
out
lea
pop
sbb
and
fadd
(bad)
xor
dec
mov
cld
clc
mov
add
fcom
xchg
jne
fcom
jecxz
not
dec
xchg
adc
inc
adc
mov
aad
and
(bad)
inc
push
inc
sub
mov
aad
jp
movs
aas
sub
pop
std
xchg
push
ret
dec
fdiv
cmp
iret
pop
out
js
lahf
and
leave
adc
add
nop
pop
add
out
jnp
call
dec
and
cmp
mov
push
push
(bad)
jmp
sub
das
dec
jg
pop
push
rcl
aam
ins
push
aaa
mov
mov
add
inc
pop
repz
adc
aas
stos
dec
test
leave
out
add
push
mov
or
movs
jae
adc
sahf
cmc
aaa
arpl
add
and
sbb
dec
mov
sub
jne
xchg
xchg
adc
inc
sbb
pusha
cmp
add
loope
adc
shl
int3
or
loopne
mov
mov
sbb
fild
(bad)
jbe
loop
and
add
sbb
imul
jns
inc
cmp
push
push
repz
nop
sti
scas
repnz
test
inc
cmps
sbb
pop
cld
cmp
test
lds
push
loopne
enter
(bad)
cdq
ficom
fwait
push
pop
cmp
sub
enter
dec
jae
(bad)
stc
and
push
xchg
data16
out
in
das
movs
jge
loopne
cmp
inc
xchg
add
pop
cmp
jae
and
mov
into
cmps
shl
pop
mov
cmp
xor
sar
inc
inc
jbe
cld
cmc
xor
mov
sub
cmp
jae
pop
pop
or
ret
pushf
push
outs
mov
adc
xor
xchg
rcl
test
in
icebp
fld
imul
mov
xor
jb
mov
fisubr
repnz
jge
pop
and
cmp
dec
xchg
xchg
fwait
add
cmps
cld
push
in
jmp
cld
dec
xor
mov
mov
cld
pop
cs
aam
push
sar
scas
or
and
int3
sar
sbb
lock
dec
dec
(bad)
imul
and
mov
or
mov
cmp
retf
(bad)
scas
mov
xchg
or
pop
push
mov
stos
push
xlat
jmp
loope
addr16
jecxz
or
inc
ret
xor
fst
(bad)
cmps
xchg
cmp
mov
or
mov
adc
(bad)
fisubr
dec
mov
push
out
(bad)
jle
div
aas
(bad)
ss
jo
data16
daa
lds
stos
in
outs
dec
mov
test
sar
sub
int
enter
es
adc
pushf
dec
push
push
mov
cmp
cmps
call
movs
adc
enter
push
ja
or
ins
jae
cdq
push
lock
out
dec
int3
cld
(bad)
cld
sub
sti
inc
mov
out
addr16
jecxz
cmp
out
mov
pop
cmp
add
addr16
ins
inc
fsubr
jg
loopne
and
or
ds
adc
cmps
in
mov
aas
mov
fstp
fidivr
dec
or
dec
call
mov
adc
ja
ds
mov
test
sub
jns
popa
lock
aaa
jae
std
gs
shl
mov
mov
add
minps
aaa
xchg
mov
loopne
xchg
add
mov
sub
dec
je
adc
sub
loope
mov
test
fild
sub
adc
ja
inc
mov
test
sar
sbb
(bad)
jecxz
frstor
lds
jo
pop
mov
pop
shr
dec
in
sbb
jmp
fs
jecxz
inc
mov
frstor
inc
(bad)
mov
pop
mov
xchg
call
jl
fwait
adc
sub
or
stos
or
popa
pop
cwde
mov
cmp
clc
dec
adc
enter
or
push
jae
xchg
inc
dec
test
ret
cmp
inc
inc
stc
cwde
mov
lods
mov
jl
les
jae
ret
jp
cmp
adc
add
add
jmp
inc
mov
push
in
inc
or
cmp
sar
push
(bad)
rol
lock
ror
sub
xchg
inc
add
push
loopne
push
and
sbb
and
mov
pusha
pop
jb
out
rcl
leave
and
scas
loopne
push
jne
mov
cwde
fnstsw
xchg
xor
inc
clc
jmp
(bad)
add
scas
push
cmp
mov
lds
push
mov
mov
mov
aas
mov
iret
push
jmp
xchg
jle
sbb
jns
gs
lock
mov
sbb
pop
pop
or
jg
adc
jl
jle
adc
jg
mov
lea
jle
ret
jmp
mov
or
adc
test
or
jmp
out
push
mov
cmp
cmps
sbb
or
fdivr
fnstenv
adc
int
mov
jmp
dec
inc
daa
or
add
mov
dec
pop
adc
(bad)
push
inc
jge
sti
fnstenv
lock
and
std
mov
add
mov
clc
jnp
or
jb
imul
xchg
jl
pop
xor
dec
lock
cs
repnz
mov
add
out
jmp
stc
push
mov
or
xor
mov
movs
fsub
pop
aas
sub
xchg
jl
sahf
enter
jge
pushf
aas
movs
mov
inc
inc
dec
push
or
imul
jge
imul
add
sbb
xlat
push
in
push
addr16
push
push
shr
jp
retf
adc
lds
call
ins
int3
jns
mov
sahf
(bad)
enter
inc
lock
xchg
scas
mov
ret
mov
mov
or
rcl
outs
and
stos
ins
ror
jg
xchg
repnz
inc
inc
jne
push
xor
cmp
jmp
ret
rcr
push
dec
stc
retf
adc
out
pop
loopne
cs
mov
imul
push
and
mov
nop
fcmovnbe
movs
repz
sbb
pop
ds
jae
cs
push
push
jp
sbb
pop
test
cwde
sbb
in
sbb
fld
cld
mov
dec
push
daa
jnp
push
out
test
pop
sahf
pop
ret
dec
in
cli
sbb
mov
or
fsub
cs
lods
sar
call
jno
imul
or
test
mov
(bad)
sub
or
mov
stc
scas
adc
jno
sub
inc
mov
out
sub
mov
sbb
icebp
sbb
in
fistp
dec
and
and
mov
jmp
ds
sbb
mov
lahf
into
push
rcr
push
xchg
fidiv
popa
inc
test
adc
or
xchg
dec
jne
pop
dec
test
rol
addr16
push
out
and
lahf
shl
jecxz
mov
mov
and
mov
mov
jl
out
ja
popf
out
dec
test
ins
push
adc
xor
(bad)
dec
xchg
lock
or
ficomp
jae
or
gs
(bad)
mov
xchg
jns
push
cmp
cmc
nop
mov
sbb
sub
mov
xor
lods
enter
hlt
mov
pop
and
push
xor
shr
jb
int
pop
out
repz
push
retf
hlt
in
push
arpl
mov
lods
int
repnz
pop
pushf
enter
push
pop
lods
dec
xor
pushf
xchg
cmp
cmp
(bad)
iret
dec
mov
push
aaa
or
mov
push
push
pusha
push
call
iretw
mov
and
jae
cmps
add
aad
push
in
mov
movs
call
jp
xchg
xor
retf
gs
out
inc
and
mov
dec
adc
jnp
mov
mov
pop
pop
add
push
fs
inc
cmp
inc
int3
sbb
xor
mov
sub
loop
adc
ret
and
xor
mov
out
popf
dec
scas
jmp
std
xchg
inc
fld
hlt
and
xor
mov
(bad)
in
fld
repz
aam
mov
dec
(bad)
jg
xor
mov
or
xor
cli
pushf
loope
and
dec
out
out
jle
push
pop
mov
aaa
mov
aam
jne
inc
pop
(bad)
xchg
xor
inc
daa
icebp
add
lock
xor
push
fst
adc
mov
xchg
mov
(bad)
fldcw
mov
mov
cmp
ja
mov
push
push
sbb
mov
fidiv
inc
add
lea
xchg
cmp
or
cmp
sbb
xor
es
fisub
sub
jne
pop
and
repz
inc
cmp
inc
movs
mov
jns
js
jmp
dec
push
sub
mov
adc
(bad)
mov
inc
dec
cmp
sti
and
jge
xchg
mov
out
dec
fstp
xchg
jae
sbb
jo
mov
aam
adc
push
in
shl
aad
addr16
adc
pop
xor
test
sbb
push
sub
xor
adc
addr16
lods
fcmovu
sub
dec
inc
add
push
ins
dec
js
xor
push
test
sbb
mov
and
dec
(bad)
mov
xor
pop
pop
mov
jnp
out
test
(bad)
or
add
lods
js
in
imul
shr
xchg
jl
movs
add
and
cmp
push
mov
jmp
lods
(bad)
test
scas
rcl
scas
loop
stos
cs
mov
cmp
in
js
mov
movs
add
adc
ret
adc
xor
jg
clc
push
cdq
bound
(bad)
sub
add
fisttp
inc
cmps
in
jecxz
popf
lahf
adc
adc
sti
cmp
cmp
fld
mov
adc
pushf
gs
test
test
(bad)
fist
inc
push
dec
push
lahf
int3
jge
ins
mov
cmc
in
scas
sbb
ss
lock
or
adc
mov
das
ds
adc
je
jl
jb
xor
adc
add
fild
xchg
test
std
inc
sbb
xor
jb
js
movs
out
inc
push
pop
fnstcw
adc
xchg
popf
xor
repz
dec
shl
cmp
lds
xchg
cmp
test
jae
cmp
jmp
aaa
aam
sbb
add
inc
aam
mov
sbb
pop
adc
ret
shl
fild
cli
out
or
adc
nop
aad
and
rol
sahf
or
and
dec
jl
bound
mov
dec
dec
and
out
inc
add
and
dec
ds
push
sbb
fwait
add
aad
or
jnp
add
adc
pop
mov
inc
rcl
cmps
or
xor
repnz
cs
loope
fldcw
mov
imul
clc
enter
add
mov
sbb
js
jb
push
addr16
test
inc
stos
aad
test
rol
cmp
mov
sbb
jmp
nop
lods
sar
push
and
dec
add
cmp
stos
sbb
push
jb
cmp
mov
pop
cmp
retf
mov
jae
sbb
push
xchg
xor
outs
adc
mov
icebp
jmp
xchg
aaa
mov
(bad)
pop
fs
test
shl
(bad)
mov
pop
lahf
pushf
inc
jns
lock
sub
push
sti
xchg
fiadd
xchg
jo
test
pop
aam
sub
adc
jnp
mov
mov
xor
and
sub
xchg
or
jb
ret
xor
jl
jnp
xor
ret
cmp
pop
repnz
sub
push
mov
mov
jb
imul
js
dec
inc
out
jno
addr16
ds
xor
in
sbb
popf
dec
jle
aad
jmp
and
lds
xchg
in
retf
adc
in
pop
mov
sbb
out
ins
or
stos
outs
ror
(bad)
leave
sbb
sbb
std
fnstenv
call
movs
lock
or
pop
cmp
(bad)
dec
mov
(bad)
test
pop
in
or
cmc
(bad)
pop
inc
inc
pop
cs
ins
lahf
ins
mov
xchg
jge
sub
adc
push
mov
ror
aaa
pop
sbb
mov
scas
or
push
pop
ret
out
out
mov
daa
inc
mov
movs
xchg
or
div
push
push
mov
mov
test
or
dec
jle
mov
mov
mov
mov
add
hlt
mov
push
(bad)
pop
repnz
inc
call
jg
pop
mov
and
pop
ja
cmp
push
push
adc
aas
mov
shl
adc
mov
and
sub
cmp
push
rcl
push
sub
add
mov
or
jp
lods
xor
dec
dec
inc
cmp
pop
or
pop
jmp
mov
push
mov
hlt
inc
test
scas
mov
mov
sti
fcmovnu
jmp
ja
in
mov
stc
hlt
mov
(bad)
test
jb
ja
jbe
or
jp
pop
adc
adc
xchg
pop
enter
adc
retf
or
dec
mov
or
mov
cli
dec
adc
mov
iret
xor
in
repnz
sub
dec
inc
lock
cmp
cmc
xchg
aad
dec
test
pop
lock
scas
maskmovq
not
imul
dec
test
mov
fisub
cli
ret
inc
cmp
ins
or
ror
sbb
adc
push
into
mov
pop
adc
push
loope
and
dec
xchg
add
gs
dec
sbb
pushf
jnp
pop
lods
icebp
push
and
ret
fld
fsub
daa
test
in
jb
or
lods
je
and
mov
es
adc
cs
jbe
fs
(bad)
xor
cmps
xor
mov
mov
ret
imul
ds
sti
cli
cwde
dec
retf
fwait
aaa
mov
and
outs
xor
pop
pushf
loope
cdq
xchg
mov
push
mov
es
in
jge
cld
out
push
jmp
(bad)
adc
jno
pop
popf
push
(bad)
pop
loop
ret
mov
mov
repnz
and
jle
repnz
or
lock
clc
inc
leave
pop
stc
jno
sub
int3
mov
mov
or
repz
aaa
lahf
dec
mov
shl
push
sbb
fcmovu
cmp
call
fst
xchg
call
sub
cmp
pop
push
xchg
in
in
pop
or
enter
cmp
jmp
data16
(bad)
lds
xchg
jp
and
icebp
pop
jb
jl
xor
dec
(bad)
outs
cmp
cmp
shl
mov
xor
and
and
ja
faddp
dec
jge
int3
aas
push
and
or
shl
int
iret
fwait
in
mov
mov
push
ins
jae
dec
push
jo
stos
and
xchg
fwait
pushf
and
adc
push
test
(bad)
(bad)
mov
and
nop
sub
hlt
cdq
std
in
cld
push
outs
lods
fmul
pop
pop
retf
sub
push
jo
pop
pusha
mov
aad
test
mov
mov
mov
inc
outs
popf
xchg
clc
add
imul
test
mov
clc
jbe
pop
in
retf
dec
stos
or
push
aaa
gs
stos
push
in
xor
dec
mov
mov
sbb
cs
sbb
jl
dec
xor
test
inc
xchg
ret
pop
pop
ja
pop
and
stos
mov
lods
inc
adc
xchg
mov
dec
mov
mov
ja
int
pusha
adc
cmp
popf
daa
(bad)
int3
sub
int
pop
jbe
push
sbb
fcomp
mov
jmp
sub
scas
xor
xor
inc
lods
int
push
int3
outs
fcom
push
test
and
imul
aam
cs
dec
and
sbb
cmp
add
pop
out
xchg
mov
adc
mov
cmc
stos
ss
sbb
dec
popa
shr
fimul
sub
std
outs
clc
mov
jnp
js
mov
je
add
mov
cmps
or
vmovsd
add
fs
sahf
sbb
xchg
add
mov
loop
retf
pushf
fs
in
ja
jbe
mov
xlat
pop
push
lahf
ret
cmp
xchg
inc
popf
daa
setl
sub
call
test
ja
mov
cdq
xchg
dec
push
xor
adc
xchg
int3
inc
cwde
mov
icebp
inc
and
cmp
jg
mov
jo
cmc
add
nop
jo
or
ins
scas
aas
aas
fistp
pop
les
loopne
lea
nop
mov
jbe
rcr
(bad)
aas
lock
adc
clc
out
into
mov
adc
mov
or
pop
mov
stos
inc
and
lds
repz
js
jns
cli
mov
inc
push
xchg
add
arpl
into
or
and
imul
mov
out
mov
nop
arpl
shl
xchg
call
sbb
mov
cmps
shl
xchg
dec
adc
popa
ds
mov
inc
fcomp
push
mov
jno
cmp
jbe
and
cmp
stc
shl
ss
loopne
loope
jmp
push
mov
je
dec
loop
test
push
fnstsw
out
adc
movs
cmp
icebp
popf
je
shr
mov
fistp
retf
dec
rol
fwait
in
iret
push
pop
lods
mov
das
ss
outs
and
imul
xor
jae
mov
sub
fs
sbb
add
rol
movs
push
test
cwde
cmps
int3
lods
sub
stos
test
into
adc
fs
inc
jp
psllw
je
add
popa
sti
add
aas
ret
rcr
and
loopne
icebp
aam
adc
pop
jnp
push
pop
out
movs
xchg
mov
push
sub
sbb
mov
out
into
mov
lahf
jns
(bad)
int3
push
push
call
movs
pop
cli
imul
mov
inc
shl
cmp
push
clc
xchg
test
adc
mov
mov
and
mov
inc
daa
sub
xchg
arpl
cmp
popa
inc
test
in
sar
(bad)
pusha
pop
test
mov
js
fimul
xor
(bad)
loope
push
lock
mov
mov
(bad)
not
lds
mov
add
mov
jle
add
add
and
js
lods
xchg
out
push
add
fstp
pop
lods
cmp
push
xchg
jnp
mov
(bad)
sub
out
xor
and
add
jae
in
jg
sar
(bad)
fist
dec
and
xlat
fneni(8087
and
jbe
fnop
das
or
cmps
sbb
cmp
fist
xor
clts
movs
sbb
bound
sbb
cmp
xchg
sbb
jne
add
enter
out
imul
in
mov
push
cmc
ins
sahf
retf
test
fimul
cdq
adc
loop
push
xor
cwde
mov
pusha
test
in
js
jl
in
cld
in
in
mov
sub
pop
cdq
sub
jcxz
cmp
push
addr16
add
cmp
and
xor
mov
ror
idiv
stos
inc
inc
movs
icebp
or
jle
ror
jmp
ret
lock
pop
dec
arpl
mov
add
pop
enter
add
mov
jae
(bad)
mov
pop
bound
xor
pop
in
shl
push
loop
sbb
mov
mov
adc
stos
out
or
(bad)
adc
push
std
fdivr
xchg
ins
cmp
idiv
shl
push
ret
(bad)
daa
dec
rcr
and
in
cmp
fwait
jge
mov
data16
jb
dec
fs
mov
sub
add
xchg
cmp
pop
ficomp
add
bound
lds
pop
add
xchg
cmp
jg
adc
add
cmc
pop
xchg
mov
jns
jl
cmp
xlat
push
cmps
dec
std
les
dec
icebp
je
xchg
int3
je
sub
adc
loop
sub
inc
fadd
or
repz
and
retf
sahf
mov
pop
xor
dec
fadd
sub
retf
sar
dec
xchg
jno
jl
mov
mov
push
outs
test
imul
jp
adc
pushf
retf
test
nop
dec
out
cmp
push
popf
pop
fadd
outs
int
push
loope
(bad)
cmps
and
mov
pop
pushf
in
lods
out
pop
cmp
(bad)
fbstp
xchg
loope
mov
jp
jnp
cdq
inc
in
push
sbb
movs
xor
(bad)
fmul
shl
and
mov
rdpmc
popa
xchg
sub
cs
pop
pop
lahf
xchg
inc
add
dec
out
mov
loopne
outs
or
mov
in
mov
(bad)
rcl
mov
ficomp
cmp
lods
cdq
sbb
xor
mov
and
ret
cmp
xor
mov
inc
xor
pop
push
adc
xchg
cdq
imul
mov
lock
jns
sahf
push
dec
call
es
in
aam
rcr
xor
cmp
inc
enter
jg
out
and
pop
das
pop
lods
aam
jl
xchg
dec
jg
add
movs
lea
cli
mov
repnz
xor
bound
add
sar
ja
mov
cld
adc
ret
push
ins
mov
sbb
sar
adc
mov
pop
sbb
lods
out
adc
popf
and
data16
dec
sbb
pushf
popa
pushf
push
adc
ret
mov
push
into
clc
ins
add
arpl
(bad)
std
mov
sar
mov
fst
add
pop
mov
mov
clc
xchg
inc
lods
movs
mov
inc
aad
and
sub
xor
push
inc
enter
push
(bad)
fisttp
les
out
adc
jnp
push
pop
push
cmp
addr16
xor
es
ret
inc
popa
scas
xor
jmp
jo
cmp
cmp
sahf
loopne
jno
inc
in
jp
into
gs
pop
push
inc
aam
jmp
sar
aad
pushf
add
call
adc
iret
dec
mov
inc
call
pop
into
ds
jns
pshufw
push
retf
js
sub
loope
xor
push
inc
jbe
xchg
xchg
pop
inc
das
pop
xchg
shl
es
pop
inc
pop
scas
sar
ins
cdq
and
dec
cmp
aas
mov
cmp
retf
xchg
mov
clc
(bad)
and
sbb
call
add
ins
inc
and
inc
push
fs
popf
ret
cld
ftst
and
add
mov
jmp
sar
ret
add
out
test
neg
(bad)
out
mov
mov
cmp
bound
push
jecxz
xor
mov
cmp
mov
dec
mov
add
pop
inc
and
push
push
dec
mov
mov
sbb
imul
pop
sub
test
add
pop
out
out
aam
cmp
mov
cdq
cs
xor
push
sbb
comiss
rcr
jno
cmp
mov
int
dec
jge
dec
pop
sub
int
pop
scas
and
xor
cmp
mov
div
loopne
jbe
dec
sahf
imul
mov
jbe
imul
retf
idiv
push
(bad)
mov
pusha
push
pop
xlat
pop
dec
or
retf
xor
jae
add
mov
enter
ds
jo
mov
cwde
int3
ins
enter
fnstsw
adc
jae
xlat
mov
ret
ret
and
addr16
xor
movs
jae
push
lods
or
jmp
adc
dec
in
imul
out
mov
sub
outs
cmp
mov
pop
rcl
mov
fist
or
mov
jg
iret
inc
lock
rcl
fsubr
mov
xlat
push
or
fwait
sub
neg
xchg
ins
xrelease
mov
mov
dec
call
pop
lock
pop
push
xchg
or
mov
movs
push
jbe
lds
mov
leave
sar
cmp
sti
sbb
inc
fbstp
xor
xor
cmp
dec
inc
cmp
mov
push
(bad)
or
jo
rcl
inc
movs
cmp
pop
stos
add
pop
mov
push
mov
scas
int3
mov
or
js
mov
das
xor
nop
adc
popa
scas
and
or
or
jnp
leave
aad
rcl
aam
mov
push
inc
gs
pop
sub
xor
cld
or
and
cmp
cmp
add
leave
arpl
xor
mov
call
xor
ret
(bad)
fdivr
test
inc
sahf
mov
jg
stos
loope
es
inc
dec
push
or
out
sub
rcl
ds
pop
ins
xor
sub
fdiv
ret
mov
imul
pushf
mov
mov
cmps
jecxz
push
jle
fs
scas
int
scas
retf
inc
adc
not
add
cdq
jmp
ror
repz
add
retf
sbb
jnp
xor
popa
cmc
xchg
inc
pop
in
xchg
jle
cmp
lahf
mov
jmp
aad
lods
jnp
(bad)
sub
pop
mov
mov
xor
pushf
add
rcl
fidivr
mov
or
lock
arpl
das
call
out
sub
mov
inc
dec
enter
or
pusha
ret
dec
fild
icebp
test
cld
sbb
sbb
cmp
mov
repnz
sbb
(bad)
fadd
pop
mov
jmp
jbe
(bad)
retf
ins
or
add
xchg
mov
xor
mov
ret
test
push
pinsrw
and
icebp
sub
ss
loop
call
xchg
mov
loop
call
(bad)
dec
xchg
jne
cmp
mov
call
push
test
ins
lea
repnz
adc
shl
jbe
ret
dec
stc
sbb
xor
xchg
aas
add
and
idiv
in
test
test
popf
xchg
in
sub
rol
mov
sbb
rcl
fs
ds
add
push
push
sbb
enter
test
add
addr16
icebp
cmc
mov
pop
stc
mov
xchg
inc
mov
and
(bad)
push
dec
add
xchg
adc
sti
push
inc
cmp
cmp
iret
js
(bad)
jae
inc
xchg
jle
pop
ins
mov
test
stc
div
jne
ss
loopne
stos
cld
(bad)
sub
shl
xchg
or
fnstsw
xchg
mov
in
cmp
jge
(bad)
in
push
not
and
retf
pop
lods
fst
jle
xchg
hlt
pop
mov
jl
cmp
popw
xchg
pop
sub
in
ins
stos
cmp
fmul
(bad)
sub
ins
(bad)
imul
in
or
nop
pop
sbb
sbb
jbe
add
dec
dec
inc
mov
adc
(bad)
mov
test
inc
sub
and
mov
lods
std
cmp
mov
mov
jp
pop
jae
sbb
cdq
stos
outs
(bad)
adc
inc
repnz
xor
pop
ror
popf
es
add
or
cmc
add
fs
rol
inc
sbb
mov
jne
mov
lods
dec
sahf
ins
shl
pusha
nop
add
add
jb
fnsave
push
pop
mov
sub
ins
repz
ins
jo
movs
or
imul
iret
lea
outs
mov
imul
mov
imul
and
mov
ja
jl
cli
mov
iret
jnp
adc
mov
mov
inc
xchg
push
or
ja
inc
mov
cmps
dec
call
xchg
pop
imul
push
sub
retf
clc
push
pop
jg
(bad)
dec
push
aad
jge
lahf
dec
outs
aas
cmp
dec
mov
cmps
shr
pushf
pop
cmp
or
fnstenv
adc
shl
pop
repnz
fst
cmps
cmp
call
call
leave
cmp
mov
pop
pop
ja
sar
in
xor
sbb
out
pop
mov
les
fisttp
movs
repz
sub
pop
and
xor
sbb
cld
push
out
or
jae
call
fsub
inc
ins
fs
add
call
pop
(bad)
cmp
aas
(bad)
pop
push
fstp
jle
stos
dec
push
in
push
leave
push
fiadd
inc
enter
into
push
sbb
clc
push
jae
pop
pop
rcl
lds
in
push
mov
das
cmps
nop
inc
popf
loope
inc
cdq
sub
and
test
sti
mov
jbe
outs
inc
outs
stc
stos
test
jo
stos
inc
pop
adc
push
movs
and
iret
lock
add
aad
daa
add
xor
pop
inc
imul
pop
add
aaa
icebp
adc
gs
inc
sub
mov
mov
cmp
movs
test
daa
and
push
aam
pop
push
cld
push
in
xchg
fwait
adc
repz
(bad)
fcomip
or
pop
fsubr
mov
jno
and
mov
ins
(bad)
adc
mov
sub
cmp
daa
pushf
sahf
jmp
icebp
mov
(bad)
clc
out
repnz
mov
icebp
sbb
push
test
retf
jmp
dec
es
push
adc
push
adc
pop
xor
enter
nop
xacquire
(bad)
not
jl
push
ret
add
daa
mov
cld
push
int3
jns
xchg
fimul
outs
or
push
mov
xor
adc
in
imul
test
stos
cmp
pop
mov
cmc
cmp
xchg
adc
je
fsub
xor
cmp
push
sar
cmp
fcmovu
jne
cmp
inc
jle
pop
test
pop
mov
mov
xchg
adc
stos
mov
les
mov
sub
jb
sbb
je
stc
inc
aaa
mov
and
ja
loope
ss
nop
rcl
dec
fwait
imul
into
fld
pop
fiadd
mov
ins
sbb
(bad)
(bad)
out
ds
sub
mov
stos
rcr
bnd
push
popf
in
adc
pop
sub
adc
sub
shl
lea
add
adc
test
sub
push
dec
cmps
sub
fcomp
cli
lock
popf
or
loop
cmc
jbe
repnz
ret
(bad)
inc
xor
inc
cs
jmp
jle
in
lods
data16
arpl
cmp
retf
(bad)
scas
sub
push
lods
popa
pop
sbb
mov
cmps
mov
xor
adc
test
jg
push
shr
inc
xor
and
arpl
xchg
or
aad
xchg
push
cmc
std
in
xor
jb
outs
sbb
test
ins
add
mov
movs
jne
pop
jns
mov
cmp
psubusw
or
jb
push
into
out
adc
add
cld
jp
into
xor
add
call
inc
jne
sub
adc
pop
fstp
push
pop
pop
push
sbb
pop
inc
out
test
bound
(bad)
jl
js
retf
xor
jl
rcr
(bad)
sbb
sub
je
mov
popf
mov
mov
sti
and
fsub
(bad)
repz
xchg
dec
je
add
ret
sub
lods
stc
ds
jecxz
mov
jns
xlat
test
(bad)
out
(bad)
mov
jp
dec
ret
lahf
xchg
mov
leave
sar
fwait
(bad)
cwde
outs
adc
adc
sbb
and
xchg
ss
test
mov
push
cmp
xor
sub
sub
clc
xlat
cmc
sbb
fdiv
(bad)
push
add
fst
mov
sbb
or
pop
in
mov
jg
(bad)
or
sbb
shl
jg
jl
stc
dec
daa
lahf
dec
test
movs
int3
jbe
mov
sahf
fcom
push
mov
cs
add
imul
jmp
push
dec
call
popf
adc
cdq
sub
(bad)
es
add
pop
scas
fs
ins
mov
repnz
xor
inc
mov
ds
cdq
jbe
retf
ss
push
mov
imul
loopne
sti
pop
imul
das
dec
xor
stos
pop
push
pop
shr
mov
mov
mov
pop
adc
xchg
out
fstp
nop
jl
sub
sub
cwde
sub
js
cli
cwde
cmp
xchg
adc
sub
sbb
fiadd
mov
js
inc
retf
push
scas
or
(bad)
in
and
clc
imul
sub
adc
xchg
fidiv
das
lods
sbb
addr16
sbb
js
mov
enter
sbb
cmps
mov
outs
bound
scas
jmp
push
fld
(bad)
fist
mov
push
gs
je
dec
into
fsubr
jmp
scas
enter
ins
mov
sbb
test
xor
sbb
cmps
daa
mov
inc
dec
into
and
ja
xchg
(bad)
fld
xor
retf
mov
call
lods
inc
sar
mov
adc
sub
adc
out
sar
mov
vphaddwq
and
fmul
int3
test
jge
sub
addr16
hlt
cmp
shl
cmp
jae
inc
aaa
add
jmp
xor
int
lods
pop
nop
jle
jne
push
loope
int3
outs
cmp
adc
aas
mov
fld
jno
add
or
mov
aad
fisubr
ror
popf
frstor
leave
neg
fld
les
mov
add
sbb
stc
out
xchg
(bad)
pop
addr16
(bad)
sbb
or
inc
pop
mov
das
fadd
ds
test
fwait
das
mov
or
sub
mov
mov
jns
in
or
mov
and
jle
in
xor
mov
xchg
mov
arpl
mov
(bad)
push
lea
adc
add
xchg
add
aas
dec
je
cdq
and
or
inc
call
(bad)
push
pop
add
popf
add
pop
xchg
push
loopne
popf
mov
fimul
pusha
push
ret
std
sbb
clc
aaa
inc
arpl
dec
ret
cld
push
pop
daa
(bad)
fidivr
and
cmp
(bad)
in
add
fidivr
(bad)
jns
mov
sub
pushf
in
ror
push
mov
adc
xor
pop
add
int3
fwait
mov
shl
lods
lea
aad
push
hlt
pop
adc
cdq
sbb
jbe
xor
mov
mov
retw
push
into
arpl
in
and
test
aaa
inc
xor
or
cmp
sti
pop
xchg
inc
and
mov
scas
(bad)
movs
cld
cmp
mov
mov
shl
mov
add
popa
xor
fdiv
xchg
inc
pop
addr16
gs
pop
pop
jb
loope
xchg
daa
jmp
cmp
ds
dec
pusha
jge
xchg
out
sbb
(bad)
ror
loop
or
mov
jl
pop
lods
dec
add
retf
iret
cmp
rcr
addr16
jmp
ret
test
sbb
cmp
push
add
pop
or
xchg
inc
out
cdq
das
add
imul
push
push
sbb
sti
call
lock
fs
mov
loopne
jbe
jle
sar
mov
sti
push
push
push
xchg
int
retf
jb
xchg
cmp
test
fwait
sbb
push
dec
adc
out
pop
loope
add
loope
push
lods
mov
mov
bound
arpl
add
push
mov
sbb
jge
jg
stos
(bad)
xchg
in
into
xchg
popf
ret
pop
inc
icebp
mov
das
push
(bad)
shr
sbb
jne
inc
retf
add
ins
nop
cmp
cmp
lds
(bad)
mov
out
inc
lds
xchg
jbe
inc
mov
clc
das
sti
call
out
adc
test
sbb
pop
test
push
sub
(bad)
out
test
add
and
inc
inc
push
and
pop
call
ja
imul
jg
jno
icebp
movs
mov
sti
mov
push
in
push
cmc
jmp
jae
ja
jl
in
sbb
inc
xor
jecxz
mov
push
aaa
adc
in
into
stc
inc
xchg
(bad)
mov
fild
cwde
fisttp
sbb
sbb
movzx
ss
hlt
movs
add
inc
loop
outs
(bad)
cmc
call
or
aam
pop
inc
mov
pop
not
jmp
stc
cmps
lods
aas
dec
clc
push
int
push
adc
daa
leave
xor
stc
pop
pop
lods
daa
scas
test
dec
cmp
sahf
xchg
mov
xchg
xor
test
inc
outs
mov
and
xor
and
enter
icebp
out
out
pop
lods
xchg
xor
mov
push
mov
inc
dec
mov
adc
or
(bad)
or
in
mov
gs
dec
cwde
(bad)
iret
push
ins
jns
cmp
in
sbb
fsubr
retf
add
out
push
pusha
jmp
adc
es
jl
clc
ins
imul
jmp
mov
push
add
push
stos
rcr
call
fidiv
or
mov
repz
leave
(bad)
(bad)
mov
xor
or
mov
cmp
scas
out
sar
stos
sub
mov
inc
fmul
adc
dec
cmps
dec
pop
push
mov
cld
cmp
sub
jge
fistp
pop
je
jo
gs
ror
cmps
es
pop
fcomp
retf
lock
inc
int
or
cmovb
mov
aas
or
test
jl
xchg
sub
and
cwde
push
cmp
cld
xor
lea
add
movs
jbe
rol
dec
push
leave
arpl
loop
in
loopne
(bad)
repnz
mov
mov
and
stc
cmp
and
adc
loope
cdq
xchg
movs
sub
push
pop
mov
push
push
sub
xor
nop
mov
jl
pop
dec
jecxz
xchg
js
shr
pop
cmp
ret
mov
lea
dec
call
imul
je
test
push
ret
or
into
or
xchg
push
ret
jl
pop
and
popf
shl
or
push
test
pop
out
stos
mov
adc
sti
cmp
popa
xchg
pop
push
mov
push
mov
push
daa
pop
ret
push
add
pop
dec
xchg
(bad)
jg
icebp
hlt
pop
dec
fsubr
cld
ds
ret
pcmpeqw
shl
sbb
lock
mov
xor
lds
fiadd
pop
es
cld
dec
(bad)
je
sub
and
pop
add
xchg
mov
sbb
out
dec
and
jle
dec
xor
xchg
xlat
mov
xchg
out
movs
fnstsw
xor
fst
imul
hlt
sti
jmp
xor
adc
jmp
add
outs
and
and
adc
imul
not
jne
fimul
in
mov
sti
xchg
pop
shr
push
xor
test
call
cmp
ret
int3
fs
xchg
mov
xchg
pop
cmp
rcl
cmc
enter
loope
fnstenv
lods
dec
push
jl
dec
stos
imul
jge
not
shr
dec
lahf
mov
and
retf
mov
adc
popa
pop
fs
push
pop
inc
xchg
push
outs
mov
cmp
jo
(bad)
push
or
test
xor
push
jbe
inc
pop
fmul
test
nop
imul
jl
daa
pop
(bad)
aas
out
(bad)
(bad)
shr
or
jne
mov
xlat
and
pop
leave
dec
cmp
ds
pop
popf
xchg
push
cmc
mov
enter
mov
mov
push
ret
xor
fiadd
jl
xor
int3
pop
call
std
adc
adc
test
cli
adc
pop
mov
mov
jg
mov
or
lahf
pusha
cmp
mov
in
inc
bound
ficom
jbe
xchg
inc
mov
mov
sbb
mov
cmp
leave
repz
fucom
mov
or
push
sbb
popf
or
rcl
push
mov
sub
lods
iret
jg
dec
inc
sbb
and
loopne
daa
lock
push
add
mov
lods
fisubr
cmp
lock
fistp
push
push
jnp
stc
fcom
rol
jg
ror
add
dec
sbb
mov
push
jbe
test
push
ss
js
pop
jbe
movs
aad
les
test
sti
and
iret
mov
push
lods
jp
pop
ins
fbld
mov
push
dec
lock
mov
ret
ins
jmp
test
jmpw
pop
loopne
rol
test
push
lock
inc
test
jp
pop
push
mov
ins
push
mov
test
dec
das
mov
add
pop
repnz
test
cmp
rcr
pop
mov
fs
dec
jp
push
xchg
sahf
retf
jno
ror
clc
inc
cmp
inc
shl
loope
xor
mov
mov
fisub
mov
sbb
cld
test
sub
sbb
ret
dec
mov
xchg
jno
pop
cmp
lods
inc
mov
ret
(bad)
adc
dec
jg
ins
stos
rcr
es
inc
test
and
enter
adc
mov
iret
xor
push
sti
xor
daa
pop
pop
nop
add
xlat
sub
ror
xor
jg
scas
retf
clc
nop
retf
cmp
data16
adc
loopne
pushf
retf
add
and
scas
mov
mov
std
push
adc
dec
mov
or
jae
movs
xor
xor
call
mov
push
shl
clc
push
pushf
das
and
adc
cld
repz
push
sub
mov
jne
mov
adc
mov
cmp
sbb
dec
cmps
push
scas
stos
mov
mov
sbb
jle
ja
aam
out
xchg
sbb
int
mov
test
shr
mov
pop
or
clc
outs
scas
and
push
stos
fnstenv
retf
imul
out
mov
addr16
cmp
push
sbb
adc
sar
pop
add
imul
rcl
add
sub
ror
daa
aas
mov
std
mov
(bad)
repz
gs
pop
inc
imul
inc
inc
nop
or
dec
and
cmp
adc
xlat
ret
mov
ficomp
xor
imul
xchg
aam
jle
in
sar
add
cmp
xor
in
bound
arpl
cmp
lahf
jecxz
ja
addr16
shl
mov
cwde
mov
dec
movs
imul
call
dec
jmp
fldcw
fdivr
mov
push
sub
in
add
pop
fldenv
inc
mov
cdq
sbb
mov
cmp
sub
outs
push
fsubr
push
mov
jl
mov
and
int3
mov
add
xchg
mov
jmp
and
repnz
neg
dec
(bad)
xor
jg
push
imul
sub
shl
lods
adc
(bad)
push
clc
sub
jae
lock
or
jmp
xchg
lds
pop
into
mov
adc
fcmovnb
xor
sbb
jmp
cmps
sti
cmp
jae
cmp
fisub
jle
lods
dec
push
inc
ret
pop
jbe
and
std
mov
cmc
shl
pop
fnstenv
jbe
call
cli
and
mov
jns
adc
xor
jecxz
movs
in
push
sub
leave
cmp
adc
inc
mov
add
das
ret
pop
mov
loope
jle
addr16
pop
icebp
iret
inc
cmp
inc
movs
cmp
in
push
movs
mov
(bad)
repnz
and
mov
mov
jne
mov
stos
sub
test
mov
ins
jge
jne
ficom
out
jmp
or
ret
xchg
mov
push
sub
cmps
inc
pop
scas
and
sub
rcl
jmp
fsubr
fnsave
jne
out
mov
sub
sbb
sub
mov
inc
pop
retf
(bad)
xchg
or
sub
cmp
pop
mov
je
out
cmp
sub
(bad)
in
sub
leave
sbb
aaa
ror
and
iret
clc
cmc
leave
je
ss
push
and
or
add
mov
ror
inc
loopne
sar
fs
xor
(bad)
aas
dec
stos
and
loope
mov
sbb
push
stos
out
and
pop
add
jmp
pop
fwait
aas
pop
cmp
retf
mov
mov
push
xchg
inc
ret
ret
jmp
into
mov
push
pop
push
mov
push
in
adc
sbb
loope
sbb
ret
out
iret
mov
adc
push
ret
jl
ror
popf
mul
leave
sbb
dec
mov
sub
sbb
dec
ds
add
shr
aam
cmp
ds
fndisi(8087
sub
dec
hlt
popf
and
sub
and
mov
bound
sbb
fcom
inc
dec
hlt
push
lock
or
mov
dec
xor
pop
sbb
mov
sbb
mov
or
pusha
ins
nop
mov
int
cmp
retf
fs
loop
addr16
mov
fistp
popf
les
sub
ror
adc
stos
scas
mov
test
fwait
xchg
std
push
retf
adc
sbb
adc
push
pextrw
pop
cdq
movs
fadd
add
fcomip
lods
ret
(bad)
or
dec
fldenv
rol
arpl
out
jno
sub
das
adc
out
fmul
or
adc
sub
jecxz
out
jno
imul
sbb
mov
jge
js
jg
jne
aas
add
mov
mov
jl
je
or
inc
std
imul
ret
sub
jbe
add
movs
xchg
jbe
enter
jae
lahf
ret
fisttp
leave
lods
lods
mov
cmp
pop
fs
adc
enter
xchg
add
push
add
bound
enter
ret
jnp
aam
xor
mov
in
punpckhwd
dec
xor
es
jb
call
nop
(bad)
mov
xlat
xor
sub
jb
repz
sbb
mov
ins
xor
xchg
and
aad
imul
popf
push
sbb
rcl
lahf
call
mov
popa
out
mov
jbe
sti
out
adc
jmp
(bad)
sahf
lahf
int
pop
(bad)
outs
mov
test
and
mov
fiadd
pop
(bad)
fs
hlt
sbb
retf
lock
xor
enter
mov
push
inc
inc
ins
nop
jl
xor
fldcw
xchg
sbb
sub
js
cmp
inc
jbe
mov
lods
cmp
sub
fwait
sbb
push
pusha
js
jg
clc
bound
or
jle
(bad)
(bad)
sub
mov
cmps
mov
dec
test
mov
lock
leave
jmp
outs
jb
sub
out
xchg
in
mov
pop
sub
out
nop
xor
jbe
xchg
into
fstp
in
jle
jp
xchg
jmp
(bad)
cmp
inc
push
jnp
cmp
inc
inc
fmul
scas
(bad)
cdq
pop
aad
sbb
push
and
push
leave
in
mov
mov
dec
xlat
out
fistp
dec
(bad)
xor
push
(bad)
call
imul
shl
mov
inc
xor
jnp
mov
test
cmps
test
loopne
adc
pop
sub
dec
mov
hlt
dec
test
xchg
emms
loop
sub
and
jmp
push
mov
inc
jns
jbe
push
xchg
rcr
stc
mov
pop
movs
stc
mov
in
sbb
fs
add
fistp
jo
sbb
mov
sahf
cdq
fimul
and
adc
lock
in
add
jbe
out
mov
pusha
mov
inc
ds
cmp
movs
cmovno
push
retf
pop
adc
mov
aaa
adc
mov
cmp
mov
or
enter
mov
push
std
add
in
pop
pop
adc
out
add
aam
sbb
aad
jle
pop
sbb
xor
int3
das
jns
and
ret
cdq
cmps
pop
dec
sbb
xor
(bad)
mov
cmc
and
inc
adc
cdq
push
pop
movs
mov
xor
rcr
push
pop
sbb
jg
inc
inc
aad
ds
fidivr
call
repz
xchg
mov
icebp
pusha
push
jne
xchg
add
ss
inc
mov
(bad)
aas
in
sar
mov
enter
clc
pop
push
push
lea
int
daa
xor
int
sahf
jle
xchg
ficomp
dec
lds
lods
add
fst
pop
jmp
add
jge
test
shl
inc
sbb
xchg
pop
mov
add
(bad)
jp
and
scas
cmp
cld
jno
(bad)
adc
popa
jg
movs
inc
jb
push
adc
and
mov
fst
ret
adc
loopne
sbb
xor
lds
mov
out
cmps
ins
xchg
rol
adc
es
jo
je
mov
push
mov
xchg
sub
cwde
xchg
cmp
inc
sbb
mov
ja
bnd
jns
hlt
or
cmc
call
std
mov
test
imul
sbb
sar
cli
aam
xchg
sbb
les
mov
xchg
lods
sbb
mov
mov
ss
in
out
std
retf
inc
and
arpl
xor
mov
out
data16
sub
jecxz
dec
fwait
cmps
shl
mov
retf
out
repz
popf
adc
mov
test
lods
hlt
inc
pop
jae
clc
mov
and
stos
cmps
or
stc
int
sub
hlt
out
xor
pop
(bad)
loop
rcr
daa
pushf
out
inc
imul
mov
inc
pushf
repnz
ds
je
mul
retf
mov
bound
inc
out
call
push
xchg
xor
mov
add
jg
pop
pop
mov
fldcw
fidivr
mov
or
mov
dec
in
in
loope
jl
cdq
pop
mov
cmps
inc
or
pop
mov
sbb
adc
xchg
pop
mov
mov
pop
bnd
test
sub
push
idiv
enter
jg
pop
popa
and
jo
xchg
cwde
hlt
inc
inc
ret
fidiv
ror
cmp
cmps
xor
or
push
add
repz
lea
push
loopne
cmc
and
cli
imul
sub
leave
and
shl
scas
dec
call
add
(bad)
pop
leave
and
mov
in
jge
inc
add
inc
icebp
test
(bad)
push
sbb
iret
(bad)
mov
mov
pop
push
and
adc
iret
ss
ror
iret
out
cwde
adc
loopne
shl
arpl
in
push
pop
dec
imul
xor
(bad)
lods
test
pop
cmc
push
ds
cmp
or
adc
mov
push
lods
dec
pop
inc
data16
pop
xchg
test
jne
das
iret
sbb
and
ficom
pop
js
outs
jg
sbb
push
jne
xor
dec
push
dec
xchg
cmc
add
stos
mov
movs
nop
lods
les
add
pop
(bad)
xchg
rcr
popf
pushf
call
sbb
loop
in
add
fld
or
xchg
data16
xchg
mov
fwait
or
sbb
fld
mov
sub
mov
loop
lahf
pop
dec
lods
(bad)
mov
push
mov
scas
out
je
pop
pop
mov
sbb
mov
mov
or
add
js
mov
cmps
arpl
stos
js
fisub
dec
sbb
aam
push
cmp
je
mov
pop
(bad)
ins
push
add
jmp
push
mov
adc
in
add
jae
inc
cmps
dec
and
(bad)
loop
push
les
je
aas
or
add
mov
call
daa
push
fldenv
loopne
push
retf
enter
scas
out
sbb
(bad)
and
aaa
fcmovne
stc
pop
fisubr
cmc
lock
or
add
in
push
movs
mov
jle
int
fist
sub
sbb
movs
dec
loope
aas
cmp
in
pusha
inc
aad
nop
or
nop
cmp
std
ins
push
ss
cmp
cmp
ret
(bad)
fwait
adc
or
push
popf
mov
xchg
test
test
fidiv
loopne
fwait
test
call
inc
jg
or
push
add
pop
push
or
mov
lods
mov
adc
sbb
es
mov
call
shl
dec
dec
push
pop
rol
xchg
sub
mov
adc
xchg
jbe
add
jecxz
or
add
xor
add
jecxz
xchg
mul
or
mov
dec
push
push
pop
ret
adc
jle
inc
mov
or
cmp
add
sbb
add
push
adc
sub
push
rol
call
fmul
lea
stos
jmp
(bad)
xor
sub
sub
js
movs
stos
sub
sbb
push
movs
fwait
sbb
mov
stos
aam
mov
fild
xlat
enter
cmp
and
rcl
sahf
ss
xchg
and
and
rol
cld
test
or
and
(bad)
adc
out
dec
mov
xchg
inc
mov
sub
mov
mov
jecxz
lea
imul
jbe
pop
jns
xor
add
pop
(bad)
cs
sub
leave
fld
xchg
scas
jmp
jb
sub
cmp
sbb
or
cmc
dec
mov
or
adc
push
test
push
mov
ins
loopne
fcom
shr
in
mov
jns
cmps
add
fucomip
or
dec
bnd
adc
sbb
ins
in
mov
fnstsw
test
push
in
cwde
jmp
add
loop
popa
adc
inc
mov
push
scas
or
or
sbb
dec
in
jecxz
rcl
js
and
mov
xchg
jp
cmp
jns
cld
fbld
sub
jbe
pop
iret
and
loope
add
cwde
lea
xchg
imul
pop
inc
ss
call
jb
popf
ins
push
adc
inc
repnz
xchg
sbb
scas
cmp
mov
mov
fadd
jb
or
jecxz
stos
xchg
popa
push
in
xchg
and
adc
cmps
cwde
sub
ss
push
sub
xchg
lahf
rcl
fcomp
je
sub
dec
es
lods
ret
call
add
adc
mov
int
adc
and
fs
cmp
mov
sub
push
sbb
sbb
(bad)
sub
mov
ds
and
out
push
jecxz
sub
cmp
loop
das
leave
inc
sbb
push
push
cmp
jae
int
rcr
xlat
jmp
arpl
test
das
int
mov
or
cmc
pushf
add
(bad)
cmps
pop
stc
inc
stos
and
jb
mov
adc
rol
jmp
push
sahf
out
pop
fidivr
push
mov
imul
inc
cmp
mov
fsubr
call
into
in
mov
dec
mov
adc
mov
dec
add
cmc
inc
xchg
push
(bad)
mov
or
jae
nop
mov
mov
(bad)
sbb
xchg
icebp
ret
fild
out
imul
rcl
mov
dec
cmp
scas
int3
cmp
push
and
lods
push
or
dec
cmps
cmps
loopne
rol
jae
push
imul
pop
inc
movs
aad
xor
xchg
nop
adc
retf
sbb
dec
(bad)
mov
add
xchg
cmp
popa
sbb
das
in
and
and
out
push
inc
push
jmp
jno
gs
sar
jp
cmps
inc
dec
xor
add
adc
cs
popa
mov
iret
mov
add
sti
cmc
sub
push
sbb
scas
sbb
hlt
sub
inc
rol
dec
(bad)
and
call
or
ffree
push
pop
push
dec
push
stos
push
int3
pushf
dec
stos
sub
call
dec
scas
std
adc
repz
call
pop
sub
ds
int
cs
leave
cmps
daa
(bad)
mov
inc
dec
jg
cld
xchg
out
and
out
jmp
ficom
push
loopne
hlt
leave
pop
and
(bad)
jmp
inc
push
shl
imul
movs
mov
int
sahf
fstp
outs
out
add
cdq
enter
cmp
add
mov
adc
xchg
(bad)
enter
xchg
loop
push
and
les
(bad)
arpl
aas
pop
scas
mov
js
in
pusha
(bad)
test
repnz
repz
mov
mov
rol
ds
inc
xor
xchg
rcl
inc
jbe
xchg
test
stc
cmps
add
rcl
fisttp
push
in
jmp
test
sbb
sbb
enter
push
imul
jecxz
shl
or
idiv
jmp
mov
fnstcw
cmp
mov
or
jge
dec
xchg
inc
(bad)
jno
loope
cwde
mov
jl
add
xchg
jle
pop
gs
pop
mov
hlt
addr16
xchg
je
fucomp
cmps
push
clc
scas
xlat
test
mov
pop
fwait
mov
and
fsubr
mov
fwait
adc
mov
sar
pop
movs
jae
and
int3
popa
imul
arpl
push
sar
shr
cli
sbb
cwde
fistp
sbb
ins
inc
cdq
js
retf
aam
into
jno
jle
mov
jno
mov
mov
repnz
cmp
cmp
or
imul
push
les
push
mov
(bad)
adc
mov
jns
es
adc
push
outs
and
out
fst
add
adc
xor
and
(bad)
mov
xor
mov
ret
adc
add
aad
or
sub
(bad)
movs
add
inc
mov
sub
mov
push
je
(bad)
in
icebp
adc
fiadd
push
mov
jbe
ss
(bad)
jne
aad
std
dec
mov
cmp
pop
lock
mov
lods
adc
mov
aaa
or
arpl
xor
rcr
cmp
sub
scas
lock
jge
outs
scas
nop
mov
add
pop
xor
test
loope
jle
(bad)
fcom
loopne
dec
pop
cli
push
jo
or
push
(bad)
and
adc
xor
cmp
mov
ret
outs
or
in
mov
aaa
clc
in
cwde
pushf
bound
js
and
jno
ret
jecxz
int
mov
ds
push
mov
adc
fld
push
clc
aam
int
cs
icebp
(bad)
mov
xchg
xor
(bad)
push
sub
fcmovnu
ss
shr
jp
adc
jno
push
pop
loopne
mov
lds
fsubp
lahf
push
push
fdivrp
push
movlps
pop
cmp
shr
loop
shl
cmp
sub
adc
call
fist
xchg
(bad)
ror
mov
das
mov
fnstenv
jmp
das
add
inc
mov
pop
call
sbb
or
lods
bound
add
mov
or
and
imul
test
sub
adc
loop
(bad)
stc
and
or
out
(bad)
xor
sti
(bad)
dec
loopne
mov
mov
(bad)
push
or
call
adc
call
xchg
mov
clc
cmp
or
fst
mov
(bad)
imul
rol
sbb
push
out
loope
and
jmp
adc
aad
pop
mov
jnp
popf
movaps
stos
mov
or
lods
inc
aaa
ss
scas
mov
rol
xchg
sti
dec
pushf
fdivr
or
push
popf
ins
xor
jno
mov
and
push
(bad)
adc
inc
fistp
add
stc
arpl
not
repz
add
shl
xchg
add
scas
mov
mov
add
push
int
jp
dec
arpl
rcl
sbb
jmp
mov
addr16
addr16
mov
(bad)
in
jno
pusha
jle
pusha
push
xchg
(bad)
or
les
jmp
(bad)
out
xchg
test
pop
dec
inc
lock
pop
cmp
cld
rcl
std
jbe
sbb
js
test
sub
inc
sub
movs
cmp
adc
xchg
fnsave
pop
inc
shr
push
dec
push
pop
call
lods
push
xlat
(bad)
lock
cmps
cli
add
push
das
hlt
pop
mov
mov
sti
add
dec
aaa
inc
dec
les
inc
pop
outs
popa
xchg
dec
inc
fadd
repnz
fdiv
jnp
iret
loop
dec
sub
call
cdq
imul
push
xchg
pop
mov
mov
icebp
and
inc
cmp
sub
mov
jae
mov
mov
(bad)
cmp
stos
jmp
mov
jl
push
pop
or
iret
fmulp
push
cld
push
sub
jae
or
sbb
pop
add
popa
js
push
leave
mov
cmp
jle
movs
pop
xor
ror
(bad)
nop
mul
adc
imul
out
stos
sub
addr16
and
int
mov
jg
sbb
add
das
iret
and
fsubr
mov
sbb
call
div
iret
or
imul
fs
cdq
cmp
cmc
dec
jae
and
dec
and
xchg
cmc
adc
push
add
outs
xor
adc
pop
pop
movs
mov
movs
and
or
push
arpl
bound
mov
mov
loopne
fisub
pop
cmps
mov
std
gs
sub
cmps
fstp
int3
jns
mov
retf
je
push
icebp
dec
xor
outs
sbb
sar
adc
dec
mov
int
imul
loopne
pop
rcl
mov
jns
dec
and
fldln2
sbb
xor
mov
icebp
cwde
dec
mov
mov
out
dec
mov
arpl
aas
sbb
stos
mov
inc
and
jne
adc
movs
jno
xor
mov
xchg
inc
sbb
mov
je
ss
and
and
out
mov
xchg
push
outs
ret
cli
push
and
mov
jmp
sub
movs
jne
data16
fisttp
hlt
iret
cmp
rcl
ret
or
pusha
cmp
adc
scas
pop
popf
sahf
imul
xchg
outs
stc
ins
xchg
fwait
or
dec
push
mov
pop
repz
test
in
sub
ins
jno
js
jecxz
rcl
ficomp
pusha
push
test
(bad)
mov
mov
movs
mov
mov
xchg
cdq
xchg
test
cmp
(bad)
pop
push
cdq
push
and
xchg
(bad)
rol
inc
ds
adc
dec
shl
sbb
sub
dec
mov
add
or
sub
clc
jg
jmp
pop
pop
scas
mov
lods
cmps
xchg
mov
mov
mov
sub
pop
pop
das
jmp
push
xchg
aas
push
xor
aas
sbb
sbb
int3
jne
(bad)
ins
or
out
fnstenv
or
into
add
or
cmps
adc
cmp
cmp
test
jmp
sub
push
pop
js
mov
(bad)
push
ins
fcmovbe
push
into
rcl
adc
lahf
into
mov
push
cs
das
add
ds
popf
pop
mov
shl
sahf
arpl
retf
pushf
and
enter
fwait
inc
pop
shl
in
mov
pop
cmps
fs
stc
ja
lock
push
pushf
push
popa
push
(bad)
aas
mov
jne
and
add
sbb
mov
and
cdq
cmp
cs
dec
xchg
enter
shl
pusha
push
(bad)
aam
mov
or
fcom
mov
mov
jb
icebp
lahf
rcl
dec
ror
loop
adc
pop
and
push
inc
mov
lods
adc
push
jmp
inc
lods
adc
(bad)
enter
out
iret
xchg
push
imul
fsub
jecxz
je
cmp
xlat
add
or
xor
ss
sub
hlt
xchg
jae
mov
leave
push
rol
pop
mov
in
fistp
call
mov
fld
mov
push
add
mov
bound
sub
mov
lods
dec
mov
fmul
xchg
pop
mov
dec
fimul
fmul
or
and
xlat
adc
or
adc
pop
mov
rcr
ins
mov
sub
adc
sub
push
cli
jnp
retf
pop
xchg
push
push
lock
xor
and
in
dec
lods
ret
adc
adc
and
js
shr
xchg
fild
inc
push
idiv
inc
mov
test
cs
and
popa
mov
pop
mov
adc
xchg
sub
jmp
fist
mov
or
xor
or
enter
call
imul
fadd
cmp
mov
mov
push
iret
xchg
jp
push
sti
sbb
push
(bad)
cmp
aam
mov
(bad)
call
jne
xor
xchg
mov
ss
jnp
add
and
clc
mov
mov
out
adc
lods
add
add
push
or
mov
out
test
push
leave
dec
ficomp
or
fdivr
push
shl
(bad)
lods
or
es
cmp
dec
inc
cmc
jge
mov
mov
mov
jle
iret
add
data16
cmps
loopne
shl
fdiv
inc
or
adc
rol
cdq
cmc
or
xchg
cdq
repnz
les
sub
sbb
mov
bnd
fmulp
out
add
fisub
adc
mov
int
or
arpl
jp
std
jle
push
loop
mov
push
nop
push
jp
cmc
cmp
loopne
jmp
mov
xor
scas
push
ret
cwde
jo
sub
clc
jl
mov
nop
cmp
push
pop
call
ss
mov
inc
add
(bad)
fs
mov
add
das
ret
jb
sub
push
jb
xchg
push
xchg
clc
dec
mov
mov
fisub
cmp
inc
out
push
adc
and
mov
jne
sahf
mov
jg
adc
icebp
xchg
adc
xor
(bad)
leave
fimul
mov
jo
pop
inc
(bad)
cli
mov
cmp
pop
add
sub
(bad)
lods
ficomp
inc
jae
fwait
sbb
mov
xor
jle
enter
push
(bad)
xchg
shr
shl
mov
ins
rcr
lea
push
aam
mov
adc
ret
ins
jbe
adc
and
xor
cld
in
aad
mov
sbb
sub
aas
std
push
test
ds
dec
xchg
fs
feni(8087
popf
jne
int3
sti
xchg
data16
aad
dec
lds
xchg
adc
clc
pop
xchg
jecxz
or
sahf
in
jmp
inc
push
inc
nop
cmp
cld
mov
loopne
or
cld
jo
pop
out
shl
movs
and
fadd
fst
add
add
aad
or
xchg
jb
jno
fistp
int
adc
aad
pop
mov
bound
lods
push
push
nop
pop
dec
pop
cld
call
mov
add
mov
jb
jge
add
cwde
fidivr
cs
pop
push
(bad)
mov
test
xchg
push
push
dec
and
mov
test
wrmsr
and
cmp
sub
dec
std
mov
and
mov
xlat
inc
mov
inc
xor
stc
stos
cmps
jnp
ja
hlt
cmp
add
push
ins
jnp
(bad)
in
lea
fdiv
push
(bad)
pop
pushf
or
mov
nop
or
cmp
sub
cld
icebp
cmps
dec
push
mov
(bad)
jb
pop
xchg
pop
inc
pop
fdiv
inc
and
fsub
pop
icebp
lods
pextrw
mov
jb
inc
repnz
scas
mov
fdiv
shl
xor
push
add
and
mov
fisubr
test
pop
mov
jge
xor
aas
ds
js
fistp
jmp
ret
fistp
inc
mov
ins
ins
sbb
jl
cmp
popf
pop
pusha
ror
pushf
push
ins
xchg
and
ss
dec
frstor
test
ret
or
aaa
(bad)
scas
jl
icebp
mov
cld
into
add
mov
out
pop
mov
icebp
or
fmul
fsubrp
mov
dec
test
lock
sbb
out
scas
stos
pop
outs
scas
call
test
or
(bad)
mov
mov
mov
(bad)
repz
push
mov
push
or
xor
push
push
test
cmp
mov
fisttp
push
out
cmps
jp
lock
ror
jb
push
aam
nop
retf
adc
call
ins
push
push
daa
mov
xchg
call
push
ror
mov
sbb
inc
sahf
popa
or
fld
mov
mov
or
sbb
stc
mov
test
push
test
xor
push
sbb
mov
push
js
stc
call
add
fild
test
sub
cmps
pop
sub
mov
ins
jbe
mov
cmc
imul
adc
je
call
fidiv
call
sub
bnd
movs
pop
dec
test
mov
jecxz
adc
add
pop
jbe
stos
leave
xchg
fstp
out
xchg
xor
out
outs
ja
cmp
cmc
ss
or
int3
test
sub
imul
out
in
fcmovnb
inc
jne
sbb
xchg
pushf
loop
cmps
cwde
mov
add
sub
and
xor
js
or
mov
pop
sub
mov
dec
pushf
and
pop
mov
test
jb
mov
or
daa
inc
retf
sbb
dec
sbb
sub
stos
cmp
out
cld
xchg
ds
push
sti
jl
xchg
leave
adc
addr16
add
and
cdq
mov
mov
inc
mov
mov
sub
sbb
mov
add
int3
lahf
sub
fsub
nop
adc
sti
dec
in
push
loope
retf
mov
pop
nop
and
(bad)
enter
repz
dec
dec
jo
pop
ja
mov
xor
sbb
mov
jno
push
(bad)
gs
(bad)
fld
push
lahf
loop
cwde
add
fdiv
adc
repnz
outs
add
and
and
lods
je
mov
dec
retf
cmps
xlat
mov
cli
xor
mov
ret
push
lock
pop
jb
and
jmp
mov
mov
js
imul
mov
xchg
fadd
lods
pop
aad
cdq
ins
arpl
pop
es
fiadd
ins
sub
lods
dec
sub
stos
fist
out
cmps
sub
fdivr
push
push
out
dec
lahf
pushf
fcomp
test
repz
repnz
shl
daa
pushfw
pop
sahf
xchg
push
lods
mov
lahf
dec
or
std
xor
fcomp
xchg
pop
rcl
cmp
xchg
imul
jmp
add
xlat
mov
dec
pushf
loop
pop
out
mov
mov
mov
(bad)
aaa
std
(bad)
push
push
fcomp
outs
pop
or
mov
shl
xor
ficomp
out
and
add
cmp
mov
and
dec
retf
push
jmp
sub
dec
(bad)
add
sbb
clc
cmp
xchg
pushf
inc
fild
sub
add
adc
out
rcpps
jns
cmp
cwde
jge
sub
imul
sbb
mov
scas
(bad)
mov
mov
stos
sti
mov
or
popf
aaa
stos
scas
adc
pop
mov
add
iret
xchg
aam
fs
in
pop
retf
and
jo
lods
pop
icebp
lods
daa
and
xchg
sub
mov
and
nop
mov
push
mul
fild
lds
cmp
repz
or
sub
mov
mov
adc
pop
(bad)
gs
add
icebp
xchg
inc
mov
sti
push
fnsave
adc
daa
fwait
sar
retf
fbld
sub
inc
mov
(bad)
call
cmp
lock
out
add
call
ins
scas
mov
bound
xor
test
cmps
sbb
gs
out
mov
adc
test
fiadd
push
jno
ss
dec
jbe
xchg
dec
jle
in
outs
or
pop
xor
out
xor
push
inc
add
xchg
xor
lock
sahf
push
pop
and
imul
add
in
aam
xchg
hlt
mov
mov
mov
lea
ficom
les
cmp
dec
push
sti
pop
cs
pop
xlat
sub
pop
pop
sbb
cmp
movs
ror
mov
mov
adc
xor
cmp
nop
inc
pop
jge
ret
shr
xor
push
lods
js
aam
or
loopne
ins
call
rcr
pop
pusha
lea
adc
push
dec
mov
movs
iret
cmp
imul
in
pop
ds
or
(bad)
fstp
ret
push
mov
movs
fiadd
xor
out
xchg
xchg
in
adc
int
popf
sub
(bad)
push
rcl
push
(bad)
test
jne
mov
mov
sbb
imul
adc
mov
cmc
fld
cmp
lea
(bad)
es
call
mul
out
iret
inc
addr16
inc
leave
push
and
pop
pop
mov
(bad)
jl
rcl
or
cmps
add
or
loop
je
outs
pop
mov
mov
pop
(bad)
mov
stos
rol
je
lds
movs
or
or
xor
sub
int
mov
out
popa
mov
push
shl
pop
ins
retf
sub
ficom
dec
call
and
aaa
and
scas
repnz
cs
jle
(bad)
stc
stc
inc
sbb
mov
call
test
out
mov
inc
mov
dec
les
fs
mov
pop
mov
js
pusha
mov
test
les
(bad)
int
and
dec
stc
cmp
cmps
cld
loopne
mov
mov
enter
dec
push
pop
ja
int3
cmp
mov
adc
(bad)
popf
dec
xor
sar
imul
add
aad
movs
push
xchg
ins
data16
mov
aas
mov
jb
inc
leave
cmc
mov
rol
ins
fadd
pop
rcr
xchg
push
in
mov
iret
enter
test
aad
dec
push
(bad)
jo
aam
inc
cmp
rcl
loop
mov
dec
mov
or
cld
pop
and
mov
stc
push
xor
out
mov
push
clc
lahf
(bad)
xchg
sbb
and
out
sahf
imul
dec
xchg
retf
std
mov
xchg
push
neg
mov
xchg
jns
push
adc
jle
xchg
xlat
pcmpeqb
xchg
inc
adc
ds
push
test
dec
je
add
or
repnz
push
inc
jno
or
xor
and
pop
xor
pop
push
dec
cmp
jnp
mov
sahf
jo
in
xor
cwd
mov
loopne
sub
xor
add
mov
cmp
push
jge
(bad)
call
cmps
sub
and
inc
mov
in
sar
imul
dec
fdiv
aam
cli
fcmovnb
adc
adc
sbb
add
mov
leave
(bad)
cdq
push
fsubr
mov
push
sar
fdiv
test
inc
xor
popa
mov
pop
and
cmp
jbe
cmp
adc
push
push
out
push
cwde
outs
cmps
xchg
lods
nop
push
dec
push
push
sub
add
test
adc
add
aaa
mov
xchg
cmc
(bad)
call
push
std
xchg
icebp
jae
mov
cmp
inc
sbb
push
jnp
adc
or
outs
sbb
mov
mov
mov
mov
mov
mov
pop
test
addr16
or
mov
cmp
push
jmp
adc
div
mov
loop
sti
cld
test
add
sub
popa
pop
jbe
das
fadd
xor
in
(bad)
mov
or
loope
clc
cmps
mov
mov
dec
outs
pop
(bad)
pop
(bad)
test
or
daa
rol
(bad)
pushf
mov
enter
add
lods
pushf
mov
or
fnstcw
fidiv
fadd
adc
mov
xchg
jb
fidivr
sbb
stos
fcmovb
mov
sbb
daa
add
ins
pop
lahf
or
mov
push
arpl
adc
fwait
jo
adc
jno
nop
lods
and
xor
movs
pop
jg
push
jmp
dec
sub
dec
xchg
xor
push
or
add
scas
icebp
repz
into
pop
push
fxch
pop
hlt
mov
push
iret
xor
sar
jle
out
pop
test
ds
sbb
hlt
sub
pop
bound
xchg
jg
(bad)
imul
int
push
scas
jge
out
into
jmp
xor
cdq
jp
or
push
mov
int3
cmps
aas
xor
add
adc
pop
in
je
or
sbb
(bad)
jg
stc
ficomp
cmps
lds
fnstsw
adc
xchg
mov
shr
xor
hlt
sub
inc
jno
xchg
inc
pusha
int
aam
lds
push
lods
add
mov
aas
cmp
xlat
loope
inc
std
popf
xor
xchg
sub
jmp
push
xor
fsubr
popa
cmp
es
jecxz
repz
inc
enter
dec
or
push
out
pop
jmp
ret
pop
dec
daa
or
jae
(bad)
shl
lock
add
jnp
(bad)
pop
adc
mov
addr16
push
inc
add
adc
div
mov
cwde
push
xchg
bsf
dec
sub
outs
es
xchg
sbb
jb
das
cmp
jecxz
xchg
(bad)
or
bound
fwait
xlat
nop
cmp
nop
iret
repz
jmp
xchg
into
setno
call
mov
or
xor
and
adc
test
stos
cmp
daa
push
pusha
es
rcr
adc
mov
mov
icebp
xor
fwait
mov
or
or
lods
aaa
aas
test
imul
fs
es
or
(bad)
das
gs
mov
mov
cld
hlt
add
xor
out
repz
(bad)
mov
mov
mov
lahf
push
or
mov
or
les
jb
mov
mov
inc
mov
xchg
inc
mov
pusha
imul
imul
mov
ret
fstp
movs
aam
jp
inc
lods
xor
out
cmp
inc
mov
sbb
mov
inc
sbb
sbb
popf
sbb
pop
jmp
pop
inc
popa
rol
xor
out
lock
xor
jno
out
cmps
mov
les
push
pop
outs
stc
fiadd
sbb
mov
mov
out
xchg
pop
neg
adc
dec
xchg
jo
pusha
das
stc
jno
mov
inc
gs
sbb
jo
and
pop
icebp
sub
fild
mov
test
jb
mov
fbld
ror
mov
dec
in
ins
xchg
xchg
xchg
retf
leave
int3
in
dec
mov
jge
enter
dec
xor
jae
jp
retf
stc
shl
xor
jg
mov
add
pop
xchg
dec
dec
cs
(bad)
in
xor
cmp
bound
popa
je
adc
dec
xchg
or
cmps
sahf
adc
inc
jmp
ja
iret
jnp
and
arpl
mov
stos
pop
inc
mov
fmul
xor
adc
and
nop
jae
mov
or
jp
push
(bad)
and
push
fldcw
and
ss
adc
scas
push
mov
movs
rcr
jbe
sbb
lock
cld
mov
fwait
or
jbe
xchg
jg
sub
loop
xchg
aas
sub
jge
cmp
xlat
jae
inc
mov
sbb
sahf
inc
mov
cdq
adc
sbb
fs
mov
dec
xchg
call
sahf
rol
push
(bad)
mov
xor
pop
jl
cld
fdiv
xchg
jp
iret
addr16
mov
leave
push
sub
sub
outs
retf
fisttp
dec
cmp
push
loop
push
jmp
psllq
mov
adc
xchg
sub
sub
aad
dec
jl
sar
sbb
lods
das
sub
jne
(bad)
data16
mov
add
call
fidivr
dec
rcr
clc
fisttp
xchg
jne
fs
shl
adc
bound
push
test
xor
xor
sbb
int
cmp
out
out
dec
ss
imul
out
repz
(bad)
sbb
cmp
cmp
adc
mov
loop
lock
add
mov
imul
pinsrw
inc
js
imul
push
mov
loope
add
loop
sbb
jno
mov
sub
cmp
dec
jae
jns
pushf
mov
pop
jle
jmp
mov
je
inc
inc
out
push
scas
addr16
jae
and
sbb
pushf
push
outs
sbb
push
or
mov
sbb
dec
scas
es
iret
std
ins
sbb
xor
pop
or
xchg
or
leave
fadd
pop
outs
sahf
repnz
not
push
repnz
push
or
sub
sub
push
inc
ja
arpl
aad
xchg
lods
jne
scas
or
xchg
xor
dec
dec
repz
lea
cmps
xrelease
les
xchg
popf
int
adc
mov
mov
out
out
xor
fimul
cmp
lock
mov
xchg
xor
pop
ss
mov
into
pop
cmp
ds
pop
xchg
xor
inc
test
jno
bound
jb
outs
mov
aam
(bad)
sub
int
fiadd
xchg
and
jmp
lds
inc
inc
xchg
inc
dec
xchg
and
mov
fcmovnu
fmul
test
ss
fistp
mov
cmp
cvtps2pd
dec
leave
call
mov
iret
xchg
mov
xchg
es
and
dec
sub
mov
mov
push
jmp
adc
pop
cwde
push
retf
aam
fdivr
adc
clc
dec
call
in
xchg
push
add
repz
lock
sar
and
xor
inc
mov
std
push
pop
add
bswap
repz
inc
inc
sbb
icebp
outs
sbb
pushf
leave
call
imul
mov
xchg
out
cli
cld
hlt
out
imul
sti
ret
lock
or
xor
fnstsw
mov
ficom
xor
test
inc
lods
repnz
pop
mov
fwait
pop
xlat
shl
adc
adc
and
xchg
or
fdiv
jmp
sbb
popa
div
cli
adc
push
mov
sahf
xchg
lods
in
(bad)
xor
fwait
out
ins
leave
push
fwait
not
cmps
ss
pop
fwait
addr16
je
or
mov
or
adc
loop
xor
mov
push
out
leave
mov
jge
stos
rcl
and
push
iret
and
dec
pop
mov
push
xchg
mov
cdq
lahf
out
pop
pop
dec
cmp
cli
ja
sub
push
lods
cmc
stc
dec
dec
or
(bad)
and
cmc
lock
(bad)
call
fwait
or
and
(bad)
mov
jb
mov
add
lea
push
cmp
xchg
pop
jne
mov
addr16
dec
xor
mov
adc
xchg
xchg
outs
xor
jnp
push
xchg
jl
and
jge
mov
push
sbb
lea
ffreep
mov
add
fmul
or
dec
sub
inc
lock
ss
lock
gs
(bad)
jno
fwait
cmc
jne
lock
stos
lds
jo
out
inc
mov
adc
and
jl
out
mov
mov
iret
sbb
jge
pushf
stos
aad
xor
dec
and
mov
shl
cld
in
jmp
and
pop
push
fs
stc
mov
lds
jl
sbb
push
cmp
mov
xchg
xor
and
mov
pop
push
enter
mov
arpl
sbb
repnz
mov
faddp
jge
mov
jp
call
xor
push
inc
sub
fcomp
mov
jae
mov
jge
mov
xchg
fbstp
outs
popa
mov
popf
and
jl
jmp
pop
je
pop
ins
int3
outs
in
addr16
inc
popf
xchg
and
push
sti
and
mov
repnz
leave
mov
or
daa
jns
pop
push
(bad)
aad
mov
jb
push
stos
inc
jnp
dec
inc
xchg
pushf
mov
dec
xor
gs
shl
fisub
or
sbb
xor
mov
mov
ret
inc
sbb
sub
fsubr
lock
shl
fucomp
inc
xor
jl
pop
pop
cmp
sub
inc
mov
mov
adc
icebp
dec
stos
pop
xchg
cmp
xchg
dec
push
shl
dec
mov
pushf
imul
ins
xor
pop
xor
sub
repnz
ins
js
sbb
add
inc
outs
cdq
push
aaa
xchg
lea
mov
mov
pop
pop
push
jmp
and
cmp
ret
or
mov
mov
cmp
mov
or
pusha
mov
fild
or
xchg
sub
or
in
das
jns
add
repnz
add
popa
xchg
(bad)
mov
jb
inc
fnstcw
push
xor
push
push
in
nop
les
and
dec
test
into
ja
dec
sti
mov
sub
jnp
data16
ins
loope
sub
mov
fwait
and
clc
add
rol
cmp
mov
cmp
mov
shl
pop
pop
sbb
ret
dec
inc
xor
daa
dec
xchg
cmp
rcr
inc
neg
add
icebp
cmp
jne
adc
mov
jne
ror
pop
jae
mov
pop
or
out
push
xchg
in
xchg
pop
shl
mov
and
cmp
test
jo
sbb
out
ja
push
or
mov
leave
jns
sub
and
sub
xchg
xor
rcl
inc
fdiv
pushf
dec
push
mov
pop
and
(bad)
je
push
xor
cmp
js
fbld
rol
inc
sub
sahf
loopne
mov
pop
push
jo
adc
cld
hlt
fs
mov
adc
aaa
and
dec
push
cs
lock
jge
test
mov
stc
jb
aam
lea
jno
fstp
adc
adc
sbb
aad
push
sub
rcl
cld
sbb
test
cmp
xor
cmc
sbb
in
mov
lock
adc
cwde
out
retf
in
test
push
pop
dec
mov
cdq
push
aas
mov
push
retf
mov
add
inc
dec
retf
repnz
jno
cmps
cli
dec
retf
sub
pop
mov
(bad)
pop
ins
sbb
outs
lock
cwde
xchg
xor
push
call
inc
int
add
int3
sti
test
xchg
mov
movs
popf
popf
push
lahf
sub
mov
mov
add
xchg
dec
cmp
addr16
jno
and
sahf
aas
(bad)
cmp
push
xchg
mov
inc
lods
leave
loop
sub
ss
mov
icebp
int3
jge
mov
mov
addr16
lock
dec
sub
mov
outs
retf
mov
iret
dec
(bad)
std
mov
sub
movs
mov
sub
mov
mov
call
fidivr
jne
loopne
cmps
stc
(bad)
adc
call
mov
cmp
add
ret
dec
pop
(bad)
cmp
inc
dec
shl
push
mov
std
mov
inc
int
mov
stos
pop
cmc
retf
mov
(bad)
iret
adc
or
sub
push
lea
loopne
(bad)
icebp
pop
(bad)
xchg
out
je
cmp
movs
inc
jp
add
icebp
fwait
int
mov
fucomi
adc
jmp
push
push
xlat
dec
shl
mov
jb
sbb
jnp
mov
jns
and
mov
mov
iret
add
mov
call
(bad)
or
pop
dec
push
push
pop
(bad)
jmp
shl
adc
sbb
inc
sti
or
sub
xchg
xlat
test
pop
pop
cmps
in
adc
cmp
popa
retf
movs
pop
add
add
lds
aad
call
cmp
sti
(bad)
xchg
inc
into
stos
mov
sahf
add
movs
pop
sbb
or
dec
or
jg
pop
mov
shr
mov
inc
sti
xchg
movs
jmp
xor
into
and
pop
xchg
mov
sar
(bad)
mov
pop
(bad)
mov
and
or
in
sub
pop
lods
retf
cmp
push
scas
mov
(bad)
sub
jp
mov
push
sbb
pop
(bad)
enter
xor
fs
in
pop
sbb
cli
lods
ret
ffreep
loopne
cmc
push
or
cmp
les
or
scas
xor
mov
bswap
pop
ret
shl
xor
inc
rcr
xor
sbb
mov
mov
or
es
in
add
(bad)
sti
xchg
repz
aam
jmp
inc
jnp
mov
jecxz
sbb
lock
adc
(bad)
jb
push
dec
push
sbb
jno
and
add
and
lahf
xchg
pop
mov
jmp
das
and
into
das
dec
aas
inc
loopne
(bad)
sbb
dec
es
ja
sbb
test
movs
loopne
gs
rcl
jge
fdivr
les
jb
fstp
std
jno
test
repz
or
out
outs
ss
je
mov
mov
push
mov
cmp
and
add
xchg
mov
sar
movs
scas
cmp
jo
cli
mov
stc
push
sub
xlat
cmp
fwait
mov
dec
cmp
mov
scas
or
inc
mov
inc
lds
xlat
outs
imul
pop
mov
push
sti
cli
sub
xor
and
mov
pop
adc
adc
push
mov
sub
cwde
mov
xlat
int3
xchg
imul
xchg
inc
add
adc
fwait
mov
mov
nop
call
cmps
pop
out
or
inc
test
inc
jns
lods
stos
jne
sub
inc
jecxz
and
adc
mov
out
shl
pop
leave
adc
sahf
jnp
(bad)
pop
adc
sub
(bad)
push
nop
sub
xchg
ins
mov
ret
adc
pop
sub
sub
enter
mov
out
dec
push
mov
jnp
(bad)
icebp
mov
retf
fwait
xchg
call
xchg
mov
push
mov
repz
mov
jmp
dec
movs
shr
mov
mov
sbb
bound
gs
push
inc
mul
jl
and
add
add
xchg
mov
sub
cmp
add
and
adc
inc
and
mov
mov
retf
or
mov
adc
mov
xor
in
in
int
aaa
push
and
mov
xor
sahf
add
pop
fisub
retf
popf
xlat
push
jmp
sub
das
sbb
dec
adc
inc
sub
xchg
mov
popa
push
out
(bad)
mov
cmp
leave
iret
sbb
xor
dec
pop
cmp
pusha
cmp
dec
inc
ds
push
test
xchg
in
jb
scas
loope
add
and
fnstsw
cmp
or
rcr
popa
sbb
push
stos
arpl
daa
(bad)
outs
outs
stos
stc
sbb
dec
ds
lods
sub
in
mov
pop
or
loope
retf
icebp
pop
int
inc
mov
scas
sbb
bound
lods
and
out
push
or
xor
mov
fidivr
pop
or
call
pop
cmp
out
cld
test
adc
mov
hlt
fwait
inc
(bad)
pop
fxch
jnp
in
cmp
dec
and
imul
jae
arpl
outs
push
sbb
add
xchg
shl
ret
mov
sbb
dec
cmp
rcl
cmp
mov
pop
stos
pop
ss
mov
jno
cld
xor
xor
mov
dec
mov
push
or
fstp
jnp
mov
cmp
and
movs
imul
mov
mov
jl
std
pop
xor
push
adc
in
mov
sti
test
shl
leave
jns
shl
into
pop
push
fnsetpm(287
push
and
adc
dec
push
cmp
lock
(bad)
sub
out
or
dec
dec
or
aad
pop
adc
dec
or
and
(bad)
pop
add
cmp
dec
inc
fcom
and
cmp
cmp
(bad)
in
pop
(bad)
adc
pop
ja
out
or
jnp
retf
call
or
add
sbb
jnp
out
repz
adc
mov
pmaxub
cli
push
pop
mov
ja
xchg
push
push
and
or
pushf
xchg
cmp
pop
(bad)
mov
popf
sbb
movs
jmp
adc
stos
sbb
out
scas
mov
xor
mov
sbb
in
addr16
sysret
fst
pop
retf
stc
mov
or
push
repz
outs
(bad)
mov
inc
cmp
or
sar
or
scas
aas
sahf
sbb
jno
cmp
xor
push
loope
xor
lahf
mov
mul
xchg
or
adc
mov
loop
xchg
mov
mov
inc
pop
neg
aas
lock
inc
jnp
ins
mov
pop
cli
and
push
(bad)
ins
xchg
fwait
dec
nop
push
mov
dec
lea
xchg
dec
loopne
jle
and
add
mov
xchg
je
hlt
test
outs
dec
test
mov
imul
mov
adc
mov
or
(bad)
mov
cli
jge
mov
not
xor
scas
sbb
inc
mov
adc
pushf
xchg
sub
test
and
mov
ret
xchg
in
adc
sub
push
cmp
pop
retf
fmul
retf
pop
loop
xchg
in
imul
call
xor
add
aaa
and
loopne
xchg
jo
call
movs
push
adc
loope
lods
div
jecxz
aad
movaps
xchg
xchg
push
xchg
mov
ins
dec
lock
pop
scas
dec
imul
and
imul
test
dec
mov
push
dec
imul
jae
in
repz
add
fisubr
daa
popa
outs
pop
pop
idiv
imul
push
retf
jg
out
sub
xor
mov
mov
loop
xchg
sti
mov
sub
xchg
jno
push
pusha
push
inc
mov
lahf
fwait
popf
mov
loopne
jne
pop
test
push
ins
jl
div
fstp
pop
adc
je
xchg
ins
gs
stos
jne
cmps
(bad)
rol
push
lock
adc
xor
jnp
inc
jb
out
fs
jmp
cmp
cli
enter
sbb
mov
mov
jg
arpl
push
cli
jno
mov
hlt
jbe
cld
pop
mul
add
fild
test
out
push
dec
push
in
test
rol
jo
xchg
adc
ret
xchg
mov
dec
fidivr
gs
sbb
push
push
cmp
pop
(bad)
or
or
mov
push
adc
adc
sub
loope
in
mov
outs
enter
push
ret
scas
mov
sbb
lods
(bad)
ror
not
fdiv
adc
call
push
ret
jmp
repz
mov
test
mov
sbb
push
(bad)
hlt
retf
stos
cs
rol
ret
lea
hlt
aad
mov
pop
retf
in
mov
fistp
xchg
sub
mov
add
shl
mov
or
jo
enter
outs
or
dec
sahf
sbb
cmpxchg
not
rcl
xchg
outs
test
loop
mov
loope
imul
mov
mov
sub
scas
push
cmp
and
xor
fbstp
pop
cld
(bad)
mov
sub
ss
out
repz
jg
cli
retf
add
sbb
xor
xor
push
xchg
shl
repnz
retf
ds
push
xlat
gs
push
aas
jo
mov
div
inc
mov
lea
xor
dec
push
sahf
int3
pop
(bad)
xchg
push
and
mov
(bad)
mov
add
out
and
mov
movs
cs
shl
aas
jns
outs
mov
inc
jg
sbb
scas
xor
add
into
gs
xchg
xchg
cmps
dec
clc
pop
rep
xchg
inc
xor
sub
loopne
sti
add
icebp
adc
dec
or
mov
jb
xchg
mov
dec
std
sahf
sbb
add
scas
dec
les
dec
cmc
enter
mov
inc
in
rol
inc
test
push
shl
sbb
call
xor
xchg
jmp
jmp
pop
dec
in
ja
pop
push
fwait
cmp
mov
add
in
fs
cli
and
jne
and
sar
pop
sbb
mov
and
shl
and
rol
push
fwait
stc
addr16
push
(bad)
pop
cmps
sti
addr16
mov
mov
push
retf
fwait
cmp
and
fcmove
scas
in
lock
mov
jge
cld
dec
(bad)
inc
call
stos
shl
inc
sub
pop
sar
sbb
xor
(bad)
jecxz
xor
jbe
(bad)
repz
dec
out
mov
or
jno
push
sub
mov
pminub
popf
sbb
movs
push
je
or
out
pop
ins
dec
jmp
fstp
in
loope
pop
dec
adc
cmp
add
push
push
fisub
add
ss
repz
lds
or
push
fsub
push
ror
xchg
fnstenv
clc
mov
mov
cli
(bad)
jge
xchg
and
cmps
push
std
pop
add
(bad)
jmp
out
pop
mov
pop
cmp
clc
int3
jl
xlat
push
cmps
jne
je
test
arpl
(bad)
or
xor
xor
fiadd
mov
sub
(bad)
and
lds
lods
jno
adc
mov
jnp
ret
imul
inc
sbb
fild
jge
dec
mov
dec
mov
(bad)
mov
dec
push
inc
call
ds
add
inc
push
sti
lds
xor
stos
dec
sbb
fwait
sub
xchg
shl
not
mov
dec
das
pop
mov
cld
(bad)
imul
mov
dec
mov
popf
mov
jge
add
dec
sbb
sub
pop
mov
pop
std
aaa
xchg
xchg
sbb
jmp
sbb
scas
loopne
inc
jns
das
dec
jae
sbb
push
sbb
sub
in
sbb
xlat
out
push
call
ficom
pop
fxch
iret
mov
in
jp
scas
loop
nop
leave
fisttp
xor
mov
jo
jb
addr16
outs
(bad)
loop
jae
mov
cmp
xor
stos
dec
dec
inc
mov
sbb
pop
cdq
jb
and
inc
mov
sbb
xchg
cmps
lock
xchg
sub
mov
and
xchg
push
xor
scas
ror
es
mov
out
lods
fcom
fimul
inc
xchg
xor
loope
je
sub
sub
(bad)
cwde
mov
retf
pop
mov
aad
dec
in
fbld
pop
push
call
mov
retf
inc
dec
sbb
mov
pop
jle
popa
inc
fsubr
fcmovnu
xor
fnsave
rol
inc
(bad)
mov
ins
jge
ficomp
movs
ss
outs
jp
and
jae
mov
lock
jecxz
lahf
dec
dec
inc
and
test
cmps
in
inc
mov
cmc
and
or
and
ffreep
mov
jo
outs
add
lahf
jbe
xor
dec
fs
xchg
mov
cmp
mov
sbb
or
mov
push
jecxz
cmp
and
xchg
dec
outs
mov
add
rcl
mov
mov
push
push
sar
gs
mov
cmps
call
xchg
(bad)
clc
pushf
lahf
cdq
fldl2e
and
mov
push
add
cs
push
sub
inc
outs
or
xchg
ret
jl
jns
cs
(bad)
pop
loope
pop
outs
imul
in
(bad)
movs
lods
xchg
pop
lds
jno
adc
jo
nop
inc
bound
dec
xchg
pushf
xchg
stos
or
rcr
loopne
cmp
hlt
inc
pop
xchg
test
std
mov
xor
jb
xchg
and
xor
nop
jnp
psrad
xor
inc
xchg
fbld
retf
inc
test
adc
add
fwait
test
(bad)
adc
rol
jnp
sub
push
xor
sub
sbb
push
enter
xchg
popf
jo
es
pushf
das
mov
pop
adc
add
mov
adc
sar
shl
arpl
imul
pusha
scas
lahf
mov
push
scas
imul
push
mov
lock
sbb
cmp
and
movs
les
sbb
ffree
mov
inc
and
out
call
sbb
stos
or
pusha
je
dec
icebp
jns
pusha
in
mov
sbb
add
cmp
and
pop
xchg
pop
aas
std
sbb
sub
inc
push
jns
xor
mov
mov
add
(bad)
stos
or
cwde
jne
pop
and
push
outs
(bad)
je
gs
popf
imul
pop
jecxz
test
in
cmc
loope
call
sub
xchg
inc
push
add
push
into
cmp
inc
pop
in
sbb
cmp
out
and
imul
jmp
push
add
sahf
xchg
sub
mov
push
test
pop
inc
cld
dec
out
dec
xor
cdq
das
aam
xchg
dec
cwde
in
fist
out
rol
mov
pop
ror
mul
jo
sub
test
cmp
and
pop
jns
lahf
aam
icebp
inc
dec
dec
sbb
xchg
mov
and
outs
out
(bad)
repz
pusha
ret
xor
outs
iret
or
fimul
mov
mov
repnz
sub
pop
cmps
mov
cli
inc
mov
ficomp
or
xor
loope
imul
push
dec
ins
fdivp
std
out
xadd
or
cmp
std
cmp
cdq
jmp
pop
jns
cmp
lds
in
mov
pop
xor
pop
jmp
sbb
pop
test
mov
xor
pop
ja
xchg
or
adc
cld
lds
xchg
sub
mov
sbb
sbb
inc
push
jecxz
jbe
test
hlt
and
out
mov
rol
mov
pop
(bad)
lods
std
add
js
adc
jp
inc
pop
cmp
xchg
fisttp
xchg
pop
mov
fwait
(bad)
mov
loop
cmps
(bad)
and
fsubr
not
and
mov
ss
out
mov
test
inc
neg
adc
add
inc
ins
fldcw
js
int3
nop
pushf
push
sbb
out
aas
push
aaa
imul
es
inc
xchg
add
test
sbb
dec
enter
nop
outs
jmp
jbe
sub
xchg
aad
jae
into
mov
mov
jp
push
dec
mov
jae
jmp
mov
fs
out
dec
xchg
inc
jb
cmp
bound
arpl
int
cmp
pop
xchg
or
or
adc
loop
xchg
mov
in
out
jae
iret
cmp
push
out
mov
out
mov
sbb
push
fisub
cld
imul
daa
fcmovbe
cmp
dec
adc
xchg
imul
pop
dec
adc
adc
mov
ins
(bad)
loopne
pusha
daa
mov
mov
add
pop
lea
pop
add
out
push
loope
dec
lds
loope
lds
movs
lea
out
out
mov
mov
(bad)
jmp
bound
add
xchg
xor
add
mov
(bad)
xchg
sub
mov
test
lods
jb
inc
sar
mov
jne
jecxz
dec
adc
cmp
movs
mov
cmp
gs
push
xchg
cwde
lods
xor
icebp
test
and
xor
jg
cmps
loopne
mov
inc
arpl
inc
int3
(bad)
ja
pop
popa
and
jo
cmp
scas
xor
or
mov
popa
sub
js
adc
loope
and
cwde
mov
and
xchg
jle
xor
aam
in
dec
in
dec
es
pop
mov
xor
test
cs
adc
data16
cmp
scas
mov
repnz
retf
in
xchg
clc
mov
sub
and
sbb
add
dec
mov
mov
dec
lahf
sbb
int
pop
test
jg
je
and
nop
inc
add
ins
adc
scas
stos
dec
cmp
jb
xor
call
outs
xchg
int
mov
mov
into
hlt
fimul
cmps
jb
mov
adc
js
repnz
sbb
nop
loopne
pop
cmc
mov
xchg
xor
xchg
cli
jb
mov
outs
xchg
mov
jp
push
add
out
or
cmp
adc
je
fidivr
and
retf
outs
add
add
(bad)
sbb
retf
sub
test
out
bound
js
xchg
sti
xor
test
jb
pop
xchg
pop
fs
(bad)
cmp
out
sbb
retf
in
fs
ret
mov
pop
sbb
aad
shl
xor
xchg
retf
ins
inc
lods
xor
out
push
lods
mov
jns
cmp
test
sub
adc
and
shr
mov
or
sahf
pop
out
mov
repnz
jns
cld
push
xor
mov
call
jmp
movs
push
mov
mov
sar
lods
mov
sahf
fpatan
jns
and
fcomp
call
xor
xchg
or
jmp
leave
mov
pushf
into
mov
xchg
cld
aam
ret
test
cli
or
test
(bad)
jge
xchg
pop
jno
add
nop
push
xor
xlat
xchg
mov
iret
inc
out
cmp
fmul
pushf
ror
mov
mov
xchg
pop
das
imul
push
mov
scas
(bad)
out
and
xchg
push
xchg
daa
push
cmp
mov
mov
pop
ins
and
sbb
jl
mov
inc
push
js
xchg
mov
out
mov
or
push
xor
data16
repz
and
mov
mov
xchg
pushf
stos
into
adc
movs
outs
dec
fxam
xchg
mov
cdq
jmp
outs
fcmovnbe
mov
popa
ins
xchg
fadd
dec
xchg
imul
ins
ins
data16
mov
and
jns
rcl
les
pop
out
in
call
movs
sub
lods
cmp
jnp
jecxz
es
push
push
fsubr
imul
adc
(bad)
aaa
clc
sub
icebp
and
(bad)
shl
movs
popf
repz
fistp
jns
and
jg
jl
loope
cmp
push
ror
cwde
inc
or
push
ret
mov
out
inc
pop
mov
pop
call
pop
ja
cmc
mov
mov
or
cmp
mov
inc
fldcw
or
and
adc
dec
stos
mov
adc
dec
test
mov
repnz
stc
add
out
bound
test
mov
lahf
pop
inc
leave
add
sbb
cmove
iret
sub
stos
sbb
cmps
ss
jmp
dec
or
xor
ins
icebp
xchg
push
adc
mov
pop
xor
out
dec
fdiv
pushf
in
or
leave
(bad)
gs
add
das
(bad)
movs
ja
pop
sub
or
call
hlt
inc
xchg
cld
adc
stos
mov
sub
jle
mov
loop
stos
jmp
leave
pop
sub
addr16
out
int
xor
ins
scas
ret
cmp
mov
sub
sbb
jno
xor
push
test
hlt
push
mov
fmul
or
pop
mov
cmp
jg
pop
mov
lods
and
cmp
scas
bound
jge
jp
sbb
cs
loop
xor
hlt
arpl
push
jae
dec
popa
lds
(bad)
and
mov
pop
sbb
mov
sbb
xor
lock
lock
jb
xchg
sbb
call
add
ror
xor
xchg
push
test
fild
ja
fnstcw
imul
shr
sub
add
push
adc
in
pop
mov
push
cmp
aad
and
jle
call
imul
mov
mov
out
pop
cld
mov
push
popf
pop
mov
or
adc
mov
das
cdq
mov
aam
mov
jo
add
and
mov
and
jle
lds
lods
adc
jge
idiv
jnp
int3
(bad)
mov
mov
jmp
mov
pop
inc
push
jg
mov
dec
mov
lock
ins
push
cs
cmp
cmp
inc
out
mov
xchg
add
lods
test
or
sbb
loop
call
call
scas
cmp
jno
fs
pop
shl
test
add
mov
sub
mov
mov
iret
gs
inc
mov
cld
mov
aam
sbb
sub
xor
sbb
push
nop
jae
imul
mov
cmc
sub
pop
inc
cmp
mov
inc
stos
(bad)
faddp
pop
cmp
lds
into
test
sbb
xor
pop
test
jnp
mov
xor
and
out
inc
push
idiv
imul
jl
push
into
cwde
jmp
out
push
adc
ficomp
inc
xor
add
ins
arpl
mov
dec
outs
fmul
push
mov
and
mov
jmp
cmp
pop
jno
outs
dec
adc
add
mov
xor
shl
test
jo
(bad)
daa
inc
lock
mov
push
ins
pushf
mov
push
mov
push
adc
scas
inc
push
adc
out
icebp
jae
jmp
mov
std
gs
cmp
or
fst
add
out
daa
pop
pop
retf
mov
dec
mov
pop
fsub
stc
mov
adc
pop
mov
retf
stc
adc
add
jno
loope
adc
cld
xchg
pop
push
cld
xchg
xchg
pop
or
dec
add
fld
and
(bad)
cmp
out
(bad)
mul
ins
js
imul
(bad)
sub
movs
pop
and
pop
jnp
shl
scas
shl
enter
scas
xor
jmp
mov
call
mov
add
jecxz
dec
or
int3
adc
dec
adc
retf
cmp
mov
mov
dec
pop
call
int
cwde
adc
add
jge
sbb
jecxz
dec
mov
aaa
pop
daa
mov
dec
test
mov
cmp
push
xchg
popa
xchg
call
add
in
inc
or
ja
pop
jns
clc
iret
sub
jno
pop
add
pusha
xor
add
jnp
inc
inc
or
and
xor
enter
out
daa
aaa
xchg
push
inc
mov
push
cmp
adc
push
shr
xor
xlat
lods
popf
or
(bad)
in
ds
inc
push
aam
ds
mov
cmp
jno
mov
push
xlat
jno
out
iret
adc
adc
test
(bad)
in
jmp
mov
mov
fbstp
xchg
(bad)
and
call
ret
(bad)
ficomp
xor
sbb
(bad)
test
movs
adc
test
and
lods
xlat
(bad)
mov
dec
neg
push
jmp
sub
sbb
outs
fstp
fadd
mov
fnstcw
mov
inc
jb
sar
jae
fs
rol
or
adc
push
ret
push
sub
imul
pop
fidiv
mov
int
inc
mov
sbb
jl
and
add
nop
movs
pop
retf
ins
sub
mov
mov
push
sbb
sbb
movs
(bad)
rol
idiv
int
add
or
fiadd
outs
push
popf
mov
sbb
or
mul
xchg
mov
in
test
cmp
cmp
mov
ins
sub
test
sub
lock
cmp
adc
adc
jmp
push
popf
aam
lods
stos
push
mov
mov
add
shr
xor
pop
jbe
xchg
mov
sbb
xchg
and
xlat
adc
jmp
(bad)
aas
and
push
mov
in
es
into
inc
mov
jl
pop
not
push
mov
mov
jnp
mov
shl
cli
mov
adc
in
jno
push
cs
ja
push
cmp
std
or
sahf
dec
xor
call
mov
movs
rcl
jecxz
jne
je
imul
pop
aad
in
cmp
sbb
inc
adc
sbb
dec
cmp
test
sbb
in
pop
mov
xchg
inc
mov
pop
or
shl
mov
outs
mov
push
inc
push
or
jg
mov
xor
movs
cwde
mul
cs
stos
and
loop
jo
jl
sbb
jb
mov
div
pop
sub
lock
cmc
in
jns
mov
test
inc
pop
sti
sti
add
(bad)
and
push
in
add
add
rcl
sbb
mov
shl
dec
in
xchg
js
xchg
fist
pop
cmp
sub
adc
fnsave
gs
shl
cli
shr
je
pop
inc
xchg
jg
popa
xchg
scas
and
and
adc
mov
dec
xchg
mov
leave
dec
enter
scas
xor
lods
(bad)
cwde
cs
add
xchg
movs
pusha
and
pop
and
adc
cmp
lock
aas
dec
(bad)
sub
xchg
xchg
sub
jbe
xlat
mov
sti
xlat
sub
movs
xor
mov
inc
xlat
mov
daa
and
or
daa
sbb
(bad)
adc
repnz
mov
pop
in
inc
adc
mov
arpl
sub
pop
cli
or
ret
loop
mov
add
mov
jno
sbb
fisttp
fisttp
mov
loopne
cmp
adc
add
stos
mov
bound
loopne
fnstcw
xchg
stc
sub
jl
xor
push
or
dec
cs
push
outs
add
icebp
sub
xor
jo
adc
sub
add
inc
jnp
sbb
sbb
es
(bad)
sub
cmp
sub
aaa
cmp
daa
cmp
retf
out
pop
cmp
test
mov
cwde
mov
jmp
sub
inc
cld
mov
push
mov
not
aas
add
call
mov
mov
pop
das
push
mov
add
das
rcl
aas
cmc
data16
cld
mov
or
and
add
sbb
xor
stos
mov
adc
pop
sbb
xor
cmp
icebp
mov
mov
sti
pop
jmp
jmp
idiv
jne
fcmovnu
add
pop
push
dec
and
push
sub
xor
sub
je
jnp
shr
mov
js
shl
mov
pop
movq
stos
and
mov
add
out
(bad)
adc
(bad)
test
test
cs
xor
jmp
repz
iret
pop
pushf
xchg
cmps
lds
sti
jo
adc
sbb
pop
jb
xor
and
pop
test
stos
sub
fistp
leave
fstp
lds
pop
inc
or
aam
xchg
repnz
sbb
lea
dec
sub
or
sub
inc
jb
loop
fs
rcr
(bad)
xlat
clc
aad
loopne
ret
stc
(bad)
mov
and
mov
push
mov
ds
lods
push
xlat
pop
call
repnz
sbb
lahf
dec
test
leave
repnz
pop
(bad)
sub
jmp
cli
push
idiv
jns
inc
ins
mov
lea
ror
xchg
push
jno
or
imul
into
lods
or
xor
outs
push
push
or
xor
jae
icebp
mov
and
fisttp
and
mov
push
stos
mov
adc
js
fcomip
out
add
mov
push
rcl
stos
ret
jno
sub
add
pop
and
(bad)
cli
in
inc
cmps
mov
outs
je
div
neg
cmp
popf
sbb
aas
into
adc
out
in
lea
test
or
les
and
add
mov
xchg
adc
cmps
and
sbb
leave
cmp
bnd
push
xchg
fbstp
fnstenv
inc
mov
shl
cld
and
shl
add
mov
add
sbb
fiadd
xchg
nop
push
push
std
mov
(bad)
retf
inc
add
xchg
jecxz
mov
sub
cdq
add
iret
scas
mov
and
pop
mov
xor
js
lods
fwait
into
repnz
loopne
repz
neg
fwait
xlat
dec
dec
aad
ja
mov
dec
dec
shr
stos
out
cmp
das
add
and
push
(bad)
jecxz
mov
dec
scas
int
test
fidivr
ret
in
or
shl
xchg
data16
call
idiv
push
cmps
pop
adc
sti
pop
push
adc
shl
and
cwde
fwait
mov
sub
or
push
add
lea
xor
aam
(bad)
push
inc
jb
push
dec
aas
cdq
mov
int
cli
inc
push
jne
mov
or
ins
dec
shl
add
inc
jecxz
ss
and
in
mov
pop
pop
in
adc
outs
test
add
inc
test
fs
shl
xor
mov
mov
mov
xchg
xchg
ins
inc
lock
mov
sti
inc
aas
push
and
sub
mov
jecxz
mov
inc
repnz
(bad)
mov
das
icebp
pop
or
push
shl
xchg
mov
inc
xchg
shl
ror
xchg
push
mov
repz
cmp
jmp
xor
stc
aad
call
mov
xchg
cld
loope
arpl
jnp
push
pop
out
mov
cmp
mov
lahf
xchg
clc
inc
adc
leave
inc
rol
dec
pop
das
shl
lods
jg
and
(bad)
ss
pop
adc
data16
mov
mov
cmp
add
mov
mov
dec
inc
jo
and
mov
pop
lahf
jae
mov
test
test
jl
(bad)
adc
mov
dec
js
in
jb
test
jae
dec
retf
clc
add
xor
clc
adc
(bad)
cmc
or
push
enter
mov
xchg
inc
inc
cwde
add
sbb
out
mov
lahf
clc
adc
xor
sub
push
mov
mov
enter
dec
add
je
or
mov
sti
jo
arpl
add
jo
into
inc
dec
mov
sub
dec
gs
js
icebp
push
cmp
dec
das
sub
hlt
inc
cwde
mov
mov
cli
repz
data16
rcl
in
cwde
and
pop
jecxz
sahf
sbb
inc
jle
mov
sar
and
mov
out
mov
ds
jae
pop
mov
les
cmps
mov
push
(bad)
cmc
ret
cmp
add
aad
scas
imul
and
ja
sub
(bad)
in
idiv
ins
mov
ror
dec
call
xor
repnz
movs
mov
cld
mov
pop
pop
dec
fcomp
ficomp
ror
(bad)
retf
movs
shl
ret
inc
and
cmp
inc
clc
mov
(bad)
loop
test
push
retf
pop
fstp
scas
pop
inc
or
xlat
jnp
adc
push
bnd
stos
popf
out
inc
jnp
ret
es
dec
icebp
aas
add
dec
cmp
ret
clc
pop
retf
pusha
sub
jg
lock
cwde
push
push
pop
inc
aad
xchg
not
sub
or
mov
clc
lods
neg
push
push
push
mov
jle
cmp
stos
jns
pop
enter
mov
or
cli
adc
fmul
push
mov
scas
push
and
sub
int
adc
xchg
mov
or
pop
mov
addr16
addr16
in
shl
push
pop
adc
aad
and
mov
ds
mov
add
jno
mov
dec
sub
sbb
repz
jnp
repnz
gs
scas
icebp
sbb
je
xchg
mov
xor
sub
scas
arpl
xchg
mov
push
ss
mov
push
rol
sub
mov
sbb
int3
adc
lods
mov
cs
std
push
sbb
push
xchg
push
dec
mov
mov
shl
je
dec
icebp
fisub
into
mov
test
inc
mov
push
lods
inc
jbe
jg
fs
mov
push
outs
cmp
jl
bound
dec
pop
popa
add
sub
in
mov
mov
adc
cmovg
jle
inc
jnp
fdivr
pop
and
idiv
cmp
push
and
fdivr
mov
aaa
leave
shr
pushf
and
es
xor
push
jg
fmul
jne
mov
nop
cs
xor
(bad)
sbb
adc
lea
pop
mov
scas
cmp
(bad)
out
xchg
(bad)
push
and
push
in
neg
adc
pop
jmp
je
lahf
stos
push
pusha
dec
pop
retf
jbe
adc
add
adc
push
addr16
test
lods
push
outs
into
jmp
push
or
cmps
jmp
jge
pop
xor
mov
ds
das
cmps
test
sbb
int3
xchg
add
sbb
mov
std
inc
lds
je
xchg
out
fdiv
es
sar
mov
pop
and
lds
cbw
mov
mov
mov
dec
or
cli
pop
sbb
mov
jbe
mov
imul
mov
sbb
cld
mov
push
pop
pop
mov
add
dec
mov
hlt
sbb
sbb
ficomp
mov
daa
or
fbld
lods
out
xchg
fnsave
sbb
ins
out
inc
rcl
mov
mov
(bad)
mov
fmul
jecxz
sub
cli
jae
(bad)
jle
adc
sbb
pop
mov
pop
inc
(bad)
int
dec
inc
mov
push
xor
dec
fs
xchg
mov
push
mov
loop
xor
jbe
push
imul
push
push
fwait
loope
fcmovu
or
ret
jbe
icebp
(bad)
popa
adc
scas
xor
loopne
sub
inc
cdq
mov
jbe
repz
mov
in
jg
xchg
xchg
into
push
fld
add
push
jb
sub
add
mov
jl
jecxz
cmp
js
push
adc
scas
jecxz
push
mov
cmp
and
jno
jne
pop
out
or
data16
lock
mov
in
jecxz
jecxz
icebp
add
aas
pop
iret
sub
mov
xchg
addr16
inc
add
adc
xchg
in
iret
pop
lea
adc
fstp
daa
jg
jl
imul
(bad)
outs
repz
xor
hlt
stos
shr
sbb
fisubr
cli
clc
shl
outs
scas
mov
push
iret
cmc
mov
aam
shr
mov
add
sub
xchg
add
lds
fisttp
mov
fwait
adc
push
cmp
les
js
nop
icebp
sub
iret
test
xchg
mov
dec
aas
mov
hlt
add
sub
xchg
or
and
sub
and
xchg
xchg
das
and
dec
sub
popf
pop
out
and
mov
call
and
inc
aas
mov
(bad)
aas
xchg
jae
cli
xchg
fsubr
(bad)
push
jno
(bad)
adc
pop
push
(bad)
sub
mov
mov
(bad)
cmps
popf
and
mov
and
jb
xchg
add
mov
xchg
inc
stos
inc
in
dec
jbe
xchg
push
loopne
mov
and
ins
mov
jp
jo
jp
sbb
jl
mov
inc
push
adc
push
pusha
fsubr
push
xchg
mov
cmc
bound
call
dec
mov
iret
or
dec
outs
aaa
clc
call
mov
push
fiadd
dec
adc
pop
inc
mov
shl
sbb
push
je
and
add
gs
popf
out
int
inc
outs
rcr
xor
jmp
jmp
jns
dec
mov
xchg
div
lea
pusha
jne
fwait
pushf
stc
pop
ja
scas
repnz
js
jp
xor
sub
ds
xchg
mov
jg
pop
je
out
repnz
push
repnz
mov
xor
popf
push
mov
xchg
ror
push
not
add
or
mov
jnp
out
es
sub
sbb
repz
add
inc
fcomp
inc
(bad)
push
xor
movups
ret
jbe
mov
jl
iret
push
cmp
mov
loopne
add
popf
das
sub
inc
push
into
or
jmp
xor
pop
inc
xchg
out
push
das
in
lock
adc
xor
mov
ret
icebp
jnp
push
adc
xchg
fadd
sti
pop
xchg
xchg
jmp
in
lock
xchg
outs
mov
inc
mov
mov
adc
sub
fdivr
push
fwait
pop
add
dec
dec
dec
popa
add
and
out
push
push
push
xor
push
sahf
test
call
fnstcw
push
adc
(bad)
cld
adc
fstp
out
push
jbe
adc
jl
scas
mov
or
or
xor
cmc
xor
add
pop
sub
add
fsubr
cdq
lahf
(bad)
inc
fstp
or
(bad)
lods
xor
in
daa
fcomp
jae
mov
push
cmp
aas
adc
adc
sar
add
iret
or
out
lock
pop
fistp
add
es
vcmppd
mov
bound
push
mov
in
lock
pop
(bad)
repz
dec
in
add
popa
dec
lods
push
add
mov
mov
jle
cwde
push
and
(bad)
jne
jl
inc
inc
enter
inc
fcomp
and
cmp
cmovb
inc
rcr
pusha
sbb
jmp
xor
push
sub
ins
xor
fistp
pop
daa
sub
jmp
cs
ret
push
ds
fnstsw
int3
(bad)
jp
mov
ins
sti
inc
inc
sbb
inc
rol
arpl
addr16
in
bound
repnz
cmp
loopne
movs
sahf
inc
dec
sbb
mov
das
jecxz
out
popf
sbb
imul
sti
push
add
outs
int
add
jbe
xlat
pop
into
loopne
test
inc
mov
xchg
arpl
ins
icebp
inc
inc
add
sti
ret
dec
mov
mov
push
push
push
cld
setbe
les
cld
leave
jns
in
(bad)
popf
sbb
and
sub
(bad)
ins
iret
adc
inc
(bad)
xchg
pop
scas
imul
js
add
aas
cmp
xor
int3
mov
xchg
inc
mov
jge
dec
popf
cmc
(bad)
in
arpl
lds
aad
jmp
push
push
and
sti
lahf
lods
mov
sahf
mov
push
ffreep
inc
mov
and
mov
stc
cmp
push
call
mov
push
or
xchg
dec
xchg
es
call
and
sti
cmp
jmp
movs
sub
pop
xor
push
sbb
into
sbb
mov
add
sub
add
into
int
sbb
fwait
jp
inc
out
das
sbb
ret
sahf
into
push
and
lahf
jge
inc
and
xchg
xor
int3
repnz
shl
sub
call
in
fiadd
ret
(bad)
ret
xor
inc
outs
mov
(bad)
adc
xchg
sbb
(bad)
add
fistp
push
inc
xor
ror
ret
fbld
stc
push
test
xchg
mov
les
push
ja
mov
hlt
mov
scas
mov
data16
mov
push
add
jmp
les
sbb
stos
cmp
dec
cwde
(bad)
loopne
push
push
cli
jae
lods
mov
ficom
fst
sbb
push
into
push
enter
pop
aad
mov
ins
inc
inc
pop
cmp
fs
and
bound
xor
movs
mov
repz
int
retf
fwait
xchg
das
jne
mov
pop
xchg
icebp
jmp
mov
jnp
xor
inc
push
sub
sub
loop
jmp
out
icebp
sub
ds
mov
mov
popf
push
dec
mov
arpl
fldenv
sbb
and
test
ret
mov
out
iret
pop
(bad)
ficomp
sar
dec
unpcklps
cdq
dec
and
and
cmp
popf
retf
cmps
adc
push
or
push
cdq
mov
sub
loopne
xor
jno
sbb
jge
ins
pop
in
xchg
enter
xlat
jbe
jmp
push
inc
inc
jno
pushf
pop
nop
mov
rcr
jg
(bad)
jecxz
outs
mov
cs
jno
jae
dec
xor
and
jne
(bad)
cmps
adc
mov
mov
(bad)
gs
dec
loop
adc
jae
ficomp
sbb
jae
jge
or
cld
jbe
xor
in
or
dec
or
push
shr
rol
add
in
dec
retf
loop
cmp
fisub
dec
push
xchg
jle
jmp
sbb
pop
sub
sahf
mov
dec
pop
ret
adc
push
mov
lds
fdivr
out
mov
(bad)
pop
or
dec
fisub
outs
(bad)
pop
push
stos
inc
jae
std
shr
sub
mov
mov
ins
dec
add
inc
(bad)
(bad)
ret
dec
xchg
cmp
pop
push
(bad)
mov
sub
pop
and
aad
pop
outs
mov
imul
mov
cld
fild
dec
addr16
ds
pop
inc
mov
test
xchg
aas
test
arpl
add
imul
jmp
std
dec
push
mov
fs
stc
je
pop
gs
fsubr
sbb
sbb
pop
ins
int3
test
xlat
mov
aad
into
xchg
jmp
test
es
cld
and
push
(bad)
mov
ins
cmp
pop
mov
dec
inc
or
mov
jp
mov
sar
test
loop
pop
cmp
xor
mov
inc
adc
pop
adc
sbb
mov
jge
xor
adc
jae
cmp
xor
xlat
out
xor
fnstsw
or
mov
and
xchg
test
and
push
mov
xchg
xchg
dec
and
test
outs
iret
mov
popf
test
ror
in
fdivrp
scas
psllw
mov
pop
or
cmc
cmp
cmc
mov
stc
dec
cli
mov
hlt
rcl
das
xor
pop
rol
and
mov
dec
inc
pop
popa
daa
test
out
dec
add
mov
fisubr
sub
sar
cmp
and
enter
mov
add
aam
fidivr
cmp
imul
sahf
mov
sub
push
xchg
scas
outs
sbb
imul
mov
dec
rcr
push
push
in
lahf
cmps
icebp
xchg
div
scas
push
sub
mov
psubusw
(bad)
sbb
stc
repz
cmp
xor
arpl
mov
repz
lods
movq
jmp
imul
stos
inc
add
pop
scas
xor
bound
stos
adc
xor
loope
xor
mov
fimul
out
mov
add
xor
push
pushf
loope
call
lock
xchg
sar
clc
popa
outs
cld
jmp
mov
popf
popf
je
retf
dec
lods
out
pop
push
cmp
cmc
jmp
ins
inc
xchg
adc
ins
dec
data16
and
lods
imul
test
push
fstp
push
sub
repz
das
push
stc
je
lods
adc
pusha
mov
mov
cmps
and
push
aas
shl
fldenv
cld
inc
sub
push
or
or
ins
bswap
pop
les
(bad)
ss
scas
or
and
jle
dec
xchg
pop
push
faddp
int3
cmps
jmp
mov
push
mov
aaa
retf
stos
fistp
ins
add
xor
cmp
mov
xchg
test
shr
lock
cmp
jne
retf
nop
add
daa
test
leave
xchg
repnz
dec
jp
(bad)
push
xor
jo
inc
out
inc
(bad)
jnp
ror
ja
mov
jno
dec
mov
out
mov
cmp
cmc
sbb
retf
shr
pop
outs
setbe
mov
push
push
xchg
mov
test
cmps
jg
pushf
popa
inc
shl
pop
out
bnd
mov
jmp
ffree
ins
add
leave
movs
mov
(bad)
bound
lods
test
adc
ret
mov
jmp
pop
mov
and
mov
scas
fstp
fld
pop
test
xchg
aam
cmps
jns
inc
or
cmp
xchg
inc
loope
jmp
shr
jb
and
cmc
arpl
and
xor
jmp
cwde
mov
mov
nop
push
fcom
lahf
pop
or
cmps
cmp
xlat
lods
push
add
lods
out
mov
inc
or
stos
inc
fadd
jae
xlat
pop
inc
sbb
vmwrite
div
xor
xchg
das
add
das
nop
pop
mov
out
(bad)
sub
(bad)
iret
and
inc
jo
movs
in
data16
lahf
ins
jmp
jge
movs
xchg
xlat
mov
dec
jmp
js
xor
sub
or
sub
repnz
leave
mov
test
xor
call
out
xchg
and
add
pop
addr16
dec
mov
push
push
cdq
ror
pop
sahf
mov
and
cmp
jbe
push
nop
je
sub
xor
inc
or
mov
sub
jb
push
stos
jne
stc
sub
jp
std
imul
add
mov
es
xor
mov
jl
inc
push
jbe
xchg
dec
arpl
xor
pop
xchg
lea
xchg
adc
mov
cmps
imul
int3
xor
sbb
dec
or
jge
push
or
add
dec
jo
into
dec
pop
pop
jl
xchg
push
pop
adc
pop
mov
push
outs
pop
mov
push
add
lahf
mov
jg
jle
add
lock
push
sub
mov
aas
push
inc
push
or
sahf
mov
les
xchg
dec
test
movs
test
jg
test
pop
mov
xchg
fsub
dec
popa
arpl
xor
ret
stc
mov
and
jecxz
(bad)
data16
and
inc
jl
push
ins
xor
or
cld
mov
adc
test
push
mov
ss
jg
pusha
sub
int
sub
pusha
sbb
and
imul
or
mov
or
mov
pop
dec
inc
arpl
mov
mov
and
retf
in
jne
jp
inc
ins
pop
pop
xlat
dec
xchg
in
xchg
cmps
or
fsub
push
ret
pop
repnz
adc
cmps
nop
add
mov
jne
sbb
jns
lods
std
retf
pop
pop
je
inc
lds
mov
popa
sub
sub
xchg
push
jmp
pop
push
dec
jbe
ss
aaa
scas
das
outs
popf
cli
daa
mov
loop
jl
mov
fwait
hlt
retf
mov
aaa
jne
sbb
movs
mov
loope
pop
sbb
xchg
jae
xor
stc
fs
jmp
cs
or
dec
out
add
fisttp
stos
add
jle
test
jl
call
mov
sub
pop
add
std
or
out
jl
(bad)
xchg
imul
arpl
repz
mov
pop
(bad)
cld
ja
lea
fwait
mov
sbb
push
outs
fist
jp
xchg
test
gs
int
scas
mov
(bad)
jbe
xor
mov
data16
sbb
mov
jmp
push
fwait
gs
jmp
jle
mov
movs
sbb
dec
scas
call
je
shl
and
retf
out
and
repz
push
cmc
lds
sub
push
div
jne
dec
push
out
mov
sbb
out
popa
data16
mov
scas
mov
pusha
sar
shl
pop
sub
xchg
sub
and
int3
mov
sbb
in
mov
push
scas
mov
sahf
add
mov
scas
pop
cli
mov
mov
cmp
mov
(bad)
nop
jge
pop
adc
ins
adc
bound
daa
pop
pop
(bad)
(bad)
aad
rol
pop
sbb
sub
pop
lahf
cmps
ret
(bad)
pop
and
adc
leave
icebp
rcl
data16
xchg
retf
out
pop
out
iret
cli
jbe
test
std
sahf
adc
test
sub
test
aad
cli
add
es
or
stc
inc
mov
scas
loope
pop
push
cs
fsubr
xchg
les
inc
jns
ds
retf
sbb
jbe
iret
les
xor
aam
(bad)
loop
jno
inc
out
xchg
inc
ins
mov
mov
adc
mov
sub
retf
cmps
push
dec
xchg
imul
cmp
add
jp
outs
inc
in
sub
cmp
sub
push
call
aam
and
mov
sub
(bad)
fsubp
jecxz
jl
sub
sub
pop
cmp
(bad)
jg
sub
mov
es
and
lods
add
test
aaa
push
arpl
dec
mov
ds
repz
add
mov
and
ja
dec
pop
outs
repz
mov
scas
hlt
sub
ret
sub
sub
jmp
sti
inc
push
into
call
add
xor
(bad)
xchg
mov
arpl
sbb
cmp
xchg
jp
mov
aad
adc
test
pop
jne
xchg
xchg
pop
inc
ja
fmul
in
and
call
fwait
jecxz
ds
(bad)
les
mov
sbb
out
clc
pop
mov
adc
xchg
in
add
loopne
push
dec
pushf
jg
jae
aad
cmp
sar
inc
rcl
cmps
sbb
sub
in
push
or
jmp
(bad)
std
inc
fwait
dec
fs
sbb
(bad)
sbb
mov
jae
mov
add
pop
pop
pusha
sub
aad
jl
inc
jb
outs
cs
pop
js
aad
xor
add
adc
and
mov
lahf
loope
mov
push
out
mov
xor
mov
jo
test
lods
pop
cli
mov
in
mov
xchg
pop
xchg
movs
sbb
xchg
add
mov
data16
sbb
mov
jmp
clc
and
dec
movs
mov
add
mov
sub
xchg
inc
add
sub
test
mov
retf
xor
retf
mov
setb
jno
sub
inc
adc
pop
jle
push
jae
jge
outs
sbb
les
fbld
sbb
inc
lock
cmp
add
iret
fstp
fld
mov
call
cmps
scas
push
xor
add
sahf
nop
into
ret
scas
daa
int
test
and
dec
cmp
(bad)
push
inc
xchg
jns
clc
mov
and
in
sbb
imul
mov
cdq
mov
push
or
fsubr
jmp
sub
imul
int
add
mov
or
inc
shl
pop
clc
push
push
popf
out
lock
cmp
and
xor
je
out
pop
dec
mov
in
mov
shr
mov
pushf
jo
adc
adc
inc
push
mov
sar
push
test
das
xlat
test
(bad)
stc
jmp
or
jbe
cmp
and
push
mov
jbe
arpl
iret
adc
push
adc
jl
sbb
and
dec
jmp
lods
push
adc
cmp
mov
lahf
xor
mov
mov
mov
sahf
(bad)
leave
sub
out
scas
repnz
xchg
xchg
jb
mov
popa
jne
jo
call
or
jg
out
ins
xor
shr
es
movs
sbb
push
add
imul
pop
pop
add
rcl
shl
iret
push
pop
inc
rol
and
push
sub
xchg
xor
bound
mov
in
repnz
inc
adc
jle
xchg
aam
inc
xor
mov
xor
mov
icebp
sub
push
(bad)
and
gs
add
fcmove
pop
fild
mov
mov
ficom
loop
and
into
(bad)
sbb
push
push
mov
jns
add
(bad)
dec
dec
jge
mov
xlat
aaa
frstor
pop
xchg
ins
xchg
sub
repnz
test
sub
test
mov
add
xchg
imul
jno
inc
sub
cdq
xor
ja
pop
fdiv
cs
clc
cmp
or
push
mov
jb
in
out
outs
shl
shr
push
enter
add
and
gs
adc
xchg
mov
shl
mov
retf
inc
repz
dec
(bad)
jbe
in
cmc
jae
test
inc
(bad)
jg
xchg
cmp
adc
ret
ds
sbb
push
sub
cmps
jnp
push
mov
inc
xlat
add
inc
and
mov
fstp
mov
add
xchg
mov
sub
jne
sub
in
scas
sbb
add
popf
add
movntps
mov
repz
mov
pop
ficom
inc
lods
loop
mov
pop
out
cld
push
ret
sbb
iret
dec
scas
mov
bound
add
push
rcl
sar
rep
fsub
mov
jns
loope
push
into
cmp
cmp
cmc
call
not
cmps
mov
jno
inc
test
sbb
fsub
sbb
cmps
mov
arpl
adc
and
lods
cmp
mov
arpl
inc
mov
mov
xor
js
and
lahf
mul
pushf
adc
into
das
add
adc
mov
pop
in
scas
sub
pop
mov
push
bound
add
xor
cmp
xchg
cdq
xor
and
cmc
adc
test
xchg
scas
jp
pop
cmp
in
scas
lahf
push
pop
outs
cmp
cmps
inc
hlt
lods
shr
add
inc
pop
xor
sahf
(bad)
xchg
fistp
add
dec
adc
aaa
int3
icebp
xchg
pop
lods
jmp
in
inc
movs
stc
push
movs
sub
fiadd
sbb
and
icebp
icebp
sub
mov
xor
aad
add
add
enter
gs
call
jnp
sub
sbb
xchg
stos
into
test
mov
xor
js
std
inc
adc
hlt
cs
mov
pop
jle
adc
inc
pop
mov
fld
outs
mov
ja
fadd
sub
cmp
push
call
or
ds
inc
sub
sub
xchg
gs
push
adc
inc
dec
pop
and
ins
ret
repz
repnz
int3
shl
jmp
push
out
lods
sbb
scas
pop
outs
jge
pop
es
pop
pop
daa
retf
mov
ins
xor
pop
leave
sbb
cmc
cmc
cmova
rcl
push
and
mov
xchg
mov
int3
dec
test
pusha
or
push
lock
add
cmp
adc
ss
push
pop
jb
(bad)
mov
fld
mov
inc
pop
inc
pop
xchg
(bad)
aam
sti
and
mov
in
mov
xchg
inc
aas
mov
rol
inc
repnz
stc
lea
dec
in
daa
push
pusha
gs
add
imul
call
mov
xor
pop
cmc
loopne
sti
cli
fsub
adc
jle
lods
mov
push
mov
sub
adc
scas
adc
jmp
pop
or
loopne
xchg
jbe
popf
std
test
in
add
arpl
fadd
mov
pop
inc
sahf
mov
ret
div
std
push
add
push
sub
enter
out
shr
(bad)
fsub
sahf
mov
pop
cmp
and
add
pop
dec
rcr
mov
xor
inc
mov
rcr
inc
mov
jo
xor
pop
xchg
xchg
xchg
in
sbb
dec
and
cli
sub
stos
pop
das
data16
pop
fstp
jo
ins
mov
xchg
sub
cmp
call
(bad)
lods
add
rcr
sub
(bad)
rol
inc
int
xchg
cmps
loop
popa
popa
xchg
aad
cmp
or
add
sub
jb
mov
sub
add
sbb
pusha
clc
fcomp
sar
push
std
jmp
cmp
les
pop
pextrw
lea
cmp
mov
dec
mov
stc
lea
sub
sub
mov
retf
inc
jg
jg
out
ds
scas
xchg
je
push
mov
mov
and
cmps
arpl
xchg
adc
clc
and
mov
mov
imul
cmc
in
sbb
xor
rcl
in
scas
pop
mov
mov
popa
pop
jnp
adc
stos
dec
sub
out
lods
call
mov
mov
mov
jmp
mov
adc
pop
cwde
mov
jmp
loope
call
int
and
call
xor
pop
xchg
mov
or
lock
bound
sub
sub
int3
push
xor
daa
or
xor
test
push
jo
(bad)
icebp
pop
adc
mov
repz
mov
add
sub
daa
add
adc
es
add
jns
jbe
lods
jge
hlt
repnz
jmp
mov
jmp
push
xor
adc
retf
fcomp
add
cwde
cdq
dec
ror
(bad)
test
out
pop
mov
or
xchg
ins
rcr
mov
sub
inc
add
inc
jle
pop
add
movs
shl
loopne
sub
shl
push
cmp
sar
xor
lock
call
dec
push
in
push
data16
mov
or
and
xor
jecxz
cld
ins
imul
bnd
call
movs
and
xchg
dec
add
jecxz
sbb
adc
jle
mov
jnp
cmp
dec
ja
fild
loope
mov
popa
shl
cmp
clc
mov
push
inc
pusha
sbb
jns
shr
or
fwait
je
and
call
daa
cdq
test
mov
lock
rol
push
sub
mov
dec
dec
aam
cwde
cmp
test
jb
icebp
ret
mov
dec
imul
outs
mov
sub
sub
mov
fbstp
xchg
inc
nop
jge
push
or
push
loop
mov
dec
pop
and
sbb
jns
jl
push
call
pop
icebp
adc
(bad)
mov
out
adc
js
call
bnd
loopne
add
loopne
(bad)
push
out
iret
mov
mov
push
rcr
add
out
je
les
int3
xchg
jmp
jl
cmps
jp
shl
in
in
sbb
xor
push
or
and
leave
push
hlt
mov
jb
push
sbb
add
adc
xor
mov
adc
popf
sub
pusha
mov
push
xchg
fist
add
xor
cld
scas
hlt
xor
(bad)
in
or
mov
int3
xchg
mov
sub
dec
loop
jmp
fwait
retf
stc
mov
or
ins
dec
add
sbb
mov
or
dec
daa
xchg
sbb
mov
adc
out
daa
push
scas
pop
cmp
xchg
int
xor
mov
push
sbb
xchg
dec
int
jmp
outs
jb
mov
and
ret
unpcklps
fwait
arpl
dec
mov
ds
pop
movs
sahf
ss
pushf
ds
cwde
gs
cmp
cmp
sub
push
push
fwait
adc
sbb
dec
pushf
test
sbb
inc
out
inc
mov
xchg
das
or
pop
cmp
int3
cli
fst
mov
cmps
xor
adc
adc
lods
stos
cld
outs
sub
cmp
sbb
(bad)
fimul
cld
cmp
and
push
pop
lods
cmps
cmps
je
fsubr
arpl
hlt
jp
punpckhwd
sub
mov
fild
sysret
adc
jb
repnz
xor
arpl
out
aaa
lods
mov
and
adc
shl
add
cmp
(bad)
pop
in
sub
cmps
xchg
clc
mov
(bad)
not
js
inc
jmp
and
sbb
into
dec
adc
pushf
pop
jb
pop
mov
in
inc
scas
scas
jae
mov
enter
inc
mov
mul
lods
lods
cmps
sub
xchg
mov
fs
mul
pusha
mov
mov
push
pop
scas
sub
or
fist
cmps
and
adc
ds
mov
shr
call
int3
and
pop
fisub
int
cdq
pusha
es
mov
outs
and
xchg
push
pop
and
inc
inc
mov
nop
sbb
and
mov
cmps
jge
dec
dec
je
sub
jns
cld
pop
sbb
pop
adc
icebp
inc
push
xor
xchg
adc
(bad)
xor
dec
test
repz
adc
es
pop
inc
xchg
int
in
inc
int3
es
jle
nop
mov
xor
imul
out
jge
aam
shl
not
push
into
push
add
xchg
inc
punpckhdq
outs
fldlg2
jge
repz
jns
inc
in
dec
int3
hlt
ret
mov
gs
pop
inc
leavew
scas
xchg
mov
test
xlat
mov
cwde
add
or
jge
fwait
and
stos
out
test
jmp
in
sar
cmps
pop
out
pop
cmc
das
imul
xor
and
out
mov
aad
sub
stc
(bad)
sbb
and
push
adc
addr16
nop
push
mov
test
nop
into
xchg
pushf
push
jae
xchg
xchg
push
(bad)
and
or
mov
pop
(bad)
mov
inc
sbb
mov
and
pop
rol
push
jl
rcr
and
mov
stos
sbb
in
enter
inc
scas
inc
mov
es
or
xor
mov
inc
les
sbb
or
jecxz
(bad)
adc
cmp
or
lods
push
mov
ja
mov
popa
hlt
dec
push
popa
mov
mov
push
push
sahf
push
add
out
scas
mov
cmps
or
mov
add
test
xor
mov
dec
(bad)
cmp
lods
rol
sub
ins
mov
or
sbb
dec
dec
rol
push
and
or
xchg
cmovne
cld
sbb
dec
push
cwde
and
cld
loop
xchg
sub
test
ret
(bad)
or
call
arpl
fcom
jg
add
imul
fdiv
mov
gs
int
xchg
jmp
pop
outs
call
mov
and
xor
add
lea
adc
mov
xor
lea
in
mov
xor
dec
add
xor
test
(bad)
js
xchg
cld
setg
neg
sub
int
jmp
(bad)
jmp
and
in
ret
xchg
cs
mov
into
xchg
mov
adc
test
xchg
cwde
push
cdq
or
sbb
retf
mov
outs
aaa
cmps
push
jp
daa
cmp
test
aas
in
jge
jp
cld
xor
or
int
cmp
mov
sub
shl
leave
scas
xor
fisub
xchg
gs
xchg
lea
xchg
retf
lea
stos
dec
and
push
sbb
out
jns
daa
mov
jmp
pop
mov
inc
adc
mov
lea
xchg
arpl
mov
push
cmp
jns
jecxz
lods
repnz
out
and
jmp
int3
mov
inc
lds
aam
pop
cmps
bswap
xchg
adc
xor
dec
sbb
pop
lea
loop
movs
stos
cmp
(bad)
lock
dec
jp
xchg
(bad)
jmp
mov
dec
repz
add
xchg
mov
pop
pop
adc
movs
add
or
cmps
xor
and
gs
inc
add
push
cmp
int3
jecxz
adc
(bad)
ins
enter
(bad)
pop
daa
out
gs
call
cmp
and
rcl
out
frstor
jle
jle
cmc
out
pop
leave
movs
loopne
sub
xor
jmp
adc
arpl
repz
aas
outs
mov
dec
xchg
pop
mov
sti
(bad)
ins
ja
add
push
and
mov
cmp
and
xor
xchg
dec
mov
in
(bad)
out
in
scas
sub
pushf
je
xchg
jae
clc
les
jae
and
sbb
loop
jb
retf
in
mov
mov
push
lea
cdq
fldcw
and
setae
cmp
fidiv
in
stc
lods
ret
adc
out
lock
sbb
pop
xchg
add
jle
xor
rol
pop
mov
push
mov
mov
pusha
add
push
repnz
pop
call
sbb
addr16
mov
rcl
xor
loop
jmp
sbb
push
popa
int
daa
mov
or
mov
ret
or
popf
jo
mov
das
inc
lock
(bad)
jnp
mov
xchg
mov
mov
pop
fwait
mov
mov
int
fld
push
lea
add
dec
xchg
mov
push
jb
(bad)
jl
xchg
sbb
add
iret
pop
loop
aad
cmp
movs
out
cmp
cdq
mov
mov
add
xor
or
mov
jg
inc
xchg
outs
xchg
int3
and
push
dec
jg
push
fisubr
mov
jecxz
in
bound
mov
xchg
jne
xor
out
mov
adc
push
fs
xor
movs
dec
fst
jnp
shr
inc
adc
mov
mov
inc
js
mov
mov
imul
dec
push
xchg
or
xor
mov
aad
lods
dec
pop
pop
jle
push
inc
mov
cmp
add
jae
or
fst
push
ss
cmps
sti
mov
(bad)
call
test
mov
mov
out
scas
xor
stc
ret
push
cmp
cmp
pop
in
or
pusha
push
inc
cmp
shl
scas
cmp
lods
loop
xchg
or
push
and
pop
jecxz
jnp
lea
shr
inc
dec
test
(bad)
sub
and
or
retf
cmp
rcr
test
mov
loop
fcmovnu
adc
jg
cld
sbb
call
arpl
sbb
pop
mov
jne
repz
mov
(bad)
repz
mov
pop
inc
retf
out
nop
movs
push
dec
ror
sub
test
sbb
lods
or
push
mov
xchg
jmp
jns
fwait
enter
mov
ins
mov
cli
jno
je
inc
loopne
jmp
(bad)
arpl
lds
idiv
xchg
rcr
clc
jmp
add
dec
cli
(bad)
jno
jne
pop
push
sbb
jl
out
int3
lea
addr16
outs
adc
frstor
fcom
repnz
and
fst
mov
ds
push
cmp
jge
xor
repz
sub
adc
in
sbb
mov
add
push
imul
ins
jns
inc
xchg
out
mov
in
mov
cmp
daa
ret
mov
pusha
ss
sbb
xor
ja
popf
cmps
clc
sub
xor
mov
or
stc
das
or
sbb
stos
(bad)
mov
(bad)
aad
mov
call
imul
and
adc
sbb
jnp
or
push
and
arpl
hlt
jge
fld
imul
scas
push
mov
cmp
daa
aad
lahf
xlat
mov
mov
xchg
or
enter
push
push
cmc
leave
xchg
mov
jp
in
les
in
mov
mov
lea
scas
mov
call
jmp
sbb
das
lock
ja
jg
aam
push
shr
mov
out
mov
sub
sub
xchg
push
and
leave
cmp
jb
mov
xchg
shl
out
pop
mov
imul
xor
lock
in
test
loop
(bad)
in
(bad)
mov
repz
loopne
aam
test
lods
inc
ins
std
jp
or
rcr
test
push
stos
dec
arpl
sti
xor
popf
pop
stos
stos
or
inc
retf
stos
loopne
jecxz
rcr
call
or
outs
pop
inc
add
and
stos
inc
test
loopne
clc
shl
leave
out
mov
cs
jle
xor
sbb
mov
sbb
or
les
fild
popa
(bad)
ins
sub
stos
push
sub
fmul
mov
aaa
mov
sub
sbb
and
daa
add
cmp
xchg
pop
xchg
data16
pop
aas
jge
lea
(bad)
stc
gs
idiv
push
or
rcl
or
push
push
cwde
imul
pop
cmp
lea
shr
ss
push
xchg
xchg
xlat
movs
push
mov
imul
jb
push
xor
fisub
xchg
jle
outs
xchg
ins
mov
dec
pop
xor
jae
mov
fiadd
shr
sti
ret
push
xchg
in
loop
adc
inc
ret
aas
sub
inc
sbb
out
inc
mov
mov
push
add
rol
and
addr16
ds
sub
add
and
frstor
cmp
rcl
(bad)
add
dec
adc
lods
rcl
test
out
int3
(bad)
and
(bad)
int
mov
jecxz
cwde
pop
ins
inc
jge
cmp
pop
cdq
lods
cmp
out
bound
cmps
sahf
mov
loopne
and
push
xchg
adc
mov
cmps
push
(bad)
mov
ins
or
in
(bad)
cmps
pop
(bad)
stos
repnz
or
pop
das
lock
fadd
xchg
pushf
movaps
in
add
shr
movs
jnp
or
pop
sub
in
in
xor
sub
mov
sbb
in
jo
mov
and
inc
jecxz
cwde
test
mov
push
daa
jno
xchg
push
mov
jl
call
pop
mov
sbb
test
stos
pop
enter
test
pushf
adc
fidiv
std
adc
sbb
lea
retf
dec
xor
sbb
aaa
add
xor
pop
jb
sbb
sub
adc
push
xor
sbb
pop
jg
mov
jle
ret
push
inc
jg
mov
in
loop
or
and
movs
mov
xor
aas
pop
xchg
mov
(bad)
sub
mov
movzx
dec
pop
dec
pop
jns
and
xor
and
dec
dec
ret
iret
stos
scas
xchg
rcr
loop
scas
pop
inc
pop
mov
adc
xchg
xchg
inc
loopne
pop
sahf
movs
std
adc
or
xor
cmp
pop
cli
adc
or
rol
ds
xchg
stc
xchg
adc
imul
inc
cmps
cdq
mov
cwde
lods
cli
fldcw
scas
ss
xor
push
imul
add
repnz
pop
fwait
out
pop
jne
loopne
test
pop
dec
push
cmc
or
imul
rcl
xlat
cld
mov
sbb
sub
movntps
ja
cwde
mov
loop
imul
loop
inc
xchg
movs
arpl
and
sub
mov
mov
or
in
jo
push
mov
adc
icebp
or
into
xor
jle
loopne
sub
add
retf
mov
cwde
pop
mov
mov
sub
mov
cmps
jmp
dec
cmp
out
ret
cmps
pop
and
leave
into
add
int
jno
int3
leave
jg
and
bound
add
xor
mov
jns
movs
lahf
out
aam
fisttp
jae
aam
jecxz
and
or
pop
dec
pop
hlt
cmp
fidiv
dec
iret
mov
jne
dec
repz
ret
in
loopne
xor
pop
ror
jns
sbb
xchg
cmps
dec
lods
rcr
pop
push
push
inc
mov
imul
imul
sbb
add
pop
test
fisub
popa
push
loope
fadd
cmps
fisttp
cld
(bad)
(bad)
pop
inc
repz
call
stos
dec
rol
fwait
int
jmp
out
xchg
add
mov
ins
ror
and
cmp
push
test
pop
mul
mov
dec
(bad)
sbb
mov
movs
in
pop
repz
ds
stc
inc
dec
les
arpl
inc
pop
jb
push
inc
in
cwde
mul
pop
fstp
push
sbb
ror
lock
cmp
aad
or
mov
mov
xchg
jns
stos
in
stc
sub
xor
and
add
aas
dec
mov
jecxz
ins
cmp
jns
fst
or
adc
sub
cdq
sbb
xor
ds
mov
push
rol
mov
nop
ds
jne
sbb
das
ds
mov
mov
jbe
pop
mov
dec
adc
sahf
sbb
mov
fisttp
dec
or
cdq
push
(bad)
push
rcl
or
shr
vsqrtps
push
push
bound
mov
(bad)
or
stc
out
and
jbe
jne
jbe
push
sub
fimul
push
adc
lods
jmp
dec
and
in
sbb
cwde
fst
cmp
mov
push
mov
ret
mov
pop
or
mov
clc
jmp
scas
fcomp
xchg
mov
cmp
or
and
jecxz
out
idiv
fsubr
dec
test
rcr
sub
mov
jp
xchg
(bad)
adc
jmp
mov
lea
icebp
mov
pop
sar
lods
push
arpl
fs
mov
adc
sub
aad
mov
push
fstp
jb
test
mov
dec
mov
das
aas
mov
add
jmp
xor
mul
push
ins
retf
xlat
and
jmp
ss
inc
adc
ficom
sbb
mov
mov
mov
push
(bad)
pop
dec
add
jno
out
pop
imul
aas
daa
pop
pop
jnp
dec
ds
and
test
ins
sahf
addr16
pop
in
mov
xchg
xchg
ja
dec
inc
and
out
cmp
(bad)
pop
adc
mov
mul
pop
mov
fnstcw
xchg
dec
fwait
mov
sti
dec
mov
cdq
mov
out
rcl
xor
mov
(bad)
adc
xadd
or
loope
pop
outs
ss
loopne
inc
jmp
je
and
cmp
imul
jno
jecxz
gs
push
dec
test
sbb
inc
leave
cmp
mov
rcl
mov
jmp
sbb
add
inc
or
push
es
test
rcr
dec
push
or
adc
dec
test
push
daa
dec
mov
(bad)
pop
add
outs
icebp
jge
jecxz
shl
and
into
push
mov
xchg
pushf
popf
fst
psrlw
jne
add
out
call
daa
dec
dec
add
data16
or
push
bound
sub
adc
sbb
fldcw
cmp
and
retf
jp
pop
aaa
nop
scas
and
clc
cmp
in
pop
jp
iret
sub
bound
(bad)
rcr
test
and
xchg
out
xor
sub
dec
pushf
stc
in
dec
bnd
mov
mov
xchg
xor
sti
cs
mov
icebp
pop
jb
push
jae
fld
scas
sbb
movs
mov
lea
outs
add
mov
mov
test
sbb
(bad)
lods
and
pop
jl
outs
or
fstp
pusha
ds
mov
loope
scas
icebp
sbb
fld
and
(bad)
push
pushf
adc
cmp
cmps
jecxz
(bad)
cmps
and
out
sti
test
movs
add
sub
mov
push
fst
clc
mov
and
sub
xchg
xor
jb
pop
push
cmps
nop
leave
inc
dec
mov
dec
imul
dec
cli
retf
iret
js
add
push
adc
aas
cmps
dec
pop
repnz
(bad)
cmp
sbb
inc
jbe
cmp
fwait
mov
cs
xchg
enter
push
leave
and
fcmove
adc
and
cmp
test
imul
retf
sahf
std
repz
out
and
cld
(bad)
jns
aaa
cmp
xchg
mov
xor
dec
xchg
xor
sub
ror
inc
iret
jg
lock
fidivr
test
popf
(bad)
scas
mov
mul
dec
mov
adc
xchg
add
iret
xor
push
or
mov
sti
call
imul
jnp
(bad)
imul
inc
push
ror
imul
add
xor
cmps
fistp
sub
mov
adc
pop
pop
pop
or
out
mov
leave
xor
popa
xchg
mov
dec
imul
sahf
or
sahf
mov
es
pop
outs
icebp
popa
add
out
pusha
push
cli
inc
cmp
rcl
pop
fs
push
mov
dec
sub
mov
or
sub
cmp
inc
inc
aad
(bad)
clc
and
fwait
xor
xchg
iret
scas
(bad)
cli
and
sbb
ficom
and
xor
aad
push
pop
lods
je
dec
aaa
ror
push
adc
jbe
or
test
out
or
push
mov
and
or
mov
jne
pcmpeqw
in
stc
pop
scas
dec
add
xchg
or
dec
cmp
inc
es
xor
cmp
iret
sbb
clc
and
pusha
into
xchg
xchg
push
jmp
cmc
arpl
out
xchg
mov
dec
jae
js
loop
inc
ret
int3
int
sub
clc
add
arpl
enter
sahf
daa
(bad)
jge
sbb
(bad)
cmc
cmp
push
mov
jecxz
cli
rcl
sub
ret
scas
sub
jnp
cmps
mov
or
mov
mov
in
pop
mov
mov
xchg
pop
fwait
xchg
sub
std
mov
(bad)
jmp
adc
iret
sbb
pushf
adc
sub
enter
sahf
sub
dec
fist
inc
cmc
in
in
outs
xchg
mov
ja
pushf
adc
fisttp
adc
and
pushf
loopne
jb
mov
fld
std
sbb
push
(bad)
jmp
push
xlat
xchg
jmp
loopne
cmp
inc
mov
inc
cwde
test
ins
add
jno
enter
pop
mov
arpl
push
xchg
and
pop
(bad)
jl
popa
push
and
aad
(bad)
and
inc
std
add
jne
pop
scas
(bad)
stos
add
lock
xchg
stos
int3
lahf
jo
or
jecxz
fild
add
mov
dec
xor
adc
rcr
cdq
xchg
or
push
es
outs
dec
pop
push
adc
push
icebp
and
sub
fst
inc
fwait
jg
or
jmp
cmp
fwait
std
and
scas
add
inc
fild
push
or
jecxz
or
mov
gs
out
scas
je
imul
jl
lahf
div
imul
push
pop
push
cmp
pop
out
stos
sub
rcl
enter
ss
mov
sahf
dec
std
movs
mov
jmp
cmps
pop
pop
adc
xchg
and
cwde
pop
mov
rcr
pusha
xor
(bad)
loope
dec
aam
sbb
fldcw
cmp
retf
sbb
out
sqrtps
add
mov
mov
imul
mov
dec
lods
std
mov
jmp
pop
sub
dec
nop
dec
xchg
jge
mov
imul
call
jno
inc
popf
ret
push
jp
js
lds
int
add
and
and
push
ins
adc
icebp
jne
lea
cmps
fimul
mov
inc
das
cmp
push
call
(bad)
pop
dec
add
ret
sub
out
js
sti
ret
dec
fdiv
out
jl
sbb
cmp
hlt
or
in
cwde
aas
dec
dec
repz
xor
pop
sar
sub
and
or
jno
xlat
loopne
dec
ss
push
sbb
pop
jle
das
dec
and
dec
hlt
test
shl
dec
ret
fsub
pop
sbb
loope
mov
push
rcr
shl
add
and
nop
test
js
mov
sub
pop
jae
mov
pop
hlt
mov
sbb
jns
stc
pop
mov
jle
stos
imul
xchg
sbb
movs
xchg
in
in
mov
or
gs
push
(bad)
fs
cmp
les
enter
das
xchg
add
mov
repz
sbb
pop
fisttp
outs
test
jno
int
(bad)
test
mov
mov
nop
push
mov
cld
mov
scas
fnstcw
mov
popf
add
sub
push
sub
pop
ss
adc
sahf
shl
int
je
inc
adc
jbe
or
or
push
lods
xchg
xor
scas
enter
xor
mov
add
jmp
stc
pusha
loopne
mov
cmp
inc
jp
bound
dec
dec
call
mov
cmp
popf
call
cli
outs
idiv
icebp
jne
and
rcr
and
add
and
inc
test
adc
lods
sub
clc
and
xor
adc
cmp
pop
xchg
call
xchg
test
mov
xor
and
test
or
bound
jl
pusha
clc
or
inc
and
jle
fisub
jae
out
aam
lahf
popf
in
mov
adc
pop
push
push
ja
imul
mov
inc
dec
int3
pop
rcr
push
jo
jnp
out
out
inc
hlt
loopne
mov
adc
pop
dec
dec
pop
imul
movs
cmp
retf
or
cmp
popa
pop
aad
pop
xchg
in
shr
das
shl
jnp
test
shr
push
xchg
loop
cmps
mov
mov
xor
call
mov
cmps
fidiv
cdq
mov
fstp
cmp
mov
and
shr
popa
ror
adc
into
sbb
ror
pusha
jmp
lock
icebp
popf
rcl
loopne
or
mov
pop
ins
inc
dec
(bad)
pop
cmp
gs
push
jae
jecxz
inc
add
xchg
in
int
inc
pop
es
push
gs
das
bound
cdq
add
shr
push
ret
int3
or
sub
or
scas
ins
call
(bad)
push
or
test
sbb
push
les
pusha
dec
cmc
pop
and
rcr
in
jbe
nop
pop
cmps
push
aaa
adc
dec
mov
xlat
daa
inc
fdivr
pop
inc
adc
and
imul
mov
loope
mov
mov
cmc
inc
mov
push
icebp
push
lea
sbb
(bad)
fneni(8087
test
das
std
inc
cmp
not
bound
cmc
xor
pop
mov
(bad)
cld
adc
adc
nop
mov
xor
sbb
out
push
mov
lods
and
pusha
pop
sub
in
cmp
addr16
dec
add
lahf
mov
add
lods
pushf
test
xchg
enter
ins
jp
retf
push
jo
xchg
out
pop
xor
mov
xchg
or
add
xor
es
repnz
shl
(bad)
cmp
out
add
adc
push
sbb
lods
cmps
add
test
mov
jp
popa
das
dec
pop
jl
les
pop
jo
ret
popw
sbb
jne
xchg
sbb
add
les
cmp
ud2
mov
xchg
in
xor
dec
push
inc
aad
mov
pop
cmp
push
cmp
xor
imul
xor
dec
push
(bad)
sbb
icebp
inc
sbb
call
std
push
mov
cli
xchg
pop
shr
add
inc
push
xchg
retf
repz
mov
add
fidiv
mov
or
push
push
and
mov
lds
loope
popf
fst
test
rol
jo
push
das
sbb
into
int
test
lods
movlps
and
add
adc
mov
pop
and
not
rcl
and
push
sbb
cmc
pop
leave
bound
ss
test
icebp
jb
aad
push
xor
ret
push
popf
test
adc
adc
adc
sahf
push
dec
ret
lock
bound
iret
pusha
xchg
mov
int3
inc
rol
dec
in
rcr
(bad)
bound
adc
fisubr
jmp
aas
xor
jnp
mov
jno
jle
xor
inc
mov
repnz
std
mov
dec
in
(bad)
jo
arpl
push
pop
scas
es
ins
xchg
outs
in
cmp
mov
mov
imul
out
cwde
sahf
add
mov
mov
dec
mov
push
push
dec
add
(bad)
mov
lea
dec
ss
loope
cmps
jb
xchg
stos
es
mov
sbb
rcl
cmp
or
sbb
in
cmp
neg
jno
ret
pop
xchg
xchg
ins
shl
ret
pop
mov
mov
pop
jbe
fnsave
leave
bound
in
inc
inc
adc
push
movs
pusha
mov
fbstp
inc
mov
dec
cmp
push
repnz
dec
sub
xor
call
bswap
xchg
cmp
data16
push
hlt
xor
dec
imul
shl
inc
loop
pop
jno
xlat
retf
push
xor
jle
ins
xor
aam
pop
push
and
dec
jne
jmp
jge
sub
mov
into
mov
sub
loop
xor
out
mov
jp
mov
jne
call
in
enter
jmp
test
mov
lds
sbb
jnp
push
mov
pushf
jns
pop
push
repnz
repz
and
orps
fsub
(bad)
or
cli
repz
jns
sahf
xchg
dec
movs
(bad)
cmp
das
inc
fistp
out
and
scas
inc
push
stos
pop
rcr
xchg
retf
cmp
dec
pop
pop
mov
int3
in
int
or
sysexit
hlt
xor
dec
addr16
cmp
cld
fimul
mov
pop
fwait
icebp
xor
sub
scas
pop
dec
sbb
xchg
pop
mov
dec
cld
push
int
nop
jle
sbb
mov
pop
sub
jo
inc
mov
xchg
inc
fsubr
fwait
and
push
popa
retf
jl
jmp
push
hlt
enter
pop
out
mov
dec
in
mul
aam
dec
sbb
pop
fcom
sbb
(bad)
cmp
punpckhdq
adc
outs
shl
int3
addr16
add
cmc
sbb
or
ja
rcr
or
xlat
push
add
sar
ins
retf
push
out
jmp
fdivp
fwait
push
fdivr
lock
mov
adc
(bad)
dec
das
jg
cmp
aad
push
pop
inc
in
cmps
or
jb
in
fimul
js
out
in
add
pop
mov
mov
(bad)
fsubp
fcmove
jecxz
outs
inc
or
jno
addr16
test
xchg
test
pop
neg
cs
xor
enter
je
xchg
pushf
jle
aas
pop
mov
xchg
aad
lahf
stos
std
jp
call
inc
gs
xor
cli
mov
sbb
into
push
pop
adc
cmp
jge
mov
pop
adc
mov
mov
push
jno
jg
mov
or
(bad)
xlat
jae
(bad)
std
mov
jnp
sbb
int3
scas
arpl
push
leave
in
xor
mov
stos
mov
xchg
shr
dec
(bad)
call
adc
leave
mov
pop
pop
sahf
sbb
mov
jmp
push
(bad)
ds
fsub
in
pop
mov
or
add
jbe
mov
or
dec
movs
in
push
(bad)
cmp
cld
mov
pop
push
in
or
(bad)
pop
das
adc
es
adc
lods
(bad)
in
xlat
dec
sbb
push
pop
je
push
add
aam
shl
jecxz
pop
sub
ret
push
cli
pop
sbb
(bad)
call
or
push
adc
inc
nop
dec
xadd
rcl
or
(bad)
push
mov
in
in
test
jns
adc
int3
mov
shl
sbb
xlat
inc
pushf
aas
xchg
xor
jmp
pop
lea
es
lock
(bad)
pushf
loop
jmp
cmps
fadd
push
mov
add
xor
loopne
cmp
mov
fidiv
int3
div
sbb
or
inc
push
out
and
sub
mov
dec
outs
push
pop
leave
jmp
rcr
psubd
out
gs
cmp
retf
cmps
jae
lds
lods
or
ja
in
jle
mov
inc
inc
jl
adc
fstp
add
jg
sub
ret
push
xchg
pop
cmp
and
das
dec
mov
aam
dec
shl
jg
push
lock
add
cmp
push
inc
mov
xor
xor
call
in
fs
call
cmp
sti
cmp
inc
enter
pop
push
add
and
js
inc
and
adc
fcomp
push
or
cmp
inc
xchg
test
ret
inc
call
arpl
popa
jns
stos
pop
pusha
jns
mov
mov
rol
xchg
std
(bad)
dec
and
leave
pop
loop
scas
adc
lock
outs
(bad)
shl
or
aad
mov
arpl
imul
jb
jmp
ss
pop
mov
mov
pop
daa
ds
jmp
pop
imul
pushf
(bad)
(bad)
adc
lods
out
int3
enter
clc
leave
(bad)
add
push
sti
into
or
out
rol
jno
pop
cmp
jae
push
mov
jg
push
add
fistp
jno
sbb
inc
sub
scas
and
mov
mov
ror
inc
call
xor
outs
mov
push
mov
pop
dec
stc
mov
enter
sahf
out
jecxz
inc
test
call
adc
jl
aaa
sub
sbb
sbb
push
push
in
pushf
pop
stos
xchg
jecxz
mov
aad
dec
xchg
fcmovnb
xchg
test
and
fsubr
test
mov
int
xlat
lock
sar
adc
pusha
nop
xor
adc
add
(bad)
lea
xor
sub
enter
xchg
sbb
cmps
xchg
or
cmc
in
js
pusha
pop
push
push
cmps
gs
inc
adc
iret
push
and
sub
shl
cmp
jbe
jmp
daa
sbb
stos
dec
sbb
movs
mov
fdivr
pop
mov
or
add
pop
stos
jp
sar
mov
xchg
retf
js
stos
mov
xor
adc
sbb
ret
push
push
fild
call
cli
xor
cmp
cli
mov
sbb
push
xor
dec
ds
aas
jo
imul
retf
imul
cmp
in
jecxz
sbb
push
adc
icebp
mul
into
cmc
xchg
dec
jmp
mul
sub
mov
or
scas
jg
leave
ret
xchg
or
mov
aas
jge
lock
push
or
mov
into
adc
imul
hlt
(bad)
out
push
mov
or
fdiv
mov
lods
popa
(bad)
or
adc
mov
add
or
xchg
xlat
pop
(bad)
jmp
push
mov
pop
data16
mov
xor
ficomp
push
retf
xor
std
push
nop
mov
in
lods
loop
mov
(bad)
sahf
addr16
fidiv
leave
outs
or
and
and
hlt
ins
mov
cmp
add
(bad)
fidiv
xchg
into
lahf
(bad)
and
sahf
ret
mov
enter
lds
sub
fsubr
sbb
jb
mov
sub
ins
ret
jno
mov
ins
and
das
cmps
adc
mov
xor
sub
adc
movs
inc
call
and
mov
adc
add
cs
jns
jl
enter
das
fmul
popa
and
mov
dec
and
xchg
pop
xchg
pop
js
sub
test
push
mov
sub
xor
mov
sub
adc
pop
ror
and
push
psraw
inc
pop
sbb
jns
aam
fistp
and
lds
or
push
je
cli
scas
sub
test
lds
pop
adc
int3
cmc
movs
(bad)
aam
pop
sbb
xchg
aam
dec
adc
mov
cld
daa
xchg
pushw
loope
mov
in
jnp
pop
jecxz
dec
iret
fimul
fs
xchg
jae
in
jbe
cmp
dec
loopne
pop
sub
xchg
and
add
push
xor
leave
aaa
in
xor
mov
xchg
jne
jno
xchg
sub
lock
leave
lds
scas
test
sbb
push
aas
jno
jecxz
dec
xchg
rcl
mov
test
(bad)
call
out
clc
inc
js
movs
add
in
lea
mov
jne
call
loope
icebp
mov
cmp
daa
test
add
sbb
popa
ins
std
jmp
mov
inc
cdq
int
push
xor
in
xchg
and
xchg
mov
gs
pop
jmp
fisubr
pushf
test
cmp
cdq
jmp
and
and
loope
cmp
shr
(bad)
aas
jp
adc
fwait
movaps
jmp
mov
cmp
mov
call
in
xchg
arpl
sbb
gs
inc
mov
out
popa
ret
sub
mov
rcr
xor
pop
retf
sub
xlat
mov
data16
jo
popa
(bad)
fucomp
sub
js
loopne
ror
daa
sub
push
add
cmp
mov
sbb
popf
sbb
pop
xor
cs
push
test
xor
xchg
call
jl
into
retf
push
nop
add
pushf
or
es
scas
leave
jb
and
jmp
pop
jmp
repz
cmps
push
lea
xchg
mov
xor
ror
data16
loopne
push
add
iret
and
cmp
push
pop
jge
call
cmp
jmp
pop
jmp
mov
inc
fisttp
dec
test
push
test
jne
stos
add
xchg
mov
out
ss
mov
lea
addr16
repz
mov
sar
fst
jno
mov
movs
int
(bad)
xchg
cmps
dec
(bad)
inc
leave
pop
es
pop
addr16
cmp
pop
cs
cmp
and
je
jmp
push
push
fidiv
xchg
xchg
ret
or
push
and
xlat
mov
stc
ret
mov
dec
in
cmp
cs
fld
call
les
xor
jl
ins
mov
jl
ficom
and
iret
pop
pushf
mov
sbb
dec
inc
mov
mov
sahf
jno
test
call
dec
cmp
dec
jbe
xchg
mov
(bad)
js
sbb
lahf
xchg
mov
repnz
and
js
pop
stc
call
rcl
bound
(bad)
out
arpl
scas
data16
sti
ret
inc
inc
fld
pop
sub
ins
repnz
add
sbb
std
and
or
addr16
push
sahf
jbe
mov
jns
(bad)
mov
jecxz
test
sub
(bad)
cwde
out
pop
fisttp
sub
loope
cdq
mov
lods
add
cmps
fwait
outs
and
jns
mov
adc
xor
stc
clc
ins
cmp
sub
dec
gs
or
ja
or
xchg
lods
stos
jb
call
xchg
div
mov
sahf
inc
pushf
sub
(bad)
cmp
and
and
mov
push
in
dec
xchg
int
fiadd
data16
cmc
inc
gs
and
(bad)
push
mov
stos
dec
addr16
cli
xor
hlt
(bad)
fcomi
test
lds
mov
bnd
pop
dec
rcl
add
ret
test
movs
leave
jns
jg
fadd
(bad)
cmp
scas
jbe
xor
cwde
stos
outs
inc
outs
dec
call
jnp
inc
inc
ficomp
mov
test
push
mov
es
push
xor
mov
in
or
or
stos
inc
icebp
sbb
xchg
pusha
out
sbb
int
jmp
mov
ja
jo
test
push
cmc
sbb
cs
add
mov
xor
jno
adc
inc
mov
daa
jle
and
(bad)
in
movs
dec
mov
mov
jnp
jl
stos
sahf
mov
adc
idiv
sbb
test
xchg
stos
out
jecxz
and
jmp
or
cmp
inc
call
push
std
sbb
xchg
cli
pop
mov
cmps
enter
dec
arpl
hlt
idiv
sar
outs
and
ss
add
xchg
xchg
add
cdq
push
into
push
dec
sub
ja
pop
mov
inc
push
add
xchg
xchg
push
movs
prefetch
or
inc
or
ror
mov
cmps
sar
mov
sub
mov
scas
cdq
shl
jmp
(bad)
in
push
add
or
es
mov
xor
repz
fidiv
jle
mov
test
inc
fdivr
test
pushf
push
push
cld
mov
jnp
ins
sub
inc
das
mov
sub
not
mov
rcr
and
push
xor
stc
in
mov
das
mov
daa
scas
add
mov
jmp
lock
xor
outs
lahf
sbb
xor
and
retf
cdq
xor
cmp
sbb
xor
pusha
and
push
dec
push
jmp
mov
icebp
stos
(bad)
imul
sbb
dec
int3
aas
push
mov
pop
xchg
jp
xor
loopne
sbb
dec
ss
stc
dec
inc
retf
jge
pop
xchg
or
hlt
and
xor
nop
outs
call
sub
jp
ds
xlat
add
and
retf
addr16
xchg
dec
pop
push
mov
test
adc
fs
lods
enter
jne
push
adc
stos
and
retf
xchg
popa
sub
lock
bnd
inc
aas
scas
jb
imul
std
sbb
imul
fwait
xor
cwde
(bad)
retf
ret
and
ror
int3
das
mov
xchg
push
push
pop
mov
cmp
or
stos
and
out
jge
cmp
cli
shl
push
sbb
dec
sti
int
mov
pop
sub
push
push
jns
pop
sbb
movs
xchg
cmp
inc
and
sub
inc
fwait
push
aam
xchg
into
mov
jns
cmp
xor
mov
adc
(bad)
xor
pusha
(bad)
lods
cmp
or
pop
cli
xchg
inc
jl
and
movs
inc
sbb
arpl
cmp
inc
dec
xor
xchg
xchg
icebp
cmp
(bad)
sub
movs
or
les
in
cmps
aaa
push
scas
aas
push
xchg
sti
and
shl
test
in
sub
xor
sbb
adc
sub
cld
test
int
mov
push
ret
and
pop
inc
jae
dec
push
imul
push
shl
int3
mov
out
or
int
stc
bound
xchg
mov
push
imul
sub
data16
ret
inc
ins
jg
repnz
xchg
xor
cmp
sbb
fmul
pop
pop
jl
test
daa
stos
pop
push
xchg
ds
jne
test
dec
push
in
bound
jl
rcr
sbb
adc
rol
pop
cmp
retf
pop
push
aas
cmps
call
retf
xchg
jmp
pop
out
push
sar
mov
sbb
(bad)
mov
bound
sar
pop
mov
mov
xcrypt-ctr
cmps
pop
sbb
mov
cmp
add
sub
leave
jo
cmp
and
popf
test
mov
out
sbb
loop
push
les
pop
xchg
sbb
repz
ficom
cmp
mov
adc
push
das
mov
test
aas
pop
leave
adc
xor
mov
fwait
imul
cmp
stos
sbb
mov
add
ins
cmps
jb
push
push
mov
cmp
imul
push
xchg
xchg
push
test
mov
mov
push
fisttp
sbb
aaa
dec
xchg
cli
mov
pushfw
outs
add
dec
cs
and
aaa
daa
arpl
outs
mov
add
pop
dec
ds
in
sub
mov
cdq
pop
pop
pop
test
jbe
ins
dec
dec
adc
sbb
leave
pop
daa
sahf
es
push
and
push
cdq
push
dec
cmp
in
mov
xchg
mov
sbb
scas
inc
and
arpl
movs
ins
(bad)
pop
mov
adc
ins
push
je
imul
pop
lock
mov
fmul
ja
stc
data16
cmps
or
loopne
mov
inc
inc
mov
dec
push
ins
adc
fistp
sub
dec
add
cs
movs
fsubrp
mov
inc
cmps
mov
pusha
(bad)
aad
mov
jnp
and
ins
xchg
add
pop
fidivr
pusha
push
mov
and
xor
inc
inc
cwde
xchg
mov
jno
mov
inc
and
pop
sub
pop
sbb
outs
stos
xor
mov
push
es
rcl
xor
push
inc
arpl
pop
in
fdivr
mov
mov
mov
loop
les
stc
mov
mov
icebp
push
mov
leave
push
sbb
jl
push
sub
xlat
imul
inc
leave
popf
out
cmp
mov
ds
xchg
mov
sub
mov
in
cmp
mov
out
add
adc
push
stos
push
es
scas
pop
dec
push
stos
sub
mov
add
ds
cwde
mov
mov
fistp
outs
push
mov
out
popf
scas
push
add
fwait
adc
dec
loopne
test
sahf
je
jns
fild
sbb
mov
or
add
cmc
cmp
(bad)
stos
pop
add
dec
in
movs
add
lods
stos
pop
je
pop
pusha
mov
mov
jbe
jmp
std
adc
mov
push
aaa
ss
inc
push
(bad)
push
sbb
mov
or
dec
dec
lds
ss
pop
or
sbb
jp
icebp
loopne
mov
dec
aaa
push
or
(bad)
xlat
bnd
int
jmp
ret
cmp
inc
rcl
das
or
stos
retf
fcomp
sub
mov
jae
push
shl
inc
push
rcl
iret
cmps
ret
cmps
jbe
fcomip
scas
jl
lea
std
idiv
push
imul
out
inc
jle
pop
dec
lock
(bad)
dec
lds
sbb
add
sbb
pop
jb
popf
sbb
jmp
inc
cmc
cmc
xchg
scas
jl
or
in
test
and
pop
and
push
inc
cmps
in
cli
test
mov
test
sbb
loopne
shr
arpl
sahf
ror
mov
mov
dec
xor
jnp
push
mov
mov
lock
adc
pushf
adc
xchg
xchg
rcl
pop
jb
xchg
xor
adc
xchg
es
mov
mov
jb
out
popf
movs
jl
dec
movs
or
dec
pusha
retf
je
mov
push
mov
push
mov
pop
add
jb
adc
enter
fadd
add
sub
(bad)
push
imul
call
dec
mov
je
hlt
push
push
add
pop
mov
cmc
and
inc
push
cmp
leave
fwait
and
test
not
(bad)
mov
or
cmp
pop
xor
popa
nop
and
test
mov
aas
jns
sti
imul
movs
xor
fadd
in
adc
int3
ins
(bad)
push
out
test
mov
xchg
sahf
push
das
mov
fs
sbb
in
cli
xchg
xor
or
test
test
lock
outs
sbb
das
fcmovnbe
fsub
inc
sub
adc
adc
int
mov
dec
ins
in
scas
mov
pop
or
sbb
jnp
(bad)
test
sbb
xchg
(bad)
fstp
mov
push
ss
jbe
dec
mov
cmc
push
ins
fsub
imul
addr16
jle
outs
dec
out
adc
test
ins
mov
mov
jmp
push
dec
out
sub
adc
sub
pusha
inc
and
daa
xor
mov
add
(bad)
ds
mov
dec
push
das
icebp
xchg
dec
mov
xchg
xor
fcom
scas
mov
scas
(bad)
cmp
mov
adc
dec
cmp
add
rcr
dec
and
mov
sti
mov
pushf
lds
loopne
or
inc
jne
fcmovbe
ins
(bad)
fisubr
outs
dec
into
ror
bound
push
sub
inc
(bad)
add
shl
cmp
pushf
cmps
ret
sbb
in
add
hlt
aaa
xor
mov
js
push
ja
fsub
push
push
inc
or
shl
pop
cmp
push
dec
adc
imul
and
jmp
mov
jnp
test
(bad)
dec
test
enter
adc
push
psubw
(bad)
push
int
adc
outs
add
sbb
dec
pop
jnp
mov
and
out
js
add
shl
sub
xor
xor
jp
scas
jge
imul
jae
pop
and
in
cmp
dec
pop
inc
ficomp
dec
pop
pop
inc
imul
outs
push
add
push
(bad)
jbe
mov
mov
(bad)
cmp
jle
push
stos
retf
sbb
mov
inc
or
pop
dec
test
or
sbb
mov
and
push
div
push
mov
sbb
icebp
mov
sar
pusha
mov
loop
adc
test
push
sahf
call
(bad)
int3
jb
push
dec
lea
add
ret
jmp
jecxz
jmp
popf
out
cmc
mov
inc
enter
stos
jle
xchg
sub
inc
and
pop
sub
popf
test
push
inc
sbb
loope
ret
push
xchg
xchg
sbb
sub
lahf
xor
fnsave
push
jo
fadd
dec
das
cmc
sbb
jmp
mov
out
sbb
retf
xchg
sub
mov
icebp
les
xlat
jmp
(bad)
and
push
loope
cmp
jno
xchg
sbb
outs
mov
jle
movs
imul
cmp
(bad)
adc
xchg
or
out
fs
pop
inc
adc
aaa
in
add
and
shl
inc
std
fstp
push
pop
push
lea
mov
add
pop
cli
imul
int3
cld
int3
mov
jae
or
push
add
inc
loopne
xor
into
aas
leave
push
jb
jnp
arpl
jmp
leave
sub
inc
mov
push
rol
push
dec
inc
sub
ss
jnp
repnz
aad
jmp
nop
cs
inc
sbb
mov
and
jle
jmp
mov
cmps
and
mov
dec
xchg
repnz
mov
mov
adc
mov
loopne
out
hlt
popa
or
adc
lock
sbb
out
or
pop
xchg
stc
mov
or
mov
bound
and
pop
gs
ret
lds
out
dec
ins
sbb
retf
cmps
gs
scas
sbb
dec
xchg
push
push
bound
jge
lods
(bad)
mov
out
outs
dec
inc
mov
retf
dec
mov
pusha
retf
(bad)
pop
shr
pop
idiv
pop
mov
add
test
inc
sub
pop
sub
mov
sub
in
jno
push
mov
and
push
iret
je
xlat
arpl
jb
test
cmps
jl
pushf
pop
mov
in
sbb
mov
das
ins
aaa
rcl
pop
pop
in
jmp
adc
jge
adc
add
(bad)
fimul
push
mov
test
mov
lods
jno
xchg
jecxz
(bad)
jae
and
pmullw
sbb
xor
icebp
cmp
lahf
push
or
popa
jg
inc
sar
leave
mov
mov
cmp
int3
cmps
rol
inc
in
jl
shl
sub
xor
mov
scas
faddp
arpl
shr
mov
inc
loope
call
stc
add
imul
call
imul
cmp
adc
call
retf
inc
mov
arpl
dec
pop
or
xchg
xor
mov
mov
dec
sahf
push
stos
xchg
jecxz
xor
dec
pop
cmp
rol
lods
ret
or
(bad)
adc
(bad)
jno
mov
fstp
xchg
rep
cmp
popa
cmps
add
nop
xchg
jbe
je
mov
xor
pop
int3
jg
jecxz
mov
cmps
add
mov
cs
xor
mov
cmps
test
in
es
scas
ss
dec
loopne
jb
loop
shl
and
xchg
(bad)
std
frstor
pop
add
bound
stc
sub
mov
stos
mov
pop
and
mov
std
loope
cmp
pop
or
jle
and
cmp
ja
lods
push
mov
pop
sbb
jmp
loope
pop
dec
xor
test
cdq
in
cmp
aaa
cmc
sahf
and
mov
pop
imul
fisttp
push
(bad)
addr16
fbstp
jb
std
or
lds
pop
popf
xlat
or
add
push
sub
and
hlt
jb
jnp
push
mov
dec
in
shr
jns
sub
and
ror
in
xor
hlt
push
out
fstp
mov
int
pushf
jecxz
cld
repz
xchg
or
jmp
mov
xchg
nop
pop
fcomp
test
cmp
loop
leave
dec
or
xchg
ja
mov
aas
mov
out
sahf
and
std
push
and
out
inc
pop
jmp
cmp
sbb
adc
dec
xchg
and
lahf
inc
mov
cmp
dec
and
add
mov
sub
rcr
sbb
(bad)
fisttp
fiadd
jecxz
gs
cmps
aam
retf
jns
scas
ds
cwde
fsubr
mov
add
sub
mov
inc
std
js
in
int
fwait
pop
sub
cdq
popa
jns
test
mov
(bad)
fisubr
add
pop
and
inc
sbb
adc
int
test
push
push
aam
out
xchg
mov
push
rol
cdq
pop
and
mov
mov
xor
and
jmp
xchg
mov
icebp
rcr
ret
add
push
push
sahf
mov
mov
mov
mov
ins
push
leave
arpl
pop
ret
add
cmps
imul
ins
sbb
dec
ror
sub
fs
jno
clc
repnz
aam
xchg
aad
(bad)
pop
daa
shrd
pop
popf
ficomp
jg
cmp
inc
or
xor
fwait
rcl
inc
mov
repz
fnsave
cld
xchg
pop
xchg
into
cwde
loop
ins
jp
iret
jl
(bad)
sub
dec
test
imul
in
push
es
daa
xor
out
add
mov
stos
dec
cld
cwde
mov
jmp
jns
int3
loopne
adc
dec
jmp
lds
mov
dec
cmp
dec
loopne
mov
cld
popa
xor
inc
daa
mov
dec
punpckldq
xor
div
adc
cmp
push
xchg
sub
scas
pand
icebp
mov
jmp
xchg
xlat
dec
adc
add
inc
outs
shl
ror
mov
and
mov
inc
and
out
mov
mov
(bad)
jb
iret
mov
add
pop
inc
jo
pop
repz
je
push
inc
bound
inc
dec
dec
aad
arpl
pop
cmp
data16
adc
std
jno
daa
xchg
sub
scas
or
into
cs
das
repnz
add
test
vunpcklps
add
fisub
cmp
mov
dec
fmul
lea
dec
mov
aaa
pop
jp
add
xor
clc
repz
mov
and
pop
mov
pop
pusha
ds
icebp
inc
inc
inc
pop
(bad)
(bad)
out
les
mov
sahf
ret
stos
stos
lea
arpl
mov
dec
out
(bad)
dec
fistp
fiadd
or
dec
enter
addr16
and
popa
jg
aam
jne
js
ds
scas
(bad)
fild
cmp
fdivr
xchg
sti
jb
sub
movaps
xchg
push
test
aam
mov
jmp
mov
cmp
push
sbb
push
jae
adc
int3
stos
mov
(bad)
mov
inc
dec
icebp
lock
lea
lea
jmp
ja
icebp
cdq
pop
xor
sub
adc
jo
lahf
iret
push
mov
out
in
(bad)
or
out
dec
repz
add
xchg
adc
fucomip
fmulp
daa
js
fisub
retf
cmp
pop
mov
ja
icebp
jmp
scas
cmps
ins
cld
movs
jle
jp
cdq
sbb
or
call
cmp
mov
xchg
push
or
loop
jle
and
fwait
ret
push
loopne
call
(bad)
xlat
mov
ds
repz
and
popf
sub
jle
les
push
lods
push
shl
pop
pop
mov
jbe
scas
jbe
push
mov
js
pop
jnp
cmp
cmp
pusha
gs
xor
jno
test
xchg
adc
rol
jns
push
not
ins
xchg
cdq
scas
popa
adc
and
xchg
iret
or
sti
hlt
lahf
push
test
loop
ds
push
loopne
push
fsubr
out
outs
sub
sub
int3
scas
fwait
es
adc
mov
in
jae
sbb
jnp
sbb
mov
nop
or
xchg
cmp
std
mov
add
adc
shl
lods
push
xor
inc
fwait
mov
add
or
lahf
adc
dec
retf
or
mov
mov
mov
inc
pop
and
xor
xor
xchg
pusha
xor
add
pop
add
push
adc
inc
push
lods
(bad)
stc
jne
in
out
aam
or
dec
mov
pop
and
pop
push
loope
push
cmp
sub
cmp
fsubr
jb
aas
iret
retf
test
push
sbb
adc
push
rol
stos
inc
xchg
inc
jmp
cmps
or
dec
or
or
mov
int
add
mov
(bad)
div
push
mov
push
ret
movs
shl
test
(bad)
sub
xchg
mov
sub
sub
test
mov
pusha
hlt
aam
jmp
xchg
xchg
xor
ins
xor
sub
rcl
dec
push
leave
add
sbb
les
ficomp
jno
shr
ds
mov
lock
pop
xchg
je
cmp
mov
repnz
xchg
je
sbb
cs
jle
xor
dec
pusha
dec
pop
mov
mov
xchg
es
push
mov
pop
mov
int
add
mov
mov
mov
call
pop
adc
cmps
mov
dec
jmp
push
pop
gs
mov
mov
shl
jne
and
lock
jo
mov
nop
std
push
test
cdq
addr16
ss
mov
mov
movs
jbe
rcr
(bad)
or
mov
fbld
into
dec
xchg
mov
inc
and
aam
test
sbb
mov
sub
fs
mov
cmp
outs
add
mov
and
and
push
scas
popf
sub
retf
dec
or
or
sti
xchg
mov
xchg
aas
pop
mov
rcl
aad
movs
and
xchg
pop
iret
mov
xor
fwait
loopne
mov
(bad)
out
jge
out
xor
rcl
xor
fst
xor
in
sahf
cli
adc
out
dec
jp
inc
mov
in
(bad)
sbb
mov
cmp
pop
in
cmp
inc
or
xchg
dec
jno
add
sbb
aad
dec
scas
aaa
jmp
(bad)
das
mov
lock
aam
adc
fst
sub
ss
adc
push
mul
clc
js
jo
enter
mov
cmp
cdq
rol
jne
push
leave
mov
add
test
loope
dec
jmp
stos
sahf
cmp
push
sbb
pop
ret
xor
cmps
adc
out
or
push
xchg
data16
fcomp
dec
sub
jmp
ffreep
scas
adc
sbb
or
cmp
adc
jecxz
loopne
and
jle
jl
shr
mov
ret
cwde
and
add
fcmove
pop
mov
mov
fcomp
in
mov
xor
lock
mov
pop
pop
xor
outs
movs
dec
test
nop
loop
into
cld
stos
cdq
div
lods
mov
push
data16
outs
xor
sub
in
rol
xchg
outs
call
icebp
mov
and
xchg
mov
pop
stc
in
adc
jo
cmp
into
repnz
call
rcr
scas
sbb
in
mov
sahf
(bad)
sbb
outs
(bad)
arpl
jg
pusha
inc
sar
enter
dec
scas
sar
dec
pop
mov
imul
jl
jle
outs
cmp
movs
adc
and
sbb
jp
dec
retf
mov
ret
rcl
shl
shl
and
in
int3
jae
mov
inc
inc
(bad)
int3
jmp
adc
dec
iret
pop
ja
push
ins
retf
jmp
mov
rcr
adc
test
imul
or
in
jbe
mov
sbb
movs
sbb
sub
les
ret
sub
jg
mov
ret
mov
bndstx
mov
data16
test
lahf
pop
int
mov
pop
retf
jnp
inc
and
cld
mov
ds
pop
movs
and
std
in
popf
jecxz
cmp
push
xor
mov
pop
rcl
ja
fidiv
popf
stos
adc
xlat
std
mov
mov
push
jns
cmps
int
jo
xchg
mov
pop
sbb
push
in
xor
xchg
pop
sub
add
das
and
cmps
push
fcmovu
mov
mov
fnstsw
sti
addr16
(bad)
push
fwait
jecxz
inc
mov
mov
movs
and
add
push
es
jmp
pop
out
aam
bound
xchg
cmp
xor
ds
xor
cmp
bound
cdq
dec
out
mov
ja
cmp
outs
inc
mov
add
xor
mov
cmp
fistp
jle
cmc
dec
mov
fadd
mov
cmp
dec
push
in
pop
fwait
jno
push
out
or
rcr
stos
jmp
out
pop
mov
icebp
cmp
inc
mov
div
(bad)
mov
repz
push
mov
inc
add
xchg
sub
imul
in
pop
cld
enter
xor
and
sbb
sbb
call
scas
cmps
dec
cmp
dec
repz
popf
cmps
test
fimul
mov
sub
addr16
push
push
fdivr
inc
xchg
jecxz
add
mov
pop
mov
call
lods
outs
sub
inc
or
inc
and
in
call
sub
mov
movs
imul
or
jno
shl
fdivr
xor
lea
dec
dec
jmp
sub
scas
std
xor
mov
cmp
xor
outs
test
push
imul
leave
mov
sbb
mul
dec
ret
sub
shr
mov
sub
fs
ret
retf
xchg
jl
mov
repz
pushf
jecxz
(bad)
xchg
pop
loop
ins
push
mov
gs
fmul
leave
add
fwait
call
push
add
push
shr
pushf
or
fistp
or
mov
cmps
aaa
in
out
sub
lods
jp
retf
inc
push
add
je
dec
into
push
outs
aas
leave
inc
lds
mov
push
adc
mov
pop
xor
mov
sbb
ror
test
imul
lods
ds
clc
and
push
cmps
jecxz
cmp
add
adc
hlt
mov
mov
aam
mov
mov
pusha
lea
and
into
imul
push
out
jo
(bad)
cs
leave
jnp
(bad)
repnz
xor
sbb
call
mov
add
mov
call
mov
fwait
out
push
dec
xor
sub
call
mov
mov
pop
mov
jno
ins
movs
loope
ins
push
sub
jno
mov
dec
cli
jne
push
clc
ret
dec
in
sub
jmp
pushf
add
xchg
retf
clc
push
into
stos
bound
movs
xchg
data16
pushf
(bad)
dec
inc
cmc
adc
loope
out
and
jecxz
xor
sbb
sub
daa
ins
jge
push
je
and
ror
push
stos
push
sbb
dec
add
lock
xor
jecxz
mov
in
cmps
cwde
pop
add
dec
ret
rol
ror
aad
in
adc
add
ret
inc
pushf
loop
loop
mov
xchg
outs
mov
xchg
dec
dec
mov
jge
cmps
pop
imul
mov
sbb
adc
out
aas
mov
jnp
lea
xchg
mov
sbb
(bad)
mov
inc
mov
hlt
xor
or
or
jne
mov
jg
(bad)
sub
movs
and
(bad)
in
push
and
jl
adc
aas
mov
lods
pop
jl
and
cli
packuswb
push
and
cmps
call
push
sub
push
retf
bound
jle
sbb
push
and
sahf
sbb
mov
out
xor
mov
cli
aad
jl
test
mov
scas
push
adc
xchg
xor
xor
ins
push
inc
jo
call
mov
push
test
out
fwait
shl
iret
sub
lea
adc
mov
cdq
jl
xor
aas
cmp
loopne
lock
frstor
mov
cld
adc
sub
(bad)
jns
lds
mov
xchg
inc
push
lahf
push
inc
sbb
mov
adc
je
cmc
pop
cmp
lock
stos
jnp
inc
jge
loope
lods
mov
and
jl
int3
xchg
mov
xor
mov
inc
jns
jo
or
(bad)
loopne
adc
jae
test
push
test
push
sti
xchg
call
div
into
xlat
xor
inc
std
pop
cmp
mov
cmp
lock
gs
lds
in
je
iret
or
lods
cdq
mov
inc
mov
push
sbb
inc
or
pop
adc
jmp
sbb
call
hlt
idiv
je
fild
pushf
xor
ret
sub
mov
retf
cld
lock
inc
push
mov
mov
pop
xor
fs
inc
arpl
loop
jns
pop
push
dec
ins
dec
neg
pop
pop
add
dec
xchg
(bad)
xor
movs
repnz
sti
(bad)
shr
addr16
pop
lock
mov
loop
test
sub
fisub
ins
jl
loope
js
aas
test
ins
sbb
or
add
mov
(bad)
retf
retf
out
cdq
push
mov
sbb
pop
or
in
lods
dec
jmp
mov
push
jp
or
xchg
inc
cmp
adc
(bad)
sbb
mov
pop
jae
je
jecxz
stos
adc
or
xchg
mov
sar
js
mov
sub
aam
pop
sar
sub
enter
(bad)
or
sub
pushf
push
inc
aam
(bad)
(bad)
(bad)
mov
mov
mov
test
jl
dec
xor
mov
ins
jne
neg
xchg
shl
mov
pop
into
je
inc
add
cli
dec
icebp
xchg
mov
addr16
test
push
lods
stos
test
add
int
mov
std
jbe
and
pusha
xchg
ss
neg
arpl
lods
sbb
xchg
call
adc
les
pop
dec
enter
(bad)
sbb
out
jno
inc
sub
dec
mov
push
inc
jle
jns
dec
(bad)
(bad)
pop
dec
xchg
mov
lods
(bad)
fsub
fmul
pop
or
cmp
stos
icebp
das
or
sub
mov
rcr
jg
pop
mov
xchg
sahf
and
mov
adc
jmp
rcl
jne
add
add
inc
inc
push
mov
inc
out
add
test
or
std
icebp
cwde
mov
inc
(bad)
cmp
push
pop
icebp
aas
int3
imul
in
mov
jnp
jne
jnp
xor
test
add
movs
and
dec
push
cmp
shr
cmp
sub
call
shr
cmp
pop
adc
and
ins
inc
xchg
fdivr
sti
mov
fwait
push
and
scas
cli
dec
dec
lahf
mov
int
loope
adc
loope
test
cwde
call
or
pop
push
mov
pop
jne
and
das
sub
push
xchg
cmps
push
aam
stos
pusha
mov
rcr
inc
imul
and
inc
or
cli
push
adc
xchg
sub
jmp
ins
repz
test
lock
fcom
inc
xor
mov
in
in
fsubr
sbb
(bad)
int3
push
pop
fdivr
and
movs
out
jo
int
movntps
(bad)
and
cli
push
data16
sbb
repz
sub
fmul
inc
fadd
retf
mov
pop
les
scas
ss
lahf
mov
popf
pusha
call
je
mov
inc
push
inc
nop
(bad)
dec
rol
int3
fwait
ja
xor
xchg
test
mov
mov
(bad)
call
movs
cmps
pop
in
push
in
jmp
vcvttps2dq
call
shl
jnp
and
sbb
pop
call
sbb
rcr
cdq
or
cdq
movs
sbb
pop
loopne
popw
jnp
stc
fmul
fidivr
retf
out
push
lods
std
outs
sub
in
scas
std
mov
dec
inc
adc
lds
and
mov
and
add
pop
cwde
lea
in
adc
adc
cmp
cld
adc
jae
push
sti
cmp
push
ins
hlt
sub
(bad)
jb
in
aaa
xor
pop
fsubr
sbb
pop
xor
neg
jo
test
push
aaa
mov
cmp
jl
ins
jp
out
sbb
mov
or
cmp
or
lahf
pop
das
sub
shr
int3
cdq
fcmovne
fnstsw
outs
sbb
mov
xor
adc
push
call
out
movs
fnstenv
je
mov
ins
mov
in
xchg
adc
add
mov
push
les
or
mov
ret
jmp
push
push
jbe
fstp
mov
mov
call
mov
fmul
jno
push
inc
or
cs
cmovp
pop
or
fwait
in
add
shl
scas
(bad)
mov
adc
xor
(bad)
repz
cdq
sbb
in
jg
cwde
mov
shr
movs
cdq
sti
outs
imul
cdq
xchg
imul
push
dec
inc
dec
or
leave
cmp
call
xchg
xchg
xor
pop
(bad)
cmp
bnd
fiadd
adc
cli
add
jecxz
xchg
sub
rcr
in
pop
out
aam
int3
mov
pop
xor
cmp
jg
xlat
les
ins
push
hlt
cmp
cmps
sbb
iret
jbe
(bad)
out
sbb
ret
shr
mov
mov
addr16
data16
mov
add
xchg
push
sub
mov
adc
jmp
jg
or
aam
aam
jnp
popa
shl
test
mov
fisttp
out
fadd
fdiv
pop
cli
cdq
inc
dec
add
push
push
xor
push
mov
pushf
fistp
mov
pop
sbb
inc
call
out
or
call
cmp
push
into
aad
push
push
rcr
test
outs
arpl
pop
popa
cmps
jne
aad
fdivr
out
jmp
cmp
xor
xor
sahf
aam
aam
(bad)
arpl
loopne
ret
loope
mov
cmps
sbb
jo
mov
sub
fisubr
mov
push
adc
add
mov
ins
mov
test
leave
adc
out
cwde
(bad)
push
jo
retf
sub
sub
retf
cmc
add
shr
out
pop
xor
cmp
out
cld
call
in
mov
mov
jae
fisub
add
ins
lods
xchg
ja
mov
(bad)
loop
mov
and
push
dec
pop
aam
cmp
imul
xor
and
dec
adc
repnz
rcr
or
sbb
jns
sbb
repz
or
cmp
push
sbb
jb
sbb
cmps
fcmovnbe
in
adc
jge
or
mov
(bad)
jge
cmp
sbb
mov
repz
cmc
push
jo
pop
push
shrd
sub
xor
test
stc
cwde
inc
sbb
es
pop
fcomp
mov
xchg
call
mov
dec
and
sahf
imul
cmp
push
dec
push
outs
leave
inc
push
mov
enter
fucom
ror
mov
pop
das
mov
das
je
iret
jno
mov
jns
cli
scas
js
popa
sub
pop
dec
mov
sbb
inc
outs
das
xor
cdq
inc
mov
adc
jecxz
push
nop
outs
sti
rcr
dec
in
loopne
lahf
icebp
and
xlat
push
gs
jg
sar
push
bound
and
les
call
xchg
(bad)
and
xchg
rcr
ret
into
mov
and
mov
inc
mov
bound
mov
dec
je
push
pop
sbb
adc
in
cmps
retf
or
mov
scas
and
mov
outs
pop
cmp
push
iret
and
enter
js
aam
sbb
or
jb
movs
ss
outs
mov
sbb
or
sbb
call
xchg
daa
cli
arpl
and
pop
jmp
xor
lock
jae
add
imul
dec
loop
adc
in
inc
nop
jbe
xchg
xchg
sbb
jnp
nop
jae
mov
pusha
mov
fst
mov
and
mov
ins
jno
scas
adc
scas
pushw
inc
push
and
pop
out
pop
in
mov
rcr
outs
dec
mov
xor
sub
dec
test
jne
(bad)
imul
call
mov
mov
(bad)
cmps
inc
bswap
mov
icebp
lea
or
ret
and
mov
jnp
mov
cmp
push
out
outs
sub
add
jno
fidiv
fcom
push
sbb
nop
sahf
add
mov
pop
sbb
es
mov
dec
lock
jle
js
scas
or
add
repz
loopne
sub
xchg
loop
frstor
pop
adc
cmp
inc
out
loopne
and
fcomip
movs
popf
call
loopne
cmp
inc
ss
jecxz
(bad)
jnp
les
xchg
xchg
in
cmps
jle
fwait
lods
mov
lock
jno
xchg
dec
(bad)
scas
mov
push
retf
fimul
inc
inc
ja
or
repnz
dec
xchg
pop
in
out
mov
(bad)
lods
lods
into
test
mov
cmps
leave
movs
(bad)
loopne
movs
(bad)
or
pushf
jp
arpl
mov
xchg
xchg
dec
into
cli
and
sbb
jbe
aam
jmp
jp
ss
jmp
adc
(bad)
(bad)
ret
pop
jae
add
leave
fwait
pop
xchg
repz
push
mov
(bad)
out
das
inc
sbb
mov
icebp
(bad)
fs
inc
fisttp
hlt
and
mov
rol
xchg
jns
ja
push
cmp
cs
lods
mov
outs
xchg
jl
cmc
jns
out
jmp
pop
inc
imul
add
aas
aad
adc
es
xchg
push
xchg
popa
sbb
and
mov
(bad)
or
sahf
adc
cli
adc
or
mov
mov
or
mov
sub
icebp
inc
test
lds
sbb
lods
int3
(bad)
add
fild
mov
mov
dec
stos
mov
lahf
xchg
ins
xchg
outs
lea
cmp
movs
xor
not
mov
not
dec
push
push
(bad)
aas
mov
pop
dec
movs
aaa
rcl
xor
ret
cmp
mov
call
(bad)
dec
sbb
sbb
daa
push
ror
mov
ror
or
test
inc
jl
or
sbb
sar
cmp
pusha
mov
xchg
sub
inc
pop
or
pusha
mov
jbe
mov
adc
xchg
mov
pop
xchg
inc
dec
push
xlat
inc
cmp
btc
test
bound
mul
fst
scas
pusha
push
add
cmps
push
push
pop
movs
call
pop
out
xchg
je
pop
aam
mov
int
inc
sar
sbb
xor
inc
xchg
dec
or
jle
pop
dec
aad
pusha
loope
setno
xchg
pop
sbb
stos
fnstenv
rcl
int3
idiv
push
ret
in
xchg
bound
stos
rdpmc
(bad)
es
xor
enter
lock
repnz
(bad)
int
rcr
and
dec
xor
ret
shl
sbb
xor
inc
push
xor
mov
retf
sbb
not
push
jno
(bad)
and
jne
and
sbb
ss
inc
xchg
punpckhbw
(bad)
fsubr
push
imul
add
jae
push
les
xchg
jmp
xchg
popf
inc
xchg
jns
test
dec
sub
cmp
pop
mov
jle
inc
lea
icebp
ss
or
aaa
cmp
repnz
icebp
add
jb
jp
inc
sbb
and
aas
push
js
in
adc
dec
jne
mov
cmp
mov
scas
sub
add
cmp
xchg
xchg
inc
push
pop
push
std
cmp
popa
iret
xor
into
xchg
shl
xchg
fiadd
sub
push
and
add
cmp
fisub
call
scas
dec
ret
out
pop
repnz
adc
sbb
sbb
lods
mov
stos
ds
call
jno
ret
push
push
xor
leave
add
mov
or
clc
ss
retf
movs
sub
jp
and
adc
pop
xor
xlat
out
push
js
adc
cmc
pop
push
or
sar
mov
sbb
lods
pop
ficomp
int
adc
sub
and
call
mov
in
mov
mov
dec
rcl
call
mov
fistp
or
outs
aam
je
daa
gs
fbstp
test
std
test
dec
xor
mov
add
adc
cwde
jbe
add
xor
xchg
adc
pop
stc
and
add
cdq
movs
ins
pop
cmc
iret
jbe
fwait
add
popf
push
stos
dec
xor
add
out
js
push
add
and
and
cmp
out
not
loope
xor
cmp
outs
inc
movs
mov
or
adc
je
sar
jns
mov
mov
sbb
or
inc
sub
les
dec
xchg
add
jnp
out
shr
xchg
ss
push
dec
adc
and
jmp
push
jp
les
sahf
stos
sbb
ins
jno
add
push
and
xchg
or
ret
test
adc
xor
in
clc
fwait
jge
int3
xchg
or
push
mov
leave
adc
fst
jle
dec
in
cmp
sbb
in
(bad)
push
mov
xchg
loopne
or
mov
or
bound
push
fs
pop
or
add
mov
pop
sub
jns
dec
mov
mov
fadd
and
imul
jb
shl
notrack
dec
xor
mov
jae
xchg
sub
out
scas
pop
lods
int3
jno
pop
adc
stos
jmp
push
add
jmp
xor
call
mov
pop
or
retf
in
mov
adc
dec
shl
jge
push
inc
cmp
rol
test
shl
repz
ret
test
and
mov
mov
aad
ins
xchg
xchg
aas
sbb
xor
and
jge
xchg
cwde
retf
mov
jno
xchg
xchg
daa
jmp
push
icebp
arpl
fwait
jecxz
add
into
out
sbb
(bad)
aas
sub
sub
outs
sbb
repz
inc
not
iret
sub
mov
stos
mov
retf
mov
pop
loopne
mov
cmp
jns
ret
mov
int
test
inc
jmp
jl
outs
js
popa
cld
adc
dec
pusha
daa
pop
jo
enter
div
shl
lea
mov
and
fcom
push
(bad)
jecxz
mov
mov
rcr
inc
adc
fild
dec
das
mov
xchg
imul
mov
mov
ret
retf
mov
(bad)
lds
(bad)
mov
adc
pop
popa
xor
test
push
loop
int3
mov
jmp
adc
mov
mov
pop
inc
jns
push
dec
sbb
pusha
(bad)
push
icebp
lock
bound
pop
jns
dec
nop
add
mov
test
les
(bad)
xor
xor
push
adc
jno
sbb
inc
and
mov
xchg
mov
dec
push
ret
xor
fbld
adc
iret
lds
push
xor
mov
aam
xchg
push
lahf
sbb
shl
dec
into
cdq
jbe
lods
lods
es
or
mov
or
(bad)
mov
mov
daa
(bad)
push
xchg
enter
ret
xor
enter
sbb
xchg
enter
sub
jns
dec
bound
aas
push
xor
call
es
fld
lods
jo
inc
pushw
ror
mov
adc
xchg
movs
dec
mov
test
mov
adc
into
mov
repnz
stos
loop
add
ror
adc
ficom
xchg
push
push
sahf
nop
adc
sbb
add
xor
enter
outs
addr16
add
mov
dec
jmp
dec
dec
jmp
daa
popa
sar
pop
or
mov
(bad)
mov
cmp
jnp
ss
pop
mov
(bad)
fnstcw
jae
and
aad
add
xor
lahf
add
xor
adc
mov
ins
dec
scas
mov
or
xor
lahf
push
mov
(bad)
cmp
mov
xor
mov
in
mov
repz
ret
out
mov
nop
dec
adc
in
sbb
cmc
call
mov
mov
movs
or
movs
pop
push
int3
int
sbb
call
outs
in
inc
sbb
test
inc
js
jge
(bad)
mov
outs
test
fdiv
call
xor
icebp
test
push
test
xchg
mov
movs
jle
jle
cld
xchg
dec
xchg
push
mov
aas
sbb
adc
aam
in
fnstcw
push
sbb
(bad)
push
sahf
add
inc
xchg
adc
dec
jns
mov
int3
lea
dec
call
cs
or
ss
push
inc
std
add
popf
pop
icebp
add
icebp
or
and
mov
(bad)
shl
dec
sbb
xchg
xor
inc
mov
int
retf
jg
inc
ss
clc
cmp
mov
jmp
ror
imul
xchg
retf
cmps
mov
in
sbb
add
dec
into
(bad)
sbb
popf
in
mov
jg
mov
loope
mov
fdiv
lock
lds
mov
dec
stos
in
aaa
fucomip
or
xchg
fwait
jne
clc
ss
(bad)
sbb
(bad)
fisttp
jbe
in
jecxz
xchg
in
das
lea
shr
scas
dec
adc
or
jmp
lods
mov
or
cmp
pop
xchg
jbe
out
cmp
pushf
push
push
mov
inc
mov
jae
aad
jae
retf
and
mov
add
xchg
cdq
jecxz
retf
xchg
js
pop
sbb
pop
add
(bad)
cmp
dec
inc
pop
sbb
inc
rol
fs
std
rcl
int
cmp
arpl
mov
cmps
jl
pop
and
mov
sub
inc
fsub
inc
push
sti
add
jg
xchg
out
cmc
pop
sti
popa
mov
xchg
loopne
push
xchg
sub
test
xor
push
or
mov
xchg
popf
scas
xchg
add
jmp
xor
fstp
pop
xlat
int
cmp
push
stos
xchg
aaa
xlat
cmp
les
or
pop
xchg
je
mov
jns
int
xor
fstp
jg
movs
mov
mov
rcr
xor
into
arpl
mov
mov
mov
inc
test
inc
mov
call
ja
mov
mov
inc
ds
dec
ds
cmc
int3
repz
je
scas
push
pop
mov
push
sbb
addr16
and
sub
jecxz
cwde
and
mov
imul
loope
mov
cmp
cli
cmp
mov
adc
lods
popf
mov
inc
jns
lods
daa
mov
mov
xor
inc
ins
add
stos
stos
inc
xchg
ja
xor
adc
xchg
inc
jl
lds
movs
mov
neg
cmp
jecxz
cwde
dec
jmp
mov
mov
rol
in
(bad)
or
cld
push
xor
fisubr
and
xchg
adc
or
aas
jbe
inc
scas
ja
es
hlt
sub
cdq
retf
or
mov
xchg
cmp
sub
adc
je
cmp
mov
push
div
lods
mov
out
call
mov
test
jge
(bad)
pusha
xor
pop
dec
mov
out
jnp
fiadd
mov
jno
in
scas
pop
(bad)
cwde
or
retf
pop
das
loop
push
xor
out
pop
sahf
call
fstp
loopne
(bad)
ss
shl
ja
aad
jns
add
push
jno
das
xor
add
fwait
xchg
sub
adc
sbb
push
pop
xor
or
fidivr
pop
(bad)
stc
xlat
rcl
mov
js
and
jmp
sar
in
adc
ret
pop
jbe
(bad)
in
pop
pop
je
push
jae
imul
mov
mov
sahf
mov
mov
lds
retf
push
pop
int
test
loope
xchg
add
or
xchg
cmps
psllw
leave
call
outs
cwde
jno
mov
fldl2t
stos
out
std
jmp
jg
enter
sub
push
daa
sar
sbb
inc
ficom
sub
jl
mov
iret
add
js
jno
loopne
jecxz
sti
ds
pop
pop
fcomp
jbe
sub
sub
jno
test
pop
jae
inc
mov
add
mov
jg
push
aad
(bad)
mov
push
mov
cmp
je
stos
outs
je
adc
mov
xor
mov
xchg
mov
mov
or
sti
loope
in
jne
repz
jg
mov
(bad)
sub
test
push
dec
pushf
sub
cmp
or
xlat
and
leave
nop
inc
sub
scas
dec
lods
jnp
fbstp
jo
pop
xchg
test
sub
inc
sahf
(bad)
test
fs
add
inc
jns
imul
int
aaa
or
scas
call
xchg
out
repnz
into
je
ret
call
lods
fmul
adc
or
mov
ss
lds
add
xchg
mov
dec
jae
dec
sbb
shl
push
jmp
inc
rcl
xor
xor
push
adc
rcr
shl
in
or
cmp
in
fidivr
imul
pop
shl
icebp
cmps
dec
sub
ror
outs
add
or
prefetcht0
mov
shl
mov
push
cmp
shl
inc
jno
icebp
or
lock
jae
ds
push
cld
lahf
xor
jl
or
add
inc
jle
dec
pop
inc
xor
sub
ins
(bad)
imul
pop
pop
jbe
cmp
mov
jecxz
sar
call
out
out
jae
jne
je
sub
hlt
iret
sbb
or
sub
pop
repz
pop
cli
push
push
pop
cmps
repz
xchg
iret
(bad)
clc
out
mov
test
repz
aam
iret
out
adc
xor
js
pop
inc
(bad)
movs
mov
arpl
out
push
dec
mov
xchg
dec
fcmovb
das
loop
(bad)
aam
mov
inc
mov
bound
and
mov
lea
fcom
mov
das
xor
popf
(bad)
outs
push
mov
jnp
mov
mov
mov
in
jge
mov
mov
es
imul
cmps
adc
dec
dec
dec
adc
jg
(bad)
outs
retf
ffreep
test
cmc
les
xchg
addr16
mov
inc
int3
inc
ret
hlt
sub
sbb
mov
jae
fist
ret
dec
das
jl
push
mov
in
xchg
dec
push
push
push
adc
mov
mov
dec
fucomp
(bad)
jmp
and
xor
cs
adc
repz
dec
push
ins
movs
mov
dec
mov
or
pop
ds
ins
aaa
sub
pop
xor
mov
jmp
push
retf
push
mov
test
dec
jecxz
add
mov
sub
js
scas
fldcw
leave
or
inc
and
pop
cwde
cmps
and
enter
ss
lock
clc
js
sar
add
pop
fwait
and
jbe
lock
movs
nop
icebp
push
mov
push
and
icebp
stos
shr
pop
mov
test
dec
and
mov
pop
inc
sbb
push
fidiv
cmp
push
lahf
pushf
outs
push
push
stc
nop
fisttp
and
inc
add
dec
lea
mov
shr
enter
ins
mov
loop
inc
xchg
aam
mov
cmp
dec
jmp
mov
mov
push
jae
and
loopne
inc
(bad)
rol
inc
adc
or
out
clc
test
xor
adc
inc
xchg
scas
arpl
ret
inc
inc
pusha
ficomp
or
fisttp
test
lods
fbstp
shr
fst
dec
sub
dec
sub
sub
leave
push
push
xchg
dec
test
jae
mov
add
mov
pusha
jns
inc
xor
and
mov
scas
inc
pop
inc
ss
push
push
cmp
das
or
or
xlat
sbb
out
jmp
jecxz
xor
icebp
add
repz
aam
test
out
xchg
ss
imul
retf
or
add
dec
(bad)
and
xchg
xchg
popf
and
mov
or
mov
sub
pop
mov
aam
loope
sbb
push
xor
inc
je
cmps
outs
push
fwait
mov
inc
(bad)
cmp
sub
ss
jmp
aaa
inc
test
ret
pop
aam
mov
(bad)
push
scas
xor
retf
sbb
xor
outs
jecxz
or
dec
test
aas
xor
push
ret
mov
mov
push
cmp
rcl
xor
out
popf
ins
loopne
fdiv
ret
sub
sbb
test
or
inc
and
movs
jnp
or
and
sahf
xchg
js
and
call
mov
movs
nop
inc
nop
dec
mov
icebp
cli
test
mov
test
(bad)
nop
xchg
cmc
jae
jne
popa
addr16
rcr
jmp
jl
pop
add
cs
popf
je
in
(bad)
loopne
cmps
lods
push
cmp
les
pop
cmp
ja
scas
lods
les
jne
mov
sbb
in
sahf
pop
xchg
idiv
fisub
shr
ret
std
and
mov
jle
xor
mov
ins
sub
call
mov
call
lea
or
inc
pop
and
mov
and
stc
adc
and
bound
xchg
adc
hlt
push
ds
push
test
push
pop
ret
dec
push
add
xor
inc
adc
xor
xchg
push
sbb
cld
(bad)
mov
mov
nop
mov
xor
sti
xchg
push
mov
imul
mov
xor
vmwrite
xlat
mov
inc
retf
inc
pop
loop
pop
add
repnz
test
sub
mov
jmp
ss
fistp
stos
add
mov
nop
dec
stos
loopne
cld
xor
loope
sahf
pop
push
push
sbb
inc
adc
push
(bad)
pop
sub
mov
or
dec
mov
or
mov
pop
sbb
(bad)
repz
mov
in
jbe
push
test
retf
xchg
outs
inc
dec
push
xor
call
div
mov
call
push
adc
retf
jne
pop
(bad)
movs
lods
push
cmp
out
mov
repnz
cmp
loope
or
in
jo
js
adc
dec
test
inc
ja
out
or
inc
call
std
(bad)
mov
inc
fld
inc
add
loop
pop
sub
sub
es
daa
jmp
repnz
stc
add
ret
rcl
retf
dec
scas
addr16
into
lock
data16
push
fisubr
mov
cmp
data16
in
in
push
call
sub
repnz
mov
sub
xor
aas
inc
mov
push
loope
movs
inc
inc
fisubr
out
fadd
popa
fld
cmp
stc
push
xor
aad
in
movs
and
dec
jae
cld
fstp
out
mov
(bad)
fst
inc
test
js
scas
les
repnz
inc
(bad)
lock
mov
dec
popf
sub
ins
sub
call
push
xor
out
or
jecxz
cmp
shl
mov
enter
int3
sbb
(bad)
aaa
xor
pop
xor
pop
clc
popa
or
cmc
shl
mov
lock
xchg
pusha
xor
in
mov
ins
mov
gs
cmovp
pop
xchg
mov
or
sti
mov
mov
popa
dec
sub
jmp
xchg
fimul
jp
pop
arpl
mov
push
mov
test
jg
stos
adc
neg
mov
fwait
mov
loop
sbb
enter
push
sub
cmp
test
or
mov
sbb
pop
sbb
push
and
add
int
pop
addr16
pop
cli
enter
nop
mov
mov
push
arpl
stos
jns
or
mul
sbb
jge
or
adc
out
sbb
lods
retf
iret
lock
push
xchg
mov
and
lahf
shl
push
lods
paddq
sbb
ret
popf
loope
add
mov
pop
in
sub
scas
add
test
das
out
lahf
dec
pushf
das
bound
cmp
(bad)
(bad)
jmp
xlat
jno
push
sbb
fbstp
pop
sbb
or
add
jne
pop
xor
pusha
jne
pop
dec
(bad)
psrad
add
inc
pop
xor
shr
adc
test
ret
jmp
mov
push
scas
rol
out
dec
xchg
cli
pop
loop
mov
aas
push
jle
ss
lock
mov
cmp
pop
dec
(bad)
(bad)
push
mov
pop
fldenv
in
xor
xor
and
mov
xchg
push
inc
xchg
dec
sahf
xor
call
xor
xor
jnp
or
jecxz
or
movs
adc
or
(bad)
scas
mov
xchg
fwait
xchg
mov
mov
mov
pusha
(bad)
lods
pop
into
push
push
lods
(bad)
sar
in
sub
jmp
(bad)
loop
xor
(bad)
adc
xchg
xor
loope
clc
and
clc
out
push
fidivr
enter
jg
fisubr
adc
es
jb
in
add
add
call
dec
popf
push
stos
pop
inc
add
xor
cmp
mov
movs
xor
xchg
xchg
hlt
or
popa
pop
test
repnz
call
pop
mov
jns
addr16
push
jnp
lea
sub
xchg
paddusb
loop
fadd
shl
lock
adc
mov
test
es
dec
xor
or
pop
dec
cmps
jnp
inc
or
loope
outs
add
jnp
test
or
(bad)
mov
inc
adc
cmp
xchg
and
test
imul
push
ins
movs
fs
mov
aam
loopne
or
mov
mov
loopne
add
test
fs
rol
xchg
mov
aas
or
nop
jbe
iret
pop
fnsave
mov
pop
jg
enter
or
scas
mov
sub
xor
fbstp
(bad)
int3
add
xor
sbb
nop
ror
add
aaa
test
push
mov
mov
mov
mov
frstor
push
fistp
and
(bad)
adc
sub
or
scas
pop
jg
dec
cli
sbb
frstor
jecxz
ret
dec
pop
mov
push
add
mov
ret
xchg
arpl
and
mov
in
push
cmp
adc
fwait
cs
fmul
mov
and
mov
jne
(bad)
mov
rcr
dec
daa
ret
dec
push
push
xchg
stos
loope
jecxz
loope
mov
mov
jg
mov
dec
fnstsw
pop
dec
cmp
or
call
mov
inc
lea
int
cmc
mov
call
lds
sbb
fs
fsqrt
mov
sbb
scas
rcr
xchg
and
int
cld
aas
das
mov
(bad)
push
stc
mov
rcl
dec
dec
push
inc
xchg
pop
int
dec
and
cmps
rcr
push
iret
mov
shl
mov
clc
scas
xor
es
pop
fimul
cmp
mov
jo
jns
pop
or
fwait
imul
es
(bad)
out
nop
sbb
inc
dec
cmp
dec
pushf
out
lods
mov
jg
lahf
or
or
addr16
inc
lds
imul
lods
cmp
sub
cmps
call
ins
mov
mov
clc
sets
cmp
cwde
xchg
xor
outs
popf
mov
fdivr
add
dec
not
je
dec
or
pop
push
(bad)
fisub
mov
enter
sbb
cmp
fwait
inc
push
call
and
test
xchg
mov
mov
jp
or
pop
gs
movs
ins
cmp
fwait
popf
pop
adc
retf
das
lods
xchg
sti
shr
push
retf
mov
mov
loope
stos
in
cli
fucomp
in
push
fistp
mov
and
sub
xor
xor
into
frstor
pusha
test
mov
jb
add
jne
push
je
stos
adc
sub
cld
sbb
add
ret
jb
cwde
add
hlt
les
and
push
jle
sbb
sti
in
cmp
(bad)
mov
cdq
push
mov
mov
xor
add
push
dec
cmp
xor
(bad)
out
inc
mov
stos
shl
dec
mov
fwait
ss
mov
rcl
or
jmp
addr16
push
es
fucom
xchg
fs
push
mov
shl
movs
inc
dec
inc
test
pop
jae
sub
mov
fwait
pop
inc
leave
sbb
into
fldenv
nop
xchg
sbb
jnp
dec
adc
jge
add
cmps
shl
je
shl
lods
ds
mov
cmps
sbb
jnp
push
sti
neg
add
sub
out
fwait
push
nop
data16
pop
jl
sbb
into
popf
shr
mov
dec
in
ret
lods
jmp
pop
push
lods
and
fbld
ds
cmp
mov
dec
jle
xchg
gs
pop
adc
mov
sbb
cwde
(bad)
outs
pop
xor
xchg
add
dec
stc
mov
scas
mov
(bad)
mov
and
push
or
mov
ins
or
adc
add
jg
mul
pop
or
jp
mov
fisttp
aaa
cmp
adc
push
xchg
push
pop
mov
pushf
sub
or
jnp
cmp
repz
xor
xor
or
add
arpl
mov
fstp
adc
adc
inc
cwde
and
mov
xor
sub
xchg
ss
xchg
mov
lahf
rcl
cmp
pop
mov
push
xchg
cmp
jnp
xor
cs
aad
mov
mov
in
push
xor
xchg
nop
in
pop
aas
jle
out
add
loop
mov
ins
add
es
in
cld
ret
and
movs
xor
mov
mov
inc
add
mov
ret
fldenv
mov
out
pop
ja
pop
lea
cmp
lea
rol
jne
mov
or
imul
std
ss
ss
test
dec
pop
mov
lods
pop
retf
xchg
in
xor
jo
ss
retf
out
pop
test
adc
sbb
sub
in
jo
aaa
mov
out
pop
lods
dec
ins
pop
(bad)
mov
hlt
sub
inc
jecxz
adc
xchg
sbb
fs
xchg
outs
out
shl
leave
jge
mov
mov
out
mov
push
hlt
mov
out
or
pop
push
mov
iret
push
pop
inc
cmc
mov
inc
and
inc
sub
pop
int
int3
inc
mov
clc
jb
pop
stc
sahf
and
dec
test
or
or
xor
xor
inc
cwde
push
mov
rol
ror
out
ficomp
sbb
stos
cdq
fst
gs
lock
outs
mov
sbb
cld
sbb
hlt
jne
pop
call
and
ret
mov
sbb
and
cmc
cdq
inc
pop
jbe
sbb
mov
stc
gs
repnz
sahf
push
and
in
mov
out
bound
dec
jecxz
xlat
outs
dec
push
mov
and
sar
fwait
adc
cld
cmp
jg
cdq
fdiv
pop
dec
cmp
ss
stc
cmps
jo
loopne
or
ficom
daa
gs
mov
stc
dec
mov
arpl
xchg
push
mov
sti
ja
xchg
inc
int3
in
mov
adc
mov
jmp
add
dec
int3
sahf
aas
mov
xor
(bad)
jmp
push
inc
es
sbb
lods
pop
iret
mov
popa
div
out
scas
outs
inc
sub
cmps
out
or
ins
inc
pop
pop
sub
sbb
cmp
xchg
add
out
mov
ja
and
dec
scas
mov
and
and
jmp
in
xchg
inc
sub
scas
xchg
mov
cmp
sbb
mov
rcl
das
push
inc
mov
mov
dec
loopne
dec
inc
jns
fwait
add
cmp
cmp
or
jp
test
jae
dec
jg
pop
dec
mov
or
add
jbe
jl
mov
and
fdiv
jge
les
addr16
add
js
mov
ins
jge
inc
stos
mov
outs
cmps
inc
push
cmp
fdiv
jno
sahf
in
cmp
(bad)
cmps
adc
cld
xchg
push
or
and
sbb
cmp
sbb
pop
les
add
sub
neg
mov
xor
sti
jecxz
pop
enter
out
xchg
test
push
les
sub
pop
mov
jnp
sti
mov
dec
sub
into
scas
jle
xchg
gs
scas
test
shr
ja
xchg
mov
dec
mov
repz
fwait
pop
mov
movs
jo
pop
add
sub
dec
lea
outs
xor
inc
cmp
fcmovnu
push
je
ss
cmps
pop
jecxz
ss
and
outs
jo
jmp
aad
or
fwait
push
push
shr
int3
pop
push
aam
xchg
out
stos
dec
dec
jecxz
call
fmul
inc
or
pusha
push
ins
pop
stos
pop
out
(bad)
(bad)
into
xor
jmp
leave
sub
mov
cmc
push
ds
fsub
in
sbb
mov
mov
out
dec
xor
jecxz
fcomp
jge
dec
stos
jb
aad
imul
cmp
mov
lea
stc
fisttp
sub
sti
call
mov
add
dec
cld
jnp
int3
leave
mov
cmp
sbb
xchg
(bad)
ins
dec
retf
cmc
jg
cwde
movs
adc
ss
lahf
mov
ins
lods
inc
in
mov
mov
shr
out
das
xchg
push
mov
fst
repnz
inc
push
lock
add
pop
test
xchg
lahf
pop
or
shl
cld
jecxz
push
(bad)
cli
pop
jno
das
sub
or
xchg
add
cwde
sti
je
mov
arpl
cmps
pusha
or
or
xchg
cli
fwait
int
leave
repnz
jae
mov
fmul
cs
dec
lea
mov
lods
and
jge
mov
fcom
fisubr
push
in
mov
mov
xor
pop
inc
or
pop
mov
and
dec
adc
out
and
xchg
pop
and
and
inc
fcom
scas
pop
push
and
cli
cli
adc
shr
inc
sub
push
xor
retf
add
into
jg
iret
fisubr
mov
push
sbb
loope
push
in
and
add
sbb
adc
retf
pop
cwde
inc
test
setns
or
pop
stos
mov
mov
data16
test
out
clc
lods
push
inc
push
dec
sbb
pop
cmp
in
ds
push
imul
fisubr
dec
pop
add
test
in
mov
out
push
loop
ss
test
leave
sbb
inc
pop
mov
or
out
push
lods
por
push
adc
repz
inc
xlat
pop
or
or
push
cmp
pop
movs
rcl
add
pushf
in
cwde
fucomi
rol
pop
out
adc
popf
add
xchg
xor
pop
inc
and
and
sbb
popa
scas
fist
xchg
cld
out
mov
xchg
out
addr16
aad
pop
cmp
scas
cli
pop
imul
mul
dec
jl
push
add
jns
(bad)
test
stos
push
add
jb
imul
inc
sub
inc
fiadd
jge
into
mov
das
enter
outs
cmp
jmpw
jno
int
dec
pop
fldenv
loop
adc
sub
rol
repz
fisub
pop
jmp
(bad)
pushf
lock
xor
retf
mov
or
fdiv
dec
mov
mov
ret
repnz
in
cmp
movlhps
sub
adc
jmp
mov
add
cli
aaa
lods
into
dec
lods
iret
mov
push
push
scas
(bad)
cmp
push
push
fadd
dec
dec
test
push
(bad)
cmp
and
inc
xchg
and
sbb
add
xlat
jg
bound
das
fstp
scas
jp
in
repnz
ds
mov
xchg
clc
adc
cld
pop
retf
mov
mov
mov
es
cli
jb
retf
ret
sub
rcl
inc
or
jmp
ret
imul
imul
sub
jge
das
adc
dec
test
scas
push
jp
xor
mov
mov
movs
adc
stc
call
xchg
pop
cmp
add
xchg
push
and
les
in
jg
mov
sub
cmps
test
mov
and
(bad)
fistp
and
cwde
call
mov
daa
loopne
mov
mov
test
push
or
pop
int3
pushf
and
out
ds
sahf
sbb
inc
sub
retf
push
in
dec
lahf
push
mov
aad
test
out
call
(bad)
fsubr
(bad)
je
(bad)
mov
not
dec
sub
aas
mov
adc
stos
fmul
aam
mov
cmc
cdq
popf
fwait
dec
mov
in
fistp
data16
in
sub
aaa
movlps
es
fcmovnb
ds
push
pop
stos
(bad)
lods
daa
popa
mov
mov
cmp
inc
mov
das
sub
sahf
inc
call
dec
jne
sub
pop
inc
sahf
popa
loope
cs
or
test
xchg
call
shr
adc
mov
aaa
loop
or
out
and
dec
pop
fldcw
popa
daa
push
sub
mov
vcvtpd2ps
inc
push
out
and
repnz
jl
pop
out
lahf
dec
test
or
test
out
out
cmp
and
push
dec
mov
xlat
popa
mov
ins
enter
aam
inc
mov
mov
mov
xchg
mov
pushf
jae
and
iret
and
mov
and
pop
retf
sbb
(bad)
test
sbb
in
push
aas
cmp
push
nop
out
mov
mov
std
jb
mov
xchg
lods
cli
fwait
dec
or
rol
cs
dec
pop
pop
xor
je
jns
je
ins
outs
clc
stc
repz
xchg
(bad)
cmp
(bad)
cmp
icebp
pop
stos
in
pop
daa
xchg
inc
pop
data16
(bad)
jg
in
add
cmp
jg
xchg
lahf
inc
pop
adc
out
ret
stos
mov
sbb
mov
sbb
pushf
and
jns
jmp
sbb
sub
shl
test
add
push
ss
ins
aas
cmps
dec
fs
hlt
xchg
mov
cmps
push
loop
es
push
jnp
hlt
jmp
xor
or
mov
int
jle
dec
pop
movs
out
ins
sbb
jmp
nop
and
loope
mov
lods
(bad)
int3
out
das
cmp
xor
leave
leave
jmp
mov
je
sbb
gs
mov
int
inc
das
lds
adc
adc
xor
jo
cmps
stc
sar
bound
cs
lods
fiadd
es
jge
mov
and
test
popf
lods
fnstcw
xor
rol
movs
xchg
loope
cli
mov
test
in
mov
(bad)
pop
hlt
test
mov
or
mov
test
mov
mov
ins
dec
cli
sub
scas
push
mov
and
cld
adc
pop
leave
jnp
fmul
ins
aad
mov
mov
(bad)
retf
jbe
out
inc
sbb
or
retf
scas
push
adc
in
lods
jnp
jecxz
inc
and
mov
leave
cmps
jbe
or
stos
gs
xlat
and
jne
scas
jbe
sbb
push
mov
in
xchg
cmp
pop
int3
dec
pop
inc
mov
stc
ret
jle
outs
outs
jmp
add
mov
adc
stos
xor
(bad)
push
dec
push
ds
mov
imul
mov
es
mov
mov
xor
mov
jl
test
ret
jmp
or
fcomp
mov
mov
std
cmp
push
clc
jo
in
sub
adc
aaa
adc
fs
xor
retf
int
mov
xor
cmp
adc
jecxz
inc
loope
dec
jle
mov
(bad)
cld
mov
pop
adc
aaa
clc
mov
lock
out
mov
xor
in
or
jne
mov
push
xchg
jp
js
sahf
shr
mov
push
loopne
inc
push
xor
shr
mov
or
mov
aad
ins
cmc
out
xchg
into
add
cdq
xchg
jmp
outs
jno
xchg
in
adc
mov
fstp
jbe
shl
(bad)
retf
inc
xor
call
test
cmps
pop
push
push
add
xchg
push
in
or
test
cli
repz
xchg
idiv
push
add
mov
enter
xchg
jne
lods
arpl
jo
pop
test
lods
sub
out
jl
xchg
push
bound
sub
out
mov
mov
mov
fldln2
inc
out
bound
xchg
shl
fcomp
popa
pop
and
pop
adc
xor
mov
push
lahf
cmp
add
dec
repnz
scas
pop
cmp
push
mov
cld
xor
les
inc
inc
and
repz
mov
cmp
hlt
bound
loop
sbb
xchg
enter
lods
into
push
cwde
cmp
push
lahf
inc
ret
dec
pop
jl
dec
lods
mov
and
mov
push
daa
jbe
sbb
xchg
gs
into
xchg
aas
pop
mov
add
jle
jmp
push
imul
jecxz
lods
in
aam
cmp
aaa
xchg
xor
xor
cmc
sbb
cmps
fwait
and
iret
xchg
jecxz
lea
loop
dec
push
pop
inc
mov
(bad)
xchg
lahf
xor
or
adc
jmp
push
vandps
int3
pop
and
mul
mov
jns
jo
lea
mov
imul
mov
add
popa
sub
push
add
repnz
out
pop
jno
out
pop
mov
adc
loop
loope
jnp
inc
loop
popf
enter
cmp
(bad)
inc
je
movs
fldenv
sar
popf
mov
imul
add
(bad)
dec
mov
adc
pop
lds
into
mov
aad
jecxz
dec
int3
jge
pop
xchg
xchg
sbb
jge
pop
ficom
loope
scas
and
scas
jbe
mov
xor
push
in
cmc
mov
xor
icebp
xchg
sbb
jg
icebp
mov
repz
pop
mov
cli
push
stc
retf
add
int
cdq
stc
rcr
mov
retf
and
push
leave
in
ror
inc
in
(bad)
jmp
lahf
repnz
pop
or
push
jmp
pop
and
std
(bad)
cmps
push
fst
pop
cmp
dec
pop
push
push
cmp
scas
add
jge
mov
push
jp
repz
adc
sub
push
xchg
push
push
int
cli
xor
pinsrw
test
cmp
sbb
scas
loopne
jl
pop
cmp
into
dec
push
scas
mov
adc
leave
and
and
mov
mov
bound
xor
neg
ret
stos
add
leave
popf
in
jmp
xor
nop
mov
dec
xor
sbb
(bad)
test
jnp
dec
fcom
jb
adc
pop
cld
inc
and
xchg
inc
push
push
mov
ins
mov
sbb
jl
adc
mov
popa
daa
mov
clc
add
xchg
pop
sbb
fst
mov
push
in
pop
push
hlt
cmp
sbb
mov
repz
ja
(bad)
gs
nop
stos
imul
int3
jae
sub
sbb
sahf
loope
out
addr16
cmp
sub
(bad)
cmps
pop
fnstsw
lock
dec
enter
pop
sub
pop
imul
mov
add
sti
dec
cmps
aas
into
pop
daa
jg
les
jne
add
loope
call
std
add
jecxz
fild
retf
fcmovnbe
cwde
jb
push
rcl
xchg
or
mov
test
(bad)
xchg
mov
ret
sub
sar
cmp
popa
push
fisttp
cdq
jns
add
fucom
retf
inc
xchg
mov
cwde
push
pop
mov
dec
jg
popa
mov
imul
and
adc
inc
jno
xor
dec
lock
out
into
sub
aas
bound
loopne
cdq
mov
mov
cmps
inc
sbb
push
sub
add
dec
mov
sub
sar
stos
fldenv
stos
clc
fld
ins
push
mov
ret
jge
lds
js
xchg
dec
pop
repz
leave
cli
stc
push
jo
fadd
mov
or
mov
jo
shl
jno
call
mov
pop
xor
(bad)
std
js
out
dec
jmp
mov
push
pop
adc
outs
jmp
mov
xor
mov
jle
dec
xchg
push
push
adc
shl
jae
sbb
call
pop
cmp
cmc
sbb
push
jae
push
lods
hlt
dec
ror
pushf
jge
stc
rcl
cli
addr16
call
xor
xchg
hlt
int
or
loop
xor
mov
stos
repnz
cmp
add
jno
call
add
aaa
xchg
adc
test
push
in
dec
push
add
mov
call
iret
jbe
sbb
mov
or
mov
stc
jae
out
inc
es
sub
sub
cmp
stc
pusha
iret
les
test
js
adc
mov
jp
(bad)
xor
bound
xchg
cmp
xlat
into
mov
out
ins
test
push
dec
out
mov
sub
sbb
rol
in
into
test
mov
and
cwde
sbb
aas
(bad)
sub
je
mov
scas
mov
add
inc
int3
loopne
mov
pop
add
arpl
cmps
dec
imul
or
nop
sahf
or
fwait
inc
or
xchg
js
mov
xchg
add
mov
imul
xchg
adc
cmp
mov
mov
jbe
ins
mov
jle
or
je
sub
and
sbb
mov
xchg
jle
push
in
inc
push
adc
pop
out
sub
scas
cmp
sbb
sar
ins
xor
enter
(bad)
sbb
setbe
sbb
jge
mov
idiv
pop
sti
repz
jmp
ins
jecxz
push
adc
xlat
sub
mov
push
ss
jle
mov
cwde
(bad)
test
add
push
lea
int
les
fisttp
inc
lds
pop
dec
sub
jno
pop
push
and
or
sbb
inc
xchg
dec
push
enter
inc
or
std
retf
dec
popa
push
mov
xor
in
mov
jb
sar
pop
stos
jae
adc
sbb
ins
jbe
sub
scas
xchg
push
mov
mov
push
and
dec
(bad)
add
push
movs
test
sahf
cmp
lahf
pusha
jp
cwde
(bad)
out
jnp
cmps
lea
loope
xor
loop
jns
inc
shl
repz
in
aam
fs
movs
inc
adc
jmp
popa
in
inc
rcr
xchg
fcomp
aam
add
jns
inc
bound
xchg
in
push
add
fnstcw
push
(bad)
int3
(bad)
jmp
aad
sub
jnp
xchg
inc
pop
jecxz
push
fld
and
sahf
adc
jge
jb
shl
push
out
mov
push
cmp
daa
mov
mov
mov
and
inc
xor
test
and
pop
ret
test
fcmove
inc
sti
test
data16
mov
inc
sub
(bad)
ror
jmp
fidivr
inc
imul
jnp
or
and
mov
push
add
add
mov
scas
jae
sbb
xchg
out
fdivr
adc
(bad)
or
xchg
cmps
sahf
mov
add
outs
loop
mov
sub
inc
or
test
test
sbb
ins
ins
lods
mov
mov
dec
mov
js
out
cmp
mov
mov
pop
cmc
nop
mov
pop
call
xor
in
repz
popf
cmp
sbb
outs
xor
xchg
daa
sub
sub
push
xchg
mov
stos
dec
(bad)
in
jmp
jns
dec
lar
pop
and
fmul
ins
xor
movs
dec
dec
pop
and
adc
jecxz
pop
repnz
int3
dec
or
inc
ret
outs
(bad)
push
inc
test
add
lea
mov
outs
xchg
dec
push
stc
dec
xor
jbe
imul
dec
jns
repnz
in
scas
imul
addr16
mov
daa
mul
mov
bound
mov
mov
data16
ins
pop
(bad)
in
cmp
gs
xor
pop
scas
js
into
and
pop
outs
xor
and
and
cmps
mov
adc
iret
movs
mov
hlt
cmp
inc
lock
stos
adc
fadd
cmp
jnp
repnz
mov
cmp
std
fnstsw
pop
push
(bad)
in
adc
sub
fnstenv
mov
pop
iret
mov
cmp
cmp
shr
test
dec
ret
movs
jge
jle
push
push
cmp
pop
inc
cmp
(bad)
into
push
ds
push
lds
fnstsw
inc
pop
lock
mov
xor
imul
or
bound
ins
arpl
push
or
movs
inc
xlat
mov
xor
bsr
push
stc
out
rcl
or
push
les
out
or
retf
sbb
add
es
jns
das
push
sub
out
shl
fst
iret
jecxz
and
xor
cmp
cwde
pop
and
adc
add
inc
ins
ja
pop
cmp
pop
shl
test
dec
mov
fcomp
add
stos
jmp
retf
mov
push
mov
je
int3
sbb
test
out
pop
and
jmp
lds
inc
jecxz
call
pop
ror
sbb
scas
mov
imul
jo
fs
xchg
ins
jmp
push
movs
jecxz
mov
adc
add
xor
addr16
popf
aad
mov
(bad)
hlt
stos
mov
loop
mov
adc
cli
dec
js
add
imul
out
jnp
cmps
gs
test
push
or
mov
fldcw
fst
retf
std
popf
movs
call
jg
in
(bad)
xchg
pushf
jle
add
rcl
mov
adc
mov
pop
pop
movs
push
push
xor
icebp
das
mov
jl
push
dec
ret
pop
in
neg
pushf
mov
jmp
sub
push
call
dec
mov
mov
mov
imul
push
aad
mov
sub
dec
jmp
mov
xor
xor
xor
outs
js
push
push
mov
ja
mov
jne
popa
xor
rcl
shl
cwde
sbb
mov
dec
ret
cld
fdiv
popf
sbb
data16
or
push
in
xor
add
inc
daa
jb
test
test
adc
mov
mov
cmp
mov
movs
and
add
pop
sbb
inc
add
dec
mov
mov
and
inc
push
sbb
lock
jmp
sbb
das
movs
mov
xchg
sbb
mov
xor
cmc
int
xor
lods
into
retf
loop
jg
mov
call
adc
cmp
and
js
inc
jl
shl
shr
cs
sub
xchg
or
xor
mov
fstp
fisub
push
retf
inc
shl
jge
loope
bound
repz
cmp
imul
imul
xchg
rol
sbb
outs
addr16
jne
add
adc
cmps
add
imul
and
(bad)
aad
ret
repnz
pop
push
sbb
stc
pop
jo
pop
in
fiadd
cmps
sbb
mov
lahf
cli
jmp
outs
or
and
xchg
xor
movups
in
(bad)
dec
adc
mov
adc
xchg
mov
add
cli
mov
xor
cld
sub
mov
jo
xchg
xchg
xchg
push
mov
mov
shl
arpl
imul
pop
pop
or
lea
sub
into
loope
push
pop
cmps
add
call
sbb
repz
retf
mov
sbb
in
inc
rcl
out
sbb
pushf
push
jae
popf
repz
push
mov
and
jno
movs
sbb
(bad)
mov
fdivr
fdivr
cdq
mov
addr16
pop
jae
adc
inc
(bad)
xchg
aas
xchg
fistp
add
mov
lods
les
push
dec
mov
mov
fwait
add
or
sbb
or
sahf
add
inc
ret
lods
fwait
movs
movs
loope
cmp
js
cdq
jp
shr
ds
or
xchg
add
jno
cdq
enter
out
mov
mov
pop
cmc
inc
mov
ins
out
mov
adc
and
dec
or
mov
call
push
jae
push
pop
repnz
(bad)
sbb
push
cld
fs
dec
movs
push
clc
out
fld
je
ds
in
sub
or
ins
(bad)
lea
ss
(bad)
std
das
loope
or
jmp
xchg
retf
(bad)
adc
cmc
in
xor
ins
test
sahf
mov
xor
jmp
fyl2xp1
sub
repnz
adc
clc
jmp
dec
dec
dec
imul
(bad)
adc
aad
in
arpl
mov
fisub
inc
inc
sahf
jbe
jle
dec
jge
sbb
arpl
push
(bad)
inc
mov
dec
aad
sbb
(bad)
sbb
and
sub
movs
cmp
cdq
mov
fs
jp
sar
out
fwait
mov
fs
pushf
pop
mov
into
fidiv
outs
cld
and
and
adc
jmp
adc
sub
repz
cmps
ss
std
(bad)
dec
mov
xchg
xor
xor
dec
sub
cmp
out
fnstenv
mov
mov
add
and
xor
fs
fcomi
xor
xor
fist
fcmovbe
sub
lods
mov
call
repnz
jl
sub
add
cmp
fild
ss
sahf
repnz
jbe
pop
add
outs
and
mov
pop
mov
neg
jo
stc
test
(bad)
iret
adc
sbb
add
inc
or
lea
push
dec
push
inc
rol
into
xor
fs
int3
mov
outs
xor
mov
inc
jp
cs
jl
jbe
pop
out
jb
lods
test
cwde
out
ds
inc
pop
push
loope
inc
cmp
add
or
adc
repz
subps
or
push
sbb
or
xor
and
(bad)
cmp
into
loopne
pusha
ss
mov
xchg
mov
std
cmp
adc
les
(bad)
push
pop
mov
adc
scas
adc
pop
pop
sti
xor
or
out
jp
mov
test
popa
js
mov
mov
das
adc
(bad)
or
ins
jmp
jno
push
in
jo
movs
pop
retf
inc
call
and
cmp
xlat
les
mov
cmp
das
out
mov
jne
jo
call
inc
add
(bad)
mov
lock
retf
mov
or
addr16
xor
pop
mov
mov
jmp
aas
adc
add
outs
js
jbe
cmp
inc
movs
imul
pop
test
jle
xchg
sub
xlat
jmp
mov
adc
mov
in
clc
(bad)
repz
fild
pop
popf
in
add
rcl
pop
inc
add
sbb
ins
push
xchg
scas
sbb
jb
add
mov
test
pop
sbb
inc
cdq
(bad)
pop
sub
cld
jnp
sub
jg
ret
jae
popa
lods
fldcw
sbb
xor
sub
push
dec
push
arpl
jmp
clc
stos
test
ja
shr
gs
call
hlt
loope
mov
mov
in
cmp
jp
rcr
jmp
adc
sbb
inc
jne
imul
fld
mov
retf
pop
mov
and
pusha
inc
dec
dec
retf
in
pusha
push
ins
rcl
je
fistp
inc
pop
xor
cmp
jns
jno
retf
(bad)
xor
add
cmc
in
and
dec
or
mov
add
jg
test
hlt
pusha
xor
sub
mov
scas
xor
in
leave
push
mov
test
jecxz
int3
ret
jecxz
fist
xor
in
rol
addr16
loop
fdiv
aam
in
xchg
lahf
fisub
mov
fidivr
or
push
scas
xchg
push
call
push
std
mov
jnp
sub
inc
cmc
out
sub
mov
popf
fidiv
aam
xlat
inc
add
lahf
cmps
mov
add
mov
ja
scas
push
arpl
repz
imul
jns
push
pop
jmp
pop
mov
sbb
in
push
aam
pusha
mov
jnp
rcr
sbb
cs
lea
imul
pop
fcomp
sbb
and
xchg
fs
pop
pop
jo
mov
(bad)
mov
scas
sahf
scas
inc
pop
cmps
dec
mov
sbb
sub
bound
mov
popa
movs
push
inc
dec
les
cwde
add
pop
sahf
and
js
mov
fdivr
dec
add
xchg
aaa
sub
push
sbb
mov
pop
enter
pop
pop
dec
adc
repnz
and
cmp
psubsb
or
pop
pop
dec
cmp
fsub
xor
mov
or
jl
dec
fwait
dec
adc
or
mov
and
cs
or
arpl
enter
pop
add
(bad)
mov
ret
cmp
push
clc
adc
cmp
add
and
fadd
jbe
fmulp
int3
mov
loope
cld
aaa
(bad)
iret
out
adc
and
adc
pop
ret
js
jl
sbb
inc
loopne
mov
das
int3
scas
(bad)
cmps
pop
sbb
and
cwde
movs
jbe
inc
fcomp
(bad)
call
popa
and
out
fcomp
int3
out
mov
push
aam
xor
push
jmp
or
xchg
or
clc
push
es
retf
gs
and
dec
pop
(bad)
(bad)
js
shl
fdiv
(bad)
cwde
and
pop
cmp
jb
mov
dec
push
cmp
sbb
add
xor
cdq
(bad)
rol
aas
lea
out
ror
adc
movs
pop
out
or
arpl
jo
in
fisubr
pop
sbb
out
int
jbe
movs
mov
mov
push
or
sbb
out
das
stos
es
scas
xchg
push
fild
dec
stos
lds
icebp
add
repnz
xchg
mov
into
jno
add
mov
add
sub
jl
push
sub
cmovb
jb
and
repnz
ret
pop
in
jg
aas
mov
iret
sbb
jg
fiadd
shl
outs
xchg
jecxz
inc
in
cld
push
pop
or
call
call
test
scas
stos
cmps
dec
xchg
mov
and
outs
dec
scas
add
adc
lea
jecxz
or
repz
ret
shl
xchg
mov
fwait
(bad)
xchg
dec
shr
add
mov
movs
enter
push
mov
in
test
jae
xor
pop
in
or
mov
xchg
adc
aam
dec
stc
mov
or
pop
leave
(bad)
jmp
mov
ret
lea
mov
stos
arpl
sub
sbb
and
jmp
dec
pop
dec
cmps
xchg
sbb
imul
pop
cdq
jae
lds
mov
cld
adc
cmp
stos
push
pop
fiadd
test
test
sub
daa
clc
mov
push
clc
aas
mov
es
stos
fnstsw
test
bnd
or
add
or
and
test
(bad)
sbb
scas
pop
jnp
jae
ss
loop
sbb
mov
xor
add
sub
pop
les
imul
or
retf
fidiv
jl
sub
shr
inc
and
jo
std
rcr
lods
out
mov
add
fistp
repz
mov
cdq
fnstenv
mov
push
dec
or
out
mov
int3
dec
or
enter
jo
mov
rol
popa
inc
jle
mov
hlt
jl
stc
dec
test
fstp
sbb
icebp
int3
in
pop
cmc
repz
retf
mov
inc
stos
push
push
dec
pusha
mov
mov
bound
push
and
xchg
ja
jbe
xchg
retf
push
mov
je
scas
jns
cwde
pop
mov
jmp
sub
(bad)
push
cdq
retf
(bad)
and
pop
sbb
rcl
loope
adc
loop
stos
mov
push
lds
ja
xchg
daa
pop
les
sbb
mov
int
or
test
pop
ds
ins
iret
fsubr
push
shl
ror
pop
push
dec
adc
(bad)
int3
xor
mov
inc
in
stos
mov
aam
sub
pop
push
mov
or
cmps
ja
sbb
outs
lods
pop
mov
bound
outs
add
in
jnp
xchg
sbb
scas
xchg
(bad)
push
js
or
jmp
and
mov
or
dec
ins
jl
push
fidivr
pop
mov
outs
jmp
inc
adc
xor
xor
push
push
cmp
inc
xor
jg
add
mov
jecxz
lods
mov
sub
paddw
hlt
(bad)
mov
jle
ror
xchg
push
mov
sub
lods
ins
inc
imul
es
cli
cld
dec
hlt
jmp
call
aam
mov
mov
and
mov
out
mov
or
xor
not
in
pop
jnp
and
xlat
dec
gs
jp
sbb
mov
dec
popa
jmp
push
add
jae
test
retf
retf
sbb
lahf
test
clc
xchg
stc
cld
dec
cwde
inc
dec
idiv
or
ds
xor
fwait
add
stos
out
push
xchg
push
iret
add
frstor
test
fisubr
add
js
inc
popa
aaa
retf
(bad)
fdiv
pop
retf
das
arpl
in
and
fwait
push
pop
jle
jmp
(bad)
arpl
pushf
idiv
mov
dec
inc
hlt
push
test
mov
imul
cmc
xchg
sub
(bad)
aad
movs
add
loopne
imul
out
pop
ins
and
test
or
(bad)
iret
xor
rol
cmp
push
xchg
in
es
sbb
out
int
jbe
mov
addr16
in
movs
mov
lds
or
rcl
mov
or
and
out
add
sub
inc
mov
aas
xor
jl
aad
imul
sbb
xchg
les
(bad)
loopne
mov
inc
or
mov
sub
jl
and
mov
ret
sub
std
xor
stc
gs
sar
cmp
hlt
(bad)
stos
jae
movs
outs
test
adc
out
dec
push
or
push
or
sar
xchg
shl
es
(bad)
jbe
enter
sahf
dec
icebp
xor
les
dec
mov
jmp
cmp
cmp
cmps
cmp
sub
mov
retf
jecxz
and
outs
mov
in
mov
sub
mov
ins
int3
mov
mov
shl
push
or
cmp
outs
imul
mov
outs
mov
test
cmp
dec
push
cmp
fs
xchg
jnp
cmp
out
adc
push
dec
mov
out
inc
(bad)
xor
cmc
imul
aaa
or
test
movs
nop
push
mov
mov
stos
cwde
aad
push
sti
mov
call
call
das
imul
gs
out
aad
xchg
xchg
or
sahf
mov
outs
(bad)
cmc
xchg
pop
cmp
loopne
mov
and
ja
mov
out
lds
push
loope
fcmovb
dec
adc
rcr
xor
add
pop
in
das
les
mov
fild
call
loope
sub
in
rcl
lods
xchg
jmp
ficom
inc
cs
daa
add
dec
es
mov
ret
(bad)
sti
pushf
test
add
mov
dec
jbe
add
mov
popf
push
cld
xor
mov
(bad)
push
xor
shl
cmps
lock
jmp
or
(bad)
xchg
gs
call
inc
mov
pop
inc
inc
mov
mov
(bad)
cld
add
inc
pusha
dec
and
inc
sbb
in
inc
cmp
ss
imul
fisubr
rcl
push
jmp
inc
push
sbb
mov
add
or
aaa
push
lods
or
push
mov
dec
lea
xor
adc
mov
mov
out
sub
dec
mov
loopne
shl
dec
aaa
jg
and
arpl
mov
std
xchg
fwait
jl
pop
sub
xor
retf
popf
in
in
cmp
movs
mov
mov
shl
sar
pop
movs
imul
mov
mov
iret
std
and
jg
addr16
xchg
test
out
jge
pop
ds
aas
cmp
sbb
cmp
retf
outs
xor
dec
int
cs
xor
sub
(bad)
test
imul
jmp
adc
pop
test
xchg
inc
int
loope
cmp
jbe
jno
dec
push
mov
pop
sub
sub
imul
sbb
pop
adc
test
adc
xor
cli
mov
xchg
mov
adc
daa
push
dec
sbb
into
cli
and
fist
mov
dec
xchg
dec
fimul
cmps
stos
pop
push
cmp
je
or
or
push
inc
pop
sub
mov
leave
adc
in
cmp
out
fucom
test
nop
mov
inc
xor
fnsave
or
push
ds
repz
sub
cmp
movs
ins
lahf
lods
addr16
shr
rol
data16
pop
not
loope
(bad)
add
shr
inc
loop
(bad)
add
inc
jl
(bad)
lods
loopne
shl
xor
retf
xor
mov
out
loope
ins
mov
dec
jge
arpl
in
push
dec
aad
fidivr
sar
dec
shr
fsub
or
xchg
fsubr
and
arpl
shr
std
pop
(bad)
lock
mov
sub
mov
xor
rol
loope
push
sbb
mov
cvtdq2ps
mov
das
and
dec
movs
movd
push
jnp
ja
repnz
sub
mov
add
pop
test
fisttp
mov
sbb
add
dec
shl
pushf
scas
lahf
jmp
dec
jmp
ret
jne
xchg
retf
and
push
sub
leave
test
test
lock
or
adc
pop
adc
lahf
icebp
fnstcw
jno
pop
jecxz
ins
mov
adc
pop
enter
lods
cs
pop
adc
push
fcmovne
jmp
jl
lds
dec
call
jb
mov
into
imul
bound
cmc
mov
ins
(bad)
pop
push
push
xchg
add
test
movs
mov
call
xor
and
mov
mov
add
pusha
adc
push
push
pop
dec
test
push
outs
push
adc
out
cdq
sahf
cmp
mov
mov
xor
sahf
dec
test
es
mov
retf
pop
cmp
shl
out
jnp
add
adc
js
sahf
jle
pop
xor
imul
xchg
shl
cmps
inc
lds
and
aam
test
push
mov
and
pop
outs
xor
mov
sar
inc
unpcklps
dec
mov
cmp
aaa
fs
ret
mov
pop
jle
iret
popf
mov
retf
aas
int3
into
pop
mov
and
test
in
sti
test
pop
aaa
or
dec
call
jl
pop
jge
out
and
rcl
or
imul
xor
lahf
out
fbld
sti
aaa
mov
adc
xor
adc
xor
out
int3
lods
(bad)
and
lds
in
jg
dec
ja
ins
cmp
mov
sub
jnp
pop
mov
add
push
adc
imul
or
lods
cs
ins
mov
movs
mov
ja
jmp
(bad)
in
data16
lahf
call
pushf
fwait
pop
mov
ss
sbb
or
sbb
xchg
jge
pop
push
bswap
xlat
into
std
add
lahf
jne
inc
call
imul
mov
xchg
aad
xlat
aad
loop
retf
je
leave
in
dec
lahf
aad
xchg
jb
shl
pop
scas
jo
or
xlat
imul
dec
sbb
mov
in
cmps
mov
pusha
mov
dec
sbb
rcr
add
imul
xchg
ror
xor
in
in
mov
xchg
sbb
jl
adc
cs
cld
mov
mov
enter
add
daa
inc
lods
or
push
(bad)
cmp
(bad)
js
out
xchg
loop
xchg
mov
fstp
pop
sub
cli
inc
mov
pushf
retf
(bad)
xor
push
pop
out
fnstsw
xor
adc
cdq
mov
(bad)
call
into
mov
imul
xor
xor
sub
fwait
je
adc
mov
fistp
sbb
in
pop
sahf
adc
pop
and
xor
sub
mov
icebp
test
call
in
inc
nop
lock
xchg
add
mov
aaa
aas
je
ds
test
cmp
add
and
aaa
or
xchg
dec
shr
add
(bad)
mov
inc
pop
lahf
retf
jns
jae
in
jge
sbb
inc
lock
dec
outs
cmps
test
or
xor
xchg
push
stos
call
jge
or
scas
inc
(bad)
aam
mov
mov
mov
cmp
and
and
jns
scas
in
call
sbb
mov
and
dec
stos
sub
jg
xchg
in
imul
cmp
add
jb
ret
cmp
or
(bad)
sar
push
xor
or
clc
pushf
mov
inc
ror
inc
ss
imul
popf
js
jno
jns
test
push
dec
ins
jnp
(bad)
sbb
(bad)
mov
les
popa
sub
fdivr
add
sbb
iret
pop
lods
mov
outs
popf
mov
scas
repz
mov
icebp
inc
arpl
and
out
enter
push
nop
mov
xor
(bad)
xor
(bad)
pop
sahf
bound
sar
xor
daa
int
pop
sbb
je
pop
mov
fld
es
jnp
sbb
repnz
xchg
jmp
repnz
sti
and
and
mov
mov
fs
mov
pop
and
clc
pop
or
js
fcom
add
mov
retf
jb
sbb
pop
push
mov
in
sti
(bad)
in
jb
rol
mov
or
int
fcmovb
mov
ja
mov
mov
sub
in
sti
lea
adc
fidivr
shl
sbb
iret
(bad)
lods
movs
sar
mov
push
cmp
and
jae
leave
mov
enter
mov
ds
or
aaa
mov
out
xchg
push
or
fwait
push
sahf
ficomp
out
sub
ret
popf
add
sbb
mov
sbb
xchg
adc
xlat
cmps
int
and
inc
movs
dec
and
(bad)
xchg
rol
mov
gs
mov
mov
jecxz
push
ret
sub
cld
clc
xchg
mov
xor
sbb
push
cmps
jle
push
xchg
(bad)
jnp
int3
pop
clc
les
gs
cld
inc
in
jl
sti
jmp
out
cmc
fst
clc
mov
and
scas
push
loop
cli
sbb
xor
push
out
in
out
sar
adc
jmp
nop
pop
call
mov
xchg
shr
arpl
xchg
cmps
push
mov
xor
je
mov
add
dec
jg
popf
xor
adc
loope
(bad)
fld
fprem
xlat
jmp
ss
add
mov
(bad)
in
xor
(bad)
jg
nop
xor
jo
push
mov
imul
inc
out
ins
sub
jns
test
pop
inc
ja
pop
inc
xchg
mov
pop
push
cmp
push
adc
outs
ins
or
push
jmp
push
dec
(bad)
push
outs
mov
cpuid
or
push
sub
sub
out
xlat
sub
sub
xchg
jae
fldcw
mov
jecxz
sub
lea
sbb
mov
out
push
fsub
lds
pop
inc
cs
xor
test
push
sbb
jmp
dec
sub
test
add
sar
sub
and
addr16
xchg
xchg
in
les
lahf
hlt
pop
sub
jnp
sub
fadd
or
sbb
lock
inc
push
fnstcw
adc
scas
sbb
lods
xor
mov
jnp
mov
ds
adc
(bad)
in
fsubr
pop
xor
iret
add
dec
sbb
sub
add
jg
mov
movs
xchg
sbb
or
call
cld
sbb
push
shl
xor
imul
xchg
jl
jo
repnz
sub
jecxz
and
mov
xlat
or
mov
sub
inc
out
in
and
mov
sbb
ret
out
daa
shl
movs
out
enter
cld
pop
js
nop
shl
mov
inc
bound
inc
pop
xor
pop
out
sbb
icebp
mov
rol
and
jns
and
add
int3
and
ss
test
sbb
iret
sub
jb
xchg
xor
xchg
inc
movs
hlt
stos
sub
lods
mov
mov
xchg
adc
push
fnstsw
addr16
xchg
or
xchg
jb
je
leave
cld
aas
movs
rol
and
mov
or
jge
inc
mov
cmp
push
ins
xor
dec
push
sub
fdivr
mov
sar
clc
mov
or
enter
enter
call
push
mov
dec
pusha
jmp
fcomp
rcl
out
cs
dec
sbb
dec
mov
sahf
mov
loope
adc
jnp
lock
cmp
pop
push
stos
fstp
es
sub
fmul
push
std
mov
arpl
or
inc
push
sub
inc
stos
mov
push
inc
xchg
addr16
mov
xchg
(bad)
pop
movs
mul
test
dec
mov
(bad)
call
out
fbld
push
push
call
icebp
movs
dec
scas
std
fdivp
inc
imul
fnstsw
xlat
pop
xchg
mov
push
mov
cmp
repnz
mov
sbb
push
outs
push
cmp
jne
xchg
or
dec
mov
sbb
mov
mov
into
sub
adc
inc
mov
(bad)
(bad)
dec
push
lahf
js
or
sbb
pushf
dec
xlat
pushf
sahf
or
pop
mov
xchg
outs
pop
cwde
adc
mov
add
mov
das
or
(bad)
adc
jb
outs
adc
mov
pop
cdq
sub
jl
ret
or
jo
dec
xchg
jbe
sti
stc
ret
imul
xor
inc
jmp
push
pusha
jb
jmp
sub
ror
and
movs
shl
loopne
and
xchg
sub
sub
pushf
cmp
sbb
shl
pop
movs
cmp
or
inc
mov
add
pop
mov
bnd
sub
adc
push
cmp
lahf
xchg
mov
pop
(bad)
popa
test
into
push
(bad)
jb
repz
jmp
adc
jbe
and
movs
lods
mov
sub
or
mov
movs
pop
add
ret
test
inc
sub
and
cmp
push
add
add
sar
ds
pushf
ss
cmp
dec
loopne
nop
or
out
jmp
jmp
loopne
dec
int3
push
sti
cmp
mov
sbb
inc
xchg
test
jge
add
pop
test
fdiv
dec
add
sbb
ja
adc
sbb
mov
mov
call
test
idiv
bound
ret
in
aam
mov
out
and
inc
call
mov
cdq
sub
sar
jns
push
xchg
in
cmps
and
ffreep
lods
add
dec
arpl
in
xor
add
xchg
les
inc
push
and
sti
xor
and
in
pusha
dec
mov
dec
fist
mov
pop
pop
outs
ret
and
jge
sbb
mov
or
sub
aad
or
jno
les
jne
(bad)
xor
mov
out
ret
aam
(bad)
xlat
jne
ror
sub
fwait
push
sub
pop
sub
cmps
and
jge
adc
daa
sub
cmps
xchg
fcom
or
test
rol
sbb
xchg
and
adc
pop
jle
mov
jns
iret
stos
inc
jge
mov
ror
icebp
shl
sub
in
(bad)
outs
sub
dec
and
dec
inc
mov
cwde
(bad)
mov
(bad)
pop
mov
add
cmp
xchg
div
and
sub
xchg
(bad)
cmps
xor
test
jo
mov
clc
pop
into
jnp
jnp
leave
sub
(bad)
out
imul
pop
shl
in
nop
inc
xor
daa
inc
adc
xchg
adc
xlat
push
jns
in
leave
dec
xchg
mov
dec
lods
mov
and
popf
mov
adc
fwait
shr
outs
adc
cmps
pop
aas
call
ds
xor
in
dec
les
jp
adc
mov
or
lods
xchg
addr16
mov
cmp
mov
out
aaa
ins
ds
mov
lods
rol
cwde
call
pop
cmps
loop
fisubr
inc
inc
mov
(bad)
fs
sub
mov
add
lods
ficom
mov
fmul
pop
pop
imul
fsubr
rcr
je
movs
inc
adc
enter
into
cmps
mov
fiadd
lock
jp
jae
loop
mov
(bad)
pop
sub
inc
xor
dec
inc
adc
adc
bound
sbb
(bad)
mov
ins
xchg
movzx
mov
iret
jp
retf
pop
push
dec
xchg
pop
jmp
jge
fld
cld
jo
dec
and
or
into
push
mov
jg
cwde
jnp
fnstsw
gs
fild
push
jae
fimul
jnp
mov
fwait
out
leave
pop
das
mov
mov
inc
xchg
jmp
push
jmp
clc
ds
enter
jno
nop
aad
popf
cmp
aad
mov
push
out
jo
sar
push
scas
lock
mov
xadd
add
push
and
enter
jns
leave
cmc
sub
cmps
xchg
stos
add
ror
adc
push
dec
inc
jmp
lea
xchg
out
daa
cmps
push
push
mov
rcl
lds
mov
daa
sbb
xchg
mov
adc
mov
popa
sub
pusha
lock
jle
leave
lock
xor
out
popf
lea
stc
aaa
enter
stos
in
dec
(bad)
pop
pushf
cmps
imul
push
sbb
js
dec
ins
out
in
out
imul
add
push
fnstenv
sub
jmp
ins
aaa
ins
sti
dec
jl
dec
js
jno
ret
adc
mov
jbe
jae
dec
fwait
lea
repz
mov
ficomp
adc
(bad)
dec
dec
shr
cmp
(bad)
jge
add
dec
addr16
sahf
inc
dec
repz
pop
adc
adc
in
popf
cmps
popa
in
mov
mov
test
ret
bound
dec
xor
or
das
mov
jmp
stc
ret
jmp
stos
cmp
stos
hlt
xchg
push
loopne
(bad)
in
int
add
dec
sub
aam
ins
ret
call
push
push
push
call
lds
ja
call
cmp
add
jno
and
xchg
adc
int3
xchg
adc
jmp
pop
stos
xchg
out
aaa
mov
(bad)
lods
push
xchg
pop
dec
hlt
in
imul
and
inc
jmp
jns
mov
in
(bad)
movs
loop
call
leave
(bad)
in
or
fcomp
test
jb
gs
rol
adc
mov
aam
(bad)
mov
inc
or
call
test
add
dec
(bad)
loopne
movs
cwde
outs
mov
mov
pop
adc
and
dec
jbe
xchg
cmps
xchg
div
jbe
dec
pop
loope
mov
out
adc
outs
ss
mov
push
rep
push
jno
(bad)
test
arpl
adc
stos
and
cmp
jge
mov
push
mov
cmp
mov
push
push
mov
mov
les
mov
hlt
or
in
ret
sbb
icebp
mov
inc
jns
jbe
xor
(bad)
outs
data16
mov
push
retf
pop
xchg
out
(bad)
test
call
sub
inc
out
mov
cmp
dec
out
ins
fnstsw
sub
inc
aaa
push
mov
daa
dec
push
ja
mov
xchg
mov
pushf
mov
jmp
xchg
sbb
cli
dec
pcmpeqb
jl
xchg
shr
or
and
or
cwde
sbb
cmp
xor
daa
mov
jle
and
sbb
out
imul
jmp
movs
addr16
loope
pop
lods
es
repz
mov
ror
add
sub
mov
arpl
push
jmp
push
xor
mov
in
mov
sbb
cdq
jns
imul
sbb
push
inc
adc
mov
and
leave
and
sub
movs
push
call
js
mov
cmp
jb
sub
test
jne
mov
stc
push
push
jno
pushf
fwait
out
mov
mov
outs
in
in
popf
dec
push
nop
cmp
pop
cmps
stos
movs
(bad)
mov
mov
rol
lahf
inc
mov
stos
xor
aas
push
stos
inc
dec
and
adc
sub
fdiv
xchg
xor
ins
jb
sbb
ret
into
push
dec
inc
adc
push
cmp
retf
outs
cwde
push
cmp
dec
dec
cmps
out
ret
aas
mov
lods
mov
sbb
or
popf
and
sahf
mov
(bad)
pop
imul
and
cmps
ret
xchg
adc
mov
mov
add
lea
(bad)
into
imul
arpl
jp
push
cmp
ins
pop
sub
das
and
lds
jns
and
push
mov
enter
push
adc
lock
pop
jno
and
pop
mov
icebp
(bad)
xchg
cdq
pop
pusha
adc
outs
jecxz
nop
popa
ins
rcr
push
in
cmp
jle
pop
sub
test
clc
sub
mov
mov
cld
adc
jo
or
cmp
cmp
hlt
pop
sbb
idiv
mov
cmp
(bad)
inc
ins
nop
jmp
outs
or
adc
repz
fild
xchg
std
mov
ins
mov
dec
dec
scas
adc
lods
xor
push
movs
or
mov
dec
inc
pushf
cmp
xor
inc
clc
lea
sbb
aas
in
stc
cmp
dec
rsm
(bad)
mov
jne
test
gs
pop
outs
leave
je
xchg
inc
sbb
inc
fidivr
mov
jnp
vpmaddwd
jbe
push
and
popa
inc
adc
push
mov
sbb
xchg
dec
add
xor
push
mov
iret
jmp
shl
daa
cmp
les
jge
dec
sub
es
stos
out
xor
add
push
lods
test
xor
xor
shl
lea
int
hlt
test
mov
fidivr
pop
dec
mov
xchg
add
pop
xor
sub
les
aam
jecxz
into
pop
lock
mov
xchg
cmps
push
adc
fdivr
lea
cmps
xor
ins
push
jle
xchg
and
jno
pop
mov
push
js
dec
mov
push
mov
mov
mov
push
mov
aaa
adc
xchg
scas
pop
lahf
and
adc
cmp
shl
das
in
les
call
sbb
cmp
xchg
in
push
mov
cmps
pop
cwde
mov
push
hlt
call
lods
loopne
fcmovu
loope
clc
addr16
xchg
repz
adc
sub
in
dec
popa
fdiv
mov
sub
and
rol
daa
or
push
mov
mov
int3
and
cwde
jo
xlat
add
xchg
fild
sbb
jmp
enter
scas
sbb
ret
jp
adc
popa
rdmsr
or
frstpm(287
enter
mov
sbb
xlat
imul
sub
and
add
push
xchg
ret
mov
(bad)
xor
sbb
push
cwde
mov
outs
pushf
ja
fcom
scas
push
xchg
jge
inc
outs
call
into
push
dec
sti
jp
dec
sub
ja
stc
fisubr
pop
jp
pusha
mov
and
jae
lds
movs
int
je
sar
popf
xchg
ja
loope
ins
imul
and
adc
push
cmps
push
fidiv
leave
call
adc
mov
or
loopne
cmp
repnz
int
rep
mov
xchg
call
jl
test
mov
push
test
in
jb
lods
ins
retf
ficomp
sub
pop
mov
out
push
xchg
ficom
cmc
cmp
lods
das
mov
dec
lahf
mov
aad
mov
mov
aas
sub
xchg
sbb
stos
daa
sar
jmp
les
clc
lods
cmp
xchg
in
jne
dec
inc
dec
xchg
jmp
daa
out
mov
ds
push
or
cmp
shr
push
mov
lahf
mov
xor
dec
mov
sub
lea
vcvtss2si
push
pop
cmc
out
push
lock
cmp
adc
sti
sbb
mov
pop
add
fwait
xchg
test
or
ret
shl
rcl
push
add
add
push
mov
jo
gs
aas
or
sbb
cmp
out
ret
repnz
std
shl
cwde
data16
popf
aaa
ds
xchg
push
dec
je
das
jo
imul
dec
call
dec
xchg
ret
jno
xchg
xor
outs
and
add
mov
xor
pushf
mov
jns
jle
pop
adc
das
or
retf
sub
retf
pop
loopne
test
popf
ja
lahf
les
push
lds
add
jg
sub
ds
std
(bad)
xor
mov
lods
jae
dec
mov
fmul
loope
push
sub
or
mov
add
add
xor
mov
call
or
pop
mov
loop
xor
sar
arpl
add
pushw
out
int3
leave
mov
test
adc
jne
ja
fsub
mov
into
loope
in
push
enter
fnsave
and
test
(bad)
push
sub
retf
adc
cmp
pause
xor
mov
clc
add
(bad)
out
out
sub
add
mov
dec
pop
inc
sub
or
arpl
sbb
pop
inc
cmc
add
cmp
mov
mov
sar
sbb
lds
ins
(bad)
repnz
arpl
sar
jo
fwait
stos
mov
dec
push
sahf
adc
mov
add
shr
add
mov
data16
loope
rol
inc
out
stc
push
adc
lods
sahf
pop
popf
movs
call
fisttp
sub
fimul
mov
loop
mov
jecxz
dec
cld
inc
jge
adc
adc
retf
dec
in
in
test
mov
xchg
and
push
pop
das
jbe
add
inc
(bad)
cmp
jge
mov
push
mov
test
jne
fistp
mov
xor
arpl
sub
leave
sbb
(bad)
movs
leave
sub
xor
in
(bad)
in
call
adc
pop
stc
xchg
movs
push
(bad)
push
out
mov
fwait
jnp
aaa
neg
test
sub
adc
vorps
cli
dec
push
cmp
adc
rol
dec
fistp
jb
pop
stos
push
jmp
imul
stos
dec
pushf
scas
loopne
mov
xchg
mov
add
idiv
sbb
repnz
push
mov
push
or
outs
sbb
mov
inc
jb
popa
ret
cmp
(bad)
jnp
add
cmps
in
cmp
fxch
push
scas
adc
push
cs
xor
arpl
cld
push
mov
mov
pop
jge
int3
inc
sbb
sahf
adc
mov
and
xchg
mov
outs
out
jns
push
stos
cmps
and
int
mov
aaa
mov
outs
and
xchg
jmp
push
jnp
out
mov
mov
mov
imul
push
gs
arpl
fwait
mov
sub
movs
repnz
jecxz
int
pushf
test
mov
jg
sbb
inc
sbb
iret
inc
cli
xchg
cmp
arpl
fidivr
into
movs
iret
test
(bad)
neg
push
jne
mov
ds
into
xchg
pop
rcl
loop
out
xchg
outs
pop
jg
or
mov
into
push
xor
lahf
sub
mov
pop
(bad)
repnz
push
js
mov
cmp
imul
jg
jo
je
mov
mulps
jp
cmp
and
enter
mov
jno
jns
pop
dec
(bad)
cmp
push
repnz
pop
scas
out
cmp
xor
adc
or
mov
test
daa
and
lock
outs
pop
adc
mov
sub
hlt
fdivr
mov
mov
push
les
movs
movs
(bad)
(bad)
clc
mov
repz
(bad)
jne
mov
xchg
sbb
mov
jl
lods
xor
inc
ficomp
loop
add
das
mov
jecxz
adc
les
cld
in
ror
sti
xor
psubusb
sub
sbb
push
fwait
dec
and
or
add
add
loop
push
mov
dec
xor
or
mov
adc
sub
xor
jb
nop
jbe
mov
imul
aaa
jp
jo
arpl
leave
nop
sub
(bad)
fcom
fwait
push
imul
cmp
test
(bad)
loop
stos
scas
jmp
push
stos
inc
jbe
int3
sbb
cld
stos
test
mov
sub
out
push
push
lea
imul
add
enter
out
cmp
cwde
addr16
jo
and
push
xor
jnp
stos
cld
fimul
xchg
lds
in
mov
push
out
jno
inc
in
loop
cmp
mov
fstp
and
xchg
add
int
pusha
cmc
or
jmp
cmp
leave
cwde
jmp
or
hlt
or
jp
xchg
xor
(bad)
mov
add
and
inc
cmp
fadd
lods
clc
test
inc
sub
xor
(bad)
cdq
pop
dec
imul
imul
sbb
aad
mov
sub
out
push
inc
cs
mov
movs
repnz
sub
mov
test
sbb
mov
mov
pop
out
sub
adc
in
daa
pop
or
fs
sub
mov
add
(bad)
mov
mov
pop
add
dec
iret
jnp
pop
lahf
(bad)
int3
jb
stc
cs
jge
add
shr
push
add
(bad)
lock
cmp
pushf
scas
jmp
cld
xlat
pop
dec
shr
rcr
fcmovnb
dec
in
push
outs
mov
cmp
fiadd
pop
shl
stos
pusha
cs
push
adc
inc
mov
and
sbb
repnz
push
cli
xchg
and
mov
hlt
cmp
sbb
jae
push
gs
cmp
mov
and
mov
ins
dec
push
cwde
jmp
stc
adc
xor
push
outs
jecxz
clc
and
dec
(bad)
push
jle
sbb
popf
xchg
(bad)
out
loop
aad
sti
pop
cwde
sbb
mov
addr16
add
xchg
push
sub
std
or
lahf
push
aam
pushf
cmps
or
sub
inc
jl
sbb
xchg
cmp
add
lods
xor
lahf
jmp
repz
test
sahf
ds
retf
sahf
mov
lock
cli
jo
push
sub
sar
jnp
mov
(bad)
push
fcomip
xor
jp
popf
jb
jbe
xor
xchg
lea
ret
jge
jg
neg
mov
and
xchg
fst
mov
call
ror
jno
adc
xor
hlt
xor
sbb
mov
cdq
clc
retf
pop
jmp
es
xchg
out
mov
mov
and
push
ja
outs
aam
pop
sahf
sub
cmps
jp
shl
int
cmp
add
arpl
fdivrp
call
(bad)
sub
or
sbb
fld
pop
dec
out
cmp
arpl
(bad)
fcmovnbe
or
cmp
inc
stos
or
test
cmp
pusha
inc
jmp
jp
add
pop
fstp
adc
inc
xchg
xchg
dec
hlt
pusha
xchg
push
mov
sti
movs
jmp
xchg
mov
mov
adc
push
push
fs
mov
div
or
enter
jo
jb
retf
out
add
push
call
ja
dec
mov
cmp
call
or
cmp
iret
jo
pop
bound
retf
adc
ins
mov
sbb
(bad)
out
pushf
mov
clc
lock
pushf
mov
fsubr
pop
scas
in
or
repz
push
in
dec
fcos
jmp
in
aad
inc
js
mov
jo
push
dec
xlat
loopne
les
xor
mov
push
fist
retf
nop
mov
inc
sbb
mov
mov
dec
cmp
push
jno
sbb
(bad)
and
mov
and
push
aaa
mov
pop
in
jbe
xchg
mov
cmps
retf
cwde
and
or
call
cmps
aam
inc
jmp
neg
jle
cs
test
icebp
jnp
cdq
popa
or
pop
sub
jns
dec
int3
dec
add
cmp
push
cmp
call
int3
dec
loope
or
jmp
xchg
jmp
cmp
mov
mov
retf
adc
dec
(bad)
pusha
mov
add
xor
push
xchg
fwait
imul
inc
jmp
mov
test
mov
add
lea
push
push
out
sub
out
arpl
pushf
adc
in
fnstsw
stos
je
cmps
inc
mov
iret
fld
loope
sub
fild
test
mov
(bad)
mov
or
(bad)
xchg
ror
and
mov
inc
les
lds
add
mov
cmps
add
jge
imul
xor
or
dec
inc
pop
mov
outs
push
sti
shl
(bad)
jg
xchg
xchg
fwait
popf
mov
call
outs
xchg
add
sbb
pop
push
inc
jg
dec
sbb
sahf
bound
mov
inc
xchg
jle
out
jmp
xor
push
mov
pushf
(bad)
mov
dec
sub
mov
ja
xor
xchg
rcl
pop
push
and
xor
cmps
out
nop
jae
les
nop
aas
test
push
ret
enter
inc
into
ss
sub
push
imul
(bad)
inc
pop
test
xchg
jl
sbb
mov
(bad)
aam
fidiv
inc
int3
jbe
pusha
dec
add
into
add
jbe
(bad)
iret
jl
es
bound
jecxz
push
xor
je
cmp
xchg
cmp
mov
jb
xchg
adc
jo
mov
fs
and
push
or
lahf
adc
sub
sub
xor
arpl
aas
pop
xor
(bad)
movs
lock
sbb
(bad)
fwait
pop
xchg
test
jns
enter
jae
push
mov
jae
and
and
imul
outs
mov
ret
adc
ret
scas
out
test
jns
aaa
push
daa
dec
adc
jae
cmp
movs
or
test
(bad)
jmp
rcr
jns
or
push
lods
daa
push
cmp
sub
inc
ds
retf
retf
not
aaa
call
out
xchg
clc
iret
lods
inc
lahf
stos
popf
xor
xor
mov
add
lds
test
inc
sbb
adc
scas
loope
sub
dec
in
mov
mov
jns
test
loope
aas
push
sbb
cmp
sbb
pop
cmp
enter
cmp
sub
push
in
cli
nop
xchg
sbb
add
idiv
retf
mov
adc
fld
and
dec
xchg
mov
fld
mov
jae
adc
xchg
dec
loope
push
js
xor
out
push
dec
adc
mov
pop
sbb
sbb
dec
add
or
sbb
fldcw
mov
test
hlt
add
xor
jecxz
dec
aam
sahf
icebp
mov
ins
scas
(bad)
js
and
(bad)
xchg
jp
cmp
arpl
ror
add
cmp
pop
(bad)
xchg
xchg
gs
(bad)
sbb
dec
mov
mov
mov
fisub
adc
int
or
sbb
jmp
add
inc
lods
dec
pop
push
repnz
xchg
dec
mov
add
scas
addr16
jle
mov
fistp
(bad)
fimul
xor
mov
fwait
leave
bswap
cmp
jnp
std
test
fbld
and
les
in
xor
pop
movs
inc
jg
pop
xor
(bad)
and
fadd
inc
xor
inc
scas
jle
aas
(bad)
(bad)
jb
add
adc
nop
sbb
jecxz
sahf
add
es
cld
push
cmc
ret
rol
sub
or
add
sub
iret
js
cmp
pop
sub
je
sub
lds
mov
fwait
mov
scas
mov
add
add
shl
sti
loope
shr
in
lock
dec
jae
mov
add
push
retf
jae
pop
jp
push
xchg
in
dec
push
retf
out
int
xchg
test
mov
xor
outs
(bad)
pop
lahf
xor
sbb
mov
sbb
push
mov
sahf
dec
add
mov
pop
mov
(bad)
aaa
or
(bad)
push
xchg
mov
sahf
add
inc
mov
repnz
fnstsw
shr
shl
sbb
sbb
leave
mov
mov
mov
or
inc
dec
idiv
stc
movs
adc
fwait
dec
test
add
aaa
je
cmp
cmp
sub
mov
and
adc
in
or
dec
mov
inc
(bad)
inc
adc
mov
pop
pop
mov
fadd
enter
in
jmp
aas
mov
pop
int
shr
jge
shr
shl
into
push
mov
pop
mov
lock
dec
pop
test
pop
out
(bad)
push
and
ror
pop
pop
xchg
xchg
adc
cmp
fstp
call
fsub
int
push
fbld
rol
and
mov
dec
mov
test
in
mov
fsub
iret
jl
stc
or
mov
cwde
pop
push
xchg
shl
addr16
test
dec
fnstcw
std
xor
leave
pop
call
push
sub
popa
sbb
mov
inc
push
retf
stos
push
aam
adc
es
dec
imul
mov
and
and
imul
fild
jp
in
ret
(bad)
hlt
retf
in
dec
mov
aam
sbb
pop
xchg
sub
cmc
sub
call
push
pop
mov
cmc
aaa
(bad)
dec
das
and
cmp
jl
dec
sub
gs
pop
inc
add
cmp
daa
xor
js
loop
mov
jg
pop
xor
arpl
stc
mov
jbe
pop
inc
and
sahf
mov
inc
dec
lods
mov
call
fisubr
out
mov
imul
mov
jb
push
adc
inc
or
pop
push
mov
pop
push
icebp
jb
mov
ja
retf
ins
add
repz
add
ins
fwait
cmp
cmp
pop
out
or
popf
leave
push
pop
mov
mov
xchg
mov
add
rcr
cwde
jae
jns
cmovle
scas
out
out
nop
int
jae
sub
mov
(bad)
pop
bnd
sub
int
scas
mov
push
(bad)
retf
pop
rcr
mov
(bad)
ins
xor
push
out
xlat
xchg
outs
push
mov
adc
pusha
sub
xor
and
push
neg
mov
jbe
cld
jp
xchg
mov
jbe
aam
lea
adc
(bad)
push
jne
push
adc
lds
or
xor
pop
cmp
mov
sbb
loope
xchg
fadd
xchg
pop
push
jle
pushf
push
rcl
cmps
dec
mov
xchg
rol
setno
xor
rol
fadd
jl
hlt
add
push
xor
adc
add
mov
in
fisttp
int3
jne
mov
or
sub
sub
jl
adc
fnstenv
pusha
jmp
lahf
add
outs
mov
jge
fld
dec
ja
jmp
sbb
test
ja
mov
cmps
inc
dec
mov
and
mov
xchg
jmp
add
dec
js
mov
daa
add
pusha
not
inc
test
shl
mov
xchg
xor
fsubr
std
mov
cs
ds
mov
hlt
int3
mov
outs
jle
pop
mov
push
(bad)
and
aas
sbb
jle
ja
push
and
test
pop
enter
mov
jg
mov
sbb
xchg
std
sub
inc
inc
sub
mov
xchg
inc
xchg
fdivr
dec
popa
mov
push
hlt
mov
mov
dec
push
je
sbb
mov
jle
sbb
stc
imul
or
ins
jmp
push
sbb
loopne
mov
xchg
mov
jle
inc
mov
stos
jo
add
fild
repnz
call
mov
sub
sahf
(bad)
in
inc
push
jle
xchg
push
jae
into
jmp
mov
aad
push
lds
and
sahf
and
xlat
cs
daa
(bad)
imul
mov
xor
icebp
mov
pop
sub
mov
sbb
sub
add
sar
shl
ret
lds
mov
dec
popf
push
ficomp
inc
mov
dec
int
xchg
mov
les
sti
hlt
aam
into
rcl
mov
sbb
cdq
mov
mov
mov
icebp
adc
dec
xor
mov
jge
mul
shr
dec
sub
and
es
jp
cli
int
movs
loop
dec
mov
and
popa
mov
push
cmp
sub
push
ds
or
jae
fucomi
push
adc
inc
mov
sub
cmp
pop
out
shl
in
ret
fnstenv
data16
sbb
push
sub
ffree
pcmpeqb
push
push
mov
pop
cli
xlat
enter
mov
cmp
dec
sbb
sbb
sbb
bound
add
pop
or
and
inc
mov
dec
mov
call
fs
pusha
sub
(bad)
mov
inc
push
lods
and
cmps
in
retf
mul
mov
retf
ins
inc
ins
int3
pop
fist
enter
in
je
shl
push
jecxz
mov
(bad)
pop
mov
sbb
sbb
hlt
inc
sbb
or
or
ss
cmp
out
push
push
push
add
imul
jp
bound
repz
xchg
mov
daa
xlat
cmp
movs
inc
push
fldenv
xlat
sar
icebp
pop
mov
js
xor
dec
movs
pop
cmps
jo
gs
movs
push
outs
das
fmul
fsubp
mov
nop
cmp
and
mov
inc
jne
xchg
mov
xor
test
sbb
out
outs
loope
(bad)
ret
mov
lods
add
aaa
mov
mov
xchg
repnz
adc
push
sub
arpl
push
dec
cmc
xchg
mov
pop
cmp
dec
and
jmp
mov
(bad)
idiv
adc
dec
jle
mov
pop
pop
sti
inc
dec
outs
push
sub
gs
rcl
xlat
adc
pop
frstor
clc
add
fld
push
push
cld
xchg
add
sbb
jae
jno
in
and
in
inc
cmps
xchg
or
jne
fiadd
cmp
sar
sbb
or
sbb
cmp
cs
lds
mov
sbb
out
cmp
nop
dec
(bad)
fdiv
mov
mov
inc
jmp
emms
xchg
lods
das
dec
fdiv
out
push
mov
cmps
dec
sbb
jae
add
ins
loop
fisub
repz
in
retf
and
xchg
dec
push
xor
cdq
cmp
mov
in
cmp
hlt
jmp
mov
fldenv
fild
inc
repnz
loope
xchg
push
outs
into
sub
adc
xchg
hlt
push
and
cmc
mov
push
je
add
and
xchg
jecxz
jecxz
pop
mov
fiadd
(bad)
enter
arpl
mov
hlt
push
enter
aas
stos
(bad)
shr
mov
(bad)
xchg
test
sub
add
push
xchg
iret
push
and
sbb
pop
mov
cmp
ret
xchg
or
into
aam
sub
int
or
dec
inc
pop
mov
(bad)
mov
sbb
fadd
inc
scas
loope
jp
loop
fimul
add
shl
sbb
test
pop
outs
add
xchg
mov
ins
mov
movs
xor
sbb
mov
jmp
fwait
lea
inc
hlt
std
sahf
sub
into
pop
ficom
mov
cmp
daa
mov
data16
inc
cmc
jmp
stos
mov
jbe
fucomip
jecxz
add
adc
sbb
imul
out
pusha
or
xchg
ror
arpl
jmp
mov
shr
cmp
das
and
add
inc
in
sbb
ret
shl
test
xchg
retf
pop
add
nop
test
out
and
ficom
add
jmp
int3
(bad)
jecxz
sub
ja
adc
in
out
sub
push
add
mov
ret
mov
sbb
jb
idiv
or
mov
ss
mov
ror
fsubr
jmp
pop
lods
jbe
xchg
xor
mov
lahf
mov
shl
cmp
pushf
cwde
sub
jne
push
add
movs
xor
xchg
loopne
pop
push
xchg
int3
sti
imul
xchg
push
and
add
neg
adc
fcomp
mov
out
sub
aaa
shr
mov
fcomp
xor
popf
add
mov
and
repnz
int
movs
in
not
add
fidivr
popf
aaa
or
lock
xor
int
ss
or
mov
out
adc
stc
int3
mov
aam
pop
xchg
add
sub
movs
dec
repz
sbb
inc
mov
inc
add
inc
jg
outs
jbe
jg
push
out
movs
sbb
and
adc
ret
repz
xchg
sub
ror
add
clc
jmp
scas
ins
sub
mov
mov
cli
add
cs
sar
inc
or
push
in
pop
push
mov
fidiv
test
adc
lock
mov
adc
lds
mov
test
je
in
cmp
jp
dec
dec
cmc
push
je
lods
test
add
loopne
es
cmp
cmp
dec
lock
std
icebp
and
and
jmp
xor
jge
test
cmp
fidivr
fild
fwait
push
cdq
push
inc
mov
jmp
dec
test
or
sub
mov
jb
int3
jp
cld
fwait
jns
pop
addr16
dec
cmp
jecxz
pop
fimul
mov
add
dec
sub
and
aad
cmp
mov
pop
loopne
mov
gs
inc
imul
or
sti
je
lock
fs
push
enter
mov
xchg
std
mov
mov
fisttp
xor
cmp
inc
jbe
es
xor
cmp
dec
lods
icebp
push
ins
stc
mov
cmc
push
ja
dec
add
push
(bad)
xchg
jae
xchg
fnstcw
inc
loopne
mov
lds
(bad)
cmps
sbb
jo
in
int
cmp
and
stc
ficomp
dec
xor
sbb
into
adc
push
mov
fcomp
cld
aaa
mov
loop
dec
mov
dec
add
cdq
out
adc
loopne
inc
sub
sub
xchg
enter
out
mov
int3
test
pusha
stos
aaa
dec
and
dec
xchg
repnz
mov
jmp
add
shr
push
scas
popf
or
push
test
jb
xchg
mov
leave
xor
push
test
lds
leave
bnd
lods
setle
das
loopne
outs
int3
ror
in
retf
ins
push
mov
movs
mov
fisubr
mov
bound
and
sbb
outs
test
sbb
dec
sub
xor
jno
push
pop
mov
popa
fwait
add
fist
adc
into
push
add
test
sahf
pop
add
sub
jl
out
ins
fisubr
shl
and
xchg
mov
sub
mov
out
jns
add
jle
cli
clc
sbb
test
jae
pop
mov
mov
into
adc
pop
dec
or
sbb
add
xor
outs
ficom
dec
(bad)
fild
aaa
loop
fwait
lds
repnz
push
shl
mov
repz
aam
rcl
jb
out
data16
xchg
in
adc
call
sti
(bad)
out
lods
dec
jno
repz
std
retf
ret
(bad)
std
js
daa
mov
ret
jp
bound
xchg
cmp
pop
imul
or
iret
adc
ffreep
adc
or
enter
jne
inc
fnsave
xchg
push
push
shr
push
and
cmp
lock
inc
push
xchg
out
cmps
xchg
fcomip
sbb
jg
jns
mov
sub
push
ficomp
ret
or
push
les
dec
cmp
mov
lods
enter
ffree
leave
xor
je
nop
jae
and
lock
mov
nop
jb
dec
mov
cs
out
pop
mov
lods
inc
xor
cmp
xchg
call
shrd
dec
daa
pop
loopne
xor
adc
out
jmp
movs
ja
mov
out
jmp
pop
stos
fwait
cmps
xchg
mov
imul
pop
adc
mov
cmp
clc
sbb
(bad)
pop
test
ins
push
lods
out
je
push
mov
xor
xchg
iret
jmp
retf
mov
pop
pop
mov
lock
movs
hlt
mov
mov
loop
shl
mov
xor
clc
pop
popa
push
adc
std
add
add
pop
rol
repz
mov
bound
sub
xor
in
pop
popf
loop
xchg
ss
jle
mov
leave
cld
pop
or
xor
dec
aas
inc
(bad)
fist
cmps
pushf
xlat
aas
sbb
xchg
xlat
movs
cmps
pop
inc
ds
out
mov
xor
sbb
into
into
ins
add
std
stos
out
movs
xchg
popf
daa
cmp
sub
or
into
icebp
pop
dec
test
xchg
mov
fs
sub
adc
cmp
(bad)
dec
call
ret
sub
dec
and
mov
xor
int3
call
pop
scas
stos
sub
xor
out
ss
cmc
inc
(bad)
imul
xor
(bad)
inc
cmp
fs
push
sub
xchg
or
xor
push
hlt
jno
(bad)
xor
adc
shr
int
aas
mov
arpl
cmpxchg
shl
push
cmp
or
les
fadd
lock
pop
dec
push
outs
ins
push
js
mov
(bad)
aad
xchg
push
(bad)
call
mov
mov
sbb
mov
jae
ficom
retf
and
push
dec
push
xchg
jecxz
ins
(bad)
cdq
xchg
adc
inc
pop
dec
outs
add
mov
jl
ds
inc
jno
mov
ja
stos
inc
xchg
cld
dec
or
test
mov
jns
cmps
ins
je
jmp
test
mov
mov
jmp
rcl
mov
loop
sbb
ins
inc
sbb
mov
sub
out
xchg
(bad)
int
sub
push
int
add
test
dec
xor
in
cmps
fucomi
sbb
mov
xchg
inc
pop
xchg
sub
jge
inc
sbb
push
or
mov
xchg
sub
out
xchg
icebp
icebp
jbe
jb
(bad)
sbb
or
dec
push
xor
scas
cmc
push
js
mov
dec
adc
icebp
(bad)
jne
cmp
inc
retf
sti
xchg
pop
movs
pop
cmp
jl
ficom
movs
push
inc
add
bound
push
mov
mov
sub
fst
jmp
adc
dec
xchg
daa
fisttp
in
add
adc
sahf
pop
pop
add
aad
dec
aaa
inc
pusha
loope
sbb
ds
not
xlat
ficomp
(bad)
pop
mov
call
retf
(bad)
jb
pushf
icebp
pop
jo
push
je
inc
es
jmp
mov
fadd
cmp
jo
add
mov
(bad)
addr16
cwde
mov
cli
adc
cmp
(bad)
mov
push
xor
push
ins
pop
stos
pop
xor
cmp
imul
inc
das
cwde
mov
lods
or
or
jmp
xchg
pop
imul
(bad)
inc
hlt
push
xchg
and
(bad)
in
(bad)
je
xor
add
adc
push
pop
lods
jg
sahf
dec
jp
pop
fwait
xchg
xchg
scas
xchg
cdq
inc
inc
push
xor
aas
ror
dec
fisttp
repnz
cmp
add
stc
ds
enter
test
jg
jae
pop
fidiv
sahf
adc
sub
and
js
pop
cdq
push
and
bound
dec
idiv
mov
xchg
dec
sbb
call
out
clc
imul
inc
cmp
movs
pusha
pushf
and
cwde
pop
push
fcom
in
push
stos
cmps
scas
call
sbb
mov
xchg
jae
inc
push
jmp
push
xchg
xor
mov
bound
stos
neg
jl
imul
push
jno
(bad)
mov
iret
xor
lea
(bad)
pop
mov
xor
ror
dec
sahf
gs
outs
fwait
lods
mov
pop
push
sbb
and
mov
inc
hlt
xor
adc
cdq
in
mov
int3
inc
out
fbstp
push
repz
ror
inc
fwait
or
xor
imul
leave
adc
sub
das
xlat
aad
xor
jbe
add
imul
inc
cwde
inc
je
lea
push
fsubr
xor
mov
aad
adc
fidivr
cwde
add
call
push
jge
mov
(bad)
fist
(bad)
mov
or
sub
std
pop
cmp
ins
pop
mov
mul
int
dec
ficom
and
popa
and
add
jb
sbb
in
push
adc
(bad)
pushf
push
sbb
test
pop
fsub
and
jecxz
mov
iret
sub
shl
imul
icebp
adc
xor
fcom
jl
aad
sub
dec
pop
scas
aas
jb
xchg
rol
rcl
xor
fisub
jge
retf
pop
xchg
push
xor
dec
es
dec
add
xchg
(bad)
cmp
stos
mov
into
stos
and
icebp
pop
xchg
cmps
pushf
imul
pop
sahf
cmp
test
jbe
lahf
repz
mov
scas
retf
ret
and
sub
std
call
stos
in
ret
test
es
mov
xor
pop
into
jmp
std
xchg
adc
xor
aas
scas
stos
push
je
inc
ja
(bad)
jb
mov
test
idiv
aas
sbb
test
pop
ins
jge
ss
cmps
sahf
inc
or
sbb
jp
mov
mov
xchg
pop
push
jbe
sbb
mov
pop
xor
xor
push
inc
xchg
test
pop
shl
inc
cmp
push
jmp
and
jge
in
xchg
icebp
push
clc
xchg
add
or
inc
mov
dec
out
mov
jbe
add
and
dec
aas
pushf
pop
(bad)
mov
fcmovnbe
and
sub
retf
mov
scas
call
es
mov
neg
mov
sub
pop
push
dec
and
cmps
into
adc
repnz
arpl
add
mov
mov
sbb
push
jns
aas
in
jae
or
in
inc
xchg
jae
lods
push
(bad)
clc
aas
sub
je
jl
imul
out
dec
dec
push
mov
jge
nop
cmps
retf
arpl
mov
aam
jns
jmp
aaa
into
mov
inc
mov
test
in
and
lds
adc
push
out
mov
or
and
cmp
or
mov
xchg
jmp
cmps
imul
test
sub
mov
cmps
outs
and
xchg
mov
or
inc
dec
ret
mov
sbb
call
pop
pop
or
add
push
xchg
call
pop
adc
gs
pop
adc
fist
and
xchg
push
add
rol
fbld
(bad)
pop
inc
push
adc
std
les
iret
gs
mul
fst
sub
sub
xchg
sbb
adc
jmp
mov
or
cs
pop
mov
cmp
sub
dec
dec
aaa
(bad)
sub
pop
and
mov
aam
and
jns
push
stos
mov
fidiv
inc
pop
cmp
ins
scas
jmp
retf
sub
xor
ins
push
push
mov
hlt
or
xor
sbb
sti
popa
xlat
add
sub
sbb
mov
pushf
fisub
jns
inc
cs
mov
ficomp
retf
dec
pop
test
and
imul
jne
dec
scas
clc
xchg
jb
push
adc
(bad)
mov
in
clc
add
out
int3
mov
inc
or
or
out
pop
mul
push
pop
pop
and
fdiv
mov
add
jne
mov
hlt
jge
clc
ret
sub
or
ss
sbb
pop
jbe
aaa
mov
cmp
xor
adc
sbb
fistp
jns
sub
pushf
ja
out
cmp
inc
jl
push
xchg
fwait
mov
addr16
jp
jp
mov
dec
and
mov
int3
mov
fistp
jg
enter
jg
sub
xchg
fwait
pop
or
or
mov
dec
sbb
lods
jae
iret
add
nop
icebp
js
xor
jne
pop
fist
sbb
std
scas
jo
mov
cwde
cmp
cmp
out
repz
pop
sbb
sbb
movs
cld
sbb
fs
out
cmp
mov
xor
mov
add
jns
jmp
sahf
pop
jecxz
add
(bad)
jo
lea
and
sbb
shl
popf
stos
cmp
push
jp
popa
in
in
pop
or
or
mov
cmp
push
adc
cmp
mov
push
test
loope
pop
bound
add
push
or
push
pop
sub
sub
pop
jno
loop
mov
clc
fistp
push
in
push
pop
fcmove
jbe
mov
xor
cs
xor
push
mov
or
ffreep
xchg
jl
fwait
in
aaa
scas
push
fwait
cmp
gs
inc
retf
jle
cmp
retf
push
cmc
sub
jg
ja
jmp
and
pop
fdiv
mov
mov
loope
hlt
fadd
xor
mov
cmp
pop
imul
je
xchg
sbb
jbe
leave
pop
ret
adc
add
scas
mov
repz
mov
push
test
ror
sti
push
sbb
push
lods
push
les
popf
xchg
cmps
cdq
ins
jns
jl
and
in
cmps
mov
mov
jnp
jle
jmp
sub
outs
stc
cmc
pop
bound
xor
sahf
jno
push
xor
push
data16
out
dec
fcmovnbe
adc
fistp
push
test
cmp
cmp
push
inc
mov
cmps
fistp
retf
jl
pop
fwait
or
daa
enter
les
mov
add
std
inc
stos
mov
mov
cdq
xor
or
cmp
test
xor
lea
and
aas
sbb
and
rol
pop
push
pop
movs
in
jne
mov
movs
or
adc
outs
push
dec
mov
add
ss
pushf
pop
fiadd
in
inc
idiv
xor
(bad)
loopne
call
lds
daa
movs
add
stc
mov
repz
fwait
aam
jno
nop
ja
jecxz
(bad)
arpl
sbb
addr16
inc
xor
lods
popa
div
clc
dec
stos
and
lea
rcl
loopne
fisttp
stos
and
adc
mov
dec
jno
adc
outs
push
(bad)
leave
push
out
cmp
(bad)
out
enter
add
xchg
xchg
mov
les
adc
es
in
mov
add
dec
ror
xchg
mov
mov
dec
jmp
push
add
aaa
in
lock
jae
(bad)
and
dec
test
aaa
or
cmps
loopne
mov
(bad)
dec
rcl
add
ret
ins
mov
xchg
arpl
sub
sbb
int3
adc
retf
sub
test
jno
popf
jb
nop
add
and
(bad)
xor
sub
mov
loope
call
into
jg
bound
or
jns
mov
jbe
into
xor
ror
shr
cdq
(bad)
mov
cwde
mov
mov
sbb
(bad)
xchg
jmp
les
mov
xchg
and
adc
dec
xchg
xchg
add
scas
pop
lea
dec
test
add
out
rol
pop
enter
jp
movs
adc
xchg
adc
arpl
push
stc
push
inc
std
mov
test
and
and
icebp
add
cmp
outs
sbb
xlat
sbb
mov
cdq
bound
push
shl
scas
ficom
adc
mov
inc
or
add
lahf
fmul
int
lods
sub
cmc
xchg
test
jmp
(bad)
out
icebp
pop
dec
es
callw
and
adc
dec
sbb
pushf
push
lods
enter
add
in
mov
jns
dec
stos
ret
xchg
cmp
cmp
mov
ret
lahf
jg
sub
xor
std
xchg
div
fdivrp
dec
jb
jne
jecxz
mov
sahf
lahf
mov
int3
xchg
ins
cld
inc
fs
dec
repz
jns
pusha
push
xor
outs
out
xor
pop
outs
sbb
mov
push
cmp
inc
xlat
jp
dec
(bad)
or
call
mov
mov
push
fild
cli
or
fst
call
nop
mov
cmp
dec
mov
fimul
stos
int3
fild
jg
fstp
push
xchg
movs
mov
and
icebp
jb
adc
repz
jo
dec
jg
bound
cmp
inc
push
mov
mov
xchg
jg
test
rcl
mov
pop
jbe
xchg
sti
xor
lods
mov
dec
dec
xchg
push
jae
mov
add
cmc
jbe
shl
jb
adc
das
leave
call
cmp
dec
jno
xchg
ds
(bad)
jp
add
jo
push
dec
add
cs
cs
movs
pop
sbb
aas
es
retf
cmps
jmp
jp
(bad)
pop
sub
mov
cmp
lods
mov
and
lock
xchg
xchg
add
pushf
sti
cmp
outs
das
ja
mov
cmc
popf
xchg
ds
adc
out
push
repz
mov
pop
xchg
jmp
push
fistp
sub
loop
div
pop
add
xor
jns
jecxz
int
ss
fwait
sbb
add
movs
cmp
outs
jmp
xchg
test
cmps
push
jo
cmp
fsub
inc
cmp
in
xchg
xor
or
xchg
add
sar
xchg
and
add
pop
out
and
loop
(bad)
aas
or
xchg
push
pop
ins
cli
or
dec
stc
clc
stos
call
dec
ds
popf
sti
aas
lods
pop
push
int3
addr16
xchg
dec
or
(bad)
in
test
ret
rcl
pop
inc
inc
add
pusha
and
jg
xchg
jo
imul
lock
xlat
push
ror
jmp
pop
add
jae
cmp
inc
mov
jg
push
push
jp
aad
push
sub
adc
adc
inc
ds
xor
push
into
js
mov
pop
push
sbb
movs
adc
cmp
xchg
pop
imul
jbe
and
add
or
aas
jl
sbb
adc
(bad)
xlat
aas
xchg
mov
add
cs
stos
sbb
cwde
pop
or
out
out
pop
jae
lea
add
retf
pop
sub
pushf
xchg
adc
aas
adc
cmp
clc
add
xor
lea
ja
xor
pop
out
fstp
mov
jp
adc
sub
push
push
add
pop
xchg
das
cmp
test
cmps
mov
test
gs
pop
pop
adc
xchg
adc
fcomp
or
push
pop
dec
(bad)
sbb
enter
pop
test
jo
pop
aas
cs
add
loopne
pop
xchg
rcl
fist
mov
xchg
mov
test
jae
ret
sbb
mov
xchg
cmps
inc
call
test
pop
call
add
or
shl
sub
xor
outs
sub
xchg
jmp
ins
jne
push
dec
inc
retf
into
mov
pop
push
mov
mov
mov
cmp
pop
sahf
dec
jmp
cmps
push
push
gs
leave
jge
push
fild
cmp
cmp
dec
or
mov
mov
dec
xor
aaa
sar
and
fidivr
shr
in
sub
and
stos
and
bound
push
adc
push
dec
xor
shr
fcom
jb
lahf
in
jnp
inc
and
mov
out
pop
mov
mov
scas
into
dec
jmp
mul
or
pop
xchg
(bad)
fs
jmp
sub
movs
jns
or
retf
je
xor
leave
shl
xchg
xchg
pushf
sahf
sbb
out
test
fwait
leave
inc
cmps
stc
fld1
in
test
retf
sbb
xchg
xor
(bad)
in
dec
pop
sub
sub
mov
mov
cdq
cmp
pop
inc
in
lahf
pop
imul
jecxz
in
jle
shl
sbb
imul
sbb
scas
out
inc
sbb
inc
in
into
pop
push
sub
and
xchg
xchg
and
jae
pop
lea
xchg
pusha
rcr
inc
retf
ds
inc
inc
fstp
pop
sbb
xchg
pop
push
cmp
xor
imul
and
rol
arpl
jle
or
pop
lods
mov
push
aas
inc
mov
inc
dec
add
jb
xlat
movs
push
retf
dec
xchg
(bad)
mov
mov
stos
lds
cs
hlt
mov
(bad)
nop
add
xchg
stos
ss
xor
xor
sub
in
loope
(bad)
jle
xchg
aad
fnstenv
bound
in
add
in
mov
mov
leave
lock
fisubr
and
cdq
lea
mov
pusha
mov
movs
shl
sub
pop
aad
not
mov
sti
or
inc
pop
dec
mov
imul
lds
aaa
jle
icebp
xchg
(bad)
scas
sub
out
out
cmp
shl
sub
dec
cmp
add
lock
movs
and
mov
sahf
stos
int
jmp
xor
les
inc
loopne
lods
jmp
mov
inc
and
jb
into
movs
fwait
aas
fstp
mov
cmp
mov
aad
cmp
outs
int3
push
push
sbb
dec
mov
jg
aam
push
ret
lds
addr16
(bad)
ja
imul
rcr
cld
mov
dec
add
aas
leave
vpperm
mov
int
push
and
std
cmps
mov
mov
sbb
inc
dec
xor
mov
adc
or
loope
ret
pusha
add
mov
dec
xor
mov
icebp
ss
adc
jb
jl
push
add
sar
push
push
cwde
or
mov
fwait
test
sbb
dec
xchg
clc
mov
xchg
mov
test
mov
fwait
cli
and
and
shr
mov
fild
xchg
movs
into
stos
int
mov
push
or
(bad)
cwde
outs
sbb
dec
ss
push
push
sub
inc
jmp
addr16
sbb
sub
jns
clc
aas
lods
sahf
and
sbb
dec
fsubr
mov
mov
and
mov
and
pop
and
(bad)
leavew
vpandn
dec
cmps
jnp
(bad)
je
gs
bound
and
lods
lods
pop
xchg
call
push
mov
popf
xor
and
inc
bound
fiadd
cdq
mov
call
jno
mov
mov
pop
ss
enter
pop
cwde
cmps
cmp
iret
add
(bad)
scas
cwde
sbb
inc
ret
in
js
sub
jmp
or
daa
jns
push
ins
add
sbb
sbb
test
dec
xor
add
xlat
sub
scas
ja
out
in
push
dec
aaa
stc
dec
test
shl
mov
mov
daa
mov
imul
xchg
push
xchg
aad
adc
(bad)
in
inc
retf
or
sar
call
popf
test
lahf
fbstp
into
add
ror
mov
mov
jecxz
adc
pop
cmp
push
push
(bad)
lea
jmp
lahf
iret
retf
inc
in
add
(bad)
and
mov
push
popa
push
pop
fwait
xor
retf
dec
cmp
push
or
mov
inc
inc
call
xor
and
jnp
jne
sub
movs
hlt
sahf
jne
fisttp
xor
shr
or
dec
outs
stos
movs
daa
(bad)
sti
add
mov
cmps
dec
jae
mov
retf
test
pushf
jmp
push
sbb
jmp
in
loop
(bad)
mov
push
hlt
sub
cdq
inc
ror
sub
ins
pop
or
nop
mov
mov
out
mov
pop
aad
int
mov
aas
loope
jnp
pop
cmc
adc
out
pop
loope
repnz
cmps
test
fst
std
mov
adc
add
adc
push
jmp
lahf
(bad)
das
push
mov
adc
movs
bnd
xor
fnstenv
mov
add
push
sbb
sub
pop
shl
inc
dec
push
std
or
jmp
mov
icebp
push
xchg
mov
xchg
div
ret
mov
imul
out
pop
jbe
mov
lea
xor
imul
sahf
pop
js
push
sbb
and
ins
pushf
xor
jg
sub
mov
cmps
jae
cmps
dec
push
mov
fdiv
addr16
xor
xor
(bad)
aad
jmp
das
rcl
adc
mov
in
int
jnp
cmp
imul
mov
or
bnd
jns
push
sub
out
add
gs
movs
ds
cld
jecxz
and
scas
aas
imul
pop
adc
jno
xlat
stos
(bad)
mov
cmps
cmp
les
arpl
(bad)
mov
out
fcomp
jbe
dec
adc
or
and
push
ss
dec
add
mov
into
push
jo
sbb
in
push
fnstcw
mov
mov
lods
lock
push
test
je
out
scas
jle
test
add
das
movs
in
data16
mov
cwde
ret
mov
or
outs
dec
and
push
fbstp
add
adc
lods
out
dec
imul
xchg
inc
and
cli
int3
mov
adc
adc
js
fdiv
(bad)
es
out
jb
cmp
mov
shr
xchg
xchg
and
icebp
lock
jnp
cmp
or
imul
mov
lea
dec
(bad)
and
mov
sti
add
and
(bad)
lds
call
aaa
mov
lods
retf
inc
inc
mov
cmp
mov
add
pop
lods
rcl
(bad)
cmps
fwait
sbb
pushf
outs
mov
pop
xchg
and
mov
pop
test
es
into
add
cmp
iret
nop
jmp
cmp
retf
fwait
jge
or
in
jmp
jno
mov
das
or
cmc
cmp
mov
or
ror
pop
mov
in
add
sub
cli
fld
xchg
xor
inc
adc
dec
lods
(bad)
in
inc
or
push
inc
ret
in
arpl
sbb
pop
bound
xchg
jbe
enter
xchg
pop
mov
push
mov
nop
sub
or
add
popa
cmp
add
lods
xchg
cmp
retf
mov
or
push
jmp
scas
mov
gs
test
adc
dec
pusha
shl
add
retf
icebp
aaa
inc
fistp
pusha
nop
mov
popf
xchg
push
inc
in
repnz
daa
call
mov
pop
aaa
jg
xchg
pusha
ret
sbb
fbstp
cmp
sbb
jbe
adc
ret
jno
scas
mov
arpl
mov
or
imul
rcr
daa
jnp
or
std
ret
add
ret
adc
pop
mov
(bad)
ficomp
popf
inc
les
nop
int3
add
and
dec
lock
(bad)
xlat
sbb
dec
sub
loopne
dec
popf
sbb
xor
push
loop
outs
xor
nop
in
cwde
into
out
push
mov
cli
in
fld
gs
mov
jo
shl
push
mov
stos
ror
mov
ds
push
fld
ss
pop
and
jo
pop
adc
dec
(bad)
fld
and
loop
dec
stc
jg
(bad)
fsubr
push
mov
push
dec
mov
push
jo
pop
cmc
repnz
ret
xchg
mov
nop
loope
jge
(bad)
shl
in
pop
xchg
fld
mov
(bad)
stc
and
shl
xchg
xchg
sahf
mov
icebp
push
mov
aam
dec
loopne
ins
xor
jno
inc
push
and
mov
cmp
adc
jo
dec
cmp
jno
in
scas
mov
in
out
stos
test
test
adc
jge
mov
xchg
(bad)
pop
sahf
(bad)
push
in
xor
push
mov
mov
xchg
xchg
arpl
popa
add
jno
out
cmp
in
mov
dec
xchg
jge
xchg
mov
adc
mov
jmp
adc
mov
lods
dec
sub
push
adc
loop
jg
or
(bad)
cmp
jmp
sub
cs
inc
pop
xor
stc
pop
xchg
xor
pop
inc
pusha
xchg
rol
outs
jnp
mov
into
repz
mov
loop
rcr
imul
sbb
ins
pusha
stc
jg
stos
mov
ret
fldenv
stos
and
aas
and
mov
xor
adc
xor
stos
outs
aad
pop
pusha
shr
push
clc
loope
imul
mov
cmp
iret
xchg
pop
into
stos
xchg
mov
cld
xchg
xor
xchg
push
mov
jl
ds
gs
cmps
iret
dec
push
jmp
inc
movs
add
cmp
xchg
xor
push
pop
nop
(bad)
jae
sub
mov
popf
add
mov
jmp
sub
ret
loope
std
sbb
pop
fwait
cmps
mov
push
adc
mov
xchg
xor
mov
sub
leave
imul
sub
or
ret
popa
push
pop
sub
into
inc
cdq
jo
add
xchg
cmp
outs
add
popa
jmp
js
mov
fwait
push
cs
and
xchg
mov
mov
mov
call
mov
xor
pop
or
xchg
sub
jmp
and
adc
jecxz
adc
mov
sbb
rcl
push
sub
push
jle
loopne
jp
ins
jns
pop
stc
xor
sti
inc
stos
mov
daa
cdq
or
pop
inc
das
mov
xchg
sbb
or
add
pop
push
push
and
loope
jecxz
call
mov
mov
inc
sbb
sahf
imul
mov
fadd
jle
(bad)
mov
push
dec
lea
enter
hlt
dec
mov
adc
add
sbb
fsub
cmp
mov
out
push
mov
mov
adc
jbe
stos
ret
jmp
aad
inc
arpl
xchg
rcl
test
push
out
jmp
or
adc
addr16
cwde
lock
repz
shl
stos
rol
jmp
scas
arpl
repz
dec
jb
bound
loop
pop
loope
jle
add
push
and
push
add
mov
sahf
cmc
add
pop
pop
mov
push
or
fisub
or
and
cmps
xor
ror
cmp
inc
pusha
dec
inc
mov
ja
fild
stos
mov
aam
es
jb
lods
out
sbb
es
bound
sbb
adc
ins
mov
mov
cmp
repz
add
loopne
sub
shl
add
test
es
sub
daa
cwde
dec
push
pop
scas
mov
fdivr
sub
or
sub
inc
dec
sbb
fdiv
xchg
fadd
repnz
pop
js
mov
jo
popf
rcr
mov
xor
hlt
mov
mov
mov
les
mov
xchg
loope
add
arpl
popf
dec
mov
jg
jae
imul
ror
int3
push
in
cld
popf
nop
scas
imul
jnp
push
lock
dec
mov
add
(bad)
dec
clc
fimul
outs
lahf
int
popf
push
xor
add
scas
xor
xor
push
mov
out
test
lds
xor
push
push
aas
(bad)
out
cmps
sbb
dec
cmp
mov
push
xchg
and
dec
retf
ss
outs
cmp
xchg
fisttp
dec
inc
pusha
fdivr
call
out
lahf
dec
dec
xor
pushf
fistp
and
mov
test
or
mov
(bad)
out
cmp
mov
or
adc
jnp
aas
push
aas
pop
or
pop
or
in
ins
inc
push
mov
push
pop
out
cmc
mov
(bad)
cmp
jge
or
das
sub
jmp
mov
sti
sbb
inc
shl
mov
sbb
jbe
inc
ret
aaa
or
data16
mov
and
jb
icebp
ficomp
data16
dec
shr
mov
xchg
pop
and
sub
in
loopne
imul
scas
and
adc
call
mov
push
ret
dec
adc
mov
mov
push
mov
inc
test
test
out
pop
cdq
jns
(bad)
repz
fisubr
and
xchg
fwait
push
push
sub
sub
ss
sar
adc
(bad)
cmp
jmp
adc
jbe
sbb
push
fwait
jmp
and
or
mov
shl
rcl
and
mov
movs
pop
pop
ror
or
pop
add
daa
pop
ja
xor
push
sub
mov
sub
jo
pop
jnp
xchg
mov
(bad)
xchg
xlat
cs
mov
out
xchg
dec
xchg
lea
or
stos
movs
clc
ins
adc
imul
ins
imul
ficom
jmp
push
and
sub
out
in
push
adc
fcom
push
xor
cdq
inc
ins
sbb
jp
xor
add
repnz
movs
mov
popf
xchg
ins
neg
rcr
cmps
fisub
hlt
out
jmp
sbb
push
pop
cmp
(bad)
jp
lahf
mov
xchg
and
jmp
es
and
adc
icebp
iret
sbb
(bad)
mov
scas
inc
outs
inc
pop
xchg
mov
jmp
stos
inc
retf
adc
inc
and
cdq
dec
das
mov
inc
cmps
sbb
movs
push
or
push
ss
inc
adc
cmp
ret
cmps
and
(bad)
adc
adc
and
mov
add
pxor
xchg
push
mov
inc
and
jne
out
mov
jno
xchg
daa
jmp
sti
fcom
pushf
and
add
push
push
test
bound
into
(bad)
cli
jmp
outs
and
dec
mov
cwde
mov
xchg
cmp
inc
div
lock
js
dec
sub
adc
nop
jo
xchg
push
xor
jmp
xor
stos
cmps
push
arpl
mov
idiv
fisubr
test
adc
cwde
sbb
mov
sbb
(bad)
data16
and
inc
dec
sahf
popa
daa
push
ror
sbb
out
stos
mov
pop
inc
cdq
test
stc
stos
popf
nop
jg
or
test
cmp
pop
sub
inc
repnz
repz
lea
xchg
lds
in
and
mov
clc
push
pushf
push
adc
clc
sub
push
call
aad
xchg
and
jbe
mov
cdq
mov
xor
daa
in
shl
ret
test
and
rcr
xor
mov
daa
loope
inc
and
xchg
int3
inc
test
(bad)
dec
lea
mov
ins
pop
cmp
xlat
or
sti
imul
cli
pushw
hlt
fistp
ret
loopne
jle
and
cmps
push
jae
arpl
gs
leave
je
ins
pop
sbb
push
sbb
aas
pop
add
mov
hlt
mov
sub
ds
fdiv
aas
sub
fisttp
pop
cmp
stc
fwait
int3
(bad)
push
adc
imul
into
or
mov
ss
push
lea
shl
mov
ret
mov
imul
pusha
ja
out
sbb
retf
jns
add
inc
add
fnsave
jo
test
inc
push
and
imul
scas
ror
pop
shl
inc
mov
in
inc
into
pop
add
out
inc
add
and
jecxz
in
mov
jae
lods
std
lods
out
scas
mov
test
stc
jecxz
sbb
xor
mov
pop
or
mov
sbb
lahf
imul
sub
dec
ja
cmps
jl
pop
out
mov
int3
inc
sub
pusha
or
fdivr
mov
ss
sbb
outs
ret
inc
adc
and
cmp
sub
ret
pusha
repnz
pusha
mov
sub
(bad)
sub
ret
scas
xchg
jp
or
xor
cli
inc
pop
enter
icebp
push
outs
rcl
arpl
(bad)
jo
enter
div
dec
add
inc
xor
pop
cwde
fs
pop
outs
mov
sub
aad
cs
loop
mov
cwde
or
jmp
int3
(bad)
dec
rol
add
cmp
mov
mov
push
xor
call
lods
pushf
mov
gs
(bad)
mov
lds
fwait
clc
shr
repz
xor
stc
dec
cmp
sub
dec
adc
js
popa
mov
sub
ds
mov
(bad)
xchg
addr16
xor
add
loopne
fistp
add
call
mov
(bad)
adc
add
and
jecxz
ret
lahf
cmp
push
push
retf
add
jo
call
test
movs
imul
repz
dec
fs
cmp
in
gs
test
(bad)
cmp
in
jmp
mov
aad
mov
push
mov
addr16
popa
lods
ins
cdq
jo
int
fucomp
mov
jne
daa
adc
and
nop
imul
or
sbb
in
ret
push
push
mov
mov
(bad)
int
lds
test
data16
push
and
daa
in
sbb
es
pop
ds
adc
call
icebp
dec
mov
pop
xor
aas
dec
sbb
jg
xchg
cmp
nop
push
and
rcl
and
out
fdecstp
fsubr
add
loope
xor
pushf
fistp
(bad)
sbb
ficom
int
pop
sub
xchg
les
add
cs
pop
xchg
pop
cdq
mov
arpl
push
pop
mov
out
mov
xlat
out
test
fisttp
popf
push
sbb
inc
jmp
push
iret
add
xor
in
jbe
xchg
aad
stc
jecxz
fs
iret
adc
dec
(bad)
out
loope
cmc
bswap
jo
cs
push
fsubr
xchg
aam
add
jge
sahf
xor
xchg
adc
fst
clc
fimul
fidiv
inc
lahf
addr16
pop
out
aad
into
repnz
fwait
xor
add
in
rcr
mov
jp
outs
xchg
push
or
retf
test
xchg
xor
mov
imul
cs
mov
inc
mov
cdq
inc
in
push
pop
sub
jne
and
jp
ins
test
mov
push
nop
sbb
sub
pop
adc
hlt
adc
mov
call
mov
xor
lea
lock
repz
dec
arpl
push
adc
popf
mov
call
fadd
fist
loope
dec
xor
and
push
dec
sub
jmp
fmulp
sub
daa
push
stc
test
cmps
fsub
fs
xchg
push
(bad)
sbb
aad
sub
jp
push
inc
dec
mov
mov
dec
es
add
jge
pop
push
sbb
rcr
or
dec
inc
aas
dec
and
adc
pop
mov
ins
add
pop
push
jp
pop
lods
int
mov
dec
dec
clc
shl
adc
shr
ror
daa
loope
outs
rol
iret
imul
and
xchg
add
cmp
mov
sub
rol
or
sub
inc
test
call
scas
add
(bad)
push
fcomp
push
fdivr
(bad)
out
es
or
lahf
add
(bad)
lock
mov
xor
mov
jno
mov
push
dec
jl
add
aam
xor
sub
adc
int
into
not
sub
xchg
pop
jo
and
retf
mov
and
jo
mov
inc
add
or
inc
into
dec
rcr
sbb
pop
jl
inc
gs
sar
sbb
jg
rcr
mov
loope
test
push
jecxz
sbb
mov
mov
shl
loope
adc
jle
mov
sub
dec
jg
pusha
or
clc
ret
inc
jmp
xor
mov
icebp
nop
adc
xchg
jl
dec
fdecstp
lea
test
and
add
stc
jbe
cmps
push
lea
mov
mov
mov
sbb
xchg
pop
loope
add
lods
std
jb
xchg
shl
inc
sahf
icebp
in
cmp
push
(bad)
and
clc
push
aam
cmp
mov
xchg
retf
mov
rcr
add
movs
iret
push
or
xchg
push
dec
push
stos
cwde
addr16
inc
inc
add
jnp
mov
mov
jp
sbb
cdq
fs
lock
pop
mov
pop
push
test
xor
jecxz
pusha
xor
adc
adc
addr16
popa
clc
test
aam
and
clc
stos
jg
cwde
adc
test
in
imul
lds
sbb
push
adc
dec
jnp
dec
xchg
out
outs
inc
lods
shr
mov
dec
xchg
sub
inc
gs
xor
mov
scas
lock
sar
mov
pop
mov
mov
mov
out
(bad)
pop
push
and
les
ss
push
jmp
push
ds
out
loope
pop
nop
rcr
xor
jl
adc
inc
sub
ss
mov
retf
retf
sbb
inc
rcl
call
pop
adc
pop
addr16
mov
push
push
outs
outs
ret
scas
sub
push
push
fsubr
mov
mov
xlat
cmp
mov
and
sar
lea
int3
sbb
jo
ins
int3
into
test
sub
rcr
pop
and
mov
stc
out
out
cmp
mov
popf
xchg
pushf
movs
cmc
cli
(bad)
jmp
imul
or
dec
adc
or
retf
and
int3
adc
jle
in
inc
sub
adc
xchg
dec
jge
cmc
mov
je
add
add
in
in
js
mov
adc
push
add
push
inc
fwait
or
adc
sub
je
rcl
aaa
stos
scas
lods
in
(bad)
test
pop
lea
jmp
add
and
inc
jmp
jge
add
push
iret
push
arpl
add
xor
mov
xchg
sub
cmp
mov
fadd
push
mov
jo
sbb
adc
stos
and
pop
cmp
cs
(bad)
icebp
ret
(bad)
adc
lea
pop
pushf
sbb
jmp
xchg
mov
dec
push
sar
in
inc
cmps
rcl
aam
vsqrtss
mov
mov
in
retf
cmp
int
scas
inc
sub
xor
xchg
shl
fwait
outs
sub
adc
das
mov
jmp
jmp
fs
icebp
in
in
sbb
aas
lds
and
das
cdq
jp
push
mov
sbb
inc
xchg
(bad)
pop
repnz
lods
nop
imul
mov
stos
jmp
mov
mov
jmp
cmps
push
add
pusha
sub
cdq
minps
jbe
cmp
in
cmp
retf
lods
in
jo
imul
jge
add
loop
jne
shr
fidiv
mov
push
mov
aad
dec
xchg
(bad)
(bad)
int
icebp
retf
pop
dec
movs
fwait
adc
push
(bad)
or
jmp
in
mov
xor
out
xchg
jle
push
leave
out
out
add
push
movs
xchg
pusha
jge
sub
mov
xchg
mov
sub
jl
aas
mov
adc
hlt
ror
push
fisub
xchg
or
or
js
mov
mov
mov
xchg
pop
cmp
jmp
pop
dec
stos
or
xchg
jae
dec
xor
loop
aaa
and
add
stos
sub
xchg
std
and
push
ja
shl
fld
mov
sahf
sahf
mov
dec
in
lods
push
fidiv
in
add
jge
mov
cmc
stos
or
leave
ja
inc
pop
xchg
call
push
fucomip
inc
push
mov
mov
push
ins
movs
aam
in
cmp
(bad)
repz
sub
mov
pop
adc
les
inc
mov
rcr
jl
push
and
xchg
pushf
les
test
dec
fnstsw
bnd
movs
and
or
mov
inc
repnz
cli
sub
xchg
pusha
jecxz
push
bound
pop
adc
das
retf
cmps
xor
pop
push
nop
and
inc
test
cmp
mov
xchg
xor
xchg
int3
adc
push
hlt
sub
stos
jl
push
mov
ins
out
daa
packssdw
xchg
add
in
stos
fsub
add
clc
stos
ret
cmp
jp
jnp
int
inc
mov
in
and
retf
mov
popf
add
repnz
(bad)
push
mov
push
mov
rcl
call
jg
jne
ret
fisub
je
dec
packssdw
retf
dec
mov
and
push
inc
xor
cmp
mov
jmp
fadd
push
retf
inc
test
(bad)
jns
mov
icebp
add
cmp
mov
neg
imul
test
sti
push
fnstenv
int
mul
pop
mov
jp
adc
retf
aas
mov
push
xchg
or
ret
pop
outs
ficomp
pusha
push
(bad)
icebp
addr16
jae
mov
enter
add
shr
cmc
rol
sbb
adc
push
into
test
xchg
push
or
xchg
and
add
mov
shr
dec
mul
sbb
pop
push
dec
ds
loope
retf
mov
cmp
mov
xchg
push
addr16
cmp
leave
fsubr
push
add
or
fwait
mov
stos
cs
repz
jb
dec
stos
cmp
push
test
popa
push
in
and
mov
sub
cdq
inc
jmp
out
cwde
adc
pop
test
lea
xlat
fdiv
pop
lock
(bad)
fdivr
enter
popf
test
xor
sub
ror
loope
adc
cwde
xchg
or
jg
mov
sub
rcl
shr
xor
pusha
or
jno
jmp
pop
outs
mov
inc
out
xor
mov
arpl
cmp
(bad)
sbb
mov
push
xchg
jmp
mov
rol
xchg
das
mov
mov
xchg
pop
rcl
retf
jmp
mov
lods
mov
in
arpl
ror
mov
daa
(bad)
call
repnz
push
or
add
mov
sbb
fadd
ficomp
(bad)
out
retf
out
jmp
jmp
jmp
or
dec
outs
ret
int
fimul
imul
cmp
mov
mov
xor
push
stos
sbb
inc
inc
and
mov
out
sahf
mov
ins
pusha
jns
(bad)
int3
and
and
push
mov
jmp
pop
(bad)
or
cmp
mov
and
xchg
aas
mov
and
(bad)
mov
in
push
sub
ins
xor
add
or
sbb
ins
fidiv
iret
cmps
clc
pop
inc
rcr
es
mov
or
shr
inc
out
pop
xchg
cmc
jmp
or
or
into
push
call
jg
lods
xchg
mov
and
cli
mov
sbb
and
mov
adc
pop
xor
fisttp
pop
clc
mov
sbb
es
xchg
fwait
cld
inc
aaa
sub
dec
in
repnz
dec
add
jo
sbb
xchg
call
fiadd
cmp
lahf
lock
sbb
and
fst
pop
mov
dec
or
jmp
add
xchg
dec
pop
fisttp
in
sar
std
sbb
ins
mov
cmp
mov
dec
imul
mov
nop
fcomp
imul
jb
addr16
xchg
mov
mov
jae
pop
xchg
int
cli
pop
call
movs
call
daa
sbb
or
mov
and
sub
push
cmp
jmp
xchg
sbb
dec
sub
xlat
fwait
sbb
sub
sbb
bound
add
nop
sub
xchg
jmp
or
xor
jns
fisub
push
int3
(bad)
or
clc
cli
xor
nop
out
imul
add
aas
movs
jne
push
and
mov
pop
enter
xor
pushf
into
popf
nop
call
push
or
inc
add
jecxz
loop
sub
daa
mov
pop
repz
push
xchg
in
mov
cmp
add
bound
mov
(bad)
lods
popa
out
cmp
push
push
pop
mov
add
add
ins
dec
add
inc
push
cdq
adc
aaa
pop
sbb
dec
adc
xchg
lahf
in
xchg
push
sbb
pushf
xchg
xor
jge
xor
(bad)
dec
jne
xor
cmp
xor
fcmovb
imul
call
sub
hlt
and
std
xor
retf
rcl
ins
push
dec
mov
call
pop
add
sar
mov
sbb
mov
mov
adc
hlt
stc
std
push
jle
les
sbb
ins
jle
jne
or
(bad)
or
pop
lods
cmps
je
inc
adc
cmp
cmp
cld
movs
ins
mov
inc
push
sbb
xor
pop
inc
test
sub
sub
sub
add
mov
cmps
xor
push
test
mov
(bad)
js
idiv
lods
mov
push
fs
int3
mov
ret
out
dec
push
dec
in
scas
leave
es
or
inc
cs
imul
push
jle
ja
not
push
std
pop
mov
shl
cwde
mov
push
arpl
pop
ror
jmp
sub
mov
pop
dec
sub
sbb
pop
mov
lahf
add
jae
sub
mov
mov
outs
les
inc
ds
sti
mov
mov
sti
repz
sbb
and
mov
call
movs
or
xor
icebp
cmp
mov
into
rol
adc
daa
nop
ret
sub
lods
out
iret
bswap
push
adc
jmp
(bad)
adc
test
sub
ja
outs
sub
add
in
int3
js
ins
mov
mov
pop
adc
mov
sbb
sub
fcom
neg
fist
out
clc
add
sbb
xchg
and
vmwrite
dec
and
xchg
mov
out
ret
rcr
pop
cs
fucomp
fdiv
lea
and
dec
bound
pusha
ins
shr
int3
xlat
push
jno
cdq
push
mov
mov
jmp
test
mov
outs
ret
sahf
or
mov
ret
sbb
lods
paddusb
push
mov
xchg
inc
jp
std
(bad)
(bad)
fiadd
push
mov
pushf
test
xchg
jno
fldenv
pop
pop
sti
sbb
jo
sahf
daa
sbb
cmp
call
mov
xchg
test
cld
das
sub
lahf
addr16
or
or
push
fistp
fcomp
cmp
adc
add
cmp
inc
cwde
sbb
sub
add
mov
xor
clc
adc
cmp
xchg
call
push
out
push
xchg
test
adc
sbb
in
ret
dec
cli
lds
jnp
lods
out
(bad)
push
wbinvd
xchg
jbe
add
pop
(bad)
pop
jns
cmps
scas
xor
xchg
jmp
iret
call
xchg
adc
fldenv
cmp
movs
adc
cwde
fs
pushf
rol
adc
popf
jp
cmc
std
xchg
adc
adc
sub
pusha
sub
test
push
adc
movs
sbb
lds
call
retf
cdq
mul
dec
jle
pop
mov
aam
mov
(bad)
pop
dec
mov
xor
repnz
mov
jp
call
aad
push
sbb
mov
push
aam
sbb
mul
push
lods
imul
fisub
sbb
fbld
or
jb
je
in
xor
xor
cmp
jmp
cli
and
jg
cld
push
push
mov
shr
jne
lds
cmps
mov
sahf
lods
jmp
popa
stos
sar
fimul
xor
rol
xchg
aas
xor
loopne
cdq
xchg
sar
inc
sub
call
mov
ja
push
xor
cmp
and
cwde
cs
cwde
shl
in
xlat
and
add
mul
and
(bad)
xchg
adc
push
(bad)
pop
bound
and
mov
lock
add
test
push
adc
add
or
out
sbb
cld
or
repnz
outs
pop
daa
ss
into
fisub
das
xchg
popf
loop
mov
call
push
call
sub
(bad)
int
push
mov
loope
sub
pop
xchg
loope
int3
jnp
and
mov
jns
jno
ins
pmaxub
loope
xor
mov
aam
out
push
mov
mov
not
cmc
cli
cmp
lods
sbb
daa
hlt
xlat
cmps
or
repnz
inc
or
inc
mov
in
push
inc
leave
push
shr
arpl
fild
pop
lods
addr16
pop
(bad)
or
mov
dec
sbb
outs
bound
addr16
push
ret
cmp
dec
ja
fldcw
iret
lock
sbb
fistp
popf
dec
cwde
xchg
push
dec
inc
mov
test
fdivrp
pop
pop
(bad)
sub
sub
lds
fs
(bad)
and
pop
int
ds
loop
cmp
std
call
jnp
not
xor
ror
out
bswap
fwait
xchg
aas
dec
push
xchg
enter
movs
int3
test
and
mov
or
mov
js
pop
loop
jmp
pop
xchg
mov
jns
out
jb
outs
mov
mov
add
push
lock
sar
mov
bound
neg
sub
pop
jae
sub
sbb
sbb
or
ficomp
dec
xchg
mov
add
ins
pop
mov
or
mov
test
lds
pushw
retf
mov
sub
sbb
loope
test
sbb
test
ror
fcmovbe
out
lock
imul
fdiv
cld
bound
addr16
sbb
aas
sbb
aas
enter
jb
movs
out
jo
xor
dec
fild
adc
in
or
dec
push
mov
std
push
cdq
sti
enter
xor
xor
out
lods
jb
gs
sti
xchg
jno
daa
or
sbb
mov
and
ficomp
aad
jg
jno
cwde
sbb
xchg
es
scas
cmc
sub
sub
fbld
sti
dec
dec
arpl
dec
lea
pop
push
mov
call
pop
movs
pop
and
pslld
pop
sbb
push
xchg
sbb
stos
sub
xor
mov
xchg
dec
dec
(bad)
stos
push
mov
cmps
add
(bad)
icebp
pop
or
lock
out
adc
shl
not
cli
pop
mov
scas
sub
cmp
and
imul
and
leave
wbinvd
loop
or
inc
out
xor
(bad)
pusha
xchg
dec
hlt
movs
(bad)
jne
imul
xchg
imul
jo
or
add
pop
push
mov
call
(bad)
ja
out
lods
lds
outs
pop
fist
pushf
loopne
or
cmp
and
in
pop
bound
jnp
mov
mov
test
inc
jmp
and
pop
in
fsubr
mov
and
pop
(bad)
nop
jno
jnp
mov
mov
inc
inc
cmp
(bad)
popa
les
jae
inc
xchg
call
imul
into
dec
stc
or
out
out
addr16
mov
inc
add
cmp
movs
(bad)
aam
adc
dec
push
sbb
xor
movs
movs
cmp
pop
adc
(bad)
jb
movs
rcr
cld
sahf
jl
sti
xor
scas
inc
adc
cmp
xchg
cli
or
lods
dec
dec
jmp
push
scas
outs
inc
xchg
and
pop
fsub
loopne
aad
(bad)
jb
push
adc
inc
xchg
and
sbb
cli
retf
cld
icebp
js
xor
cmp
jl
ins
mov
popf
loope
lahf
xlat
lea
xchg
pop
dec
sub
rcr
sbb
(bad)
lock
cmp
adc
pop
les
loop
mov
mov
inc
test
sub
ret
and
xchg
pop
push
pusha
aaa
test
push
or
test
push
mov
and
push
(bad)
mov
je
inc
add
push
or
jp
mov
(bad)
sbb
sub
and
mov
fidiv
repz
or
dec
xchg
mov
in
or
add
into
cmps
mov
pop
push
out
mov
iret
test
dec
add
push
bound
pop
xor
cwde
and
xchg
xchg
repz
pop
add
cmp
inc
ret
daa
cwde
(bad)
push
ja
and
mov
mov
jae
hlt
stos
dec
mov
inc
cmc
fwait
lds
lahf
int
stc
xchg
inc
sbb
jle
sar
mov
shl
mov
jo
int
mov
xchg
cmp
stc
jne
shr
jnp
mov
jnp
in
sbb
loop
ds
retf
mov
cdq
mov
xor
add
xchg
xchg
sub
xchg
cmp
adc
jb
or
int3
out
jb
xchg
enter
out
mov
loope
jl
jb
mov
sbb
push
sub
hlt
sub
lds
mov
fidivr
pushf
movs
lea
idiv
fwait
dec
ret
stc
cmps
xchg
(bad)
xchg
dec
repz
call
mov
fdivr
ins
xchg
and
out
xor
sub
sar
pushf
dec
sub
sub
mov
push
ss
call
cdq
mov
dec
rcl
and
inc
out
(bad)
pusha
test
pusha
ficom
repnz
dec
xor
cmc
push
dec
push
xchg
lahf
hlt
mov
aas
out
adc
scas
dec
dec
ficom
adc
es
shl
sbb
in
into
retf
sahf
fs
in
call
xchg
cmp
out
scas
mov
mov
sbb
dec
inc
call
outs
cmc
js
push
out
cdq
dec
fisttp
shl
push
and
sbb
cmps
or
mov
cmp
ins
mov
jo
adc
sbb
repnz
(bad)
cli
call
xor
cmp
mov
repz
xchg
(bad)
adc
shr
push
imul
inc
icebp
fs
and
dec
test
push
add
jecxz
out
cmp
in
cld
adc
cmp
aam
leave
mov
clc
lahf
out
jae
aam
or
mov
bnd
cmp
outs
(bad)
lock
sub
adc
sub
mov
xchg
scas
sbb
jl
fld
outs
mov
fimul
and
adc
ss
leave
mov
and
(bad)
adc
jae
fisub
nop
std
imul
sub
leave
in
push
jl
lds
jp
and
push
or
adc
mov
cld
repnz
ja
inc
add
xchg
in
shl
push
dec
es
and
adc
inc
ins
sub
push
dec
psubusb
ret
inc
jnp
inc
push
scas
aad
hlt
daa
and
xor
pop
xlat
(bad)
ds
xor
das
hlt
or
adc
push
addr16
jb
push
aaa
mov
jg
out
ds
scas
dec
or
enter
or
cs
iret
and
test
add
stos
mov
aam
add
mov
and
dec
aaa
pop
sahf
or
mov
jb
xor
push
fisub
sbb
ja
cmps
xor
or
hlt
mov
test
dec
sbb
lea
test
mov
sub
stos
repnz
sbb
sub
int
imul
es
jge
mov
cmp
scas
push
popa
lds
in
std
repnz
mov
pop
mov
xor
fstp
mov
or
xchg
push
jbe
dec
cmp
jno
push
push
aaa
jecxz
scas
out
pop
stos
push
add
stos
mov
sub
(bad)
imul
mov
sub
or
push
adc
jl
or
push
aam
add
mov
movs
dec
dec
clc
sti
(bad)
stos
movs
inc
stos
mov
dec
sub
imul
ja
xor
sar
mov
xor
push
inc
push
cmps
test
jo
or
add
out
test
jmp
and
loopne
test
push
(bad)
fiadd
and
retf
les
lahf
lods
(bad)
push
mov
push
mov
xchg
outs
add
int3
dec
mov
into
sub
mov
in
add
jbe
(bad)
aas
jne
lds
in
xchg
push
ror
xor
xchg
jmp
mov
(bad)
dec
ds
jb
int
out
sub
adc
out
fs
shr
out
inc
mov
js
xchg
movs
(bad)
outs
pop
call
pop
jae
mov
popf
test
jno
push
js
addr16
stos
inc
mov
iret
jmp
dec
pop
in
sub
mov
mov
inc
or
fstp
adc
cs
and
fs
xchg
add
shl
loope
add
out
ror
std
les
push
out
fs
stos
cwde
sub
loopne
inc
(bad)
daa
int
cmps
stos
icebp
xor
mov
mov
xor
mov
adc
or
aas
xchg
out
iret
pop
xchg
sti
in
and
cs
jae
adc
shl
sub
inc
dec
popa
fisub
xor
loope
mov
cwde
sbb
jno
sub
paddb
jb
pop
push
inc
mov
sbb
xor
ds
and
jl
sub
aam
jbe
and
xor
or
pop
cmps
and
(bad)
test
ins
jl
jecxz
add
stos
fstp
push
xchg
es
or
jmp
jo
jmp
jb
lods
das
sbb
jmp
in
mov
shr
xchg
test
add
stos
mov
xchg
lods
pop
aas
pop
sar
dec
call
add
add
das
lea
int
xchg
out
mov
adc
fcomp
sti
sbb
cmp
pusha
fistp
movs
imul
cld
push
push
in
(bad)
add
ja
xor
lea
xchg
into
push
sub
cmp
fs
dec
mov
pop
push
jno
mul
pop
aaa
pop
ret
loope
dec
cmp
ss
shl
icebp
xchg
dec
push
jmp
sbb
fdivr
push
(bad)
and
jmp
or
(bad)
int
sub
repnz
inc
jnp
mov
or
cmp
jl
(bad)
js
stos
push
jb
jns
push
cs
jl
xor
in
stc
jge
cdq
(bad)
dec
mov
push
push
jmp
sbb
js
inc
sbb
mov
dec
jmp
test
iret
dec
rol
adc
jns
int3
out
loop
pop
out
sub
popa
into
push
xor
sub
push
sub
mov
out
inc
cmp
stos
fmul
mov
mov
xor
and
xchg
xlat
jle
imul
gs
mov
add
inc
(bad)
inc
dec
movsx
adc
leave
dec
fcomp
add
mov
rep
leave
mov
scas
cli
xchg
icebp
daa
xchg
(bad)
stc
arpl
aaa
sahf
nop
(bad)
jp
out
push
(bad)
fild
in
cld
mov
xchg
sub
data16
inc
lds
sahf
dec
or
ficom
jmp
ins
jnp
xchg
adc
or
cwde
and
bound
rcr
and
xchg
mov
pop
loopne
pusha
and
ins
cdq
mov
jp
adc
xchg
cmp
jl
push
call
pop
jmp
mov
mov
pop
xchg
jmp
and
push
iret
add
cld
xchg
ret
sub
jl
push
jmp
mov
loopne
inc
inc
inc
xchg
aas
adc
pop
fdivr
and
or
cmp
push
jnp
clc
or
lods
iret
icebp
mov
imul
mov
mov
pop
push
sbb
mov
(bad)
sti
in
xchg
aad
xor
cmp
mov
cmps
and
jg
sub
out
dec
adc
mov
or
xor
sbb
mov
xchg
add
cdq
(bad)
rol
movs
and
mov
mov
aas
enter
inc
cld
xor
jne
retf
add
mov
mov
lods
inc
sahf
jmp
push
and
xor
or
cmp
cmp
jl
inc
pop
test
inc
movs
jle
inc
ins
into
aas
in
ins
cmp
mov
fdivrp
scas
xor
sti
pusha
in
(bad)
cli
loopne
shl
pop
pop
repz
xor
popa
and
dec
outs
icebp
int3
das
mov
adc
enter
xor
mov
adc
add
pop
fisubr
movs
jge
cmp
add
fwait
ja
cwde
sbb
cmps
or
sbb
cmps
adc
pushw
stc
or
dec
xlat
push
sbb
pusha
movs
inc
hlt
pushf
cmc
adc
cmps
mov
fcom
add
add
add
xor
outs
test
mov
adc
pop
push
add
cmp
push
dec
stos
push
add
push
sbb
xchg
sbb
push
leave
jl
push
popa
add
pop
stos
sbb
(bad)
sub
es
scas
add
inc
or
das
push
push
cli
jmp
out
dec
ins
xchg
xor
dec
test
xchg
xchg
mov
test
fisubr
pop
mov
cmp
jno
inc
out
push
sub
dec
inc
out
je
adc
jg
push
(bad)
aam
fs
and
sub
addr16
xor
push
sub
mov
test
shl
adc
or
jbe
outs
test
clc
fdiv
call
xor
lahf
mov
sub
repnz
(bad)
std
cs
and
ret
add
jnp
xor
push
repnz
sub
push
lock
mov
or
outs
sub
js
ret
sahf
test
in
outs
lods
sahf
push
push
xchg
sahf
sbb
psllw
imul
add
arpl
cmps
aaa
outs
and
jg
xchg
in
mov
mov
dec
enter
imul
mov
mov
xchg
retf
lahf
jne
(bad)
imul
dec
idiv
lods
jp
inc
pop
pop
das
(bad)
pop
clc
fld
and
sar
mov
(bad)
shl
sub
or
push
pop
stos
mov
sbb
fcmovne
mov
out
loopne
sbb
pop
iret
xchg
xchg
mov
es
mov
adc
scas
ins
sbb
push
test
ret
ret
sub
inc
jno
and
jmp
loop
sbb
mov
pop
adc
fs
out
adc
mov
pop
(bad)
hlt
pop
sbb
bound
retf
sar
jecxz
push
sub
lock
pop
and
sbb
cmp
call
mov
cmp
adc
cmc
inc
icebp
cmp
rol
aas
fst
mov
ins
inc
pop
fsubrp
fimul
sub
jle
xchg
loop
mov
and
bound
sub
cmps
or
mov
les
jbe
cmp
ret
cmp
movs
inc
inc
push
fpatan
lock
(bad)
mov
jne
mov
outs
(bad)
sbb
imul
test
jb
div
cli
iret
lods
sub
pop
push
pop
push
push
mov
add
daa
call
adc
push
pop
dec
jg
ficom
ret
mov
js
xchg
pop
or
outs
in
repz
jl
out
cmp
mov
mov
xor
mov
jae
adc
sub
repz
push
fs
mov
stos
js
add
jmp
jo
adc
xchg
data16
jne
sbb
mov
mov
mov
mov
dec
repz
neg
imul
stos
cmps
xor
jmp
xchg
dec
xor
and
and
into
sub
pop
retf
push
not
outs
iret
sub
ja
fcmove
mov
jne
fwait
pop
sbb
pop
lock
add
sub
dec
mov
aaa
aaa
add
push
outs
pop
int
cmp
aas
std
or
pop
ror
ret
pop
std
repz
rol
xchg
adc
arpl
clc
jae
add
fidiv
stos
mov
jns
or
in
cmp
daa
mov
dec
add
push
or
(bad)
xchg
adc
adc
xor
not
aam
lods
sbb
adc
or
test
(bad)
mov
popa
call
aaa
(bad)
push
jg
xchg
and
sti
outs
movs
idiv
out
pushf
ret
pop
sbb
add
aaa
sbb
dec
jmp
ror
lahf
xchg
mul
jae
adc
test
jg
jae
mov
cmp
or
ficom
push
(bad)
test
xchg
dec
dec
fwait
cmp
pushf
fst
sbb
int3
dec
scas
sbb
fs
(bad)
pop
jae
sahf
fdiv
push
clc
cmp
std
mov
adc
push
mov
adc
fs
retf
cwde
cmp
jno
sub
pop
(bad)
not
dec
sub
mov
test
or
dec
add
jb
mov
je
test
jg
lea
push
call
mov
xor
call
dec
scas
lds
or
outs
jmp
idiv
push
pop
and
xchg
jb
mov
fldenv
div
mov
and
pushf
retf
dec
in
nop
sub
sub
nop
mov
or
aas
sbb
cmp
rcr
es
push
call
pop
lds
mov
add
(bad)
(bad)
or
(bad)
sub
add
dec
inc
gs
xchg
out
mov
mov
dec
add
push
xchg
jne
or
in
loope
jb
mov
into
test
jne
(bad)
adc
cmp
jecxz
cmp
cwde
je
sub
popf
popf
dec
sahf
dec
shr
pop
jmp
inc
push
ins
xor
mov
push
push
lock
mov
cmps
inc
idiv
outs
shr
cmp
(bad)
pushf
(bad)
fcmovnb
mov
(bad)
xchg
mov
push
leave
pop
mov
jne
mov
jns
out
lds
in
outs
imul
out
or
loop
mov
retf
sbb
sub
shr
jl
cwde
sub
jns
pop
pop
sub
enter
nop
cdq
or
xchg
sar
fisttp
iret
sub
or
movs
cmps
cwde
xor
mov
sahf
mov
fcmovne
aad
addr16
jns
(bad)
aad
mov
fmulp
push
fcmovnu
xchg
lds
out
xor
mov
mov
push
xchg
lock
adc
xchg
jno
pop
retf
inc
(bad)
lods
mov
popf
pop
or
cmp
jle
dec
retf
mov
mov
sbb
sbb
pop
(bad)
jmp
sbb
jns
mov
pop
inc
mov
mov
pop
sahf
das
jmp
imul
je
jbe
call
push
push
adc
xchg
cs
inc
sub
sub
int
add
mov
inc
out
loope
jl
jle
pop
dec
mov
stc
popf
cmp
push
xchg
sub
jne
enter
add
repz
int
repz
xor
push
push
lods
test
fnstenv
mov
add
lds
pusha
jge
or
je
pop
pop
xor
fcomp
push
neg
aas
ret
sti
sti
lods
fs
sbb
sbb
jb
sub
(bad)
jne
sub
push
or
fcom
adc
(bad)
mov
aas
imul
fsubr
fild
jecxz
movs
xor
sub
pushf
scas
mov
xor
scas
jno
test
fmulp
xlat
lea
jae
test
push
icebp
ins
mov
aam
jo
sub
idiv
sahf
rcr
sbb
das
(bad)
les
and
mov
cld
movs
cmps
mov
mov
dec
add
push
fidiv
dec
inc
or
pop
inc
sbb
and
fdivr
cld
(bad)
lds
adc
cs
xchg
xor
cmp
in
and
pop
adc
dec
and
jecxz
fs
dec
in
mov
jne
daa
je
sbb
ss
inc
ret
out
stos
and
ins
mov
pop
or
adc
pushf
fstp
not
lods
adc
lock
clc
and
adc
ja
jnp
cmp
pop
cdq
inc
in
cld
call
jns
cmc
out
pop
call
outs
mov
sahf
in
jmp
cmp
or
mov
and
popf
sahf
pop
cmp
loopne
lea
add
lods
into
sub
inc
inc
sbb
add
jge
fwait
xlat
mov
pop
mov
aaa
test
stc
fisub
cmp
sub
xor
imul
in
jp
aas
cmp
sub
movs
inc
lods
pop
push
rcr
mov
cdq
xchg
inc
pusha
lea
adc
inc
mov
iret
dec
les
cwde
test
mov
pushf
add
cli
bound
(bad)
div
add
or
jge
pusha
mov
hlt
arpl
leave
outs
and
sbb
or
adc
out
xlat
inc
push
sub
fs
fnstenv
mov
mov
cmp
jecxz
arpl
or
les
lea
bound
iret
fmul
fst
xor
pop
ror
cmps
out
jnp
jb
mov
push
cs
jge
jle
sti
jle
push
inc
mov
jae
and
mov
movs
xor
pop
sbb
cmp
pop
add
push
cmps
stos
aaa
xor
cmp
data16
out
jle
push
mov
leave
inc
adc
jb
cwde
jno
call
mov
xchg
call
cmp
mov
push
push
pop
pop
out
sub
shr
pushf
add
loope
xor
dec
push
pop
stos
xchg
inc
cli
cmp
push
ror
push
and
in
rcr
mov
xchg
mov
arpl
jae
or
sub
leave
sub
adc
out
xor
jae
adc
scas
sbb
out
sti
mov
xchg
call
shr
or
int
jmp
dec
sub
repnz
jno
pop
xor
clc
aas
jmp
mov
pushf
gs
xchg
cmp
sti
xchg
jne
sbb
shl
in
mov
fdiv
or
xor
stos
jle
hlt
sub
hlt
iret
fsub
test
(bad)
jmp
pop
adc
sub
sub
push
jge
jb
scas
cmc
inc
push
loopne
js
jae
jl
push
push
mov
fsubr
mov
daa
push
cmc
inc
mov
xor
imul
outs
xor
jp
in
and
retf
std
dec
jne
es
ret
push
and
es
adc
rol
mov
adc
xor
push
scas
jbe
jge
push
aas
mov
jmp
out
fstp
div
pop
ins
adc
(bad)
mov
cmp
mov
mov
adc
out
in
jmp
out
mov
in
outs
inc
fiadd
pop
push
cmps
dec
jl
in
rcl
mov
pop
pop
mov
mov
xchg
xor
fcomi
xor
loope
lods
xor
shl
dec
fdivr
xor
dec
mov
inc
int
mov
sbb
pop
xor
mov
jno
sub
jne
jl
fstp
sub
jmp
jbe
mov
xor
sbb
fwait
add
gs
jp
or
xchg
push
pop
stc
int3
add
adc
pop
mov
fcmovb
ret
cli
(bad)
adc
in
(bad)
jle
sub
pop
xor
push
in
sbb
sbb
fwait
mov
lock
out
or
sub
sbb
cmps
cwde
dec
adc
aam
pop
mov
mov
adc
or
push
pop
dec
lds
ds
loop
pop
xlat
cld
inc
xchg
cmp
sbb
fwait
adc
in
mov
outs
shl
dec
sub
push
push
jb
aaa
cmp
das
push
and
fst
bound
or
mov
out
xchg
push
mov
shl
daa
scas
add
cmp
sbb
cmp
mov
ret
not
inc
and
cmp
or
add
cmps
dec
xchg
out
dec
xchg
sub
fcmovb
or
push
or
je
cld
pop
dec
retf
dec
ror
add
pusha
mov
add
and
repz
push
mov
or
clc
fwait
jg
fimul
(bad)
sub
lods
mov
mov
pop
cmp
xlat
(bad)
xchg
fdiv
fnstsw
sub
inc
outs
ficom
sti
jmp
inc
bound
bound
retf
mov
mov
xor
fwait
or
adc
psrlw
sub
mov
sub
arpl
adc
xchg
mov
push
push
inc
jnp
outs
imul
sub
mov
out
mov
sahf
mov
outs
addr16
mov
push
rol
retf
xchg
mov
je
inc
sub
mov
cmc
or
outs
test
inc
xor
xor
outs
pushf
and
lahf
pop
popf
int3
ds
loope
pushf
cmp
add
mov
std
inc
into
scas
call
inc
imul
out
mov
fiadd
push
stos
pop
or
xchg
aaa
push
sub
adc
iret
lds
in
inc
dec
stc
shl
xor
push
push
push
dec
jne
mov
aaa
dec
sbb
pop
push
ins
sbb
jbe
sub
inc
loopne
and
push
repnz
adc
leave
and
sbb
sahf
daa
das
add
push
pop
push
inc
mov
pushf
dec
sbb
inc
scas
pop
daa
iret
jecxz
stc
cmc
inc
js
cmp
mov
pushf
push
ret
outs
out
add
stos
sbb
call
ins
mov
mov
mov
pop
jmp
js
hlt
jp
addr16
cmp
push
jmp
(bad)
xchg
clc
aas
loop
push
mov
dec
inc
in
loop
(bad)
mov
pop
xchg
(bad)
push
stc
int
dec
or
out
int3
sub
push
adc
dec
lahf
leave
ds
int
mov
test
imul
enter
clc
bswap
jno
pop
call
enter
aad
sbb
push
adc
jecxz
rcl
jb
inc
mov
sahf
inc
lock
or
ins
sub
mov
out
add
mov
nop
(bad)
mov
mov
sub
dec
cld
mov
nop
test
neg
test
std
pop
xchg
sub
call
movs
and
fimul
stos
test
js
ss
in
test
and
jbe
fild
or
add
pop
int
sub
or
add
ss
jo
inc
daa
jl
scas
retf
mov
cmp
mov
cmp
das
jp
scas
aas
rcr
adc
int3
mov
dec
sbb
cmp
mov
(bad)
inc
mov
pop
aaa
sub
xor
mov
idiv
mov
scas
mov
(bad)
cmp
or
cmps
cdq
sub
adc
mov
pop
fwait
ja
inc
jae
out
movs
cmp
in
dec
pop
mov
fistp
test
clc
ret
add
fimul
mov
push
add
cli
scas
sbb
mov
popf
mov
sbb
cmps
test
stos
(bad)
jge
jo
xchg
enter
mov
adc
ds
(bad)
or
out
int3
cmovbe
cld
aas
rol
mov
in
(bad)
mov
test
cmps
or
adc
fisubr
inc
icebp
push
xchg
sub
test
lahf
mov
out
retf
lods
int
inc
jmp
out
fst
and
xor
sti
ret
and
add
pushf
int3
outs
mov
lea
lods
loopne
and
add
stc
or
pop
cmp
retf
fyl2xp1
test
push
xchg
cwde
cwde
add
and
dec
jg
cwde
cmp
sbb
push
mov
std
cmp
shr
daa
push
push
xchg
or
cmp
ret
adc
movs
pop
aas
mov
sub
sub
xchg
cdq
jo
xor
jnp
aas
out
mov
movs
scas
stc
daa
sahf
jmp
sub
sub
das
into
ja
es
fisttp
mov
adc
imul
push
lods
aad
mov
ds
nop
and
cmps
sub
pop
fisttp
fdivr
ja
pop
loop
pop
push
shl
push
icebp
adc
fwait
js
inc
mov
mov
mov
mov
push
les
cmps
or
add
push
and
sbb
xchg
jecxz
inc
dec
cwde
dec
das
adc
or
retf
nop
es
xchg
ret
clc
cmp
cmp
imul
sbb
dec
lods
and
jg
cdq
into
call
and
cmp
ss
loop
(bad)
mov
retf
jmp
xchg
repnz
leave
mov
cmp
dec
jne
in
fldcw
inc
int
cwde
iret
cmp
jle
test
cdq
fwait
jmp
xor
loopne
mov
daa
jl
js
or
dec
inc
mov
pop
add
test
jecxz
mov
push
rcl
jae
mov
push
sub
adc
sub
dec
(bad)
icebp
(bad)
push
es
fbstp
retf
push
int
jg
aaa
out
adc
mov
xor
add
(bad)
aam
adc
mov
xor
push
jae
and
push
push
push
repnz
shl
push
and
repz
test
mov
mov
push
cmps
cmc
xor
pop
push
repz
stc
(bad)
jb
xor
xor
std
inc
push
add
cmps
dec
movs
jno
add
xchg
jo
jmp
test
daa
stc
mov
pop
inc
addr16
dec
fisttp
or
in
add
repnz
and
jne
cwde
inc
scas
pop
and
push
dec
out
(bad)
adc
pusha
xchg
push
(bad)
mov
pop
xor
dec
jmp
xchg
data16
xlat
mov
inc
(bad)
call
stos
sar
aam
je
addr16
or
push
pop
rcr
push
inc
test
mov
dec
outs
and
mov
sbb
jp
or
nop
mov
jmp
and
and
mov
and
aad
mov
fild
clc
lods
ret
adc
mov
jno
aam
out
push
or
imul
(bad)
or
jo
repnz
jecxz
jmp
or
cli
add
in
and
je
push
jecxz
sub
arpl
getsec
popa
imul
adc
xor
test
call
fwait
nop
test
ja
push
jmp
xchg
add
push
sbb
dec
ret
sub
mov
sub
cmp
hlt
adc
pop
adc
xor
inc
pop
pop
pop
xchg
jnp
add
and
sar
pop
sub
lods
cmc
push
xor
push
popa
xchg
cmp
inc
data16
cmp
push
add
js
dec
mov
adc
ror
push
mov
or
jno
cmps
shl
fwait
ss
and
rcr
cmp
std
fnstcw
add
mov
xor
cs
mov
cld
repz
icebp
stos
das
inc
sahf
and
fwait
mov
hlt
adc
mov
in
add
jg
and
sbb
xor
fs
and
sar
jnp
cmp
sub
lock
test
jl
cld
ds
mov
nop
mov
xchg
pop
mov
push
cmp
fisub
sar
cmp
ficom
and
xor
(bad)
push
mov
fisttp
push
pop
sub
xor
idiv
lahf
stc
js
mov
inc
(bad)
sub
mov
push
std
mov
les
dec
push
icebp
stos
xor
add
out
daa
cmp
lods
movs
cmp
nop
sbb
ss
out
(bad)
adc
push
sti
sbb
mov
jle
jmp
stos
pop
push
or
aaa
xchg
nop
jmp
sbb
aam
aad
in
int3
adc
nop
sar
out
mov
mov
lock
mov
dec
sbb
scas
push
fimul
shl
imul
cs
push
cdq
das
push
outs
xor
out
imul
(bad)
mov
outs
stos
retf
xor
mov
push
and
jle
and
or
dec
clc
test
imul
xor
(bad)
fcmovbe
pushf
loope
mov
test
inc
cmovp
jbe
repz
add
mov
mov
outs
mov
sub
sub
aam
test
xor
ds
xor
add
retf
sbb
pop
or
test
cwde
aam
add
jge
jecxz
sti
push
js
sbb
les
push
test
pop
cmp
or
aad
add
(bad)
mov
adc
dec
add
push
push
hlt
aad
shl
pop
ss
mov
add
push
xor
inc
aaa
dec
push
cld
inc
xor
mov
mov
cmps
adc
push
leave
cmp
imul
pop
mov
sti
cmp
lock
pop
push
shr
adc
dec
(bad)
in
cld
sbb
stc
push
iret
sar
stos
jge
(bad)
pop
stos
mov
dec
test
movs
pop
lahf
sub
repz
sar
mov
cmp
mov
mov
lods
mov
inc
outs
jb
gs
hlt
xchg
mov
sub
fs
test
imul
inc
sub
test
mov
imul
sti
test
cmp
js
mov
test
fwait
iret
fdivr
aas
shl
xor
sub
inc
(bad)
sahf
fldlg2
test
xor
aaa
lods
mov
stos
(bad)
ror
jo
fild
inc
cmp
sub
ss
hlt
cmp
ret
sub
adc
and
mov
fwait
jg
push
sub
inc
movs
test
mov
or
das
or
dec
dec
cmc
add
sbb
adc
mov
(bad)
push
jmp
test
pushf
(bad)
pop
aas
xchg
jb
and
sbb
jns
call
mov
rol
jecxz
int
gs
loopne
imul
scas
enter
jnp
hlt
pop
sub
or
aam
xor
or
call
out
fwait
pop
sub
push
and
stos
out
or
xor
js
xchg
mov
and
loope
mov
mov
cli
jle
push
scas
xchg
mov
popf
sbb
push
(bad)
data16
mov
mov
jp
loope
(bad)
inc
and
outs
enter
mov
call
enter
adc
cmp
adc
adc
sahf
jg
pop
sar
aas
mov
push
pop
sbb
out
sbb
enter
fcmovnu
(bad)
xlat
adc
mov
jb
imul
cs
xchg
cwde
push
sub
pop
iret
push
out
into
popf
gs
lods
scas
mov
cld
inc
icebp
mov
sbb
mov
inc
jecxz
push
test
fnsave
mov
sbb
jl
xor
mov
movs
xor
sti
mov
fst
loopne
xchg
mov
outs
mov
jae
outs
call
xor
pusha
lea
dec
call
cmp
int
repnz
sub
adc
test
bound
xor
jecxz
jmp
inc
mov
mov
cmps
jp
xchg
push
hlt
push
cmp
ret
xor
or
jmp
pop
adc
pop
cdq
jnp
frstor
fcmovnu
pop
sbb
jo
mov
xchg
mov
repnz
cmp
add
jl
adc
cli
cwde
aad
(bad)
loop
(bad)
ins
shr
mov
retf
xor
fwait
gs
into
fnstcw
mov
push
loopne
xchg
pop
cli
pop
scas
and
pop
and
or
ja
xchg
sbb
inc
pusha
test
or
jbe
and
(bad)
mov
sub
shl
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
and
add
add
dec
in
pushf
in
sahf
in
(bad)
in
(bad)
in
mov
mov
in
movs
in
xchg
in
stos
in
test
mov
in
xchg
in
cwde
in
xchg
in
mov
mov
in
mov
mov
push
add
add
push
in
and
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
stos
in
xchg
in
stos
in
xchg
in
cmps
in
mov
mov
in
mov
mov
in
popf
push
add
add
jne
mov
in
lods
in
and
(bad)
in
mov
mov
in
mov
mov
in
mov
mov
in
movs
in
cmps
in
mov
mov
in
nop
in
fwait
in
mov
mov
in
mov
mov
in
xchg
in
xchg
in
cdq
in
scas
in
sahf
in
(bad)
in
popf
in
scas
in
mov
add
cmps
in
mov
mov
in
mov
mov
in
cwde
in
mov
mov
in
mov
mov
in
xchg
in
nop
in
xchg
in
mov
mov
in
mov
mov
in
test
mov
add
inc
in
mov
mov
in
and
mov
mov
in
mov
mov
in
test
mov
in
mov
mov
in
movs
in
(bad)
in
(bad)
in
mov
mov
in
mov
pop
add
add
mov
in
mov
mov
in
mov
mov
in
test
mov
in
pushf
in
stos
in
mov
mov
in
popf
in
mov
mov
in
mov
mov
in
stos
in
mov
mov
in
nop
in
mov
mov
add
arpl
mov
in
(bad)
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
stos
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
(bad)
in
stos
in
mov
mov
add
inc
in
xchg
mov
in
cmps
in
mov
mov
in
xchg
in
and
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
add
outs
in
test
mov
in
xchg
in
mov
mov
in
movs
in
mov
mov
in
xchg
in
xchg
in
call
in
mov
mov
in
mov
mov
in
stos
in
stos
in
mov
mov
in
mov
mov
in
stos
in
mov
mov
add
push
in
and
cmps
in
xchg
in
test
mov
in
(bad)
in
popf
in
cmps
in
pushf
in
(bad)
in
mov
mov
in
call
in
(bad)
in
popf
in
xchg
in
test
mov
in
mov
or
add
pop
in
mov
mov
in
mov
mov
in
fwait
in
test
mov
in
mov
mov
in
and
lods
in
mov
mov
in
xchg
mov
in
(bad)
in
mov
mov
in
xchg
mov
add
push
in
test
mov
in
mov
mov
in
and
cmps
in
fwait
in
sahf
in
mov
mov
in
fwait
in
fwait
in
test
mov
in
mov
mov
in
mov
mov
add
inc
in
call
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
stos
in
mov
mov
in
cmps
in
nop
push
sldt
add
mov
in
mov
mov
in
xchg
in
nop
in
xchg
mov
in
and
cmps
in
xchg
in
movs
in
mov
mov
in
mov
mov
in
(bad)
in
fwait
in
test
mov
in
nop
in
and
add
add
mov
in
cwde
in
test
mov
in
cmps
in
(bad)
in
sahf
in
mov
mov
in
cdq
in
mov
mov
in
mov
mov
in
and
mov
adc
add
push
in
mov
mov
in
xchg
in
cmps
in
and
test
mov
in
call
in
sahf
in
call
in
mov
mov
in
mov
mov
in
mov
mov
push
adc
add
outs
in
xchg
in
cdq
in
mov
mov
in
test
mov
in
mov
mov
in
call
in
lods
in
stos
in
mov
mov
in
nop
in
sahf
in
and
xchg
in
test
mov
in
lods
in
mov
mov
in
xchg
in
xchg
in
mov
mov
add
jb
mov
in
mov
mov
in
cmps
in
mov
mov
in
mov
mov
in
(bad)
in
mov
mov
in
cwde
in
test
mov
in
mov
mov
in
mov
mov
in
(bad)
in
xchg
in
and
test
mov
in
mov
mov
in
movs
in
sahf
push
adc
add
pusha
in
mov
mov
in
popf
in
mov
mov
in
stos
in
mov
mov
in
nop
in
(bad)
in
xchg
in
cmps
in
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
in
mov
mov
push
adc
in
mov
mov
in
lahf
in
mov
mov
in
test
mov
in
cmps
in
test
mov
in
and
mov
mov
in
mov
mov
in
xchg
mov
in
xchg
mov
in
scas
in
lods
in
xchg
in
test
mov
in
fwait
in
mov
mov
in
mov
add
mov
in
mov
mov
in
cwde
in
mov
mov
in
mov
mov
in
movs
in
and
lods
in
movs
in
scas
in
cdq
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
add
pop
in
mov
mov
in
mov
mov
in
cmps
in
xchg
mov
in
mov
mov
in
mov
mov
in
lods
in
movs
in
mov
mov
in
test
mov
in
cdq
in
movs
in
mov
mov
push
sbb
add
push
in
test
mov
in
cdq
in
mov
mov
in
mov
mov
in
stos
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
xchg
in
mov
mov
push
sbb
add
pop
in
mov
mov
in
popf
in
and
scas
in
pushf
in
lods
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
in
mov
mov
in
mov
mov
in
stos
in
lahf
in
and
test
sbb
add
dec
in
mov
mov
in
xchg
in
cmps
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
push
sbb
add
arpl
mov
in
fwait
in
mov
mov
in
test
mov
in
mov
mov
in
xchg
in
scas
in
xchg
in
mov
mov
in
xchg
in
mov
mov
in
lods
in
movs
in
mov
mov
in
mov
mov
in
(bad)
in
mov
sbb
add
pop
in
mov
mov
in
cdq
in
fwait
in
call
in
cdq
in
pushf
in
scas
in
test
mov
in
popf
in
xchg
in
mov
mov
in
mov
mov
in
cmps
in
mov
mov
in
mov
add
mov
in
xchg
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
in
lods
in
mov
mov
in
call
push
push
add
add
movs
in
sahf
in
cdq
in
mov
mov
in
xchg
in
xchg
mov
in
xchg
mov
in
sahf
in
fwait
in
mov
mov
in
(bad)
in
mov
mov
in
fwait
in
mov
mov
push
pop
add
add
mov
in
and
xchg
in
cdq
in
pushf
in
mov
mov
in
nop
in
xchg
in
xchg
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
popf
in
xchg
mov
in
sahf
in
and
test
mov
push
and
add
pop
in
popf
in
sahf
in
mov
mov
in
mov
mov
in
xchg
mov
in
mov
mov
in
movs
in
mov
mov
in
xchg
in
test
mov
in
mov
mov
in
xchg
in
test
and
add
push
in
call
in
test
mov
in
mov
mov
in
mov
mov
in
lods
in
mov
mov
in
xchg
in
xchg
in
fwait
in
mov
mov
in
cwde
in
xchg
mov
in
test
and
add
pusha
in
xchg
in
mov
mov
in
(bad)
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
stos
in
lods
in
xchg
mov
in
mov
mov
add
dec
in
sahf
in
test
mov
in
nop
in
and
sahf
in
cwde
in
mov
mov
in
cwde
in
mov
mov
in
stos
in
movs
in
movs
in
popf
in
test
mov
push
and
add
dec
in
mov
mov
in
mov
mov
in
movs
in
lods
in
cmps
in
mov
mov
in
mov
mov
in
test
mov
in
xchg
in
lods
in
lahf
in
mov
mov
add
inc
in
test
mov
in
cmps
in
and
mov
mov
in
nop
in
and
mov
mov
in
and
xchg
in
mov
mov
push
add
add
mov
in
call
in
lods
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
(bad)
in
mov
mov
in
mov
and
imul
fistp
jne
sbb
push
mov
dec
fnstenv
cmps
imul
dec
inc
fwait
bound
or
mov
aaa
push
xchg
or
std
popf
ja
hlt
or
movs
ja
repz
das
icebp
pop
aad
sbb
(bad)
rol
push
pop
mov
dec
sub
and
enter
sbb
pop
int3
das
mov
loope
fwait
ds
sub
jge
in
cmp
jbe
inc
das
inc
xchg
arpl
and
cmc
fadd
fs
in
xlat
fidiv
fiadd
cmp
mov
movs
adc
xor
xchg
(bad)
in
and
fld
sub
xchg
repnz
xor
cmp
add
mov
clc
add
out
pushf
ret
add
in
jno
xchg
pop
adc
test
inc
or
ficomp
pushf
mov
stc
inc
call
imul
ins
(bad)
mov
(bad)
jnp
fild
cmp
pushf
scas
dec
movs
push
mov
fdivr
push
cmp
inc
mov
or
call
jge
nop
lea
loop
xchg
iret
push
pushf
pushf
scas
(bad)
sub
mov
xlat
jmp
pop
adc
lds
jne
xchg
or
mov
(bad)
mov
fiadd
sbb
(bad)
cdq
cmp
in
and
cmp
lock
shr
out
dec
mov
lea
rcl
stos
inc
sbb
jnp
add
mov
test
adc
lock
cmp
jbe
xchg
and
test
xor
mov
js
js
add
(bad)
push
push
or
cld
movs
icebp
dec
dec
pop
movs
jecxz
mov
(bad)
xor
mov
jae
pop
pop
dec
push
pop
cmp
sub
xchg
in
sbb
outs
cdq
outs
call
adc
fwait
mov
push
jp
mov
(bad)
lods
sbb
nop
mov
loope
inc
loopne
aad
lods
repz
shr
mov
xchg
movs
or
pop
pop
into
imul
shl
and
mov
sar
mov
iret
mov
or
icebp
outs
pop
fs
adc
outs
mov
inc
pushf
jcxz
push
push
into
mov
pop
pop
cwde
pop
add
repnz
neg
inc
push
xor
iret
xor
aam
pop
icebp
pop
inc
xlat
pop
jbe
mov
pusha
fnsave
leave
mov
call
push
adc
sbb
pop
jge
and
xchg
movs
xchg
movs
jl
inc
daa
outs
iret
jg
push
lods
mov
fwait
adc
data16
sbb
scas
mov
xchg
xor
scas
mov
scas
ret
inc
shr
ins
jo
jg
or
xchg
sbb
lods
ss
ins
push
bound
jp
sub
mov
clc
cmova
jmp
cmc
scas
xor
call
and
push
popa
clc
push
dec
cmps
pop
mov
and
rcr
cs
jnp
push
mov
pop
mov
add
std
retf
xor
or
cmp
pop
add
sub
loope
stos
loopne
cdq
test
ja
push
cli
aad
xchg
out
inc
cld
cmps
lock
mov
(bad)
cwde
out
sahf
or
in
xor
dec
mov
dec
xor
test
push
cdq
pop
mov
cmp
stos
and
xchg
fs
(bad)
pop
dec
mov
adc
and
clc
pop
adc
enter
arpl
xor
shr
(bad)
push
cwde
hlt
in
ficom
das
sub
pop
mov
pop
sub
test
lahf
out
xchg
or
fild
loope
inc
outs
fs
(bad)
(bad)
mov
fistp
xchg
add
jbe
sub
fst
stos
repnz
cmp
cmps
add
dec
idiv
imul
xchg
jnp
xchg
dec
mov
fwait
mov
xor
jmp
xchg
cmps
sub
sbb
push
sahf
inc
inc
in
mov
sti
and
daa
xchg
jmp
sbb
push
dec
sub
mov
call
cmp
in
pop
bnd
loop
cmps
retf
push
popf
cmp
sahf
pop
lods
nop
jmp
xor
jmp
nop
pop
mov
sbb
push
sti
inc
inc
cwde
iret
loope
outs
and
xor
pop
fidivr
xchg
cs
dec
scas
outs
lock
lods
cmps
xor
jbe
cld
cli
(bad)
dec
scas
push
xlat
adc
xor
push
js
push
fs
mov
pushf
lahf
imul
int
mov
out
cmc
ja
xor
adc
clc
dec
lods
push
call
xchg
mov
push
push
xor
(bad)
and
out
add
(bad)
xchg
xor
adc
in
and
loope
adc
xor
pop
sub
sub
sub
shl
push
pop
out
and
jg
push
xchg
or
xchg
out
xchg
nop
and
sub
shl
adc
stos
loopne
mul
push
mov
pusha
mov
popf
xor
loope
pop
add
gs
ds
(bad)
(bad)
xchg
push
sub
sbb
sbb
jns
repz
leave
lods
push
aaa
xchg
aam
inc
push
pop
loope
cmp
add
fbld
or
into
js
inc
mov
lahf
iret
dec
add
out
xchg
dec
mov
mov
xor
sbb
inc
(bad)
xchg
std
enter
mov
sbb
les
neg
xor
jmp
cmps
or
mov
in
aas
repz
sub
div
mov
mov
dec
fidivr
xchg
jns
push
or
cmp
jle
mov
or
cli
xor
inc
ja
imul
mov
mov
add
cwde
stos
es
sub
jb
stos
in
jg
aam
mov
test
ins
inc
xlat
mov
inc
push
xchg
adc
test
jne
and
mov
dec
pop
dec
jns
mov
add
sub
add
inc
les
and
mov
daa
sub
and
xor
pop
sub
jno
jmp
popa
xchg
mov
(bad)
mov
in
adc
sub
movs
scas
add
dec
jne
xor
or
push
sahf
loop
push
sahf
ja
mov
aas
lds
mov
sub
in
mov
adc
out
adc
out
jmp
add
and
mov
stc
xchg
inc
jmp
adc
jl
(bad)
mov
and
jo
repnz
pop
rol
out
and
inc
push
dec
jne
mov
jle
mov
inc
test
cmc
push
gs
imul
mov
ret
adc
and
je
(bad)
movs
std
mov
adc
out
mov
in
xchg
jecxz
hlt
mov
adc
xor
push
push
leave
mov
test
cmc
mov
xor
pop
lods
(bad)
icebp
pop
adc
adc
ror
and
jp
jecxz
pop
sahf
aam
fdiv
mov
or
adc
and
sbb
mov
and
aam
jp
xor
in
cmp
cmc
sbb
in
mov
xchg
push
cmp
dec
pusha
das
push
pop
fistp
rcl
in
fcomi
ins
(bad)
xchg
js
rcl
pop
xor
inc
adc
retf
arpl
and
jmp
mov
(bad)
xor
mov
es
popa
ds
mov
in
push
rcl
jl
mov
out
push
dec
lock
rcr
cwde
ins
cmp
sub
sub
push
pop
push
lea
mov
push
pushf
mov
xor
movs
iret
pop
retf
(bad)
ret
loope
xchg
adc
aam
jbe
in
ret
icebp
fst
or
lods
adc
cmp
jne
aad
dec
jg
xor
retf
movs
movs
mov
sti
lods
not
out
out
or
test
or
test
mov
jns
ffree
mov
iret
aas
(bad)
sbb
pop
icebp
inc
jl
push
movs
cmovge
dec
sbb
cmp
iret
dec
in
das
test
getsec
aaa
mov
sbb
sub
repnz
ret
mov
outs
out
dec
aaa
or
movs
sahf
sub
mov
sub
mov
in
mov
xor
xor
push
nop
cmps
ds
lods
loopne
mov
sub
movs
shr
mov
jle
push
cmp
jmp
and
jb
popa
dec
adc
sub
jl
dec
jbe
inc
mov
mov
and
sar
add
jb
nop
pop
idiv
not
xchg
aad
ins
iret
add
push
retf
dec
mov
imul
and
pop
sub
and
daa
cld
xchg
pop
sahf
setg
push
mov
fild
sbb
dec
mov
mov
ins
and
les
dec
sbb
mov
add
sahf
adc
push
ss
jne
lahf
and
fidivr
outs
icebp
scas
dec
es
mov
jae
(bad)
or
outs
(bad)
std
xchg
cmp
mov
add
(bad)
cwde
mov
add
jo
and
cmp
std
lock
adc
ss
in
or
(bad)
ret
jns
stos
ds
lea
retf
nop
aam
pushf
rdpmc
shl
pusha
(bad)
inc
nop
les
xor
addr16
add
jecxz
mov
bound
xchg
shl
cld
xor
dec
inc
xor
loopne
and
int
add
cmp
arpl
fwait
xlat
jae
push
pushf
popw
adc
mov
push
retf
outs
xor
xor
outs
mov
and
ins
jno
ss
in
dec
outs
jns
mov
xor
arpl
rcl
mov
jae
mov
mov
jns
sbb
mov
mov
shr
(bad)
(bad)
das
cld
mov
cmp
push
mov
xchg
in
cmp
sub
pop
adc
(bad)
lahf
lds
js
or
or
js
arpl
push
cmps
iret
adc
inc
es
popf
push
jmp
out
popf
adc
aaa
push
push
loop
sub
add
and
cmp
xchg
push
xchg
mov
inc
push
push
dec
loopne
aam
add
sbb
dec
xor
adc
(bad)
movs
fisubr
stos
fimul
ss
sti
jnp
sbb
movmskps
sub
push
out
fld
das
or
aas
xchg
ret
test
stos
xchg
add
in
push
mov
aad
aam
pop
mov
loope
sub
retf
lods
shl
cmps
adc
jecxz
xor
test
cwde
lock
push
dec
fcom
mov
push
call
dec
retf
jmp
dec
jge
inc
in
and
(bad)
jbe
push
lods
pop
pop
fcomp
push
outs
xor
stc
mov
js
pop
lods
fistp
jle
(bad)
js
dec
mov
retf
in
cmp
inc
rol
jp
inc
and
fs
outs
push
je
out
mov
and
(bad)
jle
movs
in
idiv
ds
adc
inc
lock
mov
out
div
dec
adc
and
and
mov
jns
inc
xchg
mov
push
push
mov
jl
mov
jbe
das
popf
test
inc
push
call
mov
out
jbe
cwde
outs
lods
rcr
cmp
push
or
or
sbb
jge
ja
xchg
pop
sub
rol
push
vpmadd52huq
test
cmps
loopne
aam
mov
js
ffreep
lahf
mov
jl
call
fwait
test
sub
movs
sbb
or
arpl
inc
mov
xchg
mov
in
xchg
test
fwait
mov
cmp
inc
xor
cmp
add
add
adc
dec
push
fcom
push
sbb
or
mov
aam
cdq
cmp
test
jge
repz
and
push
ficomp
adc
sti
inc
xchg
stc
call
mov
push
xor
jecxz
mov
loope
cmps
xor
es
lods
aad
loop
fucomip
inc
jae
lods
js
xor
xchg
push
xchg
outs
sbb
inc
ds
(bad)
arpl
dec
sub
mov
pop
mov
test
jns
xchg
mov
mov
jbe
sub
cmp
arpl
imul
and
test
jmp
neg
call
xchg
sbb
and
arpl
mov
ret
nop
xor
or
pushf
jl
sbb
(bad)
in
js
inc
les
mov
xchg
std
pop
pop
loope
mov
mov
aaa
xchg
in
push
fadd
xchg
adc
div
push
lahf
mov
addr16
out
imul
or
shr
mov
test
jmp
dec
loopne
dec
popf
push
cdq
xchg
add
repz
repz
(bad)
sub
cmp
rcr
push
test
or
lods
repz
rcr
ret
mov
add
out
mov
movs
cmp
pop
pusha
pop
adc
outs
sub
adc
loop
rcl
shl
sbb
dec
or
fs
sub
inc
adc
div
xor
ret
jle
test
dec
mov
dec
xchg
retf
add
push
push
jae
dec
js
or
das
cli
lods
cli
add
data16
xchg
push
cmc
cmp
ins
push
cmp
loope
inc
cmp
jne
jmp
mov
inc
dec
push
test
mov
jns
sub
push
je
loopne
hlt
mov
push
loopne
mov
dec
test
mov
aas
dec
(bad)
mov
int3
out
xor
xor
mov
xor
loopne
rcl
int3
mov
mov
mov
adc
std
jb
outs
mov
cmp
or
adc
mov
rcl
enter
test
sub
stos
jo
fst
out
push
jl
xlat
stc
fdivr
ja
adc
sbb
fnstenv
mov
push
jmp
retf
sbb
xlat
dec
mov
pop
stc
scas
add
shl
mov
test
lahf
hlt
outs
out
in
lahf
inc
shl
mov
ins
and
out
rcl
xor
inc
imul
pusha
repz
cwde
inc
adc
ss
(bad)
les
push
pop
outs
mov
add
ret
mov
hlt
(bad)
add
xchg
xchg
(bad)
mov
adc
pop
lahf
xchg
add
jo
daa
mov
jle
or
pushf
push
push
clc
mov
pop
addr16
pop
arpl
das
jge
int
xor
and
or
fcom
mov
jbe
inc
push
or
pop
les
add
adc
ret
ficomp
ds
or
shl
lods
stos
(bad)
stc
in
or
and
movs
fcmovne
sub
jmp
mov
int
mov
xchg
xchg
mov
push
xchg
add
pop
popa
cwde
(bad)
sbb
xchg
jne
sbb
lods
movs
or
sbb
inc
jecxz
adc
push
push
mov
jge
xchg
add
scas
ror
aaa
nop
lods
and
add
loope
shl
adc
adc
dec
(bad)
bound
push
and
cs
(bad)
mov
repz
mov
xor
jo
mov
fdivr
ficomp
cmp
fwait
and
mov
ja
or
dec
imul
dec
mov
sti
sbb
and
in
or
js
mov
sub
or
xor
jne
mov
push
outs
scas
push
pop
push
mov
push
enter
fcom
sub
test
mov
sbb
in
add
or
jmp
cli
mov
add
dec
in
inc
add
pop
fsub
push
or
add
in
inc
pop
sub
pop
inc
leave
jno
js
pusha
cli
shl
test
lea
mov
scas
retf
jae
jecxz
xor
retf
mov
add
fwait
jnp
cmp
push
cmp
cmp
push
retf
in
fadd
or
data16
inc
aam
pop
push
scas
fld
push
and
call
pop
jmp
enter
sub
jmp
cmp
cmp
out
addr16
push
jns
lods
jae
fisttp
or
or
in
push
xchg
mov
in
jo
and
inc
cmp
add
(bad)
or
movs
addr16
jmp
out
and
test
jmp
enter
cli
push
mov
js
ss
cmp
int
jno
daa
dec
mov
(bad)
outs
and
retf
adc
sbb
test
mov
sbb
adc
jne
sub
cmp
xlat
or
(bad)
push
data16
(bad)
stc
push
sub
lods
iret
out
fst
in
(bad)
repnz
adc
shr
je
jle
pop
push
(bad)
sbb
ja
imul
pop
ins
lods
pop
adc
sub
enter
es
add
addr16
jno
test
mov
cmp
cmp
push
mov
call
fcom
xor
pop
sbb
sbb
xchg
ret
xor
jbe
cmp
mov
or
in
jmp
jg
xor
icebp
loop
sbb
push
movs
mov
xchg
fcomp
adc
sub
mov
pop
retf
aaa
push
ins
mov
pop
jmp
test
inc
push
inc
jge
or
pusha
(bad)
mov
mov
addr16
in
cmp
mov
mov
sbb
aas
xchg
in
pop
sbb
js
jp
adc
int
in
mov
lods
jp
stc
dec
nop
mov
pusha
outs
in
pop
push
dec
loope
fst
adc
cli
fs
jle
adc
lock
sub
push
cdq
xlat
lea
adc
mov
scas
imul
pop
xchg
loop
cli
pop
jb
std
aas
xchg
xchg
xchg
fcmovnb
mov
push
sub
xchg
push
out
ja
call
and
mov
sti
add
jnp
dec
test
cmp
mov
pop
por
cmc
shl
push
retf
fistp
or
cmp
cmp
(bad)
icebp
jge
daa
pop
or
cmp
out
shr
mov
int3
movs
push
mov
xchg
cmp
mov
mov
shl
fiadd
and
(bad)
retf
inc
xchg
and
jns
test
add
sbb
call
jmp
mov
sbb
imul
jo
imul
inc
cmp
sub
data16
cli
jne
loope
sub
push
cmp
aad
add
mov
nop
sub
cmp
fldenv
scas
pop
adc
mov
cmps
push
or
add
xor
xchg
call
mov
pop
(bad)
cmp
cld
movs
push
sub
inc
out
(bad)
out
and
scas
cmps
test
not
inc
sub
jmp
sahf
dec
push
and
pop
jg
or
loopne
and
ret
stos
push
dec
and
fidiv
jae
jnp
push
mov
mov
add
mov
in
and
or
dec
cmp
and
fistp
xchg
in
jmp
jle
jns
retf
scas
ffree
pop
dec
nop
repnz
fadd
pop
xor
mov
xor
fs
dec
mov
cmp
pop
or
aas
mov
and
imul
cmp
sub
cmp
in
or
repz
mov
dec
add
cmc
icebp
sahf
xchg
js
mov
cdq
mov
repnz
mov
xor
outs
fcom
je
cmp
cmp
mov
movs
fbld
and
call
xchg
aas
pop
iret
stc
xchg
mov
sbb
ins
mov
pusha
aaa
mov
pop
sub
js
add
push
mov
loopne
sub
(bad)
shr
add
add
mov
or
pusha
inc
add
rcl
or
lods
jecxz
es
cmps
sub
mov
adc
sbb
fidiv
fcmovb
fsubp
adc
imul
rol
lahf
add
jno
mov
popa
repnz
jg
repz
mov
shl
mov
mov
arpl
(bad)
out
fdivr
ss
add
ret
xor
jmp
xor
cmc
retf
xchg
cmps
cmp
jae
cld
test
push
ret
push
xor
push
pop
jne
pop
lods
ja
call
ss
dec
mov
dec
inc
aad
or
loop
ins
dec
mov
push
repz
cwde
mov
pusha
test
sub
adc
sbb
mov
mov
mov
imul
xor
cwde
push
cmp
jae
js
jo
fyl2xp1
xchg
ins
pushf
aas
xabort
or
pop
(bad)
mov
lods
mov
div
test
lock
mov
iret
or
test
dec
hlt
xchg
jge
jl
(bad)
retf
adc
popa
inc
dec
pop
xor
sar
mov
jl
push
or
add
dec
shl
dec
mov
cmc
jp
mov
sahf
add
ins
push
pop
inc
mov
retf
retf
retf
jae
dec
sub
loope
pop
retf
mov
scas
movs
fdiv
mov
jb
jnp
mov
sub
or
push
push
add
out
adc
jl
fldenv
stc
rcr
xchg
test
push
test
cmp
jmp
ss
ins
pop
int
xor
enter
popa
dec
repz
in
push
cmp
dec
jp
push
mov
sbb
xchg
and
pop
lea
mov
loopne
dec
xchg
fild
repnz
mov
or
or
ss
lods
and
xor
mov
mov
hlt
xchg
mov
cmps
data16
ss
inc
adc
jae
das
ret
enter
loopne
loop
retf
add
jne
popf
inc
outs
jg
in
hlt
cmp
xchg
push
push
xlat
pushf
leave
jmp
dec
xchg
mov
bnd
jg
fadd
outs
ret
or
shl
(bad)
dec
jb
dec
sub
cmpxchg8b
adc
movs
pop
lods
xor
and
adc
and
std
mov
mov
cmp
jmp
or
frstor
fistp
js
imul
adc
lods
test
mov
and
stc
mov
pop
cmps
mov
arpl
cli
mov
(bad)
push
jnp
aam
mov
aam
stos
mov
inc
xchg
cmc
bound
sti
cli
jnp
das
mov
mov
loop
inc
retf
add
cmp
jnp
sub
test
xchg
(bad)
popf
stos
push
cmp
daa
lods
in
xor
or
les
pop
dec
adc
fiadd
adc
inc
ins
mov
pop
retf
cmps
sbb
mov
fist
pop
sub
pop
dec
aad
push
xchg
or
dec
dec
and
adc
mov
pop
loopne
test
sbb
ret
xchg
dec
les
sbb
ss
ror
dec
pushf
daa
add
sub
rcl
jbe
jl
sbb
or
mov
inc
push
ins
mov
inc
jne
in
xchg
aad
cmp
xlat
test
cs
lock
pop
ins
jno
cmc
push
popf
cmps
adc
jnp
cwde
add
adc
push
ss
rol
ins
push
sbb
cld
push
jecxz
jnp
pushf
ins
jl
aam
(bad)
fwait
adc
movs
xchg
sahf
iret
mov
xchg
mov
popa
jb
add
(bad)
xor
sbb
mov
pop
inc
xor
mov
test
lahf
repnz
(bad)
jbe
dec
(bad)
jb
bound
and
(bad)
push
xchg
sbb
xchg
lods
xchg
mov
pusha
pop
pop
lods
sbb
cmp
ror
push
sub
xor
push
mov
pop
push
inc
stc
rcr
xor
fldenv
pop
adc
pop
inc
push
popa
add
pop
mov
outs
pop
les
test
jb
or
jg
int
mov
or
cmps
test
and
and
jnp
jp
jbe
jns
sub
mov
call
repz
(bad)
sahf
pushf
inc
out
pusha
adc
mov
pop
fldenv
mov
mov
clc
inc
test
pushf
sub
(bad)
ror
cmps
arpl
stos
mov
ja
fisub
cmps
mov
in
sbb
les
or
iret
in
sub
push
and
arpl
mov
inc
mov
xchg
mov
int
test
movs
scas
mov
sub
pop
or
add
inc
cmp
jo
lahf
xchg
or
pop
fldcw
or
daa
sbb
repnz
fst
mov
loope
into
daa
and
push
arpl
jne
fdiv
popa
pop
pop
pop
mov
jbe
lods
je
fdiv
adc
pushf
sbb
in
call
(bad)
jmp
cmp
(bad)
cmp
add
push
inc
jmp
jp
std
or
adc
repnz
push
(bad)
and
pop
mov
jl
lea
fidivr
mov
cmp
call
ins
daa
clc
cmc
or
mov
stos
shl
(bad)
dec
(bad)
fwait
lock
push
mov
dec
(bad)
fwait
std
in
push
add
push
vxorps
clc
movs
fsub
mov
or
push
xchg
mov
data16
cmp
jb
mov
dec
retf
movs
bound
dec
fmulp
mov
or
push
retf
inc
fisttp
jns
cmp
(bad)
lahf
mov
xchg
cmp
mov
das
test
test
jbe
xchg
loopne
test
jns
fldlg2
rcr
xchg
dec
xor
fucompp
mov
pop
mov
and
sbb
lods
js
and
lods
mov
adc
fistp
and
push
mov
add
cmps
fsubr
ja
test
mov
fs
mov
in
iret
pop
test
repz
adc
sbb
mul
pop
xchg
ret
xchg
ret
mov
mov
fld
fadd
inc
xor
adc
mov
add
fistp
xchg
hlt
jns
iret
push
cmp
cmps
(bad)
movs
sbb
xor
out
mov
arpl
mov
ins
pop
xchg
cmp
aaa
mov
(bad)
or
(bad)
in
scas
cmp
and
cmp
jmp
mov
sub
(bad)
fdiv
fnstenv
cmp
fsub
push
addr16
push
add
push
cmp
xlat
pop
jbe
nop
sbb
and
cmp
stos
sar
aam
add
fst
mov
inc
adc
sbb
aas
and
sub
and
mov
push
sub
pop
popf
sub
mov
pop
pop
mov
mov
push
lahf
test
icebp
adc
nop
and
or
and
test
adc
pop
jns
retf
mov
int
mov
ins
pop
movs
sar
aas
or
add
outs
repz
idiv
repnz
lea
mov
iret
push
ins
stc
mov
adc
test
cdq
sub
aaa
sbb
adc
(bad)
fidiv
retf
div
out
imul
dec
inc
loop
icebp
fwait
data16
into
mov
sti
xchg
mov
jmp
sbb
cmp
xchg
mov
std
in
mov
dec
popa
pop
movs
lds
arpl
xchg
mov
sub
scas
inc
das
mov
add
fimul
mov
gs
mov
stos
std
jnp
test
and
ins
daa
mov
(bad)
cmp
fbstp
jo
xchg
das
outs
pop
push
pop
(bad)
shl
sub
pop
adc
arpl
inc
and
push
add
dec
lods
stos
cmc
mov
test
ins
adc
sar
mov
and
jl
ins
xor
xor
adc
stos
cmp
fisub
(bad)
nop
(bad)
aam
ss
shl
dec
stos
pusha
mov
ret
push
mov
jmp
push
into
out
mov
rep
inc
cmp
jno
hlt
jo
test
cwde
fld
jp
(bad)
movs
(bad)
xlat
stos
sub
je
(bad)
pop
xor
popf
dec
jle
fwait
pop
sbb
cld
inc
inc
shr
sahf
push
add
sbb
fisttp
mov
push
cmp
cli
test
call
out
cmp
loopne
sahf
adc
shl
std
and
in
inc
das
or
inc
bound
aad
xor
or
call
dec
fist
adc
into
aam
mov
add
leave
add
lea
mov
jnp
popa
ret
xchg
leave
pop
loope
rcl
xor
jo
(bad)
aad
dec
ins
xor
hlt
jmp
inc
leave
xchg
rol
push
pop
clc
push
jg
inc
cmp
stos
retfw
mov
and
xor
cmp
scas
ins
sbb
push
add
shl
int3
into
stos
mov
lea
cli
push
test
(bad)
call
inc
mov
cmp
call
pop
loopne
cmp
cld
cld
pop
adc
sbb
lock
outs
mov
gs
aaa
push
int3
pop
xor
fistp
scas
sbb
jb
movs
mov
mov
int3
call
fs
stc
stos
clc
jg
clc
dec
dec
dec
mov
jo
add
push
mov
push
adc
pop
outs
leave
cmp
(bad)
fnstsw
push
dec
scas
push
outs
enter
repz
and
mov
and
(bad)
into
out
shr
adc
loope
stos
adc
adc
fistp
sahf
int3
test
lods
jmp
push
push
pushf
mov
mov
sub
cmp
pop
arpl
in
loopne
idiv
dec
mov
add
out
loopne
mov
cmc
stos
jbe
inc
inc
and
adc
mov
cld
mov
jo
mov
sbb
mov
adc
push
cmovns
adc
cmp
inc
movs
cmc
mov
and
stos
ds
sub
stos
inc
or
mov
mov
mov
sub
push
mov
imul
leave
shr
jle
mov
xor
or
and
sbb
pop
retf
ffreep
mov
push
cli
aad
int
das
mov
cmp
ret
adc
jp
mov
retf
jge
movs
aaa
pop
retf
dec
xor
jnp
and
xchg
btc
fs
scas
jnp
adc
dec
xchg
or
call
dec
and
mov
jmp
test
jnp
in
cmp
jmp
jbe
movups
and
mov
sbb
dec
mov
jle
ret
sub
movs
(bad)
pop
cmc
jl
loope
sbb
(bad)
hlt
inc
dec
and
push
add
retf
stos
js
imul
xor
bound
and
mov
jno
sbb
fidiv
popf
fwait
inc
arpl
shld
sti
and
fiadd
inc
mov
mov
les
cmp
or
sub
out
mov
in
arpl
and
adc
pop
pop
lahf
pop
clc
aaa
dec
loop
fldenv
xchg
imul
in
inc
jne
mov
push
adc
nop
call
jge
or
or
or
movs
xchg
dec
mov
inc
mov
cmp
and
xchg
rol
aam
xor
jle
js
loope
mov
loopne
ss
enter
movs
scas
or
inc
cdq
in
stos
(bad)
mov
in
rcl
(bad)
fcom
xor
pop
sub
mov
(bad)
loopne
pop
adc
mov
xchg
imul
call
dec
in
and
lock
adc
xchg
jno
movs
sub
addr16
push
hlt
xchg
add
inc
jns
call
mov
and
out
inc
sti
mov
push
test
scas
inc
movs
ds
inc
imul
mov
int
outs
lea
and
and
pop
cmp
mov
jmp
test
cwde
test
data16
sbb
cmp
mov
fmul
mov
mov
inc
push
dec
lds
mov
mov
jns
xlat
cdq
sub
popf
imul
xlat
sbb
retf
retf
mov
cmp
call
xchg
test
and
xor
xor
cdq
jg
in
push
lock
mov
push
loopne
add
or
inc
fcom
in
add
inc
stos
scas
rcr
rcr
cdq
push
jbe
data16
sbb
adc
cmp
dec
mov
(bad)
xchg
mov
iret
pop
in
gs
pushf
push
stc
mov
inc
sti
pushf
jle
adc
inc
xchg
push
cmp
cmc
clc
test
fadd
or
outs
xchg
addr16
loopne
mov
sub
xchg
sub
adc
rcl
loope
pushf
in
jb
sbb
xchg
or
pop
cwde
enter
(bad)
out
xor
ja
aam
repz
(bad)
clc
nop
mov
rol
add
jmp
inc
mov
mov
or
mov
mov
(bad)
loope
in
clc
or
repz
popf
sbb
daa
retf
adc
cmps
xor
inc
call
cld
or
fbstp
pop
xlat
mov
jns
stc
int3
inc
mov
xor
std
push
xor
addr16
(bad)
jb
cmc
inc
rol
dec
sbb
les
sub
ret
jo
dec
pop
loope
pop
push
in
mov
sbb
push
xchg
fld
(bad)
mov
dec
xchg
adc
dec
mov
push
sub
pop
pop
mov
pop
add
dec
mov
mov
and
dec
inc
ins
jmp
mov
lea
in
fisttp
jbe
dec
pop
mov
mov
mov
jge
daa
inc
jae
adc
push
cdq
xor
loop
mov
adc
(bad)
push
movs
aam
icebp
clts
movs
mov
dec
popf
adc
adc
popf
or
test
adc
stc
iret
jne
retf
mov
ins
mov
fidivr
jae
xchg
mov
jo
push
jle
mov
popf
sbb
aaa
dec
(bad)
push
push
dec
jp
mov
out
xchg
xor
rcl
jno
frstor
add
into
mov
fiadd
jbe
addr16
int3
addr16
pushf
shl
and
cmp
in
mov
aam
sub
jmp
sbb
pop
xor
jo
jmp
rcr
mov
adc
pop
leave
mov
jmp
mov
cmp
sbb
or
xchg
test
mov
(bad)
shr
sahf
movs
mov
add
icebp
mov
ja
mov
fcom
sub
dec
dec
in
repnz
mov
jge
xchg
mov
icebp
stos
or
scas
daa
(bad)
xchg
sbb
mov
cmp
jb
pop
hlt
rcr
dec
cld
push
mov
mov
push
jl
repnz
jmp
jo
dec
bound
xor
cld
mov
xchg
cmps
lods
enter
dec
popf
dec
stos
mov
adc
popa
cs
pushf
(bad)
stos
lock
jg
mov
fwait
sbb
adc
rcr
test
mov
pop
cs
pop
mov
add
cmps
xor
into
scas
xchg
pop
cmp
stos
or
push
sub
pop
add
arpl
pushf
rcl
sbb
xor
mov
bound
aas
icebp
xor
push
iret
cmc
repz
stc
sbb
ja
jae
inc
sub
rol
cmp
pusha
jg
push
mov
adc
mov
pop
jno
or
mov
xor
(bad)
ffreep
sbb
jp
sbb
mov
mov
ss
ja
das
pop
mov
(bad)
cmp
aaa
js
mov
pop
jne
retf
retf
mov
in
repnz
inc
jge
sbb
dec
sahf
jmp
aaa
mov
lds
adc
jl
jp
loopne
fs
and
jno
jbe
lahf
aam
cwde
xchg
lock
xor
stos
or
jg
mov
leave
inc
push
mov
and
outs
popf
mul
dec
inc
adc
cwde
dec
xchg
js
jmp
pop
jb
jl
mov
adc
pushf
adc
mov
mov
inc
pusha
jp
cs
push
das
bound
push
cmps
jecxz
add
call
into
sbb
jns
rol
mov
add
inc
inc
mov
push
xor
or
cvtdq2ps
sub
call
jno
dec
shl
pop
ficomp
and
mov
out
inc
cmps
and
cld
lds
mov
lea
das
cmp
mov
ret
adc
ja
jle
sub
into
push
(bad)
lock
ss
cmp
push
cld
xchg
pop
lahf
push
cmp
int3
cmp
rcl
jne
push
ins
fs
fnstenv
popa
add
jne
jmp
xchg
enter
adc
cmp
shl
fucomip
cmp
ret
push
ret
scas
lahf
mov
sbb
dec
(bad)
enter
rol
adc
call
and
sahf
mov
out
mov
jmp
nop
enter
or
(bad)
gs
inc
cs
outs
mov
jl
fwait
rol
enter
in
not
pop
loop
xchg
or
xchg
enter
pushf
xchg
popa
fist
imul
push
in
sbb
je
xor
std
or
fwait
cmp
out
xchg
inc
xor
mov
jns
repz
mov
call
sub
iret
adc
in
push
stos
xlat
cmps
stc
jno
add
cmp
test
xor
popf
mov
loope
inc
je
push
mov
je
xchg
adc
add
mov
cmps
popf
outs
cdq
xchg
js
movlps
out
pop
mov
pop
imul
mov
pushf
pop
add
push
sbb
push
fs
cmps
xor
jbe
cmps
pop
push
adc
imul
mov
jae
jge
ror
pushf
jle
adc
dec
jbe
enter
jecxz
mov
push
jp
fcomip
fidiv
sbb
and
outs
jb
lods
inc
ror
mov
repz
ins
fstp
(bad)
or
cmp
cli
fwait
xchg
mov
mov
push
jmp
mov
mov
adc
ret
push
and
aam
call
sub
pop
in
xchg
test
mov
test
jo
addr16
cmc
cmp
(bad)
std
out
ja
out
rcl
(bad)
loop
rcl
jae
jns
shl
push
arpl
push
shl
pop
sub
mov
or
gs
fwait
push
in
push
cld
and
mov
xchg
jbe
dec
cmp
repnz
jnp
dec
stc
adc
sbb
rcr
test
sahf
sbb
sub
in
cmp
loop
gs
out
test
xchg
pushf
xchg
loopne
(bad)
mov
cmp
out
cmp
xchg
in
fs
inc
dec
jne
mov
inc
jp
pop
push
cmps
in
and
ins
pop
and
or
shl
pop
cmp
jg
cwde
pop
sbb
sub
nop
pop
dec
mov
pop
ret
inc
loop
push
and
xchg
mov
push
push
and
xor
mov
add
into
jl
call
pop
pop
into
lods
pushf
adc
push
mov
movs
mov
mov
adc
dec
sub
dec
and
imul
pop
out
dec
adc
xor
lock
mov
or
pop
fstp
cmps
inc
push
sbb
(bad)
loopne
je
xor
aas
movs
and
jmp
cs
xor
fnstsw
sub
es
imul
add
ss
pop
inc
inc
test
out
fistp
lea
cli
sub
push
inc
xor
mov
in
jg
arpl
or
loopne
and
push
jbe
in
pop
cmps
cmp
repnz
ss
pushf
arpl
stos
or
mov
xor
shr
xchg
popa
nop
jge
js
outs
retf
lahf
pusha
clc
add
or
mov
push
cli
std
sub
mov
shr
(bad)
ret
jg
or
mov
dec
repnz
dec
jp
push
xor
fs
call
push
test
jmp
test
add
in
xor
pop
in
ror
adc
add
adc
pop
mov
aas
jns
sbb
in
loop
sub
call
dec
pop
scas
or
lock
push
(bad)
shl
mov
es
pop
and
add
mov
aam
dec
(bad)
rol
and
mov
cmps
mov
jnp
stc
pop
in
mov
addr16
cmp
std
push
sbb
and
jp
cld
add
pushf
xchg
fild
loopne
mov
int3
aad
imul
sub
pop
push
loopne
stos
lds
retf
sti
jmp
lahf
ja
repnz
jmp
and
iret
xchg
es
fcomip
cmp
mov
adc
enter
(bad)
popf
pop
adc
push
push
int3
mov
push
mov
fwait
xor
mov
xor
jo
xor
adc
xchg
push
jl
movs
add
call
sbb
push
call
sub
mov
dec
xor
or
fistp
(bad)
adc
xor
pop
or
sbb
jmp
mov
into
cmp
test
jbe
hlt
in
mov
out
push
call
jae
fwait
bound
adc
xchg
jno
push
or
imul
sub
jmp
je
cdq
outs
enter
(bad)
in
sub
pushf
and
leave
dec
xchg
(bad)
mov
push
xchg
out
sbb
sti
xor
nop
mov
scas
fistp
jae
mov
cli
sahf
das
movs
adc
add
call
sub
push
inc
cmps
sbb
js
and
inc
add
adc
ret
xlat
xor
dec
jne
inc
pop
mov
std
(bad)
sahf
adc
mov
dec
dec
inc
das
(bad)
addr16
add
push
aaa
cmps
inc
rcr
push
fsubr
ds
sbb
push
test
enter
aas
pop
sub
pop
xor
xor
jmp
arpl
dec
xlat
leave
jp
mov
jmp
shr
movs
aam
ss
fs
sbb
addr16
ja
xchg
ss
cmp
jg
ins
inc
jle
dec
pop
movs
sar
jno
fsubr
ja
jmp
pushf
sbb
pop
imul
movs
pushf
fistp
rcr
sbb
fisub
push
sub
dec
loopne
(bad)
xor
cmp
cld
sub
jb
test
int
cmp
inc
cmps
mov
adc
dec
inc
jmp
inc
in
push
das
cmp
stc
clc
lock
and
or
out
scas
sub
std
out
pushf
cmp
jmp
adc
cld
jmp
in
inc
mov
mov
xchg
sub
call
dec
sbb
jl
sub
loope
test
mov
js
jmp
cmp
or
mul
adc
stos
cmp
sbb
add
les
outs
adc
aam
adc
mov
add
int3
pop
mov
fstp
add
das
fcmovb
pop
cmp
dec
and
inc
and
(bad)
lea
and
rol
push
cmp
mov
dec
xchg
int
lock
int
les
int3
mov
xchg
adc
cmp
mov
jae
movs
xchg
mov
cli
lock
push
test
jne
cmps
je
sbb
int3
push
(bad)
jns
cmp
jmp
dec
push
jnp
mov
(bad)
dec
xor
movs
inc
sub
adc
sbb
add
push
push
jmp
sbb
add
push
ss
add
std
fidiv
mov
push
rol
jnp
push
(bad)
fadd
cdq
int
mov
scas
jp
jp
mov
add
icebp
jae
add
pop
add
popf
fwait
pusha
pop
rcl
das
repz
loopne
push
int
aas
xchg
stc
pop
neg
mov
sbb
adc
mov
test
adc
adc
movs
call
or
fistp
mov
shr
mov
jno
iret
cwde
ds
movs
(bad)
xchg
jb
arpl
jl
push
out
sbb
xchg
dec
xor
movs
adc
call
(bad)
cmp
add
das
retf
imul
xor
stos
add
add
mov
mov
fild
out
js
(bad)
in
sub
cmp
mov
sub
iret
or
mov
inc
mov
repnz
das
shr
repz
sar
popf
fstp
gs
pop
mov
jbe
ret
in
mov
push
sub
add
ror
adc
sub
xchg
sbb
or
jecxz
pop
mov
push
add
inc
shr
add
dec
inc
cdq
or
mov
jnp
mov
btc
jp
cdq
add
inc
clc
lahf
pop
test
inc
arpl
dec
mov
jns
scas
or
fldcw
dec
(bad)
xor
jp
arpl
add
xlat
in
add
sub
push
dec
mov
repnz
lods
xchg
shl
xchg
sbb
ds
mov
mov
stos
mov
aad
bound
loope
add
add
or
add
xchg
out
fs
out
pop
stos
sub
add
arpl
mov
popf
fldenv
or
test
cmps
pop
call
xor
mov
pusha
add
stos
jo
push
jnp
sahf
(bad)
jle
mov
push
xor
pop
jle
add
test
jecxz
adc
test
loope
sti
sbb
adc
enter
lods
mov
inc
sbb
jb
popf
xlat
dec
fstp
push
retf
jg
retf
mov
sbb
inc
test
pop
pop
imul
idiv
or
xor
xor
xchg
pop
xor
aam
cs
pop
mov
lea
iret
or
pusha
xor
sbb
mov
adc
test
int3
inc
fisub
jmp
jl
fst
fstp
popf
cmp
mov
xchg
jp
pop
ret
cld
stc
int
push
pop
jl
jns
inc
dec
mov
js
ins
mov
xchg
jbe
gs
jecxz
rcl
hlt
(bad)
push
dec
pop
fs
mov
inc
rcl
mov
jae
shl
(bad)
mov
sti
mov
sub
ins
cmp
jbe
mov
pushf
xor
mov
imul
push
pop
adc
add
xchg
in
push
cs
in
in
push
ret
mov
or
cmp
lock
cmps
inc
jmp
inc
xchg
aam
outs
jnp
ss
jb
fs
cdq
pop
dec
push
jmp
popa
mov
lock
enter
and
cld
jg
jg
or
sbb
cdq
fsub
mov
add
jb
xchg
daa
mov
mov
in
ja
push
cmc
out
xlat
pusha
xacquire
or
aas
das
test
xor
(bad)
jns
cmps
repz
scas
or
mov
pop
and
adc
and
fsubr
mov
xchg
mul
gs
lock
mov
das
icebp
jnp
test
push
sbb
sub
push
push
and
add
out
jne
stos
xchg
mov
pop
fistp
mov
xchg
in
fist
sbb
xor
mov
lods
jne
inc
stc
adc
mov
(bad)
ins
mov
mov
sub
mov
pop
dec
shr
mov
pavgw
xor
fwait
rol
cmp
fcom
sbb
adc
inc
add
and
inc
test
push
(bad)
pop
test
mov
bound
sub
retf
and
fucomp
mov
cmp
dec
jl
sub
int
pop
jge
sbb
rcr
outs
jle
les
adc
push
mov
push
fidivr
cmps
test
arpl
cmp
lds
mov
mov
fisubr
pop
popa
cmovo
or
sbb
dec
sbb
adc
mov
test
mov
addr16
add
dec
retf
xchg
ins
rcr
push
mov
call
sub
test
mov
cmc
dec
icebp
call
push
ficom
outs
out
dec
xchg
jge
rol
push
popa
loope
xor
aaa
and
xor
mov
inc
jo
ins
and
xchg
or
adc
inc
rcr
and
cmp
movs
loope
out
xor
pop
fdivr
mov
mov
aas
push
(bad)
mov
pop
mov
mov
sti
jno
jns
mov
xor
xor
cli
idiv
mov
int
jmp
jns
and
ficomp
or
in
pop
mov
xchg
mov
fs
fsub
mov
pop
sbb
imul
or
add
mov
xchg
pop
dec
adc
mov
jae
jecxz
mov
out
sub
mov
ret
push
pushf
ins
adc
sub
and
add
jmp
les
xchg
adc
mov
mov
dec
stc
mov
in
adc
sbb
pop
pop
push
neg
aas
outs
dec
jmp
mov
inc
jmp
cld
xchg
(bad)
jnp
mov
retf
call
neg
xor
idiv
add
mov
lea
and
push
das
inc
sub
or
dec
into
pop
jp
jns
jmp
cmps
push
and
popf
pushf
and
sbb
cmps
movs
push
and
stos
test
dec
mov
cmp
adc
retf
cs
add
push
xchg
neg
ja
mov
das
mov
and
adc
adc
pusha
add
xor
test
ja
mov
call
add
stc
pusha
add
imul
add
mov
inc
jb
inc
rol
inc
jmp
push
aaa
push
ds
sbb
jmp
or
and
fs
add
enter
cmp
mov
jg
lds
jl
leave
jo
push
jmp
push
push
jmp
fcmovbe
lods
push
inc
aam
inc
dec
cs
cmp
push
pop
popf
jp
cmovg
movups
and
call
shr
lahf
sub
cmp
jb
push
stos
nop
xor
push
stos
scas
fild
xor
popa
pop
lods
adc
test
xchg
out
fld
retf
sub
outs
pop
jmp
scas
into
push
or
repz
retf
arpl
sbb
jl
add
in
cmp
inc
xchg
push
and
int3
add
sbb
in
cli
or
lock
rcr
imul
mov
sbb
in
(bad)
cdq
outs
or
fisubr
loopne
shl
retf
or
push
and
mov
out
into
xchg
jl
mov
rcr
cld
xor
div
add
out
sbb
cmp
fist
pop
mov
nop
jbe
maxps
dec
dec
jnp
pusha
push
mov
push
je
ds
push
mov
retf
cmp
xor
arpl
sbb
int
les
mov
dec
idiv
push
faddp
fdiv
inc
ror
add
in
(bad)
pop
imul
addr16
dec
mov
dec
ror
call
mov
outs
(bad)
mov
adc
jecxz
sub
loope
adc
cs
cld
add
dec
ins
(bad)
pop
lar
ins
xor
cmp
push
push
into
in
imul
inc
stc
mov
adc
xor
add
je
fild
lods
scas
lods
shl
push
sbb
jle
ficom
test
clc
mov
cmp
jno
mov
or
es
adc
mov
jb
xor
mov
dec
jp
push
and
xchg
in
inc
push
sub
loope
jae
inc
xchg
in
pop
mov
imul
dec
mov
pushf
test
aam
icebp
gs
sub
stc
lods
stc
sbb
adc
outs
xchg
sahf
inc
fsub
call
(bad)
jecxz
xchg
fdivr
inc
mov
es
and
jns
std
inc
jecxz
(bad)
push
pop
(bad)
mov
fwait
call
add
or
add
movs
aad
jbe
lea
sbb
das
jmp
pop
fimul
pop
cdq
mov
push
cmps
sbb
js
stc
popf
or
jo
or
inc
jno
dec
and
leave
xor
(bad)
ret
jno
daa
jo
call
ret
sar
enter
dec
(bad)
xlat
mov
xor
idiv
jb
xchg
add
aad
or
jmp
lods
and
xchg
inc
in
loope
sar
or
and
test
lock
and
dec
icebp
test
(bad)
mov
mov
cmps
movs
stos
cmp
inc
mov
push
inc
cld
pop
sar
and
mov
pusha
dec
push
xchg
xor
hlt
push
fisttp
jg
mov
push
dec
lods
push
mov
imul
js
fld
popa
sti
mov
cmp
push
aas
cmp
dec
cmp
pop
pop
mov
retf
std
es
movs
cmps
pop
nop
ror
iret
fs
pop
ins
js
add
ins
fdivr
sub
lods
xchg
jb
ss
mov
pcmpeqb
imul
pushf
push
not
stos
dec
test
adc
lods
fild
sahf
sub
out
cwde
fs
add
outs
sar
cmp
sub
nop
outs
movs
mov
sar
neg
push
lahf
jmp
push
push
sbb
cmp
out
icebp
loope
mov
inc
push
push
mov
and
mov
in
movs
shr
add
xor
call
jp
mov
cmp
sub
dec
ficomp
int3
es
stos
fcmovne
mov
cmp
sub
pop
mov
mov
adc
jge
ss
push
xchg
adc
lods
cdq
inc
cdq
sub
(bad)
arpl
aad
xchg
pop
loope
sub
adc
mov
pushf
out
mov
push
outs
pop
out
int3
iret
aam
enter
lods
cmp
push
pop
cmps
push
cdq
jo
(bad)
pop
popf
pop
cmp
cpuid
pop
enter
inc
fwait
(bad)
sub
pop
mov
sub
push
push
cwde
jecxz
mul
xor
scas
adc
jns
or
(bad)
pop
cwde
mov
stos
bound
jge
sub
frstor
scas
xchg
add
adc
or
inc
outs
outs
(bad)
jp
mov
mov
jne
mov
aas
adc
xchg
mov
leave
mov
clc
cmp
mov
push
nop
pop
xchg
gs
sbb
mov
cmp
out
das
fwait
push
ja
test
mov
fst
pop
and
mov
add
adc
sbb
or
add
imul
xchg
push
xchg
jge
mov
(bad)
or
fs
push
xchg
and
in
pop
xlat
xor
jb
sub
push
jns
into
imul
daa
jb
call
cmp
aam
bound
jmp
mov
mov
add
mov
ret
xchg
dec
xchg
mov
xchg
packsswb
xor
xor
add
xor
xchg
out
retf
dec
mov
cld
les
cs
test
pop
popa
and
adc
gs
movs
xchg
ret
push
cmp
cmp
adc
fwait
cdq
lods
xor
(bad)
sbb
fdivr
fmul
ja
jmp
int3
lods
test
adc
sub
enter
pusha
sti
(bad)
pop
xor
push
xchg
outs
sbb
or
ffreep
jmp
jp
stc
lds
daa
push
scas
and
jecxz
test
push
loope
dec
push
mov
pop
ficomp
ins
cmp
out
and
(bad)
adc
ins
dec
mov
mov
fmul
sbb
xor
call
(bad)
shl
xchg
jo
sub
xor
cmp
and
movs
leave
xor
inc
fild
mov
(bad)
or
out
sahf
aaa
imul
test
jp
xor
in
xchg
iret
ja
jnp
sbb
(bad)
out
inc
mov
mov
sub
dec
icebp
mov
fadd
mov
push
out
cs
xlat
pop
out
jno
push
and
fsub
fisub
cwde
data16
popa
cmp
jae
cmp
lock
mov
sub
mov
in
mov
sar
adc
mov
jge
nop
pop
mov
fs
retf
mov
inc
js
mov
addr16
xchg
rol
shr
sub
mov
inc
aam
mov
fcomp
mov
or
dec
push
add
inc
fcmovb
push
jp
mov
sbb
aam
mov
rol
xchg
test
mov
fwait
ja
popf
add
das
pop
add
fadd
add
shl
call
(bad)
jge
in
jmp
mov
xchg
jmp
neg
mov
pop
rcr
jp
add
mov
arpl
mov
in
shl
xor
popf
mov
xor
xchg
test
outs
in
in
add
call
xchg
rcr
dec
jecxz
outs
mov
fdivr
cmp
sahf
and
js
jle
retf
inc
shl
xor
xor
rcr
and
xor
add
jb
jge
aad
cwde
cmp
bound
ins
push
cmp
pushf
or
sbb
dec
jo
clc
xor
jle
mov
pop
fbld
dec
sbb
mov
das
nop
sbb
test
loop
sub
jo
adc
lods
mov
xchg
inc
push
jo
out
fisttp
mov
sbb
ret
rcl
data16
adc
into
push
inc
jl
add
rol
shr
and
gs
cli
pop
outs
adc
mov
pop
push
pop
jo
cmp
xor
repnz
mov
inc
jmp
call
fisttp
xor
sub
xor
xor
xchg
mov
and
test
aad
lods
imul
xor
(bad)
cld
out
cli
adc
push
push
add
mov
or
mov
les
jmp
imul
sbb
mov
mov
imul
das
mov
inc
gs
adc
ins
jne
adc
push
loopne
sar
ficom
jmp
lahf
cdq
add
mov
ret
mov
sub
int
add
jne
popf
cmp
adc
jg
mov
aam
inc
xlat
sbb
jmp
mov
imul
arpl
lea
out
add
jno
fldcw
call
dec
push
int
and
icebp
cmp
mov
inc
push
ins
mov
inc
mov
sbb
ss
xchg
(bad)
push
not
inc
lea
loope
mov
jmp
adc
aas
shl
mov
xchg
jge
adc
adc
enter
add
jmp
cmp
rcl
outs
mov
and
or
mov
mov
or
cmp
icebp
pop
ins
cmp
cmp
retf
std
mov
sub
or
cmp
sbb
not
cmp
std
ret
icebp
in
sar
test
dec
jbe
sub
cmc
mov
dec
cmp
cs
xchg
adc
cmps
inc
in
gs
fnstcw
xor
jb
test
fs
ins
pop
mov
movs
ins
jl
loop
sub
jns
ja
mov
or
pop
push
aas
rcr
ret
mov
add
shl
xlat
xor
push
mov
mov
add
in
js
jle
push
into
daa
jns
adc
mov
mov
mov
lds
mov
add
mov
jmp
cmc
inc
mov
mov
shl
test
cmc
xchg
mov
adc
sbb
clc
mov
fwait
xchg
jmp
mov
imul
and
dec
(bad)
xor
cmp
mov
fwait
in
and
repz
daa
ja
inc
cli
lock
in
jae
scas
xchg
cmp
mov
jg
int
add
mov
repz
mov
xor
int
xor
dec
xor
inc
sar
dec
imul
lods
pushf
outs
or
lods
sub
mov
pop
pop
jne
xor
inc
mov
push
and
and
out
mov
mov
push
xchg
cs
hlt
mov
pop
mov
data16
fisttp
jbe
std
xchg
push
repz
mov
repz
add
(bad)
jge
pusha
ret
adc
(bad)
in
or
cmp
dec
fisttp
inc
sbb
xor
or
pop
out
inc
mov
cmp
jmp
mov
repz
sub
aas
xor
dec
cmp
loopne
jbe
out
test
shl
cmc
mov
adc
iret
add
cwde
or
mov
mov
and
cmp
les
jo
add
in
cwde
dec
retf
adc
xor
gs
cmp
popf
sub
push
push
pop
add
test
ret
imul
cmp
std
push
cmp
ror
(bad)
dec
adc
in
loop
iret
inc
pushf
cmp
fs
mov
sub
les
outs
stos
xor
cmps
retf
sub
int
retf
test
stos
repz
repz
nop
aam
jp
mov
sub
pop
inc
jg
mov
ret
je
bound
shl
mov
jno
fldenv
into
or
test
xor
loope
mov
(bad)
adc
mov
das
or
loopne
call
iret
push
retf
inc
mov
pop
pop
xchg
nop
xchg
repnz
push
sbb
adc
sahf
jmp
inc
mov
and
ret
pop
sub
test
mov
int3
push
out
dec
retf
xchg
loopne
push
ret
pop
dec
or
clc
pop
jecxz
mov
cdq
cmp
fisubr
movs
mov
icebp
loop
add
fwait
sub
mov
not
sbb
ret
jno
mov
add
adc
pop
repz
jne
add
inc
push
scas
sbb
aad
mov
ins
popa
xor
or
call
mov
(bad)
mov
lea
retf
int
shl
or
iret
mov
xchg
arpl
xchg
sbb
pop
and
mov
pop
pop
add
pop
mov
mov
mov
nop
xor
jmp
sbb
cmp
js
or
pop
lock
pop
scas
or
mov
xor
rcl
cmp
sub
adc
cdq
adc
enter
mov
adc
sbb
jl
inc
dec
inc
push
mov
or
cmps
adc
adc
jae
mov
dec
pop
sbb
clc
or
out
icebp
add
sub
fisub
jmp
imul
jge
jae
rcr
jbe
xchg
jge
imul
out
jp
das
(bad)
jns
(bad)
hlt
cs
rol
mov
bound
or
fdivr
cmp
xor
scas
add
ficom
lea
(bad)
mov
retf
fld
xchg
ja
xchg
cwde
mov
xor
xchg
(bad)
mov
imul
(bad)
lods
aaa
cmp
inc
imul
in
inc
xor
sahf
inc
sbb
mov
mov
jo
jne
xchg
aas
pop
dec
cdq
pop
in
cli
jne
xchg
xbegin
sar
jnp
adc
sub
mov
mov
test
push
or
add
cs
jmp
inc
int
inc
lds
inc
add
adc
and
rcl
lods
sahf
adc
fild
aaa
sub
iret
fimul
pop
xchg
cdq
test
cmp
cmp
push
add
mov
sbb
es
rcr
mov
sbb
add
mov
jb
push
aaa
sbb
xchg
test
rcr
jns
sub
mov
xchg
ror
dec
es
pop
cmps
mov
xchg
mov
or
or
mov
dec
push
fisttp
add
pusha
adc
lea
call
or
adc
inc
loop
hlt
pop
jno
(bad)
adc
jne
icebp
jae
btc
in
mov
mov
out
inc
enter
arpl
sub
xchg
jns
xchg
jmp
repnz
inc
div
into
in
xchg
arpl
mov
xchg
jge
(bad)
mov
jbe
in
popf
or
test
lea
rcr
fisubr
sub
or
add
outs
retf
jg
iret
and
jnp
stos
into
xlat
lds
in
cmp
call
sub
arpl
mov
popa
std
cmp
xor
mov
es
movs
jmp
int3
jne
sub
mov
jmp
jmp
and
xchg
mov
int3
pusha
cwde
jo
popa
dec
leave
(bad)
inc
sbb
and
push
push
outs
or
jmp
(bad)
jae
fimul
xor
mov
adc
push
rcr
les
adc
adc
and
pop
add
ins
test
in
in
cli
inc
pop
pushf
mov
out
gs
aaa
mov
mov
xor
or
push
cmc
fwait
test
enter
push
jne
pop
push
aad
ins
ret
jns
(bad)
cli
rcl
les
mov
popa
mov
cmp
adc
cwde
(bad)
addr16
fsub
mov
add
cmp
mov
sbb
shr
fnstenv
loope
xchg
push
push
cmp
inc
mov
out
retf
out
inc
mov
mov
pop
or
rcl
frstor
pop
fdiv
(bad)
ror
jo
adc
add
add
add
loop
not
cmc
and
mov
sar
pushf
xlat
mov
imul
push
out
bound
and
push
mov
push
lahf
mov
mov
xchg
sub
sti
test
push
cmc
mov
js
stos
(bad)
jae
mov
dec
scas
(bad)
lds
push
rol
std
cmps
xor
cwde
and
test
inc
pop
sbb
cmp
imul
ror
add
in
movs
fsub
call
jecxz
ins
mov
jae
xor
or
cmp
jno
dec
sbb
shl
inc
shr
inc
mov
shr
leave
or
mov
ja
out
jg
mov
push
sub
call
dec
mov
xchg
daa
push
jg
div
pop
in
fdivr
pop
(bad)
hlt
push
addr16
call
xor
sub
in
mov
pop
jmp
jmp
jo
stos
aam
push
pop
nop
ins
mov
inc
sbb
pop
dec
and
(bad)
mov
cdq
cmps
mov
dec
pop
test
js
inc
leave
and
add
inc
in
outs
or
es
fwait
in
outs
test
cmc
mov
dec
fwait
or
push
cmps
xor
mov
pushf
loop
(bad)
and
or
popf
jno
(bad)
cwde
xchg
cmp
xchg
shl
xlat
ret
ins
sar
push
es
shl
mov
stos
ror
xor
cmp
jp
jno
in
movs
popf
loope
or
cs
pop
movs
cmps
inc
in
sbb
inc
pop
mov
daa
out
loopne
cmps
adc
mov
retf
lock
jae
sub
test
mov
xchg
mov
ja
dec
into
cmc
sahf
sar
jle
sbb
and
aaa
pop
std
xor
(bad)
dec
sbb
or
cdq
neg
faddp
add
inc
test
aas
sub
pop
and
icebp
adc
cs
(bad)
cs
dec
jle
iret
pusha
(bad)
and
xor
mov
in
xor
fld
sub
or
arpl
cs
mov
mov
stos
pop
add
pop
bound
jecxz
ins
imul
fs
sbb
clc
jns
mov
repnz
jbe
cdq
stc
ja
pushf
push
inc
pusha
je
shl
jnp
mov
test
mov
xchg
adc
sbb
(bad)
stos
push
fild
fnstsw
and
xchg
dec
loopne
ins
sbb
jg
movs
sbb
scas
pop
sub
lahf
cld
in
cdq
inc
in
lds
sbb
lds
push
pusha
push
lea
popa
loop
shr
test
jl
jb
mov
jno
aaa
add
in
lods
not
push
test
adc
ret
inc
push
lds
test
mov
imul
pushf
sub
ret
inc
push
inc
inc
xchg
les
mov
jnp
dec
push
fdivr
jg
or
daa
clc
mov
xor
push
pop
pop
test
cmp
adc
scas
dec
std
add
mov
sar
call
or
xor
or
es
pop
mov
pop
in
jmp
daa
or
inc
sub
pop
add
fbstp
das
dec
push
xchg
loope
cmps
add
lds
push
mov
sbb
adc
pusha
ds
ret
bound
or
aam
movs
pop
mov
leave
push
out
adc
mov
nop
xor
ret
cmps
ret
or
mov
stos
mov
push
fwait
mov
(bad)
jo
xchg
jp
add
mov
and
lock
les
call
cmps
stos
js
(bad)
mov
test
xor
je
fistp
in
(bad)
pop
hlt
pop
mov
mov
imul
lea
pop
dec
jg
js
pop
ror
xchg
dec
mov
movs
sar
jae
or
jle
lds
and
or
cwde
xlat
xchg
call
les
jae
arpl
aad
jae
xchg
aas
push
jle
dec
push
(bad)
sti
or
fimul
in
fidiv
retf
mov
ins
shr
lea
inc
sbb
in
loopne
cmp
push
push
inc
test
dec
(bad)
or
jle
mov
bound
jmp
leave
dec
sub
xor
adc
push
cwde
dec
mov
movs
mov
adc
(bad)
mov
lahf
hlt
fs
rcl
push
popf
mov
fdiv
dec
out
or
adc
and
inc
add
sub
mov
cmp
xchg
mov
repnz
mov
push
mov
test
cmp
ins
les
fdivr
(bad)
inc
cmp
les
gs
jmp
or
mov
mov
mov
add
sbb
mov
xchg
and
out
or
dec
les
or
sbb
mov
jge
push
jmp
mov
ja
push
inc
std
les
sub
std
jb
int3
mov
cmp
je
cmp
push
cli
scas
ret
addr16
pusha
push
pop
sbb
push
cli
ss
daa
shl
jae
pop
(bad)
jns
or
sbb
leave
call
cld
inc
jmp
(bad)
ror
jno
aad
dec
fistp
jo
cmp
addr16
ins
xor
(bad)
or
mov
mov
loop
inc
jl
xlat
retf
pop
adc
inc
inc
fmul
inc
loop
pop
cdq
ds
add
xor
xchg
inc
push
ins
push
rol
sub
lds
xchg
mov
gs
(bad)
jmp
pop
pop
js
imul
mov
lods
gs
nop
ror
jp
mov
shl
ins
push
push
js
sahf
pop
and
repnz
dec
aad
repz
int3
retf
push
ja
sbb
xchg
xor
xlat
mov
pop
lea
inc
cmps
cmp
fs
xchg
adc
xchg
lahf
iret
cmp
sbb
xor
cmp
arpl
bound
pop
clc
or
xor
aas
(bad)
into
fimul
push
test
dec
retf
shl
push
addr16
mov
xchg
push
or
pop
sbb
cmp
push
cmp
cmc
cmps
ja
add
ror
in
imul
and
sbb
cld
pusha
vmaxpd
mov
push
pop
rcl
clc
mov
fwait
pop
and
loopne
push
and
lods
inc
not
dec
sar
mov
les
mov
mov
rcr
stos
xor
int3
ins
enter
sub
push
sbb
movs
aas
jnp
loope
imul
out
fcmovnu
sub
push
out
in
pop
xchg
mov
fisttp
imul
fcmovnbe
push
mov
repnz
pusha
fsincos
xor
mov
arpl
jp
fwait
(bad)
call
dec
daa
outs
mov
jecxz
lods
pop
mov
scas
aad
mov
push
icebp
jo
ins
movs
xchg
xor
fild
cdq
loop
add
mov
or
outs
adc
mov
movs
stc
inc
pushf
cs
test
sub
js
lds
repz
add
cmps
cmp
(bad)
fild
adc
iret
push
ins
nop
es
neg
mov
xchg
pop
mov
adc
dec
dec
adc
retf
sub
dec
ja
mov
imul
jb
clc
fisttp
shr
dec
shr
aad
(bad)
popf
icebp
fdivr
aam
sub
out
fstp
lods
(bad)
sbb
mov
mov
imul
xchg
icebp
mov
mov
xchg
bound
push
loop
enter
pop
cmp
jmp
fidivr
pop
add
add
(bad)
retf
mul
mov
into
dec
mov
xchg
cdq
push
popf
xchg
dec
mov
popa
inc
sbb
add
into
cmp
xchg
push
pop
adc
in
mov
push
sbb
or
loopne
fwait
xchg
es
jmp
stos
jmp
call
xchg
ss
xchg
mov
je
sbb
sahf
out
inc
add
mov
xchg
int
aam
std
jle
pop
sbb
cmp
jne
cmp
ss
push
jmp
mov
mov
ins
xchg
sbb
push
cld
sub
xlat
dec
sub
pop
es
mov
xchg
xchg
into
fcomp
out
out
mov
jecxz
jno
pop
jo
rcr
mov
mov
xor
mov
xor
adc
cwde
mov
test
cmps
sub
pop
aaa
sub
js
cld
test
aam
daa
mov
xor
fcomp
fwait
std
jle
pop
inc
push
ins
jp
mov
xchg
xchg
enter
icebp
cmp
jae
inc
stos
fisubr
pop
mov
aaa
mov
dec
cmc
or
cwde
in
test
pushf
ror
jbe
call
cmp
sub
dec
add
fld
xchg
das
sub
imul
add
call
push
pop
xchg
loope
fadd
dec
dec
push
add
mov
test
in
int
cmc
dec
into
mov
sub
dec
out
xchg
push
outs
shr
push
arpl
cmps
test
or
push
inc
addr16
aam
inc
sub
fldcw
fnstsw
inc
cmp
sbb
dec
shl
test
dec
js
into
jmp
jle
xchg
sub
dec
sub
ja
stos
jbe
dec
scas
push
pop
adc
ret
mov
int3
and
dec
and
push
shl
inc
xchg
push
or
sbb
fs
pop
mov
mov
std
mov
arpl
inc
inc
(bad)
sub
scas
call
inc
lock
dec
sub
sub
sub
xchg
and
xchg
ins
add
ret
(bad)
jne
or
bound
test
mov
pop
cmp
jecxz
aam
sbb
inc
mov
scas
popa
pop
imul
adc
cmp
xor
movs
xlat
push
out
xchg
shl
xchg
retf
inc
cmp
imul
outs
stos
pop
out
xor
jb
aad
inc
icebp
push
loope
dec
adc
aam
inc
mov
mov
mov
test
add
mov
stos
and
jne
add
pushw
sbb
mov
fdiv
dec
cdq
pop
or
add
mov
xchg
dec
(bad)
shr
cmp
cmp
call
xor
sbb
test
mov
cmps
call
sbb
shl
cmps
mov
xchg
loop
pop
xor
xor
cmp
ret
add
loope
sbb
cmp
daa
mov
mov
and
adc
test
sub
loop
mov
and
add
or
std
jmp
mov
jns
add
pop
jo
mov
pop
out
mov
sar
lock
sahf
je
sbb
mov
test
or
xor
xor
or
xlat
add
and
mov
inc
sbb
cmps
pop
aas
inc
neg
jo
scas
outs
sbb
popf
stos
jbe
and
pop
clc
xchg
mov
mov
push
stos
scas
mov
or
out
arpl
mov
cwde
cli
and
iret
mov
ficom
fmul
out
adc
xchg
daa
test
es
movs
loope
mov
cli
cwde
ret
fidiv
aad
mov
shr
ins
cmps
popa
cld
push
dec
cmp
jb
in
pop
es
sbb
aad
xchg
lods
xchg
xor
fimul
pusha
retfw
cmp
les
adc
mov
xor
jnp
inc
mov
xchg
mov
icebp
push
inc
es
arpl
repnz
or
daa
fst
fistp
or
in
adc
mov
jo
sahf
fidivr
or
stos
ins
jp
das
outs
jo
(bad)
mov
or
inc
jmp
adc
xor
jno
arpl
std
call
dec
in
sub
cmps
inc
call
les
jmp
test
aam
mov
das
mov
adc
inc
fnclex
jmp
in
jl
and
test
inc
inc
jmp
test
mov
movs
push
sub
xor
add
mov
push
dec
dec
dec
add
out
sqrtps
ret
push
rcr
stos
adc
ror
(bad)
fwait
cmps
dec
sar
or
cdq
pop
cs
xor
inc
outs
pop
push
and
fwait
pop
fs
mov
in
push
mov
xchg
test
lock
mov
and
xor
sbb
fdivrp
mov
or
sbb
xor
sub
cmp
push
rcl
dec
or
inc
pop
fldcw
sbb
mov
lods
fs
addr16
cs
mov
arpl
jno
or
pushf
fimul
xchg
xor
fst
fisub
bound
sbb
mov
movs
add
mov
jl
xchg
or
adc
sbb
xor
rcl
lds
and
(bad)
jp
cmc
dec
inc
fucom
imul
clc
xchg
adc
add
add
mov
cmp
leave
xor
jp
inc
int
aam
add
(bad)
lods
enter
adc
lea
ror
cmps
push
aad
addr16
jae
shl
push
cmp
ficom
scas
cmp
mov
pop
jp
mov
jo
scas
out
cmovno
mov
stc
adc
loopne
outs
push
outs
inc
hlt
sub
pop
inc
jge
mov
cli
inc
jbe
xor
lahf
fst
ror
test
rcl
arpl
xchg
pmaxsw
add
mov
mov
mov
in
ror
pushf
push
out
mov
mov
scas
sar
cli
in
outs
jne
push
retf
mov
lods
dec
jecxz
jbe
dec
sbb
loope
mov
sub
mov
add
outs
mov
inc
data16
or
dec
pop
inc
xchg
pop
mov
ins
mov
cmp
sub
mov
xchg
call
mov
adc
mov
dec
addr16
and
jge
outs
out
nop
jae
adc
jno
sbb
push
and
jns
xor
add
(bad)
mov
fs
push
xchg
inc
add
inc
mov
adc
(bad)
int3
xchg
sbb
or
mov
not
rcr
push
cmp
inc
jb
xchg
xor
pop
imul
call
dec
cmp
cmp
nop
jbe
push
xlat
jno
xor
mov
jae
xor
mov
xor
cmp
sub
xor
pop
and
test
out
sub
sub
sbb
jne
jmp
sub
mov
adc
dec
cwde
fs
push
mov
jbe
xor
sbb
or
jnp
xor
cmps
call
mov
ins
xchg
cdq
mov
fcom
icebp
mov
add
pop
(bad)
neg
jb
xor
adc
jecxz
cmp
cli
jnp
and
xchg
fs
jge
dec
pop
popf
jne
fsub
and
dec
sub
aaa
push
jno
mov
add
jmp
pop
jne
dec
mov
repz
xchg
add
inc
mov
push
out
mov
pusha
mov
and
pop
imul
mov
mov
in
adc
data16
push
sbb
xor
xchg
fst
fidivr
sbb
ss
xchg
xor
inc
jmp
vmovhps
and
aas
(bad)
sti
mov
inc
dec
(bad)
pop
cli
jp
lods
mov
dec
fcomp
push
mov
pop
inc
xor
jne
or
aam
inc
mov
das
mov
mov
bound
dec
jecxz
lds
cmp
mov
mov
icebp
mov
sti
(bad)
out
daa
popa
(bad)
mov
or
popa
inc
stos
pop
enter
add
outs
mov
or
pop
movs
cmps
push
pusha
scas
arpl
or
jb
add
jmp
and
fisub
sub
or
sbb
xchg
ins
nop
gs
add
clc
arpl
adc
and
dec
addr16
mul
je
push
xor
inc
hlt
jne
sti
sub
cmps
fldcw
sar
pop
pusha
sub
mov
ins
fldenv
gs
sub
aad
jb
ffree
inc
mov
xchg
jge
retf
adc
jg
ss
mov
sti
xchg
ins
into
dec
lahf
xlat
popa
inc
xchg
jmp
mov
jle
xor
adc
fisub
cwde
cs
jmp
sbb
(bad)
in
out
je
xchg
or
xchg
test
jecxz
mov
popf
pop
dec
pop
ret
dec
cwde
(bad)
jl
adc
vpmullw
std
adc
add
ja
push
cmp
jnp
or
mov
imul
out
scas
sbb
and
push
pop
shl
cld
sti
or
icebp
(bad)
clc
in
mov
adc
test
xchg
cdq
call
jns
sahf
das
lea
or
add
call
sbb
ins
(bad)
jmp
out
jle
jae
out
(bad)
mov
lea
call
mov
dec
or
xor
into
pop
mov
in
xchg
add
sti
mov
les
mov
je
or
mov
scas
ja
adc
xor
add
ja
stc
aas
adc
int
mov
mov
cmp
cmp
ss
call
cmps
sub
and
mov
lahf
mov
dec
adc
test
lods
cmp
retf
add
fist
mov
fistp
jg
mov
inc
jp
mov
clc
jmp
fwait
aad
stos
call
repnz
je
ret
jb
sbb
or
jle
pop
cdq
cld
je
lock
jne
sbb
pushf
ins
(bad)
cmps
mov
cmps
jg
cmp
mov
out
test
cmp
pop
std
nop
aas
mov
add
cmp
movzx
xor
cmp
jne
dec
push
scas
fnstsw
add
jne
add
fst
sar
push
jne
push
fdiv
loopne
jmp
mov
outs
lahf
test
sbb
xor
or
mov
sbb
add
lods
and
lds
retf
ror
xor
xor
cld
inc
call
loopne
and
addr16
nop
(bad)
xor
xchg
aad
cmp
scas
pop
and
mov
call
sub
push
lods
ins
(bad)
loope
popf
in
retf
dec
call
pop
or
push
call
gs
cmp
xchg
outs
in
cmp
pop
adc
jge
or
fld
mov
xor
xor
adc
sub
cli
outs
and
mov
sub
paddq
mov
sar
xchg
lods
test
daa
es
inc
sub
or
push
xor
add
fst
fild
cmp
jbe
mov
ror
adc
dec
cmp
xor
(bad)
xchg
pop
pop
ror
mov
mov
inc
pop
not
push
mov
je
or
mov
sub
push
fcom
cvtdq2ps
and
ret
xchg
jge
std
xlat
xchg
inc
movs
fiadd
arpl
fdiv
fistp
or
cli
mov
std
call
lds
ds
out
cmc
mov
xor
mov
test
test
ins
out
ins
mov
mov
bound
mov
test
adc
mov
out
jmp
loop
or
push
rcl
adc
jle
sub
pop
mov
cdq
scas
out
add
repnz
and
scas
sbb
lock
ja
inc
sbb
bound
xor
sbb
push
in
adc
je
in
jmp
adc
cli
pusha
out
inc
iret
stc
xor
and
pop
cmp
iret
mov
mov
push
loop
popf
pop
jg
xchg
ins
cdq
sbb
out
adc
pop
popa
popa
retf
xchg
imul
jo
sbb
mov
inc
addr16
ret
jnp
cdq
idiv
stos
pushf
test
mov
aaa
and
mov
mov
mov
stos
imul
xlat
or
adc
enter
pop
(bad)
bound
shl
lds
call
sbb
rol
cs
lock
dec
les
es
cld
inc
lods
popf
xchg
fs
adc
inc
cmp
mov
popf
xlat
xor
es
out
sub
push
xlat
sbb
sbb
scas
rol
mov
sbb
aaa
cmps
stc
mov
sti
fsub
out
push
mov
jg
fcmovu
pop
stos
out
in
mov
das
lea
inc
and
pop
aam
aam
out
xchg
js
(bad)
dec
mov
sub
imul
retf
cs
stc
fcom
and
aas
sub
loope
mov
nop
add
mov
into
jbe
sub
loope
inc
popf
sbb
or
and
jmp
je
xchg
(bad)
loope
das
test
sub
mov
(bad)
shr
mov
mov
pop
(bad)
or
ret
out
mov
(bad)
jmp
icebp
pop
and
inc
jmp
test
pop
outs
mov
sahf
mov
cmp
in
jbe
addr16
out
or
mov
movs
sub
ret
adc
push
fstp
dec
data16
mov
and
aaa
dec
push
arpl
inc
inc
mov
xor
adc
(bad)
fnsave
into
das
mov
test
fcom
inc
popf
pusha
mov
js
pop
xor
test
(bad)
sbb
dec
mov
addr16
sbb
icebp
add
sbb
(bad)
ret
fld
pusha
jmp
push
dec
push
jmp
mov
pop
ds
daa
inc
dec
and
fcom
loop
dec
dec
xchg
stc
xor
jo
(bad)
cmp
jo
out
sti
xchg
shl
test
inc
push
and
mov
lock
inc
cdq
fld
shr
icebp
into
cmc
pop
outs
xchg
xlat
mov
shl
dec
xor
dec
push
imul
xchg
cld
dec
mov
adc
inc
add
mov
jl
in
or
mov
xchg
cmp
les
xchg
out
(bad)
push
enter
mov
cmp
neg
mov
(bad)
cmc
popf
push
fidiv
jmp
cmp
jns
mov
rol
aas
dec
test
scas
add
inc
fcomp
push
jmp
sbb
or
cmp
sub
xor
repnz
cdq
int3
pop
cwde
jne
out
mov
outs
pop
loop
(bad)
out
jp
cs
cwde
leave
mov
lahf
rcr
mov
xchg
xor
jne
mov
das
add
out
paddsb
xor
sbb
xor
pusha
push
ret
xor
add
bsf
xor
es
in
mov
lea
cmp
and
xor
(bad)
fild
xchg
loope
out
push
adc
adc
add
frstor
xchg
movs
jnp
cdq
cmp
and
fsubr
sub
fadd
jno
adc
mov
and
mov
jmp
pop
loope
adc
jg
jns
jb
les
or
mov
cmp
ror
and
pop
jmp
mov
js
xchg
cld
inc
call
mov
add
rep
xchg
and
pop
sub
add
jno
inc
fcom
in
push
jno
mov
sub
cmc
repz
cmovns
(bad)
pop
push
add
mov
sar
push
cmp
ja
loopne
(bad)
lahf
mov
cld
sub
mov
shl
fnsave
fcom
push
and
push
addr16
xchg
jle
out
cmp
loopne
sbb
outs
sar
push
fs
jl
into
jae
jmp
and
jns
(bad)
mov
arpl
cmc
cli
jae
int
xchg
not
fisubr
adc
and
mov
nop
or
out
cmp
push
fdiv
fistp
mov
cmps
mov
call
add
mov
mov
jge
leave
and
in
das
pop
aam
jmp
or
xor
and
cmp
inc
scas
test
mov
or
hlt
les
fidiv
sub
and
pop
imul
jb
adc
add
pop
fwait
xchg
scas
retf
fdivr
and
in
mov
or
ds
add
aad
fild
ds
cli
scas
mov
xchg
out
sub
out
and
dec
cmp
enter
jecxz
ja
push
test
call
mov
or
mov
and
jge
pop
nop
dec
cli
(bad)
retf
dec
and
clc
sahf
push
aad
cli
and
adc
jbe
xor
out
dec
lods
pop
cmp
adc
loopne
out
jbe
adc
stos
in
mov
out
cmps
inc
adc
(bad)
movs
popf
aaa
add
ins
pop
push
push
ds
cmc
push
xor
in
push
cmp
rcr
or
leave
loopne
dec
inc
fldenv
adc
jge
mov
les
cmp
adc
adc
adc
retf
loopne
call
(bad)
adc
push
aad
push
mov
repz
adc
xchg
push
fwait
ins
mov
test
mov
jle
dec
ins
jo
sbb
or
sbb
test
or
movs
mov
sti
pushf
sbb
mov
in
and
push
xor
pop
inc
(bad)
xor
jl
xchg
add
nop
mov
xchg
ins
mov
mov
(bad)
and
mov
sub
ret
xlat
hlt
sahf
fwait
popa
push
sbb
cmp
loope
sbb
test
dec
pop
iret
je
mov
(bad)
add
push
cli
aas
aas
xor
push
push
jmp
(bad)
adc
pop
xchg
jns
push
jmp
inc
lds
cwde
fisub
or
outs
ds
std
jo
movs
pushf
sti
or
and
mov
sbb
outs
mov
and
rol
fwait
mov
loopne
cli
sar
mov
cwde
dec
(bad)
pop
js
fwait
push
mov
dec
test
cmp
lods
inc
(bad)
pusha
sub
ret
dec
sti
and
stc
and
fnsave
sbb
inc
cmps
frstor
test
aad
scas
sbb
test
push
cmp
adc
es
jb
xchg
scas
xchg
push
cwde
xor
and
and
bound
mov
cmp
hlt
xor
inc
outs
sbb
sbb
xchg
sbb
sti
sar
pop
inc
sahf
inc
fnstsw
mov
add
add
in
iret
sbb
dec
dec
sbb
gs
movs
push
mov
(bad)
xor
ds
jne
movntps
cwde
or
movs
xchg
es
pop
in
pop
shl
daa
xor
or
call
mov
mov
test
scas
push
xchg
or
xlat
retf
xchg
in
clc
ja
es
rcl
call
retf
mov
neg
or
repnz
shl
mov
pop
push
ss
dec
push
iret
jle
add
mov
call
les
pop
ficomp
xchg
call
xchg
(bad)
mov
lds
cdq
push
jmp
sub
jl
add
or
nop
in
jne
sbb
sar
push
repz
mov
inc
sub
pop
fninit
out
not
test
push
lea
adc
loope
xor
(bad)
xor
cmp
stos
pushf
in
imul
inc
out
loope
xor
jge
imul
bound
aas
shr
adc
jo
lods
adc
jns
cmp
sub
and
popf
mov
inc
cmp
sub
cmp
loopne
in
pop
push
xor
mov
push
daa
mov
jbe
mov
addr16
cmp
retf
add
adc
dec
push
jbe
rol
lods
mov
mov
mov
push
fs
xor
(bad)
fcom
mov
sbb
(bad)
pop
xor
cwde
add
arpl
adc
push
mov
mov
xor
(bad)
clc
mov
ins
mov
pop
or
cmps
xchg
int
mov
jp
xchg
push
dec
sbb
fld
inc
and
int3
sti
adc
and
xchg
adc
mov
leave
sbb
cmc
xchg
jmp
sahf
push
cmp
xor
pop
add
mov
mov
jnp
hlt
lods
mov
test
xor
push
mov
inc
sahf
out
xor
and
mov
pop
sbb
mov
cmp
scas
jno
inc
pushf
lods
inc
cmp
xor
nop
movs
loope
pop
push
add
ss
or
cmp
sub
repnz
inc
into
jmp
pop
jo
push
cmp
push
(bad)
lahf
gs
adc
lldt
inc
fnclex
push
cmp
pop
or
les
pop
xor
ss
pop
leave
jmp
movs
jae
imul
cmp
js
jno
(bad)
out
jmp
loop
out
fidivr
outs
push
push
int3
lahf
div
dec
add
popf
int
test
mov
xchg
in
stos
sahf
cmp
paddb
add
out
in
fmul
pop
push
enter
mov
jmp
fs
out
inc
cwde
pushf
bswap
mov
jnp
cmp
iret
adc
popf
ins
sub
(bad)
cmp
mov
shr
(bad)
or
xchg
dec
mov
dec
mov
jae
pop
pop
jnp
aad
push
xchg
bound
out
cmp
js
pop
adc
cld
icebp
xor
and
mov
adc
inc
cmp
fidivr
loop
dec
mov
js
movs
(bad)
jno
test
aaa
jmp
jmp
shr
or
test
stos
dec
mov
imul
imul
cmp
outs
loope
movs
xchg
je
fistp
(bad)
into
and
icebp
sbb
mov
inc
lock
(bad)
icebp
clc
mov
enter
leave
ins
sbb
std
xchg
xor
xor
iret
push
inc
(bad)
je
in
mov
push
mov
jae
push
add
cdq
nop
add
pop
push
pop
icebp
loopne
inc
xchg
push
dec
and
fnstsw
ja
fisubr
stos
push
or
test
retf
fs
sti
mov
sub
jecxz
popf
mov
addr16
adc
test
jge
push
add
dec
iret
adc
inc
adc
or
iret
stos
sub
outs
scas
or
mov
pop
jbe
sub
ja
dec
cli
and
push
xlat
test
mov
mov
outs
popf
call
jl
add
daa
push
jg
adc
xor
sbb
leave
or
add
repnz
cli
mov
cmps
call
mov
(bad)
sbb
aas
push
push
mov
ja
push
cmps
test
out
push
mov
sub
inc
or
mov
dec
inc
outs
sbb
pop
jno
and
pop
scas
into
sub
push
cs
jmp
mov
mov
rcl
shl
xchg
adc
call
jecxz
pop
jo
inc
ret
ja
(bad)
pop
jl
ss
cmp
inc
cs
xor
sbb
xor
adc
wbinvd
dec
push
or
fwait
xlat
pop
std
push
adc
enter
mov
scas
jnp
xor
stc
(bad)
popa
imul
xor
pusha
push
(bad)
push
adc
aaa
popa
jne
inc
inc
add
inc
cdq
inc
adc
dec
cmp
rol
and
jae
inc
mov
scas
scas
add
cs
xor
iret
xchg
(bad)
js
(bad)
or
mov
sub
das
push
push
outs
shl
clc
sub
push
leave
sahf
js
adc
arpl
and
push
push
jmp
mov
not
fs
test
rcl
sbb
cmps
rol
icebp
dec
mov
repnz
or
xor
leave
xchg
inc
not
out
ins
mov
sbb
and
inc
or
mov
movs
adc
sbb
(bad)
inc
mov
mov
into
add
das
and
or
sti
mov
cmp
cli
push
dec
mov
xor
leave
mov
lea
jle
adc
mov
cmps
cs
mov
sar
push
dec
(bad)
mov
mov
clc
mov
pop
cdq
push
rol
mov
iret
mov
fistp
test
xlat
and
sbb
out
sub
aas
pop
mov
inc
cld
test
into
out
dec
sar
xor
push
jns
aaa
add
pusha
push
xchg
push
test
fwait
push
xor
addr16
lods
jl
lahf
jge
(bad)
imul
loop
dec
(bad)
jl
lds
xchg
xor
repz
(bad)
xor
fsubr
mov
mov
jb
fld
jmp
mov
aam
int3
jp
fnstsw
jmp
daa
push
xchg
jmp
leave
sbb
movs
fsubr
jne
mov
sbb
fs
enter
sub
int3
sub
and
xor
cwde
jbe
adc
lods
(bad)
jnp
mov
and
arpl
pop
push
mov
or
pop
mov
leave
dec
add
lahf
jne
loopne
hlt
dec
ds
fucom
jo
stc
sti
fs
jmp
scas
cld
stos
pop
jmp
inc
push
test
xor
pop
dec
add
mov
ret
sub
lahf
stc
jmp
and
pop
retf
inc
test
imul
lds
pop
mov
ficom
pop
stos
arpl
out
push
xchg
out
int3
sahf
add
retf
cwde
lods
mov
jae
or
dec
pop
out
mov
pop
icebp
stos
and
leave
push
inc
and
and
xor
ds
std
xlat
pop
jmp
pop
or
dec
jbe
lds
cmp
cwde
jmp
(bad)
inc
add
fsqrt
in
mov
sub
cmp
rol
mov
pop
mov
add
mov
cdq
jle
mov
lock
mov
pop
mov
or
jo
in
cmps
xor
loope
dec
imul
add
shr
sbb
sbb
sub
leave
and
imul
jg
addr16
xchg
add
xor
gs
data16
jge
cwde
out
jno
jb
lea
dec
jmp
jmp
jp
mov
mov
(bad)
xchg
xor
(bad)
mov
cmp
inc
call
and
push
or
push
inc
cmps
ret
retf
sbb
call
adc
cmp
jbe
or
inc
add
(bad)
sti
cmp
in
repnz
stc
hlt
ret
or
stos
ror
xchg
mov
and
mov
mov
pop
or
(bad)
xchg
and
out
sbb
and
lea
out
scas
or
xchg
lds
pop
int
and
ja
jno
ja
pop
push
jns
xchg
ja
mov
daa
xor
cmps
mov
mov
outs
sbb
jb
lods
frstor
lods
or
adc
(bad)
jecxz
iret
lods
jbe
and
cwde
adc
or
aad
xchg
sub
aad
cmp
bound
add
ficom
out
or
mov
retf
in
stc
sahf
sub
cli
ficomp
rol
(bad)
test
inc
in
cli
fistp
sub
pop
mov
xor
movs
jle
sar
adc
cs
and
cmp
outs
test
add
mov
outs
int
enter
xor
pop
imul
add
pop
es
ret
cld
pop
push
sti
mov
add
or
shr
popf
bound
and
(bad)
jo
mov
or
pop
out
(bad)
test
leave
xchg
mov
ins
fldcw
inc
dec
ss
adc
cmp
fs
stos
(bad)
cmc
or
inc
retf
jp
pop
or
mov
inc
test
and
movs
loop
xor
aam
mov
cmps
push
cmc
sub
mov
push
adc
cmp
cmp
push
adc
mov
sbb
push
xlat
imul
inc
lods
adc
in
cmc
(bad)
sbb
(bad)
es
ds
ss
lods
ret
jno
xchg
adc
pop
jecxz
es
idiv
mov
imul
call
xlat
les
and
(bad)
sbb
inc
fnstenv
adc
cmp
cs
lahf
add
(bad)
adc
jle
fmul
adc
stc
xchg
mov
movs
add
xchg
fistp
fmul
pop
fimul
shr
jbe
mov
out
jl
inc
daa
ja
add
cmp
es
xor
jbe
div
jg
int
xchg
mov
and
cld
xchg
(bad)
mov
sar
and
in
arpl
adc
inc
lds
pop
xor
add
push
xchg
jl
or
(bad)
mov
imul
mov
shl
int
xor
adc
inc
xchg
push
call
les
sbb
dec
ja
outs
cmp
stos
sbb
mov
push
jno
pusha
and
push
mov
je
(bad)
or
mov
inc
mov
ja
xchg
xchg
mov
mov
mov
mov
test
xchg
test
mov
mov
dec
and
imul
cmc
dec
pusha
fsubp
mov
cmps
mov
shl
shl
sbb
retf
(bad)
aas
fst
fld
sbb
outs
mov
popa
inc
ja
fidiv
xchg
push
(bad)
jmp
xor
cli
(bad)
push
inc
rcl
in
xchg
pop
ja
js
inc
loopne
sub
inc
fisubr
(bad)
mov
out
loope
xor
push
push
clc
mov
scas
cmp
adc
sti
ds
pop
push
fidiv
jns
std
(bad)
ds
iret
je
xor
sub
jne
sub
fnstsw
adc
loopne
mov
pop
bound
cmp
push
in
stc
rol
call
mov
add
ins
icebp
push
fld
adc
sub
xor
gs
cmps
bound
jno
mov
outs
pushf
mov
and
inc
push
das
and
mov
scas
(bad)
adc
(bad)
push
or
std
mov
push
and
adc
pop
adc
cmc
aam
fcom
dec
and
repz
sbb
or
mov
or
popa
jge
js
jnp
in
mov
jbe
push
outs
pop
faddp
push
mov
pop
mov
cmp
xor
cld
loopne
cmp
adc
scas
repz
into
xor
lods
xor
pop
sub
rcr
push
call
test
pop
(bad)
dec
mov
inc
in
(bad)
sti
imul
retf
mov
dec
cli
xor
test
jmp
out
popf
or
test
mov
xor
aam
cwde
in
mov
cmps
cmp
inc
scas
jb
cvtps2pd
adc
add
in
sub
cld
adc
cmp
retf
call
out
repnz
jmp
cli
jg
icebp
cld
ja
loop
int3
or
mov
mov
sub
adc
rcr
lea
cmp
add
adc
stos
(bad)
xchg
xor
movs
pop
or
jb
jbe
push
repnz
idiv
aad
xchg
ins
lds
mov
pop
sar
inc
dec
xchg
pop
dec
adc
add
pop
mov
adc
(bad)
imul
cmp
test
cmps
ret
aad
iret
push
mov
movs
pop
idiv
jp
jmp
imul
leave
and
add
xchg
mov
inc
xchg
push
jb
das
pop
add
cbw
loope
(bad)
nop
push
xchg
dec
int3
test
jb
mov
xchg
out
pop
out
mov
sub
xchg
fs
and
rcl
jl
jo
mov
cmp
adc
mov
push
push
mov
sbb
add
fs
mov
in
jns
cmp
cmp
fst
add
jmp
cmp
sti
xchg
jge
movs
out
fcom
jle
call
adc
cmp
inc
jae
mov
sbb
aad
stos
push
loopne
movs
dec
cmps
(bad)
xchg
xchg
lock
inc
or
aaa
mov
mov
out
stos
cmp
xor
and
call
jne
dec
stc
xor
sbb
dec
push
push
lea
sub
loop
arpl
and
les
or
psubd
mov
bound
scas
cwde
test
(bad)
out
sub
or
cmp
jle
test
les
stos
imul
addr16
push
icebp
fwait
sar
pop
mov
push
test
fcomp
inc
in
sub
ficomp
stos
add
jge
jns
movs
cmp
fild
push
cmp
sbb
jecxz
or
mov
mov
mov
dec
mov
(bad)
nop
ficomp
shr
lods
jecxz
xchg
mov
cmp
pop
retf
xor
xchg
mov
xchg
in
cs
stc
shl
xor
jecxz
pop
aam
(bad)
mov
or
lahf
xor
adc
mov
sub
cmps
cli
cli
aam
xchg
push
dec
push
into
outs
mov
(bad)
test
jecxz
add
push
test
sbb
and
aam
ins
jae
push
imul
push
mov
push
and
ficom
cmp
test
mov
std
cmps
(bad)
ss
fwait
outs
mov
push
mov
add
cmp
jmp
mov
push
ret
mov
jae
sbb
test
xchg
imul
loopne
add
or
mov
mov
or
adc
adc
xor
mov
loopne
mov
mov
out
inc
ret
dec
jge
xlat
cmp
ss
mov
ret
adc
adc
test
or
std
inc
mov
push
lds
mov
mov
fcmovnbe
cwde
push
sub
test
cli
test
jo
(bad)
add
bound
jo
adc
push
push
cwde
lock
clc
mov
cmps
in
pop
and
shr
pop
cmc
retf
(bad)
add
adc
sub
stc
ss
scas
gs
test
pusha
mov
push
sahf
out
xlat
cli
(bad)
mov
sub
push
push
mov
cmp
jo
pop
arpl
mov
fidivr
mov
xchg
sbb
rol
leave
rol
hlt
cmp
pushf
dec
push
pop
add
sahf
or
jecxz
cmp
cli
shl
mov
fild
cld
jno
ss
inc
pop
cmp
jge
sub
(bad)
imul
and
retf
xchg
jb
dec
xchg
and
loop
mov
xor
or
ins
popa
or
fwait
xchg
mov
inc
daa
adc
add
jmp
out
inc
add
push
sbb
ins
into
dec
fwait
xchg
outs
stc
add
xchg
xchg
xchg
mov
xor
lahf
xchg
retf
rcl
mov
xlat
mov
lock
outs
loope
and
push
loopne
leave
dec
out
test
push
mov
mov
stc
push
fsub
mov
mov
and
dec
fld
xchg
dec
fwait
fs
jns
std
fidivr
push
clts
sahf
add
jne
xor
in
xor
(bad)
fcomp
into
lods
test
mov
(bad)
cmp
repz
xchg
push
bound
shr
or
push
test
sbb
jbe
mov
mov
jle
sbb
pop
test
sar
inc
popa
rol
sub
adc
mov
lock
push
leave
push
movs
sub
shl
test
das
mov
pop
sub
clc
das
retf
out
mov
add
adc
mov
mov
push
mov
cmp
(bad)
outs
test
jnp
mov
jecxz
neg
xchg
adc
inc
cmps
push
mov
popf
mov
fisubr
stos
jb
jmp
and
ds
mov
int3
ss
cmp
cld
inc
(bad)
inc
add
xchg
push
imul
inc
dec
out
sbb
jae
xor
add
mov
add
sti
jnp
push
pop
stc
dec
out
in
push
pop
jg
xor
push
xor
sub
mov
mov
pushf
repz
test
sti
bound
out
push
cmp
sub
ins
mov
(bad)
dec
in
(bad)
pusha
jns
xchg
shr
jmp
or
push
call
xlat
ds
mov
push
jae
or
shl
stc
jae
test
in
mov
daa
pop
add
pop
dec
xchg
fimul
mov
lods
xchg
pop
sbb
sub
push
enter
sahf
(bad)
jb
daa
cmp
and
push
jg
dec
dec
push
cmp
and
jne
cmp
xchg
adc
call
dec
mov
jmp
out
or
stos
dec
loop
fs
jns
and
gs
dec
push
ret
xor
call
shl
cmp
in
mov
push
cmc
data16
mov
aam
sub
sti
out
or
pushf
xchg
xchg
push
add
mov
aaa
repz
cwde
jbe
cld
pop
daa
pop
jne
or
inc
pop
mov
cdq
or
dec
push
fbld
mov
dec
mov
mov
cmps
mov
xchg
push
adc
xor
mov
test
loop
imul
dec
int
sbb
popa
and
pop
addr16
mov
or
inc
pop
push
cs
dec
push
lock
mov
push
sub
xchg
sbb
sbb
jmp
mov
test
sbb
pushf
inc
(bad)
test
aad
pop
loopne
add
push
cmps
ss
enter
add
sbb
cwde
shr
cdq
xchg
test
inc
lea
aaa
mov
les
sbb
mov
mov
mov
into
pusha
and
scas
mov
add
(bad)
mov
push
mov
inc
scas
es
jb
jo
aas
xor
aam
sub
jb
out
cmp
std
rcl
pushf
pushf
mov
jae
sahf
movs
(bad)
jb
loopne
dec
mov
ins
and
cmps
push
fldcw
mov
sahf
push
test
in
in
sti
add
out
xchg
pop
xchg
arpl
mov
push
mov
pushf
sbb
mov
xchg
xor
mov
mov
and
popa
(bad)
outs
bound
js
sbb
sub
pop
aaa
jmp
and
cmp
outs
retf
(bad)
mov
out
imul
adc
sub
sub
je
or
arpl
(bad)
fisubr
jmp
or
pop
call
adc
and
aas
jbe
adc
clc
mov
jle
scas
or
imul
std
pop
inc
xor
repz
or
cmps
pop
sbb
shr
dec
hlt
fmulp
jne
neg
popf
rcl
mov
repz
addr16
and
or
shr
daa
ss
or
pop
and
aaa
outs
jnp
push
mov
mov
das
push
enter
pop
mov
out
stc
and
xor
pop
add
outs
stos
jb
scas
cmp
jae
push
jo
pop
das
mov
cmp
jno
lock
xor
xor
int
cs
lea
repz
add
and
cld
push
das
push
div
stc
mov
sbb
jo
call
cmps
dec
mov
xor
nop
bnd
xor
dec
sub
lds
sbb
(bad)
cli
sbb
cld
inc
jnp
addr16
(bad)
push
je
sub
xlat
xlat
jbe
loop
mov
pop
out
pop
pop
popf
xchg
inc
stc
loope
push
fist
jo
stc
jp
in
mov
push
scas
mov
(bad)
xchg
sbb
ror
lock
pop
mov
enter
add
cmp
add
inc
(bad)
jns
cmp
dec
lock
push
mov
and
mov
std
add
sbb
in
and
or
ins
cmp
xor
in
mov
ss
into
push
addr16
ret
inc
xor
ss
cmp
sbb
(bad)
push
lahf
(bad)
fdivr
call
pop
inc
test
cmps
xchg
fdiv
push
clc
mov
jmp
push
adc
outs
pusha
imul
xchg
add
int
push
xor
dec
in
mov
xchg
cli
sbb
push
out
inc
(bad)
(bad)
sub
sub
and
push
popf
jne
rcr
xchg
ja
(bad)
sub
outs
lock
or
adc
cwde
pusha
jl
pop
aad
adc
movs
lods
jg
repnz
jle
nop
mov
or
mov
lahf
push
data16
mov
inc
test
dec
push
jg
dec
push
loop
mov
mov
sahf
dec
jno
dec
or
imul
and
test
adc
mov
push
scas
scas
or
loopne
push
inc
lea
jmp
mov
mov
mov
(bad)
push
and
cli
dec
stos
(bad)
push
in
sub
push
(bad)
mov
test
fucom
push
imul
scas
cmps
out
xor
out
push
cmp
dec
adc
and
pop
mov
xchg
push
mov
mov
lods
repnz
jg
jo
jl
mov
(bad)
push
dec
or
arpl
jmp
or
xchg
pop
dec
loopne
retf
sub
dec
jp
dec
dec
push
mov
sahf
cmps
sub
cmp
iret
test
dec
sub
stos
inc
and
push
outs
inc
add
cmp
out
and
repnz
in
mov
(bad)
mov
bound
iret
cmp
sbb
push
or
clc
loop
jb
mov
frstor
push
adc
push
xchg
jecxz
xchg
inc
push
scas
test
rol
ror
jb
jl
or
pop
repz
jg
sub
in
add
and
and
sub
les
jbe
mov
sub
push
test
out
ins
out
pop
test
mov
cmc
das
push
shl
add
neg
jg
cli
(bad)
lods
call
push
push
nop
xchg
xchg
shl
(bad)
vsubss
aaa
pop
mov
cmp
and
mov
or
lods
xor
or
cmp
adc
cli
arpl
add
pop
jbe
pop
sahf
out
sbb
add
sti
arpl
pop
fldcw
add
nop
pop
xchg
outs
js
jle
ja
leave
jmp
fs
addr16
int3
fisttp
repz
in
retf
lahf
inc
in
lea
or
scas
mov
test
scas
jecxz
pop
or
scas
dec
push
scas
in
lds
pop
aad
mov
imul
jp
ret
and
je
xor
cmps
adc
mov
xchg
cdq
mov
mov
add
idiv
stc
not
jmp
pop
mov
and
cmps
add
add
push
aad
sub
ins
retf
std
xchg
jle
xchg
stos
test
adc
add
cmps
mov
fild
pusha
stos
fnclex
ss
jne
push
mov
std
xor
call
rol
pop
dec
call
add
add
in
mov
sbb
mov
add
adc
adc
pop
mov
lock
je
cmps
fisubr
xchg
lods
fs
dec
call
sub
xchg
call
or
stos
mov
ror
cmps
xchg
in
clc
(bad)
and
leave
dec
add
jnp
xchg
or
in
icebp
lods
(bad)
scas
and
jg
imul
sub
add
xchg
inc
pop
mov
in
ins
or
mov
pop
in
mov
jl
xchg
or
js
es
mov
js
mov
or
or
xchg
push
push
xchg
xchg
xor
sahf
mov
icebp
xchg
dec
mov
mov
xchg
xchg
xor
inc
cmp
cmp
in
test
xchg
retf
pop
arpl
mov
call
xchg
pop
les
in
imul
inc
in
jns
leave
inc
dec
les
in
pusha
sbb
daa
aam
clc
arpl
ins
aas
push
jns
aam
fwait
mov
aam
xchg
cmc
jae
and
test
sbb
inc
test
mov
mov
ds
xlat
pushf
test
adc
dec
les
fst
mov
jnp
mov
mov
inc
adc
mov
mov
(bad)
push
imul
mov
cmps
mov
pop
mov
fcos
jbe
mov
adc
cmp
fild
test
pop
fild
inc
push
or
out
lods
push
popf
aas
mov
lock
popa
push
adc
in
cmps
hlt
outs
nop
aam
jmp
movs
scas
in
push
clc
xor
je
retf
mov
and
jae
cmc
es
dec
fistp
popa
or
gs
fmul
les
popa
cmp
xchg
in
mov
mov
push
inc
das
adc
dec
in
in
enter
mov
or
mov
mov
cmp
daa
jo
(bad)
push
mov
xor
jno
test
cli
ins
test
inc
dec
out
and
into
(bad)
imul
pop
daa
ja
ret
addr16
ret
dec
pop
xlat
sti
xchg
leave
les
mov
mov
inc
jmp
popf
sub
(bad)
rcr
sub
inc
ins
jo
jne
jno
mov
jle
aam
mov
ror
icebp
call
or
inc
mov
loope
retf
xchg
sbb
call
adc
imul
push
sti
add
lods
les
pop
adc
fldenv
mov
cmp
sbb
enter
cmp
pop
inc
gs
(bad)
movs
xchg
pop
jb
sub
jb
push
xchg
add
cmp
xlat
rol
xchg
(bad)
sahf
cdq
inc
scas
cmp
pop
stos
sub
jl
outs
popf
rcl
mov
xchg
adc
sub
mov
and
js
sbb
shr
mov
ss
dec
out
mov
mov
mov
mov
nop
adc
bound
mov
cmp
mov
jmp
cmp
sahf
retf
repnz
rcl
mov
or
nop
es
xor
push
fwait
(bad)
push
in
push
mov
mov
fcom
xchg
push
xchg
xor
sar
pop
inc
les
(bad)
lods
xor
shr
aad
dec
cmp
add
pop
inc
mov
and
int
xchg
fisubr
cmp
dec
aaa
(bad)
fucomip
xchg
push
lods
pop
(bad)
call
(bad)
sbb
dec
or
or
inc
xlat
xchg
gs
xchg
or
add
pop
(bad)
push
aas
mov
push
fist
loopne
and
je
loopne
jno
xchg
pop
sub
retf
adc
aam
pop
div
sub
mov
mov
jmp
bound
mov
mov
pop
lahf
stos
outs
or
xchg
popf
push
call
pop
mov
leave
fwait
icebp
jg
and
in
mov
mov
push
dec
loope
inc
mov
lahf
jg
ja
(bad)
cmp
imul
daa
test
and
adc
push
js
(bad)
mov
adc
mov
cli
xchg
pop
dec
sbb
enter
xchg
sahf
inc
xchg
mov
ret
mov
jle
je
les
xor
inc
cmp
cmp
jae
sub
cld
psubusb
sbb
and
neg
call
cmp
adc
(bad)
call
movs
das
mov
leave
sbb
daa
mov
xor
adc
cmp
int
nop
add
sbb
ret
sub
test
sbb
test
aaa
es
mov
xor
rcr
mov
arpl
dec
nop
loop
into
push
sahf
add
(bad)
dec
ds
(bad)
js
dec
fs
mov
daa
mov
or
lds
sbb
pusha
aam
sbb
sbb
fldenv
adc
(bad)
push
mov
xlat
shl
fwait
daa
mov
leave
shl
add
sbb
inc
adc
or
nop
jge
push
ja
push
shl
add
xor
mov
adc
adc
fsubr
fdiv
test
mov
push
retf
ret
cmp
aas
repz
push
scas
or
pop
outs
out
stos
(bad)
jg
in
js
xchg
mov
mov
adc
dec
ret
add
retf
xchg
sub
shr
jle
leave
cdq
jl
ret
dec
xchg
xlat
xchg
and
test
pop
sahf
add
test
bound
retf
mov
push
das
or
sub
fbstp
in
lods
lea
xchg
dec
mov
js
ret
push
or
in
loop
mov
pop
xchg
outs
xchg
mov
push
add
leave
mov
loop
sbb
or
leave
repz
inc
add
int
cli
and
and
xlat
pop
sbb
in
and
sbb
arpl
pusha
mov
retf
jg
jl
test
pop
dec
mov
sub
jb
packssdw
sar
mov
(bad)
repnz
scas
and
push
out
mov
stos
push
icebp
inc
wbinvd
cmc
xchg
neg
push
mov
dec
mov
pop
in
inc
xlat
mov
cmps
xchg
fiadd
xor
lahf
clc
loop
pop
arpl
cwde
cmp
in
fist
mov
inc
enter
pop
dec
test
cmp
cli
loopne
into
out
push
lahf
rol
xchg
test
pop
xchg
lea
mov
shr
mov
hlt
into
sub
mov
in
adc
adc
jmp
retf
xlat
lods
(bad)
sub
test
aad
retf
and
sub
jl
(bad)
xor
mov
xchg
ins
cs
jb
dec
retf
mov
inc
and
mov
das
pop
fucomp
mov
lahf
cs
movs
sub
or
mov
sbb
sub
stc
sub
pop
fcomp
clc
gs
jp
les
fdivr
inc
in
sbb
ror
mov
or
(bad)
sub
inc
mov
and
adc
mov
cmp
push
loopne
lahf
and
mov
scas
test
cmp
lds
imul
xchg
mov
outs
cli
jbe
sbb
pushf
retf
gs
mov
add
scas
dec
icebp
cmps
and
mov
(bad)
sub
std
rcl
add
sbb
jo
rep
mov
xor
je
mov
jns
in
or
out
dec
jbe
aam
push
shl
daa
call
outs
mov
cwde
or
loope
fld
pop
dec
loop
(bad)
pop
ins
add
add
push
mov
repz
loopne
test
sub
xchg
stc
cmps
cmp
xlat
jmp
or
out
mov
mov
fsubr
stc
in
xor
jae
mov
xchg
add
sti
cmp
add
leave
(bad)
shl
sub
jne
adc
and
lock
jbe
jmp
ret
adc
lock
lods
dec
aad
sub
(bad)
inc
jne
push
shr
out
push
das
test
shl
pop
pop
std
push
cmp
loop
ret
fxrstor
sbb
jns
aam
jg
adc
add
pop
xor
es
call
cld
jmp
jle
aaa
mov
or
(bad)
imul
stos
in
int3
data16
rcl
inc
lea
sub
xchg
jno
push
dec
fsub
mov
jmp
xor
shr
mov
mov
imul
adc
dec
int3
and
sbb
mov
clc
retf
xor
adc
mov
cmp
pop
ins
adc
test
out
pop
or
push
push
enter
outs
test
cmps
lock
in
jae
mov
nop
cmp
dec
stc
ret
jmp
retf
pushf
cmp
stos
lds
sub
xor
or
(bad)
bound
sbb
imul
adc
aaa
cdq
pop
add
sbb
mov
adc
jae
mov
mov
jp
push
or
inc
bound
fwait
ror
popa
arpl
bound
(bad)
(bad)
xchg
call
mov
(bad)
lds
(bad)
adc
mov
jmp
mov
inc
es
cmp
inc
xor
sahf
push
nop
push
ret
popw
pusha
retf
sub
inc
(bad)
jno
fs
push
pop
dec
daa
ds
cli
mov
push
xor
push
mov
sbb
cmp
rcl
jp
ins
imul
aam
mov
cld
retf
es
pop
fs
in
adc
add
cmc
les
adc
dec
test
mov
mov
push
dec
xlat
stos
mov
int3
dec
push
mov
shr
aad
push
shl
aas
and
rol
jne
xor
aam
pop
cld
mov
xor
outs
es
adc
inc
dec
pop
aas
push
push
xchg
sbb
pop
xchg
sub
movs
xlat
mov
mov
push
sahf
(bad)
mov
jns
mov
(bad)
retf
or
les
xor
jno
call
jecxz
jmp
dec
xor
lds
and
add
mov
dec
std
dec
in
in
cmp
in
movs
push
mov
jae
data16
rcl
cld
or
loop
add
mov
int3
into
xlat
dec
dec
setno
enter
in
in
push
or
mov
push
sbb
push
mov
rcl
ins
(bad)
and
jle
inc
shl
ins
jl
out
jo
mov
cmp
add
(bad)
jmp
or
test
lock
push
xor
jecxz
fild
imul
hlt
pop
pop
into
dec
cmp
lock
xchg
dec
loopne
int3
iret
test
mul
sbb
add
lea
and
mov
mov
jnp
mov
sbb
pop
clc
(bad)
rol
push
(bad)
imul
dec
jno
adc
arpl
mov
mov
out
add
hlt
pop
cmp
cdq
xor
int3
jo
lods
inc
xchg
retf
retf
jl
push
cmp
sub
jmp
jecxz
clc
dec
push
xor
push
push
jno
test
jns
int
mov
mov
stc
mov
and
mov
dec
cwde
jmp
jg
push
mov
test
cwde
leave
addr16
push
sbb
cmp
sub
int
and
aaa
mov
jmp
in
mov
pop
or
scas
das
sbb
mov
inc
push
js
call
pop
push
xchg
in
xor
dec
(bad)
push
dec
neg
popf
push
mov
and
sbb
test
pop
mov
mov
xchg
xor
stos
mov
test
(bad)
mov
jno
push
jp
ja
cld
repz
mov
cmps
sub
mov
and
xor
lods
xor
and
stc
sbb
neg
mov
in
xchg
and
jp
sub
movs
mov
and
repnz
inc
xor
inc
xchg
fxch
mov
hlt
add
mov
xor
aad
cld
adc
xchg
add
aaa
lock
loop
jo
xor
push
jae
push
sbb
inc
xchg
xchg
add
(bad)
adc
aaa
push
mov
push
lods
xchg
pop
jecxz
mov
xor
pop
xchg
je
mov
mov
shl
aam
cmp
jne
adc
jle
mov
dec
hlt
cmp
scas
push
pop
jno
out
pop
icebp
inc
push
arpl
sbb
adc
aaa
mov
(bad)
shl
xchg
or
inc
fwait
and
push
jle
push
or
or
out
mov
inc
adc
cmps
cmp
stc
pop
cmp
popa
stc
mov
scas
pop
daa
jb
bound
pop
mov
xchg
push
sub
mov
neg
lock
cmp
sbb
(bad)
sbb
mov
fimul
cmp
cdq
mov
dec
dec
jle
test
mov
add
mov
and
or
xchg
das
or
mov
sbb
lock
pusha
iret
sbb
clc
push
sbb
sbb
add
shl
push
xor
or
fbstp
push
mov
xor
loopne
jle
test
ins
xchg
pop
push
cmc
push
int3
iret
fucomi
aaa
cmps
js
popf
retf
dec
lods
cmps
mov
mov
jbe
lods
jmp
jmp
es
pop
mov
cdq
ret
xor
or
mov
imul
pop
lock
sub
mov
out
not
inc
mov
out
xor
push
add
cmps
iret
cmp
xlat
fdiv
and
ins
push
xor
and
leave
adc
mov
imul
sbb
xor
fimul
loope
(bad)
jbe
pop
pushf
push
fcom
(bad)
cmps
inc
ins
or
lods
(bad)
ror
icebp
(bad)
popf
mov
sub
(bad)
gs
ss
pop
sub
sub
adc
jmp
(bad)
xor
adc
retf
(bad)
divps
cmc
sti
das
push
dec
sbb
jl
push
pop
mov
adc
add
inc
sub
or
xor
cmp
ja
retf
xor
test
pop
cwde
xor
inc
dec
cli
xchg
(bad)
jb
mov
or
pushf
mov
daa
not
jae
mov
fidiv
in
mov
pushf
pop
xchg
jg
(bad)
pop
hlt
pop
mov
mov
mov
push
call
xor
stos
and
push
and
cwde
int
in
add
les
jno
out
sub
cmp
std
retf
cmp
sahf
push
pop
popa
leave
imul
fild
retf
jns
nop
fcom
(bad)
jb
lods
sbb
leave
lods
out
in
jmp
mov
pop
dec
push
ins
sahf
scas
and
adc
aad
retf
pop
push
jmp
ror
sub
sbb
sti
jo
mov
js
cmps
(bad)
call
icebp
vprotq
push
and
aas
or
scas
retf
imul
mov
push
dec
test
lods
and
xchg
push
mov
sub
aam
leave
cwde
pop
jle
stos
dec
xor
fstp
fstp
repnz
imul
jae
pop
clc
cld
pop
mov
jmp
add
repnz
loope
push
dec
daa
or
sbb
call
repnz
sub
sar
lods
test
les
cld
in
cmp
nop
sar
test
ror
xor
jg
push
jbe
fiadd
(bad)
inc
push
sti
mov
sahf
xchg
jno
jp
adc
mov
fdivr
push
jl
cmc
cs
xchg
shl
mov
div
adc
pop
jne
adc
inc
xlat
cmp
int
in
xor
or
pop
rol
movs
outs
stc
push
ret
adc
out
int3
jle
inc
lock
movs
inc
scas
std
dec
sub
xor
cmp
lahf
hlt
cmp
jno
retf
dec
clc
pop
int3
jmp
inc
in
int3
dec
dec
lea
pop
add
shl
scas
sbb
retf
std
push
movs
retf
mov
cmps
iret
mov
push
xor
dec
sbb
jg
dec
es
jecxz
daa
lods
lock
xchg
mov
test
push
push
pop
lahf
jbe
call
mov
pop
push
and
lahf
mov
ds
jecxz
retf
add
js
add
sbb
int3
mov
sbb
push
ret
ins
(bad)
jae
pop
lds
ss
jp
das
mov
pusha
jns
ret
stc
sbb
or
mov
rol
sub
jp
jne
push
inc
ins
mov
mov
lock
cmp
shr
or
stos
dec
sahf
inc
mov
sbb
int
pop
xor
rcl
jb
pop
xor
imul
sbb
test
and
pop
jmp
into
pop
enter
or
or
xchg
sahf
push
stc
xchg
xchg
pop
xchg
sbb
jae
sbb
mov
fdiv
movs
xchg
jge
adc
jmp
fucomi
test
dec
pop
xchg
call
sub
aam
int
hlt
dec
push
sub
dec
add
mov
adc
cmp
jg
mov
gs
jmp
fstp
sub
xchg
sub
jmp
cdq
(bad)
cwde
scas
inc
loop
pop
pusha
pusha
lods
les
or
pop
popa
mov
dec
sub
jmp
push
sbb
lea
fcmovb
ins
jle
ss
sbb
int
pop
pop
scas
sub
cld
inc
pop
ins
fwait
std
out
push
outs
leave
add
cmp
loope
popf
addr16
inc
xchg
dec
out
xchg
push
scas
add
xchg
outs
neg
mov
clc
dec
or
mov
sub
pop
lods
ret
shl
mov
lods
test
ret
gs
sbb
aad
dec
xor
inc
(bad)
jge
push
inc
mov
std
jge
cs
lods
xchg
push
mov
push
sbb
jne
inc
dec
pop
popa
add
mov
mov
retf
cmp
repz
fcomi
rol
mov
sbb
stos
sub
bt
push
mov
out
stos
ss
aam
ret
cwde
and
(bad)
sbb
cmc
lea
(bad)
sub
add
adc
imul
dec
sti
popf
mov
jbe
or
test
mov
(bad)
mov
pop
cs
jns
cmp
leave
mov
loop
mov
out
or
test
dec
add
push
invlpg
(bad)
mov
aam
mov
bound
jnp
pop
repz
add
fbld
aam
mov
test
dec
dec
repnz
push
popa
lods
mov
jnp
cmp
xchg
aas
xchg
lea
jmp
mov
jbe
mov
add
or
jl
mov
(bad)
or
xor
add
mov
mov
enter
mov
xor
test
cmp
popf
ins
ds
adc
cmp
aam
pop
shr
test
cli
sbb
mov
data16
push
sub
movs
adc
push
xor
push
pop
sub
loope
call
pop
and
xchg
nop
mov
pop
xlat
cdq
inc
lahf
adc
ja
enter
cli
mov
fimul
inc
dec
push
pop
mov
dec
jb
pop
pushf
in
xor
push
add
movups
nop
imul
jmp
push
rol
sbb
iret
sti
lods
cmp
ret
sahf
call
shl
lods
fcom
sub
dec
loope
int
dec
repnz
imul
cmp
rcr
test
ins
jecxz
or
fisttp
push
jecxz
jae
mov
mov
or
out
and
call
sbb
push
cmp
dec
fstp
arpl
xor
movs
movs
sbb
test
mov
test
or
iret
and
js
addr16
cs
enter
xchg
movs
lds
rcr
cmp
fimul
fwait
loop
lods
xchg
push
(bad)
pusha
stc
in
sahf
jp
fisubr
ins
pusha
es
cmp
push
inc
and
out
xchg
pushf
out
mov
xor
enter
fcom
xchg
mov
xchg
repz
mov
fdivr
push
retf
xchg
imul
imul
fistp
push
pop
lods
mov
xor
rol
sbb
mov
aas
cwde
pusha
daa
dec
mov
ins
daa
loop
repnz
jne
mov
fild
ret
icebp
cmp
stos
pop
push
adc
mov
imul
ds
aad
add
mov
dec
and
xlat
pop
inc
pop
push
scas
adc
cdq
add
ret
fadd
(bad)
ret
aas
push
cwde
fwait
xchg
lock
das
(bad)
sub
stos
and
fisttp
ds
mov
push
pop
push
js
stc
pushf
mov
push
mov
inc
add
rol
mov
out
mov
dec
es
sbb
sub
pop
aaa
dec
add
mov
imul
out
or
ss
out
retf
in
shl
test
cmp
das
loopne
imul
sbb
or
aad
in
lods
jns
ja
jp
sub
push
dec
jmp
push
shl
(bad)
in
mov
fld
jmp
sbb
jge
leave
into
retf
loop
retf
jle
loope
sub
outs
in
add
lods
(bad)
ds
inc
xlat
int3
jb
fstp
dec
das
pop
daa
or
sbb
je
out
stos
fcomp
test
gs
(bad)
pop
or
push
std
pop
shr
shl
mov
xor
popa
js
test
out
mov
iret
jle
int
pop
fnsave
jae
in
push
cdq
(bad)
mov
sar
js
call
loopne
mov
cmp
cmp
aaa
inc
sbb
cmp
add
cmp
cmp
inc
dec
ror
push
and
pop
mov
sbb
push
in
push
and
das
jne
jno
xchg
outs
push
mov
(bad)
adc
and
pop
jno
rcr
scas
loop
popa
or
(bad)
mov
pop
push
sbb
jb
fxch
fistp
jl
ret
mov
lea
sbb
mov
fsub
pop
mov
call
jne
pusha
cmp
popf
pcmpeqb
imul
xor
push
loop
pop
push
repnz
mov
inc
iret
push
xor
sbb
xchg
mov
mov
sbb
mov
xor
es
or
lahf
retf
loopne
dec
push
sahf
pop
cmp
dec
imul
fimul
push
retf
bound
xchg
xchg
dec
call
in
add
push
out
sub
inc
mov
xchg
adc
scas
mov
cld
and
push
jmp
or
(bad)
jbe
es
cmp
sbb
dec
addr16
ja
jl
inc
push
ret
mov
and
(bad)
lock
por
test
add
jmp
jo
or
call
adc
mov
mov
pop
sub
xor
mov
pop
inc
cmp
inc
mov
sahf
jge
pop
push
bound
std
jmp
icebp
or
mov
jae
popf
jmp
mov
mov
xchg
call
stc
mov
outs
and
adc
js
mov
dec
(bad)
lds
inc
mov
aas
ds
mov
test
ds
xchg
cmps
xchg
pop
rol
je
repz
xchg
mov
push
jle
ss
adc
stc
inc
and
in
or
pop
mov
jb
pop
cmp
nop
scas
push
inc
cwde
sbb
mov
dec
std
cmp
movs
push
je
pop
cdq
xchg
enter
scas
and
xchg
jbe
xchg
rol
cmp
and
aad
fs
jbe
leave
push
push
shrd
jae
fsub
daa
sub
or
sbb
adc
dec
ins
test
out
fsub
mov
mov
mov
push
test
inc
adc
mov
pop
movs
xchg
enter
xchg
push
mov
mov
int3
fild
cwde
mov
xchg
adc
std
iret
(bad)
pushf
js
xor
mov
pop
add
hlt
cmp
sub
push
lods
in
ja
sbb
or
pop
add
cmp
jbe
clc
pop
cli
hlt
jecxz
push
pushf
cli
pop
fbld
(bad)
pusha
dec
in
add
sub
js
lahf
mov
mov
sub
pusha
add
pop
dec
repnz
mov
xor
inc
scas
es
xor
leave
movs
push
popa
aaa
ins
xchg
mov
fistp
push
sbb
test
fdiv
cmp
add
push
mov
inc
cdq
das
aas
ins
sub
ror
sub
dec
sbb
dec
movs
je
call
and
fs
fild
popf
sub
dec
dec
mov
ins
(bad)
pop
xor
xchg
pop
and
and
dec
mov
fs
jnp
int
sti
inc
cmps
jp
xchg
mov
retf
mov
xchg
test
popf
cmp
shl
adc
and
mov
adc
(bad)
cmp
je
jl
pop
jae
out
push
stos
mov
add
mov
lods
cdq
jle
imul
pop
pop
test
rcl
dec
mov
cmp
nop
xor
xor
add
or
push
lahf
push
sbb
mov
push
jecxz
add
je
or
lock
out
jmp
mov
mov
aad
lods
or
retf
inc
movs
push
(bad)
jmp
imul
lea
or
out
int3
cld
mov
xor
add
iret
(bad)
sub
pop
ds
jno
push
retf
ins
xchg
sahf
sbb
shl
scas
lahf
push
repnz
out
xor
rcr
test
ret
push
xchg
lods
adc
adc
add
cdq
inc
std
repz
jge
repnz
xor
push
dec
sub
mov
retf
lock
jecxz
jno
pop
sub
jnp
mov
loop
xor
inc
stos
mov
popf
inc
(bad)
dec
mov
xchg
jb
leave
cmp
sbb
mov
inc
das
jne
pop
sbb
sub
neg
lock
inc
scas
lods
aaa
clc
dec
sub
adc
adc
ficomp
pop
pop
dec
jl
and
fidivr
mov
sar
(bad)
push
xchg
jp
mov
es
les
mov
mov
push
(bad)
cs
mov
and
sub
repnz
add
and
sbb
lods
jo
(bad)
sahf
sub
fsub
clc
xchg
cmp
loope
pushf
shr
or
mov
sub
jnp
mov
mov
aas
mov
sbb
loop
inc
dec
inc
popw
stos
pop
pop
sub
ret
pop
cli
std
cwde
adc
out
(bad)
sbb
dec
out
arpl
mov
(bad)
out
aad
arpl
dec
xor
addr16
pop
test
mov
in
jl
lock
push
cld
mov
add
sti
add
in
int3
mov
out
adc
mov
adc
push
sahf
mov
sub
jne
push
sub
cmp
test
xchg
and
xchg
fst
mov
aaa
dec
mov
call
es
jne
pop
push
(bad)
or
push
nop
or
popf
leave
es
jbe
call
es
and
mov
out
cmp
in
cmp
pushf
and
rol
jmp
mov
mov
test
outs
popf
and
inc
inc
inc
xchg
mov
int3
call
in
cmp
in
adc
ins
jp
mov
cmps
cmc
push
push
mov
sub
(bad)
loopne
xchg
push
fsub
dec
test
mov
inc
in
out
leave
pop
jae
inc
sbb
mov
add
inc
sub
movs
dec
int
inc
or
repz
fistp
test
in
movs
sahf
pop
add
xor
mov
iret
push
pop
sub
sbb
and
cmp
sbb
sub
mov
ins
or
sbb
mov
cmc
and
cli
das
xchg
mov
sbb
cmp
push
out
xlat
int3
cmp
cmps
test
push
ja
push
cdq
pop
adc
xor
and
pmulhw
dec
test
and
repz
call
add
into
inc
sub
add
pop
leave
sar
mov
stc
(bad)
jns
ss
jmp
sub
sub
dec
js
in
fld
adc
or
mov
imul
jne
cwde
push
dec
jg
sub
(bad)
sbb
jmp
je
xor
push
cli
xchg
sub
in
cmp
sbb
das
sbb
xor
jecxz
and
push
loope
inc
into
leave
inc
stos
push
or
iret
retf
test
pop
call
out
mov
jmp
arpl
ss
adc
cmp
dec
lea
sahf
jne
jmp
(bad)
sub
mov
and
cld
mov
fstp
adc
outs
int
sti
fist
loope
jbe
ins
rcl
pop
lahf
(bad)
mov
jmp
dec
mov
das
push
push
retf
cs
lea
in
in
clc
in
xor
dec
cmp
int3
jnp
loopne
or
ds
rol
mov
(bad)
int
pop
ficom
fadd
jge
aaa
sbb
lock
call
add
fdivr
jb
into
ret
cmps
ds
or
xchg
push
clc
xchg
es
dec
cmp
(bad)
pushf
jb
adc
repz
mov
cmp
jmp
sub
mov
and
pop
jne
and
retf
lahf
test
sti
iret
jge
ja
(bad)
lahf
repnz
push
mov
xchg
xchg
retf
pop
mov
imul
loop
inc
jg
jo
in
dec
sbb
xor
mov
loope
frstor
xor
in
mov
cmps
sbb
dec
dec
jmp
xchg
sbb
lock
and
icebp
scas
dec
test
sbb
in
gs
jmp
or
mov
pop
out
mov
or
sub
test
out
inc
popf
jmp
mov
jg
ret
daa
mov
mov
out
ins
out
pop
imul
mov
xchg
push
mov
xor
scas
data16
pop
push
xchg
and
imul
mov
mov
dec
data16
mov
stc
outs
dec
push
mov
or
in
ins
outs
xchg
xchg
add
test
aas
ja
cmp
icebp
sbb
ret
inc
cmp
cmp
int3
rcl
jo
pop
xchg
or
imul
dec
icebp
mov
daa
mov
clc
fild
xor
(bad)
outs
popf
sub
aaa
test
add
call
aas
das
scas
cmp
xchg
sbb
or
mov
mov
mov
sub
adc
sub
sbb
lahf
push
ins
or
sub
push
lock
xchg
mov
out
xchg
cmp
test
lods
adc
bound
xchg
shl
dec
sbb
dec
fistp
and
pop
cmp
cwde
fadd
call
inc
sub
(bad)
cmps
push
je
fwait
xchg
push
shl
or
js
out
shl
cmps
jns
adc
test
ins
adc
push
push
jne
scas
mov
scas
stos
push
push
mov
imul
jmp
aaa
add
dec
fwait
cmp
or
add
sbb
jecxz
arpl
inc
jmp
in
mov
xchg
lahf
and
(bad)
ja
mov
mov
ja
dec
push
div
fcmove
xor
adc
ins
pop
or
push
dec
sbb
jbe
pushf
int
fidivr
fst
popf
mov
pop
mov
adc
shr
nop
sub
xchg
inc
icebp
mov
xchg
sub
sub
xchg
inc
sbb
mov
icebp
ds
mov
rcl
inc
in
icebp
push
jnp
inc
xor
stos
in
xchg
pop
jecxz
sbb
xchg
je
xchg
cmp
add
les
clc
push
ficomp
call
and
or
inc
mov
sar
ret
(bad)
mov
out
push
in
retf
ss
pop
mov
and
add
(bad)
jne
or
mov
stos
pop
lods
or
retf
out
jbe
dec
or
inc
addr16
(bad)
shl
jae
test
sysret
scas
adc
pop
in
mov
leave
jmp
xor
repz
popa
adc
cmp
(bad)
test
mov
call
xor
mov
push
jp
push
sbb
(bad)
in
es
sub
add
outs
cmps
xor
iret
or
(bad)
dec
daa
and
mov
jno
fiadd
es
add
push
ss
adc
or
aas
cmp
repz
cwde
adc
and
(bad)
jl
adc
lahf
test
mov
daa
ss
in
dec
jg
pop
push
scas
mov
fdivr
test
mov
xlat
or
or
int3
mov
push
punpcklwd
fs
adc
les
mov
mov
retf
scas
add
or
mov
mov
mov
sbb
ret
inc
cmp
dec
jecxz
mov
in
(bad)
repz
aaa
imul
sub
repz
push
sbb
jae
pop
cmps
xchg
dec
sbb
movs
fldcw
(bad)
sub
not
cmp
out
xchg
adc
lods
rcr
xchg
hlt
cwde
(bad)
cwde
xchg
ret
dec
sbb
lahf
dec
div
outs
aas
bound
pop
mov
mov
dec
xchg
mov
fstp
cmp
xchg
push
cdq
jp
mov
fmul
lock
jb
push
rdmsr
inc
in
jnp
and
shl
sbb
fwait
mov
inc
in
js
xchg
fwait
retf
mov
imul
das
popf
dec
xor
pop
sub
sbb
push
cli
push
shl
push
lahf
mov
sub
aaa
mov
call
dec
cmp
js
and
push
mov
repz
xlat
bound
(bad)
sti
ret
rcl
pop
sahf
loop
pop
pop
sub
pop
pop
inc
jge
loopne
adc
clc
add
add
retf
pop
sbb
rol
mov
hlt
cvtpi2ps
sar
adc
daa
or
fwait
sub
pop
xor
movs
inc
enter
cwde
inc
movs
int
cld
popa
push
push
stos
jl
je
imul
test
lods
adc
sbb
mov
ret
jns
sub
inc
mov
ror
in
rcl
std
loop
call
(bad)
out
dec
push
push
call
cmp
xchg
cdq
mov
fmul
retf
push
cs
cmps
add
clc
cmp
push
cld
retf
test
xor
or
icebp
popf
push
xchg
data16
mov
fsub
ja
repnz
in
mov
adc
ret
aaa
in
pop
les
jo
neg
in
push
xlat
jmp
pusha
or
sub
mov
setge
mov
pop
push
pusha
iret
imul
frstpm(287
in
shl
out
mov
stos
sub
test
(bad)
jne
fcomp
es
(bad)
data16
lahf
or
mov
jl
enter
cmp
inc
int3
mov
jmp
repz
mov
(bad)
loopne
ret
jle
ret
sub
dec
pop
dec
je
xor
cmp
cwde
ficomp
ret
mov
mov
and
or
data16
jns
mov
and
or
in
and
dec
(bad)
cmp
(bad)
adc
pop
addr16
neg
mov
mov
nop
jp
xchg
xchg
fnstenv
movs
adc
div
sub
add
jmp
adc
push
pushf
mov
imul
jno
cs
mov
into
outs
jle
fsubr
dec
sub
cmp
(bad)
and
fs
xchg
out
aad
(bad)
mov
or
jb
or
pop
in
jp
fld
sub
adc
pop
dec
dec
push
into
aas
mov
inc
mov
xchg
dec
jno
retf
jno
push
and
and
shr
dec
or
add
pop
xor
and
loope
mov
inc
add
inc
sub
hlt
fld
(bad)
repz
push
in
clc
test
retf
pop
mov
mov
cwde
and
dec
fmul
mov
pop
call
repnz
mov
mov
pop
fild
mov
and
test
std
adc
out
jge
pop
(bad)
cmp
push
dec
lahf
cmp
call
les
pushf
mov
sbb
cmp
int
xchg
(bad)
icebp
jmp
push
and
or
cmp
stos
xor
inc
in
sub
and
dec
cmp
cmp
jmp
cmp
cmc
test
call
aad
ins
nop
out
je
loop
out
push
jmp
inc
or
pop
outs
jne
jl
dec
mov
adc
dec
shl
mov
add
xor
stos
into
sahf
ins
divps
dec
adc
mov
fisubr
push
outs
dec
fist
jecxz
popf
jno
ss
stc
xchg
push
(bad)
pop
sub
mov
shr
popa
mov
mov
test
inc
inc
jno
std
mov
push
loop
stos
sub
dec
aad
and
ss
push
sti
into
scas
mov
bound
addr16
(bad)
lods
into
js
push
push
out
movs
adc
inc
push
fisttp
and
in
mov
ret
retf
pushf
push
inc
int3
outs
jbe
add
jl
jmp
jo
movs
test
mov
stos
mov
sub
fiadd
xchg
cmp
cdq
xchg
ror
push
xlat
mov
inc
addr16
add
jnp
jmp
add
dec
mov
sbb
xor
cmps
fist
fwait
mov
push
xchg
xor
daa
xchg
test
mov
inc
test
aam
sti
ror
and
xchg
outs
loop
inc
jle
(bad)
stc
call
inc
shr
jl
gs
push
mov
out
scas
xchg
aad
sbb
sbb
xchg
sahf
enter
or
aad
(bad)
cmp
icebp
mov
xchg
retf
aam
clc
out
ret
sub
cmc
rcr
dec
mov
xlat
into
lods
popa
push
xchg
scas
rol
(bad)
pop
jb
push
and
das
gs
loope
addr16
repnz
lea
or
std
push
mov
sbb
imul
loope
mov
jecxz
mov
ins
sbb
jae
loopne
mov
retf
cmp
pop
(bad)
push
pusha
cmp
ret
lahf
push
xor
loopne
jae
ret
push
add
inc
mov
sub
pop
mov
mov
push
fnsave
cwde
loope
lock
xor
(bad)
mov
imul
xor
int3
iret
mov
cmp
ds
mov
out
adc
stos
aaa
mov
xchg
imul
inc
lea
or
inc
add
fcomi
leave
repz
sbb
jbe
mov
push
int
repnz
mov
and
pusha
cmps
inc
mov
inc
mov
aad
and
sar
ins
xor
xor
mov
add
(bad)
outs
pop
out
cmp
shr
scas
inc
int
xchg
jno
rcl
loope
inc
shr
call
or
out
pop
or
xchg
ins
iret
adc
arpl
imul
inc
adc
outs
sub
jae
fsubr
les
(bad)
push
jae
dec
jle
into
xlat
inc
inc
int
xchg
xchg
(bad)
sbb
sbb
adc
shl
aad
lods
fcomp
add
jle
ret
mov
jno
inc
lods
out
sbb
xor
cmovb
in
(bad)
lods
mov
push
jmp
in
add
xchg
sub
mov
clc
or
and
pop
and
and
(bad)
imul
cli
pushf
into
xlat
int
jmp
bound
popa
hlt
gs
add
addr16
cmps
inc
add
cdq
int3
jnp
and
xor
xchg
retf
fistp
popf
int
and
inc
cmp
pusha
enter
cmp
mov
push
dec
or
sbb
cld
fnstenv
xchg
push
dec
mov
bound
fadd
mov
in
sub
mov
daa
repz
and
clc
stos
cdq
push
daa
mov
pop
inc
test
jecxz
loope
sti
lods
mov
js
rcl
mov
test
sar
nop
push
jne
or
pop
push
rcr
inc
out
shr
and
sbb
cmps
push
or
mov
sbb
push
dec
fwait
add
js
push
mov
imul
xchg
pop
pop
cmp
daa
jno
mov
inc
cmp
inc
mov
sbb
sub
retf
sbb
inc
dec
mov
mov
lahf
mov
test
jno
push
ja
ret
xchg
lds
pop
retf
pop
mov
sub
pusha
loop
test
ja
xchg
stc
mov
xor
adc
enter
(bad)
jp
sbb
imul
sar
ret
xlat
adc
aam
js
jnp
jb
or
(bad)
mov
add
mov
xchg
xchg
cld
popa
mov
mov
mov
(bad)
mov
xchg
or
int3
add
aam
addr16
pusha
jl
rcr
cwde
push
push
xor
mov
pushf
shr
lahf
dec
pop
jg
inc
dec
sbb
cwde
mov
test
imul
inc
dec
pop
test
and
and
jo
jo
repnz
push
dec
jo
loopne
sub
jne
mov
add
in
cmp
int3
sub
and
adc
xor
sub
(bad)
sbb
rol
jmp
and
and
mov
cwde
jmp
cli
xchg
ja
loopne
dec
push
adc
out
pop
mov
jns
or
jbe
jo
mov
push
enter
jmp
pop
shr
fsubp
call
mov
les
dec
(bad)
(bad)
xor
clc
ins
pop
test
push
sbb
data16
stos
sahf
push
jno
daa
out
aam
inc
pop
retf
(bad)
out
push
push
sub
out
movs
out
loop
rol
(bad)
xchg
fidiv
cwde
sub
aam
xchg
mov
gs
mov
mov
xchg
pop
push
mov
pop
neg
pop
dec
pop
mov
cli
push
mov
add
add
mov
icebp
sti
add
add
rcr
sub
xchg
xchg
adc
adc
mov
ds
les
push
mov
mov
xor
jno
pop
push
or
daa
ins
ret
leave
push
(bad)
or
jp
cmp
cs
xchg
mov
fs
sbb
iret
jnp
into
xor
mov
fisttp
mov
mov
adc
pop
xchg
cs
inc
addr16
add
in
ds
and
fcom
retf
push
dec
cdq
fwait
mov
xor
data16
call
jne
inc
adc
sub
shl
std
test
push
sub
adc
xor
xor
add
adc
aaa
cmp
mov
cmp
push
into
stos
sbb
pop
xchg
jecxz
jno
add
inc
std
cmp
inc
inc
push
lock
fadd
inc
test
cmp
int
aas
cmp
bound
mov
test
ror
mov
aad
xchg
jg
dec
(bad)
out
popf
add
dec
mov
add
sub
stos
mov
ret
mov
mov
leave
or
sti
mov
add
mov
or
inc
push
push
and
and
popa
mov
jg
mov
in
sti
dec
jmp
xchg
aaa
pop
in
enter
xchg
sbb
daa
cmps
test
les
sti
xchg
ret
xchg
clc
push
loope
lds
repz
adc
cmc
retf
mov
lods
push
jmp
enter
dec
or
mov
pop
xchg
js
jns
dec
inc
(bad)
and
int3
fld1
scas
cmps
add
enter
mov
jns
mov
sub
shl
sbb
pop
cmps
aas
sti
mov
fild
in
lods
cwde
inc
mov
push
test
in
sub
rcl
out
mov
mov
pop
out
mov
popf
pop
cmp
jae
adc
push
add
popf
dec
bnd
dec
push
mov
sbb
dec
cmp
jno
clc
movs
dec
call
stc
outs
cmps
push
fadd
jne
cld
xchg
jle
sub
arpl
xchg
retf
mov
sar
mov
sbb
dec
imul
pop
repnz
jp
popa
retf
mov
xor
(bad)
push
test
pop
std
je
popa
jae
jge
and
mov
outs
jp
push
jbe
arpl
ret
push
push
or
cli
push
xchg
dec
dec
mov
(bad)
js
mov
pushf
sbb
movs
or
sub
into
clc
xor
cmp
mov
int
xor
daa
shl
idiv
mov
pop
push
cwde
xchg
add
mov
mov
mov
shl
add
out
push
js
or
pop
shr
inc
adc
ss
pop
mov
mov
(bad)
popf
imul
call
and
outs
outs
dec
or
pop
push
push
loopne
push
push
xor
rcl
jp
jmp
mov
stos
mov
sbb
pop
into
inc
retf
hlt
ss
(bad)
mov
jmp
mov
jns
data16
retf
in
xchg
dec
es
sti
shl
in
(bad)
jg
adc
xchg
xor
mov
xchg
push
sahf
(bad)
sub
aaa
sar
push
in
inc
loope
mov
ins
xchg
fnstenv
cs
inc
adc
and
jae
dec
(bad)
in
mov
lahf
std
bound
inc
movs
icebp
mov
jmp
sub
cs
in
out
mov
pop
das
mov
int3
(bad)
mov
jb
scas
std
out
push
mov
mov
leave
cmps
adc
adc
enter
ror
mov
call
(bad)
ffree
sbb
ss
addr16
mov
out
aas
or
shr
sub
mov
retf
ja
add
jne
inc
pop
inc
shl
mov
add
pop
clc
mov
in
sub
xchg
test
cmp
out
inc
repz
push
push
outs
mov
cdq
fidiv
addr16
aam
lock
outs
shl
ds
in
fisttp
dec
and
leave
ins
fild
mov
cmp
mov
js
push
adc
fcomi
(bad)
pop
lods
adc
mov
mov
cmc
xchg
imul
mov
push
and
cmp
dec
ins
dec
data16
call
dec
jo
push
xor
and
jno
dec
(bad)
lock
retf
cmp
cs
cmp
sub
cmc
xchg
sbb
int3
push
daa
fldcw
idiv
call
pop
pop
xor
mov
ja
loope
pusha
xor
scas
out
pushf
inc
lahf
and
inc
std
fcomp
pop
popf
ret
inc
sti
(bad)
arpl
sar
lds
cmp
pop
inc
pop
test
dec
inc
mov
add
dec
xor
and
and
loopne
mov
loope
daa
test
out
mov
xchg
push
cld
dec
xchg
enter
mov
(bad)
leave
out
mov
mov
bound
gs
sub
sbb
xchg
inc
jle
add
lea
lods
cli
inc
(bad)
adc
out
call
neg
adc
dec
add
sub
test
in
scas
mov
xor
xchg
rcl
jbe
push
mov
cmp
rcr
scas
xchg
dec
neg
mov
(bad)
test
cld
add
pop
mov
pop
push
repz
(bad)
sub
sbb
adc
mov
inc
push
push
mov
ret
xchg
xchg
fnstsw
adc
icebp
sub
inc
call
adc
loop
loop
in
push
rcr
xchg
sahf
ja
test
xor
push
push
dec
jp
lods
iret
and
fsubr
je
loop
iret
ins
outs
inc
lahf
xor
int3
test
add
dec
and
retf
mov
mov
inc
sub
nop
add
jb
mov
xor
imul
sbb
or
mov
(bad)
jecxz
add
int3
movs
cld
pushf
in
out
fwait
cld
mov
xchg
mov
pop
inc
xchg
outs
mov
xchg
sbb
out
xchg
mov
and
and
mov
cdq
xchg
xchg
pop
ficom
push
dec
xchg
out
add
retf
pop
xchg
cmp
jmp
sub
and
mov
fldcw
pop
xchg
and
xchg
dec
pop
dec
jge
bound
mov
or
adc
push
sahf
sbb
add
scas
popf
bound
loope
mov
data16
xor
out
ror
sar
push
or
push
stos
inc
add
push
jmp
push
int
mov
frstor
pop
call
dec
inc
scas
cdq
xchg
cmp
ins
add
popf
cli
repnz
mov
mov
push
xor
jmp
rcl
mov
fimul
ror
dec
dec
push
inc
daa
jno
(bad)
adc
fnstsw
call
mov
pop
mov
aad
pusha
(bad)
icebp
daa
add
adc
push
jmp
mov
scas
mov
int
pop
rol
push
aam
and
sbb
cwde
sbb
enter
movs
jp
popa
(bad)
sub
sub
and
int
ins
cmps
into
js
out
lock
inc
jno
xor
push
cs
xchg
xor
pop
jg
ds
adc
loopne
fs
test
enter
fmul
sbb
push
fstp
jno
cmp
frstor
pop
and
jle
test
aam
popa
retf
int3
loop
mov
or
push
movs
cmc
dec
aam
jge
outs
fadd
pusha
lds
mov
and
sahf
nop
push
inc
and
mov
sbb
dec
aam
cmp
cld
adc
mov
es
pop
mov
sub
popf
jecxz
pop
cmp
cmp
dec
sbb
sbb
push
addr16
add
mov
or
add
cmp
mov
and
loopne
std
loopne
inc
add
xchg
sti
icebp
pop
mov
cmp
arpl
sub
jp
call
push
xor
into
push
(bad)
call
fwait
cmp
push
fdivr
jecxz
aam
(bad)
aaa
and
cmc
hlt
(bad)
clc
mov
rcl
add
add
shl
inc
add
adc
scas
bnd
dec
inc
inc
mov
cmps
sbb
aad
popa
dec
push
enter
inc
sub
mov
pusha
call
ja
retf
stos
mov
push
push
lea
jbe
in
stc
loopne
push
dec
lds
movs
(bad)
adc
mov
sub
push
movs
call
xchg
mov
(bad)
nop
lods
add
idiv
shr
(bad)
adc
ds
movs
jns
fldenv
fdivr
jnp
pop
std
fxch
xchg
fist
arpl
stos
adc
in
test
mov
lods
in
imul
fs
pop
mov
sub
adc
dec
mov
inc
adc
ror
jns
xchg
movs
(bad)
call
push
xbegin
xchg
mov
mov
sbb
xchg
cli
adc
jl
arpl
inc
and
idiv
or
adc
in
lods
lods
ins
cmp
push
adc
aam
(bad)
mov
pop
sbb
and
into
xchg
stos
mov
aaa
(bad)
mov
jg
ins
mov
sbb
xlat
outs
div
xor
add
movs
or
nop
fisubr
push
jo
(bad)
push
cld
idiv
addr16
sbb
push
push
mov
ss
or
ret
xor
push
rcl
jb
loop
inc
das
pop
ja
ror
add
adc
jle
inc
or
adc
jbe
xchg
jg
in
cli
test
pop
jae
test
push
and
mov
and
sbb
shl
sbb
sahf
fadd
iret
test
xchg
outs
push
xchg
pop
jmp
mov
jmp
jg
sub
push
sbb
jns
adc
jo
sub
xlat
push
sar
inc
(bad)
jns
std
data16
arpl
inc
call
jle
push
inc
xchg
sti
sbb
mov
cmp
scas
(bad)
jg
leave
enter
push
out
push
in
pop
div
ins
add
scas
fidivr
xchg
cmp
push
cmp
mov
add
xchg
retf
dec
and
das
inc
lods
pop
cmp
fidivr
sbb
pop
mov
(bad)
out
adc
in
push
mov
fadd
mov
mov
cmps
mov
sub
inc
pop
mov
fdivr
mul
add
and
inc
aaa
cmp
cmps
sub
fbld
pop
icebp
inc
jne
mov
dec
fld
sub
movs
inc
sbb
mov
fisub
int3
adc
inc
test
push
xor
mov
jno
dec
cs
inc
dec
pusha
es
xchg
dec
xor
bound
sub
imul
dec
scas
mov
and
jmp
dec
retf
out
push
hlt
mov
mov
shr
push
and
pop
nop
aaa
xchg
loop
or
stos
xchg
sbb
js
or
sahf
(bad)
sub
sti
pop
pop
xlat
jo
jp
call
sbb
call
cmp
mov
jo
xor
mov
dec
push
dec
shr
out
adc
jg
pop
loop
push
xchg
mov
leave
ins
movs
ins
dec
retf
or
inc
cmp
cli
dec
test
fadd
ret
pop
xchg
call
mov
nop
dec
jne
mov
(bad)
mov
jb
test
and
cwde
out
inc
clc
inc
scas
jmp
rcr
in
movs
xor
xor
jb
mov
mov
cs
das
fbld
(bad)
fcomp
fstp
cdq
and
cwde
jnp
rcl
jge
xchg
sar
bound
leave
xor
sbb
mov
xchg
push
test
sti
sub
ins
shl
jg
dec
xchg
fisttp
(bad)
out
sbb
outs
cmp
mov
sbb
adc
xor
repnz
mov
jbe
xchg
loopne
clc
fnstsw
into
stos
xor
mov
pop
imul
fmul
pop
push
retf
mov
or
push
popf
mov
mov
test
or
sbb
imul
inc
repz
les
fst
mov
sbb
aam
jns
pop
xchg
mov
push
push
in
xchg
mov
scas
and
push
mov
fidivr
mov
lds
sbb
movs
xor
fs
push
push
cmp
jbe
in
push
lock
cwde
or
clc
aaa
mov
arpl
repz
mov
cdq
push
lods
mov
xchg
jne
mov
lahf
pop
push
adc
shr
ja
mov
addr16
pop
and
xor
sbb
jle
cwde
push
in
inc
pop
mov
inc
push
mov
std
and
jecxz
inc
adc
or
adc
ret
pop
scas
inc
add
cmp
(bad)
cmp
xchg
(bad)
jmp
mov
ret
add
(bad)
jg
mov
in
jg
outs
inc
int
fldcw
mov
movs
mov
mov
sti
sub
arpl
mov
xor
test
(bad)
jmp
pop
xchg
sahf
sub
sbb
jo
test
xor
aam
push
sub
scas
mov
cwde
dec
jns
sbb
xchg
(bad)
aad
repnz
in
push
pop
(bad)
jmp
mov
mov
sbb
repnz
adc
aaa
xor
mov
js
int3
mov
sub
enter
sar
and
stos
(bad)
jmp
fiadd
fdiv
mov
mov
or
mov
xor
(bad)
pop
call
jno
adc
aas
ss
cmp
push
sbb
pop
pop
mov
mov
retf
xchg
ss
(bad)
fcmovbe
out
jmp
es
call
add
xor
dec
mov
push
pop
xor
push
push
out
or
push
or
fs
add
std
push
sbb
popf
jo
dec
push
cmps
xchg
xor
retf
sbb
pop
aas
jnp
push
stc
pop
dec
mov
inc
sbb
lods
and
cld
fs
data16
(bad)
scas
fistp
or
mov
cmp
pop
xlat
fnstenv
pop
add
(bad)
rol
outs
adc
(bad)
jge
push
dec
and
fisubr
mov
jecxz
outs
dec
data16
imul
popa
dec
dec
push
inc
xchg
adc
push
xchg
push
xor
push
mov
fistp
retf
inc
loop
sub
sbb
pop
iret
ror
push
xor
movs
mov
test
and
inc
push
pop
add
push
(bad)
sbb
cld
xchg
xor
test
shr
aaa
add
push
test
arpl
shr
addr16
xor
xor
(bad)
cs
shl
add
mov
xchg
sbb
inc
lahf
(bad)
fdiv
dec
fimul
xchg
call
xor
cld
jns
dec
cmps
(bad)
shl
stos
retf
mov
out
mov
push
out
aaa
ja
stos
or
push
ss
cmp
dec
hlt
shl
push
test
push
sub
fsubr
scas
pusha
imul
(bad)
out
into
mov
and
pop
dec
and
mov
stc
sbb
xchg
sbb
jo
out
lods
sub
pop
pop
je
push
dec
and
jle
lods
stos
es
jecxz
outs
dec
shl
jl
fild
int
sub
mov
shr
(bad)
jmp
mov
inc
mov
movs
jae
ins
ins
aas
retf
xchg
test
in
sub
dec
dec
pop
mov
mov
inc
icebp
scas
push
into
xchg
sub
pop
(bad)
dec
lea
mov
mov
pop
push
pusha
sbb
xor
retf
adc
call
mov
add
xchg
ja
mov
cmp
sar
sti
outs
gs
stos
dec
or
retf
icebp
retf
xchg
iret
add
jge
pop
push
pop
(bad)
ret
fild
addr16
dec
loopne
out
loope
cdq
pop
nop
cmp
dec
add
push
ret
lods
inc
movs
call
inc
sbb
loope
out
pop
movs
jg
ins
lods
mul
pop
leave
dec
sub
sub
bound
xchg
or
gs
fld
dec
mov
dec
inc
loop
push
inc
inc
outs
shr
imul
mov
inc
std
fdivr
dec
xchg
push
sub
cmp
ja
fdivr
jae
ins
sbb
les
movs
mov
inc
jno
inc
and
push
pminub
jae
aad
enter
xor
or
(bad)
and
neg
mov
inc
dec
sti
jecxz
and
inc
push
arpl
imul
out
fadd
inc
call
outs
aaa
xchg
fdivr
int3
int3
fwait
sub
leave
popf
jnp
mov
test
jns
dec
mov
retf
and
and
in
retf
aam
inc
mov
ror
iret
clc
(bad)
fistp
out
mov
mov
mov
mov
(bad)
inc
hlt
shl
dec
push
adc
sub
cmp
aas
cs
sbb
cli
inc
dec
mov
or
int
repz
ins
test
dec
push
gs
clc
pop
lock
or
sti
xchg
and
dec
fiadd
mov
or
adc
push
stos
mov
gs
sbb
aas
or
ret
test
push
mov
pusha
dec
fs
mov
imul
loope
scas
ror
loope
sbb
movs
xchg
lods
(bad)
(bad)
pop
push
stos
mov
loop
mov
popf
dec
add
xor
push
inc
fs
sbb
jl
stc
inc
fsubr
pop
sbb
(bad)
fisubr
cmps
adc
sub
mov
sub
fs
xchg
sahf
ffree
add
jmp
sbb
pop
mov
enter
bound
jnp
aas
fnstcw
shl
cdq
data16
ret
data16
or
or
inc
jge
add
inc
or
outs
enter
jno
aad
ss
leave
fstp
pop
push
in
jmp
imul
repz
pop
or
fs
add
scas
add
call
(bad)
mov
mov
dec
xor
sub
aad
cli
mov
pop
fldcw
out
nop
jl
fcomp
mov
int3
mov
sub
xchg
pop
xchg
pop
dec
jne
jae
mov
rcl
cmps
int
sbb
enter
jp
imul
mov
fld
mov
fwait
pop
loopne
lods
aaa
xor
xor
inc
pop
test
shr
into
push
cmps
aad
mov
retf
mov
js
cwde
cmp
sar
sub
and
or
rcl
icebp
cmp
fist
out
xchg
int3
sbb
and
jbe
push
rcr
push
loop
cdq
adc
dec
push
xchg
xchg
mov
ins
mov
or
fisttp
and
dec
jnp
aaa
pop
icebp
or
jb
mov
and
inc
es
fsub
ins
in
cmp
dec
mov
je
std
pusha
jno
push
or
jae
scas
shl
push
movs
inc
or
mov
cmps
outs
and
(bad)
popa
(bad)
jbe
push
cmp
adc
push
xor
pop
fcmovnu
clc
xor
or
sahf
(bad)
cmps
add
sti
inc
jno
and
mov
popa
xchg
cmp
inc
cmp
jmp
mov
push
mov
scas
je
in
jg
sbb
xchg
(bad)
mov
adc
enter
sub
int
sub
xchg
iret
xchg
loopne
fwait
add
pop
sbb
mov
sub
jge
sbb
mov
repz
jb
push
xor
idiv
dec
xchg
add
inc
aaa
sbb
or
inc
dec
lahf
xchg
aam
retf
js
mov
rcr
jl
icebp
push
neg
lea
push
fisttp
ds
sbb
pop
dec
frstor
and
mov
popa
and
mov
fs
jae
xchg
ins
(bad)
rol
shr
jmp
sbb
xor
in
test
sbb
fnsave
scas
pop
(bad)
shr
xchg
ins
cmp
mov
push
aad
addr16
jne
retf
retf
aaa
loopne
mov
adc
push
mov
arpl
retf
dec
imul
mov
lods
sbb
xchg
fs
aam
mov
jmp
dec
sar
pusha
jno
out
adc
sub
push
lds
cld
shl
mov
std
gs
jae
mov
leave
or
mov
and
and
inc
adc
cwde
push
xchg
jl
jns
cld
pop
movs
ss
rcl
pop
add
jmp
or
fist
pop
mov
sbb
daa
aas
int3
sti
mov
(bad)
nop
pop
cmp
or
cmp
pushf
pop
enter
sub
mov
jle
fwait
inc
int
xor
xchg
je
stc
lds
pop
pop
into
int
shl
xor
in
jecxz
mov
add
loop
jbe
js
jmp
imul
pop
cdq
sahf
xor
inc
and
xchg
aad
mov
stos
push
fsubr
das
adc
sbb
sbb
lock
mov
outs
push
idiv
pusha
js
sar
mov
mov
mov
xchg
adc
mov
bound
push
aaa
pop
fsubr
ror
lahf
ffree
scas
or
ret
and
adc
cdq
and
out
sub
mov
xlat
push
or
inc
pop
xchg
mov
loopne
out
jbe
push
mov
push
mov
sbb
inc
xor
adc
ins
retf
mov
call
xchg
aas
mov
enter
idiv
and
xchg
ret
pusha
jns
pop
inc
push
push
scas
retf
dec
out
sbb
ret
aad
into
gs
jecxz
fs
jp
xchg
inc
cli
add
cmc
(bad)
jle
cdq
rcl
fwait
xor
cli
and
jnp
repz
loope
mov
enter
and
out
pop
adc
and
sti
adc
xchg
pusha
sub
or
mov
enter
cs
cli
test
and
repz
cmp
xchg
imul
test
rcl
jne
jne
icebp
repnz
daa
aas
mov
inc
push
cdq
push
je
jb
cmp
cmp
lea
xchg
sahf
cdq
leave
retf
jmp
mov
adc
cmps
outs
or
dec
out
xor
and
out
jp
pop
push
arpl
mov
mov
pop
jnp
mov
out
mov
test
leave
aaa
gs
xchg
ret
out
xchg
cmp
jnp
xor
cmp
cmp
outs
les
mov
xor
pop
mov
jns
sbb
xor
sbb
movs
cmc
add
pop
(bad)
sub
ss
jne
mov
mov
mov
shr
stc
jno
repnz
das
popa
movs
ret
add
sbb
cmp
xchg
mov
sub
dec
fld
add
int
lods
out
or
push
sbb
sub
test
dec
mov
aam
call
(bad)
pushf
cmp
fisttp
imul
mov
jl
popa
ins
or
loopne
or
std
sbb
inc
int
pop
xchg
push
add
ds
fidiv
jge
(bad)
push
movs
into
test
cmp
aad
rcl
adc
mov
int
sub
ror
xchg
test
push
adc
adc
btc
fwait
jns
jmp
test
mov
add
stos
xchg
je
js
pop
mov
push
xchg
mov
add
ficomp
sbb
push
retf
and
cld
inc
cdq
(bad)
mov
repz
cmp
inc
les
out
scas
inc
pop
mov
dec
mov
imul
mov
popa
sbb
popw
popf
test
ss
jae
mov
xor
mov
or
cwde
sbb
cmp
pop
mov
add
lds
push
mov
popa
xchg
xor
stos
xor
mov
xor
loope
jae
push
pop
cmp
mov
lahf
es
fdivr
popf
cdq
inc
push
jp
pop
or
or
add
lods
fiadd
ja
icebp
pop
pusha
out
rol
rol
fisub
popf
les
push
lahf
push
add
push
dec
gs
cmps
add
dec
iret
dec
dec
adc
add
inc
jns
cdq
aad
mov
loop
adc
sti
mov
jo
fwait
into
pushf
pop
inc
std
cmps
imul
nop
push
add
add
ins
outs
push
push
inc
mov
add
sub
xchg
mov
cmp
push
cdq
pop
mov
mov
pop
jmp
test
icebp
enter
dec
and
rcl
stos
sbb
jecxz
jmp
mov
iret
xor
call
mov
mov
adc
aas
in
mov
inc
add
out
pop
pop
clc
jmp
vdivps
xchg
add
dec
or
push
or
es
pusha
pushf
push
mov
mov
popa
sbb
call
jns
inc
lds
or
fs
aaa
mov
aaa
pop
loopne
imul
jg
ss
jb
adc
inc
cmc
movs
ins
clc
das
xor
pop
mov
mov
jle
test
ja
sbb
and
add
xor
jmp
jne
mov
push
sub
out
arpl
mov
aad
das
sub
add
in
inc
add
test
mov
add
add
inc
les
dec
pop
adc
das
push
call
xlat
es
lods
in
pop
push
addr16
jns
mov
outs
imul
fidivr
adc
je
sub
dec
mov
push
add
sub
push
in
in
call
js
xchg
mov
jns
ins
iret
mov
mov
jg
push
jl
or
sub
pop
sub
je
push
or
dec
cli
fmulp
ds
cli
dec
add
lock
dec
and
addr16
mov
or
lock
dec
cwde
test
mov
rcl
xor
call
jns
push
mov
cmps
int3
(bad)
mov
xchg
inc
sbb
mov
jmp
lods
je
pop
cwde
scas
pop
push
rcr
popa
stos
into
jle
or
(bad)
(bad)
fcomp
(bad)
dec
mov
fild
xchg
mov
or
or
ins
or
adc
call
xor
in
and
sbb
or
lods
pop
sub
(bad)
loopne
and
repz
inc
lahf
mov
sbb
jo
jle
dec
bound
dec
sbb
push
xor
jmp
int3
mov
push
int
ret
mov
xor
mov
jmp
mov
jmp
lods
pop
pop
sbb
dec
jecxz
pusha
push
dec
mov
fidivr
not
popf
ret
sub
leave
(bad)
popf
inc
cmps
out
adc
mov
mov
lods
pop
mov
ds
xor
gs
jns
fidivr
mov
cmp
add
je
and
into
(bad)
stc
pop
pop
adc
xor
push
jp
pop
retf
xchg
or
leave
loope
test
jg
leave
leave
icebp
adc
lea
fwait
mov
lahf
je
or
mov
add
push
xor
gs
dec
or
add
mov
or
lods
adc
xor
div
sub
sub
xchg
sub
lea
cmc
lds
sbb
wbinvd
stos
imul
dec
cwde
imul
dec
fwait
inc
arpl
lods
(bad)
ja
or
ins
jle
stos
xor
xchg
sbb
sti
sbb
repnz
enter
retf
mov
pusha
mov
ja
ret
push
adc
jns
jne
mov
enter
cli
(bad)
adc
imul
fbstp
xor
clc
gs
pusha
jmp
test
sar
sar
in
dec
add
fwait
add
stos
cs
push
pop
or
mov
and
icebp
xchg
jl
call
out
mov
mov
mov
mov
out
dec
(bad)
ffreep
xchg
pop
xor
cs
mov
push
ret
jns
rol
lahf
cmp
mov
cmp
popa
in
pop
mov
das
dec
fwait
push
je
fwait
push
or
scas
rol
test
or
cmc
xchg
xchg
push
inc
jns
rcl
cmps
imul
xchg
imul
repz
out
and
inc
cmp
or
jmp
loop
mov
push
cmp
jno
into
or
sbb
cld
jecxz
xor
aad
and
jb
mov
mov
sbb
inc
data16
test
pop
push
xor
sbb
shr
cmp
sbb
mov
jecxz
je
loop
xchg
retf
xchg
fst
xchg
fnstsw
lea
or
xchg
iret
cdq
xchg
mov
retf
imul
and
xchg
aam
or
mov
jns
enter
fwait
aaa
cdq
xchg
adc
or
inc
ret
ins
jnp
jo
sub
cmps
inc
and
test
sbb
or
or
icebp
ret
mov
adc
sub
call
mov
mov
mov
(bad)
fmul
movs
cmp
mov
repz
xchg
cdq
xor
sub
and
cld
mov
jb
ret
mov
shl
or
mov
ds
sub
push
aam
push
or
push
cmc
mov
sub
and
out
js
js
mov
(bad)
or
xor
xchg
push
ss
cmp
pusha
mov
inc
adc
retf
cmc
cmp
jo
ins
test
fwait
add
mov
test
jp
xchg
mov
retf
mov
mov
retf
xchg
xor
inc
dec
(bad)
into
inc
cld
fisttp
popa
mov
or
mov
inc
inc
stos
dec
add
clc
xor
push
(bad)
jne
and
adc
ins
add
lock
jle
xchg
push
mov
xchg
inc
nop
cmp
xchg
or
mov
push
jle
loope
xchg
inc
jg
and
cmp
mov
(bad)
pop
jmp
pop
dec
in
mov
jle
sub
push
rep
mov
cmp
pop
das
jmp
ficomp
dec
pop
mov
sub
test
inc
push
dec
cmc
inc
push
jecxz
movs
les
jne
mov
int3
lods
add
in
sbb
jnp
push
dec
push
mov
fldenv
add
es
xor
push
iret
jge
jns
and
(bad)
inc
jecxz
ret
or
cmps
inc
xor
rcl
dec
sub
test
jmp
dec
hlt
push
fist
push
fldz
ins
lock
out
dec
push
mov
xor
jbe
sub
mov
aam
cmp
push
test
clc
arpl
outs
fcom
dec
pop
add
pop
scas
jmp
sub
mov
cmp
cmp
add
call
call
xchg
cmps
pop
js
mov
push
xchg
test
cmp
xor
mov
push
pop
push
inc
enter
and
data16
or
xlat
inc
adc
fisub
pop
movs
loop
push
sar
xchg
dec
imul
fild
js
fcmovne
pop
js
sahf
xchg
pop
mov
cdq
xchg
ins
xor
push
out
popf
rol
test
xchg
leave
out
cmp
adc
bound
mov
out
jle
popf
pop
int3
push
lods
aad
fild
sub
imul
xor
fild
movs
xor
push
push
aaa
outs
adc
xchg
cmp
pop
add
pop
jmp
sahf
ffreep
cmps
stos
gs
(bad)
mov
pusha
fnstsw
cwde
ror
mov
pop
loop
mov
push
pop
out
js
shr
fnsave
(bad)
(bad)
mov
aad
or
fs
fcomp
lds
fwait
mov
imul
(bad)
in
xchg
mov
popf
or
add
fsubr
(bad)
fcom
jns
daa
mov
ja
cmp
mov
add
addr16
cmps
call
aas
loopne
imul
inc
test
jae
push
aad
xlat
jbe
nop
inc
sbb
inc
xor
mov
sbb
cmp
xchg
jo
sub
data16
fwait
cmc
aam
sbb
xlat
aas
push
xchg
test
or
adc
fist
or
das
pop
lods
or
or
stos
shl
aam
aaa
fisttp
sub
mov
(bad)
jmp
inc
mov
out
in
lods
cli
push
pushf
cmp
pop
out
arpl
sub
inc
test
xchg
loop
pusha
adc
inc
push
test
arpl
lods
(bad)
mov
jae
add
jnp
mov
mov
pop
movs
and
jmp
aaa
sbb
out
xchg
imul
sub
jae
add
stos
dec
sbb
sbb
adc
inc
push
push
or
es
xor
hlt
inc
sbb
pop
ja
bound
scas
dec
xor
and
fisubr
cwde
std
xchg
pcmpeqw
pop
adc
lock
popf
or
push
ss
ins
xor
and
add
xor
leave
mov
sub
push
mov
test
pop
lahf
arpl
mov
fst
mov
loopne
jecxz
and
mov
aaa
addr16
jae
icebp
scas
push
mov
cmp
pop
mov
xor
mov
(bad)
shl
in
jmp
iret
aas
cli
push
cmp
xlat
pop
dec
out
adc
push
sbb
jmp
f2xm1
push
mov
lahf
cmc
push
mov
ficomp
and
mov
xchg
leave
adc
aas
call
daa
dec
add
jne
pop
jb
mov
pop
aaa
fsub
jmp
sbb
inc
push
push
add
mov
add
lods
mov
xor
ins
or
mov
ja
call
adc
push
xchg
pop
ds
xchg
xchg
jno
(bad)
call
pop
fild
out
outs
or
movs
lds
aaa
xchg
mov
add
aam
push
and
ret
iret
jle
sar
scas
and
sbb
adc
pop
add
(bad)
sbb
shr
stc
jge
pop
adc
adc
pop
xor
inc
aad
bswap
(bad)
ins
lea
test
jl
mov
das
cdq
(bad)
xchg
leave
retf
push
xchg
dec
icebp
pop
mov
push
shl
dec
pop
dec
lea
enter
stc
outs
gs
or
retf
xor
rcr
xlat
movs
(bad)
ja
xor
adc
dec
ds
jle
pop
sbb
mov
or
addr16
pop
and
imul
and
dec
xor
push
jbe
mov
pop
jae
jae
mov
mov
cmps
or
pop
ret
xchg
dec
mov
imul
out
leave
sbb
sub
sub
aam
in
call
rcl
push
test
fwait
loopne
lods
not
cmp
mov
imul
(bad)
jecxz
cli
ret
jl
adc
xor
inc
inc
fcom
aad
jmp
cmp
movs
jnp
sahf
in
add
adc
cmp
jecxz
mov
xor
or
and
sub
cmp
or
loopne
outs
inc
or
adc
add
hlt
or
bound
adc
push
out
sahf
xor
jbe
mov
pop
and
lods
add
lds
in
jo
ss
mov
and
out
and
int
rcr
jnp
cs
sahf
gs
dec
stos
mov
sar
push
pop
in
sub
out
mov
stos
mov
sbb
inc
call
mov
ss
cmp
mov
dec
mov
fs
aas
sti
add
mov
popf
(bad)
pop
mov
repnz
push
rcl
mov
sahf
dec
mov
stos
aad
cdq
jp
sbb
mov
nop
and
sbb
cmp
cmp
loopne
jecxz
inc
jnp
ja
sar
mov
ss
popf
sbb
mov
and
and
movs
js
pop
in
frstor
cmps
mov
movs
sbb
push
cmp
loop
xor
add
(bad)
xor
xchg
add
and
pusha
imul
jo
mov
xor
mov
or
xchg
stos
dec
mov
push
add
retf
pop
cmp
mov
push
sbb
mov
aad
leave
fucomip
sub
dec
xchg
and
xchg
mov
pop
jnp
or
fwait
or
mov
jmp
ror
cli
sub
pop
mov
fistp
sbb
lea
repz
inc
mov
les
mov
gs
sbb
sti
cs
mov
push
and
jnp
not
jno
shl
fucomip
in
sar
mov
push
(bad)
in
adc
mov
repnz
(bad)
call
(bad)
rol
out
or
pop
in
or
addr16
lock
or
vmovdqu
ds
adc
cmp
rol
jno
xchg
or
in
jb
jle
cmp
dec
sub
loopne
(bad)
cdq
push
inc
fild
xor
clc
sbb
dec
rep
push
jno
ret
pop
scas
cmc
shl
repnz
fldcw
clc
cmc
jle
ins
test
xchg
outs
dec
push
pop
(bad)
xchg
and
repnz
or
cmp
xor
sbb
sub
dec
jmp
pop
xchg
iret
inc
in
mov
fisttp
in
out
mov
cmp
arpl
jp
inc
cmp
pop
sahf
mov
mov
retf
les
int
inc
xchg
xor
mov
sub
leave
sub
call
push
adc
scas
mov
mov
out
and
xchg
arpl
cld
pop
ja
jae
sub
iret
add
outs
sub
scas
xor
fisubr
paddq
fwait
retf
idiv
fcomp
ins
mov
icebp
repz
mov
mov
or
add
mov
jne
adc
cmp
into
pop
repz
sar
pop
add
ja
fadd
xchg
mov
rol
dec
push
or
jo
cld
(bad)
pop
xor
mov
cmps
cmp
inc
cmp
sbb
xchg
adc
push
cmp
ret
clc
sbb
fnstsw
hlt
xchg
call
sub
dec
out
push
push
scas
int
stos
mov
or
fs
add
ficomp
loope
fdivr
shr
adc
loope
movs
sbb
push
repz
adc
pop
jne
cmc
pop
loop
cwde
test
retf
add
outs
outs
nop
mov
loope
jge
(bad)
sbb
mov
push
sbb
mov
adc
mov
shld
inc
data16
stos
out
dec
pushf
mov
jle
out
mov
aad
(bad)
dec
mov
cmp
mov
in
scas
mov
cmp
pop
sti
xor
lods
mov
mov
mov
mov
xchg
rcr
pop
adc
mov
or
add
jle
push
jb
jl
mov
mov
mov
ret
scas
mov
dec
add
lea
or
lods
push
pop
stos
test
ins
psubsw
cmp
adc
std
popa
bound
cmp
cmp
dec
inc
lahf
push
jns
inc
cs
ror
sbb
std
add
dec
xor
div
sbb
dec
fnstsw
mov
imul
mov
dec
stc
sahf
stos
cdq
neg
pop
xor
jo
sbb
mov
or
popa
adc
or
adc
sar
data16
out
imul
fcomi
adc
xor
add
add
jmp
enter
or
push
mov
sub
jecxz
pop
cmp
mov
dec
adc
push
add
mov
fidivr
call
stos
mov
xchg
jo
inc
mov
jge
or
add
pop
es
pop
out
arpl
pop
into
nop
mov
sub
mov
add
in
jmp
mov
xchg
adc
popa
jb
mov
xchg
xchg
(bad)
lea
inc
(bad)
out
pop
push
ins
pusha
pushf
out
or
data16
fwait
cdq
and
dec
cmp
iret
sar
cli
xor
repnz
and
mov
cmp
fcomp
push
mov
stos
or
mov
inc
push
mov
mov
pop
xchg
and
std
push
lods
mov
loope
int
jge
jmp
jg
inc
mov
hlt
pop
push
(bad)
mov
cs
sbb
lods
xor
cli
push
add
sbb
xchg
sub
cmp
out
outs
mov
fs
mov
shr
cmc
add
data16
mov
add
push
dec
fs
xor
movs
sbb
popa
fild
dec
ja
dec
jge
mov
mov
sbb
mov
jmp
jp
aas
cmp
test
mov
mov
aas
out
cld
cmp
les
push
sti
xchg
and
cmp
jp
call
lods
cmp
(bad)
mov
dec
pop
push
add
mov
cmps
lock
lods
add
out
and
sbb
das
mov
iret
and
dec
push
inc
ror
icebp
scas
call
leave
cmps
(bad)
xchg
cli
xchg
push
push
(bad)
mov
aaa
cmp
ret
stc
jno
cli
cmps
pop
add
jp
dec
sbb
adc
mov
addr16
cmps
fwait
adc
push
pop
or
sti
mov
push
repz
int
and
aad
aas
jl
push
xchg
shl
scas
pop
or
ins
std
or
mov
jg
hlt
scas
dec
jl
dec
or
xchg
hlt
add
lea
test
stc
add
inc
mov
outs
jge
sbb
les
cmps
cmp
push
mov
jmp
pop
mov
lock
jns
inc
cmps
push
dec
stos
and
and
int3
xor
in
mov
data16
aaa
sbb
mov
adc
out
mov
xor
mov
gs
xchg
data16
xor
retf
jg
and
or
into
mov
jle
popa
pop
add
sub
enter
lods
adc
jge
dec
inc
jmp
pop
xor
ja
dec
loope
cmp
xor
fcom
jmp
out
fnsave
xor
popa
lods
pop
dec
or
or
arpl
mov
inc
push
sub
pop
in
inc
stos
push
xchg
(bad)
sbb
into
inc
add
sti
jbe
fmul
dec
add
dec
inc
call
inc
mov
adc
rol
push
mov
sbb
fnsave
add
stc
mov
fs
xor
jb
gs
adc
int
sar
mov
shl
xor
bound
loopne
pushf
loop
(bad)
out
js
xor
mov
adc
xchg
std
je
mov
dec
pop
jns
mov
mov
or
hlt
mov
fild
jbe
das
cmp
and
add
not
inc
add
cmc
and
mov
pop
add
shr
loope
enter
or
mov
out
mov
pop
pusha
mov
(bad)
rcl
xchg
and
nop
lods
ret
or
in
fidivr
in
adc
fdivr
es
and
mov
jecxz
dec
pusha
ja
aaa
xlat
dec
or
loopne
(bad)
shl
rcl
adc
cmp
inc
mov
call
mov
inc
cmp
fadd
dec
add
sbb
aas
sahf
cmps
mov
xchg
hlt
pop
pop
test
push
cwde
lds
jbe
sbb
and
or
add
jbe
push
aam
cmp
jae
lea
rcl
neg
inc
test
lds
push
xor
pop
movs
rcr
pop
test
(bad)
test
ins
add
fwait
sub
aad
scas
mov
fst
popa
and
xchg
mov
mov
out
mov
pop
out
fs
sti
lahf
dec
cwde
loope
das
jb
sbb
fistp
cmps
xchg
fcom
popa
fsubr
lahf
mov
mov
cs
mov
and
sar
inc
inc
jg
jns
mov
in
add
repz
dec
in
xchg
push
(bad)
xchg
and
daa
adc
ja
out
pop
ins
mov
sbb
pusha
aaa
mov
popa
and
xor
nop
outs
inc
mov
out
cmps
int
or
or
push
dec
loop
mov
test
out
xor
test
cs
adc
push
cwde
inc
cmp
mov
pop
push
mov
cmp
xchg
call
daa
and
fwait
xlat
daa
xchg
cmp
(bad)
mov
(bad)
fcomp
iret
jp
xor
add
xchg
mov
in
loope
mov
and
out
xor
xchg
cmps
repz
add
shl
(bad)
call
outs
pop
das
xor
ja
inc
clc
adc
test
xchg
(bad)
test
mov
mov
ret
jl
add
out
sar
pop
dec
jbe
or
iret
mov
dec
dec
cmp
fistp
cmps
and
(bad)
stos
stos
adc
mov
pop
ret
mov
in
cmps
fist
clc
and
int
mov
xchg
lods
or
inc
xchg
mov
mov
pusha
rcl
mov
sar
std
pop
lea
ficom
xor
movs
sti
sub
mov
mov
pop
test
cmc
sub
add
out
repz
in
adc
je
mov
bnd
adc
xchg
mov
sbb
push
or
clc
dec
(bad)
hlt
test
xchg
xlat
call
push
retf
push
jno
ins
loopne
sbb
ds
xlat
sbb
push
jo
inc
sbb
outs
je
pop
pop
xor
cs
jae
xchg
xchg
lahf
fisttp
data16
mov
adc
mov
nop
fsub
ja
inc
push
rol
nop
nop
sub
pop
in
retf
pop
ja
dec
sub
into
cmp
jno
fstp
cmp
(bad)
mov
inc
and
xchg
(bad)
out
xor
das
cmps
or
dec
jno
mov
mov
pusha
call
mov
and
mov
xchg
mov
aas
test
ins
pop
paddd
shr
enter
pop
mov
and
mov
in
out
xchg
fcom
das
xor
mov
add
jo
mov
xor
lods
popf
jno
shl
xchg
sub
or
xchg
scas
test
ret
icebp
ret
icebp
loopne
mov
lds
jne
or
xchg
sub
dec
inc
inc
inc
mov
cld
add
cs
adc
rcl
outs
or
xor
and
mov
cld
sbb
mov
call
xor
out
leave
cmps
sub
fild
dec
push
gs
mov
shr
(bad)
stc
inc
mov
jmp
push
cdq
push
(bad)
add
sub
(bad)
xor
sub
mov
cmps
in
leave
mov
fnstenv
jmp
frstor
mov
rcl
in
clc
jne
lds
inc
imul
push
stos
add
mov
out
shr
jle
mov
inc
sti
outs
sbb
inc
mov
neg
int3
cs
adc
xor
(bad)
jl
or
add
data16
test
and
xchg
and
xchg
sub
add
push
sub
cmps
data16
xchg
inc
aaa
in
jns
jge
cmp
mov
xchg
sbb
cmps
aad
xchg
push
sub
pop
in
dec
or
dec
retf
test
jo
adc
sub
hlt
aaa
cmp
scas
ret
mov
mov
cdq
inc
pop
mov
fiadd
dec
pop
fs
sbb
neg
dec
cs
icebp
(bad)
stc
out
retf
jns
(bad)
xchg
push
adc
pop
or
sub
lds
xor
sub
xor
int
jecxz
jle
xchg
jle
xlat
adc
aam
inc
ins
adc
and
pop
fucomp
mov
push
stos
stc
and
push
dec
test
aad
pop
ja
add
pop
addr16
cdq
mov
pop
mov
sbb
imul
pop
pop
push
lock
inc
shr
inc
cs
cld
jne
pop
dec
cwde
out
pop
cld
xchg
adc
jo
imul
in
(bad)
jecxz
ret
jb
in
mov
jne
hlt
retf
outs
std
mov
call
out
(bad)
repnz
aas
cwde
aas
push
push
daa
in
sub
dec
add
jp
jmp
fist
adc
outs
(bad)
dec
inc
pop
sti
dec
dec
mov
cmp
pop
icebp
ins
lods
icebp
inc
push
lods
dec
arpl
add
mov
ficom
movs
sti
xchg
div
push
inc
icebp
pop
(bad)
in
xchg
test
push
scas
test
fidivr
rcr
dec
mov
arpl
or
je
mov
fs
pop
test
sub
sub
ss
pand
or
xor
adc
shl
xchg
int
ss
movs
mov
mov
adc
and
in
add
mov
mov
jno
nop
push
mov
icebp
add
ss
jnp
jb
jbe
sbb
inc
mov
(bad)
cmps
loope
(bad)
enter
push
icebp
mov
shl
adc
mov
outs
push
rol
or
dec
aam
xor
ret
mov
inc
pop
mov
mov
dec
cmp
cmp
ret
les
mov
imul
pop
in
dec
ror
jge
retf
iret
dec
dec
mov
icebp
sbb
addr16
adc
mov
rcr
lahf
dec
rol
mov
push
dec
sbb
fisubr
mov
adc
mov
mov
cwde
sub
mov
fdiv
pop
sub
push
xchg
and
sub
sub
dec
in
and
dec
ret
lods
mov
xlat
fsubr
and
sbb
fs
shr
cmps
xchg
push
mov
and
inc
out
mov
enter
les
add
mov
loopne
inc
int3
lods
in
inc
sbb
mov
fs
jnp
add
pop
mov
jno
call
xlat
cmp
push
cmp
inc
jecxz
fiadd
sbb
jbe
sar
mov
scas
adc
loope
jno
sub
rol
adc
test
shl
dec
sahf
adc
pop
cli
sbb
xor
xor
sbb
jecxz
ficomp
fisttp
shl
(bad)
fwait
sbb
xor
cmp
xlat
mov
test
jmp
mov
jg
mov
xor
or
adc
xor
pop
pop
mov
mov
add
mov
adc
ss
pop
mov
ins
xor
dec
sub
inc
ins
mov
xchg
mov
(bad)
imul
aam
sub
leave
push
xchg
mov
mov
adc
sub
xor
ret
rol
(bad)
jnp
aas
sub
pop
xor
xchg
out
mov
mov
adc
adc
jae
mov
movs
pop
jnp
in
in
imul
jbe
xchg
lock
dec
dec
inc
(bad)
jne
push
ror
loope
cmp
pusha
(bad)
movs
addr16
add
adc
ss
popa
test
not
mov
lds
inc
movs
sti
mov
daa
push
push
push
mov
inc
clc
shl
mov
jmp
mov
cmps
xlat
imul
jle
push
arpl
(bad)
ins
push
(bad)
iret
out
and
fisttp
repz
jl
rcr
jns
cwde
add
dec
sar
imul
and
jae
xchg
lds
jmp
es
icebp
pop
lahf
pop
jae
in
add
cli
jbe
rol
push
(bad)
outs
xchg
mov
jg
mov
cmp
xor
repnz
dec
mov
push
test
cmc
mov
xchg
test
into
mov
ja
popf
pop
jno
test
bound
sahf
add
shl
outs
push
loop
xor
cmp
fs
loopne
in
clc
test
xchg
pop
fst
or
aam
retf
or
sub
mov
xor
shl
out
adc
sub
adc
ror
(bad)
cmps
and
cmc
mov
jb
jge
mov
call
sbb
inc
js
pushf
cmps
retf
push
rcr
and
jae
inc
sti
inc
(bad)
push
iret
dec
out
add
loopne
push
pop
lahf
inc
sub
adc
inc
mov
ins
call
mov
push
and
shl
sub
in
pop
mov
fxch
pop
mov
data16
dec
cmp
pop
imul
mov
cmp
paddq
sub
(bad)
les
sub
ds
xchg
push
add
push
sahf
cmp
jmp
mov
and
cmps
int3
xor
adc
xchg
test
push
sub
shr
dec
sti
sbb
loopne
in
adc
dec
jbe
mov
int
cmp
fcom
sbb
(bad)
mov
sub
aas
or
push
jl
mov
dec
stos
dec
(bad)
jo
dec
addr16
ror
sbb
push
sbb
aad
fild
mov
in
inc
das
and
std
jns
cs
inc
sahf
das
add
cmp
(bad)
xchg
push
mov
js
add
jb
sete
loope
add
jmp
std
pushf
adc
dec
xchg
lds
jg
cmps
popa
fldcw
inc
shr
xchg
popa
sub
ins
cdq
sub
call
pop
inc
in
dec
adc
ret
cmp
sub
call
mov
fidivr
pop
or
jae
xchg
(bad)
(bad)
and
pop
adc
shl
cmp
sar
cmp
xchg
dec
jl
jecxz
mov
mov
inc
loop
adc
mov
lahf
jb
fcomp
aas
push
popf
ds
sbb
sub
in
add
mov
push
sbb
xchg
cmp
(bad)
lods
outs
pop
dec
adc
hlt
sub
ret
leave
cmp
pusha
std
jl
push
mov
out
xchg
call
add
rol
jnp
mov
jb
xchg
xchg
sbb
fs
retf
and
sub
lock
test
push
dec
mov
mov
push
or
lahf
int3
stc
jb
lock
lods
(bad)
cmp
cs
loope
xchg
jl
inc
push
stos
inc
adc
sbb
or
mov
inc
je
adc
aam
movs
jmp
mov
(bad)
(bad)
push
mov
adc
fs
xchg
test
push
fild
dec
jnp
mov
and
or
gs
call
into
cmp
int3
and
sbb
aas
push
xchg
cld
enter
jl
jmp
or
or
dec
pshufw
pop
outs
sahf
in
and
sub
(bad)
repnz
lods
push
inc
clc
adc
test
push
lock
mov
ficomp
or
pop
bound
int
cmp
test
test
loop
jg
xor
jmp
sub
pop
fmul
jae
mov
and
in
aas
test
xchg
ret
xchg
xchg
or
cmps
jb
dec
(bad)
xchg
into
mov
sub
fisttp
test
pushf
test
ret
retf
(bad)
inc
rcr
imul
jecxz
adc
xchg
popf
or
ja
scas
fdivr
frstor
adc
pop
push
inc
inc
lods
imul
rcl
sahf
test
add
sub
(bad)
and
ret
and
dec
inc
dec
sub
jne
xchg
imul
ds
dec
ret
shl
xchg
push
jmp
pusha
fld
cmp
jnp
std
mov
mov
xchg
scas
bound
(bad)
xlat
xor
sub
jecxz
aas
push
jno
and
inc
pop
xor
int3
cmp
pop
repz
stc
adc
push
bound
lods
outs
and
ja
in
mov
cmps
lahf
jo
jnp
dec
inc
adc
aaa
cmp
inc
or
fcomp
mov
push
push
adc
jg
pop
jecxz
icebp
xlat
lea
mov
pop
fldenv
cmp
(bad)
lock
loope
daa
push
ja
mov
mov
pop
or
mov
pushf
loopne
pop
fcomp
or
cld
arpl
cld
push
call
xchg
sub
pushf
outs
mov
mov
repz
shr
jno
push
pop
push
cli
jecxz
pop
fs
imul
jo
xor
push
add
pop
(bad)
sbb
inc
adc
mov
rol
test
jmp
jmp
pop
mov
pop
enter
sub
ja
adc
add
inc
les
test
mov
adc
push
ds
aas
push
mov
ret
adc
dec
xchg
mov
(bad)
std
int
xchg
aam
pop
lods
mov
icebp
aaa
nop
imul
pop
stos
(bad)
sbb
mov
xor
clc
jp
adc
test
add
xor
loopne
inc
mov
retf
movs
cmp
add
cwde
out
dec
inc
mov
int
push
retf
jle
jo
leave
icebp
mov
inc
cli
inc
sub
in
sbb
rcr
jmp
rol
sub
mov
sbb
sbb
je
pop
leave
(bad)
(bad)
mov
clc
lahf
or
std
cs
or
push
inc
sti
push
sbb
and
or
adc
mov
cmc
pusha
jmp
outs
jb
sbb
sub
cmp
and
sar
add
stos
(bad)
js
pop
movs
push
es
xor
in
and
or
push
lea
mov
pop
icebp
retf
xchg
adc
sahf
std
push
mov
(bad)
and
xor
or
stc
mov
jnp
mov
ss
bound
push
or
push
lahf
pushf
cmp
jl
or
xchg
rcr
loop
xchg
pop
mov
movs
mov
xchg
mov
sub
stos
(bad)
cli
cwde
iret
inc
clc
xor
add
clc
dec
icebp
test
js
adc
rol
sbb
pop
sbb
push
lods
es
popa
cli
je
add
push
into
inc
and
popf
pop
aaa
cld
mov
cdq
cld
add
aad
out
or
mov
ret
add
rcl
mov
hlt
enter
(bad)
push
jecxz
(bad)
xchg
pop
imul
fidivr
mov
aaa
jge
stos
push
inc
xchg
jne
mov
not
ja
imul
jo
cmps
mov
xor
(bad)
jge
sub
dec
and
or
add
adc
fidiv
push
(bad)
ret
daa
pop
or
in
xor
mov
aaa
mov
inc
aas
mov
or
and
or
and
aad
xchg
sbb
add
cwde
push
scas
repnz
test
pop
mov
fwait
leave
jmp
sbb
jecxz
pop
fs
pushf
adc
popf
push
aam
cmp
adc
jne
inc
pusha
sub
jo
push
adc
rol
push
add
pop
pop
call
test
cmc
data16
push
sub
adc
ss
fbld
lock
sub
dec
mov
aad
xor
pop
ret
lock
bound
sbb
movs
int3
scas
push
jb
ret
repnz
xor
out
adc
jmp
jns
cwde
int
fwait
sub
cwde
and
dec
jecxz
push
sahf
out
jno
fmul
imul
dec
(bad)
arpl
mov
push
test
sbb
cmc
in
xchg
pop
sub
and
mov
jb
fsub
push
mov
test
in
je
in
push
lods
and
(bad)
mov
cld
sbb
inc
pop
fisttp
mov
loopne
mov
dec
dec
rol
pop
xchg
lahf
fwait
pop
fstp
jl
fdiv
jo
(bad)
loopne
sbb
push
push
cdq
(bad)
mov
(bad)
rcr
and
int
dec
sub
cli
push
inc
ja
mov
jl
jb
add
mov
mov
in
cs
std
das
xor
in
test
loopne
out
jo
push
jecxz
jmp
push
daa
jle
jns
(bad)
sub
cdq
inc
lods
sub
cwde
stos
sbb
(bad)
aad
repnz
pop
test
rol
cdq
adc
sub
(bad)
mov
(bad)
in
sbb
outs
add
ss
mov
mov
lods
mov
pushf
push
or
inc
push
adc
cmp
mov
jno
into
test
(bad)
jle
(bad)
or
sbb
mov
aaa
shl
jg
lsl
dec
ja
or
out
and
push
mov
add
fcom
cmp
cwde
retf
loop
(bad)
das
dec
inc
xchg
adc
jge
scas
(bad)
loopne
dec
sbb
mov
push
jp
xor
xchg
in
jmp
jg
add
dec
shufps
xchg
dec
push
fisub
call
loopne
nop
jle
out
enter
cmps
cmp
out
scas
je
push
fldpi
xchg
pop
sub
xor
(bad)
pushf
mov
in
mov
inc
and
mov
test
inc
push
lahf
pop
xchg
mov
mov
mov
xchg
(bad)
cmp
mov
leave
sar
add
je
repz
sbb
fcmovnu
aas
hlt
iret
ss
rcl
(bad)
test
repnz
xchg
mov
push
mov
mov
(bad)
pusha
mov
jmp
dec
imul
xchg
in
sti
xchg
outs
cmps
mov
mov
cmp
jmp
pop
aad
pop
sbb
dec
ror
add
mov
test
add
clc
cmc
sub
dec
movs
in
mov
pop
xor
push
xor
and
xchg
or
call
in
into
aad
and
ds
dec
mov
xor
stos
movs
push
push
loopne
adc
ret
loope
stos
clc
push
xchg
mov
dec
xor
mov
inc
jmp
pop
or
mov
aaa
ins
(bad)
cmp
fsubrp
sbb
xchg
ds
sub
aas
arpl
(bad)
retf
inc
mov
enter
dec
mov
popa
and
das
mov
stos
sub
icebp
and
dec
inc
adc
cmp
loope
sbb
stc
jle
xchg
test
pop
mov
stos
test
mov
aam
iret
dec
push
popa
push
and
pop
movs
cmp
out
div
jne
or
sub
retf
not
test
lahf
mov
test
scas
mov
fld
(bad)
dec
pop
and
cmp
daa
fisub
jle
push
fwait
lock
push
inc
add
loop
mov
loopne
jnp
and
daa
pushf
(bad)
ret
clc
adc
imul
call
jmp
test
pusha
jbe
push
add
icebp
aam
(bad)
mov
fnsave
sti
fwait
out
inc
movs
das
push
sbb
(bad)
lds
inc
retf
cmp
mov
ins
gs
jb
jb
pushf
(bad)
pop
cmc
sbb
daa
xchg
pop
push
dec
outs
cmp
fiadd
rcr
ficomp
popa
jp
std
sbb
or
cmps
add
lock
je
(bad)
dec
jmp
(bad)
nop
push
je
hlt
sar
mov
imul
dec
mov
cdq
js
add
pusha
push
inc
out
aad
popf
sti
(bad)
mov
and
dec
pop
aas
(bad)
jle
inc
iret
xor
xchg
xlat
int
sbb
xchg
cmc
data16
sar
push
sub
dec
inc
(bad)
jmp
hlt
(bad)
push
adc
dec
cdq
bound
das
cwde
pop
jmp
mov
pop
or
xor
icebp
push
mov
rol
xchg
xor
sub
jo
pop
mov
dec
jl
in
mov
xchg
add
mov
mov
add
sar
sub
mov
add
cs
dec
or
xchg
push
jne
jns
stc
mov
ins
sar
iret
ins
jo
inc
xor
push
popa
mov
std
popa
cli
lds
movs
xchg
mov
adc
shl
test
inc
sbb
adc
pop
xor
and
lock
call
stc
lea
cld
mov
dec
rol
sbb
ins
(bad)
pop
nop
pop
mov
js
test
xchg
cs
mov
cmps
jl
sbb
sub
mov
adc
shr
cmp
pop
push
xor
xchg
or
adc
or
(bad)
push
icebp
cmp
or
pop
jge
test
jp
neg
dec
inc
sbb
mov
pop
int3
in
cwde
xor
mov
push
out
xchg
pop
mov
stos
outs
sub
mov
outs
add
(bad)
leave
inc
repz
in
or
in
or
mov
add
push
in
addr16
mov
or
int3
jmp
add
xchg
xchg
xor
out
xlat
out
jne
cmp
jno
push
xchg
std
lods
rol
and
and
cmp
push
bound
fwait
pop
jns
jg
ss
aam
dec
lahf
repz
push
ins
sub
mov
pop
cli
aad
pusha
mov
sub
mov
movs
mov
scas
cmp
inc
add
xchg
and
adc
ret
enter
int
add
mov
xor
and
and
jmp
xor
dec
hlt
inc
mov
mov
mov
ja
xchg
das
sub
in
adc
leave
mov
lods
(bad)
out
addr16
loop
adc
inc
or
mov
and
mov
retf
leave
mov
lea
sti
sub
dec
sbb
xchg
inc
int
jnp
mov
cmp
xor
mov
out
stc
and
sub
test
dec
sub
mov
cmp
xor
add
push
cwde
xor
or
fsub
mov
inc
pop
fst
iret
dec
jns
test
into
in
pop
bound
lds
mov
push
dec
add
or
jle
call
sub
pop
cmp
mov
mov
loopne
imul
dec
push
test
ins
repnz
adc
outs
or
adc
call
pop
test
mov
addr16
xchg
push
dec
push
or
movs
loopne
pushf
mov
mov
mov
or
bound
sbb
adc
push
(bad)
repnz
ret
dec
and
add
xor
int
outs
xchg
mov
dec
sbb
push
dec
pop
cmc
jno
pusha
jns
ss
outs
lahf
scas
cli
pop
cmc
mov
mov
out
lock
inc
adc
ds
mov
or
jmp
leave
movs
call
sbb
imul
xchg
mov
sub
hlt
mov
pop
jne
pop
(bad)
jnp
pop
mov
push
xchg
pop
adc
scas
cmps
or
call
xchg
jns
loop
cmp
retf
xor
sub
pop
xchg
retf
ja
sub
sbb
push
or
aad
add
mov
scas
add
in
les
push
pushf
or
dec
pop
or
xor
into
lds
adc
xchg
test
inc
or
arpl
dec
jle
leave
jl
push
pop
jl
sub
out
dec
jae
or
inc
fwait
or
mov
jle
and
push
xor
and
jl
and
cmp
cli
lods
xchg
movs
mov
into
daa
dec
push
fistp
xchg
mov
xor
movs
mov
mov
ins
mov
inc
jl
mov
mov
mov
fldenv
jae
pop
test
cs
std
inc
mov
sbb
addr16
mov
ror
stc
pop
clc
int3
imul
dec
out
loop
jbe
push
popf
cs
jp
cmps
(bad)
lock
xor
rol
xchg
mov
adc
imul
repz
pushf
movs
cmp
outs
pop
jno
sub
in
out
aad
jmp
lds
scas
mov
inc
push
pop
cmp
mov
ror
xchg
sub
ja
in
xor
pop
nop
shl
adc
mov
enter
cwde
mov
cld
fucomip
outs
mov
mov
or
ja
lods
dec
adc
sti
test
jg
or
loope
push
jge
pop
stos
push
xor
ins
cmps
aam
jnp
xchg
shl
add
mov
xchg
rcr
ret
das
add
fisttp
mov
ss
mov
cmp
je
loop
mov
pop
dec
test
jae
test
mov
mov
push
pushf
hlt
shl
and
int
je
xor
pminub
cmp
test
scas
ror
pop
xchg
(bad)
cmp
push
xlat
test
push
mov
repnz
out
sar
shl
pop
cmp
push
xor
ret
(bad)
icebp
or
mov
xchg
jecxz
movs
fstp
sbb
loope
fcomp
mov
add
pop
mov
xor
inc
and
dec
test
mov
jne
pop
mov
inc
fisubr
add
xchg
push
outs
out
cld
dec
enter
cmps
iret
xor
in
leave
lods
pop
popf
stos
pop
aaa
push
cmp
std
loopne
and
jne
ret
fxch
cmp
leave
or
mov
add
mov
dec
out
push
push
fsubr
cmp
int3
lods
xor
cmp
or
and
mov
add
dec
test
es
mov
imul
mov
lods
shr
mul
fld
push
movs
(bad)
ds
movs
add
cmc
loop
(bad)
scas
or
jne
retf
xor
jnp
cmp
in
sub
shl
out
mov
add
mov
push
stos
iret
rcl
pop
ins
pusha
sub
iret
jo
mov
ret
rcr
adc
js
adc
icebp
in
mov
dec
into
or
add
inc
push
sbb
leave
dec
daa
sub
imul
das
test
daa
xchg
out
sbb
sbb
pop
jnp
xchg
(bad)
and
and
dec
loope
jb
out
stos
add
retf
clc
dec
pushf
dec
cld
pushf
adc
mov
and
ins
xchg
jge
push
cmc
mov
pop
jle
(bad)
scas
and
pusha
pop
retf
(bad)
or
fdiv
jecxz
mov
and
fsub
mov
sbb
retf
aas
(bad)
in
sbb
cmp
out
pop
mov
mov
or
push
jno
in
ins
cli
mov
xor
inc
xchg
mov
and
mov
add
dec
sbb
sbb
pop
mov
scas
fdivr
(bad)
adc
(bad)
lds
pop
jle
push
shl
push
mov
outs
pop
popa
add
ins
fisttp
adc
sub
sbb
out
test
movs
sbb
or
sub
aas
les
(bad)
rcl
pop
repnz
and
xchg
je
adc
and
enter
shl
mov
je
fbstp
and
xlat
fsubr
mov
into
retf
pusha
xchg
sahf
jo
jbe
fnstenv
out
jne
xlat
in
jmp
arpl
movs
cmp
or
imul
xor
xchg
bound
sbb
sub
push
cmps
mov
push
jmp
popa
cmc
rcr
mov
cmp
ja
or
pop
call
xchg
and
cmp
mov
push
aad
xchg
pop
xor
fmulp
mov
in
xchg
gs
and
cmps
lds
stc
mov
pop
sbb
sbb
inc
adc
jg
push
pop
test
aam
jne
sub
ret
sbb
dec
bound
sub
sub
cli
imul
xor
mov
hlt
adc
jecxz
gs
test
fldenv
push
add
cld
ror
xchg
scas
into
mov
imul
cmp
outs
push
mov
jb
ins
jnp
call
mov
or
adc
xor
inc
mov
movs
jle
push
jl
pop
jbe
(bad)
retf
and
add
adc
adc
xor
sub
ins
sub
sbb
push
or
or
fistp
aas
fld
cmps
popa
nop
sub
and
movs
xchg
cli
jb
cli
das
pop
lahf
mov
push
mov
shl
sub
out
adc
mov
mov
jp
inc
mov
retf
addr16
pop
mov
adc
push
jmp
cmp
test
jge
ficom
adc
xchg
jnp
xor
jle
(bad)
or
popf
sbb
push
mov
icebp
or
gs
adc
jbe
loope
movs
gs
cmp
movs
push
push
jmp
stc
inc
jns
out
xchg
retf
cmp
addr16
xchg
outs
fisttp
(bad)
cs
mov
push
or
adc
shr
fld
mov
push
hlt
pop
scas
(bad)
pop
je
js
push
xor
imul
sbb
sbb
cmc
pop
ss
pop
jb
mov
data16
test
repnz
add
mov
outs
jb
ds
aam
repz
jle
daa
gs
or
jg
pop
cwde
push
adc
nop
sub
dec
push
jmp
scas
mov
outs
shl
xor
fcos
scas
pop
push
ret
pop
add
pop
(bad)
mov
je
pop
jmp
aas
and
dec
add
arpl
push
ins
jno
bndstx
pop
adc
sbb
out
jecxz
fld
(bad)
das
aad
inc
dec
fnstenv
sbb
jbe
cdq
les
les
mov
(bad)
int3
inc
jmp
jnp
add
jl
push
xchg
cs
mov
cmp
mov
xor
mov
rcl
iret
jae
pusha
stc
dec
mov
fwait
aam
cmp
rol
push
lods
cmp
imul
inc
jns
pop
ret
ja
xchg
movs
or
nop
jmp
outs
or
cwde
jbe
push
sbb
div
mov
iret
fcom
(bad)
xor
movs
je
sbb
dec
xor
mov
adc
mov
sahf
jo
hlt
or
inc
sub
mov
outs
movs
inc
xor
push
jb
imul
aad
inc
out
dec
mov
jmp
sub
sbb
xchg
data16
icebp
jge
push
inc
aas
pop
pop
ja
xor
mov
add
imul
sbb
hlt
sbb
xchg
xchg
pusha
dec
fistp
rol
scas
fdiv
mov
jbe
cmp
xchg
sbb
mov
bound
popf
inc
push
inc
mov
dec
mov
sti
and
adc
cmc
sub
fstp
mov
imul
jno
or
inc
out
cmps
dec
stos
inc
xchg
(bad)
stc
or
lds
out
pop
ror
xchg
dec
and
add
mov
call
and
xchg
int
pusha
sub
(bad)
jnp
mov
pop
mov
xchg
jne
cmp
fild
enter
fnstsw
adc
mov
sahf
lods
out
sti
mov
inc
shr
push
fst
mov
dec
mov
inc
push
mov
jecxz
jae
mov
inc
mov
int3
inc
lods
data16
xor
mov
rcr
xchg
out
aad
pop
mov
pop
push
pop
jg
enter
adc
push
push
adc
rol
(bad)
inc
std
xor
cld
xchg
xor
sub
cli
sub
pop
(bad)
jmp
mov
jae
in
jb
movs
leave
adc
inc
cmp
ds
into
fmul
jae
jecxz
jmp
into
xor
jp
imul
ss
test
mov
pop
lahf
repz
lock
push
sbb
into
pop
xchg
sbb
mov
push
mov
loop
push
loop
pop
cmp
mov
test
mov
or
dec
mov
mov
inc
dec
and
dec
or
jo
dec
addr16
movs
fst
and
test
fwait
inc
aad
in
fcomp
lahf
push
mov
jl
sub
stos
pop
inc
or
and
fild
cmp
and
or
push
cmps
sysexit
cld
inc
fwait
lods
sub
and
(bad)
arpl
push
mov
push
inc
std
mov
sbb
test
js
push
inc
lods
scas
loope
or
xor
fwait
imul
cld
in
fbld
(bad)
call
imul
mov
push
outs
push
inc
xor
mov
dec
xchg
int3
sbb
adc
mov
sbb
adc
or
or
(bad)
cli
pop
fisub
xor
add
shr
mov
sub
cmp
cmp
sub
sbb
lods
pop
(bad)
icebp
push
outs
out
adc
dec
fs
pop
mov
mov
in
and
adc
in
mov
(bad)
sbb
pushf
loope
fbld
add
lods
bound
int3
push
out
or
aaa
add
in
shl
sar
pop
shl
adc
push
mov
cdq
(bad)
adc
sbb
xchg
or
mov
es
ins
jmp
data16
or
dec
pop
iret
jp
mov
push
mov
mov
sub
stos
mov
pop
mov
sar
dec
xchg
xchg
sub
ror
push
cmp
add
adc
dec
xchg
push
sar
imul
ja
cmp
ss
test
cmp
jmp
push
add
popa
pop
movs
mov
sub
fimul
ret
cmps
dec
shr
into
out
cmp
xchg
sub
sbb
shl
push
aaa
clc
jns
icebp
stc
mov
sub
inc
ins
loopne
mov
ret
push
dec
in
loopne
test
mov
arpl
sahf
xchg
out
js
enter
pop
mov
lahf
gs
fist
stos
pop
add
sahf
dec
fstp
cld
in
add
and
cmp
lahf
sub
in
ror
call
xchg
movs
dec
push
lahf
sub
dec
rol
jnp
push
ret
ins
or
out
mov
mov
(bad)
sbb
in
adc
mov
ret
cmp
xor
sbb
punpckhdq
and
adc
jnp
stos
xchg
or
rol
xor
pop
mov
mov
mov
jle
hlt
retf
outs
js
nop
jp
dec
icebp
xchg
sbb
xor
cli
fldcw
xor
in
jb
(bad)
xor
movs
adc
sub
mov
cwde
enter
popa
pusha
mov
add
enter
or
faddp
mov
fild
in
js
jnp
inc
and
and
mov
out
sti
movs
push
pushf
int
test
inc
fcmovu
and
cmc
and
call
(bad)
out
repz
xor
fistp
popa
mov
cld
loop
shl
and
call
mov
cmps
xchg
xchg
repnz
and
aam
dec
call
mov
add
into
jbe
clc
xlat
adc
sar
push
popf
adc
inc
ins
xchg
in
sbb
cmp
cld
test
fs
mov
or
dec
xor
xchg
push
retf
arpl
fs
xchg
xadd
mov
popf
pop
mov
cmps
xchg
ret
call
xor
ret
or
or
xlat
movs
dec
idiv
pop
mov
cmp
jns
lock
dec
fidiv
jg
shl
scas
sub
push
rol
sahf
adc
or
and
xchg
enter
xor
xchg
test
mov
test
push
test
jmp
fisttp
popa
lods
or
dec
les
and
pop
or
xchg
sub
jne
sar
fsubr
loop
clc
aaa
mov
xor
push
push
pop
aad
mov
(bad)
xchg
lods
jnp
aaa
adc
or
inc
jb
mov
stos
xor
cwde
pop
hlt
outs
mov
enter
shl
adc
inc
or
inc
inc
mov
xor
hlt
mov
sub
(bad)
out
sub
cmp
ret
sbb
imul
cmp
les
push
leave
pop
xor
xlat
rol
sbb
pusha
ret
mov
fistp
xchg
aas
ret
imul
nop
add
add
push
xor
cmp
(bad)
cdq
in
icebp
rcl
mov
xchg
das
jmp
cmp
cmps
or
mov
aaa
test
sbb
stos
test
shl
fdivr
dec
enter
movs
jae
add
mov
scas
cmp
in
add
int3
outs
adc
or
mov
(bad)
es
dec
sbb
mov
jno
cmc
xor
(bad)
cmp
inc
mov
or
mov
mov
sbb
dec
cli
xlat
stos
mov
(bad)
jl
ins
or
repz
mov
cld
mov
pop
add
addr16
inc
stos
mov
(bad)
aad
jno
out
cmovo
in
int3
sub
pop
jnp
push
into
adc
scas
fnstsw
in
sbb
xchg
push
pop
mov
xchg
imul
cs
inc
cli
fmul
aam
mov
adc
push
jecxz
mov
sar
cmp
cmps
imul
shr
sub
in
xchg
call
fstp
dec
ret
std
(bad)
mov
add
add
es
sbb
push
dec
mov
arpl
adc
sub
mov
(bad)
in
push
jmp
sub
shl
push
cmp
das
cwde
aam
adc
inc
sub
inc
cmp
cli
enter
jnp
inc
outs
adc
dec
xor
mov
mov
pop
add
xor
hlt
mov
test
mov
nop
cmc
pop
jno
jle
adc
test
jnp
xor
aam
gs
xchg
jbe
xor
outs
cdq
sub
jle
(bad)
jo
outs
(bad)
test
ja
mov
ret
lods
push
retf
scas
das
pop
dec
adc
lea
ret
outs
pop
push
mov
or
push
mov
pop
cwde
sub
mov
repz
sub
cmp
popf
(bad)
iret
mov
xchg
sahf
adc
enter
test
aaa
aas
pop
xchg
mov
add
cmps
dec
dec
or
or
and
or
sbb
add
lods
sbb
mov
or
jbe
sbb
fistp
cwde
xor
xchg
movs
(bad)
jne
data16
ror
aad
out
mov
pop
xchg
or
scas
stc
push
bnd
xor
(bad)
push
cmp
cmp
stos
mov
fs
fld
and
cmp
sbb
or
imul
add
or
sub
sbb
fdiv
pop
mov
dec
inc
xlat
sub
lods
sbb
movs
fsub
(bad)
cmp
jle
push
shl
push
or
mov
daa
dec
inc
sbb
test
jmp
mov
loope
mov
ret
je
mov
mov
gs
mov
call
xchg
adc
test
xchg
jnp
(bad)
aaa
push
xor
cmc
aaa
add
popa
cmc
mov
or
and
pop
push
cli
push
pop
and
out
cmps
pop
hlt
std
ret
or
mov
mov
data16
out
lds
fnstcw
pop
cmp
or
inc
out
ja
dec
xchg
pop
or
mov
push
pop
ret
push
ins
xor
inc
outs
push
add
jmp
ret
push
push
dec
mul
xchg
dec
cmp
cmc
mov
pop
sbb
cmp
movs
xlat
fcomp
or
gs
ins
and
cmp
in
dec
loopne
(bad)
in
pop
and
mov
stos
hlt
mov
jmp
cmp
sti
add
repz
lock
daa
out
nop
pop
jo
mov
add
(bad)
xor
test
call
test
sbb
mov
fs
inc
adc
sbb
mov
leave
scas
xor
xchg
push
or
jge
push
cmps
mov
call
rol
dec
mov
in
sbb
scas
mov
mov
mov
fmul
push
xor
out
dec
loopne
push
mov
cdq
movs
and
cld
ret
fucomi
xor
fwait
pop
sub
mov
imul
xchg
jmp
lods
loope
sub
cmp
out
gs
pop
scas
inc
(bad)
jl
mov
pop
inc
xor
inc
out
(bad)
inc
fstp
cmps
xchg
cmps
xor
cmp
or
xchg
cmp
add
in
add
inc
test
retf
test
and
mul
jecxz
daa
(bad)
pop
cmp
fs
test
adc
inc
mov
push
dec
push
add
mov
mov
fstp
or
push
add
inc
daa
icebp
daa
nop
cmps
push
(bad)
popf
inc
mov
sub
test
xchg
jnp
ficomp
jl
dec
sub
test
out
sbb
daa
test
xchg
lods
cmp
clc
pop
movs
pand
inc
popa
rcl
mov
mov
fs
rcr
psllq
je
cwde
adc
inc
les
mov
cmp
in
sub
xor
fistp
xchg
out
fimul
stos
loop
push
xchg
test
push
mul
sub
aam
sbb
or
jbe
(bad)
test
mov
cmp
push
dec
push
dec
push
addr16
mov
cmp
push
ins
in
sbb
ss
rcl
cdq
fild
fsub
adc
cmp
out
and
mov
(bad)
test
xchg
and
nop
xor
lods
pop
(bad)
clc
in
dec
jg
(bad)
(bad)
jo
inc
add
sub
out
push
lods
scas
popa
xor
mov
or
inc
cdq
xchg
push
jp
fwait
pop
cmp
jnp
aas
jo
mov
retf
cmp
push
stc
iret
sti
mov
xor
ror
pop
dec
jmp
inc
sbb
cwde
jnp
mov
push
lods
mov
jns
inc
sbb
and
dec
scas
push
pop
push
test
aad
push
test
push
xlat
and
pop
jmp
inc
iret
mov
adc
fdivr
dec
(bad)
imul
test
jb
mov
mov
fld
xchg
push
gs
daa
sub
mov
push
jmp
mov
fwait
lds
jp
int
in
frstor
ins
es
xor
ja
arpl
mov
aad
aas
imul
cmp
outs
cmp
inc
and
or
sti
scas
or
fstp
ja
aam
data16
mov
xor
push
pop
dec
jno
cs
mov
mov
jl
daa
jg
add
pop
fistp
fidivr
pusha
ficom
adc
add
(bad)
push
shl
mov
xchg
sub
cmp
sub
cli
add
aas
icebp
mov
add
xor
jno
ss
mov
mov
sub
imul
test
push
push
jb
js
xchg
test
mov
push
cmp
ret
test
fisttp
jp
call
sahf
div
jnp
(bad)
fsubp
lock
inc
fsubr
loope
fnstsw
and
push
pusha
pop
ror
pop
mov
add
daa
mov
dec
mov
setle
(bad)
repz
sbb
in
(bad)
cmc
in
lea
in
xor
sub
cmp
lahf
hlt
sbb
dec
pop
and
enter
repz
adc
fisttp
retf
loop
nop
lock
or
mov
and
js
retf
imul
pop
arpl
or
sbb
mov
sti
test
ret
mov
pop
cmp
out
es
aas
outs
cli
jbe
and
gs
ds
out
push
add
jecxz
test
ja
mov
mov
jl
das
ficom
sbb
and
out
je
xlat
or
mov
or
rcl
outs
lahf
push
sub
pop
push
aaa
std
neg
jne
jnp
mov
stos
push
enter
mov
pop
mov
test
pop
cmc
fild
xchg
iret
and
iret
aad
add
(bad)
adc
int
test
sub
(bad)
adc
ret
in
ins
movs
dec
cmp
mov
cmps
outs
js
mov
das
fwait
les
jg
push
jo
fisttp
imul
cmp
lock
fst
sub
or
ret
push
mov
mov
mov
xchg
(bad)
stc
lods
sbb
mul
repz
out
jmp
sub
push
mul
popf
inc
in
aam
dec
xor
ds
unpckhps
retf
sbb
jle
mov
dec
dec
pop
dec
add
cmc
cs
or
pushf
jmp
sbb
inc
call
in
inc
fbstp
add
add
gs
bound
mov
push
or
push
(bad)
fidiv
pushf
ror
jle
outs
inc
sub
sbb
bound
jb
sub
ret
into
and
retf
icebp
pushf
out
mov
adc
imul
dec
popf
cmp
aam
and
gs
loopne
inc
aas
sub
push
fist
ja
cli
std
cmps
and
xchg
sar
mov
std
mov
cwde
loopne
cmc
push
inc
xchg
js
sub
inc
pop
xchg
inc
cmp
jnp
mov
(bad)
into
cs
xor
aad
shl
rcl
test
mov
retf
cwde
aad
scas
push
jg
xor
arpl
xchg
mov
sbb
adc
inc
(bad)
xor
push
(bad)
fisttp
push
xor
out
pop
sub
cli
int
mov
mov
inc
in
sbb
fisubr
sbb
sbb
mov
(bad)
adc
das
fsub
cmp
cld
sar
xchg
sahf
lahf
test
mov
jns
ret
fsubrp
jmp
sub
mov
int3
pop
pop
pop
in
(bad)
mov
inc
sub
sbb
test
cmp
sub
call
outs
aas
lods
or
stos
cmp
(bad)
ins
lods
jo
aam
jnp
and
jecxz
loopne
sub
push
lods
das
loopne
pop
pop
out
push
mov
sub
xchg
push
aam
xor
and
imul
push
lock
and
sub
cwde
sti
inc
and
add
push
and
mov
xchg
test
bswap
fwait
ja
push
cmps
push
dec
and
adc
xchg
jmp
mov
inc
stos
loop
xor
or
push
push
dec
in
sahf
jg
xor
inc
addr16
inc
mov
cmp
push
mov
mov
daa
dec
inc
pop
add
es
movs
in
mov
out
pusha
aaa
cli
dec
and
xor
test
push
pop
push
sub
into
scas
mov
les
ror
dec
mov
sub
adc
or
adc
xor
outs
mov
mul
aaa
shr
js
test
mov
push
pop
sahf
add
jmp
dec
iret
scas
inc
popf
and
pop
fdivr
out
rol
fiadd
xchg
add
rol
ins
push
repz
int3
jl
mov
sbb
mov
int
xor
stos
or
adc
div
shl
scas
sar
adc
out
das
(bad)
cdq
mov
lock
in
pop
and
stos
call
sub
or
ds
in
frstor
mov
lock
jl
ins
test
xchg
dec
jmp
loope
or
bound
aam
ins
pop
loopne
inc
les
fisttp
aad
das
push
aas
in
scas
inc
jo
shl
ret
and
ret
push
fsubr
sti
pop
sub
test
cld
lock
inc
dec
jb
shl
jmp
div
ret
mov
sbb
and
test
(bad)
ret
arpl
adc
arpl
mov
mov
clc
cmp
loopne
test
mov
pop
mov
xchg
adc
or
xchg
sbb
xchg
sbb
sub
inc
movs
mov
push
stos
jle
inc
and
retf
jne
mov
sbb
les
daa
pop
add
inc
ins
stos
add
pop
test
sub
sar
cmp
fiadd
stos
fwait
es
jne
out
xchg
out
adc
out
cmps
dec
pop
mov
pushf
fdivr
pop
jmp
fistp
and
pop
pop
xor
(bad)
mov
lods
fisub
and
(bad)
dec
imul
pusha
mov
dec
or
adc
out
repz
scas
sub
sti
xchg
fsub
aam
pop
jmp
and
mov
mov
xlat
lahf
(bad)
mov
xchg
leave
jno
sub
push
sbb
frstor
adc
pop
push
imul
cmp
ins
fsub
inc
out
mov
out
sub
sbb
shl
pop
arpl
cdq
jo
mov
push
sub
dec
sbb
(bad)
jns
dec
(bad)
fdiv
leave
sub
add
xchg
cmp
mov
xor
enter
xchg
fidivr
in
add
mov
jae
xor
pop
popa
pop
mov
lahf
mul
dec
imul
push
fsubr
pop
mov
pop
adc
pop
mov
mov
cs
mov
into
adc
(bad)
push
mov
cmc
mov
clc
push
push
xchg
pop
sbb
mov
xor
xchg
cld
shl
mov
inc
mov
push
fadd
mov
inc
fwait
push
pop
loopne
pop
add
out
jbe
popf
fisttp
cwde
pop
pop
es
mov
dec
mov
xor
ds
pop
loope
hlt
rcl
jno
dec
mov
les
out
fstp
unpcklps
pop
data16
aam
cmp
cmp
dec
ror
xchg
lea
mov
js
xor
adc
rcl
xor
call
xchg
cwde
mov
lock
mov
out
push
in
mov
aas
or
lock
test
(bad)
int3
sbb
mov
mov
fild
call
sbb
push
pop
iret
lahf
mov
sub
ret
or
loop
dec
push
call
outs
inc
hlt
sbb
dec
jb
shl
cmps
xor
jno
icebp
fild
add
xor
sub
mov
cli
sahf
fucomp
inc
mov
mov
ss
loop
iret
(bad)
fdiv
(bad)
or
pop
in
ins
sbb
cmp
leave
std
test
js
mov
test
sahf
lods
pushf
int3
les
sbb
aas
repnz
loopne
lea
or
mov
pop
sbb
sub
jg
rcl
add
pop
out
fcomp
pusha
std
sti
cld
shl
(bad)
ja
xchg
push
or
mov
js
retf
clc
push
jp
movs
in
jae
pop
push
(bad)
xor
and
cmps
movs
push
lock
xor
mov
lds
push
sbb
sbb
jge
int3
pop
xchg
retf
inc
jns
(bad)
mov
icebp
mov
sbb
adc
fidivr
jnp
xor
repnz
pusha
add
dec
inc
dec
gs
jmp
push
jmp
inc
pop
mov
cdq
jns
ret
movs
aad
gs
dec
mov
test
jbe
or
mov
or
mov
push
push
and
push
adc
push
inc
fwait
pushf
and
test
shr
xchg
not
mov
popf
or
cdq
mov
push
bound
mov
inc
daa
lods
retf
movs
pop
jl
ror
in
loopne
outs
daa
jmp
popa
mov
fs
cmps
dec
movs
fsub
popa
sbb
pop
loope
frstor
lds
lods
fadd
xchg
fsub
cs
fidivr
loope
xchg
fnstcw
dec
xchg
xor
jg
and
adc
lock
les
call
test
out
add
mov
js
cs
into
xchg
div
fsubr
push
pop
push
xchg
arpl
test
mov
icebp
jmp
ins
pop
mov
cmp
aad
xchg
icebp
in
xchg
xchg
xchg
retf
mov
xchg
mov
into
cmp
fimul
sbb
out
cmp
mov
out
mov
dec
loop
test
imul
jg
lahf
sbb
call
dec
add
mov
xchg
mov
xchg
sti
clc
inc
dec
adc
jns
(bad)
fwait
sub
jno
mov
ins
inc
add
hlt
pop
or
loope
pop
pop
sbb
in
push
inc
(bad)
pop
cmc
mov
aaa
call
mov
or
mov
jmp
sub
mov
or
ss
or
jp
imul
cs
and
sbb
mov
jg
add
xlat
xchg
es
xchg
mov
sbb
sub
call
sbb
add
stc
inc
iret
mov
(bad)
hlt
xor
jle
cmc
push
lea
int
xor
push
sub
call
and
or
mov
mov
rcr
jp
add
in
inc
mov
inc
mov
fsub
loope
add
xor
nop
or
mov
mov
lods
jecxz
and
inc
xchg
fstp
sub
jnp
imul
mov
cdq
aaa
xor
push
push
push
adc
daa
sbb
fld
test
mov
inc
int
leave
push
add
inc
pop
call
mov
aaa
add
aaa
pop
test
in
clc
or
mov
cdq
lds
lea
(bad)
xor
xchg
inc
and
cmp
pop
ins
or
test
gs
test
inc
push
and
adc
pop
test
dec
js
sub
addps
in
mov
sbb
aam
adc
aaa
mov
ret
xchg
lahf
arpl
mov
loope
push
aas
pop
sbb
xchg
xchg
fsubr
or
mov
jbe
out
das
ds
idiv
sti
clc
mov
adc
(bad)
jmp
jle
sbb
xor
inc
sub
mov
or
cmps
pop
ja
int
out
dec
sbb
push
daa
mov
jb
pop
shl
fcom
fst
sbb
inc
xchg
add
in
js
cmp
aam
js
push
mov
or
xchg
cmps
mov
retf
xchg
loop
dec
ds
iret
sbb
rol
inc
pusha
and
xlat
mov
mov
sbb
jno
cli
mov
mov
iret
or
jbe
je
sub
sbb
fisttp
push
or
jmp
cmp
mov
mov
das
sub
mov
push
clc
or
mov
jmp
rcl
inc
call
pop
icebp
into
push
mov
xor
mul
jns
sub
mov
mov
pushf
arpl
xor
or
pop
fimul
mov
xor
int
hlt
ror
int3
cmp
jmp
xor
push
stos
xlat
and
and
push
xchg
hlt
push
stos
fmul
jnp
icebp
retf
repz
cmp
scas
call
mov
imul
jmp
pop
jbe
fistp
rcl
push
sbb
or
sbb
pop
in
push
mov
mov
jle
stc
adc
inc
aas
loop
in
dec
mov
lahf
or
add
push
cmp
aad
mov
mov
mov
add
add
pop
int3
pop
add
mov
mov
add
cmp
sbb
hlt
xlat
mov
lods
xchg
iret
sahf
or
scas
int
scas
or
push
or
inc
or
inc
int3
test
ja
pop
adc
xchg
dec
loope
mov
out
sub
mov
hlt
push
push
mov
adc
js
outs
push
fldcw
cmps
inc
xor
mov
(bad)
cmps
rcr
int
jno
cwde
in
inc
push
jg
cld
aad
clc
xchg
out
sbb
cmc
sbb
outs
scas
jge
es
repz
test
or
push
icebp
jg
aad
mov
jns
hlt
(bad)
shl
xchg
mov
cmp
and
xchg
fild
mov
dec
leave
cld
(bad)
and
ins
call
loopne
jg
sti
xchg
ret
pop
ins
mov
mov
sub
aas
into
(bad)
addr16
and
ja
cmp
mov
bound
pop
loop
sahf
dec
mov
icebp
jge
push
mov
push
std
or
bnd
mov
clc
aam
call
int
gs
(bad)
dec
out
pop
mov
cmps
imul
ds
adc
mov
adc
pop
jne
jmp
push
push
jns
(bad)
cmp
ins
sub
inc
pop
sbb
inc
xor
mov
dec
mov
fistp
lods
and
(bad)
into
imul
jnp
ss
jl
addr16
xor
xchg
inc
in
ins
aaa
adc
test
ror
daa
add
mov
pop
xchg
mov
sub
movs
mov
loopne
jmp
or
jmp
xchg
mov
or
mov
inc
adc
mov
stos
xor
sbb
push
xor
pusha
mov
xor
push
in
leave
int3
enter
arpl
nop
xchg
repz
out
jmp
sbb
inc
mov
stc
fcomp
stos
inc
stos
jp
in
push
mov
sub
push
sbb
pop
clc
xor
leave
xchg
(bad)
jge
loop
sbb
rcl
popa
data16
mov
xlat
xor
sbb
jno
xchg
jmp
ins
cld
mov
fs
(bad)
lahf
add
out
mov
test
and
loope
sahf
loope
xchg
xor
and
mov
jmp
cmp
aaa
fwait
inc
cmps
add
inc
add
and
ja
mov
xchg
in
pop
retf
inc
cmp
jae
xchg
fs
dec
inc
ins
cmc
jnp
test
sti
adc
call
das
adc
jle
shl
push
inc
jge
shl
fcmovnb
movs
xchg
mov
test
int3
add
pop
js
jb
or
or
add
push
ror
jno
(bad)
out
test
pushf
enter
repz
xchg
dec
in
dec
ins
daa
mov
xchg
jae
mov
clc
rol
push
(bad)
pushf
adc
pop
mov
bound
jnp
pop
jne
int3
sub
dec
mov
retf
imul
push
push
dec
js
inc
mov
sbb
ss
pusha
addr16
or
jmp
cmp
mov
adc
push
ss
lods
aas
hlt
pop
and
xor
sub
pop
leave
nop
stos
dec
inc
cmps
and
or
pusha
adc
aam
ret
aaa
pop
test
push
sbb
mov
push
pop
repnz
imul
cmp
mov
mul
test
int3
and
shl
push
sar
jno
leave
sbb
jmp
scas
sbb
sti
out
into
mov
or
xor
push
out
sub
add
stos
loope
mov
jmp
jno
xchg
pop
push
pop
daa
pop
neg
stos
mov
rcr
mov
or
mov
push
dec
shl
mov
pushw
in
icebp
cwde
dec
inc
dec
inc
or
gs
je
bound
add
or
xchg
idiv
cmp
and
cmp
(bad)
sub
inc
inc
out
and
stc
dec
xor
sub
dec
cmps
scas
ret
fwait
dec
aad
sti
xchg
jb
outs
adc
dec
cmp
loop
jb
push
(bad)
retf
mov
cld
popf
xchg
mov
mov
sub
(bad)
cmp
aaa
fmulp
sbb
std
ins
leave
rcr
movs
jnp
bound
xchg
jne
cs
(bad)
cmp
stos
enter
xbegin
loop
xchg
std
imul
sbb
push
jecxz
push
xchg
pop
mov
ss
out
pop
xchg
ss
cmp
in
icebp
mov
pop
das
mov
cmp
sub
lea
imul
xor
int3
jnp
push
xor
out
stos
adc
mov
dec
lahf
inc
ret
loopne
pop
scas
sub
lds
pop
sbb
icebp
retf
sbb
imul
bound
dec
xchg
and
push
jle
push
in
ja
fidivr
inc
dec
cmps
fadd
mov
in
sub
je
ja
add
xlat
sub
inc
dec
test
xchg
jno
mov
mov
mul
(bad)
(bad)
dec
shl
fistp
or
mov
mov
xor
popf
in
leave
and
jnp
movs
aad
gs
ins
adc
xor
iret
xchg
cmp
rcr
cdq
test
fdiv
pop
jge
les
bound
fimul
or
jle
in
inc
jnp
std
lods
aas
loopne
jae
fwait
(bad)
sub
fsubrp
scas
and
sub
test
cli
fisub
lods
mov
dec
js
or
imul
(bad)
hlt
ss
inc
gs
js
mov
mov
jmp
xlat
dec
mov
cmp
gs
xchg
push
jmp
mov
fs
test
mov
dec
aad
xchg
in
jp
pusha
(bad)
mov
popw
sub
jge
sub
cmps
push
ret
and
dec
rol
jmp
loop
mov
xchg
dec
cs
mov
jmp
pop
movs
les
cmp
inc
xlat
xlat
push
and
aam
arpl
je
je
sahf
cmp
push
jno
loopne
in
in
cmp
(bad)
sbb
cmp
je
push
popa
inc
mov
push
xor
pusha
out
loope
fmul
sahf
mov
mov
retf
stos
sub
inc
adc
cwde
add
xchg
pop
sub
sub
mov
adc
xor
jl
test
mov
dec
mov
unpcklps
jbe
adc
mov
push
lods
dec
jno
push
retf
sub
and
xor
mov
sahf
fmul
mov
push
add
stc
shl
je
adc
shl
cdq
push
dec
out
push
push
inc
xor
in
icebp
push
jp
mov
sahf
and
test
sub
sub
repz
mov
movs
in
mov
loope
jp
push
mov
add
sbb
out
out
or
lock
pop
mov
xchg
xor
out
xor
cmps
inc
cmc
test
movs
push
ins
mov
iret
xchg
imul
mov
iret
out
add
cmps
mov
out
xchg
mov
pop
and
pop
pop
aam
mov
and
dec
xchg
(bad)
mov
pop
call
outs
stc
add
ja
sti
and
xor
jmp
fisub
xchg
fwait
push
js
adc
call
inc
xor
push
jo
xchg
pop
fidivr
movs
aas
jge
jge
aaa
xor
loop
cli
inc
pop
jmp
mov
movs
icebp
push
mov
popf
mov
data16
lea
lods
push
cmp
scas
bound
or
lahf
test
ds
in
cwde
lock
cmp
and
pop
inc
ja
cmp
stos
sub
sub
into
lds
sbb
dec
mov
iret
pop
jle
repz
aaa
lods
hlt
mov
fs
jl
cmps
inc
jl
test
mov
inc
sbb
mov
(bad)
out
xor
lods
adc
or
pop
jno
jmp
sahf
dec
inc
cmp
fs
arpl
(bad)
cmp
sub
pop
loop
xor
(bad)
cli
add
cmc
pop
in
sub
cmc
cwde
ror
ror
mov
jle
push
(bad)
sti
fild
mov
(bad)
cmp
in
inc
sub
into
inc
push
cmp
lock
push
fist
imul
js
pop
pop
int
xor
clc
push
int3
popf
mov
retf
call
imul
(bad)
movs
in
loopne
gs
hlt
mov
jbe
data16
shl
ins
test
or
jmp
sub
xor
scas
lods
sbb
push
mov
add
pop
imul
pop
jo
dec
pop
aam
push
pop
jp
(bad)
mov
and
in
mov
and
xchg
std
add
push
call
daa
les
dec
dec
pop
loope
lds
xchg
lods
add
sub
lahf
jno
dec
data16
xlat
xchg
stos
or
and
add
cmc
out
dec
dec
or
test
cmps
cld
jns
test
sub
mov
ret
mov
dec
sbb
xor
mov
fwait
out
inc
cs
add
and
push
xor
fucompp
mov
jnp
(bad)
cmp
sub
in
sub
mov
jmp
jne
inc
ins
stos
xchg
xchg
add
callw
xchg
mov
hlt
imul
inc
call
sub
nop
inc
push
lods
xor
jle
int
pop
mov
(bad)
loopne
mov
and
inc
imul
jmp
clc
mov
sbb
or
push
bound
enter
stos
or
sub
pop
call
ins
pop
mov
cmps
pushf
and
push
xchg
popf
adc
xchg
push
adc
jnp
leave
xchg
(bad)
jmp
fist
dec
push
lea
add
xor
mov
pushw
or
sub
fild
pop
jae
lahf
fs
cdq
(bad)
mov
jnp
sti
push
enter
xchg
das
das
xor
mov
mul
cmp
retf
pop
sbb
mov
mov
retf
enter
(bad)
dec
out
jmp
div
cmp
cmc
stos
fwait
imul
jge
mov
push
pushf
inc
mov
not
push
adc
das
mov
jle
cmp
xchg
push
int
add
cld
iret
popa
or
cmp
arpl
aas
stc
sub
add
and
lahf
cmps
jp
cmp
add
cmps
scas
cmp
test
cmps
jmp
call
mov
jmp
scas
movs
call
jnp
mov
call
das
rcl
xchg
dec
std
stos
push
inc
xchg
mov
clc
dec
jmp
cmc
cmp
rol
xor
sub
adc
mov
mov
cli
not
push
sahf
sub
sbb
xor
pop
and
les
xchg
sbb
(bad)
call
cdq
push
lods
jbe
xchg
xor
xor
jle
(bad)
add
add
sbb
addr16
and
xchg
fild
int3
xchg
xchg
cli
lock
fs
pop
jp
xchg
jl
in
iret
(bad)
adc
lea
dec
push
shl
in
push
sub
lea
iret
cwde
xchg
or
xchg
je
outs
ficomp
jl
iret
inc
das
je
call
(bad)
cmc
xchg
xor
inc
ficom
push
jmp
std
jb
scas
and
lds
nop
push
jb
pusha
sbb
or
les
push
mov
das
leave
enter
rol
sbb
dec
mov
inc
shr
loopne
(bad)
push
fs
cmp
or
arpl
mov
and
sub
icebp
outs
xchg
std
rol
inc
pop
push
aas
shl
dec
sar
sub
sbb
imul
push
ss
mov
sub
dec
dec
mov
out
std
dec
pop
jo
jno
fimul
or
inc
sub
test
jae
leave
stc
dec
scas
xchg
or
std
aaa
fiadd
loopne
pushf
in
lods
icebp
push
sub
ror
mov
stos
mov
mov
sbb
adc
sbb
scas
mov
stc
xor
jns
mov
int
xor
cmp
out
jb
(bad)
sbb
in
jnp
ja
xor
into
xchg
sbb
mov
in
dec
fistp
pop
dec
test
cmps
hlt
push
repz
jmp
in
adc
pushf
push
cmp
inc
or
and
inc
dec
mov
iret
xchg
jne
pop
mov
push
dec
dec
push
std
adc
or
dec
mov
ins
inc
mov
jo
lahf
call
xchg
pusha
out
and
xor
mov
xchg
aaa
mul
or
cdq
fs
into
ret
sahf
mov
xor
xor
xchg
movs
dec
add
inc
ja
fbld
(bad)
jo
das
movs
sbb
push
jb
in
xchg
jo
push
xor
fcomp
test
add
(bad)
cdq
(bad)
fmul
sub
sub
jne
in
mov
iret
pushf
and
add
lods
push
stos
scas
sub
mov
enter
push
movs
sbb
pop
mov
push
retf
shl
loop
pop
pop
adc
cwde
cmp
repnz
popa
inc
adc
adc
out
(bad)
ror
mov
cmp
mov
cmp
test
and
jl
adc
mov
ds
mov
mov
aad
sbb
les
aas
mov
cmc
das
test
movs
mov
adc
add
jbe
nop
inc
test
outs
adc
inc
cmp
xor
movs
pushf
jmp
icebp
pushf
inc
int
xchg
mov
sar
push
xor
xor
das
lea
aam
stos
pushf
movs
hlt
pop
(bad)
das
cmps
sbb
call
shl
adc
mov
sub
mov
xor
jle
xchg
jge
repz
mov
jo
xchg
xchg
push
push
mov
(bad)
adc
pop
cmp
je
mov
mov
mov
js
loop
jo
pmuludq
call
xchg
(bad)
xchg
mov
pop
pop
and
mov
push
adc
and
ds
dec
adc
and
outs
in
shl
out
inc
(bad)
outs
dec
push
mov
xlat
leave
xlat
pop
stos
push
adc
jno
arpl
ficom
int3
cmp
add
(bad)
mov
test
dec
call
push
loop
adc
popf
(bad)
fidivr
dec
inc
jl
ror
fs
cmp
sar
pop
xor
xlat
inc
movs
mov
aas
inc
test
in
inc
pop
fisttp
jmp
cmp
jno
dec
call
dec
mov
cmps
cmp
mov
out
dec
dec
cmp
push
and
das
push
mov
in
inc
pushf
js
inc
cmp
arpl
mov
add
(bad)
shl
je
xchg
cwde
push
adc
mov
dec
fild
ret
jo
mov
xchg
rcr
aas
push
adc
jbe
mov
mov
data16
ret
fisub
adc
iret
ja
sub
adc
jae
or
lock
jae
xchg
jle
adc
sub
rcl
push
shr
add
and
inc
sbb
int3
and
inc
sbb
test
imul
push
jp
xchg
ror
and
stos
and
into
loop
retf
das
shl
pop
inc
pop
ret
sti
cmp
push
xor
addr16
jne
xchg
cmp
jns
xchg
js
mov
stc
xchg
mov
jle
pop
in
repnz
pop
add
lock
jmp
xchg
sub
iret
stos
adc
add
ins
jnp
dec
dec
cs
je
mov
jae
call
pop
push
jl
jecxz
or
or
test
or
test
test
mov
aas
bnd
leave
(bad)
jmp
mov
and
inc
cmp
pop
mov
jg
sub
repz
mov
xor
or
ja
(bad)
pop
mov
inc
jnp
test
xchg
je
and
push
add
fcom
jo
out
xor
inc
popf
push
fwait
xor
and
ins
in
fbstp
jb
push
add
shl
mov
movs
pop
mov
loop
sub
shl
out
and
jmp
xchg
(bad)
gs
stos
mov
xor
add
loopne
pop
outs
adc
push
loopne
pop
cmp
adc
cmp
retf
mov
fdivr
mov
or
xchg
sbb
push
data16
pushf
inc
(bad)
xchg
sar
test
dec
shl
imul
jecxz
retf
mov
mov
enter
in
out
add
inc
pop
push
mov
inc
scas
jo
and
sbb
rol
xor
repz
icebp
mov
test
nop
pop
mov
ins
xchg
jmp
sbb
mov
add
xor
inc
mov
loopne
and
stc
push
hlt
sub
pushf
jg
inc
ror
mov
dec
cmp
stos
jmp
sti
(bad)
sti
rcl
add
mov
xchg
pop
outs
xor
popa
fs
inc
lods
inc
jb
dec
xchg
retf
fld
push
adc
mov
mov
adc
mov
shl
xchg
test
mov
inc
stos
adc
cmp
cmc
dec
sahf
and
arpl
or
push
mov
cmc
xlat
test
(bad)
sub
inc
xchg
push
ret
pop
dec
lea
add
xor
xchg
xchg
cs
xchg
pop
movs
jecxz
cmp
in
xor
loopne
aaa
jb
add
retf
sub
sub
jge
sbb
mov
int3
pop
mov
inc
adc
lods
aad
xor
movs
sbb
push
ja
push
mov
mov
and
dec
stc
inc
stc
hlt
xlat
jae
xlat
lds
cld
dec
add
pop
mov
or
inc
loope
jg
xchg
fisttp
aam
out
xchg
in
sbb
dec
std
fcomp
lahf
push
mov
add
jg
popf
int3
and
mov
fs
je
xlat
les
pushf
mov
push
das
mov
mov
add
repz
repnz
test
mov
call
mov
loope
jne
xor
out
imul
scas
fsub
clc
fld
jne
sbb
daa
hlt
in
and
dec
inc
out
pop
jne
cmc
cmp
test
or
test
fmul
sbb
jmp
and
xor
pop
daa
push
cmp
stos
fcom
aam
mov
lods
xchg
jnp
fxch
popf
xchg
xchg
adc
or
mov
push
adc
mov
addr16
sbb
sub
add
gs
and
pop
fist
fwait
mov
in
dec
movs
or
and
add
in
ret
adc
(bad)
lock
enter
adc
sahf
cmp
shl
jmp
push
add
stos
ins
mov
ret
rcl
jecxz
push
sub
sbb
dec
nop
xchg
mov
and
mov
ret
lods
in
outs
mov
xchg
sahf
sar
in
add
cmps
pop
icebp
(bad)
push
fisttp
add
shl
mov
mov
fstp
ins
mov
out
mov
add
mov
pop
das
sbb
mov
int3
out
div
das
js
cmp
mov
and
dec
movs
clc
out
ds
and
in
rcr
mov
jae
dec
enter
retf
lods
ins
or
movs
xor
jae
inc
mov
cmp
(bad)
dec
sbb
lds
out
cmp
push
inc
and
addr16
retf
mov
jne
(bad)
int3
push
aam
(bad)
into
jnp
(bad)
adc
cmc
mov
push
sbb
jg
repnz
inc
lock
icebp
fadd
fistp
mov
push
push
cmp
adc
or
push
(bad)
mov
mov
dec
or
clc
sbb
retf
dec
xchg
aam
cld
pop
or
enter
gs
fs
dec
adc
in
ss
push
jl
test
cmp
fs
mov
mov
(bad)
popf
(bad)
push
push
pop
mov
and
adc
add
xchg
test
aad
mov
add
dec
fbld
(bad)
pop
fadd
mov
daa
push
imul
std
jo
movs
xor
adc
sar
and
loop
out
dec
ja
xor
ficom
cld
retf
(bad)
jle
xor
cld
bound
xor
jmp
or
sub
mov
add
inc
jl
mov
(bad)
dec
mov
adc
mov
dec
das
test
popf
clc
test
dec
out
xchg
xor
aam
popf
mul
lahf
pop
pop
push
outs
add
arpl
jge
imul
mov
pushf
push
add
dec
retf
lock
aad
dec
mov
sbb
addr16
add
mov
cmps
xor
jns
or
jmp
cwde
jecxz
repz
ss
xchg
loope
call
dec
(bad)
inc
dec
stos
enter
jmp
push
(bad)
sbb
hlt
pop
sbb
add
imul
ret
xchg
retf
xor
xchg
movs
or
push
mov
cld
lock
adc
push
pop
int3
xor
sbb
jb
adc
dec
xchg
cmp
int
dec
pop
sbb
mov
cli
xor
popf
jo
test
das
nop
inc
sbb
aad
lea
lods
test
push
out
and
pop
xlat
inc
jmp
std
inc
push
push
fdivr
pop
mov
lods
sbb
inc
mov
dec
(bad)
cmp
xchg
retf
adc
fmul
jmp
push
cdq
test
xlat
repnz
cmps
push
neg
xchg
mov
cmc
je
in
pop
add
xchg
sbb
pop
or
out
nop
clc
mov
out
add
mov
dec
mov
je
add
stos
mov
pop
xor
lds
add
(bad)
add
or
cld
lock
or
movs
adc
jmp
sbb
addr16
xor
ret
inc
ret
mov
push
jae
dec
mov
and
xor
or
mov
jmp
outs
call
(bad)
xor
pop
adc
lock
adc
mov
popf
xor
mov
out
add
sbb
pop
xor
adc
lods
mov
adc
mov
cdq
xchg
push
inc
jmp
dec
xchg
stc
push
pop
jmp
sbb
test
fs
mov
leave
hlt
sbb
pop
cli
mov
imul
jb
(bad)
xchg
pop
dec
aas
xor
sti
pop
test
shl
addr16
xor
pop
aas
dec
pop
in
in
icebp
pusha
mov
js
div
and
push
outs
push
add
xchg
xchg
add
add
inc
int3
xor
pop
out
repz
cmps
push
inc
movs
les
xchg
inc
in
fisubr
mov
or
aas
aas
dec
push
popa
mov
xchg
retf
fcomp
mov
mov
icebp
loopne
fisubr
dec
push
add
pop
ret
sub
pop
test
inc
jmp
mov
dec
push
cwde
loop
test
cmps
das
in
mov
xor
in
sub
dec
fldcw
fisubr
cs
pusha
daa
mov
or
cmc
xor
sbb
push
sub
pop
test
sub
pop
or
movs
mov
sar
or
pop
pop
mov
sbb
cld
cmp
cmp
bound
adc
push
lahf
mov
test
cmp
add
outs
mov
push
ins
pop
xchg
clc
sbb
outs
stos
jecxz
sbb
pop
je
xchg
add
sub
add
push
popa
fdivr
add
movs
rol
add
mov
in
xor
lock
out
fdivr
out
ret
xor
xlat
adc
sbb
repz
hlt
cmp
xor
or
sub
hlt
pop
out
sub
in
dec
sbb
jbe
mov
inc
int3
push
enter
jmp
mov
dec
xchg
pop
adc
mov
cmp
or
data16
mov
xchg
movntps
cmp
push
mov
or
pushf
push
xor
mov
sbb
gs
sbb
test
jno
aas
xchg
jbe
fnstsw
pop
dec
or
or
mov
jg
push
or
cmps
push
mov
inc
test
cmp
pop
mov
dec
rol
sbb
inc
repnz
outs
popf
in
call
sbb
cdq
(bad)
out
inc
test
(bad)
frstor
mov
fisub
icebp
fcmovbe
ficom
pop
ins
cwde
sbb
jl
fcomp
sbb
out
cmp
xchg
jbe
in
and
mov
repz
adc
add
ja
xor
xchg
add
out
js
sti
retf
stos
sbb
fild
sub
sub
into
and
fst
or
scas
shl
fwait
addr16
mov
push
lods
outs
test
inc
xor
push
add
mov
addr16
jge
test
push
jecxz
es
sbb
add
call
or
add
mov
cmp
inc
call
adc
bound
aad
fdiv
stos
fsubr
in
je
test
xor
shl
les
fs
adc
mov
fnstsw
mov
in
shr
and
ror
test
pop
sar
mov
inc
arpl
mov
xchg
pop
loop
mov
fnstcw
popa
(bad)
clc
jecxz
sbb
inc
mov
xchg
sub
(bad)
and
pop
cmp
scas
cmp
pop
jmp
fucomp
rcl
push
lea
jg
rol
xlat
and
sub
retf
shl
jmp
arpl
daa
aas
inc
psrlw
fdivr
and
inc
sub
fwait
clc
stc
pushf
jns
push
das
outs
mov
fidiv
dec
into
(bad)
ins
xchg
push
in
xchg
pop
(bad)
add
out
mov
leave
rol
leave
or
dec
push
push
dec
push
cmp
jl
and
dec
sahf
sbb
clc
pop
jle
xor
adc
sub
cdq
pop
daa
scas
xor
push
add
xor
loop
into
pop
test
std
shr
mov
jl
gs
stos
push
dec
add
or
inc
mov
lds
sti
arpl
xor
or
sub
(bad)
mov
sbb
frstor
ins
mov
xchg
mov
cld
not
pop
aaa
pop
call
dec
mov
lods
mov
jl
jecxz
jmp
push
out
jg
push
pusha
sub
sbb
fmul
popa
sar
pop
push
push
stc
ror
add
(bad)
push
aam
xor
in
dec
pop
ins
out
mov
(bad)
movs
xlat
sbb
lea
mov
daa
add
mov
jg
mov
mov
dec
cmc
mov
inc
sub
mov
cmp
lods
retf
std
mov
adc
cmps
unpckhps
dec
(bad)
jp
test
fs
cmps
adc
stos
push
or
adc
fist
dec
mov
jns
mov
popf
sbb
mov
cmp
int3
inc
call
pusha
fcmovu
retf
(bad)
and
stc
das
lea
popf
mov
sbb
xchg
add
add
mov
jmp
in
pop
push
out
xor
retf
add
mov
push
push
fild
cmp
xor
(bad)
pop
into
or
outs
push
cdq
push
mov
(bad)
jno
push
cmp
mov
adc
sahf
pushf
int
test
inc
pushf
call
int3
mov
cdq
add
jne
and
mov
mov
or
pop
sbb
sbb
cmps
ret
mov
loop
xchg
sub
xchg
pop
icebp
gs
es
mov
jg
nop
xlat
mov
adc
jl
sbb
and
out
shl
fadd
movs
pop
stos
mov
xchg
xlat
fmul
iret
adc
mov
arpl
cmc
(bad)
xchg
iret
int
xchg
mov
popa
push
pop
movs
shl
fdiv
out
sub
mov
bound
inc
sbb
jmp
and
xchg
xchg
les
and
inc
stos
jns
fbld
ins
lods
cwde
pop
push
jo
loopne
movs
mov
adc
inc
out
(bad)
neg
mov
jmp
popf
or
out
packssdw
pusha
mov
or
das
shl
jno
xchg
cmp
mov
and
pop
stos
mov
ins
cwde
or
and
xchg
leave
nop
shr
jge
rol
xchg
sbb
pop
repnz
out
inc
pop
cmp
loopne
ss
mov
lock
push
shr
cmps
mov
or
fs
xchg
sbb
and
sub
xor
in
(bad)
add
gs
inc
jle
cmp
xchg
in
pushf
hlt
jl
dec
and
imul
aam
dec
je
sbb
inc
mov
mov
and
mov
fistp
mov
lods
cmp
clc
jne
and
add
cmp
add
fnstenv
int
fxtract
loopne
xchg
shl
cld
pusha
xor
xor
add
adc
jmp
gs
sub
std
push
into
cdq
jmp
xor
popa
or
stc
ja
jl
jno
xchg
push
ret
mov
js
retf
sub
jp
mov
push
dec
call
adc
jmp
push
leave
xlat
adc
push
pop
scas
xchg
mov
cld
jo
push
out
std
mov
je
or
inc
or
aaa
bound
add
pop
outs
fld
xchg
or
pop
jg
or
sbb
mov
fsubr
pop
call
mov
jmp
xchg
mov
and
nop
add
xchg
inc
je
jbe
fsubr
out
inc
jns
push
loope
mov
lds
dec
jle
mov
sub
mov
xchg
jns
cmp
inc
mov
fstp
add
fimul
cmp
dec
push
mov
(bad)
test
mov
fstp
fwait
adc
lods
or
mov
in
call
jns
push
test
and
hlt
adc
js
adc
sbb
add
cmc
push
sub
xchg
into
dec
mov
retf
sub
cld
xor
aam
and
push
ja
xchg
or
push
mov
jbe
mov
rol
ret
pop
push
and
iret
loopne
and
mov
stc
aad
fisubr
pop
and
rol
inc
fdiv
test
ror
pop
or
xor
dec
add
xor
cmp
jmp
mov
mov
mov
addr16
pop
or
push
mov
stos
xchg
push
cmp
popa
mov
jmp
int3
xlat
ins
dec
(bad)
cdq
sub
and
dec
or
aas
sub
push
jp
into
mov
xchg
sub
cmps
cld
push
mov
push
and
(bad)
leave
das
xor
in
and
fst
imul
inc
aad
xchg
pusha
cmp
data16
outs
push
push
pop
or
enter
adc
jmp
inc
in
jecxz
xlat
es
popa
ret
adc
dec
fsub
jmp
add
dec
or
cld
and
pop
sbb
xchg
je
xor
out
push
pop
dec
sbb
mov
xor
(bad)
aaa
cmp
ror
mov
push
dec
xlat
xchg
popa
jp
dec
ret
xchg
pop
sbb
rcr
iret
push
cmps
mov
and
or
fist
shl
sub
or
mov
mov
bnd
jns
jnp
imul
sub
jmp
imul
sahf
sbb
out
in
jp
fbstp
jecxz
out
lahf
inc
fidivr
jg
xchg
lds
and
lods
and
cmp
and
sti
cwde
inc
push
daa
jge
add
fdivr
add
clc
jo
jae
out
loop
data16
in
inc
adc
push
push
add
sub
mov
mov
ret
pushf
daa
lock
lock
and
dec
push
js
(bad)
rcl
add
dec
sub
ror
adc
aas
ins
pop
jne
inc
cmp
pop
mov
hlt
pop
fstp
cmp
(bad)
sub
test
mov
je
adc
push
mov
or
mul
nop
ror
retf
sub
jne
out
mov
fs
xchg
push
sub
cmp
sub
fpatan
(bad)
popf
jae
lahf
xor
xlat
push
test
hlt
retf
inc
movs
aaa
ins
retf
je
sub
push
mov
scas
pushf
inc
fldenv
in
cli
mov
sub
cdq
jmp
out
daa
jge
int
and
pop
retf
mov
xchg
fisub
jbe
stc
add
mov
(bad)
icebp
add
mov
jb
outs
mov
push
cwde
mov
data16
xchg
pop
push
scas
cmp
sub
frndint
xchg
scas
enter
add
cmp
xchg
rol
popf
mov
fcmovb
lods
clc
loop
fs
pushf
ins
push
sub
jmp
pextrw
arpl
jmp
(bad)
xchg
stc
push
xor
mov
jge
(bad)
or
out
rcl
repnz
(bad)
jmp
xor
std
push
and
test
ds
and
rol
xor
dec
and
xor
sub
mov
or
mov
ins
aaa
ret
push
dec
dec
mov
mov
dec
xor
sub
add
mov
out
cmp
add
and
dec
or
lock
adc
or
push
out
mov
int3
jo
pop
adc
inc
add
fs
call
mov
gs
dec
(bad)
push
pop
jl
pop
adc
sub
fst
cmp
mov
rcr
ins
in
or
int
cmp
mov
add
gs
call
mov
pop
in
dec
mov
in
mov
aaa
div
add
and
enter
dec
neg
xor
sub
dec
loopne
ss
sbb
retf
jecxz
fucomi
das
push
repz
aad
xchg
mov
xor
inc
cmps
fldcw
fwait
out
mov
ret
mov
dec
or
dec
popf
mov
es
xchg
pusha
cmp
ins
stc
push
xor
call
or
push
mov
or
fidiv
popf
rol
mov
mov
sub
cs
and
mov
test
jo
gs
mov
es
or
inc
jns
adc
jne
nop
ins
arpl
jg
xlat
or
sub
cmp
rcl
rol
push
jge
shl
repnz
bound
nop
inc
adc
stos
inc
aas
add
inc
aam
div
test
fs
mov
jmp
loop
mov
sub
fsubr
pop
inc
push
mul
pop
cmp
aad
rol
xchg
mov
cmp
rcl
pop
or
inc
out
sub
sub
mov
mov
je
mov
lea
jmp
push
je
clc
inc
iret
jns
popf
push
xor
sti
push
jg
cmp
shl
inc
jns
mov
inc
loope
push
daa
jg
mov
loope
jmp
adc
pop
inc
xchg
pop
inc
sbb
daa
pusha
test
mov
(bad)
pop
cmp
movs
(bad)
fcmove
es
pushf
lods
cdq
into
data16
mov
push
in
jecxz
pop
retf
jb
push
pop
cmp
or
imul
mov
jns
stos
xchg
push
mov
mov
(bad)
into
retf
dec
push
mov
jmp
cmp
jno
inc
dec
pusha
ss
xor
stc
nop
test
push
(bad)
test
inc
int3
cmp
movs
rol
adc
(bad)
sbb
dec
aam
retf
popf
hlt
lock
and
aad
sub
mov
cmp
movs
inc
xor
pop
imul
div
imul
mov
mov
in
daa
shl
scas
dec
dec
das
or
fild
mov
push
ins
xlat
jmp
dec
cmp
jecxz
inc
dec
pop
outs
inc
(bad)
fmul
stos
mov
pop
pop
jg
cwde
mov
addr16
adc
mov
(bad)
scas
push
bswap
call
cmp
mov
mov
sbb
adc
mov
mov
push
gs
outs
retf
retf
bound
jnp
sbb
retf
add
jl
pusha
pop
adc
mov
jnp
cwde
out
mov
xchg
or
int
or
push
mov
mov
cmp
ret
cmp
fldl2t
inc
inc
and
push
dec
pop
push
xchg
fldcw
jb
sar
pop
mov
pop
retf
mov
mov
dec
out
loop
push
imul
aam
mov
icebp
int3
loope
xchg
out
mov
icebp
push
mov
mov
out
and
inc
cmp
shl
or
in
or
icebp
jmp
call
inc
loopne
imul
retf
sub
jge
or
std
cmp
popa
inc
loop
xchg
shl
loop
into
push
ss
sbb
repnz
jne
jmp
fmul
outs
hlt
shl
or
push
imul
pop
sub
cmp
pushf
leave
add
and
xchg
dec
addr16
jmp
ret
scas
cld
adc
scas
mov
enter
mov
ja
rcl
test
retf
sub
nop
push
pop
inc
sub
mov
jle
xchg
mov
mov
call
movs
pop
dec
(bad)
in
mov
stc
sub
inc
mov
mov
rcr
data16
jg
dec
vpshld
add
test
sar
cmp
inc
js
mov
mov
inc
popf
daa
sbb
sub
pop
sub
xlat
and
sbb
movs
and
cmp
sub
adc
cmps
(bad)
mov
add
pop
enter
sub
in
inc
add
cmp
pop
sbb
in
mov
sahf
cdq
xor
cwde
les
retf
cmp
int3
loopne
inc
scas
daa
mov
(bad)
mov
out
xor
sbb
mov
inc
shl
es
mov
xchg
pop
jnp
leave
imul
add
pop
cmp
inc
inc
cdq
mov
imul
mov
xchg
pop
mov
popf
icebp
push
add
mov
fisubr
daa
in
dec
adc
mov
in
lock
in
pusha
mov
(bad)
mov
pop
jae
imul
xchg
sbb
(bad)
daa
out
sbb
jl
and
sbb
jae
cmps
leave
pop
repnz
fld
fild
das
fs
pushf
adc
cmp
movs
repz
cmps
sbb
push
dec
jo
xchg
loopne
js
repz
adc
es
stc
popa
cmc
ja
and
add
inc
push
dec
clc
sar
and
dec
jae
test
push
rol
or
imul
add
sti
lds
sahf
sub
js
add
push
jmp
mov
lods
mov
rcl
push
jnp
sbb
lods
add
repnz
stc
jecxz
int3
int3
or
jno
dec
stos
pop
mov
add
movs
cmp
int
in
mov
fldenv
push
xchg
xor
cmp
sub
xor
cmp
rol
and
std
mov
mov
(bad)
pusha
ins
(bad)
cmp
or
jmp
pop
js
jns
pop
mov
lea
add
xchg
adc
into
mov
adc
out
iret
(bad)
sub
add
inc
test
ins
push
push
or
shl
shl
daa
(bad)
jl
xor
sub
int3
rcl
mov
pop
inc
or
push
cmps
mov
imul
pop
mov
je
inc
xor
add
and
pop
cmps
or
push
ret
retf
lds
ret
mov
and
mov
(bad)
out
adc
fcomp
loop
mov
sub
(bad)
(bad)
or
push
sub
les
jb
in
jmp
pusha
dec
add
iret
dec
enter
cmp
ss
out
fbld
(bad)
fdiv
aas
fisubr
pop
inc
ins
dec
fwait
jno
jmp
les
adc
or
outs
add
push
xchg
test
sub
daa
push
sbb
fistp
push
(bad)
retf
or
pop
mov
(bad)
scas
sub
adc
dec
fisub
cli
or
push
xchg
fucom
adc
ret
or
arpl
xchg
push
xchg
mov
add
jbe
jo
repz
dec
inc
jmp
es
sbb
xor
aaa
retf
ins
mov
loopne
or
cmc
in
mov
es
sub
sbb
jns
or
iret
cs
aas
pop
jno
xor
inc
hlt
das
clc
ins
retf
adc
in
cs
lock
and
sub
xor
stos
aam
sbb
jns
sbb
mov
pop
popa
push
jge
(bad)
repz
retf
and
sub
jne
loopne
das
imul
mov
mov
cmp
test
sbb
or
icebp
xchg
jnp
jecxz
inc
dec
sub
loope
add
inc
sar
sbb
into
inc
sbb
lods
or
sti
or
jecxz
cmp
pop
mov
clc
pop
cmp
test
push
mov
sti
leave
jnp
adc
push
cmp
jecxz
jg
(bad)
hlt
or
dec
int
push
in
xchg
push
push
imul
dec
fwait
imul
mov
ficom
movs
imul
in
sti
test
push
pop
inc
push
cdq
cmp
(bad)
dec
fcomp
add
lods
ror
xchg
(bad)
std
dec
pop
xor
je
scas
pop
out
scas
cs
(bad)
cmp
pop
fst
movs
jle
sbb
sbb
lahf
data16
outs
xchg
(bad)
stos
or
pusha
sbb
push
fcomp
pop
dec
pop
sub
popa
jne
(bad)
outs
ds
mov
std
cmp
aaa
clc
mov
call
(bad)
in
cmps
je
mov
popa
into
ins
and
ja
and
mov
lods
stos
pop
inc
xor
(bad)
jmp
fsub
(bad)
cmc
jb
cmp
or
add
sub
push
dec
movs
popf
loope
bound
add
outs
push
inc
add
les
cmp
(bad)
sbb
je
fist
pop
xchg
xchg
mov
popa
jmp
mov
aas
rol
jmp
mov
jp
jo
or
ret
push
add
ds
ins
xchg
push
sub
adc
test
into
pop
inc
sbb
push
and
and
mov
xchg
cwde
push
inc
ins
aad
inc
stos
pop
mov
adc
push
enter
jl
jne
dec
iret
sub
stos
sbb
push
test
push
cmp
pop
retf
push
dec
push
sbb
imul
ins
fwait
rcr
mov
outs
jg
out
mov
adc
pop
pop
and
aas
rcl
mov
xchg
mov
(bad)
cli
sti
(bad)
mov
push
popa
(bad)
scas
dec
xor
add
(bad)
sti
imul
outs
xchg
push
mov
adc
adc
xchg
mov
sar
mov
jg
and
xor
int3
pusha
jns
in
popa
jbe
pop
pop
pop
(bad)
xchg
mov
inc
xchg
add
data16
xchg
mov
cld
inc
pop
mov
retf
inc
cmp
jae
or
adc
ror
fdivr
in
test
jg
cmp
cld
mov
in
arpl
mov
ds
js
jle
ds
mov
ror
shl
jl
inc
inc
scas
daa
ins
mov
shl
inc
inc
push
sar
mov
mov
ror
stos
sbb
outs
mov
daa
sbb
std
scas
jmp
stos
cs
stos
imul
xchg
fwait
mov
aas
bound
inc
ja
test
mov
cmp
and
xor
mov
aad
adc
repz
dec
mov
out
sbb
add
add
inc
push
mov
out
adc
mov
popa
push
sub
push
cmp
push
pop
cli
push
mov
adc
aas
jmp
(bad)
cmp
xchg
add
neg
(bad)
sbb
fistp
aas
mov
clc
add
sti
or
mov
add
and
push
xchg
jp
loope
fst
xor
or
inc
loop
pop
lea
sub
lea
lods
cld
sti
stos
into
push
dec
out
rcr
and
movs
jmp
xlat
sub
xor
or
fiadd
adc
and
lds
fwait
into
push
std
and
jecxz
fcom
hlt
stc
scas
fnstenv
dec
test
std
scas
or
mov
call
outs
or
cli
push
pop
popa
push
jb
mov
sar
cmp
(bad)
fdiv
pop
adc
add
(bad)
push
iret
sti
xchg
push
out
sbb
mov
mov
inc
or
out
mov
add
es
aaa
imul
ror
add
mov
aas
jae
sub
mov
aam
in
xor
idiv
push
mov
pop
dec
push
ror
xchg
shr
and
sub
jns
iret
add
retf
rcl
sti
into
dec
sahf
out
xor
fwait
es
dec
loop
nop
xchg
jne
push
nop
xlat
jo
ret
enter
mov
sbb
inc
call
adc
(bad)
jl
scas
pop
test
test
mul
sub
test
cmp
pop
nop
cld
cmp
rol
int3
loop
mov
aad
jl
inc
mov
pop
(bad)
cmp
fdiv
jmp
xchg
xchg
dec
or
test
hlt
push
cmp
cmp
mov
and
stos
dec
aad
nop
add
adc
or
dec
out
pop
popf
cmp
sub
mov
inc
lods
ret
adc
mov
in
mov
xchg
push
clc
test
xor
push
ds
lahf
cmp
push
call
xor
mov
adc
call
sub
cmp
outs
repz
mov
sbb
lds
or
xor
inc
xor
cmp
das
mov
outs
into
pop
int3
arpl
sti
mov
add
and
pop
xlat
sbb
fcmovbe
mov
dec
(bad)
mov
adc
add
xor
popf
jno
and
imul
stos
jns
out
aas
outs
or
movs
push
cs
loop
cmc
(bad)
iret
dec
mov
fidiv
add
shr
inc
ja
hlt
xor
ins
sub
cli
sti
sti
cmp
mov
add
and
fnstcw
mov
push
mov
mov
outs
rcr
test
jmp
mov
or
in
push
sub
daa
sbb
pop
sub
mov
push
jecxz
test
xor
hlt
call
xchg
or
mov
clc
cwde
aad
fdivr
mov
neg
sahf
mov
dec
dec
loope
xor
test
mov
popf
popa
add
push
ret
push
fild
mov
jp
ss
sub
pop
stc
aas
jmp
adc
xchg
jecxz
fs
imul
push
clc
into
not
pop
pop
mov
jbe
test
pop
fiadd
fistp
pop
pusha
cmp
ja
loop
ins
into
push
adc
nop
mov
popf
arpl
mov
aas
je
pop
clc
adc
sbb
sti
(bad)
jne
adc
mov
mov
mov
in
aad
adc
or
xchg
gs
sub
xchg
cmp
add
push
bound
and
and
jl
jmp
adc
daa
cs
loop
mov
cmp
test
lahf
and
in
xor
repnz
xchg
mov
mov
mov
aad
dec
into
push
call
adc
xor
rcr
or
add
xlat
mov
(bad)
popf
push
cmp
enter
and
cld
sbb
jne
rcl
add
push
hlt
nop
shr
sar
das
adc
nop
add
bound
scas
mov
jmp
or
aam
ret
or
pop
loope
test
test
or
dec
fst
add
fst
arpl
mov
stos
cmps
mov
daa
aad
and
jle
xor
jae
pop
jle
jle
ins
jmp
popf
push
jmp
stos
inc
add
out
mov
into
xor
es
sahf
sub
or
cmps
(bad)
fs
adc
movs
int3
pop
pop
cwde
(bad)
ret
dec
xchg
cmp
mov
jmp
pop
mov
scas
mov
and
cmp
cwde
pop
mov
xchg
push
dec
es
mov
scas
outs
call
lods
jecxz
in
sub
sbb
pop
idiv
jmp
aas
fcomi
inc
stos
pop
inc
stos
or
popa
jns
mov
push
sbb
jl
sub
and
add
mov
adc
repnz
or
ror
fs
jecxz
aas
xor
addr16
scas
stos
das
sbb
out
bound
lea
movs
lds
cmc
sbb
bound
(bad)
in
outs
icebp
stos
xchg
mov
or
mov
pop
jge
stos
sti
mov
xchg
xor
ins
fwait
repz
movs
jns
xchg
or
push
mov
out
and
sub
sar
or
xlat
dec
pop
xor
loopne
mov
mov
sub
imul
in
sub
test
not
sub
fstp
sub
retf
in
dec
(bad)
xchg
push
mov
xchg
dec
int3
in
push
adc
push
jp
push
lds
pop
leave
daa
outs
jecxz
add
cli
and
jno
sub
jecxz
jns
lahf
and
dec
cmps
mov
inc
aad
or
in
and
clc
(bad)
stos
fdivr
pusha
dec
xor
mov
pop
cwde
sub
mov
push
stos
xlat
ret
cmps
push
pop
inc
loope
adc
mov
jbe
sar
mov
xchg
test
adc
and
mov
jmp
xchg
arpl
out
out
push
std
xchg
lods
es
jo
mov
add
fcom
or
retf
push
aaa
mov
add
jbe
xor
lods
imul
dec
add
inc
pop
xchg
xor
fxsave
outs
gs
hlt
repnz
cdq
pop
or
lods
pop
adc
jmp
outs
je
lds
retf
test
mov
jnp
aas
loope
call
loop
ins
xchg
sbb
int3
retf
dec
xchg
in
stos
mov
arpl
sahf
push
(bad)
(bad)
mov
jo
inc
xchg
mov
mov
xchg
fisttp
pop
mov
in
lock
dec
shl
add
das
mov
sub
inc
es
popa
sbb
inc
out
in
push
loop
cmp
add
jns
push
repnz
sub
pop
pop
jae
sbb
and
add
jp
lock
imul
sbb
cmp
pop
scas
mov
push
mov
pop
ret
leave
mov
xchg
jbe
scas
inc
mov
mov
push
enter
add
push
jecxz
and
adc
dec
out
sbb
(bad)
cmps
mov
push
add
mov
jae
dec
movs
aas
(bad)
mov
dec
push
(bad)
fiadd
mov
int3
adc
int3
jg
mov
jmp
mov
mov
push
lods
dec
imul
pop
and
rcr
movs
add
arpl
sbb
inc
fdivr
sbb
push
jecxz
into
ds
retf
adc
fmul
inc
int3
jle
mov
xchg
stos
imul
(bad)
call
or
sub
sbb
dec
not
nop
mov
jno
pop
mov
pop
imul
pop
cmps
sub
test
sub
cmp
xor
push
cmc
fnsave
inc
mov
lahf
loop
jp
xchg
ret
cdq
gs
xor
popf
mov
lahf
dec
es
mov
pushf
mov
shl
repz
mov
(bad)
jge
es
mov
gs
xor
push
test
div
je
jno
dec
cmp
cmps
mov
les
lods
cmps
cli
push
scas
adc
push
inc
mov
mov
xchg
jecxz
imul
in
add
xchg
xchg
fisttp
jl
popa
or
icebp
sub
push
or
outs
test
add
add
jbe
inc
aas
mov
jmp
push
push
adc
lods
and
inc
mov
pop
cli
dec
xor
std
jo
add
mov
arpl
cmp
rcl
bound
pushf
clc
test
mov
shl
out
cmps
pop
pop
sbb
test
popf
push
fwait
lods
je
mov
daa
and
push
(bad)
cmp
enter
cmc
push
shl
inc
mov
xor
add
pop
bound
repz
xchg
adc
lea
es
add
inc
xchg
arpl
stos
clc
push
pop
aad
popaw
lds
(bad)
push
mov
pop
mov
push
mov
pop
sar
or
xchg
or
fimul
outs
fldenv
mov
ins
test
push
sub
cmp
pusha
bnd
xor
xchg
or
outs
leave
xchg
(bad)
sub
imul
jns
and
or
xchg
int
mov
xchg
and
lods
(bad)
(bad)
ins
shl
jae
mov
outs
mov
push
jae
xchg
mov
aaa
or
xor
dec
cmps
gs
jg
inc
mov
das
push
and
or
out
cmps
sbb
out
xor
out
xchg
xor
or
or
pusha
xchg
(bad)
out
shr
xchg
sub
mov
into
push
mov
add
lds
fild
jg
mov
sti
xchg
cmc
sub
test
dec
inc
gs
ret
xchg
retf
(bad)
mov
add
adc
cmps
xor
scas
jno
(bad)
stc
inc
pop
jmp
js
not
jp
mov
mov
mov
sub
sbb
dec
mov
and
mov
push
lods
mov
fidivr
pop
pop
daa
stc
mov
add
push
jns
out
jg
pop
mov
jb
sub
xlat
mov
stc
sbb
push
xor
aaa
cmps
mov
xchg
outs
sbb
sbb
out
dec
bound
inc
jmp
dec
popa
dec
jmp
enter
dec
out
outs
repnz
pop
pop
scas
jbe
cmp
out
call
sbb
xor
adc
ss
inc
inc
arpl
and
xlat
mov
mov
push
sbb
adc
aam
xchg
mov
das
sahf
sub
adc
int
leave
pop
cld
inc
and
hlt
xor
mov
bound
lfs
call
inc
daa
jge
sbb
daa
push
add
mov
loopne
xlat
aam
imul
mov
bound
popf
cwde
inc
adc
(bad)
dec
scas
ret
cmp
adc
inc
es
pop
adc
pop
ds
shl
pop
movs
pop
(bad)
repz
out
and
mov
xlat
jne
inc
jmp
pushf
adc
ret
mov
adc
(bad)
cmp
jno
pusha
(bad)
aam
sub
out
test
les
inc
dec
sbb
aas
ret
pop
jg
shl
pop
mov
cmp
inc
xor
cmc
nop
aaa
mov
loopne
inc
pop
test
adc
lock
adc
and
ficom
mov
test
xchg
jecxz
sbb
dec
inc
movs
in
rcl
out
cmp
pop
cld
scas
mov
jp
cwde
in
nop
xor
fisubr
mov
or
(bad)
push
mov
jmp
out
test
and
adc
out
mov
jle
dec
rcl
xchg
and
cmp
mov
test
jne
inc
mov
cmp
aas
and
js
dec
outs
mov
cdq
jno
jp
jnp
dec
dec
das
mov
and
push
jl
inc
jbe
dec
jp
or
add
xor
iret
or
mov
cdq
out
stos
out
iret
mov
inc
pop
pop
inc
jg
xor
xor
pop
push
pop
cwde
call
je
jmp
and
test
push
scas
jmp
scas
or
or
sbb
xor
repz
and
in
dec
(bad)
hlt
add
addr16
jo
call
adc
cmp
pushf
cmp
ins
fisubr
add
in
cwde
push
cmp
(bad)
jmp
aad
clc
lods
(bad)
jb
fstp
fld
mov
mov
jne
or
cmp
call
xchg
ss
fidivr
mov
jmp
retf
out
xlat
es
mov
aaa
xor
(bad)
sbb
imul
out
or
scas
mov
test
test
cmp
fsubrp
sbb
add
fld
test
icebp
sub
jno
jbe
lds
push
lods
push
test
mov
mov
enter
mov
jp
fadd
inc
jp
mov
mov
jg
lods
and
outs
and
jle
adc
dec
(bad)
es
lods
idiv
fwait
enter
mul
(bad)
mov
pop
mov
adc
and
jecxz
mov
int3
stc
push
fs
fbstp
aad
rcl
inc
push
bound
lock
mov
enter
pop
dec
js
sub
inc
and
pop
ins
lods
fcom
mov
push
cwde
icebp
pop
jp
daa
iret
jo
cld
sbb
pop
pop
imul
fisttp
or
pop
sub
test
cmp
call
cld
adc
int
div
(bad)
pusha
push
sub
ror
sub
dec
sbb
jg
jb
jmp
jo
or
js
movs
inc
push
push
push
xchg
in
lock
cwde
bound
lahf
xor
sub
mov
xchg
pop
test
sub
in
and
mov
adc
add
mov
js
xchg
sub
(bad)
inc
fwait
mov
icebp
xacquire
call
xchg
add
add
cs
push
mov
cli
jae
xchg
pusha
repnz
cmp
add
in
outs
mov
cdq
mov
mov
pusha
cli
cmps
loop
add
mov
shr
sub
mov
test
nop
push
mov
sub
xor
lds
loope
jmp
pusha
in
inc
push
cmps
xor
xchg
js
adc
iret
push
sub
and
int
pop
jns
outs
hlt
clc
and
push
shl
jo
popf
dec
test
cmps
fwait
jmp
jno
aad
imul
xor
popf
popa
jle
pop
int
rol
mov
push
sbb
xchg
cmp
inc
sbb
movs
jne
adc
mov
pop
or
cmp
imul
pop
xlat
xor
xor
pop
lock
les
dec
pop
fimul
xor
fisttp
mov
mov
add
and
cmps
cdq
jmp
pop
data16
dec
add
mov
sar
xor
xchg
pushf
mov
push
ret
fisttp
dec
repnz
mov
loopne
adc
xor
fs
gs
out
outs
mov
mov
loope
sahf
mov
add
(bad)
mov
out
jp
or
imul
not
in
add
pop
(bad)
mov
sbb
pusha
push
pop
mov
pop
sti
jnp
ret
std
dec
add
push
mov
push
and
(bad)
push
and
ja
scas
xor
pop
mov
rol
and
and
xchg
jns
mov
es
fcomp
adc
pop
out
clc
scas
pop
jae
icebp
sub
xor
mov
push
sub
sub
sub
das
xchg
adc
jmp
les
gs
or
mov
(bad)
xchg
(bad)
adc
push
mov
dec
xchg
outs
stos
fisub
xchg
imul
fldenv
sbb
shl
scas
outs
pop
jle
pop
push
test
push
jmp
mov
(bad)
in
es
push
in
pop
xor
push
and
retf
cmps
and
jno
xor
int
fwait
hlt
push
mov
jle
pop
sbb
retf
fwait
mov
xchg
daa
jl
lea
hlt
stc
and
pusha
(bad)
in
dec
xchg
loope
in
dec
or
sub
icebp
retf
movs
sbb
pop
je
push
int
ins
pushw
sar
sbb
push
int3
xor
retf
in
gs
adc
or
shl
push
clc
outs
or
out
mov
popa
ds
pop
rol
lock
jmp
lods
push
push
iret
lock
sbb
popa
scas
retf
jge
cmp
or
dec
push
pop
repnz
mov
sub
xor
inc
adc
fistp
pop
lds
rol
lock
(bad)
repz
xlat
dec
outs
or
cdq
shr
(bad)
aad
(bad)
mov
shl
pop
fcmovnb
jmp
int
jmp
outs
jnp
aaa
xchg
jl
aad
out
(bad)
idiv
cmc
int3
into
xchg
fs
pop
cs
xchg
mov
cdq
jg
std
fidiv
cli
pop
inc
jns
push
mov
and
jnp
(bad)
jg
xchg
ins
das
dec
je
xor
xchg
jmp
addr16
ja
fld
inc
into
mov
cmp
pop
and
cmps
sbb
mov
cmp
dec
mov
clc
(bad)
hlt
arpl
pop
scas
mov
mov
mov
icebp
mov
out
inc
fistp
scas
rcl
xchg
adc
js
and
std
js
cdq
ss
rol
push
fild
jmp
int3
pop
fidivr
mov
jbe
mov
lods
repz
mov
sbb
sahf
and
neg
jg
sub
cmp
call
mov
jle
or
ficom
adc
adc
pop
xchg
adc
xor
gs
inc
fidiv
jne
not
retf
daa
movs
bnd
ins
ins
movs
or
adc
retf
or
std
mov
sub
iret
out
int
popf
scas
xor
and
or
repnz
mov
gs
(bad)
adc
test
mov
jo
outs
popa
dec
fcmovu
add
shl
inc
xchg
jo
jae
cs
xchg
adc
xchg
or
sti
out
xor
jno
and
ss
rcr
test
sbb
out
jbe
daa
cli
add
cld
je
imul
repz
or
adc
inc
lods
les
add
mov
xor
inc
or
jle
cmp
mov
aam
sahf
xchg
(bad)
cmp
(bad)
out
scas
cmp
inc
xor
push
cmps
pop
lods
pop
sbb
xor
stos
inc
xor
ins
retf
xchg
call
mov
in
loope
inc
jl
pop
enter
jns
repnz
mov
cmp
addr16
ror
and
inc
or
inc
inc
push
cmps
in
pop
lea
adc
mov
xor
push
xor
jle
sti
sti
std
sub
enter
or
push
and
jae
add
mov
jo
sub
loopne
pop
loop
inc
push
xor
push
sub
data16
xor
mov
xchg
fcmovnbe
lahf
adc
and
fadd
addr16
add
sbb
ror
scas
or
mov
cs
xor
aad
int
leavew
jge
add
cmp
dec
aam
push
mov
fimul
dec
xchg
pushw
sbb
xchg
aaa
rcr
mov
pusha
inc
test
neg
and
jae
stos
xchg
cwde
sbb
xchg
in
aas
in
and
dec
enter
sub
inc
(bad)
sbb
cmp
hlt
(bad)
mov
add
loop
(bad)
push
jns
and
mov
mov
push
sub
jle
fcomp
and
mov
int3
add
sub
loope
sbb
shr
jnp
out
add
mov
stc
imul
cmp
out
ja
push
dec
sub
xchg
inc
cs
pop
xor
std
imul
repnz
add
xor
mov
xchg
push
push
mov
ss
push
jl
jno
xchg
cmp
add
jmp
jbe
xchg
or
push
arpl
shr
cmp
inc
pop
popf
or
sub
xor
xchg
mov
push
into
in
dec
push
dec
div
rcr
call
out
repnz
and
inc
test
fiadd
cmps
xor
pop
inc
pop
jmp
sbb
dec
xchg
and
icebp
or
mov
jge
inc
outs
out
xlat
jp
out
dec
jmp
mov
jp
pusha
out
xchg
pop
add
call
hlt
or
mov
fisttp
xor
ret
push
inc
inc
cmc
xchg
(bad)
imul
icebp
sub
push
icebp
push
mov
jge
fwait
shl
dec
xchg
xor
sbb
push
(bad)
cdq
push
(bad)
stos
cld
lds
sub
clc
dec
sbb
xchg
das
fst
retf
add
jge
lods
fld
xor
and
dec
xor
mov
addr16
out
das
jnp
xlat
sbb
adc
add
stc
fimul
mov
dec
fisubr
int3
adc
shl
out
popa
ret
imul
in
or
mov
test
or
mov
(bad)
leave
iret
sbb
xor
xchg
stos
xchg
add
cmc
jp
stos
pop
cmp
aas
jns
arpl
mov
cmp
and
or
dec
pop
sar
pop
and
inc
add
or
out
jmp
jo
test
enter
dec
lock
or
sub
lds
(bad)
pusha
icebp
cld
cld
setno
inc
lea
or
int
out
cmp
mov
std
scas
fld
jbe
mov
loope
mov
fidivr
ins
push
les
ins
cmp
ins
mov
push
leave
leave
cmp
and
mov
(bad)
inc
xchg
stc
push
sub
(bad)
cmp
aam
mov
push
xchg
sub
xchg
movs
add
pop
mov
mov
in
es
or
mov
mov
sti
sbb
je
pop
fstp
or
(bad)
push
push
or
push
and
repnz
(bad)
xor
cmp
not
(bad)
lds
movs
cmc
test
std
sbb
cld
dec
shl
or
xchg
pop
dec
mov
mov
xor
sub
mov
cmps
sbb
cmp
fiadd
push
(bad)
mov
pop
jge
push
inc
pop
sub
aaa
pop
retf
cmp
xchg
mov
daa
add
ss
(bad)
cmps
shr
in
mov
ret
jbe
fidiv
xchg
and
inc
pmaddwd
mov
sbb
int
cmp
shr
je
pusha
sahf
add
cmp
sub
scas
sar
pop
fisttp
push
loop
mov
popa
fcomp
sub
jp
int3
push
jp
mov
pop
push
mov
fist
xchg
add
fisubr
jmp
dec
add
hlt
lahf
xor
sub
and
movs
push
or
mov
adc
pushf
lods
mov
mov
out
rcr
je
inc
inc
xchg
repz
lods
pop
rol
(bad)
in
mov
aad
lods
cmp
and
mov
dec
jns
std
and
jne
scas
jle
ds
ss
xchg
add
inc
adc
mov
int3
movs
and
mov
xchg
pop
leave
xor
mov
pop
or
mov
scas
and
daa
mov
mov
scas
mov
mov
out
or
out
add
(bad)
shl
xor
sti
sar
jmp
push
xchg
retf
pushf
stos
(bad)
jno
lods
shl
int3
pusha
xchg
lahf
push
cmp
mov
push
add
jg
ficom
mov
xor
push
sbb
dec
test
xchg
scas
into
push
in
xchg
push
or
in
imul
inc
nop
out
fsubr
aad
ror
(bad)
fiadd
stc
xchg
mov
mov
out
not
ins
js
push
das
xchg
pop
or
cmp
push
ret
(bad)
ja
out
cmp
jns
and
movs
test
xor
xchg
cli
cmp
lock
jmp
push
rol
fs
fdiv
addr16
ret
cmp
enter
push
xchg
pop
ins
int3
stc
pop
daa
and
jne
jae
les
rcl
or
in
(bad)
shr
mov
stos
xor
and
xchg
and
jns
mov
or
or
mov
and
xor
jbe
pop
and
les
inc
les
inc
dec
outs
data16
add
mov
dec
dec
inc
push
imul
sub
pop
sbb
and
cmps
int
test
fwait
mov
setp
lods
inc
sub
or
xchg
jnp
xchg
daa
push
ds
jp
icebp
daa
push
cmc
jbe
std
stos
xchg
stos
rcr
mov
es
scas
nop
and
add
data16
push
ja
xor
mov
mov
out
in
(bad)
popa
test
das
add
daa
cmps
test
inc
imul
xor
outs
pop
cmp
mov
mov
jle
sbb
daa
les
loop
jne
inc
call
xchg
mov
into
pop
mov
repz
lea
std
out
test
shr
cmp
mov
lods
and
pop
outs
sbb
jae
push
pop
cmc
lods
xor
dec
out
ja
mov
sahf
pop
lods
rcl
outs
fnstsw
enter
daa
jp
jmp
add
sub
mov
jp
repz
fistp
repnz
vmovq
(bad)
mov
mov
push
push
lahf
fcompp
iret
lea
mov
not
lods
jg
mov
repz
out
jbe
imul
out
add
or
cmp
pop
test
rol
lds
dec
and
dec
in
add
dec
pusha
mov
inc
or
adc
jbe
lahf
lods
cwde
mov
ror
bound
aad
popf
ja
test
fistp
daa
xchg
clc
stc
enter
(bad)
dec
mov
push
dec
adc
mov
clc
jae
call
cmp
scas
adc
mov
and
push
sahf
and
dec
out
and
repnz
leave
jp
in
jg
pop
movs
mov
mov
out
add
in
add
stos
rcr
mov
add
jns
xchg
mov
push
and
add
jb
popf
rcl
sbb
sti
repz
(bad)
xor
jecxz
mov
in
fisub
pop
adc
xor
into
imul
les
fbld
push
push
leave
sub
jmp
loope
sub
fisubr
mov
cmp
jp
pop
rcl
push
jmp
pop
lods
add
retf
xchg
xchg
inc
jbe
jb
jne
lods
mov
sub
bound
inc
out
rcr
loopne
jmp
add
scas
fst
stos
mov
sbb
or
and
push
jg
neg
sub
xlat
lock
xchg
(bad)
jae
sub
out
mov
jmp
mov
ins
sar
(bad)
pop
push
sub
lds
jo
cld
push
lods
mov
les
xor
mov
jb
movs
dec
xor
adc
xor
inc
inc
cmp
ss
outs
sbb
cld
mov
dec
je
aas
fidivr
sub
add
aas
push
push
test
sub
out
mov
mov
pop
mov
pop
xchg
stos
mov
jae
cmp
mov
ja
inc
or
mov
mov
sub
inc
and
xchg
xchg
dec
cmp
or
mov
ins
(bad)
push
and
mov
pop
cld
and
push
xchg
popa
adc
jne
pop
in
pop
cmps
leave
add
pop
sahf
sbb
popa
aaa
pop
test
sbb
ret
mov
in
jg
imul
xchg
cmp
mov
(bad)
ficom
jmp
repz
push
pop
std
aam
bound
daa
sub
out
aad
es
ret
jb
cdq
add
push
out
clc
in
xchg
pop
xchg
xchg
ret
test
repz
xchg
mov
fwait
ret
mov
adc
dec
pop
sbb
addr16
jg
test
dec
inc
push
dec
jle
lds
rcr
cmp
lahf
pop
daa
dec
pop
repnz
dec
scas
and
push
jmp
pop
hlt
hlt
mov
push
retf
mov
pop
idiv
sahf
cmp
jbe
lods
pop
sub
xlat
jbe
push
int3
in
jae
push
out
movs
adc
mov
mov
ins
sbb
les
ret
push
call
dec
fucomp
sahf
shl
aam
adc
pop
mov
repz
stos
xlat
sbb
(bad)
jmp
ja
and
xor
loope
jmp
enter
mov
jecxz
ror
or
stos
pop
cmc
pop
outs
cmp
dec
inc
add
xor
pop
dec
lahf
in
and
(bad)
mov
push
mov
cmp
sbb
pop
in
outs
outs
push
mov
push
mov
or
jb
mov
mov
aas
mov
inc
pop
push
jge
retf
mov
test
shl
mov
add
(bad)
outs
push
(bad)
call
jmp
int
inc
sub
cmp
loope
movs
rcl
int3
mov
nop
push
mov
mov
sub
mov
gs
fcomp
clc
ins
and
lods
or
lods
repz
push
or
jmp
mov
inc
push
out
adc
and
push
inc
rcl
int
or
dec
adc
bswap
jnp
out
std
mov
mov
cdq
jmp
sub
push
inc
in
es
mov
test
das
int
push
std
in
repz
ja
js
jae
fxch
sbb
stos
fild
inc
ins
mov
loop
icebp
fmul
stos
pop
std
cmp
ins
add
xor
lods
and
loope
xchg
mov
mov
and
xor
mov
mov
jle
loop
xchg
and
and
ins
mov
data16
cmp
dec
or
push
cmps
cmp
aaa
mov
sbb
rcr
push
sub
push
pop
rol
lods
push
mov
(bad)
daa
nop
mov
mov
test
das
lahf
adc
xchg
pop
xchg
mov
lahf
(bad)
arpl
fisubr
fdivr
push
dec
jmp
xchg
sbb
arpl
btr
push
or
add
aaa
not
mov
inc
push
outs
or
mov
jnp
js
mov
out
sub
sbb
adc
icebp
outs
pop
je
dec
fistp
icebp
sub
ret
dec
leave
leave
hlt
add
adc
jmp
or
js
and
add
sub
test
div
imul
and
movs
xor
loope
clc
mov
pop
xchg
fidiv
std
push
mov
movs
inc
stos
jp
inc
xor
pop
sbb
retf
dec
xchg
loop
mov
jo
and
test
icebp
(bad)
cld
pop
or
dec
or
and
lods
sbb
repz
fistp
jle
imul
jmp
inc
bound
add
mov
push
push
out
retf
imul
or
out
out
add
(bad)
pop
arpl
inc
add
add
repnz
ins
mov
aaa
enter
pop
dec
push
mov
jg
loope
push
mul
(bad)
and
mov
je
xchg
lock
pop
arpl
pop
add
lea
mov
sub
inc
aad
cmp
mov
sahf
dec
push
xor
and
retf
or
call
mov
and
jne
jns
popa
in
xchg
xchg
das
enter
mov
add
scas
(bad)
popa
pop
lds
in
sti
adc
js
out
sbb
dec
and
add
into
jno
iret
xchg
pop
leave
cmp
cs
in
push
shl
enter
mov
or
repnz
jmp
ret
fadd
inc
mov
push
push
mov
inc
scas
dec
push
mov
mov
pop
dec
pop
jne
push
xor
xor
sbb
sbb
sub
add
jmp
pop
mov
sub
(bad)
lahf
inc
movlps
sbb
push
mov
ret
xor
xchg
sbb
stc
scas
in
mov
popa
cmps
pop
inc
rol
fldcw
mov
out
and
icebp
cli
div
rcl
sar
xchg
pop
jg
jns
pop
sub
ds
lahf
cmp
ja
mov
fwait
xor
int3
pop
ss
lea
popa
pop
aad
scas
mov
xchg
mov
int3
adc
mov
stos
sub
ror
or
test
cmp
push
test
xor
rol
xchg
jmp
sub
dec
mov
lock
push
xchg
call
sti
jmp
inc
outs
pushf
mov
rcr
pop
adc
add
and
mov
adc
test
and
fld
dec
sub
fcmovne
ret
mov
sbb
pop
inc
(bad)
jp
jne
push
imul
int3
adc
cmp
add
xor
clc
cs
gs
add
cmp
mov
loop
mov
xchg
jp
sub
repz
sub
sub
mov
xchg
test
pop
pop
inc
and
jb
cmp
leave
mov
jge
fidiv
jns
into
or
sub
clc
cmp
in
or
dec
sahf
pusha
add
adc
lea
mov
inc
push
hlt
sbb
test
sub
mov
or
and
or
into
fs
push
ins
or
mov
fs
adc
mov
cwde
inc
pushf
outs
push
sti
(bad)
stc
fnstcw
icebp
and
cmp
sti
xchg
je
sub
sti
push
(bad)
sub
call
or
mov
add
mov
pop
gs
leave
sbb
xchg
push
pusha
test
sbb
retf
inc
push
int3
fadd
mov
je
adc
xchg
mov
div
inc
xchg
imul
ins
xor
jmp
cmps
mov
add
das
xchg
add
mov
hlt
and
push
in
mov
addr16
lods
inc
adc
lock
xchg
pop
sahf
test
xor
das
jmp
jnp
jmp
pop
adc
(bad)
xor
cmps
(bad)
inc
mov
movs
push
mov
jbe
nop
sbb
sbb
push
stc
das
scas
aas
xlat
inc
aad
rol
in
cli
jmp
(bad)
fnstenv
jecxz
stos
in
es
sub
dec
sti
std
mov
push
adc
fstp
test
cmps
mov
mov
mov
test
or
mov
sbb
rcr
and
ds
addr16
push
jmp
repnz
mov
push
scas
nop
stos
pop
inc
repz
sub
mov
ins
adc
add
out
lea
ss
cmp
enter
lds
fnsave
cmp
or
sbb
iret
out
push
(bad)
push
repz
sbb
jp
sub
scas
cdq
add
pop
mov
and
jge
push
mov
pop
cmps
(bad)
(bad)
adc
sahf
cwde
push
sub
mov
add
lods
push
fistp
les
inc
imul
jmp
mov
stos
xor
into
call
and
cdq
and
icebp
mov
repz
call
hlt
xchg
mov
sahf
scas
mov
inc
xchg
shl
cdq
fdivr
push
mov
std
xchg
fnstenv
and
imul
xchg
add
loopne
sub
push
stos
lods
pop
and
xchg
xlat
pop
es
inc
pushf
dec
aaa
jl
mov
cmc
lea
mov
ja
lahf
jp
push
ror
sbb
and
pop
dec
sub
mov
in
push
iret
or
mov
sub
dec
jne
push
loope
jne
pop
cmp
xchg
push
mov
shl
fimul
mov
mov
sbb
fisub
lahf
rcr
and
mov
call
dec
out
ss
hlt
fistp
push
into
in
fnsave
push
lock
mov
sahf
test
aam
sar
stos
imul
inc
test
enter
pop
push
sbb
(bad)
loope
arpl
mov
lahf
xchg
mov
inc
bound
pop
cmc
rcl
clc
push
fwait
ret
or
nop
xlat
fist
ror
jns
adc
and
pushf
xchg
cwde
adc
jmp
stos
data16
cli
in
scas
pop
and
imul
lds
mov
xor
mov
push
sub
add
push
cmp
ret
movs
lahf
xchg
inc
js
cdq
fcom
dec
addr16
movs
pop
mov
mov
or
pop
push
inc
adc
lods
loop
icebp
outs
pop
pop
cmp
xor
jle
xlat
loopne
(bad)
sar
dec
js
call
imul
mov
push
popf
push
fdivr
pop
jg
mov
adc
adc
popf
les
xchg
mov
mul
add
pop
jecxz
movs
sbb
jae
add
or
pop
pop
adc
or
sub
bound
or
and
or
sub
dec
rep
jge
scas
push
push
xor
lods
add
imul
jle
lods
push
(bad)
and
jp
jne
sbb
or
xor
shl
add
test
mov
aam
push
xchg
or
mov
inc
loop
test
xor
pop
sub
test
sbb
add
push
add
cmp
int
call
xor
and
call
jbe
scas
adc
jl
fs
popa
movs
sbb
xor
jmp
scas
adc
xor
lods
sahf
cmp
cli
xor
loope
jmp
cli
jg
rcr
fld
in
mov
shl
or
sbb
lods
xchg
jg
dec
es
sbb
(bad)
or
push
mov
mov
xchg
scas
xchg
fist
or
test
sbb
les
inc
jno
sub
mov
int3
fist
int
sbb
pop
inc
push
pop
xor
nop
mov
jp
test
repnz
push
pop
out
loop
dec
adc
iret
loopne
stos
jp
sub
cmc
out
mov
mov
bound
mov
or
int
sbb
nop
add
pop
and
xlat
inc
or
mov
clc
les
cmp
or
push
add
cmp
out
xchg
and
gs
nop
or
jmp
shl
daa
clc
add
test
(bad)
ins
cmp
xor
ret
lods
in
shl
mov
xchg
aaa
inc
and
sub
ret
pop
sbb
inc
push
jae
push
mov
daa
imul
icebp
and
sub
por
out
into
or
xlat
jnp
repnz
sbb
pop
and
xlat
ja
out
inc
das
jbe
mov
and
cmp
jne
int3
es
test
sub
lahf
and
aas
inc
jge
pop
fwait
adc
jl
jmp
pop
enter
add
pop
rcl
mov
ja
rcl
mov
or
imul
pop
xlat
fiadd
mov
sbb
or
sub
enter
jns
stos
cmp
or
jge
mov
adc
push
xchg
nop
xor
jp
or
push
inc
data16
test
mov
add
sub
adc
dec
push
cld
cmc
outs
(bad)
and
add
repz
imul
in
lods
pop
ret
inc
cmp
inc
rol
mov
cmp
xor
jae
leave
or
sahf
daa
inc
mov
pop
ins
cmp
add
data16
pop
dec
out
pop
cwde
jbe
xchg
lea
push
out
mov
mov
out
fmulp
test
je
pop
ins
retf
repz
dec
pop
push
in
test
dec
xchg
call
sbb
lods
dec
pop
push
mov
pop
fisubr
sbb
outs
add
xor
inc
ret
int
adc
jo
ja
frstor
lahf
icebp
and
fiadd
dec
and
neg
add
push
mov
push
shl
jns
retf
mov
loope
xchg
cmp
mov
loopne
outs
aad
push
add
pop
jp
or
fdivr
pop
pop
jo
dec
arpl
cld
jmp
ror
adc
je
inc
sub
cmp
mov
push
cwde
test
xchg
out
jmp
jae
mov
add
push
inc
mov
js
or
fstp
inc
popf
call
xchg
rcl
movs
pcmpeqw
ror
repz
adc
arpl
pop
imul
ins
sub
popf
or
lods
popf
dec
sahf
les
sahf
and
outs
push
movs
mov
adc
(bad)
sbb
mov
std
sub
pop
stc
inc
aaa
lock
push
pop
adc
loopne
or
js
test
mov
pop
clc
fisttp
inc
movs
push
mov
clc
dec
mov
popa
(bad)
cmps
cmp
test
mov
xor
jns
mov
push
lock
retf
stc
hlt
mov
adc
ss
lods
pop
arpl
inc
adc
dec
pop
outs
in
fs
lea
jb
or
adc
ins
pop
popf
hlt
xchg
xor
aam
dec
xchg
fidiv
ror
push
cs
mov
loope
xchg
push
add
fisttp
fdivr
sub
jle
xor
xchg
shr
and
ss
inc
out
(bad)
add
dec
hlt
sub
rcr
xor
jg
xchg
adc
inc
popf
ins
(bad)
icebp
dec
out
imul
in
(bad)
clc
ds
inc
fmul
mov
gs
cmp
ret
pop
fistp
inc
jg
outs
mov
jns
cdq
cmp
jp
or
ins
dec
push
test
pop
outs
adc
in
adc
(bad)
js
(bad)
out
pop
push
scas
ret
xor
mov
cmp
jbe
fstp
stos
mov
sub
mov
xor
pop
call
xchg
lock
and
das
pop
and
in
mov
lahf
int
popa
push
mov
adc
mov
adc
cwde
les
mov
repz
movs
out
js
out
or
add
mov
frstor
out
mov
les
and
aam
je
xchg
sbb
ficom
(bad)
pop
aam
cmovne
xchg
pushf
ss
out
pushf
mov
push
aad
push
fcomip
and
adc
mov
rcr
and
mov
mov
stc
das
out
dec
movs
xlat
mov
or
in
cmp
cmp
(bad)
jae
xchg
jne
fucomp
loop
inc
icebp
rcl
jmp
shl
pop
hlt
xchg
into
inc
lods
pop
mov
mov
ds
push
rol
adc
add
sbb
jg
jle
dec
inc
mov
adc
mov
imul
or
cli
sbb
sbb
pop
dec
std
pop
sahf
adc
arpl
int
scas
ret
sub
out
aad
lea
push
mov
jnp
fs
or
inc
iret
rol
addr16
test
inc
iret
adc
sbb
mov
clc
mov
das
arpl
xor
outs
movs
pop
mov
dec
jno
sbb
ja
jmp
jg
sub
lea
jne
(bad)
repz
xchg
dec
shr
nop
(bad)
sti
mov
add
mov
cmp
inc
push
in
xor
inc
mov
repz
inc
push
fstp
sub
pop
xor
mov
sub
in
pop
add
jno
xor
sub
xor
and
sub
push
add
test
or
enter
jge
pop
adc
xchg
shr
cdq
movs
in
xor
enter
loop
dec
retf
pop
call
mov
mov
sti
dec
sbb
cdq
mov
iret
out
pop
jbe
and
mov
(bad)
leave
mov
cmp
jmp
inc
push
popa
ins
ficomp
rcl
mov
add
add
pushf
test
or
pop
mov
xchg
sbb
(bad)
mov
std
inc
add
es
add
adc
int
ss
dec
xchg
xchg
adc
sub
ja
fistp
xchg
xchg
cmc
mov
cld
sub
(bad)
retf
inc
xchg
push
xor
mov
jns
xchg
loop
mov
xor
and
pop
xchg
ret
jnp
dec
xchg
mov
sbb
push
xor
and
adc
dec
push
loopne
lds
(bad)
std
stc
dec
xor
xchg
jecxz
mov
xor
jecxz
neg
cwde
cld
test
add
pop
stos
imul
pop
out
push
mov
push
sub
mov
dec
jns
sub
shl
add
push
jns
call
jns
cmp
mov
pushf
std
je
adc
pop
sub
push
add
mov
sbb
dec
(bad)
dec
test
push
addr16
loopne
jecxz
push
or
add
dec
mov
pop
cwde
sub
retf
lods
mov
idiv
and
xor
fs
mov
pop
sbb
imul
loopne
xchg
arpl
jge
retf
retf
fbstp
in
outs
or
ins
push
cmp
xchg
js
dec
es
shl
inc
mov
pop
mov
retf
in
mov
retf
push
popf
add
pop
mov
stos
or
mov
ss
cmp
fcomp
jp
sar
or
ret
or
fs
dec
ret
and
jnp
ret
jno
adc
ins
rcl
sub
sahf
jle
loop
rcl
pop
in
push
jnp
jae
mov
(bad)
fcomp
sbb
call
mov
hlt
fnstcw
inc
ficom
mov
call
lock
out
sub
jle
push
fs
outs
push
sub
jmp
push
arpl
adc
sub
cwde
outs
mov
pop
or
sbb
adc
jp
pop
dec
pcmpeqb
cs
into
not
cmp
xor
mov
dec
mov
test
adc
lods
mov
cmp
imul
xchg
inc
outs
repnz
xchg
inc
fld
mov
js
jle
cdq
xor
data16
jo
hlt
(bad)
int3
push
popa
cwde
jmp
dec
xchg
mov
mov
cmp
mov
outs
int
mov
adc
add
das
cmp
inc
jno
dec
mov
inc
jg
add
xor
call
daa
mov
adc
push
fld
(bad)
fsub
push
mul
dec
fwait
inc
dec
push
out
add
and
stc
or
lock
dec
jb
mov
pop
test
mov
inc
adc
lods
gs
adc
adc
into
push
xchg
add
pop
fidivr
mov
fwait
out
das
and
repz
fcomp
inc
pushf
imul
sub
js
jnp
out
add
xchg
dec
aaa
and
push
cmp
push
shl
pop
repz
call
stos
sahf
inc
mov
movs
jbe
les
in
neg
and
push
stc
push
leave
xchg
pop
aas
loope
ins
sub
shl
jle
xor
push
out
add
scas
fisttp
icebp
shr
ds
lds
mov
loope
fs
jl
loope
les
in
aad
pusha
push
rcr
imul
pop
xor
jo
mov
mov
repz
(bad)
paddb
imul
add
inc
inc
js
lahf
push
cmp
lods
fadd
pop
push
cli
loopne
sub
out
movs
sub
(bad)
jbe
lds
clc
gs
push
pop
scas
cs
adc
mov
and
pushf
mov
pop
jl
or
jl
aad
enter
fs
xchg
scas
ins
lds
and
mov
mov
rol
ja
push
xor
push
xlat
pop
and
inc
inc
aas
pop
gs
or
sub
jge
enter
jno
sahf
aam
aas
mov
sub
mov
wbinvd
not
stc
js
addr16
fisubr
mov
mov
adc
and
add
rol
mov
mov
adc
dec
enter
inc
lods
pop
test
pop
bound
retf
pop
loopne
mov
cld
sar
movs
push
push
push
jne
mov
add
mov
xlat
jmp
mov
sub
daa
cli
ret
or
sbb
fld
or
or
mov
leave
mov
not
push
mov
dec
sbb
cmp
icebp
push
loop
cmp
xor
repnz
rcl
repnz
sub
lods
add
in
push
adc
int3
push
dec
adc
mov
dec
mov
jmp
jmp
push
jecxz
fcmovnu
cmp
mov
retf
dec
inc
inc
mov
aaa
pop
daa
cli
lods
inc
shr
icebp
popa
pop
sub
mov
not
fxch
and
jmp
fwait
sbb
and
adc
fistp
cmps
(bad)
fild
mov
(bad)
call
hlt
ret
lea
xlat
push
(bad)
scas
jmp
and
inc
jns
inc
lahf
(bad)
and
adc
ror
dec
sub
push
mov
(bad)
mov
adc
imul
inc
mov
movs
add
(bad)
xchg
bound
cmps
ins
test
jne
sub
add
outs
mov
xor
in
sub
shl
sub
retf
push
and
inc
hlt
es
mov
dec
loope
adc
rcr
sbb
or
loopne
mov
mov
jne
dec
mov
sub
dec
inc
cwde
gs
popa
hlt
retf
xor
outs
inc
rcr
mov
sub
add
call
fsubr
xchg
leave
mul
aaa
xor
dec
fwait
out
aam
shr
pop
mov
jno
mov
mov
mov
cmc
test
out
pop
xchg
jne
cs
in
fldcw
lock
scas
inc
icebp
daa
js
ss
call
ins
adc
adc
(bad)
or
iret
pushf
mov
popa
out
dec
lock
inc
scas
dec
les
mov
mov
sub
call
outs
cdq
adc
cdq
push
imul
inc
ins
push
cli
xchg
xor
fdivr
(bad)
(bad)
pop
jno
lahf
xchg
inc
fst
pop
push
imul
push
retf
(bad)
fisubr
jp
sbb
inc
mov
mov
enter
pushf
sti
mov
dec
test
dec
in
jmp
inc
xchg
hlt
sub
mov
or
repz
add
cmps
stc
sbb
clc
push
ret
push
loope
jge
push
iret
sub
fst
sub
jl
lods
or
out
cmp
icebp
add
dec
mov
fldcw
shr
xor
sbb
adc
add
cmp
xor
adc
xchg
jmp
popa
pop
mov
pusha
cmp
cmps
pop
ds
adc
xor
mov
jle
int
mov
mov
(bad)
popa
add
cli
adc
sbb
cld
icebp
int3
arpl
jne
xchg
ins
pop
inc
add
fdivr
shl
(bad)
stos
les
jmp
iret
cmp
and
lahf
scas
or
(bad)
retf
pop
cdq
mov
lds
sbb
sub
call
mov
pop
sbb
jns
pop
dec
out
popa
dec
mov
je
dec
repnz
mov
(bad)
jle
sti
xor
or
rcl
aaa
or
add
add
jno
jb
pop
push
(bad)
clc
sbb
and
adc
xor
push
xchg
jmp
call
arpl
sbb
jbe
pop
inc
adc
mov
daa
mov
mov
cmc
adc
sbb
jg
aaa
push
xlat
in
xchg
lods
loop
pop
cli
hlt
jns
and
jg
lea
sub
rcl
mov
xor
sub
jae
mov
call
retf
sbb
fsub
stc
adc
shl
inc
dec
les
mov
(bad)
sub
sbb
mov
(bad)
(bad)
into
ins
daa
test
out
(bad)
push
mov
inc
pop
dec
or
mov
test
push
lock
mov
pop
or
xchg
pop
cmp
pop
push
push
ds
jne
inc
jmp
push
addr16
les
lods
arpl
sar
cwde
(bad)
sbb
sahf
daa
nop
mov
leave
add
xchg
mov
not
fiadd
ror
adc
xchg
outs
xor
in
fnstenv
mov
mov
cmp
xor
popa
ret
adc
pop
and
stos
add
push
mov
ss
push
in
mov
sub
cmp
in
aas
push
lock
sub
int3
add
out
or
pop
lea
xor
mov
pop
scas
shl
cwde
imul
sub
dec
nop
push
xor
mov
jb
add
add
sub
xchg
out
out
sub
je
(bad)
neg
aam
test
jne
into
cmc
shr
fmul
je
pop
xlat
mov
adc
sar
sub
sub
cmp
and
call
jmp
mov
sbb
fstp
push
enter
mov
cmps
movs
dec
dec
retf
or
pop
cmp
add
mov
test
add
push
add
cmc
jge
jmp
popf
push
shl
and
cmps
ret
mov
fcomp
mov
inc
addr16
aas
mov
and
sub
ret
xor
push
call
imul
mov
pushf
jmp
repnz
mov
sub
sar
push
jo
ss
scas
sub
or
xlat
aam
icebp
mov
out
jmp
jmp
inc
repnz
xchg
in
inc
inc
enter
xlat
fs
xlat
ins
in
xor
mov
leave
lods
jns
mov
jae
xchg
xor
scas
fmul
inc
or
push
cmps
sub
repnz
icebp
mov
call
xchg
inc
shl
xor
dec
fwait
pop
pop
adc
aad
in
sahf
hlt
lock
sbb
popa
retf
in
lahf
pop
mov
inc
movs
inc
cwde
cmps
shl
mov
xchg
fisttp
jmp
push
adc
adc
out
(bad)
push
out
add
push
sbb
call
mov
lods
pop
or
fsubr
stos
cmp
add
mov
push
shl
cmp
std
cmp
fs
aas
sub
inc
jecxz
lods
jp
mul
push
sbb
jecxz
mov
mov
leave
ret
mov
out
mov
fwait
push
mov
dec
icebp
inc
and
imul
loope
xor
jmp
inc
dec
adc
in
jmp
in
mov
int
(bad)
ret
rol
and
ret
fwait
es
mov
std
js
movs
sbb
jne
aam
sti
retf
call
sbb
shl
test
sar
adc
mov
mov
in
and
jle
ds
xchg
jg
sbb
jns
int
sub
(bad)
imul
cmp
stos
outs
popa
dec
fsubr
or
and
or
and
call
inc
loopne
sub
call
mov
stc
mov
aam
xlat
ret
mov
pushf
dec
xchg
cmp
pop
pop
mov
cmp
cmp
mov
call
clc
pop
cmps
pop
xlat
jb
inc
arpl
xor
jge
mov
add
test
lods
cmp
adc
lds
fmul
and
adc
ret
lods
(bad)
iret
popf
fstp
out
jg
inc
pop
cli
sub
and
ret
mov
and
push
and
mov
pusha
icebp
add
xor
or
dec
adc
push
sub
fdivr
in
neg
push
imul
or
mov
xchg
sub
mov
in
pop
scas
xchg
stos
loop
push
add
mov
pop
xchg
jae
push
push
aad
(bad)
stos
push
cs
add
cld
sub
out
(bad)
mov
lds
popf
es
adc
mov
dec
les
jo
pushf
pop
dec
push
cmp
ds
sbb
out
iret
and
je
sub
xlat
imul
pusha
jo
pop
cmps
xor
ds
repz
hlt
mov
xlat
call
add
loop
push
cmps
test
aam
add
xor
mov
xchg
out
loope
dec
stc
jno
add
add
ss
mov
adc
push
imul
mov
pop
loope
aad
out
ds
cmp
push
aaa
jb
loopne
shl
jo
scas
retf
sbb
push
inc
inc
pop
adc
pop
push
loopne
mov
push
jns
(bad)
(bad)
mov
push
in
dec
sbb
push
jle
mov
rcl
fs
xor
ds
cld
shl
add
xchg
es
retf
(bad)
jecxz
ror
add
sub
and
int
js
fstp
mov
shr
mov
or
ins
pusha
xor
dec
fld
push
mov
push
outs
push
cs
cmp
clc
push
sub
loop
cwde
imul
jg
mov
dec
sbb
(bad)
xlat
leave
ret
mov
cmp
add
push
imul
inc
pop
jno
jmp
inc
aaa
jg
rcr
mov
jo
repnz
adc
adc
xor
ror
xor
adc
jg
push
lahf
adc
mov
outs
adc
or
sub
mov
leave
rol
pushf
push
xchg
xor
rcl
push
xchg
sbb
in
xchg
xchg
pop
out
inc
and
cmovg
test
jnp
popa
fisubr
mov
push
(bad)
cmps
(bad)
repz
and
(bad)
sub
mov
push
add
pusha
gs
sub
pop
jnp
gs
ds
sti
sub
mov
jbe
(bad)
jmp
aas
xchg
adc
adc
ja
cs
sub
ds
dec
jnp
and
adc
mov
mov
sahf
dec
xor
mov
push
pusha
sar
mov
popf
div
cmp
stos
sub
mov
cmp
shl
push
fsubr
jmp
outs
sbb
mov
and
cmp
sub
adc
(bad)
test
mov
or
inc
int
nop
fimul
pop
xor
dec
push
xor
dec
test
jno
lea
sar
(bad)
arpl
xor
mov
mul
xchg
mov
test
push
xchg
addr16
into
daa
xor
cmp
ror
sbb
xor
xchg
mov
cmps
jle
mov
ss
adc
add
push
or
fnstsw
and
cmp
pop
mov
jmp
pop
test
pop
int
outs
lea
mov
mov
ds
fisttp
xchg
cld
test
nop
and
mov
pop
mov
mov
sbb
rol
loopne
fmul
mov
add
fcom
in
hlt
xor
jle
cmps
js
push
pop
shr
retf
sub
xchg
aad
or
lahf
adc
jecxz
enter
retf
lea
call
and
nop
cmp
mov
pop
push
or
call
arpl
ror
push
mov
test
cmc
pop
popf
stos
or
pop
mov
cmp
and
dec
xchg
pop
fbld
inc
push
dec
std
ds
ja
dec
mov
pop
xor
xchg
xchg
mov
sub
and
pop
div
jle
cld
pop
movs
and
(bad)
lods
sti
imul
lods
sbb
xor
out
pop
stos
dec
cmps
push
int
pop
push
or
pop
ins
in
(bad)
ins
and
stc
add
daa
lods
mov
xchg
(bad)
call
mov
cmp
add
data16
out
(bad)
outs
scas
cli
mov
neg
cmc
and
jl
sub
cmp
push
push
adc
pop
jns
mov
fs
xchg
cmps
retf
mov
ret
ins
repz
jecxz
je
mov
sbb
mov
movs
sbb
push
push
pop
inc
or
cwde
dec
push
push
in
in
inc
rcr
lods
mov
(bad)
sbb
pop
lods
xchg
sub
cmp
scas
push
pushf
mov
dec
jp
nop
push
sub
scas
mov
cwde
mov
push
push
mov
mov
(bad)
add
pop
jecxz
or
(bad)
mov
push
stos
and
dec
jne
jl
mov
xchg
stos
adc
aaa
mov
addr16
mov
sahf
mov
fmulp
dec
out
into
mov
and
mov
sbb
cmps
(bad)
dec
adc
and
push
or
mov
jmp
scas
jno
cmps
into
test
test
ret
xchg
or
jns
mov
loop
es
(bad)
test
cmp
arpl
xchg
xchg
loope
loope
iret
iret
jno
ror
inc
jle
in
adc
(bad)
scas
arpl
pusha
pop
pop
rcr
inc
jp
xor
bnd
int3
xchg
push
jnp
neg
aaa
ds
test
mov
push
jbe
out
mov
test
jmp
push
mov
sahf
mov
shr
out
not
ins
mov
mov
call
repnz
cld
sbb
fmul
inc
pop
repz
cmp
iret
push
push
ja
xor
nop
mov
xor
ds
xchg
xchg
sbb
test
in
fisttp
daa
sub
sbb
sahf
mov
push
adc
in
xchg
fsubp
inc
and
jle
push
xor
inc
repz
mov
inc
loopne
or
out
pop
cld
shr
adc
or
cmp
push
fldenv
or
sbb
xor
mov
and
retf
mov
daa
jp
jmp
xor
into
cmp
fsubp
pop
mov
xchg
jge
mov
sub
jne
call
test
or
jnp
ja
scas
push
into
(bad)
pop
imul
dec
adc
dec
imul
and
sub
(bad)
inc
pop
and
mov
inc
(bad)
fnstcw
jg
loope
dec
(bad)
dec
iret
jb
or
pop
lds
xchg
xor
pop
cli
push
shl
ins
pop
jmp
lock
mov
xchg
mov
popf
clc
cmp
jmp
inc
jmp
arpl
mov
lea
stos
add
pop
add
outs
push
fwait
add
sbb
or
xlat
jmp
push
mov
adc
popf
leave
add
imul
inc
setnp
popa
adc
jae
mov
mov
sbb
shl
jne
dec
adc
pop
xchg
add
sbb
aad
fwait
inc
xor
cmp
or
and
fdivr
stos
inc
mov
lock
sub
aaa
sbb
scas
mov
js
test
aas
and
into
cmp
das
bound
sti
push
ds
or
(bad)
leave
sub
shr
xrelease
mov
not
mov
push
adc
dec
sub
retf
jge
rdtsc
sbb
hlt
retf
out
mov
push
out
mov
fwait
mov
xchg
fisttp
fild
ja
(bad)
sbb
cs
add
in
mov
ins
dec
push
push
mov
add
nop
setl
pop
pop
mov
jb
icebp
or
pop
mov
out
mov
mov
jne
add
mov
popa
(bad)
add
aad
fcom
cmp
(bad)
xsaveopt
(bad)
out
inc
xchg
movs
iret
ins
xor
mov
in
out
inc
scas
icebp
(bad)
shl
loopne
nop
in
lea
test
sti
mov
push
push
push
pop
outs
aad
cmp
sahf
test
mov
inc
cs
push
sar
inc
aaa
(bad)
inc
es
in
scas
adc
movs
push
push
jnp
jp
jge
mul
ret
stc
pop
xchg
xor
add
fwait
jnp
or
sbb
pop
jge
loop
push
int
xchg
pop
mov
and
mov
cmp
test
sbb
dec
out
or
movs
nop
test
popa
mov
mov
int
outs
jmp
xchg
mov
arpl
mov
pop
push
sar
sub
dec
adc
sbb
add
push
lock
sbb
mov
sub
into
mov
sub
push
mov
add
push
sbb
(bad)
stos
adc
add
loopne
sub
add
sbb
mov
fcmovbe
mov
and
inc
mov
sub
cmps
stc
add
dec
fdivr
dec
das
xchg
jmp
or
sub
ins
mov
mov
retf
mov
in
xchg
fs
loope
push
(bad)
jg
outs
jle
xchg
repnz
stos
jnp
sub
xor
rol
sub
ja
imul
dec
fist
jno
dec
push
cli
xchg
hlt
lods
nop
out
inc
retf
or
mov
lods
lods
dec
stc
imul
cmp
popf
and
add
and
mov
repz
cmp
sbb
jno
stos
ins
mov
jecxz
cs
inc
mov
xchg
es
mov
inc
repnz
add
mov
and
jle
fild
sub
test
int3
ds
movs
bound
div
(bad)
cmp
mov
les
in
out
push
cwde
xchg
push
call
xchg
inc
mov
jmp
test
jmp
ret
jne
sbb
inc
inc
push
ds
ffree
push
adc
pop
std
mov
shr
fisubr
or
not
popa
mov
repnz
mov
cmp
lock
nop
jmp
dec
and
and
inc
clc
sub
add
inc
arpl
mov
add
aam
cmp
cwde
and
or
jbe
imul
in
js
xor
or
pop
inc
pop
mov
mov
adc
pop
inc
mov
jnp
or
es
retf
xor
scas
adc
data16
and
dec
mov
pop
out
fucomp
scas
ret
push
ror
js
jg
jne
pusha
sar
jbe
mov
sbb
xchg
iret
or
imul
sar
or
shl
loope
or
ds
cmp
call
inc
push
mov
mov
and
aad
int3
sbb
into
jne
lods
(bad)
pop
pop
div
adc
pop
lods
sub
(bad)
icebp
lahf
daa
lock
(bad)
fnstsw
jae
into
test
inc
ins
mov
ds
repnz
dec
imul
stc
iret
shl
repz
xchg
rol
ret
mov
add
mov
pushf
out
pop
dec
jno
jne
adc
dec
add
popf
sbb
mov
xchg
cs
ss
outs
pusha
(bad)
in
add
dec
enter
call
(bad)
fwait
test
push
jmp
daa
or
jle
pop
sbb
push
lea
ds
push
loopne
push
or
cmp
movs
movs
cmps
ficomp
cmc
dec
imul
xor
inc
add
rol
mov
cli
sti
mov
cmp
hlt
lds
je
fdivr
xor
inc
cmp
sub
(bad)
stc
push
xor
lock
sub
xor
ins
(bad)
test
jp
push
out
mov
dec
(bad)
xchg
mov
cmp
not
outs
or
sbb
xchg
pop
or
dec
xlat
mov
mov
and
fild
out
ja
pop
pop
inc
inc
dec
push
in
dec
or
ins
xchg
outs
icebp
lea
je
call
popf
sub
popa
add
ret
or
mov
or
cmps
in
fbstp
loop
fs
and
fidivr
aad
sbb
push
mov
mov
mov
leave
not
mov
fstp
jb
inc
xchg
pop
push
jle
xchg
and
xchg
js
ins
and
mov
xchg
rol
dec
mov
rcr
xchg
fstp
dec
cld
sub
mov
mov
xchg
div
fs
stos
mov
mov
out
pop
repnz
inc
jne
inc
ds
and
mov
sub
mov
sbb
bound
in
cmp
mov
pushf
xchg
loope
fstp
sahf
pop
into
call
pop
(bad)
in
xor
sub
(bad)
call
movs
add
adc
mov
test
rcl
cmp
mov
xor
fbld
jae
xchg
out
push
fistp
fs
mov
mov
fistp
cmp
push
int
data16
pop
or
cmp
retf
mov
jecxz
push
mov
add
jl
inc
lea
push
pop
jle
icebp
ror
inc
cmp
loope
int3
jnp
lods
in
and
or
movs
or
sbb
jmp
xchg
test
leave
push
popf
pusha
mov
pop
mov
inc
push
ret
das
pop
push
push
pop
add
mov
repz
in
inc
jo
push
add
int
or
mov
mov
jb
sbb
inc
mov
mov
dec
sub
in
adc
push
scas
xor
sub
pop
add
cmp
in
in
ins
aas
mov
shl
sub
push
inc
cli
(bad)
sbb
out
int
mov
or
mov
push
rcr
mov
push
xor
test
call
lea
stos
pop
inc
mov
mov
mul
sahf
inc
repz
mov
imul
fs
mov
nop
movs
cs
mov
lahf
mov
add
add
cmp
lds
in
adc
mov
fld
test
stc
xor
xlat
xor
ins
std
aas
lahf
mov
xor
jnp
cmps
loope
mov
mov
iret
mov
mov
(bad)
clc
mov
or
idiv
and
(bad)
xchg
mov
lahf
dec
push
mov
dec
cmp
pop
cmp
setns
mov
pop
mov
pop
mov
arpl
(bad)
leave
pusha
mov
pop
in
cdq
andps
lods
aas
cmp
test
adc
xchg
mov
in
loop
sar
nop
mov
lock
ss
and
inc
and
pop
stos
lock
add
lods
jmp
ja
lods
cmp
fwait
jl
fsub
adc
adc
leave
ins
inc
fst
iret
push
ins
pop
push
pop
xor
(bad)
loop
jle
ror
sbb
xlat
jp
sub
js
js
jmp
in
pop
xchg
inc
cmps
(bad)
adc
(bad)
and
fdivp
loop
pop
fucomi
ja
xor
cmp
dec
jns
les
jle
cmp
xor
xchg
or
leave
out
cmp
popa
mov
test
jno
call
mov
jnp
jmp
xchg
mov
jmp
cmp
mov
add
pop
sbb
inc
sub
(bad)
lods
outs
add
add
xchg
movs
mul
sub
outs
and
push
aad
push
ret
cwde
pop
xor
fild
xor
cmp
xchg
xlat
cdq
jg
dec
pop
(bad)
xchg
je
fmul
jge
cmp
ss
test
sub
push
data16
ins
pop
loopne
lds
cmp
mov
aad
and
sbb
movs
in
mov
in
cmp
lock
(bad)
mov
bswap
out
popa
xor
pop
push
cmp
xchg
jnp
sub
stos
rcr
je
add
iret
leave
mov
outs
in
xchg
cs
xor
push
mov
out
xchg
jp
sti
adc
pusha
adc
sbb
into
imul
bound
gs
add
mov
mov
je
pop
mov
test
jge
and
jg
ds
outs
xchg
pop
ret
cwde
push
mov
jmp
mov
xor
jmp
cli
pop
and
jne
ins
jmp
mov
lahf
cmp
imul
popf
and
fwait
xor
inc
mov
sub
js
loopne
cld
fisub
pop
sbb
and
daa
jp
jnp
pop
xchg
inc
dec
xor
or
retf
pop
jl
ds
inc
adc
std
cmp
inc
fcomp
daa
jmp
mov
jp
push
push
inc
lds
xchg
mov
lods
jnp
push
jnp
jle
iret
and
ror
dec
outs
(bad)
mov
sbb
push
test
ret
in
cmps
push
jge
retf
sub
jmp
daa
pushf
cmp
out
inc
jne
jmp
jmp
pusha
pop
or
sbb
dec
adc
push
out
cmp
aad
mov
and
adc
push
out
cli
ret
ret
movs
xor
pop
rcr
jg
push
retf
into
add
je
daa
shl
jns
adc
cld
jae
data16
xchg
or
dec
mov
aam
or
xor
or
neg
aaa
mov
jg
ss
(bad)
adc
inc
jg
cmp
mov
inc
xor
push
cmp
ja
push
inc
pop
and
cs
scas
xor
loopne
inc
sbb
mov
es
xchg
pop
pushf
jmp
and
push
push
cdq
push
lea
ins
mov
cmp
test
jp
sub
xor
movs
adc
mov
sub
cs
fstp
scas
out
test
adc
push
scas
add
and
in
xchg
mov
xor
mul
jb
or
xchg
je
movs
jl
cmps
mov
add
mov
xchg
push
cmps
imul
mov
push
add
or
(bad)
in
jecxz
fisubr
pop
cli
xchg
in
mov
xchg
ds
imul
iret
and
retf
ror
ja
ficomp
mov
cld
pop
push
pop
pushf
lea
or
push
sti
xchg
repnz
pop
cmp
into
mov
ins
sbb
pop
pop
les
xor
inc
icebp
mov
aas
sub
ja
xchg
sbb
mov
and
cmp
aam
dec
xchg
sub
(bad)
pop
sbb
or
push
add
outs
imul
inc
sbb
les
rcr
out
push
rcl
mov
cmp
mov
fwait
(bad)
retf
and
mov
ja
mov
jp
pop
cmp
out
jecxz
lods
pop
mov
and
dec
sub
mov
shr
stos
mov
call
dec
jl
dec
xor
loope
fisubr
mov
sub
test
daa
xor
dec
test
scas
out
add
jne
aam
lods
ds
mov
inc
ins
mov
or
inc
fmulp
mov
mov
xor
xchg
push
ins
mov
dec
in
jmp
rcl
ret
mov
nop
daa
xor
cld
pop
and
jmp
jbe
mov
add
pop
pushf
jp
js
lds
fist
(bad)
jmp
push
pop
xchg
inc
adc
dec
retf
jns
mov
aad
dec
outs
gs
cdq
dec
dec
mov
sbb
pop
pusha
popf
test
test
add
sub
pop
cs
movs
xchg
loopne
adc
mov
out
push
sub
mov
stos
push
das
mov
pop
jns
inc
mov
rol
inc
retf
inc
mul
cmp
(bad)
pop
adc
adc
pop
inc
add
jns
mov
hlt
jne
out
pop
in
test
scas
repz
jae
shr
rcl
scas
stc
pop
call
sbb
push
ror
out
shl
test
pushf
or
or
mov
sub
adc
xchg
jmp
xchg
cmp
jae
xor
lock
das
xchg
adc
sbb
add
(bad)
adc
(bad)
imul
mov
out
inc
add
xor
add
xchg
jne
retf
test
sub
cmp
push
ficom
pushf
jno
pop
stc
out
inc
lock
outs
(bad)
fsub
jnp
push
iret
sbb
sbb
and
imul
outs
adc
xchg
cmp
iret
xor
out
push
out
dec
jbe
test
fisttp
in
push
jg
fs
pusha
adc
mov
mov
(bad)
daa
test
inc
ss
sti
pusha
mov
add
inc
stc
fild
mov
test
pop
dec
mov
push
mov
pop
or
dec
cmp
lock
or
cmp
or
test
out
xor
scas
out
cmp
or
dec
hlt
ins
pop
jg
out
fs
movs
mov
shr
mov
ret
test
fneni(8087
pop
cmp
mov
mov
(bad)
pop
pop
cmp
cs
ins
ret
and
shr
and
nop
cwde
cmc
adc
int3
jmp
stos
mov
cmp
movs
fwait
out
js
or
sbb
aad
out
(bad)
mov
xchg
loop
mov
fisub
daa
cmp
xchg
pop
push
loopne
mov
std
mov
mov
add
fcompp
scas
xor
mov
ins
add
fild
les
or
adc
in
fmul
dec
imul
mov
in
inc
ins
cmp
movs
imul
xor
pop
or
xchg
and
mov
call
jp
jae
jmp
xor
mov
fs
and
jbe
sbb
dec
sbb
jae
dec
sbb
xchg
(bad)
cli
fimul
mov
fimul
out
and
pop
fld
sub
jge
or
push
stc
retf
fisub
call
and
jp
or
jne
call
inc
mov
pop
push
add
jnp
scas
in
shl
in
aas
in
xlat
leave
lods
loope
sbb
sub
add
idiv
mov
xchg
fdivr
jne
outs
mov
mov
ret
or
out
xor
shr
dec
push
pop
push
xchg
test
test
or
es
shl
cld
stos
data16
fiadd
sbb
inc
sub
jo
dec
test
and
sbb
stc
dec
or
cwde
arpl
mov
or
push
mov
or
loope
or
scas
inc
aaa
fadd
fnsave
lods
out
sub
adc
jle
(bad)
xlat
dec
dec
or
adc
bnd
and
cmp
das
dec
test
ror
sbb
test
mov
enter
sbb
cmps
fsubr
jmp
jmp
jl
aaa
gs
test
js
push
jb
in
pop
pop
pushf
scas
cmps
outs
mov
shl
add
inc
jge
sub
out
cdq
cld
pop
addr16
mov
add
fimul
adc
leave
add
xchg
mov
or
sub
ss
pop
or
jae
mov
(bad)
mov
mov
push
sbb
mov
sub
and
fistp
cmp
in
cmc
pop
fwait
dec
cs
clc
je
xchg
or
test
repz
inc
xchg
jle
(bad)
mov
mov
fnstsw
fidivr
xchg
sub
test
jno
in
pushf
xchg
ror
fstp
int
pop
enter
les
xor
xchg
jnp
jmp
mov
xor
xchg
add
in
mov
lds
and
repz
shr
add
or
mov
mov
cwde
adc
inc
adc
push
repz
fucom
mov
xchg
jecxz
retf
and
stc
sub
mov
addr16
sbb
mov
je
fs
add
iret
sbb
push
dec
hlt
xlat
(bad)
xchg
das
mov
mov
pop
jbe
sbb
test
sahf
mov
in
(bad)
loopne
jle
mov
lods
jl
sbb
ja
movs
dec
aad
inc
xor
pop
scas
xchg
xchg
push
xchg
inc
mov
or
push
ds
cmp
mov
push
test
mov
xchg
(bad)
out
add
xchg
or
ds
mov
cmp
outs
lock
icebp
frstor
mov
xchg
and
enter
jb
(bad)
sub
cs
inc
jl
mov
call
ins
fisub
in
test
fnstsw
push
mul
daa
sbb
or
xchg
add
out
movs
stos
hlt
jl
lds
pop
retf
(bad)
xor
and
ins
sbb
js
mov
xor
jmp
add
mov
shr
sti
pop
mov
ss
imul
add
jl
pop
jp
(bad)
daa
and
aam
jmp
pop
pop
dec
push
add
ss
test
and
xchg
int
sub
xchg
(bad)
jle
aam
cmc
ret
pop
mov
rcl
lock
xchg
mov
inc
xchg
inc
ret
push
out
test
push
pop
push
loopne
repnz
or
jae
jg
shl
ret
sbb
xor
dec
ins
and
or
dec
cld
repnz
push
cmps
mov
adc
cmps
pop
jecxz
add
shr
dec
lea
or
adc
mov
cmp
mov
into
xchg
add
cwde
jmp
pop
out
mov
dec
push
sub
add
cwde
add
inc
fdiv
or
ror
jmp
add
fs
icebp
sub
cmps
sub
mov
stos
jmp
pop
fldenv
shl
mov
pushf
jo
sbb
jecxz
add
pop
clc
(bad)
retf
ins
leave
add
stos
dec
arpl
rcl
sti
xchg
push
aad
mov
pop
stos
jmp
mov
push
loope
cmp
es
enter
cmp
mov
enter
sbb
imul
and
fstp
neg
cdq
jb
aaa
cmps
sub
std
out
cmp
xchg
xchg
adc
cs
mov
ret
cdq
and
cmps
push
xor
pop
lods
pop
sbb
dec
pop
xor
retf
movs
sbb
arpl
sahf
push
or
mul
and
bound
pop
mov
pop
cli
arpl
or
xchg
fsub
pop
mov
mov
xchg
lock
outs
cs
xchg
outs
ss
icebp
ret
gs
dec
jb
aad
pop
dec
mov
inc
pusha
(bad)
mov
(bad)
in
jmp
xor
adc
imul
lds
dec
(bad)
xchg
out
idiv
fadd
pop
and
and
adc
or
movs
loop
(bad)
and
pop
xchg
sub
xor
pop
mov
pop
adc
cmps
push
inc
ins
push
retf
fld
mov
adc
push
inc
cmp
icebp
stc
icebp
stos
or
repnz
scas
mov
mov
cdq
das
inc
int
cmp
jnp
lea
scas
pop
jp
xchg
ja
and
push
inc
out
mov
push
ins
daa
inc
ja
div
fst
ins
jp
arpl
aad
popf
sub
xor
cmp
mov
lods
loop
cmp
cs
lock
cmp
mov
inc
rol
jne
das
hlt
jae
addr16
mov
push
sub
(bad)
adc
jg
xchg
mul
rcl
cmp
mov
hlt
xchg
(bad)
dec
cmp
inc
mov
mov
mov
mov
inc
mov
addr16
stos
xlat
cmp
cmp
xchg
retf
fidiv
imul
out
push
scas
or
retf
(bad)
jl
add
pop
out
shl
enter
pop
pop
mov
fs
out
xchg
and
pop
test
or
movs
dec
rol
pop
xchg
jg
xlat
jne
xor
int
(bad)
jmp
jle
fwait
lds
aad
dec
adc
imul
sub
je
push
push
shl
mov
pop
out
pushf
movs
sub
imul
xlat
out
repnz
dec
and
je
fcom
mov
repz
push
sub
sbb
push
pop
divps
ins
loop
xchg
sub
int3
sahf
mov
fcom
xchg
pop
test
pop
ss
test
cwde
test
out
adc
fstp
and
pop
xor
fwait
(bad)
cmp
cmps
scas
pusha
sbb
iret
call
or
(bad)
mov
cmp
or
inc
xchg
jbe
vunpcklps
mov
push
add
rcl
add
jmp
jbe
ret
or
pop
xor
adc
jmp
jnp
stos
cdq
(bad)
aas
jg
aas
daa
mov
stos
call
sbb
xchg
call
add
ret
xor
fisttp
movs
mov
je
and
fiadd
push
add
sbb
out
pop
jno
xor
arpl
xchg
adc
or
in
cmp
sub
test
dec
push
rcl
adc
loop
adc
add
jmp
cmp
sub
jae
outs
mov
push
fist
sub
pop
stc
cmp
sub
fsub
push
loop
jbe
out
pop
into
xlat
call
repnz
add
jb
fwait
jbe
pop
cmps
push
loopne
pop
stos
(bad)
xchg
xor
loop
jg
inc
cli
das
adc
div
jg
cwde
movs
sahf
data16
fidiv
ret
add
or
pop
cbw
scas
mov
and
mov
fstp
fstp
push
cwde
jp
mov
sbb
test
arpl
mov
clc
and
out
retf
pop
mov
fidiv
retf
cmp
jp
sub
cs
je
pop
(bad)
outs
out
push
dec
stos
in
nop
popf
lock
inc
les
call
cmps
movs
(bad)
hlt
lock
popa
sti
sub
jae
leave
inc
aad
test
fdivr
jne
test
jnp
mov
jns
addr16
sbb
gs
pushf
push
jle
scas
ror
loop
and
je
mov
test
mov
ds
imul
add
ins
cmp
inc
stos
pusha
add
idiv
pop
lods
mov
xor
loope
cmps
dec
cwde
push
shl
repz
sbb
aad
mov
mov
sub
lahf
lods
imul
xlat
and
loopne
jo
lock
mov
inc
dec
test
ins
xor
inc
test
sbb
mov
inc
scas
mov
jno
(bad)
dec
inc
jb
loop
retf
cmp
fistp
push
xchg
outs
jae
js
std
lahf
loope
lods
(bad)
sahf
or
ins
push
(bad)
xlat
dec
ret
nop
jl
repz
ficomp
jno
pushf
sbb
js
std
enter
(bad)
ins
in
cwde
lds
jge
clc
out
cmp
fimul
cmp
xor
repz
out
sbb
call
repz
jo
jno
or
dec
push
xchg
or
jecxz
adc
sub
add
xchg
and
sbb
push
js
jl
jp
mov
xlat
mov
xchg
inc
retf
fs
jne
push
pusha
add
rep
and
mov
mov
mov
add
inc
mov
ret
loopne
(bad)
push
mov
mov
fbstp
dec
sbb
fst
mov
je
jg
push
add
sbb
jg
pop
mov
add
in
inc
popf
mov
loop
pop
xchg
add
or
sub
ror
jne
mov
xchg
mov
add
ins
dec
inc
xchg
jle
cmc
pop
xchg
xchg
lds
popa
push
fdiv
xor
icebp
imul
(bad)
scas
int
jp
aas
or
mov
lods
xchg
ins
mov
mul
mov
jo
pop
(bad)
fidiv
fmul
inc
xchg
adc
pop
data16
sar
adc
addr16
mov
into
movs
aaa
xchg
test
hlt
(bad)
cmp
mov
push
cmp
scas
push
mov
bound
xchg
lea
(bad)
shl
inc
dec
xor
push
sub
int3
add
pop
into
add
mov
xor
xor
inc
nop
and
(bad)
fs
push
std
jns
adc
addr16
pop
imul
jmp
mov
sbb
pop
(bad)
das
push
jecxz
and
sub
scas
dec
dec
retf
mov
cdq
imul
cld
dec
mov
xor
nop
xchg
ret
int3
repnz
stos
shr
cmp
loopne
ins
mov
stos
jae
scas
sahf
outs
inc
test
fild
and
pusha
cmps
into
jne
int3
xchg
test
sbb
add
jne
test
mov
cdq
pop
jae
sar
icebp
shl
adc
out
bound
(bad)
pop
ret
cmp
ror
or
mov
sub
add
fldenv
cli
or
sahf
fldcw
pushf
xor
fisubr
cmp
mov
mov
push
out
mov
mov
stos
sub
cmp
push
cmc
shl
enter
aam
mov
xchg
cmp
fnsave
adc
and
adc
mov
call
ret
sti
cmp
cld
lods
push
ret
dec
mov
mov
pop
sub
inc
(bad)
push
jne
loope
cli
bound
in
sub
and
cld
dec
mov
xor
pop
call
mul
xchg
cmps
pop
and
lea
popaw
xor
into
fisttp
mov
pop
test
jp
pop
movs
cli
mov
pop
(bad)
jmp
jne
out
adc
movs
mov
cmp
cmp
inc
not
dec
add
pop
cs
ins
pop
fadd
sbb
out
bound
push
test
mov
inc
sahf
mov
call
pop
rcl
(bad)
call
jns
dec
movs
sbb
and
xchg
dec
scas
aas
aaa
fs
mov
scas
loopne
dec
stos
outs
(bad)
into
fwait
mov
test
popf
movs
adc
test
fistp
fild
jmp
loope
ins
xor
xor
out
addr16
xor
push
mov
imul
lods
inc
pop
clc
fwait
(bad)
jns
adc
(bad)
xchg
dec
cld
mov
xchg
cld
jp
mov
xchg
xchg
adc
inc
call
dec
or
out
sbb
mov
and
cmp
cdq
repnz
mov
jnp
test
and
sub
(bad)
or
arpl
lock
arpl
fdivr
sub
test
jl
pop
cmp
mov
aaa
sar
(bad)
jp
mov
mov
test
mov
aad
jle
aad
xor
stos
rcl
push
outs
push
dec
(bad)
add
mov
xchg
test
ret
inc
mov
xor
fucomi
push
adc
push
scas
cmp
mov
or
stos
ds
sub
pop
ja
or
mov
clc
adc
xor
enter
push
push
(bad)
stos
adc
xchg
out
or
inc
out
addr16
add
outs
mov
(bad)
loope
loop
and
in
adc
nop
mov
dec
add
sub
sbb
aas
and
mov
sub
xchg
jge
mov
sub
mov
shl
mov
stos
jne
out
sbb
xchg
mov
push
and
cmp
dec
pop
mov
aaa
xor
cmps
xchg
ds
lea
and
pushf
in
push
ss
out
jo
mov
xor
adc
sub
(bad)
into
dec
aas
mov
int
popa
fiadd
inc
push
cwde
imul
mov
scas
(bad)
stos
pop
das
stos
cs
push
jecxz
imul
mov
pusha
push
in
push
jne
in
xchg
les
dec
mov
bound
sub
rcr
outs
inc
dec
inc
test
jae
jge
jge
cmp
arpl
sbb
or
ja
push
push
es
push
pop
and
mov
shl
in
add
dec
mov
push
fldenv
outs
fistp
fs
imul
sbb
rol
clc
shr
test
in
call
bound
push
jp
stc
jle
loope
fwait
add
xor
outs
iret
std
pop
mov
cmp
add
push
sbb
cmps
and
out
int3
inc
ds
test
xor
mov
mov
stc
rcl
sbb
aam
mov
sub
and
dec
mov
rcl
inc
lahf
les
mov
out
mov
fbld
(bad)
cld
ret
or
leave
jbe
jecxz
mov
or
cmp
sahf
fsub
hlt
out
mov
iret
mov
or
mov
push
lahf
pop
xor
xchg
mov
push
retf
icebp
cmp
dec
scas
pop
mov
push
mov
fild
push
add
fisub
push
test
mov
dec
jmp
dec
(bad)
mov
ror
or
(bad)
loopne
sbb
xor
xchg
push
test
fmul
cmp
or
xchg
mov
push
xor
or
push
pop
xchg
fs
xchg
push
js
add
repnz
cmp
cmps
ror
popf
stos
imul
pop
pop
jns
hlt
stc
xchg
(bad)
cmp
dec
shr
cmps
out
sub
shl
ret
mov
je
sub
iret
outs
xor
sbb
ins
push
popa
xchg
sub
aad
ds
add
rcr
jmp
dec
movs
lods
xchg
jno
jns
push
in
jp
lock
mov
ret
clc
loop
(bad)
jo
ret
xor
icebp
mov
(bad)
lock
and
fld
jbe
mov
popa
daa
add
jne
test
add
mov
xchg
xchg
pop
lods
pusha
mov
daa
lods
cmp
mov
jno
sub
mov
scas
retf
adc
ficom
das
sbb
xchg
add
sti
(bad)
jecxz
xchg
xor
mov
push
mov
xchg
imul
cmp
mov
mov
mov
mov
test
mov
sbb
js
and
out
add
outs
cli
xor
sub
push
call
push
lds
sub
fbld
push
scas
imul
aas
pop
ds
push
push
(bad)
imul
ret
ds
mov
pop
arpl
movs
mov
cdq
es
pop
mov
jl
xchg
fwait
push
ja
dec
addr16
jecxz
out
loope
dec
cmc
xor
mov
test
in
or
and
ret
xor
pop
adc
jmp
sub
cmp
das
dec
or
xor
pop
aas
adc
mov
push
mov
sti
cdq
bound
push
js
lea
inc
sahf
push
lahf
inc
pop
xchg
xchg
dec
dec
add
fcom
out
(bad)
cmc
cmp
jl
dec
mov
in
and
je
mov
stc
outs
(bad)
fsubr
push
frstor
aas
es
pop
cmp
and
das
push
bound
mov
push
cmp
xor
jl
xchg
xlat
add
aam
ins
dec
pusha
or
xor
arpl
hlt
int
icebp
lahf
dec
dec
out
mov
pop
js
sbb
inc
mov
test
sbb
fadd
fwait
ror
and
pop
ret
es
pop
sbb
pop
mov
out
xor
pop
mov
cmp
sub
pushf
mov
cmp
inc
stos
stos
cmps
jg
shl
pushf
mov
mov
jnp
out
in
xor
pop
mov
pop
add
adc
cld
push
sbb
mov
push
push
add
in
mov
or
jmp
rol
sbb
dec
mov
adc
sub
fs
mov
inc
xchg
dec
stc
sbb
addr16
test
fwait
cmps
ret
push
push
call
dec
and
xchg
sbb
aas
ja
xchg
or
sbb
rcr
pop
(bad)
fwait
mov
test
cmp
sub
add
call
not
add
and
cld
jl
icebp
add
mov
retf
xchg
mov
push
inc
out
sbb
mov
(bad)
xchg
pusha
shr
push
aad
or
sub
and
adc
in
fsub
sbb
sbb
fidivr
pop
mov
and
lea
in
sub
push
rcr
hlt
leave
lea
cmp
mov
sti
jl
(bad)
in
popf
pusha
or
inc
imul
pop
pop
adc
loop
in
icebp
mov
dec
arpl
(bad)
hlt
jl
mov
std
out
mov
repnz
fsub
ins
cwde
outs
das
mov
je
jmp
push
cmp
into
neg
mov
cmp
cmp
mov
inc
stos
cmp
push
popa
mov
jl
xchg
es
xchg
cmp
ffreep
stos
lea
adc
movs
or
jg
xchg
jns
or
push
sahf
cli
lods
inc
push
fild
outs
mov
jl
xor
push
(bad)
ret
cli
or
sub
mov
sub
inc
es
fild
out
ja
and
cli
es
lods
es
lock
ins
loop
loopne
ror
lods
or
jae
sub
test
jp
mov
inc
test
ror
jmp
inc
dec
std
mov
ds
out
or
or
imul
cmps
imul
push
mov
mov
popa
push
ds
add
add
and
push
jno
mov
push
pop
xor
sahf
(bad)
int3
ret
sub
fcom
push
inc
mov
push
xor
mov
outs
mov
ss
daa
mov
leave
ror
setns
or
aas
pop
pop
pop
test
jmp
push
cmp
sub
ror
push
inc
out
jp
scas
mov
pop
js
xchg
repz
out
call
(bad)
mov
dec
mov
jp
pop
mov
out
push
es
lods
es
mov
xchg
out
stos
jns
outs
xchg
lods
adc
mov
jge
pop
loop
lods
mov
lahf
pop
add
clc
nop
call
repnz
mov
loop
mov
test
pop
xchg
das
dec
xor
cli
or
enter
outs
mov
neg
add
and
jmp
inc
outs
lods
sti
outs
or
in
imul
sub
xor
sub
push
arpl
and
mov
mov
xor
lea
call
call
leave
push
pop
inc
or
sbb
push
(bad)
jl
push
aas
xchg
pop
cs
and
xlat
test
test
out
dec
mov
cmp
jg
out
into
cmp
add
xchg
popa
push
pusha
adc
lea
inc
xchg
cmc
or
push
xor
sbb
ins
test
add
jp
xor
test
loopne
loope
pop
mov
cmp
add
lock
cmc
es
int3
ja
xor
cwde
add
test
shr
mov
xor
jmp
jno
push
cmp
(bad)
sbb
push
stc
and
popf
xor
jb
leave
icebp
arpl
and
or
cdq
inc
clc
cld
xchg
jnp
les
sahf
shl
jbe
es
adc
add
enter
and
je
fwait
data16
jbe
addr16
es
add
fnstsw
xchg
sub
(bad)
sub
dec
into
mov
cmp
js
xor
icebp
repz
sbb
and
pop
inc
addr16
imul
xor
sub
jl
shl
fstp
push
inc
icebp
push
js
imul
rcr
push
xor
xchg
mov
in
xor
mov
xchg
pusha
nop
sti
mov
in
sbb
sbb
test
rcl
push
mov
or
rcl
jbe
retf
dec
sbb
push
sbb
add
test
inc
inc
ins
push
pushf
cdq
pop
mov
cmp
fcomp
adc
cmp
dec
mov
push
cld
sbb
(bad)
sub
ror
or
and
mov
les
pop
ja
mov
call
xor
adc
mov
jb
fisttp
adc
mov
xor
jbe
jge
aaa
in
stos
inc
mov
cmp
cmp
shl
hlt
xor
retf
inc
inc
retf
scas
and
mov
jno
fdivr
arpl
xor
imul
cmps
int
push
and
pusha
xor
ins
inc
lds
test
test
icebp
fldenv
sbb
adc
icebp
sbb
mov
test
movs
iret
movs
add
pmaddwd
or
cwde
sub
add
sub
mov
aad
xchg
sti
sub
repnz
push
test
retf
std
push
add
aad
or
imul
ds
cmps
jecxz
int
push
add
out
mov
push
out
and
push
cmp
mov
push
ret
loopne
inc
mov
shl
or
ins
jl
call
inc
ret
adc
jecxz
jo
sahf
retf
sbb
push
jl
popa
or
std
stos
xchg
mov
mov
push
dec
and
test
and
call
jmp
rol
and
(bad)
jmp
ins
dec
xor
sbb
imul
jmp
pop
repnz
and
es
inc
jecxz
jp
mov
jnp
ss
in
stos
xor
xchg
not
aam
mov
leave
mov
push
sub
inc
in
cmp
ret
pop
and
adc
add
jmp
imul
scas
je
dec
adc
popf
pop
sub
add
inc
or
inc
mov
or
mov
dec
ins
lds
in
aaa
xchg
test
ins
inc
cmp
sbb
ins
je
and
popa
push
shl
xor
pusha
call
push
mov
jmp
sbb
int3
push
add
test
mov
sbb
and
mov
(bad)
inc
test
mov
dec
xor
adc
jns
or
leave
push
mov
(bad)
sbb
pop
adc
repz
dec
cmc
cmpxchg
popf
test
sbb
inc
ins
loopne
mov
adc
fcomp
fcmovu
dec
(bad)
push
add
popa
mov
jnp
gs
xor
adc
retf
ins
jbe
adc
std
push
fist
mov
imul
ss
outs
ret
fisttp
pop
scas
outs
ret
xor
sbb
int3
sub
cmp
cmp
mov
ret
and
cmp
rcr
mov
pop
mov
push
jle
xor
inc
ja
xor
mov
rcr
pop
into
out
push
loopne
cld
push
iret
pop
xor
cdq
ins
push
repnz
inc
and
lea
rcr
ss
jp
fisttp
pop
xchg
in
mov
jns
addr16
add
pop
jl
mov
push
sbb
call
inc
outs
fnstcw
cmp
in
outs
popa
imul
loopne
xchg
inc
psubw
cli
cmp
mov
inc
in
xchg
lods
xchg
out
inc
fiadd
call
cld
test
adc
enter
outs
pop
cmps
cmp
test
(bad)
mov
out
jmp
jle
mov
xchg
imul
xchg
sbb
shl
jb
(bad)
(bad)
out
push
xchg
sahf
sub
aad
std
jmp
enter
push
mov
push
sub
xchg
jb
mov
push
fisub
(bad)
adc
int
popa
pusha
scas
and
call
ins
loope
push
push
xor
pop
loop
sahf
data16
push
jnp
mov
aaa
out
xor
jg
and
add
stc
(bad)
fimul
xchg
xchg
mov
sub
add
cwde
sti
sahf
pop
pop
inc
scas
dec
test
xchg
stos
inc
loope
and
fcmovnbe
(bad)
aad
stos
mov
fadd
lds
(bad)
xor
hlt
int
std
cmp
add
mov
mov
push
jl
fdivp
lahf
xchg
or
mov
push
mov
or
pop
(bad)
out
mov
mov
push
sub
push
call
push
test
test
inc
dec
jle
xor
and
in
shl
sbb
test
cdq
sahf
xor
adc
aas
ja
lahf
adc
xor
cmp
cmp
pop
iret
dec
jmp
jmp
add
push
sbb
xor
repz
add
mov
nop
jo
inc
push
or
xlat
out
mov
in
mov
adc
test
sub
mov
jle
jne
mov
sbb
imul
sar
les
loope
daa
mov
ficom
cwde
xor
jecxz
or
test
shl
sbb
and
sbb
push
sub
es
(bad)
pop
sub
daa
inc
(bad)
xor
and
mov
addr16
pop
jge
hlt
in
pop
inc
(bad)
lahf
fmul
pop
(bad)
mov
int3
test
push
shr
std
rcl
outs
sti
xchg
in
push
cld
xor
pop
push
icebp
paddd
and
out
outs
mov
push
mov
push
into
(bad)
retf
sbb
pop
arpl
lahf
or
adc
int3
in
sub
xor
loop
out
rcr
sub
mov
inc
jmp
cmp
cs
inc
setne
mov
adc
adc
outs
xchg
les
test
dec
dec
das
les
cli
sahf
dec
ins
sbb
push
pop
and
in
in
dec
movs
retf
das
jecxz
outs
addr16
(bad)
pop
mov
adc
or
(bad)
loopne
xchg
mov
sbb
mov
outs
dec
mov
sti
sub
add
ror
pusha
loope
mov
jp
(bad)
sub
pop
add
jbe
(bad)
retf
call
mov
cld
cmps
fisub
mov
jecxz
lods
inc
mov
sub
jle
xchg
push
add
(bad)
push
push
fldcw
clc
mov
(bad)
and
push
pop
pop
xchg
enter
add
aas
in
push
mov
inc
arpl
cld
pop
in
add
sub
push
and
mov
and
(bad)
into
sub
out
sbb
repz
add
cmp
sub
dec
xchg
inc
jle
pop
or
pop
jnp
or
and
dec
(bad)
sub
adc
pop
movs
or
test
push
add
sub
dec
inc
mov
dec
mov
adc
mov
push
lods
inc
fadd
lods
call
adc
inc
add
call
adc
sahf
adc
fwait
in
push
or
outs
fs
icebp
lock
mov
sbb
mov
jb
jnp
movs
mov
fmul
pop
add
jge
and
jne
clc
shl
popf
in
pop
(bad)
xor
jns
xchg
sbb
mov
or
inc
out
mov
or
dec
push
cmp
adc
push
push
mov
fwait
(bad)
icebp
nop
mov
jmp
mov
mov
enter
lea
xchg
push
out
fstp
push
jb
test
jmp
mov
cmps
cs
adc
ror
sbb
cdq
cli
mov
shl
pslld
pop
ja
mov
stos
retf
in
in
out
(bad)
in
add
ja
sub
mov
or
sub
push
sbb
push
sbb
lahf
in
rol
retf
jne
mov
inc
and
and
out
les
mov
jmp
in
mov
cmc
fadd
ficom
sub
pusha
or
in
mov
sub
or
loopne
ins
fild
jle
cdq
(bad)
dec
and
(bad)
jmp
test
loop
and
sti
dec
(bad)
std
test
lods
jae
test
idiv
push
and
loope
sbb
inc
sbb
jecxz
inc
pop
mov
jp
pop
jmp
or
adc
jle
sbb
and
ret
sub
cwde
data16
cmps
int3
mov
retf
dec
data16
fucom
fnstenv
clc
repz
pop
pop
aam
and
movs
out
xlat
clc
mov
sbb
adc
adc
dec
jmp
imul
pop
(bad)
mov
(bad)
pop
test
cdq
mov
inc
push
push
out
and
mov
add
pop
jg
cmp
push
jg
add
int3
jmp
xlat
sbb
mov
adc
dec
fld
pop
xor
or
xor
std
xchg
mov
jbe
add
daa
push
daa
mov
fwait
addr16
cdq
leave
dec
(bad)
hlt
adc
test
cmp
inc
dec
ds
ret
pop
shl
frstor
stos
cwde
xor
int
mov
or
jnp
pushf
xor
cld
xor
sbb
(bad)
inc
dec
cwde
out
ficomp
cmp
cmp
arpl
jns
mov
push
mov
inc
loopne
fld
mov
iret
test
shl
cwde
push
cmps
sbb
sub
ins
push
cmp
(bad)
(bad)
cs
loop
test
shl
sub
xchg
pop
aaa
cli
(bad)
jle
scas
scas
or
popf
out
dec
add
push
sub
repnz
push
mov
popw
and
ins
test
dec
add
xor
test
icebp
xor
arpl
mov
or
pop
js
inc
call
rol
sar
cmp
lahf
and
arpl
jge
mov
mov
nop
jl
gs
into
mov
or
cmps
mov
sbb
inc
sub
outs
fimul
out
fucom
mov
sub
das
pushf
fcomp
dec
movs
sub
push
sub
mov
sbb
lods
cmovb
xchg
lds
push
std
ficomp
mov
add
jg
dec
jp
mov
out
adc
xchg
xor
and
cmps
xor
sahf
mov
jmp
sub
push
out
ds
mov
mov
cmp
stos
(bad)
push
inc
jbe
ret
cs
or
retf
pop
sub
icebp
pop
jge
jno
test
xor
ss
jns
iret
pop
movs
movs
test
inc
inc
sub
and
jno
jp
jb
inc
and
push
mov
cmp
mov
jle
push
dec
out
sbb
dec
into
cli
adc
popa
inc
cwde
out
inc
jns
rcl
adc
scas
pop
mov
mov
sti
push
push
jge
bound
scas
dec
jl
sub
cwde
sti
push
xor
push
movs
dec
retf
rcr
jae
add
out
inc
fiadd
inc
xor
sbb
test
jbe
sbb
pusha
push
fadd
push
das
push
mov
cmps
stos
jae
or
repz
(bad)
cmp
or
cmps
cmp
(bad)
fimul
loopne
(bad)
inc
pop
sbb
push
imul
xchg
ds
or
das
es
sub
rdmsr
aaa
(bad)
out
pop
cmp
das
adc
bound
jl
cld
mov
loop
xor
fldcw
imul
pop
fiadd
pop
fdiv
in
jg
fist
fidiv
in
test
(bad)
idiv
mov
adc
xchg
pop
call
fld
push
mov
cmp
mov
cmp
xchg
inc
cmp
test
pop
inc
retf
enter
or
and
dec
scas
xor
pop
(bad)
jecxz
test
mov
pop
icebp
mov
repz
add
retf
nop
clc
fisttp
retf
test
mov
cmp
push
add
mov
test
ja
das
mov
mov
ret
pop
sub
retf
jb
call
in
test
pusha
xchg
xor
addr16
jns
pop
and
xor
and
adc
jmp
sbb
mov
ret
addr16
cld
js
repz
sbb
in
shl
mov
leave
test
pop
and
repnz
pop
jae
dec
pop
jne
xchg
push
jne
mov
jae
aad
pop
mov
lahf
dec
xor
call
lods
ret
idiv
mov
imul
ret
add
movs
mov
sbb
std
jl
je
gs
js
push
jb
imul
and
ins
xchg
mov
fidiv
jmp
imul
jg
jbe
dec
adc
inc
ja
xor
lds
pop
adc
test
lock
popf
retf
mov
(bad)
call
outs
jno
lds
sahf
mov
imul
mov
addr16
test
add
sar
dec
jecxz
push
adc
xchg
(bad)
scas
and
mov
add
cmc
fdiv
mov
fstp
sub
jbe
retf
out
xchg
mov
mov
cmp
daa
mov
add
mov
outs
inc
(bad)
mov
inc
test
or
jnp
inc
inc
sahf
push
xchg
pop
jmp
call
stos
inc
popf
jne
or
pop
stc
mov
jg
cdq
popa
add
sub
lahf
and
std
jge
ret
xchg
enter
pop
sbb
dec
arpl
fistp
jge
inc
mov
pushf
out
lock
inc
push
loopne
push
add
mov
pop
jne
sub
mov
mov
popa
jp
push
sbb
out
mov
loope
test
jmp
push
mov
es
loop
inc
push
mov
push
mov
repz
scas
xchg
stc
jo
mov
scas
call
fdivp
add
add
xor
cmp
cdq
fisubr
mov
mov
(bad)
mov
rcl
mov
push
lock
les
ret
je
sbb
ds
xchg
aad
(bad)
dec
add
inc
addr16
cmp
inc
call
ja
shr
push
js
jmp
jge
cmps
dec
pop
jb
cmc
ds
mov
mov
jmp
mov
loopne
test
jno
push
outs
fsub
pop
mov
dec
seta
nop
cdq
adc
div
pop
addr16
dec
ss
xor
dec
push
inc
scas
cmps
fild
ins
pusha
adc
test
xor
ret
pushf
mov
mov
test
paddsb
add
mov
jbe
mov
or
pop
cmp
inc
sahf
aad
jecxz
jns
ins
mov
aaa
cdq
sti
mov
(bad)
call
inc
add
(bad)
out
fwait
jne
clc
cli
pop
xor
inc
das
imul
iret
xchg
pusha
xlat
(bad)
lds
pushf
imul
retf
inc
sub
in
movs
jmp
xchg
retf
retf
loope
test
or
jbe
scas
jmp
ins
inc
inc
dec
jno
mov
add
and
dec
inc
(bad)
enter
xchg
cmp
imul
jae
add
pop
comiss
in
mov
bound
sbb
mov
and
clc
outs
inc
bound
test
jp
push
outs
in
(bad)
push
push
int3
add
mov
ds
daa
mov
mov
and
jp
mov
xor
sahf
mov
dec
and
fld
aas
or
shr
mov
mov
jns
or
inc
repz
jmp
sub
rcr
mov
data16
mov
daa
out
add
lods
mov
mov
push
mov
or
or
jbe
data16
ror
cwde
xor
addr16
test
sub
xor
test
add
dec
mov
push
inc
mov
mov
lods
mov
or
mov
loop
jge
mov
imul
retf
fs
mov
adc
neg
push
dec
ret
fnstenv
enter
nop
lock
es
outs
cli
sbb
cmp
jmp
or
inc
mov
ror
jb
adc
jp
or
nop
scas
fadd
add
cdq
movs
adc
sbb
loope
mov
js
mov
sub
std
fcmovnbe
jl
sub
pushf
aam
xor
aam
ins
out
scas
dec
xchg
jecxz
cvtpi2ps
and
push
aas
js
or
jle
pop
pop
xor
popa
dec
mov
xchg
cmp
push
fistp
and
retf
mov
push
call
out
jne
test
pop
bound
jle
dec
out
pop
imul
les
adc
hlt
jmp
inc
mov
call
mov
stos
inc
mov
adc
jno
test
mov
ficom
and
add
mov
xchg
mov
jno
inc
leave
jbe
push
js
test
in
add
pop
retf
cwde
or
mov
lock
out
dec
dec
or
repz
xchg
hlt
imul
test
cmp
ins
push
push
push
mov
inc
push
dec
je
es
mov
dec
push
add
jo
inc
push
pop
sbb
and
mov
test
inc
sub
push
arpl
cdq
inc
fadd
sbb
outs
fld
movs
sub
bound
and
pop
push
jae
mul
pop
mov
pushf
ret
into
mov
push
dec
scas
push
push
mov
nop
or
movs
cli
dec
je
push
mov
pop
dec
leave
sub
movs
pop
movs
xchg
xchg
dec
neg
outs
inc
add
push
retf
push
adc
inc
sub
sti
sub
push
mov
add
leave
fld
loop
outs
std
push
aad
in
daa
mov
cmp
mov
xor
sbb
sbb
mov
xchg
xchg
or
aam
test
imul
jo
sub
sbb
out
mov
mov
call
inc
test
aaa
or
and
sub
push
outs
xchg
fnstenv
xor
and
in
scas
rol
cs
ss
mov
div
leave
call
leave
xchg
pop
push
daa
(bad)
loope
mov
push
cs
cmp
sahf
push
push
inc
shl
and
inc
xlat
mov
retf
movs
pop
xor
in
ss
rcl
push
in
sbb
mov
ins
aad
lods
and
mov
xchg
cmp
dec
adc
dec
adc
test
imul
ins
and
das
jne
out
(bad)
ficomp
in
sbb
test
pop
jle
pop
cmc
cmc
out
mov
adc
in
mov
or
mov
mov
cld
inc
adc
sub
sub
into
sbb
sbb
aad
sub
cli
push
mov
enter
xor
bound
(bad)
hlt
dec
sar
into
retf
sub
dec
dec
adc
sbb
out
jp
in
ja
inc
repz
sti
add
xchg
xchg
aaa
mov
mov
sbb
mov
push
mov
cli
adc
pop
xchg
(bad)
dec
adc
inc
and
jno
(bad)
ins
inc
pop
xchg
repz
pop
jbe
or
lods
cmc
inc
call
sub
adc
ins
cmp
push
int3
(bad)
(bad)
pop
loope
movs
jge
rol
nop
scas
jle
sbb
sbb
test
ror
cmp
in
jge
sub
inc
mov
aad
test
xor
cmps
das
jo
fs
and
or
sub
aad
pushf
dec
in
mov
pop
out
lahf
xor
mov
mov
add
arpl
push
mov
mov
fbld
fidivr
mov
sar
cmp
test
fdiv
dec
push
cwde
jno
jecxz
jne
in
out
ss
mov
sti
xchg
xor
fwait
xchg
mov
dec
ins
push
or
fcomp
xor
add
mov
jg
pushf
jnp
hlt
not
sbb
and
or
adc
mov
arpl
xchg
or
mov
aad
std
sub
lods
add
jg
sbb
push
jp
add
inc
loope
jmp
inc
and
lock
sub
movs
int
jmp
mov
cs
daa
pop
jecxz
nop
aas
(bad)
sbb
cmp
jp
xor
cmp
jb
xchg
ins
xor
aad
cmp
idiv
add
arpl
das
popa
bound
(bad)
sub
or
sub
scas
inc
out
mov
popf
jo
xchg
jbe
dec
or
push
xlat
xor
int3
dec
pusha
mov
shr
and
sti
mov
fistp
mov
repnz
outs
cld
pop
pop
sub
mov
add
xor
or
or
cmp
and
jmp
jl
cmc
add
mov
ins
lea
iret
sti
sbb
mov
dec
test
std
xchg
fcom
in
or
xchg
retf
sub
xchg
mov
in
pushf
lods
es
cmp
aad
fcmovnbe
mov
ss
pop
sub
fisttp
adc
add
into
push
in
ss
xor
mov
jbe
cmp
push
(bad)
xor
div
mov
sub
popf
and
sbb
bound
lods
scas
push
pop
inc
mov
pop
ds
pop
lahf
inc
out
nop
sbb
shl
fdivr
sbb
retf
jmp
jmp
dec
xor
cmps
and
loope
adc
xor
pop
lea
add
sbb
addr16
ins
icebp
pushf
mov
mov
jg
push
sbb
mov
hlt
mov
cmp
retf
mov
in
cmp
push
cmp
fdiv
cmp
out
popa
jmp
retf
mov
fdiv
or
das
adc
js
test
outs
xor
in
and
push
adc
mov
test
icebp
mov
shl
test
in
add
cmp
maskmovq
idiv
push
movs
cmp
dec
xchg
push
das
pop
(bad)
mov
fistp
scas
inc
js
dec
sbb
test
or
cli
out
mov
les
mov
mov
sbb
pop
mov
les
call
pop
xor
or
jnp
aas
clc
retf
sti
sbb
mov
mov
mov
shl
outs
mov
inc
mov
and
cli
ror
sbb
sti
pcmpgtd
gs
retf
or
cwde
scas
pop
pop
loopne
aam
(bad)
mov
fwait
or
icebp
jno
pop
sub
jp
mov
je
ja
cld
xchg
fisttp
fcmovnu
cs
mov
or
mov
or
jge
mov
test
mov
es
clc
ror
jmp
ror
jno
cmps
xchg
fild
add
xchg
fistp
aam
std
cmps
rcl
retf
movs
daa
add
outs
cli
jae
add
push
push
xchg
outs
mov
lds
pop
cmp
retf
test
add
fs
add
mov
add
mov
nop
xchg
loopne
(bad)
shr
mov
lea
fwait
ror
scas
test
stos
retf
test
enter
sub
lock
add
push
ja
ror
out
push
and
adc
int
and
jl
lods
xlat
jo
cmc
lock
inc
jl
adc
and
xlat
out
push
jae
jl
xchg
adc
jne
(bad)
(bad)
test
je
out
pop
es
jg
loop
repz
dec
test
xlat
xor
push
inc
out
push
cld
xchg
aaa
pop
mov
pusha
push
dec
jnp
or
xor
mov
(bad)
xor
add
inc
pushf
bound
es
(bad)
pop
or
call
sub
xor
(bad)
repz
das
test
call
je
xor
sbb
sbb
xor
outs
and
jle
loopne
pop
jbe
lds
out
scas
push
fs
mov
xlat
fiadd
add
(bad)
cmps
mov
or
inc
xchg
xor
call
and
dec
cmp
fnstcw
retf
sub
test
cs
or
xchg
dec
jo
ins
jmp
test
repnz
jns
jmp
and
jmp
cmp
mov
out
push
out
mov
shr
pop
sub
lods
sub
retf
das
dec
xchg
push
sbb
pop
in
cmp
jnp
sbb
mov
jl
xchg
dec
push
(bad)
push
out
mov
inc
je
cli
sahf
repnz
dec
call
mov
loope
cmp
test
out
jne
repnz
rcl
in
je
xor
xchg
test
or
xor
imul
or
popa
popf
cmp
sbb
rcr
loope
cwde
aas
and
aad
sbb
test
(bad)
fsub
jne
push
lods
cmc
inc
fidiv
rcl
pop
int3
jnp
and
es
or
ret
xor
mov
inc
cmps
xchg
adc
gs
jge
jg
bound
or
fisttp
pop
cmp
mov
mov
sahf
stos
frstor
cmp
mov
xchg
dec
or
or
dec
and
mov
and
mov
lods
retf
pop
adc
push
lahf
in
test
xchg
add
or
push
push
test
inc
or
ja
adc
pop
shl
inc
xor
aad
jbe
fnsave
push
leave
(bad)
fs
inc
mov
or
or
retf
test
adc
cmp
and
dec
and
adc
pop
push
jns
aad
jo
mov
push
into
aaa
xor
jns
pop
dec
or
int
jbe
lea
mov
xchg
adc
cmp
jecxz
adc
ds
ds
mov
inc
pop
imul
aam
outs
mov
test
in
mov
dec
fs
add
dec
les
imul
movs
sbb
dec
idiv
fist
inc
lods
stos
sbb
pop
hlt
test
adc
dec
out
and
inc
test
call
sbb
retf
mov
dec
add
mov
stc
or
aad
sbb
ins
out
bound
and
add
or
fild
or
add
lods
sahf
mov
retf
sti
mov
in
jo
cs
push
mov
dec
test
pop
icebp
enter
(bad)
fistp
fld
jne
push
jecxz
shl
test
mov
inc
sbb
retf
xchg
sub
or
rcl
mov
fimul
cmp
dec
inc
lods
xor
lds
jnp
leave
cmps
add
les
sbb
cmp
out
arpl
retf
mov
cmc
in
loop
fincstp
fcmovbe
sbb
xchg
cmp
mov
dec
and
cwde
add
les
and
cwde
int3
mov
xchg
jb
or
cmps
inc
and
(bad)
sti
mov
imul
pushf
pop
stos
push
jo
jo
jbe
jge
outs
cmps
dec
pop
inc
push
mov
inc
mov
adc
jle
xchg
lods
ja
push
int
out
mov
mov
stc
cld
push
popa
sbb
xchg
das
int
mov
mov
mov
sub
xor
(bad)
xor
jnp
inc
retf
dec
push
sti
mov
sub
fwait
or
ret
inc
outs
int3
xchg
bound
enter
stos
and
test
idiv
xor
push
loope
lahf
nop
inc
js
mov
jecxz
push
cs
call
push
es
mov
sbb
pop
cmp
(bad)
dec
push
add
push
shr
cmp
cmp
call
mov
rol
push
pop
int
push
push
mov
and
cmp
mov
sub
(bad)
mov
out
shr
mov
jg
daa
dec
pop
push
pusha
cmp
pop
out
rcl
inc
mov
mov
int
ficom
imul
aas
outs
mov
aaa
and
sar
or
adc
leave
(bad)
(bad)
jmp
test
fldcw
pop
jmp
mov
pop
jae
xchg
fcmove
and
pop
push
cwde
icebp
out
gs
dec
xlat
inc
aas
xchg
push
mov
div
(bad)
ror
out
push
xor
(bad)
mov
ret
inc
fs
scas
in
mov
jge
mov
pop
cmp
fisttp
add
xor
pop
loope
(bad)
mov
xor
xchg
dec
dec
and
imul
dec
jmp
pop
push
cmp
bound
(bad)
out
and
mov
lods
fprem
add
repz
daa
aam
sub
inc
adc
stc
adc
fld
push
(bad)
cli
je
les
jae
aad
and
cmp
dec
aas
jle
xchg
jmp
or
aaa
test
dec
push
mov
and
push
mov
pusha
adc
push
test
into
fbld
xchg
xchg
iret
pop
pusha
push
inc
jns
jns
xchg
dec
rol
add
clc
ror
outs
sbb
mov
sahf
fild
cmp
jl
dec
cmp
sbb
jecxz
adc
fist
fs
je
push
push
in
in
jnp
dec
lods
sar
ss
xchg
out
push
mov
xchg
in
jbe
mov
sub
mov
mov
fldenv
mov
(bad)
in
mov
jecxz
pop
cmp
aam
push
and
xchg
mov
pop
sbb
xor
retf
inc
cmp
or
pop
cld
push
std
lods
inc
mov
push
adc
(bad)
in
(bad)
fbld
push
add
pop
in
cmp
loop
fdiv
or
xchg
movs
iret
pop
jl
in
push
cmp
and
add
sti
sahf
jmp
(bad)
mov
mov
jno
or
jecxz
fstp
das
add
xor
push
scas
lds
sti
aas
adc
jp
stc
push
mov
jno
fcmovnbe
out
sbb
inc
xchg
scas
push
imul
xor
gs
mov
lea
xor
fcmovnb
jne
mov
ds
push
ja
mov
popa
(bad)
mov
mov
xchg
mov
icebp
pop
mov
mov
lds
adc
lods
lods
into
xor
mov
mov
sbb
xchg
in
cmp
popf
(bad)
call
scas
xlat
mov
stc
jno
ins
mov
push
loope
ss
leave
je
outs
aaa
loopne
jne
mov
mov
cmp
sub
cmp
(bad)
jmp
pop
cdq
pop
icebp
jle
test
mov
int
mov
pop
xchg
cmc
push
or
xchg
add
ficom
out
loop
test
jmp
inc
adc
mov
fnstcw
(bad)
push
addr16
mov
shl
(bad)
pop
mov
jg
inc
jns
mov
or
adc
jae
and
jg
sub
call
jno
sysret
mov
and
adc
retf
movs
sub
loope
mov
lods
adc
sub
jbe
imul
out
out
pop
addr16
test
jne
dec
test
push
push
cmp
into
add
ins
outs
clc
gs
xor
movs
xor
push
scas
(bad)
clc
js
push
cmp
enter
bound
cmp
shr
sahf
push
mov
aad
loop
jl
fcomp
not
sbb
into
mov
jecxz
(bad)
push
sub
outs
test
ret
retf
jne
inc
clc
jno
stos
lea
ins
mov
mov
mov
imul
or
sub
xchg
movs
jae
push
push
std
test
repz
fwait
into
mov
xchg
cmp
call
cli
xchg
adc
fnstenv
jl
enter
fnsave
sbb
(bad)
adc
sahf
push
adc
add
adc
dec
inc
push
xchg
dec
jne
sbb
mov
lahf
loop
lahf
in
call
and
pop
pop
imul
sub
mov
fcomi
mov
pusha
shl
lods
js
mov
je
mov
pop
aad
jg
loope
fld
pop
xchg
into
jecxz
lods
push
call
and
shl
inc
sbb
xor
in
push
fninit
jb
mov
in
aam
jne
cs
push
push
add
loope
das
fbstp
out
lea
push
lods
ins
cmps
iret
mov
cli
aas
popa
das
(bad)
stos
dec
mov
cmp
mov
out
stc
jl
or
cwde
mov
jne
sub
xchg
(bad)
fild
lds
stc
jp
pop
mov
jmp
pop
xchg
call
nop
es
jp
in
(bad)
and
rcl
mov
mov
add
mov
imul
mov
xchg
cmp
mov
addr16
pop
xlat
dec
xchg
push
cmp
sar
aam
fst
(bad)
lock
or
std
call
mov
dec
sub
push
pop
xchg
lahf
pop
adc
add
pop
retf
and
xchg
stos
xchg
push
pushf
sub
sbb
add
mov
pop
push
and
(bad)
js
or
nop
out
in
pop
imul
xor
jmp
ins
dec
mov
test
pop
push
xchg
hlt
mov
and
dec
daa
adc
enter
xor
pusha
int
(bad)
aas
jbe
or
pop
sub
jns
jge
dec
mov
lds
mov
push
push
movs
adc
dec
lods
jle
jne
inc
dec
push
fsubr
pop
jmp
pop
call
cmps
push
or
mov
push
add
cwde
push
lahf
shl
and
in
ja
jl
dec
(bad)
lods
xor
push
mov
cmps
push
mov
add
or
xor
call
mov
fistp
dec
das
pop
ja
pop
aaa
shl
call
pop
sbb
lods
(bad)
stc
pop
pop
(bad)
mov
ret
and
xchg
cmp
cmp
cmp
push
add
int3
add
and
and
cmps
sub
in
sub
jg
mov
inc
xor
js
out
xchg
inc
push
cmp
push
test
xchg
sub
mov
and
popf
mov
xor
mov
je
js
aam
mov
dec
sbb
jne
xchg
loope
cli
outs
sahf
pop
call
xor
dec
daa
add
mov
ror
mov
test
xor
mov
stos
xor
pop
pop
int3
and
ins
dec
mov
lahf
adc
(bad)
aam
sub
mov
push
aaa
ret
mov
call
xchg
(bad)
mov
jg
out
jae
lods
loop
cmps
out
inc
push
dec
dec
ds
mov
cmps
loop
js
in
mov
xor
add
xchg
add
jg
retf
sar
neg
daa
push
lods
loopne
test
add
xor
mov
xchg
jo
test
dec
pop
pop
pop
cmps
or
in
jp
pop
or
pushf
sub
xor
ror
iret
adc
cmp
dec
xor
push
(bad)
in
stc
mov
cmp
add
sbb
outs
pop
sbb
(bad)
sub
iret
fnstsw
das
dec
data16
mov
or
mov
cmp
(bad)
scas
or
push
jo
jbe
dec
dec
adc
ins
dec
clc
loope
adc
mov
dec
into
push
ja
adc
popa
or
(bad)
mov
jmp
jae
or
call
push
arpl
sbb
int
mov
jle
repnz
retf
push
movs
aas
fwait
push
sub
mov
push
add
and
fchs
ss
(bad)
cmp
mul
mov
pop
jge
in
jmp
aad
push
repz
push
ret
sbb
hlt
cwde
cld
addr16
jmp
mov
push
push
mov
sub
sahf
or
(bad)
and
test
ins
mov
fisttp
das
and
xchg
add
sbb
pushf
popf
movs
out
jne
xor
idiv
mov
jo
and
jae
fsubr
fwait
loope
leave
mov
xchg
cmp
xchg
adc
lock
(bad)
mov
imul
push
jbe
xlat
xor
shl
jnp
rcl
je
cmps
in
retf
dec
sahf
adc
and
sub
pop
jle
aam
test
pop
dec
cli
pop
je
shr
imul
push
mov
test
pop
and
call
add
repnz
daa
sar
jo
ins
popa
loop
xchg
adc
dec
sub
packsswb
jecxz
jp
arpl
sub
cmp
outs
inc
jae
repz
pop
fisubr
sbb
sahf
(bad)
aad
push
cmp
in
pop
adc
enter
mov
(bad)
std
sbb
add
inc
adc
xchg
sar
sub
stos
bound
arpl
inc
xor
movs
ret
or
out
dec
ja
sbb
mov
lahf
and
popa
sub
pop
sbb
dec
test
dec
inc
test
mov
push
sti
int3
xor
mov
(bad)
xor
fadd
arpl
xlat
lods
sahf
(bad)
in
xchg
inc
sbb
outs
gs
stos
sub
pop
repz
push
lahf
fisttp
xchg
lea
cmp
inc
lock
ret
inc
adc
div
pop
fisubr
and
sub
fnstsw
fs
inc
mov
xchg
cwde
xchg
call
and
xchg
xchg
and
add
or
xchg
mov
aaa
mov
std
scas
mov
sub
or
adc
lods
sub
push
scas
adc
pop
sbb
shr
mov
addr16
cmp
(bad)
adc
cmps
add
push
ja
popf
xchg
inc
ja
bound
bound
push
jb
js
cs
push
inc
ja
xchg
mov
in
push
fild
mov
cmp
std
sub
push
mov
(bad)
sbb
jmp
popa
les
icebp
sub
or
ja
cli
pushf
xchg
aas
dec
mov
fwait
push
imul
xor
jmp
inc
outs
popf
(bad)
push
ins
outs
adc
test
icebp
sub
lods
push
in
ds
dec
stos
and
(bad)
xlat
jg
and
or
dec
(bad)
rol
jne
icebp
out
lods
or
std
cmps
test
xchg
push
xchg
xor
cmp
jns
jmp
mov
jbe
inc
mov
xchg
push
or
xor
add
push
add
sub
pop
push
ficom
mov
mov
aad
(bad)
outs
jbe
and
push
adc
sbb
and
loop
(bad)
and
leave
xchg
(bad)
pushf
fdiv
aaa
fidiv
mov
es
pop
and
mov
stc
add
add
and
jmp
cdq
inc
dec
pop
adc
jne
frstor
sub
push
pop
movs
gs
dec
mov
dec
xor
or
push
mov
call
cmp
pushf
jle
inc
fld
int
inc
cdq
jge
in
adc
xor
xchg
shr
or
popa
jmp
out
clc
mov
pop
and
push
sbb
test
rcl
les
scas
jnp
inc
shr
mov
popa
mov
mov
mov
ds
enter
loope
jle
std
push
and
adc
scas
push
or
dec
and
cmp
call
jmp
shl
xlat
push
aad
hlt
fsub
icebp
sbb
adc
sbb
(bad)
cmp
mov
pusha
test
sti
lahf
hlt
add
or
adc
cmp
(bad)
or
add
or
push
sub
imul
rcl
push
aad
and
mov
(bad)
fwait
inc
xchg
push
icebp
test
push
and
adc
sbb
mov
push
pop
hlt
sti
inc
mov
mov
loopne
retf
imul
dec
nop
ficom
fwait
jecxz
push
aas
mov
loop
cld
fimul
mov
ret
pusha
and
mov
pop
pusha
push
iret
out
(bad)
sti
outs
xor
movs
sahf
sbb
in
pop
mov
dec
test
jb
(bad)
test
jbe
push
shl
xor
sbb
adc
jecxz
xchg
adc
inc
adc
fnstenv
pop
push
cmp
popa
loop
dec
dec
jp
ds
div
rcl
dec
xor
xchg
fisub
sub
leave
sub
mov
xor
sub
std
mov
cmp
mov
jmp
das
sbb
lock
push
icebp
pop
out
pop
ret
jae
out
mov
dec
lock
out
ror
adc
(bad)
call
mov
stc
pop
push
dec
pop
je
push
outs
push
xor
cmc
pop
or
jbe
jge
mov
lods
and
hlt
xchg
or
sbb
lea
inc
push
mov
mov
or
dec
ds
adc
lods
xor
(bad)
dec
xor
rol
mov
push
inc
shl
sbb
es
stos
cli
jecxz
test
mov
cdq
mov
jmp
jmp
pop
push
test
pop
mov
pop
sbb
push
adc
sti
or
iret
jmp
aad
xor
mov
sti
xchg
pop
fwait
push
sub
pop
xchg
mov
inc
mov
jmp
sub
push
jge
or
jo
pop
jle
cmp
mov
jmp
jo
xchg
jle
pop
dec
fdivr
dec
dec
dec
out
or
pop
nop
jecxz
repz
sub
les
xlat
sbb
sub
and
sub
or
jbe
inc
pop
je
pop
shr
xlat
cmp
call
fcmovu
test
imul
sahf
xor
push
push
aam
sub
ja
jp
out
and
cmp
xor
imul
outs
cmp
add
sub
ror
in
or
mov
mov
adc
test
ins
pop
test
sbb
jno
stc
jecxz
mov
push
or
add
icebp
adc
mov
cli
add
enter
cmp
and
sbb
arpl
fistp
sbb
pop
sbb
mov
hlt
xchg
loopne
cvtpi2ps
cld
shl
or
nop
xchg
stos
inc
jg
jns
jae
movs
push
retf
xchg
and
jno
in
aam
leave
neg
xchg
or
push
and
mov
shr
daa
adc
dec
sbb
repnz
pop
lock
xlat
inc
rol
cli
mov
mov
jl
pushf
sbb
in
out
jns
ficomp
xor
fcmovnu
jbe
nop
dec
adc
jae
rcl
jo
rcl
inc
adc
inc
cmps
mov
loope
sub
xchg
cdq
(bad)
sub
mov
neg
xor
jae
test
rcr
cmp
jo
jo
addr16
dec
ss
ror
jp
cmp
and
or
push
push
xor
mov
call
dec
sub
bound
xchg
push
mov
inc
in
sbb
fmul
ss
enter
add
mov
mov
call
rcl
dec
les
mov
stos
call
push
adc
cmp
outs
inc
jb
enter
shld
xor
mov
mov
movs
sti
add
icebp
pushf
pop
iret
repnz
dec
xchg
mov
adc
adc
enter
dec
addr16
lods
inc
rol
lock
es
mov
add
mov
rcr
movs
test
pusha
scas
dec
xchg
push
xchg
pop
shl
int3
sti
lock
dec
lods
cmp
xchg
cdq
adc
out
or
call
and
mov
mov
retf
mov
sbb
dec
pop
sub
jbe
add
mov
call
sub
repz
enter
sub
dec
dec
gs
adc
cmp
jmp
xchg
dec
cli
movs
ret
mov
dec
nop
(bad)
fstp
in
add
add
sbb
test
aas
jne
cmp
jo
xchg
mov
add
pusha
out
xchg
ins
fisttp
fstp
fistp
xor
jecxz
inc
pop
lods
lock
mov
addr16
jae
cmp
jbe
inc
ins
in
mov
mov
pop
(bad)
inc
push
mov
lea
ror
cmps
outs
add
cmp
mov
xlat
pop
jns
ds
out
xor
mov
nop
out
adc
mov
int
test
(bad)
(bad)
mov
in
scas
pop
scas
aaa
xor
leave
pop
push
sub
dec
add
or
imul
test
stos
jae
(bad)
mov
rol
push
jae
pop
(bad)
xor
iret
nop
ret
xlat
jo
js
jnp
adc
cmps
pop
ror
pop
xor
dec
scas
cmp
adc
mov
popa
test
sub
jle
aad
or
fwait
cmp
or
bnd
jno
mov
adc
(bad)
add
pusha
ror
mov
cmps
ret
test
fimul
rcr
loope
dec
je
hlt
pextrw
mov
test
retf
imul
je
bound
sub
imul
xchg
dec
cmp
sbb
jmp
dec
dec
(bad)
xor
xor
jne
fisttp
mov
les
int3
mov
push
xlat
popa
loope
mov
and
sub
pushf
(bad)
fadd
nop
mov
lods
add
cmp
push
icebp
or
jne
push
fisub
outs
std
pushf
pop
lahf
mov
push
sbb
in
inc
mov
iret
sub
lds
inc
add
and
jge
sti
rol
jmp
ins
test
je
jnp
call
jae
addr16
adc
mov
and
ffreep
aas
push
lds
cdq
pop
ins
mov
push
fidivr
cmps
retf
mov
and
add
loop
mov
je
lods
shl
or
cmp
ror
add
lahf
mov
cli
retf
mov
jbe
jbe
call
sub
pop
dec
rcpps
sahf
push
jns
mov
aam
retf
clc
add
mov
pop
mov
dec
fldcw
jp
jmp
xor
sub
inc
xchg
or
sbb
mov
xor
iret
pop
aas
push
cmc
cmps
cmp
cwde
mov
xor
sub
(bad)
js
dec
int3
push
ins
mov
loopne
test
jge
ror
jecxz
mov
dec
mov
icebp
push
iret
adc
push
and
add
xchg
arpl
jne
lods
pop
mov
xchg
and
test
enter
xor
(bad)
leave
or
jmp
pop
cmp
mov
push
ds
adc
hlt
jnp
xchg
add
(bad)
cmps
adc
(bad)
not
(bad)
lahf
sti
add
pushf
mov
arpl
cdq
pcmpeqb
inc
addr16
mov
aas
stos
out
sub
fucomip
pop
lds
pushf
cmp
mov
cmp
jbe
push
push
aas
nop
jecxz
mov
inc
adc
call
rcr
jmp
lock
dec
js
pop
mov
call
jbe
mov
xchg
adc
pop
enter
stos
arpl
mov
lds
mov
lods
and
(bad)
test
stc
pop
pop
push
popf
mov
dec
sub
setno
test
gs
xor
dec
add
adc
adc
popa
shl
push
adc
loope
sub
test
inc
fcmovbe
fcmovnb
cmp
mov
and
bound
into
add
(bad)
enter
push
and
mov
pop
push
dec
scas
jne
inc
(bad)
sbb
pop
punpcklbw
inc
mov
gs
add
push
aam
jns
push
pop
pop
add
jb
ss
(bad)
sub
fwait
cwde
call
jmp
sub
pop
xchg
adc
jb
test
movs
mov
dec
pop
not
repz
push
out
lds
(bad)
add
test
ss
sbb
mov
dec
jmp
cmp
in
std
lods
(bad)
aad
stc
mov
in
data16
(bad)
movs
inc
pop
call
pop
aaa
das
jmp
pop
(bad)
jl
ins
add
xchg
mov
fimul
pop
xlat
sbb
inc
aam
leave
aaa
xor
jbe
adc
jmp
test
hlt
pushf
push
xor
lock
jle
mov
stos
xchg
jg
test
xor
cmps
iret
loopne
ins
jmp
jle
mov
push
int
pop
inc
ret
inc
bound
cwde
jne
add
dec
add
dec
sbb
mov
adc
pop
xchg
enter
fist
dec
or
dec
push
ret
xor
xor
pop
xchg
fild
cdq
push
pop
fadd
sbb
lods
mov
sbb
repnz
mov
into
inc
ins
jbe
xchg
sub
push
sbb
retf
loope
enter
jl
ja
loopne
pushf
mov
or
xor
add
dec
ret
jns
dec
push
out
pop
int3
sbb
xor
adc
lock
mov
jnp
sub
jmp
movs
lods
ins
jmp
cmp
adc
ret
xor
(bad)
dec
dec
and
popa
pop
and
aas
inc
pop
xor
push
sbb
mov
retf
dec
rcl
out
inc
arpl
test
repz
push
xchg
aad
lea
int
cdq
das
push
mov
xchg
xor
dec
pop
std
jl
ret
inc
dec
jo
mov
ror
sbb
mov
pop
push
retf
lahf
and
data16
inc
sahf
or
js
movs
jne
push
sub
sbb
fsubr
jne
sbb
in
sub
aad
aas
retf
ja
mov
jecxz
cmp
sub
and
into
cld
mov
or
xchg
xchg
xor
call
movs
inc
test
push
dec
push
xchg
inc
arpl
push
popa
jmp
xchg
out
mov
sbb
mov
adc
pop
out
lahf
nop
dec
in
push
jb
add
shr
mov
inc
ret
mov
pop
out
cmp
(bad)
mov
add
add
dec
hlt
cwde
fcomp
inc
rcl
pop
push
push
stos
mov
sbb
not
stos
mov
ins
add
mov
cli
sbb
sub
cmps
add
shl
scas
out
ins
outs
jmp
test
adc
lahf
in
fs
pop
mov
sbb
ret
mov
cmps
enter
push
cmovs
sbb
pop
ins
cmp
fimul
xor
and
cwde
lds
push
xchg
dec
cmp
and
out
pop
retf
jno
mov
jbe
mov
stc
jle
push
js
push
jl
addr16
rcr
mov
iret
mov
into
sub
scas
add
dec
adc
addr16
rcl
jle
lea
cmp
jmp
cmp
pusha
jl
xchg
adc
or
jle
call
dec
ror
pop
push
popa
push
fistp
dec
cmc
call
fsubp
cwde
sbb
pop
pop
outs
das
ss
cwde
in
dec
add
mov
inc
repnz
repz
jns
cmc
les
mov
js
jmp
pop
jmp
jns
xor
cdq
xchg
inc
repz
test
cmp
cmp
mov
and
arpl
cdq
out
imul
in
cmp
call
(bad)
push
fst
mov
dec
(bad)
push
push
and
(bad)
mov
or
test
std
rcl
dec
inc
data16
mov
lock
xor
lwpins
mov
scas
(bad)
stc
les
ret
ret
stos
bound
cmp
wbinvd
test
test
mov
dec
xlat
mov
dec
jbe
ja
add
iret
shl
push
(bad)
icebp
xlat
retf
popf
sub
mov
pushf
and
dec
fistp
mov
in
inc
pop
imul
adc
inc
xchg
clc
dec
xor
inc
lock
jg
xchg
arpl
jbe
jno
popa
mov
jno
dec
imul
dec
adc
test
call
sub
sar
pop
sbb
mov
mov
mov
inc
sbb
pop
stos
aam
mov
out
add
jne
out
movs
and
push
icebp
adc
and
jae
sar
popa
sub
or
mov
ret
jmp
gs
xor
not
outs
repnz
sub
sbb
(bad)
inc
and
lds
push
jge
ror
jb
and
out
and
jb
cld
rcr
xchg
pop
pop
cmp
(bad)
jne
ret
je
fsubr
push
cs
jge
sub
mov
scas
cs
fdiv
or
xlat
and
out
arpl
outs
and
jbe
or
enter
daa
dec
and
ficom
push
push
aam
mul
adc
stos
pop
xor
outs
dec
les
movs
xchg
out
(bad)
in
mov
cwde
mov
mov
cmp
fstp
push
jmp
xchg
in
pop
xchg
int3
cmps
mov
cmp
cs
sub
mov
enter
push
xchg
or
sbb
jmp
or
test
sub
ds
add
mov
lea
xor
inc
stos
xlat
sbb
mov
sbb
fcomip
js
fnsave
(bad)
mov
xor
xchg
adc
sub
loop
ss
out
adc
(bad)
inc
mov
movs
adc
stos
bound
retf
mov
adc
(bad)
(bad)
jmp
outs
mov
and
and
push
pop
in
mov
xchg
mov
arpl
mov
cmp
or
adc
cs
retf
mov
sub
sub
mov
sbb
shl
jae
push
je
imul
mov
cmc
cmp
pop
dec
mov
jp
xchg
sbb
cmps
fnstcw
stos
dec
jge
cmp
movs
push
icebp
aam
xor
push
adc
(bad)
into
into
test
cmps
dec
aas
mov
add
jmp
cwde
mov
cld
dec
outs
sti
fistp
mov
iret
push
push
pop
inc
jbe
or
mov
mov
mov
lock
pop
cmps
xchg
sar
ret
mov
test
xlat
jae
push
mov
popf
dec
mov
fdiv
gs
ficomp
sub
ret
mov
icebp
mov
and
retf
sub
lock
sub
and
xchg
mov
lock
dec
add
push
jle
mov
mov
push
pop
xchg
xchg
sub
rcl
ins
dec
mov
pushf
push
cs
mov
neg
sub
adc
mov
sbb
not
sbb
sub
jo
sub
ds
pop
adc
scas
or
sub
pop
xchg
cmc
cmp
sar
and
ds
aad
mov
aaa
movs
jno
pop
mov
repz
mov
jnp
or
push
fisttp
call
int3
sub
out
xchg
or
and
and
fmul
pop
xor
faddp
int3
cmc
cmps
dec
inc
add
inc
mov
test
out
sbb
into
mov
hlt
mov
cmp
loope
adc
scas
pop
mov
sub
sub
and
jle
cmp
mov
adc
inc
or
lahf
push
jno
ret
jge
cmp
mov
push
int
mov
in
or
stc
xchg
push
mov
call
sub
ja
lahf
sahf
push
and
or
test
ret
pop
xchg
popa
push
mul
xor
mov
mov
jg
cmp
or
scas
movs
ins
in
repnz
inc
ins
adc
xchg
cmp
dec
pop
sub
xchg
mul
and
pusha
jecxz
sbb
cmp
movs
mov
xchg
pushf
jge
mov
pop
retf
mov
jbe
push
push
jbe
mov
jnp
mov
and
xlat
scas
or
out
int
enter
ror
dec
inc
repz
mov
adc
add
add
push
xor
jge
in
jmp
cmp
shl
mov
out
dec
xor
push
cmp
mov
push
pop
xor
stc
inc
bound
jge
push
jp
inc
push
dec
fsubr
jge
mov
or
or
fisubr
imul
cmc
and
mov
jmp
out
push
pop
pop
shl
xor
inc
mov
daa
(bad)
mov
aad
cmp
fst
dec
test
pop
mov
cmp
mov
cmp
mov
aam
test
mov
sub
(bad)
cmps
jle
repz
and
outs
sar
mov
jb
std
or
mov
mov
adc
(bad)
repnz
pop
shufps
daa
push
in
adc
dec
rcr
(bad)
jmp
xchg
jnp
mov
dec
rcr
jl
or
ret
or
dec
mov
mov
retf
ficomp
aad
push
(bad)
inc
pop
fist
dec
dec
sub
arpl
nop
outs
push
jae
push
sub
cmp
push
jnp
jns
mov
inc
aaa
add
loopne
arpl
fcom
rcl
bnd
loope
cs
sub
outs
sbb
mov
lods
xchg
inc
dec
add
loope
dec
stos
movsx
inc
xor
inc
jle
clc
loop
lods
inc
add
int3
adc
lea
retf
dec
xor
mov
cdq
(bad)
push
je
adc
ins
out
push
sub
adc
imul
sbb
mov
push
out
xchg
adc
jbe
fnstcw
push
mov
mov
mov
scas
jo
or
xlat
or
test
and
push
in
stc
clc
or
or
mov
sbb
xchg
push
or
inc
mov
xor
dec
or
retf
imul
sub
jmp
and
xor
cwde
jmp
test
mov
in
inc
or
std
mov
mov
js
jbe
jmp
xchg
cmp
fisttp
or
xchg
dec
int
stos
fidiv
stos
push
mov
pop
jmp
sub
sbb
mov
inc
shl
or
sbb
pop
(bad)
fisttp
push
add
jns
ret
retf
pop
mov
iret
inc
aam
sbb
(bad)
lea
cld
dec
mov
xor
je
dec
scas
mov
adc
push
xlat
out
xor
je
or
ins
sub
xchg
daa
add
push
xchg
cmp
es
arpl
jmp
(bad)
pop
mov
mov
lea
mov
jnp
outs
cmc
pop
push
push
punpckhbw
adc
or
in
push
mov
scas
iret
(bad)
pop
inc
jnp
out
cs
mov
add
movs
push
pop
in
adc
push
std
int
mov
retf
xor
xchg
js
ret
push
std
mov
movs
das
mov
or
ins
mov
mov
mov
cmp
iret
cmc
dec
fs
xchg
mov
mov
pop
and
or
inc
and
xchg
or
inc
add
add
and
sub
or
ret
cmc
or
cmp
xchg
clc
xchg
icebp
mov
xchg
jle
sysret
lods
push
lea
inc
aam
lods
int
inc
cs
iret
sti
sbb
sub
mov
inc
rcr
frstor
(bad)
pushf
sbb
jb
mov
push
xchg
ret
pop
ror
stc
scas
mul
pusha
ret
jnp
call
jno
add
xchg
aaa
jae
push
push
xor
sbb
in
inc
mov
jl
aam
test
out
cmp
fimul
(bad)
cmp
add
(bad)
icebp
sub
fsubr
test
xchg
fdivr
sar
mov
imul
dec
sub
cmp
aam
mov
addr16
sub
jl
mov
int3
aad
inc
(bad)
cmp
push
mov
and
cdq
push
and
lahf
or
hlt
cmp
add
mov
sar
sbb
push
fisubr
jmp
ins
add
fcomip
xor
cmp
fild
sub
cdq
ret
es
loope
jp
push
cmp
sbb
adc
jb
push
inc
mov
(bad)
loopne
movs
cmps
add
cdq
mov
sbb
xlat
push
es
or
sbb
add
loop
out
add
stos
and
out
ret
pushw
outs
bswap
mov
xchg
inc
mov
ins
jb
es
jbe
mov
or
push
add
cmp
sub
mov
cs
(bad)
ss
js
outs
pop
test
dec
pop
ror
mov
jno
mov
fwait
les
add
mov
or
cwde
dec
dec
cmp
pusha
mov
mov
movs
aas
pop
mov
adc
adc
mov
xor
(bad)
int3
test
mov
inc
mov
mov
ret
or
lods
pop
pop
xor
and
pushf
pusha
lods
pop
dec
pop
mov
adc
shl
std
sbb
stos
pop
scas
add
arpl
mov
mov
aad
call
cli
jo
xchg
jb
mov
cmp
push
sub
test
inc
push
int3
xor
leave
or
pop
xchg
add
xor
sub
cmps
mov
sbb
cdq
inc
or
jp
loopne
mov
cmc
push
je
jl
ret
rcl
push
ret
jmp
add
int3
cld
xor
ds
or
call
(bad)
push
or
imul
clc
test
mov
sbb
popa
dec
inc
sbb
xchg
imul
in
jmp
dec
sbb
push
pop
xchg
mov
and
jle
jae
das
cmp
ds
and
adc
or
mov
add
xor
add
sar
in
mov
sahf
adc
adc
lea
push
or
mov
js
es
fwait
jbe
ret
xchg
pusha
and
inc
test
add
mov
in
retf
adc
in
push
sub
scas
loope
scas
and
addr16
jg
test
mov
dec
out
das
mov
stc
popa
pop
push
fnstcw
inc
or
push
test
push
out
js
jle
mov
sub
jecxz
inc
test
and
pusha
ds
das
inc
add
(bad)
stos
data16
jnp
out
xor
sar
adc
pushf
mov
dec
fs
sbb
push
int3
xchg
xor
in
mov
repnz
inc
ds
push
fisubr
dec
add
jnp
cmp
sub
sub
adc
cwde
ins
fwait
and
push
inc
lds
sbb
mov
mov
inc
jnp
fild
imul
std
fs
sbb
mov
inc
inc
test
push
lods
mov
xchg
test
mov
pop
test
outs
movs
push
pop
pop
cmp
jnp
xchg
mov
mov
mov
ret
jg
pop
outs
dec
cmc
movs
add
jge
inc
(bad)
out
pop
xchg
add
push
mov
push
loopne
scas
sub
ret
dec
xchg
enter
dec
push
mov
repz
dec
jmp
mov
icebp
and
retf
ins
sar
push
repnz
mov
jne
jo
clc
sahf
mov
mov
xor
xchg
ss
rcl
loopne
pusha
sahf
cmp
test
shl
shl
and
or
adc
push
inc
cdq
mov
pop
add
loop
mov
sub
pop
in
jo
out
pop
or
push
jbe
aam
inc
jmp
imul
fimul
jbe
ds
jl
gs
(bad)
js
jnp
mov
hlt
or
mov
xor
out
push
cdq
cmps
jmp
xor
inc
sbb
add
iret
mov
xor
mov
retf
sub
cmp
push
out
xchg
(bad)
pop
mov
jae
test
addr16
in
aad
adc
push
mov
mov
jno
ret
aaa
or
inc
out
add
sti
and
into
fadd
jbe
or
out
sbb
xor
mov
popa
inc
adc
sub
fs
sahf
xor
jge
lea
mov
mov
test
aad
mov
push
pop
cs
xchg
push
popa
sub
xchg
in
lods
or
push
scas
ss
push
mov
ins
ins
lock
aam
test
leave
iret
cwde
test
cld
(bad)
loop
adc
js
icebp
test
movs
pop
ror
daa
aad
mov
lahf
add
mov
mov
(bad)
imul
fsub
and
and
sub
sar
and
pushf
jae
pop
jbe
imul
in
jne
in
loop
jmp
sbb
or
mov
add
js
enter
dec
xchg
ret
push
pop
(bad)
test
in
add
or
gs
icebp
jne
lods
lods
call
fcmovb
jne
js
sub
dec
push
sbb
clc
and
stos
push
out
imul
pop
mov
imul
dec
mov
mov
or
in
jecxz
fadd
xlat
sub
jle
jae
adc
adc
outs
inc
in
pop
mov
sahf
xor
int3
pop
jmp
adc
mov
mov
sbb
inc
aas
dec
mov
fdiv
sahf
xlat
ss
lock
out
adc
cli
fucom
add
push
imul
push
into
mov
xor
arpl
out
loop
cmc
push
xchg
out
xor
jae
jae
gs
mov
jne
or
fistp
lds
mov
movs
loop
mov
arpl
add
mov
test
xchg
mov
jg
out
jge
retf
cld
cmp
mov
push
sub
lock
pop
fcomp
aam
pop
pushf
lock
sub
xchg
sti
das
sbb
inc
push
test
test
aas
outs
pop
stc
mov
imul
add
loope
mov
shl
mov
loopne
push
mov
lock
xchg
mov
xchg
and
mov
shr
js
jp
and
shl
sbb
jmp
and
jle
cmp
out
test
push
pushf
neg
or
outs
out
sbb
adc
jnp
inc
aad
in
dec
sbb
std
imul
or
ja
jnp
lock
rcl
push
mov
leave
push
(bad)
faddp
sub
outs
in
push
cwde
adc
push
add
imul
stos
add
cmc
fwait
sub
cmp
ins
ret
in
lds
mov
mov
mov
sahf
dec
fwait
lea
and
ror
push
rcl
xchg
mov
pop
add
push
stos
popa
add
fs
nop
xchg
scas
xlat
jo
test
(bad)
aas
push
leave
adc
add
lea
repnz
(bad)
adc
shl
add
adc
mov
inc
mov
imul
loope
or
leave
push
push
stos
jae
jmp
iret
jmp
pusha
mov
push
jnp
(bad)
retf
(bad)
cmc
fsubr
cmc
(bad)
dec
test
in
popf
and
out
push
push
mul
jbe
mov
shr
bound
cdq
in
pop
xchg
out
pushf
sbb
(bad)
mov
(bad)
repz
dec
movs
call
sbb
adc
xchg
mov
or
repnz
aaa
test
and
(bad)
mov
in
ds
popa
jmp
pop
in
inc
(bad)
push
sbb
js
clc
daa
sbb
test
dec
inc
std
jo
arpl
pushf
xor
push
idiv
shl
neg
loop
push
mov
pushf
add
iret
loop
pop
fmul
cmp
imul
cmp
mov
aaa
add
and
xchg
mov
movs
(bad)
jb
cwde
xor
aam
or
and
movs
mov
push
(bad)
test
cld
mov
ds
sbb
add
(bad)
push
cmp
into
xor
mov
inc
stc
ret
lock
mov
ror
push
jmp
dec
sbb
fmul
icebp
push
(bad)
jbe
outs
cmp
js
jb
or
mov
push
add
push
mov
pop
aas
inc
xchg
lods
dec
gs
popf
push
pop
xor
pop
icebp
lock
pop
ins
jbe
inc
pop
call
ret
xor
sbb
sbb
and
shl
movs
ins
cmp
add
aam
out
adc
or
hlt
and
inc
xchg
jno
cld
aaa
ror
mov
inc
pop
sbb
xor
mov
jge
inc
mov
sti
sysret
(bad)
mov
pop
inc
push
in
lds
and
dec
jns
xor
mov
sahf
dec
jb
mov
inc
fs
mov
cmp
es
xchg
pusha
sbb
add
pop
rcl
inc
add
pop
mov
sbb
rcr
fldcw
jae
sub
sbb
push
cld
push
push
push
mov
loope
sti
(bad)
cmc
xor
or
iret
mov
or
clc
cmp
adc
ins
les
psubusb
stos
push
cmps
jmp
mov
or
ret
push
mov
xor
inc
dec
push
(bad)
(bad)
repz
dec
in
pop
inc
mov
sbb
call
pop
fist
hlt
in
test
nop
leave
push
ds
not
fild
push
popa
arpl
sub
imul
into
fcomp
mov
mov
stos
push
adc
mov
jp
inc
add
jnp
or
dec
jmp
mov
mov
cwde
mov
shl
jl
lods
sbb
in
mov
data16
leave
xchg
xor
lods
popa
sub
ds
adc
dec
bound
lods
int3
cmps
test
pop
arpl
bound
xchg
test
loop
inc
sbb
mov
stos
xchg
ds
inc
call
fmul
cmp
adc
or
mov
outs
xchg
aas
shr
pop
call
das
adc
(bad)
neg
popa
jb
int3
mov
jnp
pop
push
lds
jmp
pop
cli
hlt
aas
jmp
pop
scas
mov
imul
cmp
ins
jmp
outs
ret
movs
adc
add
jmp
cmc
and
ret
rcl
imul
(bad)
pop
mov
cwde
lock
push
jecxz
test
xchg
in
ins
cmp
jmp
cdq
fs
jmp
sbb
mov
and
push
cmp
int3
jae
icebp
dec
scas
push
mov
loop
cmps
cwde
les
mov
fsubrp
mov
mov
jl
push
xchg
fisttp
popa
aam
dec
aaa
cmp
pop
pop
push
sbb
add
loopne
test
sahf
mov
mov
in
sub
add
push
sbb
mov
or
adc
inc
jns
hlt
fsubr
xchg
and
sub
je
test
call
push
add
mov
pop
into
dec
(bad)
ds
cmps
xor
inc
mov
sbb
dec
fisub
jle
stos
sti
ins
xchg
sub
cmp
mov
and
inc
test
dec
and
cli
hlt
lahf
push
pop
ret
jo
xor
mov
fld
add
(bad)
fsub
xchg
pop
sbb
xor
push
push
cmovle
or
cld
jmp
dec
xor
fstp
shr
lds
mov
or
std
add
sbb
fistp
outs
cmp
(bad)
es
mov
mov
in
and
dec
test
int3
test
xor
retf
push
into
out
movs
mov
movs
stos
sbb
test
pop
in
adc
je
sbb
cmp
sti
jecxz
mov
jmp
jns
push
jo
push
pop
adc
icebp
imul
push
(bad)
adc
inc
test
xor
daa
enter
shl
jl
(bad)
cmps
jge
(bad)
in
push
inc
movs
daa
adc
int
scas
mov
pop
loopne
test
jle
adc
adc
into
add
mov
ret
add
jmp
adc
and
test
add
lds
adc
(bad)
xchg
adc
aas
xchg
xchg
xor
pop
stos
push
loop
jns
sbb
pop
inc
lods
into
mov
fisub
pushf
stos
into
mov
movs
and
jecxz
fist
adc
ins
fstp
jmp
lock
jb
lods
cs
sub
xchg
shl
and
das
mov
aas
stc
push
pop
mov
mov
dec
sbb
add
mov
aaa
outs
cmp
jmp
sbb
je
dec
push
retf
ret
mov
scas
les
cmps
jmp
push
fisttp
ja
and
invd
out
fwait
or
ins
mov
mov
setns
mov
mov
jae
inc
pop
add
mov
sub
sub
sbb
mov
mov
dec
inc
pop
outs
imul
sub
push
iret
ss
icebp
(bad)
xchg
mov
xor
cmp
ret
sub
nop
push
call
sbb
ret
push
sti
mov
loopne
add
xchg
xchg
je
rcr
inc
jo
sbb
jnp
nop
mov
sub
(bad)
in
lods
jno
mov
sar
inc
sub
xor
xchg
xchg
and
mov
jmp
in
xor
ret
test
lea
scas
pusha
and
and
xor
push
mov
cli
cmc
mov
movs
or
stos
inc
inc
push
and
and
dec
in
xor
jnp
aaa
shl
xor
pop
cmp
sub
fs
test
and
das
pop
pusha
xchg
cdq
or
nop
retf
data16
pop
iret
add
ds
cmc
cmps
and
loope
mov
jae
mov
call
push
stos
shl
enter
jbe
(bad)
ss
into
arpl
or
fucom
fadd
cmp
pop
mov
dec
push
repnz
sub
sbb
cmp
ror
mov
xor
(bad)
or
es
les
lods
pop
test
icebp
inc
popf
xlat
retf
cwde
mov
(bad)
push
cmp
pop
jecxz
jmp
xchg
mov
or
mov
fcmovu
xchg
sbb
add
or
test
xchg
in
fcmovu
adc
test
xchg
outs
xor
inc
lds
mov
dec
xchg
xor
sti
iret
xor
mov
shr
push
mov
call
push
sar
and
(bad)
mov
push
and
les
mov
sub
ror
mov
and
idiv
cmp
mov
ins
dec
sbb
lock
outs
mov
push
dec
scas
in
lea
push
in
seto
jmp
xor
xor
xchg
push
iret
add
hlt
xor
cld
sti
test
xchg
fld
push
jo
xchg
repz
inc
sbb
scas
pop
retf
les
mov
fld
and
sbb
sbb
cwde
sbb
cmps
sbb
cmc
fcomp
sub
(bad)
leave
mov
loop
int3
cmp
inc
fs
lock
dec
je
mov
dec
jae
ror
es
inc
clc
sub
inc
(bad)
fcom
ret
clc
mov
test
jnp
(bad)
mov
ins
fs
scas
inc
inc
ret
retf
xchg
scas
pop
mov
clc
cmp
jmp
rcr
pop
cmps
and
jmp
xchg
daa
mov
add
pushf
jns
mov
adc
or
xor
sub
sbb
jne
cmp
iret
push
or
jns
ja
sub
les
in
out
jno
cmp
into
inc
and
sub
xlat
push
cdq
or
mov
cmp
scas
(bad)
jl
(bad)
test
(bad)
push
in
cld
outs
ret
fsub
xor
push
lods
popf
mov
jnp
jp
pop
(bad)
and
mov
loop
sar
cmp
ins
fs
daa
ror
repnz
ret
mov
sub
dec
jb
jns
cli
push
pop
scas
in
(bad)
bound
inc
das
dec
bound
out
sbb
cmp
ss
adc
pop
cmp
pushaw
out
add
les
cmp
jb
cmps
fcomp
ja
jae
in
push
cmc
lock
mov
hlt
aam
or
jb
cmp
fidiv
dec
(bad)
dec
in
aam
push
cmc
add
add
stc
std
pop
fninit
jg
aad
mov
js
and
inc
jmp
xor
scas
popa
test
and
movs
mov
cmp
call
sar
loope
mov
adc
cdq
hlt
scas
scas
xlat
int
cmp
cmp
xor
mov
cmp
jne
frstor
sub
es
cmp
es
jmp
add
xor
mov
stc
fstp
mov
dec
data16
xchg
idiv
movs
or
jmp
aaa
push
sbb
(bad)
xchg
sahf
and
and
xor
xchg
out
aaa
dec
fsub
icebp
bound
jnp
mov
mov
stos
ss
dec
int
scas
push
push
cmp
jne
call
jae
or
sub
test
repnz
aas
call
je
mov
lods
push
lea
push
jns
iret
mov
push
mov
inc
cwde
inc
inc
mov
sub
and
xor
pusha
mov
xor
inc
push
repz
shl
and
mov
add
mov
mov
ret
jmp
mov
dec
mov
arpl
shl
inc
xchg
push
(bad)
ret
in
into
mov
int
addr16
push
ret
sahf
xchg
ss
in
mov
adc
pushf
cmps
gs
jbe
jp
or
jp
add
rcl
jg
or
or
xchg
mov
push
ret
stos
or
add
sub
mov
jno
js
push
push
cmp
jae
sbb
xchg
retf
test
popa
cmp
fwait
push
rol
mov
lock
and
mov
sar
cmp
and
xchg
pusha
or
jmp
and
stos
xchg
mov
retf
out
cmc
sbb
inc
iret
xor
movs
sub
pop
(bad)
cmc
test
int3
iret
outs
lahf
adc
popf
xchg
mov
mov
out
mov
mov
push
dec
add
cli
jmp
cli
stos
inc
sub
push
sahf
sub
push
and
mov
cmp
cmps
daa
jne
out
test
mov
into
xor
cs
loop
lea
mov
pop
mov
(bad)
and
xchg
and
loope
push
add
xlat
fwait
push
mov
sbb
mov
xor
mov
das
xor
mov
mov
fs
push
repz
cdq
mov
(bad)
jo
sbb
mov
cmp
sub
daa
jbe
pop
mov
les
out
imul
adc
xor
sub
and
mov
and
out
test
mov
fsubr
push
shl
add
jg
mov
mov
retf
push
push
(bad)
jae
adc
push
jp
mov
mov
or
hlt
fsub
outs
lods
mov
pop
mov
xor
mov
adc
(bad)
imul
lods
or
mov
or
or
adc
adc
retf
fs
imul
inc
pushf
in
mov
out
int3
mov
les
mov
retf
or
mov
fucomi
jge
and
cmp
mov
fnsave
ret
outs
fs
ret
xchg
movs
mov
push
sub
dec
mov
and
push
cmp
out
shr
dec
pop
jne
add
xchg
jbe
fs
test
inc
or
cmp
popf
aad
leave
inc
jmp
and
packssdw
sbb
jle
sub
(bad)
adc
lock
pop
xor
cmp
add
cli
mov
leave
lock
mov
cwde
js
or
mov
add
repz
and
add
xchg
div
gs
inc
jno
sar
add
rol
pop
jg
jmp
sbb
mov
sub
pushf
imul
call
xor
sbb
mov
or
loopne
jp
pop
jb
sub
jns
push
ja
in
pop
pusha
xchg
sbb
call
or
icebp
mov
xchg
lock
xor
ror
lahf
xor
pushf
je
dec
pop
mov
ret
or
push
sub
and
inc
ret
ss
out
sbb
mov
mov
mov
mov
inc
pop
ficom
jp
loop
fnstcw
or
cmp
add
add
mov
jge
mov
jne
and
push
sti
push
ds
pop
pop
and
xor
and
sub
sbb
pop
test
fist
sub
into
loopne
out
xchg
outs
dec
push
outs
into
push
push
and
xchg
inc
hlt
sbb
fcmovb
dec
test
jecxz
or
push
sbb
inc
in
inc
inc
mov
xor
daa
fcomp
and
lods
mov
dec
mov
(bad)
cmp
jle
sub
outs
sub
mov
(bad)
cwde
inc
ja
xchg
(bad)
xchg
stos
es
gs
ss
adc
sti
add
adc
inc
stc
pop
adc
dec
add
adc
loope
mov
ds
in
jbe
repz
xchg
dec
add
jns
or
jnp
(bad)
fidiv
pop
jl
inc
leave
pusha
out
test
cs
int
dec
adc
mov
jmp
hlt
sar
call
shr
push
fs
shl
dec
adc
mov
in
test
inc
mov
cmp
cwde
shr
push
or
pop
jp
dec
outs
xchg
(bad)
retf
(bad)
popf
ds
inc
scas
inc
xchg
popf
sub
movs
test
js
push
add
pop
sbb
push
push
adc
sbb
rep
retf
(bad)
jle
(bad)
outs
jne
shr
push
adc
push
adc
or
and
mov
xchg
xchg
jmp
cmc
jo
shr
shr
jno
sbb
mov
sbb
sbb
leave
xor
sub
fwait
sbb
cmp
loopne
stc
lahf
push
fcomp
inc
mov
jnp
call
cwde
loop
adc
ficomp
xlat
retf
clc
sbb
and
(bad)
dec
sar
mov
inc
cmp
push
fild
adc
mov
in
(bad)
jg
cmp
ins
sub
sub
retf
lahf
jne
(bad)
movs
xchg
jg
lods
push
int3
mov
call
repz
push
stos
or
pop
call
outs
shr
loop
pop
movs
enter
outs
es
(bad)
adc
movs
pop
popa
jmp
dec
cmp
ret
jne
arpl
retf
inc
adc
jb
mov
xor
xchg
inc
pop
push
and
hlt
lods
or
int
xchg
jle
adc
outs
jmp
fldenv
mov
mov
imul
and
retf
jae
jae
fsub
pop
outs
ret
mov
cmp
aas
popa
popf
lahf
ret
(bad)
inc
sbb
xchg
adc
mul
inc
inc
out
adc
dec
mov
mov
xor
sub
push
jbe
cmp
loope
xchg
jl
ds
dec
inc
test
sbb
pushw
and
pusha
or
sub
mov
gs
pop
hlt
out
rep
mov
ins
add
cdq
fmul
loopne
add
mov
adc
xchg
add
cs
stos
sub
push
aad
xchg
xchg
iret
cmp
jo
loope
add
xchg
inc
push
js
push
in
push
ins
jo
std
pop
jns
pop
mov
dec
sub
adc
cmp
mov
sbb
push
ret
retf
mov
addr16
xor
test
jne
out
xchg
icebp
cmp
jae
push
xor
mov
jb
ins
ret
or
xchg
rol
jns
adc
push
repnz
lock
inc
inc
enter
mov
lea
mov
movs
call
mov
das
fdiv
xorps
dec
inc
xor
or
add
sub
mov
stc
(bad)
pop
in
sbb
adc
and
(bad)
xor
and
sub
rol
fwait
out
fist
int
sti
shl
shl
pusha
mov
adc
jo
xor
cmp
out
xchg
pop
ins
mov
sahf
ss
loope
popa
add
push
push
push
(bad)
jmp
ret
jl
cmp
movs
(bad)
sub
mov
sbb
mov
cmc
cmps
pop
lock
stc
mov
dec
dec
pop
into
(bad)
sub
daa
cmp
mov
scas
dec
cmp
mov
bound
inc
imul
sub
(bad)
xchg
and
jecxz
movs
dec
popf
jb
inc
in
pop
xor
pop
(bad)
push
sahf
(bad)
sar
fdivr
fmul
std
and
add
xlat
scas
jnp
addr16
sahf
lods
add
test
jp
mov
push
sub
jecxz
popa
and
outs
das
mov
outs
pop
stos
addr16
and
add
stc
push
popf
fdivr
pop
popa
mov
sti
data16
inc
imul
mov
adc
sbb
adc
lock
outs
inc
add
mov
jecxz
add
aam
cmp
out
sahf
xchg
xor
sub
add
(bad)
(bad)
mov
enter
adc
mov
imul
loopne
repz
movs
loopne
scas
push
xchg
add
cmp
cwde
ror
mov
cmp
jle
mov
xchg
ds
aaa
lock
cmp
mov
push
data16
mov
and
jb
icebp
in
out
xor
xor
movzx
mov
cmps
add
adc
jge
inc
ds
xor
xlat
pop
mov
fs
sbb
mov
sbb
sub
ja
lahf
and
mov
xor
or
ret
cdq
mov
dec
mov
lahf
cmp
xchg
imul
rcl
sbb
aam
mov
add
pusha
mov
mov
or
mov
lea
dec
int
mov
cmp
sbb
mov
xchg
cs
cmp
stc
lods
lods
xchg
arpl
pop
xor
cmp
int
xchg
pop
(bad)
fdiv
jmp
dec
or
jno
jle
pusha
inc
div
jb
je
aas
lahf
mov
jmp
xor
ss
sbb
je
mov
fs
leave
mov
lds
sar
ss
xchg
or
or
bound
les
(bad)
mov
(bad)
frstpm(287
sub
add
das
repnz
(bad)
sbb
ins
dec
sbb
sub
mov
pop
outs
jge
pushf
sbb
(bad)
xchg
dec
push
pop
aas
sub
leave
outs
cmps
cmp
popa
adc
pop
or
(bad)
jle
ds
inc
push
or
ins
inc
test
xlat
mov
inc
out
adc
retf
cmps
mov
aaa
shl
xchg
dec
pop
cmp
aad
mov
mov
pop
ss
inc
popa
ds
xchg
mov
push
inc
shl
(bad)
daa
sbb
paddsw
mov
sbb
adc
loope
mov
(bad)
ror
cmp
dec
shl
or
test
inc
fldenv
call
in
ret
clc
dec
lods
sub
adc
ss
sub
lods
push
and
mov
push
sub
fsub
ret
and
mov
dec
pop
stc
sub
lods
mov
push
pop
sbb
movs
cmc
xor
xchg
jno
lea
cdq
outs
(bad)
push
cmps
jecxz
in
lods
adc
mov
(bad)
jmp
sub
pop
les
hlt
fild
mov
ror
dec
mov
std
es
in
outs
es
stos
js
dec
dec
cwde
lods
push
and
push
inc
pop
xchg
and
or
frstor
mov
outs
cmp
add
leave
loope
call
xchg
out
and
xchg
push
cmp
int3
sar
aad
out
cli
adc
dec
sbb
outs
push
and
and
nop
xor
fistp
pusha
dec
jmp
sbb
fild
rcl
fnstsw
ja
icebp
pushf
icebp
pop
fmul
cdq
aam
sbb
xchg
aaa
and
xchg
push
xchg
sub
dec
retf
dec
jmp
jo
cmp
pop
rcr
idiv
mov
adc
dec
test
push
mov
stos
pop
in
loope
xchg
adc
push
xor
imul
mov
(bad)
or
or
add
aad
xor
inc
cmp
loopne
fstp
adc
cli
adc
mov
into
repnz
sub
dec
popa
jle
std
(bad)
ret
hlt
xor
imul
movs
aam
in
movs
push
mov
ret
aaa
fnstsw
push
mov
(bad)
loopne
cmp
(bad)
jmp
push
cmp
scas
push
adc
xor
aas
movs
lock
sbb
ja
popf
mov
jae
ficomp
loop
mov
jecxz
sbb
push
pop
push
or
dec
nop
sub
es
inc
clc
push
iret
fst
push
push
inc
bound
loope
jo
stos
ins
pop
mov
mov
sub
repnz
out
sbb
jg
jmp
jmp
cmps
fstp
lahf
mov
int3
rol
xor
xor
bound
scas
and
sbb
xor
clc
jge
cwde
dec
xchg
fwait
dec
add
inc
pop
push
push
dec
jns
push
mov
xlat
mov
adc
pop
push
fdiv
test
into
pop
or
imul
and
cmp
mov
xchg
xchg
add
xchg
scas
cdq
pop
jo
sbb
jle
fnstenv
ins
es
aas
xchg
mov
and
shl
out
iret
push
and
xchg
and
adc
jnp
sub
retf
adc
cmp
xlat
(bad)
outs
pop
or
xor
scas
xchg
jmp
inc
push
push
sub
stos
test
dec
icebp
mov
loop
mov
add
fs
mov
push
adc
dec
nop
(bad)
dec
mov
(bad)
hlt
aad
test
xchg
movs
jb
sbb
xchg
mov
mov
mov
dec
ins
int
in
lahf
fwait
cdq
in
mov
(bad)
and
test
or
data16
push
aam
outs
sbb
sbb
sub
inc
cmp
sti
ss
push
sahf
out
xor
mov
dec
push
mov
pop
or
fcomp
and
mov
mov
fwait
xlat
lods
sar
outs
les
inc
mov
imul
mov
cmc
lds
sbb
mov
ins
and
sbb
not
mov
les
sub
sub
lahf
lock
inc
hlt
mov
enter
jp
add
mov
dec
mov
shl
xchg
ja
(bad)
or
fcomp
pop
inc
loop
push
nop
push
sub
ja
pop
mov
xchg
out
pop
aas
into
jl
je
sbb
adc
in
call
ret
pop
stos
dec
or
jnp
and
dec
sub
stos
inc
in
fst
mov
cdq
pop
sub
in
jge
mov
pop
mov
stos
xor
mov
cmps
stos
imul
rcl
fdiv
jge
daa
sbb
popa
ins
mov
mov
inc
xchg
fnstenv
pop
inc
movs
jl
jns
mov
pop
call
mov
jg
mov
je
push
pop
inc
shl
jb
mov
dec
out
int
xlat
jo
scas
hlt
cs
aaa
je
push
xlat
stos
cmc
popa
lahf
inc
js
ins
push
push
inc
(bad)
sub
adc
sub
sub
push
jo
sub
in
push
xlat
jle
mov
pop
sub
jmp
je
jl
and
xor
fsub
repz
xchg
scas
loop
(bad)
jg
hlt
mov
cdq
arpl
addr16
cli
movs
stos
jmp
imul
dec
sbb
inc
sbb
add
addr16
xor
lods
adc
push
mov
mov
pushf
pop
and
sub
fs
sbb
in
(bad)
test
movs
pop
mov
dec
(bad)
xchg
je
push
rol
and
out
les
push
movs
adc
or
ret
push
ds
dec
dec
xadd
jmp
xor
out
mov
test
cmp
add
sub
iret
mov
rol
jg
jmp
mov
popf
lea
and
push
sub
xor
repnz
jae
jl
pop
loop
jg
stos
pop
cs
test
cli
or
clc
nop
repz
pop
in
adc
mov
aas
xchg
lods
pop
(bad)
ret
iret
fld
push
mov
das
xchg
push
mov
adc
(bad)
enter
pop
icebp
sub
or
inc
or
or
hlt
stos
int3
xchg
sbb
lock
std
jle
ud2
(bad)
in
(bad)
xchg
data16
push
pop
mov
call
inc
scas
pop
sbb
ret
xchg
xchg
div
movs
dec
out
out
movs
jnp
dec
enter
cmp
jmp
jl
xor
mov
dec
xor
pop
jnp
cs
and
sbb
push
and
fs
clc
mov
and
mov
mov
(bad)
cmp
sbb
and
shl
or
add
test
ja
jb
mov
pop
pop
push
or
pop
iret
inc
sbb
out
in
xor
mov
sbb
sub
sbb
jp
stc
mov
sbb
jnp
mov
cmps
int3
sbb
lods
xchg
(bad)
sub
out
and
cmp
call
mov
es
mov
or
repnz
les
je
inc
enter
in
fwait
xor
add
je
cmp
xor
mov
mov
dec
movs
inc
pop
xchg
or
call
push
je
dec
xchg
pop
ds
push
jbe
out
cmps
in
mov
or
cli
pop
xchg
push
rcr
push
das
ja
xchg
mov
shl
fimul
xchg
jmp
dec
and
scas
fwait
cdq
add
sar
push
into
sub
mov
(bad)
and
xor
adc
cmp
or
scas
pop
push
icebp
or
mov
adc
add
outs
and
stos
call
in
sub
mov
xchg
dec
stc
xchg
mov
mov
adc
jb
mov
push
xchg
jge
pop
inc
xor
ds
jne
push
stos
nop
xchg
in
pusha
mov
jbe
mov
outs
in
cmp
adc
and
jecxz
dec
nop
xor
inc
dec
and
lods
jne
push
clc
and
mov
sbb
adc
fcomi
xor
mov
mov
jbe
or
jp
mov
add
(bad)
iret
dec
js
movs
inc
add
and
repz
push
xchg
pop
(bad)
and
pop
and
ror
clc
xor
mov
jle
fild
or
cmp
cmp
pop
out
sti
out
scas
cmp
cmc
pop
mov
test
pop
retf
cmp
sbb
cmp
sub
xchg
ins
cmp
push
call
xchg
cmp
fdivr
ror
outs
pop
and
clc
xchg
xchg
xchg
mov
or
push
push
mov
xor
or
loope
in
xchg
add
adc
sub
imul
mov
mov
test
xor
dec
not
popa
out
or
mov
pop
cmps
ins
fsubr
movs
shr
jecxz
pop
data16
int
xchg
repnz
fld
mov
xchg
dec
idiv
mov
sub
and
pop
jp
xchg
xchg
lahf
test
inc
je
mov
test
aaa
out
stc
mov
fmul
pop
into
xchg
and
fdivr
or
stos
or
cmp
cdq
mov
je
gs
pop
sbb
push
xchg
mov
rcr
lea
(bad)
out
cdq
sar
jmp
push
lock
push
aad
sbb
test
sub
fisubr
mov
mov
jmp
sbb
popf
sub
dec
push
add
daa
add
or
dec
lods
repz
sbb
jae
ret
pop
ret
aad
dec
pop
(bad)
lahf
ret
sub
inc
sbb
(bad)
js
push
data16
fimul
push
mov
pop
leave
ret
test
std
xor
and
scas
cmps
xlat
pop
(bad)
addr16
mov
call
or
pop
into
mov
push
jo
push
adc
data16
movs
jg
mov
scas
mov
pop
inc
in
sub
jbe
iret
repnz
push
sub
add
lea
out
in
sub
dec
jae
shr
mov
js
lea
pop
mov
cld
clc
popa
sahf
cmp
adc
dec
addr16
les
add
call
fcomp
popa
inc
jge
pop
mov
dec
lahf
and
pushf
(bad)
mov
data16
and
and
jne
mov
cmp
inc
shl
ret
stos
retf
int3
jno
mov
xchg
bound
scas
cs
push
retf
cmps
jle
push
ja
pop
pop
pop
div
adc
loop
pusha
dec
call
dec
adc
test
sar
push
dec
nop
ret
into
push
stc
push
nop
icebp
out
and
jle
adc
cmc
and
dec
add
add
sub
pushf
hlt
test
fsub
femms
imul
mov
fst
and
sbb
cs
stos
cdq
push
adc
sbb
push
jmp
cmp
adc
sahf
ror
lods
aam
sets
jns
jp
mov
loop
sub
pop
mov
pop
leave
push
shl
dec
loopne
dec
icebp
int3
in
movs
nop
cwde
add
inc
(bad)
popf
and
sbb
arpl
shr
in
xchg
movs
jbe
scas
add
mov
bound
ds
xchg
jle
add
jle
add
or
cld
(bad)
mov
int3
lds
shl
pop
push
faddp
xor
retf
sbb
loop
add
es
loope
mov
das
add
mov
stos
movs
mov
add
jp
hlt
or
(bad)
fnsave
xchg
call
int3
ret
lods
mov
into
(bad)
in
mov
lds
add
pop
push
jbe
and
push
in
or
adc
mov
jmp
and
push
adc
mov
call
mov
sub
add
lea
lea
push
add
in
lods
jg
imul
in
stc
or
xchg
dec
pop
xor
sub
xor
ror
imul
enter
movs
cs
sar
add
gs
inc
mov
out
and
loopne
adc
fadd
std
cdq
bound
and
jecxz
ror
sub
ins
push
inc
xchg
stos
sahf
pop
lahf
mov
inc
xor
push
pushf
jns
data16
mov
sbb
inc
mov
mov
std
outs
lds
pop
or
jns
(bad)
cld
mov
fisttp
retw
stc
inc
imul
add
add
mov
dec
retf
in
cmp
add
push
add
jle
adc
or
in
push
aam
(bad)
(bad)
popa
sti
dec
xor
cmp
nop
cmp
in
movs
inc
(bad)
cmps
ret
int3
loopne
je
(bad)
push
pushf
out
scas
ins
xchg
sbb
add
push
pop
les
imul
push
cmp
or
inc
mov
scas
jne
fwait
pusha
ret
sti
inc
or
cwde
cli
das
or
adc
je
test
pop
push
dec
add
xchg
inc
mov
mov
adc
pop
cmp
out
stc
stos
ds
or
and
bound
daa
xor
je
push
xor
mov
dec
jb
test
imul
sub
int3
nop
pop
jo
or
nop
mov
shl
push
dec
add
aaa
sub
sbb
sub
push
pop
jno
add
cdq
inc
fnstcw
out
in
jns
sub
or
mov
push
jg
or
jle
repnz
int
hlt
std
push
leave
data16
stc
cmc
fs
enter
xlat
outs
wrmsr
adc
jmp
inc
dec
mov
(bad)
sti
pop
or
add
in
retf
mov
(bad)
dec
sbb
push
and
inc
jno
(bad)
and
add
cmp
gs
push
ror
retf
cld
stos
sahf
ja
test
adc
cmps
idiv
push
bound
rol
movs
push
dec
add
movs
or
and
jp
jmp
js
jmp
sub
out
(bad)
cli
sub
cmp
lock
mov
sub
inc
and
cwde
xor
movs
sbb
(bad)
or
(bad)
xor
out
pop
sti
mov
mov
dec
(bad)
clc
mov
mov
test
mov
cmps
sbb
or
sbb
jb
mov
(bad)
sbb
mov
(bad)
sbb
xchg
add
add
dec
lods
std
mov
nop
int
cld
mov
jbe
pusha
dec
into
inc
out
inc
add
adc
push
into
sub
iret
arpl
lock
mov
out
or
pop
cmp
jnp
(bad)
fdiv
ror
hlt
add
push
xchg
ror
ss
jnp
fstp
popa
popf
in
dec
mov
cmp
inc
xor
inc
pop
inc
inc
test
sub
loopne
mov
(bad)
adc
retf
pop
mov
xor
lahf
dec
jmp
lods
xchg
xchg
hlt
mov
fs
sbb
mov
aaa
mov
into
ret
scas
sub
icebp
arpl
pop
js
(bad)
mov
lahf
pavgw
test
outs
add
jns
fcom
xor
scas
push
or
loope
or
xchg
fisttp
sahf
jae
or
add
xor
mov
and
dec
mov
add
fcmovnb
lods
adc
hlt
mov
or
push
cdq
aas
das
pusha
adc
and
cmp
loopne
inc
add
outs
inc
pop
mov
adc
jmp
mov
or
xchg
pop
and
mov
cdq
xor
ja
mov
jecxz
mov
adc
xor
stos
inc
ret
retf
jge
xor
cs
cmp
push
and
dec
in
std
out
xchg
das
push
pushf
or
push
ror
rcl
imul
test
xchg
push
jmp
fcomi
icebp
push
xor
ins
mov
mov
sbb
and
xchg
stc
cmc
inc
daa
add
jmp
ror
stos
dec
pop
repnz
and
lods
and
or
adc
mov
adc
adc
sub
stos
scas
out
loopne
pop
mov
jmp
pop
or
sar
xor
fsub
(bad)
iret
in
hlt
mov
jns
icebp
push
adc
mov
ret
add
mov
cwde
lock
dec
out
adc
mov
dec
ficomp
(bad)
stc
sti
mov
and
lds
inc
mov
into
add
in
dec
sub
int3
shl
xchg
and
fistp
retf
add
or
push
and
aas
jl
or
mov
lock
ins
jle
out
pop
xlat
ss
pop
push
dec
sbb
pop
psubq
push
mov
fiadd
int
out
dec
inc
aad
and
cs
(bad)
aaa
mov
je
out
clc
xor
jecxz
fst
fadd
pop
inc
pop
movs
arpl
fld
jno
add
rcl
inc
repz
prefetchwt1
or
mul
sbb
add
(bad)
div
repz
dec
fcomp
cdq
jb
or
jne
shl
inc
std
jg
loopne
addr16
mov
adc
sahf
mov
pop
mov
ret
inc
(bad)
movs
jne
rcr
std
bound
sub
cdq
xchg
addr16
(bad)
icebp
rcr
addr16
push
mov
loope
(bad)
mov
mov
xchg
shr
push
les
loopne
repz
mov
sub
pop
gs
aam
adc
pusha
cwde
add
fdivp
jne
sbb
cmps
inc
sti
sbb
fisttp
and
jge
sbb
(bad)
pop
mov
call
adc
gs
pushf
dec
inc
inc
(bad)
int3
mov
pop
(bad)
out
dec
out
repz
mov
sub
xchg
mov
pop
(bad)
mov
push
fcomp
out
push
mov
inc
leave
push
ins
stos
or
add
jno
fwait
js
push
xchg
push
dec
add
rcr
hlt
in
cwde
mov
dec
jg
cmc
ret
jmp
ficomp
lods
sub
sbb
loopne
lahf
ror
pusha
out
shl
lods
inc
imul
or
sar
xchg
inc
mov
push
repz
jmp
mov
arpl
mov
and
push
out
jb
cmps
fcmove
les
loop
aam
inc
je
cmps
lock
fdivr
xchg
clc
retf
add
out
lods
imul
xor
cmp
xlat
lds
ror
retf
xor
enter
data16
arpl
pushf
xor
daa
lds
pop
pop
mov
xor
test
cld
mov
push
cmp
fsub
and
in
pop
popf
test
dec
int
cmc
dec
addr16
adc
into
gs
xor
cmp
jecxz
sbb
cmp
mov
cdq
sbb
cmp
bound
mov
popa
stc
add
retf
and
test
add
xor
inc
jne
scas
adc
retf
jb
adc
inc
or
fld
inc
and
shl
dec
dec
mov
sbb
xchg
xor
std
push
jb
imul
sub
mov
adc
in
adc
imul
sbb
mov
add
inc
mov
pop
lahf
test
xor
mov
jecxz
enter
adc
jae
xor
lds
mov
js
in
push
pop
inc
fcom
inc
enter
aam
stos
fwait
std
daa
add
dec
(bad)
daa
mov
pop
pop
xlat
mov
sbb
ret
hlt
gs
push
inc
imul
mov
out
mov
pop
xchg
jae
sbb
into
shl
add
jecxz
dec
add
daa
cmps
les
movs
aas
scas
jp
sbb
test
fisub
cmp
aas
rcr
mov
test
jmp
es
imul
imul
in
pop
(bad)
fidivr
mov
imul
mul
loop
mov
add
stos
aad
xchg
dec
or
pop
fwait
mov
cli
adc
dec
adc
mov
sti
loopne
test
stc
mov
mov
imul
dec
dec
or
adc
loope
ret
hlt
dec
cmp
(bad)
test
arpl
jmp
adc
aaa
mov
inc
cmc
and
push
iret
movs
adc
pop
xcrypt-cfb
cmps
movs
or
adc
fcmovb
imul
mov
dec
retf
pop
mov
movs
sub
lea
mov
or
ss
sub
inc
movs
sub
or
ficomp
adc
xchg
call
sbb
enter
push
popa
xor
outs
pusha
into
dec
pop
ret
inc
or
jmp
jno
call
jns
mov
push
scas
push
xchg
sub
ja
hlt
dec
cmp
push
pushf
mov
adc
mov
in
aad
sub
repz
sbb
cmp
stos
mov
jnp
or
dec
dec
gs
mov
pop
and
jne
mov
in
addr16
int
xor
jmp
dec
mov
cs
mov
xor
outs
jno
push
add
xor
mov
dec
and
dec
inc
sbb
mov
out
inc
fisubr
into
and
loop
addr16
jmp
(bad)
jb
adc
shr
adc
mov
mov
push
mov
jae
cmp
dec
push
imul
js
ins
jae
xchg
stos
mov
cmp
or
sub
pop
es
out
or
sub
sbb
sbb
cmp
or
stos
test
icebp
pop
and
xchg
adc
xor
push
inc
push
fadd
(bad)
fiadd
cs
scas
dec
push
push
or
xor
loope
(bad)
cli
mov
push
mov
adc
test
mov
ds
xchg
int3
push
out
dec
cmp
mov
push
jns
sbb
movs
sbb
dec
jmp
int
sbb
add
repnz
mov
adc
add
loopne
pop
retf
in
aad
lods
inc
pop
test
inc
sub
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
sldt
and
jb
outs
addr16
add
add
add
add
add
push
push
add
add
adc
add
and
dec
inc
add
add
add
aam
add
and
outs
bound
add
add
add
inc
push
add
or
add
add
add
add
add
add
add
adc
add
or
add
mov
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
repnz
add
add
add
add
add
add
pop
dec
add
add
(bad)
clts
add
cmp
push
add
xchg
sldt
add
stos
add
add
add
add
add
add
add
add
add
add
fild
add
add
add
add
or
add
add
add
add
add
add
add
fild
add
add
add
add
or
add
add
add
add
add
push
add
add
add
fild
add
add
add
add
or
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
jb
or
test
add
add
xchg
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
or
adc
ins
and
add
add
add
add
add
add
xchg
mov
jns
adc
js
add
add
adc
cwde
add
and
add
add
add
add
add
add
adc
movs
add
add
add
add
add
add
add
add
add
test
add
add
adc
inc
push
jecxz
adc
mov
add
add
adc
mov
add
add
add
add
test
add
add
adc
fadd
std
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
xchg
add
or
add
add
xchg
add
or
add
add
and
xchg
add
add
xchg
add
or
add
add
and
xchg
add
or
adc
adc
add
add
xchg
add
or
adc
sbb
xchg
add
or
adc
sbb
add
add
xchg
add
add
add
and
xchg
add
and
add
add
xchg
add
add
and
xchg
mov
jns
adc
xor
xchg
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
mov
jns
adc
pusha
and
xchg
add
or
adc
fs
xchg
add
or
adc
push
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
adc
mov
add
add
add
xchg
add
or
adc
test
add
add
xchg
add
or
adc
lods
and
xchg
add
add
add
add
add
xchg
add
add
add
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
adc
fsub
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
adc
call
add
add
add
and
xchg
add
add
add
and
xchg
add
or
adc
clc
and
xchg
add
add
and
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
mov
jns
adc
and
add
add
xchg
add
or
and
add
add
xchg
add
sub
add
add
xchg
add
sub
add
add
xchg
add
or
xor
add
add
xchg
add
or
adc
xor
add
add
xchg
add
or
adc
cmp
add
add
xchg
add
or
adc
cmp
add
add
xchg
add
add
add
add
add
xchg
add
or
adc
inc
add
add
xchg
add
add
add
add
xchg
mov
jns
adc
push
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
or
pop
add
add
xchg
add
or
pusha
add
add
xchg
add
or
fs
add
xchg
add
push
or
adc
push
add
add
add
add
add
add
add
add
add
xchg
add
or
adc
je
add
add
xchg
add
or
adc
js
add
add
xchg
mov
jns
adc
and
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
push
or
adc
cwde
add
add
xchg
add
push
or
adc
pushf
add
add
xchg
add
push
or
adc
mov
add
add
add
xchg
add
(bad)
add
add
add
add
add
add
add
add
add
push
add
add
jns
add
add
mov
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
pop
add
add
push
dec
add
add
add
add
mov
sbb
pushf
add
add
add
add
mov
fld
adc
nop
add
add
add
add
test
ret
add
mov
jns
jns
mov
and
add
daa
add
jge
add
sub
add
push
add
add
inc
add
add
or
push
add
add
add
add
add
add
popa
add
adc
add
add
add
add
sbb
add
add
add
add
add
and
add
add
add
add
inc
xor
jb
outs
je
je
push
add
jae
imul
jb
imul
gs
cs
imul
inc
outs
jb
jae
in
stos
in
mov
mov
in
test
mov
in
(bad)
in
popf
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
in
xchg
in
cmps
cs
jae
jne
arpl
add
arpl
push
add
xor
jno
pop
jb
jno
addr16
add
arpl
outs
jb
ins
push
push
aaa
imul
xor
push
bound
fs
dec
ins
push
inc
push
dec
bound
arpl
jns
je
ins
add
outs
jo
xor
xor
popa
pop
dec
dec
dec
inc
arpl
inc
imul
ss
jb
ss
jns
push
inc
xor
outs
addr16
push
xor
bound
dec
push
push
bound
push
jns
add
outs
jo
jb
jns
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
ss
popa
xor
push
inc
jb
je
ins
inc
push
push
push
imul
push
inc
je
jp
xor
jb
xor
dec
inc
jae
push
dec
xor
pop
push
push
dec
popa
push
xor
add
dec
jne
inc
dec
cmp
xor
imul
jno
dec
je
bound
pop
ss
dec
dec
jbe
jo
xor
add
imul
gs
outs
inc
add
jae
ins
bound
dec
gs
outs
fs
outs
outs
add
arpl
je
outs
outs
add
je
add
je
xor
xor
bound
dec
dec
je
aaa
push
jbe
add
xor
dec
dec
xor
imul
add
push
push
push
push
jb
xor
inc
xor
pop
bound
ss
bound
jp
outs
imul
popa
xor
push
inc
jbe
jbe
ins
push
add
dec
push
jns
jo
xor
jp
xor
outs
ja
push
pop
xor
dec
jb
add
jne
inc
dec
je
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
arpl
add
popa
jo
inc
push
inc
pushw
push
cmp
push
cmp
add
dec
push
push
cmp
xor
jae
addr16
xor
dec
cmp
xor
ins
pop
ins
add
push
push
fs
jo
push
add
dec
push
xor
dec
inc
dec
inc
add
inc
jne
push
imul
add
dec
js
xor
ja
imul
xor
add
push
dec
push
dec
jns
push
jb
jo
pop
ja
pop
outs
imul
dec
add
imul
push
arpl
push
je
imul
jno
push
je
aaa
dec
push
imul
push
pop
ins
outs
dec
push
push
dec
jae
cmp
push
inc
add
jae
outs
pop
js
inc
inc
fs
pop
jbe
add
push
dec
dec
cmp
add
js
outs
dec
dec
ins
xor
jns
add
je
dec
inc
jno
dec
jo
add
jne
ja
je
pop
cmp
inc
gs
jns
gs
or
loop
lods
loop
scas
loop
scas
loop
mov
or
lods
loop
lods
loop
mov
or
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
loop
scas
add
je
jb
jo
jb
jns
loop
lods
loop
mov
or
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
or
scas
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
mov
sub
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
sub
scas
loop
stos
loop
stos
loop
mov
sub
popa
ins
jne
add
or
lods
loop
scas
loop
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
scas
loop
mov
or
mov
sub
gs
popa
addr16
sub
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
or
scas
loop
lods
loop
scas
add
jae
popa
addr16
outs
js
push
push
imul
jae
ins
je
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
stos
loop
mov
sub
mov
sub
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
or
loop
mov
sub
(bad)
loop
lods
loop
scas
add
or
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
mov
sub
loop
lods
loop
scas
loop
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
add
je
gs
outs
fs
loop
mov
or
loop
mov
sub
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
scas
add
pop
inc
jno
popa
ins
imul
sub
(bad)
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
scas
loop
mov
sub
mov
or
(bad)
loop
stos
loop
mov
or
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
(bad)
loop
scas
add
je
outs
fs
popa
jae
add
jbe
imul
or
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
mov
or
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
scas
loop
lods
loop
mov
sub
scas
loop
mov
or
scas
loop
scas
add
pop
aaa
xor
pop
push
add
jp
push
ins
xor
pop
imul
jo
dec
dec
dec
dec
ss
push
xor
xor
xor
pop
ss
push
push
inc
je
inc
push
pop
push
dec
outs
je
xor
ins
push
ss
jbe
bound
jne
jb
ja
cmp
push
push
cmp
fs
push
push
js
push
jno
jp
xor
ss
je
push
outs
xor
jo
bound
push
push
outs
xor
add
jbe
dec
dec
pop
ins
add
pop
imul
popa
pop
jne
dec
add
dec
bound
popa
xor
xor
push
xor
inc
jns
dec
push
inc
je
inc
dec
jno
dec
add
jae
pop
push
pop
fs
push
push
addr16
dec
add
push
ins
xor
pop
xor
imul
dec
aaa
bound
push
cmp
push
xor
dec
jae
add
pop
dec
gs
dec
push
ins
gs
add
inc
cmp
push
ja
add
imul
inc
imul
gs
jb
inc
jb
pop
addr16
dec
add
push
dec
jae
outs
imul
xor
dec
push
aaa
add
dec
outs
outs
cmp
inc
inc
inc
push
cmp
jbe
dec
dec
jo
jne
dec
jbe
xor
pop
xor
inc
data16
pop
push
dec
inc
aaa
push
push
ja
add
aaa
jb
je
push
jno
push
push
dec
inc
inc
inc
add
inc
jp
dec
jno
fs
dec
push
jo
addr16
cmp
cmp
pop
arpl
bound
outs
dec
dec
outs
jae
popa
imul
ss
js
inc
add
imul
dec
dec
arpl
xor
xor
jb
xor
jae
dec
imul
imul
imul
xor
ja
dec
inc
dec
add
addr16
gs
push
cmp
jne
outs
add
dec
jb
dec
inc
inc
dec
jbe
inc
pop
addr16
add
pop
imul
dec
push
add
dec
inc
inc
cmp
dec
dec
inc
pop
push
pop
xor
add
inc
inc
push
inc
xor
js
dec
js
ins
popa
aaa
xor
dec
arpl
dec
inc
dec
dec
add
cmp
outs
inc
cmp
ins
xor
dec
jno
push
xor
push
popa
dec
imul
outs
popa
add
ja
cmp
push
jo
arpl
pop
ins
push
outs
add
push
pop
push
inc
ja
inc
imul
cmp
pop
push
add
aaa
ss
jae
ss
inc
cmp
add
jb
push
push
dec
bound
xor
outs
push
push
imul
dec
cmp
inc
push
inc
add
outs
dec
cmp
inc
push
ins
inc
push
xor
inc
pop
add
push
push
inc
je
jno
add
push
push
dec
push
push
je
push
xor
inc
dec
add
aaa
dec
inc
ins
dec
bound
inc
jo
fs
add
inc
imul
cmp
inc
push
xor
inc
push
dec
dec
xor
push
inc
push
arpl
push
inc
jns
dec
js
je
ins
inc
push
jbe
jne
xor
ss
ins
add
xor
jo
popa
fs
ins
push
push
inc
add
inc
jp
dec
addr16
je
jae
add
push
bound
push
inc
jb
jb
js
push
arpl
xor
arpl
jae
add
gs
outs
imul
push
dec
inc
outs
ja
arpl
pop
popa
push
jne
dec
inc
dec
dec
inc
ss
jbe
dec
dec
push
xor
dec
pop
ins
je
xor
push
pop
pop
ss
xor
jb
pop
push
dec
ss
add
bound
dec
xor
add
dec
cmp
dec
js
inc
xor
dec
jae
add
ss
push
jb
push
bound
push
push
ins
dec
jae
aaa
pop
arpl
inc
outs
push
push
push
dec
dec
dec
add
ins
outs
inc
aaa
ins
push
inc
dec
dec
add
jo
ins
bound
dec
addr16
jns
jno
inc
push
dec
push
aaa
inc
xor
outs
arpl
inc
push
ins
push
inc
xor
pop
jns
xor
push
push
imul
xor
xor
dec
popa
data16
ja
fs
add
addr16
jno
xor
push
ja
arpl
add
cmp
inc
ins
push
dec
push
inc
jbe
ja
jp
xor
dec
jno
xor
inc
add
inc
push
push
popa
push
dec
ins
push
add
dec
bound
dec
inc
arpl
add
push
push
imul
jbe
jbe
add
jno
push
xor
jb
cmp
jbe
dec
cmp
xor
cmp
inc
add
inc
imul
dec
popa
ins
inc
add
jbe
ins
inc
fs
dec
dec
inc
jns
xor
inc
popa
add
je
jne
inc
popa
dec
outs
ja
dec
inc
jbe
add
cmp
dec
inc
gs
dec
inc
xor
dec
push
push
cmp
dec
push
add
jae
xor
jns
push
inc
jae
push
ja
add
xor
dec
jo
jb
xor
inc
jns
inc
jb
xor
dec
push
inc
push
arpl
xor
jbe
ins
xor
push
gs
ja
jbe
outs
push
push
popa
push
push
add
arpl
aaa
push
imul
jae
ins
add
dec
push
addr16
outs
bound
jb
inc
je
js
add
inc
push
outs
inc
jae
push
push
push
xor
addr16
arpl
push
cmp
push
push
pop
dec
fs
gs
push
imul
inc
push
dec
inc
push
cmp
inc
add
cmp
inc
imul
je
popa
dec
push
push
add
dec
jbe
xor
push
dec
jns
push
dec
imul
jo
imul
imul
ins
inc
push
je
xor
dec
dec
push
dec
jno
push
inc
arpl
imul
dec
gs
je
jae
dec
push
jns
inc
imul
outs
ins
js
push
jb
jns
addr16
dec
outs
ins
fs
jno
add
xor
inc
bound
inc
push
add
dec
je
js
data16
jne
dec
jne
jp
ja
jp
xor
xor
add
dec
push
js
cmp
jo
jne
inc
inc
bound
imul
popa
xor
dec
aaa
jne
inc
ins
add
addr16
dec
dec
inc
arpl
outs
pop
add
push
dec
inc
push
inc
jne
dec
jae
aaa
add
ins
jae
push
xor
addr16
jae
ins
ins
push
bound
pop
gs
push
imul
imul
popa
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jb
outs
add
add
je
jns
dec
add
data16
add
push
add
je
push
add
ins
add
add
das
push
add
jae
je
add
add
add
add
add
outs
add
add
add
add
add
or
ins
add
add
add
add
jae
je
add
add
add
outs
add
jb
arpl
add
add
add
outs
add
jb
arpl
add
popa
add
popa
add
add
add
dec
xor
dec
dec
dec
inc
dec
and
dec
pop
dec
aas
dec
inc
dec
push
fs
popa
dec
push
dec
or
dec
dec
dec
dec
dec
sbb
dec
add
es
jp
bound
dec
xor
jle
je
dec
jb
push
dec
daa
dec
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jae
jae
add
bound
ins
add
add
inc
add
je
inc
add
add
jne
je
imul
inc
add
jae
add
bound
ins
add
add
inc
add
je
dec
add
push
add
je
add
dec
pop
dec
jbe
and
add
dec
adc
dec
jo
jge
cmp
dec
pop
dec
jbe
jae
add
dec
pop
dec
cs
adc
dec
popa
dec
or
dec
inc
dec
aas
dec
pusha
dec
pop
dec
add
dec
push
dec
add
dec
jo
push
dec
outs
dec
add
dec
sbb
or
dec
push
dec
adc
dec
pop
dec
jo
gs
or
dec
pop
dec
pop
dec
add
dec
or
dec
dec
dec
addr16
dec
dec
and
dec
dec
inc
dec
cmp
dec
pop
dec
dec
dec
popa
dec
js
push
dec
cmp
dec
push
dec
addr16
ja
cmp
pop
dec
push
adc
inc
dec
ins
dec
dec
dec
inc
dec
push
dec
pop
dec
jb
xor
dec
aas
dec
pop
dec
jp
sbb
dec
aas
dec
push
dec
sbb
dec
pop
dec
adc
cmovle
add
push
add
jae
je
add
add
je
jb
imul
pop
add
add
inc
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
imul
add
add
add
outs
add
add
add
pop
dec
add
jns
add
add
dec
add
popa
add
adc
je
jb
jns
push
add
imul
add
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
add
add
add
outs
add
outs
add
or
jbe
outs
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
inc
add
jns
jo
je
outs
add
add
outs
add
data16
jb
ins
add
daa
push
add
popa
add
jae
data16
jb
ins
add
imul
ins
add
ins
add
arpl
imul
or
outs
add
je
push
add
jae
je
add
add
arpl
je
imul
je
outs
add
add
add
je
add
outs
add
je
popa
add
arpl
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
jns
ins
add
add
add
arpl
inc
add
add
jb
imul
ins
add
pop
inc
add
add
je
add
add
jb
jns
jo
je
outs
add
add
dec
add
ins
add
add
add
stos
sti
mov
(bad)
hlt
inc
xchg
outs
push
cmp
pop
add
mov
pop
push
sbb
mov
add
add
add
sbb
or
add
or
or
add
sbb
sbb
pop
add
or
or
sbb
sub
adc
push
sbb
sbb
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
push
pop
add
sbb
push
add
sbb
sbb
add
add
add
pop
add
add
sbb
add
or
sbb
adc
sbb
push
sbb
sbb
and
adc
add
sbb
and
adc
adc
and
sbb
sbb
sbb
or
and
push
add
sbb
push
add
push
add
adc
adc
add
push
push
or
add
xor
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
pusha
or
jle
or
add
add
jo
or
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
