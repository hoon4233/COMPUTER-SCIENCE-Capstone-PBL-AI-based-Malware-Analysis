dec
sahf
into
retf
add
sub
icebp
xchg
cmp
enter
fidivr
xor
int
mov
call
out
bound
(bad)
and
sahf
dec
cwde
mov
hlt
sbb
arpl
mov
(bad)
pop
fist
jmp
or
mov
or
cmp
push
mov
je
mov
out
pop
inc
imul
test
jno
enter
and
lea
cmp
inc
jle
dec
lock
(bad)
cmp
popw
or
jb
sub
test
bound
stos
popcnt
mov
popf
cwde
sub
aad
inc
mov
or
cmc
pop
in
jo
(bad)
repnz
and
fidiv
adc
addr16
pop
popf
test
addr16
pop
fwait
pop
sub
retf
fwait
xchg
ja
mov
cmp
xlat
js
mov
ins
jp
or
fs
test
cmp
pop
adc
lods
add
test
(bad)
loop
(bad)
fucomp
retf
cmps
xchg
shl
rcl
lea
imul
into
ret
xchg
push
jae
adc
fst
mov
addr16
mov
retf
inc
sbb
push
mov
pop
int3
sbb
enter
xor
xchg
in
add
push
adc
dec
sub
xor
mov
daa
push
idiv
mov
les
scas
lock
xor
and
add
repz
pop
shr
stos
or
or
push
mov
mov
sti
jb
add
fucom
dec
mov
sbb
xor
xchg
ins
fiadd
inc
mov
mov
xor
jl
xchg
xchg
mov
neg
aaa
or
mov
ret
fstp
jmp
push
fld
pop
pushf
dec
fimul
jl
mov
sbb
and
sub
dec
leave
movs
sub
fmulp
movups
stos
jmp
xor
jno
dec
ds
enter
mov
mov
fistp
pushf
icebp
lods
pushf
sbb
lods
fild
xchg
xor
mov
jae
stos
fwait
clc
xchg
mov
mov
inc
add
ror
shr
cwde
and
(bad)
cmp
cdq
fiadd
fsub
xchg
jb
repnz
cs
push
mov
std
pop
mov
cdq
jo
dec
mov
add
stos
nop
test
and
fistp
or
push
push
sbb
dec
pop
xchg
pop
(bad)
in
popf
jae
pop
push
imul
xlat
call
push
lea
sbb
jmpw
hlt
xor
sbb
shl
lods
ins
pop
push
(bad)
aad
push
hlt
cmc
out
fmul
movs
xchg
push
cmp
test
mul
dec
mov
fmul
(bad)
push
leave
stos
fsub
pop
cmc
pop
les
xchg
mov
movnti
push
cli
sbb
adc
mov
daa
sbb
push
int
or
ds
mov
xchg
jb
loopne
fist
sahf
xchg
cmps
mov
jo
xor
fld
or
loopne
dec
dec
or
add
mov
pop
jp
xlat
sbb
mov
jg
movs
xor
div
fsub
adc
mov
lods
out
stc
add
das
and
shl
mov
push
mov
pop
cmp
mov
sub
fwait
ret
mov
shl
lea
add
mov
jg
call
les
sbb
jmp
arpl
xor
aas
dec
popf
stos
jnp
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
aad
push
retf
imul
sti
scas
jp
fisttp
mov
push
jecxz
sbb
gs
call
fsub
pop
sbb
inc
mov
inc
dec
or
push
cmp
mov
sub
dec
ret
or
lods
dec
int
jae
cmps
jb
push
fadd
ins
cmps
mov
imul
lahf
jae
jae
jae
xchg
push
(bad)
pushw
adc
lea
fbstp
fs
cmp
cld
rol
and
sti
xchg
shl
daa
mov
call
sbb
jno
aad
sub
jge
leave
push
mov
test
(bad)
in
mov
repnz
jne
sub
lock
retf
lock
push
jmp
mov
pop
outs
mov
into
mov
not
int
mov
add
sbb
or
movs
repnz
push
push
mul
jbe
fisttp
cmps
nop
fisubr
(bad)
out
or
adc
movs
inc
inc
sub
mov
mov
adc
dec
scas
and
mov
xchg
rol
cmps
inc
shl
sub
and
inc
sub
inc
scas
add
(bad)
call
add
xchg
movs
in
xchg
sbb
js
sbb
loop
loopne
push
inc
mulps
push
sub
or
fidivr
mov
aad
jp
cs
pop
pop
sbb
test
dec
imul
or
dec
imul
sub
dec
inc
scas
cdq
and
cmp
scas
cmps
inc
inc
adc
mov
mov
xchg
js
push
sub
push
dec
mov
push
loope
add
jae
test
add
sub
and
pop
xchg
fisttp
sbb
sbb
(bad)
push
cmp
jb
aam
xchg
push
dec
test
stos
loopne
test
dec
push
cmc
call
xor
pop
loop
mov
cmp
xchg
mov
adc
pop
jno
mov
nop
jo
scas
stc
jb
mov
outs
jne
jge
popf
cmp
cmps
xchg
jns
xchg
fwait
mov
(bad)
repz
sahf
fdivr
sbb
repz
clc
xchg
data16
mov
test
mov
cmc
sbb
mov
mov
sbb
adc
cmc
les
std
dec
jmp
add
ds
cdq
mov
pop
ja
pop
jp
jnp
and
in
jmp
bnd
leave
jbe
scas
aam
xchg
bound
ffree
inc
adc
xor
(bad)
data16
scas
shl
aaa
push
loope
repz
mov
out
das
cmp
retf
in
adc
push
push
out
mov
sbb
pop
jmp
jl
clc
pusha
xor
ja
push
daa
pop
int3
xor
int
gs
xor
shl
out
adc
fisubr
test
sbb
ss
repnz
addr16
lahf
scas
cli
iret
bound
out
mov
adc
pop
lods
ins
adc
adc
shl
rcl
cmp
add
pop
inc
mov
(bad)
xchg
mov
xlat
xchg
add
rcl
pop
int
fadd
mov
fmul
sbb
or
sbb
xchg
stos
mov
pop
and
dec
int
fwait
mov
mov
cmps
mov
cmp
add
pop
stos
mov
inc
loope
adc
jbe
xor
mov
sub
push
cmp
xor
mov
ja
mov
xor
call
in
sub
mov
mov
add
mov
mov
xor
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
or
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
cmp
jne
mov
mov
sub
mov
mov
xor
mov
div
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
jmp
mov
mov
and
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
xor
leave
ret
push
mov
jmp
cmp
aas
shl
jge
mov
inc
add
mov
cmp
jne
jmp
in
cdq
jg
push
call
mov
jmp
(bad)
sahf
pusha
mov
push
das
cmp
(bad)
daa
push
push
xor
pop
ret
push
mov
sub
mov
mov
sub
mov
je
mov
mov
jmp
mov
mov
xor
div
mov
push
pop
and
mov
mov
imul
mov
mov
mov
mov
mov
mov
xor
push
pop
div
mov
mov
imul
mov
push
pop
xor
mov
mov
mov
mov
leave
ret
push
mov
sub
push
pop
test
je
mov
jmp
mov
mov
xor
div
mov
mov
inc
mov
mov
or
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
push
pop
sub
mov
mov
and
mov
mov
or
mov
mov
mov
xor
inc
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
movsx
imul
mov
mov
and
mov
mov
mov
mov
mov
movzx
xor
mov
mov
sub
mov
mov
mov
movzx
movzx
sub
mov
push
movzx
push
call
pop
pop
mov
call
mov
mov
xor
imul
mov
movzx
add
mov
push
movzx
push
call
pop
pop
mov
mov
mov
mov
mov
mov
imul
mov
cmp
je
mov
mov
jmp
mov
movzx
xor
div
mov
mov
mov
mov
mov
mov
mov
inc
mov
movsx
test
jne
leave
ret
push
mov
sub
push
mov
mov
push
push
call
pop
pop
push
call
mov
mov
movzx
mov
mov
mov
xor
push
pop
div
mov
cmp
je
mov
mov
jmp
mov
mov
movzx
xor
div
mov
mov
mov
mov
movzx
or
mov
mov
add
mov
mov
mov
push
pop
mov
mov
call
mov
mov
xor
push
pop
div
mov
mov
or
mov
mov
mov
push
push
call
pop
pop
push
push
call
pop
pop
push
push
call
push
call
pop
pop
mov
mov
mov
mov
push
call
mov
cmp
je
mov
and
mov
mov
sub
mov
mov
mov
mov
jmp
mov
xor
je
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
imul
mov
mov
imul
mov
mov
jmp
mov
mov
mov
sub
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
div
mov
mov
and
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jge
rdtsc
mov
and
jmp
mov
inc
mov
mov
xor
je
mov
xor
mov
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
imul
mov
mov
add
mov
jmp
mov
sub
mov
rdtsc
sub
mov
mov
xor
push
pop
div
mov
mov
or
mov
mov
xor
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
and
jmp
mov
inc
mov
and
add
neg
add
neg
mov
movsx
test
je
add
neg
add
neg
mov
inc
mov
add
neg
add
neg
jmp
add
neg
add
neg
mov
mov
mov
cmp
jge
mov
xor
push
pop
div
mov
mov
or
mov
mov
xor
mov
mov
xor
mov
mov
add
mov
mov
mov
mov
and
push
pop
and
mov
mov
sub
mov
mov
add
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jge
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
mov
xor
mov
mov
mov
and
mov
jmp
mov
inc
mov
mov
cmp
jge
mov
add
mov
push
pop
and
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
shl
mov
jmp
push
pop
imul
mov
mov
xor
mov
mov
or
mov
mov
mov
mov
and
mov
and
xor
je
mov
imul
mov
mov
xor
mov
mov
imul
mov
mov
mov
mov
jmp
and
cmp
je
mov
xor
mov
mov
sub
mov
mov
mov
mov
or
mov
jmp
cmp
je
mov
mov
or
mov
mov
or
mov
mov
xor
mov
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
add
mov
and
add
neg
add
neg
mov
movsx
test
je
add
neg
add
neg
mov
inc
mov
add
neg
add
neg
jmp
add
neg
add
neg
mov
mov
and
push
pop
and
mov
mov
sub
mov
mov
add
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jge
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
mov
xor
mov
mov
mov
and
mov
jmp
mov
inc
mov
mov
cmp
jge
mov
add
mov
push
pop
and
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
shl
mov
jmp
push
pop
imul
mov
mov
xor
mov
mov
or
mov
mov
mov
mov
and
mov
and
xor
je
mov
imul
mov
mov
xor
mov
mov
imul
mov
mov
mov
mov
jmp
and
cmp
je
mov
xor
mov
mov
sub
mov
mov
mov
mov
or
mov
jmp
mov
mov
jmp
jmp
and
and
push
pop
and
mov
mov
sub
mov
mov
add
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jge
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
mov
xor
mov
mov
mov
and
mov
jmp
mov
inc
mov
mov
cmp
jge
mov
add
mov
push
pop
and
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
shl
mov
jmp
push
pop
imul
mov
mov
xor
mov
mov
or
mov
mov
mov
mov
and
push
pop
and
xor
je
mov
imul
mov
mov
xor
mov
mov
imul
mov
mov
mov
mov
jmp
and
cmp
je
mov
xor
mov
mov
sub
mov
mov
mov
mov
or
mov
jmp
cmp
jne
mov
imul
mov
mov
imul
mov
cmp
je
mov
mov
jmp
mov
mov
movzx
xor
div
mov
mov
movzx
or
mov
mov
mov
push
push
push
call
add
and
mov
imul
mov
mov
movzx
and
mov
mov
sub
mov
mov
mov
mov
mov
and
mov
mov
and
jmp
mov
inc
mov
mov
xor
je
mov
add
mov
mov
mov
and
mov
movzx
and
mov
movzx
add
mov
mov
imul
mov
mov
xor
mov
mov
or
mov
movzx
movzx
cmp
je
movzx
movzx
xor
mov
jmp
jmp
movzx
movzx
sub
mov
mov
add
mov
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
sub
mov
mov
add
mov
movzx
imul
mov
mov
or
mov
mov
shr
and
movzx
mov
mov
and
movzx
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
or
mov
mov
imul
mov
mov
mov
mov
and
movzx
imul
mov
mov
xor
mov
div
mov
push
pop
sub
mov
mov
add
mov
mov
and
mov
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
add
add
mov
mov
xor
push
pop
div
mov
push
pop
sub
mov
mov
or
mov
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
imul
mov
mov
mov
mov
add
mov
movzx
xor
mov
div
mov
mov
xor
mov
div
mov
mov
xor
mov
mov
imul
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
or
mov
jmp
movzx
xor
mov
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
div
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
xor
je
mov
and
mov
jmp
mov
or
mov
mov
and
mov
mov
lea
xor
mov
push
push
jmp
mov
and
mov
mov
imul
mov
mov
mov
mov
imul
mov
mov
or
mov
mov
imul
mov
mov
add
mov
mov
add
mov
mov
mov
call
mov
add
mov
mov
imul
mov
mov
add
mov
mov
mov
call
mov
imul
mov
mov
and
mov
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
and
mov
mov
mov
mov
movzx
xor
mov
mov
xor
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
mov
mov
mov
imul
add
pop
leave
ret
push
mov
push
call
pop
ret
pop
lea
push
mov
push
push
mov
xor
mov
div
mov
mov
add
mov
mov
leave
ret
push
mov
sub
mov
xor
mov
div
mov
mov
add
mov
mov
sub
mov
mov
leave
ret
push
mov
sub
push
push
mov
mov
call
mov
mov
lea
push
call
mov
or
mov
mov
add
mov
mov
imul
mov
mov
mov
mov
sub
mov
mov
add
mov
mov
xor
mov
mov
xor
mov
mov
mov
call
mov
call
xor
add
mov
push
call
movzx
cmp
jne
push
push
call
pop
pop
push
push
push
call
add
mov
push
push
call
pop
pop
push
push
call
pop
pop
mov
jmp
xor
jmp
push
call
xor
jne
push
call
movzx
cmp
jne
push
push
call
pop
pop
push
push
call
push
call
mov
push
push
call
pop
pop
push
push
call
push
call
mov
call
mov
push
call
call
mov
mov
xor
je
mov
jmp
jmp
and
cmp
je
push
push
push
call
add
cmp
jne
mov
jmp
jmp
and
cmp
je
mov
mov
mov
sub
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
div
mov
mov
and
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jge
rdtsc
mov
and
jmp
mov
inc
mov
mov
xor
je
mov
xor
mov
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
imul
mov
mov
add
mov
jmp
mov
sub
mov
rdtsc
sub
mov
mov
xor
push
pop
div
mov
mov
or
mov
mov
xor
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
and
jmp
mov
inc
mov
and
add
neg
add
neg
mov
movsx
test
je
add
neg
add
neg
mov
inc
mov
add
neg
add
neg
jmp
add
neg
add
neg
mov
mov
mov
cmp
jge
mov
xor
push
pop
div
mov
mov
or
mov
mov
xor
mov
mov
xor
mov
mov
add
mov
mov
mov
mov
and
push
pop
and
mov
mov
sub
mov
mov
add
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jge
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
mov
xor
mov
mov
mov
and
mov
jmp
mov
inc
mov
mov
cmp
jge
mov
add
mov
push
pop
and
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
shl
mov
jmp
push
pop
imul
mov
mov
xor
mov
mov
or
mov
mov
mov
mov
and
mov
and
xor
je
mov
imul
mov
mov
xor
mov
mov
imul
mov
mov
mov
mov
jmp
and
cmp
je
mov
xor
mov
mov
sub
mov
mov
mov
mov
or
mov
jmp
cmp
je
mov
mov
or
mov
mov
or
mov
mov
xor
mov
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
add
mov
and
add
neg
add
neg
mov
movsx
test
je
add
neg
add
neg
mov
inc
mov
add
neg
add
neg
jmp
add
neg
add
neg
mov
mov
and
push
pop
and
mov
mov
sub
mov
mov
add
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jge
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
mov
xor
mov
mov
mov
and
mov
jmp
mov
inc
mov
mov
cmp
jge
mov
add
mov
push
pop
and
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
shl
mov
jmp
push
pop
imul
mov
mov
xor
mov
mov
or
mov
mov
mov
mov
and
mov
and
xor
je
mov
imul
mov
mov
xor
mov
mov
imul
mov
mov
mov
mov
jmp
and
cmp
je
mov
xor
mov
mov
sub
mov
mov
mov
mov
or
mov
jmp
mov
mov
jmp
jmp
and
and
push
pop
and
mov
mov
sub
mov
mov
add
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jge
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
mov
mov
xor
mov
mov
mov
and
mov
jmp
mov
inc
mov
mov
cmp
jge
mov
add
mov
push
pop
and
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
shl
mov
jmp
push
pop
imul
mov
mov
xor
mov
mov
or
mov
mov
mov
mov
and
push
pop
and
xor
je
mov
imul
mov
mov
xor
mov
mov
imul
mov
mov
mov
mov
jmp
and
cmp
je
mov
xor
mov
mov
sub
mov
mov
mov
mov
or
mov
jmp
cmp
jne
push
push
call
pop
pop
test
je
push
push
call
pop
pop
push
call
pop
mov
cmp
je
mov
jmp
and
cmp
jne
push
call
push
xor
xor
mov
push
or
push
ret
mov
sub
mov
mov
and
mov
mov
mov
push
iret
xchg
mov
add
adc
pop
pop
leave
ret
push
mov
cmps
enter
arpl
call
mul
imul
mov
jmp
xor
stc
scas
std
jo
call
and
dec
pop
call
xor
pop
ret
push
mov
push
xor
lea
add
push
add
push
add
push
add
push
add
mov
push
push
ret
leave
ret
push
mov
push
push
call
pop
ret
push
mov
call
pop
ret
(bad)
in
jge
sbb
mov
push
imul
jb
pushf
aam
add
retf
fist
ds
push
test
mov
push
int3
int3
sub
loope
xchg
shr
sbb
push
ja
das
call
pop
xchg
or
pop
or
stos
pop
outs
jne
scas
inc
adc
shl
fisubr
cmp
ret
mov
clc
test
adc
jmp
shl
jno
push
addr16
push
in
std
leave
jg
in
xchg
adc
xchg
fwait
pop
popf
inc
cmp
cs
and
or
jnp
dec
pop
ds
push
movs
inc
outs
fwait
dec
test
jnp
cmp
aad
xor
pop
xor
sub
mov
xchg
adc
sahf
jmp
sbb
add
out
inc
mov
(bad)
fld
jle
adc
ss
jecxz
cmp
stos
mov
and
rol
aas
fs
push
bound
inc
adc
cmp
popf
(bad)
scas
mov
lock
in
sahf
enter
mov
pop
pop
ficomp
push
jle
jp
add
jmp
popa
cmp
lods
pop
mov
mov
adc
dec
aaa
out
add
out
mov
cmp
call
cmp
ds
ins
rcr
test
repnz
xchg
out
mov
add
jne
test
mov
repnz
inc
(bad)
adc
repz
xlat
pop
dec
or
push
mov
cdq
xchg
xchg
jg
clc
xor
xlat
adc
or
or
jo
repz
pop
js
add
add
mov
add
loope
test
cmc
dec
das
mov
xlat
sar
jg
ja
pmaddwd
sub
jne
mov
and
pop
mov
in
jp
xor
inc
cmp
xchg
lds
inc
inc
sbb
sbb
push
xchg
cmp
aad
add
pop
dec
xchg
or
add
aad
sbb
or
push
push
mov
sub
pop
cmc
sbb
xchg
fistp
leave
cmps
rcr
fbld
idiv
mov
jle
mov
loope
mov
ins
shl
jmp
jmp
sahf
retf
stos
push
dec
push
icebp
sahf
jg
xor
icebp
xchg
cmp
mov
fidiv
pop
cmps
jae
inc
lods
js
push
dec
ror
push
and
les
push
ds
daa
mov
mov
in
push
into
adc
push
cmps
xchg
adc
or
or
cli
xchg
lods
xchg
inc
ret
lahf
push
xchg
xchg
mov
xchg
inc
repnz
or
ins
mov
mov
jg
das
cmps
nop
pop
cs
add
ret
jae
or
fcmovnb
ins
sar
inc
cwde
xchg
push
fmul
addr16
rcl
sar
(bad)
and
in
adc
adc
sbb
loopne
aad
xor
out
jne
or
jmp
xlat
mov
into
push
addr16
adc
adc
inc
mov
dec
out
iret
push
in
dec
mov
xor
adc
jo
test
pop
ret
ret
xor
arpl
jl
mov
lock
dec
xchg
xchg
push
sub
mov
(bad)
push
ficomp
(bad)
add
dec
pop
retf
xor
loopne
bound
ins
nop
and
xor
sti
movs
mov
or
repz
int3
imul
outs
mov
pusha
stos
dec
inc
aas
sub
frstor
fiadd
pop
loope
push
loope
push
lock
popf
nop
sar
sahf
sti
xchg
ss
rcl
adc
fcom
and
jae
inc
fs
test
movs
test
out
aad
clc
(bad)
(bad)
sub
jo
sahf
xchg
data16
mov
inc
xchg
sub
mov
pop
dec
imul
xchg
cmc
sbb
pop
add
scas
sahf
push
dec
hlt
std
ret
xchg
jae
div
sub
jge
lea
xchg
clc
push
fcomp
nop
inc
mov
cs
jb
inc
enter
(bad)
push
inc
mov
bound
loop
mov
arpl
jle
into
mov
lahf
and
and
rol
lods
adc
xchg
(bad)
push
jbe
shr
rcl
adc
addr16
addr16
movs
mov
retf
pop
aam
cld
cmps
adc
add
test
inc
or
cmp
mov
mov
test
dec
mov
pop
jge
mov
int
loope
cmp
imul
cmp
mov
xchg
cmps
(bad)
xchg
cmps
cwde
pop
jp
mov
in
imul
(bad)
call
mov
inc
lods
arpl
push
out
iret
adc
out
out
scas
mov
dec
stos
jmp
jne
retf
ins
jp
dec
dec
pop
call
add
ret
add
jne
out
fadd
retf
nop
sbb
sub
or
sar
pop
sub
add
pop
mov
mov
sub
xor
or
sub
jb
xchg
inc
xchg
dec
add
adc
add
and
mov
psubsb
sub
arpl
add
add
loopne
and
cs
lock
dec
imul
pop
dec
mov
inc
add
lea
popa
js
(bad)
push
sbb
jns
cmp
cmp
add
inc
add
xor
push
sbb
cld
fild
mov
gs
call
test
mov
mov
mul
mov
mov
pop
push
cmp
or
add
(bad)
js
dec
scas
shl
loope
jne
add
xchg
jne
add
push
daa
nop
and
and
add
add
or
jmp
sbb
inc
inc
gs
push
cmp
inc
push
push
addr16
pop
and
mov
inc
adc
inc
sub
clc
push
loop
add
cmp
push
cmp
pop
adc
ret
movs
ror
in
xor
shl
cwde
dec
mov
jmp
enter
addr16
sbb
jne
dec
add
dec
cmp
sar
gs
inc
mov
rol
and
push
dec
cmp
inc
out
js
ret
cmp
and
sub
or
mov
push
add
add
cld
xchg
(bad)
inc
call
inc
sar
inc
xor
add
add
sub
or
add
mov
add
inc
mov
sti
inc
inc
and
xor
and
cmp
sub
push
outs
mov
add
sub
adc
into
adc
xor
cmp
mov
adc
test
add
cmp
mov
pop
push
je
xor
addr16
cmp
push
and
inc
out
sub
pop
add
retf
jae
jb
inc
pusha
push
cmp
pop
jno
int3
enter
xor
ret
xor
mov
and
push
xchg
or
ret
jne
cmp
xor
je
xor
dec
rcr
jae
add
add
rdmsr
jg
icebp
mov
inc
mov
add
repnz
pop
cli
mov
lea
outs
pop
add
add
or
inc
add
in
mov
mov
rcl
test
push
inc
loop
movups
push
push
add
push
add
int3
jge
jb
push
inc
push
push
add
add
cwde
pop
aam
test
push
(bad)
pop
or
(bad)
add
mov
or
and
enter
push
mov
mov
and
call
sbb
jae
push
inc
add
adc
add
xchg
add
xor
nop
mov
inc
sbb
in
and
and
dec
je
add
inc
jne
push
adc
jne
dec
ins
or
or
ins
cmp
add
out
cmp
mov
movaps
push
or
aaa
call
dec
or
push
adc
cld
enter
(bad)
movs
cmp
call
jmp
clc
inc
push
pop
inc
loope
call
or
mov
mov
mov
add
mov
inc
push
or
jne
sbb
pop
mov
adc
repz
or
ror
outs
popa
sar
pop
aaa
add
call
pop
test
cmp
rol
add
not
cmp
adc
imul
and
and
call
add
push
add
jge
and
mov
inc
mov
add
test
add
add
sti
fimul
ins
add
pop
inc
popa
fild
mov
push
inc
enter
rcl
add
dec
or
popa
inc
push
sub
add
cld
add
add
fbld
inc
inc
(bad)
add
add
and
push
inc
sahf
add
add
(bad)
cmp
icebp
mov
xor
jne
jle
shl
sbb
in
jo
add
pusha
pop
mov
clc
pushw
jmp
or
popa
dec
push
sbb
add
imul
jl
rol
and
into
xchg
(bad)
aaa
es
leave
sbb
call
add
add
jmp
clc
add
mov
test
dec
in
xor
mov
cmp
stos
sbb
repz
push
add
jmp
or
add
dec
add
lods
cld
sbb
dec
ret
and
fld
aas
add
mov
fwait
inc
pop
sbb
je
xor
mov
push
cmp
cmp
add
pop
sbb
ins
rol
das
inc
mov
add
bound
cmps
jne
mov
inc
and
add
push
shl
adc
nop
cmp
stos
mov
jmp
in
test
mov
rcl
sbb
inc
add
add
shr
pop
cmp
add
int3
fcom
cmp
add
add
xchg
inc
add
shl
push
push
add
in
popa
add
cmps
je
sub
mov
shr
fiadd
jge
daa
outs
mov
call
rol
add
add
popa
push
add
jae
add
jb
in
add
bound
sub
inc
mov
fs
icebp
leave
pop
div
or
inc
push
mov
add
fimul
fld
jmp
push
loopne
ins
pusha
mov
adc
loopne
and
aaa
jmp
dec
push
test
xor
out
push
add
add
retf
add
jmp
add
jle
or
inc
icebp
ds
lea
(bad)
xor
jmp
push
xor
aas
inc
adc
loop
xor
bound
xchg
and
das
cld
fcom
add
cmp
and
add
loopne
dec
(bad)
adc
mov
mov
mov
add
inc
lock
adc
verr
add
hlt
adc
xor
jmp
mov
stos
or
push
jmp
push
and
jo
cmp
mov
mov
rcl
ret
and
inc
lea
add
inc
aaa
push
lods
push
mov
not
pop
mov
or
pop
jo
popa
mov
arpl
jae
or
aas
push
push
cmp
push
pusha
inc
adc
or
push
js
and
push
add
add
stos
add
jne
je
add
push
sbb
test
test
add
mov
xchg
and
push
pop
(bad)
je
add
add
add
jne
add
add
add
inc
fld
inc
add
call
aas
mov
push
xor
dec
shl
mul
jne
std
mov
and
(bad)
cmp
mov
inc
mov
adc
add
mov
or
stc
mov
(bad)
ficomp
lock
mov
fwait
push
mov
lds
sub
fild
call
add
push
sub
sub
adc
or
push
push
pop
jge
adc
mov
jo
dec
jecxz
mov
rol
js
cwde
inc
or
sahf
outs
dec
add
and
push
add
push
mov
inc
shl
adc
add
pcmpeqw
out
out
setae
ins
push
add
push
mov
lock
and
add
(bad)
mov
or
bound
or
lea
pop
nop
pusha
add
xor
inc
add
or
xor
push
lock
mov
hlt
loopne
add
add
test
lea
sub
add
(bad)
fnclex
jmp
popa
je
push
jne
and
mov
add
fcomp
add
retf
add
and
ret
sbb
xor
mov
(bad)
nop
adc
inc
add
dec
cmp
or
rcl
(bad)
lock
jmp
add
adc
dec
out
or
cmp
add
add
add
dec
out
add
add
in
xor
pop
mov
add
inc
test
add
mov
scas
dec
ss
cmp
mov
dec
or
mov
je
or
add
or
adc
push
les
sbb
inc
dec
rcl
jne
and
xchg
adc
xchg
xor
data16
or
or
nop
je
pslld
sti
add
add
or
add
sbb
xor
je
shl
pop
sbb
add
cmp
push
dec
movs
xor
jmp
stos
jle
add
and
add
add
add
movs
inc
jle
mov
mov
push
and
cmp
add
xchg
mov
inc
dec
mov
mov
jl
pusha
push
mov
test
inc
ror
inc
in
pusha
and
(bad)
ret
(bad)
push
out
adc
inc
xor
jae
sub
dec
(bad)
push
push
dec
test
jmp
pop
sub
imul
outs
cmp
and
add
push
push
pop
pop
pop
in
sbb
pop
(bad)
mov
push
jne
dec
in
cmp
mov
loope
add
jge
sahf
aad
(bad)
loopne
pusha
inc
xchg
xchg
fldz
lods
mov
push
ror
loopne
mov
add
sbb
inc
add
and
add
int3
inc
ficom
shl
pop
dec
cli
xchg
imul
retf
xchg
pop
fdiv
fadd
dec
in
add
add
iret
je
mov
test
loope
dec
sbb
shl
xor
push
(bad)
cmp
and
gs
inc
pop
bound
add
and
add
add
add
inc
and
or
inc
cmp
inc
add
add
cdq
mov
add
mul
add
cmp
add
pop
pop
call
adc
pop
jae
dec
je
jecxz
jmp
call
mov
adc
dec
loope
inc
add
or
add
push
add
jmp
cmp
push
mov
ja
push
fisttp
add
add
aaa
or
je
outs
arpl
pusha
sub
inc
xchg
adc
sbb
ins
add
daa
or
push
add
add
verr
shr
add
or
mov
ret
or
or
adc
je
repz
xor
dec
(bad)
mov
stos
iret
push
out
xor
clc
outs
add
mov
add
jb
cmp
movs
jle
add
add
mov
push
ror
add
push
arpl
add
enter
pop
iret
add
push
push
add
cmp
xchg
add
arpl
scas
mov
add
lock
jb
sub
mov
mov
pushf
retf
xchg
add
sbb
ret
mov
jb
lea
inc
add
ins
or
add
outs
pop
xor
add
sbb
ds
(bad)
mov
outs
pop
jl
add
clc
jno
popf
inc
rsqrtps
add
add
rol
and
mov
cld
jne
rol
add
inc
cmp
je
add
sbb
dec
lock
jle
add
pop
adc
je
and
arpl
inc
cs
fadd
add
push
jo
adc
ret
mov
push
jb
popf
jne
pop
adc
add
sbb
pop
clc
mov
bnd
dec
xor
adc
add
push
sub
xor
lock
daa
push
lea
push
xchg
add
inc
add
pop
lods
add
and
push
pop
mov
or
dec
mov
jne
pop
add
push
rcr
add
push
je
pushw
or
add
mov
sahf
lea
adc
add
push
xchg
imul
add
arpl
inc
or
call
add
pop
push
mov
add
pop
ss
push
pop
push
xor
arpl
nop
mov
int3
or
dec
push
jns
lahf
add
or
xor
add
scas
xchg
adc
add
dec
mov
add
mov
sub
sbb
jne
or
add
jle
je
xchg
mov
scas
loopne
cmp
ins
lea
mov
xchg
xor
xchg
add
aad
push
jmp
push
add
push
dec
add
add
sbb
mov
pxor
fadd
add
leave
(bad)
idiv
fimul
mov
add
mov
adc
pop
adc
xor
push
add
leave
dec
or
sub
mov
add
rol
push
add
adc
wrmsr
add
push
push
cmp
inc
cmp
add
xor
cmp
add
jne
setle
push
repz
jno
cmp
adc
mov
xchg
mov
cmp
add
je
add
lock
add
add
push
shl
push
add
leave
jne
inc
test
push
or
or
data16
add
mov
add
jb
jmp
or
add
pop
cmps
or
ds
lock
addr16
dec
push
fsubr
or
inc
dec
mov
je
test
pop
and
jne
mov
adc
push
rol
sub
pop
inc
add
ins
add
sub
rcl
xor
add
xchg
rol
jae
or
xor
repz
push
jnp
push
ret
inc
or
je
int3
push
jmp
pop
sbb
add
sahf
jo
inc
add
cld
int
xor
add
mov
add
data16
add
jne
xor
inc
in
add
add
cmp
wbinvd
push
in
call
(bad)
sbb
mov
sbb
cli
push
or
adc
inc
shl
mov
jb
test
add
rol
ins
out
jmp
or
mov
loopne
adc
add
adc
adc
lock
sti
cld
mov
cmp
aam
inc
int
sar
leave
(bad)
je
rol
add
or
add
jmp
mov
lea
fadd
adc
lea
add
push
add
rcl
add
jo
add
adc
add
ret
les
add
xor
jmp
data16
adc
add
push
das
inc
icebp
repz
xor
(bad)
push
lea
and
adc
adc
add
lock
add
add
jae
push
jnp
add
loopne
(bad)
mov
and
pop
add
call
shl
inc
mov
jne
pop
fnstenv
aam
lods
pop
test
inc
add
and
outs
add
xor
inc
cld
mov
jo
lock
sbb
mov
or
push
clc
push
and
jo
push
jmp
adc
add
add
add
js
sub
inc
jo
ja
std
xchg
lea
in
add
in
add
cmp
clc
enter
xor
xchg
inc
or
add
dec
sub
mov
dec
jl
adc
or
and
add
xchg
add
outs
push
cmp
add
add
into
dec
pushf
mov
loope
add
pop
sub
xor
popf
mov
push
inc
xlat
imul
dec
mov
add
lods
mov
in
push
xchg
cdq
aad
mov
jne
mov
inc
fadd
inc
sub
pop
xor
cmp
inc
mov
or
movs
add
mov
pop
sub
add
leave
in
xor
add
add
daa
add
push
push
aam
jmp
retf
(bad)
jbe
push
sbb
je
dec
add
push
push
mov
mov
adc
add
add
and
dec
jo
jb
pusha
add
stos
adc
pop
aas
fiadd
std
hlt
or
in
add
dec
cmp
adc
je
push
inc
adc
or
adc
add
aad
movs
or
inc
sbb
jne
xor
repz
mov
jne
adc
jne
shl
and
add
inc
dec
in
adc
add
add
push
pop
cmp
pop
add
add
pop
syscall
mov
loopne
or
aaa
inc
test
xchg
inc
pop
lock
(bad)
loop
fcom
or
inc
sar
bound
push
add
pop
sub
mov
mov
pusha
push
jge
or
test
jb
and
inc
outs
cmp
adc
sub
jne
add
add
add
and
rcr
pcmpgtd
or
inc
dec
shl
loopne
sbb
mov
gs
push
or
gs
mov
jne
or
mov
add
mov
adc
fs
push
mov
mov
mov
popa
adc
pop
xor
add
in
jo
popa
ror
jo
or
add
push
inc
add
add
in
pusha
or
loope
inc
add
add
add
clts
sahf
jne
add
add
mov
add
leave
mov
push
inc
add
push
xorps
(bad)
enter
call
jo
mov
popa
or
add
jmp
add
je
enter
or
mov
add
add
xor
clc
inc
jl
mov
sbb
push
or
and
icebp
test
sub
add
test
cmp
clc
pslld
add
sar
cmp
lods
and
hlt
add
fdiv
(bad)
cld
sbb
adc
inc
and
cmp
(bad)
mov
adc
es
aam
icebp
pop
loope
xor
or
arpl
mov
jns
mov
movsx
in
loop
inc
ret
rcl
push
inc
inc
outs
inc
cmp
jb
mov
or
add
inc
je
sbb
bound
push
or
xchg
and
nop
and
xor
dec
and
test
ret
jns
inc
jge
fnsave
adc
inc
pop
out
adc
or
lods
add
add
mov
and
jmp
add
push
rcl
xor
ret
xor
pusha
xor
jo
mov
push
int
mov
xor
add
jmp
daa
add
add
in
fwait
or
in
add
mov
cld
jg
push
mov
pusha
or
add
add
sbb
or
inc
ds
shl
into
add
mov
pop
and
loopne
add
lea
adc
movs
push
add
or
xor
push
(bad)
sbb
jmp
psubsb
inc
adc
sbb
test
push
jne
push
imul
or
stc
icebp
add
adc
push
xor
mov
xor
popa
dec
shl
shr
cmp
dec
adc
rol
dec
dec
inc
mov
jge
inc
inc
sub
xor
pusha
shl
prefetch
or
xor
sub
enter
mov
add
push
and
pusha
rol
add
inc
sar
inc
je
cvtdq2ps
add
dec
inc
or
inc
cmp
and
bound
add
mov
pop
mov
add
leave
jl
add
and
add
js
push
push
dec
and
pop
or
add
mov
bound
call
ins
inc
push
or
shl
pop
add
sub
add
in
dec
jne
and
add
add
dec
push
mov
mov
pmuludq
inc
ret
cmp
xor
xlat
dec
in
imul
(bad)
data16
add
add
push
fsubp
inc
or
dec
push
add
push
adc
aaa
adc
mov
push
wrmsr
retf
add
mov
and
push
add
rol
dec
adc
push
add
out
out
mov
mov
test
jmp
push
inc
(bad)
add
add
push
add
stos
call
sbb
and
or
add
jmp
test
adc
ja
jg
add
scas
mov
mov
ror
push
call
add
mov
leave
mov
xor
dec
cmps
ja
adc
mov
pop
add
sar
cmp
adc
add
je
mov
jb
push
mov
test
dec
dec
pop
div
push
lea
mov
cdq
jae
inc
cld
imul
test
arpl
sub
pop
test
xor
shl
add
xchg
add
sar
pop
dec
addr16
jmp
ins
inc
into
or
add
neg
pushf
pusha
xor
xor
jo
les
add
push
add
outs
cdq
add
xor
lea
pushf
mov
add
jnp
imul
adc
adc
and
add
add
sub
jbe
xor
adc
ror
(bad)
rol
or
add
xor
and
jb
div
pop
inc
add
jmp
add
fwait
inc
loop
sub
dec
dec
outs
or
adc
or
inc
cmp
cmp
sub
xchg
jmp
jmp
and
hlt
push
(bad)
in
mov
or
or
add
xchg
adc
dec
loopne
(bad)
and
iret
pop
mov
or
mov
xchg
in
add
add
dec
imul
xor
inc
jo
dec
jge
ins
shr
fadd
rcl
push
mov
test
add
out
push
clc
call
jns
cmpxchg
inc
xor
add
pusha
dec
pop
add
and
ret
rcl
jge
add
(bad)
jl
adc
push
addr16
rol
add
retf
in
jo
cmp
fadd
loopne
pusha
add
add
movs
inc
pop
push
dec
call
fs
add
jmp
xchg
in
lea
push
add
dec
inc
push
dec
fs
outs
add
ror
jo
cmps
pop
push
mov
pop
in
add
pop
add
jmp
inc
inc
sub
pop
mov
cmp
aas
mov
inc
fmul
add
add
add
add
inc
pusha
push
push
add
add
add
arpl
call
adc
add
mov
nop
dec
sbb
or
call
pop
mov
add
or
add
xchg
call
add
or
adc
push
pop
or
or
add
addr16
movs
add
xor
cs
pop
or
mov
adc
repz
das
jle
adc
enter
mov
push
jne
add
retf
pop
add
xchg
cs
add
and
add
idiv
xor
pop
dec
add
pusha
dec
add
sbb
adc
add
and
inc
fild
test
imul
fisttp
add
add
jne
enter
add
hlt
pop
xor
lock
dec
enter
pusha
add
clc
movs
pop
jno
shr
or
xchg
stos
call
gs
mov
imul
rol
sub
(bad)
add
push
movs
mov
lods
pop
jl
push
mov
repz
jb
jae
add
repz
ret
adc
add
mov
sbb
and
push
inc
add
cmp
pop
sahf
inc
add
shl
adc
cmp
cwde
call
(bad)
call
push
add
inc
add
call
add
add
xor
inc
jge
inc
add
dec
inc
mov
mov
inc
retf
jb
add
pop
in
mov
add
loope
add
or
mov
jo
out
loopne
loope
and
mov
test
or
add
add
jl
jl
xchg
push
pop
jmp
dec
jne
ret
loopne
dec
add
push
ss
and
or
je
add
push
add
pop
add
add
add
inc
add
imul
test
xor
mov
adc
daa
pusha
inc
sub
lea
test
ss
dec
fadd
and
jne
pop
sub
cmp
sub
fnstenv
rcl
dec
xor
in
inc
lock
fld
add
add
xor
loopne
sbb
xor
sbb
adc
lea
jo
or
int
gs
rep
add
add
add
sub
jecxz
(bad)
mov
mov
push
add
mov
sub
xor
hlt
add
fwait
mov
movs
gs
pop
cmp
sub
xor
fbstp
add
je
ss
pusha
arpl
test
push
add
xor
cmc
add
add
push
and
(bad)
dec
and
or
add
test
push
inc
ins
mov
mov
add
out
push
inc
push
(bad)
test
enter
xor
bound
jmp
add
clc
retf
add
sub
movups
xor
add
push
mov
add
mov
mov
cmp
xor
sub
adc
or
add
sub
or
pop
inc
cmp
aaa
mov
imul
add
or
inc
test
adc
scas
leave
loopne
jg
stc
das
shr
mov
mov
push
add
(bad)
mov
add
call
add
push
call
jne
push
inc
rol
add
add
inc
sldt
or
icebp
dec
fld
xor
loop
inc
lock
and
mov
test
daa
pusha
stc
jns
inc
inc
add
push
push
or
sti
mov
xor
adc
lea
cmp
or
mov
call
adc
or
leave
lock
xor
pop
push
push
jl
jb
or
pop
push
jl
mov
mov
mov
jmp
popa
sub
cld
xor
inc
leave
push
dec
shl
push
push
ja
xor
add
add
pusha
add
add
hlt
test
mov
jecxz
adc
add
inc
and
mov
pop
push
xchg
inc
cmp
pop
mov
add
xchg
add
inc
shl
js
jbe
cmp
call
jl
inc
clc
outs
addr16
dec
add
ror
add
jne
jnp
ret
(bad)
sbb
add
pushf
xchg
in
push
push
test
push
mov
add
mov
xchg
add
adc
push
pop
call
and
jmp
push
mov
xor
test
inc
add
xchg
sub
je
mov
pop
adc
mov
push
das
push
add
sub
jb
add
ins
shl
arpl
xchg
add
add
jo
clc
leavew
mov
push
xor
fadd
push
pop
push
test
push
rcr
les
xor
jae
pusha
add
mov
sub
jo
sub
or
push
iret
sub
cmpps
adc
(bad)
out
popa
jb
xor
adc
ja
icebp
cli
add
int3
in
test
or
inc
inc
add
xor
loop
call
ss
cs
add
gs
add
and
mov
add
sub
xchg
pop
cmps
adc
mov
inc
or
adc
xor
push
in
inc
adc
cmp
jg
or
dec
test
mov
ret
jno
add
add
push
and
inc
sbb
inc
add
mov
mov
jne
push
push
adc
or
push
add
fisttp
add
add
aam
ins
add
add
mov
pusha
jp
sub
gs
cs
ret
sbb
mov
cmp
sbb
pop
push
test
inc
(bad)
or
inc
sbb
xor
(bad)
jne
mov
popa
icebp
xor
xor
and
cmp
add
mov
gs
lock
add
or
lea
push
jne
push
or
add
add
adc
cmp
add
(bad)
pop
inc
adc
stc
in
and
inc
fs
mov
xlat
fcomp
cmp
add
add
adc
cmp
int3
add
mov
(bad)
push
and
mov
add
imul
add
ja
or
push
test
adc
add
push
shl
push
add
jmp
clc
jl
aaa
add
push
adc
lea
add
push
add
loopne
cmp
pop
call
and
add
or
ficom
pop
and
add
mov
mov
call
sub
mov
add
or
add
or
mov
adc
test
cmp
outs
mov
push
inc
push
add
push
lock
pop
jmp
cmp
push
test
jmp
dec
sub
dec
or
call
inc
mov
push
add
mov
add
xchg
cld
adc
mov
rol
xchg
sbb
jmp
adc
adc
jne
inc
push
ret
add
cld
add
lods
add
push
add
ror
and
in
arpl
ror
je
ins
pop
xor
pop
mov
das
add
dec
push
add
or
test
push
out
stos
inc
inc
xor
and
outs
clc
pop
sub
inc
mov
les
or
je
add
ror
bound
dec
jb
sete
push
push
pop
jne
sbb
add
mov
ins
xchg
and
(bad)
les
add
mov
fs
mov
jb
add
add
add
cmp
jecxz
or
daa
push
add
add
add
push
(bad)
cmp
rol
lock
xor
les
xchg
push
inc
or
str
(bad)
sti
ud2
ss
daa
add
add
outs
pop
mov
add
popa
mov
push
sbb
test
mov
add
inc
mov
and
rcr
and
xor
retf
loopne
mov
cld
adc
and
adc
add
pop
mov
mov
(bad)
jno
inc
rol
add
push
imul
lea
stos
aas
outs
push
fwait
add
add
mov
add
and
push
inc
outs
jns
dec
mov
in
inc
adc
jge
xor
addr16
adc
inc
xor
loope
add
cmp
mov
daa
dec
inc
push
push
push
jg
call
push
add
add
or
add
jmp
add
push
add
ds
(bad)
icebp
xor
push
inc
jne
push
cdq
ror
je
outs
inc
cmovs
cwde
ret
add
or
mov
pop
add
call
mov
dec
cs
sbb
push
jge
or
adc
aaa
movnti
mov
loopne
(bad)
add
or
add
mov
xchg
ror
sub
add
shl
add
adc
jg
jo
add
add
rol
pop
hlt
add
push
pop
nop
mov
push
outs
fnstenv
xor
lea
push
add
adc
sbb
iret
mov
mov
mov
mov
dec
in
dec
add
add
add
add
and
add
add
and
mov
and
inc
mov
or
inc
cld
dec
mov
sbb
dec
push
add
add
push
add
pusha
sbb
cmc
xchg
inc
mov
gs
popa
sar
cld
dec
mov
xor
or
leave
inc
lock
gs
push
push
add
ja
pop
pusha
xor
test
adc
loopne
je
add
test
adc
call
je
inc
push
sbb
dec
add
adc
js
or
pop
popa
clc
mov
xchg
les
mov
jne
adc
add
js
call
das
pusha
lods
and
pusha
mov
inc
jo
mov
add
push
add
cmp
add
add
adc
fwait
sar
add
inc
push
pop
lea
xchg
mov
adc
mov
stc
and
(bad)
mov
sub
in
push
shr
push
shr
push
retf
mov
add
pop
outs
mov
adc
add
sbb
add
add
xchg
push
out
add
push
outs
mov
add
push
fs
loope
rcl
shl
clc
xchg
test
ins
sbb
inc
inc
adc
jnp
cmp
push
les
add
add
(bad)
mov
add
mov
add
loop
push
cmp
adc
iret
call
ja
mov
mov
mov
(bad)
adc
pop
cmp
and
inc
sub
xor
(bad)
pcmpgtw
xor
adc
cmp
pop
xor
sub
add
mov
adc
sbb
inc
add
cwde
push
sti
add
and
or
ss
mov
inc
pop
add
adc
mov
mov
add
xchg
in
or
rol
add
push
test
dec
cmps
cmp
inc
add
outs
and
fwait
xchg
xchg
push
sub
lock
add
aaa
dec
push
leave
repz
add
or
add
push
push
add
mov
push
push
add
pushf
add
clc
sbb
add
ins
add
add
ins
sbb
or
aad
fmul
hlt
jmp
pop
dec
and
push
push
push
ret
cmp
pop
and
or
xor
jne
xchg
inc
mov
cld
test
sbb
add
push
pusha
add
lds
xor
push
mov
cmps
ss
call
add
or
dec
inc
sub
fisttp
jmp
out
or
sbb
push
xchg
add
hlt
movs
jmp
and
inc
neg
add
cld
lods
out
ja
add
cmp
mov
sar
add
pop
mov
dec
cmps
inc
xor
shr
inc
sbb
xor
adc
add
sbb
dec
inc
bound
cmp
xor
sbb
test
(bad)
outs
xor
shl
add
add
adc
dec
fbld
(bad)
ret
pop
in
add
arpl
add
in
fisttp
test
fst
push
mov
inc
add
add
pusha
adc
and
push
pusha
or
and
jmp
add
pop
add
nop
jnp
mov
mov
dec
mov
push
ret
adc
sbb
add
adc
outs
push
dec
outs
add
pop
inc
or
inc
xor
pop
inc
push
clc
mov
mov
or
bound
inc
arpl
xor
int3
add
jno
adc
and
add
cs
jo
cmp
fwait
push
mov
add
movq
lods
pop
and
lgs
pusha
and
hlt
add
cmp
add
pop
push
mov
xchg
add
add
loop
and
nop
sub
frstor
shl
ja
icebp
mov
test
or
jmp
retf
add
loopne
inc
lea
pop
push
cmp
sbb
inc
call
push
inc
das
xor
add
ss
rol
xor
jbe
outs
or
add
cmps
jmp
popf
add
call
loope
or
add
xor
add
sbb
sub
or
mov
hlt
sti
jo
mov
sbb
inc
rcl
loopne
loope
cmp
add
push
add
inc
inc
adc
fs
xor
loopne
and
push
clts
or
add
(bad)
push
xchg
jl
dec
inc
xor
fld
add
jmp
inc
fwait
push
push
add
inc
loope
push
add
pusha
or
or
add
test
or
jge
push
pop
pusha
sub
add
pop
adc
xor
adc
add
adc
or
xchg
add
adc
pusha
add
push
fwait
xor
inc
rol
mov
int3
push
les
pop
add
or
arpl
adc
jne
pusha
xor
add
add
add
mov
sub
add
push
repz
add
leave
add
inc
je
add
lea
(bad)
adc
inc
jmp
jo
clc
add
pop
add
daa
retf
add
add
push
xchg
rcl
add
and
arpl
rol
add
lds
add
rcl
rcl
cmp
xchg
dec
add
jne
je
inc
add
cld
shr
add
inc
ja
bound
pusha
xchg
add
adc
sbb
(bad)
imul
hlt
push
add
push
sub
ins
add
lock
lock
add
call
je
call
add
add
in
mov
pop
sbb
push
add
jb
pop
lock
je
dec
add
mov
in
fcom
cmp
pop
xor
cli
mov
push
dec
lahf
nop
das
(bad)
cld
mov
jns
xor
mov
or
cld
add
add
pop
jl
sub
ficom
and
push
push
add
call
jmp
jno
xor
adc
je
xchg
add
repz
fld
cmp
add
call
adc
in
and
add
add
pop
push
call
cli
aas
and
add
fadd
mov
push
test
push
add
outs
add
add
retf
jo
mov
pop
or
pushf
add
push
packsswb
pop
add
add
xor
cmp
leave
ins
push
add
mov
jne
cmp
jge
or
add
sbb
add
pop
les
arpl
shl
lock
lock
cdq
mov
add
fild
add
je
xor
or
jns
add
and
add
call
mov
call
in
shl
rcl
(bad)
icebp
fucomi
add
nop
add
or
mov
ins
sub
jmp
hlt
pop
push
push
adc
add
leave
add
dec
add
movs
clc
enter
cmc
rol
dec
ret
push
rcr
es
or
inc
and
stc
lea
in
or
add
or
and
add
popa
push
add
sub
in
xor
jo
mov
and
adc
sbb
es
cld
shl
sub
lea
add
loopne
or
rol
cmp
cmp
dec
rcr
add
cmp
test
popa
jne
push
adc
loope
sbb
repz
add
jae
enter
push
add
cdq
add
add
or
sbb
mov
xchg
mov
mov
add
sbb
movs
mov
sbb
loope
inc
push
pop
loopne
inc
adc
add
je
mov
pop
lea
fsub
add
add
add
add
push
cmp
and
inc
add
shl
add
push
in
or
add
loopne
inc
or
ins
push
sbb
inc
mov
(bad)
sbb
push
sar
adc
adc
nop
add
aas
add
leave
lock
xor
adc
or
loop
mov
jge
adc
adc
or
jmp
mov
(bad)
in
jmp
push
add
fild
pop
push
rol
jno
leave
pop
fwait
xor
add
add
inc
sbb
ret
mov
hlt
loopne
add
mov
rcr
jge
imul
inc
aas
call
jmp
add
dec
pop
xor
adc
mov
pop
(bad)
add
mov
ret
add
lods
rol
inc
push
mov
pop
inc
in
jno
cmp
mov
je
cmp
fild
int3
push
inc
add
pop
add
ins
or
sbb
daa
(bad)
clc
add
add
cmp
jecxz
inc
sbb
call
ins
outs
xor
mov
dec
adc
mov
jne
adc
add
inc
inc
xor
push
add
add
(bad)
xor
jmp
je
stos
rcl
dec
iret
mov
push
jl
jmp
fiadd
mov
sub
add
jne
loop
push
mov
add
lea
rol
push
or
jo
gs
add
add
mov
xor
psubsb
call
add
adc
pop
dec
add
push
or
or
push
lock
jmp
add
add
adc
or
add
add
push
xchg
outs
ds
dec
push
add
xor
pusha
jg
lock
add
add
add
in
loopne
xor
mov
xor
add
mov
popf
xor
or
mov
add
add
dec
repz
cld
test
adc
dec
pop
push
clc
adc
or
add
mov
or
loop
cs
add
cmp
push
ins
dec
push
push
leave
add
add
lock
mov
or
cmp
loope
dec
add
pusha
xor
adc
call
jnp
xchg
sbb
add
enter
js
je
push
call
push
push
adc
mov
inc
adc
pop
push
inc
add
shl
ficom
dec
add
inc
sbb
push
loop
push
adc
or
add
or
call
cld
push
movs
test
je
sub
adc
clc
add
push
add
mov
icebp
or
add
add
mov
lods
push
cmp
and
jne
je
test
cmp
and
add
stc
call
push
push
add
add
push
add
pusha
sub
in
and
sbb
add
add
jns
sbb
loopne
sbb
adc
add
add
nop
xor
jne
jmp
sbb
and
add
push
or
scas
or
add
cmp
je
jae
add
xor
add
add
ret
ret
sbb
inc
add
inc
call
cmp
push
mul
or
sbb
push
inc
mov
lahf
adc
jge
pop
adc
je
js
add
les
xor
mov
add
add
ja
(bad)
jmp
and
add
je
push
add
jp
cmps
add
jo
inc
test
add
fadd
pop
test
test
rcl
mov
fisubr
or
inc
std
sti
mov
add
shr
add
and
ins
inc
pop
test
add
push
add
jno
adc
daa
and
mov
shl
mov
mov
je
ret
adc
or
inc
mov
loopne
rcl
mov
call
push
add
aaa
sub
and
dec
add
or
jne
ret
bound
sub
lock
lock
add
push
add
ret
jo
push
xor
xor
popa
sbb
pop
loopne
mov
clc
jge
inc
xchg
add
add
stc
push
pusha
shr
lock
loop
xor
jnp
mov
inc
add
pusha
mov
retf
sbb
retf
sbb
inc
xchg
sbb
jne
adc
push
inc
add
inc
dec
dec
mov
not
add
jne
pop
add
push
mov
add
sub
imul
pop
sub
cmp
fild
or
enter
(bad)
mov
jmp
pop
push
mov
push
add
add
jg
test
mov
mov
in
fiadd
xchg
xor
or
push
clc
add
sub
add
cmp
test
push
adc
push
add
inc
call
jl
fs
inc
add
pop
mov
dec
add
dec
or
jae
push
add
add
data16
add
test
inc
verr
add
jb
mov
sbb
adc
inc
and
mov
pusha
or
xor
rol
popf
adc
sub
(bad)
jo
add
fadd
loop
aas
popa
jmp
je
push
paddb
adc
scas
add
add
nop
add
xchg
je
push
js
idiv
sahf
add
and
dec
or
loopne
cld
sub
add
or
xor
jo
xor
pop
push
jne
dec
cmps
add
inc
jmp
call
add
push
push
inc
xor
add
add
test
jl
jg
inc
scas
leave
shr
hlt
call
xor
add
push
push
xor
jbe
xchg
add
inc
cs
or
rol
push
xor
push
adc
inc
fild
xchg
pop
push
ret
xchg
xchg
inc
inc
add
rol
sbb
(bad)
aas
lea
jb
add
clc
or
call
xor
push
push
mov
push
xchg
push
mov
add
push
xor
inc
add
push
add
adc
call
sub
xchg
pop
dec
je
lock
les
add
xor
and
add
jmp
add
add
add
cmp
add
mov
and
(bad)
inc
sysenter
rol
inc
jne
sub
add
pop
add
mov
add
clc
mov
push
add
xor
je
and
jg
or
shl
add
or
gs
add
cmc
jnp
add
add
inc
pop
adc
call
in
int
add
and
loope
add
cld
call
jo
popa
and
adc
pop
sbb
push
sub
mov
jo
push
and
in
or
mov
or
mov
and
je
add
shl
jge
pusha
inc
and
xchg
add
mov
push
inc
cld
add
inc
inc
add
rcl
iret
push
mov
je
stc
ja
add
aam
or
adc
add
sub
rol
fsub
sub
and
add
jae
rcl
add
inc
je
cmp
jb
repz
mov
loopne
push
and
add
mov
add
add
jbe
rol
sub
je
into
push
push
cmp
or
mov
add
sub
jbe
(bad)
out
xor
sbb
aam
retf
mov
sbb
dec
call
mov
jmp
(bad)
std
dec
inc
inc
add
push
inc
jne
add
sbb
stc
adc
pop
push
ja
jne
xor
mov
ins
cs
test
and
inc
add
cwde
add
or
push
mov
int3
add
add
add
aam
xchg
inc
push
add
scas
add
and
dec
movs
mov
add
add
jg
and
cmp
mov
sbb
rol
test
lsl
jmp
lea
stos
xor
inc
push
lock
inc
mov
or
jb
or
fldcw
js
xor
add
rcpps
mov
push
mov
mov
push
ret
clc
add
sub
or
push
push
xor
jmp
xlat
leave
xor
sbb
add
and
popf
sub
test
outs
inc
fs
call
shl
xor
add
and
adc
xor
xor
rol
xor
or
xor
add
add
aas
cmp
xchg
inc
xor
jne
scas
mov
aam
shl
push
ret
lea
imul
and
lds
fmul
lea
add
adc
das
jbe
int
lods
mov
jns
jns
inc
push
add
pop
cmp
icebp
xor
rol
jne
add
xor
test
hlt
jbe
xor
inc
je
aad
repnz
pop
out
add
call
gs
add
outs
mov
rol
dec
mov
inc
xor
in
je
add
mov
adc
and
fsubr
mov
xor
jp
movs
gs
(bad)
cmp
push
xchg
dec
outs
int3
cld
push
add
leave
call
cli
adc
(bad)
pusha
je
pushf
jo
and
inc
aaa
or
pusha
hlt
and
push
pushf
add
add
inc
clc
movs
sub
adc
add
ret
inc
cmp
cmp
or
add
add
std
jmp
push
add
add
js
cmp
pop
icebp
add
stc
and
or
(bad)
neg
pop
dec
adc
adc
popa
adc
test
add
je
enter
pop
add
pop
ror
call
add
cmc
add
jne
mov
add
rol
inc
or
jo
push
cmp
and
(bad)
shr
push
push
mov
xor
mov
ret
push
stos
test
push
xor
xor
rol
add
inc
add
mov
jnp
dec
dec
sub
add
push
repz
mov
ret
or
push
xchg
(bad)
jmp
xor
out
add
push
mov
stos
pusha
inc
add
and
pop
or
add
and
popf
sbb
in
add
xchg
add
add
pop
xor
lods
add
call
add
sub
or
lock
ror
test
push
jns
call
add
add
fadd
add
pop
shl
dec
mov
je
movs
jnp
out
fdivr
test
ret
jp
add
jne
mov
inc
inc
inc
test
add
nop
jne
fild
inc
add
xor
add
push
pusha
add
add
sbb
add
call
sti
rcl
loopne
adc
popa
mov
clc
xorps
dec
push
cmp
xlat
(bad)
fs
xor
adc
or
add
add
xor
adc
pop
(bad)
gs
pop
mov
jge
pop
add
pop
add
sbb
add
in
push
inc
lea
and
inc
bound
shl
pusha
sbb
add
sub
js
jp
cmps
and
cmp
pop
jle
jmp
add
push
pop
adc
add
add
adc
jl
pusha
push
cmp
inc
add
pop
fdiv
(bad)
and
xor
call
push
sub
dec
pop
xlat
add
cmp
(bad)
inc
sbb
ret
(bad)
clc
ret
fs
xor
and
adc
inc
or
add
gs
dec
mov
inc
and
cmp
loope
or
rol
pop
inc
xor
je
push
add
add
cld
lea
add
mov
(bad)
or
add
push
iret
add
add
add
retf
outs
cmp
xor
and
push
jl
mov
mov
jge
adc
cmp
add
add
sbb
mov
sub
and
add
or
push
in
push
push
or
rol
inc
loop
or
add
xchg
nop
fnsave
cmc
in
popa
in
push
push
inc
rol
mov
mov
js
and
inc
call
popa
inc
gs
test
sub
add
jne
add
pop
sbb
add
add
adc
add
add
hlt
xchg
sbb
dec
mov
bound
push
pusha
push
js
add
push
sbb
or
add
xor
mov
cmp
add
pop
inc
or
pusha
add
add
jo
js
out
cmp
cmovne
add
mov
inc
and
inc
fadd
pop
add
mov
dec
je
add
cdq
push
inc
pop
jno
xchg
add
ja
sub
adc
pusha
push
(bad)
mov
dec
xor
add
add
xor
movs
add
add
add
test
les
(bad)
in
add
je
inc
aad
jo
cmp
inc
neg
rol
push
jo
inc
and
and
ret
inc
adc
add
iret
xor
jae
pusha
or
add
sahf
dec
add
add
or
in
add
rol
or
inc
rol
xchg
mov
in
add
stc
xor
cs
loope
or
ins
and
inc
cli
xchg
xchg
movs
jne
add
add
inc
push
out
add
mov
cld
jge
add
push
sti
sbb
add
fs
add
les
fistp
pop
callw
enter
lahf
bound
dec
jo
or
and
jae
jne
test
nop/reserved
xor
inc
ds
outs
sbb
push
add
add
add
jbe
inc
arpl
or
hlt
mov
add
rol
pop
push
(bad)
pop
pop
inc
adc
xor
cmp
ret
or
std
push
mov
add
push
add
(bad)
cmp
add
xchg
jb
inc
pop
xchg
add
or
sbb
out
push
xor
ds
or
adc
add
data16
ss
add
call
fsub
lock
in
pop
add
add
and
push
adc
mov
push
xor
inc
or
add
jecxz
mov
mov
push
mov
mov
mov
js
fs
or
jmp
add
sub
add
loopne
je
cmp
pusha
adc
or
pcmpeqw
jb
adc
js
loope
jo
addr16
dec
xchg
adc
imul
mov
add
mov
add
pusha
repnz
inc
add
ins
add
(bad)
arpl
xor
jge
repnz
lea
or
push
cld
cdq
nop
outs
xor
fcmove
adc
popa
inc
sti
push
pcmpeqb
(bad)
add
mov
aas
add
jae
inc
adc
div
adc
loope
mov
icebp
call
and
or
cld
jg
jle
je
fild
rcl
shl
xor
mov
call
jmp
add
and
dec
jne
sub
idiv
fdivrp
clc
push
push
fild
adc
xor
dec
call
jge
sar
add
push
xor
add
add
add
push
(bad)
js
xor
cmp
adc
pop
dec
cmp
sub
fadd
fmul
add
add
mov
(bad)
or
add
inc
cmp
add
cwde
test
and
push
rol
ins
stos
call
add
xor
or
xlat
call
jl
jno
mov
mov
inc
add
add
dec
nop
push
vmfunc
sub
jne
pop
push
adc
rcr
mov
or
add
sub
sar
push
push
mov
dec
xor
add
or
nop
test
inc
add
rcr
ins
ret
sbb
inc
fld
dec
add
add
mov
sbb
jne
add
inc
dec
sar
push
push
clc
and
jmp
add
movs
test
test
inc
push
add
les
rol
sbb
(bad)
pop
push
stos
inc
cmp
ret
sbb
jae
pushf
add
or
add
xor
mov
inc
push
xchg
pusha
xor
push
add
add
sub
add
add
add
inc
(bad)
add
icebp
cmp
and
add
sbb
xchg
mov
sbb
adc
adc
sbb
pop
out
sbb
add
mov
adc
inc
sub
sbb
add
add
and
inc
jnp
pop
cdq
pop
xor
add
or
add
add
push
test
dec
jmp
inc
rol
adc
dec
fadd
push
into
and
or
out
add
in
stos
mov
pusha
mov
sahf
add
inc
add
inc
jle
add
add
mov
or
cdq
call
adc
mov
jns
add
add
mov
adc
and
cmp
loope
das
sbb
xchg
add
icebp
lock
push
je
push
adc
push
add
push
add
adc
push
loope
push
adc
inc
loopne
push
mov
int3
cmp
lds
push
mov
cli
mov
rol
push
dec
inc
xor
add
xor
lods
popa
cmp
fs
jnp
dec
adc
push
xor
push
or
or
mov
add
xchg
pop
jl
clc
xlat
push
jno
add
push
mov
add
add
in
xor
clc
push
sub
nop
xor
pop
cmc
or
add
push
pusha
add
add
neg
mov
pop
add
add
add
aas
jne
adc
add
or
add
jo
push
push
mov
adc
add
or
or
pusha
push
wrmsr
jecxz
js
xor
inc
adc
bnd
cmp
add
movaps
sbb
jne
in
ins
cmp
sub
or
inc
fs
add
and
adc
mov
repz
imul
fnstenv
dec
pop
mov
xchg
push
add
xchg
adc
mov
shl
es
loopne
xor
add
mov
jbe
inc
push
mov
aam
or
jae
sub
push
push
loopne
dec
call
add
push
mov
in
ret
pop
es
ss
adc
adc
xlat
pop
rol
(bad)
inc
mov
push
mov
or
push
dec
adc
rol
jmp
shl
mov
int
xor
mov
cmp
mov
adc
push
adc
cmp
add
or
add
inc
sub
outs
jno
gs
xor
jmp
add
(bad)
rol
lock
jmp
or
add
mov
adc
lock
in
mov
fst
add
les
jmp
(bad)
loope
cdq
mov
or
jmp
cmc
pop
call
mov
push
and
jle
vpshufb
jnp
into
call
(bad)
cld
adc
fnsave
pop
je
sub
loope
mov
cmp
sbb
gs
rol
fcomp
and
add
add
inc
or
mov
add
dec
xor
adc
xchg
mov
inc
cmp
in
movs
or
mov
add
push
fidiv
cld
shl
xor
push
add
clc
loope
push
add
adc
lock
mov
mov
and
push
add
jmp
xor
mov
and
cmp
fiadd
inc
dec
add
inc
cwde
stc
psubw
add
add
mov
mov
add
push
add
add
inc
jne
ret
push
jns
repz
loop
push
cdq
add
push
sub
shr
ret
or
inc
adc
inc
in
or
push
pusha
sub
retf
ins
and
inc
adc
xor
adc
ror
mov
lods
test
add
add
lock
add
and
iret
das
add
add
es
xchg
into
inc
push
xor
push
neg
jmp
mov
mov
jecxz
enter
loopne
add
add
fcomp
inc
add
pop
or
push
mov
cmps
inc
jg
retf
bound
or
adc
push
push
mov
add
jmp
or
add
add
(bad)
push
add
jb
cs
sar
cld
mov
shl
ud0
push
(bad)
or
push
sub
add
pop
inc
rcr
repz
arpl
mov
dec
add
dec
adc
cmp
rol
add
popa
add
add
cmp
or
push
jno
push
data16
push
add
push
dec
pop
add
add
add
pop
adc
xor
inc
inc
push
clc
rcl
dec
inc
add
xchg
les
sar
add
outs
and
mov
push
std
test
inc
push
xchg
mov
icebp
or
mov
inc
fs
add
nop
mov
test
xchg
loope
(bad)
cld
fiadd
or
and
xchg
inc
inc
aam
inc
les
dec
add
add
aad
dec
shr
pop
shl
mul
inc
test
sub
inc
push
dec
add
add
ja
pusha
lmsw
mov
xchg
call
stos
adc
test
jmp
mov
clc
inc
inc
push
add
adc
hlt
mov
push
push
add
xor
jo
push
jb
and
mov
jp
cld
mov
add
or
xor
outs
xchg
pop
add
cli
push
cmp
add
and
mov
ins
jne
add
push
add
push
loopne
add
sbb
nop
ins
data16
adc
mov
test
xor
xor
add
cmp
adc
in
or
add
not
out
add
xor
lock
jmp
pop
inc
sub
push
pop
inc
push
xrelease
add
mov
sub
inc
and
adc
add
js
pop
call
adc
sbb
add
pmaxub
and
shr
cmp
pusha
add
inc
adc
add
adc
mov
dec
stos
leave
aas
sub
add
cld
mov
push
lock
(bad)
jg
jl
push
add
inc
shl
add
nop
add
sub
ret
icebp
sbb
mov
pop
sbb
add
add
inc
push
fwait
shr
push
add
add
xor
add
adc
add
xchg
adc
cld
les
mov
imul
clc
add
cmp
data16
add
add
pop
push
(bad)
push
aas
add
leave
es
shr
and
sbb
pop
add
dec
mov
or
add
add
jo
pop
push
pop
shl
bound
inc
jge
out
adc
adc
add
adc
add
add
inc
add
add
xlat
mov
add
dec
add
sti
mov
repnz
mov
mov
push
add
call
rol
add
rcr
repnz
add
call
inc
lea
mov
push
(bad)
xor
adc
push
bound
jp
add
mov
sbb
repnz
add
add
inc
sbb
push
es
ins
add
sub
gs
jo
int3
sbb
call
adc
mov
inc
jne
pop
add
add
rcl
push
inc
add
inc
and
popa
sar
movups
add
enter
inc
mov
mov
xor
sub
mov
pusha
add
xchg
in
dec
cmp
add
push
cdq
push
into
jecxz
and
and
inc
dec
in
push
retf
mov
mov
rol
add
jne
test
push
push
jne
or
pusha
sbb
imul
add
aam
xor
daa
jp
pcmpeqb
dec
clc
sbb
add
or
mov
add
push
or
xor
add
aam
sub
lahf
add
add
or
jae
sub
popa
inc
call
(bad)
push
lea
add
push
call
popa
loop
adc
push
call
inc
push
sbb
add
add
push
mov
add
inc
adc
or
or
movs
add
push
dec
dec
push
sar
fcom
xor
xor
add
nop
add
mov
das
add
adc
jmp
or
adc
ss
je
push
test
or
gs
call
jne
or
jae
dec
lods
inc
sbb
jne
jne
add
sbb
cmp
in
or
stos
call
mov
jp
push
outs
mov
cmp
cmp
jne
mov
sub
jmp
add
cmp
les
dec
add
inc
add
add
lsl
or
add
inc
test
imul
ds
fistp
and
push
push
jne
or
xlat
or
add
movs
adc
inc
add
xchg
add
mov
into
das
push
push
sbb
imul
add
add
adc
xor
stos
idiv
add
mov
add
inc
adc
add
mov
mov
jne
test
icebp
cmp
add
jp
mov
shl
dec
push
jne
cmp
push
xor
add
not
stc
enter
mov
sbb
push
call
adc
xor
mov
xor
dec
xchg
hlt
cmp
scas
jg
add
pop
add
add
sbb
repnz
cli
sub
and
ja
test
lea
add
fdivp
sub
add
sub
adc
add
les
sbb
ror
ds
mov
enter
pop
call
mov
mov
int
pop
imul
xor
leave
push
add
cld
mov
dec
jle
push
mov
dec
test
nop
push
shr
push
push
dec
sbb
inc
push
inc
xor
add
out
dec
adc
dec
jne
add
push
inc
inc
popf
dec
inc
add
push
cld
adc
xchg
push
cs
add
sbb
bound
test
add
sar
add
ffreep
push
mov
add
setge
repnz
shl
popa
or
call
retf
int3
cmp
arpl
push
ror
call
or
sub
dec
ins
mov
mov
test
in
ja
ret
dec
pop
and
call
xor
add
add
shl
add
add
xor
add
xlat
mov
adc
add
add
test
or
in
add
pusha
mov
add
mov
xor
or
inc
or
add
add
jle
call
add
shl
add
and
dec
add
add
mov
adc
ins
push
jno
and
in
add
add
imul
pop
aad
add
loop
pop
xor
add
push
repz
mov
call
push
add
test
fldcw
xor
test
gs
add
sbb
pop
sbb
pop
adc
add
lock
add
adc
sbb
in
loope
add
add
out
jle
mov
dec
inc
imul
or
push
and
jg
push
data16
and
bound
or
xor
sldt
xchg
push
push
mov
je
jne
in
repnz
or
cmp
shl
adc
push
or
inc
sub
add
cmp
and
mov
mov
lds
push
inc
stos
mov
add
lods
push
add
push
pop
dec
mov
mov
add
fist
add
jmp
inc
add
and
adc
fmul
sub
(bad)
(bad)
fist
and
cld
pop
shl
aad
add
pop
test
pop
cmp
dec
out
push
mov
adc
cmp
rol
push
xchg
adc
jne
jmp
jne
inc
add
test
je
mov
test
gs
mov
ja
pop
or
test
pusha
add
(bad)
lock
inc
sbb
mov
lea
add
inc
or
add
dec
or
add
jge
addr16
inc
push
in
inc
or
arpl
jo
pop
lea
adc
rol
jno
ins
jmp
test
add
sub
jns
fadd
out
dec
add
jnp
idiv
push
popa
jo
jo
mov
mov
add
popa
and
jmp
lea
xor
or
outs
pop
mov
push
or
(bad)
add
add
jge
(bad)
sub
add
add
ret
das
adc
push
mov
add
add
add
jge
stos
(bad)
loope
adc
adc
imul
xor
add
mov
adc
jns
sar
pop
hlt
test
push
push
mov
rep
gs
pop
inc
ds
push
xchg
in
fwait
add
pop
or
pop
adc
aam
add
int3
xor
pcmpeqb
call
xor
inc
mov
cld
and
push
out
in
mov
pop
das
and
test
add
cmp
push
(bad)
fadd
add
xor
xor
rol
sbb
add
push
shr
add
add
add
(bad)
fadd
push
imul
mov
inc
xchg
add
push
in
pusha
repnz
mov
inc
je
and
imul
add
add
pusha
loopne
add
sbb
pusha
arpl
dec
inc
lods
test
jmp
adc
jne
add
inc
ret
xor
jne
jecxz
jne
or
dec
push
add
pop
add
scas
ins
push
and
ror
add
add
ror
jne
cmp
and
mov
je
add
mov
add
sbb
sbb
mov
add
xor
inc
adc
add
ins
mov
cmp
pop
pop
loopne
inc
add
mov
shl
scas
stc
aad
add
push
je
xor
repz
mov
aad
lods
or
mov
sub
and
inc
push
add
add
jae
mov
xor
stos
out
rol
or
(bad)
add
add
add
xor
xor
dec
inc
mov
jge
cwde
stos
mov
xchg
push
shl
fs
(bad)
test
mov
fs
jmp
cmp
mov
add
fcom
and
ret
rol
adc
mov
imul
call
lock
and
add
push
or
inc
test
adc
push
or
pop
xchg
xor
sbb
(bad)
int3
add
fadd
or
and
push
xchg
cmp
inc
loopne
inc
loopne
shl
mov
push
add
clc
test
and
aaa
inc
add
je
addr16
mov
add
adc
push
mov
or
sub
xchg
or
in
push
dec
add
inc
xchg
mov
or
add
pop
(bad)
add
mov
inc
mov
add
add
mov
mov
imul
push
fs
cmp
sbb
cmp
pop
sbb
add
jne
mov
xor
call
and
add
sbb
xor
inc
bound
cs
pop
and
or
ins
add
add
pop
add
add
sub
fsubp
test
mov
adc
push
and
or
outs
add
(bad)
es
add
ins
je
push
sub
add
add
push
shl
sbb
imul
jb
daa
push
adc
add
cmp
cmp
lea
rcr
dec
or
add
cmp
xchg
inc
or
mov
lea
add
test
add
nop
and
sbb
jae
shr
fs
pop
jge
xchg
push
lock
out
add
push
test
pop
mov
dec
add
or
inc
stc
pop
or
mov
jmp
and
xchg
loopne
push
and
mov
push
fadd
add
or
and
adc
add
add
inc
adc
psrlw
push
or
add
cmp
repnz
jge
pop
daa
sub
add
gs
pop
(bad)
mov
je
and
and
in
add
scas
add
xchg
or
jne
or
test
inc
inc
inc
inc
add
push
cwde
movs
movs
and
mov
cmp
das
icebp
xor
jne
cmp
or
adc
mov
pop
push
and
add
push
in
rol
je
jge
pop
pop
or
sbb
and
rol
add
add
add
jb
jns
inc
push
je
out
xor
sub
add
dec
xor
out
call
add
add
inc
add
jo
add
ins
or
(bad)
xchg
jae
jne
push
rcl
or
add
dec
cmp
add
add
sbb
call
add
inc
xor
push
inc
jge
movs
cmp
shl
lea
add
add
dec
test
or
xor
jg
push
(bad)
aam
and
and
imul
jne
add
adc
jne
sub
inc
or
push
push
js
push
pop
loope
add
retf
rol
xor
into
jb
mov
dec
push
lock
push
add
ret
psubb
not
add
ja
gs
push
mov
xor
arpl
fisttp
adc
and
sbb
les
add
ss
loopne
sbb
pop
gs
adc
add
add
inc
add
inc
test
add
shl
or
mov
mov
daa
minps
or
add
add
and
push
icebp
lock
dec
add
pop
cwde
mov
push
sti
add
jns
and
push
(bad)
fild
mov
loope
jb
jns
or
push
mov
add
lea
cmp
(bad)
adc
push
inc
xchg
lods
cld
inc
or
add
(bad)
jl
cmps
pop
sub
add
cmp
cmp
mov
hlt
adc
pop
add
sti
add
ror
outs
push
rol
add
inc
(bad)
popw
push
sub
psubb
xchg
je
sbb
inc
rol
leave
jne
mov
movs
xchg
add
xor
pusha
xor
test
push
add
dec
or
mov
rol
sub
cmp
add
call
mov
pop
cmp
or
xor
add
ret
xchg
push
cdq
sub
shl
add
dec
pop
lock
push
xor
call
mov
mov
dec
(bad)
je
mov
inc
mov
sub
in
(bad)
loopne
(bad)
jge
inc
add
add
push
jmp
mov
test
adc
xor
jns
push
mov
adc
and
ds
loopne
push
adc
repnz
lds
inc
inc
fild
xor
push
ret
add
adc
add
jb
mov
xor
retf
aas
push
rol
aas
shl
inc
mov
inc
mov
movhps
fild
push
adc
out
hlt
pop
sbb
mov
(bad)
call
push
cmp
inc
outs
jo
adc
jge
int
add
or
xor
shr
or
or
adc
add
test
sbb
gs
sub
push
push
add
lldt
jp
add
or
nop
loopne
add
add
pusha
push
and
inc
cli
je
mov
paddq
fadd
pop
push
add
add
lock
push
cli
add
inc
and
cmp
int3
(bad)
mov
or
add
add
xchg
dec
sbb
clc
or
and
adc
aam
lea
add
xor
cmps
add
dec
jmp
mov
add
push
or
bound
inc
add
cmps
inc
cmp
xor
add
adc
xor
push
(bad)
cmp
mov
inc
bound
outs
adc
add
sub
adc
out
mov
cmp
inc
and
adc
loopne
imul
call
add
pop
cmp
xor
inc
push
push
add
je
inc
adc
inc
lahf
stc
adc
xor
xor
dec
mov
mov
add
test
add
jae
sub
lods
ret
pusha
add
mov
pop
cld
shl
(bad)
sub
daa
arpl
ret
bound
push
xor
(bad)
jmp
scas
jb
mov
mov
pop
jp
add
mov
sub
pop
xchg
and
push
je
push
in
pop
fdivr
cmp
push
add
mov
sbb
dec
inc
loope
jne
add
add
add
xor
add
ret
mov
add
jl
call
jg
jmp
adc
loopne
lock
dec
add
add
or
adc
mov
push
inc
sub
push
inc
push
jne
je
add
add
pusha
add
(bad)
lock
or
loopne
je
add
out
lods
or
inc
push
add
add
inc
xor
mov
push
push
push
in
bound
loopne
arpl
pop
adc
mov
dec
sbb
adc
mov
push
out
add
daa
ret
pop
leave
lea
mov
stos
and
outs
push
lock
jno
add
sbb
mov
mov
add
xor
add
cld
add
push
jo
call
jae
fdiv
cmp
push
inc
add
in
in
mov
add
bswap
add
mov
jae
add
sbb
push
mov
arpl
and
add
push
mov
add
xor
xor
add
iret
inc
or
inc
mov
add
add
add
shl
test
ins
outs
jle
das
sbb
sbb
and
dec
sbb
or
test
enter
or
sbb
xor
sub
stc
lea
inc
push
sub
call
inc
add
add
cmp
mov
jge
or
and
and
and
push
jg
daa
jl
add
pop
inc
mov
dec
loopne
xor
das
adc
add
inc
xchg
jne
add
popa
lds
ins
or
nop
data16
mov
inc
jae
mov
das
addr16
movs
cmp
mov
enter
imul
mov
mov
or
or
xchg
push
jmp
mov
add
or
sahf
pop
jo
and
dec
adc
outs
push
cmp
add
or
mov
and
add
mov
push
retf
cwde
add
add
and
repnz
daa
mov
jne
jecxz
push
inc
inc
xchg
or
xor
in
call
div
mov
jae
je
mov
mov
fcmovne
in
push
cmp
push
adc
loopne
cld
push
ret
adc
pusha
mov
ficom
rol
or
and
cdq
fiadd
ror
int
jb
fsubr
and
es
call
or
pop
push
jmp
inc
and
xor
add
add
sub
inc
cld
pop
mov
push
enter
call
pop
mov
sub
cmp
out
sti
test
mov
inc
(bad)
mov
or
cwde
push
add
mov
lahf
mov
ins
sub
add
(bad)
push
popa
test
adc
add
pop
clc
cmc
push
fmul
sbb
mov
pop
test
add
push
jge
xor
jne
inc
mov
mov
ror
add
mov
mov
mov
cmps
jae
shl
jl
and
loope
xor
xor
add
sahf
mov
shl
add
push
push
call
push
imul
and
and
inc
add
jne
add
push
fimul
lds
cmp
test
add
jmp
(bad)
jne
and
in
jo
fidiv
jbe
xor
pop
jae
add
push
aas
add
repnz
repnz
mov
mov
imul
inc
or
add
and
xor
cmp
add
sahf
push
jle
leave
cld
xor
(bad)
hlt
adc
into
xor
aam
icebp
add
push
push
xor
mov
(bad)
ins
cmp
fild
add
call
sub
imul
or
fadd
retf
in
shl
push
add
adc
add
jae
pop
and
add
sub
add
or
inc
dec
add
push
add
in
sbb
jne
mov
add
cmp
stos
and
mov
add
xor
loope
sqrtps
push
mov
mov
add
and
or
lea
push
mov
popf
daa
das
add
sbb
cli
add
nop
mov
and
jns
and
inc
push
nop
lock
call
call
(bad)
jmp
inc
rcr
push
xchg
pop
dec
lock
cmp
loopne
or
cmp
add
push
pusha
push
sbb
clc
jne
lea
inc
mov
sysret
add
rol
js
push
jp
outs
push
lods
add
push
sbb
and
arpl
adc
arpl
lock
xchg
xchg
call
add
add
aad
sbb
(bad)
jmp
inc
gs
add
loopne
popa
inc
cmp
add
sbb
push
inc
add
rol
inc
adc
mov
loopne
add
xor
xchg
xor
dec
into
pusha
shr
pusha
call
lock
retf
bt
sbb
lock
push
rol
dec
or
jne
xchg
lea
shr
inc
add
repz
add
add
movs
add
test
dec
pop
push
push
ins
sbb
push
les
sbb
mov
in
cld
pop
inc
add
pop
push
cmovo
pop
pop
add
hlt
add
push
je
sti
gs
push
ret
das
add
ret
or
add
cwde
jo
popa
sbb
or
inc
pusha
mov
cmp
retf
rol
out
sbb
dec
push
inc
push
stos
cwde
bound
mov
clc
fild
push
inc
jmp
add
(bad)
jmp
inc
jo
fucomi
ror
xor
cmp
stc
lods
les
inc
cmp
cmp
inc
inc
add
and
inc
mov
mov
imul
jge
fild
add
add
neg
aas
and
fs
mov
mov
add
and
jmp
test
je
adc
mov
dec
pusha
call
pop
inc
adc
add
or
add
xor
jae
leave
call
jne
push
xor
mov
dec
push
pop
mov
xor
inc
add
add
adc
int
add
dec
push
mov
ret
pop
xor
cmp
mov
dec
call
push
and
pop
mov
ror
dec
adc
(bad)
shr
psubsw
push
mov
aam
adc
(bad)
or
std
sub
mov
sbb
and
jo
clc
inc
add
cmp
jb
adc
add
shl
jb
rol
dec
ficom
push
in
and
add
mov
cmp
aad
push
add
push
call
mov
das
lea
add
jle
xor
and
adc
add
mov
jb
jmp
inc
pop
adc
ror
call
mov
xor
push
rol
xor
pop
jecxz
dec
xchg
dec
push
adc
push
cmp
sub
push
or
sbb
mov
pushf
add
add
lds
jnp
or
adc
fmul
pushf
add
add
xchg
jmp
sub
cmc
mov
mov
sub
jmp
pop
mov
cmp
mov
sti
ins
loopne
add
je
add
jmp
mov
push
jge
sbb
add
lea
mov
cdq
outs
(bad)
mov
sub
cmp
pusha
mov
mov
imul
pop
add
rcr
xor
sti
mov
inc
xor
xor
jne
retf
jne
add
push
inc
inc
cdq
test
or
shl
xor
dec
jae
push
push
lea
jo
call
(bad)
dec
aas
and
add
jae
jmp
jmp
add
push
mov
pminsw
pusha
mov
ror
xor
jae
add
jno
paddd
or
inc
add
push
xchg
out
add
rol
xor
xor
adc
movhps
add
and
pop
mov
cmp
xor
cld
push
sar
add
add
or
inc
inc
sbb
add
add
gs
cmp
pusha
clc
or
ins
add
loopne
lock
push
jmp
and
movs
or
stos
sti
sbb
push
inc
cmp
add
add
push
aad
inc
add
popa
pusha
mov
in
add
sbb
call
push
add
jle
movs
sbb
sub
mov
aad
sti
jge
adc
dec
(bad)
setb
pop
or
pop
jmp
or
cwde
jmp
push
aas
push
mov
jbe
push
je
or
test
mov
sub
dec
add
xor
xchg
push
(bad)
push
add
add
xor
loopne
inc
ficom
inc
cmp
dec
push
inc
and
mov
adc
or
push
adc
mov
xchg
shl
pusha
jmp
cmp
add
add
je
add
inc
jno
add
pushf
add
push
out
inc
add
add
call
xchg
and
add
call
lock
add
mov
inc
sub
push
sub
str
inc
xchg
add
xor
jo
in
lods
popa
jne
inc
adc
add
dec
xor
push
push
dec
dec
movs
jmp
push
cmp
sbb
(bad)
cdq
dec
cmp
aas
pop
sub
je
add
repnz
test
je
add
and
mov
pop
add
call
jecxz
cmp
clc
xor
jbe
xlat
or
ret
xor
jb
or
test
push
loop
cmp
adc
sbb
push
xor
rcr
mov
cmp
or
jo
(bad)
fild
add
and
add
daa
pop
add
push
or
sahf
mov
pop
push
add
ret
and
jl
adc
add
lea
push
add
sub
lea
nop
je
jne
mov
add
call
push
inc
xor
xor
test
push
add
add
les
jno
adc
cmp
mov
loop
cdq
inc
or
dec
inc
inc
xor
rcl
sbb
and
add
add
sub
jae
adc
loopne
add
dec
add
mov
clc
adc
(bad)
dec
or
add
add
out
xor
jae
dec
rol
hlt
leave
add
daa
lock
imul
cmp
punpckhbw
into
and
sub
ds
popf
inc
sub
push
rol
dec
ds
mov
mov
mov
je
shr
sbb
in
push
push
push
pop
enter
inc
push
mul
pop
cmp
dec
call
je
add
sbb
cdq
jne
sbb
mov
push
icebp
test
xor
or
nop
dec
xor
cmp
xor
cmc
xlat
rcl
push
push
psllq
push
adc
or
or
add
sbb
bound
pop
and
pop
push
push
add
adc
inc
sti
loope
jmp
and
add
add
add
cmp
push
movs
inc
or
xor
loopne
jmp
dec
loope
push
jne
xor
add
loopne
xchg
sub
add
push
xor
add
fisttp
or
test
mov
inc
add
mov
mov
add
jge
jmp
aam
imul
add
test
inc
push
sbb
and
mov
mov
push
rcl
adc
add
jo
or
and
maskmovq
gs
mov
add
pop
jb
add
dec
test
or
add
cmps
mov
inc
or
inc
adc
push
jae
aaa
push
cmp
je
add
push
adc
add
ret
or
ins
inc
inc
leave
add
leavew
push
or
sub
xor
adc
clc
lds
ja
push
xor
es
cld
nop
inc
shr
jo
fwait
or
out
push
push
add
or
popa
add
mov
add
sar
push
movs
push
push
add
out
add
je
das
jne
push
(bad)
mov
cmp
rcl
pusha
sbb
adc
dec
and
inc
inc
adc
jmp
outs
scas
adc
xor
or
aam
arpl
rcl
mov
call
jg
pusha
add
and
repnz
add
or
mov
inc
add
leave
mov
dec
daa
pop
add
add
jge
push
arpl
xchg
sbb
addr16
popa
in
push
and
loop
add
adc
xor
test
dec
jle
leave
push
pop
jno
add
jne
shl
push
xchg
inc
jo
sbb
add
jmp
jno
adc
clc
or
(bad)
loope
push
outs
test
test
adc
sub
dec
add
xor
mov
loope
loop
or
push
fidivr
inc
add
jge
imul
out
add
ret
lahf
cmp
xor
je
mov
add
inc
jo
adc
pop
or
and
push
add
adc
inc
adc
adc
call
adc
inc
jb
loopne
ins
inc
setp
and
dec
fs
ret
jae
push
sub
xor
mov
jge
xor
add
btr
(bad)
xor
sbb
sbb
retf
sbb
stos
dec
dec
lods
adc
out
lea
jb
sub
clc
or
or
cmps
cmps
add
add
xchg
xor
pop
cdq
sbb
nop
push
(bad)
adc
out
aaa
je
pop
add
mov
dec
jae
mov
loopne
aaa
inc
inc
ja
xor
clc
add
add
(bad)
jge
sub
jo
push
mov
idiv
rcl
jno
sub
xor
inc
pusha
mov
adc
or
mov
add
cld
pop
add
add
in
push
inc
inc
adc
push
add
mov
(bad)
inc
sub
ins
mov
and
push
mov
add
pop
add
xor
add
mov
inc
adc
mov
inc
and
inc
push
add
dec
shl
(bad)
call
and
add
add
mov
call
lods
adc
jae
dec
cmp
cmp
mov
lds
mov
xor
inc
add
add
mov
inc
add
cs
add
jno
add
add
jbe
clc
and
jmp
add
mov
stos
sub
dec
xchg
pop
adc
pusha
add
push
mov
xor
mov
jo
adc
and
adc
inc
adc
adc
inc
add
and
pusha
inc
push
jmp
pop
add
xchg
xor
add
xor
jns
cmp
test
mov
add
add
and
outs
mov
shr
jne
rol
hlt
inc
dec
sar
fidivr
pop
add
aam
add
mov
es
call
test
add
cmp
push
jle
mov
sub
or
adc
push
add
sbb
push
sbb
addr16
out
or
rol
mov
add
shl
inc
or
add
fild
rcr
mov
jne
dec
retf
(bad)
call
mov
add
mov
push
push
pop
xchg
add
pusha
inc
push
add
adc
mov
leave
or
je
call
adc
pusha
lock
add
add
lods
scas
inc
xor
push
push
adc
sbb
mov
rol
icebp
add
add
add
in
add
loopne
pop
add
fs
inc
or
inc
cmp
(bad)
add
ss
cs
or
int
pop
mov
into
cmp
cmps
push
cmp
add
add
add
add
call
mov
leave
xor
cli
(bad)
rcr
pop
mov
out
push
add
add
add
inc
push
xor
sbb
dec
add
dec
shl
mov
or
or
add
movups
shl
push
add
sbb
aas
and
add
cwde
add
and
and
add
pop
not
cmp
mov
mov
sbb
or
add
add
sar
jl
mov
shl
mov
push
div
sub
mov
inc
fcomp
hlt
push
jg
add
add
add
inc
mov
movs
xor
xlat
(bad)
push
add
dec
wrmsr
xor
jb
rdtsc
popf
push
xor
pop
dec
fsub
or
add
add
add
add
jge
push
xor
in
jl
jecxz
adc
test
add
retf
push
add
test
add
inc
and
imul
and
sbb
pop
jae
push
out
push
jmp
add
and
shr
sub
rcl
add
imul
pop
pusha
icebp
in
inc
clc
add
lea
retf
add
and
and
mov
jmp
push
mov
sbb
jp
sbb
jae
xor
xor
or
call
test
fbld
dec
push
pop
pop
adc
or
call
mov
add
adc
push
and
dec
icebp
xchg
xor
call
inc
out
add
cmp
das
lar
and
add
inc
add
pop
jmp
bound
xor
cmp
mov
sub
add
call
pusha
push
push
shl
sti
sub
or
inc
bound
inc
cld
add
adc
ror
lea
push
add
or
loopne
add
or
mov
sub
mov
mov
rcl
pop
add
or
inc
add
push
cmp
push
push
add
inc
cmp
mov
or
add
dec
std
mov
rcl
pop
or
test
add
sar
cmp
mov
sub
add
cmp
add
and
add
mov
dec
or
test
add
mov
xchg
xor
nop
mov
or
pop
mov
mov
gs
push
shl
add
(bad)
mov
adc
jns
add
jge
addr16
add
push
inc
add
(bad)
cld
xlat
push
mov
add
add
sub
pop
push
push
scas
ja
jmp
add
inc
fcmovnbe
add
lds
push
push
xchg
cmps
mov
adc
xor
je
xor
sbb
dec
jno
adc
push
push
add
add
add
jbe
sbb
push
jp
cmp
adc
loopne
push
add
dec
inc
cli
add
outs
ret
push
add
in
cmp
(bad)
(bad)
adc
push
or
jo
stos
push
pop
sbb
icebp
or
jmp
in
xor
mov
dec
add
add
xor
adc
mov
mov
jp
add
add
inc
dec
pop
inc
jmp
xor
daa
repnz
xchg
jns
add
cld
and
add
xchg
fistp
mov
mov
pop
ret
ror
or
sub
mov
sti
mov
ret
add
xor
jne
mov
mov
push
push
xchg
add
add
inc
inc
add
mov
jg
pop
test
push
or
sub
jecxz
push
mov
add
mov
(bad)
mov
adc
ret
(bad)
xchg
loopne
pop
sub
and
add
cmp
push
and
aas
inc
ins
out
push
dec
add
cdq
add
test
push
add
and
leave
add
add
pop
push
test
cs
je
dec
add
inc
sub
add
ja
rol
add
inc
jae
jne
jne
push
dec
add
cmp
add
std
add
jne
or
or
pop
sub
xchg
or
and
push
cld
sbb
loope
add
sbb
add
add
or
jns
test
pusha
je
shr
add
adc
inc
cmp
lods
(bad)
cli
pop
scas
mov
add
xor
sbb
add
push
and
inc
inc
adc
(bad)
jmp
mov
add
nop
sahf
cmc
rcr
rol
pop
cmp
pop
inc
mov
mov
add
dec
adc
add
or
mov
jg
push
jno
nop
add
mov
ret
add
mov
adc
lock
push
dec
pop
push
or
push
push
add
add
inc
inc
adc
or
adc
cld
dec
add
call
shr
inc
push
adc
or
push
mov
sub
push
add
jbe
or
jle
pop
or
retf
adc
inc
push
jb
push
add
push
inc
mov
push
pop
add
push
sahf
loopne
or
bound
adc
pop
stos
push
mov
ins
xchg
add
add
add
aam
add
icebp
js
inc
add
mov
or
hlt
cld
dec
adc
add
loope
add
add
retf
shl
call
add
or
nop
idiv
inc
add
sti
xchg
jmp
or
ja
add
lahf
fisub
adc
movs
je
mov
call
jmp
fcom
add
mov
int
ror
test
je
inc
shl
jne
jnp
add
xor
or
jnp
inc
call
pusha
push
dec
sbb
cmp
xor
add
dec
add
and
cmp
inc
add
push
daa
js
or
mov
push
jae
push
shl
pop
cmps
add
add
add
dec
mov
push
jb
xor
pusha
cdq
add
add
outs
add
push
cmp
push
add
push
and
ja
call
and
push
imul
push
cmp
inc
retf
or
push
jge
call
add
xor
rcl
cmp
or
xor
inc
push
push
call
inc
call
jg
in
add
add
add
adc
add
sub
pushf
add
inc
mov
mov
je
inc
imul
push
and
or
mov
pop
mov
adc
inc
add
cmp
test
movs
in
into
lea
push
lea
dec
inc
sbb
mov
and
xor
mov
adc
gs
add
inc
imul
loopne
scas
and
push
pop
aam
add
jb
sub
inc
pinsrw
lea
repnz
and
outs
add
stos
fwait
loop
nop
add
jmp
or
pop
jmp
jmp
leave
add
xadd
test
lea
pop
inc
or
cmp
or
fisubr
or
or
inc
and
jns
add
push
dec
push
push
call
sbb
add
and
jle
jne
popa
outs
inc
add
inc
lahf
push
push
mov
add
stos
cmp
mov
in
xchg
adc
xor
pop
lods
push
xor
and
in
syscall
cs
add
dec
sbb
add
inc
sti
add
inc
inc
add
ror
push
xchg
push
add
add
lock
mov
add
adc
add
add
mov
iret
rcr
nop
or
xor
loope
cmp
adc
add
je
pop
scas
call
mov
call
add
adc
mov
jmp
inc
or
outs
ja
lock
xchg
add
pusha
idiv
sbb
xor
ins
adc
pusha
xor
add
add
pop
inc
push
adc
pusha
inc
icebp
add
stos
add
add
add
adc
lea
sub
mov
push
mov
jnp
pop
push
and
outs
mov
adc
repz
push
ss
pushf
cld
mov
test
add
mov
xor
add
and
xor
pop
xchg
aad
adc
add
(bad)
aad
std
add
pop
add
push
add
shl
sub
test
add
mov
add
or
and
sbb
or
add
add
add
and
mov
push
add
and
fs
arpl
adc
inc
push
adc
ja
add
or
add
or
sbb
lock
pusha
jnp
movs
xchg
invd
or
add
add
cmp
aad
add
dec
call
sbb
inc
xadd
outs
add
jbe
and
int3
add
loope
add
inc
or
adc
ret
add
jo
mov
movs
int3
retf
ret
jae
dec
add
ret
push
mov
ret
dec
fnsave
jnp
fist
movs
imul
repz
add
movs
add
jo
test
inc
adc
or
add
data16
add
mov
add
jmp
adc
inc
add
push
pop
add
pop
and
inc
hlt
dec
movs
push
dec
jmp
out
outs
pop
xor
add
or
jmp
push
add
push
jne
scas
lea
adc
cmp
sub
add
add
rol
push
loopne
fisubr
xchg
mov
nop
inc
add
cmps
mov
mov
pop
sbb
mov
dec
mov
je
inc
push
call
inc
cmp
pop
pop
or
je
add
stc
jne
cdq
inc
(bad)
out
mov
add
add
xchg
data16
adc
test
or
cmp
outs
in
bound
inc
pop
jmp
clc
movups
call
in
inc
sub
adc
in
add
jae
mov
movups
xor
add
popf
dec
dec
mov
stos
(bad)
adc
add
or
mov
or
icebp
ret
sti
pusha
adc
jne
add
sti
xor
adc
or
or
inc
sbb
inc
inc
xor
je
mov
mov
add
add
aaa
mov
pop
rcr
add
mov
call
and
clc
add
je
popf
xchg
sub
je
add
sbb
inc
les
jmp
test
or
call
sahf
xor
push
xchg
inc
test
rep
add
mov
or
add
pop
push
jl
push
rcr
add
imul
pusha
adc
add
sub
pusha
mov
add
and
add
add
call
fadd
xor
pop
inc
jne
sub
adc
add
or
(bad)
jmp
mov
inc
add
pop
mov
add
push
add
xor
inc
or
jo
call
inc
je
adc
icebp
test
cmps
clc
add
add
push
sbb
pop
jno
jb
test
mov
or
scas
add
lea
sbb
push
add
cmc
test
mov
loopne
ins
push
sub
adc
pop
and
fld
in
push
lock
lea
or
push
add
mov
add
and
clc
mov
(bad)
mov
jmp
add
in
test
sub
sbb
push
jns
sti
stc
loope
pop
and
clc
and
push
js
test
jge
loope
(bad)
cmp
sbb
cmp
adc
mov
adc
sar
call
mov
mov
and
jb
mov
pushf
jb
arpl
jne
push
idiv
out
arpl
les
cmp
sub
and
inc
out
add
adc
add
pop
push
into
jb
test
js
test
xor
dec
(bad)
push
dec
imul
lahf
cmp
and
(bad)
je
ins
add
add
adc
jo
add
(bad)
xchg
pop
adc
add
clc
sub
cmp
inc
mov
sbb
and
add
adc
and
ins
pop
xor
add
jmp
sahf
cmp
or
test
add
inc
pop
jmp
jo
bound
add
add
cld
jmp
out
dec
adc
mov
push
gs
jne
inc
mov
mov
in
inc
pushf
adc
pop
dec
jge
mov
add
pop
or
add
or
add
add
inc
das
add
jmp
add
add
jb
pop
inc
add
sbb
ret
add
loope
sub
jnp
mov
out
push
add
repz
push
call
and
lea
or
test
or
add
jmp
ins
inc
inc
inc
aad
repnz
add
fadd
dec
add
add
mov
retf
xor
int3
jmp
hlt
lock
adc
outs
push
movups
repz
test
lock
push
(bad)
push
cmps
cmps
inc
cwde
inc
add
mov
inc
add
push
lods
add
mov
or
xor
and
xchg
add
jmp
sub
stos
add
(bad)
stos
in
jns
les
mov
add
adc
shl
(bad)
clc
sbb
inc
add
fmul
or
xlat
mov
call
inc
add
xchg
add
add
pop
or
ds
add
pop
add
mov
repnz
add
test
je
jne
loop
add
push
orps
add
mov
sub
inc
or
or
adc
pop
adc
retf
adc
iret
sub
pop
in
popa
xchg
dec
add
or
mov
inc
pop
scas
jl
arpl
mov
push
xlat
loop
mov
xor
mov
test
inc
rol
add
clc
fsub
mov
push
cmps
push
loope
inc
sar
push
ret
add
dec
leave
mov
adc
jl
cmc
cmp
call
mov
stos
jmp
add
fs
add
jae
ss
fsub
xor
pop
test
jge
test
and
or
pushf
adc
or
sar
push
dec
cld
je
in
inc
add
add
adc
inc
push
mov
pop
add
stos
sub
push
fild
and
cmp
mov
mov
adc
dec
cmp
mov
cld
gs
je
mov
dec
inc
imul
imul
mov
shl
push
leave
inc
(bad)
inc
setbe
(bad)
rol
add
pop
inc
lock
add
jne
test
mov
loope
jecxz
gs
dec
std
call
push
dec
in
sbb
ins
lock
inc
lods
add
stos
jmp
add
push
popa
add
push
xchg
pop
adc
adc
or
add
imul
call
test
stos
push
mov
push
and
dec
fidiv
or
add
jne
push
and
jne
iret
lock
fdivr
icebp
add
pop
cs
inc
lds
and
mov
lods
out
inc
add
add
popa
lock
or
leave
sub
mov
dec
add
and
clc
adc
push
sbb
mov
mov
add
(bad)
push
add
gs
mov
push
adc
adc
aas
add
loope
loopne
mov
push
add
lea
or
and
xor
fs
call
movs
add
jb
ret
call
inc
inc
adc
mov
or
fs
test
add
xor
adc
sbb
push
inc
fs
add
and
div
xor
push
adc
test
sub
add
sahf
push
(bad)
and
jo
add
in
add
add
cmp
ror
or
push
add
cmp
nop
das
adc
adc
add
das
cld
pop
adc
jg
ja
addr16
in
int3
add
(bad)
aam
push
repnz
mov
sbb
out
push
mov
pop
add
(bad)
test
test
inc
push
or
adc
dec
add
fistp
(bad)
ret
sub
ss
shl
cmp
push
add
add
inc
call
mov
cmp
or
jmp
movups
rol
push
je
push
sbb
adc
rcr
mov
dec
mov
push
mov
push
pop
or
jge
adc
ins
inc
xchg
outs
retf
pop
adc
stc
dec
ins
inc
test
inc
adc
in
push
mov
add
inc
les
jne
jl
fs
sub
call
adc
pop
cmovo
push
fsub
ja
add
mov
call
or
xlat
dec
and
std
(bad)
imul
add
xor
add
add
xor
inc
pop
add
hlt
jo
add
push
or
pop
cmp
dec
add
inc
mov
add
push
xor
or
inc
adc
sbb
ret
push
mov
test
and
inc
add
(bad)
jae
test
sub
xor
inc
xchg
inc
inc
xchg
sbb
mov
and
adc
add
imul
jne
call
(bad)
loope
push
and
push
inc
push
push
jl
rol
retf
push
mov
add
mov
mov
add
je
cmp
cmp
mov
shl
add
add
repz
das
cmp
je
push
add
jns
add
rcr
jge
xor
call
mov
inc
add
inc
lock
pop
sti
mov
add
and
imul
add
add
inc
int3
jno
(bad)
nop
je
mov
mov
ja
popa
jae
pop
dec
fstp
cmp
add
call
out
gs
dec
xor
sbb
(bad)
xor
adc
ins
inc
lea
fiadd
sbb
pop
add
repz
fsub
jne
sub
mov
adc
add
pop
add
add
pop
imul
push
mov
add
or
add
push
mov
cld
adc
ret
call
push
jae
mov
inc
dec
sub
or
sub
movs
sub
xor
dec
xor
mov
add
xor
pop
xor
jne
ins
push
pop
add
sub
adc
call
cmp
clc
punpcklbw
adc
xor
sub
mov
inc
add
call
and
push
cmc
clc
push
push
inc
leave
sub
jp
loope
add
test
dec
xor
jp
adc
test
add
xor
add
cs
xor
add
xlat
lea
pop
mov
add
mov
clc
aam
pop
add
add
mov
push
lods
inc
add
jb
popf
icebp
push
and
inc
in
call
jmp
(bad)
push
push
adc
jne
sub
shr
imul
inc
lock
add
add
les
mov
add
(bad)
mov
jne
dec
leave
cmp
mov
cmp
inc
or
or
stos
pop
sbb
add
mov
add
test
or
lds
xchg
adc
add
ja
add
jo
test
mov
push
add
and
pop
mov
loopne
xchg
jb
add
adc
add
je
sbb
mov
dec
add
xor
sub
add
adc
outs
add
xlat
push
fwait
inc
pop
sahf
adc
and
mov
aam
xor
add
inc
and
call
push
out
add
jl
test
smsw
push
call
out
fmul
inc
adc
pusha
inc
add
add
mov
inc
lock
and
push
add
add
loopne
lock
add
cmp
xor
jno
add
sub
or
sub
fadd
sbb
cmp
pusha
push
das
rcr
add
sub
push
add
or
fcmovnbe
lahf
ja
clc
mov
loopne
fptan
ret
int
add
xchg
push
and
in
lea
ins
add
add
inc
loop
adc
movups
outs
add
mov
arpl
add
cmp
push
and
mov
sbb
call
jb
cmp
inc
pusha
add
inc
push
or
push
ja
adc
pop
nop
cwde
push
pop
ds
push
ret
movs
jmp
push
call
push
adc
sbb
int
imul
lea
dec
bound
outs
and
clc
outs
stos
add
rol
cli
rol
les
rol
ror
add
mov
dec
jne
mov
cmp
lea
jge
add
paddusb
mov
sub
dec
xor
mov
push
add
xor
jecxz
ret
jo
push
mov
xlat
mov
je
fsub
inc
ror
and
jo
add
popa
loopne
xchg
addr16
jmp
movs
mov
cmp
mov
(bad)
clc
mov
adc
add
jge
inc
or
push
add
rcr
rol
add
gs
in
pop
cs
xlat
rol
add
into
icebp
inc
add
sbb
jb
xchg
pop
and
push
sbb
push
pop
aaa
push
cmp
movs
cmp
fsub
and
push
mov
adc
inc
pop
add
add
push
and
sbb
test
cmp
imul
xor
or
sub
test
jmp
add
andps
rcl
lods
add
dec
fwait
or
inc
popa
in
push
movs
dec
call
jb
mov
and
cld
push
add
mov
and
push
add
sub
sar
inc
loopne
je
inc
add
add
cmp
inc
add
inc
enter
test
or
inc
mov
mov
lea
pop
test
and
add
je
sub
jne
cmp
or
jge
lds
push
xor
jne
adc
add
and
loope
xor
mov
(bad)
mov
push
jno
pop
add
and
mov
add
dec
adc
sar
push
popa
inc
loope
cld
inc
inc
add
js
(bad)
arpl
adc
test
mov
clc
test
add
repz
adc
(bad)
std
in
mov
adc
add
inc
aas
or
pop
sar
inc
lea
add
inc
call
call
xchg
push
loope
cld
add
mov
add
or
sbb
ss
ror
or
and
arpl
jbe
test
jno
add
mov
cmp
push
cs
sbb
push
push
xor
into
push
add
loopne
push
xor
lock
add
add
arpl
mov
(bad)
xor
or
movs
sub
cmp
inc
add
add
add
lea
add
add
jb
fdivr
and
je
xor
rol
inc
das
test
inc
push
add
and
ror
push
add
pusha
stos
jle
pop
mov
js
push
jae
pushf
fiadd
loope
add
xor
rcr
int3
fwait
sub
add
push
jl
adc
adc
adc
pop
gs
and
sub
jne
ins
add
arpl
loope
push
cmps
push
jmp
clc
mov
pop
push
and
fs
adc
jmp
je
je
call
add
jmp
add
jmp
and
add
and
movs
cmp
inc
test
leave
push
pop
rol
inc
add
push
adc
push
or
adc
jb
ret
ja
cmp
add
lock
add
add
and
or
push
pop
popa
push
add
sub
adc
data16
add
call
shl
adc
push
dec
aas
push
push
aam
les
jmp
add
popa
add
xor
jb
dec
jmp
or
sub
pusha
sar
add
ret
add
add
add
mov
mov
add
lock
mov
xor
add
imul
lea
xor
inc
adc
call
or
clc
rol
retf
or
pop
pop
mov
bound
int3
xchg
xchg
test
loopne
scas
add
fadd
add
mov
hlt
mov
call
enter
adc
jmp
inc
pop
pushaw
test
ret
adc
add
and
jge
dec
push
popa
mov
sub
add
xor
in
adc
cwde
jne
sar
cmp
fwait
xor
or
dec
xor
pusha
push
cmp
or
adc
call
jp
add
jge
mov
stos
mov
dec
cmp
popaw
push
ds
add
add
jmp
sar
add
rcr
jmp
addr16
or
adc
add
xchg
dec
daa
shl
inc
mov
add
retf
inc
push
hlt
pusha
mov
add
bound
push
inc
adc
push
add
jne
mov
test
call
mov
rol
add
adc
add
push
dec
add
pop
aas
push
add
inc
cwde
xor
or
push
imul
inc
je
push
and
push
test
or
jne
add
pop
xor
cmp
cmovno
pop
add
sldt
inc
adc
push
and
jecxz
rol
das
inc
xor
inc
je
je
mov
shl
call
inc
into
scas
sbb
jne
adc
add
jbe
xchg
jno
data16
nop
mov
adc
ret
mov
dec
test
sbb
push
inc
and
push
push
inc
mov
push
dec
mov
push
push
jo
shr
and
add
sar
add
or
sub
into
add
and
shl
push
ret
xor
shl
loopne
inc
fbld
jge
push
add
out
add
sbb
rol
and
xchg
mov
in
test
add
rol
cli
clc
sahf
or
add
jne
shl
add
adc
add
push
and
int3
pusha
xor
mov
push
add
inc
outs
out
add
add
xchg
add
pusha
cld
bound
mov
mov
sahf
jecxz
adc
mov
or
or
sbb
je
call
add
xor
push
add
jbe
and
data16
arpl
sbb
shl
mov
push
pop
adc
je
mov
dec
xor
nop
pop
repnz
add
dec
cmp
shl
jb
lea
inc
cmp
push
push
and
or
inc
(bad)
fdiv
mov
rol
cmp
sbb
inc
push
add
sar
inc
jne
add
add
add
mov
cld
ret
add
push
add
das
mov
(bad)
add
add
push
mov
test
inc
pop
leave
add
ja
sbb
add
add
push
xchg
jge
inc
add
push
push
(bad)
(bad)
push
xchg
pop
push
add
push
mov
inc
sbb
adc
arpl
(bad)
push
sbb
loope
leave
xor
xor
push
cmp
in
pop
add
dec
mov
xor
inc
loope
add
jle
call
idiv
add
(bad)
shl
nop
je
push
ret
add
call
lea
jns
push
sbb
add
add
jne
mov
inc
sub
push
push
div
xor
mov
lock
push
push
add
xor
and
imul
ret
cld
inc
cmp
scas
dec
add
add
shl
loopne
call
adc
add
arpl
dec
rcl
sub
fld
(bad)
je
push
jae
(bad)
adc
add
push
jg
jle
or
add
add
and
add
sbb
xchg
add
mov
mov
add
mov
xor
add
fwait
xor
wbinvd
adc
or
loopne
xor
push
aad
inc
hlt
and
hlt
adc
jp
sbb
inc
ja
push
add
stos
loopne
push
and
in
sub
rcr
lods
imul
push
add
xor
lock
rcr
sar
test
mov
call
mov
rol
je
push
add
add
daa
jo
mov
jns
in
inc
cli
rcl
jg
or
pop
dec
xor
inc
rol
call
mov
add
pop
adc
cmp
call
push
adc
fisttp
pop
int3
mov
(bad)
aad
and
lea
inc
and
adc
pop
and
mov
inc
mov
add
push
inc
in
add
pop
in
fild
mov
retf
and
mov
push
adc
cwde
test
add
add
jne
push
adc
push
or
je
lds
leave
ret
add
popa
leave
hlt
add
xor
inc
jb
movaps
add
add
add
jp
or
rol
mov
add
pop
inc
adc
test
push
dec
add
push
inc
add
add
into
add
and
inc
pop
pop
push
wrmsr
ret
xchg
movs
push
lock
and
xchg
mov
mov
push
add
(bad)
mov
fs
movs
add
cmp
add
push
add
add
add
int
add
mov
mov
add
sub
add
add
mov
adc
(bad)
xor
mov
neg
inc
mov
add
in
mov
add
adc
sbb
push
outs
or
add
je
sub
adc
inc
xchg
mov
inc
add
push
push
inc
cmp
adc
lea
inc
jge
add
sub
push
jo
dec
call
mov
jo
bnd
mov
cld
shl
and
adc
pop
sti
mov
retf
push
or
stos
je
pop
add
shl
fnstenv
inc
sar
inc
adc
add
xor
or
popa
pusha
sidtd
pop
add
lock
gs
mov
ret
pusha
add
inc
popa
out
and
xor
ins
lock
and
add
je
sar
ja
and
out
scas
add
push
inc
ins
add
add
jno
and
push
add
add
cmc
cmp
add
mov
pop
cmps
push
loope
mov
pop
adc
push
push
mul
dec
fdivr
add
jb
mov
lea
pop
or
jl
jno
ret
je
dec
inc
push
jns
jnp
add
in
or
mov
jmp
push
in
add
or
rol
mov
add
mov
pop
ds
loopne
adc
cld
inc
int
sbb
push
callw
mov
mov
lods
sub
stc
loopne
inc
adc
mov
adc
jbe
add
test
add
sbb
test
pop
add
push
scas
int
add
mov
clc
xor
cmp
add
mov
je
inc
cmp
add
xchg
add
pop
lea
cmp
lahf
or
add
jge
jecxz
xchg
jmp
mov
lock
xor
gs
les
xor
add
dec
inc
cmp
add
mov
(bad)
not
mov
daa
or
add
pop
add
je
je
gs
sti
push
sub
inc
pop
int3
push
or
jae
es
add
outs
popa
(bad)
xor
push
cmp
add
cmova
and
adc
adc
push
push
add
adc
clc
add
xchg
loopne
inc
shl
mov
push
mov
add
sub
pop
arpl
clc
mov
and
(bad)
stc
inc
xor
inc
push
push
or
clc
pusha
aas
cmp
mov
call
cwde
jnp
mov
and
icebp
shr
xor
push
cmc
mov
sbb
sbb
add
sahf
sbb
adc
push
mov
add
retf
add
add
jge
dec
inc
ret
add
add
xor
add
mov
add
push
daa
pop
mov
sar
add
mov
push
adc
shl
inc
pusha
add
and
push
(bad)
in
add
or
stc
adc
adc
enter
lock
add
jg
and
or
lea
mov
inc
add
fisubr
adc
sbb
dec
push
xor
push
loopne
push
repnz
jmp
and
out
fs
push
rcl
dec
push
rcl
add
push
push
aam
push
add
xchg
add
or
cmp
ins
add
add
xor
fs
add
and
ret
gs
sbb
sti
add
shl
mov
jb
xor
add
pop
add
loopne
retf
mov
sbb
add
add
add
mov
push
cmp
pusha
ror
mov
call
lock
adc
pop
and
add
sub
stos
loope
div
add
mov
xchg
xor
js
xor
add
xor
or
adc
push
add
adc
inc
mov
mov
mov
adc
push
pushf
inc
setns
(bad)
(bad)
push
add
nop
push
add
adc
in
or
shl
add
rcl
add
in
push
jne
cld
sbb
add
or
loopne
std
push
mov
std
test
shl
ret
xor
push
add
fmulp
lea
sar
sub
pop
nop
mov
cmc
jo
add
in
add
jne
loope
mov
add
mov
out
adc
cli
xchg
xor
mov
push
sub
movs
cmp
add
aas
add
test
add
(bad)
bound
jbe
add
add
outs
jmp
and
inc
shr
pop
cmps
sbb
mov
loop
or
xchg
inc
push
rdpmc
adc
xor
pop
clc
pop
and
and
adc
or
push
or
sbb
rcr
add
sbb
aaa
xchg
mov
xor
mov
wbinvd
add
pushf
add
add
xor
add
(bad)
shl
pusha
and
jae
inc
addr16
cmc
push
and
add
inc
aas
or
jb
mov
push
xchg
jb
add
test
add
add
je
adc
pop
inc
repz
or
sbb
push
adc
push
push
shr
pop
test
in
adc
je
adc
loopne
xor
xor
test
adc
adc
test
pop
enter
inc
sbb
add
jno
add
test
sub
inc
dec
mov
sahf
push
mov
xor
xor
rcr
add
adc
xor
loopne
pushf
push
in
shl
sbb
int
inc
loopne
repnz
add
fidiv
add
mov
(bad)
adc
cmp
add
push
dec
retf
rol
or
push
inc
add
mov
or
aas
mov
popa
pop
cmc
sbb
ins
add
add
add
or
inc
push
push
loopne
gs
xor
rcl
mov
push
push
nop
add
add
pop
xor
jmp
call
jge
add
add
stc
jnp
shl
sar
add
sbb
rcr
loopne
and
rol
jecxz
gs
add
xabort
les
add
(bad)
shl
or
xor
pop
inc
call
in
pusha
fisub
dec
adc
loopne
cmp
add
jmp
xor
adc
int
sbb
pop
adc
mov
cmps
push
ins
and
arpl
add
(bad)
not
cmp
xor
loopne
(bad)
fild
inc
shr
adc
loopne
stc
mov
cmp
loopne
push
add
jmp
pusha
push
sbb
loopne
inc
cmp
pop
sub
les
add
push
mov
mov
call
mov
cs
ins
jmp
mov
je
xchg
jp
ja
add
xor
add
add
ss
jle
inc
icebp
into
mov
and
add
inc
aam
add
pop
and
xor
mov
push
add
add
ins
and
xor
outs
cld
add
mov
push
add
lods
jmp
test
add
sbb
add
mov
mov
js
inc
adc
sub
test
jmp
or
outs
pop
push
mov
xor
ret
push
jb
add
jl
add
jmp
add
inc
cmp
push
sbb
jb
push
popa
cmp
jmp
xchg
ds
add
or
push
sub
mov
add
jecxz
add
mov
add
add
out
pop
sbb
mov
jmp
add
mov
pop
lock
inc
rol
cdq
xor
push
adc
popa
add
add
jb
inc
adc
add
mov
jmp
aas
fild
add
jb
pop
rcl
sbb
add
add
add
inc
jo
and
sbb
pop
mov
inc
test
add
sub
add
add
sbb
push
dec
das
add
jno
test
add
add
inc
pop
adc
mov
cwde
add
lock
aaa
push
cmp
adc
in
push
jne
pusha
add
add
xor
hlt
add
or
xor
add
fiadd
pop
fsubr
sbb
adc
or
mov
add
xor
add
add
adc
loopne
pop
mov
in
push
xlat
add
int
imul
adc
gs
jne
add
and
pop
rol
add
or
push
test
add
lds
sub
add
or
bt
lock
cwde
cld
pop
cmp
pop
adc
add
ret
dec
out
ins
mov
and
add
add
pop
emms
inc
or
movs
inc
jle
push
in
mov
mov
call
test
jae
cmp
pusha
add
dec
or
ins
icebp
popa
add
adc
dec
retf
push
(bad)
inc
and
add
xchg
xor
imul
sbb
dec
imul
and
add
js
or
push
lahf
clc
mov
cmp
cmps
jo
in
add
aaa
or
adc
add
jne
out
add
cmp
add
add
hlt
pop
adc
enter
add
adc
mov
rcr
in
arpl
or
jmp
call
or
push
aaa
add
test
add
jo
push
inc
and
repz
(bad)
test
imul
cmps
sub
mov
adc
and
adc
jo
inc
sbb
sbb
cmp
lahf
add
and
inc
push
fadd
lock
test
add
fimul
(bad)
dec
jge
(bad)
popa
mov
add
inc
or
lds
pop
imul
add
add
push
das
ror
mov
jb
and
call
call
xor
push
add
lea
inc
add
lods
inc
je
or
push
adc
or
mov
mov
mov
loopne
cld
add
je
js
mov
sub
xor
mov
xor
xor
or
loopne
pop
adc
mov
inc
call
pusha
cs
pusha
mov
add
push
sub
loop
xor
movs
jo
adc
push
push
gs
pop
inc
xchg
and
add
popa
push
pop
add
call
shl
test
add
adc
cmp
add
push
imul
push
sbb
cmp
fld
lea
or
pop
xor
icebp
jbe
and
add
lldt
rol
add
mov
add
add
mov
mov
pusha
add
jo
fadd
xor
loopne
mov
in
js
adc
add
inc
add
inc
xor
in
call
or
inc
rol
add
icebp
pop
add
adc
mov
inc
add
mov
inc
mov
mov
in
push
in
inc
rol
test
adc
add
and
fild
ret
xchg
(bad)
cmp
dec
jmp
cmp
add
push
mov
call
cmp
mov
rol
clc
sub
cmp
pushf
lods
mov
push
cmp
ret
test
test
or
je
rol
jg
pop
push
push
aad
add
cmp
add
inc
inc
rol
add
mov
inc
sub
pusha
push
sbb
aam
rcr
shr
cs
imul
dec
cdq
clc
mov
les
and
inc
stos
jl
or
dec
jae
add
call
adc
add
add
mov
and
fimul
add
jb
mov
pop
ins
mov
pusha
add
adc
rol
pusha
mov
fidiv
into
pop
add
enter
pusha
lods
inc
xchg
push
out
dec
adc
adc
mov
je
call
pop
or
jo
add
cmp
add
sub
push
adc
cli
cmovae
call
jae
pop
jl
mov
lock
adc
in
lea
cmp
mov
xor
in
push
adc
jne
or
adc
mov
dec
add
add
dec
popf
xor
jae
add
sbb
jo
inc
repnz
aaa
and
ja
ror
or
loopne
pop
repz
or
adc
pusha
push
mov
jmp
or
mov
repnz
xor
push
pop
cmp
sub
mov
popf
inc
dec
mov
pop
fdivr
inc
or
int3
or
inc
or
add
fadd
call
cwde
inc
inc
push
push
jmp
movs
dec
cli
push
or
and
sbb
sti
aaa
xor
inc
shr
add
adc
and
add
mov
lods
adc
cmp
add
inc
jmp
add
xor
add
push
dec
or
add
push
add
mov
std
jo
sub
dec
push
outs
sub
adc
jp
and
xor
jbe
cmp
aas
out
push
add
imul
inc
cli
add
or
fadd
adc
test
add
jne
and
add
lods
or
clc
mov
mov
xchg
pop
inc
(bad)
iret
jne
and
or
dec
dec
push
jl
jno
or
gs
xor
or
lea
in
shr
je
xor
xor
call
addr16
imul
add
sbb
daa
call
daa
add
in
ss
call
pusha
inc
add
or
add
and
add
push
xor
lea
jne
add
or
sub
push
cmp
icebp
and
jecxz
mov
add
push
les
add
test
pop
nop
test
dec
xor
or
xor
xor
add
divps
iret
add
and
inc
push
mov
dec
add
push
imul
adc
inc
sub
sub
loop
add
rol
repnz
mov
test
repz
mov
lock
loopne
push
clc
jmp
jne
sbb
aam
or
mov
iret
add
mov
or
add
or
cmp
cmp
mov
loope
push
sbb
call
inc
jne
gs
cmps
mov
add
cmp
lea
cmp
popa
pop
add
add
cmp
repnz
push
pop
call
add
add
add
fdivr
add
call
inc
add
shr
inc
out
mov
add
int
test
rol
rol
jmp
push
data16
add
clc
dec
and
js
inc
cmp
push
lock
add
jo
xor
je
add
out
xor
push
jmp
inc
inc
jns
add
add
loope
mov
mov
xor
(bad)
lock
jo
adc
outs
call
test
ret
inc
inc
cld
pop
dec
jmp
cwde
push
leave
mov
outs
add
xchg
pop
ins
push
add
or
add
je
fs
cmp
inc
or
fs
ret
shl
ss
enter
out
jl
add
imul
inc
mov
mov
add
dec
or
pop
clc
loop
jae
xor
sbb
cmp
jne
sbb
dec
movups
addr16
add
sub
mov
or
loopne
or
mov
inc
cmp
in
popf
add
and
add
jmp
in
mov
add
inc
inc
loopne
mov
jb
cmp
adc
loopne
adc
add
and
cmp
outs
jmp
dec
jecxz
cmps
mov
add
data16
push
push
lock
call
cwde
push
push
data16
(bad)
and
push
test
or
enter
push
out
add
sub
hlt
or
jmp
mov
xor
add
or
add
add
iret
je
enter
inc
test
add
mov
push
(bad)
bound
add
push
push
adc
add
and
nop
lock
add
push
popa
add
and
xchg
add
clc
sbb
xor
pop
adc
cld
add
(bad)
add
pop
and
retf
sbb
sbb
fld
(bad)
mov
jmp
add
or
mov
add
jne
inc
add
mov
ins
mov
or
and
data16
test
mov
jne
and
inc
jb
add
cmp
rol
(bad)
add
mov
xchg
add
xchg
fiadd
sbb
or
dec
add
or
adc
add
sbb
and
jmp
inc
xchg
push
mov
les
mov
jae
mov
pop
xchg
xchg
ret
(bad)
call
add
add
test
cmp
push
jecxz
add
xor
mov
push
data16
xor
xchg
rcl
or
aam
and
shl
ret
mul
pushf
call
mov
retf
ins
push
inc
or
xor
adc
cld
dec
mov
dec
(bad)
call
bound
adc
add
or
clc
inc
add
add
add
(bad)
loopne
xor
inc
xor
jb
jle
push
jae
mov
mov
aaa
rol
add
ret
pusha
add
inc
mov
je
inc
cld
add
xor
jmp
pop
(bad)
add
jecxz
pop
push
in
add
cmps
jns
jge
push
push
ins
mov
pop
add
mov
adc
call
sti
mov
mov
push
push
mov
push
jge
adc
(bad)
adc
sub
push
push
add
sar
sbb
aam
into
je
cli
outs
adc
sbb
loopne
lock
inc
mov
adc
mov
jns
add
pop
add
test
push
add
adc
add
xor
int3
or
xor
add
pop
push
or
shl
rol
add
add
adc
sbb
add
add
cmp
or
lock
push
sbb
adc
and
fadd
mov
push
test
add
jo
add
test
inc
adc
inc
mov
and
mov
inc
xor
inc
add
jmp
add
add
dec
sbb
arpl
fbld
mov
sbb
and
sbb
dec
outs
mov
and
sar
movs
pushf
xor
and
mov
movs
xchg
push
mov
jo
mov
sbb
push
add
add
dec
add
sub
mov
jge
hlt
enter
or
inc
outs
ret
pop
and
xchg
xchg
nop
cmp
cmp
and
mov
ss
out
jl
(bad)
mov
pop
push
push
add
mov
and
mov
sbb
mov
mov
scas
je
loope
pusha
jns
xor
sub
jecxz
ds
push
dec
push
dec
int
ins
fwait
jmp
lds
pop
mov
add
sbb
aam
sbb
jo
(bad)
push
add
and
pop
or
outs
xor
lea
xchg
rcr
add
addr16
jb
inc
or
push
xchg
mov
jmp
dec
cmp
push
or
inc
cld
dec
bnd
sahf
repz
stos
ror
jo
out
add
sub
loope
add
pop
hlt
in
shl
mov
stc
ret
mov
xchg
push
jb
mov
or
ins
loopne
xor
xchg
inc
ficom
pusha
inc
sbb
lods
cld
jno
mov
xchg
lea
movs
add
push
mov
jbe
jnp
sbb
jmp
je
and
into
add
push
add
xor
fdivr
or
cmp
scas
sbb
in
int3
xchg
push
cmp
adc
ret
idiv
inc
and
nop
test
sbb
pop
cmc
pop
ret
mov
pop
mov
dec
and
push
adc
mov
mov
mov
shr
sub
jle
mov
out
xor
add
test
cmp
jns
xor
jo
mov
xchg
xor
mov
pushf
aas
inc
cmp
daa
mov
sbb
fnstsw
ins
mov
lds
mov
adc
call
mov
out
add
ret
jle
in
xchg
mov
frstor
cwde
fcmove
imul
push
out
jmp
cwde
jle
nop
in
dec
stos
sbb
mov
cmc
mov
mov
addr16
call
pop
pop
cmp
dec
aam
xchg
pushw
mov
xlat
push
mov
mov
mov
jns
mov
jne
pop
xor
fcomp
loop
cmp
push
fwait
leave
fadd
in
push
push
lahf
jo
sbb
std
push
pop
xor
sbb
adc
jmp
or
aad
mov
mov
jge
into
(bad)
pusha
pop
xor
cmp
mov
int
imul
in
cmp
push
pop
jb
mov
xlat
repz
sbb
mov
xchg
pop
(bad)
fcomp
xor
in
push
cmc
and
sti
fld
(bad)
popf
clc
add
xchg
mov
push
std
es
test
nop
iret
mov
jp
in
and
rol
mov
push
(bad)
sub
mov
retf
ss
out
gs
arpl
(bad)
popf
fldcw
leave
shl
cmp
imul
ror
cli
mov
add
add
dec
pop
test
add
mov
sbb
call
fmul
cmps
xlat
outs
fiadd
nop
pop
dec
(bad)
lea
pop
mov
lea
std
mov
cmp
cmps
and
jmp
out
jmp
jne
jb
mov
fdivr
les
ds
mov
jle
int
std
add
int3
and
sbb
mov
jns
dec
out
mov
xor
ror
sub
xchg
or
lds
push
jns
cwde
fbstp
(bad)
ss
pop
jae
xor
or
fldcw
dec
xchg
into
mov
stc
stos
pop
out
mov
mov
mov
or
ins
call
pop
(bad)
ins
imul
xor
and
add
fwait
xchg
dec
stos
and
js
adc
pop
mov
sub
xchg
fwait
das
pop
fdiv
sbb
inc
adc
int
fistp
pop
inc
test
push
sbb
(bad)
fs
(bad)
in
lods
adc
lea
pop
stos
fidivr
cmps
jo
sub
dec
cdq
xchg
push
sub
mov
les
inc
mov
clc
and
fs
in
je
out
movs
xor
or
sbb
xor
fidiv
fisubr
inc
sub
inc
jg
push
xchg
sub
sub
adc
mov
iret
shr
mov
mov
faddp
or
adc
jns
push
test
push
adc
cld
out
mov
test
xchg
lods
in
retf
loop
mov
mov
mov
xchg
ins
mov
jle
mov
jb
ins
add
jbe
push
xor
enter
xor
push
fidivr
test
xchg
and
xchg
xor
inc
cli
pop
add
pop
mov
rcr
adc
mov
pop
pop
push
push
push
xchg
add
test
jb
add
pushf
outs
cmp
adc
mov
hlt
ins
sub
jae
jmp
xor
add
sub
idiv
mov
outs
pop
shl
xchg
dec
ja
push
add
xchg
test
dec
dec
jmp
js
ror
sub
sub
enter
push
or
shr
movs
inc
dec
xchg
inc
pop
lahf
or
adc
cmp
mov
and
movs
sbb
out
aas
and
cmps
ja
inc
bnd
pop
cmp
mov
call
sub
cmps
xchg
in
xchg
cmps
mov
daa
jb
push
mov
ret
gs
jo
inc
pusha
out
pushf
retf
loopne
mov
imul
repz
and
and
sahf
mov
xor
neg
xchg
mov
cdq
imul
xchg
cmps
int3
in
adc
adc
jo
jmp
or
dec
inc
test
loopne
test
shr
das
in
mov
sub
call
pop
pop
ins
mov
xchg
mov
xor
in
xor
xor
add
push
inc
or
ficomp
mov
cmp
mov
jae
mov
or
jo
in
xor
cwde
mov
push
and
gs
mov
inc
and
pop
out
sahf
ret
int3
movs
fsub
adc
push
pusha
je
add
sbb
mov
add
sub
pop
dec
aas
dec
mov
test
repnz
stc
xor
stc
dec
cmps
shr
test
ja
shr
mov
movs
adc
add
dec
stos
idiv
jge
ins
mov
ret
popa
mov
sub
jb
sahf
div
xor
adc
jne
call
cmp
fst
add
and
mov
xor
push
pop
lods
out
pop
imul
mov
ss
in
movs
jl
lods
dec
jmp
das
pop
jle
xchg
into
inc
and
fs
(bad)
popa
cmp
xchg
out
sub
adc
lock
out
lods
inc
mov
call
and
fidiv
xor
push
jle
pop
jg
clc
cli
dec
sub
fisubr
sub
lods
mov
push
fisub
mov
cdq
jns
nop
lods
or
mov
and
sub
out
cmp
in
push
idiv
in
inc
add
mov
out
mov
movs
xchg
repnz
pop
push
lods
jmp
pop
cli
cmps
mov
mov
inc
push
dec
leave
mov
ja
xor
call
and
hlt
enter
cmp
and
mov
inc
mov
fdivr
mov
test
push
xor
loope
mov
push
push
rcl
out
pop
inc
dec
push
pop
call
pop
add
out
xor
fwait
or
mov
adc
(bad)
sbb
loop
push
push
movs
dec
rol
into
in
xor
cmp
lods
inc
sub
outs
test
sub
aam
push
rcl
dec
push
xchg
ins
lea
lahf
mov
add
imul
jl
fistp
je
ins
scas
dec
mov
scas
ret
pop
int3
scas
rcl
rcr
jne
cs
movs
xor
lods
add
in
inc
jmp
aad
std
push
lods
pusha
add
pushf
(bad)
push
inc
popa
push
push
jb
les
and
xor
stc
jle
mov
inc
sbb
mov
cmp
or
mov
or
mov
stos
or
ja
mov
or
das
dec
inc
dec
cmp
and
and
cmp
jno
or
mov
sbb
dec
mov
adc
icebp
dec
loop
mov
in
jp
and
push
mov
mov
out
pop
popa
dec
sbb
dec
or
daa
adc
push
mov
es
inc
movs
mov
inc
cmps
rol
lea
or
imul
xchg
(bad)
out
mov
mov
imul
jo
mov
mov
into
and
xchg
pop
outs
xchg
mov
cmc
lods
imul
mul
sar
test
inc
jnp
dec
rcr
jge
dec
xor
ret
call
(bad)
idiv
loope
inc
fwait
enter
fist
cmp
or
icebp
sbb
(bad)
retf
cdq
mov
loope
inc
xor
cwde
inc
ret
ss
fldenv
sbb
icebp
jle
pop
hlt
push
pop
jb
mov
dec
push
ja
pop
mov
call
pop
pop
mov
mov
sahf
popf
adc
gs
cwde
xor
movs
push
retf
jnp
mov
std
fsub
(bad)
shl
adc
xchg
xchg
loope
xor
mov
enter
jmp
nop
mov
or
out
jo
shr
or
or
mov
xor
pop
cld
lock
lds
mov
inc
sbb
cmp
int3
xor
outs
mov
(bad)
fmul
pop
or
jl
cmc
fdivr
cmp
in
xor
cld
mov
dec
cli
inc
shl
cmp
xor
cwde
mov
xchg
inc
push
aad
stos
pop
adc
aad
imul
pop
in
push
imul
stc
jae
adc
inc
js
adc
shl
cmp
mov
es
sbb
mov
cdq
idiv
cmp
clc
cmps
jne
adc
pop
xchg
jbe
fist
stc
ror
push
or
sub
mov
cmp
inc
xor
ret
cmp
dec
mov
mov
push
lock
std
int
int3
fistp
pop
sub
sub
or
dec
dec
ret
push
jns
push
(bad)
es
and
cmp
sbb
sbb
fldenv
push
and
test
xlat
into
push
movs
adc
fmul
cmp
jnp
push
or
icebp
popa
add
bound
adc
cld
lods
mov
inc
xor
cmp
jo
stc
xor
repz
fld
inc
ss
jg
adc
cmps
push
in
mov
les
stos
cmp
jp
ds
pusha
sahf
fwait
sub
mul
