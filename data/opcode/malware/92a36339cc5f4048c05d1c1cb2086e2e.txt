jg
ja
out
jmp
cmps
dec
movs
xlat
or
mov
mov
push
rcr
pop
popf
inc
mov
data16
repnz
jecxz
sbb
jp
lods
jb
enter
mov
ds
repnz
inc
sub
dec
cld
call
scas
cmp
fild
imul
add
mov
push
push
pop
arpl
(bad)
cmps
gs
xlat
jge
retf
mov
lahf
mov
das
xchg
dec
retf
mov
fidiv
es
xchg
or
imul
adc
add
fyl2x
ret
movs
pushf
sub
(bad)
push
fild
inc
xor
fistp
mov
les
mov
fucomp
or
aad
pop
cld
stos
mov
inc
push
cdq
add
gs
pushf
push
pop
xchg
cmp
or
cli
inc
fwait
mov
shr
xchg
jb
jmp
movs
mov
dec
mov
retf
cmp
inc
sahf
xchg
mov
cwde
pusha
xchg
adc
mov
sbb
push
cmp
adc
retf
jo
outs
fldcw
into
imul
mov
push
das
cmc
stos
jp
jg
push
jnp
cmp
das
add
aas
arpl
mov
pop
adc
push
inc
add
jns
cli
ror
lds
jge
xchg
sar
sbb
mov
mov
mov
stos
pop
mov
movs
call
push
mov
and
sbb
lds
je
int
mov
push
mov
pop
(bad)
inc
fmul
dec
in
mov
xor
or
inc
into
add
in
and
or
fdivrp
pop
add
retf
movs
inc
shld
leave
les
pop
in
cmp
fnsave
xchg
shr
mov
fnstcw
fstp
mov
push
cli
test
test
bound
push
inc
sahf
push
addr16
dec
sar
shl
jg
fistp
enter
lods
push
push
pop
inc
pop
adc
pop
enter
mov
sbb
xchg
mov
jae
outs
hlt
jl
pop
lea
push
or
add
jmp
scas
mov
mov
test
xchg
sti
mov
xchg
lds
push
test
repnz
data16
mov
pop
mov
test
fidiv
push
or
inc
call
mov
xchg
mov
int3
ins
push
mov
cmp
sti
stc
call
xchg
xor
popf
or
ins
ins
loopne
xchg
mov
aad
xor
test
loopne
add
or
fxch
push
loop
cmp
sbb
jmp
loop
add
or
mov
xchg
nop
loop
aas
lods
test
jmp
mov
and
hlt
add
push
mov
outs
xor
(bad)
aaa
cmp
sub
loope
test
ret
mov
inc
push
or
sub
loop
inc
push
imul
push
xor
es
dec
fcomp
loopne
js
test
and
(bad)
mov
mov
sub
mov
mov
test
in
mov
sti
or
lock
jmp
mov
push
mov
mov
nop
mov
mov
mov
in
fcomp
aad
iret
pop
call
xchg
fcom
call
push
fst
xchg
fadd
xchg
fsubr
call
xchg
fdivr
add
in
call
jns
call
iret
pop
call
xchg
fcom
iret
pop
call
xchg
fcom
das
fst
ret
(bad)
cwde
push
dec
ror
pop
call
xchg
fcomp
cmc
fcmove
pop
call
shl
ss
rcr
aam
ret
call
out
iret
pop
call
xchg
fsubr
mov
ficom
in
cmp
rcl
iret
(bad)
cwde
push
dec
ror
pop
call
xchg
fcomp
cmc
fcmove
pop
call
rcr
push
mov
cwde
push
cmp
pop
push
out
jmp
push
(bad)
add
push
call
test
jb
inc
test
xor
test
js
cdq
fidivr
mov
push
xchg
xchg
cmp
ins
jne
jbe
iret
mov
cmp
out
cmp
cld
mov
mov
call
xchg
fadd
sar
xor
mov
fwait
inc
sti
stos
loope
xchg
mov
in
retf
push
push
pusha
test
sar
mov
jo
mov
mov
push
or
outs
in
or
xchg
lock
push
loop
shr
mov
scas
loop
add
or
into
ins
bswap
fdivr
nop
mov
sbb
push
or
push
ror
aaa
cmp
mov
or
cmp
cmc
push
jl
loopne
cmp
push
dec
jl
xchg
xchg
mov
push
je
outs
ret
or
xchg
loop
ds
or
xchg
icebp
sub
loop
mov
mov
dec
mov
fdivr
shl
aaa
ins
sti
mov
sub
mov
jmp
inc
jmp
loop
cmp
test
lods
mov
push
mov
push
mov
test
test
call
loopne
js
test
push
mov
cmp
cmp
shl
(bad)
push
jl
pop
push
loope
js
test
das
test
in
sub
mov
sbb
fmul
cmp
js
mov
test
push
mov
mov
xor
or
test
xchg
mov
popf
(bad)
cdq
cld
outs
xor
push
cdq
mov
mov
adc
sbb
xchg
dec
test
mov
xchg
ret
stos
add
or
loop
push
dec
aaa
adc
sbb
popf
and
inc
rcr
cld
xchg
inc
xchg
cld
xchg
imul
cld
test
je
fld
test
out
frndint
jno
add
xchg
jmp
pop
test
ret
retf
mov
jno
push
jl
add
lods
sbb
push
or
mov
add
pop
dec
xor
or
xchg
adc
push
or
pusha
retf
add
or
xchg
rol
retf
xor
pop
shl
popf
mov
mov
mov
mov
jno
push
jl
aad
sbb
adc
or
inc
nop
or
xchg
movs
test
pop
(bad)
push
cmp
(bad)
xor
push
dec
lahf
test
xor
push
adc
mov
fcom
xor
das
cmp
add
das
loope
int
enter
imul
mov
test
mov
pop
pushf
movs
fwait
ja
fmul
pop
jno
xchg
aaa
fistp
xchg
cmc
cmp
push
jns
movs
js
mov
sub
push
movs
add
mov
xchg
mov
out
sti
fdiv
mov
mov
add
mov
movs
push
push
sbb
dec
jbe
adc
jnp
and
xchg
add
scas
xor
test
sub
pushf
xchg
or
in
sbb
(bad)
in
mov
test
pop
retf
mov
push
sub
repz
leave
popa
pop
pop
xchg
add
arpl
pop
inc
mov
sbb
cli
stos
pop
fwait
mov
iret
mov
call
pop
pushf
movs
fwait
pop
stos
aam
xchg
shrd
ret
fidivr
cwde
out
xchg
add
sub
mov
or
sub
cmp
sub
ds
cmp
push
pushf
xchg
and
adc
jmp
daa
mov
ja
arpl
xor
jnp
je
cmp
jo
cmp
fdiv
pop
sbb
pextrw
mov
mov
mov
xor
add
sub
cdq
in
dec
fst
sub
xchg
or
sub
xchg
or
out
dec
fst
sub
xchg
or
xchg
or
sub
cmps
outs
inc
(bad)
js
shl
push
(bad)
rcl
retf
ins
jge
imul
push
pusha
inc
imul
inc
scas
pop
or
das
sub
int3
sub
sub
cwde
push
and
fist
jge
mov
sub
fidiv
call
mov
fnstenv
jmp
xchg
in
or
mov
sahf
mov
fnstenv
jmp
xchg
sub
mov
mov
ds
(bad)
mov
push
xlat
loopne
(bad)
sbb
adc
pop
cs
pusha
or
das
or
sub
dec
pop
fidiv
sbb
sub
push
pusha
or
sub
stos
fsub
call
outs
daa
dec
aad
pop
data16
fisttp
mov
loopne
sbb
test
imul
pop
push
out
push
inc
bts
es
in
aam
mov
push
jle
imul
call
lods
fmul
xchg
addr16
pop
push
jle
mov
sub
pusha
test
jmp
sub
sahf
and
jo
stos
out
inc
xlat
pusha
or
(bad)
test
dec
aas
cmp
popf
and
pop
mov
es
nop
or
out
jle
sub
mov
inc
sub
sti
sbb
leave
mov
xor
jecxz
sbb
pop
or
fdiv
inc
xor
mov
mov
pop
(bad)
cdq
ja
ins
mov
xchg
sbb
repz
jnp
adc
xor
or
stc
cmp
jb
test
scas
(bad)
ja
xchg
bound
mov
and
jno
dec
es
cmp
sub
scas
cmp
mov
aas
pop
imul
xchg
sbb
sub
jnp
and
mov
(bad)
lea
add
das
scas
and
sub
xor
in
ret
xor
xor
test
cmp
xchg
hlt
retf
and
repnz
add
xor
lods
cmp
xchg
das
jmp
repz
imul
(bad)
xchg
test
or
in
adc
popf
add
xor
pushf
mov
sub
fsub
mov
aaa
mov
pop
dec
pop
sti
add
xor
fwait
adc
dec
xchg
mov
sbb
repz
pop
fdiv
sub
jo
cmp
stc
daa
pop
(bad)
fcmovu
lods
inc
add
xor
jnp
daa
bts
xor
xor
cmp
icebp
sub
mov
mov
cmp
daa
mov
sub
and
cmp
sub
sbb
mov
push
inc
or
inc
dec
xor
das
dec
cld
adc
add
xor
mov
jo
pop
daa
stos
(bad)
cld
inc
je
mov
xchg
je
sbb
sbb
cdq
and
imul
dec
adc
mov
add
hlt
dec
pop
arpl
cmp
and
push
popa
cmp
and
sub
div
add
mov
sbb
pop
sbb
cmp
hlt
mov
and
in
pushf
pop
adc
lods
imul
shl
in
push
fstp
and
sub
ins
ret
cmp
mov
xor
jl
cli
sbb
lea
push
popa
xor
arpl
bound
pop
int3
push
sahf
inc
js
xor
int3
bound
push
mov
dec
sub
ror
add
outs
or
in
add
loope
pop
cmp
lock
dec
adc
mov
cmp
lock
dec
adc
mov
cmp
in
dec
cmp
and
pusha
or
or
xchg
pop
cmp
jo
test
daa
fisubr
cwde
pop
cmp
sbb
xchg
adc
sbb
bound
xchg
mov
mov
neg
cwde
ja
cld
mov
mov
nop
xchg
mov
pop
pop
inc
push
or
dec
fwait
ins
jecxz
cmp
add
sub
or
mov
sub
jns
pop
fwait
sub
mov
jb
pop
push
ror
cmps
jl
adc
jnp
and
add
js
pop
xchg
mov
add
mov
mov
scas
xor
inc
(bad)
test
pop
retf
ins
test
jmp
in
test
cld
jle
inc
mov
push
jmp
or
aas
ret
sbb
xchg
scas
ret
pushf
mov
pushf
daa
pop
mov
mov
das
mov
push
cld
jne
call
dec
xchg
aam
outs
inc
adc
sub
arpl
call
pop
cmp
pop
fild
and
jnp
or
sub
leave
and
pushf
loope
fwait
and
push
xor
xchg
xchg
adc
pop
adc
sub
cwde
sbb
push
or
int3
in
mov
pop
test
dec
mov
arpl
pop
cmp
loop
sbb
into
pushf
xchg
mov
sub
mov
js
retf
push
call
jl
jl
cwde
out
push
sub
add
jbe
arpl
lahf
pop
adc
sub
std
mov
dec
aaa
addr16
add
sbb
test
jne
loop
xor
push
cmc
test
shl
loop
ret
div
add
mov
and
adc
inc
in
ret
rol
push
test
adc
les
jb
in
push
mov
mov
mov
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
jne
(bad)
loopne
pop
mov
in
add
xor
inc
push
cmc
aad
rcr
add
and
jne
rcl
je
cmp
inc
xor
mov
rcl
mov
jecxz
inc
mov
(bad)
stos
mov
movs
push
pop
rol
mov
and
jne
rcl
je
cmp
mov
and
rcl
mov
jecxz
inc
mov
(bad)
stos
mov
and
pop
rol
mov
and
jne
rcl
je
cmp
mov
and
rcl
mov
jecxz
inc
mov
(bad)
mov
(bad)
movs
inc
xor
sub
mov
and
jb
les
mov
adc
mov
mov
lea
loope
push
xor
mov
xchg
inc
mov
mov
add
mov
mov
inc
mov
popa
mov
jae
inc
mov
outs
inc
mov
movs
sbb
daa
push
inc
sar
mov
jns
mov
xor
mov
inc
mov
aam
mov
(bad)
fs
test
mov
jecxz
mov
repz
mov
mov
mov
mov
inc
mov
jb
in
push
add
sbb
daa
push
inc
shl
mov
jnp
test
loopne
clc
sti
xchg
push
sbb
push
pop
inc
add
sub
shl
inc
mov
jb
mov
fwait
and
test
movs
shl
rcl
je
add
and
jb
les
daa
mov
mov
add
daa
test
lea
mov
inc
lea
mov
xchg
xchg
sbb
cmp
mov
aad
lds
mov
inc
mov
jb
mov
and
jb
in
push
xor
rol
mov
repz
mov
rcl
rol
loopne
test
ret
push
rcl
les
mov
mov
pop
push
js
retf
xchg
mov
pop
pop
add
and
iret
xchg
push
pushf
aaa
retf
fs
mov
shl
pop
ins
cmp
stos
mov
loop
jae
mov
jo
dec
cmp
sbb
sub
mov
stc
mov
pop
pop
stos
rcl
sti
and
xor
inc
sub
xchg
repnz
iret
pop
and
pop
jmp
xor
sti
sub
cld
call
xchg
inc
test
inc
or
lea
in
stos
add
push
xchg
and
(bad)
pop
pop
int3
pushf
xchg
xor
fwait
push
cmp
add
push
xchg
cmp
inc
cmp
lahf
pop
out
xor
pushf
mov
stos
sub
mov
int
xor
cmp
aaa
cwde
(bad)
cwde
pop
mov
or
cmp
sub
mov
pushf
xchg
or
pop
arpl
pop
sub
push
mov
adc
js
sub
pop
jo
arpl
or
js
pop
xchg
mov
push
add
jo
arpl
outs
pop
inc
mov
cmp
push
jnp
movs
enter
cwde
lods
stos
add
add
sar
xor
cmp
out
test
mov
xor
cmp
sub
sbb
push
pop
in
ss
fsub
aas
outs
fcomp
fwait
cmps
or
adc
pop
sbb
or
or
aaa
sub
or
loope
mov
ds
(bad)
lock
or
addr16
cmp
and
sub
pusha
fist
push
xlat
ja
call
mov
stc
mov
mov
pop
mov
int3
pop
or
pushf
pop
mov
mov
pop
mov
mov
pop
cmp
pushf
pop
pushf
test
pushf
test
pop
pushf
xchg
pop
sbb
pushf
pop
lods
xchg
mov
sub
mov
pop
lods
xchg
int3
pop
sub
pushf
pop
in
in
pop
ins
in
pop
ins
in
pop
in
in
pop
ins
out
pop
cld
hlt
mov
jl
mov
pop
cld
cmc
fcom
cld
idiv
sub
mov
stos
add
loope
mov
xchg
ins
outs
inc
add
lahf
je
fwait
(bad)
popa
or
repnz
mov
xchg
fiadd
shl
call
mov
jp
push
hlt
fsub
ss
fidiv
fidiv
fidiv
fidiv
fidiv
or
add
inc
nop
test
mov
and
aaa
xchg
push
pop
cmps
cdq
hlt
mov
mov
cmps
mov
movs
movs
mov
movs
mov
cmps
or
mov
cmps
movs
mov
test
pushf
cmps
mov
inc
mov
xchg
xchg
mov
mov
in
adc
pusha
pop
stos
(bad)
in
in
cmp
adc
xor
jmp
pusha
mov
jmp
mov
imul
gs
pop
or
cwde
add
xchg
movs
ret
cmp
sub
jns
sbb
mov
sub
adc
add
(bad)
sbb
inc
push
aas
sub
aam
push
scas
jge
out
fadd
sbb
nop
or
out
cmps
les
mov
lahf
aas
push
sub
ret
arpl
les
lods
lea
inc
ss
out
movs
cld
movs
push
call
or
ins
sub
push
bound
mov
inc
(bad)
call
sbb
push
ins
push
stos
push
xchg
add
mov
(bad)
jmp
call
outs
push
pop
es
je
movs
push
cmp
retf
scas
test
adc
jnp
outs
xor
ins
daa
xchg
imul
scas
push
bound
shl
push
into
sbb
enter
push
or
cld
jbe
lock
stos
leave
scas
push
rep
dec
jp
sub
fist
out
sar
cwde
daa
add
cld
jo
push
jae
lods
sbb
pusha
jp
lock
div
jle
jbe
jle
shl
pop
cmp
dec
in
pop
jl
sti
xor
inc
sub
mov
lock
jg
mov
cli
div
jle
aad
outs
pop
cmp
dec
xor
dec
push
pop
jp
sub
je
movs
xor
push
lods
and
push
lock
mov
jo
push
lods
inc
cmp
pop
inc
das
jl
pusha
sub
jb
outs
mov
lock
lea
vpperm
or
mov
or
push
sbb
cs
add
push
push
call
push
or
xchg
push
pop
test
inc
stos
enter
outs
mov
xchg
inc
rcl
dec
xchg
or
inc
daa
rol
fist
push
mov
ret
sub
es
add
in
pushf
pop
sbb
mov
mov
xor
push
xchg
pop
stos
(bad)
(bad)
out
pushf
cmps
popf
or
xchg
outs
ret
pop
sahf
pop
jae
xor
pop
les
cmp
popa
dec
push
arpl
(bad)
(bad)
sub
cmp
movs
dec
(bad)
scas
push
ds
test
out
adc
cmp
in
xchg
dec
stos
ret
popf
jnp
mov
lea
je
inc
loope
jg
xor
retf
fwait
(bad)
aas
jnp
imul
ins
xchg
push
inc
push
ja
int3
icebp
iret
cmp
addr16
sub
mul
xchg
mov
or
mov
xchg
bound
mov
add
in
in
enter
out
popa
sub
mov
jae
or
sbb
jbe
jo
mov
sbb
ds
in
pop
adc
and
add
sub
test
popf
pop
push
retf
cmp
movs
fbstp
int3
scas
push
fadd
out
popa
sub
into
mov
add
sbb
and
gs
xchg
push
or
add
(bad)
add
pop
jno
ds
add
inc
int3
dec
add
pop
pop
sub
xor
mov
gs
arpl
adc
setno
jb
add
or
add
adc
add
arpl
gs
xor
adc
test
test
mov
add
arpl
adc
call
add
pop
bound
dec
or
add
pushf
add
test
ret
xchg
cld
and
mov
fild
adc
add
xchg
dec
xchg
pop
adc
inc
sub
mov
or
add
push
cld
cmp
pop
inc
rcr
aaa
test
movs
pop
add
mov
add
push
add
es
adc
punpcklwd
add
punpcklwd
or
lock
in
das
sub
sbb
pusha
add
push
inc
add
adc
add
jnp
fcom
adc
jno
jb
fist
or
imul
gs
adc
cmp
add
add
ret
jle
adc
add
cmp
push
je
or
push
mov
pop
sbb
push
loope
xor
cmc
ds
sub
jne
or
pop
adc
push
inc
mov
pop
adc
xor
or
adc
adc
pop
out
add
retf
lods
retf
les
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
adc
test
push
stos
test
add
cmp
hlt
cmp
lods
xchg
cmp
les
push
test
fs
push
stos
les
push
stos
les
pusha
scas
xchg
cmp
les
jo
xor
xor
xchg
cmp
(bad)
cmp
push
scas
fsubr
call
push
scas
inc
push
sub
out
call
mov
jp
push
sub
push
stos
xlat
or
test
fsubr
call
push
cmp
push
pop
test
push
cli
outs
fstp
add
jg
rol
dec
xchg
sub
(bad)
fwait
sahf
dec
xchg
sbb
or
stos
lds
jmp
in
popf
fsub
jmp
fidivr
loopne
xlat
repnz
jne
in
adc
dec
or
movs
dec
jp
lea
mov
pop
shl
cmp
retf
cmp
push
iret
ds
cmp
movs
and
arpl
jmp
sub
fcom
stos
lds
loopne
and
call
loope
inc
cli
movs
push
sbb
paddsb
cli
rcr
jl
push
jno
cmp
pop
and
lods
icebp
sbb
pop
mov
inc
movs
in
scas
jp
pusha
xor
ss
outs
cmps
ret
inc
iret
sub
jno
call
or
mov
jnp
ficom
ret
int3
or
lock
mov
sub
add
cmp
int3
movs
xor
scas
lds
push
lahf
in
xchg
cmp
loop
jp
imul
sbb
out
jb
(bad)
out
icebp
sub
in
mov
bound
ret
sub
sub
add
test
imul
scas
rol
movs
jno
add
push
and
scas
xchg
mov
add
loope
sbb
jle
ret
in
fwait
test
push
xor
pop
mov
xor
int3
or
push
mov
(bad)
in
je
cmp
jmp
nop
jl
cmp
jnp
fst
jmp
hlt
xor
pop
dec
cmp
dec
xchg
jmp
popa
jg
(bad)
dec
rcl
push
jne
mov
mov
ret
mov
mov
sub
inc
and
push
sbb
or
cs
push
inc
push
stos
les
mov
sub
push
sbb
adc
push
push
arpl
int3
sub
loopne
push
cmp
jae
(bad)
rep
dec
jp
(bad)
ds
fwait
aaa
fcmovnbe
push
es
stos
iret
lea
xchg
test
out
rcr
in
sub
mov
push
fwait
rol
repz
cwde
into
movs
scas
popf
retf
inc
sbb
out
add
movs
dec
cli
adc
out
mov
movs
push
call
xchg
jge
mov
iret
push
sti
stc
cvtps2pi
imul
and
sbb
ja
cs
lods
lea
fwait
push
jae
or
into
push
scas
jnp
and
cmp
outs
ret
fwait
int3
getsec
loopne
jb
shl
ret
jnp
mov
fist
out
inc
cmp
push
mov
pop
mov
retf
stc
cmps
or
and
leave
jns
loopne
std
cmps
inc
(bad)
stc
sub
retf
cmp
or
xor
pushf
jns
pop
retf
jmp
cs
pushf
mov
pop
retf
jns
lods
xor
adc
sti
and
mov
mov
or
mov
aas
push
mov
test
push
stos
les
push
stos
les
inc
push
les
and
xchg
xchg
les
ret
cmp
repnz
push
scas
mov
add
cmp
iret
cmp
push
scas
cmps
js
cmc
les
or
nop
cs
test
cmp
push
scas
in
sub
les
sub
cmp
mov
and
xchg
xchg
imul
push
sbb
lock
shl
movs
push
cmp
int3
xor
movs
push
or
movs
pop
jp
scas
cmps
les
push
scas
in
sub
iret
ds
or
sbb
dec
(bad)
scas
push
aas
sbb
sub
sbb
push
xchg
pop
stos
into
popf
pop
lock
cmp
or
pop
loopne
dec
imul
stos
int
shl
or
xor
je
or
pop
sub
call
or
push
sbb
sub
jmp
sahf
jb
ret
arpl
lahf
in
aaa
or
jne
add
pusha
ret
jmp
mov
ret
pop
and
mov
fucomip
test
jo
xor
outs
jbe
mov
pop
jae
(bad)
cli
and
sbb
aam
mov
jp
call
fcom
out
and
cld
add
sar
movs
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
popa
mov
push
bound
cmps
push
icebp
cmp
imul
push
inc
pusha
mov
pop
ins
mov
daa
add
int3
sbb
sub
cmp
mov
addr16
pop
inc
bound
mov
rcl
dec
push
sub
rcl
pop
xor
push
mov
cmc
jmp
in
mov
outs
inc
sti
inc
fidiv
jmp
xchg
arpl
inc
bound
mov
pop
outs
mov
xlat
push
push
pop
test
jmp
shr
ret
fmul
jmp
lea
in
inc
jge
repnz
sbb
mov
add
cmp
les
or
xchg
jb
les
jbe
adc
or
add
mov
inc
cmp
push
stos
les
push
stos
les
inc
add
and
xchg
xchg
les
ret
cmp
repnz
push
scas
mov
add
iret
cmp
push
scas
cmps
js
cmc
les
or
nop
cs
(bad)
cmp
push
scas
and
mov
xor
clc
mov
inc
or
outs
xchg
push
dec
dec
and
mov
adc
retf
cmp
int
fld
dec
xchg
fcmovnu
inc
and
sahf
dec
adc
loop
ret
scas
xor
rep
dec
jp
(bad)
fild
iret
cmp
push
scas
jg
dec
in
sub
mov
xchg
xor
sbb
test
jg
xlat
je
cmp
enter
cmc
xor
mov
adc
retf
jno
push
xchg
xor
jg
bound
mov
pop
stos
les
cld
popa
cli
ds
adc
sbb
mov
adc
outs
xchg
test
push
scas
js
gs
enter
std
icebp
xlat
outs
mov
movs
or
ss
or
push
imul
aas
ret
sbb
adc
stc
inc
test
aad
in
jge
(bad)
fst
pop
aas
ret
jnp
xor
sbb
fwait
jle
pop
mov
push
cmp
out
mov
test
ret
out
les
stos
ret
sti
xchg
fmulp
les
ret
fcmovnb
test
dec
mov
adc
iret
iret
or
ins
push
mov
push
loop
fucom
imul
adc
jae
es
pop
test
jo
or
(bad)
cld
xor
jmp
inc
inc
and
mov
shl
lahf
jmp
mov
jmp
mov
and
ret
jge
and
and
sbb
jb
jmp
popa
and
call
dec
push
imul
ficom
rcl
or
xor
pop
mov
arpl
not
push
stos
je
push
sub
push
call
js
les
(bad)
jmp
pusha
loop
vpcomub
sbb
in
jne
int3
or
push
mov
les
stos
les
push
stos
les
or
ds
ficom
cmp
mov
pushf
ds
cmp
dec
or
xchg
ds
stos
ret
stos
and
sub
xchg
ds
stos
(bad)
jge
repnz
mov
int3
cmp
adc
ret
int
sbb
push
sbb
lea
sar
mov
(bad)
jae
enter
push
mov
out
ficom
sti
mov
cmp
pop
call
xor
out
ss
leave
add
hlt
xor
cld
movs
push
call
push
stos
outs
xchg
mov
cmp
imul
test
adc
out
inc
pop
mov
lahf
push
adc
iret
lea
sti
inc
outs
xor
int
(bad)
retf
sbb
mov
movs
push
or
movs
pop
pop
adc
pop
stos
int3
lea
scas
jno
in
sub
xchg
push
jae
stos
retf
lea
add
cmp
pop
in
xchg
cli
out
je
movs
dec
jp
mov
fs
push
scas
outs
push
pushf
test
push
call
push
pusha
inc
xchg
stos
mov
jnp
fist
ret
retf
xor
rol
push
pop
stos
(bad)
popf
jmp
dec
fsubr
(bad)
lea
sub
lock
sar
cmp
ss
ret
sti
in
push
inc
ret
pop
lock
and
ret
lds
mov
cmps
and
outs
leave
arpl
mov
sbb
call
sub
ret
out
inc
ins
xchg
leave
mov
push
mov
jne
fnstenv
je
leave
xor
leave
xor
outs
mov
mov
sub
je
jmp
xor
jmp
push
and
dec
xor
aas
dec
jnp
imul
mov
inc
jmp
mov
push
in
(bad)
jnp
mov
in
addr16
push
mov
(bad)
daa
aaa
cs
push
or
test
inc
outs
mov
sub
test
outs
mov
in
or
inc
sbb
cdq
pop
loopne
jmp
push
cmp
fstp
jnp
cmp
addr16
xchg
jb
in
push
sub
js
es
imul
ja
mov
js
in
mov
adc
xor
push
xor
pop
add
mov
lock
pushf
inc
cmp
leave
ror
jnp
push
pop
nop
fcomp
(bad)
or
inc
sbb
dec
or
je
push
mov
cmp
xor
push
stos
enter
test
push
scas
aam
push
stos
jl
adc
push
stos
(bad)
or
xor
(bad)
cmp
repnz
push
scas
hlt
and
les
push
stos
les
push
stos
retf
or
cmp
lods
inc
imul
ret
or
int
or
(bad)
stos
int3
or
mov
ds
mov
push
sbb
cs
or
cmovnp
mov
push
ror
mov
push
or
popf
inc
pop
nop
fmul
add
fsub
xor
or
cmp
jns
dec
repz
xor
cvtps2pi
gs
les
and
and
push
scas
les
mov
ret
cmp
je
sahf
ds
loopne
movs
inc
push
scas
(bad)
retf
(bad)
cmp
cmp
dec
ret
adc
fsubr
pushf
mov
stos
leave
dec
or
mov
push
mov
movs
lods
jo
lock
cs
mov
add
fld
stos
ret
or
int3
cmovnp
sub
popf
inc
mov
mov
cmc
in
push
scas
cmp
jno
ret
retf
out
push
les
push
stos
ret
sub
mov
scas
inc
xchg
push
stos
into
lods
or
ret
sbb
mov
and
pop
xor
push
pop
test
inc
stos
les
pop
or
pushf
ds
ja
ror
dec
and
cli
pop
lock
imul
sbb
sbb
call
push
daa
cmp
jne
pop
ins
inc
cmp
jns
ret
push
xor
les
loopne
rep
dec
jp
mov
gs
out
xor
movs
pop
pop
adc
pop
stos
int3
lea
push
outs
push
hlt
or
out
mov
sbb
jnp
rcl
ret
test
stos
push
inc
pop
stos
ret
lea
pop
dec
sar
sbb
in
je
test
stos
inc
inc
push
stos
int3
(bad)
into
xchg
push
bound
xor
lea
sub
push
cmp
pop
and
jg
outs
push
mov
xchg
int3
lea
xchg
pop
and
int
mov
cli
dec
add
push
retf
adc
jp
ret
adc
or
xchg
push
outs
sub
xor
loope
(bad)
xor
imul
xor
retf
test
sbb
aad
pop
jp
pusha
xor
iret
xor
ret
(bad)
xor
fmul
inc
push
fsub
mov
cmp
outs
ss
outs
ss
outs
ss
jp
sahf
xchg
and
push
sahf
ins
xor
cli
ins
sahf
xchg
jmp
sub
scas
sahf
xchg
outs
ss
outs
sar
retf
ins
xor
outs
cdq
imul
outs
xchg
scas
(bad)
xor
cdq
and
out
daa
in
push
and
imul
mov
mov
aas
push
mov
scas
adc
and
out
sub
xchg
sub
sti
scas
outs
ss
cs
pop
push
outs
ss
pop
add
xchg
outs
ss
shr
jmp
mov
outs
ss
and
mov
pop
push
jg
sbb
jecxz
pop
dec
(bad)
into
or
cmp
or
jae
sbb
outs
ss
sti
aaa
jb
sti
aaa
mov
shl
cmp
mov
(bad)
sub
addr16
adc
cs
mov
xchg
mov
xchg
and
outs
jno
in
push
inc
xor
mov
aaa
xor
mov
and
mov
iret
xor
push
pop
xchg
push
out
addr16
out
xchg
and
outs
push
stos
mov
or
and
addr16
push
mov
lahf
imul
sbb
mov
lahf
outs
adc
jmp
outs
push
loopne
fs
fistp
daa
mov
retf
outs
bound
xchg
es
xor
sub
adc
imul
mov
and
and
stos
jns
mov
out
or
and
xor
mov
cmp
mov
out
dec
mov
outs
xchg
and
hlt
dec
pop
mov
stc
dec
pop
mov
(bad)
push
sbb
ucomiss
xchg
jb
mov
inc
rcl
stos
mov
repnz
push
repnz
mov
dec
outs
ss
cs
pop
shr
outs
ss
pop
add
out
stos
ss
sub
sti
outs
ss
sub
ss
rcl
xchg
div
mov
scas
push
cmp
scas
jle
sbb
jecxz
pop
outs
jg
sbb
jmp
cmc
and
data16
and
adc
and
mov
lahf
imul
jns
retf
ret
mov
cmp
daa
in
push
and
jmp
stos
popa
jecxz
cmps
fs
test
ss
cs
ss
icebp
aaa
mov
bound
jns
and
nop
leave
dec
jno
in
push
xchg
xchg
scas
pop
ds
ss
push
mov
cmp
mov
sub
xor
mov
mov
xchg
outs
pop
inc
fwait
into
ins
xchg
pop
arpl
sub
xor
pop
arpl
cmps
dec
dec
xor
sub
(bad)
push
into
xor
out
push
scas
fs
enter
xchg
mov
ins
xchg
jns
es
call
das
push
cmps
cli
jl
xchg
outs
inc
xchg
aaa
ds
rcl
ins
mov
ss
xchg
inc
jno
cmp
into
ins
mov
(bad)
nop
leave
mov
out
scas
fs
enter
xchg
scas
imul
addr16
in
push
pusha
inc
xor
je
push
sahf
ins
xor
push
aaa
ss
and
fild
inc
retf
out
(bad)
xor
xchg
xchg
shl
outs
ss
sub
jle
popf
mov
aas
sub
xchg
outs
(bad)
xor
aas
sub
(bad)
sub
ins
xor
xor
xor
gs
jmp
(bad)
mov
xor
xor
leave
push
sub
ret
mov
mov
les
inc
stos
into
cmp
push
sub
sti
push
stos
pop
push
repnz
xor
push
cli
jp
outs
bound
mov
movs
inc
push
pop
test
inc
stos
leave
lea
jmp
dec
fstp
adc
dec
xchg
add
fwait
mov
pusha
mov
xor
mov
add
push
stos
fiadd
inc
xchg
retf
jne
add
sbb
pop
loop
scas
jl
cmps
cli
mov
adc
test
pusha
ret
sbb
push
dec
out
movs
outs
mov
mov
inc
or
sub
push
push
inc
push
sbb
or
xor
ss
stos
jmp
dec
popa
rep
pop
jp
mov
into
not
jb
push
scas
addr16
popf
sbb
dec
cmp
movs
dec
jp
cwde
or
mov
and
xchg
mov
inc
mov
mov
outs
(bad)
scas
xchg
xor
retf
popf
xchg
inc
pop
mov
int3
loope
cmp
sub
leave
jo
sbb
xor
mov
sbb
(bad)
scas
push
xor
out
inc
int3
pop
loopne
je
(bad)
or
push
xchg
pop
jae
push
push
push
cmp
scas
push
push
inc
stos
leave
popf
fwait
sar
(bad)
out
(bad)
hlt
add
in
push
adc
mov
outs
xor
ins
(bad)
ss
retf
jno
loop
sbb
clc
adc
fbld
adc
fcom
inc
xchg
imul
daa
ins
push
sar
mov
cli
push
adc
push
adc
push
adc
push
sbb
push
adc
mov
inc
sti
clc
push
adc
push
sbb
or
inc
(bad)
push
pusha
pop
jp
adc
cli
push
adc
mov
outs
(bad)
push
jo
or
adc
push
push
(bad)
in
or
push
adc
movs
shl
pop
fwait
add
inc
push
aam
cld
pop
adc
or
outs
(bad)
and
retf
cmc
push
adc
push
nop
dec
repnz
adc
int3
hlt
push
jmp
aam
inc
cli
push
call
stos
mov
adc
jb
loopne
ror
inc
push
xchg
in
cld
movs
dec
lds
push
adc
cwde
dec
or
ret
add
push
adc
adc
dec
cli
inc
jo
dec
or
xor
movs
out
mov
cli
push
pusha
sbb
pop
adc
aam
inc
cli
dec
loopne
mov
xor
icebp
add
push
loopne
mov
xor
adc
mov
jmp
pop
push
pop
adc
je
(bad)
push
adc
jp
out
mul
dec
mov
push
adc
push
rcr
pop
add
mov
jne
imul
rol
sub
jnp
xchg
push
pop
sbb
pop
loopne
add
push
adc
adc
sub
push
and
mul
inc
cli
push
add
cli
je
sti
mov
push
adc
cld
adc
dec
cli
or
fist
mov
or
xchg
and
cmp
aaa
inc
jnp
sub
repz
mov
or
add
fcomp
or
xor
movs
out
mov
out
loopne
add
pop
jo
dec
or
das
in
fadd
in
scas
ret
mov
sub
inc
das
or
inc
pop
push
loopne
jge
dec
sub
xchg
sbb
retf
test
inc
or
mov
inc
mov
test
adc
and
sbb
les
or
adc
push
mov
pop
cli
push
adc
and
scas
mul
push
adc
pop
and
or
ins
(bad)
movs
dec
mov
mov
imul
add
dec
inc
cli
in
add
out
cli
push
adc
sbb
pop
mov
nop
dec
(bad)
push
add
push
mov
dec
cli
push
adc
sbb
dec
dec
or
inc
(bad)
push
and
jmp
dec
jp
mov
dec
adc
or
inc
inc
sub
push
adc
test
inc
inc
jnp
push
adc
add
out
mov
(bad)
adc
int
scas
movs
rol
jo
out
repnz
lea
gs
cmc
and
jns
aam
cmc
lods
sub
scas
repz
jmp
lock
int
jnp
loope
push
cli
jo
out
repnz
lea
sbb
cmp
mov
loope
inc
lods
fs
mov
jmp
pusha
and
jge
call
push
pop
nop
sbb
add
cvtps2pi
lods
xor
or
popf
push
pop
nop
pushf
or
jae
rcl
sub
push
sbb
rcl
lea
cs
inc
stos
enter
mov
pop
add
mov
jmp
loopne
xchg
or
lds
loopne
retf
jg
pop
xchg
jp
cmc
and
jns
jae
lods
cmc
(bad)
int3
cvtps2pi
(bad)
xlat
pop
xchg
jp
cmc
or
out
repnz
(bad)
add
pop
stos
retf
cmp
mov
ins
cmp
pop
xchg
jp
cmc
les
(bad)
dec
aas
add
add
or
repz
jmp
loopne
pop
lea
xchg
jns
or
lds
loopne
dec
jl
pop
xchg
cli
mov
scas
js
mov
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
add
add
sar
push
sub
scas
inc
dec
adc
sar
and
ret
nop
or
push
stos
les
shr
sahf
push
stos
inc
mov
sar
pushf
mov
push
sub
scas
push
lock
out
ret
cmp
xor
shl
sub
scas
and
adc
sbb
xchg
mov
scas
inc
mov
scas
sar
fadd
jl
scas
dec
shl
call
push
sub
repz
mov
rcr
cmp
jg
scas
inc
or
scas
retf
mov
outs
jb
jg
scas
sar
sub
push
scas
dec
xchg
mov
mov
cmps
enter
mov
jmpw
ror
push
sub
scas
inc
dec
adc
enter
sbb
scas
aad
or
push
stos
les
shr
sahf
push
stos
inc
mov
scas
sar
pushf
mov
push
sub
in
jmp
xor
shl
cmp
adc
sbb
call
stos
mov
pusha
out
les
inc
stos
les
xor
call
cmp
jbe
loope
shl
push
ficom
sub
push
pop
nop
pop
or
retf
bound
mov
dec
or
test
push
mov
int3
int
retf
xchg
adc
jp
jno
sub
push
scas
inc
jmp
scas
sar
mov
push
pop
push
scas
dec
rcr
fcmovnb
cmp
mov
push
dec
push
scas
inc
imul
sar
movs
or
scas
xchg
les
push
stos
les
push
stos
les
cwde
xchg
add
shl
inc
or
je
push
stos
int3
cmp
iret
repnz
scas
les
stos
rol
xor
xor
push
stos
int3
cmp
push
stos
retf
lea
ins
mov
ror
cmp
lds
in
ror
lock
add
cmp
cmp
push
pop
push
scas
into
jge
mov
pop
push
scas
fs
lock
retf
mov
and
adc
push
scas
aam
push
stos
je
and
xchg
xchg
aam
push
stos
je
push
sub
push
call
dec
stos
les
or
xor
dec
or
hlt
in
mov
mov
sub
cmp
push
or
sahf
pop
cmp
out
repnz
sbb
les
push
stos
les
push
stos
les
cwde
xchg
add
shl
inc
or
je
push
stos
int3
cmp
iret
repnz
scas
les
imul
cmp
out
xor
push
stos
int3
cmp
push
stos
retf
lea
ins
mov
sbb
cmp
lds
div
lds
pusha
xor
das
push
stos
cmp
cmp
adc
push
scas
into
jge
mov
dec
push
scas
fs
lock
aam
and
aam
push
scas
aam
push
stos
je
and
xchg
xchg
aam
push
stos
je
push
sub
push
call
dec
stos
les
or
xor
dec
or
hlt
in
mov
mov
sub
cmp
push
or
sahf
pop
cmp
out
repnz
sbb
xchg
mov
push
sbb
out
adc
stos
les
cwde
xchg
pop
jae
mov
adc
scas
retf
cmp
shr
out
add
xchg
cmp
outs
cmp
clc
xchg
or
push
outs
add
enter
js
mov
les
push
stos
sar
bound
out
repnz
or
iret
ret
arpl
retf
cmp
js
jnp
jl
jl
xlat
sbb
in
repnz
sbb
pushf
mov
cmps
les
sbb
pushf
mov
cmps
les
sbb
pushf
mov
test
int3
int
cmp
or
pop
jmp
push
cli
in
cmp
push
jae
in
or
jl
xlat
call
out
repnz
dec
stos
retf
repnz
sbb
inc
mov
cmovnp
mov
add
ror
stos
les
push
cli
jp
outs
bound
test
stos
(bad)
mov
sar
jge
pop
nop
mov
pop
and
cmp
mov
cmp
in
pop
retf
or
push
cmp
cmp
shr
stc
iret
repnz
ret
pushf
adc
cmp
lods
push
scas
cmp
push
adc
dec
add
out
cld
outs
push
xor
inc
add
retf
lea
out
hlt
push
in
mov
cli
and
das
(bad)
xchg
daa
repz
push
mov
cmp
jns
cmp
daa
movs
mov
push
adc
stc
xor
cmps
call
sbb
dec
int
cs
pop
stos
retf
repnz
fsubr
sub
xlat
call
loopne
dec
adc
leave
pushf
sbb
xor
push
cmp
xlat
pop
lahf
mov
push
stos
js
mov
ja
push
cmp
xlat
pop
xchg
mov
jns
les
push
cli
je
cmp
push
fsub
je
pop
stos
int3
dec
outs
adc
les
pop
mov
fwait
or
inc
cmps
call
sbb
dec
int
cs
es
stos
ror
sub
dec
dec
stos
push
gs
push
fld
aad
adc
fst
jnp
stos
retf
dec
mov
pop
xchg
stc
fst
and
nop
cmp
stc
minps
sub
cmp
mov
inc
or
loopne
cmp
push
lahf
mov
push
call
xlat
push
sahf
mov
push
call
push
stos
ror
cli
jp
outs
bound
cmp
stc
dec
jge
pop
nop
mov
or
retf
repnz
sbb
pushf
mov
mov
xchg
mov
mov
les
bound
movs
int3
cmp
add
cmp
push
nop
mov
push
call
xchg
pop
xchg
mov
push
call
push
pop
xchg
mov
push
call
pop
pop
xchg
mov
push
call
push
stos
ror
cli
jae
outs
jb
cmp
push
stos
(bad)
in
jne
les
xchg
cmp
cmp
out
add
and
or
scas
jge
sub
cmp
fsubr
movs
cmp
pop
stos
enter
dec
cmp
or
enter
mov
cwde
and
in
adc
fdivr
mov
stos
jne
mov
xchg
pop
dec
or
pop
cmp
jmp
stos
rcl
out
inc
pop
aad
mov
int3
popf
fist
and
push
fwait
aad
push
xor
push
mov
(bad)
push
sub
ret
jo
xor
jl
jle
push
jae
icebp
sbb
fcom
jo
in
xchg
ret
and
jae
icebp
sbb
push
sbb
fwait
dec
push
xor
sbb
mov
cli
jbe
jecxz
or
jb
mov
je
mov
push
cli
xchg
sbb
mov
add
movs
dec
cli
outs
push
in
test
es
dec
xchg
jge
lds
push
bound
div
push
scas
and
inc
lods
jb
cmc
push
aas
cmp
mov
add
test
sbb
cmp
ror
and
ret
movs
mov
loopne
push
xchg
push
stos
retf
lods
into
pop
cmp
outs
ret
ds
enter
aad
pop
sbb
in
fcomp
adc
dec
test
dec
sub
rcl
and
das
jb
jno
or
lock
mov
ja
mov
icebp
cmps
dec
xchg
aaa
push
xor
icebp
mov
loope
or
jae
scas
imul
jo
inc
dec
lock
and
sub
retf
dec
gs
cmp
icebp
hlt
scas
mov
mov
std
pushf
xor
ins
sbb
loopne
in
xchg
cmps
cld
inc
pop
pop
xor
js
jo
test
jmp
stos
les
push
stos
pushf
mov
test
retf
dec
or
les
inc
adc
cmp
mov
cmp
sar
sbb
push
sub
mov
je
cmp
int3
cmp
push
stos
js
push
add
xor
xchg
pop
dec
retf
adc
out
sar
mov
fld
inc
outs
js
adc
fadd
call
jo
or
sub
ret
enter
pusha
cmps
jno
and
sbb
cmp
mov
sub
stos
hlt
mov
pusha
xor
mov
stos
jb
and
mov
loopne
push
push
push
stos
les
out
test
movs
dec
cli
repz
icebp
or
je
enter
out
sbb
and
je
dec
lods
lds
pushf
xor
jo
mov
sbb
ret
arpl
mov
pusha
xor
xchg
out
hlt
les
add
movs
dec
jp
mov
aas
push
sti
push
test
pop
mov
data16
mov
add
cmp
sub
xchg
push
cmp
lahf
outs
leave
jl
pushf
ficomp
xor
add
add
in
push
lods
add
adc
add
adc
mov
call
sbb
xor
rol
push
sti
(bad)
and
push
and
xor
adc
lods
mov
cdq
push
(bad)
or
dec
jae
mov
sub
sub
stc
sub
fisubr
(bad)
into
icebp
mov
sbb
in
dec
inc
stc
sbb
std
or
ds
lods
xchg
dec
mul
lds
in
cdq
(bad)
clc
jmp
pop
je
dec
test
lea
stc
leave
mov
mov
lea
mov
shr
cmp
in
mov
pop
loopne
adc
sbb
shl
arpl
cmp
inc
jl
mov
stos
jge
lock
cmp
fwait
mov
gs
and
dec
xchg
sti
movs
cmps
fcomp
push
iret
cmp
pop
movs
imul
shl
cs
cmp
int
ret
hlt
sbb
stos
into
lea
arpl
iret
ror
push
or
fild
jnp
gs
ins
pop
sbb
imul
cwde
out
and
popf
sti
in
popf
out
xor
pop
loopne
adc
add
push
dec
test
mov
fidivr
push
sbb
dec
(bad)
outs
cmp
hlt
pop
loopne
cli
push
sbb
xchg
or
in
es
add
enter
jmp
mov
cdq
adc
nop
or
mov
test
xor
scas
xor
mov
aaa
push
scas
jnp
imul
in
inc
add
enter
bound
test
jmp
or
cmc
add
push
es
stos
retf
lods
push
pop
aas
ret
sti
xchg
fcom
loopne
int3
mov
mov
jo
push
mov
and
movs
outs
sti
inc
pop
sub
pop
inc
addr16
outs
sub
iret
sub
out
daa
sub
scas
and
jmp
pop
cdq
push
mov
pop
mov
cli
inc
daa
jmp
jg
fimul
in
mov
inc
mov
enter
xor
and
ins
aaa
sbb
or
cmp
cli
dec
jb
and
scas
movs
and
xor
sub
inc
addr16
scas
fld
out
add
mov
xor
scas
(bad)
cmp
daa
adc
aam
out
fs
dec
(bad)
adc
aad
push
xor
out
mov
lahf
in
aaa
or
pop
mov
jns
lds
cmp
xor
inc
push
enter
test
int
lock
cmps
rcl
push
xor
les
loopne
or
mov
cdq
and
dec
leave
call
sbb
push
sub
jp
les
inc
add
out
add
inc
stos
sub
sbb
(bad)
mov
cmp
push
rep
dec
cli
inc
or
push
and
(bad)
es
scas
push
imul
xor
cmp
cli
movs
push
sbb
add
in
adc
mov
iret
aam
ret
lea
fdivr
push
retf
push
sub
shr
cmp
sub
mov
pop
leave
mov
xor
inc
hlt
movs
pop
pop
sbb
movs
push
xor
sub
mov
push
das
pop
cld
adc
dec
fcom
rcl
dec
cmp
mov
and
pop
cmp
(bad)
fisubr
pop
test
adc
fcmovu
retf
jo
loope
or
cmp
lahf
sbb
aad
bound
push
xor
mov
pop
inc
cmps
or
cdq
pop
mov
jp
lea
pop
mov
mov
ret
push
outs
adc
fwait
aad
push
xor
shl
mov
jecxz
out
cmp
push
mov
cmp
push
stos
retf
(bad)
cmc
in
(bad)
push
cli
test
jne
(bad)
cmp
push
scas
je
data16
xor
mov
xor
jg
jge
in
cmp
cmp
mov
and
mov
rol
in
jb
loop
cmp
inc
cli
inc
aaa
jae
jne
sub
test
ret
int3
cmp
mov
stos
jno
mov
mov
push
cmp
push
dec
test
scas
jne
jecxz
clc
or
xchg
je
cmp
xor
mov
outs
ss
add
push
xchg
push
stos
(bad)
popf
stos
and
aam
(bad)
cmc
xchg
sub
push
or
mov
mov
pushf
adc
fs
(bad)
mov
loopne
stos
mov
cmp
cli
movs
push
sbb
sahf
sbb
aaa
cmp
adc
cmp
scas
aaa
jae
call
movs
stos
popf
stos
std
jmp
and
ret
js
jae
sbb
xor
inc
add
in
dec
outs
push
inc
inc
or
cmc
cmp
or
pop
(bad)
scas
push
addr16
lea
ret
cmp
repnz
inc
scas
out
and
movs
out
loopne
fsubr
in
(bad)
dec
add
xchg
sbb
cmp
xor
cmp
push
xchg
sbb
ficom
loopne
add
sbb
dec
lahf
out
sub
add
push
shl
loop
push
stos
shl
and
sar
sti
cld
xor
stos
jne
ror
jmp
inc
xchg
fwait
add
out
std
mov
mov
or
aas
and
inc
push
stos
les
test
ins
xchg
xor
xor
pop
fwait
adc
into
sahf
push
jae
je
ret
pop
stos
into
lea
js
ret
dec
(bad)
scas
push
cmp
retf
cmp
sbb
mov
loopne
sbb
adc
sbb
hlt
adc
lds
loopne
je
mov
fiadd
or
pop
test
inc
repz
stos
iret
lea
rcr
mov
mov
loopne
mov
adc
call
mov
shl
push
sbb
stos
xor
movs
dec
jp
xchg
sbb
scas
out
aam
pop
pusha
ret
or
sbb
xor
int3
outs
xor
pop
cmp
cli
movs
push
cmp
retf
scas
push
rep
dec
cli
push
xchg
out
ds
out
je
push
xor
into
sub
lahf
adc
rol
push
sbb
lock
cmc
cmc
ret
out
scas
push
les
shl
dec
ins
jbe
(bad)
aam
lock
mov
fisubr
fwait
cmc
out
mov
loope
(bad)
jecxz
mov
loopne
scas
shl
mov
test
in
sub
push
adc
cmp
inc
movs
push
enter
pushf
mov
stos
(bad)
cmp
push
scas
xchg
or
cmps
xor
fdivr
jbe
movs
fild
out
add
sub
push
and
(bad)
mov
scas
add
stos
ret
sub
fild
rcl
dec
xchg
sbb
fcomp
adc
(bad)
cdq
xchg
jb
pop
fwait
adc
into
cmp
xor
mov
in
mov
mov
xchg
xor
mov
ror
cmp
fwait
(bad)
xor
mov
es
int
retf
xor
dec
out
xor
push
xchg
or
inc
adc
push
sbb
lods
mov
stos
jno
xor
mov
adc
movs
push
sbb
lods
into
cmp
jmp
in
push
stos
popa
push
cmp
cmp
jns
mov
mov
mov
mov
iret
cmp
push
or
imul
ins
xchg
mov
sbb
xor
outs
leave
addr16
pop
xchg
sahf
xchg
pop
jae
xor
xchg
imul
into
test
ss
dec
icebp
jp
rcl
mov
cmps
push
cmp
shl
add
out
xchg
inc
outs
fidiv
mov
dec
xor
or
fsubr
xchg
cmp
outs
sub
mov
aaa
lea
push
sub
push
mov
or
ds
hlt
adc
sub
jmp
stos
jnp
fs
push
xchg
call
mov
mov
stos
inc
lds
test
pop
gs
xchg
mov
les
xchg
xchg
inc
lock
add
jb
sub
xor
loop
ret
mov
fimul
jl
nop
stos
or
jne
push
cmp
or
jnp
pop
mov
stos
fiadd
mov
mov
cmp
jge
call
jno
nop
inc
and
and
icebp
mov
push
(bad)
pusha
lock
jle
cli
jnp
jbe
retf
inc
pusha
lock
test
mov
sti
lea
jle
scas
lahf
xchg
in
sbb
and
repnz
pushf
stos
mov
push
popf
cmp
and
cld
ret
cmp
add
sub
cmp
push
stos
les
push
cli
jno
outs
iret
mov
or
jl
xchg
cli
ret
retf
push
test
stos
inc
sbb
add
mov
out
data16
fcom
aam
cld
xchg
jne
mov
out
jo
xor
dec
lds
aam
fsub
int3
lea
ret
rcl
dec
push
(bad)
ror
mov
adc
fsubr
pop
xor
aam
push
scas
aam
cmp
xor
fdivr
movs
adc
lods
je
inc
xor
jnp
rcr
jno
int3
leave
mov
mov
mov
aas
xor
adc
fist
(bad)
cdq
je
rcr
sahf
push
aas
sbb
push
(bad)
pop
stos
les
pusha
xor
lock
adc
cmp
fdivr
popa
inc
cmp
cmps
xor
mov
loop
sub
stos
jae
fldcw
xchg
pop
push
xchg
cmp
xor
adc
push
stos
push
mov
int3
addr16
cmps
add
or
and
push
stos
jne
ins
or
add
(bad)
das
cmps
js
jle
bound
out
mov
int
loopne
(bad)
mov
and
jp
lock
xchg
push
aam
cmps
popf
jnp
js
outs
ret
(bad)
cld
iret
push
aas
ret
fwait
adc
ret
ins
xor
and
lahf
in
xchg
jnp
mov
fucomip
daa
sbb
fs
jge
jmp
lea
add
push
stos
cli
movs
push
sbb
out
movs
push
sbb
add
test
inc
sti
scas
retf
lods
mov
ret
jmp
mov
jecxz
xchg
fwait
into
fisttp
cmp
scas
rol
out
mov
faddp
loopne
inc
pop
enter
mov
bound
pop
cdq
pop
inc
cmc
movs
mov
xor
int
push
lods
popa
sbb
fstp
sbb
lods
popa
sub
stc
adc
lods
popa
dec
rcl
lahf
sar
xchg
rcl
sbb
cmp
and
sub
push
lods
js
add
js
add
push
mov
sbb
aad
lods
nop
jecxz
or
icebp
enter
stos
cmps
sub
arpl
ret
ja
xlat
inc
mov
mul
sbb
push
add
mov
popa
dec
nop
xchg
leave
adc
dec
push
mov
push
fsubr
sbb
(bad)
push
bound
sbb
fsub
rol
xor
pop
lahf
sbb
jl
cmp
pushf
lahf
sbb
pop
nop
cmp
mov
xor
outs
adc
lods
xor
fwait
imul
pusha
mov
xor
movs
mov
dec
jno
pop
jno
movs
cmp
xor
movs
(bad)
call
jmp
pop
adc
sbb
scas
push
retf
repnz
sbb
les
cwde
mov
repz
stos
ret
sub
dec
rcr
movs
nop
cmp
or
cmp
or
scas
push
js
mov
push
stc
push
scas
add
pop
mov
les
and
idiv
ror
imul
shl
ret
popf
sub
push
lods
xor
stos
retf
test
xor
mov
bound
into
(bad)
jmp
pop
mov
or
lock
xor
scas
cmps
les
pop
cmp
cmc
inc
push
add
mov
cmp
icebp
cli
jmp
adc
ret
cmp
hlt
test
add
push
sbb
push
jae
mov
je
enter
arpl
rep
(bad)
xor
mov
out
cmp
loopne
cli
xor
adc
lahf
cmp
fs
fstp
and
or
push
mov
sbb
loopne
jbe
xchg
(bad)
or
dec
xchg
push
jb
jge
jbe
cmc
and
cld
sar
adc
xor
out
loope
mov
fld
sub
daa
xor
cli
push
sbb
scas
add
jne
jl
fbstp
ret
fwait
mov
jp
repnz
inc
or
add
push
push
xor
pop
inc
xchg
jnp
dec
or
lahf
ror
inc
inc
push
sub
cmp
jbe
mov
xchg
sub
push
xchg
sub
push
xchg
sub
pop
add
loope
xchg
cs
les
sbb
pusha
mov
lock
jbe
adc
xor
outs
je
xchg
sub
push
xchg
sub
push
nop
mov
adc
ret
mov
nop
mov
jge
retf
push
movs
mov
ins
ins
xchg
sub
adc
sub
jg
sbb
adc
pop
push
jp
fs
jne
sub
arpl
mov
xchg
mov
ficomp
aad
data16
mov
enter
imul
fsub
jge
xchg
sub
mov
xchg
pop
(bad)
popa
aad
push
xchg
sub
stos
imul
add
and
sub
sub
and
sub
mov
xchg
cli
ficomp
jge
shl
adc
fnsave
xchg
push
push
fs
lods
imul
pop
jne
stos
push
inc
jb
movs
imul
and
jb
stos
imul
xchg
adc
out
enter
imul
pushf
popa
aad
push
inc
jb
stos
imul
pop
cmp
ja
jne
stos
push
inc
jb
mov
popf
sub
add
ficom
or
fdivr
or
xchg
arpl
mov
xchg
ins
cwde
cmp
ret
sbb
mov
stos
pop
or
cmps
push
movs
push
into
out
out
mov
mov
jp
xchg
push
repz
adc
fidivr
call
or
shl
push
xchg
fiadd
push
xchg
push
mov
push
into
ret
lahf
sbb
clc
or
fistp
(bad)
adc
mov
sar
fcmovu
popa
aad
pop
inc
jb
jae
and
sbb
popa
aad
lods
retf
jge
mov
sub
pushf
pusha
aad
push
adc
xchg
cli
ficomp
jge
adc
dec
push
xchg
sub
inc
jb
cmps
imul
rcl
and
cmps
imul
sar
xchg
pop
popa
aad
jae
ins
mov
cli
ficomp
jge
inc
jb
jae
and
pop
xchg
sbb
popa
aad
lods
retf
jge
repz
cmp
cli
fcmovu
pusha
aad
jl
jb
jae
movs
neg
call
dec
mov
fld
add
mov
cmp
pusha
aad
adc
mov
push
or
fistp
mov
mov
fstp
aad
xchg
scas
lods
rcr
stos
adc
mov
mov
xor
mov
popa
aad
push
popa
jne
lods
imul
or
fidivr
sbb
inc
inc
jb
cmps
imul
lods
retf
mov
fstp
aad
ror
xchg
adc
dec
mov
shr
or
fidivr
sub
(bad)
out
cmp
jg
sbb
adc
inc
jecxz
inc
mov
in
out
xor
fidivr
stos
and
pop
adc
add
imul
arpl
and
fwait
pop
inc
fisttp
xchg
xchg
and
push
xor
stc
lea
pushf
mov
pop
xchg
sub
ja
cli
fcmovu
fwait
scas
mov
imul
mov
pop
cmp
push
fwait
sub
mov
enter
nop
cmp
sbb
push
add
into
dec
loop
and
xchg
sub
repz
ficom
sub
xchg
xchg
jb
mov
lock
jp
shl
jle
pop
adc
inc
test
adc
jge
hlt
sbb
cmp
fcmovu
sbb
aad
stos
retf
dec
int3
jae
pop
faddp
push
das
xchg
pop
mov
inc
das
xchg
cli
push
push
nop
cmp
adc
xchg
call
pop
nop
jp
(bad)
scas
movs
shl
pop
ret
scas
adc
retf
sub
push
push
dec
push
pop
test
inc
stos
ret
lea
pop
in
adc
mov
push
je
cmp
cmp
push
aaa
fst
inc
xchg
sub
fadd
stos
into
popf
fwait
popf
cmp
dec
xchg
sbb
call
xor
cmp
std
retf
enter
iret
xchg
iret
cmp
loope
push
not
into
popf
jnp
scas
sahf
out
jno
sbb
adc
retf
cmp
lock
inc
sbb
lea
mov
in
adc
cmp
in
in
jnp
xchg
pop
and
stos
arpl
scas
xchg
push
jb
or
add
in
fs
out
ja
sub
lods
lea
clc
xchg
outs
ret
pop
call
bound
mov
mov
sbb
cmp
and
mov
and
jnp
ins
xor
or
xor
ins
ja
push
or
out
xchg
je
enter
(bad)
xor
jle
aad
mov
(bad)
fmul
popf
jnp
add
scas
mov
popf
dec
push
cmp
out
mov
xchg
mov
lock
push
clc
adc
pop
mov
push
aas
add
xor
pop
repz
(bad)
jmp
dec
or
inc
ins
ja
add
add
rcr
in
and
add
sbb
sbb
and
pushf
sbb
sbb
div
pushf
sbb
sbb
pop
test
pushf
sbb
sbb
pop
test
jmp
ins
jo
fstp
dec
cmp
fadd
cmp
pop
sub
pop
fld
cwde
es
ins
rcl
push
test
imul
cwde
cmps
popa
or
cwde
inc
cmps
dec
xor
pop
test
mov
pop
sbb
leave
inc
test
imul
add
pop
lods
out
test
bound
cmp
in
jo
and
outs
adc
jmp
bound
out
dec
and
outs
adc
jmp
fidivr
mov
add
inc
fs
pop
jns
pop
pop
dec
jg
sub
pop
mov
pop
jg
pop
js
pop
sub
mov
scas
pop
jmp
mov
cmp
pop
xchg
je
inc
stos
les
shl
cmp
jo
(bad)
cmp
push
scas
in
js
xor
call
in
or
inc
pop
(bad)
sub
pop
mov
inc
mov
test
or
mov
out
xor
test
call
(bad)
fcomp
jne
jp
adc
ds
iret
cmp
push
scas
jnp
rcl
ret
movs
lods
dec
mov
jg
test
jo
ds
inc
test
sub
mov
lock
retf
adc
leave
cmp
daa
adc
push
sbb
hlt
fcomp
ret
sahf
call
cmp
pop
jae
mov
or
mov
cdq
sti
push
clc
out
adc
adc
xor
sbb
mov
xor
in
xchg
lea
jnp
ins
xor
ret
and
lock
adc
push
scas
in
js
dec
inc
cmps
push
cmp
ds
stos
jno
xor
movs
out
test
push
or
iret
out
movs
cld
xchg
pop
mov
data16
pop
and
jg
std
add
data16
fbstp
loopne
cld
pop
mov
mov
rcl
int3
les
je
xchg
lock
pushf
and
jp
xchg
les
cld
cmp
ret
dec
lock
ret
das
les
jge
inc
mov
push
sub
xor
pop
retf
dec
mov
ret
cli
popa
in
cld
cmc
fidivr
stc
das
cmps
les
xchg
aam
cmp
pop
out
les
aam
enter
(bad)
stc
push
stos
sar
push
xor
jbe
nop
fsub
or
fcom
sub
repnz
or
pop
gs
push
xchg
cli
mov
scas
stos
stos
or
dec
or
in
lock
adc
movs
cmp
push
nop
pushf
and
sub
repnz
adc
aad
stos
jnp
push
xchg
cli
scas
cmc
and
jns
repz
in
lea
fwait
adc
pop
jmp
gs
lds
mov
repnz
pushf
stos
pushf
mov
stos
les
mov
push
jl
push
cmp
inc
or
and
scas
movs
int3
cmp
loopne
jl
in
jb
shr
cmp
ret
or
scas
push
mov
ret
int3
cmp
scas
push
les
sbb
ret
int3
popf
push
jp
cmc
mov
lods
cmp
cmp
cmp
das
fs
dec
stos
jnp
pop
inc
xor
out
stc
enter
fwait
cmc
mov
stos
retf
bound
ret
inc
retf
aaa
in
les
push
pop
nop
fsub
or
mov
ret
fwait
mov
in
fstp
push
or
mov
ret
and
jmp
or
scas
xor
xchg
stc
and
js
mov
add
cmp
and
inc
jecxz
mov
lods
or
fwait
cmc
mov
stos
les
loopne
jnp
cwde
inc
cmp
dec
mov
lods
sbb
retf
int
push
cmp
inc
cmp
das
test
push
stos
mov
ret
int3
cmp
scas
push
ret
or
in
or
ret
cmp
scas
repz
in
mov
loopne
retf
shr
pop
sbb
bound
scas
movs
int3
cmp
mov
pop
lods
jnp
push
xchg
mov
cmovnp
mov
sbb
retf
dec
mov
call
mov
push
fs
in
cmp
xchg
sbb
bswap
mov
ret
jo
loopne
or
pop
cmp
scas
adc
retf
(bad)
aam
fidivr
or
scas
push
les
les
jl
xchg
sbb
loope
or
scas
push
push
push
pop
stos
leave
mov
loopne
add
int
movs
int3
cmp
scas
push
les
aam
int3
lea
sbb
dec
test
enter
scas
push
fwait
mov
push
cmp
mov
enter
fwait
jne
push
xor
push
stos
retf
in
or
fs
lods
sbb
inc
xor
pop
shufps
retf
mov
ret
je
push
stos
mov
ret
int3
cmp
scas
push
ret
int
cmp
pop
stos
cmp
cmp
mov
sbb
xor
jnp
cwde
inc
cmp
outs
cli
dec
shr
inc
xor
out
stc
int3
pop
(bad)
sbb
shr
pop
pushf
stc
pusha
cli
or
scas
push
les
push
pop
nop
pop
and
mov
inc
cli
or
scas
push
les
mov
scas
fimul
scas
adc
fcmovne
scas
push
js
aam
les
into
sbb
scas
push
js
mov
or
mov
cs
push
pop
nop
sbb
or
fcom
mov
repnz
retf
sbb
or
mov
ret
int3
cmp
pop
or
mov
scas
cmp
pop
nop
fsub
add
jne
retf
(bad)
cld
cmc
push
jnp
stc
pop
jg
stc
pop
pop
xchg
mov
jns
jl
push
adc
js
mov
push
add
push
xor
mov
ins
cmp
sbb
pop
test
stos
enter
pop
mov
lods
jo
or
cmp
push
add
dec
xchg
xchg
loopne
mov
int
mov
xchg
scas
imul
cmp
pop
inc
or
js
xlat
fbld
ds
or
ret
iret
cmp
ins
adc
stos
enter
jo
out
test
movs
push
call
push
stos
arpl
leave
jo
cs
jno
jmp
mov
enter
sbb
call
scas
sar
sbb
(bad)
outs
jmp
adc
jecxz
xor
cmp
aam
mov
xchg
push
jb
lea
fdivp
mov
shr
loope
(bad)
out
fs
jmp
cmp
adc
pushw
mov
sbb
bound
add
ins
cmp
sbb
sbb
stos
push
xor
outs
leave
jo
ror
or
mov
leave
outs
push
mov
jb
sbb
pop
loopne
lods
(bad)
xchg
cmps
jno
je
ret
dec
imul
xlat
jnp
dec
xchg
fwait
hlt
add
in
jecxz
add
ret
sbb
lds
test
jne
int3
mov
in
xchg
clc
or
xor
push
mov
xchg
or
loop
push
cmps
add
cwde
or
loopne
push
pop
retf
ins
cmp
iret
lods
jge
xor
xchg
push
data16
cdq
adc
or
loopne
push
outs
lds
jb
mov
ja
enter
dec
aaa
outs
push
call
cmp
and
faddp
dec
out
xchg
js
sbb
outs
push
inc
popf
test
xchg
call
movs
leave
mov
imul
mov
retf
mov
cmp
cmp
ficom
loopne
fs
lods
ret
or
push
pop
nop
pushf
sbb
out
retf
cwde
(bad)
pop
xchg
jp
cmc
and
jns
dec
mov
jb
lods
fsubr
adc
test
mov
sub
cmp
cmp
or
sub
or
mov
jns
js
mov
int3
cmp
mov
hlt
hlt
push
scas
dec
xchg
xchg
push
aas
and
dec
adc
pop
pop
test
stos
into
lea
mov
hlt
xchg
pop
mov
or
nop
mov
push
dec
xchg
mov
push
xchg
adc
inc
mov
stos
retf
out
xchg
or
add
fnstsw
out
mov
pop
mov
(bad)
scas
adc
test
iret
push
retf
sbb
mov
call
fwait
repnz
mov
shl
cmp
cmp
pop
out
sbb
icebp
xor
rep
(bad)
jns
jnp
xchg
loop
aam
test
loope
out
test
push
sbb
pop
jae
movs
rcr
mov
inc
fs
retf
dec
retf
xor
cmp
jbe
xchg
jle
sub
imul
jno
mov
push
xor
enter
pop
arpl
jmp
les
loopne
clc
pop
loopne
fistp
in
xchg
retf
inc
sub
fist
ret
jl
in
sbb
scas
push
jb
mov
xchg
pop
and
sub
push
es
stos
enter
out
clc
out
hlt
fist
dec
xchg
jnp
xor
fild
jg
mov
into
sub
fsubr
cmp
pop
jge
push
idiv
sti
cmp
je
and
sbb
push
cmps
repz
jbe
add
ja
mov
jo
pop
sub
data16
jbe
xor
mov
and
jmp
adc
add
inc
ss
(bad)
dec
icebp
dec
ss
sbb
mov
dec
(bad)
ss
shl
es
dec
inc
or
mov
pop
xchg
test
popa
mov
xor
hlt
hlt
push
scas
dec
xchg
xchg
push
xor
ins
in
cld
pop
and
jb
ins
pop
div
loopne
push
mov
fist
or
pushf
push
mov
inc
dec
mov
add
adc
cmps
cmc
xor
push
cld
inc
dec
call
push
sbb
lock
rol
not
sbb
mov
pop
pop
push
and
sub
addr16
xor
ins
ja
mov
adc
add
hlt
ret
push
not
loop
mov
adc
sbb
pushf
mov
lods
ret
lods
push
mov
int
xor
cmp
aaa
mov
mov
(bad)
(bad)
pop
or
int3
cmp
les
and
mov
push
xor
adc
(bad)
repz
fwait
aad
push
xor
fisub
retf
sbb
enter
inc
xchg
pop
sub
push
or
mov
dec
test
mov
jnp
pusha
xor
add
arpl
sbb
out
dec
xchg
fwait
lea
cmp
mov
xchg
or
mov
or
fwait
push
das
push
jb
repnz
fstp
mov
(bad)
(bad)
xchg
lods
jno
je
rep
push
xor
enter
and
mov
xchg
push
scas
xchg
les
leave
jno
repnz
ror
aad
popf
mov
mov
lea
cmp
jp
mov
je
out
movs
and
lods
retf
mov
out
xchg
stos
test
outs
xor
iret
aam
ret
scas
popf
mov
cmp
xchg
rcl
out
mov
dec
pushf
add
pop
jno
push
loopne
cld
or
sar
mov
lahf
in
stc
or
jmp
in
sbb
adc
jmp
push
sbb
neg
pcmpgtb
inc
hlt
cmp
sbb
stos
shl
and
cmp
mov
stos
jge
adc
xor
xor
repz
adc
jl
repz
and
retf
jnp
add
inc
jae
stos
ret
inc
aas
pop
in
pop
or
pop
pop
call
loop
add
sbb
scas
retf
add
call
mov
inc
mov
cmp
stos
hlt
add
out
xchg
out
je
enter
pop
stos
les
pusha
xor
add
and
in
xchg
push
ret
pop
stos
ret
popf
jnp
in
inc
iret
popa
iret
cmp
pop
jg
cmp
pop
push
push
push
push
ret
pop
stos
ret
fisttp
and
inc
(bad)
ds
or
les
push
sbb
rcr
dec
addr16
mov
push
aas
or
int3
pop
loopne
jp
ret
add
mov
sbb
inc
mov
pop
cmp
scas
push
call
or
movs
push
sbb
or
loope
js
xlat
xchg
jg
pop
jmp
fist
ret
test
cli
out
movs
arpl
sti
aas
in
dec
leave
pop
mov
push
xor
enter
out
shr
fdiv
pop
mov
fcomp
adc
dec
sbb
mov
movs
jge
mov
dec
fild
hlt
cwde
test
les
jmp
imul
sub
and
stos
jmp
gs
jnp
lds
mov
add
fstp
loop
dec
fldenv
in
outs
cmps
mov
leave
fist
lock
ret
push
pop
call
test
and
pop
pop
xchg
or
push
cmp
mov
jnp
add
stos
loop
imul
call
xchg
call
in
enter
imul
or
ret
fs
mov
add
jnp
lock
cmps
movs
fisttp
and
jnp
push
pop
call
test
and
pop
pop
mov
push
cmp
mov
jns
add
stos
loop
imul
call
xchg
call
in
enter
imul
pop
push
xchg
xchg
call
mov
mov
pop
nop
mov
outs
xchg
pop
mov
mov
jns
rcl
movs
fnstsw
fwait
inc
push
mov
pop
pop
sbb
xor
mov
fwait
inc
shl
rcr
lahf
sbb
rcl
shl
xor
push
dec
mov
mov
(bad)
shl
dec
call
(bad)
test
sbb
add
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
shl
arpl
leave
cmp
das
in
mov
stos
jl
xor
adc
fld
pop
shl
pop
ds
cmp
scas
and
fcom
inc
mov
int
loopne
inc
dec
pop
loop
push
sub
mov
push
push
add
les
ret
cmp
push
stos
call
or
inc
icebp
cmp
movs
push
or
pop
fs
rcl
ret
retf
and
jo
mov
lahf
cmp
fs
jns
rcl
add
in
jbe
ss
lea
stos
sub
inc
fistp
fs
or
mov
mov
xchg
mov
or
cmc
adc
jecxz
push
cmp
cs
mov
in
jmp
inc
add
mov
dec
hlt
icebp
mov
hlt
and
adc
xchg
jp
jmp
ds
stos
jnp
pusha
xor
ror
cli
(bad)
cmp
push
sub
jmp
push
mov
pusha
jmp
cmp
das
in
lock
jp
adc
std
pop
leave
scas
mov
adc
jmp
jl
outs
mov
ret
mov
ss
jmp
xchg
pop
push
loope
mov
retf
das
inc
in
retf
scas
inc
mov
int
inc
pop
iret
pop
retf
pop
int
inc
mov
int
inc
sbb
retf
mov
int
inc
(bad)
int
inc
mov
pop
test
mov
pop
test
lods
push
cmovne
retf
lahf
inc
mov
int
inc
mov
int
inc
mov
fild
mov
lahf
lods
pop
fmulp
std
aaa
mov
pop
lods
inc
mov
int
inc
mov
int
or
sbb
inc
mov
adc
xchg
(bad)
retf
in
das
fistp
xor
mov
in
jne
retf
sub
into
scas
lds
retf
pop
sbb
ja
inc
mov
int
inc
cmp
ins
test
ins
mov
leave
cmovae
dec
test
inc
inc
xchg
push
or
retf
mov
int
inc
fwait
int
in
cmp
stos
jne
nop
test
sbb
into
scas
lds
retf
pop
sbb
xlat
xchg
inc
mov
int
(bad)
call
xchg
dec
or
sahf
imul
push
fiadd
popf
or
adc
lahf
or
adc
mov
inc
sub
int
cmps
rep
lahf
mov
or
int
xchg
imul
inc
mov
pop
dec
pop
jne
sub
js
adc
retf
jmp
(bad)
jne
loope
icebp
imul
mov
mov
dec
xor
int
jnp
int
test
xchg
cld
mov
leave
pop
popf
lods
imul
inc
mov
loopne
imul
jg
mov
stos
and
push
pop
jge
leave
lahf
cmp
aad
iret
rol
lods
fwait
cmp
cmp
dec
inc
fnstsw
iret
xor
mov
and
retf
cmp
ins
test
inc
sbb
cmp
mov
scas
inc
or
fbstp
mov
fwait
cmc
inc
mov
cmc
test
mov
lock
mov
lods
loop
mov
ja
(bad)
retf
dec
popf
daa
dec
mov
xchg
xchg
xchg
pop
sbb
nop
test
fistp
(bad)
imul
dec
int
cmp
call
stos
scas
cdq
int
dec
clc
loop
sti
daa
and
fwait
cwde
xor
int
inc
mov
int
and
add
out
in
mov
jnp
and
xor
xlat
imul
into
inc
fistp
xlat
imul
stos
add
inc
mov
mov
mov
retf
scas
inc
mov
ja
call
xchg
dec
or
retf
mov
leave
pop
sbb
scas
inc
xchg
cld
sbb
movs
and
jle
inc
mov
stos
mov
in
loop
mov
lock
loop
stos
mov
lods
loop
mov
int
cli
jmp
jge
mov
retf
mov
adc
mov
iret
xor
or
fild
sahf
leave
lahf
adc
test
fiadd
loopne
mov
lds
sbb
mov
int
inc
or
fbstp
mov
leave
cmovae
fwait
cmc
inc
mov
int3
stos
xchg
jmp
std
push
fiadd
adc
fmul
pop
sbb
xchg
mov
sbb
add
retf
int3
stos
and
mov
push
push
xchg
leave
pop
lock
sbb
or
jnp
and
mov
cmp
mov
fdiv
ret
add
cdq
lods
mov
push
inc
mov
int
sbb
xchg
xchg
pop
xchg
inc
mov
leave
mov
inc
sbb
int
in
sbb
stos
inc
outs
xchg
aas
mov
leave
scas
push
dec
xchg
test
mov
leave
scas
mov
sub
ins
mov
mov
mov
lock
or
mov
ins
cmc
ins
mov
retf
or
fdivrp
add
jmp
(bad)
inc
jecxz
stos
lds
push
mov
mov
popa
repnz
and
or
inc
stos
retf
lea
cmp
add
add
rcl
int3
cmp
cmp
push
xchg
sbb
mov
sub
(bad)
add
(bad)
cdq
aam
repz
fwait
adc
ficomp
lea
aaa
jnp
(bad)
push
cmp
scas
adc
cli
movs
push
sbb
mov
ins
dec
mov
call
push
jmp
push
mov
xor
sub
dec
mov
lahf
in
cmps
sbb
jg
outs
jg
ins
push
sti
xor
popa
(bad)
dec
mov
arpl
div
push
sub
stos
mov
ror
int3
cmp
dec
inc
cmp
sar
pop
pop
int3
cmp
add
inc
jle
add
sbb
mov
xor
push
nop
pop
jb
sub
mov
shl
ret
jmp
mov
xchg
pusha
stos
retf
adc
cwde
fist
jns
loopne
out
mov
xor
bound
ret
jecxz
mov
out
xor
rcl
sbb
sub
aas
ret
cmp
scas
adc
push
push
mov
outs
fst
out
popa
push
sub
movs
(bad)
retf
xchg
fisttp
fcom
jmp
test
fwait
test
xchg
lea
(bad)
cmps
cld
sbb
aad
mov
je
fstp
adc
sahf
fsub
xchg
lea
add
fist
xor
mov
mov
(bad)
iret
cmps
inc
fstp
add
dec
dec
movs
je
stos
lds
int
push
fnstcw
xchg
sub
dec
movs
je
mov
xor
pusha
enter
or
mov
lock
xchg
mov
repz
fisttp
repz
fisttp
repz
jnp
ja
fisttp
repz
jp
add
jnp
ficom
(bad)
lock
pop
mov
bound
mov
push
xchg
pop
mov
xchg
fisttp
push
xchg
and
push
(bad)
mov
mov
mov
(bad)
(bad)
push
retf
in
push
adc
or
repz
sub
sar
test
call
mov
xchg
in
pop
inc
stos
xlat
mov
inc
(bad)
push
retf
mov
pslld
mov
imul
ins
icebp
repnz
icebp
xlat
mov
in
test
popf
popf
cmc
repnz
icebp
xchg
rcr
std
(bad)
push
fisttp
jae
fisttp
stos
add
scas
not
ror
leave
xchg
(bad)
push
int
rcr
out
push
xor
mov
hlt
xchg
jb
je
fs
bound
jge
mov
movs
mul
pop
xor
xchg
movs
mul
pmaxub
xchg
fucomi
test
test
ret
jmp
div
arpl
xchg
add
mov
fcomip
in
gs
test
test
ret
jmp
rol
sti
mov
hlt
(bad)
repz
lea
int
fcomp
xchg
iret
xchg
xor
dec
dec
hlt
xchg
fisttp
jnp
mov
or
dec
hlt
xchg
retf
(bad)
repz
in
push
pusha
push
fmul
test
test
not
fnclex
inc
cli
mov
mov
clc
in
lds
fbstp
(bad)
pop
xor
sar
xor
mov
stos
inc
cld
mov
cmp
dec
dec
dec
hlt
xchg
fstp
je
stos
icebp
rcl
stos
icebp
rcl
stos
(bad)
repz
fmul
jae
loopne
not
fisttp
cmc
adc
(bad)
repz
and
dec
jnp
xchg
fstp
add
scas
not
ror
not
sti
mov
and
xchg
(bad)
sti
mov
xchg
dec
ret
sub
hlt
xchg
int3
fdivp
cmp
mov
shr
hlt
xchg
push
push
cmp
mov
aaa
ror
scas
movs
mov
scas
push
mov
scas
xor
pop
mov
movs
xchg
loope
je
push
sub
jmp
retf
cdq
dec
sub
out
push
mov
mov
fbld
push
sbb
lods
fcom
(bad)
stc
push
ins
xchg
pop
fwait
push
sub
cmp
push
lahf
movs
jno
movs
jmp
cmp
inc
arpl
mov
mov
stos
jbe
mov
aas
cmp
sahf
add
xor
into
mov
popf
int
repnz
cmp
push
stos
push
adc
les
addr16
mov
and
stos
or
inc
ret
and
cmp
mov
aas
pop
les
stos
(bad)
cmc
inc
jns
mov
or
adc
(bad)
lea
popa
push
jbe
stos
(bad)
popf
pop
icebp
pop
mov
add
xchg
xlat
xor
stos
mov
push
int
stos
retf
dec
push
lods
push
aaa
xchg
or
xor
out
inc
jp
pop
and
into
pop
jmp
push
adc
pop
shl
scas
movs
movs
popf
stos
imul
xor
xchg
fxch
sbb
xor
cmp
scas
xchg
pop
and
popf
jbe
iret
fmul
sbb
ret
movs
push
aaa
and
outs
mov
imul
add
mov
xor
and
fcomp
iret
ins
sbb
fld
mov
sub
cmp
shr
cdq
lahf
test
daa
shr
xchg
out
push
mov
clc
add
iret
std
xor
add
mov
imul
xchg
(bad)
pop
push
stos
les
scas
push
pushf
mov
ins
inc
sbb
mov
cmp
outs
and
ins
xchg
sub
test
mov
mov
sbb
or
int
retf
pushf
adc
mov
sar
xchg
ror
mov
cmp
xlat
fcmovnb
sub
xchg
add
ins
push
in
(bad)
cmps
ret
cmp
call
enter
sub
movs
cli
mov
shl
sbb
test
pusha
xor
in
sbb
aam
jo
repz
sub
ficom
and
pop
leave
jnp
ins
xor
lods
in
jns
jae
xchg
test
mov
mov
jmp
aad
cmp
scas
push
ins
xchg
xor
lods
out
mov
fild
push
fistp
add
xchg
mov
xcrypt-ofb
cmps
out
hlt
je
jp
ret
dec
or
lds
push
sub
loopne
das
or
sbb
push
push
ins
stos
les
outs
xor
icebp
cmp
jb
fst
mov
lock
call
push
ja
cmc
adc
adc
ret
adc
pop
scas
jle
ins
js
sbb
cmps
jno
adc
lock
cmp
xor
pop
ja
push
jnp
outs
xor
inc
sbb
sbb
aam
adc
dec
xchg
stos
retf
aam
fild
dec
sbb
cmc
aad
xchg
retf
outs
(bad)
mov
dec
dec
and
ds
ins
xor
scas
dec
xchg
imul
jbe
mov
sbb
xchg
jle
cmp
ss
jbe
mov
push
or
jle
cmp
xchg
retf
(bad)
mov
dec
jle
push
cwde
and
mov
cwde
and
mov
cwde
cs
mov
cwde
adc
repnz
add
mov
call
and
mov
sbb
les
call
and
or
and
mov
cwde
and
mov
cwde
mov
enter
jbe
pushf
and
mov
mov
mov
mov
pop
nop
lods
mov
enter
int3
mov
pushf
inc
mov
and
mov
call
fwait
nop
and
mov
int3
mov
pushf
fst
mov
sub
dec
call
and
mov
mov
call
mov
inc
addr16
adc
cmps
nop
(bad)
mov
sbb
pop
adc
addr16
int3
les
mov
and
mov
cwde
and
mov
int3
mov
sbb
xchg
jnp
je
into
mov
cld
xor
ror
out
xlat
mov
pushf
push
nop
clc
xchg
cs
mov
cwde
cwde
sahf
mov
adc
cmp
nop
cmp
mov
nop
daa
int3
cmp
mov
sar
adc
xchg
xor
or
cwde
cs
jns
in
push
pusha
out
mov
sub
nop
and
lock
sbb
je
lahf
nop
and
lock
ins
mov
cwde
mov
ins
mov
mov
pop
in
or
(bad)
pusha
out
mov
fist
inc
mov
mov
cwde
sub
mov
cwde
xchg
cmp
and
cwde
and
repz
jo
sub
sub
mov
nop
sub
and
dec
mov
mov
pop
push
les
cmps
jo
sub
sub
mov
nop
sub
add
cwde
and
stos
add
mov
jge
jmp
shl
mov
pop
nop
jl
and
lods
cwde
and
or
add
adc
js
movs
scas
hlt
setg
inc
fmul
shl
pushf
adc
xchg
in
nop
fdiv
inc
cmps
hlt
iret
cwde
nop
and
in
pop
pop
nop
cmp
and
jl
and
or
sbb
mov
jecxz
loopne
add
mov
sub
fwait
add
mov
les
ret
mov
inc
and
mov
ins
pushf
jnp
je
lahf
nop
and
call
and
sub
sbb
pop
push
dec
repnz
shl
add
push
nop
in
and
enter
int3
or
push
int3
mov
aam
mov
mov
sub
int3
mov
sub
sahf
fwait
nop
daa
jl
or
les
nop
and
in
aas
mov
dec
rcr
xlat
xor
lahf
mov
ins
mov
mov
aas
mov
xchg
cmp
sbb
les
sbb
and
jl
push
(bad)
dec
mov
lahf
pushf
mov
enter
fbstp
sub
cmp
call
pushf
stos
xor
push
xor
pop
and
pop
scas
dec
push
add
cmp
or
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
scas
push
les
push
stos
les
push
stos
les
push
stos
cmp
scas
push
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
(bad)
aas
push
test
aas
push
test
aas
push
test
cmp
push
stos
les
push
stos
les
push
stos
les
hlt
and
cmp
push
stos
les
push
stos
les
push
stos
int3
cmp
mov
mov
push
pop
pop
test
inc
stos
int
push
dec
outs
sbb
(bad)
retf
adc
out
ror
jmp
stos
aam
mov
inc
jg
mov
cmp
lahf
outs
and
sub
adc
jge
ins
or
ret
retf
cmp
addr16
int
xor
cmp
xlat
outs
push
and
or
in
mov
xor
push
bound
sahf
pop
and
stos
jo
mov
jg
into
sbb
cmp
ficomp
xor
loopne
dec
(bad)
scas
push
ss
pop
repnz
in
and
leave
xchg
mov
ret
out
aam
jae
mov
xor
enter
stc
jno
inc
lock
arpl
sti
pop
cmp
sub
les
shl
scas
push
push
neg
les
adc
sub
pusha
mov
test
or
test
imul
and
xor
jbe
fdiv
pop
mov
outs
push
mov
(bad)
jmp
mov
movs
dec
adc
jge
jns
int3
cli
in
movs
daa
mov
fwait
cli
iret
and
(bad)
sub
xchg
js
jns
push
xor
jnp
mov
lea
adc
pop
movs
cmps
cmp
rol
aad
in
int3
xchg
movs
popf
fldcw
jl
dec
push
sub
(bad)
iret
xchg
iret
lds
xor
push
push
push
and
mov
pop
sub
popf
sbb
ins
dec
hlt
sti
jne
add
dec
nop
sbb
std
xor
add
cmps
cmp
mov
stos
ret
sub
scas
dec
xchg
stos
push
xor
fsub
adc
sbb
fsub
arpl
enter
pop
aaa
mov
stos
jge
add
pop
xor
or
shl
es
mov
mov
sub
retf
xchg
mov
aad
(bad)
xchg
pop
fwait
adc
fisubr
xchg
cmp
data16
outs
inc
mov
loopne
cli
xchg
mov
mov
movs
jbe
adc
imul
out
sbb
xor
push
mov
cmp
aam
es
cmp
inc
push
push
sbb
pop
xor
cmp
adc
xor
fwait
jge
pushf
iret
push
mov
gs
inc
leave
jb
add
push
inc
mov
leave
lods
mov
rep
dec
jp
test
jle
ret
out
movs
jmp
adc
push
cld
mov
stos
jno
xor
into
out
test
push
sbb
imul
sbb
jae
xor
sub
pop
je
lock
mov
push
jno
cmc
outs
retf
lods
jle
cmp
outs
xor
mov
push
xor
out
adc
sub
lock
mov
jmp
sub
dec
xchg
pop
cdq
sub
ins
ss
aaa
inc
iret
adc
cld
rcl
cld
rcl
cld
rcl
cld
rol
mov
adc
cld
rol
ins
cdq
shr
mov
rcl
cld
daa
push
inc
or
push
xchg
movs
ret
adc
jno
pop
push
leave
pop
xor
clc
rol
mov
add
cld
shl
ss
div
rcl
or
and
loop
ja
rcl
ret
jle
push
mov
adc
cld
xor
out
call
sbb
cld
rol
clc
leave
mov
or
xchg
aaa
and
cmp
icebp
retf
push
hlt
xchg
movs
jg
mov
pop
clc
rcl
cld
mov
enter
pop
cld
rcl
add
push
or
push
mov
adc
in
cmp
clc
xchg
pusha
out
pop
mov
sbb
pushf
fs
or
fcom
shr
je
lds
pop
(bad)
dec
add
mov
pop
shl
xchg
mul
xor
call
push
lock
or
cld
rol
mov
popf
sbb
pop
(bad)
jecxz
pop
xchg
cmp
int3
fwait
jp
clc
push
dec
dec
je
jge
clc
popa
add
add
icebp
retf
push
xchg
leave
pop
jnp
data16
scas
sbb
in
rcl
int3
sbb
hlt
lds
sub
retf
push
xchg
leave
pop
inc
repz
jmp
retf
push
xchg
leave
pop
iret
mov
scas
sbb
fmul
adc
mov
scas
sbb
mov
adc
lods
data16
scas
sbb
in
rcl
jl
inc
sbb
icebp
or
lds
int3
mov
pop
cld
rcl
jl
adc
cld
popa
adc
and
push
dec
enter
push
pop
cmps
cmp
ins
cdq
xchg
mov
add
adc
jno
dec
jg
lds
sbb
rol
ret
add
icebp
retf
xchg
mov
pop
dec
call
pop
mov
mov
push
clc
popa
cmc
xchg
adc
pop
(bad)
jecxz
sbb
popf
and
adc
cld
shl
lods
sbb
cld
rcl
mov
adc
test
or
shl
pop
jmp
rcl
mov
adc
mov
xor
ret
daa
out
int
inc
xlat
rcr
or
adc
dec
inc
repz
mov
pop
xchg
xor
pop
(bad)
jecxz
pop
mov
xchg
ja
add
xchg
pop
or
adc
popf
call
int
stc
cld
out
popf
mov
jecxz
mov
xor
sahf
aam
cli
popa
adc
or
jecxz
hlt
lds
fbld
mov
or
mov
aad
and
xchg
leave
pop
aas
and
jge
clc
mov
push
and
push
(bad)
xchg
jns
clc
inc
add
neg
pop
sub
or
cld
add
popa
hlt
lds
sub
js
clc
inc
ins
xchg
add
pushf
xlat
xchg
leave
pop
sub
push
jl
or
clc
inc
add
call
push
sbb
jl
jg
clc
inc
test
lds
mov
(bad)
mov
cld
loope
addr16
ret
cld
rcl
inc
adc
inc
adc
stc
rcl
cld
inc
adc
cld
rcl
cmp
adc
cld
rcl
cld
rcl
cld
rcl
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
rcr
adc
mov
sub
cld
pop
or
jmp
fdivrp
pop
dec
test
and
xor
xchg
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
inc
jb
push
and
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
add
or
inc
xchg
loop
and
shl
std
loope
pop
fsub
adc
shl
std
loope
add
cmps
add
int3
inc
or
jmp
fdivrp
pop
or
jmp
mov
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
shl
inc
nop
pop
push
and
pop
push
and
fistp
data16
loopne
pop
fsub
adc
shl
std
loope
pop
fsub
adc
sti
sbb
xlat
cmp
movups
es
loope
pop
fsub
adc
shl
std
loope
pop
fsub
add
adc
xchg
aaa
adc
es
loope
pop
fsub
adc
shl
std
inc
mov
pusha
fild
mov
push
mov
outs
xchg
push
inc
adc
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
pop
xchg
(bad)
push
test
inc
(bad)
push
test
xchg
out
pop
fsub
adc
shl
std
loope
add
lds
fisubr
and
cs
xor
fsub
adc
shl
std
mov
jns
pop
sub
add
adc
das
ror
cmp
xor
fsub
adc
shl
std
xor
(bad)
daa
push
inc
(bad)
push
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
pop
xchg
(bad)
push
test
inc
(bad)
push
neg
les
mov
(bad)
mov
loop
and
shl
std
add
dec
fbld
movs
and
popa
push
idiv
rcl
into
hlt
xlat
(bad)
adc
ffreep
xchg
jp
mov
and
push
(bad)
mov
jb
inc
(bad)
and
cmp
imul
jge
sub
xor
fsub
adc
ffreep
push
or
xor
mov
cmps
and
(bad)
push
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
pop
xchg
(bad)
push
test
inc
(bad)
push
neg
ror
mov
inc
xlat
loop
and
shl
std
mov
jmp
repnz
or
inc
(bad)
push
neg
mov
jb
or
mov
xor
in
push
shl
cmp
and
out
jbe
adc
in
xor
fsub
adc
ffreep
shl
ja
les
div
mov
and
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
pop
xchg
(bad)
push
test
inc
(bad)
push
test
jge
adc
push
push
out
ffreep
xor
std
mov
fstp
outs
xor
mov
(bad)
push
test
dec
cmpxchg
add
cmc
cmps
mov
loop
test
and
dec
div
mov
xor
out
push
jno
mov
pop
in
pop
fsub
adc
xchg
cmc
(bad)
int
aaa
pop
xchg
mov
xor
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
pop
xchg
(bad)
push
test
inc
(bad)
push
test
inc
punpcklwd
aas
jo
es
loope
or
loopne
data16
das
jno
test
cmp
mov
cmps
jno
repnz
aam
jne
out
xchg
mov
xor
call
inc
stos
fdivr
pop
lods
xchg
push
mov
push
div
mov
xor
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
addr16
and
test
inc
(bad)
push
test
inc
sgdtd
int3
(bad)
xor
retf
dec
cmp
std
loope
add
pop
ficomp
dec
xchg
mov
xor
xor
cmc
cmps
cmp
and
dec
xchg
mov
xor
stos
jl
enter
xor
std
loope
or
fimul
and
dec
xchg
mov
xor
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
popa
pop
lds
mov
(bad)
and
dec
xchg
mov
xor
test
inc
punpcklwd
xchg
test
jecxz
pop
sbb
loop
push
into
push
mov
out
xchg
mov
xor
xor
cmc
cmps
cmp
and
dec
xchg
mov
xor
sbb
(bad)
mov
and
jno
sub
adc
test
inc
(bad)
push
test
inc
(bad)
and
dec
out
jno
test
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
mov
call
push
mov
popa
push
test
inc
(bad)
push
test
inc
(bad)
push
test
jbe
jmp
in
lds
dec
div
mov
xor
xor
cmc
cmps
cmp
and
dec
xchg
mov
and
cmp
and
ffreep
mov
dec
add
inc
xchg
(bad)
inc
mov
adc
test
inc
(bad)
push
test
inc
mov
push
mov
ins
pop
push
(bad)
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
add
mov
fisubr
and
add
mov
(bad)
push
test
inc
(bad)
push
test
ret
mul
(bad)
adc
shl
xchg
mov
xor
xor
aad
popa
mov
jne
out
xchg
mov
dec
rcl
xchg
and
ffreep
mov
mov
out
mov
and
test
inc
(bad)
and
pop
xchg
loope
bound
sub
out
es
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
adc
fs
and
sub
and
dec
xchg
mov
xor
test
pushf
into
rol
aas
dec
sbb
mul
xor
push
dec
push
push
fndisi(8087
jmp
out
xchg
hlt
sti
inc
xor
mov
(bad)
cmp
fstp
mov
xor
test
inc
(bad)
and
jl
lock
xchg
push
sar
sub
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
mov
(bad)
icebp
scas
in
dec
xor
bound
div
mov
xor
test
inc
jno
mov
fwait
xor
adc
addr16
mov
and
arpl
cmps
push
(bad)
not
and
pop
xchg
jne
mov
xchg
daa
in
fs
mov
add
addr16
test
inc
(bad)
push
test
xor
xor
adc
sub
push
out
loopne
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shr
mul
(bad)
loopne
retf
and
neg
lock
aam
cld
adc
mov
push
(bad)
loop
mov
inc
xchg
rol
adc
je
dec
out
and
pop
cmc
inc
dec
jae
out
mov
lock
fwait
clc
mov
jno
xlat
cmp
shl
(bad)
and
pop
xchg
in
xor
fisub
bound
es
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
push
jl
shl
shl
std
adc
pop
or
hlt
xchg
into
popa
push
test
movs
dec
add
sahf
stc
mov
cs
jb
add
arpl
out
arpl
ret
icebp
push
dec
test
mov
jns
shr
jno
std
lods
bound
add
xchg
(bad)
aad
div
retf
and
inc
lods
xor
outs
idiv
loop
add
shl
ss
loopne
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
icebp
inc
sub
js
fsub
mov
pop
loope
pop
fsub
adc
imul
das
ss
mov
jb
add
inc
mov
mov
out
jae
jecxz
xchg
out
stos
movs
cmps
sbb
xor
adc
sar
xchg
shl
call
icebp
jne
sub
and
pop
div
icebp
or
nop
jle
es
and
shl
std
xchg
inc
inc
dec
fs
mov
mov
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
loopne
adc
inc
nop
arpl
sbb
aaa
(bad)
adc
ffreep
cmp
inc
(bad)
push
mov
ja
xchg
(bad)
fist
xchg
test
jns
adc
mov
arpl
xchg
and
lock
pop
in
outs
int3
xor
ret
dec
loopne
and
repz
jle
and
ins
cmps
push
or
jmp
sbb
iret
loopne
pop
pop
and
call
std
inc
push
xchg
popa
bound
es
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
add
sahf
fisubr
(bad)
pop
xchg
rcr
adc
into
add
adc
daa
ss
clc
sbb
xor
dec
div
das
cmp
add
mov
mov
loop
shr
add
scas
shl
ss
push
mov
jno
push
push
lds
ffreep
jecxz
aad
hlt
pop
pop
(bad)
mov
mov
adc
ret
or
pop
inc
xchg
xor
fsub
adc
loopne
add
pop
xchg
mov
mov
mov
or
aaa
es
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
shl
adc
hlt
cmps
adc
jno
test
xor
jno
in
out
sbb
push
shr
or
bound
cmps
rol
jo
mov
loop
and
shl
out
xor
hlt
int3
xlat
in
inc
jmp
pop
popf
mov
adc
mov
aam
push
mov
push
pop
adc
mov
add
inc
sub
mov
and
popa
push
test
inc
lmsw
in
push
push
and
pop
fst
(bad)
jecxz
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
or
(bad)
jo
(bad)
(bad)
push
test
inc
punpcklwd
div
mov
cmp
mov
add
ret
xor
jl
cdq
test
loope
pop
fsub
adc
shl
std
loope
add
movs
addr16
push
cmp
std
loope
pop
fsub
adc
shl
std
loope
add
inc
cmps
adc
jno
out
cmp
pop
xor
in
cmp
inc
mov
and
test
inc
(bad)
add
in
(bad)
xchg
test
stos
lahf
xchg
jge
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
pop
bound
and
pusha
push
test
inc
(bad)
push
test
xor
jl
jns
out
test
aad
xor
and
inc
out
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
add
movs
addr16
push
cmp
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
fidiv
(bad)
sahf
cs
sti
add
sub
les
xchg
mov
xor
test
inc
cmovno
jmp
sbb
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
call
xchg
mov
xor
test
inc
(bad)
and
pop
div
inc
in
mov
stos
and
shl
std
loope
pop
fsub
adc
jmp
mov
mov
jbe
push
push
mov
lea
or
shl
std
loope
pop
pushf
mov
daa
lods
mov
cmps
out
add
(bad)
and
dec
xchg
mov
xor
test
sbb
mov
xor
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
arpl
fild
lock
and
test
inc
punpcklwd
mov
loopne
pop
fadd
and
in
xor
std
loope
pop
fsub
adc
mov
retf
cmc
lea
(bad)
out
inc
push
lea
movs
and
shl
std
loope
add
pop
add
push
out
jl
jmp
sbb
push
test
inc
(bad)
push
neg
mov
push
xchg
iret
mov
inc
(bad)
aam
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
in
xchg
and
daa
mov
adc
shl
sahf
add
addr16
jno
or
in
cmp
popa
sar
jb
xor
icebp
hlt
neg
and
loope
add
xlat
es
iret
in
sub
xchg
out
inc
inc
adc
xchg
movs
cmp
add
rcr
in
dec
(bad)
rcl
or
in
cmp
jno
or
in
sub
and
jnp
(bad)
dec
out
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
popa
imul
fnsave
fcomip
stc
retf
sbb
not
or
jmp
dec
mov
pop
inc
cmp
xlat
sub
jne
xor
std
adc
mov
std
inc
inc
adc
xchg
out
inc
inc
adc
xchg
xor
jmp
cmps
test
leave
popf
cmps
mov
dec
mov
pop
push
push
sub
not
or
jmp
sbb
or
clc
imul
loop
and
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
xor
pop
popa
sbb
sete
adc
xor
and
rol
adc
xchg
out
inc
inc
adc
xchg
out
inc
inc
adc
xchg
out
inc
(bad)
lea
adc
test
not
cld
test
and
stos
pusha
addr16
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
add
push
xchg
inc
sbb
mov
sti
jbe
add
in
test
ja
cmps
jne
add
in
loop
xlat
jo
mov
or
stos
push
mov
out
mov
in
sub
xchg
out
inc
iret
test
xchg
out
inc
fucomip
lea
mov
jmp
and
adc
mov
sbb
sti
jbe
add
adc
mov
movs
jo
jbe
xchg
jp
xor
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
and
loopne
xchg
xchg
add
inc
adc
jl
nop
cmp
mov
cmps
pop
(bad)
mov
in
xor
cmps
sub
popa
pmulhw
jbe
dec
mov
adc
xchg
ror
sbb
mov
rcl
jle
out
inc
adc
std
inc
fnstsw
lea
xchg
ror
hlt
outs
xor
cld
cmp
and
jl
pusha
cmp
xchg
add
sub
lock
xor
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
ret
or
out
mov
(bad)
push
test
inc
punpcklwd
inc
inc
lock
test
adc
xor
bound
add
xor
mov
and
adc
xchg
in
inc
sysexit
jle
adc
gs
lahf
dec
xor
mov
ss
jmp
add
movs
lock
push
test
inc
(bad)
push
neg
xchg
stos
xor
daa
int
ja
loop
and
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
sub
(bad)
dec
div
mov
and
test
inc
punpcklwd
mul
inc
sbb
xor
inc
and
out
add
jecxz
es
loope
push
jl
icebp
and
shl
push
loop
adc
xchg
out
inc
inc
mov
data16
add
xor
std
add
xlat
sbb
repnz
sub
test
mov
mov
adc
test
inc
(bad)
push
neg
mov
xor
retf
inc
push
add
es
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
cwde
mov
adc
fs
test
inc
(bad)
push
test
inc
mov
xchg
int3
es
jecxz
imul
add
xor
std
loope
pop
fsub
adc
lock
dec
mov
adc
(bad)
(bad)
or
jge
not
loop
and
shl
std
loope
pop
fsub
adc
push
mov
outs
fs
icebp
add
popa
push
test
inc
(bad)
push
test
add
mov
jp
enter
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
push
fcom
rcr
movs
add
jno
test
inc
(bad)
and
pop
xchg
mov
add
cmp
adc
xor
dec
(bad)
in
mov
loope
pop
fsub
adc
dec
(bad)
retf
or
cmp
aam
push
pop
shl
adc
shl
std
loope
add
stos
inc
mov
sahf
popa
push
imul
adc
fidivr
jmp
fs
test
mov
jno
test
xor
ins
adc
add
cmp
es
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
adc
inc
(bad)
push
test
xor
popa
push
idiv
mov
sub
lock
scas
mov
loope
std
call
es
loope
pop
fsub
adc
shl
std
loope
or
lahf
inc
cmp
std
loope
pop
fsub
adc
shl
std
loope
add
(bad)
in
dec
jnp
fisttp
and
dec
xchg
cmp
ror
mov
daa
mov
inc
push
rcr
add
test
inc
punpcklwd
pushaw
(bad)
(bad)
mov
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
push
in
clc
leave
nop
dec
jnp
xchg
aas
pusha
push
test
mov
xor
adc
fdivr
sub
xor
sar
shl
stos
je
outs
push
popa
les
es
loope
pop
fsub
adc
shl
std
loope
add
inc
in
push
xor
pop
fsub
adc
shl
std
loope
add
cmp
ret
pop
mov
add
push
div
shl
enter
fld
retf
inc
pop
xchg
mov
and
dec
(bad)
mov
xchg
xor
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
mov
movs
adc
movs
out
imul
mov
push
je
and
shl
std
mov
ins
push
cmc
mov
jp
(bad)
popa
and
ins
out
xor
adc
cmp
fisub
mov
xchg
(bad)
loop
and
shl
xlat
jge
dec
lods
inc
sbb
mov
xchg
and
jmp
mov
pop
and
push
sbb
in
call
jmp
pop
fsub
adc
(bad)
inc
lods
lock
les
xchg
xchg
xor
sbb
xchg
and
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
and
dec
xor
fstp
mov
pop
fsub
adc
mov
jl
(bad)
xor
and
add
cmc
xchg
dec
test
stos
add
jmp
nop
cmp
nop
dec
nop
mov
jne
ja
mov
emms
push
sahf
cdq
leave
stos
jle
inc
push
push
movs
xchg
addr16
xor
add
dec
div
ret
jb
and
hlt
addr16
shl
std
rcl
cli
enter
(bad)
cmp
mov
(bad)
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
shl
and
shl
std
xor
pop
(bad)
sub
fst
adc
pop
div
and
movs
mov
scas
xor
addr16
loopne
cmp
mov
nop
imul
push
sbb
mov
add
cli
aam
mov
add
jmp
add
jge
in
shr
mov
je
lea
mov
dec
mov
cli
lods
xor
cmp
mov
pop
fsub
adc
sbb
xor
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
jecxz
stos
out
pusha
push
xchg
fwait
shr
add
test
inc
jmp
add
sbb
add
imul
psraw
iret
pop
aam
ror
out
(bad)
sti
push
jecxz
out
hlt
bound
hlt
jne
mov
jbe
jecxz
daa
div
(bad)
mov
das
add
ins
xchg
add
punpcklwd
(bad)
rcl
mov
or
out
loop
and
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
add
and
cmps
or
xchg
dec
out
mov
pop
jno
neg
mov
and
sub
sti
push
sar
adc
popa
ror
mov
mov
cmp
sub
je
dec
test
sub
or
mov
test
test
inc
(bad)
push
neg
mov
add
imul
cdq
add
movs
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
jae
scas
push
daa
retf
lahf
lock
(bad)
(bad)
les
xchg
mov
xor
test
mov
mov
jmp
outs
mov
daa
pop
xchg
scas
mov
shl
(bad)
fsubr
je
dec
fs
xchg
mov
fdiv
and
add
dec
mov
enter
sub
pop
xchg
mov
xor
test
inc
lmsw
jae
out
adc
outs
test
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
jl
xchg
xor
xor
inc
ja
push
rcr
mov
pop
jno
test
inc
(bad)
push
neg
mov
jmp
add
xchg
daa
out
adc
xchg
add
pop
adc
dec
xchg
mov
and
push
pop
rcr
outs
sbb
aam
pop
xchg
mov
and
and
(bad)
movs
das
push
xor
std
cmc
pop
dec
test
retf
and
test
inc
(bad)
and
pop
xchg
xchg
pop
xchg
sub
mov
popa
adc
hlt
out
shl
es
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
and
adc
scas
mov
pusha
and
pop
xchg
mov
xor
test
inc
(bad)
push
test
push
xchg
dec
pusha
addr16
shl
sub
out
xchg
mov
xor
maxps
jne
aam
adc
ffreep
push
movs
lock
les
pop
xchg
mov
xor
fmul
push
dec
and
rol
mov
xchg
push
mov
(bad)
push
test
inc
(bad)
push
test
and
ror
mov
jbe
jecxz
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
popa
pop
ret
adc
mov
das
jno
test
inc
(bad)
push
test
inc
(bad)
and
cmp
shl
push
out
out
add
xor
test
and
jno
test
dec
mov
adc
ffreep
adc
add
lock
xor
in
mov
inc
ss
(bad)
push
pop
lock
push
test
inc
(bad)
push
test
inc
(bad)
and
dec
out
sar
fist
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
pop
xchg
(bad)
push
test
inc
(bad)
push
test
inc
(bad)
and
pop
pop
xchg
loope
imul
sbb
sbb
inc
(bad)
push
test
pop
jns
adc
aad
adc
ffreep
repz
daa
mov
dec
div
mov
xor
test
es
loope
or
fiadd
dec
and
push
test
inc
(bad)
push
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
pop
xchg
(bad)
push
test
inc
(bad)
push
test
xor
inc
and
or
push
xor
std
popa
adc
movs
mov
pop
jno
out
xchg
add
mov
movs
mov
and
rol
jmp
inc
(bad)
push
test
(bad)
sbb
xor
sub
mov
jg
(bad)
in
popa
push
test
inc
(bad)
push
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
pop
xchg
(bad)
push
test
inc
(bad)
push
test
pop
outs
add
dec
je
imul
mov
pop
mov
mov
mov
push
shl
or
cmps
fsub
adc
ffreep
ret
dec
iret
add
sub
imul
xor
popa
push
cmc
pushf
xlat
(bad)
and
std
jge
stc
in
pop
fsub
adc
imul
mov
xchg
mov
xor
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
pop
xchg
(bad)
push
test
inc
(bad)
push
test
or
push
daa
shl
adc
shl
std
loope
add
cld
xchg
cmpxchg
mov
jnp
xor
pop
fsub
adc
shl
std
loope
add
inc
call
test
test
(bad)
call
loope
pop
fsub
adc
sbb
shl
mov
div
mov
and
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
add
pop
xchg
(bad)
push
test
inc
(bad)
push
neg
add
add
ins
in
(bad)
adc
shl
std
loope
(bad)
push
leave
adc
inc
sbb
ds
push
jns
inc
or
mov
jns
shl
jb
mov
sub
leave
mov
int3
mov
test
ffreep
xor
std
loope
pop
fsub
adc
ffreep
rcr
div
mov
(bad)
push
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
jno
aam
pop
xchg
(bad)
push
test
inc
(bad)
and
dec
div
(bad)
xchg
mov
in
xor
fsub
adc
shl
std
inc
pop
sbb
sub
ret
ficomp
shr
add
cmp
pop
jge
int3
and
mov
int3
xor
mov
or
mov
fs
xchg
cli
cmp
std
loope
pop
fsub
adc
ffreep
and
and
shr
mov
test
inc
(bad)
push
test
jbe
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
popa
pop
mov
xlat
addr16
push
ret
and
int3
jns
aas
inc
shl
movs
out
loope
pop
or
lock
mov
das
jecxz
pop
fsub
adc
ffreep
inc
scas
aas
xchg
jp
lds
sub
jmp
ins
sbb
cmp
cmp
dec
pop
mov
dec
stos
xchg
std
scas
dec
adc
sub
pop
in
mov
cli
dec
cmps
aas
jecxz
pop
fsub
adc
shl
std
popa
inc
js
push
outs
pop
imul
movs
out
icebp
stos
pop
int3
jns
aas
inc
shl
mov
icebp
stos
pop
int3
pop
adc
imul
and
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
and
(bad)
(bad)
ins
(bad)
sub
cmp
sahf
jmp
jge
dec
cmp
sbb
std
loope
pop
fsub
adc
ffreep
and
inc
es
xor
lds
sub
enter
cld
adc
dec
pop
push
push
in
and
in
cmps
cli
call
popf
mov
(bad)
jp
out
jecxz
pop
fsub
adc
shl
std
loope
sbb
sub
mov
adc
jmp
sub
cmp
push
in
xor
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
sbb
das
fs
ss
sbb
mov
fstp
das
fs
ss
sbb
mov
stc
dec
aad
ffreep
xor
std
loope
pop
fsub
adc
shl
in
mov
in
test
or
inc
mov
push
jno
and
sub
lods
and
cmc
sbb
rcr
sub
sbb
mov
xchg
mov
pop
fsub
adc
shl
std
loope
pop
fsub
adc
(bad)
xor
loop
pop
cmc
das
fs
ss
sbb
mov
fstp
and
jbe
loop
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
push
loop
cwde
ror
jmp
cdq
jle
bound
cmps
stos
push
cmp
imul
jne
mov
mul
inc
mov
dec
sbb
mov
xor
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
data16
ret
repz
call
fcom
fdiv
(bad)
fld
push
mov
xor
jb
jo
jnp
sbb
sbb
jo
inc
hlt
lds
jnp
push
in
xor
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
pushf
mov
xchg
frstor
shr
test
mov
stos
test
(bad)
sub
xchg
aad
xchg
shr
add
fisubr
ja
xchg
add
pop
jns
mov
(bad)
loop
and
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cmp
ret
fwait
jmp
lock
push
xchg
int
movs
pop
sti
cmp
inc
dec
and
sti
js
push
mov
or
cmps
add
pop
sbb
por
in
lds
(bad)
and
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
push
sbb
jno
or
mov
add
and
cs
je
loope
popf
loopne
mov
out
inc
xchg
div
(bad)
cld
idiv
outs
imul
add
out
pop
les
xlat
and
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
add
xor
mov
not
mov
mov
xor
mov
in
cmp
and
sub
loop
in
clc
push
pop
xchg
fwait
in
mov
and
jo
dec
cmp
stc
xor
nop
xor
lea
fsubr
cmps
sub
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
xor
cmps
mov
jns
outs
shr
xchg
xchg
(bad)
mov
in
aaa
fadd
mov
jo
adc
dec
xor
les
adc
cmp
aas
aaa
fimul
add
in
jo
in
push
lds
push
xor
imul
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
jno
push
mov
jnp
movs
dec
test
push
adc
jle
push
lods
push
inc
xor
pop
sbb
xchg
fdiv
loope
cmps
(bad)
fsubr
lods
inc
adc
xchg
xor
or
data16
add
es
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
jecxz
sbb
paddsw
imul
sbb
and
jle
cwde
xor
xchg
and
sbb
or
(bad)
mov
in
lea
mov
jae
adc
jno
push
out
sbb
test
fild
xchg
inc
mov
jecxz
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
out
or
out
cwde
xor
(bad)
out
fs
jne
inc
mov
inc
in
lock
repz
pop
cmps
shl
add
push
mov
cdq
xchg
mov
nop
(bad)
scas
mov
jno
mov
loopne
out
sub
mov
adc
inc
imul
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
and
sbb
popa
rcl
push
push
mov
es
loope
pop
fsub
adc
cmp
push
inc
fucom
adc
shl
std
shl
xchg
test
dec
xlat
xor
std
loope
pop
fsub
adc
cdq
inc
jo
dec
jp
xlat
push
add
das
std
push
push
jns
movs
dec
ret
mov
jp
pop
loopne
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
inc
inc
mov
mov
loopne
pop
fsub
adc
shl
std
loope
pop
fsub
adc
xchg
inc
push
pop
sti
(bad)
addr16
test
sbb
retf
inc
daa
(bad)
adc
shl
std
loope
pop
fsub
adc
rol
dec
xchg
and
or
adc
out
loopne
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
xor
inc
call
in
xor
fsub
adc
shl
std
and
(bad)
popf
dec
out
dec
push
mov
in
dec
aad
pop
or
or
test
in
and
(bad)
sti
push
(bad)
loopne
pop
fsub
adc
add
stos
sub
adc
mov
xor
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
rcl
xor
mov
xlat
mov
mov
jle
dec
loop
adc
popf
pop
sbb
mov
adc
xchg
xchg
mov
scas
jmp
pop
scas
push
adc
and
stos
aas
jge
lods
and
hlt
out
std
dec
xor
test
cdq
mov
es
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
mov
cmp
ficom
push
mov
fist
dec
push
adc
mov
or
int
pop
or
push
aas
movs
sub
mov
dec
(bad)
repnz
imul
in
jnp
dec
movs
inc
sbb
aad
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
ret
sub
mov
pop
mov
retf
sub
xchg
mov
adc
ffreep
ret
pop
stos
push
nop
add
inc
push
mov
stos
jo
dec
mov
dec
sbb
push
dec
ret
ins
pop
stos
or
hlt
pop
je
enter
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
inc
mov
mov
nop
repz
(bad)
loopne
pop
fsub
adc
shl
in
shl
je
add
xchg
sub
fucom
xor
fsub
adc
ffreep
push
xchg
jo
pushf
xor
loop
and
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
push
push
imul
outs
xchg
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
mov
inc
mov
cmp
cmp
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
shl
push
mov
aaa
xor
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
ffreep
jecxz
push
xor
stc
sti
cmp
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
and
out
ret
wrmsr
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
ffreep
xor
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
fsub
adc
shl
std
loope
pop
cld
rcl
sub
adc
cld
mov
adc
cld
xchg
adc
pop
cld
rcl
xchg
rcl
cld
shl
rcl
cld
rcl
cld
rcl
cld
rcl
cld
rcl
lock
cld
xor
pop
cld
int
cld
test
sbb
sub
adc
xlat
rol
cld
adc
pop
pop
retf
test
pop
daa
fdivr
and
and
push
mov
mov
mov
dec
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
mov
sahf
pop
dec
mov
pop
dec
mov
sahf
dec
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
hlt
and
imul
adc
cld
rcr
or
adc
shl
cld
xor
pop
cld
int
int3
test
sbb
pop
jmp
cld
adc
pop
sub
adc
test
or
sbb
adc
lock
lock
cld
xor
pop
or
adc
test
sbb
cmp
adc
xlat
shl
cld
rcr
sub
adc
lock
cld
ror
daa
fsubr
xor
nop
icebp
and
aas
jge
mov
mov
mov
dec
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
cmp
mov
(bad)
pop
pop
mov
pop
dec
mov
dec
cmp
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
hlt
and
jnp
shl
cld
rcr
cld
int
cld
test
pop
pop
or
adc
test
sbb
pop
ficom
in
xlat
shl
cld
and
pop
sub
add
out
rcl
cld
adc
pop
sbb
adc
test
add
cld
rcr
in
int
sbb
shl
cld
adc
pop
sub
adc
test
pop
pop
in
int
or
shl
cld
xchg
pop
pop
lods
std
adc
loope
xchg
ins
mov
dec
js
mov
mov
mov
sahf
dec
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
pop
dec
mov
jl
mov
jl
jae
jl
xor
sub
ret
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
hlt
xor
mov
pop
cld
rcr
pop
cld
int
sti
test
sbb
or
adc
test
sbb
or
adc
test
sbb
or
adc
shl
cld
rcr
cld
in
adc
lock
lock
cld
rcr
pop
in
int
sub
rol
cld
rcr
in
int
sti
test
pop
pop
int3
fst
cmp
shl
cld
xchg
pop
pop
lods
std
adc
icebp
jae
ins
mov
dec
js
mov
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
pop
pop
mov
pushf
pop
ret
into
sbb
mov
cmp
dec
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
cmp
push
mov
pop
cld
rcr
pop
or
adc
test
pop
pop
or
adc
test
sbb
or
adc
test
pop
pop
cld
int
or
shl
cld
xor
pop
or
adc
lock
lock
cld
rcr
in
int
sub
rol
cld
loope
pop
int3
int
sbb
shl
cld
xchg
pop
pop
mov
rcl
xchg
sysret
pushf
std
adc
icebp
inc
movs
jl
mov
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
pop
dec
mov
shl
cmp
mov
pop
mov
dec
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
cmp
push
sar
rol
cld
rcr
pop
in
int
sbb
rcl
cld
rcr
pop
or
adc
test
sbb
or
adc
lock
cld
rcr
in
int
sbb
shl
cld
and
pop
or
adc
test
xor
cld
rcr
(bad)
adc
loopne
and
cld
icebp
pop
pop
int3
int
cmp
shl
cld
icebp
pop
pop
mov
shl
cld
icebp
aas
pop
pushf
std
add
icebp
jae
jl
(bad)
dec
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
sub
mov
adc
or
loope
sub
mov
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
cmp
ds
xor
in
xor
pop
cld
int
sbb
rcl
cld
xor
pop
or
adc
test
sbb
or
adc
test
pop
pop
fmul
adc
shl
cld
xor
pop
sbb
adc
test
jae
cld
icebp
(bad)
int3
int
cmp
shl
cld
icebp
sysret
int3
int
sub
rol
cld
rcr
pop
in
fst
cmp
shl
cld
loope
pop
int3
std
adc
rol
lods
mov
dec
cwde
xchg
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
pop
imul
adc
sbb
mov
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
cmp
into
out
lock
in
xor
pop
in
int
or
shl
in
rcr
pop
cld
int
fdiv
rol
cld
rcr
in
int
sbb
rol
cld
rcr
pop
cld
int
sbb
rcl
cld
xor
pop
cld
in
adc
lock
lock
or
cmp
shl
cld
icebp
pop
pop
int3
int
sub
rcl
cld
loope
pop
in
int
cmp
shl
cld
or
dec
mov
inc
lahf
or
jge
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
pop
pop
mov
jge
and
shr
cmp
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
cmp
fiadd
fwait
lock
in
xor
pop
cld
int
cld
test
pop
pop
in
int
in
test
pop
pop
cld
int
sbb
rol
pop
cld
rcr
pop
fmul
adc
lock
cld
xor
pop
or
adc
lock
lock
xchg
aas
pop
int3
int
cmp
shl
cld
rcr
pop
fmul
adc
loopne
xor
in
icebp
pop
pop
or
adc
lock
cld
icebp
sysret
mov
shl
movs
ins
mov
or
dec
dec
mov
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
mov
ins
dec
and
mov
int3
mov
mov
sahf
sub
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
cmp
out
aaa
fwait
lock
in
rcr
pop
sbb
adc
shl
cld
loope
pop
in
int
or
rcl
cld
rcr
sbb
add
lock
cld
rcr
pop
fmul
adc
shl
cld
xor
pop
sbb
adc
test
inc
pop
cld
xchg
pop
pop
cld
int
or
rol
cld
rcr
pop
cld
int
sbb
rol
cld
rcr
pop
sbb
adc
lock
cld
icebp
pop
pop
int3
in
adc
mov
xchg
jg
cs
dec
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
mov
popf
dec
and
mov
int3
mov
mov
sahf
sub
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
cmp
out
daa
fwait
lock
in
loope
pop
sub
adc
test
pop
pop
(bad)
adc
shl
cld
xor
pop
cld
int
sti
test
pop
pop
fmul
adc
shl
cld
rcr
or
xor
test
push
pop
cld
sbb
cmp
shl
in
loope
pop
fmul
adc
lock
cld
rcr
pop
cld
int
sub
rol
cld
sbb
cmp
mov
clc
push
ins
dec
js
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
dec
pop
mov
mov
mov
sahf
dec
dec
mov
sahf
dec
pop
mov
mov
mov
rcl
sub
dec
mov
mov
mov
sahf
dec
pop
mov
sahf
pop
dec
mov
sahf
dec
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
cmp
(bad)
push
stos
lock
cld
rcr
pop
sub
adc
lock
cld
loope
pop
in
int
sbb
rol
cld
rcr
pop
cld
int
or
rol
cld
rcr
pop
in
int
sbb
shl
cld
xor
pop
or
adc
lock
pop
lock
sbb
sub
shl
cld
rcr
pop
in
int
sbb
rol
cld
loope
pop
in
int
sbb
shl
cld
loope
pop
int3
in
adc
mov
mov
fdivr
ins
pop
push
mov
dec
pop
mov
pop
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
pop
dec
ret
mov
sahf
dec
dec
mov
dec
dec
mov
pop
pop
mov
sahf
dec
dec
mov
mov
xchg
dec
fisttp
jb
pop
lea
mov
dec
mov
mov
sahf
dec
dec
mov
mov
(bad)
pop
dec
mov
dec
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
repz
sahf
push
stos
lock
cld
rcr
pop
sbb
adc
lock
cld
rcr
pop
in
int
sub
rol
cld
rcr
pop
in
int
sub
rol
cld
rcr
pop
in
int
sbb
shl
cld
xor
pop
cld
int
pop
lock
lock
xchg
pop
pop
in
int
sub
shl
cld
rcr
pop
fmul
adc
lock
cld
rcr
pop
fmul
adc
lock
cld
rcr
int3
in
adc
nop
loope
test
pop
push
mov
dec
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
dec
cmp
mov
sahf
ins
pop
mov
mov
mov
mov
mov
sbb
jecxz
out
(bad)
lock
pop
xor
pop
mov
dec
dec
ret
mov
mov
mov
mov
scas
ins
dec
cmp
pop
mov
pop
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
repz
scas
ja
lock
in
rcr
pop
or
adc
lock
cld
loope
pop
in
int
sbb
rol
cld
rcr
pop
in
int
sub
rcl
cld
rcr
pop
fmul
add
lock
cld
xor
pop
or
adc
lock
dec
loopne
and
cld
icebp
(bad)
int3
int
sub
shl
cld
rcr
fmul
adc
lock
cld
rcr
pop
fmul
adc
lock
cld
rcr
pop
in
fst
sub
mov
dec
js
mov
sahf
dec
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
pop
mov
(bad)
pop
fidiv
cmp
dec
cmps
fwait
mov
fsub
outs
or
clc
push
push
in
mov
ins
dec
jae
sbb
mov
xchg
xlat
jnp
sbb
adc
sub
inc
sahf
mov
mov
mov
ins
or
(bad)
scas
mov
mov
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
repz
add
cld
loope
pop
sbb
adc
shl
cld
loope
pop
in
int
or
rcl
cld
rcr
pop
fmul
adc
lock
cld
loope
pop
(bad)
add
lock
pop
cld
rcr
or
adc
lock
lock
cld
icebp
sysret
int3
int
cmp
shl
cld
rcr
pop
fmul
adc
lock
in
rcr
pop
in
int
sbb
rol
cld
rcr
pop
fsubr
adc
rol
fsub
dec
js
mov
sahf
dec
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
ret
mov
(bad)
aad
sub
lock
stc
(bad)
into
cs
mov
in
clc
inc
dec
lods
jnp
movs
out
(bad)
shr
add
cld
cmp
cmp
movzx
fs
xor
mov
shl
fwait
mov
pop
and
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
pop
cmp
mov
add
cld
loope
pop
sbb
adc
shl
cld
loope
pop
fmul
adc
test
pop
pop
in
int
sbb
rol
cld
rcr
pop
fmul
adc
lock
in
rcr
pop
or
adc
lock
dec
lock
cld
ror
pop
fmul
adc
lock
cld
rcr
pop
in
int
or
rcl
cld
xor
pop
cld
int
sbb
rol
cld
rcr
(bad)
adc
rol
add
mov
dec
push
mov
dec
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
dec
mov
ficomp
cld
mov
adc
rcl
cld
adc
pop
in
ins
push
cmp
jo
ror
lock
fwait
pusha
xor
add
mov
xchg
pusha
push
push
cmps
cmp
std
adc
shl
cld
xor
pop
cld
in
adc
lock
push
repz
js
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
cmp
mov
repz
dec
xchg
mov
cld
rcr
pop
or
adc
test
pop
pop
in
int
cld
test
pop
pop
in
int
sub
rcl
cld
ror
pop
in
int
sbb
shl
cld
xor
pop
cld
int
pop
lock
lock
cld
ror
pop
int3
int
sub
shl
cld
loope
pop
int3
int
sbb
rol
cld
rcr
cld
int
sbb
shl
cld
rcr
pop
in
int
sbb
shl
mov
jge
push
mov
dec
dec
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
sahf
dec
dec
mov
dec
dec
mov
dec
pop
ret
out
jl
jae
into
pop
mov
int
cmp
shl
cld
sbb
sub
shl
cld
icebp
pop
pop
cld
int
or
shl
cld
rcr
pop
fmul
adc
lock
cld
icebp
pop
pop
in
int
sbb
rol
cld
rcr
or
add
shl
fsubr
or
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
cmp
mov
repz
fwait
lock
cld
rcr
pop
cld
int
cld
test
pop
pop
in
int
in
test
pop
pop
fmul
adc
lock
cld
rcr
pop
in
int
sbb
shl
cld
xor
pop
cld
int
div
rcl
lock
cld
rcr
(bad)
adc
loopne
and
cld
or
sub
shl
cld
loope
pop
cld
int
sub
rol
cld
loope
pop
cld
int
sbb
shl
in
xchg
pop
enter
push
mov
dec
dec
mov
dec
pop
mov
dec
dec
mov
sahf
dec
pop
mov
dec
pop
mov
dec
pop
mov
sahf
pop
dec
mov
out
jl
jecxz
dec
mov
xor
adc
lock
cld
icebp
pop
pop
int3
int
cmp
shl
cld
rcr
pop
fmul
adc
lock
cld
icebp
pop
pop
int3
int
dec
loopne
inc
pop
cld
rcr
pop
in
int
sbb
rol
cld
xor
pop
cld
int
or
shl
sbb
dec
mov
pop
pop
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
dec
cmp
(bad)
in
repz
mov
shl
cld
rcr
or
adc
test
sbb
sub
add
test
sbb
cld
int
or
rcl
in
loope
pop
in
int
or
rcl
cld
and
pop
or
adc
test
xor
cld
loope
pop
(bad)
adc
lock
pop
cld
rcr
pop
in
int
sbb
rol
cld
rcr
pop
cld
int
sbb
shl
cld
rcr
in
int
sbb
shl
int3
mov
dec
js
(bad)
sub
mov
sub
mov
dec
pop
mov
pop
pop
mov
dec
pop
mov
sahf
dec
cmp
(bad)
pop
pop
mov
sub
ret
sahf
sub
mov
dec
push
inc
push
rcr
pop
fmul
adc
lock
cld
loope
pop
fmul
adc
lock
cld
ror
pop
int3
int
sbb
rol
cld
loope
pop
mov
shl
cld
rcr
pop
in
int
or
rcl
cld
xor
pop
or
adc
test
popf
push
rcr
dec
dec
mov
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
ret
mov
repz
cmps
stos
lock
cld
rcr
pop
sbb
adc
test
sbb
sub
add
test
pop
pop
or
adc
test
pop
pop
in
int
sub
rcl
pop
cld
rcr
or
adc
lock
cmp
shl
cld
icebp
pop
pop
in
int
sub
rol
in
rcr
pop
in
int
sbb
rcl
pop
cld
rcr
sbb
add
lock
cld
rcr
pop
fmul
adc
lock
mov
popf
cmp
sub
sahf
cmp
mov
pop
dec
mov
pop
pop
mov
dec
pop
mov
sahf
dec
cmp
out
dec
dec
jecxz
dec
sub
mov
pop
cld
icebp
pop
pop
in
int
sub
rcl
cld
loope
pop
fmul
adc
lock
cld
rcr
pop
fmul
adc
lock
pop
in
rcr
pop
mov
rol
cld
rcr
pop
cld
int
cld
test
sbb
or
adc
test
test
adc
pop
sub
mov
pop
dec
mov
pop
pop
mov
pop
pop
mov
pop
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
pop
cmp
push
cmps
fdiv
shl
cld
xor
pop
cld
int
cld
test
pop
pop
cld
int
or
shl
in
rcr
pop
in
int
sbb
rol
cld
loope
pop
in
int
sbb
shl
cld
rcr
sbb
add
lock
cmp
shl
cld
loope
pop
in
int
sub
rol
cld
rcr
pop
fmul
adc
lock
cld
rcr
pop
sub
adc
lock
cld
rcr
pop
fmul
adc
lock
mov
lods
cmp
sub
fisubr
mov
pop
pop
mov
mov
mov
mov
ret
out
pop
pop
mov
dec
or
sti
test
pop
pop
in
int
sbb
rol
pop
cld
loope
pop
in
int
sbb
rcl
cld
rcr
pop
in
int
sub
rol
pop
cld
loope
pop
mov
shl
cld
icebp
pop
pop
cld
int
sti
test
sbb
or
adc
test
mov
cli
xchg
pop
and
test
mov
pop
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
dec
sub
mov
repz
push
xlat
int3
lock
cld
rcr
cld
int
or
rol
cld
adc
pop
sub
adc
test
sbb
sub
adc
test
pop
pop
fmul
adc
shl
cld
xor
pop
or
add
lock
lock
cld
icebp
sysret
in
fst
sub
shl
cld
rcr
in
int
or
rcl
in
rcr
pop
sbb
adc
lock
cld
ror
int3
fst
cmp
shl
inc
fcom
sub
sub
out
pop
dec
ret
mov
mov
mov
pop
dec
mov
pop
sub
scas
sub
mov
lahf
sbb
pop
cmp
adc
loopne
and
cld
rcr
pop
fmul
adc
lock
cld
rcr
pop
cld
int
sub
shl
cld
loope
pop
in
int
sub
rol
pop
cld
xor
pop
fmul
adc
lock
cld
rcr
pop
cld
int
in
test
sbb
cld
int
in
test
pop
pop
fmul
adc
and
mov
(bad)
pop
cmp
mov
mov
sahf
pop
pop
mov
mov
mov
repz
push
(bad)
retf
lock
cld
xor
pop
cld
int
or
rol
cld
and
pop
sbb
adc
test
pop
pop
sbb
adc
test
pop
pop
in
int
sub
rol
pop
cld
rcr
sbb
adc
not
adc
lock
cld
loope
pop
in
int
sub
shl
cld
rcr
pop
in
int
cld
test
pop
pop
sub
adc
lock
cld
ror
pop
int3
int
cmp
shl
in
xchg
pop
dec
dec
pop
pop
js
lahf
sub
mov
out
dec
pop
ror
cmp
mov
pop
dec
ret
(bad)
pop
sub
pop
fild
cld
and
pop
fmul
adc
lock
cld
icebp
pop
pop
fmul
adc
lock
cld
loope
pop
in
int
sub
rol
cld
loope
pop
cld
int
sub
rcl
pop
cld
and
pop
in
int
sbb
rol
cld
icebp
pop
pop
cld
int
cld
test
sbb
cld
int
in
test
pop
pop
in
int
retf
test
lahf
clc
lds
cwde
mov
pop
sbb
mov
ret
mov
sahf
dec
dec
mov
mov
mov
mov
repz
xlat
mov
cld
and
pop
cld
int
or
shl
cld
rcr
cld
int
fdiv
rol
cld
rcr
pop
or
adc
shl
cld
rcr
pop
in
int
sbb
shl
cld
xor
pop
sbb
adc
test
xor
cld
rcr
pop
(bad)
adc
lock
cld
rcr
(bad)
adc
lock
cld
rcr
pop
sub
adc
lock
cld
icebp
sysret
fmul
adc
lock
cld
sbb
js
(bad)
sub
mov
(bad)
pop
pop
ret
mov
mov
mov
dec
dec
add
cmp
add
shl
cld
ror
fmul
adc
lock
cld
icebp
pop
pop
in
int
sbb
rcl
cld
rcr
pop
cld
int
sub
rol
cld
rcr
in
int
sub
rcl
pop
cld
and
pop
fmul
adc
rcl
icebp
pop
pop
in
int
or
shl
cld
xor
pop
cld
int
or
shl
cld
rcr
pop
or
adc
not
ret
pop
cld
and
mov
loope
pop
dec
jae
cmp
mov
pop
cmp
(bad)
pop
dec
mov
mov
mov
repz
push
idiv
cld
and
pop
or
adc
test
pop
pop
in
int
fdiv
rol
cld
rcr
cld
int
sti
test
sbb
in
fst
sbb
shl
cld
xor
pop
sbb
adc
test
add
cld
rcr
pop
mov
rcl
rcr
pop
cld
int
or
shl
in
rcr
or
adc
lock
cld
rcr
pop
in
int
sbb
shl
es
xchg
(bad)
or
call
mov
dec
dec
repz
pop
or
ficomp
out
sbb
aad
fiadd
int
imul
add
cld
rcr
pop
in
int
sbb
shl
cld
rcr
pop
cld
int
sbb
rol
cld
rcr
pop
fmul
adc
test
pop
pop
cld
int
sbb
rcl
in
rcr
fmul
adc
lock
pop
cld
loope
pop
cld
int
cld
test
sbb
or
adc
test
sbb
or
adc
lock
cld
and
pop
or
adc
not
cmp
mov
dec
dec
mov
pop
pop
mov
dec
cmp
jle
mov
cld
adc
pop
cld
int
or
rcl
pop
cld
rcr
pop
cld
int
or
shl
cld
xor
pop
sbb
adc
shl
in
rcr
pop
cld
int
or
shl
cld
xor
pop
or
adc
lock
lock
cld
ror
pop
int3
int
sub
shl
in
loope
pop
cld
int
sti
test
pop
pop
sbb
adc
lock
cld
loope
pop
in
int
sbb
shl
push
cld
xchg
outs
or
mov
pop
mov
mov
pop
dec
repz
pop
or
out
int
ret
pop
cld
xor
pop
fsubr
adc
shl
cld
rcr
pop
in
int
sbb
shl
cld
rcr
cld
int
sbb
rol
cld
rcr
pop
in
int
jmp
rol
pop
cld
loope
pop
cld
int
or
shl
cld
rcr
in
int
sub
shl
pop
cld
loope
pop
in
int
or
shl
cld
xor
pop
or
adc
test
sbb
or
adc
test
sbb
or
adc
test
outs
or
(bad)
ins
or
mov
sahf
dec
cmp
jle
mov
in
xor
pop
cld
int
in
test
pop
pop
cld
int
jmp
rcl
cld
xor
pop
sbb
adc
test
pop
pop
or
adc
test
sbb
dec
retf
test
add
cld
rcr
pop
fmul
adc
lock
cld
icebp
pop
pop
or
adc
lock
cld
rcr
sub
adc
lock
cld
sbb
sbb
shl
push
cld
xchg
outs
or
mov
cmp
mov
in
dec
ret
ficomp
sahf
pop
sub
out
nop
jnp
rol
cld
xchg
sysret
pushf
in
adc
shl
cld
rcr
pop
in
int
sbb
rcl
cld
rcr
pop
in
int
sbb
rcl
pop
cld
loope
pop
in
int
fcomi
rcl
cld
rcr
pop
cld
int
cld
test
sbb
cld
int
sbb
rol
pop
cld
rcr
pop
in
int
or
shl
cld
xor
pop
or
adc
test
pop
pop
or
adc
test
sbb
or
adc
mov
enter
sbb
out
pushf
sbb
mov
mov
mov
repz
(bad)
mov
fdiv
sbb
cld
int
cld
test
pop
pop
cld
int
cld
test
sbb
or
adc
test
pop
pop
sub
adc
test
sbb
cmp
adc
lock
lock
cld
icebp
pop
pop
in
fst
cmp
shl
cld
icebp
pop
pop
cld
int
fdiv
rol
cld
loope
pop
(bad)
adc
lock
cld
icebp
pop
pop
fmul
adc
loopne
xor
cld
xchg
dec
fnstcw
out
cmp
mov
ficomp
push
pop
xchg
or
adc
loopne
and
cld
mov
pop
pushf
int
dec
loopne
and
cld
loope
pop
in
int
sub
rol
cld
loope
pop
in
int
sbb
rol
cld
rcr
pop
fmul
adc
lock
in
rcr
cld
int
sbb
shl
pop
cld
loope
pop
in
int
sbb
shl
cld
loope
pop
or
adc
test
sbb
sub
adc
test
pop
pop
or
adc
not
ret
pop
cld
adc
pop
cld
int
or
shl
in
and
pop
in
int
fcmovbe
push
and
pop
mov
pop
pop
ror
in
repz
imul
and
pop
or
adc
test
pop
pop
in
int
or
shl
cld
xor
pop
cld
std
adc
rol
pop
cld
xor
pop
cld
int
cld
test
sbb
or
adc
lock
cmp
shl
cld
rcr
pop
in
int
sbb
shl
cld
icebp
(bad)
cld
int
in
not
jecxz
cld
rcr
pop
in
int
sbb
rol
cld
rcr
pop
int3
int
sub
shl
cld
mov
std
test
out
pop
mov
ret
out
dec
dec
jae
ins
xor
lea
fstp
or
shl
cld
inc
pop
pop
pushf
int
sub
rol
cld
rcr
pop
in
int
sbb
rol
cld
rcr
pop
in
int
sbb
rol
cld
rcr
pop
in
int
sbb
shl
cld
xor
pop
cld
int
sti
test
pop
pop
cld
int
sbb
rol
cld
rcr
pop
or
adc
shl
cld
adc
pop
sub
adc
test
pop
pop
or
adc
test
sbb
or
adc
shl
cld
sar
sub
and
dec
fimul
arpl
pop
dec
ret
mov
mov
repz
push
(bad)
lods
lock
cld
and
pop
or
adc
test
sbb
sbb
adc
test
cmp
or
adc
xlat
shl
cld
xor
pop
or
adc
test
or
sbb
adc
lock
cmp
shl
cld
rcr
pop
fmul
adc
lock
in
icebp
pop
pop
cld
int
fdiv
shl
pop
cld
rcr
pop
fmul
adc
lock
cld
rcr
pop
int3
int
cmp
shl
in
xchg
lahf
stc
sub
fisttp
out
sbb
ret
out
dec
pop
jecxz
dec
imul
xor
pop
cld
mov
adc
lock
cld
rcr
pop
in
int
sbb
rol
cld
rcr
pop
fmul
adc
lock
cld
rcr
pop
in
int
sbb
shl
cld
xor
pop
or
adc
test
pop
pop
in
int
sbb
rol
cld
loope
pop
sbb
add
shl
cld
and
pop
sbb
adc
test
sbb
sbb
adc
test
sbb
or
adc
test
push
cmp
dec
jl
ret
(bad)
cmp
mov
mov
mov
repz
imul
adc
pop
cld
int
in
test
sbb
sub
adc
test
sbb
cld
in
adc
shl
cld
xor
pop
cld
int
or
shl
cld
adc
pop
sbb
adc
test
push
pop
cld
cmp
cmp
rcl
sbb
fdiv
rol
cld
loope
pop
in
int
or
rol
cld
ror
pop
mov
rcl
sbb
mov
ret
out
pop
dec
repz
sub
mov
pop
lods
call
pop
pop
fmul
adc
lock
cld
rcr
pop
fmul
adc
lock
cld
rcr
pop
in
int
sbb
shl
cld
rcr
pop
in
int
or
rol
cld
rcr
in
int
cld
test
pop
pop
in
int
sbb
shl
pop
cld
loope
pop
or
adc
test
sbb
cld
int
cld
not
ret
pop
cld
adc
pop
sub
adc
shl
cld
and
pop
sub
adc
test
or
mov
mov
dec
mov
mov
repz
out
lock
fadd
pop
pop
cld
int
cld
test
pop
pop
cld
int
cld
test
pop
pop
cld
int
or
rcl
cld
xor
pop
cld
int
or
rol
daa
cld
adc
pop
sub
adc
test
and
cld
icebp
aas
pop
mov
rcl
icebp
pop
pop
fmul
xor
not
repz
cld
loope
pop
in
int
or
rol
cld
rcr
pop
int3
fst
cmp
shl
in
xchg
(bad)
clc
cmp
out
jl
mov
sbb
ret
out
pop
pop
repz
dec
or
into
in
imul
pop
pop
fmul
adc
lock
cld
rcr
pop
in
int
sbb
shl
cld
loope
pop
in
int
or
rol
cld
loope
pop
in
int
sbb
rol
cld
rcr
in
int
or
rol
cld
rcr
pop
fmul
adc
loopne
add
cld
rcr
pop
or
adc
test
sbb
or
adc
test
sbb
sub
adc
test
sbb
sub
adc
test
dec
call
ret
mov
mov
mov
mov
mov
repz
cs
lock
in
xor
pop
or
adc
test
sbb
or
adc
test
sbb
or
adc
lock
cld
xor
pop
or
adc
out
shl
cld
adc
pop
sub
adc
test
xor
cld
loope
pop
mov
shl
cld
loope
pop
cld
int
in
test
pop
pop
or
adc
lock
cld
rcr
pop
(bad)
adc
rol
mov
call
xor
pop
mov
ret
out
dec
pop
jecxz
dec
or
fdivrp
lods
xchg
xchg
jecxz
cld
sbb
sbb
shl
cld
loope
pop
in
int
sbb
rol
cld
rcr
pop
int3
in
adc
loopne
xor
cld
icebp
sysret
mov
rol
cld
rcr
pop
in
int
or
rcl
pop
cld
and
pop
cld
int
sub
rol
cld
rcr
pop
int3
lea
jmp
rol
cld
shr
in
int
fdiv
shl
cld
rcr
cld
int
cld
test
sbb
sbb
adc
test
mov
push
mov
sub
mov
dec
pop
ret
dec
mov
repnz
push
stos
lock
cld
xor
pop
in
int
cld
test
sbb
cld
int
or
shl
cld
rcr
cld
int
or
rcl
cld
xor
pop
sub
adc
test
sbb
or
adc
lock
lock
in
sbb
cmp
shl
cld
rcr
pop
or
adc
test
pop
pop
sbb
adc
lock
cld
xchg
sysret
int3
int
pop
lock
mov
call
xor
pop
mov
ret
(bad)
pop
pop
ror
in
nop
mov
retf
cmp
rcl
pop
pushf
int
sbb
shl
cld
loope
pop
in
int
sbb
rol
cld
loope
pop
in
int
or
xchg
ret
xor
cld
int
sub
rcl
cld
rcr
pop
fmul
adc
shl
in
add
pop
cld
int
sbb
rol
cld
ror
daa
sub
adc
xor
daa
out
movs
pop
pop
pop
retf
test
pop
pop
in
int
or
shl
cld
and
pop
sbb
adc
test
dec
pop
pushf
sub
call
mov
dec
dec
mov
dec
dec
mov
mov
repnz
adc
cld
rcr
sbb
adc
test
sbb
in
int
or
shl
cld
rcr
cld
int
cld
test
sbb
or
adc
lock
pop
cld
xor
pop
or
adc
test
and
cld
sbb
sub
shl
cld
rcr
pop
or
adc
test
pop
pop
sbb
add
lock
cld
icebp
sysret
mov
shl
cld
inc
outs
fsubr
or
mov
ret
(bad)
pop
dec
ror
lods
add
push
xchg
sbb
shl
pop
cld
inc
pop
pop
ins
fst
imul
and
cld
icebp
sysret
mov
shl
cld
loope
push
in
int
sbb
jmp
int
sbb
rol
cld
loope
pop
cld
int
sub
rcl
in
adc
pop
or
adc
lock
pop
cld
loope
pop
cld
in
adc
neg
addr16
adc
test
sbb
or
adc
test
sbb
cld
int
cld
not
jecxz
cld
shr
ds
mov
mov
pop
dec
mov
pop
dec
mov
dec
sub
mov
repnz
adc
cld
rcr
cld
int
cld
test
sbb
or
adc
shl
cld
xor
pop
or
adc
lock
cld
and
pop
cld
int
or
shl
cld
rcr
in
int
div
rcl
cmp
shl
pop
cld
icebp
pop
pop
in
int
sub
shl
cld
rcr
cld
int
sbb
rol
cld
rcr
pop
in
int
cmp
rol
cld
ror
pop
mov
shl
cld
mov
sbb
call
mov
dec
dec
ret
sahf
cmp
mov
mov
fwait
loopne
xor
mov
adc
rcl
cld
icebp
pop
pop
mov
rol
cld
xchg
mov
push
inc
sub
adc
loopne
and
cld
rcr
in
int
sub
rol
cld
rcr
pop
int3
int
pop
lock
cld
icebp
aas
pop
or
adc
add
imul
rcr
cld
sbb
sub
loope
pop
cld
xor
pop
in
int
jmp
rol
cld
loope
add
lods
jbe
mov
pushf
pop
mov
mov
mov
mov
repnz
jecxz
cld
xor
pop
or
adc
shl
cld
rcr
or
adc
test
pop
pop
or
adc
not
adc
cld
rcr
cld
int
or
shl
in
rcr
or
add
lock
loopne
push
pop
cld
icebp
pop
pop
cld
int
or
rol
cld
rcr
pop
in
int
sub
shl
cld
loope
pop
fmul
adc
lock
cld
rcr
pop
int3
fst
cmp
rcl
mov
clc
ins
mov
pop
or
out
pop
dec
mov
pushf
mov
scas
xor
shl
jae
pop
icebp
dec
adc
frstor
xchg
ret
(bad)
fmul
adc
shl
lods
loope
push
mov
call
adc
lock
cld
rcr
pop
in
int
sub
rol
pop
cld
rcr
int3
int
pop
loopne
and
cld
icebp
sysret
sub
adc
push
add
jp
jle
mov
cld
rcr
int
or
mov
mov
pop
rol
or
add
dec
mov
pop
pop
mov
dec
sub
mov
repnz
adc
fdiv
sbb
in
int
cld
test
sbb
or
adc
test
sbb
or
adc
test
sbb
or
adc
test
sbb
or
add
test
and
cld
icebp
pop
pop
in
int
sbb
rol
cld
rcr
pop
in
int
sbb
rol
in
icebp
pop
pop
fmul
adc
lock
cld
icebp
pop
pop
fmul
adc
loopne
push
inc
in
mov
sub
sub
(bad)
pop
dec
mov
into
pushf
add
(bad)
mov
or
or
xlat
inc
cmp
jl
add
lock
(bad)
ds
dec
and
mov
pop
mov
pop
int3
int
sub
rol
cld
icebp
pop
pop
cld
int
sub
rol
cld
rcr
pop
int3
int
dec
lock
pop
cld
icebp
pop
pop
sbb
adc
and
xchg
int3
jl
mov
in
ficom
push
pop
pop
mov
jbe
clc
add
mov
push
pop
outs
jmp
xor
out
repnz
cmp
mov
mov
sahf
pop
pop
mov
mov
repnz
jecxz
in
and
pop
cld
int
cld
test
sbb
or
adc
test
sbb
or
adc
test
sbb
or
adc
rol
cld
xor
pop
or
add
test
inc
pop
cld
xchg
sysret
int3
fst
cmp
shl
cld
icebp
pop
pop
mov
rcl
cld
icebp
pop
pop
fmul
adc
lock
cld
xchg
pop
pop
pushf
int
dec
rol
push
jbe
mov
cmp
sbb
ins
cmp
mov
mov
mov
mov
scas
pop
js
mov
sahf
dec
pop
sub
pop
lahf
int
dec
push
adc
jl
mov
sub
adc
mov
pop
cld
int
sub
shl
cld
rcr
cld
int
sub
rol
cld
ror
pop
int3
fst
cmp
shl
cld
rcr
pop
in
int
sbb
adc
test
sub
pop
jbe
or
daa
into
mov
pushf
mov
sahf
dec
pop
jae
dec
js
sahf
pop
pop
mov
cmp
sar
pop
dec
mov
pop
dec
mov
dec
pop
mov
dec
dec
mov
in
repnz
adc
in
rcr
sub
adc
test
pop
pop
in
int
or
shl
cld
rcr
cld
int
or
shl
cld
xor
pop
in
int
sub
shl
cld
xor
pop
sbb
adc
test
push
pop
cld
xchg
pop
pop
int3
int
sub
shl
cld
rcr
pop
int3
int
sti
test
pop
pop
fmul
adc
lock
cld
xchg
pop
pop
lods
in
add
loope
xchg
mov
sbb
ins
cmp
sahf
dec
dec
mov
mov
mov
(bad)
pop
dec
mov
dec
pop
mov
sub
add
lods
jae
aas
inc
pop
xor
dec
mov
pushf
dec
mov
mov
pop
fmul
add
lock
cld
loope
pop
fmul
adc
lock
cld
rcr
pop
int3
fst
cmp
rcl
pop
cld
rcr
pop
in
int
sbb
loope
cwde
cmp
fadd
(bad)
pop
pushf
jae
ins
dec
jo
mov
cmp
sahf
dec
pop
ret
sahf
dec
dec
mov
pop
cmp
mov
mov
mov
sahf
dec
dec
mov
in
repnz
repz
cld
and
pop
sub
adc
not
ret
pop
cld
xor
pop
sbb
adc
test
pop
pop
cld
int
cld
test
pop
pop
in
fst
sub
shl
cld
xor
pop
or
adc
test
and
cld
sbb
sub
shl
cld
loope
pop
fmul
adc
test
pop
pop
int3
int
cmp
shl
cld
sbb
cmp
inc
fisttp
sub
ins
cmp
sahf
dec
dec
mov
pop
pop
mov
mov
sahf
dec
pop
mov
sahf
pop
dec
ret
sahf
pop
cmp
mov
out
fisttp
jecxz
dec
dec
ret
scas
jl
mov
cld
jns
dec
dec
aaa
in
mov
add
lock
cld
icebp
pop
pop
fmul
adc
lock
cld
rcr
pop
fmul
adc
lock
cld
rcr
pop
in
int
sub
rcl
pop
adc
pop
cmp
(bad)
jl
mov
dec
mov
pop
dec
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
pop
mov
dec
pop
mov
dec
cmp
mov
repz
cld
and
pop
cmp
adc
test
sbb
sub
adc
test
sbb
or
adc
test
pop
pop
cld
int
sub
shl
cld
rcr
or
adc
lock
lock
cld
ror
pop
int3
int
sub
shl
cld
or
sub
shl
in
icebp
pop
pop
fmul
adc
loopne
and
cld
sbb
cmp
mov
pop
cs
pushf
cmp
sahf
dec
dec
mov
sahf
dec
pop
mov
dec
pop
mov
sahf
pop
pop
mov
sub
mov
sahf
pop
pop
ret
scas
dec
dec
mov
dec
dec
mov
cmp
ret
ds
mov
cld
sbb
cmp
shl
cld
icebp
pop
pop
in
int
sub
rol
in
rcr
in
int
cmp
rcl
loope
pop
in
int
sbb
rcl
pop
mov
ins
pop
mov
pop
cmp
sahf
pop
dec
mov
(bad)
pop
dec
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
ret
sahf
dec
sbb
dec
lods
lock
cld
rcr
sub
adc
not
repz
cld
xor
pop
or
adc
test
pop
pop
or
adc
lock
pop
cld
xor
pop
or
adc
shl
cld
rcr
cld
int
pop
lock
loopne
and
cld
sbb
sub
shl
cld
icebp
pop
pop
int3
int
sub
rol
cld
loope
pop
mov
shl
cld
ror
mov
rcl
mov
pop
dec
mov
pushf
cmp
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
dec
dec
mov
dec
dec
mov
mov
mov
shr
dec
ret
pop
push
pop
cld
or
sub
shl
cld
rcr
pop
in
int
sub
rcl
pop
cld
and
pop
fsubr
adc
shl
cld
rcr
pop
in
int
sbb
rcl
lods
mov
int3
pop
mov
pop
pop
mov
pop
dec
mov
dec
dec
mov
dec
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
ret
sahf
dec
sbb
dec
es
lock
in
xor
pop
sub
adc
test
pop
pop
cld
int
fsub
loope
pop
cld
xor
pop
cld
int
or
rcl
cld
xor
pop
cld
int
sbb
shl
in
rcr
in
int
pop
lock
dec
lock
or
cmp
shl
cld
icebp
pop
pop
in
int
or
rcl
cld
rcr
pop
(bad)
adc
lock
cld
rcr
pop
mov
rcl
mov
sbb
ins
cmp
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
pop
pop
mov
sahf
pop
pop
mov
mov
sahf
mov
mov
pop
cld
cmp
sub
rol
rcr
pop
fmul
adc
lock
cld
rcr
int3
in
adc
shl
pop
cld
cmp
sbb
rcl
cld
loope
enter
js
mov
mov
sahf
pop
pop
mov
sahf
pop
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
cmp
pop
es
shl
in
adc
pop
or
adc
out
repz
cld
xor
pop
or
inc
pushf
xlat
icebp
mov
cld
xor
pop
or
adc
loopne
adc
cld
rcr
cld
int
or
shl
cld
xor
pop
sbb
adc
test
and
cld
sbb
sub
rcl
loope
pop
or
xor
test
pop
pop
in
int
sub
rol
cld
ror
pop
mov
rcl
lods
push
fistp
push
sbb
ins
cmp
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
mov
mov
cld
xchg
sysret
lods
int
dec
lock
fsub
pop
pop
fmul
adc
lock
cld
rcr
pop
mov
shl
in
inc
das
pop
in
lea
jmp
loope
add
adc
cmp
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
in
repnz
mov
rcl
cld
adc
pop
cld
in
adc
loopne
adc
cld
xor
pop
or
add
xlat
rcl
cld
and
pop
or
adc
rol
adc
cld
rcr
in
int
or
shl
in
and
pop
sbb
adc
test
xor
in
icebp
pop
pop
int3
int
sub
rol
cld
rcr
pop
sbb
adc
test
pop
pop
fmul
adc
lock
cld
ror
pop
mov
shl
mov
sbb
ins
cmp
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
loop
repz
in
xchg
jb
xor
daa
in
icebp
pop
pop
in
int
sbb
rol
cld
rcr
int3
in
adc
shl
inc
(bad)
adc
loopne
add
cld
xor
dec
mov
dec
sahf
dec
pop
mov
mov
sahf
dec
pop
mov
pop
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
in
repnz
adc
cld
adc
pop
in
in
adc
rol
adc
cld
and
pop
sbb
adc
rcl
pop
cld
jno
pop
cld
in
adc
rol
adc
cld
and
pop
cld
int
or
rol
cld
adc
pop
sub
adc
not
adc
lock
cld
loope
pop
mov
shl
cld
rcr
pop
in
int
jmp
rol
in
loope
pop
fmul
adc
lock
cld
ror
pop
int3
std
add
rcl
mov
or
sub
sar
ins
dec
mov
pop
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
pop
pop
mov
pop
dec
ret
mov
outs
and
mov
inc
ins
js
fsubrp
cmps
pop
in
pop
inc
dec
sub
pop
mov
shl
pop
cld
xor
pop
(bad)
adc
repz
ins
in
cli
arpl
into
jmp
sbb
popf
mov
dec
pop
mov
dec
pop
mov
mov
sahf
pop
dec
mov
pop
dec
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
sub
mov
add
cld
and
pop
sbb
adc
test
sbb
cld
fst
in
out
shl
cld
and
pop
or
adc
xlat
shl
in
xor
pop
cld
int
or
shl
cld
xor
pop
or
adc
not
adc
rcl
icebp
sysret
(bad)
adc
lock
cld
loope
pop
fmul
add
test
pop
pop
fmul
adc
lock
cld
loope
pop
(bad)
add
mov
mov
pop
js
(bad)
ins
pop
mov
pop
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
pop
pop
ret
sahf
sbb
repz
sbb
xchg
js
test
scas
ins
js
push
ins
sub
ins
daa
add
push
pop
int3
in
add
lock
cld
ror
mov
xchg
ss
inc
out
sub
xchg
mov
or
pop
jge
mov
int
enter
dec
ret
sahf
dec
pop
mov
dec
pop
mov
mov
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
ret
sahf
dec
sbb
mov
adc
cld
and
pop
sub
adc
not
repz
cld
rcr
cld
int
in
xlat
shl
cld
and
pop
sub
adc
xlat
rol
in
rcr
or
adc
shl
cld
rcr
or
adc
test
push
pop
cld
or
cmp
shl
cld
rcr
pop
fmul
xor
lock
cld
loope
pop
fmul
adc
lock
cld
rcr
in
fst
sbb
mov
sub
sar
jl
mov
pop
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
pushf
cmp
jl
mov
dec
cmp
sahf
dec
(bad)
repnz
pushf
test
loope
pop
pushf
int
fldenv
retf
cmp
pop
mov
pop
pop
xchg
mov
sahf
sub
sub
dec
mov
pop
pop
ret
mov
sahf
dec
pop
mov
mov
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
ret
sahf
dec
sbb
dec
inc
lods
lock
cld
adc
pop
sbb
adc
test
pop
pop
or
adc
out
ret
daa
cld
adc
pop
sub
adc
out
ret
pop
in
xor
daa
in
int
cld
test
sbb
or
adc
test
push
pop
cld
xchg
aas
pop
int3
fst
dec
loopne
and
cld
loope
pop
fmul
add
not
jecxz
cld
loope
pop
fmul
adc
lock
cld
rcr
int3
in
adc
loope
cmps
mov
cmp
pop
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
pop
dec
mov
pop
dec
mov
mov
sahf
pop
dec
mov
mov
mov
adc
(bad)
pop
add
or
mov
pop
dec
mov
pop
dec
mov
pop
pop
mov
dec
dec
mov
pop
dec
mov
pop
pop
mov
dec
pop
mov
sahf
dec
dec
mov
pop
dec
mov
pop
dec
mov
pop
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
in
repnz
jnp
rol
in
xor
pop
or
adc
test
sbb
or
adc
xlat
rol
cld
adc
pop
sbb
add
xlat
rol
in
adc
pop
or
adc
shl
cld
adc
pop
sub
adc
test
xor
cld
loope
pop
fmul
adc
loopne
xor
cld
rcr
pop
fmul
adc
test
pop
pop
cld
int
sbb
rol
cld
icebp
pop
pop
fsubr
adc
nop
loope
mov
push
mov
js
sahf
dec
cmp
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
pop
pop
mov
pop
dec
mov
pop
dec
mov
sub
mov
pop
dec
mov
sub
mov
push
push
stos
lock
cld
xchg
iret
sbb
ins
dec
cmp
or
mov
pop
pop
mov
sub
mov
pop
cmp
(bad)
pop
dec
mov
pop
pop
mov
sahf
dec
pop
mov
pop
pop
mov
mov
sahf
dec
dec
mov
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
dec
dec
mov
in
repnz
mov
rcl
cld
and
pop
cld
int
cld
test
sbb
cld
int
(bad)
rcl
cld
adc
pop
sub
adc
out
ret
pop
cld
add
pop
or
adc
rol
cld
and
pop
sub
adc
test
add
cld
rcr
pop
in
int
sub
shl
cld
loope
pop
fmul
adc
test
pop
pop
cld
int
sbb
rol
cld
icebp
pop
pop
(bad)
adc
mov
mov
cmp
cmp
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
mov
mov
pop
sub
mov
xor
sbb
mov
out
jl
mov
pop
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
in
repnz
mov
rcl
cld
add
pop
or
adc
test
sbb
or
adc
xlat
rcl
cld
adc
pop
sbb
adc
out
ret
pop
cld
adc
pop
or
add
shl
cld
adc
pop
sub
add
not
adc
rol
cld
rcr
pop
fmul
adc
lock
cld
rcr
pop
in
int
in
not
jecxz
cld
loope
pop
in
int
sbb
rol
cld
loope
pop
fsubr
adc
mov
inc
jmp
dec
or
pop
dec
mov
pop
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
pop
mov
mov
(bad)
ins
pop
ret
out
pop
sbb
and
cmc
scas
ins
dec
mov
pop
dec
mov
pop
dec
mov
dec
dec
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
sahf
dec
pop
mov
in
repnz
mov
shl
fadd
sbb
sub
adc
test
sbb
sub
adc
(bad)
shl
pop
in
and
pop
sub
adc
out
repz
cld
xor
pop
cld
int
or
rol
cld
adc
pop
sbb
adc
test
xor
cld
rcr
pop
cld
int
sbb
shl
cld
loope
pop
fmul
adc
test
pop
pop
in
int
sub
rol
cld
rcr
pop
in
fld
sub
mov
cmp
dec
mov
pop
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
pop
pop
mov
jle
imul
iret
cmp
ins
push
mov
pop
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
dec
pop
mov
in
repnz
mov
shl
in
add
pop
cmp
adc
test
sbb
sub
adc
out
rcl
cld
and
pop
sbb
adc
xlat
shl
cld
and
pop
or
adc
out
ret
pop
cld
adc
pop
cmp
adc
lock
cld
rcr
pop
in
int
or
rcl
cld
rcr
pop
in
int
fdiv
shl
cld
loope
pop
in
int
sub
rol
cld
rcr
pop
in
fst
cmp
mov
cmp
cmp
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
jl
mov
jl
mov
dec
jge
xchg
(bad)
pop
dec
mov
pop
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
in
repnz
mov
shl
cld
adc
pop
sbb
adc
out
ret
pop
cld
and
pop
sbb
adc
out
rcl
in
adc
pop
cmp
adc
xlat
rol
cld
rcr
or
adc
out
rcl
in
add
pop
dec
retf
not
adc
rol
cld
rcr
pop
in
int
cld
test
pop
pop
in
int
in
test
pop
pop
in
int
sbb
rol
cld
rcr
fsubr
adc
mov
push
jbe
xchg
mov
mov
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
pop
pop
mov
pop
dec
sub
dec
ret
mov
sahf
dec
dec
mov
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
dec
dec
mov
in
repnz
pushfw
lock
cld
and
pop
sub
adc
out
ret
pop
in
and
pop
sbb
adc
out
ret
pop
cld
add
pop
sub
adc
xlat
shl
cld
xor
pop
or
adc
out
shl
cld
add
pop
cmp
adc
test
xor
cld
rcr
pop
fmul
adc
lock
cld
loope
pop
fmul
add
not
jecxz
cld
rcr
pop
in
int
sbb
rol
cld
rcr
int3
in
adc
mov
push
xchg
pushf
mov
or
sub
cmp
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
mov
mov
mov
mov
mov
mov
sahf
pop
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
dec
dec
mov
in
repnz
data16
lock
cld
and
pop
sub
adc
out
repz
cld
adc
pop
cmp
adc
test
or
sub
adc
xlat
shl
cld
xor
pop
cld
int
or
rol
cld
adc
pop
sub
adc
test
xor
cld
rcr
pop
fmul
adc
lock
cld
loope
pop
cld
int
sbb
rol
cld
loope
pop
fmul
adc
lock
cld
loope
pop
in
in
adc
rcl
and
mov
sub
dec
mov
dec
dec
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
in
repnz
xchg
mov
cld
xor
pop
dec
jmp
cld
adc
pop
sub
adc
out
repz
cld
adc
pop
or
adc
shl
cld
and
pop
or
adc
out
shl
in
and
pop
sub
adc
test
add
cld
ror
pop
int3
int
sub
shl
cld
loope
pop
cld
int
or
shl
cld
rcr
pop
in
int
sbb
rol
cld
icebp
das
pop
cld
std
adc
xchg
loope
xchg
mov
scas
or
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
mov
repnz
xchg
and
pop
dec
fiadd
int3
out
shl
cld
and
pop
sub
adc
out
ret
daa
cld
adc
pop
cld
std
adc
shl
cld
xor
pop
or
adc
out
shl
cld
adc
pop
sub
adc
test
xor
cld
icebp
pop
pop
in
int
cmp
rcl
rcr
pop
or
adc
lock
cld
rcr
pop
in
int
sub
rol
cld
loope
pop
in
lea
jmp
loope
mov
shr
xchg
mov
dec
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
pop
mov
sahf
dec
dec
mov
in
repnz
xchg
xchg
pop
cld
add
pop
cmp
add
test
or
cmp
adc
test
cmp
or
adc
rol
adc
shr
cld
std
adc
rol
cld
add
pop
sub
adc
mul
(bad)
out
rcl
cld
rcl
inc
adc
inc
adc
inc
adc
cld
inc
adc
cld
rcl
fadd
adc
cld
rcl
cld
rcl
cld
rcl
cld
rcl
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
and
(bad)
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
xlat
pop
rcl
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
jl
mov
cmps
jb
xchg
(bad)
mov
adc
ret
xchg
aam
popa
or
pop
fist
lods
mov
mov
jmp
pop
pop
fist
lea
ret
xchg
aad
mov
adc
ret
jae
(bad)
adc
mov
arpl
cmps
dec
pop
mov
sub
xlat
pop
rcl
sub
aad
jno
movs
pop
push
lods
out
xor
std
cmp
out
mov
jmp
adc
inc
pop
pushf
pop
adc
ret
jae
inc
pop
jl
adc
jmp
pop
pop
mov
lods
cmps
ret
jmp
adc
std
jno
addr16
pop
mov
sub
xlat
pop
rcl
sub
aad
cmp
daa
xchg
adc
lds
addr16
fist
lods
out
xchg
jb
adc
ret
fild
or
call
call
or
gs
ins
retw
mov
jmp
pop
pop
fwait
adc
ret
mov
inc
mov
adc
(bad)
hlt
cmp
addr16
shl
jnp
xor
std
popa
dec
pop
mov
fwait
cli
fbstp
push
jg
mov
ret
xchg
sub
sub
retf
fisttp
inc
or
dec
mov
scas
cli
ror
mov
mov
dec
popa
or
pushf
pop
adc
push
jp
dec
mov
(bad)
jb
pop
lods
add
lods
cmps
es
popa
retw
mov
mov
(bad)
popa
dec
pop
mov
fwait
jmp
dec
adc
data16
xor
int3
ret
shr
dec
xchg
ret
mov
call
pop
cwde
add
in
popf
adc
push
arpl
ror
dec
aas
aas
cli
add
sbb
movs
xchg
cld
cli
ja
mov
out
std
add
push
cmc
fidiv
adc
dec
aaa
sub
popa
retw
mov
mov
(bad)
popa
dec
pop
mov
fwait
jmp
fidiv
inc
dec
mov
ret
inc
or
jge
data16
xor
cli
add
in
inc
out
call
ds
inc
popa
jge
push
pushf
pop
adc
(bad)
mov
adc
pop
rcl
sub
fs
popa
dec
pop
mov
fwait
jmp
push
cs
add
pushf
test
jns
jl
adc
inc
or
popf
adc
xchg
jecxz
ror
jge
mov
inc
out
or
add
pushf
and
pop
mov
lods
mov
mov
jmp
pop
pop
mov
and
rcl
sub
fs
popa
dec
pop
mov
fwait
jmp
or
mov
push
addr16
jmp
lea
ret
mov
inc
or
or
cld
scas
clc
rcr
enter
int
jns
add
fdivr
cli
add
pushf
and
pop
mov
lods
mov
mov
jmp
pop
pop
mov
and
rcl
sub
fs
popa
dec
pop
mov
fwait
jmp
dec
adc
sar
mov
xchg
ret
mov
inc
or
or
cdq
inc
(bad)
push
fdivr
inc
retf
ds
inc
out
jns
pop
mov
lods
cmps
ret
inc
pop
pop
mov
and
rcl
sub
fs
popa
dec
pop
mov
fwait
jmp
dec
adc
push
shl
out
in
lock
pushf
retf
ret
mov
cwde
add
in
pop
rol
enter
in
popf
jecxz
int
das
mov
inc
mov
xor
adc
ret
ret
mov
inc
sub
es
mov
mov
(bad)
popa
or
pop
fwait
mov
cli
add
or
clc
mov
test
push
jb
mov
xchg
ret
inc
fsubr
ds
sub
sub
push
or
sub
(bad)
popa
or
pushf
pop
adc
xchg
mov
in
fnstcw
mov
dec
popf
cmps
inc
retf
inc
popa
retw
mov
mov
(bad)
popa
or
cld
cli
ja
adc
fisubr
in
fldcw
test
jecxz
xchg
enter
adc
mov
retf
test
cs
dec
ror
sub
xchg
push
mov
mov
ins
retw
and
fstp
sub
test
(bad)
das
retf
adc
pop
rcl
sub
xchg
(bad)
popa
dec
pop
pop
fist
dec
xchg
ret
push
inc
adc
ret
push
inc
pop
pop
mov
lods
cmps
ret
jmp
stc
add
inc
xchg
push
inc
adc
daa
ret
adc
test
sbb
lods
mov
xchg
aad
cmp
retw
xor
std
push
push
sahf
sbb
mov
mov
mov
(bad)
popa
pop
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
cmps
ret
(bad)
xor
int
and
mov
jmp
pop
pop
fwait
adc
ret
mov
(bad)
pop
ficom
cmp
ret
and
int3
push
dec
ja
jecxz
mov
mov
loope
ret
mov
mov
(bad)
popa
pop
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
ret
add
popa
or
pop
fwait
adc
ret
push
int3
mov
out
cmp
jmp
pop
pop
fist
add
ret
repz
out
cmp
cmc
dec
ss
retf
enter
sub
ret
jne
popa
retw
mov
mov
(bad)
popa
pop
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
fdivp
ret
mov
stos
adc
test
cmp
inc
retf
inc
lods
out
mov
jmp
pop
mov
es
scas
retf
inc
call
(bad)
mov
and
xchg
scas
(bad)
lea
inc
mov
push
and
rcl
sub
xchg
(bad)
popa
dec
pop
pop
mov
lods
mov
mov
jmp
pop
pop
fist
repz
xor
fild
cld
add
push
mov
sbb
lods
mov
mov
push
mov
repnz
mov
pop
int3
push
cmp
ret
push
test
icebp
mov
inc
ss
out
in
mov
cmc
sbb
and
rcl
sub
xchg
(bad)
popa
dec
pop
pop
mov
lods
mov
mov
jmp
pop
mov
aad
mov
loopne
sbb
dec
ror
pop
mov
mov
push
push
dec
xchg
scas
pop
ds
cmp
pop
pop
mov
lods
cmps
ret
jmp
inc
rol
push
xchg
out
loope
ret
mov
mov
(bad)
popa
dec
pop
pop
mov
lods
mov
mov
push
aad
lods
in
sub
add
and
rol
ret
add
fadd
sar
repnz
mov
mov
int3
test
test
popa
pop
pop
sub
adc
inc
imul
repnz
dec
push
ins
jne
and
mov
xchg
mov
mov
(bad)
popa
dec
pop
pop
mov
lods
out
push
cmp
mov
xor
aas
pushf
push
inc
pop
push
mov
ret
inc
sub
add
sbb
imul
icebp
clc
inc
or
pop
adc
pop
lods
imul
push
ret
push
test
icebp
mov
dec
and
sbb
xlat
pop
rcl
sub
xchg
(bad)
popa
dec
pop
sub
adc
daa
ret
jae
je
xor
ret
and
aad
ror
pop
fwait
adc
push
ret
jecxz
cmp
adc
shl
jecxz
aas
jl
push
cmp
(bad)
lea
rol
jle
sbb
les
lock
test
dec
xchg
scas
loop
fdivr
mov
aad
scas
mov
pop
rcl
sub
xchg
(bad)
adc
pop
dec
retf
inc
pop
pop
push
inc
mov
mov
mov
lahf
inc
dec
inc
mov
test
aaa
sub
(bad)
in
push
in
mov
push
loope
push
cmc
xchg
cmp
test
nop
cmp
sbb
scas
loop
or
jne
inc
mov
cdq
dec
stos
xlat
pop
rcl
sub
gs
enter
mov
xchg
cmp
enter
adc
push
ret
jae
je
push
sahf
sbb
outs
in
std
jl
cs
(bad)
cmp
dec
ja
mov
jmp
pop
or
push
out
dec
or
test
dec
in
fs
adc
or
(bad)
jnp
inc
std
sbb
xlat
pop
rcl
sub
inc
(bad)
mov
fmul
xchg
data16
popa
pop
pop
int3
push
xor
ror
mov
pop
ins
jl
je
cmp
dec
adc
push
inc
cs
jl
xor
repnz
test
mov
and
dec
stos
inc
or
mov
xlat
pop
rcl
sub
pushf
(bad)
mov
fwait
jge
ret
mov
inc
enter
push
xchg
outs
fldenv
cs
inc
repnz
ror
mov
and
(bad)
mov
fmul
ins
cmp
stos
pop
xchg
pop
fld
scas
mov
je
nop
cwde
pusha
pusha
mov
pop
inc
sub
sti
inc
repnz
pop
rcl
dec
inc
cmp
push
(bad)
ret
jmp
mov
mov
fdivr
ficom
cmp
inc
fwait
adc
pop
ja
je
arpl
push
in
inc
dec
or
jecxz
mov
dec
dec
xchg
scas
jmp
push
gs
std
inc
or
test
or
jmp
push
ret
mov
mov
scas
lock
aaa
cmps
imul
daa
ret
mov
dec
mov
in
ud0
jle
mov
retf
adc
add
(bad)
inc
push
ficom
xchg
test
mov
adc
mov
cmp
icebp
mov
jge
sub
out
adc
push
ret
mov
mov
(bad)
jno
pop
stos
imul
cmps
jb
mov
inc
in
dec
and
(bad)
popa
pop
pop
pop
fist
jg
ret
sar
xchg
rcr
loopne
fnstsw
mov
or
push
jge
ret
xchg
jg
mov
fdiv
push
dec
in
cmp
out
adc
ds
fisttp
ret
mov
xchg
mov
mov
inc
enter
mov
jg
scas
xor
or
push
mov
mov
(bad)
les
ds
xchg
out
arpl
daa
mov
adc
fmul
test
gs
popa
or
sub
adc
in
xor
loop
inc
inc
mov
dec
icebp
cmps
cmp
loopne
xchg
test
adc
inc
enter
call
test
fdiv
ret
(bad)
shr
retf
js
js
fnstsw
sub
add
(bad)
movs
aaa
mov
cmp
cmps
cmp
mov
jb
sbb
add
or
adc
nop
mov
and
xchg
push
mov
xchg
mov
push
push
and
mov
(bad)
mov
in
in
push
gs
popa
pop
pop
sub
adc
in
shr
ret
and
retf
bound
adc
aad
in
cmp
inc
pop
inc
sub
adc
sub
add
bound
ret
scas
and
inc
out
adc
fnstsw
cmp
test
shl
ret
pop
rcl
sub
dec
(bad)
and
int3
pop
ret
push
ret
ret
add
popa
or
dec
retf
inc
mov
sbb
ror
mov
add
imul
xchg
push
cmc
call
mov
sbb
fwait
popa
fimul
das
je
xor
int
xchg
mov
dec
sbb
xlat
pop
rcl
sub
sub
inc
mov
xor
mov
inc
enter
push
mov
in
adc
sub
adc
push
ret
and
sbb
cmps
cmp
sti
or
jae
test
aad
icebp
mov
cmp
ret
and
int3
push
cmp
jmp
pop
pop
mov
mov
pop
rcl
sub
mov
popa
mov
mov
push
mov
sbb
jmp
dec
pop
pop
mov
mov
mov
xor
mov
call
cs
xchg
xchg
pop
cmp
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
mov
pop
rcl
sub
sub
inc
pusha
sar
or
call
sbb
in
ret
popa
pop
pop
sub
adc
xor
inc
jg
pop
loopne
cmp
dec
movs
shr
jbe
adc
test
inc
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
mov
pop
rcl
sub
dec
inc
pmulhw
cmp
inc
enter
adc
test
push
jmp
pop
pop
mov
add
ret
repz
dec
and
retf
aaa
sub
push
or
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
mov
pop
rcl
sub
sar
xor
rcr
inc
or
dec
icebp
jmp
ret
jmp
pop
cld
sbb
lods
cmps
jb
push
dec
shr
ror
mov
(bad)
hlt
mov
shl
sbb
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
mov
pop
rcl
sub
adc
adc
pop
int3
push
xchg
test
mov
or
ret
adc
(bad)
jno
outs
in
inc
cmp
dec
dec
movs
pop
popa
or
mov
mov
inc
(bad)
stos
inc
xchg
scas
pop
push
and
add
popa
pop
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
mov
pop
rcl
sub
adc
popa
pop
pop
int3
push
mov
stos
test
(bad)
pop
fist
pop
push
and
jecxz
xor
rcr
sub
inc
(bad)
nop
sub
mov
push
aas
pop
push
and
add
popa
pop
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
mov
pop
rcl
sub
adc
popa
or
pop
fist
jecxz
popf
mov
pop
pop
ficom
movs
stc
sbb
jmp
push
mov
aas
jbe
sbb
cmp
out
adc
(bad)
jl
or
xor
mov
add
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
mov
pop
rcl
sub
adc
popa
pop
pop
cld
sbb
cmps
fcomp
shl
jle
adc
sbb
sub
or
inc
in
jecxz
fsubr
popf
push
in
mov
data16
outs
jbe
sbb
and
add
popa
pop
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
mov
pop
rcl
sub
adc
popa
pop
pop
cld
sbb
xor
mov
loopne
jecxz
aas
sbb
push
mov
or
ret
adc
inc
enter
adc
ret
adc
inc
enter
adc
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
mov
pop
rcl
sub
adc
popa
pop
pop
pop
mov
or
pop
mov
lds
mov
or
pop
fist
lods
out
mov
jmp
pop
pop
fist
lods
out
mov
jmp
pop
pop
fist
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
lods
mov
mov
jmp
pop
pop
mov
mov
pop
rcl
retf
ret
push
dec
xchg
push
xchg
push
mov
sub
mov
call
dec
xchg
push
and
int
xchg
push
and
int
xchg
push
and
int
xchg
push
and
int
xchg
push
and
int
xchg
ja
mov
and
gs
cld
rcl
cld
mov
adc
cld
icebp
sbb
cld
mov
pop
cld
rcl
xchg
rcl
cld
sub
pop
cld
rcl
cld
rcl
cld
rcl
cld
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
or
(bad)
pop
mov
dec
push
pop
movs
(bad)
aam
pusha
and
sub
pop
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
test
mov
pop
mov
xchg
lahf
jmp
nop
xor
dec
mov
dec
aad
sub
aad
jno
movs
sbb
aad
movs
ja
xor
cmp
addr16
and
das
mov
shl
imul
mov
shl
imul
mov
mov
cmps
dec
pop
mov
je
shl
imul
mov
shl
imul
mov
shl
imul
pop
mov
sub
rcr
imul
mov
and
cmp
ja
test
jb
cmps
dec
pop
mov
sub
cmp
stc
test
push
pusha
and
sub
pop
mov
cmps
dec
pop
mov
sub
jno
bound
jg
test
inc
inc
adc
or
addr16
and
aas
test
push
add
sbb
push
nop
xor
pop
movs
dec
test
mov
les
movs
jg
push
inc
adc
or
ja
jne
jb
cmps
dec
pop
mov
sub
sub
stc
mov
aam
jo
push
sub
pop
mov
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
je
mov
xchg
fistp
data16
add
mov
nop
imul
xchg
mov
push
jbe
add
inc
adc
pop
movs
das
mov
mov
cmps
dec
pop
mov
sub
rcr
fwait
les
mov
and
pusha
(bad)
fptan
push
adc
xchg
or
movs
push
fistp
data16
mov
shl
dec
mov
cmp
jnp
and
shl
iret
xchg
jo
in
mov
sbb
mov
movs
shl
jbe
ror
shl
cmp
les
test
jb
cmps
dec
pop
mov
test
nop
xor
jmp
pop
push
inc
ror
shl
jbe
out
cmp
movs
pop
dec
aad
je
add
retf
fs
cmps
xor
mov
and
push
fisttp
and
mov
movs
das
mov
xor
mov
xor
xchg
adc
les
inc
jmp
push
inc
pop
push
lock
jb
movs
sub
aad
aam
loopne
cdq
inc
fs
xchg
and
les
xor
add
ss
fwait
in
xchg
leave
ret
pop
push
inc
and
les
aad
aaa
div
jmp
inc
mov
ja
inc
pop
sar
je
mov
and
les
and
adc
fisttp
add
mov
movs
mov
jp
test
push
adc
les
xor
xchg
je
aas
jbe
outs
aam
shl
lds
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
fwait
aam
cdq
movs
inc
hlt
inc
mov
add
pop
je
int
push
mov
xchg
sbb
push
cmp
pop
out
daa
imul
fistp
scas
movs
ja
test
jb
cmps
dec
pop
mov
sub
cmp
mov
mov
adc
or
ss
fdivrp
sbb
(bad)
retf
(bad)
(bad)
test
pop
(bad)
imul
stos
inc
pusha
mov
mov
fisub
jp
add
stc
adc
nop
jmp
fwait
add
dec
adc
je
in
jmp
retf
clc
imul
mov
xor
lds
je
lock
call
fbstp
cmp
fwait
add
dec
adc
inc
out
das
xchg
xchg
mov
aam
pusha
jae
jb
shr
inc
(bad)
cli
fstp
sub
ficomp
cmp
sub
push
jbe
imul
(bad)
dec
push
sar
xor
out
outs
push
mov
call
jbe
mov
xchg
sti
dec
sub
mov
or
in
cli
xchg
iret
mov
sahf
adc
fldenv
stos
inc
jo
ret
ds
clc
add
in
push
(bad)
mov
faddp
int
xor
or
jecxz
(bad)
inc
cmp
mov
ins
cld
sbb
aam
jbe
mov
test
and
mov
rcr
mov
dec
xor
ficomp
sbb
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
jno
mov
push
loope
xor
mov
imul
clc
add
in
clc
add
in
cli
push
jmp
fbld
leave
sar
fistp
mov
cmp
popf
dec
jmp
and
fwait
(bad)
dec
pop
mov
sub
xor
je
lahf
ja
test
jmp
clc
add
in
clc
add
in
sub
sub
(bad)
movs
mov
cmp
in
pop
cld
add
int3
adc
(bad)
enter
(bad)
in
clc
add
in
clc
add
in
sbb
mov
dec
cmp
xlat
sbb
ret
ds
clc
add
in
clc
add
in
clc
add
in
clc
add
in
mov
stos
je
cmps
dec
pop
mov
sub
jo
or
pushf
fdivrp
add
in
clc
add
in
clc
add
in
clc
add
in
stc
add
mov
test
jno
in
mov
push
ds
clc
add
in
cli
add
(bad)
out
mov
or
js
mov
imul
xor
pop
cmp
ds
clc
add
in
stc
add
fdivr
pop
jnp
dec
aas
aaa
imul
xchg
out
and
in
clc
add
in
stc
add
cmp
adc
enter
cli
test
aas
in
clc
xchg
mov
mov
ds
clc
add
in
clc
add
in
clc
add
in
(bad)
mov
enter
xchg
cmp
stos
cwde
fwait
mov
add
in
stc
add
mov
mov
mov
dec
cmp
scas
mov
jmp
clc
add
in
clc
add
cmp
loop
mov
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
xchg
ja
loop
repnz
adc
inc
pop
inc
dec
sar
in
clc
add
in
cli
add
lods
add
sbb
mov
sub
aad
jno
cmps
dec
pop
mov
sub
cmp
cmp
int
in
cmp
pop
lock
test
cmp
clc
add
in
clc
add
in
cld
mov
arpl
movs
pop
mov
pop
ret
scas
pop
cmp
ds
clc
add
in
sti
ret
outs
out
mov
cmp
dec
dec
int3
outs
aam
sar
mov
clc
add
in
clc
add
in
clc
add
in
push
dec
mov
arpl
cmps
dec
pop
mov
sub
rcr
imul
sbb
and
call
clc
add
in
clc
add
or
sbb
les
push
inc
lods
sub
in
clc
add
in
cli
add
dec
gs
jp
cmps
dec
pop
mov
sub
dec
pop
add
js
sahf
sub
jb
jge
ret
ds
clc
add
in
stc
add
sub
add
movs
sub
aad
movs
(bad)
inc
mov
push
rcr
enter
(bad)
in
clc
add
in
clc
jae
sub
push
sbb
cmps
dec
pop
mov
je
jo
push
sbb
add
in
clc
add
in
clc
add
in
clc
add
in
clc
add
in
std
add
push
aam
data16
cli
and
mov
add
in
stc
add
sub
add
cmps
dec
pop
mov
sub
pusha
dec
xor
cli
test
mov
add
jl
ret
ds
clc
add
in
clc
add
or
cmp
mov
sar
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
movs
dec
cdq
movs
loope
xchg
lock
and
(bad)
fmul
clc
add
in
clc
jae
sub
ja
movs
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
cmp
movs
sbb
(bad)
jbe
push
sbb
xor
stc
mov
mov
jo
fnstenv
or
ds
clc
add
in
clc
add
aaa
inc
pop
mov
sub
aad
jno
cmps
dec
pop
mov
in
push
fdivr
ds
clc
add
in
clc
add
in
icebp
mov
or
pop
jno
cmps
dec
pop
mov
mov
jo
fst
in
clc
add
in
stc
add
cmps
inc
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
lods
fst
clc
add
in
clc
add
in
cld
add
cld
xchg
out
pop
movs
lahf
cmps
ss
add
in
clc
add
in
adc
mov
lds
sub
rcr
or
add
in
clc
add
in
clc
add
in
std
add
pop
push
in
lds
movs
sar
sbb
stos
cwde
or
in
clc
add
in
clc
add
xor
arpl
cmps
dec
pop
mov
sub
jb
and
ins
jg
or
add
in
clc
add
in
clc
add
in
cli
add
dec
popa
nop
or
dec
push
sbb
ds
clc
add
in
inc
ds
mov
je
cmps
dec
pop
mov
sub
rcr
sub
(bad)
in
clc
add
in
clc
add
in
cld
add
pushf
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
rcr
jnp
pop
push
jbe
or
sub
add
in
clc
add
in
clc
add
xor
arpl
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
test
mov
mov
dec
cwde
xor
mov
cmp
push
ds
clc
add
in
cli
add
ins
aam
dec
lds
pop
jno
cmps
dec
pop
mov
mov
inc
imul
jg
pop
ds
clc
add
in
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
popf
out
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
std
add
mov
xchg
fcomip
push
test
jmp
clc
add
in
clc
add
in
jb
jb
cmps
dec
pop
mov
sub
rcr
pop
movs
scas
xchg
sub
dec
out
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
movs
jl
test
aam
clc
test
ds
clc
add
in
std
add
mov
mov
arpl
cmps
dec
pop
mov
sub
rcr
or
add
in
clc
add
in
clc
add
in
std
add
lods
loope
addr16
mov
mov
or
jns
clc
add
in
clc
add
in
inc
ds
jne
jb
cmps
dec
pop
mov
sub
rcr
jnp
dec
push
fsub
cli
jmp
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
cmp
out
clc
imul
cmp
ds
clc
add
in
clc
add
in
inc
out
cwde
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
popa
dec
inc
fwait
cmp
dec
and
test
ds
clc
add
in
stc
add
mov
mov
arpl
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
popf
out
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
std
add
mov
movs
mov
ins
out
clc
add
in
clc
add
in
out
push
scas
mov
cmps
dec
pop
mov
sub
rcr
pop
movs
(bad)
cmps
sbb
ds
clc
add
in
icebp
add
lods
rcr
imul
sbb
sbb
in
clc
add
in
clc
add
or
cmp
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
sub
dec
out
clc
add
in
clc
add
in
inc
ds
and
jnp
pop
push
push
cmp
ds
clc
add
in
inc
ds
popa
(bad)
xlat
dec
pop
mov
sub
rcr
imul
jbe
fdiv
clc
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
inc
pop
mov
and
xchg
xchg
sbb
mov
in
clc
add
in
cli
add
dec
gs
jp
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
sub
inc
scas
popf
jnp
ret
pop
ds
clc
add
in
clc
add
in
jmp
dec
or
sub
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
popf
out
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
std
add
mov
mov
push
or
call
clc
add
in
std
add
jl
mov
dec
mov
pop
mov
sub
rcr
pop
movs
(bad)
cmps
sbb
ds
clc
add
in
icebp
add
lods
rcr
dec
mov
push
es
jmp
out
add
in
clc
add
in
sti
add
cld
aad
jnp
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
pop
movs
lahf
cmps
ss
inc
retf
add
in
clc
add
in
icebp
add
lods
rcr
imul
sub
ss
in
clc
add
in
sti
add
int3
adc
dec
sub
arpl
les
jbe
fdiv
clc
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
test
adc
cdq
jb
fdivrp
cli
pop
clc
add
in
clc
add
in
clc
add
in
mov
jne
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
imul
fst
scas
aad
dec
clc
or
in
clc
add
in
clc
add
in
clc
xchg
sahf
sub
jne
and
imul
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
popf
out
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
std
add
mov
aam
fst
clc
add
in
clc
add
in
clc
add
jl
ret
sahf
mov
pop
mov
movs
(bad)
cmps
sbb
ds
clc
add
in
icebp
add
lods
rcr
sub
mov
in
clc
add
in
std
add
lods
in
ja
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
dec
mov
mov
cmp
ds
clc
add
in
icebp
add
lods
aad
jno
movs
ins
mov
clc
add
in
clc
add
in
clc
add
in
inc
jle
add
fst
rcr
imul
jbe
fdiv
clc
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
mov
inc
push
fldenv
in
clc
add
in
clc
add
in
clc
add
in
loope
push
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
ins
mov
rol
mov
mov
pushf
fdivrp
add
in
clc
add
in
clc
add
in
ins
mov
(bad)
retf
outs
mov
ins
(bad)
pop
pop
add
ds
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
popf
out
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
std
add
mov
movs
sub
aad
hlt
inc
jo
push
cmp
clc
add
in
clc
add
in
clc
add
dec
pop
adc
add
sub
fwait
jmp
ds
icebp
add
lods
rcr
cmp
retf
add
in
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
jnp
dec
push
push
cmp
ds
clc
add
in
icebp
add
lods
aad
jno
movs
sbb
aad
aam
lock
in
clc
add
in
clc
add
in
clc
add
in
push
sub
and
pop
movs
aas
jbe
fdiv
clc
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
hlt
inc
sar
cmp
add
in
clc
add
in
clc
add
in
rol
cmps
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
sub
aad
les
lock
mov
pusha
mov
in
clc
add
in
clc
add
in
cld
add
and
stc
adc
sub
add
ds
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
popf
out
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
test
adc
call
clc
add
in
clc
add
in
clc
add
in
das
mov
jne
inc
jmp
push
sbb
ds
clc
add
in
icebp
add
lods
rcr
cmp
ins
out
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
imul
jbe
js
sub
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
je
mov
pop
push
dec
clc
test
in
clc
add
in
clc
add
in
into
mov
je
inc
mov
(bad)
in
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
sub
aad
dec
xchg
pusha
mov
add
in
clc
add
in
clc
add
in
stc
jecxz
ins
mov
arpl
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
je
push
push
in
stos
push
dec
pop
mov
test
mov
mov
cmp
sbb
outs
pop
ret
ds
clc
sbb
sbb
add
ds
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
popf
out
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
rcr
imul
dec
and
ja
or
add
in
clc
add
ins
pop
ret
mov
jne
(bad)
mov
clc
add
in
clc
add
in
icebp
add
lods
rcr
sub
ins
out
clc
add
in
clc
add
in
adc
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
jnp
dec
push
push
fdiv
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
sub
rcr
fwait
ret
fistp
gs
pop
mov
pop
mov
fistp
cld
add
adc
dec
add
movs
ss
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
pop
mov
js
aaa
in
clc
add
in
clc
add
in
clc
add
in
std
xor
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
cmp
or
enter
clc
add
in
clc
add
in
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
popf
out
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
sbb
aad
add
cdq
in
cwde
add
in
mov
add
in
clc
add
in
icebp
add
lods
rcr
pop
movs
(bad)
cmps
ss
nop
sbb
in
clc
add
in
inc
ds
test
jb
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
dec
mov
mov
pop
aad
in
add
in
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
or
(bad)
ja
cmp
ds
push
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
mov
test
les
cmp
ds
clc
add
in
clc
add
in
push
dec
mov
arpl
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
sbb
aad
add
sub
cmp
clc
add
in
clc
add
in
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
popf
out
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
xchg
sbb
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
cmp
jmp
outs
sub
in
clc
add
in
clc
add
in
icebp
add
lods
rcr
jnp
aas
jbe
cmp
ds
clc
add
in
inc
ds
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
pop
movs
scas
cmps
sbb
ds
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
sub
sti
cli
clc
add
in
clc
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
lods
fst
sbb
in
clc
add
in
clc
add
in
clc
add
in
icebp
inc
sub
mov
arpl
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
sub
aad
xchg
ja
jne
jb
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
mov
push
pop
jmp
ds
clc
add
in
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
popf
out
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
mov
and
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
jno
jb
mov
mov
mov
cmps
dec
pop
mov
sub
rcr
sub
lahf
in
clc
add
in
clc
add
in
icebp
add
lods
rcr
fwait
aam
cmp
xchg
leave
in
add
in
clc
add
in
std
add
jl
inc
ja
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
sub
mov
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
sub
jno
jb
mov
test
mov
cmps
dec
pop
mov
sub
rcr
jnp
pop
push
push
pop
inc
retf
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
mov
adc
in
clc
add
in
clc
add
in
clc
add
in
test
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
sub
push
jbe
imul
cmovns
mov
arpl
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
cli
add
ins
xlat
inc
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
fdivr
data16
adc
in
clc
add
in
std
add
mov
movs
or
lds
cdq
bound
mov
loopne
sub
cmps
dec
pop
mov
sub
rcr
pop
movs
(bad)
cmps
ss
jmp
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
movs
ins
mov
dec
ret
ds
clc
add
in
sti
add
mov
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
sbb
mov
ds
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
movs
ja
rcr
jbe
jg
push
lock
jb
cmps
dec
pop
mov
sub
rcr
imul
jbe
js
sub
clc
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
mov
adc
in
clc
add
in
clc
add
in
clc
add
in
test
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
bound
aam
das
aaa
test
xchg
pop
je
test
mov
cmps
dec
pop
mov
mov
inc
ins
(bad)
pop
pop
add
ds
clc
add
in
test
mov
cmps
dec
pop
mov
mov
pusha
ins
(bad)
pop
pop
add
ds
clc
add
movs
mov
arpl
cmps
dec
pop
mov
sub
rcr
imul
push
jbe
cmp
in
clc
add
in
std
add
mov
movs
cmp
movs
loope
xchg
shl
add
out
mov
movs
gs
jb
cmps
dec
pop
mov
sub
rcr
pop
movs
scas
cmps
sbb
ds
clc
add
in
icebp
add
lods
aad
jno
movs
sbb
aad
adc
sub
cmp
clc
add
in
clc
add
ins
push
ret
into
cli
addr16
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
jb
adc
jb
in
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
movs
sbb
aad
add
loopne
or
push
mov
enter
jb
cmps
dec
pop
mov
sub
rcr
jnp
aas
push
fdiv
clc
add
in
clc
add
in
std
add
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
mov
adc
in
clc
add
in
clc
add
in
clc
add
in
test
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
bound
test
sub
clc
add
in
lock
sti
push
je
mov
cmps
dec
pop
mov
aam
add
add
ds
clc
add
in
test
mov
cmps
dec
pop
mov
mov
push
pop
jmp
ds
clc
add
in
clc
add
in
icebp
ret
dec
mov
aad
jno
cmps
dec
pop
mov
sub
rcr
pop
movs
(bad)
mov
mov
xchg
out
add
in
clc
add
in
std
add
lods
in
ja
movs
dec
test
adc
inc
ss
clc
add
in
std
add
lods
xor
dec
pop
mov
sub
rcr
cmp
mov
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
movs
ja
cmp
movs
dec
cmp
ds
clc
add
in
std
add
enter
movs
mov
arpl
cmps
dec
pop
mov
je
inc
adc
and
orps
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
movs
sbb
aad
and
inc
call
add
in
sti
add
pushf
xchg
xchg
imul
pop
mov
sub
rcr
pop
movs
lahf
cmps
ss
add
in
clc
add
in
std
add
lods
in
ja
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
lods
fst
clc
add
in
clc
add
in
clc
add
in
clc
add
in
test
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
jb
loop
jle
dec
imul
add
in
stc
adc
lahf
mov
loopne
sub
movs
dec
cdq
movs
ror
sbb
adc
pop
ds
clc
add
in
stc
add
fdiv
pop
mov
sub
rcr
fwait
aam
cdq
movs
icebp
sub
dec
add
ds
clc
add
in
sti
and
popa
dec
and
out
test
mov
pop
and
push
dec
daa
(bad)
push
add
in
clc
add
in
adc
mov
pusha
mov
ds
stc
add
ins
adc
pop
movs
cmovns
mov
dec
adc
mov
ds
clc
add
in
adc
mov
lds
je
nop
ds
jb
or
in
clc
add
in
clc
add
movs
outs
aam
mov
mov
mov
arpl
inc
aad
push
lods
iret
clc
add
in
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
aam
inc
call
add
in
clc
add
in
icebp
add
(bad)
aad
sub
bound
retf
gs
aaa
test
add
in
clc
add
in
inc
ds
and
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
mov
test
fcmovnb
jo
ret
ds
clc
add
in
clc
add
in
clc
add
in
test
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
dec
mov
ftst
js
(bad)
in
clc
add
in
clc
add
in
das
ss
add
mov
jmp
dec
push
lock
clc
add
in
clc
add
in
cld
add
iret
cmps
inc
pop
mov
sub
rcr
imul
jmp
sar
jae
pop
add
in
clc
add
in
stc
add
mov
fnstsw
std
or
mov
xchg
lock
in
xchg
xchg
pop
mov
in
clc
add
in
clc
add
in
jno
sub
cmps
dec
pop
mov
movs
ja
sbb
mov
cmp
ds
clc
add
in
inc
jle
fs
mov
outs
(bad)
inc
clc
add
in
clc
add
in
clc
add
in
jno
sub
cmps
dec
pop
mov
sub
sub
dec
or
add
in
clc
add
in
clc
xchg
sahf
sub
mov
xchg
jg
es
(bad)
sar
sbb
in
clc
add
in
clc
add
in
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
test
xor
mov
in
clc
add
in
cld
add
jbe
add
shl
mov
enter
clc
add
in
clc
add
in
xor
scas
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
pop
mov
sub
in
clc
add
in
clc
add
in
clc
add
in
hlt
and
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
cmp
movs
test
push
cmp
clc
add
in
jge
(bad)
pushf
push
add
xchg
pop
adc
cmp
clc
add
in
sti
add
cld
aad
jnp
cmps
dec
pop
mov
sub
rcr
fwait
aam
cdq
movs
dec
daa
clc
jmp
xchg
aas
in
clc
add
in
clc
add
in
sti
add
and
sub
outs
and
lds
in
dec
mov
clc
add
in
clc
add
in
cld
mov
arpl
cmps
dec
pop
mov
sub
pusha
dec
(bad)
cli
fstp
outs
jge
add
in
clc
add
jmp
xchg
cli
dec
stos
aas
mov
add
in
clc
add
in
std
adc
mov
cmps
dec
pop
mov
sub
aad
jno
movs
dec
test
adc
clc
add
in
sti
add
lods
(bad)
xlat
dec
dec
icebp
mov
dec
sbb
jnp
test
aas
in
clc
sbb
sbb
in
clc
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
sub
jno
and
imul
in
clc
add
in
inc
mov
jmp
push
push
jmp
pushf
fdivrp
add
in
clc
add
in
sti
ret
outs
out
jno
push
cmps
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
sub
aad
cmp
clc
add
in
clc
add
in
clc
add
in
icebp
jae
(bad)
pop
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
fwait
aam
mov
mov
cmps
dec
pop
mov
je
mov
dec
aam
dec
sbb
out
clc
add
in
clc
add
in
stc
add
mov
push
jl
cs
cmp
inc
xchg
cmps
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
jg
(bad)
leave
sar
fistp
sbb
pop
js
xlat
dec
pop
mov
test
or
dec
dec
add
in
stc
jecxz
ins
sub
(bad)
fist
stc
xlat
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
fwait
aam
test
mov
test
ds
clc
add
in
clc
add
in
stc
jecxz
ins
mov
(bad)
sbb
mov
arpl
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
je
shr
and
fistp
clc
add
in
clc
add
in
mov
int
and
les
clc
add
in
icebp
add
lods
rcr
imul
stc
mov
aam
jo
push
cmp
jns
mov
jo
sub
add
in
clc
add
in
cli
arpl
mov
xor
dec
push
cdq
jmp
pusha
and
dec
mov
dec
aad
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
in
mov
clc
add
in
clc
add
in
clc
add
in
(bad)
xor
mov
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
jnp
mov
push
lock
jb
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
inc
ds
cmp
cmps
ss
les
and
add
jbe
xchg
ja
aad
jno
movs
sbb
aad
test
lock
jb
cmps
dec
pop
mov
sub
xor
xchg
xor
out
adc
les
inc
jmp
cdq
movs
mov
arpl
cmps
dec
pop
mov
sub
add
dec
pop
mov
movs
ja
call
in
clc
add
in
clc
add
in
sti
jae
psraw
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
cmp
call
lds
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
inc
ds
jb
and
bound
ins
lahf
sbb
ds
and
rcr
fwait
aam
mov
inc
pop
and
mov
jp
in
jle
mov
sbb
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
je
inc
push
jp
sub
or
in
clc
add
in
clc
add
in
clc
add
in
add
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
jb
adc
xchg
sbb
in
ja
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
inc
ds
jb
adc
add
in
clc
add
in
clc
add
in
pop
rcr
cli
cmp
push
inc
mov
mov
test
movs
mov
jp
(bad)
ds
clc
add
in
clc
add
in
sti
jecxz
(bad)
mov
arpl
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
jb
and
imul
clc
add
in
clc
add
in
clc
add
in
(bad)
jnp
jne
jb
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
and
push
adc
je
add
int3
mov
je
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
inc
ds
jb
adc
add
in
clc
add
in
clc
add
in
dec
rcr
call
data16
pop
adc
es
xchg
clc
fwait
mov
movs
ja
add
ds
clc
add
in
clc
add
in
sti
jecxz
(bad)
mov
arpl
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
rcr
pop
mov
add
in
clc
add
in
clc
add
in
outs
mov
xor
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
xchg
ja
mov
dec
add
lods
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
nop
sbb
in
clc
add
in
inc
ds
jb
adc
add
in
clc
add
in
clc
add
in
xor
or
ror
clc
add
in
clc
add
in
stc
xor
iret
push
xchg
xrelease
fmul
ds
clc
add
in
clc
add
in
sti
jecxz
(bad)
mov
arpl
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
rcr
fwait
aam
jmp
in
add
in
clc
add
in
sti
add
pop
popa
xchg
pop
pop
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
sbb
aad
add
lock
push
dec
clc
or
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
pushf
jmp
xchg
sbb
in
clc
add
in
inc
ds
jb
adc
add
in
clc
add
in
clc
add
in
add
jnp
pop
fst
mov
in
clc
add
in
clc
add
in
clc
add
in
jle
pop
push
xor
fs
ds
clc
add
in
clc
add
in
sti
jecxz
(bad)
mov
arpl
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
movs
sbb
aad
in
mov
clc
add
in
clc
add
in
inc
push
cdq
adc
mov
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
fwait
les
aam
pop
jns
popf
pop
add
in
icebp
add
lods
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
fwait
aam
cmp
sbb
in
clc
add
in
inc
ds
jb
adc
add
in
clc
add
in
clc
add
in
xor
or
retf
in
cwde
add
in
clc
add
in
clc
add
in
clc
add
in
std
add
pushf
add
ds
clc
add
in
clc
add
in
sti
jecxz
(bad)
mov
arpl
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
je
jo
push
phsubsw
in
clc
add
in
clc
add
mov
aam
lock
jb
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
jno
sbb
mov
jne
cwde
pop
cmp
clc
add
in
adc
mov
lds
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
rcr
pop
movs
outs
inc
es
ret
ds
clc
add
in
inc
ds
jb
adc
add
in
clc
add
in
clc
add
in
dec
rcr
stos
ins
dec
repnz
into
inc
jp
fsub
cli
jmp
call
push
jae
addr16
ds
clc
add
in
clc
add
in
sti
jecxz
(bad)
mov
arpl
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
sub
push
js
(bad)
in
clc
add
in
clc
xchg
mov
inc
jmp
sub
pop
mov
aam
test
lock
and
(bad)
ja
pop
inc
retf
add
in
clc
add
in
adc
scas
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
sbb
aad
mov
push
add
test
daa
(bad)
sub
or
clc
add
in
clc
add
in
inc
ds
jb
adc
add
in
clc
add
in
clc
add
in
push
rcr
stos
rcr
imul
fst
clc
add
in
icebp
mov
or
jp
(bad)
ds
clc
add
in
clc
add
in
sti
jecxz
(bad)
mov
arpl
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
sub
aad
xchg
out
js
cmp
in
sti
add
sbb
mov
add
das
jbe
pop
adc
xor
mov
sti
je
jbe
jo
in
and
and
cld
scas
clc
add
in
clc
add
in
clc
add
in
and
scas
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
sub
aad
hlt
inc
mov
adc
or
mov
ds
clc
add
in
inc
ds
jb
loop
jno
sub
ds
clc
add
in
clc
add
in
push
rcr
aad
jno
movs
sbb
aad
xchg
ja
pusha
nop
sbb
mov
push
push
sbb
ds
clc
add
in
clc
add
in
sti
rcr
mov
arpl
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
outs
dec
xchg
mov
clc
add
in
clc
add
cmp
cdq
in
or
in
ss
movs
or
cmp
clc
add
in
sbb
mov
aas
fsub
push
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
sbb
aad
mov
mov
test
ds
clc
add
in
clc
add
in
clc
add
in
adc
pop
mov
clc
add
in
clc
add
in
jno
sub
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
jno
mov
in
clc
add
in
clc
add
in
sti
ret
outs
out
mov
arpl
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
movs
sbb
aad
add
jmp
(bad)
clc
add
in
clc
add
in
clc
add
in
call
mov
mov
or
pop
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
aad
jno
cmps
dec
pop
mov
sub
add
icebp
retf
out
leave
pop
shrd
push
fcomp
jmp
adc
fcompp
pop
add
mov
or
mov
aad
arpl
lods
sbb
cld
rcl
mov
adc
cld
shl
hlt
(bad)
sbb
sahf
shr
xchg
addr16
adc
mov
xor
call
dec
push
inc
ret
pop
pop
cld
rcl
mov
xchg
inc
or
and
shl
mov
rcl
dec
outs
push
mul
pop
dec
dec
sbb
push
ds
sbb
int3
sbb
hlt
lds
push
pop
inc
aad
sti
rcl
mov
xchg
mov
icebp
xor
pop
scas
ror
out
leave
pop
pop
scas
loope
push
clc
inc
sbb
(bad)
leavew
pop
mov
test
xor
je
pop
scas
dec
adc
xor
mov
ret
xchg
(bad)
lods
cmp
cmp
repnz
sbb
je
push
stos
les
push
stos
les
shl
lods
inc
scas
mov
add
les
push
stos
(bad)
cmp
inc
scas
push
gs
aam
and
hlt
scas
inc
scas
les
mov
sar
xor
xor
push
stos
int3
cmp
push
stos
lds
push
or
popf
push
or
in
or
mov
bound
in
cmp
repnz
retf
(bad)
pop
ss
enter
test
xor
(bad)
enter
adc
jp
lods
aaa
mov
fs
jns
jbe
jmp
mov
add
les
inc
stos
ret
loop
mov
push
stos
les
or
push
sub
cmp
cmps
repnz
sbb
adc
mov
pop
sub
push
ret
sub
add
retf
xchg
sub
dec
mov
xor
bswap
pushf
adc
sbb
in
cld
cmc
pop
mov
(bad)
mov
adc
fidivr
mov
int
push
add
rcl
out
loope
scas
mov
stos
ins
(bad)
mov
and
push
outs
push
out
mov
ins
adc
adc
xlat
scas
xor
push
push
push
stos
rcr
xor
xchg
imul
out
les
arpl
test
outs
xor
(bad)
and
leave
jl
nop
movs
add
in
push
mov
xor
in
out
cmp
bound
xchg
out
je
pop
pusha
ret
cmp
out
add
pop
pusha
ret
dec
sub
push
stos
push
inc
pop
stos
iret
lea
cmp
sub
jg
push
or
push
outs
jle
in
jmp
sbb
cmp
movs
cld
movs
push
call
repz
sub
repnz
rcr
push
hlt
movs
dec
pop
fwait
in
push
aaa
xchg
retf
mov
aas
ret
cmp
scas
push
data16
(bad)
(bad)
into
xchg
ins
mov
sbb
mov
loopne
mov
xor
jae
lea
sbb
pop
pusha
rol
dec
xchg
sti
xchg
loop
call
jl
mov
mov
sti
jnp
ins
sub
mov
sbb
push
ins
sub
mov
jmp
inc
cmp
cdq
push
pushf
je
inc
jp
mov
inc
out
sub
inc
jmp
cmp
sub
mov
mov
jmp
mov
jg
mov
rol
fmul
push
out
aad
cmps
mov
jnp
pushf
adc
sbb
or
sub
inc
push
(bad)
push
out
aad
cmps
mov
jnp
les
push
push
sub
push
jmp
push
sbb
jg
jmp
sbb
cmp
inc
jmp
inc
jmp
rcl
jns
sub
push
dec
lods
cdq
adc
and
sub
int3
cmp
dec
fst
sbb
jl
fsubr
mov
cmp
pop
cmp
push
mov
mov
inc
in
dec
xor
je
ret
rol
cld
cmc
pop
mov
leave
cmp
adc
fidivr
xor
sub
ret
adc
sbb
mov
or
ficom
fbld
push
mov
adc
js
lods
daa
sub
jb
xor
sti
mov
pop
stos
les
in
push
or
mov
or
shr
push
stos
icebp
sbb
loope
(bad)
sub
stos
jp
arpl
mov
loopne
push
push
pop
stos
(bad)
lea
daa
cmc
out
adc
xchg
sbb
movs
pop
leave
jg
xor
mov
repnz
jmp
aad
lock
push
(bad)
adc
jns
addr16
sbb
pop
and
std
inc
inc
scas
js
ins
ret
push
adc
cmps
inc
sbb
stos
retf
pop
ss
out
fs
jecxz
push
xor
out
rep
pop
jp
pushf
(bad)
add
scas
adc
je
imul
jmp
scas
push
and
mov
fwait
out
fist
ret
fs
cwde
lods
jo
out
add
ins
and
nop
sbb
(bad)
fcmove
lea
outs
rcl
push
out
push
rcl
arpl
idiv
push
int
jecxz
push
mov
ss
int
cmp
cmps
repnz
lods
mov
inc
into
icebp
cmp
lea
sbb
lock
lock
cmp
stos
xor
mov
repz
xchg
div
jg
repz
scas
xchg
stc
test
pushf
xchg
xor
jge
ja
clc
cmps
push
push
leave
pcmpgtb
idiv
test
les
(bad)
xor
fnsave
cmp
xchg
jae
inc
pop
(bad)
xor
std
mov
jg
xchg
addr16
push
leave
in
jae
pxor
push
cmp
and
ret
int
idiv
out
xchg
pop
pop
aaa
leave
das
arpl
mov
addr16
push
leave
inc
jecxz
sbb
cs
mov
es
push
std
and
(bad)
dec
pop
and
out
bndldx
mov
push
leave
push
xor
int
movs
pop
int
sub
sahf
cwde
xor
(bad)
lock
popf
cdq
dec
inc
mov
add
mov
fwait
adc
dec
jo
neg
adc
sti
imul
jg
call
mov
inc
pop
mov
sbb
test
xor
or
mov
dec
fdiv
mov
or
aas
mov
mov
idiv
outs
(bad)
idiv
dec
stos
and
pop
ficomp
jg
outs
xchg
addr16
push
leave
push
xor
int
jne
xchg
mov
sub
(bad)
mov
jle
icebp
cmp
imul
dec
clc
into
inc
sub
adc
(bad)
in
inc
dec
test
sbb
retf
loopne
enter
(bad)
rcl
cmp
mov
(bad)
mov
mov
in
inc
fmul
jl
movs
(bad)
stos
push
int
cmp
in
pop
push
shl
inc
lahf
dec
or
ins
mov
cmp
or
xchg
idiv
scas
sahf
cmps
dec
push
leave
pop
jnp
fcomip
cmp
push
idiv
out
xchg
pop
je
leave
das
arpl
mov
xchg
sbb
adc
test
or
xor
jge
add
and
inc
dec
and
xlat
xchg
repnz
popf
cwde
dec
cmps
dec
push
leave
push
inc
push
mov
sbb
hlt
sub
adc
rol
jae
ins
(bad)
fwait
jecxz
aam
shl
in
inc
sbb
push
xchg
ds
xchg
and
dec
ds
xchg
cmp
stc
aas
cmp
(bad)
xor
std
icebp
xchg
mov
sbb
cmp
int
je
adc
les
std
addr16
out
mov
push
mov
mov
bound
mov
sbb
cmp
int
je
adc
call
push
push
(bad)
clc
retf
inc
leave
pcmpgtb
idiv
push
test
retf
inc
dec
pcmpgtb
test
les
(bad)
xor
fnsave
cmp
xchg
aas
xchg
sbb
mov
retf
inc
sub
adc
jge
dec
inc
popf
inc
cmp
(bad)
cmp
jge
jge
lea
arpl
int
cmp
test
es
int
mov
int
cmp
test
arpl
and
popf
push
mov
sahf
xchg
cmp
loope
mov
jnp
xchg
hlt
retf
push
fisub
sub
and
sbb
mov
mov
and
sub
lods
push
retf
repnz
or
add
cwde
in
or
or
sub
inc
mov
cli
ret
mov
shl
jecxz
out
sub
push
push
or
test
inc
stos
into
lea
mov
loope
jnp
adc
dec
sub
jbe
adc
fbld
push
mov
les
out
mov
call
ds
enter
iret
xor
cmp
pop
pop
iret
pop
xor
sbb
adc
ret
hlt
xor
ss
stos
clc
or
pop
inc
mov
movs
or
pop
stos
ret
xchg
iret
adc
cmp
and
push
jae
inc
scas
fs
mov
pop
popf
push
jae
icebp
mov
scas
hlt
xchg
mov
and
test
cmp
movs
xor
stos
push
sbb
int3
pusha
inc
push
push
push
stos
int3
lea
xchg
push
jae
icebp
(bad)
scas
adc
adc
loop
retf
adc
pop
movs
fidiv
mov
adc
stc
ss
push
lods
and
pushw
in
popf
aas
sbb
fcomp
ret
push
inc
adc
inc
scas
dec
(bad)
scas
push
aas
cmp
ror
in
ret
pop
jae
push
ins
xor
jp
into
scas
push
pop
mov
push
mov
and
fild
movs
movs
arpl
movs
movs
arpl
xor
lock
push
popa
and
jl
or
mov
clc
mov
mov
arpl
jne
je
(bad)
loope
jp
movs
arpl
lods
movs
arpl
movs
adc
and
cmps
movs
arpl
mov
lods
lods
hlt
hlt
sbb
mov
cmps
mov
lea
icebp
lds
or
adc
loope
nop
jmp
jp
nop
je
add
xchg
jp
cmc
dec
and
lea
in
je
mov
push
xor
test
in
cld
in
jno
push
xor
jmp
jp
nop
je
pop
sti
inc
jge
mov
je
add
xchg
jp
ret
pop
sti
inc
inc
xchg
xor
mov
es
cmc
movs
arpl
mov
mov
xor
add
movs
arpl
jno
dec
xor
mov
adc
movs
mov
and
dec
mov
in
je
mov
mov
push
mov
jbe
lea
test
add
mov
cmp
int
movs
ret
mov
out
fnstsw
shl
scas
adc
les
in
repnz
pop
or
mov
shl
xor
dec
inc
sbb
cmp
ret
pop
or
je
scas
inc
jp
mov
les
icebp
stos
fist
lock
mov
mov
push
stos
retf
sub
push
mov
or
add
cmp
sbb
retf
fcmovbe
scas
adc
into
cmp
daa
xor
ja
hlt
rcr
iret
aad
ins
sbb
les
mov
call
stos
hlt
add
mov
cmp
add
movs
push
call
push
stos
jno
in
addr16
movs
mov
(bad)
iret
movs
iret
cmp
sub
and
push
mov
mov
out
aam
push
sbb
sti
push
jp
jp
fs
aam
enter
push
mov
neg
pop
mov
xor
js
outs
ret
jnp
mov
jbe
movq
scas
push
outs
es
sbb
sbb
mov
scas
push
jo
xor
jnp
out
pop
xor
iret
hlt
xor
scas
xor
sbb
scas
les
leave
std
das
sbb
rcr
ror
adc
sbb
loope
stc
mov
mov
cmp
stos
mov
dec
xor
sub
pop
aaa
(bad)
sbb
xor
test
pop
xor
out
popa
mov
loop
cmp
stos
pop
xchg
mov
dec
cmp
mov
adc
mov
pop
sbb
dec
imul
(bad)
fwait
jns
dec
jg
mov
retf
cmp
imul
jg
in
mov
jg
dec
stc
push
ins
mov
stos
shrd
jb
cmp
scas
scas
sbb
cmp
mov
dec
popf
mov
mov
pop
cmp
dec
adc
repnz
xor
or
pop
int3
int
test
ret
mov
mov
xor
retf
fiadd
sbb
push
cmp
lods
pop
dec
popf
lods
pop
dec
popf
lods
pop
dec
jmp
mov
cmp
cmp
stos
dec
adc
in
dec
inc
imul
cmp
stos
pop
dec
mov
or
int
stos
mov
das
and
repz
out
cdq
lods
outs
adc
mov
pop
loopne
(bad)
cmc
sahf
add
scas
dec
adc
cmp
(bad)
cmc
pop
add
scas
outs
adc
cmp
lods
pop
dec
popf
lods
pop
dec
popf
lods
pop
dec
jmp
mov
xor
loope
imul
mov
or
stos
mov
pop
dec
idiv
sub
stos
pavgw
out
xor
out
xchg
cmp
repnz
adc
scas
(bad)
xchg
std
imul
int
(bad)
mov
mov
jg
mov
mov
jle
mov
pop
xor
mov
mov
shl
xor
add
cmp
dec
sub
fwait
sub
out
repnz
pop
stos
les
add
add
inc
scas
dec
adc
xor
fsub
call
push
adc
sbb
shl
arpl
fstp
pusha
pop
cld
aas
mov
stos
jb
jo
shl
inc
dec
out
or
adc
dec
xchg
fild
pop
outs
inc
add
int
or
xor
test
in
mov
jnp
call
adc
push
fwait
push
mov
cmp
ficom
add
mov
mov
mov
stos
jge
sub
mov
mov
pop
sub
aaa
push
stos
dec
(bad)
scas
push
cmp
xor
adc
push
stos
rep
pop
jp
mov
lock
sbb
adc
fnstcw
loopne
push
inc
pop
stos
lds
lock
not
push
mov
cmp
xor
int3
lea
in
jo
clc
and
aam
nop
or
mov
cdq
push
bound
mov
pop
sub
int
loopne
stos
fmulp
adc
retf
and
cmp
pop
pusha
jmp
sub
aas
add
ja
dec
jns
ffree
cmp
scas
adc
imul
call
sbb
into
mov
push
xor
cmp
imul
enter
add
pop
mov
dec
xchg
retf
sub
sub
adc
jmp
loope
add
add
(bad)
xor
div
mov
stos
xor
xchg
hlt
inc
rcl
dec
xor
adc
mov
xchg
clc
mov
mov
stos
jb
xchg
(bad)
xor
imul
cmp
mov
outs
push
cmp
cmp
(bad)
movs
fwait
xchg
jl
jge
shl
sbb
add
ins
ins
loopne
ss
mov
cmp
ss
cmp
cmp
mov
int3
jne
xor
jmp
and
mov
pop
jb
(bad)
xor
sub
aam
and
sub
xchg
(bad)
and
and
fld
int
(bad)
mov
xchg
xor
mov
and
xchg
popa
cmp
out
ss
sar
mov
push
or
fmul
into
scas
movs
ret
mov
xlat
fnstsw
shl
shr
cli
jp
dec
(bad)
les
stos
or
sbb
sub
xlat
mov
cli
and
shl
scas
adc
adc
mov
ret
int
loop
cmp
fisttp
les
dec
xchg
sbb
popf
fild
lds
rcl
inc
das
push
stos
fist
inc
sbb
mov
(bad)
cmp
adc
and
push
fwait
adc
jle
pop
and
stos
imul
mov
test
pusha
push
and
fbld
pop
in
rcr
jns
sbb
pusha
(bad)
sub
cmp
out
popa
or
adc
retf
cmp
lds
jne
scas
rcr
xor
jge
or
ins
sub
push
pop
sub
xor
cmp
sbb
jle
pop
jb
ins
outs
data16
adc
in
push
fs
pop
sub
pop
call
mov
hlt
outs
jbe
clc
sbb
outs
xor
ret
out
mov
movs
push
sbb
rcr
cld
mov
in
pop
or
outs
popf
js
pop
shl
scas
xor
cli
push
sbb
jae
fld
cmp
shr
es
aad
inc
mov
popf
iret
test
ret
xchg
sbb
stos
pop
arpl
cmc
sbb
jmp
pusha
(bad)
ins
and
cmps
lds
lea
xchg
dec
push
outs
inc
test
imul
inc
rcl
out
jno
(bad)
call
jne
jmp
and
jmp
add
jno
and
jmp
cmp
sub
je
mov
mov
in
and
jmp
aaa
jp
lods
(bad)
and
popa
jg
jne
jmp
loope
and
jge
xor
fbstp
ja
inc
out
mov
mov
jbe
jno
jne
and
aad
mov
je
rcr
jb
pop
and
(bad)
xchg
jae
ja
add
test
out
ss
mov
addr16
jmp
pusha
jge
cmp
sahf
push
fist
sub
ja
stos
stc
and
adc
cli
jmp
stos
jne
jmp
lahf
mov
(bad)
sub
ss
shl
shl
ficom
das
jb
jmp
repnz
jle
popa
mov
dec
outs
arpl
jne
dec
es
(bad)
cs
jae
out
xor
sbb
popa
mov
add
push
and
xor
cmp
out
jle
inc
push
and
cmps
mov
daa
cmp
sahf
push
fistp
mov
and
in
mov
mov
outs
push
and
cs
jae
out
xor
sbb
cmps
int3
and
outs
add
aad
dec
mov
fbld
or
cli
aas
dec
fisttp
jno
and
jmp
data16
popa
pop
js
and
and
movs
xor
jge
loope
and
pop
mov
and
adc
ins
pop
clc
aad
(bad)
and
jns
loopne
and
(bad)
and
jno
mov
cli
fist
int3
mov
inc
fdiv
in
add
sub
popa
xor
xor
mov
mov
mov
inc
jmp
aaa
jnp
idiv
ret
inc
mov
data16
out
repnz
pop
stos
int3
cmp
cwde
movs
cmp
mov
cmp
fs
shr
dec
inc
mov
(bad)
pop
sub
out
repnz
or
fild
aam
call
cmp
fsubr
xor
push
adc
gs
pop
and
cmps
retf
cmp
mov
jns
movs
jmp
mov
pop
jle
inc
fcmovnb
add
xchg
test
cmps
retf
xor
loopne
jg
addr16
jmp
mov
stos
retf
cmp
push
stos
push
adc
les
pusha
xor
enter
sub
cmps
sub
jg
imul
dec
mov
aas
ret
or
push
je
and
push
fild
aam
call
or
mov
mov
inc
fwait
adc
xor
push
lea
xchg
push
jb
sbb
cmp
outs
xchg
pop
and
lods
jp
push
test
ret
ret
fs
movs
cmc
pop
lock
retf
xor
inc
shr
je
or
sti
or
out
out
mov
popf
stos
jmp
fisubr
(bad)
lea
scas
pop
mov
dec
dec
xchg
test
and
push
sbb
jbe
fwait
outs
and
mov
(bad)
push
add
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
inc
adc
ror
xchg
in
(bad)
dec
out
inc
xchg
test
ror
je
lock
cmps
pop
(bad)
hlt
ror
(bad)
dec
out
ins
push
dec
mov
adc
out
xchg
fnstsw
mov
test
adc
sti
cmp
imul
sar
loope
rcr
aam
sub
xchg
ror
loopne
(bad)
dec
ja
mov
lock
dec
pop
add
dec
pop
add
dec
mov
push
dec
out
push
dec
pop
add
dec
mov
test
dec
mov
push
dec
out
push
dec
pop
add
dec
mov
ss
mov
push
dec
mov
(bad)
dec
out
shr
hlt
rcr
loopne
shr
in
ror
loope
ror
add
addr16
xlat
push
jecxz
shr
loope
mov
test
rcr
mov
inc
add
xchg
sti
sub
cmp
(bad)
dec
addr16
dec
out
mov
adc
add
add
dec
cmps
or
fwait
mov
add
sbb
and
inc
xchg
mov
fs
in
xor
and
push
retf
adc
inc
cmps
or
sbb
lds
adc
into
dec
push
test
in
(bad)
jnp
lods
adc
sbb
and
dec
dec
pop
fdivp
sbb
sbb
or
mov
or
dec
xchg
pop
sahf
neg
hlt
fstp
out
cmps
pop
das
mov
mov
or
dec
aaa
pop
push
hlt
sbb
dec
adc
mov
push
dec
dec
inc
adc
pop
push
neg
hlt
leave
dec
out
push
adc
mov
mov
std
mov
(bad)
popa
cmp
dec
pop
push
aaa
add
addr16
xlat
push
jecxz
shr
loope
mov
test
rcr
mov
test
dec
out
push
outs
out
jbe
inc
or
pop
push
adc
cli
mov
mov
cmp
adc
dec
out
sahf
or
out
(bad)
dec
xlat
dec
call
add
dec
out
in
hlt
mov
or
jnp
dec
fs
test
ror
je
lock
xchg
(bad)
hlt
ror
jno
jno
ror
dec
push
sbb
fild
sbb
sti
adc
test
mov
cmp
test
stc
fisubr
mov
in
pop
jecxz
ret
ficom
xor
movs
pop
dec
scas
dec
rcr
inc
xor
push
stos
retf
(bad)
aam
push
out
ret
cmp
or
ret
cld
mov
shl
shr
jge
mov
cmovnp
add
stos
call
pop
nop
fcomp
or
sahf
mov
push
js
(bad)
std
pop
xor
int
xchg
fidivr
loopne
iret
sub
scas
mov
xor
das
lds
push
dec
lods
hlt
and
fadd
dec
xchg
jmp
sahf
js
adc
out
rcr
cmc
adc
adc
enter
aam
adc
or
(bad)
arpl
enter
fs
mul
adc
enter
inc
xchg
ins
or
jno
dec
mov
push
jae
xor
sub
xor
and
dec
cmp
push
stos
jl
dec
sub
pop
xchg
push
bound
ret
jnp
jecxz
out
xchg
dec
shr
mov
rep
pop
jp
or
scas
push
cmp
out
and
or
out
dec
out
(bad)
sti
mov
outs
xor
int
cmp
scas
add
js
arpl
or
xor
stos
out
and
xchg
cmps
push
cmp
(bad)
xor
cmp
scas
push
fcomp
add
push
ins
mov
lea
xchg
pop
jae
adc
(bad)
sahf
xor
test
sbb
dec
daa
inc
or
mov
out
xor
pop
mov
std
mov
in
jb
mov
add
pop
mov
cmc
pop
ds
jmp
adc
imul
mov
sub
push
test
lods
jne
std
sub
sub
mov
mov
fst
jmp
pop
xor
sbb
and
jmp
or
jno
sbb
jae
imul
mov
ret
test
jg
jmp
or
and
stc
pusha
dec
mov
jp
lahf
mov
pop
xor
fcom
or
dec
or
popf
enter
or
jo
stos
call
push
retf
sti
mov
popf
jle
icebp
pop
fstp
and
mov
jae
or
mov
cmp
add
mov
fidivr
xor
jmp
dec
cli
mov
xor
dec
sub
pop
xor
sti
cdq
sbb
stos
mov
jg
jmp
mov
jmp
xor
dec
xchg
pop
or
pop
imul
mov
jb
mov
mov
imul
inc
mov
cmp
ins
ret
aad
inc
pop
cmp
into
sub
lea
sbb
lods
jne
repz
and
jecxz
paddusw
add
imul
mov
fldcw
cld
repnz
test
dec
sub
cdq
test
mov
ins
add
mov
dec
imul
jecxz
sbb
mov
inc
sub
test
jae
mov
jae
mov
ja
xchg
cmovae
mov
das
sbb
dec
sub
loopne
add
mov
add
ins
std
mov
test
sub
jecxz
or
mov
jno
std
dec
sub
xchg
xchg
jno
jl
xor
push
cli
mov
jae
call
jecxz
or
mov
dec
sub
xchg
xchg
jno
jl
xor
push
cli
mov
jae
call
jecxz
or
jns
and
or
mov
push
lds
cli
mov
jae
call
jecxz
or
jns
and
std
dec
sub
xchg
xchg
jno
jg
xor
push
cli
mov
repz
cld
mov
pop
ins
pop
mov
je
test
cmp
sub
add
adc
sar
adc
das
sbb
mov
aad
push
mov
adc
cmp
sub
mov
adc
sar
adc
das
sbb
mov
aad
push
mov
adc
cmp
das
in
mov
adc
sar
adc
das
sbb
mov
aad
push
mov
adc
cmp
das
jmp
cmc
lss
inc
std
mov
mov
mov
sar
fucomi
ret
mov
pop
ins
dec
and
outs
dec
mov
cmp
cs
mov
test
pop
fistp
xor
sub
mov
dec
lods
or
aas
dec
mov
lea
imul
xchg
jno
cmc
cmp
and
mov
test
pop
fistp
xor
sub
mov
dec
lods
or
aas
dec
mov
lea
imul
xchg
jno
sub
sbb
mov
jne
add
adc
sar
xor
stc
mov
adc
std
cmc
ins
ins
push
mov
push
inc
std
mov
or
jns
mov
cmp
clc
sbb
imul
inc
loope
dec
xor
leave
cmc
cmp
and
mov
sub
xchg
xchg
jno
jne
test
jge
jne
(bad)
in
aad
inc
fisubr
mov
jno
sbb
imul
inc
loope
cld
mov
and
dec
enter
pop
jne
test
mov
mov
jno
cld
mov
pop
ins
int
jp
mov
sbb
jmp
push
mov
push
inc
std
mov
data16
loop
jb
mov
or
in
std
cld
jne
push
push
ss
mov
sar
mov
push
inc
jp
push
out
sub
jne
bound
jae
mov
inc
sub
ins
rep
ins
pop
mov
pop
ins
retf
sub
sbb
leave
call
jecxz
or
sub
mov
gs
in
and
sub
mov
(bad)
(bad)
movs
mov
pop
jge
adc
xchg
add
sub
test
lods
jne
dec
xor
mov
cmp
loopne
ror
mov
sub
pop
mov
(bad)
mov
pop
mov
push
inc
dec
mov
pop
mov
dec
jmp
aaa
test
movs
jno
dec
cmp
cdq
loopne
es
movs
jno
test
lods
es
movs
jno
loop
mov
clc
cmp
pop
cmp
or
mov
mov
(bad)
retf
cmp
push
or
dec
sub
cmp
cmp
repnz
sbb
les
cwde
xchg
pop
xor
in
pop
scas
int3
int
jb
cmp
lock
pop
mov
jb
cmp
jbe
int
mov
xchg
or
mov
aam
pop
pushf
sub
mov
inc
and
int3
popf
sub
cmp
jmp
jb
pop
repnz
xchg
sbb
xor
inc
mov
nop
cmp
mov
ret
jle
pop
cld
ins
shr
sar
loopne
and
out
ret
cmp
rol
loopne
jmp
xchg
gs
stos
leave
popf
jmp
mov
movs
dec
pop
adc
pop
stos
les
loopne
clc
repnz
nop
sbb
mov
mov
aas
ret
fwait
add
push
jecxz
stos
into
or
sub
lahf
in
aaa
sbb
adc
push
imul
je
imul
ret
cmp
dec
cmps
test
popa
or
cmp
fisttp
call
or
and
ins
out
jmp
ret
push
std
add
in
xor
push
punpcklwd
jle
xor
in
test
retf
push
(bad)
mov
(bad)
hlt
cmp
scas
and
bound
jnp
das
or
jbe
outs
jp
cld
loope
jbe
xchg
stos
lods
into
pop
cmp
outs
xor
hlt
iret
je
ret
fwait
enter
add
dec
xchg
(bad)
cmp
int3
sub
sti
add
not
push
int3
mov
nop
mov
out
in
inc
jae
(bad)
das
cwde
mov
outs
jecxz
repz
mov
das
jle
das
mov
push
ja
scas
out
pusha
xchg
pop
and
sub
sub
mov
push
ja
loope
mov
push
xlat
mov
ret
js
mov
int3
cmp
cwde
and
in
fadd
cmp
mov
xor
adc
or
movs
sub
fsub
jecxz
sar
add
aas
mov
stos
jne
push
pop
or
lock
retf
fiadd
cmps
lods
mov
push
sub
xor
arpl
pop
pop
cmp
dec
sub
fcomp
push
bound
iret
add
push
scas
adc
sar
lock
scas
push
push
inc
pop
stos
les
dec
mov
clc
scas
xchg
xchg
jae
push
jo
sbb
test
push
stos
ja
pop
test
call
add
aaa
in
push
stos
jno
hlt
mov
cmp
cmp
push
cmp
push
push
mov
stos
ret
mov
rep
dec
jp
scas
pop
mov
call
lea
dec
int3
popf
jmp
fstp
push
dec
xor
dec
scas
je
cmp
sbb
lock
ret
adc
sbb
cmp
push
loop
outs
pushf
leave
xor
push
jecxz
cmp
(bad)
iret
test
scas
xchg
mov
jg
xchg
push
jae
inc
cld
push
sbb
pop
jae
add
cmps
xor
push
add
sbb
mov
jnp
ins
xor
out
push
sbb
outs
push
mov
mov
call
(bad)
neg
(bad)
(bad)
dec
push
adc
inc
dec
(bad)
xchg
cs
and
jb
repz
fistp
data16
movs
shl
pushf
and
retf
pop
sbb
push
pusha
stos
and
xchg
shl
cmp
mov
add
(bad)
jmp
data16
mov
shl
cmp
mov
ror
popa
aam
add
arpl
(bad)
pop
sbb
js
js
push
jb
enter
mov
jbe
push
push
inc
aad
repnz
pop
nop
and
and
sub
ret
inc
push
nop
and
sub
and
(bad)
bound
push
nop
and
sub
inc
sub
(bad)
arpl
push
nop
and
sub
out
bound
jb
push
nop
and
sub
xchg
bound
sub
mov
pushf
and
sub
ds
mov
pop
nop
and
addr16
ds
mov
repnz
nop
and
das
cs
push
in
sub
and
inc
push
nop
and
sub
xchg
bound
jb
push
nop
and
sub
xor
(bad)
arpl
push
nop
and
sub
ss
bound
jb
push
nop
and
sub
test
cwde
aad
out
sub
mov
pushf
and
sub
ds
mov
pop
nop
and
rcl
cs
and
push
enter
stos
pop
sbb
movs
addr16
push
addr16
(bad)
sbb
push
rol
call
data16
pusha
mov
(bad)
jmp
data16
jo
and
xchg
shl
cmp
mov
mov
and
xchg
shr
outs
push
arpl
(bad)
pop
sbb
js
js
push
jb
clc
push
sbb
es
jbe
ret
dec
cmps
xchg
(bad)
push
sub
mov
pop
and
adc
push
jb
movs
sub
ins
inc
aad
pop
xor
or
mov
xor
repnz
pop
stos
les
push
stos
les
cwde
mov
mov
stos
int3
or
add
fwait
mov
push
cmp
and
shl
cmp
or
push
sbb
ins
xchg
(bad)
cmp
mov
scas
mov
cmp
lds
scas
add
call
stos
adc
pusha
stos
iret
ins
daa
sub
cmp
pop
stos
int3
fucom
pop
xchg
jecxz
cmps
les
cmp
mov
loopne
sub
pop
stos
push
inc
pop
stos
lds
popa
test
js
mov
int3
cmp
add
ds
movs
sub
pop
stos
jnp
data16
ins
mov
rol
je
xor
je
fadd
cmp
cmp
sub
pop
stos
je
test
je
push
mov
cmp
inc
stos
int3
jge
cwde
inc
ret
je
xchg
cli
add
push
stos
pop
fadd
ret
test
shrd
bound
cmc
and
jns
sub
pop
stos
je
xchg
cli
inc
add
fadd
ret
adc
dec
scas
and
dec
stos
xor
cmp
test
xor
fist
push
or
div
sbb
push
mov
mov
out
test
cmp
div
cmp
js
cmps
xchg
div
outs
sub
cmp
enter
iret
adc
cmp
push
stos
addr16
(bad)
fwait
jmp
push
sbb
fldcw
push
fisub
adc
push
jae
test
or
(bad)
cmp
mov
and
retf
push
outs
mov
sub
ret
jnp
bound
lahf
in
xlat
pop
fwait
xchg
int
jg
cld
ror
cmp
ja
data16
sahf
xchg
push
and
mov
xchg
cli
or
sbb
stos
push
cmp
das
not
dec
scas
and
dec
stos
jno
ja
mov
and
popa
push
or
lods
lea
push
jae
mov
pop
jb
fstp
cmps
push
ds
dec
inc
push
test
leave
jae
(bad)
neg
mov
outs
xor
cmp
cmp
scas
push
lock
sbb
sbb
inc
and
xchg
fwait
aas
sbb
adc
jmp
mov
mov
sub
je
sub
jmp
bound
jnp
xlat
sub
xor
cmp
xchg
daa
aam
outs
sub
and
or
pop
sub
mov
aam
clc
jo
jl
sub
shr
icebp
es
js
push
cdq
push
jecxz
pop
push
add
and
dec
das
out
sub
inc
js
xor
push
jle
inc
cmp
xchg
cwde
pop
jae
mov
push
mov
jb
fidiv
xchg
cmp
xchg
out
into
shl
pop
das
xchg
test
repnz
into
out
mov
add
xchg
sub
and
xor
cmp
xor
sub
(bad)
xchg
sub
xchg
push
stc
das
mov
mov
adc
and
cmp
push
bound
mul
cmp
rcl
push
and
jg
xchg
pushf
int3
loop
push
sbb
xor
cs
inc
imul
and
cs
xchg
psrlq
(bad)
shl
sub
jb
mov
xor
adc
mov
inc
xor
and
imul
ss
outs
adc
mov
xor
sub
out
mov
add
and
dec
jle
xchg
sbb
out
cmp
bound
sub
sbb
das
mov
mov
shl
cli
and
jl
loop
push
ds
out
into
rol
push
adc
inc
jae
int3
xchg
and
into
loop
push
mov
and
stc
push
xor
jle
inc
pop
mov
loop
sub
and
aas
inc
inc
imul
jb
cs
mov
inc
pop
mov
xor
into
shl
fdiv
popa
stos
sub
and
icebp
out
mov
and
fld
mov
dec
das
cmps
bound
(bad)
and
fild
bound
mov
inc
jb
out
and
jle
xchg
ins
or
shr
inc
push
jns
xor
sbb
adc
pop
ret
push
cmp
mov
cmp
xchg
jbe
into
shl
jmp
fiadd
jb
outs
adc
and
dec
das
out
mov
push
shl
pop
das
sbb
div
sub
xchg
sub
add
xor
fiadd
jb
outs
adc
loop
cmp
jecxz
jl
xchg
jae
jg
xor
mov
inc
cmp
(bad)
push
cmp
mul
js
inc
push
cmp
xor
das
(bad)
jb
mov
mov
stos
fsubp
(bad)
cmp
adc
out
add
inc
mov
mul
push
xor
mov
loop
or
xor
repnz
rol
(bad)
shl
sub
jbe
dec
shl
jmp
into
xor
rcl
jns
xchg
xchg
sub
xor
icebp
jae
ds
sub
and
aas
inc
inc
imul
jb
cs
mov
bound
sbb
xchg
push
mov
mov
mov
or
xchg
repz
fild
loop
pop
and
mov
(bad)
push
cli
outs
jecxz
clc
into
shl
pop
das
(bad)
adc
adc
out
xor
xchg
jecxz
into
mov
inc
stos
mov
push
and
ret
push
pop
das
mul
test
mov
adc
into
xchg
jb
scas
xor
ret
push
xchg
jb
jg
ss
push
xor
fld
mov
dec
das
cmps
out
out
rcl
xchg
cmp
bound
outs
adc
and
imul
inc
xchg
psrlq
mov
xor
mov
ret
sbb
mov
push
das
(bad)
push
cdq
dec
inc
xchg
pop
mov
and
dec
outs
push
cmp
xor
xchg
jae
aas
inc
jae
fild
xchg
cmp
(bad)
xor
push
and
rol
adc
cmps
loop
outs
and
mov
out
mov
push
rol
stc
out
adc
jle
and
jle
jae
mov
shl
mov
push
arpl
mov
xor
jecxz
pushf
int3
adc
mov
adc
into
xor
inc
mov
imul
and
push
jecxz
sub
mul
imul
rcl
into
bound
dec
rol
into
ret
into
inc
adc
push
and
inc
xchg
cmp
inc
inc
imul
ret
out
out
(bad)
bound
ret
push
dec
aas
xor
imul
and
loop
cmp
jae
fdivp
jae
fild
push
cmp
xchg
mov
pop
push
out
scas
rol
stc
out
adc
jle
adc
outs
xor
push
jae
fild
inc
js
shl
outs
push
or
out
push
xor
fld
mov
or
push
sbb
mov
dec
inc
xchg
cmp
jb
fidiv
adc
push
xchg
and
cs
dec
das
xchg
push
jae
sub
js
jecxz
sub
ret
xchg
pop
dec
adc
nop
sar
and
mov
push
sub
adc
jle
jae
ds
push
cs
and
push
inc
mov
das
div
sub
es
push
das
out
mov
push
xor
outs
jecxz
clc
into
rcl
cmp
xchg
or
sbb
xchg
sub
ret
(bad)
xchg
push
aas
xor
imul
xor
inc
mov
sub
pop
ret
mov
loop
imul
and
mul
sub
and
mov
shl
cdq
cs
repnz
mov
test
and
stc
into
mov
push
cmp
jecxz
in
sbb
out
sahf
shl
cdq
cs
push
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
jb
cmp
ss
mov
shl
pop
das
mov
mov
adc
enter
cmp
xchg
and
xchg
push
jns
loop
cmp
shl
sub
and
mov
xor
int3
mov
dec
inc
xor
fidiv
add
ds
jbe
push
rcl
outs
jecxz
clc
into
and
outs
jecxz
clc
into
shl
pop
das
(bad)
jb
fbstp
and
outs
rol
cmp
(bad)
(bad)
clc
inc
loop
outs
and
push
xor
sub
out
mov
add
and
cmp
ret
mov
adc
sahf
rcl
dec
lahf
rol
into
xor
pop
outs
inc
xchg
outs
rol
into
xor
pop
outs
shl
cdq
cs
lock
inc
xchg
sub
xchg
cmp
xchg
psrlq
outs
xor
loop
dec
jle
xchg
push
mov
(bad)
bound
aas
inc
xor
into
mov
loop
mov
and
clc
inc
dec
jg
jb
(bad)
and
xor
cli
and
sub
rcl
dec
mov
(bad)
out
sub
jbe
cld
add
retf
(bad)
jo
sub
jbe
mov
and
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
bound
ret
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
add
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
bound
ret
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
push
outs
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
inc
call
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
push
outs
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
inc
call
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
and
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
inc
call
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
inc
outs
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
inc
call
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
xchg
outs
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
inc
call
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
add
pop
and
mov
xchg
pop
scas
ret
jle
push
cli
outs
jecxz
clc
into
shl
std
loopne
mov
push
mov
jb
or
add
repnz
call
and
pop
and
cs
mov
add
and
pop
aas
mov
push
cs
xor
and
pop
das
out
clc
push
bound
mov
out
or
mov
push
cmps
out
out
rcl
cs
or
jbe
into
shl
pop
jle
and
ficom
cmp
shl
das
cmps
mov
cmp
jae
fld
jb
push
loop
pop
pop
shl
sub
push
arpl
jg
nop
jl
add
sub
ss
pop
xlat
mov
into
loop
js
xor
repz
inc
sti
outs
xor
clc
das
push
and
iret
xor
xlat
jbe
cli
(bad)
arpl
xchg
es
scas
xor
(bad)
xor
das
push
jae
into
ret
push
inc
and
rcl
add
out
mov
mov
outs
repz
cli
outs
shl
sbb
adc
ins
repz
inc
fwait
jle
repz
cmpps
mov
xchg
xchg
pop
(bad)
mov
imul
inc
xor
inc
xor
mov
out
outs
rol
das
push
data16
rol
cmp
xchg
adc
jle
ss
sub
add
fdivp
add
cs
imul
inc
jb
sub
sub
and
cmp
rcl
cwde
ficom
push
sub
adc
inc
xor
das
out
imul
je
cmp
inc
mov
dec
or
inc
dec
xor
pop
das
mul
sub
and
mov
(bad)
ss
sub
xor
and
or
popa
sub
out
cmp
jb
or
inc
dec
xor
push
mov
add
or
pop
sahf
rol
aas
bnd
cmp
rcl
ins
sbb
push
cmp
push
jbe
jnp
data16
xlat
xor
iret
xor
mov
bound
jg
cmp
push
jae
fucom
and
repnz
retf
mov
mov
and
sub
and
mov
(bad)
ss
dec
div
jl
mov
into
rol
jae
xchg
cli
(bad)
repnz
(bad)
je
or
out
dec
fadd
inc
sub
(bad)
mov
cmp
xor
push
fiadd
push
mov
das
and
outs
xor
adc
pop
das
out
or
jbe
pop
rcl
call
push
sub
(bad)
inc
sti
outs
xor
clc
das
cmps
and
mov
cmp
xchg
mov
sbb
push
imul
out
imul
(bad)
nop
sub
push
bound
xor
sbb
ss
das
and
outs
xor
jae
test
push
and
jg
jbe
jmp
and
jle
jb
jl
push
cwde
jle
xchg
cmp
(bad)
inc
dec
ins
add
into
jmp
ins
dec
and
cmp
xchg
mov
or
inc
sub
xchg
ins
sbb
xchg
dec
jle
push
jns
out
mov
es
cmp
xor
push
push
xchg
cwde
out
and
clc
das
(bad)
xor
das
push
ss
(bad)
xor
bound
ins
repz
shl
ins
jmp
lods
sub
pop
mov
or
sbb
inc
sub
and
out
(bad)
inc
sti
outs
xor
clc
out
(bad)
xchg
pop
pop
add
outs
cmp
jo
cs
pusha
dec
cs
sub
and
mov
(bad)
ss
sbb
jb
lods
and
outs
inc
ss
scas
shl
cli
pop
push
jae
ins
repz
outs
add
lods
xor
shl
push
or
pop
fiadd
push
mov
loop
sub
jbe
into
rcl
or
inc
jmp
repnz
mov
push
out
scas
rol
jae
sar
into
xchg
push
jns
adc
(bad)
push
pop
or
inc
jmp
repnz
mov
push
out
scas
rol
jae
or
shl
jno
into
pop
mov
jecxz
outs
repz
jle
xchg
mov
sbb
sub
ret
cmp
xor
mov
push
fiadd
push
cli
(bad)
push
cmp
pop
xor
jg
xor
and
test
push
or
push
aaa
sub
jae
pushf
pop
adc
clc
outs
jecxz
clc
into
ret
into
out
mov
push
adc
push
jg
loop
pop
push
jb
ins
ret
xor
fidiv
jb
fdiv
ss
into
rcl
outs
jecxz
clc
into
shl
std
shl
cli
into
mov
xor
xchg
mov
jmp
cmp
xlat
imul
int
cmp
ret
mov
bound
ret
or
inc
js
and
pop
test
mov
into
shl
sub
out
call
and
ret
out
stos
(bad)
loop
clc
and
test
push
add
sbb
or
jbe
sbb
sahf
ins
xchg
data16
shl
dec
mov
repnz
cs
inc
std
sbb
repz
mov
jb
push
arpl
cmp
push
lods
inc
inc
sub
adc
(bad)
loop
pop
inc
xchg
mov
push
xor
sbb
mov
jle
ss
push
popa
std
sbb
bound
ret
fidiv
jbe
or
mov
fbstp
jbe
cmp
mov
repnz
mul
das
push
popa
std
sbb
cdq
cs
push
std
sbb
stc
ds
jl
out
jp
inc
push
js
shl
jl
out
dec
(bad)
xchg
rcl
push
and
into
inc
xchg
mov
mov
xor
ins
add
mov
xor
push
inc
cwde
inc
sar
into
xchg
es
lahf
rol
mov
arpl
dec
mov
xor
mov
mov
dec
mov
xor
ins
add
cmp
jae
mov
xor
inc
bound
out
mov
sub
mov
das
mul
sub
and
mov
(bad)
xor
sbb
dec
out
and
cs
sub
xor
cmp
je
pop
add
out
jnp
out
cmp
push
ins
sbb
mov
mov
xchg
inc
pop
fist
and
mov
out
mov
(bad)
push
sub
loop
test
xchg
jecxz
into
loop
pop
ds
in
mov
push
jge
xor
nop
mov
mov
push
data16
rcl
outs
jecxz
clc
into
shl
std
adc
(bad)
sbb
xchg
mov
or
sbb
inc
sub
add
fidiv
ss
into
adc
or
jb
cmp
sub
add
push
pop
mov
xchg
js
inc
or
add
cwde
cs
iret
ret
fidiv
bound
(bad)
je
ins
or
inc
imul
jb
jge
sub
mov
cmp
out
cwde
shl
sub
and
dec
mov
xor
ins
add
sbb
push
shl
dec
das
(bad)
adc
into
and
jp
mov
mov
(bad)
mov
jle
xor
(bad)
je
sub
rcr
push
inc
xor
inc
xchg
mov
and
dec
das
(bad)
xchg
out
adc
sub
push
inc
mov
mov
xchg
inc
call
mov
cmp
shl
into
xchg
jb
cmp
mov
mov
push
bound
inc
xchg
push
jle
jae
fdiv
xor
loopne
cmp
repz
out
(bad)
pusha
dec
sub
bound
push
lock
pop
push
mov
outs
ret
inc
cwde
mov
xchg
inc
cwde
mov
add
sub
or
shl
pop
cmp
push
and
mov
repnz
call
scas
shl
pop
add
xor
(bad)
sub
shl
fwait
jle
idiv
mov
repnz
ja
sbb
mov
sbb
xchg
push
jle
ja
or
es
outs
repz
loop
aas
inc
xchg
push
sbb
out
outs
add
dec
outs
adc
sbb
shl
pop
xlat
inc
jp
ret
(bad)
je
sub
rcr
outs
ret
inc
cwde
mov
xor
add
mov
outs
ret
inc
cwde
mov
xchg
inc
cwde
mov
add
sub
out
mov
rep
cmp
xlat
jle
xlat
bound
and
test
outs
shl
cmp
push
(bad)
clc
push
and
cmp
and
push
xchg
jb
fdiv
xor
ret
sub
inc
push
loopne
push
aaa
adc
cli
je
sbb
jecxz
push
xchg
bound
inc
xchg
js
add
into
mov
inc
xchg
pop
outs
ret
inc
cwde
mov
xor
add
mov
outs
ret
inc
cwde
mov
loop
cmp
ret
cs
jae
jl
jae
mov
xor
cmp
repnz
ret
(bad)
je
cmp
jg
jae
jle
jb
mov
adc
xchg
and
adc
xor
test
mov
mov
imul
push
ins
cli
je
sub
rcr
outs
ret
inc
cwde
mov
xor
(bad)
and
outs
and
mov
rcl
outs
jecxz
clc
into
shl
std
shl
imul
inc
xchg
push
jae
daa
or
lods
and
cs
bound
and
cmp
xchg
and
ss
pop
add
push
or
adc
jge
push
cmp
shl
pop
imul
jmp
je
sbb
bound
outs
and
mov
xor
add
mov
pop
and
mov
xchg
stc
out
(bad)
mov
cmp
adc
mov
xor
ins
add
sub
or
shl
jg
and
(bad)
je
sub
fiadd
push
sub
out
mov
push
bound
jae
shr
outs
xchg
jbe
(bad)
push
clc
outs
jecxz
clc
into
and
iret
out
mov
(bad)
push
clc
outs
jecxz
clc
into
and
iret
out
mov
lods
xor
into
clc
and
test
mov
cmp
xchg
and
xor
cmp
add
pop
imul
or
es
call
bound
jae
inc
sub
fadd
push
sub
out
clc
into
xchg
mov
cmp
xchg
mov
cli
and
test
(bad)
pusha
pop
sub
push
in
sub
je
cmp
xchg
data16
(bad)
xlat
inc
stos
fsubp
and
(bad)
je
into
sbb
ret
push
aaa
sub
jae
pushf
pop
mov
mov
outs
add
retf
cdq
cli
je
jge
xlat
jbe
ins
rcl
mov
mov
push
fdiv
xor
ret
sub
inc
stos
sub
bound
mov
pop
fdiv
xlat
pop
cmp
jbe
cli
(bad)
out
sub
repnz
mov
dec
rcl
push
adc
int3
out
mov
stos
cmps
pop
std
sub
sub
sub
shr
outs
xchg
jbe
(bad)
push
sbb
push
clc
outs
jecxz
clc
into
inc
pop
push
xor
(bad)
and
aas
xchg
push
stc
pop
ret
lods
rcl
jnp
loop
cmp
push
imul
inc
xchg
push
mov
repnz
into
adc
cmp
push
ins
imul
cmp
dec
xlat
cmps
into
sbb
push
ins
pop
ret
cmp
rol
jae
adc
loop
cmp
push
test
mov
das
jae
pushf
pop
mov
bound
push
inc
add
push
xchg
pop
fiadd
mov
sub
loop
imul
add
push
xchg
pop
fiadd
movs
into
clc
je
jmp
inc
jb
mov
add
pop
jg
inc
cmp
shl
pop
fiadd
push
mov
sub
push
dec
ffreep
xor
aas
inc
mov
dec
rcl
push
rcl
je
cmp
rol
stc
call
mov
into
ss
push
fsubp
ret
sub
mov
push
cmp
jbe
psrld
pop
fiadd
push
mov
and
adc
dec
cmp
shr
outs
xchg
jbe
(bad)
push
sbb
push
cmp
inc
mov
jle
ss
cmp
inc
cwde
inc
(bad)
out
mov
repnz
ins
rol
jns
(bad)
or
je
into
push
adc
shl
psrld
ins
jp
xor
push
inc
cmps
into
js
bound
rcl
out
xchg
es
rcl
cs
aas
mov
xchg
push
lock
cmp
and
adc
dec
cmp
shr
outs
xchg
jbe
(bad)
push
sbb
push
cmp
inc
mov
jle
ss
cmp
inc
cwde
inc
sar
int3
loop
jns
and
mov
mul
sub
and
mov
(bad)
ss
fdiv
xor
ret
stos
out
clc
into
xchg
mov
js
xchg
loopne
mov
dec
pop
push
and
xor
sub
mov
push
aas
inc
xchg
push
scas
adc
stos
data16
push
ret
daa
cmp
mov
pop
jmp
inc
cmp
xchg
out
into
rcl
jle
daa
clc
sub
push
cwde
jle
xchg
ins
cli
xor
(bad)
sub
shl
pop
outs
rol
mov
add
sub
inc
push
shl
push
add
rcl
test
imul
and
mov
xchg
mov
mov
int3
loop
jns
and
mov
push
bound
adc
sub
and
das
mul
sub
and
mov
push
bound
adc
dec
xchg
ins
cli
nop
and
cs
and
(bad)
loop
into
xor
cmp
jecxz
sub
repnz
cmp
and
jl
rcl
or
fs
or
xchg
jbe
(bad)
jecxz
push
xchg
bound
inc
xchg
js
add
mov
jge
push
cmp
rol
outs
inc
jb
jl
and
loop
ins
cmp
push
dec
sub
inc
jmp
and
ret
cmp
bound
inc
es
jg
jb
jge
push
cmp
adc
sbb
rcl
sbb
loop
pop
and
mov
(bad)
xor
push
mov
jb
push
arpl
dec
ret
loop
ds
div
sub
adc
push
and
and
sti
dec
xor
sub
dec
popf
adc
add
out
outs
xchg
jbe
(bad)
push
sub
loop
test
xchg
jecxz
into
loop
pop
ds
dec
mov
push
fist
and
mov
out
mov
outs
rol
ds
imul
push
cli
outs
jecxz
clc
into
shl
add
push
sti
xchg
ss
sbb
inc
cmp
xchg
out
out
shl
ds
test
cmps
repz
push
xchg
mov
push
rcl
je
jnp
nop
popa
push
add
shl
mov
mov
ins
xor
cmp
out
sbb
push
fwait
cmp
mov
cli
lock
or
inc
xor
jge
mov
push
add
out
outs
xchg
jbe
(bad)
daa
sbb
xchg
dec
mov
adc
dec
iret
out
mov
sti
test
xchg
fs
imul
mov
ins
rol
jl
jo
sbb
mov
sti
fadd
inc
jp
inc
test
sub
cmps
sbb
out
mov
ins
nop
loopne
sub
push
cmp
jl
lock
fwait
dec
nop
mov
jmp
inc
nop
push
xchg
mov
stos
cmp
je
or
xlat
dec
sub
cmps
cld
or
and
mov
push
ins
loope
mov
sub
data16
int3
rol
or
je
ins
imul
sbb
imul
std
sub
popa
dec
sub
xor
mov
jecxz
jg
inc
stc
outs
inc
jbe
dec
shl
push
adc
rcr
loop
js
and
das
mul
sub
and
mov
(bad)
xor
sbb
mov
push
inc
and
mul
pop
jg
mov
xlat
push
or
jb
or
bound
pop
ret
jecxz
cmp
add
iret
div
pop
push
and
mov
xor
je
mov
jb
outs
jecxz
cdq
out
xor
fidiv
inc
mov
ret
sbb
inc
fnstcw
xchg
xchg
popf
rol
retf
shl
pop
sar
mov
inc
xor
inc
xchg
push
mov
les
cmp
ret
add
dec
das
div
cmp
xchg
js
out
push
rcl
pop
mov
add
into
ret
outs
jecxz
clc
into
xor
je
cmp
ret
in
and
mov
das
jae
pushf
pop
mov
inc
js
mov
cwde
pop
xor
(bad)
and
ins
cli
shl
cs
test
push
xchg
xchg
sub
fs
(bad)
je
cmp
cmp
sub
add
lods
xor
push
adc
xchg
xor
jle
rcr
inc
jbe
fild
ret
cli
fsubp
les
je
sub
rcr
iret
out
stc
das
xchg
cmp
xor
push
xlat
jle
div
sub
bnd
dec
xor
scas
rcl
add
dec
mov
xor
jl
and
(bad)
je
sub
outs
inc
nop
js
(bad)
push
cmp
push
jae
(bad)
or
xchg
imul
loop
mov
bound
mov
push
or
jecxz
fiadd
and
inc
xchg
js
shl
sbb
xchg
and
aas
inc
jae
jl
inc
sub
xor
mov
xlat
jae
cmp
je
ins
add
cs
or
xor
jl
ja
sti
mov
ins
sbb
xchg
js
ret
sbb
jb
out
and
jmp
cli
(bad)
adc
push
xchg
or
jae
mov
xor
ins
add
dec
sub
xchg
mov
sbb
mov
dec
inc
inc
sub
repnz
out
(bad)
push
pop
in
(bad)
inc
jp
ret
(bad)
je
sbb
push
clc
outs
repz
cdq
sahf
adc
xor
sbb
movs
push
dec
and
mov
bound
dec
pop
inc
xchg
pop
into
out
mov
out
inc
push
js
rcl
pop
sbb
add
dec
mov
xor
ins
add
fsub
bound
jg
jbe
outs
shl
cmp
xchg
loop
retf
test
mov
out
scas
shl
add
lods
xor
add
pop
xor
xchg
inc
cwde
mov
add
push
shl
fidiv
and
inc
push
cmp
xchg
loop
into
ret
cmp
mov
fisub
out
jle
xor
pop
push
pop
jg
push
cli
outs
jecxz
clc
into
shl
mov
xchg
jl
push
jecxz
jle
and
cli
je
cmp
xchg
loop
retf
test
mov
out
scas
shl
psrld
dec
xlat
jb
or
out
jle
inc
sub
push
bound
out
(bad)
nop
pop
sub
not
fsubr
arpl
mov
add
out
outs
xchg
jbe
(bad)
daa
sbb
xchg
pop
ds
dec
outs
xor
sbb
mov
cmp
je
in
stos
push
out
cmp
cmps
dec
jnp
and
mov
dec
mov
xor
js
loop
into
or
pop
fiadd
clc
ds
mov
and
or
jb
fdiv
ja
cmp
jbe
cli
(bad)
out
sub
repnz
mov
pop
fiadd
(bad)
dec
sbb
push
or
xlat
inc
jp
ret
(bad)
je
ins
stos
push
push
sbb
imul
sub
sbb
xchg
sub
loop
imul
xchg
clc
ds
mov
and
jge
xor
mov
sar
ret
xor
mov
inc
cwde
inc
shr
and
mov
pop
xchg
mov
sti
je
mov
sub
or
shl
outs
repnz
ds
mov
and
jge
inc
fmul
nop
mov
pop
sahf
repnz
sbb
xchg
push
mov
(bad)
xchg
ins
stos
cmps
imul
jnp
movs
into
clc
je
jle
repnz
rol
call
mov
cdq
into
repnz
pop
mov
inc
cwde
inc
rcr
xor
rol
sti
outs
xor
push
pop
or
retf
cmps
add
pop
pop
sar
ins
add
push
dec
div
lea
in
sti
je
sub
outs
jb
push
cs
cmp
mov
jb
push
arpl
jle
xor
mov
pop
cmp
inc
mov
test
aas
xchg
sbb
xchg
pop
fiadd
cmps
into
test
es
pop
pop
ja
sub
cmps
into
test
data16
mov
pop
ja
sub
cmps
into
sbb
xchg
dec
mov
and
out
(bad)
and
cmp
bound
outs
adc
int3
xchg
bound
and
js
ret
retf
imul
mov
fadd
push
pop
push
mov
mov
adc
sub
push
xchg
pop
fiadd
mov
clc
out
jb
pop
jg
jae
push
xchg
jb
fiadd
pop
out
xor
scas
xor
add
fst
mov
dec
lock
xlat
ja
pop
xlat
aaa
mov
sti
je
into
push
repnz
pop
and
mov
out
mov
sub
pop
adc
mov
xor
mov
pop
adc
outs
jecxz
clc
into
loop
pop
fiadd
movs
into
clc
je
dec
aas
xchg
and
xchg
inc
cwde
mov
repz
jle
loop
pop
and
mov
out
mov
test
xor
loope
into
test
xor
jecxz
pop
fiadd
movs
into
clc
je
call
inc
jns
xchg
in
into
add
out
ficom
loop
movnti
stc
fidiv
xchg
pop
fiadd
movs
into
clc
je
call
and
push
pop
xor
mov
xchg
and
ss
push
or
pop
ins
ret
movs
push
pop
xor
outs
jecxz
jns
rcl
into
clc
je
jp
push
jae
int3
xchg
sub
in
push
add
pop
ds
clc
into
xchg
sbb
xchg
pop
iret
out
mov
sub
fdivr
xor
cld
je
sbb
mov
sahf
adc
xor
add
mov
aas
and
dec
mov
loop
mov
and
mov
add
push
pop
mov
xchg
dec
iret
repnz
pop
fiadd
movs
into
clc
je
jmp
test
into
add
ds
rcl
push
jecxz
cwde
mov
add
mov
and
push
ret
into
out
mov
sbb
loop
push
rol
inc
cwde
mov
adc
clc
je
pop
fadd
dec
cmp
and
into
repnz
jg
inc
cwde
inc
sar
into
loop
or
rcr
inc
xchg
pop
ds
mov
and
clc
into
rol
dec
xor
cli
je
pop
sub
bound
ret
and
mov
push
outs
rcl
stos
fisub
push
mov
fisub
clc
iret
adc
mov
not
mov
repnz
into
adc
stos
out
sbb
imul
or
sbb
xor
and
mov
ret
into
out
mov
sbb
loop
push
xor
sbb
mov
sbb
out
clc
into
repnz
dec
iret
out
mov
das
rol
cwde
mov
xor
(bad)
xor
sahf
adc
rcr
pop
mov
and
jecxz
pop
fiadd
movs
into
clc
je
lods
rcl
push
jecxz
call
jae
jg
inc
pop
fiadd
mov
and
imul
xor
jae
loop
into
out
mov
sbb
loop
(bad)
pusha
xor
into
add
sub
out
mov
or
jns
inc
inc
fdivr
je
clc
outs
ret
and
push
bound
outs
xchg
jecxz
fcom
xor
mov
out
mov
movs
into
clc
je
dec
pop
xchg
mov
sub
out
mov
movs
into
clc
je
cli
outs
repz
ret
(bad)
je
clc
outs
repz
ret
into
out
mov
movs
into
clc
je
cli
outs
xchg
loop
mov
jecxz
into
or
sub
and
pop
iret
out
mov
cmp
loop
pop
and
mov
je
cmp
xchg
inc
cwde
mov
xor
(bad)
je
cmp
rol
cmp
xchg
inc
cwde
mov
xor
(bad)
je
into
push
shl
push
fs
(bad)
je
pop
or
inc
jmp
repnz
mov
push
out
scas
rol
jae
push
sbb
inc
cwde
mov
and
sbb
xchg
cmp
add
mov
sahf
adc
iret
push
jns
adc
test
add
and
jl
jae
mov
xor
mov
outs
and
mov
and
mov
xor
mov
xchg
add
mov
iret
jo
pop
fiadd
mov
clc
out
jb
pop
fidiv
xor
xchg
jae
mov
out
mov
fidiv
es
sub
cmp
movs
into
clc
je
call
or
and
mov
xor
enter
cwde
into
xchg
pusha
pop
outs
rcl
mov
and
mov
out
mov
jb
into
clc
je
pop
fadd
test
mov
mov
iret
out
clc
into
adc
cwde
(bad)
xor
je
into
or
jae
jl
xor
adc
js
je
sub
ret
xor
add
ret
mov
xor
add
ds
ret
mov
repz
shl
cmp
arpl
outs
repz
jle
and
repz
fiadd
mov
mov
ja
dec
(bad)
ja
sub
jge
xlat
push
std
imul
dec
fcom
dec
cmp
push
dec
sub
jae
cmp
add
pop
mov
adc
sbb
movs
into
clc
je
cmp
loop
pop
and
mov
je
cli
outs
jecxz
clc
into
shl
mov
add
scas
jl
daa
test
(bad)
lods
sub
and
out
test
inc
xchg
pop
das
out
dec
jg
xor
push
and
dec
iret
xor
loopne
pop
sub
jae
cmp
mov
ds
push
jle
push
clc
outs
jecxz
clc
into
xor
(bad)
xor
je
into
sbb
loop
mov
push
imul
nop
xor
cli
je
cmp
repnz
xor
test
(bad)
and
repz
sbb
loop
mov
push
mov
and
outs
jecxz
js
arpl
pop
add
dec
outs
jecxz
js
arpl
sub
xor
mov
pop
outs
add
push
fdivp
and
loop
mov
and
into
clc
je
jp
xchg
push
stos
fsubp
ret
push
bound
repnz
push
bound
into
clc
je
call
mov
mov
and
sub
out
mov
mov
scas
fsub
bound
fiadd
pop
push
push
ret
mov
xor
sbb
movs
mov
dec
inc
sbb
ret
xor
lods
jecxz
js
mov
jb
lods
jecxz
js
mov
jb
lods
jecxz
js
mov
inc
sub
ret
mov
xor
lods
jecxz
js
mov
add
and
jp
inc
call
push
inc
xchg
sub
xchg
js
inc
or
jecxz
js
mov
bound
das
inc
inc
imul
inc
xchg
dec
mov
xor
push
shl
sbb
adc
pop
ret
push
cmp
mul
jg
jb
into
adc
mov
jb
mov
rol
pop
xchg
and
into
push
sar
das
xchg
sub
out
cmp
adc
into
add
jge
inc
call
or
pop
fiadd
pop
das
mov
cdq
(bad)
shl
cs
pop
scas
ret
jle
or
xchg
push
cli
je
lea
bound
das
xchg
sub
and
xchg
xor
loop
imul
rol
cs
in
sti
je
fwait
cs
sbb
and
push
and
and
loop
imul
add
cs
imul
add
adc
sbb
push
dec
jg
jb
into
xchg
out
pop
shl
jns
rcl
out
and
cli
je
into
mov
xor
repz
call
cs
jae
aas
shl
dec
das
cmps
bound
(bad)
jae
fild
xor
and
jg
loop
outs
adc
rcl
clc
outs
jecxz
clc
into
rol
jns
adc
sub
mov
test
and
imul
inc
sub
add
and
test
mov
jbe
into
shl
mov
push
mov
jb
or
add
repnz
ins
pop
and
(bad)
ss
outs
repnz
pop
pop
jae
dec
out
and
push
push
data16
into
xor
mov
sbb
mov
outs
shl
outs
rol
mov
out
jns
xchg
jo
sub
and
das
cmps
bound
retf
sub
jae
fild
mov
jl
xchg
push
cmp
jecxz
pushf
cs
loop
into
ret
sub
xchg
sub
(bad)
arpl
mov
jb
cmp
and
adc
inc
xchg
psrlq
push
jecxz
cdq
push
xchg
jbe
push
rol
push
adc
(bad)
inc
jnp
xor
adc
ret
inc
pop
pop
and
cs
or
jecxz
sub
push
cmp
push
jns
adc
imul
xor
call
sahf
rcl
jns
inc
xchg
ins
dec
and
sub
xor
xor
(bad)
push
cdq
(bad)
shl
cmp
or
cmps
and
inc
xor
cs
xchg
sub
(bad)
(bad)
clc
das
out
cwde
push
xor
xchg
and
cs
sub
and
add
inc
xor
das
mul
pop
fiadd
mov
sub
(bad)
mov
pop
inc
xchg
push
fild
xor
inc
xchg
push
jle
jb
out
and
push
push
data16
into
xor
mov
sbb
mov
outs
and
push
sahf
rol
push
fcmovbe
and
das
and
iret
(bad)
and
push
and
ret
jbe
push
rol
jns
adc
sub
jb
cmovae
jns
xor
inc
jbe
mov
inc
xchg
sbb
inc
xor
ret
aas
adc
js
xor
xor
outs
inc
push
cmp
rol
mov
xor
cmp
jecxz
aas
xchg
and
and
retf
stos
mov
out
cmp
jae
jl
add
rol
jae
push
imul
inc
xchg
push
into
loop
push
jle
xor
xchg
repnz
and
das
xchg
and
loop
sub
push
sar
mov
inc
xor
inc
xchg
push
jle
xor
sub
mov
push
bound
sbb
or
xor
scas
xor
xor
test
jg
jb
scas
xor
xchg
inc
cwde
mov
xchg
push
cmp
jecxz
ins
sbb
out
sahf
rol
pop
jge
xor
shl
jle
xor
retf
mov
push
xor
fdivp
and
xacquire
outs
rcl
outs
jecxz
clc
into
add
out
fisub
jecxz
mov
xor
mov
(bad)
jbe
sub
jbe
sub
jbe
sub
jae
mov
xor
into
js
xchg
dec
mov
xor
stc
sahf
inc
cmp
xchg
push
cdq
outs
add
and
ins
jp
xchg
dec
mov
xor
stc
sahf
inc
sbb
xor
into
mov
push
sub
mov
dec
mov
xor
stc
sahf
inc
or
mov
push
clc
outs
jecxz
clc
into
loop
ins
jp
xchg
dec
mov
xor
stc
sahf
inc
cmp
add
cs
outs
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
ja
sub
jmp
shl
call
xor
aad
fmul
sbb
push
mov
cmp
je
push
aam
outs
sub
(bad)
cmp
jne
jo
enter
shl
inc
ins
inc
push
dec
mov
mov
and
cmp
jp
lock
adc
sub
test
xor
jl
mov
sub
mov
cmp
scas
ss
fs
jg
outs
sub
mov
out
stc
xchg
sub
mov
fsub
popa
jl
shr
and
mov
sub
jne
cwde
or
sbb
shl
fidiv
or
sbb
rol
xchg
mov
sbb
ror
xchg
xlat
sub
mov
sub
mov
sub
mov
sub
test
or
jno
pop
jno
jmp
and
and
pusha
xchg
jle
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
inc
or
sub
xor
jmp
lds
add
stos
and
and
or
rol
pusha
cmp
outs
or
js
pop
mov
push
ret
jno
sar
adc
out
and
les
sub
popa
sub
and
mov
jp
sub
sub
jnp
js
pushf
xchg
xlat
retf
movs
test
fadd
ss
gs
sub
push
jl
scas
popa
mov
jle
fmul
and
pop
fdivr
add
and
pop
fdiv
inc
sbb
mov
jle
js
outs
sub
or
xchg
pop
or
outs
sub
or
xchg
pop
or
outs
sub
mov
outs
fadd
mov
mov
and
daa
aam
pop
lock
sub
and
pop
mov
sub
in
and
jnp
lock
data16
and
pop
mov
sub
(bad)
push
pop
or
add
shr
shl
outs
js
or
fsub
jno
cwde
mov
mov
sub
data16
sbb
jmp
and
lock
data16
test
aam
and
or
or
dec
and
pcmpeqb
jnp
je
adc
sub
js
sub
jle
aam
fiadd
fdiv
aam
push
je
add
sub
jnp
sub
cmp
pusha
xchg
jle
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
inc
or
sub
xor
jmp
lds
add
stos
and
and
or
ror
mov
mov
aam
sub
int3
ss
js
cmp
je
sub
int3
ss
mov
int3
mov
mov
movs
jnp
aam
jge
ret
ret
add
lea
or
jae
cmp
data16
and
pop
mov
and
je
sub
mov
jnp
je
sbb
xchg
ja
or
sub
xor
stos
jmp
ja
or
sub
cmp
jmp
sbb
shr
push
and
jmp
mov
scas
and
(bad)
fdivp
test
sub
gs
and
and
dec
inc
test
std
pop
fdivr
inc
fsubr
mov
jle
sbb
sub
fbld
adc
popa
mov
pop
mov
je
sub
jo
ja
or
sub
cmp
sub
stos
ror
push
push
and
sub
mov
sbb
ror
push
das
and
pop
fdiv
pusha
xchg
mov
sub
xor
jg
mov
ja
lea
leave
mov
push
or
sbb
ror
popa
and
pop
fdiv
add
outs
sub
pop
fdivr
inc
fsubr
mov
jle
sbb
sub
fbld
adc
popa
mov
pop
mov
je
sub
jo
ja
or
sub
cmp
sub
stos
ror
push
push
and
sub
mov
sbb
ror
push
das
and
pop
fdiv
pusha
xchg
mov
sub
xor
jg
mov
ja
lea
leave
mov
push
or
sbb
shl
lds
cwde
mov
and
fs
add
ja
cwde
mov
sbb
shl
int
outs
cwde
or
sbb
shl
into
js
cwde
(bad)
pop
cdq
popf
test
sbb
mov
add
rcl
aam
xor
je
sbb
xchg
ja
or
sub
xor
stos
jmp
ja
or
sub
cmp
jmp
sbb
shr
push
and
jmp
mov
scas
and
(bad)
fdivp
test
sub
adc
jo
jo
or
sub
push
xor
aam
fidiv
or
sub
adc
xor
jo
lock
or
sub
add
xor
jae
cmp
sbb
test
fcmovne
stc
add
fld
adc
sub
jnp
sub
cmp
pusha
xchg
jle
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
inc
or
sub
xor
jmp
lds
add
stos
and
and
or
ror
mov
mov
aam
sub
int3
ss
js
cmp
add
sub
int3
ss
mov
int3
mov
mov
mov
sub
lds
ret
les
add
lea
cmp
pop
das
adc
test
sub
adc
test
sub
push
adc
aam
fidiv
or
sub
adc
xor
jo
lock
or
sub
add
xor
jae
cmp
xor
or
mov
fld
adc
sub
jp
sub
shr
mov
jnp
je
sbb
xchg
ja
or
sub
xor
stos
jmp
ja
or
sub
cmp
jmp
sbb
shr
push
and
jmp
mov
scas
and
(bad)
pop
lock
sub
and
pushf
or
sbb
shl
out
outs
cwde
mov
and
fs
movs
jmp
and
fs
and
ja
cwde
or
sbb
shl
into
js
cwde
(bad)
pop
jns
test
stc
cwde
daa
(bad)
test
mov
ds
fdiv
xor
js
cmp
hlt
push
sub
int3
ss
mov
int3
mov
mov
aam
sub
(bad)
jge
push
(bad)
dec
push
xchg
(bad)
lea
adc
mov
inc
pop
lock
add
sub
and
test
cli
ja
push
pop
stc
shr
int3
mov
mov
les
aam
ss
js
cmp
hlt
push
sub
int3
ss
mov
or
sub
or
(bad)
pop
cdq
cdq
test
sbb
or
add
shl
(bad)
push
test
xor
sti
xor
(bad)
adc
sub
test
push
lds
or
sbb
shl
les
cwde
mov
and
fs
fs
ja
cwde
mov
sbb
ror
mov
pop
push
clc
sar
ror
ror
jecxz
xor
aam
outs
fmul
inc
es
and
pusha
xchg
hlt
push
sub
mov
ins
das
and
pop
fdiv
pusha
xchg
mov
xor
pushf
xor
xor
jg
jo
shr
mov
sahf
ja
sbb
sub
mov
pop
xor
js
cmp
mov
sub
int3
ss
mov
or
sub
or
(bad)
pop
cdq
popf
test
sbb
mov
add
shl
aam
xor
je
sbb
xchg
ja
or
sub
xor
stos
jmp
ja
or
sub
cmp
jmp
sbb
shr
push
and
jmp
mov
scas
and
(bad)
jle
adc
aam
adc
xor
shl
mov
pop
sub
or
sub
bound
aam
fidiv
or
sub
push
add
aam
fidiv
or
sub
adc
cmp
jo
lock
or
sub
add
cmp
jae
cmp
mov
or
xor
fld
add
sub
daa
sbb
or
add
sar
iret
mov
push
ret
jno
mov
and
pusha
fdivp
test
sub
gs
and
and
dec
inc
test
std
pop
fdivr
inc
fsubr
mov
jle
sbb
sub
out
gs
adc
mov
das
in
sbb
js
sbb
push
mov
pop
fdiv
xor
int3
ss
js
cmp
hlt
jg
aam
ss
mov
int3
mov
mov
mov
sub
lds
adc
dec
push
push
lds
push
ror
mov
push
push
je
xchg
xchg
xlat
retf
int3
mov
mov
les
aam
ss
js
cmp
push
jb
aam
ss
mov
int3
mov
mov
mov
sub
lds
adc
dec
push
push
lds
push
ror
mov
push
push
je
xchg
xchg
xlat
retf
int3
mov
mov
add
sub
int3
ss
js
cmp
and
sub
int3
ss
mov
int3
mov
mov
mov
sub
lds
adc
dec
push
push
lds
push
ror
mov
push
push
je
xchg
xchg
xlat
retf
int3
mov
mov
aam
sub
int3
ss
js
cmp
add
sub
int3
ss
mov
int3
mov
mov
mov
sub
lds
adc
dec
push
push
lds
push
ror
mov
push
push
je
xchg
xchg
xlat
retf
int3
mov
mov
add
sub
int3
ss
js
cmp
add
sub
int3
ss
mov
int3
mov
mov
mov
sub
lds
adc
dec
push
push
lds
push
ror
mov
push
push
je
xchg
xchg
xlat
retf
dec
mov
mov
jo
lock
sub
adc
aam
fidiv
or
sub
push
loop
aam
fidiv
or
sub
adc
xor
jo
lock
or
sub
add
xor
jae
cmp
mov
or
xor
fld
add
sub
sub
dec
mov
test
sub
lock
sub
and
shl
ret
cwde
mov
sbb
ror
pusha
mov
pop
push
js
jge
xor
dec
push
jae
lea
repz
mov
mov
jmp
data16
and
cwde
or
sbb
shl
fdiv
cwde
mov
and
fs
and
ja
cwde
mov
sbb
shl
(bad)
ja
cwde
or
sbb
shl
sar
(bad)
pop
cmp
aaa
pop
mov
sbb
sbb
sar
in
std
inc
fdiv
mov
mov
pop
fdivr
xor
outs
sub
pop
fdiv
add
pop
outs
sub
pop
fdiv
inc
enter
mov
jle
or
sub
out
push
adc
data16
das
out
sbb
js
dec
mov
mov
sahf
push
je
xchg
xchg
xlat
retf
sbb
dec
mov
mov
pop
xor
js
cmp
hlt
push
sub
int3
ss
mov
int3
mov
mov
aam
sub
(bad)
jge
add
push
ret
lds
push
inc
dec
mov
mov
jno
lock
add
sub
sub
dec
mov
test
sub
lock
sub
shl
aam
fidiv
or
sub
push
loop
aam
fidiv
or
sub
pop
xchg
popf
or
sbb
rol
adc
addr16
out
gs
adc
mov
das
in
std
inc
fdiv
mov
mov
inc
fdivr
test
aam
mov
mov
xchg
jle
aam
ss
js
cmp
xor
sub
int3
ss
mov
or
sub
or
(bad)
pop
cmp
aaa
pop
mov
sbb
add
rcr
in
std
inc
fdiv
mov
mov
pop
fdiv
xor
js
cmp
mov
sub
int3
ss
mov
or
sub
or
(bad)
pop
cmp
aaa
pop
mov
sbb
add
rcr
in
std
inc
fdiv
mov
mov
ret
popa
js
jl
jnp
jae
or
data16
jl
dec
mov
add
je
add
sub
sbb
push
mov
ret
popa
js
hlt
push
cs
dec
dec
std
jl
(bad)
(bad)
stos
adc
js
hlt
clc
rcl
jnp
cs
dec
dec
std
jl
inc
aad
adc
js
hlt
js
sar
cs
dec
dec
std
jnp
lea
and
dec
std
je
lock
aam
mov
xlat
sub
ja
sbb
sub
movs
test
fadd
mov
(bad)
xor
sbb
(bad)
jle
add
sub
jl
sub
mov
pop
lock
sbb
data16
jl
pop
add
push
fwait
ja
push
inc
sub
jae
sub
dec
(bad)
es
bound
shr
in
imul
jmp
adc
or
cmp
lds
rcr
jg
imul
and
jmp
add
lods
ss
je
sbb
ss
aam
outs
cwde
jmp
sbb
(bad)
mov
test
jns
or
or
sar
dec
and
ds
fdiv
ds
sahf
ja
lea
leave
mov
push
fistp
in
jno
mov
xor
ja
sbb
or
shl
pop
jne
jmp
xchg
and
ror
js
je
sub
jo
cwde
mov
lock
mov
fisttp
push
inc
sub
je
and
lods
ss
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
jnp
ja
sub
and
cmovae
jg
sub
ds
lahf
jnp
ja
sub
and
iret
inc
std
jp
lock
data16
test
rcr
outs
fmul
inc
es
inc
or
sub
xor
mov
push
cs
sahf
ja
adc
push
mov
sub
hlt
test
aam
pop
sub
fdivr
ja
sbb
and
cmp
pusha
xchg
push
push
sub
lock
ja
or
sub
xor
dec
outs
clc
push
cs
sahf
ja
adc
push
mov
sub
hlt
test
aam
pop
sub
fdivr
ja
sbb
and
cmp
pusha
xchg
xchg
jle
aam
fwait
ja
or
sub
xor
retf
mov
sub
jnp
ja
sub
and
pop
jo
ja
or
sub
xor
jp
jnp
test
and
pop
fdiv
pusha
xchg
mov
sub
ret
push
in
xor
inc
imul
je
and
lea
leave
mov
mov
jnp
je
sbb
std
pop
fdiv
pusha
xchg
xchg
ror
int
pop
sub
fdivr
ja
sbb
and
cmp
pusha
xchg
je
sub
lock
ja
or
sub
xor
retf
pop
test
xor
in
fwait
ja
sub
and
pop
jo
ja
or
sub
cmp
sub
stos
ror
push
push
and
sub
mov
sbb
rol
(bad)
mov
sub
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
xchg
ret
push
call
ror
dec
mov
mov
and
fcmovnbe
ja
fimul
es
outs
sub
stos
ror
outs
es
and
sub
mov
sbb
shl
push
and
push
mov
sbb
shl
push
and
jmp
(bad)
cs
xor
and
hlt
rcr
jo
ja
or
sub
xor
jmp
xchg
ja
or
sub
xor
push
jo
fmul
data16
xor
jmp
xchg
ja
or
sub
xor
mov
jo
fmul
jge
pop
aaa
and
add
test
ja
aam
xor
mov
mul
je
and
lea
mov
cmp
fdivr
cs
ja
fisttp
lea
dec
mov
cmp
mov
mov
ror
push
xlat
cmp
rcr
xchg
mov
ror
push
xlat
cmp
ds
cs
xlat
outs
fisttp
lea
dec
mov
and
and
inc
es
inc
or
sub
xor
mov
lods
xor
ja
in
fwait
ja
sub
and
pop
jle
ja
lea
or
fs
xor
jg
ja
sbb
sub
sub
and
and
fdivr
ja
pop
inc
sub
js
xchg
ret
push
and
ins
ja
jg
ja
pop
inc
sub
js
ror
jnp
push
and
ins
ja
jg
ja
sbb
sub
and
lea
xor
ja
sbb
xchg
xor
jbe
dec
jl
outs
sub
test
sbb
bound
mov
add
xor
lea
leave
fwait
push
push
shl
push
pop
aad
push
mov
shr
fs
mov
sti
pusha
(bad)
cmp
fs
out
jl
sub
and
lock
jl
sub
adc
push
mov
push
xlat
sub
out
and
inc
xlat
jle
sbb
jg
jbe
je
sub
push
fwait
ja
or
sub
xor
or
jo
fmul
data16
xor
push
jo
fmul
data16
cmp
or
daa
push
mov
sbb
rol
push
out
js
ror
jnp
push
shl
cwde
cmps
mov
and
fdiv
ja
adc
je
(bad)
aaa
test
data16
cmp
sub
stos
ror
push
push
and
sub
mov
sbb
ror
push
das
and
pop
fdiv
pusha
xchg
mov
sub
xor
jg
mov
ja
sbb
and
(bad)
sahf
ja
lea
or
movs
add
sar
js
jl
sub
mov
outs
fadd
cmp
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
pop
jnp
ja
sub
and
iret
inc
std
jo
ja
or
sub
xor
or
xor
pushf
xor
cmp
jno
lea
fdivr
and
ins
ja
jle
ja
sbb
and
jmp
add
in
and
jae
jo
shl
aam
xor
mov
mul
je
and
lea
mov
cmp
ds
cs
xlat
outs
fisttp
lea
dec
mov
cmp
fdivr
cs
xchg
mov
ror
push
mov
and
inc
es
inc
or
sub
xor
cli
shl
jno
call
sbb
mov
sub
xchg
add
ror
dec
inc
std
jae
jo
shl
aam
xor
mov
mul
je
and
lea
mov
cmp
ds
cs
xlat
outs
fisttp
lea
dec
mov
cmp
rcr
xchg
mov
ror
push
mov
and
inc
es
inc
or
sub
xor
or
mov
sub
jnp
ja
sub
and
pop
jo
ja
or
sub
xor
push
mov
mov
pushf
xor
jno
jmp
mov
sub
xchg
add
ror
cmp
out
fisttp
inc
es
push
in
and
inc
imul
je
and
lea
leave
mov
and
and
inc
es
inc
or
sub
xor
mov
cmp
in
fwait
ja
sub
and
pop
jp
lock
data16
daa
mov
and
inc
es
inc
or
sub
xor
retf
sub
in
fwait
ja
sub
and
pop
jnp
xchg
and
pusha
xchg
aaa
out
fisttp
inc
es
push
adc
xor
inc
imul
je
and
lea
leave
mov
and
and
inc
es
inc
or
sub
xor
or
jb
cwde
jno
jmp
and
sub
xchg
add
ror
sbb
std
pop
fdiv
pusha
xchg
adc
sub
ret
push
in
xor
inc
imul
je
and
lea
leave
mov
and
and
inc
es
inc
or
sub
xor
mov
jb
cwde
jno
jmp
mov
push
ror
fmul
mov
jnp
je
sbb
std
pop
fdiv
pusha
xchg
xchg
gs
ret
push
les
xor
inc
imul
je
and
lea
leave
mov
and
and
inc
es
inc
or
sub
xor
or
jb
cwde
jno
jmp
mov
sub
xchg
add
ror
sbb
xchg
ja
or
sub
xor
stos
jmp
ja
or
sub
xor
dec
fidiv
fmul
data16
xor
mov
jo
fmul
jno
pop
cmp
stc
mov
cwde
lods
int
sahf
ja
sub
and
cmovge
jp
lock
data16
daa
dec
fimul
ins
es
push
mov
mov
pushf
xor
daa
aam
fimul
int
pop
sub
fdivr
ja
sbb
and
cmp
pusha
xchg
aam
sub
lock
ja
or
sub
xor
push
jb
cwde
jno
in
mov
mov
sub
xchg
add
ror
sbb
std
pop
fdiv
pusha
xchg
aam
sub
ret
push
test
xor
inc
imul
je
and
lea
leave
mov
and
and
inc
es
inc
or
sub
xor
sbb
jb
cwde
jno
jmp
mov
sub
xchg
add
ror
sbb
std
pop
fdiv
pusha
xchg
add
sub
ret
push
test
xor
inc
imul
je
and
lea
leave
mov
and
and
ins
es
push
mov
mov
pushf
xor
cmp
je
lea
lock
pop
sub
fdivr
ja
sbb
and
cmp
pusha
xchg
aaa
out
fisttp
gs
fstp
test
add
in
fwait
ja
sub
and
pop
jo
ja
or
sub
cmp
push
daa
stos
ror
ins
es
and
sub
mov
sbb
shl
push
and
push
mov
sbb
shl
push
and
jmp
jmp
rcr
mov
cs
mov
(bad)
movs
ja
fmul
lea
dec
mov
push
xlat
cmp
fdivr
cs
xor
and
jnp
ja
sub
and
cmovae
jo
ja
or
sub
xor
mov
and
std
pop
fdiv
pusha
xchg
push
jge
aam
retf
scas
push
fs
xor
inc
imul
je
and
lea
leave
mov
cmp
rcr
xchg
mov
ror
push
xlat
cmp
fdivr
cs
ins
fisttp
lea
dec
mov
and
and
dec
ds
jae
or
cmc
cwd
mov
and
push
call
xor
cmp
jnp
test
and
pop
fdiv
pusha
xchg
push
jge
aam
dec
lods
and
sub
jnp
ja
sub
and
pop
jle
ja
lea
or
mov
push
fiadd
mov
mov
and
and
jo
ja
or
sub
xor
call
std
pop
fdiv
pusha
xchg
je
sub
(bad)
jmp
(bad)
mov
mov
xlat
push
and
hlt
test
aam
out
out
(bad)
jno
sbb
mov
sub
push
add
ror
cmp
out
fisttp
dec
es
(bad)
mov
mov
xlat
push
and
hlt
test
aam
out
out
(bad)
jno
sbb
mov
sub
push
add
ror
mov
and
jl
jo
ja
or
sub
xor
or
jo
fmul
data16
xor
stos
clc
jo
fmul
data16
xor
stos
fidiv
fmul
data16
xor
sub
jo
fmul
jp
pop
xor
sub
jo
ja
or
sub
xor
sbb
jo
fmul
data16
xor
pop
clc
jo
fmul
data16
xor
mov
mov
ja
or
sub
xor
fcmovb
jo
fmul
jns
pop
xor
sub
add
xchg
sub
xor
or
jo
fmul
data16
xor
stos
clc
jo
fmul
data16
xor
or
jo
fmul
data16
xor
sbb
jo
fmul
jp
pop
xor
sub
jo
ja
or
sub
xor
mov
mov
data16
xor
cmp
jo
fmul
data16
xor
sub
jo
fmul
data16
xor
retf
outs
fmul
jge
pop
xor
sub
hlt
add
xchg
sub
xor
mov
jo
fmul
data16
xor
sub
jo
fmul
data16
xor
cmp
jo
fmul
data16
xor
cli
shl
mov
push
sub
pop
pop
fdiv
pop
fdiv
or
or
push
les
sub
lods
ss
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
ja
sub
and
iret
inc
std
jno
lock
add
sub
aaa
dec
sbb
sbb
rcr
in
popf
pop
fdiv
js
mov
jnp
je
cmp
out
fisttp
outs
es
sar
test
push
ja
in
fwait
ja
sub
and
pop
jl
xchg
mov
jle
ret
mov
jnp
je
cmp
out
fisttp
outs
es
rcr
test
push
ja
in
fwait
ja
sub
and
pop
jle
ja
lea
or
fdiv
sar
ja
sbb
sub
sub
and
and
fdivr
ja
pop
inc
sub
js
add
loopne
out
jnp
sub
and
fdivr
ja
pop
inc
sub
js
ror
jnp
push
and
ins
ja
jg
ja
sbb
sub
mov
outs
fadd
xor
je
cmp
out
fisttp
imul
sub
stos
loop
ja
in
fwait
ja
sub
and
pop
jo
ja
or
sub
xor
jmp
std
pop
fdiv
pusha
xchg
je
sub
ret
push
and
xor
inc
imul
je
and
lea
leave
mov
and
and
es
outs
sub
mov
pushf
xor
cmp
jbe
lea
jnp
sub
fdivr
ja
sbb
inc
mov
sub
dec
mov
mov
and
and
jo
ja
or
sub
xor
jmp
std
pop
fdiv
pusha
xchg
mov
sub
ret
push
xchg
inc
xor
inc
imul
je
and
lea
leave
mov
and
and
es
outs
sub
mov
pushf
xor
daa
aam
fimul
int
pop
sub
fdivr
ja
sbb
and
cmp
pusha
xchg
mov
sub
lock
ja
or
sub
xor
push
jb
cwde
jno
out
outs
out
push
ror
fmul
in
and
jno
lock
add
sub
daa
pop
fisttp
es
outs
sub
mov
pushf
xor
and
(bad)
lock
sbb
jnp
sub
fdivr
ja
sbb
rcr
add
sub
daa
dec
fimul
es
outs
sub
mov
pushf
xor
and
xor
mov
and
ins
ja
jle
ja
sbb
and
cmp
pusha
xchg
mov
sub
lock
ja
or
sub
xor
sub
jb
cwde
jno
out
out
in
popa
push
ror
fmul
mov
scas
and
std
jbe
jo
shl
lea
or
mul
je
and
lea
mov
cmp
xor
jmp
and
xchg
outs
fisttp
lea
dec
mov
cmp
rcr
xchg
mov
ror
push
mov
and
imul
sub
mov
pushf
xor
cmp
je
lea
jnp
sub
fdivr
ja
sbb
and
jmp
add
in
in
jns
lock
adc
sub
test
jo
je
clc
mov
sar
ja
sbb
sub
sub
and
and
fdivr
ja
pop
inc
sub
js
xchg
ret
push
and
ins
ja
jg
ja
pop
inc
sub
js
ror
jnp
push
and
ins
ja
jg
ja
sbb
and
cmp
pusha
xchg
xlat
out
fisttp
inc
es
push
add
xor
inc
imul
je
and
lea
leave
mov
and
and
ins
es
and
stos
ror
push
push
and
sub
mov
sbb
rol
push
das
and
pop
fdiv
pusha
xchg
dec
cdq
jo
dec
ins
fs
outs
bound
jnp
mov
ficomp
jmp
ror
fmul
mov
jnp
je
sbb
xchg
ja
or
sub
xor
retf
outs
fmul
data16
cmp
retf
push
mov
sbb
shr
push
and
jmp
jmp
rcr
mov
cs
and
sub
lock
xlat
sub
and
cmovge
jle
ja
lea
or
int3
outs
sub
mov
dec
fadd
mov
mov
and
js
jae
jo
shl
aam
xor
mov
mul
je
and
lea
mov
cmp
ds
cs
xlat
outs
fisttp
lea
dec
mov
cmp
rcr
xchg
mov
ror
push
or
add
ror
pushf
js
jnp
sub
cmp
pusha
xchg
ficomp
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
jo
ja
or
sub
xor
sub
jo
fmul
jno
pop
cmp
stc
mov
outs
sub
xor
mov
sub
adc
add
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
jo
ja
or
sub
xor
sub
jo
fmul
jno
pop
cmp
stc
mov
outs
sub
xor
mov
sub
adc
add
in
adc
xchg
data16
je
sub
push
and
jo
ja
or
sub
cmp
mov
stos
ror
pusha
es
and
sub
mov
sbb
rol
push
das
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
pop
daa
aam
out
dec
and
mov
ror
push
mov
and
pusha
es
and
stos
ror
ins
es
and
sub
mov
sbb
rol
push
das
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
or
and
ins
ja
jno
ja
sbb
inc
xchg
inc
sub
ins
mov
mov
jb
js
mov
jnp
je
sbb
xchg
ja
or
sub
xor
sub
jo
fmul
data16
cmp
or
daa
push
mov
sbb
shr
push
and
jmp
jmp
rcr
mov
cs
xchg
fs
lock
jnp
ja
sub
and
cmovge
je
out
ja
cmp
add
shl
sub
test
push
fdiv
fmul
inc
es
and
pusha
xchg
je
sub
mov
ins
das
and
pop
fdiv
pusha
xchg
pop
popf
jo
mov
mov
pushf
xor
xor
jg
jo
dec
ins
fs
outs
bound
jnp
mov
push
(bad)
test
sub
and
ins
ja
jno
ja
sbb
and
cmp
pusha
xchg
aam
sub
mov
in
and
pusha
xchg
je
sub
mov
ins
das
and
pop
fdiv
pusha
xchg
pop
popf
jo
mov
mov
pushf
xor
xor
jg
jo
dec
ins
fs
outs
bound
jnp
mov
dec
push
aam
xor
mov
sub
adc
add
in
xor
jp
lock
sub
test
sbb
outs
fmul
inc
es
and
pusha
xchg
je
sub
mov
ins
das
and
pop
fdiv
pusha
xchg
pop
popf
jo
mov
mov
pushf
xor
xor
jg
jo
dec
ins
fs
outs
bound
jnp
mov
inc
jl
test
sti
jne
and
ins
ja
jno
ja
sbb
and
cmp
pusha
xchg
aam
sub
mov
in
and
pusha
xchg
je
sub
mov
ins
das
and
pop
fdiv
pusha
xchg
pop
popf
jo
mov
mov
pushf
xor
xor
jg
jo
dec
ins
fs
outs
bound
jnp
mov
(bad)
jle
test
jmp
sub
and
fdiv
ja
sbb
inc
xchg
arpl
aam
mov
mov
jl
fadd
xor
je
sbb
xchg
ja
or
sub
xor
sub
jo
fmul
data16
cmp
or
daa
push
mov
sbb
shr
push
and
jmp
jmp
rcr
mov
cs
pop
jmp
fmul
lea
dec
mov
push
mov
and
pusha
es
and
stos
ror
ins
es
and
sub
mov
sbb
rol
push
das
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
sbb
aam
out
push
mov
je
and
lea
dec
mov
push
jp
xor
aam
outs
fmul
sbb
sub
mov
jle
test
jg
aam
cmp
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
ja
sub
and
iret
inc
std
jo
ja
or
sub
cmp
mov
stos
ror
pusha
es
and
sub
mov
sbb
rol
push
das
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
fsub
aam
out
outs
jmp
and
lea
dec
mov
push
mov
and
pusha
es
and
stos
ror
ins
es
and
sub
mov
sbb
rol
push
das
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
cmp
aam
out
cs
addr16
mov
ror
push
mov
xchg
ja
sbb
sub
and
int
outs
fisttp
loope
lods
fimul
fmul
inc
ins
outs
outs
bound
aam
xor
mov
fmul
dec
ins
fs
outs
bound
fisttp
fmul
mov
jnp
je
sbb
std
pop
fdiv
pusha
xchg
aam
lea
jnp
sub
fdivr
ja
sbb
and
jmp
add
dec
mov
mov
cmp
aam
xor
mov
mul
je
and
lea
mov
cmp
ds
cs
xlat
outs
fisttp
lea
dec
mov
cmp
rcr
xchg
mov
ror
push
or
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
ja
sub
and
iret
inc
std
jo
ja
or
sub
cmp
dec
and
stos
ror
es
outs
sub
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
pop
popf
jo
dec
ins
fs
outs
bound
jmp
cmp
jp
shr
mov
mov
ja
sub
and
cmovge
je
push
fnsave
cmp
add
shl
sub
and
ss
mov
(bad)
and
ins
ja
jno
ja
sbb
fs
lock
data16
jae
sub
test
sahf
jg
push
mov
ror
push
dec
dec
mov
mov
int3
iret
cs
aas
out
pop
jle
push
mov
ror
push
mov
mov
jne
js
shr
mov
or
sub
and
cmovge
jle
ja
lea
or
in
and
ins
fild
and
int
outs
fisttp
loope
lods
fimul
fmul
inc
ins
outs
outs
bound
aam
xor
mov
fmul
dec
ins
fs
outs
bound
fisttp
fmul
les
xor
jg
ja
sbb
sub
sub
and
and
fdivr
ja
pop
inc
sub
js
xchg
ret
push
and
ins
ja
jg
ja
pop
inc
sub
js
ror
jnp
push
and
ins
ja
jg
ja
sbb
sub
mov
jle
mov
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
cmp
or
sub
adc
cmp
rcr
mov
push
and
cmp
pusha
xchg
ficomp
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
cmp
or
sub
adc
cmp
rcr
mov
cs
pxor
jns
push
mov
ror
push
mov
xchg
ja
sbb
inc
add
sub
dec
mov
mov
and
and
(bad)
shl
aam
xor
mov
mul
je
and
lea
mov
cmp
ds
cs
xlat
outs
fisttp
lea
dec
mov
cmp
rcr
xchg
mov
ror
push
mov
xchg
ja
sbb
sub
mov
push
fiadd
ss
fs
jg
outs
sub
xchg
mov
ror
pop
js
jne
jnp
arpl
test
ja
aam
xor
mov
mul
je
and
lea
mov
cmp
ds
cs
xlat
outs
fisttp
lea
dec
mov
cmp
rcr
xchg
mov
ror
push
or
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
ja
sub
and
iret
inc
std
jl
bound
jmp
and
mov
and
inc
es
and
pusha
xchg
mov
sub
mov
ins
das
and
pop
fdiv
push
das
and
pop
fdiv
call
out
js
ror
jnp
push
shl
dec
fisttp
lea
dec
mov
push
mov
xchg
ja
adc
les
in
bound
rcl
daa
aam
ds
je
outs
sub
int3
jo
sar
ins
fadd
cmp
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
ja
sub
and
iret
inc
std
jne
lock
imul
daa
stc
fimul
push
outs
sub
stos
ror
push
push
and
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
js
aam
out
dec
retf
addr16
mov
ror
push
mov
mov
outs
fadd
xor
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
xor
sub
jo
fmul
jno
pop
cmp
stc
mov
outs
sub
xor
mov
sub
adc
add
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
xor
sub
jo
fmul
jno
pop
cmp
stc
mov
cmp
into
jnp
ja
sub
and
cmovge
je
(bad)
mov
test
shr
dec
and
cmp
pusha
xchg
hlt
bound
aam
ss
and
pusha
xchg
xor
sub
mov
ins
das
and
pop
fdiv
pusha
xchg
fistp
mov
pushf
xor
xor
jg
jo
dec
ins
fs
outs
bound
jnp
mov
push
push
aam
xor
mov
sub
adc
add
in
inc
aam
outs
lock
fs
hlt
test
lock
fmul
push
outs
sub
stos
ror
imul
xchg
ins
outs
sub
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
mov
out
nop
addr16
mov
ror
push
mov
and
es
outs
sub
stos
ror
popa
es
and
sub
mov
sbb
rol
mov
ss
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
fdiv
mov
push
mov
ror
push
mov
mov
pop
js
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
xor
sub
jo
fmul
jno
pop
cmp
stc
mov
outs
sub
xor
mov
sub
adc
add
in
jl
jne
lock
fs
xchg
daa
stc
fimul
push
outs
sub
stos
ror
imul
xchg
ins
outs
sub
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
cmp
inc
addr16
mov
ror
push
cli
cmp
sub
mov
ds
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
xor
sub
jo
fmul
jno
pop
cmp
stc
mov
outs
sub
xor
mov
sub
adc
add
in
outs
aam
outs
lock
fs
mov
stc
fimul
push
outs
sub
stos
ror
imul
xchg
ins
outs
sub
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
push
out
outs
addr16
mov
ror
push
cmp
aam
popf
cmp
jb
js
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
xor
sub
jo
fmul
jno
pop
cmp
stc
mov
test
into
jnp
ja
sub
and
cmovge
je
(bad)
jecxz
outs
sub
jg
sar
ds
fdiv
pusha
xchg
hlt
bound
aam
ss
and
pusha
xchg
xor
sub
mov
ins
das
and
pop
fdiv
pusha
xchg
fistp
mov
pushf
xor
xor
jg
jo
dec
ins
fs
outs
bound
jnp
mov
mov
jae
test
mov
ins
ja
jno
ja
sbb
inc
movs
pop
sub
jg
fcmovnb
arpl
test
cwde
ja
or
sub
xor
stos
fdiv
fmul
data16
xor
push
jo
fmul
data16
cmp
mov
push
mov
sbb
shr
push
and
jmp
jmp
rcr
mov
cs
push
in
pop
add
fmul
lea
dec
mov
push
cmp
aam
popf
cmp
jb
js
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
xor
sub
jo
fmul
jno
pop
cmp
stc
mov
outs
sub
xor
mov
sub
adc
add
in
or
jne
lock
fs
fs
or
mov
and
push
outs
sub
stos
ror
imul
xchg
ins
outs
sub
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
js
sbb
ja
jno
ja
sbb
inc
movs
jne
aam
mov
lds
call
xchg
sub
xor
stos
fdiv
fmul
data16
xor
push
jo
fmul
data16
cmp
mov
push
mov
sbb
shr
push
and
jmp
jmp
rcr
mov
cs
(bad)
jmp
cmp
fmul
lea
dec
mov
push
cmp
aam
popf
cmp
jb
js
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
xor
sub
jo
fmul
jno
pop
cmp
stc
mov
outs
sub
xor
mov
sub
adc
add
in
and
daa
fs
xor
or
mov
and
push
outs
sub
stos
ror
imul
xchg
ins
outs
sub
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
dec
and
jle
pop
das
addr16
mov
ror
push
or
fcmovnb
arpl
test
cwde
ja
or
sub
xor
stos
fdiv
fmul
data16
xor
push
jo
fmul
data16
cmp
mov
push
mov
sbb
shr
push
and
jmp
jmp
rcr
mov
cs
and
sub
lock
sub
jnp
ja
sub
and
cmovge
jle
ja
lea
or
sbb
sub
mov
dec
daa
aam
sahf
js
ins
outs
sub
jle
int
outs
fisttp
loope
lods
fimul
fmul
inc
ins
outs
outs
bound
aam
xor
mov
fmul
dec
ins
fs
outs
bound
fisttp
fmul
mov
jnp
je
sbb
xchg
ja
or
sub
xor
jmp
xchg
ja
or
sub
cmp
mov
push
mov
sbb
rol
push
out
js
ror
jnp
push
or
jg
rcl
push
lea
fwait
ja
sub
and
cmovge
jo
ja
or
sub
xor
stos
fdiv
fmul
data16
xor
stos
jmp
ja
or
sub
cmp
mov
push
mov
sbb
shr
push
and
jmp
jmp
rcr
mov
cs
fs
lock
into
jnp
ja
sub
and
cmovge
jo
ja
or
sub
cmp
mov
stos
ror
es
outs
sub
sub
mov
sbb
shr
push
and
push
mov
sbb
shr
push
and
jmp
jmp
rcr
xor
je
mov
outs
movs
mov
sub
adc
add
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
and
jg
jo
mov
mov
pushf
xor
xor
jg
jo
dec
ins
fs
outs
bound
or
into
cs
in
sub
or
sub
and
dec
std
jle
ja
lea
or
cmp
sub
mov
scas
fadd
cmp
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
ja
sub
and
iret
inc
std
jo
ja
or
sub
cmp
mov
stos
ror
es
outs
sub
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
lahf
lahf
jo
dec
ins
fs
outs
bound
or
into
cs
(bad)
push
fisttp
lea
dec
mov
push
mov
and
push
outs
sub
stos
ror
push
push
and
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
js
aam
out
dec
retf
addr16
mov
ror
push
mov
and
inc
es
and
pusha
xchg
mov
sub
mov
ins
das
and
pop
fdiv
pusha
xchg
adc
sub
mov
sub
and
pop
fdiv
pusha
xchg
xor
sub
xchg
lods
out
js
ror
jnp
push
or
test
rcl
push
lea
sub
and
cmovge
jo
ja
or
sub
xor
stos
fdiv
fmul
data16
xor
stos
jmp
ja
or
sub
xor
dec
fnsave
fmul
data16
xor
sub
jo
fmul
jno
pop
cmp
sub
gs
shl
mov
aam
push
fisttp
lea
dec
mov
push
mov
xchg
ja
sbb
inc
in
sub
ins
mov
mov
jl
fadd
cmp
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
ja
sub
and
iret
inc
std
jo
ja
or
sub
cmp
mov
stos
ror
es
outs
sub
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
lahf
lahf
jo
dec
ins
fs
outs
bound
or
into
cs
(bad)
push
fisttp
lea
dec
mov
push
mov
and
push
outs
sub
stos
ror
push
push
and
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
je
sub
xchg
lods
out
js
ror
jnp
push
shl
js
aam
out
dec
retf
addr16
mov
ror
push
mov
xchg
ja
sbb
inc
movs
js
aam
cmp
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
ja
sub
and
iret
inc
std
jo
ja
or
sub
cmp
mov
stos
ror
es
outs
sub
sub
mov
sbb
rol
jbe
ss
and
pop
fdiv
pusha
xchg
lahf
lahf
jo
dec
ins
fs
outs
bound
or
into
cs
(bad)
push
fisttp
lea
dec
mov
push
mov
xchg
ja
sbb
sub
and
int
outs
fisttp
loope
lods
fimul
fmul
inc
ins
outs
outs
bound
aam
xor
mov
fmul
dec
ins
fs
outs
bound
fisttp
fmul
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
xor
sub
jo
fmul
jno
pop
cmp
stc
mov
sub
xor
mov
sub
adc
add
mov
scas
and
std
je
fdiv
sbb
add
sar
sahf
js
jnp
sub
cmp
pusha
xchg
ficomp
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
fmul
data16
xor
sub
jo
fmul
jno
pop
cmp
cmp
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
ja
sub
and
iret
inc
std
jl
cs
(bad)
jmp
fmul
lea
dec
mov
push
mov
xchg
ja
sbb
and
cmp
pusha
xchg
jle
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
xor
jg
jo
mov
mov
pushf
xor
xor
jg
jo
inc
ins
fs
stos
outs
push
push
inc
sbb
clc
jle
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
sub
and
cmovae
jg
sub
aas
movs
and
jnp
ja
sub
and
iret
inc
std
jo
ja
or
sub
cmp
sub
stos
ror
inc
es
das
and
pop
fdiv
pusha
xchg
je
sub
mov
sub
and
pop
fdiv
pusha
xchg
mov
sub
xchg
lods
out
js
and
je
push
and
test
or
and
ins
ja
jno
ja
sbb
and
cmp
pusha
xchg
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
xor
jg
jo
mov
mov
pushf
xor
xor
jg
jo
inc
ins
fild
cmps
xchg
jb
and
jo
adc
push
push
adc
xor
mov
sub
adc
add
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
xor
jg
jo
mov
mov
pushf
xor
xor
jg
jo
inc
ins
fild
cmps
xchg
jb
and
jo
adc
ds
je
xor
mov
sub
adc
add
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
xor
jg
jo
mov
mov
pushf
xor
xor
jg
jo
inc
ins
fild
cmps
xchg
jb
and
jo
adc
out
push
fs
ror
fmul
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
xor
jg
jo
mov
mov
pushf
xor
xor
jg
jo
inc
ins
fild
cmps
xchg
jb
and
jo
adc
cs
movs
aad
ror
fmul
mov
jnp
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
xor
jg
jo
mov
mov
pushf
xor
xor
jg
jo
inc
ins
fild
cmps
xchg
jb
and
jo
adc
pop
push
movs
shl
ror
fmul
dec
mov
mov
xor
sub
xor
pop
out
outs
fmul
data16
xor
stos
jmp
ja
or
sub
xor
sub
jo
fmul
data16
xor
jmp
push
sub
xor
sub
sar
cli
mov
sub
xlat
sub
and
cmovge
jle
ja
lea
or
in
and
jg
js
jnp
sub
cmp
pusha
xchg
jle
jo
mov
jnp
je
sbb
xchg
ja
or
sub
xor
sub
jo
fmul
data16
xor
jmp
push
sub
xor
sub
rcl
mov
sub
lea
or
mul
je
and
lea
mov
cmp
ds
cs
xlat
outs
fisttp
lea
dec
mov
cmp
rcr
xchg
mov
ror
push
and
test
or
and
ins
ja
jno
ja
sbb
and
jmp
add
in
sbb
jns
lock
adc
sub
test
xor
ja
fmul
inc
es
and
pusha
xchg
hlt
jg
aam
ss
das
and
pop
fdiv
pusha
xchg
je
sub
mov
sub
and
pop
fdiv
pusha
xchg
mov
sub
xchg
lods
out
js
xchg
ret
push
sbb
add
mov
fisttp
loope
lods
fimul
fmul
inc
ins
outs
outs
bound
aam
xor
mov
fmul
dec
ins
fs
outs
bound
fisttp
fmul
sar
cli
mov
or
xlat
sub
and
cmovge
jle
ja
lea
or
pop
outs
sub
mov
dec
fadd
xor
je
cmp
sahf
jo
mov
jnp
je
cmp
sahf
jo
mov
mov
pushf
xor
xor
jg
jo
mov
mov
pushf
xor
xor
jg
jo
inc
ins
outs
outs
bound
push
les
lods
ss
jle
push
and
dec
inc
std
jle
jo
jnp
ja
sub
and
iret
inc
std
jg
sub
xor
sub
fwait
ja
sub
and
cmovae
jg
sub
cmp
ja
sub
and
iret
inc
std
jl
jle
and
outs
addr16
mov
ror
push
mov
xchg
ja
sbb
inc
adc
sub
dec
mov
mov
and
and
jo
ja
or
sub
xor
or
jo
fmul
data16
xor
mov
jo
fmul
data16
xor
sub
jo
fmul
data16
xor
jmp
push
sub
xor
sub
sar
shl
aam
xor
mov
mul
je
and
lea
mov
cmp
ds
cs
xlat
outs
fisttp
lea
dec
mov
cmp
rcr
xchg
mov
ror
push
and
test
retf
ja
and
ins
ja
jno
ja
sbb
and
jmp
add
in
and
inc
adc
sub
test
mov
mov
and
imul
sub
stos
ror
es
outs
sub
sub
mov
sbb
shr
push
and
push
mov
sbb
shr
push
and
jmp
jmp
repz
aam
mov
jae
fmul
sbb
sub
and
fisttp
loope
lods
fimul
fmul
inc
ins
outs
outs
bound
aam
xor
mov
fmul
dec
ins
fs
outs
bound
fisttp
fmul
sar
cli
mov
xchg
int
sahf
ja
sub
and
cmovge
jle
ja
lea
or
jae
fisttp
pop
inc
sub
jno
push
(bad)
lea
mov
mov
ss
fimul
fmul
mov
out
das
and
std
jbe
xchg
mov
xor
je
cmp
jb
cwde
pushf
cmp
push
aam
pop
pusha
cwde
ins
sbb
xchg
xlat
retf
jp
sub
fimul
es
and
sub
xchg
xlat
jmp
movs
shr
jno
jae
cwde
jge
jo
xchg
movs
pusha
xor
xor
dec
fadd
xor
ins
cmp
cmp
sti
loopne
sub
push
jb
addr16
jmp
or
cmp
or
daa
ret
int3
mov
mov
pop
cmp
stos
les
push
stos
les
push
stos
les
push
stos
int3
cmp
cwde
and
or
fsubr
pop
mov
repz
cli
mov
jno
mov
into
in
fsub
fidivr
popa
push
int3
sub
mov
dec
sbb
fst
out
push
pop
sbb
inc
mov
js
or
in
out
aaa
out
sbb
js
pop
adc
mov
bound
in
inc
mov
mov
xor
dec
push
daa
ret
call
or
mov
push
sbb
jge
arpl
stos
les
mov
dec
mov
and
xor
adc
mov
popf
cmp
les
loopne
imul
cli
iret
lea
push
ins
push
repz
sub
xor
inc
push
enter
not
sbb
xchg
adc
jne
mov
sbb
sub
ds
ins
push
mov
movs
imul
scas
push
sti
cmps
test
jnp
and
cmp
movs
push
sbb
push
ins
xor
mov
movs
push
aas
or
pop
and
aam
cmp
aam
xchg
sti
mov
retf
xor
scas
xor
fwait
lods
jle
xor
pop
leave
lods
mov
pop
jb
jp
retf
imul
ins
mov
dec
or
rcl
dec
xchg
sti
sub
inc
in
mov
in
mov
in
mov
out
(bad)
nop
sbb
mov
push
clc
in
ret
out
(bad)
nop
call
repnz
ret
popf
mov
add
and
pop
sbb
mov
les
inc
loop
pop
jno
out
repnz
add
(bad)
call
ss
jmp
xchg
add
jmp
add
jmp
push
and
(bad)
add
jmp
push
mov
in
push
add
jmp
add
jmp
push
and
out
xchg
in
data16
adc
jp
jo
(bad)
xor
stc
vphaddwq
jb
sbb
loop
ss
inc
xor
sbb
sahf
les
lock
out
ss
mov
mov
mov
(bad)
movs
aam
cdq
test
frstor
mov
loop
inc
push
inc
in
mov
loopne
pop
jecxz
out
add
sbb
shl
jmp
out
ret
and
cdq
popa
push
into
ret
sbb
push
ins
je
lds
mov
jbe
retf
cmps
push
and
cmps
jbe
mov
and
cmps
jbe
inc
cmps
push
xor
(bad)
mov
aad
sub
sub
(bad)
fadd
inc
mov
rol
in
inc
push
(bad)
in
(bad)
mov
bswap
ret
dec
in
loop
inc
push
inc
in
mov
loopne
pop
jecxz
out
add
lea
inc
dec
rol
mov
dec
shl
dec
mov
inc
fnstcw
(bad)
in
mov
ins
rol
loop
push
mov
addr16
imul
mov
inc
ins
rol
in
push
inc
in
(bad)
mov
bswap
ret
mov
add
in
out
inc
push
cdq
and
(bad)
xchg
inc
in
mov
cmps
push
imul
push
(bad)
out
(bad)
lock
imul
pop
and
popa
and
dec
add
dec
mov
bound
add
pop
cmp
pop
lea
inc
jmp
and
add
adc
(bad)
std
in
mov
inc
in
mov
in
mov
out
push
pop
loope
out
xor
mov
out
push
fsub
out
sar
mov
mov
jmp
add
cmp
inc
mov
lds
inc
out
xchg
inc
pop
sahf
mov
cld
(bad)
jb
aad
inc
in
out
cmc
imul
or
mov
lods
inc
and
dec
push
inc
jecxz
push
(bad)
repnz
mov
jmp
xchg
pop
les
mov
jg
inc
repz
daa
repnz
cmp
call
push
ret
jecxz
fistp
sar
jmp
fisttp
cmp
call
push
ret
jecxz
pop
cwde
jb
mov
mov
pop
mov
lods
xor
in
add
mov
xor
mov
inc
jmp
scas
add
(bad)
xor
scas
je
pusha
inc
out
repnz
neg
mov
mov
rol
loop
in
ins
rol
loop
push
mov
mov
(bad)
stos
out
add
in
(bad)
or
shl
pop
mov
popa
or
ret
jmp
add
call
out
mov
cmps
dec
imul
fdiv
out
inc
mov
sbb
dec
pusha
lock
int
pop
(bad)
dec
shl
mov
pop
adc
add
in
add
stos
add
loope
xor
lods
(bad)
jbe
popf
mov
add
push
add
test
push
mov
iret
ret
sbb
push
jae
retf
adc
ss
mov
mov
xor
mov
(bad)
push
mov
out
push
mov
inc
into
in
adc
aas
cwde
and
ret
movs
push
ret
fsubr
shl
cmc
movs
gs
js
mov
les
sub
aas
push
stos
les
push
stos
hlt
aas
push
stos
test
push
stos
xchg
aas
push
stos
and
push
stos
movs
aas
push
stos
fs
push
stos
adc
lock
les
shr
cmp
sub
cmp
nop
test
adc
mov
mov
adc
mov
sub
stos
out
call
mov
sub
jl
adc
dec
xchg
mov
out
inc
adc
leave
popf
or
mov
push
lahf
stos
in
add
rcl
vpshab
push
fwait
aad
dec
aas
sub
push
(bad)
dec
mov
mov
fwait
dec
xor
aam
movs
and
mov
lea
popf
das
mov
push
retf
(bad)
mov
movs
hlt
jo
inc
xchg
int3
test
and
ret
push
inc
mov
add
add
in
in
mov
push
sub
cmp
retw
enter
into
adc
cmp
mov
push
ss
stos
int3
lea
push
and
cmp
idiv
out
mov
push
sbb
sti
fdivr
jmp
pop
jg
xor
or
cmp
pop
push
cmps
push
xor
in
pop
leave
arpl
and
into
pop
cmp
outs
xor
ret
fcmovne
mov
inc
int3
cmp
loopne
rep
dec
jp
nop
sub
mov
je
ret
cmp
scas
push
jns
ins
jg
add
cmp
retf
scas
push
fild
call
mov
mov
ret
ins
sbb
loope
(bad)
lods
addr16
or
ins
nop
fisubr
inc
xchg
cs
sbb
imul
sbb
mov
es
pop
scas
mov
pop
xor
loopne
int
mov
or
jo
(bad)
fnsave
inc
or
sbb
pop
pusha
and
call
cmp
popa
in
cld
cmc
push
sbb
inc
jb
(bad)
inc
push
popf
lods
xor
test
les
dec
movs
rol
call
pop
inc
add
inc
push
pop
(bad)
sub
mov
stos
popa
xchg
out
or
dec
test
sbb
jle
push
scas
rep
int3
add
mov
or
mov
mov
xchg
adc
ret
jno
sahf
pop
cmp
stos
js
(bad)
icebp
(bad)
outs
xor
jbe
(bad)
mov
pusha
push
lahf
(bad)
fimul
lds
push
push
xlat
pop
cmp
and
mov
sar
sbb
arpl
arpl
je
and
xchg
(bad)
inc
push
popf
lods
inc
mov
stos
int3
(bad)
(bad)
xchg
pop
and
int
repz
or
int
ins
sbb
push
bound
fnstsw
cmp
cmp
scas
push
jo
or
adc
imul
ret
lods
(bad)
out
xchg
pop
jb
fstp
cmps
push
aaa
xchg
cmp
rol
push
sbb
and
scas
push
(bad)
add
inc
sbb
mov
mov
mov
xchg
jmp
sub
(bad)
sub
call
cmc
jg
sahf
xor
inc
sub
sti
out
ins
shl
xor
dec
shl
in
mov
shl
cmp
jecxz
int3
inc
shl
jecxz
pop
inc
cmp
jae
les
sbb
jecxz
out
ins
in
cld
cmc
push
sbb
inc
jb
cmp
int
xor
enter
loopne
inc
push
je
imul
scas
mov
push
mov
adc
scas
retf
cmp
push
mov
imul
cmp
out
rcl
out
loope
mov
jne
cwde
adc
xor
or
and
out
test
movs
pop
jp
cwde
(bad)
mov
push
or
inc
pop
mov
lea
je
dec
out
xchg
push
rcr
lods
dec
mov
rcr
fidivr
adc
out
dec
adc
xchg
cs
cmp
int
inc
ret
push
stos
iret
lea
push
jae
scas
(bad)
dec
or
nop
outs
leave
jp
ss
enter
call
ins
jnp
pusha
xor
ins
inc
adc
enter
pusha
ret
fcomi
cmp
outs
xor
jbe
movs
sub
push
nop
push
bound
adc
lea
scas
jg
arpl
mov
jle
data16
lods
lds
dec
pop
sbb
push
cmp
stc
iret
les
scas
xchg
stos
jno
xor
ret
xchg
scas
adc
test
and
sbb
fdiv
cmp
data16
jo
push
mov
pop
sar
push
mov
sub
mov
pop
fdiv
imul
sbb
dec
jge
in
sbb
mov
mov
pop
xchg
imul
fadd
add
mov
ins
mov
bound
push
xor
outs
mov
(bad)
xchg
daa
mov
imul
push
cmp
mov
je
jno
cli
js
mov
adc
dec
mov
lea
in
(bad)
int
jb
cmp
test
call
mov
cmp
sub
js
sub
and
aad
dec
mov
in
out
sub
fnstsw
fwait
(bad)
mov
fwait
xchg
sbb
or
mov
xor
outs
data16
inc
or
ficomp
sbb
pop
mov
stos
int3
popf
pop
loopne
cdq
out
xor
sbb
es
scas
push
lock
loopne
jmp
in
mov
fidiv
cmp
and
bswap
mov
or
xor
ins
xchg
jg
clc
xor
jnp
std
icebp
das
add
xor
imul
out
dec
outs
inc
add
cmp
xor
aad
mov
cld
cmp
mov
jp
dec
pop
pop
mov
ja
or
lods
pop
leave
jo
dec
cld
movs
push
call
scas
push
imul
sub
xchg
sti
lods
pusha
mov
scas
adc
fld
dec
xchg
retf
icebp
adc
bound
sub
hlt
sbb
jmp
fs
fcom
cmp
mov
pop
(bad)
sub
aam
adc
fcom
cmp
iret
dec
cmp
out
add
fild
iret
jne
fdivr
pop
retf
stc
push
push
or
scas
call
push
push
fwait
imul
push
shl
loope
push
cli
jp
outs
bound
sbb
jp
push
pop
pop
test
push
jp
push
push
mov
and
mov
xor
int
js
mov
cmp
fst
out
add
in
adc
sbb
int3
add
jmp
stos
jp
xor
in
retf
cli
mov
stos
jo
out
sub
xor
mov
(bad)
xor
rep
dec
jp
mov
fwait
add
mov
mov
inc
rep
dec
cli
jp
fwait
sti
mov
adc
jns
mov
sbb
jle
jge
jmp
jp
into
adc
sti
fstp
jl
int3
je
cmp
in
mov
lods
aam
sti
test
daa
push
jbe
stos
les
pop
ror
inc
je
jno
dec
(bad)
scas
push
xor
sti
xchg
enter
lds
adc
movs
push
sbb
movs
cvtps2pd
test
or
loopne
and
ret
data16
jb
jo
pop
cmp
mov
xor
das
test
jno
adc
cmp
dec
xchg
test
cmp
cmc
out
(bad)
stc
sub
adc
add
out
xchg
scas
out
adc
add
in
add
lds
jmp
lds
in
(bad)
outs
jae
xchg
jmp
xor
call
ret
and
rol
rol
clc
mov
mov
call
pushf
rol
mov
and
ret
mov
rcl
aad
xor
iret
rcl
outs
xchg
mov
xchg
repz
iret
rol
cmp
test
loop
into
mov
mov
pushf
mov
movs
les
push
stos
les
push
stos
push
gs
std
in
and
xchg
xchg
les
ret
cmp
repnz
jno
mov
add
in
push
stos
iret
cmp
jno
cmps
js
cmc
les
or
nop
cs
mov
sub
push
call
inc
stos
into
lea
cmp
sub
push
je
or
sub
mov
stos
jns
mov
sub
dec
xchg
fstp
inc
imul
pop
pushf
pop
lods
cli
sti
xor
push
jo
aaa
ds
fst
pop
cmp
adc
push
stos
push
add
in
add
(bad)
ret
rcl
ret
mov
ret
movs
push
enter
out
cld
push
sbb
push
jae
je
movs
push
sbb
push
push
rep
(bad)
pop
(bad)
into
popf
push
and
popf
je
div
mov
mov
lods
popf
fwait
hlt
fadd
outs
ret
into
pop
pop
call
aas
in
aad
hlt
cmp
fs
inc
inc
pop
sbb
stos
jl
and
cmp
lea
loopne
jo
ror
sub
jmp
mov
lea
adc
rcr
aas
ret
sti
and
push
xor
enter
ins
ss
leave
scas
push
jo
dec
jp
sbb
arpl
loope
sub
in
cmp
dec
lds
add
dec
pop
xchg
ja
fistp
add
pop
popf
add
fistp
add
pop
or
or
pop
int
popf
pop
dec
call
cs
iret
retf
add
mov
dec
scas
retf
add
fs
sbb
inc
pop
xchg
not
fsub
lods
adc
dec
jg
pop
mov
pop
stos
pop
jnp
inc
pop
xchg
mov
cwde
mov
add
pop
fisttp
dec
pop
xchg
add
fcmovb
xor
sbb
shl
pop
dec
outs
aam
xchg
fdivr
jno
cmp
add
dec
pop
xchg
pop
dec
test
std
add
sbb
dec
pop
sbb
lods
pop
fwait
xchg
cwde
pop
int
std
add
mov
pop
shr
pop
cdq
not
int3
std
add
dec
fs
pop
adc
idiv
adc
int3
mov
test
pop
(bad)
fwait
daa
dec
pop
xlat
and
mov
push
mov
sub
fwait
daa
dec
pop
xlat
loopne
aaa
mov
inc
mov
mov
mov
stos
(bad)
push
fild
int3
pop
popf
cmovge
xchg
not
fsub
sub
mov
or
push
xchg
cmps
dec
scas
retf
add
dec
fs
jmp
adc
mov
mov
popa
ins
pop
mov
mov
clc
mov
sub
pop
sbb
xchg
xor
sahf
dec
or
je
push
mov
cmp
xor
push
stos
enter
test
jno
aam
push
stos
jl
adc
push
stos
(bad)
or
ret
cmp
repnz
jno
cmc
in
std
jecxz
inc
cli
arpl
shl
fisubr
idiv
outs
bound
sbb
stos
push
xchg
pop
pop
test
push
fimul
xlat
add
jg
mov
inc
call
stos
jae
pop
sbb
xchg
test
out
cmp
jo
ret
ja
repz
jnp
xchg
dec
rcr
jno
jecxz
xchg
stos
jno
mov
in
enter
xlat
push
cmp
scas
adc
aam
das
test
jno
les
sbb
scas
sar
retf
xor
fs
push
cmc
cmp
push
call
iret
mov
(bad)
retf
push
cli
hlt
out
xor
cmp
xor
jg
rcr
xor
dec
jp
sub
push
jae
(bad)
cli
or
loope
mov
xor
js
and
sbb
jle
pop
jb
in
jno
out
je
out
cmps
pop
cmp
and
jno
jb
lahf
je
mov
outs
xor
ret
mov
xor
fsubr
xchg
pop
and
ret
cmp
out
add
jg
ins
push
mov
(bad)
ins
popf
dec
xchg
sti
fidivr
mov
movs
pop
xor
push
loop
jo
dec
sbb
add
lock
sbb
aad
push
fisttp
adc
js
dec
push
inc
inc
jmp
dec
or
nop
pop
mov
pop
jnp
in
adc
cmp
or
ficomp
xor
call
pop
add
cwde
in
in
psubsb
inc
out
cmp
stos
jnp
lock
inc
or
fst
push
sub
sbb
cmp
dec
fadd
stos
(bad)
sub
lahf
adc
fld
out
sub
inc
xor
out
inc
dec
sub
add
jp
scas
adc
loop
loopne
jp
loopne
cmp
outs
leave
cli
push
sbb
inc
aaa
push
stos
dec
(bad)
scas
push
xor
out
hlt
imul
sbb
push
mov
add
jnp
enter
or
out
adc
sbb
in
adc
das
xchg
arpl
push
popf
imul
mov
dec
xor
mov
pusha
xor
mov
lock
sub
push
stos
jl
and
pop
lsl
rep
dec
cli
int3
lahf
cmp
retf
out
in
movs
dec
jp
mov
movs
int
and
xchg
out
adc
retf
sbb
sti
pop
leave
mov
xchg
xor
movs
push
cmp
scas
push
push
jbe
stos
les
outs
xor
call
xchg
xor
je
ret
je
jno
pop
xchg
cmps
push
cmp
loopne
psubw
add
aam
pop
rol
jg
loopne
sar
sbb
mov
inc
test
(bad)
je
sub
and
sahf
stos
je
and
xchg
cli
mov
das
pop
lock
fldenv
ror
pop
lods
push
shl
add
push
cli
jp
outs
bound
mov
add
pop
pop
test
inc
stos
ret
retf
pop
or
jg
add
bound
push
mov
add
and
sar
adc
push
loop
add
cmp
pop
stos
les
loopne
js
loope
cmps
call
jmp
xor
scas
xor
je
inc
leave
imul
dec
mov
cmp
repnz
aas
ret
retf
sbb
enter
loop
push
adc
ret
mov
or
movs
jg
rcr
sub
shl
movs
dec
jp
test
push
push
xchg
sub
push
cmps
outs
leave
push
sub
jae
adc
sbb
cmp
movs
push
call
jns
sbb
xchg
mov
dec
popf
push
int3
(bad)
(bad)
xchg
pop
and
push
stc
xchg
mov
push
cmp
scas
xchg
cmps
jno
loope
lea
dec
(bad)
fisubr
stos
imul
js
ins
ret
scas
pop
cmp
dec
or
in
jle
push
inc
pop
push
and
ins
mov
mov
rol
hlt
sub
jnp
fs
pop
jnp
pmaddwd
xchg
add
pop
call
sub
lea
lahf
pop
cmc
cmps
push
add
fs
cmc
outs
retf
pop
xchg
mov
or
js
pop
jne
stc
or
inc
and
and
pop
rcr
ret
jl
aam
xchg
jecxz
cmps
retf
vfmsub213pd
in
jno
cmp
jmp
inc
retf
inc
xchg
fnclex
add
sar
ret
imul
xor
mov
mov
or
ja
out
ds
and
jg
rcl
cmps
xchg
push
dec
loop
mov
cmp
pop
stos
retf
popf
stos
scas
pusha
mov
push
or
push
sbb
lods
xor
xor
or
movs
fild
adc
jno
sbb
mov
or
retw
sbb
int3
mov
xor
cmp
mov
jnp
fs
ins
addr16
fwait
push
ret
push
(bad)
jmp
scas
rep
dec
jp
sahf
fwait
out
leave
out
inc
and
mov
(bad)
(bad)
push
push
pop
stos
les
out
xchg
out
mov
stos
jg
push
adc
jns
sti
shl
out
scas
pop
in
js
mov
xchg
push
jae
shr
hlt
xchg
pop
bound
push
arpl
scas
and
ret
icebp
pop
lock
call
scas
push
cld
movs
push
call
enter
pop
call
scas
pop
aas
ret
imul
push
aas
inc
or
push
sbb
push
pop
pop
sub
inc
shr
(bad)
pop
cmp
dec
sbb
jno
addr16
(bad)
fist
inc
out
mov
adc
aad
ja
fxch
push
adc
in
rol
es
sbb
push
(bad)
icebp
push
cwde
daa
out
pop
retf
(bad)
iret
daa
and
pop
int3
(bad)
data16
div
imul
sub
adc
xor
dec
xcrypt-cbc
cmps
push
int3
xor
sbb
stc
out
repnz
or
add
cwde
in
in
push
jmp
adc
mov
mov
stos
jl
push
cwde
dec
cmp
mov
retf
movs
repz
fist
dec
xchg
dec
inc
jle
inc
jae
stos
int3
popf
sbb
jnp
dec
xchg
cmp
daa
fiadd
(bad)
scas
pop
fwait
adc
out
mov
test
leave
jns
test
mov
pusha
xor
in
ja
pop
mov
sbb
(bad)
in
ins
ins
sub
push
jb
pop
jle
push
push
adc
cld
xchg
call
in
mov
shl
movs
push
cmp
push
stos
push
cdq
dec
int
stc
out
inc
mov
shr
movs
push
mov
fwait
sbb
iret
mov
cmp
fwait
ss
loopne
jge
lock
push
mov
leave
jl
mov
push
dec
sbb
jge
pop
loopne
jle
test
pop
mov
outs
push
dec
mov
scas
push
xor
nop
out
adc
movs
dec
cli
dec
mov
mov
or
shr
xchg
int
ret
scas
adc
jb
fst
mov
pop
pop
and
jo
pop
in
pop
sbb
mov
jb
js
imul
aaa
xchg
iret
les
scas
xchg
push
jae
mov
and
retf
das
div
scas
test
scas
jle
shr
outs
add
adc
call
ret
and
sub
sbb
dec
popf
dec
aad
call
(bad)
loop
movs
push
or
add
jl
ret
mov
mov
mov
(bad)
shl
cmp
jno
cmp
sub
mov
adc
or
add
cwde
in
in
mov
dec
xor
stos
jns
adc
cmp
jnp
(bad)
dec
fld
dec
xchg
mov
mov
xlat
add
jmp
dec
mov
push
stos
fiadd
out
and
pop
sub
ins
neg
dec
loop
sahf
jl
stos
cli
jnp
(bad)
push
jnp
xor
cmp
dec
inc
idiv
cwde
push
or
mov
retf
jp
mov
xor
out
jnp
sub
pop
stos
retf
cld
mov
inc
adc
enter
repnz
jmp
xchg
call
cmp
mov
inc
xor
xchg
retf
sbb
sbb
test
leave
imul
adc
sub
je
mov
or
outs
push
jle
(bad)
scas
push
sub
clc
xchg
or
loopne
iret
or
inc
mov
je
in
rcr
mov
mov
retf
call
sbb
mov
push
cmp
movs
push
sbb
movs
pop
jp
popf
or
ins
jbe
cmp
or
pop
(bad)
push
sbb
je
enter
jl
leave
lea
add
adc
out
loope
jns
mov
push
push
sub
sti
mov
push
jae
test
pminsw
jle
ret
lods
ret
(bad)
or
mov
add
pop
retf
sbb
mov
push
mov
inc
movs
not
xchg
inc
sub
sub
stos
push
shl
add
push
cli
jp
outs
bound
or
popa
add
les
push
stos
ret
jb
mov
push
movs
ret
stos
and
sbb
xchg
ds
stos
(bad)
jge
repnz
xchg
aam
stc
pop
stos
sar
push
cmp
iret
repnz
or
fstp
outs
and
int
(bad)
fstp
(bad)
repnz
xor
cmc
mov
outs
and
int
mov
nop
jp
repnz
add
push
fwait
mov
rol
ret
scas
mov
xchg
xlat
call
xor
aam
jae
imul
cli
or
movs
cwde
jae
les
jo
out
lock
xchg
or
cmp
mul
jae
les
outs
xor
ret
into
ins
cmps
scas
aam
jae
loopne
clc
mov
cmp
push
sub
scas
inc
mov
push
dec
lds
push
sub
xor
(bad)
cmp
scas
inc
jmp
scas
lds
dec
lods
dec
and
push
ss
and
add
call
movs
mov
and
fmul
mov
adc
repz
lea
push
jl
aad
jmp
test
jge
cmp
scas
push
(bad)
or
shr
jns
ret
cmp
scas
push
lahf
jp
xchg
or
scas
adc
je
push
mov
cmp
xor
push
stos
enter
sub
stos
ret
jmp
pusha
loop
(bad)
gs
xchg
adc
dec
cli
arpl
shl
scas
adc
les
in
cld
cmc
fidivr
lds
adc
cmp
xchg
das
(bad)
lea
mov
ins
jecxz
dec
fst
jl
ss
fidiv
inc
xchg
sti
mov
das
gs
fsubrp
mov
cmp
xchg
jno
add
(bad)
scas
adc
and
inc
leave
gs
mov
sub
add
retf
(bad)
fcmovnb
and
push
sbb
mov
bound
fsubr
call
xchg
movs
mov
inc
iret
xor
cmp
mov
stos
pop
push
sbb
mov
push
jmp
les
enter
std
add
xchg
xlat
adc
jg
ss
les
repnz
or
mov
gs
stos
ins
(bad)
sub
sbb
fcmovne
scas
push
and
mov
mov
out
les
xchg
pop
bound
push
js
iret
leave
sub
outs
leave
cli
push
sbb
or
sti
mov
retf
sbb
xchg
sbb
leave
call
mov
retf
iret
push
test
in
jns
add
in
cmp
mov
les
xor
adc
jmp
jg
out
jp
out
jnp
out
jnp
out
jp
loop
mov
add
jp
adc
jg
loop
jp
in
jns
in
jns
in
js
in
jg
and
add
pop
bnd
and
jg
loop
jp
out
js
in
jns
in
jns
in
jge
loop
mov
adc
jno
xor
test
jge
inc
out
jp
out
jnp
out
jg
and
xor
jg
loop
jp
out
jns
in
js
loop
pand
jg
loop
int3
cmp
dec
ja
or
mov
loopne
daa
into
daa
add
pop
inc
das
in
cs
cmp
movs
out
je
loop
out
imul
gs
push
xor
out
mov
jp
aaa
sub
xlat
test
stos
scas
pop
jno
pop
xor
xchg
ret
dec
inc
das
push
xor
out
lods
jecxz
jg
ins
dec
xlat
enter
pop
icebp
push
pop
xor
xchg
ret
dec
and
sbb
sar
jecxz
jg
lods
dec
xlat
call
push
push
pop
xor
xchg
ret
dec
add
cld
jmp
jge
sub
jl
aaa
in
dec
xlat
or
push
pop
xor
xchg
int3
int3
sti
lds
cmp
dec
adc
data16
xchg
(bad)
(bad)
aad
ja
mov
(bad)
test
aam
jl
mov
lea
mov
mov
jnp
es
jb
repnz
sub
mov
jnp
mov
sub
mov
xchg
cmp
sub
out
push
retf
push
cmp
pop
adc
sbb
pushf
mov
jb
mov
ins
movs
xor
mov
in
jns
movs
imul
dec
adc
out
sar
adc
inc
adc
(bad)
popf
jnp
test
add
jbe
fmul
ins
xchg
sub
jnp
(bad)
jns
push
ja
fwait
adc
mov
push
aam
loopne
pop
out
mov
cmps
jno
hlt
dec
(bad)
scas
push
cmp
retf
xchg
fwait
xor
out
hlt
and
mov
lea
xor
xor
stos
push
inc
pop
stos
les
(bad)
or
or
jmp
push
out
stos
int3
lea
cdq
push
jb
frstor
cmp
adc
inc
pop
push
sub
pop
sbb
mov
out
add
es
mov
(bad)
ficom
adc
push
sbb
push
out
fs
mov
outs
sbb
and
push
or
sbb
sub
cdq
or
(bad)
out
inc
jb
jns
xor
enter
(bad)
xor
pop
pushf
xor
pop
add
out
imul
or
add
in
out
add
lods
push
pop
aas
ret
retf
dec
lahf
or
movs
dec
jp
xchg
or
imul
cmp
fild
fild
test
fadd
shr
push
in
mov
jp
push
in
or
cmp
inc
mov
mov
out
adc
test
mov
mov
jbe
sub
sub
jl
sbb
cmp
sub
cld
mov
xlat
jb
or
mov
movs
retf
test
(bad)
dec
cmp
inc
jb
mov
cmp
mov
push
cmp
stos
fcom
inc
sub
pop
(bad)
add
call
(bad)
xchg
add
inc
add
int
mov
mov
out
ror
out
aad
pop
dec
mov
dec
jo
sbb
cld
stc
xor
add
movs
stos
jmp
retf
xor
loopne
jl
loop
mov
and
fnstsw
popa
xor
rcl
ret
sub
arpl
mov
into
outs
jg
fs
les
pop
xchg
lea
out
(bad)
int
jp
out
das
pop
(bad)
scas
push
jnp
gs
in
pop
sbb
scas
je
push
jp
nop
mov
add
out
(bad)
dec
cmps
or
int
retf
int
(bad)
iret
lea
jnp
sbb
in
out
sub
mov
call
push
mov
ror
push
(bad)
push
je
repz
mov
fwait
sbb
mov
(bad)
stos
movs
sahf
pop
cmp
outs
xor
xchg
(bad)
sar
mov
mov
or
xor
das
jnp
and
ret
jmp
mov
add
dec
adc
mov
sub
sub
int
iret
call
nop
repz
fcmovnb
repz
jmp
cmp
push
fcmovnb
add
out
xchg
or
ins
sub
and
push
mov
sbb
stos
pushf
mov
mov
ret
inc
ror
jb
cmp
and
sub
xchg
add
popa
inc
loope
push
cmp
pop
retf
out
xchg
sbb
push
sub
cmp
rol
dec
xchg
sub
xor
add
(bad)
adc
std
je
sbb
lods
jno
rcr
cmps
xchg
push
jae
icebp
dec
sbb
retf
jp
mov
xchg
pop
bound
stos
push
mov
stos
iret
cmp
mov
xor
pop
push
or
inc
leavew
ja
sbb
cmp
jg
rcr
sti
fimul
xor
push
enter
bound
iret
lea
scas
outs
inc
js
imul
add
mov
pop
stos
push
xchg
sbb
cmp
and
out
adc
enter
jnp
imul
stos
xchg
cld
cmp
cmps
push
aas
and
sbb
pop
jbe
adc
mov
ins
test
xor
out
xor
lea
xor
(bad)
out
and
cmp
pop
sbb
movs
push
xor
iret
adc
ret
sbb
scas
push
jno
shl
push
or
inc
jecxz
shr
call
mov
rcl
sbb
mov
sahf
adc
cwde
pusha
pushf
push
int3
jno
std
pop
stc
inc
and
jle
mov
xor
mov
push
mov
and
popa
mov
imul
cmp
jecxz
push
ret
inc
int
aaa
ds
xor
xlat
clc
sbb
mov
sbb
stc
out
repnz
pop
stos
xchg
mov
jle
cmp
or
xor
stos
ja
add
cmp
inc
xchg
fwait
jb
cmp
(bad)
test
xchg
pop
jne
xchg
dec
or
add
push
mov
test
ins
icebp
mov
clc
add
ds
and
cld
cmp
cmp
and
xchg
mov
(bad)
cmp
and
retf
cmp
xor
pusha
xchg
scas
(bad)
cmp
push
stos
ror
jp
test
mov
fisubr
pop
stos
mov
out
mov
push
sbb
sbb
xor
lds
retf
sbb
pop
fs
outs
leave
jl
xchg
mov
or
sub
and
mov
lea
mov
xchg
aad
scas
popa
es
lahf
popa
push
test
pop
sbb
lods
lea
pop
jb
mov
imul
das
adc
jl
out
inc
mov
mov
or
xor
inc
mov
xor
cld
push
sbb
push
jae
movs
rep
(bad)
push
popf
or
icebp
sub
mov
pusha
push
(bad)
in
ret
mov
adc
dec
sbb
dec
inc
pop
inc
inc
es
cmp
es
mov
inc
cmp
(bad)
icebp
jp
hlt
stos
or
push
cmp
cmp
xchg
add
hlt
lods
fidivr
aas
cmp
jmp
out
ins
in
repnz
sahf
stos
(bad)
in
inc
jmp
xor
stos
jne
nop
clc
fwait
cmp
mov
inc
jg
fiadd
xor
push
iret
cmp
dec
dec
fist
dec
cmp
jbe
adc
mov
sbb
add
mov
mov
in
out
mov
adc
cmp
push
stos
push
sbb
(bad)
out
dec
fs
jb
push
or
dec
mov
push
aas
ret
int3
cmp
mov
iret
push
push
sbb
cdq
push
jge
int3
rcr
cmp
or
addr16
mov
stos
popf
mov
xor
movs
push
sbb
mov
div
scas
adc
sub
sbb
xchg
pop
and
lods
jp
pop
fst
movs
clc
cmp
adc
enter
rcl
cmp
jmp
cld
jnp
dec
pop
cmp
outs
xor
add
in
call
jp
push
push
shr
xor
pop
xlat
cwde
mov
lea
ret
mov
leave
out
mov
pop
pusha
ret
retf
fdiv
cmp
xor
ret
out
and
ss
xchg
enter
pop
lods
adc
xchg
test
jno
fcomp
into
mov
fidivr
sahf
gs
jmp
add
js
cmp
imul
mov
call
cmp
js
fstp
sahf
in
stos
js
stos
dec
sbb
cmp
test
fistp
sahf
aad
sti
jns
(bad)
cmp
cmp
pop
mov
push
fistp
push
fcmove
pop
out
fisttp
ret
or
into
fistp
in
test
pop
add
aad
fdivr
sub
jle
cmp
ds
push
fimul
in
call
add
pop
shl
fidivr
movs
mov
movs
dec
cdq
hlt
in
push
(bad)
push
rol
sub
fcomp
out
cmp
add
fsubr
stos
imul
sub
enter
jge
and
fwait
enter
js
aad
sahf
imul
jp
inc
ficomp
jecxz
(bad)
in
fnstsw
fisubr
jp
sbb
mov
mov
call
in
cwde
retf
hlt
in
push
(bad)
push
cmc
inc
sar
jmp
lea
ds
movs
push
rcl
or
ret
fldenv
in
mov
pop
pop
es
inc
mov
mov
aad
xchg
mov
inc
test
(bad)
fcomp
outs
test
(bad)
jp
mov
vminps
(bad)
and
sub
jp
inc
scas
push
xor
pop
mov
gs
adc
retf
(bad)
enter
xlat
push
push
jp
aad
pop
test
inc
stos
(bad)
lea
call
arpl
(bad)
movs
and
and
pushf
push
stos
mov
and
mov
cmps
retf
cmp
adc
aad
scas
jns
ret
sbb
mov
pop
dec
vfrczsd
je
or
cmp
jns
dec
repz
pop
cdq
push
jb
ins
lock
jnp
call
cmps
sbb
sub
push
push
jp
aad
sbb
mov
jae
adc
test
jmp
xchg
push
jae
inc
dec
xchg
stos
push
aas
sbb
stc
pop
loopne
and
pop
xchg
push
and
frstor
jge
int3
(bad)
into
lahf
push
and
or
push
jae
shr
cli
xchg
push
bound
loope
push
push
sbb
popf
jmp
(bad)
jmp
movs
rcr
loope
pop
fcom
popa
test
mov
das
mov
je
push
stos
jb
push
xor
push
movs
cmps
popf
sbb
mov
cmp
push
not
push
(bad)
call
shr
sar
aas
loope
cld
pop
mov
fsubr
xor
mov
je
xchg
fcmovbe
or
lea
cmc
lds
dec
mov
(bad)
cs
lds
mov
(bad)
cmp
mov
mov
lahf
call
xchg
stos
mov
pop
shr
leave
ins
xchg
out
ret
in
dec
adc
xchg
movs
ins
retf
enter
or
add
add
mov
std
push
push
dec
xchg
jnp
pop
test
inc
stos
ret
lea
mov
out
adc
cmp
sub
hlt
and
push
xchg
jmp
out
inc
out
ret
adc
(bad)
cmc
jne
out
(bad)
dec
cmp
test
ret
and
mov
lea
ja
out
movs
call
sbb
rol
pop
stos
les
push
sbb
dec
mov
rep
dec
jp
(bad)
mov
js
jmp
or
push
cmp
scas
push
xor
stos
out
fsub
iret
fs
sbb
cmp
dec
sbb
xchg
out
movs
push
mov
mov
jno
cmp
or
std
push
push
dec
lahf
jnp
or
jle
pop
jnp
push
fild
push
sub
mov
cli
sbb
rep
(bad)
mov
daa
movs
push
add
adc
jg
fst
push
mov
stos
int3
popf
sub
addr16
out
je
movs
push
sbb
movs
pop
jp
mov
hlt
push
mov
mov
ret
or
shl
pop
shl
scas
xchg
jge
mov
aas
and
sbb
jae
push
xor
enter
sbb
aad
(bad)
out
movs
aam
das
jae
stos
out
popa
mov
mov
inc
add
pop
cmp
out
mov
jnp
pop
sbb
push
fdivr
ja
lods
mov
push
pop
sub
enter
sub
push
enter
enter
sti
sbb
sub
pop
pop
pop
mov
mov
sti
mov
(bad)
mov
mov
xchg
push
push
dec
inc
into
pop
pop
test
inc
stos
leave
lea
mov
mov
les
(bad)
mov
push
test
mov
mov
add
inc
xchg
imul
fcomp
adc
(bad)
stc
in
ficomp
push
inc
je
mov
pusha
xor
ins
daa
por
inc
cli
or
push
test
loopne
call
in
ss
mov
mov
rcl
ret
lods
lea
or
cmp
or
jae
sti
sub
movs
push
sbb
fistp
jmp
xor
loope
mov
movs
stos
pop
in
sbb
into
cmp
xor
stos
jl
mov
stos
push
push
sbb
pop
lods
(bad)
cmp
stos
adc
sbb
mov
retf
test
out
adc
push
arpl
mov
adc
out
mov
xor
lock
les
cld
push
sbb
scas
lea
out
in
out
movs
call
or
mov
push
xor
enter
call
inc
push
(bad)
jmp
fiadd
pop
xor
sub
jp
mov
dec
xchg
sbb
jg
add
call
test
outs
popa
(bad)
jmp
mov
arpl
dec
ficom
neg
ja
test
push
stc
(bad)
cld
xor
cdq
iret
arpl
test
add
sub
pop
push
lods
shl
jge
scas
movs
(bad)
in
out
ins
in
xlat
in
(bad)
jecxz
sar
aaa
mov
stos
jle
rcr
xor
add
mov
mov
xor
cmps
call
xor
push
stos
jb
mov
vunpcklps
pop
sbb
fidivr
loop
loopne
adc
and
das
div
scas
push
push
push
mov
gs
and
push
stos
je
add
arpl
out
hlt
rep
(bad)
cli
mov
sbb
cdq
cmp
in
outs
leave
cli
push
sbb
xchg
cmp
jmp
rcl
ret
inc
add
out
movs
push
sbb
in
neg
fld
imul
cmp
mov
jnp
popa
xor
ins
ja
adc
enter
pop
jp
xchg
sbb
inc
fwait
out
les
xchg
jp
xor
retf
push
lahf
sbb
test
les
push
stos
jp
pusha
xor
std
mov
sbb
and
lods
mov
jb
ins
mov
mov
pop
push
int3
pop
loopne
dec
lods
fdivr
push
(bad)
fmul
adc
jge
dec
inc
sbb
test
fistp
into
fsubr
ins
(bad)
inc
mov
out
cmp
fdivr
sub
pop
xor
pop
jae
jno
cli
jp
dec
(bad)
les
push
stos
sbb
jo
ret
stos
(bad)
scas
push
sbb
jae
ret
imul
dec
mov
outs
and
int
rcl
cmp
fnstenv
ret
sbb
scas
push
fnstsw
xchg
dec
in
push
jmp
scas
dec
cmp
dec
pop
lahf
mov
scas
push
dec
inc
test
mov
scas
and
sbb
jno
ret
imul
push
icebp
scas
dec
mov
cmp
pop
pop
pushf
mov
scas
push
retf
mov
iret
repnz
in
push
hlt
mov
pop
test
fcom
jge
mov
retf
out
push
cmp
jae
ret
or
scas
push
pop
gs
jae
ret
sbb
jae
ret
fneni(8087
scas
push
fdivr
xchg
adc
cmp
ret
sbb
push
xor
pop
mov
gs
ja
ret
fwait
jbe
push
cmp
ret
fwait
mov
mov
repz
(bad)
repnz
scas
push
les
pop
stos
les
cwde
mov
retf
out
push
mov
pop
stos
int3
cmp
push
stos
ja
xchg
sbb
mov
stos
int
or
adc
scas
test
test
and
jnp
(bad)
ret
dec
in
push
jnp
sbb
ret
fldpi
or
ret
fwait
mov
push
ds
adc
scas
movs
dec
jae
push
xor
mov
test
scas
movs
hlt
in
stos
lahf
mov
push
inc
jmp
scas
les
shr
fcom
inc
stos
and
lds
sar
out
and
int3
cmp
adc
(bad)
lods
cmp
jae
ret
dec
in
push
dec
xchg
mov
xor
inc
cmp
test
iret
pop
fwait
test
cmp
(bad)
repnz
in
push
retf
mov
(bad)
repnz
out
push
retf
mov
out
repnz
pushf
stos
aam
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
or
cmp
lock
les
shr
cmp
sar
stos
les
push
stos
pushf
mov
jb
pop
cmp
mov
mov
stos
sar
bound
pushf
mov
add
jae
dec
shl
xchg
cmp
lods
call
push
js
mov
push
xchg
jae
aam
sub
mov
adc
mov
movs
jbe
sub
inc
mov
and
push
stos
fiadd
dec
cmp
inc
fiadd
(bad)
pop
add
adc
out
xor
mov
lahf
cli
push
cmp
das
sub
enter
cmp
je
push
mov
iret
cmp
stos
mov
les
aad
inc
add
in
cmps
pop
mov
mov
rcl
ret
les
loopne
mov
adc
nop
adc
xlat
push
aas
ret
cmp
pop
sar
fwait
aaa
dec
add
sbb
enter
dec
xchg
je
enter
loop
ja
or
cmp
xor
or
in
in
es
dec
and
enter
out
mov
sub
leave
jbe
mov
mov
cmp
jg
jae
js
jle
nop
lods
dec
iret
lea
inc
les
scas
mov
pop
jb
ins
sti
mov
mov
sbb
cli
loope
(bad)
call
gs
mov
mov
add
push
add
rol
pop
fs
in
stos
push
in
stos
push
in
stos
push
in
stos
push
mov
test
or
outs
pop
in
stos
push
xor
cmp
retf
mov
mov
scas
jnp
stos
push
in
stos
mov
test
xor
sbb
push
(bad)
push
sub
or
jp
fisttp
cld
jns
loopne
push
in
fist
mov
aad
sub
and
sbb
scas
imul
ins
fucomi
stos
imul
xor
out
rcr
xor
jl
outs
movs
mov
xchg
pop
jmp
mov
sbb
push
sar
idiv
pop
sbb
cmp
jae
pop
mov
lods
push
in
pop
xor
cmovl
inc
push
pop
xchg
fimul
sub
xor
repz
mov
imul
shl
movs
xchg
imul
jecxz
scas
fist
repz
imul
aad
stos
adc
push
push
jae
ins
mov
hlt
sub
movs
adc
sub
fucomi
stos
push
mov
je
inc
mov
mov
jae
pop
mov
mov
xor
sbb
in
mov
xor
adc
jmp
fimul
imul
outs
out
fwait
addr16
push
repnz
movs
fadd
pop
push
leave
or
mov
movs
fst
adc
fwait
pop
sub
sti
or
movs
pushf
xlat
call
repz
adc
cmp
dec
imul
fmul
adc
inc
retf
(bad)
stos
push
lea
pop
dec
rcr
xchg
mov
adc
pop
pop
xor
shl
push
mov
repz
imul
(bad)
xchg
retf
mov
inc
lock
lock
cmp
push
daa
repnz
out
fiadd
cmc
cmp
popa
fwait
adc
repz
out
hlt
pop
jmp
pop
jae
mov
mov
fisttp
(bad)
out
mov
ja
icebp
push
add
xor
xor
aas
test
mov
fisttp
out
jge
add
fst
inc
call
mov
push
mov
repz
xor
pop
cmp
cmp
in
stos
or
fwait
add
mov
in
outs
cmp
pop
xor
mov
rcr
mov
and
outs
jmp
or
stos
push
fucom
es
fwait
idiv
into
scas
jp
in
stos
(bad)
lods
pop
xor
stos
push
movs
out
(bad)
mov
repz
xchg
into
scas
pop
(bad)
(bad)
outs
dec
pop
std
sti
int
sti
std
ins
pop
ins
test
retf
inc
mov
je
imul
mov
mov
mov
outs
aam
imul
(bad)
ret
(bad)
mov
add
cmp
fs
scas
adc
sar
shr
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
xlat
in
push
in
cmp
test
mov
stos
js
push
idiv
or
aas
xchg
dec
xchg
dec
xor
aam
cmp
and
sub
push
adc
rcl
(bad)
sbb
push
fwait
adc
fisub
push
and
test
ds
hlt
aaa
je
jo
mov
mov
jp
xchg
adc
push
(bad)
movs
lods
lea
in
ror
push
int3
cmp
loopne
hlt
mov
loopne
rep
(bad)
aam
outs
mov
mov
out
inc
jmp
je
ins
cmps
mov
enter
ins
xchg
sbb
sbb
js
fild
mov
cmps
sub
jg
and
or
loop
arpl
push
sbb
stos
xchg
fidiv
leave
jb
cmp
jnp
imul
imul
js
clc
add
cwde
xchg
xor
jl
mov
dec
mov
aas
push
jmp
cmp
pop
and
and
ret
je
sub
je
jae
test
stos
ja
stc
mov
push
pop
mov
sub
push
fild
mov
cmp
outs
cld
loop
pop
push
add
push
ss
pop
push
dec
or
pop
push
adc
dec
mov
cwde
jl
adc
dec
pop
mov
xchg
jl
and
push
add
jecxz
pop
adc
(bad)
dec
jge
test
ins
pop
cmps
adc
imul
jg
adc
int
(bad)
adc
push
ss
xchg
ins
pop
movs
adc
jb
mov
cmp
outs
jl
dec
pop
push
adc
pop
cmps
push
ins
fbld
adc
xchg
setnp
outs
(bad)
adc
cmps
mov
scas
stc
mov
jbe
and
in
pop
xchg
fwait
jl
xchg
int
test
xchg
add
inc
dec
pop
mov
xchg
jl
adc
push
add
loopne
pop
push
jmp
test
ins
add
sbb
pop
adc
or
adc
mov
or
ror
pusha
ins
out
dec
pop
es
les
stos
retf
cmp
cwde
mov
call
cmovnp
out
jb
xchg
push
cli
(bad)
cmp
cmp
(bad)
sub
mov
les
rcl
mov
loope
cmp
mov
popa
mov
jne
push
js
in
jne
adc
test
jne
push
fst
or
mov
jb
sub
in
loop
jg
(bad)
jge
jne
adc
fnsave
push
loope
cmp
sbb
stos
pushf
mov
div
xor
push
adc
repnz
les
shl
jnp
or
fcmovnbe
dec
or
push
stos
les
dec
cmp
pop
push
aam
fistp
cld
sahf
(bad)
stc
pop
fwait
xchg
ins
ja
mov
pusha
es
scas
push
jns
sar
cmp
hlt
xor
push
mov
(bad)
mov
aas
ins
mov
and
push
stos
outs
inc
in
pop
push
mov
push
leave
push
add
iret
popf
(bad)
rep
(bad)
fisttp
xor
cmp
inc
push
jb
jmp
lea
fmul
shl
je
jb
mov
mov
jb
std
jp
call
fwait
pop
and
mov
je
je
jb
out
or
outs
push
mov
jae
ret
fwait
shr
lea
push
jns
int
iret
cmp
(bad)
sar
movs
push
sbb
xchg
je
sub
push
adc
repnz
dec
mov
push
xor
inc
fcmovne
scas
push
call
or
out
jne
movs
push
cmp
scas
push
hlt
movs
dec
pop
fwait
and
dec
push
cli
sub
iret
scas
push
mov
out
iret
push
mov
adc
push
jnp
cmp
jle
pusha
packssdw
js
cmovo
push
es
loopne
cmp
imul
add
push
div
in
xor
or
inc
add
stc
sbb
ins
cli
sbb
add
add
aad
jo
dec
xor
sbb
pop
lds
imul
das
aam
mov
or
mov
sbb
loop
aad
pusha
in
xor
sbb
adc
mov
mov
jnp
jmp
jne
fucomi
test
inc
mov
add
in
add
mov
in
test
repnz
add
in
xor
cdq
cmp
arpl
faddp
pushf
in
not
popf
sub
ret
pop
mov
xchg
movs
push
push
add
cmp
sbb
pop
in
jmp
cld
xchg
mov
dec
mov
cmp
rol
les
push
stos
les
push
mov
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
and
out
cmp
jmp
add
cmp
sbb
push
ja
adc
dec
xchg
stos
sbb
inc
sub
xchg
retf
jmp
shr
mov
sbb
push
and
pop
inc
mov
adc
lock
retf
add
(bad)
scas
adc
xchg
mov
repz
and
aaa
mov
(bad)
(bad)
ja
out
adc
movs
dec
jp
test
rcl
push
or
mov
push
sbb
push
sub
scas
add
sbb
retf
mov
out
and
jbe
(bad)
dec
cmp
aam
pop
mov
and
jnp
jo
out
test
leave
jnp
jo
sub
or
add
imul
sbb
in
in
push
mov
outs
add
sbb
imul
lea
test
push
call
fcom
ret
mov
push
repz
das
or
stos
js
push
(bad)
lea
add
arpl
push
in
bound
push
mov
adc
and
dec
xchg
movs
push
out
xor
out
(bad)
xor
out
(bad)
xor
out
(bad)
xor
out
(bad)
xor
out
(bad)
xor
out
(bad)
xor
out
(bad)
xor
stc
mov
neg
int3
fld
enter
dec
mov
lods
xor
mov
(bad)
xor
mov
popf
out
fbstp
lods
jmp
aaa
mov
jmp
ss
jmp
popf
out
lahf
ss
jmp
int
scas
aaa
lods
jmp
ss
jmp
popf
out
pop
and
(bad)
call
es
mov
jge
call
dec
or
sbb
cwde
aaa
popf
push
sbb
cmc
jb
sub
int
bound
cdq
mov
lahf
xor
jmp
cdq
out
(bad)
mov
lods
test
or
xor
(bad)
mov
imul
inc
pushf
jmp
adc
push
loop
enter
out
or
mov
(bad)
xor
cmp
adc
jle
sbb
cld
mov
xor
je
adc
(bad)
sub
sbb
(bad)
xor
out
das
aas
ins
mov
js
jmp
sbb
iret
xor
retf
ret
sbb
popf
mov
ins
pop
xchg
or
sbb
adc
movs
rcl
xor
call
test
aas
ins
mov
js
jmp
fwait
scas
(bad)
xor
(bad)
mov
sahf
out
rdmsr
popf
out
(bad)
xchg
fwait
push
rcl
inc
mov
or
popf
in
(bad)
mov
out
mov
cmp
cmps
lods
hlt
fst
cdq
dec
mov
sbb
dec
mov
ret
sbb
mov
call
mov
out
das
aas
ins
mov
js
jmp
fwait
push
xor
out
rdmsr
popf
out
(bad)
xchg
fwait
push
rcl
(bad)
mov
or
popf
in
(bad)
mov
out
mov
cmp
cmps
lods
je
adc
out
jg
dec
mov
dec
push
mov
(bad)
fist
cdq
outs
mov
mov
push
mov
(bad)
fistp
cdq
outs
jmp
push
inc
retf
mov
sbb
outs
jns
mov
mov
fdiv
popf
outs
jmp
xchg
inc
out
pop
inc
(bad)
in
cdq
(bad)
fisttp
mov
out
(bad)
mov
test
sbb
jmp
mov
pushf
ins
mov
in
(bad)
mov
lods
test
xor
retf
int
jg
ds
or
popf
pop
add
dec
xchg
cmp
push
loop
retf
lds
cmp
js
push
or
out
add
lods
(bad)
mov
dec
mov
xchg
adc
out
fnstsw
loopne
outs
ds
push
mov
sahf
mov
inc
mov
rdtsc
int
mov
push
jmp
sub
jmp
std
js
push
stos
push
mov
fbld
or
ret
mov
pop
xor
xchg
repz
stos
outs
ds
call
fbstp
in
ret
call
xor
out
das
std
cmp
mov
ficom
cdq
dec
mov
cmp
mov
js
jmp
inc
mov
pop
mov
mov
(bad)
cmp
mov
div
sbb
out
cdq
pop
push
mov
push
out
(bad)
cmp
mov
add
fnsave
fwait
out
mov
sbb
dec
mov
ret
adc
jmp
popf
outs
mov
das
aas
ins
mov
js
jmp
inc
mov
pop
mov
mov
mov
popf
faddp
inc
shr
cdq
into
mov
popf
xlat
mov
retf
mov
push
cdq
fiadd
xchg
lock
mov
cdq
sahf
mov
sahf
mov
xlat
repnz
retf
push
out
(bad)
aaa
lods
mov
push
inc
mov
pop
mov
out
(bad)
mov
aam
push
lods
pop
mov
mov
mov
popf
faddp
inc
shr
cdq
into
mov
popf
xlat
mov
retf
mov
ficomp
cdq
fiadd
xchg
lock
mov
cdq
sahf
mov
sahf
mov
xlat
repnz
retf
push
out
(bad)
aaa
lods
mov
(bad)
cli
inc
mov
pop
mov
out
(bad)
mov
aam
push
fcomp
cdq
mov
lahf
es
mov
adc
retf
into
sahf
rcr
cdq
outs
icebp
cwde
bound
mov
retf
mov
xor
les
push
stos
shl
jecxz
out
cmp
jmp
nop
out
mov
inc
xchg
adc
shr
adc
js
das
inc
mov
fwait
xor
jns
out
push
mov
cmps
retf
cmp
(bad)
je
adc
lock
jmp
adc
mov
arpl
xchg
jp
mov
fs
push
stos
dec
(bad)
scas
push
xor
dec
mov
test
or
dec
es
mov
push
jecxz
in
or
xchg
inc
sub
out
sahf
push
and
jecxz
sbb
test
outs
cwde
rep
dec
cli
fisttp
xor
pop
out
cmp
and
ret
dec
mov
sbb
vrcp28sd
mov
xor
(bad)
xchg
sti
mov
outs
xor
cmp
pop
repnz
jae
jmp
xchg
sbb
scas
lahf
iret
popa
iret
cmp
ror
repnz
ror
retf
aaa
ret
lods
lea
scas
jno
mov
mov
scas
push
jle
jl
mov
fld
cmp
hlt
cmp
scas
xchg
pop
bound
push
jg
push
mov
loope
iret
mov
ret
sbb
cmp
cs
xchg
sub
inc
mov
jno
xor
push
jl
adc
pop
mov
pop
push
lea
ds
adc
pop
int3
adc
pop
pop
mov
pop
jae
push
das
jmp
mov
pop
jge
push
jae
xor
das
clc
push
aaa
jnp
leave
adc
push
pop
dec
(bad)
das
test
ss
leave
adc
fild
inc
pop
retf
push
ins
adc
ins
adc
ins
adc
ins
adc
cld
dec
or
cmp
jnp
ins
adc
cld
retf
mov
pop
leave
pop
pop
sbb
retf
or
pop
ins
adc
mov
pop
pop
or
mov
outs
adc
sub
sub
adc
xor
mov
dec
and
jnp
add
dec
mov
add
dec
lahf
add
push
xor
push
sub
jg
push
cmp
jo
xor
pop
or
test
fwait
and
in
xchg
and
inc
out
mov
xchg
iret
das
cmp
aad
xchg
adc
mov
stos
jl
add
dec
mov
pop
jae
push
das
jmp
mov
pop
jge
push
jae
xor
das
cmp
adc
js
mov
stos
jl
add
dec
mov
pop
jae
push
das
jmp
mov
pop
jge
push
jae
xor
das
cmp
movs
sti
xchg
adc
mov
stos
jl
add
dec
mov
pop
jae
push
das
jmp
mov
pop
jge
push
jae
xor
das
cmp
xchg
sti
push
in
js
mov
stos
jl
add
dec
mov
pop
jae
push
das
jmp
mov
pop
jge
push
jae
xor
pusha
imul
add
adc
xchg
xor
jle
dec
pop
add
pop
pop
pop
fmul
add
test
jge
fcomp
fisubr
jnp
and
popa
xor
jne
ins
mov
jnp
ins
adc
and
jno
xor
mov
jmp
aaa
jnp
cmp
sti
push
cmp
fadd
stos
cmps
repz
cmps
xchg
mov
daa
jno
arpl
call
sub
test
add
enter
dec
aas
ret
mov
js
aaa
je
rol
mov
push
push
shl
jp
outs
(bad)
leave
sub
test
xor
push
pop
test
push
cli
out
lds
jnp
inc
push
fist
inc
or
jne
out
cmp
lock
jbe
mov
mov
cmp
mov
in
mov
inc
loop
pop
pop
test
push
push
adc
retf
mov
outs
leave
popa
ss
jg
sbb
(bad)
mov
iret
pop
loopne
mov
xor
stos
cli
movs
push
sbb
out
movs
push
sbb
xor
push
arpl
rcr
mov
cmp
or
aam
dec
leave
jb
mov
mov
add
jl
imul
adc
mov
cli
xchg
mov
push
rep
(bad)
jno
jnp
push
jbe
stos
iret
lea
sub
xchg
shl
cmp
push
jmp
and
jnp
pusha
xor
int
and
ret
sbb
jnp
mov
add
cmp
scas
adc
(bad)
in
and
mov
push
stos
push
pusha
cmove
enter
push
xchg
aas
ret
sti
sbb
retf
dec
jmp
jbe
movs
outs
and
sbb
push
mov
xor
push
cmc
mov
call
aaa
push
test
fistp
fwait
push
pop
jno
fwait
in
shr
pop
(bad)
rsm
imul
mov
loope
aas
or
pop
pop
aaa
lods
dec
dec
mov
jmp
sub
sub
es
int
test
sbb
daa
std
int
into
repnz
mov
loop
dec
loopne
out
adc
mov
into
repnz
aaa
adc
cmps
fiadd
jne
jbe
std
jno
xor
fldenv
sub
outs
mov
mov
mov
mov
sbb
in
jmp
(bad)
in
and
lods
pop
ja
lods
jmp
jns
lods
jmp
jns
cmc
jp
pop
test
jmp
aaa
lods
jmp
fs
mov
jge
icebp
cmp
jmp
lahf
aaa
xchg
jge
call
jmp
jnp
lods
jmp
pop
xor
out
fnstcw
or
push
jnp
mov
mov
pop
ret
bnd
pop
test
mov
dec
jecxz
push
jnp
mov
mov
pop
ret
bnd
push
test
sar
pop
pop
xor
dec
jg
stos
dec
jg
stos
dec
jg
stos
dec
jg
jne
shl
stc
sub
mov
leave
push
pop
mov
push
dec
mov
or
push
jnp
mov
mov
and
lods
jmp
imul
stc
jns
lods
pop
xlat
ja
mov
aas
lods
jmp
mov
xor
adc
jmp
push
cmp
jbe
das
lods
jmp
sub
mov
jns
stos
cmp
ja
ins
xor
lods
jmp
inc
enter
arpl
dec
repnz
test
mov
icebp
outs
int
dec
mov
test
jns
popf
push
jbe
dec
(bad)
sub
outs
mov
mov
mov
mov
mov
mov
sbb
fyl2x
cmp
mov
jns
adc
std
jns
sbb
jmp
jns
lods
jmp
jmp
cmp
scas
in
jns
lods
jmp
pop
xor
in
or
ficomp
jmp
push
jb
in
sbb
mov
xor
jmp
xor
pop
and
jne
shl
stc
sub
mov
leave
push
pop
mov
popa
mov
fnstenv
pop
mov
pop
test
dec
mov
test
outs
cwde
stos
call
push
xor
dec
jg
repnz
sbb
fnstenv
or
sbb
pop
leave
sar
fldenv
sub
outs
mov
mov
mov
mov
cwde
popa
test
stc
div
jmp
aaa
adc
in
stc
out
into
jge
stos
dec
jg
stos
dec
jg
stos
dec
jg
stos
fldenv
sub
outs
mov
mov
mov
mov
cwde
imul
imul
jmp
cmp
cmc
jmp
xor
lahf
and
daa
lods
jmp
(bad)
lods
jmp
xor
adc
call
cmp
cwde
jno
in
stc
mov
jmp
aaa
adc
push
push
arpl
mov
cmp
mov
imul
mov
(bad)
push
(bad)
ret
cmp
lods
push
retf
repnz
sbb
pushf
mov
jb
ins
jne
push
imul
mov
inc
adc
sar
mov
push
jb
js
push
mov
stos
xlat
adc
dec
or
imul
xchg
pop
and
div
jne
popa
push
inc
cmp
mov
stos
mov
and
pusha
xchg
xor
inc
or
nop
sbb
xchg
cmp
leave
fs
lods
jmp
or
aam
jne
jp
xor
xchg
out
add
add
les
lock
pop
out
pop
cmp
stos
pop
cdq
fwait
setnp
daa
push
(bad)
push
jp
xor
xchg
(bad)
in
xchg
dec
es
or
data16
aad
or
aas
ret
(bad)
push
adc
pop
loopne
rep
dec
cli
sbb
mov
scas
(bad)
outs
push
(bad)
sub
cmps
push
cmp
fwait
aad
add
out
xor
sbb
loopne
cli
push
sbb
sub
scas
push
ins
data16
xor
sti
mov
rcr
popa
stos
out
adc
sar
xchg
jae
in
rcr
fild
sbb
adc
dec
xchg
xor
call
or
mov
pop
imul
jno
es
inc
push
aad
rol
rol
test
jg
ja
mov
test
je
push
test
mov
jecxz
aaa
scas
dec
out
das
or
add
inc
rol
rcl
aaa
add
aad
push
not
test
fwait
cs
imul
ror
popa
leave
push
xchg
ret
retf
and
pop
(bad)
clc
mov
nop
cmc
or
dec
rcl
cmps
dec
and
and
cmps
and
in
cmc
mov
(bad)
loope
jno
sahf
rol
push
test
loope
dec
push
enter
iret
je
es
adc
add
pushf
mov
cmp
jmp
rcl
daa
lahf
mov
pop
(bad)
push
or
scas
sti
cmps
fwait
hlt
mov
push
rol
hlt
(bad)
xchg
hlt
mov
ror
shl
cdq
hlt
mov
or
or
rol
push
or
js
mov
int3
cmp
cwde
and
sub
in
mov
sti
mov
aam
sar
jbe
in
cmp
fs
scas
xchg
inc
xor
pop
mov
jo
in
push
stos
ret
cmp
cmovnp
mov
shl
loop
xchg
inc
xor
lods
inc
dec
add
retf
mov
out
repnz
fsubr
les
jnp
retf
imul
add
push
mov
mov
push
rol
dec
xchg
sbb
dec
sti
dec
xor
(bad)
int3
cmp
xchg
mov
int3
sbb
xor
sbb
jmp
fwait
xchg
mov
cmp
push
pushf
cmps
jno
test
movs
push
sbb
movs
pop
pop
adc
pop
stos
les
ror
mov
pop
stos
rcr
cmp
cmp
icebp
lahf
repz
pop
loope
ins
jp
bound
or
xor
sub
push
mov
in
jno
pop
cmc
add
je
inc
leave
ins
es
pusha
aas
sbb
mov
nop
aam
cmp
fld
loopne
outs
xchg
shl
xor
jle
jnp
mov
fcomp
and
cmp
push
retf
adc
int3
cmp
repnz
jg
outs
ss
jnp
stos
jmp
push
push
cmp
in
xor
test
pop
sbb
push
jl
mov
mov
xor
push
dec
push
lods
push
aas
or
jnp
push
fisubr
xor
enter
(bad)
scas
push
cmp
mov
sbb
call
jmp
mov
jmp
add
jmp
add
jmp
add
inc
pop
jg
lock
mov
mov
or
js
add
mov
xchg
das
out
movs
pop
mov
jmp
add
or
mov
push
xchg
pop
jmp
lea
into
shl
fsubr
shr
cld
adc
pop
pop
movs
icebp
add
sbb
jg
lds
or
inc
push
adc
sub
mov
out
in
dec
fstp
ins
pop
jmp
add
ins
cmc
push
shr
cld
adc
pop
pop
movs
icebp
add
sbb
jg
cmc
add
jmp
push
cmp
aad
mov
or
inc
sub
jmp
mov
das
inc
or
xor
pop
dec
push
xchg
inc
int
sub
add
xor
pop
ins
and
cmp
jmp
fmul
(bad)
(bad)
mov
out
in
dec
fld
add
fistp
(bad)
mov
out
in
dec
fld
pop
(bad)
movs
icebp
add
jmp
add
xor
pop
fcom
adc
call
xchg
fst
xchg
test
jmp
and
sub
xchg
mov
mov
push
fld
mov
(bad)
xor
outs
pop
sub
xor
in
hlt
inc
(bad)
fisttp
dec
fsub
push
(bad)
fmul
xchg
mov
jl
retf
pand
dec
fsub
push
out
cmovnp
jl
retf
pand
pop
mov
into
je
inc
aas
adc
add
movs
jl
cli
aad
add
jo
out
aam
or
gs
into
pop
lods
add
ret
in
(bad)
jnp
out
xor
dec
sub
gs
pop
(bad)
lds
dec
test
mov
out
gs
iret
jnp
les
xor
push
ins
push
mov
(bad)
call
call
add
clc
sub
pusha
jg
test
add
push
or
mov
outs
xor
jmp
add
fld
xor
lods
lds
cmp
loope
jmp
addr16
lds
push
jmp
ds
adc
add
aad
outs
fwait
stc
adc
jmp
xor
cwde
mov
por
add
jmp
fmul
xor
or
mov
aaa
push
adc
jmp
mov
mov
jo
sti
aad
pop
pop
dec
mov
movs
sub
jmp
add
xor
pop
sub
fcomp
movs
icebp
add
mov
nop
js
out
(bad)
sbb
dec
sub
gs
pop
or
fmul
mov
icebp
push
xchg
xlat
cs
pusha
(bad)
fwait
jmp
mov
fwait
jmp
aas
fstp
add
jo
and
fmul
in
and
scas
mov
(bad)
dec
es
gs
dec
not
add
mov
nop
daa
pop
(bad)
in
xchg
cmp
inc
inc
cli
ins
dec
or
aad
pop
pop
into
adc
jmp
pop
sar
das
fstp
inc
ins
in
or
loop
dec
in
add
push
sbb
jmp
mov
cs
sub
jnp
xor
ins
cmc
push
mov
adc
fcomp
movs
icebp
add
xchg
fstp
ret
dec
pop
jmp
xor
ins
in
jno
sbb
adc
fcomp
movs
icebp
add
adc
aas
push
(bad)
lds
aad
or
in
dec
jmp
addr16
adc
add
jmp
pusha
outs
fwait
stc
adc
jmp
mov
fisubr
ror
mov
movs
sub
jmp
add
pop
mov
mov
aad
or
stos
and
jmp
add
mov
gs
das
out
lds
por
dec
sbb
aad
dec
cmps
addr16
js
add
mov
xchg
sub
in
mov
mov
rol
adc
jbe
jmp
pop
iret
xchg
lock
(bad)
mov
(bad)
sti
(bad)
push
pop
(bad)
lock
mov
lds
addr16
and
lahf
sub
dec
jge
scas
movs
shl
sbb
scas
adc
les
push
stos
les
push
stos
retf
bound
ror
push
sub
mov
je
cmp
cmp
mov
stos
jp
mov
sbb
push
xor
sbb
xchg
sub
dec
dec
cmp
and
stos
int
stos
cld
js
out
sbb
xor
fst
(bad)
imul
or
dec
pop
adc
int3
test
inc
or
cmc
adc
mov
sbb
add
push
xor
les
pushfw
mov
jbe
mov
outs
mov
(bad)
xchg
inc
xor
lock
fstp
xor
push
rcl
sbb
push
and
mov
push
cli
scas
out
mov
push
push
(bad)
pop
inc
or
adc
sti
pop
sub
push
stos
jae
loopne
bound
dec
je
stos
mov
arpl
dec
inc
in
loopne
push
xor
retf
rcl
ret
mov
cmp
add
jg
into
push
fwait
push
test
pop
arpl
mov
sbb
mov
xchg
imul
xchg
iret
jno
cmp
popf
inc
cli
movs
push
cmp
retf
fild
dec
xchg
sbb
push
adc
inc
and
cli
add
sbb
ror
in
dec
jp
push
mov
pop
pop
mov
test
aas
jbe
retf
(bad)
xchg
dec
jo
leave
(bad)
nop
or
dec
xchg
int
mov
mov
mov
call
popa
jb
fidivr
mov
inc
ins
and
call
xchg
jge
inc
mov
cmp
fisttp
pop
sbb
(bad)
pop
add
add
cwde
and
popa
xchg
movs
enter
xchg
mov
mov
mov
stos
enter
xchg
stc
pop
sar
stos
ret
cmp
cmovnp
or
in
push
stos
ret
or
mov
shl
xor
sbb
retf
jo
ret
adc
push
mov
lea
ror
(bad)
fidivr
push
adc
sub
pop
sbb
adc
pop
lahf
dec
or
xor
adc
fild
xor
fnstcw
mov
scas
dec
outs
inc
loop
sub
push
mov
shl
push
push
sbb
in
movs
jle
in
push
mov
pusha
xor
mov
push
sbb
cmp
jno
jg
adc
jg
fs
add
mov
(bad)
inc
push
in
into
mov
fidiv
adc
push
lods
iret
push
retf
sbb
jle
fs
in
call
outs
(bad)
jle
adc
jbe
dec
(bad)
scas
push
aas
or
(bad)
mov
jno
or
adc
mov
push
dec
or
sub
and
mov
aam
xchg
scas
jno
popa
sub
xchg
xor
cli
pop
lock
rol
mov
mov
sbb
mov
call
cmp
scas
push
mov
jo
out
cmp
mov
mov
iret
scas
push
jp
rcr
cmp
dec
sub
or
rcl
call
mov
loope
add
mov
test
outs
sbb
retf
mov
cld
add
lods
retf
mov
es
inc
xchg
in
adc
mov
xor
pop
and
ret
jne
dec
xchg
les
or
mov
imul
xchg
push
pop
test
push
stos
in
xchg
push
mov
das
or
jge
push
mov
xor
mov
mov
xor
adc
jp
das
mov
ja
mov
pop
aas
ins
mov
adc
xchg
sub
xor
fs
sbb
or
rcl
stos
les
jbe
hlt
inc
cld
stos
ins
inc
or
add
cs
dec
in
adc
sbb
jle
enter
test
sbb
cmp
aaa
push
stos
jo
ins
outs
or
cmp
ror
push
sbb
mov
or
int3
xchg
pop
jae
add
mov
push
xor
push
xchg
clc
mov
xchg
jnp
mov
sbb
arpl
ds
pusha
xor
int
jb
ret
les
mov
in
js
cmp
push
(bad)
push
nop
add
pop
rep
push
xor
enter
loopne
and
mov
lea
xor
pop
lock
fisub
scas
push
jmp
jge
rep
pop
jp
test
cmovge
out
aam
add
out
sub
jbe
sub
lock
pusha
(bad)
fs
pusha
(bad)
fs
pusha
(bad)
fs
arpl
hlt
add
into
inc
pop
adc
fs
(bad)
(bad)
hlt
adc
cli
adc
ror
inc
pop
pusha
(bad)
fs
data16
pusha
inc
cli
add
nop
mov
and
xor
fs
pusha
dec
cmp
pop
fsub
aam
ja
inc
cli
aam
xor
dec
leave
pusha
mov
into
pop
sar
pop
in
pop
pop
pusha
jle
sbb
xchg
push
xor
pop
movs
xchg
xor
add
mov
pop
fsub
jecxz
adc
hlt
jb
(bad)
imul
ficomp
out
fs
bound
pop
loopne
xchg
add
fs
push
mov
dec
push
mov
je
pusha
(bad)
aam
and
cmp
push
mov
adc
cli
push
adc
scas
ret
fld
lods
arpl
cmp
fwait
cmp
pop
inc
push
popa
test
inc
fsub
xor
inc
jg
out
aaa
jns
fsub
mov
in
jg
push
or
mov
les
push
stos
les
push
stos
les
push
stos
les
add
add
cwde
in
imul
mov
push
sub
mov
cli
xchg
mov
shl
pop
jecxz
add
js
mov
xchg
jp
scas
aam
inc
test
jge
mov
fs
push
lods
out
mov
sbb
pushf
dec
xlat
adc
inc
hlt
xor
imul
js
(bad)
es
imul
outs
xchg
test
idiv
cli
cmp
mov
adc
je
popa
add
loopne
inc
lods
aam
loopne
inc
inc
push
stos
ror
test
cmp
add
xor
cmp
jp
mov
ret
or
mov
push
push
pop
stos
lds
shl
cmp
in
push
adc
mov
push
aas
ret
cmp
jle
mul
mov
fist
test
cmp
jl
push
xchg
push
jae
xor
mov
leave
jo
push
or
cmp
jns
mov
or
in
jno
pop
and
cmp
je
push
dec
jb
jbe
jbe
mov
xchg
pop
bound
xor
lods
outs
xor
dec
(bad)
ds
adc
lods
xchg
stos
outs
leave
jno
inc
test
jnp
outs
fs
sub
jae
inc
jle
pop
mov
xor
retf
mov
movs
mov
inc
mov
in
arpl
jmp
jmp
or
sbb
mov
or
ds
int3
push
dec
jbe
or
into
mov
push
ds
sub
call
push
ds
mov
jmp
mov
dec
push
sbb
mov
(bad)
lds
sbb
loopne
pop
into
mov
mov
sbb
jecxz
inc
out
fnstsw
sar
(bad)
mov
jg
xchg
push
nop
mov
dec
call
or
outs
xchg
mov
or
pop
ss
sbb
mov
aad
sahf
call
enter
xchg
call
cwde
mov
shl
mov
pop
pop
out
mov
std
or
out
std
push
out
sbb
sbb
out
in
dec
in
mov
repnz
imul
sbb
inc
aas
pop
xor
pop
and
jle
scas
dec
rcl
je
or
js
mov
or
mov
adc
pop
pop
test
inc
stos
retf
lea
mov
dec
sub
sub
test
loopne
(bad)
not
inc
adc
sub
(bad)
adc
jns
movs
in
push
push
sbb
cli
cmp
mov
jecxz
stos
retf
(bad)
(bad)
jne
cdq
adc
out
add
test
div
mov
xor
and
mov
lock
fs
jb
movs
push
add
pop
cmps
les
ror
shr
je
push
aas
ret
xor
pop
scas
sar
adc
retf
xor
mov
in
cdq
dec
xchg
stos
mov
push
fs
or
jl
outs
cdq
push
and
inc
mov
clc
mov
loope
add
dec
inc
mov
dec
leave
ins
data16
or
or
mov
retf
lods
pop
pop
cmp
outs
xor
ret
je
sub
les
scas
inc
jmp
(bad)
int3
jb
scas
push
pop
mov
push
cmp
out
xchg
or
xor
(bad)
xchg
jmp
cmp
movs
dec
cli
scas
test
push
push
out
fld
dec
sbb
jg
adc
out
adc
inc
pop
sbb
pop
sbb
pop
sbb
pop
sbb
push
setle
sub
sub
pop
push
jp
pop
sbb
sahf
mov
push
jp
or
int3
sahf
pop
inc
pop
sbb
pop
cld
dec
int3
jp
sbb
stos
inc
jp
pop
sbb
rol
jb
pop
stos
cs
add
lds
xchg
jg
retf
sbb
inc
in
adc
sbb
inc
sub
pop
push
push
pop
sbb
push
sbb
jb
pop
sub
or
(bad)
fdivr
push
pop
sbb
pop
mov
pop
sbb
ins
push
cmp
test
repnz
pop
stos
cs
fdivr
jbe
mov
pusha
pop
or
loope
fsub
pop
call
pop
jne
inc
jl
cmp
or
gs
inc
dec
dec
mov
adc
fadd
mov
push
sti
mov
jae
jno
cli
ja
dec
jb
scas
jbe
je
clc
movs
xor
cmp
je
xchg
mov
inc
fist
call
(bad)
mov
aas
rol
stos
lds
inc
sub
inc
ja
adc
(bad)
repnz
fwait
aad
jo
mov
loopne
dec
setge
int
lock
xor
push
stos
push
inc
pop
stos
iret
popf
sub
jnp
xor
add
les
push
stos
clc
pop
pusha
ret
mov
fs
mov
lock
mov
xchg
push
jae
rep
dec
cli
out
imul
test
add
out
mov
popf
fwait
int3
call
push
call
ins
ret
cmp
jmp
mov
push
sti
or
icebp
popa
pop
arpl
aad
lods
ret
mov
lea
ret
popf
cmp
cmp
test
ret
mov
retf
aas
ds
push
jbe
pop
dec
push
mov
loopne
and
jnp
mov
ret
retf
retf
scas
push
rep
dec
jp
mov
dec
or
push
jo
adc
dec
sub
sbb
inc
sub
xchg
or
or
push
push
xor
mov
ss
mov
sub
shl
movs
scas
fs
push
hlt
mov
or
sub
dec
mov
xchg
or
sahf
adc
xchg
or
into
jnp
or
and
sub
in
adc
xchg
or
sub
ror
dec
sub
xchg
popf
xor
inc
cmp
cmp
jne
or
cmps
inc
add
xchg
mov
inc
sbb
xchg
sbb
mov
ficomp
sub
div
jno
fwait
arpl
es
xchg
das
data16
push
test
sub
or
jle
nop
imul
push
scas
shr
inc
mov
aaa
push
xor
pop
jae
jno
cli
jp
outs
(bad)
je
push
mov
inc
stos
ror
sbb
xchg
jmp
dec
sub
sub
sub
mov
rcl
call
leave
(bad)
mov
add
pop
ret
sub
test
push
mov
push
push
ret
pop
stos
retf
mov
inc
push
xor
pop
loopne
fidivr
cld
xor
and
jmp
ins
mov
push
call
gs
mov
pusha
xor
xor
jl
ret
cmp
(bad)
jns
out
add
lea
ins
fisubr
mov
cli
out
ror
out
adc
push
xchg
adc
sar
jp
icebp
out
aam
jecxz
push
cmp
fwait
mov
mov
out
bound
jmp
push
sbb
add
in
in
dec
pop
aas
ret
jnp
int3
and
imul
cli
fwait
outs
xor
push
sbb
fstp
sbb
jns
in
aas
dec
or
pop
jae
push
xor
enter
pusha
xor
ja
jae
(bad)
hlt
xchg
or
out
xor
sub
mov
call
mov
addr16
shl
stos
enter
mov
mov
lods
retf
aas
clc
inc
nop
arpl
lea
sub
inc
cmp
mov
gs
mov
mov
jns
inc
mov
mov
mov
cmp
mov
or
sahf
and
repnz
or
cmps
push
retf
xor
lea
mov
pop
push
and
movmskps
xor
mov
pusha
pop
push
jno
aas
into
or
addr16
div
mov
jp
push
or
jno
push
mov
es
pop
aaa
push
aas
daa
stc
mov
fsub
cmp
(bad)
imul
dec
cwde
pop
ja
dec
ja
push
(bad)
fcomi
jmp
cmp
mov
sbb
cmp
cmp
jmp
xlat
mov
or
sbb
sbb
pop
call
cmp
adc
call
cmp
and
inc
aas
call
sar
sahf
aad
stos
enter
call
jg
addr16
mov
stos
lds
cmp
arpl
movs
stos
retf
lea
arpl
fst
out
fidiv
mov
pop
scas
mov
or
mov
cld
call
mov
cdq
in
push
scas
mov
not
cwde
fdiv
or
out
cmp
mov
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
add
add
in
inc
jmp
jmp
jo
jnp
inc
xchg
pop
int
add
rcr
push
mov
push
stos
fist
dec
and
in
and
inc
icebp
shl
fsubr
sub
sbb
cmp
jbe
push
inc
pop
stos
les
lock
xchg
std
adc
adc
fisubr
les
loopne
pop
push
sub
pusha
movs
mov
sbb
cmp
scas
push
jge
mov
mov
loopne
leave
js
jae
pop
sbb
outs
ss
xchg
scas
jno
popa
lods
call
lock
jmp
out
jecxz
xor
in
mov
jnp
loopne
outs
inc
sbb
pushf
pop
and
jge
xchg
mov
hlt
jo
call
int
leave
ja
cld
mov
nop
lea
fs
lods
cs
cmp
outs
xor
jbe
jmp
pop
jae
xor
dec
xor
jbe
loopne
sub
call
loope
mov
pop
pop
mov
cmp
shl
ffree
inc
mov
scas
mov
bound
inc
cld
add
mov
ret
dec
and
(bad)
sti
xchg
inc
inc
sti
(bad)
call
sub
dec
fsubr
sub
mov
test
sub
cmp
iret
sub
sbb
fcomp
sub
jmp
xor
mov
xchg
sub
sbb
jmp
fidiv
sbb
into
imul
dec
fcomp
jb
pop
inc
or
in
pop
sbb
js
lods
dec
fsubr
sub
add
adc
cwde
cmp
fsubr
fcomp
pop
sbb
mov
sub
mov
mov
sbb
scas
xlat
sub
imul
in
lods
movs
loopne
rcl
sub
jmp
fstp
mov
jecxz
dec
fdivr
mov
fsubr
lea
jmp
jmp
imul
adc
repz
and
outs
fstp
fisttp
retf
fsubrp
sub
sub
sar
shr
sub
fld
retf
jge
lods
inc
fsubr
sub
pop
cmp
rcr
dec
dec
sub
fsubp
sub
pop
dec
pop
push
dec
fmul
fsubrp
sub
mov
or
(bad)
movs
mov
mov
mov
sbb
test
xor
jmp
movs
mov
jle
adc
push
sar
fisubr
or
js
lea
jmp
pop
cmc
add
mov
inc
mov
adc
push
sar
fimul
jmp
fstp
pop
push
jb
mov
sub
add
dec
mov
jl
out
xor
mov
mov
push
shl
sub
sti
xchg
sub
jmp
scas
or
mov
inc
fsubr
sbb
pop
call
jmp
ins
mov
fcomp
gs
xor
(bad)
in
popf
pop
push
or
xor
dec
(bad)
in
cmp
adc
popa
xor
lock
fist
jno
xor
sub
push
daa
mov
das
iret
sub
sub
imul
jle
sub
sub
jbe
sar
fsubr
sbb
test
je
mov
stos
sar
bound
push
pop
xor
iret
repnz
and
pop
xor
push
pop
test
push
dec
das
aaa
push
sbb
clc
push
fst
out
xor
into
mov
loop
inc
mov
dec
in
dec
fbstp
xchg
jbe
shr
adc
pusha
push
test
loop
hlt
cmp
scas
cli
cmp
mov
repz
stos
les
loopne
hlt
movs
dec
pop
adc
pop
stos
into
lea
addr16
iret
xchg
iret
cmp
mov
hlt
movs
dec
pop
xchg
mov
stos
ror
je
(bad)
scas
push
ss
imul
shl
popf
mov
add
movs
push
dec
xchg
add
js
retw
fwait
fs
cdq
out
movs
xlat
pop
lock
xchg
test
cdq
push
sbb
or
(bad)
mov
xchg
out
push
push
xchg
lea
mov
out
je
movs
pop
jp
xchg
dec
iret
mov
push
sub
jnp
pop
jae
push
xor
cld
mov
je
adc
in
cmp
in
movs
push
sbb
cmp
sbb
xor
test
test
inc
sbb
cmp
outs
es
scas
push
ja
pop
cmps
dec
or
sub
dec
xchg
dec
sbb
sub
jg
add
pushf
aad
stos
sbb
jne
ins
stos
out
arpl
out
arpl
mov
sub
sti
pop
pop
stos
out
arpl
aas
sub
jecxz
cmp
fstp
fstp
pop
arpl
mov
stos
cmp
out
arpl
jno
popa
stos
out
shl
adc
inc
scas
xchg
add
push
sbb
mov
stc
arpl
xchg
movs
xor
or
sub
and
mov
jb
jae
movs
sub
pop
add
div
push
arpl
cmps
stos
cmp
scas
sbb
mov
dec
arpl
adc
arpl
stos
in
mov
sbb
ins
mov
mov
mov
arpl
cmp
mov
mov
pop
add
xchg
mov
rcl
inc
push
inc
xchg
rcl
mov
inc
scas
addr16
jl
push
retf
repnz
sbb
imul
cmp
sbb
jle
push
lock
in
cmp
in
loopne
xchg
les
cwde
xchg
add
icebp
pushf
inc
jmp
(bad)
leave
mov
outs
and
ins
push
sub
imul
sbb
xor
push
mov
ret
add
int
ret
push
sbb
mov
mov
fcom
mov
shr
and
jge
inc
and
pop
lahf
inc
sbb
ret
(bad)
scas
xor
push
and
sbb
push
sbb
fistp
sahf
ja
mov
enter
loop
cld
movs
push
call
and
enter
call
or
push
jnp
outs
xor
in
xchg
sbb
sar
in
mov
pop
pop
repnz
push
pop
movs
pop
or
iret
cmp
rep
push
push
push
stos
iret
lea
mov
xchg
(bad)
ror
je
adc
mov
nop
push
sbb
mov
push
xor
outs
leave
jae
jmp
aad
popf
add
retf
std
(bad)
je
cmp
pusha
mov
test
js
xor
jp
xor
push
(bad)
sbb
sbb
aaa
pusha
xor
cmp
test
ret
sub
je
pusha
push
sbb
sub
js
int3
hlt
pop
mov
mov
xor
rcr
rcl
push
or
inc
nop
in
xor
rcl
push
mov
jnp
pop
mov
sbb
pop
xor
pop
clc
adc
inc
ret
pop
xor
rcr
cwde
fst
sub
xor
rcl
fsub
jbe
jl
and
dec
or
(bad)
mov
cdq
iret
push
xor
nop
ffree
inc
inc
mov
ret
movs
push
dec
mov
(bad)
pop
xor
inc
std
jo
(bad)
shr
iret
mov
sbb
aas
mov
sbb
rcl
mov
sbb
shr
fild
xor
inc
shr
loop
fisttp
(bad)
dec
ret
arpl
sbb
aas
mov
xchg
jecxz
mov
cs
fst
push
mov
aaa
test
or
dec
mov
add
rcr
rcr
rcr
rcr
cwde
sub
outs
dec
jp
ss
sbb
push
mov
in
dec
cmp
pop
xor
dec
jnp
jge
lods
ins
push
rcl
push
or
add
adc
push
in
add
jmp
ss
test
cs
fcom
lods
repz
cs
fst
lea
inc
test
stos
sub
jne
gs
jbe
cmp
sub
ins
mov
cdq
jo
mov
repz
jne
out
retf
gs
sub
imul
(bad)
jno
lds
jno
jbe
cmp
sub
ins
mov
cdq
jno
mov
repz
jne
out
retf
gs
sub
imul
push
adc
add
adc
sub
(bad)
retf
push
xor
div
ds
adc
ret
aas
inc
xor
test
daa
sbb
aad
xor
repz
pop
popf
xor
pop
jbe
inc
inc
nop
in
xor
rcl
sbb
sub
sub
pushf
in
dec
cmp
dec
xor
ss
add
jmp
cwde
ins
dec
cmp
push
scas
mov
dec
mov
xchg
push
xor
mov
push
xor
rcr
rcr
rcr
rcr
rcl
ret
sbb
and
adc
mov
pop
inc
inc
pusha
int
sbb
pop
xor
out
push
pop
ss
jb
cwde
pop
xor
push
jne
(bad)
ds
lods
sbb
sbb
pop
add
pop
xchg
sbb
mov
mov
ss
out
xor
in
mov
shr
outs
dec
jp
ss
mov
xor
mov
pusha
int
sbb
push
xor
cwde
pop
xor
jb
ror
loop
adc
mov
pop
and
fld
(bad)
push
mov
std
mov
bound
add
rcr
rcr
rcr
ror
into
pop
jge
ins
pushf
or
xor
pop
jg
lea
sub
pop
jge
sbb
es
xchg
cmp
ds
lahf
pop
xor
ret
sbb
out
add
push
sbb
jl
lods
push
sub
xor
sahf
das
outs
dec
jp
ss
mov
xor
mov
inc
ror
adc
sbb
cwde
pop
xor
jb
pusha
and
add
adc
and
and
fst
(bad)
push
mov
lock
bound
add
jp
ss
mov
xor
mov
inc
add
xor
cwde
pop
xor
jb
xor
pop
add
adc
jnp
pop
and
frstor
(bad)
push
mov
jmp
int
pushf
pop
sub
(bad)
bound
aas
rcr
scas
dec
inc
pusha
or
sbb
add
adc
jge
pop
and
xor
loop
imul
pop
mov
enter
sbb
out
repnz
fsubr
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
les
push
stos
pushf
mov
jb
xchg
xor
int
xor
pop
mov
push
int
lods
aam
(bad)
fild
shl
adc
into
mov
dec
mov
and
out
mov
and
daa
and
ja
push
lea
add
(bad)
dec
and
sub
cld
repnz
pop
bound
stos
jge
mul
clc
push
push
ficom
int
aaa
int3
lea
popf
pop
jae
shr
and
ja
ins
cmps
and
pushf
jnp
sub
iret
cmp
push
sbb
mov
push
jg
popa
push
sti
mov
lds
test
imul
les
push
stos
bound
rol
or
cld
test
push
push
dec
stos
iret
lea
add
pop
pusha
ret
cs
jmp
adc
movs
dec
cli
xor
fnsetpm(287
aas
ret
xor
int
je
stc
icebp
out
lods
mov
lea
mov
ja
js
adc
pop
mov
push
aas
ret
call
or
adc
in
jmp
jbe
lahf
sbb
push
adc
jge
xor
pop
lock
adc
aas
(bad)
call
sub
fld
inc
push
add
cli
sbb
cs
sbb
cs
sbb
cs
sbb
cs
sbb
cs
sbb
cs
sbb
cs
sbb
cs
sbb
(bad)
mov
or
add
sub
(bad)
sbb
sub
jg
mov
cli
cli
xchg
sbb
das
pushf
jno
int
mov
cli
sbb
scas
cld
sbb
cs
sbb
jno
push
and
cmp
xor
scas
cld
sbb
or
and
inc
loope
rcr
mov
ds
(bad)
(bad)
stos
push
dec
sub
(bad)
(bad)
stos
aad
sub
push
sub
cmp
add
stos
jge
lods
in
dec
adc
or
shl
mov
push
pop
(bad)
call
cmp
dec
and
pop
sbb
jno
xchg
and
sbb
cld
fstp
mov
jnp
and
dec
inc
mov
fstp
mov
or
and
push
inc
jle
pop
sub
jns
push
jns
inc
rcl
cli
sbb
stos
mov
add
jp
push
das
cli
jmp
rcr
mov
js
push
sub
movs
fld
movs
cmp
(bad)
mov
xor
adc
adc
bound
pop
data16
stc
mov
pop
sbb
jno
in
dec
mov
or
mov
add
test
or
xor
iret
or
call
inc
cmp
cmp
mov
add
jbe
enter
das
sbb
sbb
pop
test
inc
stos
ret
cmp
dec
inc
shl
xchg
add
and
mov
shl
stos
retf
in
add
mov
loop
jbe
and
ja
ret
inc
call
ret
js
gs
or
into
out
xchg
dec
(bad)
scas
push
cmp
push
stos
outs
(bad)
sub
cdq
push
jae
and
movs
push
sbb
cmps
push
or
mov
retf
arpl
mov
nop
inc
in
pusha
adc
cmp
jno
and
stos
rep
(bad)
das
(bad)
fimul
stos
push
sbb
push
out
stos
(bad)
lea
xchg
test
loopne
mov
loopne
call
stc
xchg
hlt
outs
leave
je
shl
pop
jb
jge
cmp
lods
hlt
xchg
imul
in
out
xchg
scas
test
mov
ret
cmp
scas
xchg
push
and
xor
dec
lahf
mov
repz
add
leave
scas
push
dec
xor
cmc
inc
fcmove
and
ret
mov
shr
iret
pop
loopne
div
sbb
jl
clc
mov
loop
xchg
jge
js
lahf
sub
mov
inc
call
inc
call
inc
call
inc
call
inc
call
inc
retf
inc
call
inc
or
or
mov
pop
inc
stos
adc
inc
mov
adc
inc
push
ins
inc
or
add
cli
dec
mov
gs
push
and
mov
pushf
pop
call
imul
test
and
sbb
inc
hlt
mov
inc
pop
fisttp
je
lea
retf
aam
pop
mov
adc
inc
cmp
cmc
push
cmp
stos
jmp
imul
adc
push
mov
mov
adc
mov
loop
imul
dec
ins
adc
sub
and
or
fwait
gs
aam
ficom
and
or
fwait
gs
mov
adc
adc
pop
xchg
cmp
hlt
push
imul
sub
xchg
or
fwait
adc
push
imul
in
push
mov
mov
adc
mov
loop
imul
dec
ins
adc
dec
adc
gs
aam
cli
adc
gs
mov
cwde
adc
adc
pop
xchg
cmp
hlt
push
imul
sbb
xchg
or
xchg
adc
inc
mov
cmc
push
sti
pop
sub
pop
sbb
mov
loope
loope
loopne
cmp
rol
fnop
mov
inc
out
cld
into
mov
pop
xchg
ret
mov
push
retf
std
mov
mov
int3
ficom
adc
inc
dec
dec
inc
pushf
gs
mov
ror
idiv
stos
adc
ret
mov
push
retf
std
mov
mov
cmp
xchg
inc
mov
or
ins
ja
adc
push
mov
adc
mov
fwait
adc
hlt
addr16
lahf
and
ins
sub
fwait
gs
xor
cmps
xor
xchg
cmp
mov
ins
pop
sbb
ins
xor
inc
outs
dec
cld
inc
mov
cmc
push
sti
inc
sub
cmp
push
imul
in
adc
sbb
es
ret
mov
mov
sbb
dec
mov
sbb
add
in
and
push
mov
xchg
jne
(bad)
pushf
sbb
inc
push
cld
inc
mov
cmc
push
jnp
sub
cmp
lods
inc
cmp
lods
inc
cmp
hlt
push
imul
mov
pushf
rcr
ss
push
mov
lods
pop
dec
dec
fdiv
mov
lock
push
(bad)
imul
movs
sub
(bad)
mov
loope
mov
loope
mov
loope
mov
mov
loop
imul
adc
inc
stos
ins
pop
xor
cmpxchg
or
sar
data16
add
addr16
inc
shl
mov
sahf
xchg
sbb
mov
repnz
or
add
mov
lock
push
pop
test
stos
int
push
fimul
pop
mov
dec
xchg
or
inc
(bad)
out
shr
sub
xor
jge
outs
and
dec
jecxz
add
jb
stos
cmp
loop
xchg
dec
pop
lods
cli
jnp
mov
ret
mov
call
inc
push
retf
lods
fs
in
cmps
sbb
js
popa
ret
imul
pusha
xor
mov
movs
arpl
ins
ret
enter
out
rep
(bad)
loopne
pop
push
mov
popa
fisubr
or
lock
push
or
cmp
jns
repz
xor
jb
mov
sbb
and
sar
pusha
xor
ins
daa
fwait
jno
sti
mov
xchg
shl
xchg
pop
aaa
ret
aaa
rol
movs
stos
lea
stos
imul
repz
(bad)
cwde
push
jb
jge
sub
mov
(bad)
scas
push
cmp
xor
jmp
scas
push
cli
movs
push
sbb
sahf
iret
jno
cmp
push
sbb
push
mov
repnz
inc
and
xchg
jnp
aad
sbb
scas
ja
icebp
into
xchg
popf
push
or
sub
(bad)
mov
or
pop
mov
scas
push
sub
scas
xchg
pop
lock
push
lods
inc
test
mov
xlat
movs
xor
loop
movs
xchg
(bad)
cdq
xchg
movs
neg
jg
pop
pop
outs
fld
div
into
xchg
pop
mov
and
jmp
mov
addr16
mov
aas
pop
test
clc
mov
cmp
fld
dec
mov
inc
arpl
xor
or
retf
mov
loop
mov
addr16
mov
fdiv
in
push
leave
mov
dec
fld
pop
cmps
retf
inc
xor
xchg
lods
nop
pop
dec
lock
xor
xchg
lods
rol
dec
std
shl
rcr
xchg
in
cmp
retf
ja
xchg
sub
mov
outs
out
pop
xchg
cwde
int
pop
dec
sti
xor
ret
adc
fsubr
out
nop
mov
mov
stos
jo
push
cmp
xor
jno
xor
outs
aad
outs
xor
aaa
shl
cmp
or
xor
push
mov
or
push
jne
pushf
xor
sbb
cmp
out
push
push
pop
stos
(bad)
popf
jmp
ja
out
adc
and
cmp
push
push
push
pop
stos
leave
popf
stos
test
dec
outs
mov
popf
mov
inc
jmp
xor
je
loop
shrd
test
push
stos
outs
push
mov
inc
xchg
pop
js
dec
(bad)
scas
push
xor
out
in
inc
cmp
push
int3
out
out
mov
fs
enter
(bad)
in
xchg
retf
xchg
(bad)
mov
into
pop
aas
ret
mov
int3
inc
js
(bad)
dec
aam
hlt
data16
pop
adc
sbb
push
sub
lds
xor
in
pop
cmp
scas
push
jg
or
xor
sbb
addr16
test
scas
xchg
imul
out
in
movs
dec
cli
cmp
lods
out
aam
push
xchg
cmp
mov
dec
hlt
adc
hlt
movs
pop
pop
sbb
pop
call
pop
pop
cmp
dec
cmp
push
adc
or
xchg
shr
xchg
dec
aam
je
lahf
cmp
test
std
das
cmps
fistp
icebp
dec
or
scas
aas
ds
pop
imul
stos
scas
mov
pop
rcl
sti
pop
imul
int3
xor
mov
fisub
add
jae
ror
add
cmp
in
jp
popf
pop
outs
dec
mov
xor
into
mov
fist
cmp
inc
and
or
out
jno
xor
jne
mov
pop
adc
out
je
mov
and
or
cmp
pop
stos
lds
sub
and
or
stos
push
ds
sbb
in
jmp
fisttp
cmc
icebp
dec
lods
fbstp
push
adc
cwde
mov
fs
push
sbb
push
or
shr
jae
xor
pusha
jbe
jnp
add
or
idiv
inc
jp
outs
xor
out
rcr
mov
imul
scas
add
xchg
lods
jnp
popa
xor
in
pop
sbb
enter
js
cmp
out
add
(bad)
ja
fdiv
retf
sbb
cwde
jmp
sub
out
test
push
(bad)
add
fwait
xchg
aaa
cmc
iret
xor
ret
cmps
popf
mov
cmp
ds
enter
movs
dec
cli
and
rol
xchg
push
daa
aad
mov
pusha
xor
jmp
pop
and
jg
mov
inc
pusha
(bad)
cli
ins
adc
push
stos
pop
je
push
add
hlt
cwde
(bad)
push
test
mov
sar
push
sub
mov
shl
dec
idiv
jmp
and
sub
jp
into
scas
push
shl
jo
out
repnz
or
fsub
lock
loopne
inc
sub
in
loope
cmp
clc
xor
mov
sbb
pop
cdq
cmp
inc
adc
xchg
cli
and
jne
retf
sub
push
push
dec
push
pop
test
stos
ret
lea
sbb
mov
cmp
fwait
mov
psrlq
stos
shr
adc
push
xchg
jnp
inc
lods
out
shl
pop
jp
sbb
mov
sbb
iret
mov
cmp
inc
jg
pop
xor
aam
push
stos
jl
or
sub
sahf
xchg
push
bound
stos
iret
(bad)
into
dec
je
js
jbe
jmp
daa
cmp
call
lea
cmc
repz
push
push
(bad)
stc
stos
int3
lea
pop
jae
aam
out
or
fstp
sti
imul
cmp
scas
adc
push
jae
adc
sbb
or
pop
and
sbb
cmp
pop
loopne
ins
leave
pop
call
retf
lods
fs
int
and
ret
fstp
pusha
push
retf
aaa
sbb
jae
in
ret
adc
pop
cdq
ss
inc
retf
cmp
enter
jbe
out
fwait
dec
or
dec
adc
push
sub
scas
push
jbe
in
xchg
sub
dec
jge
leave
dec
xchg
jnp
sbb
adc
pop
and
aaa
sbb
into
dec
icebp
xchg
mov
aam
dec
dec
xor
mov
dec
xor
retf
mov
mov
mov
inc
dec
mov
stos
jge
mov
mov
aaa
or
mov
fldenv
(bad)
fucomi
mov
mov
fldenv
(bad)
fucomi
mov
lock
pop
icebp
(bad)
mov
mov
push
icebp
(bad)
mov
mov
inc
call
aad
jmp
ret
iret
pusha
cmps
mov
mov
adc
dec
jmp
inc
aam
jmp
mov
inc
fcmovu
xor
dec
sbb
cmps
fwait
scas
mov
xlat
fimul
cmps
stos
lahf
adc
mov
mov
cmps
mov
fiadd
lods
leave
lock
shl
fwait
jno
jmp
xchg
outs
inc
xchg
mov
xchg
sbb
jnp
push
adc
fnstenv
shr
and
jnp
push
adc
fnstenv
mov
fimul
adc
mov
(bad)
test
xor
call
(bad)
stos
mov
repz
cdq
icebp
xchg
dec
dec
shl
leave
pusha
cmps
fnstcw
popa
xchg
mov
rol
fimul
adc
mov
(bad)
test
dec
shl
fnstenv
lock
lock
sbb
xchg
dec
enter
fadd
lds
cwde
xor
fcmovne
ret
or
mov
xor
mov
add
mov
js
(bad)
mov
fbstp
xlat
call
mov
jp
pop
sti
mov
movs
fistp
adc
mov
cdq
xor
dec
fsub
(bad)
retf
test
cmps
fcmove
pusha
mov
mov
aad
jmp
jae
stos
sbb
(bad)
retf
fild
xchg
mov
arpl
fld
pop
stos
jns
push
fisubr
out
test
popa
test
pusha
xchg
mov
pusha
xchg
retf
movs
jnp
popa
mov
stc
xor
fmul
loopne
retf
(bad)
jmp
(bad)
cli
mov
sbb
xor
mov
pop
ret
(bad)
fimul
push
cwde
imul
fmul
loopne
retf
(bad)
jmp
(bad)
call
(bad)
fimul
push
cwde
imul
fmul
lock
sbb
xchg
dec
enter
fadd
lds
stc
xor
sbb
data16
jo
sbb
test
mov
mov
mov
xchg
mov
arpl
jmp
icebp
(bad)
call
(bad)
fstp
jno
mov
jg
les
cdq
icebp
inc
js
add
dec
jg
ss
mov
retf
cmps
fistp
pusha
xchg
retf
add
mov
xlat
push
mov
fistp
adc
imul
cmps
fistp
pusha
xchg
retf
aam
fbstp
push
retf
cmps
mov
fld
movs
sub
add
mov
add
pop
fdiv
or
add
pusha
xchg
xchg
dec
cdq
repz
jp
xor
fmul
(bad)
fucomi
mov
lock
add
retf
(bad)
call
adc
fmul
jo
mov
imul
fdiv
fsubr
jo
stos
fld
(bad)
jnp
mov
(bad)
mov
imul
mov
mov
mov
sti
arpl
mov
imul
mov
arpl
leave
pusha
out
dec
popa
xchg
mov
popa
(bad)
or
pop
aad
mov
retf
cmps
fistp
pusha
xchg
retf
in
outs
jno
mov
pusha
retfw
aam
dec
and
jnp
xor
fmul
pusha
fs
retfw
cmps
sbb
xor
fmul
add
stos
test
retfw
cmps
fistp
pop
inc
sbb
jno
mov
rcl
push
clc
rcl
retf
(bad)
pop
test
adc
imul
add
popa
mov
sbb
data16
sti
xor
imul
add
dec
mov
add
sbb
cmps
dec
xor
fmul
jo
mov
adc
push
ja
mov
sbb
jbe
mov
retf
jbe
sbb
out
mov
push
inc
adc
fwait
mov
je
leave
mov
test
popa
cmps
mov
xchg
retf
cmps
mov
test
jo
stos
mov
pusha
add
mov
movs
fistp
rol
jp
pusha
add
mov
retf
call
jp
xor
fmul
loopne
mov
cwde
xor
test
fwait
jno
pop
fld
mov
sti
popa
xchg
sbb
xchg
fld
mov
jmp
mov
shl
fwait
dec
mov
cmps
fnstcw
pusha
mov
xchg
mov
mov
mov
cmps
jp
adc
mov
mov
retfw
xlat
or
inc
neg
push
pop
aad
enter
mov
xor
fmul
push
je
fld
jnp
rol
cli
sbb
(bad)
jp
xor
fmul
adc
test
xchg
stos
leave
add
fwait
retf
pusha
xchg
fnstenv
fcomp
add
fwait
retf
pusha
xchg
and
push
xor
test
inc
(bad)
(bad)
jo
mov
mov
mov
mov
jmp
xchg
mov
mov
cwde
bound
retf
mov
lahf
inc
(bad)
mov
rol
mov
inc
aam
mov
loope
fmul
adc
mov
leave
add
adc
test
and
fstp
rcl
leave
add
add
outs
inc
xchg
mov
rol
jp
xor
mov
inc
sbb
adc
mov
retf
pusha
(bad)
sbb
addr16
test
mov
cdq
add
retf
push
mov
fdiv
(bad)
sbb
inc
test
mov
mov
or
mov
leave
arpl
retf
pusha
(bad)
mov
fwait
jno
mov
leave
mov
adc
pop
and
call
xchg
retf
inc
fcmove
add
leave
shl
arpl
retf
sbb
adc
mov
popa
(bad)
fstp
fidivr
jno
test
popa
mov
cwde
xor
fstp
adc
(bad)
xchg
mov
pusha
out
imul
fstp
(bad)
(bad)
stos
cmp
je
jp
xchg
jo
js
shl
retf
pusha
(bad)
sbb
mov
adc
scas
repz
mov
cmps
fs
mov
xlat
mov
sbb
retf
fadd
mov
sbb
(bad)
jnp
xor
mov
sbb
mov
retf
shl
stos
(bad)
idiv
pusha
data16
mov
mov
retf
inc
fcmovu
popa
add
mov
aad
mov
adc
retf
xlat
stos
imul
lock
pusha
mov
test
inc
test
mov
xchg
push
inc
(bad)
stos
clc
xor
fstp
add
cli
mov
test
push
mov
mov
call
sbb
repz
fadd
aad
jmp
and
dec
popa
xchg
bound
mov
sbb
xchg
stos
inc
test
push
pop
mov
iret
pusha
mov
test
jo
stos
mov
add
mov
cdq
rol
dec
fist
test
fwait
rol
sbb
(bad)
sbb
add
fidivr
popa
pop
fabs
cmps
fisubr
xor
test
popa
mov
leave
xor
mov
leave
xor
fcmove
mov
mov
lahf
loope
mov
jno
push
xor
mov
mov
add
fcmove
xor
mov
leave
xor
jp
rol
fstp
jno
cld
mov
adc
fisttp
push
xchg
shl
pop
push
push
xor
mov
daa
mov
fbstp
(bad)
mov
popa
(bad)
mov
popa
cmps
imul
fcomp
daa
pop
test
int3
movs
xchg
adc
iret
aas
mov
addr16
xchg
add
sbb
aaa
cmp
shr
push
jo
lahf
nop
test
cmp
mov
fist
aaa
mov
xor
das
stos
xor
bound
xor
das
lods
xor
bound
xor
sub
out
shr
test
rcr
mov
sub
out
shr
test
rcr
div
xor
out
shr
test
loopne
xlat
mov
sub
js
mov
daa
jbe
fist
cmp
mov
push
repz
add
shl
cwde
pop
cmp
mov
enter
addr16
movs
(bad)
aaa
or
test
call
sbb
test
daa
sar
pop
test
fs
mov
mov
aaa
cmp
mov
stos
or
das
mov
or
in
mov
or
xchg
mov
or
out
or
loopne
or
adc
or
xchg
or
cmps
movs
or
ficomp
mov
or
lock
or
(bad)
fimul
mov
or
(bad)
fimul
fwait
movs
or
jl
or
loope
or
(bad)
into
or
cmps
into
or
outs
cwde
or
sub
or
sar
or
data16
pop
arpl
or
push
or
add
movs
or
jge
or
lods
movs
or
(bad)
test
cmp
mov
or
stos
movs
or
mov
cmps
or
cmp
or
out
test
loop
or
int3
movs
or
add
or
mov
or
icebp
mov
or
cs
or
bound
or
push
mov
or
stos
mov
or
rcr
jmp
or
sbb
mov
(bad)
mov
call
fild
cmp
and
push
xchg
and
popa
xchg
dec
adc
and
test
ficom
xchg
stos
xchg
lea
stos
sbb
mov
lea
pop
out
mov
mov
lods
and
ja
and
call
movs
and
ins
test
or
and
jb
and
scas
and
and
and
inc
xchg
call
and
test
call
mov
and
iret
sub
push
(bad)
sub
or
or
mov
mov
cmp
mov
mov
pop
xor
mov
stos
mov
mov
stos
mov
mov
pop
retf
jge
mov
jge
sbb
jge
dec
and
jl
jp
dec
mov
push
dec
mov
jmp
mov
jmp
mov
stos
fwait
jge
call
mov
push
pop
fimul
mov
fimul
push
fidivr
movs
sbb
dec
xchg
push
fidivr
out
push
mov
sbb
retf
fsubrp
mov
push
fimul
popf
adc
cmp
mov
push
stos
retf
vpermilpd
mov
out
cmp
fs
scas
mov
pop
daa
add
inc
pop
ror
add
cmp
addr16
lea
add
outs
lea
push
in
scas
jl
add
scas
retf
cmp
adc
adc
dec
xchg
sub
popa
add
lds
js
out
mov
jg
ins
mov
ret
retf
loope
cmp
shr
call
movs
lods
dec
cmps
enter
mov
in
mov
and
cmps
leave
cmp
cs
push
push
pop
stos
enter
jg
mov
dec
adc
sbb
push
hlt
icebp
add
jnp
xor
sbb
ror
sub
movs
dec
jns
hlt
sub
push
stos
iret
(bad)
(bad)
xor
stos
jmp
mov
jp
ins
xor
mov
and
dec
sub
and
push
popa
(bad)
inc
pop
cmp
jle
pop
bound
push
imul
fist
ret
dec
adc
cmp
pop
loopne
sub
cld
adc
push
xchg
cmp
clc
pop
xor
iret
in
ret
lods
jno
inc
cld
push
sbb
pop
jae
jno
scas
xchg
xor
xlat
adc
dec
sub
stos
push
jb
dec
xchg
aaa
in
mul
sti
pop
movs
inc
scas
data16
in
pop
movs
add
or
fmul
jae
fidivr
adc
push
aaa
out
sti
pop
push
inc
cmp
lea
pop
pop
movs
adc
test
mov
xor
fldenv
inc
retf
scas
xchg
sub
inc
pop
icebp
pop
aam
jl
mov
call
push
hlt
jno
int
jno
(bad)
sbb
fcom
adc
stc
mov
sbb
je
dec
scas
xchg
fdivr
mov
adc
arpl
sub
dec
sbb
sub
sub
and
in
movs
xchg
es
movs
adc
movs
adc
fsqrt
pop
fcomp
add
push
aaa
jmp
fcom
(bad)
sbb
mov
sbb
push
push
inc
fsub
call
movs
outs
out
or
mov
out
mov
pop
ret
inc
add
inc
fdivr
sbb
pusha
mov
gs
movs
push
fsubr
fwait
es
les
fsubr
movs
sbb
loopne
add
lds
jl
loope
arpl
fst
fcomp
in
retf
ins
add
adc
leave
fcom
mov
leave
pop
sbb
mov
aas
popa
pop
pop
push
or
push
iret
popf
fs
jmp
add
cmps
sbb
sbb
xchg
xlat
push
fsubr
cld
aad
xor
shl
pop
xchg
inc
pop
cmp
popa
loopne
mov
adc
pop
leave
int3
xchg
push
popf
mov
fdivrp
mov
fadd
mov
cmp
test
cld
xchg
(bad)
fsub
inc
fbld
jmp
mov
mov
xchg
(bad)
lods
sti
sbb
arpl
xchg
mov
les
ficomp
lahf
mov
jmp
mov
mov
xchg
(bad)
lods
sti
shl
push
aaa
fdivp
pop
push
dec
pop
inc
mov
pop
push
pop
and
adc
sbb
xchg
xor
arpl
stos
push
fcomp
mov
loop
aam
retf
lods
add
xchg
jle
add
iret
pop
fcomp
mov
nop
std
push
jle
std
push
out
push
add
mov
pop
pop
in
adc
jp
push
dec
iret
jns
pop
jl
retf
pop
jl
pop
popf
sbb
inc
pushf
push
movs
adc
xlat
pop
movs
adc
movs
adc
test
adc
daa
cmps
pop
xchg
push
adc
fsubr
adc
daa
cmps
pop
xchg
push
adc
fsubr
jl
push
xchg
adc
jns
stos
in
adc
fcomp
xchg
sbb
fcomp
mov
daa
(bad)
or
pop
adc
fcomp
xchg
neg
movs
adc
fnstsw
mov
daa
(bad)
dec
push
fcomp
lods
in
in
pop
inc
das
mov
cld
adc
pop
mov
bound
rcr
neg
shr
adc
pop
movs
loope
pop
movs
adc
in
fsubr
retf
sbb
sub
fcomp
loope
pop
movs
adc
fwait
adc
test
pop
xchg
pop
fwait
xchg
imul
sub
ret
pop
movs
adc
inc
movs
sbb
(bad)
jle
add
xchg
ret
pop
movs
adc
jb
sbb
(bad)
and
pop
push
(bad)
int
and
mov
pop
push
sub
adc
movs
sbb
cdq
in
stc
daa
cmps
sbb
or
popa
test
stos
pop
clc
imul
inc
push
fldcw
fcomp
pop
jl
sub
es
push
xlat
pop
movs
adc
movs
adc
test
adc
daa
cmps
pop
xchg
push
ins
movs
adc
movs
adc
jmp
xchg
adc
jns
stos
in
adc
fcomp
xchg
ss
adc
(bad)
mov
daa
(bad)
or
pop
add
in
in
pop
inc
outs
test
pop
mov
xchg
imul
sub
rcr
adc
inc
movs
adc
(bad)
jle
add
lods
stos
in
xchg
rcr
adc
jb
pop
fcomp
or
sub
mov
sub
pop
xor
jp
or
lea
xor
sbb
cwde
pop
movs
xchg
ss
adc
in
scas
lahf
fcomp
and
pop
movs
cdq
in
jns
adc
test
pusha
fsubr
xchg
enter
rcl
xchg
inc
pop
push
mov
xor
jecxz
and
mov
or
jp
(bad)
pop
bound
and
or
ss
jl
inc
add
fsubr
sub
pushf
pop
movs
sbb
pop
adc
sbb
in
push
sbb
lahf
popa
fcomp
pop
pushf
fwait
aam
pushf
(bad)
pushf
sbb
cwde
fld
and
push
es
mov
xlat
push
pushf
(bad)
pushf
fwait
and
nop
sbb
jecxz
(bad)
rcl
push
pop
mov
(bad)
fldcw
icebp
pop
mov
pushf
fwait
push
push
pushf
pop
push
add
push
xor
mov
fsubr
fwait
mov
cwde
push
sub
mov
in
enter
sti
in
push
fcomp
cs
xor
pushf
fist
stos
jmp
call
pusha
loopne
call
jno
popf
mov
call
jp
and
push
fsubr
fwait
xchg
mov
mov
or
mov
fmul
cld
pop
add
mov
rcl
inc
xor
sbb
jne
aam
fptan
pop
xor
pushf
in
pop
inc
xor
dec
das
lahf
sbb
call
clc
shl
pop
xchg
int
fcom
xchg
xchg
sbb
jmp
aad
and
shl
pop
xchg
int
fcom
add
xchg
sub
add
add
mov
mov
mov
sbb
pop
mov
aad
xor
inc
pop
enter
add
mov
sbb
(bad)
int3
call
rcr
js
jae
fsubr
cld
push
push
inc
mov
sbb
pop
xor
fsub
cld
aad
xor
jbe
out
aad
and
ins
push
imul
leave
fcomp
fs
stc
outs
imul
addr16
fmul
ret
and
fldcw
fcomp
mov
xor
imul
xchg
inc
pop
movs
sbb
add
test
pop
les
out
cld
fidiv
pop
mov
sbb
adc
adc
mov
mov
data16
ret
mov
jmp
sub
aad
cwde
in
enter
push
gs
and
test
pop
mov
mov
dec
add
dec
push
mov
or
sti
aad
out
fdiv
mov
jne
mov
rcl
and
pop
shl
pusha
cmps
sti
aad
push
sub
fldcw
mov
fadd
push
push
hlt
test
cmp
mov
and
inc
pop
xchg
mov
cld
and
pop
mov
cdq
mov
xor
jmp
call
hlt
jno
shr
inc
mov
dec
int3
ret
or
sbb
imul
mov
mov
imul
ret
es
push
hlt
jae
xor
lds
xor
cmp
call
fmul
jns
mov
jo
leave
ss
push
push
lds
cmp
jmp
pop
or
shr
rcl
leave
ins
push
dec
adc
push
dec
adc
xchg
push
jp
push
fcomp
outs
out
or
mov
push
mov
xchg
jmp
ins
pop
pop
stc
ins
and
lds
aad
loop
cmps
fwait
jno
xor
push
ins
cli
clc
jae
adc
test
xor
sub
xor
and
dec
and
jnp
inc
mov
nop
sbb
daa
movs
add
movs
sbb
mov
outs
xchg
sub
inc
sbb
lea
enter
icebp
pop
mov
mov
pop
int
daa
mov
pop
and
push
scas
push
shl
mov
stos
mov
mov
(bad)
cmp
inc
or
into
rcl
ret
push
and
scas
and
ins
movs
xor
js
les
mov
fcom
dec
xchg
sti
pop
xor
out
xor
cmp
int3
cmp
pop
bnd
push
add
outs
cmps
in
mov
js
inc
fwait
mov
aaa
xchg
loope
ret
je
push
leave
imul
adc
push
sbb
test
push
stos
ins
push
jge
and
fcmovnb
cmp
lock
cli
sub
adc
stos
fsubr
popf
xor
das
not
scas
and
ins
movs
dec
ret
lods
push
xor
jl
fs
mov
cmp
movs
test
xor
pop
push
sbb
cmps
mov
jae
icebp
push
pop
shl
scas
jns
sysenter
pop
sub
sub
cwde
sbb
pop
loopne
cld
push
sbb
push
jae
push
cmp
mov
add
enter
in
in
xchg
and
lods
sub
sbb
lods
adc
cmp
pop
xor
out
mov
jle
call
jle
cmp
fist
ret
dec
enter
movs
push
call
scas
push
pop
xor
cmc
sbb
jmp
stos
dec
mov
cmp
sub
adc
dec
add
cmps
xor
hlt
int3
dec
or
aam
pop
ret
jecxz
fidiv
mov
dec
cdq
push
rol
cmp
add
and
cmovle
sbb
shl
cmp
add
movs
pop
aaa
and
mov
repnz
test
fs
ror
adc
jp
movs
cmp
sub
mov
xor
sub
push
scas
imul
stos
pop
cmp
stos
js
jecxz
adc
jg
xlat
call
(bad)
jle
in
dec
inc
adc
mov
sahf
iret
dec
fstp
adc
dec
mov
nop
ins
mov
pop
aad
xor
add
adc
(bad)
loop
fnstcw
std
sub
pop
ret
mov
push
or
stc
jmp
cmp
lock
push
xor
xchg
mov
or
sbb
mov
sahf
dec
popf
fisttp
addr16
and
mov
sbb
mov
add
out
call
or
out
dec
cmp
nop
ins
mov
pop
aad
xor
add
adc
(bad)
in
frndint
push
cli
fsubr
ret
mov
push
or
stc
jmp
cmp
repz
cmp
add
mov
lds
fstp
xchg
ret
xchg
lock
mov
int3
ins
scas
cmp
loop
mov
add
out
call
lds
out
dec
cmp
nop
ins
mov
pop
aad
xor
add
adc
(bad)
in
into
fldcw
ret
mov
push
or
stc
jmp
cmp
bnd
out
jns
mov
or
sbb
mov
sahf
dec
popf
fisttp
fist
inc
cwde
daa
mov
sbb
mov
add
out
call
in
out
dec
cmp
nop
ins
mov
pop
aad
xor
add
adc
(bad)
out
into
fldcw
jns
pop
ret
mov
push
or
stc
jmp
cmp
repz
mov
xchg
mov
lds
fstp
xchg
int3
xchg
and
daa
mov
or
cwde
mov
xor
out
call
cmp
out
dec
cmp
nop
ins
mov
pop
lds
add
add
xor
(bad)
jecxz
fstp
movs
popa
pop
add
loopne
cmp
arpl
cmp
bnd
clc
shl
xchg
mov
or
sbb
mov
sahf
iret
dec
fstp
xchg
int3
daa
fidiv
stos
mov
xchg
int
cs
cmc
or
add
adc
(bad)
loop
fmul
pop
ret
outs
mov
loope
cmp
arpl
cmp
jbe
xchg
sbb
nop
cmp
or
sahf
dec
popf
fisttp
xchg
enter
inc
cdq
daa
call
mov
mov
push
and
movs
dec
or
xchg
int
cs
cmc
or
add
adc
(bad)
jmp
call
outs
mov
loope
cmp
arpl
cmp
ja
shl
mov
cmp
or
sahf
dec
popf
fisttp
idiv
ja
inc
cdq
daa
call
mov
mov
push
or
movs
dec
or
xchg
int
cs
cmc
or
add
adc
(bad)
out
fmul
pop
ret
outs
mov
loope
cmp
arpl
cmp
jge
and
dec
lahf
cmp
or
sahf
dec
popf
fisttp
push
lea
daa
call
mov
mov
push
(bad)
or
dec
or
xchg
int
ds
into
(bad)
jle
push
mov
in
ins
add
sub
mov
mov
and
cwde
cmp
or
sahf
out
in
js
daa
push
jns
fild
inc
aas
mov
loope
mov
push
or
and
int
ds
into
(bad)
jle
ins
mov
mov
in
ins
add
sub
mov
xor
aaa
xchg
mov
or
sahf
out
loope
js
xchg
retf
(bad)
fild
inc
aas
mov
loope
mov
push
mov
and
cli
xchg
int
ds
into
(bad)
jle
outs
out
jmp
in
ins
add
sub
mov
add
es
cmp
xor
or
mov
lock
ret
enter
xchg
mov
lds
and
jns
out
call
popa
dec
mov
loopne
mov
call
ror
in
cmp
nop
ins
mov
sahf
out
push
adc
ds
mov
sbb
xor
or
mov
and
not
sbb
or
jns
push
inc
jmp
mov
loopne
clc
jmp
(bad)
mov
loopne
cmps
les
ins
or
cmp
cmp
arpl
jg
outs
or
gs
sbb
nop
pop
mov
fiadd
mov
sahf
fsubrp
dec
js
pop
les
fild
mov
iret
mov
loope
clc
jmp
scas
mov
xor
dec
lahf
mov
or
sbb
in
unpckhps
bound
rcr
int3
ins
or
cmp
cmp
arpl
dec
ins
lods
or
gs
sbb
nop
pop
mov
fiadd
mov
sahf
fsubp
dec
js
ja
pop
(bad)
fild
mov
iret
mov
loope
clc
jmp
scas
mov
mov
jb
cwde
mov
or
sbb
in
unpckhps
ins
jbe
fcmovb
mov
pop
daa
mov
ins
or
cmp
cmp
arpl
call
gs
sbb
nop
pop
mov
fiadd
mov
sahf
fsubp
dec
js
pop
xchg
nop
fild
mov
iret
mov
loope
clc
jmp
scas
mov
mov
mov
xchg
mov
or
sbb
in
unpckhps
bound
rcr
int3
ins
or
cmp
cmp
arpl
movs
jle
sbb
nop
pop
mov
fiadd
mov
sahf
fsubrp
dec
js
pop
sti
or
inc
iret
mov
loope
clc
jmp
scas
mov
mov
push
ds
mov
pop
push
pop
dec
inc
xchg
push
sbb
jbe
dec
inc
inc
inc
call
aaa
ror
mov
cs
int
lods
movs
jge
bound
adc
movs
dec
arpl
xchg
xchg
repz
sbb
mov
xor
sar
dec
inc
or
dec
movs
adc
jg
les
in
aam
push
cmp
cmp
lock
push
pop
pop
ret
adc
jp
hlt
inc
lea
cmp
out
stos
fild
dec
sbb
cmp
outs
(bad)
std
inc
pop
or
test
push
pushf
and
fs
and
sti
dec
jle
out
and
inc
push
sbb
rcl
jno
sahf
dec
inc
push
retf
or
scas
adc
int3
cmp
out
les
push
stos
jp
xor
xchg
outs
xor
cmp
jp
push
and
les
pusha
xor
cmp
or
mov
push
and
popf
push
arpl
(bad)
or
pop
sbb
in
jae
push
aas
ret
xchg
test
movs
push
jae
stos
(bad)
pop
in
sub
xor
cmp
je
push
js
ss
or
push
loopne
sbb
push
push
stos
retf
popf
mov
cmp
scas
xchg
push
and
jle
cmp
or
ret
push
push
call
jnp
mov
sbb
xor
push
jbe
stos
jg
push
imul
jb
mov
mov
lea
rcr
xor
pop
sbb
add
or
dec
fs
sub
shr
pop
jecxz
push
cmp
push
add
outs
(bad)
lods
es
push
or
es
dec
(bad)
mov
dec
push
push
xor
mov
inc
retf
loop
and
addr16
inc
pushf
fidiv
sbb
push
loope
arpl
mov
xchg
fidiv
imul
push
loope
adc
inc
cmp
mov
xor
movs
sub
in
test
sbb
mov
jno
lods
mov
and
test
ins
shl
jb
jp
push
dec
and
dec
push
and
mov
jae
jge
ret
inc
and
xor
scas
aad
aam
or
add
adc
xor
xchg
fiadd
sub
jp
retf
pusha
ins
mov
jp
enter
sbb
adc
cmc
push
addr16
sbb
aaa
inc
xlat
sbb
adc
jne
addr16
gs
push
inc
adc
mov
jne
add
stos
sub
add
mov
cmp
and
fcomp
sub
retf
mov
and
xor
cmp
or
cwde
(bad)
xor
inc
push
fsubp
jge
fiadd
sbb
xor
xor
add
fiadd
data16
in
(bad)
fiadd
enter
sub
inc
retf
dec
push
fsub
ds
inc
retf
aam
popa
mov
std
sbb
inc
or
sub
add
mov
sbb
inc
retf
mov
xchg
repnz
aad
xchg
add
iret
retf
mov
retf
dec
push
push
inc
retf
test
jp
enter
retf
loop
or
movs
cmp
iret
retf
xor
adc
and
inc
retf
mov
leave
cmp
into
retf
loop
pushf
jge
inc
lahf
fcmovbe
inc
cmp
leave
retf
mov
pop
pushf
jge
inc
xchg
ficom
xor
mov
gs
jle
fiadd
outs
aad
repnz
jp
inc
xchg
fiadd
or
jge
inc
pushf
fiadd
dec
jnp
mov
retf
in
adc
and
dec
push
inc
and
sub
xchg
jp
push
dec
and
sub
inc
retf
ins
ins
sub
inc
retf
loop
sbb
inc
retf
into
retf
mov
push
push
inc
retf
pop
pop
dec
and
retf
mov
and
retf
imul
fld
dec
int3
retf
mov
inc
xchg
fisub
mov
cwde
call
fcmovbe
add
loope
adc
inc
cmp
cmp
xor
mov
pop
pop
fiadd
cmp
int
pushf
sub
ret
cmp
(bad)
ret
cmp
int
xchg
dec
dec
push
dec
dec
ins
int3
push
inc
retf
mov
cmp
cmp
leave
retf
in
pop
fiadd
cmp
int3
retf
mov
in
in
ror
xchg
sub
push
mov
ficom
retf
loop
and
cmc
in
push
fiadd
retf
ins
sub
inc
retf
loop
sbb
inc
retf
lock
push
loope
jecxz
mov
into
aaa
mov
in
icebp
cmc
jge
pop
pushf
jp
sbb
aam
cmp
(bad)
ret
aaa
add
imul
test
retf
sbb
pushf
jp
inc
xchg
fiadd
inc
push
ins
ins
lods
dec
inc
retf
in
(bad)
fiadd
pushf
jp
inc
cwde
fiadd
ins
push
inc
retf
pushf
js
and
pop
fidiv
retf
dec
push
push
inc
retf
mov
xchg
fiadd
inc
push
or
xor
repnz
in
adc
lods
xor
ins
push
inc
retf
jp
cmp
into
retf
loop
or
add
xchg
sub
repnz
jp
inc
xchg
fiadd
add
xor
cmp
add
dec
push
(bad)
adc
or
add
cld
aad
jb
jp
pop
inc
and
mov
aaa
(bad)
xchg
in
push
lods
mov
repnz
imul
xor
xchg
xor
lods
test
lods
rcl
push
retf
xlat
xchg
dec
and
movs
into
mov
or
cmp
fs
in
adc
les
mov
hlt
and
test
push
stos
jl
pop
mov
push
and
ins
js
mov
and
push
push
mov
mov
sbb
fisttp
fild
out
icebp
mov
loope
out
ja
adc
lods
add
cli
jnp
xchg
ret
loop
pop
jo
movs
lods
pop
in
or
cmp
stos
jmp
jnp
push
and
iret
lea
and
jnp
jle
adc
sbb
push
int
test
jnp
test
dec
mov
lds
(bad)
and
je
(bad)
xlat
sub
pusha
leave
jle
les
sbb
pop
and
or
(bad)
sar
stos
js
mov
ins
or
or
cmps
xchg
push
jae
in
push
sbb
les
inc
addr16
enter
loop
rep
pop
jp
xchg
dec
frstor
add
test
mov
outs
push
retf
(bad)
es
push
pop
stos
retf
lods
jle
aas
ret
ficom
push
sbb
sub
in
mov
adc
aaa
ret
jae
cs
cmp
sub
je
fwait
push
push
call
pop
and
push
pop
xor
inc
sub
dec
xchg
imul
fcom
das
ret
cmp
stos
inc
push
sub
add
call
add
lods
cmp
adc
cmps
adc
cmps
fs
iret
and
xor
push
adc
cmp
rcl
sub
test
jge
movs
je
scas
add
add
mov
mov
mov
test
enter
inc
or
sbb
rep
inc
cmps
add
push
cmps
mov
add
or
push
mov
add
dec
daa
adc
std
in
cmp
adc
scas
movs
les
stos
int3
cmp
cwde
in
sti
rcr
push
mov
in
and
xor
mov
push
stos
jns
mov
retf
ss
xchg
fwait
pop
cmp
imul
enter
or
aaa
push
stos
fist
loopne
int3
cmp
mov
inc
imul
dec
call
fwait
aad
jl
sub
fsubr
push
cmp
scas
xor
rep
(bad)
jnp
sub
enter
jo
xor
or
aas
push
leave
jl
add
push
jae
rcr
sub
scas
je
sub
je
jnp
movs
mov
inc
xchg
les
loopne
cli
inc
out
push
xor
movs
fisubr
xor
jp
les
les
jmp
call
mov
sti
inc
push
shr
ins
out
xor
fs
call
cmp
outs
xor
or
shl
ss
cmp
xchg
pop
ret
cmps
push
xor
cmp
jnp
bound
ror
add
aas
ret
stos
int
sbb
arpl
adc
(bad)
call
xchg
jns
out
je
push
sbb
mov
movs
push
cmp
iret
scas
push
cli
movs
push
sbb
ficomp
fcom
add
cmps
test
push
aam
mov
mov
mov
dec
add
add
mov
dec
add
inc
dec
scas
mov
dec
or
add
inc
add
pop
test
call
sub
ds
imul
mov
sbb
mov
dec
mov
adc
add
cwde
pop
mov
xchg
push
gs
sub
mov
inc
add
(bad)
sub
pop
ds
pop
add
xor
jae
shl
enter
repz
outs
pop
xor
mov
inc
mov
add
mov
cmp
lea
push
popa
xor
xchg
fs
and
xor
adc
fstp
xor
imul
sub
sbb
stos
mov
sbb
jnp
mov
mov
sbb
stos
mov
sbb
jnp
mov
inc
and
nop
mov
jg
mov
sbb
jnp
mov
bound
inc
sti
jnp
xor
or
dec
inc
movs
add
lea
xchg
mov
sub
mov
pop
ja
inc
add
icebp
sbb
mov
dec
repz
mov
sbb
mov
inc
repz
bound
sub
sub
in
bound
mov
pop
(bad)
dec
cld
mov
pop
push
imul
call
pop
inc
pop
sub
pop
mov
nop
imul
call
mov
xor
jae
mov
sub
pop
push
dec
repz
sub
loopne
jnp
mov
sbb
xchg
inc
cmp
mov
mov
data16
push
ret
pushf
jmp
push
js
mov
add
and
inc
int
jno
sub
mov
push
add
iret
mov
push
push
jp
cmps
pop
pop
test
push
push
adc
cs
aad
scas
xor
mov
xchg
dec
cmps
out
xor
cs
inc
push
pop
stos
int3
lea
sbb
je
rol
out
loope
paddd
adc
add
mov
enter
loop
jp
in
xor
rep
dec
jp
mov
mov
cmp
je
cmp
ret
xchg
out
retf
push
je
enter
mov
scas
push
push
sbb
loope
cmps
dec
(bad)
scas
push
cmp
mov
adc
mov
stos
int3
(bad)
jmp
mov
loopne
outs
out
sub
xor
fs
sahf
lods
jp
xor
repz
add
cmc
adc
std
add
out
repnz
pop
xor
mov
lahf
out
and
mov
inc
fist
push
stos
jge
inc
mov
sub
popf
retf
popf
xchg
mov
movs
cli
push
sbb
lahf
(bad)
jmp
jmp
movs
mov
add
cmp
jne
ficom
enter
jno
enter
jg
outs
push
dec
mov
dec
xchg
cmp
popf
arpl
xchg
ja
xchg
imul
(bad)
outs
nop
sub
cwde
mov
cmc
in
imul
push
out
leave
xchg
aad
xchg
push
sub
sub
stc
in
cdq
sahf
and
jmp
int
rcr
xchg
adc
or
push
imul
cmp
aad
loop
je
cmp
xchg
inc
mov
cmp
cmp
xchg
pop
ret
xchg
ss
push
outs
loop
sub
call
leave
push
outs
loop
sub
test
cmc
in
imul
sub
dec
adc
icebp
cli
outs
mov
push
sti
in
stc
ds
mov
stos
and
jmp
sub
aam
xchg
aaa
add
ss
cmp
ja
ror
push
repnz
test
clc
dec
mov
cwde
fld
xor
jge
push
ret
inc
mov
clc
push
loop
test
imul
mov
mov
lods
(bad)
arpl
(bad)
leave
adc
mov
(bad)
cmc
in
imul
xor
mov
imul
ret
aad
iret
data16
xchg
test
call
(bad)
imul
imul
mov
jno
or
push
stos
les
push
stos
sar
jb
mov
scas
inc
clc
shl
les
push
lods
aad
jg
fwait
xchg
fwait
inc
xlat
sbb
add
dec
xchg
sti
in
pop
cmp
adc
(bad)
iret
cmp
and
jnp
sbb
das
sahf
mov
fwait
inc
mov
je
add
in
dec
cmps
cli
sti
out
push
jne
not
out
sub
cmp
pop
stos
les
(bad)
xchg
retf
sbb
fs
in
pop
or
sbb
push
mov
stos
les
into
add
or
or
mov
jno
mov
popf
std
xchg
pop
jae
in
cmp
xor
push
cmps
pop
stos
rcr
xor
(bad)
scas
push
ss
jmp
(bad)
std
outs
leave
jns
sub
aas
sbb
mov
cmp
outs
inc
xor
cmp
pop
xor
sbb
or
or
int3
out
mov
mov
not
adc
in
movs
(bad)
stos
movs
out
pop
cmp
outs
push
ins
test
fiadd
ret
pop
push
push
sbb
fsub
ret
aam
imul
ret
pop
jb
lea
dec
ins
pop
sub
and
mov
sub
enter
dec
dec
push
mov
mov
in
je
jnp
nop
pop
inc
jle
call
dec
(bad)
je
pop
push
mov
dec
jbe
call
cmc
jne
call
and
daa
out
jbe
push
adc
cmp
imul
call
dec
div
dec
jbe
mov
inc
push
inc
je
call
dec
(bad)
loop
fdivr
lds
adc
ja
xchg
call
je
inc
sti
sub
add
xchg
pop
out
retf
test
dec
xchg
sbb
jg
rcr
repz
mov
add
sub
mov
jae
jno
mov
retf
and
fidivr
and
ret
call
pop
xchg
mov
push
fdivr
loopne
jmp
stos
data16
sbb
ret
dec
ds
sbb
mov
ss
xchg
jge
adc
push
push
and
ror
xor
jnp
ret
in
cmp
enter
sbb
sbb
push
sbb
or
push
or
dec
jge
jnp
xor
cmp
add
sbb
or
push
sbb
in
test
jg
fwait
adc
cmp
loope
pop
mov
xor
outs
leave
outs
mov
stos
jg
ds
dec
jge
imul
inc
mov
jnp
je
std
mov
nop
sbb
clc
and
jb
(bad)
cmp
scas
xor
movs
cdq
sbb
adc
out
push
rep
pop
jp
xchg
sti
sbb
xchg
iret
add
ret
pop
mov
push
xor
lock
ja
cwde
movs
mov
(bad)
out
movs
rep
dec
cli
adc
cld
xchg
stos
xor
enter
movs
push
aaa
xchg
pop
fwait
xchg
fimul
call
or
sub
bound
dec
xchg
mov
cmps
ins
dec
js
js
jne
cwde
in
idiv
jmp
pop
push
int
adc
les
shl
int
xor
jle
arpl
call
jmp
fs
arpl
xor
les
push
scas
les
jp
les
mov
sbb
xchg
mov
out
pop
cmp
mov
xor
and
dec
sbb
inc
pop
jp
mov
out
and
jnp
lods
enter
aaa
push
outs
mov
cmp
test
dec
xchg
cmc
push
es
popa
jge
mov
inc
pop
ja
mov
jmp
cmps
(bad)
sbb
push
outs
mov
xor
sbb
inc
sbb
aas
pop
jp
mov
jmp
jno
lods
retf
in
sbb
push
jb
cmps
mov
dec
imul
jl
mov
repnz
inc
pop
jge
mov
in
or
cmp
xchg
scas
(bad)
loopne
sbb
push
outs
xchg
xor
mov
xor
sahf
mov
inc
pop
jns
mov
out
add
cmp
ja
stos
retf
push
ss
jno
lods
mov
push
push
cli
ucomiss
sbb
inc
pop
jl
mov
jmp
es
pop
jae
scas
int
or
cmp
nop
test
jecxz
sbb
dec
imul
xor
and
xchg
mov
out
or
ds
jbe
mov
in
and
pop
jo
stos
(bad)
out
sbb
push
outs
lea
xor
push
lock
jle
mov
xchg
push
or
shr
or
retf
sbb
movs
(bad)
loopne
adc
dec
imul
cs
bound
or
inc
arpl
mov
jmp
pop
ds
jns
mov
in
and
jo
test
fdivr
pop
ss
jno
mov
sub
mov
mov
add
sub
add
sub
add
add
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
add
add
sub
add
add
add
add
add
sub
sub
add
sub
add
add
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
add
sub
add
sub
sub
add
add
mov
mov
mov
add
sub
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
add
add
sub
sub
add
sub
add
sub
sub
add
add
add
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
add
add
add
add
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
add
sub
mov
mov
mov
add
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
add
add
add
sub
sub
add
sub
add
add
sub
sub
add
mov
mov
mov
sub
sub
sub
add
add
sub
sub
sub
add
add
sub
add
sub
add
sub
sub
add
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
add
add
add
add
sub
sub
sub
add
add
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
sub
sub
add
sub
add
sub
mov
mov
mov
sub
add
add
add
add
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
add
sub
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
add
mov
mov
mov
add
sub
add
sub
sub
sub
add
add
sub
sub
sub
add
add
add
sub
add
add
sub
sub
add
sub
add
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
add
sub
sub
add
sub
add
add
sub
add
add
add
sub
add
sub
sub
add
sub
sub
add
sub
add
sub
add
sub
add
add
add
add
add
add
sub
sub
add
mov
mov
mov
add
sub
sub
sub
add
add
add
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
add
add
add
add
add
add
add
sub
sub
sub
sub
add
add
add
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
add
sub
sub
add
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
add
add
add
add
mov
mov
mov
sub
add
sub
sub
add
add
sub
add
sub
add
add
sub
add
add
mov
mov
mov
sub
add
sub
add
sub
add
sub
add
mov
mov
mov
sub
sub
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
add
add
add
sub
add
sub
mov
mov
mov
add
add
sub
sub
add
sub
add
sub
add
add
add
add
sub
sub
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
mov
mov
mov
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
add
add
add
sub
add
add
add
add
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
add
add
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
add
sub
add
add
add
add
sub
add
add
add
sub
add
sub
add
add
add
sub
add
mov
mov
mov
add
add
sub
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
add
sub
add
sub
sub
sub
add
sub
add
sub
sub
add
add
add
add
sub
sub
add
sub
add
add
add
add
add
add
sub
add
add
add
add
sub
sub
add
add
add
add
mov
mov
mov
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
add
add
sub
add
add
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
add
add
sub
sub
add
sub
add
add
sub
add
sub
sub
sub
mov
mov
mov
add
sub
add
sub
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
add
add
add
add
sub
mov
mov
mov
add
add
sub
add
add
add
sub
sub
sub
add
add
sub
sub
add
sub
add
add
sub
sub
add
add
add
sub
add
add
add
add
sub
sub
add
add
sub
sub
add
add
add
sub
sub
sub
sub
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
add
sub
sub
sub
add
mov
mov
mov
add
sub
add
sub
sub
sub
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
add
add
add
add
sub
add
add
sub
sub
sub
mov
mov
mov
sub
add
sub
add
mov
mov
mov
add
add
sub
sub
add
add
add
sub
sub
sub
add
sub
mov
mov
mov
add
sub
sub
add
add
sub
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
add
add
sub
add
add
sub
sub
sub
sub
mov
mov
mov
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
add
add
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
mov
mov
mov
add
sub
sub
add
sub
add
add
add
mov
mov
mov
add
sub
add
add
sub
add
sub
add
sub
add
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
add
add
add
sub
sub
sub
add
add
sub
add
add
add
sub
sub
add
mov
mov
mov
sub
add
sub
add
sub
sub
sub
add
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
add
add
sub
sub
add
mov
mov
mov
add
add
sub
add
add
add
sub
sub
add
sub
sub
add
add
sub
add
add
sub
add
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
mov
mov
mov
add
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
add
add
sub
add
sub
sub
sub
add
mov
mov
mov
add
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
add
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
add
sub
add
sub
sub
sub
add
add
sub
add
sub
add
sub
sub
mov
mov
mov
sub
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
add
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
add
add
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
add
add
add
sub
sub
add
mov
mov
mov
sub
add
add
add
add
add
sub
add
add
add
sub
add
sub
add
add
add
mov
mov
mov
sub
sub
sub
add
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
add
add
add
add
add
sub
add
add
add
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
sub
add
add
mov
mov
mov
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
mov
mov
mov
add
add
sub
sub
add
sub
sub
add
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
add
sub
mov
mov
mov
sub
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
add
add
add
add
add
add
add
add
sub
add
sub
sub
add
add
mov
mov
mov
sub
add
add
sub
sub
add
add
add
add
add
add
sub
add
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
add
add
add
sub
sub
add
add
sub
sub
add
add
sub
add
add
mov
mov
mov
add
add
add
add
add
add
sub
sub
add
sub
sub
add
sub
add
add
sub
add
sub
add
add
mov
mov
mov
add
sub
sub
add
add
add
sub
add
sub
add
mov
mov
mov
add
add
add
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
add
add
add
add
sub
add
sub
add
sub
sub
add
add
add
sub
sub
add
sub
add
sub
mov
mov
mov
sub
sub
add
sub
add
sub
add
add
add
sub
mov
mov
mov
sub
add
sub
add
add
add
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
add
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
mov
mov
mov
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
add
add
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
sub
add
add
add
mov
mov
mov
sub
add
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
add
add
add
sub
sub
sub
add
add
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
add
add
sub
add
sub
sub
sub
add
add
add
add
add
add
sub
sub
add
add
mov
mov
mov
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
add
sub
add
add
add
sub
add
add
add
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
add
add
add
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
add
sub
add
sub
add
add
add
sub
mov
mov
mov
sub
sub
add
sub
sub
add
mov
mov
mov
add
sub
add
add
mov
mov
mov
sub
sub
add
sub
add
add
add
add
add
add
add
add
sub
sub
add
add
mov
mov
mov
add
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
add
add
add
add
add
sub
sub
add
sub
sub
sub
add
add
sub
add
add
add
add
add
add
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
add
sub
add
sub
sub
add
add
sub
mov
mov
mov
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
sub
add
add
sub
sub
add
add
sub
add
add
add
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
add
sub
add
sub
add
sub
add
sub
mov
mov
mov
sub
add
add
add
add
sub
sub
sub
add
add
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
mov
mov
mov
add
add
sub
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
add
add
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
add
sub
add
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
add
sub
add
mov
mov
mov
sub
sub
add
add
sub
add
add
add
add
add
add
sub
sub
sub
sub
add
add
add
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
add
add
sub
add
add
add
add
sub
sub
add
add
add
add
sub
add
add
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
add
add
add
sub
sub
sub
add
add
sub
add
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
add
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
mov
mov
mov
add
add
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
add
sub
add
add
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
mov
mov
mov
sub
add
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
add
add
add
sub
add
sub
add
add
sub
add
add
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
add
add
add
add
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
sub
add
add
add
add
sub
add
add
sub
add
add
add
add
add
add
add
sub
sub
sub
add
sub
sub
add
sub
add
sub
add
mov
mov
mov
add
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
add
add
add
add
add
add
sub
add
add
add
add
add
sub
sub
add
add
mov
mov
mov
sub
add
sub
add
sub
sub
add
sub
add
add
sub
add
add
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
add
sub
sub
add
sub
sub
add
sub
add
sub
sub
sub
add
mov
mov
mov
add
sub
add
add
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
add
add
sub
add
add
sub
sub
add
add
add
add
add
add
add
sub
sub
add
add
sub
sub
sub
add
add
sub
add
sub
add
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
add
add
add
sub
add
sub
add
add
mov
mov
mov
add
sub
sub
sub
add
add
sub
add
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
mov
mov
mov
add
sub
add
sub
sub
add
sub
sub
add
sub
sub
add
sub
sub
add
sub
add
add
sub
sub
mov
mov
mov
add
sub
sub
sub
add
sub
add
sub
sub
add
add
add
sub
add
add
sub
mov
mov
mov
sub
sub
sub
sub
add
add
sub
add
add
add
sub
sub
add
sub
add
add
add
sub
sub
add
add
sub
add
sub
add
add
sub
add
add
sub
add
add
sub
sub
add
sub
sub
add
add
add
add
sub
add
sub
mov
mov
mov
sub
add
add
sub
sub
add
sub
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
add
add
add
add
sub
add
add
mov
mov
mov
add
sub
sub
add
add
sub
sub
sub
add
add
add
add
add
add
add
add
sub
add
add
add
sub
sub
sub
add
add
sub
add
sub
add
add
sub
add
add
add
add
add
add
add
mov
mov
mov
add
sub
add
sub
add
add
mov
mov
mov
add
sub
sub
sub
add
sub
mov
mov
mov
sub
sub
add
add
sub
add
add
add
sub
sub
add
sub
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
mov
mov
mov
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
mov
mov
mov
sub
add
sub
sub
add
add
add
sub
add
add
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
add
add
add
add
add
sub
sub
add
sub
sub
add
sub
sub
add
add
sub
mov
mov
mov
add
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
mov
mov
mov
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
add
add
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
add
add
sub
mov
mov
mov
add
sub
add
add
add
sub
sub
add
sub
add
add
sub
add
add
add
sub
sub
sub
sub
add
add
add
add
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
mov
mov
mov
sub
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
add
add
add
add
add
add
sub
add
add
add
add
mov
mov
mov
add
sub
add
add
sub
add
add
sub
add
sub
sub
add
sub
add
sub
add
add
sub
sub
sub
add
sub
add
sub
add
add
add
sub
mov
mov
mov
add
sub
add
sub
sub
add
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
add
sub
sub
add
add
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
sub
add
add
sub
sub
add
sub
sub
add
sub
add
sub
sub
add
add
add
add
sub
sub
add
sub
sub
add
sub
add
sub
sub
add
add
add
sub
add
add
sub
add
sub
mov
mov
mov
sub
add
add
add
add
add
sub
sub
add
add
sub
sub
add
add
sub
sub
add
add
sub
add
add
add
add
sub
add
add
sub
add
sub
add
sub
add
add
add
sub
add
mov
mov
mov
sub
sub
sub
add
add
add
add
add
add
add
sub
sub
sub
sub
sub
add
sub
add
sub
add
mov
mov
mov
add
sub
sub
add
add
add
mov
mov
mov
sub
add
sub
add
add
sub
add
sub
add
add
add
sub
add
sub
add
add
sub
add
add
add
add
add
sub
add
add
add
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
add
add
add
sub
add
add
sub
add
sub
sub
sub
add
add
mov
mov
mov
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
sub
sub
add
sub
add
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
add
add
add
add
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
add
add
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
add
sub
add
add
add
sub
sub
add
add
add
sub
add
add
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
sub
mov
mov
mov
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
add
add
sub
add
add
sub
add
add
sub
sub
add
sub
add
add
sub
add
sub
sub
add
sub
add
sub
sub
add
sub
add
add
add
sub
sub
add
add
sub
add
sub
add
sub
add
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
add
add
add
sub
add
sub
sub
add
sub
sub
add
sub
add
add
sub
add
sub
add
add
add
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
add
add
sub
add
sub
add
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
add
add
sub
add
add
add
add
sub
sub
sub
sub
sub
add
add
add
sub
sub
mov
mov
mov
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
sub
add
sub
add
add
sub
mov
mov
mov
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
add
add
add
sub
sub
add
add
add
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
add
sub
sub
mov
mov
mov
add
sub
sub
sub
add
add
add
add
mov
mov
mov
add
sub
add
sub
add
add
add
sub
add
add
sub
add
add
sub
sub
sub
add
add
add
add
sub
add
add
add
add
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
add
sub
sub
add
add
add
add
add
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
add
add
add
add
add
add
add
add
sub
sub
add
add
sub
sub
sub
add
add
add
add
sub
add
add
sub
sub
add
add
add
add
add
sub
sub
sub
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
add
mov
mov
mov
add
sub
add
add
add
add
add
add
sub
sub
sub
add
sub
add
add
add
sub
add
sub
sub
add
sub
sub
sub
mov
mov
mov
add
add
add
add
sub
sub
sub
add
sub
add
add
add
add
sub
sub
add
add
add
add
sub
sub
add
sub
sub
add
add
sub
sub
add
sub
add
add
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
add
sub
add
sub
add
sub
sub
add
add
add
sub
add
add
sub
sub
add
add
add
add
add
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
add
mov
mov
mov
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
add
sub
add
add
add
sub
add
sub
sub
add
sub
add
add
sub
sub
sub
add
add
add
sub
sub
add
add
mov
mov
mov
sub
sub
add
add
add
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
add
sub
add
sub
mov
mov
mov
add
add
add
add
sub
sub
add
add
add
add
add
sub
sub
sub
add
add
sub
sub
add
sub
add
add
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
add
add
sub
add
add
sub
add
add
add
add
add
mov
mov
mov
add
add
add
sub
add
sub
add
sub
sub
add
sub
add
add
add
add
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
add
add
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
add
add
sub
add
sub
add
sub
add
add
sub
add
add
add
add
add
add
add
sub
sub
add
sub
sub
add
add
add
add
sub
sub
add
add
sub
add
add
sub
add
sub
add
add
add
add
add
add
sub
sub
sub
add
add
sub
add
mov
mov
mov
add
add
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
add
mov
mov
mov
add
add
sub
add
sub
sub
sub
add
sub
add
sub
sub
add
sub
add
add
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
mov
mov
mov
sub
sub
add
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
mov
mov
mov
add
add
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
add
add
sub
sub
add
add
add
sub
sub
add
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
add
sub
sub
add
add
sub
sub
add
add
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
add
sub
add
add
add
add
add
sub
add
add
sub
add
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
mov
mov
mov
sub
add
sub
sub
add
add
add
add
sub
sub
sub
add
add
add
add
sub
add
sub
sub
add
add
sub
add
add
add
sub
add
add
add
add
add
sub
add
add
sub
sub
add
sub
add
sub
add
add
sub
sub
add
sub
mov
mov
mov
add
add
add
sub
add
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
add
mov
mov
mov
add
add
sub
add
sub
add
mov
mov
mov
add
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
add
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
add
sub
add
add
add
add
add
sub
sub
add
add
add
sub
add
add
sub
add
add
sub
add
add
add
sub
sub
add
add
sub
sub
add
add
add
add
sub
sub
sub
add
add
mov
mov
mov
add
sub
sub
sub
add
add
sub
add
add
sub
add
add
add
sub
sub
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
add
add
sub
add
add
add
sub
add
sub
sub
add
add
add
sub
add
sub
add
add
sub
add
sub
sub
sub
sub
add
mov
mov
mov
add
sub
add
sub
add
add
sub
add
add
add
sub
sub
add
add
mov
mov
mov
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
sub
sub
add
sub
add
add
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
add
sub
add
sub
sub
add
add
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
add
add
sub
add
sub
add
add
sub
add
sub
sub
mov
mov
mov
add
sub
add
sub
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
add
add
add
sub
sub
add
add
add
add
sub
sub
sub
add
add
sub
sub
add
add
mov
mov
mov
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
add
sub
add
sub
add
sub
sub
add
add
sub
sub
add
add
sub
add
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
add
add
sub
add
add
add
sub
sub
add
mov
mov
sub
add
add
add
add
sub
add
add
add
sub
sub
sub
add
sub
sub
add
sub
call
ret
