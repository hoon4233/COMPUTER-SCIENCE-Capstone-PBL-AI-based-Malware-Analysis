mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aad
jb
(bad)
shl
xchg
mov
dec
inc
mov
sahf
add
rcr
add
jo
icebp
push
mov
cmc
xchg
out
loopne
push
jl
inc
add
dec
pop
fst
ss
stc
sbb
mov
out
push
sub
cs
(bad)
cmp
shl
adc
ret
clc
imul
jle
imul
jae
xor
aam
movs
nop
arpl
mov
mov
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
push
add
add
push
je
imul
add
add
and
add
add
add
inc
push
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xlat
dec
add
add
add
(bad)
dec
add
add
add
retf
dec
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
add
add
add
das
jge
add
add
add
jg
add
add
add
add
add
add
sbb
add
add
add
cmp
cmp
xor
xor
sub
sub
sub
xor
xor
arpl
add
gs
mov
out
mov
mov
out
mov
outs
jne
arpl
add
outs
popa
cs
outs
jb
xor
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
sub
dec
mov
shl
iret
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
dec
add
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
leave
jmp
pop
add
add
int
add
or
ins
inc
mov
push
jge
add
add
and
dec
add
cmp
das
ss
out
push
or
push
jg
sbb
js
jg
jns
jg
sbb
das
cmp
cmp
nop
push
push
or
push
outs
jg
add
ja
retf
jno
pop
sar
pop
dec
pop
inc
dec
sbb
inc
push
inc
ja
das
jle
js
data16
or
dec
sbb
adc
adc
xor
cmp
pop
sbb
or
cmp
xor
and
sbb
pop
aaa
int
outs
push
jg
cld
jg
sbb
jg
sbb
sub
cmp
xor
sbb
or
outs
outs
push
jg
sbb
js
jnp
jns
jg
sbb
sub
cmp
xor
lds
sbb
or
outs
ins
push
outs
jns
outs
js
jg
imul
cmp
cmp
nop
push
push
or
ds
outs
cmp
jl
jns
outs
js
jg
jns
jg
sbb
das
cmp
cmp
in
sbb
or
outs
outs
push
jg
sbb
js
jg
jns
jg
sbb
das
cmp
cmp
nop
push
push
or
push
outs
jg
cmp
jns
jg
sbb
js
sbb
jns
outs
daa
sbb
cmp
ss
sbb
push
or
push
jp
sbb
js
jg
jl
jg
sbb
das
cmp
cmp
nop
push
push
imul
or
jns
pop
jge
jg
jns
jg
sbb
cmp
cmp
nop
push
dec
and
or
jne
jg
sbb
jge
jg
jns
jg
sbb
cmp
cmp
nop
push
dec
or
outs
outs
push
jg
sbb
js
outs
das
jl
jg
sbb
cmp
cmp
das
xor
and
push
or
push
outs
jns
cmp
inc
addr16
jg
jns
jg
sbb
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
jp
sbb
xor
adc
xor
push
or
or
sbb
push
jg
sbb
sbb
jb
pop
jg
sbb
cmp
xor
dec
nop
es
add
imul
sbb
jb
jg
jae
jg
outs
cmp
cmp
cmp
ss
addr16
or
pop
bound
bound
sbb
cmovg
jo
jns
jl
sbb
push
cmp
cmp
inc
cmp
sbb
and
sbb
outs
popa
push
jg
bound
sbb
pop
je
jg
push
inc
das
adc
es
xor
pop
nop
push
sbb
imul
push
jg
push
push
js
push
js
sbb
dec
sbb
cmp
das
ss
dec
sbb
sbb
and
outs
inc
outs
jge
outs
jg
sbb
jns
jg
or
jge
or
xor
adc
push
push
sbb
add
jle
inc
jnp
jns
jne
sbb
push
sbb
dec
js
addr16
outs
cmp
sub
mov
and
xor
push
or
bound
inc
ins
ins
jne
sbb
push
cmovg
outs
js
sbb
jns
jle
sub
les
sub
xor
sbb
adc
js
push
jle
cmp
sbb
js
or
and
xor
aas
push
gs
sbb
push
and
push
jne
jns
jne
sbb
js
jns
jns
popa
jnp
js
cmp
adc
sub
sbb
or
push
outs
jg
ss
outs
push
gs
jb
loop
outs
sbb
sub
cmp
gs
mov
imul
sbb
jns
jg
or
jns
sbb
cmp
xor
inc
xchg
cmp
or
add
jne
add
jns
jne
xor
js
sbb
sbb
cmp
xor
pop
das
ss
sbb
sub
outs
push
jg
bound
sbb
pop
fs
jg
jle
cmp
xor
cmp
xor
cmp
cmp
and
outs
push
sbb
ins
or
cmp
jae
pop
xchg
dec
xor
push
pop
int3
sbb
adc
xchg
adc
or
arpl
jp
imul
imul
js
push
pop
push
sbb
cmp
aas
cmp
ss
adc
dec
mov
xchg
popf
cmp
cmp
js
adc
sbb
jb
push
inc
xor
mov
and
cs
jecxz
inc
dec
push
jg
sbb
jo
jg
jae
jg
sbb
sub
cmp
es
xor
pop
push
push
sbb
imul
push
icebp
into
jae
js
jne
outs
jbe
push
sbb
and
push
ss
sbb
add
adc
in
outs
push
jnp
sbb
xchg
enter
jg
packssdw
das
cmp
xor
popa
pusha
cmp
push
add
or
pop
inc
jg
push
ins
jge
jnp
and
push
aaa
outs
das
xor
push
sbb
ss
add
push
push
sbb
inc
imul
sbb
jns
jg
or
jg
jae
das
cmp
sbb
icebp
test
or
outs
push
inc
outs
push
jg
bound
sbb
pop
movs
shl
xor
xor
nop
sbb
ins
adc
outs
jnp
push
pop
push
jno
(bad)
addr16
sbb
cmp
inc
sub
push
arpl
sbb
adc
imul
push
jb
js
jns
imul
das
cmp
cmp
das
ss
mov
push
or
push
fs
je
pop
js
jg
adc
imul
cmp
add
xor
pushw
sbb
fs
jns
jge
push
cdq
xchg
cmp
push
daa
cmp
xor
xor
adc
mov
sbb
push
icebp
into
inc
out
jo
jae
(bad)
retf
jecxz
das
cmp
xor
sbb
adc
push
ss
or
push
or
sbb
test
jns
jae
sbb
cmp
cmp
daa
adc
or
add
popa
push
rcl
inc
sbb
js
jbe
jns
popa
jnp
js
cmp
adc
pop
xor
sbb
sbb
or
outs
push
jg
sbb
push
sbb
dec
jnp
ins
jns
outs
cmp
pop
pop
xor
sbb
add
xor
outs
outs
outs
inc
jg
push
push
outs
sbb
jb
ins
dec
jno
sub
outs
cmp
cmp
aaa
aaa
mov
adc
add
sub
push
outs
jne
mov
mov
pop
mov
outs
addr16
cmp
jns
jns
push
or
xor
nop
adc
fld
push
outs
jg
mov
js
fnsave
pop
fnsave
jno
cmp
xor
or
pop
or
imul
or
ins
cmp
or
pop
cwde
mov
das
cmp
xor
or
in
outs
outs
imul
xor
js
jne
jle
ja
or
sbb
cmp
and
bndstx
push
push
or
pop
push
out
outs
jg
sbb
push
jne
jo
jg
sbb
and
cmp
xor
sbb
vmwrite
outs
push
pop
pop
jg
push
or
sbb
jb
jg
push
and
cmp
pop
or
gs
xor
push
jg
push
daa
jg
push
ins
jle
jbe
jns
outs
jl
imul
ss
cmp
or
or
outs
inc
test
or
sbb
jle
inc
jns
gs
in
cmp
das
ss
sbb
and
inc
sbb
jge
push
jl
sub
sbb
js
or
das
cmp
cmp
or
cmp
push
add
bound
jns
jne
xor
js
jne
inc
sbb
jae
dec
das
cmp
xor
sbb
or
dec
push
outs
outs
jns
cmp
or
sbb
jae
das
cmp
cmp
sub
jno
gs
or
or
jne
sbb
pop
js
jae
js
push
cmp
push
and
ss
sbb
adc
stos
jg
outs
mov
sbb
jns
jg
sbb
sub
outs
or
inc
jge
dec
push
inc
pop
push
push
gs
pop
js
jns
jnp
or
or
jg
or
sbb
sub
sbb
push
push
pop
add
push
sbb
dec
aas
xor
push
jnp
jg
sbb
push
push
or
or
pop
sub
adc
jg
sbb
cmp
pop
push
or
add
ins
sub
daa
aaa
cmp
or
cmp
adc
sub
or
or
cmp
pop
dec
fs
or
jp
pop
ins
jg
imul
sbb
jns
das
cmp
cmp
jg
xor
adc
push
gs
push
push
or
or
push
outs
sbb
push
jns
jg
sbb
js
jg
jns
jg
jo
push
cmp
push
das
sbb
ins
push
push
(bad)
push
outs
dec
fisub
iret
pop
or
aad
mov
lahf
outs
cmp
mov
mul
xchg
xor
jmp
jle
xchg
mov
(bad)
test
rcl
sub
and
cmps
jmp
xchg
pop
add
addr16
push
int3
in
test
inc
jmp
popa
pop
jmp
in
jo
inc
cli
pop
addr16
adc
jmp
xchg
cs
sti
je
mov
jp
scas
lods
push
and
push
cli
push
cwde
out
aad
pop
mov
shl
popf
repz
cmp
push
sar
or
test
sahf
push
mov
outs
jae
out
lods
sahf
cmp
push
arpl
retf
das
xchg
mov
pop
cmp
loop
mov
xchg
stos
xor
movs
call
ss
rcr
lahf
repnz
pop
stos
dec
aad
ss
ficom
inc
add
push
push
pcmpeqd
sbb
lock
jns
pop
inc
jb
add
loop
inc
push
fs
jo
xchg
out
cmps
fld
dec
(bad)
in
adc
pop
dec
mov
fs
xor
mov
loope
cmp
pop
ud1
pop
lock
cmp
lds
jg
out
mov
ss
inc
popf
mov
sub
cmps
ins
adc
loope
rcl
push
sti
sub
imul
(bad)
and
mov
push
mov
mov
sahf
mov
xor
jg
or
popa
fsubp
push
fucomip
(bad)
pop
popf
pushf
addr16
pop
gs
lds
shl
cmc
sub
sbb
mov
icebp
fld
push
call
iret
mov
add
inc
out
popf
add
popf
retf
out
jmp
xchg
inc
or
ins
inc
push
or
jge
mov
jne
jmp
imul
das
mov
cmps
sub
push
bound
cmp
xchg
nop
sbb
or
out
mov
mov
sub
lds
or
imul
cwde
pop
or
addr16
mov
nop
and
aam
or
mov
dec
jmp
pop
js
xor
sbb
push
mov
les
lea
pop
cmp
push
pop
mov
jne
pop
(bad)
mov
add
push
push
sub
and
xchg
sbb
ror
(bad)
aad
xchg
ja
and
cs
std
xor
sub
mov
out
jle
cmp
cld
cmp
and
xlat
fld
repnz
stc
mov
adc
test
mov
jns
test
jmp
js
sub
retf
vpackuswb
push
icebp
add
cmp
push
out
pop
adc
or
adc
ficom
pop
pushf
cmps
sub
xor
or
es
xchg
imul
dec
fnsave
xchg
loope
sub
in
das
add
daa
into
and
call
clc
sbb
movs
xlat
fisttp
in
xchg
pop
popa
sub
lds
add
pop
scas
inc
test
cmp
or
dec
xchg
fs
mov
or
sbb
fwait
jns
in
push
add
sti
sbb
gs
mov
xor
mov
fwait
add
out
xor
inc
adc
fadd
out
in
mov
ss
adc
cmp
push
mov
push
lods
loopne
lods
cmp
add
jne
jl
mov
out
inc
(bad)
or
in
aas
hlt
xor
and
mov
cdq
adc
test
imul
jb
dec
cmp
popa
push
add
xor
mov
sbb
mov
adc
shl
shl
mov
ins
loope
sbb
and
jle
mov
icebp
xor
push
dec
adc
cmc
xor
es
and
push
xor
jmp
enter
enter
dec
or
jb
xchg
in
xchg
dec
bound
xchg
dec
adc
pop
outs
cmp
push
lock
aaa
daa
ins
push
fld
push
mov
push
in
js
in
mov
xchg
lahf
adc
xor
lea
in
ror
xor
leave
mul
xor
push
cmp
mov
aas
icebp
add
out
fadd
add
push
repnz
xchg
dec
loope
into
or
jno
(bad)
dec
cmps
add
test
sub
movs
mov
jae
cmp
push
pop
push
dec
cmp
fwait
iret
add
aaa
ins
add
mov
lods
sbb
dec
cmp
sbb
dec
jl
lods
movs
jnp
jo
mov
jmp
mov
mov
add
call
xor
mov
push
and
sar
fsub
mov
xchg
push
(bad)
aas
xor
cmp
sbb
cld
(bad)
inc
jl
inc
bound
mov
mov
xor
push
mov
inc
mov
stc
push
sub
pop
dec
leave
mov
ret
push
mov
adc
lahf
test
mov
pop
repnz
sub
es
scas
jae
dec
dec
cmp
adc
push
mov
mov
sbb
loop
sub
jo
(bad)
push
or
aas
inc
bound
in
enter
stos
aaa
lods
pushf
push
pop
pop
adc
mov
mov
shr
inc
mov
dec
(bad)
(bad)
cmps
iret
bound
pop
add
inc
jns
ficom
mov
repnz
outs
clc
iret
jae
jp
sbb
sahf
mov
xchg
clc
push
inc
dec
adc
pop
sbb
mov
lahf
adc
cmp
inc
mov
mov
adc
add
dec
lds
ins
cli
stos
ins
sbb
xchg
es
test
rcl
movs
dec
neg
pop
adc
imul
call
mov
(bad)
sar
jmp
stos
xchg
push
jg
or
add
mov
out
or
mov
dec
ds
iret
and
scas
stos
jg
mov
pusha
mov
in
push
sub
das
frstor
dec
mov
inc
test
mov
sub
inc
jns
ret
push
test
gs
sub
sub
das
vshufps
mov
sbb
ins
cli
add
mov
clc
sbb
out
dec
xchg
ds
jb
enter
xor
push
(bad)
jecxz
mov
cmp
sbb
popa
jo
jp
and
jnp
cwde
dec
lea
sub
ror
sar
test
iret
jle
pop
pop
in
ja
push
sar
ret
out
cwde
add
jge
aam
fimul
movs
xchg
ret
movs
adc
jnp
xchg
cdq
enter
ins
ja
and
sub
xor
push
and
(bad)
adc
xor
imul
jle
mov
fsub
stc
push
mov
out
lea
mov
jbe
sub
arpl
(bad)
fist
hlt
jmp
mov
push
push
out
rcl
or
cmp
sar
mov
dec
retf
pop
and
(bad)
sub
in
xor
jle
cmp
movs
in
aam
es
pop
repz
dec
sti
mov
mov
push
shl
ins
sbb
xchg
loope
pop
mov
fistp
xlat
and
push
enter
pusha
arpl
xlat
dec
mov
(bad)
jb
mov
in
test
push
sbb
adc
rcr
adc
mov
cmp
leave
mov
cmp
sbb
popf
sub
mov
cmp
inc
push
pop
jg
dec
test
or
inc
shl
sub
outs
ins
inc
push
retf
ror
inc
(bad)
push
ret
and
add
lahf
test
mov
xor
xor
pop
cmp
add
shl
or
pop
sbb
mov
ret
cmp
cmc
fisubr
retf
fnstcw
mov
stc
and
popa
bound
cli
jne
push
push
loop
jmp
ss
out
ja
add
jo
leave
push
cwde
popf
jno
scas
stc
jno
adc
jno
pop
cld
les
mov
sti
sub
pop
pop
push
je
sbb
aam
fcmovnbe
sbb
mov
arpl
fiadd
pop
ror
imul
adc
pusha
mov
(bad)
mov
popf
call
cld
and
in
jecxz
shl
adc
iret
retf
push
adc
jecxz
mov
rol
jbe
jb
(bad)
cwde
arpl
xchg
xchg
mov
jmp
and
lahf
push
retf
imul
jle
and
adc
movs
inc
cmp
push
enter
pop
cwde
and
or
mov
ds
jp
jmp
inc
sti
ffree
rcr
jmp
dec
or
clc
das
pop
sub
mov
cwde
push
loop
xchg
cmps
inc
jl
movs
(bad)
test
daa
sti
ss
adc
xchg
jge
sub
xlat
dec
xor
mov
mov
sub
in
sbb
inc
stos
pop
pop
mov
(bad)
and
ror
leave
dec
sti
sub
imul
dec
push
call
addr16
out
shl
mov
jno
setl
rcr
pushf
xlat
or
push
jle
inc
inc
xor
jo
push
lock
loop
addr16
sti
cmps
sub
inc
adc
out
fnstenv
arpl
add
jmp
mov
js
test
push
xor
cmps
pop
push
sti
sbb
xchg
inc
out
(bad)
cmc
cli
popa
push
fucomi
leave
scas
sbb
pop
repz
loopne
dec
rcl
mov
pop
mov
jle
out
repz
call
cmp
xor
cmp
shr
popa
mov
cli
adc
or
daa
mov
push
or
or
fbld
mov
pop
sahf
and
adc
pop
retf
sbb
test
mov
(bad)
push
jp
push
fbstp
test
loope
loop
xchg
cwde
fbstp
push
popa
mov
pop
data16
dec
sbb
pop
shl
orps
xchg
and
pusha
stos
push
into
pop
xor
cmp
pusha
cmps
sbb
fsubr
xor
sahf
sub
jle
jecxz
pop
test
and
jl
(bad)
mov
(bad)
inc
sub
call
xor
(bad)
loop
mov
in
add
popa
xchg
es
xor
sbb
test
xchg
or
addr16
bound
sub
data16
mov
pop
ins
stos
(bad)
or
mov
out
rcr
dec
inc
es
adc
adc
aad
xor
mov
into
shl
add
fnstsw
mov
sti
les
cmp
mov
pushf
and
cmc
dec
dec
sbb
cdq
fiadd
sbb
call
dec
xor
inc
fstp
fwait
mov
movs
ds
shl
push
ficom
push
data16
stos
pushf
cmps
lds
pop
data16
jb
xchg
jo
inc
mov
sub
sti
aaa
pop
arpl
loop
push
and
add
mov
and
iret
pop
xchg
sbb
(bad)
dec
cld
jmp
push
jge
xchg
cs
cs
ins
xlat
add
pop
call
call
push
mov
xchg
xchg
sub
neg
dec
pop
pop
pop
mov
mov
mov
int
sub
addr16
or
mov
mov
mov
cmp
jb
or
arpl
xchg
mov
out
retf
cmp
leave
jns
jecxz
cmp
(bad)
and
stos
adc
aas
loop
push
fidiv
xchg
and
push
inc
test
aad
imul
ss
popa
cmp
mov
int
xchg
movs
mov
movs
int
pop
adc
mov
mov
enter
sti
xchg
jno
popf
jecxz
cmps
js
call
imul
je
xchg
xchg
fdivp
push
push
in
shr
dec
jmp
aas
into
(bad)
cmp
mov
push
or
add
cli
ins
jno
or
mov
fsub
std
xor
sub
ins
xor
fiadd
sbb
xchg
mov
out
je
sti
loop
aas
mov
hlt
xlat
sbb
sti
stos
mov
xchg
out
xor
sub
inc
push
movs
push
fs
pop
pop
sahf
dec
push
jns
cmps
std
scas
xor
lods
push
mov
(bad)
push
sahf
sub
lea
and
mov
loop
aad
add
jmp
jmp
cdq
daa
mov
outs
std
scas
movs
fidivr
or
cmp
arpl
ins
data16
xor
add
ret
into
jl
adc
xchg
int
jmp
push
(bad)
(bad)
pop
(bad)
repz
ss
shl
dec
pop
daa
pop
sti
sbb
aas
jb
icebp
pop
addr16
ds
std
(bad)
pop
sub
xchg
pop
xor
jg
jmp
mov
xchg
loope
pusha
fimul
mov
ss
in
outs
stos
js
push
and
adc
push
cmp
cs
pop
pop
enter
ss
call
sub
loop
(bad)
js
mov
sbb
mov
mov
xlat
sbb
ds
mov
sti
pusha
xor
cli
(bad)
jmp
mov
push
mov
cdq
add
xlat
lock
in
vpaddd
and
xchg
outs
lock
jl
(bad)
in
push
lods
inc
fiadd
in
sbb
outs
fwait
lods
aad
(bad)
jge
arpl
dec
and
xchg
adc
mov
cmp
xchg
adc
sub
addr16
and
adc
js
rol
jbe
sbb
pop
or
in
fdiv
aaa
mov
and
pop
and
pop
mov
outs
(bad)
aad
imul
sub
xor
sbb
adc
mov
lea
out
in
and
call
pop
mov
dec
dec
das
xchg
ins
push
cmps
add
add
mov
inc
fimul
push
pop
popa
dec
popf
fwait
xchg
fld
sub
and
enter
test
xor
mov
pop
fstp
hlt
fdivr
xchg
push
sti
rol
inc
push
ds
cmc
leave
ins
enter
and
and
dec
aam
xor
mov
mov
fwait
sub
jl
mov
into
xor
aam
mov
pop
les
stc
adc
adc
shl
fst
pushf
js
and
push
aad
mov
scas
dec
jne
ror
js
dec
push
outs
adc
xchg
test
mov
pushf
out
mov
lock
dec
cli
pop
add
aas
retf
pop
retf
xor
dec
scas
adc
xor
mov
and
loopne
test
mov
(bad)
mov
mov
push
repz
sub
push
clc
jb
(bad)
mov
and
out
xchg
sbb
add
out
lds
arpl
pop
mov
stos
jle
aaa
dec
loop
dec
fadd
inc
pop
retf
push
or
sbb
nop
cli
jecxz
add
inc
test
test
cmp
push
ret
xlat
retf
xchg
lahf
mov
jbe
xchg
and
enter
jnp
(bad)
jae
jo
mov
out
or
push
aas
sbb
cmc
mov
mov
data16
dec
lods
jl
in
and
cmp
jle
jg
sbb
out
mov
push
fwait
in
jmp
dec
inc
pop
jns
ret
nop
pusha
adc
sub
add
int
mov
pop
retf
push
pop
pop
mov
ins
sub
mov
push
and
(bad)
xor
cmps
jo
jno
(bad)
(bad)
xchg
xor
(bad)
stos
lock
jne
gs
adc
cmps
xlat
push
shr
push
pop
mov
sub
sub
fs
jns
mov
fwait
or
fnstenv
call
add
dec
(bad)
test
rol
cmps
xchg
or
push
cld
cmp
imul
ret
or
scas
repz
out
std
or
fabs
sti
mov
in
dec
or
retf
add
sar
pop
out
ja
out
ja
lods
outs
into
(bad)
mov
gs
xchg
jle
xchg
iret
(bad)
cmps
jns
ins
adc
jnp
sbb
shl
jg
lock
addr16
sbb
std
ins
dec
sub
sub
sbb
pop
mov
xchg
ja
mov
cmp
stos
add
xchg
mov
cdq
push
sub
lods
xor
pop
mov
or
push
sbb
loopne
in
int
dec
js
fadd
jecxz
push
sbb
mov
jns
test
imul
js
xlat
addr16
jmp
dec
dec
mov
idiv
test
retf
int3
push
ror
or
inc
sbb
int
rcr
leave
sub
mov
mov
outs
movs
pop
add
and
xchg
inc
ja
dec
jmp
stos
retf
and
clc
or
aad
add
xchg
std
lea
fwait
loop
sub
or
les
call
or
cmp
mov
imul
mov
sub
call
lea
xor
cmps
ja
pop
enter
jo
sub
out
adc
jne
outs
dec
or
ret
dec
imul
hlt
xchg
dec
jnp
retf
mov
and
cmp
and
mov
xchg
fdivr
and
enter
mov
cmp
mov
lods
or
fdivr
iret
fs
push
dec
pop
fnstsw
pop
push
sbb
xchg
mov
xor
out
pop
sar
push
push
xchg
adc
(bad)
adc
mov
fidivr
sti
mov
arpl
push
pop
push
xchg
or
cld
iret
jae
movs
ror
bound
adc
push
js
repz
mov
aam
xlat
sti
cli
test
scas
int3
adc
inc
std
pop
lods
aaa
add
and
mov
iret
dec
mov
lods
pop
mov
movs
sti
sbb
out
int3
mov
push
xchg
fadd
movs
sahf
mov
(bad)
push
adc
into
xchg
pop
pushf
xor
jbe
dec
cdq
sub
lahf
mov
mov
das
mov
jmp
cwde
push
call
inc
shr
call
fmul
mov
(bad)
lock
push
push
out
xor
inc
je
pusha
and
js
(bad)
mov
sub
in
rcl
or
call
cmc
lods
dec
gs
mov
out
pop
retf
push
repnz
rcr
and
sub
and
lea
mov
dec
add
dec
bound
push
dec
adc
shl
cmps
sub
sub
stc
sbb
dec
aaa
and
dec
adc
stc
push
dec
mov
js
and
xchg
gs
mov
and
icebp
mov
inc
(bad)
or
pop
or
int3
adc
cmp
iret
or
or
mov
jecxz
sahf
lods
pop
inc
mov
test
push
xchg
into
inc
sbb
loop
jb
mov
fdiv
jb
xor
in
imul
or
cwde
jae
jecxz
mov
jl
mov
push
cmps
mov
mov
dec
int
mov
fisttp
movs
iret
mov
cs
jae
sti
dec
xchg
(bad)
mov
xchg
mov
popa
jecxz
and
arpl
test
sysenter
cmp
mov
ret
pop
inc
or
cmp
dec
sbb
push
sbb
pop
xor
mov
or
inc
push
inc
sub
sub
add
les
fidivr
(bad)
mov
loope
pop
je
xlat
dec
mov
adc
loopne
jg
mov
jmp
dec
add
fadd
arpl
mov
(bad)
dec
je
jge
ja
(bad)
std
int
popf
in
das
dec
arpl
or
(bad)
out
cmp
or
lods
xchg
repnz
or
sub
fnstsw
adc
mov
cdq
fdivr
pop
aam
hlt
mov
add
inc
(bad)
(bad)
fdivr
scas
pop
add
sbb
cmp
fist
aas
add
cld
sbb
div
sbb
icebp
cmp
es
inc
movs
sub
dec
or
cmp
dec
jmp
imul
lea
inc
mov
test
add
or
cmp
movs
pop
sub
jmp
out
retf
add
lea
jae
in
repnz
cli
clc
shl
out
mov
cmp
fsubr
cmps
lods
fdiv
pushf
adc
xchg
movs
push
inc
fcomp
repnz
pushf
gs
daa
popf
sub
imul
setb
lds
sbb
sub
cli
pop
sbb
les
mov
jnp
xor
add
into
mov
jmp
pop
mov
xor
pop
inc
cmp
mov
mov
pop
cmps
sbb
jl
mov
and
adc
fstp
or
leave
scas
ins
mov
iret
std
clc
sub
out
or
ret
shl
mov
mov
(bad)
in
jns
int
hlt
push
jge
fsubr
les
enter
push
sbb
push
and
xor
lods
cmp
movs
pop
dec
das
sbb
dec
clc
in
xor
das
iret
and
sbb
xor
cmp
add
mov
retf
or
arpl
mov
cmps
test
cmp
mov
mov
ja
inc
sbb
clc
ror
and
pop
jp
add
out
pushf
sub
pop
ja
mov
bnd
out
xchg
cli
inc
test
sub
add
sub
fstp
push
jp
es
loope
mov
mov
popa
scas
pop
lahf
aaa
push
sub
scas
lock
jb
dec
or
jno
mov
inc
push
and
push
sub
ja
xlat
mov
push
icebp
inc
adc
in
sbb
xchg
push
mov
mov
test
add
loop
enter
in
inc
into
scas
cmp
outs
add
pop
jmp
test
push
add
mov
in
stos
test
or
dec
lods
movs
jo
out
sar
cld
pop
(bad)
test
lahf
jl
stos
daa
push
inc
cmp
xor
(bad)
out
add
jp
pop
(bad)
pop
jl
dec
xor
iret
dec
inc
sbb
xor
add
movs
cli
(bad)
sbb
stc
inc
pcmpeqd
sub
pop
xchg
dec
or
std
push
fld
sahf
jae
mov
in
sbb
(bad)
ds
cmps
push
push
call
fadd
test
sti
mov
adc
ss
adc
jmp
add
push
mov
mov
lds
lods
scas
js
and
(bad)
fbld
(bad)
das
sub
in
inc
inc
imul
aam
sub
pop
and
add
rcl
mov
das
push
dec
add
ficom
dec
sub
jo
mov
jo
dec
mov
adc
sbb
pop
pop
fild
push
mov
mov
xlat
cmp
pop
arpl
cli
cli
lahf
retf
xchg
js
dec
mov
mov
arpl
xchg
repz
mov
push
(bad)
mov
mov
or
pop
shl
pop
(bad)
out
xchg
or
mov
neg
fcom
mov
and
shl
inc
xchg
cmps
ins
leave
(bad)
fisub
push
jp
out
mov
jl
fidivr
pop
sbb
idiv
pusha
sti
in
fsub
jecxz
dec
push
pop
pop
xchg
ja
lea
dec
iret
dec
pop
aaa
xor
mov
add
and
add
xchg
inc
out
jnp
js
sar
call
outs
cmp
mov
sbb
mov
popf
jmp
or
icebp
pop
jns
push
cdq
aas
xchg
sbb
xor
movs
mov
mov
dec
cmp
jle
sub
imul
push
xchg
bound
jge
addr16
scas
mov
mov
jmp
enter
mov
inc
outs
sbb
ds
cmps
ret
inc
inc
mov
outs
retf
inc
dec
fld
add
test
xor
dec
mov
or
inc
xchg
daa
and
jne
loopne
and
hlt
je
or
daa
enter
mov
arpl
push
ret
in
lock
xor
fs
rol
dec
test
(bad)
dec
mov
push
push
mov
movs
xor
cmps
mov
jb
or
pop
out
ss
adc
sub
sahf
mov
(bad)
inc
and
shl
xchg
gs
cmp
cs
cmp
imul
jmp
scas
xor
mov
ret
and
jg
test
test
inc
pushf
out
fistp
(bad)
push
(bad)
mov
aad
test
dec
call
cs
adc
mov
cmp
lahf
loop
adc
cld
or
(bad)
pusha
jecxz
inc
xchg
pop
lds
pop
sbb
or
push
adc
test
movs
mov
mov
ror
div
mov
(bad)
pop
ss
inc
cli
mov
xchg
sti
loopne
lods
xchg
pop
in
fisub
sub
int3
(bad)
mov
push
(bad)
pop
sbb
icebp
sub
inc
push
lods
icebp
iret
les
mov
sbb
add
pop
jle
std
inc
jmp
aas
add
pop
repnz
popf
push
mov
mov
rcr
movs
mov
dec
loope
pusha
xchg
repz
push
push
dec
jae
dec
fs
and
loope
pop
add
mov
mov
out
fbld
dec
stc
ja
(bad)
sbb
movs
pop
push
pop
lods
xor
hlt
inc
js
or
repz
ret
mov
lahf
inc
xchg
mov
iret
imul
xchg
mov
sti
dec
xor
or
shr
add
mov
cmc
call
mov
out
lods
lods
icebp
mov
mov
mov
xchg
shr
sbb
(bad)
mov
mov
cmp
push
loope
fwait
cwde
and
test
pop
dec
stos
retf
mov
ret
cld
fisttp
ror
iret
and
mov
(bad)
or
sbb
xchg
jmp
cmps
jb
je
int
inc
sub
and
gs
mov
shl
mov
sub
push
xor
loop
es
(bad)
push
fdivrp
imul
sbb
xor
xchg
ror
sub
sub
imul
imul
xchg
inc
faddp
ret
fprem1
xor
sar
cwde
test
ss
sbb
test
inc
outs
lds
das
fwait
xor
imul
jg
add
sub
mov
out
(bad)
retf
mov
movs
repz
and
adc
push
das
fs
ins
shl
popa
addr16
mov
shl
fdivr
add
pop
loope
push
and
jmp
adc
pop
int3
mov
push
add
push
sbb
dec
sub
xchg
iret
out
in
cmp
or
inc
repnz
stc
mov
ins
(bad)
jae
inc
cmps
pop
test
jmp
aaa
dec
jnp
in
ds
ins
retf
in
mov
sahf
pop
rcr
push
inc
es
fist
lds
bound
and
cmp
retf
shr
xchg
adc
int
(bad)
(bad)
fsubr
clc
xor
fst
sub
push
push
cmp
mov
pop
mov
mov
pop
outs
retf
sub
or
shl
fsub
cs
and
call
fdivp
into
(bad)
stc
jge
mov
cmp
inc
or
mov
hlt
jge
std
(bad)
into
(bad)
fwait
inc
in
xchg
mov
movs
nop
pop
pop
rol
push
dec
pop
jae
dec
jge
inc
push
sar
int
inc
leave
dec
imul
in
push
ds
aam
inc
ror
ds
xor
ins
push
daa
mov
(bad)
pushf
xor
dec
jge
cmp
cmc
pop
ds
pop
test
add
or
ret
into
mov
(bad)
and
loopne
clc
mov
and
lds
mov
jl
and
xor
rol
stc
push
(bad)
frstor
shr
ja
pop
sbb
jecxz
mov
mov
sbb
push
ja
jno
in
aaa
mov
xlat
sbb
push
adc
mov
or
sbb
pop
push
pop
mov
call
jne
sbb
cwde
(bad)
pop
add
loop
pop
push
push
call
lea
inc
fild
jbe
inc
push
xor
and
test
jmp
push
mov
popf
outs
sbb
iret
cld
push
fsubr
movs
imul
add
mov
mov
shr
cmp
bnd
rcr
lods
mov
pop
out
or
sub
lods
pop
cld
in
ss
jmp
xchg
ds
pop
ret
test
outs
jo
xchg
mov
aam
or
retf
outs
jbe
cdq
rol
dec
test
jmp
repnz
xor
mov
sub
call
adc
retf
xchg
xchg
add
stos
fistp
sar
stos
xchg
cld
add
mov
fbstp
js
push
rcr
cli
jecxz
pop
mov
cmps
pop
dec
dec
lock
push
mov
in
xchg
jle
cmps
fistp
inc
cmp
or
cmps
pop
push
pop
daa
pop
mov
and
mov
dec
mov
loope
xchg
pop
loope
in
adc
in
xchg
mov
mov
jo
jecxz
cmp
jmp
ds
test
pop
xchg
cwde
out
ror
in
in
xor
sub
test
data16
dec
jl
dec
shr
shr
mov
out
outs
call
pushf
pop
mov
retf
xchg
aas
and
fs
test
ja
shl
fnstenv
mov
adc
arpl
enter
shl
add
jb
and
cwde
sub
cmp
fild
fs
sub
xlat
push
pop
icebp
test
add
xor
xor
inc
retf
enter
xor
push
mov
fadd
dec
(bad)
ja
nop
xlat
xchg
inc
int3
test
clc
int
add
frstor
add
ret
or
out
or
aas
mov
js
sub
sahf
add
xchg
outs
sub
xor
add
in
jecxz
inc
call
dec
add
pop
push
clc
aaa
rcl
mov
push
mov
enter
in
gs
lahf
loop
sbb
mov
daa
enter
leave
push
xchg
or
pop
or
push
test
ret
push
outs
xchg
std
mov
pop
loope
sub
aad
xor
xor
sub
and
xchg
iret
stos
add
dec
loopne
fild
mov
lea
mov
outs
stc
int
mov
push
shl
xor
nop
push
lahf
or
xchg
add
mov
xchg
inc
imul
mov
xchg
cmp
pop
sahf
es
jns
mov
sar
mov
movs
sar
push
sbb
xchg
fisttp
sub
daa
repz
movs
sub
out
and
xlat
pop
mov
in
sti
sahf
or
imul
in
js
inc
aam
mov
icebp
les
mov
jecxz
out
or
push
mov
pusha
scas
xchg
xchg
xchg
scas
leave
enter
or
(bad)
inc
fst
lds
jmp
cmp
pop
mov
ins
ret
adc
adc
fwait
not
sub
sahf
pop
fsubr
out
rol
cs
lea
aad
cmp
aaa
cs
cmp
sbb
inc
xchg
popf
add
mov
vphadddq
sbb
loope
mov
xchg
pop
inc
cmp
jge
or
pop
mov
div
fadd
xchg
sete
fcom
dec
cmp
jae
cmp
jo
outs
push
add
lds
pop
fld
mov
repz
shr
cmp
xchg
add
(bad)
xor
cmp
fstp
xchg
fisub
pop
sti
and
jne
pusha
popa
loop
ds
out
aam
sub
dec
dec
test
ins
(bad)
(bad)
cmps
pop
sbb
cmp
sbb
push
pop
mov
or
pop
enter
pop
cld
inc
in
mov
dec
mov
xchg
dec
out
pop
xchg
inc
add
inc
dec
push
xchg
push
in
push
or
push
dec
sub
push
mov
push
sti
pop
jecxz
cs
into
test
sbb
jle
std
push
push
inc
fcmovu
pop
pop
mov
lahf
or
inc
or
lea
shl
fbstp
add
jg
dec
imul
(bad)
int3
jns
xor
mov
xlat
mov
push
cmove
retf
int
pop
imul
arpl
pop
cmpps
ret
retf
sub
jnp
add
ror
ins
and
dec
mov
jbe
loope
and
jecxz
es
aam
add
loop
fnsave
jbe
and
outs
mov
pop
imul
jg
xchg
data16
and
clc
xor
cmp
jle
pushf
mov
fwait
jo
mov
ror
rcr
lock
xchg
retf
das
jp
lods
jp
mov
mov
pop
sbb
mov
fsub
lds
cmp
daa
scas
push
xchg
sahf
dec
cwde
jns
mov
(bad)
lds
pop
mov
je
inc
outs
mov
test
sbb
push
je
ins
cmovnp
jae
enter
xchg
fadd
dec
mov
jns
scas
cmp
inc
cs
rcr
fistp
aas
mov
push
inc
shl
mov
iret
add
jge
aad
fistp
jle
cmp
mov
icebp
imul
stos
add
(bad)
int3
popa
pop
cmp
jmp
das
add
jae
(bad)
sbb
mov
popf
ret
sbb
mov
dec
je
mov
lahf
push
je
and
mov
xor
xchg
sub
pop
mov
out
(bad)
mov
dec
jae
cli
jo
scas
cmp
mov
lahf
lea
xchg
xor
cmps
fidivr
repz
retf
sbb
dec
not
test
in
cmp
xor
cmps
popf
dec
stos
in
cmp
sub
mov
sub
fs
pop
fnstcw
pusha
inc
arpl
adc
das
xor
out
jl
gs
push
inc
enter
xchg
fs
mov
xor
mov
test
arpl
cmp
adc
jg
and
mov
pop
inc
in
fs
pop
push
in
pop
jg
arpl
ret
adc
mov
in
cmp
mov
shl
fbld
cwde
add
adc
mov
popf
aas
jp
pop
push
adc
mov
jecxz
push
adc
mov
arpl
or
mov
fwait
and
inc
xchg
mov
jne
jmp
into
sti
int3
inc
fwait
sub
mov
mov
add
icebp
scas
in
sub
cmp
hlt
test
cmps
test
call
add
and
mov
jno
pop
dec
mov
je
loope
xchg
jge
add
stos
aam
sar
aad
out
imul
or
add
dec
movs
sbb
or
ss
mov
sahf
adc
icebp
cmps
repnz
or
jge
adc
xlat
int3
add
xchg
mov
pop
int3
jmp
xchg
imul
lods
(bad)
(bad)
sbb
(bad)
cmps
adc
inc
mov
mov
sub
add
je
stos
cmp
xor
inc
push
movs
add
xchg
or
push
push
popf
(bad)
cmp
cld
or
push
inc
pop
mov
cmc
mov
sub
sub
movs
mov
add
push
retf
pop
jl
sbb
(bad)
cmp
into
xchg
xchg
retf
sar
rcl
imul
xchg
stc
cmp
jo
(bad)
retf
pop
add
push
out
or
adc
ins
pop
adc
jne
mov
inc
cmp
inc
lds
jmp
mov
sub
cmp
stos
data16
in
mov
outs
sub
les
add
push
adc
cwde
lahf
arpl
je
and
std
jp
nop
add
jne
inc
mov
scas
cli
mov
xor
sub
cmp
dec
mov
(bad)
clc
js
fdivr
push
iret
inc
pop
cld
test
inc
jns
jb
(bad)
arpl
(bad)
stos
sbb
retf
test
adc
push
sbb
stos
(bad)
push
ret
fcmovnbe
inc
cmc
mov
repz
inc
push
sbb
std
add
xchg
dec
dec
outs
dec
add
in
xchg
test
das
fisubr
jo
inc
xchg
push
ret
call
es
mov
cmp
rcl
mov
call
pushf
xchg
inc
adc
adc
jmp
jo
xchg
mov
mov
adc
ds
add
cmp
lahf
in
push
rcl
adc
outs
xor
adc
imul
(bad)
push
iret
inc
or
jmp
(bad)
and
loope
inc
pop
cmp
and
jns
push
pusha
pop
mov
jo
mov
jecxz
mov
mov
jne
ss
dec
pop
xchg
pop
cmp
sar
cmp
iret
cs
xor
adc
pop
dec
push
and
jne
test
lea
and
jp
push
mov
push
or
int3
gs
(bad)
push
or
push
jmp
mov
xchg
sar
sub
nop
xchg
xor
add
(bad)
outs
out
adc
and
push
aas
pop
(bad)
outs
mov
xor
cmps
ret
inc
and
cmps
jecxz
jmp
(bad)
js
sahf
pop
cs
and
mov
add
pop
fs
mov
xchg
mov
aad
mov
dec
cmp
sbb
cli
mov
xlat
nop
sub
jl
mov
jo
hlt
sahf
xchg
mov
dec
and
aam
hlt
and
mov
fdiv
leave
ja
shl
and
movs
ss
out
sbb
sbb
dec
sbb
mov
ins
adc
mov
fistp
sbb
pop
and
rcl
aad
mov
mov
repnz
adc
xchg
vpaddsb
call
popf
lods
ja
rcl
mov
icebp
(bad)
pop
inc
fcom
dec
adc
fdivr
lds
ret
pop
gs
mov
fmul
xor
inc
dec
jecxz
push
addr16
(bad)
dec
(bad)
dec
mov
push
push
scas
and
cmp
push
arpl
clc
mov
xchg
fadd
cmp
leave
mov
cwde
mov
pop
cmp
xchg
xor
movs
inc
fwait
sub
(bad)
mov
cmp
(bad)
sub
ins
xchg
push
mov
aas
cmps
call
xchg
mov
sti
or
popf
jl
pop
call
ret
sub
jns
or
clc
lea
mov
lds
mov
mov
inc
loope
push
and
shr
dec
jmp
popf
jmp
cmp
adc
push
mov
cmp
mov
xchg
shl
xchg
cmp
or
dec
retf
and
aaa
push
xor
cmc
lahf
inc
and
(bad)
push
mov
mov
mov
shl
sub
cld
int3
adc
into
cmp
mov
or
(bad)
and
retf
test
icebp
scas
push
es
lds
xor
pop
cmps
mov
fs
fucomip
imul
or
test
and
lea
popf
xor
in
(bad)
mov
sub
xlat
mov
cld
dec
push
rol
mov
add
pop
dec
sub
mov
mov
sbb
jl
pop
jp
cmp
mov
pop
mov
cmp
mov
and
add
jno
hlt
lock
(bad)
retf
scas
pop
jne
clc
mov
xchg
sub
outs
push
inc
(bad)
loopne
xchg
rcr
mov
sub
(bad)
mul
inc
jecxz
add
in
cmp
pop
adc
adc
enter
es
js
ds
sbb
push
sbb
nop
lods
add
test
cmp
xlat
xor
mov
sub
xor
add
and
push
movs
sbb
ret
xchg
in
push
out
addr16
inc
cmc
cli
mov
jae
xchg
add
addr16
dec
cwde
or
dec
ret
daa
adc
jle
jno
add
scas
loope
mov
mov
fnstenv
mov
das
add
ins
xchg
retf
out
stos
push
mov
xor
inc
push
in
xchg
out
inc
je
fist
pop
push
sub
jmp
sbb
rcr
das
xchg
pop
and
push
jb
pop
xchg
push
xchg
ret
sub
les
ins
xlat
lds
ret
popf
add
loope
cmp
(bad)
arpl
jle
popa
adc
add
push
push
jle
jbe
adc
call
dec
clc
dec
pop
push
inc
pushf
fwait
sub
fs
repz
(bad)
(bad)
loop
mov
iret
dec
push
or
adc
mov
les
adc
stos
dec
pop
pop
xchg
or
sar
sub
mov
mov
shl
dec
icebp
cmp
cmp
cmp
call
sbb
jecxz
jo
and
jb
inc
mov
pop
mov
xor
push
xlat
mov
loope
xor
in
push
or
jno
into
sbb
or
aam
icebp
sbb
stc
ret
movs
loopne
sub
add
(bad)
div
hlt
test
push
add
enter
sub
out
fdivr
sub
es
mov
in
stos
dec
imul
cmp
out
icebp
movs
loope
aaa
ss
jns
int
iret
mov
mov
pop
scas
(bad)
lea
outs
pop
and
int
cmps
and
loop
adc
ret
std
fadd
mov
sahf
stc
sbb
pop
xchg
or
or
jg
jl
push
out
test
jle
jp
dec
ficomp
or
dec
or
je
inc
fstp
shl
sbb
dec
out
xchg
enter
leave
jecxz
cmp
ret
mov
dec
iret
cmp
mov
adc
call
pop
not
jae
mov
and
push
shl
mov
outs
xor
cmp
xor
cmp
lea
xchg
adc
scas
stc
sar
dec
sub
push
cmc
iret
xchg
push
jbe
(bad)
call
fs
nop
mov
scas
mov
xlat
push
out
cmp
cmp
jp
xor
sub
sbb
dec
outs
jmp
jmp
neg
aas
push
into
cs
test
pop
test
repnz
addr16
xlat
sti
test
iret
cmp
mov
nop
xor
mov
sub
nop
xor
push
ja
gs
mov
add
cmp
dec
jp
or
cmp
inc
mov
arpl
jle
pop
stc
cmp
sti
pop
lock
inc
adc
in
lods
out
test
jno
mov
add
rcl
(bad)
ror
sbb
bound
inc
add
icebp
lods
jnp
cmp
ins
scas
popa
fwait
in
xor
ret
xor
fistp
adc
dec
mov
stos
outs
(bad)
push
cmp
iret
xlat
in
call
push
test
mov
jmp
sbb
retf
dec
xchg
dec
mov
repnz
call
add
or
pop
inc
adc
les
and
mov
cwde
and
movhps
cmp
sbb
push
out
push
lea
cdq
movs
dec
(bad)
leave
or
ficomp
pop
std
mov
mov
xor
pop
xchg
cmps
xchg
xor
push
cmp
test
mov
stos
retf
scas
test
int3
aam
popf
sub
xor
movs
jne
repz
or
cwde
add
push
fiadd
lods
adc
lock
lea
push
xor
or
push
and
pop
scas
sbb
dec
iret
xchg
retf
xchg
jl
pop
sbb
lahf
push
mov
fwait
lea
mov
mov
(bad)
push
(bad)
inc
push
lods
sti
mov
pop
retf
call
sbb
and
jge
cmp
adc
stos
mov
pop
fs
mov
cli
pop
pusha
mov
mov
sbb
jge
add
aad
cmp
dec
test
inc
scas
es
sub
cmps
xor
test
push
cs
es
pushf
pop
cmp
sbb
inc
pop
aas
icebp
push
cmp
and
scas
push
mov
int3
cmps
or
pop
pop
inc
test
push
cwde
call
mov
inc
xchg
ins
movs
test
add
mov
adc
jne
ret
daa
adc
xchg
xchg
ret
cs
jnp
(bad)
mov
sub
dec
mov
mov
ins
in
sub
pop
inc
inc
cmps
pop
push
fdivr
or
add
jg
popf
out
adc
jmp
and
pop
mov
pop
aam
add
pop
inc
cmp
mov
cmp
jmp
add
retf
sbb
daa
je
adc
pop
jnp
add
pop
and
sub
or
jp
adc
xchg
imul
fwait
adc
jno
jge
js
push
rcl
pushf
jg
imul
test
fisttp
(bad)
movs
loop
pushf
xchg
data16
daa
push
inc
inc
int
scas
add
je
iret
call
push
sub
call
xchg
lea
cmc
into
out
dec
leave
mov
les
sub
int
push
mov
repz
xchg
and
pop
xchg
sar
push
icebp
pushf
adc
fwait
pop
lahf
xchg
pop
scas
or
arpl
scas
cdq
adc
sub
stos
mov
jle
pop
xchg
inc
cmc
repnz
adc
mov
adc
mov
jmp
retf
adc
or
sahf
aam
jbe
jp
cmps
mov
enter
push
sbb
enter
in
pusha
jp
xlat
aaa
cmp
xchg
inc
enter
inc
pusha
jne
imul
dec
mov
adc
dec
test
icebp
add
int3
inc
dec
pop
mov
push
mov
fdivrp
cmp
pop
pop
outs
mov
inc
stos
mov
ret
lods
mov
inc
mov
sar
addr16
xchg
jmp
sub
or
mov
(bad)
(bad)
(bad)
aam
jae
div
aaa
pop
jl
int3
and
mov
mov
sbb
stc
(bad)
movs
fcmovbe
rcr
pop
int3
and
stc
imul
cwde
js
mov
pop
jl
xor
lods
outs
sbb
push
jmp
mov
and
test
push
adc
mov
pop
sub
dec
mov
outs
inc
cli
out
pop
mov
mov
jmp
repnz
jbe
sbb
xor
cmp
inc
mov
(bad)
aas
push
loope
mov
push
(bad)
adc
cmp
adc
xchg
out
das
inc
cmp
shl
and
mov
xchg
xchg
jecxz
lods
xchg
jp
sbb
lea
js
xor
aas
and
or
call
adc
movs
ret
and
(bad)
mov
mov
jnp
mov
xchg
and
inc
js
and
xchg
mov
add
inc
das
inc
das
adc
mov
dec
adc
cmp
test
iret
inc
push
and
cwde
xor
add
es
xor
call
sub
jmp
xchg
xor
imul
xchg
in
sub
sbb
(bad)
xor
jg
jle
in
ret
jno
les
(bad)
xchg
cld
retf
test
push
ss
jp
aaa
cwde
push
cli
cmps
sbb
xchg
push
daa
adc
mov
pop
mov
sub
fdivp
cmp
adc
call
cmc
mov
mov
stc
pop
mov
jl
sub
jno
adc
(bad)
fsub
mov
icebp
fsubrp
aas
inc
ret
pop
movs
and
mov
lahf
arpl
sbb
add
or
dec
inc
jns
adc
jno
jmp
fsubr
xor
jo
sbb
pop
fsubrp
mov
jp
rcr
add
sbb
cmp
js
aas
fist
cmp
je
push
enter
cmp
mov
xchg
push
dec
sub
mov
sti
xor
sahf
aas
in
cmp
ds
or
ss
std
out
ins
aaa
rcr
retf
nop
sub
lahf
daa
stos
adc
cmp
dec
aad
jge
lods
arpl
mov
loope
push
ror
sbb
pusha
or
jp
push
mul
repz
fistp
pop
mov
inc
(bad)
cmp
inc
sbb
sbb
mov
gs
ss
add
es
sub
jae
daa
mov
xchg
movs
xlat
cli
sbb
jg
mov
mov
jns
sahf
push
lods
movs
mov
xchg
dec
(bad)
dec
data16
div
or
retf
sbb
shl
jo
retf
stos
in
xchg
sub
mov
(bad)
push
sbb
dec
mov
mov
call
addr16
pop
lds
jg
and
jae
adc
dec
jmp
js
xor
or
cmps
icebp
in
aas
mov
out
cdq
fdiv
rcr
mov
call
fst
jno
dec
inc
pop
idiv
jmp
push
xchg
jns
sbb
test
jno
rcl
add
ins
push
in
inc
popf
cmp
mov
dec
ja
int
and
xor
in
sahf
cmp
out
cmp
lock
dec
icebp
mov
add
mov
(bad)
sbb
push
mov
pinsrw
mov
add
xchg
ins
test
add
mov
jge
mov
or
add
int3
sbb
out
jl
sub
ret
push
fist
imul
inc
fist
cld
ret
adc
inc
cwde
or
pop
(bad)
enter
adc
xchg
mov
enter
mov
jo
cmp
(bad)
fcom
loope
inc
cmp
sbb
mov
cmp
mov
jb
(bad)
adc
aaa
(bad)
div
xchg
sbb
int
lock
stos
dec
xchg
mov
or
inc
xchg
xchg
push
cli
stos
or
sar
cs
mov
and
sub
mov
dec
push
push
sub
sub
aas
cmps
dec
lds
cwde
stc
loop
adc
add
(bad)
jmp
sar
fidiv
add
adc
dec
std
jb
inc
es
retf
mov
lock
stc
popf
xor
fsubr
in
and
cmc
dec
or
pop
out
and
sbb
int
pop
xchg
adc
add
mov
mov
repnz
xchg
in
mov
add
out
push
outs
lock
in
daa
aas
int
cmp
push
fs
dec
mov
jle
mov
in
std
pop
out
mov
dec
call
pop
mov
jl
sbb
and
jmp
mov
mov
xlat
loop
mov
movs
sbb
push
jns
adc
mov
pmuludq
push
mov
adc
cmps
jg
push
and
jge
pushf
jecxz
sbb
repz
or
mov
sbb
xchg
mov
mov
or
and
adc
sbb
icebp
cmp
or
sti
push
xor
sub
call
xchg
dec
test
repnz
test
shr
imul
mov
popa
inc
mov
mov
xchg
jne
and
mov
gs
push
test
pusha
mov
add
mov
cmp
les
mov
movs
mov
das
jl
pop
std
inc
nop
mov
and
mov
xor
test
cmps
es
pop
pop
add
inc
push
int3
fadd
je
sub
sbb
mov
add
dec
adc
jl
pop
push
xchg
lock
sahf
and
loope
pop
and
cmp
xchg
sub
into
in
dec
pop
jl
(bad)
outs
(bad)
inc
rol
lods
cmp
test
jp
test
mov
pop
test
aam
xchg
outs
shl
in
mov
push
mov
xor
scas
lahf
add
cmp
cli
and
sub
pop
push
sub
ins
cli
fcomp
jno
jp
pop
jb
mov
adc
jne
outs
in
sbb
adc
fmul
mov
fs
xor
xor
and
loopne
inc
push
inc
fnsave
cmp
or
adc
push
jmp
fidiv
mov
repnz
setb
sbb
pushf
clc
mov
ret
lahf
or
ins
sub
(bad)
sahf
add
data16
or
js
push
ja
data16
pop
in
and
push
fucomp
inc
aas
icebp
fnstenv
jnp
push
sbb
cmp
adc
mov
sub
add
sub
mov
push
fistp
mov
out
sbb
mov
in
push
nop
(bad)
lahf
xchg
push
loope
mov
fwait
adc
inc
dec
and
lods
das
cmp
mov
ins
xor
in
sbb
pop
push
int
fst
scas
stos
pop
sbb
adc
int
push
mov
mov
mov
mov
nop
dec
fs
std
mov
clc
push
movs
push
jae
or
cmps
mov
sbb
cmps
(bad)
repnz
xchg
pop
sbb
cmps
dec
les
mov
fwait
cmp
ss
pop
pushf
sub
imul
mov
or
repz
xchg
dec
fbstp
adc
ror
add
add
or
pushf
das
out
pop
jno
ret
js
push
test
and
sub
and
rcl
sbb
pop
icebp
jns
mov
pop
cmps
jo
push
(bad)
fisttp
xlat
(bad)
out
das
sbb
cmp
lds
std
cmovp
jg
daa
cs
jge
fdivrp
xchg
push
sub
arpl
and
sbb
scas
xchg
imul
mov
out
leave
adc
cmc
sub
shr
clc
pop
xor
sbb
lds
or
and
mov
lods
ja
mov
cmp
out
mov
mov
sub
jo
int
in
and
std
xchg
aam
cdq
js
neg
std
push
push
sbb
push
xlat
sbb
ret
mov
fs
cs
scas
sub
mov
dec
and
(bad)
push
cmp
shl
hlt
sahf
out
jo
push
fadd
pop
stos
mul
jecxz
mov
push
jl
retf
mov
das
int3
loope
loope
rcr
ds
daa
jmp
mov
mov
lds
push
and
fld
adc
and
(bad)
leave
neg
pusha
out
push
cdq
(bad)
sub
in
jge
xchg
hlt
test
test
loop
push
ret
add
(bad)
(bad)
popf
dec
jg
pop
add
cmp
or
(bad)
jp
(bad)
imul
test
dec
rcl
xchg
lock
push
mov
aaa
inc
mov
or
test
ficomp
cld
ja
mov
adc
mov
pop
xchg
mov
xor
sub
jae
je
mov
stos
pop
dec
pop
pop
inc
(bad)
mov
add
push
push
push
add
shr
ror
mov
pop
jle
inc
fwait
lods
out
cmc
mov
xor
je
push
lds
jmp
pop
jmp
mov
xor
cli
fnstcw
pop
aaa
ss
or
stc
jmp
jecxz
push
jg
add
dec
mov
mov
mov
sub
ret
or
pop
push
mov
dec
jae
clc
in
ror
cwde
(bad)
ins
popf
mov
and
jne
(bad)
pop
(bad)
and
or
dec
leave
add
inc
in
shl
mov
int
sbb
mov
jae
sub
sub
pushf
scas
and
ins
fld
and
das
jno
mov
and
repz
mov
adc
cmp
imul
pushf
ss
cmp
cmp
ret
mov
idiv
mov
add
xor
js
xlat
inc
pop
jnp
std
mov
aam
sub
icebp
(bad)
xor
pop
loopne
mov
pop
inc
ret
sbb
arpl
push
and
icebp
dec
lahf
mov
inc
cmps
sub
fnstsw
push
push
mov
or
outs
je
xchg
ja
test
jb
push
movs
(bad)
mov
bound
or
sbb
cmp
jge
into
push
xchg
into
(bad)
adc
inc
lahf
out
mov
pop
scas
mov
shr
pop
jmp
mov
fld
daa
lahf
sahf
inc
mov
repz
pusha
push
mov
pop
xchg
pop
test
sub
data16
mov
pop
test
std
pop
outs
inc
inc
mov
out
out
out
pop
add
inc
or
cli
sub
mov
lahf
and
stc
cmps
out
(bad)
fisttp
jmp
gs
push
pusha
push
or
ins
sub
outs
hlt
push
jnp
mov
inc
pop
xchg
sti
push
jmp
icebp
test
in
mov
aas
mov
sbb
cmp
pusha
or
jbe
xor
adc
mov
mov
ror
aas
dec
mov
in
sub
outs
ret
push
cmp
xor
shl
and
xor
fadd
ret
pop
int3
dec
aam
stc
add
mov
jmp
sub
jmp
adc
and
ja
xchg
js
out
test
xor
stos
xor
hlt
jmp
push
cdq
xor
call
movs
(bad)
clc
adc
mov
xor
popf
call
pusha
xchg
loope
cdq
leave
je
repz
cmc
cmp
loope
xchg
pop
cld
pushf
dec
xchg
and
icebp
cs
ss
xor
or
into
in
push
cli
stos
dec
mov
mov
repz
ins
add
les
xor
pop
fistp
out
ret
sub
ins
or
push
push
push
aas
(bad)
mov
adc
lods
push
mov
xchg
loope
adc
sbb
pop
inc
pushf
(bad)
(bad)
dec
xchg
dec
inc
in
sbb
shl
add
xchg
or
mov
(bad)
fdiv
jae
dec
jb
and
and
cmp
mov
inc
clc
mov
bound
fmulp
int3
cli
outs
cmps
nop
mov
out
sub
out
mov
jae
daa
sbb
imul
test
push
push
mov
jne
js
lea
jns
pop
dec
movs
pop
call
add
je
mov
stos
(bad)
stc
test
test
xor
add
jmp
xor
push
test
or
pusha
sbb
in
ins
xchg
adc
stos
jno
inc
mov
push
(bad)
stos
xor
int3
gs
aas
or
test
mov
fistp
dec
inc
pop
outs
jp
jae
sub
or
mov
inc
xlat
js
pop
push
add
dec
jge
xor
jne
xor
mov
popa
nop
jbe
cmp
mov
(bad)
scas
xor
pop
mov
cs
pop
arpl
mov
hlt
xor
or
jbe
test
adc
inc
int3
cli
jmp
neg
push
enter
mov
cli
pop
test
popa
sahf
pop
dec
loop
pop
pop
push
pop
push
and
cs
pop
inc
dec
adc
push
xor
ds
std
add
push
fcom
mov
hlt
pop
call
sub
inc
dec
pop
addr16
and
xchg
cmp
mov
in
out
(bad)
int3
inc
sub
repnz
or
jbe
cmc
or
sbb
(bad)
std
dec
cmp
dec
mov
in
call
dec
jo
xchg
jo
inc
cdq
mov
cmp
inc
xchg
mov
cmps
mov
cmp
ss
fwait
mov
mov
xlat
jl
xchg
les
or
mov
call
adc
test
jge
popf
inc
mov
les
sar
cmc
jl
je
xchg
push
adc
mov
mov
ret
fist
mov
xor
mov
pop
pop
jns
and
sbb
(bad)
lods
call
mov
jae
cmp
adc
jne
mov
adc
hlt
mov
scas
icebp
fwait
mov
xor
mov
in
adc
mov
xchg
and
xchg
and
add
out
pop
xor
dec
jb
adc
cmp
dec
push
rcr
daa
mov
scas
gs
xchg
xchg
in
push
loope
movs
or
jmp
or
repz
shld
inc
mov
add
movs
or
add
pusha
adc
mov
mov
dec
mov
fidivr
push
add
out
inc
jbe
xchg
fs
xor
mov
xchg
xor
ror
cdq
cli
sar
and
js
mov
iret
in
xchg
stos
sub
xor
mov
mov
pop
arpl
xor
sbb
push
gs
mov
out
add
pop
(bad)
push
popa
jl
loop
pop
mov
jp
dec
ins
or
mov
rol
or
and
test
repz
test
pop
addr16
dec
or
push
push
fwait
hlt
mov
(bad)
gs
sbb
and
push
nop
mov
out
cdq
mov
dec
or
add
inc
sti
lahf
add
inc
dec
icebp
and
push
ret
jp
and
jg
mov
gs
aam
test
or
inc
mul
fild
icebp
jne
arpl
mov
int
fldln2
cs
out
rcl
mov
add
sbb
add
pop
(bad)
cwde
adc
aas
mov
or
xlat
(bad)
scas
push
iret
jecxz
cmps
cmp
js
pop
dec
and
xchg
xchg
out
fstp
or
in
jge
jmp
or
mov
bound
in
inc
movs
add
aas
adc
mov
stos
ja
mov
jne
repz
mov
stos
push
shr
dec
push
xchg
das
jbe
icebp
mov
mov
mov
test
in
das
cdq
sbb
retf
xor
les
loope
lock
adc
ficomp
fs
add
jg
pop
fld
dec
pop
pop
xor
xor
pushf
ja
in
jge
dec
daa
xor
mov
loop
and
jp
sbb
movs
dec
push
cli
mov
aaa
(bad)
sahf
lock
adc
or
out
sbb
push
xchg
cmp
sbb
dec
in
pop
jmp
scas
repnz
shr
cdq
cwde
(bad)
out
mov
mov
push
mov
loop
xchg
nop
xor
fnstsw
mov
outs
out
test
mov
jl
mov
lods
cmp
ja
pop
bound
or
or
retf
add
xchg
stos
jg
ror
ins
jmp
je
adc
inc
jo
sbb
enterw
jbe
push
js
mov
frstor
push
mov
popf
xchg
das
cld
fist
scas
cwde
or
cmp
jmp
and
xor
jns
pop
inc
xor
int
push
ins
(bad)
dec
in
xchg
fcmovbe
push
add
mov
ds
push
and
shr
sbb
xchg
imul
js
push
jg
repnz
loope
add
popa
dec
mov
fcomip
jge
mov
or
arpl
xchg
pop
mov
lea
jo
in
test
test
mov
mov
rol
mov
repz
and
lods
leave
dec
mov
jbe
fisttp
adc
xchg
pop
mov
out
ficom
pop
cmps
leave
fwait
mov
call
jmp
jg
sub
pushf
sub
push
pop
test
or
xor
daa
xor
in
lods
add
sub
sub
jmp
push
mov
xchg
sub
lahf
dec
ja
or
push
(bad)
mov
es
das
pop
lods
mov
and
pusha
fnstcw
in
xor
push
inc
and
cmp
jmp
cmp
dec
lds
inc
jno
pop
xor
fwait
pusha
jbe
int
cmp
rcl
aad
arpl
push
mov
jae
movq
sub
sub
dec
and
add
loopne
test
jmp
sub
adc
dec
cmp
cmp
retf
call
adc
in
int3
and
ret
scas
fist
push
adc
mov
test
or
test
pushf
(bad)
pop
mov
push
jmp
pop
dec
pop
pop
outs
std
or
mov
sub
scas
(bad)
lods
cmp
xchg
push
and
jne
mov
pop
jmp
popf
xchg
and
cmp
and
hlt
leave
mov
sbb
pusha
fcmovnbe
rcr
jge
cmp
cmp
test
pushf
test
popf
mov
or
push
int
rcl
movs
fisub
cmps
cmp
jg
test
in
shl
mov
push
(bad)
pop
pusha
inc
pop
inc
int3
jnp
mov
stc
add
xchg
into
push
lods
adc
and
and
xor
call
push
(bad)
dec
fstp
scas
les
imul
push
arpl
scas
sbb
inc
inc
(bad)
popa
and
fistp
outs
pop
xchg
mov
sub
jecxz
jl
or
aam
sub
mov
jns
xor
inc
xor
jg
arpl
call
pusha
jl
adc
sub
call
add
jno
jns
pop
or
js
dec
je
(bad)
icebp
jl
loope
outs
aaa
aaa
dec
dec
mov
scas
dec
fs
rcl
push
mov
xor
ret
std
inc
nop
inc
daa
loopne
mov
jnp
pop
lea
add
cmp
cmp
sbb
xor
call
jns
(bad)
push
mov
lock
fdiv
stos
pop
test
jmp
xchg
mov
jne
jg
pop
mov
mov
push
push
pop
retf
xor
bound
repnz
adc
add
and
mov
xor
in
inc
fild
push
ficom
or
mov
je
dec
bound
loopne
cmp
ds
inc
sbb
inc
div
mov
cmp
mov
adc
or
mov
and
fisub
loopne
inc
daa
not
cmps
jmp
mov
jns
or
xor
jb
(bad)
hlt
sbb
std
outs
les
mov
push
xor
xchg
loopne
cmps
and
lahf
test
sbb
or
test
imul
jmp
pop
lea
out
stos
mov
push
cmp
adc
iret
sub
int
sbb
js
in
jle
test
jmp
sbb
xchg
and
es
ror
inc
test
pop
aaa
aaa
mov
imul
inc
mov
and
add
mov
pop
rcl
(bad)
pushf
cmps
aad
ja
xchg
mov
mov
pushf
jns
add
repnz
sahf
pop
cs
add
outs
retf
popa
test
add
dec
sub
sbb
mov
and
xchg
mov
mov
cmp
ds
in
shr
lahf
cmp
dec
jecxz
push
fmul
icebp
cmp
jne
repz
mov
lahf
add
mov
jnp
enter
fucomip
xchg
or
pop
or
mov
and
arpl
push
adc
push
mov
add
fcomp
mov
or
xchg
mov
les
fstp
cmp
ds
stc
jno
test
xlat
mov
mov
jno
adc
and
test
fcomip
int3
shl
test
jge
pop
ret
ret
stos
nop
cmp
(bad)
dec
xor
lock
add
lods
fild
mov
pop
iret
pop
int3
push
stos
mov
jg
push
aad
movs
pop
das
xor
push
lea
push
sub
aam
ror
jp
jecxz
arpl
sbb
in
fstp
loope
push
dec
icebp
mov
xchg
(bad)
jns
fcmovu
mov
test
inc
fwait
xchg
into
pop
ret
cmp
push
sar
aad
pusha
or
xchg
retf
mov
pop
int3
pop
shl
mov
adc
aaa
pop
jbe
fstp
cmps
out
sbb
dec
enter
rcl
scas
cld
xchg
ret
push
aaa
test
mov
imul
jg
or
ds
sbb
xchg
pop
stos
mov
jmp
sar
push
int3
mov
std
loop
jno
shl
cs
sbb
dec
mov
adc
das
xor
(bad)
std
sub
(bad)
fisub
push
movs
mov
aad
push
jmp
or
xchg
shl
gs
and
fs
lods
sub
cmp
xor
adc
inc
push
retf
lea
mov
shl
pop
daa
xchg
xchg
mov
mov
add
sbb
xor
rcl
jecxz
fcom
xchg
in
into
ja
pop
jmp
arpl
push
adc
mov
push
mov
push
loopne
xlat
dec
xlat
fnstenv
movs
dec
mov
jle
inc
leave
je
imul
xchg
xchg
cmp
test
inc
xchg
dec
test
lods
(bad)
pop
(bad)
pop
mov
push
xor
fs
cmp
sbb
push
sub
jns
test
into
jg
out
shl
call
call
arpl
pop
arpl
push
push
xchg
jecxz
test
mov
cmc
xor
test
hlt
lock
cmps
dec
aaa
retf
loop
test
jmp
into
hlt
leave
ret
cld
out
outs
call
(bad)
mov
sahf
mov
mov
xor
inc
mov
movs
or
pop
push
mov
test
add
push
sahf
jp
cmp
stos
adc
mov
push
add
out
mov
mov
xchg
movs
imul
(bad)
cmp
lods
fst
xchg
into
dec
stc
repnz
iret
jl
arpl
sti
das
icebp
dec
lea
xchg
inc
imul
pop
nop
jne
dec
xadd
sub
xchg
(bad)
mov
std
(bad)
repnz
dec
gs
rcr
sbb
in
adc
and
(bad)
push
outs
sub
cmp
cmp
and
(bad)
or
repnz
push
(bad)
ds
mov
pop
cdq
sub
push
mov
sbb
aam
push
aam
jbe
lods
lock
imul
loopne
and
neg
fimul
test
inc
fmul
fnsave
push
out
mov
retf
pusha
pop
sbb
jo
loop
add
push
mov
jge
dec
out
inc
pop
shl
hlt
add
or
pusha
sub
xchg
xchg
frstpm(287
xchg
shr
and
or
add
sub
fistp
nop
leave
mov
ds
not
pand
cmp
sub
sbb
std
dec
(bad)
lea
ds
sbb
stos
call
sub
gs
adc
fsub
shr
in
(bad)
push
jecxz
cmp
bound
inc
cmps
ror
jmp
xchg
xor
and
jno
mov
and
loopne
xor
cmps
leave
xor
add
aas
repnz
rcr
xor
scas
stos
ss
xlat
lea
cld
aam
or
xor
push
or
or
jnp
mov
out
jle
or
mov
xchg
and
je
sbb
mov
pop
mov
or
hlt
mov
ror
mov
xchg
mov
pop
jnp
mov
inc
arpl
dec
mov
cmp
and
scas
call
xor
out
mov
inc
imul
imul
lahf
lock
cwde
dec
lea
and
jecxz
(bad)
fs
test
push
out
fdivr
inc
cld
mov
push
jl
jg
es
dec
dec
lahf
fcmovu
cmc
mov
fwait
enter
xlat
push
fst
inc
leave
sbb
add
xor
outs
or
jns
mov
ret
xchg
mov
jmp
pop
mov
aad
test
jl
push
mov
mov
sahf
and
mov
cdq
mov
cli
bound
sub
mov
test
dec
mov
outs
or
pop
int3
(bad)
add
out
es
jge
add
mov
enter
xchg
mov
inc
es
shl
jbe
jb
add
scas
cmp
push
sahf
jl
adc
mov
adc
icebp
sub
pop
in
(bad)
outs
pop
mov
inc
or
call
stc
ins
mov
pop
dec
movs
sbb
mov
jo
mov
xor
sbb
es
imul
imul
jp
sub
adc
mov
jb
mov
sbb
sar
sar
mov
mov
aad
mov
dec
sub
add
pop
ficomp
push
pop
mov
mov
xor
addr16
int3
test
jge
test
repnz
mov
neg
test
inc
imul
and
retf
fs
mov
xchg
neg
inc
in
out
icebp
clc
push
ret
cdq
lods
inc
cdq
jmp
call
jl
test
rcr
xchg
push
adc
shl
test
mov
call
lock
lea
gs
or
fcom
and
xor
inc
movs
sub
dec
push
mov
pusha
add
mov
iret
ja
nop
fimul
mov
mov
mov
popa
jns
xor
pop
add
cmps
cmp
popf
push
shr
push
sti
mov
sbb
xor
xchg
into
vmovd
push
xchg
test
push
push
mov
test
imul
adc
inc
stos
push
sahf
cmp
and
iret
ffree
out
daa
adc
call
push
push
scas
cmc
xchg
sbb
push
(bad)
or
call
inc
lahf
idiv
jbe
pop
xchg
or
push
dec
xor
cli
test
jecxz
mov
pop
(bad)
mov
cmps
jge
and
(bad)
or
or
popf
int3
les
push
cs
dec
xchg
add
bound
push
sub
adc
pop
out
repz
push
in
retf
and
xchg
push
sbb
pop
rcr
and
dec
test
adc
add
xchg
repnz
jle
neg
into
test
aaa
xchg
pop
clc
call
adc
mov
in
(bad)
stc
mov
jge
mov
push
jle
ror
(bad)
sti
outs
xchg
push
mov
or
sbb
out
into
jl
cmp
in
stos
in
pusha
cs
aam
jnp
xchg
arpl
repnz
sbb
push
sbb
dec
add
mov
aas
fld
push
jae
mov
imul
lahf
add
cmc
pusha
sub
jge
call
sub
fnstcw
push
mov
mov
mov
cdq
xchg
(bad)
mov
push
jl
cmps
sub
into
in
cwde
fwait
mov
pop
jnp
adc
push
in
scas
mov
scas
pop
jg
pop
jecxz
pop
mov
sub
jle
cmps
xchg
clc
das
test
mov
push
pop
jmp
cmp
repnz
pop
test
aas
mov
mov
rol
out
cmp
pop
mov
add
xchg
pop
addr16
adc
sbb
cmp
jp
ja
bound
imul
mov
arpl
addr16
mov
repnz
into
cmp
add
mov
scas
pop
enter
cmp
(bad)
loopne
mov
loope
stos
push
aam
mov
inc
add
xchg
retf
stos
js
mov
int
add
jno
add
data16
xlat
nop
(bad)
fild
ds
int
push
sbb
or
popa
mov
sub
add
loopne
fdiv
xlat
pop
je
jmp
cld
mov
test
cmp
movs
dec
rol
pop
sub
jo
fsubrp
mov
or
cdq
or
adc
retf
fidivr
pop
adc
push
jbe
push
add
lods
push
outs
cmp
xor
fdivr
push
add
mov
pop
sbb
leave
lock
push
(bad)
sbb
add
cwde
test
repnz
retf
and
out
shl
mov
mov
jae
sub
enter
inc
ret
div
dec
enter
fidiv
pop
scas
nop
mov
cli
shl
js
in
pop
ret
fbld
inc
fisttp
shr
pop
leave
je
into
pop
pop
inc
int
mov
imul
add
dec
add
or
push
stc
fdiv
les
sub
out
ret
dec
(bad)
stos
mov
add
jl
xchg
sar
stc
push
in
ss
cwde
push
pop
mov
pusha
add
shr
xchg
stos
push
dec
pop
pusha
xor
fimul
cmp
ffree
dec
retf
outs
jmp
push
shl
mov
(bad)
jecxz
pop
lods
add
(bad)
imul
pop
loopne
aaa
jmp
inc
icebp
enter
cs
mov
pop
movs
inc
adc
mov
into
xchg
test
jne
push
ret
xor
jbe
pop
adc
mov
int
clc
hlt
add
shl
out
jl
sbb
outs
inc
push
mov
mov
xor
mov
mov
adc
pop
push
into
int
mov
cmp
neg
je
ds
mov
das
mov
or
mov
or
les
test
cmp
and
popa
cmp
cmps
add
cmp
and
fwait
ja
outs
in
mov
xlat
or
or
cmp
mov
cmp
inc
mov
sbb
lods
out
push
sbb
add
addr16
loope
lock
jns
ror
sub
cmp
lods
mov
retf
push
icebp
test
pop
push
repz
in
das
inc
addr16
mov
mov
and
pop
daa
lods
rol
xchg
movsx
lahf
fmul
fs
cmp
mov
outs
je
or
mov
jmp
and
mov
call
and
push
xor
xchg
adc
inc
(bad)
adc
test
dec
pop
pop
ret
mov
mov
inc
in
or
test
mov
add
fwait
or
push
loope
les
adc
lea
fist
push
add
add
mov
push
rcl
test
fmul
outs
cmp
pusha
add
into
mov
push
sbb
mov
pop
jge
sti
sbb
pop
mov
jb
clc
xchg
dec
or
dec
or
cmp
call
bound
bound
mov
aas
pop
fs
xchg
adc
shl
popf
sbb
out
sahf
popa
aas
fnstcw
and
or
adc
jl
xchg
pop
push
and
mov
xor
xchg
push
pop
(bad)
and
adc
mov
scas
push
inc
push
add
jbe
scas
fwait
cwde
pop
jne
mov
push
xchg
dec
arpl
cmp
test
imul
movs
mov
ds
cmp
xor
adc
mov
mov
jne
ret
or
mov
in
rol
into
js
add
and
xchg
cmps
fsub
sbb
aam
(bad)
out
push
gs
arpl
cdq
mov
mov
out
inc
jmp
repnz
mov
(bad)
in
cmovnp
sub
mov
mov
nop
lea
shl
rcr
sbb
mov
mov
jl
pushf
push
sbb
bound
xchg
fst
lahf
or
add
jp
and
vcvtps2dq
(bad)
pusha
inc
out
cmova
ret
adc
sub
mov
mov
mov
inc
rcr
mov
out
dec
aad
in
mov
sub
mov
and
pop
clc
ret
push
mov
shl
jle
sub
test
aad
jg
pop
mov
sbb
ss
push
les
imul
jno
mov
test
xor
in
adc
push
cs
rcr
jmp
movs
pop
jl
fld
xchg
xchg
dec
mov
sbb
jle
test
rcl
push
stos
sbb
pusha
nop
sbb
out
mov
jne
out
into
dec
jp
imul
in
test
call
jg
mov
aam
dec
neg
ret
mov
lds
aam
out
mov
push
push
dec
xor
add
(bad)
pop
or
jg
sub
call
jno
popf
call
mov
cmp
mov
pop
cmp
daa
aad
push
inc
pusha
cmp
repz
ja
int
es
(bad)
adc
sub
sub
fcomp
fisttp
call
dec
add
mov
mov
inc
imul
cmp
fsub
sub
imul
sub
dec
ror
call
ins
in
gs
sbb
adc
cmp
jbe
nop
stc
mov
or
outs
lea
out
inc
dec
clc
cld
retf
fst
add
inc
je
inc
mov
nop
fwait
adc
mov
mov
xchg
push
sahf
into
and
neg
mov
ret
sbb
mov
xor
scas
inc
lds
test
inc
in
mov
lock
gs
lods
dec
dec
pop
dec
dec
push
lods
lahf
addr16
clc
nop
aaa
mov
inc
dec
mov
mov
test
dec
xor
scas
stos
scas
int3
add
test
pop
xchg
cmp
in
jae
call
add
sub
push
sub
loopne
jmp
dec
push
(bad)
(bad)
(bad)
dec
xchg
cmps
popf
les
outs
leave
cmps
pop
outs
test
ins
xchg
arpl
je
stc
or
repz
out
imul
add
dec
jno
adc
jnp
mov
push
xchg
hlt
arpl
push
mov
xor
data16
shl
hlt
mov
jp
movs
dec
cs
xor
out
jo
mov
jecxz
xor
clc
(bad)
out
dec
cdq
jge
xchg
out
sub
mov
rcr
pop
sbb
enter
xor
dec
adc
or
cmp
pop
repz
icebp
outs
test
nop
add
(bad)
stos
popf
mov
sar
sub
mov
cld
jmp
mov
xor
repnz
adc
cs
arpl
xor
hlt
in
(bad)
(bad)
sbb
cmp
cmps
call
jmp
push
jbe
mov
xchg
bound
lea
call
or
jg
mov
scas
inc
adc
icebp
and
adc
gs
out
xchg
fadd
outs
jmp
xor
adc
fidiv
loop
cmps
scas
(bad)
jb
pop
jle
inc
in
out
mov
cmp
or
loope
xor
fidivr
jnp
sbb
mov
mov
and
inc
xchg
stos
add
jmp
inc
enter
movs
xor
mov
dec
and
xor
push
cwde
fdiv
mov
sub
sub
jmp
mov
jne
mov
loop
pop
int3
xchg
cmp
pop
mov
jnp
xchg
dec
cmp
nop
imul
jle
stc
repnz
retf
in
jae
(bad)
fiadd
pushf
sbb
lods
mov
or
add
pop
mov
adc
pop
(bad)
out
xor
xchg
inc
xchg
repnz
jmp
inc
movs
pop
adc
or
shl
(bad)
adc
retf
pop
xor
(bad)
jl
mov
(bad)
cmp
mov
push
push
or
xchg
jne
(bad)
fwait
mov
or
adc
pop
test
xor
imul
adc
xchg
in
jne
mov
cmp
aaa
icebp
or
lods
mov
push
dec
aad
sahf
cli
js
pop
or
mov
cli
and
out
pop
jle
mov
xor
lock
sbb
xor
fmul
jge
test
addr16
call
jb
ins
pop
mov
add
js
push
jne
sar
mov
cmp
jns
lods
hlt
aad
pushf
outs
xlat
mov
bound
sub
cmp
shl
push
cmp
cmp
sub
add
cmp
mov
xchg
mov
push
gs
outs
and
add
and
fwait
jmp
cmps
fcomi
pusha
mov
lods
mov
shr
rol
loopne
idiv
scas
push
les
ins
lea
in
mov
icebp
into
mov
out
xor
leave
or
adc
out
daa
fsubp
pop
mov
popf
rcr
shr
push
adc
ja
std
cmps
cdq
push
int3
mov
ror
sbb
pop
(bad)
push
sub
lahf
fsub
xor
mov
cld
sbb
mov
cmp
dec
adc
cmp
aaa
(bad)
pushw
int3
stos
and
jmp
test
mov
xchg
mov
cld
dec
(bad)
daa
pushf
aas
sti
jmp
push
out
daa
xor
lea
cwde
pushf
inc
inc
push
ret
push
icebp
cmp
mov
pop
lds
mov
imul
xchg
xchg
xchg
lods
int
mov
lods
les
sbb
mov
ret
pop
nop
mov
mov
lods
lds
sbb
and
pop
shl
data16
loope
je
and
mov
add
sub
push
xchg
xchg
push
mov
cmps
stc
ss
and
shr
data16
xchg
pusha
out
test
in
cmp
outs
add
popf
and
movs
rol
xchg
cmp
inc
push
mov
ds
scas
mov
and
jo
push
cmp
xchg
and
and
ror
call
and
mov
imul
mov
mov
jmp
cld
dec
xchg
mov
in
xchg
mov
mov
lods
sbb
push
(bad)
add
shl
retf
cli
push
ds
enter
call
ficom
push
mov
jne
pop
ins
push
in
push
in
xchg
inc
or
test
xor
mov
pop
out
loop
dec
xchg
loop
ret
sub
(bad)
ja
add
mov
jnp
mov
shl
int
xchg
or
sub
jmp
arpl
fcomp
clc
push
cs
pushf
push
and
int3
(bad)
mul
lock
aad
jl
repnz
inc
xlat
scas
pop
test
mov
and
sub
mov
ret
icebp
mov
fdiv
movs
push
fucomi
xor
jecxz
arpl
cmps
popa
jns
in
mov
sti
outs
fcomp
in
cs
fsubrp
into
es
sbb
add
mov
mov
bound
imul
bound
gs
neg
pop
mov
cmc
mov
pop
stos
loopne
mov
cmp
aam
out
dec
inc
popf
mov
push
jmp
xor
call
push
hlt
xor
mov
cmp
out
mov
and
fnstsw
call
into
push
sbb
out
les
inc
and
jg
xchg
xor
push
push
arpl
ja
dec
xchg
pop
dec
(bad)
scas
mov
xlat
or
clc
into
jp
je
pop
call
push
psubb
repnz
icebp
dec
ins
mov
and
mov
push
fdivr
add
dec
cli
and
add
pusha
mov
dec
jle
xchg
das
xor
ins
mov
cmc
add
dec
mov
loop
sub
pop
jp
add
xchg
mov
adc
sbb
sti
gs
sbb
imul
mov
cdq
adc
jbe
mov
mov
ror
(bad)
xor
out
cmps
pop
jmp
cmp
push
xor
sbb
push
push
dec
mov
sti
in
jbe
sub
in
scas
sbb
out
or
call
stos
adc
call
adc
adc
sub
movs
pop
lods
sub
mov
cmp
mov
or
add
pop
stos
test
test
(bad)
xchg
and
jbe
mov
cwde
fidivr
lods
mov
fcomp
add
cmc
test
mov
imul
ins
jo
leave
test
sub
les
mov
add
sar
dec
das
mov
mov
js
mov
dec
xchg
xor
and
adc
int3
scas
int
out
xchg
ss
xlat
cli
add
and
mov
dec
mov
inc
xor
mov
mov
test
xchg
gs
and
popa
imul
jae
dec
push
inc
adc
repnz
mov
or
inc
push
loop
rol
out
out
idiv
fs
retf
push
sub
out
sbb
sub
aas
fisttp
mov
mov
jecxz
ss
test
adc
push
and
fisub
cmp
and
lea
test
add
imul
scas
imul
jg
pop
ror
movs
mov
sar
jmp
daa
mov
loop
shr
fistp
mov
(bad)
jg
dec
dec
(bad)
repz
je
ins
dec
and
pop
movs
cmps
scas
in
retf
mov
add
and
push
xchg
inc
push
xchg
jae
pop
mov
sti
jl
sbb
js
clc
mov
jns
pop
pop
ins
or
jno
fcomp
mov
clc
sar
ret
mov
push
jnp
cmp
call
dec
out
jmp
push
loopne
daa
mov
in
fild
(bad)
repz
cmp
sub
icebp
xor
inc
cwde
jbe
lock
out
cmp
jnp
xor
push
lds
mov
xor
ins
add
add
(bad)
mov
and
sub
xchg
pop
mov
movs
ficom
test
les
test
in
repz
mov
inc
pop
in
pop
sahf
or
ret
inc
or
pop
jns
mov
pushf
xchg
inc
adc
test
mov
xchg
rol
cmp
(bad)
pop
loop
outs
in
loopne
ds
cmp
das
ror
jo
in
sub
and
push
aaa
pop
fwait
icebp
xor
sbb
jmp
pop
cmp
jnp
adc
push
arpl
or
test
pop
mov
cwde
fs
xchg
push
stos
sub
cmp
jns
cmp
cmc
or
xchg
stos
idiv
inc
movs
arpl
mov
lea
adc
fwait
lods
mov
dec
mov
push
mov
cmc
nop
cmps
and
loopne
cld
popf
and
push
scas
inc
pusha
pop
mov
test
mov
les
push
dec
cwde
test
outs
mov
jae
shr
imul
inc
jecxz
inc
sub
out
psubusb
adc
movs
ret
ins
loop
ror
hlt
mov
dec
daa
adc
mov
sub
push
repnz
xchg
mov
inc
adc
or
mov
ins
hlt
or
mov
ds
rol
pop
repz
enter
pop
sahf
cmp
and
xor
and
imul
jmp
or
sbb
mov
adc
mov
or
dec
push
retf
or
fs
mov
dec
sahf
aas
dec
ins
pop
imul
adc
out
pop
idiv
sbb
xor
push
xlat
iret
mov
jg
popa
jle
jbe
repnz
mov
push
cdq
sbb
dec
push
mov
lods
push
push
jns
xchg
xor
sti
mov
lods
jge
scas
pusha
or
cmc
add
int3
mov
pop
fdivr
dec
pop
std
push
mov
and
cmc
pop
jp
not
pop
call
daa
stos
fmul
in
shl
dec
mov
std
push
fcmovbe
add
test
push
mov
mov
outs
mov
cs
and
ficom
xchg
jbe
int
cld
jmp
scas
xchg
std
add
xchg
ror
mov
dec
push
mov
push
xchg
fucomip
int3
mov
sub
arpl
cmc
shl
or
sar
rol
in
and
pop
cmps
aad
xchg
out
cmc
js
cwde
cs
push
adc
fdivr
inc
stos
jnp
xchg
in
ins
arpl
push
in
cwde
push
pusha
adc
inc
outs
adc
push
push
pop
outs
sahf
popf
mov
dec
xchg
jl
mov
inc
outs
mov
jbe
pop
into
pop
mov
out
gs
mov
and
out
inc
mul
mov
xchg
jg
test
aaa
scas
ret
push
cmps
dec
mov
ins
dec
std
sahf
retf
aam
in
or
mov
sub
ror
or
es
es
inc
and
xchg
in
jl
sar
cmps
scas
mov
jmp
xor
xor
xor
dec
shr
mov
cli
sti
adc
adc
xchg
push
in
mov
stc
jecxz
mov
xor
aad
sbb
and
pop
mov
sahf
mov
stc
adc
sub
dec
cmp
sub
xchg
push
dec
adc
call
dec
cmp
cli
daa
cwde
lahf
pop
mov
or
jns
add
mov
int3
loope
inc
jl
sub
enter
and
xor
jo
mov
das
add
jbe
bnd
push
pop
or
imul
cmp
cmps
pop
and
out
pop
sbb
cmp
ja
pop
cmps
push
retf
cmp
scas
xor
adc
sahf
jns
icebp
mov
inc
mov
outs
add
cmp
out
sub
xchg
mov
xchg
imul
test
inc
inc
(bad)
and
les
daa
mov
ror
pusha
movs
sar
sub
jge
pushf
stc
ds
add
popf
add
mov
call
imul
ds
ficom
dec
sub
mov
cmps
xlat
test
inc
dec
mov
(bad)
jge
push
repz
cmp
push
jns
xor
into
mov
xor
bound
cmp
daa
adc
cld
mov
sahf
jne
adc
jp
lds
jbe
js
sub
or
mov
js
clc
(bad)
sub
imul
push
inc
aam
add
fadd
test
sahf
out
mov
fld
xor
pop
(bad)
(bad)
push
pusha
xor
mov
cmp
outs
sub
adc
popa
mov
dec
xchg
in
jmp
xchg
cmp
mov
cmp
jno
cmp
xchg
xor
scas
or
xchg
mov
push
xchg
or
jmp
mov
and
hlt
(bad)
popf
pop
mov
adc
cmc
mov
mov
retf
movsx
mov
push
push
and
int
dec
aam
sub
xchg
aaa
and
or
push
shl
pop
rcl
push
xchg
arpl
loope
aad
push
loopne
sbb
(bad)
scas
daa
jae
lea
xor
les
xor
xchg
das
daa
and
vmwrite
dec
mov
(bad)
push
cwde
pop
test
xlat
out
sbb
inc
cmp
mov
add
movs
fidivr
xchg
sbb
jecxz
cdq
mov
inc
pushf
and
xchg
xchg
je
mov
cld
mov
xchg
and
fwait
and
xchg
out
dec
adc
xor
mov
sti
lahf
or
fisubr
es
or
inc
loopne
jmp
mov
in
adc
scas
mov
daa
and
xchg
push
sub
push
push
mov
xchg
xchg
pop
mov
sbb
jbe
leave
adc
outs
pop
imul
inc
push
or
push
ret
push
mov
bnd
fisubr
inc
out
stc
int3
xchg
sti
mov
push
push
test
or
jl
aam
jb
fidiv
(bad)
out
and
mov
add
arpl
es
adc
adc
sbb
adc
and
ret
fs
xchg
sbb
sub
push
data16
jecxz
jmp
shl
scas
sub
and
retf
loop
jo
int3
and
shl
std
loope
fisubr
sbb
inc
mov
jbe
dec
fistp
inc
push
sub
mov
imul
and
sub
sub
and
imul
jb
mov
rcr
cmps
sbb
sbb
sbb
es
xor
push
pop
add
pop
pop
push
cmp
mov
sbb
xchg
xor
pop
push
dec
add
dec
fisttp
clc
push
test
movs
xchg
adc
xor
test
add
in
xchg
(bad)
mov
outs
add
fdiv
aaa
cmp
cmps
sbb
xlat
stos
xor
pop
aam
mov
loop
cmps
scas
adc
adc
cs
int3
add
(bad)
(bad)
jmp
jo
loope
dec
retf
inc
push
hlt
scas
popa
mov
mov
call
xchg
cmps
test
mov
call
xchg
daa
cmp
ins
aas
and
sbb
stos
xchg
push
xor
or
push
jns
push
jg
pop
or
arpl
shl
out
sub
add
inc
(bad)
fst
inc
push
lods
pop
xchg
pop
sbb
pop
imul
cli
out
add
leave
ja
nop
sub
out
lahf
cli
pop
int
add
inc
popa
xor
clc
dec
hlt
xchg
xchg
test
mov
aad
sar
or
icebp
pop
cmp
bound
push
or
add
fs
(bad)
sbb
xchg
jnp
sbb
movs
fisubr
leave
push
xchg
add
jle
xor
call
adc
(bad)
sbb
outs
dec
sub
nop
add
xor
test
mov
add
lea
popf
push
xlat
call
and
mov
fdivr
nop
es
out
jg
icebp
and
mov
mov
lock
into
call
inc
mov
or
into
xchg
in
out
sar
xchg
jae
ret
(bad)
jmp
mov
mov
fnstenv
xchg
sar
fmul
inc
or
jle
xchg
outs
sahf
shl
cwde
sub
push
cmps
mov
fisubr
cdq
jb
mov
test
cmps
mov
stos
add
loopne
push
lods
xchg
das
push
pushf
sub
(bad)
lock
in
lds
scas
mov
stos
push
mov
or
mov
sbb
adc
pop
popf
xor
iret
xor
dec
add
pop
movs
enter
and
addr16
aam
imul
push
sbb
xchg
dec
sub
call
push
rcl
std
retf
sub
mov
hlt
inc
je
sbb
cs
pop
clc
jns
cmp
pop
retf
mov
out
sub
shl
push
lods
mov
inc
cmp
shr
aas
sub
sbb
push
(bad)
rcr
xor
push
call
int
adc
ins
cmc
push
(bad)
daa
out
xchg
outs
inc
mov
sbb
ss
in
mov
test
std
pop
mov
lahf
daa
xchg
add
leave
addr16
xlat
jl
test
(bad)
jmp
adc
or
mov
cwde
xor
cmp
aas
fisttp
stc
push
xchg
pop
aam
xor
jp
retf
xchg
in
mov
jns
outs
sub
cmp
and
jge
lds
or
fcom
and
fmulp
into
sbb
or
or
add
pop
aam
sub
add
add
cmp
jnp
cdq
pop
adc
cmc
hlt
mov
stos
xor
jbe
bound
mov
pop
jne
mov
jecxz
push
and
and
cwde
inc
adc
or
inc
dec
das
cld
adc
test
adc
or
rcr
popf
call
jecxz
push
fisubr
mov
sbb
into
push
aas
sub
enter
inc
mov
jns
pop
mov
repz
xchg
mov
or
lock
pop
add
(bad)
or
not
shr
push
pop
add
cmp
jge
mov
aad
pop
dec
adc
ret
dec
mov
je
inc
pop
push
ret
pop
psubb
scas
mov
sbb
ja
adc
inc
adc
imul
fcmovbe
daa
mov
nop
in
nop
lock
jg
out
mov
pop
mov
loop
mov
sub
pop
cmp
test
mov
jg
aas
mov
call
outs
cmc
dec
mov
mov
mov
jmp
dec
outs
inc
loop
fucomi
test
hlt
int
xor
xor
push
push
adc
fild
in
retf
shl
imul
xchg
cmp
rcr
jno
cli
mov
add
mov
sub
pop
xlat
push
retf
(bad)
test
mov
mov
rcl
or
in
sub
loope
scas
in
sti
iret
repz
and
pop
pop
retf
sbb
rcl
(bad)
jmp
sbb
adc
(bad)
hlt
rcl
dec
sbb
in
xor
add
xchg
into
sbb
adc
ret
jb
dec
mov
xor
sub
dec
into
les
sti
sbb
and
test
shr
pop
inc
add
cmps
inc
sbb
in
loop
int
pop
mov
dec
outs
dec
stos
inc
stos
mov
adc
xor
xchg
push
sbb
es
cmp
test
push
xor
dec
and
mov
sbb
ror
mov
push
fimul
js
lock
ret
cmp
mov
inc
xchg
jmp
mov
pop
ins
mov
inc
pop
mov
cmp
stos
mov
fs
scas
call
repz
fadd
popf
addr16
fisubr
mov
scas
jecxz
push
(bad)
dec
test
or
fs
retf
pop
xchg
daa
push
popf
int3
pop
sub
popf
hlt
ror
fs
adc
lods
retf
cmp
jb
dec
lock
in
rcr
ins
lods
push
adc
jg
inc
lods
cld
mov
movs
ins
test
arpl
in
fstp
mov
imul
inc
mov
rcl
sbb
fprem1
lods
js
mov
xor
push
mov
loop
pop
add
lea
cmp
mov
fisub
cmp
jne
add
adc
mov
jle
or
jno
cs
ja
sub
repnz
pop
xchg
shr
pop
xor
or
mov
(bad)
ret
pop
xor
xchg
xor
lds
in
scas
mov
sub
je
in
js
not
sbb
test
xor
push
fstp
xchg
jns
sbb
lds
lea
icebp
adc
stos
mov
xchg
ss
or
imul
jmp
fbld
fcomp
mov
inc
scas
jmp
xchg
and
cli
mov
(bad)
cmc
add
dec
test
in
push
sub
sbb
test
add
ins
mov
rcl
mov
or
jo
push
pusha
(bad)
dec
add
add
aad
mov
cmp
fimul
sub
test
and
push
or
inc
and
(bad)
gs
mov
add
sar
push
std
jb
jmp
jle
inc
add
nop
div
(bad)
sbb
addr16
stos
shl
scas
cmp
push
xchg
(bad)
hlt
mov
lds
scas
stc
mov
cmp
inc
add
je
xchg
sahf
xchg
es
cld
in
loop
push
push
pop
ins
inc
xchg
jge
(bad)
jl
push
push
test
and
mov
cwde
jg
inc
mov
push
pop
jnp
gs
out
lahf
jbe
and
xor
dec
dec
pop
aad
das
out
aaa
lds
cld
out
sbb
pusha
mov
adc
or
sub
jb
mov
dec
test
aad
bound
xchg
add
push
pop
aaa
into
in
sbb
rcl
jl
pop
ret
sbb
clc
call
sahf
adc
sub
xchg
ins
sub
popf
fst
mov
popf
cli
jle
fcom
xchg
test
push
aas
pop
push
(bad)
out
pop
mov
cmps
cli
cwde
mov
sub
xor
hlt
lods
pop
mov
mov
movs
(bad)
xchg
lea
adc
in
push
ss
and
cmp
fisttp
inc
xchg
dec
(bad)
jmp
into
repnz
push
dec
cmp
lock
cli
sub
cmp
paddq
push
cmp
mov
sbb
mov
jno
scas
icebp
push
jno
add
out
cmps
xor
and
int3
mov
ins
ds
loopne
sti
jb
ins
fistp
mov
add
in
aam
stos
mov
scas
lds
push
call
pop
cld
stos
and
cmps
or
pushf
and
add
jo
stos
add
lea
inc
dec
iret
jae
aas
sub
cmp
loope
cmp
push
push
test
pop
or
jo
xchg
(bad)
lahf
aam
(bad)
sti
mov
sub
ffreep
rol
fisubr
nop
dec
pusha
xor
or
or
push
xor
push
dec
fisttp
dec
in
fcomp
aam
jmp
rol
adc
xchg
jne
xor
sub
inc
sub
mov
cwde
inc
inc
mov
stc
xor
inc
mov
add
mov
mov
stos
push
xchg
sar
add
dec
add
cmp
lock
ret
push
add
mov
sub
clc
pop
pop
fist
mov
and
cmp
(bad)
xor
inc
xor
inc
or
or
test
mov
sar
xor
pushf
int3
imul
inc
push
inc
sbb
jecxz
push
ror
dec
pop
aam
xchg
mov
sub
inc
std
or
add
popf
daa
bound
dec
inc
sub
cmp
push
mov
in
or
aaa
pushf
fld
mov
mov
scas
repz
add
mov
fs
imul
inc
jge
add
mov
xchg
cs
pop
xor
pop
or
mov
ja
mov
stos
ss
dec
cli
out
or
out
mov
fwait
(bad)
xchg
inc
xor
pop
jl
sub
adc
imul
icebp
mov
jo
pop
adc
call
sar
add
mov
and
leave
lock
lods
inc
jle
fsubr
stos
inc
jne
sbb
xor
inc
int3
inc
int
push
add
out
add
jp
jbe
call
cmp
cmp
adc
js
(bad)
stos
int3
(bad)
fisubr
fidivr
jge
pop
or
icebp
rcr
in
dec
int3
hlt
cwde
(bad)
(bad)
repz
mov
ja
iret
movs
arpl
imul
sbb
ja
mov
pop
pop
adc
mov
pop
call
loopne
inc
push
push
mov
mov
das
(bad)
pop
jge
call
leave
retf
xchg
cmp
aad
call
jbe
std
or
cdq
outs
pop
and
mov
rcr
popa
adc
in
loop
icebp
adc
and
mov
retf
call
pop
aam
pop
mov
loope
xchg
adc
jb
repz
fsubr
fist
adc
loope
inc
loopne
stos
jb
xor
movs
sbb
(bad)
mov
mov
mov
in
cmp
ret
jb
sbb
adc
daa
rol
jns
mov
mov
scas
in
jmp
(bad)
jb
fst
test
retf
jbe
imul
sub
pop
mov
sbb
sahf
mov
fmul
jo
call
push
pop
push
imul
lea
jo
jno
leave
mov
dec
test
jmp
xor
sti
dec
das
dec
adc
retf
cld
sar
fimul
mov
(bad)
inc
stc
mov
cwde
cmps
icebp
xchg
and
mov
mov
les
push
pop
mov
movs
inc
frstorw
rol
mov
xor
rcl
add
lods
sub
or
inc
jge
stc
push
jge
sbb
mov
inc
pop
(bad)
movs
inc
inc
es
jmp
pop
adc
sub
inc
jmp
mov
cmps
ret
push
mov
aad
adc
ror
jnp
push
push
call
mov
mov
add
sbb
push
out
les
sub
push
(bad)
cld
and
pop
push
loop
adc
int
(bad)
xchg
outs
stos
cs
pop
xchg
jle
inc
rcl
xor
jge
dec
mov
popf
push
adc
fisttp
fld
jne
and
mov
out
adc
pop
mov
pop
sar
xchg
fxch
retf
adc
es
jb
out
pop
adc
(bad)
cmp
movs
inc
(bad)
sbb
or
data16
cmp
(bad)
fild
repnz
cwde
sbb
out
bound
dec
sub
adc
sbb
jecxz
mov
push
xor
idiv
jno
mov
mov
xor
add
sahf
stc
jge
es
sub
in
mov
add
mov
and
test
push
cwde
iret
push
jmp
sahf
push
pop
retf
pop
inc
and
imul
cs
or
xchg
sbb
ss
or
das
fisub
jmp
push
xor
dec
xlat
and
inc
aam
inc
es
and
or
outs
xor
(bad)
xchg
pushf
retf
fcom
je
push
jmp
aas
sub
fadd
jmp
nop
cmps
mov
xchg
mov
inc
sbb
mov
aaa
pop
sbb
test
pop
push
(bad)
push
adc
call
adc
js
xor
xchg
loop
jae
jmp
jbe
push
adc
(bad)
fild
out
inc
push
pop
pop
cmp
inc
jmp
aaa
leave
sub
sbb
and
rep
in
loop
xchg
imul
test
push
sbb
pop
xor
movs
and
push
std
mov
test
jb
fisub
mov
(bad)
xor
fild
daa
ja
jle
gs
sub
or
mov
inc
xor
add
stos
js
pop
adc
rol
cwde
outs
sti
mov
mov
inc
mov
loope
sbb
pop
adc
inc
es
loope
mov
push
xchg
xchg
mov
sbb
mov
ret
dec
cmc
cwde
int
icebp
in
movs
dec
in
test
cmp
adc
adc
dec
lods
mov
dec
mov
sbb
aam
fbstp
fnstenv
(bad)
test
das
enter
mov
sbb
out
jo
out
fisttp
cmp
out
call
aam
or
cmps
daa
fnstsw
retf
aad
push
stos
add
(bad)
xchg
push
(bad)
movs
mov
cmp
push
fistp
data16
cmp
into
xchg
mov
sahf
mov
jmp
fs
clc
pop
sub
adc
(bad)
cs
imul
test
push
cmp
push
sbb
add
iret
and
(bad)
into
(bad)
aam
pop
cmp
in
mov
ins
pop
cmp
xchg
repz
jns
push
dec
(bad)
in
inc
add
ret
mov
scas
cmp
push
fwait
(bad)
loop
gs
jmp
mov
mov
xor
ret
stos
add
jmp
ja
sub
sbb
mov
enter
adc
cmp
movs
pop
loopne
cdq
xchg
in
or
int
sub
fnsave
pop
mov
adc
sbb
stc
cmp
xchg
mov
pop
shl
scas
dec
lods
ret
imul
neg
das
and
(bad)
data16
sbb
or
jge
in
cmp
stc
pop
enter
shr
jle
mov
cmps
aaa
inc
jb
xor
es
mov
cld
jns
add
aas
push
pand
dec
inc
mov
xchg
out
xchg
xchg
sbb
push
cmp
stc
cld
outs
lods
pop
mov
xor
cmc
and
cwde
cmp
inc
sub
mov
imul
(bad)
mov
xor
sbb
lods
inc
and
mov
lods
cmp
sbb
out
mov
jmp
ja
jmp
jle
jae
xor
and
pop
jbe
adc
jns
out
inc
in
js
mov
sub
cli
loope
mov
dec
mov
inc
sti
aas
xchg
adc
bound
xchg
or
js
lds
pop
cwde
ja
mov
pop
xchg
popf
popa
test
in
test
loope
push
fild
push
inc
cmp
aad
fdivr
push
mov
daa
sar
(bad)
and
jp
mov
rcr
test
push
push
nop
add
adc
mov
lods
adc
ss
jae
xor
loopne
bound
cld
mov
scas
mov
aam
pop
and
fmul
leave
mov
cmp
ins
jmp
jbe
sbb
je
rol
and
jle
sbb
mov
adc
add
rol
cmps
ins
pop
inc
xchg
inc
stc
push
pop
xchg
rcl
add
dec
and
inc
xor
out
mov
mov
out
add
cmp
jae
inc
dec
out
lods
mov
mov
xchg
test
mov
dec
adc
cmp
out
ret
pop
and
repz
xor
sub
adc
jmp
push
popf
sub
in
xor
ret
mov
jns
enter
pop
lods
in
aad
dec
mov
xor
popf
lea
loope
push
(bad)
push
aas
sti
mov
loop
pop
in
ins
jae
cmp
dec
xchg
(bad)
rcr
sbb
mov
or
js
xchg
je
ficom
es
inc
inc
pop
jae
sub
popf
sbb
fist
jecxz
pop
jns
ds
(bad)
cmps
mov
ins
mov
ret
inc
sar
adc
inc
ins
mov
push
jno
pop
call
mov
dec
inc
test
add
mov
adc
add
mov
out
clc
test
stos
loopne
or
and
cmp
test
call
movs
imul
ds
icebp
mov
bnd
pop
pushf
repnz
push
inc
outs
mov
add
je
cmp
fsub
cli
jge
cmps
cmps
call
xor
pop
nop
les
nop
jmp
setbe
dec
cmp
cdq
sub
rcr
jno
mov
mov
icebp
mov
sub
aad
or
out
ret
inc
pop
mov
add
dec
xor
scas
lds
sahf
sbb
imul
inc
cdq
add
adc
inc
aas
mov
sub
fst
leave
shr
sub
stos
and
cdq
fidiv
fsubr
icebp
push
stc
adc
test
fstp
setl
mov
mov
hlt
mov
mov
cmp
clc
(bad)
jl
push
fsubr
dec
aaa
call
fld
jmp
mov
stc
in
(bad)
mov
pop
gs
lea
fst
jne
mov
ins
pusha
ficom
mov
cmp
sbb
or
sub
pop
inc
cmps
fidiv
test
and
shr
cmp
or
or
pop
cmp
pop
in
jnp
push
sub
xor
retf
fstp
iret
lock
dec
call
xchg
daa
xor
fdivr
ja
jle
in
mov
imul
jmp
enter
or
mov
std
mov
push
inc
aas
ins
jle
xor
lds
xor
fistp
pushf
sbb
(bad)
(bad)
xor
scas
mov
mov
(bad)
mov
das
jp
pop
and
leave
jecxz
gs
in
icebp
loop
mov
inc
or
xor
cmc
mov
test
stos
daa
fistp
dec
add
out
data16
test
dec
leave
sbb
aaa
outs
pop
out
or
mov
mov
fist
sub
movs
(bad)
into
test
sahf
mov
mov
xor
imul
les
not
sahf
js
xchg
rcr
mov
iret
and
mov
fwait
pop
or
mov
arpl
cdq
adc
pop
(bad)
inc
scas
push
pop
jmp
std
adc
pop
imul
xchg
lock
mov
leave
cmp
fild
fild
mov
loope
retf
call
mov
popf
sub
push
pusha
repnz
fild
(bad)
and
add
mov
dec
out
in
or
(bad)
dec
outs
xor
xor
loope
or
cmp
rcr
shl
test
movs
sub
xchg
push
push
out
addr16
(bad)
dec
out
pop
shl
mov
dec
pop
inc
loopne
fxam
(bad)
aas
push
mov
or
neg
pop
push
clc
lods
xlat
mov
fimul
mov
shr
mov
or
jmp
stos
fild
aas
scas
xchg
test
mov
repz
adc
dec
and
std
out
jnp
das
fsub
dec
sub
clc
cmp
mov
shl
das
pop
add
pop
imul
bound
add
in
or
iret
push
js
stos
cmp
mov
icebp
or
shl
fwait
mov
(bad)
xor
xchg
in
leave
mov
xor
mov
retf
lahf
test
xchg
inc
test
jne
xor
test
in
dec
(bad)
cmp
mov
div
dec
neg
jmp
in
aaa
adc
inc
xchg
jg
sub
push
and
cmps
ins
sbb
jg
popa
ror
jecxz
addr16
in
jne
push
ret
jge
les
inc
call
cli
pop
jno
push
pop
pop
hlt
retf
xchg
data16
into
and
pop
add
fisttp
jae
and
out
pop
sub
mov
xchg
mov
adc
jle
mov
cld
lods
psubusb
js
imul
mov
add
cdq
jmp
mov
lock
mov
pop
jo
add
xchg
mov
out
xor
xchg
cmps
mov
daa
and
fdivr
sahf
pop
stos
(bad)
inc
jnp
dec
ins
pushf
pop
rep
xor
xor
pop
adc
into
mov
sub
sbb
sti
and
and
jp
xor
dec
ss
mov
pop
jae
lods
popf
test
adc
pushf
cld
sub
jbe
rol
test
dec
(bad)
mov
push
les
in
popf
(bad)
retf
inc
dec
retf
cmp
mov
retf
shl
jge
jbe
adc
cdq
jbe
rcl
lea
in
mov
xchg
fisttp
movs
inc
ffree
jge
lahf
aas
pop
cmp
in
ss
sbb
cmp
mov
jmp
pop
cmp
xchg
aaa
push
sahf
xchg
retf
imul
(bad)
(bad)
ret
test
adc
(bad)
je
pop
mov
and
cmp
and
jno
in
aad
sbb
xchg
push
mov
nop
push
sbb
stos
and
sbb
lock
rol
and
pushf
push
xor
hlt
out
mov
xor
test
or
push
sub
popa
repz
xor
ret
xchg
scas
pop
cmp
mov
dec
jo
jbe
and
xor
push
loop
iret
push
inc
shr
jmp
repnz
arpl
jb
int
push
shl
cmp
movs
push
retf
(bad)
repnz
rcl
and
sti
xor
jg
inc
fucomp
pop
mov
mov
xchg
adc
mov
mov
scas
sbb
stc
cmps
xor
(bad)
fldcw
add
ins
mov
jae
pop
jb
hlt
mov
xor
xchg
fs
or
or
ret
pop
cmp
inc
sub
out
mov
sub
movs
inc
imul
jno
sbb
adc
cs
inc
or
xchg
dec
pop
into
retf
jge
test
xacquire
(bad)
xchg
cmp
popa
push
clc
aaa
ret
ss
push
pop
sub
mov
jle
adc
dec
dec
mov
in
push
pop
lahf
sub
int3
push
jmp
adc
sub
in
test
adc
aaa
dec
add
es
scas
adc
bound
imul
shl
cmc
dec
sbb
cli
inc
in
add
clc
lea
sahf
xor
rcl
mov
mov
mov
push
push
retf
mov
dec
enter
(bad)
jmp
jns
das
retf
mov
or
mov
inc
pop
hlt
cdq
ret
jmp
int
call
pushf
add
(bad)
outs
pop
mov
stos
pop
retf
cmp
xchg
xor
adc
das
mov
mov
mov
pop
xor
mov
popa
outs
pop
inc
leave
and
sbb
addr16
cmps
push
sub
inc
lods
or
addr16
mov
dec
lods
cdq
in
or
int3
or
xor
imul
movs
or
xchg
and
jno
mov
sar
movs
repz
clc
sar
sbb
in
(bad)
pop
std
mov
hlt
mov
cdq
xor
ins
dec
or
adc
xchg
or
cmp
add
mov
ss
out
cvttps2pi
je
mov
jbe
or
adc
add
xchg
pop
leave
mov
add
in
jl
inc
add
jmp
mov
dec
sub
inc
(bad)
out
int3
pushf
cmc
ret
push
push
scas
and
xchg
and
aam
hlt
sub
mov
test
add
inc
sbb
push
sbb
jno
and
outs
enter
fdiv
mov
lds
outs
in
stc
in
xlat
cmp
mov
ficomp
ds
(bad)
mov
(bad)
shl
lock
dec
das
sub
shl
xor
mov
add
xchg
cli
stos
hlt
(bad)
cmc
arpl
ret
cli
cmp
jno
fdivr
and
daa
push
mov
out
sub
push
fnstenv
lods
ror
rcl
je
sub
jl
or
add
inc
fdiv
push
pop
pop
adc
cmps
cmp
adc
fwait
push
adc
stos
mov
and
in
jae
adc
adc
inc
pop
cld
or
fcom
add
mov
cmp
mov
in
into
add
dec
loop
cmp
jle
fld
std
adc
outs
out
lods
repnz
jmp
xor
sbb
repnz
aad
jge
adc
stos
inc
and
push
jbe
dec
call
and
into
adc
out
push
pop
pop
aam
sub
ss
fist
ror
ret
mov
(bad)
fcmovu
add
rcr
hlt
stos
les
pop
outs
fcompp
ficomp
fsubr
(bad)
movs
ret
fwait
sti
fcomp
cli
mov
xchg
in
mov
gs
cmp
shl
into
in
and
pop
mov
cli
cld
repnz
in
mov
adc
outs
jmp
push
cmp
mov
mov
push
fwait
mov
ins
stc
es
jmp
pop
and
in
jno
xor
in
mov
hlt
js
ror
inc
adc
arpl
pop
sub
gs
and
add
push
push
popf
adc
jbe
and
repnz
cwde
stos
and
loop
retf
push
mov
ret
arpl
xchg
sub
push
(bad)
jmp
out
jmp
cmc
enter
inc
pop
push
add
push
ss
add
popf
and
or
dec
lods
xor
mov
inc
adc
(bad)
jecxz
es
sbb
in
mov
dec
xchg
jmp
fmul
dec
mov
sub
sbb
nop
add
cmp
adc
xchg
add
and
xchg
sbb
add
dec
sub
push
loope
out
ret
fld
sahf
cmp
xchg
jnp
fld
mov
push
pop
arpl
xchg
ins
jns
xchg
or
cmp
xlat
pushf
inc
popa
and
mov
mov
jno
push
gs
push
mov
aas
not
xchg
push
push
jp
mov
pop
add
jl
loope
std
push
pop
cmp
mov
lods
cmp
inc
xor
push
daa
jb
pop
xchg
inc
gs
adc
add
xchg
add
fdiv
mov
in
cmp
(bad)
stos
sahf
pop
mov
or
inc
ret
mov
jbe
fidiv
movs
xchg
xchg
lea
les
(bad)
cmps
cmps
(bad)
(bad)
jae
xor
shr
xchg
and
xchg
je
(bad)
sti
in
aam
sbb
and
inc
in
adc
ret
mov
mov
stos
enter
data16
mov
jg
mov
or
push
outs
adc
cmp
mov
(bad)
jbe
or
scas
inc
les
mov
xor
jp
mov
dec
pop
fdivr
mov
ins
inc
aad
cmp
(bad)
jle
sbb
not
add
or
sbb
jl
xchg
xor
push
ins
repnz
sbb
sbb
pop
push
pop
sub
iret
push
ds
cmps
test
xor
outs
push
dec
pop
mov
mov
adc
rol
mov
jp
mov
xchg
mul
sbb
xchg
and
int
jns
and
pop
add
xlat
push
ds
mov
fsub
pop
sbb
jp
push
xchg
(bad)
jae
add
jmp
repnz
xor
or
mov
dec
pop
cmp
sub
retf
ret
sbb
mov
dec
daa
mov
in
mov
mov
cmc
push
addr16
mov
xchg
mov
(bad)
and
inc
adc
dec
push
das
es
adc
shl
out
jo
nop
je
lahf
inc
cmp
xchg
push
ss
push
ins
stos
aaa
in
loope
jp
pop
and
add
in
sub
xor
push
xor
push
jnp
xor
mov
cli
xor
in
pushf
jnp
lock
jl
and
les
pushf
pop
lods
leave
sub
and
and
outs
pop
inc
pop
(bad)
dec
data16
and
das
lock
ret
inc
and
sub
fist
lea
xor
div
std
enter
push
stos
push
loope
mov
xlat
stos
imul
mov
sahf
outs
rcl
pop
aaa
pop
aam
inc
ror
test
mov
mov
hlt
inc
adc
imul
das
push
mov
mov
mov
and
retf
dec
mov
push
test
fmul
xor
stc
cmps
add
sbb
nop
push
idiv
fst
xchg
xchg
add
in
cld
adc
mov
jle
cmc
jmp
add
outs
pop
fsubr
cwde
lods
cmps
add
xor
scas
mov
pop
sbb
pusha
(bad)
push
mov
jbe
mov
mov
adc
jne
(bad)
xchg
cmp
lds
sub
xchg
cmp
push
mov
aam
add
int3
enter
test
xchg
lock
(bad)
test
movs
dec
int3
xchg
loope
jg
repz
cmps
sbb
add
in
aas
call
pop
push
fist
cmc
sbb
arpl
sbb
das
gs
sbb
stc
dec
push
push
jns
cdq
jns
sub
pop
cmc
push
pop
sbb
imul
pop
retf
adc
push
mov
stos
add
inc
adc
xlat
cmp
push
pop
rol
mov
push
(bad)
mov
push
call
and
or
jmp
push
jns
and
add
inc
sbb
and
and
std
repz
mov
jbe
push
ror
mov
push
outs
div
cmp
sub
fs
outs
jmp
or
dec
aas
xchg
push
cli
xor
jne
rcl
cld
outs
pop
sbb
mov
push
cs
xchg
retf
push
dec
inc
sbb
ins
mov
pop
xchg
(bad)
(bad)
out
out
out
and
inc
sbb
dec
inc
pop
ret
dec
(bad)
push
inc
iret
pop
mov
mov
mov
mov
ds
xor
loop
cmp
es
mov
out
aam
in
add
inc
jge
add
sbb
popa
sbb
fcomi
cmp
sar
pushf
inc
mov
and
or
dec
call
push
mov
leave
in
movs
ss
lds
pop
push
dec
inc
pop
pop
and
subps
iret
inc
repz
pop
sub
pusha
mov
int
pop
add
mov
jmp
xor
mov
pop
and
jl
imul
aas
cmp
adc
jge
nop
dec
mov
adc
not
mov
dec
jb
jnp
push
xor
inc
or
jmp
push
or
movhps
mov
pushf
fadd
leave
dec
inc
pop
rcl
add
das
retf
pop
xor
jmp
jno
call
ja
cdq
pusha
inc
ins
mov
push
sub
xchg
es
dec
mov
add
movs
hlt
loopne
movs
pop
mov
mov
push
adc
sti
psubw
js
rol
aas
(bad)
loop
pop
sbb
push
dec
and
mov
push
xor
dec
xor
inc
mov
aad
cs
in
push
and
lock
cdq
int3
cmp
cvtps2pd
daa
mov
xchg
mov
cmc
sub
enter
sbb
xchg
daa
sub
fmul
jecxz
mov
repz
or
ins
lds
xchg
arpl
cmp
rcl
outs
(bad)
out
(bad)
inc
add
mov
imul
int3
and
daa
lods
cwde
fwait
(bad)
repz
in
sub
xor
(bad)
std
arpl
(bad)
iret
dec
or
push
mov
cmc
call
std
rcl
ficomp
pop
out
outs
stos
out
jmp
daa
dec
mov
(bad)
push
jecxz
dec
dec
xor
sub
pop
cwde
ss
mov
add
cmps
mov
sub
stos
mov
iret
adc
mov
sbb
mov
das
mov
jmp
xor
push
imul
jo
push
lods
sbb
cmp
test
cmp
and
cmp
push
outs
in
ficom
hlt
(bad)
mov
jmp
jnp
je
mov
pusha
movs
test
pop
daa
lock
sub
icebp
jl
jnp
mov
mov
lahf
dec
fwait
xchg
rol
jae
pop
fwait
inc
push
mov
dec
out
or
mov
push
and
fisubr
mov
sbb
stos
in
dec
out
pop
adc
(bad)
sbb
stc
rol
and
lahf
cdq
jmp
mov
aam
scas
scas
mov
arpl
inc
pop
std
dec
movs
shr
xchg
shl
loopne
cmps
mov
push
ins
sub
mov
loopne
retf
mov
jle
pop
stos
mov
jecxz
mov
mov
cmp
cmp
dec
ret
cs
mov
aaa
fimul
jnp
repnz
mov
sub
jge
js
je
(bad)
test
lea
hlt
dec
xor
inc
leave
out
inc
fsubr
push
jae
lahf
lods
sar
mov
sbb
xchg
mov
sbb
lock
mov
(bad)
jmp
fldenv
xchg
shl
or
dec
xor
inc
sbb
or
stos
dec
retf
(bad)
lahf
sub
ret
xlat
pushf
test
jns
fs
int
push
inc
dec
add
int3
cmp
push
pop
pushf
aaa
jnp
adc
inc
in
push
and
jge
enter
xchg
loope
and
pushf
fisttp
leave
xchg
xchg
inc
repnz
test
clc
or
das
xor
or
push
aad
dec
rcr
(bad)
das
(bad)
mov
cmp
jbe
icebp
cmps
(bad)
aaa
sti
mov
into
pop
jmp
mov
inc
imul
stos
rcl
xor
js
dec
lea
dec
out
xchg
(bad)
repnz
dec
add
pop
mov
sub
sbb
add
loop
or
jle
mov
pop
(bad)
jno
(bad)
xchg
ret
push
dec
xor
mov
imul
shl
out
pop
and
sub
dec
test
fistp
jg
cmc
jecxz
mov
fs
ja
rol
push
arpl
add
jmp
nop
loop
inc
test
mov
sahf
pop
add
test
cmp
sbb
out
sub
push
pop
mov
push
sbb
add
leave
push
xor
aam
pop
movs
loopne
es
fisub
sbb
xlat
out
cmp
adc
out
mov
xor
jle
nop
mov
mov
mov
loop
cmps
shl
xor
nop
aad
lods
xchg
add
adc
fstp
into
retf
sbb
in
push
inc
mov
lods
in
mov
push
ret
sub
mov
dec
in
mov
ja
sub
cmp
stc
cmp
jl
out
inc
(bad)
sbb
(bad)
push
das
gs
out
rol
mov
repnz
das
cdq
mov
je
add
sbb
enter
mov
repnz
jno
test
xchg
div
lock
sbb
(bad)
sbb
out
cdq
push
xchg
mov
jbe
loope
or
adc
push
loop
jge
push
xchg
sbb
or
xchg
add
shl
loop
out
out
and
sbb
jae
scas
push
xor
fwait
cmp
mov
adc
cwde
jecxz
jnp
out
arpl
imul
mov
cmp
fisubr
aad
aaa
aas
xor
loope
mov
and
push
push
xor
mov
leave
mov
mov
cmp
xor
int3
sbb
mov
adc
or
ja
dec
fist
stos
xchg
inc
or
mov
jmp
enter
movs
mov
je
sub
inc
test
and
fidivr
xchg
loop
scas
adc
dec
ins
adc
push
aaa
loopne
pop
daa
js
jp
xchg
bound
aam
ror
and
(bad)
xchg
jge
imul
cmp
test
sbb
cmp
stc
sub
xchg
fsubr
inc
lds
fs
iret
add
pushf
scas
jl
adc
pop
jb
and
out
pushf
cmp
repnz
pop
adc
lods
dec
ins
pop
push
adc
into
lea
push
pop
mov
into
mov
in
sub
mov
add
jmp
dec
(bad)
adc
adc
ret
xor
xchg
ret
fs
push
push
sub
lea
or
xchg
sub
jecxz
pushf
ins
fld
pop
pop
test
rcr
sti
js
outs
imul
popf
jns
jmp
xchg
lock
mov
jo
mov
fwait
xchg
leave
jo
mov
jge
(bad)
bound
xor
(bad)
and
xchg
imul
fmul
dec
aaa
nop
out
push
sbb
stc
inc
hlt
shl
cmp
aaa
enter
mov
cld
loopne
jmp
jb
mov
jp
add
aas
mov
adc
icebp
(bad)
jp
rcl
jno
mov
(bad)
aam
add
cmp
adc
xchg
div
jmp
ins
mov
(bad)
cmp
mov
add
jge
inc
shrd
pop
push
(bad)
mov
cmps
mov
out
sti
xor
jne
fidiv
or
aas
popf
loope
cmp
cmp
inc
adc
rcr
mov
test
mov
xchg
mov
(bad)
movs
xor
cmp
popf
or
pop
mov
popf
sbb
jns
mov
mov
mul
test
pop
stc
mov
in
add
iret
xor
(bad)
xchg
(bad)
xor
jmp
inc
test
fwait
(bad)
jmp
loop
push
cmp
push
lea
push
lods
ss
mov
inc
scas
push
cli
mov
js
sbb
pop
sbb
inc
movs
mov
outs
adc
dec
call
lods
mov
cmps
push
fild
cld
(bad)
cdq
xchg
push
fs
pop
out
and
rol
call
imul
mov
lods
xchg
iret
jecxz
jo
xchg
gs
(bad)
rol
pop
cwde
test
ins
stos
mov
ror
fwait
in
loop
fmul
or
mov
jle
(bad)
dec
in
cmp
add
cmps
les
jle
mov
scas
in
add
mov
add
outs
clc
pop
retf
call
mov
aam
xchg
or
bound
pusha
loop
in
mov
push
ja
leave
imul
mov
and
push
mov
(bad)
push
jg
sub
aaa
bound
mov
mov
push
and
sbb
push
stos
mov
es
and
stos
or
loope
jge
bswap
aas
xor
sti
jno
popa
mov
popa
repnz
jbe
arpl
out
push
sbb
jno
jle
cmps
loopne
jno
sbb
dec
icebp
sub
call
inc
add
call
mov
pop
inc
retf
mov
dec
in
or
sti
fcmovbe
jmp
fld
sbb
cdq
mov
retf
inc
pop
push
push
scas
in
jnp
push
push
loop
ds
xchg
add
int3
xchg
adc
loopne
push
inc
sahf
sbb
repz
cmps
nop
sub
rcr
cmp
or
add
jne
adc
fcomp
popa
mov
xchg
(bad)
icebp
repz
adc
shl
or
sbb
inc
inc
or
push
cmp
out
sbb
mov
dec
mov
push
add
sub
jmp
mov
ss
pop
adc
add
pop
jle
xchg
pcmpeqb
sar
rcr
icebp
xlat
mov
mov
mov
clc
adc
dec
stos
pop
jge
mov
inc
jecxz
jp
inc
fnsave
aam
pop
mov
xor
or
adc
mov
mov
cmp
pop
jmp
daa
push
mov
aas
retf
scas
sahf
inc
outs
cmp
jo
rol
pop
jge
mov
out
cmp
xchg
inc
ins
xlat
mov
xchg
mov
pop
pop
ret
xchg
int
sar
or
cmp
push
mov
or
aaa
cdq
iret
es
xchg
cwde
jnp
adc
mov
xlat
into
ret
xor
pop
in
or
imul
adc
dec
mov
cmp
sub
fidivr
push
sub
dec
mov
in
imul
jge
add
fs
dec
sbb
test
xchg
pop
mov
ret
dec
or
test
xchg
pop
(bad)
mov
(bad)
in
jl
test
test
and
lea
push
imul
sub
rcl
ret
mov
adc
adc
pop
mov
icebp
out
xor
mov
push
les
push
cmp
push
out
frstor
adc
sub
pop
sub
std
fucomip
xchg
xchg
out
and
inc
mov
cmp
fsubr
sub
mov
(bad)
(bad)
jno
dec
lock
sbb
(bad)
scas
cmp
push
xchg
icebp
imul
xlat
push
retf
shl
xor
jmp
push
inc
inc
test
fdiv
pop
dec
rcr
jmp
jne
jb
test
or
and
cmp
test
xor
jo
lea
xchg
dec
pop
pushf
push
and
mov
in
leave
xchg
fs
push
dec
xchg
fsub
neg
jmp
call
daa
mov
aas
or
xor
aaa
repnz
inc
ja
inc
push
push
add
dec
mov
mov
or
xchg
(bad)
jecxz
loope
jns
pushf
xchg
push
mov
sub
mov
cmp
inc
in
int
aaa
sbb
fldenv
ret
push
sub
iret
jp
jg
test
mov
or
jp
jno
push
hlt
jne
jnp
imul
mov
xchg
movs
mov
jno
call
int
jns
xlat
cmp
aaa
xor
lock
iret
and
arpl
and
aad
mov
loopne
xchg
in
dec
and
mov
mov
pop
popf
xchg
mov
mov
inc
ss
leave
in
rcl
mov
or
loopne
pop
leave
(bad)
ds
sub
popf
mov
scas
xor
push
inc
sahf
add
adc
pushf
or
enter
mov
mov
mov
add
jns
stos
shr
sub
shl
add
adc
sub
scas
xor
retf
stc
and
vcvtsi2ss
jl
retf
mov
inc
cmps
int3
mov
dec
pop
std
xchg
xlat
int3
jns
lods
sbb
mov
mov
test
clc
sub
scas
outs
mov
jg
lock
fxch
sub
mov
add
inc
(bad)
or
test
jne
(bad)
iret
pop
(bad)
dec
pushf
sub
cmps
pop
loop
mov
mov
loopne
push
sahf
fcomp
mov
or
(bad)
shr
jl
cmp
test
xor
cs
(bad)
scas
inc
jno
cmp
movs
pop
pop
sub
(bad)
mov
cdq
mov
ins
test
add
pop
dec
jmp
xchg
xor
sbb
add
xchg
inc
push
test
push
mov
adc
mov
retf
shr
loop
sub
push
mov
int
cmps
dec
mov
sets
xor
pop
int
adc
sub
mov
movs
out
lods
inc
sbb
cmps
test
pop
jnp
xchg
out
fcom
jg
imul
pop
fadd
stc
jne
xor
mov
inc
mov
adc
mov
xchg
inc
jns
jb
(bad)
loopne
ss
sar
retf
gs
mov
pop
xchg
imul
inc
adc
enter
push
sar
xor
adc
ins
popa
stc
ins
xor
movs
pop
sub
jmp
mov
xchg
inc
(bad)
dec
js
(bad)
and
pop
ins
and
mov
adc
cmp
dec
mov
je
(bad)
jecxz
inc
cmps
cmc
aas
jge
fcmovne
add
push
and
shr
pop
test
mov
mov
in
lods
lods
jecxz
add
cmp
mov
push
scas
jo
rcr
jg
pop
mov
jp
jae
sub
xlat
cmp
aam
or
and
and
dec
vcvttpd2dq
adc
cld
xor
xor
push
jmp
inc
gs
lods
jge
int
adc
retf
or
mov
or
es
lgs
ja
cmc
sar
dec
jle
(bad)
xchg
xchg
pop
push
ss
inc
jg
cmp
mov
(bad)
dec
mov
rol
push
jecxz
pop
loope
mov
fisttp
ror
xor
scas
push
pop
cmp
lea
ds
les
aaa
jnp
xchg
daa
rcl
test
pop
lods
and
cmp
mov
aam
sahf
mov
pop
es
xor
cmp
icebp
mov
rcl
sbb
inc
cmp
faddp
mov
push
aad
test
arpl
or
and
std
xchg
jl
xchg
jge
out
sub
cmc
xchg
test
push
in
cmps
inc
aaa
les
div
jl
(bad)
in
jmp
jno
cmps
fs
inc
test
mov
scas
adc
sbb
je
inc
add
out
and
in
fcomp
dec
mov
ins
pop
dec
ins
push
xchg
std
jbe
mov
push
cmp
rcl
stc
dec
pop
sahf
mov
sub
fisubr
xchg
inc
mov
add
xchg
ret
fdivr
les
mov
inc
stos
nop
les
dec
jge
std
ds
add
jo
push
fnstcw
adc
push
dec
xlat
dec
sbb
pusha
mov
xlat
push
sub
mov
cmp
in
push
push
jmp
mov
jb
sbb
lahf
xchg
adc
xchg
push
xlat
dec
lds
sbb
mov
inc
push
xor
jno
test
sub
aad
int3
idiv
stos
jbe
stos
and
ret
ret
int3
fcmovnbe
cmp
mov
add
int
dec
(bad)
mov
and
pop
cmps
jno
popf
jb
pop
cmp
loopne
sub
or
(bad)
ficom
hlt
cmps
or
lahf
xchg
js
aam
cmps
das
sbb
dec
scas
inc
std
adc
and
sbb
ja
adc
xchg
repz
or
inc
loope
(bad)
jmp
lods
inc
retf
dec
js
add
outs
dec
iret
sbb
pop
or
xlat
fs
inc
scas
movs
xor
addr16
pop
xchg
ret
mov
test
es
shl
xchg
mov
in
jp
bound
inc
stc
inc
mov
jno
je
pop
push
mov
or
es
fcom
jmp
xor
outs
inc
dec
sbb
mov
or
stc
std
pop
inc
sub
mov
or
shr
sbb
mov
cmc
ret
arpl
popf
(bad)
jmp
mov
or
or
mov
jmp
adc
and
xchg
out
jl
dec
sbb
ret
pusha
loop
cmps
mov
and
push
test
cmp
or
and
cmp
(bad)
sti
cmp
dec
sub
jae
sub
repz
or
push
pop
dec
es
retf
retf
sbb
in
(bad)
cmps
jl
lock
popf
pop
pop
xchg
xor
(bad)
jns
popf
push
jecxz
dec
mov
cmps
sub
jns
xchg
sti
mov
fcomp
sub
cld
fs
mov
lods
scas
mov
stos
and
scas
sbb
out
or
lods
aaa
dec
xchg
enter
adc
xor
aas
jmp
xchg
jbe
xchg
xor
cld
add
xchg
push
push
add
(bad)
into
push
cs
push
sbb
sub
cmovo
cmp
and
sub
idiv
retf
aam
or
test
aas
ror
mov
in
dec
adc
mov
test
sub
cmp
push
xchg
adc
mov
jmp
add
shr
lock
pop
dec
mov
sbb
ror
call
data16
loope
pop
xor
loope
mov
ss
sbb
adc
and
dec
mov
jns
ret
jg
sbb
xchg
loope
scas
pushf
sahf
sbb
adc
movs
mov
push
xor
mov
cmp
(bad)
add
or
xor
not
aad
popa
add
cmp
jne
pusha
imul
into
mov
mov
ss
ss
jle
rcl
xchg
idiv
ret
(bad)
xchg
out
cmp
and
jmp
add
int
cmp
push
pop
adc
cmp
push
retf
or
call
rcr
mov
scas
and
xor
cdq
pop
cmp
or
cmp
out
data16
push
int
jp
(bad)
loop
ror
not
cmps
gs
clc
jmp
das
pop
jle
push
jmp
test
inc
mov
sahf
adc
adc
and
mov
or
pop
push
jmp
pop
jb
bnd
jmp
dec
mov
(bad)
cmps
mov
sub
out
jne
cmp
pop
mov
adc
into
and
or
popf
dec
push
(bad)
jge
lods
mov
pop
sbb
test
(bad)
std
or
sub
add
xor
shl
pop
stos
dec
sub
repnz
and
xor
je
mov
dec
loopne
aad
mov
push
sti
aam
call
mov
int3
mov
dec
adc
test
jp
int
mov
lds
pop
test
jmp
retf
(bad)
pop
aam
xor
loop
fsubp
inc
xor
lock
out
sub
cmc
je
dec
arpl
xor
jb
(bad)
jnp
stos
cwde
sbb
adc
in
daa
push
movs
addr16
std
jg
mov
dec
pop
int
jl
(bad)
and
pop
rcr
inc
pop
fbld
movs
jle
(bad)
mov
shl
xchg
sbb
xchg
cld
fbld
shl
adc
fld
fistp
mov
and
add
ja
mov
mov
xor
outs
mov
in
adc
(bad)
(bad)
push
into
dec
test
mov
mov
pop
(bad)
and
cmp
std
and
xchg
lods
sbb
dec
gs
pop
(bad)
pop
inc
dec
lea
fld
jo
rcr
jnp
in
stos
cmp
cmps
aas
and
inc
cmp
lods
aad
dec
mov
mov
jo
mov
mov
push
sahf
nop
mov
mov
retf
xor
push
jle
mov
pop
adc
inc
sbb
xor
jb
outs
jbe
cmps
out
dec
inc
mov
test
add
stos
jg
add
cwde
mov
retf
out
mov
into
jmp
repz
mov
sub
dec
into
pushf
call
imul
lods
pusha
in
stos
mov
popf
mov
xchg
add
sbb
test
push
(bad)
fwait
xchg
xor
repz
dec
ins
mov
mov
cwde
sbb
or
data16
mov
cmp
push
out
(bad)
std
add
cs
sbb
loopne
outs
cwde
xchg
popf
jno
test
pop
jo
mov
inc
fsubr
push
imul
jecxz
fstp
xor
push
ja
fwait
xchg
daa
pop
aaa
mov
xchg
adc
ret
shr
mov
cdq
inc
dec
test
xor
pop
jmp
inc
stc
jge
call
lods
push
fild
icebp
fcmovb
sub
ret
mov
or
sbb
ins
jmp
inc
sbb
das
iret
mov
sar
fwait
das
dec
or
pushf
lea
dec
out
packsswb
lock
mov
jne
pop
cli
mov
(bad)
adc
lds
sbb
cdq
lock
cmc
ss
out
cld
nop
add
xor
shr
adc
ins
mov
sbb
mov
js
mov
or
mov
xchg
sti
mov
in
sub
push
add
inc
or
push
jmp
loope
mov
sar
add
pop
cmp
fistp
fld
ret
cmp
(bad)
xor
fadd
xchg
js
push
sbb
sti
add
dec
(bad)
cmp
jl
jmp
sbb
sbb
xor
mov
or
xor
stos
shr
das
push
cdq
jbe
mov
push
push
outs
push
stos
movs
mov
enter
mov
sub
cmp
cmp
pop
pop
add
shl
mov
stc
sbb
pop
inc
or
test
add
adc
xlat
rcr
jmp
bound
and
xchg
mov
cli
xchg
shr
ins
push
or
mov
imul
adc
or
(bad)
sahf
dec
xor
push
iret
add
out
pop
xor
(bad)
fidiv
mov
sub
ds
nop
rol
iret
mov
inc
mov
cmp
arpl
sub
test
test
add
pop
sub
sub
mov
ins
mov
cdq
out
fist
mov
leave
ja
(bad)
bound
pop
cmp
push
popf
lahf
cld
rol
imul
xchg
xor
rdmsr
cmp
sbb
daa
lds
cwd
mov
cld
and
sub
xchg
stos
or
call
pop
aaa
sahf
dec
cwde
mov
add
inc
sti
bnd
jnp
out
test
and
mov
lea
jbe
movs
das
jns
mov
cmp
gs
jmp
xor
cmps
addr16
js
cmps
pop
sub
push
mov
push
dec
pop
les
jno
stc
mov
outs
lods
aad
mov
mov
hlt
adc
jmp
adc
mov
sbb
cmp
mov
push
mov
hlt
sub
pop
lods
(bad)
jnp
inc
iret
xchg
xchg
cld
retf
cmp
sti
imul
popf
mov
pop
xchg
pop
jecxz
inc
into
inc
(bad)
push
pop
xchg
test
add
push
inc
mov
in
mov
pop
jne
xor
mov
iret
iret
stos
fsubr
push
hlt
push
pop
adc
fild
or
adc
das
test
adc
ficomp
mov
mov
sbb
or
repnz
ins
ja
or
add
pushf
dec
(bad)
and
(bad)
cmc
cmp
aad
xor
popa
xchg
pop
inc
call
and
aad
mov
(bad)
stc
inc
push
lahf
fcmovne
push
mov
xor
movs
jecxz
nop
sub
pushf
or
shl
jbe
inc
push
mov
pop
adc
sahf
push
ficom
cmp
clc
lahf
add
fld
add
in
dec
fisub
inc
adc
xor
xchg
cmps
out
cmp
and
adc
jmp
jns
pop
xchg
int
xor
lods
iret
xchg
leave
push
lock
data16
pusha
call
sbb
lock
jbe
mov
lahf
dec
sbb
mov
inc
ret
adc
dec
scas
or
pop
adc
test
stc
xor
mov
inc
in
imul
add
jl
xor
add
into
cld
pusha
in
xchg
cmp
aad
mov
ins
jae
cmps
xchg
mov
fs
repnz
pop
sub
dec
fwait
fwait
mov
out
pop
cmc
repnz
xlat
jge
mov
push
push
sub
fsub
test
pop
(bad)
pop
ins
call
dec
adc
div
adc
imul
pop
xchg
sbb
sahf
cld
data16
sub
jbe
daa
aas
jnp
or
sbb
mov
aaa
iret
dec
ins
xchg
push
xor
popa
jge
jae
xchg
cmp
mov
xchg
ja
push
mov
or
or
pop
into
xor
add
xchg
pop
daa
dec
or
jo
mov
icebp
outs
loop
xchg
sub
sub
push
or
cmps
pop
fidivr
cmp
sub
push
into
xor
in
and
pop
(bad)
in
xor
cld
mov
mov
mov
push
or
inc
(bad)
sbb
data16
scas
in
cmp
leave
dec
add
sbb
xor
dec
cmc
push
inc
adc
les
retf
stc
nop
jge
sbb
lods
sbb
retf
ror
add
jae
(bad)
or
push
popa
lods
mov
das
jmp
mov
imul
sti
daa
jecxz
sti
jge
inc
shl
out
gs
cmc
push
cmp
xchg
sahf
sahf
pop
test
popa
add
(bad)
mov
ror
add
or
pop
in
fidiv
movs
add
mov
jmp
and
ins
or
and
nop
lahf
test
movs
in
jecxz
ret
or
mov
and
fbld
xor
pmulhw
ins
mov
push
mov
movs
jmp
test
scas
pop
call
(bad)
rol
xchg
into
aaa
icebp
mov
aaa
cwde
(bad)
cmc
les
pop
scas
je
dec
repz
cs
or
sbb
dec
mov
jle
ret
test
add
pop
add
sub
cld
lock
sbb
xlat
out
in
js
mov
fcmovbe
mov
jns
popf
shr
adc
mov
(bad)
jecxz
mov
cmps
jmp
scas
and
mov
pop
xchg
call
inc
jbe
call
(bad)
push
das
cdq
test
idiv
mov
push
jo
cmps
aam
mov
jb
cmp
xchg
fistp
hlt
addr16
mul
dec
sub
push
and
mov
and
lock
std
mov
mov
cmc
setnp
out
pop
jl
cld
in
arpl
clts
jmp
jge
jle
fild
call
pop
xor
jbe
rol
cmp
inc
dec
jne
jl
mov
mov
or
es
pop
or
push
(bad)
pop
push
ins
add
mov
ss
dec
sbb
sti
push
and
sub
jmp
outs
out
mov
push
mov
dec
cld
cmp
xchg
pop
xchg
and
cli
xchg
pop
dec
retf
push
(bad)
cld
ds
ficomp
test
out
mov
xor
aaa
in
or
in
cld
mov
sub
mov
in
lods
mov
gs
js
in
dec
stc
jno
sub
or
maxps
stos
dec
jo
mov
sub
xchg
stos
jae
hlt
loope
scas
or
cdq
aam
add
pop
jmp
fwait
push
addr16
inc
out
fisttp
fisttp
pop
fwait
push
push
sub
sbb
jnp
inc
jno
mov
adc
gs
jle
test
outs
dec
test
push
jo
inc
out
pop
pusha
das
imul
cmp
inc
out
xchg
pushf
dec
rcl
movs
jle
mov
mov
(bad)
loope
cld
add
int3
jb
stc
sub
mov
cwde
add
mov
shl
int3
mov
addr16
xlat
or
jns
cwde
add
idiv
stos
es
je
mov
adc
out
xor
mov
popa
jns
lds
call
pop
jb
push
xchg
ret
(bad)
jecxz
mov
outs
rcr
push
stos
(bad)
dec
arpl
daa
xor
push
shr
mov
inc
addr16
jecxz
mov
inc
dec
jne
jecxz
movs
fistp
jecxz
repz
cmp
xchg
jns
imul
pop
push
and
aam
sbb
inc
push
xchg
mov
fwait
xlat
pop
and
mov
jb
in
mov
cmp
stos
out
sub
fbld
test
or
jge
inc
pop
daa
leave
cmp
push
xor
xor
add
push
out
js
jmp
mov
pop
mov
dec
in
outs
mov
das
push
lods
dec
adc
out
adc
sbb
dec
ins
and
(bad)
push
(bad)
jle
mov
stos
fsubr
mov
jge
loop
mov
stc
mov
daa
fs
ds
cmp
pop
adc
retf
push
fcomi
jns
or
jo
xor
fwait
in
out
iret
jae
dec
or
test
and
std
in
cli
lods
or
sub
in
xor
vminps
xor
jb
mov
loop
adc
mov
sbb
push
mov
sbb
push
xchg
popf
cmp
movs
(bad)
fistp
in
push
mov
rcr
clc
and
jae
ins
scas
xchg
ja
pop
inc
(bad)
jmp
push
div
cmp
xchg
inc
nop
sbb
dec
xchg
retf
sub
dec
dec
retf
cdq
cmps
ins
(bad)
sar
lods
test
div
xor
dec
(bad)
cli
or
inc
jl
nop
inc
pop
push
inc
rcl
push
push
add
dec
cmc
or
retf
pop
mov
imul
fmul
cmps
scas
addr16
daa
cmps
loopne
inc
jl
jle
retf
jns
add
ret
bt
in
mov
mov
xor
mov
dec
and
in
jmp
jo
sub
inc
add
dec
jne
clc
push
shl
rcr
push
cwde
jl
(bad)
mov
jg
repz
xchg
cmp
sbb
aad
mov
mov
ss
dec
enter
lahf
into
stos
xlat
inc
(bad)
sub
ds
jno
stc
jmp
mov
fld
or
dec
rcl
aaa
inc
and
in
lock
fistp
test
inc
cmps
push
hlt
sub
push
cmp
push
scas
and
in
push
in
lock
leave
cmp
and
retf
and
xor
je
inc
mov
and
mov
xor
and
mov
retf
cmp
pop
popa
fs
rol
push
push
ins
gs
sub
push
(bad)
in
sbb
call
call
pop
lock
or
cs
scas
lods
rcr
xor
jl
cmp
sti
scas
pop
loope
xor
inc
inc
pop
dec
or
cli
cwde
pop
and
test
fdivr
aad
jle
mov
pop
dec
ret
xchg
mov
iret
mov
call
dec
or
pop
jbe
int
inc
xor
fist
int3
fisubr
dec
sub
rcr
pop
aad
push
push
lods
out
lds
mov
mov
pop
adc
xor
inc
cmp
fwait
inc
and
icebp
cmps
js
ja
push
imul
sbb
xor
movs
sbb
pop
inc
pushf
or
jbe
sub
mov
ret
jmp
and
pop
cmp
sahf
inc
movs
xor
(bad)
pop
out
out
mov
push
jl
aad
lods
and
bound
stos
sbb
pushf
repz
xor
repnz
cmp
sbb
sbb
xchg
pop
shl
mov
xor
mov
lods
cld
retf
cmp
test
mov
leave
fistp
xor
repz
ret
out
arpl
xor
ja
sub
rcr
pop
jle
loopne
or
sub
pop
mov
mov
push
pushf
mov
pop
call
rcr
push
mov
es
cld
cmp
dec
xor
sbb
mov
add
out
sub
out
call
push
adc
sbb
and
sub
scas
stos
daa
pop
xchg
sahf
jno
cwde
int
repnz
ret
shr
and
or
call
out
push
sbb
pop
addr16
xor
push
jno
inc
cmp
lock
sti
push
dec
add
sbb
nop
(bad)
imul
retf
movs
pusha
inc
mov
imul
stos
out
mov
mov
iret
hlt
jne
mov
push
pop
iret
add
sti
jns
xchg
not
imul
add
in
retf
mov
add
pop
call
out
fxch
sbb
pusha
shl
mov
mov
lods
neg
xor
inc
cmp
call
add
aaa
shl
fsub
xor
fnsave
in
cs
adc
cdq
and
add
and
fimul
xchg
daa
arpl
leave
mov
mov
sbb
push
stos
and
jmp
cmps
in
call
pop
xor
rol
mov
sti
scas
sbb
xchg
repnz
mov
scas
ret
pop
jge
jo
lock
push
mov
sub
sub
or
test
adc
cwde
dec
jmp
xchg
jg
in
movs
xor
repnz
call
and
xchg
push
in
dec
test
in
cmps
repz
cmps
ja
xor
(bad)
jg
gs
dec
cli
mov
adc
imul
cmp
jmp
movs
adc
leave
jne
out
cwde
jae
outs
jb
mov
mov
in
jmp
mov
repz
stos
out
sbb
and
aas
jl
stc
adc
(bad)
cwde
mov
mov
sbb
dec
jmp
imul
mov
js
ins
adc
loopne
clc
lea
add
adc
repnz
int
or
sbb
pop
(bad)
fsub
test
fistp
iret
mov
xchg
dec
mov
je
fwait
sub
js
xor
out
inc
jno
movs
pop
xor
mov
push
movs
in
add
dec
xchg
xor
push
cmp
push
pop
loopne
dec
pop
test
sbb
xchg
inc
movs
adc
mov
dec
mov
sub
mov
inc
xor
div
mov
sub
adc
js
pop
jno
jns
stos
fs
loope
adc
push
add
iret
push
xor
scas
scas
dec
dec
or
sti
ins
(bad)
(bad)
mov
out
sbb
or
sub
jmp
jmp
jno
icebp
add
pop
adc
out
push
cmp
and
in
inc
int
jne
pushf
stos
pop
(bad)
xor
fstp
(bad)
in
mov
jnp
jl
sar
ins
adc
rol
retf
leave
in
pusha
arpl
(bad)
xor
xor
mov
ss
(bad)
xor
rol
jge
xchg
aad
cmc
aas
cld
outs
int3
(bad)
test
xchg
ins
or
mov
dec
fcmovu
loop
adc
repnz
fcomp
rcr
dec
gs
add
ret
loop
cmp
adc
gs
inc
mov
outs
pop
pop
mov
out
xor
push
mov
jg
ret
ret
fsub
mov
(bad)
cdq
std
sub
xlat
pop
mov
in
fisttp
retf
mov
loopne
ja
adc
stc
das
test
sub
fld
test
(bad)
push
call
or
cmp
sar
pop
adc
call
ror
adc
popa
shl
loopne
xchg
out
pop
daa
or
cmp
inc
in
jp
ds
inc
loopne
xchg
push
inc
and
cmc
jle
dec
daa
cwde
jmp
jae
cmp
inc
mov
mov
xchg
test
mov
aam
mov
or
inc
(bad)
push
inc
outs
mov
mov
mov
call
and
lahf
je
test
fs
push
(bad)
ror
pop
push
sub
add
cmp
imul
add
xor
mov
popa
pop
loope
sbb
sbb
cli
hlt
push
xchg
(bad)
aas
xor
jmp
aas
push
loope
test
dec
cmp
sub
aaa
cld
inc
sar
mov
dec
call
in
aad
fisubr
or
enter
or
mov
dec
xor
push
jno
pop
aad
ret
xchg
push
bound
push
(bad)
fisub
push
and
arpl
outs
movs
xchg
jnp
push
sub
imul
mov
xor
sbb
xlat
les
repnz
sbb
jo
loope
mov
das
jmp
icebp
jg
ret
inc
pop
xor
add
jne
aas
pop
ds
and
inc
popf
mul
in
or
stos
js
out
stc
adc
out
and
inc
imul
pop
imul
ins
sbb
pop
xchg
dec
pop
xor
call
dec
(bad)
out
ins
xor
fnstsw
fcomi
(bad)
cs
pop
jnp
xchg
cmc
cmc
retf
cmp
arpl
leave
int3
daa
lods
jnp
mov
pusha
and
xor
mov
mov
jbe
leave
add
xor
mov
inc
xor
out
ja
mov
xchg
ds
lods
mov
or
ins
xor
arpl
aas
pop
hlt
sbb
cmp
jae
pop
mov
retf
or
fcomp
xchg
mov
shl
or
imul
push
stos
hlt
int
test
adc
sub
arpl
cmp
into
cld
outs
push
out
inc
push
or
inc
daa
cli
pop
mov
movs
(bad)
lock
push
mov
pushf
ret
sub
or
adc
fnstcw
popf
dec
add
mov
and
mov
sub
mov
dec
push
test
sub
cdq
shl
fcomp
cmc
cmp
xchg
hlt
fdivrp
and
sub
mov
mov
adc
sub
into
or
and
gs
mov
outs
test
scas
xchg
rcr
inc
mov
mov
cmp
dec
ss
ret
inc
and
xchg
add
cmp
call
cmps
sbb
(bad)
jl
pop
push
js
icebp
add
push
sbb
pop
or
ret
fisubr
cs
push
mov
vpcmpgtd
sbb
or
lods
jo
out
mov
loopne
xchg
or
push
and
call
(bad)
adc
in
pushf
mov
in
int3
hlt
dec
out
mov
fisttp
adc
jmp
mov
xchg
push
inc
add
aam
push
inc
sub
jmp
enter
in
inc
fisttp
addr16
pop
mov
les
dec
je
hlt
gs
jns
or
lds
out
stc
fwait
mov
inc
xchg
xor
rcr
mov
sbb
cld
push
std
fs
btr
in
js
add
out
js
pop
fnstcw
daa
xchg
adc
mov
cmp
xchg
out
dec
addr16
dec
mov
retf
or
pop
adc
xchg
xchg
sub
ret
outs
cmp
jl
fwait
ja
nop
cmps
xchg
ret
aaa
dec
pusha
data16
neg
and
shr
push
aaa
(bad)
push
in
dec
bound
push
test
imul
(bad)
es
jb
xchg
mov
lds
arpl
bnd
jg
stos
push
mov
jo
sbb
inc
cmp
(bad)
fbld
dec
jecxz
add
add
dec
icebp
xor
cmp
mov
cs
add
mov
and
std
push
inc
jae
lahf
sub
cmp
pop
pop
fs
shl
pop
pop
rol
jns
jg
shl
movs
xchg
in
sbb
xchg
ins
xchg
pop
je
sahf
and
repnz
cmps
(bad)
in
lods
mov
fmul
ds
mov
pop
sbb
xchg
out
cwde
push
mov
sbb
xchg
aaa
repz
aas
test
xchg
add
push
rcr
sub
add
add
sub
pop
sar
jg
jl
aas
xor
rol
or
inc
dec
stc
mov
call
rol
jle
cmps
push
push
adc
dec
jb
xchg
les
cmc
push
pop
add
push
inc
popa
push
sbb
imul
jnp
fisttp
cwde
sub
cmp
pop
ja
jmp
arpl
mov
ins
test
inc
pop
push
jae
rol
xchg
ret
stos
sahf
js
dec
in
(bad)
aaa
push
sbb
(bad)
js
cwde
test
push
jl
xchg
inc
fisubr
pop
icebp
(bad)
pop
sbb
push
test
jmp
jmp
cdq
xchg
rol
pop
outs
jnp
push
les
shr
bound
addr16
nop
scas
mov
cmps
test
sub
cmp
or
(bad)
adc
mov
loop
push
out
cmp
scas
push
outs
loope
inc
mov
cmp
lea
scas
bound
add
pushf
cmp
inc
xor
cmps
test
pop
mov
pop
pop
out
dec
mov
xchg
dec
mov
(bad)
mov
int
adc
sub
push
mov
xchg
adc
test
inc
and
arpl
es
mov
jo
test
enter
in
fnstsw
ret
outs
push
cmp
sub
mov
addr16
mov
or
sbb
inc
cmp
or
ds
push
cs
daa
xchg
ins
aam
push
sti
movs
pop
mov
fld
lock
or
fs
(bad)
pushf
repz
into
fiadd
cwde
lods
gs
mov
inc
shr
mov
sub
ds
rcr
inc
adc
sbb
sub
inc
jo
or
xchg
call
rcl
mov
adc
mov
in
jl
adc
popf
push
push
xlat
mov
imul
scas
mov
inc
xor
repz
push
rol
dec
adc
mov
mov
inc
int
sbb
shr
pop
aas
fld
sub
add
mul
aaa
aad
pusha
icebp
xchg
push
inc
pop
out
or
jp
cmps
mov
imul
inc
lock
outs
mov
stc
xchg
or
xchg
pop
and
jg
int
inc
jecxz
push
xor
(bad)
lahf
jno
pop
imul
test
dec
aam
cli
aam
daa
fwait
xchg
pop
mov
out
xchg
mov
jb
mov
pusha
mov
pop
jno
inc
mov
adc
push
pop
aaa
pop
retf
jp
mov
lock
pop
nop
test
xor
outs
jae
mul
arpl
dec
pop
retf
hlt
xchg
in
pop
out
jmp
shr
test
in
mov
pusha
push
jmp
clc
cwde
ins
fcom
gs
xchg
mov
xchg
rol
jns
adc
jne
mov
jle
inc
mov
ret
out
mov
je
test
cmp
mov
ret
add
movs
out
and
dec
dec
push
daa
in
inc
cmc
nop
in
xor
iret
out
mov
mov
jl
repnz
aaa
xchg
dec
pop
mov
icebp
das
adc
cmp
cmp
je
hlt
movs
enter
(bad)
sub
inc
addr16
dec
test
cwde
imul
jg
xor
fmul
gs
pop
in
mov
pop
data16
nop
jmp
pushf
xchg
pop
test
out
cmps
mov
rcr
and
shl
sub
cmps
repz
or
and
xlat
push
cmp
stos
loop
shr
popf
dec
add
xchg
or
(bad)
push
iret
push
xchg
sub
add
pop
sti
cmc
(bad)
out
loope
dec
mov
js
mov
shr
jge
mov
jnp
outs
cmp
mov
in
popa
(bad)
add
ins
jle
enter
outs
cmp
ins
sbb
add
jmp
lods
popf
hlt
lods
or
dec
push
mov
push
inc
ds
ds
and
mov
mul
mov
xor
fwait
nop
ror
sbb
adc
xor
int3
inc
adc
out
stos
xchg
fsubr
ins
jae
jmp
leave
mov
lods
pop
sbb
cmp
cmp
shl
arpl
mov
push
sar
cwde
pop
(bad)
jg
sub
lods
mov
jle
mov
cmp
iret
sub
dec
jge
aam
xor
fwait
lods
jmp
add
adc
lods
gs
push
push
lods
and
out
scas
cmps
cli
or
or
cli
in
pushf
push
add
sbb
dec
push
shl
ja
xchg
jbe
ret
es
dec
int3
pop
xor
cmp
jns
mov
gs
add
dec
outs
in
or
cmp
jbe
sbb
mov
mov
sub
push
push
iret
mov
xchg
xchg
cwde
sub
cld
or
sar
leave
sub
mov
or
enter
mov
and
sbb
and
dec
pop
bound
repz
jmp
popf
mov
mov
ret
sbb
push
mov
cmp
adc
call
push
rcr
xor
xor
movs
int3
js
xchg
arpl
pop
addr16
xchg
mov
add
add
test
inc
mov
or
movs
adc
sbb
sub
xor
lock
and
cmp
xchg
inc
mov
(bad)
sbb
in
mov
imul
pop
ins
loop
sbb
les
push
outs
push
push
aas
cmp
fild
jmp
pop
xchg
dec
les
pop
(bad)
adc
add
xchg
xchg
rcr
jmp
add
or
icebp
add
pop
je
mov
cmp
push
xchg
adc
clc
daa
and
popa
out
xchg
stos
iret
jbe
add
rol
adc
mov
inc
not
mov
fld
jle
retf
je
jg
leave
scas
jmp
jnp
xchg
cwde
push
popf
xchg
jmp
cmc
in
lds
mov
sbb
mov
fwait
popa
push
push
xor
push
push
fucomip
or
xchg
xor
call
jae
into
jno
lds
call
pop
enter
fs
out
scas
jmp
mov
in
fwait
cmp
mov
fcmovnb
popa
xchg
popfw
dec
jnp
popf
icebp
lods
fs
pop
dec
jae
inc
xor
(bad)
xchg
(bad)
or
jg
lods
mov
inc
push
xchg
xchg
or
xor
mov
outs
nop
or
push
popf
cmp
push
or
out
jno
sbb
inc
cmp
push
dec
push
push
or
sbb
jae
jecxz
inc
sahf
mov
mov
jge
aad
ins
push
and
sub
dec
jnp
retf
push
or
pushf
je
adc
add
stos
(bad)
mov
dec
scas
movs
outs
xor
xor
mov
int
push
adc
loopne
shr
mov
push
test
inc
daa
jbe
in
push
add
sub
(bad)
add
pop
das
cs
add
and
mov
pop
fiadd
test
jp
div
ror
mov
je
cs
pop
int3
cmps
pop
jl
cld
ins
xor
test
out
mov
call
jge
out
or
pop
test
add
xchg
inc
jmp
sti
push
pop
dec
aad
jnp
push
cmp
add
and
jle
std
imul
sub
dec
inc
cmp
xchg
fs
xor
(bad)
mov
arpl
dec
sbb
ret
and
sub
sub
cmps
mov
xchg
mov
cmp
xor
sbb
dec
lahf
scas
repnz
push
loope
jno
or
jp
dec
retf
xor
shl
xchg
xchg
adc
mov
js
adc
retf
add
xchg
stos
repz
ret
jp
js
dec
sub
cdq
push
adc
mov
xchg
ret
xchg
cmps
sahf
frstor
or
pop
call
dec
jns
pop
push
rcr
mov
or
aas
pop
shl
std
idiv
int3
je
repz
xor
jne
cld
xchg
popa
(bad)
addr16
out
test
(bad)
call
add
mov
push
add
jns
cmp
and
jmp
sub
out
dec
inc
(bad)
repz
dec
push
pop
jl
sti
xor
mov
pop
pop
add
mov
stos
mov
jmp
jnp
das
cmps
sbb
jmp
pop
pusha
xchg
sub
cmp
pop
xchg
fs
test
xchg
push
inc
ss
dec
sub
cmp
test
ins
scas
sti
inc
sub
aaa
xor
pop
dec
mov
adc
fninit
cmps
rcl
xchg
cld
jae
fwait
pop
rol
ret
xchg
ret
mov
mov
xchg
ins
push
sbb
int
mov
aad
(bad)
inc
and
lods
add
test
aam
jnp
sbb
jnp
push
add
rcl
xchg
leave
mov
inc
cmp
sub
jp
sub
adc
sub
lea
pop
cmp
add
das
mov
mov
adc
(bad)
scas
out
mov
xlat
adc
rcl
inc
mov
aaa
mov
sahf
jb
push
loopne
int
jecxz
inc
adc
in
push
das
push
sar
xor
dec
pop
fs
xchg
dec
dec
cmp
push
aaa
cmps
fwait
mov
rcl
loop
stc
push
cmps
out
push
cmp
inc
jns
out
test
push
push
stc
lods
dec
add
int
lea
or
mov
(bad)
and
stos
stos
xchg
mov
add
xlat
dec
bnd
bound
aam
jbe
stos
adc
mov
sar
adc
cld
out
inc
(bad)
mov
mov
ins
out
cmp
push
adc
jecxz
nop
imul
loopne
in
xchg
mov
inc
inc
sbb
and
fimul
jae
or
xchg
pop
movs
std
xor
push
(bad)
lds
mov
push
fs
pushf
aad
cdq
pop
mov
push
sub
daa
jb
movs
add
xlat
fdivr
mov
in
ins
xchg
add
fldcw
out
jnp
dec
in
call
repnz
dec
jmp
adc
ins
sub
popf
xor
jl
mov
inc
stos
ret
fild
inc
outs
xchg
aaa
(bad)
and
push
inc
(bad)
push
xor
stos
std
cmps
daa
clc
push
push
fucomp
outs
and
xor
or
pushf
stc
jle
jp
jnp
movs
stos
and
jns
jmp
sub
aad
aas
pop
popa
(bad)
bound
and
ins
push
mov
push
in
(bad)
in
repz
sub
lea
or
ja
imul
dec
(bad)
cmp
ds
pop
cmps
adc
ret
pop
fbstp
push
cmp
jmp
imul
in
jb
loopne
sub
out
push
inc
and
sahf
mov
imul
cmp
adc
(bad)
in
ret
retf
fbstp
push
or
sets
enter
daa
les
out
cmc
xchg
pop
cmp
or
mov
cld
dec
popf
call
test
data16
fmul
mov
mov
sbb
bound
and
cmp
pop
xchg
inc
sbb
retf
into
push
cmp
retf
jno
bnd
add
mov
xchg
mov
adc
push
sbb
adc
dec
int3
cmp
jl
push
xchg
mov
cmp
test
inc
push
rol
cli
dec
jmp
or
push
xor
stc
sbb
rcr
call
dec
sahf
pop
arpl
in
loope
leave
aas
mov
pop
jl
mov
inc
inc
add
sub
mov
jae
test
xchg
dec
dec
xor
outs
shr
mov
imul
and
imul
div
rcr
leave
fnstcw
or
inc
fst
and
gs
lea
push
test
xchg
push
lds
dec
fistp
loop
in
fwait
adc
lds
pop
sub
push
fimul
shl
in
mov
jne
repz
sub
scas
xor
in
ret
fsubr
movs
into
sbb
(bad)
addr16
mov
cmp
and
sub
cmp
popf
shr
mov
and
sbb
pop
cmp
in
xchg
pop
fst
dec
adc
fisttp
loopne
xchg
dec
dec
outs
jle
aad
scas
js
leave
add
repnz
lds
jg
xor
outs
loopne
shl
ret
std
jmp
jle
fsub
fist
pop
cmp
add
cmp
and
xor
ror
sti
adc
hlt
repnz
xchg
ror
or
out
sbb
dec
inc
xor
cmps
dec
fcom
xor
sub
jg
out
sbb
mov
aas
ds
fwait
loopne
inc
fdivr
scas
xor
popf
cli
inc
sub
inc
inc
jmp
scas
cmps
out
inc
nop
inc
outs
or
jo
stc
sub
mov
jbe
rcl
imul
pop
add
call
ficom
push
add
push
mov
xchg
test
pop
int3
sub
addr16
xchg
push
sahf
inc
leave
mov
xchg
ds
inc
mov
mov
add
jmp
jns
outs
das
repnz
repnz
and
add
popa
clc
dec
add
inc
out
push
mov
cmps
js
or
push
push
add
hlt
fst
add
mov
jg
and
mov
inc
in
inc
mov
or
call
jmp
jnp
jne
ds
add
adc
fst
fnstcw
inc
mov
mov
jb
mov
cwde
loopne
(bad)
push
fcmovnu
jmp
cmps
pop
jl
leave
push
mov
mov
mov
imul
and
fsubr
(bad)
jmp
retf
push
inc
scas
and
mov
add
icebp
mov
adc
lock
pop
jle
dec
inc
push
call
movs
add
sub
mov
rol
jmp
int3
adc
aad
cmp
adc
fcomp
dec
mov
sbb
ss
push
xchg
cld
neg
pandn
sbb
(bad)
or
retf
jae
mov
and
arpl
clc
call
popa
dec
xor
movs
sub
adc
pop
cmp
sub
push
cli
cmps
jge
subps
cwde
push
rol
mov
ins
cmp
in
scas
or
(bad)
imul
pusha
clc
imul
mov
sub
cmp
inc
rcl
push
dec
add
and
push
fucom
xor
ret
pop
add
leave
sub
xchg
les
sub
aad
ss
gs
call
repnz
in
mov
lds
lea
xlat
iret
pop
mov
xor
adc
out
test
sbb
sub
in
movs
mov
mov
es
das
pop
mov
xchg
addr16
lahf
cmp
sbb
add
call
mov
mov
xchg
imul
push
(bad)
aad
(bad)
div
xor
mov
push
sub
mov
jo
mov
leave
inc
push
icebp
ja
loope
out
outs
adc
jge
repnz
popa
add
mov
cdq
mov
inc
push
xchg
push
mov
add
and
cs
out
out
dec
hlt
or
pop
pop
dec
rcr
(bad)
xlat
cmp
call
aas
pop
mov
and
inc
inc
dec
imul
mov
jno
or
fnstsw
sbb
pop
jecxz
int3
lahf
sbb
sub
lds
std
mul
aas
loope
jp
imul
pop
ds
mov
das
arpl
ficomp
add
(bad)
sahf
hlt
mov
rcr
push
cmp
repnz
pop
or
push
cli
xor
or
fisttp
cwde
packuswb
xchg
xchg
clc
cmps
in
pushf
lds
pusha
inc
movs
mov
jmp
inc
pop
inc
dec
xor
jae
push
mov
sub
push
(bad)
fist
cmps
adc
dec
in
fimul
inc
mov
mov
adc
mov
movs
and
inc
xchg
lods
mov
pop
int
lods
dec
sbb
add
mov
ror
icebp
test
ins
xchg
push
outs
pushf
pop
jmp
and
enter
mov
push
xchg
lahf
sar
mov
or
loope
or
cmp
jge
jmp
in
mov
sar
shr
mov
seta
enter
dec
sub
cli
jne
pop
xchg
dec
inc
cld
inc
imul
pushf
outs
add
hlt
sbb
or
xchg
outs
inc
fisub
or
mov
aas
neg
imul
das
and
sub
mov
lods
jo
stos
pop
(bad)
mov
shl
jmp
jmp
mov
movs
adc
jno
xchg
adc
jb
daa
mov
in
lahf
ins
mov
or
sub
icebp
push
push
js
icebp
fcomi
sub
inc
cmps
pusha
sar
int3
repnz
fisttp
stc
ss
enter
mov
fnsave
sbb
test
jg
rcl
cmp
(bad)
and
push
sub
sahf
jecxz
fsubrp
les
xor
and
int
aaa
mov
daa
fld
ja
cmp
loope
or
ja
iret
add
fisttp
push
bound
sub
sub
fmul
mov
jle
push
leave
mov
pusha
sbb
scas
pop
xchg
mov
ins
jno
push
inc
stc
xchg
or
mov
(bad)
push
xchg
(bad)
nop
fild
pop
jae
push
sub
sti
sub
test
stos
or
push
pop
jae
ins
ficomp
and
ficomp
cmp
data16
pop
inc
aad
adc
cmps
xchg
mov
setae
sbb
movs
outs
jo
and
sbb
mov
push
cmp
or
xor
or
dec
mov
inc
imul
mov
push
out
dec
add
sub
push
pusha
jo
outs
jo
fucomp
mov
jle
xlat
cmc
mov
in
pop
je
les
and
out
aaa
pop
shl
push
fmul
shr
fdiv
xchg
and
lods
pop
shl
dec
test
push
movs
test
pop
test
dec
inc
push
cmp
ret
inc
xchg
mov
icebp
in
add
popf
add
and
fwait
or
aas
inc
repz
sahf
sub
aaa
imul
xchg
inc
es
dec
shl
cli
pop
cmp
cdq
lahf
xor
mov
pop
daa
adc
jmp
fcomi
shr
mov
enter
mov
repnz
mov
fist
dec
dec
aam
loopne
loop
icebp
fsub
loopne
icebp
push
xor
push
in
out
cmp
call
jno
pop
sbb
push
inc
mov
dec
inc
cld
ficom
xchg
sub
es
in
ror
(bad)
pop
cmc
(bad)
fbstp
in
int
lds
jbe
sti
jae
add
lock
hlt
imul
xor
xchg
mov
sbb
pop
mov
mov
loopne
push
dec
leave
(bad)
mov
pop
adc
repnz
pop
mov
lods
xchg
jmp
les
xchg
mov
jle
inc
sub
jge
imul
pop
push
dec
lea
or
sub
je
shl
ret
cmp
(bad)
cmp
rcl
mov
pop
pop
xchg
cmps
mov
and
or
inc
lea
test
add
cmp
(bad)
and
std
inc
stos
xor
push
jle
push
push
mov
call
xor
xchg
pop
cmc
es
not
enter
pop
jno
add
test
fs
cmc
jecxz
mov
cdq
mov
cmps
push
ss
ss
fwait
icebp
cmp
enter
lahf
jle
mov
pop
pop
fld
mov
pusha
popa
gs
mov
std
and
adc
mov
push
fld
inc
lock
or
adc
aas
cmp
dec
mov
inc
aas
cmp
lea
inc
cmp
xchg
dec
leave
nop
je
jbe
loop
jg
xor
add
out
jge
jnp
jg
pop
xchg
sar
dec
mov
ror
stos
mov
clc
pop
jge
xchg
loope
push
cmp
fcmovnb
retf
(bad)
push
lods
dec
fwait
xor
inc
bound
jl
dec
sbb
cmp
sbb
jmp
aas
mov
outs
call
and
call
and
cmp
xor
in
test
push
mov
dec
xchg
ret
(bad)
inc
xchg
movs
xor
inc
call
jmp
ds
sub
scas
test
push
pop
xchg
jo
lea
jle
push
mov
mov
dec
movs
xor
addr16
cmc
std
rol
xor
add
pop
mov
dec
loop
add
hlt
xor
test
push
adc
pop
cmc
cli
sar
popf
jno
or
mov
jge
mov
into
(bad)
lods
mov
jne
pop
fwait
push
daa
cld
mov
test
fsub
dec
cli
adc
sub
stc
or
and
push
(bad)
mov
push
inc
push
jb
xor
not
stc
add
dec
test
xchg
inc
pop
or
ds
xor
daa
mov
cwde
loope
data16
pop
mov
out
in
stos
imul
xor
pop
xchg
cmp
call
mov
(bad)
xor
mov
bound
pmuludq
add
pushf
outs
and
sti
sub
adc
outs
test
(bad)
retf
and
xchg
mov
adc
retf
pop
push
rcl
sbb
scas
mov
out
sub
cmp
stc
cli
retf
or
xchg
jb
leave
or
mov
mov
jmp
sub
enter
(bad)
aas
add
inc
mov
das
les
sahf
popf
mov
int3
cmc
mov
sbb
shl
lods
fisttp
adc
in
jnp
jmp
push
jae
ret
inc
mov
add
pop
dec
imul
or
nop
imul
iret
push
cmps
outs
popf
push
cmp
ja
push
out
sti
outs
jg
cmovb
jns
mov
add
sbb
cmp
ins
xchg
ja
cld
lea
pop
pop
ret
mov
aam
dec
adc
xlat
cmp
cmp
dec
and
icebp
mov
repnz
cld
dec
in
imul
cmp
test
inc
push
add
add
call
xchg
repnz
cmp
mov
add
mov
xchg
mov
add
jne
aad
inc
sub
lds
movs
add
xchg
sbb
cmps
or
jne
cmp
loop
mov
jbe
adc
fisub
mov
xchg
mov
mov
leave
js
pop
dec
js
int
lahf
xchg
aam
push
pusha
out
scas
adc
pop
jl
xlat
inc
pop
mov
add
sub
pusha
(bad)
call
dec
xor
sbb
out
ins
int
test
dec
pop
sub
mov
and
lock
retf
ss
xor
xchg
ret
dec
push
mov
jb
adc
daa
xor
mov
mov
inc
hlt
imul
adc
test
sub
hlt
out
xchg
sub
test
cmps
or
mov
xchg
scas
jo
adc
or
loope
out
cmp
dec
add
aaa
test
mov
popa
cmps
xchg
fisub
add
or
mov
mov
add
aam
es
aaa
xchg
into
into
mov
pop
xor
in
fxch
add
pop
fwait
push
mov
movs
pusha
or
jge
mov
aam
pop
sbb
mov
addr16
and
adc
in
xor
ret
adc
ins
arpl
test
std
inc
pop
lock
mov
add
pushf
and
ds
push
inc
sub
icebp
rcr
sahf
lods
cmp
jnp
fstp
jnp
dec
test
mov
push
xor
cmp
dec
cmp
pop
test
inc
scas
pop
pop
sbb
leave
test
xor
xchg
xor
stc
pop
into
push
mov
lods
dec
xchg
xchg
sbb
and
pop
dec
pop
dec
outs
fs
test
repz
(bad)
cmp
inc
mov
sbb
das
cmps
imul
(bad)
jb
mov
jno
xchg
jb
or
fsubrp
cmp
jne
pop
add
call
mov
adc
jbe
sbb
bound
aas
sub
sbb
imul
push
sub
jo
std
push
pop
push
and
cmp
dec
mov
sub
dec
fdiv
xor
pusha
out
sub
call
hlt
inc
call
div
popf
enter
fwait
ins
test
dec
loope
fldcw
inc
mov
hlt
lea
pop
push
mov
mov
jg
jmp
mov
mov
fnstsw
inc
jp
mov
sbb
pop
mov
fld
(bad)
jle
mov
das
xor
cli
loope
add
push
test
dec
push
dec
mov
xchg
in
mov
jmp
xlat
xchg
call
jne
cmp
(bad)
push
adc
xchg
and
lea
add
xor
addr16
add
imul
mov
aam
dec
rol
cs
pop
aad
sti
pop
and
fbstp
pop
push
leave
cli
scas
jo
ja
mov
dec
cmp
pushf
mov
mov
cmp
scas
jmp
xor
mov
push
jp
adc
dec
push
mov
dec
add
jg
retf
cmp
sti
(bad)
dec
in
xor
out
aaa
jne
xchg
or
jge
xchg
lods
pop
dec
mov
or
loop
data16
repz
mov
fld
fwait
push
call
daa
in
repz
sub
sub
mov
rcl
jge
scas
scas
movs
jle
mov
or
cmp
mov
inc
aaa
mov
sub
sahf
mov
call
adc
and
in
push
or
and
cmp
lods
mov
dec
push
pop
stc
data16
daa
and
fisttp
jmp
fst
addr16
push
jp
sti
data16
jno
mov
mov
mov
xor
push
push
faddp
out
cdq
push
das
or
pop
pop
into
sbb
loopne
xor
ss
and
aas
(bad)
lock
cmp
stos
test
mov
shl
out
aad
aam
mov
aad
daa
ins
adc
(bad)
das
mov
lea
push
pop
stc
int
cmp
mov
inc
cwde
pop
into
pop
sub
test
pop
add
inc
outs
cmp
ja
inc
and
and
ret
rcr
cmc
adc
xchg
loopne
mov
cmp
sub
in
adc
inc
add
or
mov
sub
push
ja
fwait
mov
lahf
fs
aad
inc
mov
movs
sub
int
mov
and
or
pop
sub
test
sti
xor
test
ds
jmp
inc
pop
pusha
stc
(bad)
ret
push
ret
cwde
mov
mov
jnp
out
push
movs
push
mov
sbb
xchg
inc
test
es
jnp
ins
lahf
dec
push
test
iret
and
pop
push
ror
mov
test
push
xchg
imul
adc
scas
cmp
loope
pop
jle
aaa
pop
add
or
sub
jb
sar
cdq
test
aas
dec
cmps
pushf
push
call
popa
rol
push
bound
sub
popa
inc
xchg
out
js
clc
mov
dec
aam
or
test
mov
test
(bad)
daa
(bad)
cwde
les
or
adc
cmps
mov
stos
cdq
jmp
sub
push
push
cdq
mov
cmp
jg
fmul
in
jne
lods
add
test
leave
mov
push
mov
std
or
adc
inc
call
cmp
and
adc
jae
sub
push
popf
sbb
mov
int
ds
das
aad
addr16
aam
(bad)
sbb
fadd
sbb
or
adc
sldt
add
mov
sbb
mov
sub
adc
test
pop
adc
push
inc
js
cmp
xchg
jl
add
mov
pop
imul
or
(bad)
rcr
pop
push
retf
movs
adc
in
in
lods
ss
xchg
jbe
mov
bound
arpl
shl
call
mov
sub
sti
cs
das
sub
dec
dec
xor
xor
xchg
sub
xor
cwde
mov
mov
sbb
dec
jno
sub
(bad)
sub
adc
aaa
mov
and
dec
arpl
jg
pop
dec
neg
int3
lds
lock
and
jge
jmp
push
mov
lods
dec
sub
push
xchg
xchg
hlt
mov
loopne
mov
ins
sbb
jne
sub
inc
add
pop
jmp
(bad)
pop
cmc
and
test
js
fs
aas
sub
jo
test
add
ds
push
ins
adc
dec
xchg
popa
call
jge
cwde
cmp
mov
js
iret
jbe
push
out
js
outs
or
icebp
mov
nop
push
cmp
lock
sahf
inc
xchg
mov
lahf
test
out
xchg
je
adc
(bad)
fsubr
push
int
jb
jo
push
push
stc
lahf
inc
inc
inc
pop
dec
hlt
in
mov
pushf
jbe
mov
add
push
icebp
mov
mov
and
add
xor
push
cmps
int3
lds
iret
or
pop
adc
xchg
and
cmp
dec
repnz
(bad)
xlat
mov
mov
clc
fimul
dec
or
lock
imul
fwait
mov
or
out
push
xor
push
les
hlt
xchg
je
jns
adc
mov
ss
push
pusha
mov
arpl
lods
stos
mov
aad
adc
sti
nop
xchg
ds
sti
adc
out
jmp
adc
pop
xor
lods
inc
jecxz
imul
stos
adc
push
jge
cdq
jmp
jp
movs
mov
add
dec
ficom
fcmovbe
adc
jmp
iret
lods
imul
stc
and
nop
fs
cmp
push
retf
repnz
aad
add
je
mov
mov
call
xchg
lahf
pop
sti
xor
add
loop
adc
stc
adc
out
fidivr
mov
shr
fdiv
fsub
stos
add
push
mov
out
xchg
aam
add
mov
adc
xchg
and
aas
ja
test
pusha
fidivr
mov
push
dec
data16
pop
inc
fdivr
aas
mov
xor
imul
xchg
sub
pop
cmp
sahf
adc
ret
jae
popa
mov
popf
xor
movs
pop
shl
jae
xor
dec
mov
cli
mov
shl
cs
push
popa
lock
or
enter
dec
jl
shl
xchg
dec
cmp
jmp
icebp
imul
inc
mov
jnp
jbe
add
mov
push
aam
sub
stos
aam
ret
mov
ss
out
cmp
lahf
add
dec
xor
pop
xchg
adc
call
(bad)
int3
ds
out
daa
into
out
xchg
in
jecxz
xchg
adc
retf
addr16
sub
and
mov
cld
cmps
movs
jno
loop
xor
pop
jecxz
dec
fistp
clc
cs
stos
inc
iret
push
retf
aaa
mov
popf
stos
ficom
(bad)
jnp
jns
pusha
xchg
pop
xchg
cmp
neg
push
pop
and
bnd
dec
xor
popa
xor
sbb
push
xor
adc
xchg
pusha
pushf
mov
loopne
or
sub
pop
pand
in
sahf
cmps
(bad)
mov
cmp
pop
push
dec
mov
push
pop
icebp
shr
jg
movs
stc
pop
pop
jno
push
inc
dec
in
into
cdq
cwde
les
rcr
popa
add
rcl
mov
fs
mov
mov
jns
mov
mov
sbb
cmp
jb
jmp
lods
mov
fstp
cmc
fldcw
aaa
dec
xchg
test
push
(bad)
push
dec
sub
xchg
in
test
mov
mov
and
xchg
addr16
push
mov
pop
mov
pop
cmp
inc
cmp
add
int3
rol
das
test
push
adc
nop
mov
mov
hlt
dec
loopne
repz
jns
adc
jnp
ret
inc
sub
jg
fld
retf
dec
xor
lds
cmp
dec
mov
les
call
sub
dec
fidivr
test
(bad)
mov
add
and
or
arpl
js
movs
push
sub
ret
pop
or
fbld
adc
xchg
jnp
aam
jnp
jno
sahf
je
ret
lds
lea
call
cwde
pop
lds
arpl
jge
cmp
daa
mov
xlat
sub
push
lock
nop
jmp
lea
inc
repz
popf
xor
dec
dec
inc
mov
push
and
stc
push
pop
dec
push
dec
jp
outs
pop
ret
test
mov
jl
cli
test
sbb
pushf
mov
outs
sub
outs
mov
bswap
lds
leave
iret
ja
dec
pop
popa
sbb
adc
push
loopne
call
mov
(bad)
popf
sbb
in
ret
sub
pop
sbb
pop
dec
inc
inc
push
repz
sbb
inc
or
pop
and
push
ins
jns
mov
rol
or
movs
push
push
stos
aam
ds
inc
push
cmp
das
pop
mov
aam
sbb
fsub
inc
sub
sahf
pop
jle
ins
xor
xor
lods
mov
or
sub
sbb
push
pop
(bad)
hlt
jae
push
mov
xor
leave
retf
mov
retf
stos
push
pop
xchg
push
outs
cwde
mov
cdq
sbb
imul
mov
add
push
pop
pop
ret
mov
inc
mov
hlt
lds
loope
jo
or
sbb
fs
add
jmp
cmc
loope
push
dec
pop
push
mov
hlt
mov
loopne
rcr
fnsave
and
dec
mov
popf
ret
mov
mov
or
push
neg
mov
jbe
or
jno
pop
sub
adc
xor
and
lea
loop
test
add
mov
push
push
leave
clc
fs
xchg
fcompp
hlt
aad
or
adc
fmul
xchg
or
test
je
pop
sbb
xor
pusha
and
aaa
jp
mov
stos
jmp
xor
jnp
frstor
jb
push
hlt
adc
cld
lds
push
cmp
pop
xor
pop
mov
sbb
mov
and
jg
xor
(bad)
fist
jmp
inc
inc
mov
jecxz
and
imul
jmp
pop
push
mov
jae
sub
or
pop
pop
pop
or
fnstenv
(bad)
mov
into
cmc
ret
pop
pushw
push
jnp
jle
push
test
or
leave
jns
xchg
adc
dec
bound
add
xchg
les
xor
pop
adc
mov
int
sub
div
bound
push
sbb
cmc
or
es
xchg
hlt
inc
mov
test
push
mov
pop
ins
mov
sbb
mov
pop
not
jmp
mov
lods
and
inc
ret
add
pop
push
or
and
jp
lds
pop
and
pop
int3
cmp
ret
les
add
shl
mov
lods
mov
pop
std
mov
ret
out
cmp
add
xchg
idiv
mov
icebp
mov
add
inc
push
jle
cmp
in
mov
adc
adc
das
xor
and
rol
and
fisub
pop
jge
mov
js
sbb
pop
addr16
inc
call
(bad)
in
mov
movs
and
pop
xchg
jne
adc
cld
inc
adc
dec
ret
int3
ror
ss
cdq
ja
mov
adc
in
addr16
mov
mov
cmp
jnp
push
pop
cmp
lods
or
cmp
popf
rcl
mov
lds
mov
lods
jmp
push
(bad)
fs
sbb
jp
(bad)
dec
pusha
dec
ja
(bad)
std
mov
add
pop
mov
movs
fs
loopne
mov
sub
mul
shr
(bad)
mov
sti
push
push
das
mov
adc
js
sbb
ret
sub
ds
(bad)
cmp
xor
daa
iret
test
lods
inc
imul
lods
xchg
call
sub
sar
inc
dec
mov
por
jbe
fwait
push
test
inc
leave
add
cmp
les
add
add
(bad)
rcl
or
xor
std
xchg
push
mov
cwde
sub
mov
xor
ins
(bad)
mov
adc
mov
stos
mov
mov
inc
pop
jmp
or
pusha
mov
in
or
out
inc
fdiv
aaa
outs
lds
mov
dec
sbb
xor
or
movs
into
or
popf
ins
mov
loope
jno
ja
xor
adc
mov
xchg
clc
jns
clc
inc
jnp
dec
out
push
mov
out
lods
xchg
loop
jmp
fild
dec
mov
mov
mov
cdq
cmp
or
popa
call
cmps
popf
and
mov
std
mov
or
mov
sub
adc
fistp
je
fsub
add
mul
lahf
std
das
mov
pop
test
and
xor
and
aas
mov
and
cmp
inc
in
dec
push
mov
stc
fwait
xchg
cdq
cld
jno
retf
jne
out
ja
mov
sbb
mov
push
adc
daa
out
sbb
cmp
or
pop
js
jmp
cmp
mov
push
sbb
inc
(bad)
dec
jae
dec
test
and
xchg
sahf
gs
push
imul
adc
fucom
mov
pop
lds
adc
xchg
jmp
xchg
push
call
inc
mov
dec
(bad)
add
cmc
aad
outs
popa
push
mov
imul
pop
lock
pop
mov
js
push
stc
js
push
xchg
mov
and
outs
test
adc
popa
loopne
sub
adc
push
push
pop
sub
lahf
ins
out
sub
repnz
fisttp
cmp
daa
nop
test
cmp
out
ret
std
(bad)
sub
mov
gs
(bad)
fst
and
leave
lods
or
arpl
sbb
sbb
jle
lock
addr16
outs
jp
push
mov
jno
jmp
out
pop
xor
mov
sar
inc
test
jg
mov
push
ud1
sahf
das
test
mov
fld
fild
sbb
imul
cs
rol
cmp
(bad)
or
push
js
lods
inc
mov
mov
jb
js
fs
or
ror
sub
movs
or
call
jo
mov
lds
(bad)
adc
push
call
mov
stc
hlt
cmp
adc
ds
mov
ja
rol
adc
stc
lds
scas
mov
aam
enter
in
xchg
outs
pop
mov
mov
cmp
fwait
push
push
int
xor
je
jmp
repz
adc
neg
lods
or
movups
sub
push
int3
inc
movs
jno
nop
popa
fcomp
jge
loopne
xchg
das
fadd
in
and
jmp
sbb
ss
sub
pop
sub
mov
add
cmp
jo
into
outs
xlat
je
jge
bound
push
sub
out
mov
push
outs
push
jg
popf
gs
mov
ins
jb
push
or
cld
adc
xor
lds
pop
test
pop
or
or
cld
sti
test
xchg
imul
xchg
(bad)
rol
jmp
pop
(bad)
int3
repnz
gs
sub
dec
data16
sub
jmp
stc
gs
icebp
out
or
test
mov
inc
fsubr
adc
add
iret
lea
fmul
jp
leave
dec
jo
mov
sub
retf
push
in
es
cld
cmps
fwait
iret
mov
sbb
and
sbb
stos
mov
jecxz
inc
pusha
pop
dec
xor
les
mov
adc
inc
mov
jmp
lds
aaa
sbb
jns
movs
mov
scas
lds
arpl
imul
imul
pop
cwde
ss
ror
into
shr
and
mov
mov
popa
cmps
sub
xchg
xchg
xor
gs
pop
xchg
lahf
out
cmp
mov
pop
jnp
xchg
sbb
adc
pop
or
push
mov
push
add
das
dec
(bad)
or
push
xor
sahf
rcl
mov
xchg
sbb
aas
cmp
pusha
adc
mov
push
mov
xor
add
or
xchg
adc
mov
in
sar
dec
test
out
aaa
test
xor
mov
dec
popf
retf
movs
jmp
push
popf
inc
pop
mov
int3
jbe
inc
add
dec
cs
cmp
jle
jno
pusha
cmp
xor
outs
and
scas
retf
xchg
ins
inc
jmp
jg
test
call
popa
add
cmp
ret
mov
jge
or
sbb
test
lods
inc
sahf
add
adc
jge
mov
stc
inc
and
mov
pop
loopne
xor
in
fdivr
mov
(bad)
or
ins
and
jp
enter
bound
outs
jmp
jb
pusha
popf
imul
cmps
push
xchg
cmp
mov
dec
mov
or
xlat
in
shl
sub
out
mov
mov
in
mov
xchg
in
sub
jg
mov
dec
or
push
in
sub
pop
nop
cmp
outs
es
mov
stos
fwait
push
lea
push
xchg
aam
aaa
stc
sub
sub
or
mov
or
xor
movs
repz
into
mov
lods
sahf
pop
test
mov
fistp
and
jbe
(bad)
jg
jo
cmp
fs
mov
mov
xor
push
sbb
xchg
int3
std
inc
(bad)
rol
std
lods
mov
outs
lahf
dec
xchg
cs
mov
fs
cmp
mov
jecxz
(bad)
neg
inc
add
call
pop
stc
mov
in
sbb
jmp
pop
mov
sbb
jae
push
gs
or
sbb
cwde
push
fist
fucomip
arpl
jns
cmp
shl
cmps
in
xchg
adc
std
inc
mov
ds
or
sbb
jae
(bad)
cmp
stc
adc
jle
js
call
popf
aam
ins
imul
sahf
xrelease
in
cmps
cwde
(bad)
xor
and
mov
idiv
out
rcr
mov
xor
jbe
jbe
daa
sub
xor
fst
jae
push
sahf
mov
sub
les
test
ror
mov
ror
and
in
std
push
ins
clc
in
fst
dec
push
std
popa
inc
movs
xor
ret
xchg
test
mov
xchg
pop
(bad)
jno
jns
shl
adc
jecxz
cmp
xor
mov
shl
lock
mov
retf
add
cmp
shl
pop
ror
les
daa
fxch
jo
shl
mov
lods
lahf
fs
mov
loop
fisttp
sub
push
xchg
xchg
or
outs
push
mov
adc
lds
jae
inc
(bad)
clc
aad
imul
mov
aas
in
or
sbb
sbb
cwde
adc
jecxz
in
cmps
sbb
xchg
jmp
jb
mov
call
dec
sub
xchg
fist
pop
xor
out
sub
dec
call
cli
add
or
adc
scas
and
mov
mov
movnti
imul
and
fwait
push
in
inc
xlat
pop
push
test
aaa
dec
lahf
mov
mov
(bad)
(bad)
out
mov
js
rol
add
cdq
fs
xlat
(bad)
sahf
sbb
or
jbe
ret
nop
and
dec
icebp
push
inc
xchg
and
jmp
(bad)
cs
inc
mov
xchg
xor
jbe
pusha
mov
mov
pop
mov
add
inc
cdq
and
cmp
in
mov
stos
add
rcl
inc
jb
sub
jmp
cmps
mov
push
cmp
add
jecxz
mov
sub
xchg
out
mov
add
hlt
mov
mov
shl
retf
mov
mov
sub
retf
das
mov
push
rcl
test
add
(bad)
jl
in
jae
pusha
icebp
jne
adc
sub
cmp
ret
sbb
sbb
or
jp
dec
mov
cmp
mov
fs
xchg
ds
lods
int
and
adc
dec
jp
fistp
xor
les
jne
push
push
je
and
mov
sub
add
cmp
(bad)
adc
clc
mov
jecxz
je
and
mov
aas
dec
inc
enter
pop
xchg
std
ret
add
mov
dec
cmp
mov
or
scas
lea
ds
or
xchg
sub
cmc
fwait
popa
push
xor
mov
jnp
sti
test
push
orps
imul
in
pop
movs
jne
and
test
adc
sub
sahf
jmp
std
xchg
sub
cmp
xor
and
and
push
and
add
outs
addr16
sti
push
push
fbstp
jne
sbb
test
ss
lods
and
xchg
int
in
xchg
cmc
imul
mov
jp
or
jne
inc
add
into
pushf
push
xchg
xchg
add
and
jno
lahf
retf
mov
push
inc
mov
add
push
retf
sti
sub
test
aad
mov
das
pop
pop
outs
bound
iret
sub
push
leave
ret
lods
xchg
ss
cmp
fs
jge
jl
sub
xor
pop
retf
push
jecxz
sub
xchg
test
shl
pop
sub
push
ret
jns
add
jno
mov
popa
push
adc
add
cmp
push
push
pop
ins
xchg
pusha
stc
or
loope
fs
sbb
out
and
and
sub
mov
std
iret
push
xchg
in
xor
add
into
stos
adc
dec
dec
adc
imul
std
mov
scas
ins
adc
pushf
das
retf
jbe
mov
mov
or
inc
cs
pushf
loopne
xor
ss
jne
and
dec
mov
mov
inc
cmps
int
inc
jg
iret
aad
sub
rcl
mov
jp
imul
mov
xchg
mov
ins
and
cmp
sub
ds
jmp
fsubr
pop
push
push
mov
pop
jle
in
daa
ds
adc
add
sub
into
mov
dec
dec
sbb
test
dec
jecxz
mov
shr
inc
data16
and
call
pop
dec
int
sbb
xlat
imul
jae
xor
dec
into
fisttp
mov
outs
test
or
js
push
cmps
mov
jnp
mov
repnz
push
ins
mov
inc
out
and
fdivr
popa
arpl
fbstp
popa
outs
jnp
adc
jg
mov
or
inc
adc
fld
test
aas
pop
lea
aad
push
or
add
int3
(bad)
cmp
(bad)
mov
inc
fxch
add
add
sahf
adc
ins
mov
dec
xor
popa
mov
xor
xlat
inc
adc
push
in
mov
shr
adc
mov
pop
data16
(bad)
in
or
pop
jmp
psllq
cmp
popa
iret
jmp
ret
or
xor
pop
(bad)
mov
in
push
cmp
dec
mov
in
sbb
setge
test
and
test
fs
push
jns
int
test
movs
jp
mov
enter
imul
pop
mov
mov
mov
mov
pop
ds
stos
mov
inc
mov
pop
add
xor
fld
jecxz
cmps
stc
push
call
fcomp
jmp
xchg
(bad)
sbb
(bad)
ror
or
pop
inc
stc
dec
std
shl
push
sbb
mov
bound
mov
and
in
mov
mov
ret
jle
mov
cmp
cmp
mov
sub
xchg
pushf
or
mov
loopne
xchg
cmp
icebp
pop
pop
je
iret
cmp
outs
mov
adc
pop
push
adc
cmp
or
je
adc
lods
push
test
clc
adc
pop
sar
mov
xchg
ins
mov
push
pop
(bad)
aad
pushf
xlat
or
mov
xchg
(bad)
aam
bswap
je
test
inc
ins
and
push
fistp
dec
pop
or
sbb
mov
xchg
daa
mul
jae
dec
mov
mov
clc
sbb
mov
popf
push
icebp
mov
ins
pop
push
jge
dec
mov
(bad)
fsubrp
fs
test
cmp
adc
pop
out
frstor
imul
jmp
fimul
fidiv
push
lods
adc
cmps
mov
mov
lods
sbb
daa
lahf
cld
cmps
test
adc
cmps
ret
sub
std
mov
fstp
or
das
xor
mul
popf
push
add
test
inc
pop
sbb
int3
fdiv
iret
mov
mov
ins
pop
daa
adc
aad
mov
add
mov
ror
push
adc
cmp
mov
icebp
mov
pop
loopne
jnp
(bad)
cmp
neg
mov
aam
dec
fbld
sub
xlat
pop
inc
js
adc
push
iret
call
cmps
xchg
cmc
stc
inc
imul
cmps
aad
mov
sbb
sbb
dec
int
mov
jmp
inc
jae
push
ss
mov
fldenv
pop
mov
(bad)
cmp
push
not
cmp
and
xchg
inc
jecxz
out
ins
add
test
out
sbb
addr16
mov
ficom
fidiv
adc
sbb
enter
sar
xor
push
and
cmp
add
sbb
out
cmc
or
jle
dec
int3
lahf
cdq
add
push
jnp
mov
inc
cmc
and
fidiv
loope
in
xchg
jp
sar
pop
ss
(bad)
dec
cmp
and
inc
push
dec
fisub
out
jge
and
push
vpunpckldq
push
clflush
lea
inc
push
jne
cmp
dec
test
mov
into
cmp
mov
jmp
cmp
lahf
sub
pop
inc
lahf
std
imul
adc
sub
adc
add
pop
scas
hlt
lea
mov
mov
movs
and
out
mov
inc
jae
movs
jecxz
je
sbb
adc
xchg
push
loope
add
push
enter
mov
je
xlat
(bad)
movs
lea
push
jg
fwait
daa
cs
xor
daa
dec
xor
aam
es
das
push
fwait
je
and
pop
and
push
xor
and
push
mov
jmp
mov
jnp
push
data16
movs
cmps
jg
stos
frstor
push
cmps
pop
aaa
rol
retf
xchg
(bad)
xor
mov
pushf
inc
adc
dec
loope
stos
cmp
fidivr
mov
pop
push
mov
push
and
and
add
ret
fimul
dec
inc
jmp
adc
bound
rcl
mov
(bad)
jg
cmp
dec
int3
mov
jg
cmc
mov
cmp
or
sbb
pop
aaa
int3
out
ss
adc
cmps
adc
jle
mov
mov
sbb
js
aad
or
ins
or
push
dec
xchg
aam
out
lahf
not
jne
sti
or
mov
adc
call
in
mov
fisttp
retf
mov
aad
aaa
add
inc
scas
sahf
sbb
push
mov
jo
or
loope
imul
mov
sub
and
jmp
jo
push
aaa
hlt
add
push
jl
aam
clc
xor
test
adc
pop
add
mov
outs
lahf
call
add
or
xchg
repz
jmp
mov
jle
(bad)
int3
or
jno
xor
push
cmp
ror
ror
ds
push
sti
test
(bad)
mov
xchg
aad
clc
xchg
(bad)
adc
add
(bad)
nop
or
shr
xor
jecxz
or
push
lock
push
mov
cmc
adc
repnz
aaa
fwait
and
push
or
test
sahf
sub
out
sub
sbb
add
mov
ds
mov
cwde
push
js
shr
in
cmp
mov
shl
pop
ficom
loope
cmc
out
stos
pop
mov
aad
iret
jns
cmp
nop
pop
loope
ins
dec
pop
jb
lock
inc
cli
adc
mov
fwait
push
aas
data16
jo
mov
lea
daa
scas
jmp
inc
fcmovbe
ins
js
mov
push
inc
and
or
push
mov
out
pushf
sub
pop
cmps
pop
inc
jle
inc
aam
xor
inc
jns
push
mov
xchg
test
icebp
xchg
push
pop
loopne
pusha
xchg
in
shl
stc
hlt
ret
mul
icebp
int3
sub
add
or
sbb
add
cmps
es
xor
mov
loopne
add
pusha
jmp
dec
ins
jno
and
sub
call
(bad)
jecxz
jmp
test
sub
scas
pop
and
(bad)
push
add
add
jb
jecxz
cli
xor
mov
sar
jb
mov
adc
mov
gs
mov
jmp
or
rcr
addr16
xchg
xchg
adc
mov
or
or
sahf
jmp
push
xchg
adc
inc
fidivr
mov
dec
mov
xor
(bad)
cmc
ins
int3
out
scas
int3
add
retf
test
icebp
mov
sbb
pop
xchg
lea
jne
sar
inc
ja
mov
icebp
jnp
dec
dec
jne
ins
aam
and
jmp
mov
clc
add
das
mov
jge
lock
cmp
push
mov
(bad)
stos
in
(bad)
mov
imul
fcom
nop
cmp
push
adc
add
sbb
pop
push
outs
aaa
rol
stc
test
or
xor
or
ret
adc
pop
mov
loopne
ret
or
retf
nop
nop
add
idiv
and
ins
mov
mov
xor
fisttp
or
popf
icebp
mov
cld
loopne
je
fnstenv
cmp
aas
mov
xor
push
inc
sub
(bad)
sbb
or
jnp
repnz
fistp
sbb
xchg
push
pop
je
lock
stc
mov
mov
jecxz
push
mov
sbb
cmc
push
mov
call
xchg
push
(bad)
in
xchg
adc
nop
dec
ret
dec
test
mov
xor
dec
pop
imul
in
stos
hlt
rcr
add
mov
cmp
lock
loopne
test
adc
enter
mov
sub
mov
adc
xor
hlt
std
imul
loop
and
mov
inc
xchg
and
icebp
int3
mov
dec
ds
push
pop
mov
push
and
mov
dec
xchg
pushf
sbb
xbegin
or
adc
aas
in
and
jbe
adc
pop
mov
cmps
mov
or
loop
xor
xchg
xor
cmp
(bad)
push
pop
inc
mov
dec
retf
loopne
fdiv
dec
cmp
stos
pushf
xchg
iret
retf
out
mov
and
jl
mov
in
dec
lea
mov
ret
mov
nop
enter
dec
ret
in
lea
(bad)
iret
cmc
rcl
lods
das
xor
arpl
xlat
idiv
lea
dec
test
nop
sar
in
sbb
ret
jmp
and
inc
pop
adc
jle
sbb
test
xchg
in
bound
mov
xchg
fbstp
loopne
mov
test
js
and
aam
and
rol
mov
cli
inc
sub
inc
(bad)
jnp
lahf
fst
pop
scas
sbb
pop
or
push
mov
sbb
xchg
xor
push
mov
aaa
ins
jmp
cli
dec
and
add
sbb
clc
jae
inc
fstp
and
jmp
fiadd
ret
and
sub
cwde
jp
fstp
in
in
sbb
mov
cmp
rol
scas
adc
sub
cmp
movs
icebp
jne
fwait
adc
ins
scas
cmps
mov
mov
inc
add
mov
add
mov
shr
jg
xchg
rcl
in
jne
daa
jno
pop
(bad)
xor
ret
mov
aas
or
or
mov
shr
call
push
sub
scas
aas
and
iret
jl
dec
(bad)
mov
xor
adc
push
movs
mov
adc
popf
fld
push
push
je
sub
loop
mov
test
adc
sub
sub
push
lea
lods
jnp
dec
in
push
push
xchg
jmp
mov
pop
ja
or
mov
addr16
inc
mov
pushf
mov
or
(bad)
in
mov
or
xchg
jae
push
fs
pop
in
push
mov
sar
dec
and
out
mov
pop
mov
sbb
mov
ror
jg
repnz
mov
xor
pop
cmp
push
cmps
jge
jge
jecxz
pop
ja
jns
daa
jbe
adc
fisubr
pop
(bad)
fistp
dec
mov
sub
cwde
gs
and
jae
mov
lods
sbb
cmp
inc
repz
xchg
adc
mov
jne
xchg
pop
fs
mov
xchg
xchg
jns
add
int
(bad)
es
mov
xchg
jp
into
aam
push
fisub
jge
or
daa
dec
scas
sar
imul
cli
pop
mov
sahf
iret
nop
es
out
pop
pop
rol
je
xor
rcr
jmp
lahf
jno
fwait
retf
pop
fdiv
ins
jns
shl
dec
or
ret
xchg
mov
ffreep
dec
test
call
xchg
mov
fcom
adc
imul
test
gs
cmp
push
jno
pop
dec
rep
sub
mov
pop
sub
lods
xchg
leave
fst
pusha
inc
add
test
sub
push
dec
mov
pop
xor
dec
xchg
imul
pusha
cmp
push
gs
pop
sub
jmp
and
push
or
loopne
mov
stc
push
push
jge
adc
mov
dec
dec
mov
arpl
mov
jno
rcr
xor
ins
stos
test
rcr
mov
fmul
xchg
sahf
xchg
in
push
lods
push
(bad)
arpl
sbb
xchg
imul
lea
xchg
stos
loop
arpl
pusha
ja
pop
(bad)
movs
js
mov
lods
add
out
or
push
std
or
xchg
addr16
mov
and
retf
cmp
push
jge
(bad)
nop
movs
cdq
mov
mov
(bad)
daa
inc
pop
adc
mov
outs
push
arpl
mov
outs
pop
push
div
stos
sbb
jp
leave
imul
loopne
pop
aaa
jno
call
arpl
or
(bad)
imul
xchg
cmps
mov
ja
(bad)
push
clc
icebp
ret
call
jmp
das
loop
pop
fild
icebp
(bad)
sbb
mov
(bad)
mov
leave
dec
and
mov
loope
inc
imul
mov
repnz
xlat
in
ss
inc
dec
dec
iret
push
shl
xor
or
sub
fs
jo
bound
leave
sbb
dec
push
dec
xchg
lahf
stc
push
fcmovnbe
inc
push
pop
int
in
cli
std
jmp
mov
cld
jmp
cmc
adc
(bad)
or
test
xor
imul
jne
ss
lock
sahf
mov
ins
xchg
jns
out
and
in
inc
inc
(bad)
sub
sbb
xor
mov
push
xchg
add
sub
mov
jns
into
inc
fcomp
jno
ss
fwait
lea
mov
add
into
sbb
rcr
dec
or
sub
jmp
inc
js
pop
clc
fld
iret
or
out
daa
cmp
mov
daa
sbb
add
add
mov
call
cmps
pop
sbb
pop
mov
fisttp
shr
or
je
or
jnp
ds
and
dec
jmp
cli
std
mov
jle
test
enter
jnp
cmps
retf
sub
push
xchg
mov
sub
test
popf
mov
retf
aas
mov
scas
scas
leave
movs
fstp
loope
add
and
inc
mov
lods
jl
or
inc
stos
add
test
mov
sbb
pop
and
pop
(bad)
xchg
dec
mov
int
xchg
adc
add
sub
and
inc
test
loopne
inc
test
stc
cmp
in
int3
pop
mov
inc
pop
dec
pop
scas
mov
out
pop
inc
xchg
push
dec
or
neg
jl
adc
inc
call
retf
and
cmps
xor
(bad)
cmc
jg
rcl
lock
test
inc
pop
or
add
push
imul
and
idiv
sbb
idiv
add
sbb
xchg
sub
cmp
add
jecxz
sub
bndstx
cmp
popa
push
sub
test
mov
mov
xchg
int3
and
jge
xchg
in
lods
fdivr
out
push
add
repnz
pop
pop
shl
test
pop
(bad)
cmp
inc
test
xchg
adc
inc
add
imul
jbe
xor
or
ins
and
cmp
or
stos
adc
into
adc
inc
sbb
mov
pop
ror
cmp
dec
scas
in
cli
mov
add
jecxz
retf
sbb
movs
jae
mov
mov
sub
clc
dec
mov
(bad)
(bad)
sub
arpl
sbb
push
cmp
pop
movs
jbe
or
cmp
test
lahf
xchg
cmc
dec
out
sub
mov
push
neg
(bad)
(bad)
sti
pusha
loopne
jg
dec
xchg
pusha
mov
dec
sbb
retf
adc
add
dec
enter
and
mov
inc
jmp
cmp
push
gs
dec
push
push
inc
es
xchg
and
pop
movs
push
mov
in
loope
add
loopne
adc
enter
cmp
or
cwde
jmp
push
not
enter
sahf
sub
push
(bad)
(bad)
xor
xlat
stos
test
mov
xchg
rcl
(bad)
push
dec
sub
lds
aam
inc
mov
jbe
add
ja
sbb
mov
mov
push
leave
sbb
rol
add
dec
mov
fmul
lahf
add
mov
and
mov
pop
das
mov
scas
cs
std
arpl
adc
pop
adc
jp
ret
sub
add
(bad)
sbb
test
jbe
and
in
mov
(bad)
jnp
xor
dec
adc
mov
ficom
icebp
sub
dec
das
mov
mov
cmp
and
stc
outs
cmc
mov
es
push
icebp
cmp
mov
xor
stc
sub
xchg
mov
popf
or
ret
inc
aam
fwait
push
and
fisttp
add
sbb
cmps
cmp
and
sbb
add
inc
mov
mov
sub
data16
add
jbe
movs
and
push
jle
push
ret
xchg
sar
mov
rcr
aas
pop
aad
jne
loope
xor
sbb
stc
xlat
jmp
shl
dec
pop
jle
mov
pushf
xor
movs
jle
(bad)
loop
sahf
cdq
xor
in
sar
hlt
(bad)
cs
addr16
cld
(bad)
fwait
inc
mov
clc
mov
add
sbb
fsubr
xchg
jnp
cli
loope
(bad)
sub
push
jno
mov
xor
add
push
stos
inc
js
stc
std
aaa
sub
xor
jo
adc
aaa
and
outs
inc
call
mov
adc
daa
ja
fwait
push
(bad)
jp
jns
sbb
push
xor
lahf
pop
inc
mov
jns
mov
mov
inc
lock
cmp
div
aad
loopne
jge
lea
stos
push
inc
mov
ja
sub
adc
in
push
cmp
pop
shl
mov
add
adc
or
mov
inc
add
adc
sbb
add
cmp
push
call
mov
cmc
push
daa
or
jns
jle
cmp
and
jnp
ins
or
sbb
add
lahf
or
push
cli
mov
mov
mov
cli
sub
aam
fild
xchg
test
in
xchg
iret
enter
mov
xchg
pop
xor
xchg
aaa
mov
jo
js
call
or
loop
push
mov
push
mov
cmc
mov
and
or
shl
sbb
mov
iret
imul
ror
in
cmp
shl
dec
stc
adc
and
mov
in
dec
jmp
daa
sub
mov
loope
repnz
xchg
jl
sbb
or
mov
sbb
fimul
pop
imul
daa
and
pop
mov
adc
mov
pop
gs
xor
lahf
fs
repnz
(bad)
push
sbb
ds
or
fdivp
gs
dec
ss
mov
dec
dec
mov
gs
or
push
jo
ret
les
cmp
push
repnz
adc
in
lods
mov
fimul
xchg
ss
push
imul
bound
push
push
fs
mov
test
xchg
inc
pusha
int
test
cli
xchg
sub
sub
xchg
xor
aas
mov
pop
push
pop
inc
xchg
(bad)
mov
out
jo
shr
gs
jle
mov
push
jbe
fimul
shl
push
xor
fwait
jmp
lds
and
test
sbb
movups
mov
dec
push
cmps
sub
scas
outs
or
mov
daa
dec
hlt
aam
sub
jne
push
mov
out
pop
mov
das
sub
popa
out
cmps
out
mov
push
jg
push
aam
and
pop
adc
mov
icebp
dec
adc
jmp
or
lods
sbb
rcl
inc
in
int
scas
sbb
cmc
push
mov
pop
fisttp
mov
call
outs
scas
aad
test
or
icebp
sahf
jae
jmp
mov
mov
xchg
ds
cmp
add
mov
outs
sbb
and
dec
push
movs
jle
xor
into
pop
mov
stc
inc
jbe
dec
test
cli
js
pop
cs
inc
cmps
pop
outs
cmps
mov
ret
mov
imul
sbb
adc
scas
stos
inc
cmp
jle
loopne
cs
stc
push
xchg
shl
out
stc
outs
imul
ja
in
mov
sbb
add
push
(bad)
in
ins
mov
push
in
xchg
xchg
xchg
loope
js
jle
mov
enter
mov
dec
add
and
test
arpl
jmp
cli
rcl
push
outs
imul
cmps
clc
dec
test
outs
add
fwait
les
daa
jbe
retf
push
shl
sbb
inc
repnz
push
xor
mov
push
loop
(bad)
pop
popf
test
jb
xchg
test
push
or
std
call
pop
sub
enter
inc
add
cmp
test
rol
xchg
and
(bad)
inc
cmps
in
aas
pop
in
out
pop
ja
shl
bound
jle
enter
sar
pop
jmp
shl
cmp
les
push
fidivr
adc
into
and
fdivr
cs
jp
mov
outs
cmp
fistp
mov
adc
cld
pop
sub
loop
cmp
add
loopne
test
sti
dec
and
push
xchg
call
push
xor
(bad)
and
push
cmp
test
mov
sbb
ins
xlat
sbb
jmp
jp
mov
inc
push
nop
dec
in
pop
fidiv
iret
lahf
lock
push
mov
or
stos
mov
nop
mov
mov
xchg
mov
sub
mov
jle
jecxz
in
aas
push
push
shl
sub
jnp
pop
pop
inc
loopne
sub
pop
rcl
or
cmp
jnp
mov
movs
stc
pop
fld
sub
sub
mov
inc
repnz
and
enter
jg
ret
cmps
pop
xchg
xchg
inc
cmp
adc
outs
pop
pop
shr
mov
or
inc
fisubr
in
cmp
sti
ds
mov
jge
ror
xchg
pop
sti
sbb
sub
cmp
mov
pop
cwde
dec
aam
(bad)
ss
shr
lds
cmps
xor
daa
imul
push
xchg
jnp
movs
ss
sub
pop
xchg
movs
push
retf
inc
les
test
pop
xor
shr
test
(bad)
leave
push
jmp
sahf
push
pop
push
out
sub
mov
xor
or
jl
jmp
xor
or
loopne
jnp
inc
add
mov
lods
push
movs
cmp
cmp
stc
jl
xlat
shl
adc
in
dec
jmp
ins
pop
outs
int3
out
stos
sub
fsub
mov
imul
mov
mov
lds
into
sbb
push
cld
inc
gs
xchg
neg
sub
ss
cmp
fisub
push
cmp
(bad)
in
imul
jnp
popa
push
inc
movs
out
cwde
or
out
test
xchg
mov
aaa
rcr
aas
hlt
xchg
mov
inc
stc
lods
jo
mov
dec
pop
or
stc
xchg
out
jmp
cmp
loop
adc
sbb
inc
into
nop
mov
mov
aas
not
push
pop
xor
dec
mov
popf
mov
addr16
arpl
push
in
sbb
(bad)
jl
inc
jne
in
and
cwde
(bad)
hlt
movs
add
es
push
jg
mov
and
pop
int
inc
popf
lods
pop
xchg
xor
ret
test
or
(bad)
scas
push
outs
out
mov
mov
push
mov
xchg
xchg
push
xchg
adc
movs
repnz
mov
adc
loopne
mov
cmp
out
sbb
jle
pop
push
mov
cdq
mov
pop
cmp
call
stos
cmp
sub
mov
cs
inc
fisub
push
push
fisub
push
test
pop
xchg
out
xchg
xchg
scas
xchg
inc
mov
push
jae
add
push
push
mov
imul
push
sbb
jo
mov
retf
neg
mov
stos
jo
out
cmp
mov
jb
pop
enter
mov
lods
add
aaa
cmp
mov
bound
mov
sbb
push
arpl
jle
dec
add
mov
lods
movaps
dec
add
and
adc
mov
pusha
ror
mov
jnp
repz
fsub
ret
aaa
enter
lods
ret
dec
adc
mov
cmp
mov
jp
pop
inc
retf
imul
mov
and
push
jbe
sbb
clc
movs
sub
xchg
jmp
dec
mov
jg
xchg
fwait
push
jmp
sub
clc
mov
xor
sub
icebp
xchg
mov
fldlg2
rcl
cmp
nop
(bad)
cld
call
xlat
lods
sbb
ins
ds
mov
out
ffree
pop
or
shl
adc
stos
jae
fdivr
repz
jno
push
cmc
idiv
pop
jae
pushf
fisub
or
mov
call
or
dec
jge
call
and
ja
and
mov
xchg
fucomi
cmp
jp
ret
jmp
test
scas
add
and
push
loop
pop
push
stos
or
or
js
mov
xchg
or
push
lea
neg
les
xor
sbb
mov
xor
or
dec
push
cli
mov
jns
pop
push
inc
mov
inc
add
mov
push
std
jg
sar
mov
adc
jnp
adc
fsubr
cmp
push
dec
and
ds
neg
add
push
mov
test
cmps
movs
xchg
jmp
dec
lods
and
mov
jno
idiv
punpcklbw
fcom
and
retf
add
loop
jb
mov
adc
repz
pop
nop
fst
dec
and
xchg
scas
inc
cmps
adc
fucomp
xchg
adc
xchg
add
pop
sub
sete
es
pop
into
bound
es
retf
jecxz
out
jo
jmp
sbb
inc
or
sar
dec
or
dec
sar
jo
ficom
jnp
call
je
bound
and
(bad)
dec
pusha
dec
cdq
pop
push
daa
mov
mov
(bad)
std
mov
mov
cmp
(bad)
jecxz
fdivr
push
adc
adc
pop
lock
xor
mov
push
sbb
sub
inc
lock
sbb
ds
push
or
arpl
ds
fs
xchg
mov
sbb
or
in
mov
cdq
jmp
push
xor
test
mov
sbb
push
movs
scas
in
xchg
js
dec
popa
loopne
test
and
cmp
cld
inc
dec
lock
js
outs
imul
in
mov
or
scas
and
xor
fsub
adc
fadd
jecxz
(bad)
cmp
gs
psllw
imul
fcomp
lahf
pusha
popf
pop
ret
std
mov
mov
das
sub
aas
jp
gs
pop
fld
(bad)
int
test
rcl
xchg
lds
jnp
pusha
daa
jmp
repnz
adc
mov
mov
pop
or
lahf
scas
cmp
rol
in
es
pop
or
pushf
sbb
jl
aaa
jb
xchg
imul
adc
and
push
arpl
dec
jbe
pop
mov
xchg
mov
lods
into
sbb
stos
js
mov
inc
(bad)
xor
in
hlt
lahf
pop
mov
mov
out
int
cmp
dec
ret
mov
in
test
dec
fwait
out
xchg
cs
mov
nop
or
dec
sub
mov
shl
iret
aam
pop
mov
mov
inc
pop
pop
add
ret
mov
push
or
mov
push
dec
in
mov
lea
ss
cs
mov
retf
nop
mov
lahf
cs
jmp
je
xchg
jnp
(bad)
push
(bad)
mov
pop
movs
mov
dec
cmp
cmp
lds
leave
cli
cmp
fld
data16
int
stos
push
mov
les
ja
mov
xor
jbe
jecxz
pop
stc
in
adc
sub
cdq
out
mov
aaa
dec
pop
addr16
xor
jmp
pop
mov
sbb
mov
sub
dec
mov
daa
sub
retf
in
push
je
push
test
push
cmc
cmp
sbb
retf
mov
adc
fdivr
or
pop
pop
fimul
stos
icebp
jbe
pop
jo
dec
rcl
hlt
push
push
xchg
movs
sbb
pop
push
adc
xchg
push
mov
mov
mov
popf
jbe
es
cwde
mov
lods
shr
add
lds
pushf
sbb
jne
mov
outs
sbb
dec
jmp
das
aad
cwde
pop
mov
sub
jo
outs
lock
sbb
jbe
test
pushf
add
jge
inc
mov
retf
adc
fcmovu
loope
stos
bound
push
das
aaa
adc
pop
(bad)
mov
and
add
enter
or
lods
call
and
sahf
or
or
push
aam
repnz
push
je
aaa
cmp
(bad)
in
icebp
mov
ja
scas
jne
popf
jmp
outs
shl
push
sub
push
add
mov
mov
addr16
ins
sbb
(bad)
xchg
mov
aas
call
(bad)
push
ror
mov
jmp
(bad)
dec
shl
mov
adc
lock
pop
mov
pop
out
push
inc
repnz
sub
mov
call
pop
ins
xor
idiv
stos
sub
mov
or
into
(bad)
xor
jno
inc
adc
rcr
cmp
cli
and
shl
std
fst
jmp
cmp
data16
out
jae
xchg
cmps
bound
jae
jmp
psllw
jo
and
pop
mov
loopne
jae
cmps
stos
mov
aas
xor
push
pop
push
aam
cmp
push
inc
pop
xchg
rol
cld
outs
or
pop
sahf
sub
xchg
sbb
push
cld
adc
push
iret
les
inc
pop
mov
mov
aaa
or
in
push
cld
push
or
arpl
mov
shr
xor
pop
xor
sahf
loope
enter
fisttp
cmp
dec
lods
adc
stc
mov
dec
jmp
sbb
hlt
inc
mov
int
stos
mov
dec
in
mov
sub
outs
push
adc
and
and
stos
lock
pcmpeqw
add
and
fnsave
aas
dec
lock
stos
sti
shl
vcvtsi2ss
ret
adc
outs
mov
mov
pop
adc
mov
call
inc
mov
mov
pop
enter
jg
imul
pop
or
hlt
sub
retf
in
sbb
daa
sbb
loop
das
mov
cmp
or
xor
enter
jge
les
(bad)
or
rep
mov
push
pop
mov
imul
mov
pop
xchg
sbb
mov
sub
xor
in
repnz
mov
cmp
popa
fs
sub
inc
mov
inc
sbb
ins
ret
mov
mov
xchg
jle
or
aad
mov
sub
scas
pop
ds
jge
jle
frstor
mov
cld
gs
ror
push
sub
fdivp
sbb
ins
jno
call
inc
cmp
xlat
mov
xor
fs
sbb
shr
imul
pop
sub
lods
add
out
jg
mov
xchg
sete
xor
sbb
pop
fcmovnb
sbb
jb
outs
ficom
out
popf
pop
push
ins
(bad)
or
xor
mov
jo
ret
mov
leave
sbb
sbb
pushf
xchg
push
mov
pop
cld
movs
mov
mov
adc
(bad)
outs
push
adc
call
mov
cmp
mov
mov
test
lock
loopne
das
xchg
push
mov
lock
pop
cmp
push
aaa
ret
inc
sub
xchg
or
aas
das
add
xor
iret
add
jae
xchg
loop
lock
inc
xor
push
jmp
into
pop
add
mov
movs
clc
adc
dec
out
mov
clc
(bad)
arpl
dec
dec
loope
outs
and
addr16
xchg
(bad)
jmp
shl
and
mov
mov
sub
add
imul
fdiv
sti
arpl
add
inc
or
or
fwait
std
jg
jb
cmp
sbb
test
sub
mov
cdq
push
(bad)
pushf
xchg
inc
(bad)
movs
xchg
stos
pop
lea
inc
out
fild
sbb
inc
dec
test
inc
retf
xchg
out
sub
pop
sub
mov
lods
adc
arpl
cmp
inc
lds
sbb
push
(bad)
push
pop
jnp
mov
iret
call
cmp
retf
xor
push
movs
ss
sub
div
(bad)
jecxz
std
or
mov
cmp
xor
mul
mov
lea
jo
pop
or
in
jo
or
mov
mov
xlat
xor
stos
(bad)
pop
popa
dec
push
popf
or
or
addr16
aaa
stos
jle
add
lds
cmc
xor
out
fucom
fsub
ins
ret
jno
jmp
sub
arpl
jb
lahf
xor
lds
add
inc
fsin
test
repz
sbb
sub
in
push
cmp
jne
dec
test
outs
jo
in
scas
push
fisttp
sahf
stos
cmc
mov
xlat
pop
mov
sub
or
and
add
dec
pushf
aam
lock
sahf
sbb
and
(bad)
mov
stos
div
inc
iret
in
in
push
cmps
shl
(bad)
sub
movs
jns
lods
ror
popa
outs
(bad)
(bad)
popa
lds
lea
jmp
jae
jle
lods
dec
addr16
rcl
fimul
into
jl
mov
inc
rcl
or
lahf
jns
mov
test
shl
mov
dec
and
sub
ds
popa
dec
iret
xlat
fld
pop
movs
(bad)
stos
(bad)
dec
lds
test
retf
add
xor
iret
mov
das
xchg
ficomp
or
scas
ret
mov
les
push
xor
adc
mov
jne
fstp
pop
or
sbb
aam
mov
jg
out
inc
call
enter
jle
sahf
ror
out
jge
pop
lds
or
adc
mov
pop
pop
xchg
mov
rcr
nop
add
gs
mov
or
inc
cmp
dec
or
aad
push
cmp
js
jno
mov
bound
jecxz
aam
inc
jle
xor
and
dec
pop
inc
jb
daa
jne
xchg
nop
movs
xchg
pop
mov
scas
push
or
adc
dec
mov
aad
and
sbb
mov
jne
and
cmp
xor
or
adc
out
pop
lock
les
add
inc
adc
jmp
adc
fnstsw
push
push
mov
jbe
loope
mov
nop
sub
cwde
cmc
dec
sub
(bad)
imul
(bad)
mov
jbe
mov
dec
jne
mov
or
shl
lea
mov
loope
push
adc
dec
jle
clc
cwde
js
jl
and
aad
retf
iret
inc
ins
xor
cli
jmp
rol
jns
mov
push
imul
and
stos
data16
ds
add
iret
in
loop
lds
inc
sbb
int3
jae
hlt
aam
out
pusha
push
ret
cmp
sahf
ja
rol
xor
sub
push
sbb
stc
xchg
jb
mov
in
push
sbb
jecxz
mov
inc
sbb
pop
xchg
sub
mov
cmp
jno
mov
neg
popf
jns
bound
mov
ret
jg
xor
jo
or
adc
stos
adc
mov
stc
rol
sbb
add
jb
fild
sub
loopne
inc
jo
pusha
imul
jge
ins
aaa
inc
jmp
popf
mov
add
add
scas
add
and
push
stos
mov
scas
daa
stos
jae
outs
mov
mov
cmp
and
call
mov
cmp
mov
dec
mov
pop
popf
mov
loop
in
mov
sub
dec
test
sub
mov
jg
rcr
test
or
and
sbb
dec
movs
dec
lods
rcr
xchg
and
mov
cld
aas
(bad)
jno
and
push
clc
lods
(bad)
dec
scas
fisubr
dec
inc
and
adc
or
sub
mov
ud2
or
mov
aas
inc
imul
test
xchg
add
jmp
sub
sub
sub
pop
fldcw
add
std
sbb
out
in
xchg
lock
mov
enter
aad
adc
mov
neg
mov
addr16
mov
pop
call
int3
int
or
sbb
dec
mov
movs
add
ret
mov
xor
dec
add
sbb
ret
lods
cmps
(bad)
pop
mov
dec
dec
arpl
loopne
xlat
ficom
xor
mov
jno
ficom
pop
jbe
data16
push
xchg
dec
add
xchg
xchg
out
sub
gs
sbb
xor
mov
in
mov
mov
mov
daa
mov
test
xor
rol
xor
cmp
iret
cli
add
bound
inc
push
or
fmul
jg
dec
add
dec
ss
sub
sbb
aaa
mov
out
or
clc
stos
mov
push
popf
bound
retf
movs
pop
sbb
aas
jecxz
jne
xchg
and
sub
hlt
pop
rcl
jecxz
mov
jmp
mov
adc
outs
mov
pop
push
or
jb
test
or
inc
femms
xor
gs
or
jbe
bound
fist
aaa
test
pop
test
and
xor
mov
jmp
ret
xchg
popf
out
aam
leave
pushf
jno
fs
mov
mov
rcr
leave
aad
call
scas
ret
(bad)
sbb
daa
pop
mov
int3
in
inc
ins
sti
imul
mov
push
imul
repz
rcl
pop
mov
mov
lods
adc
jne
nop
sub
in
jno
adc
cmp
mov
hlt
ret
dec
bound
in
sub
xchg
ss
imul
push
(bad)
jle
pop
add
(bad)
push
inc
mov
xor
xlat
popa
lds
mov
jl
or
inc
mov
jmp
dec
push
pop
and
xchg
mov
pop
addr16
scas
mov
clc
xchg
pop
sub
add
xchg
adc
push
mov
(bad)
imul
sbb
es
push
outs
mov
xor
mov
fimul
push
movs
push
push
xchg
pushf
clc
fistp
inc
(bad)
repnz
(bad)
in
xor
sub
mov
mov
xor
cmp
pop
int3
outs
aad
(bad)
aaa
out
mov
add
sbb
iret
pop
xchg
das
inc
mov
xchg
jns
mov
in
sbb
cmp
or
add
fst
js
push
mov
pusha
pop
sar
xchg
xchg
add
push
test
shl
je
sbb
dec
hlt
xor
div
add
sbb
cdq
fcomi
adc
ins
pop
jae
loopne
sub
add
repnz
sub
jmp
clc
jo
push
jmp
pop
sub
pop
adc
xlat
sub
jns
jle
mov
imul
mov
ja
ret
adc
mov
add
(bad)
cwde
cli
pop
inc
push
xor
sub
dec
test
push
cmp
mov
stos
xor
cmps
pop
and
(bad)
scas
ficomp
retf
mov
push
cmp
movs
fisttp
sbb
(bad)
in
and
xchg
imul
xor
mov
shr
mov
xor
out
push
scas
pop
mov
loopne
retf
or
cmps
xchg
fist
movs
sar
jno
sbb
imul
dec
xor
dec
retf
dec
mov
test
shl
xor
movs
dec
fsub
pop
icebp
out
call
adc
push
aas
(bad)
ret
into
mov
inc
std
adc
mov
or
test
sbb
cmc
rcl
ss
loop
cld
es
in
out
and
xchg
mov
dec
mov
movs
xchg
inc
push
pop
push
fadd
dec
scas
add
addr16
add
es
add
mov
loopne
fstp
lahf
dec
enter
and
cmp
ficom
ret
mov
xchg
push
aad
pop
mov
dec
mov
nop
retf
ins
jmp
mov
dec
ret
aad
data16
xlat
add
daa
ret
push
mov
mov
cmp
ins
shl
sbb
xor
daa
cwde
rcl
adc
imul
and
pop
fcmovb
mov
push
mov
je
mov
or
push
cdq
jl
test
(bad)
adc
push
rol
dec
xor
lahf
into
jae
pop
xchg
scas
daa
mov
out
add
ja
outs
cmps
dec
les
adc
mov
lds
mov
out
jmp
out
hlt
adc
mov
dec
aad
inc
lods
gs
fld
arpl
not
pusha
(bad)
jo
xchg
and
jbe
sbb
xchg
ficomp
push
jb
mov
retf
out
retf
in
loop
and
ret
mov
xchg
jle
push
push
mov
dec
psllq
mov
call
adc
jg
mov
fnsave
shl
fwait
xchg
xchg
add
pop
nop
push
mov
shr
xchg
sbb
mov
(bad)
lea
or
in
xor
call
mov
mov
pop
mov
xchg
ds
or
push
js
nop
scas
iret
int3
stc
inc
xor
hlt
and
push
adc
ja
outs
div
faddp
pop
xchg
push
shl
mov
cmp
data16
jp
ret
ror
iret
inc
adc
cmp
cmp
call
sbb
jge
fisub
mov
popf
int3
popa
out
dec
test
mov
je
arpl
mov
loopne
dec
and
mov
adc
push
into
retf
inc
mov
bound
pop
pop
ss
aam
aad
test
push
cmps
cmps
pushf
mov
cmps
fldcw
adc
lea
leave
cmps
mov
mov
pop
sti
in
fiadd
jno
jmp
xlat
xlat
mov
test
and
call
sti
dec
or
mov
in
mov
push
sub
punpckhwd
mov
in
xchg
cmp
jp
or
cdq
adc
cmp
(bad)
dec
mov
adc
pushf
and
mov
sbb
mov
jecxz
adc
loop
pop
mov
dec
loope
jae
(bad)
pop
xchg
mov
pop
fwait
dec
jns
mov
mov
sti
dec
mov
jbe
fcomi
add
xor
dec
lock
adc
out
mov
adc
cmp
add
aad
push
lods
fstp
in
mul
push
cmp
or
movs
push
daa
push
push
xchg
push
pop
or
sbb
dec
std
dec
data16
jecxz
into
and
mov
sahf
push
jno
or
add
stos
mov
aam
test
imul
mov
fstp
loope
push
addr16
or
push
imul
scas
in
dec
xor
dec
mov
scas
inc
sub
fldcw
cwde
xchg
pop
addr16
outs
pop
clc
movs
fldcw
mov
in
addr16
rcr
loopne
mov
xor
popf
test
xor
icebp
xchg
xchg
xchg
mov
bound
pusha
psubb
pop
mov
push
shl
ins
xlat
adc
(bad)
std
sub
inc
aad
add
xchg
jle
jno
mov
xor
mov
xchg
clc
shl
push
ja
jecxz
and
jp
jmp
inc
sbb
ror
mov
imul
mov
mov
adc
adc
or
sbb
test
dec
call
or
mov
and
arpl
jp
inc
test
dec
pop
mov
ds
hlt
enter
jbe
stos
pop
pop
add
dec
xor
and
ja
das
das
xor
rol
and
sbb
cmp
out
je
cdq
mov
(bad)
(bad)
in
out
xor
pop
scas
push
test
fwait
dec
test
shl
dec
ds
push
mov
pusha
mov
and
stos
mov
loopne
adc
cmp
ret
jg
cmps
(bad)
xlat
mov
fisttp
lock
and
add
sub
mov
sub
xor
push
mov
jne
mov
cs
out
add
or
add
js
dec
dec
push
mov
lea
jle
ja
pop
cli
mov
hlt
mov
lea
add
outs
adc
cli
movs
adc
mov
int3
sbb
push
lahf
push
lds
mov
mov
test
arpl
mov
xor
test
dec
mov
in
cmp
cmp
std
sub
jecxz
popa
sub
fwait
fs
(bad)
lods
mov
mov
sub
dec
add
loop
pop
and
daa
scas
loop
sbb
mov
scas
adc
lock
lods
jns
pop
xchg
lahf
(bad)
pop
xor
cli
push
xchg
repz
pop
cmp
iret
and
mov
and
cmp
pop
and
les
outs
aad
cs
in
rcr
pop
inc
xchg
fwait
mov
in
ret
add
js
int3
mov
das
test
cmp
mov
push
dec
in
inc
outs
dec
inc
xor
cwde
ja
cwde
jge
test
dec
inc
pushf
adc
xor
mov
ret
push
sbb
adc
mov
xor
je
fld
in
pop
inc
stos
in
xor
fdivr
jne
mov
or
mov
mov
jle
inc
outs
add
pop
push
jae
repz
cmc
jg
xor
jge
sbb
hlt
jmp
push
xor
adc
lods
cs
scas
movs
jno
out
jl
daa
pop
(bad)
xor
adc
out
adc
shl
cs
test
fs
cmc
mov
jns
mov
aam
cmp
inc
sbb
adc
clc
enter
adc
xor
push
sbb
dec
std
add
push
mov
enter
sub
fiadd
(bad)
mov
pop
inc
xchg
icebp
sti
mov
out
push
add
pop
cmps
cmps
cmc
cmps
pop
push
push
or
xor
call
xor
mov
add
outs
sbb
enter
and
xchg
sub
pop
jp
jmp
jecxz
shl
int3
push
shl
fmulp
ret
sub
push
fisubr
jb
xchg
sub
stos
and
str
inc
into
cmp
push
jg
popf
push
xchg
lds
pop
xor
mov
pop
rcl
bound
or
sub
movs
mov
into
inc
add
cmc
sub
pop
dec
imul
xchg
clc
in
ficom
rcr
stos
ss
loop
mov
push
mov
push
adc
stos
mov
and
call
xor
add
mov
adc
push
or
inc
inc
xchg
out
sbb
pop
std
sbb
cmp
xor
nop
(bad)
xacquire
test
push
imul
lods
pop
adc
cmps
inc
call
and
or
sbb
add
push
mov
gs
inc
(bad)
mov
aaa
mov
push
and
mov
mov
pushf
mov
dec
call
fldenv
(bad)
(bad)
ret
clc
pop
shl
test
cmps
sti
stos
and
xchg
jge
jae
push
fcomp
mov
pop
repz
dec
cmp
dec
mov
adc
push
imul
xchg
and
fmulp
cmc
inc
ret
in
xor
mov
xor
in
push
das
add
dec
inc
mov
emms
pop
sti
pop
aaa
or
aas
icebp
fiadd
ins
push
in
jne
pop
call
or
pop
adc
test
mov
mov
std
into
ss
scas
sbb
test
add
cmp
or
out
xchg
fisttp
add
shl
cmps
inc
rcl
adc
fwait
cmc
push
popa
cmp
loope
sub
es
sub
push
jbe
pop
(bad)
xchg
cmp
xor
sar
rol
mov
into
in
aam
pop
xchg
xchg
aaa
sbb
cmps
jb
(bad)
imul
xchg
sub
sub
div
rcl
popf
adc
and
scas
cdq
mov
push
leave
sbb
xor
sbb
push
sub
pushf
or
cmp
sub
or
adc
imul
fs
hlt
cmp
dec
loope
(bad)
cmp
xchg
pop
inc
test
xor
sbb
add
adc
fs
mov
(bad)
call
mov
nop
inc
cmps
jl
sbb
cwde
retf
jne
(bad)
nop
xchg
aaa
mov
xchg
sbb
jg
daa
pop
in
cmp
stos
int3
jb
push
mov
sbb
outs
cmp
addr16
imul
mov
idiv
inc
movs
add
jae
dec
mov
mov
scas
jno
push
xchg
mov
loopne
sbb
mov
pop
mov
ret
xchg
push
pop
jmp
pop
xor
inc
jno
mov
out
enter
out
and
add
and
call
cli
sbb
sbb
popa
daa
mov
pop
inc
dec
(bad)
in
mov
add
in
mov
call
ins
sahf
cmovnp
cmp
rol
cmp
xchg
or
fist
cmps
mov
jnp
lods
adc
ins
lods
retf
shr
imul
sar
popa
jecxz
sub
add
not
and
or
xchg
mov
xchg
arpl
xor
add
lock
sbb
or
xchg
jmp
inc
xor
movs
les
ret
and
aaa
ret
call
push
push
mov
xor
add
sahf
int
call
adc
ins
rcr
ds
fldcw
in
daa
outs
frstor
or
(bad)
sti
add
or
mov
xchg
ins
jmp
xchg
xchg
xchg
xrelease
sub
and
jle
popf
mov
inc
xchg
sahf
dec
aam
ret
jbe
mov
mov
outs
cmp
das
lods
mov
adc
daa
out
or
popa
and
call
push
or
es
adc
sbb
in
xchg
mov
cdq
push
jns
add
jmp
xor
lods
pop
test
loopne
adc
xchg
int
push
sub
pop
test
jne
sar
push
icebp
cmp
loopne
in
in
mov
and
ds
jnp
jne
pop
cmp
call
lods
dec
mov
xor
mov
jp
sbb
sti
mov
xchg
push
jmp
mov
sub
lods
jb
push
xchg
pop
push
fdiv
xor
xor
not
and
pop
mov
sti
push
dec
std
movs
add
loop
inc
mul
test
ins
stos
or
pop
inc
push
in
dec
in
ret
or
popf
push
xchg
lahf
jo
xor
dec
data16
out
jg
into
dec
mov
inc
gs
xchg
mov
les
repnz
sbb
or
push
imul
daa
xchg
(bad)
daa
xor
cwde
add
retf
xchg
bound
daa
jmp
fcmove
adc
rol
xchg
inc
push
mov
retf
in
stos
jae
xchg
fs
iret
jmp
cmp
out
cmp
fisttp
adc
call
mov
sub
mov
test
ins
pushf
cdq
pop
aas
mov
cli
sub
dec
(bad)
xlat
pop
fmul
nop
inc
add
inc
pop
jmp
jmp
cs
mov
imul
xchg
sub
jl
loope
dec
sahf
cmps
in
aaa
clc
retf
mov
popw
dec
popf
aam
into
pop
test
cli
out
mov
inc
sti
pop
inc
pop
add
push
retf
je
dec
test
mov
ins
dec
ins
mov
mov
cmc
lods
sub
mov
aad
cmp
mov
dec
dec
stos
adc
push
and
push
jmp
jnp
pusha
mov
imul
cmp
xchg
push
push
int3
ins
ror
xchg
enter
dec
pusha
push
pop
out
out
cmp
or
and
push
rol
jbe
das
pop
push
ds
bnd
lea
ja
not
cmp
xor
push
es
movs
and
dec
dec
pop
(bad)
or
retf
clc
iret
pop
out
sbb
(bad)
dec
jle
aas
cdq
mov
push
cs
sub
fstp
inc
shr
ficom
outs
shl
sub
lahf
mov
mov
std
cmp
call
add
push
dec
xor
loopne
ret
fs
add
arpl
in
or
icebp
mov
retf
mov
(bad)
lds
scas
fidivr
dec
stos
mov
mov
cmp
inc
mov
jbe
jno
inc
mov
jbe
or
std
push
cmp
(bad)
pop
jbe
bound
xchg
sub
mov
push
xchg
or
mov
in
pop
aad
mov
mov
jge
test
jp
xchg
retf
mov
and
fs
stc
in
xor
ins
out
movs
sahf
jbe
inc
mov
cmp
and
dec
cwde
mov
sar
add
mov
out
sub
sub
xlat
aam
adc
add
(bad)
sbb
test
out
out
imul
pusha
add
mov
fst
and
and
aaa
(bad)
jno
sub
fisubr
xor
push
and
xor
retf
sub
(bad)
stc
stos
outs
jno
xchg
and
cld
mov
push
xchg
inc
and
sub
rcr
pop
aad
mov
jmp
pop
xchg
cmps
stc
hlt
jns
xchg
or
cdq
sbb
outs
outs
inc
adc
push
push
test
xor
xchg
pop
aad
push
push
jecxz
fninit
jnp
cmp
push
adc
push
push
cmps
sahf
scas
cmps
data16
mov
test
and
loop
push
add
xor
mov
cld
jmp
xchg
rcr
sbb
dec
out
pop
mov
add
xor
mov
xor
scas
push
lods
(bad)
(bad)
(bad)
jmp
and
loopne
shl
inc
(bad)
ficom
lea
shl
outs
leave
icebp
lock
or
inc
outs
adc
xor
fbld
ins
inc
in
daa
xchg
cmc
jno
and
inc
sbb
movs
mov
repnz
mov
std
test
(bad)
xchg
daa
in
loopne
ins
mov
dec
out
push
xor
(bad)
arpl
xchg
push
inc
inc
inc
add
ja
pop
add
push
(bad)
and
aas
rol
jno
cmp
xchg
mov
mov
(bad)
add
loop
sbb
or
or
stos
inc
test
nop
xchg
pop
dec
aad
ret
or
add
and
cwde
dec
in
push
(bad)
std
mov
push
cmp
outs
push
test
adc
mov
pop
sub
inc
push
pushf
xchg
cmp
(bad)
mov
dec
xchg
inc
or
out
mov
inc
mov
jmp
repz
hlt
enter
(bad)
cmp
leave
push
mov
cmc
sub
pop
pop
stos
stos
cmps
fcom
push
sti
cdq
shl
sub
dec
icebp
cdq
fs
add
adc
xor
pop
stos
das
(bad)
mov
and
mov
add
scas
(bad)
lock
cmp
test
call
or
mov
pop
ret
addr16
outs
loopne
jp
xchg
sbb
mov
test
push
mov
call
mov
daa
sub
push
jns
mov
enter
mov
cld
rol
push
leave
sub
mov
out
mov
sub
fs
les
sub
add
xor
adc
mov
or
inc
fld
xor
sub
xchg
jmp
mov
or
add
push
dec
push
outs
sub
cmps
dec
in
and
inc
fwait
mov
test
mov
pop
or
inc
push
mov
mov
loop
call
popa
dec
or
mov
cmp
aam
loopne
push
cmp
mov
push
inc
cmp
call
xor
fsubr
and
test
push
or
aaa
and
mov
ss
cwde
jno
push
ficomp
vmovaps
cdq
sub
adc
imul
rol
mov
punpcklwd
mov
bound
xchg
inc
mov
int3
mov
adc
add
sub
mov
std
inc
gs
stc
test
movs
data16
cmc
es
outs
xlat
pusha
push
push
push
or
stos
sti
sti
cmp
rcr
nop
jecxz
jp
sbb
mov
push
sbb
sbb
bound
loop
sbb
repz
mov
fbstp
xchg
mov
lock
out
cmc
jg
test
adc
sti
int
cmps
repnz
das
in
mov
mov
cwde
or
lahf
pop
call
call
pop
leave
fld
ins
push
xchg
cmp
xor
enter
dec
inc
jns
movs
call
(bad)
and
mov
dec
mov
cmps
ror
sub
data16
arpl
out
cld
shl
cdq
fcomp
lea
mov
fwait
int
fld
es
out
test
call
ret
mov
es
into
xor
loope
lods
cld
xor
neg
(bad)
out
clc
mov
xlat
or
or
(bad)
jmp
jle
call
mov
and
int
dec
pop
jmp
pop
leave
xchg
mov
fs
xor
test
pop
popa
scas
push
mov
jmp
push
inc
scas
pushf
sti
ds
jl
sbb
mov
rcl
ss
in
setle
rol
push
(bad)
pop
rcr
xchg
aas
push
(bad)
add
adc
jae
pop
repnz
mov
jmp
adc
xor
lds
and
add
icebp
sbb
loopne
cs
xor
jmp
repz
inc
rcr
xchg
xor
adc
mov
lods
repnz
test
jecxz
imul
(bad)
stc
adc
cmp
addr16
jmp
nop
xchg
mov
fwait
pop
leave
adc
dec
movs
loop
mov
cdq
mov
mov
cmp
cmp
sbb
adc
or
push
les
movs
in
mov
in
inc
mov
movs
xchg
and
xor
pop
push
pop
out
xchg
mov
cmc
data16
icebp
retf
ins
int3
xchg
mov
in
xor
mov
into
or
loope
sar
iret
inc
popf
mov
sahf
xor
jp
leave
or
out
sahf
xchg
imul
cli
popa
rol
jnp
mov
and
mov
out
sub
test
xchg
fdiv
fistp
sub
arpl
and
xchg
popf
test
xchg
xchg
xor
cli
mov
pop
or
stos
rcr
arpl
es
pop
add
lahf
(bad)
or
movs
add
or
shl
push
push
xlat
mov
aad
jp
or
mov
mov
dec
mov
outs
add
push
cs
xchg
adc
sbb
js
dec
into
enter
push
fwait
xor
imul
pop
lahf
in
aad
sbb
inc
sub
xchg
(bad)
pop
aaa
outs
std
bound
xor
call
movs
es
push
add
or
test
daa
add
jle
xchg
ds
hlt
stc
xor
nop
cmp
xor
bnd
cs
fdiv
xor
rcr
xor
mov
stos
bound
push
cmp
repnz
jecxz
jg
jl
xor
xor
(bad)
mov
push
iret
cmp
jecxz
in
or
int
retf
repz
fwait
lods
xor
mov
mov
mov
cmp
adc
cs
lods
adc
pop
pop
pushf
mov
rol
scas
adc
cdq
push
stc
clc
fidiv
pop
or
in
pop
call
cmp
icebp
sbb
add
mov
jmp
pop
repnz
or
daa
adc
sub
pop
lahf
mov
loopne
popa
cmp
inc
pop
adc
ret
bound
inc
add
xor
rcr
add
in
loope
mov
fstp
idiv
xor
mov
jle
fmul
jns
sbb
pop
outs
inc
add
cmp
loopne
xor
jle
movntq
out
jbe
dec
lods
shr
sub
daa
pop
add
test
retf
mov
inc
(bad)
cmp
add
(bad)
not
push
dec
fadd
hlt
pusha
mov
cmps
xchg
imul
fwait
gs
sub
push
dec
xlat
repz
push
dec
mov
adc
inc
adc
push
inc
lods
and
in
mov
(bad)
loopne
fucomi
test
and
jo
lods
ins
jnp
mov
xchg
cmp
xor
and
lock
fnstenv
lds
cld
pop
stos
pop
enter
xchg
scas
sbb
leave
push
test
adc
ret
push
adc
sub
and
(bad)
push
dec
mov
cwde
rol
rcl
adc
jb
jo
(bad)
push
mov
ss
or
mov
sbb
mulps
jns
cmps
jns
icebp
and
dec
inc
push
imul
jecxz
dec
scas
jecxz
das
fld
in
(bad)
fimul
mov
or
cli
out
pop
sbb
sub
ror
sub
jge
dec
gs
ret
add
mov
add
dec
cmp
sbb
or
mov
daa
pop
fs
neg
leave
pop
lahf
add
push
sub
jnp
sahf
pop
enter
adc
dec
movs
sub
gs
add
push
pusha
into
repnz
mov
shl
add
ret
int
ins
(bad)
popa
or
in
push
cmp
bound
loopne
and
pop
pop
in
mov
dec
mov
inc
mov
sbb
pop
inc
popf
stos
push
test
jle
and
js
dec
and
loopne
xchg
push
ficomp
shr
jae
mov
xchg
cdq
mov
jns
stos
and
lock
stc
push
popa
xor
add
add
adc
push
mov
mov
int
adc
ins
icebp
xchg
xor
in
movs
jne
jmp
stos
fnstsw
or
aad
into
sbb
add
fdiv
push
or
push
scas
sub
cmp
mov
inc
std
inc
cmps
ret
nop
out
jl
in
sbb
sub
sar
mov
fisttp
and
lock
mov
fxch
pop
test
mov
hlt
test
or
mov
sbb
dec
push
pusha
inc
cmp
cmp
sbb
mul
xor
mov
jno
pusha
dec
(bad)
and
push
dec
hlt
push
push
imul
je
imul
pop
mov
ret
(bad)
push
outs
out
mov
cmp
xor
arpl
add
push
mov
jl
cwde
xchg
mov
leave
movs
fbld
mov
mov
jecxz
daa
mov
pop
xchg
in
les
loop
shl
xchg
into
add
cmp
mov
push
mov
mov
aam
out
or
add
push
fistp
dec
mov
sahf
sbb
(bad)
mov
ret
stos
jbe
adc
aaa
xchg
push
test
mov
mov
fwait
sqrtps
fnsave
sub
imul
push
call
jge
mov
fldenv
mov
mov
call
test
inc
mov
and
aad
xchg
xchg
call
aaa
or
push
sub
pop
aaa
jl
or
add
fwait
xor
pop
out
adc
div
test
push
lods
pop
and
in
push
cmp
xor
pop
pop
inc
int
cmp
mov
xchg
sub
jmp
scas
mov
and
cmps
jae
loope
add
popf
mov
jp
push
xor
and
dec
cmps
jl
imul
mov
sbb
in
push
pop
cmps
push
aaa
(bad)
rol
jle
loopne
out
adc
cmp
sub
push
xchg
jo
push
lods
and
mov
outs
inc
pop
cmp
(bad)
jmp
push
push
cmp
and
pusha
movs
xor
imul
push
js
mov
test
xchg
test
(bad)
fsub
aaa
out
xchg
mov
add
push
inc
(bad)
jne
rcr
cmp
mov
iret
or
enter
stos
mov
and
clc
inc
mov
mov
add
add
inc
xchg
push
push
jo
in
mov
mov
and
inc
add
idiv
inc
mov
push
mov
cwde
sbb
dec
lock
dec
sbb
rol
sub
stos
popf
push
cmp
mov
jmp
push
or
imul
test
clc
xchg
pop
sbb
cmp
ror
stos
jp
out
cmps
xor
jo
mov
enter
pop
mov
fs
(bad)
out
or
hlt
daa
dec
ins
icebp
sub
scas
cmp
adc
adc
loopne
or
arpl
ins
fcom
loop
jae
and
fnstenv
fwait
and
xor
xlat
mov
iret
shl
popf
sub
fwait
aad
scas
cmp
mov
pop
sub
xchg
(bad)
loopne
mov
cdq
test
dec
or
pop
retf
aam
dec
jno
imul
mov
test
inc
jo
pop
xor
xor
dec
popa
pop
gs
xchg
dec
outs
pop
stos
repnz
idiv
out
(bad)
adc
jo
sbb
nop
jmp
add
jmp
cmps
mov
pop
sub
sub
xchg
loopne
enter
xchg
inc
inc
ficom
sti
adc
icebp
dec
xchg
or
fisub
inc
sar
imul
cmp
sbb
test
popa
lods
hlt
enter
lods
out
ins
xchg
inc
push
ins
xor
imul
inc
xor
mov
mov
inc
jno
cmp
mov
test
in
and
(bad)
in
dec
xor
out
jmp
int3
mov
leave
mov
mov
ds
jp
pop
adc
jne
ficomp
mov
mov
out
push
cmc
les
and
aam
dec
aad
pop
test
push
xor
push
mov
sub
ror
ret
xor
loope
mov
shl
ins
push
xchg
cmp
out
jnp
adc
in
cmp
xchg
(bad)
fadd
aas
cmp
xor
mov
sbb
sahf
icebp
mov
jg
fsub
mov
fstp
xor
int3
mov
repnz
push
adc
sbb
xor
pop
push
mov
push
xchg
jnp
clc
jo
add
pop
fild
cmps
sub
test
gs
xor
ins
mov
outs
mov
jmp
cmp
cdq
jmp
xchg
cdq
push
pop
pop
loopne
sub
mov
or
in
lods
fist
adc
stos
test
int3
test
adc
or
bound
outs
iret
loope
mov
jae
sar
ret
(bad)
ds
xchg
(bad)
xchg
(bad)
ins
ror
clc
mov
sbb
xor
fld
pop
mov
(bad)
ror
mov
add
sqrtps
das
xchg
daa
xchg
mov
and
int3
jnp
pop
fcomp
mov
rcr
nop
xchg
shl
xor
add
push
inc
and
fcomp
mov
dec
xchg
mov
jmp
mov
xchg
imul
repnz
lea
loop
xchg
jmp
add
mov
mov
fcom
loop
jecxz
jmp
(bad)
test
pop
mov
mov
pop
or
ror
int
cdq
xor
std
movs
dec
(bad)
ror
jns
adc
adc
xchg
shl
sbb
test
out
inc
(bad)
cld
ja
cs
daa
push
mov
xchg
cmp
sbb
int3
fisttp
jl
adc
sub
loop
dec
and
mov
iret
rol
enter
lods
cld
inc
fld
and
daa
cmp
mov
movs
dec
mov
mov
data16
xchg
out
arpl
dec
pop
fs
out
xchg
scas
cmp
jle
adc
in
repz
hlt
sbb
sub
lods
mov
hlt
mov
adc
xchg
jo
adc
mov
loope
jge
push
pop
sti
ret
inc
retf
inc
ror
mov
(bad)
cld
jecxz
or
jg
dec
cmps
push
(bad)
ret
dec
mov
lock
pushf
nop
cmp
xchg
and
or
call
adc
mov
push
sub
ffree
int
push
mov
ror
cmp
pop
cmps
stc
fistp
loop
icebp
std
lods
sbb
xchg
popa
fcomi
shl
clc
(bad)
xor
fidivr
mov
push
mov
mov
shl
(bad)
mov
xchg
pusha
cs
lahf
(bad)
mov
dec
fistp
icebp
jmp
ds
jp
or
and
test
hlt
pop
ror
inc
clc
popa
push
icebp
rcr
pop
outs
loope
gs
cmp
sub
sub
xor
js
mov
and
pop
mov
loop
cli
dec
mov
shl
pop
sti
sbb
sbb
cmps
and
(bad)
lock
popa
jae
cmp
dec
push
jmp
xchg
or
xchg
push
imul
test
shl
std
sbb
(bad)
sbb
fdivr
cs
out
leave
pop
call
sub
test
jle
hlt
cmc
into
pop
(bad)
lock
push
cld
xchg
mov
pop
sbb
jns
fsubr
pop
lahf
(bad)
in
mov
sub
cmp
fs
jge
push
je
(bad)
dec
mov
jne
outs
(bad)
stos
push
xchg
cld
inc
pop
or
sbb
xchg
out
jecxz
sbb
outs
adc
into
jmp
fwait
mov
aas
stc
or
shl
mov
into
xor
in
sbb
cli
ss
pop
ffree
jns
pop
or
popf
ret
mov
icebp
stos
ins
cld
pop
je
mov
adc
push
jae
cmp
je
mov
adc
daa
stc
pop
lock
shr
lahf
cmp
and
cdq
gs
arpl
in
or
sbb
nop
clc
xchg
mov
push
or
sbb
dec
stc
xchg
outs
fild
ret
dec
adc
sub
sub
leave
mov
pop
cdq
outs
cmp
jnp
lea
fcomp
out
push
popf
xchg
aam
sbb
mov
gs
in
mov
imul
push
xor
pop
mov
pop
ss
inc
not
add
jo
push
cmp
pop
push
ins
fcomp
adc
push
xor
pop
push
test
outs
(bad)
cmc
adc
sbb
push
into
lods
sbb
sbb
(bad)
stc
bound
sub
and
imul
dec
ins
adc
pushf
xchg
dec
mov
aas
dec
mov
inc
pop
sbb
pop
mov
dec
and
add
(bad)
push
ror
and
outs
popf
aaa
xchg
imul
dec
pop
div
and
pushf
jmp
fwait
imul
inc
pop
psllw
outs
inc
push
fsubrp
sbb
inc
jns
bound
and
inc
mov
pop
shr
push
fwait
sub
cmps
sbb
mov
call
ret
and
repnz
xlat
and
adc
(bad)
mov
repz
std
repz
adc
dec
pop
adc
cmp
push
sahf
push
dec
dec
std
pop
rcr
addr16
mov
push
push
stc
lock
int
and
lahf
xchg
repz
ror
xchg
xor
add
xchg
and
xor
push
cs
jns
pop
mov
jae
xchg
pop
jmp
push
repnz
sar
imul
not
mov
cmp
js
pop
mov
arpl
inc
pop
mov
aas
inc
repz
(bad)
inc
pop
sub
dec
lahf
mov
add
(bad)
push
mov
push
push
inc
inc
test
ror
aaa
jns
jae
jo
dec
shl
push
fistp
shl
test
pusha
dec
or
mul
dec
fwait
test
es
add
fsubr
ret
xchg
and
pop
sub
imul
ins
and
mov
fisubr
xlat
xchg
lock
aam
enter
repz
(bad)
sbb
in
push
xchg
and
add
lods
retf
call
into
fsubr
retf
aaa
shl
mov
xlat
repnz
or
pop
xor
(bad)
mov
test
mov
cdq
int3
out
mov
arpl
mov
loopne
jg
push
add
adc
and
lods
jno
add
int3
xchg
scas
lea
jne
in
dec
pop
jecxz
bound
xchg
jnp
popf
out
jbe
push
push
retf
imul
iret
popa
cs
pop
sub
jo
jno
push
fwait
or
or
test
and
dec
xor
cmps
fcom
jnp
push
xchg
jmp
ror
adc
xor
mov
jg
leave
xchg
lock
pop
and
jno
push
sub
ss
in
std
jl
pop
sbb
imul
cld
ins
or
cmp
mov
bound
test
(bad)
adc
or
push
mov
dec
xchg
shl
rcl
xchg
icebp
xor
push
xor
mov
in
xchg
neg
cs
dec
arpl
mov
sar
(bad)
ja
mov
add
push
xor
and
xchg
dec
mov
pushf
and
jbe
lods
push
retf
jmp
push
popa
mov
fwait
and
mul
dec
xor
pop
sbb
inc
sbb
lea
jmp
dec
(bad)
dec
(bad)
xchg
mov
test
int
jns
mov
das
out
lea
(bad)
(bad)
jecxz
or
sbb
sub
or
cmp
mov
sub
pop
mov
adc
mov
pop
inc
je
sub
fcomp
clc
(bad)
cmp
not
ret
xchg
jnp
mov
arpl
xor
xor
and
cs
inc
das
jbe
jge
js
jns
and
adc
ss
lods
retf
rol
push
cmp
arpl
jg
mov
(bad)
out
cli
cmps
stos
ss
std
(bad)
fs
fisttp
call
inc
aad
push
push
sub
sahf
xchg
out
div
sbb
sbb
mov
daa
fdivr
fs
sbb
aas
in
jns
and
(bad)
fdivr
pop
ficomp
in
data16
ret
movs
je
xchg
sbb
dec
or
int3
and
inc
cli
jp
aam
aaa
lods
clc
(bad)
lds
sbb
ror
pop
sbb
sub
and
loopne
in
dec
cmp
shl
fild
mov
xchg
repnz
in
dec
pop
jbe
xor
jge
sub
cld
pop
push
test
enter
or
mov
and
dec
mov
pop
repnz
jnp
mov
inc
stc
lock
add
scas
repz
push
into
cmp
mov
cmps
out
hlt
lds
mov
sub
fimul
or
lds
xor
xor
aaa
cmp
outs
dec
out
cdq
cmc
inc
add
inc
cmp
lahf
or
cmc
push
pop
pop
sete
and
(bad)
stos
xchg
jecxz
mov
hlt
mov
dec
or
and
daa
or
ret
lods
jl
jge
(bad)
dec
mov
jmp
adc
gs
sahf
sahf
ins
or
xor
jmp
pop
call
push
inc
pop
push
dec
xchg
jb
rol
cmps
sub
idiv
pop
push
jecxz
imul
ficomp
push
jo
push
jb
cmp
sbb
imul
call
mov
cmp
mov
inc
sbb
fld
xchg
mov
sub
lods
add
bound
mov
dec
pop
jge
out
xor
adc
xor
jnp
mov
repnz
mov
retf
(bad)
call
retf
xchg
icebp
adc
aam
pop
or
xlat
call
cmp
stos
add
loopne
and
push
add
xchg
mov
loope
ds
push
ja
inc
dec
imul
inc
(bad)
jp
push
ja
dec
mov
pop
cmp
fwait
ins
int3
sar
sub
mov
mov
xchg
sbb
sub
movs
outs
imul
ret
cmp
loope
pop
sub
jmp
adc
lods
push
(bad)
inc
mov
mov
cwde
pop
jo
sbb
mov
int3
cmp
adc
jns
jo
(bad)
imul
test
mov
mov
out
mov
movs
dec
xchg
pop
(bad)
jnp
inc
rcl
cmps
and
mov
call
sahf
cmc
out
push
adc
imul
je
jecxz
pop
(bad)
in
ins
jno
sub
(bad)
int3
repnz
ja
daa
ds
pop
and
cld
test
gs
gs
lock
loope
fnstsw
(bad)
cdq
xchg
cmp
and
ret
cdq
out
call
jnp
imul
enter
movs
sbb
in
xchg
mov
mov
jns
pop
icebp
pop
or
out
test
mov
and
mov
mov
sub
cmp
and
sub
push
add
push
aad
inc
jg
ds
fcom
push
sub
or
push
inc
sbb
push
xchg
(bad)
pushf
lods
pusha
rcl
jne
fdiv
xor
xchg
std
inc
fisub
sub
pushf
in
pop
cmps
div
and
sbb
aad
rol
inc
iret
jae
fidiv
adc
test
std
(bad)
lods
and
adc
mov
loope
int
(bad)
sbb
pop
retf
daa
lea
scas
push
shl
push
and
std
icebp
or
sub
jne
pop
fisubr
mul
arpl
repz
push
leave
gs
push
imul
push
cmp
rcl
xchg
sbb
xor
mov
xchg
xor
mov
clc
xchg
data16
scas
fnstenv
push
int3
cdq
pop
dec
mov
data16
dec
add
xchg
xor
sbb
jns
mov
js
cdq
jbe
out
pop
lods
ins
pushf
popf
hlt
jns
sti
sbb
hlt
mov
xor
sbb
and
cld
adc
test
out
ins
cdq
int3
mov
ja
in
mov
fmulp
scas
stos
mov
push
repz
mov
jle
push
loope
arpl
test
or
push
adc
mov
into
daa
add
fdiv
bound
outs
lahf
fnstcw
mov
push
cmps
(bad)
test
or
xchg
mov
out
in
sbb
push
cs
push
movs
ror
push
sbb
xor
popf
mov
inc
inc
mov
mov
sti
ret
jg
inc
popa
scas
mov
jg
icebp
call
and
scas
push
(bad)
lods
add
push
sbb
cmp
imul
aas
and
or
fwait
mov
lods
mov
xor
sbb
stc
pop
xor
out
xchg
test
out
mov
inc
add
adc
mov
pop
mov
dec
mov
out
add
iret
pusha
and
pop
fsubr
cmp
dec
cmp
push
add
sub
push
push
dec
stos
inc
test
sti
xchg
leave
ins
pushf
mov
loopne
std
push
jge
mov
add
out
push
mov
push
add
adc
xor
call
js
mov
add
and
jne
add
push
into
jo
push
pop
mov
sbb
enter
loopne
pop
icebp
retf
push
adc
inc
xor
pop
sub
sbb
or
sbb
(bad)
ds
sbb
mov
push
aam
jmp
xchg
inc
popa
fst
pop
xchg
sub
push
add
add
mov
movs
fs
mov
or
popf
mov
das
add
and
scas
cmp
cs
les
pop
call
xor
int
shr
pop
cmps
inc
sbb
in
inc
push
aas
mov
out
jae
pop
repz
inc
sub
icebp
dec
mov
mov
sub
sbb
mov
add
loop
add
(bad)
inc
cmp
loopne
cmp
out
mov
mov
xchg
push
addr16
add
mov
add
lds
inc
xchg
stos
mov
ret
mov
jp
jmp
inc
cmp
dec
jo
retf
inc
ja
inc
pop
(bad)
jge
push
fld
add
mov
lods
cmp
mov
test
popa
push
enter
pop
pop
mov
(bad)
ins
push
call
jb
loop
mov
(bad)
out
(bad)
repnz
and
sbb
and
add
mov
nop
mov
xor
or
aaa
fimul
lds
imul
test
sub
xor
push
ds
jbe
shl
push
enter
xlat
bound
mov
adc
mov
sub
mov
(bad)
mov
fadd
iret
int
and
dec
push
fidivr
push
jecxz
mov
add
dec
pop
jno
pop
mov
inc
fs
pop
bound
mov
dec
dec
(bad)
push
dec
mov
lahf
sub
sti
movs
cmp
jmp
adc
jecxz
add
fdivr
scas
mov
sub
aas
push
or
ja
sbb
push
fsubrp
mov
push
loope
dec
adc
add
jecxz
adc
adc
adc
loope
popa
pushf
cld
mov
jle
or
in
xchg
into
les
(bad)
aad
dec
lahf
aad
adc
ins
dec
add
out
pop
cmp
sub
push
pmaxsw
aas
stos
fimul
mov
mov
sbb
jno
mov
wrmsr
add
shr
push
jecxz
and
out
xchg
test
sahf
mov
push
shl
pop
and
outs
jp
add
and
call
jge
mov
bound
add
dec
xchg
sbb
or
pop
pop
and
cmp
(bad)
xlat
(bad)
cld
(bad)
fcomp
(bad)
retf
repz
inc
jne
mov
repnz
outs
push
in
xchg
inc
sub
push
mov
mov
jmp
scas
add
jmp
xchg
jns
dec
cli
pop
mov
lea
xor
into
or
mov
or
ret
adc
xchg
pop
jb
sub
enter
and
and
pop
inc
pusha
jg
sub
outs
rcr
lea
aad
scas
dec
mov
fistp
movs
xchg
ja
retf
test
sub
retf
ret
or
pop
enter
repz
dec
imul
int3
mov
and
jmp
arpl
aaa
rcl
xchg
pop
mov
sar
xchg
retf
loope
retf
add
mov
popa
(bad)
out
or
mov
jno
xor
stc
cmp
xchg
add
ds
dec
popf
jecxz
ficomp
stc
or
jp
cmp
addr16
mov
or
bound
mov
mov
stc
mov
(bad)
aas
mov
es
pop
adc
scas
popa
and
popa
call
movs
out
pop
pop
pop
popf
lods
adc
xor
xchg
dec
dec
repz
adc
xchg
fsubr
loopne
push
int3
cmp
lods
loop
sbb
stos
sbb
dec
sub
push
enter
mov
dec
hlt
mov
(bad)
cdq
push
sbb
stc
loopne
cmp
and
adc
mov
fcomp
and
xor
jecxz
cmp
jbe
xchg
mov
nop
rcl
dec
sbb
adc
leave
dec
fbld
jne
rcr
inc
fsubrp
arpl
cmp
adc
dec
fld
jecxz
das
cdq
daa
cwde
fdivr
xchg
push
sbb
arpl
pop
or
(bad)
fisttp
pop
jb
ss
retf
pop
push
rcl
lea
mov
cli
fidivr
add
jne
inc
mov
add
and
sbb
and
cmp
std
pop
loop
mov
inc
outs
leave
iret
shl
push
sub
jp
retf
pushf
jg
in
inc
(bad)
aaa
cwde
aas
rol
pop
mov
lods
jb
cdq
test
repz
daa
fld
xchg
fmul
data16
mov
fbstp
hlt
mov
xor
cmp
mov
addr16
(bad)
call
mov
mov
arpl
jo
cmp
push
iret
pop
mov
cmps
fcmovnb
js
popf
bound
jo
jnp
add
in
inc
inc
mov
push
add
cmp
push
sbb
xor
sbb
(bad)
cmps
imul
sbb
retf
out
ins
or
mov
ret
inc
jmp
nop
lock
push
pop
bound
xchg
add
sub
jbe
adc
stos
mov
push
retf
mov
mov
mov
arpl
ret
in
lods
xor
ins
jge
and
pushf
add
jno
cmp
int3
gs
adc
les
bound
and
mov
jecxz
mov
leave
push
inc
mov
jne
add
lods
les
or
cwde
stos
xchg
adc
in
ins
mov
rol
mov
(bad)
pop
lahf
sbb
cmps
add
imul
out
dec
mov
pop
loopne
fnstsw
rcr
retf
and
jl
popf
repz
pop
es
xchg
mov
shr
cli
outs
movs
ret
sub
inc
or
rcl
ins
aam
bound
and
pop
add
inc
gs
sbb
dec
xchg
repz
jl
dec
jl
xchg
clc
dec
mov
mov
mov
test
lods
or
das
pop
dec
int
push
mov
add
sub
popf
lahf
neg
cmp
cmp
icebp
pop
push
ins
out
cmovo
adc
sti
std
fisttp
in
or
pop
in
dec
icebp
(bad)
cmp
cmps
push
ja
out
xchg
(bad)
fidiv
mov
int3
mov
jne
add
dec
or
jno
scas
call
and
into
push
push
clc
dec
popf
imul
add
adc
xchg
mov
jno
jae
jo
popa
stos
lods
das
inc
(bad)
mov
mov
aas
test
(bad)
(bad)
pusha
ins
sbb
test
fs
sbb
int3
jle
jbe
nop
push
inc
lods
fcomp
adc
sbb
lahf
inc
sbb
mov
in
cdq
jno
cmps
aaa
repz
mov
and
mov
mov
push
dec
add
movs
addr16
movq
adc
inc
push
mov
and
iret
mov
jle
jne
aaa
das
jp
sub
jne
dec
sahf
push
and
sub
cmps
(bad)
or
dec
ret
or
mov
inc
sbb
cmp
jg
inc
jne
and
sub
int
jmp
jmp
pop
int3
aad
shl
xor
inc
lea
pop
mov
loopne
xor
inc
mov
lock
add
add
jle
cmp
add
add
jge
call
rcl
adc
(bad)
mov
pusha
(bad)
cli
xor
scas
fs
pop
xor
pushf
xchg
stc
out
adc
push
cli
and
adc
xor
xchg
test
adc
sbb
add
jmp
(bad)
jge
cmps
stc
popf
out
retf
pop
into
xchg
(bad)
into
sub
scas
out
and
es
(bad)
in
loope
dec
sbb
cmp
(bad)
out
sbb
retf
xor
cmp
xchg
out
cmps
jb
sar
popf
or
push
sub
push
jl
in
jg
lods
push
jmp
ret
ss
arpl
adc
jno
jmp
pop
lock
sub
sbb
and
lock
dec
mov
xchg
repz
lods
nop
jl
jno
sbb
fistp
in
lahf
sub
add
inc
arpl
dec
mov
(bad)
in
cmp
(bad)
push
aas
cmc
mov
adc
cmp
cmp
hlt
push
test
xchg
cli
scas
les
ds
(bad)
in
das
inc
add
rcr
pop
ret
jecxz
cmp
out
jno
cwde
push
jmp
jnp
jbe
push
aas
daa
mov
addr16
sbb
test
jl
rep
and
jl
add
push
loop
mov
adc
aad
sub
mov
sub
mov
jo
push
jge
jecxz
dec
pop
push
xchg
sbb
push
imul
mov
sub
mov
xor
mov
bound
leave
(bad)
xor
push
push
cmp
movs
pop
jns
arpl
xor
or
test
push
inc
ins
rcr
push
inc
push
mov
icebp
jl
xor
aaa
fcmovnb
shl
rcr
dec
add
pop
sbb
inc
loopne
hlt
in
jg
mov
mov
imul
shl
es
stos
sub
jecxz
outs
mov
mov
cmovge
jb
mov
mov
fdivr
scas
mov
cs
jge
imul
and
mul
sub
enter
shl
jle
xchg
mov
or
adc
stos
xchg
jge
cmp
faddp
imul
mov
int
pop
lods
and
xlat
pop
push
call
mov
adc
sub
inc
jl
cli
jbe
data16
dec
jecxz
call
and
(bad)
jge
test
jp
xor
popf
jmp
sub
shl
sub
movs
pop
bound
and
das
push
inc
dec
rcr
adc
sbb
mov
repnz
in
dec
jle
fisubr
inc
stos
add
fnsave
mov
iret
dec
cmp
icebp
(bad)
fistp
(bad)
mov
jecxz
and
rcr
imul
fwait
rol
out
sbb
repz
adc
not
jo
out
xchg
push
pusha
nop
xor
pop
sahf
add
mov
sbb
div
add
ins
xchg
jnp
enter
push
fcomp
inc
and
push
cmp
xor
inc
stos
mov
fs
aaa
dec
add
add
sub
mov
or
adc
push
jle
stos
xchg
loopne
and
mov
movs
enter
mov
imul
xchg
mov
scas
inc
pop
imul
xchg
jbe
sub
js
jns
popf
xor
scas
dec
and
pusha
sub
test
and
mov
aam
pop
icebp
mov
and
loopne
and
ins
pop
jecxz
pop
dec
push
call
hlt
push
fsubr
in
jae
inc
mov
sub
enter
jo
jo
dec
cmp
sbb
cmp
mov
pop
pop
adc
push
popf
cmp
sar
add
add
movs
test
gs
lea
aas
dec
adc
movs
gs
xchg
push
xchg
es
sub
xor
jno
(bad)
shl
adc
out
outs
mov
leave
jns
lods
mov
ror
xchg
leave
cmp
adc
xchg
data16
push
movs
sar
cdq
iret
mov
jp
out
call
push
mov
ins
mov
jl
xchg
sub
in
and
ret
mov
dec
cmp
pusha
push
inc
mov
leave
ret
inc
addr16
leave
sub
push
and
dec
loope
inc
loopne
daa
ret
imul
jbe
gs
call
push
mov
mov
xchg
pop
scas
mov
sub
retf
mov
fiadd
je
pcmpeqw
sti
cmp
and
pop
(bad)
adc
cld
mov
mov
(bad)
pop
or
popf
jmp
dec
outs
(bad)
and
and
push
add
cli
inc
sub
iret
rcr
call
(bad)
xchg
sub
mov
bound
into
sub
pop
xchg
mov
dec
or
cmps
shr
xchg
scas
ror
jmp
or
stos
dec
js
sub
enter
inc
xor
out
pusha
shl
shr
mov
mov
mov
inc
jmp
in
in
add
rol
lods
add
aam
xor
xor
push
lea
jnp
repz
sub
in
jmp
and
dec
jecxz
mov
aaa
mov
ja
es
mov
xchg
mul
dec
xor
sbb
push
lss
or
dec
loopne
bound
(bad)
jmp
dec
ins
cmp
into
mov
adc
js
add
rol
add
imul
dec
cmp
enter
inc
fmul
(bad)
inc
pop
or
add
cmp
inc
mov
out
icebp
call
mov
mov
(bad)
sub
mov
mov
leave
fst
pop
sahf
xchg
aad
ss
sub
xchg
add
cmp
mov
ja
push
mov
and
jbe
das
xor
cwde
inc
popf
mov
out
cli
loopne
data16
jnp
ds
sbb
sub
xor
jecxz
dec
pop
jle
dec
loop
xor
scas
(bad)
push
cmp
mov
lods
out
stos
sbb
ret
xor
mov
cmp
jne
iret
div
xchg
add
retf
rol
pop
push
call
and
les
jnp
sbb
push
mov
outs
xor
adc
pop
jge
xor
inc
push
int3
xchg
lods
or
fsubr
cmp
iret
xor
test
sbb
nop
outs
push
inc
inc
out
sub
jns
movs
jcxz
add
pop
adc
test
jae
inc
mov
mov
aad
sbb
sti
js
xchg
idiv
fistp
mov
xchg
ins
cli
mov
test
arpl
sbb
xchg
push
dec
test
ffreep
pop
test
inc
movs
mov
ins
jmp
mov
sub
push
fsubr
and
pop
fadd
adc
outs
jecxz
sub
jbe
mov
sbb
or
xchg
cmps
ja
inc
data16
(bad)
xchg
inc
ror
scas
xchg
pop
movs
pop
jae
push
std
inc
jo
outs
test
push
dec
mov
push
push
inc
dec
fldl2t
pop
add
aaa
fmul
aad
pop
call
outs
ds
stc
out
jecxz
lods
stos
ffree
(bad)
cmp
mov
inc
inc
js
mov
mov
cmp
scas
push
mov
(bad)
sbb
dec
out
cmps
sbb
xor
dec
add
movs
mov
in
push
cmp
call
or
cmp
stos
call
xchg
cmps
cs
fidivr
mov
(bad)
cmp
dec
stos
add
in
js
sbb
movs
mov
sub
mov
push
xchg
jbe
enter
pushf
fadd
outs
mov
out
sub
dec
pop
or
add
and
xchg
fistp
enter
mov
fisttp
bound
loope
rol
adc
jmp
cmp
sbb
sbb
ret
icebp
pop
push
call
jmp
add
ins
inc
test
call
icebp
cwde
pop
add
clc
mov
adc
dec
cmp
or
sub
(bad)
mov
sub
fld
lods
hlt
mov
push
push
lea
dec
or
mov
fimul
xchg
in
lock
inc
push
(bad)
push
(bad)
stc
sar
stos
mov
inc
mov
cmp
cs
pop
es
push
aaa
push
sbb
adc
das
jbe
es
jmp
imul
jle
pop
enter
pop
and
sub
add
and
(bad)
pop
push
ins
out
es
stos
xor
repz
mov
xor
popf
sub
add
pop
push
xchg
mov
in
jno
mov
pop
lahf
push
loop
jb
xor
cmc
mov
jecxz
stos
xchg
push
adc
rol
cld
sub
cmp
push
(bad)
je
popa
add
shl
test
out
sub
mov
mov
fs
test
lock
movs
sbb
and
inc
cs
rcr
ja
push
pop
sbb
jge
inc
jno
les
jmp
sbb
shl
jb
dec
xchg
pop
dec
(bad)
aaa
popf
mov
test
sar
mov
int3
outs
push
push
out
mov
push
mov
ja
retf
inc
ins
lock
int
das
jne
aad
sbb
outs
outs
dec
rcr
cwde
aam
xchg
adc
cdq
inc
inc
fst
pop
push
xor
mov
aad
dec
push
jge
aam
loopne
xchg
or
fwait
rol
inc
and
adc
xor
jno
mov
stc
ficom
mov
sahf
cli
mov
and
test
adc
out
test
sub
inc
inc
iret
stos
or
test
xchg
inc
sbb
imul
sub
fwait
mov
mov
mov
fsub
sub
mov
out
aam
sub
mov
or
out
inc
xchg
test
fidiv
xchg
adc
mov
loopne
mov
dec
sub
mov
in
in
jge
movs
xor
push
mov
js
mov
retf
fwait
dec
inc
add
or
dec
out
pop
xchg
jmp
out
jmp
leave
pop
add
lea
push
mov
movs
mov
dec
icebp
fwait
scas
and
lods
call
or
leave
scas
sbb
xchg
add
stc
mov
sub
jmp
in
mov
xchg
cmp
lahf
cld
(bad)
mov
test
inc
ss
popf
mov
mov
out
sub
adc
sub
pop
push
imul
or
lahf
adc
cmps
jae
push
cdq
pushf
pop
jns
cs
outs
lahf
and
sub
aas
ret
mov
add
sub
out
retf
mov
out
sub
cld
cmp
mov
(bad)
xchg
sar
mov
mov
adc
(bad)
mov
int
retf
in
pop
call
add
sub
jns
mov
mov
fld
jl
inc
fs
loop
shl
xchg
outs
shl
lods
mov
dec
push
add
int3
retf
cmps
aam
cld
pop
(bad)
jp
data16
int3
or
sahf
mov
in
sti
sbb
fisttp
jno
cld
(bad)
pop
and
push
int3
add
lahf
or
mov
or
div
push
pop
mov
iret
cmps
aas
xor
ins
xor
out
cmp
es
pop
jno
jmp
xchg
mul
mov
or
mov
enter
cmp
sub
push
and
ficomp
sar
mov
xchg
cli
inc
call
cmps
and
loope
xchg
sbb
adc
data16
push
jno
dec
mov
repnz
cmps
cmp
icebp
test
in
lock
sbb
xor
iret
xor
xchg
(bad)
(bad)
mov
adc
addr16
cmp
popf
mov
das
pushaw
fs
xor
cmc
into
mov
js
add
mov
sub
add
sahf
adc
mov
mov
neg
clc
mov
(bad)
push
and
mov
int
adc
leave
push
xchg
arpl
rcl
jp
(bad)
out
inc
xor
cmp
pop
mov
sbb
mov
add
outs
out
cwde
mov
xchg
pusha
nop
ins
jge
push
mov
shl
mov
mov
in
sub
clc
or
retf
dec
mov
call
mov
sub
in
jle
cmc
dec
mov
lea
es
jne
sbb
movs
rcl
sbb
jmp
add
inc
dec
cmc
adc
ins
outs
psrad
popf
jnp
ja
sbb
pusha
out
mov
pop
pushf
aas
mov
xchg
in
loopne
shl
aam
(bad)
loop
adc
out
or
sar
mov
or
mov
inc
in
in
aam
mov
ss
push
adc
jmp
mov
out
fmul
cmps
mov
inc
(bad)
cmp
add
int3
dec
repnz
cmp
xlat
jno
dec
sbb
aad
test
gs
cmp
(bad)
dec
or
call
cs
inc
fcom
cmp
cmp
jae
mov
xor
out
or
popa
in
pushf
lods
xor
inc
inc
sub
sub
popa
mov
xchg
enter
mov
loopne
mov
cwde
xor
push
call
jmp
pop
jle
fidiv
repz
pop
das
pop
cmp
or
xchg
sub
aam
stc
mov
ins
sbb
xor
pop
and
std
rcl
inc
stc
(bad)
pop
nop
ds
sub
fcmovb
cs
aaa
xor
inc
cmp
adc
dec
arpl
in
sub
add
add
sbb
scas
inc
mov
lods
push
inc
mov
or
test
shr
jp
test
xor
jl
loopne
mov
add
add
push
inc
xchg
sbb
(bad)
(bad)
and
loope
mov
cs
mov
adc
xchg
xchg
aaa
inc
rep
and
xlat
cli
mov
and
fidiv
out
pop
clc
jbe
inc
ins
repz
or
cmps
stos
test
cwde
mov
pop
and
push
pop
xchg
push
pop
and
call
ins
stos
test
rol
mov
push
mov
xor
sbb
hlt
push
cmp
rcr
push
rol
sub
xchg
popf
pop
inc
lea
lods
xchg
jg
fcmovnu
mov
push
adc
shl
inc
fs
sbb
sub
popf
cmp
push
mov
cwde
sahf
lock
fimul
mov
je
pop
jmp
test
lods
sub
inc
mov
ficom
mov
xchg
inc
loopne
mov
mov
leave
std
pop
push
add
sahf
inc
jg
ins
sbb
in
rol
jle
inc
pop
jg
xor
cld
das
cli
inc
lods
push
cld
test
fst
popa
mov
das
jb
repz
xor
scas
les
or
(bad)
imul
add
repnz
fs
push
xor
xchg
mov
push
and
jle
inc
and
test
sbb
xor
inc
out
scas
cmp
dec
es
or
pop
ins
mov
sti
mov
push
(bad)
(bad)
mov
mov
dec
dec
test
paddq
or
bound
fadd
xchg
sahf
push
arpl
(bad)
aam
aam
xchg
and
inc
daa
xlat
mov
jge
push
test
js
jmp
addr16
jmp
xor
xchg
inc
sub
in
adc
jns
shr
outs
inc
lea
fsubr
cli
dec
mov
mov
pop
(bad)
loopne
fld
or
jmp
not
fwait
cmp
retf
sub
cld
pop
stc
out
in
shl
add
xor
lods
inc
jl
push
xchg
je
ja
mov
sbb
add
idiv
adc
sub
jne
xor
xor
jno
sub
and
xchg
stc
mov
and
mov
sbb
inc
test
fs
jo
fdiv
scas
and
test
add
and
add
add
sub
dec
push
call
push
xchg
jo
sbb
pop
pushf
ins
add
and
cli
repz
test
out
adc
out
(bad)
adc
or
mov
jg
sahf
shl
cld
movs
test
ret
fstp
dec
(bad)
xchg
cld
sub
shl
fisubr
push
pop
mov
lea
xchg
jmp
iret
or
arpl
mov
fisttp
xor
mov
cmp
into
xlat
sub
movs
(bad)
ror
mov
sbb
and
gs
fsubr
pop
push
out
and
aad
outs
in
fcom
and
add
jle
mov
mov
cs
and
loope
stos
int3
aaa
out
outs
pop
sub
repz
fidivr
ins
mov
push
scas
xchg
mov
push
and
(bad)
push
dec
or
jmp
push
stc
or
fdivr
xchg
jmp
aam
pop
adc
in
xchg
in
push
mov
scas
stc
cli
push
hlt
xchg
hlt
adc
inc
jmp
mov
adc
imul
xor
adc
test
cmps
sbb
jbe
xor
jb
xchg
call
xchg
aaa
push
mov
loope
into
sbb
dec
loop
mov
mov
add
xchg
xchg
xor
dec
inc
lods
repz
push
je
adc
arpl
inc
mov
xchg
fdivr
fs
ror
xor
ret
int
std
sti
dec
add
pop
dec
mov
sbb
push
cmps
or
fstp
and
push
into
cmp
mov
dec
push
xchg
push
inc
and
dec
inc
cld
enter
test
outs
cmp
pushf
and
add
xchg
dec
clc
adc
push
(bad)
pop
and
push
out
mov
mov
sti
nop
mov
cld
dec
shl
add
fcomp
cmp
push
sbb
push
sub
xor
push
mov
loopne
ror
and
add
mov
nop
aaa
(bad)
les
int
push
add
push
mov
(bad)
(bad)
loop
inc
icebp
jp
in
fidiv
std
es
test
outs
das
dec
pop
rcl
out
sub
inc
gs
mov
fchs
add
mov
bound
xchg
in
das
xchg
sbb
cmp
inc
cs
int
cli
arpl
push
rol
(bad)
popf
fwait
lock
push
in
pop
call
xor
cmp
jmp
(bad)
push
popf
sbb
push
test
push
lds
or
es
ss
sbb
mov
imul
push
repnz
mov
mov
jbe
into
lds
or
xor
mov
xor
add
test
(bad)
clc
jle
call
push
fcomp
in
xor
inc
mov
push
pop
fmul
addr16
cdq
mov
dec
icebp
shl
lods
stos
(bad)
aam
inc
in
adc
cmp
xor
push
sbb
(bad)
out
xchg
pop
cmp
out
xor
dec
xor
rcl
inc
mov
int3
std
xchg
loop
sub
xchg
(bad)
adc
xchg
les
add
ror
mov
shl
add
pop
inc
(bad)
mov
and
xor
mov
push
sub
push
mov
ins
add
sar
push
push
and
hlt
add
cmp
mov
cs
jecxz
(bad)
repz
dec
sub
scas
mov
sbb
sub
frstor
xor
(bad)
add
test
pusha
cmc
cld
aaa
mov
out
stc
xchg
sbb
sar
jecxz
movs
(bad)
pushf
cld
sahf
mov
add
nop
enter
nop
pop
out
call
cmp
mov
lea
lds
mov
ins
fnstcw
out
dec
inc
inc
xor
fnsave
push
push
or
out
test
jae
ret
movs
lods
inc
cs
lea
(bad)
lods
(bad)
cmp
sbb
jmp
jmp
mov
and
mov
pop
stc
push
pop
cmp
out
push
dec
xchg
jp
movs
mov
aaa
inc
ja
inc
or
pusha
dec
mov
pop
lea
call
pop
cmps
ret
cmp
mov
cmp
mov
sar
outs
inc
ss
mov
jmp
fcomi
push
and
jnp
mov
dec
xchg
dec
xchg
fcmovbe
xor
jae
daa
jae
pop
xchg
mov
xor
xor
(bad)
je
rcr
jmp
mov
add
xor
sub
cmp
pusha
movs
ficomp
mov
stos
mov
xor
xor
xor
and
add
outs
sar
iret
mov
shl
xchg
mov
sbb
leave
pop
jmp
out
and
or
int
mov
and
sub
test
or
out
inc
inc
fldenv
in
stc
add
repz
mov
add
ret
xchg
jp
mov
adc
inc
fcomp
inc
mov
lahf
xchg
loope
mov
arpl
sub
adc
ss
cmp
jo
test
fild
aam
test
mov
mov
or
mov
loop
cmp
arpl
mov
neg
popf
div
push
xor
cmc
out
pop
das
lds
into
inc
jle
call
xor
cdq
cmp
pushf
repnz
inc
inc
loope
cs
lods
stos
in
pusha
retf
ins
adc
push
repz
pop
scas
or
cwde
fdivr
in
imul
jge
add
mov
mov
xchg
fsub
mov
test
mov
sub
jns
movs
mov
pop
lea
sub
xchg
jmp
out
inc
jg
and
mov
inc
shl
pop
and
mov
jb
ja
in
cmp
jbe
jne
pop
jae
jmp
cwde
jae
jmp
xchg
shr
dec
inc
cmc
loopne
sub
inc
fadd
push
xor
popf
inc
xchg
mov
jo
cld
aad
enter
pop
or
movs
ins
xchg
push
imul
inc
xor
sub
stos
cld
int3
mov
outs
ror
xor
mov
scas
jno
mov
(bad)
(bad)
xchg
xor
loop
das
xchg
sbb
push
adc
jmp
mov
jno
inc
push
popf
push
mov
pop
ds
and
pusha
ret
(bad)
mov
and
push
shl
xor
cmp
mov
dec
int
(bad)
sbb
lock
xor
fdivp
inc
bound
push
fs
jns
xchg
xor
icebp
aad
les
data16
arpl
mov
cmp
xor
call
mov
xchg
pop
jl
dec
ror
movs
mov
pop
sub
sar
or
sub
cmp
(bad)
xchg
ins
mov
or
scas
pop
xor
lds
scas
(bad)
pop
mov
inc
imul
fs
push
imul
leave
add
retf
jne
in
xor
sub
jo
and
push
in
ret
inc
sbb
push
test
mov
clc
mov
cmp
int
push
jl
sbb
(bad)
push
mov
inc
jno
aas
mov
imul
out
push
imul
addr16
push
out
mov
scas
je
test
mov
dec
cmp
xchg
inc
push
lock
pop
mov
jmp
out
or
stos
mov
fwait
add
and
sbb
outs
fild
mov
jle
sbb
icebp
sub
xlat
jl
cmps
jge
imul
div
pusha
xor
inc
sar
jno
int
mov
cmp
and
adc
lock
ins
in
addr16
(bad)
imul
dec
cmp
ret
push
xor
xlat
test
pop
sti
and
jecxz
xor
test
aaa
enter
sbb
int
cmp
push
sbb
ficom
js
cdq
cwde
sbb
jg
and
dec
inc
dec
addr16
inc
fcom
mov
and
dec
push
lods
push
(bad)
push
adc
push
mov
mov
push
and
xor
push
xchg
dec
movs
(bad)
test
dec
mov
cld
imul
adc
jns
xchg
pop
mov
adc
gs
test
jl
cmp
idiv
mov
cdq
mov
and
mov
push
sub
sbb
cmp
push
(bad)
cmc
fistp
xchg
mov
rcr
test
ja
push
xchg
jecxz
out
into
push
adc
jbe
cli
sbb
xchg
push
mov
ror
xchg
aam
test
out
jmp
mov
rcr
test
ja
add
jns
iret
push
(bad)
std
fs
das
int3
and
jno
pop
mov
add
(bad)
push
bound
hlt
lods
lahf
test
stc
lahf
xchg
jl
stos
(bad)
call
cmp
jns
xor
stos
push
hlt
dec
in
mov
data16
pushf
data16
movs
daa
or
adc
aas
mov
push
sub
fs
pop
push
sub
xor
psubb
cwde
in
iret
or
cmp
cmp
adc
neg
pop
mov
cmp
sar
in
call
inc
push
cdq
out
fdiv
aad
ret
int3
cmc
fmul
cmps
clc
dec
imul
mov
aam
jl
out
inc
lds
sub
push
xor
push
fidivr
xchg
pop
mov
adc
xchg
rcr
cmp
out
inc
hlt
cmps
in
add
enter
repnz
movs
popa
and
in
into
inc
int
cmp
or
inc
call
(bad)
sahf
ficom
xor
mov
enter
repnz
dec
mov
icebp
ror
cmps
mov
cld
pop
ins
je
hlt
and
sbb
adc
rcl
fist
mov
add
fwait
or
cmp
fisttp
or
jmp
icebp
pop
daa
fstp
add
je
cmp
jnp
shl
push
ja
push
retf
sbb
(bad)
mov
mov
dec
push
adc
popf
cmp
fsub
fldln2
sub
push
dec
gs
out
or
lahf
shr
lds
sub
aad
clc
dec
or
test
and
add
loope
push
in
dec
xchg
xor
xchg
js
ins
aam
mov
(bad)
shl
adc
clc
addr16
je
sbb
fbstp
int3
fwait
or
jb
ins
out
popf
loop
jmp
test
imul
lods
(bad)
sti
std
lea
jmp
push
loope
xchg
pushf
or
mov
jb
push
fdiv
rol
sbb
mov
ins
sbb
loopne
ret
xchg
mov
and
or
mov
add
pop
hlt
jmp
loopne
imul
rcr
mov
mov
dec
sahf
or
(bad)
sub
and
inc
inc
arpl
neg
(bad)
fistp
rol
les
jns
push
fsub
test
push
test
mov
jmp
outs
mov
jg
adc
std
mov
and
bound
dec
adc
sbb
aas
movs
loop
leave
rcr
int3
add
sbb
push
xor
daa
std
mov
pop
sub
sub
scas
mov
enter
inc
jns
xor
in
or
and
popf
bnd
sbb
nop
jb
je
(bad)
adc
popf
in
stc
test
xor
hlt
xchg
jmp
scas
scas
or
lods
int
or
mov
ffreep
cmp
not
dec
mov
xchg
cmps
push
call
popa
add
frstor
ja
dec
or
adc
jle
fstp
push
ret
fmul
push
mov
and
adc
repz
sti
popa
mov
fwait
dec
jne
fmul
iret
mov
add
sbb
mov
pop
ret
pop
add
mov
adc
ja
aam
xlat
les
in
ds
or
xchg
pop
pop
sbb
fiadd
cs
mov
popa
das
mov
push
lods
(bad)
pop
fild
mov
shl
call
loope
sbb
aas
rol
addr16
cmp
jle
fdivr
push
add
stc
and
xchg
in
cld
push
inc
push
ja
mov
xchg
fst
jns
add
push
pop
popa
jge
jnp
sub
add
pop
out
xchg
or
pop
lahf
out
mov
or
mov
jno
(bad)
and
(bad)
xchg
jae
dec
out
pop
inc
test
xchg
ins
gs
adc
jo
jns
lock
add
retf
int
push
pop
rcl
sub
inc
sub
scas
cmp
jg
add
jb
dec
jnp
out
sub
fdivr
test
fbld
and
stos
dec
outs
call
jne
mov
sbb
dec
xchg
pop
adc
jmp
xor
fistp
into
xchg
mov
into
(bad)
bound
aaa
jne
pop
(bad)
lds
mov
pop
or
adc
adc
pop
sbb
pop
jge
js
xchg
jo
pop
xor
dec
loope
xor
xor
sbb
movs
retf
sbb
(bad)
into
cmp
ds
jecxz
in
(bad)
test
mov
and
pop
(bad)
cli
ror
push
jmp
scas
mov
retf
pop
aaa
cmp
cmc
shl
cli
or
shl
aaa
enter
pop
jo
xchg
test
fidivr
push
fadd
mov
and
or
loope
sbb
dec
mov
cmp
sbb
jmp
push
out
mov
mov
mov
test
and
dec
inc
arpl
bound
xchg
mov
xor
push
mov
or
je
cld
mov
fiadd
sub
fcomp
xchg
sub
mov
in
xor
ds
sbb
jo
leave
mov
jecxz
test
movs
xlat
pop
daa
in
dec
rcl
xchg
sbb
jne
xchg
ins
jmp
jns
sti
cmp
in
cmp
mov
fimul
idiv
(bad)
movs
dec
loopne
inc
or
and
fwait
or
push
lods
nop
xor
or
fsubr
fnsave
call
sbb
ja
nop
cmp
lods
clc
jnp
outs
retf
push
icebp
jo
pop
je
sbb
xor
std
popa
and
dec
dec
xor
mov
hlt
pop
xchg
dec
mov
dec
and
aad
call
cmps
mov
inc
fdiv
jmp
lods
frstor
pop
mov
pusha
inc
scas
inc
nop
test
push
inc
ret
adc
xor
push
(bad)
xchg
xor
xchg
or
adc
lods
mov
jmp
cmp
adc
cmps
loope
jnp
or
sar
cli
cmps
ss
mov
out
ss
jl
mov
xchg
or
movs
mov
icebp
ds
mov
sub
dec
push
mov
imul
mov
pop
adc
in
ins
(bad)
and
loope
jno
sbb
sbb
sbb
(bad)
int3
sbb
sub
inc
(bad)
xor
cmc
adc
and
or
(bad)
shr
leave
sub
mov
or
data16
jno
call
loop
(bad)
xchg
aaa
xor
icebp
mov
xor
int
div
pop
gs
xor
inc
push
xor
mov
test
sti
mov
test
pop
call
and
fisttp
out
inc
pop
or
or
jecxz
fsub
xchg
aam
or
in
adc
inc
xor
push
xchg
dec
daa
icebp
xchg
jge
ficomp
rol
jl
inc
popa
scas
into
or
imul
lods
mov
mov
je
xor
sub
jecxz
add
inc
sbb
popa
jp
scas
push
dec
jl
ds
lds
adc
sbb
xchg
enter
sbb
push
dec
dec
sub
and
jne
test
sbb
xchg
mov
xchg
inc
or
loop
mov
dec
dec
mov
pop
jo
mov
pop
sbb
(bad)
stos
push
sub
mov
dec
mov
mov
fwait
adc
loop
inc
xchg
in
mov
xor
mov
inc
shl
loope
shr
(bad)
xor
mov
call
push
jecxz
cmps
push
push
mov
adc
icebp
ror
inc
iret
jb
dec
loop
outs
jnp
or
shl
jnp
daa
scas
and
add
xchg
dec
sub
add
adc
add
repnz
xor
nop
aas
push
sub
cmp
not
ret
mov
mov
daa
cli
or
in
sbb
mov
xchg
pminsw
pushf
cmp
mov
js
jge
mov
jno
mov
(bad)
mov
xor
adc
ds
jg
ret
and
in
add
inc
inc
(bad)
hlt
mov
fsubr
sbb
xchg
and
jno
lahf
pop
fadd
adc
mov
adc
les
mov
loop
xchg
test
out
sti
cmp
inc
inc
jnp
jnp
xor
pop
adc
in
add
dec
(bad)
movs
adc
pop
mov
popa
shl
ja
enter
add
xchg
mov
xchg
jmp
movs
jl
std
sbb
imul
rol
scas
or
cmp
adc
push
push
jae
jo
dec
fdiv
ret
xor
jo
lods
xchg
push
in
jecxz
outs
mov
or
ret
and
mov
mul
xlat
push
push
pusha
push
sbb
pop
add
inc
scas
adc
sbb
push
mov
and
mov
mov
xchg
scas
shr
inc
or
and
lahf
adc
adc
jl
outs
jno
js
sub
hlt
nop
add
or
jnp
adc
(bad)
adc
jle
pop
loopne
lods
lods
mov
xchg
pop
sbb
mov
fdiv
mov
test
clc
xlat
jo
hlt
ror
push
iret
leave
cld
xchg
mov
add
test
xor
adc
imul
iret
mov
jle
sub
mov
lods
add
mov
das
int
adc
sub
stc
or
inc
xchg
push
ret
fld
lods
jp
in
sub
or
neg
ja
add
(bad)
ds
hlt
xchg
jmp
mov
xor
scas
loop
sub
mov
mov
pop
movs
inc
cmps
inc
cmp
cmps
(bad)
std
faddp
dec
inc
scas
mov
test
xchg
in
and
push
cmc
mov
inc
push
mov
pop
hlt
enter
push
xor
outs
push
xor
mov
mov
test
cld
xlat
int3
aam
inc
fwait
dec
ror
stos
(bad)
jmp
add
sub
add
outs
bswap
pop
mov
repz
repz
and
adc
adc
add
lahf
lds
jae
test
idiv
pop
pushf
sbb
test
mov
fstp
or
mov
add
test
out
jp
and
jb
into
fsubrp
push
ror
mov
xlat
shl
push
xchg
js
mov
cmp
xor
sub
cmps
mov
sub
nop
sub
mov
jb
inc
pop
inc
mov
mov
ret
add
jns
nop
xor
sub
lahf
jmp
loope
add
retf
adc
jnp
xor
push
setns
mov
fisub
imul
bound
imul
std
mov
cmps
(bad)
xor
push
fimul
xchg
iret
test
bound
stc
push
inc
popa
js
rol
shr
add
daa
or
mov
dec
or
rcl
cwde
lods
mov
int3
nop
test
push
push
in
push
arpl
mov
popf
adc
jmp
push
hlt
and
arpl
fcmovbe
adc
or
inc
retf
mov
out
(bad)
sbb
sbb
ins
popf
xchg
inc
imul
pop
xchg
or
std
retf
xor
jl
jnp
lds
pop
push
jne
out
mov
jge
hlt
or
daa
pushf
mov
cs
mov
adc
mov
pop
jmp
in
int
inc
ds
mov
jg
sub
fild
inc
fs
imul
pop
sub
sub
pusha
push
frstor
dec
popa
call
xor
and
pop
inc
xchg
add
pusha
(bad)
and
or
mov
pop
xor
ja
aas
js
add
not
adc
mov
add
and
cs
mov
dec
pop
mov
pop
cmps
(bad)
(bad)
arpl
push
iret
xchg
add
retfw
dec
jmp
ins
sub
pop
jg
retf
jnp
jb
retf
xchg
clc
into
mov
mov
xchg
dec
idiv
sub
xchg
leave
and
out
jmp
dec
add
push
test
fsub
scas
(bad)
rcr
xchg
scas
adc
xchg
icebp
cs
inc
stc
(bad)
imul
pop
mov
scas
loopne
fisub
mov
cld
ss
cmp
fmul
xchg
mov
xchg
xor
sbb
push
sbb
push
stos
repz
fld
sub
cmps
dec
inc
sub
test
mov
inc
pushf
int3
sar
pop
test
pop
ds
push
in
loopne
mov
in
push
retf
repz
mov
test
push
addr16
jmp
jge
or
sbb
cli
pop
je
ror
cmp
mov
(bad)
lea
fcomp
xor
jle
mov
or
xlat
inc
sti
int
movs
cmp
sbb
mov
cwde
repz
mov
imul
inc
mov
rcr
adc
xor
jp
std
mov
popf
push
ja
cwde
inc
mov
pop
sahf
mov
mov
fiadd
xchg
scas
sub
popf
adc
je
jmp
jae
sar
out
repz
or
mov
and
outs
ja
pop
lods
jl
jo
xor
mov
or
das
adc
jne
loopne
adc
pop
fstp
inc
scas
fiadd
mov
dec
arpl
or
lods
mov
addr16
cmps
add
cmp
mov
repnz
lds
xchg
ss
std
dec
test
mov
sub
mov
sub
popa
fs
test
inc
(bad)
fbld
out
scas
xor
push
xor
inc
cli
imul
dec
mov
int3
pop
mov
test
lock
retf
and
push
aas
iret
out
pop
or
shl
in
add
das
xor
aaa
adc
jl
cwde
or
sub
call
add
mov
pusha
sub
mov
(bad)
out
call
movs
neg
mov
cmp
outs
fist
imul
test
cmps
mov
mov
and
scas
adc
pop
jns
pop
jg
inc
outs
jp
dec
cmc
pop
lea
pusha
pop
pusha
dec
stos
dec
fbld
shl
push
push
dec
fbstp
into
cmp
mov
xlat
pushf
rcl
inc
xchg
into
sub
int3
fcom
retf
inc
cmps
mov
push
inc
or
test
mov
push
push
test
or
push
inc
dec
inc
mov
cld
inc
jmp
xor
or
pop
call
stos
dec
in
bound
rcl
scas
mov
pusha
cmp
div
shl
or
ins
out
in
ror
test
js
in
mov
or
in
push
mov
mov
sub
icebp
xchg
adc
sub
fwait
cld
sbb
xchg
inc
mov
(bad)
pop
xchg
cmp
xchg
mov
or
ds
xchg
jecxz
lea
aad
call
or
add
push
dec
add
rcr
push
mov
pop
out
test
dec
popf
ins
sub
mov
pushf
add
push
cmp
mov
xor
mov
push
sub
xor
xchg
and
repnz
lods
ds
pop
or
nop
inc
(bad)
mov
xchg
pop
dec
(bad)
inc
je
iret
jmp
mov
sti
mov
cwde
(bad)
aas
mov
ja
cmps
mov
sub
and
push
pop
mov
out
xchg
hlt
adc
(bad)
mov
cmp
int3
pop
pop
sahf
push
xor
mov
xor
mov
cdq
pushf
mov
sub
jae
inc
popf
xor
sbb
mov
les
adc
movs
jle
(bad)
sbb
js
mov
cwde
push
jle
jae
xor
fimul
cmps
dec
push
loopne
push
lea
push
cmp
retf
lods
mov
xor
popf
mov
add
push
mov
fisubr
test
cmp
inc
and
jecxz
idiv
scas
mov
and
dec
es
icebp
add
mov
sub
lea
dec
(bad)
push
(bad)
packuswb
adc
(bad)
popf
mov
mov
push
fisttp
pop
fldcw
lahf
dec
push
cwde
test
sub
and
iret
dec
imul
mov
js
repnz
xchg
push
cmp
pop
pop
mov
hlt
push
out
sub
xchg
pushf
mov
or
mov
push
xor
aaa
sar
retf
or
stos
test
mov
nop
add
test
mov
cmps
ins
push
test
add
pop
imul
enter
mov
add
jmp
push
mov
sbb
cmp
inc
pop
inc
ret
mov
dec
jae
mov
mov
int3
pop
inc
cmp
or
add
(bad)
xchg
jne
xor
int3
push
shl
outs
or
fdivr
out
dec
enter
pop
lods
push
and
test
adc
inc
mov
cmp
stos
xor
lods
pop
fwait
pop
test
(bad)
jl
in
push
push
movs
mov
aas
push
mov
in
outs
push
pusha
mov
cli
repz
dec
sub
pop
fisttp
sbb
je
in
cmps
(bad)
es
xchg
daa
ja
add
retf
dec
test
lahf
emms
ja
fsub
rcr
test
mov
and
dec
and
jae
fs
cdq
les
gs
aam
stos
jo
push
mov
adc
or
jnp
out
dec
dec
movs
ss
les
(bad)
mov
adc
out
mov
mov
fmul
test
inc
mov
stos
movs
aam
out
js
std
jo
mov
mov
cli
inc
lods
retf
mov
xchg
cs
pop
push
add
and
(bad)
push
add
mov
sbb
jecxz
xor
(bad)
push
lods
jp
cmp
dec
fsubr
in
iret
mov
inc
pop
das
stc
out
setbe
xchg
pusha
aaa
sahf
iret
pop
jno
js
pop
adc
xor
mov
mov
pop
add
mov
call
xor
clc
xchg
sub
jmp
sub
fidivr
fdiv
and
in
(bad)
jg
cmp
pop
mov
popf
into
ret
fst
out
repnz
lods
or
lahf
ror
pop
shl
stc
and
push
cmc
push
retf
ins
lock
and
(bad)
idiv
out
sar
mul
dec
rcr
and
adc
ja
mov
adc
(bad)
lock
jbe
cdq
mov
sbb
(bad)
data16
sar
add
or
sbb
mov
ja
sub
rcr
iret
push
cmp
std
out
sbb
fst
xlat
dec
mov
call
ja
or
inc
mov
cwde
inc
clc
fisub
add
pushf
fnstenv
rcl
retf
fbld
sbb
xchg
nop
pop
(bad)
bound
aam
jmp
adc
push
ret
in
xchg
cmps
dec
adc
mov
repz
pop
and
mov
cmp
push
xor
pop
jecxz
repz
ja
or
ds
pusha
int3
mov
mov
cdq
out
lods
stos
cmps
leave
pop
xchg
outs
(bad)
in
and
rcl
push
rcr
inc
mov
mov
lods
fsub
pop
call
sbb
cwde
adc
xor
inc
add
outs
aaa
mov
mov
call
sub
add
push
je
adc
icebp
movs
cmp
into
pop
mov
inc
fst
ret
shufps
or
cld
shr
mov
mov
fsub
stos
lock
xchg
sbb
xchg
dec
push
inc
jl
push
cs
pop
jg
jmp
sub
sbb
sar
stc
mov
jmp
jecxz
xlat
mov
fisttp
xchg
into
in
aas
push
add
jae
scas
mov
sbb
jns
add
div
xchg
aas
stos
test
jg
aad
lea
push
cmp
mov
mov
leave
push
out
mov
or
adc
pop
cmp
inc
xor
pop
out
in
xchg
call
iret
stc
popa
imul
push
repz
pop
repz
dec
test
add
xor
inc
mov
xchg
movs
das
test
xchg
aas
sbb
hlt
js
mov
xchg
sbb
adc
popf
pop
cmps
pop
iret
xchg
ds
retf
push
outs
inc
pop
in
push
push
jecxz
ret
xor
jno
jbe
arpl
xor
popf
mov
add
(bad)
hlt
sahf
sbb
fdivr
pop
and
inc
cmp
xchg
cmps
int
mov
fs
push
in
in
push
outs
dec
cdq
push
and
retf
xor
mov
call
and
mov
loope
push
sub
ds
sbb
xchg
and
aam
sub
aad
pop
mov
add
sbb
push
push
aas
push
sbb
cmps
bound
mov
in
aaa
fwait
or
(bad)
pusha
add
pop
lds
mov
jg
cmp
dec
push
retf
enter
jp
out
pushf
push
sbb
pop
mov
out
xchg
mov
add
int
and
(bad)
(bad)
and
add
lock
lods
(bad)
push
out
dec
xchg
jae
lahf
imul
hlt
mov
pop
cmp
rcr
mov
or
mov
test
mov
mov
rol
outs
es
jmp
jno
jg
or
test
xchg
adc
into
push
sub
or
out
cmps
cmc
mov
push
sbb
jecxz
rcr
movs
div
mov
repnz
or
das
xor
inc
add
hlt
outs
addr16
xor
mov
ins
inc
push
test
mov
push
fwait
sub
cdq
aam
cli
in
mov
or
pop
push
cwde
jl
pop
xchg
xchg
push
mov
add
dec
jne
push
fisub
add
fnsave
push
sbb
fisttp
mov
cs
aam
jmp
sbb
call
push
sbb
sbb
aas
lds
dec
cmp
outs
(bad)
and
mov
popf
loopne
rcr
out
cmps
lock
aad
fwait
dec
retf
mov
xchg
test
adc
or
sub
push
jg
mov
sbb
mov
cvtps2pi
sbb
and
adc
scas
int3
jae
adc
sbb
cmps
push
add
pop
or
push
ds
sbb
les
push
jmp
pusha
pushf
and
sbb
mov
push
cmp
in
cld
nop
rcr
push
cmp
fdiv
add
jbe
mov
mov
pop
popa
cld
icebp
push
and
aad
mov
adc
imul
loop
pop
mov
out
stos
adc
inc
and
mov
rcr
mov
sub
sbb
fsubr
loop
into
(bad)
shl
js
sub
fmul
adc
mov
fwait
jmp
sbb
cmp
and
cmp
out
shl
and
pop
in
fist
neg
fst
inc
add
pop
push
into
or
mov
repnz
inc
cs
dec
xchg
mov
or
sbb
jg
pusha
pop
bound
inc
adc
out
sub
stc
push
sbb
mov
in
jg
xchg
cmps
stos
adc
in
push
pop
cmp
inc
ror
cmp
ins
pop
mov
fist
fiadd
ret
pop
(bad)
xchg
dec
test
push
jle
add
mov
add
cmp
push
or
pop
and
push
test
dec
fist
mov
pop
inc
push
movs
dec
and
aam
data16
sbb
mov
mov
test
bound
adc
push
jmp
or
hlt
dec
push
aad
fnstsw
ins
jmp
pop
int3
out
(bad)
xchg
into
stos
pop
das
sub
xor
mov
mov
sub
or
dec
sub
lods
sbb
rol
(bad)
test
dec
arpl
add
xor
xchg
mov
imul
test
std
add
cs
setl
les
iret
in
fiadd
adc
and
dec
call
sbb
bound
arpl
jecxz
ja
mov
lods
mov
aam
dec
add
add
mov
cmp
xchg
ins
inc
xor
mov
mov
fidiv
(bad)
pop
push
pushw
sbb
xor
xlat
bound
jle
xor
(bad)
mov
mov
in
in
jecxz
popf
add
and
iret
jne
cs
stos
xchg
cmp
repnz
leave
and
push
out
sub
or
ds
das
and
sahf
xchg
push
xor
adc
jnp
in
test
cs
iret
sbb
arpl
sub
cmp
jle
icebp
test
in
pop
inc
mov
mov
mov
loop
xchg
sub
fdiv
mov
not
sub
stos
xchg
leave
call
push
popf
(bad)
xlat
jns
jge
fs
inc
dec
mov
scas
call
call
mov
dec
inc
xor
xchg
sbb
or
mov
sti
gs
inc
jecxz
mov
cmc
inc
retf
test
adc
repnz
loop
xchg
mov
retf
mov
inc
push
test
and
adc
ret
cmp
ss
mov
push
mov
test
dec
and
sbb
push
xor
fidiv
mov
pop
cmps
in
lock
shr
movs
dec
mov
fmul
cwde
aad
cs
rol
arpl
int3
mov
sbb
mov
mov
or
aaa
mov
xor
scas
(bad)
xor
cmp
add
out
dec
imul
mov
dec
ficomp
adc
mov
and
push
out
jnp
stc
mov
clc
loop
xchg
adc
dec
rcl
into
daa
pop
(bad)
mov
sahf
jmp
into
pop
in
xchg
xor
mov
sbb
adc
or
das
or
call
mov
int
fdiv
dec
pop
mov
sahf
and
loop
pop
mov
mov
jp
mov
loope
outs
xor
pop
add
fnstenv
jge
jae
out
in
sub
and
lods
popa
jg
jno
and
dec
data16
nop
mov
sub
jb
scas
call
(bad)
shr
or
jmp
mov
xor
push
in
sbb
arpl
inc
scas
pop
es
out
cmp
cmp
adc
int3
fcom
push
pop
and
sbb
mov
es
shl
leave
(bad)
xor
or
retf
mul
outs
movs
imul
sub
(bad)
(bad)
sub
in
mov
ja
mov
jbe
lods
or
inc
pop
test
aaa
clc
mov
mov
push
mov
adc
stos
in
in
mov
adc
icebp
je
sub
jbe
les
jmp
lock
clc
arpl
dec
adc
movs
or
ret
jl
(bad)
lds
in
inc
add
sub
mov
in
push
push
or
mov
retf
mov
xchg
scas
jne
loope
adc
jle
mov
push
or
jb
adc
int3
shr
retf
xchg
retf
xchg
push
sbb
pop
xchg
jmp
mov
and
int3
pushf
iret
das
jmp
aam
or
jecxz
xor
pop
repnz
cmp
fwait
stc
std
or
shl
data16
in
pop
mov
aaa
fcomip
mov
cwde
stc
pop
push
pop
jmp
js
add
ror
fucomip
hlt
mov
ret
ror
cmp
std
in
and
loope
jae
mov
inc
adc
je
push
pop
out
add
shl
das
and
inc
and
popa
icebp
inc
mov
xchg
cwde
repz
imul
push
push
jno
xchg
cs
scas
ss
sbb
push
les
sub
pop
jp
sub
mov
stos
stc
sub
inc
pop
leave
inc
and
push
stc
imul
mov
add
or
dec
inc
sbb
fidivr
cmp
outs
push
std
or
mov
fld
(bad)
(bad)
adc
adc
lahf
push
mov
sbb
adc
jmp
repnz
xchg
inc
lahf
mov
ins
cld
aam
cli
mov
sar
ins
add
int3
xchg
scas
ja
lea
lods
movs
adc
dec
gs
jle
(bad)
sar
jmp
dec
rcl
push
sahf
mov
sub
adc
in
mov
cmc
xchg
sbb
scas
cmps
stos
mov
or
mov
dec
imul
or
retf
fisttp
xchg
lods
loop
mov
push
fisubr
cld
imul
sub
in
enter
xchg
into
lahf
movs
and
jmp
xchg
fucomip
and
jb
mov
pop
fld
(bad)
push
sbb
push
mov
sbb
inc
les
test
cmc
cmp
sbb
arpl
xor
mov
movs
leave
jne
xor
je
ds
cmc
pop
imul
sbb
aam
inc
mov
mov
jecxz
jne
mov
sub
ss
cmc
add
pop
ds
out
outs
mov
jbe
je
xchg
jle
in
inc
mov
pop
nop
or
or
mov
repnz
pop
pminsw
shl
xor
cld
(bad)
icebp
xchg
cmc
mov
in
aas
clc
mov
mov
pushf
mov
cmp
not
or
fdivr
cmp
cli
in
daa
dec
in
pop
xor
gs
clc
xchg
mov
pop
and
adc
ins
lods
or
cmps
pop
sbb
test
loope
dec
mov
xor
sahf
fwait
fs
stos
in
repz
into
cmp
cmc
icebp
aam
jnp
pop
arpl
cs
ja
xchg
jno
jl
mov
xchg
adc
pop
rcl
cdq
ins
test
jle
push
adc
pop
pop
and
std
std
cmp
dec
pop
ret
pop
jmp
xchg
mov
ret
mov
or
pop
iret
pop
rol
jo
adc
or
idiv
xchg
sbb
int3
loope
and
test
adc
ja
sub
or
sbb
mov
mov
mov
mov
push
inc
popa
xchg
out
xor
inc
push
sbb
mov
(bad)
and
mov
xchg
movs
in
in
outs
loope
jnp
xchg
jne
add
pop
call
cmp
fwait
sub
je
(bad)
jmp
inc
mov
sti
lock
enter
scas
jae
sub
and
mov
loopne
cmps
lods
lock
addr16
add
inc
imul
jmp
cmp
push
fistp
hlt
mov
ja
aaa
push
inc
test
push
icebp
pop
dec
or
std
pop
jbe
outs
in
ins
call
(bad)
fdiv
into
mov
sub
and
mov
ret
or
and
sar
dec
mov
mov
sub
mov
jp
enter
hlt
leave
jl
ret
mov
mov
sub
xor
adc
xor
push
mov
ins
add
mov
sbb
cmp
push
cmps
scas
nop
and
ds
adc
rol
into
ror
clc
mov
lahf
mov
sbb
rcl
inc
mov
add
jmp
mov
push
mov
rcl
movs
push
inc
ss
in
and
push
mov
cmp
mul
xchg
addr16
fs
xchg
mov
dec
add
shl
das
xchg
pop
je
iret
jno
test
or
(bad)
or
xor
pop
jmp
fcom
xor
fidiv
or
and
mov
jmp
dec
movs
mov
(bad)
cdq
mov
repz
jle
ror
xor
dec
xchg
retf
xchg
test
lods
sbb
jae
cs
fisttp
(bad)
xor
push
jle
sub
pop
fsub
push
pop
push
dec
scas
sub
neg
cmp
mov
out
add
mov
sub
push
sbb
mov
jmp
gs
(bad)
hlt
mov
adc
adc
xor
xor
inc
scas
mov
nop
jp
mov
imul
sti
adc
xchg
(bad)
xchg
int
lea
call
out
ret
sbb
mov
jo
data16
mov
das
mov
ror
fisubr
inc
out
outs
mov
adc
mov
xchg
clc
push
mov
out
test
fisub
mov
cmp
ja
js
sub
push
pop
cld
inc
add
fmul
pop
fdivr
and
push
fsub
daa
pop
mov
int3
pop
adc
xchg
xchg
cs
xor
je
stos
jbe
push
xor
mov
enter
add
fld
sbb
jmp
jg
jg
lods
cmp
xchg
sub
rcr
cmp
mov
and
sbb
sub
cdq
inc
adc
xchg
dec
push
mov
pop
jp
out
xchg
or
jb
push
icebp
ss
fimul
xor
les
add
out
xor
js
pushf
cwde
lods
mov
out
dec
or
jecxz
inc
adc
test
in
mov
stc
into
das
push
loopne
int
sar
jp
cmp
fild
sbb
mov
dec
scas
(bad)
sbb
shl
shl
xchg
out
mov
sbb
in
aad
mov
cmp
packsswb
(bad)
das
cmps
enter
(bad)
ficom
mov
loop
loope
stos
add
and
movs
adc
mov
and
rol
push
jns
nop
or
int3
jo
movs
pop
xchg
out
fwait
cmp
pop
dec
jns
inc
cli
add
push
push
mov
add
sub
pop
dec
aad
push
xor
dec
outs
add
mov
enter
and
addr16
fs
or
imul
add
fsub
(bad)
mov
mov
add
ins
jge
and
xchg
movs
push
cli
dec
dec
fmulp
bound
inc
pop
daa
pop
dec
pop
jns
sub
pop
adc
inc
sbb
jl
call
dec
nop
into
or
in
das
and
mov
lea
xlat
and
cwde
mov
out
push
xor
adc
push
inc
jmp
add
sub
mov
push
mov
imul
imul
mul
push
jb
fst
mov
push
jmp
pop
mov
xchg
mov
rol
add
pop
loopne
lock
loop
mov
fwait
xchg
mov
cmp
jg
dec
mov
test
push
fist
aam
outs
in
mov
mov
in
xchg
or
push
mov
clc
fild
xchg
push
cli
(bad)
ror
and
pushf
push
dec
jmp
imul
push
call
idiv
sub
lods
xchg
shl
fld
or
mov
test
push
sbb
ss
inc
jge
xchg
push
xor
das
fwait
scas
mov
cmp
in
psubw
mov
mov
mov
sbb
add
jg
xlat
pushf
mov
inc
jns
movs
std
scas
in
in
pop
gs
out
cld
xchg
sbb
sub
cmp
rcl
pop
lods
mov
dec
(bad)
div
cdq
test
stc
and
lock
lods
pop
fsub
out
retf
adc
popa
xchg
push
int
xor
cmp
mov
(bad)
stc
pop
shl
mov
xchg
fwait
aas
jne
cmp
ja
scas
je
mov
mov
xchg
push
push
jmp
mov
call
dec
add
daa
clc
ins
mov
outs
sub
xchg
and
jno
push
pop
cmp
mov
aad
loop
lds
scas
and
mov
daa
pop
and
fcom
adc
push
cmps
in
movs
imul
pop
mov
add
jae
cmp
push
mov
mov
adc
mov
pusha
mov
fbstp
ficomp
xchg
stc
sar
jl
lock
jmp
out
push
out
movs
and
mov
loop
in
enter
pop
sti
pop
mul
clc
rcr
pop
sub
adc
(bad)
aam
xchg
clc
stc
sub
sbb
fstcw
adc
iret
(bad)
sbb
ret
(bad)
fs
jmp
adc
mul
inc
sub
in
mov
fsub
xchg
or
xor
mov
jb
mov
outs
int
mov
not
icebp
and
test
int
cdq
jbe
inc
mov
dec
adc
sub
mov
mov
(bad)
loop
jmp
ins
push
cmp
retf
jb
dec
dec
mov
cmp
(bad)
das
ss
icebp
jl
movs
shl
xor
adc
sub
xor
data16
xlat
pop
hlt
and
mul
add
push
and
dec
aam
mov
push
xchg
jmp
sbb
rcr
iret
push
or
xchg
sti
mov
sub
mov
mov
loope
sub
out
sub
(bad)
dec
fcmovu
mov
inc
push
xchg
in
jge
cmp
imul
sbb
jbe
mov
loope
(bad)
(bad)
jnp
rol
xor
aas
jmp
jns
cmp
mov
stos
pop
in
pmaxub
pop
and
xor
imul
xlat
xchg
fucomi
addr16
xlat
mov
mov
outs
jbe
cmc
xchg
scas
aas
(bad)
sub
aam
out
lds
jmp
mov
das
add
mov
push
cwde
lahf
and
popa
mov
daa
inc
or
cmp
aas
ret
hlt
add
mov
aad
out
jnp
lock
int
sub
jmp
mov
pop
lock
neg
and
and
scas
not
and
or
fisttp
mov
fdivr
sbb
dec
and
sbb
push
pop
mov
xor
mov
xchg
out
jns
call
xor
call
xchg
push
mov
das
add
sbb
jl
(bad)
fldenv
fidivr
jb
fistp
mov
popf
outs
out
or
inc
(bad)
rol
ins
call
in
mov
cdq
dec
adc
xlat
and
adc
pushf
test
xchg
sub
shl
enter
adc
sub
and
add
or
adc
cmp
(bad)
xchg
push
pop
ins
movs
mov
lock
dec
iret
dec
fdivr
das
fwait
sbb
scas
xor
xchg
fistp
movs
pusha
popa
arpl
and
mov
maskmovq
and
xor
(bad)
movs
lock
pop
jge
dec
pop
add
mov
jecxz
push
arpl
push
xchg
jecxz
mov
pop
dec
daa
pop
sbb
popa
pop
sub
call
pop
fcmovb
sub
in
mov
or
xchg
cmp
aas
push
pop
xlat
xchg
sub
cmp
adc
push
xor
leave
fs
cmp
xor
add
and
ss
lods
inc
fistp
cmp
mov
or
popf
outs
pop
add
mov
or
fsubr
sti
pop
jns
mov
push
test
xchg
push
shl
mov
in
adc
jno
in
dec
xlat
sbb
repnz
xor
mov
movntq
mov
sbb
ss
loop
dec
test
cdq
jecxz
push
aad
scas
mov
test
pop
(bad)
fisub
rol
lods
jmp
(bad)
enter
xor
fnsave
retf
out
sub
add
push
mov
mov
mov
cmp
dec
adc
retf
loope
add
jnp
add
icebp
jge
inc
sub
(bad)
add
stos
sub
adc
cli
jg
test
sub
adc
xchg
mov
mov
pop
jmp
scas
scas
mov
push
aad
out
addr16
ja
test
je
mov
mov
mov
cmp
cvttps2pi
fld
lock
movs
or
cli
sub
arpl
push
(bad)
cwde
cmps
fild
data16
cmc
sbb
arpl
jne
mov
loop
outs
mov
scas
xchg
cmc
sbb
imul
jo
(bad)
mov
(bad)
fdiv
xor
inc
pushf
pop
aaa
xor
jnp
pop
push
mov
or
sbb
inc
add
mov
mov
add
test
(bad)
xchg
pop
pusha
inc
lock
add
xchg
loope
or
daa
mov
xor
mov
test
push
cmp
fsub
ja
mov
mov
int3
cmp
les
add
pop
sbb
push
jnp
inc
lods
fmul
(bad)
lahf
aad
fwait
inc
push
or
pop
mov
leave
mov
fcmovb
inc
retf
pop
mov
mov
loope
jge
mov
jg
imul
and
jge
sbb
pop
pmaxsw
mov
mov
mov
and
mov
push
cmp
loope
pop
je
loop
sbb
sub
push
mov
add
pop
ret
out
clc
sbb
sub
pop
xor
sub
outs
sub
stos
jmp
mov
loop
jg
retf
rcr
jge
fld
jge
es
int
ins
jbe
inc
dec
ret
out
and
(bad)
stos
shr
push
add
in
sub
push
fild
js
jmp
mov
mov
mov
push
shr
js
pop
lods
pop
add
ss
jmp
cld
aaa
pop
ret
mov
cld
in
fcmovb
mov
fmul
addr16
jno
sub
fmul
sub
mov
ficomp
push
scas
dec
sub
das
mov
jmp
xchg
out
imul
in
sub
arpl
aaa
shr
loop
adc
hlt
arpl
jae
sub
pop
popa
pop
add
(bad)
int3
sahf
gs
sbb
cli
jno
jbe
in
fcmove
cdq
into
xchg
xchg
and
push
ret
pop
adc
mov
movs
pop
xchg
mov
pop
fwait
and
ins
addr16
mov
sbb
stos
pop
popa
or
inc
add
xor
data16
pop
(bad)
daa
loop
inc
cmps
ret
pop
movs
dec
dec
sub
mov
mov
mov
jns
dec
in
jne
out
repz
test
pop
ret
sbb
and
or
add
dec
pop
inc
fadd
dec
sub
add
inc
jnp
popf
scas
iret
bound
scas
ret
scas
outs
adc
test
add
test
and
xchg
frstor
inc
mov
out
dec
stos
loop
sahf
cmps
push
adc
xchg
jle
sahf
push
push
mov
aaa
pop
jo
jns
cs
ins
adc
and
cs
and
stos
mov
add
inc
clc
adc
pop
call
mov
loope
jp
adc
or
stc
mov
das
lods
int
adc
lods
sub
ins
int
jns
mov
adc
neg
popa
pop
pop
push
push
popa
mov
sbb
xchg
loop
pop
ror
cdq
push
sbb
xor
and
adc
ret
shr
mov
fistp
rcr
rcl
mov
in
adc
(bad)
and
ins
inc
in
pop
mov
push
lods
mov
mov
cmps
cmp
xor
es
bound
std
jmp
and
hlt
push
scas
mov
xchg
jno
adc
out
stc
imul
jns
ins
ins
sbb
test
add
or
sub
(bad)
cmp
xchg
ins
out
adc
pop
scas
mov
shl
mov
ja
mov
loopne
pushf
fisub
or
or
jnp
sbb
lock
xchg
inc
int3
add
scas
jo
push
mov
(bad)
ror
dec
pop
arpl
xchg
cmc
inc
repz
adc
call
add
aas
add
out
xor
ret
sub
push
dec
int
out
movs
aad
dec
mov
xchg
dec
sub
jp
fcomp
test
pop
mov
inc
mov
pop
fidivr
test
retf
pop
or
js
dec
jae
rol
pop
loopne
std
fdivrp
hlt
mov
gs
mov
sbb
rol
add
repnz
sti
adc
mov
repz
cwde
call
mov
xor
fistp
jecxz
lods
jno
inc
ins
leave
adc
stos
pushaw
aaa
adc
fistp
scas
or
jbe
mov
ror
cmp
mov
jmp
aam
sbb
icebp
jnp
inc
fiadd
fcmovnb
pushw
sub
sub
add
fistp
pop
mov
and
into
enter
jns
(bad)
aaa
and
ins
ins
(bad)
lds
xchg
leave
mov
jecxz
das
scas
xor
das
xchg
push
(bad)
or
lods
ret
mov
xchg
outs
xor
mov
sbb
popa
mov
pushf
jmp
int
repnz
lahf
psrlw
movs
ds
pushf
add
jmp
xchg
js
fwait
mov
cld
xchg
adc
loopne
xor
xchg
stos
jl
mov
inc
shl
outs
data16
pop
das
pop
sub
cdq
imul
fcom
out
cmps
add
jbe
inc
add
dec
into
shr
add
jmp
lea
add
jb
add
cmp
out
cmp
push
fstp
add
adc
dec
lock
sbb
push
call
jne
mov
adc
mov
pop
adc
aaa
icebp
jno
xor
mov
ja
xchg
sub
or
push
mov
dec
pcmpgtd
adc
popa
xchg
sub
in
adc
jmp
mov
lahf
or
cmp
xchg
into
icebp
push
and
xor
movs
pop
daa
and
dec
(bad)
cli
mov
cwde
jb
retf
rcr
pushf
cmp
in
mov
inc
call
push
push
shr
icebp
jmp
inc
lahf
test
test
je
mov
cs
push
ss
popa
fs
addr16
fdiv
out
neg
test
cmps
cs
sbb
loopne
xor
mov
inc
nop
sub
aas
ror
pop
and
adc
xor
gs
outs
stos
cdq
inc
test
add
push
das
enter
fs
xchg
std
sub
ss
jns
xchg
cmp
daa
cmc
inc
mov
or
cmp
cdq
cdq
sbb
xchg
mov
fwait
nop
movs
pusha
pusha
(bad)
aas
xchg
outs
jge
mov
sub
je
add
fs
pop
mov
out
mov
cli
jns
inc
stos
mov
sbb
sbb
pushf
(bad)
pop
sub
jmp
scas
repz
popf
or
js
jmp
push
ret
ds
dec
jge
jl
ins
mov
inc
sahf
jbe
inc
jmp
mov
xor
(bad)
call
jo
imul
add
pop
push
add
cwde
lea
scas
pushf
daa
xchg
mov
jne
imul
dec
icebp
pop
mov
push
push
xchg
push
sub
inc
sub
and
(bad)
jno
or
push
ret
iret
pop
xor
mov
mul
pushf
cmc
sub
pop
sbb
ja
mov
dec
cli
xlat
in
retf
jae
shl
lods
mov
shl
mov
cmps
in
icebp
int3
js
ret
aas
pop
cmp
jno
push
jmp
and
xor
pop
sub
xor
mov
add
dec
jl
mov
and
aas
scas
sbb
cmp
sub
mov
cli
aas
in
mov
hlt
and
and
es
mov
push
repz
pop
dec
add
dec
sbb
aaa
sar
dec
xor
fst
daa
mov
xor
(bad)
sub
ror
cmc
jmp
xchg
aas
mov
addr16
arpl
fisttp
nop
je
aas
int3
or
cmp
rol
ins
test
fucomp
inc
adc
dec
xchg
in
clc
dec
sub
sti
push
mov
repnz
fst
mov
or
jle
mov
stos
or
mov
retf
(bad)
outs
in
(bad)
cld
push
inc
dec
iret
arpl
stc
call
movs
mov
(bad)
stc
sbb
out
inc
sbb
faddp
out
shl
push
test
movs
jno
stc
std
jb
adc
dec
dec
out
jmp
in
(bad)
fsub
daa
mov
inc
int3
mov
popf
popf
fwait
enter
imul
fistp
adc
jp
mov
(bad)
rcl
arpl
scas
cdq
aas
push
icebp
aam
mov
ss
pop
adc
cmps
cmp
sub
stos
loop
popf
cdq
or
fsubr
sbb
das
lods
int3
sbb
js
iret
out
inc
dec
cmp
frstor
retf
dec
lods
mov
loop
in
(bad)
and
push
mov
or
xchg
rcr
int
jge
mov
popf
scas
dec
mov
xlat
jae
sbb
sbb
mov
int
dec
mov
push
jbe
xor
pop
xor
pop
sub
lods
sar
mov
inc
arpl
addr16
loope
aaa
cmp
or
stos
push
loop
int
(bad)
in
mov
and
lock
jno
mov
fsub
cmp
lds
dec
cdq
pusha
lahf
add
mov
jp
cmp
popf
and
dec
or
xchg
mov
fs
(bad)
popf
and
mov
mov
adc
aad
add
in
out
xchg
cwde
mov
xchg
push
idiv
mov
aaa
xchg
dec
ins
js
jmp
pushf
lods
jp
(bad)
adc
fs
jp
daa
ja
jmp
jae
mov
daa
cmps
popa
mov
lea
xchg
in
stc
xor
cmp
rcl
cdq
mov
popf
jb
mov
jecxz
mov
std
int3
sub
jge
or
mov
and
sub
add
loope
mov
in
cmp
add
sbb
bound
xchg
mov
add
neg
xchg
aam
push
(bad)
pop
push
in
and
xchg
fdivr
cmps
out
aam
pop
adc
add
retf
add
mov
add
je
std
ds
out
xor
pop
push
imul
rcl
ret
mov
jl
push
pusha
pop
neg
repz
adc
push
sbb
dec
mov
call
sbb
xlat
sbb
(bad)
jl
pop
fwait
out
clc
pop
dec
add
sub
(bad)
out
add
test
inc
out
mov
mov
inc
add
sbb
push
int3
jns
xor
ins
sbb
jl
push
iret
cmp
bound
mov
in
pop
pop
das
not
sbb
daa
ins
test
arpl
dec
jmp
(bad)
in
inc
jo
fwait
ja
movs
mov
mov
xchg
mov
or
push
es
inc
out
xlat
mov
bound
jb
jmp
in
pop
jge
and
shl
ja
in
mov
cdq
cdq
retf
cmp
dec
loopne
test
(bad)
in
fisttp
ins
scas
outs
out
js
icebp
in
int
mov
or
add
aas
cmp
push
inc
sub
jp
pop
fnstenv
sub
shr
bound
mov
(bad)
je
out
cwde
out
pop
mov
fcomp
jb
ffreep
out
or
hlt
cs
ins
add
dec
mov
scas
add
repnz
dec
stc
push
or
popa
test
ins
ds
bound
stos
les
retf
add
inc
mov
mov
dec
jle
enter
cs
(bad)
cmps
jns
in
adc
mov
and
aas
or
push
ret
test
xchg
cmp
jmp
jns
jg
cmc
jmp
dec
test
repnz
sbb
mov
loopne
or
in
and
lock
sbb
add
adc
xchg
dec
push
sbb
inc
aaa
pop
aam
sub
hlt
jecxz
arpl
pusha
es
inc
jnp
add
jecxz
cmp
jne
popa
add
aas
add
adc
mov
loop
cmp
xchg
cmp
sbb
nop
or
call
movs
or
lods
clc
add
repnz
aad
add
idiv
test
mov
scas
sub
mov
lahf
sbb
in
mov
ret
inc
cli
mov
out
outs
adc
xchg
xor
inc
(bad)
out
add
push
in
jae
or
or
pop
cmps
js
adc
sub
xor
shl
aas
mov
xor
int
ins
pusha
loope
sub
shl
mov
leave
jge
clc
jbe
popa
xchg
push
test
(bad)
cs
inc
stos
xchg
aad
mov
push
cmp
out
cmp
mov
mov
ds
ss
dec
add
mov
sbb
push
mov
jbe
fsubp
mov
sub
pop
or
mov
push
inc
mov
aaa
lahf
dec
sub
inc
imul
mov
mov
ins
or
jno
dec
lock
(bad)
xor
add
in
mov
pop
clc
aam
jne
outs
ret
jne
or
inc
mov
adc
inc
pop
jmp
(bad)
jno
icebp
ret
add
or
outs
sbb
ds
cli
sbb
xchg
gs
popa
les
lods
lock
clc
stos
leave
xchg
and
dec
xchg
xchg
mov
fiadd
repnz
aad
retf
adc
shr
dec
aaa
ficomp
mov
dec
es
mov
es
imul
xchg
or
mov
xchg
(bad)
pop
or
cli
aas
lds
dec
push
and
mov
mov
mov
push
sub
icebp
sti
jae
lock
push
jnp
pop
jno
icebp
fbstp
test
cmp
mov
jnp
pop
jge
jp
ss
mov
sahf
int3
mov
movs
add
fdivr
sbb
jmp
out
hlt
in
ret
xchg
xor
push
xchg
add
mov
pop
test
sub
stos
mov
xchg
lock
stos
xchg
lods
cmp
mov
out
mov
inc
fs
push
xor
mov
out
ret
mov
fmul
scas
mov
cmp
ficom
pop
cmp
or
adc
adc
mov
cld
cld
gs
ret
test
dec
scas
adc
sbb
adc
or
(bad)
std
add
xor
cs
xor
outs
push
shl
pop
push
or
xchg
push
ror
sbb
pop
and
sbb
scas
mov
call
inc
cmp
mov
push
retf
das
sub
push
dec
xchg
add
and
out
vpmacswd
jl
sbb
test
jb
outs
cmps
sbb
jno
fisub
(bad)
call
jo
stos
in
scas
mov
sbb
inc
les
int3
fucomip
call
scas
pop
add
or
add
fimul
inc
push
(bad)
push
fstp
push
fwait
inc
mov
test
sbb
mov
jo
aam
push
(bad)
hlt
pop
call
call
mov
cli
dec
pop
mov
cmp
imul
fistp
scas
lock
ja
repz
ret
stc
sub
mov
aas
(bad)
adc
adc
inc
sbb
mov
int3
movs
and
pop
sti
sbb
cmps
fldenv
scas
fnop
imul
xor
inc
call
fcomi
lods
ror
mov
mov
cmc
or
pop
cmc
in
mov
(bad)
fs
addr16
loop
lea
push
lea
pop
or
iret
jae
movs
push
pop
test
pop
mov
add
dec
ds
shl
lahf
jns
jecxz
inc
mov
mov
ficomp
add
jmp
repnz
pusha
adc
add
gs
push
loopne
retf
shl
mov
fs
out
ins
bound
mov
aaa
sub
mov
lods
or
ret
enter
gs
rol
test
or
xchg
pop
inc
aam
lods
movs
xlat
jb
xlat
cs
cld
in
aam
xor
out
add
loope
(bad)
fmul
dec
(bad)
fist
xchg
adc
xchg
retf
arpl
aas
test
push
push
das
and
lea
inc
or
and
cmc
mov
sbb
je
jb
into
push
and
mov
lods
aad
test
push
jle
jbe
loopne
xor
mov
sbb
movs
dec
test
(bad)
retw
add
jp
inc
mov
(bad)
pop
out
test
xchg
xlat
sbb
in
push
xchg
xor
call
adc
inc
push
sub
mov
pushf
out
bound
xor
xchg
hlt
push
xchg
jnp
mov
sub
adc
daa
sub
lock
sbb
mov
or
(bad)
xlat
in
sbb
pop
ds
fisubr
test
dec
mov
cmc
add
xacquire
or
cmp
fidiv
inc
xor
shr
pop
or
pusha
jns
or
push
(bad)
mov
and
pop
jb
dec
mov
js
mov
push
les
loope
jo
cmp
mov
sub
push
fld
adc
push
repz
sbb
push
fnstenv
push
pop
in
sub
aas
dec
ja
mov
mov
mov
push
jnp
stos
jae
push
inc
jge
aas
pop
out
or
jne
punpcklwd
dec
or
nop
loopne
pop
push
dec
lock
lds
add
repz
sar
xchg
pop
leave
mov
push
test
cmc
sbb
aas
movs
mov
mov
popf
jmp
cmc
pop
adc
je
xlat
mov
push
movs
fs
mov
sbb
xor
dec
fmul
repnz
ret
cmp
out
sub
aas
mov
jg
(bad)
stos
aas
mov
test
jg
cwde
(bad)
lds
add
stos
fucom
setl
inc
stos
or
mov
xor
(bad)
pop
outs
in
xchg
add
outs
ja
retf
add
sti
cmps
mov
ds
inc
push
arpl
pop
add
mov
pusha
shl
mov
int3
cmps
and
cmc
cmc
int
cmp
dec
jae
dec
adc
pop
inc
mov
dec
les
mov
mov
pop
and
push
inc
jg
mov
jmp
xchg
mov
aas
clc
stos
mov
mov
call
into
sub
sbb
add
je
rcl
mov
into
jbe
mov
pop
repnz
or
add
jbe
dec
je
sub
cmp
adc
pop
sbb
dec
inc
mov
push
adc
add
adc
test
push
mov
mov
jb
adc
xor
ss
and
test
repz
ins
xchg
push
std
jno
mov
call
jne
scas
xlat
jno
dec
jecxz
jnp
xchg
imul
jae
imul
loopne
sbb
xchg
jo
mov
movs
cs
push
(bad)
fimul
sub
fwait
ret
mov
mov
cld
in
mov
mov
(bad)
test
add
and
and
push
lahf
push
xlat
lahf
imul
jge
mov
mov
popa
cld
xchg
popf
cwde
ja
data16
sbb
in
cmc
movzx
jno
jnp
xchg
test
jg
jbe
inc
add
or
in
(bad)
enter
pushf
cmp
loope
mov
(bad)
push
sar
sahf
inc
xor
aam
xor
cmp
push
mov
dec
pop
mov
mov
out
add
jmp
push
push
arpl
jl
jne
sub
out
not
inc
pop
cmp
lods
gs
pop
adc
cmp
js
scas
lods
pop
mov
daa
lahf
push
je
jmp
out
arpl
sbb
js
stos
call
mov
jp
dec
sbb
addr16
xchg
jo
icebp
popf
mov
add
and
dec
in
stos
pop
aam
cmp
pop
(bad)
jmp
data16
pop
std
sub
jle
test
inc
movs
mov
inc
test
lahf
sub
mov
rol
rcr
mov
xor
sbb
mov
arpl
loopne
rol
add
nop
cmps
test
shl
mov
mov
push
mov
(bad)
loopne
scas
xchg
lahf
dec
push
dec
fdiv
mov
out
shl
stos
push
sbb
xchg
jg
mov
ret
pop
das
sti
and
ror
sub
lds
pop
rcr
jnp
push
jle
mov
xchg
push
ja
and
lock
es
and
push
dec
hlt
pop
and
in
mov
xchg
fdivr
xor
repnz
iret
popa
jns
lock
jmp
mov
xchg
mov
sub
xor
mov
mov
out
ja
add
cmp
(bad)
loope
sub
pop
popa
mov
idiv
jp
mov
imul
setne
sbb
cmc
hlt
rcr
mov
push
mov
lds
inc
inc
popa
mov
cmp
retf
mov
shl
outs
loop
cmps
bound
add
sub
stos
jge
pop
test
adc
push
ret
fistp
cmp
xor
loope
out
mov
pop
mov
pop
xchg
cmp
(bad)
jmp
lahf
into
xchg
xchg
clc
and
add
xor
test
(bad)
in
jl
mov
inc
sub
inc
inc
sbb
push
mov
pop
test
lock
sbb
out
rcl
mov
mov
enter
push
rcr
retf
cmps
in
popf
push
sbb
jmp
sub
pop
sbb
lods
data16
out
jge
mov
rcr
scas
pop
enter
sub
fwait
arpl
xchg
inc
jbe
imul
fdivp
mov
or
daa
pusha
aaa
mov
jle
adc
dec
and
lods
adc
ins
jl
aaa
or
mov
inc
mov
cmps
or
add
nop
test
add
pop
inc
daa
loop
sub
pop
or
jl
in
dec
(bad)
xchg
xchg
fsubr
fld
jg
dec
popa
add
addr16
iret
(bad)
scas
sahf
jb
ret
jl
popf
in
ins
ror
mov
xor
call
ror
cmps
ss
out
sbb
pop
sub
movs
pop
pop
fstp
push
mov
pop
pushf
xchg
nop
xor
aaa
aas
jb
sti
cli
ja
test
cmp
(bad)
int
inc
shr
pop
pop
mov
adc
lahf
ja
xchg
inc
sbb
(bad)
aam
cli
das
pop
push
sub
cmps
movs
and
adc
ret
aam
pop
imul
lods
sub
rcl
mov
fdivr
inc
xchg
mov
enter
push
jl
cmps
jb
sbb
mov
cmp
cmp
sub
push
add
cmps
pop
(bad)
push
ret
mov
pop
pop
cmp
sbb
push
or
mov
inc
sbb
cdq
pop
pop
mov
mul
mov
shl
(bad)
lods
or
pushf
out
repz
inc
and
jb
icebp
cmp
ins
shl
mov
inc
jecxz
mov
cdq
dec
mov
xchg
mov
ret
push
xor
jecxz
jno
out
and
in
test
sar
jbe
stos
xchg
scas
(bad)
cs
jg
aad
dec
das
out
sbb
mov
mov
mov
repz
(bad)
out
mov
sbb
jnp
sbb
xchg
adc
jl
mov
dec
mov
rcl
cwde
arpl
cdq
mov
out
fstp
and
loop
jb
fidivr
stos
aaa
adc
daa
add
lea
mov
mov
mov
das
test
pop
adc
inc
sub
jge
sti
sbb
addr16
cmps
dec
iret
cs
dec
and
sbb
test
cmp
sbb
les
popf
xchg
jl
cmps
retf
mov
jp
xor
cmp
sbb
push
pop
fbld
in
sar
mov
and
cmc
jbe
jmp
rol
call
push
in
mov
and
fnstsw
xor
ret
or
xchg
adc
cmp
jb
jmp
dec
sbb
add
rol
test
mov
pop
fld
iret
dec
mov
adc
mov
sub
mov
leave
(bad)
pop
adc
ins
sahf
test
sub
ss
inc
jmp
popa
leave
cmp
clc
fisttp
vpaddsb
jmp
mov
pop
inc
mov
fdivr
jae
xchg
es
nop
mov
push
mov
xchg
lds
rcr
data16
clc
or
push
jge
dec
and
ds
jp
enter
scas
sbb
call
scas
(bad)
nop
inc
scas
pop
cmp
add
mov
lods
mov
in
xor
ja
mov
call
mov
sub
in
jle
cld
xor
xor
mov
or
dec
nop
inc
pushf
leave
cmps
mov
fstp
fistp
(bad)
ret
sar
jb
jg
in
inc
repz
loop
inc
fnstsw
enter
aam
call
aas
or
aas
out
xor
(bad)
les
rol
cmp
xor
push
bound
dec
pusha
in
in
adc
mov
lock
shl
xor
push
cld
in
mov
and
push
rol
ret
inc
jbe
int3
neg
jno
in
mov
or
aad
ins
jo
sbb
sub
rol
inc
xchg
push
mov
fldcw
inc
in
scas
xor
into
(bad)
js
cmp
repnz
and
retf
lea
mov
jl
sub
ins
pop
rcl
xchg
jo
leave
inc
mov
push
sbb
call
in
push
mov
shr
pop
outs
in
int3
fcomp
cmp
fist
out
inc
mov
inc
jo
push
dec
mov
and
mov
loop
xor
cmp
xor
mov
imul
mov
sbb
xchg
pop
mov
dec
dec
xor
call
xor
xchg
je
retf
jnp
push
shl
inc
(bad)
sbb
mov
(bad)
(bad)
rcr
mov
mov
(bad)
mov
int3
in
sbb
aas
ins
cwde
fisttp
mov
jmp
xor
add
push
xchg
out
add
xchg
xor
sbb
daa
sub
sub
inc
dec
icebp
lds
test
push
adc
test
movs
or
jo
jge
in
or
movs
xor
inc
pop
stos
ins
mov
and
xor
imul
push
sub
loope
lahf
cmps
push
dec
sub
sub
cmp
imul
mov
mov
popa
int
cmps
rcr
aam
inc
cmps
lahf
hlt
adc
stos
bound
lods
es
push
jl
jg
inc
ret
ficom
xor
jge
out
test
std
les
pop
mov
jns
push
push
push
nop
mov
inc
int
push
or
jle
xor
in
inc
adc
xchg
test
std
jmp
dec
jl
call
lods
inc
pop
xor
imul
ret
mov
inc
(bad)
(bad)
cmc
and
fadd
loopne
jge
adc
or
lahf
xor
mov
or
xor
mov
xor
movs
inc
jmp
fisub
add
jae
lods
fdivr
xchg
mov
test
aas
neg
xchg
inc
xor
xor
jl
mov
sbb
jle
add
into
ret
sbb
dec
add
in
push
cmp
or
fild
xchg
adc
ds
test
sub
jns
jne
jns
pushf
jns
popa
jg
and
or
mov
dec
inc
sbb
inc
mov
jp
loop
hlt
push
mov
push
add
pop
jle
xor
cmps
stc
stos
inc
push
stos
pop
cmp
lds
int
fdiv
fbstp
movs
jmp
xchg
stc
sub
shl
dec
xor
retf
cmp
aad
pop
call
jmp
push
imul
adc
cmc
lods
xor
sbb
hlt
jmp
ffreep
lea
jne
mov
ins
sbb
push
and
repnz
fisubr
push
sub
add
pop
cli
mov
mov
call
mov
mov
pop
scas
daa
outs
daa
mov
out
or
pop
adc
inc
push
sar
sub
mov
daa
(bad)
ficomp
lods
mov
jns
dec
mov
ret
inc
aam
je
jcxz
and
mov
shl
and
pushf
test
iret
int
jecxz
shl
add
cmps
add
(bad)
xor
rcl
and
fucom
jmp
xchg
setb
push
push
sbb
dec
pushf
xchg
ins
bound
or
jg
and
mov
cmps
mov
retf
sti
in
loop
cmp
mov
(bad)
push
(bad)
jmp
mov
mov
adc
cmp
and
sub
daa
test
mov
repnz
dec
mov
or
add
in
dec
push
dec
mov
test
or
add
jl
mov
sub
mov
lds
and
dec
mov
(bad)
dec
xchg
enter
out
or
test
jmp
dec
shl
xchg
(bad)
cmps
lea
xor
add
xor
or
sar
out
push
xchg
cld
xchg
rol
cmp
push
test
cmp
jp
iret
in
out
cmp
dec
push
fs
pop
cmp
div
dec
aaa
mov
sahf
xchg
aad
inc
imul
add
add
cmps
jns
dec
jo
add
jns
ret
add
mov
repnz
add
inc
pop
jae
fisub
lea
aas
sbb
xchg
fwait
in
push
fcmovnb
adc
loope
or
pop
xchg
xlat
in
pop
mov
mov
cmp
inc
mov
arpl
pop
inc
and
cmp
les
(bad)
push
fdivr
(bad)
inc
mov
loope
cmc
loopne
pcmpeqw
fs
leave
test
sub
imul
jae
imul
xchg
xor
sub
popf
pop
arpl
fwait
out
aaa
fucomip
push
leave
(bad)
out
pop
movq
jl
cld
and
fwait
push
sti
(bad)
retf
in
ds
mov
and
std
xor
push
pop
xor
repnz
scas
mov
inc
and
and
jge
pop
bound
addr16
push
shr
push
(bad)
or
dec
les
(bad)
push
arpl
retf
(bad)
sub
dec
push
jmp
push
mov
add
jnp
cdq
fisubr
sub
dec
std
jb
inc
popf
cli
data16
lods
je
sub
mov
sbb
popa
mov
adc
fist
mov
sti
mov
nop
mov
fild
add
repz
sbb
adc
mov
test
jo
bound
test
inc
adc
mov
lods
mov
pop
arpl
sahf
xchg
xchg
jmp
push
fisubr
mov
pop
cmps
je
mov
lea
inc
push
jnp
fldl2e
and
push
popa
mov
aaa
and
inc
dec
add
xor
mov
ins
loope
push
loope
xchg
aaa
out
adc
lea
out
mov
mov
xor
rol
gs
inc
push
push
stos
imul
dec
cmp
sbb
push
repz
cmp
pop
cmp
mov
cmps
fidiv
ins
iret
rol
lea
jae
pop
fimul
cmps
sub
pusha
add
dec
sar
cdq
jg
ss
and
or
shl
cdq
retw
cli
sbb
mov
add
ficomp
cmp
sub
repz
xchg
aas
ror
inc
addr16
mov
daa
sbb
inc
fsubr
(bad)
bound
inc
add
cld
mul
push
dec
ret
dec
daa
(bad)
add
daa
js
fwait
into
dec
loop
push
outs
and
push
pop
pop
sub
in
xor
fincstp
lock
mov
movs
popf
mov
(bad)
mov
fwait
dec
lds
clc
leave
cmps
or
imul
ror
fbstp
cmp
push
mov
xor
and
adc
mov
(bad)
mov
push
mov
inc
xchg
cmp
mov
imul
fisttp
clc
out
pop
mov
mov
outs
jbe
test
clc
stos
xor
aad
je
xor
test
fimul
push
mov
and
and
out
add
data16
fadd
dec
(bad)
xor
popf
add
mov
dec
mov
mov
xlat
loop
mov
out
das
jecxz
pop
cmps
scas
mov
or
enter
call
(bad)
lds
sbb
scas
ret
pop
sub
or
stc
mov
sar
pop
mov
nop
fldenv
xor
dec
xor
aad
xor
dec
jg
jns
adc
push
adc
mov
loopne
in
mov
add
sbb
ins
mov
push
adc
add
in
dec
mov
enter
ins
mov
cmps
test
xchg
cmp
xchg
ds
adc
fmul
cs
cld
arpl
inc
jecxz
sar
leave
mov
pushf
mov
or
add
add
sbb
mov
int3
sub
loop
imul
sub
inc
jnp
les
and
and
sti
xor
out
scas
inc
jnp
shr
jle
mov
sbb
popf
push
push
pop
push
dec
push
or
test
enter
push
cs
jp
(bad)
lods
pop
add
push
jno
mov
pop
push
fs
aaa
sub
sub
inc
pusha
clc
jp
mov
loopne
cli
ret
mov
cli
das
mov
xor
and
mov
test
cmp
ror
mov
out
push
push
lahf
in
push
cld
and
pop
dec
fisubr
sar
jp
(bad)
inc
mov
cs
mov
retf
sqrtps
jp
pop
adc
jge
test
jno
xor
les
add
out
ror
inc
cdq
push
fiadd
cmp
jge
shl
xor
pop
sub
xchg
bound
daa
sbb
daa
xor
mov
xchg
xor
call
xlat
sti
stc
retf
loope
and
dec
and
ret
dec
cmp
inc
inc
loope
jp
in
xor
stc
push
(bad)
retf
stos
sar
xor
or
cmp
adc
mov
mov
push
mov
popa
sub
sar
xchg
pop
cmp
(bad)
es
pop
sub
lea
mov
(bad)
xchg
inc
shl
mov
test
inc
push
push
sub
jl
xor
iret
fdivr
fprem
jae
ret
xor
mov
(bad)
xchg
dec
lahf
pop
jl
jle
mov
and
jge
not
cmps
xchg
daa
sub
xchg
out
ins
push
push
push
sub
mov
mov
test
es
stos
and
int3
sbb
out
popf
std
xchg
int3
dec
inc
xchg
adc
lahf
adc
push
(bad)
int
test
or
leave
add
lods
jl
dec
push
mov
mov
lods
add
loop
(bad)
bound
dec
xchg
cmp
(bad)
mov
xchg
cmp
call
push
or
retf
mov
push
add
push
push
(bad)
mov
getsec
adc
das
push
xchg
cmp
test
leave
pushf
sbb
aad
jmp
aad
rcr
inc
adc
fstp
fmul
(bad)
(bad)
xlat
movs
sahf
mov
test
dec
pop
retf
data16
and
in
scas
fcomp
ins
dec
sbb
bound
out
sub
mov
add
jg
xor
(bad)
xor
xchg
mov
sub
jae
dec
mov
addr16
movs
and
loope
aam
sahf
ror
jns
repz
loop
pop
fild
xchg
mov
ss
push
dec
inc
in
fdivr
mov
in
popa
rcr
popf
cwde
cdq
pop
mov
push
aam
push
fnstenv
iret
test
pop
adc
push
fwait
push
push
xchg
mov
jmp
xor
arpl
mov
call
in
jnp
inc
or
mov
mov
push
and
mov
je
sbb
dec
cmc
add
mov
or
bound
push
dec
jnp
xchg
sub
mov
inc
sbb
mov
and
aas
mov
scas
add
popa
inc
imul
sub
or
pop
xor
rcr
cs
cmp
push
mov
loopne
push
cdq
mov
jb
push
js
pop
sub
jp
vaddsubps
fwait
loope
push
xor
stc
push
sar
sbb
ds
cwde
sbb
mov
adc
jmp
test
jmp
dec
add
inc
xor
jno
pop
or
dec
test
adc
mul
ja
dec
lods
pop
hlt
ficomp
add
or
mov
cmp
add
je
mov
lea
std
jle
jge
dec
xor
jge
sahf
xchg
dec
and
mov
fabs
mov
pop
push
mov
add
cmp
inc
fstp
mov
rol
out
sub
xor
jecxz
(bad)
std
fsubr
cmp
adc
dec
fdivr
mov
mul
loopne
in
jle
sub
sub
push
mov
mov
push
jge
jmp
pop
xchg
int
mov
jmp
push
jo
cmp
mov
imul
mov
xlat
pop
sub
ret
enter
ss
jle
push
in
sub
ret
mov
jl
lock
cmc
mov
ficom
fisttp
ins
movs
sbb
cmp
std
int3
pop
mov
cmc
xor
push
sahf
(bad)
pop
stos
cmp
xchg
retf
push
pop
push
repnz
sub
sub
adc
mov
adc
cdq
push
mov
repnz
push
icebp
or
pop
jmp
pop
lds
inc
in
divps
bound
inc
repz
cmps
jb
push
sbb
in
sub
inc
cs
jp
arpl
lds
cmp
and
in
sub
xlat
sbb
jecxz
(bad)
pop
dec
cmc
ror
stos
add
jmp
sbb
dec
inc
aam
mov
pop
aad
movs
pop
dec
scas
stos
adc
dec
push
sar
retf
dec
add
mov
xor
mov
stc
mov
das
cmp
xchg
fidivr
inc
mov
and
jns
inc
test
mov
mul
xor
xchg
jge
pusha
xchg
xchg
pop
leave
outs
dec
stc
mov
pop
mov
arpl
stos
retf
das
or
sbb
aad
dec
sar
add
mov
test
pop
jno
or
mov
lahf
rcl
sub
mov
movs
scas
sbb
lahf
hlt
adc
and
pop
shl
pop
mov
(bad)
mov
loope
into
lea
not
add
mov
rcl
dec
jecxz
add
in
pop
push
lea
push
mov
xor
repz
or
sub
adc
out
sbb
sub
cmc
ficom
pop
jne
jno
sbb
out
fwait
adc
cmp
pop
xchg
pop
mov
lea
icebp
pop
ror
inc
mov
fistp
imul
sbb
(bad)
xor
test
les
pop
lods
and
mov
repnz
ds
out
add
lods
or
adc
pop
movs
lea
cdq
cmp
jmp
cmp
idiv
mov
into
pop
xor
lods
mov
jecxz
push
sbb
push
fcom
(bad)
out
mov
idiv
call
add
js
adc
dec
sbb
in
lea
ins
push
in
jb
dec
sbb
ins
xchg
mov
adc
cmp
fdiv
imul
(bad)
aam
ds
sti
fist
mov
fst
inc
js
push
adc
sbb
jle
sahf
cld
jmp
xchg
int3
call
out
stos
cmp
dec
addr16
xor
xchg
cmp
lods
ret
mov
jecxz
pusha
test
xchg
jmp
and
add
cmps
repnz
mov
daa
pushf
jae
jecxz
jecxz
jne
arpl
pushf
scas
sub
out
sbb
dec
sub
pop
daa
jbe
(bad)
mov
mov
stos
das
xlat
xor
js
les
ficom
rol
sub
xor
in
xchg
and
sahf
mov
adc
cdq
lock
xlat
mov
ret
ss
and
fisttp
pop
sbb
test
int
ss
inc
lea
and
and
hlt
pop
sub
jbe
mov
(bad)
in
and
dec
inc
mov
inc
and
jg
pop
mul
push
js
jne
mov
aaa
or
pusha
neg
nop
out
outs
jns
outs
pop
mov
mov
or
sahf
jecxz
repnz
imul
cdq
je
(bad)
aas
les
shr
ror
add
jmp
fiadd
data16
dec
mov
jnp
std
adc
arpl
xor
pop
cmps
sbb
out
fcmovbe
mov
adc
mov
pop
scas
or
into
cmp
pop
mov
mov
in
xor
dec
xchg
inc
neg
in
jg
pop
jmp
sbb
inc
jne
xchg
mov
xchg
jmp
or
out
imul
ret
aas
mov
push
js
xchg
and
jge
loop
cmps
push
sbb
jb
inc
daa
lods
mov
in
mov
ret
icebp
fucom
mov
adc
xor
int
addr16
sub
mov
cmp
jmp
or
mov
xchg
popa
outs
js
fucomp
fidivr
aam
push
xor
and
or
ds
imul
xchg
pop
aaa
out
mov
inc
push
jl
and
mov
or
fst
imul
mov
cmc
addr16
js
xor
push
cs
(bad)
push
mov
test
jmp
ss
add
shl
inc
mov
test
mov
xor
lds
inc
repnz
xor
retf
adc
retf
icebp
shl
inc
es
idiv
jae
xchg
aaa
ins
adc
shl
stos
ins
sub
xor
pop
ins
dec
sub
cmc
push
jo
add
xchg
sar
mov
dec
repnz
js
mov
repnz
fbld
pop
inc
push
das
out
jmp
fild
mov
xor
imul
mov
pop
jb
ret
jg
cs
mov
clc
sbb
stos
cwde
mov
call
out
cli
mov
jl
add
test
hlt
push
push
push
lods
out
icebp
das
call
dec
fdivr
gs
add
shl
aam
add
jo
add
das
fbld
xor
sub
and
or
pop
test
ins
sbb
(bad)
std
fld
inc
jmp
arpl
jnp
xor
lock
add
dec
mov
pop
fisttp
mov
sub
jle
mov
or
inc
cli
push
mov
ficom
dec
inc
jae
inc
loope
cmps
inc
push
aad
lods
sub
xchg
dec
(bad)
aad
cmps
and
addr16
push
mov
inc
mov
stos
movs
data16
das
jp
cdq
lea
sbb
loopne
pushf
loopne
movs
mov
sbb
add
mov
shr
cmp
lea
xor
std
dec
enter
shr
sub
mov
dec
in
int3
inc
pop
pop
stos
dec
push
fmul
mov
hlt
push
adc
call
jecxz
mov
cdq
loope
test
ret
or
push
inc
add
(bad)
imul
imul
cdq
ja
shl
pop
imul
cwde
push
ror
sbb
leave
loope
xchg
ret
hlt
push
out
mov
sbb
sbb
lds
(bad)
fucomi
mov
pop
neg
xchg
dec
mov
xlat
jmp
mov
mov
aas
pop
jp
cs
add
lock
cmps
xor
mov
das
rol
dec
jne
sub
jecxz
sbb
pop
movs
jmp
sub
cwde
hlt
or
mulps
mov
mov
push
push
or
nop
mov
pop
push
cwde
xor
sub
jo
pop
out
call
je
shl
and
imul
xchg
sub
div
xchg
rcl
jo
xchg
jbe
lea
sbb
xchg
in
in
jecxz
aaa
lods
xor
jmp
push
jns
pop
cmp
(bad)
and
push
ror
mov
cwde
mov
jle
std
js
(bad)
push
shl
arpl
pop
hlt
hlt
fimul
and
out
ds
mov
inc
not
dec
fnclex
pop
adc
cmp
dec
cmp
(bad)
ror
mov
scas
sbb
push
inc
push
and
push
mov
scas
xlat
rol
in
xchg
div
mul
sar
ret
inc
jg
sub
lds
ret
pop
cli
push
sahf
pop
int
sbb
shr
not
enter
adc
ror
inc
cmp
mov
cmp
xor
pop
es
push
dec
test
std
sar
cmp
sub
sub
pop
popf
sbb
loopne
ins
pushf
les
ret
sahf
or
test
sbb
ret
scas
and
mov
mov
xchg
les
int
int
inc
sub
leave
retf
ds
sti
cmp
inc
sub
xor
aaa
sbb
sub
cmp
xor
push
add
aas
dec
jmp
fdivr
mov
scas
mov
aam
repz
test
jo
sbb
out
rcr
dec
call
push
dec
xor
rcl
inc
sub
pop
dec
je
dec
add
in
jb
push
add
adc
cmp
pusha
cmp
xlat
(bad)
xchg
clc
jmp
xchg
stos
push
mov
test
push
fcmovb
retf
fwait
les
stos
iret
pop
jl
sub
popf
add
rcl
vpmacssdqh
and
sub
cld
dec
push
jbe
ja
mov
or
fsubr
cmp
or
adc
add
xor
outs
sub
dec
js
mov
jl
pop
xchg
push
inc
jp
shl
call
loopne
and
es
dec
imul
int3
mov
cmps
in
es
mov
adc
ins
(bad)
add
hlt
(bad)
clc
imul
out
call
pop
out
cmp
cmp
push
cwde
mul
push
neg
retf
(bad)
int3
sbb
test
(bad)
out
rcl
push
aad
sbb
stos
ret
fistp
cs
(bad)
xor
sub
cs
sbb
push
xchg
dec
ds
rcr
aad
xchg
test
fchs
das
inc
stos
jle
daa
(bad)
mov
inc
in
movs
pop
ror
gs
push
mov
lds
jp
cmp
ss
jge
out
repz
jmp
jno
sub
cli
mov
or
mov
jo
adc
inc
mov
shr
test
mov
mov
mov
outs
sub
bound
add
xchg
sbb
mov
mov
push
lods
jae
jo
cmp
sub
push
out
mov
xchg
mov
cmc
or
inc
jp
sbb
sahf
addr16
cmp
int3
pop
shr
mov
sbb
cmp
cli
sbb
add
(bad)
sub
pop
(bad)
retf
mov
cld
jne
xor
inc
push
in
jno
push
shr
das
scas
shl
int3
(bad)
adc
ins
adc
popa
and
lods
jno
and
mov
adc
sbb
ret
jns
and
data16
in
data16
push
call
push
shr
sub
pop
cwde
inc
sub
push
add
mov
test
add
(bad)
sub
imul
das
xor
je
mov
pushf
cmc
jmp
data16
rcl
jae
add
into
sub
jle
jne
adc
or
mov
loope
sub
imul
jnp
(bad)
and
outs
pop
into
cmp
xchg
adc
adc
jge
adc
dec
pop
fst
adc
xchg
pop
repnz
daa
fcmovnu
lods
std
cs
mov
mov
sti
shl
xchg
mov
ror
mov
jle
jg
mov
push
adc
(bad)
adc
shl
sahf
cmp
out
cld
mov
adc
je
je
clc
loopne
mov
adc
sub
pop
mov
mov
push
and
and
push
or
lea
scas
jb
mov
or
mov
loope
sbb
ins
jb
mov
sub
mov
and
pushf
and
dec
push
adc
cmp
sub
outs
and
xchg
jno
cdq
xor
pop
push
adc
inc
xchg
sbb
mov
ret
xlat
out
pusha
push
sub
out
(bad)
mov
stos
ret
fistp
jo
push
enter
retf
jb
jne
mov
adc
dec
mov
das
jg
inc
ror
int
icebp
movs
jno
mov
cmps
shl
inc
rcl
imul
xor
push
add
out
xchg
jmp
pop
lods
and
lods
bound
push
push
xor
and
jl
add
fnstsw
aad
dec
aam
in
(bad)
mov
int3
test
rcl
inc
fwait
sub
jmp
cmp
and
pop
sub
loope
dec
and
jno
jmp
into
or
pusha
mov
sub
adc
jns
inc
cmps
adc
push
pop
mov
and
xor
(bad)
push
stos
loop
sub
sti
push
add
mov
sbb
pop
sar
adc
js
cmps
xlat
cmps
stos
ins
push
pop
ja
jmp
les
sahf
stc
push
push
cmp
jns
cmps
jl
adc
or
ja
jbe
rol
ins
(bad)
sbb
mov
push
js
(bad)
jmp
ins
or
xchg
cmp
js
and
sahf
int3
loop
jp
out
fild
sub
or
lds
xchg
dec
rcl
fwait
dec
or
pop
xchg
pop
pushf
fucomi
cmp
out
and
(bad)
mov
adc
std
fwait
xor
pop
rcl
(bad)
jo
gs
sbb
fwait
and
sti
pop
sbb
xchg
cmp
mov
cwde
icebp
(bad)
push
not
mov
das
dec
add
push
and
stos
dec
cmp
sub
pop
leave
int
outs
fs
cmp
sar
icebp
outs
xor
adc
jge
iret
(bad)
add
fwait
gs
and
in
mov
std
inc
inc
lock
sub
lock
adc
mov
cmc
retf
xchg
xchg
repz
add
xlat
aas
sub
imul
and
out
jae
das
into
ret
aas
pop
mov
test
dec
retf
mov
dec
jb
mov
mov
fnstcw
mov
jge
push
mov
je
xchg
(bad)
jecxz
cmp
rcr
and
gs
xor
js
inc
repnz
test
test
(bad)
shl
xor
jns
fs
inc
mov
je
xchg
dec
push
inc
lds
aas
adc
imul
ins
mov
xchg
or
pushf
or
jo
rcl
pop
aad
cmp
repz
inc
data16
pop
loope
stos
add
(bad)
or
pop
sub
cli
and
stos
adc
dec
in
mov
and
shr
mov
dec
int3
pop
call
xchg
sbb
push
dec
xchg
shl
or
lds
jmp
mov
lods
(bad)
xchg
inc
arpl
push
mov
fsub
movs
js
mov
push
and
scas
test
or
sar
cmp
sub
push
push
pop
fist
sbb
dec
mov
dec
mov
hlt
ds
out
mov
xchg
cmp
ins
movs
inc
mov
into
adc
mov
sub
push
cmp
int3
pushf
stos
xchg
repz
fs
dec
imul
cmps
add
jmp
add
cdq
out
jne
pop
and
push
mov
mov
test
jmp
push
test
cmp
mov
xlat
inc
push
jmp
scas
xchg
mov
mov
and
inc
and
bound
repnz
lds
outs
add
adc
xor
arpl
xchg
in
jmp
push
lahf
js
xchg
rol
jbe
mov
xor
call
ret
jl
test
xchg
(bad)
fstp
fxch
mov
cmps
pop
sbb
xor
mov
xor
xor
int
stos
pop
shr
loop
hlt
pop
sbb
jge
es
repz
stos
push
leave
pop
pop
push
mov
mov
pop
std
(bad)
fldenv
push
mul
adc
mov
pop
jle
test
loope
jb
xor
jecxz
mov
dec
push
jmp
xor
sbb
dec
fcom
mov
pop
mov
(bad)
push
call
fidivr
cmps
mov
xor
mov
dec
pop
xor
(bad)
cmp
dec
mov
sbb
sar
xchg
pop
loopne
xchg
rol
ret
daa
aad
(bad)
out
sbb
inc
sbb
in
push
mov
(bad)
xor
into
les
dec
xchg
cwde
pop
cdq
neg
popf
cld
dec
movs
cli
sub
(bad)
shr
add
sub
loope
xchg
test
or
stc
ss
xchg
cmc
inc
push
ss
into
push
(bad)
push
inc
es
sub
sub
add
ds
popa
or
pop
je
cdq
add
test
sbb
imul
cli
(bad)
pop
lea
pop
mov
test
jge
push
cmp
imul
scas
xchg
lds
cmp
inc
enter
cmc
add
add
sbb
data16
arpl
cs
push
mov
xor
push
jae
pop
jae
adc
daa
rcr
mov
pop
pushw
(bad)
out
dec
push
push
adc
push
inc
cmp
movs
imul
xor
inc
(bad)
jmp
in
pop
xor
dec
lahf
pop
pushw
mov
pop
lea
iret
push
dec
stos
cwde
mov
je
add
loope
mov
cmp
sahf
xor
or
addr16
adc
sub
movhlps
inc
enter
aad
xor
out
in
mov
inc
mov
mov
xchg
test
jmp
push
mov
xor
ror
(bad)
mov
adc
shl
pop
pop
dec
retf
push
aas
aas
mov
sub
daa
(bad)
jbe
mov
cmps
dec
inc
cmp
cli
add
xor
push
aaa
loop
pop
xor
scas
arpl
fcmovbe
and
scas
dec
int3
mov
pop
enter
push
mov
jne
inc
sbb
jg
cli
call
cld
mov
pop
out
jae
out
jnp
inc
jae
fcomi
stos
pusha
dec
sahf
add
imul
add
add
out
ins
add
push
fild
icebp
xor
ffreep
mov
bound
retf
ret
cmp
xchg
sub
in
dec
pop
fldenv
ja
mov
sub
enter
std
sub
lods
inc
adc
pop
imul
cs
xor
out
dec
retf
es
pushf
lea
in
(bad)
lock
mov
mov
and
bnd
cld
dec
ret
ins
pop
jbe
add
or
xor
jns
mov
push
or
stc
mov
repnz
(bad)
leave
sub
or
sub
mov
pushf
shl
add
mov
leave
jo
test
mov
fcomp
sbb
(bad)
cs
push
ds
fild
aaa
jbe
bound
mov
mov
in
and
pop
repz
loope
cmp
mov
icebp
dec
sub
add
stos
bound
rcl
call
bound
mov
ret
outs
and
les
out
mov
scas
mov
neg
loope
mov
fst
mov
mov
aad
es
(bad)
fdivr
test
push
clc
mov
loope
pop
xor
lds
int
stos
cmps
arpl
adc
arpl
or
cmps
pop
pop
adc
cmp
stos
mov
in
pop
hlt
mov
rcr
ds
scas
ret
sahf
int
pop
out
das
fisubr
and
adc
rcr
lds
mov
mov
imul
pop
dec
(bad)
fs
mov
jg
mov
xchg
push
sti
sar
dec
cdq
mov
jne
imul
adc
aaa
adc
jmp
stos
inc
mov
cmp
mov
nop
stos
pop
cmps
lods
mov
les
xor
and
jns
sahf
and
and
mov
dec
or
int3
jae
fdiv
xchg
aaa
ret
and
dec
push
and
js
sub
jmp
adc
jnp
test
mov
imul
inc
cli
xchg
adc
xchg
mov
outs
xchg
inc
retf
scas
out
mov
outs
jno
cmp
es
jnp
jmp
mov
not
outs
in
retf
mov
(bad)
popa
rcr
sub
test
lds
mov
sbb
or
(bad)
fmul
cmps
dec
dec
adc
sbb
stos
mov
sbb
dec
sub
aam
xor
push
add
mov
inc
sti
bound
sbb
sub
mov
or
ffree
push
push
test
(bad)
icebp
jge
mov
ss
(bad)
adc
int
(bad)
mov
jae
dec
fucomp
aas
add
rol
int
mov
mov
adc
loope
xchg
mov
push
fs
leave
nop
inc
icebp
bnd
jg
std
out
dec
xor
xchg
dec
shl
and
in
ja
xor
mov
ds
imul
aam
addr16
xor
lea
mov
pop
pusha
push
dec
pop
(bad)
mov
xchg
fst
out
pop
scas
push
mov
mov
xchg
and
mov
pushf
lds
or
fdivr
dec
xor
mov
int3
outs
mov
retf
jmp
movs
add
pusha
jecxz
je
push
cmp
cmc
xchg
test
sub
cmp
xchg
dec
sbb
pop
ret
pop
in
xor
data16
xlat
sbb
cmp
clc
add
dec
mov
and
pop
cmp
(bad)
stos
daa
xchg
jp
fld
add
inc
pop
inc
xchg
cmps
movs
pop
test
dec
lea
or
mov
jle
dec
jae
cld
in
mov
cdq
gs
pop
(bad)
int
jl
dec
push
jp
cmp
push
test
sub
mov
and
jp
sbb
inc
sub
adc
mov
xor
adc
or
and
jno
mov
cmp
jae
dec
int
xor
mov
cmp
ins
sub
pop
retf
mov
js
xchg
fstp
and
bound
cmp
into
fcom
xchg
loope
inc
bound
pop
push
rcr
jo
dec
or
leave
fnstsw
jl
stos
(bad)
add
(bad)
rep
mov
call
and
and
das
pop
pop
cdq
inc
pop
rol
enter
pop
cs
or
or
data16
cmp
mov
popa
jno
or
dec
int3
sbb
sahf
loop
or
test
jmp
xor
sub
xor
jne
pop
push
ds
jge
int
jmp
jge
mov
sub
or
inc
cmc
dec
mul
fmul
xor
xchg
and
loop
jne
add
je
cmp
mov
inc
(bad)
mov
pop
mov
in
add
cwde
push
cmp
inc
or
fldenv
mov
pop
dec
jp
fisub
movs
cdq
stos
aas
iret
sar
fiadd
or
cmp
adc
fwait
inc
and
into
fimul
pop
adc
or
int3
mov
mov
or
dec
mov
iret
mov
cmps
mov
mov
dec
pusha
out
cmps
js
mov
lods
xchg
fwait
push
jbe
fld
sbb
pop
mov
inc
test
mov
cmp
add
dec
in
inc
inc
pop
or
push
mov
pop
mov
cmp
adc
xor
add
lahf
fstp
retf
or
daa
ins
out
or
addr16
sbb
pop
mov
jns
in
cmps
and
inc
ret
sbb
stos
pop
mov
rcl
(bad)
pop
sub
mov
inc
pusha
cmp
mov
sar
jle
dec
push
add
nop
pop
lods
lea
inc
test
aad
or
pop
scas
aam
ins
fstp
ret
mov
mov
mov
inc
fldenv
or
xor
into
inc
xor
and
cs
sub
in
sbb
and
in
cmc
(bad)
rol
sub
jg
repnz
sub
loope
push
outs
loope
push
jnp
xchg
aam
popa
push
sbb
mov
pop
lds
outs
push
iret
xor
outs
aas
lods
push
inc
es
cmps
ror
test
(bad)
add
xchg
inc
xor
jmp
rcr
fistp
loopne
sub
mov
scas
inc
mov
mov
adc
jnp
ins
add
shl
sbb
(bad)
in
jnp
jle
mov
movs
movs
jmp
adc
stos
mov
push
out
out
jp
(bad)
sahf
inc
xor
stos
or
add
mov
fwait
ja
sbb
mov
mov
(bad)
sub
push
xchg
xchg
and
call
dec
lea
retf
jle
int3
(bad)
jp
aas
dec
mov
rcl
mov
dec
sbb
or
pop
repnz
fisub
fdiv
clc
mov
push
test
xor
xchg
pop
dec
dec
cmp
sub
mov
jg
pushf
pop
add
aaa
sub
jg
and
inc
jecxz
repz
push
jl
ins
pop
mov
shl
xchg
adc
push
das
jecxz
popf
or
cmp
aam
sbb
ins
out
mov
pop
cli
out
cs
sti
and
dec
cli
or
outs
(bad)
xchg
mov
sar
call
leave
push
mov
lds
and
lahf
mov
retf
add
(bad)
xchg
aas
adc
mov
les
sbb
add
sub
sub
mov
cdq
jecxz
outs
pop
les
(bad)
xor
int3
daa
dec
pushf
xchg
xchg
mov
add
dec
ins
ficom
xor
dec
pushf
mov
or
pop
mov
and
imul
stos
ins
pop
mov
push
lds
bound
push
jle
jbe
mov
adc
call
sub
sub
push
mov
or
nop
mov
shr
aam
pushf
or
sbb
sub
sub
test
cdq
stc
ret
les
test
xchg
stc
mov
adc
xchg
stos
pop
mov
or
dec
arpl
outs
push
mov
xchg
push
or
sbb
ret
adc
mov
sbb
imul
pop
add
test
(bad)
jo
push
mov
sar
push
sbb
fsubr
push
adc
mov
pop
sbb
pop
push
lods
and
les
and
test
jns
pop
shl
stos
mov
test
xchg
push
jae
dec
dec
ins
out
xchg
xchg
(bad)
push
pop
fs
stc
rcr
mov
aas
xchg
xchg
int3
neg
ins
add
sub
test
je
and
inc
outs
cmp
repnz
daa
movs
inc
mov
imul
fisubr
dec
bnd
push
lahf
fnsave
xor
lahf
cmps
aad
add
ret
inc
aam
repnz
mul
jle
dec
cmp
out
xlat
cmovb
popf
gs
jns
sub
push
dec
repz
push
out
pop
imul
xor
and
lahf
jmp
rol
jle
pop
sbb
out
pusha
jns
push
aas
ror
test
hlt
sub
jns
sbb
mov
xchg
aad
sub
(bad)
jp
jmp
fimul
pop
js
xchg
or
lods
test
arpl
mov
jmp
adc
pushf
adc
or
and
mov
fcmove
int
scas
pop
pop
ja
bndstx
xlat
out
lds
xchg
mov
add
popf
pop
jo
repz
pop
ins
idiv
pop
in
xchg
push
jmp
sub
sbb
mov
repnz
mov
jp
jno
and
mov
out
xor
or
std
icebp
movs
mov
jle
in
mov
stos
lods
xchg
data16
adc
dec
and
inc
inc
push
jl
or
shr
dec
addr16
mov
pop
cmp
(bad)
mov
mov
ror
and
xor
adc
push
jmp
xor
mov
mov
icebp
dec
loope
retf
ss
push
jo
or
(bad)
pop
lds
xchg
xchg
mov
retf
jo
call
hlt
out
popa
popa
ds
pop
mov
push
xchg
dec
in
cmp
fwait
jle
lds
push
push
jnp
xchg
xchg
adc
ds
rcr
(bad)
mov
adc
cwde
lods
mov
loop
(bad)
popa
imul
mov
fld
xor
or
out
fld
mov
add
xchg
out
test
add
stos
dec
mov
push
(bad)
mov
test
cs
xor
and
jp
leave
pop
mov
cmp
pop
sbb
jne
jecxz
add
push
or
jne
sahf
retf
xchg
sbb
mov
pop
sar
or
push
ret
retf
jge
and
mov
xor
xor
je
imul
nop
xor
lea
sbb
sti
lahf
out
(bad)
imul
rcl
push
push
iret
dec
js
sbb
and
sub
xchg
(bad)
mov
fs
mov
or
push
ret
xchg
add
cwde
adc
popa
push
out
into
push
push
fistp
or
jns
push
and
xchg
sar
in
mov
lea
ret
push
add
stos
pop
stc
(bad)
aas
sbb
xchg
pusha
mov
fisttp
sub
push
(bad)
jbe
movs
fwait
mov
sbb
out
add
shl
fsubr
push
imul
shr
dec
add
jmp
rol
cmp
pop
scas
push
mov
inc
jne
sbb
or
inc
xchg
mov
xchg
xchg
jbe
push
sub
inc
mov
scas
add
scas
jb
dec
pop
xor
push
or
sub
xchg
add
push
cmp
adc
inc
or
out
(bad)
call
cmps
imul
cmp
push
idiv
dec
push
loopne
mov
mov
mov
out
mov
inc
rcl
jl
repz
push
jo
sahf
mov
out
lds
pop
mov
mov
pop
dec
div
pop
inc
xor
mov
jnp
jmp
adc
and
and
clc
mov
mov
or
pop
jg
aam
mov
clc
pusha
lock
mov
cmps
neg
mov
test
mov
int
pushf
lock
jo
vunpcklpd
cmps
xor
pop
push
lahf
push
daa
clc
sbb
std
js
imul
or
add
sbb
movs
movs
sysexit
aaa
rcl
cdq
outs
mov
inc
mov
jl
mov
cmp
xor
std
arpl
pop
fdiv
mulps
adc
dec
imul
loop
loopne
cmp
fldcw
cmp
pop
aam
outs
shr
mov
cmc
or
je
inc
bound
fmul
add
mov
data16
jb
xchg
jns
ins
js
mov
adc
add
inc
sbb
scas
bound
aas
sub
or
mov
(bad)
outs
sti
lds
mov
sub
or
(bad)
cmp
or
jmp
push
jecxz
mov
lock
cmc
ret
ins
icebp
pop
inc
pop
push
mov
std
test
jno
xchg
ins
fisttp
mov
xchg
hlt
jmp
sub
push
push
(bad)
daa
sub
fild
in
sbb
jmp
sbb
test
rcl
add
dec
or
mov
sti
adc
add
stos
mov
jae
call
dec
rcl
xchg
mov
jo
xor
data16
xchg
lock
add
retf
rcl
push
std
jmp
sar
sub
test
pop
sub
xchg
fisttp
mov
adc
addr16
xchg
(bad)
fcom
cmp
inc
pop
rcr
push
cs
or
mov
mov
lods
fadd
or
add
push
jno
jecxz
sbb
mov
adc
popf
cmp
jnp
sbb
sti
pusha
mov
imul
(bad)
dec
int3
push
and
pop
in
daa
jmp
lods
push
sbb
xchg
xchg
xor
sub
xor
dec
and
push
and
out
out
hlt
cmp
jecxz
and
push
ficom
xchg
shr
xor
in
mov
xchg
push
inc
ins
cwde
call
pop
dec
fstp
daa
outs
add
pop
sbb
pop
or
inc
inc
mov
cld
(bad)
repz
adc
mov
(bad)
or
lods
scas
sbb
push
sti
inc
jg
dec
call
arpl
in
sbb
inc
repnz
repnz
push
push
out
paddusb
jg
dec
xor
and
xchg
sahf
inc
dec
(bad)
(bad)
push
pop
push
cmp
jecxz
mov
add
and
jmp
mov
and
adc
cmp
test
test
xor
pop
cld
push
or
sbb
gs
mov
pop
das
and
mov
jle
(bad)
push
ficom
call
sbb
imul
retf
retf
cmp
mov
les
add
jge
jge
inc
adc
mov
jg
in
sub
push
pop
add
cdq
lods
sahf
js
pop
fbstp
sbb
sub
dec
cmps
(bad)
fnstsw
mov
xchg
pop
or
adc
push
push
enter
mov
dec
mov
ins
imul
lds
ds
mov
xchg
popf
lahf
lahf
push
mov
lea
ds
test
xor
mov
outs
or
shl
int3
lea
jle
xchg
sbb
sbb
xchg
fsubr
cmps
sub
(bad)
sti
pop
xor
add
dec
aam
xchg
mov
(bad)
cmp
mov
test
inc
ds
out
add
test
pop
in
jns
and
mov
mov
cmc
jg
xor
retf
shl
sbb
adc
push
scas
jne
jle
xchg
out
out
dec
pusha
lods
add
cmc
sbb
aad
add
push
clc
push
pop
jle
test
adc
fwait
jb
cdq
xlat
fisttp
add
xchg
loopne
cmp
push
add
je
cmp
mov
loop
es
and
sti
(bad)
pop
imul
dec
and
aas
xchg
fnstcw
mov
push
xchg
mov
cs
emms
mov
sahf
dec
es
mov
cmp
lods
jo
(bad)
arpl
xchg
in
push
into
inc
jbe
nop
jmp
xchg
retf
add
ds
outs
mov
repnz
sub
in
cmp
inc
movs
jnp
outs
pop
mov
test
xor
mov
sub
sub
ja
xor
(bad)
bound
pop
daa
js
gs
dec
or
stc
out
mov
pop
gs
jge
mov
bound
ror
pop
mov
adc
dec
jbe
jo
and
mov
pushf
sub
adc
pop
retf
sti
(bad)
adc
or
aas
rcl
push
sar
fst
test
cli
add
mov
div
cdq
jae
jno
mov
cmp
mov
jp
add
mov
pop
test
sbb
es
mov
xchg
mov
popa
mov
xchg
push
pop
sbb
sbb
sub
xchg
test
xor
cmc
mov
mov
and
mov
icebp
push
outs
test
scas
fdiv
cdq
mov
(bad)
cmp
sub
ficom
iret
mov
cwde
adc
lahf
mov
pop
sbb
unpckhps
pop
sti
mov
add
inc
into
movs
aaa
pop
xor
push
out
into
shrd
xchg
push
sar
push
setne
fcom
jnp
int3
sub
adc
pop
sub
and
adc
cmp
jne
(bad)
lock
(bad)
imul
in
ins
add
stos
jno
rcr
jo
lahf
repz
stc
int3
dec
lock
push
push
int3
pop
sbb
sub
out
ins
dec
(bad)
arpl
stos
push
add
sbb
(bad)
(bad)
test
js
jb
push
movs
jno
sbb
and
mov
scas
mov
sar
mov
mov
aad
int
mov
jnp
push
aam
loop
inc
mov
jmp
jg
scas
repnz
fimul
rcl
adc
leave
sahf
mov
out
inc
push
jo
retf
ins
fld
pop
jbe
and
add
inc
inc
mov
jmp
out
sbb
xor
call
stc
call
sbb
inc
dec
jmp
and
adc
add
dec
out
dec
mov
(bad)
lds
pop
or
push
adc
imul
scas
push
test
les
in
bound
dec
loopne
mov
es
(bad)
(bad)
in
add
ins
ret
in
sub
pop
dec
lds
xor
call
jb
cli
(bad)
mov
xlat
mov
ins
shl
mov
out
jg
cld
and
(bad)
or
dec
adc
xor
xchg
pop
fisttp
imul
xor
in
xchg
xor
cli
cs
xor
fbld
leave
mov
mov
jnp
adc
add
stc
aaa
add
push
jg
pop
xchg
sub
(bad)
mov
jnp
inc
lahf
and
pusha
scas
dec
inc
shld
fisttp
push
movs
xor
ins
inc
sahf
ja
icebp
jge
imul
sub
loope
stos
push
xchg
xchg
fstp
or
jmp
cwde
rcl
sti
aaa
jne
(bad)
dec
xor
out
mov
das
push
pop
scas
out
int
push
leave
sbb
jmp
outs
es
js
pop
or
in
push
inc
push
lea
sbb
mov
cmps
adc
rol
in
pop
and
fld
xor
enter
je
fcomp
js
fcomip
sub
hlt
inc
mov
in
popf
nop
inc
push
pop
mov
push
sar
rep
call
imul
jnp
fnstenv
xchg
repnz
and
push
cld
mov
int
mov
cdq
inc
js
iret
add
adc
fcmovnbe
sub
xor
dec
mov
add
push
cmp
sub
push
es
call
sub
xor
inc
adc
mov
xor
push
mov
jmp
mov
jne
jbe
sub
adc
ins
push
out
lds
lea
mov
cli
xchg
(bad)
sbb
jae
pop
test
int
and
cmp
cwde
cmp
fdivr
imul
push
push
div
imul
scas
adc
in
repz
jno
or
push
jo
pop
jmp
std
sti
mov
push
pusha
push
movs
fstp
xchg
xlat
pop
jns
sar
dec
pop
jae
ret
in
fnsave
jmp
inc
hlt
arpl
bts
int
fstp
sub
pop
ins
sbb
call
imul
cld
add
loop
pop
jg
in
(bad)
test
adc
pushf
xchg
pop
add
jmp
lea
adc
loopne
xor
push
jo
mov
js
xchg
inc
fimul
dec
or
add
inc
pop
adc
add
sbb
or
jbe
mov
cmp
in
inc
(bad)
and
jae
icebp
cmp
(bad)
movs
and
push
xchg
adc
push
pop
call
retf
in
push
push
fild
(bad)
or
cld
and
jl
in
loopne
inc
(bad)
jns
xor
ins
ror
adc
pmaddwd
js
push
cmp
or
aas
aad
pop
je
ficomp
dec
mov
inc
test
add
mov
movs
loop
add
ffree
and
ins
fnstsw
cmp
mov
add
sbb
cmp
popa
xchg
loopne
ret
adc
or
mov
xchg
mov
mov
mov
popf
das
mov
iret
jle
mov
xor
xchg
hlt
adc
jp
mov
mov
xchg
pop
dec
xchg
jmp
call
stos
fwait
adc
jge
arpl
xchg
sbb
pop
add
xchg
cdq
clc
out
jecxz
push
add
out
nop
cwde
in
ror
jb
ins
ss
adc
pop
mov
mov
cmp
cmp
sar
mov
call
sub
(bad)
dec
loope
sti
cmp
adc
xchg
xchg
xor
fidivr
mov
pop
test
and
mov
jo
push
(bad)
xor
dec
mov
jmp
jne
stos
jne
cdq
xchg
inc
jae
mov
sbb
mov
push
cmps
lods
icebp
ss
sub
mov
cmp
adc
iret
data16
jbe
aaa
imul
push
or
mov
add
ror
jle
jmp
fwait
push
cmc
enter
sub
(bad)
adc
repnz
jbe
fcomp
and
jecxz
sar
hlt
int
or
mov
pop
adc
retf
pusha
inc
sub
mov
mov
cmps
test
mov
xor
mov
loopne
in
movs
(bad)
cmpxchg
shr
(bad)
cmp
sbb
call
push
cmp
adc
sub
cmp
push
push
loopne
call
xor
jo
pop
or
or
mov
rol
test
xor
cli
or
add
cdq
fsubr
inc
enter
aaa
jle
cld
cwde
sub
aas
in
cs
jne
lock
mov
test
push
pop
sar
pop
cmp
fsub
cmps
jnp
mov
(bad)
mov
das
jle
ins
stc
pop
stc
mov
sbb
cld
out
mov
fs
outs
shr
(bad)
and
or
les
mov
jne
jmp
inc
mov
sbb
adc
repz
jl
lock
xchg
aad
dec
push
adc
dec
and
pop
pushf
mov
cld
outs
push
in
fwait
imul
mov
add
fistp
sbb
bound
jmp
and
ret
pushf
mov
nop
outs
arpl
mov
in
cmp
inc
ins
es
fs
enter
add
or
and
lea
push
pop
into
push
xchg
xchg
xor
rcr
shl
fldcw
mov
jmp
neg
cmp
pop
aaa
cmps
or
popf
scas
out
mov
pop
xor
add
shl
cmps
or
mov
div
sbb
jae
sub
mov
push
or
and
sbb
or
add
push
sub
(bad)
adc
ins
add
sbb
xchg
dec
push
ret
ins
cli
and
cli
push
jne
dec
cdq
sub
mov
push
clc
fadd
les
sbb
enter
or
jecxz
mov
inc
xlat
gs
inc
popf
out
jg
xchg
push
and
inc
ret
add
mov
bound
xor
movs
push
jmp
cmps
pop
cmp
pop
scas
nop
sub
sar
cmp
repz
cmp
jns
mov
jg
shl
pop
add
jnp
jg
sbb
fcom
mov
or
dec
push
pop
scas
mov
popf
cld
int3
and
pop
(bad)
nop
arpl
mov
out
xchg
call
mov
mov
pop
movs
add
xchg
mov
loope
xor
mov
dec
mov
fbstp
lods
fnsave
and
addr16
jnp
cmc
xor
and
test
js
pop
jecxz
loop
dec
sbb
aas
cmp
retf
push
adc
dec
mov
mov
div
and
push
call
mov
std
mov
stos
mov
and
dec
pop
int3
stos
mov
hlt
je
xor
jo
mov
xchg
mov
jmp
or
and
sub
ficom
loope
stos
or
cmps
das
pop
mov
jns
(bad)
or
dec
sub
lea
sub
stos
push
sbb
and
jmp
add
pusha
inc
sbb
scas
ret
enter
inc
sar
sub
lea
mov
(bad)
stc
in
add
xchg
push
test
cmc
sbb
inc
shl
call
sbb
hlt
and
dec
outs
loopne
lods
jo
add
(bad)
dec
mov
and
bound
jp
mov
cdq
ret
jg
cmp
ror
cs
mov
int3
cmp
jns
add
cmp
xchg
out
leave
xchg
mov
out
mov
fnsave
cld
sbb
lods
sub
sbb
ret
lods
xor
js
ins
mov
mov
pop
mov
jo
mov
dec
inc
cmps
std
inc
mov
aas
shr
sub
call
mov
sub
mov
std
xchg
push
stc
sbb
dec
bound
dec
dec
pop
or
adc
sub
mov
mov
sbb
jo
adc
stos
in
jo
cld
sahf
test
and
aaa
dec
dec
push
cmp
and
scas
retf
dec
mov
inc
dec
push
aam
int
mov
or
sub
xor
mov
rol
iret
pop
stc
mov
stc
add
icebp
stos
jp
inc
in
add
jp
mov
out
movs
out
jg
dec
mov
scas
sbb
call
xor
xor
add
imul
xchg
stos
jae
movs
mov
and
mov
pop
pop
lods
daa
fiadd
sub
jp
xchg
mov
mov
xchg
and
pop
push
daa
cdq
dec
mov
mov
rcr
xchg
pop
das
daa
int
(bad)
jmp
pop
cs
data16
sub
leave
mov
pop
rcr
outs
pop
fucomip
add
pop
push
pop
xor
xchg
inc
iret
in
jmp
mov
or
sbb
fwait
int
xchg
shl
mov
pop
popf
pop
lods
or
ret
mov
mov
aam
mov
and
mov
sbb
rcl
(bad)
ins
cmp
push
int3
pop
or
push
sub
outs
fimul
jmp
and
jae
cmps
lahf
leave
ficom
test
xchg
rcr
in
out
or
add
lods
addr16
xchg
cmp
mov
cmp
jle
ins
les
jle
xor
test
sbb
xchg
pop
into
and
out
mov
cmc
fwait
dec
jne
jb
or
dec
mov
jae
dec
adc
pop
sub
xor
dec
add
cmp
scas
mov
adc
sbb
push
jae
mov
mov
stc
jl
into
jbe
or
adc
cmp
xor
test
inc
and
call
mov
xor
or
sbb
fld
pop
ret
mov
jle
pop
fistp
loope
sub
(bad)
mov
inc
sub
sbb
int
aad
popf
into
sub
fwait
mov
inc
xor
push
ret
or
pop
mov
out
or
xor
sbb
leave
add
sub
pop
das
or
lods
dec
sub
neg
inc
popf
and
dec
shl
stc
xor
sbb
cmc
pop
les
iret
inc
rcl
ins
ficomp
jp
cmp
or
(bad)
js
popa
pusha
jp
scas
es
and
xor
sub
xlat
scas
or
or
ret
addr16
mov
dec
mov
xor
loope
and
repz
pop
in
cmp
or
stos
and
add
nop
pop
mov
add
xor
sbb
mov
rol
mov
dec
jle
(bad)
jo
cmp
ins
cmp
xchg
je
loope
loope
fsubr
xor
call
inc
push
pop
mov
mov
pop
gs
test
sub
and
cmps
sti
out
cs
mov
fwait
xchg
inc
xchg
mov
sub
(bad)
sub
cmp
scas
xor
jae
pop
fisttp
imul
add
lea
mov
movs
outs
sahf
fst
mov
pop
ins
jb
sub
dec
fwait
repz
outs
jbe
cwde
lods
sub
mov
xchg
inc
cdq
(bad)
mov
stos
sbb
hlt
dec
pop
mov
dec
inc
shl
dec
sub
cmps
cdq
loopne
add
jmp
cld
push
test
sbb
in
cmp
sbb
aad
jae
out
push
sbb
ret
jmp
loop
pusha
push
cmp
ss
addr16
outs
xor
mov
sub
retf
icebp
(bad)
jnp
xor
(bad)
js
push
adc
lea
add
jmp
lods
and
sub
out
or
jno
jmp
enter
cmps
mov
xchg
jae
popa
or
fst
xchg
xchg
fmul
sbb
sub
clc
mov
stc
mov
pop
jae
fstp
movs
xlat
outs
mov
lods
jbe
add
xchg
rcr
push
fs
add
push
sub
inc
jmp
add
fdivr
lods
adc
jmp
outs
jo
sbb
xchg
jl
mov
sbb
cwde
jmp
jmp
ss
sub
(bad)
ss
inc
jl
inc
mov
fbstp
pusha
xchg
cmp
test
sbb
pop
jg
mov
test
fsub
call
enter
cmp
(bad)
mov
cmp
test
mov
icebp
int3
inc
mov
shr
out
pop
push
jnp
add
test
ins
daa
pop
lahf
pop
push
mov
mov
mov
cs
inc
sti
stc
imul
mov
sti
cld
(bad)
sbb
fmul
enter
pushf
loopne
and
ror
sbb
pop
xchg
mov
cmp
jmp
lds
mov
gs
jmp
es
adc
jl
loopne
adc
jb
jg
jns
cmp
or
es
xchg
ret
fisttp
hlt
xchg
jbe
push
or
ja
cmps
jns
mov
mov
sub
leave
and
aas
sbb
or
(bad)
sub
mov
out
int3
sti
pop
inc
ds
je
lock
xor
or
fwait
in
sbb
lock
dec
cwde
xor
jae
push
retf
mov
sub
in
sar
mov
in
mov
sti
repz
or
fs
sbb
lea
sbb
(bad)
cmp
mov
dec
sbb
xchg
stc
aad
daa
test
(bad)
cdq
jecxz
inc
mov
jnp
inc
xlat
sbb
jmp
loopne
mov
pop
push
stc
push
pop
cmps
out
lds
test
in
sbb
cmp
into
adc
scas
arpl
rcr
icebp
or
xchg
inc
jne
or
jecxz
xchg
add
xchg
add
lds
mov
std
das
push
sub
cs
ss
leave
mov
mov
cwde
test
js
(bad)
push
or
adc
cmp
or
cwde
cmp
ja
and
mov
(bad)
gs
xor
fdiv
inc
push
out
fcmovnbe
sbb
repnz
or
sub
(bad)
add
xchg
adc
and
xor
push
xchg
push
cmp
jg
mov
cmp
mov
mov
ret
call
scas
push
mov
mov
popf
imul
call
es
and
push
sahf
cmps
dec
dec
and
sub
push
push
outs
pop
cmp
out
stos
mov
mov
and
icebp
je
push
sahf
adc
je
mov
mov
xchg
pop
in
(bad)
out
push
aas
cdq
cmp
ins
jae
mov
cmp
cmp
movs
dec
inc
jno
inc
out
pop
(bad)
and
retf
data16
pop
jbe
xchg
aad
mov
cmps
sbb
icebp
and
pop
pusha
push
xor
retf
jp
mov
push
add
and
pop
call
lds
dec
test
dec
sbb
cli
cmps
mov
out
mov
rol
ins
jge
ins
or
inc
pushf
xor
std
push
ss
out
add
jns
pusha
sbb
sbb
test
jne
add
add
pusha
aad
fdivr
inc
(bad)
iret
jmp
cmp
mov
and
pushf
sub
les
out
xor
fcomp
adc
jmp
dec
arpl
shl
push
loopne
ja
out
mov
jle
cmc
adc
(bad)
inc
jmp
jne
or
mov
jecxz
cmp
mov
push
dec
jge
dec
and
leave
mov
icebp
xchg
cmps
adc
jno
shr
mov
or
push
pop
pop
aam
lea
neg
into
movs
mov
popf
xchg
xor
jae
repnz
ja
gs
adc
ret
jo
push
mov
cmp
ret
cmovno
cdq
fstp
cwde
xor
jmp
mov
push
xor
sbb
mov
push
fsub
pop
fbld
pop
sub
imul
test
jmp
int3
rcl
imul
pop
cmp
out
call
inc
pop
jp
adc
aam
addr16
lds
push
and
pop
addr16
cmp
iret
cli
pop
mov
movs
mov
or
pop
out
mov
sub
int3
jae
leave
fld
cwde
aam
sub
out
inc
test
stos
retf
fldcw
mov
retf
jo
enter
inc
pop
or
dec
xlat
inc
pop
inc
ins
loop
cld
mov
ret
movs
mov
xchg
jle
out
call
enter
outs
pop
mov
stos
jl
push
mov
imul
push
ret
mov
adc
repnz
cmp
out
imul
pushf
mov
adc
push
mov
or
ja
mov
das
inc
dec
stos
pop
add
mov
out
mov
mov
sti
lahf
mov
aaa
xchg
sbb
out
data16
mov
jmp
lods
retf
pop
mov
pop
xchg
mov
aam
lods
lds
add
retf
aaa
mov
mov
lea
fwait
adc
fisubr
mov
xchg
bound
loopne
xchg
mov
call
dec
aaa
in
imul
bound
(bad)
inc
in
jno
(bad)
fistp
xrelease
jae
mov
dec
stc
sub
movs
(bad)
mov
scas
cmp
out
fdivrp
fst
adc
retf
jl
ja
add
push
or
ds
(bad)
mov
push
fldcw
(bad)
retf
lods
lahf
inc
in
pop
(bad)
push
test
jecxz
icebp
push
in
pop
dec
test
js
pop
inc
repz
pop
push
mov
inc
enter
pop
and
out
into
add
lahf
mov
and
lock
aaa
jl
push
sbb
pop
outs
push
push
mov
mov
dec
add
cs
out
adc
(bad)
and
cmp
push
sub
and
lods
mov
xor
xchg
fst
imul
xchg
pop
cmps
mov
ins
shl
fs
sbb
mov
pop
repz
lods
arpl
xor
mov
and
jo
cwde
adc
dec
sub
jnp
sub
and
jle
sub
xchg
nop
loope
int3
inc
and
dec
int
aad
in
test
sar
fst
dec
jo
movs
loop
add
pop
and
call
sahf
pop
pop
adc
mov
rol
cmp
xor
adc
sbb
mov
in
sbb
dec
sbb
(bad)
stos
mov
stos
mov
mov
aaa
aad
push
mov
xchg
jmp
push
inc
xor
jae
add
les
sbb
sub
js
mov
loop
adc
push
add
scas
and
cli
iret
mov
fild
and
dec
call
or
into
mov
push
sbb
mov
test
jmp
popf
pop
jae
(bad)
push
pop
add
sub
jnp
add
(bad)
int
sbb
popf
lods
(bad)
cmps
jb
mov
bound
icebp
call
out
stos
fwait
sub
imul
lods
dec
add
pop
push
lods
popf
imul
pop
stc
jl
and
dec
mov
sbb
push
fist
push
(bad)
aam
popf
sub
ret
and
sub
aaa
push
jecxz
fs
and
adc
ins
fnstsw
xchg
div
and
aad
push
pop
hlt
cmp
enter
or
xchg
adc
adc
xchg
iret
fisub
fstp
in
and
mov
pop
stos
pop
sti
push
adc
sub
sbb
mov
movs
iret
outs
cdq
xor
rol
mov
imul
jnp
fs
outs
pop
rol
push
or
lods
cmp
push
cs
(bad)
mov
and
in
xchg
cli
mov
sbb
xor
adc
mov
or
xchg
std
les
mov
jle
in
es
cmc
das
(bad)
cmps
es
xor
mov
pop
xchg
gs
inc
mov
hlt
(bad)
push
outs
inc
pop
repz
xchg
xor
add
push
lods
and
xor
sub
mov
mov
jne
movs
inc
pop
dec
int
lea
out
test
xor
enter
jp
inc
addr16
ja
out
pop
int3
add
rcl
inc
cwde
dec
xchg
cmp
cmp
xchg
sbb
fwait
jl
and
jmp
dec
inc
xchg
and
retf
push
cmp
in
cld
es
mov
scas
arpl
aad
std
mov
ins
mov
pop
dec
stos
pop
cmp
adc
cld
nop
adc
or
fdivr
test
adc
dec
idiv
lds
pop
leave
out
pop
out
jge
les
aas
outs
scas
add
cmc
outs
rcl
sbb
xchg
xchg
lahf
xor
fs
rcr
div
shr
test
adc
sub
pop
inc
retf
cmp
movs
jbe
out
and
fs
mov
movs
inc
mov
je
jno
loopne
sar
jns
clc
push
jns
xor
xor
adc
imul
icebp
mov
es
or
dec
fsub
out
lds
lahf
xor
jecxz
and
gs
add
sahf
mov
jmp
loopne
jbe
aad
pop
shr
sub
sub
frstor
xor
cli
jae
push
or
outs
pop
jg
jle
cmps
int
std
pop
add
sub
call
xor
leave
scas
sbb
cmp
pop
imul
add
hlt
mov
bound
sub
in
rol
std
fwait
cwde
add
jge
pop
or
xchg
rol
fsub
dec
repnz
cmps
or
add
mov
pop
xor
or
cld
mov
inc
outs
test
aam
loope
add
pop
or
inc
clc
leave
test
test
aam
(bad)
pop
mov
inc
cmp
xor
lea
retf
jle
(bad)
test
push
xchg
push
in
neg
ja
inc
mov
sti
mov
aam
jnp
sub
xchg
and
fidiv
aaa
scas
ficomp
dec
mov
mov
imul
pop
pop
cmp
push
jmp
icebp
clc
mov
sub
out
jecxz
out
cmp
push
lds
mov
xor
pop
xchg
mov
sbb
stos
fisttp
push
cli
jnp
sbb
and
dec
xchg
imul
cmp
das
(bad)
jnp
inc
mov
cmp
xchg
or
ss
mov
adc
mov
out
idiv
fstp
inc
sbb
mov
xchg
ror
xchg
hlt
or
pop
fsub
sbb
pop
cmp
mov
xor
idiv
sub
add
jno
shl
por
cmp
adc
sbb
std
dec
mov
xor
je
xor
mov
and
test
push
xchg
movs
adc
jne
and
xor
leave
sub
test
push
mov
call
cmps
pop
ror
mov
sub
outs
or
cmp
jmp
dec
fwait
mov
int
adc
pop
cmp
push
shl
(bad)
call
pop
inc
jmp
es
dec
xchg
push
xchg
pusha
pop
stc
mov
cwde
out
gs
gs
imul
imul
int3
dec
mov
pop
mov
fstp
test
sub
cmps
inc
mov
into
fwait
repnz
movs
sbb
sub
lods
nop
push
out
or
jno
inc
dec
ffreep
mov
dec
pop
sbb
pop
lahf
pusha
fdivr
mov
jno
pop
push
add
inc
sbb
test
push
or
loopne
xchg
shl
push
push
or
adc
pop
(bad)
js
cmp
cmp
rcr
mov
std
adc
es
out
gs
iret
sbb
ret
pop
push
lock
mov
scas
rcr
dec
jne
cmc
xchg
xchg
pop
mov
call
mov
mov
jmp
xchg
add
push
jmp
mov
icebp
adc
cmp
retf
sub
add
mov
ret
jp
scas
imul
sub
or
mov
xor
pushf
lea
jb
mov
pop
inc
sub
sbb
arpl
jae
lods
inc
pop
fsub
sbb
outs
stc
dec
xchg
dec
jne
(bad)
jne
sub
leave
outs
adc
mov
and
out
(bad)
and
cmps
jo
sbb
xchg
add
sbb
repnz
mov
imul
or
dec
push
sbb
out
and
dec
scas
imul
mov
std
mov
xor
bnd
mov
mov
mov
xor
imul
and
loope
and
push
xor
lock
in
(bad)
inc
xchg
mov
mov
mov
sti
aad
and
in
pop
jg
cmp
(bad)
cmp
scas
add
cmp
sbb
pop
enter
daa
xchg
pop
lods
ficom
dec
mov
pop
pop
push
inc
sbb
add
and
xchg
cdq
fnstenv
arpl
dec
inc
cli
stc
pop
adc
cmp
add
adc
aam
jl
sbb
sub
shl
adc
(bad)
int3
push
daa
fisubr
add
iret
cmps
or
stos
xchg
out
mov
pop
push
mov
in
adc
jnp
jge
movs
adc
jb
imul
dec
cld
cmp
imul
add
mov
stos
imul
scas
ret
cmp
loope
into
shr
push
and
ins
aam
sbb
sti
adc
clc
test
sub
(bad)
pusha
add
fwait
mov
push
add
mov
sub
mov
cmps
mov
jb
daa
sub
sub
btr
push
mov
hlt
sbb
add
xchg
int3
jo
jg
rcr
xchg
pop
clc
js
push
cli
mov
push
addr16
mov
loop
fild
rol
cld
movs
mov
fild
adc
mov
inc
inc
xchg
aas
xchg
aam
mov
sub
or
jne
iret
cmp
push
mov
push
aas
scas
sbb
icebp
or
test
aam
dec
(bad)
dec
cmp
(bad)
push
push
(bad)
push
or
cmp
int
jecxz
out
pushf
movs
mov
arpl
aaa
and
jp
shr
push
sbb
out
xchg
arpl
pop
xor
mov
sahf
jge
leave
push
in
push
out
xchg
fiadd
mov
addr16
(bad)
sub
push
jg
icebp
pop
in
pop
int
jns
inc
imul
mov
fwait
jae
mov
rol
out
cmp
xor
popf
and
mov
div
cmp
dec
icebp
jnp
xor
push
or
test
call
push
in
call
push
push
dec
aaa
out
sub
ret
fwait
push
mov
test
jae
neg
sub
cmp
fistp
xor
clc
and
les
lahf
sbb
aas
dec
add
push
imul
mov
add
jbe
xchg
pop
push
int3
pop
add
and
aad
push
in
cwde
mov
sub
dec
hlt
xchg
mov
aas
adc
push
inc
inc
fidivr
(bad)
call
cmp
xchg
push
xor
std
mov
push
loopne
in
jg
or
mov
jl
bound
inc
cwde
fild
fisttp
mov
inc
rcl
addr16
xchg
or
sub
adc
inc
into
sti
pushf
loop
pop
int3
lods
mov
cdq
xor
sbb
bound
hlt
loope
and
sub
add
and
mov
pop
or
out
loopne
or
push
ja
jg
leave
mov
and
push
jge
test
out
adc
push
movq
push
push
dec
loope
retf
jno
cmps
scas
and
mov
ja
sub
ja
outs
pop
cmp
aad
sbb
mov
mov
jns
or
pusha
or
out
movs
ret
cmp
test
fist
shl
push
jecxz
rcl
sub
or
es
data16
add
loope
sbb
mov
mul
add
add
inc
mov
mov
leave
inc
xchg
sar
dec
outs
xchg
inc
xchg
add
adc
sub
div
mov
push
cmp
mov
mov
addr16
cmc
lods
scas
dec
movs
cmps
add
repz
fmul
or
movs
retf
jmp
sti
dec
enter
cdq
mov
dec
or
(bad)
cmps
jns
jle
sbb
adc
shl
es
sbb
fnstenv
and
call
lahf
retf
push
into
add
and
out
sub
ret
out
shl
fidivr
test
dec
sub
push
and
xor
ret
cmps
and
movs
stos
mov
adc
addr16
xor
scas
fcom
add
(bad)
mul
and
cmc
cwde
mov
mov
out
inc
and
call
sbb
test
and
mov
and
dec
adc
fwait
in
or
sahf
and
jle
rcl
sbb
das
add
sbb
addr16
mov
or
jmp
add
pop
out
paddd
xor
dec
ror
jne
mov
cmps
mov
add
aad
call
or
cmp
pop
sbb
jo
push
ss
mov
sub
scas
mul
push
mov
imul
push
xor
pcmpgtb
sbb
mov
inc
out
dec
das
inc
add
outs
call
dec
xor
dec
adc
push
mov
or
push
imul
je
sbb
inc
fmul
dec
push
popf
outs
or
dec
sub
rol
ds
fist
xor
daa
mov
xor
je
ds
jns
jbe
jl
ficom
mov
or
sub
test
xchg
jmp
mov
sti
cmps
movs
or
or
stos
push
jp
in
xchg
adc
mov
out
inc
(bad)
(bad)
(bad)
out
std
mov
mov
(bad)
std
dec
jbe
mov
cmps
mov
mov
pop
and
lea
push
scas
pop
ins
xor
aam
shr
dec
jbe
add
in
xor
xchg
mov
ins
sub
mov
arpl
clc
out
je
inc
popa
and
jg
repz
sahf
ss
shr
retf
into
ja
adc
xor
push
add
push
cwde
(bad)
fimul
push
inc
outs
paddsw
cmp
stos
push
xchg
in
mov
adc
jp
stos
push
(bad)
out
adc
scas
repz
adc
pop
mov
mov
or
mov
lock
clc
imul
mov
cmp
outs
mov
in
push
pop
aaa
pusha
rcr
mov
dec
mov
and
mov
outs
scas
jl
mov
and
adc
jne
loop
ins
scas
jo
mov
xchg
test
aas
inc
aam
inc
xchg
icebp
retf
fnstcw
hlt
jmp
ins
push
sub
pop
push
fdiv
in
imul
movs
leave
cmps
cmps
mov
pop
fidivr
aas
stos
outs
or
fcmove
pop
add
fnstenv
scas
mov
dec
pop
xchg
cmps
lock
adc
sbb
xchg
pop
(bad)
xlat
cs
loop
and
jb
sub
int3
mov
pop
pop
cmp
vprotw
test
cmp
test
xchg
and
stos
aam
sub
pop
stos
add
inc
dec
inc
imul
movs
je
loope
pop
ret
repz
mov
popa
add
pushf
imul
mov
mov
mov
pop
push
das
(bad)
lods
pop
ins
test
fld
lock
mov
add
loopne
ret
dec
push
push
or
xchg
fcmovnu
shl
pop
daa
jno
lods
or
pop
(bad)
(bad)
and
cmc
dec
inc
mov
in
lock
xchg
out
lock
mov
outs
test
inc
sub
pop
and
fistp
aam
add
jmp
sbb
jbe
js
xor
pusha
and
mov
dec
je
pop
xor
cmp
add
(bad)
(bad)
out
mov
pop
mov
out
cwde
inc
imul
mov
fwait
aam
mov
mov
(bad)
and
fdiv
out
fiadd
adc
fdivr
pop
push
jge
lods
push
ror
rcl
or
test
call
fsubr
lahf
(bad)
ds
adc
xor
jp
and
jmp
xor
push
leave
xchg
fild
(bad)
or
pop
jge
mov
out
into
cwde
pop
ins
mov
mov
jbe
push
les
mov
out
dec
adc
mov
mov
inc
loopne
inc
pusha
(bad)
std
lock
sbb
call
sahf
mov
ins
out
and
into
push
loop
fsubr
es
sahf
ins
std
push
xchg
cmc
cdq
jg
cmp
or
mov
dec
push
xlat
or
push
fwait
fwait
pop
out
sbb
in
aad
scas
(bad)
mov
sti
scas
movs
sar
adc
inc
repz
xchg
pusha
sub
iret
dec
call
xchg
jl
fisttp
mov
jle
int
or
arpl
fnstcw
out
push
xor
xor
scas
cmps
dec
adc
mov
mul
add
jns
and
movs
add
pop
fdivr
out
lods
xor
mov
fs
dec
mov
mov
pop
and
imul
pop
(bad)
repz
gs
aam
fmul
sub
add
movs
jp
push
shl
cmp
pop
dec
movs
shr
sbb
xchg
ret
xor
call
dec
jp
shl
dec
mov
jno
xor
xchg
mov
das
lds
sbb
push
jnp
mov
mov
les
pushf
sub
push
imul
mov
dec
or
nop
sti
sbb
mov
iret
aam
push
dec
lahf
pop
and
and
fist
mov
fs
or
sub
cdq
push
xor
xor
call
fisttp
xlat
nop
push
and
arpl
xor
es
shl
cmp
pop
nop
xchg
mov
dec
cmp
ror
mov
adc
push
fs
inc
or
mov
ins
sub
jmp
test
sub
ds
pop
div
add
(bad)
in
frndint
(bad)
pushf
jecxz
xchg
mov
outs
lea
mov
repnz
pop
xchg
loop
inc
dec
int3
pop
stos
sti
pop
adc
add
jecxz
pop
push
cmp
xor
add
inc
xor
ds
dec
inc
ins
add
jne
dec
cld
dec
sub
inc
pushf
adc
dec
xor
mov
jmp
xchg
cmp
scas
mov
jo
adc
clc
and
mov
xlat
stc
idiv
xchg
sub
xor
sahf
stos
cdq
das
sbb
jmp
mov
push
push
lods
mov
fcomp
out
mov
push
inc
fidiv
data16
jmp
outs
mov
movs
xor
sbb
and
outs
inc
adc
inc
fisubr
xchg
pop
sbb
push
push
les
jp
pop
lock
in
movs
sbb
sbb
xor
aaa
cmp
push
ss
fist
sbb
shl
out
dec
hlt
jp
(bad)
fbld
cwde
test
scas
cmp
test
stos
cmps
mov
leave
stos
pop
in
jns
(bad)
sahf
sub
pusha
retf
leave
cld
xor
inc
and
jno
aam
sub
test
aad
dec
ins
cmps
retf
xor
xchg
push
cmp
std
jge
lahf
not
cmp
cmp
dec
ins
pause
xchg
push
lahf
adc
aas
loope
mov
test
add
enter
inc
sub
cmps
cli
mov
jb
xor
mov
adc
xchg
mov
dec
stc
clc
inc
test
sti
xor
je
push
not
retf
ins
call
sbb
outs
sbb
cld
inc
jae
jg
xchg
aas
(bad)
pusha
imul
mov
cmc
cld
aam
into
out
js
mov
or
pop
xlat
call
add
data16
and
aas
shl
stos
xchg
(bad)
iret
int3
add
stos
cmp
push
je
jl
cmp
nop
sbb
push
shr
pop
inc
dec
push
and
jnp
(bad)
sbb
shl
and
pop
inc
or
mov
dec
cld
push
add
stos
xor
sahf
fcomp
cmp
loope
sbb
das
movs
or
je
dec
icebp
shl
mov
sar
cs
dec
sbb
push
out
add
sub
(bad)
cli
fst
mul
jbe
je
push
je
or
cmp
bound
enter
and
scas
cmps
repnz
cmps
(bad)
clc
push
leave
movs
mov
and
sbb
gs
xchg
add
jle
ins
jae
xlat
inc
sbb
scas
shl
pusha
fidiv
stc
jmp
fild
das
aaa
push
inc
fbstp
dec
loope
loop
cmps
and
jns
sub
adc
push
xor
adc
sbb
lods
sub
out
aaa
imul
xchg
cdq
dec
jmp
and
fidivr
pushf
loop
fdivr
fdivr
in
mov
add
mov
or
retf
(bad)
mov
dec
popf
or
shl
add
adc
sbb
jbe
jae
lea
xchg
sub
rcl
fstp
cmps
je
dec
jns
fwait
inc
lock
jle
outs
and
sbb
arpl
add
icebp
cs
int
inc
cmp
push
hlt
dec
mov
cmp
jp
mov
repnz
xchg
dec
mov
mov
cmps
jb
pop
sbb
stc
ror
and
mov
xchg
jge
mov
xor
cmp
sub
dec
mov
das
lds
jne
lahf
idiv
aaa
dec
and
enter
test
enter
pop
test
(bad)
bound
ins
push
frstor
call
xor
mov
cld
sbb
xchg
fadd
xchg
hlt
or
xor
add
sbb
lahf
je
mov
dec
mov
je
jb
cld
xchg
xchg
fwait
pop
lods
lahf
(bad)
ret
xchg
das
dec
xchg
pop
cmp
mov
rcl
push
sbb
ss
xlat
leave
std
adc
and
shl
(bad)
mov
push
test
xor
add
in
les
test
stos
dec
mov
or
and
in
ficomp
mov
(bad)
imul
inc
adc
push
loop
sbb
sbb
scas
repnz
mov
mov
cmp
mov
xchg
pop
mov
data16
fwait
popa
cmp
xchg
sub
scas
adc
stos
sbb
(bad)
and
leave
jg
xor
inc
rcl
xchg
or
sbb
inc
push
jecxz
mov
xchg
dec
clc
out
mov
test
and
xchg
stc
and
call
jmp
mov
xlat
xchg
cmp
pop
inc
(bad)
(bad)
sub
call
jae
mov
dec
adc
mov
pop
xchg
jp
cmp
inc
or
dec
call
stc
pop
add
sti
lods
pop
sbb
mov
pop
inc
cmp
or
or
leave
std
test
call
imul
pop
adc
xchg
ret
pusha
or
mov
mov
jmp
mov
cmp
dec
movs
repnz
mov
cli
aaa
(bad)
mov
test
retf
and
xchg
pop
xor
(bad)
cmc
(bad)
in
test
cmp
add
inc
add
inc
loopne
aas
pop
aaa
push
addr16
pop
(bad)
popf
sti
xor
push
xchg
xchg
adc
jbe
mov
repz
push
push
or
rol
cld
mov
cli
stos
sub
or
outs
adc
sub
inc
xchg
sahf
and
inc
inc
popf
jmp
(bad)
jo
or
sbb
into
(bad)
jmp
cmc
mov
popf
or
or
sti
jl
sub
scas
mov
arpl
fnstenv
cmp
mov
dec
aam
movs
int
(bad)
sbb
pop
mov
stos
xlat
inc
sub
push
mov
call
push
ins
sub
inc
icebp
sub
cmps
cs
aaa
pop
mov
xchg
and
mov
hlt
imul
and
xor
mov
and
cdq
call
icebp
sbb
push
add
mov
call
sbb
add
popa
dec
inc
adc
dec
mov
inc
mov
xchg
scas
scas
fist
(bad)
lock
fst
push
cmc
mov
(bad)
out
in
xlat
pop
pusha
stc
retf
xchg
ins
call
arpl
jmp
mov
inc
jnp
test
mov
call
mov
inc
or
jmp
test
mov
cmp
repz
ins
stos
icebp
scas
mov
fdiv
adc
sbb
xchg
arpl
call
fs
ins
in
cli
xor
push
xor
push
fwait
pushf
in
jl
adc
cs
iret
xor
loope
mov
pop
inc
int3
pop
(bad)
enter
into
aaa
icebp
mov
inc
jmp
mov
mov
cmp
(bad)
int3
sbb
pusha
(bad)
outs
xor
in
xchg
gs
sti
call
mov
add
cli
(bad)
cli
sahf
jp
mov
std
aad
mov
sub
sub
test
aam
pop
fdivr
inc
es
sbb
scas
dec
movs
mov
(bad)
sbb
pop
jle
retf
out
mov
xchg
fs
mov
jg
daa
ins
dec
xor
pusha
movs
push
pop
cmp
lahf
ret
mov
outs
ror
popa
fcom
dec
cld
lea
repnz
into
mov
inc
add
pop
add
fsub
mov
mov
mov
jl
rcl
add
add
xchg
xchg
xchg
inc
sub
test
jo
add
mov
popa
jmp
imul
fstp
shl
leave
fmul
fisub
movs
enter
pushf
sub
cmp
push
xchg
sbb
cwde
std
aaa
fwait
add
retf
ret
(bad)
out
neg
fldl2e
ds
and
cmp
cs
dec
fsubr
push
sub
and
mov
pop
jmp
(bad)
sub
add
inc
loopne
inc
jnp
fnstsw
ret
mov
dec
jge
stos
(bad)
inc
daa
pushf
test
cmc
jg
fwait
call
in
pushf
gs
push
js
fld
adc
fwait
dec
shl
repz
fbstp
ds
inc
pop
cmps
inc
retf
popf
call
jecxz
push
(bad)
xchg
pop
lods
push
fidiv
mov
jo
mov
inc
movs
fcmovnu
cmp
cli
xchg
inc
aam
jp
cmc
test
rol
mov
jbe
mul
movs
pop
adc
xchg
stos
jne
(bad)
int
push
xor
std
pop
xchg
aam
out
adc
mov
aas
push
xor
add
push
pop
mov
jno
cdq
mov
xchg
push
lahf
repz
mov
jmp
addr16
inc
cli
mov
push
jmp
ja
xor
out
or
call
loopne
or
frstor
push
sbb
shl
bound
stc
push
cmp
and
sub
std
gs
imul
bound
lods
ss
hlt
mov
mov
push
fistp
enter
shl
fsubr
add
out
popa
mov
add
into
(bad)
mov
imul
and
inc
inc
adc
and
or
xor
and
(bad)
nop
sbb
dec
movs
div
scas
xlat
pop
pop
cmp
mov
in
cmp
nop
loope
mov
ret
push
in
xlat
fbld
mov
ins
jge
and
test
les
fcom
cmp
iret
sub
ficomp
vrcpps
enter
push
fadd
ror
mov
push
fisub
js
(bad)
retf
je
adc
inc
mov
shr
in
or
sbb
xchg
fstp
inc
stc
mov
addr16
mov
push
mov
xchg
jl
lock
push
pop
mov
or
jecxz
mov
movs
adc
mov
sub
xor
movs
ret
sbb
sub
mov
lods
mov
push
sbb
mov
adc
outs
add
and
repnz
fiadd
pop
or
cli
jle
lds
imul
out
and
push
in
stc
popf
shr
adc
jge
push
(bad)
gs
adc
lahf
push
enter
imul
daa
xchg
inc
xor
aad
fcomp
inc
push
dec
inc
jno
jmp
xchg
pop
xchg
sub
call
les
mov
cmp
mov
mov
xchg
rcl
mov
loopne
jae
mul
and
mov
stos
jmp
pop
cmc
sbb
in
sahf
sar
shl
jae
add
(bad)
or
pop
dec
imul
add
call
mov
mov
stos
inc
mov
js
icebp
and
inc
cdq
mov
mov
jmp
pop
pusha
ins
arpl
(bad)
movs
mov
outs
adc
mov
cdq
cmps
jae
aas
js
adc
jnp
and
xchg
xchg
imul
int
aad
and
das
je
imul
sbb
ja
jg
dec
(bad)
repz
mov
mov
ja
loope
es
inc
push
sub
mov
in
call
or
cli
not
fyl2xp1
mov
mov
cmp
dec
pop
scas
movs
mov
movs
outs
aas
or
sub
pushf
imul
mov
imul
xchg
cmps
ror
sti
xor
push
aas
nop
push
jae
sahf
fwait
xor
xchg
sub
pusha
sahf
dec
popa
stc
enter
jmp
sbb
add
dec
pop
mov
popf
das
xor
sbb
lods
cmp
jb
ror
mov
jns
mov
lods
fist
leave
xor
sub
ret
add
ror
or
popf
(bad)
pop
jnp
icebp
inc
and
ror
mov
mov
fdivr
cmp
dec
ja
jno
addr16
das
sbb
add
adc
and
stc
js
jmp
enter
aaa
jl
jecxz
shr
mov
inc
data16
jns
adc
movs
aas
dec
and
fdivr
cmp
add
ja
mov
lds
mov
adc
mov
inc
gs
xor
inc
stos
adc
mov
dec
mov
dec
leave
movs
jo
fwait
and
xor
or
push
jle
sar
stos
(bad)
(bad)
es
and
test
idiv
fwait
stos
xchg
jp
scas
fidivr
mov
pop
daa
cmp
jb
jb
outs
aaa
addr16
mov
jae
jne
retf
lahf
retf
sub
xchg
into
xlat
bound
loopne
jno
pop
pop
jp
shl
push
mov
leave
mov
loop
pop
rcr
(bad)
pushf
mov
std
lahf
jo
xchg
fwait
pop
xchg
test
sbb
mov
mov
xor
jge
ja
movs
add
inc
pusha
jne
cwde
dec
mov
cwde
ret
data16
mov
adc
mov
fwait
icebp
xchg
dec
(bad)
sub
dec
inc
rcr
not
and
xchg
es
xchg
push
push
call
push
cdq
into
fdivp
xchg
mov
clc
adc
cld
dec
mov
add
cdq
pop
cmps
and
jmp
repnz
out
xor
sub
sub
add
jg
pop
addr16
movs
sbb
and
stos
sbb
push
repnz
jmp
adc
retf
stc
adc
push
or
and
mov
je
int
cld
cmp
out
loop
mov
pop
jp
out
xchg
lods
push
popa
fstp
push
fstp
repz
fwait
adc
rcr
retf
jbe
sub
imul
push
push
xor
test
in
ret
pop
mov
fstp
xchg
(bad)
jle
sbb
mov
adc
outs
loopne
mov
(bad)
ins
lahf
jae
test
jbe
fwait
out
mov
mov
or
sbb
mov
xor
cdq
add
dec
mov
mul
push
dec
jl
mov
sbb
hlt
lea
movs
rol
sub
mov
mov
(bad)
fdiv
add
test
(bad)
or
call
adc
jne
leave
(bad)
icebp
fcmove
xor
pop
lock
inc
sbb
(bad)
fldcw
adc
adc
dec
mov
rcr
jnp
cmp
fiadd
sbb
and
pop
mov
aas
in
add
popf
or
sbb
cmp
xchg
adc
retf
jbe
nop
push
sub
test
call
cdq
mov
pop
cmp
push
pushw
add
(bad)
enter
xor
stos
mov
mov
xor
push
adc
inc
in
push
pop
leave
inc
imul
mov
je
sub
clc
add
or
mov
ss
and
push
div
xchg
push
xchg
dec
and
test
arpl
inc
addr16
mov
mov
clc
dec
lods
pop
std
push
xor
mov
pusha
push
inc
push
or
sub
jmp
imul
mov
adc
retf
xchg
jp
jno
stos
push
lods
jp
jg
push
iret
lods
retf
fucomp
xor
mov
out
call
and
cmps
cmp
pusha
in
aam
adc
loop
adc
cdq
mov
imul
lea
sub
cld
and
jmp
mov
or
nop
cmp
jp
jmp
nop
aaa
xlat
jb
lods
xchg
cmp
sub
jae
pop
adc
push
sti
aaa
cs
pop
or
dec
cld
xchg
fnstsw
push
mov
into
test
cmp
int3
mov
push
xlat
or
clc
addr16
xor
inc
xchg
sbb
sbb
jmp
leave
jl
lods
xor
mov
adc
mov
adc
pop
xchg
mov
dec
pop
stc
(bad)
jne
dec
dec
adc
clc
push
clc
mov
lock
lahf
call
add
dec
stc
xlat
out
ins
jnp
xchg
fxch
ja
mov
lea
loope
call
or
sahf
xchg
retf
ret
call
(bad)
in
xchg
or
rcr
clc
test
inc
jp
scas
adc
and
loop
mov
xchg
sub
mov
mov
add
lock
cwde
pop
sub
xchg
jmp
push
popa
rcr
or
jne
pop
js
adc
in
dec
mov
dec
aad
test
fwait
mov
loopne
clc
hlt
std
and
rol
mov
or
nop
and
fwait
push
push
cmp
inc
cs
pop
mov
lea
call
inc
das
sub
cmps
xor
push
loopne
lock
dec
xor
push
popa
jmp
xor
icebp
fdecstp
cmp
out
xor
jmp
int
(bad)
loop
mov
test
cmc
add
ss
div
and
sub
(bad)
mov
lods
and
pop
push
(bad)
cmovs
sub
imul
mov
ror
frstpm(287
xlat
mov
fcomp
cmp
out
xor
push
push
mov
call
or
shr
jns
push
ret
and
gs
mov
xor
inc
add
dec
stc
push
lahf
pusha
sti
jb
inc
mov
dec
aad
mov
test
dec
les
loopne
in
pusha
jp
inc
pop
test
or
fmul
cmp
stc
(bad)
or
fnstcw
jb
popf
jl
pusha
mov
pop
stc
iret
xlat
repnz
cmps
sub
in
mov
stc
out
or
cmps
cmps
push
mov
enter
adc
cmp
in
les
repnz
cli
adc
or
out
repz
mov
add
loope
push
cmp
mov
push
in
pop
jmp
jnp
adc
fld
loopne
(bad)
outs
or
jno
lods
mov
icebp
and
pop
sti
mov
jecxz
push
aas
mov
loope
out
xlat
cdq
jno
call
lea
pop
adc
push
and
mov
jge
xor
push
xor
inc
and
out
lods
and
jmp
sbb
(bad)
dec
sub
inc
mov
inc
inc
xchg
mov
(bad)
cs
xchg
and
jno
xchg
ja
shl
je
ja
nop
mov
xchg
test
into
adc
mov
call
xchg
sbb
pop
dec
add
shl
(bad)
and
pop
pop
outs
xchg
shl
jl
in
cdq
sar
cmps
aaa
push
and
push
(bad)
pop
shr
push
lock
out
jne
jge
ss
outs
jbe
inc
sbb
aam
inc
(bad)
fs
sti
xchg
mov
dec
daa
in
mov
xlat
neg
pop
retf
cmc
sbb
(bad)
push
pusha
mov
or
cmp
pop
popf
clc
mov
dec
sub
or
pop
mov
sahf
push
arpl
cmps
inc
sub
(bad)
mov
xchg
addr16
in
lahf
adc
ds
mov
stos
gs
adc
ins
loopne
ins
jge
sahf
inc
mov
pop
fdiv
ss
outs
test
ins
lea
lods
inc
test
push
mov
push
inc
adc
dec
js
xchg
jecxz
cmps
icebp
xchg
rcl
fdiv
or
pushf
dec
arpl
mov
xor
ins
(bad)
sub
pop
xchg
icebp
repz
sub
sub
daa
scas
sub
xor
adc
je
xchg
dec
aad
push
push
mov
pop
jmp
sub
and
popf
push
push
or
pop
push
out
in
or
adc
(bad)
int
retf
not
cli
mov
lods
(bad)
jns
pop
call
jae
scas
pop
sub
and
sbb
(bad)
sub
in
adc
push
jg
aad
pop
(bad)
and
sbb
and
jae
mov
push
push
mov
dec
adc
shl
fisttp
in
xlat
in
mov
fsub
loop
cmp
xor
push
dec
jmp
pop
xchg
popf
sbb
adc
xor
into
loop
adc
xchg
fmulp
call
je
call
pop
adc
or
dec
dec
jno
xchg
jae
and
ds
ret
xchg
pusha
or
arpl
dec
push
pop
inc
sub
(bad)
call
push
shl
fsub
mov
pop
retf
and
je
jg
addr16
in
movs
xchg
and
adc
out
mov
mov
imul
mov
sub
arpl
sbb
and
inc
fimul
cmp
add
call
pop
mov
aaa
sub
loopne
pop
jb
xchg
cmps
mov
pop
sub
adc
int
iret
fwait
add
(bad)
pusha
out
test
out
jae
sbb
xchg
aas
mov
mov
jp
xor
out
hlt
jmp
loopne
pop
push
lods
push
stos
lods
xchg
jae
xchg
jno
jnp
cmps
xchg
and
jmp
mov
push
call
cmp
sub
jmp
rcl
mov
pop
jmp
daa
jae
cld
cmp
jl
pop
movs
inc
out
push
push
push
sbb
mov
ins
call
xor
mov
shr
or
fimul
xchg
or
ficomp
mov
pop
scas
pop
aaa
cli
mov
in
jae
sahf
xor
and
addr16
ins
cdq
int3
in
xchg
not
(bad)
sbb
movs
pop
inc
jmp
push
sub
add
cld
push
xor
mov
adc
clc
jecxz
(bad)
ror
mov
das
xchg
or
out
xchg
cmps
sbb
inc
cmp
or
mov
retf
dec
test
xor
inc
pop
mov
mov
mov
inc
push
lahf
or
and
daa
sub
cdq
inc
lock
cmps
inc
inc
inc
dec
add
add
dec
aas
xchg
push
test
jp
into
cld
mov
dec
xchg
out
pop
(bad)
mov
add
push
inc
pop
mov
cdq
mov
xchg
(bad)
cmp
and
inc
sbb
mov
test
arpl
pushf
xor
pop
aas
and
mov
xchg
fst
and
pushf
ins
sbb
xor
out
(bad)
xchg
outs
add
push
dec
adc
xchg
(bad)
fcmovb
pop
sub
mov
movs
mov
mov
out
cmp
retf
add
(bad)
mov
pop
rcr
jge
inc
lahf
ja
cmp
das
dec
pop
xchg
xchg
pop
iret
(bad)
xor
pop
pop
ins
jnp
ss
test
ret
push
imul
fs
mov
(bad)
jmp
add
sub
hlt
cmp
jno
sar
scas
out
mov
inc
mov
dec
xchg
push
mov
xlat
adc
icebp
cmps
or
es
xor
mov
sub
outs
xchg
jb
test
stos
ja
loop
test
mov
retf
dec
push
adc
jg
or
push
cmp
and
and
mov
sbb
jp
fstp
shl
rol
test
cmp
inc
mov
stos
xchg
sbb
jmp
in
sub
dec
ret
lea
std
lods
outs
imul
test
or
outs
cmp
rol
in
outs
add
sub
jae
sbb
sub
pop
xchg
pop
fs
mov
scas
int
sub
arpl
adc
js
nop
(bad)
leave
int3
gs
movs
jns
imul
inc
xchg
ret
fwait
push
cmp
jecxz
daa
mov
cmps
cmp
push
mov
ret
enter
sahf
fsin
jge
dec
div
push
dec
sbb
inc
lods
jns
lods
and
rcl
inc
scas
dec
ret
(bad)
rol
jp
lock
jo
pushf
adc
call
sbb
ins
inc
pop
pop
or
mov
movs
jg
test
loopne
test
dec
or
jp
xchg
jg
sbb
push
inc
popf
fist
lods
aad
push
pop
add
jnp
adc
mov
sbb
push
mov
xor
pop
and
inc
fcomp
and
push
in
push
mov
add
fcmovnbe
fld
sub
inc
repnz
shl
hlt
sar
xlat
push
cmp
aam
(bad)
push
sbb
or
sub
sub
loop
xor
retf
sbb
jp
mov
jecxz
sbb
daa
les
aad
std
dec
ja
jmp
push
int
in
jb
lea
call
retf
(bad)
jl
je
or
mov
pop
jl
rcr
jns
xchg
fadd
(bad)
push
sbb
push
fistp
int
or
sti
cmp
mov
fst
shr
sub
lahf
loopne
xchg
mov
sbb
pop
ja
mov
pop
dec
pop
add
sti
sub
das
xor
and
(bad)
xor
test
adc
or
out
push
jle
or
test
add
hlt
dec
scas
mov
repnz
and
mov
cmp
dec
loopne
sub
cmp
fisubr
out
gs
fst
dec
test
aas
into
sbb
in
inc
add
sbb
arpl
lock
retf
sub
repnz
pusha
mov
and
dec
addr16
dec
jge
pop
pop
out
mov
adc
es
lock
out
mov
cmps
sbb
dec
sub
ins
dec
cmc
cmp
cmp
(bad)
fmul
sub
fcom
sahf
xor
loop
cwde
leave
sbb
dec
push
pop
sub
mov
pop
jmp
xchg
pop
nop
sub
xlat
push
push
mov
sbb
jecxz
shl
cmp
pusha
push
pop
fimul
pop
jns
sub
pop
sub
mov
inc
and
xlat
dec
nop
outs
cmp
(bad)
(bad)
sbb
sbb
or
or
xchg
xchg
mov
add
mov
jp
pop
call
jg
mov
xor
das
stos
sub
fisttp
add
loopne
imul
pop
(bad)
push
stc
movs
adc
in
fcmovnb
xchg
arpl
cs
dec
sub
xor
cmp
push
mov
pop
mov
sbb
ficom
stos
add
(bad)
jecxz
dec
push
(bad)
jmp
pop
xor
jae
mov
fistp
sub
mov
push
imul
pop
out
or
int
mov
pop
xchg
xlat
aam
out
sbb
stc
pop
leave
mov
out
(bad)
or
ret
inc
out
push
push
pop
cmp
test
popf
scas
stos
imul
dec
push
mul
xor
add
jns
imul
xchg
jno
mov
frstor
cmp
lods
shl
in
sub
loop
xchg
cwde
sbb
imul
sbb
movs
xchg
mov
jnp
inc
sahf
cmp
pop
fistp
inc
pop
aaa
test
test
cmp
outs
lods
sti
inc
and
or
xor
cld
xchg
mov
push
sub
and
lds
or
or
jne
mov
sti
push
iret
or
bound
mov
movs
out
mov
mov
adc
mov
dec
push
inc
adc
test
out
pusha
sub
push
gs
lods
(bad)
sahf
xchg
ss
enter
sahf
xchg
(bad)
test
xchg
pop
or
loope
dec
cmc
xchg
lea
aaa
xchg
mov
mov
lods
sbb
adc
fimul
add
rcl
scas
sbb
mov
pop
movs
push
test
xchg
test
test
push
mov
push
and
xor
stos
cli
push
ror
out
fxch
and
inc
mov
pop
mov
repnz
sub
jns
adc
pop
lea
xchg
(bad)
add
push
mov
rol
push
fld
inc
push
loope
xor
popa
mul
dec
and
scas
mov
mov
adc
mov
xchg
stc
loopne
jecxz
push
mov
cmp
movs
nop
addr16
out
or
jo
mov
ins
add
in
lods
aas
and
enter
ss
push
mov
out
test
pop
popa
mov
aam
or
sti
xor
inc
lahf
mov
retf
xchg
mov
int3
mov
imul
es
xor
xchg
retf
in
cmp
xor
mov
jmp
xchg
iret
xchg
jle
lods
xor
jp
iret
xchg
push
dec
pop
shl
syscall
clc
adc
mov
popa
mov
sub
pop
pusha
jl
retf
mov
jae
retf
mov
xor
mov
fldcw
jae
fs
inc
jns
add
xor
mov
iret
aam
(bad)
sub
aas
mov
inc
pop
int
in
mov
aad
out
pop
repnz
dec
cli
jecxz
mov
mov
out
(bad)
xlat
jne
in
jno
inc
lea
add
xor
popf
inc
gs
pushf
imul
pusha
gs
add
out
push
lods
in
rol
icebp
jle
cs
icebp
add
call
mov
mov
mov
frstor
je
mov
mov
mov
mov
jmp
pop
jle
rcr
(bad)
push
dec
popf
inc
popf
cmp
adc
lock
pop
cmp
(bad)
xchg
repz
xor
fnstsw
mov
push
icebp
es
jecxz
pop
mov
mov
aaa
nop
dec
stc
xchg
push
and
out
imul
or
push
pop
add
pop
(bad)
shl
and
and
rep
mov
add
adc
stos
repz
dec
mov
xor
and
sbb
pop
mov
mov
mov
fadd
jne
lods
jnp
imul
not
push
les
sbb
jb
add
sbb
add
cmp
rol
xor
sub
xor
daa
je
jecxz
call
sbb
mov
push
repz
xchg
adc
sbb
mov
lock
pusha
mov
fnstcw
pushf
push
xlat
push
(bad)
cdq
jge
mov
xchg
std
add
add
mov
mov
xor
fnstsw
repz
or
sub
mov
jb
xor
test
dec
mov
cmp
fcom
in
cwde
and
xchg
or
mov
sub
and
mov
sahf
imul
enter
and
mov
scas
xchg
sub
add
in
aam
add
mov
jle
dec
ret
(bad)
jns
xchg
daa
and
dec
push
nop
mov
pop
stc
mov
stos
cmps
popa
and
cdq
pop
test
stos
cmp
out
mov
icebp
mov
test
xor
dec
mov
push
push
dec
mov
in
jle
cli
xchg
cmc
adc
push
sub
jbe
arpl
mov
dec
inc
fwait
add
mov
jb
sub
mov
bound
imul
jno
dec
sbb
push
call
aad
mov
pop
pop
xor
inc
jns
fdivr
push
mov
inc
xchg
test
dec
xchg
pop
leave
rcr
jnp
jo
mov
mov
xor
push
sti
fidiv
dec
mov
or
in
mov
js
xchg
icebp
cmc
cdq
(bad)
imul
cmp
loopne
push
mov
jmp
or
xchg
mov
test
in
and
addr16
cmps
sub
xor
mov
mov
add
gs
add
xchg
scas
push
stos
les
lock
fwait
push
mov
push
xor
shr
sbb
xchg
or
jp
push
lahf
fimul
imul
lods
jbe
or
and
xchg
xor
and
gs
add
test
test
loope
mov
mov
sti
js
push
adc
adc
mov
sbb
nop
pop
inc
icebp
or
sub
fadd
mov
shl
ins
or
mov
in
mov
or
jnp
xor
sar
leave
xor
aaa
sub
adc
js
pop
push
in
add
sbb
ret
mov
or
push
loopne
mov
xor
xor
cmp
sbb
push
pusha
sbb
cld
in
loope
jle
and
mov
popf
mov
push
pop
test
jmp
inc
pop
popf
call
in
popa
(bad)
mov
push
ret
in
and
retf
adc
push
(bad)
xchg
xchg
and
sub
call
pop
je
icebp
prefetcht1
push
jo
sbb
inc
imul
xchg
jno
fbstp
or
repnz
mov
sub
push
fidivr
cld
lods
xor
psllw
gs
mov
jle
stos
es
cmc
fsin
lods
mov
pop
mov
mov
cmps
jge
outs
mov
test
bnd
scas
int
xchg
cs
loop
xchg
lods
sahf
call
cwde
adc
pop
cli
repnz
dec
and
fstp
call
or
fiadd
jmp
jle
cmp
xor
and
push
pushf
loopne
adc
dec
sti
pop
rcl
scas
ror
inc
popa
add
sub
sbb
sti
repz
jno
mov
fs
and
lea
inc
push
mov
pop
jmp
inc
add
lods
ret
jmp
retf
inc
xlat
movs
cwde
aas
sbb
jle
cmp
mov
loop
fs
enter
cmp
inc
mov
pop
(bad)
iretw
call
inc
in
fs
pop
(bad)
movs
cmp
les
push
pop
push
(bad)
pusha
mov
mov
hlt
shl
adc
(bad)
fist
xchg
xchg
fmul
je
mov
in
aaa
scas
sbb
stos
push
pop
test
call
xor
lods
test
add
sub
mov
aas
arpl
or
clc
loopne
fadd
mov
rol
mov
fist
adc
pop
and
jnp
mov
or
mov
adc
dec
pop
ins
shl
out
pop
sub
scas
cmp
rcl
mov
jmp
cwde
rol
in
jnp
add
mov
inc
(bad)
imul
stos
int
inc
and
test
jmp
movs
pushf
cmc
repnz
dec
jae
inc
sbb
sbb
dec
cld
std
cmp
repnz
pop
lods
mov
jns
bound
into
jno
pushf
mov
dec
test
xchg
sub
xchg
jb
xchg
jo
push
adc
jae
mov
mov
xor
cld
mov
cmp
imul
gs
xchg
cmp
test
push
xchg
adc
popa
je
hlt
dec
loope
(bad)
rcr
test
xlat
aam
sub
mov
(bad)
jnp
xchg
int3
imul
sti
jns
xor
(bad)
(bad)
and
sbb
icebp
cdq
add
popa
mov
in
movs
ficomp
retf
xor
mov
dec
push
add
pop
mov
lods
outs
rcl
repz
pop
ret
mov
mov
adc
inc
jne
(bad)
popa
inc
loop
jno
loop
clc
sub
inc
sub
pop
fcom
mov
sub
push
push
out
rcl
push
adc
add
inc
mov
leave
inc
push
outs
or
(bad)
sbb
push
sbb
xchg
(bad)
mov
imul
mov
and
or
(bad)
test
mov
push
in
aam
push
sbb
stc
cmp
fisub
or
adc
enter
adc
mov
popf
cmc
arpl
and
push
icebp
push
outs
mov
cdq
and
or
sbb
push
retf
mov
mov
jge
dec
movs
fisubr
mov
dec
ja
in
mov
inc
inc
xchg
add
or
adc
jb
stc
mov
popaw
(bad)
jp
jae
mov
sbb
pop
aas
xchg
pushf
xchg
repz
ss
jnp
dec
fwait
push
mov
add
cwde
add
inc
stos
mov
sar
xchg
test
inc
mov
sub
xchg
(bad)
dec
cli
jne
xchg
sub
push
out
dec
out
add
jecxz
out
pop
push
jae
fdiv
add
xlat
call
fidiv
stos
loopne
dec
outs
xchg
mov
push
sub
imul
ins
je
bound
lds
sbb
mov
sub
js
inc
fnsave
pop
mov
(bad)
std
or
shr
jns
ins
inc
cli
lods
jnp
shr
inc
cmp
movs
ds
lea
bound
or
adc
xor
or
push
xchg
imul
or
out
ds
jmp
mov
int
xchg
and
pop
mul
sub
xor
outs
jo
or
mov
sub
pop
mov
inc
or
xor
icebp
and
out
test
cmp
sub
repnz
jbe
push
addr16
mov
jb
dec
mov
xchg
sti
sub
mov
mov
rcl
scas
jmp
add
pop
ret
xchg
leave
pop
jg
pusha
push
xor
inc
pop
push
lods
xor
sbb
sub
jmp
(bad)
sbb
cs
sbb
pushf
cmps
in
or
sbb
dec
movs
jle
adc
mov
inc
aad
in
jmp
cmc
jnp
mov
call
adc
fcomp
cwde
xlat
imul
aad
shr
xchg
pop
inc
les
movs
(bad)
sar
shl
js
pop
dec
mov
sbb
mov
loopne
in
jb
outs
lock
cvttps2pi
ds
stos
in
sbb
ror
pop
shl
push
push
ja
in
jge
int
loopne
mov
in
jge
ja
pop
pop
loope
mov
jae
out
test
ficom
dec
cmp
adc
mov
or
mov
cwde
mov
cmps
cs
pop
push
ficom
aas
popa
scas
ss
sar
and
jl
cmps
xchg
and
inc
sbb
sub
popa
aad
push
test
xchg
xchg
bound
or
loopne
cmps
int3
outs
jns
shl
inc
mov
cdq
xor
fsub
retf
pop
int3
out
leave
inc
test
mov
pop
xchg
repnz
jmp
pop
xchg
jo
and
outs
mov
test
push
lods
push
mov
mov
mov
mov
mov
sar
fs
lods
fucomi
enter
in
out
imul
ins
movs
jne
ffreep
jg
ds
inc
test
adc
mov
fild
dec
arpl
popf
or
push
je
inc
mov
cvtps2pi
(bad)
int3
cmps
mov
clc
xor
ret
rcr
mov
cs
call
dec
and
cmps
jle
jbe
sti
pop
outs
sub
sub
jno
movs
lods
adc
push
jl
mov
mov
cmp
inc
sbb
pusha
push
cmp
xchg
jb
jle
rcr
lahf
fwait
retf
inc
loope
loopne
and
fbld
jmp
push
loopne
xchg
or
cmp
inc
lahf
adc
mov
jae
dec
mov
in
or
ret
push
inc
mov
test
scas
cld
sahf
aam
pop
(bad)
fsubr
cmc
cdq
test
add
nop
(bad)
sbb
jns
sub
std
jae
or
hlt
push
lea
jo
sbb
not
pusha
jp
mov
push
sahf
adc
call
idiv
popa
cmps
outs
outs
xor
mov
mov
ret
mov
pop
xchg
in
jns
arpl
xor
test
popa
mov
lods
mov
xchg
or
inc
pop
sub
jbe
sub
shl
popa
push
loope
gs
adc
inc
push
jp
rol
push
cli
dec
outs
xor
pusha
mov
cmp
js
ds
test
fsub
cmp
imul
jns
sbb
pop
mov
sbb
inc
push
aad
aam
mov
pop
es
mov
neg
mov
adc
cld
push
clc
in
mov
jne
push
test
sbb
call
pop
loope
xor
adc
and
out
add
mov
cmps
arpl
adc
das
or
cmp
outs
ja
clc
aaa
mov
xlat
mov
js
add
out
xor
mov
jne
mov
xchg
cmp
test
fsub
sub
(bad)
mov
inc
sbb
mov
dec
push
icebp
fld
retf
out
data16
aas
cs
jl
lods
inc
les
mov
push
out
dec
mov
(bad)
lahf
jnp
jne
std
call
cmp
aas
pop
gs
ficomp
sbb
or
xchg
out
imul
call
pop
gs
add
fcom
and
stc
rol
xor
push
mov
and
push
mov
adc
repnz
outs
stos
cmp
cs
fwait
(bad)
ror
mov
aam
mov
push
push
aad
inc
repnz
mov
jnp
inc
sub
inc
sub
out
or
lods
xchg
push
fs
or
dec
cmp
into
mov
test
fdivr
jge
cmps
xchg
jl
mov
das
inc
mov
inc
outs
mov
mov
or
mov
aaa
and
fimul
adc
xchg
jmp
add
add
adc
cli
add
int3
sbb
jnp
imul
sbb
xchg
xlat
movs
sbb
sbb
pop
fiadd
adc
xor
cmp
and
cmp
pop
pop
push
pop
clc
stos
hlt
mov
xchg
cmps
inc
loopne
mul
inc
xor
and
aad
call
mov
or
push
sbb
(bad)
cmp
mov
dec
leave
lahf
lods
cmp
jmp
adc
mov
fistp
pop
xchg
xor
bound
retf
bound
mov
jge
outs
and
rcr
loope
sbb
inc
ror
mov
xchg
imul
xor
or
xchg
nop
je
ds
std
inc
imul
sub
test
stos
cmp
inc
mov
mov
std
in
(bad)
daa
repz
dec
push
fdivr
push
(bad)
sti
pop
xchg
lea
cmp
pop
lods
adc
rcr
aas
cmps
jecxz
inc
jne
cmp
mov
xor
hlt
jnp
jl
sub
cmp
xchg
popa
push
mov
add
out
rol
cmps
ins
mov
addr16
cli
pop
into
push
mov
out
fs
(bad)
in
add
daa
jae
fadd
inc
push
fld
arpl
sub
jb
lahf
test
movs
pop
pop
fistp
lahf
dec
out
push
adc
fnstenv
jecxz
ret
ficomp
(bad)
les
out
push
iret
(bad)
adc
cs
pop
cmp
in
int
mov
cli
(bad)
jl
jbe
pop
iret
cmp
xchg
jg
push
cld
mov
aas
leave
inc
mov
test
mov
xchg
push
test
outs
sub
and
xchg
scas
sub
mov
sub
mov
mov
push
fwait
sbb
dec
xchg
pop
pop
sbb
in
mov
ja
rol
adc
les
stc
and
or
scas
mov
jo
push
push
and
sbb
fcomp
cmp
sub
mov
inc
stos
sub
popf
fdivr
les
sbb
ds
inc
sahf
push
jle
jbe
pop
stc
lods
hlt
push
pop
xor
push
int3
mov
jp
inc
clc
popa
popa
fdiv
mov
adc
aam
mov
inc
xchg
push
test
push
jmp
cmp
sub
leave
movs
mul
popf
push
test
fs
cmp
sbb
jnp
push
arpl
or
mov
sbb
add
arpl
jns
enter
pusha
out
and
test
sub
or
(bad)
out
jp
cmp
push
sbb
ins
mov
xlat
fidiv
push
xor
fiadd
(bad)
push
enter
cmps
or
out
jge
pop
sub
bound
frstor
xchg
pop
cdq
enter
jns
jge
jmp
cs
fs
addr16
sahf
cwde
ret
xchg
js
dec
fdiv
jo
div
or
je
loop
jl
sub
inc
mov
and
shr
or
jg
sbb
fidiv
fbld
add
out
stos
sub
cmps
lods
add
(bad)
or
or
push
jge
paddsb
in
adc
repz
or
stos
or
mov
aam
pop
retf
dec
cli
push
jmp
or
clc
mov
adc
or
pop
pop
popa
cmp
and
pop
inc
xchg
inc
stos
in
ja
cli
outs
mov
rcl
mov
scas
jae
cmp
fs
test
aam
jns
out
ins
mov
xchg
sub
mov
adc
cmps
jmp
cmp
js
push
or
les
test
leave
add
cmp
aaa
data16
jae
out
pop
jbe
lds
mov
inc
fs
call
inc
mov
dec
in
xchg
shl
sbb
pop
jle
mov
jae
test
jae
mov
push
int3
push
push
js
pop
jl
pop
xchg
mov
jl
jns
dec
push
daa
add
inc
clc
jae
pop
ja
test
dec
jl
add
imul
cdq
cld
repnz
dec
mov
xchg
iret
or
into
shr
jae
xlat
xor
fwait
aas
les
fild
and
sbb
les
adc
lahf
push
sbb
jg
into
imul
mul
pop
xlat
cmp
xor
push
std
aas
mov
and
ret
cs
pop
dec
ret
mov
and
stc
and
pop
sar
push
add
clc
cli
or
push
cdq
mov
stos
jo
and
mov
rcl
lods
add
push
mov
pop
jl
ja
and
js
push
cli
test
rol
mov
or
sbb
xchg
retf
mov
pop
adc
jae
outs
ret
loope
loopne
pop
or
add
or
out
adc
sub
in
or
push
stos
in
jecxz
dec
push
sub
js
loop
push
in
sub
xor
push
inc
cld
sub
xor
dec
mov
and
shl
imul
add
pop
sti
push
dec
push
popf
out
sub
add
std
fdiv
mov
sub
ins
int3
dec
push
sahf
inc
ja
xor
lea
add
(bad)
call
mov
mov
or
xchg
or
out
fcom
xchg
fwait
push
sub
pop
gs
pop
xor
dec
loopne
push
repz
mov
fimul
sub
mov
pop
pushf
in
data16
mov
jmp
cli
and
imul
shr
loop
sahf
xor
mov
sbb
dec
sub
mov
jl
mov
xor
clc
mov
inc
in
ins
dec
pop
shr
stc
retf
pop
outs
in
das
cmp
inc
pop
hlt
rol
adc
mov
bound
fwait
aam
ins
inc
stos
dec
pop
aad
jl
loope
scas
adc
jmp
ret
into
ret
inc
fucomi
mov
cwde
mov
(bad)
sub
sub
lahf
cmps
jmp
mov
repnz
jb
push
sbb
(bad)
jl
retf
cmc
cwde
shr
test
sbb
mov
lea
enter
imul
retf
or
sbb
and
retf
rcl
test
jno
and
ficom
mov
into
clc
das
(bad)
sub
mov
xchg
shr
xchg
dec
push
test
push
inc
sahf
cdq
mov
iret
clc
pusha
mov
dec
test
test
neg
enter
and
mov
fwait
sub
jns
mov
mov
scas
imul
add
push
push
inc
enter
dec
xchg
pop
push
in
adc
pop
jmp
add
inc
and
mov
(bad)
int3
data16
push
ret
mov
adc
cmp
mov
push
jne
out
xchg
in
add
inc
repnz
fisub
mov
mov
jg
push
xchg
jge
jg
test
call
sub
ds
cwde
add
xchg
mov
test
jo
pop
mov
rol
jo
sub
mov
ret
(bad)
repz
jge
mov
lea
push
test
loopne
adc
xchg
ret
push
or
and
loope
mov
clc
xor
sbb
out
sbb
jle
xor
lea
inc
rcl
push
sbb
pop
inc
push
sub
sbb
sar
ins
adc
adc
adc
hlt
and
add
cmps
sbb
enter
jnp
adc
xor
cmp
ins
mov
cmps
fs
sbb
not
cmp
in
cmp
gs
(bad)
not
mov
sbb
sbb
jmp
popa
retf
mov
add
ror
add
mov
ror
push
or
sub
sub
xor
xchg
push
inc
test
or
sbb
cmps
adc
add
fdiv
and
cmp
outs
imul
pop
ds
popa
mov
jae
xchg
cmp
gs
aam
dec
leave
imul
ret
aas
cmp
(bad)
xchg
leave
add
gs
jmp
repz
inc
and
fs
mov
add
cld
dec
(bad)
in
jo
(bad)
leave
mov
repnz
scas
xor
ds
inc
push
push
scas
sbb
shr
push
rcr
or
fwait
les
(bad)
sbb
cmps
inc
xor
repnz
je
dec
jl
aaa
push
pusha
dec
adc
sbb
aam
mov
mov
cmp
fsub
jne
mov
jle
mov
ror
sub
cdq
jb
movs
xlat
mov
push
out
push
mov
or
dec
mov
je
and
add
pop
test
mov
inc
jmp
pop
adc
mov
sub
pop
and
icebp
pop
hlt
inc
pop
lock
mov
call
mov
and
test
in
inc
loop
pusha
or
test
ins
mov
jno
jb
push
xchg
aad
sub
dec
cdq
gs
jmp
hlt
hlt
add
jp
add
jbe
jle
aas
and
push
adc
push
cmps
sub
fstp
scas
fld
out
sti
fiadd
mov
inc
aad
mov
ins
cmps
dec
ds
repz
cmp
cwde
and
cmp
mov
mov
hlt
popa
add
dec
(bad)
int
outs
push
fsubp
push
call
mov
dec
(bad)
mov
push
xor
ins
test
mov
sub
pop
cli
inc
cwde
ret
cmp
stos
bound
jmp
std
adc
jge
cmp
push
sub
jnp
movs
cmc
aaa
cmp
fiadd
jg
call
sub
sub
ins
inc
and
xchg
sbb
add
mov
popf
sbb
push
jmp
sbb
arpl
enter
stos
cmp
lock
cmp
je
mov
push
inc
ja
std
daa
push
clc
push
and
adc
sub
fmul
and
jmp
lods
mov
push
push
clc
pop
icebp
ds
pop
sbb
push
ja
mov
inc
push
and
stc
sub
sub
nop
out
inc
or
dec
dec
inc
out
mov
ret
inc
jne
stc
call
iret
stos
xor
jne
cld
aas
jge
sub
mov
push
into
pop
dec
dec
xor
and
frstor
call
retf
lock
push
loopne
sbb
aad
push
out
ror
push
outs
movs
test
inc
sbb
add
jb
mov
sbb
ret
sub
cmp
mov
inc
mov
cld
jg
std
push
and
sub
mov
sahf
cld
ss
outs
jmp
popf
fst
in
dec
lahf
ja
xchg
push
(bad)
mov
push
fcomp
jae
push
jnp
popf
push
or
popf
xlat
xchg
and
xchg
jae
movs
fmul
call
pop
inc
repz
lods
push
add
mov
jge
das
jecxz
call
jo
add
xor
mov
outs
and
enter
aad
push
clc
mov
mov
adc
xor
xlat
cmp
inc
cmp
leave
and
les
add
(bad)
mov
stc
cmps
xchg
and
repnz
lock
test
push
adc
xchg
or
fidivr
inc
cmp
and
and
pop
inc
mov
and
imul
into
push
mov
call
xor
mov
jns
pop
pusha
mov
call
outs
mov
ins
lods
mov
pop
lds
(bad)
(bad)
jb
imul
outs
pop
sub
push
push
inc
mov
jbe
xor
push
ja
int3
xlat
sbb
mov
in
or
push
cmp
pop
mov
sub
mov
cli
push
mov
or
push
dec
test
or
dec
(bad)
jle
shufps
adc
dec
lods
or
test
std
fsub
test
lock
inc
test
aaa
leave
inc
arpl
add
lea
mov
jl
adc
mov
xor
jmp
outs
push
or
mov
shr
adc
pushf
sub
adc
jbe
repz
pop
std
pop
sub
add
movs
nop
jno
dec
sub
mov
cmp
mov
jmp
pop
into
cmps
sbb
(bad)
pop
xchg
pop
out
mov
push
cld
adc
mov
inc
and
sbb
sbb
sub
xor
push
xor
in
adc
repz
jmp
iret
push
mov
and
icebp
xor
sbb
mov
sub
and
jg
jmp
mov
nop
lods
mov
dec
dec
pop
mov
in
sbb
inc
push
sahf
dec
cmc
test
bound
enter
mov
or
xchg
jmp
and
mov
out
push
mov
sub
das
mov
pop
push
xchg
xlat
sbb
cmp
xchg
sub
sbb
jo
cld
inc
arpl
sub
jmp
jno
jae
push
mov
jbe
iret
push
sub
mov
pop
jae
mov
dec
mov
dec
and
imul
mov
cdq
push
push
mov
mov
mov
lock
das
jmp
and
jmp
div
je
nop
pop
or
shl
sbb
addr16
push
test
aas
cmp
xchg
xchg
cmp
jmp
popa
or
inc
sti
inc
icebp
daa
shl
push
or
imul
int
pop
repnz
jmp
cmps
add
(bad)
daa
xor
mov
mov
pushf
or
je
xor
inc
or
push
cli
add
jg
or
mov
pop
sbb
cmps
xor
bound
mov
imul
push
push
or
shld
in
mov
sub
loope
pop
in
pop
das
outs
cli
stos
into
pop
out
mov
xchg
xchg
pop
in
add
xor
leave
push
aad
xor
imul
stos
fwait
ror
enter
sub
jae
dec
inc
push
or
dec
and
sti
cmp
xchg
sub
(bad)
jne
mov
in
mov
pop
stos
fwait
adc
bound
ja
in
test
or
pop
movs
adc
mov
jp
add
adc
iret
fild
ret
mov
jmp
mov
shr
mov
bound
or
or
mov
bound
arpl
fcom
push
outs
jns
mov
xlat
dec
push
jle
in
push
inc
dec
mov
scas
inc
fadd
or
add
mov
lods
outs
jecxz
mov
mov
xchg
xchg
push
push
xchg
dec
mov
repnz
shl
and
mov
cmp
mov
sbb
out
clc
hlt
push
jmp
mov
mov
adc
inc
push
lahf
stos
lods
xor
out
pop
and
mov
fstp
mov
mov
mov
iret
pop
jecxz
mov
xchg
sbb
stos
pop
rcl
call
mov
stos
mov
sahf
ss
call
sti
inc
sbb
mov
jle
mov
(bad)
dec
aas
repz
inc
and
cmp
jle
xor
xor
mov
fstp
pop
repnz
lds
dec
aas
add
dec
ja
sbb
das
sbb
jo
ror
ror
cmps
(bad)
and
in
sbb
jo
pushf
ds
push
jle
push
cli
adc
mov
out
out
pop
movsx
add
cli
adc
in
or
sbb
jnp
repz
pop
jge
scas
(bad)
jnp
xor
and
inc
and
cmp
pop
mov
or
dec
std
arpl
fld
imul
push
neg
sar
(bad)
xlat
cwde
scas
xor
sar
int3
das
enter
xchg
mov
dec
in
es
pop
shl
sub
mov
adc
inc
xlat
lock
pop
test
push
das
aas
dec
mov
loopne
mov
test
je
sbb
pop
inc
sbb
mov
jae
fadd
cdq
sub
shl
fwait
clc
in
adc
mov
xchg
pop
jnp
xor
dec
push
test
pusha
(bad)
rcr
add
loopne
inc
popf
daa
enter
push
xchg
mov
fs
push
xchg
jle
(bad)
icebp
sbb
gs
clc
sbb
xor
loopne
mov
out
outs
std
hlt
cmp
mov
imul
je
cld
lods
pop
jns
idiv
add
stos
push
mov
pop
adc
ss
mov
pop
and
or
mov
call
mov
cs
sbb
not
add
and
or
jbe
jae
outs
cmp
adc
inc
dec
(bad)
(bad)
stos
push
ss
in
fwait
push
fnstcw
(bad)
mov
sti
int3
mov
test
pop
das
imul
xchg
xchg
cmp
mov
in
call
push
xchg
mov
pop
scas
sbb
fsubr
sahf
aas
xor
popa
test
fsubr
add
dec
jns
add
sub
inc
or
sar
out
push
(bad)
retf
and
data16
nop
retf
fisubr
jmp
inc
addr16
ins
mov
shl
xor
jno
pop
icebp
jp
xchg
call
or
cmp
add
stos
daa
or
stos
dec
jmp
jmp
rcr
sbb
adc
rcl
cmp
cmp
mov
cmp
je
shr
ins
dec
mov
js
sub
mov
shl
push
jecxz
mov
out
xchg
jbe
iret
adc
sub
stos
inc
and
cwde
call
ins
in
imul
jmp
adc
popf
hlt
cmps
jae
push
xor
and
add
xchg
sbb
jne
sti
dec
dec
pop
push
dec
add
mov
pop
in
out
loop
add
ins
fcom
sar
inc
es
cmp
(bad)
fs
mov
lahf
and
(bad)
rcl
cmp
adc
out
test
mov
icebp
repnz
loop
js
adc
jno
ins
aaa
ins
push
jo
std
add
xor
(bad)
mov
aad
outs
cwde
mov
mov
mov
push
push
in
bound
mov
lods
cmp
iret
push
push
pop
or
in
ret
sbb
retf
ret
cmp
xchg
ja
repz
clc
pop
jbe
pop
or
or
inc
hlt
sub
xchg
mov
cmp
mov
std
mov
scas
nop
lods
sahf
push
mov
fistp
arpl
jg
xor
repz
lods
repz
dec
iret
jge
adc
pop
enter
mov
outs
jb
lock
pop
mov
jno
dec
(bad)
call
mov
xchg
imul
fdivr
sbb
mov
inc
sbb
(bad)
dec
xor
push
pop
pop
aam
ror
or
mov
das
mov
adc
fidiv
stos
mov
dec
cs
adc
arpl
mov
mov
cmp
sub
movs
data16
dec
and
mov
loope
in
jmp
xlat
(bad)
pop
jmp
les
inc
lahf
fisttp
push
lods
jne
mov
push
lea
scas
jecxz
ins
stos
subps
imul
inc
dec
jb
cmps
dec
jo
sti
and
(bad)
neg
movs
xlat
xor
ds
in
fs
and
xchg
jl
rcr
pop
push
mov
add
xor
aas
ins
ja
inc
xchg
sbb
push
or
mov
cdq
into
adc
nop
ss
out
aad
push
mov
add
pop
mov
loop
hlt
(bad)
movs
loopne
sbb
xchg
jno
pop
icebp
fistp
jmp
fmul
cmp
jo
xor
repz
int
bound
jecxz
push
stc
pop
or
jnp
mov
lods
push
lock
stc
mov
xlat
pop
jb
sub
popf
movs
cdq
imul
fldcw
out
xlat
mov
lds
daa
sar
ins
fidivr
mov
ins
test
inc
dec
inc
add
test
and
(bad)
call
xchg
xor
ss
inc
jmp
and
adc
and
nop
adc
sbb
out
fs
xchg
out
fsub
pusha
mov
dec
mov
mov
ins
(bad)
js
ret
sub
inc
push
push
mov
retf
retf
inc
xor
mov
enter
sbb
jl
dec
jno
je
inc
sbb
or
cmp
ss
(bad)
jno
es
inc
rcl
fimul
mov
sub
cmp
pop
add
ja
jae
sub
popa
ins
pusha
mov
ins
add
inc
mov
mov
bound
inc
pop
mov
jns
fnstsw
cmp
bnd
shr
fiadd
in
test
dec
push
pop
ss
cmp
aaa
cld
popa
push
pop
retf
jns
stos
mov
repz
(bad)
jl
loopne
pushf
add
pop
shl
adc
sub
fistp
inc
scas
ret
jp
arpl
jno
outs
fisubr
fistp
aas
cmps
jmp
cwde
sbb
cmps
pop
das
fisubr
push
dec
mov
dec
pop
sub
sub
dec
cli
out
xchg
or
call
add
mov
and
sbb
add
mov
dec
add
jl
jne
add
xchg
(bad)
dec
loope
mov
test
dec
test
mov
imul
adc
jnp
arpl
popa
je
stc
xchg
inc
fs
and
push
mov
xlat
mov
shl
xor
mov
retf
repz
dec
adc
aad
adc
hlt
mov
ficomp
pop
sub
rcr
sub
pusha
add
cmp
ficom
scas
mov
dec
push
pop
fbstp
cmp
aad
or
inc
jl
mov
out
(bad)
jl
push
mov
sub
movs
add
std
xchg
cli
aad
adc
cmps
xor
ja
pop
cld
add
push
jo
mov
hlt
into
fucomi
xchg
dec
inc
pop
pop
pop
mov
stos
fidiv
cli
xchg
cmc
inc
add
dec
pushf
pop
xlat
adc
xchg
pushf
rcr
mov
loopne
inc
sub
mov
pop
sub
std
aas
cmps
xchg
push
adc
sbb
rcl
xchg
inc
push
xchg
ror
cmp
push
mov
jl
js
mov
pop
xor
sbb
ja
fsub
xchg
call
les
xchg
or
pop
inc
(bad)
mov
sti
fldenv
mov
jb
inc
int
xchg
clc
add
arpl
xlat
scas
xchg
addr16
bound
iret
fs
arpl
js
push
das
dec
sub
fistp
imul
aad
mov
sub
push
mov
jl
sub
sub
hlt
jmp
dec
icebp
stc
sbb
repz
dec
cli
lds
mov
xchg
dec
pop
sub
sub
xchg
ins
jb
lock
mov
ficomp
dec
cmps
lds
push
dec
movs
push
(bad)
sar
into
inc
int
mov
stc
loopne
jno
jnp
mov
sbb
les
mov
inc
mov
cmps
lea
sbb
lods
movs
ds
test
call
sbb
push
cmp
test
dec
inc
sub
cmp
mov
das
mov
mov
pusha
mov
pop
daa
sti
cmp
lea
add
or
fidivr
retf
inc
xchg
in
call
movs
ja
fs
fsub
adc
popa
in
and
je
jge
ss
in
in
jmp
stos
xor
add
xchg
icebp
mov
xchg
cmp
popf
scas
shl
inc
cmp
outs
stc
dec
mov
and
icebp
add
sbb
cmc
imul
ss
push
mov
(bad)
dec
jecxz
or
add
mov
cdq
aas
gs
ds
das
test
shr
mov
(bad)
(bad)
sbb
adc
pop
aaa
movs
or
out
sbb
rcr
jp
hlt
outs
bound
mov
int
lock
rol
jb
ficomp
mov
jno
push
ins
adc
rcl
loopne
add
retf
ss
jecxz
loopne
push
push
adc
cmp
test
bound
clc
sub
xor
fst
in
inc
daa
popa
test
adc
adc
mov
imul
movs
je
inc
cmp
stc
mov
pop
std
bts
xchg
ret
push
add
mov
add
cmp
adc
inc
sub
cmps
sti
push
dec
lock
in
lock
pop
movs
and
push
mov
inc
dec
cwde
or
(bad)
call
ret
cdq
cld
mov
int
sbb
cld
xor
call
call
mov
mov
xchg
dec
(bad)
sub
ss
sub
fidivr
shl
mov
stos
cld
xor
inc
pop
cmc
fmul
jbe
repnz
or
int
pop
pushf
(bad)
and
jge
xor
clc
dec
xchg
and
pop
sahf
lahf
int3
retf
pop
ret
push
add
xchg
test
or
dec
fcomp
rcl
or
cld
inc
xchg
xor
cmps
shl
inc
repnz
inc
pop
scas
and
cmc
pushf
ret
sub
add
adc
addr16
add
cmp
adc
sub
sub
mov
add
jmp
or
gs
and
jnp
mov
shl
jns
repnz
mov
push
push
fwait
into
add
mov
loopne
jmp
call
xchg
mov
jbe
push
popf
aas
(bad)
div
call
pop
and
neg
pop
sti
jae
push
inc
rcr
fistp
ss
add
fsubr
dec
ret
int
adc
das
lods
fstp
jmp
rcl
fistp
test
leave
cmp
and
pop
daa
fmul
fucomi
scas
jo
pop
cmps
imul
jno
rcr
aas
ins
sub
movs
addr16
mov
mov
dec
xchg
inc
jbe
test
mov
dec
daa
add
xor
mov
pushf
bound
bound
xor
shl
shl
sti
cmp
jnp
sar
xchg
xor
mov
xor
mov
popa
out
dec
pop
or
push
or
add
jp
adc
pop
inc
(bad)
jecxz
lock
mov
(bad)
cmp
ins
movs
cli
in
sbb
outs
dec
pop
js
arpl
dec
or
shr
rol
mov
stc
popf
fstp
outs
sub
jmp
xor
fidivr
mov
inc
mov
je
push
in
or
jmp
popa
out
sbb
jecxz
retf
push
test
retf
push
fiadd
es
push
stos
cld
fcomp
mov
movs
out
pop
je
mov
enter
retf
rcr
sbb
dec
fsubr
enter
imul
test
gs
jmp
add
cli
js
mov
(bad)
fld
jl
mov
rcl
dec
clc
call
inc
dec
mov
sbb
xor
fbstp
push
dec
pop
stos
xchg
jo
movs
ret
xor
mov
das
nop
jno
addr16
dec
dec
jno
fs
fmul
cmp
out
imul
ds
adc
dec
add
sub
int
sbb
cmps
dec
inc
daa
inc
push
inc
inc
ins
push
sub
mov
sbb
xchg
nop
cmp
or
cli
mov
mov
cmp
call
jmp
jo
mov
(bad)
in
dec
aad
bswap
mov
dec
fadd
inc
sbb
nop
sub
leave
shr
xor
or
mov
test
mov
add
sub
pop
aaa
xchg
cli
dec
aaa
mov
loopne
call
ficomp
fs
iret
adc
mov
icebp
retf
test
outs
add
(bad)
jno
js
jbe
addr16
lods
inc
cmp
aam
jmp
fdiv
dec
sub
pusha
cmp
xchg
mov
mov
stos
jl
popf
sti
retf
sbb
addr16
dec
adc
clc
sub
call
fimul
imul
pop
pop
movs
inc
outs
or
bound
stc
push
dec
(bad)
outs
inc
and
or
sbb
bound
pop
mov
sub
and
dec
xor
cmp
jmp
outs
pop
loope
(bad)
mov
es
inc
jecxz
inc
loopne
fwait
lahf
ret
lahf
mov
fs
sar
push
not
jbe
(bad)
pop
mov
mov
xchg
and
push
mov
lods
mov
sub
(bad)
mov
dec
popa
add
mov
shr
cmp
pop
adc
dec
dec
sub
xor
(bad)
daa
mov
in
outs
jne
retf
inc
enter
add
(bad)
mov
mov
add
cs
cs
jmp
loope
xchg
es
(bad)
sbb
stos
imul
shl
hlt
mov
pop
jb
mov
adc
cli
jno
in
cli
mov
mov
fdiv
outs
cmp
mov
xchg
inc
test
fstp
retf
inc
hlt
xor
or
in
cmps
clc
cwde
rcr
pop
xchg
inc
fbld
lock
pop
test
push
(bad)
cli
mov
inc
test
mov
jmp
repz
pop
xor
(bad)
js
or
rcr
lods
push
or
and
xchg
sub
add
sub
jmp
shl
out
sbb
outs
shl
cmp
sahf
retf
lock
pop
mov
jo
adc
ds
lock
nop
sub
aas
jl
mov
scas
jl
daa
or
adc
and
stc
rcl
mov
or
mov
dec
mov
stos
cmc
mov
ins
icebp
jmp
sub
dec
adc
test
push
shr
les
jge
pop
sub
pop
pop
mov
cmp
repz
dec
ret
dec
and
jecxz
(bad)
call
loope
push
inc
imul
push
pop
into
mov
or
mov
cmps
mov
add
sbb
imul
push
mov
push
pushf
rcr
clc
cdq
fistp
cmps
loopne
jmp
and
aas
(bad)
in
mov
mov
stc
mov
jo
enter
scas
idiv
jnp
aaa
cmps
std
dec
je
adc
xchg
dec
call
enter
mov
xlat
jg
sbb
ss
jl
arpl
test
cli
sub
cmps
sete
mov
sub
inc
rcr
xchg
jecxz
adc
in
fst
xchg
adc
sbb
popa
dec
push
fwait
mov
out
add
ins
jmp
pop
mov
or
in
(bad)
or
inc
repz
dec
xchg
mov
test
inc
imul
sub
inc
pop
ins
adc
pop
cwde
xor
mov
pushf
ins
nop
add
sbb
out
in
cmp
xchg
scas
mov
cmp
add
pop
cld
icebp
sbb
int
adc
gs
sbb
dec
mov
sub
(bad)
aad
jnp
adc
(bad)
or
leave
push
mov
inc
mov
pop
mov
gs
daa
aas
inc
mov
xor
mov
adc
add
lods
(bad)
shl
cmc
lahf
or
add
jge
ret
pop
sar
ja
movs
or
ret
jp
lock
cli
mov
retf
sahf
jbe
and
add
inc
cmp
xchg
ficom
jo
sub
je
add
push
mov
push
je
les
mov
sub
enter
cmp
adc
es
xor
xor
mov
(bad)
hlt
(bad)
mov
mov
ret
push
into
mov
mov
(bad)
ins
stos
dec
adc
js
and
push
inc
sti
aas
cs
dec
enter
push
jp
jne
or
mov
xchg
pushf
mov
sub
mov
ja
lea
and
in
push
dec
imul
mov
dec
pop
xchg
call
jmp
fistp
ja
scas
loop
shl
sub
adc
pshufw
xchg
xchg
clc
mov
lahf
add
mov
sbb
xor
push
(bad)
ret
sub
mov
(bad)
xchg
inc
je
sub
pop
mov
ins
push
(bad)
xchg
mov
std
and
out
or
ins
jmp
xor
rol
cmp
cmp
aaa
fild
mov
daa
(bad)
and
push
imul
sub
pop
mov
xor
xchg
lahf
mov
sbb
pop
loope
ret
adc
lods
in
jae
push
aad
dec
mov
mov
mov
ror
jle
call
pop
push
out
sti
push
mov
jmp
movs
jne
xchg
cmp
lods
retf
inc
fldenv
stc
ret
sbb
lahf
arpl
imul
aad
xor
rol
fisttp
and
aas
fmul
push
outs
(bad)
or
es
sub
lods
(bad)
mov
xor
adc
jg
enter
jecxz
dec
cmp
nop
mov
nop
dec
cmp
into
dec
nop
pop
jp
add
sub
out
sbb
sub
xor
mov
cmp
imul
sub
push
int
ret
std
inc
mov
mov
leave
mov
je
lods
in
jb
mov
in
loopne
icebp
jnp
fcmovne
je
push
sahf
dec
sub
and
push
inc
xor
cld
ss
push
mul
jnp
dec
stc
stos
mov
xchg
aad
cmp
xchg
dec
ds
shl
not
fwait
adc
and
or
(bad)
push
mov
jb
push
cmc
jbe
leave
add
bswap
sbb
clc
imul
sub
adc
js
xchg
fsub
icebp
cmps
jb
xchg
loopne
mov
mov
xchg
adc
in
cdq
std
pop
jp
xchg
in
inc
ds
hlt
into
test
adc
adc
pop
cmp
jae
mov
nop
mov
fimul
fmul
or
dec
mov
mov
jg
sub
retf
jmp
pop
aaa
add
mov
and
loopne
adc
mov
(bad)
lea
jns
out
inc
mov
mov
pop
adc
jae
jb
dec
data16
stos
jecxz
call
aas
add
cmp
pop
jg
mov
hlt
jo
loopne
add
xor
inc
add
push
xlat
sbb
aaa
pop
lods
mov
hlt
sub
cwde
jb
jl
dec
cmp
inc
inc
xchg
push
js
scas
nop
cld
dec
rcl
push
aas
sbb
adc
test
(bad)
xchg
test
daa
je
(bad)
outs
push
cdq
add
das
jl
ds
aam
lds
jg
fwait
jmp
or
shl
mov
les
icebp
jmp
add
adc
sbb
pop
pusha
mov
(bad)
mov
adc
fwait
cmp
mov
cmp
out
gs
outs
cmp
sbb
rcl
cmp
(bad)
jg
and
popa
add
retf
fcom
out
(bad)
hlt
jo
rol
lds
lea
push
adc
sub
loopne
fild
in
jb
(bad)
data16
daa
loope
push
adc
mov
cs
retf
movs
xchg
add
push
cli
push
icebp
scas
cld
sub
dec
pushf
xchg
xchg
xchg
or
mov
dec
inc
adc
icebp
xor
sbb
daa
add
add
push
cmp
inc
mov
ds
int
icebp
inc
in
fcomp
loopne
adc
(bad)
jge
mov
inc
mov
dec
mov
mov
stc
repz
ins
cmp
retf
lods
push
mov
retf
cdq
out
(bad)
std
or
cmp
nop
push
xchg
push
jmp
adc
xchg
jbe
(bad)
out
setb
shr
js
ss
pop
or
xor
imul
fsub
inc
out
jns
cmps
out
and
mov
mov
test
or
pushf
xor
imul
(bad)
mov
xor
cmp
sets
aam
int
cmc
mov
mov
js
lds
inc
fld
enter
fcom
xchg
and
fsubr
mov
or
sub
call
adc
neg
add
rcl
movs
cmp
or
aam
or
cmps
and
dec
xor
mov
outs
pop
or
pop
mov
mov
outs
dec
cmp
pushf
fild
and
pop
ret
dec
xchg
or
lods
inc
or
jmp
int
add
cmps
cdq
movs
mov
(bad)
imul
mov
xor
rol
ins
cs
imul
out
push
push
xchg
ja
mov
inc
dec
ret
leave
lods
mov
and
mov
push
mov
mov
sub
shl
push
push
fistp
pusha
sub
add
inc
push
mov
sub
pop
gs
mov
mov
fbstp
bound
push
cdq
jp
out
sub
xlat
and
lds
shr
push
mov
scas
dec
push
xchg
loope
fistp
jmp
shr
pop
lods
mov
fld
scas
inc
or
xor
adc
lock
mov
inc
xor
or
push
stc
mov
pop
sub
cld
pop
out
push
and
sub
daa
xchg
les
cmp
jmp
mov
(bad)
repnz
scas
in
movs
mov
sti
adc
lahf
inc
std
test
adc
xor
push
dec
adc
xchg
and
xchg
cmps
scas
xor
sub
ficom
retf
outs
mov
cmp
sub
leave
push
shl
push
mov
inc
cmp
dec
loope
sti
popa
push
aaa
in
or
inc
xor
and
imul
inc
push
cdq
mov
push
xchg
in
jle
xlat
push
sbb
sar
loope
dec
jns
jns
pop
push
mov
xlat
or
dec
adc
add
push
xor
movs
out
add
fcom
hlt
sbb
sbb
sub
punpckhbw
fist
or
inc
mov
mov
sar
jae
movs
dec
test
pop
lock
push
inc
sbb
test
push
js
adc
aam
cs
xchg
jp
mov
les
jp
mov
cwde
xlat
loope
add
cmp
aas
(bad)
inc
shl
imul
mov
and
mov
dec
outs
inc
xchg
or
push
push
mov
jns
cmc
push
cmp
push
es
push
aad
push
xchg
jmp
xor
lods
lea
stos
div
outs
call
dec
fnstsw
cwde
fadd
sar
mov
call
mov
test
xlat
add
cmp
mov
mov
cmps
xchg
stc
sub
mov
push
pop
xlat
mov
shl
sub
enter
xchg
mov
mov
add
fiadd
jp
cmps
cmp
adc
test
sub
out
pop
mov
push
push
daa
outs
stos
xchg
lods
push
fdiv
jb
popa
movs
sbb
add
or
and
in
pusha
push
push
lds
jne
jo
add
lods
xor
sti
dec
add
sbb
pop
imul
sbb
dec
pop
neg
jb
in
les
cmp
mov
jnp
mov
lock
pop
jge
in
repz
(bad)
out
test
mov
ss
push
in
dec
sbb
je
mov
xor
push
adc
test
cwde
gs
mov
iret
xor
jnp
int
mov
fbstp
shl
adc
repz
bound
xchg
retf
test
mov
and
jge
push
pusha
cs
pop
jae
call
pop
push
test
popa
cmp
rol
mov
out
inc
les
push
and
sbb
les
nop
mov
xor
movzx
ds
jge
ror
cli
stos
out
int
mov
pop
mov
fiadd
pop
pop
sub
clc
xor
pop
das
mov
mov
icebp
nop
dec
jnp
xchg
pop
dec
inc
inc
jmp
xchg
adc
jmp
pop
test
add
mov
dec
fmul
mov
pop
dec
mov
cmp
jns
dec
fdiv
sar
cs
sti
in
push
push
shl
jno
in
jp
and
lods
mov
stos
adc
pop
sbb
pop
mov
cmc
outs
inc
mov
push
daa
jge
sub
xor
dec
mov
xor
mov
out
push
fs
cmp
pop
cmps
adc
(bad)
cli
call
stos
adc
out
jbe
test
push
imul
ret
scas
fwait
out
add
fcom
xor
fnstcw
sahf
sub
dec
jmp
ficom
xchg
lahf
cmp
cmp
inc
add
mov
jae
mov
loope
pop
xchg
dec
js
in
clc
out
pop
outs
mov
xchg
loop
and
push
imul
xchg
in
in
retf
ret
push
adc
(bad)
in
cmovs
mov
sbb
scas
es
add
test
and
out
mov
movs
int3
and
rol
add
(bad)
in
lahf
in
push
sub
sti
pop
adc
pop
dec
sbb
pop
int
lods
fsubr
ins
xor
out
fist
pop
inc
ficomp
push
nop
fcmovnu
adc
sub
scas
in
test
nop
arpl
mov
push
or
or
jne
int
push
mov
cwde
mov
adc
xor
stos
clc
push
adc
fldenv
cs
in
adc
das
sub
dec
movs
mov
xchg
shl
push
adc
retf
adc
cmc
in
imul
push
stos
out
pop
mov
fsubr
(bad)
mov
std
data16
xor
cmps
mov
jnp
push
retf
in
mov
mov
push
mov
cmp
js
add
mov
xor
mov
fs
aaa
cli
mov
scas
mov
lods
in
les
push
loop
mov
xchg
rol
outs
mov
xlat
loopne
add
pop
popa
lods
shl
cmp
les
lahf
jnp
addr16
and
mov
das
pop
call
mov
mov
hlt
xchg
pop
loopne
ror
dec
mov
mov
or
or
push
outs
add
loope
push
scas
data16
retf
xchg
movs
(bad)
das
xchg
rcl
popa
jbe
mov
jg
int
imul
lock
hlt
data16
cmp
fistp
jne
out
daa
jo
mov
call
out
fdiv
mov
or
pop
xor
dec
cmp
shr
fld
in
enter
fs
push
cmps
mov
ins
addr16
imul
pop
pushf
jo
fcmovne
in
pusha
loopne
xlat
mov
and
xchg
mul
mov
xchg
pop
pop
in
clc
and
std
xchg
in
aam
dec
fldenv
sub
ja
mov
arpl
cmp
je
movs
mov
adc
test
js
dec
and
fidivr
movs
mov
scas
(bad)
jno
and
adc
(bad)
dec
test
retf
das
xchg
push
jp
outs
and
out
int3
push
or
lods
dec
push
sub
sub
or
retf
sub
pop
cmps
push
mov
test
nop
or
pop
je
inc
pop
sti
icebp
mov
cmps
jb
out
cmp
hlt
cmp
add
aam
call
jns
lds
into
lds
jmp
and
aas
stos
sub
cmp
ss
mov
inc
pop
retf
jp
adc
sbb
mov
mov
icebp
jmp
gs
in
jb
in
ror
scas
cs
out
sub
cmp
call
push
addr16
cmc
(bad)
rcl
sti
adc
inc
push
sar
cli
fsubr
ins
cmp
and
fdivr
xchg
clc
fwait
fwait
cli
mov
push
or
jmp
cmp
fimul
pop
shl
loop
adc
push
jg
push
and
inc
jbe
lock
jbe
add
dec
pop
push
in
jo
xchg
jmp
mov
pusha
inc
jns
or
shr
push
adc
and
xor
je
xor
rol
dec
jp
in
xchg
jbe
adc
imul
sub
pop
sahf
inc
cmp
push
xchg
sti
scas
adc
sub
retf
leave
bound
push
mov
repnz
clc
adc
repz
pop
push
xor
jmp
out
push
(bad)
xor
ret
xor
pop
pop
ins
push
inc
mov
ret
es
stos
lahf
add
shl
lock
movs
adc
aaa
xchg
mov
mov
ficom
push
inc
fsubr
xchg
lock
mov
xor
ja
push
fistp
ds
pushf
loopne
in
push
and
pminsw
mov
push
sbb
xor
or
lahf
add
pop
fst
in
inc
cmps
mov
push
retf
js
loop
es
aam
mov
mov
jns
sub
dec
(bad)
call
hlt
loopne
xor
push
loope
lahf
test
shr
jg
mov
shr
repz
fst
jmp
jns
hlt
xlat
cmp
jp
and
scas
fist
(bad)
sub
and
les
push
xor
jbe
or
fimul
ficomp
jb
inc
sub
loop
daa
test
jns
stos
int
stos
sub
cmc
cwde
jbe
inc
ret
xor
lock
cmc
lahf
push
xor
jbe
push
pop
push
fisubr
ds
cmp
ins
xchg
lods
add
ror
mov
lds
sahf
rcr
inc
adc
popa
pop
cmp
or
div
mov
mov
mov
sub
out
adc
or
xor
(bad)
out
cdq
mov
dec
mov
push
scas
je
push
(bad)
sti
adc
xchg
add
jne
push
pushf
es
inc
and
outs
mov
sbb
mov
rcr
call
pop
cli
repz
fstp
jmp
in
xchg
movs
inc
push
std
jg
outs
adc
jle
inc
call
xchg
xor
lds
jns
mov
call
pop
in
(bad)
cmp
xor
sti
jbe
dec
jb
push
adc
fucom
into
imul
je
dec
mov
dec
and
push
in
or
fcomi
mov
and
loop
pushf
sub
imul
adc
out
or
ror
es
repz
out
mov
sti
aam
xchg
inc
xchg
outs
add
enter
mov
in
ins
jle
ja
xchg
outs
imul
mov
fist
inc
xchg
xchg
jae
iret
mov
sar
les
in
retf
scas
bound
stos
loope
cmp
xor
mov
mov
cli
and
cli
push
movs
les
faddp
xor
sub
xchg
add
dec
icebp
outs
pop
jo
inc
fs
cld
imul
mov
push
out
mov
push
mov
and
sbb
pop
in
mov
dec
pop
sub
sbb
and
xchg
jo
gs
in
mov
sbb
ret
inc
div
shl
test
(bad)
push
dec
mov
and
loop
dec
in
sbb
lods
mov
stc
xor
movs
inc
in
test
sub
mov
jg
cld
lahf
test
dec
inc
and
and
cmps
jnp
(bad)
iret
mov
(bad)
sbb
xchg
push
das
pushf
mov
ss
push
cmp
jp
aam
repnz
test
ret
jp
pushf
jg
ja
dec
cmc
or
xor
cwde
push
pop
jns
or
bnd
int
xor
bnd
fisttp
jge
mov
push
lock
xor
shl
mov
mov
sbb
lock
push
bound
ins
movs
or
rcl
scas
push
scas
fwait
push
mov
stc
sbb
adc
popa
ss
loope
and
ror
fisttp
nop
test
(bad)
clc
imul
les
or
clc
cmp
xor
push
cmp
push
cmc
outs
dec
ret
add
popf
ds
ds
xchg
or
inc
add
pop
cmp
sbb
xlat
cli
pop
push
add
pop
xchg
push
jecxz
xchg
inc
mov
or
bound
ins
or
pusha
retf
adc
rol
sub
mov
push
mov
stc
mov
mov
jns
(bad)
xor
clc
mov
pop
(bad)
out
aaa
push
cmp
das
or
outs
inc
adc
cwde
and
imul
in
pop
cmc
pop
jmp
xor
inc
xchg
adc
xchg
or
mov
xchg
xchg
jno
ss
ins
repz
push
enter
idiv
pop
add
cli
jmp
lahf
adc
dec
sbb
and
js
loop
aad
popa
arpl
movs
test
add
mov
cli
imul
mov
mov
jae
jmp
xchg
in
xor
aam
pusha
mov
xchg
xchg
sbb
add
sar
shl
pop
sbb
sub
ins
sub
push
xor
call
imul
cs
and
mov
lods
out
das
xlat
sbb
push
imul
mov
sbb
cdq
jne
std
and
ret
in
cmps
xor
icebp
and
jne
bound
jle
dec
xchg
loopne
(bad)
call
scas
or
mov
mov
mul
dec
mov
cmp
std
rcl
mov
lods
retf
es
mov
mov
les
adc
and
push
and
test
push
inc
ins
cmp
mov
jns
jno
mov
xchg
jbe
out
mov
jge
psrad
push
mov
neg
enter
ds
push
push
xchg
dec
push
cmp
push
pop
pop
js
and
sbb
mov
popa
cmc
add
or
nop
std
push
and
jne
cmp
mov
retf
ins
xchg
stc
cli
fistp
sub
jae
push
sub
imul
out
mov
jmp
ror
add
xchg
inc
mov
mov
in
call
or
movs
iret
or
and
xchg
push
cmps
mov
xor
pop
inc
cmps
loope
aaa
or
out
mov
dec
and
mov
addr16
jbe
xor
clc
push
jno
(bad)
mov
jecxz
mov
shr
popa
test
cmp
lahf
mov
aam
(bad)
adc
push
out
push
movaps
cmps
(bad)
fsubr
and
pop
fisubr
in
enter
psrlq
outs
jecxz
push
arpl
xchg
cmp
fadd
cmp
pop
repnz
dec
inc
mov
in
fimul
cs
cmp
movs
mov
fcom
or
nop
and
push
add
ficomp
mov
test
lds
mov
dec
adc
repz
loopne
loop
jo
stos
js
sub
inc
call
jg
fwait
push
ins
shl
shl
fisub
pop
lock
pop
cmp
mov
xor
cmps
push
repnz
xchg
or
aad
cmp
int3
push
or
and
sub
rol
lahf
je
pop
outs
adc
push
jl
dec
or
jne
sub
outs
add
push
cmp
dec
ins
std
push
(bad)
in
pmullw
dec
inc
rcr
dec
and
sbb
mov
sbb
ins
test
cmp
popf
inc
mov
shl
(bad)
fild
fwait
mov
mov
out
jbe
add
sub
push
xchg
aam
mov
pop
cmp
ror
sahf
sbb
lock
cvtdq2ps
mov
imul
mov
jecxz
dec
repnz
outs
mov
mov
and
cmp
test
(bad)
push
lods
push
sbb
adc
aam
cmps
sub
jae
mov
add
shl
cmp
pop
push
mov
sub
aam
pop
ret
jp
jns
jae
push
jmp
aaa
jp
pusha
adc
inc
movs
sub
imul
jb
sub
js
int
push
mov
outs
mov
fisttp
mov
xchg
out
pop
sbb
fs
and
cmps
retf
loope
outs
ja
push
mov
in
mov
out
add
jmp
inc
test
mov
adc
fld
in
(bad)
sbb
xchg
push
imul
xchg
lds
int3
add
mov
jmp
imul
or
sbb
push
pusha
xchg
mov
clc
sti
add
adc
inc
pop
mov
lods
pop
and
loopne
add
mov
mov
bnd
je
cmp
cmp
mov
jno
lahf
jae
loopne
pop
push
test
(bad)
iret
or
pop
adc
ss
xchg
lods
(bad)
shr
leave
cli
jbe
lock
and
fldcw
rcl
adc
fiadd
cmps
mov
sbb
(bad)
add
xor
dec
js
enter
cli
xchg
and
mov
pop
pop
add
add
ins
jbe
add
sahf
jns
(bad)
(bad)
jno
(bad)
mov
gs
push
outs
jne
jb
cmps
out
push
cmp
call
cmps
or
jae
jno
push
jmp
ret
into
sbb
out
cwde
loop
call
repz
jno
sbb
loope
les
dec
mov
sub
test
js
inc
push
aad
pop
adc
inc
je
lods
push
adc
push
xor
xchg
rcr
fnstsw
int3
cmp
imul
(bad)
dec
jno
test
sub
add
ja
out
ror
test
pop
arpl
jb
popa
xchg
push
cs
inc
sub
scas
dec
jge
mov
mov
(bad)
dec
pop
dec
ins
aad
movs
fidivr
cmp
xor
push
les
(bad)
xor
push
fisubr
inc
sbb
xchg
mov
xor
cmps
ja
and
dec
fs
imul
iret
jge
bound
mov
and
cwde
jmp
adc
gs
or
je
inc
mov
ja
imul
jo
pusha
fcmove
call
sub
and
add
in
test
jle
and
popf
jmp
jmp
xchg
in
mov
ja
icebp
les
outs
push
jl
or
jb
out
(bad)
fs
call
shr
es
jl
jbe
out
jmp
fild
(bad)
cdq
xchg
into
rol
inc
clc
xchg
shr
and
adc
xchg
sbb
enter
sub
pusha
fadd
xchg
dec
adc
cs
in
adc
cmps
adc
dec
les
sbb
jmp
jp
mov
nop
cmp
stos
adc
pop
das
xchg
int
loop
push
xor
pop
fstp
push
mov
pop
mov
sti
mov
in
xchg
xchg
(bad)
icebp
stc
jmp
xor
sub
into
pop
bound
mov
loop
mul
mov
(bad)
mov
pop
add
cmc
mov
ins
pop
push
lock
sub
or
outs
xor
test
dec
aad
mov
mov
enter
sub
xchg
rcr
lock
cmp
(bad)
inc
sub
sub
in
mov
movs
ret
fdiv
psllq
sbb
out
add
ins
mov
mov
lahf
xor
and
fwait
mov
jecxz
mov
nop
or
mov
nop
or
popa
aas
in
std
sbb
fwait
(bad)
ror
mov
or
jg
xchg
ja
jg
test
inc
js
push
pop
and
test
call
push
and
popa
sub
enter
in
mov
mov
aad
movs
xchg
jecxz
jmp
out
adc
adc
ror
xor
imul
dec
lock
mov
dec
jp
mov
jb
mov
(bad)
data16
mov
shl
idiv
mov
fwait
and
imul
(bad)
sbb
imul
(bad)
jl
push
arpl
pop
ja
jne
cdq
movs
mov
inc
out
jle
xlat
loopne
sahf
sub
fnclex
or
mov
xor
mov
(bad)
fld
ret
outs
into
leave
push
adc
daa
movs
stc
mov
fsubr
sbb
fmul
fldenv
std
jmp
shl
retf
pusha
adc
(bad)
mov
lods
mov
sbb
nop
stc
sbb
loope
sbb
rcr
lods
adc
ret
clc
pop
clc
xchg
fwait
stos
or
dec
inc
aaa
or
ficomp
xchg
mov
dec
fs
mov
cmps
dec
xchg
js
xchg
test
rcl
jbe
shl
add
test
pand
mov
push
jp
pop
push
xchg
jae
in
movs
fs
movs
test
fbstp
push
jbe
adc
test
push
inc
adc
mov
cmp
sub
out
push
adc
mov
hlt
sbb
jnp
loopne
fsubr
(bad)
dec
sbb
arpl
mov
imul
mov
or
pop
push
out
stos
jp
fwait
xchg
idiv
mov
ret
push
jns
aad
cwde
lock
sub
jg
or
jge
imul
sbb
(bad)
mov
xchg
mov
mov
and
pushf
mov
iret
in
repnz
in
xchg
jp
outs
sub
xchg
mov
out
and
dec
daa
test
test
sahf
call
leave
dec
cmps
int
push
xor
(bad)
add
add
or
pop
addr16
movs
es
(bad)
xchg
push
sti
add
sbb
jle
push
lods
mov
fwait
cs
push
mov
xchg
loope
push
mov
fnstenv
movs
push
xchg
scas
pop
cmp
fbld
rcl
mov
push
in
cmp
lock
push
cwde
dec
adc
lock
xchg
add
ins
push
sbb
inc
cmps
adc
mov
jmp
arpl
jmp
cmp
lock
inc
mov
xchg
xchg
xchg
ins
push
das
out
sbb
rol
sbb
out
cdq
xchg
pop
cmp
dec
cmp
mov
pushf
pop
add
mov
pop
mov
(bad)
lea
or
lock
add
xor
iret
xchg
mov
inc
test
fld
fiadd
lods
push
stos
loopne
cmp
and
dec
add
mov
adc
stos
dec
int3
push
fisubr
shl
inc
movs
cmps
pop
jl
iret
loope
inc
mov
in
or
mov
rcl
mov
movs
fisubr
je
loope
push
dec
add
out
cdq
cs
popf
and
add
cdq
xlat
retf
and
das
pusha
test
cmp
pop
jns
bound
inc
fnstcw
icebp
adc
mov
mov
lods
enter
dec
sahf
loope
push
adc
adc
jg
dec
pop
sub
xchg
or
jmp
or
ret
sti
stos
mov
add
inc
or
test
(bad)
fiadd
and
or
repnz
loope
and
pop
sahf
cli
cmps
pop
xchg
popa
pop
loop
cmps
fidiv
sub
cmp
sbb
add
fist
mov
mov
fwait
sbb
cmp
mov
fwait
popa
inc
test
int
adc
pop
xchg
int3
loop
xchg
sbb
adc
fsubr
rcl
lea
call
sub
test
push
call
cld
mov
bound
(bad)
loopne
pop
inc
or
imul
adc
imul
test
test
jb
push
dec
call
xor
fnstcw
add
inc
dec
add
imul
sub
mov
sub
jp
ror
xchg
pop
and
shl
out
mov
ss
es
cdq
sbb
jmp
inc
repz
jl
cmp
sub
call
in
je
jo
aas
adc
js
dec
imul
push
call
adc
call
popf
pop
pop
mov
out
je
cld
pop
stos
jne
fcom
rol
shl
jo
sub
add
clc
jl
mov
adc
ins
jno
mov
retf
retf
arpl
(bad)
(bad)
call
sbb
into
mov
sbb
sbb
inc
mov
aas
clc
inc
sub
es
out
pushf
and
inc
lds
pop
icebp
mov
and
ret
mov
add
inc
cld
jmp
sub
jecxz
push
jnp
dec
xor
sbb
cmp
repz
movs
loope
(bad)
cmp
push
lds
in
adc
xor
es
icebp
mov
enter
loop
jle
es
lds
sbb
jecxz
mov
ror
jo
scas
and
ds
shl
test
sbb
loopne
adc
rcl
jns
pop
xchg
xor
sub
hlt
outs
aaa
push
dec
sub
stos
adc
inc
adc
sti
inc
in
and
sbb
jp
jno
mov
das
test
adc
mov
ds
stos
pop
mov
in
stc
out
dec
jge
(bad)
xchg
inc
mov
sbb
mov
(bad)
jae
dec
mov
push
ficom
call
mov
xchg
scas
mov
mov
pop
adc
gs
mov
sub
scas
and
mov
mov
repnz
sbb
test
and
xchg
loope
mov
jle
fldcw
dec
dec
pop
mov
retf
cmc
sbb
movs
out
fld
cmps
adc
push
jecxz
jae
int
push
arpl
stos
ja
and
mov
fisubr
mov
movs
scas
mov
out
in
sub
outs
xchg
cs
mov
retf
jle
mov
dec
jmp
push
pop
add
jmp
push
fistp
call
xchg
addr16
dec
(bad)
out
movs
frstor
pop
xchg
cmp
mov
mov
cmp
mov
or
dec
cmp
arpl
aam
movs
pusha
clc
jo
daa
push
inc
mul
sub
jecxz
clc
pop
pop
and
addr16
ror
daa
cmc
pop
push
fs
inc
sub
sub
jle
cld
enter
push
mov
rep
mov
or
sbb
sbb
cmps
rcl
ds
mov
xchg
cmc
xchg
fwait
sub
push
sub
cwde
icebp
retf
adc
addr16
and
and
cdq
aad
lock
cmps
lods
ss
inc
pop
gs
retf
sti
idiv
(bad)
lods
inc
jg
cmp
imul
sbb
int
xor
imul
pop
sbb
push
adc
out
(bad)
call
xor
jge
and
or
push
(bad)
pop
push
pop
test
int
fsubrp
jae
mov
xchg
ficom
mov
rep
cwde
mov
pop
fidiv
fstp
or
jl
ret
imul
popf
adc
scas
xor
mov
in
or
out
mov
test
mov
dec
in
fild
mov
add
push
movs
cmc
cmovl
sar
xor
xchg
aam
ss
test
loopne
arpl
enter
jne
mov
fnsave
jmp
clc
xchg
add
dec
cld
jmp
outs
aad
mov
mov
ins
loope
sbb
cs
jb
mov
sbb
mov
or
test
mov
jle
call
push
mov
jg
in
and
xor
mov
sbb
add
sub
mov
pop
inc
mov
or
and
imul
js
push
cdq
cdq
add
and
ret
adc
pushf
dec
or
ror
pop
(bad)
push
cmps
fs
xchg
jge
mov
cmp
fstp
sbb
mov
mov
and
outs
sbb
inc
addr16
xchg
in
cmp
cdq
ds
add
icebp
and
(bad)
data16
retf
mov
mov
xor
jl
xor
adc
mov
cdq
xor
les
ds
cmp
pushf
fmul
fsub
inc
mov
inc
ret
or
jmp
cli
lods
lahf
loopne
pop
das
cdq
out
imul
sti
stc
retf
fninit
and
or
push
(bad)
sbb
lods
in
rol
xor
sub
enter
sub
ins
pop
sub
mov
arpl
out
outs
sbb
mov
pop
ret
test
fwait
bswap
out
stos
xchg
shl
inc
pop
adc
sahf
scas
and
sbb
mov
cmp
ss
mov
loop
jbe
cmp
(bad)
mov
or
popf
inc
inc
xlat
jae
xor
push
push
xor
xor
mov
jne
push
in
xchg
cdq
into
pop
sub
jae
cmps
stos
std
adc
jle
cs
jb
out
mov
je
cdq
jmp
movs
adc
jp
rol
cmovge
fcom
mov
mov
mov
push
ret
mov
sub
(bad)
mov
add
pop
test
iret
std
in
xchg
clc
or
sub
pop
sar
and
dec
cmps
and
xor
movs
in
repz
pop
pusha
xlat
push
inc
cmp
cmc
xor
sahf
add
jo
mov
mov
pusha
repz
cmp
and
xor
cmp
pcmpgtw
fsubp
pop
stos
or
not
adc
lea
int
fldz
movs
out
jle
pop
rol
mov
adc
and
jne
jmp
rcr
mov
or
ficomp
jo
mov
leave
mov
es
cmp
or
cmps
xor
mov
jl
cmp
mov
fistp
in
neg
ss
imul
int
jae
mov
fnstsw
ud1
adc
cmovns
dec
adc
or
cld
aaa
(bad)
sti
mov
pop
adc
aas
or
jo
jl
sar
int3
adc
fsubrp
out
add
sub
fimul
mov
mov
xchg
add
mov
fbstp
xchg
jnp
cmp
jmp
movs
data16
and
je
loopne
adc
xchg
jno
mov
sub
mov
push
mov
rep
mov
ds
xchg
xchg
sbb
pushf
mov
ficom
sub
in
pop
js
ja
fdiv
aam
pop
call
retf
cld
mov
outs
xchg
cli
xchg
fild
sahf
mov
push
and
js
ss
clc
and
push
dec
(bad)
std
pop
xchg
or
mov
fldl2t
mov
sub
sbb
movs
add
fs
lods
xchg
in
sub
cli
repnz
lock
(bad)
mov
lea
fbld
mov
cmps
scas
mov
jmp
inc
scas
loope
adc
in
mov
out
sub
push
(bad)
mov
dec
mov
rcr
in
pop
inc
push
sub
and
scas
sbb
std
mov
push
lock
cmps
mov
sbb
das
mov
mov
pusha
jno
(bad)
or
inc
sbb
push
jbe
iret
(bad)
pop
(bad)
adc
xor
outs
loopne
cmc
rol
test
push
test
sub
icebp
push
pop
jmp
xlat
mov
dec
xor
dec
or
adc
into
jae
xor
add
sub
mov
jne
cwde
push
mov
push
scas
outs
dec
dec
xchg
pusha
gs
popa
pushf
xor
push
je
cmp
ret
xchg
rcr
pop
mov
pop
repnz
movs
cmp
add
arpl
cdq
(bad)
stos
cmp
jmp
(bad)
(bad)
leave
scas
sub
push
test
mov
push
das
in
sub
xchg
inc
aad
push
xchg
scas
(bad)
dec
dec
(bad)
out
and
lds
std
push
cli
shr
mov
jae
inc
inc
sub
jmp
(bad)
not
add
outs
in
adc
ss
inc
mov
pop
dec
loop
int3
rcl
stos
(bad)
push
inc
xchg
jnp
bound
rcr
pop
cwde
stos
popa
adc
cmp
jo
add
pop
enter
(bad)
std
cmc
test
fadd
dec
mov
sub
mov
xchg
adc
mov
pop
fimul
inc
call
inc
retf
sti
daa
mov
xor
popf
fadd
jo
pop
fldz
fcom
sub
adc
xor
xchg
mov
jp
icebp
xchg
test
(bad)
test
aas
or
pushf
xor
das
sub
cdq
push
push
sbb
and
out
or
mov
xchg
add
fldcw
push
dec
push
jp
punpckhwd
sar
mov
jns
cmp
jp
imul
push
inc
jbe
pop
push
pop
add
(bad)
aad
cmp
lods
inc
pop
fbstp
inc
or
stos
retf
shl
dec
les
aas
sub
push
cmps
lods
xchg
inc
mov
or
xchg
inc
fs
shl
(bad)
mov
lods
inc
jne
sbb
shl
lods
xor
jo
addr16
pusha
and
test
sub
xchg
mov
push
dec
es
shl
fdivr
arpl
xorps
cmp
imul
inc
addr16
sub
(bad)
sub
cdq
push
int3
jmp
rol
in
fwait
xchg
jp
sub
test
test
sub
xchg
aas
adc
and
mov
lock
sahf
aam
fwait
sub
cmp
jmp
hlt
xchg
scas
jg
retf
cmps
out
adc
xor
aad
inc
pop
or
sahf
les
pop
cmp
pop
sbb
pop
inc
xchg
jo
aas
aam
arpl
xor
mov
cmp
lds
jle
inc
icebp
dec
lahf
js
out
out
aam
int3
and
(bad)
in
lahf
loopne
mov
xchg
mov
lds
fstp
add
iret
jecxz
sbb
movs
in
std
jge
add
daa
sbb
mov
mov
pop
inc
lock
aam
pop
(bad)
mov
cld
jb
cmps
les
retf
jbe
mov
xchg
jmp
or
rol
dec
lods
xchg
push
sahf
paddq
add
push
stc
dec
test
jge
xor
lods
stos
fist
push
sub
arpl
jge
mov
dec
sub
xchg
or
sahf
lock
fimul
std
xchg
ins
xor
mov
test
rol
adc
sbb
test
push
push
int3
outs
clc
cmp
xlat
mov
adc
sti
in
in
scas
push
inc
xchg
and
movs
ret
inc
jle
add
scas
xchg
mov
(bad)
jge
and
adc
xchg
sbb
in
out
sub
ror
sub
dec
mov
cli
pop
out
test
nop
xchg
and
out
cs
lea
xor
push
(bad)
push
push
adc
test
sub
inc
lods
xchg
retf
scas
ss
addr16
ja
push
(bad)
(bad)
sub
ret
sbb
pop
jno
(bad)
dec
fld
sbb
rol
shl
ins
test
push
add
shr
test
lods
xor
mov
sbb
pusha
es
and
call
push
cld
jns
scas
and
push
jnp
pusha
jb
fild
mov
cs
call
or
loope
shr
sub
or
bound
leave
inc
and
lods
push
(bad)
mov
xchg
xchg
xor
popa
pop
inc
fidiv
clc
inc
mov
test
cld
mov
call
fs
mov
cmp
(bad)
fld
mov
lods
cmp
cmp
(bad)
(bad)
pop
xchg
loope
movs
clc
or
mov
pop
sbb
jbe
xor
push
rep
xor
push
add
shr
mov
shr
stc
outs
or
cdq
cmps
in
push
cld
sbb
mov
stos
mov
push
ins
pop
imul
sbb
call
sub
call
sti
dec
popa
xor
dec
adc
leave
enter
pusha
not
dec
adc
mov
cmps
pop
push
mov
and
ror
sub
fdiv
push
je
xlat
test
into
add
mov
mov
or
inc
add
sub
cdq
jmp
je
inc
mov
mov
retf
jno
push
int
mov
lods
adc
sub
inc
push
xor
adc
(bad)
shl
aas
push
dec
fild
mov
cmp
and
mov
jg
call
(bad)
lods
jae
js
mov
push
sub
push
mov
stos
cmp
cmps
addr16
or
mov
(bad)
outs
ret
xchg
inc
les
leave
inc
fdivr
test
xor
in
stos
pop
fldenv
jge
xlat
(bad)
(bad)
jb
xor
ret
adc
push
in
(bad)
push
dec
repz
cmp
int
ss
adc
sub
or
mov
dec
and
repz
mov
out
loop
inc
lahf
frstor
inc
mov
cli
and
cmc
cmps
nop
xchg
pop
jg
dec
scas
pop
call
inc
ss
int
xchg
jmp
jns
jle
push
data16
cmps
inc
into
in
jge
pop
out
jb
div
sub
add
movs
cmp
das
repnz
in
test
add
add
and
mov
and
neg
sahf
loop
add
outs
pop
mov
xchg
pop
popa
inc
cld
stos
dec
inc
mov
mov
sahf
clc
mov
sub
push
cdq
and
out
das
fs
pop
loope
int3
fisttp
call
out
mov
mov
jp
xor
sbb
pop
es
push
repz
xor
pop
loopne
int
mov
jne
js
mov
push
in
sub
fadd
stos
inc
add
gs
test
jmp
xchg
outs
adc
jmp
sub
or
pop
mov
jg
jmp
pop
fs
int3
(bad)
test
add
add
aad
inc
pop
push
xchg
mov
sbb
sub
pusha
dec
fadd
add
sbb
and
mov
out
mov
sub
inc
inc
mov
jb
inc
jbe
mov
outs
in
dec
and
sub
xor
fcomp
xor
rcl
push
mov
outs
sub
pop
dec
add
pop
movs
cmp
jmp
cmp
fnstcw
sbb
movs
jle
in
popa
bound
push
jmp
es
mov
jge
fbstp
cmp
(bad)
das
cmp
mov
add
dec
cdq
imul
xchg
not
xor
lods
out
mov
add
lahf
hlt
lods
pop
out
adc
xor
jno
out
adc
xchg
push
repz
cdq
xchg
xchg
test
js
jae
push
sub
les
sahf
xor
repnz
push
gs
scas
inc
xor
mov
inc
pushf
xor
pop
or
or
retf
mov
add
and
adc
rcl
lds
sub
or
sub
pop
mov
mov
out
cmp
lods
inc
repz
(bad)
sub
cmp
cmp
adc
push
out
pmaxsw
popf
and
push
outs
dec
popa
imul
ins
fnsave
leave
add
icebp
loop
icebp
jecxz
xor
fdiv
or
ror
add
scas
cdq
loope
ror
aam
retf
adc
xchg
loop
bound
sahf
or
sbb
mov
mov
adc
test
cmp
test
ins
add
dec
arpl
jb
sub
lock
cmp
pop
dec
and
jge
jl
mov
loopne
mov
xor
stos
out
xchg
in
push
xchg
jmp
pusha
adc
jg
je
pop
dec
jmp
mov
push
out
in
jo
mov
in
push
or
les
add
pop
cli
adc
outs
push
frstor
into
xchg
pop
mov
inc
pop
je
adc
out
or
pop
push
mov
imul
icebp
adc
mov
or
cmps
into
push
ret
pop
mov
or
daa
daa
mov
retf
pop
mov
pop
mov
imul
sbb
push
adc
jl
push
inc
mov
and
xor
or
inc
pop
inc
xor
sbb
sub
in
(bad)
mov
pushf
inc
pushf
not
inc
jecxz
jmp
inc
mov
ins
mov
jecxz
mov
jb
cmps
mov
out
pop
cmp
adc
sub
sbb
jns
les
test
xchg
push
lds
in
pop
mov
or
cld
lahf
xor
pop
daa
ret
push
loope
(bad)
push
test
jg
sub
mov
int3
adc
fnstsw
adc
add
xchg
pop
mov
movs
das
std
enter
nop
mov
sub
jae
dec
sbb
sbb
lahf
pop
mul
hlt
mov
int3
repnz
xor
fwait
mov
mov
pop
gs
pop
(bad)
sti
nop
rcr
ss
jg
sbb
jmp
mov
pop
sub
(bad)
sbb
add
bound
sub
repnz
std
cmp
gs
push
mov
cmc
mov
and
ja
pop
adc
xchg
or
jge
call
push
imul
add
inc
dec
lods
in
add
push
or
jmp
aas
arpl
mov
and
in
stc
mov
leave
mov
fnstsw
pop
ret
ret
rol
dec
repnz
and
lock
ins
loop
jne
xchg
add
icebp
mov
mov
push
movs
cld
lods
mov
out
dec
inc
icebp
mov
push
pop
jno
cmp
lods
mov
adc
mov
stos
in
push
pusha
dec
call
cmc
sti
test
sub
xchg
arpl
int
jns
and
push
and
ficomp
xor
std
adc
mov
js
cmp
xor
daa
fs
xchg
pusha
pop
push
jne
jns
cwde
cdq
push
pop
retf
sbb
mov
adc
pop
cmp
scas
adc
push
add
pushf
das
cdq
(bad)
mov
fadd
lods
xor
cld
xchg
jle
in
jge
xchg
in
test
xchg
or
cmps
stc
retf
fs
push
stos
jge
(bad)
aad
xor
dec
std
or
add
jmp
xchg
gs
ja
cwde
dec
lods
pusha
and
mov
imul
adc
dec
data16
adc
popf
or
xor
into
sbb
push
mov
cmp
call
and
mov
mov
scas
std
addr16
pusha
inc
cmp
push
or
push
jge
push
adc
loopne
imul
pop
mov
scas
fwait
xor
cmp
loopne
sbb
hlt
mov
sbb
push
(bad)
xchg
aaa
or
cld
or
mov
jbe
mov
or
jle
pop
pop
push
test
cs
repz
les
test
adc
jle
and
int
data16
fcmovne
popa
(bad)
js
lds
or
pop
and
clc
jmp
jmp
push
mov
sub
mov
(bad)
mov
xor
ins
xor
sub
fsub
movs
inc
aam
stos
cmp
or
add
rcr
xchg
ins
les
or
jl
fwait
lods
stc
mov
call
mov
cmps
dec
adc
sub
jl
ds
imul
jns
push
push
inc
fwait
sub
das
mov
int
dec
sti
imul
jae
(bad)
jbe
mov
xor
sub
fdiv
icebp
push
lods
xlat
pop
out
(bad)
sbb
adc
push
adc
mov
cmp
pop
adc
les
je
test
in
popf
dec
jmp
fld
fldenv
mov
dec
sub
cmp
lods
sub
pop
fimul
pop
sbb
mov
leave
daa
and
pop
das
sbb
pusha
mov
adc
pop
inc
cmc
xor
add
std
cmps
fwait
push
test
loope
loopne
sti
in
cld
enter
ret
pop
pop
mov
cdq
jp
mov
mov
cmp
stc
arpl
repz
jnp
fcomp
outs
sbb
pop
mov
test
test
or
outs
and
(bad)
cmp
xor
pop
sbb
sub
mov
sbb
mov
add
or
popa
sbb
mov
mov
fidiv
sub
push
mov
lods
cmp
or
xchg
add
dec
movs
jmp
inc
out
mov
pop
xor
hlt
movs
or
cmp
gs
jmp
ins
jg
xchg
pop
sbb
or
cmp
mov
xor
in
sti
cwde
dec
cmp
jle
xor
lds
ret
fbld
scas
inc
daa
mov
adc
fidiv
lea
lahf
pop
inc
mov
(bad)
cmp
loopne
imul
fwait
cld
cmps
in
jp
add
and
ja
and
xchg
mov
sub
dec
clc
jb
in
dec
adc
fwait
jbe
ja
dec
out
repz
loop
pop
or
xchg
js
add
mov
cmc
mov
out
mov
pushf
sar
or
aam
adc
daa
js
jb
pop
mov
loopne
fimul
jne
inc
retf
lds
mov
push
js
push
xchg
and
repnz
dec
jo
xor
test
pop
je
stc
mov
dec
cmp
adc
adc
push
sub
retf
hlt
sbb
sub
xchg
(bad)
or
mov
jbe
jne
xor
xor
add
xchg
and
je
pushf
push
enter
stc
nop
adc
cmp
cld
push
dec
push
inc
(bad)
std
pop
aad
lods
pop
ja
sbb
daa
cmp
pop
ret
(bad)
push
push
sub
pop
dec
inc
out
inc
aaa
daa
sbb
fwait
sahf
and
popf
int
mov
xchg
mov
pop
xchg
pop
cmp
sti
sbb
xchg
jl
add
call
pop
es
into
pop
cmp
dec
inc
and
aas
bound
inc
dec
lock
dec
out
lea
mov
imul
push
mov
call
sub
and
mov
call
or
pop
sub
call
inc
jp
fwait
icebp
clc
movs
stos
(bad)
sbb
dec
setp
(bad)
jecxz
out
xor
mov
xchg
or
xor
mov
adc
xor
in
sub
jnp
xchg
add
sbb
out
push
std
xchg
jp
loopne
(bad)
outs
add
push
sbb
(bad)
jg
out
stos
cmp
clc
sbb
xchg
rcl
fadd
jl
inc
inc
fist
xchg
pop
fstp
cdq
stos
ficom
xchg
rcl
sti
add
push
xchg
(bad)
frstor
scas
lahf
xchg
aad
popa
sub
push
and
xchg
cmp
mov
mov
dec
dec
mov
push
pop
dec
(bad)
jle
add
call
test
enter
mov
cmc
in
cwde
jmp
fisttp
setnp
inc
stos
outs
sub
sub
fistp
lds
in
retf
mov
dec
jnp
ins
push
(bad)
hlt
push
sbb
inc
adc
adc
push
add
add
add
in
pop
xor
mov
ror
mov
mov
stos
outs
fxch
cmc
test
xlat
xchg
popa
out
sbb
arpl
mov
fs
sub
frstor
xchg
cmps
jnp
mov
movs
imul
push
loopne
jae
andnps
mov
ss
push
cs
cmp
pop
dec
mov
fisub
mov
xchg
jne
lds
ss
adc
aaa
jne
stc
sub
xor
(bad)
mov
fwait
sbb
test
push
and
pushf
mov
int3
jne
add
(bad)
dec
nop
push
loopne
mov
dec
and
aaa
xor
test
xchg
jge
ins
mov
cmp
shl
dec
cmp
sbb
imul
push
sbb
adc
mov
mov
inc
sub
dec
je
jmp
xor
jge
ficom
lods
jo
int
mov
test
cs
pusha
dec
jae
cwde
sti
test
adc
in
sahf
fwait
mov
add
mov
ret
mov
jle
mov
scas
push
mov
lock
sbb
std
mov
in
aam
lods
cmp
jnp
cmc
or
bound
push
cwde
cmps
cmp
and
mov
cmova
xchg
je
push
mov
out
adc
mov
dec
push
adc
rcl
xchg
aad
push
sub
je
xchg
cmp
imul
add
fsubp
rol
out
or
out
sub
cld
jmp
mov
test
inc
adc
sub
data16
repz
mov
cwde
dec
aaa
fnstsw
addr16
pusha
pop
sub
mov
int
stc
ss
out
aam
sbb
fst
in
sbb
ds
adc
js
jns
aad
aas
and
fsub
sahf
pop
push
xor
sahf
into
or
sbb
clc
push
xchg
pop
(bad)
jp
dec
jl
and
push
fisttp
cdq
push
call
xchg
jle
popf
pop
fist
xor
lods
inc
(bad)
jo
sub
push
adc
and
aaa
imul
jns
fs
mov
xchg
js
mov
shl
adc
call
in
mov
inc
int3
dec
or
sbb
sub
pop
pop
fld
adc
call
mov
xor
aas
(bad)
mov
inc
jmp
dec
cli
in
paddq
test
xor
xchg
icebp
fcomi
mov
popa
xor
test
xor
mov
cmps
ja
aam
cwde
jo
mov
cmps
or
push
lds
mov
and
xor
sub
pusha
mov
push
cmp
or
mov
loope
jecxz
or
inc
inc
pushf
dec
mov
retf
out
xor
nop
cs
ss
sub
(bad)
loopne
sub
hlt
inc
ins
sti
cmp
mov
lea
mov
cdq
sbb
adc
add
jbe
and
sbb
and
mov
jns
xchg
mov
sub
push
pop
cld
arpl
imul
xchg
stc
lahf
cwde
call
fmul
add
repz
jne
xchg
and
inc
add
push
mov
cli
mov
xchg
ret
outs
dec
pop
nop
push
hlt
les
into
ror
sbb
sbb
xor
neg
pop
fbld
hlt
sbb
imul
cmc
jmp
lahf
xchg
adc
stos
push
hlt
jns
out
pop
lea
cmps
push
gs
inc
push
lea
stos
add
jae
not
xchg
outs
adc
nop
sbb
sbb
xor
in
push
sub
cld
pop
push
fwait
mov
push
mov
dec
mov
ds
sbb
outs
xchg
ins
(bad)
loopne
loopne
fidiv
xchg
add
xchg
jns
mov
mov
adc
clc
sbb
mov
xchg
add
sub
ins
sub
push
(bad)
ja
ins
(bad)
call
jmp
cdq
jg
mov
into
adc
jo
add
jbe
add
push
adc
inc
mov
int3
mov
aas
mov
or
push
push
(bad)
xchg
(bad)
shr
dec
cmp
ja
stc
aaa
or
mov
mov
leave
xor
inc
aam
pop
lock
popa
ins
xor
push
pop
adc
cmps
retf
adc
pusha
pop
mov
xchg
pop
test
cli
sti
push
sar
or
push
(bad)
pusha
and
clc
mov
xchg
push
mov
(bad)
shl
ror
leave
stos
lods
add
xor
loopne
aad
adc
retf
jbe
test
pop
inc
bound
pop
push
and
(bad)
cmp
fld
lea
fisub
iret
push
dec
or
pop
je
jmp
and
jge
and
dec
in
ret
push
iret
fadd
dec
(bad)
or
mov
cs
sbb
loopne
(bad)
das
out
cmp
cmp
leave
add
cmp
add
xchg
xor
mov
inc
out
inc
xor
(bad)
push
and
fsubr
repnz
ret
scas
sub
xor
cmp
add
ret
push
mov
aad
or
into
and
popa
ficom
or
mov
loop
cdq
push
push
sahf
ret
mov
xchg
jno
lock
sbb
push
sbb
xchg
ror
sahf
(bad)
gs
pop
and
xlat
adc
fild
cmps
call
out
xlat
dec
ja
neg
hlt
xor
in
scas
xchg
(bad)
mov
pop
popf
adc
aad
repz
xchg
add
data16
pop
nop
push
sbb
arpl
outs
mov
ficomp
or
iret
call
in
sub
jecxz
mov
lods
push
pop
dec
out
xchg
sub
aas
add
jmp
in
mov
jmp
cmp
daa
test
jecxz
nop
mov
jns
rol
ret
jecxz
cmps
and
cmps
pushf
fidiv
ins
jo
ss
xchg
pop
xor
mov
jmp
xor
in
push
mov
push
cdq
imul
jl
repz
movs
dec
dec
cmp
jo
add
mov
out
pushf
mov
out
dec
pop
jbe
push
fbstp
(bad)
jmp
or
mov
mov
jmp
inc
and
enter
jnp
xchg
push
xchg
fist
sub
lds
push
jmp
shl
ret
out
test
jno
adc
outs
push
jl
test
dec
shl
push
jp
mov
fsubr
push
jecxz
xor
sahf
push
jg
mov
pushf
pop
cmps
les
add
pop
or
mov
gs
out
movs
jecxz
mov
mov
out
mov
mov
in
sbb
sbb
dec
jmp
xlat
add
push
ret
mov
(bad)
fstp
or
inc
and
icebp
pop
rcr
daa
xchg
cmp
jmp
ret
dec
xchg
popa
jb
mov
mov
rol
cmp
sub
adc
mov
push
pop
enter
psubsb
out
pusha
push
push
xchg
push
mov
fidiv
pop
jo
(bad)
jle
loope
mov
fwait
pop
mov
addr16
inc
movs
rcr
pop
dec
sub
pop
mov
jno
and
aam
ins
ror
jecxz
popf
popf
mov
cs
iret
inc
pop
sub
paddsb
jnp
xchg
ins
pop
fistp
pop
lds
mov
pushf
sahf
int3
jno
xchg
jb
dec
cmp
cmc
nop
or
or
clc
sbb
mov
and
test
dec
out
mov
add
nop
int
les
jl
scas
or
js
jg
cmc
test
sub
push
imul
div
(bad)
cmps
add
int3
pushf
cmps
les
retf
and
and
jmp
inc
jnp
stos
jmp
jecxz
push
xchg
and
jb
je
dec
xor
mov
sub
push
jmp
dec
fcomp
add
pop
pop
adc
sahf
daa
ins
mov
dec
push
repz
adc
iret
call
mov
scas
xor
ret
jecxz
and
pop
add
data16
adc
jmp
fiadd
push
adc
and
sbb
call
dec
push
mov
sub
sub
push
mov
shl
mov
jno
dec
bound
jo
xchg
aas
or
test
jle
and
sub
pop
cmp
ret
fst
out
cmp
data16
xchg
outs
jg
mov
cli
add
adc
sbb
adc
repz
fdivr
jmp
fist
sbb
(bad)
jmp
push
sbb
in
inc
xchg
jmp
dec
retf
cmc
jbe
jb
ds
daa
nop
stos
mov
ror
adc
dec
mov
sub
frstor
retf
scas
cli
mov
adc
sbb
add
or
je
cli
pop
cld
adc
xchg
test
aas
or
in
jge
pushf
inc
push
jecxz
cmp
jmp
jae
fist
(bad)
(bad)
(bad)
ror
aaa
loop
or
ja
(bad)
test
ror
clc
sbb
push
adc
pop
mov
stc
or
cmc
xlat
stos
mov
inc
jg
imul
mov
jge
jg
out
aaa
rcl
add
mov
or
push
inc
arpl
push
xchg
sahf
add
mov
pushf
sub
mov
jnp
mov
je
idiv
lea
pop
push
adc
test
fcomp
inc
jg
cmc
call
mov
ret
xchg
inc
xchg
gs
inc
mov
adc
and
fs
retf
frstor
js
scas
inc
mov
outs
into
test
fucom
and
mov
mov
aam
in
xchg
cwde
mov
rcr
or
sbb
repnz
stc
push
sbb
loope
sar
ins
dec
dec
ins
push
sub
xor
outs
mov
xor
mov
and
imul
cmps
sub
xor
ins
stc
jae
movs
jae
test
jge
fwait
outs
and
jmp
aad
sbb
sub
xor
test
out
inc
xchg
xchg
pop
pop
stos
popa
or
lock
test
out
jmp
inc
cmp
cld
pusha
fld
cmps
or
sar
(bad)
addr16
push
or
sbb
dec
test
sub
aaa
push
mov
jne
add
push
(bad)
inc
jmp
ror
add
out
sub
mov
sub
mov
shl
call
inc
mov
add
(bad)
ja
gs
cmp
std
jmp
jecxz
dec
and
rcr
out
cmc
add
or
or
add
and
hlt
cmp
jecxz
xchg
shr
mov
stc
adc
(bad)
mov
add
jl
lock
sbb
inc
fimul
xchg
ftst
add
aaa
xor
sub
pop
jp
test
ss
add
je
or
dec
hlt
xor
sbb
daa
outs
neg
sti
ss
ficomp
ss
and
mov
fldcw
adc
aad
add
adc
retf
or
retf
and
push
inc
mov
pop
ficom
movs
xchg
(bad)
mov
mov
(bad)
sbb
adc
jg
sub
inc
pop
pop
mov
test
xchg
xor
or
loope
adc
push
aaa
popfw
mov
ret
sbb
jmp
add
sub
pop
movs
or
add
xor
rcr
or
mov
pop
daa
(bad)
jle
inc
popf
shl
push
cmp
push
rcr
ins
int
sub
into
jg
sbb
sub
xchg
test
fdivrp
lods
add
inc
push
and
sub
mov
xor
popa
dec
jno
pop
call
inc
stos
outs
xchg
dec
jo
(bad)
inc
(bad)
push
mov
push
arpl
ss
clc
sbb
pop
ins
pop
dec
bound
jle
sahf
ja
xchg
fild
mov
cmps
jb
mov
mov
mov
mov
mov
pushf
iret
pop
and
sub
stos
sbb
jecxz
sbb
call
pushf
test
jnp
adc
push
sub
in
or
jle
dec
mov
or
aaa
push
aas
xor
fs
add
mov
push
mov
jno
jmp
and
push
movs
(bad)
jb
xchg
inc
xchg
xor
pusha
mov
or
inc
popa
sbb
cmp
sbb
sbb
sub
ret
add
mov
sub
inc
xor
mov
enter
add
outs
xchg
jg
jns
loopne
add
ret
das
ss
(bad)
mov
outs
mov
add
add
or
ja
sub
repz
dec
daa
or
dec
push
loop
stos
dec
mov
add
push
mov
bound
push
and
sbb
jle
jnp
test
push
jno
push
getsec
jle
sbb
mov
jbe
adc
out
rdtsc
sbb
test
or
fcom
shr
pop
pop
lds
cld
dec
adc
sub
retf
jle
push
adc
scas
ret
mov
fs
jl
add
xor
pop
xchg
ds
iret
mov
cs
jmp
inc
call
add
pop
pop
sub
push
and
xor
dec
jo
xchg
mov
outs
fimul
inc
iret
pop
cli
adc
fst
push
mov
div
int3
add
test
pusha
ret
adc
pop
mov
in
ja
es
sub
clc
test
ss
xchg
pop
mov
lahf
cmp
jmp
inc
rcr
cmp
pop
xor
mov
pop
and
fadd
push
neg
movs
test
cmc
test
lods
jo
jl
(bad)
mov
(bad)
jmp
adc
jmp
mov
xor
mov
push
mov
aam
(bad)
lock
jecxz
push
pop
dec
xor
or
in
in
adc
mov
arpl
jae
dec
inc
or
ss
sbb
lock
loop
mov
lahf
retf
mov
cmp
pop
das
js
enter
mov
test
xor
cs
inc
and
jb
jl
and
xchg
sbb
cmp
rol
jg
(bad)
popf
jno
sar
adc
in
arpl
mov
leave
jp
jo
mov
and
jle
cmps
mov
adc
push
jp
nop
call
out
fisttp
das
neg
fdivr
out
test
arpl
mov
sbb
mov
sbb
js
inc
repnz
xchg
sbb
pop
out
mov
jecxz
div
mov
pop
cmp
pop
dec
cli
inc
dec
int3
loope
jge
popa
xchg
pushf
fild
pop
push
div
xor
sbb
and
jnp
repz
into
or
aad
es
xchg
(bad)
leave
xchg
sub
retf
jnp
jbe
mov
push
jp
push
xor
popa
or
sub
jmp
jmp
sbb
je
dec
imul
mov
inc
add
adc
cmp
inc
(bad)
mov
mov
les
sub
jmp
ret
out
cmp
xor
(bad)
dec
aaa
retf
shl
scas
dec
push
fsubrp
fwait
fs
push
jmp
mov
mov
xchg
gs
pop
retf
aad
out
fisttp
jns
inc
adc
push
icebp
add
mov
xchg
inc
out
mov
sub
into
push
aam
push
outs
data16
push
ret
test
pop
push
out
aas
pop
ret
sub
push
aad
mov
cmc
sub
lods
mov
daa
jno
(bad)
mov
mov
pop
or
adc
movs
push
(bad)
aas
and
dec
icebp
test
xchg
cli
aam
mov
and
inc
fwait
cmp
(bad)
jns
mov
xchg
sbb
sub
add
mov
test
test
popa
add
cwde
pop
xchg
cmps
in
in
cs
daa
movs
mov
xchg
xchg
sbb
ss
fistp
leave
(bad)
xchg
std
test
scas
pop
adc
or
push
mov
idiv
sub
or
jp
retf
lods
cld
mov
push
adc
test
call
jb
and
enter
mov
push
lds
cmp
jne
xchg
mov
test
hlt
outs
xlat
mov
sub
xor
popa
lods
call
int3
inc
imul
sub
aad
jne
int3
or
fs
sbb
cs
jmp
sbb
ins
lea
mov
sub
sub
mov
mov
sub
add
cmps
jmp
push
xor
jmp
icebp
pop
stos
mov
mov
test
mov
push
bound
std
setne
loop
cmp
std
mov
mov
jbe
cmps
push
test
fs
push
mov
nop
and
test
xor
xlat
xor
pop
ror
gs
retf
adc
cmps
dec
jg
xchg
es
mov
mov
adc
jb
sub
and
fwait
call
lods
mov
fidivr
sbb
in
test
push
jp
pop
push
dec
dec
rol
adc
cmps
push
(bad)
push
xchg
cmp
ins
sub
sbb
fsub
outs
fld
xor
das
mov
cmp
pushf
bound
mov
mov
jmp
scas
or
xchg
dec
dec
inc
inc
sahf
xor
push
xor
aam
lods
cmp
sar
mov
pop
mov
ret
mov
sbb
jae
xchg
inc
cmp
lea
(bad)
sbb
mov
mov
fsub
sub
fnstsw
shl
fistp
pop
sub
shl
not
les
or
std
movs
cmp
pop
jbe
ss
in
(bad)
adc
adc
(bad)
hlt
mov
inc
adc
add
into
addr16
push
iret
mov
fisttp
pop
icebp
mov
push
pop
iret
adc
add
movs
dec
inc
(bad)
movs
stc
(bad)
or
es
sub
ret
cmp
inc
fldenv
div
mov
add
mov
add
pop
xchg
mov
ret
add
add
adc
xor
sbb
push
das
cmp
out
inc
(bad)
or
jge
cmp
adc
pushf
push
mov
lods
inc
mov
adc
fisubr
ins
leave
retf
jge
(bad)
lock
adc
push
stos
cmp
scas
add
mov
cmps
mov
jae
lds
pusha
sahf
es
jbe
xchg
test
add
bound
sbb
fcom
fiadd
and
jnp
mov
(bad)
arpl
aaa
retf
sub
(bad)
das
or
sbb
jb
adc
cmp
mov
test
and
mov
xor
adc
rol
movups
loop
sub
pop
enter
imul
xor
adc
ror
(bad)
hlt
push
out
mov
xchg
sahf
add
mov
or
sbb
test
retf
iret
out
xchg
movs
imul
pushf
adc
test
imul
adc
xchg
add
cmp
test
xor
pusha
pop
nop
imul
ss
xor
xchg
loopne
sub
pop
jbe
fmul
out
adc
dec
add
test
jmp
addr16
lods
lods
nop
or
std
(bad)
pop
push
mov
test
aad
imul
adc
add
pop
or
into
aaa
pop
cmp
mov
aam
xchg
popa
div
imul
fs
movs
retf
sub
es
shl
inc
int
jmp
push
outs
and
retf
sti
sbb
lock
retf
and
mov
and
out
out
mov
mov
adc
popf
or
cmp
outs
inc
xchg
or
int
mov
mov
aas
std
push
fiadd
mov
inc
jno
adc
mov
jae
scas
adc
shl
adc
add
jmp
icebp
or
dec
and
imul
lock
add
outs
pop
mov
or
mov
dec
pusha
push
push
inc
mov
xchg
inc
cmp
aad
pop
outs
out
xchg
cmp
ins
in
loope
add
fisttp
jmp
lahf
cli
mov
fidivr
mov
jp
jne
into
inc
out
enter
xor
sar
xchg
mov
cmp
jg
es
mov
cmps
xor
xchg
imul
push
addr16
js
inc
jbe
ud1
cmp
out
std
xor
sbb
push
push
icebp
test
shl
or
xchg
(bad)
cmps
dec
std
dec
data16
xor
test
fld
xchg
add
pusha
xchg
fild
sbb
xor
ss
mov
repz
lods
xchg
or
cmp
stos
or
mov
mov
add
imul
or
mov
(bad)
pusha
sub
test
mov
in
and
loope
fcmovne
jecxz
pusha
mov
es
or
dec
imul
arpl
das
(bad)
into
adc
inc
fstp
retf
and
stos
push
cmps
arpl
inc
or
std
add
or
adc
scas
xor
jns
mov
xor
(bad)
xchg
sub
pop
clc
mov
enter
ds
jg
sahf
shr
out
dec
loopne
inc
gs
sub
ds
dec
dec
mov
and
mov
bound
lock
dec
(bad)
in
mov
ins
fwait
test
call
add
mov
jg
cmp
jmp
fadd
sub
push
push
in
scas
sub
xchg
imul
xor
sub
je
pop
je
jbe
dec
clc
shl
inc
xor
mov
jmp
mov
dec
mov
lahf
repnz
jecxz
jae
sahf
jnp
stos
rol
lods
into
jle
xor
lods
add
cmp
cmps
adc
jmp
addr16
in
scas
adc
adc
inc
(bad)
aas
lahf
idiv
pop
jp
dec
arpl
sub
in
adc
jp
mov
(bad)
icebp
cs
xor
(bad)
shr
jno
dec
jo
fsub
les
cli
inc
push
(bad)
dec
cli
jb
pop
dec
sub
in
jne
call
popf
in
mov
fsubr
ins
mov
mov
ins
sub
mov
or
pushf
mov
nop
xlat
pop
xchg
push
add
cli
mov
das
fdiv
pop
push
and
push
rol
(bad)
retf
repnz
test
test
lods
aam
xchg
test
stos
clc
call
(bad)
std
div
mov
popf
ss
pop
les
mov
cmp
xchg
(bad)
mov
fmul
and
sub
dec
movs
(bad)
fdiv
sub
sar
sub
xchg
es
mov
cs
mov
jno
xor
mov
dec
xchg
dec
je
dec
and
dec
loopne
add
enter
xor
jae
test
jge
push
ins
mov
jmp
pop
mov
push
pop
popf
fiadd
mov
and
ror
push
mov
jbe
sbb
sub
pop
xchg
je
push
add
addr16
rcl
imul
jle
inc
pop
scas
fild
inc
dec
leave
cdq
aad
or
js
pop
inc
dec
and
frstor
shr
sub
inc
add
les
sub
add
std
hlt
arpl
add
(bad)
outs
loope
sbb
fsubr
fiadd
(bad)
mov
dec
pushf
mov
sar
cdq
out
gs
cs
xchg
pop
and
retf
lea
cmps
mov
cwde
je
push
or
xchg
xor
nop
cmps
bound
and
pop
lds
cmp
stos
ins
and
sub
mov
dec
mov
ficomp
mov
cli
cmp
ja
in
xchg
push
(bad)
in
mov
pushf
gs
pop
ins
and
outs
xchg
movs
inc
addr16
adc
cdq
aad
out
jb
out
imul
sar
push
cwde
or
fcmovu
inc
(bad)
mov
fwait
scas
stos
test
cmps
iret
test
popa
mov
mov
dec
inc
idiv
not
mov
jae
or
daa
push
inc
or
ror
cmp
sbb
adc
sbb
rol
in
sub
push
fdiv
mov
cli
pusha
sub
addr16
stc
xor
ss
ins
pop
jbe
cs
dec
lods
ret
rdmsr
ja
test
mov
xchg
inc
test
mov
mov
jge
dec
ins
in
sbb
popf
mov
xchg
pop
ins
out
fidiv
sub
(bad)
mov
int
popf
sbb
sbb
stos
cli
mov
out
mov
inc
test
or
jmp
(bad)
add
scas
xor
adc
in
loopne
pop
cmp
or
xlat
aam
add
dec
jnp
jp
pop
sub
enter
inc
pop
aas
lods
or
test
push
dec
out
inc
and
dec
dec
pop
stos
in
lds
je
add
sub
xor
xor
push
lods
icebp
adc
mov
jo
sub
dec
aas
sbb
pusha
rcl
mov
mov
call
mov
push
sbb
jg
xor
aaa
dec
pushf
adc
scas
xor
cmps
cmp
xchg
sub
out
pop
inc
add
int3
push
adc
pop
fnstcw
push
int3
push
shl
add
mov
pop
lea
loopne
jns
iret
stos
inc
data16
dec
dec
into
mov
add
dec
push
repz
jno
mov
imul
cmps
and
dec
cmps
mov
xor
and
xlat
ud1
aaa
fcmovne
xchg
or
clc
popf
mov
mov
sti
mov
movs
sbb
fdivr
sub
sbb
pop
retf
mov
mov
aaa
pop
lods
into
xchg
jnp
inc
dec
adc
cdq
add
mov
popa
sbb
pop
sub
idiv
ins
ficomp
dec
push
jae
call
add
ror
std
es
jb
aad
in
lds
mov
ins
std
dec
movs
ds
and
loop
inc
imul
icebp
and
jl
push
lea
push
xchg
fisttp
shl
ss
fistp
sbb
fcomi
leave
ja
push
xchg
rcl
cmp
jle
movs
pop
loop
push
leave
inc
ret
lahf
pusha
into
gs
xor
xor
or
test
pop
jg
and
jae
or
xchg
sbb
jmp
out
and
lock
rcl
sahf
sbb
lea
jnp
stos
test
test
jle
ins
data16
cld
sbb
ss
pop
daa
sbb
sbb
mov
call
mov
gs
stc
mov
(bad)
cdq
dec
and
stos
(bad)
xchg
fucom
cmp
add
push
xor
jmp
adc
in
imul
fild
movs
cmp
jns
cs
push
test
les
mov
dec
js
mov
xor
in
popa
adc
mov
jmp
call
lods
xchg
in
ds
and
and
sbb
cmp
xchg
cmp
mov
pusha
xchg
xor
sub
sbb
mov
enter
aad
sub
jmp
add
mov
out
add
sub
shl
push
gs
push
pop
pop
repnz
push
hlt
arpl
jle
jle
outs
not
push
dec
mov
and
sub
clc
xchg
sub
icebp
mov
(bad)
jb
mov
xchg
mov
dec
add
mov
jp
test
mov
lea
xchg
add
push
adc
push
test
je
out
push
out
cwde
lods
imul
mov
jbe
cmp
cmp
mov
pop
aas
rcl
xchg
xchg
enter
je
pop
cmp
and
movs
push
cmc
adc
das
fiadd
ss
mov
jecxz
movs
jne
add
or
mov
cmp
js
or
aas
mov
jne
jo
(bad)
mov
aaa
sar
ficomp
ja
cmps
xchg
lock
pop
loop
push
xor
std
xor
call
repz
in
mov
std
xor
movs
sub
push
fwait
push
xlat
xor
jecxz
cdq
dec
dec
fs
sbb
dec
and
(bad)
aam
mov
add
mov
push
in
ja
in
cdq
cmp
sbb
sub
mov
xor
sbb
cmps
dec
sub
mov
popa
dec
stos
ret
push
scas
aaa
test
or
jbe
cmps
push
fild
fsub
mov
lea
jne
cdq
mov
rcl
inc
lds
sbb
gs
adc
adc
cmp
addr16
fst
pusha
(bad)
fwait
mov
dec
push
jecxz
fcmovu
mov
lahf
daa
push
xchg
leave
cmp
test
ins
cmp
xlat
jne
ret
xor
sub
inc
aaa
mov
bound
add
push
mov
jne
jle
fsub
xchg
ss
ja
shl
es
ins
mov
inc
es
adc
push
frstor
ret
cmp
push
jae
sbb
movs
data16
rcr
xor
and
out
ins
mov
dec
sbb
repnz
in
pop
push
jecxz
wbinvd
inc
jmp
sbb
add
out
ins
or
cmp
push
jmp
scas
push
js
jne
sbb
push
or
in
(bad)
ja
ds
dec
int
retf
pop
jmp
mov
dec
add
pop
cmps
aad
les
mov
iret
popf
bound
push
retf
cld
pop
push
loop
and
ins
mov
dec
pop
cli
add
and
xchg
out
push
aas
adc
pop
popa
mov
xor
bound
rol
cs
cld
out
push
xchg
inc
xchg
push
les
xchg
sub
inc
in
push
lock
add
dec
addr16
push
push
inc
nop
xchg
add
xchg
add
test
loop
loopne
fdiv
movs
sbb
mov
adc
xchg
movs
lods
stc
mov
call
inc
enter
add
adc
and
pushf
adc
pop
inc
hlt
mov
in
adc
cmp
sbb
das
sub
pop
pop
xchg
popf
pop
ret
int3
mov
push
test
jae
add
mov
fstp
sub
jns
cmps
(bad)
xchg
mov
mov
inc
inc
push
jecxz
fst
xor
sub
sub
(bad)
pop
stc
jecxz
lea
outs
mov
shr
pop
xchg
lods
jl
inc
out
add
push
push
(bad)
fstp
xor
push
test
jae
mov
inc
mov
mov
xchg
pushf
cli
xchg
dec
leave
pop
gs
int
rcr
mov
or
push
adc
push
mov
int
inc
out
in
loopne
mov
imul
push
jg
sti
in
addr16
dec
mov
pop
jecxz
into
adc
sar
movs
inc
cmp
jle
fsubr
movs
ins
pop
jnp
xlat
lock
sti
icebp
scas
sar
pop
(bad)
je
jmp
ins
and
add
rcl
sbb
or
jbe
mov
loopne
mov
push
mov
fistp
pop
je
loop
or
leave
mov
retf
and
dec
push
mov
mov
pop
add
pop
add
mov
call
dec
movs
inc
fldenv
xor
lea
aas
mov
adc
out
fs
xor
inc
(bad)
ucomiss
iret
add
push
xchg
dec
adc
sbb
aas
ror
jmp
xor
mov
sub
out
mov
mov
inc
rep
fst
inc
out
mov
jmp
sub
(bad)
in
mov
add
xchg
pop
pop
jno
pop
leave
dec
sub
push
and
fisttp
or
add
ins
loopne
xchg
(bad)
jmp
(bad)
clc
push
movs
inc
cli
or
adc
mov
or
mov
lods
xchg
stc
inc
daa
ret
and
aad
(bad)
adc
cwde
pushf
mov
lods
into
or
sbb
pop
retf
ret
in
lods
aaa
xor
shl
in
adc
cwde
mov
cmp
outs
mov
xlat
retf
adc
arpl
inc
gs
cld
pop
sub
mov
inc
stc
or
mov
push
jl
lds
lds
js
sub
(bad)
aaa
loop
xlat
hlt
adc
dec
aad
adc
xor
mov
ds
in
mov
stos
pop
xchg
sub
outs
adc
add
arpl
(bad)
out
pusha
sbb
(bad)
xchg
out
in
adc
arpl
ficom
loope
add
shl
test
push
clc
mov
mov
gs
jmp
add
div
mov
xchg
xchg
int
arpl
movs
out
sub
mov
ins
mov
pop
dec
pusha
in
lock
adc
xchg
fdivr
and
call
or
cmp
xor
cmp
adc
dec
fwait
and
fnsave
jo
pop
sub
add
add
cmc
test
jo
dec
stos
in
sbb
rol
jo
sub
fnstcw
sub
in
lock
mov
bswap
cmp
and
jp
adc
ret
pop
add
les
jmp
in
aam
pusha
fild
xor
push
shr
dec
mov
std
or
movs
mov
leave
sbb
adc
(bad)
fidivr
cwde
sub
push
rol
loope
sti
pop
cmp
pop
popf
pop
and
stos
or
fidivr
movs
not
lds
aad
jo
aas
mov
addr16
icebp
push
test
push
movs
imul
fimul
lds
test
retf
sub
dec
sahf
or
sub
test
in
int
mov
sbb
dec
cmp
mov
jle
cmc
fsubr
ins
dec
int
xor
inc
push
call
dec
out
cmps
cmp
jg
test
pop
push
and
inc
enter
stos
mov
adc
addr16
movs
mov
jo
ret
push
push
add
mov
and
test
push
sub
ficom
jle
or
mov
sti
data16
cmp
mov
cmp
pusha
push
nop
adc
iret
mov
sbb
push
loop
popa
push
pop
mov
data16
inc
les
push
hlt
test
inc
push
pop
sub
sub
movs
fild
inc
push
cmp
sbb
jne
movs
lock
sbb
inc
sti
std
push
aas
add
js
xchg
int3
lea
inc
push
xchg
mov
lods
cmp
movq
inc
cld
push
sti
pop
inc
aad
jmp
rol
push
mov
xor
and
jle
icebp
mov
je
push
sbb
les
jecxz
arpl
mov
les
out
mov
idiv
ds
(bad)
(bad)
dec
mov
test
out
clc
jne
adc
aam
ret
in
pop
or
mov
push
inc
fsubrp
test
dec
dec
cmp
mov
cmp
sub
mov
or
enter
cmp
test
jmp
into
icebp
out
inc
mov
test
ins
inc
xchg
cli
xchg
or
mov
sahf
mov
xor
pop
jecxz
pop
push
mov
dec
outs
sar
xchg
and
push
mov
pop
inc
and
addr16
repz
cmp
lods
sub
mov
push
test
sub
inc
fnstenv
push
test
jo
and
mov
pop
movs
ret
cmps
leave
jb
jno
dec
outs
fist
xor
test
lods
sub
add
and
sub
pushf
(bad)
pusha
std
stos
test
clc
das
aad
lods
repnz
inc
enter
in
xor
in
shl
gs
and
mov
lods
hlt
mov
mov
jo
and
mov
loope
movs
mov
test
push
mov
in
loop
mov
sti
xchg
jns
mov
(bad)
mov
add
add
aaa
loopne
cwde
jmp
outs
push
push
push
stc
(bad)
mov
fcmovne
mov
or
sbb
std
loop
sub
push
pop
call
loop
push
cli
adc
mov
dec
cmp
psubb
xchg
or
mov
mov
or
lods
mov
call
mov
bound
cmp
in
mov
stos
push
jae
aas
sbb
mov
lahf
cmp
push
cmp
sub
cmps
das
jmp
fisubr
inc
(bad)
mov
sbb
call
cs
or
(bad)
jb
sub
pop
jge
nop
jne
or
dec
(bad)
mov
(bad)
push
cmp
push
in
jmp
push
sbb
cmp
dec
idiv
outs
mov
sbb
sahf
(bad)
js
and
xor
push
push
add
cmp
lods
mov
dec
es
call
pop
repnz
inc
push
mov
add
xchg
outs
(bad)
lds
scas
mov
push
sub
xchg
cs
and
call
in
loop
movs
out
je
inc
sub
mov
jb
leave
aad
dec
pop
out
lea
int3
push
inc
add
enter
fdivr
out
mov
lods
stos
dec
repz
mov
lods
sub
inc
fisubr
or
mov
and
xchg
mov
mov
mov
xchg
xlat
out
movs
and
jle
inc
xchg
fistp
(bad)
sbb
gs
push
mov
mov
mov
retf
in
pop
(bad)
push
adc
push
fst
pop
add
stc
cdq
dec
cmp
pushf
pop
mov
pop
test
jmp
mov
sub
in
or
stos
jle
dec
jnp
addr16
inc
dec
test
or
jne
push
fstp
mov
div
mov
sub
xor
and
sub
jo
imul
push
and
fucomi
and
cmps
cwde
sub
pop
lods
loopne
mov
sub
jno
dec
clc
mov
bnd
jae
jp
sub
jmp
mov
pop
xchg
mov
pop
loope
inc
xchg
out
(bad)
shl
inc
in
or
enter
mov
neg
popf
mov
aam
inc
out
xchg
out
in
and
xchg
lods
aam
mov
ds
xchg
mov
neg
bound
cmc
add
mov
pop
dec
add
js
enter
icebp
mov
sub
pop
push
(bad)
jmp
push
test
cs
or
fnsave
mov
inc
scas
mov
mov
sti
ror
xchg
jmp
mov
jne
ins
outs
mov
cmps
pop
push
xchg
jne
mov
je
cmp
jp
scas
sar
push
and
lahf
sbb
repnz
dec
and
push
mov
sbb
xor
xor
mov
cmp
push
pop
mov
mov
shl
(bad)
jge
mov
aad
addr16
xor
inc
sub
adc
pop
sbb
call
mov
fstp
fdiv
add
push
inc
pop
pusha
jmp
hlt
mov
hlt
pop
and
push
fmul
pop
vsubss
xor
push
mov
out
pop
nop
xchg
cld
je
add
lds
arpl
(bad)
push
ja
mov
push
sub
jg
mov
div
in
mov
sbb
xchg
cmp
ficomp
rcr
add
outs
ret
xlat
into
out
(bad)
sub
cmp
ss
jge
mov
cmps
add
mov
icebp
xor
and
out
jns
dec
ins
lods
jb
loope
inc
test
call
xchg
push
push
cmp
inc
add
and
add
test
inc
xchg
cmp
data16
dec
and
sub
mov
inc
and
fdivr
in
scas
add
xchg
and
xchg
imul
xchg
sar
lods
sub
shl
or
(bad)
sub
sbb
jmp
adc
xchg
push
ja
out
cli
lods
and
in
and
pop
lea
push
or
icebp
ja
pop
(bad)
pop
mov
inc
ret
adc
outs
pop
in
lods
(bad)
jmp
daa
mov
mov
pusha
jnp
xchg
fst
mov
aas
jle
mov
aaa
jbe
test
pop
mov
pop
inc
leave
jne
and
cmp
sbb
jae
retf
fisub
xor
push
jle
imul
mov
push
jbe
push
add
pop
sbb
jns
ss
inc
jl
sbb
mov
sbb
iret
sar
dec
movs
push
fs
push
xchg
bound
or
mov
scas
loop
xchg
cmp
js
je
jns
dec
icebp
cmp
lahf
xchg
popa
pop
xchg
xchg
mov
(bad)
pop
or
scas
repnz
jb
imul
jecxz
pop
or
ins
mov
(bad)
gs
adc
pop
cmovns
and
bound
mov
lods
mul
fnstcw
mov
mov
adc
std
(bad)
push
icebp
jb
jae
das
mov
pop
add
add
xchg
adc
push
call
loop
int3
push
mov
sub
or
gs
mov
mov
lods
inc
loop
in
mov
fstp
adc
lods
in
fdiv
aad
addr16
rcl
xchg
ss
jecxz
inc
ret
mov
in
mov
cld
and
mov
repz
ret
sbb
dec
outs
mov
mov
pop
mov
and
fild
popa
xchg
push
or
mov
pop
inc
adc
ror
in
or
pusha
adc
xchg
ret
es
mov
ins
hlt
inc
jle
sar
adc
pop
fimul
outs
xor
jbe
enter
or
shl
lods
ins
pop
mov
pop
add
mov
cld
jae
leave
jmp
popa
repz
sbb
movs
inc
push
or
cmp
cmp
repz
and
mov
popa
movs
jbe
test
hlt
stos
mov
cmps
pavgw
loop
call
and
data16
dec
xlat
adc
sub
mov
bound
mov
mov
inc
out
inc
jle
xor
imul
jo
(bad)
xor
leave
xor
retf
call
add
cmp
popa
and
xchg
fidiv
lods
inc
div
dec
(bad)
out
or
dec
test
sbb
dec
retf
aas
ret
push
sbb
sbb
push
push
(bad)
fcomp
movs
sbb
mov
push
xchg
lock
mov
outs
add
push
cdq
mov
or
cmp
bswap
mov
jne
jb
test
jmp
jae
inc
adc
xor
shl
and
ja
or
push
rcl
xchg
in
popa
out
cld
jge
icebp
imul
movs
(bad)
pop
shl
das
(bad)
mov
int
lods
repnz
les
sbb
xchg
sub
cmp
(bad)
xchg
ds
jmp
inc
xchg
adc
int
dec
push
push
lods
add
mov
scas
push
emms
push
sub
or
ja
mov
retf
rcl
out
enter
mov
sub
mov
stos
add
cmps
push
in
ja
pop
mov
repnz
mov
rcl
jmp
shl
(bad)
and
push
in
cmps
rcl
fldcw
jnp
loopne
out
and
enter
loope
adc
cmp
fld
dec
jnp
push
test
cwde
pop
jmp
mov
imul
sub
stos
in
retf
ja
sahf
push
and
pop
push
pop
out
rcl
fistp
dec
cmps
leave
fwait
rcl
stc
sub
pop
adc
xor
mov
outs
lods
xor
and
cmp
iret
mov
ficom
and
(bad)
mov
mov
and
xchg
mov
adc
dec
loopne
scas
jmp
mov
fcmovnu
xor
jnp
shr
jmp
out
bnd
pop
rcr
xor
aam
daa
sub
mov
jns
jle
fsubr
lock
pop
mov
cwde
push
int
cdq
imul
mov
cmp
fldcw
imul
mov
fidiv
mov
movs
jle
std
add
xchg
loop
xchg
pop
jl
in
xchg
aaa
dec
and
cmp
mov
cs
fwait
bnd
cmp
cwde
cmp
mov
std
test
jge
cdq
ret
lods
mov
mov
in
push
push
inc
dec
sbb
ret
(bad)
stos
inc
loopne
loop
(bad)
sbb
or
iret
jne
data16
dec
jl
rcr
sub
pop
mov
adc
(bad)
push
mov
add
jns
mov
cmp
pop
dec
jmp
xor
mov
pop
jae
loop
loope
xor
jne
into
cmp
dec
rcr
adc
and
loop
addr16
jmp
sbb
outs
adc
les
xor
mov
(bad)
stc
adc
leave
jmp
xchg
lds
call
pop
(bad)
xchg
jb
sbb
sbb
mov
rol
sahf
stc
xlat
xor
adc
push
mov
clc
sar
mov
push
push
(bad)
xchg
retf
jnp
(bad)
dec
xor
xchg
xchg
pusha
sub
mov
bound
cld
push
arpl
ja
push
into
jmp
sub
mov
xchg
pushf
imul
jge
mov
stos
add
jge
pop
(bad)
pop
stos
lahf
pop
retf
sub
or
mov
test
cmps
dec
cmps
add
lahf
pop
in
mov
push
int
popf
std
out
dec
nop
dec
sti
sbb
pop
aad
pop
jmp
jne
and
stos
loopne
iret
ret
or
dec
leave
jp
push
jb
or
psubusw
daa
(bad)
dec
cmp
mov
repnz
xor
repnz
fdivr
ficom
test
xor
in
mov
jb
dec
push
sti
shr
ins
shl
xlat
aam
mov
je
jmp
inc
in
(bad)
adc
neg
test
dec
aas
pop
xor
pop
in
adc
xor
lock
ss
sahf
stc
inc
test
xchg
jne
imul
loope
sub
cld
mov
leave
icebp
add
adc
pop
or
pop
cdq
cs
test
bound
and
sbb
ret
retf
imul
push
push
shl
or
or
mov
sahf
or
mov
call
int
or
or
idiv
das
div
jle
fisttp
lods
or
rcr
mov
imul
popa
imul
cmp
cdq
jo
mov
xchg
outs
sbb
mov
or
enter
mov
mov
push
xchg
sub
lds
test
push
shl
fld
sbb
retf
fld
dec
jg
sbb
or
pop
int3
aas
jge
mov
inc
bound
scas
push
jle
mov
push
mov
dec
mov
aam
cmp
mov
pusha
mov
retf
dec
call
xchg
rol
pop
xor
dec
xor
lods
test
fcom
lods
xchg
add
sbb
and
movs
mov
jmp
mov
dec
mov
xor
cmp
push
popa
mov
xchg
adc
cmp
dec
inc
ror
(bad)
push
inc
dec
or
xor
ror
inc
push
aad
xchg
jns
pop
sub
jmp
mov
pop
mov
leave
jge
jecxz
mov
nop
pop
sub
ss
sub
mov
lods
(bad)
fld
xchg
adc
call
inc
or
lds
call
push
bound
jae
out
sahf
outs
mov
arpl
out
out
or
sbb
xchg
scas
adc
push
inc
sub
call
arpl
adc
adc
popf
rcl
cld
inc
or
(bad)
js
arpl
adc
daa
cmp
outs
cmp
outs
retf
and
push
and
mov
or
iret
in
mov
jb
or
and
dec
loope
es
stos
arpl
push
dec
xor
test
popa
mov
outs
ret
unpckhps
mov
aaa
lock
jecxz
xor
xchg
pop
in
hlt
dec
cmp
loop
pusha
cmp
mul
in
int
or
mov
aad
jnp
pop
pop
aam
pop
mov
inc
ret
adc
mov
or
adc
cmp
push
push
mov
pop
sbb
aad
and
inc
sbb
inc
pop
add
adc
clc
jecxz
xchg
sub
cmp
call
dec
cmps
xor
daa
and
push
imul
jecxz
scas
fistp
out
ret
add
xchg
das
popf
mov
sbb
clc
jmp
jbe
mov
sbb
push
ret
xchg
pop
loop
lea
imul
shl
mov
lods
jae
ins
shr
cmps
mov
mov
movs
sbb
jle
sqrtps
jno
xor
in
div
bound
retf
sub
in
out
ret
xor
jne
out
into
xor
in
lock
fnstcw
xor
add
push
outs
jmp
repz
sub
ret
clc
jae
inc
sub
and
sub
inc
or
in
push
in
gs
mov
push
pushf
cmp
out
push
push
jno
and
stc
xchg
push
sbb
(bad)
push
pop
icebp
xor
jb
ficom
push
adc
mov
mov
pop
(bad)
dec
es
pop
outs
out
movs
clc
(bad)
popa
and
dec
pop
into
sar
outs
adc
mov
adc
sbb
bound
mov
retf
pop
inc
(bad)
repz
dec
sbb
(bad)
xchg
aam
pop
cli
rcr
push
pop
mov
mov
fstp
pop
sar
pop
push
lock
mov
mov
hlt
xchg
(bad)
int
and
xchg
or
add
inc
mov
out
mov
pop
mov
push
dec
jle
sub
adc
out
jae
aas
adc
push
mov
lock
lods
das
out
fcompp
pop
sub
fwait
adc
aaa
fnstenv
inc
inc
(bad)
push
fwait
es
mov
out
mov
in
ins
in
sub
in
sahf
sub
push
pop
jo
mul
mov
mov
push
ja
stc
ins
cmps
add
repz
xchg
test
dec
mov
loop
arpl
cld
dec
test
fiadd
aam
test
mov
ins
or
push
test
mov
clc
xchg
adc
cmps
inc
es
jb
popf
xchg
jno
sahf
ret
or
popf
jle
shl
push
dec
push
inc
lea
ja
out
xrelease
add
jge
out
ss
mov
loop
sub
cmp
retf
test
icebp
jge
mov
icebp
aas
push
dec
mov
ds
(bad)
lahf
or
mov
outs
lahf
jnp
sub
sbb
cmp
jp
jbe
cmc
mov
pop
and
loopne
cmp
in
adc
into
adc
ja
into
hlt
dec
push
aad
dec
xor
in
or
jge
xchg
into
push
or
pcmpeqb
and
xchg
push
nop
aad
mov
movs
jmp
add
mov
lahf
and
fdiv
push
mov
inc
mov
int
stc
(bad)
sub
jp
movs
out
mov
rcl
xlat
jns
sbb
push
retf
cdq
popf
sar
push
fs
test
out
pop
pop
cld
int
out
scas
fidivr
addr16
ror
push
xor
sub
lods
fdiv
jno
mov
leave
ret
add
or
push
rcr
jge
cmps
out
pop
les
(bad)
lea
(bad)
mov
popa
or
cmc
hlt
test
dec
and
add
lock
or
or
pusha
out
cmp
dec
out
xchg
adc
xchg
shl
jnp
cmp
je
xchg
cmps
cwde
stc
lea
lea
jo
xlat
fidiv
push
add
sub
repnz
push
(bad)
sbb
cmp
adc
add
inc
pop
xchg
ja
dec
ret
or
pop
cmp
adc
test
cmp
sbb
pop
cmc
sbb
add
mov
xor
jb
test
out
aad
dec
js
push
and
or
ds
fcmovnb
xchg
fistp
adc
jae
dec
frstor
and
clc
lahf
cmps
cmc
in
pop
dec
bound
xor
pop
xor
xchg
inc
push
cdq
stos
jae
fcomp
mov
sub
or
add
retf
push
imul
cmp
cmp
sbb
mov
retf
dec
ss
cwde
popf
stos
nop
sti
push
fs
mov
pop
fnstcw
fisttp
xchg
stos
inc
aad
and
or
push
hlt
daa
sti
rcl
mov
xor
dec
jbe
imul
lds
lods
lock
inc
mov
sub
adc
pop
cmp
sbb
jmp
mov
(bad)
loope
shr
sub
jp
add
call
int
(bad)
mov
data16
sbb
(bad)
rcr
fs
das
mov
sbb
mov
scas
out
scas
xchg
jg
dec
sbb
xchg
mov
in
adc
rcr
and
outs
or
movs
cmc
xchg
mov
daa
out
rol
lea
jmp
jnp
pop
inc
scas
mov
or
pop
pop
data16
mov
fist
sub
outs
xchg
test
jne
add
and
test
dec
fsin
adc
or
push
lds
rcl
push
jmp
push
mov
push
lock
cmp
mov
pusha
jb
xor
xchg
in
or
and
retf
add
mov
out
and
call
shl
cmp
lods
cli
and
in
loop
xchg
popa
push
add
xor
cdq
mov
add
aad
add
mov
or
and
sub
mov
and
iret
and
add
fisttp
add
and
je
imul
es
into
xor
iret
mov
xchg
cld
inc
ret
jmp
(bad)
repnz
pminsw
daa
xchg
cmps
push
push
adc
sbb
in
push
ret
xor
lods
mov
mov
imul
pop
sar
adc
add
daa
hlt
bound
cmps
in
adc
jle
sub
xchg
sbb
stos
add
push
sub
movs
adc
in
xor
push
mov
xor
inc
fldenv
inc
lahf
call
icebp
arpl
sti
or
test
fs
add
das
repz
enter
inc
mov
outs
push
movd
fldenv
(bad)
rcr
jbe
dec
das
dec
sub
jge
sub
shl
jl
fisub
outs
mov
push
xchg
shl
or
cmp
add
lods
neg
sbb
js
adc
in
push
pop
fisttp
repnz
ja
sub
add
mov
sub
sar
adc
shl
sub
ss
sub
add
push
retf
xchg
pop
push
mov
(bad)
push
add
int
adc
jmp
mov
jbe
and
imul
mov
repz
es
jg
cmp
inc
sbb
cwde
xchg
add
enter
mov
mov
pop
adc
outs
mov
cli
rcl
leave
jge
in
xor
in
ficomp
out
dec
xchg
ss
std
hlt
cmp
and
lods
in
js
inc
enter
lock
jle
inc
cdq
push
push
lods
and
or
lods
mov
retf
ja
add
ud2
lods
sub
lock
(bad)
iret
dec
xchg
ja
xor
and
xlat
and
push
lods
int
jl
dec
and
in
and
(bad)
into
add
and
push
fs
xlat
dec
icebp
jae
call
push
into
add
(bad)
jbe
mov
lea
(bad)
or
pop
fisub
pop
xchg
inc
das
mov
int
or
xchg
cmp
xor
inc
aad
xlat
and
daa
outs
scas
out
fidiv
xchg
jmp
shr
sbb
xlat
mov
stos
sbb
xchg
sub
(bad)
cmp
inc
call
fs
nop
cmps
and
pop
mov
call
js
ds
mov
inc
aad
inc
jge
fwait
(bad)
dec
cwde
sar
cwde
lds
pop
jl
ret
cmp
daa
cs
jo
into
cmps
scas
test
call
cmp
test
adc
mov
cmc
sub
inc
sahf
xchg
adc
cmp
jb
sahf
scas
add
int
lds
or
xchg
dec
out
cmp
sahf
jb
push
xchg
adc
mov
add
popf
jp
mov
(bad)
in
(bad)
sub
pusha
xchg
jns
ret
xor
imul
mov
push
lds
in
adc
pop
inc
add
push
ss
and
jp
scas
sbb
cmp
or
inc
daa
sbb
aad
add
ins
pop
cmp
out
cdq
push
sbb
jmp
out
aas
and
add
pop
xchg
dec
bound
(bad)
mov
pop
stos
fmulp
out
push
sbb
or
loopne
or
xor
mov
lds
lods
movs
in
ret
push
mov
nop
sub
icebp
popa
lods
stos
and
push
jp
sub
dec
fsub
jl
std
jb
scas
and
cmp
out
rcl
xchg
jmp
adc
cmp
jb
(bad)
dec
mov
aad
maxps
adc
jg
in
jmp
out
sbb
icebp
jmp
xlat
test
ror
add
adc
sub
adc
mov
pop
jecxz
or
and
add
popa
lods
dec
pop
pop
xor
jecxz
enter
pushw
mov
dec
cmps
out
and
dec
sbb
test
mov
sbb
adc
loop
adc
mov
inc
xchg
xor
sub
adc
es
repz
repnz
dec
cmp
imul
dec
clc
jno
out
(bad)
jge
sbb
xor
push
loope
sbb
xor
out
ins
dec
add
xor
jno
adc
int3
xor
rcr
(bad)
pop
jmp
cmp
cmp
sbb
jp
out
test
or
inc
mov
pop
out
mov
ja
mov
pop
push
ins
call
(bad)
xor
adc
sub
jle
push
in
adc
add
jmp
mov
fdiv
sbb
ins
mov
ins
stos
inc
jl
out
xlat
popa
mov
std
push
inc
add
ins
xchg
push
mov
xchg
lahf
sti
cmp
lea
(bad)
jnp
jo
mov
out
push
mov
cmc
pop
scas
out
and
retf
retf
cmp
sbb
pop
cmp
repz
inc
shr
test
or
pop
inc
into
add
push
inc
sub
sbb
push
lea
(bad)
in
sbb
jmp
mov
xchg
nop
call
pop
jo
cmp
out
xor
dec
cmp
inc
ficomp
sahf
sub
hlt
or
sbb
das
xchg
mov
arpl
inc
pop
sub
push
sub
dec
xchg
push
dec
popf
ja
dec
and
scas
cmps
xor
ins
mov
jno
loope
pop
int
pop
mov
and
cmp
ret
or
mov
adc
xor
fndisi(8087
adc
out
fstp
and
cmp
aad
idiv
ins
xor
mov
jnp
push
mov
mov
and
sbb
mov
mov
mov
icebp
inc
inc
cmp
cmp
nop
xor
mov
or
sub
das
mov
arpl
and
dec
jns
aaa
or
movs
jne
pop
cmps
jno
movs
int3
(bad)
jge
pusha
cmp
bnd
js
cmp
cmp
cmp
jns
cmp
sti
lds
inc
dec
xchg
mov
mov
mov
js
shr
sub
mov
movs
ins
xchg
lods
mov
mov
jno
nop
(bad)
or
mov
cwde
test
loope
test
mov
repz
shr
psubsb
clc
cmps
push
aaa
imul
mov
test
xor
inc
adc
inc
outs
leave
aaa
call
ins
(bad)
jg
xchg
cmps
shl
inc
mov
retf
jp
inc
mov
mov
movs
into
lds
test
and
xchg
push
fsub
mov
pop
fcomp
inc
stos
and
shl
popf
stos
mov
sbb
test
cwde
add
inc
mov
xor
push
add
sahf
mov
sbb
push
cmc
sub
dec
sbb
out
(bad)
mov
repnz
test
inc
outs
(bad)
add
add
mov
add
loope
xchg
sbb
and
jmp
pop
div
jmp
push
(bad)
dec
pop
mov
js
dec
mov
cwde
pop
ficomp
inc
lds
dec
xchg
mov
push
xor
adc
inc
jbe
ins
popf
jnp
cwde
leave
fnstenv
cli
add
bound
dec
inc
gs
aas
push
push
lahf
sbb
cmp
stc
xchg
sub
push
add
test
out
xlat
adc
pop
mov
push
push
iret
and
xchg
into
scas
test
in
jp
cmp
(bad)
xchg
add
cmp
mov
xchg
cwde
xchg
lods
mov
jne
icebp
addr16
aas
aad
test
sets
mov
jg
jecxz
test
fldcw
dec
cwde
inc
ss
movs
or
hlt
fcom
stc
int3
clc
dec
inc
addr16
mov
jg
jae
xlat
in
clc
jg
ins
xlat
das
outs
pop
xchg
xchg
cmc
pop
jle
test
cmp
gs
sub
pop
inc
jne
lea
jbe
pop
inc
hlt
mov
or
and
lahf
mov
jge
int
sbb
add
test
je
dec
pop
jae
mov
out
push
jmp
cmp
iret
mov
cmp
and
int3
sbb
inc
sub
cmp
mov
stos
ror
xor
xlat
pop
adc
fist
xor
or
or
and
sbb
cmp
jge
sub
mov
pop
mov
pop
popf
fldcw
adc
and
pushf
lods
mov
ins
jo
loop
jmp
(bad)
call
add
jp
rcr
ret
repz
or
out
nop
push
test
jp
xchg
cmp
jle
fild
mov
inc
cmp
jecxz
cmc
neg
xchg
pop
add
pop
cmp
leave
mov
dec
jle
test
inc
sub
adc
adc
jo
hlt
lea
mov
fistp
loopne
push
xchg
aaa
fistp
ss
or
arpl
mov
xor
add
fwait
or
mov
adc
in
jns
cmps
push
xor
(bad)
or
pop
xor
jns
retf
sub
mov
xchg
scas
(bad)
call
sub
in
push
mov
and
jg
into
ins
in
cmp
hlt
icebp
dec
mov
jb
adc
popf
push
mov
fist
pop
add
loope
sub
mov
xor
add
es
adc
shl
adc
cwde
cmp
(bad)
aam
jnp
out
xchg
div
retf
ins
out
cwde
test
and
inc
pop
inc
lea
adc
movs
and
out
and
ss
jne
pop
leave
jmp
fstp
pop
stos
je
jo
sahf
movs
xchg
sbb
adc
and
stc
das
push
mov
stc
call
mov
out
xchg
inc
push
test
movs
sbb
adc
dec
ja
cmp
fidiv
push
pushf
jnp
sbb
loop
jb
xlat
inc
sbb
pop
ja
mov
enter
leave
popf
call
nop
jno
arpl
add
popf
inc
inc
enter
loope
lahf
test
fwait
dec
imul
(bad)
pushf
pusha
test
daa
jl
add
dec
psllw
inc
cld
ja
jmp
xor
jmp
pushf
jmp
cmp
cli
in
push
push
hlt
xchg
xchg
and
movs
fcmove
int3
pop
test
cmp
ja
test
jno
or
xor
and
sbb
outs
mov
mov
sub
ret
movs
fldenv
jp
pop
mov
sbb
fdivr
xchg
mov
push
and
inc
pop
sahf
stos
sbb
xor
jmp
lods
int
push
xor
retf
xor
test
cld
adc
push
int3
or
xchg
mov
pop
mov
dec
dec
or
and
loope
(bad)
aas
inc
daa
jmp
into
and
mov
(bad)
jns
loope
push
into
adc
std
test
push
mov
fld
add
xor
sahf
pushf
mov
and
and
test
les
dec
push
les
add
jmp
in
and
sub
cmp
xchg
or
outs
dec
mov
cs
push
icebp
cmc
xchg
add
inc
mov
aas
movs
xor
sbb
ret
cwde
and
scas
sub
push
ds
mov
outs
repnz
ins
outs
movs
sbb
cmps
adc
push
push
inc
adc
ret
js
cs
test
shl
in
(bad)
pushf
and
mov
push
cmp
adc
ror
jae
jmp
push
cmc
scas
std
or
fisttp
or
inc
stos
movs
les
mov
and
cmp
xchg
sub
dec
shl
repnz
imul
rcr
jecxz
add
mov
cld
and
jge
(bad)
out
jno
pop
aam
mov
jmp
aaa
shl
mov
pop
lock
inc
aaa
lds
sbb
test
test
and
sar
jmp
clc
jge
fdivr
std
retf
xchg
xchg
out
and
inc
test
enter
cwde
test
sbb
jmp
fucomp
adc
loope
and
ja
pop
out
popa
scas
jnp
pop
xor
ret
out
xchg
int
scas
push
movs
out
sbb
and
jle
cmc
xor
add
hlt
jne
mov
clc
mov
jg
or
rol
clc
inc
sar
leave
enter
into
inc
xor
mov
add
(bad)
out
jnp
pop
int3
cmp
fwait
or
xor
pop
ror
pop
mov
mov
mov
push
xor
sahf
cmp
push
sbb
adc
fnstcw
jle
in
push
pop
jnp
push
sbb
mov
(bad)
mov
and
jmp
lods
jnp
mov
int
jns
test
dec
xchg
push
xchg
loope
nop
mov
mov
sub
adc
mov
or
and
xor
cmps
jns
call
pop
sar
xor
cwde
ficomp
inc
repz
sbb
aam
test
rol
jnp
ins
pusha
ret
int3
add
xchg
(bad)
sub
mov
ret
hlt
addr16
xor
in
loopne
mov
mov
and
mov
inc
dec
popf
mov
int
repnz
dec
shl
cmp
out
push
push
pop
adc
outs
icebp
in
stc
ins
shl
cmps
out
pop
shl
inc
and
stos
or
or
bound
jl
jmp
stos
bound
stos
repnz
cmp
aam
pop
scas
push
sub
ret
jbe
shl
inc
sti
xor
mov
adc
call
push
cld
jae
add
or
sub
inc
pop
xchg
addr16
stos
cmp
test
xor
ins
loopne
pop
mov
imul
je
imul
inc
xor
cmp
jo
aad
pop
(bad)
mov
jmp
push
test
mov
sub
pop
sahf
add
gs
xlat
jmp
mov
sar
aad
fdivr
lods
jge
and
jl
ds
in
stos
ror
dec
push
mov
(bad)
cmc
pop
sub
or
and
es
les
je
test
pop
mov
les
adc
cmp
mov
dec
daa
les
jno
inc
idiv
jnp
jmp
fwait
jg
add
div
or
ret
icebp
loope
test
xor
inc
push
cs
xchg
out
push
es
jae
add
adc
lock
pop
mov
ja
lods
push
sar
mov
sar
pop
mov
out
xchg
fiadd
arpl
push
lea
daa
pop
jbe
sti
jmp
cdq
ins
std
inc
dec
movs
daa
fsubr
sbb
je
mov
inc
adc
dec
test
pop
in
sahf
mul
fsub
jmp
jo
fisub
pop
enter
(bad)
pusha
fisub
jl
push
dec
and
sub
mov
push
repz
mov
stos
dec
sub
test
mov
cwde
enter
rcl
xchg
test
dec
xor
jno
imul
rcr
cmp
jno
push
mov
add
push
xchg
adc
mov
sbb
(bad)
and
jnp
es
xchg
sahf
arpl
lods
lock
enter
mov
in
inc
(bad)
mov
mov
fnstcw
or
lock
xlat
dec
push
ja
cwde
retf
add
pop
test
ins
or
fnsave
shl
push
xchg
mov
scas
push
mov
cmps
dec
mov
data16
stos
mov
bound
jg
add
outs
push
adc
out
daa
ins
outs
dec
(bad)
fild
mov
mov
iret
pop
sub
cli
movs
out
arpl
cmp
mov
cmp
test
ror
(bad)
int3
test
fsubp
iret
outs
or
add
inc
jns
mov
or
dec
repnz
adc
aad
gs
les
test
lock
pop
in
and
test
mov
cmp
mov
or
icebp
sahf
jbe
outs
sbb
add
das
lods
adc
out
dec
and
cmp
sahf
clc
inc
cmc
and
push
xchg
inc
imul
mov
repnz
pop
pusha
ret
adc
and
or
xchg
cwde
add
in
cld
popf
movs
cmp
imul
mov
outs
in
rol
shl
jecxz
xchg
add
mov
jle
jmp
pop
sbb
xchg
or
shr
fwait
(bad)
cmps
lock
push
out
retf
sub
mov
jle
stos
std
(bad)
lock
mov
inc
mov
adc
push
dec
and
mov
loop
in
in
pop
outs
stos
ret
sbb
test
mov
dec
shl
icebp
arpl
(bad)
and
cdq
jo
mov
call
xor
xchg
mov
lds
sahf
cmp
call
jno
mov
je
aad
fsubrp
jne
mov
cmp
pop
shl
sub
frstor
cld
inc
mov
pop
lea
fst
push
xchg
jle
loopne
loop
xor
xchg
addr16
inc
mov
adc
xchg
psadbw
mov
(bad)
arpl
dec
add
sahf
lods
std
(bad)
xchg
pop
jae
or
outs
add
add
test
xor
scas
popa
push
cmp
aad
mov
sti
fnsave
mov
mov
fld
xchg
xlat
shr
jne
scas
mov
scas
dec
outs
mov
dec
xchg
mov
sbb
popa
and
test
retf
out
sbb
gs
xchg
nop
add
add
out
test
inc
add
sahf
call
xor
fnstenv
ret
cmps
push
xchg
pushf
xchg
mov
mov
push
repnz
adc
lahf
mov
pop
push
sbb
dec
and
fiadd
push
std
cmp
aam
xchg
out
ins
adc
movs
cmp
add
push
(bad)
loope
jmp
cmp
(bad)
fist
daa
in
xchg
test
add
and
push
inc
cmp
pop
add
push
dec
test
xlat
mov
dec
cmp
inc
arpl
cld
and
test
sbb
repz
xor
add
jecxz
(bad)
test
rcr
movs
or
sti
cs
jl
push
xor
cmc
sbb
retf
test
and
out
enter
dec
mov
fcomip
(bad)
sbb
cmp
out
sub
loope
jnp
ds
dec
jnp
jnp
mov
ins
adc
pop
push
mov
xchg
sti
test
mov
xchg
pop
cmp
mov
ja
fsubr
out
cmps
cmps
les
imul
mov
dec
out
xchg
(bad)
call
mov
cld
aad
fcom
dec
and
sub
mov
cmps
movs
push
jae
xchg
into
or
stos
lods
pop
lods
stc
xor
or
imul
mov
movs
push
or
std
cmp
in
sub
ror
pushf
call
fwait
into
mov
cmps
mov
das
mov
lods
mov
inc
dec
icebp
in
and
adc
scas
push
rol
jmp
mov
add
push
cmp
dec
jnp
hlt
mov
push
aam
loop
(bad)
jg
(bad)
mov
push
sbb
addr16
fist
lahf
sub
xchg
push
fistp
xor
imul
sbb
pop
pushf
jecxz
shr
ret
outs
jno
test
sub
lods
outs
(bad)
sbb
xchg
mov
hlt
outs
add
mov
sbb
jp
arpl
imul
sbb
neg
xchg
addr16
cmp
loopne
fiadd
mov
ror
out
sbb
test
push
dec
clc
(bad)
push
(bad)
push
lea
mov
cmc
das
ret
cmps
mov
jmp
shl
aaa
repnz
add
lods
enter
push
es
push
out
int3
and
jg
ins
retf
inc
ret
fisttp
lds
stc
jo
jmp
sar
mov
into
jp
dec
(bad)
fcom
cmps
aaa
sar
repz
add
loope
mov
movq
nop
add
mov
mov
stos
sub
(bad)
mov
out
push
ins
pop
leave
clc
pop
xchg
xor
outs
mov
icebp
mov
jb
stc
outs
shl
adc
aad
stc
fs
sbb
xor
mov
sbb
scas
and
or
outs
out
pop
(bad)
loop
scas
test
dec
or
inc
lods
inc
pop
int
dec
or
rol
jl
jle
or
div
xchg
inc
bound
fcomp
mov
pop
jo
add
cmp
inc
pop
xchg
cdq
mov
add
imul
jl
retf
popa
sub
in
iret
xlat
push
dec
dec
les
(bad)
rcl
jle
rol
jge
and
xchg
xor
push
das
clc
ja
aam
cmc
out
xlat
fidivr
xchg
sbb
jmp
push
shl
in
jg
push
push
je
imul
retf
std
loopne
ins
test
lss
jmp
dec
repz
pop
iret
sub
ret
cmp
add
xor
xor
repnz
into
ja
sbb
sbb
cmp
cmps
fnstsw
jl
fcom
dec
or
hlt
fcmove
aas
jmp
add
aad
push
test
sub
ins
les
movs
or
mov
jb
mov
inc
sub
popf
adc
fs
push
sub
jne
or
repz
je
xor
xchg
dec
cwde
sub
adc
repz
jmp
daa
movs
fcomp
scas
and
xchg
mov
lds
leave
xchg
inc
and
sbb
loop
js
mov
pusha
leave
lock
daa
jne
mov
pop
(bad)
xchg
dec
mov
add
and
cs
push
or
cdq
(bad)
mov
dec
fisubr
pop
or
or
sbb
call
cmps
fsub
mov
outs
mov
or
leave
jmp
bound
sar
mov
pop
jb
out
adc
sub
and
inc
mov
popf
mov
sub
push
cmc
icebp
pop
add
and
fcomp
mov
retf
jbe
xor
loopne
adc
aaa
test
lods
fs
(bad)
retf
test
cmps
adc
retf
cmc
push
push
sub
sub
mov
bound
cs
add
int
sub
and
stos
sub
push
sub
sub
xlat
jmp
mov
imul
(bad)
cmps
shl
or
sub
out
jmp
mov
scas
jo
jmp
jmp
jne
movs
pop
cmp
stc
ins
popf
pushf
(bad)
loopne
jb
pop
std
sub
mov
outs
cwde
ja
and
adc
sub
mov
loope
dec
xchg
loopne
fild
cmp
sbb
rcl
mov
ins
inc
jns
and
neg
dec
dec
lahf
retf
or
pop
cmc
sub
fnstsw
int3
push
jno
ins
ins
adc
sbb
and
pop
gs
cmp
jecxz
pop
xchg
lods
pop
mov
pop
mov
push
frstor
or
inc
popf
mov
inc
call
or
mov
mov
sbb
in
add
std
stos
jae
ins
and
loop
fxch
dec
(bad)
fistp
cvtpi2ps
xchg
and
mov
mov
add
imul
imul
cwde
pop
push
ins
adc
ss
fdiv
cwde
sbb
cmp
add
sbb
push
xor
push
xor
cmc
sbb
loop
xchg
lods
cmp
adc
mov
and
pop
xchg
cld
xchg
popf
pop
sbb
cmp
or
jecxz
mov
inc
mov
pop
xchg
sub
iret
mov
mov
stos
loope
jecxz
or
addr16
and
jle
jecxz
jmp
mov
adc
ins
mov
ficomp
push
(bad)
call
popa
mov
adc
cmps
arpl
(bad)
cmc
out
mov
mov
aaa
sbb
les
fisub
inc
js
sahf
lahf
rcr
inc
xor
call
sub
adc
jbe
call
retf
hlt
out
or
lods
jno
jle
cmps
add
out
push
and
dec
mov
adc
add
xor
shl
and
outs
push
es
sbb
icebp
ss
or
cs
shl
push
mov
mov
test
mov
sub
(bad)
call
fiadd
mov
mov
push
hlt
or
sti
cdq
mov
out
mov
adc
arpl
iret
stc
clc
movs
(bad)
arpl
out
test
into
daa
clc
cmp
in
pop
push
jg
xchg
outs
(bad)
push
nop
mov
push
les
popa
(bad)
lods
daa
sbb
retf
dec
push
lock
test
ficom
xchg
sub
mov
xchg
jg
jo
aad
imul
xor
retf
push
xor
add
push
adc
lea
mov
out
stos
xor
data16
cmp
xor
mov
add
mov
xchg
inc
fnstsw
xor
add
push
gs
cmp
cmp
pop
or
pop
js
ja
cmp
pusha
cmp
adc
nop
xchg
sbb
loopne
adc
pop
fsubrp
mov
adc
test
enter
arpl
in
mov
arpl
test
ss
mov
inc
ins
packuswb
add
mul
call
jne
popa
(bad)
test
adc
movs
inc
ret
jb
mov
pop
xor
push
arpl
jb
inc
daa
mov
out
jns
xchg
push
xor
mov
mov
cli
cld
test
imul
cmp
push
(bad)
loop
xor
rcl
bound
cmp
adc
mov
lahf
and
cdq
mov
jmp
inc
sbb
xchg
xchg
cmc
stc
mov
push
adc
sub
mov
les
pop
es
call
stc
pop
out
repnz
lods
jb
imul
(bad)
es
jle
push
add
adc
outs
mov
lahf
sbb
and
loop
ret
rcl
mov
in
push
lahf
neg
xor
jno
mov
pop
push
fdivr
mov
push
xor
ja
xchg
jb
xchg
adc
xor
imul
cmp
fucomp
ss
xchg
imul
xor
cmc
movs
leave
push
dec
and
iret
pop
add
and
xchg
test
rcr
inc
or
lds
or
inc
jge
push
aad
leave
pop
jle
and
mov
mov
inc
inc
push
mov
(bad)
ret
mov
inc
add
jge
add
packssdw
std
and
xchg
test
add
xor
pop
out
addr16
cmc
dec
cmp
out
jg
xchg
test
js
lds
daa
scas
jo
ss
jge
cwde
fisttp
stos
icebp
pop
mov
or
xchg
shr
mov
dec
ds
jmp
rcr
outs
cmc
xlat
inc
xlat
adc
stos
push
cmp
xlat
addr16
mov
aas
mov
popa
jb
sub
mov
fcomp
imul
leave
shl
sub
push
les
addr16
lods
ins
sar
or
add
outs
(bad)
xor
call
sub
add
xor
pop
popa
(bad)
adc
push
(bad)
stc
jbe
mov
stc
mov
aaa
jns
xchg
shr
leave
sub
push
inc
or
add
scas
ins
sub
(bad)
dec
pop
xchg
leave
ja
mov
leave
mov
scas
int3
jo
adc
test
pushf
ins
mov
imul
(bad)
imul
adc
(bad)
shl
add
pop
and
repnz
int3
push
fmul
cs
gs
lahf
xchg
mov
cdq
cmp
pushf
or
adc
mov
test
test
sub
add
std
sub
cmp
adc
dec
arpl
jmp
cli
add
imul
push
jns
xchg
retf
imul
mov
jb
or
aaa
push
adc
ret
scas
aaa
loop
push
fwait
push
push
sub
mov
ins
adc
jne
stc
je
xchg
mov
cli
not
pop
xchg
fidiv
jmp
ss
call
cmp
pop
das
mov
out
sti
pop
lahf
sub
in
xor
stc
fs
jl
mov
xlat
pop
sbb
jmp
pop
jns
push
aam
adc
mov
inc
adc
cli
sar
pop
push
cmp
cmp
push
jmp
retf
inc
xlat
xchg
mov
xchg
xchg
and
or
cdq
sbb
dec
sub
mov
ins
push
out
push
dec
iret
dec
(bad)
(bad)
mov
fwait
shl
pop
fwait
(bad)
sbb
sahf
or
in
jns
ret
inc
mov
daa
mov
xor
cld
hlt
retf
sar
pop
ins
mov
cdq
sbb
iret
aad
jge
jp
in
inc
jns
mov
cmp
dec
shl
ftst
in
ss
jge
push
cmp
xchg
mov
mov
or
out
cmp
out
xlat
mov
cmc
(bad)
mov
repz
and
paddusb
out
mov
and
les
ds
pop
xor
inc
movs
xlat
sub
xchg
inc
leave
ins
push
sub
sub
mov
mov
dec
js
ret
js
rcl
xor
sbb
and
cdq
aas
dec
mov
dec
lock
mov
pop
push
cmp
or
and
test
ins
or
pop
and
fild
addr16
adc
cdq
xor
xor
loop
and
es
shl
adc
inc
rol
jae
adc
sbb
jbe
jno
or
stc
dec
lods
lock
fstp
mov
outs
data16
xchg
mov
inc
adc
(bad)
test
mov
jno
mov
ss
inc
xchg
aad
ss
mov
and
mov
ret
lds
daa
movs
cmc
jge
ret
ins
mov
pop
xchg
stc
and
(bad)
xor
test
lahf
daa
push
popf
cmps
xor
mov
js
mov
add
jg
sub
retf
js
cwde
jns
add
stos
cvtps2pd
(bad)
repz
add
outs
call
fisub
dec
les
pop
test
ds
sbb
cmp
out
pop
pusha
aam
cmp
and
mov
add
xchg
jb
sub
mov
js
jbe
aam
mov
mov
mov
daa
and
movs
stc
dec
lea
push
jae
adc
cmp
pushf
outs
sub
das
movs
(bad)
daa
in
(bad)
test
ss
lods
xchg
in
and
xor
mov
icebp
sub
mov
retf
cld
fcomp
aad
xchg
movs
mov
inc
add
push
inc
and
fldcw
jmp
and
mov
mov
inc
ds
mov
inc
call
jo
pop
cdq
bound
hlt
dec
pop
mov
add
repnz
sub
out
adc
mov
pop
dec
shr
dec
pop
add
stos
call
fld
(bad)
adc
or
add
cwde
mov
test
mov
rcl
shl
cmp
xchg
or
add
fisttp
in
mov
mov
inc
mov
pushf
pop
push
jnp
neg
push
outs
xchg
imul
jno
or
imul
inc
shl
dec
in
cmp
hlt
daa
jne
jb
repnz
in
cmp
arpl
aam
fistp
test
push
sti
movs
sahf
repz
fiadd
dec
inc
pop
fiadd
push
std
xchg
or
xchg
jnp
dec
sbb
add
xchg
adc
mov
arpl
pop
inc
push
sbb
cmp
repz
add
mov
and
imul
movs
push
push
inc
retf
aaa
ins
dec
or
std
stc
and
js
dec
dec
mov
mov
push
dec
dec
stos
call
dec
stc
in
das
or
jae
or
outs
je
sub
cmp
add
and
cmps
mov
mov
sbb
mov
js
dec
add
ja
adc
movs
xchg
inc
inc
xchg
stos
sub
mov
mov
mov
int
in
mov
cmp
fstp
les
add
jl
cs
fwait
rcr
mov
sub
adc
sub
stos
loope
cld
mov
sub
adc
push
jo
cmp
xor
inc
mov
or
loop
pop
cmp
cdq
and
pop
std
cmps
into
loop
ins
movs
sti
addr16
stos
in
je
xor
jnp
or
int
mov
push
loopne
test
sub
xor
movs
mov
and
scas
out
pop
test
cmps
sti
(bad)
mov
ja
daa
in
fdiv
imul
inc
sbb
das
push
dec
and
js
or
cli
rcl
or
mov
adc
mov
fisub
push
int
hlt
and
push
imul
fldcw
and
mov
popf
mov
mov
cld
je
mov
je
jbe
cmps
mov
jmp
add
data16
mov
sub
ss
repz
pop
scas
aam
cmp
push
cmp
jmp
(bad)
mov
xchg
lods
sbb
dec
test
inc
ror
nop
xor
pop
xor
scas
out
pop
mov
adc
jmp
mov
in
jns
inc
push
mov
ds
div
out
mov
xchg
jmp
iret
jl
lods
mov
dec
jp
mov
ins
shl
imul
ret
push
bound
xor
push
mov
pop
pop
and
jl
outs
cmp
push
pusha
dec
pop
xor
stos
mov
mov
scas
sti
inc
pusha
sbb
or
iret
xor
mov
fisttp
in
push
dec
and
mov
push
(bad)
xchg
jno
in
or
jne
aam
repz
and
add
scas
ins
icebp
push
mov
jg
jp
lds
xor
fmul
ins
outs
stos
mov
ror
int3
or
sbb
mov
sbb
stos
lahf
out
int
push
cmps
add
ret
cmp
fisttp
cmp
test
pop
mov
adc
lea
and
adc
test
pop
out
adc
add
dec
pop
sub
xchg
mov
jp
mov
adc
imul
sub
mov
jmp
sysenter
lahf
test
jge
dec
les
std
dec
add
movs
in
and
out
inc
inc
movs
push
or
mov
imul
pop
or
cs
jmp
in
push
outs
int3
mov
xchg
xchg
(bad)
jb
jbe
and
ficomp
je
inc
pop
jbe
mov
mov
jne
push
aaa
iret
mov
push
xchg
cmp
add
idiv
push
mov
dec
push
xor
adc
inc
mov
cdq
xchg
mov
sub
pop
xchg
jg
mov
int3
adc
jmp
xchg
sub
sub
mov
test
xchg
adc
inc
fst
jp
pop
cdq
or
jp
adc
pop
mov
xchg
jp
mov
inc
pop
hlt
jl
in
sar
add
adc
push
hlt
fcom
sub
(bad)
shl
xchg
das
popa
cs
loop
cdq
aas
cmp
add
ins
or
pop
or
pop
in
imul
or
xor
jne
jp
xor
retf
adc
jecxz
cmp
mov
leave
or
mov
inc
stos
xlat
mov
xchg
dec
dec
bound
mov
leave
mov
pop
rol
mov
in
lods
add
jae
xor
cmp
dec
out
loop
cmp
ret
outs
sysenter
arpl
repz
xchg
cmovp
xchg
mov
add
cmp
outs
fcomp
dec
jmp
dec
outs
ret
fwait
popf
lods
in
cmp
mov
xlat
xchg
scas
dec
ror
jnp
ficom
(bad)
ss
aas
mov
jb
sbb
aas
or
sbb
aas
fisubr
jmp
push
dec
fistp
or
out
aas
mov
xor
cmp
dec
cli
retf
adc
lds
and
cld
mov
lea
mov
jmp
sti
sbb
mov
adc
jae
sbb
adc
in
and
xor
mov
jbe
icebp
jb
(bad)
jmp
retf
dec
sub
ins
sti
loopne
mov
test
test
cli
adc
test
adc
test
fwait
in
mov
mov
rol
fstp
pop
cmp
nop
and
jne
or
push
inc
jmp
repnz
iret
adc
pushf
rcr
pop
dec
je
mov
call
jmp
sti
add
xlat
leave
dec
mov
mov
fxch
mov
jecxz
scas
ins
mov
fidiv
mov
outs
ins
jns
scas
ret
es
(bad)
(bad)
pop
imul
pop
pusha
mov
push
das
mov
mov
fwait
mov
push
lods
push
jmp
xor
sub
es
xchg
ja
xchg
data16
push
xchg
int3
fild
mov
imul
pop
shl
pop
mov
pop
sbb
ret
dec
rol
jae
les
vmulpd
sbb
retf
push
mov
js
je
sub
int3
into
push
gs
pmulhw
add
test
dec
add
mov
icebp
sub
cwde
shl
mov
movs
daa
hlt
popa
aam
popa
dec
sbb
aad
cs
rcl
lea
imul
xchg
retf
shl
pop
xchg
hlt
aaa
cmp
sar
xor
or
aam
mov
adc
jae
push
rol
(bad)
xor
cwde
imul
add
or
jg
rcr
lea
cli
loopne
add
mov
mov
and
mov
outs
imul
sub
enter
sbb
inc
mov
int3
ins
sbb
arpl
inc
ret
jge
mov
pop
and
sub
fisub
call
call
add
jmp
hlt
cmp
push
mov
pop
lahf
mov
hlt
ret
(bad)
(bad)
push
and
lahf
ja
push
jae
(bad)
rol
pop
push
dec
cs
xor
mov
popf
cdq
(bad)
dec
stos
jae
sbb
es
mov
push
mov
xor
mov
cmp
sbb
cmps
sub
sub
out
mov
inc
and
js
outs
ror
add
fimul
scas
outs
sub
imul
int3
cdq
aaa
cmps
inc
ins
cmp
push
mov
popa
daa
es
xchg
movs
out
lock
movs
movs
pop
(bad)
(bad)
std
jp
lods
inc
adc
jmp
scas
lahf
pop
mov
shr
dec
rol
mov
(bad)
xor
loop
mov
add
ja
and
mov
mov
cmovne
dec
xchg
push
cli
adc
sub
scas
repnz
jmp
sbb
mov
mov
xlat
pop
mov
ret
mov
jno
ins
mov
cmp
or
data16
(bad)
ror
add
in
imul
ins
push
jl
push
arpl
jle
clc
xchg
xchg
mov
mov
leave
push
pop
jmp
inc
sbb
pop
pop
test
loopne
scas
sbb
sbb
inc
pop
popf
out
or
cmp
addr16
jmp
test
dec
pop
mov
movs
lahf
dec
cmp
jmp
add
scas
dec
fdiv
aam
int3
les
stos
cmp
push
imul
dec
lock
pop
and
cmp
add
sub
iret
push
vpcomw
test
inc
sub
dec
add
out
dec
pop
dec
mov
ins
fdivr
mov
arpl
ja
aas
rcl
in
lock
cmc
and
retf
mov
or
jnp
sti
out
xchg
loop
mov
jp
inc
jae
cmp
int3
xor
xor
fimul
push
mov
punpckhbw
iret
sbb
add
mov
jmp
pusha
jbe
or
sar
cmp
(bad)
add
adc
repnz
lock
neg
pop
stos
push
fisub
fs
jl
cli
mov
ds
add
jns
dec
push
mov
ss
xchg
aaa
add
mov
sub
imul
in
or
imul
xor
ins
sub
sub
xor
mov
push
xor
int
add
pop
maskmovq
mul
and
mov
fs
int
hlt
dec
push
adc
mov
pop
scas
mov
sbb
pop
mov
or
call
shr
cld
ja
mov
test
adc
enter
out
and
mov
movs
add
sbb
not
test
push
or
pop
dec
add
jmp
push
and
call
sbb
inc
adc
xor
fisub
mov
repnz
mov
or
cmps
dec
mov
mov
enter
cld
fs
xor
into
jecxz
scas
mov
xor
retf
mov
es
outs
add
xlat
lds
js
add
out
mov
xlat
call
int
das
popa
retf
scas
lock
out
or
mov
jmp
xor
xor
mov
jb
fst
mov
cmp
cwde
or
mov
hlt
out
shl
mov
xor
push
cmp
mov
enter
(bad)
mov
mov
jno
call
pop
rcr
jl
xchg
cmps
or
movs
sub
daa
mov
pop
addr16
pop
aaa
out
cmp
xor
ja
rol
xor
dec
pushf
ss
stos
mov
movs
jl
inc
or
cmps
pop
mov
ins
jne
or
(bad)
xor
or
fiadd
ret
inc
cmp
mov
cwde
mov
pushf
mov
repnz
cwde
(bad)
push
popf
arpl
cmps
add
(bad)
pop
movs
sbb
inc
out
xchg
cdq
(bad)
push
jmp
into
nop
in
sbb
sub
jne
xor
jmp
scas
out
inc
pextrw
and
push
jle
pushf
mov
out
mov
mov
or
cs
js
sbb
sub
aam
inc
test
mov
sub
stos
aam
test
ins
pop
inc
outs
cmps
mov
sbb
adc
push
ror
pop
mov
in
and
jnp
sbb
pop
fdiv
xor
in
mov
(bad)
lds
or
call
shl
aas
inc
imul
lods
loope
sub
sbb
xchg
adc
fcomip
add
rcl
inc
sub
and
lods
ja
imul
jbe
repz
call
inc
ss
or
aas
dec
cmps
jb
(bad)
cmove
out
or
fucomi
mov
cmp
jp
adc
push
mov
push
dec
push
push
mov
cmp
scas
in
retf
scas
dec
xchg
aas
jge
jnp
and
jl
std
jle
lea
(bad)
in
pop
push
out
sub
out
jge
punpckhdq
push
add
and
sbb
dec
xchg
imul
test
cmps
push
push
mov
outs
mov
loope
mov
retf
and
dec
adc
movs
out
test
ret
push
or
jae
add
or
jmp
inc
arpl
mov
ficom
sub
popf
or
aad
jb
fcomp
test
js
sbb
jl
in
loop
movs
das
and
jmp
scas
mov
cmc
pop
cmp
std
loop
xor
xchg
or
(bad)
jmp
in
iret
adc
adc
cmp
add
into
sar
ret
mov
pushf
in
and
cmps
xchg
aad
fstp
das
cmps
push
dec
xchg
inc
stc
xlat
call
loopne
bound
nop
jmp
dec
dec
ret
push
test
ror
mov
fsubp
pusha
dec
sahf
xor
aam
jnp
mov
scas
mov
jb
mov
fisubr
jbe
adc
mov
mov
call
movs
dec
xchg
ret
enter
ins
popa
sbb
in
jp
loope
(bad)
loopne
pop
and
shl
jmp
int
push
cmp
cld
add
dec
pusha
aad
cmp
jae
int
or
xchg
push
stos
add
ins
cmp
mov
push
jp
and
lods
iret
sbb
mov
sbb
jle
sbb
movs
push
pandn
xchg
test
push
mov
jge
push
xor
dec
mov
adc
sub
and
stos
out
scas
das
cmc
stc
movs
out
aad
sti
xor
pop
inc
fcom
mov
cmp
mov
cmp
push
and
xlat
movs
sub
loop
and
repz
into
mov
fcom
test
popa
aaa
xchg
sbb
rcl
loop
pop
out
mov
xor
mov
int3
sar
pop
lock
ja
outs
shr
adc
or
test
cdq
(bad)
popa
mov
adc
cli
sub
xor
cli
push
xor
test
daa
mov
sub
out
rol
cmps
fnsave
out
or
jbe
inc
sbb
pop
mov
cld
jmp
mov
in
ret
xor
jge
loopne
sub
mov
cmp
pop
(bad)
fisubr
dec
xor
test
mov
lods
or
fs
adc
push
pop
mov
jmp
shl
dec
sti
cmp
dec
or
les
xchg
out
enter
adc
call
cmp
lods
bound
jne
fwait
mov
push
jp
scas
pushf
fdivr
mov
mov
jb
mov
lds
pushf
sahf
xchg
jb
out
dec
test
clc
out
jno
mov
jnp
leave
pop
xchg
and
stc
pop
rol
outs
mov
jmp
dec
pop
test
dec
jmp
inc
in
aaa
out
test
fstp
mov
inc
cwde
sub
pop
mul
pop
dec
dec
lods
popa
fcom
add
cmp
add
dec
call
cli
xlat
icebp
push
imul
dec
push
fs
mov
movs
xor
(bad)
retf
rcr
mov
out
loop
sbb
and
inc
inc
push
cmp
inc
and
cld
das
inc
jb
inc
imul
xor
add
jbe
(bad)
sub
pop
nop
out
mov
ins
scas
movs
add
out
or
fxch
fidivr
test
inc
fs
retf
jo
push
scas
mov
cmc
pop
or
enter
cmp
push
test
pop
mov
leave
lods
jne
cdq
dec
mov
inc
dec
dec
adc
mov
or
adc
jg
xor
mov
popa
aas
jae
pop
sahf
jae
push
add
xor
jg
push
or
enter
test
push
push
and
mov
out
in
mov
sti
loope
sub
out
mov
push
les
adc
jae
shr
add
xor
movs
not
pop
fisttp
repz
popa
dec
test
inc
lahf
fmul
cli
out
and
(bad)
pop
xchg
pop
mov
fdivp
adc
dec
test
inc
xchg
inc
std
sub
cmc
in
xchg
iret
inc
ss
out
mov
cli
hlt
inc
fcomp
pop
sbb
xchg
in
loop
and
cs
xchg
loop
jo
adc
pop
and
push
xchg
sub
fsub
ins
call
push
xlat
jb
or
push
test
ja
push
and
push
(bad)
sahf
gs
cs
push
adc
pop
xchg
ins
jnp
int
ins
mov
fcomp
rcl
and
adc
sub
movs
imul
or
inc
fidivr
dec
or
jmp
scas
lods
xchg
push
fisttp
mov
push
outs
mov
or
retf
imul
loop
xchg
add
dec
add
cld
je
xor
cmp
add
mov
add
push
mov
dec
xchg
scas
jp
or
adc
fnop
sbb
jmp
xchg
mov
into
sti
mov
enter
sbb
dec
test
fcom
sbb
pop
and
inc
jmp
sbb
dec
(bad)
in
aaa
ins
jl
and
inc
in
xchg
lock
inc
dec
popa
cmp
std
iret
push
call
add
pop
push
imul
(bad)
cmps
lods
cmp
fist
cmc
sahf
push
movs
rcr
ins
mov
je
sbb
mov
or
loopne
or
jo
jns
sub
cli
push
out
xchg
in
ds
sub
fcom
mov
test
fild
xor
mov
std
(bad)
pop
test
dec
xor
cld
out
mov
ror
cli
pop
loopne
adc
lods
add
test
jp
js
movs
mov
(bad)
cmps
inc
int3
(bad)
dec
add
push
psubsb
js
add
fdivp
or
outs
dec
fs
push
inc
dec
in
push
mul
jle
cwde
(bad)
dec
dec
add
int3
icebp
mov
fsubr
add
in
xor
aaa
inc
les
scas
rcl
call
pop
scas
or
aaa
shl
mov
shl
movs
pop
and
retf
inc
das
cmp
(bad)
(bad)
pop
pop
add
test
int3
ror
sub
dec
int
cmps
xchg
xchg
mov
imul
fs
stc
popf
push
xlat
mov
pop
xor
and
sub
add
or
les
add
js
inc
inc
leave
fisttp
or
cli
and
xchg
stos
in
push
arpl
jbe
and
lods
xchg
sub
adc
nop
je
push
jae
adc
xor
imul
lock
or
push
movs
jo
jl
mov
faddp
sbb
call
cmp
repz
push
mov
mov
jbe
aas
pusha
push
cmp
dec
sub
mov
dec
jnp
and
and
or
push
adc
fmul
inc
add
pop
mov
and
out
jno
add
retf
adc
dec
xchg
retf
xchg
mov
inc
add
int
gs
xor
or
test
cmp
push
adc
cwde
(bad)
gs
jge
jns
mov
ror
mov
ss
retf
jae
aas
push
and
fidivr
jno
cmp
stos
mov
jl
(bad)
les
xor
jnp
ffreep
xchg
in
out
xor
and
push
repz
call
aam
mov
jge
and
push
cdq
mov
pop
mov
xor
add
ror
pop
and
mov
sahf
jo
ins
jl
sub
mov
sbb
push
jnp
test
or
es
sbb
xor
xor
mov
push
xor
mov
ins
sub
pop
aas
outs
cmp
js
xchg
into
(bad)
leave
mov
test
push
rcr
mov
mov
hlt
cmp
push
cmp
daa
imul
lock
aam
in
pusha
sbb
mov
test
adc
mov
xchg
daa
jne
fsubr
out
hlt
jp
ds
retf
mov
and
shl
scas
xchg
fs
mov
repnz
inc
dec
adc
ins
xlat
jnp
push
sub
cli
xor
sub
mov
loopne
inc
leave
bound
in
push
mov
aas
pushf
rol
repz
movntq
out
pop
jno
xchg
add
adc
movs
dec
pop
icebp
pop
popa
jae
popf
jno
cmp
jnp
mov
lds
add
push
mov
iret
fimul
adc
cmp
add
sub
scas
out
stc
retf
jmp
cmp
add
out
or
or
ret
lods
xor
push
adc
push
js
cmp
popf
lahf
jmp
(bad)
jg
mov
adc
(bad)
adc
outs
jl
or
rol
out
sbb
iret
push
or
sub
test
xor
xor
cld
aam
mov
imul
mov
pop
iret
outs
push
xchg
add
loop
sbb
js
add
(bad)
rep
int3
push
lea
movs
xor
iret
icebp
jnp
and
cli
pop
sub
(bad)
push
jmp
inc
jae
sub
popa
lods
out
imul
dec
imul
mov
pop
into
dec
enter
cli
push
movs
cs
jmp
lock
mov
mov
shr
sti
mov
xor
retf
int3
mov
pop
pop
mov
pop
sub
repnz
mov
or
add
jl
and
popa
imul
aaa
and
popf
addr16
loop
(bad)
dec
dec
mov
lea
mov
mov
sbb
sub
or
lds
jbe
or
cmps
in
aam
call
push
popf
fld
repnz
jae
xor
adc
cmps
stc
cmp
mov
punpcklwd
mov
adc
icebp
push
jb
jg
add
enter
jns
pop
rcr
retf
jne
aaa
jg
mov
and
loope
aas
aas
test
sar
mov
jno
dec
pop
xchg
cmc
xchg
outs
std
pop
out
rcr
xor
and
(bad)
xor
and
dec
or
push
inc
mov
pop
dec
push
icebp
stos
add
out
dec
push
call
xor
pushf
push
mov
ficom
movs
das
sbb
adc
repnz
ins
mov
sub
nop
cmp
popf
ja
daa
repz
push
sub
jecxz
cmp
adc
pop
add
rcl
push
xchg
xchg
pop
in
rcl
push
xchg
sub
mov
ja
dec
add
adc
sar
hlt
mov
loop
inc
sbb
pusha
sbb
jns
cmc
lsl
cld
cld
jge
pop
sbb
ficomp
not
loopne
mov
outs
loope
add
mov
jmp
out
and
and
jmp
xor
ffree
(bad)
push
push
in
and
gs
xor
mov
rcr
xchg
adc
pop
pop
add
xchg
bndldx
pop
inc
scas
and
ret
cdq
test
(bad)
cmp
cmp
push
sub
jg
cmps
(bad)
(bad)
jp
jnp
out
daa
inc
in
pop
cmp
rcr
fwait
test
cwde
hlt
adc
and
dec
fdiv
call
push
pushf
xlat
xor
cmp
lods
xlat
xchg
int3
in
jecxz
(bad)
xchg
mov
(bad)
shl
ja
shl
xchg
stos
dec
and
pop
clc
int
cli
and
fnstcw
lods
fwait
sbb
test
aad
mov
and
push
loop
mov
mov
into
add
dec
adc
std
addr16
dec
push
ror
in
fs
mov
hlt
push
dec
in
mov
mov
outs
dec
push
fisubr
cmp
or
jae
mov
and
retf
mov
movs
cs
push
inc
add
dec
dec
dec
idiv
jns
or
ins
xlat
pop
push
icebp
xor
(bad)
sar
add
(bad)
mov
ds
fnstenv
lods
inc
adc
adc
imul
push
cmovnp
mov
sub
pop
mov
rcl
inc
cmp
mov
sar
repnz
push
mov
imul
rcr
dec
cmp
or
retf
ficom
(bad)
dec
mov
aad
xor
test
and
mov
mov
jmp
mov
mov
aad
add
or
adc
mov
popa
dec
lods
adc
iret
mov
(bad)
mov
xchg
fstp
call
push
test
dec
xor
jne
shl
in
cmp
scas
adc
arpl
xchg
sbb
pop
cmp
fmul
lods
xlat
loope
je
aaa
arpl
sti
mov
push
dec
push
ins
sbb
pop
(bad)
adc
mov
xchg
pushf
mov
cs
jno
mov
aad
mov
iret
cdq
cmp
or
mov
psubusb
or
ss
and
xchg
shr
sbb
mov
pushf
sbb
sbb
neg
cmp
push
(bad)
iret
mov
ins
xor
fisttp
(bad)
mov
xchg
into
cmp
je
or
jnp
mov
dec
push
mov
jmp
out
dec
xchg
cs
int3
cmps
adc
fsubr
mov
pop
cmp
aaa
pop
mov
xchg
nop
pusha
push
xlat
retf
leave
pop
in
into
test
stos
imul
mov
xor
aad
sar
adc
in
push
adc
pop
jmp
jb
mov
shl
bound
ins
mov
test
push
loopne
jns
(bad)
mov
cmovge
lds
cld
rcr
cmp
fs
sti
pop
jg
and
cs
(bad)
jae
jecxz
cwde
xchg
ins
ss
xchg
mov
ror
aas
in
sub
inc
xor
sub
sbb
fbld
and
(bad)
jle
lods
dec
push
fmul
(bad)
mov
jmp
mov
pop
sar
xor
imul
call
push
fimul
mov
adc
pop
lahf
mov
fsubrp
xlat
pop
movs
(bad)
mov
inc
dec
int3
test
js
ret
dec
or
div
stos
mov
jo
mov
mov
rcl
add
sahf
sub
dec
fdiv
xchg
dec
pop
repz
xchg
ret
(bad)
(bad)
out
push
ja
gs
fdiv
call
xchg
lahf
xchg
sysret
ja
cmp
hlt
cs
ds
xchg
cmps
and
push
test
pop
xchg
test
or
push
pusha
cmp
xor
pop
mov
stos
lock
ret
xor
stc
hlt
sbb
retf
jmp
xor
frstor
leave
add
in
rcr
dec
lods
push
scas
dec
push
scas
js
popa
dec
and
aaa
mov
movs
test
sub
and
and
ins
mov
(bad)
icebp
in
movs
fmul
adc
sub
aaa
sbb
xor
int
mov
pop
mov
adc
inc
or
das
jle
adc
scas
sbb
cmc
sub
clc
out
pusha
lock
push
inc
mov
mov
adc
int3
loope
and
adc
sbb
inc
fwait
repz
push
lock
pop
push
and
out
xchg
ss
mov
shl
xchg
jb
jb
sbb
cmps
js
cmp
inc
addr16
outs
bound
in
movs
and
leave
adc
mov
retfw
xchg
iret
mov
inc
dec
xchg
add
sbb
xchg
mov
jns
in
pushf
retf
mov
ret
jmp
leave
je
in
test
xor
stc
fst
(bad)
mov
dec
sbb
mov
push
adc
test
sahf
dec
and
and
rol
shr
add
sti
lahf
pop
idiv
lods
(bad)
loop
mov
xchg
or
aas
lods
push
inc
add
cmp
adc
dec
adc
test
retf
scas
push
retf
add
jnp
dec
cmps
repz
push
or
push
mov
lods
pop
mov
je
je
and
mov
jmp
mov
sbb
mov
enter
add
pop
add
jbe
pop
cmp
ins
out
mov
cmp
neg
je
dec
iret
scas
push
mov
rol
mov
or
xlat
jle
out
imul
pop
or
sub
add
cdq
add
test
ja
lods
xchg
jmp
iret
rol
dec
cmc
mov
cmc
arpl
or
cmp
aad
outs
std
les
fadd
sbb
sbb
sahf
cmp
outs
mov
or
xchg
jg
push
frstor
dec
xor
mov
out
nop
push
inc
cmp
jp
(bad)
mov
fidivr
pop
dec
jns
shr
hlt
loope
or
or
jle
(bad)
fcom
int3
gs
fild
nop
fiadd
out
into
push
mov
dec
aas
add
xor
inc
adc
sub
sti
outs
xchg
cs
leave
xor
mov
shl
mov
hlt
mov
pop
pop
cmovbe
les
xor
sub
ds
es
dec
les
sbb
cmps
mov
pop
jb
xchg
popa
mov
and
xchg
jo
dec
(bad)
pusha
dec
enter
jns
stos
or
es
add
stc
mov
add
sub
cld
xor
and
loop
mov
and
dec
rcl
mov
leave
mov
push
mov
dec
lods
hlt
aam
mov
adc
inc
dec
scas
mov
pushf
popf
out
and
aaa
xor
cmp
mov
icebp
push
cmova
add
imul
outs
clc
aas
out
xor
adc
arpl
sbb
out
pop
adc
ja
js
in
sub
mov
shl
xor
dec
sub
push
inc
cdq
or
or
or
pushf
inc
jne
cmps
jmp
mov
cmp
mov
push
ficomp
arpl
pop
cwde
xor
jecxz
mov
inc
xchg
rcr
inc
push
xor
xchg
ret
fstp
adc
stos
xchg
retf
xchg
cdq
stos
ss
out
and
mov
into
push
mov
es
gs
test
ret
lahf
push
sti
out
test
jae
pop
daa
jmp
popa
fidivr
sbb
add
mov
push
mov
loope
xlat
(bad)
ror
inc
add
mov
mov
add
in
and
or
ret
mov
nop
(bad)
pop
mov
outs
pop
xchg
push
lds
movs
sub
push
push
xor
push
ror
mov
jge
jbe
rcl
rcl
ds
mov
fxch
adc
inc
fmul
push
and
ja
call
push
out
inc
cli
xchg
dec
call
(bad)
cmp
fdiv
(bad)
out
mov
xchg
add
dec
mov
gs
fcom
xor
xor
push
mov
mov
shl
rcl
cld
out
shl
fist
movs
or
sub
xchg
sbb
cmp
dec
retf
stos
mov
das
xor
or
or
int3
inc
xchg
mul
pop
fldenv
push
push
outs
pop
mov
outs
mov
adc
mov
xchg
jns
xlat
cwde
dec
cmp
aas
jnp
mov
xchg
lods
jo
bound
inc
sbb
jo
jge
push
xchg
ins
push
daa
je
call
out
fidivr
pop
push
cmp
pushf
sub
or
adc
shl
mov
mov
dec
mov
(bad)
sub
lock
loope
jmp
lea
push
adc
pop
cld
push
pop
(bad)
cmp
dec
fcomp
add
les
mov
jae
test
adc
jecxz
rol
xchg
ja
addr16
mov
xchg
cmp
ds
dec
and
add
data16
daa
xor
xor
ins
dec
(bad)
cmp
push
iret
hlt
xchg
imul
or
or
fdivr
xor
cld
add
popf
inc
mov
test
sti
or
not
dec
and
push
push
je
iret
nop
fldcw
popf
(bad)
pop
fbld
adc
push
xchg
pop
stos
retf
aas
adc
jmp
sub
xor
iret
stc
imul
int3
add
cli
jae
or
cmp
pop
aam
in
xor
adc
scas
sub
loope
call
cwde
sbb
scas
pop
loopne
mov
add
(bad)
imul
repnz
add
ins
in
cmps
scas
das
mov
test
cld
cmps
push
ins
xor
fist
dec
fsubr
mov
cdq
daa
add
fmul
cmp
sub
mov
pushaw
xchg
pop
dec
xchg
mov
mov
jmp
int3
mov
aam
xor
outs
push
xchg
or
outs
iret
and
dec
mov
fwait
ds
sub
mov
xor
sbb
or
jge
pop
add
das
mov
mov
push
mov
aad
rcl
or
dec
ret
rol
xor
xchg
jmp
outs
xchg
cwde
xor
xchg
repnz
cli
sub
rcr
jp
(bad)
cmp
mov
mov
cmps
lds
mov
ja
xchg
repz
mov
mov
ins
or
jge
sub
pop
test
ret
popa
(bad)
xor
add
xchg
out
ss
lock
push
or
pop
sahf
mov
pop
daa
(bad)
loop
pop
stos
fs
mov
add
pop
data16
dec
loop
or
shl
arpl
inc
cmc
sti
or
std
xchg
jnp
out
and
mov
popa
out
outs
je
mov
enter
fist
movs
in
stos
cmps
fistp
sub
sahf
inc
pushf
fist
or
inc
out
loope
mov
imul
cli
jnp
xchg
ja
sub
(bad)
aam
test
jnp
lods
inc
loopne
jp
ror
popf
sti
or
cli
cmp
std
shr
add
shl
add
scas
lds
xor
jne
es
push
inc
bound
test
jo
push
add
xchg
mov
in
dec
xchg
cwde
sbb
loope
scas
scas
in
sbb
add
jge
in
dec
sub
nop
jmp
push
and
dec
add
mov
push
sub
js
pop
sub
ret
retf
lds
out
pop
ror
fs
mov
inc
cdq
cmp
inc
cmp
arpl
ret
mov
in
mov
mov
push
or
push
js
loop
push
sbb
xor
dec
adc
fist
add
outs
mov
xlat
nop
loopne
(bad)
sbb
pusha
push
scas
stc
adc
add
mov
loop
hlt
sbb
inc
or
mov
pop
dec
aam
xchg
jno
fsubp
xlat
jb
(bad)
xor
mov
and
add
in
je
repz
jp
into
cmp
adc
test
jge
inc
cld
mov
call
sub
pop
clc
xchg
aas
nop
and
and
cmps
sub
mov
dec
push
movs
out
nop
mov
mov
retf
into
mov
rol
std
fcmovb
pop
fiadd
mov
aas
aam
movs
out
jnp
cmp
or
push
push
and
push
popa
(bad)
cld
xchg
sbb
aas
sbb
xchg
in
arpl
fist
xchg
lea
sahf
mov
pop
inc
adc
lods
pop
xchg
and
jmp
(bad)
popf
cmc
(bad)
aaa
mov
sub
(bad)
pop
nop
cmp
shl
sbb
push
lods
das
pop
sub
xchg
mov
mov
outs
jl
inc
jb
dec
cdq
add
jge
cmp
jns
adc
push
push
pop
push
cld
int
jno
dec
jnp
mov
popf
ins
sub
dec
mov
fbld
and
xchg
dec
out
call
lods
jg
repz
test
mov
add
xchg
in
dec
mov
add
(bad)
cli
mov
or
pop
(bad)
lock
fnstcw
mov
dec
dec
clc
jnp
mov
lds
mov
stos
(bad)
stos
or
bound
pop
lea
push
push
and
or
sbb
fs
retf
cmp
and
cmps
retf
loope
lock
inc
add
in
ret
xchg
imul
adc
pop
jmp
icebp
addr16
outs
push
mov
(bad)
std
inc
push
out
inc
sbb
test
ds
xor
xlat
(bad)
mov
xor
pop
outs
mov
lea
cmps
mov
out
stos
clc
sti
push
ret
push
cmp
xchg
in
popf
dec
push
dec
jb
adc
cs
push
fild
pusha
imul
or
cmps
push
or
imul
fld
shl
xor
add
jns
cmp
jg
mov
mov
or
or
or
mov
jne
and
xchg
inc
mov
call
mov
mov
fdivr
in
mov
jne
std
aam
inc
test
push
push
or
push
arpl
adc
pop
(bad)
pop
xor
and
sbb
test
sub
aas
aaa
out
push
push
je
adc
scas
pusha
movs
sti
dec
(bad)
out
push
test
cmp
fstp
das
add
inc
outs
xchg
mov
bound
ror
and
mov
ficom
xor
or
pop
xchg
stos
or
clc
call
in
push
aaa
ins
pop
jae
or
shl
cli
or
rsm
cmp
add
inc
out
pmaxub
loopne
mov
sub
sahf
push
fwait
stos
jmp
mov
jg
push
test
int3
adc
add
sbb
push
adc
call
repnz
pop
xchg
or
enter
push
mov
xor
jl
xlat
clc
test
inc
xor
jbe
sub
xor
neg
sub
lods
inc
xor
mov
jbe
sti
enter
outs
pop
shl
xor
(bad)
scas
hlt
cwde
shl
add
iret
xchg
push
fst
clc
sub
not
leave
aaa
int3
hlt
lea
sbb
lods
and
icebp
mov
mov
(bad)
jmp
add
add
mov
jo
aas
mov
mov
movs
(bad)
loop
lock
shl
loope
xor
pop
mov
jb
inc
inc
in
es
jnp
jge
jbe
scas
xchg
mov
sti
cmp
stos
xor
sub
adc
dec
inc
mov
data16
sti
dec
adc
jp
adc
add
je
xor
inc
fst
xor
out
push
adc
lods
pop
loopne
adc
fldcw
inc
fcom
stos
ds
ja
pop
inc
(bad)
mov
mov
cmp
and
pusha
mov
inc
fs
sbb
in
sbb
xlat
icebp
mov
sub
mov
xor
adc
outs
test
call
push
imul
push
or
mov
pop
mov
push
xchg
or
or
push
push
dec
push
mov
pop
fistp
pop
sbb
dec
push
int3
jb
in
data16
popa
hlt
adc
or
sahf
mov
jmp
out
je
sub
xchg
push
pop
jp
push
pop
sti
adc
pop
stc
arpl
adc
xchg
cmp
call
and
out
ins
arpl
scas
mov
push
dec
fdivr
mov
addr16
cmps
fdivr
ins
arpl
and
stos
cmp
fcomp
cmp
scas
adc
adc
push
std
mov
aad
fidivr
ret
shr
popa
push
xchg
dec
jne
call
or
and
add
xchg
dec
call
mov
fisub
pop
dec
pusha
in
sub
mov
stos
and
dec
scas
repnz
fs
inc
inc
mov
jbe
cmp
jge
push
adc
sbb
shl
mov
cld
out
daa
push
lahf
imul
sbb
sub
pushf
pop
sub
out
push
sbb
add
jge
mov
repz
jne
out
mov
es
cmp
xchg
pop
mov
(bad)
or
mov
imul
xor
push
loop
lods
cmp
adc
(bad)
dec
pusha
add
xor
sbb
xchg
jnp
jbe
jle
or
or
xchg
(bad)
push
mov
fdiv
test
out
imul
cmps
sub
mov
mov
push
shr
clc
in
inc
loopne
lods
rol
mov
fist
mov
out
cmp
cmp
inc
adc
dec
test
or
adc
xor
jbe
lods
push
xchg
push
cmps
jb
test
data16
shr
data16
sbb
and
rcr
pop
push
(bad)
jge
in
iret
xor
fisttp
jbe
js
jl
jecxz
retf
fwait
in
add
cmp
xlat
es
xchg
sbb
ficom
shl
jb
mov
fadd
sti
jecxz
add
mov
in
jo
movs
xlat
imul
add
das
add
mov
xor
lea
std
push
mov
mov
xchg
xchg
neg
jne
push
mov
jp
jmp
adc
aaa
cwde
dec
outs
test
es
cmp
sub
jno
scas
mov
(bad)
and
stos
fild
leave
dec
out
inc
std
mov
jns
xor
les
int
jge
push
bnd
sbb
cmp
cli
xchg
ss
hlt
mov
dec
cmp
push
into
sar
loop
(bad)
and
js
push
mov
cwde
cdq
sub
mov
inc
or
and
jp
rcl
xchg
sar
leave
imul
xchg
add
jecxz
(bad)
out
popa
add
xlat
mov
inc
test
and
iret
dec
or
aaa
and
sub
lods
mov
or
imul
mul
cwde
cmp
in
jae
aaa
(bad)
into
iret
push
cmc
mov
adc
pop
push
and
jecxz
mov
int
int
retf
shl
mov
fisttp
test
push
out
fst
(bad)
(bad)
pop
or
xchg
repz
fnstcw
ins
loop
(bad)
enter
mov
push
adc
not
cmp
out
jne
adc
repz
repz
mov
mov
pop
mov
sub
int3
test
pop
and
push
inc
outs
sbb
cmc
jne
inc
mov
xchg
rcl
rol
inc
fs
inc
mov
xchg
xor
adc
mov
(bad)
ss
inc
cs
fwait
xchg
lahf
adc
add
clc
repz
outs
and
inc
iret
sub
cmps
mov
xadd
inc
dec
cdq
inc
(bad)
jmp
in
and
popa
stos
lods
ret
mov
push
or
push
mov
inc
aaa
xor
bound
dec
mov
pop
cdq
mov
sbb
jle
mov
xor
dec
xor
dec
pop
repz
sub
and
(bad)
cmp
inc
xor
sub
leave
pop
xlat
xchg
test
inc
mov
push
jp
pop
dec
cmp
push
les
jge
xor
adc
enter
es
xchg
outs
(bad)
je
xchg
mov
fs
or
dec
stos
xchg
cwde
jne
jmp
cmp
pop
sbb
loopne
xchg
jns
mov
add
rcr
addr16
dec
(bad)
sti
out
dec
fcom
add
ret
(bad)
xor
jl
in
xor
inc
test
test
es
xchg
sub
cmps
cmp
mov
pop
push
sub
out
ret
aam
jl
xor
dec
sahf
out
ror
jae
(bad)
and
pop
xor
jle
rcl
ds
dec
nop
adc
push
call
xchg
bound
xchg
repz
inc
pop
call
sub
pop
loop
jg
arpl
hlt
jbe
mov
xchg
adc
rcl
mov
int
test
mov
cld
xchg
repz
das
test
fwait
js
adc
add
mov
scas
popa
imul
movs
sub
jbe
je
fwait
and
mov
inc
(bad)
and
leave
dec
int
jmp
and
jmp
mov
xchg
repz
pop
stos
adc
push
shl
std
(bad)
cmps
and
out
ss
add
inc
push
fldcw
pusha
push
pop
or
push
jbe
gs
adc
(bad)
lods
pop
iret
(bad)
out
pop
pop
push
sub
jo
or
(bad)
xchg
test
mov
and
xchg
xchg
sti
push
inc
and
dec
sar
mov
xor
jl
mov
je
pop
mov
xlat
mov
ins
aas
inc
dec
fwait
adc
xchg
rcl
inc
cmp
shl
outs
xor
scas
mov
adc
mov
and
mov
outs
lock
jo
shl
xchg
mov
outs
mov
ror
inc
xchg
mov
inc
imul
sbb
idiv
jne
xor
pop
dec
push
es
daa
mov
adc
and
fdiv
into
fdiv
pusha
xlat
cmp
loop
fidivr
mov
clc
and
lods
adc
mov
sbb
pop
mov
movs
push
sbb
lods
fld
iret
int
push
fs
jge
out
lds
mov
int
idiv
xor
dec
mov
arpl
dec
lods
cmp
jp
mov
mov
mov
repz
mov
dec
mov
bound
inc
movs
cli
shr
in
add
in
sbb
fcmovnu
pushf
aaa
jg
aad
pop
and
in
mov
push
repz
stc
sbb
pop
add
pop
pop
imul
adc
sbb
std
mov
call
fst
std
in
bound
pop
and
fisub
fs
wrmsr
retf
mov
pop
add
(bad)
cdq
pop
stos
(bad)
add
fsubr
jae
pop
or
fs
ins
and
and
clc
jecxz
inc
test
aad
aas
imul
pop
ja
mov
mov
stos
push
sub
out
sub
xchg
hlt
xor
js
lds
sbb
fidiv
jnp
mov
xchg
jge
sti
ss
mov
dec
mov
xchg
test
cdq
push
cmps
push
cli
dec
bswap
mov
dec
mov
lods
cli
dec
inc
test
sbb
pop
std
call
daa
in
and
neg
fst
xchg
test
or
es
add
add
loope
jbe
lods
inc
test
pop
std
inc
addr16
mov
add
pusha
pushf
cmc
push
dec
jnp
and
fwait
mov
dec
pop
loop
fild
jb
mov
xchg
mov
inc
rcl
rcl
cmp
or
dec
push
jmp
cdq
adc
mov
mov
shl
es
retf
ja
movs
lea
stos
aas
jmp
mov
lods
or
(bad)
bound
add
popf
inc
sub
jae
popf
xchg
cmps
addr16
push
sahf
cmps
jo
pop
jle
push
ins
xlat
mov
dec
jno
sbb
xchg
or
dec
retf
ret
xor
std
cdq
jne
or
dec
cmp
bound
movaps
rcl
jae
cmp
cmc
ror
pop
hlt
pop
xchg
jbe
fidivr
push
jae
leave
std
lds
aas
xchg
sahf
(bad)
jo
jns
arpl
pop
cmc
addr16
or
fnsave
jecxz
cmps
ficomp
out
je
jno
cmc
in
mov
or
int
hlt
fstp
inc
add
(bad)
xor
mov
lds
adc
pop
adc
sbb
ds
out
or
and
push
aam
addr16
imul
cli
mov
test
into
push
sbb
sti
ins
mov
ja
aad
(bad)
mov
cmps
div
add
xchg
mov
rcl
cli
cmp
jle
hlt
call
or
cmp
push
ja
xchg
adc
rcl
cmp
jg
mov
aaa
jb
cmp
cmps
test
sbb
call
int
or
hlt
test
xchg
jl
ss
repz
pushf
jmp
push
jns
js
(bad)
adc
pop
or
push
leave
dec
add
enter
mov
inc
hlt
(bad)
repz
add
ret
mov
push
arpl
ror
test
sub
push
xlat
lock
jae
mov
fstp
jg
jno
xchg
push
mov
fsub
int3
test
outs
cwde
push
cmps
sbb
call
iret
and
outs
jmp
cmp
sahf
dec
fcom
gs
clc
je
adc
repnz
sbb
pop
cmp
dec
dec
clc
push
test
add
sbb
add
std
xor
inc
push
inc
sbb
bound
jmp
cmps
mov
inc
dec
(bad)
inc
adc
mov
fcomp
mov
scas
in
xor
adc
pop
xor
sub
loopne
cmp
pop
pop
sub
into
xchg
ds
push
sbb
das
or
lods
pop
call
xor
or
cmps
jno
adc
mov
shr
xchg
jne
dec
cmp
ror
shl
lods
add
dec
retf
and
adc
dec
add
dec
enter
sub
shr
mov
mov
aam
mov
mov
mov
xchg
mov
pop
inc
mov
icebp
out
in
xchg
(bad)
retf
mov
sbb
mov
mov
cmps
pop
test
inc
or
fcom
add
sub
cmp
jmp
jno
cmp
xor
and
test
push
addr16
push
jne
int
adc
push
mov
fwait
sar
dec
daa
cdq
dec
cmp
jns
mov
ret
dec
and
xor
mov
in
outs
fidivr
push
fnsave
xor
jno
scas
not
shl
jp
mov
fs
jns
sub
ins
dec
scas
pop
dec
stos
push
adc
leave
(bad)
cld
inc
add
xor
lds
adc
inc
and
and
lahf
scas
retf
cmp
ss
scas
shl
loop
inc
es
xor
xor
mov
and
aas
push
(bad)
jmp
mov
jbe
or
add
js
loopne
lahf
push
push
mov
add
imul
xlat
imul
adc
adc
mov
and
imul
pop
loopne
xchg
pop
test
stc
mov
xchg
xor
dec
les
fs
test
jb
ja
xchg
inc
xor
das
aad
mov
add
push
(bad)
pop
push
outs
cwde
jmp
sbb
or
sbb
cmp
ja
data16
pop
xchg
mov
sbb
aas
aas
fisub
icebp
mov
mov
retf
xor
adc
sub
fist
(bad)
fcomp
loop
xor
rcl
mov
fs
add
xor
test
push
mov
inc
loope
cmp
pusha
sar
xchg
mov
scas
or
jae
or
add
int
repz
push
jle
ret
lea
dec
outs
dec
aam
hlt
dec
sahf
cmps
jb
cmp
cdq
pop
mov
and
sbb
mov
stos
sub
in
mov
mov
or
idiv
jmp
and
pop
inc
mov
push
inc
jmp
lock
stos
mov
mov
test
aam
imul
shl
add
arpl
mov
dec
call
cli
jl
loop
push
retf
pop
enter
cmp
lods
scas
lahf
gs
shl
sbb
aas
inc
idiv
imul
ja
bound
adc
(bad)
pop
cmp
add
pop
mov
and
sub
pop
icebp
mov
repz
xchg
in
int3
push
jb
push
adc
(bad)
adc
pop
xor
xchg
repnz
mov
rcl
add
inc
cmps
mov
push
stos
jnp
ror
(bad)
cmps
in
hlt
stos
xchg
xchg
ret
xor
sbb
xlat
loop
push
mov
cdq
pop
std
xor
into
nop
push
sub
jb
stc
jecxz
or
sar
mov
pushf
adc
xor
jo
popa
out
(bad)
xor
addr16
hlt
inc
icebp
jbe
(bad)
aaa
movs
cmp
or
gs
cmps
outs
jae
and
pop
out
sbb
mov
cwde
ror
mov
xor
lods
pop
sbb
fwait
test
mov
push
ret
ins
pop
aas
loopne
mov
xor
inc
pop
cmp
imul
pop
pop
(bad)
ins
cmp
add
mov
cs
bnd
stos
add
cld
inc
inc
ret
mov
mov
cmp
push
jo
mov
shl
sbb
sbb
pop
push
mov
out
lds
loopne
adc
rol
in
or
push
scas
pop
cmp
jns
add
out
jge
pop
xchg
xor
adc
add
out
push
sub
or
sbb
pop
in
adc
scas
xchg
pusha
adc
add
jl
dec
pop
retf
out
xor
sub
retf
mov
mov
cmp
(bad)
leave
mov
adc
ins
fbstp
mov
and
int3
pop
pop
fcomip
sbb
ins
inc
and
shl
mov
into
into
lea
add
jp
fwait
das
ins
loopne
shl
cwde
aas
pop
icebp
bound
mov
mov
call
xchg
std
mov
mov
fwait
mov
pop
adc
xchg
fmul
cmp
and
outs
sub
cmp
cli
push
pop
xchg
or
sbb
push
lds
sub
inc
mov
xor
sbb
(bad)
sub
stc
xlat
mov
push
cmps
movs
and
movs
push
lds
sub
jae
jg
push
jbe
arpl
aas
dec
pop
xor
mov
jmp
repz
mov
sahf
add
inc
cmp
mov
ret
arpl
lods
ficomp
aad
cmp
sub
xor
or
push
dec
cs
int3
test
pop
int
in
mov
inc
xchg
clc
stos
sbb
fnstenv
pop
ret
loope
xchg
and
mov
sub
data16
or
shl
in
mov
mov
sbb
out
pop
mov
add
in
and
out
mov
or
aam
mov
cmp
fwait
mov
ss
add
in
jmp
aad
sbb
fbld
push
mov
jmp
mov
pop
cmp
and
jp
jmp
lods
adc
pop
scas
(bad)
mov
jmp
mov
in
xchg
jae
jp
cmp
jg
pop
or
adc
in
or
addr16
add
enter
sbb
ins
sbb
pop
jb
pop
call
jg
pop
xchg
dec
push
sub
push
inc
enter
xor
je
add
nop
xchg
jmp
jle
xchg
mov
dec
or
dec
xor
mov
push
cwde
cmp
mov
or
and
enter
mov
lock
and
xlat
jne
or
cmc
or
jno
jle
lods
popa
inc
xchg
and
xchg
add
jne
or
dec
nop
pop
stos
(bad)
dec
jmp
std
mov
sbb
ss
xor
in
xor
xchg
xchg
mov
imul
jg
jae
or
ja
loop
push
pop
xor
test
out
aam
loope
imul
jo
and
push
outs
jge
pop
cwde
cs
cwde
test
adc
jae
sti
mov
js
addr16
or
ficomp
sbb
fisttp
pop
push
and
or
mov
hlt
sub
cs
fiadd
dec
(bad)
scas
fwait
jb
outs
or
leave
push
fcom
imul
in
(bad)
hlt
dec
idiv
mov
stc
xchg
(bad)
retf
clc
rcl
xor
scas
cmp
fidivr
xchg
std
jp
out
or
scas
jge
push
cs
mov
fwait
push
fidivr
(bad)
fadd
gs
int3
inc
in
fwait
pop
loop
jecxz
test
repz
lods
sahf
pop
add
adc
add
test
cwde
pop
movs
xchg
and
clc
xchg
mov
into
or
sub
test
pop
ins
or
mov
xchg
xchg
xchg
jl
xchg
test
xor
sub
into
mov
lods
popa
loope
rcr
xor
rol
lods
mov
xor
mov
xchg
xchg
xchg
mov
cmp
cmp
jle
mov
pop
or
fst
jb
xor
xchg
and
jmp
mov
ret
inc
push
sbb
out
sahf
xchg
lods
push
dec
and
sbb
clc
pop
mov
and
adc
fnstenv
jmp
into
mov
pushf
sbb
mov
movs
in
test
add
(bad)
imul
and
sbb
cmps
xchg
aas
lods
aad
maskmovq
idiv
popf
mov
sbb
bound
or
push
nop
pop
cmp
lock
mov
rcl
mov
mov
es
add
ror
and
addr16
mov
xor
aam
or
push
popa
(bad)
jecxz
or
xor
jne
inc
xor
pop
mov
and
push
inc
cmp
fs
xor
mov
xchg
jge
cmp
mov
int3
jns
mov
xchg
in
mov
jle
std
mov
xchg
rcr
cmp
imul
add
push
les
clc
and
imul
push
sti
sahf
mov
push
jl
xor
adc
pusha
aad
rcr
jmp
outs
ret
adc
xchg
fsubrp
arpl
popa
loopne
loopne
js
mov
mov
dec
and
lock
aam
adc
adc
test
sbb
mov
inc
adc
jle
outs
adc
outs
gs
idiv
jnp
jno
(bad)
out
pop
mov
pop
adc
in
mov
in
scas
mov
xor
adc
or
adc
test
fisubr
inc
aaa
popf
fstp
and
pop
sbb
aad
cmp
ds
jo
ja
jmp
xchg
sub
sti
jae
iret
lsl
sub
ja
test
jp
jge
mov
(bad)
adc
(bad)
jle
daa
xor
push
cdq
adc
mov
pop
mov
into
jmp
pop
xchg
mov
pop
pop
inc
arpl
pop
jno
ins
sbb
outs
fadd
xor
in
mov
xadd
adc
test
rol
(bad)
ins
cmp
mov
xor
ins
dec
js
pop
inc
xchg
push
inc
cli
lea
mov
xor
movs
add
mov
call
xor
mov
ror
mov
adc
pop
scas
jp
xor
cmp
push
mov
xchg
addr16
(bad)
adc
into
dec
icebp
dec
push
add
adc
test
jbe
jmp
jns
test
popa
hlt
retf
jae
jns
or
dec
pop
xor
sbb
jno
stos
cmp
push
in
mov
cmp
rcr
popf
xchg
mov
sub
sub
push
in
mov
inc
gs
pop
outs
push
dec
sahf
mov
mov
out
push
inc
call
pop
out
fstp
add
cmp
popa
aad
cmc
sub
xor
xor
ror
(bad)
iret
popa
mov
ja
add
or
lahf
or
mov
or
pop
int3
je
mov
push
add
mov
sbb
iret
bnd
cs
(bad)
icebp
xor
lea
or
mov
imul
dec
add
add
fiadd
lahf
in
or
xchg
add
test
(bad)
pop
dec
rcl
jnp
inc
out
stos
dec
aad
jmp
stos
js
ret
movs
mov
sub
xor
xchg
arpl
jbe
sbb
xor
dec
xchg
dec
dec
outs
jno
fisttp
repz
jle
jmp
nop
jle
jl
scas
imul
add
xchg
rol
fdiv
push
push
pop
loope
(bad)
cli
mov
ret
div
xchg
push
lahf
xchg
popf
test
repz
xchg
cmp
jne
jmp
add
xchg
mov
(bad)
div
adc
sub
(bad)
push
(bad)
imul
pop
sbb
add
push
mov
sub
mov
and
fcomp
sbb
xor
inc
in
sub
nop
ins
int
cwde
loopne
or
hlt
mov
and
hlt
inc
(bad)
in
scas
lods
ins
cmc
ds
mov
push
or
pop
fs
mov
dec
push
jbe
xor
cmp
add
retf
cmc
push
movs
hlt
sbb
or
imul
xchg
pop
xor
jns
movs
pop
jecxz
ficom
sti
or
in
xchg
pushf
dec
jo
aad
pop
call
cmp
enter
mov
pop
aam
inc
fnsave
(bad)
sub
xchg
or
mov
xchg
(bad)
sbb
fsubp
test
jmp
xor
fisub
jno
dec
and
push
jno
xchg
jecxz
retf
cmps
mov
pop
cmp
adc
call
mov
push
daa
cmps
shr
int
popa
sub
add
or
mov
fild
test
jecxz
nop
inc
jmp
adc
push
imul
cmp
dec
cmp
push
add
in
inc
dec
mov
in
jge
jo
popf
(bad)
mul
mov
and
sbb
cs
inc
test
dec
fld
lds
dec
test
xchg
aad
pop
bound
mov
jnp
jae
fwait
pop
and
push
gs
push
mov
or
cmp
dec
call
ficomp
cmp
sti
nop
inc
mov
mov
dec
rcl
push
fcomi
aam
icebp
pop
imul
xchg
sbb
out
cmp
sbb
dec
cli
rol
jb
(bad)
pop
push
jno
cdq
xor
xor
loope
cmp
jecxz
test
jae
movs
js
push
faddp
icebp
jg
dec
into
mov
loopne
mov
cmp
arpl
leave
and
dec
sbb
mov
int3
call
pop
mov
xchg
mov
cmovne
sbb
ja
movs
and
mov
mov
fs
sbb
jnp
popa
adc
fisubr
into
(bad)
mov
xchg
scas
js
out
inc
push
xchg
in
fsub
(bad)
imul
and
jg
and
rcl
cwde
sbb
repnz
pop
jle
into
ret
jecxz
lea
jnp
xchg
cmc
xchg
fcmovb
outs
xchg
add
mov
mov
mov
jl
out
mov
sub
add
fcomp
or
retf
loope
std
loop
popa
and
mov
test
xchg
outs
out
sub
ret
in
jmp
leave
add
and
cmp
adc
pop
retf
mov
xor
stos
daa
cmp
ss
mov
fdivr
daa
adc
jmp
fiadd
push
cdq
adc
sar
push
in
mov
mov
jg
sub
imul
div
push
sub
push
inc
rcr
imul
mov
sbb
in
inc
imul
pop
and
ret
xchg
push
iret
mov
push
rcr
mov
sub
(bad)
out
sahf
test
sub
aas
add
sub
loope
loop
cdq
push
adc
mov
les
mov
cmps
push
mov
xchg
test
adc
mov
xchg
jae
cmp
xor
arpl
aaa
inc
jecxz
pmullw
jnp
adc
dec
icebp
cmp
xor
stos
inc
sbb
inc
pop
mov
mov
add
add
cmc
mov
xchg
mov
sbb
pop
test
(bad)
je
jbe
fidiv
mov
ins
and
mov
pop
dec
nop
sbb
mov
mov
rol
sbb
inc
dec
lods
icebp
xlat
mov
or
pop
iret
sbb
xchg
nop
dec
mov
addr16
movs
call
jo
stos
xor
aad
fidiv
and
cmp
sub
repz
(bad)
mov
xchg
inc
outs
outs
xor
jge
jl
loope
nop
ror
mov
jb
pop
mov
jne
data16
pop
sbb
and
jmp
push
mov
int3
sub
jge
push
and
shl
mov
mov
cmp
psraw
out
pop
mov
pop
in
push
jle
sub
es
daa
and
jl
int3
push
les
mov
fsubr
mov
inc
mov
shl
xchg
cwde
movs
pop
retf
push
adc
jmp
mov
mov
cli
aaa
lahf
xchg
test
inc
dec
pop
movs
in
push
test
lods
and
push
push
adc
mov
mov
and
mov
jnp
fwait
mov
lahf
ja
mov
push
mov
and
mov
into
dec
mov
sub
cmps
mov
aad
pop
std
in
and
std
xchg
xchg
push
xchg
inc
pop
mov
cld
jae
(bad)
xchg
shr
sar
add
sbb
ds
mov
push
gs
mov
lods
test
pushf
xor
scas
and
xor
add
or
pushf
pop
cmp
out
cmps
jnp
mov
lods
test
mov
cli
popf
pop
mov
adc
daa
jnp
int3
mov
push
or
retf
popa
sub
data16
clc
mov
push
sbb
mov
aad
fwait
xor
lds
sbb
sbb
in
js
mov
mov
adc
jl
cmp
fild
js
sub
xor
cmc
xor
push
inc
(bad)
lds
push
sbb
dec
dec
and
xchg
ja
sbb
pop
ds
jae
sbb
sahf
cld
jmp
or
push
jno
xor
pop
es
call
sub
(bad)
ja
mov
shr
in
cmp
popa
cmp
mov
adc
pop
scas
or
dec
xchg
sbb
and
int3
push
lock
mov
das
or
test
and
retf
pop
sub
dec
push
mov
cwde
cmp
xor
cmps
shr
ud0
lods
adc
(bad)
into
xor
outs
jae
sbb
pop
dec
pop
sbb
mov
gs
fsubr
jnp
ret
in
jb
inc
out
mov
push
fld
jmp
loope
jbe
ins
jne
aas
pop
scas
out
stos
lock
sahf
fwait
sub
cdq
pop
rol
jmp
scas
in
setnp
(bad)
test
int3
jnp
sar
out
pop
sub
rcr
cmp
in
rcr
and
mov
push
inc
pusha
test
dec
ja
pop
push
popa
push
xchg
cld
lock
cmp
pushf
rcr
mov
pop
push
js
inc
mov
imul
mov
mov
cmp
dec
mov
push
or
cwde
cs
dec
popf
cmps
jg
in
cs
mov
sbb
retf
retf
and
gs
pop
cmps
das
in
add
push
mov
mov
daa
and
shl
pop
fst
sub
je
fld
mov
push
push
push
mov
call
pop
ficomp
sbb
sub
jbe
xchg
and
popa
ds
sbb
mov
stos
paddusw
pop
out
dec
and
or
jne
xor
mov
mov
les
push
xor
shl
outs
add
or
mov
mov
xchg
push
cmps
shl
xor
cli
xchg
xchg
mov
ja
aam
push
call
pop
lods
imul
push
and
mov
pop
imul
fadd
out
rol
(bad)
or
jmp
lock
stc
fidivr
(bad)
mov
dec
xchg
dec
adc
les
jb
xor
mov
adc
push
lds
jg
cmp
inc
stos
test
adc
xor
pop
je
test
bswap
retf
push
xchg
aad
icebp
pop
cmp
icebp
imul
popa
in
fstp
cmp
hlt
jne
test
cld
or
pop
xchg
sub
cmp
in
dec
mov
ds
jo
mov
dec
and
inc
dec
xchg
stc
mul
popf
std
scas
mul
ds
push
mov
jns
lods
add
cmps
xor
stos
test
inc
adc
dec
pusha
movsx
enter
mov
mov
mov
mov
and
mov
pop
mov
pushf
jp
call
outs
aam
ret
dec
cwde
ror
stos
inc
dec
nop
cmps
clc
sbb
mov
sar
and
adc
sub
fstp
xor
fadd
and
scas
stos
push
inc
and
xlat
out
inc
adc
push
xor
(bad)
sub
out
jno
scas
xchg
cdq
jecxz
arpl
jne
fs
pushf
pop
inc
shl
ins
mov
daa
js
sbb
sbb
jno
lock
mov
inc
sahf
push
pop
popa
cwde
inc
retf
js
sbb
push
cmp
mov
cmp
dec
mov
lods
fstp
sbb
out
das
xchg
sub
loopne
mov
mov
cmp
jnp
sti
arpl
daa
inc
(bad)
sbb
push
and
cwde
sub
push
adc
push
sub
mov
jnp
pop
aas
adc
sbb
mov
imul
inc
inc
mov
pop
out
sbb
(bad)
xchg
idiv
mov
cmp
movs
mov
push
leave
dec
xchg
scas
popf
aaa
add
dec
sub
rcl
cmp
mov
xor
xchg
pop
sbb
mov
jno
pop
rcr
mov
arpl
popa
xchg
push
dec
add
sbb
or
shr
(bad)
lods
and
and
sbb
mov
cmp
and
cmp
xlat
in
jnp
mov
push
xchg
cmp
or
in
sub
pop
cs
mov
pop
mov
push
aas
movs
mov
cmp
adc
fldcw
cmps
push
pop
test
mov
xchg
add
sti
mov
pop
inc
retf
imul
xchg
pushf
push
jle
aas
mov
add
or
xchg
xchg
inc
pop
cld
arpl
jns
in
xor
div
or
fdivr
movs
dec
push
ss
or
push
sub
cmps
(bad)
pop
ror
and
lock
out
ins
adc
movs
imul
jnp
stos
imul
xlat
push
pop
sbb
out
xor
dec
cs
push
bound
icebp
sub
sar
push
gs
test
loopne
adc
movs
jno
lods
and
ins
movs
sub
pop
int3
out
fdivr
pop
std
(bad)
in
push
jl
fild
loop
lods
mov
push
fld
inc
fsubr
mov
xchg
(bad)
jle
mov
mov
dec
sub
imul
jecxz
mov
mov
xchg
pop
pop
inc
sub
xor
loop
in
rcr
icebp
and
(bad)
cld
lahf
mov
and
xor
mov
xor
add
stc
dec
jecxz
adc
xchg
mov
daa
push
fcom
pop
inc
scas
or
nop
cmp
xchg
and
jmp
retf
stos
dec
fs
inc
getsec
cdq
jmp
out
lahf
sub
dec
pusha
jge
repnz
(bad)
mov
xchg
cdq
retf
fisub
xchg
adc
aas
clc
ds
jg
mov
outs
daa
in
test
aas
aas
mov
pop
or
mov
push
cmp
in
inc
xchg
lods
test
mov
dec
pop
fdivrp
cmp
sbb
test
xor
mov
dec
mov
loop
data16
aam
mov
ret
test
and
sub
adc
adc
sbb
sti
or
adc
js
fcmovnbe
inc
(bad)
jecxz
rcl
les
shl
sti
mov
push
push
out
xor
loope
rol
sbb
xchg
arpl
jnp
dec
push
aas
xchg
jle
iret
(bad)
cmc
or
shl
fwait
int3
neg
lods
bound
mov
movs
pop
and
push
mov
call
and
jo
int
fbstp
xchg
xchg
retf
hlt
add
loop
pop
aad
pop
popa
jecxz
(bad)
jno
jo
(bad)
nop
pop
ins
test
xor
ret
outs
adc
outs
xor
leave
aam
xor
cmp
shl
lods
ror
nop
dec
cmc
int
and
push
inc
nop
stos
out
repnz
jo
int
out
xchg
ds
push
dec
rcr
cmp
movs
call
in
or
cmp
fcomip
sub
stos
push
jne
xchg
adc
stos
jno
call
or
pop
cmc
cmc
push
mov
ret
mov
push
sub
leave
rcl
or
popf
jb
jl
das
addr16
mov
fwait
ret
mov
push
adc
dec
jge
rcl
push
je
jmp
xchg
or
adc
test
scas
daa
fcomp
or
xor
push
jbe
sub
push
mov
lea
inc
xor
mov
enter
sbb
dec
jno
repz
jo
lds
ror
fadd
sbb
inc
jnp
sub
int
sahf
jg
xlat
mov
cmps
inc
movs
and
sub
cmc
int3
fimul
cmp
adc
push
push
cmp
mov
repz
pop
scas
into
inc
lds
mov
(bad)
(bad)
stc
inc
into
sti
out
test
lahf
mov
add
hlt
xlat
jbe
mov
not
loopne
xchg
ins
cmps
leave
or
push
jnp
arpl
inc
lahf
ret
mov
sub
xchg
sbb
lds
mov
rcl
gs
jae
ins
retf
das
aaa
inc
int
jmp
cmps
retf
mov
inc
shl
lods
js
push
mov
(bad)
jmp
aam
mov
out
sub
test
loop
xor
mov
jmp
mov
pop
push
mov
jmp
fistp
adc
inc
dec
adc
push
jg
jge
aaa
popa
movs
test
fistp
rcr
dec
les
mov
sbb
out
(bad)
into
sub
icebp
and
mov
ja
fadd
xchg
pop
dec
push
in
jp
cld
xlat
jecxz
call
out
les
int
add
fwait
out
jno
dec
adc
adc
or
add
or
mov
leave
push
sub
je
jg
xor
cli
xlat
ja
iret
(bad)
or
push
push
pop
mov
push
mov
loope
jb
pop
cmp
dec
mov
xor
dec
call
xchg
jnp
mov
stos
xchg
fsave
scas
mov
sti
sub
jp
xchg
int
add
imul
sub
mov
(bad)
mov
(bad)
icebp
mov
push
lods
jmp
hlt
push
cli
ins
jb
scas
xchg
inc
inc
ins
out
repnz
js
pop
repnz
stc
jno
sub
mov
ss
and
(bad)
sbb
adc
ds
mov
jmp
adc
sti
push
rcl
add
mov
pusha
fiadd
(bad)
cmps
sar
in
mov
xor
out
ja
push
repz
xchg
xchg
xchg
jne
(bad)
push
ret
shr
push
test
push
cmc
jmp
lods
mov
mov
mov
jbe
add
xchg
add
(bad)
rol
jge
out
lds
xor
sbb
(bad)
mov
(bad)
fs
mov
jmp
inc
or
addr16
jp
ins
xor
idiv
push
popf
cmp
cmp
push
es
cmp
cli
int
and
sahf
or
popf
push
js
pop
inc
mov
inc
jmp
dec
jns
scas
repnz
in
mov
push
repz
and
fist
sub
jae
xchg
inc
add
add
fs
andnps
or
stc
retf
cmp
cmp
int
fisub
fiadd
mov
movs
push
mov
ret
xor
lods
not
inc
popa
(bad)
not
lds
sub
frstor
dec
ins
sub
stc
mov
cdq
sub
mov
fcos
aam
pusha
in
jae
jp
push
(bad)
(bad)
xor
cmc
jp
int3
and
ds
inc
sub
mov
or
fcomi
ret
iret
daa
push
mov
sub
mov
(bad)
jnp
and
stc
jmp
mov
pop
leave
sbb
pop
loop
in
xchg
sub
inc
xor
add
xchg
add
mov
arpl
xchg
mov
repz
pop
clc
nop
std
out
inc
out
lock
adc
push
add
or
push
jmp
shl
push
inc
adc
div
cmc
push
xchg
stc
into
adc
gs
(bad)
fwait
inc
mov
jbe
(bad)
xor
pusha
mov
iret
xchg
enter
adc
test
je
jg
push
sub
popa
add
ins
push
cmp
mov
loopne
test
dec
mov
les
mov
aaa
cwde
jae
dec
inc
cmp
xor
push
dec
popf
es
aaa
push
icebp
mov
push
ds
xchg
and
mov
xor
mov
adc
or
mov
push
mov
aam
stc
add
in
int3
icebp
lahf
xchg
sub
or
rep
mov
hlt
pop
shr
(bad)
scas
stc
mov
inc
in
ins
out
sbb
je
out
test
movs
repnz
mov
cs
mov
jo
shl
call
clc
cdq
push
cmps
ss
push
or
cmp
push
fcomp
fcom
(bad)
(bad)
mov
out
rol
mov
outs
cmp
adc
call
mov
pushf
pop
push
pop
into
and
mov
mov
push
jle
adc
into
fisubr
test
loope
stc
or
int3
pop
xchg
push
inc
cmp
(bad)
xor
mov
cmp
in
dec
test
xor
cwde
dec
jmp
pop
pop
push
jne
mov
jne
mov
xchg
dec
aad
(bad)
sub
nop
jbe
(bad)
gs
push
sti
sahf
jp
enter
xchg
retf
lds
xchg
mov
cmp
popf
stc
xchg
cmps
std
inc
cwde
(bad)
xor
cdq
add
pextrw
mov
mov
repz
and
test
pop
scas
cs
push
or
xor
in
pop
or
fdivr
ror
adc
int3
or
(bad)
sti
loop
jmp
cmps
jmp
mov
pop
sbb
cs
leave
dec
or
mov
mov
loop
out
xchg
inc
sti
stos
test
das
mov
outs
shr
mov
rol
out
movmskps
add
xor
dec
adc
add
leave
push
jo
pop
mov
jmp
jb
xchg
push
int3
shr
enter
call
and
push
test
cmp
ffreep
jne
in
cmp
movs
fcmovbe
push
je
jl
out
and
mov
fdivr
mov
add
sub
pop
add
cmc
std
inc
xlat
push
and
mov
pop
and
jae
inc
not
repnz
sub
loop
imul
and
push
jl
mov
sahf
mov
aad
mov
inc
add
ds
fs
sub
cs
outs
movs
mov
retf
add
pop
in
retf
jge
push
stos
bound
aad
cmp
jmp
fnstenv
in
or
or
pop
xor
in
mov
adc
retf
mov
dec
inc
imul
(bad)
sbb
or
sub
sbb
mov
push
push
retf
xor
lahf
add
and
and
jne
shr
movs
pop
push
dec
mov
lahf
dec
xor
sbb
xchg
mov
in
lea
jp
push
ror
adc
mov
enter
leave
xor
push
movs
jge
fwait
or
int3
mov
sub
sub
mov
hlt
mov
jg
sbb
std
inc
sub
mov
movs
cmp
dec
clc
inc
cmc
fadd
pop
lea
xchg
jmp
pop
scas
or
in
mov
and
adc
sub
imul
imul
(bad)
scas
stos
or
clc
and
xchg
mov
div
sahf
mov
das
add
dec
or
fcom
aam
aam
cmps
sub
add
outs
cmp
push
xchg
jbe
daa
std
push
les
xchg
(bad)
push
mov
std
lods
ss
add
mov
pop
inc
dec
aas
push
mov
mov
jo
or
sbb
daa
sbb
mov
out
sbb
int
inc
stos
pop
gs
adc
jp
sbb
mov
aaa
test
add
push
cmc
mov
in
and
mov
push
out
iret
outs
bound
std
jbe
and
xchg
or
cmps
push
cmp
jecxz
lods
xchg
xchg
loopne
pop
dec
jmp
sub
lea
or
mov
xchg
outs
xor
movs
push
mov
xchg
push
mov
lods
fadd
push
dec
js
add
int
cmp
shl
aad
adc
push
sbb
adc
test
in
inc
cmp
inc
push
push
stos
add
imul
sbb
and
xor
add
add
inc
jmp
icebp
jmp
inc
fwait
retf
or
icebp
pop
mov
loop
popa
cmp
dec
cmps
mov
scas
pop
jmp
repz
repz
ficom
cmp
adc
test
aam
jno
jmp
cmp
push
js
test
sti
sub
jo
mov
push
xlat
out
mov
fisub
mov
add
jl
sbb
dec
or
add
(bad)
stos
pop
mov
inc
mov
jo
push
xchg
jb
es
ret
sub
fnsave
inc
adc
das
mov
sbb
repnz
or
xor
xchg
aam
paddsb
jnp
shl
lods
lea
jae
push
lods
fnstsw
mov
push
add
adc
(bad)
repnz
punpcklbw
pop
sbb
arpl
add
push
(bad)
int
aad
stc
stc
das
sub
sub
mov
(bad)
dec
cs
mov
jmp
mov
xchg
in
inc
(bad)
mov
xor
jmp
dec
pop
popa
sti
cmps
shr
mov
jge
pop
jns
cli
movs
stos
shl
shr
sahf
sti
mov
jle
lea
xchg
fdivr
cld
mov
popf
ss
scas
and
jne
pop
scas
ds
leave
sbb
int3
adc
es
in
(bad)
mov
pop
jmp
popf
ins
pop
cmp
ror
lea
jo
int
push
and
mov
inc
cmp
rcr
das
add
inc
out
aaa
add
dec
lea
fdiv
inc
push
dec
mov
adc
mov
xor
movs
stc
sar
adc
test
sub
test
xchg
repnz
loopne
je
dec
test
push
xor
bound
mov
repnz
ret
adc
jno
or
sub
pop
sar
inc
fisttp
jae
inc
mov
jp
xchg
pop
arpl
movs
xchg
(bad)
mov
sbb
mov
jns
mov
dec
ds
dec
jbe
xor
add
jmp
test
add
cmc
jmp
pop
in
push
out
and
jmp
lea
sbb
rcl
sti
ror
ret
inc
sahf
inc
sub
adc
cmp
hlt
(bad)
push
pop
xor
adc
ss
lods
pop
out
retf
lea
dec
ins
cdq
lds
xchg
imul
das
ins
sbb
test
fidivr
mov
shl
pop
daa
inc
add
xor
retf
jb
clc
inc
mov
cdq
jmp
jne
ss
dec
inc
adc
jns
in
xor
xlat
xchg
nop
adc
pushf
push
sub
lock
daa
xchg
repz
mov
add
mov
pop
dec
mov
ror
add
mov
or
mov
rcl
push
daa
test
pop
cmp
jns
and
jae
jmp
xor
lods
aas
imul
(bad)
out
jns
js
test
arpl
sbb
adc
pop
cmps
mov
mov
dec
mov
mov
push
xchg
or
inc
in
daa
into
mov
nop
dec
mov
(bad)
shl
clc
push
xchg
int3
test
je
ins
jle
push
in
mov
ins
popf
or
xchg
aam
push
daa
add
or
xlat
xchg
push
enter
pop
daa
cmp
push
test
xchg
fs
dec
shl
hlt
mov
icebp
clc
xor
repnz
cmp
jns
cmp
add
aaa
xor
pop
push
movs
inc
fucomp
add
sbb
and
xchg
in
jle
adc
inc
out
cwde
cmps
xchg
and
retf
pusha
push
xchg
push
cmps
jmpw
cmp
jmp
push
jmp
test
mov
rol
sbb
rcl
shr
ret
inc
rcl
adc
cmp
push
mov
xor
jns
pop
jecxz
test
hlt
scas
rcl
repz
pop
repz
call
sbb
mov
lods
inc
mov
mov
neg
ja
push
mov
add
icebp
dec
inc
imul
mov
movs
xchg
xchg
inc
in
and
mov
leave
mov
push
mov
ins
dec
movs
retf
ret
cs
movs
imul
sbb
xor
sbb
arpl
jns
(bad)
pop
or
outs
stos
push
mov
sub
bound
jnp
add
shl
sub
and
pop
push
test
retf
mov
lock
popa
div
sbb
loopne
outs
ja
jle
jecxz
leave
jg
out
stos
ret
xchg
jmp
dec
pop
(bad)
fld
enter
fisubr
xor
ja
pusha
push
test
retf
cmp
sti
cwde
movs
cs
stos
jno
bswap
sbb
xchg
mov
imul
mov
dec
(bad)
in
cmp
cmp
mov
mov
(bad)
into
jmp
push
mov
push
loope
inc
sub
aam
dec
bound
add
leave
out
popa
xchg
inc
popa
fcmovb
test
lahf
xchg
rcl
and
pop
pop
cmps
dec
cli
imul
xor
pop
xor
int3
(bad)
mov
adc
call
aaa
push
jmp
lock
sub
fdiv
xor
in
dec
aaa
jne
lock
into
xor
add
in
call
mov
mov
fisttp
fwait
mov
test
mov
xor
push
jnp
pop
test
ror
ds
or
out
js
stc
mov
rol
push
loopne
iret
daa
jl
out
loope
lods
jne
push
cmps
push
and
mov
push
sbb
sar
ret
mov
pop
sti
movs
ror
data16
pop
xlat
cld
mov
rol
cmp
pop
mov
fidiv
sub
hlt
int3
cmc
and
dec
xchg
push
outs
or
test
xchg
(bad)
std
leave
jne
popa
jl
ret
cmp
xchg
sub
mov
mov
dec
or
hlt
jbe
je
enter
or
ss
mov
mov
hlt
push
adc
xor
(bad)
jnp
pop
(bad)
pop
ds
push
lahf
mov
mov
ins
jae
call
dec
dec
lods
enter
int
inc
aaa
xchg
pop
in
mov
add
fisub
xchg
inc
(bad)
stos
lods
rcr
jecxz
and
jle
push
retf
mov
js
fcom
jbe
jbe
repnz
nop
push
mov
mov
mov
aad
jo
hlt
adc
fxch
shr
add
inc
lea
add
sbb
jne
popa
sub
aad
test
mov
push
pop
and
cdq
or
cwde
retf
mov
gs
loope
repz
cmp
xor
cmp
pop
jge
jmp
cmc
mov
xchg
in
shl
and
stos
out
scas
sub
out
adc
jnp
and
and
ret
push
jecxz
sbb
in
mov
call
jb
push
and
not
inc
addr16
mov
lods
arpl
cmp
fidiv
sti
cmp
ins
cld
cld
cmps
popa
fwait
jbe
xor
div
inc
xor
sbb
mov
adc
sbb
xchg
mov
jmp
out
add
jecxz
inc
addr16
out
push
add
jnp
push
mov
pusha
outs
inc
mov
cmp
mov
jns
test
xchg
sbb
jmp
xor
(bad)
pop
sub
stos
fdiv
dec
jle
clc
rol
add
movs
(bad)
pushf
and
sub
jp
cmp
les
xor
jne
jmp
jnp
and
outs
add
pop
push
scas
inc
dec
cmp
add
fwait
and
inc
pop
jmp
aad
je
mov
or
mov
mov
mov
xlat
inc
add
pop
push
iret
mov
js
pusha
test
add
dec
icebp
mov
lock
sti
ret
mov
sahf
lods
pop
mov
xchg
ja
inc
loope
sbb
and
ret
mov
pop
or
xchg
xor
(bad)
adc
dec
mov
mov
shl
cld
ret
push
ins
jbe
mov
outs
and
aaa
xchg
test
aad
fsub
jp
cmps
lock
ret
jns
sahf
test
inc
fwait
ds
add
pop
dec
or
stos
xchg
xchg
(bad)
pop
mov
rol
sub
cmp
push
jnp
push
dec
pop
data16
fwait
xor
out
repnz
cmp
adc
dec
mov
and
xchg
gs
inc
test
sbb
lods
in
mov
outs
pop
cmp
jnp
jb
xor
xor
or
sub
ins
cld
in
mov
jle
in
in
xlat
(bad)
mov
scas
nop
pop
(bad)
or
mov
sbb
fmul
jae
gs
inc
adc
repz
pop
mov
cmp
ins
inc
sbb
test
mov
jecxz
ins
(bad)
mov
pop
aam
fnstenv
jne
dec
dec
mov
das
dec
hlt
rcr
add
enter
out
in
pop
leave
cmp
xchg
out
retf
cwde
ror
cmp
scas
test
in
xor
cli
movs
mov
movs
sub
lods
push
add
daa
push
aad
out
rol
xchg
jae
sub
jae
push
xchg
shl
jmp
cmps
ins
mov
test
cmp
data16
scas
push
andps
sbb
xchg
pop
cli
dec
daa
mov
ins
fisttp
scas
sahf
xor
and
je
ret
or
xchg
in
loopne
inc
movs
pop
out
push
mov
daa
call
xchg
out
imul
push
jnp
(bad)
xlat
jmp
fnstcw
outs
movs
xchg
and
ror
cmp
(bad)
call
or
outs
retf
mov
outs
ins
mov
cmp
mov
pusha
sub
xor
scas
in
shl
aas
xor
jmp
in
mov
pop
nop
sub
dec
add
and
pop
es
(bad)
cs
popa
sub
das
cmp
push
bnd
out
mov
ror
jae
fiadd
fs
xchg
xor
out
rcl
sbb
inc
out
fiadd
mov
pop
shl
pop
lock
nop
or
dec
jns
adc
pop
xor
fs
mov
mul
dec
dec
lea
push
xor
or
fwait
or
leave
jg
(bad)
add
and
pop
inc
mov
and
int
and
jmp
or
mov
mov
ror
mov
xor
ficomp
inc
(bad)
cmc
mov
fwait
add
adc
leave
es
jg
pop
fist
sbb
mov
jno
lock
loopne
iret
adc
adc
out
imul
popa
ret
add
stos
push
out
stos
or
push
push
pop
into
call
leave
jae
sbb
das
loopne
dec
rcr
mov
in
outs
mov
inc
push
jg
movs
xchg
mov
or
mov
popf
popf
xor
dec
(bad)
sbb
shl
clc
cmps
push
jmp
jge
wrmsr
mov
test
pop
aaa
rol
sub
mov
lods
stc
ror
inc
cmp
jg
xor
xor
inc
push
popa
push
dec
mov
and
mov
inc
retf
and
jbe
xchg
push
adc
sub
pop
jp
xor
sbb
xchg
jg
fbstp
push
ret
mov
push
ja
sub
mov
mov
and
push
popa
rcr
ins
pop
lea
push
sbb
mov
pop
sub
xchg
mov
sub
inc
inc
mov
imul
cs
loope
dec
fistp
or
ret
mov
cdq
ds
dec
es
and
(bad)
(bad)
leave
adc
jo
xchg
sub
xchg
fs
and
adc
jecxz
nop
(bad)
(bad)
fist
cmps
jmp
leave
test
outs
mov
mov
adc
mov
or
pop
pushf
or
xchg
mov
adc
lahf
dec
les
mov
repnz
sahf
cwde
data16
fsub
jle
mov
ret
ss
mov
(bad)
mov
fimul
sub
pop
push
hlt
(bad)
pusha
or
jmp
push
mov
(bad)
std
lahf
leave
mov
lds
iret
mov
shl
sub
(bad)
in
pmaxsw
cmc
je
inc
mov
(bad)
fcom
nop
pop
jmp
sbb
lods
rcl
(bad)
jl
mov
js
loop
or
loop
mov
ins
xor
or
xlat
jge
mov
stos
sbb
sbb
cmps
nop
int
les
pop
test
test
leave
jmp
inc
int3
out
(bad)
aas
jmp
or
jae
ins
sbb
xchg
push
or
test
inc
jns
hlt
pop
out
ins
add
mov
in
and
cmp
push
fsub
test
push
test
xchg
xchg
mov
jb
je
or
(bad)
mov
adc
fbstp
push
sbb
call
rol
jo
adc
or
sbb
and
lock
retf
mov
jns
cmps
add
(bad)
lods
lds
loopne
xlat
les
fs
pop
xchg
pop
sbb
xor
cmp
sbb
jns
mov
ds
or
mov
pop
mov
movs
dec
out
(bad)
in
pop
xor
and
(bad)
sar
push
test
mov
xchg
sbb
fsubr
xor
mov
mov
out
mov
pop
fwait
mov
(bad)
stos
cmp
sub
fisubr
es
push
mov
popa
std
or
inc
repz
test
mov
ins
popa
shl
gs
(bad)
(bad)
jmp
shr
jmp
jmp
push
sbb
out
repz
and
pop
mov
mov
push
imul
xlat
das
jg
cmp
adc
rcr
mov
and
push
dec
(bad)
mov
xchg
rep
add
jbe
mov
test
fwait
cwde
(bad)
movs
mov
jno
jb
add
lock
push
sbb
jns
xchg
aaa
loopne
jns
icebp
in
rcr
inc
mov
sub
mov
mov
mov
dec
pop
adc
ins
push
mov
das
dec
jb
ret
scas
add
add
add
pop
pop
push
inc
jl
sub
push
inc
lea
cld
mov
clc
and
in
mov
adc
xchg
into
movs
adc
sahf
adc
and
adc
aaa
(bad)
push
xor
push
pop
rol
popf
mov
or
sbb
(bad)
fsqrt
xor
ds
aaa
jne
xor
push
dec
pop
movs
std
jmp
fcmovnbe
inc
cmps
xor
lahf
imul
out
mov
mov
or
scas
or
jns
sub
lods
pop
add
inc
test
inc
jg
scas
movs
int
fmul
xchg
push
pop
xchg
cmp
add
mov
mov
in
cmp
je
mov
out
inc
jecxz
fwait
xchg
scas
xchg
gs
lods
ret
shr
and
inc
in
mov
stc
loop
push
out
outs
inc
jne
call
int3
ins
push
add
dec
ss
leave
fbstp
es
idiv
repnz
adc
cmps
loopne
cld
or
xchg
mov
xlat
push
(bad)
repnz
int3
ins
cmc
dec
dec
jmp
jae
mov
inc
xchg
ss
sub
fcom
xchg
adc
aad
pop
fistp
fwait
lock
mov
jmp
outs
pop
cmp
data16
sbb
clc
mov
dec
les
iret
sbb
popa
fisttp
inc
sbb
(bad)
sub
mov
retf
sbb
cmp
out
mov
(bad)
in
clc
cmp
dec
adc
mov
sub
and
jne
sub
dec
xchg
push
pop
cld
mul
xor
mov
or
mov
xlat
push
aaa
pop
cmps
test
(bad)
stos
jge
ins
fimul
jmp
pop
inc
in
pop
pop
lds
nop
mov
sub
push
scas
inc
into
inc
cmc
ja
les
ja
mov
pushf
push
and
cdq
sub
in
push
or
lea
aaa
cmp
adc
test
adc
test
repz
mov
lds
push
adc
cmp
or
test
jl
xchg
mov
xchg
lea
daa
std
xchg
out
mov
fsubr
aad
fstp
xchg
pop
clc
and
sahf
out
jne
adc
pcmpeqw
mov
adc
and
jbe
jg
push
fs
pop
xchg
cmp
dec
loopne
add
ror
mov
ficom
push
inc
adc
pop
hlt
scas
sbb
ror
or
sahf
lahf
leave
cmps
dec
xor
mov
mov
mov
lea
push
xor
push
pop
fbld
sub
or
pushf
cmp
xor
push
adc
in
popa
xchg
sbb
sbb
stos
mov
std
sbb
xor
and
imul
cmp
cdq
sub
jno
xchg
jne
dec
push
adc
shl
fs
push
xchg
loop
ins
cmp
jecxz
pop
mov
push
sbb
(bad)
jmp
push
mov
dec
push
retf
xor
out
add
xchg
ds
add
daa
adc
scas
shl
mov
jns
lock
pusha
mov
dec
nop
aaa
sub
cmp
test
adc
inc
adc
imul
mov
mov
inc
ins
mov
mov
xor
adc
movs
pop
and
xlat
aam
cmp
fcmovbe
dec
jg
mov
(bad)
addr16
dec
cli
pushf
(bad)
movs
sti
pop
ins
mov
inc
adc
lea
mov
ins
push
fild
push
push
cmps
pop
jmp
xchg
mov
jmp
mov
popa
pop
stos
adc
add
mov
xor
scas
fwait
or
jge
cwde
sbb
push
pop
pop
lds
adc
pop
gs
dec
mov
aad
mov
(bad)
data16
bound
cmp
inc
push
sbb
stos
test
out
adc
in
retf
jns
xor
lods
cmp
mov
mov
repz
cld
sbb
xchg
cmp
mov
je
ss
fimul
fsin
xchg
jae
xor
addr16
ficomp
xor
sbb
retf
jp
shr
aas
jg
cwde
inc
inc
stc
xchg
stos
jae
lahf
aam
loopne
dec
je
add
push
sbb
hlt
sbb
int
push
or
and
push
into
pop
test
rcl
cmp
jge
test
cdq
int3
and
mov
js
xchg
inc
into
adc
loope
test
xor
inc
add
adc
arpl
sahf
add
dec
out
add
jge
inc
mov
mov
inc
bnd
fwait
jmp
lahf
inc
mov
test
out
loop
(bad)
std
ret
xor
xchg
jno
call
(bad)
test
into
mov
mov
sbb
les
call
add
(bad)
mov
or
sbb
cmp
repz
(bad)
pusha
mov
xor
retf
xchg
lea
shr
jbe
js
stc
dec
out
cmp
inc
inc
test
dec
jbe
loop
repz
cmc
xchg
gs
inc
fdivr
(bad)
push
fild
addr16
outs
mov
outs
sbb
and
jl
stc
jmp
stos
push
cmp
mov
repnz
call
cmps
adc
mov
loop
and
je
arpl
pop
jo
jp
inc
mov
mul
or
xchg
pop
mov
add
cli
daa
test
or
cs
dec
push
aas
or
sbb
jmp
lods
dec
(bad)
lahf
enter
sbb
sahf
shl
pop
pop
enter
mov
(bad)
xor
cmp
(bad)
jmp
xchg
inc
mov
push
cs
mov
call
icebp
sub
push
mov
dec
dec
cmp
loopne
cld
push
adc
mov
nop
jmp
leave
and
out
cmps
repnz
hlt
and
jg
jge
adc
rol
dec
and
pop
mov
inc
pop
sbb
leave
and
jno
in
mov
sbb
jl
fdiv
ret
pop
cld
stc
mov
leave
call
retf
mov
push
std
rol
and
xchg
popa
cmp
pop
mov
push
outs
stos
mov
jo
cvtdq2ps
fwait
and
mov
xchg
xor
xor
call
cli
bound
push
jne
pop
jno
inc
mov
ds
retf
cmp
push
jmp
jmp
iret
push
mov
call
stos
jo
sub
in
mov
mov
mov
rol
mov
jge
fdivp
les
mov
jmp
sar
lock
cmp
mov
mov
sar
mov
add
pop
cmp
repz
mov
add
sar
aad
stos
mov
shl
sub
rcr
add
ret
jne
or
imul
mov
daa
movs
add
mov
call
(bad)
cmp
ds
xor
cmp
in
(bad)
fsubr
popf
repnz
adc
mov
fsub
mov
repnz
int
jmp
call
mov
fnstenv
and
or
mov
jl
push
enter
fdivr
es
sti
iret
fist
in
mov
dec
data16
and
shl
fwait
in
icebp
or
fs
or
dec
or
or
inc
lds
es
and
jl
idiv
sahf
jae
sub
mov
sbb
cmps
clc
and
inc
inc
push
adc
stos
cmp
xor
cmp
xchg
sub
pop
dec
pop
cmp
(bad)
pushf
jns
in
inc
cmps
mov
push
and
popw
inc
push
sub
loopne
call
(bad)
xor
mov
mov
sbb
(bad)
iret
cmp
out
push
push
lods
push
mov
mov
imul
fstp
add
rol
adc
push
add
and
out
leave
sub
mov
rcl
outs
push
sbb
and
int
jl
sahf
mov
xor
pop
jmp
pop
xor
and
icebp
popa
sub
xor
add
repnz
or
fbstp
retf
(bad)
test
imul
inc
cmp
loopne
inc
stos
inc
sahf
push
mov
pop
pop
ja
dec
into
mov
push
int
jp
scas
pop
call
call
push
push
call
jns
and
and
in
push
xor
sbb
pusha
inc
ret
xchg
adc
outs
(bad)
cli
sub
into
pop
push
lock
mov
icebp
jbe
adc
push
add
out
or
gs
sub
mov
rcr
cmc
mov
or
pusha
pushf
inc
push
mov
jnp
imul
mov
cmp
and
clc
hlt
repnz
out
dec
ror
inc
sbb
inc
ror
adc
adc
mov
and
pop
fwait
call
mov
jbe
push
lock
pop
inc
popf
inc
stos
loope
or
out
jo
ds
out
div
or
mov
and
and
pusha
push
leave
or
xor
aam
mov
aad
ret
pop
addr16
rcl
jle
sub
out
xchg
adc
fwait
data16
fisubr
mov
lock
push
sub
mov
daa
stos
jbe
fcmovnb
retf
ds
out
adc
out
xchg
imul
imul
xor
les
add
adc
or
enter
pop
outs
dec
stc
pop
push
mov
mov
scas
mov
jbe
pop
das
popf
int
jp
in
dec
xchg
aad
fucom
and
xchg
popf
mov
pop
sbb
test
shl
jo
iret
cmp
and
mov
adc
pop
jns
mov
cli
(bad)
mov
stc
call
test
jb
cld
fcom
sar
lods
jb
stc
(bad)
mov
jmp
cdq
rcr
test
adc
xchg
jno
lea
pop
dec
aad
jecxz
ror
test
hlt
sub
pushf
mov
jecxz
and
and
pop
mov
dec
out
pusha
jg
push
xlat
fnstenv
aad
jecxz
xchg
sub
ret
out
outs
jbe
jge
imul
xlat
adc
out
dec
and
mov
leave
out
cmc
jne
out
(bad)
mov
inc
repz
sub
xchg
call
loop
mov
xor
xor
in
sub
addr16
(bad)
imul
and
(bad)
daa
xchg
xchg
jns
push
or
mov
mov
fs
mov
fdiv
push
push
mov
xor
push
int
pusha
xor
sbb
pop
iret
mov
popf
dec
mov
and
jge
adc
push
cmp
sbb
xchg
xor
xchg
test
pop
mov
sbb
push
pop
pop
shr
lds
jbe
out
or
idiv
xchg
inc
mov
xor
jb
int3
jmp
je
cmps
out
pop
xchg
cwde
push
std
sub
dec
mov
add
call
and
into
mov
fisttp
mov
inc
sar
data16
enter
in
test
sbb
int
mov
sbb
xchg
xchg
dec
pop
call
repz
dec
ins
push
dec
out
imul
xor
aad
cmps
fisttp
jae
push
push
xchg
ds
call
sahf
jb
push
or
dec
or
loopne
push
xchg
je
inc
jno
xchg
pcmpeqd
xchg
ins
out
cmp
jbe
call
ret
adc
jle
add
ror
out
sbb
loopne
or
cmp
sbb
call
inc
not
pop
push
call
push
repz
ss
imul
jo
xor
in
fild
gs
or
xchg
xor
jmp
loopne
cmp
pop
mov
(bad)
adc
inc
pop
sti
adc
mov
pusha
jo
or
add
aas
fwait
les
shr
nop
movs
pop
cmp
jb
shl
popf
sub
ret
xchg
cli
test
push
inc
mov
ror
mov
or
lods
inc
mov
loop
mov
(bad)
mov
jb
std
mov
icebp
rcr
ficom
cmc
adc
fisub
paddusb
mov
iret
jle
out
retf
outs
ds
test
xchg
jg
fcmovu
fistp
mov
ja
pop
mov
les
mov
out
daa
fidivr
sbb
mov
sbb
add
pop
mov
push
mov
cmp
aaa
mov
sub
sub
xor
sub
shl
xchg
js
call
or
daa
mov
fstp
pusha
mov
dec
mov
mov
mov
jg
inc
call
mov
inc
or
inc
arpl
iret
pop
sbb
js
adc
cmp
xor
cs
and
jnp
in
adc
ja
sbb
fdiv
js
cs
cmc
shl
jo
mov
jg
inc
ins
cmps
sub
sbb
nop
jg
pop
mov
in
mov
pop
sbb
xor
pushf
sahf
retf
mov
js
jge
inc
cmp
xor
cmp
dec
mov
xor
push
(bad)
imul
adc
add
pushf
or
jae
mov
sbb
fwait
mov
loop
fcmovu
popa
cmps
in
lahf
cdq
imul
aam
xchg
and
js
xchg
ins
(bad)
mov
pop
sbb
cld
nop
outs
mov
pop
loope
ja
sbb
mov
xor
js
int3
jecxz
jb
stos
inc
dec
mov
and
lods
add
pop
mov
iret
push
jns
in
adc
wrmsr
shr
test
iret
inc
jmp
pop
sub
inc
call
xor
jmp
push
fisub
mov
add
and
or
je
mov
mov
ror
dec
or
jb
sub
adc
cmc
jne
xor
mov
cdq
dec
mov
mov
push
cdq
cmps
int
out
lock
and
sbb
out
stos
fld
out
sub
in
dec
or
jnp
loopne
or
xlat
mov
fdivr
leave
ror
pop
cwde
fcmovu
and
pop
inc
mov
sbb
retf
daa
stos
cdq
arpl
push
ins
xchg
aaa
mul
sti
jg
xchg
push
jle
ror
int
add
jmp
ja
lods
or
xchg
mov
mov
sub
dec
leave
push
rol
xor
xor
mov
sti
sbb
fidivr
inc
inc
push
aam
rcl
scas
pop
mov
je
je
mov
xchg
adc
dec
push
loopne
add
jl
mov
push
jae
inc
fcom
cmp
test
push
cmp
fsub
fisttp
not
pop
mov
adc
mov
aam
xchg
sub
lods
sbb
xchg
cmp
dec
enter
jmp
xchg
mov
push
sbb
cmc
mov
adc
inc
lds
xchg
loope
jns
dec
pop
inc
mov
push
test
add
test
cli
xchg
mov
add
dec
imul
push
sbb
stos
inc
in
les
pop
aaa
imul
int
sbb
adc
sub
jbe
mov
or
(bad)
cmps
xor
mov
jle
xlat
into
jge
(bad)
loopne
pop
and
stos
cmp
jbe
xor
jno
mov
or
cmp
movs
push
popa
or
dec
push
inc
movs
in
sbb
loopne
adc
hlt
dec
test
mov
(bad)
pop
paddusb
mov
sbb
popf
mov
pop
push
imul
jns
xchg
add
into
push
mov
fwait
xchg
sbb
add
add
js
enter
push
das
sub
cmps
dec
sbb
clc
cmps
sar
or
inc
stos
lahf
mov
int
loop
imul
test
cmp
int
addr16
call
lock
adc
loop
rsm
mov
mov
xor
addr16
sar
stos
push
xchg
xchg
jbe
stos
jns
mov
xchg
ss
imul
xor
inc
repz
out
ffree
jbe
pop
mov
aas
icebp
xor
add
out
imul
pop
inc
xor
sub
inc
cmp
inc
imul
je
call
das
and
sub
outs
xor
loope
aaa
jp
inc
cdq
cmps
adc
inc
scas
div
out
pushf
push
mov
addr16
gs
sbb
mov
mov
lahf
int
in
pop
(bad)
cmc
jl
rcr
data16
sub
xchg
xchg
add
dec
xor
arpl
ror
ins
loop
push
xchg
pop
cld
push
inc
pop
cwde
mul
fst
jl
stos
fst
jge
(bad)
adc
cmp
and
mov
jb
add
mov
loope
test
test
call
add
ja
or
add
(bad)
lds
xlat
xchg
fs
loopne
dec
sbb
mov
in
cmp
int3
jno
ret
lahf
shr
or
push
into
jae
xor
push
test
sbb
push
mov
pop
mov
pop
ret
jnp
or
imul
mov
outs
and
xchg
aas
inc
xor
outs
cmc
lahf
ins
not
pop
jae
aas
mov
jb
lods
mov
sbb
or
add
in
and
mov
shl
loope
mov
arpl
or
push
jnp
pop
mov
nop
retf
cs
jne
pop
test
push
or
dec
mov
mov
mov
jle
mov
xor
imul
ins
push
mov
inc
adc
mov
inc
hlt
into
jne
adc
mov
into
(bad)
pushf
or
and
xchg
sub
inc
mov
aas
(bad)
rol
sar
daa
pop
push
jp
jns
cmp
fild
or
mov
xchg
jns
(bad)
cwde
pop
xor
ja
dec
rcr
(bad)
call
and
inc
ficomp
dec
mov
iret
mov
movs
xchg
jp
mov
popa
sbb
fadd
retf
mov
or
pop
imul
retf
and
loope
ds
outs
in
and
call
sub
movs
jmp
fwait
mov
inc
mov
xchg
jb
stos
test
adc
dec
push
pop
jae
and
sub
jae
ds
mov
shr
fcomip
cmp
int3
mov
mov
retf
mov
jne
jns
and
in
or
not
mov
mov
cmp
pop
fnstcw
push
gs
mov
cwde
dec
mov
mov
and
mov
adc
pmulhuw
xor
sub
mov
mov
loopne
dec
leave
sti
fwait
test
mov
or
sub
in
sub
fcom
(bad)
ficomp
push
bound
js
stos
cs
push
fs
retf
aam
push
mov
mov
dec
(bad)
jmp
pop
xchg
dec
(bad)
loope
and
mov
dec
data16
push
pop
or
push
and
out
inc
dec
cmp
xor
and
pop
aam
sub
arpl
push
add
jp
and
gs
shl
aas
mov
push
add
cmp
int3
push
or
or
push
fcmovnu
jmp
sti
test
push
cwde
aad
mov
popf
int3
xor
loop
xchg
mov
jl
(bad)
out
aam
int3
jnp
sub
xchg
sbb
pop
xlat
xor
add
jne
adc
stos
xchg
cmp
add
push
push
int
fsub
mov
pop
pop
shl
mov
sub
cmc
inc
mov
sbb
sbb
test
cwde
arpl
retf
cmp
dec
cmp
dec
pop
mov
mov
push
fs
jecxz
and
sub
ss
pop
std
fstp
jl
fistp
cmp
add
push
mov
sub
and
sbb
cmp
adc
inc
or
jecxz
ds
scas
xchg
inc
push
mov
cmp
arpl
jns
sub
inc
pop
shr
ins
inc
sub
push
cmp
cwde
repz
call
push
xor
int3
xor
aaa
pop
dec
push
(bad)
jo
lea
lock
push
scas
mov
out
sub
mov
rcl
sub
(bad)
mov
in
ins
cli
xchg
push
sbb
push
sahf
scas
mov
sub
sub
sub
enter
outs
and
sub
and
leave
pop
mov
ret
test
and
ffree
inc
push
adc
mov
(bad)
lods
cmp
adc
push
pushf
pushf
jne
xchg
pop
into
sahf
push
push
mov
test
inc
push
xor
jmp
pop
adc
pop
enter
dec
in
cdq
jne
cmp
ins
push
ftst
sbb
xchg
sub
and
xor
jmp
das
push
and
into
int3
dec
push
inc
xchg
or
sub
and
push
xor
imul
and
or
or
mov
cmps
(bad)
jno
adc
vmwrite
pop
xor
ss
fs
out
or
and
ja
fwait
sub
mov
sar
jmp
adc
mov
sbb
(bad)
fimul
push
leave
fsub
sbb
movs
cmp
cs
xchg
retf
lock
(bad)
es
aaa
stos
or
pushf
sub
xor
into
xor
scas
sub
scas
not
stc
cmp
pusha
mov
jmp
in
lahf
cmps
retf
jo
fwait
jg
test
aam
jae
jbe
nop
out
sbb
cmp
and
ficomp
cmp
fld
test
imul
lea
pop
sub
cmp
xor
or
enter
sbb
xchg
or
mov
cmp
mov
into
nop
xchg
or
jo
mov
pop
iret
pop
aam
lods
and
jmp
mov
aam
or
jmp
cmps
cmp
imul
imul
iret
ds
or
sbb
adc
adc
imul
(bad)
inc
lods
loopne
popf
fisub
xchg
jbe
xrstor
mov
sar
sahf
mov
and
fwait
xchg
test
inc
icebp
(bad)
ficom
ror
int
fstp
mov
pop
cmp
les
out
stos
sbb
pop
cld
push
outs
pop
(bad)
push
cmp
loop
cwde
mov
stos
sti
aaa
add
ret
pop
pusha
xor
mov
or
js
dec
(bad)
int3
sbb
pop
mov
lea
neg
push
sbb
cmp
dec
lahf
xchg
movs
adc
sub
inc
leave
add
pop
rcr
sbb
mov
(bad)
sub
xchg
pop
loope
jle
arpl
mov
and
int
lods
lods
aaa
daa
xchg
add
pop
jnp
rcr
cmp
adc
add
dec
push
xor
(bad)
loop
bound
sbb
adc
xlat
pop
(bad)
(bad)
mov
bound
sahf
in
mov
and
(bad)
js
jo
aas
push
gs
sub
lea
imul
shl
mov
add
sahf
adc
sub
stc
pop
fsubr
push
inc
adc
push
xchg
and
iret
mov
cmp
push
mov
jb
popa
cmps
jl
fldenv
jmp
add
fisttp
add
aam
pusha
in
or
dec
ret
ja
sti
xchg
xor
clc
dec
sub
add
arpl
nop
pop
call
leave
pushf
sbb
(bad)
sub
scas
mov
xchg
shl
dec
pop
dec
out
adc
sbb
push
add
imul
hlt
jnp
push
fst
int3
mov
xor
sbb
movs
adc
lea
sahf
enter
sub
outs
outs
sbb
pop
mov
fcomp
movs
xchg
enter
sbb
arpl
(bad)
pop
sub
xchg
ret
xchg
test
jge
movs
cli
dec
stos
dec
xchg
jmp
lods
jo
stos
not
mov
mov
xor
adc
sub
movs
jae
add
add
jae
add
test
cmp
or
dec
sub
push
cli
shl
ret
out
mov
cld
and
in
or
mov
test
div
adc
cmp
(bad)
mov
xchg
add
out
lods
lds
mov
xchg
int3
push
sar
add
in
sbb
in
mov
jl
popa
popf
rcl
and
out
ror
ret
loopne
rol
shl
stos
sahf
mov
mov
leave
fild
cli
arpl
add
jmp
and
pop
jp
loop
xlat
pop
fistp
call
aad
add
jp
add
mov
sub
lods
inc
mov
in
mov
sbb
jno
pop
lods
sbb
cmc
popa
cli
jle
mov
outs
xchg
add
repnz
or
enter
or
lods
je
imul
add
les
nop
scas
add
in
sub
mov
jmp
dec
pop
sti
sub
cwde
aas
iret
stos
or
jle
popa
jne
test
push
and
jmp
adc
fisttp
rcr
mov
add
jge
clc
outs
mov
mov
push
cmp
or
or
rcr
ja
push
cwde
mov
faddp
push
imul
add
xlat
mov
dec
(bad)
jno
xchg
dec
into
xor
out
es
std
push
loop
fimul
cwde
xchg
icebp
sbb
idiv
xchg
xor
arpl
inc
ss
fsub
jl
adc
mov
pushf
das
pop
dec
xchg
or
sub
pop
in
cmp
les
dec
cli
ror
pusha
fisub
mov
fcomp
cs
stos
mov
add
add
inc
fbld
bound
sbb
jo
mov
mov
enter
call
sbb
test
outs
and
addr16
aaa
jg
or
add
(bad)
cmp
push
daa
pop
ret
fld
jge
cmp
xchg
mov
iret
jne
sub
or
sbb
stc
add
pushf
fist
sub
or
(bad)
sub
sahf
int3
(bad)
push
clc
clc
aas
sbb
data16
mov
bound
pop
dec
cdq
std
and
sub
ins
out
js
jae
pop
jle
cli
les
xchg
jb
dec
cwde
push
jbe
push
aad
xchg
rcl
sbb
dec
lods
sbb
test
adc
inc
mov
bound
call
dec
out
mov
jnp
ret
jne
dec
inc
and
(bad)
sbb
arpl
fild
sbb
cmc
mov
add
mov
inc
mov
retf
dec
sti
jmp
lahf
sbb
cmp
pop
in
les
pushf
std
mov
add
ins
push
push
add
cmp
push
in
jb
xchg
hlt
(bad)
dec
mov
dec
adc
ror
sbb
mov
gs
scas
sbb
mov
sub
ss
lahf
pop
outs
fcom
je
fs
dec
inc
les
add
adc
xchg
mov
and
inc
icebp
xchg
or
(bad)
sbb
cmp
sub
xor
sub
(bad)
pop
and
fisttp
sbb
xchg
xchg
mov
sbb
sbb
pop
fld
cdq
int
ret
push
add
inc
fadd
test
xchg
sub
aad
push
sbb
cmps
push
into
mov
imul
mov
mov
push
adc
sub
popa
mov
scas
xor
or
(bad)
mov
push
push
pop
inc
cmp
stc
outs
fs
sbb
add
aam
mov
jne
test
test
jo
jmp
pop
sbb
out
sbb
mov
clc
add
add
sbb
xchg
jge
ret
into
out
outs
jmp
pop
mov
mov
xlat
icebp
cs
or
mov
add
adc
cdq
rol
ficomp
(bad)
mov
adc
adc
loope
inc
jmp
fisttp
xchg
lahf
lock
mov
inc
lds
cmp
push
and
jmp
enter
ss
or
push
(bad)
daa
or
push
mov
sbb
in
mov
pop
mov
and
add
mov
jne
stos
xchg
sub
push
sub
jnp
xlat
inc
scas
push
sbb
pop
rcr
sub
adc
test
les
sub
inc
jb
push
pop
adc
retf
clc
icebp
mov
aad
push
addr16
dec
aaa
mov
ds
inc
xchg
popa
scas
test
jg
int3
cmp
cwde
or
cmps
xchg
sbb
xchg
pusha
mov
out
pop
inc
stos
and
hlt
and
or
mov
mov
cwde
in
dec
out
ss
pop
cmp
mov
or
stc
das
fisubr
sbb
jl
call
rol
adc
add
in
or
out
sbb
fdiv
pop
scas
jmp
lsl
adc
xor
pop
ret
jp
std
movs
fninit
jns
ret
mov
lock
sub
das
push
add
data16
pop
mov
sti
sbb
in
mov
test
sbb
or
or
pop
div
nop
lods
je
sbb
jle
dec
lock
fsubrp
mov
pop
sahf
and
std
stos
push
fwait
pop
mov
inc
iret
ret
nop
ins
outs
pop
jbe
aam
in
repz
jae
(bad)
out
out
mov
cmp
and
loop
inc
pop
xor
loope
push
mov
and
lods
dec
and
dec
cmp
stc
cs
adc
pop
jb
(bad)
cmp
pushf
sbb
in
fiadd
or
mov
popf
xor
ss
sbb
cmps
ja
jmp
jecxz
xchg
sbb
mov
lods
and
mov
mov
jge
push
mov
push
fisub
scas
cs
dec
retf
fsub
push
(bad)
jmp
and
in
sbb
popa
push
sub
or
add
out
mov
dec
jmp
call
xlat
rcl
scas
test
inc
inc
jb
ja
ins
or
mov
clc
repnz
jbe
lods
shl
test
in
or
sub
jns
fcmovne
push
mov
ret
outs
outs
mov
retf
sub
(bad)
cld
sbb
add
or
mov
jmp
add
mov
cld
dec
sbb
pop
mov
sbb
sbb
das
inc
or
add
jge
ss
add
mov
sub
xlat
stc
scas
xchg
pop
mov
bound
adc
pop
into
in
jmp
push
inc
jno
test
push
(bad)
out
mov
pop
inc
or
rcr
dec
jns
movs
mov
xchg
stc
fisubr
dec
daa
not
xchg
push
(bad)
mov
punpcklbw
or
xor
mov
push
addr16
push
mov
lods
cmp
and
cs
xlat
and
arpl
test
stos
xor
bound
mov
sar
xchg
adc
cmp
std
push
jg
iret
arpl
mov
stos
push
inc
adc
in
in
sub
xchg
and
mov
movs
pop
mov
push
xchg
(bad)
sub
out
imul
sbb
or
lds
add
imul
inc
add
jp
jecxz
shl
shl
or
cmps
pop
pop
adc
(bad)
enter
cmp
cmps
ja
push
add
cmp
pop
scas
ss
adc
mov
aam
leave
jb
sbb
pusha
in
inc
rol
mov
push
je
or
ret
lea
inc
rcr
idiv
xor
mov
add
pop
pop
mov
cmp
mov
add
pop
rcl
sbb
retf
movs
cmp
ins
pop
push
pop
cdq
xchg
test
cli
nop
xlat
mov
add
mov
fst
push
das
and
cmc
jo
leave
in
mov
jno
inc
dec
and
(bad)
lds
sub
into
push
jmp
aam
cli
repnz
jno
sub
or
push
and
cmp
pusha
push
jo
sub
cld
idiv
sti
dec
test
test
sbb
adc
retf
jns
sbb
idiv
sbb
int
ins
stos
xchg
dec
fadd
sub
pop
cmps
push
inc
mov
mov
dec
in
lods
push
mov
jp
mov
add
jmp
retf
xor
in
and
mov
arpl
ror
pop
dec
jae
jmp
jne
ret
or
hlt
arpl
sbb
xor
dec
adc
sbb
je
fwait
jae
imul
in
cdq
cmps
pop
aaa
call
xor
int3
out
mov
imul
xor
js
addr16
es
sbb
lds
out
and
mov
aas
loopne
mov
pop
ret
sub
add
inc
push
mov
fld
(bad)
sub
xchg
stos
xor
aad
ret
dec
fcmove
jno
cwde
and
rcr
es
jp
(bad)
mov
push
xor
push
data16
test
xor
in
sub
or
mov
or
imul
pushf
mov
sbb
and
call
pop
cmp
lahf
lods
jecxz
leave
dec
sbb
das
hlt
scas
outs
out
sbb
outs
pop
ret
xor
pop
push
bound
pop
shr
adc
dec
dec
mov
mov
int
fsubr
mov
push
inc
mov
dec
cld
mov
scas
hlt
test
pushf
pop
or
loopne
call
(bad)
fwait
push
mov
pushf
loopne
add
std
jp
adc
mov
mul
mov
mov
jno
sbb
jp
fdivr
jmp
rol
add
jecxz
inc
fstp
dec
loope
ret
cmps
mov
cmp
dec
jae
shr
stos
inc
xchg
xchg
push
dec
add
cmps
cdq
or
(bad)
pop
push
sub
push
push
dec
imul
jnp
in
dec
mov
or
mov
cmp
stos
adc
test
loopne
adc
sub
mov
jo
cwde
loop
in
repnz
arpl
aad
push
push
retf
mov
hlt
rcl
pop
aaa
cdq
add
ret
mov
push
cdq
jge
leave
xchg
fld
pop
mov
sub
test
nop
scas
fdivr
jecxz
loope
dec
mov
adc
or
(bad)
fsub
ficomp
pop
xchg
cmc
gs
jmp
mov
xor
mov
sbb
add
stos
and
lahf
pusha
loop
sbb
fs
push
sbb
and
mov
pushf
inc
call
fild
shl
fdiv
mov
jle
mov
pop
and
xchg
call
mov
xchg
jle
jb
aas
(bad)
sbb
xchg
mov
test
in
in
out
push
xor
mov
lods
dec
outs
push
mov
movs
ins
sub
cmp
popa
div
cmps
cmp
rcr
adc
rcr
push
enter
mov
xor
ins
ja
sub
imul
mov
in
pop
scas
push
es
pop
scas
dec
in
icebp
sahf
xor
jnp
add
das
pop
test
ss
xchg
mov
push
mov
mov
xor
push
sar
cld
and
int
inc
(bad)
repnz
inc
sbb
add
mov
std
sbb
cmp
pop
popf
retf
fsubr
add
pop
xchg
sub
jle
scas
mov
and
and
jl
jge
retf
mov
pop
cmps
pop
fdivr
hlt
pop
in
ja
dec
fsub
int
call
stc
in
out
inc
push
dec
and
aas
data16
push
sub
xchg
(bad)
retf
adc
and
adc
cmp
test
mov
fs
mov
and
adc
cwde
xor
pop
xchg
cmp
stc
jb
sti
mov
mov
push
cmp
jne
push
jl
cdq
adc
dec
out
jae
adc
sar
icebp
das
int3
fcomip
leave
fwait
or
lea
mov
imul
shl
jne
jmp
loopne
scas
ds
dec
fwait
jbe
adc
mov
xor
into
fs
test
add
dec
in
jp
arpl
arpl
sbb
ret
out
shl
shl
xchg
sub
(bad)
jle
push
xchg
cmp
sbb
rcr
dec
mov
inc
aaa
scas
inc
ror
adc
xor
aaa
push
jmp
adc
dec
mov
add
clc
(bad)
popf
in
out
cmps
push
cmp
movs
and
shl
cmp
mov
into
mov
inc
xor
(bad)
cmp
aas
ret
mov
push
test
mov
ss
xchg
or
scas
cwde
sbb
pop
pusha
outs
and
fiadd
jns
jnp
je
pop
call
dec
lock
out
pop
lea
xchg
scas
sti
jnp
mov
push
dec
(bad)
cmp
(bad)
pop
in
sbb
push
sub
sbb
mov
shr
cmp
(bad)
clc
mov
inc
and
push
push
or
dec
test
in
sub
push
ins
pop
jbe
mov
ins
cmps
push
call
shl
add
(bad)
fidivr
shr
loope
or
loope
inc
or
cmp
(bad)
fdivr
mov
shl
aad
mul
sub
pop
call
shl
adc
add
mov
adc
and
ret
adc
ja
sti
add
enter
lods
shl
xor
repnz
leave
add
dec
mov
jno
int
gs
lahf
or
add
sbb
ins
mov
leave
data16
inc
popa
jp
nop
mov
fnstcw
push
dec
fcmove
and
dec
cmps
jnp
add
fs
(bad)
aaa
jge
jno
enter
lea
pop
mov
test
inc
test
sar
sbb
xor
cmp
cs
sub
cmps
movs
sar
movs
shl
fs
add
ins
xchg
jo
stc
or
add
repz
in
mov
mov
lods
pop
add
hlt
stos
ja
(bad)
test
cwde
fwait
push
jae
dec
mov
pop
sbb
jmp
jne
ins
ins
jb
lahf
and
adc
loopne
mov
sub
popa
xlat
test
rol
ins
sahf
ins
mov
xchg
xchg
jnp
mov
adc
retf
cmc
fwait
or
mov
js
ret
push
sbb
dec
dec
jl
and
xor
jo
cmps
lods
cmc
mov
mov
cdq
sbb
or
repz
or
xlat
cmps
out
nop
mov
jp
cmp
cmp
into
test
mov
mov
pop
mov
mov
dec
adc
push
sub
mov
push
loope
retf
sub
es
(bad)
mul
pop
pop
add
out
repnz
push
mov
pop
dec
fs
inc
sub
or
inc
jmp
and
ret
jecxz
jne
jo
jae
cmp
or
lock
imul
call
mov
inc
mov
add
pop
xchg
mov
cmp
sahf
cmp
test
mov
mov
out
pop
cmp
fdiv
lock
pop
enter
add
jbe
jbe
sub
les
and
xor
pop
push
jecxz
inc
push
aam
outs
sahf
shl
pop
xchg
loopne
scas
pop
int3
pop
xchg
retf
lea
dec
scas
xor
cdq
sub
xlat
dec
sub
fnstenv
mov
adc
mov
jbe
jle
aaa
xchg
fadd
lods
push
add
push
in
xchg
mov
scas
add
test
add
enter
cmp
xor
inc
add
jmp
xchg
jmp
cli
adc
mov
inc
cmp
(bad)
sbb
and
in
pusha
ss
push
(bad)
popf
aad
pusha
mov
imul
adc
dec
push
and
jbe
(bad)
fs
push
mov
std
cmps
out
mov
loop
lahf
fsubr
in
hlt
movs
cmp
push
xlat
and
ss
add
push
pop
rcl
cdq
fdivr
mov
shr
js
xchg
sbb
inc
and
shl
dec
mov
or
and
jb
fistp
ins
gs
add
pop
cmp
inc
lock
ins
mov
sub
or
or
sub
pusha
push
(bad)
outs
cs
in
les
mov
add
scas
in
pop
fstp
push
dec
pop
pop
outs
(bad)
stos
mov
push
fild
cmps
fsub
out
mov
pusha
arpl
fwait
shr
fnstcw
pop
jle
mov
mov
jge
jmp
outs
sbb
(bad)
adc
add
add
inc
inc
push
cli
jnp
xor
sbb
push
movs
sahf
arpl
in
mov
pushf
(bad)
mov
mov
mov
jns
imul
rol
pushf
sub
dec
mov
xor
pushf
sub
mov
int
jne
cmps
pop
mov
sahf
add
cmp
es
lds
enter
std
adc
fwait
jle
sti
mov
push
or
xchg
je
or
cmp
xchg
jl
arpl
mov
sbb
leave
cmps
ins
cs
popa
sbb
pop
cmps
mov
sbb
push
cld
out
stc
call
add
push
xor
sub
adc
and
add
retf
neg
inc
jmp
iret
mov
jmp
cmp
ret
hlt
push
pop
sbb
mov
inc
mov
adc
push
or
push
jl
mov
fnstenvw
movs
ficomp
in
fnstcw
xor
add
gs
imul
add
(bad)
inc
adc
fbld
pop
xchg
and
adc
add
(bad)
push
nop
jno
xchg
or
aas
adc
shl
cmps
in
mov
jp
jmp
out
lock
fwait
std
mov
lahf
shl
sub
rol
mov
push
mov
sub
lahf
ror
jp
lahf
(bad)
xlat
lock
inc
cwde
ret
imul
in
cli
push
xchg
jmp
xchg
fistp
xchg
test
cmp
mov
or
imul
or
cwde
or
imul
mov
into
sub
mov
add
cmp
jge
pop
add
cmp
cmp
fiadd
sahf
mov
in
leave
in
icebp
cs
xchg
inc
loopne
imul
adc
adc
mov
xchg
retf
xor
add
mov
jnp
fsub
fdivr
lock
in
aad
add
xchg
(bad)
adc
push
mov
xchg
add
cmp
or
inc
adc
fwait
mov
add
mov
movs
(bad)
push
test
pop
mov
adc
scas
movs
cli
data16
add
inc
ret
test
adc
sbb
gs
inc
cmp
sub
dec
jmp
data16
push
and
(bad)
sar
jmp
test
ins
adc
dec
test
or
jbe
lds
iret
popf
loop
mov
mov
loopne
push
mov
or
pop
fiadd
popf
shr
popa
and
(bad)
xchg
jmp
lock
jo
scas
cs
loopne
inc
xchg
and
std
sbb
mov
push
(bad)
popf
cmps
mov
sbb
sub
rol
mov
push
or
sbb
mov
add
movs
push
sub
add
retf
mov
(bad)
sub
mov
push
mov
adc
push
popa
mov
arpl
rcl
xor
imul
or
pop
jle
push
neg
xchg
sbb
leave
repnz
mov
int3
pusha
jno
push
or
sti
rol
imul
xlat
mov
cmp
push
call
or
mov
or
sbb
cmp
out
inc
outs
rcr
inc
pop
and
int
mov
sbb
imul
ror
pop
push
xchg
push
inc
ins
enter
and
loopne
xor
mov
fdiv
addr16
test
and
sub
dec
(bad)
aad
xchg
sub
mov
mov
cmp
pop
or
jae
pop
mov
mov
hlt
out
pop
or
loope
icebp
pop
jmp
mov
dec
xlat
dec
or
push
mov
xor
repz
adc
repz
cmp
aam
cdq
into
push
lock
mov
lea
mov
mov
outs
cmp
or
jno
out
mov
cmc
ja
leave
pop
(bad)
or
and
push
hlt
pop
jge
sbb
rol
sub
out
cmp
mov
mov
jae
jg
or
or
sti
aam
inc
xor
inc
and
mov
pop
pushf
mov
dec
jne
fsubr
mov
mov
mov
sbb
mul
mov
sbb
ds
adc
mov
inc
aam
fldenv
mov
popf
jg
cdq
pusha
push
stos
test
test
repnz
jne
out
in
mov
aaa
jmp
push
cdq
dec
pushf
or
stos
outs
loopne
stc
je
bound
pusha
call
pop
xchg
mov
addr16
(bad)
cli
mov
gs
scas
xor
outs
push
in
inc
cmp
jb
mov
xchg
inc
jnp
fistp
les
push
mov
outs
(bad)
xchg
enter
cmp
and
jmp
cmps
lock
(bad)
(bad)
mov
xor
adc
sub
ja
in
push
sbb
dec
addr16
jns
ja
cli
stos
aas
cwde
or
js
imul
sub
cmp
sub
adc
imul
retf
push
out
das
xor
and
outs
aam
inc
jl
inc
mov
mov
mov
jo
lock
adc
or
and
shr
inc
jb
add
cmp
xlat
(bad)
jns
push
mov
cli
js
jmp
xchg
in
cmp
or
pop
ss
sub
mov
xchg
sbb
cmc
shr
dec
dec
aam
add
loop
cs
test
jp
into
movs
(bad)
js
pop
cdq
(bad)
push
loope
test
mov
and
xor
mov
std
pushf
inc
dec
push
ins
add
je
daa
sub
sub
aam
xchg
sbb
jmp
xor
call
cmp
js
push
sbb
in
sbb
add
arpl
sti
(bad)
pop
retf
mov
push
lods
jmp
push
bound
fsub
dec
adc
jmp
push
pop
add
fldcw
sub
lods
or
dec
inc
pop
mov
lods
loop
ror
mov
xor
cli
frstor
lock
std
pop
icebp
ficom
inc
cmc
add
fwait
push
or
push
(bad)
out
pop
repz
jnp
dec
inc
repnz
ret
ds
or
pop
jl
push
mov
mov
mov
mov
(bad)
clc
pop
push
ja
lds
push
jae
ds
mov
push
pushf
js
push
sbb
push
jl
jns
push
je
push
out
push
mov
imul
and
sbb
pop
or
inc
xor
rcl
call
cwde
push
and
sbb
sub
fisub
popa
dec
mov
lods
xchg
xor
mov
pop
popf
mov
pop
cmp
not
jmp
sahf
xor
cmps
xchg
mov
xchg
adc
dec
into
adc
xchg
les
ss
inc
push
sub
mov
adc
test
xchg
xchg
shl
cmps
or
sub
add
je
or
fistp
(bad)
loope
adc
(bad)
mov
js
jge
pop
cld
leave
mov
dec
dec
icebp
pop
add
dec
push
sub
aaa
xchg
aaa
push
jns
dec
inc
call
call
aas
loop
ds
cdq
mov
mov
call
sbb
dec
xor
test
out
sti
push
mov
cmp
fimul
xor
push
inc
mov
in
scas
sbb
add
adc
(bad)
out
rcr
jle
aam
out
out
ret
and
stc
aad
mov
cmc
mov
cld
(bad)
call
iret
int
in
mov
aam
inc
test
dec
push
mov
adc
out
cwde
and
push
xor
add
ds
jbe
xor
ret
pusha
pcmpgtd
in
adc
mov
cmps
and
outs
mov
repz
xchg
xchg
lds
mov
cmps
xchg
leave
icebp
or
js
dec
cmp
lea
es
fisub
lock
outs
push
cwde
lds
pop
iret
aam
pop
mov
fimul
aaa
shr
sub
xor
sub
push
or
iret
shl
push
cmp
pushf
xchg
jns
push
or
cld
int3
in
mov
dec
fwait
dec
xchg
push
cdq
test
and
fstp
sbb
in
nop
mov
ret
push
cmps
into
xor
push
cmp
adc
mov
and
call
cdq
mov
lds
cmp
cwde
dec
xor
popf
xor
dec
or
shl
and
mov
or
cwde
ror
movs
test
and
(bad)
enter
sub
xchg
test
jnp
mov
(bad)
shl
xchg
enter
pop
test
scas
mov
sub
ins
ss
lahf
test
aas
xor
jmp
xchg
adc
aad
lock
inc
or
inc
xchg
xchg
xor
lods
mov
mov
cmp
mov
js
mov
out
sub
call
aaa
mov
in
stos
and
mov
lds
jmp
clc
jne
and
add
xchg
pusha
loopne
clc
fbld
fldcw
add
mov
fs
mov
fmul
add
add
add
bound
scas
pop
iret
xor
add
sbb
or
mov
hlt
arpl
mov
mov
stc
sub
add
mov
mov
gs
push
inc
mov
mov
mov
test
les
mov
xchg
jae
jp
inc
retf
fadd
and
fidivr
dec
call
ficomp
daa
movs
imul
fnstsw
pop
lods
test
and
data16
(bad)
lods
mov
sub
lahf
inc
dec
les
cmp
inc
cmps
xchg
cmp
jns
or
sub
push
stc
pop
test
cmps
cli
dec
jne
stc
(bad)
sub
fisttp
lea
neg
retf
xchg
push
xchg
dec
adc
sbb
repnz
xchg
int
icebp
shr
adc
ret
add
test
es
int
pop
fcmovbe
into
sub
dec
xor
test
(bad)
sbb
pop
push
in
jne
popf
jp
xor
shr
nop
inc
mov
cmp
leave
leave
inc
adc
das
mov
mov
pop
push
or
das
and
push
cs
call
mov
sub
cs
push
rcl
dec
movs
dec
hlt
fcomip
in
ins
xchg
cmp
je
mov
out
sub
movs
(bad)
push
mov
jmp
aaa
xchg
div
das
idiv
loope
cli
xchg
xchg
or
dec
mov
jle
adc
fldenv
les
into
jmp
xor
cmps
lods
or
mov
pusha
fstp
test
push
mov
jno
daa
fwait
lahf
xchg
iret
call
cmp
fwait
push
jl
push
sub
sbb
mov
add
xchg
enter
sub
es
fisubr
sub
cmp
pop
fs
cwde
shl
out
cmps
jl
sub
hlt
inc
data16
mov
mov
push
jge
mov
or
push
jmp
jns
mov
lock
push
jge
add
push
mov
jecxz
inc
popf
aam
fmul
lea
movs
scas
out
(bad)
sbb
shr
es
xchg
mov
push
sub
mov
daa
cdq
sub
jecxz
call
in
mov
shr
mov
adc
pusha
cwde
add
dec
fwait
adc
sub
pop
mov
fmul
mov
test
pop
pop
sbb
in
add
or
in
cmp
push
aaa
pop
call
and
jmp
push
add
jmp
aas
inc
out
aad
jl
jnp
out
adc
adc
test
xchg
stos
and
pop
fwait
mov
xchg
stos
mov
stos
mov
dec
jmp
xor
cld
arpl
imul
adc
or
dec
retf
cld
mov
hlt
xchg
int
(bad)
push
pusha
out
(bad)
cwde
lock
int
lock
out
and
std
sub
cli
fst
push
pop
mov
nop
or
ret
loope
pop
push
jmp
stc
push
adc
inc
jnp
data16
call
lods
aaa
xchg
out
cmp
or
mov
inc
xor
test
jg
pushf
cmps
jmp
stc
scas
ss
and
js
mov
push
stos
mov
addr16
push
out
jecxz
shl
xor
pop
fs
aam
add
nop
mov
adc
adc
dec
ins
pop
cmp
mul
mov
nop
(bad)
cmp
lds
dec
pop
gs
mov
sbb
push
pop
dec
ret
push
pop
icebp
lock
mov
sbb
das
mov
fsubr
ins
call
add
mov
mov
outs
xor
inc
jmp
add
push
outs
inc
xor
mov
add
cmp
fdiv
pop
dec
jbe
mov
inc
in
sbb
mov
(bad)
idiv
sub
icebp
mov
lods
into
jg
mov
jg
sub
jns
mov
pop
cli
pusha
arpl
daa
sub
or
in
sub
aam
addr16
pop
out
imul
and
inc
xchg
dec
punpckhwd
and
sbb
retf
xchg
je
retf
into
jno
mov
int3
sub
mov
aaa
mov
inc
in
cmps
hlt
test
shr
fs
xchg
mov
aad
adc
movs
lds
div
out
xor
fimul
mov
inc
repnz
aad
gs
rol
adc
mov
inc
xor
jp
shl
dec
mov
imul
jbe
lahf
or
shl
fcmovu
mov
mov
je
fild
rcl
mov
pop
mov
jmp
mov
dec
pop
rol
sbb
(bad)
and
push
test
lods
stc
mov
test
adc
jp
test
or
pop
mov
aad
inc
mov
ja
mov
mov
push
popa
outs
xchg
ins
aam
mov
jno
push
dec
push
inc
stc
xchg
lods
cmp
bound
cmp
xchg
test
jmp
aaa
cwde
adc
sbb
(bad)
add
push
sbb
pop
cmps
ja
out
repnz
mov
jbe
(bad)
scas
imul
stc
(bad)
adc
pop
shr
pushf
(bad)
stc
stc
lahf
adc
pushf
jo
test
ficom
fwait
xor
enter
int
mov
enter
xchg
mov
or
ror
repz
mov
and
aam
mov
std
inc
cmp
movs
mov
add
jns
sub
dec
mov
imul
bound
push
call
push
dec
(bad)
mov
je
adc
add
adc
xor
sbb
mov
mov
adc
or
or
or
inc
cmp
call
stos
mov
push
jns
or
push
shr
xchg
mov
test
add
call
fiadd
lods
mov
loop
jmp
(bad)
mov
rcr
cmps
mov
movs
inc
push
pop
and
call
jmp
xchg
jle
lods
fs
sar
pop
mov
mov
lahf
inc
cmp
add
pushf
dec
call
push
and
push
xlat
out
dec
pop
(bad)
inc
pop
(bad)
push
(bad)
xlat
pop
out
cld
cmp
or
fcomp
adc
aaa
lods
cmc
push
lods
(bad)
call
std
pop
add
xchg
rol
(bad)
inc
push
call
leave
or
data16
jmp
sub
jp
ds
jp
push
js
xlat
in
lahf
in
lods
and
aam
jl
inc
and
popa
movs
js
jg
xchg
xchg
mov
jno
in
inc
imul
fidiv
bsr
cdq
xor
fild
int3
in
mov
out
retf
ret
xchg
rcl
push
lds
push
mov
fdivp
add
mov
ja
pop
and
fistp
in
test
fwait
pop
push
push
xlat
out
std
xchg
fisubr
lahf
or
cmp
imul
xor
xchg
ret
pop
push
(bad)
enter
in
test
push
inc
push
shl
shr
cmp
sub
rol
jmp
cmp
repnz
xor
adc
cmps
mov
mov
add
or
out
or
pop
push
cmps
pop
pop
(bad)
in
or
ins
inc
(bad)
gs
popa
inc
ss
dec
loope
add
inc
or
std
rol
(bad)
and
mov
jbe
retf
out
or
scas
mov
movs
sbb
sub
or
xor
out
push
pop
loope
ss
xchg
pop
test
xor
mov
pop
jmp
sub
das
lods
rcr
lods
test
lods
jnp
mov
mov
push
or
outs
mov
rcr
(bad)
mov
add
(bad)
adc
xchg
xchg
fcomp
add
adc
jb
ret
aam
sti
mov
ror
cmps
jae
jo
mov
mov
cmp
or
clc
add
sti
xor
stos
scas
pop
stos
xchg
adc
loope
mov
gs
sub
iret
rcr
add
test
in
leave
and
sub
add
jle
loopne
stos
jnp
add
xlat
(bad)
and
jmp
call
(bad)
jno
cmp
gs
add
jns
adc
inc
mov
enter
xchg
jle
in
daa
mov
or
or
inc
js
mov
mov
push
mov
das
inc
cmp
jno
jnp
sub
xchg
jl
inc
pop
jmp
dec
add
mov
or
cmp
xchg
bound
in
jo
adc
cwde
sub
cmp
pop
or
sbb
cmp
dec
cmc
jg
add
push
rol
enter
push
xor
xor
or
iret
jle
pop
test
fstp
push
fstenv
and
sbb
jecxz
mov
push
(bad)
push
cmp
sbb
pop
mov
hlt
dec
lock
mov
mov
and
rcr
mov
sub
inc
cmp
mov
lods
mov
inc
(bad)
xchg
retf
xchg
jnp
popa
sub
dec
adc
inc
or
popa
not
stc
adc
les
repz
sbb
and
sub
sahf
and
sub
(bad)
jl
aad
and
cmp
enter
inc
pusha
cld
mov
scas
shr
pop
fstp
aad
add
stos
pop
inc
push
xchg
adc
in
xchg
jne
xor
ret
stos
push
mov
sub
scas
arpl
mov
sub
ret
idiv
xor
data16
jle
scas
inc
jae
add
(bad)
add
adc
pushf
sub
sbb
pop
fcomp
xor
xor
pop
adc
test
fcomp
lea
outs
pop
mov
pop
not
cmp
(bad)
(bad)
jp
sbb
call
in
pop
cmps
inc
mov
int
sbb
fcmovnb
inc
push
in
retf
mov
jno
out
out
fmulp
dec
in
mov
xor
and
(bad)
loop
mov
xchg
cmp
jns
adc
clc
push
add
push
(bad)
and
mov
sbb
or
and
add
jle
xchg
iret
outs
cwde
and
jne
in
dec
or
movs
mov
mov
rcl
add
cmp
enter
out
nop
dec
or
not
leave
xor
mov
ret
add
jmp
fsub
mov
rol
imul
mov
xor
mov
mov
fstp
sbb
lods
fmul
frstor
mov
int
bswap
jne
xor
xrelease
jp
iret
xchg
fwait
xchg
push
int
push
out
xchg
pop
jo
fucomp
xor
cld
and
mov
fnstcw
mov
pop
pop
jo
cmps
neg
add
pop
out
xor
mov
jno
jbe
jmp
dec
shl
push
ret
out
dec
jnp
or
repnz
pop
jmp
pop
jae
adc
jg
int3
(bad)
mov
sbb
scas
rol
outs
mov
mov
xor
inc
lock
mov
das
ins
daa
or
or
enter
lea
fdiv
dec
pop
imul
pop
mov
(bad)
push
cmp
sub
popa
out
stc
cmp
dec
xor
push
jno
cmp
test
(bad)
int3
sub
jns
inc
pop
test
shr
pop
dec
add
and
xor
loopne
dec
fldcw
jl
in
pop
mov
pusha
jmp
push
inc
jbe
pop
shl
loop
hlt
xchg
jnp
add
jge
in
push
mov
test
jl
sbb
push
push
inc
inc
sbb
inc
jo
ss
mov
or
es
and
inc
stos
sbb
mov
imul
add
test
or
call
xchg
aad
dec
inc
addr16
movs
push
inc
add
add
cmps
mov
stos
jbe
ss
lods
(bad)
les
lock
dec
leave
jnp
test
outs
adc
inc
or
(bad)
mov
popa
fst
xor
retf
ja
push
xchg
mov
ret
pop
add
lods
ja
(bad)
sub
pop
xor
and
xchg
(bad)
in
scas
mov
test
pop
enter
retf
in
rcl
ins
lods
popf
cld
cwde
cmps
shl
ret
cld
add
and
and
sub
jge
xchg
(bad)
jmp
dec
pop
fidivr
sbb
fldcw
lds
xor
sbb
xchg
cmp
cmp
cli
inc
stos
je
outs
add
jb
and
dec
push
push
mov
xchg
loope
or
mov
cmps
add
add
fild
imul
cmp
xchg
icebp
arpl
clc
jbe
pop
mov
stos
inc
int3
int
inc
dec
ins
and
adc
push
jb
rcl
sbb
and
inc
repz
sbb
xor
sbb
add
cmp
(bad)
(bad)
lods
sbb
adc
stc
cmp
or
ret
aas
and
mov
mov
enter
adc
mov
das
aas
lea
push
pop
mov
inc
fcmove
call
cld
push
inc
scas
push
movs
push
je
jmp
aad
div
xchg
inc
xchg
xor
adc
jge
inc
test
xor
rcl
clc
repnz
push
pushf
jle
dec
loop
or
sub
enter
mov
or
gs
xchg
test
pop
fisub
shl
lahf
inc
fisttp
pop
cs
je
dec
movs
iret
aaa
dec
mov
jnp
xchg
repz
aas
dec
scas
xor
lock
test
out
push
mov
shl
jp
push
aam
rcr
aad
push
inc
in
xor
and
pop
ret
sbb
add
push
retf
cmp
fist
xchg
jl
loopne
push
cli
scas
mov
xchg
adc
inc
mov
push
mov
sti
ss
into
or
dec
sbb
add
adc
push
cli
sbb
mov
inc
pop
sar
call
mov
push
push
add
add
call
mov
outs
add
lods
sets
pushf
cmp
out
jmp
aad
push
repnz
dec
scas
sbb
lahf
call
jae
pop
neg
add
mov
adc
push
jnp
add
cmp
loope
or
mov
(bad)
out
popa
adc
inc
pop
or
push
sti
in
mov
mov
pop
dec
jmp
fiadd
sub
cmp
not
xchg
or
jne
jg
cmps
sar
jp
test
js
mov
and
pop
cmc
in
inc
pop
sub
stos
xchg
inc
cli
push
mov
cdq
pop
call
and
jbe
nop
call
and
push
aam
pop
or
imul
mov
xor
xchg
and
sbb
out
icebp
repz
or
ret
aam
nop
mov
add
mov
jns
dec
push
and
cmp
stc
add
and
aam
mov
xor
xchg
movs
sbb
std
add
mov
inc
(bad)
in
retf
mov
icebp
mov
repz
aad
sub
cmps
ja
and
cdq
add
rcl
arpl
lahf
sub
inc
test
and
gs
test
adc
popa
xor
addr16
xor
nop
cmp
dec
mov
ror
imul
dec
sbb
cwde
push
div
inc
adc
test
add
dec
popf
inc
ss
add
sbb
ds
test
sbb
leave
ins
push
add
pop
hlt
mov
(bad)
and
cmp
sbb
or
neg
cdq
pop
jno
mov
imul
add
inc
and
mov
mov
mul
push
mov
xor
mov
std
mov
push
dec
inc
cdq
dec
rcl
loopne
and
cdq
xlat
repz
push
int
pop
jb
jmp
push
push
push
(bad)
in
dec
ret
outs
xor
mov
inc
jecxz
sub
sbb
cmp
lods
shl
retf
retf
dec
dec
dec
shl
cmps
loopne
pop
icebp
icebp
xchg
mov
icebp
push
jmp
cdq
cmp
mov
dec
into
sub
pop
test
in
ret
push
ins
les
sub
popa
in
in
sbb
and
leave
call
mov
inc
fldcw
jmp
pop
in
push
idiv
rcl
xchg
sti
add
loopne
int
rol
movs
repnz
dec
sub
inc
aaa
mov
fidiv
repz
mov
xchg
(bad)
xchg
in
call
jnp
push
ins
adc
xchg
lahf
cmp
fisttp
mov
in
movs
mov
push
cwde
sub
add
pop
(bad)
xor
mov
in
mov
cmps
lods
xor
adc
fistp
int3
loop
ret
cmp
push
rol
shl
jl
cdq
cwde
cmp
das
or
jno
pushf
jae
fyl2x
push
push
mov
adc
movs
or
jmp
int
rcl
call
jg
sub
adc
xchg
inc
jne
mov
cmp
inc
and
xchg
sbb
jl
into
sbb
lahf
sbb
xchg
add
jae
push
jmp
mov
sub
out
iret
dec
in
test
sub
sub
push
pop
mov
pusha
in
and
xchg
xchg
and
(bad)
je
sub
sti
xchg
or
pop
mov
call
xor
adc
lock
test
retf
retf
into
inc
or
mov
push
jmp
(bad)
out
ja
jl
test
jo
xchg
dec
mov
pop
xchg
push
add
dec
in
dec
jnp
daa
in
and
retf
jp
call
fcompp
sbb
(bad)
adc
ret
lea
pop
sbb
fwait
xchg
push
push
js
mov
xor
cmp
push
push
(bad)
pop
sub
lea
shl
bound
sub
add
sti
sbb
mov
mov
dec
pop
sub
loope
or
int3
sbb
xchg
mov
inc
iret
(bad)
je
in
add
lock
mov
fist
xchg
shr
pop
rcr
and
movs
clc
rol
mov
mov
call
mov
shl
push
pushf
jmp
hlt
push
(bad)
leave
or
gs
mov
cld
adc
cld
lods
into
rol
je
retf
mov
cmp
out
add
inc
shr
je
fs
hlt
ret
dec
ret
sbb
mov
xchg
dec
xor
leave
push
pop
jnp
and
or
hlt
or
addr16
mov
fmul
mov
stos
in
shl
inc
jno
xchg
xchg
dec
ins
sub
dec
adc
jmp
scas
adc
daa
movs
std
cmovb
add
dec
ss
cmp
pop
push
mov
in
push
rcl
jg
dec
(bad)
daa
sbb
mov
and
pushf
jl
adc
pop
push
cmc
sbb
or
push
lock
mov
not
adc
stos
sbb
mov
imul
push
add
lods
(bad)
cld
js
lods
icebp
lods
jns
push
add
xchg
xor
push
push
stc
pop
je
lahf
push
adc
in
adc
aas
jbe
int3
ret
mov
mov
leave
test
xor
sub
inc
scas
imul
add
xchg
out
jno
sbb
inc
in
adc
mov
cdq
push
(bad)
or
xchg
inc
data16
out
ret
mov
iret
mov
sbb
dec
int3
(bad)
stc
rcl
mov
or
leave
cli
(bad)
in
call
call
std
adc
push
push
inc
aas
mov
and
jg
mov
mov
sub
adc
mov
pop
push
in
cs
cmps
loope
outs
jo
les
dec
sub
push
jmp
inc
xchg
push
push
(bad)
std
sub
xchg
mov
mov
clc
(bad)
(bad)
push
mov
dec
out
lock
mov
pop
ins
lea
fcom
adc
dec
push
and
xchg
shl
xchg
mov
outs
int3
into
ins
loope
sub
mov
fs
add
addr16
aam
xor
push
pop
jg
mov
mov
jns
imul
imul
cmp
sbb
mov
cmp
sbb
jno
arpl
movs
jno
rol
adc
(bad)
call
jge
nop
call
ins
jae
push
adc
jg
xor
call
mov
dec
xor
and
stos
mov
mov
and
fcmove
shl
jmp
pop
test
xor
mov
mov
adc
repz
dec
pop
mov
push
das
cmp
add
dec
int
sbb
xchg
xchg
pusha
test
inc
scas
xchg
lds
jae
and
pop
inc
jno
or
jno
dec
xor
mov
inc
dec
sbb
adc
cwde
add
aam
sub
mov
std
imul
movs
or
in
push
mov
and
sbb
stos
xor
mov
mov
fs
add
aam
mov
jae
rcl
lods
mov
shr
dec
xlat
inc
push
mov
icebp
xchg
push
repnz
xor
pop
pop
mov
xchg
push
xlat
es
pop
or
adc
in
loop
ja
inc
retf
pop
and
(bad)
stc
inc
inc
cld
push
jl
and
std
test
mov
hlt
xlat
fs
shl
ss
repz
imul
shr
xchg
pop
stc
int3
movs
sub
mov
push
sub
xor
hlt
cmp
ins
jbe
jo
ins
adc
xor
mov
mov
add
lods
addr16
enter
ins
cmp
cs
in
adc
frstor
xor
xor
sbb
ds
ins
lods
pop
test
repz
cmp
loope
shl
nop
push
pop
push
mov
ss
adc
xor
adc
lahf
test
add
add
shl
imul
dec
pop
and
sub
mov
mov
sbb
fisttp
shr
push
ins
bound
imul
add
test
scas
sbb
push
dec
push
je
pop
sar
pop
add
fst
xor
cmps
jecxz
sub
aad
aaa
sbb
sar
push
fcmovu
retf
adc
pop
or
ror
mov
ja
dec
mov
xor
jns
inc
jb
les
add
dec
dec
(bad)
pushf
jnp
out
pop
ins
sub
mov
push
add
test
mov
adc
mov
loop
movs
sbb
out
or
cld
inc
aad
inc
mov
jmp
lea
add
dec
mov
cld
addr16
xchg
or
or
fadd
mov
push
mov
fwait
pop
pop
icebp
mov
mov
jmp
lock
sbb
daa
adc
xor
in
stos
xchg
mov
push
pop
(bad)
mov
(bad)
and
adc
mov
pop
sahf
(bad)
cmps
xor
mov
lods
or
jbe
sbb
(bad)
pop
fiadd
mov
jecxz
dec
in
hlt
and
push
inc
stos
out
outs
xchg
inc
sbb
dec
mov
adc
add
xlat
sub
jo
outs
scas
cmp
mov
xor
mov
iret
mov
mov
mov
int
ss
sbb
xor
lods
hlt
leave
xchg
(bad)
and
lock
and
and
fnsave
out
lds
std
sub
fisttp
dec
cdq
mov
jae
fistp
les
dec
mov
add
pop
dec
mov
and
in
ja
(bad)
arpl
pusha
movs
or
repnz
push
xchg
cmp
inc
(bad)
js
mov
ins
sub
ror
fisttp
ins
mov
(bad)
shl
test
call
cmp
fnstenv
jmp
hlt
mov
out
cmc
cmp
out
sbb
retf
sar
xor
push
and
lahf
cmc
pop
add
ficomp
in
sub
mov
fwait
xchg
jnp
add
mov
jp
xchg
inc
cs
stos
leave
mov
adc
pop
push
call
(bad)
imul
push
xchg
and
jle
jmp
daa
dec
pusha
inc
mov
mov
sub
div
or
retf
cmp
push
test
repnz
inc
push
dec
test
movs
aaa
imul
push
repnz
int3
addr16
retf
dec
outs
out
mov
cmps
lock
or
push
mov
xchg
jae
cmp
xor
sbb
push
(bad)
cld
not
sar
les
jp
jge
call
xor
or
jmp
into
popf
data16
dec
push
xor
pop
jmp
mov
pop
imul
mov
aad
add
xchg
dec
push
mov
cwde
icebp
mov
xor
ret
jno
jae
dec
inc
push
pop
sbb
ret
cld
xchg
and
jge
xor
shl
lds
mov
inc
gs
bound
test
aaa
fistp
mov
push
sub
pop
cs
(bad)
ror
mov
dec
in
jbe
push
bound
add
mov
retf
or
cli
shl
dec
cli
loop
push
or
ins
scas
imul
das
scas
(bad)
pmaxub
mov
pop
and
aaa
sub
push
fidiv
aaa
xor
shl
mov
es
sub
loopne
loopne
add
ficomp
dec
dec
xchg
cmp
jnp
pop
sbb
stc
push
fisub
loopne
loop
jp
xor
into
or
outs
jge
lods
xor
retf
sub
test
and
out
sti
adc
fild
adc
pop
mov
fadd
mov
jne
pop
mov
mov
fld
and
dec
add
adc
jmp
sbb
sbb
mov
mov
add
les
imul
jo
xor
enter
pop
out
adc
dec
outs
xchg
cwde
in
push
(bad)
xlat
stos
xchg
leave
push
mov
lock
popa
xchg
pop
mov
pop
dec
sub
pop
hlt
push
pushf
jb
push
pop
inc
sbb
shr
jnp
or
pop
adc
cmp
popf
retf
adc
scas
ds
mov
iret
jbe
ror
mov
das
mov
push
das
ficomp
xchg
fldenv
call
or
aas
mov
inc
jmp
retf
ror
dec
mov
shr
or
mov
push
(bad)
jae
je
fmul
test
xlat
popf
or
push
imul
jb
sbb
cmp
xor
aam
pavgw
adc
jmp
dec
mov
xor
or
push
xor
into
inc
sahf
es
adc
aam
adc
inc
mov
xchg
nop
(bad)
jle
inc
push
lds
mov
add
fs
mov
mov
jae
mov
xlat
out
fdivp
cld
shl
and
cmp
mov
shl
sub
inc
jmp
cld
xor
(bad)
aam
jl
out
sbb
push
jg
push
add
gs
pop
jle
and
imul
rol
mov
icebp
stc
or
aad
pusha
cli
(bad)
or
scas
dec
cmps
sahf
test
and
cwde
add
out
jmp
enter
aam
xchg
dec
jmp
fist
mov
xlat
int3
mov
into
mov
push
jae
fist
jbe
movs
adc
push
imul
mov
xor
pop
xchg
ins
in
add
adc
xor
das
movs
(bad)
mov
sub
mov
cmp
jp
push
das
test
fnsave
or
xor
(bad)
pop
test
lahf
xchg
or
in
jmp
sbb
aaa
sbb
in
cmps
or
sbb
fisttp
sti
push
mov
cmp
data16
xor
and
push
movs
repnz
arpl
scas
arpl
outs
loop
inc
push
aaa
in
call
and
sub
(bad)
adc
and
push
in
mov
pop
inc
xor
frndint
movs
retf
inc
jno
adc
xor
pop
dec
pop
jmp
sbb
jecxz
sub
jne
sub
aad
push
movs
imul
fidiv
mov
mov
and
sahf
scas
cld
pop
cmp
mov
and
cmps
lock
sub
push
dec
or
loop
(bad)
aam
mov
dec
aad
push
out
les
js
xchg
imul
fdiv
mov
cmp
into
movs
mov
outs
pop
lods
mov
aad
mov
shl
or
in
push
push
mov
outs
jno
out
enter
mov
sub
add
into
adc
sub
scas
mov
inc
test
out
bound
cmps
call
inc
xchg
jp
sub
loope
div
ret
push
cld
gs
push
cs
mov
or
sub
sub
loop
jle
push
sahf
xchg
rcl
and
xchg
jg
sbb
dec
int
mov
and
jmp
test
adc
js
test
inc
scas
int
ds
cld
adc
lds
push
mov
ins
movs
scas
(bad)
in
mov
dec
lahf
(bad)
mov
scas
loopne
pusha
sbb
out
(bad)
aam
xor
pop
rcl
inc
jg
outs
in
sbb
cmp
dec
test
xor
xlat
xor
in
jae
movs
push
repz
loope
adc
jnp
aas
imul
out
sar
outs
and
add
(bad)
xlat
int
out
(bad)
loop
mov
in
sub
ficom
push
je
or
mov
fidivr
mov
dec
aas
arpl
dec
imul
dec
push
in
and
loop
sbb
aas
mov
(bad)
test
pop
lea
xchg
pop
lods
xor
in
ss
sti
push
pop
dec
loope
jecxz
mov
xchg
sub
mov
mov
cmp
ret
mov
cli
or
fsubr
inc
xor
out
in
adc
xlat
pushf
and
mov
enter
mov
int3
bound
inc
std
mov
imul
cmp
add
imul
mov
mov
lds
push
sar
add
cmp
aas
ret
test
adc
lea
push
sub
mov
sub
test
daa
ds
bound
movs
stc
test
pop
mov
xchg
jle
ds
push
pushf
scas
push
pop
ds
push
jle
jbe
xchg
add
dec
mov
dec
push
repz
push
arpl
lds
(bad)
sub
xor
fmul
call
cmp
xchg
jb
outs
adc
loop
add
and
aad
imul
inc
je
cld
mov
inc
or
mov
cmc
inc
retf
dec
push
push
in
lods
push
inc
nop
add
or
jecxz
xchg
iret
xchg
xor
and
xchg
loope
mov
imul
dec
mov
out
imul
sahf
dec
retf
pop
ret
into
jg
ror
jmp
jbe
jp
cmp
adc
cmp
xchg
pop
adc
dec
test
sahf
(bad)
fsubr
adc
cmc
int3
dec
or
ins
mov
pushf
repz
popa
fnstcw
iret
adc
push
adc
push
stc
ds
test
iret
xchg
out
dec
test
(bad)
pop
jo
xchg
out
dec
mov
movs
int3
ins
and
out
mov
mov
leave
fild
lea
or
sbb
fcompp
and
jmp
xor
jne
sbb
fistp
pop
or
pop
add
bound
jne
xchg
pop
xlat
dec
or
pop
add
(bad)
cmc
fwait
jmp
(bad)
ins
inc
jns
mov
pop
scas
lea
stos
ins
mov
dec
mov
sar
sti
xchg
imul
lahf
and
or
dec
mov
aaa
mov
stc
into
cmp
adc
pop
pop
bound
fwait
movs
mov
ds
sbb
xor
je
aam
leave
inc
sar
mov
mov
js
cmp
inc
retf
fdivr
int
shl
push
ret
inc
stc
shl
adc
dec
(bad)
icebp
(bad)
sbb
in
inc
sbb
mov
xchg
mov
into
div
mov
repz
adc
and
(bad)
mov
into
outs
mov
hlt
and
retf
sub
addr16
cld
addr16
(bad)
jne
cmp
mov
mov
es
les
cwde
cmp
std
fiadd
jmp
and
jno
mov
ret
in
sbb
jl
ins
ins
adc
loope
and
push
ret
sub
push
mov
je
lar
popf
mov
fistp
dec
cmp
in
ins
ret
inc
mov
pop
push
or
dec
fbstp
mov
enter
rcr
mov
sub
mov
pop
jecxz
sbb
outs
pop
std
pop
(bad)
hlt
(bad)
sti
nop
adc
ins
push
ss
out
repnz
inc
test
or
stos
cdq
out
call
nop
fwait
mov
retf
xor
iret
call
(bad)
xchg
das
xchg
jns
dec
pop
sub
icebp
xchg
(bad)
mov
test
adc
ss
xor
and
xchg
inc
xor
inc
xor
jmp
lods
aam
push
stos
or
or
and
and
popa
dec
mov
xor
pop
or
js
das
mov
or
adc
push
sbb
mov
mov
jle
push
lahf
cmc
dec
je
jmp
cmp
outs
cmp
out
(bad)
mov
push
push
or
out
stc
pop
stc
push
pop
xor
mov
fisubr
ficomp
jg
xchg
or
aam
dec
mov
in
aaa
mov
fwait
mov
enter
mov
aad
xchg
cld
or
lods
pop
mov
sub
xchg
cmps
or
push
xchg
dec
pop
sbb
rdtsc
add
stc
mov
jl
gs
jecxz
xchg
dec
sub
arpl
ins
retf
es
(bad)
leave
jecxz
jo
xchg
and
test
add
cli
jae
js
inc
push
sahf
pop
jl
jecxz
out
je
xor
add
jmp
dec
lock
int
mov
cdq
sub
fcomp
loopne
stc
xlat
outs
add
jnp
xor
mov
fidiv
lods
push
mov
ss
mov
cs
ror
xchg
int3
cmp
sbb
enter
pop
jae
out
push
leave
mov
clc
arpl
cs
pop
aaa
dec
mov
push
mov
adc
out
call
call
mov
stos
rcr
cld
enter
inc
stos
xlat
test
sub
sbb
pop
outs
mov
movs
jnp
xor
sub
out
and
fcom
pop
mov
popa
loopne
cwde
ss
push
push
stos
call
cmp
sbb
sub
cmc
push
pop
mov
or
mov
pop
xor
out
sub
arpl
push
mov
pusha
adc
jbe
xlat
adc
cmp
mov
(bad)
mov
es
mov
or
inc
ret
(bad)
lods
cmp
add
mov
imul
inc
cwde
std
dec
outs
sbb
xchg
sub
in
mov
es
xor
or
mov
xor
shl
or
mov
xchg
addr16
mov
(bad)
lock
cmc
add
dec
ja
stos
rol
in
int3
scas
lods
push
or
mov
xlat
pop
pusha
shl
jg
mov
dec
sub
pop
jp
jb
ja
stos
inc
pop
inc
mov
iret
mov
sbb
pop
inc
push
jle
xchg
cmp
jne
dec
fstp
rcl
sbb
mov
retf
loopne
inc
mov
mov
cmp
rcl
mov
xchg
xchg
sub
(bad)
push
inc
cld
pop
cmps
mov
out
in
and
cmp
xor
pushf
sub
mov
mov
div
adc
ins
xor
cmp
pop
scas
popa
ret
jp
xchg
push
out
mov
mov
add
or
popf
cmp
loopne
stc
pop
xchg
stos
imul
(bad)
push
push
xchg
lea
xor
cmc
pop
push
push
add
push
push
fild
jp
or
pop
and
push
inc
addr16
fcomp
adc
pop
sub
cdq
mov
leave
cmp
gs
and
into
mov
xchg
pmuludq
xchg
inc
mov
sahf
xchg
jmp
cs
fsubr
and
lahf
mov
in
xor
add
cmovnp
lahf
cmc
dec
cmp
or
ins
ret
sbb
(bad)
jge
(bad)
shl
mov
daa
push
push
lods
cmp
fnstsw
nop
add
sbb
lds
xor
mov
cmp
sub
mov
dec
daa
and
ret
adc
imul
int3
or
push
inc
jnp
mov
rcr
je
or
imul
mov
arpl
pop
lds
and
or
push
jo
fimul
sub
mov
sbb
mov
aam
cdq
stos
ja
lds
jp
clc
imul
xchg
sti
push
nop/reserved
dec
addr16
loop
imul
dec
sbb
cmp
fwait
mov
xchg
test
jns
or
jmp
xchg
int3
or
dec
nop
jmp
inc
sub
adc
sub
jbe
mov
or
push
lock
enter
push
loope
sbb
data16
aaa
(bad)
into
push
popa
in
nop
les
adc
dec
fst
mov
sar
out
add
xor
outs
jmp
int3
push
lods
(bad)
repz
jl
push
cmps
(bad)
lock
sbb
aad
pop
js
mov
push
aas
fdivr
ret
push
test
xor
icebp
xchg
xor
fcomi
shr
fscale
sbb
cmp
push
or
in
dec
mov
sub
cmps
clc
sbb
sbb
cmp
xor
dec
jo
xchg
int3
outs
add
and
add
jne
int
loopne
pop
jmp
mov
rcr
jp
dec
or
ss
push
sbb
mov
aad
adc
mov
push
movs
iret
int
je
add
rcr
sub
xchg
fiadd
fcom
out
enter
or
scas
mov
lahf
inc
popa
mov
xchg
out
push
add
xchg
clc
sti
cli
inc
aad
mov
add
and
je
mov
pop
cli
sub
jo
jmp
push
mov
adc
push
out
and
adc
mov
xchg
adc
aas
xor
stos
retf
xchg
in
mov
scas
pop
pop
cdq
pop
push
mov
scas
push
sbb
js
scas
and
(bad)
int
cmc
xchg
outs
cwde
jb
cmp
jne
dec
add
pop
inc
fwait
pop
add
adc
and
inc
or
movs
(bad)
rcr
call
stc
aam
push
pop
js
sub
sti
add
mov
cmp
aaa
pop
pop
movs
push
pop
xor
ss
cdq
inc
jmp
fwait
data16
mov
sbb
pop
push
push
adc
ja
jns
xor
in
shl
nop
outs
adc
in
sbb
cmp
and
mov
and
in
outs
and
mov
cmp
jg
das
into
sub
test
leave
rcl
mov
xchg
xchg
idiv
into
sub
gs
add
push
js
jno
and
add
add
clc
dec
arpl
push
xchg
pop
and
jmp
aas
xlat
ins
cmp
out
int3
lea
and
sar
xor
inc
jmp
pop
and
neg
push
daa
sub
sub
je
sbb
add
push
jne
scas
int3
int3
or
sub
dec
cmc
pushf
outs
add
inc
inc
sub
ret
mov
in
pop
xor
mov
(bad)
jecxz
jb
outs
or
mov
movs
js
scas
cmp
adc
dec
jbe
les
ja
div
addr16
ret
jge
fs
popf
xchg
mov
mov
mov
push
aad
sbb
idiv
movs
mov
pusha
dec
(bad)
jmp
movs
cli
ror
addr16
add
and
push
add
cmp
fimul
loope
dec
push
cmp
xchg
lods
rcl
je
or
in
daa
mov
addr16
mov
xchg
je
mov
jnp
ficom
lds
stos
rcr
stos
fiadd
and
push
idiv
fiadd
jo
outs
clc
out
cmp
je
outs
imul
scas
fisttp
call
cmp
data16
sahf
ror
jp
aad
sahf
imul
cwde
add
mov
bnd
xchg
in
ins
leave
repz
pop
push
out
sub
(bad)
pop
movs
inc
icebp
pushf
leave
int3
inc
pop
jmp
dec
pop
in
aaa
push
es
es
ret
imul
iret
fidiv
aam
(bad)
ins
jl
neg
int
adc
lar
cmp
movs
fwait
or
das
test
scas
jecxz
rcr
sub
sbb
xchg
push
in
ds
lahf
cmp
ja
mov
test
aas
xchg
or
xlat
inc
ja
in
test
bound
fcom
adc
mul
push
daa
sub
mov
mov
mov
cmc
mov
pop
cmp
pop
pop
retf
clc
xor
jno
fcomp
jbe
add
sbb
ret
push
sahf
bound
inc
cmps
push
pusha
leave
xor
(bad)
retf
(bad)
xchg
int3
div
mov
ins
in
cmps
inc
ins
inc
cmp
pop
mov
inc
popf
pop
fmul
mov
outs
ins
fld
cmp
inc
adc
and
outs
cmp
inc
icebp
iret
into
push
jbe
out
sub
mov
cwde
mov
and
adc
sbb
sub
mov
push
mov
jle
mov
mov
add
sti
lea
test
ret
xchg
(bad)
dec
xor
fidiv
fbld
bound
cmp
jmp
jnp
mov
inc
jmp
jmp
sub
adc
out
nop
or
inc
or
sub
cli
jbe
dec
push
sub
(bad)
cwde
mov
out
cmp
push
sbb
and
mov
ror
arpl
bound
jnp
test
stc
push
sbb
add
fsub
pop
push
sub
mov
add
sub
cmps
mov
mov
mov
clc
lock
dec
aas
call
cmp
cmp
xchg
int
sub
loopne
or
and
pop
std
movs
sbb
jl
lock
add
lea
pop
sahf
pop
ret
mov
pop
sub
stos
cmc
jo
dec
dec
jbe
je
sub
or
mov
dec
fisttp
lea
or
sub
mov
inc
fstp
mov
stos
jp
push
ret
test
out
sti
cli
mov
and
push
fst
mov
push
cs
jnp
mov
jmp
jne
popf
inc
jmp
(bad)
mov
into
cld
in
jmp
xor
push
dec
push
shl
pop
add
cmps
pop
outs
mov
xor
push
test
xor
scas
gs
xchg
sub
jmp
add
in
mov
call
xor
push
fsub
mov
jp
fistp
push
ss
pop
and
outs
adc
loop
aad
cmp
mov
sar
inc
xchg
sti
mov
pop
jmp
push
mov
sub
mov
or
imul
cmp
sbb
push
xchg
mov
clc
mov
sbb
icebp
xor
add
cdq
pop
or
jmp
dec
hlt
mov
push
pop
push
jmp
lea
imul
jo
scas
push
mov
push
pop
retf
jns
adc
lods
outs
xor
rol
jmp
out
mov
or
xchg
mov
xchg
inc
adc
lods
in
stos
ds
or
inc
cld
ins
test
and
cmp
test
or
xchg
fisub
or
ins
inc
sub
cli
and
cmc
lea
popf
push
mov
inc
pop
call
jbe
jb
out
(bad)
push
scas
faddp
aad
addr16
out
inc
sahf
js
sbb
jp
jmp
out
(bad)
or
pop
dec
mov
jmp
ss
ret
imul
popa
fidivr
sbb
into
sar
xchg
aam
add
mov
or
jo
leave
xchg
repz
mov
jge
(bad)
sub
pop
inc
enter
aaa
xchg
jecxz
sub
cmp
xchg
pop
xchg
sahf
xchg
gs
cwde
push
lahf
fdivr
call
or
push
enter
ret
or
lods
test
std
xor
xor
jl
sbb
in
xchg
inc
push
call
mov
dec
ret
push
icebp
jns
mov
or
jns
push
jbe
and
jb
mov
add
ret
pop
(bad)
jcxz
ja
inc
(bad)
cmp
pop
rcr
(bad)
addr16
mov
sbb
jp
int3
and
jnp
rcl
fcom
call
add
jp
int
pop
push
mov
repnz
lds
mov
aad
jmp
sub
inc
mov
sahf
xlat
inc
js
out
mov
pop
dec
push
std
push
xor
call
(bad)
cli
retf
fdiv
ss
inc
xlat
aad
xor
popa
mov
jmp
(bad)
popf
in
xor
and
xchg
ffree
ficomp
jne
movs
test
(bad)
sub
add
sub
outs
movs
mov
retf
mov
nop
scas
push
dec
(bad)
xchg
mov
retf
(bad)
jno
and
xor
xchg
jp
les
or
xchg
cmps
loopne
pop
sahf
sub
jnp
fdiv
or
int3
xchg
outs
repnz
dec
(bad)
rcl
inc
leave
into
xor
xchg
mov
out
xchg
mov
clc
sub
sbb
mov
in
or
call
inc
ins
or
fimul
and
pop
test
bndstx
out
push
or
icebp
inc
hlt
gs
add
push
add
dec
in
popa
(bad)
cli
enter
sahf
(bad)
shr
xchg
nop
int3
or
dec
leave
test
clc
fld
pop
adc
mov
cmp
int3
into
pop
jne
cmp
imul
das
shl
mov
icebp
repnz
dec
jae
sub
mov
mov
lods
xchg
adc
fwait
push
dec
int3
movs
cmp
out
jae
push
out
adc
dec
clc
mov
out
or
xor
mov
sbb
outs
mov
loop
sub
or
iret
cdq
jbe
sbb
fwait
(bad)
or
cmp
sbb
push
je
sbb
inc
push
scas
push
data16
dec
jg
ret
mov
mov
jne
(bad)
out
mov
xchg
inc
rcr
lea
cmp
int3
xor
ins
inc
sbb
ja
push
mov
and
movs
xor
push
mov
int
mov
in
jne
pushf
cmp
scas
pop
sahf
in
mov
cmp
sbb
inc
xor
lods
and
pusha
out
(bad)
out
pop
inc
jmp
pop
xor
daa
shl
mov
in
push
cmp
push
mov
jae
hlt
iret
mov
and
cmps
(bad)
imul
retf
cdq
fldcw
xor
xor
inc
aam
inc
in
mov
mov
add
fs
push
xor
xor
in
pop
push
pusha
jo
jl
ins
add
retf
arpl
(bad)
pusha
push
adc
jp
push
push
retf
bnd
loop
mov
xchg
inc
xchg
hlt
dec
pop
mov
inc
popa
inc
jns
jae
xchg
sbb
(bad)
pop
pusha
into
popa
add
enter
pop
xchg
mov
adc
scas
inc
push
fs
adc
(bad)
loopne
adc
or
dec
mov
push
daa
push
xchg
pop
out
je
mov
cdq
pop
add
gs
out
push
xlat
xor
mov
or
test
inc
mov
mov
retf
out
std
push
xor
test
and
cdq
scas
push
cmps
stc
pushf
jecxz
imul
adc
mov
pop
push
sbb
and
cwde
hlt
in
aaa
stos
loope
mov
pop
mov
dec
mov
dec
mov
stc
pop
lea
mov
clc
xchg
mov
dec
push
add
inc
in
scas
stos
test
add
or
sub
push
ret
sbb
std
pop
sbb
push
xchg
test
(bad)
mov
lock
loope
fs
mov
adc
inc
push
fs
cdq
xor
sub
ds
jo
pop
fdivr
jo
clc
jbe
push
jo
cmp
xor
xchg
sti
mov
aas
mov
mov
(bad)
sub
add
pop
jecxz
cmp
das
push
cmp
ja
mov
cdq
sbb
ret
inc
(bad)
stc
loope
pop
jle
into
js
pop
out
(bad)
cli
lods
test
call
inc
jbe
pop
add
into
sub
lods
and
or
rol
clc
jbe
fild
cs
xchg
inc
xchg
(bad)
ds
movs
sbb
int
sub
add
fcom
cmp
mov
adc
push
fisttp
xchg
and
adc
clc
xchg
and
aad
icebp
imul
shr
test
dec
inc
adc
jecxz
icebp
push
dec
xchg
mov
jne
gs
js
cwde
jmp
sub
cmp
imul
jbe
loopne
pop
lea
icebp
xor
jl
push
mov
repz
cmps
arpl
cmp
ins
hlt
pop
xchg
sbb
js
jg
mov
inc
out
sub
sub
jns
test
xor
xor
sub
adc
xchg
mov
dec
test
or
sub
mov
mov
adc
ja
mov
push
push
cwde
loope
mov
aas
daa
out
push
mov
iret
and
jno
add
inc
cmp
or
mov
std
imul
sbb
daa
pop
nop
loope
and
pop
repz
jg
mov
fdiv
adc
and
mov
repnz
(bad)
sbb
cmc
push
jne
push
or
fwait
inc
xchg
jmp
stos
stos
mov
into
mov
shl
jo
js
lods
sub
add
pop
(bad)
call
jmp
arpl
pop
imul
lahf
std
rol
stc
push
in
cld
rcr
rcr
and
cdq
xchg
test
or
or
xchg
imul
inc
push
inc
xchg
add
shl
cmp
sti
push
or
jb
xchg
pop
cmp
adc
and
cld
call
fst
dec
add
into
xchg
add
ret
call
mov
fstp
loopne
(bad)
leave
out
jp
sbb
stos
mov
jae
xchg
jg
lods
push
jnp
push
rol
mov
fstp
inc
pop
sbb
mov
clc
adc
push
push
data16
xchg
pop
shr
or
cli
add
cmp
in
mov
test
cmp
xor
or
cld
add
jecxz
call
dec
and
add
mov
call
xor
(bad)
mov
jo
cmps
stos
mov
xor
pop
push
xchg
pop
dec
pop
jge
js
jmp
adc
mov
inc
cmp
cmp
test
sahf
iret
push
(bad)
jae
xlat
mov
mov
xchg
adc
adc
ror
js
xchg
sub
add
in
adc
sti
icebp
sar
push
out
push
loop
or
fldcw
push
sub
xor
sbb
push
ins
cmp
mov
add
les
mov
in
add
iret
iret
ins
mov
int3
jae
sbb
xchg
clc
aad
push
xchg
popa
push
clc
mov
arpl
mov
sub
aaa
stc
(bad)
inc
sub
(bad)
stc
or
and
mov
mov
loop
arpl
and
retf
(bad)
(bad)
ror
loop
pop
pop
cmp
rol
push
push
sbb
push
loopne
xor
push
sbb
inc
add
cmp
xchg
mov
popf
aaa
pop
ja
je
test
xchg
and
aaa
push
fadd
inc
fild
arpl
or
mov
fisubr
lahf
xor
add
push
sub
movs
clc
dec
in
pop
and
push
das
pop
fs
mov
outs
push
aad
pop
and
fwait
aam
mov
outs
shr
lods
ins
adc
jae
jnp
repz
pop
mov
out
xor
add
loope
push
inc
add
jmp
iret
mov
cmps
cld
clc
mov
icebp
dec
or
stos
aas
jb
popf
aaa
js
inc
repnz
scas
pop
stc
nop
in
xchg
loope
pop
aaa
movs
sbb
sub
jmp
fimul
jae
popa
push
dec
imul
mov
stos
int3
sbb
xor
ins
ds
push
lea
cmp
push
scas
rcr
das
cmc
jmp
pushf
mov
and
imul
pop
mov
(bad)
cwde
xchg
jmp
xchg
(bad)
sti
adc
jle
sbb
icebp
in
dec
jmp
or
sub
std
sub
pop
jo
mov
outs
mov
in
das
aam
fisttp
lock
loopne
add
xchg
dec
pop
and
jnp
dec
jmp
add
out
or
ret
sub
into
rol
xchg
aas
and
push
push
jbe
push
or
adc
ins
dec
pushf
mov
cmp
loope
fild
stos
or
(bad)
aad
cmp
mov
cwde
inc
inc
add
mov
mov
dec
adc
add
scas
mov
lahf
popf
dec
and
jbe
dec
and
cmp
dec
dec
mov
aad
jge
aam
aam
dec
sbb
inc
jo
and
clc
into
scas
popa
cmps
(bad)
ret
push
mov
mov
inc
mov
sub
sbb
pop
adc
les
inc
jge
xor
shl
mov
push
xchg
jmp
jns
lar
add
fmul
mov
dec
add
aaa
push
add
xor
and
push
and
push
arpl
fimul
mov
mov
test
repz
pop
add
jmp
scas
push
push
(bad)
mov
pop
arpl
aad
and
jecxz
fwait
popa
daa
(bad)
int3
and
mov
shl
test
push
or
jmp
mov
repnz
sub
es
(bad)
fbstp
push
and
mov
cld
and
jb
icebp
js
dec
dec
cmp
outs
fsin
dec
or
std
imul
jno
es
cmp
jecxz
in
inc
imul
push
or
dec
lods
mov
ins
push
test
scas
sbb
sub
jo
inc
jne
pop
sub
arpl
ja
or
add
jmp
or
ret
push
cdq
std
push
mov
pop
xchg
(bad)
daa
call
or
xchg
jne
test
push
dec
and
mov
ret
addr16
xchg
inc
pop
mov
mov
test
outs
push
and
loop
je
nop
sbb
fxch
dec
je
mov
mov
and
and
enter
mov
dec
sub
sub
push
ret
mov
arpl
mov
bound
push
mov
std
ins
jne
xor
iret
pusha
jmp
hlt
mov
hlt
movs
mov
add
je
cmc
inc
xlat
(bad)
cmp
mov
psllq
xor
ins
fldenv
std
adc
push
imul
push
loop
mov
in
cmc
jp
sub
sbb
push
pop
mov
mov
inc
daa
xor
or
leave
mov
mov
pop
xor
mov
(bad)
into
(bad)
test
or
ret
mov
xor
lock
retf
icebp
mov
inc
enter
ins
push
push
adc
out
nop
sub
mov
shl
fisubr
cli
ja
inc
cmps
bound
add
pushf
fld
shl
dec
retf
mov
test
xor
std
jb
test
push
(bad)
pop
mov
repnz
and
inc
arpl
stos
mov
inc
sbb
push
add
addr16
test
cmps
(bad)
cmp
daa
ins
sub
xor
lods
push
sbb
test
bound
data16
pusha
pop
js
jbe
adc
scas
and
mov
xor
push
inc
pusha
lods
int3
aam
daa
mov
cmp
inc
pop
and
sbb
out
mov
(bad)
fisttp
sub
repz
mov
sub
push
push
push
jo
or
imul
inc
sbb
(bad)
xor
add
leave
popf
fsub
and
xchg
cmp
mov
arpl
xchg
test
cmp
pop
imul
cmp
sub
test
pushf
sub
pop
out
rcl
jae
pop
sbb
xchg
push
repnz
stos
les
adc
jg
aad
inc
loopne
std
xchg
cmp
nop
cmp
sar
js
imul
scas
and
jno
cmp
test
shl
mov
mov
arpl
dec
jge
adc
mov
pop
jbe
jge
sbb
dec
or
cwde
and
sti
popf
cmp
ins
inc
inc
mov
cmp
sbb
rol
xchg
jge
mov
leave
push
(bad)
fld
mov
call
pop
sbb
push
(bad)
push
sub
mov
aaa
jg
or
imul
inc
dec
nop
in
mov
jmp
push
jmp
bound
cmc
inc
xor
push
daa
or
cdq
cs
call
adc
pop
aaa
push
loope
into
cmp
pop
xchg
not
push
fcom
cmp
xlat
sub
ja
into
cmps
(bad)
stc
cmp
loopne
adc
inc
sbb
ja
jge
and
pushf
into
xor
mov
sbb
call
cmps
ins
and
imul
jg
mov
test
cmp
mov
(bad)
ja
adc
push
mov
xor
mov
xor
retf
fisttp
icebp
movs
jmp
aas
lahf
and
jns
fnsave
sub
add
or
prefetchw
cld
xor
mov
adc
cmps
pushf
cmp
xchg
add
cmp
jecxz
(bad)
jmp
jmp
(bad)
leave
cmp
sar
push
icebp
mov
cmp
push
xor
adc
mov
aas
lea
add
aas
pop
push
cmp
mov
lahf
nop
dec
xchg
pop
ss
or
imul
mov
jecxz
sub
ret
ret
aas
adc
fld
dec
jnp
inc
(bad)
jmp
lods
xor
jl
(bad)
xchg
inc
add
ss
rol
push
stos
inc
and
cdq
push
in
pop
in
adc
test
push
jmp
fldenv
movs
mov
fmul
and
neg
push
mov
mov
mov
daa
push
cmp
int3
or
test
mov
in
push
je
hlt
add
cmp
cmps
test
loope
cmp
mov
and
(bad)
int
push
xor
push
lahf
call
(bad)
int
adc
jl
frstor
pop
mov
fldenv
xor
adc
inc
pop
sahf
ja
shl
scas
cmp
cmp
jb
sub
sbb
hlt
(bad)
mov
lea
or
fild
shl
nop
sub
movs
repz
out
and
and
aad
sbb
loop
cmp
es
or
sar
repnz
xchg
xor
clc
xchg
or
cwde
sahf
stc
inc
daa
rol
outs
or
jmp
loop
test
ss
cmps
jae
pusha
dec
ret
outs
icebp
push
mov
retf
aaa
push
adc
and
out
push
fyl2x
movs
mov
jae
imul
enter
fcmove
mov
add
cmp
sub
inc
stos
enter
dec
daa
aaa
pop
or
loopne
xor
fldcw
cmp
push
fadd
int
push
gs
mov
repz
mov
pop
loopne
pop
ins
cmc
mov
daa
push
adc
pop
add
data16
jae
mov
movs
fdivr
rcl
outs
mov
in
jg
jae
leave
dec
dec
cli
mov
sbb
push
sub
push
fld
pop
adc
daa
icebp
mov
gs
lock
sbb
add
call
add
jnp
pop
fstp
add
push
pop
xchg
dec
popf
movs
pop
mov
add
push
or
add
sbb
dec
add
ins
xlat
mov
ret
lea
jns
fmul
xchg
xchg
(bad)
les
outs
adc
pop
popf
cli
or
cmp
(bad)
mov
test
iret
mov
jl
in
call
arpl
icebp
cmp
sbb
inc
mov
test
jmp
xchg
add
std
call
lods
jg
xchg
xchg
mov
push
push
les
push
ss
adc
addr16
stc
outs
loop
hlt
or
xchg
adc
jmp
fwait
xchg
out
inc
je
not
push
sti
xchg
repnz
xchg
add
je
lea
adc
and
jo
aas
pop
rol
loopne
iret
mov
(bad)
shl
mov
add
inc
pop
mov
cmp
mov
cmp
je
test
adc
pop
call
inc
jg
mov
sahf
sub
sbb
leave
loop
dec
push
lds
int
xchg
and
push
adc
into
arpl
xchg
imul
loop
out
adc
pop
arpl
imul
xor
cld
(bad)
les
ds
cmp
xor
fimul
pop
adc
scas
(bad)
and
mov
pop
xchg
into
push
stos
push
xchg
mov
jbe
inc
or
sbb
add
imul
sub
and
cmp
mov
add
push
in
and
or
mov
xchg
mov
cli
sub
pop
test
cs
jle
sub
dec
arpl
jp
mov
stos
out
xchg
lock
stc
aad
adc
xor
call
lea
pop
xchg
mov
push
mov
jns
sub
stos
in
inc
out
inc
inc
aas
xchg
iret
pop
xor
fs
mov
dec
and
or
xchg
mov
pop
sbb
sub
push
stos
pop
cmps
mov
imul
icebp
jmp
cli
clc
lods
shr
mov
mov
fimul
xor
xor
inc
iret
cwde
cmp
jae
mov
scas
cmp
(bad)
popa
les
pop
ror
and
aas
pop
sbb
adc
or
and
xlat
and
mov
sub
push
loopne
and
xor
outs
test
outs
inc
xchg
cmp
je
int
loopne
sub
and
js
(bad)
mov
jl
sahf
xor
retf
jne
lock
dec
mov
les
mov
(bad)
sbb
fnstcw
jmp
cld
out
mov
mov
jg
dec
cdq
popa
dec
iret
jae
xor
dec
lods
(bad)
scas
sbb
imul
(bad)
int3
mov
in
xchg
dec
fild
nop
pop
mov
jl
neg
das
ins
mov
pop
dec
rol
stos
ja
ret
in
int3
les
fld
push
enter
jl
rcr
inc
pop
sahf
ins
cmp
cmp
nop
dec
push
fdivrp
in
ja
mov
lea
push
push
rcl
sbb
inc
test
(bad)
or
dec
mov
push
push
sahf
addr16
shr
ficom
xchg
xor
or
mov
jo
ror
mov
xor
dec
jl
add
add
mov
mov
dec
fidivr
(bad)
imul
(bad)
icebp
mov
lock
aam
push
sahf
pop
loop
arpl
hlt
mov
mov
add
(bad)
iret
loope
mov
inc
popf
sub
xor
icebp
shr
ds
pop
push
sub
cli
nop
out
fisttp
sbb
inc
fmul
push
mov
inc
sbb
in
sahf
inc
ret
fld
sub
pop
repz
or
pusha
sbb
ja
test
xor
jns
loop
cli
and
mov
leave
shl
xor
mov
pop
mov
inc
out
cmp
loop
int
jecxz
popa
inc
cli
(bad)
(bad)
mov
ret
cmps
dec
inc
push
(bad)
cwde
sbb
add
mov
out
dec
aam
jp
imul
xor
adc
pop
pop
sub
mov
push
inc
adc
sbb
scas
and
jo
mov
inc
rol
test
and
add
add
retf
mov
fidivr
repz
loope
mov
sbb
popf
jb
ss
xchg
inc
gs
sub
jecxz
pushf
ret
add
sbb
dec
jecxz
sbb
pop
lea
mov
out
retf
inc
popf
daa
sbb
mov
pop
shr
loop
rcr
cs
retf
test
cmp
cmp
aas
pusha
jnp
xchg
xor
jg
sti
cmc
call
push
mov
adc
mov
cwde
dec
mov
mov
out
sbb
pop
ds
stos
push
int
jbe
dec
push
mov
leave
retf
ret
dec
adc
cmps
mov
sub
push
es
fistp
in
loop
xlat
sub
pop
sub
and
inc
mov
xchg
ficomp
dec
push
xor
scas
(bad)
out
or
xlat
pop
xchg
sub
test
and
jge
pop
fcomp
and
mov
shr
ja
lock
xchg
in
ds
and
out
mov
mov
out
lea
cdq
push
enter
imul
jecxz
mov
and
fstp
add
mov
and
mov
fsub
in
adc
xor
fwait
in
scas
movs
mov
cwde
rcr
mov
ins
push
inc
mov
push
scas
aas
leave
jae
cmps
xlat
or
aaa
inc
pop
stc
ins
cmp
sbb
xchg
cwde
add
or
inc
xchg
push
and
mov
icebp
cld
and
xor
mov
add
lods
movs
into
std
dec
xchg
enter
ins
or
cmps
push
lahf
push
(bad)
ror
jle
rcr
cwde
test
add
loop
sbb
cdq
dec
daa
and
rol
adc
xor
scas
inc
int
jnp
(bad)
loopne
int
mov
pushf
jo
dec
lea
(bad)
aad
call
and
into
mov
rol
and
lods
aaa
in
cld
mov
jg
addr16
fimul
jno
xchg
inc
packuswb
aaa
test
enter
mov
push
mov
sub
pop
pop
mov
repnz
push
enter
imul
push
jmp
push
out
xchg
out
into
xchg
imul
mov
std
call
(bad)
push
fild
mov
pop
fcomp
sub
push
xor
jb
sub
jno
cmps
test
fnsave
int
xchg
add
mov
or
mov
nop
cmps
xchg
icebp
in
out
shl
adc
sub
das
mov
popf
dec
fdivr
and
rol
mov
jmp
push
bound
xchg
sub
inc
dec
test
pop
dec
jge
fcom
mov
retf
test
int3
push
les
cli
dec
sahf
push
ja
jo
pop
pop
cmp
push
in
inc
aam
imul
xchg
in
cmps
dec
in
out
push
(bad)
cmp
shl
test
jmp
ror
cmp
out
push
or
push
xchg
inc
xor
mov
rol
xchg
daa
mov
(bad)
inc
clc
hlt
dec
int3
and
mov
lahf
inc
adc
cmp
dec
cmc
sbb
adc
fdiv
aas
cmp
(bad)
adc
push
enter
cwde
mov
jp
push
sbb
imul
mov
fldenv
mov
test
aad
es
adc
xchg
xchg
xlat
xchg
mov
lea
jmp
jecxz
inc
sahf
data16
hlt
mov
(bad)
mov
add
jno
mov
pop
or
inc
popf
enter
adc
int
jecxz
push
push
outs
enter
and
retf
out
test
xchg
and
pop
enter
mov
or
mov
aad
dec
or
int
mov
push
sbb
dec
shr
pop
and
hlt
xchg
mov
pushf
jl
idiv
mov
cmps
add
js
imul
addr16
or
xchg
pop
cmp
inc
fcomp
cld
xchg
cmps
dec
lahf
(bad)
adc
fwait
in
rcr
(bad)
xlat
iret
and
cmp
cs
inc
jle
or
cmp
sub
mov
das
pop
dec
into
daa
push
repnz
and
xchg
adc
ins
loop
loopne
arpl
cld
jg
adc
out
or
clc
and
popa
cmp
leave
test
xchg
mov
and
ins
test
mov
adc
add
or
js
cmps
dec
(bad)
lods
push
sub
ret
jmp
jg
and
xchg
and
lods
mov
imul
repz
sbb
aad
lock
pop
adc
mov
mov
add
rol
mov
cmp
mov
repnz
(bad)
sbb
mov
ret
sbb
sar
mov
mov
jge
mov
and
fs
add
jo
mov
daa
(bad)
cmc
jo
(bad)
xor
movs
inc
and
mov
pop
jbe
ficom
neg
jg
jecxz
outs
lea
test
inc
pop
mov
mov
inc
and
imul
inc
(bad)
sbb
mov
retf
add
jp
jns
and
stos
bound
add
movs
push
mov
adc
adc
mov
pop
jns
sahf
fld
push
cs
mov
std
push
cmp
les
mov
es
xchg
in
stos
into
pop
out
mov
pop
arpl
push
sub
jmp
cdq
mov
sub
loop
test
push
pop
xchg
push
or
lds
xor
jmp
xor
and
cli
nop
in
sub
rol
(bad)
adc
rcl
add
inc
push
fldpi
or
loope
push
sub
outs
loopne
retf
es
or
movs
pop
fucomp
jno
fwait
nop
and
mov
cmp
mov
fnstsw
mov
add
mov
fdiv
xchg
mov
outs
in
invd
mov
push
ret
loope
jmp
shl
jae
rcr
dec
clc
pop
out
cdq
xchg
mov
test
xchg
js
and
gs
add
jae
fist
mov
mul
inc
cmp
or
jle
loopne
sub
loop
ss
(bad)
adc
in
fisttp
das
or
jnp
adc
sub
push
imul
sub
cmps
inc
and
test
xchg
repz
and
mov
xchg
lea
imul
mov
and
inc
mov
adc
add
push
xchg
or
fsubr
movd
add
and
jns
xor
dec
add
push
stc
mov
pop
or
adc
shr
xchg
jecxz
and
movs
out
pop
mov
push
leave
je
out
cld
int
push
mov
test
push
pcmpeqd
stos
add
sahf
sbb
arpl
sti
in
scas
cmp
(bad)
adc
imul
push
ds
xchg
mov
push
test
les
mov
cdq
test
fimul
cli
(bad)
push
sbb
adc
sub
pop
mov
jp
ss
pop
sti
and
pop
repnz
xchg
push
fldl2t
push
lods
out
pop
adc
adc
pop
movs
sahf
(bad)
and
xor
dec
add
inc
pushf
sar
xlat
repz
sub
mov
cdq
jecxz
outs
cmps
push
dec
aas
jg
in
out
jno
mov
aas
xor
out
jle
sahf
pushf
jne
adc
xchg
add
pop
xchg
pop
cmps
push
inc
aam
div
mov
out
inc
aam
hlt
cmovo
pop
es
dec
pusha
sar
test
cmps
mov
mov
aaa
xor
(bad)
sbb
mov
dec
add
adc
and
sar
jecxz
jl
add
aad
je
sub
and
jmp
inc
repz
les
mov
sti
lods
in
sub
and
test
test
jo
scas
imul
or
jmp
out
push
cmp
fst
push
iret
test
jle
xchg
(bad)
shl
jmp
mov
movs
lods
jmp
sbb
jge
push
call
(bad)
jle
cli
push
fucom
add
leave
faddp
sub
(bad)
sahf
xor
mov
movs
xor
adc
sub
xlat
pop
pop
gs
mov
xor
cmp
xchg
or
std
or
xchg
mov
scas
ins
jno
test
repnz
adc
ret
xchg
imul
adc
and
cs
add
adc
sub
mov
jae
aas
scas
not
and
push
mov
cmp
adc
adc
(bad)
ficom
shl
cli
pop
test
adc
jge
out
mov
imul
jns
or
mov
push
inc
stc
cmc
jl
test
cmp
xlat
lock
loopne
mov
nop
pop
add
push
pop
xchg
out
in
pop
inc
push
das
mul
call
jmp
mov
jbe
test
lock
inc
ja
stc
xchg
retf
mov
loope
and
test
mov
xor
push
dec
xchg
inc
shl
loopne
imul
push
in
pop
jno
lea
push
ret
lods
add
das
test
fldcw
jle
cmps
aad
cmp
jge
je
int3
push
adc
nop
cmp
pusha
or
dec
sbb
out
inc
jne
push
pop
repz
(bad)
add
sbb
sbb
repz
jae
fs
push
pusha
scas
hlt
mov
int3
mov
mov
mov
push
dec
or
outs
cdq
fidivr
xor
or
sub
cmps
adc
jbe
pushf
sub
xchg
and
sub
test
sbb
mov
cmp
mov
or
ret
inc
dec
ror
enter
cs
mov
ins
inc
in
out
es
mov
sbb
inc
call
or
popf
jno
inc
inc
rol
mov
retf
pusha
jae
ret
or
ror
push
mov
dec
ja
pop
adc
leave
rcr
fldcw
dec
fld
popa
xchg
cmps
jmp
cmp
adc
jb
ret
cmp
mov
mov
and
inc
aam
adc
or
ja
jp
dec
jne
xchg
test
out
xchg
fnsave
hlt
jge
sub
push
mov
imul
(bad)
pusha
sbb
inc
adc
loop
addr16
xchg
mov
and
sbb
add
xor
ss
pop
rcr
sub
inc
dec
push
ins
dec
mov
mov
hlt
xchg
sbb
xchg
lods
add
inc
(bad)
dec
cmp
jg
inc
(bad)
and
(bad)
jg
std
cmp
mov
(bad)
enter
fld
xor
mov
mov
xlat
leave
ins
sbb
test
cld
daa
movs
fwait
lods
arpl
fld
outs
mov
xor
sub
aad
sbb
jb
pop
pop
cli
sub
mov
push
int3
mov
dec
pushf
or
xchg
movs
outs
inc
pop
fcomp
pop
test
into
xchg
push
movs
repnz
xor
gs
(bad)
jmp
inc
push
xor
scas
inc
arpl
xor
mov
jnp
(bad)
xchg
repnz
cmp
out
push
cli
js
and
inc
jno
xor
jp
gs
int
popf
dec
pop
es
push
sbb
inc
push
dec
in
push
adc
and
xchg
push
fnstenv
test
mov
sub
ss
scas
add
mov
mov
lock
adc
sbb
jne
sbb
aaa
pop
adc
xchg
cld
mov
xor
test
add
adc
in
fidivr
test
cmp
ficom
mov
mov
inc
test
daa
(bad)
fcomip
fisttp
push
add
pop
xor
(bad)
push
jge
int
(bad)
dec
stos
push
jb
xchg
xchg
ror
ret
fldenv
pop
mov
mov
jo
test
adc
sbb
pop
cmp
in
clc
cmp
ror
sbb
ret
mov
xchg
mov
or
adc
ficomp
jp
inc
loope
or
push
cmp
lods
fs
das
fnstenv
ins
ficomp
inc
call
sub
adc
jp
xchg
fcom
cmp
jb
sub
adc
loop
xchg
push
sub
sahf
pushf
xchg
cmp
ss
sub
ja
clc
cwde
cwde
sub
cmp
repz
pop
cmp
push
imul
mov
pop
leave
addr16
lea
or
inc
xor
jnp
outs
addr16
mov
mov
cmp
rol
mov
cmp
xchg
mov
push
pop
jno
out
in
jecxz
dec
sub
mov
int3
aaa
and
xor
pop
adc
push
jbe
movs
std
sub
pop
sbb
(bad)
(bad)
sbb
lahf
cwde
in
jg
lods
aad
inc
or
out
dec
into
cwde
shl
js
daa
inc
iret
fadd
retf
das
mov
xchg
std
jns
into
imul
test
call
clc
int3
nop
in
sbb
sub
push
xchg
ret
pop
pusha
sub
cmp
in
pop
mov
mov
pop
aas
mov
call
mov
sub
pusha
sub
xchg
aaa
jb
or
in
nop
clc
xor
aad
inc
jp
repz
fsub
shl
fdivr
sbb
and
scas
mov
lock
sub
sub
pop
xchg
lods
push
js
scas
mov
xor
ds
or
adc
push
ins
pop
push
jnp
je
adc
pop
cmp
iret
mov
xchg
nop
mov
call
mov
adc
add
inc
adc
ins
pop
jbe
icebp
(bad)
xor
mov
jns
rcr
aad
jg
loopne
mov
(bad)
retf
mov
adc
stc
sub
mul
inc
or
cmp
das
retf
enter
mov
cmps
or
xchg
pop
nop
cmp
add
mov
(bad)
mov
fs
ror
jb
loope
aad
jl
aad
loop
xor
mov
imul
xchg
dec
idiv
pop
xchg
popa
dec
xor
jmp
lds
(bad)
(bad)
int3
repnz
sbb
xchg
ins
fdivr
or
and
clc
xchg
cs
mov
jne
not
aaa
cmp
jmp
cmp
ds
push
xchg
cmp
not
mov
cwde
jl
cld
outs
js
push
(bad)
adc
ss
fisttp
inc
pop
loop
dec
sub
mov
mov
test
js
sbb
mov
(bad)
sbb
retf
hlt
fistp
mov
imul
mov
xlat
sbb
dec
mov
int3
lds
repz
(bad)
push
mov
mov
mov
or
mov
fs
sub
pop
test
xchg
stos
imul
ficomp
das
add
mov
into
(bad)
dec
out
xchg
adc
fs
cmp
inc
cmp
(bad)
pop
test
push
test
push
mov
mov
jle
jmp
retf
push
push
in
add
je
dec
mov
cmp
add
sub
pop
test
mov
lods
cmp
mov
xchg
pop
xchg
out
push
dec
js
out
popa
addr16
sub
jne
mov
cmp
push
out
dec
(bad)
dec
mov
stos
ret
sar
jb
push
mov
jp
mov
dec
loopne
add
or
jg
shl
out
in
ror
xor
out
ficom
lahf
(bad)
mov
aas
rcl
add
in
jg
popa
and
popf
clc
arpl
push
dec
enter
in
pop
popf
pop
in
stos
loopne
push
inc
sgdtd
aam
xor
push
push
in
or
popa
(bad)
aam
fist
push
mov
icebp
mov
retf
or
sbb
pusha
or
out
and
xlat
std
jns
mov
mov
push
and
mov
test
sbb
rcr
mov
addr16
or
aam
mov
and
ja
inc
inc
or
xchg
lods
push
das
call
pop
ins
test
enter
(bad)
inc
pop
test
mov
out
icebp
and
pusha
gs
jns
dec
mov
out
pushf
and
cdq
pop
or
mov
loopne
outs
sahf
jl
sbb
mov
imul
jne
gs
call
xchg
jecxz
dec
push
je
pop
add
popf
fisttp
hlt
cmc
addr16
lahf
int3
cmp
hlt
fld
mov
ins
pop
dec
add
ins
jecxz
idiv
xchg
and
inc
aaa
call
pop
push
fld
xor
mov
fnstenv
xlat
pop
aas
cld
sbb
add
pop
sbb
ja
push
ins
push
dec
xor
or
les
mov
pop
in
xchg
nop
cmps
adc
fwait
pop
add
cld
(bad)
(bad)
shl
repnz
mov
in
shr
stos
xchg
in
out
cmp
mov
pop
js
mov
pop
cli
dec
rcr
out
sahf
xor
call
enter
adc
cmc
cmc
jns
jg
les
cmp
xor
retf
or
xlat
sbb
dec
loopne
mov
and
icebp
mov
out
inc
xchg
xlat
out
push
sahf
push
aad
jnp
xor
pop
jle
sbb
sti
push
push
int3
sbb
fwait
jl
scas
retf
das
mov
imul
ins
sub
xor
fwait
adc
lods
out
cmp
xchg
mov
sub
imul
sub
pushf
(bad)
std
out
ret
mov
fdiv
cmp
mov
int3
lods
js
lods
adc
into
shl
fnstenv
lea
jp
mov
jns
or
push
test
mov
sub
xchg
and
in
cmovle
repnz
outs
(bad)
cdq
cs
sbb
retf
jne
gs
scas
dec
jge
pushf
jmp
cmps
mov
add
ror
shr
sbb
cli
bound
pop
xchg
adc
add
in
aad
shl
add
out
loop
or
sbb
movs
(bad)
mov
dec
pushf
jnp
(bad)
jle
loope
dec
pop
aaa
or
fmul
and
pop
movs
fs
pop
pop
or
cmp
cmp
in
xchg
push
add
aaa
(bad)
mov
sbb
icebp
call
jl
add
mov
ror
iret
mov
addr16
lock
sub
daa
inc
fild
pop
mov
stos
xchg
and
jae
push
cdq
ret
add
fadd
lods
cmp
pop
inc
adc
mov
sar
retf
mov
push
(bad)
adc
loop
xor
add
jge
xor
cdq
cmps
retf
aaa
jno
pop
lods
xchg
push
pop
and
test
pop
pop
mov
push
inc
push
sbb
enter
iret
xor
dec
clc
popa
lahf
iret
(bad)
cmp
mov
aad
xchg
movs
and
jmp
mov
jge
std
mov
pop
fwait
adc
push
test
mov
(bad)
leave
mov
inc
inc
push
push
add
mov
sbb
stos
jno
jp
(bad)
jg
pop
adc
add
stos
inc
iret
xchg
fs
add
jge
gs
push
cmc
clc
movs
std
rcl
lds
stos
xlat
jns
xchg
lds
xor
mov
sub
hlt
cdq
mov
in
jmp
xchg
std
sbb
inc
stos
xchg
jae
mov
in
jmp
mov
aad
mov
pop
cmc
int
dec
add
adc
cli
test
aas
cmp
xchg
jo
test
or
dec
enter
icebp
sbb
dec
xor
gs
jp
xor
(bad)
jo
push
lahf
repnz
fidiv
and
sbb
mov
adc
inc
out
xchg
or
push
fs
rcr
and
in
ja
push
dec
sbb
clc
mov
(bad)
shl
aas
adc
mov
enter
in
xor
cmp
popa
fisubr
add
cdq
add
test
test
bound
xchg
push
sbb
stc
ror
adc
rcl
ins
sbb
push
test
sub
inc
in
inc
dec
aas
cdq
xchg
sub
mov
fcomp
xlat
xchg
repz
(bad)
adc
jae
jge
dec
call
or
sbb
loop
scas
lds
sbb
pop
inc
out
sub
mov
add
and
test
aad
(bad)
(bad)
sbb
les
dec
push
or
add
scas
cld
or
and
in
aaa
es
in
movs
leave
sub
push
out
push
pop
loop
std
ins
loopne
and
ret
sti
aad
nop
sub
sub
gs
mov
jg
jl
aaa
(bad)
cmp
lds
xchg
sub
lods
push
out
fsub
jnp
aas
(bad)
out
retf
and
xor
clc
popf
sbb
aaa
test
pop
mov
and
pop
jno
loope
mov
cmc
and
mov
stos
test
popf
push
loop
pop
cmp
mov
out
jns
idiv
cmp
pop
mov
mov
sahf
push
add
cmp
ret
jecxz
ret
xchg
add
cdq
jmp
xchg
je
test
pushf
or
les
xor
jne
mov
mov
pop
mov
das
dec
sbb
push
cdq
stos
pop
cmp
frstor
cdq
add
scas
sbb
cmp
stc
and
inc
mov
scas
sahf
and
daa
stc
sbb
pop
jbe
sub
fadd
shl
xchg
ja
and
add
xchg
and
js
std
sub
rcr
pop
and
sbb
pop
pop
lahf
inc
mov
or
and
and
mov
daa
nop
add
pop
add
sbb
adc
loop
sbb
xor
fimul
mov
and
(bad)
pop
cmp
popa
sub
cdq
sti
inc
inc
dec
scas
mov
add
inc
push
push
aam
xchg
dec
adc
je
aam
push
(bad)
or
test
in
pusha
sbb
mov
outs
daa
sbb
addr16
cmp
cmp
fadd
sbb
out
aaa
sar
ins
jp
push
dec
dec
loop
ins
mov
jb
ins
adc
pop
xor
lods
xor
or
jns
mov
sahf
and
sti
repz
(bad)
mov
sub
push
shl
shr
mov
push
stos
dec
in
pop
int
mov
inc
and
aas
lahf
adc
sbb
push
(bad)
sub
mov
lea
imul
jl
or
shl
in
ret
mov
pop
push
imul
jmp
cli
pushf
enterw
dec
loop
daa
mov
add
scas
ja
ins
and
(bad)
leave
in
sti
sahf
mov
push
jp
push
fs
cmp
mov
inc
inc
jle
iret
jle
jecxz
lock
xchg
xlat
mov
sbb
adc
fnsetpm(287
icebp
int3
sub
cmp
sbb
mov
loop
pushw
cmp
ss
pop
rcl
hlt
cs
adc
adc
mov
int
mov
enter
xchg
pop
out
adc
leave
fdiv
sbb
jbe
imul
repnz
dec
xor
xlat
jnp
sbb
outs
push
or
lahf
dec
popa
sbb
cmp
ss
adc
dec
mov
js
das
sub
in
push
out
movs
mov
sbb
call
jnp
fdiv
sar
test
pop
mov
in
push
mov
and
mov
movs
sub
or
(bad)
jmp
and
jno
mov
xor
push
out
mov
add
je
cli
fcmovnb
stc
rcr
xor
mov
mov
jl
ret
xor
ret
inc
mov
mov
xor
fmul
cmp
mov
sbb
mov
cmp
add
movs
xor
retf
fwait
xchg
repz
xlat
xchg
aas
and
push
fst
mov
mov
jmp
push
mov
pop
idiv
int
mov
hlt
jo
movs
mov
stos
inc
dec
xchg
outs
cmp
outs
rcl
push
ds
mov
xchg
(bad)
push
sub
push
cwde
cmps
(bad)
mov
bound
xor
jb
push
push
jnp
or
jp
dec
xor
call
lods
gs
mov
push
push
lods
mov
idiv
fidiv
sbb
into
icebp
jb
or
add
pop
add
mov
add
jp
adc
gs
mov
call
and
movs
and
popa
jo
ja
das
push
(bad)
pop
call
popf
sub
pushf
and
mov
pop
cmp
das
push
adc
push
adc
push
jmp
aam
mov
xchg
xor
add
pop
test
(bad)
xor
mov
push
xor
jne
imul
adc
add
dec
and
add
mov
and
inc
or
mov
mov
mov
fwait
add
inc
and
push
xor
dec
jno
push
lods
cmp
jle
(bad)
mov
dec
mov
int
nop
push
fadd
loop
mov
lods
fcmove
adc
loop
mov
push
adc
inc
in
pop
jmp
jecxz
push
loopne
jne
hlt
inc
push
lds
iret
movs
call
ja
push
cmp
loopne
add
sub
es
imul
xor
pusha
or
push
xlat
lock
je
lea
mov
pop
mov
hlt
mov
lahf
es
fmul
cmc
hlt
mov
icebp
xor
sub
push
cdq
inc
mov
jmp
pop
adc
xchg
shl
call
pop
int3
movs
pop
inc
mov
sub
push
sbb
test
cmp
inc
dec
call
es
mov
inc
xchg
mov
xchg
mul
ret
cmps
push
xchg
scas
out
aad
pop
int3
mov
bound
mov
cmp
mov
inc
fsubr
bound
mov
push
inc
ret
add
(bad)
sbb
mov
rcr
pop
pop
addr16
and
adc
sub
les
add
xchg
retf
xchg
popf
dec
hlt
scas
inc
(bad)
push
jl
das
jmp
test
inc
mov
sti
sbb
in
xchg
sbb
data16
lods
adc
dec
or
xchg
clc
mov
inc
pop
or
cmp
sub
(bad)
in
pop
repnz
js
sub
cmps
fsub
enter
jp
push
scas
pop
or
adc
xchg
sti
or
push
test
rcl
lock
popf
ja
stc
(bad)
inc
mov
mov
shl
sub
dec
sub
and
nop
into
dec
in
repnz
rcl
(bad)
(bad)
adc
jl
cmp
mov
xchg
mov
inc
int
fsub
fs
jo
dec
retf
jge
mov
xchg
jmp
mov
sbb
jl
sar
mov
call
pushf
push
mov
sub
mov
push
pop
out
leave
mov
jecxz
jns
nop
add
inc
lods
mov
and
and
cdq
repnz
jge
inc
mov
jle
add
adc
dec
pop
leavew
add
mov
shl
jo
sbb
fwait
dec
and
cmps
mov
in
daa
mov
fwait
dec
test
sub
adc
sub
iret
dec
mov
js
mov
pushf
sub
mov
movs
jb
movs
mov
mov
popf
ins
add
call
(bad)
xor
pusha
add
pushf
push
mov
arpl
jg
int3
out
shr
jle
push
or
repnz
(bad)
out
popf
jno
jns
ins
dec
push
int
loope
call
xor
adc
sub
and
test
dec
push
xor
jne
or
sub
outs
mov
test
pop
loope
retf
and
mov
adc
or
ins
xchg
jl
test
pop
(bad)
dec
add
sahf
pop
repnz
hlt
retf
shr
ret
dec
or
or
mov
out
es
rol
rol
pop
dec
mov
add
movs
stos
mov
xchg
or
pop
jmp
xchg
mov
or
in
mov
pop
imul
sub
fild
mov
mov
xchg
dec
pop
mov
popf
(bad)
dec
sbb
adc
aaa
int
xchg
jmp
sti
dec
jecxz
adc
jb
gs
iret
jno
(bad)
pop
adc
jo
sub
mov
inc
jno
sbb
enter
fisubr
mov
pop
mov
jbe
and
mov
adc
mov
mov
dec
inc
xor
xchg
retf
in
ret
adc
xor
fwait
mov
xchg
inc
cmps
jbe
repz
ficomp
repz
mov
stos
fidiv
or
xchg
lahf
iret
das
imul
jo
leave
scas
std
and
cmp
adc
leave
mov
rcr
jno
fisttp
outs
rcl
mov
loopne
adc
idiv
xor
out
cmp
adc
sub
aas
jnp
ss
lods
pop
rol
add
and
jb
pop
push
sahf
xchg
dec
es
movs
pop
push
lea
jae
jns
dec
into
push
dec
inc
(bad)
mov
(bad)
push
movs
shl
and
movs
or
sub
dec
jnp
mov
xchg
inc
adc
leave
dec
jnp
xor
or
pop
fistp
fwait
sub
sub
addr16
je
push
or
mov
aad
fist
add
dec
cmp
xchg
jle
xor
jmp
ret
inc
sar
loop
(bad)
fisub
mov
outs
leave
data16
fs
pop
test
ins
sub
loope
adc
mov
push
arpl
xor
lahf
aaa
mov
add
in
jg
pop
push
lods
loopne
(bad)
adc
loopne
(bad)
movs
aaa
xchg
movs
push
push
pop
(bad)
jns
xchg
cmp
cmp
pop
xchg
xor
test
movs
mov
je
ret
jo
bound
dec
test
mov
jmp
fstp
loope
jmp
xchg
repz
adc
pushf
pop
sub
and
mov
push
test
fsubr
dec
inc
fldenv
mov
rcl
mov
pop
xor
ret
ror
loop
sbb
(bad)
aad
push
icebp
icebp
xor
or
ret
sbb
stc
out
jmp
not
jnp
xchg
mov
jns
push
out
ss
mov
ja
in
jmp
(bad)
imul
mov
pushf
out
mov
ss
cmp
adc
mov
and
mov
inc
enter
ss
sahf
int3
pushf
and
sub
leave
lock
add
outs
test
outs
adc
pop
addr16
push
jecxz
cli
jno
cld
fisubr
test
cmps
subps
int
int
pop
xchg
add
(bad)
and
es
aaa
mov
scas
(bad)
jo
icebp
mov
popa
imul
push
xor
das
mov
fidivr
ins
push
push
mov
addr16
lock
or
xor
ins
adc
mov
or
push
push
xchg
dec
dec
(bad)
mov
js
xor
mov
inc
out
ins
jle
mov
fwait
dec
push
jg
pop
jmp
xlat
dec
stos
xor
aas
fisub
ficomp
or
stc
xchg
inc
(bad)
dec
sbb
rcl
loopne
outs
ss
fiadd
sub
adc
mov
ret
mov
je
sbb
inc
je
add
jl
jno
into
push
add
or
repnz
rol
repz
add
and
mov
inc
inc
popa
icebp
sti
popf
mov
pop
stc
in
cmp
call
add
cmp
inc
in
aam
and
iret
mov
dec
add
jge
push
test
shl
stos
lds
pop
fimul
ds
adc
cmps
fdivr
xchg
inc
mov
aad
les
sbb
dec
lahf
out
mov
aas
adc
xchg
mov
shl
je
ficom
jno
cdq
sbb
dec
sbb
ret
or
push
xor
or
nop
dec
cld
daa
test
push
repz
in
repz
retf
lds
jecxz
add
dec
adc
std
ficom
add
inc
mov
je
pushf
cmp
xor
inc
arpl
xchg
adc
push
jecxz
and
mov
lods
fiadd
xor
cmp
push
fld
sar
push
test
sti
maxps
fdiv
sbb
je
cmp
jge
or
sbb
fdiv
nop
aam
dec
gs
ror
jl
add
xor
aam
loopne
movs
push
mov
pop
push
call
in
xchg
clc
dec
xchg
fs
ss
mov
xchg
fcom
cmp
adc
movs
pushf
jne
fucomip
jno
stc
ins
add
sbb
fstp
inc
cs
cs
pop
pop
out
mov
push
ins
and
scas
test
les
retf
mov
inc
call
lds
std
mov
imul
xchg
pop
mov
cmp
call
push
cmc
add
ret
fwait
test
stos
pop
or
dec
fisttp
pushf
mov
mov
mov
cmp
push
cmp
add
mov
ss
test
mov
pop
dec
pushf
int3
inc
jl
ror
ret
int
jmp
push
inc
jno
loopne
dec
repz
xchg
lahf
rep
sahf
movs
adc
or
mov
fstp
mov
mov
clc
fld
adc
mov
inc
jo
mov
fsub
(bad)
lahf
nop
ss
repnz
enter
and
pop
or
adc
mov
rcl
lds
inc
add
mov
sahf
in
js
inc
adc
loopne
arpl
test
lods
xchg
sub
cmps
mov
cli
adc
lahf
xchg
(bad)
out
fisub
fst
push
out
test
in
xchg
sbb
or
fwait
inc
fwait
test
xchg
add
(bad)
adc
adc
int3
(bad)
xor
call
test
repnz
xor
mov
loopne
jecxz
imul
cdq
mov
sub
dec
xor
mov
(bad)
ret
test
push
and
imul
sub
fs
or
jno
repnz
jecxz
jp
dec
jno
stos
mov
fmul
pop
xor
stos
(bad)
rcr
frstor
pop
test
call
shl
xor
xchg
dec
sbb
xchg
aad
jg
cwde
fnstcw
jbe
and
mov
add
gs
mov
std
push
jge
call
jno
stc
rcl
test
cmp
add
xlat
inc
ins
outs
sti
lods
xchg
fld
cli
push
stc
mov
leavew
jl
push
mov
sti
add
sar
mov
nop
inc
aas
in
sub
or
in
inc
arpl
xchg
les
pop
xchg
xor
(bad)
pop
xchg
xor
hlt
or
leave
xor
mov
mov
ss
movs
lahf
packuswb
push
pop
lds
sub
ss
xor
mov
and
aad
xchg
mov
add
mov
add
mov
mov
fldcw
pop
lahf
mov
out
mov
bound
(bad)
sub
jbe
dec
and
or
push
mov
mov
out
jle
cdq
jle
or
rcl
setl
mov
mov
adc
adc
sub
js
test
stos
dec
xchg
cmp
test
adc
jmp
stc
pop
sbb
jp
pop
jp
inc
(bad)
mov
test
or
push
cmc
push
int3
out
sub
ja
fistp
shl
into
cld
pop
jmp
out
(bad)
iret
push
cs
mov
out
aam
pop
into
ror
xchg
sbb
or
mov
or
push
mov
mov
stos
sub
push
and
mov
repnz
sub
sub
cmc
arpl
sbb
pop
(bad)
bound
push
mov
dec
push
and
fcom
int
fs
outs
popf
jae
cmp
retf
push
out
mov
ret
stc
adc
out
sub
addr16
int
pop
ins
ins
mov
dec
(bad)
mov
adc
and
push
or
jmp
fcomp
in
popf
in
inc
retf
fisubr
adc
into
fsub
xor
mov
jl
je
or
mov
cwde
pop
test
(bad)
(bad)
mov
jno
stos
push
and
push
cdq
daa
iret
es
fdiv
addr16
je
movs
dec
je
pusha
repz
jmp
add
mov
lds
iret
add
mov
xlat
dec
mov
cmps
mul
jg
in
popf
mov
mov
jno
jbe
retf
xor
mov
test
sub
xlat
xchg
xchg
sub
push
fisttp
loopne
jo
and
ret
out
je
mov
loop
push
iret
leave
cmp
xchg
cli
mov
mov
adc
push
mov
add
call
ss
fwait
addr16
les
jmp
gs
addr16
test
dec
rcr
ret
repnz
xchg
pop
pop
xor
xor
dec
pop
xchg
push
mov
pop
aaa
cld
popa
test
xor
in
rol
push
fistp
cmp
xchg
mov
mov
data16
mov
mov
retf
adc
lock
sub
mov
cmp
cmc
sub
test
lods
xlat
mov
(bad)
mov
lea
mov
rol
div
mov
mov
inc
jb
mov
xor
lds
jl
sbb
xchg
inc
retf
lds
mov
std
test
ret
pop
shr
addr16
leave
mov
fcmovnbe
lock
push
fist
fsubr
enter
fwait
jb
out
lods
add
in
test
loop
jo
jg
adc
data16
cwde
test
pop
fcomp
jecxz
fild
push
pop
js
push
cmp
jb
cmp
(bad)
lods
inc
shl
and
cmp
test
aas
pop
cmps
jmp
and
adc
mov
pop
or
mov
mov
out
and
retf
bound
dec
pop
clc
mov
dec
(bad)
push
sub
inc
inc
gs
enter
xor
push
inc
aas
jnp
jbe
mov
aas
outs
shl
cmp
add
mov
xor
add
cmp
outs
cld
icebp
and
jno
pop
call
movs
mov
iret
jge
dec
(bad)
jle
jl
adc
mov
mov
sbb
and
popf
inc
(bad)
out
out
adc
push
and
out
mov
das
test
mov
mov
cmps
jns
int
arpl
jo
(bad)
(bad)
sar
rol
mov
hlt
loope
mov
inc
xchg
lahf
push
mov
in
cmp
sbb
mov
cmps
jmp
xchg
test
repz
sbb
ss
(bad)
out
and
sti
mov
jbe
icebp
pop
out
jnp
and
movs
pop
rol
int3
pop
lahf
jle
push
xor
fld
adc
fnstenv
xchg
cmc
mov
mov
stos
jg
out
mov
cmp
aad
ins
popf
daa
dec
in
arpl
inc
mov
and
jecxz
mov
sahf
sub
or
shr
dec
(bad)
mov
inc
dec
push
cmp
into
sbb
or
outs
xchg
jbe
jl
mov
mov
adc
in
mov
push
push
fwait
mov
jo
pop
cmps
pusha
cmp
and
popa
stc
sub
jge
add
out
mov
cmps
push
ror
sub
aaa
out
xor
stos
or
std
mov
aas
(bad)
inc
stos
mov
sub
lods
outs
test
jl
outs
cmc
int
lahf
in
in
or
push
adc
add
push
mov
jmp
sbb
ins
outs
or
cmp
mov
out
jecxz
adc
push
(bad)
cmp
je
push
das
call
mov
sbb
cmp
jo
xor
inc
mov
and
loop
mov
and
jl
ins
and
retf
pop
stc
pusha
lods
inc
ret
inc
adc
idiv
sbb
dec
sub
add
in
pop
xchg
(bad)
addr16
sub
imul
mov
pop
mov
dec
and
jbe
pop
sub
into
push
cmp
mov
movs
cld
xchg
push
cmps
(bad)
loop
push
cdq
das
sbb
cld
push
add
dec
fstp
or
and
aas
xchg
ret
aad
mov
rcr
popf
movs
cli
xchg
pusha
fst
xor
mov
out
scas
fcomp
popf
xor
aam
add
cmp
test
hlt
inc
fs
fwait
jno
xor
dec
cmp
push
and
jmp
shr
imul
xlat
xchg
inc
outs
or
mov
dec
or
mov
cmp
(bad)
ret
and
mov
repnz
inc
mov
sbb
daa
fadd
lods
lock
mov
outs
fs
or
and
fld
mov
push
or
mov
mov
inc
mov
lods
jb
mov
or
out
out
das
push
das
cmps
les
fsub
aaa
or
pop
pop
xor
and
jle
jle
in
jmp
repz
es
mov
jno
pushf
mov
or
in
sbb
or
ret
out
gs
inc
add
test
sbb
pop
loop
hlt
xor
mov
test
popa
ins
inc
fbld
xchg
lods
sar
ins
or
pusha
push
pop
and
sbb
(bad)
lds
mov
iret
xchg
movs
stos
shl
mov
sub
or
movs
jg
gs
jae
cmp
xchg
push
psraw
jp
jecxz
xor
sbb
add
imul
sub
dec
or
fnstsw
mov
ins
push
add
call
cld
in
pop
pushf
pop
dec
cdq
mov
rcr
mov
sti
mov
loopne
out
cdq
icebp
std
cmc
test
aad
out
pop
cmps
stc
cmp
mov
mov
retf
xchg
add
ror
jae
addr16
clc
mov
push
leave
cmps
push
shl
sub
mov
or
xchg
sbb
rol
sub
xchg
or
mov
sar
and
dec
mov
mov
enter
lahf
test
jmp
push
outs
or
(bad)
mov
sbb
xor
mov
xor
movs
mov
mov
jmp
out
bound
mov
lea
call
ja
fidiv
dec
mov
xor
and
das
clc
mov
leave
in
xchg
into
clc
pusha
stos
ja
pop
call
out
aaa
int3
fs
call
popf
loope
cmc
xchg
inc
fdivr
pop
popa
or
outs
movs
call
(bad)
mul
rcl
xchg
loope
cmp
jae
xor
jae
loopne
imul
xor
cdq
dec
ss
pop
push
xchg
cmps
in
mov
mov
mov
sbb
dec
dec
fsubr
jo
fwait
pop
cli
imul
out
ret
add
int3
pop
(bad)
in
xor
ficom
test
inc
sub
mov
jmp
cmc
push
popf
xchg
rol
jo
cdq
scas
out
adc
out
and
movs
adc
fcmovnbe
push
inc
cdq
addr16
sar
mov
aas
xor
or
xor
pushf
push
(bad)
adc
add
jmp
mul
in
cmp
pop
lahf
jmp
xor
sbb
pop
adc
dec
mov
and
cmps
pushf
mov
push
cmp
scas
and
mov
es
lahf
or
xor
inc
sub
stos
je
data16
lds
mov
inc
mov
hlt
mov
retf
mov
dec
adc
sbb
mov
cld
pusha
cmp
adc
arpl
pop
and
fisub
fsubr
aaa
enter
add
cmp
pop
loop
mov
jbe
and
fs
in
and
jmp
add
inc
out
(bad)
out
aam
hlt
xchg
cmp
mov
mov
or
(bad)
(bad)
jle
cwde
push
dec
cmp
jp
push
sub
mov
and
xchg
aad
dec
test
(bad)
enter
sub
call
movs
mov
into
and
test
jo
inc
fst
clc
out
push
ds
push
adc
bound
loop
sbb
pop
inc
pop
pop
mov
jo
stc
clc
repz
sbb
(bad)
ficom
push
or
jge
icebp
rcr
fisubr
pushf
gs
lods
dec
push
arpl
rol
aas
mov
arpl
arpl
inc
cmp
cli
int
cmps
out
push
fcomp
pushf
test
dec
jl
std
dec
(bad)
ja
fsubp
in
xchg
add
and
out
imul
mov
(bad)
jp
cmp
lds
fisub
push
jg
dec
xor
ror
imul
lahf
sub
and
push
sbb
dec
xchg
dec
dec
in
add
sahf
mov
mov
push
sbb
sub
aad
cwde
cmp
cmp
mov
ror
inc
stos
push
jmp
(bad)
xor
cmps
fldenv
add
pop
mov
rol
add
nop
jno
fistp
repz
cmp
mov
push
cmp
jge
or
shl
sti
add
int
retf
pop
sbb
sar
retf
repz
push
adc
iret
pop
mov
repnz
mov
das
lods
dec
stos
fisttp
cmc
addr16
xchg
adc
mov
fisubr
pop
pop
aaa
(bad)
cmps
jbe
dec
push
out
mov
test
into
dec
fdivr
pop
dec
shr
adc
jae
scas
not
int3
scas
jns
sub
iret
stos
jg
xchg
sub
cmc
pop
mov
push
mov
sbb
pop
mov
test
sbb
test
push
sbb
popa
mov
push
xor
cmps
ret
frstor
movs
dec
shl
push
(bad)
inc
dec
sub
int3
mov
sbb
xchg
xchg
jne
rcl
ins
add
sub
bound
es
jnp
and
cmps
adc
leave
mov
jge
mov
dec
xlat
gs
jno
pop
pop
mov
or
ror
imul
adc
(bad)
dec
lea
sbb
movs
cmp
add
xor
retf
mov
adc
repnz
jecxz
ja
(bad)
test
adc
or
adc
retf
add
fldenv
pop
mov
mov
pop
out
scas
pop
push
outs
rcr
aad
das
cmc
daa
(bad)
loop
xor
test
fistp
sbb
xor
xor
sub
and
mov
or
daa
not
addr16
push
fsub
(bad)
pop
pop
mov
sahf
out
loope
add
jo
mov
mov
lea
jmp
jno
(bad)
mov
adc
call
or
push
icebp
jns
loop
scas
lods
add
jmp
call
pop
sub
cli
(bad)
sti
hlt
sahf
cmp
push
jecxz
xchg
outs
xor
and
sub
push
or
out
push
hlt
adc
mov
aas
aam
movs
cli
push
mov
scas
repnz
pop
sbb
push
loope
out
mov
jne
icebp
xor
dec
cmc
loope
(bad)
aad
mov
lods
mov
test
es
into
mov
test
or
xor
mov
inc
rcr
pusha
retf
adc
jmp
retf
push
pop
mov
or
lock
mov
mov
sbb
leave
leave
sbb
retf
cdq
test
sub
or
push
or
push
sahf
int3
cmp
jmp
out
or
xor
in
into
pop
mov
mov
jns
js
mov
f2xm1
int
rcl
in
popa
pop
dec
cmp
add
(bad)
fistp
jb
jo
cwde
adc
pop
jmp
pop
xlat
jmp
out
into
mov
adc
std
imul
out
ret
xchg
adc
cs
les
sub
cmps
fist
pop
and
adc
mov
in
div
(bad)
fcmovnb
pushf
sub
pushf
test
adc
push
push
lds
cmp
aaa
fidiv
xchg
mov
adc
imul
mov
sbb
add
mov
mov
cmp
sbb
or
pop
movs
jno
jle
dec
fs
loopne
pop
scas
repz
xor
mov
jge
gs
(bad)
jmp
std
or
mov
fs
jae
push
cmps
xchg
or
sub
inc
imul
in
xlat
and
fist
fmulp
xchg
shl
xor
mov
jp
dec
push
mov
mov
inc
(bad)
pop
mov
fcomp
stos
push
jo
(bad)
es
cmp
imul
fldcw
mov
(bad)
fcomp
push
jns
shr
fs
ret
add
xchg
xchg
pop
in
ret
pop
dec
push
mov
(bad)
pop
scas
xor
mov
pop
jno
sar
outs
sbb
add
dec
out
in
retf
adc
push
jmp
adc
mov
fwait
xor
lods
jecxz
mov
fisub
inc
(bad)
and
ret
inc
xchg
stos
daa
int3
dec
mov
mov
(bad)
push
dec
jne
das
test
iret
ds
outs
cli
addr16
call
inc
aam
aaa
arpl
fcom
mov
push
popa
xor
outs
lahf
mov
ins
inc
sar
jp
outs
push
ins
sar
mov
mov
sahf
xchg
outs
cdq
xchg
pop
mov
push
pusha
stos
sbb
pop
jnp
sbb
adc
mov
sbb
sbb
out
xor
ficom
data16
xchg
mov
into
pop
test
inc
mov
addr16
cmp
jnp
stos
sbb
imul
jg
mov
mov
cmps
push
or
stos
add
ffreep
clc
aam
in
push
mov
out
mov
mov
lea
and
jp
test
daa
pop
sahf
mov
or
dec
sar
sar
ins
or
inc
ret
mov
fwait
aaa
pop
dec
sub
add
popa
fnsave
and
mov
jnp
movs
pop
mov
es
adc
test
sub
ds
mov
bound
jo
ds
mov
cmps
call
(bad)
cmp
xchg
rcl
mov
push
push
cmp
stc
jae
or
dec
and
dec
dec
stos
fmul
add
xor
inc
or
inc
pop
xchg
xor
cmovs
outs
scas
pop
sub
(bad)
xchg
leave
mov
dec
xchg
movs
js
xchg
mov
inc
popf
dec
jo
mov
sub
jl
int
adc
push
jge
xchg
add
sbb
mov
push
psrld
push
call
js
and
in
movs
jns
xor
jmp
loope
int
xlat
pop
jnp
mov
mov
stos
dec
xchg
mov
mov
jg
xchg
and
pop
shl
(bad)
adc
push
pop
dec
leave
sub
(bad)
or
jle
sahf
jo
sub
stc
aam
ds
lock
pop
mov
loopne
xor
push
(bad)
aad
mov
or
inc
inc
xchg
das
sbb
clc
push
and
imul
cmp
das
jge
jmp
sub
test
xor
inc
pop
or
sub
sti
call
jmp
lods
es
popa
add
mov
popa
sar
sbb
pop
mov
add
shl
imul
mov
loope
clc
dec
cmovo
aam
or
data16
add
int
jmp
aam
(bad)
or
adc
daa
test
xchg
outs
pop
fstp
inc
cld
sbb
dec
mov
movs
mov
adc
cmps
sar
lods
ds
dec
ret
pop
xor
push
xor
mov
aam
stc
enter
imul
add
dec
push
adc
jb
jae
push
das
ja
stos
sub
mov
dec
push
xor
(bad)
pushf
pop
dec
adc
mov
push
js
popa
mov
push
sbb
and
sub
mov
inc
adc
(bad)
leave
imul
lea
pop
mov
push
pcmpgtw
mov
mov
pop
mov
jl
bound
sbb
or
mov
mov
neg
repz
mov
xor
scas
pop
lds
or
sbb
cmp
dec
sub
ret
imul
fwait
jp
mov
dec
es
inc
cmp
mov
inc
push
jl
leave
scas
fwait
test
inc
ret
scas
dec
enter
dec
arpl
test
adc
retf
call
jae
cwde
dec
xchg
jmp
mov
imul
repnz
out
stos
out
daa
leave
rcr
mov
dec
sub
mov
ja
fisub
mov
fistp
ins
sub
mul
not
call
jb
jge
or
in
jecxz
or
(bad)
js
xor
cmp
xchg
ret
mov
lods
js
aas
xchg
aas
cmp
push
xchg
mov
int3
xor
and
sbb
inc
fisub
mov
cmp
xor
inc
mov
(bad)
pop
dec
jne
imul
(bad)
push
scas
cmp
sbb
adc
cwde
stos
adc
scas
stos
aas
aas
test
add
add
xor
jne
jmp
xchg
(bad)
loope
ss
cmps
sub
lock
aad
cmp
mov
ins
jo
cwde
adc
nop
mov
in
push
iret
lods
or
xlat
push
and
xchg
(bad)
icebp
dec
sub
leave
clc
jbe
out
pop
dec
or
rol
xchg
ds
xor
pop
inc
(bad)
xchg
jmp
push
xor
add
ins
cwde
clc
dec
mov
out
push
jns
mov
inc
or
jg
stc
into
sub
scas
or
mov
and
pop
mov
add
test
add
jl
or
inc
jne
ret
mov
mov
jp
stos
rol
popf
mov
push
rcl
fsubr
test
sar
dec
inc
test
mov
pop
lods
sbb
in
and
frstor
mov
sbb
js
sahf
stc
mov
sbb
(bad)
lea
xor
call
or
pop
push
arpl
mov
addr16
push
paddusw
lahf
push
xchg
scas
dec
movs
test
cmps
mov
sbb
outs
sbb
stc
sbb
add
out
cmp
into
dec
(bad)
call
pop
sbb
out
push
xlat
pop
inc
inc
iret
dec
cmp
aam
lods
xchg
pop
dec
xchg
repz
stos
pop
xor
mov
(bad)
pop
inc
mov
mov
(bad)
add
inc
and
dec
lahf
cmp
push
fs
jbe
jb
hlt
pop
xchg
push
pop
push
int3
cmp
push
pop
ss
push
out
mov
jmp
dec
jo
fdiv
cmp
hlt
repnz
js
aad
add
mov
inc
hlt
cmp
test
and
adc
pusha
add
or
into
daa
popa
cmp
mov
pop
jb
jmp
aad
inc
sub
rcl
mov
pop
dec
adc
sub
adc
stos
sbb
sub
in
adc
jnp
adc
jnp
test
outs
fsubr
add
test
dec
jp
outs
popf
test
sbb
shl
mov
inc
add
pop
out
icebp
test
and
mov
adc
jmp
addr16
jg
inc
(bad)
loope
push
int
and
retf
in
sbb
jge
jg
scas
outs
les
retf
lods
js
bound
mov
dec
and
sbb
add
mov
sub
shr
add
pop
sbb
shr
mov
out
adc
repz
jle
fisttp
int3
retf
mov
les
(bad)
dec
jno
stc
or
ror
aam
aam
mov
popa
das
xor
sub
mov
cmps
stc
rcl
test
ret
lahf
call
xchg
xchg
xchg
aaa
inc
movs
sub
xchg
rcr
test
xchg
inc
stos
scas
dec
mov
fdiv
lods
imul
inc
mov
inc
rcr
add
cmps
stos
fs
pusha
jbe
repnz
mov
and
xchg
xor
repz
(bad)
ins
sti
bound
pop
cdq
xor
adc
ja
scas
fwait
sahf
mov
lahf
xor
pop
cmps
lods
shl
(bad)
cmps
pop
cmp
pop
loope
cwde
dec
jle
or
ins
mov
add
sahf
ins
ret
movs
push
xchg
cdq
mov
rcr
jle
mov
shl
cmps
(bad)
cld
hlt
mov
xchg
pop
cmp
test
push
fadd
mov
or
pusha
jecxz
inc
(bad)
mov
ror
inc
add
aad
ins
mov
adc
or
fadd
inc
mov
stos
ret
sbb
jnp
sub
scas
mov
or
imul
push
stos
imul
mov
mov
cmc
lahf
jnp
test
addr16
scas
mov
loopne
or
es
clc
adc
cs
out
out
mov
dec
rcr
xor
lahf
mov
and
outs
push
and
(bad)
sbb
fidiv
imul
inc
loope
repz
aas
sub
(bad)
jbe
mov
inc
into
mov
(bad)
imul
cmp
cmp
xchg
inc
pop
aad
(bad)
push
stos
cs
mov
push
xchg
std
add
xchg
push
cdq
mov
inc
sbb
fld
fs
xor
fwait
shr
mov
pop
cmp
in
xor
sub
out
and
cmp
adc
cmp
rcr
xchg
test
push
jns
jo
mov
push
pop
push
jo
jns
test
cs
xchg
cmc
aas
sti
lods
out
pop
mov
push
stos
mov
nop
adc
pop
and
test
cmps
pop
xor
cmp
aad
jo
xchg
loopne
pop
sbb
add
loop
jbe
lods
pop
sbb
(bad)
retf
dec
dec
stos
push
xchg
imul
fcom
into
jo
or
stc
sbb
fiadd
call
cld
fld1
loopne
xchg
daa
jnp
aad
pushf
adc
cmp
and
test
test
cmps
(bad)
dec
outs
cmps
or
mov
enter
aaa
jmp
popa
out
retf
mov
mov
jl
test
out
adc
push
mov
push
rcl
mov
aaa
shl
jno
sbb
cmp
mov
das
push
dec
cwde
int
test
push
into
jbe
cdq
xchg
inc
pop
xchg
arpl
inc
inc
in
(bad)
xchg
xor
rcl
dec
mov
test
pop
mov
dec
and
pop
xlat
or
es
jmp
pop
(bad)
iret
dec
mov
popa
or
ret
mov
push
xchg
scas
(bad)
push
movs
mov
lds
push
stc
mov
jne
lock
lock
and
and
mov
inc
jne
dec
sub
or
adc
aam
in
in
idiv
fistp
mov
outs
les
dec
xor
xor
in
ja
inc
imul
test
pop
pop
inc
lock
and
in
mov
adc
push
shl
outs
nop
adc
popa
xchg
retf
je
movs
jecxz
cmps
inc
sub
movs
cwde
gs
retf
pop
push
mov
test
lods
ficomp
dec
dec
mov
repz
sub
xchg
mov
nop
stos
jle
rol
xchg
lahf
and
sbb
lock
test
pop
call
push
pop
jge
cld
(bad)
div
int3
sub
test
rcl
push
mov
push
loope
dec
hlt
push
in
aaa
bound
dec
gs
test
imul
ss
mov
repnz
call
pop
cmp
mov
cli
int
fldcw
add
call
in
in
ins
sar
aas
cmc
cmp
adc
mov
cmp
sahf
and
adc
imul
xchg
inc
and
mov
pop
or
lock
or
out
inc
rol
aad
dec
sub
mov
dec
das
cmp
leave
dec
xor
in
push
or
(bad)
stc
push
outs
dec
pusha
jl
imul
sbb
inc
mov
loope
lds
push
ret
inc
mov
push
ds
repnz
mov
imul
push
pop
cli
push
mov
test
mov
push
ret
sbb
and
add
dec
fldenv
repz
inc
jp
and
out
mov
sub
mov
dec
cdq
ret
ss
mov
mov
bswap
adc
clc
pop
inc
rcl
sbb
and
hlt
xor
arpl
lds
or
mov
inc
push
les
adc
cmp
adc
jb
loopne
pop
movs
mov
add
sti
pop
dec
push
leave
xchg
sti
ja
retf
aam
ror
or
xchg
retf
sbb
xchg
(bad)
aad
pusha
shl
and
jns
pop
xchg
movs
cmps
call
push
cs
inc
cmp
mov
and
out
test
adc
push
mov
push
cwde
mov
daa
inc
sub
jl
repnz
push
dec
jno
cmp
and
in
lods
push
jmp
push
pushf
stos
xor
add
mov
mov
int
pushf
add
int
test
or
dec
stos
test
sub
jecxz
xor
jns
adc
or
in
cmp
outs
sub
mov
mov
pop
dec
dec
pop
test
pusha
enter
mov
adc
daa
movs
adc
sbb
movs
dec
jb
sub
stc
xchg
and
in
lahf
test
(bad)
aas
pop
(bad)
dec
div
inc
jb
and
dec
ss
loopne
sub
aaa
clc
outs
inc
sbb
mov
iret
shr
addr16
xchg
mov
and
push
mov
ins
mov
cmp
aam
popa
pop
retf
jae
and
sti
repz
mov
or
push
push
inc
mov
xchg
sti
dec
sub
xchg
lock
js
fwait
aad
mov
aaa
push
(bad)
(bad)
sub
mov
ret
into
pop
add
out
xor
jecxz
out
cmps
test
das
div
push
lods
inc
ja
fcom
hlt
lods
push
dec
jp
xlat
mov
out
sbb
lock
or
mov
push
leave
push
aas
xchg
jo
and
fs
adc
xlat
cdq
mov
sbb
pop
mov
jecxz
out
adc
cmp
rcr
cmp
add
adc
loop
adc
sbb
loopne
mov
xlat
lods
inc
mov
loopne
inc
xor
jmp
bound
ret
rcr
xchg
mov
test
push
icebp
xor
ret
pop
xchg
sub
xor
inc
daa
adc
xor
mov
jecxz
scas
dec
jmp
repnz
loop
adc
call
jge
mov
retf
cmps
fldenv
div
xchg
push
xchg
adc
mul
ret
rol
inc
movs
xchg
rol
popf
xor
lahf
iret
(bad)
sub
sub
jo
inc
and
jl
sub
cmps
aad
adc
cmp
cmps
push
push
mov
mov
lods
or
mov
and
test
xor
pop
cmp
das
(bad)
movs
enter
mov
add
pop
bound
pop
push
mov
push
mov
mov
(bad)
stos
jae
add
push
pop
cmp
adc
sub
(bad)
fisttp
xchg
fist
into
ja
jl
stos
jns
int3
dec
pop
pop
xchg
mov
cmp
(bad)
mov
shr
dec
shr
jle
test
(bad)
xchg
out
xchg
out
das
xchg
add
ds
arpl
scas
mov
xlat
sbb
mov
jge
sbb
stc
xchg
mov
cmp
pop
xchg
out
dec
sub
inc
push
popf
jbe
mov
push
mov
gs
out
pop
aad
xchg
jge
shr
retf
(bad)
aaa
cdq
xchg
neg
mov
cmps
xor
sub
outs
shl
out
lock
push
dec
test
jbe
add
and
mov
outs
outs
imul
jb
xchg
aam
jne
cwde
call
or
clc
jb
xchg
jmp
pop
cmp
lea
fwait
and
stc
push
mov
retf
ja
mov
mov
pop
cmp
sti
mov
or
dec
fbstp
gs
xor
inc
leave
dec
adc
push
ja
xchg
or
cmp
outs
stos
stos
jecxz
inc
inc
pop
(bad)
leave
test
add
das
push
mov
dec
inc
shr
fdiv
sub
jl
dec
or
scas
add
lods
sub
jmp
pop
ss
pushf
xchg
test
imul
dec
xor
inc
sub
dec
lea
mov
cld
sbb
mov
cmc
xchg
xchg
xchg
movs
(bad)
loop
adc
daa
xchg
mov
inc
pop
mov
xchg
outs
and
pop
mov
mov
push
rol
mov
out
mov
jnp
fs
stc
cmp
xchg
cmc
outs
pop
or
mov
scas
test
out
loope
(bad)
out
jg
push
add
jmp
div
pop
mov
or
jmp
cmovs
fisub
stos
sub
aam
repz
adc
sbb
or
cdq
mov
sbb
dec
(bad)
jmp
mov
sub
imul
push
sbb
sub
lock
inc
fisub
mov
inc
imul
mov
(bad)
xchg
das
jle
int3
adc
or
xchg
cmp
jne
inc
mov
js
int
clc
jb
cmc
pop
in
cs
fcomip
repz
xor
xchg
add
inc
pop
dec
push
push
adc
ins
pop
out
rol
sahf
out
movs
test
mov
stos
sbb
xchg
jmp
retf
adc
fcmovnbe
sbb
rol
mov
xor
jmp
ins
out
jp
jl
in
add
adc
pushf
xor
inc
jmp
push
(bad)
mov
add
add
cmp
xlat
mov
ror
xchg
mov
mov
jno
mov
mov
mov
jg
(bad)
outs
mov
pop
sub
push
or
gs
xor
dec
adc
cs
mov
into
repnz
popa
retf
jg
movaps
arpl
es
mov
call
push
and
stos
stc
sti
mov
sub
mov
jns
xor
fsub
sub
xchg
fsub
xor
shl
jle
or
mov
cmp
hlt
push
fisubr
test
adc
daa
push
pop
jo
pop
sahf
shl
push
cmp
sub
push
aam
sub
inc
pop
cmps
mov
popa
call
js
(bad)
stc
in
(bad)
test
or
dec
lods
pop
jmp
add
dec
mov
daa
test
sbb
imul
mov
emms
(bad)
or
mov
loop
iret
mov
or
(bad)
mov
cmp
cmp
mov
rol
jbe
xchg
mov
xor
sbb
mov
mov
jae
je
inc
call
loop
jmp
jmp
fld
dec
test
popa
mov
aaa
enter
and
dec
je
push
bound
aam
adc
mov
cmp
loopne
fisubr
pop
es
and
scas
jb
mov
pop
mov
xor
imul
push
mov
daa
into
sbb
sbb
pop
jecxz
arpl
jge
sbb
cmc
in
jbe
(bad)
imul
ja
clc
inc
fidivr
cmps
pop
sbb
push
sbb
imul
hlt
into
not
rcr
cld
out
cdq
js
xor
inc
dec
ins
push
jae
xchg
add
(bad)
in
jg
stc
jb
xchg
retf
push
dec
test
(bad)
mov
push
icebp
jns
or
lods
jmp
scas
mov
xchg
cmps
(bad)
test
sti
cwde
cmp
mov
add
retf
(bad)
add
call
fidiv
rcr
mov
shl
xchg
cmp
jno
or
mov
je
test
aam
adc
pop
push
xor
xchg
into
add
pop
jnp
add
ja
sbb
call
dec
cmp
fcom
cmp
aaa
rcr
ins
popf
loop
in
es
sbb
in
mov
and
lds
jl
xchg
add
nop
cmp
add
dec
mov
arpl
(bad)
xor
adc
jg
cmp
cmp
xchg
enter
inc
mov
js
jno
dec
mov
clc
xor
or
dec
sub
arpl
daa
inc
outs
pop
inc
loop
stc
or
xlat
sub
sub
sub
lods
xor
repnz
xchg
cmp
(bad)
lahf
mov
mov
sub
add
jbe
test
je
or
cli
movs
fst
mov
mov
cwde
les
hlt
mov
mov
(bad)
sub
pop
mov
inc
cmp
mov
xor
inc
pop
jb
imul
aam
mul
sbb
lods
jmp
or
movs
mov
clc
jmp
loopne
jo
cmp
xor
test
adc
jmp
leave
xchg
cmp
sbb
or
mov
xchg
push
stc
inc
mov
mov
out
pop
xchg
mov
imul
mov
movs
xor
in
adc
jecxz
sbb
sbb
mov
rcr
cmp
xor
in
cwde
mul
xor
adc
add
rcl
add
in
sub
inc
mov
dec
jo
rcl
push
imul
inc
sbb
xchg
pop
dec
leave
jecxz
sbb
jno
test
in
mov
test
hlt
dec
xchg
inc
pop
pcmpgtd
fdivr
sbb
repz
mov
cmp
jmp
push
push
ret
mov
js
sub
(bad)
push
pushf
cld
mov
ins
dec
and
pop
shr
sti
jae
xchg
call
sub
ror
mov
jle
jb
lods
mov
fs
mov
jmp
push
psadbw
mov
aas
stos
cmp
jns
(bad)
sbb
(bad)
mov
sti
sub
xchg
add
mov
add
mov
jmp
push
xor
xchg
adc
in
pop
sbb
mov
mov
mov
call
or
test
adc
ficomp
ret
in
popf
scas
sub
int3
sbb
jo
mov
scas
push
pop
call
enter
enter
inc
mov
mov
add
and
mov
popf
or
xchg
jno
(bad)
xchg
loopne
aas
add
pop
aam
xor
in
je
out
xadd
jmp
test
les
pop
loopne
cmps
xor
mov
push
sbb
leave
jle
cld
mov
std
mov
jnp
jae
mov
inc
sub
dec
and
daa
adc
push
sbb
rcl
inc
cmp
jbe
aas
mov
add
sbb
mov
add
call
(bad)
pop
sbb
cdq
pop
ja
les
inc
popa
sti
mov
cmp
mov
repz
lahf
mov
or
mov
hlt
and
outs
push
ss
push
aas
push
pop
pop
loopne
sbb
jae
dec
inc
arpl
sbb
ins
retf
movs
mov
mov
movs
jnp
aaa
sub
mov
push
les
fmulp
and
cwde
mov
cmp
mov
pop
dec
mov
sbb
call
pusha
mov
inc
pop
sub
jmp
movs
push
mov
ret
ret
(bad)
mov
push
mov
mov
(bad)
jle
dec
inc
jo
jns
imul
in
push
out
adc
add
jnp
pop
add
xchg
inc
mov
and
or
loop
aam
test
cmps
fcmovu
mov
pushf
xchg
sub
sub
outs
pop
push
pop
arpl
aaa
dec
cmp
sbb
cmp
jp
fnsave
adc
imul
pop
adc
repnz
pop
mov
retf
rol
loopne
mov
icebp
rcr
mov
shl
test
add
sub
add
mov
sti
sbb
sbb
int3
sub
and
jbe
jae
pop
sbb
scas
jb
jb
lock
push
mov
jns
ins
xchg
push
pop
fst
pop
or
ja
fcmove
lods
mov
aad
repnz
and
push
mov
clc
xor
gs
int3
and
jge
daa
sub
leave
ret
jo
mov
sar
aam
repnz
mov
dec
sbb
gs
ficomp
sub
dec
cld
mov
xlat
fld
push
jle
xchg
pop
jle
mov
push
cmp
sub
outs
push
scas
push
lods
data16
xchg
fnstsw
cwde
adc
les
inc
inc
mov
dec
xchg
push
out
xor
ss
xor
js
daa
sub
push
cmp
das
addr16
(bad)
jle
mov
mov
repnz
(bad)
pusha
inc
mov
xor
sti
(bad)
leave
push
mov
hlt
adc
or
push
jns
aaa
push
mov
push
movs
int3
loope
mov
xor
or
dec
leave
jge
(bad)
fcmovne
mov
idiv
dec
test
test
cmp
ss
retf
inc
hlt
push
or
or
pop
jb
mov
lock
sahf
xchg
out
lahf
mov
fisubr
lock
mov
loope
sbb
pop
js
sbb
pop
add
jo
int
push
out
enter
xchg
mov
or
shl
popa
and
or
arpl
fwait
and
adc
out
jno
addr16
repz
loopne
ss
xor
xchg
fld
jbe
dec
pop
sbb
push
adc
add
dec
outs
cmp
shl
leave
dec
loopne
ret
cmp
push
dec
in
pop
outs
or
push
adc
fs
js
dec
out
les
mov
add
fcmovbe
clc
inc
ins
mov
fs
aad
fcomp
leave
pusha
xor
mov
mov
fs
jp
arpl
lea
outs
mov
lahf
and
adc
gs
test
fucomip
pop
stc
push
out
inc
idiv
fild
shr
ffreep
daa
call
enter
(bad)
adc
ins
out
mov
sti
xor
dec
cmps
xor
dec
xor
clc
inc
pop
not
sbb
fidivr
mov
test
pop
retf
mov
call
mov
jb
lods
jp
sbb
pushf
inc
jne
xor
xor
shl
(bad)
inc
mov
mov
jne
or
fdiv
call
shl
sar
(bad)
rcl
pusha
add
pop
mov
and
push
lods
mov
retf
mov
fcomp
fadd
sub
xchg
mov
pop
fmul
ja
inc
iret
scas
add
inc
data16
xor
scas
push
mov
add
shr
sti
inc
repz
mov
mov
test
pop
faddp
xchg
add
stc
mov
cmp
sub
lahf
(bad)
push
cld
ror
xor
push
loope
fiadd
dec
push
inc
mov
in
push
movs
pop
or
xchg
mov
pop
jg
lds
(bad)
out
popf
leave
cmp
sub
dec
into
out
xor
push
cdq
stos
leave
outs
int3
mov
jp
aas
push
jge
jge
jno
sub
adc
push
sub
push
sub
aas
lods
dec
cmp
jp
inc
jp
out
hlt
div
in
jmp
cmp
xchg
lahf
mov
sahf
aaa
not
popf
cmps
or
sub
test
add
test
sar
dec
jb
lds
in
sub
jbe
idiv
icebp
push
cmc
xchg
ret
es
add
push
sub
jne
pop
sti
cdq
mov
sub
mov
push
or
adc
inc
pushf
dec
rcl
push
inc
mov
fisttp
add
jae
jns
mul
xchg
(bad)
jne
pop
mov
cmps
aam
mov
add
jl
mov
sub
and
mov
popa
loop
jmp
pop
adc
jae
jnp
adc
pusha
mov
outs
or
mov
mov
es
ss
test
in
xor
xor
or
xchg
xor
lods
inc
adc
adc
into
imul
gs
ror
dec
sbb
jb
lea
jne
adc
push
mov
shr
push
lahf
and
js
inc
sbb
gs
cwde
aam
out
jmp
or
out
add
test
sub
fimul
(bad)
jb
and
(bad)
out
nop
(bad)
fisttp
scas
cmp
inc
daa
or
test
jne
xor
cdq
push
sti
stc
shl
lds
movs
fnstenv
xchg
loopne
mov
push
(bad)
rol
inc
pop
fld
cs
sub
jmp
jge
xchg
add
or
loope
inc
xchg
and
xchg
es
mov
stos
inc
jmp
mov
push
jbe
jno
inc
mov
inc
lods
cmps
shl
enter
mov
cmp
jb
add
imul
sub
lds
xor
cmp
jmp
jae
jns
pop
or
adc
pop
and
mov
daa
nop
mov
mov
or
les
dec
cmps
out
cmp
vsqrtsd
das
and
daa
jnp
mov
sub
mov
jle
ficom
sub
push
frstor
dec
xlat
inc
fmul
mov
push
sbb
sahf
stos
adc
stos
das
dec
and
pop
in
bound
adc
dec
loopne
cmp
or
ret
dec
inc
(bad)
cwde
fisttp
(bad)
push
outs
jmp
imul
rol
cmp
mov
cmp
icebp
mov
sub
retf
pop
clc
(bad)
mov
pop
(bad)
mov
xor
imul
pop
mov
mov
icebp
add
push
fist
dec
or
out
inc
adc
sub
mov
in
int
into
aad
pop
push
sbb
es
retf
fadd
shl
test
mov
xor
fisubr
push
sbb
retf
fstp
sbb
pop
sbb
xchg
aad
or
adc
lods
mov
xchg
je
jp
push
cwde
jp
dec
sub
xchg
enter
adc
in
test
mov
cmp
mov
(bad)
jne
dec
test
add
sub
mov
pop
jns
dec
(bad)
repz
inc
ror
dec
icebp
mov
and
daa
outs
outs
fstp
inc
out
outs
pop
stos
fsub
fisttp
ss
daa
cmp
vcvtss2si
inc
adc
aas
(bad)
fild
push
iret
fdivrp
or
ret
sub
sbb
mov
js
xor
(bad)
call
jae
popa
and
xlat
popf
jne
mov
mov
and
or
nop
sub
jb
xchg
push
cmp
ds
test
test
pop
adc
xchg
sahf
cmc
xor
cmp
jl
mov
test
sar
add
jo
fcomp
jmp
scas
xor
xor
ror
fldcw
dec
pop
imul
fcmovnu
or
pusha
mov
or
sub
cmp
jl
mov
test
sbb
inc
and
xlat
or
sub
cmps
push
les
fldcw
adc
dec
and
loop
sbb
repnz
lods
and
sbb
sub
cmp
adc
fbstp
sti
push
or
and
lods
pop
out
add
and
xchg
repnz
in
sub
pop
xor
and
icebp
cmp
shl
mov
arpl
adc
(bad)
mov
pop
add
xchg
scas
in
pushf
inc
pop
out
adc
push
(bad)
jecxz
in
cmc
and
or
rcl
mov
adc
dec
jg
outs
stos
or
daa
jnp
int3
jp
dec
out
mov
sub
iret
addr16
mov
cmc
mov
mov
aam
jecxz
pop
xchg
cmp
aad
sbb
push
xchg
dec
and
out
fisttp
and
xchg
dec
aas
imul
cmc
je
jne
imul
shl
in
inc
sub
fsubr
int3
loope
(bad)
gs
repz
hlt
push
mov
inc
out
pop
push
rol
adc
sbb
sub
adc
push
retf
outs
sbb
out
fld
inc
(bad)
aam
mov
push
cmps
xchg
jl
xor
xlat
fucomi
repnz
and
jmp
icebp
shr
mov
sahf
mov
int3
dec
mov
xor
jb
aas
mov
cmp
dec
xchg
and
push
iret
sub
imul
fsubr
dec
sub
leave
add
pop
addr16
mov
rcr
push
int3
adc
adc
lock
retf
sti
std
and
in
fucomip
xchg
fidiv
hlt
out
add
pop
stos
mov
cmp
pop
pop
test
dec
arpl
mov
mov
or
mov
mov
pop
sbb
or
mov
push
aam
sbb
inc
or
jecxz
pop
in
pop
cmps
fs
stc
push
out
push
test
xchg
mov
(bad)
lock
cli
sub
xor
jns
fcomi
xchg
pusha
ds
jmp
daa
cmps
pop
stos
ins
mov
add
out
movs
mov
adc
cmps
(bad)
ret
mov
jg
ins
dec
and
cmps
sbb
add
mov
sar
mov
vpor
jne
das
jae
arpl
fist
cwde
push
cmp
add
fisub
das
mov
jmp
lds
mov
popf
sub
adc
sar
ins
mov
xchg
xchg
scas
sub
cmp
in
(bad)
pop
inc
(bad)
sti
jbe
adc
adc
iret
xor
pop
sub
xor
jecxz
jbe
push
repz
xor
shl
mov
je
rcr
call
add
pop
adc
adc
xchg
inc
pop
ror
std
or
loope
js
mov
cli
pop
push
inc
mov
pop
push
adc
pushf
and
ja
dec
sbb
push
nop
shr
jp
test
jecxz
iret
jo
(bad)
(bad)
test
stc
retf
pop
mov
sbb
lds
sbb
stc
mov
shl
xor
inc
and
and
daa
jnp
sub
movs
cmc
nop
sbb
xchg
pop
in
mov
push
jmp
jae
(bad)
mov
mov
jns
or
mov
inc
es
and
(bad)
push
ret
mov
outs
pop
out
mov
pop
inc
lock
pushf
adc
xor
outs
imul
repz
or
push
mov
cwde
(bad)
(bad)
and
iret
ds
in
fcomp
and
fild
lods
std
(bad)
repnz
pand
adc
ds
movs
cmp
div
repz
xchg
cmp
cmp
mov
sub
nop
fisubr
cs
mov
sbb
mov
movs
cmp
aas
pusha
call
retf
mov
jne
sub
push
lods
(bad)
lods
inc
xor
xor
cmps
es
add
shl
mov
test
imul
fisttp
dec
or
mov
cmp
mov
in
lock
in
push
int
push
and
or
popf
xchg
jne
shl
jge
sbb
inc
or
iret
add
or
push
jae
lods
xlat
mov
dec
call
dec
dec
mov
pop
mov
xor
sbb
pop
and
xchg
add
test
sahf
iret
out
push
pushf
pop
mov
int
sub
pop
bound
sbb
pusha
cmp
sub
cmp
imul
es
mov
in
adc
cmc
lock
push
fdiv
out
aam
jl
test
sub
pop
scas
iret
adc
fimul
mov
xchg
stos
call
sub
outs
cld
retf
ret
push
fst
in
enter
je
mov
xor
das
pop
sub
movs
imul
cmps
fwait
cmp
sbb
inc
cld
lods
xor
in
and
jnp
xchg
fsubr
push
pop
mov
loop
xchg
out
addr16
bound
ret
mov
cli
jne
test
clc
inc
jg
rcr
and
adc
scas
jno
fstp
xor
and
xchg
shr
xor
les
les
aam
mov
icebp
rol
and
inc
mov
mov
ja
es
xlat
inc
xor
adc
inc
int
add
mov
out
dec
int
push
retf
jno
add
mov
sti
dec
cs
mov
jg
push
push
aam
(bad)
lods
push
test
add
pop
xchg
in
cmps
pop
popa
popa
xchg
aaa
bound
jmp
cmp
outs
pop
or
mov
imul
addr16
shl
push
outs
bound
fimul
jo
xor
xchg
mov
imul
inc
clc
test
mov
xchg
imul
ret
lock
mov
inc
test
jnp
sub
or
sahf
enter
les
in
mov
dec
adc
pop
int
aad
inc
pop
push
mov
pop
mov
sbb
ror
sub
test
ins
dec
and
push
rcr
mov
jl
inc
mov
jns
ret
out
into
sbb
jns
adc
fidiv
jb
sbb
nop
ret
pop
ror
or
addr16
out
ret
jmp
in
adc
push
into
adc
sub
fisubr
(bad)
shl
add
pop
sub
in
jae
movs
(bad)
int
mov
inc
jg
das
daa
sbb
ds
sbb
sti
dec
jns
loopne
push
mov
out
mov
push
neg
jmp
test
fwait
or
sahf
scas
pop
mov
rcr
je
pop
mov
xchg
mov
xchg
vandps
pop
or
fimul
lea
pop
mov
mov
jl
bound
add
mov
mov
cld
xchg
jmp
shl
fisubr
ret
pusha
or
add
daa
mov
(bad)
xor
inc
cmps
int3
iret
inc
retf
or
and
or
retf
add
ficomp
or
gs
add
loope
sub
sub
dec
aaa
add
push
and
jecxz
sub
aad
test
lea
loopne
or
in
popaw
push
add
retf
cs
add
fcmovb
jl
test
push
call
inc
nop
data16
pop
pop
repz
aaa
dec
sbb
aam
in
and
sub
and
sub
fadd
sbb
mov
fisubr
rcr
das
pop
mov
test
fisub
mov
outs
mov
cmp
adc
test
cli
mov
(bad)
mov
jecxz
or
shl
mov
out
daa
data16
xchg
xor
pop
sbb
add
sub
stos
mov
jnp
inc
or
aam
fs
lock
iret
push
push
push
xchg
retf
cmp
mov
dec
cmp
xor
adc
test
arpl
imul
fst
movs
mov
addr16
neg
push
iret
adc
pop
inc
push
ret
and
adc
stos
and
add
xchg
les
test
sub
xchg
ss
and
jmp
arpl
cwde
xor
adc
push
inc
xchg
dec
push
jno
stos
cs
aas
(bad)
mov
add
pushf
sub
xchg
mov
mov
cmp
inc
mov
push
(bad)
mov
xchg
inc
lds
sbb
out
jl
outs
or
in
xchg
push
les
and
shr
jae
mov
mov
mov
repnz
xchg
jne
dec
or
(bad)
jge
jbe
and
push
aas
sub
cmp
sar
outs
or
mov
jae
cmp
pop
addr16
add
sub
adc
call
push
loope
movsx
jl
add
out
jmp
jo
xor
pop
mov
jl
adc
cmp
and
ss
int
pop
adc
pop
in
push
test
add
out
mov
pop
jnp
mov
or
or
sahf
es
stos
dec
bnd
xor
add
in
or
ret
cmp
and
cld
xchg
and
push
ret
mov
lds
xor
lods
imul
loope
or
lds
aad
xchg
adc
sahf
movs
cmp
dec
mov
ins
sbb
push
sub
push
mov
jne
aad
adc
cmp
mov
cld
dec
and
ds
sahf
mov
dec
mov
ret
adc
xchg
stc
test
dec
inc
adc
lahf
jmp
or
lahf
out
xchg
pop
div
push
cmp
push
and
xchg
scas
imul
pushf
sbb
loopne
int
xor
add
mov
add
popa
das
out
addr16
xor
and
popa
retf
lods
mov
ficom
popf
add
popa
inc
add
and
pushf
stos
pop
mov
cwde
jmp
(bad)
js
push
leave
div
adc
mov
or
retf
lahf
mov
ins
cmp
arpl
mov
push
pop
inc
in
mov
outs
lods
ja
mov
aas
call
adc
pop
(bad)
push
aad
js
add
shr
stc
loop
jp
xchg
push
in
sub
adc
add
mov
pop
xchg
xchg
out
scas
dec
jns
pop
xchg
sbb
je
shl
pop
pop
xchg
mov
mov
in
sbb
enter
jne
adc
xchg
mov
dec
in
push
pop
je
mov
and
cwde
jb
sbb
sub
rcl
stos
out
psllw
ja
imul
test
sub
push
lock
mov
sub
gs
ror
fnstsw
loope
inc
loopne
aaa
cli
push
mov
mov
sub
fldcw
cmps
cmp
push
mov
test
push
test
in
xchg
sub
xchg
cmp
ins
cmps
mov
(bad)
retf
xor
jg
sbb
push
push
in
fdiv
jmp
sub
fstp
in
in
jmp
mov
pop
adc
shr
and
jle
pop
aas
xchg
push
sbb
push
push
sbb
movs
mov
je
and
cmp
inc
mov
sbb
jb
dec
xlat
dec
push
pop
mov
mul
out
push
cmp
and
pop
ret
pusha
mov
push
dec
fstsw
clc
mov
mov
addr16
or
cli
xchg
pop
sbb
mov
or
(bad)
mov
rcl
mov
push
lahf
inc
loopne
aas
inc
mov
cmp
dec
movs
mov
les
push
inc
daa
adc
mov
sbb
sbb
inc
jae
xchg
sub
sub
or
jl
mov
mov
or
xchg
sub
lods
jge
jns
or
outs
pop
(bad)
(bad)
loop
jl
loope
movs
call
popf
pop
pop
push
in
loop
cli
cs
cmc
push
mov
leave
aam
leave
shr
mov
mov
mov
fbld
in
jmp
idiv
lahf
or
jnp
leave
mul
pushf
push
mov
popf
xchg
in
mov
(bad)
pop
mov
cmc
cmps
xchg
jb
pop
jmp
and
imul
or
add
jno
cmp
xlat
outs
in
nop
hlt
mov
in
int3
std
pop
hlt
inc
call
ss
xchg
sub
stos
push
shl
js
adc
inc
ins
(bad)
ins
test
jb
out
xchg
xchg
aaa
dec
add
ret
sub
scas
fwait
push
cdq
rcr
mov
or
adc
dec
cmps
sub
jae
cmp
ss
jmp
cmp
mov
mov
ficom
sub
in
jl
cwde
addr16
jle
adc
popa
scas
pop
cld
add
int3
popa
adc
(bad)
aam
hlt
and
int3
arpl
in
fadd
icebp
push
in
aaa
sub
mov
(bad)
std
test
push
xchg
pop
(bad)
dec
(bad)
or
rol
dec
add
adc
inc
push
hlt
in
jge
ror
push
cmp
retf
mov
mov
and
das
inc
(bad)
pop
pop
push
xor
fsubr
pop
sbb
enter
(bad)
lds
addr16
(bad)
les
mov
pcmpeqw
xor
bound
sbb
repnz
sti
add
je
repz
pop
repnz
push
pop
push
mov
add
xchg
ss
pop
sbb
cmp
push
int3
bt
sbb
and
adc
sub
mov
add
adc
inc
or
jl
pop
dec
xor
push
push
mov
dec
inc
adc
ins
xor
xchg
cmp
jo
(bad)
fadd
push
xchg
or
pop
mov
pop
mov
mov
inc
pop
lods
fidivr
cmp
or
sbb
nop
sahf
push
mov
fdivr
mov
jae
xor
sbb
push
sbb
pop
rol
(bad)
pop
mov
popa
imul
cmp
xor
pop
jg
es
sti
mov
movs
aas
xchg
mov
sbb
mov
into
mov
lds
add
fcmovu
cdq
push
cmp
frstor
test
sub
lds
lahf
fimul
inc
xchg
mov
out
or
dec
push
mov
adc
mov
jnp
inc
jl
xor
sbb
shl
fisttp
add
push
icebp
mov
out
inc
imul
mov
in
scas
cmps
sti
sbb
jg
movs
leave
stc
inc
mov
retf
mov
mov
ret
in
sub
call
(bad)
mov
fsubr
xor
jne
xlat
add
retf
mov
ins
inc
mov
xchg
mov
inc
jo
loop
adc
mov
and
pop
fs
push
cs
add
jne
cwde
outs
mov
jp
outs
imul
mov
cwde
in
dec
push
stc
or
push
pop
cmp
push
xchg
mov
(bad)
fwait
and
xor
jns
popa
jne
pop
cmp
idiv
xchg
ins
sbb
dec
(bad)
xchg
das
add
rol
out
or
in
push
lds
fs
xchg
arpl
into
mov
das
lea
outs
(bad)
cmp
(bad)
xor
test
jecxz
jno
sub
adc
test
sbb
push
out
xlat
movmskps
loop
out
out
jecxz
pop
enter
gs
pusha
sub
push
sub
and
inc
xor
loope
pushf
enter
inc
cwde
ret
mov
je
pop
in
jl
and
dec
ret
pop
shl
push
mov
outs
cmp
retf
dec
test
xor
ror
ret
and
xchg
push
inc
xchg
add
mov
dec
aas
jecxz
push
inc
lods
fs
mov
push
fsub
test
or
fidiv
lds
push
mov
sbb
mov
sub
rcl
mov
xor
lahf
js
(bad)
xchg
jns
loop
int3
or
xchg
mul
bound
sahf
loopne
fadd
hlt
test
test
dec
ror
pushf
mov
shr
call
adc
push
jle
int
dec
aad
and
mov
xor
jle
xor
add
cs
in
add
popf
adc
or
adc
jmp
mov
sub
ds
dec
jmp
or
adc
test
cmp
cdq
sahf
push
pusha
inc
ret
jb
icebp
xchg
retf
cmps
call
fwait
or
sbb
jge
and
scas
push
adc
xor
(bad)
ret
jns
add
imul
jmp
push
or
or
xchg
clc
pop
mov
pop
push
loop
and
scas
je
pop
sti
push
add
(bad)
sahf
test
and
rcl
js
lds
imul
or
xor
lds
mov
mov
xchg
dec
ret
cmp
repz
out
xchg
iret
push
cmc
(bad)
jnp
inc
mov
dec
imul
jns
test
adc
aaa
sysexit
push
xchg
jecxz
sbb
mov
enter
jmp
xchg
inc
rol
int
fwait
push
and
fistp
sub
xchg
xchg
aas
push
or
sub
adc
imul
not
jbe
clc
frstor
cli
push
jne
cmp
pop
mov
shl
xchg
adc
out
push
sbb
sbb
stos
sub
sbb
call
fwait
push
fcmovb
daa
sti
sbb
mov
and
fisttp
cld
add
or
js
arpl
std
add
cmp
push
inc
sub
cmp
mov
fcomp
mov
xor
mov
dec
sbb
adc
push
xor
out
cdq
add
xchg
shl
imul
iret
ror
popf
xchg
or
aaa
sar
and
push
push
sbb
lods
int
push
mov
mov
leave
add
stc
pop
mov
test
xchg
hlt
jbe
mov
leave
retf
or
scas
imul
aam
lods
push
sbb
lea
sbb
mov
dec
enter
push
fcomp
test
repz
out
movs
mov
mov
push
mov
and
jecxz
jp
popf
jno
test
jmp
repz
dec
jns
jo
sbb
mov
inc
sbb
and
add
stos
lods
imul
mov
cmps
retf
popa
xor
pop
fs
jmp
pop
adc
pop
js
jnp
fiadd
fxch
xor
cli
sbb
adc
std
jl
pop
or
sbb
push
xor
popf
shl
cli
or
test
cli
bound
push
jbe
fcom
pop
xchg
in
push
dec
ret
in
cld
pop
mov
mov
mov
stos
and
stos
ficomp
and
xchg
cmp
push
xor
jge
shl
mov
retf
ficom
jmp
or
cmp
clc
scas
push
mov
and
push
push
imul
lock
das
rcl
sbb
mov
cwde
fnsave
mov
mov
xchg
pop
aaa
pusha
cmp
idiv
(bad)
xor
loopne
daa
jle
push
fstp
adc
and
mov
fstp
lahf
dec
lock
ret
or
pop
gs
inc
fwait
sub
ja
cdq
ret
sub
loop
popf
pop
push
add
imul
fcom
xor
add
add
aas
ja
lods
es
or
es
pop
xchg
inc
clc
jns
das
sbb
and
cmp
ret
movs
inc
jp
icebp
pop
mov
and
and
push
arpl
inc
fdivr
fimul
aas
imul
xchg
std
movs
add
retf
cmps
les
arpl
int3
cmp
fnstcw
fidiv
imul
jmp
scas
mov
es
sub
out
mov
inc
in
aad
out
(bad)
jns
mov
pop
rol
mov
nop
push
std
fucomip
daa
jo
(bad)
pop
cmps
push
les
in
mov
pop
ins
inc
jecxz
dec
(bad)
bound
add
push
push
jmp
out
loope
rcl
aaa
into
push
popa
and
aaa
pop
adc
fstp
bound
add
xor
cdq
add
xchg
jp
mov
js
das
sbb
les
dec
jno
inc
adc
call
add
pop
dec
std
data16
jnp
lods
pop
sub
and
pop
gs
mov
adc
adc
retf
inc
inc
jl
mov
stos
in
cmps
dec
ret
aaa
pop
ins
enter
popf
pop
push
jo
pop
shl
lea
movs
clc
pop
mov
loopne
jb
add
push
jbe
jb
pop
and
sahf
pop
cmp
enter
adc
or
cmp
cs
or
daa
aad
cmp
cmp
mov
pop
cwde
push
jge
or
add
mov
push
repnz
jmp
inc
pop
pop
loopne
std
jecxz
and
push
and
(bad)
sub
jo
rcr
xchg
xchg
mov
ja
sub
mov
jg
and
cmp
mov
pop
mov
arpl
les
addr16
ja
inc
and
ins
mov
and
or
push
and
(bad)
repz
int3
inc
outs
lods
sti
test
pop
retf
aaa
and
jne
xchg
cwde
xchg
in
outs
mov
push
cmps
mov
arpl
frndint
out
push
popf
jle
cmp
sub
xlat
je
clc
ja
icebp
pop
clc
xlat
adc
xchg
ins
test
js
mov
inc
enter
mov
mov
sbb
xchg
adc
sub
sub
inc
adc
jbe
sbb
sub
cmp
loopne
dec
ficom
pop
or
jne
or
push
adc
jns
lea
push
es
jbe
push
ret
mov
div
jns
dec
js
jo
push
pop
inc
test
dec
jge
jno
outs
mov
pop
sahf
sbb
add
cmp
or
inc
xchg
test
and
sbb
sbb
adc
cmps
dec
aas
jge
out
arpl
lods
sahf
or
jae
rol
jge
mov
(bad)
fst
out
jle
push
add
mov
or
(bad)
xchg
ficom
and
mov
(bad)
pop
pop
ins
sbb
pop
xchg
pop
mov
xor
inc
adc
push
adc
jmp
std
cmp
fisttp
push
inc
or
ret
in
xchg
test
scas
push
xlat
add
cmc
jg
dec
adc
jb
ret
mov
inc
stc
retf
push
dec
loop
xchg
mov
movs
pop
dec
or
leave
in
js
pop
xlat
add
xor
and
inc
leave
inc
leave
adc
imul
xchg
call
test
enter
call
xchg
pop
sub
xchg
and
mov
imul
shl
test
neg
cmp
and
inc
lds
mov
out
xchg
sub
adc
or
mov
push
movs
scas
and
mov
mov
add
jp
movs
push
fidiv
sar
aad
pop
sub
fadd
dec
or
out
inc
(bad)
(bad)
mov
std
adc
xor
std
push
test
jmp
sbb
jl
(bad)
leave
fcmovb
dec
jmp
jae
sub
or
enter
ds
and
aas
sbb
and
and
xlat
sub
fstp
and
nop
mov
neg
outs
inc
push
mov
add
je
into
push
push
cmp
ret
jo
popf
mov
data16
xchg
xchg
in
mov
sbb
out
dec
dec
push
mov
gs
sub
push
into
and
leave
out
popa
mov
mov
ins
adc
ss
sahf
out
test
lahf
nop
mov
or
xor
stc
hlt
(bad)
into
data16
pop
mov
ret
jne
inc
add
mov
test
pop
jae
xor
jno
les
outs
les
scas
xchg
int
dec
ret
fmul
ins
jecxz
pop
data16
enter
sub
test
sti
stos
je
mov
jl
push
aad
add
call
jno
jl
mov
mov
movs
push
push
lahf
push
pop
aas
in
cmp
data16
arpl
call
(bad)
(bad)
jnp
adc
and
cli
mov
cwde
dec
xor
(bad)
xchg
outs
jg
sub
out
mov
icebp
inc
outs
retf
push
xchg
mov
(bad)
aad
mov
rcl
cmc
mov
ds
loope
sub
xchg
nop
mov
mov
inc
sti
sbb
pushf
aaa
cmp
popf
(bad)
dec
jl
inc
xor
(bad)
ins
jnp
(bad)
imul
xlat
icebp
push
ret
bnd
into
jge
jbe
movs
push
ret
cmps
fwait
ror
mov
fdiv
mov
push
or
or
rcr
inc
sbb
lock
dec
outs
jmp
dec
jno
mov
sub
enter
xlat
cmps
jns
lea
jbe
dec
in
xor
and
sub
das
inc
loope
stos
jmp
sahf
fwait
lods
shl
sbb
push
dec
or
hlt
inc
add
movs
sahf
mov
jecxz
push
mov
xchg
mov
clc
cs
mov
dec
mov
repnz
mov
inc
aam
mov
pop
ss
in
mov
fdiv
push
movs
add
sbb
push
xchg
or
xchg
cwde
pop
out
push
jo
cmp
fld
cmp
mov
mov
jo
jbe
jmp
mov
and
xor
mov
shl
sbb
adc
inc
jl
push
and
shr
es
(bad)
in
jae
sub
sqrtps
cwde
add
push
std
imul
int3
ret
pushf
mov
pop
xchg
xor
xor
ins
cwde
jg
and
out
in
xchg
std
push
push
popf
sahf
mov
cli
dec
push
scas
repz
inc
push
imul
dec
mov
xor
sbb
pop
adc
cs
push
pop
imul
dec
jp
(bad)
sbb
movs
mov
jecxz
out
xchg
mov
mov
movs
pop
mov
sbb
leave
scas
or
dec
pop
jle
xor
jo
icebp
sbb
pusha
dec
xchg
cmps
lea
jecxz
adc
or
xor
cmc
mov
dec
test
and
test
shl
dec
dec
into
adc
inc
adc
popf
ins
sti
cli
sbb
adc
cmp
sbb
mov
loope
loope
test
xchg
sbb
jns
daa
pushf
push
rcr
jne
mov
inc
ds
and
shl
xchg
mov
sbb
js
and
jb
jle
or
xchg
sub
xchg
dec
mov
sti
inc
push
sub
cld
add
jl
loope
hlt
fdivr
pop
sub
iret
inc
aam
out
xor
inc
push
outs
sbb
cs
out
call
enter
shrd
mov
sbb
stc
repz
xchg
cld
(bad)
lods
lods
mov
cld
das
arpl
jp
mov
jno
xchg
pushf
inc
sub
add
sbb
push
push
scas
add
popf
lods
movs
ficom
(bad)
xchg
dec
into
outs
retf
cli
loopne
dec
lea
cmc
inc
out
cmp
pop
mov
jbe
push
push
dec
popf
sub
call
xchg
add
(bad)
mov
inc
jmp
aas
enter
retf
imul
popf
repnz
pop
dec
iret
mov
cmp
mov
test
(bad)
repnz
cmc
jb
jo
sub
pop
and
mov
jl
(bad)
mov
or
push
sar
dec
inc
in
mul
in
movs
movs
inc
paddd
sub
jecxz
ret
and
ins
lods
imul
sbb
dec
jp
jmp
scas
pushf
(bad)
rcr
bound
pop
ss
lods
mov
retf
fs
inc
or
add
ror
test
les
shl
sub
push
inc
cmp
mov
(bad)
and
test
retf
leave
in
mov
dec
push
jne
xchg
adc
jno
xchg
xchg
fisubr
scas
sbb
fcomp
mov
xor
ficom
cmc
or
inc
or
pop
push
out
int3
icebp
push
jno
iret
lahf
sub
or
xor
sbb
lahf
sub
and
mov
mov
fidivr
pop
or
mov
xchg
xchg
inc
mov
or
loope
rcr
jnp
fnsave
test
jbe
or
lea
sub
cli
rcl
stos
adc
in
and
daa
sahf
jmp
inc
cld
test
hlt
pop
cmp
ret
and
xchg
xchg
sbb
out
push
xchg
jne
jecxz
stos
inc
inc
xchg
xchg
gs
out
jecxz
push
jl
jns
pop
pop
sar
ja
sbb
adc
pusha
mov
mov
sti
(bad)
xchg
js
xchg
outs
sub
bound
cli
or
pop
push
sbb
sub
jp
pop
imul
mov
mov
jmp
ret
xchg
aas
push
jae
adc
dec
mov
call
lahf
das
jnp
jns
jge
inc
mov
mov
arpl
call
or
mov
aas
dec
xor
cmps
cwde
pop
lahf
imul
mov
pop
cmp
xor
loop
jp
jo
xchg
lock
mov
cmp
jmp
mov
mov
dec
ficomp
rcl
stos
cli
test
xchg
out
sbb
and
xchg
jbe
pop
lds
mov
mov
sub
xor
push
loop
repz
test
mov
cmc
test
leave
inc
mov
xor
sbb
mov
retf
push
and
cmp
mov
mov
push
popa
cmp
push
adc
test
dec
pop
shl
xchg
daa
or
mov
sbb
xlat
add
sti
mov
fsubr
scas
adc
arpl
inc
jmp
js
or
sub
pop
sub
mov
leave
cmps
icebp
imul
shl
xchg
arpl
loope
fcmovnb
pop
jl
ins
dec
sbb
loop
dec
or
cmp
popa
xlat
xlat
movs
ins
daa
push
or
dec
dec
cli
jb
mov
cmp
xor
cmps
cld
test
inc
pushf
loope
sub
daa
in
shl
xchg
rcr
mov
xor
add
or
jmp
popa
pop
loop
jmp
cmp
out
aam
pop
and
mov
nop
dec
or
mov
imul
jp
mov
and
loop
or
(bad)
sub
das
bnd
and
jg
(bad)
jne
pop
sub
xor
cmc
cmps
mov
lods
mov
xchg
mov
out
fldenv
jo
pop
pop
es
or
push
out
dec
(bad)
mov
pusha
add
dec
ss
or
ds
add
sbb
cmps
inc
loope
fs
adc
ins
fs
pushf
cmp
aas
cmps
add
jmp
ror
in
stc
call
addr16
xlat
ja
fcomp
mov
test
stos
sub
loope
add
pop
dec
sbb
jae
cmc
lock
clc
sub
fs
fdivr
test
inc
jno
cmp
mov
sbb
or
mov
scas
ins
popf
dec
fdivr
xchg
shl
and
or
test
cdq
in
lea
sub
out
pop
repz
cdq
rcr
pop
sahf
jmp
xchg
add
mov
scas
dec
int3
fild
fwait
mov
imul
cmc
sub
hlt
jmp
mov
es
dec
shl
scas
jge
fmul
pop
movs
adc
inc
in
movs
cli
pop
inc
sub
pop
mov
push
inc
sub
cmp
hlt
cmc
xor
dec
and
pop
(bad)
shr
mov
push
arpl
int
push
sub
les
dec
mov
int
dec
adc
xor
not
int
stc
push
inc
or
xor
xor
push
div
dec
xchg
adc
xor
lods
adc
call
jb
imul
xor
push
jg
cmps
jne
inc
bound
fimul
ins
push
popf
dec
sbb
jge
retf
sbb
adc
iret
std
fwait
push
inc
lahf
jmp
xor
mov
neg
mov
rol
pop
mov
jne
pop
and
mul
outs
out
push
pop
popa
je
cmp
jmp
mov
fidivr
sbb
jmp
pop
cmps
push
mov
inc
stos
sub
xor
jo
cmps
pop
mov
std
or
leave
inc
inc
cmc
mov
aas
push
cdq
xchg
mov
icebp
jno
xchg
mov
add
imul
stc
pop
out
int
popa
pop
inc
fwait
mov
add
test
ja
ret
icebp
nop
push
xlat
data16
cmp
adc
add
loope
ss
enter
iret
adc
lods
sub
xchg
lahf
test
cdq
add
adc
mov
add
push
(bad)
fimul
fsub
mov
inc
gs
jbe
mov
xchg
sub
out
push
cs
dec
lods
loop
icebp
push
jae
push
xor
mov
nop
cdq
jno
bound
sbb
out
into
cmc
std
or
sub
mov
jmp
retf
jo
mov
ja
dec
mov
mov
js
pushf
gs
add
push
sbb
xor
sbb
or
xchg
cmps
cmps
fcom
mov
enter
adc
mov
cli
sub
or
push
jg
imul
push
(bad)
loop
cmp
fsub
jp
cmp
jb
sub
add
xor
sub
jae
pop
xchg
call
or
inc
sar
into
inc
sbb
add
push
xor
jp
movs
xchg
jae
jmp
and
and
adc
fidivr
test
fcom
or
scas
add
(bad)
mov
rcl
push
inc
mov
mov
nop
mov
out
sub
mov
test
mov
mov
pop
inc
in
dec
cmps
inc
pushf
sbb
mov
cs
mov
sub
rcl
rol
shl
or
push
js
js
imul
repz
(bad)
pop
cmp
(bad)
and
bound
jnp
jge
push
or
mov
pusha
adc
test
push
add
iret
rol
mov
jmp
aaa
nop
or
mov
adc
(bad)
mov
out
dec
rcl
cmp
imul
outs
sub
pop
mov
jnp
push
adc
aaa
rcr
add
pop
ins
and
inc
jl
adc
fisttp
xchg
push
shr
push
dec
dec
test
outs
ins
xlat
jecxz
pop
lods
xchg
and
pushw
cmps
mov
stos
ret
and
dec
xor
mov
out
sub
mov
shl
add
scas
out
cld
nop
clc
out
mov
icebp
cmps
cmp
loope
(bad)
jmp
(bad)
jbe
std
shl
and
call
jbe
rcr
leave
cmp
pop
sbb
mov
or
pop
xor
sar
jns
cmps
into
jmp
jb
out
xor
sbb
xor
push
xor
push
xchg
fld
lods
(bad)
cmps
lock
retf
cmps
mov
idiv
ja
es
lock
cmp
add
mov
lds
add
sar
jnp
jns
cmp
dec
and
jnp
jns
inc
mov
shr
fwait
inc
iret
in
push
jmp
shr
cli
dec
pop
sbb
in
shl
jo
and
cli
cmp
ins
nop
scas
lea
aaa
add
dec
xlat
mov
iret
sbb
mov
retf
cmc
call
and
sti
mov
sbb
xor
adc
cli
and
inc
jae
mov
mov
outs
out
xor
das
(bad)
es
add
xchg
gs
movsx
push
mov
dec
push
sub
pop
jne
mov
int3
xchg
aad
cli
adc
push
ret
jnp
iret
loope
fild
sti
xchg
rcr
add
in
ins
xlat
mov
jmp
mov
dec
xchg
adc
std
popa
push
push
in
cmps
or
add
aad
fsubr
lods
pop
loope
sbb
imul
jne
and
out
dec
mov
xchg
push
mov
adc
stos
call
into
sti
inc
sbb
mov
out
int3
out
sar
inc
ins
movs
scas
mov
inc
loopne
pop
enter
cld
xlat
ins
jge
ror
cmc
unpcklps
sub
gs
ror
pop
aad
cmp
inc
jbe
sub
in
sub
loop
iret
mov
or
in
xor
addr16
push
adc
and
mov
xchg
fiadd
jge
add
popf
dec
xor
enter
ret
or
mov
out
mov
mov
mov
icebp
jnp
pop
neg
fld
mov
mov
mov
addr16
fimul
pusha
std
stos
arpl
xor
push
(bad)
push
mov
and
mov
daa
mov
std
lds
test
xor
fucom
inc
sahf
sub
jbe
cdq
jmp
inc
repz
push
ror
push
call
xchg
xchg
pushf
in
mov
jp
out
inc
fimul
mov
daa
fs
pop
retf
and
scas
cmp
jb
add
jmp
pop
aam
cwde
iret
in
stc
jae
push
xor
movs
scas
and
sti
lds
xor
call
repz
inc
xchg
out
or
pop
jb
test
mov
int
lds
fild
cmp
xor
push
cmp
(bad)
mov
dec
add
int3
sahf
dec
add
xchg
call
xchg
bound
or
and
add
push
xchg
gs
cmp
or
(bad)
je
dec
(bad)
mov
ins
add
adc
test
loope
fwait
sub
add
cmp
aaa
push
fs
test
cmps
mov
(bad)
push
mov
fstp
repz
popa
xor
mov
ret
stc
pop
(bad)
cmps
das
les
cmp
xchg
push
and
fcmovb
dec
mov
sub
cmc
data16
sar
addr16
xchg
cmp
stc
stos
lock
ficomp
push
imul
mov
pop
mov
loop
and
icebp
dec
sub
jp
das
cmp
scas
fwait
sbb
and
cmp
call
inc
cmc
push
icebp
out
scas
cs
xchg
jnp
lods
or
jbe
xchg
xchg
jbe
lods
mov
lahf
jecxz
jle
test
in
dec
xchg
add
or
aad
pop
xchg
and
xchg
pop
stos
sub
fnstcw
adc
cmps
lods
mov
push
fdivr
lahf
gs
les
inc
gs
and
xchg
mov
sbb
adc
stos
ja
or
inc
int
or
cmps
pushf
dec
pop
push
cmps
mov
inc
jb
ins
adc
push
sub
mov
imul
add
mov
mov
retf
inc
xchg
stc
push
(bad)
call
jmp
and
dec
add
and
sub
cmp
stos
xchg
ret
adc
push
xchg
push
ds
and
jg
mov
fdiv
nop
pop
fbld
sbb
or
mov
pop
mov
mov
add
mov
push
dec
stos
xchg
push
or
pop
cmp
sbb
loope
sahf
fldenv
aad
sbb
mov
cli
inc
pushf
xchg
sahf
mov
cmp
add
and
pop
jg
jbe
jle
jns
dec
push
popa
jp
or
in
scas
sbb
psrlq
lods
outs
mov
adc
jmp
mov
push
mov
lahf
ret
mov
shl
fst
jns
jl
cmps
add
jbe
xor
movs
sbb
iret
push
mov
cmp
aaa
mov
jecxz
arpl
mov
and
jno
ins
push
ins
and
fucom
imul
lock
inc
fstp
xchg
xor
call
popa
arpl
cmps
pop
sbb
sub
push
adc
and
ins
mov
adc
pop
dec
sbb
cli
popa
push
inc
xchg
ret
rcr
es
xchg
ds
xchg
popa
pusha
jne
rcr
addr16
mov
pop
jns
(bad)
sti
jecxz
pop
xchg
sbb
icebp
rcl
jo
or
mov
pop
das
or
mov
movs
dec
(bad)
mov
adc
push
shl
sub
push
pop
or
mov
hlt
add
sbb
and
into
jecxz
xchg
jb
push
ret
lea
sub
mov
je
popa
push
aas
dec
cmp
pop
xor
test
arpl
dec
sbb
leave
xchg
ror
sub
sbb
xchg
test
dec
cld
sar
or
mov
loope
inc
outs
ins
mov
cmp
add
(bad)
mov
rcr
mov
xchg
mov
xor
xor
xchg
je
cmp
daa
pop
call
or
mov
or
pop
jbe
mov
in
xchg
xor
mov
retf
aaa
mov
add
ror
cmps
xchg
cwde
adc
and
sahf
bound
test
aas
aad
xor
inc
jbe
jne
cdq
movs
jno
icebp
mov
adc
and
sub
and
jnp
mov
cwde
enter
stc
inc
popa
std
cmp
jb
movs
bnd
xchg
sub
and
das
lock
add
cmp
out
std
nop
adc
rol
or
mov
add
xchg
pandn
out
(bad)
cs
push
pop
scas
retf
xchg
fistp
xchg
sub
scas
push
xchg
ds
sbb
rcl
call
sub
push
mov
inc
call
(bad)
and
mov
pop
fwait
cmp
cmp
sbb
mov
int
xchg
in
repnz
mov
stos
cli
mov
push
test
or
lods
pop
sbb
cwde
jle
or
pop
mov
dec
int
lahf
add
(bad)
push
repnz
jbe
mov
das
xchg
push
xchg
mov
jecxz
loopne
(bad)
mov
inc
ret
test
mov
in
mov
cmp
sar
call
fdivr
mov
sbb
lods
and
push
mov
mov
push
movs
cmps
dec
aam
loopne
scas
and
mov
add
dec
out
dec
adc
xor
sub
inc
mov
or
nop
mov
fdivr
ins
cmp
or
push
inc
and
les
adc
add
jo
scas
sbb
inc
push
xchg
js
cmp
mov
into
xchg
cmp
jmp
das
ja
mov
jp
fcmovne
or
jmp
inc
test
adc
mov
sbb
or
inc
int3
lock
fwait
pop
shr
mov
hlt
lea
shl
push
mov
push
pop
lods
pop
mov
xchg
pushf
popa
mov
ins
sbb
jbe
xchg
xchg
cli
fld
ja
jl
cmps
or
dec
jb
loope
xor
or
sar
test
add
cwde
dec
or
adc
lahf
lea
(bad)
fmul
call
out
push
lea
ret
ds
cli
shl
mov
(bad)
pop
jbe
bnd
push
cmp
cmp
ret
ret
pop
test
jmp
dec
enter
mov
dec
imul
cmp
jae
push
outs
jb
or
xchg
xchg
into
pop
sub
cmp
ficom
push
std
and
enter
and
push
stos
scas
cwde
xor
xor
inc
jle
jg
bnd
out
pushf
ret
nop
push
jecxz
popa
push
out
mov
gs
mov
(bad)
stc
hlt
jecxz
push
rcr
je
mov
sub
pop
lock
aaa
(bad)
stos
add
push
cmps
les
out
sar
mov
push
sti
cmp
lahf
(bad)
xor
lds
add
lds
ins
adc
fmulp
sub
mov
xchg
mov
ret
pop
mov
add
je
mov
sbb
retf
or
push
retf
pop
xchg
mov
es
push
loope
mov
dec
inc
movups
mov
shr
das
out
sub
popa
adc
addr16
adc
mov
sbb
bswap
xor
call
jmp
scas
stos
mov
jmp
test
mov
or
mov
push
mov
sbb
xchg
adc
mov
aad
ja
(bad)
sub
jp
xchg
call
imul
adc
cmp
shr
outs
jle
movs
(bad)
stc
mov
out
(bad)
dec
xchg
test
push
jmp
popf
cmc
mov
dec
push
pop
lods
pop
cwde
aaa
sbb
sub
or
and
(bad)
sub
popa
cld
(bad)
mov
dec
or
idiv
jnp
cmp
adc
mov
xor
sbb
ins
into
in
sub
sub
cli
xor
inc
cmp
and
push
push
or
daa
pop
inc
mov
adc
fdiv
ins
shl
and
jne
sbb
dec
sub
bound
fwait
inc
add
jmp
es
push
and
push
div
mov
in
mov
popa
or
popf
gs
scas
jne
jno
push
sub
fcomp
or
test
mov
xchg
push
adc
test
retf
in
ret
cmc
push
push
loop
xchg
sub
jge
call
xor
aas
loopne
out
mov
fcomp
movs
out
pop
loope
push
pop
adc
loop
xchg
pop
push
mov
(bad)
xchg
lea
or
add
jl
xchg
int3
test
inc
les
fst
je
mov
popa
xchg
mov
(bad)
pop
inc
in
mov
mov
mov
popf
dec
mov
mov
fsubr
push
mov
adc
aaa
adc
and
xlat
push
cs
call
push
push
mov
mov
dec
push
stos
inc
(bad)
hlt
out
(bad)
ficomp
mov
js
cmps
inc
shl
mov
aaa
std
jecxz
adc
jne
(bad)
ffreep
xchg
lea
adc
daa
and
sub
dec
dec
scas
push
scas
aad
pop
inc
inc
mov
mov
dec
mov
jb
imul
or
push
aas
ins
adc
mov
mov
or
or
popa
data16
and
fidivr
dec
fiadd
or
icebp
or
stos
imul
nop
add
and
dec
test
mov
xchg
test
jo
loopne
pop
or
jmp
aad
mov
jp
push
sbb
scas
fwait
xlat
lea
iret
push
push
popf
inc
mov
mov
fiadd
sbb
adc
fisttp
mov
jns
mov
loop
rcr
fild
dec
fstp
jge
sub
loop
in
call
xchg
jecxz
je
pop
cwde
pop
xor
mov
daa
add
mov
or
(bad)
push
clc
xor
outs
sub
shl
call
pop
scas
mov
cmc
cmps
(bad)
cmp
pop
mov
fs
dec
pop
push
xchg
test
pop
jmp
mov
gs
std
or
adc
mov
pop
jp
add
or
inc
push
loopne
aam
pop
jnp
call
push
mov
adc
out
xchg
frstor
sahf
into
jmp
js
mov
xlat
addr16
ds
push
mov
inc
call
xchg
fistp
and
test
pop
(bad)
mov
(bad)
ss
mov
push
retf
into
data16
cli
adc
or
ffreep
mov
aaa
mov
repz
into
repnz
call
mov
into
sbb
sti
and
add
(bad)
sub
stc
repnz
push
sar
test
mov
fisubr
adc
dec
test
jae
lods
fild
sub
and
cmps
add
ret
adc
es
sbb
movs
icebp
xor
push
cmp
dec
sub
lahf
dec
adc
mov
(bad)
ret
adc
ss
sbb
cmp
push
cli
daa
jnp
jo
pop
and
std
dec
push
imul
cmp
dec
xchg
jbe
mov
ficom
hlt
sti
jnp
clc
pop
and
aad
or
loopne
xor
fs
jp
pop
les
das
repz
jae
push
clc
sbb
dec
jns
push
mov
in
xchg
es
and
pusha
sbb
xchg
sbb
sbb
add
or
mov
push
cli
cmc
mov
cli
xor
mov
scas
stos
add
sub
repnz
rcl
mov
inc
mov
xor
lods
mov
adc
fwait
dec
std
cs
mov
mov
sbb
lods
pop
aad
mov
loopne
sbb
mov
add
add
push
xchg
out
(bad)
and
imul
adc
lods
dec
jecxz
mov
cwde
aaa
pop
and
(bad)
loope
cli
xor
mov
lods
popa
and
inc
(bad)
mov
out
(bad)
cmc
ds
xor
adc
inc
sbb
rol
sub
and
mov
or
test
or
(bad)
xlat
out
(bad)
cwde
or
jno
cmp
test
cmps
mov
cwde
sbb
adc
mov
dec
jp
mov
out
shr
jle
xchg
int3
xor
rol
clc
pop
test
xchg
test
std
jg
jmp
cs
gs
mov
push
(bad)
sahf
jmp
mov
rcr
das
movs
out
sub
cmp
scas
out
aam
call
lahf
int3
lea
fdivr
and
pop
sub
das
daa
cmp
mov
push
push
test
xchg
cli
pop
test
ins
push
jmp
mov
call
push
data16
push
retf
mov
jnp
in
dec
iret
and
add
ja
shl
and
jge
lea
les
(bad)
xchg
xor
mov
outs
cld
adc
sbb
and
test
add
loope
popa
pop
inc
dec
addr16
mov
loope
mov
cmp
in
nop
adc
icebp
pop
jge
mov
ja
pop
mov
outs
ret
xchg
call
mov
(bad)
in
jae
mov
test
cmp
push
test
mov
mov
test
dec
mov
jae
gs
dec
lods
push
rcl
lahf
jmp
cmp
push
or
test
int
sbb
inc
cli
jno
aaa
or
es
xor
jge
shr
shl
out
scas
movs
push
or
mov
adc
dec
(bad)
xor
pop
imul
jl
lock
stc
cld
stos
push
jb
push
stc
inc
and
mov
out
adc
xchg
and
(bad)
movs
out
cmp
jo
push
pushf
mov
sbb
jl
retf
mov
loop
and
loopne
inc
jmp
cmp
mov
add
aad
maxps
mov
outs
cld
push
push
fidiv
stc
retfw
mov
out
cmp
add
push
cs
repz
dec
sub
mov
pop
test
das
into
repz
fwait
sub
mov
xchg
pop
sti
je
cmp
cmp
cmp
sub
cvttps2pi
int3
in
fs
in
in
push
push
xor
icebp
or
retf
rol
pushf
mov
jno
xor
sti
outs
adc
retf
xchg
adc
xchg
sub
pop
clc
pusha
das
jbe
push
outs
pop
shr
adc
add
fisubr
and
dec
into
cwde
xchg
sbb
mov
fldenv
mov
loope
js
ins
cmp
jb
fdiv
sub
mov
aaa
out
pop
sbb
dec
in
push
(bad)
out
es
mov
(bad)
fidivr
and
mov
das
cwde
into
xor
fimul
push
xor
ucomiss
int3
dec
out
mov
lds
xchg
jle
cmps
int3
and
pusha
aam
hlt
(bad)
push
add
inc
jmp
stc
scas
hlt
or
xchg
inc
pop
lea
inc
lods
icebp
or
push
fmulp
adc
push
loopne
pop
mov
sahf
sbb
ret
add
sbb
jmp
daa
mov
ds
retf
sub
cdq
cmp
push
mov
xchg
in
adc
or
loop
or
push
int3
lods
and
jmp
jno
fsubr
push
mov
mov
add
cdq
mov
or
mul
pop
test
or
je
jne
dec
push
mov
and
nop
ins
push
lahf
pop
jp
test
movs
xor
ret
pop
(bad)
test
iret
inc
sub
fs
pusha
and
lods
iret
xchg
or
mov
enter
sbb
push
xor
xor
lds
movs
sar
fisub
loope
adc
adc
loopne
fwait
mov
fisttp
and
sahf
add
hlt
push
or
mov
or
repz
adc
mov
aaa
xchg
lahf
bound
(bad)
cmp
fsub
xlat
(bad)
fldcw
sub
mov
sbb
loop
loope
js
xor
js
in
cmc
sub
push
mov
push
rol
push
ss
xor
xchg
or
rcr
nop
retf
js
std
pusha
ja
xor
aam
pop
shr
lahf
call
aas
jae
push
sub
dec
in
and
repz
in
fisubr
jl
add
xchg
in
(bad)
dec
cmp
aad
and
aad
test
jns
out
fcomp
ficom
xchg
not
cmp
mov
or
mov
popf
lods
push
repnz
fs
dec
out
add
or
mov
fld
adc
fstp
fs
jno
inc
or
shl
fs
mov
daa
adc
cmp
xchg
(bad)
sub
mov
cmp
cmp
inc
fidiv
cmp
and
(bad)
xchg
dec
jnp
pusha
retf
cli
push
or
pushf
fld
mov
fnstsw
sti
aam
xor
push
test
sub
xchg
push
xor
lds
cli
and
ins
je
mov
js
sub
gs
inc
shl
rcl
sbb
lds
clc
out
add
pop
pop
pop
nop
sbb
ins
test
mov
test
test
jp
pop
cmp
cmps
pushf
in
lea
les
pop
mov
adc
js
dec
cmps
repz
sub
sbb
enter
push
inc
lods
mov
push
dec
xchg
in
inc
adc
cmps
mov
jmp
les
jmp
sbb
fbld
(bad)
sbb
sbb
in
push
dec
stos
add
sti
or
mov
adc
xchg
push
push
or
cmps
xor
mov
push
mov
aaa
add
or
mov
xchg
inc
jle
mov
lock
mov
sub
push
adc
mov
and
iret
add
jo
push
jle
xlat
adc
xor
in
ins
rcr
push
cdq
call
push
dec
push
scas
cmp
dec
out
jmp
cmps
lds
das
in
ins
repnz
sub
rol
mov
dec
mov
je
stc
xchg
fnstenv
leave
inc
hlt
nop
js
mov
js
enter
xor
cdq
mov
xlat
mov
mov
jbe
fwait
ret
and
sub
xchg
mov
loope
cmc
add
pop
hlt
inc
jno
test
push
div
cmp
ins
push
jne
sbb
clc
sub
push
repnz
push
jge
test
xor
mov
call
out
int
and
sbb
sbb
add
cmovns
add
nop
jbe
mov
mov
xor
fldcw
pop
repnz
in
fs
xor
pushf
test
jl
(bad)
dec
dec
cli
push
adc
cli
out
push
jmp
xchg
push
mov
std
sbb
jmp
jns
mov
dec
pop
fcmovbe
or
and
repz
stos
js
lea
push
leave
cdq
sbb
mov
adc
out
cld
mov
das
fcmovb
jl
and
adc
iret
pop
scas
xchg
sbb
adc
and
loopne
in
shl
mov
mov
out
push
out
pop
daa
mov
or
mov
dec
aad
cmp
aam
movs
pop
lahf
sbb
xchg
rcr
std
mov
mov
retf
pop
sbb
pop
jmp
dec
inc
call
push
push
xchg
mov
mov
scas
push
and
push
in
xor
mov
ficom
call
dec
mov
mov
aaa
into
xor
test
jo
mov
ds
(bad)
cmc
xor
ret
call
mov
or
test
movs
test
inc
mov
sub
or
leave
inc
adc
mov
test
jbe
push
je
(bad)
call
sbb
js
test
inc
lahf
xchg
inc
jae
inc
or
adc
test
fcomi
mov
or
jg
mov
mov
pinsrw
dec
(bad)
test
ret
sbb
mov
dec
movs
out
mov
cmps
inc
into
fild
cmp
mov
fbld
out
aad
les
mov
cmp
and
mov
repz
outs
pop
mov
adc
(bad)
or
inc
inc
movs
and
push
arpl
pop
int3
in
mov
pop
push
icebp
jne
sub
adc
outs
cmc
inc
add
(bad)
push
out
jmp
call
and
inc
push
std
lea
jmp
cmc
bswap
adc
jo
push
aad
retf
test
out
pop
dec
mov
jo
test
add
jge
retf
add
dec
popa
jge
pop
in
fisttp
movs
and
enter
xchg
jno
rol
and
sti
outs
xchg
scas
xor
pop
call
dec
sub
inc
mov
aaa
pop
push
int3
rcr
and
fcos
sahf
adc
(bad)
fs
jle
xchg
pusha
mov
mov
dec
aas
nop
das
pop
cmps
imul
jmp
hlt
scas
or
or
dec
xor
fs
rol
pop
jns
(bad)
adc
dec
mov
dec
cmp
bound
loop
test
mov
adc
icebp
cmps
cwde
mov
cmp
mov
mov
movs
mov
sub
daa
cli
loop
and
pop
jbe
bound
sbb
aad
jp
dec
sbb
jl
add
pop
aas
int3
xchg
addr16
push
add
inc
loop
fucomip
rol
add
outs
sub
popf
pusha
mov
cdq
mov
add
pop
and
push
rcr
sbb
loop
and
jo
lea
mov
ins
xchg
adc
stos
push
sub
xchg
jmp
cwde
and
(bad)
jne
push
sub
js
inc
cmc
cmp
fistp
es
mov
cmp
jno
xchg
loop
or
adc
js
in
jb
push
adc
mov
dec
mov
mov
jno
pop
dec
mov
in
cmp
jb
pop
and
out
adc
scas
jnp
into
mov
inc
lods
jmp
(bad)
xor
out
or
mov
test
pop
dec
(bad)
ret
icebp
cmp
fnstsw
push
jne
stc
loop
mov
lods
loope
ja
adc
mov
movs
add
imul
in
and
fsub
mov
rcl
mov
inc
pop
vpsrlq
mov
push
dec
adc
xor
xchg
rcr
dec
push
(bad)
mov
(bad)
ja
sbb
mov
xor
div
cwde
(bad)
add
mov
jmp
or
lods
cs
outs
mov
sbb
mov
push
stos
push
mov
inc
cwde
cdq
clc
aaa
bnd
cmps
inc
mov
add
jo
dec
adc
dec
or
sahf
nop
adc
stos
pop
outs
mov
jne
inc
(bad)
or
dec
cmp
mov
ds
jmp
push
pop
in
sub
or
mov
mov
inc
jmp
ins
test
cli
dec
pop
pop
ret
sub
ds
pop
or
aad
pop
dec
push
fistp
gs
push
mov
push
push
cmp
outs
fistp
mov
push
mov
sub
ins
jle
inc
ret
mov
loope
dec
mov
call
outs
sub
rol
lods
jp
data16
inc
iret
popa
lahf
pop
dec
rcr
fs
pop
push
add
jno
sti
movups
(bad)
popa
xor
xor
add
cmp
jmp
popa
(bad)
cmp
adc
(bad)
fld
pop
sub
jbe
jb
je
test
arpl
or
adc
pop
retf
div
jp
and
jl
iret
dec
xchg
pop
dec
dec
adc
cwde
std
sub
in
aaa
stos
mov
push
in
jge
add
repz
adc
or
mov
mov
cli
fadd
adc
stc
jp
sbb
adc
pop
arpl
pop
leave
mov
in
xchg
addr16
jno
fcmovnbe
loop
ficomp
push
dec
dec
mov
and
or
mov
pop
pop
fadd
inc
js
adc
call
push
and
and
mov
xlat
sbb
pandn
clc
sub
outs
cld
add
call
pop
or
xor
xchg
fidivr
mov
out
sub
pop
and
sbb
cmp
dec
cld
push
cmc
loope
aad
push
push
rol
sub
fdiv
loop
call
sub
mov
jge
lods
cmp
stos
cli
jecxz
movs
loopne
jnp
and
push
mov
sbb
rol
jl
pop
xor
cmp
push
cmc
popa
mov
and
rcr
out
in
fmul
ror
pop
pop
mov
pop
jb
adc
cld
imul
inc
mov
jae
pop
pop
pusha
mov
pop
ret
inc
ret
fdivr
add
aad
mov
in
xchg
(bad)
shl
jne
fs
hlt
fisttp
ret
mov
and
jo
jae
mov
cmp
fsub
stos
fimul
push
pop
sbb
pop
jne
aam
aaa
lds
(bad)
inc
rcr
or
xchg
(bad)
daa
jns
mov
fadd
int3
xor
sub
mov
es
jle
iret
ret
jp
dec
mov
adc
jns
inc
push
cmp
popa
es
xor
popf
add
rcr
mov
cmps
xchg
enter
js
nop
push
sbb
in
dec
cld
add
retf
jnp
gs
inc
mov
fs
add
and
inc
mov
aas
in
mov
pushf
cli
xor
add
mov
or
jnp
cmp
pop
or
and
adc
out
mov
fistp
neg
lods
in
outs
dec
cmps
and
xchg
cmps
test
and
push
or
jo
cmp
xor
and
nop
pop
dec
xchg
inc
shl
int
push
and
in
mov
or
rcl
pop
aaa
mov
sub
movsx
push
je
pushf
sbb
cmps
mov
xor
push
add
sub
dec
xlat
mov
ss
xchg
dec
mov
and
addr16
out
lahf
jmp
retf
sbb
out
mov
fsub
adc
xchg
xlat
ins
jle
int
not
ror
lods
inc
push
cdq
inc
test
inc
push
push
adc
add
stos
push
push
rcl
pop
cmps
je
xor
jl
fbld
push
add
loopne
lods
scas
(bad)
push
adc
test
popf
ins
cmp
jns
xchg
adc
adc
ds
xor
push
movs
std
add
xchg
or
jb
xchg
and
js
fidiv
lds
or
jp
xchg
test
sbb
sti
icebp
inc
fadd
xor
sahf
pop
stos
loopne
out
and
pop
sub
mov
lods
add
mov
push
mov
cmp
mov
ins
push
push
test
lea
mov
cmp
jnp
inc
ins
or
jmp
(bad)
xlat
pop
or
loop
or
cli
add
jp
fwait
stc
push
push
cli
jp
or
test
not
dec
enter
mul
mov
xor
into
pushf
jbe
clc
lods
jbe
ret
lock
mov
jge
or
in
cmp
pop
repnz
sub
or
cmp
jp
jbe
xchg
outs
mov
jnp
or
stc
pushf
xor
adc
mov
jmp
fyl2x
fucomi
js
adc
inc
arpl
sub
loope
inc
ja
xor
out
sbb
jl
call
retf
and
jae
mov
mov
lock
test
test
(bad)
jae
imul
sbb
push
(bad)
not
pop
mov
mov
mov
mov
xchg
call
cmc
rep
push
mov
mov
mov
cwde
xchg
ins
imul
jno
jne
test
outs
repz
aam
popa
movs
pop
cmc
xchg
mov
pop
fs
xchg
push
push
int3
cmp
pop
iret
adc
sbb
jmp
dec
mov
imul
push
leave
ss
idiv
add
or
cmps
int
in
xor
dec
hlt
push
or
and
popf
and
dec
pop
xor
add
ins
(bad)
popa
adc
xchg
dec
ins
mov
rcl
or
add
outs
data16
or
add
idiv
sub
aaa
mov
iret
fcmovnu
out
mov
rcr
out
add
jmp
cld
shr
adc
les
or
movs
inc
cmp
sub
push
xor
inc
xor
cwde
dec
scas
ret
inc
sbb
mov
push
rcr
lods
out
jns
mov
pop
sbb
mov
loop
mov
mov
fdivr
mov
cmp
pushf
in
pop
sbb
jb
add
sbb
mov
(bad)
adc
lds
outs
push
test
or
inc
mov
outs
inc
mul
cmp
pop
xor
out
(bad)
xchg
mov
fdiv
call
(bad)
sub
mov
jbe
dec
xor
mov
add
repnz
xlat
cmp
sbb
call
mov
je
mov
xchg
or
je
mov
push
xor
into
ss
(bad)
loop
popf
mov
jbe
sbb
pop
or
sub
ret
in
sbb
mov
lahf
jmp
sbb
leave
inc
cmps
aad
add
adc
ret
mov
ror
das
cmp
add
mov
push
cmps
add
outs
or
push
test
mov
jno
or
(bad)
movs
in
aas
in
sub
dec
mov
mov
cmps
xchg
inc
mov
sub
mov
xlat
arpl
scas
jl
pop
pop
test
sub
sub
call
push
cmp
ds
shr
or
add
jnp
(bad)
addr16
push
ficomp
sbb
sub
cmc
pop
fbld
pop
xor
push
add
imul
dec
bound
jne
pop
xor
dec
in
imul
iret
pushf
es
add
loope
mov
xchg
push
push
pop
add
outs
out
add
inc
sahf
mov
sbb
mov
cmp
pop
rcr
dec
mov
add
jl
adc
cli
mov
sbb
cli
add
cmp
adc
cmp
fdiv
push
jbe
ds
sbb
pop
std
xor
adc
(bad)
mov
(bad)
adc
add
in
in
dec
mov
xchg
xor
movs
into
sti
mov
pop
lods
(bad)
call
test
sub
sahf
mov
popf
and
jbe
popf
jge
movs
les
xchg
rcr
mov
iret
and
addr16
sahf
mov
sub
pop
xor
mov
(bad)
clc
add
rol
adc
pop
test
ret
das
push
mov
or
mov
aas
mov
adc
inc
sbb
hlt
scas
pushf
jl
mov
mov
inc
cmps
inc
in
mov
pop
cmp
add
push
adc
push
push
call
inc
rcl
and
dec
adc
call
imul
std
scas
fimul
inc
or
mov
cmp
repz
fidiv
lods
or
dec
fstp
std
inc
and
adc
pop
retf
xchg
ret
sbb
mov
xlat
mov
pop
(bad)
imul
pop
repnz
adc
lea
pop
xchg
sbb
push
or
mov
jp
es
cmps
inc
adc
pop
lds
call
mov
xlat
or
xchg
dec
out
das
test
push
fwait
cwde
popa
and
mov
call
xchg
dec
jnp
fbstp
or
in
(bad)
loope
test
jl
es
wrmsr
stos
mov
push
and
sti
jecxz
(bad)
sub
dec
shl
dec
pop
xor
mov
or
(bad)
xchg
mov
outs
inc
inc
jp
jmp
ret
ja
dec
push
lea
dec
inc
fisub
lds
mov
adc
out
mov
retf
mov
sbb
mov
xchg
(bad)
icebp
fadd
dec
add
pop
inc
movs
pop
adc
adc
dec
pop
aas
mov
enter
lds
adc
sar
in
lods
fsubrp
fsub
rol
mov
ret
mov
xor
pop
in
xor
cwde
push
(bad)
mov
xchg
push
push
iret
int
enter
mov
pop
in
movs
pop
mov
repnz
stc
adc
imul
out
ret
or
dec
xchg
jbe
jp
dec
and
ins
arpl
repz
cmp
fild
xor
dec
cmps
sub
sub
pop
pop
shl
mov
jge
mov
mov
std
arpl
std
leave
adc
mov
sbb
aas
int3
jns
add
stos
popf
and
sbb
out
lods
shl
push
lds
call
test
icebp
push
pop
ror
cs
iret
sub
mov
xchg
and
rcr
stc
dec
xchg
pop
icebp
sti
sub
mov
test
mov
bound
push
ja
in
shl
in
fdiv
shr
(bad)
sub
int3
inc
push
gs
cmp
ss
mov
xor
outs
inc
fild
xor
mov
das
mov
rcr
out
dec
push
mov
jae
mov
push
xor
jbe
in
pop
jno
loope
test
pusha
add
xchg
push
ret
jecxz
sti
clc
lods
clc
popa
sub
jl
sbb
ja
xor
aas
add
scas
mov
push
adc
xchg
jl
jge
loope
add
mov
adc
div
xor
push
mov
mov
adc
jge
arpl
(bad)
pop
pop
ds
in
mov
mov
cli
mov
mov
xor
xor
pop
sub
fwait
(bad)
ficom
lds
cmp
mov
add
(bad)
mov
inc
push
inc
stc
inc
or
jns
std
test
ins
xchg
mov
and
pop
sub
jb
xchg
jae
inc
and
ds
rcr
jl
movs
jno
stos
das
xchg
dec
jno
xor
jnp
shr
out
push
cli
fnstenv
or
enter
sti
lea
mov
mov
ins
sbb
sar
enter
add
mov
jns
push
push
loope
fldl2e
jle
(bad)
in
sbb
aas
dec
push
lds
fcomp
sti
adc
jmp
fsubrp
push
into
sti
sar
popa
dec
jecxz
icebp
sub
mov
jnp
sub
mul
popf
(bad)
(bad)
jb
xor
mov
adc
xchg
mov
fdiv
sbb
mov
bound
jp
or
cld
in
call
jmp
bound
dec
mov
popa
and
(bad)
and
cli
scas
mov
pop
or
cmp
pop
rol
xchg
jo
js
cmps
xor
jle
retf
out
loopne
mul
pop
fisttp
sub
pop
adc
int3
jge
mov
fxam
lock
pop
fcmovnu
xor
sub
sbb
or
sbb
or
enter
imul
loopne
icebp
xchg
popf
xchg
dec
mov
inc
add
jge
mov
add
push
or
and
cs
dec
sbb
aad
sub
imul
sub
into
lods
jno
outs
outs
xchg
sahf
sbb
int3
inc
adc
pop
push
push
stos
inc
xchg
mov
cmp
pop
sub
xor
mov
cli
stos
(bad)
xchg
shr
addr16
shl
sti
dec
pop
cs
xchg
aam
pop
mov
ja
cli
call
adc
fbstp
cmp
jecxz
cmps
retf
and
cli
mov
cli
cs
sbb
mov
jg
xor
inc
inc
dec
es
mov
jb
xor
retf
xchg
mov
mov
(bad)
popf
lea
int
inc
lock
aad
mov
not
mov
xor
sti
mov
mov
jnp
cdq
add
ins
mov
dec
push
mov
and
xor
pop
adc
jns
xor
aaa
jb
iret
sub
jecxz
pushf
mov
call
mov
jne
lods
mov
cwde
hlt
mov
adc
lds
dec
enter
mov
dec
scas
inc
ror
scas
inc
(bad)
pop
gs
es
or
data16
pop
adc
pop
test
or
xchg
sub
addr16
xchg
repnz
inc
ja
mov
xor
call
jmp
sub
push
call
fwait
in
aam
lock
xchg
cmps
aaa
ret
ret
in
scas
xchg
gs
push
push
xchg
stos
or
cld
in
mov
loopne
inc
inc
add
push
in
jle
xor
sbb
inc
popf
xor
fisubr
or
fist
xchg
pushf
stc
pop
cli
or
shl
or
ss
test
jnp
jae
scas
dec
cld
cs
or
mov
ja
or
ret
jns
gs
push
xor
inc
cdq
hlt
idiv
lods
xchg
jbe
jp
mov
cmp
sbb
(bad)
dec
test
bswap
data16
and
jno
pop
jecxz
scas
and
(bad)
mov
imul
dec
mov
sti
mov
mov
add
arpl
popf
pushf
add
pop
or
push
sbb
jg
mov
lahf
(bad)
rol
retf
jmp
mov
cmp
sbb
mov
or
add
sbb
push
pop
xchg
inc
jne
jmp
jecxz
mov
cmps
test
das
loopne
shr
inc
call
jp
pop
sahf
mov
mov
cmc
pop
imul
push
(bad)
adc
(bad)
stos
cmps
out
adc
test
mov
cmp
mov
inc
fcomp
imul
mov
cli
(bad)
std
mov
test
ss
push
loopne
fisub
jge
jb
xchg
and
sbb
xor
in
lock
lahf
or
jp
push
aaa
lea
jne
push
stc
adc
test
add
lock
(bad)
pop
ja
pop
cmps
and
aaa
pop
and
push
push
adc
inc
sbb
push
pop
and
fidiv
lds
inc
sar
mov
test
out
imul
xor
jp
stos
cmp
das
inc
scas
jmp
aaa
loopne
push
pop
cmp
bound
cld
or
and
gs
clc
in
and
mov
dec
popa
arpl
js
test
jb
test
lods
std
jno
add
pop
push
stos
cmps
pop
push
(bad)
es
pop
cmps
dec
cwde
cmp
call
sub
ss
arpl
add
xor
xchg
cwde
fs
xchg
fcomi
das
rcl
fld
sub
push
into
dec
(bad)
lods
xchg
loopne
(bad)
jb
test
and
test
aaa
cmp
stos
mov
sub
jmp
repnz
clc
call
or
neg
loope
call
dec
xchg
ror
xchg
add
or
cmp
not
jmp
in
loopne
xchg
cld
pop
ja
jae
pusha
leave
push
jg
xor
inc
loopne
adc
push
sbb
cmp
iret
mov
repnz
fnstenv
push
popf
in
dec
or
mov
mov
imul
mov
imul
stos
lock
(bad)
xor
cmp
jno
mov
mov
jno
leave
adc
push
call
imul
dec
popf
xchg
fwait
and
pop
or
(bad)
lods
jge
jg
addr16
dec
mov
dec
div
sbb
aam
imul
(bad)
adc
dec
sbb
push
mov
jecxz
inc
jnp
std
scas
into
out
pop
sub
arpl
imul
(bad)
(bad)
adc
push
cmp
(bad)
in
(bad)
adc
rcl
scas
cmp
lods
pop
and
inc
inc
gs
inc
lahf
ret
lahf
push
adc
fisub
push
movs
int3
out
hlt
pop
inc
add
mov
leave
into
sub
ret
dec
sbb
and
cmp
pop
and
xor
fs
and
loop
pusha
jmp
pushf
ret
push
cld
cmp
(bad)
xchg
iret
push
loopne
pop
or
pop
xchg
sub
nop
out
adc
and
mov
jp
mov
pop
and
nop
mov
and
aas
pop
(bad)
shr
(bad)
mov
imul
popa
fwait
cmps
iret
cli
push
lods
test
inc
jmp
add
test
iret
and
or
iret
xor
and
fcom
adc
sub
mov
pop
aaa
call
jbe
push
jbe
adc
fiadd
xor
add
push
dec
mov
cmp
sub
dec
daa
mov
mov
in
repz
push
sbb
mov
aad
int
jmp
add
inc
push
xor
mov
and
fcomi
cmps
aad
jbe
inc
rcr
or
cmp
stos
and
hlt
cmps
ins
push
mov
fsubp
(bad)
fisub
hlt
xchg
fstp
adc
fs
repz
adc
cmc
or
lods
cld
dec
shl
rcl
movs
pop
xchg
dec
jle
jbe
push
push
fs
cmp
out
fild
cmc
xlat
push
dec
add
popf
mov
rol
xchg
fst
cs
add
jne
jecxz
sub
daa
les
adc
pop
xchg
movs
in
mov
or
mov
xchg
push
inc
or
sub
add
add
xor
add
fstp
fstp
and
in
sbb
inc
xchg
jmp
pcmpeqw
sbb
lea
imul
es
shl
iret
push
add
xlat
sub
ror
mov
xchg
xchg
shl
mov
cmc
xor
lods
das
outs
out
cmp
enter
arpl
out
adc
aas
xor
sbb
out
test
pop
pop
push
in
mov
or
dec
inc
xor
xor
pop
adc
enter
sbb
fdiv
in
(bad)
repnz
xchg
mov
jnp
stc
mov
dec
xchg
sub
enter
xchg
clc
add
and
in
fcmovnbe
in
ja
leave
xchg
mov
xchg
fwait
and
daa
test
(bad)
mov
push
nop
push
ret
xor
xor
xchg
inc
por
ret
mov
inc
in
(bad)
pop
lods
push
jmp
inc
popf
mov
inc
leave
fsub
(bad)
not
push
(bad)
jl
es
cmp
shl
or
push
aad
mov
lock
pusha
xchg
add
sbb
fst
sbb
mov
xor
mov
js
mov
pminsw
pop
call
adc
mov
cmp
pop
movs
loopne
xor
cmp
pushf
inc
jae
in
cwde
push
imul
push
add
fstp
adc
lods
cmps
lahf
sub
cwde
data16
in
and
js
adc
(bad)
outs
push
jmp
mov
cli
ret
popf
ins
sub
int
cs
sahf
jge
cmps
fst
pop
loopne
cmps
icebp
popf
fst
jge
pop
fsubr
aam
dec
(bad)
fisub
ret
addr16
inc
mov
jno
add
xor
pop
xchg
daa
mov
loope
push
ror
mov
and
mov
xor
fwait
imul
jmp
xchg
xchg
lods
pop
enter
xchg
cmp
dec
shr
mov
mov
ds
int
outs
in
dec
in
mov
mov
mov
mov
sbb
ficomp
jns
out
pop
and
lahf
xor
push
imul
push
cs
dec
mov
xlat
jecxz
xchg
xor
jae
dec
xor
mov
sbb
xor
test
jge
sub
sub
shl
lods
or
in
les
or
scas
cmc
ss
out
iret
sti
movs
sahf
(bad)
ds
fs
and
bound
adc
nop
imul
push
cmps
pop
sbb
in
cli
lea
mov
adc
ret
loope
jmp
xchg
pusha
pop
add
jne
call
lds
test
in
dec
adc
in
(bad)
outs
mov
shl
mov
bound
daa
leave
mul
cdq
stc
pop
(bad)
stc
push
rol
in
xchg
fmul
xor
sub
dec
stos
stos
in
pop
xchg
xor
in
dec
cmps
mov
out
add
jne
fcom
mov
or
add
or
pop
stos
ficomp
addr16
jecxz
mov
push
popf
lahf
xlat
mov
mov
(bad)
jg
int
adc
pop
out
dec
jmp
fnstsw
or
cmp
das
popf
ror
test
push
daa
jmp
retf
inc
or
mov
dec
(bad)
and
sbb
xchg
aam
dec
xor
add
jmp
mov
cdq
and
mov
mov
or
sbb
enter
in
(bad)
outs
inc
loop
test
popa
aam
xor
and
bound
jns
xor
aas
inc
jb
into
xchg
jnp
outs
ds
std
out
ret
xchg
xchg
mov
push
(bad)
and
pop
jmp
cmp
sub
in
daa
inc
movs
sub
lods
addr16
ins
pop
pop
pop
out
xor
mov
push
not
mov
and
mov
push
mov
xchg
in
lds
mov
xchg
push
mov
or
sub
add
sub
iret
cli
repnz
dec
cmp
fnstcw
jecxz
das
push
mov
jle
cmp
mov
dec
std
jo
inc
mov
push
and
fmul
mov
idiv
stos
dec
pop
sub
pop
(bad)
mov
retf
scas
pusha
inc
pop
cld
mov
ret
mov
adc
iret
das
(bad)
jae
add
mov
cmp
xor
icebp
ins
(bad)
mov
lock
pop
(bad)
iret
or
push
rol
cwde
pop
push
push
in
(bad)
mov
imul
add
test
cmps
ds
(bad)
fdiv
and
loop
(bad)
push
mov
cdq
dec
fs
fnstcw
clc
loope
cmc
lea
push
ror
mov
hlt
adc
stc
sub
shl
ret
mov
(bad)
xor
ret
jo
adc
aaa
jmp
fistp
(bad)
cmp
out
rcl
cmp
addr16
ror
popa
cmp
dec
add
das
xchg
lock
ret
sbb
and
test
mov
pop
in
(bad)
pushf
ja
loop
jb
xor
pop
lea
mov
(bad)
std
sar
sahf
mov
(bad)
fucomi
xchg
mov
arpl
jmp
paddw
fsubr
je
sub
pop
inc
push
ss
ret
mov
push
aas
mov
icebp
iret
mov
mov
sbb
addr16
mov
sub
bound
push
pop
pop
lds
add
push
ficomp
cmps
mov
les
jo
dec
push
mov
out
fs
cmp
std
jno
es
pop
ins
inc
sbb
and
clc
cmp
test
xor
in
loope
push
sub
pop
scas
rol
mov
dec
dec
stc
jle
dec
ss
or
inc
mov
ffree
inc
movs
dec
mov
pop
sbb
push
inc
cli
mov
arpl
outs
aas
in
sbb
scas
rcl
push
sbb
and
data16
(bad)
xlat
arpl
repnz
nop
push
add
add
fs
cwde
mov
add
mov
sahf
hlt
ja
mov
fimul
aaa
pop
xchg
xchg
ja
js
popa
add
mov
inc
inc
inc
xchg
mov
inc
pop
add
or
push
out
jl
xchg
mov
pop
shl
add
jnp
fs
enter
cdq
ret
repnz
pop
xchg
dec
fs
rcr
fst
mov
inc
jmp
mov
mov
inc
mov
adc
jae
in
jne
and
push
popa
(bad)
cmps
cmp
mov
push
aam
hlt
push
imul
xor
hlt
mov
add
fbld
cmp
push
jmp
mov
inc
imul
add
add
xchg
jmp
stc
mov
daa
add
es
ret
imul
mov
push
add
mov
test
push
dec
jge
gs
fmul
test
ror
fisttp
add
ins
jae
and
cmp
cmp
or
lock
xchg
scas
stos
mov
not
xchg
mov
sbb
mov
out
mov
pop
push
and
mov
jne
pushf
lea
ja
shl
xor
mov
and
or
ds
into
mov
mul
cmc
(bad)
jnp
push
push
xchg
repz
sti
push
sbb
dec
das
or
int
jecxz
push
xor
(bad)
frstor
cmp
and
cwde
mov
and
fstp
jmp
out
ja
jecxz
sub
jo
jg
mov
in
lock
std
ret
jmp
out
fs
cdq
mov
cmc
jp
mov
lahf
push
jae
jne
xchg
mov
mov
inc
out
addr16
add
fisttp
retf
jns
lds
push
cmp
pusha
repz
js
sbb
jge
adc
push
dec
in
mov
pop
and
fisttp
repnz
jae
repz
sbb
jg
fldcw
imul
jae
jb
imul
sub
sbb
pop
and
inc
clc
xor
inc
jge
push
ja
imul
imul
aam
push
cmc
ss
mov
dec
mov
xchg
add
mov
test
add
dec
rol
adc
sub
mov
imul
sahf
test
push
pop
mov
cdq
test
push
loopne
jl
cmp
push
xor
add
(bad)
cmps
test
call
in
adc
addr16
aaa
test
movs
lds
lock
cmc
jg
shl
add
dec
xor
popa
fwait
je
sub
push
jnp
addr16
nop
cli
xor
loopne
lods
in
fsub
xor
push
sub
daa
xor
xlat
xchg
xchg
cwde
mov
jle
or
and
pop
mov
fimul
cmp
les
mov
or
cmp
push
pop
pop
push
in
repz
fst
adc
(bad)
mov
jmp
icebp
repnz
icebp
jb
jno
jnp
dec
inc
cmps
mov
stos
adc
test
mov
adc
(bad)
push
pop
(bad)
dec
in
fmul
std
jns
test
push
pushf
repnz
(bad)
or
rol
jne
pop
mov
jne
pop
leave
mov
cmp
popa
inc
inc
adc
icebp
xchg
movs
cld
jge
hlt
inc
pop
xor
xor
ins
jne
popa
inc
mov
jo
jg
mov
sub
or
push
and
lods
sub
mov
jle
aaa
mov
fsub
imul
int
mov
mov
in
repz
mov
icebp
sub
adc
stos
xchg
lods
fst
push
popf
out
cs
sbb
fimul
add
ja
aas
sub
pop
jl
sahf
shr
test
sbb
dec
outs
lods
and
xchg
xchg
lock
sahf
mov
or
adc
retf
movs
pop
xchg
or
jg
fst
repnz
push
adc
jge
pop
jl
pop
push
test
push
(bad)
ret
cdq
jne
sbb
xchg
ins
test
push
adc
call
int3
or
mov
dec
mov
je
inc
jle
call
int
sbb
xor
push
xchg
mov
(bad)
test
add
dec
dec
and
loope
imul
lea
les
adc
push
push
aas
ja
in
clc
and
mov
xchg
mov
add
inc
xor
(bad)
dec
mov
cmp
sbb
dec
mov
mov
mul
pop
(bad)
test
jle
dec
lods
cmp
or
jmp
fs
sub
ficom
sbb
ds
xchg
xlat
fsubr
jmp
pop
adc
mov
mov
jg
mov
call
xlat
xor
data16
add
aas
mov
cmp
jbe
lds
dec
outs
sbb
sub
mov
mov
inc
mov
ror
or
aad
ds
cmps
or
test
adc
mov
push
jmp
inc
xchg
jle
cmp
stos
lea
and
cld
and
pop
xchg
sbb
jbe
pop
rcl
cmp
das
push
mov
push
rcr
nop
bound
pusha
xchg
adc
xchg
pop
dec
call
lock
and
inc
out
(bad)
cmp
in
movs
or
push
fstp
dec
fdivr
scas
cmp
pushf
loop
sbb
sahf
mov
cmp
outs
fs
in
dec
fidivr
push
addr16
in
mov
je
retf
dec
mov
pop
cmp
jle
mov
sub
ret
push
push
inc
out
jne
push
repz
cmp
pop
push
ins
fwait
lods
movs
sbb
lods
mov
call
cli
bound
fisttp
sub
or
icebp
jmp
cli
or
mul
mov
out
or
out
jne
jg
lds
mov
push
dec
jle
imul
outs
mov
xor
mov
and
in
add
mov
push
push
ds
ss
ss
add
popa
pop
cmp
ins
pusha
push
in
or
mov
test
pop
and
cmp
(bad)
and
js
inc
push
jns
shl
jl
in
cmp
adc
sub
iret
fcomp
ror
xchg
cmp
aas
xchg
xlat
push
imul
pushf
loopne
retf
dec
fcomp
mov
xlat
scas
aad
xchg
cmps
sub
retf
sub
mov
xchg
cmp
out
fwait
imul
in
iret
xor
pop
jnp
xchg
es
jge
clc
inc
fwait
pop
dec
mov
cmc
pop
repnz
jmp
push
push
jnp
(bad)
popf
mov
xor
aas
sub
iret
jne
mov
sub
ror
mov
jno
push
jb
pop
ins
push
xchg
push
dec
pop
jne
hlt
sub
cdq
cwde
fimul
add
sbb
sbb
mov
push
push
js
jg
lods
ja
mov
pop
add
mov
(bad)
jmp
mov
mov
in
int3
mov
add
push
ins
daa
mov
push
(bad)
imul
push
push
(bad)
data16
sbb
lods
mov
mov
(bad)
lods
push
push
ins
pop
mov
adc
out
into
adc
imul
adc
je
or
fimul
xchg
nop
xchg
xchg
(bad)
push
lds
ret
xor
pop
hlt
lock
ja
push
mov
sub
pop
pop
mov
call
mov
add
aaa
add
fst
imul
fsubr
outs
jg
mov
stos
and
or
and
inc
mov
push
add
lods
push
xchg
mov
mov
leave
or
fnstsw
mov
push
mov
and
int3
xor
call
mov
sar
fwait
and
push
int3
mov
adc
daa
faddp
ins
mov
add
adc
push
pop
jbe
ss
(bad)
enter
inc
mov
in
(bad)
js
ss
(bad)
lods
mov
ins
add
push
push
pop
push
imul
je
fnstsw
retf
je
xor
ficom
fbstp
mov
or
es
movs
sbb
jo
ins
jae
xchg
pop
sahf
es
lock
mov
pop
iret
test
nop
call
sub
loop
sub
mov
mov
(bad)
push
xlat
adc
xor
out
and
in
pop
pop
cmp
inc
(bad)
and
mov
sub
aam
jl
wbinvd
test
ret
or
lahf
into
std
call
jns
fsubr
push
enter
pop
add
je
das
xchg
leave
je
xor
push
retf
addr16
jne
inc
xor
mov
daa
cmc
add
push
mov
test
mov
idiv
pop
stos
cmps
xlat
and
fcom
stos
mov
push
repnz
mov
mov
xor
out
movs
shr
or
push
add
jmp
jnp
loope
adc
cld
fwait
ret
pop
push
xor
pop
dec
fwait
test
cmp
scas
std
jne
jbe
xchg
cmp
sbb
dec
repnz
cmp
fidiv
(bad)
dec
xchg
fmul
sbb
mov
pop
cmps
lea
int3
mov
mov
repz
cmp
cdq
and
ficomp
adc
outs
ins
xchg
sub
mov
test
(bad)
jge
xor
adc
bound
pop
outs
(bad)
popa
sub
or
in
(bad)
sub
mov
push
or
jne
arpl
and
je
(bad)
fwait
sbb
pop
fisub
cld
fnstcw
cmp
fs
aaa
ficomp
push
or
cs
or
js
push
mov
and
xchg
cli
push
xchg
mov
in
lods
sbb
xchg
lahf
jo
pop
cmp
movs
cmp
cmc
xchg
mov
xchg
hlt
xlat
jg
xor
test
pusha
sbb
sbb
mov
cmp
push
push
jge
dec
pop
les
mov
ss
cmp
pop
sub
int3
out
(bad)
push
ss
pop
mov
fld
je
dec
or
scas
dec
rcl
cld
xor
or
imul
cs
enter
dec
inc
mov
mov
sub
ins
jne
and
fcom
outs
fwait
xchg
test
scas
lods
and
int
in
sti
fcmove
and
inc
adc
ins
inc
dec
fbld
retf
and
call
mov
iret
sahf
cmc
stos
pop
aam
(bad)
adc
in
movs
add
(bad)
cmp
pop
inc
mov
aaa
mov
addr16
pop
out
jbe
push
push
leave
pmaxub
test
mov
or
leave
cmp
mov
adc
xchg
(bad)
and
shl
(bad)
xlat
mov
jmp
or
loop
out
or
inc
inc
dec
cmp
xor
sub
xchg
mov
sbb
mov
daa
pop
pop
repz
sub
enter
mov
repnz
xchg
add
jmp
push
sbb
pop
ins
and
ins
mov
dec
pop
and
cmp
(bad)
div
outs
daa
mov
stos
in
dec
sbb
(bad)
push
inc
sbb
lds
popa
scas
pop
je
add
bswap
call
jbe
mov
cmps
pushf
inc
push
cs
fldenv
ss
cmp
lods
popf
(bad)
iret
retf
and
sub
test
fistp
push
outs
push
cmp
mov
aas
stos
out
xlat
sub
fnstsw
stc
call
ds
enter
mov
fwait
jbe
xchg
(bad)
adc
bound
dec
enter
mov
push
pusha
xchg
(bad)
test
add
retf
ds
cmps
cs
call
mov
aad
and
inc
std
(bad)
mov
or
xchg
dec
xchg
xchg
cmp
push
adc
xor
pop
das
ds
jecxz
enter
push
dec
ins
add
xlat
ror
xor
mov
ds
cmp
neg
outs
pop
xchg
in
jns
pop
call
inc
push
out
pop
mov
pop
inc
out
repz
int3
int3
mov
dec
popa
test
pop
xor
and
imul
mov
int
popa
sub
push
mov
mov
and
adc
xor
or
inc
sahf
jecxz
sub
mov
movs
pop
xchg
xchg
jae
es
sbb
sbb
test
ret
idiv
lds
cwde
xor
les
adc
dec
pop
test
cmp
dec
sbb
jmp
mov
jmp
lock
push
sub
ja
das
cmp
mov
(bad)
push
int3
sub
xchg
stos
mov
fnstsw
jmp
scas
outs
jmp
cmp
in
xchg
xor
cmp
cmp
(bad)
dec
lods
and
in
pop
aas
pop
daa
fcom
stc
sbb
inc
mov
and
jl
or
je
dec
push
mov
retf
push
mov
iret
push
pop
push
aam
jae
nop
push
fiadd
sahf
test
popa
movs
inc
pop
jg
call
xlat
mov
pushf
adc
cmp
xor
mov
repnz
sti
pop
sbb
pop
std
sbb
mov
dec
xchg
call
and
cmp
jb
cmc
adc
xchg
or
mov
mov
je
test
call
jo
push
xor
test
call
(bad)
push
mov
sti
shld
adc
sbb
sbb
test
jge
push
push
mov
push
out
gs
scas
add
icebp
dec
inc
shl
scas
or
(bad)
clc
outs
les
xacquire
inc
stos
jb
fwait
mov
pushf
inc
adc
sahf
aad
rcr
test
(bad)
xchg
out
out
add
mov
int3
mov
sbb
dec
xchg
push
sbb
cmc
sub
mov
add
and
fcmovbe
jle
stos
daa
lock
add
mov
mov
push
popf
push
push
mov
cmp
arpl
stc
(bad)
retf
xor
shl
fcom
push
xlat
push
push
addr16
add
call
in
mov
les
xchg
or
sub
sbb
pop
jns
add
fwait
jmp
and
mov
add
mov
aas
add
dec
mov
or
jb
mov
jg
out
movs
add
dec
ret
ret
ins
and
push
cmp
aad
push
cdq
pop
jne
imul
(bad)
ror
movs
mov
out
fsub
lds
retf
fwait
pop
mov
aaa
xchg
or
mov
mov
scas
jne
in
sbb
les
es
jnp
aad
loope
pop
mov
lock
enter
push
aad
cmp
push
mov
repnz
add
add
pop
popf
adc
ret
sahf
je
popa
or
ret
add
movs
mov
fisttp
mov
ins
lods
fist
sar
xchg
(bad)
clc
movs
fiadd
aas
ss
xchg
daa
or
push
mov
adc
mov
(bad)
aam
(bad)
loopne
nop
mov
loopne
in
cmp
inc
addr16
popf
pop
sub
sub
movs
inc
sub
gs
aas
out
pop
sub
mov
pusha
shl
fs
(bad)
aaa
into
mov
loope
pop
mov
pop
js
sub
xchg
fcomip
adc
ins
or
aaa
cmp
jbe
and
fstp
aad
call
add
push
or
dec
dec
adc
jle
or
icebp
call
pop
dec
sub
cmp
jae
push
rol
xchg
fmul
movs
add
in
push
xchg
adc
xchg
pop
dec
jmp
sub
cmp
pop
xor
pop
or
xor
push
scas
push
xor
cdq
call
push
cmp
adc
cmp
push
ret
push
adc
and
int3
cdq
mov
pop
imul
cmp
(bad)
mov
lea
adc
pop
jno
pop
dec
fst
pop
xchg
call
adc
jg
jg
xor
adc
aad
and
je
push
pop
in
sub
adc
push
lock
push
cmps
in
repz
and
fisub
out
pop
inc
push
lods
mov
mov
jae
xchg
jb
inc
call
mov
cmc
ret
push
pop
jmp
cs
or
push
lahf
cli
jmp
xor
xor
or
loop
mov
stos
mov
cmps
inc
add
loop
es
stos
or
or
rcr
aad
into
cwde
in
sbb
lods
aas
je
mov
xor
mov
xchg
mov
cwde
int
js
mov
mov
lods
mov
xchg
imul
pop
nop
ins
mov
mov
mov
add
cld
jmp
sbb
xchg
xor
inc
add
dec
mov
mov
dec
jbe
cmp
or
xchg
repz
jmp
add
adc
jle
xor
cmp
adc
repnz
test
mov
mov
repz
push
sub
lock
jg
sbb
add
test
cmp
sti
ret
mov
lods
out
xchg
jmp
sar
mov
idiv
or
pop
adc
mov
popf
mov
inc
loop
ins
xor
dec
(bad)
test
mov
aas
retf
jp
adc
inc
pop
(bad)
cwde
xchg
adc
in
jb
(bad)
and
lahf
fst
sbb
ficomp
ror
test
or
mov
jo
hlt
shr
in
jo
adc
or
jne
call
mov
loope
mov
int
rol
ss
jo
loopne
stos
push
add
xchg
out
das
mov
lock
and
sub
dec
inc
jmp
mov
iret
add
mov
jl
aad
pop
pop
repnz
popf
fnstcw
add
fcmovne
sbb
push
call
push
mov
mov
cmp
pusha
mov
pop
xchg
sahf
ja
and
std
xor
ds
cdq
jle
test
loopne
and
or
pop
inc
mov
and
add
loop
sbb
ja
fnstsw
mov
inc
adc
and
push
xor
push
jge
dec
outs
int3
mov
outs
jne
jp
sub
sti
aas
mov
sub
dec
bound
add
jp
xor
gs
mov
daa
cdq
sbb
xor
xchg
out
pop
mov
pop
call
or
or
icebp
fldcw
add
pop
aam
into
fcomip
adc
les
retf
jne
test
and
lods
cmp
rol
data16
jmp
sub
push
add
pop
sbb
cld
sub
repz
and
xchg
mov
mov
imul
cmp
sbb
push
cmp
sahf
or
std
add
pop
xor
xchg
iret
mov
js
je
dec
mov
ss
dec
or
xor
dec
cmc
mov
push
icebp
jmp
movs
push
push
nop
leave
iret
bound
adc
sub
js
cmp
dec
push
inc
and
je
fist
add
sbb
and
enter
or
sub
ds
and
mov
mov
rol
pop
lea
cmc
jns
add
pushf
adc
sahf
jmp
or
mov
mov
nop
fwait
xor
out
jne
js
scas
ja
jmp
sahf
out
and
adc
push
out
sbb
test
rcr
push
adc
aam
mov
dec
xchg
aas
lods
je
push
into
add
int3
cdq
stos
xchg
cmps
xchg
inc
cmp
fsubrp
test
add
dec
lods
loope
mov
mov
mov
xor
mov
data16
add
cwde
data16
scas
xchg
mov
xor
je
cmp
jle
(bad)
push
sti
popa
and
scas
push
mov
ror
jne
jns
adc
sub
jb
or
leave
pop
mov
fdivp
mov
imul
js
add
mov
push
sub
adc
add
sub
dec
cmp
and
outs
sub
add
pusha
loopne
xor
inc
mov
fld
jecxz
outs
xor
pop
aaa
ret
cwde
mov
dec
dec
cmp
gs
sbb
jmp
nop
mov
inc
inc
mov
cmp
int
sub
mov
add
jnp
mov
ftst
and
fld
das
push
or
inc
and
mov
cmp
dec
stos
das
jns
sub
mov
mov
cmp
(bad)
cmp
popf
jo
fistp
loopne
xor
ss
cmp
test
mov
es
xor
dec
jae
inc
fs
sub
sub
mov
fsubr
ror
add
inc
push
ins
in
es
fs
adc
test
mov
out
mov
test
rcr
mov
add
mov
int3
std
or
imul
dec
and
and
mov
pop
aaa
fistp
(bad)
sti
jecxz
pop
push
repnz
repnz
loop
lods
ret
(bad)
mov
push
jecxz
adc
push
sub
mov
lods
mov
cmps
and
xchg
imul
cmps
or
push
out
into
mov
mov
in
dec
lds
fs
test
mov
pop
mov
lock
add
mov
pop
xor
adc
icebp
jno
in
cld
pop
scas
pop
and
(bad)
dec
in
(bad)
xchg
popf
repz
mov
jbe
and
xchg
pop
icebp
add
stos
fnstenv
outs
(bad)
inc
dec
in
inc
xlat
cli
dec
mov
pop
les
inc
imul
in
xchg
popf
icebp
adc
mov
in
sbb
jbe
outs
mov
and
cli
sahf
sub
mov
inc
in
outs
mov
cli
and
mov
retf
les
icebp
xchg
imul
add
(bad)
in
test
mov
fs
sub
enter
(bad)
out
into
and
mov
jne
stos
mov
test
pop
push
push
jecxz
sub
das
mov
hlt
shl
in
cmp
add
xor
pop
bound
sbb
lods
test
loopne
leave
push
mov
lods
daa
fdiv
les
stos
cmp
pop
push
xchg
add
es
in
fild
cmp
push
jmp
ss
inc
retf
dec
idiv
ret
sub
pop
sub
cld
aas
cmc
fisubr
int3
cmp
adc
fld
xor
stc
sub
lock
lods
sbb
jmp
mov
mov
sar
add
mov
xor
cmp
jno
mov
dec
mov
push
xlat
mov
ds
lea
retf
push
pop
xchg
cmc
out
cmps
cwde
xchg
setbe
cmp
mov
cmp
pop
lahf
imul
inc
pop
neg
stc
pop
fldenv
ret
stos
stos
pushf
or
xchg
xor
ficom
sar
adc
xchg
xchg
mov
retf
pop
push
add
and
loope
into
inc
adc
pop
andnps
lea
cli
(bad)
dec
sub
mov
jp
gs
mov
pushf
lock
or
jp
cdq
ror
push
(bad)
scas
or
sub
ja
outs
cdq
xor
clc
cdq
push
ds
mov
jp
nop
scas
sub
enter
int
dec
push
mov
daa
cmp
pop
inc
stos
mov
add
mov
ja
cmp
repnz
sub
jbe
mov
das
add
movs
mov
scas
adc
enter
lahf
dec
push
sbb
stos
popf
clc
jno
push
jge
mov
pop
clc
ds
cmps
or
jp
gs
dec
add
sub
repz
fisttp
dec
cmp
mov
fiadd
mov
loop
pop
repz
int3
sub
call
enter
dec
sti
xchg
hlt
mov
daa
jg
jecxz
jecxz
dec
outs
xor
push
mov
hlt
xchg
dec
and
mov
jnp
mov
ret
or
repz
sub
ds
imul
or
lea
call
shr
or
pop
inc
cmp
jnp
bound
call
dec
lods
repz
or
sbb
je
inc
ja
jbe
push
jmp
pushf
add
test
aaa
daa
pop
add
mov
inc
in
ret
retf
dec
in
mov
jmp
aas
outs
dec
jmp
js
mov
pop
and
inc
add
std
sub
pop
enter
mov
cdq
adc
ins
pop
jl
sub
lods
adc
(bad)
stc
add
push
sbb
fwait
scas
out
sub
repnz
mov
push
xlat
enter
daa
(bad)
retf
aas
or
xor
sbb
sub
mov
inc
jmp
shl
dec
movs
das
int3
fsub
mov
jmp
pop
push
cmc
jbe
lock
cmps
adc
movs
movs
leave
stos
loope
xchg
cwde
jmp
retf
and
jnp
add
inc
data16
sub
in
cdq
add
sbb
mov
js
mov
mov
adc
ret
sbb
jo
adc
jae
pop
push
aas
mov
xor
call
in
test
jno
stos
ins
cld
mov
mov
inc
xor
xchg
lods
popa
stos
mov
mov
lods
jmp
mov
rol
sbb
jno
add
inc
aam
xor
inc
lock
out
pop
dec
push
stos
fiadd
call
in
test
mov
inc
push
mov
das
loop
jne
xchg
mov
pop
xor
mov
fnstsw
add
test
adc
dec
jp
stos
iret
mov
sar
bound
mov
ror
je
popa
inc
jnp
and
cmp
cdq
out
fisubr
mov
push
dec
jnp
add
push
aad
loope
enter
or
pushf
gs
(bad)
fcom
call
sti
fisttp
lds
mov
les
and
stos
outs
adc
bound
xor
fsubp
cli
leave
test
sub
dec
inc
cli
and
mov
dec
cmp
(bad)
lock
adc
push
(bad)
mov
test
push
add
jecxz
popa
mov
cwde
mov
rcr
lods
xchg
rcr
movs
push
inc
xchg
push
ja
mov
dec
adc
push
out
adc
push
xor
adc
sar
inc
inc
fild
mov
sbb
aad
dec
jne
aas
sti
addr16
mov
inc
clc
cs
cmp
sub
ficomp
cmps
sub
mov
or
jbe
cld
cmp
out
or
icebp
cmp
int
mov
mov
xor
and
std
mov
enter
daa
dec
aaa
out
push
in
aad
test
sbb
test
adc
xor
cmc
das
rol
adc
jnp
cs
js
dec
(bad)
js
and
mov
mov
jg
outs
mov
mov
gs
or
mov
cmps
or
aam
mov
and
xchg
out
stc
iret
leave
mov
xlat
into
mov
mov
cs
addr16
outs
test
sub
sub
mov
shr
lods
or
adc
std
lods
bound
cmp
dec
int3
and
or
out
pusha
or
call
lahf
adc
xchg
xor
lds
cmp
ret
xor
xchg
arpl
xchg
mov
sub
push
cmp
push
call
xchg
mov
(bad)
add
aaa
js
icebp
xchg
fdivr
mov
sbb
adc
or
jno
add
cmp
cmp
push
or
lods
cmp
inc
jg
jmp
push
push
fwait
shl
pop
and
fnstenv
add
jnp
test
stos
inc
or
aaa
add
aas
mov
test
or
cmp
(bad)
mov
jae
(bad)
mov
add
sbb
adc
jle
add
stc
pusha
push
test
add
cli
into
(bad)
les
test
jge
push
push
jmp
arpl
cmc
mov
dec
or
fstp
sub
sahf
jl
adc
pop
sar
dec
push
add
imul
sbb
pop
sbb
cwde
pmaxsw
cwde
cmp
cli
xchg
pop
pushf
stc
addr16
imul
aaa
add
xchg
fbstp
cdq
(bad)
and
xor
mov
fwait
pop
jge
sbb
int3
fwait
dec
pop
xor
and
xlat
div
and
sub
les
xlat
xchg
mov
scas
cmps
fs
(bad)
call
std
out
dec
scas
push
fld
retf
and
cdq
xchg
mov
mov
add
pop
cmps
push
sub
psubb
push
push
cmc
xchg
jmp
inc
cs
mov
lea
xor
imul
cmp
cld
dec
xchg
(bad)
imul
pushfw
cs
jno
test
leave
mov
push
adc
and
adc
or
icebp
sub
cld
sbb
jmp
pop
sub
push
scas
call
inc
and
fmul
iret
fs
add
cmp
sbb
push
cdq
or
push
pop
add
mov
mov
outs
dec
out
sub
in
popf
rcr
push
in
out
add
lods
in
ss
pop
ret
inc
pushf
cmps
jmp
lods
sbb
cmps
in
movs
push
sub
and
adc
dec
rol
jbe
sbb
xor
out
xchg
adc
in
mov
test
outs
sti
outs
in
xor
es
push
xor
xlat
jb
sti
into
pop
xchg
sub
rcl
jecxz
loop
shr
sbb
(bad)
xchg
or
inc
stc
loope
adc
cs
xor
pop
adc
sbb
dec
in
aad
sahf
cmps
out
mov
or
sar
sub
adc
push
cmp
aaa
(bad)
sub
lock
cmps
jmp
(bad)
jne
repz
dec
gs
xchg
adc
movs
ret
xchg
xchg
inc
rol
gs
adc
test
or
ja
mov
inc
dec
pop
add
adc
fsub
ret
cmc
lods
mov
stc
test
inc
cs
mov
(bad)
jecxz
mov
lds
push
sbb
push
mov
into
dec
shr
mov
inc
dec
ja
ret
mov
mov
test
imul
sbb
int
(bad)
repz
fs
sbb
push
bnd
mov
jp
sahf
or
mov
pop
add
into
inc
pop
hlt
aaa
es
ins
icebp
or
mov
in
jno
fnstcw
pop
add
dec
jmp
lahf
push
jnp
xchg
bound
out
leave
shl
push
in
ret
xlat
push
retf
in
mov
mov
retf
popa
loope
dec
jns
dec
pushf
imul
and
xor
ins
push
lods
enter
mov
dec
test
or
in
or
mov
jmp
mov
(bad)
xlat
xchg
push
jg
test
hlt
sbb
cmp
in
xor
test
mov
sti
xchg
mov
add
mov
sbb
lods
mov
xor
and
cs
cmp
aaa
inc
repz
rcr
cmp
loopne
jb
xor
lods
xchg
aaa
jmp
mov
push
xchg
hlt
enter
pop
fwait
sub
test
fcmovnbe
repz
push
pop
xchg
cld
(bad)
enter
mov
xchg
mov
pop
xchg
pop
add
lods
test
repz
arpl
dec
push
pop
and
cmps
inc
pop
jl
out
and
out
and
arpl
xchg
pop
inc
adc
in
xchg
fst
adc
iret
cmps
mov
mov
or
push
rcl
adc
gs
or
rol
cwde
imul
mov
ds
xor
add
les
or
pop
jb
sub
sbb
push
push
cmps
sbb
pop
or
popa
push
rcl
test
daa
stc
loopne
fisubr
mov
ret
push
or
sbb
pop
xchg
adc
and
stos
(bad)
arpl
fisub
lock
(bad)
jmp
dec
retf
mov
call
sbb
mov
sub
dec
inc
loope
sar
cmp
cdq
mov
or
out
sbb
xor
cdq
mov
and
adc
jns
mov
cmp
imul
in
dec
loopne
or
loopne
mov
shl
sub
movs
cmps
mov
and
xor
out
jle
ret
push
popa
add
mov
popa
in
rol
in
in
cmp
aas
inc
dec
ss
inc
(bad)
jmp
rcr
test
add
rcr
inc
xchg
add
(bad)
sbb
leave
in
test
xlat
and
lock
or
xor
and
dec
retf
or
fmul
jge
mov
mov
inc
mov
out
rcl
ins
std
pop
sub
mov
pavgw
sub
dec
sbb
or
adc
mov
mov
xor
add
mov
icebp
mov
xlat
sub
pop
pop
jno
sub
outs
lods
sbb
fist
loopne
xchg
nop
clc
scas
ror
pop
aad
push
jo
inc
mov
sbb
add
es
adc
sub
sub
bt
inc
dec
and
in
mov
sti
mov
dec
sar
mov
mov
dec
pop
dec
sar
and
push
pop
jns
iret
repnz
dec
pop
retf
jnp
cmp
mov
push
mov
sar
dec
fild
repnz
push
sar
xchg
push
mov
(bad)
das
dec
xchg
lock
shl
icebp
cwde
push
cmp
add
dec
test
(bad)
jp
xor
push
aad
jle
push
sar
xchg
movs
and
lods
mov
pop
mov
sbb
jmp
lock
ds
inc
in
pop
mov
in
ins
iret
pop
mov
jmp
xchg
imul
scas
(bad)
popa
xlat
jmp
int
or
push
jmp
je
(bad)
sub
mov
sahf
pop
lahf
inc
call
pushf
adc
add
add
sbb
in
inc
jnp
jae
xchg
retf
mov
js
inc
pop
cmp
arpl
push
bound
sub
ret
out
sbb
psrad
cli
xor
test
mov
and
arpl
inc
pop
mov
movs
(bad)
loopne
cdq
ret
int3
sbb
int
inc
push
sub
push
or
dec
int3
adc
mov
mov
sbb
ror
jo
jp
add
cli
inc
add
js
ficom
dec
retf
dec
int
mov
les
inc
mov
inc
jo
or
nop
pop
xchg
mov
adc
xor
stos
rcr
xchg
jmp
into
mov
adc
or
retf
sub
or
(bad)
mov
jb
add
mov
push
jb
jmp
lds
idiv
addr16
push
arpl
adc
mov
in
mov
fild
or
jmp
arpl
jne
pop
shl
retf
les
xchg
test
or
daa
cmp
inc
sub
shl
imul
arpl
mov
mov
jnp
shl
pop
cld
cwde
xor
xchg
call
sbb
push
cwde
ins
push
ficomp
jmp
push
cld
xor
imul
daa
mov
mov
xor
mov
and
push
fcomip
int
mov
out
shl
test
out
fbld
(bad)
cli
mov
xor
push
popf
mov
mov
inc
or
movsx
jl
imul
pop
stos
vcmppd
pop
(bad)
push
scas
inc
add
dec
popf
test
data16
adc
icebp
data16
test
das
imul
inc
mov
mov
and
aad
sbb
cmc
mov
push
mov
pop
jo
jmp
push
push
mov
lods
xchg
or
or
adc
adc
xor
or
repz
mov
jb
arpl
mov
out
push
call
cmp
pop
or
out
pop
jne
xor
mov
add
gs
(bad)
mov
stos
loope
pop
ds
mov
out
push
xchg
(bad)
hlt
fdiv
clc
shr
push
xchg
sbb
and
mov
(bad)
cmp
fisttp
es
sub
and
jle
lea
add
mov
out
mov
nop
test
pop
ins
les
daa
leave
loope
out
mov
rcl
mov
loope
and
das
mov
and
enter
dec
fldenv
xchg
and
mov
inc
es
arpl
fiadd
retf
sar
jmp
fnsave
fcmovnbe
in
dec
std
jg
inc
and
stc
addr16
ss
pop
jnp
mov
imul
outs
out
xor
pop
fisub
call
pop
sub
in
jnp
ret
popf
lods
mov
stc
sbb
ja
test
fmul
inc
pop
iret
push
loop
popa
iret
icebp
mov
cmps
ror
jmp
gs
xchg
stc
mov
nop
call
shl
xlat
aaa
inc
add
xchg
jo
gs
outs
shl
test
popf
repnz
cmc
dec
and
dec
fisub
pushf
int
jno
mov
fwait
test
icebp
add
sahf
cwde
or
js
(bad)
outs
cmp
jge
popf
mov
retf
mov
sub
popf
mov
sub
or
xor
iret
fild
jge
mov
mov
mov
sbb
mov
push
add
dec
frstor
stos
aaa
jae
fistp
mov
jne
mov
jb
adc
mov
lahf
mov
push
pop
xor
addr16
lds
div
adc
sbb
cmp
neg
mov
inc
jae
push
mov
pop
push
jle
mov
pusha
cwde
scas
jge
shl
test
ror
retf
or
stc
and
popf
adc
jns
stos
adc
mov
ins
(bad)
fstp
(bad)
jle
cmp
test
add
aam
pop
add
adc
xor
call
repnz
(bad)
out
sar
sbb
movs
gs
push
shl
mov
sbb
aad
bound
inc
arpl
dec
sbb
xchg
inc
xor
dec
fdivrp
sbb
(bad)
xchg
push
js
addr16
xor
pop
in
call
ror
sub
adc
xor
mov
push
test
xchg
jge
xor
iret
iret
lock
mov
iret
ins
lds
(bad)
mov
mov
icebp
rcr
call
cmp
fwait
jb
xlat
test
(bad)
and
mov
dec
push
add
mov
sbb
neg
out
xchg
lds
div
adc
mov
cwde
cmps
cli
mov
mov
in
xchg
movs
push
fadd
mov
fs
psubd
xchg
cmp
mov
call
mov
and
pop
adc
jge
std
repnz
outs
fist
stc
imul
and
hlt
and
jae
sub
cmc
sub
fstp
push
pop
sub
push
sub
mov
xchg
je
push
jmp
xchg
or
add
xchg
dec
fisub
ja
inc
jne
idiv
push
push
dec
or
pop
dec
(bad)
scas
retf
sbb
bound
mov
dec
loop
imul
(bad)
jl
sub
shl
mov
dec
arpl
sub
xor
(bad)
xchg
xchg
push
adc
dec
add
jne
pushf
jno
add
ret
xchg
mov
out
adc
xlat
xchg
jno
es
xor
inc
sub
jecxz
pop
xchg
add
loop
push
das
mov
fmul
inc
jnp
movaps
and
jno
shr
xchg
(bad)
stos
retf
xor
loop
inc
xor
inc
dec
cs
cmp
cli
xchg
dec
hlt
mov
lahf
push
movs
pop
xchg
stos
and
jmp
cmp
in
enter
mov
inc
ret
xlat
cld
stos
mov
scas
and
mov
adc
dec
xlat
push
cmp
push
mov
push
pop
add
push
xor
mov
rcl
shl
mov
scas
pop
mov
mov
xchg
xchg
out
inc
lds
jnp
icebp
fsubr
imul
inc
cmps
or
test
aas
mov
cmc
mov
push
mov
xchg
fwait
mov
jns
fiadd
mov
inc
mov
adc
inc
in
scas
(bad)
nop
inc
mov
lea
sub
mov
dec
fstp
je
mov
mov
mov
leave
mov
fimul
xchg
pop
xor
pop
cmps
or
popa
inc
cmp
pushf
pop
jns
aaa
pusha
add
retf
mov
jns
add
popf
sbb
adc
movs
aam
adc
dec
mov
(bad)
push
pushf
inc
jge
outs
pop
mov
fadd
rol
repnz
test
(bad)
das
hlt
pop
xchg
rcr
push
into
mov
and
pop
mov
sbb
push
fnstsw
and
jb
inc
push
bound
xchg
neg
jp
or
mov
mov
jo
mov
jecxz
xor
cmp
je
cmp
xchg
out
out
dec
sub
retf
call
les
into
jl
movs
jne
add
dec
arpl
test
or
loop
jb
fsub
sub
mov
add
ds
sbb
add
sbb
jb
inc
mov
mov
xor
cdq
pop
bound
mov
and
mov
in
mov
lea
mov
push
dec
adc
mov
shl
mov
rcr
sub
pop
lods
jmp
pop
and
mov
xor
das
pop
pop
cmp
adc
(bad)
bound
jb
loopne
jmp
inc
inc
add
lods
sbb
inc
sbb
scas
jmp
shl
inc
lahf
(bad)
ror
inc
and
or
js
or
loope
in
add
mov
pop
pop
cmp
cmp
imul
push
jle
in
push
fcmovnb
and
sub
push
pop
test
mov
sbb
outs
sti
je
cmp
loop
or
(bad)
movs
add
or
cmp
pop
jge
pop
ror
shr
push
rcr
sbb
jbe
xor
lods
push
push
jecxz
int3
and
sahf
dec
test
mov
outs
push
in
and
jmp
jne
pop
mov
(bad)
stos
ins
lahf
into
jmp
xor
jns
std
mov
popf
call
mov
(bad)
stos
call
cmp
inc
adc
xchg
ds
xor
cdq
rol
and
(bad)
mul
sti
cwde
fistp
xchg
inc
jmp
adc
mov
jl
rcl
jmp
enter
mov
enter
call
pop
call
pop
jl
add
lods
adc
aaa
xor
lea
pop
xchg
xor
or
lock
xchg
nop
daa
push
add
sub
add
add
mov
xor
cmc
add
cmp
mov
cmp
add
cmp
xor
not
in
xchg
inc
add
rol
sbb
push
jns
jmp
lods
jns
int
(bad)
jmp
scas
mov
jmp
sar
inc
xchg
loope
int3
mov
pop
mov
scas
sar
retf
jp
rcr
dec
mov
sub
cli
jae
xchg
jns
call
add
sbb
aas
mov
out
les
jno
jo
out
mov
xor
add
jne
jmp
outs
outs
push
je
les
sub
xchg
ja
das
jmp
inc
outs
and
and
(bad)
call
inc
and
clc
adc
pop
int3
adc
cdq
or
adc
imul
push
mov
(bad)
xchg
stos
and
mov
arpl
ficom
pusha
leave
sbb
dec
aam
(bad)
out
test
iret
pop
jge
mov
dec
into
cmps
jmp
lock
mov
xchg
retf
bound
iret
(bad)
in
add
jae
lods
enter
retf
fs
cmp
test
std
push
sahf
ret
pop
sbb
lock
jo
in
out
je
ss
push
cld
sahf
cmp
fs
add
adc
mov
lock
cmp
pushf
pop
and
imul
aaa
xchg
inc
(bad)
sahf
and
add
jno
inc
js
xor
or
mov
mov
xchg
(bad)
mov
cs
jns
push
xlat
pushf
mov
clc
int3
push
test
push
fimul
dec
stc
imul
out
dec
push
fistp
pop
std
lock
adc
sti
mov
clc
or
pop
int3
ss
adc
add
mov
or
push
loope
lock
push
jge
(bad)
popf
add
mov
xor
pop
lahf
in
xchg
gs
adc
add
dec
hlt
push
mov
cwde
add
add
xchg
sub
mov
lock
(bad)
mov
enter
or
movs
ins
call
sbb
out
retf
mov
mov
clc
mov
jb
xor
xchg
cdq
(bad)
sti
(bad)
mov
imul
lea
jno
popa
pop
outs
sub
xor
push
dec
cwde
or
inc
adc
adc
dec
dec
jp
xchg
xchg
and
movs
retf
shl
stos
jp
inc
repz
fdiv
rol
pop
cli
xor
jl
or
arpl
adc
push
call
out
pushf
in
adc
xchg
loop
push
add
xchg
(bad)
xlat
jne
dec
xor
scas
push
int
enter
rcr
loope
test
mov
jecxz
pop
dec
enter
xchg
arpl
(bad)
out
out
xchg
fcmovnu
lds
sub
repnz
push
sti
cdq
adc
pop
xlat
leave
in
mov
mov
je
scas
xchg
ja
push
(bad)
mov
fdivr
xchg
inc
retf
retf
cmps
aam
stos
lock
and
scas
cmp
sub
jmp
mov
adc
mov
rcl
mov
adc
shl
mov
in
cmps
sbb
push
retf
pushf
sbb
push
mov
push
fdiv
or
movs
sti
fcmove
push
ficomp
outs
xchg
imul
add
adc
inc
mov
lods
aam
mov
cli
ret
push
ret
shl
add
rcr
inc
xor
inc
(bad)
dec
cld
std
xchg
aaa
mov
sub
xchg
inc
add
and
in
jp
push
rep
fs
(bad)
mov
in
icebp
retf
fstp
cmps
or
sub
adc
push
add
stos
fucomip
scas
and
test
lods
cdq
fidivr
loope
pushf
fwait
stos
mov
ins
pop
std
xchg
xor
enter
sub
fist
aad
mov
scas
out
test
mov
cs
xchg
and
shr
jg
lea
inc
sbb
out
sbb
(bad)
aam
xor
sar
or
loope
jg
or
and
add
sbb
lock
fmulp
jle
or
inc
jbe
cmc
xchg
pop
and
adc
popf
xor
mov
cs
xchg
inc
fadd
fst
mov
ss
cmp
push
sbb
and
repz
outs
mov
xor
mov
sahf
fimul
lods
add
in
cmp
adc
repz
test
jno
addr16
cmp
fiadd
andnps
je
add
mov
loop
test
jb
dec
pop
popf
xchg
xor
arpl
ds
out
sar
and
mov
pop
dec
nop
mov
aas
or
push
bound
in
shr
sub
push
add
out
fwait
pusha
std
mov
sbb
jbe
(bad)
pop
jbe
xchg
mov
xor
stc
add
ds
mov
xchg
and
mov
jge
sbb
sub
xchg
pop
sub
stos
xor
jmp
test
xlat
jecxz
mov
push
add
out
out
push
sub
jge
and
movs
pop
arpl
scas
or
push
inc
pop
lods
jmp
push
ficomp
fdivr
std
dec
setae
add
adc
jo
push
je
xchg
leave
inc
mov
sahf
imul
xchg
rol
jecxz
xchg
xchg
lds
mov
(bad)
lock
push
pop
imul
fldenv
dec
inc
repnz
dec
es
outs
call
mov
pop
(bad)
push
aad
cmc
xor
xor
mov
xchg
sbb
stos
sub
adc
dec
xchg
ins
iret
lds
loop
adc
push
inc
xchg
sub
fs
enter
imul
push
test
das
je
retf
bound
xlat
sub
loop
scas
jle
aam
icebp
push
repz
xchg
push
xchg
rol
mov
icebp
fcom
test
popa
inc
data16
sub
jge
jg
pushf
pushf
sbb
and
outs
mov
mul
sub
and
ins
vmovddup
jp
mov
mov
call
sar
dec
or
loope
repnz
xchg
js
pop
push
std
inc
out
cmp
ins
add
and
and
jmp
pushf
mov
std
jmp
ins
scas
ja
mov
cs
add
pop
ror
mov
fild
sbb
std
jmp
pushf
mov
mov
mov
sbb
rol
aad
and
xchg
xchg
xchg
xchg
xchg
add
in
call
sub
call
out
jmp
or
movs
pop
leave
mov
leave
mov
jl
inc
xchg
add
(bad)
mov
gs
xchg
stos
fnstsw
push
add
jmp
stos
and
(bad)
loope
lods
or
cmp
fmulp
inc
outs
popa
jns
add
ret
or
cmps
xor
vmwrite
dec
retf
pop
or
cs
popf
cwde
push
dec
jae
or
sub
aam
rcl
movs
jo
push
ror
mov
shl
dec
aaa
imul
sub
xlat
add
ret
cmps
retf
lods
into
cmp
fdivr
mov
add
fsub
mov
jns
sahf
xchg
sahf
xchg
cld
cmp
jmp
sahf
jb
cdq
ins
dec
scas
int
std
mov
(bad)
loop
fisub
xchg
jge
sub
fs
dec
push
ins
(bad)
jmp
sbb
xchg
sti
push
mov
sbb
cmp
or
jno
aas
retf
fsub
fs
(bad)
popf
and
cmp
pusha
sbb
icebp
mov
lea
in
dec
xor
add
push
pusha
call
not
ror
sbb
jb
xchg
pop
sub
pmaxub
xchg
jne
push
mov
jp
adc
test
mov
scas
(bad)
push
xchg
ins
ss
inc
adc
out
xchg
rol
(bad)
mov
cmp
mov
push
movs
sub
(bad)
clc
adc
push
ret
retf
into
and
dec
xchg
aam
ret
push
sbb
jns
cmp
mov
retf
mov
pop
dec
sub
inc
test
dec
jo
lahf
xor
or
repnz
jns
out
sub
test
int
repnz
mov
ffreep
cmp
cmps
lock
pop
inc
jae
push
xchg
cwde
xchg
cmps
cs
mov
test
les
sub
cmps
xor
dec
jb
stc
int
retf
jmp
inc
int3
movs
leave
loopne
xor
and
mov
jae
mov
sti
dec
push
sbb
xchg
out
xchg
or
aam
retf
int3
call
repnz
cld
push
mul
int
popa
mul
ds
push
sub
aad
or
into
mov
popa
dec
jb
dec
pop
add
mov
and
lods
sbb
test
fdivr
out
(bad)
test
jg
xchg
lock
imul
shr
into
add
pop
sti
sbb
(bad)
xlat
(bad)
movs
inc
dec
leave
xor
loope
cwde
push
in
xchg
fild
pop
nop
(bad)
hlt
sti
add
sub
mul
mov
inc
pop
fwait
pop
repnz
jmp
mov
xor
enter
jecxz
icebp
(bad)
mov
lea
and
mov
clc
or
sub
mov
lods
mov
cld
fistp
adc
nop
pop
jnp
sbb
dec
arpl
stc
pop
div
cmps
scas
int3
jge
or
and
and
inc
push
sbb
js
loope
xor
pop
cmp
stc
mov
xor
mov
push
cmp
inc
cmps
stos
inc
aaa
ret
inc
addr16
sub
inc
adc
mov
in
push
imul
mov
cmps
xchg
push
pop
dec
daa
add
(bad)
stos
xchg
test
leave
pop
xchg
js
push
xor
or
js
sbb
ins
inc
and
xor
int
inc
cmps
lods
fsub
test
sub
inc
ins
push
or
shl
shl
add
jnp
repnz
xchg
mov
adc
jnp
xor
dec
push
cmp
sbb
xchg
repnz
mul
xor
push
sub
cmp
adc
pop
inc
loope
inc
lahf
xchg
add
xchg
or
ret
pop
lock
mov
and
mov
neg
and
fisubr
mov
pop
sbb
js
out
imul
add
jno
aaa
inc
fldenv
in
movs
cmc
push
aam
pop
pop
xchg
jmp
fisub
inc
addr16
cs
pop
lock
xor
rcr
xchg
cmp
movs
aad
sub
mov
cmps
jno
pop
aas
inc
shl
add
aam
mov
loop
push
or
repnz
test
or
mov
dec
mov
mov
(bad)
stc
movs
stc
mov
enter
cmp
push
push
mov
stos
mov
sbb
test
mov
mov
test
ud0
lea
pushf
fwait
add
xchg
retf
xchg
lods
push
cmc
dec
xchg
sub
and
cmps
lea
sbb
sbb
ds
mov
int3
leave
sbb
adc
icebp
cmps
mov
push
jl
pop
pop
and
int3
xchg
and
or
jmp
loopne
fdivr
cmp
inc
int3
xchg
cmc
mov
xchg
mov
mov
stc
and
push
jo
ficomp
or
xchg
loope
pop
adc
xchg
ror
sbb
fistp
retf
dec
in
sub
(bad)
xchg
mov
fdivr
and
add
mov
in
int3
cmp
sahf
movs
xchg
cli
hlt
pop
nop
add
sahf
ret
xchg
push
mov
lods
sub
or
aad
mov
or
xor
jnp
mov
cmp
cmp
icebp
(bad)
cwde
lds
or
add
or
mov
cmp
(bad)
push
push
sub
ins
scas
stos
ins
jmp
or
js
(bad)
retf
pusha
add
cmp
sub
xchg
clc
cmc
cmp
jne
or
mov
mov
in
jge
sub
ds
xor
cwde
(bad)
lods
inc
imul
shl
ins
lods
lods
jbe
xchg
fs
enter
or
cld
add
and
mov
stos
mov
mul
push
adc
ret
add
xchg
jmp
xor
out
ins
mov
dec
adc
add
retf
and
xchg
mov
movs
into
sbb
jne
pushf
shr
mov
mov
xchg
push
jecxz
ins
cmp
xor
inc
and
push
inc
cmp
mov
vmread
mov
rcr
scas
add
adc
or
je
mov
adc
mov
or
cli
call
cmp
xor
popa
lock
jns
(bad)
(bad)
les
sub
out
adc
jno
cld
enter
sbb
pop
dec
(bad)
xlat
cmp
mov
shl
jmp
shl
pop
mov
and
lahf
mov
mov
and
(bad)
mov
push
mov
dec
pusha
sub
add
dec
pop
add
or
or
leave
sar
rcl
(bad)
ret
mov
iret
es
pop
ss
inc
leave
pop
scas
movs
sub
(bad)
mov
test
xor
out
out
out
fsubr
stos
retf
int3
vpmulhuw
push
mov
je
arpl
jbe
fwait
pop
jmp
lods
pop
or
inc
(bad)
outs
sahf
arpl
sbb
inc
push
jne
jne
and
sbb
push
lock
add
jno
push
cmp
adc
fadd
mov
mov
sahf
push
push
inc
dec
(bad)
cli
or
jmp
push
dec
jnp
adc
mov
(bad)
ficomp
mov
pop
or
cmps
fidiv
inc
dec
fs
cmp
or
outs
das
or
jmp
inc
inc
jae
fisttp
movs
inc
push
mov
jne
imul
add
cmp
mov
xor
lods
jg
pop
cwde
int3
clc
cmp
repnz
(bad)
jge
cdq
jg
sub
sti
shr
retf
mov
sub
daa
sbb
xor
test
sub
jmp
push
(bad)
cmp
jle
sub
xor
mov
push
inc
lahf
dec
cmc
stc
es
(bad)
mov
fcom
cld
xchg
pop
jne
icebp
sub
xlat
cli
mov
push
es
jl
xchg
pop
shl
retf
sbb
jg
aad
lock
retf
mov
and
popf
call
xor
and
add
pop
retf
sbb
dec
mov
xchg
cli
icebp
push
push
cmp
fwait
jle
in
pop
adc
inc
add
add
in
sub
xor
lahf
and
push
xchg
aad
or
or
test
jbe
adc
pop
jmp
lods
inc
jmp
xchg
aas
jle
scas
xor
imul
shr
inc
mov
imul
pop
xor
ret
push
fwait
add
pop
mov
pop
adc
add
mov
clc
jno
clc
xchg
mov
sbb
xor
das
inc
mov
div
and
(bad)
pop
mov
mov
mov
and
pop
loop
sub
rcl
xor
(bad)
pop
call
xchg
sbb
jno
pop
jnp
mov
mov
inc
rcr
(bad)
jno
pop
add
pusha
cmp
dec
hlt
out
ja
ss
call
sbb
sbb
in
sub
pop
jo
out
out
inc
mov
mov
aas
xchg
jns
lods
jl
jnp
pop
pop
push
cs
jl
push
fimul
jno
fs
and
loopne
xor
push
loopne
stos
dec
push
(bad)
and
inc
into
das
jae
adc
lock
push
stos
cmp
add
sbb
add
mov
push
mov
and
dec
mov
jne
stos
jmp
loop
lods
js
pop
push
test
sub
adc
mov
(bad)
ja
adc
aas
adc
xchg
jae
fst
adc
stos
ret
jb
aas
dec
xchg
dec
(bad)
loope
js
cmp
pop
mov
lock
xor
bswap
call
test
push
push
push
mov
sub
jae
add
sbb
jl
std
sbb
cmp
test
popa
sub
scas
test
(bad)
mov
scas
and
jp
icebp
dec
xchg
fist
daa
out
cmps
movs
mov
nop
jmp
xchg
mov
jmp
dec
xor
out
fcmovne
test
dec
or
or
jp
inc
enter
lods
(bad)
enter
add
xor
xchg
mov
add
push
ror
sub
mov
(bad)
mov
fsub
into
xchg
dec
dec
dec
dec
cdq
loopne
stos
and
lock
fisttp
scas
ja
xor
push
push
arpl
push
push
scas
outs
popa
or
psllw
not
push
sbb
mov
dec
jge
out
mov
jle
mov
mov
add
iret
(bad)
pop
push
xchg
bound
les
inc
imul
mov
ret
xchg
mov
lahf
ret
sbb
jns
out
ds
xor
jnp
stc
cld
push
stos
adc
sbb
xor
xor
push
sbb
out
xor
call
push
sub
in
push
addr16
inc
mov
mov
xchg
mov
jns
movs
jnp
add
fdivr
loop
sbb
adc
mov
or
fisubr
and
inc
das
cmc
and
inc
and
outs
push
inc
mov
xlat
mov
inc
sti
adc
pop
(bad)
lock
adc
retf
inc
mov
jecxz
out
cmp
xchg
cmps
sbb
hlt
out
inc
push
xor
pop
dec
xlat
lock
cwde
adc
(bad)
das
jnp
add
cmp
xchg
test
retf
cli
adc
enter
in
bnd
push
sub
push
aad
call
mov
in
sbb
in
pop
in
pop
mov
xchg
xchg
mov
jnp
inc
clc
add
sbb
add
or
fucomip
push
mov
into
loop
into
mov
fdiv
pop
iret
in
into
xor
add
mov
push
daa
xchg
adc
out
push
xor
loopne
push
ds
pushf
mov
gs
je
lea
mov
jmp
sbb
jle
sbb
scas
cmc
xchg
cld
or
lods
pop
inc
xor
js
aaa
mov
sbb
aam
fiadd
mov
das
dec
scas
ins
(bad)
sbb
int
sbb
call
cmp
adc
add
loope
arpl
cmps
mov
push
imul
mov
(bad)
iret
in
cmps
mov
jle
lods
int
mov
pop
(bad)
in
pop
mov
mov
retf
mov
(bad)
stos
jp
sbb
jbe
hlt
mov
out
pushf
mov
mul
or
(bad)
push
popf
sbb
fs
mov
mov
nop
mov
add
leave
jp
and
adc
dec
mov
adc
idiv
or
mov
std
(bad)
cli
fwait
push
outs
jp
retf
cmp
jg
mov
js
jne
popa
sbb
outs
mov
push
jae
sub
sbb
jns
add
or
sbb
push
pop
jae
mov
dec
xor
aas
jae
cmp
sub
pop
lahf
sub
cmp
ds
adc
mov
xor
dec
add
pop
adc
jg
fnstcw
fs
and
outs
pusha
fs
sub
jns
add
dec
pop
inc
pop
add
or
add
xor
pop
jno
xor
adc
jno
std
test
push
dec
cmp
adc
gs
les
jp
addr16
inc
sbb
and
imul
sub
jle
addr16
jb
jle
push
outs
das
ss
sbb
wbinvd
or
outs
bound
jg
cs
dec
xor
sub
jns
jg
sbb
cmp
cmp
daa
ss
and
push
or
popa
imul
jb
or
js
push
imul
jns
outs
or
push
xor
cmp
inc
dec
push
outs
jg
pop
jg
aas
cmp
jns
jg
sbb
das
cmp
cmp
movhps
lods
add
imul
or
sbb
js
sbb
jns
outs
cmp
cmp
ss
push
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
cmp
cmp
das
ss
sbb
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
and
xchg
cmp
das
cmp
pop
push
cld
or
imul
jg
sub
ja
jle
idiv
sbb
jns
outs
push
cmp
aaa
sbb
test
movhps
test
shr
push
jns
pop
jl
sbb
js
pop
push
jns
outs
push
cmp
cmp
das
lock
sbb
or
push
push
jge
jg
sbb
jg
fdivr
outs
sub
hlt
sbb
xor
or
pop
or
ins
arpl
ins
aad
jg
or
jbe
fidivr
sbb
fisubr
cmp
in
sbb
sbb
outs
inc
outs
push
sbb
dec
jns
sbb
js
sbb
sbb
ds
xor
bound
sbb
or
push
push
jns
jg
sbb
and
cmp
xor
pop
push
dec
add
popa
push
jns
sbb
jo
jns
sbb
jno
push
jns
movs
data16
cmp
xor
nop
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
push
cmp
and
aaa
xor
or
jo
pusha
push
ins
jg
sbb
js
bound
sbb
jns
outs
das
cmp
cmp
add
mov
jae
push
jns
jg
sbb
fs
jns
outs
cmp
cmp
ss
add
push
jae
jo
pusha
jns
jg
sbb
jg
adc
jns
outs
or
cs
daa
cmps
sbb
push
aas
or
push
outs
jns
jl
sbb
xchg
outs
scas
cmp
cmp
mov
pop
addr16
sbb
pop
dec
imul
sbb
jns
jg
cmp
js
sbb
popa
mov
cmp
cmp
push
(bad)
xor
in
pop
mov
or
dec
outs
push
je
(bad)
jg
sbb
pop
jns
jg
packuswb
cmp
adc
or
or
outs
jg
sbb
jno
jge
sbb
js
cmp
jns
outs
imul
aaa
xor
sbb
dec
or
dec
outs
ins
push
jg
lahf
jg
pop
dec
jns
sbb
pop
sbb
das
cmp
inc
sub
xor
gs
push
push
or
push
ins
jg
cmp
jns
int
es
das
cmp
cmp
aaa
sahf
xor
test
push
loopne
jge
fwait
pop
sbb
js
jns
rcr
jns
outs
ret
sbb
cmp
mov
or
outs
js
out
jnp
sbb
jns
pop
js
jg
push
outs
sub
pop
sbb
gs
sbb
or
ror
outs
outs
push
sbb
jg
aas
jg
jns
outs
jns
push
cmp
cmp
sbb
or
push
pusha
jg
jge
sbb
pop
jns
jg
sbb
cmp
cmp
das
cmp
push
nop
push
mov
inc
dec
outs
jg
sbb
jns
jnp
push
jae
xor
jg
sbb
sub
xchg
cmp
das
cmp
sbb
or
mov
arpl
pop
jns
jg
sbb
sbb
ja
ja
sbb
das
cmp
xor
sbb
push
or
imul
cmp
sbb
jmp
pop
outs
jns
outs
cmp
cmp
nop
push
cmps
or
push
outs
jg
sbb
jg
jg
sbb
jle
sbb
jns
imul
sub
xor
sbb
wbinvd
push
ins
imul
sbb
jns
jp
sbb
js
sbb
sbb
cmp
imul
gs
or
push
ins
jg
sbb
mov
imul
rcr
jns
outs
xchg
sbb
xor
mov
sbb
outs
jge
jp
rcr
jns
jg
sbb
js
sbb
jns
outs
and
sar
das
and
add
push
loopne
xor
jns
jg
sbb
js
sbb
jns
outs
cmp
pop
cmp
sub
xor
and
pop
pop
aaa
or
dec
outs
pop
push
inc
jns
jl
sbb
xor
outs
xchg
sub
mov
sahf
xor
mov
sbb
outs
jge
pop
jg
pop
scas
js
jg
sbb
jns
sbb
jge
ins
xchg
xchg
cmp
sub
pop
pop
test
cmps
or
push
jne
rcr
cmp
mov
push
mov
push
push
cmp
cmp
jb
mul
sbb
(bad)
ins
adc
push
cmps
jns
jg
push
cmps
js
sbb
jnp
outs
ds
aam
and
and
js
dec
or
imul
jle
sbb
jnp
jg
sbb
jg
ins
(bad)
cmp
xor
arpl
pop
jo
std
ud2
imul
adc
jle
jl
sbb
push
js
outs
bound
adc
push
sub
aas
fs
sbb
pop
daa
or
ds
and
js
pop
dec
js
js
sbb
js
sbb
jp
outs
mov
dec
cmp
ss
adc
dec
imul
jle
sbb
jp
jle
sbb
cmp
cmp
xor
gs
inc
pop
cmps
or
push
xlat
jns
jg
sbb
push
js
outs
fwait
cmp
xor
mov
push
and
jns
jge
pop
push
js
push
mov
outs
sbb
enter
or
sbb
and
imul
push
sar
jg
push
(bad)
jnp
sbb
jns
outs
outs
cmp
cmp
das
jne
add
push
adc
outs
sbb
sbb
jns
jg
sbb
js
sbb
jns
outs
sar
cmp
das
jb
xchg
gs
xor
push
adc
jns
jg
sbb
cmp
outs
in
jg
xchg
das
in
push
lods
sbb
test
stos
outs
add
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
iret
cmp
cmp
aad
xchg
gs
sbb
dec
push
jae
pop
sbb
pop
sbb
aas
js
outs
imul
cmp
das
sub
pop
push
outs
or
push
inc
jg
sbb
js
jg
sbb
jns
sbb
jns
outs
add
jg
aad
sbb
pop
xor
dec
or
push
outs
jae
cs
sbb
loopne
fnstsw
sbb
js
outs
add
pop
cmp
jecxz
add
pop
inc
adc
or
push
jge
push
outs
jp
jl
pop
cli
jnp
sbb
jns
outs
sub
cmp
sbb
xor
push
push
or
imul
jns
jnp
sbb
jl
push
outs
sub
cmp
das
xor
push
push
pop
or
push
pop
jg
sbb
jns
jg
sbb
sbb
mov
ss
sbb
push
or
push
ins
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
add
sbb
push
jg
sbb
js
jg
js
push
jns
outs
das
cmp
cmp
das
cmps
and
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
or
push
outs
das
cmp
xor
or
sbb
outs
xchg
pusha
outs
jg
sbb
jns
ja
sbb
js
sbb
jno
outs
jge
push
cmp
cs
aaa
jae
ins
or
or
outs
add
adc
jle
xor
outs
adc
push
dec
push
inc
je
gs
sbb
outs
add
movq
jge
push
dec
sbb
jae
or
jns
push
outs
or
dec
push
dec
inc
xor
and
add
push
outs
and
adc
jg
or
adc
jns
push
jns
pop
pop
push
push
pop
push
pop
pop
pop
js
outs
outs
jl
inc
pusha
push
push
sbb
jne
or
adc
jge
adc
xor
or
pop
pop
dec
pop
inc
pop
data16
jns
jp
jge
and
push
adc
pop
or
sbb
cmp
pop
push
pop
dec
inc
dec
outs
push
jnp
je
dec
data16
add
push
sbb
push
js
adc
or
or
push
imul
push
pop
pop
push
inc
jae
dec
js
jae
push
add
ds
or
jg
add
sbb
inc
ins
push
pop
pop
jno
pop
sbb
bound
jp
jnp
and
push
or
adc
outs
jg
jne
pop
push
dec
push
push
pop
sbb
push
jp
jne
outs
jp
or
or
pop
sbb
outs
jg
jns
or
push
push
sbb
dec
dec
inc
inc
push
inc
bound
cmovle
jp
inc
sub
adc
push
xor
jbe
sbb
pusha
pop
push
pop
push
pop
ss
dec
es
jo
arpl
jns
or
or
adc
or
daa
cmp
jle
dec
pop
dec
push
inc
inc
pop
jb
jge
je
pop
jp
sbb
or
sub
pcmpeqw
sbb
jns
jns
xor
ins
pop
push
jl
inc
pusha
or
js
pop
ins
arpl
sbb
push
sbb
sbb
push
sbb
jb
inc
pop
push
pop
jne
(bad)
jl
push
dec
fs
sbb
push
jns
es
invd
jo
sbb
push
dec
pop
dec
gs
pop
push
inc
push
add
inc
inc
imul
sbb
pop
or
or
push
sbb
or
or
or
dec
dec
push
das
gs
adc
aaa
push
popa
fs
pop
or
sbb
adc
sbb
jne
push
jns
wbinvd
jo
dec
pop
dec
push
pop
inc
bound
pop
js
pusha
addr16
sbb
pop
or
xor
js
adc
sbb
or
sbb
cmp
dec
pop
push
ja
imul
jnp
outs
sub
or
sbb
jae
pop
pop
push
pop
pop
push
js
pop
pop
push
cmp
pusha
jo
jg
ins
jns
or
sbb
or
add
sbb
or
jne
sbb
outs
jge
push
dec
pop
inc
push
jge
or
imul
jb
sbb
or
push
cmp
or
jo
or
pop
dec
push
pop
push
pop
ss
adc
jae
ins
jge
or
push
or
adc
sbb
js
sbb
jge
adc
dec
pop
cmp
pop
push
xor
pusha
imul
add
clts
or
sbb
sub
jno
sub
ins
sbb
jge
dec
push
pop
cmp
inc
popa
outs
adc
pop
jge
add
or
or
or
or
xor
pop
pop
push
pop
push
das
jne
jae
jnp
inc
dec
inc
addr16
or
or
jne
or
push
jg
js
jne
or
dec
addr16
pop
inc
push
js
push
inc
push
inc
jo
sbb
sbb
sub
adc
adc
pop
or
jne
or
or
ins
push
dec
push
dec
push
data16
push
jnp
imul
sbb
sbb
or
or
jno
sub
or
or
ins
pop
pop
pop
push
xor
jo
imul
pop
or
sbb
sbb
push
sbb
sbb
jns
dec
imul
inc
push
je
adc
jnp
jp
or
or
daa
push
sbb
sbb
cmp
jno
adc
jne
adc
dec
push
push
pop
inc
push
push
ss
ins
jae
daa
pop
sbb
or
jb
sbb
adc
dec
sbb
pcmpeqw
outs
outs
int
mov
xlat
scas
mov
pop
imul
add
or
es
or
outs
sbb
push
push
pop
sbb
dec
dec
push
push
inc
dec
jae
jae
jnp
js
push
outs
sbb
or
or
adc
adc
dec
sbb
push
jo
sbb
cmp
jns
push
inc
dec
push
push
push
adc
jo
jnp
outs
push
or
pop
jnp
sub
or
adc
jns
or
outs
popa
imul
pop
pusha
bound
or
or
or
xor
or
ins
sbb
sbb
sbb
jne
add
push
inc
pop
push
inc
gs
jae
pop
push
inc
dec
push
add
or
or
sbb
jns
adc
inc
push
pop
cmp
inc
push
push
add
push
ja
ins
dec
or
hlt
fwait
pushf
hlt
fwait
pushf
hlt
js
push
fwait
pushf
hlt
fwait
pushf
in
mov
ss
pusha
push
push
or
or
outs
sub
outs
or
push
sub
pop
or
sbb
outs
outs
int
mov
mov
aam
popf
xchg
pusha
jnp
sbb
jg
gs
jns
push
push
xor
jae
or
pop
dec
push
push
pop
das
jnp
jnp
jge
dec
bound
add
sbb
adc
ss
or
sbb
inc
aas
inc
dec
push
dec
pop
inc
pop
xor
js
push
dec
fs
sbb
push
js
js
push
or
sbb
sbb
or
jnp
push
inc
dec
ss
jns
jge
js
push
jmp
jecxz
out
in
out
hlt
fwait
pushf
hlt
fwait
pushf
hlt
call
cmp
dec
push
pop
push
dec
das
gs
adc
aaa
inc
imul
or
pop
pop
add
jns
push
jo
sbb
push
das
pop
pop
dec
push
push
pop
jae
pop
imul
push
and
pop
or
push
js
pushf
hlt
fwait
pushf
in
mov
aam
popf
xchg
sub
loop
out
jecxz
push
(bad)
push
(bad)
push
(bad)
push
fwait
pushf
hlt
jns
out
movs
fidivr
xlat
xchg
out
in
popf
xchg
hlt
mov
out
jecxz
push
sbb
sbb
xor
jbe
sbb
sub
pop
dec
inc
inc
pop
push
push
push
jl
je
bound
cmp
pop
jnp
ds
xor
js
xor
sbb
pop
jae
dec
pop
xor
jo
pusha
push
outs
cmp
or
jns
push
pop
adc
sbb
or
inc
push
inc
push
xor
imul
push
or
outs
ud2
or
pop
or
jns
sbb
js
jns
xor
add
pop
dec
inc
jge
inc
jns
jge
jl
jp
outs
or
cmp
bndstx
js
sbb
sbb
pop
das
push
pop
push
ins
dec
inc
jae
subps
push
inc
dec
add
pop
add
nop
or
jae
sbb
inc
es
pop
push
cmp
inc
bound
data16
push
imul
daa
jg
jne
cmp
push
jns
or
outs
jg
push
js
inc
pop
push
jae
(bad)
jl
push
dec
arpl
sbb
ud2
or
push
sbb
jnp
adc
or
jns
sbb
pop
dec
push
andnps
adc
ins
outs
imul
das
pop
add
adc
adc
xor
sbb
dec
pop
push
dec
push
adc
or
outs
jnp
dec
add
push
dec
or
and
dec
sub
sbb
sbb
push
sbb
add
push
sqrtps
cmp
push
add
pop
pop
jge
sbb
cmp
sub
popa
jno
jge
inc
push
adc
cmp
jp
add
sbb
or
push
imul
adc
pop
imul
inc
pop
push
jg
jp
jne
and
dec
push
or
pop
push
jp
sbb
sbb
jne
sbb
sbb
sbb
inc
push
push
jae
ins
jl
js
ins
and
sbb
adc
pop
imul
cmp
or
imul
inc
inc
pop
gs
jno
ss
outs
or
or
jns
sub
sbb
jae
pop
pop
push
inc
je
inc
inc
jg
jp
jl
dec
jp
or
cmp
or
or
jne
or
outs
sbb
push
pop
push
dec
jg
pop
jb
ins
imul
sbb
or
or
jns
sbb
sub
push
sbb
jno
or
pop
dec
dec
push
push
pop
inc
push
push
and
outs
jl
ins
gs
or
or
jne
pop
pop
or
push
sbb
sbb
sbb
pop
push
pop
pop
push
jne
data16
je
jle
dec
jg
sbb
or
sbb
jns
adc
push
adc
or
push
jb
sbb
push
push
pop
dec
push
pop
inc
inc
je
adc
jnp
jp
or
sbb
sbb
add
cmp
or
adc
adc
push
pop
push
pop
dec
inc
dec
ss
push
push
jnp
ja
bound
cmp
sbb
or
or
sbb
jle
outs
(bad)
cmp
repnz
nop
sahf
jp
inc
mov
add
movs
mov
add
popa
sub
arpl
xor
cmp
fs
or
push
wbinvd
or
outs
outs
push
jno
or
push
xor
sub
push
pop
pop
cmp
sbb
sbb
sbb
outs
outs
jp
jo
ins
jne
jns
push
addr16
ja
jg
ins
popa
sbb
das
daa
aaa
aaa
daa
add
lgdtd
sbb
or
jp
jns
push
addr16
pop
jle
ins
pusha
js
imul
cs
cmp
and
adc
sbb
sbb
movq
data16
outs
jg
adc
jle
ins
pop
sbb
imul
cmp
cmp
cmp
cmp
cmp
sysret
sbb
and
inc
cmp
jno
or
sbb
sbb
jl
sbb
jno
outs
das
ss
sbb
inc
jp
ins
jl
jg
or
outs
jp
jae
sbb
xor
push
sub
sbb
jno
jge
sub
cmp
bound
inc
add
jl
js
push
imul
sbb
add
cmp
jp
pop
js
adc
(bad)
xor
and
adc
cvttps2pi
aaa
or
ins
outs
outs
jno
cmp
ja
js
add
addr16
imul
xor
fs
add
or
push
cmp
outs
jle
outs
js
sbb
adc
jge
js
dec
push
or
inc
push
ins
pop
push
add
adc
jl
and
pop
sbb
or
dec
adc
ins
aaa
or
(bad)
adc
aas
pop
push
dec
push
push
inc
pop
daa
push
pop
push
ins
jae
push
inc
push
sbb
clts
or
cmp
or
es
ss
outs
sbb
pop
pop
push
ss
sbb
or
sbb
jp
jo
ins
jns
ins
jns
jne
movq
ins
jns
dec
cmp
aas
xor
ss
cmp
imul
ins
outs
jg
dec
jp
push
jle
add
pop
js
ins
sub
push
xor
inc
push
add
or
or
push
add
sbb
add
ja
arpl
cmp
das
sub
ja
adc
adc
push
jp
jb
push
jg
sbb
jp
jp
jnp
jp
sbb
xor
xor
jnp
jle
push
dec
push
jae
data16
cmp
js
ja
pop
jle
or
push
jnp
dec
sub
es
cmp
js
sbb
adc
mov
push
jbe
push
ins
stc
popf
arpl
cli
jne
adc
sub
ds
add
adc
outs
push
arpl
pop
jnp
ins
adc
jnp
js
push
jl
outs
cmp
sub
mov
cmp
sbb
add
jne
dec
add
push
jno
adc
pop
jnp
push
adc
or
sub
adc
add
adc
jae
addr16
push
(bad)
call
jo
jno
(bad)
clc
push
out
mov
xor
aaa
push
jo
popf
mov
adc
ins
dec
outs
jl
out
jp
sbb
pop
sbb
pop
jns
push
cmp
aas
cmp
jbe
push
sbb
or
push
ins
addr16
push
movq
jbe
jp
jns
bound
das
cmp
xor
or
or
imul
jp
push
jno
adc
jns
or
inc
pop
cmp
inc
nop
pusha
push
jg
sbb
js
jle
dec
jge
outs
push
or
inc
jge
pop
push
pop
inc
pop
jns
pop
jne
jns
jp
fs
dec
push
sub
dec
sbb
js
jg
jl
jg
sbb
das
cmp
cmp
js
xor
sbb
push
or
push
outs
jg
sbb
jns
jg
sbb
das
jl
jg
sbb
das
cmp
cmp
gs
pop
jbe
dec
jno
and
add
jae
sbb
push
sbb
adc
sbb
jns
dec
das
sbb
xor
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
pushf
jg
jns
jg
sbb
das
cmp
cmp
nop
push
push
mov
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
ja
cmp
ss
sbb
push
or
pop
outs
outs
push
and
jg
sbb
js
sbb
jns
outs
popa
cmp
das
js
push
gs
sbb
mov
xchg
jns
jg
sbb
js
jg
jns
jg
sbb
adc
cmp
xor
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
imul
push
xor
jg
popa
or
push
push
jns
sub
jg
sbb
js
sbb
jns
outs
pop
cmp
pop
das
pop
xor
sbb
mov
outs
outs
push
or
sbb
js
sbb
jns
outs
dec
cmp
pop
das
push
xor
adc
pop
outs
pop
push
dec
jns
jg
sbb
js
sbb
jns
outs
cmp
pop
das
pop
xor
ja
jp
js
imul
sbb
jns
jg
sbb
js
sbb
jns
outs
dec
cmp
push
das
inc
xor
ins
push
or
pop
outs
outs
push
push
jns
jg
sbb
js
sbb
jns
outs
pop
cmp
cmp
jo
jg
arpl
outs
push
pop
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
pop
cmp
xor
sbb
inc
or
sbb
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
pop
cmp
inc
das
sbb
jl
push
or
push
and
sbb
jns
jg
sbb
js
sbb
jns
outs
pop
cmp
push
das
pop
xor
cmp
push
or
push
and
sbb
jns
jg
sbb
js
sbb
jns
outs
inc
cmp
push
das
pop
xor
jl
push
or
or
push
pop
jns
jg
sbb
js
sbb
jns
outs
pop
cmp
das
inc
xor
dec
push
imul
push
add
sbb
jns
jg
sbb
js
sbb
jns
outs
pop
cmp
cmp
gs
sbb
outs
push
add
sbb
jns
jg
sbb
js
sbb
jns
outs
inc
cmp
cmp
and
cmp
outs
outs
push
jg
sbb
js
jg
jns
jg
sbb
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
dec
jp
adc
sbb
dec
jns
jg
sbb
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
push
outs
jg
sbb
jns
jg
sbb
js
sbb
jns
outs
das
cmp
cmp
nop
push
push
or
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
les
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
