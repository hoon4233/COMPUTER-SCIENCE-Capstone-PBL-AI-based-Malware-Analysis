push
mov
push
and
sub
mov
lea
mov
call
sub
mov
mov
mov
call
sub
mov
lea
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
lea
mov
mov
call
add
pop
ret
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
cmp
sete
movzx
pop
ret
int3
push
mov
push
push
push
push
mov
mov
mov
mov
call
mov
mov
call
sub
lea
mov
call
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
or
cmp
mov
mov
cmovne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
shr
mov
mul
shr
cmp
mov
cmovbe
nop
cmp
jg
cmp
jg
cmp
jne
jmp
nop
cmp
jne
mov
mov
mov
mov
shr
mov
sub
mov
cmp
jbe
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
mov
mov
call
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
lea
mov
lea
call
sub
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
cmp
jb
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
shr
add
mov
jmp
cmp
je
cmp
jne
mov
jmp
mov
mov
jmp
cmp
jne
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
pop
ret
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
test
mov
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
test
mov
mov
cmovne
jmp
nop
cmp
jne
jmp
nop
cmp
jne
mov
mov
cmp
ja
mov
jmp
cmp
jne
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
mov
call
mov
jmp
cmp
je
cmp
jne
mov
jmp
mov
mov
mov
inc
mov
mov
lea
call
sub
mov
jmp
cmp
jne
mov
jmp
mov
mov
mov
mov
call
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
nop
mov
cmp
jg
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
sub
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
nop
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
nop
mov
mov
jmp
nop
mov
cmp
jne
mov
cmp
jne
jmp
nop
mov
cmp
mov
je
mov
cmp
je
cmp
jne
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
sar
imul
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
jmp
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
call
mov
mov
pop
pop
ret
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
test
mov
mov
cmove
mov
test
mov
cmove
mov
test
mov
cmove
mov
test
mov
cmove
mov
cmp
mov
mov
mov
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
cmove
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
test
mov
mov
cmove
mov
mov
test
mov
cmove
jmp
mov
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
jmp
nop
cmp
jne
jmp
nop
cmp
jne
mov
test
mov
cmovne
jmp
cmp
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
mov
jne
mov
jmp
cmp
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
call
sub
mov
jmp
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
mov
jne
jmp
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
mov
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
mov
jne
mov
jmp
cmp
jg
cmp
mov
jne
mov
jmp
cmp
jg
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
mov
jne
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
mov
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
test
mov
mov
jmp
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
mov
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
mov
jne
mov
test
mov
mov
cmovne
jmp
cmp
mov
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
mov
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
mov
mov
test
mov
mov
cmovne
mov
jmp
cmp
mov
jne
mov
test
mov
mov
cmovne
jmp
mov
mov
and
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
setne
movzx
pop
ret
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
jmp
nop
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
mov
cmp
mov
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
jmp
nop
mov
call
mov
mov
jmp
data16
mov
cmp
je
cmp
je
cmp
jne
mov
call
mov
mov
call
mov
cmp
jne
jmp
nop
jmp
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
call
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
mov
lea
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
lea
mov
call
sub
mov
mov
mov
jmp
nop
mov
mov
mov
call
sub
test
mov
cmovne
cmp
jg
cmp
je
jmp
cmp
jg
cmp
je
cmp
jne
mov
mov
mov
jmp
data16
cmp
jne
mov
mov
call
sub
mov
jmp
mov
mov
call
mov
mov
call
sub
mov
mov
mov
lea
call
sub
test
mov
cmovne
jmp
cmp
jne
mov
lea
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
call
sub
mov
nop
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
sub
test
mov
cmovne
jmp
nop
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
lea
jmp
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
cmp
je
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
lea
call
sub
mov
add
mov
jmp
mov
mov
sub
mov
mov
mov
mov
cmp
je
mov
sar
jmp
cmp
jne
lea
pop
pop
pop
pop
ret
int3
int3
push
mov
push
mov
call
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
push
push
sub
mov
mov
mov
mov
jmp
add
add
xchg
mov
cmp
mov
cmovne
mov
jmp
nop
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
jg
cmp
mov
je
mov
cmp
je
cmp
mov
jne
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
data16
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
test
mov
mov
cmovne
mov
mov
mov
mov
mov
jmp
mov
nop
cmp
jg
cmp
jne
mov
call
mov
cmp
jne
jmp
data16
cmp
jg
cmp
jne
mov
mov
jmp
nop
cmp
jg
cmp
jne
mov
mov
mov
lea
call
sub
cmp
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
lea
call
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
cmp
setne
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
lea
mov
mov
mov
call
sub
lea
mov
mov
mov
lea
mov
call
sub
mov
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
mov
lea
call
sub
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
cmp
setne
mov
mov
mov
mov
mov
movzx
mov
lea
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
lea
jmp
cmp
jg
cmp
jne
mov
lea
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
mov
mov
lea
call
sub
xor
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
lea
call
mov
mov
call
sub
mov
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
lea
jmp
cmp
jg
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
cmp
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
call
jmp
cmp
je
cmp
jne
mov
jmp
mov
jmp
cmp
jne
mov
mov
mov
call
sub
mov
lea
mov
lea
mov
mov
mov
lea
mov
call
jmp
mov
lea
pop
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
call
mov
mov
add
pop
pop
ret
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
mov
pop
ret
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
jmp
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
sar
imul
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
jmp
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
lea
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
mov
cmp
jg
cmp
jne
mov
call
mov
mov
call
jmp
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
call
mov
mov
jmp
data16
cmp
jne
mov
call
mov
cmp
je
mov
jmp
cmp
jne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
mov
mov
mov
jmp
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
mov
call
sub
mov
call
mov
mov
jmp
cmp
jne
mov
mov
mov
call
mov
jmp
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
call
mov
jmp
cmp
jne
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
mov
mov
call
mov
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jne
mov
mov
mov
mov
lea
call
sub
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jne
mov
call
mov
mov
call
jmp
cmp
jne
mov
call
mov
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
jmp
cmp
jne
mov
mov
call
mov
mov
cmp
je
mov
jmp
cmp
jne
mov
call
mov
cmp
je
mov
jmp
cmp
jne
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
movzx
cmp
sete
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
lea
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
cmp
mov
mov
cmove
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
mov
mov
call
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
mov
call
sub
mov
call
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
lea
call
mov
mov
call
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
dec
mov
jmp
cmp
je
cmp
jne
mov
mov
call
jmp
mov
call
mov
cmp
je
mov
jmp
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
pop
ret
mov
call
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
shl
add
pop
ret
int3
push
mov
push
mov
lea
call
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
cmp
jg
cmp
jne
mov
jmp
nop
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
mov
add
jmp
data16
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
lea
mov
call
sub
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
jmp
data16
mov
call
lea
lea
mov
mov
call
mov
cmp
jg
cmp
je
cmp
jne
mov
mov
cmp
je
mov
jmp
nop
cmp
je
jmp
nop
movzx
mov
call
lea
mov
mov
mov
call
mov
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
sar
pop
ret
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
sar
imul
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
xchg
jmp
mov
imul
add
mov
mov
imul
add
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
int3
push
mov
push
push
push
sub
call
mov
shr
mov
sub
mov
mov
mov
jmp
cmp
mov
mov
cmovb
mov
nop
mov
shr
add
mov
mov
mov
jmp
xchg
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
xor
mov
cmp
je
cmp
jle
cmp
mov
je
cmp
je
cmp
jne
jmp
data16
mov
cmp
mov
je
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
nop
add
add
cmp
mov
cmovne
mov
jmp
nop
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
cmp
jg
cmp
mov
je
mov
cmp
je
jmp
xchg
cmp
jne
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
movsd
movsd
lea
lea
mov
call
sub
lea
add
mov
call
sub
mov
add
pop
pop
pop
ret
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
imul
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
mov
je
cmp
jne
mov
call
test
mov
cmove
jmp
cmp
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
call
sub
mov
nop
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
call
sub
test
mov
cmovne
jmp
data16
cmp
jne
jmp
nop
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
mov
sub
sar
mov
mov
mov
mov
cmp
je
mov
imul
jmp
cmp
je
cmp
jne
mov
mov
mov
mov
mov
imul
add
mov
mov
mov
mov
lea
call
sub
mov
add
mov
jmp
mov
mov
mov
mov
cmp
je
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
jmp
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
sar
imul
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
jmp
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
lea
jmp
sub
mov
add
mov
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
sub
mov
mov
mov
mov
cmp
je
mov
sar
jmp
data16
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
jmp
data16
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
call
jmp
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
jne
jmp
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
mov
mov
cmp
je
mov
jmp
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
jmp
nop
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
mov
cmp
mov
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
sete
movzx
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
mov
ret
mov
ret
cld
push
add
add
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
mov
push
push
mov
call
mov
mov
pop
pop
ret
mov
jmp
push
mov
sub
jmp
push
call
pop
test
je
push
call
pop
test
je
leave
ret
push
lea
push
lea
mov
call
push
lea
push
mov
call
int3
push
mov
push
mov
mov
call
test
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pop
pop
add
mov
adc
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
das
pop
add
sbb
add
adc
add
or
add
add
add
cld
pop
add
hlt
pop
add
in
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
pop
add
push
pop
add
pop
pop
add
jo
add
mov
pop
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
pop
add
xor
add
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
nop
pop
add
cwde
pop
add
mov
pop
add
mov
add
mov
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
add
in
pop
add
cld
pop
add
adc
adc
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
mov
pop
jmp
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
jmp
call
mov
imul
add
mov
shr
and
mov
ret
push
mov
call
mov
mov
pop
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
sub
lea
push
push
push
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
cmp
mov
movzx
je
mov
and
mov
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
jne
cmp
je
mov
and
jmp
cmp
jne
cmp
movzx
je
mov
and
jmp
movzx
movzx
shl
or
cmp
je
mov
and
mov
pop
pop
leave
ret
push
mov
cmp
jne
mov
lea
cmp
ja
add
mov
pop
ret
push
push
call
pop
pop
pop
ret
int3
int3
int3
mov
mov
push
push
push
cmp
jb
ja
movzx
mov
shl
or
je
movd
pshuflw
movlhps
pxor
mov
or
movzx
add
test
je
test
jne
movdqa
pcmpeqb
pmovmskb
test
jne
mov
movd
mov
and
cmp
ja
movdqu
pxor
pcmpeqb
pcmpeqb
por
pmovmskb
add
test
je
bsf
sub
add
movzx
test
je
add
cmp
jne
mov
lea
mov
test
jne
and
cmp
ja
movdqu
movdqa
pcmpeqb
pcmpeqb
pcmpeqb
por
pmovmskb
test
jne
add
add
jmp
bsf
add
add
movzx
test
je
cmp
jne
add
add
jmp
dec
pop
pop
pop
ret
xor
pop
pop
pop
ret
cmp
je
mov
mov
and
cmp
ja
movdqu
jmp
mov
movzx
add
pinsrb
psrldq
dec
je
test
je
jmp
add
movd
mov
and
cmp
jbe
movzx
test
je
cmp
je
add
jmp
add
pcmpistri
ja
jae
sub
add
mov
mov
mov
and
cmp
ja
mov
and
cmp
ja
movdqu
add
add
pcmpistri
jno
jns
jmp
movzx
test
je
cmp
jne
add
add
jmp
mov
mov
test
je
mov
test
je
mov
mov
mov
add
cmp
je
test
je
mov
add
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
add
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jb
movzx
mov
shl
or
movd
pshuflw
movlhps
mov
mov
or
and
shl
sub
movdqu
pxor
pcmpeqb
pcmpeqb
por
pmovmskb
and
jne
or
add
jmp
bsf
add
movd
xor
cmp
cmovne
ret
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
lea
pop
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
test
jl
jg
cmp
jbe
or
mov
mov
test
je
mov
leave
ret
jmp
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
in
push
add
cmp
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
imul
adc
add
mov
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubr
adc
imul
adc
push
adc
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
pushf
push
adc
push
adc
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
adc
imul
sub
adc
imul
cmp
adc
add
dec
imul
pop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
je
add
jl
add
mov
adc
inc
and
pop
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
mov
push
mov
mov
push
sub
je
dec
je
dec
je
dec
je
mov
dec
je
mov
push
cmp
jb
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
push
pop
sub
add
add
cmp
jae
add
add
cmp
ja
jmp
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
xor
mov
pop
jmp
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
jmp
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
xor
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
jmp
mov
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
mov
jmp
mov
mov
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
jmp
mov
mov
movzx
movzx
sub
je
xor
test
setg
lea
test
jne
movzx
movzx
jmp
mov
movzx
mov
movzx
jmp
xor
pop
pop
pop
ret
lea
(bad)
jne
adc
jns
adc
jle
adc
adc
add
pop
jns
adc
add
adc
js
adc
jge
adc
add
adc
add
jno
add
cmps
add
lea
adc
jnp
adc
add
div
adc
jbe
adc
add
js
add
pop
jb
adc
add
lods
jp
adc
jle
adc
jno
adc
jne
adc
jle
adc
in
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
call
pop
ret
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
push
call
test
je
call
push
call
push
push
call
add
jmp
push
mov
mov
mov
mov
and
not
and
or
mov
pop
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
push
mov
push
mov
push
mov
movzx
inc
lea
cmp
ja
add
movzx
inc
lea
cmp
ja
add
test
je
cmp
je
sub
pop
mov
pop
pop
ret
push
mov
cmp
jne
cmp
jne
call
mov
call
mov
pop
ret
cmp
je
pop
jmp
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
cmp
jne
push
push
call
pop
pop
mov
jmp
sub
movzx
lea
push
push
call
mov
movzx
lea
push
push
call
add
inc
test
je
cmp
je
sub
cmp
je
mov
and
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
add
xor
je
sub
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
add
xor
je
sub
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
add
movzx
movzx
jmp
mov
push
cmp
jae
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
sub
movzx
movzx
jmp
mov
cmp
jae
push
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
push
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
cmp
push
jne
mov
xor
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
test
je
push
push
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
jmp
push
push
push
push
call
add
pop
leave
ret
push
mov
sub
push
push
xor
push
cmp
je
mov
test
jne
call
mov
call
mov
jmp
mov
test
je
push
lea
call
mov
cmp
jne
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
jmp
lea
push
movzx
push
call
movzx
lea
push
movzx
push
call
add
dec
movzx
lea
lea
je
test
je
cmp
je
movzx
movzx
sub
cmp
je
mov
and
mov
pop
pop
pop
leave
ret
push
mov
sub
lea
push
push
call
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
cmp
mov
movzx
je
mov
and
mov
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
jne
cmp
je
mov
and
jmp
cmp
jne
cmp
movzx
je
mov
and
jmp
movzx
movzx
shl
or
cmp
je
mov
and
mov
pop
leave
ret
push
mov
cmp
jne
mov
lea
cmp
ja
add
mov
pop
ret
push
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
dec
jns
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
xchg
mul
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
dec
jns
neg
neg
sbb
pop
pop
ret
push
mov
push
push
and
add
push
mov
mov
mov
mov
mov
sub
cmp
jl
movzx
movd
pshuflw
pshufd
mov
and
cmp
ja
movdqu
pxor
pcmpeqw
pcmpeqw
por
pmovmskb
test
jne
add
jmp
cmp
je
add
movzx
test
jne
xor
cmp
setne
dec
and
jmp
movzx
cmp
je
test
je
add
jmp
bsf
mov
add
jmp
xor
jmp
mov
mov
pop
mov
pop
ret
push
mov
cmp
jne
mov
test
jne
call
mov
call
mov
pop
ret
mov
test
je
push
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
movzx
movzx
pop
pop
sub
pop
pop
ret
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
push
cmp
jne
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
push
lea
call
add
movzx
lea
test
je
cmp
je
movzx
movzx
sub
pop
cmp
pop
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
and
push
push
pop
xor
lea
rep
pop
cmp
jne
call
mov
call
or
leave
ret
mov
test
je
push
push
mov
push
mov
push
lea
push
mov
mov
call
add
dec
mov
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
xor
pop
xor
lea
mov
rep
pop
cmp
jne
call
mov
call
or
leave
ret
push
lea
push
mov
push
mov
push
mov
mov
call
add
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
xor
push
xor
pop
lea
mov
rep
cmp
jne
call
mov
call
or
jmp
mov
test
je
push
push
mov
push
mov
push
lea
push
mov
mov
call
add
dec
mov
js
mov
mov
mov
inc
mov
jmp
lea
push
push
call
pop
pop
mov
dec
js
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
pop
leave
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
sub
ret
push
mov
mov
mov
push
mov
sub
movzx
mov
lea
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
push
push
push
push
push
call
pop
pop
cmp
je
lea
push
call
or
je
mov
cmp
jne
mov
or
je
push
call
jmp
mov
push
push
call
add
push
mov
call
mov
mov
mov
mov
mov
cmp
adc
mov
add
jmp
mov
pop
ret
push
push
call
mov
cmp
jne
call
test
jne
xor
jmp
call
test
jne
call
jmp
call
call
mov
call
mov
call
test
jns
call
jmp
call
test
js
call
test
js
push
call
pop
test
jne
inc
jmp
call
jmp
test
jne
mov
test
jle
dec
mov
and
cmp
jne
call
call
mov
test
jne
call
call
call
mov
call
jmp
mov
test
jne
cmp
je
call
ret
jmp
cmp
jne
push
call
pop
test
jne
push
push
call
pop
pop
mov
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
mov
or
jmp
push
call
pop
jmp
cmp
jne
push
call
pop
xor
inc
call
ret
push
mov
cmp
jne
call
push
push
push
call
add
pop
ret
push
push
call
xor
inc
mov
test
jne
cmp
je
and
cmp
je
cmp
jne
mov
test
je
push
push
push
call
mov
test
je
push
push
push
call
mov
test
je
mov
push
push
push
call
mov
mov
cmp
jne
test
jne
push
push
push
call
push
push
push
call
mov
test
je
push
push
push
call
test
je
cmp
jne
push
push
push
call
neg
sbb
and
mov
je
mov
test
je
push
push
push
call
mov
mov
mov
mov
jmp
mov
mov
push
push
push
push
push
call
add
ret
mov
mov
xor
call
ret
push
mov
cmp
jne
push
push
push
call
push
push
call
pop
pop
pop
ret
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
push
push
call
mov
mov
test
je
cmp
je
push
call
pop
add
jne
mov
push
push
call
mov
xor
pop
mov
test
je
cmp
je
push
call
pop
add
jne
mov
push
call
push
mov
call
push
call
add
mov
mov
cmp
je
cmp
je
push
call
pop
push
call
mov
mov
test
je
push
call
pop
mov
mov
test
je
push
call
pop
mov
push
call
pop
test
jne
mov
mov
cmp
je
push
call
pop
mov
pop
pop
ret
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
push
mov
mov
push
mov
and
mov
mov
push
call
mov
pop
pop
ret
push
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
mov
and
mov
mov
call
mov
pop
pop
ret
mov
jmp
push
mov
push
push
mov
mov
cmp
je
call
cmp
je
push
mov
call
jmp
mov
mov
pop
mov
pop
pop
ret
push
mov
push
mov
mov
call
test
je
push
call
pop
mov
pop
pop
ret
push
mov
cmp
push
mov
je
push
push
call
lea
push
call
pop
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
and
mov
pop
ret
mov
test
jne
mov
ret
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
sub
push
push
push
pop
mov
lea
rep
mov
pop
pop
test
je
test
je
mov
mov
mov
mov
mov
test
je
test
je
mov
lea
push
push
push
push
call
leave
ret
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
mov
mov
cmp
je
push
mov
test
jne
push
call
mov
mov
pop
push
push
call
pop
pop
push
call
pop
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
lea
push
push
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
test
je
cmp
jne
test
je
shr
cmp
jne
test
je
cmp
jne
add
add
test
jne
mov
xor
ret
jmp
int3
int3
int3
sbb
or
ret
mov
test
je
mov
add
cmp
jne
add
test
je
test
je
mov
add
cmp
jne
test
je
cmp
jne
test
je
add
jmp
push
push
call
push
call
pop
and
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
push
call
pop
and
mov
call
call
ret
mov
jmp
push
call
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
push
mov
push
mov
mov
cmp
jne
xor
leave
ret
mov
cmp
jae
movzx
mov
movzx
jmp
lea
push
push
lea
push
push
call
neg
sbb
and
movzx
movzx
and
leave
ret
push
mov
mov
test
jle
push
push
call
pop
pop
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
mov
push
push
call
pop
mov
mov
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
je
mov
mov
lea
mov
mov
sub
dec
mov
mov
test
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
cmp
je
cmp
je
mov
mov
and
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
mov
lea
push
push
call
add
mov
cmp
je
or
or
jmp
movzx
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
xor
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
test
je
test
jne
push
call
pop
mov
cmp
je
cmp
je
mov
and
sar
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
and
sar
shl
add
jmp
mov
test
jne
test
je
mov
xor
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
inc
mov
test
js
lea
cmp
ja
movsx
movsx
and
jmp
xor
mov
movsx
mov
sar
mov
mov
mov
cmp
ja
jmp
xor
or
mov
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
mov
jne
or
mov
jmp
or
mov
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
mov
add
mov
mov
test
jns
or
neg
mov
mov
jmp
mov
imul
mov
movsx
mov
add
add
mov
jmp
xor
mov
jmp
cmp
jne
mov
add
mov
test
mov
mov
jns
or
jmp
mov
imul
movsx
add
add
mov
jmp
cmp
je
cmp
je
mov
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
jmp
or
jmp
or
jmp
mov
mov
cmp
jne
mov
cmp
jne
mov
add
or
jmp
cmp
jne
mov
cmp
jne
mov
add
and
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
jmp
xor
mov
lea
push
movzx
push
call
pop
pop
test
je
lea
push
push
push
call
mov
add
mov
inc
mov
mov
test
je
lea
push
push
push
call
add
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
mov
or
mov
mov
lea
mov
test
jns
mov
jmp
test
jne
or
mov
jmp
test
jne
or
mov
mov
mov
cmp
je
mov
mov
add
mov
test
je
test
jne
mov
mov
mov
test
je
xor
dec
cmp
je
add
test
jne
sub
sar
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
mov
test
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
jmp
mov
add
mov
test
je
mov
test
je
movsx
test
je
cdq
sub
sar
mov
jmp
xor
mov
jmp
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
mov
test
jns
or
mov
jmp
add
mov
mov
call
test
je
mov
test
je
mov
jmp
mov
mov
jmp
or
mov
mov
test
jne
test
je
mov
add
mov
mov
xor
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
mov
cmp
jle
lea
push
call
pop
mov
mov
test
je
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
call
pop
pop
cmp
jne
test
jne
lea
push
push
push
call
call
pop
pop
cmp
jne
or
mov
inc
jmp
mov
push
jmp
sub
je
dec
dec
je
sub
jne
push
pop
mov
mov
test
jns
add
mov
mov
mov
jmp
add
xor
mov
test
je
test
je
movsx
jmp
movzx
jmp
test
je
mov
cdq
mov
mov
jmp
mov
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
mov
test
jne
mov
mov
test
jns
xor
inc
jmp
and
mov
mov
cmp
jle
mov
mov
or
jne
mov
lea
mov
dec
mov
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
mov
mov
mov
cmp
jle
add
mov
mov
mov
dec
jmp
mov
lea
sub
inc
mov
test
je
test
je
cmp
je
dec
inc
mov
jmp
test
jne
mov
mov
jmp
dec
cmp
je
inc
test
jne
sub
mov
cmp
jne
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
mov
sub
test
jne
lea
push
push
push
push
call
mov
add
push
lea
push
push
push
lea
push
call
add
test
je
test
jne
lea
push
push
push
push
call
add
cmp
mov
je
test
jle
mov
dec
mov
movzx
push
push
lea
push
lea
add
push
mov
call
add
test
jne
cmp
je
push
lea
push
push
lea
push
push
call
mov
mov
add
test
jne
jmp
or
mov
jmp
push
lea
push
push
push
push
call
add
mov
test
js
test
je
lea
push
push
push
push
call
add
mov
mov
test
je
push
call
xor
pop
mov
mov
mov
mov
mov
mov
test
jne
mov
cmp
pop
pop
pop
je
mov
and
mov
xor
call
leave
ret
call
mov
call
or
jmp
mov
jns
add
jno
add
movs
mov
add
push
mov
add
lods
mov
add
push
mov
mov
test
je
cmp
je
dec
js
mov
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
mov
or
pop
ret
mov
inc
pop
ret
push
mov
push
mov
test
jle
push
mov
push
push
dec
push
call
add
cmp
je
test
jg
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
test
mov
je
cmp
jne
mov
mov
add
jmp
and
push
mov
test
jle
mov
push
mov
push
movzx
push
dec
call
mov
add
inc
cmp
jne
cmp
jne
push
push
push
call
mov
add
test
jg
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
xor
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
cmp
jne
call
mov
call
cmp
je
mov
and
or
jmp
test
je
xor
mov
mov
mov
mov
movzx
mov
mov
mov
test
je
mov
mov
mov
mov
mov
add
test
js
push
lea
pop
cmp
ja
movzx
movsx
and
jmp
xor
mov
movsx
mov
sar
mov
mov
mov
cmp
ja
jmp
xor
or
mov
mov
mov
mov
mov
mov
mov
jmp
movzx
push
pop
sub
je
sub
je
sub
je
dec
dec
je
sub
mov
jne
or
mov
jmp
or
mov
jmp
or
jmp
or
jmp
or
jmp
push
pop
cmp
jne
mov
add
mov
mov
test
jns
or
neg
mov
mov
jmp
mov
imul
mov
movzx
mov
add
add
mov
jmp
xor
mov
jmp
push
pop
cmp
jne
mov
add
mov
test
mov
mov
jns
or
jmp
mov
imul
mov
movzx
mov
add
add
mov
jmp
movzx
cmp
je
cmp
je
push
pop
cmp
je
cmp
mov
jne
or
jmp
mov
cmp
jne
add
mov
or
jmp
or
jmp
push
pop
or
jmp
mov
movzx
cmp
jne
mov
cmp
jne
mov
add
mov
or
jmp
cmp
jne
mov
cmp
jne
mov
add
mov
and
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
lea
push
push
mov
push
call
add
jmp
movzx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
push
pop
add
mov
mov
mov
or
mov
mov
lea
mov
test
jns
mov
jmp
test
jne
push
pop
or
mov
jmp
test
jne
push
pop
or
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
test
je
test
jne
mov
xor
mov
mov
mov
mov
test
jle
mov
test
je
lea
movzx
push
push
call
pop
test
mov
pop
je
inc
mov
inc
inc
mov
mov
cmp
jl
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
movzx
add
mov
mov
mov
test
je
mov
xor
mov
lea
push
mov
push
lea
push
lea
push
call
add
test
jns
mov
jmp
mov
xor
lea
inc
jmp
mov
add
mov
test
je
mov
test
je
test
je
movsx
cdq
sub
mov
mov
jmp
movsx
xor
mov
jmp
mov
push
call
pop
mov
jmp
cmp
jg
je
cmp
jl
cmp
jle
push
pop
cmp
je
cmp
je
push
pop
cmp
jne
mov
test
jns
or
mov
jmp
add
mov
mov
call
test
je
mov
test
je
mov
jmp
mov
mov
jmp
or
mov
mov
test
jne
test
je
mov
add
mov
mov
jmp
jne
push
pop
cmp
jne
mov
jmp
cmp
jle
mov
mov
cmp
jle
lea
push
call
pop
mov
mov
test
je
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
call
pop
pop
push
pop
cmp
jne
test
jne
lea
push
push
push
call
call
pop
pop
cmp
jne
or
mov
inc
jmp
mov
push
jmp
sub
je
dec
dec
je
sub
jne
push
pop
mov
mov
test
jns
push
pop
add
mov
mov
mov
jmp
add
mov
test
je
test
je
movsx
jmp
movzx
jmp
test
je
mov
cdq
mov
mov
xor
jmp
mov
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
mov
test
jne
mov
mov
test
jns
xor
inc
jmp
and
mov
cmp
jle
mov
mov
or
jne
mov
lea
mov
dec
mov
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
mov
mov
mov
cmp
jle
add
mov
mov
mov
dec
jmp
mov
lea
sub
inc
mov
test
je
test
je
cmp
je
dec
push
pop
mov
inc
jmp
test
jne
mov
mov
mov
test
je
xor
dec
cmp
je
add
test
jne
sub
sar
mov
cmp
jne
test
je
test
je
push
pop
mov
mov
push
pop
mov
mov
sub
sub
test
jne
lea
push
push
push
push
call
mov
add
push
lea
push
push
push
lea
push
call
add
test
je
test
jne
lea
push
push
push
push
pop
push
call
add
cmp
mov
jne
test
jle
mov
mov
dec
mov
lea
push
mov
push
lea
push
push
call
add
mov
test
jle
lea
push
push
push
call
mov
add
mov
add
mov
test
jg
jmp
test
je
push
jmp
test
je
push
pop
mov
mov
jmp
or
mov
jmp
push
lea
push
push
push
push
call
add
mov
test
js
test
je
lea
push
push
push
push
pop
push
call
add
mov
test
je
push
call
xor
pop
mov
mov
mov
movzx
mov
mov
test
jne
cmp
je
mov
and
mov
pop
pop
xor
pop
call
leave
ret
call
mov
call
cmp
je
mov
and
jmp
mov
adc
add
mov
enter
leave
add
cmps
leave
add
mov
add
push
retf
cmp
add
push
mov
mov
test
je
cmp
je
push
push
call
pop
pop
mov
cmp
jne
mov
or
pop
ret
mov
inc
pop
ret
push
mov
push
mov
test
jle
push
mov
push
push
dec
push
call
add
cmp
je
test
jg
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
test
mov
je
cmp
jne
mov
mov
add
jmp
and
push
mov
test
jle
mov
push
mov
push
movzx
push
dec
call
mov
add
add
cmp
jne
cmp
jne
push
push
push
call
mov
add
test
jg
cmp
jne
mov
mov
pop
pop
pop
pop
ret
call
xor
test
setne
mov
mov
ret
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
push
call
and
mov
mov
xor
inc
jmp
mov
mov
xor
cmp
sete
mov
ret
mov
xor
mov
mov
call
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
mov
mov
cmp
jne
push
push
call
pop
pop
pop
ret
xor
pop
ret
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
push
mov
mov
test
je
lea
cmp
jae
add
cmp
je
push
call
mov
add
add
lea
cmp
jb
push
call
and
pop
add
cmp
jl
pop
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
mov
mov
mov
pop
ret
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
xor
mov
cmp
jbe
mov
cmp
je
inc
add
cmp
jb
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
and
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
mov
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
and
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
push
call
pop
ret
call
and
call
mov
call
mov
mov
call
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
inc
push
mov
push
call
pop
mov
mov
test
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
pop
pop
ret
mov
or
xor
cmp
sete
ret
push
mov
sub
push
mov
push
mov
test
jne
test
je
mov
test
je
and
xor
jmp
mov
test
je
or
push
cmp
jbe
call
push
pop
mov
call
jmp
push
lea
call
mov
xor
cmp
jne
mov
mov
cmp
jbe
test
je
test
je
push
push
push
call
add
call
mov
call
mov
cmp
je
mov
and
mov
pop
pop
pop
leave
ret
test
je
test
je
mov
mov
test
je
mov
jmp
lea
push
push
push
push
push
lea
push
push
mov
push
call
mov
test
je
cmp
jne
mov
test
je
mov
jmp
call
cmp
jne
test
je
test
je
push
push
push
call
add
call
push
pop
mov
call
jmp
push
mov
push
push
push
push
push
call
add
pop
ret
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
test
jne
push
call
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
mov
push
sar
call
and
pop
shl
add
pop
jmp
mov
mov
and
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
mov
push
sar
call
and
pop
shl
add
pop
jmp
mov
mov
and
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
mov
push
sar
call
mov
and
pop
shl
add
pop
test
je
push
lea
push
push
lea
push
call
add
test
je
mov
jmp
xor
cmp
jle
dec
js
mov
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
mov
cmp
je
inc
cmp
jl
mov
jmp
add
js
mov
mov
mov
add
jmp
movzx
push
push
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
call
pop
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
mov
push
push
mov
push
push
call
pop
mov
mov
test
jne
call
mov
or
mov
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
je
mov
mov
lea
mov
mov
sub
sub
mov
mov
test
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
cmp
je
cmp
je
mov
mov
and
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
mov
mov
push
lea
push
push
mov
call
mov
add
mov
cmp
je
or
mov
jmp
movzx
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
push
mov
push
push
mov
call
mov
mov
pop
pop
ret
push
mov
push
push
mov
call
mov
mov
pop
pop
ret
push
mov
push
push
mov
call
mov
mov
pop
pop
ret
jmp
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
push
mov
sub
push
lea
push
lea
mov
call
push
lea
push
mov
call
int3
push
mov
sub
mov
mov
lea
push
lea
call
push
lea
push
mov
call
int3
push
mov
sub
mov
mov
lea
push
lea
call
push
lea
push
mov
call
int3
push
mov
cmp
mov
je
mov
cmp
je
add
cmp
jne
xor
pop
ret
mov
pop
ret
push
mov
cmp
mov
je
mov
cmp
je
add
cmp
jne
xor
pop
ret
mov
pop
ret
jmp
jmp
pop
pop
xchg
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
add
mov
mov
push
push
mov
mov
call
push
push
call
pop
pop
mov
pop
mov
push
mov
cmp
jne
mov
push
call
pop
pop
pop
leave
ret
push
push
call
mov
test
je
cmp
jne
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
test
je
mov
test
je
and
push
push
call
mov
jmp
xor
cmp
setne
ret
mov
call
test
je
mov
mov
test
je
mov
push
call
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
xor
cmp
mov
mov
jne
mov
mov
cmp
jbe
cmp
setne
movzx
cmp
je
xor
jmp
mov
cmp
setb
mov
movzx
mov
lea
call
lea
call
test
je
cmp
je
xor
mov
cmp
je
inc
sub
cmp
jbe
dec
jmp
mov
test
js
shl
lea
lea
mov
mov
call
mov
mov
lea
mov
call
sub
mov
cmp
je
mov
lea
mov
mov
lea
call
sub
mov
lea
call
sub
lea
call
inc
mov
lea
mov
mov
lea
call
sub
mov
lea
call
sub
lea
call
jmp
mov
lea
call
sub
mov
lea
call
sub
jmp
mov
lea
call
sub
mov
lea
call
sub
lea
call
lea
call
mov
lea
call
mov
mov
lea
mov
mov
call
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
call
lea
mov
mov
call
mov
mov
call
sub
lea
call
lea
call
lea
call
mov
lea
pop
pop
pop
pop
ret
data16
push
mov
push
push
push
and
sub
mov
xor
test
je
cmp
je
cmp
je
mov
call
test
je
lea
mov
call
lea
mov
mov
call
mov
mov
call
sub
mov
call
lea
call
mov
call
mov
add
cmp
jne
mov
call
mov
mov
mov
call
sub
mov
mov
mov
call
cmp
jae
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
call
mov
call
mov
lea
mov
mov
call
sub
mov
mov
call
add
mov
mov
mov
call
jmp
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
lea
mov
call
sub
lea
mov
mov
mov
call
sub
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
call
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
mov
cmp
sete
movzx
pop
ret
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
call
add
pop
ret
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
call
mov
lea
mov
call
mov
mov
lea
mov
mov
mov
call
mov
mov
call
sub
mov
nop
cmp
jg
cmp
jne
jmp
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
jmp
nop
cmp
jne
jmp
cmp
jne
mov
call
mov
sub
cmp
mov
mov
cmovb
jmp
cmp
jne
jmp
cmp
jne
jmp
cmp
jne
mov
mov
not
cmp
mov
mov
cmovae
jmp
cmp
jne
mov
mov
jmp
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
add
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
mov
add
pop
pop
pop
pop
ret
mov
call
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
test
mov
mov
cmove
mov
cmp
mov
cmovae
test
mov
mov
cmove
mov
mov
jmp
mov
nop
cmp
jg
cmp
jne
mov
mov
cmp
jb
mov
jmp
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
jmp
data16
cmp
jne
jmp
cmp
jne
mov
jmp
cmp
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
jmp
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
cmp
ja
mov
jmp
cmp
jg
cmp
jne
mov
mov
cmp
jb
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
jmp
mov
jmp
cmp
jne
mov
mov
jmp
test
setne
movzx
add
pop
pop
pop
pop
ret
mov
call
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
lea
mov
call
sub
mov
mov
mov
call
sub
mov
call
mov
mov
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
call
push
mov
sub
mov
mov
mov
call
add
pop
ret
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
add
add
data16
cmp
mov
cmovne
mov
jmp
data16
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
cmp
jle
cmp
mov
je
cmp
je
mov
cmp
je
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
push
mov
push
push
push
push
mov
mov
jmp
nop
inc
lea
call
mov
mov
cmp
mov
cmovne
mov
jmp
data16
movsx
mov
call
mov
lea
call
mov
mov
mov
cmp
jle
cmp
mov
je
cmp
je
cmp
je
jmp
nop
cmp
je
nop
jmp
lea
mov
mov
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
lea
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
movsx
mov
mov
mov
mov
call
sub
lea
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
movzx
movzx
cmp
sete
movzx
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
nop
mov
mov
jmp
nop
mov
call
cmp
mov
cmova
mov
cmp
jg
cmp
je
cmp
jne
mov
call
mov
mov
lea
cmp
mov
cmovbe
jmp
nop
cmp
je
jmp
nop
mov
cmp
je
mov
jmp
data16
xor
cmp
je
mov
cmp
je
cmp
jne
movzx
and
add
pop
pop
pop
pop
ret
data16
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
mov
call
sub
mov
cmp
jg
cmp
je
cmp
je
jmp
xchg
cmp
jne
mov
mov
cmp
je
mov
jmp
nop
mov
mov
call
sub
mov
jmp
cmp
jne
mov
add
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
nop
mov
mov
jmp
nop
mov
cmp
jne
mov
cmp
jne
jmp
nop
mov
cmp
mov
je
mov
cmp
je
cmp
jne
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
jmp
mov
mov
jmp
data16
jmp
mov
and
mov
mov
or
and
mov
mov
and
add
mov
mov
add
pop
pop
pop
ret
data16
push
mov
mov
mov
pop
ret
nop
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
pop
ret
int3
push
mov
push
push
mov
jmp
nop
mov
call
mov
mov
jmp
data16
mov
cmp
je
cmp
je
cmp
jne
mov
call
mov
mov
call
mov
cmp
jne
jmp
nop
jmp
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
nop
cmp
jg
cmp
jne
jmp
data16
cmp
jg
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
xor
jmp
nop
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
jmp
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
test
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
je
cmp
jne
mov
jmp
mov
mov
mov
call
mov
mov
call
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
call
cmp
sete
mov
jmp
mov
add
pop
pop
pop
pop
ret
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
test
mov
mov
cmovne
mov
mov
mov
lea
lea
mov
mov
mov
jmp
mov
mov
call
sub
mov
xchg
cmp
jg
cmp
jne
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
jmp
nop
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
mov
mov
jmp
cmp
jg
cmp
jne
cmp
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
lea
mov
mov
call
sub
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
lea
call
sub
cmp
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
cmp
setne
mov
mov
mov
mov
mov
mov
movzx
mov
lea
mov
mov
call
sub
lea
mov
mov
mov
lea
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
lea
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
lea
call
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
sub
mov
lea
mov
lea
mov
mov
lea
mov
call
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
xor
jmp
cmp
jg
cmp
jne
mov
mov
call
jmp
cmp
je
cmp
jne
mov
mov
mov
call
cmp
setne
mov
mov
mov
mov
mov
mov
movzx
mov
lea
mov
mov
call
sub
lea
mov
mov
mov
lea
jmp
mov
jmp
cmp
jne
mov
lea
pop
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
xor
jmp
nop
cmp
jne
jmp
nop
cmp
jne
mov
jmp
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
call
mov
mov
mov
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
mov
mov
jmp
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jne
test
mov
cmovne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
call
cmp
sete
mov
jmp
mov
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
imul
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
mov
je
cmp
jne
mov
call
test
mov
cmove
jmp
cmp
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
lea
mov
call
sub
mov
lea
pop
pop
ret
int3
int3
push
mov
push
call
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
imul
add
pop
ret
int3
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
push
call
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
data16
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
call
mov
mov
call
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
setbe
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
xor
jmp
nop
jmp
movzx
and
add
pop
ret
int3
push
mov
push
mov
mov
call
pop
ret
push
mov
and
sub
mov
mov
mov
lea
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
lea
mov
call
mov
add
pop
pop
pop
pop
ret
push
mov
push
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
call
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
call
pop
ret
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
mov
movzx
mov
mov
mov
lea
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
call
mov
lea
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
lea
lea
mov
mov
mov
jmp
mov
mov
call
sub
nop
mov
jmp
data16
mov
mov
cmp
jle
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
jmp
nop
xor
cmp
je
nop
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
movzx
mov
mov
mov
mov
mov
mov
test
mov
mov
cmove
lea
mov
mov
mov
mov
movzx
mov
jmp
nop
mov
mov
not
cmp
mov
mov
cmovbe
mov
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
mov
je
cmp
jne
mov
mov
sub
mov
mov
call
lea
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
jmp
nop
cmp
jne
jmp
cmp
jne
mov
mov
cmp
jb
mov
jmp
cmp
jne
mov
mov
add
mov
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
cmp
je
xchg
jmp
mov
call
cmp
jne
mov
call
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
movzx
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
nop
mov
mov
cmp
jg
cmp
jne
mov
cmp
jne
jmp
nop
cmp
jne
jmp
cmp
je
xor
cmp
je
nop
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
jmp
mov
mov
data16
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
cmp
mov
mov
cmovb
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
call
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
sub
sar
mov
jmp
cmp
jne
mov
call
mov
mov
lea
mov
call
mov
lea
mov
jmp
cmp
jne
mov
mov
mov
cmp
ja
mov
jmp
mov
jmp
cmp
jne
add
mov
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
jmp
data16
add
mov
cmp
mov
cmovne
mov
jmp
mov
xchg
mov
cmp
mov
je
cmp
jne
mov
cmp
je
jmp
mov
cmp
je
mov
cmp
je
cmp
je
cmp
je
nop
jmp
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
pop
ret
int3
push
mov
push
call
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
lea
mov
call
sub
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
nop
mov
call
add
mov
mov
call
sub
mov
mov
call
sub
mov
cmp
jg
cmp
jne
jmp
nop
cmp
jle
cmp
je
cmp
jne
mov
mov
call
mov
sub
cmp
mov
cmovb
jmp
cmp
jne
mov
mov
cmp
jb
mov
jmp
cmp
je
data16
jmp
add
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
sar
imul
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
xchg
jmp
mov
imul
add
mov
mov
imul
add
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
call
mov
mov
call
sub
add
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
mov
lea
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
jmp
data16
add
add
mov
mov
cmp
mov
cmovne
mov
jmp
nop
mov
mov
mov
call
sub
mov
mov
cmp
jg
cmp
je
cmp
mov
je
jmp
data16
cmp
jne
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
call
mov
shr
mov
sub
mov
mov
mov
jmp
cmp
mov
mov
cmovb
mov
nop
mov
shr
add
mov
mov
mov
jmp
xchg
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
xor
mov
cmp
je
cmp
jg
cmp
mov
je
cmp
je
mov
cmp
mov
je
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
setbe
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
xor
jmp
nop
jmp
movzx
and
add
pop
ret
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
mov
add
mov
lea
mov
call
lea
mov
mov
call
sub
lea
mov
mov
call
sub
mov
mov
call
sub
test
je
lea
cmp
je
mov
mov
call
mov
call
lea
mov
mov
mov
call
sub
test
je
mov
and
shr
jmp
nop
xor
jmp
data16
xor
mov
test
je
mov
call
lea
call
lea
mov
mov
mov
call
sub
test
lea
je
mov
and
shr
jmp
nop
xor
lea
jmp
nop
xor
test
jne
mov
test
jne
lea
mov
mov
mov
call
sub
mov
lea
call
sub
mov
mov
call
sub
test
jne
xor
jmp
xor
mov
lea
call
movzx
lea
pop
pop
pop
pop
ret
data16
push
mov
push
push
push
and
sub
mov
test
je
mov
lea
mov
mov
mov
call
sub
xor
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
mov
test
je
mov
mov
mov
mov
mov
mov
call
sub
mov
xor
test
je
mov
test
je
mov
mov
mov
mov
mov
call
sub
mov
test
je
mov
test
je
mov
mov
call
sub
test
je
mov
mov
call
mov
lea
call
lea
mov
mov
mov
mov
mov
mov
call
sub
lea
call
cmp
je
mov
call
sub
mov
test
je
mov
call
sub
mov
test
je
mov
call
sub
mov
mov
call
test
je
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
call
mov
mov
call
mov
mov
mov
call
sub
test
setne
movzx
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
cmp
je
mov
mov
mov
call
sub
mov
call
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
add
mov
cmovae
mov
call
mov
mov
mov
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
call
sub
mov
add
pop
pop
ret
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
imul
nop
cmp
jg
cmp
jne
mov
mov
sub
sar
mov
mov
mov
mov
cmp
je
mov
jmp
data16
cmp
jg
cmp
jne
mov
mov
mov
call
sub
test
mov
cmovne
jmp
nop
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
mov
mov
cmp
je
mov
jmp
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
lea
call
sub
mov
add
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
imul
add
mov
call
mov
mov
mov
mov
lea
jmp
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
cmp
jg
cmp
jg
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
xchg
cmp
jne
mov
mov
mov
mov
cmp
jne
jmp
nop
cmp
jne
mov
mov
call
mov
jmp
cmp
jne
mov
add
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
call
mov
nop
mov
jmp
data16
mov
cmp
jg
cmp
jne
mov
cmp
jne
jmp
mov
cmp
je
cmp
mov
je
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
jg
cmp
je
cmp
jne
mov
inc
mov
mov
mov
mov
call
mov
jmp
nop
cmp
je
jmp
nop
mov
mov
cmp
jb
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
test
mov
cmovne
jmp
nop
cmp
jne
mov
mov
cmp
jne
jmp
nop
cmp
jne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
cmp
jb
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
add
mov
call
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
jmp
cmp
jg
cmp
je
cmp
jne
lea
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
mov
jmp
cmp
jne
mov
mov
jmp
mov
call
mov
sub
cmp
mov
mov
cmova
jmp
cmp
jne
mov
call
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
setbe
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
xor
jmp
nop
jmp
movzx
and
add
pop
ret
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
call
add
mov
mov
call
sub
mov
mov
call
sub
mov
data16
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
call
mov
sub
cmp
mov
cmovb
jmp
nop
cmp
jne
mov
mov
cmp
jb
mov
jmp
nop
cmp
jne
jmp
add
pop
pop
pop
ret
cmp
je
nop
jmp
mov
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
sar
imul
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
xchg
jmp
mov
imul
add
mov
mov
imul
add
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
mov
call
pop
ret
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
pop
ret
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
call
mov
mov
call
sub
test
je
mov
mov
call
cmp
sete
jmp
xor
movzx
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
call
mov
mov
mov
call
pop
pop
ret
nop
push
mov
push
sub
mov
mov
mov
mov
jmp
nop
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
jmp
mov
mov
add
pop
pop
ret
nop
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
call
mov
mov
call
sub
add
pop
pop
ret
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
cmp
sbb
and
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
lea
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
movzx
mov
mov
call
add
mov
add
pop
pop
pop
ret
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
lea
jmp
data16
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
data16
jmp
mov
add
mov
mov
mov
add
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
call
add
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
data16
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
lea
mov
call
sub
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
lea
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
movzx
mov
mov
mov
mov
call
sub
lea
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
call
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
movzx
mov
mov
mov
mov
jmp
nop
add
dec
mov
test
mov
cmovne
mov
jmp
nop
mov
mov
cmp
jg
cmp
mov
je
jmp
nop
cmp
je
cmp
je
cmp
je
nop
jmp
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
movsd
movsd
lea
lea
mov
call
sub
lea
add
mov
call
sub
mov
add
pop
pop
pop
ret
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
pop
ret
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
test
mov
mov
cmovne
xchg
cmp
jg
cmp
jg
cmp
jne
mov
mov
jmp
data16
cmp
jne
jmp
nop
cmp
jg
cmp
jne
mov
mov
dec
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
sub
sar
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
call
cmp
mov
mov
cmove
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
call
mov
mov
mov
mov
cmp
ja
mov
jmp
cmp
jne
jmp
cmp
jne
add
mov
jmp
cmp
jne
mov
lea
add
mov
jmp
cmp
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
jmp
cmp
jne
mov
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
sub
mov
call
add
pop
ret
nop
push
mov
push
mov
mov
call
sub
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
call
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
call
sub
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
imul
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
mov
je
cmp
jne
mov
call
test
mov
cmove
jmp
cmp
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
jmp
data16
mov
call
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
nop
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
data16
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
call
add
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
mov
mov
call
sub
mov
lea
pop
pop
ret
int3
push
mov
call
add
pop
ret
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
lea
mov
call
sub
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
and
mov
mov
jmp
xchg
mov
mov
mov
mov
jmp
mov
data16
mov
cmp
jle
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
jmp
data16
cmp
je
nop
jmp
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
push
mov
push
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
nop
cmp
jne
mov
mov
cmp
jne
jmp
nop
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
call
mov
lea
mov
call
mov
mov
mov
call
mov
mov
call
sub
mov
jmp
cmp
jne
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
jmp
mov
call
mov
sub
cmp
mov
mov
cmova
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
jmp
nop
mov
mov
mov
mov
call
mov
mov
cmp
jg
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
data16
cmp
je
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
call
add
lea
mov
mov
call
add
pop
pop
ret
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
nop
mov
mov
jmp
mov
call
mov
add
cmp
mov
cmovbe
xchg
mov
cmp
jle
cmp
je
cmp
jne
mov
call
cmp
mov
cmova
jmp
cmp
jne
mov
cmp
je
mov
jmp
nop
xor
cmp
je
mov
cmp
je
cmp
jne
movzx
and
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
mov
mov
mov
call
mov
mov
call
sub
lea
add
mov
call
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
mov
mov
mov
jmp
data16
add
mov
mov
cmp
mov
cmovne
mov
jmp
nop
mov
mov
call
sub
mov
cmp
jg
cmp
mov
je
jmp
data16
cmp
je
cmp
je
cmp
je
data16
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
add
mov
pop
ret
int3
int3
push
mov
mov
mov
cmp
sete
movzx
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
lea
jmp
movsx
mov
call
add
mov
mov
mov
call
mov
nop
cmp
jg
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
call
add
mov
mov
call
mov
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
call
mov
nop
mov
jmp
data16
mov
cmp
jg
cmp
jne
mov
cmp
jne
jmp
mov
cmp
je
xor
cmp
je
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
and
mov
mov
mov
mov
mov
jmp
mov
add
mov
mov
call
sub
mov
nop
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
test
mov
cmovne
jmp
nop
cmp
jne
mov
mov
test
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
test
mov
mov
cmovne
jmp
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
add
pop
pop
pop
pop
ret
data16
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
mov
movzx
shl
or
mov
mov
and
or
mov
mov
call
sub
xor
and
and
mov
mov
mov
jmp
mov
test
mov
cmovne
nop
cmp
jg
cmp
jg
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
cmp
mov
je
jmp
cmp
je
nop
jmp
add
pop
pop
pop
ret
mov
call
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
jmp
nop
mov
mov
cmp
jg
cmp
jg
mov
cmp
je
cmp
jne
mov
mov
call
mov
jmp
xchg
cmp
jne
mov
mov
mov
mov
cmp
jne
jmp
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
call
mov
mov
mov
mov
mov
call
add
pop
pop
ret
xchg
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
test
sete
movzx
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
lea
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
call
mov
mov
add
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
lea
mov
mov
jmp
data16
mov
cmp
jg
cmp
jne
mov
call
mov
cmp
jne
jmp
cmp
je
cmp
jne
mov
call
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
jmp
cmp
mov
je
xchg
jmp
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
lea
jmp
sub
mov
add
mov
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
sub
mov
mov
mov
mov
cmp
je
mov
sar
jmp
nop
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
jmp
data16
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
mov
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
call
jmp
cmp
jne
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
lea
mov
call
sub
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
mov
lea
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
call
mov
mov
call
mov
mov
mov
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
data16
cmp
jne
jmp
nop
cmp
jne
jmp
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
xor
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
test
mov
cmovne
jmp
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
call
cmp
sete
mov
jmp
cmp
jne
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
jmp
nop
mov
call
mov
mov
jmp
data16
mov
cmp
je
cmp
je
cmp
jne
mov
call
mov
mov
call
mov
cmp
jne
jmp
nop
jmp
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
data16
cmp
jg
cmp
jne
mov
call
mov
mov
call
mov
cmp
jne
jmp
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
call
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
nop
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
mov
jmp
cmp
jne
mov
mov
mov
call
mov
mov
jmp
cmp
jne
mov
call
mov
mov
call
jmp
cmp
jne
mov
jmp
mov
call
mov
mov
call
mov
mov
jmp
cmp
jne
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
call
mov
lea
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
setbe
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
xor
jmp
nop
jmp
movzx
and
add
pop
ret
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
mov
mov
jmp
nop
add
mov
cmp
mov
cmovne
mov
jmp
nop
mov
mov
call
sub
mov
mov
cmp
jle
cmp
je
cmp
mov
je
cmp
je
jmp
data16
cmp
je
nop
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
movzx
mov
mov
mov
movzx
jmp
add
mov
dec
mov
mov
nop
mov
test
mov
cmovne
mov
jmp
mov
nop
mov
mov
jmp
mov
nop
mov
mov
cmp
mov
je
cmp
jne
movzx
mov
cmp
je
jmp
cmp
je
cmp
jg
mov
cmp
je
xor
cmp
je
cmp
jne
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
xchg
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
sete
movzx
pop
ret
int3
push
mov
sub
mov
mov
mov
call
pop
ret
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
lea
mov
call
sub
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
sub
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
push
mov
push
push
push
push
mov
mov
mov
jmp
data16
add
mov
mov
cmp
mov
cmovne
mov
jmp
nop
mov
mov
call
sub
mov
mov
cmp
jg
cmp
mov
je
jmp
nop
cmp
je
jmp
nop
cmp
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
imul
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
je
cmp
mov
je
cmp
je
cmp
mov
je
jmp
mov
call
test
mov
cmove
jmp
cmp
jne
add
pop
pop
pop
pop
ret
data16
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
setbe
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
xor
jmp
nop
jmp
movzx
and
add
pop
ret
int3
push
mov
mov
call
pop
ret
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
nop
cmp
jg
cmp
jne
mov
mov
cmp
jb
jmp
data16
cmp
jle
cmp
je
cmp
jne
mov
mov
call
mov
sub
cmp
mov
cmovb
jmp
mov
call
add
mov
mov
call
sub
mov
mov
call
sub
mov
jmp
cmp
jne
add
pop
pop
pop
ret
cmp
je
nop
jmp
mov
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
add
pop
pop
ret
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
jmp
mov
data16
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
mov
cmp
jne
jmp
xchg
cmp
mov
je
jmp
data16
cmp
je
cmp
jne
mov
mov
call
mov
jmp
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
add
mov
cmovae
mov
call
mov
mov
mov
mov
mov
call
add
pop
pop
ret
data16
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
cmp
je
mov
lea
mov
mov
call
mov
call
mov
call
sub
or
lea
call
mov
test
je
mov
mov
mov
mov
mov
call
mov
jmp
cmp
je
mov
lea
mov
mov
call
mov
call
mov
call
sub
or
lea
call
mov
test
je
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
call
mov
mov
mov
call
sub
mov
mov
add
mov
mov
mov
mov
call
test
je
mov
mov
mov
mov
call
lea
call
mov
jmp
lea
call
xor
movzx
lea
pop
pop
pop
pop
ret
nop
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
call
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
push
mov
push
mov
call
mov
mov
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
call
add
pop
ret
int3
push
mov
push
sub
mov
mov
mov
add
mov
mov
mov
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
add
pop
pop
ret
int3
push
mov
push
sub
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
jg
cmp
jne
mov
mov
cmp
ja
jmp
data16
cmp
je
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
call
jmp
nop
jmp
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
test
mov
mov
cmove
cmp
mov
cmovae
mov
test
mov
mov
cmove
mov
mov
jmp
data16
mov
mov
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
mov
jne
mov
mov
cmp
ja
mov
jmp
data16
cmp
mov
jne
jmp
nop
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
mov
cmp
jb
mov
jmp
cmp
mov
jne
mov
mov
jmp
cmp
mov
jne
mov
jmp
cmp
jg
cmp
mov
jne
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
mov
jne
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
mov
jne
mov
jmp
cmp
jg
cmp
mov
jne
jmp
cmp
jg
cmp
mov
jne
mov
mov
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
mov
jne
mov
mov
mov
jmp
cmp
mov
je
cmp
je
cmp
mov
jne
mov
mov
cmp
jb
mov
jmp
test
setne
movzx
add
pop
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
xor
mov
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
je
mov
cmp
je
cmp
je
cmp
mov
je
jmp
mov
call
test
mov
cmove
jmp
cmp
jne
add
pop
pop
pop
ret
data16
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
nop
mov
mov
cmp
jg
cmp
jne
jmp
nop
cmp
jg
cmp
jne
mov
mov
cmp
jb
mov
jmp
data16
cmp
jg
cmp
jne
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
call
mov
sub
cmp
mov
mov
cmovb
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
add
mov
mov
mov
call
sub
test
mov
mov
cmovne
mov
jmp
cmp
jne
jmp
cmp
jne
jmp
mov
call
mov
mov
add
mov
call
mov
add
mov
mov
mov
mov
call
mov
mov
call
sub
mov
jmp
cmp
mov
jne
mov
mov
not
cmp
mov
mov
cmovae
jmp
mov
add
pop
pop
pop
pop
ret
mov
call
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
call
mov
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
call
pop
ret
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
cmove
lea
mov
mov
movsx
mov
mov
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
call
sub
mov
test
mov
mov
cmovne
cmp
jle
cmp
jg
cmp
jne
jmp
nop
cmp
jg
cmp
mov
je
jmp
cmp
jle
cmp
jg
cmp
jne
mov
mov
cmp
jb
mov
jmp
cmp
je
cmp
jne
mov
mov
not
cmp
mov
cmovbe
jmp
mov
mov
sub
mov
mov
call
add
mov
mov
call
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
mov
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
cmp
je
nop
jmp
mov
call
cmp
jne
mov
call
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
lea
mov
call
sub
mov
mov
mov
call
sub
mov
mov
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
nop
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
call
mov
mov
mov
call
sub
add
pop
pop
ret
xchg
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
call
add
pop
ret
nop
push
mov
mov
call
pop
ret
nop
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
push
mov
push
push
push
and
sub
lea
mov
mov
lea
mov
call
sub
mov
mov
lea
mov
jmp
mov
mov
call
sub
mov
mov
call
sub
test
mov
cmovne
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
jmp
nop
cmp
jne
jmp
nop
cmp
jne
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
jmp
cmp
jg
cmp
jne
mov
lea
mov
mov
mov
mov
call
sub
mov
jmp
cmp
je
cmp
jne
mov
call
mov
mov
mov
call
sub
mov
jmp
lea
mov
mov
lea
call
sub
mov
mov
mov
lea
mov
call
sub
mov
jmp
cmp
jne
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
call
mov
mov
mov
call
sub
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
call
mov
mov
mov
jmp
data16
mov
mov
call
sub
mov
cmp
jg
cmp
je
cmp
jne
mov
mov
jmp
data16
cmp
jne
mov
mov
cmp
jb
mov
jmp
cmp
jne
add
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
call
mov
mov
add
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
call
mov
mov
add
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
shl
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
je
cmp
mov
je
cmp
je
cmp
mov
je
jmp
mov
call
test
mov
cmove
jmp
cmp
jne
add
pop
pop
pop
pop
ret
data16
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
movsx
mov
jmp
mov
mov
mov
call
mov
data16
mov
jmp
data16
mov
mov
cmp
jle
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
jmp
nop
xor
cmp
je
nop
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
sub
mov
mov
lea
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
nop
cmp
jg
cmp
jne
jmp
data16
cmp
jg
cmp
jne
jmp
data16
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
cmp
mov
mov
cmovb
jmp
cmp
jg
cmp
jg
cmp
jne
cmp
mov
mov
mov
cmovb
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
test
mov
cmovne
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
sub
mov
jmp
cmp
je
cmp
jne
cmp
setne
movzx
mov
mov
jmp
mov
mov
jmp
cmp
jne
mov
mov
sub
cmp
mov
mov
cmovb
jmp
add
pop
pop
pop
pop
ret
mov
call
push
mov
push
push
push
sub
mov
mov
mov
movzx
mov
movzx
jmp
mov
mov
mov
mov
call
mov
data16
mov
mov
jmp
nop
mov
cmp
jg
cmp
jne
mov
cmp
jne
jmp
data16
xor
mov
cmp
je
cmp
je
cmp
je
nop
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
lea
mov
mov
call
add
pop
ret
int3
push
mov
push
push
and
sub
lea
mov
call
sub
lea
mov
mov
mov
call
sub
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
jmp
mov
mov
sub
cmp
mov
mov
cmovae
nop
cmp
jg
cmp
jne
jmp
data16
cmp
jg
cmp
jne
mov
sub
sar
dec
sub
lea
mov
jmp
data16
cmp
jg
cmp
jne
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
mov
mov
sub
sar
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
mov
mov
call
test
mov
mov
cmove
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
add
mov
mov
call
mov
mov
lea
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
call
test
mov
mov
cmovne
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
jmp
mov
jmp
cmp
jne
mov
cmp
je
mov
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
jmp
data16
add
add
mov
mov
cmp
mov
cmovne
mov
jmp
nop
mov
mov
mov
call
sub
mov
mov
cmp
jle
cmp
je
cmp
mov
je
cmp
je
jmp
nop
cmp
je
nop
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
movzx
mov
mov
mov
mov
not
mov
mov
test
mov
mov
cmove
mov
movzx
mov
jmp
mov
mov
add
mov
mov
mov
mov
call
sub
test
mov
mov
cmovne
nop
cmp
jle
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
cmp
jbe
mov
jmp
nop
cmp
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
jmp
cmp
mov
je
jmp
cmp
je
nop
jmp
mov
add
pop
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
jmp
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
push
mov
mov
mov
call
sub
mov
mov
movsd
movsd
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
lock
dec
mov
mov
jmp
data16
mov
mov
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
nop
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
lea
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
test
je
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
call
mov
mov
mov
mov
lea
mov
call
lea
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
test
je
lea
call
lea
call
jmp
mov
lea
call
lea
call
cmp
je
mov
mov
lea
mov
mov
call
mov
mov
mov
nop
mov
and
mov
shr
xor
movzx
sub
mov
dec
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
mov
call
sub
test
je
xor
movzx
lea
pop
pop
pop
pop
ret
mov
cmp
je
mov
mov
call
sub
jmp
nop
push
mov
push
push
push
push
mov
mov
mov
call
not
jmp
nop
call
mov
mov
call
mov
xor
mov
div
mov
mov
call
sub
movsx
mov
mov
call
sub
inc
jne
mov
add
pop
pop
pop
pop
ret
data16
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
jmp
nop
mov
call
mov
mov
call
sub
mov
cmp
jg
cmp
jne
mov
mov
call
sub
jmp
nop
cmp
jg
cmp
je
cmp
jne
mov
mov
mov
mov
call
sub
jmp
nop
cmp
jne
mov
call
mov
mov
mov
mov
call
sub
mov
call
cmp
mov
mov
mov
mov
cmovb
jmp
mov
mov
cmp
jbe
mov
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
jg
cmp
jne
mov
mov
cmp
ja
jmp
cmp
jne
mov
mov
mov
mov
call
jmp
cmp
jne
mov
mov
jmp
cmp
jne
add
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
push
push
sub
mov
mov
mov
sar
and
add
add
mov
xor
mov
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
mov
je
cmp
jne
mov
call
test
mov
cmove
jmp
cmp
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
call
mov
nop
mov
jmp
data16
mov
cmp
jg
cmp
jne
mov
cmp
jne
jmp
mov
cmp
je
cmp
mov
je
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
or
test
mov
mov
cmovne
mov
mov
mov
mov
jmp
mov
nop
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
cmp
jb
mov
jmp
data16
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
mov
mov
shr
mov
sub
mov
cmp
jbe
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
lea
mov
lea
call
sub
mov
mov
jmp
cmp
jne
mov
mov
shr
mov
mov
mul
shr
cmp
mov
mov
cmovbe
jmp
cmp
jne
mov
call
mov
mov
mov
mov
call
mov
jmp
cmp
jne
mov
jmp
mov
mov
jmp
cmp
jne
mov
mov
mov
shr
add
mov
jmp
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
lea
call
sub
mov
mov
mov
mov
call
lea
pop
pop
pop
pop
ret
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
nop
mov
call
mov
mov
mov
call
mov
mov
call
sub
mov
cmp
jle
cmp
jg
cmp
je
jmp
nop
cmp
jg
cmp
jne
mov
call
mov
sub
mov
mov
mov
mov
call
sub
mov
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
mov
mov
jmp
cmp
jne
mov
add
pop
pop
pop
pop
ret
data16
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
cmovb
mov
mov
mov
mov
mov
jmp
data16
test
mov
cmovne
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
call
mov
lea
mov
call
mov
lea
mov
mov
mov
mov
call
mov
mov
jmp
data16
cmp
jne
jmp
nop
cmp
jne
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
mov
sub
mov
mov
call
mov
lea
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
cmp
je
mov
mov
jmp
cmp
jne
mov
mov
cmp
jb
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
not
cmp
mov
mov
cmovae
mov
jmp
cmp
jne
mov
call
cmp
mov
mov
jmp
cmp
jne
mov
call
sub
mov
cmp
mov
mov
cmovb
mov
jmp
cmp
jne
lea
mov
jmp
cmp
jne
mov
mov
call
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
call
sub
mov
mov
jmp
cmp
jne
mov
mov
add
mov
mov
mov
mov
call
sub
test
mov
mov
cmovne
mov
jmp
cmp
jne
jmp
mov
lea
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
jmp
cmp
mov
jne
mov
call
mov
add
pop
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
jmp
dec
mov
nop
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
cmp
ja
mov
jmp
data16
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
sub
mov
jmp
cmp
jne
mov
add
mov
jmp
cmp
jne
jmp
cmp
jne
mov
call
mov
mov
mov
sub
cmp
mov
mov
cmova
jmp
cmp
jne
mov
mov
mov
mov
mov
call
test
mov
mov
cmove
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
call
mov
sub
mov
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
mov
call
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
mov
cmp
jae
mov
jmp
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
jmp
mov
call
cmp
mov
mov
cmove
jmp
cmp
jne
mov
cmp
je
mov
jmp
mov
add
pop
pop
pop
pop
ret
push
mov
push
push
sub
mov
movzx
mov
mov
jmp
mov
call
mov
data16
mov
mov
jmp
nop
mov
cmp
jle
mov
cmp
je
xor
cmp
je
cmp
jne
mov
cmp
jne
jmp
cmp
jne
add
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
jne
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
lea
mov
call
sub
mov
lea
pop
pop
ret
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
push
push
and
sub
mov
mov
lea
call
sub
mov
mov
call
mov
call
mov
mov
lea
call
sub
mov
call
mov
call
mov
mov
lea
call
sub
mov
call
mov
call
mov
mov
lea
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
add
pop
pop
ret
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
call
sub
mov
nop
cmp
jg
cmp
jg
cmp
jg
cmp
je
jmp
data16
cmp
mov
je
jmp
xchg
cmp
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
cmp
jbe
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
mov
mov
call
sub
test
mov
cmovne
jmp
nop
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
call
mov
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
data16
jmp
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
movsd
movsd
movsd
movsd
movsd
movsd
movsd
movsd
lea
lea
mov
call
sub
lea
lea
mov
call
sub
lea
add
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
mov
mov
jmp
add
data16
mov
cmp
mov
cmovne
mov
jmp
nop
mov
mov
call
sub
mov
mov
cmp
jg
cmp
je
cmp
mov
je
cmp
jne
jmp
cmp
jne
add
pop
pop
pop
pop
ret
data16
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
sete
movzx
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
cmovne
mov
mov
mov
jmp
mov
mov
nop
mov
jmp
data16
mov
cmp
jg
cmp
jne
jmp
nop
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jne
mov
call
mov
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jne
mov
call
mov
mov
mov
mov
call
sub
mov
mov
inc
mov
mov
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
call
mov
cmp
je
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
jmp
cmp
jne
jmp
cmp
jne
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jne
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
cmp
jbe
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
je
cmp
jne
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
jmp
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
call
sub
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
push
mov
push
push
sub
mov
mov
mov
sub
mov
and
mov
mov
call
add
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
call
mov
shr
not
mov
mov
mov
jmp
data16
cmp
mov
mov
cmovb
mov
mov
shr
add
mov
mov
mov
jmp
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
xor
mov
cmp
je
cmp
jg
cmp
mov
je
cmp
je
mov
cmp
mov
je
jmp
nop
cmp
je
nop
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
ret
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
call
sub
test
mov
cmovne
nop
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
call
sub
mov
jmp
nop
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
sub
mov
add
mov
jmp
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
je
cmp
jne
mov
mov
sub
sar
mov
mov
mov
mov
cmp
je
mov
imul
jmp
mov
mov
mov
mov
cmp
je
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
imul
add
mov
mov
mov
mov
lea
call
jmp
lea
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
add
add
mov
pop
ret
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
call
mov
sub
cmp
mov
cmovb
data16
cmp
jle
cmp
jg
cmp
jne
jmp
nop
cmp
je
cmp
jne
mov
call
add
mov
mov
call
sub
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
cmp
jb
mov
jmp
cmp
je
nop
jmp
add
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
nop
add
add
mov
dec
mov
mov
test
mov
mov
cmovne
jmp
mov
nop
mov
cmp
mov
je
cmp
jne
movzx
movzx
mov
cmp
jne
jmp
data16
mov
cmp
jg
cmp
jne
jmp
nop
cmp
jg
cmp
je
cmp
je
mov
cmp
jne
jmp
nop
cmp
jne
mov
mov
jmp
movzx
movzx
mov
cmp
jb
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
setbe
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
xor
jmp
nop
jmp
movzx
and
add
pop
ret
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
mov
lea
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
int3
int3
int3
int3
push
mov
mov
call
pop
ret
int3
push
mov
push
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
mov
data16
cmp
jg
cmp
jg
cmp
jne
jmp
nop
cmp
jne
jmp
nop
cmp
jg
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
dec
mov
jmp
cmp
jg
cmp
jne
dec
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
add
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
cmp
mov
cmove
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
mov
cmp
ja
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
test
mov
cmovne
mov
jmp
cmp
je
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
call
mov
mov
mov
sub
mov
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
movzx
mov
mov
mov
mov
mov
mov
mov
movzx
jmp
nop
mov
mov
sub
mov
mov
mov
call
sub
mov
cmp
jg
cmp
je
cmp
jne
mov
mov
cmp
jbe
mov
jmp
nop
cmp
je
jmp
nop
mov
mov
call
sub
mov
jmp
cmp
jne
add
pop
pop
pop
ret
data16
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
call
mov
shr
mov
sub
mov
mov
mov
jmp
nop
cmp
mov
mov
cmovb
mov
mov
shr
add
mov
mov
mov
jmp
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
xor
mov
cmp
je
cmp
jle
cmp
mov
je
mov
cmp
mov
je
jmp
data16
cmp
jne
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
setbe
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
xor
jmp
nop
jmp
movzx
and
add
pop
ret
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
sar
imul
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
jmp
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
jmp
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pusha
mov
push
call
add
mov
popa
pop
mov
jmp
ret
nop
push
mov
push
push
push
and
sub
mov
mov
movzx
mov
mov
mov
call
mov
mov
mov
mov
lea
mov
call
mov
call
mov
mov
mov
lea
mov
call
lea
call
cmp
je
mov
lea
call
lea
mov
mov
mov
mov
mov
call
sub
xor
test
jne
mov
test
je
mov
mov
mov
cmp
je
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
call
sub
xor
test
jne
cmp
jne
cmp
jne
cmp
je
mov
mov
call
sub
mov
lea
mov
test
je
mov
mov
dec
nop
mov
lea
and
mov
shr
xor
movzx
add
mov
mov
lea
cmp
jne
mov
mov
or
je
xor
jmp
xor
lea
call
movzx
lea
pop
pop
pop
pop
ret
lea
mov
mov
mov
mov
call
mov
jmp
nop
push
mov
push
push
push
and
sub
mov
cmp
jne
mov
mov
call
mov
call
xor
cmp
je
lea
mov
mov
mov
call
sub
test
je
mov
mov
mov
mov
call
test
je
lea
call
mov
xor
test
je
call
mov
mov
call
lea
call
test
jne
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
je
mov
call
mov
mov
call
cmp
setne
test
je
mov
test
jne
mov
call
test
je
mov
jmp
mov
call
mov
mov
mov
call
call
mov
test
je
jmp
cmp
jne
jmp
inc
mov
mov
test
je
mov
mov
cmp
jb
mov
add
cmp
jae
mov
mov
cmp
jae
mov
call
mov
call
cmp
jne
mov
call
xor
lea
call
mov
lea
pop
pop
pop
pop
ret
nop
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
mov
movsx
mov
mov
mov
lea
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
push
mov
call
add
pop
ret
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
lea
mov
call
sub
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
call
add
pop
ret
int3
push
mov
push
sub
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
jg
cmp
je
cmp
jne
mov
mov
jmp
nop
cmp
jne
mov
mov
cmp
ja
jmp
cmp
jne
mov
mov
mov
mov
call
jmp
data16
jmp
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
call
lea
lea
mov
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
cmovne
mov
lea
mov
mov
jmp
nop
mov
mov
sub
cmp
mov
mov
cmovbe
mov
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
jmp
nop
cmp
je
jmp
nop
cmp
mov
je
jmp
cmp
jne
mov
call
lea
mov
mov
mov
mov
mov
sub
mov
sub
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
call
sub
mov
jmp
cmp
je
nop
mov
cmp
je
cmp
jne
mov
add
pop
pop
pop
pop
ret
data16
jmp
mov
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
cmp
mov
mov
cmovne
mov
lea
jmp
mov
mov
mov
inc
mov
mov
mov
call
sub
mov
nop
cmp
jg
cmp
jne
mov
mov
cmp
ja
mov
jmp
data16
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jg
cmp
jne
mov
call
mov
mov
mov
mov
mov
call
mov
jmp
cmp
jne
test
mov
mov
cmovne
jmp
cmp
je
cmp
jne
mov
mov
mov
mov
mov
jmp
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
mov
data16
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
jmp
nop
jmp
mov
mov
call
sub
mov
add
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
sub
mov
mov
lea
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
imul
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
mov
je
cmp
jne
mov
call
test
mov
cmove
jmp
cmp
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
inc
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
call
sub
movzx
lea
pop
pop
pop
ret
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
call
mov
mov
mov
jmp
mov
call
mov
mov
call
cmp
sete
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
call
sub
test
mov
cmovne
xor
jmp
nop
jmp
movzx
and
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
sete
movzx
pop
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
nop
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
call
mov
call
sub
mov
mov
call
sub
mov
add
pop
pop
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
and
and
and
and
mov
and
and
and
and
and
and
and
and
and
and
and
mov
mov
and
mov
and
mov
and
jmp
mov
add
mov
mov
call
sub
mov
nop
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
nop
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
add
mov
mov
call
sub
mov
jmp
mov
mov
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
test
mov
mov
cmovne
jmp
mov
mov
and
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
call
add
pop
ret
nop
push
mov
call
pop
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
lea
mov
call
sub
mov
mov
mov
jmp
nop
mov
mov
mov
cmp
jg
cmp
je
jmp
xchg
cmp
jg
cmp
jne
mov
mov
call
sub
mov
jmp
nop
cmp
je
cmp
je
cmp
jne
mov
mov
mov
call
sub
test
mov
cmovne
jmp
mov
mov
call
mov
mov
call
sub
mov
mov
mov
lea
call
sub
test
mov
cmovne
jmp
data16
jmp
mov
lea
pop
pop
pop
pop
ret
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
call
mov
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
cmp
sbb
and
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
push
mov
sub
mov
mov
mov
call
sub
mov
call
add
pop
ret
data16
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
lea
mov
call
sub
mov
mov
mov
call
sub
mov
call
mov
mov
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
call
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
lea
mov
call
sub
mov
mov
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
call
mov
mov
lea
lea
jmp
nop
mov
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
lea
mov
call
sub
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
call
sub
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
jmp
nop
cmp
jne
mov
mov
cmp
jb
jmp
data16
cmp
mov
je
jmp
cmp
jne
mov
mov
call
mov
sub
mov
mov
call
sub
mov
call
mov
sub
mov
mov
mov
mov
mov
call
mov
call
mov
sub
mov
add
mov
jmp
mov
call
cmp
mov
mov
cmovb
jmp
cmp
jne
lea
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
call
lea
call
add
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
imul
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
mov
je
cmp
jne
mov
call
test
mov
cmove
jmp
cmp
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
data16
jmp
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
xor
mov
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
mov
cmp
je
cmp
jne
mov
call
test
mov
cmove
jmp
cmp
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
ret
data16
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
sub
mov
mov
mov
call
add
mov
add
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
call
mov
mov
mov
call
sub
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
call
pop
ret
int3
push
mov
push
push
and
sub
mov
mov
lea
mov
call
sub
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
lea
jmp
mov
mov
call
sub
mov
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
imul
add
mov
call
mov
mov
mov
mov
mov
jmp
nop
cmp
jne
jmp
nop
cmp
jne
mov
mov
sub
sar
mov
mov
mov
mov
cmp
je
mov
imul
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
lea
call
sub
mov
add
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
mov
cmp
je
mov
jmp
mov
mov
call
sub
mov
jmp
cmp
jne
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
call
mov
shr
mov
sub
mov
mov
mov
jmp
nop
cmp
mov
mov
cmovb
mov
mov
shr
add
mov
mov
mov
jmp
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
xor
mov
cmp
je
cmp
jle
cmp
mov
je
jmp
data16
cmp
je
mov
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
sete
movzx
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
mov
mov
jmp
add
data16
mov
cmp
mov
cmovne
mov
jmp
nop
mov
mov
call
sub
mov
mov
cmp
jg
cmp
je
cmp
mov
je
cmp
jne
jmp
cmp
jne
add
pop
pop
pop
pop
ret
data16
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
add
pop
pop
ret
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
data16
jmp
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
lea
mov
call
sub
mov
mov
mov
call
sub
mov
mov
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
lea
lea
mov
mov
mov
mov
jmp
mov
mov
data16
cmp
jle
cmp
je
cmp
jne
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
jmp
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
lea
pop
pop
pop
pop
ret
xchg
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
lea
call
mov
mov
lea
mov
call
call
mov
sar
shr
add
and
neg
lea
mov
lea
mov
mov
call
mov
lea
call
sub
lea
call
mov
lea
call
sub
call
mov
sar
shr
add
and
neg
lea
mov
lea
mov
mov
call
mov
lea
call
sub
lea
call
call
and
mov
mov
lea
call
sub
lea
call
mov
lea
mov
call
lea
call
xor
test
jne
mov
xor
data16
cmp
je
inc
sub
cmp
jbe
jmp
xor
cmp
jb
mov
call
dec
xor
div
mov
mov
call
mov
sar
shr
add
and
neg
lea
mov
call
mov
mov
imul
mov
shr
sar
add
imul
sub
shl
lea
lea
mov
mov
call
mov
mov
lea
call
sub
cmp
je
mov
lea
mov
mov
lea
call
sub
mov
lea
call
sub
mov
call
lea
call
mov
lea
call
mov
mov
mov
lea
mov
call
lea
call
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
call
lea
mov
lea
mov
call
sub
lea
mov
mov
call
sub
mov
mov
call
sub
mov
test
je
lea
lea
nop
mov
call
mov
mov
call
sub
mov
mov
call
lea
lea
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
mov
call
mov
call
cmp
je
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
mov
lea
mov
call
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
call
sub
test
je
mov
lea
call
mov
cmp
je
mov
mov
mov
mov
mov
test
je
mov
call
sub
lea
lea
mov
call
lea
mov
mov
mov
call
sub
lea
mov
mov
lea
call
sub
mov
mov
call
sub
test
jne
lea
call
mov
add
mov
mov
call
mov
and
lea
call
lea
call
lea
call
lea
call
lea
call
movzx
lea
pop
pop
pop
pop
ret
nop
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
cmp
je
mov
mov
mov
call
sub
mov
call
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
add
pop
pop
ret
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
push
mov
push
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
mov
mov
call
cmp
jg
cmp
jne
mov
mov
cmp
ja
mov
jmp
nop
cmp
jne
jmp
cmp
je
cmp
jne
mov
mov
jmp
data16
jmp
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
jg
cmp
je
cmp
je
jmp
nop
cmp
jne
mov
mov
cmp
jb
mov
jmp
nop
mov
inc
mov
mov
mov
mov
call
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
call
mov
shr
mov
sub
mov
mov
mov
jmp
cmp
mov
mov
cmovb
mov
nop
mov
shr
add
mov
mov
mov
jmp
xchg
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
xor
mov
cmp
je
cmp
jle
cmp
mov
je
cmp
je
mov
cmp
mov
je
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
push
push
sub
lea
lea
mov
mov
mov
jmp
nop
mov
mov
call
sub
mov
mov
mov
jmp
data16
mov
mov
cmp
jle
cmp
je
xor
cmp
je
cmp
jne
mov
cmp
jne
jmp
nop
cmp
je
nop
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
nop
mov
call
mov
sub
sar
mov
mov
mov
mov
call
sub
mov
mov
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
call
sub
mov
jmp
nop
cmp
jne
jmp
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
je
cmp
jne
mov
mov
jmp
nop
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
lea
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
mov
cmp
jg
cmp
jne
mov
call
jmp
data16
cmp
jg
cmp
jne
mov
call
mov
cmp
jne
mov
jmp
nop
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jg
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jne
mov
call
mov
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
cmp
je
mov
jmp
cmp
jne
lea
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
mov
call
mov
mov
mov
jmp
cmp
jne
mov
dec
mov
jmp
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jne
mov
mov
call
mov
mov
call
jmp
cmp
jne
mov
mov
call
mov
mov
jmp
cmp
jne
mov
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jne
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jne
jmp
cmp
jne
mov
call
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
lea
call
sub
mov
mov
cmp
jne
mov
jmp
cmp
jne
jmp
cmp
jne
lea
call
mov
mov
call
jmp
cmp
jne
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jne
mov
mov
call
mov
mov
jmp
cmp
jne
mov
mov
call
mov
jmp
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
mov
call
sub
mov
call
mov
mov
mov
jmp
cmp
jne
mov
cmp
mov
mov
cmove
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
cmp
je
mov
jmp
cmp
jne
mov
call
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
movzx
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
movzx
cmp
sete
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
jmp
cmp
je
cmp
jne
mov
call
mov
mov
jmp
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
jmp
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
cmp
je
mov
jmp
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
call
mov
mov
call
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
push
mov
push
and
sub
mov
lea
call
sub
mov
mov
call
mov
call
lea
mov
mov
lea
call
sub
mov
mov
call
mov
call
mov
mov
lea
call
sub
mov
mov
call
mov
call
mov
mov
lea
call
sub
mov
mov
call
mov
mov
mov
call
mov
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
data16
push
mov
push
push
sub
mov
call
mov
mov
mov
call
sub
mov
mov
call
add
pop
pop
pop
ret
data16
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
push
mov
push
mov
lea
call
lea
call
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
nop
mov
call
add
mov
mov
call
sub
mov
mov
call
sub
mov
cmp
jg
cmp
jne
jmp
nop
cmp
jg
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
jmp
mov
mov
call
mov
sub
cmp
mov
cmovb
jmp
cmp
je
data16
jmp
add
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
lea
call
sub
mov
mov
call
mov
call
mov
mov
lea
call
sub
mov
call
mov
call
mov
mov
lea
call
sub
mov
call
mov
call
mov
mov
lea
call
sub
mov
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
call
mov
mov
add
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
call
mov
sub
cmp
mov
cmovb
data16
cmp
jg
cmp
jg
cmp
jne
jmp
nop
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
jmp
mov
call
add
mov
mov
call
sub
mov
mov
call
sub
mov
jmp
cmp
jne
add
pop
pop
pop
ret
cmp
je
nop
jmp
mov
call
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
sub
mov
mov
mov
call
add
mov
add
pop
pop
pop
ret
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
call
sub
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
sar
imul
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
xchg
jmp
mov
imul
add
mov
mov
imul
add
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
mov
sub
sar
pop
ret
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
sub
mov
and
mov
mov
call
add
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
call
mov
mov
mov
pop
pop
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
nop
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
lock
dec
mov
mov
jmp
data16
mov
mov
mov
mov
call
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
shl
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
je
cmp
mov
je
cmp
je
cmp
mov
je
jmp
mov
call
test
mov
cmove
jmp
cmp
jne
add
pop
pop
pop
pop
ret
data16
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
push
push
push
and
sub
mov
mov
lea
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
sub
mov
call
lea
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
call
sub
mov
call
lea
mov
mov
call
lea
lea
mov
call
mov
lea
mov
call
sub
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
mov
mov
call
lea
lea
mov
call
mov
mov
lea
mov
call
lea
call
lea
call
cmp
je
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
mov
xor
test
je
mov
mov
call
sub
mov
mov
lea
call
sub
mov
test
je
mov
lea
call
lea
mov
mov
mov
mov
mov
call
sub
test
je
mov
lea
call
mov
mov
lea
call
sub
mov
lea
mov
lea
mov
call
sub
lea
mov
mov
call
sub
lea
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
mov
jmp
nop
mov
call
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
test
jne
mov
mov
call
mov
test
jne
mov
call
lea
jmp
xchg
inc
cmp
jae
movzx
cmp
je
movzx
cmp
je
jmp
nop
dec
cmp
jae
movzx
cmp
je
movzx
cmp
je
data16
mov
sub
mov
mov
lea
mov
call
sub
mov
call
test
je
mov
call
xor
test
je
nop
mov
mov
call
sub
movzx
cmp
jne
mov
mov
call
sub
mov
inc
mov
call
cmp
jb
mov
call
movzx
cmp
lea
je
mov
mov
call
sub
mov
mov
mov
mov
call
mov
call
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
lea
mov
mov
call
lea
mov
mov
call
lea
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
mov
mov
mov
mov
call
mov
call
mov
lea
mov
mov
call
mov
call
mov
lea
call
mov
lea
mov
mov
call
lea
mov
lea
call
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
call
sub
lea
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
call
jmp
lea
call
mov
mov
test
je
mov
call
sub
lea
call
lea
call
lea
call
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
call
add
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
push
mov
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
mov
data16
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
jmp
nop
jmp
mov
mov
call
sub
mov
add
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
add
mov
mov
mov
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
cmovne
mov
lea
mov
mov
jmp
nop
mov
call
mov
mov
sub
mov
sub
lea
add
mov
mov
mov
call
mov
mov
call
sub
mov
mov
cmp
jg
cmp
jne
jmp
data16
cmp
jg
cmp
mov
je
jmp
data16
cmp
jg
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
jmp
cmp
jne
mov
mov
call
sub
mov
jmp
mov
mov
sub
cmp
mov
mov
cmovbe
jmp
cmp
je
nop
mov
cmp
je
cmp
jne
mov
add
pop
pop
pop
pop
ret
data16
jmp
mov
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
test
mov
mov
cmove
mov
mov
mov
mov
mov
jmp
nop
mov
mov
not
cmp
mov
cmovbe
mov
cmp
jg
cmp
mov
jne
jmp
nop
cmp
jg
cmp
mov
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
data16
cmp
jg
cmp
mov
jne
mov
mov
add
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
mov
jne
jmp
cmp
jg
cmp
mov
jne
mov
call
mov
sub
mov
mov
mov
mov
call
sub
mov
mov
jmp
cmp
jg
cmp
je
cmp
mov
je
cmp
mov
jne
jmp
cmp
mov
jne
mov
mov
mov
jmp
mov
call
mov
add
mov
mov
mov
mov
call
mov
mov
call
sub
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
call
push
mov
push
push
sub
mov
movsx
mov
mov
jmp
mov
call
mov
jmp
data16
mov
cmp
jle
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
jmp
xor
jmp
cmp
jne
add
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
test
je
mov
mov
jmp
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
nop
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
jmp
nop
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
mov
cmp
mov
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
mov
call
mov
mov
data16
cmp
jg
cmp
jne
jmp
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
call
mov
mov
mov
jmp
nop
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jne
mov
call
mov
mov
call
jmp
mov
call
mov
mov
call
mov
mov
mov
jmp
cmp
jne
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
call
mov
mov
nop
cmp
jg
cmp
jne
jmp
data16
cmp
jg
cmp
jg
cmp
jne
mov
jmp
nop
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
call
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
je
cmp
jne
mov
call
mov
mov
call
mov
mov
jmp
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jne
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
push
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
cmovne
mov
mov
mov
jmp
mov
nop
cmp
jg
cmp
jg
cmp
jne
jmp
nop
cmp
jne
jmp
nop
cmp
jg
cmp
jne
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
cmp
jbe
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
call
mov
cmp
je
mov
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
mov
mov
mov
cmp
jg
cmp
mov
mov
mov
jne
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jg
cmp
mov
mov
mov
jne
mov
mov
call
mov
mov
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
jmp
cmp
jg
cmp
mov
mov
mov
jne
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
sub
mov
mov
jmp
cmp
jg
cmp
mov
mov
mov
jne
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
jg
cmp
mov
mov
mov
jne
mov
mov
call
mov
mov
call
mov
cmp
mov
je
mov
jmp
cmp
jg
cmp
mov
mov
mov
jne
mov
call
mov
mov
mov
call
sub
mov
mov
jmp
cmp
jg
cmp
mov
mov
mov
jne
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
mov
mov
mov
jne
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
sub
mov
mov
jmp
cmp
mov
mov
mov
jne
mov
jmp
cmp
mov
mov
mov
jne
mov
jmp
cmp
je
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
jmp
mov
call
mov
mov
mov
mov
call
sub
mov
mov
inc
mov
mov
mov
mov
cmp
je
mov
jmp
cmp
mov
mov
mov
jne
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
mov
mov
call
sub
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
call
mov
mov
add
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
push
push
and
sub
mov
mov
call
mov
mov
mov
mov
lea
jmp
nop
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
test
mov
mov
cmovne
nop
cmp
jle
cmp
jg
cmp
mov
je
jmp
data16
cmp
jg
cmp
jne
mov
call
mov
cmp
je
mov
jmp
cmp
je
jmp
cmp
jne
mov
call
mov
mov
jmp
cmp
jne
jmp
cmp
jne
mov
lea
pop
pop
pop
pop
ret
data16
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
cmp
jne
mov
call
mov
mov
call
mov
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
imul
add
pop
ret
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
setbe
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
xor
jmp
nop
jmp
movzx
and
add
pop
ret
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
jmp
data16
add
add
mov
mov
cmp
mov
cmovne
mov
jmp
nop
mov
mov
mov
call
sub
mov
cmp
jg
cmp
mov
je
jmp
nop
cmp
je
cmp
je
cmp
je
data16
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
nop
mov
cmp
setbe
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
xor
jmp
nop
jmp
movzx
and
add
pop
ret
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
pop
ret
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
push
mov
and
sub
mov
mov
mov
lea
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
jmp
mov
data16
cmp
jg
cmp
jg
cmp
jne
jmp
nop
cmp
jne
mov
mov
cmp
jae
mov
jmp
nop
cmp
jg
cmp
jne
mov
mov
cmp
ja
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
mov
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
add
mov
call
mov
add
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
mov
call
test
mov
mov
cmove
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
sub
cmp
mov
mov
cmovae
jmp
cmp
jne
dec
mov
sub
add
lea
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
call
mov
sub
mov
mov
jmp
mov
cmp
je
mov
jmp
cmp
jne
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
push
sub
mov
mov
mov
call
mov
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
call
add
mov
mov
call
sub
mov
mov
call
sub
mov
data16
cmp
jg
cmp
jg
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
jmp
nop
cmp
jne
jmp
mov
mov
call
mov
sub
cmp
mov
cmovb
jmp
cmp
je
data16
jmp
add
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
mov
jmp
data16
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
jmp
mov
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
lea
mov
call
sub
mov
mov
lea
jmp
data16
mov
cmovne
cmp
jg
cmp
je
cmp
jne
mov
mov
mov
call
sub
test
mov
jmp
data16
cmp
jne
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
mov
jmp
nop
mov
mov
lea
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
jmp
cmp
jne
lea
call
add
lea
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
call
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
mov
mov
lea
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
call
mov
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
mov
sub
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
lea
mov
call
sub
mov
mov
lea
jmp
data16
mov
cmovne
cmp
jle
cmp
je
cmp
jne
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
mov
jmp
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
lea
call
sub
test
mov
jmp
cmp
jne
mov
mov
mov
call
sub
test
mov
jmp
cmp
jne
lea
call
add
lea
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
sete
movzx
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
call
mov
shr
mov
sub
mov
mov
mov
jmp
nop
cmp
mov
mov
cmovb
mov
mov
shr
add
mov
mov
mov
jmp
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
xor
mov
cmp
je
cmp
jg
cmp
mov
je
jmp
data16
cmp
je
cmp
je
mov
cmp
mov
je
jmp
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
shl
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
mov
je
cmp
jne
mov
call
test
mov
cmove
jmp
cmp
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
sar
imul
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
xchg
jmp
mov
imul
add
mov
mov
imul
add
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
int3
push
mov
push
push
push
sub
call
mov
shr
mov
sub
mov
mov
mov
jmp
cmp
mov
mov
cmovb
mov
nop
mov
shr
add
mov
mov
mov
jmp
xchg
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
xor
mov
cmp
je
cmp
jle
cmp
mov
je
mov
cmp
mov
je
cmp
jne
jmp
cmp
jne
add
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
imul
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
mov
je
cmp
jne
mov
call
test
mov
cmove
jmp
cmp
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
push
mov
call
mov
call
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
add
pop
pop
ret
int3
push
mov
push
push
push
sub
call
mov
shr
mov
sub
mov
mov
mov
jmp
cmp
mov
mov
cmovb
mov
nop
mov
shr
add
mov
mov
mov
jmp
xchg
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
xor
mov
cmp
je
cmp
jg
cmp
mov
je
cmp
je
mov
cmp
mov
je
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
mov
lea
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
lea
jmp
nop
mov
mov
mov
jmp
nop
mov
cmp
jg
cmp
jne
mov
call
mov
cmp
jne
jmp
nop
cmp
je
cmp
jne
mov
call
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
jmp
cmp
jne
lea
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
lea
jmp
call
sub
mov
add
mov
nop
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
nop
cmp
jg
cmp
jg
cmp
jne
mov
mov
sub
sar
mov
mov
mov
mov
cmp
je
mov
imul
jmp
nop
cmp
jne
mov
mov
mov
mov
mov
imul
add
mov
call
mov
mov
mov
mov
lea
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
je
cmp
jne
mov
mov
call
sub
mov
jmp
mov
mov
mov
mov
cmp
je
mov
jmp
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
push
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
nop
jmp
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
call
sub
mov
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
lea
mov
call
mov
call
mov
mov
mov
jmp
mov
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
lea
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
data16
cmp
jne
jmp
data16
cmp
jne
mov
jmp
cmp
jne
jmp
cmp
jne
mov
jmp
cmp
jne
jmp
cmp
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
lea
call
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
lea
call
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
lea
call
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
lea
mov
mov
call
sub
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
lea
mov
mov
mov
call
mov
call
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
jmp
cmp
jg
cmp
jne
mov
lea
mov
mov
call
sub
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
lea
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
mov
call
mov
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
lea
mov
mov
call
sub
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
lea
mov
mov
mov
call
mov
mov
lea
mov
mov
call
sub
mov
mov
call
sub
test
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
mov
call
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
lea
call
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
lea
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
test
setne
mov
mov
mov
mov
movzx
mov
lea
mov
call
sub
mov
mov
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
jmp
cmp
jne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
mov
call
sub
mov
mov
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
jmp
cmp
jne
mov
lea
mov
mov
call
sub
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
call
mov
lea
jmp
cmp
jne
mov
mov
mov
mov
call
sub
mov
lea
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
lea
mov
mov
mov
call
mov
mov
lea
mov
mov
call
sub
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
mov
lea
call
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
call
mov
mov
call
mov
jmp
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
mov
mov
lea
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
call
mov
mov
mov
call
sub
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
call
pop
ret
int3
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
movsx
jmp
nop
mov
mov
sub
mov
mov
mov
call
sub
mov
cmp
jg
cmp
jne
mov
mov
cmp
jbe
mov
jmp
data16
cmp
je
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
jne
add
pop
pop
pop
ret
data16
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
movsd
movsd
movsd
movsd
movsd
movsd
movsd
movsd
lea
lea
mov
call
sub
lea
lea
mov
call
sub
lea
add
mov
call
sub
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
add
pop
ret
push
mov
push
push
sub
mov
mov
call
mov
mov
mov
mov
call
sub
mov
add
pop
pop
pop
ret
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
xor
nop
cmp
jg
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
mov
call
mov
mov
mov
mov
jmp
nop
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
jmp
cmp
jne
test
mov
cmovne
jmp
cmp
jne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
call
cmp
sete
mov
jmp
cmp
jne
mov
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
call
mov
mov
call
mov
mov
mov
jmp
mov
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
call
mov
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
call
mov
mov
mov
mov
lea
jmp
nop
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
test
mov
mov
cmovne
nop
cmp
jg
cmp
mov
je
jmp
nop
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
call
mov
mov
jmp
cmp
jne
mov
call
mov
cmp
je
mov
jmp
data16
cmp
jne
jmp
cmp
jne
mov
lea
pop
pop
pop
pop
ret
data16
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
lea
mov
call
sub
mov
mov
lea
lea
lea
jmp
mov
data16
cmp
jg
cmp
jg
cmp
jne
mov
call
mov
jmp
data16
cmp
jne
jmp
nop
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
lea
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
je
cmp
jne
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
mov
call
sub
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
lea
mov
lea
call
sub
test
mov
mov
cmovne
jmp
lea
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
nop
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
call
not
cmp
mov
cmovb
jmp
nop
cmp
jne
mov
mov
cmp
jb
jmp
cmp
jne
mov
call
add
mov
mov
call
sub
mov
mov
call
sub
mov
jmp
cmp
je
data16
jmp
add
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
not
mov
mov
test
mov
mov
cmove
mov
movsx
mov
jmp
mov
data16
cmp
jg
cmp
jne
mov
mov
cmp
jbe
jmp
data16
cmp
jg
cmp
jg
cmp
je
cmp
je
cmp
jne
mov
mov
add
mov
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
data16
cmp
mov
je
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
jmp
cmp
je
nop
jmp
mov
add
pop
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
lea
mov
mov
lea
mov
call
sub
mov
mov
lea
lea
jmp
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
xchg
cmp
jne
jmp
nop
cmp
jne
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
call
sub
mov
jmp
cmp
je
cmp
jne
mov
call
mov
mov
mov
call
sub
mov
jmp
lea
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
lea
mov
call
sub
lea
mov
lea
call
sub
test
mov
mov
cmovne
jmp
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
data16
jmp
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
call
pop
pop
pop
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
jmp
nop
mov
mov
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
nop
jmp
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
call
mov
shr
mov
sub
mov
mov
mov
jmp
cmp
mov
mov
cmovb
mov
nop
mov
shr
add
mov
mov
mov
jmp
xchg
mov
cmp
jne
mov
mov
cmp
jb
jmp
nop
xor
mov
cmp
je
cmp
jle
cmp
mov
je
cmp
je
mov
cmp
mov
je
jmp
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
pop
ret
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
movzx
shl
movzx
add
movzx
shl
movzx
shl
add
movzx
shl
add
movzx
add
mov
mov
call
mov
mov
call
sub
test
je
xor
xor
nop
mov
mov
and
mov
shr
mov
movzx
sub
movsx
mov
mov
call
sub
inc
mov
add
cmp
jb
mov
add
pop
pop
pop
pop
ret
nop
push
mov
push
push
sub
mov
call
mov
mov
mov
call
sub
mov
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
lea
mov
mov
call
add
pop
ret
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
lea
mov
mov
call
mov
mov
jmp
nop
mov
mov
call
sub
mov
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jbe
mov
jmp
xchg
jmp
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
mov
sub
sar
imul
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
data16
cmp
jg
cmp
jg
cmp
jne
mov
call
mov
mov
call
jmp
nop
cmp
jne
jmp
nop
cmp
jg
cmp
jne
mov
call
mov
mov
call
mov
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
jmp
cmp
je
cmp
jne
mov
call
mov
mov
call
mov
mov
call
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
int3
push
mov
push
and
sub
mov
lea
call
sub
mov
mov
call
mov
call
lea
mov
mov
lea
call
sub
mov
mov
call
mov
call
mov
mov
lea
call
sub
mov
mov
call
mov
call
mov
mov
lea
call
sub
mov
mov
call
mov
mov
mov
call
mov
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
lea
mov
call
sub
mov
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
call
mov
mov
lea
mov
call
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
jmp
imul
data16
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
jmp
cmp
jne
mov
mov
sub
sar
mov
mov
mov
mov
cmp
je
mov
jmp
data16
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
je
cmp
jne
mov
mov
mov
mov
mov
imul
add
mov
mov
mov
mov
lea
call
sub
mov
add
mov
jmp
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
mov
mov
cmp
je
mov
jmp
lea
pop
pop
pop
pop
ret
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
nop
mov
call
add
mov
mov
call
sub
mov
mov
call
sub
mov
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
mov
cmp
jb
mov
jmp
nop
cmp
jne
jmp
mov
mov
call
mov
sub
cmp
mov
cmovb
jmp
cmp
jne
add
pop
pop
pop
ret
cmp
je
xchg
jmp
mov
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
lea
mov
lea
call
mov
call
mov
mov
mov
lea
jmp
mov
mov
call
sub
mov
mov
call
sub
test
mov
mov
cmovne
nop
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
jmp
nop
cmp
jne
jmp
nop
cmp
jne
jmp
cmp
jne
jmp
cmp
jne
jmp
cmp
jne
mov
mov
lea
call
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
mov
call
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
test
setne
mov
mov
mov
mov
movzx
mov
lea
mov
call
sub
mov
mov
mov
mov
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
lea
call
mov
call
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
jmp
cmp
jne
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
call
mov
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
mov
jmp
cmp
jg
cmp
jne
lea
call
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
mov
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
call
sub
mov
mov
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
je
cmp
jne
mov
lea
mov
mov
call
sub
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
mov
call
sub
mov
mov
mov
lea
call
mov
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
cmp
je
mov
jmp
cmp
jne
mov
lea
call
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
jmp
cmp
jne
mov
mov
lea
call
mov
mov
lea
mov
mov
call
sub
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
call
sub
mov
lea
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
mov
call
sub
mov
mov
call
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
call
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
jmp
cmp
jne
mov
lea
mov
mov
call
sub
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
call
mov
mov
call
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
lea
mov
mov
call
sub
mov
mov
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
call
mov
lea
jmp
cmp
jne
mov
call
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
lea
call
mov
call
mov
mov
call
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
jmp
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
lea
call
sub
test
mov
mov
cmovne
jmp
cmp
jne
mov
mov
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
jmp
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
push
push
mov
jmp
nop
mov
call
mov
mov
jmp
data16
mov
cmp
je
cmp
je
cmp
jne
mov
call
mov
mov
call
mov
cmp
jne
jmp
nop
jmp
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
sub
sar
pop
ret
int3
int3
int3
push
mov
push
push
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
push
mov
push
mov
call
mov
pop
pop
ret
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
call
add
mov
mov
call
sub
mov
mov
call
sub
mov
data16
cmp
jle
cmp
jg
cmp
jne
jmp
nop
cmp
je
cmp
jne
mov
mov
call
mov
sub
cmp
mov
cmovb
jmp
cmp
jne
mov
mov
cmp
jb
mov
jmp
cmp
je
xchg
jmp
add
pop
pop
pop
ret
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
call
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
cmp
mov
mov
cmova
shl
mov
xor
jmp
mov
data16
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
jmp
cmp
mov
je
cmp
jne
mov
call
test
mov
cmove
jmp
cmp
je
cmp
mov
je
cmp
jne
add
pop
pop
pop
pop
ret
nop
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
lea
mov
mov
call
lea
mov
mov
call
mov
add
pop
pop
ret
int3
int3
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
call
sub
test
mov
cmovne
nop
cmp
jg
cmp
jne
jmp
cmp
jg
cmp
jne
mov
mov
sub
mov
mov
mov
mov
cmp
je
mov
sar
jmp
data16
cmp
jg
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
mov
call
sub
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
cmp
je
mov
jmp
cmp
je
cmp
jne
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
lea
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
lea
call
sub
mov
add
mov
jmp
cmp
jne
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
lea
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
lea
jmp
nop
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
data16
jmp
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
sub
xor
movzx
add
pop
ret
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
sub
mov
and
mov
mov
call
add
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
sete
movzx
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
jmp
xchg
mov
call
mov
cmp
je
cmp
je
cmp
jne
test
mov
cmovne
jmp
jmp
mov
mov
mov
call
movzx
mov
mov
mov
mov
mov
mov
call
movzx
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
movzx
mov
mov
mov
mov
call
movzx
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
xor
mov
nop
imul
mov
cmp
je
and
cmp
jne
mov
mov
mov
mov
sub
lea
mov
mov
call
lea
call
mov
call
sub
mov
lea
call
lea
mov
mov
call
lea
call
mov
mov
mov
call
sub
mov
lea
call
lea
mov
mov
mov
mov
call
sub
mov
sub
je
cmp
mov
cmovbe
mov
xor
mov
nop
mov
xor
inc
cmp
jb
add
jmp
mov
data16
inc
cmp
jb
xor
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
rcl
mov
sub
mov
pop
add
cmpps
outs
leave
jb
pop
or
test
pop
fistp
mov
adc
push
sbb
and
into
add
cmc
cmp
adc
add
gs
push
popf
xlat
bndstx
xor
add
xchg
or
fsub
addr16
hlt
or
cmps
hlt
push
cmp
push
clc
add
ins
icebp
out
push
push
call
or
xlat
test
or
pop
fidiv
call
aas
test
push
xor
xchg
sub
xlat
int3
add
xchg
or
adc
xchg
mov
movs
and
adc
cld
test
add
or
outs
jne
das
test
or
or
enter
or
loopne
and
mov
sahf
xor
jnp
mov
mov
or
scas
mov
leave
je
mov
mov
test
jb
xchg
neg
aas
pop
repz
push
push
lock
inc
sub
iret
jl
mov
call
iret
ins
or
sbb
sbb
inc
jecxz
mov
adc
jne
je
clc
imul
sbb
pop
add
mov
adc
mov
jl
js
push
mov
repnz
js
sub
(bad)
push
push
xchg
add
or
adc
jo
or
mov
xor
jb
movs
out
mov
icebp
pop
sbb
mov
xor
test
jbe
jle
and
lea
fld
rcl
ds
mov
sbb
pop
pop
rcl
enter
ja
pop
xchg
sbb
lock
in
enter
shl
ret
or
test
(bad)
xor
test
inc
sbb
sub
or
or
adc
out
or
je
pop
pop
into
test
add
popf
imul
inc
ins
lds
jg
jb
jmp
ins
ins
mov
or
call
ds
xchg
fnstenv
cdq
cmp
cs
sbb
or
push
div
sbb
add
mov
inc
outs
push
lahf
xchg
inc
lea
adc
call
xor
push
or
or
jne
stos
in
inc
push
into
pop
ret
call
jmp
mov
mov
jge
push
test
shr
aaa
sbb
ss
jl
(bad)
and
mov
or
mov
ja
or
fadd
xchg
in
mov
repnz
aas
xchg
lods
stos
repnz
mov
idiv
das
cmp
push
int
in
lahf
dec
add
iret
pop
xchg
xchg
and
add
adc
pop
scas
sub
or
jbe
push
popf
or
cmps
sub
sbb
mov
movs
leave
dec
mov
xchg
inc
xor
jmp
xchg
mov
or
rcr
xchg
dec
sub
leave
cmp
jno
xchg
hlt
jmp
push
push
xchg
clc
jg
loop
lock
pop
pop
or
pop
cmps
jno
or
int
test
popa
add
(bad)
leave
sub
adc
and
jmp
das
str
push
sbb
push
aas
pop
cmps
or
in
dec
das
sti
jo
mov
addr16
pop
jmp
push
scas
xor
jns
cmc
pushf
shl
inc
dec
hlt
push
call
fwait
cld
in
test
subps
fadd
add
fadd
sbb
xlat
je
pop
sbb
or
in
adc
in
or
xchg
cli
repz
cmps
imul
xchg
mov
ud2
sbb
dec
dec
adc
stos
fdiv
fcom
in
test
sub
rcr
xchg
adc
add
push
or
sbb
sub
push
mov
repz
ffreep
add
repnz
add
iret
mov
aam
mov
jge
in
push
jmp
(bad)
stos
inc
add
inc
add
jmp
cdq
jno
push
in
out
sbb
adc
sbb
pslld
test
cld
pop
and
bound
aad
sub
push
mov
xor
arpl
xor
adc
jmp
outs
addr16
sub
xchg
dec
lea
mov
ret
jo
test
jecxz
loopne
popf
mov
jl
icebp
out
leave
inc
outs
sub
pop
arpl
adc
(bad)
adc
push
pushf
cld
call
jmp
mov
movs
mov
(bad)
jno
aam
iret
add
mov
mov
jmp
jo
es
rcl
nop
lods
mov
or
push
es
add
cli
push
jl
movs
loope
and
repz
js
dec
movs
fadd
push
mov
add
pop
lods
and
adc
jbe
icebp
mov
outs
jmp
sub
stos
retf
fmul
mov
cdq
push
popf
push
sbb
add
xor
mov
mov
sub
sbb
jbe
or
sub
cld
call
jno
push
fmul
ror
xchg
out
lods
or
in
jge
mov
jae
push
cmp
add
aam
pushf
xchg
jae
jo
or
popf
sar
mov
je
test
xor
repnz
dec
sub
jecxz
imul
mov
cmp
ss
xor
xchg
or
or
fidivr
int3
push
outs
nop
jb
add
mov
mov
pop
test
pop
push
cmp
dec
or
imul
ret
xor
ret
cmp
mov
dec
mov
adc
mov
dec
adc
inc
mov
leave
mov
(bad)
pop
mov
add
mov
retf
hlt
adc
fs
inc
loope
xchg
jb
outs
test
add
and
(bad)
addr16
pop
repz
mov
aaa
push
fld
dec
enter
jp
pop
mov
adc
lds
xchg
add
xchg
pop
mov
xor
and
mov
jb
cmps
mov
xchg
sti
or
sbb
fcom
les
jl
lock
enter
ret
sub
xchg
dec
lea
mov
ret
jo
fwait
popf
jb
xchg
dec
add
pop
data16
aad
or
fldcw
push
fs
or
or
(bad)
imul
(bad)
jno
mov
sbb
sbb
dec
xor
ins
add
push
daa
test
adc
addr16
and
sbb
fcom
cmp
repz
mov
fsubr
cmps
imul
sub
xlat
push
add
es
xchg
cdq
push
dec
or
mov
xchg
shl
xchg
fwait
jl
ins
mov
xor
xchg
and
mov
imul
or
shl
xchg
push
xor
out
adc
sar
lea
inc
dec
add
xchg
add
xor
sbb
push
outs
dec
enter
mov
sti
test
pop
push
sbb
cmp
shl
xor
dec
ret
cmps
cwde
and
sub
test
mov
xor
or
sahf
ins
repz
fsub
int3
gs
and
sbb
cld
adc
aad
or
movs
sbb
lods
iret
lods
dec
dec
ror
sbb
xchg
nop
dec
or
jp
xlat
jns
clc
popf
mov
or
rcl
xor
adc
xchg
mov
mov
mov
aam
mul
inc
imul
mov
popw
jg
push
hlt
outs
jmp
or
xchg
inc
mov
mov
mov
cmps
shr
inc
xor
rcr
out
retf
pop
movs
arpl
(bad)
xor
adc
add
in
jp
mov
push
jmp
sbb
push
out
mov
mov
sbb
mov
retf
push
pop
fldenv
(bad)
(bad)
mul
outs
jl
pop
repz
adc
cmp
out
xchg
ficom
add
int3
imul
mov
push
aam
pop
and
adc
retf
add
inc
icebp
mov
xchg
fcomp
fcomp
xor
rcr
push
push
cmp
or
js
push
push
aaa
or
leave
mov
cld
sub
adc
cmp
leave
ds
retf
xchg
clc
lods
jno
addr16
fs
mov
aad
(bad)
popf
sub
rcl
inc
sub
sub
sbb
or
(bad)
sub
fcomp
push
test
fcom
cld
call
pop
dec
popf
jo
hlt
fwait
mov
cmps
xchg
pop
xchg
(bad)
loopne
lahf
fsub
push
jb
rcr
enter
mov
jae
sbb
nop
or
mov
dec
or
mov
xchg
cdq
je
pop
test
sub
and
call
mov
rol
lahf
(bad)
mov
xchg
ror
outs
sbb
fild
sahf
repz
(bad)
stc
mov
inc
and
test
dec
clc
popa
add
outs
scas
add
hlt
sub
test
or
adc
push
cld
pop
pushf
cld
fmul
add
fcomp
call
shl
jge
push
or
push
out
addr16
and
fld
in
add
sub
and
xchg
cld
shl
mov
mov
and
nop
fwait
sbb
adc
ja
sbb
adc
psubw
(bad)
clc
adc
or
div
(bad)
clc
clc
push
jmp
rcr
adc
imul
jns
xchg
push
add
push
jno
les
ror
or
pop
inc
push
cs
call
stos
xchg
les
int3
pushf
adc
push
outs
push
mov
aas
das
clc
xor
(bad)
lea
adc
int3
out
jmp
test
xchg
or
cs
ins
call
push
fldenv
cwde
cmps
push
dec
and
imul
int3
or
push
or
adc
add
jle
test
retf
les
popf
push
xor
jae
fidiv
ja
push
adc
push
or
jge
dec
pop
xchg
(bad)
fcom
popa
sbb
sbb
fmul
push
cmp
mov
xchg
dec
add
jae
adc
aad
add
cdq
sub
mov
push
or
fadd
frstor
or
jecxz
mov
xchg
jl
(bad)
iret
mov
add
sti
ins
mov
add
and
outs
test
add
mov
pop
out
je
mov
push
out
scas
clc
mov
xor
xchg
push
xor
adc
sub
clc
adc
mov
js
ins
(bad)
adc
jb
std
pop
setl
ds
retf
or
add
mov
adc
inc
fs
fisttp
stc
push
push
adc
mov
pop
arpl
iret
mov
xor
cdq
fcomp
sub
pushf
test
adc
add
ins
fistp
push
scas
iret
mov
fld
cmps
mov
jmp
cmp
jnp
cmp
push
(bad)
retf
mov
gs
mov
adc
neg
xor
xchg
je
xchg
and
adc
jg
and
adc
and
test
adc
add
lahf
cmp
outs
mov
or
fcom
xor
dec
out
adc
pop
pop
mov
iret
fild
cld
imul
(bad)
lods
jp
mov
fmul
or
and
int3
cs
dec
loopne
and
or
cs
pop
int3
or
btr
mov
fwait
mov
pusha
rcr
movs
jno
movs
jmp
cwde
inc
sbb
pop
adc
mov
pop
or
mov
lods
and
or
or
xor
test
jl
inc
mov
mov
hlt
cdq
loop
in
xchg
cmp
popf
ins
pusha
sub
mov
sub
outs
push
xchg
xchg
in
xor
outs
xchg
and
(bad)
addr16
daa
daa
mov
test
popa
sbb
out
push
or
mov
or
mov
or
cld
pop
and
lock
dec
das
cmp
mov
xor
xchg
or
xor
(bad)
fist
push
or
mov
add
fldcw
or
fst
leave
packssdw
dec
adc
or
rcr
loopne
scas
iret
xchg
jns
mov
or
sub
mov
cmp
sbb
add
sub
mov
repnz
cmps
shl
jg
mov
adc
call
sahf
call
cs
add
mov
mov
js
sub
iret
out
sub
push
add
adc
pushf
cmp
adc
xchg
xchg
stos
movs
rcr
frstor
sbb
lods
cmp
xor
out
mul
jb
mov
xor
adc
jne
jmp
pop
xchg
fcomp
scas
scas
or
or
inc
cmp
cmp
push
popf
adc
push
push
ret
sbb
leave
fdiv
shl
retf
pushf
cld
fcomp
xor
(bad)
aas
inc
mov
das
cmp
mov
and
inc
and
test
loope
lds
cmp
jo
es
jecxz
(bad)
out
or
pusha
or
stc
cld
ret
cmp
add
retf
or
mov
cmp
sub
outs
fild
imul
or
(bad)
xchg
pusha
or
xchg
lahf
daa
mov
add
and
mov
mov
fst
mov
push
and
or
inc
mov
cmp
cmp
push
fdivr
(bad)
sti
mov
jmp
pop
popf
cld
xor
loopne
xchg
jb
jb
jb
(bad)
or
vpmacssww
fadd
or
pop
pop
rcl
shr
iret
stos
jnp
mov
out
xchg
push
xor
xchg
mov
mov
adc
hlt
cld
sbb
pop
jbe
cmp
in
aam
add
sbb
dec
(bad)
pusha
idiv
inc
or
btr
sub
push
adc
xchg
add
ror
mov
mov
cmp
jb
add
sub
dec
das
lahf
push
mov
xchg
xchg
je
xchg
push
xor
xchg
scas
and
stos
jnp
pop
push
cwde
fwait
pop
xor
xchg
xchg
push
mov
xor
xchg
sbb
fnstsw
in
or
or
or
adc
and
or
lock
push
sbb
or
cmp
add
call
sbb
gs
or
pop
jo
hlt
call
or
fcom
mov
call
test
imul
push
pop
mov
or
(bad)
fisttp
fld
xchg
adc
xor
test
jbe
cmp
and
jecxz
retf
mov
jmp
xor
add
ret
push
mov
out
not
in
pop
mov
jge
outs
push
inc
mov
arpl
and
pusha
jl
jp
pop
xorps
or
retf
mov
dec
cmps
xchg
mov
(bad)
out
mov
add
lock
push
in
test
shr
ins
leave
add
jecxz
fwait
mov
jg
shr
shl
mov
dec
arpl
retf
aas
in
enter
or
or
cld
enter
(bad)
pop
xor
push
movs
imul
xchg
inc
sahf
rcl
jmp
test
sub
jmp
hlt
xchg
dec
adc
or
dec
push
cld
and
outs
(bad)
dec
daa
mov
sahf
(bad)
fstp
fcomp
push
pop
mov
retf
fcom
xchg
push
adc
mov
mov
dec
inc
mov
das
jmp
popa
push
mov
jmp
pop
outs
or
push
pop
push
sahf
xor
and
dec
sub
(bad)
adc
fldenv
dec
in
test
xchg
xor
sahf
rcl
int3
push
mov
push
mov
imul
pop
xor
push
sbb
cld
les
cld
push
pushf
cld
clc
push
daa
popf
jl
stos
rcr
inc
mov
mov
xchg
fnstenv
test
(bad)
clc
adc
test
adc
test
fcomp
push
sahf
clc
push
xchg
shr
ret
in
repnz
pushf
cld
rcl
inc
xchg
js
stos
adc
xchg
sbb
or
mov
aam
int
sub
xor
jge
fimul
test
out
retf
hlt
sbb
imul
push
adc
enter
pop
sbb
icebp
add
add
cmp
fdiv
popf
je
ins
sub
test
mul
sub
xor
adc
push
push
imul
dec
xor
pop
sbb
pop
dec
fsub
jp
ja
shl
fimul
push
test
sub
dec
sbb
aam
popa
cmc
fidivr
mov
push
adc
shr
xor
mov
ins
jg
adc
std
ins
loope
sbb
adc
pop
es
je
shl
sbb
mov
xchg
leave
je
cdq
xchg
fs
mov
pop
arpl
push
adc
pop
mov
sbb
or
or
push
adc
gs
cwde
loopne
push
mov
test
fnstenv
jne
mov
xlat
xchg
sub
pop
sbb
jae
xchg
daa
xchg
pop
je
xchg
adc
loop
sbb
fisttp
push
xor
cmps
and
popf
mov
and
jl
jg
adc
push
xor
sbb
out
inc
jne
ins
fwait
addr16
mov
stos
in
leave
and
dec
call
jbe
scas
loop
stos
fsubr
sbb
sbb
fcom
adc
pusha
cmp
gs
imul
imul
stos
es
cmp
shr
dec
push
arpl
sar
pop
fcomp
fsub
jae
(bad)
in
mov
mov
outs
xchg
and
ins
mov
push
adc
sub
inc
ret
ins
in
cmps
jb
dec
dec
pop
jbe
arpl
push
sub
add
ins
in
jmp
and
pop
dec
jecxz
arpl
and
adc
jecxz
pop
stc
sub
jnp
jecxz
arpl
pop
and
into
lahf
sub
add
nop
int3
je
xchg
sbb
jne
into
xchg
ins
daa
push
cli
and
ds
adc
cmps
add
jbe
je
sahf
pop
arpl
mov
mov
cmc
into
sub
mov
ins
in
mov
out
cdq
inc
and
in
jge
adc
iret
jae
daa
je
pop
in
arpl
dec
fstp
popf
mov
xchg
int3
inc
inc
rcr
jns
dec
dec
pop
jo
mov
pop
shl
sbb
cmp
loope
mov
cs
adc
sub
stos
or
add
gs
cld
popf
push
pusha
jnp
adc
or
cdq
mov
adc
sub
es
mov
retf
push
lock
push
adc
add
imul
dec
das
mov
hlt
das
or
stc
popa
xchg
cld
push
les
pop
pop
sbb
pop
and
and
jmp
clc
mov
sub
ret
movs
hlt
jge
imul
adc
mov
ss
push
adc
test
push
sbb
jne
cmp
mov
add
and
xor
add
mov
dec
or
xchg
cld
inc
fs
adc
mov
dec
inc
jns
jp
pop
(bad)
ins
jecxz
jno
xchg
adc
pop
jg
dec
mov
adc
int
and
adc
mov
js
iret
pop
in
adc
xchg
mov
add
das
and
jmp
lods
sbb
adc
or
cdq
nop
push
jns
push
or
push
mov
pop
scas
call
xchg
test
bound
inc
sbb
mov
loopne
add
mov
cld
sbb
adc
rcl
sbb
adc
nop
mov
call
les
das
jns
or
push
push
(bad)
cmc
jo
(bad)
iret
xchg
loopne
repnz
xor
or
or
adc
(bad)
pop
mov
popf
int
dec
mov
cld
rcl
icebp
sub
cs
dec
int
test
add
xchg
push
sub
xchg
adc
in
and
stos
iret
aaa
aas
loopne
jg
cmc
dec
lods
xor
js
nop
cmps
cld
sti
fld
adc
inc
cmc
pop
(bad)
mov
and
daa
daa
pop
xor
pusha
fwait
jnp
clc
sub
pop
dec
mov
inc
add
add
mov
push
adc
add
mov
add
sbb
cwde
int
out
jl
sub
retf
xor
inc
fdiv
es
sbb
shl
add
pushf
mov
icebp
scas
sub
ds
xchg
mov
push
adc
lods
daa
repz
sub
test
jmp
lahf
repz
sub
sub
in
and
scas
cmc
xor
xor
pop
movs
pusha
mov
mov
loopne
mov
(bad)
cmc
adc
test
jns
xchg
cmp
out
inc
xchg
dec
repz
sbb
sub
cdq
fs
pop
leave
jo
cmc
call
aas
jbe
sti
pop
pop
push
frstor
jbe
addr16
retf
add
push
je
icebp
div
xor
(bad)
in
outs
mov
dec
pop
lods
pusha
xchg
and
cmps
inc
sub
sbb
mov
cdq
sbb
inc
pop
test
and
adc
or
sbb
sti
push
(bad)
jecxz
jg
dec
xchg
mov
add
ret
sti
outs
pop
(bad)
daa
(bad)
mov
xor
jb
jnp
mov
sbb
daa
xchg
outs
push
cmc
test
loop
iret
(bad)
stos
inc
and
addr16
cmps
in
fwait
mov
iret
adc
sbb
and
xchg
or
mov
dec
xor
jnp
pop
sar
int3
pop
xlat
popf
mov
mov
jmp
sbb
es
xchg
cmp
jnp
jb
push
push
int
jge
adc
cdq
mov
les
lea
and
jp
cdq
sbb
pop
lahf
jb
xchg
daa
hlt
sbb
rcl
cli
dec
sbb
sub
xchg
fsubrp
movq
arpl
daa
cwde
adc
call
aam
cdq
inc
in
inc
in
mov
dec
adc
(bad)
cmc
or
test
adc
mov
inc
gs
push
ja
and
cwde
repz
cmps
rol
rdtsc
jmp
sti
jge
adc
test
scas
sahf
lahf
repnz
arpl
in
arpl
push
pop
adc
xor
in
imul
fwait
inc
push
lods
add
jge
xor
test
mov
push
push
test
dec
mov
out
jno
in
data16
repz
adc
xor
enter
push
scas
out
push
cmps
sub
mov
pusha
mov
vmulss
adc
jno
repnz
icebp
dec
nop
or
mov
sbb
lods
int
or
(bad)
loop
cwde
xor
test
adc
mov
dec
les
xchg
in
mov
(bad)
lahf
push
call
push
and
jge
add
add
push
in
push
pop
pop
mov
fs
mov
jo
outs
pop
xchg
mov
scas
mul
pop
(bad)
cmp
(bad)
add
pop
sbb
pushf
(bad)
repz
push
push
rep
and
cmp
xor
jecxz
ins
adc
ret
sbb
in
imul
xchg
sbb
xor
out
imul
rol
cld
xchg
xchg
xor
loopne
cdq
loope
sbb
add
push
daa
outs
fnstenv
cdq
ror
mov
adc
nop
je
in
retf
retf
std
popf
or
ud1
push
add
or
repz
jnp
inc
ss
sbb
cmp
xchg
ja
mov
mov
dec
call
jb
sti
ffreep
and
ja
sbb
push
comiss
neg
inc
or
mov
push
add
jbe
adc
ins
push
scas
(bad)
in
or
cdq
push
or
stos
and
pop
stos
pop
jae
retf
jnp
jae
xor
or
cli
xchg
or
mov
mov
pop
repnz
mov
stos
pushf
cmps
push
cli
sub
pop
stos
leave
stos
sar
jmp
stos
inc
mov
inc
(bad)
xchg
add
sub
jmp
mov
xlat
jb
jecxz
mov
sbb
pusha
adc
neg
and
gs
xchg
repz
push
cld
test
(bad)
les
cmp
repz
jecxz
cmp
rcr
xchg
xchg
sbb
pushf
pop
sbb
scas
gs
and
fild
bound
test
(bad)
aam
shr
pop
pop
push
and
gs
out
shl
jge
shr
shl
dec
adc
leave
call
scas
fs
jecxz
mov
mov
les
lea
jecxz
loop
cmp
mov
and
mov
imul
pop
pop
mov
lock
jle
into
out
loopne
mov
push
sub
mov
test
pop
test
int
shl
mov
repz
repnz
sbb
cmp
fisub
mov
cmp
xchg
and
rcl
pop
xchg
shl
lock
xchg
aaa
gs
push
arpl
mov
in
fs
jmp
push
stc
cmp
adc
sbb
jnp
jl
sbb
(bad)
clc
xchg
and
and
in
sbb
sbb
pop
jl
ret
sbb
stos
add
outs
dec
lahf
push
int3
rol
adc
mov
add
repz
cmps
movs
retf
adc
bound
cmp
cwde
inc
es
push
sbb
lea
add
inc
shr
jne
add
cwde
sbb
int3
jmp
mov
or
xchg
xor
or
test
enter
xchg
push
mov
aam
dec
or
(bad)
sub
stos
jle
dec
or
mov
data16
xchg
cmp
fcomi
mov
push
mov
nop
lahf
icebp
cli
jns
loop
daa
daa
daa
push
sahf
and
xchg
and
dec
mov
mov
in
mov
pop
out
jbe
jmp
add
outs
loopne
sbb
les
jbe
mov
xchg
fxam
cmc
shl
jno
int
mov
jmp
add
ret
out
sti
mov
adc
(bad)
cli
cmp
inc
test
jle
xor
jecxz
xor
dec
push
lock
adc
adc
in
(bad)
cmp
or
aas
push
xchg
jle
std
in
push
enter
sub
dec
push
push
add
pop
movs
push
sub
mov
xlat
xor
mov
mov
add
jne
repz
xor
xchg
iret
bnd
adc
call
dec
daa
loop
push
mov
xchg
lods
out
adc
xor
sbb
fcomp
push
fstp
mov
jmp
mov
loop
or
dec
sbb
or
xchg
push
adc
out
popa
and
ret
inc
push
movs
loop
xor
ins
mov
jle
mov
mov
test
shr
outs
mov
jae
jmp
jb
icebp
adc
enter
jb
xchg
imul
inc
scas
out
push
imul
sti
fcmovnu
idiv
dec
jno
aaa
inc
jle
jmp
push
ja
xchg
mov
or
pop
test
test
enter
dec
fnstenv
xchg
push
jno
sub
out
dec
ins
in
out
out
in
mov
sub
inc
or
je
mov
in
xchg
imul
in
test
xchg
int
ror
mov
mov
jb
or
jae
push
scas
xchg
imul
vmread
xor
xchg
pop
jge
sub
add
jnp
and
call
inc
imul
push
mov
dec
div
call
add
repz
(bad)
repnz
mov
lea
and
scas
cmp
jno
icebp
hlt
sbb
cdq
sbb
or
add
les
or
in
sub
outs
dec
jg
pop
frstor
fs
cmc
dec
adc
test
mov
invd
push
fs
sahf
adc
cdq
mov
fadd
xor
sub
out
jmp
in
mov
jns
xchg
pop
cld
sub
cmc
push
repz
jae
das
adc
adc
adc
daa
cmc
out
push
loop
out
int
xchg
and
xor
mov
cmp
sub
add
loopne
ror
out
arpl
add
arpl
jecxz
ins
psubusb
in
out
test
retf
mov
(bad)
je
hlt
repz
in
or
nop
cmp
test
(bad)
jmp
in
push
sub
sub
xchg
adc
add
jp
daa
cmp
pushf
clc
retf
add
push
xor
(bad)
loopne
sti
pop
scas
outs
ss
jno
shl
add
js
inc
aaa
fstp
jnp
jb
mov
in
sbb
pop
movs
idiv
pop
rcl
ss
jmp
(bad)
int3
sbb
mov
out
jge
out
sbb
mov
mov
mov
xchg
adc
pop
movs
repnz
out
test
fiadd
repz
div
xlat
cs
xchg
sub
leave
neg
sbb
sbb
pop
xchg
dec
mov
sbb
add
mov
inc
add
push
pop
in
xlat
pandn
xlat
sahf
add
dec
arpl
sbb
mov
adc
fcomp
push
pop
daa
push
les
jo
or
lods
or
xchg
or
pop
cmp
adc
push
cli
pop
or
bound
std
push
loope
fs
jns
shl
mov
dec
les
sub
(bad)
or
push
arpl
adc
add
in
sub
in
or
or
js
fs
imul
xchg
test
fisttp
xchg
jo
add
or
arpl
scas
repnz
jecxz
int3
(bad)
loopne
outs
mov
cmp
sbb
call
mov
(bad)
into
sbb
pop
bound
cld
sbb
sar
push
stc
add
xchg
out
push
(bad)
ja
pop
retf
data16
mov
div
sti
sti
ror
cmp
adc
xchg
push
les
hlt
dec
mov
or
adc
inc
nop
arpl
xchg
jmp
sbb
mov
xchg
inc
jo
stos
scas
lock
imul
iret
xchg
inc
push
aaa
pop
adc
imul
xor
inc
xchg
clc
ret
add
nop
inc
lds
mov
mov
jp
push
push
out
sub
into
jle
add
sub
loop
mov
loope
jnp
push
lods
enter
enter
fst
mov
sub
int3
dec
sub
cmp
cmp
pop
mov
jp
(bad)
nop
xor
jns
stos
mov
inc
sti
add
out
mov
gs
jmp
ds
pop
cli
out
mov
aas
cwde
pop
ds
jecxz
aaa
pop
push
cmps
loopne
popf
pop
cmp
add
jecxz
lods
aas
int3
inc
cmp
call
xchg
pop
jne
inc
inc
shl
and
xchg
pusha
xor
xchg
or
out
lock
loopne
pop
push
and
adc
jmp
arpl
bound
retf
xchg
mov
std
sbb
xor
dec
mov
shl
cld
xchg
mov
das
stos
mov
js
leave
pop
retf
jmp
inc
push
xchg
movs
ret
ds
xor
shl
or
sbb
or
xchg
pcmpeqb
pop
xor
cmp
pop
mov
hlt
retf
in
scas
push
inc
fild
ins
out
stos
movs
push
nop
lock
cdq
dec
inc
cdq
dec
or
ds
mov
xchg
(bad)
iret
jmp
fimul
push
out
mov
cld
(bad)
xor
les
xor
inc
stos
lods
in
sti
jge
and
add
repnz
mov
adc
fmul
test
xchg
add
pop
dec
clc
out
jne
sbb
and
test
adc
dec
(bad)
jns
adc
test
das
repz
and
mov
or
int3
mov
shl
adc
inc
xchg
mov
iret
add
into
in
shl
sti
inc
inc
cmp
xor
out
sahf
push
cmp
les
or
not
xor
repz
sti
lock
dec
ins
inc
mov
xor
rol
xchg
lahf
jne
sbb
push
mov
test
sub
rol
push
scas
jae
inc
das
cmp
test
movs
inc
pop
dec
scas
js
jp
mov
fs
pop
cmp
push
enter
or
mulps
pushf
imul
lods
test
fild
or
adc
xor
fbstp
cli
loop
xor
mov
adc
xchg
adc
add
icebp
out
lahf
push
movs
cmp
dec
or
js
or
mov
mov
sbb
or
mov
mov
push
loopne
push
popf
loop
dec
mov
ret
xchg
aad
(bad)
pusha
push
sti
and
pusha
les
inc
jle
sets
xor
inc
into
cmps
fs
add
fwait
push
ja
jne
sti
enter
mov
les
xchg
sti
and
int3
pop
sti
push
xchg
add
sub
int
leave
(bad)
mov
xor
xchg
or
hlt
xor
js
jge
xchg
enter
dec
adc
sbb
(bad)
ds
dec
pusha
fwait
lock
adc
xor
mov
iret
xchg
cmp
or
rcl
jb
sbb
test
or
in
and
xor
jae
mov
or
add
enter
sbb
les
push
movs
or
mov
jg
xchg
adc
sbb
fistp
enter
sbb
cdq
adc
movs
add
push
sub
sub
ror
sbb
jb
jnp
(bad)
fild
lods
pop
mov
mov
jnp
sti
fistp
mov
inc
fbstp
inc
xchg
adc
stc
fwait
cli
cmp
xchg
sub
test
sar
jb
dec
(bad)
adc
mov
jne
or
dec
push
pop
jnp
add
jge
clc
jge
adc
xchg
aas
jb
jnp
sub
cwde
mov
test
cli
ret
icebp
fbstp
das
fsub
mov
jge
mov
stc
and
cmp
xchg
xor
(bad)
ins
lahf
inc
sbb
adc
repz
cdq
paddb
xor
inc
scas
clc
daa
lods
call
mov
inc
mov
call
and
(bad)
mov
and
imul
sti
ins
adc
outs
jb
cli
pop
dec
fst
mov
(bad)
(bad)
or
push
test
in
mov
rcr
jns
or
std
or
clc
fimul
fist
add
sbb
in
push
xchg
out
je
xchg
jbe
lea
adc
cdq
mov
sbb
adc
mov
(bad)
js
ins
jl
lea
push
mov
popf
aad
or
bswap
fst
mov
je
adc
std
scas
mov
cwde
leave
ins
push
(bad)
cli
jp
cwde
pushf
xchg
rol
je
pop
sbb
xor
paddq
xor
xor
fs
inc
retf
add
iret
xchg
push
push
xor
xchg
sar
sub
mov
ins
cmp
iret
cld
cs
ins
add
push
test
mov
je
fmul
retf
sar
lock
stos
xchg
and
push
(bad)
rcr
loopne
sub
scas
or
dec
and
bnd
cld
add
jno
(bad)
ror
imul
retf
mov
fmul
rcr
adc
dec
cs
idiv
adc
(bad)
adc
lahf
push
sbb
jne
sbb
stos
mov
pop
mov
in
push
stos
test
sub
out
fst
mov
inc
movs
clc
and
push
push
push
mov
mov
push
adc
in
cdq
pop
out
(bad)
idiv
mov
jle
sub
enter
mov
mov
sahf
adc
add
sbb
push
xor
aas
loop
iret
pop
inc
popf
sahf
xchg
xor
push
mov
push
push
sub
sbb
(bad)
fbstp
repz
cwde
fimul
call
icebp
ss
ss
pushf
cdq
cmp
call
adc
(bad)
push
xchg
dec
pop
jnp
loopne
aad
(bad)
jle
sbb
stos
repz
adc
sti
in
fnsave
adc
add
push
or
jne
js
mov
mov
push
jp
arpl
mov
(bad)
nop
jnp
jmp
sub
or
in
ss
imul
adc
sti
or
aaa
in
lods
out
mov
test
pusha
out
mov
or
inc
jp
inc
sar
add
inc
and
or
xchg
or
mov
mov
lock
sbb
xor
mov
es
jge
push
jl
shl
xchg
push
or
cmc
adc
jp
call
das
or
in
rcr
ror
ja
sbb
mov
fst
mov
lods
test
pushf
inc
movs
cdq
inc
das
test
push
and
adc
repz
push
fwait
sub
pop
lds
shl
retf
xchg
inc
addr16
aad
sbb
aas
gs
push
popa
and
(bad)
adc
int3
hlt
mov
jmp
cmp
lahf
int
push
add
test
dec
ja
repz
arpl
daa
popf
ins
out
outs
(bad)
lods
lock
lods
or
iret
cdq
push
sub
test
(bad)
mov
mov
jg
dec
dec
mov
dec
fcom
mov
shl
in
xlat
pop
imul
and
add
gs
cmp
outs
xor
and
lds
push
(bad)
int3
dec
cmp
repz
cwde
pop
pop
sub
movs
popf
mov
cwde
mov
xchg
push
inc
(bad)
cli
ins
or
xchg
inc
test
cmps
jb
mov
(bad)
sbb
cmp
std
mov
loopne
xor
pop
adc
sub
or
je
ret
add
sub
xor
lods
or
mov
inc
jns
or
jle
xchg
outs
dec
mov
cld
xchg
fiadd
repz
adc
jb
jge
adc
ins
or
lea
mov
lock
out
aam
xchg
mov
mov
test
(bad)
xchg
lods
jmp
push
xor
(bad)
or
push
fld
mov
mov
jno
lock
jmp
ins
pop
(bad)
stos
jl
xor
and
push
xchg
cdq
mov
xchg
push
(bad)
test
in
and
mov
adc
xor
outs
pop
retf
enter
adc
push
push
cmovbe
inc
and
dec
lahf
nop
dec
and
ret
pop
dec
(bad)
xor
sub
or
in
adc
xchg
fnstsw
pusha
mov
jb
or
pop
aam
xchg
out
sub
pop
mov
add
mov
out
inc
sar
arpl
mov
int
(bad)
jle
and
aad
xchg
test
cmp
and
and
fsub
push
out
mov
inc
sbb
add
cwde
jo
jge
ins
je
pop
test
out
pop
adc
cmp
xchg
pop
aad
or
or
pop
jmp
repz
sti
lds
jbe
jg
xor
fs
iret
out
cdq
inc
in
in
nop
out
and
jo
dec
sub
ss
sbb
repnz
jne
in
mov
cdq
or
outs
hlt
in
dec
fwait
sbb
hlt
cwde
addr16
mov
adc
in
repz
xchg
push
(bad)
fcomp
or
and
ficom
in
xor
fs
pop
loop
outs
sub
adc
mov
or
outs
mov
cwde
or
icebp
shr
inc
fistp
jmp
mov
je
cmp
imul
jg
ficomp
out
hlt
sbb
sbb
repz
add
repz
mov
rcr
xor
xchg
or
ror
loop
outs
sub
adc
xchg
xchg
in
push
shr
add
mov
adc
jno
sbb
or
or
in
(bad)
repz
fs
call
xor
sub
push
dec
in
pop
mov
dec
outs
inc
mov
inc
imul
aam
in
push
sbb
jb
je
inc
sti
sub
cmp
xor
fucomip
(bad)
cli
mov
cdq
cmps
push
jo
dec
out
lods
call
dec
add
sbb
iret
out
stos
jecxz
xor
cmc
in
xor
hlt
out
mov
jecxz
clc
in
sub
mov
adc
enter
divps
or
out
into
add
sub
dec
hlt
repnz
adc
adc
movs
jp
out
or
out
nop
add
mov
dec
retf
cdq
cmps
vmovdqu
repz
or
sahf
emms
jecxz
mov
fsubr
sub
mov
outs
sub
sub
hlt
or
add
and
shr
dec
(bad)
and
out
dec
mov
xchg
movs
sbb
add
repz
aaa
lea
dec
fstp
dec
inc
fs
mov
or
lods
mul
in
xchg
cmps
aaa
loop
call
pusha
mov
mov
pop
dec
repz
or
rcl
lods
(bad)
sbb
stos
aad
outs
(bad)
mov
fidivr
inc
std
adc
adc
xrelease
or
or
cmp
pop
sbb
enter
cmp
ins
push
out
(bad)
repz
or
inc
mov
enter
shl
sbb
pop
out
or
popa
mov
or
cdq
push
cmps
fsub
jge
call
ret
xor
pop
dec
dec
pop
cmp
push
push
push
enter
aad
aad
(bad)
jmp
pop
lds
add
sbb
ja
stc
and
dec
call
adc
mov
cs
es
pop
add
pusha
jmp
mov
(bad)
(bad)
sbb
dec
jp
mov
cmp
and
scas
push
and
fbstp
stos
adc
pop
fsub
lock
adc
pop
add
adc
out
or
xor
or
sbb
adc
test
adc
xchg
aad
dec
push
dec
dec
sar
mov
ret
and
dec
dec
mov
aam
movs
jae
xchg
js
ja
rep
jae
pop
or
adc
out
sub
add
xor
cmp
xchg
add
cdq
sbb
cmp
movs
sbb
test
popa
cmps
jge
sub
lahf
cmps
aas
aad
or
xchg
fs
sub
jle
outs
sub
icebp
cwde
out
repz
dec
fistp
inc
sub
enter
cmova
or
jmp
dec
sbb
cmp
pop
push
test
repz
or
data16
mov
mul
ds
loop
fcomp
inc
pushf
movs
cmp
repz
pop
callw
inc
mov
jno
add
or
lea
or
inc
push
in
mov
jmp
(bad)
in
mov
pop
(bad)
mov
cmc
outs
sub
repnz
mov
outs
loopne
and
xchg
dec
dec
js
mov
push
xor
add
in
lock
inc
out
pop
cmp
sbb
inc
jb
out
ss
leave
inc
stos
push
lods
xchg
daa
(bad)
retf
adc
test
pushf
xor
es
adc
aam
xor
sub
outs
mov
and
ficom
data16
in
lahf
lahf
sub
push
add
out
iret
movs
dec
repnz
hlt
mov
jb
xchg
lock
lock
scas
sbb
pop
pop
fs
in
nop
mov
cmc
hlt
outs
call
jae
es
shl
int
vpsubq
jecxz
cdq
lock
and
loop
cmc
outs
sub
dec
mov
push
jb
sub
push
or
add
or
int3
comiss
push
aas
aad
cwde
adc
push
or
push
mov
imul
jo
imul
cmp
out
inc
add
mov
add
jge
out
add
sbb
outs
xor
jmp
int3
or
loop
stos
int
and
je
call
add
es
or
xchg
aad
ss
(bad)
(bad)
or
or
sbb
ret
jecxz
lods
sar
pop
imul
int3
lods
in
mov
pop
or
or
jo
cli
aad
push
and
out
cld
dec
retf
retf
sbb
pop
add
push
jae
call
in
lock
add
ins
sub
cli
in
repz
lods
or
mov
mov
sahf
dec
fiadd
fs
sar
(bad)
xor
repz
pop
out
(bad)
sbb
mov
and
add
mov
cmps
jne
idiv
loop
imul
mov
sahf
sub
iret
mov
lods
or
fsubr
hlt
add
push
cmp
xchg
pop
rcr
mov
mov
mov
in
xor
cld
in
int
into
inc
arpl
(bad)
jle
hlt
in
jmp
xor
add
stos
imul
sahf
dec
sub
cmp
(bad)
push
inc
inc
imul
or
shr
repnz
dec
out
popf
fdiv
hlt
hlt
pusha
push
in
sbb
lods
or
mov
inc
mov
leave
sti
jg
mov
adc
push
div
outs
call
add
jo
jle
mov
inc
rcl
cmp
lods
or
sbb
ds
or
mov
add
xchg
in
outs
mov
in
xor
repnz
in
jae
cs
mov
in
add
out
sub
or
int
stc
loopne
mov
in
fwait
(bad)
(bad)
daa
push
in
mov
popf
adc
push
int3
push
adc
pop
or
or
xchg
add
dec
xchg
sbb
cmps
adc
cmp
and
sbb
cs
movs
cmp
jge
pusha
or
push
sbb
int3
xchg
push
in
cmc
ret
adc
mov
popa
ds
push
push
pop
pop
ret
dec
or
in
jmp
jl
sub
loope
imul
pushf
ror
je
adc
in
inc
pop
dec
repnz
aaa
(bad)
out
xor
adc
cdq
cdq
cmps
repz
jg
jge
inc
or
cmp
mov
adc
imul
or
or
outs
sub
xchg
cmc
cld
movs
mov
imul
call
mov
or
mov
xchg
shr
cs
aad
adc
push
adc
retf
adc
sti
nop
cli
ret
mov
xor
cmp
push
cmp
and
cmp
repnz
dec
adc
loope
ret
adc
in
out
dec
mov
xchg
push
dec
push
jo
mov
pop
or
lahf
rol
fwait
out
hlt
pusha
lds
sbb
or
lods
xor
jge
loope
pop
cmp
pop
push
and
mov
inc
outs
loopne
mov
fist
cmp
lods
or
mov
in
add
cmp
mov
jle
ins
imul
loope
mov
push
sbb
inc
out
imul
int
or
rcl
not
hlt
hlt
adc
xchg
aad
add
mov
dec
dec
ror
cmp
inc
int3
adc
addr16
hlt
hlt
adc
or
push
push
push
enter
test
movs
pusha
add
pop
inc
aam
adc
int3
mov
or
(bad)
imul
movs
mov
xchg
mov
sbb
call
sbb
jle
mov
lods
or
jge
mov
lods
jecxz
pop
sbb
ins
ins
ins
mov
or
or
inc
je
xchg
rcr
idiv
push
outs
push
xchg
mov
outs
pusha
dec
aam
add
mov
push
cmp
xor
in
sbb
aaa
push
test
or
xchg
push
in
pop
sbb
add
lea
sbb
data16
loopne
adc
sub
push
mov
mov
push
aas
push
outs
cmps
adc
pop
add
sti
(bad)
mov
sar
test
add
ret
cmp
inc
push
add
or
mov
xchg
aad
outs
retf
rcl
iret
add
add
or
stos
dec
jcxz
xor
xchg
xor
test
ror
cli
and
mov
test
cdq
cdq
cmps
out
out
nop
sahf
push
xor
shrd
bound
fs
aaa
aam
mov
repnz
mov
push
and
xor
sub
outs
push
jmp
cdq
and
cdq
jge
adc
or
ret
inc
mov
mov
into
sub
in
pop
jmp
outs
sub
adc
pop
dec
push
int
int3
in
mov
jb
mov
scas
loope
ret
mov
cmc
hlt
hlt
adc
(bad)
loop
xor
mov
jne
repnz
dec
add
test
jmp
aaa
xor
sahf
dec
out
jl
aad
aam
pop
pop
or
dec
pop
jmp
or
and
xlat
sbb
xchg
mov
sahf
mov
mov
js
div
hlt
push
lods
out
outs
pop
and
cwde
cmp
mov
sub
adc
dec
cmc
outs
sub
adc
inc
mov
inc
jmp
sbb
push
dec
sti
loop
outs
sub
adc
fsubr
pop
in
mov
lock
sub
or
inc
aam
stos
add
dec
and
or
and
or
jmp
xor
mov
lods
or
ds
les
ds
or
adc
or
add
daa
adc
or
push
(bad)
psubsw
or
not
dec
mov
mov
scas
jae
into
sub
sbb
xor
div
mov
mov
test
retf
dec
clc
in
mov
lods
or
and
add
adc
xchg
mov
out
mov
leave
lods
dec
mov
ficom
out
xor
cmc
jno
sub
hlt
js
out
out
cmc
mov
sahf
xchg
mov
enter
and
add
dec
test
xor
cli
hlt
hlt
call
mov
sub
outs
mov
cmp
adc
jmp
or
inc
sub
shl
sbb
ret
lea
lock
gs
leave
retf
ret
sub
call
mov
imul
nop
aam
mov
sub
bound
aas
mov
jae
test
rol
les
loop
or
sub
inc
movs
xchg
xchg
fstp
mov
mov
jge
adc
sahf
mov
sahf
cmp
adc
push
dec
loop
jmp
dec
icebp
cmp
loop
xor
stos
inc
int
jo
lods
hlt
hlt
mov
or
ins
sahf
push
cdq
ins
xbegin
je
lods
or
sbb
aas
sti
nop
dec
sbb
sbb
sbb
aas
adc
jecxz
mov
xchg
ins
or
jmp
(bad)
and
pop
cmps
mov
shl
movs
in
hlt
mov
fs
repnz
in
pop
jo
int
ror
sti
jg
jp
sbb
adc
int3
outs
enter
(bad)
retf
icebp
mov
or
fcom
sub
(bad)
xor
in
pop
jmp
or
rcl
les
or
stc
pop
cdq
jp
fs
repz
mov
inc
scas
div
int3
enter
(bad)
jle
add
(bad)
or
(bad)
out
sbb
cmps
aas
ret
pand
out
push
je
dec
std
dec
jne
rcr
add
nop
not
pop
sub
in
movs
out
or
sahf
test
or
and
or
adc
nop
xlat
xor
jmp
xchg
xchg
js
(bad)
mov
and
mov
mov
sti
adc
mov
(bad)
(bad)
les
inc
pop
inc
jno
jp
jg
inc
add
aad
in
mov
mov
ss
pop
fsub
pushf
mov
adc
pop
jmp
xor
divps
jl
or
push
nop
ret
(bad)
out
add
add
jb
or
aam
adc
inc
push
hlt
or
in
xlat
popf
add
or
lock
push
and
call
or
mov
icebp
shr
pop
(bad)
jnp
or
add
in
cmp
jnp
inc
push
add
jb
movs
dec
shl
cmps
hlt
loop
or
retf
ds
fcom
pop
mov
leave
mov
pop
(bad)
xlat
in
jno
popf
cmp
cli
jecxz
cmc
outs
sub
loop
cmp
mov
and
push
fwait
hlt
in
jne
mov
xchg
or
outs
sub
(bad)
mov
aaa
movs
(bad)
in
or
ss
push
adc
pop
pop
push
dec
in
sbb
daa
or
jl
and
les
nop
in
xor
fadd
(bad)
pop
iret
sbb
fadd
pop
adc
and
mov
xchg
out
xchg
xchg
and
mov
or
cli
and
add
dec
inc
aas
loop
add
add
sbb
xchg
or
stos
and
mov
jecxz
sahf
repnz
sti
hlt
add
dec
dec
inc
popf
adc
or
retf
sbb
out
pop
pop
pop
adc
or
aaa
or
dec
or
jo
dec
or
mov
mov
and
(bad)
cmp
jle
sar
int
retf
pop
icebp
into
xchg
out
stc
lea
retf
or
cmp
fistp
sub
imul
ror
jecxz
sahf
imul
adc
cmp
or
in
mov
stos
cmp
sbb
repz
addr16
out
xor
sub
cmp
push
mul
inc
mov
retf
das
retf
xchg
scas
jmp
stc
cmc
hlt
adc
pop
sbb
mov
fisubr
push
push
movs
add
or
(bad)
and
daa
in
dec
jne
fdiv
or
mov
pop
xchg
icebp
repz
hlt
mov
cdq
cmp
sub
fsubr
jmp
gs
sub
cld
enter
into
inc
pop
cmp
push
sbb
inc
aam
mov
stc
cmc
hlt
adc
pop
shl
sti
mov
adc
jns
retf
dec
or
mov
nop
jl
mov
enter
cdq
sbb
out
pop
pop
adc
jecxz
mov
mov
xor
jecxz
xchg
jae
test
das
(bad)
and
cmp
push
dec
in
lods
cld
jg
xchg
xchg
xchg
(bad)
push
xor
jp
xchg
out
call
ud2
maskmovq
test
xchg
adc
int3
call
adc
push
(bad)
in
mov
jge
push
neg
dec
jp
sub
add
out
mov
inc
or
xlat
sub
xchg
sbb
mov
loop
fcomp
mov
out
jp
and
fcmovnbe
(bad)
hlt
in
and
or
pop
loop
fcomp
pop
jg
out
jge
lock
pop
pop
adc
or
cmp
pop
pop
mov
inc
das
sbb
pusha
add
cmps
out
add
test
in
fdivrp
in
stos
lahf
retf
loope
add
xor
cmp
sbb
aas
rcl
movs
nop
cmc
in
into
rcr
dec
jp
(bad)
xor
sbb
adc
jge
add
sbb
outs
xchg
inc
das
pop
xchg
xor
cmp
jnp
xchg
stos
jae
xchg
sbb
and
cmp
adc
add
xor
or
sbb
in
xchg
(bad)
push
inc
fmul
out
xlat
outs
popa
sub
sub
popf
xchg
adc
ror
jnp
xchg
rcr
xchg
aad
cli
jecxz
push
push
mov
leave
sub
out
std
aaa
add
stos
into
cmp
dec
jne
aam
das
dec
jecxz
leave
out
and
xchg
pushf
aad
inc
add
aam
sbb
aas
aad
or
sub
dec
jp
sub
add
into
(bad)
call
mov
push
jg
push
data16
mov
xchg
test
clc
jecxz
cmp
adc
or
sbb
cmp
fwait
mov
fild
rep
push
mov
jbe
push
xchg
aam
add
mov
adc
sbb
sbb
aas
mov
sahf
dec
das
sbb
pusha
add
jns
pop
hlt
hlt
xchg
sbb
add
mov
cmps
ins
jge
mov
data16
cmp
cmp
push
mov
mov
jecxz
pop
je
xchg
xchg
mov
sub
push
(bad)
fst
push
jge
or
jns
scas
xchg
int3
xor
sbb
lea
push
call
push
xor
xchg
aas
mov
push
call
mov
xchg
icebp
sbb
push
in
lods
sub
test
sub
xchg
pop
(bad)
dec
add
lea
cmp
outs
hlt
cwde
inc
lds
jge
or
push
xchg
aas
xchg
jge
or
xchg
xor
push
cmp
or
mov
push
xor
call
push
retf
sahf
dec
inc
or
daa
fst
stos
sti
enter
rol
or
and
or
sar
sbb
and
and
cmp
call
push
inc
xchg
icebp
xchg
push
and
sub
sbb
aas
sbb
call
xchg
aad
or
xchg
cmp
scas
pop
mov
mov
test
pop
pop
adc
or
pop
pop
mov
jbe
das
pop
dec
into
and
dec
and
inc
movs
xor
pusha
add
repz
sar
jecxz
adc
dec
mov
xchg
cli
pop
push
aas
mov
or
sti
jg
inc
icebp
test
jo
cmps
or
rcl
aas
xchg
sahf
dec
and
dec
pop
in
int
xor
cmp
inc
xchg
icebp
xchg
xlat
call
xor
or
aas
sbb
fstp
xchg
fnstenv
cwde
cs
or
inc
cmp
sub
aas
xchg
and
jecxz
ins
ins
sub
fistp
mov
inc
sub
das
jnp
sub
lods
adc
ficomp
cmc
inc
mov
jecxz
xor
in
loop
dec
dec
adc
or
sbb
mov
stos
std
inc
cdq
adc
mov
xchg
pusha
adc
dec
mov
or
xlat
(bad)
cld
in
and
or
or
xlat
or
or
add
dec
push
aaa
adc
xchg
aas
int3
push
in
movs
jnp
adc
mov
nop
aad
sbb
cld
sbb
push
add
pop
cmc
adc
push
xor
hlt
push
xchg
pop
push
leave
rcr
sub
xchg
popa
adc
or
repz
cmp
pop
sbb
sbb
aas
ins
mov
or
in
aad
adc
sub
push
push
ret
and
dec
or
ins
add
dec
sbb
daa
add
sub
jmp
jle
not
sbb
cwde
push
or
inc
aam
xchg
scas
call
jecxz
stos
outs
xor
rcr
lea
dec
push
sub
jecxz
fs
xor
ja
out
inc
loopne
in
das
imul
out
repz
shr
retf
xchg
mov
mov
push
dec
cmp
add
in
push
dec
cmp
cmovs
dec
add
dec
add
pusha
or
cmp
shr
loope
add
pop
add
jecxz
jo
sbb
inc
(bad)
std
push
xchg
call
push
std
push
(bad)
cld
inc
out
cld
jl
mov
push
push
stos
mov
js
mov
mov
cmp
imul
lock
push
xlat
push
popa
popf
jbe
cdq
sti
call
mov
xor
fldcw
push
and
repz
rcr
inc
push
stc
sar
jecxz
xchg
scas
jmp
ins
pop
jmp
dec
inc
fwait
pop
cs
out
dec
das
dec
xchg
ds
gs
sbb
add
loope
add
sahf
loope
repz
jecxz
or
test
sub
pop
cmp
mov
mov
dec
aam
fld
xchg
xor
cmp
sub
loope
mov
push
cwde
jno
inc
dec
(bad)
fs
fmul
(bad)
jnp
or
int3
or
cmp
mov
js
lds
sub
cld
cmp
add
lahf
and
loopne
mov
pop
mov
push
adc
test
shl
aam
in
loopne
xchg
push
shl
push
jnp
ins
push
(bad)
dec
loopne
mov
enter
nop
popf
pop
imul
jo
push
pop
and
js
jg
push
test
or
push
jnp
xchg
push
mov
jmp
shr
add
dec
out
dec
inc
add
repz
inc
jge
(bad)
in
out
jg
sub
push
jns
inc
(bad)
adc
add
add
clc
(bad)
jp
mov
mov
and
fsub
push
xor
pop
imul
(bad)
loopne
xchg
mov
ins
sub
sahf
cmc
hlt
cmc
loopne
or
das
test
std
in
xchg
out
dec
lea
adc
(bad)
xchg
mov
or
adc
and
dec
movs
pop
sbb
cmp
outs
lds
cld
or
sub
dec
push
or
or
or
pusha
add
mov
add
popf
or
int
push
inc
pop
push
and
in
xlat
mov
mov
jnp
jle
cmp
pop
ins
das
mov
mov
jg
cmp
test
fsub
or
sub
nop
dec
loopne
sub
call
sub
xchg
ds
pop
sub
int3
add
das
sbb
mov
mov
and
mov
and
je
xchg
jno
sbb
jo
lods
rcl
push
mov
movs
ficom
mov
mov
or
or
into
or
jo
loope
mov
jmp
stos
je
jle
jmp
push
cmp
repz
jle
cs
xchg
arpl
cmp
lds
sbb
or
sbb
add
push
rol
xor
fs
sub
add
enter
sbb
les
cs
add
sbb
pop
mov
or
jbe
fwait
cdq
dec
or
imul
sahf
mov
imul
sbb
lds
ret
test
in
cmp
mov
(bad)
int
jb
and
cdq
pop
jno
mov
inc
das
fild
or
loopne
sbb
movs
fs
pop
xor
out
cmp
cmc
int
or
aas
sti
inc
repz
in
dec
mov
icebp
test
cmp
adc
(bad)
in
neg
nop
xchg
xchg
xchg
sti
xchg
pop
out
popf
shl
sub
xor
dec
mov
add
pop
sub
xor
mov
pusha
add
mov
jp
repz
scas
jmp
mov
mov
test
xchg
jo
cmc
dec
icebp
xlat
in
fcmovnu
ds
xchg
jmp
dec
inc
inc
loopne
in
sbb
inc
or
or
lahf
imul
je
sub
or
ins
mov
pop
jne
mul
or
dec
xchg
mov
int
xchg
rcl
mov
add
(bad)
pop
ins
(bad)
js
and
aas
dec
adc
repnz
loopne
int3
sbb
and
xor
imul
popa
push
int3
or
iret
fcom
retf
inc
mov
aas
dec
sbb
sub
mov
int3
jle
dec
jns
sbb
adc
xor
je
push
jns
aad
mov
fisubr
ins
adc
(bad)
pop
out
dec
test
add
push
aam
jge
(bad)
ins
jl
cmp
les
and
ret
jg
in
mov
cs
hlt
mov
sbb
push
sbb
aas
adc
mov
and
sub
mov
imul
iret
add
mov
test
xchg
pop
pop
mov
or
push
xchg
fldl2t
or
mov
and
jg
ds
and
sti
pop
sti
popf
shl
inc
rol
shr
repz
add
jb
mov
sbb
pop
cmp
ror
popf
aaa
popf
mov
xor
mov
test
mov
je
sub
push
add
imul
pop
icebp
sahf
jmp
and
sbb
jmp
fistp
call
dec
pop
inc
xor
xchg
jl
jns
dec
dec
sti
add
mov
xor
xchg
mov
inc
adc
fadd
call
mov
xchg
out
cmp
aas
jp
arpl
loop
aaa
jmp
xor
mov
pop
jb
inc
es
push
cmp
lea
jl
cmp
mov
shl
jo
push
mov
cld
imul
add
cmp
inc
pushf
push
add
adc
or
es
iret
rcl
nop
xchg
xlat
mov
add
push
add
pusha
adc
int
out
dec
imul
outs
jno
in
add
rol
out
bound
(bad)
or
pop
add
pop
cdq
sub
(bad)
clc
and
pop
dec
pop
or
jne
add
inc
sbb
push
jb
mov
jle
shrd
outs
imul
aas
fst
push
xchg
xchg
jle
hlt
sar
sti
adc
or
dec
js
inc
jmp
add
test
pop
push
push
cmp
sbb
jle
icebp
aaa
call
cmc
loop
or
add
inc
sbb
lock
je
out
js
or
rol
jne
cld
repnz
leave
inc
or
inc
mov
add
loop
jle
aam
push
add
stos
scas
adc
xchg
push
mov
and
jne
in
or
shr
push
pop
sti
fwait
jbe
rcl
or
push
scas
scas
adc
sbb
and
lahf
out
les
pop
shl
jmp
pop
jae
int
or
pop
mov
loopne
push
scas
jp
or
(bad)
popa
mov
xor
sahf
jae
mov
loopne
jne
(bad)
sbb
mov
push
sti
sub
adc
sub
xor
stos
sub
jge
in
push
sbb
dec
add
xor
stos
xchg
and
mov
xor
cs
or
out
xor
push
imul
cmc
hlt
mov
mov
xor
daa
daa
daa
push
lea
xlat
outs
mov
pusha
sub
add
pop
pop
aad
fld
cld
sbb
addr16
enter
cdq
cdq
lahf
iret
out
xchg
xor
dec
xchg
aam
cwde
jg
and
out
fldenv
cdq
fild
push
and
test
imul
sti
aam
and
pcmpeqd
ret
push
call
(bad)
fld
ins
jnp
jmp
das
cwde
(bad)
fucom
addr16
dec
cmp
iret
jmp
and
iret
and
xchg
mov
sub
and
xchg
ss
jle
jb
pop
das
movs
daa
pusha
xor
popa
stc
cdq
fsubr
daa
icebp
movs
call
jo
jno
rcr
sub
jmp
iret
sar
lahf
push
mov
dec
retf
dec
push
jb
or
movs
mov
int
xchg
xchg
jbe
dec
call
repz
pop
mov
mov
sbb
pop
xchg
jmp
jnp
mov
imul
push
movs
dec
jge
add
jb
imul
jl
out
adc
in
les
xchg
mov
add
mov
pop
push
cwde
xor
jo
scas
lods
data16
or
inc
adc
stos
out
adc
imul
cwde
mov
mov
(bad)
cmps
mov
shl
imul
rcl
lea
dec
add
inc
stos
inc
sub
ds
jno
or
out
jge
jnp
jns
fsubr
rcl
xchg
in
inc
adc
push
cmps
div
pop
movs
sbb
xor
std
loop
xor
adc
inc
push
xlat
inc
xor
outs
jnp
daa
dec
pop
sub
pop
lea
cmps
add
add
mov
add
sbb
aam
or
mov
push
xchg
mov
loop
xchg
push
jg
dec
les
in
test
pop
pop
mov
sbb
jae
xor
fcomp
(bad)
lock
or
hlt
mov
repnz
lea
adc
or
jmp
adc
test
cmp
or
leave
adc
or
cmc
add
jno
lock
sti
xor
int3
pushf
retf
fwait
sbb
push
loopne
mov
into
adc
or
xchg
add
inc
jmp
or
into
adc
xor
cli
outs
lea
jne
cmp
addr16
es
mov
test
ret
test
sahf
dec
cld
and
fisttp
xchg
mov
xor
lock
inc
adc
out
dec
xor
int3
inc
pusha
push
pop
(bad)
pop
(bad)
xadd
push
push
push
fdivrp
aam
cmc
lea
mov
daa
mov
pop
hlt
jle
(bad)
cwd
and
repz
dec
dec
ror
hlt
jmp
mov
mov
out
sbb
or
data16
mov
out
or
es
sub
cmp
sub
fimul
jne
xchg
push
mov
sti
push
je
cdq
pusha
and
push
hlt
je
xor
mov
xor
mov
das
popf
repnz
fidiv
mov
clc
pushf
dec
scas
adc
dec
in
fwait
call
add
and
adc
mov
dec
ret
(bad)
rcr
jbe
and
push
add
inc
sbb
nop
cmc
pop
inc
inc
inc
adc
inc
lahf
push
dec
data16
add
ja
push
adc
cs
fdivr
inc
gs
(bad)
fisttp
xchg
cmp
repz
jns
arpl
fldcw
cdq
xchg
dec
loop
out
scas
jns
xchg
sbb
xor
sahf
adc
movs
jmp
cmp
mov
call
repz
icebp
push
in
mov
and
adc
ret
fwait
data16
shr
lahf
call
add
repz
int
mov
data16
clc
outs
sub
arpl
jne
idiv
push
adc
add
popa
mov
imul
mov
or
lock
popf
repnz
dec
mov
lods
ret
xchg
sbb
or
mov
paddsb
sub
mov
out
sti
jle
adc
popf
mov
repz
(bad)
cld
aam
adc
repz
inc
stos
loopne
mov
pop
ret
ins
mov
mov
adc
or
and
aas
loop
icebp
repz
into
fld
aas
pop
adc
or
(bad)
in
mov
loope
mov
jns
sub
mov
cwde
outs
xor
lock
mov
sub
movs
loope
cmc
jne
jbe
scas
cmp
add
test
loop
sbb
xchg
and
push
add
xor
add
sbb
js
xlat
int
dec
test
cwde
and
nop
mov
mov
and
jno
loop
repz
(bad)
push
scas
loopne
or
mov
call
(bad)
xlat
pop
jb
push
ss
data16
popa
pop
pop
stc
movs
imul
pop
movs
jbe
jo
or
retf
test
hlt
hlt
mov
in
cmps
psllw
mov
enter
loope
mov
xchg
(bad)
clc
fistp
jnp
aas
jmp
cdq
pop
(bad)
mov
cli
inc
rcl
scas
int
xlat
pop
xchg
popf
push
repnz
pop
das
scas
inc
mov
xor
fisub
adc
jmp
jno
mov
js
dec
(bad)
in
lods
inc
push
out
jle
cs
cmc
xor
adc
repz
enter
dec
push
gs
pop
xchg
jns
cmps
frstor
or
jge
pop
stos
into
aad
cmps
mov
ins
mov
sahf
cdq
push
out
test
mov
imul
or
push
call
inc
cmc
dec
jg
pushf
xchg
jo
mov
repz
sub
or
xchg
stos
(bad)
in
push
(bad)
jmp
gs
stc
xchg
cs
repnz
call
retf
cmp
inc
or
repz
jl
test
xchg
dec
xchg
push
(bad)
cmc
xor
(bad)
repnz
sub
pop
mov
(bad)
mov
in
push
jp
or
mov
jne
fwait
outs
scas
fadd
add
jno
int3
cmp
pop
bound
dec
(bad)
adc
fwait
pusha
fwait
in
fistp
stos
mov
push
sahf
sahf
dec
xchg
enter
arpl
mov
fdivr
xchg
dec
les
and
cmc
aaa
push
lea
cwde
add
imul
mov
in
sub
repz
lods
js
repz
mov
dec
call
mov
pop
outs
lock
lods
mov
or
es
xchg
(bad)
js
mov
popf
or
push
inc
jnp
mov
aas
test
in
mov
xchg
fsub
and
(bad)
scas
pop
mov
cwde
in
repz
ins
lea
add
cmp
push
sar
int3
sub
cwde
test
jg
push
std
mov
das
push
jns
(bad)
pop
call
lods
ja
adc
popa
xchg
clc
cmps
dec
fldlg2
sub
jecxz
pop
sar
shr
pop
sbb
add
cld
loop
mov
(bad)
(bad)
out
imul
pop
or
push
sbb
mov
in
xor
mov
xchg
out
xchg
int3
mov
push
fsubr
xchg
fnstsw
push
xchg
iret
cdq
retf
push
stos
int3
(bad)
neg
push
and
cwde
bound
adc
ret
jge
nop
int
xchg
sbb
adc
popf
jle
shl
xchg
add
(bad)
aam
or
jle
(bad)
fwait
sbb
retf
add
movs
or
sti
push
rol
cmp
jbe
jb
adc
push
or
or
add
or
les
hlt
jle
adc
gs
add
adc
inc
test
ja
outs
push
adc
add
dec
jns
mov
or
rol
mov
dec
in
push
adc
mov
test
mov
not
or
or
dec
jle
xor
jnp
dec
lea
in
(bad)
jmp
adc
or
enter
cld
push
add
test
inc
ins
inc
gs
push
xlat
lods
not
xor
push
cmp
aaa
add
outs
dec
inc
push
pop
out
lods
out
or
add
inc
pop
mov
inc
aad
adc
inc
jno
imul
adc
and
adc
mov
sbb
xchg
enter
xchg
(bad)
sbb
sub
sub
leave
and
and
push
movs
ficom
pop
jnp
hlt
jb
or
shl
pusha
in
ror
(bad)
(bad)
addr16
ret
xor
jl
ja
jg
and
pop
sbb
adc
jb
adc
leave
cdq
lock
pop
sbb
daa
ficom
adc
loopne
fstp
sbb
and
mov
test
adc
push
push
mov
std
and
add
retf
xor
or
mov
add
fs
fdiv
call
and
pop
int
cdq
pop
mov
sbb
jl
and
and
pop
icebp
pop
sub
test
or
gs
ins
xchg
mov
pop
xchg
pop
cwde
add
adc
add
stos
out
sbb
nop
sbb
adc
adc
mov
mov
sbb
popa
jo
out
push
pop
icebp
(bad)
sti
outs
lods
or
or
cmps
dec
test
adc
mov
(bad)
icebp
dec
cmc
jno
cmp
jle
mov
add
out
arpl
add
xor
jp
mov
call
pop
mov
or
jno
cmps
repz
push
cdq
pop
push
push
ss
clc
jge
sub
xchg
jno
enter
das
mov
dec
or
dec
out
jo
xor
lock
xchg
xor
xchg
jp
stc
sbb
jmp
sbb
in
cs
xchg
gs
aas
(bad)
sub
outs
xor
lods
out
or
test
call
mov
mov
test
or
neg
(bad)
add
test
rcl
das
sub
fsub
push
push
test
inc
xor
hlt
mov
hlt
ins
pop
or
shr
xor
fild
mov
inc
jmp
or
push
jmp
scas
inc
add
mov
hlt
pop
jno
int3
xchg
xor
sub
jge
add
int3
iret
xchg
lds
out
mov
stos
lock
or
outs
shl
or
inc
xor
cmps
inc
sbb
and
push
adc
add
and
dec
loopne
add
jbe
loop
in
sub
sub
imul
push
jecxz
int3
xchg
adc
adc
push
mov
les
out
in
push
pop
lds
jecxz
mov
aas
outs
mov
cmc
sbb
sbb
mov
je
imul
adc
mov
arpl
add
jle
jbe
bnd
retf
test
or
les
adc
or
mov
(bad)
addr16
arpl
sub
pop
adc
nop
out
rep
ror
cmps
es
test
inc
in
mov
dec
jo
xor
cmp
mov
xchg
pop
jno
int3
inc
js
call
clc
pop
jae
cmc
jmp
ret
loope
push
out
inc
out
xchg
xor
dec
out
popa
inc
cmp
hlt
hlt
mov
pop
outs
in
in
jb
jecxz
js
inc
xor
nop
lahf
jbe
repz
jmp
(bad)
cmps
cwde
(bad)
sbb
cmc
hlt
hlt
add
enter
mov
xor
retf
jge
jmp
xor
inc
sub
jo
in
repz
invd
xchg
fadd
cmp
push
adc
shr
add
fstp
icebp
and
or
mov
(bad)
push
inc
ror
sub
adc
xchg
cmp
or
xchg
rcl
adc
stos
outs
stos
test
or
loop
dec
scas
shr
clc
adc
cmp
or
mov
lahf
ins
sbb
jecxz
fs
hlt
cdq
xor
push
pop
cmp
and
push
jne
push
mov
pop
(bad)
dec
outs
add
loop
mov
out
and
inc
push
mov
das
mov
repnz
shr
jg
push
push
ins
mov
rcl
xor
mov
add
jl
hlt
outs
movs
pop
add
add
or
dec
mov
cli
xlat
mov
lea
rol
fcomp
in
mov
out
jg
ror
or
inc
ins
fisttp
clc
out
mov
jnp
arpl
mov
mov
pop
pop
jecxz
in
xchg
popa
dec
retf
mov
shl
cmc
jle
mov
xor
sub
test
cld
jo
push
pop
call
xchg
cwde
sbb
dec
aam
cld
nop
push
test
xchg
push
sbb
int3
pop
mov
sti
xor
push
lea
ficomp
mov
test
shl
inc
or
inc
cdq
jnp
daa
xchg
ret
pop
dec
in
sbb
cmp
fimul
retf
sbb
push
add
push
pop
sbb
xchg
mov
jno
xchg
push
clc
pop
adc
push
sti
jo
stos
jecxz
icebp
in
repnz
jno
mov
sub
pop
push
jae
add
xchg
push
rol
sub
adc
inc
repnz
xchg
test
pop
cmp
adc
add
retf
out
and
ret
test
mov
lea
pop
push
or
xchg
push
sbb
hlt
jmp
xabort
outs
icebp
pop
lahf
sti
mov
push
adc
loop
push
shl
in
out
pop
inc
outs
push
lods
or
sbb
(bad)
add
or
aad
aas
mov
xor
mov
jo
icebp
loope
mov
dec
xchg
ret
jbe
inc
aas
cmc
hlt
hlt
jg
jae
dec
mov
add
or
setnp
setno
sbb
dec
sub
rcr
lahf
dec
retf
sbb
ja
add
push
add
iret
xchg
mov
push
fidivr
nop
js
daa
out
shr
jg
icebp
jns
jmp
out
loopne
push
xor
jl
sets
test
or
loop
lock
pop
xchg
scas
push
jo
pop
pop
and
sub
xor
repz
jg
repz
push
or
cvttps2pi
or
mov
push
mul
dec
lahf
inc
sub
arpl
pop
mov
lods
or
data16
in
repz
cld
repz
cmps
jno
jbe
adc
jecxz
jmp
dec
in
xor
and
add
pop
movs
gs
sbb
inc
test
lods
adc
test
or
jg
sub
xor
add
xor
in
ror
rol
cs
cs
jg
push
stos
imul
xchg
aaa
push
jg
icebp
daa
xchg
push
sahf
fisub
mov
sbb
add
sub
hlt
sbb
sub
sahf
push
add
movs
sbb
in
xchg
fild
out
jl
hlt
into
repz
ficomp
sbb
loop
sbb
call
cdq
mov
in
retf
gs
xchg
clc
mov
dec
cmp
pop
mov
push
idiv
pop
mov
lahf
sbb
stos
pop
test
test
xor
retf
mov
dec
daa
mov
clc
xchg
aad
pop
or
or
data16
hlt
sti
aaa
xchg
and
rcr
mov
std
pop
into
arpl
in
mov
cmc
add
call
pop
pop
into
or
sahf
rol
out
mov
(bad)
enter
push
add
and
jae
movs
addr16
sub
sub
lea
sub
jo
pusha
jnp
and
xor
mov
shl
sbb
xchg
or
mov
or
in
push
adc
jae
xchg
fcom
xchg
ja
loopne
push
hlt
arpl
mov
cld
sbb
in
jno
les
mov
push
outs
xchg
adc
dec
push
data16
(bad)
repnz
cmp
loope
popf
std
mov
nop
dec
jae
add
adc
stc
loope
repnz
in
into
adc
sahf
adc
mov
and
out
bound
inc
dec
hlt
ret
shr
cmc
mov
jo
mov
or
jo
cli
ja
or
(bad)
mov
add
scas
sbb
sub
adc
push
jmp
aas
and
call
dec
(bad)
hlt
push
jle
rol
sbb
dec
cdq
fs
bound
iret
jecxz
in
int3
lods
xchg
into
mov
jo
stc
leave
sti
inc
repz
enter
mov
in
jge
sahf
mov
sub
repz
add
push
xchg
stc
data16
repnz
xor
stos
mov
inc
in
out
aas
cmps
jl
sbb
or
out
pop
aam
xchg
or
xchg
retf
mov
or
imul
jb
jle
lea
scas
inc
sbb
sbb
mov
jb
inc
mov
xor
push
adc
sahf
pop
add
ret
fisttp
and
xchg
fs
sub
loope
pop
jbe
inc
mov
jae
push
mov
jmp
mov
push
sti
scas
or
xor
rol
out
enter
or
push
xlat
push
repnz
push
adc
push
dec
add
add
mov
or
push
jb
(bad)
leave
shr
in
mov
ja
std
add
cwde
push
rol
dec
das
xchg
or
mov
mov
jle
repz
lock
add
out
cdq
add
jg
or
fcomp
in
mov
in
scas
cmp
dec
xor
mov
or
das
inc
or
icebp
cld
mov
gs
into
push
add
adc
adc
mov
mov
sub
shl
stc
leave
arpl
dec
xlat
xor
mov
in
inc
mov
adc
pop
jg
add
xor
sti
clc
add
test
stos
jne
or
add
ds
adc
sub
push
jmp
xchg
lock
add
das
jecxz
push
scas
mul
xchg
hlt
or
or
xchg
adc
sub
in
(bad)
or
xchg
inc
rcr
xor
lods
repz
inc
popf
fdiv
pop
and
add
add
call
repz
je
cli
hlt
hlt
xor
jns
fsub
jecxz
adc
mov
retf
jecxz
lahf
xor
add
sti
mov
push
push
or
jmp
xchg
call
cmp
popf
adc
add
dec
jge
mov
sub
pop
cmp
pusha
dec
or
cmps
mov
sub
xor
sub
sub
dec
xchg
cld
xchg
(bad)
jle
in
add
cmovno
jbe
outs
push
adc
pop
retf
or
dec
or
sbb
inc
test
inc
adc
retf
xor
lock
or
jg
sub
sbb
inc
mov
or
sbb
mov
mov
repz
inc
add
retf
jle
or
cdq
js
pop
call
and
push
stos
sub
dec
call
test
sbb
pop
mov
in
cmp
push
dec
or
or
mov
ja
bound
jne
cmc
mov
icebp
xor
mov
rcl
popf
pop
cld
adc
or
inc
push
or
cmc
lea
sahf
push
sbb
push
pop
jecxz
shl
push
(bad)
retf
jle
rcr
movs
xchg
mov
shr
lods
(bad)
lods
das
push
das
xchg
loopne
repnz
jp
adc
ror
in
sbb
in
(bad)
sti
xchg
(bad)
jb
mov
jne
cmp
jg
mov
pop
sbb
or
or
(bad)
leave
add
xchg
pusha
adc
aas
inc
or
cmps
movzx
mov
dec
repz
sub
mov
or
xchg
jg
ins
sub
add
ss
fcmovbe
mov
icebp
jg
cs
inc
rol
pusha
leave
lock
ret
(bad)
sub
stos
sub
xchg
or
or
int3
xor
fimul
mov
loopne
nop
in
jbe
push
jecxz
aaa
pushf
mov
test
fld
jecxz
test
dec
push
dec
popf
ret
rcl
jge
out
mov
pop
lods
imul
loope
cwde
mov
imul
and
les
adc
and
jmp
sbb
cmps
xchg
ror
into
loopne
xchg
push
fs
sub
inc
or
mov
adc
add
in
adc
data16
or
ins
stos
lods
pop
cmc
adc
mov
sbb
xchg
lds
repnz
cmp
pop
(bad)
mov
sahf
and
aaa
int
jns
cmp
cmps
cmps
push
movs
add
adc
or
push
and
xchg
sahf
or
adc
in
fistp
(bad)
out
pop
push
fcom
test
adc
sbb
out
jge
mov
sub
push
int3
or
jmp
dec
out
imul
stos
push
mov
mov
out
inc
xchg
aad
mov
jnp
aam
fwait
or
out
sbb
cwde
test
addr16
movs
call
dec
fldenv
xchg
jg
js
mov
test
(bad)
push
rcr
jl
jns
pop
pop
sti
mov
dec
jne
pop
pop
jne
mov
repz
mov
js
sub
(bad)
mov
in
or
push
sub
pop
cmps
or
cmc
hlt
inc
jl
cmp
in
pushf
jg
mov
repz
jge
or
pop
movs
sti
stos
data16
loopne
mov
js
ror
outs
jp
pop
repnz
add
cmc
sti
rcr
sti
int
xchg
sbb
push
rcr
repnz
cli
push
(bad)
loopne
mov
jle
add
add
mov
sub
fild
test
imul
mov
test
rol
mov
inc
movs
test
adc
loop
je
les
jno
fidiv
dec
push
enter
int
ror
xor
add
inc
cld
xor
div
call
lods
jns
fstp
nop
dec
push
enter
inc
or
jmp
mov
cdq
mov
xchg
movs
jge
jmp
(bad)
stos
leave
pcmpgtw
jecxz
cmp
push
dec
lahf
in
or
dec
outs
repz
mov
push
mov
imul
popf
xchg
movs
adc
add
repz
jge
or
punpckhdq
das
idiv
push
mov
or
les
pop
(bad)
out
(bad)
fsubr
fsub
fcomp
sar
adc
mov
pop
addr16
ror
or
or
stos
push
stc
in
je
or
xchg
mov
sbb
inc
(bad)
mov
push
fmul
adc
div
mov
jbe
je
rcr
mov
or
jl
sub
sahf
xchg
idiv
(bad)
xor
mov
sub
(bad)
xchg
mov
test
sbb
cmc
loopne
rcl
lock
sub
xor
(bad)
push
adc
or
cli
stos
jecxz
add
and
adc
cdq
push
stc
mov
jae
ficom
mov
int3
adc
jle
pop
test
add
jae
xchg
xor
loop
ss
loopne
cmp
ins
inc
loopne
and
aaa
jb
loop
pop
out
cmp
add
cli
sar
idiv
or
cmps
popf
in
test
add
sbb
jb
pop
xchg
pop
cwde
daa
cld
ror
adc
repz
and
adc
mov
or
cmps
mov
retf
les
mov
adc
or
int3
call
jl
mov
push
add
push
cmp
gs
test
int3
imul
dec
sub
and
jmp
add
iret
lods
shl
lahf
nop
out
adc
(bad)
mul
xchg
sub
push
sbb
push
inc
add
adc
xchg
push
adc
xor
fwait
out
pusha
scas
or
jmp
dec
pop
out
jns
mov
int3
add
xchg
adc
cli
adc
loope
dec
mov
jns
out
xor
xchg
adc
in
mov
cli
push
and
aaa
aaa
(bad)
mul
pop
pop
iret
std
mov
mov
sti
(bad)
std
repnz
pop
lods
mov
cwde
jbe
bound
repz
push
push
(bad)
enter
xchg
mov
shl
inc
cmp
lahf
shl
or
mov
int
fs
xor
and
xor
lock
cmp
xchg
pop
sti
imul
mov
cmp
or
sub
add
lea
clc
sub
out
int
dec
cmps
fwait
cmp
xchg
ins
pop
pop
iret
fmul
hlt
cmp
inc
scas
hlt
lea
sub
add
es
pop
mov
add
cmp
fldcw
xchg
xchg
(bad)
mov
mov
or
cld
sub
push
sbb
pop
xor
ja
push
enter
shr
jle
movs
dec
int3
cmp
stos
and
jmp
icebp
aaa
or
js
cmc
hlt
hlt
popa
ds
lahf
cmps
aad
repz
xchg
or
or
fist
mov
dec
mov
iret
sbb
jno
in
repz
dec
and
or
add
ins
sbb
hlt
pcmpeqb
cmp
inc
mov
cli
add
jo
or
lahf
fmul
stc
hlt
hlt
aas
inc
movs
setns
sub
outs
out
leave
mov
in
pop
adc
enter
adc
out
div
or
or
sub
stc
mov
fisttp
enter
mov
mov
fwait
enter
adc
cmp
mov
wbinvd
sahf
enter
fwait
push
int3
and
jae
daa
push
fisttp
and
jno
movsx
cwde
dec
fwait
lock
and
imul
jo
popf
sbb
hlt
jo
jbe
fiadd
mov
and
sub
jmp
pop
ins
(bad)
int
inc
xor
xor
mov
jecxz
std
(bad)
cld
mov
lahf
(bad)
fstp
sbb
pop
nop
mov
mov
push
lds
movs
lock
cli
jecxz
out
or
adc
(bad)
bswap
in
xchg
jecxz
je
sub
pop
dec
push
push
imul
daa
ret
sbb
outs
std
jg
and
adc
pop
cmp
or
sbb
jg
loope
adc
dec
das
inc
push
int3
pop
sbb
push
je
inc
lods
ficom
lahf
hlt
fiadd
xchg
cmps
pop
and
dec
push
fs
xchg
mov
sbb
imul
jecxz
cwde
and
or
(bad)
fisttp
hlt
dec
repnz
ret
ss
ud2
ret
das
das
jns
stc
jle
dec
mov
or
gs
pusha
sub
test
not
icebp
repz
in
stos
add
out
sbb
nop
aam
sub
repnz
leave
and
retf
in
out
mov
das
imul
loopne
push
push
xchg
dec
push
pop
xchg
je
pop
pop
(bad)
jnp
jnp
je
inc
int
clc
xor
ror
xchg
push
aaa
lds
add
add
hlt
test
das
or
push
jo
mov
jnp
jno
dec
jl
nop
aam
xchg
sub
retf
clc
or
or
fidiv
gs
imul
mov
mov
add
jo
test
and
sti
sbb
sbb
add
add
sbb
xor
jb
(bad)
sbb
lahf
jle
dec
div
xchg
push
shl
aaa
pop
adc
push
add
sub
pop
dec
xchg
in
inc
jmp
push
push
xchg
adc
xor
mov
adc
(bad)
inc
ss
adc
mov
call
movs
arpl
loope
lahf
std
sti
pop
add
fidivr
ins
inc
sbb
or
or
ss
dec
int3
jae
add
stc
fld
push
in
gs
mov
aaa
(bad)
cld
push
mov
sub
and
inc
ins
dec
leave
ins
or
retf
adc
jle
hlt
fcomp
clc
imul
or
sub
or
or
test
xchg
jp
push
xchg
or
xchg
mov
adc
sbb
mov
out
imul
sbb
sbb
movs
daa
pop
mov
sub
xor
push
jmp
arpl
mov
fmul
push
mov
add
repz
int
lea
clc
or
xor
cmp
jecxz
ds
in
out
ins
add
fidivr
gs
sbb
(bad)
int
fdiv
fs
jecxz
dec
not
cmp
xchg
fldenv
dec
movntps
push
add
(bad)
retf
push
into
xchg
and
adc
cmp
out
mov
popa
or
aad
in
and
add
xchg
mov
cs
pop
enter
std
aaa
jmp
sbb
into
add
ret
inc
mov
or
lea
add
cld
push
sbb
or
sub
xchg
pop
iret
sbb
adc
(bad)
and
add
inc
fsub
aaa
shl
lods
mov
int
jmp
cli
add
sti
fisubr
dec
xor
push
popa
jb
xor
jno
inc
hlt
hlt
popa
mov
fbld
test
dec
mov
out
jb
rep
fs
int3
xor
and
je
ret
jb
lea
or
dec
loopne
push
jp
xchg
les
sbb
fldcw
nop
xchg
xor
lea
push
sar
adc
xchg
mov
add
mov
(bad)
xchg
inc
adc
pop
push
or
dec
nop
add
adc
pop
jne
xchg
std
popf
and
push
or
or
(bad)
loop
or
or
xchg
sti
ret
dec
aad
arpl
mov
push
data16
dec
fwait
add
sbb
stos
movs
mov
lock
adc
call
into
or
push
cdq
dec
jle
xchg
inc
mov
popf
in
cdq
fnstsw
xchg
sbb
pop
shl
dec
sbb
gs
int3
adc
loopne
(bad)
aam
mov
or
scas
outs
xchg
imul
(bad)
dec
nop
aad
or
test
add
aad
inc
lds
pop
test
fadd
popa
dec
fidiv
call
test
jle
aas
(bad)
fmul
xchg
pop
test
int3
push
adc
jmp
(bad)
jg
iret
popa
xchg
clc
(bad)
clc
fisttp
cld
hlt
xor
sbb
pop
adc
dec
sbb
(bad)
sbb
adc
or
mov
push
fbld
mov
or
iret
popa
push
jle
ud2
adc
dec
imul
clc
pop
call
rcl
xchg
and
adc
and
or
xchg
jo
aad
add
jg
push
inc
rcr
sar
xchg
pop
xor
or
push
adc
or
dec
xlat
adc
int3
inc
push
repz
sbb
or
int
ror
call
xchg
aam
sahf
or
adc
xchg
test
push
and
je
mov
pop
push
popf
mov
push
add
hlt
fimul
xchg
out
mov
or
jno
pop
hlt
sti
outs
retf
pop
push
arpl
xchg
out
and
mov
or
adc
mov
or
lea
iret
hlt
stos
cs
inc
mov
test
sub
and
je
bound
or
jns
pop
(bad)
xchg
(bad)
mov
sbb
test
xchg
test
xchg
sar
mov
add
(bad)
fild
add
(bad)
aam
xchg
xchg
mov
hlt
icebp
rol
sbb
or
mov
jmp
fisub
jo
icebp
add
push
push
into
dec
int
dec
jge
sbb
sbb
inc
je
mov
rcl
sbb
cmp
int3
dec
mov
add
in
jmp
adc
push
aas
add
push
adc
call
jne
xchg
enter
sub
inc
imul
push
les
outs
das
test
shld
test
hlt
ficomp
cli
adc
out
jmp
pop
sahf
and
or
mov
pop
cmp
adc
retf
shr
pusha
xchg
clc
pop
or
cld
mov
add
bt
and
and
sub
nop
xchg
cmp
pop
pop
jge
sub
iret
sahf
or
add
rcl
add
call
sbb
inc
sbb
mov
loope
or
push
adc
adc
clc
and
pop
shl
hlt
mov
retf
xor
inc
inc
mov
addr16
adc
xor
retf
pushf
aaa
std
inc
lock
lock
(bad)
iret
int3
or
dec
xor
mov
adc
retf
mov
lock
add
fcomip
mov
or
xor
aam
push
adc
rcl
push
scas
loope
pop
outs
jns
pop
aam
jb
addr16
mov
cld
add
es
add
xchg
fcomip
(bad)
sar
loop
and
(bad)
fs
pop
rcl
mov
mov
fst
cwde
xchg
xchg
add
ret
into
sbb
sar
jl
aam
enter
(bad)
cwde
fcomp
jmp
cmps
mov
or
(bad)
repnz
lods
(bad)
xor
add
xchg
jb
test
pop
out
push
not
add
dec
push
sub
add
jo
adc
nop
lock
lods
xor
mov
pop
in
dec
cli
xchg
xchg
or
mov
jg
test
rol
and
sub
pop
jno
mov
scas
test
jle
cs
cmp
jle
dec
sbb
pusha
out
jecxz
and
bound
mov
push
jg
pop
(bad)
out
cmps
add
sub
or
inc
sub
int
add
lods
sub
into
dec
pop
mov
dec
adc
dec
sub
dec
mov
sbb
sub
call
jo
mov
hlt
or
mov
call
lahf
and
cs
sub
xor
in
pop
jo
cwde
inc
test
out
dec
cmp
ja
jle
push
mov
pop
jmp
mov
repz
jmp
imul
(bad)
repnz
xor
mov
push
xchg
xor
out
out
adc
push
repnz
mov
mov
(bad)
cmp
push
and
dec
lahf
dec
push
push
bound
(bad)
repnz
mov
lea
mov
loope
imul
in
jle
inc
adc
in
or
pop
jbe
xchg
xchg
or
aas
mov
rcr
push
repnz
fcom
sbb
push
sbb
mov
test
repnz
int3
repz
scas
fisttp
add
jnp
lods
in
or
or
lds
mov
in
mov
cmps
jb
lea
push
idiv
adc
ins
sbb
sbb
icebp
(bad)
repnz
or
push
mov
pusha
mov
dec
pop
jmp
inc
jb
loope
stos
mov
push
(bad)
adc
div
mov
jno
cld
pop
dec
add
in
ins
or
mov
scas
pop
and
test
jb
stos
pop
in
div
ss
mov
leave
in
xchg
int
icebp
jo
stos
aam
mov
add
xchg
inc
pop
fsub
add
dec
std
in
sbb
popf
pushf
nop
sbb
push
out
and
push
xchg
mov
pushf
mov
sbb
push
cs
int3
push
clc
inc
popf
shr
mov
xchg
jl
or
dec
in
cwde
sbb
ss
lahf
adc
fst
jmp
rcr
xchg
adc
sbb
test
sbb
sbb
xchg
adc
div
hlt
loop
pop
and
jbe
jge
cli
or
cmc
in
call
or
pop
jecxz
or
ss
adc
rcr
imul
add
fisub
add
push
scas
cmc
mov
ret
adc
inc
cdq
pop
mov
jp
out
je
iret
popa
push
push
jnp
leave
cli
pop
sub
in
pusha
cmp
adc
sbb
cmp
xchg
cmc
ins
cmp
shl
out
or
mov
add
(bad)
mov
mov
xor
mov
in
test
jo
sahf
test
or
inc
iret
daa
(bad)
into
adc
mov
inc
sub
sbb
push
xchg
push
jno
clc
test
ins
fld
mov
add
or
xchg
push
mov
or
inc
jnp
or
or
ds
loope
test
cmps
fwait
loop
add
sbb
xchg
pop
xchg
pop
lods
into
(bad)
add
call
mov
dec
xchg
push
xlat
inc
leave
and
or
mov
add
js
jp
mov
jnp
bound
mov
dec
mov
repnz
jg
xor
test
imul
lods
inc
loopne
lods
xor
div
stos
ins
cmp
mov
sbb
xchg
div
jo
jmp
sahf
out
and
lods
push
jb
nop
out
ror
ins
sub
(bad)
pusha
es
sti
mov
add
jns
lock
out
popf
or
imul
std
mov
add
hlt
mov
add
pop
jp
hlt
cmp
add
fldcw
jmp
mov
pop
sbb
and
mov
add
shl
stos
and
xchg
push
lds
retf
sbb
lods
repz
and
cmp
cmp
mov
pop
scas
pop
rcl
lods
sbb
jecxz
push
jg
push
xchg
pop
(bad)
sahf
je
mov
xchg
dec
lea
xadd
popf
inc
fldcw
mov
mov
mov
xchg
and
xchg
xor
adc
push
jmp
rol
or
pushf
jg
or
in
fbld
or
loopne
dec
adc
mov
adc
jo
or
hlt
mov
mov
adc
push
inc
mov
dec
mov
dec
xchg
les
arpl
adc
mov
sbb
xor
dec
rcr
xchg
push
cmc
mov
out
and
pop
add
je
int
adc
icebp
hlt
lea
push
aad
repnz
mov
inc
pushf
mov
sub
lea
ss
inc
enter
jmp
data16
add
out
icebp
lea
adc
ret
test
shl
loop
outs
scas
out
outs
and
sbb
cwde
aam
ins
outs
jae
adc
fcom
jmp
pop
push
adc
mov
xor
je
in
sbb
lahf
mov
call
push
xchg
jge
sbb
mov
xchg
push
sbb
pop
xor
xchg
ret
(bad)
adc
xor
dec
test
or
or
or
and
or
hlt
adc
or
test
push
jp
loop
mov
bnd
mov
jg
mov
xor
call
repnz
jae
add
repz
hlt
fcom
ret
das
and
neg
push
outs
scas
jmp
out
(bad)
pop
xor
out
ror
std
in
mov
sub
cmc
jg
xchg
jecxz
cmp
fbstp
jae
sbb
call
add
push
push
clc
in
sbb
or
xchg
xor
pushf
xchg
inc
add
jp
xor
and
call
adc
(bad)
mov
pop
or
subps
popf
out
jns
hlt
jle
sbb
or
push
sbb
fmul
hlt
adc
or
lea
jmp
cmp
or
adc
xor
or
(bad)
pop
lock
sub
xrelease
sbb
or
or
int3
add
pop
push
arpl
adc
ds
std
fs
cdq
xchg
daa
sub
cs
adc
push
adc
gs
push
mov
movs
sbb
xchg
out
neg
inc
test
stos
or
hlt
sbb
sub
jle
mov
adc
mov
test
pop
fstp
test
movs
inc
rol
pop
sbb
push
test
pop
sbb
clc
cmp
je
(bad)
fnsave
mov
jl
dec
aad
xchg
rcr
or
adc
aas
ror
mov
sbb
pop
adc
mov
xchg
or
and
pop
pop
arpl
outs
aam
mov
sbb
add
add
push
pop
adc
push
adc
or
dec
pop
xchg
push
sbb
jge
scas
stos
imul
jnp
retf
and
inc
sub
sbb
nop
mov
pop
imul
push
adc
or
lods
adc
sbb
sub
push
adc
jmp
movs
fbld
mov
sub
sbb
or
int3
jg
mov
imul
das
sub
cld
or
or
(bad)
xchg
xchg
mov
outs
jo
cmps
or
or
rcl
or
int3
adc
xchg
xchg
ror
int3
(bad)
ror
scas
or
cmc
dec
hlt
or
or
or
push
dec
aas
xor
push
or
add
add
mov
movs
xchg
aam
ret
loope
add
fld
inc
push
fbld
xchg
xor
sahf
cmp
adc
mov
dec
xchg
in
jmp
adc
popa
stos
sub
stos
jmp
aas
ret
prefetcht1
jle
adc
stos
je
push
adc
push
test
push
xchg
fadd
xchg
ss
mov
sbb
xchg
sbb
loopne
dec
das
popf
sbb
sub
fisttp
or
xchg
pop
test
sbb
xor
xchg
rcl
pushw
adc
das
mov
or
pop
aas
push
cmc
adc
sub
adc
int
retf
sbb
out
adc
xchg
leave
inc
dec
das
cmp
repnz
xchg
mov
enter
shr
enter
and
dec
stos
cmp
dec
or
xor
aas
int3
(bad)
pop
movs
add
and
cdq
lods
or
or
aam
or
xchg
sbb
sub
mov
lods
jge
adc
mov
rcl
test
repz
fld
jbe
jmp
(bad)
fisttp
lock
(bad)
jnp
mov
cmp
retf
mov
adc
shl
jo
jmp
mov
cmc
pop
adc
sub
add
cmp
sub
mov
test
lea
icebp
jne
mov
repz
push
(bad)
or
xor
sub
or
shr
or
or
int3
pop
pop
sub
xchg
call
mov
push
xor
add
sbb
ss
arpl
adc
(bad)
div
cs
test
call
adc
jl
fucom
jp
aaa
cmp
jg
(bad)
push
dec
rcr
mov
jns
mov
xchg
shl
or
xchg
jno
les
daa
xchg
cdq
cmp
push
cdq
add
add
scas
pop
xchg
pop
mov
xchg
mov
lods
dec
adc
test
and
imul
push
rol
xchg
jne
jecxz
inc
sti
xchg
pop
nop
mov
mov
(bad)
nop
sub
push
lods
js
out
push
cmp
movs
push
in
push
adc
(bad)
xlat
sbb
jmp
mov
mov
scas
dec
lods
push
dec
fisttp
pop
jg
add
xor
addr16
sar
jbe
mov
adc
cmc
mov
iret
aam
mov
aaa
dec
dec
sbb
push
jbe
xlat
mov
jle
mov
(bad)
mov
mov
inc
jns
shr
jmp
push
loop
or
sbb
repz
aas
enter
push
dec
sbb
aaa
movs
push
aas
int3
inc
xchg
enter
hlt
jns
adc
cmp
cmc
data16
add
int
jg
and
or
int
nop
leave
or
or
pop
in
or
dec
int3
sub
adc
xchg
sub
mov
sub
fdiv
sub
outs
xor
call
push
lahf
into
pop
push
hlt
hlt
hlt
dec
test
in
sbb
je
adc
push
retf
mov
sahf
iret
pop
sbb
dec
xchg
pop
push
or
pop
lahf
mov
or
jo
and
movs
cld
(bad)
cmps
std
or
js
div
hlt
mov
push
in
add
out
add
and
mov
xchg
and
or
div
mov
push
sub
push
jecxz
or
sahf
add
icebp
repz
push
lods
xor
mov
repz
aaa
lahf
mov
dec
pop
cmp
movs
mov
jb
test
in
pop
push
or
sub
dec
daa
retf
ds
or
inc
das
sub
popf
dec
sub
shr
addr16
dec
ret
(bad)
into
clc
hlt
jg
outs
jb
das
lods
cmp
xor
dec
xor
repz
popa
mov
(bad)
mov
repz
sbb
adc
div
hlt
mov
or
jg
mov
mov
stos
je
xor
mov
and
or
loope
push
inc
or
test
jno
jnp
in
in
jae
or
mov
test
iret
cdq
and
shl
mov
cwde
mov
out
sbb
sub
and
(bad)
pop
cdq
outs
std
sub
inc
mov
ss
push
jo
les
pop
int3
push
dec
ret
in
icebp
repz
sub
pop
mov
adc
mov
mov
fnstenv
lahf
loop
sub
repz
lods
lock
xor
(bad)
mov
mov
aas
aam
add
xor
and
inc
loope
cmp
div
mov
or
in
and
push
cmp
(bad)
retf
dec
jbe
js
das
ss
xor
adc
cmp
xchg
hlt
call
jnp
call
adc
add
enter
xchg
in
int3
(bad)
in
pop
add
xor
mov
out
aas
stc
pop
(bad)
test
das
adc
mov
push
repz
inc
in
retf
mov
add
test
and
adc
pop
(bad)
int
cs
cmc
mov
pop
(bad)
cmc
xchg
dec
inc
iret
add
mov
sar
xor
sbb
xor
sub
inc
lock
and
xchg
sahf
inc
fmul
push
push
or
cmp
or
push
cdq
add
mov
mov
in
xor
jns
icebp
repz
loop
mov
dec
mov
mov
mov
xchg
in
push
mov
sub
jbe
mov
add
das
pop
ret
jmp
ja
pop
out
loop
mov
repz
cmc
mov
dec
(bad)
cmc
mov
mov
data16
mov
int
mov
cmp
out
call
inc
clc
jecxz
xor
sub
lods
pop
or
inc
hlt
sub
jo
clc
xchg
sub
mov
lock
sub
pop
push
mov
loopne
xor
inc
shl
xchg
xor
addr16
cdq
loopne
lock
or
push
add
mov
mov
mov
cld
jo
movs
or
in
or
or
push
cmc
ror
das
add
and
subps
inc
lock
xor
hlt
out
inc
fs
or
in
arpl
adc
ins
mov
or
jno
push
div
sbb
int
lea
sbb
stos
xchg
mov
sbb
ret
jge
xchg
mov
repz
or
xchg
push
mov
in
retf
popf
ins
pop
mov
addr16
cli
rcl
or
loop
push
mov
loop
push
mov
or
hlt
in
(bad)
cld
in
mov
fwait
sbb
cwde
test
jmp
in
sub
repz
jl
mov
loop
cmps
sub
leave
add
ds
push
mov
hlt
repz
jp
or
push
aaa
jo
or
lar
lds
(bad)
push
lods
idiv
add
loopne
sar
xor
enter
sub
test
xchg
(bad)
repz
cmc
and
retf
sub
mov
push
pop
and
cs
iret
xor
sub
repz
hlt
mov
movs
leave
shr
xchg
mov
pusha
lods
jmp
sub
cmp
sbb
push
jne
xor
adc
cmc
and
and
mov
cmp
loopne
imul
adc
stos
rcl
out
cmp
push
(bad)
push
dec
ret
dec
imul
push
(bad)
mov
xchg
sub
aas
call
mov
mov
mov
gs
jmp
ins
pop
retf
push
clc
push
mov
mov
mov
lahf
mov
push
xchg
sahf
ins
stc
repnz
cld
jbe
sub
imul
and
int
jmp
outs
std
or
popa
test
jecxz
push
push
in
das
clc
or
nop
mov
scas
mov
inc
mov
sbb
(bad)
rol
or
xor
jne
adc
jle
mov
movs
or
xchg
imul
xchg
jmp
xchg
adc
sbb
iret
push
or
popf
imul
pop
dec
das
add
push
push
in
mov
jo
shl
mov
add
int3
jmp
loope
aad
daa
sbb
and
jns
mov
cmc
repz
push
adc
jecxz
jl
hlt
sbb
test
das
inc
or
push
adc
pop
cdq
sbb
sub
xchg
add
xchg
add
inc
sbb
and
xchg
adc
mov
dec
mov
gs
pop
sub
into
fst
loop
add
cmp
ja
das
test
push
enter
ud2
adc
sbb
(bad)
rcr
outs
xor
mov
and
js
cdq
aad
sub
cmpxchg8b
or
mov
mov
fadd
fs
pop
pop
mov
or
popa
test
cmp
lock
push
sbb
mov
cmp
or
lods
cwde
cs
and
push
test
pop
fdiv
test
cmc
sbb
and
pop
push
add
or
das
(bad)
adc
data16
or
cmp
retf
pop
jecxz
pop
pushf
sub
push
push
dec
or
add
adc
enter
in
push
stc
push
add
lods
popf
mov
or
sub
stos
scas
sub
pop
fdivrp
loop
call
mov
fisttp
xor
push
dec
mov
push
mov
cmp
hlt
imul
aas
mov
sbb
movs
ds
xchg
dec
hlt
hlt
push
cmp
inc
shr
pop
adc
das
fwait
ins
jl
xchg
mov
shl
mov
aas
clc
cmp
sti
loopne
hlt
hlt
sub
data16
das
mov
or
aad
cli
ins
test
loope
dec
loopne
or
push
and
and
jecxz
ss
in
sahf
int3
fadd
ror
scas
outs
adc
imul
add
sbb
leave
xchg
jge
es
xor
add
jb
in
scas
lahf
sbb
scas
push
mov
pop
pop
inc
std
mov
in
fs
push
push
cmp
or
jbe
fwait
dec
sbb
mov
jg
or
repnz
retf
js
fild
jmp
mov
ja
push
jns
xor
in
cmp
loop
xchg
cmc
cmps
fild
cwde
mov
int3
repz
ja
xor
mov
sbb
inc
cmc
sbb
shr
and
sub
adc
shr
cmp
mov
fwait
add
cdq
out
hlt
or
pop
bnd
push
test
mov
sahf
push
popf
dec
sub
(bad)
lea
mov
cdq
sbb
or
push
js
ins
cdq
loop
adc
add
test
(bad)
push
test
dec
cmp
shl
outs
xor
jecxz
push
push
add
adc
push
popa
inc
das
pop
sub
add
inc
loop
ins
pop
clc
add
and
dec
cmc
push
adc
mov
add
dec
sbb
hlt
sub
and
stos
loop
push
sbb
mov
jns
ins
ds
fld
cmps
push
enter
push
pop
pop
add
outs
outs
cmp
mov
xchg
or
pop
sub
or
(bad)
xlat
push
retf
xor
push
adc
mov
jge
xchg
stc
hlt
and
in
xchg
in
test
or
push
psubb
sbb
mov
mov
sbb
pop
or
retf
das
outs
outs
mov
xchg
mov
or
rcr
and
pop
or
xchg
or
push
nop
nop
or
fs
enter
ror
popf
mov
or
cli
adc
addr16
pop
push
aas
int3
push
dec
cld
add
or
inc
dec
jg
repnz
adc
or
or
or
lea
or
xor
clc
add
hlt
hlt
sbb
inc
test
mov
add
or
push
stc
hlt
xchg
mov
add
or
and
hlt
sub
lock
fnsave
sub
sbb
int
pusha
inc
adc
jbe
cmc
jo
or
(bad)
jge
mov
(bad)
mov
add
xchg
fstp
mov
std
pop
or
sub
dec
das
sbb
xor
or
xlat
test
sub
mov
fs
jae
imul
and
inc
pop
jb
stc
hlt
mov
xchg
sbb
aas
(bad)
rcr
push
jo
fisttp
xchg
xchg
add
fincstp
or
cdq
sub
(bad)
pop
add
or
int3
adc
or
and
out
js
xor
ror
jmp
arpl
fisttp
jns
jo
add
out
xchg
xchg
pop
adc
int
in
stc
adc
js
pop
or
cmc
(bad)
test
push
or
imul
push
xchg
xchg
hlt
mov
xchg
sbb
or
repz
jmp
or
cmc
ficom
jno
int3
dec
pop
push
push
sub
or
pop
cmc
mov
daa
pop
sub
sbb
lea
xor
mov
outs
(bad)
ror
bound
and
or
lea
lock
int
add
lods
aad
cmc
dec
je
or
dec
retf
xchg
pop
dec
mov
push
xor
std
(bad)
lea
cvtpi2ps
xor
mov
repnz
imul
add
lar
leave
lea
das
jecxz
pop
mov
mov
retf
jb
cdq
adc
add
jecxz
mov
or
jp
xor
sbb
sti
or
nop
xor
xor
push
dec
xor
nop
pop
or
dec
rcl
aaa
ins
or
or
dec
loopne
sti
or
icebp
repz
retf
mov
push
or
xchg
fadd
ja
xchg
fmul
pusha
and
or
test
pop
and
std
or
or
mov
stos
int3
sbb
lods
call
add
scas
mov
xchg
movs
fwait
out
or
push
add
pop
popa
cmp
mov
xor
adc
fucomp
sbb
xor
mov
add
outs
and
or
dec
dec
or
xchg
or
je
dec
(bad)
push
xchg
sar
xchg
or
retf
sbb
clc
or
pop
mov
dec
sub
xlat
xchg
hlt
pop
hlt
fst
pusha
xchg
sub
iret
sbb
sahf
fdivr
jmp
mov
mov
sub
sub
push
in
call
adc
retf
xchg
or
cmp
lock
add
dec
or
inc
cmc
xchg
bound
mov
not
aad
rcl
mov
popf
sub
xor
mov
fild
nop
pop
lods
sub
cwde
cdq
mov
pop
mov
test
mov
popa
sbb
mov
repz
or
imul
jecxz
xor
les
jne
das
imul
inc
imul
test
mov
test
xor
test
sub
rcl
fcom
add
sub
sbb
mov
test
jecxz
test
sub
mov
hlt
cmp
xor
mov
add
sbb
adc
cdq
xchg
stc
les
or
cmp
xor
or
add
loopne
sbb
and
cmc
jle
call
xlat
mov
cmp
mov
jne
(bad)
xor
inc
mov
repz
jo
sbb
iret
test
add
addr16
iret
adc
rcr
call
or
test
fwait
test
xchg
adc
xchg
jbe
or
enter
cmp
lock
mov
and
sub
push
or
add
jno
adc
sub
or
mov
sahf
adc
mov
jp
or
xchg
jl
xor
adc
je
or
adc
sub
out
addr16
sub
or
pop
or
not
cmp
mov
aas
das
push
iret
sub
mov
mov
pushf
mov
pop
xchg
in
pop
xor
cmp
push
push
out
shr
inc
mov
or
or
mov
stos
rol
sub
pop
lods
aam
jbe
push
or
xor
inc
inc
test
(bad)
out
out
dec
loopne
test
repz
icebp
repz
xchg
and
or
push
cvttps2pi
mov
add
ja
jb
loopne
movs
xchg
mov
push
test
test
xchg
into
xchg
sbb
inc
repnz
addr16
imul
jmp
or
dec
das
xchg
inc
xor
out
xchg
leave
jno
das
jecxz
call
mov
outs
stc
hlt
mov
push
and
or
jg
lds
add
jecxz
push
ins
inc
mov
lods
out
push
sbb
inc
dec
in
mov
pop
cmp
jecxz
jl
or
div
jmp
das
inc
or
leave
add
repnz
test
or
je
or
test
out
ud2
or
adc
aam
add
jmp
xchg
or
in
test
jns
jecxz
push
aad
or
add
sbb
fstp
popa
or
inc
clc
ins
in
enter
and
lea
sub
xor
test
fldcw
popa
dec
clc
mov
adc
imul
push
add
or
xlat
ins
popa
xchg
sbb
shl
sti
mov
pop
jecxz
pop
ins
jle
lock
or
loop
cmp
push
xchg
cwde
aam
xor
pop
add
cmp
sub
or
call
not
repnz
xor
or
adc
cmp
repnz
jle
cmp
lahf
push
mov
xchg
sbb
movs
xchg
aam
dec
sbb
jle
mov
test
iret
lds
mov
or
push
cmp
test
test
mov
div
mov
movs
(bad)
and
pushf
add
or
jmp
test
add
xchg
or
jae
xor
imul
repnz
ret
push
or
das
fwait
inc
fidiv
sbb
sbb
ins
setb
pop
xor
mov
jmp
sub
les
mov
xchg
sbb
out
fadd
imul
mov
adc
cdq
push
rol
push
or
or
pop
jle
mov
mov
or
loope
sahf
enter
test
add
test
in
scas
outs
push
jns
ds
gs
adc
mov
mov
cmps
popf
push
neg
cmp
xor
xchg
add
xor
sbb
adc
div
xor
in
xor
iret
sub
in
(bad)
out
movs
mov
ins
je
fs
sub
rcr
or
sub
and
cmc
hlt
sbb
lock
mov
aaa
add
inc
push
mov
dec
adc
xor
pop
jle
jmp
xchg
xchg
imul
sbb
or
jecxz
or
and
and
(bad)
aad
or
icebp
repz
movs
add
inc
push
xor
stos
and
or
aaa
in
in
or
add
mov
jno
lahf
arpl
push
mov
inc
push
xchg
xchg
jno
jecxz
shr
test
in
push
out
ds
out
sbb
push
repnz
or
and
ins
test
mov
icebp
jecxz
cdq
jle
sbb
mov
mov
add
retf
hlt
sbb
and
xchg
inc
mov
pop
or
pavgw
pusha
aas
dec
test
(bad)
test
xor
fsubp
cmp
imul
clc
mov
cdq
lock
sub
mov
or
or
or
jne
xchg
js
xchg
cmc
hlt
repz
push
mov
inc
fstp
sahf
cmc
hlt
test
xchg
push
mov
or
add
(bad)
test
int
xor
adc
cdq
cdq
jecxz
mov
pop
or
mov
pop
bound
sub
dec
stos
aam
repz
outs
xor
xchg
es
adc
fucom
xchg
jecxz
lods
mov
out
rcl
repnz
cmp
sbb
adc
inc
xchg
sbb
and
or
jecxz
push
add
cmp
dec
pop
lahf
jns
ins
cmc
hlt
push
jne
mov
jecxz
pop
sub
sbb
and
and
div
or
pop
or
cli
in
test
jge
imul
pop
sub
and
add
sub
scas
mov
icebp
cmp
xor
add
cmc
repz
popa
sub
(bad)
adc
or
(bad)
ins
cmc
inc
sar
and
jle
cmp
(bad)
aam
sub
and
fwait
pop
inc
adc
ja
loop
push
loopne
call
in
rcl
xlat
dec
aad
cmp
nop
(bad)
repz
fld
or
or
stc
sti
jmp
adc
pop
or
sbb
cmp
les
push
scas
mov
popf
hlt
add
push
(bad)
scas
adc
add
(bad)
jno
add
jmp
inc
(bad)
stc
bound
mov
xchg
es
sbb
nop
movs
xor
mov
out
jne
fdiv
add
mov
sti
mov
fcom
xchg
xor
cmc
hlt
and
inc
lods
jmp
add
add
stos
inc
mov
xor
(bad)
mov
and
in
jns
or
movs
call
xchg
jmp
or
xchg
and
imul
pop
xchg
int
addr16
xchg
std
and
push
pop
cld
rcr
fcom
inc
out
pop
(bad)
jmp
mov
xor
mov
jbe
xchg
icebp
in
mov
xor
add
loope
(bad)
in
es
push
stos
sbb
ds
cmp
add
rcl
sbb
adc
xchg
pop
xor
rol
mov
fstp
jg
pop
loop
lea
or
sahf
pushf
sbb
adc
pusha
pop
jbe
or
sbb
xchg
test
repz
and
rcl
popf
je
push
push
stos
or
or
sbb
adc
xchg
fs
movs
lock
in
idiv
arpl
mov
inc
mov
or
cmp
xchg
pop
xor
mov
push
adc
mov
std
aam
stos
push
imul
movs
inc
jmp
cs
imul
sar
pop
test
pop
fadd
xor
dec
pushf
fist
xchg
push
push
xchg
imul
sbb
popf
int
fsub
sub
repz
sub
mov
pop
pop
pop
add
adc
xchg
pop
xor
xchg
jae
xchg
dec
adc
lock
test
aas
clc
imul
std
movs
loopne
pop
or
push
retf
add
mov
or
fsubr
push
dec
sbb
or
and
xchg
mov
popf
inc
(bad)
dec
sub
sbb
mov
hlt
aas
int3
push
in
push
adc
std
int3
or
movs
mov
ror
or
outs
scas
test
mov
lods
rcl
repnz
inc
nop
sbb
or
or
scas
pop
ins
push
popw
loopne
or
inc
lock
hlt
add
sub
pop
mov
or
cld
jl
in
xchg
loope
test
loopne
popa
retf
pop
iret
inc
ja
or
or
das
(bad)
or
or
dec
sbb
mov
fs
xchg
not
dec
js
cwde
xlat
dec
mov
sbb
nop
enter
mov
ds
popa
sahf
or
xchg
jne
sar
repz
int3
cli
pop
or
shr
inc
jo
and
test
or
popa
mov
push
out
std
pop
outs
adc
or
div
mov
sub
fld
or
popa
inc
adc
or
imul
js
test
(bad)
jl
inc
dec
repz
mov
(bad)
mov
fisubr
sub
xor
(bad)
or
inc
in
dec
call
jo
push
sub
ret
icebp
icebp
repz
ins
pop
pop
dec
push
adc
adc
jne
mov
mov
popa
sbb
push
jle
or
mov
popa
push
adc
mov
mov
and
fdiv
pop
or
int3
ins
xor
mov
cmc
mov
popa
in
test
jnp
pop
(bad)
movs
xchg
loopne
mov
das
inc
pop
mov
outs
xor
addr16
mov
push
add
inc
pop
add
je
test
add
jo
pop
stos
cld
xor
outs
mov
pop
cmp
inc
dec
push
(bad)
or
pop
call
aad
pushf
out
(bad)
xor
mov
jae
mov
fsub
pop
dec
mov
sbb
leave
inc
xchg
gs
mov
mov
jge
lods
mov
sbb
mov
popf
push
cwde
pop
or
movs
xor
push
adc
cmp
call
mov
jmp
mov
ins
cmp
sbb
add
pop
jmp
mov
dec
mov
fdivr
lods
push
ins
fadd
fst
adc
add
(bad)
gs
aam
shl
jns
clc
ins
xchg
xlat
sbb
mov
jns
and
les
gs
in
xchg
lahf
mov
cmp
pop
hlt
jg
jp
cmp
cld
ret
stc
lahf
hlt
mov
loop
addr16
mov
fld
and
or
das
inc
add
mov
call
int
cdq
shl
sbb
jp
pop
sub
iret
sub
pop
add
sub
les
test
test
lods
mov
cmps
jae
jle
cdq
sub
sub
icebp
or
add
cmp
xor
xor
es
stos
dec
add
in
test
pop
or
mov
inc
xor
scas
xchg
sbb
(bad)
mov
nop
jo
mov
stos
(bad)
push
cmp
test
mov
call
dec
fcomp
ins
push
nop
mov
fwait
inc
test
adc
jl
in
cs
mov
ins
xchg
push
cmp
dec
(bad)
int3
add
ins
in
lock
jnp
mov
popf
jg
pop
dec
popa
test
dec
jns
cli
int
jle
in
mov
out
xor
dec
not
pop
mov
and
push
push
adc
or
movs
adc
adc
scas
loop
jl
dec
cmp
out
push
cmp
sbb
rol
imul
xor
repnz
cmps
xchg
sahf
jle
cmp
or
or
mov
xchg
ror
shl
or
ror
ffree
in
push
jb
in
sub
shl
or
mov
pop
pop
mov
jo
cmc
cmp
lods
inc
xor
pop
mov
mov
repnz
mov
jmp
gs
cmp
call
or
adc
inc
and
add
mov
or
adc
out
call
cmp
add
in
test
stc
imul
lahf
lds
jg
sub
and
mov
push
jmp
int3
repnz
std
sbb
dec
out
dec
jg
jle
cli
jo
mov
dec
pop
fnstsw
(bad)
add
retf
data16
test
xchg
xchg
and
pop
adc
ret
mov
mov
mov
sbb
jo
mov
outs
adc
sbb
in
rcl
fmul
cs
bound
pusha
pop
outs
xor
ins
inc
ss
xchg
iret
mov
sbb
add
jecxz
xor
sub
hlt
je
cwde
push
mov
jmp
mov
mov
les
push
jle
mov
sahf
add
cmp
add
(bad)
icebp
ins
hlt
jg
sar
pop
xlat
inc
or
or
ret
lahf
and
adc
lods
aam
out
mov
ins
xor
xchg
inc
das
or
adc
adc
daa
test
mov
idiv
jns
mov
mov
mov
fidivr
push
retf
fld
adc
xor
mov
and
sahf
xchg
test
movs
les
mov
aad
cmp
pusha
xchg
jmp
mov
jle
sbb
push
test
sbb
add
jl
xor
inc
movs
xor
dec
jg
sbb
xchg
adc
and
lahf
add
int3
int
xor
mov
cmp
dec
inc
(bad)
lods
xor
popf
imul
cld
mov
loopne
int3
outs
aaa
adc
jmp
outs
icebp
icebp
fidivr
das
inc
mov
cwde
inc
inc
or
jo
mov
or
mov
cs
push
sbb
lock
pusha
pop
sub
ja
inc
xchg
ins
sbb
add
arpl
or
or
sbb
fsubr
(bad)
pop
or
sbb
pop
jmp
sbb
out
mov
add
mov
sub
adc
sub
push
cmp
or
jg
popf
cmc
mov
inc
and
fld
ror
std
jb
loopne
push
outs
inc
into
mov
sbb
aad
or
inc
int
mov
cmps
push
sub
fistp
sbb
aaa
adc
sub
loope
sti
add
sub
loop
rol
xchg
push
inc
inc
lods
cmps
(bad)
mov
int
xor
or
add
xor
sub
mov
jmp
sbb
adc
mov
jo
adc
or
fisttp
cmp
scas
gs
outs
out
aas
add
mov
jecxz
fwait
pop
scas
jmp
dec
arpl
ins
push
movs
mov
or
pusha
adc
adc
push
lods
sti
mov
ja
or
mov
dec
repz
clc
cdq
push
xor
fcmovne
and
std
aaa
std
adc
rol
dec
retf
fcomp
xchg
in
rcl
xchg
push
adc
stos
pop
mov
mov
clc
add
xchg
xchg
and
mov
mov
test
das
dec
xchg
call
inc
or
adc
xlat
cdq
cs
addr16
cmp
nop
mov
mov
pushf
jmp
add
and
mov
out
jl
mov
push
cs
je
push
div
call
cmp
loope
xor
cmps
bound
and
aad
out
adc
loop
xchg
sub
call
stc
ds
mov
cmp
add
xchg
mov
hlt
inc
cld
cmc
repnz
push
dec
xchg
adc
and
jecxz
ja
movs
inc
add
cld
movs
pop
bound
push
leave
jbe
shl
jecxz
sub
xchg
add
add
jo
out
hlt
push
adc
cwde
pop
xchg
sub
mov
push
cmp
popf
sbb
add
push
loope
jle
sub
cmp
loope
xor
rcr
popa
dec
shl
cs
cmp
xor
aas
aas
push
mov
imul
ins
sbb
cmc
mov
retf
cmp
aas
and
icebp
add
fwait
stos
mov
call
sub
or
outs
and
sbb
pop
xchg
or
jo
adc
shr
lods
sbb
adc
cmp
out
ins
mov
push
inc
lods
test
push
push
test
lods
loopne
push
dec
das
(bad)
pushf
or
mov
lahf
mov
int
fucomi
jmp
js
cmc
xor
imul
ss
mov
hlt
imul
and
cmp
mov
sbb
jmp
icebp
xchg
sbb
or
test
jae
push
jg
jae
repz
xor
mov
mov
jecxz
sbb
mov
sbb
repz
neg
in
jnp
int3
in
jecxz
and
cdq
add
and
shr
mov
jno
loopne
push
sbb
ds
stc
ret
out
jecxz
call
sub
inc
in
and
lahf
xchg
popa
jns
call
fnstcw
int3
xor
cwde
test
mov
retf
in
sbb
lahf
pop
js
test
aam
add
cmp
inc
cdq
push
test
or
jmp
std
clc
rcr
jo
loop
popa
rcl
pushf
mov
out
jecxz
jmp
movs
xchg
pusha
das
jmp
jo
lock
test
jecxz
in
mov
xchg
add
in
fwait
push
imul
sbb
std
jnp
sbb
pusha
cmp
sub
stc
ds
es
and
loopne
lods
not
data16
leave
inc
xor
call
adc
call
sbb
jecxz
adc
nop
fsubr
in
mov
enter
xor
sub
xchg
pop
mov
enter
(bad)
aaa
cwde
push
mov
sbb
push
neg
xor
inc
inc
sahf
mov
sbb
mov
or
std
dec
xor
add
mov
inc
addr16
add
push
cmp
mov
adc
jmp
xchg
xchg
pop
das
out
push
cmp
and
mov
pop
add
and
add
dec
jecxz
inc
shl
cmp
sbb
and
mov
jmp
xchg
inc
leave
ins
push
call
dec
popa
jo
adc
jg
frstor
jmp
loop
stc
push
adc
pusha
or
adc
lock
(bad)
stc
jno
jle
fadd
loopne
jne
xchg
sbb
lods
pop
(bad)
hlt
jge
mov
mov
dec
pop
das
jbe
pusha
and
xchg
mov
into
sbb
pushf
retf
sbb
and
sub
xchg
hlt
xchg
imul
out
pop
hlt
sbb
pop
das
cmps
cmc
push
sub
xor
push
jmp
mov
adc
pop
test
mov
jmp
and
sub
xor
mov
adc
xor
dec
cmps
cmps
xchg
pop
or
out
and
sbb
div
adc
ja
stos
jle
mov
cmp
jg
mov
js
enter
sbb
ja
shl
mov
pop
js
and
dec
sti
addr16
scas
dec
add
and
dec
mov
cmps
adc
out
test
mov
mov
bound
and
fs
cmps
adc
neg
loope
dec
xor
pop
pop
dec
jnp
mov
push
xchg
cwde
dec
mov
iret
popf
pop
ja
adc
out
ja
mov
jmp
xor
cmp
xchg
inc
stos
sahf
fwait
jns
xor
push
push
mov
ins
repnz
mov
push
sahf
mov
adc
loope
and
xchg
pushf
sbb
daa
push
jae
jne
xor
fisub
xor
loop
cld
hlt
push
sbb
cld
les
cld
lahf
push
dec
sbb
ins
and
repnz
mov
in
dec
sbb
fimul
int
ffree
test
dec
add
cwde
cmp
into
pop
pop
xor
push
add
jbe
xor
xchg
mov
int
jecxz
in
sbb
daa
daa
pop
pushf
cld
hlt
fcomp
fsub
ret
std
jle
movs
sbb
sub
js
test
xchg
jnp
jmp
scas
clc
rcr
push
jns
fild
test
mov
mov
mov
jle
out
sbb
aam
imul
iret
retf
dec
cmp
pop
or
or
aad
lods
inc
xchg
dec
xor
and
inc
clc
mov
jecxz
int3
dec
das
mov
repnz
rol
test
cmp
xor
test
or
add
inc
fcmovb
inc
ret
xchg
add
mov
mov
mov
or
test
jmp
enter
fwait
push
test
and
clc
mov
dec
fsub
xchg
fisttp
add
mov
int
xchg
or
int3
adc
xchg
fnstsw
sbb
and
mov
lahf
mov
sti
adc
cmp
js
addr16
pop
pop
sbb
xchg
hlt
and
jb
or
xchg
(bad)
jle
test
mov
dec
mov
xor
cmc
adc
inc
loopne
test
sbb
repz
adc
not
pop
or
out
lock
jle
and
sahf
pop
xchg
add
out
dec
sbb
cmps
rol
scas
mov
mov
or
pushf
add
leave
xchg
add
test
jne
push
pushf
dec
out
repz
adc
or
outs
xor
jo
cmp
cmp
pop
outs
pop
repz
push
hlt
sub
xchg
dec
in
jg
out
cs
(bad)
jge
in
int3
dec
mov
add
inc
mov
fsub
adc
and
sub
add
hlt
jo
pop
cdq
je
daa
or
push
dec
in
mov
call
jo
mov
xchg
fmul
adc
(bad)
in
aad
iret
add
repnz
xrelease
jp
cmp
int3
adc
aad
(bad)
fnstenv
or
jle
pop
gs
sbb
and
mov
xchg
aad
fiadd
lock
fsubp
leave
fwait
outs
xor
and
jo
ret
addps
rcl
int3
fmul
sbb
xchg
iret
(bad)
fnstcw
pop
lock
jbe
stc
xchg
push
loopne
fcom
add
popf
mov
arpl
cmp
call
cwde
xchg
retf
pop
pusha
or
or
dec
inc
xchg
test
sar
test
retf
xchg
je
cmp
fs
ficom
ins
jmp
pop
mov
jo
out
into
jmp
cmp
retf
and
or
ja
push
jno
jle
xchg
xor
inc
test
mov
bnd
cmc
repnz
loopne
arpl
xor
sbb
mov
repnz
retf
mov
xchg
pslld
repz
cld
dec
mov
push
iret
xchg
cld
mov
fwait
add
inc
repnz
loopne
je
adc
xchg
aam
ret
add
and
cmc
adc
in
or
dec
pop
loop
pop
mov
jg
xor
repz
pop
push
pop
std
cmp
hlt
sub
inc
call
push
iret
ins
inc
dec
out
push
add
dec
jns
call
ret
push
and
sub
or
push
mov
shr
retf
push
push
sub
and
mov
fiadd
sahf
mov
fild
inc
dec
scas
jno
xchg
fs
lahf
add
push
push
fld
in
pop
sub
push
hlt
jns
fiadd
fwait
or
mov
inc
sbb
(bad)
add
sbb
jnp
mov
lock
cwde
mov
ror
dec
sahf
clc
js
pop
add
ret
fcomp
mov
dec
push
add
xor
inc
push
js
pop
mov
or
rol
nop
mov
leave
enter
xor
adc
inc
add
sar
cmp
das
mov
adc
jmp
add
push
ja
mov
pop
int
inc
cmp
xchg
clc
js
mov
or
fild
adc
adc
hlt
cmp
xchg
push
dec
inc
adc
adc
mov
lea
adc
rcr
(bad)
mov
or
adc
sbb
xchg
mov
les
fidiv
sbb
adc
leave
inc
imul
call
xchg
clc
jmp
movs
rcl
test
bound
jmp
or
mov
jecxz
mov
sbb
ret
lahf
ins
pop
aad
jns
or
call
adc
push
scas
jl
ror
mov
or
stos
jbe
add
adc
rcr
or
gs
inc
mov
sbb
dec
mov
aaa
inc
xchg
jl
jne
adc
jnp
cdq
pop
sub
nop
jp
or
hlt
xchg
xor
push
adc
or
mov
add
inc
je
dec
retf
adc
mov
cmps
pusha
adc
or
xor
cmc
or
jbe
mov
clc
cmp
leave
icebp
mov
or
mov
jno
or
or
mov
or
test
cmp
leave
retf
mov
or
les
mov
or
or
pusha
mov
(bad)
dec
or
inc
je
sub
or
xchg
(bad)
mov
or
adc
test
pop
hlt
xchg
xchg
int3
lea
pop
hlt
jno
adc
int3
add
test
in
jmp
hlt
add
mov
xchg
dec
or
mov
mul
hlt
hlt
or
push
adc
mov
test
jl
(bad)
imul
add
xchg
(bad)
or
push
clc
mov
ror
or
hlt
sub
push
adc
or
or
jb
mov
or
or
shl
mov
sahf
or
sbb
push
adc
jns
xor
mov
or
cmps
add
outs
xor
or
ret
hlt
or
fstp
comiss
xchg
shl
das
pop
ret
or
mov
mov
jae
sub
or
add
cmp
test
and
repz
ret
sub
mov
mov
or
add
cdq
mov
int3
dec
out
or
or
dec
imul
xadd
add
in
mov
or
ret
or
xor
xchg
sbb
or
ror
sub
push
or
int3
xchg
add
or
pop
jne
das
andps
adc
loope
dec
hlt
or
mov
or
dec
cmp
das
int3
xchg
sbb
or
ds
das
pop
ret
or
mov
mov
xor
or
out
mov
repz
xchg
xor
or
ret
sub
mov
mov
cmp
add
pop
mov
int3
dec
out
or
or
cmp
das
sete
add
push
dec
or
mov
or
hlt
outs
mov
int3
dec
out
or
cmc
das
pop
or
adc
mov
or
inc
aaa
add
hlt
hlt
add
mov
comiss
hlt
lods
mov
dec
das
into
and
xchg
add
or
and
dec
sub
fadd
add
jecxz
pop
repnz
or
sub
or
xor
xchg
sbb
or
xor
dec
sub
jne
or
int3
xchg
add
jbe
das
sldt
sub
or
mov
or
push
cmp
das
int3
xchg
or
dec
jbe
das
pop
ret
or
mov
mov
(bad)
and
add
mov
test
mov
ret
sub
mov
mov
mov
pop
or
cmc
das
add
ret
retf
dec
rol
lock
or
sub
jnp
repz
clc
or
or
sub
das
sbb
ret
retf
dec
shr
mov
or
add
hlt
fdiv
test
add
hlt
hlt
push
xchg
js
out
aaa
popa
xchg
clc
aam
cmp
cmp
rcl
or
bound
or
movs
adc
shr
sub
adc
mov
das
add
sbb
pop
push
cmc
sbb
call
xchg
and
ret
mov
aas
int3
cmc
push
dec
sub
pushf
cmp
je
int3
fistp
loop
hlt
or
dec
test
retf
(bad)
cmp
pop
or
mov
and
adc
pushf
sub
pop
pop
hlt
jbe
das
vmread
add
jmp
cmp
or
adc
push
push
pop
mov
les
arpl
or
add
xor
cmovl
gs
inc
(bad)
xor
or
sbb
out
cwde
add
add
xor
xchg
rcr
fsub
addr16
pop
iret
jnp
lock
add
push
add
cdq
pop
cld
jge
pop
int3
dec
das
xchg
sub
push
cld
int3
lds
and
adc
sbb
(bad)
ret
fs
jge
jg
shl
or
gs
sbb
aas
or
out
retf
dec
sub
or
fcom
or
or
cmp
repz
xchg
xchg
pop
xor
pop
test
sub
dec
cwde
stos
fmul
not
xchg
xlat
inc
and
adc
push
sub
add
(bad)
hlt
or
es
repz
inc
cmp
mov
sbb
jg
xchg
xlat
xchg
clc
stc
adc
iret
clc
mov
popa
xchg
clc
lods
pop
stc
sbb
enter
pop
sbb
(bad)
lea
or
dec
movs
or
sbb
shr
or
or
das
test
add
hlt
hlt
in
sbb
stos
jle
adc
inc
gs
es
sbb
int3
xchg
(bad)
fwait
pop
sbb
push
int
jle
addr16
mov
cmp
in
cdq
pop
dec
int3
dec
xchg
jb
inc
xchg
dec
mov
or
fdiv
push
push
cwde
aas
iret
or
pop
push
dec
push
sbb
adc
or
push
sbb
jmp
call
(bad)
lock
addr16
mov
aam
fcomp
fcomp
pushf
cld
rcr
fcomp
fcomp
sbb
adc
outs
lock
or
pop
mov
aam
in
adc
mov
fst
int
cmc
cmps
out
add
clc
or
fcomp
adc
jae
jecxz
jge
ins
xchg
ja
das
dec
or
or
mov
hlt
ficom
retf
dec
inc
jl
adc
xor
mov
cmp
push
icebp
sub
or
push
fnstenv
sbb
sbb
and
movs
fadd
fxam
jecxz
(bad)
and
scas
(bad)
mov
sbb
fmul
jb
push
mov
sbb
cwde
test
push
in
add
jecxz
adc
and
mov
fstp
inc
adc
mov
stos
fstp
cdq
call
push
fsubr
in
fimul
xchg
pop
fbstp
das
loop
rcl
and
xor
int3
rcl
mov
pop
cmp
or
or
(bad)
clc
lea
sbb
or
retf
xor
cld
gs
in
xchg
xchg
call
xchg
cmp
xchg
pop
adc
push
inc
shr
xchg
sbb
in
xor
sbb
adc
jecxz
cmps
xor
adc
xchg
or
sbb
sbb
popa
fcmovnbe
cli
lea
aas
int3
jb
push
ror
in
mov
enter
jecxz
mov
jmp
hlt
ja
or
fwait
mov
leave
adc
loopne
mov
xchg
adc
fnstsw
jb
int3
or
movs
(bad)
fs
mov
push
jge
or
jbe
jno
popa
xchg
clc
jmp
movs
rcl
es
pop
xchg
popa
sbb
movs
adc
pop
sbb
adc
add
int3
jb
adc
ficomp
adc
xchg
sub
lea
shr
inc
in
or
add
shl
cdq
push
push
jb
mov
or
mov
sub
inc
mov
pop
cmp
push
into
inc
push
xchg
add
xchg
pop
adc
inc
cmp
push
push
fistp
fisub
popa
xchg
clc
push
and
bound
mov
int
inc
jno
xchg
aad
mov
int3
or
mov
lds
das
int3
jb
or
sbb
add
xchg
or
das
jb
sbb
adc
mov
cli
imul
xchg
add
(bad)
shld
jae
or
adc
xlat
jnp
mov
jb
int3
inc
jne
mov
imul
cmp
adc
inc
or
jno
jg
outs
inc
push
xchg
paddusw
setno
sbb
sbb
das
pop
or
mov
sbb
fidiv
ss
in
addr16
lea
jb
mov
setb
jno
jne
aad
xchg
sub
pop
stos
or
and
adc
pop
xchg
fimul
lods
mov
adc
mul
xor
or
pop
mov
or
or
xchg
test
stos
les
imul
hlt
xor
sbb
xchg
push
or
push
cmp
adc
jns
icebp
sbb
or
adc
clc
mov
mov
xchg
or
xchg
xchg
mov
sbb
aad
add
or
or
dec
sub
push
push
cmovae
add
mov
and
cdq
sbb
je
or
mov
add
jnp
cmp
push
sbb
or
adc
push
adc
fisub
int3
nop
push
mov
or
aad
sti
mov
add
sbb
scas
or
pop
cmp
and
adc
sbb
xlat
je
and
adc
push
int3
out
jecxz
lea
in
and
adc
xchg
sbb
out
cwde
add
or
push
xchg
int3
and
sub
adc
or
push
add
in
push
pop
inc
or
pushf
aaa
xchg
in
int3
sub
nop
adc
cmp
xor
inc
mov
sub
xor
cmc
leave
or
retf
add
adc
push
jne
hlt
test
aad
sbb
test
lods
sbb
pop
inc
sbb
inc
rol
lods
sbb
xchg
sbb
xlat
or
lods
fstp
push
test
adc
sbb
cmp
fst
sahf
lods
jns
sbb
sub
popa
hlt
xchg
or
or
or
sbb
add
ret
push
cdq
sub
mov
or
xchg
inc
test
xchg
or
push
sbb
rol
xchg
int3
adc
dec
clc
xchg
mov
arpl
xchg
lea
xchg
int3
adc
or
inc
int3
cwde
rcr
aas
int3
xchg
pop
iret
das
dec
xor
addr16
sub
dec
das
(bad)
(bad)
xor
cmp
lods
or
repnz
(bad)
pop
or
hlt
or
adc
(bad)
lods
aam
idiv
mov
js
sub
and
xchg
or
push
jb
aas
add
jecxz
popf
aaa
ret
or
and
push
sbb
inc
test
iret
aas
faddp
push
in
xor
xchg
sbb
(bad)
push
adc
cmp
repnz
or
inc
in
add
xlat
sbb
je
xchg
sbb
inc
push
shl
xchg
sbb
call
lods
sbb
and
rcl
pop
popf
push
pop
(bad)
lds
jle
add
shr
xchg
es
shl
or
sbb
xor
or
sub
pop
inc
or
mov
popa
cmp
sbb
imul
mov
out
push
lahf
int3
sbb
hlt
adc
gs
adc
mov
imul
mov
inc
out
xchg
out
pop
popa
xchg
clc
icebp
lock
mov
adc
add
bound
xchg
mov
mov
or
stos
(bad)
int3
push
das
popa
imul
(bad)
fst
xor
inc
and
xor
xor
fwait
out
ins
sbb
cmp
jno
lea
sbb
pop
ret
fwait
pushf
and
xor
push
mov
call
inc
mov
dec
add
gs
enter
outs
push
xchg
dec
sbb
add
fwait
jge
retf
and
inc
pop
sar
repz
ins
push
adc
jge
add
xor
jle
jp
lods
xchg
push
iret
add
(bad)
in
dec
sbb
adc
scas
jl
or
mov
lds
push
push
mov
inc
test
pop
mov
shl
dec
call
in
mov
mov
nop
sub
or
dec
das
xchg
cmps
jl
shr
add
js
sbb
xchg
and
sub
enter
hlt
aam
jae
(bad)
loopne
mov
jno
push
stos
jp
and
sub
mov
fisttp
xor
add
and
test
or
add
xor
xchg
pop
push
rol
sbb
inc
xor
add
push
shl
xor
jmp
push
and
cmp
mov
jns
mov
mov
sti
jle
std
pop
int
xchg
cli
daa
mov
mov
loope
cmps
push
or
push
js
mov
adc
fisub
out
push
aam
(bad)
or
imul
clc
or
sbb
push
adc
pop
aas
jmp
shl
xlat
xchg
inc
imul
or
fprem1
das
jecxz
pop
mov
or
in
sbb
jecxz
loope
jecxz
in
dec
loop
movs
pop
cmovs
push
jo
jg
add
pushf
dec
sbb
lock
leave
das
jecxz
adc
or
jmp
or
loope
aam
add
fld
rcl
sar
xchg
(bad)
adc
out
das
xor
mov
sbb
shl
movs
pop
push
sbb
sub
shl
mov
adc
cs
test
sar
in
xchg
dec
jp
das
push
fstp
xor
pop
sbb
fnsave
push
push
aam
fistp
pop
mov
call
add
(bad)
cmps
adc
es
nop
adc
nop
or
in
add
xchg
xor
outs
mov
mov
ja
or
mov
or
test
mov
je
sbb
mov
mov
push
int3
cwde
jns
inc
add
xor
cwde
imul
shl
(bad)
ss
ins
ins
add
das
jne
or
out
jmp
pop
add
lds
xlat
enter
cmp
or
xor
mov
adc
mov
ja
daa
jo
xor
or
pushf
loop
int
or
xchg
xor
dec
int3
mov
mov
in
jo
shr
loop
add
mov
fcom
jo
pop
cmps
daa
imul
mov
ds
outs
ret
aaa
push
push
xchg
je
jb
push
dec
inc
retf
(bad)
div
(bad)
sbb
inc
sub
sub
push
xor
lahf
and
data16
jne
push
aaa
jb
mov
pop
loope
in
loop
outs
pop
test
xor
push
hlt
hlt
jno
add
inc
je
retf
xchg
scas
into
lds
or
adc
in
cdq
cs
call
push
adc
loopne
cmp
and
xor
outs
mov
aad
test
fwait
xchg
das
pop
test
clc
std
mov
jecxz
popf
add
fucomi
(bad)
sub
dec
sbb
test
sahf
add
jb
(bad)
sbb
sbb
sbb
fsub
mov
mov
pop
dec
mov
mov
mov
outs
xlat
dec
ja
sbb
rcl
mov
fs
ror
retf
cld
mov
inc
sub
xchg
push
out
repnz
jns
cmps
scas
jmp
mov
out
ins
out
and
in
hlt
enter
sbb
enter
adc
div
mov
pushf
in
mov
shl
pop
adc
movs
and
push
jge
repnz
lock
pop
push
adc
add
jl
mov
or
iret
jno
or
mov
push
cmp
push
or
leave
mov
and
cwde
test
mov
sub
das
pop
jns
aas
and
imul
or
xchg
in
sub
mov
push
(bad)
fmul
or
fsub
sbb
or
mov
cmp
pop
mov
pop
stos
push
leave
pop
xchg
lods
xchg
pop
add
adc
or
hlt
push
or
das
pop
fisubr
add
or
mul
dec
das
ret
out
mov
xchg
fst
iret
xlat
in
adc
pop
sbb
push
aad
sub
xchg
ror
or
test
in
ss
das
cdq
mov
or
push
fstp
or
xor
sbb
inc
je
add
jo
test
adc
rol
adc
sbb
push
dec
mov
dec
icebp
or
inc
sbb
or
aad
into
xchg
data16
aad
or
or
push
ins
mov
aam
cdq
das
icebp
or
mov
xchg
mov
dec
icebp
or
xchg
mov
and
or
ror
sbb
mov
xchg
pop
xchg
movs
dec
icebp
or
retf
imul
imul
jle
push
sbb
cdq
push
rcl
mov
rep
repz
mov
pop
cdq
xchg
push
icebp
or
fdiv
or
fmul
inc
or
xlat
cwde
mov
sbb
adc
aad
or
mov
in
cmp
fmul
xchg
dec
icebp
or
lock
arpl
icebp
or
fmul
ror
or
mov
or
push
push
test
push
sbb
sbb
push
inc
cwde
aas
jbe
push
or
sub
(bad)
(bad)
das
dec
or
mov
icebp
int3
(bad)
cmp
or
xchg
int
dec
mov
sub
or
cdq
test
mov
sbb
adc
adc
mov
mov
xor
or
hlt
jle
(bad)
icebp
xchg
imul
cmp
cmp
or
push
xchg
jae
or
sub
aad
xchg
mov
jl
das
pop
ins
mov
je
xchg
pop
pop
cdq
sahf
shl
xchg
mov
icebp
cmp
mov
loopne
cdq
retf
xor
mov
cwde
mov
mov
dec
pop
push
lea
aaa
mov
fdivr
aas
repnz
lahf
inc
xor
xor
push
mov
int
icebp
or
add
sbb
sub
repz
mov
xor
dec
stos
pop
lahf
jecxz
pop
fld
repnz
stos
fist
or
push
repz
repz
aas
xchg
lods
lods
das
pop
lahf
dec
sub
cmc
or
or
dec
je
adc
imul
or
pop
jg
pop
jno
shl
mov
xchg
push
dec
inc
jb
or
xchg
ja
xchg
call
das
pop
or
push
push
ds
mov
push
or
stc
dec
lahf
imul
mov
test
retf
jbe
repz
dec
cmp
fsub
or
mov
nop
dec
or
sbb
mov
mov
push
or
xor
xchg
xchg
inc
js
das
xchg
inc
inc
mov
test
sub
xchg
mov
mov
hlt
hlt
push
(bad)
(bad)
pop
retf
jb
pop
aad
add
mov
sbb
stc
jle
rcl
mov
js
das
sbb
das
dec
xchg
adc
xor
sbb
dec
jp
add
and
icebp
or
push
jne
js
add
mov
mov
mov
mov
cld
adc
dec
js
das
xchg
dec
js
cmp
pushf
mov
sbb
stc
xchg
adc
add
pop
leave
dec
icebp
add
dec
cmp
jp
push
xor
fst
in
push
jns
or
int
mov
ss
fnsave
(bad)
push
iret
xor
mov
daa
jmp
js
push
cmp
js
das
popf
or
cdq
mov
adc
call
mov
test
in
mov
jle
jmp
inc
pop
jle
mov
mov
das
and
lock
adc
cdq
mov
adc
sbb
mov
int3
mul
or
pop
add
xor
ja
outs
add
xchg
xor
or
pop
(bad)
xor
jnp
ss
adc
jp
add
pop
lock
mov
inc
arpl
mov
ins
shl
add
mov
or
test
adc
das
retf
les
iret
or
(bad)
jge
xchg
push
and
test
sbb
aaa
test
lds
xor
sbb
cwde
unpckhps
sbb
inc
cs
ret
lds
dec
cld
dec
hlt
call
in
push
adc
mov
sbb
xchg
mov
add
mov
jae
or
or
cld
push
adc
xchg
adc
pop
jae
inc
call
sbb
push
jae
rcr
jbe
hlt
ins
in
mov
jb
rcr
dec
xchg
pop
imul
cmc
pop
inc
test
adc
pop
pop
xchg
mov
cli
lock
mov
not
push
push
into
in
mov
fwait
loopne
mov
aaa
mov
inc
adc
jae
push
jmp
jno
push
xchg
ja
or
jmp
arpl
sub
and
or
xchg
rcr
pop
fisttp
(bad)
pop
xor
push
sti
or
test
cdq
clc
retf
or
cwde
out
clc
test
sub
iret
mov
xor
(bad)
xchg
std
gs
iret
mov
mov
jmp
or
jmp
xor
or
fisubr
fimul
xchg
push
fiadd
repnz
xor
sbb
xchg
xchg
jno
and
xchg
retf
dec
mov
iret
sbb
cld
push
(bad)
dec
xchg
out
(bad)
push
arpl
nop
fcom
jg
std
test
dec
out
jo
inc
cli
stc
and
sbb
inc
fwait
idiv
xor
aaa
mov
xchg
lods
ret
jle
adc
nop
mov
stos
out
jmp
call
xchg
int3
mov
sbb
cmp
std
das
leave
test
xor
or
mul
sbb
popf
xchg
imul
leave
jp
js
mov
aas
inc
or
or
into
xor
out
out
(bad)
mov
(bad)
(bad)
lock
shr
stos
enter
out
xor
int3
ret
ss
sahf
or
loope
jb
mov
imul
adc
dec
popf
outs
imul
xchg
jg
cwde
sti
xor
push
add
jecxz
xchg
in
cmps
sbb
dec
jns
popa
in
out
jle
hlt
les
adc
jg
mov
icebp
pop
xchg
lods
xor
push
bound
in
rcl
stos
jle
outs
ficom
popf
outs
(bad)
xchg
inc
popf
mov
jbe
cmp
or
ss
pop
dec
test
push
leave
(bad)
(bad)
into
cli
clc
or
mov
and
adc
dec
int3
dec
shl
imul
fild
test
adc
int
push
div
pop
(bad)
add
das
mov
jmp
jecxz
ins
inc
mov
adc
mov
gs
sbb
out
xor
mov
jbe
in
push
cld
ret
lds
cmp
adc
xchg
add
iret
pop
xchg
lods
or
cmp
push
jmp
pop
adc
aas
xchg
dec
sahf
iret
out
mov
mov
or
sub
fdivr
adc
(bad)
pmaddwd
push
sbb
(bad)
ds
mov
and
mov
call
hlt
enter
dec
cmp
lods
into
aam
outs
imul
es
iret
jnp
mov
icebp
mov
imul
fsub
pop
or
jo
push
push
fist
dec
jo
cld
ins
mov
jmp
dec
data16
mov
rol
fdivr
mov
cmp
test
mov
jmp
cdq
add
lahf
add
mov
xchg
xor
stc
sub
push
sbb
retf
adc
inc
mov
jbe
repnz
in
or
add
jns
repnz
add
stos
sahf
or
adc
jo
imul
ins
dec
jo
or
inc
fdiv
(bad)
call
outs
sti
fcom
xlat
cmp
or
call
adc
xlat
je
or
or
xchg
in
adc
cmp
repz
sbb
fimul
fimul
push
loopne
sti
clc
and
dec
int3
sbb
or
jge
pop
out
rol
or
popf
das
xor
fsubr
fstp
ins
adc
imul
outs
movmskps
inc
call
sub
jb
sbb
sbb
xor
push
retf
out
(bad)
out
inc
sbb
xchg
jno
fdiv
mov
xchg
sbb
pop
out
jmp
adc
int3
adc
cmc
sub
dec
dec
gs
and
leave
jo
xchg
sbb
call
push
sub
or
aad
xchg
test
(bad)
sub
outs
repz
sahf
lods
in
mov
or
and
rcr
inc
fdivp
jo
stc
jmp
js
out
mov
(bad)
sbb
sbb
je
clc
inc
call
addr16
and
repz
clc
mov
lahf
pop
dec
and
ss
test
xor
ins
mov
hlt
les
pop
mov
ret
add
or
mov
repz
or
or
clc
imul
adc
and
jae
sbb
sbb
lock
or
add
nop
cmp
cmp
rol
ficom
shl
cmp
sbb
dec
fidiv
shr
rol
or
push
sbb
or
inc
jne
add
outs
out
cmc
jnp
sbb
inc
xchg
call
mov
adc
mov
xor
push
test
push
xchg
adc
or
push
cmps
dec
loopne
test
(bad)
ficom
test
fiadd
loopne
fnstenv
dec
mov
xor
inc
push
retf
and
jmp
shl
push
inc
std
inc
push
and
sti
loope
int3
test
aaa
loop
fadd
cmp
out
(bad)
arpl
lea
mov
push
(bad)
inc
sbb
xor
pop
cmps
shl
shl
or
mov
or
leave
das
sbb
les
stos
sub
push
adc
adc
add
call
imul
add
sub
iret
out
call
retf
or
jbe
je
jl
loopne
push
mov
aas
jg
add
jge
ret
int3
dec
inc
and
push
cmps
cld
xchg
pusha
adc
in
repz
repnz
mov
xchg
push
enter
dec
sbb
mov
jae
das
popa
out
xchg
dec
or
cmp
dec
jmp
or
cmc
stc
add
(bad)
test
jg
cld
in
sbb
sbb
add
movs
pop
xlat
mov
or
mov
unpckhps
ret
cmp
out
(bad)
loopne
jl
mov
pop
addr16
test
mov
sti
inc
xor
ud2
gs
adc
cmp
pop
or
sbb
lock
mov
dec
adc
mov
xchg
or
fs
out
add
out
sti
out
sahf
stc
add
dec
mov
mov
ins
dec
pop
in
push
xor
jecxz
popf
sub
jne
in
adc
cwde
jmp
xor
jmp
lock
test
out
adc
fisttp
push
xchg
lock
pop
test
sub
in
out
inc
or
adc
mov
sub
cwde
push
inc
mov
pop
out
clc
cmp
enter
mov
(bad)
dec
adc
sub
mov
mov
in
popa
out
mov
xchg
adc
sub
sbb
repnz
adc
stos
xchg
fild
outs
xchg
xor
ins
dec
das
ins
push
dec
sub
retf
scas
adc
push
je
mov
hlt
push
and
arpl
adc
loop
or
hlt
mov
or
nop
pop
icebp
sub
sti
data16
cdq
lods
adc
push
(bad)
int3
fwait
jecxz
mov
stos
pushf
cwde
add
mov
pop
dec
das
fistp
sbb
push
les
xchg
jmp
push
and
call
pop
xor
nop
fwait
push
ja
sbb
in
and
fld
mov
xchg
lods
in
dec
mov
iret
push
xchg
dec
movs
dec
push
jge
pop
pop
cmp
mov
fadd
pop
add
push
jecxz
clc
mov
push
add
call
lahf
mov
push
xchg
ficom
cdq
add
das
popf
jge
test
test
mov
ret
adc
jmp
(bad)
fsubr
push
test
inc
ins
ins
jmp
mov
adc
sub
out
das
out
and
adc
int
nop
jno
test
(bad)
sahf
mov
ins
in
cmp
pop
cmc
add
mov
adc
xor
add
or
and
cmc
cmp
fxtract
popa
mov
inc
int
out
js
xchg
pop
xchg
imul
call
out
push
sbb
adc
fcomp
bswap
fbstp
in
add
popf
fimul
pop
push
xchg
cmc
pop
adc
(bad)
or
icebp
mov
xchg
dec
jo
hlt
mov
pop
loop
mov
mov
loope
push
mov
jmp
out
xchg
in
mov
jl
fimul
jmp
or
or
neg
jle
cld
jno
hlt
mov
add
pop
out
cmp
dec
add
or
repnz
mov
inc
fild
xchg
dec
sub
pop
loope
xchg
xchg
cld
test
mov
jno
cmc
push
sbb
hlt
xlat
jmp
add
push
lock
cmp
gs
push
out
repz
(bad)
jg
sbb
into
xor
pop
clc
int3
ins
es
and
xchg
popf
das
mov
xor
fcom
out
std
lods
out
cmp
jns
add
popfw
loop
sbb
mov
xchg
and
fwait
repnz
aam
add
scas
cmps
scas
and
je
in
frstor
(bad)
xor
outs
fadd
clc
(bad)
fldcw
shr
fdivr
(bad)
push
push
inc
sub
ror
int3
(bad)
pop
leave
fs
call
sbb
scas
std
ins
cmp
inc
call
out
push
daa
add
ss
and
cdq
pop
(bad)
and
push
adc
mov
out
push
xchg
adc
lea
and
jecxz
pusha
inc
movs
lea
or
in
sbb
mov
mov
xchg
pusha
nop
xchg
(bad)
addr16
test
mov
and
push
ss
stos
ds
sub
ftst
scas
test
fild
imul
or
out
nop
test
pop
adc
or
fadd
dec
xchg
pushf
ret
(bad)
mov
push
or
inc
xor
mov
or
cmps
sbb
enter
or
xchg
jg
call
jbe
test
xchg
jge
push
rcr
call
fcomp
jne
jnp
les
adc
in
cmp
ins
in
mov
sub
sbb
push
and
sbb
pop
push
aas
pop
ret
aaa
test
out
popf
jns
test
not
cmps
shr
(bad)
hlt
jp
dec
das
dec
ja
rcl
movs
test
lods
xor
lahf
aas
add
dec
pop
stos
cwde
out
xchg
adc
outs
(bad)
imul
lods
pop
pop
xchg
sbb
out
ret
ss
scas
int3
jbe
out
scas
int3
lods
into
sub
inc
inc
das
por
jp
adc
std
mov
in
fsub
adc
pop
ret
rcl
ins
xchg
jns
test
mov
leave
(bad)
jg
data16
fcmovnb
xchg
push
repnz
rcl
push
pop
dec
ins
in
add
sbb
rcr
nop
dec
or
mov
jg
shr
cwde
dec
les
xor
pushf
adc
mov
retf
retf
jl
repz
pusha
or
or
inc
or
in
aaa
xchg
add
push
adc
or
or
rcr
mov
push
mov
adc
xchg
cmps
fisubr
es
sti
xchg
cmp
repz
mov
fld
addr16
mov
call
fwait
xchg
xor
mov
cmp
mov
push
jnp
repz
or
cmp
cmp
inc
aam
pop
shl
xchg
pop
xor
xchg
pop
xor
mov
ja
movs
pop
xor
or
jmp
xor
and
inc
push
jecxz
clc
out
jno
inc
data16
hlt
stos
jmp
adc
cmps
scas
add
mov
or
sbb
pushf
repnz
(bad)
mov
adc
adc
xchg
xlat
mov
pop
lea
push
cmp
mov
(bad)
in
or
cmp
mov
imul
mov
lea
inc
mov
shl
(bad)
jmp
push
lods
retf
call
loope
add
out
jmp
fisub
add
hlt
loope
jb
adc
push
pop
push
fist
je
scas
add
push
sbb
mov
outs
(bad)
push
ss
mov
dec
hlt
loopne
jmp
je
repnz
jmp
ins
adc
pushf
or
jne
scas
push
pop
das
xchg
mov
leave
pop
in
loope
cwde
dec
push
mov
add
shl
icebp
cmp
fisttp
pop
or
stos
xchg
mov
int3
add
int
mov
in
inc
pop
xor
test
add
loopne
xor
jecxz
shl
shl
pop
mov
out
jo
push
stos
dec
hlt
out
outs
push
lock
pop
inc
xor
aad
movs
xchg
loop
lahf
mov
pop
push
rcr
mov
dec
dec
loop
fst
xor
fucomi
addr16
push
movs
and
mov
hlt
fst
sub
and
push
add
xchg
rol
pop
jl
push
pop
add
add
out
movs
xor
jne
clc
bound
push
sti
(bad)
pop
pop
ja
js
inc
retf
imul
xor
ins
sbb
test
(bad)
out
xchg
(bad)
daa
cmps
add
ds
xchg
mov
fmul
sbb
mov
out
ja
adc
icebp
mov
lea
imul
push
stos
push
mov
add
fadd
adc
jo
out
sbb
retf
mov
or
xchg
and
cs
jge
xlat
push
sbb
je
cmc
out
js
cli
cs
(bad)
test
push
outs
outs
jne
loopne
ret
sbb
clc
sbb
stos
xchg
in
mov
jg
cmps
inc
call
je
mov
xor
sub
jmp
fist
push
pushf
fadd
in
repz
out
cmps
mov
pop
cli
and
jo
xchg
je
jns
loop
mov
(bad)
test
stc
(bad)
sbb
pop
movs
aad
cmc
mov
jmp
xchg
jnp
clc
xor
add
repz
test
in
inc
jmp
inc
jno
(bad)
cmp
repnz
stc
jecxz
call
ret
xlat
pop
sub
daa
daa
push
xchg
loope
arpl
(bad)
pop
cmp
out
aaa
sub
shr
hlt
jle
push
push
inc
enter
rcl
fwait
pop
jmp
pop
mov
ret
sub
jl
jmp
adc
movs
mov
xchg
imul
jne
push
lods
clc
scas
bound
dec
add
pop
or
aad
add
jg
and
jp
fwait
push
loop
dec
ja
or
sub
mov
hlt
push
or
fisttp
aas
push
popf
pop
inc
imul
mov
cmp
icebp
or
or
fidiv
cmc
shl
ja
std
ror
scas
cs
aam
inc
loop
jg
(bad)
fimul
or
fwait
repnz
aaa
sbb
inc
std
push
jb
jle
loop
xor
mov
or
out
push
fst
nop
add
mov
adc
sub
or
dec
imul
bnd
xor
add
mov
push
js
gs
jecxz
mov
arpl
not
mov
repz
mov
mov
movs
in
movs
outs
jge
or
inc
(bad)
out
in
and
mov
js
push
in
and
sbb
inc
leave
and
jno
hlt
cmc
hlt
daa
ret
sahf
pusha
scas
xor
cli
cmc
outs
sbb
in
jbe
(bad)
lea
aam
loope
cdq
into
loop
mov
pop
jbe
jg
adc
xor
sub
in
das
mov
pop
ins
adc
pop
gs
inc
xchg
lods
lock
mov
push
mov
cld
lods
mov
adc
pop
sub
xchg
sbb
or
pop
popf
inc
cmp
mov
(bad)
lods
popf
jo
fcomp
mov
loopne
mov
push
adc
or
cdq
adc
retf
dec
or
call
adc
adc
into
adc
test
dec
ret
ja
jge
in
test
jge
outs
ins
ins
xor
(bad)
das
xchg
cdq
xor
xchg
ror
sub
outs
sub
hlt
stos
or
(bad)
dec
mov
(bad)
cmc
mov
sub
adc
cmp
add
adc
push
xchg
mov
or
or
ds
xlat
push
not
adc
cmp
imul
ja
xor
xor
cmp
cs
aam
sub
aas
xchg
mov
or
jne
retf
jne
(bad)
not
mov
mov
sti
cdq
xchg
mov
repz
push
pop
in
call
iret
stos
push
add
push
test
xchg
iret
push
mov
xchg
aad
stos
push
fprem
scas
iret
out
popa
fbld
mov
cmps
iret
mov
lea
int3
jno
mov
push
pop
xor
loope
jecxz
rcr
push
iret
popf
ins
mov
sub
mov
sbb
addr16
inc
xchg
lods
jmp
or
lods
mov
iret
stos
jne
xchg
jo
add
iret
pop
push
js
jns
xchg
(bad)
fsub
xor
add
add
lods
xor
sar
jge
sub
sub
or
scas
or
dec
mov
or
mov
sbb
or
xchg
fwait
inc
mov
punpckldq
stc
(bad)
mov
repnz
es
fs
hlt
hlt
or
xlat
push
inc
dec
bound
and
jmp
jmp
repnz
arpl
fwait
pop
adc
jno
dec
mov
xor
add
pop
mov
imul
movs
arpl
out
sbb
or
cdq
xor
outs
jmp
inc
(bad)
neg
ja
dec
leave
(bad)
ret
xchg
fistp
push
test
or
mov
add
imul
pusha
adc
xlat
or
adc
pop
mov
cmp
sbb
(bad)
idiv
ss
mov
jne
das
push
cwde
xor
jle
shl
jno
aam
fwait
out
leave
and
hlt
sbb
fdivr
xchg
std
jne
xchg
cdq
jae
not
out
mov
sahf
add
out
sbb
mov
xor
nop
sbb
mov
out
sbb
mov
jl
or
xor
iret
jmp
fxch
sbb
jp
hlt
push
fnsave
mov
adc
iret
repz
loop
or
or
mov
(bad)
neg
(bad)
repz
ins
in
sbb
mov
in
(bad)
sub
or
mov
imul
dec
mov
test
mov
pushf
add
mov
jecxz
xor
ret
pop
scas
iret
jmp
dec
das
dec
pop
call
mov
popa
adc
in
xchg
xor
lea
add
je
daa
daa
fcmovb
aam
icebp
or
push
xor
std
xchg
das
inc
out
xlat
pop
dec
es
daa
arpl
sbb
sub
arpl
sbb
pushf
jecxz
rcr
sbb
iret
jg
jo
adc
je
pop
iret
add
fcom
pusha
stos
hlt
hlt
push
mov
pop
sub
fcomp
lods
fs
jns
jns
das
pop
loop
push
(bad)
retf
mov
not
repz
inc
pop
xchg
push
mov
not
or
retf
rcr
les
inc
or
add
xor
mov
mov
jne
aam
pop
pushf
cld
enter
fcomp
pushf
inc
cdq
jmp
push
add
ds
or
sbb
or
mov
jle
adc
stos
pop
xchg
pusha
popa
push
xlat
into
cwde
adc
jl
int
mov
or
pop
push
inc
add
pop
pop
pop
cmp
push
push
adc
lea
repz
unpckhps
(bad)
and
mov
xchg
cld
rcl
mov
out
loope
in
mov
mov
and
repz
fcomp
fcom
inc
add
lock
or
fld
or
adc
mov
adc
and
hlt
sbb
fsub
mov
pushf
popf
or
push
popf
sub
daa
fidivr
jge
inc
mov
adc
mov
stos
nop
pop
or
adc
icebp
(bad)
loopne
rcl
adc
push
push
pop
shl
(bad)
fimul
test
sbb
push
sbb
fsubr
jle
cdq
xchg
cdq
xor
arpl
add
sbb
xchg
(bad)
je
dec
fisttp
(bad)
adc
xchg
cwde
add
cwde
out
pop
push
push
adc
push
add
js
pop
jle
je
mov
dec
adc
or
jns
les
jne
adc
or
jp
test
adc
(bad)
(bad)
pusha
repz
mov
xchg
lahf
xor
sbb
add
ss
pop
adc
sub
popa
cmp
aaa
pop
pop
cmp
xchg
pop
in
xabort
push
xor
mov
sbb
xchg
push
jno
cmp
xlat
mov
add
xchg
dec
cmc
test
dec
das
jp
sub
or
adc
(bad)
retf
and
adc
mov
or
stos
test
mov
jae
sbb
pop
or
leave
out
cmps
cmp
dec
xor
leave
comiss
pop
sbb
add
cwde
jge
or
mov
retf
popa
fwait
sbb
add
icebp
repz
out
into
pop
xchg
adc
jne
xchg
dec
sbb
sbb
jmp
push
ins
add
sbb
(bad)
mov
int
lahf
ret
ins
fstp
push
stos
cs
or
add
jb
mov
cmc
loop
or
aad
rol
adc
lahf
xchg
ret
or
or
jbe
mov
adc
stc
fadd
iret
push
sbb
add
repz
jo
adc
adc
out
cmps
xchg
sbb
mov
push
and
pop
inc
or
sub
shl
rol
mov
in
daa
and
daa
je
mov
adc
arpl
mov
xor
jl
or
cmp
jg
mov
mov
xchg
int3
ins
add
mov
fldenv
stc
popf
ret
repz
dec
sbb
add
adc
shl
leave
scas
out
or
pop
xor
or
sahf
rcr
xchg
push
xchg
xchg
mov
js
lahf
fwait
push
cmps
xchg
mov
es
mov
push
cmp
sub
clc
pop
or
fincstp
jmp
sbb
js
repz
add
mov
mov
lods
inc
(bad)
repz
test
and
cmp
xor
or
out
retf
jle
das
mov
mov
inc
mov
in
cmp
or
add
sbb
jge
or
cmp
jbe
ja
xrelease
xchg
pop
test
pop
push
loopne
outs
mov
outs
mov
mov
adc
rcl
das
mov
(bad)
and
test
jns
mov
adc
or
jg
cdq
iret
icebp
retf
sub
jnp
or
cmp
xor
adc
mov
dec
bound
call
addr16
sbb
add
push
push
pop
dec
inc
cmc
push
ss
jae
add
xchg
add
outs
xlat
mov
inc
push
scas
hlt
stc
or
bound
in
enter
jbe
or
jge
sub
rol
adc
push
adc
adc
or
mov
sbb
add
and
sub
sub
mov
add
sahf
sbb
jge
pushf
stos
add
cmp
mov
mov
adc
ins
pop
sbb
shl
in
push
pop
mov
or
fsubr
das
mov
out
inc
dec
lods
clc
pusha
ret
sbb
mov
hlt
rcl
xor
dec
sub
shl
and
dec
stos
call
sub
fistp
mov
or
or
add
mov
ja
adc
loop
mov
dec
retf
adc
clc
test
pop
adc
add
push
nop
sbb
les
repnz
sbb
cmc
cmp
mov
inc
push
inc
push
mov
jnp
outs
sbb
dec
das
call
push
cmps
rcr
sbb
test
sbb
int3
jo
sbb
push
adc
and
mov
call
adc
(bad)
mov
and
fst
adc
or
mov
cdq
lock
dec
into
sbb
jmp
mov
xor
push
lods
rcl
aam
add
pusha
xchg
icebp
(bad)
mov
xor
xchg
adc
sub
push
sub
push
pushf
cld
enter
pop
pushf
inc
cdq
icebp
pop
rcl
imul
jmp
dec
inc
xchg
lock
push
adc
jge
and
xor
jns
int3
loopne
cld
pop
pop
and
jmp
adc
and
add
jno
fnstenv
jge
and
dec
mov
xor
mov
push
adc
dec
dec
in
xor
sahf
mov
daa
push
xchg
cld
clc
push
xchg
cld
enter
cdq
js
inc
test
das
int3
dec
stos
cld
sbb
ret
and
push
fs
jg
int3
pushw
adc
test
xchg
cdq
xor
repz
jbe
int3
retf
fadd
xchg
dec
xor
xor
lock
adc
in
pop
bnd
adc
mov
lea
dec
ins
inc
adc
daa
push
pop
xor
in
test
push
adc
mov
cmp
test
pop
xchg
jnp
call
jmp
cmc
xchg
hlt
or
xchg
test
daa
push
sub
popa
scas
add
shl
or
cmp
movs
(bad)
push
(bad)
jl
xchg
jb
dec
rol
outs
xchg
iret
fist
test
stos
enter
mov
xor
xor
adc
retf
dec
rcl
or
or
mov
dec
outs
imul
cld
fadd
fcomp
fsub
je
push
adc
arpl
sub
fcomp
sbb
or
push
add
clc
jg
adc
mov
xor
or
dec
sub
ret
mov
or
add
sbb
je
jbe
sbb
fsubr
sub
jo
test
neg
ins
adc
sar
dec
dec
das
setbe
adc
fiadd
dec
mov
movs
adc
test
adc
fwait
imul
xchg
dec
fs
adc
test
ret
inc
mov
dec
daa
inc
pop
sbb
jnp
ja
outs
sbb
imul
dec
sbb
out
mov
cmp
div
daa
neg
fsubr
fcomp
in
(bad)
popa
xchg
xchg
retf
sbb
sar
inc
stos
cwde
jmp
mov
ds
imul
pop
pop
add
jb
dec
je
mov
hlt
jae
xchg
movs
jb
aad
test
xchg
adc
out
or
jb
std
pop
je
retf
pop
out
add
jne
dec
jne
test
scas
or
mov
pusha
cmp
test
test
dec
int3
xchg
std
cmp
pop
sahf
mov
add
and
mov
ss
jno
daa
xor
jge
outs
nop
or
lods
mov
lock
ss
push
and
sub
outs
pop
and
sbb
lods
xlat
pop
sbb
aas
retf
call
xchg
pop
xchg
cmp
cmc
pop
mov
les
sub
sub
inc
fisub
jb
pusha
jmp
add
add
xor
jne
jns
add
aas
jmp
jl
retf
mov
adc
lods
or
shl
xchg
aad
pushf
aam
sbb
cdq
push
ror
adc
xor
mov
popf
ins
pop
xlat
xor
mov
push
xor
mov
stc
pop
mov
mov
test
aaa
hlt
ss
fcmovne
repz
das
rol
add
cmp
mov
mov
ins
addr16
jle
jb
aaa
hlt
cmp
sbb
sbb
sub
pusha
loopne
xor
push
adc
xchg
pop
ins
xchg
jp
add
cmp
add
clc
sbb
pop
popf
xor
fcomp
fsubr
rol
(bad)
pop
inc
xchg
push
mov
adc
fadd
ja
pushf
loopne
add
in
mov
aam
jns
dec
mov
jl
ret
repz
cmc
fwait
ja
cmp
mov
jne
xor
lahf
adc
je
and
fdivr
popa
fs
(bad)
mov
jns
cmc
sub
mov
adc
adc
cmp
cmp
aam
push
adc
sbb
mov
and
pop
or
aas
add
clc
or
push
mov
ss
push
cmp
sub
sub
or
fimul
sbb
mov
dec
fmulp
hlt
repnz
xchg
or
or
cmp
add
mov
retf
pusha
fist
repnz
jl
movs
dec
or
(bad)
jo
cmp
lods
pop
pusha
push
inc
sbb
xor
xor
push
mov
aaa
push
sbb
sbb
adc
or
clc
jl
push
adc
sbb
mov
add
(bad)
jnp
inc
test
retf
dec
test
push
fidiv
xor
cmp
mov
ror
jl
stos
dec
pop
ins
aam
je
xor
test
add
pop
repz
cmps
(bad)
cmp
hlt
adc
icebp
retf
int
test
sbb
sub
and
mov
int
mov
(bad)
lea
push
(bad)
mov
inc
dec
push
fs
jp
je
into
adc
jb
mov
cs
pushf
cld
aam
fcomp
fcomp
pushf
cld
rcr
fsub
sbb
sahf
clc
adc
push
repz
xchg
popa
cmc
adc
xchg
push
cld
retf
xor
pop
lea
daa
mov
js
pop
(bad)
loopne
xchg
add
fnstsw
dec
or
mov
mov
test
xchg
in
mov
mov
cmp
or
ins
mov
std
cld
mov
sbb
xchg
mov
idiv
or
fs
and
mov
addr16
fstp
push
xchg
sub
and
pop
cmp
sti
ss
sbb
sbb
ins
nop
jl
xchg
mov
xchg
cmp
test
call
fsubr
(bad)
cmc
jns
test
sbb
mov
dec
test
ret
mov
ds
ins
or
hlt
xor
push
dec
retf
out
mov
cmp
cli
test
fwait
and
sbb
int
xchg
jge
les
or
das
sbb
imul
movs
dec
xor
push
dec
pop
dec
mov
bound
sbb
push
dec
sub
or
test
or
das
push
mov
sub
repnz
jbe
jmp
pop
cli
mov
jmp
pop
jecxz
jl
push
sub
int3
add
inc
(bad)
jnp
(bad)
cmc
cmps
cmc
aad
test
xchg
dec
jmp
jns
sbb
jmp
sbb
fdivr
xchg
jmp
lea
or
xchg
call
lahf
or
xchg
pop
out
xchg
call
pop
dec
jl
push
jno
xor
icebp
sahf
ds
jmp
mov
xchg
and
(bad)
mov
bound
loopne
fld
cli
push
(bad)
idiv
js
dec
aad
fmul
push
dec
(bad)
and
pusha
outs
or
test
rcl
jbe
fcomp
pop
and
mov
jge
clc
sbb
jnp
add
dec
ins
ss
adc
push
test
fnstenv
not
dec
mov
inc
loope
or
aaa
dec
mov
jb
jb
mov
(bad)
or
test
bound
inc
xor
mov
mov
hlt
(bad)
loopne
xchg
pusha
and
and
push
or
jae
loopne
call
outs
cs
in
push
aad
add
or
shr
xchg
push
dec
mov
popa
mov
push
push
mov
sbb
jl
sub
ret
stc
test
push
or
jecxz
sbb
push
add
add
leave
or
or
in
sub
daa
pop
iret
push
sbb
(bad)
jg
cmp
iret
ja
mov
rol
mov
xor
jmp
mov
in
fwait
out
add
fstp
fcmovu
or
or
push
arpl
nop
add
mov
ss
xor
call
push
push
mov
dec
mov
mov
inc
push
ret
xchg
pop
pop
inc
das
aas
dec
add
dec
fidivr
add
jg
(bad)
pop
movs
sbb
arpl
inc
stc
pop
xchg
cmps
lea
push
mov
add
imul
mov
add
data16
or
test
mov
les
dec
jl
loop
cmps
imul
xor
cwde
and
xor
or
or
sbb
lds
ret
(bad)
out
add
in
shr
or
xchg
push
clc
stos
mov
loop
or
dec
adc
neg
shl
xchg
(bad)
pop
sbb
loopne
dec
xrelease
clc
or
mov
icebp
sbb
repz
adc
or
adc
nop
cli
and
xor
xchg
push
stos
mov
mov
mov
stos
push
fld
add
jl
inc
sub
or
in
pusha
xor
lods
cmps
imul
or
or
and
sbb
(bad)
clc
adc
div
jp
pushf
add
aaa
fisub
xchg
xchg
int
jne
je
repnz
fdivr
jnp
div
popa
test
imul
xor
inc
xchg
sbb
or
xor
and
scas
mov
xchg
ret
jo
(bad)
test
sub
mov
xchg
sbb
mov
adc
push
and
cmp
outs
xor
and
dec
cli
loop
xchg
(bad)
dec
jo
jmp
xchg
in
cmc
adc
add
mov
test
xor
mov
fdivr
add
leave
and
test
mov
mov
xchg
inc
push
xchg
or
in
add
cmp
xor
sub
dec
into
xchg
push
mov
loope
jmp
adc
inc
clc
xor
les
xchg
xchg
hlt
popf
(bad)
test
pop
mov
jo
jmp
mov
out
mov
mov
push
inc
cmps
into
sub
mov
xchg
mov
mov
or
or
add
mov
pop
dec
adc
or
pop
jbe
add
nop
dec
and
aas
xchg
push
mov
cmp
sub
push
jge
test
inc
mov
xor
sahf
xor
js
pop
cdq
test
xor
push
leave
hlt
mov
xlat
xchg
call
mov
mov
mov
mov
mov
push
test
rcr
test
adc
mov
or
scas
aas
push
xor
mov
call
jae
or
mov
je
fimul
les
and
or
jmp
dec
test
adc
out
(bad)
ror
pop
sbb
or
pop
mov
xchg
inc
sbb
pop
movs
cmc
hlt
sub
xor
or
hlt
or
adc
push
and
int
aas
push
stc
sub
mov
or
or
sub
mov
iret
call
adc
xor
sbb
adc
and
xor
xor
xchg
mov
xor
and
adc
adc
adc
adc
ret
fnstsw
jge
xlat
iret
ja
daa
add
fcomp
lods
iret
popf
adc
rcl
popf
or
retf
dec
mov
in
push
clc
or
clc
sbb
movs
adc
adc
or
xchg
mov
xchg
sub
xchg
sbb
add
push
lahf
sbb
sub
fcom
add
mov
pop
sub
iret
cdq
cwde
test
or
or
xchg
loop
sub
mov
push
not
adc
hlt
pop
fnsetpm(287
xchg
ss
and
(bad)
in
cwde
out
pop
mov
or
pop
push
push
stos
test
mov
mov
dec
das
das
cdq
cwde
xor
movs
or
add
mov
int3
dec
test
pop
dec
outs
test
push
(bad)
push
add
or
mov
dec
dec
xchg
sub
leave
and
xor
mov
cmps
cmp
or
or
mov
push
mov
mov
xchg
push
xor
push
cmc
fisttp
div
mov
adc
(bad)
js
mov
mov
jmp
comiss
adc
or
or
xchg
fs
xor
inc
dec
stos
loopne
rcl
xchg
dec
mov
push
not
xor
xor
push
xor
pop
sub
sbb
es
cmp
cs
or
mov
add
neg
sbb
adc
xchg
push
cdq
mov
(bad)
push
xchg
shl
jge
rol
aam
sbb
adc
or
or
push
adc
add
or
stc
cdq
ror
dec
sti
ds
fcom
or
or
fwait
and
int3
sub
or
jecxz
push
(bad)
mov
lea
sbb
xchg
push
xor
and
sbb
jecxz
mov
mov
dec
or
jbe
ja
or
test
or
or
or
or
xchg
mov
xor
push
call
xor
into
adc
je
adc
sub
xchg
iret
xchg
sub
lock
sub
int3
jg
adc
inc
pop
push
fdivr
adc
sti
test
sub
adc
test
in
dec
or
int3
leave
and
mov
cwde
push
xchg
clc
(bad)
out
popf
push
fcom
mov
(bad)
push
inc
dec
mov
xchg
push
aas
shr
xchg
adc
hlt
shl
sbb
jg
adc
adc
not
sbb
add
mov
(bad)
repz
push
jle
push
aas
in
aam
adc
or
(bad)
ret
xlat
mov
in
jge
pop
(bad)
ret
mov
mov
ret
mov
in
xchg
scas
in
push
jno
adc
add
(bad)
xchg
dec
xor
and
add
or
cmp
jns
mov
idiv
stos
push
or
lea
movs
hlt
mov
in
mov
pop
in
movs
(bad)
arpl
push
adc
push
add
push
leave
arpl
xor
sbb
aam
jns
jg
hlt
push
xchg
jne
sub
cmp
push
mov
loope
dec
push
aas
test
ja
cmovl
fist
or
(bad)
ret
pop
inc
sbb
xchg
xchg
or
push
adc
pop
mov
mov
clc
xchg
or
out
jbe
and
hlt
or
jge
imul
xchg
xchg
xor
out
mov
xchg
jge
das
mov
push
adc
test
push
adc
or
dec
inc
sti
shr
sbb
or
arpl
jb
cld
in
push
ficomp
nop
neg
arpl
jb
into
jb
adc
into
inc
push
into
sbb
mov
mov
lea
xor
gs
sbb
jae
add
jl
cmp
iret
cmp
sahf
or
out
gs
mov
nop
(bad)
div
inc
sar
arpl
clc
push
das
jecxz
jecxz
sbb
or
xchg
push
jno
in
xchg
int3
or
or
jb
jge
cmp
push
leave
repnz
movs
mov
add
sub
aas
xchg
sbb
jge
or
jg
mov
sub
jbe
loope
cmps
xchg
or
mov
(bad)
jno
mov
aas
push
pop
cs
cmp
or
or
lea
outs
and
jno
lods
cmp
aaa
fwait
pop
sbb
test
std
in
fnstsw
out
or
push
enter
retf
stc
push
je
inc
loope
ins
cs
mov
loop
sbb
mov
or
pop
test
mov
xchg
xor
xchg
sar
mov
std
call
sub
pop
jb
fwait
xchg
cwde
daa
cmp
cld
enter
xchg
out
retf
fcomp
fidiv
mov
push
repz
dec
sbb
adc
sbb
fcom
cli
repz
fcom
cld
adc
and
push
sub
inc
mov
daa
push
xchg
inc
aad
sub
sahf
jo
sub
repz
xor
cmp
xchg
mov
adc
pop
inc
cmps
sub
mov
loopne
leave
int
cmps
jae
or
dec
cmp
in
xchg
(bad)
add
xchg
cld
and
aad
cmp
push
(bad)
out
push
sbb
leave
push
int
add
fcmovnbe
das
leave
and
mov
xchg
or
dec
add
cdq
jne
sbb
inc
adc
shl
(bad)
dec
inc
xchg
jnp
adc
xchg
fisubr
xchg
lea
pop
lds
jnp
sub
jecxz
in
and
je
js
frstor
das
rcl
cld
fcom
cld
xor
or
adc
mov
repz
pop
pop
sub
push
fdivr
push
lods
rcl
xor
es
push
sbb
loop
sbb
sbb
out
icebp
repz
dec
xor
push
fdivr
push
sub
jae
bswap
bts
and
ficom
mov
mov
adc
adc
hlt
jg
sbb
int3
xor
mov
xor
ins
jge
jo
pop
sub
add
adc
inc
cmc
std
in
fsubrp
xchg
dec
xor
push
xchg
cld
enter
and
sbb
out
bnd
enter
cld
fmul
test
cmp
daa
daa
daa
pop
xor
(bad)
fsubr
pop
jp
pop
lahf
xor
cmp
fcomp
call
adc
shl
and
push
out
in
dec
arpl
fwait
push
(bad)
fwait
js
lock
jg
add
mov
js
fcomp
xchg
cld
rcl
cld
pop
pushf
inc
xchg
repnz
mov
daa
sti
addr16
pushf
cld
hlt
or
popf
shl
ins
inc
aam
push
lods
rcl
jge
shl
xchg
add
repz
cmps
xchg
addr16
jns
fisubr
enter
shr
inc
ret
hlt
ins
out
iret
or
cdq
xor
push
lods
aam
test
push
pop
cld
aam
xchg
icebp
push
or
pushf
cld
rcl
fcmovu
fcomp
pushf
inc
xchg
icebp
pop
xchg
pop
cld
inc
jmp
shr
mov
adc
rcr
fcomp
push
xchg
cld
cwde
xor
(bad)
and
cmp
lods
test
cmps
mov
ja
daa
mov
add
mov
iret
sbb
push
hlt
lods
lock
adc
fnstenv
push
adc
adc
add
popf
add
movs
je
fimul
or
cmp
ins
(bad)
out
dec
imul
test
cld
push
lods
rcl
xor
lahf
push
arpl
std
mov
adc
in
inc
mov
mov
or
pop
or
jmp
xchg
cld
cwde
mov
lahf
popf
or
adc
xchg
push
adc
iret
xor
and
mov
adc
add
movs
adc
sub
mov
int3
fcomp
fsub
mov
call
push
sbb
xchg
pop
(bad)
shl
xchg
pop
or
outs
sahf
pushf
mov
cmps
(bad)
(bad)
loope
sub
dec
into
xor
xor
jbe
jge
or
stos
test
mov
add
xchg
pusha
retf
fstp
jle
inc
push
add
mov
add
push
or
out
lods
in
or
inc
dec
sub
call
sub
repz
sub
popa
loopne
retf
jg
add
jb
xchg
cdq
xor
fnstsw
in
dec
cmps
mov
lock
sar
sbb
dec
xor
pop
xor
in
jl
inc
jp
cmc
xchg
mov
test
clc
sbb
adc
mov
dec
loopne
iret
ja
xor
call
movs
clc
scas
add
jmp
inc
mov
fsubr
scas
add
mov
push
retf
ror
mov
cdq
loopne
or
nop
xchg
ficom
sbb
ins
cmp
pop
inc
or
mov
push
jbe
xchg
sub
xchg
cmp
push
sub
cld
stos
fs
int3
push
in
push
xchg
cld
mov
and
adc
mov
neg
push
adc
mov
adc
sub
push
adc
mov
jo
call
rol
cmc
jnp
es
cld
int
add
cli
or
sub
fwait
mov
sbb
and
repz
cmp
scas
mov
pop
test
leave
frndint
dec
cmp
or
test
fistp
dec
adc
cld
push
xchg
cld
mov
icebp
(bad)
push
jge
retf
xchg
xor
cld
pop
jge
or
mov
sub
pop
imul
mov
in
loop
out
push
adc
sub
adc
sub
ret
push
adc
push
adc
xchg
pop
xor
inc
rcr
sbb
push
sub
push
gs
rcr
push
pusha
sub
in
repz
(bad)
push
pushf
inc
cmp
(bad)
fwait
push
adc
pop
(bad)
jl
adc
adc
push
mov
or
aas
adc
out
iret
repnz
adc
inc
or
mov
cmp
xor
retf
pushf
cld
aam
fsub
ss
fcomp
pop
pushf
cld
fadd
fsubr
push
jbe
fs
adc
add
aam
icebp
sub
jnp
out
frstor
push
in
dec
imul
cld
mov
pop
test
inc
ret
xchg
popf
movs
loopne
(bad)
fwait
sqrtps
push
xchg
fcom
fcom
cld
xor
test
mov
test
test
shl
mov
je
adc
cmp
or
sbb
or
push
mov
jb
fsubr
sbb
or
add
out
cli
push
fs
push
adc
mov
fnsave
hlt
inc
xor
imul
hlt
js
xor
jge
push
aad
mov
or
adc
lahf
or
sbb
adc
jmp
or
fbstp
push
push
push
stos
enter
jecxz
xor
inc
push
push
sahf
clc
pop
sbb
popf
call
xchg
or
or
loope
jge
jne
sub
inc
xchg
mov
and
mov
and
out
pop
cmps
loop
xchg
cmp
inc
xor
bndldx
and
loopne
xlat
out
rcr
pop
rol
push
or
mov
mul
or
fwait
inc
mov
ror
add
mov
add
ror
sub
add
adc
dec
icebp
in
jge
stos
mov
lea
loopne
int
adc
test
stc
fsub
ins
push
mov
test
in
mov
mov
mov
bound
hlt
hlt
ds
or
js
inc
jo
xor
fsub
xlat
push
pop
mov
cwde
inc
loopne
rcl
inc
ret
sbb
and
cmps
xchg
push
mov
mov
jae
(bad)
jne
scas
sbb
or
aas
aam
rcr
and
sbb
sahf
jbe
pop
lahf
shl
inc
or
or
rol
aad
sbb
dec
sbb
(bad)
mul
out
test
mov
mov
adc
popf
daa
ror
mov
inc
call
inc
retf
test
paddb
(bad)
clc
cmc
inc
xor
cmc
xor
sbb
jns
jge
loope
xor
adc
sbb
or
or
(bad)
retf
mov
adc
gs
and
or
cwde
add
call
repz
or
sub
xor
xor
pop
adc
add
imul
cli
xchg
ins
icebp
ja
jmp
cmp
lea
(bad)
lods
adc
sar
pop
test
jmp
pusha
xchg
icebp
bound
lods
or
inc
mov
sbb
and
add
adc
cwde
mov
jno
jne
pop
xor
mov
or
(bad)
jno
cs
js
(bad)
imul
or
pop
or
push
fdivr
call
pop
mov
adc
pop
sbb
adc
mov
pop
sbb
push
fsub
xchg
in
test
add
hlt
loop
xor
ja
push
popf
sub
cmp
adc
xchg
aad
or
adc
adc
hlt
push
aaa
sub
adc
xchg
adc
pop
push
addr16
(bad)
aaa
cld
pusha
push
sti
clc
mov
nop
and
repz
dec
sub
or
or
inc
js
addr16
inc
std
loopne
mov
cdq
aad
mov
pop
xor
gs
repz
fcomp
sbb
out
jmp
push
sti
mov
addr16
xor
cmp
jo
mov
repz
out
je
rol
out
arpl
push
jnp
sbb
clc
out
jnp
sub
dec
or
xor
mov
mov
fst
ds
js
repz
or
shr
js
cmp
jno
aam
call
dec
xchg
cdq
dec
stos
jp
and
push
add
mov
(bad)
or
add
in
outs
test
(bad)
pop
nop
xor
div
cmp
xchg
mov
push
dec
nop
xor
lds
mov
mov
inc
xchg
xor
sub
push
repnz
push
sub
mov
sbb
cmps
cli
mov
(bad)
adc
mov
paddusw
lods
ins
ins
ins
ins
pop
jge
idiv
sbb
nop
or
repz
in
add
sbb
or
dec
jge
adc
fwait
scas
cmp
xchg
(bad)
add
mov
in
mov
fwait
or
and
jmp
movs
add
repz
or
sbb
mov
stos
push
ja
mov
or
jmp
rcr
xchg
jecxz
in
jg
cwde
aam
push
iret
sbb
adc
jl
call
jbe
jl
mov
hlt
hlt
test
mov
push
mov
add
adc
pop
je
mov
fwait
pop
and
nop
je
mov
jmp
cs
rcr
pop
fisubr
push
nop
jo
jae
lea
adc
mov
repz
pop
pop
jb
bound
push
adc
xchg
nop
les
loop
cmc
push
jae
inc
jmp
cmp
jmp
xchg
hlt
cmc
mov
leave
inc
sbb
adc
push
mov
push
mov
(bad)
shr
xor
ins
std
loop
or
out
mov
mov
push
xor
pop
fwait
or
sti
out
mov
push
jecxz
pop
adc
mov
and
dec
mov
xchg
lods
xor
or
xchg
out
mov
shl
ds
rcr
mov
das
(bad)
push
sub
xchg
jae
push
movs
cmp
(bad)
gs
xor
cs
xlat
and
jp
or
push
adc
fisubr
mov
aas
repnz
scas
mov
jecxz
repnz
iret
repz
fmul
mov
xchg
xchg
mov
adc
loope
inc
rol
jno
iret
push
ja
ja
cmp
mov
frstor
js
inc
jmp
pop
popf
fstp
sub
cmps
cli
sti
ds
sub
push
sub
push
nop
xor
jle
jae
int3
mov
add
pop
jecxz
cli
push
fstp
jecxz
cs
ja
movs
xor
fmul
enter
add
nop
jae
int
cmovbe
in
cmps
(bad)
imul
and
add
inc
lahf
pushf
repz
pop
jp
add
sti
enter
mov
xchg
mov
(bad)
outs
jmp
mov
inc
push
fcomp
fcomp
pop
cmps
pushf
add
jbe
mov
stos
xor
push
inc
mov
cmp
jb
mov
adc
int3
and
daa
xchg
cld
inc
(bad)
js
test
xchg
mov
iret
xchg
imul
outs
sbb
clc
adc
outs
lods
jmp
or
dec
es
cmc
mov
icebp
hlt
aad
pusha
in
popf
xlat
push
jmp
cmps
push
(bad)
fcomp
movs
leave
cmps
xchg
(bad)
jnp
movs
or
call
fcom
push
loopne
icebp
xchg
shr
fs
pop
and
push
inc
(bad)
fsub
imul
int
fcomp
pop
es
shl
(bad)
in
aad
clc
sbb
jg
adc
cwde
(bad)
sub
ss
repnz
or
add
clc
mov
sub
pop
mov
sub
or
add
sbb
xor
mov
lea
cmp
std
neg
push
xor
(bad)
test
sahf
data16
pop
dec
sbb
lea
inc
js
or
mov
(bad)
and
ss
lahf
retf
fnstcw
push
xchg
sahf
mov
ror
jmp
push
sbb
(bad)
in
sub
stc
dec
xchg
push
adc
test
xchg
idiv
dec
xchg
push
adc
pop
mov
aad
xor
and
movs
ss
push
push
or
mov
repnz
inc
mov
xchg
xor
mov
or
mov
sub
movs
les
cld
int3
xor
es
push
popf
pcmpgtd
cwde
add
push
out
test
xchg
adc
dec
popf
push
mov
pop
inc
jl
adc
clc
sub
lea
pop
add
inc
inc
lea
dec
(bad)
jmp
shr
iret
test
pop
aas
mov
xchg
fcomp
sbb
pop
push
mov
adc
fs
mov
push
adc
jl
int
push
into
add
inc
or
or
push
(bad)
iret
or
xchg
xchg
adc
push
ror
jmpw
pop
mov
aad
mov
loopne
mov
jle
push
iret
test
pop
das
mov
mov
shufps
mov
movs
iret
xlat
mov
in
push
push
mov
dec
push
add
stc
xlat
sar
xlat
jmp
xchg
rcl
int
sbb
sub
jmp
mov
iret
test
jle
lods
sub
or
jmp
and
das
scas
sbb
lea
hlt
push
mov
fdiv
add
mov
ret
fisttp
call
rcr
test
xor
jb
repz
loopne
stos
(bad)
mov
jge
lock
pop
pop
in
push
xor
daa
pop
mov
stc
imul
out
(bad)
icebp
sbb
iret
or
imul
pop
and
daa
push
lods
cld
(bad)
je
mov
bound
lea
xor
lock
inc
mov
jg
jecxz
add
movups
pop
loope
and
stos
or
jmp
cdq
fistp
hlt
xor
mov
repz
pop
es
fstp
add
adc
enter
stc
cmps
inc
cmps
lea
xlat
(bad)
pop
fcomp
fcomp
fmul
ret
jb
fmul
call
loop
mov
sub
ror
push
ins
cmp
lahf
test
jno
inc
pop
cld
icebp
adc
test
push
aad
aaa
in
pop
outs
mov
imul
mov
lea
xor
add
addr16
or
lods
sahf
xor
cld
push
mov
repz
push
ds
dec
adc
stos
test
popa
jl
add
jnp
aad
cmps
or
xor
inc
or
test
sbb
movs
idiv
push
sti
lods
call
test
mov
inc
and
aaa
dec
retf
xor
rol
mov
movs
(bad)
xor
test
cld
fcom
cld
push
movs
add
lods
add
dec
js
in
mov
repz
mov
aam
xor
mov
mov
mov
mov
arpl
and
sbb
popf
jo
(bad)
mov
adc
mov
jge
mov
mov
sub
jmp
cld
sbb
or
test
aas
dec
gs
adc
mov
outs
repnz
into
xchg
ja
push
and
ins
and
mov
fwait
jne
xchg
pusha
je
sub
in
(bad)
test
and
inc
mov
dec
xchg
int3
test
and
or
dec
cmp
scas
lds
mov
add
xchg
pop
xchg
cmp
sub
int3
mov
cdq
and
lea
js
jmp
jb
sbb
outs
or
lock
jmp
push
sub
xor
add
pusha
jmp
xor
and
jb
movs
scas
pop
push
push
enter
push
mov
ror
jnp
xchg
fmul
adc
push
or
cdq
outs
mov
cmc
iret
out
std
jno
or
shr
xor
mov
sbb
pop
add
xor
sar
sbb
nop
ffreep
pop
pop
enter
ficom
out
jmp
(bad)
jmp
pusha
and
add
mov
std
(bad)
repnz
movs
rol
adc
(bad)
pushf
fcomp
pop
es
push
jne
cwde
shl
outs
xor
mov
cmps
cmp
cmp
arpl
shr
in
jge
lods
daa
inc
xchg
imul
imul
outs
jne
mov
fs
or
or
sbb
leave
iret
fcomp
xlat
outs
rcl
outs
sub
push
pop
add
icebp
adc
cmp
in
add
xchg
add
pop
cdq
dec
mov
cmp
xor
xor
push
test
repnz
inc
mov
push
or
cmp
and
xor
sub
push
and
lahf
jg
ins
pushf
sar
cmp
pop
pop
clc
clc
pop
push
aam
repz
sbb
outs
loope
pop
ror
imul
daa
xchg
repnz
imul
imul
call
sub
add
std
sub
xor
fwait
in
and
in
jne
mov
mov
enter
xlat
mov
pusha
push
in
out
inc
aam
or
icebp
dec
cmp
inc
call
dec
mov
push
(bad)
(bad)
or
retf
icebp
jg
mov
xor
xchg
inc
xor
inc
lods
mov
sbb
adc
icebp
xrelease
push
pop
call
sbb
iret
mov
inc
cld
repnz
pop
sti
or
inc
lods
xor
push
mov
fisub
pop
imul
int
loope
fild
push
outs
das
adc
rcl
inc
ret
adc
repnz
cs
add
adc
adc
pop
daa
xlat
pop
inc
(bad)
fcom
enter
enter
xchg
xor
adc
(bad)
pushf
fcomp
pop
lods
aam
call
jmp
(bad)
cmp
jne
bound
jne
xchg
data16
nop
sub
call
xchg
into
test
rcr
xor
aas
pop
sub
ficom
mov
xchg
adc
mov
fwait
ret
movs
jnp
aad
imul
adc
or
fwait
adc
enter
mov
mov
lea
cmp
dec
aas
jmp
leave
xor
cmp
dec
test
int3
xor
in
inc
stos
hlt
fs
or
mov
fdiv
sbb
ja
add
xchg
xchg
dec
xor
push
or
jo
sbb
cdq
add
neg
int3
or
adc
leave
cmp
sbb
jle
pushf
ins
in
or
sub
or
aad
add
out
mov
push
add
mov
xchg
out
sti
(bad)
push
sahf
pop
inc
mov
add
dec
xchg
sub
nop
or
cli
xchg
jmp
xor
stos
adc
add
nop
or
iret
xchg
sbb
cwde
(bad)
cld
mov
cmc
arpl
add
inc
cmp
test
in
call
jns
repz
mov
xor
or
test
das
push
jne
mov
jno
dec
mov
mov
push
mov
jge
clc
lods
loopne
in
sbb
xor
inc
in
cmp
outs
(bad)
loopne
test
aad
(bad)
sbb
mov
cli
fs
mov
lea
imul
adc
jge
xchg
push
sbb
push
iret
sbb
jno
or
pop
adc
xchg
std
jg
int
dec
stos
hlt
popf
int3
call
mov
out
imul
(bad)
ds
push
jmp
aam
or
ret
push
or
stos
adc
sti
ss
pop
and
int3
test
add
ins
jge
lock
or
jmp
arpl
dec
sub
test
or
ror
sbb
push
and
jmp
adc
shl
or
ins
sub
sbb
adc
xor
dec
aaa
outs
xor
int
inc
mov
outs
xor
add
mov
push
dec
mov
(bad)
or
push
stos
mov
or
jle
pop
sub
sbb
aam
in
pop
lock
add
retf
test
test
rcr
xchg
fsubrp
xor
sbb
das
push
xchg
xchg
ja
cmc
in
push
sub
fsub
pop
fisttp
add
mov
push
xor
neg
sti
cld
frstor
repnz
mov
or
pop
fistp
sbb
add
repnz
pop
outs
push
xchg
dec
and
(bad)
mov
mov
jecxz
cld
sub
iret
push
mov
aas
or
push
gs
cmc
pop
pop
pop
mov
sar
outs
adc
(bad)
shr
das
mov
mov
cmp
hlt
fadd
mov
pop
retf
adc
xor
lds
sub
out
sub
jae
ins
add
mov
(bad)
in
push
xor
(bad)
ds
push
(bad)
dec
mov
push
xor
mov
sbb
sbb
jmp
or
std
jg
pop
int3
or
lock
loop
shl
ja
add
test
xchg
pop
cmp
xor
sahf
adc
jmp
outs
xchg
lods
adc
jno
jmp
test
mov
push
push
lods
dec
adc
cmps
dec
sbb
push
dec
jmp
jae
and
imul
mov
retf
pop
out
dec
mov
adc
sbb
hlt
sbb
mov
hlt
push
ds
or
in
xor
jg
nop
cwde
xchg
call
(bad)
daa
in
repz
sbb
mov
idiv
dec
imul
pop
dec
fcomp
fsub
jo
inc
repnz
adc
bound
xchg
mov
sti
push
xchg
loopne
add
cwde
jmp
ins
mov
hlt
jo
ins
sbb
pop
sbb
test
mov
addr16
loope
test
jmp
inc
retf
sub
pop
call
out
and
sbb
hlt
int3
comiss
dec
iret
xchg
cdq
rcr
div
push
(bad)
xchg
test
rcl
push
jmp
out
repz
mov
imul
pop
sbb
imul
inc
mov
daa
pop
xor
call
test
sbb
push
mov
call
or
inc
ret
not
cmp
jmp
aam
dec
pop
add
dec
jnp
xchg
jg
fmul
xor
ins
jge
lock
or
fidiv
les
inc
push
mov
stos
loopne
mov
jecxz
lods
sub
in
jae
sahf
js
cmp
jno
or
movs
adc
fsub
or
cmp
dec
mov
ss
xchg
inc
sbb
aaa
adc
or
rcl
sbb
sbb
pop
or
inc
pop
adc
mov
push
pop
outs
stos
mov
add
iret
aas
sub
gs
outs
add
movs
add
xchg
adc
add
sbb
nop
int3
stc
imul
cmp
lahf
sbb
inc
pushf
dec
rol
or
out
jnp
jle
sbb
inc
push
dec
int3
sbb
sub
or
cdq
int
xor
mov
repz
loopne
push
xchg
imul
pop
(bad)
cmc
fild
inc
repz
test
test
add
mov
hlt
hlt
ss
xor
xor
hlt
loop
pop
xor
out
gs
pop
add
out
lds
xchg
mov
hlt
hlt
int3
dec
sub
sub
sbb
jecxz
sub
scas
mov
xchg
pop
cmps
lahf
fsubr
scas
jo
in
dec
shl
in
sti
mov
jge
or
mov
adc
cli
sbb
outs
adc
comiss
xchg
or
test
push
pop
imul
jbe
add
in
scas
pop
mov
xor
cmc
mov
ror
push
or
xchg
fstp
sub
cmps
xchg
mov
sub
jo
popa
pop
cmc
hlt
cmp
adc
mov
sbb
out
sbb
cwde
pop
icebp
leave
out
scas
iret
fild
fdivr
mov
dec
mov
fisubr
xlat
xchg
je
adc
sar
or
popf
add
(bad)
mov
and
daa
pusha
daa
push
fistp
sbb
aam
inc
cmps
cwde
mov
das
lods
cmps
neg
sbb
repnz
push
xchg
sub
popf
jne
mov
xor
or
clc
mov
fsub
test
dec
jg
pusha
in
push
shl
cld
fcomp
xlat
(bad)
loopne
jle
cmp
in
aas
mov
retf
mov
mov
xchg
mov
adc
movs
mov
out
cmps
mov
lea
jecxz
jecxz
xor
movs
mov
les
int
out
outs
fst
mov
(bad)
rcr
shl
sbb
jecxz
jbe
jle
in
inc
jg
lods
lods
push
xchg
cld
loopne
inc
xor
out
inc
cmps
(bad)
sti
sub
(bad)
fwait
xor
rcr
or
jmp
js
or
clc
lahf
mov
jecxz
arpl
daa
push
xchg
cld
enter
imul
into
out
ficomp
ins
adc
out
fucomip
movs
clc
xchg
push
adc
push
or
add
sbb
imul
ins
mov
xchg
nop
imul
push
or
pop
jge
cmp
in
sub
stc
and
bound
das
dec
inc
pop
mov
jae
sar
push
adc
dec
test
mov
inc
test
xor
outs
mov
adc
inc
in
lea
jno
jo
jecxz
fs
iret
sbb
loop
lea
xlat
outs
fcomp
imul
jmp
sbb
adc
icebp
inc
adc
pop
mov
cwde
(bad)
loope
push
xor
sbb
fs
in
test
(bad)
aas
push
xor
dec
adc
fs
mov
add
xchg
ror
pop
adc
xchg
fidiv
adc
je
movs
test
and
pop
mov
jbe
mov
push
fcom
call
stos
mov
xor
pop
imul
sbb
xchg
test
stos
popa
clc
xor
pushf
cwde
(bad)
mov
mov
aaa
cmp
inc
cmp
xor
and
call
hlt
scas
inc
into
fcmovnu
les
mov
sar
neg
push
int3
xlat
ss
add
mov
adc
or
test
jge
jmp
push
repz
imul
out
repz
push
in
push
xchg
xor
push
and
outs
mov
sbb
xchg
xchg
enter
jge
clc
sub
mov
ret
(bad)
push
mov
dec
or
loopne
jne
popa
add
inc
sub
add
jbe
cmps
sbb
inc
sub
add
dec
lds
xor
mov
add
inc
push
mov
sbb
jne
sub
or
loopne
mov
imul
dec
iret
fild
call
in
pop
mov
xor
inc
jge
pop
ins
ror
xchg
int
add
popa
xchg
adc
add
dec
dec
mul
test
inc
adc
addr16
mov
pop
hlt
les
dec
sub
scas
shr
ins
xor
int3
dec
das
adc
dec
or
repz
mov
push
add
mov
adc
jno
ficomp
das
mov
pop
rcl
jle
mov
ror
popaw
dec
add
pusha
push
into
xchg
cmp
in
push
cli
inc
sub
sbb
or
dec
scas
fcomp
mov
cmp
sbb
cmp
sbb
imul
add
adc
punpckhwd
xchg
or
adc
pop
(bad)
jns
mov
add
adc
push
fpatan
repz
pop
shl
mov
adc
push
out
push
jmp
adc
ss
jp
mov
outs
jnp
out
aaa
inc
in
mov
push
cli
mov
repz
mov
fndisi(8087
stos
xchg
sbb
pop
add
xchg
dec
adc
or
inc
cld
dec
inc
pop
xchg
cwde
or
jmp
or
jnp
fsubr
lahf
adc
ror
fs
mov
push
jl
and
dec
jne
ss
aad
jmp
repz
div
push
push
lea
adc
mov
jne
pop
mov
add
shl
sub
xchg
push
hlt
(bad)
pop
aad
inc
sub
pusha
mov
jecxz
xor
or
sbb
sbb
popf
adc
push
pop
retf
icebp
jnp
mov
or
mov
inc
daa
or
aas
imul
es
(bad)
add
loopne
scas
push
mov
jo
fisttp
add
mov
and
mov
xchg
sub
jo
and
data16
ds
out
ins
jge
rcl
imul
(bad)
pop
pushf
jo
lock
cmp
popa
out
stos
inc
push
sub
adc
hlt
pusha
dec
push
push
gs
dec
or
jb
fcomp
xchg
shr
icebp
ja
mov
xor
inc
test
aad
mov
fcom
push
jp
(bad)
(bad)
imul
retf
gs
jge
cdq
ins
scas
test
pop
movs
aas
adc
pop
dec
mov
jl
sahf
icebp
aas
sahf
xchg
jnp
adc
adc
mov
jle
sbb
jl
jle
push
lods
pushw
adc
pop
xor
aam
sub
sbb
idiv
jne
sbb
scas
fimul
adc
dec
repz
cmp
rol
ds
xor
rcl
(bad)
int
das
stos
adc
sbb
sub
add
push
xchg
shl
mov
mov
int3
and
or
call
cs
sbb
mov
add
push
mov
aas
ret
sbb
das
ins
pop
jg
shl
jne
push
fld
fild
push
ss
ds
or
push
jle
ds
dec
ficomp
rcl
pop
ret
rcl
mov
sub
adc
leave
rcl
push
loop
shr
fnstenv
push
fs
int
or
jo
xchg
jnp
mov
adc
fsubr
sbb
fs
fld
inc
ret
gs
rcr
ss
loopne
dec
in
jg
xchg
stc
jmp
jl
or
or
jae
(bad)
mov
sar
retf
lods
mov
clc
shl
sub
repnz
push
jne
not
leave
pop
imul
jb
fsub
mov
xchg
pop
xor
jle
jbe
ss
dec
mov
push
imul
arpl
adc
ins
xchg
mov
cdq
leave
sbb
pop
icebp
repz
clc
repnz
daa
push
test
js
jge
mov
fisttp
or
xlat
dec
cld
gs
lock
sbb
mov
shr
fdiv
adc
adc
sbb
mov
ins
jb
das
mov
jle
pusha
push
push
xchg
push
xchg
shl
fldcw
inc
(bad)
cld
push
xchg
shl
jecxz
and
ja
push
outs
add
or
test
inc
js
jp
int3
(bad)
dec
xor
sub
shl
call
enter
dec
jle
push
push
iret
repz
rol
fcomp
fcomp
fdiv
es
mov
aaa
push
imul
ss
jb
dec
xor
aam
test
pop
pushf
inc
xchg
push
pushf
popf
mov
mov
adc
cmp
jns
jge
push
add
mov
lods
sti
or
add
sub
ror
jns
pop
ret
rcr
jmp
jecxz
sub
xchg
aad
xchg
addr16
mov
sub
pop
and
dec
or
js
out
ins
inc
jbe
adc
iret
sbb
nop
or
inc
add
clc
test
adc
gs
ins
push
rcl
aam
dec
loopne
shr
jle
ret
adc
ror
mov
imul
iret
leave
lea
loopne
popa
test
jle
icebp
sti
repz
add
cdq
sbb
mov
retf
(bad)
mov
iret
push
jmp
ror
jb
sub
push
repz
inc
rol
fcomp
fcomp
fmul
ret
jb
inc
lahf
loopne
pop
xor
dec
sub
push
xchg
xor
or
cmp
xor
es
push
sbb
test
push
pop
int
sub
sets
cdq
push
dec
inc
nop
jge
jg
and
bound
mov
call
xor
push
xor
mov
cld
fcom
cld
pop
pushf
cld
shl
daa
sahf
push
fwait
addr16
sbb
jle
jnp
sub
sti
sti
repz
(bad)
or
clc
sub
jne
mov
loop
loopne
imul
cmp
daa
lods
jbe
mov
mov
call
fwait
rol
xchg
push
add
cmps
test
(bad)
adc
repz
xchg
or
fcomp
fmul
ret
jo
xchg
cli
adc
or
xchg
push
xchg
adc
adc
adc
repz
sub
add
mov
test
fcom
cld
pop
pushf
cld
imul
or
out
or
test
jae
call
sub
xchg
loopne
pusha
movs
fcomip
or
xchg
(bad)
xor
fisubr
cdq
sub
jp
in
xlat
scas
iret
sti
dec
cs
repz
xchg
retf
pop
adc
fsub
sbb
retf
xchg
pushf
icebp
and
cmp
xchg
xor
mov
fcomp
in
cmps
mov
fdivr
push
inc
popa
xor
or
pop
fcomp
fcomp
xor
push
sub
push
in
popa
bound
enter
jb
inc
mov
xchg
rcr
cmp
test
adc
or
xchg
sbb
adc
jg
sub
shl
popf
inc
xor
sbb
fimul
je
push
aad
jbe
sbb
cld
xor
mov
mov
sbb
xchg
out
inc
sub
push
jg
mov
in
les
push
xchg
shl
mov
ret
(bad)
adc
lods
mov
mov
or
pop
and
push
jge
jp
lock
push
adc
push
sub
sub
jae
adc
enter
adc
xchg
dec
push
mov
xchg
je
or
or
jb
aas
ss
jle
xchg
and
jno
addr16
ins
adc
xchg
pusha
mov
sbb
mov
adc
repz
ins
mov
test
fdivr
pop
pushf
cld
ins
xchg
icebp
arpl
mov
xchg
mov
add
in
mov
test
ins
lds
imul
or
sbb
imul
dec
pop
pop
shl
je
ss
ficomp
or
adc
mov
imul
xchg
adc
add
or
adc
ja
inc
fs
push
jecxz
or
popa
mov
mov
jns
aaa
mov
fistp
or
push
xor
push
ins
adc
data16
dec
into
shr
(bad)
fidivr
cdq
or
pop
aad
push
jo
jb
gs
jbe
pushf
pop
test
pop
rol
int3
outs
scas
iret
xlat
adc
add
cmp
mov
xlat
mov
stos
jnp
push
test
fs
jle
test
or
loopne
mov
cld
mov
dec
cmps
cmp
in
mov
mov
cmp
mov
std
dec
push
xchg
xlat
loopne
or
jb
sbb
loopne
test
sub
lea
iret
mov
and
fld
call
sub
sbb
push
adc
loope
or
push
popf
push
(bad)
cs
arpl
adc
cvtdq2ps
adc
push
xchg
jle
cmps
xchg
call
lock
lock
retf
ins
cs
pop
push
sbb
xor
xchg
xchg
xor
bound
push
aas
lahf
or
sbb
jl
sbb
icebp
xor
test
xor
sbb
xor
mov
and
push
mov
adc
or
stc
shr
mov
adc
call
mov
retf
inc
sbb
test
int3
adc
sar
es
pop
xor
cmps
rcl
pop
arpl
clc
fist
adc
hlt
test
jge
stos
in
iret
(bad)
loopne
(bad)
ins
add
(bad)
clc
adc
or
out
push
movs
xor
shr
hlt
mov
dec
imul
sti
mov
cwde
(bad)
xchg
add
loope
scas
retf
cld
fcomp
fcomp
push
and
add
add
(bad)
xor
(bad)
clc
fist
xchg
loopne
jno
imul
xchg
fdiv
inc
inc
or
ja
pop
push
dec
xor
or
xor
pop
leave
fcomp
adc
repz
adc
jns
or
(bad)
jne
mov
mov
xchg
ror
sub
and
in
jge
out
(bad)
jmp
push
sub
mov
(bad)
pop
inc
mov
inc
das
add
iret
clc
cmp
fistp
out
and
(bad)
arpl
xchg
push
pop
mov
xchg
push
xor
adc
inc
icebp
ss
push
mov
push
xor
repz
sbb
fmul
pop
aad
push
mov
add
push
out
ins
xor
fs
(bad)
stc
or
iret
push
test
sub
scas
je
xchg
mov
xchg
dec
fsubr
enter
mov
je
and
cwde
es
xor
daa
pop
xor
push
in
cld
push
push
cld
mov
inc
mov
xchg
fcomp
adc
mov
dec
adc
je
sbb
das
idiv
xchg
jne
cmp
pop
xchg
xor
cld
loopne
push
mov
call
jnp
popf
sar
aad
adc
out
push
cld
xor
(bad)
fisttp
or
add
cdq
cmc
xor
push
jmp
mov
retf
xor
sbb
push
xor
loop
loope
icebp
repz
fcom
cmp
xchg
leave
popf
push
mov
scas
mov
jecxz
scas
in
mov
ret
fwait
or
jb
ret
push
ret
arpl
push
or
xlat
cmp
test
add
repz
test
cs
xor
inc
and
fnstenv
or
outs
jne
aad
push
dec
lock
xchg
cld
rcl
pop
pushf
cld
fsub
icebp
arpl
movs
jge
mov
adc
retf
sahf
mov
cld
cli
lahf
int
clc
jnp
test
outs
add
rcl
movs
xor
stos
cwde
mov
jo
out
push
mov
loopne
(bad)
cdq
aad
inc
out
push
mov
or
cmps
lahf
icebp
daa
xor
push
movs
cld
fcom
cld
xor
and
pushf
je
or
aad
xor
test
in
lock
fistp
push
mov
push
cld
and
into
or
ktestw
cmp
adc
test
imul
enter
xlat
(bad)
pushf
fcomp
lea
mov
ret
jo
add
push
xor
push
mov
add
xlat
fadd
imul
push
fmul
sbb
les
ficomp
dec
cld
rol
sbb
test
int
ds
loop
add
cdq
mov
sbb
xor
mov
aaa
sbb
aaa
sub
jl
clc
fistp
or
dec
das
repz
cmp
sub
arpl
or
pop
movs
(bad)
jae
int3
js
rol
ja
jbe
inc
mov
jns
jne
xchg
dec
sbb
sbb
sbb
movs
retf
(bad)
add
cmp
adc
jge
hlt
arpl
pop
mov
and
sbb
or
or
dec
movs
test
fbstp
xchg
mov
or
or
pop
pop
add
xchg
pushf
jnp
mov
inc
mov
movs
xchg
ror
das
int3
sub
push
vfrczps
xor
or
xor
dec
mov
hlt
cmp
in
pop
aas
in
out
mov
int
sbb
ins
sbb
out
dec
sbb
or
dec
mov
retf
fwait
mov
inc
adc
repnz
inc
sub
or
dec
xor
test
js
les
pop
or
fwait
adc
data16
mov
sub
ret
dec
sub
dec
sbb
or
or
aad
or
loopne
(bad)
aaa
cmp
push
rcr
dec
sti
jecxz
mul
mov
dec
das
pextrw
adc
pcmpeqd
xchg
pop
repz
and
hlt
mov
fidivr
inc
fmul
or
push
mov
fild
jns
sbb
loopne
mov
call
cmc
sbb
in
cmc
xchg
or
retf
xor
sahf
fistp
xchg
bound
sbb
add
push
cmp
xchg
inc
xchg
cdq
mov
cmp
xchg
push
dec
adc
or
dec
(bad)
and
outs
mov
das
xchg
shl
loopne
int
movs
jo
sbb
dec
or
mov
loop
hlt
or
jns
jecxz
hlt
cmc
in
test
mov
hlt
push
(bad)
ffreep
aad
or
cli
outs
lds
or
pushf
fdivrp
xchg
in
sti
push
xor
arpl
jne
prefetchnta
dec
(bad)
adc
repz
movs
cld
fcom
cld
push
fcomp
fcom
inc
jge
fs
jmp
cmp
xor
and
push
sub
cs
push
pop
gs
mov
xor
enter
pop
fs
retf
fsub
xor
jecxz
and
xchg
inc
outs
js
call
loop
arpl
pop
cmp
lods
in
and
or
sub
mov
das
out
mov
pop
sar
or
dec
inc
fcomp
fdiv
inc
bound
icebp
push
das
jecxz
imul
sbb
cmc
push
jl
mov
cld
aam
int3
or
clc
adc
fs
and
push
in
mov
bound
call
loopne
adc
or
fmul
mov
jmp
in
clc
or
fdiv
and
xlat
push
jl
and
dec
lea
mov
ret
jo
or
xor
(bad)
fcom
ins
push
mov
les
add
je
mov
shld
in
cld
push
push
cld
fcomp
fcomp
mov
jecxz
jb
call
je
or
cdq
sbb
xchg
popa
sbb
and
loop
add
sbb
fs
mov
xor
hlt
mov
(bad)
imul
test
xchg
mov
fcom
cld
xor
popa
xchg
sbb
adc
adc
adc
adc
or
ja
or
(bad)
rcr
lahf
push
(bad)
cld
inc
(bad)
jmp
fs
inc
inc
push
iret
add
sbb
adc
mov
or
loop
daa
lds
jb
mov
pop
pop
xchg
popf
test
shl
or
sbb
fadd
icebp
or
scas
mov
or
fcomp
fcom
xor
xor
in
sbb
jp
(bad)
jmp
jns
sbb
rcr
fdiv
fmul
xlat
(bad)
push
js
inc
fwait
sar
xchg
mov
cmp
sub
dec
xor
repnz
arpl
xchg
ins
add
dec
sti
dec
or
fcomp
fcomp
pop
pushf
cld
fsub
icebp
arpl
mov
sbb
xor
mov
cld
lahf
sahf
sbb
xchg
cld
(bad)
cmp
xchg
xchg
dec
aam
mov
(bad)
popa
jge
rcr
aad
dec
popf
xchg
jne
shl
hlt
hlt
aaa
or
adc
mov
pop
inc
mov
mov
jo
mov
jb
mov
pop
fcomp
fcomp
fcom
cld
fsub
icebp
(bad)
xchg
mov
popf
xchg
jne
or
retf
or
push
jg
jns
neg
sti
shr
outs
jns
xor
call
jb
jb
sar
clc
ins
repz
add
mov
cli
shr
or
outs
xchg
mov
retf
cmp
mov
jns
pop
jnp
xchg
pop
adc
jg
dec
or
jmp
xor
cmc
or
loop
call
dec
push
(bad)
dec
cmp
scas
out
adc
frstor
mov
mov
dec
mov
add
mov
mov
outs
loop
dec
daa
lds
or
mov
xlat
pop
std
(bad)
fcom
cld
mov
adc
popf
pop
mov
lods
cld
lods
mov
push
jmp
cwde
xchg
or
aam
adc
call
inc
stos
mov
xor
fs
push
fcomp
fcom
cld
xor
sahf
push
repz
sbb
xor
or
in
push
or
push
xor
into
adc
xchg
aad
cmp
push
mov
mov
mov
test
adc
(bad)
in
(bad)
call
pop
lods
mov
sbb
into
xor
mov
dec
aas
add
cmp
in
clc
push
rol
xor
pop
out
out
hlt
xor
out
fld
inc
mov
movs
cmps
mov
or
loopne
ficom
inc
movs
cld
sub
in
nop
lea
mov
jmp
push
cld
pusha
fcomp
fdiv
test
pusha
mov
add
or
adc
add
iret
mov
jmp
sub
inc
ja
data16
mov
test
lds
pop
shl
daa
scas
fyl2xp1
push
or
ror
pusha
loopne
pop
push
cdq
pop
mov
mov
xchg
or
in
ss
and
stos
sub
xchg
mov
and
xchg
sbb
dec
ret
cld
test
sbb
cdq
mov
lds
repnz
cwde
cmp
ss
jmp
xchg
rcl
lods
pop
and
push
pop
push
lods
cld
imul
push
or
pusha
and
call
mov
enter
xor
inc
out
loop
call
(bad)
jl
adc
xor
cli
jbe
sar
mov
xor
mov
loopne
and
rol
adc
sbb
dec
je
addr16
ins
inc
call
fstp
aad
imul
stc
call
xchg
fxch
dec
mov
fild
adc
ds
push
dec
jns
xchg
xor
sar
cmp
xor
mov
dec
and
xchg
push
adc
pop
dec
push
test
cs
stos
loopne
mov
add
adc
cmp
dec
or
cs
loopne
pop
sbb
xchg
fcomp
lea
mov
ret
jb
call
loop
(bad)
jecxz
adc
dec
sub
mov
cld
ss
fist
add
cdq
lea
and
test
std
pushf
sub
int3
movs
xor
in
push
add
adc
jo
ja
pop
adc
arpl
je
int3
push
jnp
cmp
nop
or
xchg
dec
movs
adc
push
cld
test
sbb
loopne
hlt
mov
pop
and
jo
lods
jmp
rcr
mov
fcom
fcmovnbe
sub
adc
icebp
dec
or
dec
inc
leave
test
addr16
jle
push
lahf
gs
push
pop
fsubr
or
test
vpperm
out
xchg
push
into
jbe
cs
xchg
imul
xchg
add
rcr
aas
loop
cmp
daa
daa
daa
pop
xor
(bad)
fcomp
pop
inc
pop
icebp
bound
int3
mov
sbb
ficomp
adc
xchg
add
repz
arpl
and
cmps
hlt
adc
pop
mov
(bad)
or
jns
dec
mov
adc
cmp
iret
xor
(bad)
cmp
imul
test
pop
arpl
mov
out
dec
sub
adc
cmp
retf
push
(bad)
xchg
(bad)
stos
in
add
xchg
(bad)
mov
test
sub
dec
(bad)
cld
push
mov
push
adc
ins
and
stos
test
ins
mov
dec
jle
xchg
or
repz
push
jle
push
and
xor
push
pusha
push
adc
call
push
mov
xchg
pop
sbb
sbb
and
adc
hlt
xlat
xchg
sub
cmp
jns
push
gs
imul
arpl
popa
xchg
not
sbb
mov
mov
sbb
aad
sti
push
xchg
imul
xchg
jecxz
movs
(bad)
clc
adc
fmul
mov
repz
aas
adc
mov
lods
or
std
jge
stos
test
addr16
push
lds
test
stos
jno
jge
cli
(bad)
(bad)
jmp
xor
mov
call
jnp
lahf
adc
inc
jmp
mov
xchg
std
jge
ret
add
out
dec
stc
into
adc
pushf
cld
fcom
cld
jmp
mov
int3
sub
add
xor
test
in
cmp
xchg
inc
loope
call
popa
cmps
cli
cmp
das
aad
mov
jbe
xchg
push
add
lock
cld
xchg
fstp
popf
push
jp
mov
ret
fidivr
lock
(bad)
cmp
mov
inc
pop
add
sbb
leave
and
call
cmp
les
xor
mov
icebp
outs
cmp
mov
jp
mov
outs
cmp
std
in
cmp
jb
mov
nop
pop
mov
in
or
hlt
push
jecxz
jmp
pushf
cld
fsub
aad
adc
cdq
add
xor
lock
mov
or
sbb
mul
(bad)
adc
cmp
gs
test
push
in
xor
jns
sbb
leave
imul
cli
or
inc
sti
cwde
adc
aas
adc
int3
mov
fnsave
push
inc
gs
pusha
or
or
rcl
pop
sbb
shr
and
int3
adc
add
and
pop
cli
rcr
or
aas
push
adc
dec
adc
pop
hlt
call
and
sub
retf
fcomp
int3
les
inc
ja
cmp
test
jno
dec
xor
jo
in
(bad)
repnz
mov
aam
(bad)
inc
xchg
inc
std
sbb
mov
lods
ins
add
lds
gs
fwait
clc
xchg
mov
mov
xchg
mov
aas
or
dec
jae
(bad)
jge
or
xchg
push
(bad)
fild
push
sbb
hlt
push
or
jo
cdq
sar
sbb
adc
push
pop
neg
xor
add
cmp
imul
jle
std
xor
push
mov
xchg
std
hlt
ins
fiadd
cdq
shl
movs
or
(bad)
add
loop
jmp
cmp
jmp
retf
aas
or
mov
or
push
nop
cli
shl
cmp
gs
(bad)
adc
test
loop
and
scas
fdiv
aas
cmp
cmc
scas
or
mov
sahf
push
mov
or
mov
std
iret
or
cmp
cli
dec
sahf
mov
or
add
test
int3
dec
mov
hlt
push
test
shl
daa
mov
inc
mov
sbb
jns
cmp
pop
inc
pop
push
int
fs
das
adc
cmp
jno
dec
movs
add
pop
inc
gs
ins
sub
dec
das
pop
fcomp
fcomp
pop
pushf
cld
enter
ror
or
dec
enter
repz
loopne
push
sub
push
mov
test
inc
xor
pop
dec
fcomp
xchg
jb
dec
ret
xchg
(bad)
rol
test
ins
sbb
xor
xchg
xor
push
scas
mov
fcomp
fcomp
cmps
sar
pop
arpl
jno
fwait
dec
pop
sub
mov
mov
movs
sub
loope
aaa
mov
or
rcl
not
push
adc
adc
cmpxchg
retf
pop
mov
adc
addr16
sar
dec
fmul
jb
mov
inc
in
mov
loopne
jo
jne
movs
loope
adc
adc
(bad)
jbe
jb
lea
ja
adc
inc
test
cmp
pop
mov
imul
pushf
push
scas
mov
cmp
or
int
cld
aam
fcomp
fcomp
pushf
cld
rcr
fcomp
popa
push
mov
mov
sbb
pushw
adc
lock
cmc
add
xor
jno
or
(bad)
rcr
cs
ficom
or
popa
push
mov
outs
bound
xor
cmp
retf
jle
jmp
(bad)
js
sbb
xlat
mov
push
retf
dec
mov
clc
cmovge
mov
sbb
mov
cmps
test
int3
jbe
adc
and
ret
sar
retf
add
rcr
shl
in
and
push
adc
push
ffreep
xor
mov
xor
mov
cmp
shr
xor
ins
push
adc
int
imul
add
lock
lock
call
sar
into
adc
pop
jecxz
jb
and
push
sub
lock
fadd
add
pop
mov
ficomp
loope
(bad)
addr16
mov
adc
les
push
mov
mov
lods
jge
adc
popf
add
dec
in
and
lock
lods
jge
adc
jmp
push
sar
add
push
inc
cmp
adc
pop
fcmovnu
fcom
ins
adc
loop
lahf
dec
inc
fwait
nop
or
add
mov
xor
daa
push
sub
sbb
pop
mov
xor
test
and
sbb
in
cld
shl
dec
and
daa
push
sub
sub
ds
lods
sahf
lahf
push
inc
sbb
arpl
xchg
xor
lea
fcmovnu
fcom
shr
pop
sbb
in
icebp
pop
arpl
add
xchg
into
gs
test
sti
push
push
jbe
ds
mov
mov
(bad)
iret
mov
sahf
(bad)
mov
or
push
add
addr16
pop
cmps
add
test
dec
outs
add
outs
icebp
das
sbb
push
cmp
push
mov
sub
cmp
add
inc
mov
pop
mov
outs
sets
dec
cmp
imul
and
loop
mov
jle
sti
push
push
adc
test
push
push
aam
loope
inc
gs
cmp
fcomp
pop
xor
sbb
sbb
div
hlt
loopne
cld
rcl
cld
fsubr
mov
icebp
repnz
pop
rol
push
ins
scas
jmp
cdq
arpl
movs
xchg
xor
mov
xchg
fmul
sbb
fsubr
sbb
adc
xor
mov
add
sub
in
stos
out
inc
sbb
sbb
xchg
stos
dec
inc
movs
pop
rcr
jne
jno
jnp
or
mov
sahf
jl
aam
shr
(bad)
repnz
or
test
jo
div
jns
outs
push
dec
out
sub
jg
lods
xchg
cmp
pop
nop
lock
inc
and
shr
add
xlat
dec
and
inc
xchg
add
in
push
mov
cmp
out
mov
int3
jmp
push
inc
xor
retf
iret
cmc
sub
and
inc
test
mov
test
out
aas
lds
ins
pop
popf
ins
lock
retf
dec
jbe
inc
out
mov
jo
fcmovnbe
(bad)
int
test
cmc
pop
and
cld
pop
and
adc
cmp
pop
adc
inc
push
nop
cmp
jg
out
retf
cmp
add
sbb
push
cdq
shufps
stc
arpl
sub
add
outs
rcr
popa
inc
xor
bound
jb
lods
out
jae
adc
inc
aas
pop
ss
pop
dec
or
add
data16
or
add
mov
fcmovb
jbe
sbb
orps
jo
xchg
aaa
fwait
in
xor
adc
or
xor
cli
test
scas
sub
xlat
call
adc
sbb
nop
add
push
test
cmps
xchg
aas
push
and
xor
shr
rcr
jmp
mov
sar
nop
xor
xor
pop
add
mov
push
mov
rol
xchg
push
pushf
cld
gs
loopne
mov
jecxz
dec
xor
push
popf
or
xchg
sbb
xchg
call
loopne
cli
sub
pop
retf
ror
add
dec
leave
and
sub
sbb
loopne
out
or
xchg
shl
out
cld
or
cmps
aas
sti
ret
loope
cld
push
lds
(bad)
cmc
out
push
push
jb
jecxz
mov
xchg
mov
mov
jle
xchg
and
xor
jno
push
xchg
xor
xchg
ficomp
push
(bad)
adc
das
cmp
mov
push
xor
std
or
ja
ss
test
sub
and
xchg
push
jns
lahf
inc
mov
sub
aaa
fist
mov
mov
add
outs
js
lgs
adc
loope
lea
jl
into
dec
loop
push
pop
idiv
sub
inc
inc
jbe
xor
adc
mov
call
dec
jns
jnp
enter
(bad)
push
iret
or
fs
je
(bad)
sbb
mov
sub
dec
out
mov
pop
push
cld
pop
loop
jb
out
je
mov
test
sbb
popa
mov
aas
out
mov
xchg
repnz
loope
fist
shl
call
push
and
adc
idiv
jle
push
out
xor
mov
out
mov
mov
xchg
mov
mov
inc
mov
dec
into
mov
xchg
shl
xchg
push
clc
nop
dec
rol
add
push
ja
adc
hlt
test
mov
and
retf
pop
mov
push
push
or
sahf
not
or
xchg
rol
dec
pop
data16
add
or
sbb
sub
cmc
pop
mov
mov
and
iret
leave
mov
ins
test
mov
push
inc
js
adc
push
mov
shl
hlt
lods
repz
dec
xor
ret
mov
call
cmp
mov
std
mov
sbb
inc
lods
mov
icebp
repz
sbb
lock
mov
icebp
repz
icebp
or
or
int3
mov
test
shl
data16
retf
loop
fldcw
jne
mov
shl
std
inc
jle
mov
push
add
test
pop
(bad)
mov
retf
or
lods
scas
xor
jb
repz
dec
pop
xchg
cs
repz
dec
pop
xchg
push
jnp
mov
cmps
icebp
popf
pop
imul
aad
cmps
or
jmp
sbb
inc
jle
jns
retf
cs
in
and
fistp
pop
dec
dec
mov
add
addr16
push
sbb
sbb
mov
fs
in
or
inc
add
xchg
(bad)
popf
add
rcl
rcl
popa
je
mov
sbb
push
or
xor
imul
dec
xchg
mov
pop
pop
sbb
(bad)
jle
inc
in
or
inc
cmps
fs
xor
scas
pop
in
add
add
add
mov
sti
cmp
dec
bound
mov
jno
inc
or
add
mov
(bad)
cmc
jecxz
(bad)
xchg
outs
das
jne
loope
cmp
not
fnstenv
rcl
das
imul
mov
stos
mov
adc
xor
xor
push
jecxz
mov
fs
sbb
int3
jb
pop
not
sbb
push
pop
sar
lods
test
clc
dec
rol
std
pop
test
rcr
dec
shl
(bad)
mov
push
call
vmovntpd
out
sbb
xchg
pop
sub
imul
sbb
sub
or
test
test
and
pop
mov
mov
add
pop
shl
push
push
push
push
retf
xchg
inc
mov
mov
out
cmp
fld
pop
inc
sub
mov
mov
push
or
cdq
shl
in
cmp
adc
das
cmp
or
xchg
jbe
mov
(bad)
add
adc
dec
fiadd
xor
mov
push
xchg
sar
test
and
mov
and
daa
std
jl
and
adc
add
adc
and
pop
jo
pusha
mov
jno
sti
or
gs
das
xchg
loopne
(bad)
push
aaa
icebp
lock
jecxz
iret
jge
mov
sbb
and
adc
lock
jno
xor
pop
adc
mov
fwait
mov
inc
movs
mov
pop
mov
imul
push
jmp
xor
mov
cs
add
out
inc
jo
inc
pusha
cwde
imul
dec
popa
ins
and
xor
xchg
sbb
push
mov
mov
call
test
adc
(bad)
repz
or
sbb
push
or
xchg
push
inc
out
xor
lea
sti
xor
aas
jo
adc
hlt
mov
shl
mov
hlt
mov
lock
cmp
pop
add
shl
adc
adc
jnp
ja
(bad)
sbb
cmc
inc
clc
pop
sub
sub
sub
jge
cmp
aas
cmp
push
sub
push
sbb
retf
into
aam
adc
push
and
sub
(bad)
jnp
sub
inc
or
sahf
xchg
ret
pop
or
sar
push
aaa
pop
xchg
push
push
or
shl
add
retf
or
rol
fbstp
in
push
adc
les
xor
sar
ficom
or
pop
mov
das
xchg
nop
les
push
push
or
mov
xor
push
adc
out
or
dec
mov
cld
adc
push
clc
test
xor
(bad)
into
ud2
lahf
clc
adc
movs
add
mov
jecxz
push
in
push
adc
adc
adc
sar
mov
jmp
cmp
sbb
or
dec
pop
xchg
cmp
in
mov
ud2
xchg
push
adc
(bad)
repz
in
cdq
rcr
div
or
adc
add
bswap
std
sbb
jecxz
aas
popf
inc
call
cmc
or
or
cwde
push
jne
loopne
mov
stos
cld
cdq
shl
add
popa
mov
xchg
sbb
xchg
mov
push
cld
retf
sub
sbb
dec
cmps
mov
fimul
or
cmp
(bad)
aas
popf
mov
jne
mov
adc
pop
push
adc
inc
cmp
dec
sbb
mov
mov
repz
clc
hlt
and
jno
movs
xlat
mov
and
push
fwait
ss
lock
push
pop
mov
movs
cmp
icebp
mov
test
mov
adc
and
es
pop
loopne
dec
dec
adc
pop
popf
add
add
xchg
test
push
sub
mov
mov
adc
mov
adc
push
retf
or
xchg
cdq
or
or
push
sbb
fisubr
mov
adc
retf
xor
add
hlt
mov
imul
int3
dec
lahf
push
clc
adc
dec
sbb
jbe
add
or
dec
mov
pop
imul
dec
out
push
jmp
movs
mov
(bad)
icebp
(bad)
pop
in
(bad)
dec
or
or
cmps
adc
bound
cdq
sbb
std
xchg
pop
adc
cmp
push
sbb
xor
adc
sbb
test
popf
add
or
mov
cmps
ja
cmp
or
lock
sub
cmp
xchg
add
mov
sar
mov
inc
inc
fwait
pop
add
pushf
js
(bad)
sbb
lds
adc
add
test
std
add
in
xchg
jne
add
cdq
pop
sbb
fmul
mov
pop
arpl
dec
cld
jns
cmps
neg
aas
daa
fst
lods
mov
push
cmp
pop
add
nop
stc
and
pop
mov
sub
outs
repz
loopne
test
cs
or
test
loopne
fnstsw
inc
mov
aam
add
fcomp
push
in
jae
adc
addr16
call
mov
sub
xchg
fadd
sti
std
div
push
aas
das
dec
or
lds
or
cli
imul
int3
dec
xchg
cmp
dec
push
xchg
mov
retf
jb
sub
sbb
and
repz
dec
rol
and
idiv
push
out
jnp
je
pop
fldcw
sbb
xchg
lds
test
int
sti
pop
es
mov
movs
xchg
gs
(bad)
lahf
or
jle
ficom
es
jle
push
adc
(bad)
mov
xchg
pop
jne
in
outs
into
jmp
jmp
out
cmp
xor
or
es
mov
inc
cld
enter
es
jmp
jmp
sar
sbb
loopne
outs
into
lods
lds
int3
push
fdivr
pop
pushf
cld
rcr
fsub
sbb
hlt
rol
in
cld
enter
es
push
sub
jmp
mov
out
test
or
dec
mov
hlt
xchg
xchg
dec
sub
or
xor
push
adc
in
cmp
jno
inc
and
mov
sbb
mov
adc
das
add
adc
shl
cdq
pop
xor
mov
add
jl
jno
push
imul
fcmovnu
fdiv
aam
es
call
add
or
arpl
sbb
popf
fwait
ret
shl
test
cld
sub
ret
cmc
out
sub
push
rcr
jge
xor
push
popf
xor
cwde
int3
push
xchg
xor
push
in
icebp
arpl
mov
add
adc
add
sbb
jno
std
clc
outs
sub
repz
fwait
and
in
fidivr
jmp
push
test
aas
cmps
pop
test
or
jmp
bnd
sbb
(bad)
fcom
cld
rcl
cld
fcom
mov
sub
sahf
jb
cld
or
or
adc
xchg
(bad)
cmp
aas
add
test
adc
push
add
ret
sub
or
jno
cld
sbb
jb
jp
pop
(bad)
lock
lods
inc
or
sbb
sub
sbb
pop
push
and
mov
sub
mov
loop
stos
repz
pushf
push
fmul
stos
pop
adc
dec
pop
xor
hlt
hlt
mov
imul
rol
je
and
lock
das
and
loopne
int
sub
iret
test
stc
enter
or
cmp
mov
mov
clc
es
lds
pusha
push
arpl
mov
push
push
repz
xchg
or
mov
mov
rcl
xchg
sub
loopne
std
inc
push
push
pop
sahf
in
test
cmps
iret
dec
mov
popa
gs
icebp
(bad)
loopne
mov
into
mov
fnstsw
call
hlt
mov
int3
sbb
test
ins
sbb
aam
or
jmp
sbb
fdiv
sbb
or
(bad)
xor
cli
int
aas
pop
mov
cdq
call
xchg
inc
adc
adc
(bad)
adc
cdq
cwde
mov
pop
add
xchg
or
adc
lock
sbb
test
hlt
adc
jns
xchg
adc
add
or
push
adc
sbb
mov
adc
sub
test
jmp
cmp
and
push
loopne
gs
xlat
in
sbb
mov
xchg
push
or
imul
sar
popf
popa
push
int3
push
aam
pop
pushf
cld
shl
icebp
bound
shl
and
mov
xor
gs
icebp
test
hlt
xchg
fsubr
loope
imul
mov
adc
jge
push
outs
ja
sbb
or
test
fdivp
sub
lods
popf
jb
stos
arpl
pop
xor
test
jae
jb
jg
xchg
pop
dec
xchg
out
das
cs
jle
loope
cmc
test
inc
adc
stc
mov
cwde
sti
call
sti
enter
or
cmp
adc
dec
rsm
dec
in
sbb
fdivr
xor
(bad)
(bad)
scas
les
mov
xchg
and
mov
or
push
push
das
mov
jle
and
ins
repz
loopne
add
pop
mov
xchg
dec
adc
int
fwait
sub
jg
ror
mov
jb
jb
xlat
xor
xor
dec
xor
outs
es
and
loopne
cs
or
jno
inc
repz
mov
inc
mov
mov
jb
in
mov
or
xchg
pop
mov
push
in
dec
pop
ret
pop
mov
imul
(bad)
jle
cmp
adc
enter
mov
inc
ror
mov
out
sbb
mov
add
or
mov
lock
or
jno
ror
or
leave
in
aam
dec
mov
in
(bad)
call
push
xor
mov
and
cmps
mov
arpl
std
dec
ja
out
or
mov
xchg
push
xor
das
push
inc
pop
pop
jne
jl
or
gs
in
aaa
pop
push
adc
jnp
in
loope
adc
ja
out
enter
mov
nop
rol
scas
add
add
test
mov
or
dec
pusha
or
clc
pusha
xor
dec
daa
sub
and
sub
out
js
popf
inc
xor
cli
xchg
hlt
hlt
jo
sub
jbe
xor
in
scas
daa
daa
daa
push
popf
sub
popa
xchg
dec
retf
dec
or
mov
mov
sbb
sub
pushf
pop
adc
mov
aad
fs
push
and
mov
push
or
pop
sbb
xor
and
cli
cmp
in
push
and
pushf
xlat
push
lods
(bad)
fsub
mul
out
outs
sbb
bound
and
sbb
xor
(bad)
push
and
cmp
(bad)
bnd
push
or
push
and
add
popa
xchg
int3
inc
sbb
imul
sub
fcomp
in
mov
outs
(bad)
in
test
adc
out
jge
je
xchg
mov
xor
test
pop
outs
xor
adc
cs
xchg
inc
fist
lods
in
push
adc
xchg
push
mov
and
jno
mov
rcl
jge
popf
pusha
xor
and
sbb
dec
and
push
adc
hlt
push
push
or
ficomp
shr
add
push
loopne
loop
mov
or
push
mov
rcl
lds
adc
repz
fcomp
and
mov
hlt
and
jecxz
aam
pop
mul
daa
daa
pusha
das
push
pop
mov
inc
jno
jmp
or
scas
aad
adc
push
xchg
in
push
adc
cdq
ret
gs
mov
outs
lods
sub
fcomp
cmps
rcl
push
xchg
inc
adc
xlat
xor
int
or
jo
xchg
test
fwait
inc
sub
shl
xchg
and
mov
mov
popf
pop
lods
jmp
stc
je
test
sbb
in
inc
sbb
inc
cwde
fld
inc
enter
push
and
pop
mov
daa
daa
pusha
mov
mov
daa
daa
pop
jns
mov
not
lahf
fcom
shr
scas
mov
pusha
mov
jo
lods
xor
sbb
sub
push
arpl
mov
sub
add
jle
cmc
out
mov
imul
jg
push
or
icebp
scas
je
mov
mov
jge
icebp
push
mov
adc
cmp
pusha
inc
cld
test
dec
inc
fsubrp
xor
adc
dec
js
pop
or
lahf
xor
dec
add
jge
xchg
dec
in
inc
mov
add
inc
sar
sbb
or
push
pcmpgtd
adc
push
or
add
shr
iret
jg
adc
and
push
cmp
test
add
mov
pop
ja
mov
cmp
cli
sti
cld
mov
cld
movs
div
in
inc
jge
out
scas
addr16
in
inc
add
call
enter
cdq
div
push
jbe
mov
call
(bad)
jg
adc
xchg
int
lods
jge
out
cmp
jbe
mov
mov
inc
or
jbe
jmp
xchg
lock
cli
loopne
ja
mov
repnz
fild
or
in
pop
popa
and
ret
add
cwde
cwde
hlt
inc
dec
mov
adc
aad
sub
cmp
icebp
push
das
lds
aam
jmp
lods
or
adc
in
clc
es
ins
pop
pop
push
mov
xor
push
(bad)
push
cmc
ss
shr
cmc
hlt
stos
in
push
adc
arpl
cs
dec
popa
sahf
inc
add
xchg
cmc
stos
or
pop
dec
xchg
jo
fisttp
or
mov
mov
clc
sbb
test
or
xchg
push
pop
ret
movs
and
adc
les
stc
or
cli
mov
xchg
pop
push
or
dec
sbb
mov
pop
add
dec
jecxz
aam
cmps
popf
cmps
xlat
es
inc
lea
test
push
test
push
test
test
call
cs
pop
sbb
cmps
sub
push
es
fidivr
cmp
dec
mov
pop
repz
dec
out
cmp
cmc
mov
popf
call
pusha
data16
out
pop
dec
ret
xchg
or
ins
std
movs
xchg
(bad)
out
push
pcmpeqb
pop
pop
cmc
sbb
xchg
mov
sbb
cdq
adc
sahf
out
jbe
add
out
dec
outs
jbe
ss
into
inc
lods
inc
jmp
mov
sbb
repz
retf
mov
xchg
sub
mov
and
push
ja
and
icebp
sbb
das
mov
mov
in
fisttp
test
repz
push
xlat
mov
mov
jb
call
movs
lock
cli
pop
mov
inc
jp
sub
dec
in
inc
aam
push
retf
call
xlat
(bad)
retf
pop
sbb
sbb
cmp
outs
(bad)
cli
pusha
loope
mov
mov
jb
xchg
jg
movs
cmp
(bad)
cmc
jecxz
inc
xchg
xchg
popf
cmc
gs
mov
imul
imul
cmc
es
aad
or
ret
or
rol
mov
or
stos
dec
aam
(bad)
inc
je
xchg
cwde
jle
mov
(bad)
cmc
and
jnp
or
inc
fild
or
xchg
dec
pop
or
mov
cmp
out
or
jb
shr
or
and
dec
add
fdivp
dec
iret
ins
jne
add
sahf
mov
cdq
jg
outs
cmp
add
jno
add
std
add
pop
clc
jne
mov
inc
call
je
dec
nop
cmp
cmp
adc
jno
jp
pop
jnp
or
js
cmps
cld
call
or
imul
cmp
xor
mov
in
cwde
mov
or
or
(bad)
aaa
(bad)
sbb
jl
pop
daa
pop
sbb
div
hlt
adc
xor
icebp
push
mov
cmc
ds
leave
mov
cmc
hlt
mov
add
out
jge
repnz
pop
mov
call
outs
jnp
push
lods
and
in
cmp
xlat
pop
jnp
daa
daa
push
test
popa
movs
sbb
cwde
aad
push
pop
xchg
dec
add
daa
pop
and
lock
and
add
dec
jne
ds
and
xlat
pop
mov
daa
sahf
sub
inc
mov
push
mov
imul
or
rcr
push
xor
test
repz
adc
in
jmp
xor
push
loope
sub
push
test
push
xchg
cmp
outs
rcr
sahf
call
fld
xchg
add
xor
xchg
xchg
xchg
test
push
enter
inc
fwait
inc
pop
mov
sub
push
ret
or
adc
dec
pop
pop
popa
cmps
loop
rcl
xchg
xchg
xlat
popa
shr
push
xor
and
push
movs
dec
pop
fidiv
and
fwait
or
xor
loop
hlt
xchg
popa
in
fist
mov
or
lods
sub
cwde
mov
or
daa
loopne
xchg
imul
cmps
call
popa
inc
xor
push
movs
idiv
mov
adc
fdivrp
mov
dec
mov
movs
jnp
xchg
(bad)
fisttp
je
mov
inc
stos
push
add
in
push
cmp
add
in
sub
sub
int
sbb
sbb
repz
(bad)
out
in
xor
jb
xchg
(bad)
neg
out
pop
sub
push
or
(bad)
call
push
mov
ja
in
fwait
xchg
popa
dec
sbb
test
daa
and
daa
pop
sbb
aas
retf
(bad)
adc
fld
loope
and
sub
push
xchg
sub
aam
dec
add
ja
xchg
jno
out
or
or
xchg
push
pop
mov
loope
lock
in
sbb
test
stc
jl
out
xchg
popf
mov
ror
fcom
add
or
jo
out
add
pop
or
jecxz
loop
adc
std
fidivr
fmul
retf
mov
mov
xor
xor
sub
sbb
adc
sbb
or
jo
xchg
sub
aad
(bad)
(bad)
dec
inc
pop
and
mov
jne
mov
ret
je
sub
js
(bad)
retf
repz
shl
in
out
push
das
imul
jb
sub
nop
jge
cmps
cmp
xchg
cwde
data16
fwait
cli
loopne
mov
pop
jmp
repz
pusha
fcom
aam
stos
pop
rcl
push
mov
jo
mov
xchg
xchg
xchg
dec
xor
push
adc
mov
scas
mov
add
pop
sbb
mov
pop
call
fucomip
xlat
xchg
sti
call
push
retf
jns
es
pushf
xchg
popa
clc
sbb
outs
push
jne
icebp
xor
xor
loop
sbb
push
dec
sub
repz
cmp
adc
repz
or
pop
icebp
jbe
lea
push
xchg
pushf
jb
and
test
inc
(bad)
sbb
or
dec
ss
jb
mov
pop
dec
repnz
jbe
xor
fwait
scas
mov
and
pushf
mov
add
out
das
add
mov
icebp
repnz
add
clc
jp
in
into
jb
dec
adc
sbb
pop
das
fcomp
fsubr
(bad)
adc
jno
outs
sbb
shl
xchg
adc
(bad)
cs
sbb
das
xchg
dec
sbb
je
(bad)
fcomp
xlat
pop
or
icebp
add
or
into
inc
loop
fldenv
js
fcomp
lock
push
mov
sub
dec
movs
in
lea
out
mov
xlat
pop
rcl
pmuludq
jo
fist
adc
fcom
push
hlt
mov
push
sbb
mov
sub
and
push
cmp
fsub
js
test
call
movs
sub
(bad)
fisttp
ins
push
mov
fdivr
sub
jmp
push
pop
adc
xchg
out
popf
(bad)
xor
iret
sbb
sbb
mov
repz
test
sbb
sbb
fwait
je
in
std
std
test
cmp
xor
cmp
fsub
mov
inc
sub
sub
xchg
mov
mov
push
cdq
loope
or
sub
dec
dec
(bad)
adc
fdiv
push
sub
loope
push
add
sbb
cmp
hlt
outs
and
fcomp
push
mov
lock
jmp
icebp
mov
or
xchg
sub
or
add
rep
xor
imul
and
fcomp
or
adc
adc
retf
mov
sub
adc
pop
add
stos
cs
data16
ds
xchg
push
mov
test
add
and
icebp
jle
aas
cmp
sub
cmp
xchg
xchg
push
pop
mov
arpl
mov
and
loop
mov
inc
shl
xor
retf
and
xor
daa
daa
lea
mov
ret
jo
ja
(bad)
clc
popf
pop
fisubr
fidivr
xchg
add
ins
retf
arpl
pop
outs
add
jmp
fs
loop
jne
repz
dec
bound
sub
ss
pop
sub
ins
imul
adc
inc
les
mov
mov
dec
rol
call
repz
dec
inc
lock
sub
adc
jmp
(bad)
out
adc
mov
in
or
dec
push
push
std
push
int3
aad
int
int
movs
fcom
stos
lea
out
in
push
adc
sbb
stos
adc
cld
mov
jb
sti
es
ret
dec
loope
repz
loopne
or
sbb
jecxz
fcomp
fcomp
fcom
gs
jne
icebp
or
imul
adc
scas
dec
push
mov
push
call
push
fwait
fwait
enter
aad
mov
imul
add
sbb
in
push
rol
shl
xor
scas
hlt
ja
nop
in
daa
mov
jo
and
or
xor
cmps
in
aad
hlt
ficomp
test
or
es
sbb
jo
hlt
ins
inc
xlat
mov
adc
js
mov
lock
adc
sbb
jge
sub
repz
mov
sbb
sub
cld
shl
data16
daa
push
and
lock
ficom
inc
mov
hlt
sbb
pop
test
stos
ret
add
loopne
push
cdq
aas
xchg
(bad)
es
xor
mov
mov
fimul
je
je
mov
imul
mov
call
nop
(bad)
fwait
xor
dec
icebp
or
rol
and
or
idiv
ins
imul
arpl
pop
inc
sti
lea
sub
add
jnp
fmul
inc
icebp
sti
and
ret
les
jle
add
cmps
sbb
not
movs
push
ja
adc
hlt
xor
call
sbb
xchg
adc
mov
dec
js
and
add
pop
jp
fisttp
arpl
jmp
call
pop
mov
pop
imul
cmp
daa
daa
pop
repz
dec
ins
nop
jl
xchg
ficom
jge
jge
jno
mov
mov
xchg
out
mov
xchg
inc
aas
jno
repnz
adc
repz
pop
and
pop
mov
pop
(bad)
daa
daa
daa
xor
pusha
xchg
icebp
jecxz
sub
into
pop
popf
push
cmc
inc
adc
pop
push
arpl
jmp
add
imul
mul
push
push
jge
(bad)
xchg
xor
nop
push
pop
and
repz
push
xchg
sub
mov
jo
sar
es
daa
bound
rcr
mov
push
jecxz
shr
xor
and
jle
jl
xor
xchg
loope
dec
call
or
stos
je
rcr
add
daa
pop
and
movs
es
daa
call
loopne
test
dec
cdq
push
sub
test
imul
xchg
aam
daa
xor
and
(bad)
fimul
fcomp
fdiv
cmp
and
(bad)
fimul
fcomp
fcom
xor
cld
xor
push
pushf
jmp
retf
je
adc
add
ins
cmp
ror
sub
push
imul
xor
push
xchg
xor
adc
cmc
test
inc
xchg
add
popa
loope
icebp
xchg
dec
gs
jne
xlat
sbb
push
popf
xor
xchg
jmp
loop
lahf
sar
push
retf
and
xchg
clc
xor
aam
daa
cmp
inc
xor
sbb
and
inc
add
es
pop
ja
dec
push
call
add
sbb
in
rcr
pop
adc
inc
mov
sbb
les
mov
mul
push
xchg
or
or
pop
mov
xor
dec
push
sub
mov
int3
jne
mov
cmp
push
stos
push
push
popa
ret
(bad)
div
cmp
sub
sahf
and
mov
je
repz
and
fwait
pop
rcr
(bad)
fdiv
or
or
and
mov
pop
mov
xchg
pop
ja
loope
aaa
mov
pop
adc
or
mov
or
cdq
jbe
cs
sbb
mov
and
xlat
(bad)
pop
fcomp
fcomp
fsub
out
xor
cmc
sahf
data16
ss
lods
(bad)
cld
clc
mov
mov
xor
mov
jb
push
pop
mov
xor
push
xor
mov
dec
jne
xchg
sahf
out
call
test
dec
pop
dec
lock
ret
xchg
cs
scas
adc
add
or
jo
movs
xor
rcr
dec
ins
or
sbb
dec
dec
inc
out
xchg
xchg
mov
or
fwait
push
add
je
mov
xchg
inc
sar
adc
pop
sub
or
mov
and
enter
sub
iret
sub
mov
xor
or
hlt
hlt
push
jge
push
xor
data16
cmp
mov
jmp
lods
push
mov
dec
jae
xor
les
pop
mov
repz
in
test
clc
outs
lods
xchg
mov
mov
sahf
cmps
rol
out
lahf
call
cmp
outs
jno
cmps
cmc
in
pop
mov
(bad)
test
fdiv
in
sti
or
cmps
mov
sbb
xchg
jmp
sub
pop
xchg
iret
out
adc
mov
rcl
mov
movs
cmp
dec
fs
mov
enter
mov
ins
in
adc
hlt
or
mov
inc
ss
or
test
jb
(bad)
popf
add
mov
adc
cmp
sti
sbb
je
jb
mov
xchg
xor
nop
outs
mov
icebp
imul
(bad)
fcomp
aad
shr
sbb
sbb
iret
pop
daa
sbb
fst
les
ret
jmp
(bad)
mov
cmp
aas
xchg
inc
pusha
xor
cmps
(bad)
loopne
xlat
aas
jnp
inc
or
(bad)
arpl
fcomp
cmp
nop
dec
xlat
push
sub
fcomp
loopne
nop
push
jns
neg
xchg
or
xchg
mov
adc
xchg
add
movs
lods
jbe
adc
and
fwait
pop
aam
xor
and
xor
adc
cmp
pop
pushf
fcom
aam
push
repz
or
rol
fcomp
fcomp
fcomp
(bad)
xor
in
(bad)
adc
fist
daa
daa
mov
xchg
jb
out
push
sbb
into
mov
fist
loope
push
das
leave
neg
outs
adc
popf
jo
cmps
pushf
mov
pop
adc
stos
iret
push
or
mov
cmc
jle
(bad)
outs
fistp
pop
sbb
addr16
pop
push
mov
scas
jmp
xchg
iret
add
push
out
repz
addr16
xor
daa
daa
loopne
sbb
out
aaa
mov
stc
mov
repz
fld
xchg
xor
push
ja
mov
adc
(bad)
jle
(bad)
push
ror
mov
nop
mov
dec
push
(bad)
out
loop
adc
xchg
gs
pop
movs
and
hlt
jge
mov
mov
retf
lea
push
xchg
icebp
retf
sbb
nop
add
mov
je
and
jae
clc
pop
es
test
push
pop
adc
mov
mov
loopne
or
or
cmp
popa
inc
call
pop
pop
jbe
ja
out
call
fcom
push
lods
ins
push
mov
call
mov
popf
xchg
jne
ins
mov
je
or
lock
aas
or
retf
mov
shl
stc
jecxz
std
fdivrp
mov
mov
out
push
push
nop
cmp
push
fwait
aam
test
cmc
scas
cmp
sub
mov
or
mov
xchg
jmp
mov
scas
imul
xor
sti
sahf
xchg
in
push
adc
outs
mov
and
loop
jle
repz
loopne
mov
xor
or
sahf
sahf
jae
xchg
aam
shl
cld
in
push
adc
pop
enter
stos
jp
mov
jb
sti
inc
push
repz
icebp
repz
loopne
add
cmp
jle
jae
sbb
dec
adc
imul
aas
jmp
leave
bound
xchg
cmp
pop
adc
sub
jb
dec
jne
push
mov
call
mov
xor
das
add
lea
inc
std
in
(bad)
out
xor
push
test
add
mov
fnstenv
scas
mov
sub
sbb
jecxz
add
jmp
cs
jg
or
xchg
test
in
xchg
mov
jecxz
retf
jle
not
or
hlt
xchg
cmps
or
or
sub
jmp
cmp
in
ror
mov
pop
mov
cmp
sbb
rcl
std
in
push
sbb
mov
fwait
mov
shl
inc
das
pop
gs
ret
imul
and
cmp
sbb
mov
icebp
cmc
fwait
loop
add
cmp
inc
ins
xchg
lock
pop
or
or
hlt
mov
mov
and
aam
sbb
cs
push
sbb
fadd
aad
ja
and
pop
loopne
pop
mov
str
mov
dec
mov
xor
xchg
xor
inc
add
xor
pop
mov
xchg
cmc
and
comiss
pop
or
jb
mov
in
sbb
sbb
jmp
mov
mov
shl
pop
sbb
sub
hlt
les
neg
xor
in
add
cmp
aas
sub
jg
iret
imul
sub
aas
add
(bad)
rol
xor
cdq
xchg
inc
cwde
sub
pop
hlt
hlt
jmp
or
daa
pop
pushf
cld
movs
fcomp
popa
xchg
ss
xor
add
or
mov
mov
daa
jl
ret
stos
pop
ror
retf
push
inc
push
bnd
sbb
icebp
repz
cmp
sbb
mov
add
jmp
lds
jne
(bad)
lea
mov
ins
mov
vmread
sbb
mov
into
add
lods
(bad)
pop
(bad)
fdivr
sbb
ret
inc
gs
out
or
jo
push
cmp
xor
jb
(bad)
aas
fist
xchg
fistp
pushf
xor
or
mov
ret
mov
dec
inc
dec
aam
pushf
cld
les
cld
shr
aad
movs
stos
or
adc
push
adc
mov
sbb
lock
xchg
xcrypt-ecb
cmps
into
xor
aam
jle
pop
movs
dec
dec
stos
push
inc
sbb
xchg
int3
xor
cmp
clc
mov
push
add
jl
repz
repnz
or
nop
es
shl
mov
xor
inc
ficom
jbe
add
jp
jle
call
scas
outs
jns
xchg
rol
shl
mov
int3
(bad)
push
mov
jmp
jle
ins
sbb
inc
mov
int3
mov
fisttp
imul
sub
jge
in
call
cld
mov
and
dec
pop
(bad)
pushf
and
jg
cli
jecxz
pop
cld
mov
mov
inc
jns
outs
fwait
xor
nop
or
push
adc
xchg
dec
xor
push
adc
push
xchg
loop
xchg
jmp
xchg
lea
add
je
adc
inc
mov
sub
dec
add
cld
xor
mov
mov
icebp
(bad)
cli
adc
jb
cmc
mov
cmp
mov
in
jno
js
enter
xor
in
es
adc
in
mov
mov
(bad)
imul
(bad)
hlt
pop
or
jbe
xchg
idiv
call
das
push
xchg
(bad)
and
inc
pop
pop
repnz
(bad)
mov
and
pop
ss
je
push
sub
add
cld
in
add
cmc
adc
or
sbb
pop
sahf
mov
sbb
add
adc
(bad)
shl
retf
sar
hlt
out
mov
sar
hlt
push
xchg
or
int
jl
adc
aam
push
loopne
xchg
icebp
sbb
cwde
repnz
xor
movs
cdq
scas
aas
dec
push
rol
jns
mov
add
mov
jle
dec
clc
mov
and
ja
adc
in
leave
xchg
call
out
mov
fs
sbb
pop
cmp
add
inc
(bad)
jl
xor
xchg
push
push
jb
jbe
movups
xor
ficom
leave
adc
xchg
je
sbb
mov
repz
adc
sub
add
fadd
mov
lods
retf
in
add
push
out
sbb
cmp
cmps
push
mov
ja
loop
je
xchg
sub
(bad)
rcl
sbb
lods
in
leave
xchg
push
xor
push
add
lods
push
aam
pop
adc
jmp
cmps
sbb
jno
sbb
pop
out
div
and
adc
(bad)
pusha
jae
fstp
sbb
jge
ret
loop
mov
bound
test
adc
leave
add
mov
sbb
iret
fwait
inc
cld
mov
in
mov
mov
jnp
dec
shl
xchg
mov
scas
xor
loopne
xor
lahf
stos
shl
cmp
jne
mov
add
scas
or
lea
mov
dec
call
xchg
aad
(bad)
in
mov
cmp
add
pop
fisub
mov
inc
and
add
fnstenv
adc
rol
jae
cli
mul
rol
fiadd
js
jle
xchg
aaa
dec
call
push
adc
push
add
fwait
and
das
ud2
xchg
push
hlt
push
push
sbb
push
fdiv
add
inc
std
pop
je
mov
fimul
sbb
or
jp
push
repz
mov
sbb
add
or
or
ins
cmp
cmp
or
dec
pop
test
mov
jmp
and
or
xchg
pop
(bad)
xchg
push
jnp
loopne
xor
push
test
cwde
fprem1
jg
push
mov
repnz
dec
rcl
pop
or
sbb
clc
or
and
rcr
inc
push
cli
imul
xchg
push
sar
mov
sbb
sbb
xchg
sbb
add
push
push
or
fcom
cld
aam
xchg
lea
and
or
jno
push
push
jae
in
mov
sub
xchg
pop
sbb
fld
(bad)
inc
daa
jae
xor
stc
mov
push
mov
xchg
pop
out
dec
(bad)
dec
or
in
push
movs
adc
fisubr
xlat
pop
mov
iret
(bad)
popa
test
mov
into
inc
push
and
jl
(bad)
xlat
pop
xchg
pushf
push
retw
scas
sub
mov
stos
test
aad
xchg
or
in
sub
in
lods
sti
push
ret
or
pop
mov
lahf
int
or
dec
mov
pop
(bad)
dec
ins
mov
and
xchg
sbb
adc
inc
xchg
push
pop
lock
mul
stc
pop
fist
int3
inc
test
sti
or
dec
fcomp
fcomp
pushf
cld
fsub
icebp
bound
lods
lock
mov
xor
lods
ins
je
in
pop
jne
in
lock
sbb
inc
iret
cmp
das
out
and
retf
popf
mov
fcomp
fcom
pop
inc
and
daa
fld
out
loope
out
or
or
retf
shl
jecxz
pop
mov
adc
jne
imul
sub
xchg
xor
mov
daa
daa
pusha
inc
push
mov
push
pop
mov
xchg
fucomi
iret
or
stc
je
add
test
aaa
xchg
dec
push
sbb
fmul
mov
clc
push
xchg
xor
rcr
into
adc
mov
lock
xchg
xor
adc
arpl
jae
jns
and
mov
xor
lods
push
call
adc
push
mov
ret
sub
sub
lahf
mov
fcomp
mov
lock
in
rcl
ror
push
and
mov
push
push
xor
jno
xor
inc
dec
sub
lock
pop
dec
sbb
repz
jno
jge
lock
or
mov
xchg
push
cmc
arpl
dec
add
or
sub
enter
stc
or
loop
movs
jmp
pop
cmp
test
loopne
(bad)
xchg
mov
clc
adc
or
cmc
loope
xchg
fistp
je
inc
retf
es
and
add
dec
dec
xchg
fstp
xor
dec
xchg
pushf
xlat
jns
es
push
stos
add
popf
cmp
and
push
inc
int3
movs
jge
push
cli
inc
cmp
adc
xchg
fdivr
adc
shl
repz
dec
or
mov
movs
stc
sbb
add
leave
pop
out
outs
je
mov
inc
stc
jbe
dec
(bad)
loop
mov
shl
repz
xor
push
dec
repnz
dec
(bad)
cmp
cmp
mov
adc
sbb
or
clc
sub
cmps
sbb
sbb
or
or
test
pop
cmp
mov
and
retf
dec
test
xchg
adc
leave
jbe
jl
xor
sbb
loope
jb
repz
push
push
jp
aas
lahf
push
or
or
jno
jmp
mov
stc
outs
aas
data16
xchg
add
fdivr
gs
or
sub
jp
dec
add
xchg
sub
adc
jl
cmp
popa
into
data16
mov
int3
retf
nop
int3
les
jns
xchg
mov
pop
dec
mov
popf
xor
mov
cwde
push
adc
pop
cwde
es
daa
push
xchg
xor
and
js
inc
addr16
add
sub
adc
xor
(bad)
retf
push
jno
out
sub
stc
and
xchg
out
push
jmp
daa
daa
pusha
add
icebp
xor
and
je
cli
adc
jno
push
inc
enter
scas
sub
repz
mov
div
xchg
xchg
mov
(bad)
ins
repz
adc
fimul
xlat
cmp
fwait
sbb
xchg
mov
(bad)
sbb
mov
mov
sbb
jle
push
jle
aas
xchg
mov
sets
ins
ja
and
retf
test
loopne
int3
ret
push
push
and
stos
adc
cmp
or
in
push
dec
jo
(bad)
in
in
add
dec
jecxz
and
jo
xor
pop
xchg
and
fmulp
cwde
std
(bad)
jl
push
hlt
xor
dec
imul
cld
and
jmp
sbb
jmp
jmp
cld
clc
push
fdivr
cmps
rcl
data16
add
xor
pop
mov
xor
xchg
adc
rcr
cld
fistp
xor
lods
ins
jmp
in
push
adc
jb
push
push
stos
lods
rcl
ins
cmp
sbb
or
shr
xchg
or
or
or
push
popf
(bad)
scas
pop
fild
(bad)
xor
push
pushf
cld
int3
push
add
test
stc
xlat
shl
sbb
adc
hlt
movs
cs
mov
repz
scas
rcr
lahf
enter
adc
lahf
shl
push
adc
das
pop
adc
jmp
jmp
adc
mov
test
test
mul
adc
xchg
pusha
iret
inc
mov
mov
test
sbb
add
sbb
jmp
xlat
pop
sub
fcomp
jmp
dec
sbb
pop
cmp
fcomp
fldcw
xchg
sbb
in
hlt
push
nop
imul
mov
push
sbb
push
pushf
cld
rcl
push
xchg
cld
jno
inc
pop
imul
jns
ret
(bad)
cmps
(bad)
push
movs
cld
int3
push
pop
lods
int
xchg
cld
jne
enter
xchg
ficom
jbe
adc
adc
adc
and
push
aad
fdiv
inc
add
stos
enter
ins
inc
adc
push
sub
std
fcmovu
fcomp
shl
idiv
dec
ins
inc
adc
xchg
mov
in
dec
sub
xchg
xor
dec
xor
retf
das
sahf
or
jl
das
out
jecxz
in
push
pusha
cs
sbb
push
fistp
fcomp
lods
inc
push
movs
inc
cmp
pop
push
pop
xchg
mov
lock
xchg
out
and
arpl
xchg
fdiv
jecxz
inc
jno
xchg
je
mov
adc
rcl
inc
rcl
ins
out
iret
or
push
cmp
rcr
movs
lods
mov
adc
cmp
fdivr
sub
xchg
xchg
dec
clc
or
gs
push
test
clc
xor
push
and
loope
push
inc
mov
push
pushf
cld
int3
mov
jae
(bad)
adc
and
out
(bad)
in
movs
icebp
add
mov
inc
retf
pop
fwait
jg
sbb
jbe
jmp
lock
jbe
mov
mov
dec
leave
or
fcom
cld
rcl
pop
and
bound
sub
popa
add
test
inc
mov
add
sbb
call
neg
inc
jp
push
mov
sbb
sbb
sub
jl
sub
outs
movs
je
out
fidiv
add
shl
and
mov
aaa
push
dec
sbb
je
lds
test
ds
ret
in
push
int
xchg
aad
lds
or
and
in
dec
mov
lds
sti
pop
xlat
mov
or
dec
mov
cmp
mov
cwde
xchg
xor
pop
jge
idiv
sbb
nop
or
test
sub
fdiv
daa
daa
pop
and
pop
push
mov
les
dec
fwait
sub
push
fdivr
daa
int
mov
adc
lahf
jmp
and
sub
out
push
retf
inc
cmp
jp
jno
xchg
icebp
cmp
je
or
or
icebp
les
dec
push
test
push
jo
leave
fs
pop
mov
mov
cdq
jl
push
sbb
out
clc
sbb
sub
fcomp
pop
pushf
cld
rcr
fsub
shr
xchg
pusha
pop
or
xor
cmp
daa
pop
mov
cmp
sbb
cwde
test
jmp
ret
push
mov
jecxz
xor
stos
mov
das
lock
cdq
movs
jge
mov
(bad)
cmc
popf
out
js
aad
jmp
xor
(bad)
cmc
push
or
xor
sti
repnz
clc
mov
loop
mov
scas
xchg
loopne
arpl
mov
jae
int3
adc
cmp
add
push
xchg
vfrczpd
repz
xor
aad
(bad)
loopne
mov
mov
sub
test
mov
and
jmp
pop
mov
xor
daa
push
xchg
cld
in
loopne
leave
xchg
or
call
(bad)
test
popa
es
jg
xor
daa
daa
daa
pop
cwde
push
(bad)
cdq
ins
ins
and
repnz
aam
push
iret
jge
pop
push
adc
mov
xor
inc
xor
and
dec
sub
scas
mov
add
fcomp
fdiv
push
es
push
pop
popa
and
jl
popf
popf
jo
in
(bad)
jmp
icebp
in
push
sti
pop
dec
or
ins
push
cmp
out
push
add
popa
xchg
jo
lea
sbb
add
and
push
xchg
outs
cmp
es
aas
xchg
xchg
adc
mov
aas
jo
in
or
adc
test
or
pop
mov
popa
xchg
jp
mov
loop
nop
mov
lds
outs
mov
shl
xlat
rcl
pop
es
daa
pop
and
test
push
call
pop
mov
fmul
push
in
jg
adc
hlt
cmp
push
adc
cli
add
or
push
add
or
push
xchg
cld
call
daa
push
sbb
pop
loope
mov
mov
inc
sub
lds
add
mov
mov
pop
hlt
xchg
dec
sbb
dec
daa
cmp
pop
xor
sub
sbb
scas
(bad)
call
mov
aam
and
lock
repz
test
fnstenv
sub
cli
mov
stc
jle
pop
sub
xor
in
mov
inc
ins
fdivrp
scas
and
gs
jmp
cli
add
push
push
push
loope
pusha
sub
scas
pop
sub
fs
jg
sahf
pop
inc
test
fimul
jns
in
cmp
ds
movs
push
outs
ret
push
dec
xchg
push
jge
cli
add
add
out
jle
lock
hlt
dec
inc
ja
iret
push
mov
dec
das
movs
mov
ins
fmul
jb
idiv
and
call
arpl
jbe
jg
dec
js
in
pusha
xor
push
jne
test
mov
mov
mov
cmp
jmp
sub
stos
jae
push
leave
test
(bad)
add
outs
sbb
push
xchg
pcmpgtd
fisttp
inc
loop
cld
jl
es
xchg
int3
rol
and
adc
into
sar
jae
in
into
add
aas
das
xchg
jmp
(bad)
or
xchg
and
int3
fisub
add
or
test
retf
sbb
add
adc
xchg
mov
jl
push
mov
sbb
pop
xor
shl
hlt
sub
jge
adc
or
dec
push
push
lods
pop
push
aam
sbb
or
daa
push
xchg
popf
sbb
mov
repz
jbe
aaa
dec
mov
mov
pop
cdq
jmp
shl
cli
jne
mov
push
jg
and
push
aad
inc
pop
jecxz
adc
push
sbb
or
mov
add
adc
fisttp
xor
shr
xor
call
xor
test
jp
fld
repnz
xchg
rcl
std
repnz
mov
and
push
pusha
adc
cmp
(bad)
dec
sar
push
xchg
push
adc
retf
cmp
add
push
clc
gs
pop
popa
into
sbb
leave
pop
jg
xchg
inc
shl
pop
loopne
mov
sbb
or
jg
ins
push
bswap
cli
shl
or
loope
fwait
stos
inc
imul
mov
xchg
lea
xchg
int
sti
jbe
fsubr
or
or
jge
sub
or
nop
or
mov
ins
add
mov
sbb
inc
rol
stc
in
test
adc
cmc
dec
cmp
sub
dec
add
iret
test
cmp
out
or
scas
inc
mov
push
and
jg
cmps
loope
adc
push
(bad)
push
jb
jle
retf
rcr
loop
and
pop
cwde
bound
xchg
push
adc
fwait
ins
fbld
lahf
inc
add
push
mov
adc
cmp
out
cdq
mov
xchg
shl
push
dec
and
jno
mov
push
push
sub
(bad)
popf
mov
mov
mov
sub
cmp
add
or
aas
(bad)
mov
div
sub
or
xchg
fiadd
jbe
pop
das
addr16
fs
xchg
jge
xor
fnstenv
clc
lea
call
or
adc
inc
rol
das
xchg
cdq
add
imul
xor
push
data16
fcomp
call
jle
pop
push
push
xchg
ins
mov
xor
repz
loopne
xchg
sbb
clc
xchg
inc
jg
test
cmps
gs
not
xchg
popa
jno
mov
xor
test
aam
popa
jb
es
pop
jo
add
add
(bad)
dec
mov
nop
jbe
(bad)
loopne
test
test
enter
sbb
sbb
jp
sbb
aam
add
int3
inc
iret
dec
out
scas
adc
mov
int
dec
push
stc
je
ret
fdivrp
icebp
repz
lea
lea
leave
push
outs
xor
mov
fninit
and
adc
sbb
ins
sar
loop
or
gs
inc
aaa
xchg
sar
shr
add
fs
adc
xor
push
jge
and
dec
fprem
call
push
in
je
adc
or
clc
ds
pop
sbb
xchg
fsub
jge
fsubrp
push
dec
xor
lods
jbe
call
iret
xchg
or
xchg
int3
and
call
cli
cdq
repz
mov
loop
icebp
in
das
nop
dec
or
push
xchg
lods
arpl
pusha
neg
mov
xchg
lock
mov
into
add
jge
jecxz
sbb
add
dec
leave
leave
mov
push
(bad)
fstp
in
xchg
push
or
xor
mov
push
movs
xor
ss
adc
hlt
hlt
adc
dec
inc
push
or
jle
push
out
arpl
add
xchg
iret
in
dec
adc
xor
push
adc
pop
call
test
or
sbb
mov
call
das
dec
dec
or
(bad)
cmp
adc
mov
cdq
stc
retf
push
stos
lahf
test
jne
adc
jle
jge
(bad)
imul
inc
mov
pusha
or
xchg
pop
lea
push
outs
xor
or
or
adc
mov
push
xlat
nop/reserved
pop
sbb
xchg
pop
clc
retf
mov
int3
daa
add
mov
cmp
and
loopne
inc
jecxz
cmp
xchg
push
adc
(bad)
mov
in
inc
mov
sub
fwait
jne
add
adc
and
jbe
lahf
loopne
add
sub
add
or
mov
pop
xor
jb
push
xchg
push
adc
cmp
into
add
or
cmc
mov
pop
hlt
daa
add
lods
das
inc
ins
mov
jge
es
pop
sbb
pusha
test
fcomp
(bad)
push
adc
add
jnp
xchg
shr
mov
push
or
nop
or
retf
dec
sub
jecxz
jne
and
add
cmp
xchg
loopne
mov
rcr
push
pop
push
adc
test
pop
stos
aas
push
loope
add
or
add
mov
and
or
scas
ins
movs
mov
inc
out
sub
adc
xchg
push
adc
sub
pushf
jmp
jle
daa
mov
dec
sub
test
sbb
sub
cld
fcom
add
push
out
push
xor
xchg
push
sbb
adc
adc
fs
shl
sub
retf
dec
stos
rcr
imul
sub
sub
adc
pushf
cld
fsub
pop
or
xor
inc
push
inc
xchg
xchg
adc
adc
lahf
push
mul
fnstenv
sar
mov
es
push
scas
mov
shl
mov
addr16
clc
add
out
add
and
xchg
dec
push
xchg
push
adc
ja
cmp
and
enter
or
je
les
out
xchg
aaa
add
clc
shl
xor
or
adc
bound
fidiv
sub
push
adc
clc
xchg
jl
dec
(bad)
cmp
leave
repnz
sub
or
add
push
dec
sub
clc
mov
adc
shl
mov
retf
sbb
push
adc
test
sbb
adc
adc
sbb
mov
call
sub
adc
or
jle
push
inc
dec
pop
dec
sbb
pop
icebp
push
xchg
push
adc
(bad)
adc
das
dec
das
xor
sahf
mov
inc
lock
adc
xor
add
aaa
add
add
or
jecxz
mov
cmp
adc
sbb
jne
push
fmul
adc
xchg
sahf
mov
jge
cmp
pop
pushf
cld
fdiv
add
or
ins
popf
mov
xchg
push
adc
je
or
cdq
dec
cld
aam
cdq
aad
es
ficom
adc
and
add
dec
mov
or
les
loop
cmps
cmp
movs
into
daa
xchg
cld
mov
push
xchg
push
adc
ins
fcmovnu
fcomp
int3
push
pushf
cld
aam
aam
pop
pushf
inc
test
imul
rol
pushf
inc
xchg
add
add
and
pusha
jl
xchg
icebp
pop
xchg
push
xchg
push
adc
or
and
aam
pop
pushf
cld
enter
popa
push
mov
inc
inc
cmp
or
ins
fmul
cld
push
jmp
popf
adc
stc
pop
lds
or
push
xchg
push
adc
fwait
xor
mov
and
jle
mov
push
sub
sub
add
cmp
retf
shr
pusha
sub
adc
adc
lea
mov
xor
add
push
adc
jo
leave
rol
test
(bad)
enter
xor
mov
add
retf
mov
mov
and
adc
sbb
daa
pop
sbb
pusha
rcl
push
xchg
push
adc
je
pop
sbb
mov
cdq
shl
jge
or
xor
xchg
adc
mov
add
cmp
hlt
adc
adc
pop
dec
es
pop
sbb
pusha
ins
fcmovnu
fcomp
fs
xchg
push
adc
test
pop
xor
push
pushf
inc
cdq
js
sub
shl
jns
fcomp
fcomp
pushf
cld
imul
dec
sub
cwde
pop
or
xor
fwait
ja
xor
push
push
xchg
push
adc
cld
(bad)
loopne
test
add
and
and
dec
sub
jae
sbb
or
jg
mov
lahf
imul
dec
ret
fmul
test
data16
iret
repnz
sbb
dec
or
loope
not
outs
iret
sbb
fist
adc
inc
mov
add
mov
addr16
js
retf
adc
xchg
scas
iret
out
sub
iret
shl
repz
mov
or
adc
pop
sub
cwde
pop
loopne
mov
js
xor
and
pop
out
pop
or
out
sub
js
or
pop
mov
sbb
movs
and
xchg
repz
jns
xchg
push
push
les
add
rol
sar
sub
cdq
pop
(bad)
call
(bad)
loopne
adc
rcl
push
adc
jmp
mov
shr
in
das
lahf
xchg
mov
outs
mov
mov
popf
or
add
fxch
cld
jne
icebp
repz
mov
aas
loopne
aad
ror
(bad)
loopne
int
out
xchg
inc
(bad)
pushf
xchg
movs
je
adc
and
mov
xchg
(bad)
jl
js
loope
pop
adc
pop
dec
call
cmc
add
rcl
cmp
or
or
into
dec
js
dec
icebp
repz
jns
mov
test
aas
push
mov
in
fmul
jmp
loopne
mov
and
add
jg
xchg
mov
fild
test
outs
dec
cwde
jl
jo
adc
les
push
xchg
push
adc
jp
(bad)
xchg
cdq
xor
out
stos
adc
daa
add
xor
or
in
dec
repnz
push
ja
pusha
bound
xor
cmp
loopne
add
lods
dec
das
pop
mov
add
xacquire
mov
mov
mov
loop
daa
add
cli
call
fmul
mov
adc
adc
mov
dec
sub
cmp
pop
xchg
or
imul
xor
dec
sub
dec
and
adc
dec
pop
es
push
pop
mov
gs
es
adc
cmp
cld
push
or
or
clc
cdq
xchg
fcomp
sub
sub
adc
pushf
cld
fsub
pop
or
mov
mov
pop
xchg
mov
and
mov
adc
add
das
push
jb
cmp
mov
mov
xchg
aaa
add
bound
ret
or
ret
cmp
icebp
push
mov
neg
test
cld
xchg
aaa
add
dec
mov
or
mov
add
push
pop
mov
dec
sub
aaa
add
sahf
pop
rol
lods
lea
adc
jg
sub
dec
dec
rcr
repnz
add
mov
dec
mov
mov
fwait
push
jo
or
test
mov
mov
int
cmp
shl
add
push
(bad)
xchg
bound
or
retf
jno
xchg
sub
adc
fst
mov
add
cmp
dec
ds
(bad)
cmp
adc
cmp
add
add
fistp
das
add
cmc
fld
add
int3
dec
ins
inc
fmul
xchg
jno
xchg
in
or
xchg
das
test
dec
sub
cmp
pop
pushf
cld
fsub
or
xor
ja
sti
sbb
je
pop
mov
dec
not
or
in
inc
pop
or
fdivr
pop
pushf
cld
shl
add
cmps
rcl
pop
ins
(bad)
add
in
mov
imul
push
fdivr
pop
pushf
cld
shl
ds
pop
pushf
inc
xchg
cwde
pop
or
sbb
inc
cmc
hlt
pop
xchg
shr
scas
mov
shl
ds
pop
pushf
cld
fmul
or
imul
cmps
lea
test
xchg
dec
enter
xor
not
call
loope
scas
loope
dec
dec
sub
add
sub
retf
jp
sbb
jo
pop
xor
imul
adc
cmp
push
(bad)
clc
retf
xor
add
or
sbb
ret
inc
scas
push
xchg
push
adc
push
dec
shl
jle
dec
sbb
jecxz
inc
cli
push
xchg
push
adc
lods
xor
xor
adc
sbb
fsubr
push
nop
adc
jns
jg
inc
or
push
adc
shl
bound
mov
inc
mov
cmp
push
or
push
outs
into
mov
repz
(bad)
fild
cmp
sti
mov
push
jge
test
mov
or
test
sbb
jge
repz
adc
xchg
xor
call
les
pushf
push
or
mov
cld
xchg
add
push
push
xchg
push
adc
cmp
pushf
mov
fist
mov
mov
xor
mov
and
scas
or
or
push
mov
test
add
fild
pusha
xor
fstp
stos
add
sub
push
push
add
xor
into
cmp
pop
push
push
repz
mov
pop
sub
test
mov
(bad)
jmp
test
jb
test
mov
xchg
jb
sti
sbb
(bad)
jp
or
lods
cld
fcom
cld
xor
(bad)
push
xlat
mov
jg
sti
ins
sahf
mov
add
and
hlt
and
lahf
mov
hlt
mov
repz
add
jmp
or
adc
in
xchg
cmp
lods
sbb
mov
mov
std
clc
and
loope
cmp
frstor
pop
repz
xor
xchg
mov
push
call
push
xchg
loop
dec
outs
hlt
push
xchg
push
adc
stc
push
pop
add
push
loop
xchg
out
push
jmp
mov
mov
xor
lea
mov
mov
movs
or
or
or
push
xchg
push
adc
dec
xchg
out
push
mov
mov
shr
movs
push
xchg
push
adc
add
sub
fst
push
push
push
push
push
test
mov
les
dec
pop
jnp
in
and
add
out
mov
nop
or
pop
addr16
pop
std
jecxz
mov
mul
iret
dec
idiv
imul
push
and
push
adc
test
push
(bad)
or
in
aaa
fidiv
mov
mov
imul
imul
das
xor
inc
rol
(bad)
repz
or
xchg
pop
mov
xchg
cmps
mov
js
sbb
arpl
dec
(bad)
loopne
ror
in
das
mov
mov
or
jmp
repz
div
xchg
push
adc
mov
pop
xor
jnp
shr
test
loop
push
das
xor
test
mov
xchg
out
jb
(bad)
je
mov
mov
adc
pop
rol
pop
lock
retf
loop
or
or
pop
in
std
imul
xchg
push
mov
leave
xor
adc
fs
test
cmp
div
mov
pop
sbb
cs
xor
ins
stc
std
jge
and
cli
daa
into
xor
cmp
push
xchg
push
adc
adc
dec
mov
retf
push
out
daa
mov
fwait
jnp
xchg
pop
mov
lock
cmc
hlt
push
cmp
adc
enter
mov
ds
mov
jb
not
std
mov
inc
les
push
adc
das
or
adc
adc
mov
ficom
or
shr
push
sbb
inc
push
xchg
push
adc
mov
xchg
pop
xor
sti
(bad)
stos
push
add
loop
mov
pop
xor
inc
add
adc
xor
xor
push
adc
jecxz
mov
mov
in
adc
xchg
pop
xor
movs
iret
lahf
sbb
push
sub
xor
push
aad
or
retf
data16
push
adc
adc
cmp
hlt
adc
adc
or
enter
fcomp
xor
(bad)
fcomp
hlt
push
pushf
inc
xchg
jl
stos
mov
sub
test
dec
mov
(bad)
hlt
mov
popf
leave
fmul
outs
mov
daa
push
sbb
cld
cmp
jae
out
mov
js
dec
dec
cmp
adc
rcl
test
fcomp
xor
out
xchg
(bad)
dec
cdq
das
xchg
fsubr
loopne
clc
retf
mov
daa
pop
xor
push
lods
cld
fcom
cld
xor
aaa
push
mov
add
popa
aad
xchg
jmp
push
xchg
push
adc
in
mov
sub
inc
xchg
stc
dec
xchg
in
or
xor
cdq
shl
jns
cwde
and
fmulp
or
sub
sti
fadd
dec
sbb
retf
xchg
(bad)
lock
popf
xor
add
push
sbb
add
div
int
(bad)
pop
enter
xor
sahf
push
xchg
push
adc
clc
sbb
xor
xchg
push
adc
mov
fs
sbb
or
es
test
aas
enter
fnstcw
jnp
clc
xchg
dec
mov
add
loopne
pop
cs
xchg
push
adc
outs
mov
(bad)
push
mov
jb
xor
cmp
pusha
xchg
mov
xchg
push
cld
push
sbb
or
add
sti
or
lds
scas
xchg
push
int
xchg
add
jnp
inc
ins
fdivr
mov
ins
fild
lods
mov
push
adc
xchg
adc
push
inc
push
mov
sub
ror
cmc
pop
xor
push
test
fcom
cld
xor
daa
sahf
sbb
pop
clc
inc
xchg
popa
mov
push
xchg
push
adc
and
xchg
push
lock
pop
les
adc
or
sbb
in
xchg
hlt
cli
inc
aam
(bad)
push
test
push
call
mov
js
push
test
repnz
push
mov
not
adc
scas
cmp
mov
dec
stc
add
imul
mov
xchg
push
adc
cmp
and
adc
xor
adc
test
sub
push
adc
jecxz
push
sub
retf
cmp
push
xor
mov
push
adc
(bad)
xor
push
cmp
dec
add
and
dec
sub
mov
(bad)
in
xchg
mov
sbb
out
sub
inc
cmp
push
sub
rcl
repnz
(bad)
jmp
jp
repnz
loopne
fcmovbe
xchg
rcr
add
push
adc
(bad)
or
repz
xchg
out
mov
jbe
lahf
in
mov
or
retf
sub
push
push
into
inc
xor
fist
pop
pop
test
pop
push
test
and
nop
in
(bad)
repnz
cld
das
imul
sbb
rcr
rcl
repnz
xor
sbb
mov
jb
test
mov
pop
cdq
sbb
lods
jge
inc
in
inc
and
xchg
fdiv
jecxz
imul
inc
pop
sbb
rol
das
fsubr
ja
jmp
ret
sub
jmp
or
loopne
push
out
les
arpl
or
cmp
mov
push
adc
add
xlat
sub
retf
xor
(bad)
mov
int
xor
xor
jnp
(bad)
cmp
add
sbb
(bad)
jo
push
xchg
push
adc
enter
andnps
test
push
push
fwait
mov
dec
xlat
inc
scas
jl
das
jecxz
hlt
mov
dec
ret
dec
out
inc
int3
jne
mov
jp
xchg
mov
cmp
fmul
sub
pop
rcr
add
fwait
push
loop
dec
jae
je
fsub
push
std
repz
mov
add
ins
xor
jmp
inc
cmp
xchg
loopne
hlt
mov
pop
lock
cmp
pusha
pop
loope
test
dec
push
xchg
push
adc
arpl
cli
retf
movs
adc
adc
xchg
jge
enter
icebp
mov
and
mov
adc
in
mov
test
mov
iret
jne
rcr
xchg
inc
in
fist
or
inc
mov
xchg
push
adc
add
or
mov
xchg
or
push
adc
js
test
test
sti
in
loopne
hlt
jo
sbb
push
adc
out
sub
lods
xor
jb
mov
or
mov
fcom
not
adc
jns
pop
xchg
xchg
stos
mov
push
push
xchg
rcl
daa
sbb
mov
imul
jg
push
xchg
push
adc
rol
adc
loope
or
or
and
add
add
push
mov
or
dec
mov
nop
mov
mov
fld
push
imul
push
xchg
push
adc
hlt
xor
sbb
ror
scas
arpl
jmp
(bad)
jne
xchg
push
xor
and
jmp
cmps
cdq
xchg
mov
push
inc
fcomp
popa
adc
fist
aad
mov
call
xchg
in
cwde
leave
xchg
pop
jno
ins
outs
cmps
xor
(bad)
sti
call
ret
or
xor
add
popf
cdq
cmp
loope
xchg
xor
jbe
adc
and
fbstp
add
call
in
es
pop
and
lea
nop
(bad)
cmc
call
dec
cmp
out
mov
push
adc
movs
pop
das
mov
lea
repz
pop
jl
jmp
mov
fnstcw
mov
icebp
mov
sti
sbb
push
adc
pop
add
fwait
xor
lock
cmps
xor
adc
in
lock
clc
js
sub
add
and
fcomp
dec
adc
cmp
in
mov
(bad)
dec
pop
mov
jl
shl
repnz
mov
and
repnz
xchg
push
mov
push
xchg
or
mov
and
xchg
fidiv
dec
aaa
dec
pop
mov
and
xchg
jmp
mov
jb
test
aaa
or
ja
repz
adc
lock
jbe
cmp
jl
add
xor
aas
jmp
or
loop
jl
repnz
cmp
call
div
fbstp
aaa
dec
retf
fwait
daa
cwde
jge
xor
lds
pcmpgtb
push
retf
adc
cmp
fiadd
xlat
jmp
push
add
cdq
mov
lock
dec
jno
gs
push
sbb
jle
iret
add
call
mov
cmp
aas
lds
push
push
jae
push
rol
dec
dec
or
ficom
pop
add
scas
or
jmp
inc
aaa
movs
or
push
pop
xchg
repnz
sub
jnp
pop
or
test
pop
pop
sbb
and
aaa
fwait
mov
jp
push
xchg
push
adc
int
out
fs
or
or
(bad)
rcl
xchg
ins
ins
mov
int3
aad
or
or
enter
jl
jb
retf
push
adc
adc
cmp
in
push
je
in
aaa
das
js
cdq
cmp
add
pop
repnz
or
mov
test
test
xchg
push
adc
in
sub
loopne
hlt
mov
retf
push
cwde
mov
hlt
cmp
repz
cmp
mov
dec
fcomp
jne
in
cmp
adc
loope
out
push
pop
repnz
dec
add
pop
sbb
js
div
hlt
stos
add
jmp
into
push
push
xchg
push
adc
sbb
or
dec
stc
pop
adc
outs
stc
and
call
test
test
cmps
and
cdq
test
int
fbstp
fcom
(bad)
data16
adc
xor
out
pop
ss
jle
repnz
in
lock
push
pop
mov
dec
inc
mov
hlt
cmp
mov
dec
mov
clc
aaa
mov
pcmpeqd
call
mov
aad
push
mov
mov
cmp
call
iret
or
mov
dec
shl
scas
repnz
mov
lea
aam
xor
ret
xchg
jl
iret
mov
imul
mov
outs
dec
mov
or
(bad)
and
push
out
fld
ror
ss
jae
mov
(bad)
pop
inc
xchg
add
push
in
frstor
or
mov
adc
xor
or
cmc
icebp
outs
call
add
push
adc
iret
xor
daa
push
pushf
cld
fcom
cld
xor
into
or
or
or
add
mov
xchg
call
fstp
pop
pop
std
add
data16
add
pop
mov
hlt
mov
cmp
jecxz
jno
add
jge
inc
xlat
lahf
sbb
sbb
pop
jmp
xchg
push
adc
pop
and
shl
jo
mov
popf
jne
hlt
jmp
jmp
xor
push
push
pusha
mov
jle
jle
jmp
cmps
div
add
enter
lahf
add
push
adc
pushf
xor
push
popf
push
shl
loopne
cld
xor
and
fadd
icebp
bound
pop
pop
ins
repz
xor
push
addr16
div
add
hlt
push
inc
mov
adc
adc
ins
mov
mov
or
retf
not
mov
adc
shl
retf
sbb
rcl
push
and
mov
pop
pop
jbe
push
push
mov
mov
mov
in
imul
daa
push
mov
or
int3
bts
sub
gs
hlt
aam
(bad)
push
push
push
mov
inc
sbb
ins
pop
pop
xor
mov
xchg
popf
(bad)
xchg
push
xchg
push
adc
dec
in
fcmovnu
fdivr
xchg
push
adc
bound
xor
cmp
out
iret
or
cmp
imul
fiadd
fsub
(bad)
aaa
push
sbb
jae
lahf
jle
cmp
fdiv
jmp
das
push
cmp
ret
test
call
xchg
sub
jg
lds
out
aad
mov
popf
mov
bound
cmp
div
mov
loop
(bad)
movs
pop
push
pop
jecxz
retf
push
lods
push
xchg
push
adc
push
push
jbe
daa
movq
cs
xchg
cs
(bad)
pop
push
push
xchg
push
adc
sub
add
in
push
xchg
push
adc
xor
pop
out
pushf
shl
cmps
or
aas
adc
in
pop
xchg
xor
iret
mov
test
out
dec
jge
sahf
mov
in
test
adc
or
pop
push
xchg
push
adc
int3
xchg
fs
sbb
sub
fistp
mov
sub
jo
or
or
out
xlat
(bad)
ror
push
in
in
in
add
sbb
lods
push
xor
repz
(bad)
mov
imul
jns
xchg
push
adc
mov
pop
xchg
push
fwait
push
sbb
test
push
xchg
push
adc
and
or
push
xchg
push
adc
dec
push
inc
adc
pop
pushf
cld
fcomp
adc
(bad)
fidiv
les
inc
push
mov
mov
test
cmp
push
xchg
push
adc
cld
xchg
rcl
lds
mov
sub
and
aam
sbb
sbb
xor
popf
jg
pop
stos
pop
mov
pop
xor
ja
pop
test
pop
shl
mov
add
adc
fcomp
dec
jl
push
push
cwde
dec
mov
xchg
push
xor
sbb
fsub
in
sub
and
dec
and
pop
and
stos
mov
test
cmp
and
clc
lods
push
xor
pushf
test
repz
inc
push
dec
pop
leave
pop
sub
adc
call
div
cmp
(bad)
int3
sbb
mov
and
sbb
(bad)
sbb
push
xchg
push
adc
mov
ins
mov
xlat
shl
xchg
cmp
mov
dec
xchg
fs
out
sbb
test
adc
sbb
or
and
pop
out
pushf
loope
cld
mov
xchg
push
adc
fadd
and
(bad)
jns
mov
jle
mov
shr
sbb
mov
pop
movs
mov
push
ret
or
loopne
xlat
rcr
sahf
call
dec
test
jne
or
mov
add
xchg
pushf
popf
xor
xchg
xchg
pop
xor
out
sub
out
and
cdq
pop
dec
cdq
jmp
xor
jmp
mov
loopne
mov
daa
(bad)
xor
ror
sti
mov
nop
stc
cmp
aad
pop
(bad)
fcomp
popa
ret
jmp
mov
jecxz
sbb
push
push
xchg
push
adc
push
push
jp
ja
mov
adc
cmp
jl
inc
and
dec
fs
out
pusha
and
xor
cs
out
test
push
push
into
cdq
sub
push
add
stos
or
(bad)
adc
or
pop
pop
sbb
inc
jmp
mov
add
outs
ror
(bad)
push
xchg
push
adc
xor
out
(bad)
rol
xchg
in
out
stos
test
cdq
je
stos
inc
sub
add
mov
dec
xlat
(bad)
pop
fcomp
fcomp
pop
es
mov
stos
int3
outs
lods
jb
xor
retf
clc
fsubr
push
push
jle
pop
es
pop
add
aad
stc
jnp
sbb
lods
jmp
add
or
fcom
jge
jge
add
cmp
call
hlt
icebp
jnp
mov
cld
nop
int3
les
dec
xlat
fimul
pushf
xchg
mov
pop
xchg
and
add
outs
sbb
ficomp
mov
xchg
push
adc
loopne
hlt
sbb
sti
dec
mul
clc
mov
test
mov
xchg
jae
jae
gs
mov
sub
(bad)
pcmpgtb
jb
jp
test
fisub
xchg
inc
ror
test
gs
in
(bad)
repnz
ss
inc
iret
cmp
pop
popf
(bad)
cmp
dec
gs
jle
mov
push
jns
mov
int3
mov
add
and
pop
jne
push
into
test
addps
add
leave
pop
mov
pop
rol
fmul
(bad)
repnz
add
cmp
adc
cmp
xor
ss
test
into
popa
out
das
jecxz
jl
dec
xchg
push
xchg
push
adc
push
push
pop
jp
pop
xchg
enter
sub
adc
xchg
pop
in
xchg
xchg
imul
and
out
xor
mov
push
ret
pushf
sti
push
mov
pop
jge
mov
jmp
mov
jae
imul
(bad)
and
push
push
fdivr
cmp
mov
gs
lock
lods
xchg
push
inc
stos
call
sbb
mov
or
stos
sbb
mov
push
or
jge
pushf
pop
sbb
sbb
adc
or
loop
sbb
fdivr
add
xchg
push
adc
das
sbb
js
adc
scas
sbb
loopne
ja
stc
ret
loop
xchg
fimul
jne
shl
xor
adc
sub
and
lock
lahf
jbe
or
mov
push
cmp
xchg
or
xor
arpl
sahf
cs
int3
sbb
sbb
xor
std
add
ds
int3
and
rcr
popf
jne
xchg
pop
data16
ins
iret
inc
sub
pop
(bad)
(bad)
pop
popf
cmp
inc
mov
loopne
xchg
sbb
sbb
xchg
add
leave
push
xchg
push
adc
and
hlt
adc
out
ins
dec
fwait
(bad)
outs
adc
inc
jmp
xchg
std
mov
inc
sbb
push
xchg
push
adc
test
pushf
xchg
mov
idiv
pop
pop
xchg
jnp
xchg
or
es
outs
clc
and
jno
ds
std
or
mov
xchg
and
adc
or
adc
hlt
mov
rol
add
dec
fnstsw
add
jg
sbb
adc
mov
pop
mov
jmp
sahf
sub
test
and
adc
sub
fmul
rcl
adc
leave
adc
(bad)
enter
loopne
mov
push
mov
sbb
stos
pop
push
xchg
push
adc
mov
jge
and
in
dec
cmps
mov
add
adc
adc
or
push
aaa
xchg
mov
outs
or
xchg
inc
dec
xchg
cmp
adc
xchg
inc
mov
mov
add
adc
imul
dec
shl
ins
shl
jae
rcr
adc
(bad)
scas
mov
jne
push
mov
pop
test
xor
cmp
cmc
in
or
mov
mov
or
movs
inc
jmp
loop
mov
cmp
sub
loopne
nop
fmul
imul
mov
shl
adc
or
leave
movzx
test
sbb
xchg
pop
ja
xchg
iret
push
ja
mov
repnz
fild
sbb
add
cmp
or
sbb
(bad)
aas
sbb
gs
inc
inc
dec
ins
add
cli
fld
add
call
(bad)
pop
in
mov
int
mov
sar
and
push
jl
xor
shr
jl
dec
iret
or
pop
dec
add
stos
add
sahf
push
xchg
xor
hlt
or
or
adc
jb
cmp
test
shr
outs
mov
inc
mov
cli
inc
xlat
mov
in
pop
mov
jmp
fnstcw
repz
dec
adc
xchg
pop
xor
nop
xor
mov
clc
adc
cmp
cmc
js
or
enter
rcl
aam
pop
or
xchg
sahf
lods
push
fs
or
dec
sbb
pop
pop
int3
dec
sbb
xchg
adc
mov
ins
or
xchg
or
jg
out
iret
hlt
cld
xchg
or
xchg
nop
or
mov
or
ror
adc
out
iret
hlt
in
or
adc
iret
hlt
ficom
xchg
setne
jne
int
or
push
dec
cmp
or
cmc
add
or
loopne
push
push
cli
mov
stos
and
imul
inc
fisttp
lds
popf
adc
in
loopne
add
not
jbe
outs
sbb
in
pop
call
xchg
push
std
adc
retf
mov
xchg
lea
lea
xlat
sbb
cmp
mov
mov
(bad)
add
xchg
test
in
cmps
cmps
jge
mov
or
cwde
mov
lock
add
adc
xchg
loopne
aad
(bad)
je
ror
js
mov
bound
lods
imul
pop
ja
cmp
loop
sub
sahf
lock
or
sbb
dec
aam
xor
or
addr16
adc
sub
(bad)
xor
(bad)
stos
add
add
ds
mov
inc
hlt
hlt
jb
sti
mov
sub
inc
inc
inc
es
cmps
push
push
pop
mov
mov
mov
int3
das
cwde
push
fcom
jmp
jb
fadd
pop
cs
jmp
ds
add
cs
div
sub
add
neg
mov
sub
aam
mov
or
imul
scas
mov
hlt
push
add
jnp
jl
je
jo
push
pop
or
loopne
shl
ret
loope
pop
xchg
or
or
repz
sbb
dec
mov
into
or
adc
dec
push
jle
call
cmp
sbb
iret
push
hlt
sbb
hlt
jo
out
mov
int3
lods
push
and
pushf
loop
iret
ja
xor
adc
xlat
imul
imul
pop
xor
call
jb
push
jmp
fcomp
pop
and
sbb
imul
dec
stos
push
xlat
pop
loop
sahf
push
test
jmp
popa
out
out
mov
imul
imul
pop
pop
shr
pop
scas
shr
aaa
mov
(bad)
pushf
fidiv
icebp
xor
jg
out
add
out
pop
mov
push
adc
clc
lock
push
je
shr
adc
aas
and
add
fcmovnbe
jo
and
outs
adc
jb
out
mov
sub
icebp
pop
movs
iret
out
adc
into
and
sbb
inc
fistp
add
inc
rcl
fs
xchg
fcom
je
sub
jo
pushf
mov
push
and
ficomp
adc
sbb
out
jo
(bad)
cmps
inc
lea
mov
pop
xchg
aad
sbb
fst
xor
mov
push
nop
sbb
push
retf
call
je
test
icebp
call
pop
push
dec
fistp
sub
jnp
stos
lds
push
xchg
inc
jne
lds
ja
mov
loop
loopne
xor
pop
ins
out
ins
jg
jno
sbb
mov
test
test
lock
mov
sbb
pop
cdq
rol
jmp
loopne
lea
iret
push
lods
pop
and
xchg
icebp
bound
hlt
xor
or
push
mov
jmp
pop
cdq
call
jns
and
hlt
sbb
cmps
out
mov
ins
jecxz
xlat
nop
add
pop
mov
(bad)
clc
adc
dec
imul
push
mov
jne
dec
mov
cs
inc
shl
sbb
jmp
pop
and
mov
cwde
nop
xchg
std
xchg
add
push
jae
fistp
aam
out
adc
sbb
les
dec
outs
loope
push
dec
mov
mov
push
repnz
loope
and
add
pop
or
inc
xchg
xchg
xor
push
pop
les
daa
daa
arpl
mov
xchg
jmp
hlt
push
add
jb
fstp
push
push
pusha
adc
push
int
lahf
mov
xor
push
(bad)
clc
mov
sub
call
inc
mov
inc
xchg
clc
call
mov
jecxz
je
mov
or
mov
mov
fisttp
inc
je
(bad)
mov
push
sub
fisub
cmp
iret
add
ins
jbe
mov
pop
jg
and
adc
mov
dec
mov
xchg
lock
jl
mov
xchg
ror
adc
jnp
das
sbb
xor
xchg
ror
xor
cld
xchg
pop
xor
ss
fwait
cld
mov
adc
popf
dec
adc
jl
clc
cdq
ja
and
dec
sti
pop
sub
neg
or
mul
pusha
int3
das
fisttp
or
outs
test
sub
add
jo
mov
dec
xor
mov
and
mov
mov
jp
mov
sbb
popa
xchg
xor
je
adc
clc
aas
gs
mov
ins
xchg
iret
mov
ja
fcmovu
jp
cmp
xor
or
inc
lods
loope
pop
push
dec
mov
ja
aam
ins
adc
inc
lock
hlt
jg
movs
leave
cmp
lock
hlt
enter
in
sahf
dec
xchg
hlt
push
push
xor
lock
test
out
push
push
sbb
dec
adc
sbb
retf
es
cmp
mov
dec
push
mov
in
and
xlat
cmp
rcl
das
dec
imul
loop
mov
repz
lock
cli
cmp
call
jmp
or
fst
out
retf
ror
std
xchg
sbb
jge
add
aam
sub
pusha
jle
repz
xor
fstp
push
jle
jbe
inc
sti
ins
loope
mov
ror
inc
mov
push
jbe
in
les
pop
jl
clc
xchg
jno
loopne
mov
out
sub
dec
stc
fwait
or
mov
jle
into
xor
outs
sbb
hlt
jo
pop
jae
jg
add
mov
repz
add
mov
aam
ret
and
int
jg
outs
mov
jnp
add
push
pop
gs
or
out
repz
cwde
or
repz
int
arpl
mov
xor
jl
movs
push
mov
mov
sti
in
repz
xor
fcomp
pop
and
inc
das
sti
dec
fimul
into
xor
cmc
int3
inc
mov
pop
dec
int
sbb
fbld
dec
mov
push
jp
cmp
shl
add
and
sbb
add
in
pop
sbb
pop
jne
fadd
ins
sbb
in
dec
or
mov
jnp
shr
adc
(bad)
test
fdiv
dec
cmp
sub
or
xchg
jecxz
in
iret
xchg
xor
fstp
xor
lods
dec
ror
add
adc
jae
push
jae
jb
iret
mov
or
mov
fisttp
mov
(bad)
ror
pushf
je
cmp
cwde
imul
xchg
shl
pop
(bad)
ins
gs
and
mov
mov
mov
mov
mov
xchg
test
aam
inc
mov
sbb
push
outs
(bad)
mov
mov
rcr
scas
pop
mov
ja
sbb
sbb
lock
iret
fs
inc
or
retf
loop
aaa
daa
daa
push
xchg
add
data16
pop
and
addr16
test
fnstcw
jecxz
cli
jne
cld
push
movs
or
rol
sub
jmp
iret
out
push
popf
push
push
or
mov
cwde
xchg
xor
push
xchg
sbb
daa
daa
daa
pop
adc
inc
xchg
mov
in
es
loop
cld
jo
popf
ins
lock
addr16
mov
xchg
sbb
dec
hlt
hlt
add
je
repz
pop
inc
fs
push
push
xlat
popf
add
mov
daa
daa
pop
call
pop
and
pop
add
sub
sti
cs
or
loop
lock
std
mov
out
dec
pop
jle
imul
xchg
outs
pop
enter
jg
or
rol
lds
xchg
push
ss
cmp
inc
xchg
into
jb
xchg
arpl
psubusb
and
jne
dec
and
adc
sahf
div
dec
aas
in
xchg
push
mov
sbb
mov
push
in
cld
in
dec
je
call
push
push
cmp
dec
fimul
pop
call
or
adc
js
pushf
pop
and
adc
push
repz
scas
sbb
das
test
test
adc
ins
rcr
nop
(bad)
mov
pop
or
push
inc
xor
outs
cmp
push
std
xor
cmp
xchg
inc
lods
inc
enter
mov
(bad)
out
push
mov
push
adc
mov
cmp
daa
pop
and
pop
mov
pop
and
ja
sub
xchg
dec
(bad)
pop
call
mov
xor
jne
add
je
jp
xlat
and
sbb
mov
outs
pop
pop
call
dec
(bad)
sbb
in
loope
div
daa
pop
and
jo
in
inc
pop
xchg
adc
xchg
outs
popf
jl
or
push
(bad)
cmp
fistp
adc
sti
dec
xlat
or
das
push
mov
ror
inc
ss
aas
ja
sahf
lock
jmp
cmp
(bad)
mov
call
mov
and
or
test
cli
mov
sti
lds
(bad)
cmps
ror
fdiv
push
or
jae
data16
or
xor
inc
popw
ins
dec
push
sti
adc
jmp
dec
cmc
or
push
rcr
ja
cmp
xor
pushf
cs
adc
or
mov
push
das
lods
hlt
cmp
outs
daa
call
or
mov
int3
cld
leave
je
daa
jo
jmp
lods
xor
sub
mov
sbb
sbb
jno
test
xchg
mov
mov
xor
mov
repz
add
cmp
pop
sar
mov
cmp
sub
and
outs
push
push
add
stos
xchg
cmps
loop
pusha
push
mov
inc
out
push
ins
das
aam
loop
mov
mov
sti
int3
loopne
cmps
mov
mov
push
push
retf
in
jo
(bad)
hlt
hlt
repnz
push
ret
cmc
xchg
xchg
dec
repnz
cmc
hlt
mov
jge
icebp
mov
mov
cmp
iret
test
dec
pop
rcl
cmp
scas
xor
nop
sar
hlt
hlt
mov
xor
leave
(bad)
leave
add
push
and
outs
pop
jecxz
jmp
jno
xor
push
cmp
stc
inc
adc
(bad)
and
inc
xchg
cmp
out
dec
or
add
jge
lods
lahf
je
enter
mov
out
jl
lock
xor
stos
adc
adc
iret
cs
push
cmp
cmp
stos
scas
mov
loope
push
(bad)
xchg
mov
dec
dec
xchg
cli
mov
clc
hlt
mov
lahf
adc
jg
mov
pusha
push
iret
mov
jmp
xor
add
rcr
stc
hlt
hlt
inc
xor
(bad)
sahf
and
fimul
mov
push
jnp
sar
hlt
enter
jne
xchg
jge
iret
sbb
sbb
loope
jae
fmul
sbb
sbb
push
lds
mov
jmp
shl
cwde
xchg
dec
jecxz
dec
jns
cmps
repz
and
jg
pop
add
jl
fist
jle
pop
loop
push
mov
push
push
adc
mov
sahf
mov
pop
ss
pop
ficomp
xor
and
cmp
pop
cmps
pop
push
(bad)
jmp
daa
clc
or
mov
xchg
test
fild
sbb
sub
sub
add
and
push
test
xchg
cmp
repz
not
movs
frstor
outs
add
daa
imul
addr16
push
repz
cdq
push
sbb
ss
mov
(bad)
xor
inc
leave
mov
ins
loop
push
pushf
aad
xchg
cmp
mov
mov
xor
mov
enter
xlat
pushf
add
test
pop
jmp
and
push
sbb
cmp
adc
out
popf
mov
xchg
repz
xchg
xchg
jne
into
cmps
pop
xor
call
(bad)
test
pop
rcl
mov
xchg
or
xchg
jo
push
xchg
sbb
(bad)
mov
out
retf
hlt
pop
jo
retf
mov
(bad)
push
pop
retf
jl
pop
daa
push
rcl
jg
add
mov
sahf
add
repz
lds
jl
sbb
xchg
ret
xchg
push
push
ins
xchg
cmp
add
out
cs
ret
or
adc
xchg
(bad)
xor
jp
popf
cli
mov
push
popf
pop
push
sbb
in
mov
fisub
push
xor
leave
loope
les
loopne
call
loop
xor
sbb
or
or
vpminsw
mov
dec
int3
xor
frstpm(287
inc
stos
(bad)
std
sbb
cli
hlt
hlt
or
ret
xchg
jge
(bad)
daa
push
sub
rcl
dec
retf
clc
(bad)
pop
sub
daa
push
xchg
add
adc
pop
and
cmc
mov
inc
mov
ds
cmp
fild
adc
and
mov
dec
adc
jno
(bad)
repz
mov
lods
dec
int
xor
sub
daa
pop
call
shr
shr
add
test
in
pop
xchg
loop
repnz
(bad)
sbb
jg
in
mov
ret
cmp
cld
mov
stc
xchg
outs
xor
out
inc
bound
and
push
fucomp
cmp
(bad)
xor
push
in
idiv
aam
fcom
add
adc
loop
add
popf
adc
dec
jecxz
cmp
jmp
pop
dec
add
jl
daa
daa
pop
and
jne
cmps
(bad)
loopne
dec
sub
stos
adc
xchg
inc
xchg
push
test
out
push
popf
push
push
or
sub
jge
or
cmp
jne
pop
add
jno
push
lea
mov
jmp
repz
call
push
add
xchg
ins
xchg
das
in
xchg
dec
into
xor
pop
aad
repz
mov
add
popa
imul
rcr
daa
pop
and
mul
outs
call
adc
xchg
pop
xchg
ins
mov
push
mov
jo
ja
or
dec
test
add
ret
pusha
das
jmp
xchg
call
ret
pop
and
add
bound
or
xor
daa
sahf
adc
jbe
mov
jb
push
xchg
out
inc
gs
das
pop
ins
out
pop
fild
stos
std
into
pop
dec
or
cmp
jnp
lea
mov
jae
inc
(bad)
pop
mov
hlt
cmp
and
add
or
pop
dec
add
push
stos
sbb
leave
dec
jne
shl
mov
scas
sub
jmp
cmp
mov
fxch
out
pop
sbb
pop
mov
dec
scas
mov
pslld
and
mov
xstore-rng
cmps
ret
pop
and
pop
clc
fisubr
ja
mov
jns
fld
js
mov
dec
jae
and
repz
mov
xor
test
rol
das
scas
push
data16
nop
out
test
pushf
add
fsub
fwait
stc
fmul
push
sahf
lods
pusha
push
sbb
cmp
fdiv
scas
iret
out
inc
mov
xchg
and
ss
jne
jle
into
push
mov
mov
mov
daa
sbb
(bad)
fild
ret
or
xchg
xchg
push
and
fcomp
fcomp
pop
popf
mov
dec
fnop
cmps
mov
mov
out
ror
xor
repz
das
sub
and
push
jmp
in
aaa
adc
push
jle
fsubp
push
(bad)
call
jbe
popf
mov
adc
fimul
xchg
in
inc
mov
fstp
cwde
pop
dec
std
pushf
push
xor
mov
popa
dec
call
sbb
ror
cmps
adc
dec
push
aas
xchg
test
iret
push
jns
ds
xor
jnp
arpl
mov
push
cmp
cwde
adc
out
repz
idiv
jno
addr16
out
mov
dec
repz
inc
addr16
stos
dec
in
retf
arpl
test
and
push
inc
cmp
inc
pop
dec
gs
jecxz
jp
movs
ds
(bad)
jbe
add
cmp
cs
ror
add
je
mul
sub
cmp
jg
outs
jl
(bad)
jb
test
xor
and
pop
(bad)
fxch
mov
adc
dec
push
aas
cdq
mov
aam
cmp
pop
jo
cmp
(bad)
jae
push
stos
or
cmp
xor
adc
fucom
push
xchg
pop
nop
mov
xor
dec
or
jbe
in
mov
or
push
mov
and
sub
add
(bad)
ror
add
push
in
jp
iret
cdq
sub
jnp
jae
inc
and
rol
inc
sub
add
add
jnp
or
cmc
pop
test
or
sbb
cmp
cld
push
add
test
xchg
push
fcmovnbe
pop
test
xchg
adc
outs
adc
inc
fcomp
fcomp
jmp
inc
bound
jp
pop
xlat
lahf
add
jb
sahf
push
ins
or
pusha
add
xchg
mov
mov
pop
popf
int
adc
add
stc
nop
add
xchg
sbb
cli
jae
adc
sbb
rcl
or
repz
fst
sub
cwde
lock
xchg
std
inc
mov
xor
lods
xchg
mov
mov
enter
jae
lea
shl
aam
sub
adc
in
loopne
push
clc
or
mov
mov
jne
mov
mov
cli
or
dec
add
test
xchg
inc
dec
xor
mov
push
mov
outs
jae
cmp
out
jne
or
pop
into
push
enter
rcr
lahf
fnop
out
push
mov
cmc
push
or
xor
mov
ror
in
mov
jecxz
stos
dec
mov
mov
movs
mul
jmp
lsl
fcomi
xrelease
pop
sbb
cs
jp
call
jecxz
test
sub
call
sub
mov
jle
fcom
mov
adc
idiv
pushf
(bad)
ror
add
mov
data16
icebp
sub
test
(bad)
shl
cmps
scas
and
pop
inc
mov
(bad)
push
mov
mov
sub
or
mov
repnz
sbb
mov
aam
jp
in
pop
mov
stos
push
imul
lods
hlt
xor
push
push
xor
sbb
out
in
icebp
retf
dec
cmp
mov
popf
imul
mov
pusha
pusha
mov
stos
shr
xchg
jmp
jo
fiadd
inc
push
test
jbe
mov
ret
(bad)
fisubr
inc
push
jp
retf
sub
cmp
clc
xor
sub
pop
mov
data16
or
enter
fld
jae
adc
xchg
test
jae
iret
pop
test
adc
xchg
mov
rcr
retf
push
add
shl
(bad)
out
iret
push
stos
cwde
int
jmp
dec
mov
shrd
adc
xchg
(bad)
jmp
mov
inc
jmp
pusha
xor
ds
mov
frstor
jmp
ret
pop
(bad)
rol
push
jmp
jmp
pop
xchg
mov
jecxz
js
mov
mov
(bad)
inc
stos
fldcw
repz
shl
xchg
mul
(bad)
ror
add
sub
xor
in
push
je
in
adc
js
cs
enter
sahf
(bad)
ror
in
mov
mov
sub
icebp
stos
xchg
popf
mov
dec
iret
adc
popa
in
repz
push
(bad)
test
in
push
(bad)
(bad)
mov
push
jnp
cld
and
aas
call
jecxz
sar
cli
int
ja
mov
ret
push
fcom
repz
stos
or
jge
shl
out
mov
ror
add
mov
add
pop
mov
(bad)
neg
gs
arpl
popf
movnti
out
sub
pop
(bad)
pop
leave
repz
push
xor
sub
ds
repz
movs
cmps
mov
sub
mov
or
sti
jecxz
fnstenv
push
lock
fs
test
test
cmp
iret
(bad)
test
daa
mov
push
and
mov
add
push
mov
inc
lods
and
int
gs
and
or
inc
stos
hlt
or
jbe
adc
xchg
jnp
ja
pop
sti
mov
jecxz
push
jge
pop
xchg
mov
or
mov
frstor
xor
mov
jl
mov
out
in
imul
gs
dec
or
ror
or
inc
jmp
xchg
mov
sbb
xor
dec
aad
std
inc
jge
outs
dec
jnp
mov
ror
popf
ds
xchg
xchg
in
cmps
bnd
sti
push
sub
int
rcl
push
mov
xor
pop
vmread
pop
jo
int
iret
jae
mov
repz
sub
cwde
retf
fsub
sbb
jmp
repz
mov
sbb
mov
cmps
dec
add
(bad)
xlat
fisttp
mov
mov
push
adc
push
add
dec
xchg
jo
fcomp
fcom
mov
cmp
push
add
or
(bad)
dec
mov
es
(bad)
ror
fld
xor
icebp
repz
mov
mov
mov
sti
cmp
sbb
xchg
jmp
hlt
retfw
xchg
xor
jb
or
push
imul
adc
xlat
mov
xlat
pop
xchg
daa
daa
arpl
sbb
adc
or
ins
inc
mov
mov
(bad)
cmc
aam
mov
xchg
test
push
fcmovnbe
pop
in
daa
daa
jmp
int
xchg
pop
fld
loope
lea
xlat
jecxz
xchg
retf
dec
stos
and
jae
jns
icebp
and
adc
pop
mov
jmp
repz
jo
scas
adc
jge
fsub
add
(bad)
mov
mov
in
fist
pop
dec
adc
jmp
cli
pop
and
sahf
fisub
add
bound
ins
fwait
push
pop
fidivr
sbb
call
adc
or
mov
loopne
mov
sub
ficom
push
dec
bound
pop
mov
pushf
pop
test
ins
or
lea
mov
push
xor
mov
sbb
fs
shl
je
pop
xlat
mov
aam
xchg
mov
jge
and
inc
sub
cmp
sub
cmp
or
push
push
stos
jae
push
scas
mov
test
hlt
cmp
shr
inc
enter
dec
stos
dec
and
daa
pop
and
daa
sbb
mov
(bad)
xchg
aas
xchg
test
push
or
sti
loop
mov
imul
popa
rcr
xchg
cmp
and
icebp
adc
adc
fsub
daa
sbb
out
das
xchg
pop
xchg
push
mov
push
daa
test
outs
cmp
pop
pop
jae
cmps
cld
pop
and
mov
cmc
loope
mov
pop
std
push
sti
and
ds
dec
add
je
cmp
clc
std
push
xchg
mov
aam
ds
push
pop
retf
pop
ins
mov
fldenv
ja
aam
jb
adc
test
test
inc
sub
sbb
ss
sbb
xchg
mov
out
les
add
(bad)
outs
push
(bad)
imul
cdq
and
fild
sbb
dec
in
sbb
lahf
sbb
pop
dec
loop
in
mov
(bad)
mov
test
dec
hlt
inc
repz
loopne
adc
dec
(bad)
cs
call
(bad)
ror
inc
fsubr
jge
jle
ficomp
xchg
add
xchg
sar
sahf
or
dec
mov
repnz
in
sbb
mov
cbw
lahf
sbb
inc
jmp
scas
mov
or
sahf
push
pop
lods
jge
adc
rol
nop
loopne
js
inc
retf
retf
data16
nop
and
jle
leave
jle
outs
hlt
hlt
push
dec
jnp
add
hlt
cmp
outs
(bad)
mov
je
enter
std
xchg
hlt
shl
add
ds
not
sbb
pop
mov
std
pop
cmp
add
pushf
call
sub
mov
sbb
in
nop
or
or
xor
mov
or
je
pop
and
ja
mov
out
hlt
hlt
add
les
mov
arpl
daa
sti
mov
mov
adc
jmp
leave
jne
inc
sar
adc
enter
mov
pop
jle
adc
lods
sub
pop
repnz
test
adc
push
mov
dec
mov
dec
sub
xchg
or
sbb
aas
int
jb
repz
and
jae
(bad)
idiv
push
or
iret
xchg
push
into
js
bound
or
add
fisttp
xchg
sahf
aas
retf
js
cmp
jmp
jle
ret
add
stos
imul
mov
xchg
out
test
fisubr
xchg
push
xchg
ins
jle
adc
mov
(bad)
rcr
push
sub
pop
or
je
add
lea
mov
retf
jnp
es
cmp
mov
jge
cmps
mov
jg
in
jle
ss
jno
mov
cli
dec
inc
cwde
aad
ret
mov
retf
std
retf
dec
jle
mov
scas
loopne
mov
loopne
lock
cmp
daa
pop
icebp
int
cmp
jmp
iret
or
(bad)
mov
shl
mov
cmp
daa
pop
and
push
xor
cmps
call
aam
dec
or
ret
xchg
or
jg
sti
and
test
lds
inc
mov
dec
mov
call
lods
jno
fwait
leave
outs
repz
idiv
mov
sbb
lock
mov
repz
and
(bad)
cld
mov
xchg
gs
stos
mov
xor
js
and
adc
mov
aam
ja
dec
jne
call
mov
cmp
add
sub
sbb
push
(bad)
mov
pop
mov
jns
or
fcomp
push
push
mov
adc
push
push
add
jo
xor
icebp
pop
jl
shr
mov
add
pop
mov
cmp
bound
pop
lahf
fiadd
and
outs
push
cmps
arpl
ret
push
retf
retf
ja
jl
shr
jne
dec
and
jbe
jb
and
loopne
ret
fist
sub
or
lahf
or
mov
iret
popf
outs
and
xchg
outs
loop
(bad)
mov
dec
sti
dec
mov
daa
daa
push
push
add
mov
cdq
imul
push
ins
mov
cdq
and
shl
xor
aad
lds
ret
jb
and
inc
fldenv
jno
xchg
repz
in
in
repz
jbe
inc
stos
cmovb
retf
dec
or
loopne
add
and
push
fwait
jo
xor
imul
adc
push
adc
scas
int
mov
push
jne
js
or
add
push
dec
fs
push
add
jg
push
mov
cmp
mov
xlat
push
jg
jb
cmp
out
das
jmp
nop
jb
in
idiv
test
and
xor
mov
push
mov
popa
xchg
jo
push
mov
add
call
ins
add
dec
push
fcomp
xlat
lock
xchg
dec
and
xor
fldenv
mov
popa
xchg
jo
jnp
imul
xchg
adc
(bad)
neg
lahf
outs
add
dec
and
sbb
out
sbb
mov
xor
(bad)
popa
lock
inc
imul
push
xor
std
jne
sub
xor
adc
fcomp
jo
sbb
bound
adc
xchg
into
lea
xchg
shr
pushw
aas
lahf
icebp
test
adc
mov
xor
dec
xor
fadd
push
adc
ret
test
adc
inc
ror
popa
xchg
jo
pop
mov
test
xchg
pop
jne
pop
jmp
loopne
test
push
clc
adc
jecxz
jns
add
cmp
les
enter
mov
xchg
pop
jne
(bad)
adc
clc
hlt
jnp
lock
inc
ins
adc
test
jno
sub
jnp
mov
loopne
ins
sub
cdq
xor
or
push
add
or
dec
(bad)
sbb
pop
sar
test
int
ins
test
daa
enter
and
leave
inc
xchg
xlat
push
stos
(bad)
fcomp
adc
and
push
rol
sbb
push
sbb
call
dec
shr
xchg
div
jmp
xchg
xlat
push
xor
fcomp
pop
and
(bad)
mov
push
adc
fdivr
sbb
clc
mov
add
daa
lds
add
push
test
in
push
xchg
mov
pop
pushf
inc
in
fistp
daa
fnstenv
adc
clc
aaa
(bad)
pop
xchg
les
enter
jmp
push
cmps
mov
adc
push
or
(bad)
test
out
pop
or
pop
and
or
out
sbb
push
xchg
add
xor
and
mov
movs
mov
sub
add
outs
adc
test
lock
mov
rcl
shr
xor
popa
xchg
jo
inc
mov
push
sbb
lahf
adc
iret
cwde
fisub
lahf
dec
adc
add
mov
jp
test
pushf
cld
xchg
add
call
mov
xchg
add
(bad)
cmps
adc
rcl
mov
xchg
(bad)
adc
cmp
dec
(bad)
les
mov
push
jg
inc
fild
lock
stc
sub
add
mov
sub
lahf
push
cmp
cmp
add
ins
jns
and
adc
adc
mov
adc
fwait
mov
or
mov
xchg
and
add
gs
sbb
cmps
cld
cmp
xchg
or
hlt
scas
cmps
loop
rcr
out
lea
call
outs
push
sbb
jbe
xchg
pop
xchg
pop
jns
retf
mov
clc
adc
mov
int3
popf
icebp
dec
pmulhw
sub
sub
jge
mov
pop
gs
xor
mov
rcr
add
mov
dec
xchg
jl
in
or
jnp
sub
in
je
push
inc
imul
retf
push
inc
fsubr
mov
push
shr
lock
jle
adc
add
out
pop
sub
or
push
loop
outs
icebp
repnz
push
inc
orps
(bad)
sti
hlt
sub
and
sti
adc
int
push
xchg
jg
retf
add
jmp
outs
jbe
(bad)
not
int3
aas
sub
sbb
xlat
hlt
hlt
push
stos
call
ror
sbb
lds
xor
xor
xlat
hlt
hlt
enter
dec
out
xchg
iret
dec
out
mov
hlt
mov
aaa
mov
std
and
shr
mov
imul
mov
fs
mov
call
xlat
and
jmp
mov
lock
jo
xchg
aas
scas
mov
and
rcl
or
jns
aas
je
and
je
and
mov
sbb
mov
rcl
or
dec
jecxz
mov
(bad)
xor
adc
xor
fsub
dec
add
dec
sbb
arpl
movs
stc
sbb
out
mov
xchg
mov
popf
retf
ins
fistp
xlat
mov
retf
xchg
cdq
xor
mov
mov
movs
push
push
inc
sahf
push
cmc
hlt
mov
jo
dec
add
cmc
hlt
mov
xor
pop
push
sti
dec
mov
mov
mov
retf
cmp
cmp
push
aam
hlt
ror
hlt
mov
stos
mov
je
inc
(bad)
mov
sbb
mov
loopne
std
retf
cmp
xor
inc
ror
hlt
mov
sbb
xor
es
fbld
mov
mov
adc
push
xlat
repz
dec
mov
mov
xchg
test
mov
push
pop
imul
sub
pop
mov
push
div
mov
imul
pop
not
push
jmp
int
pop
mov
dec
or
cli
adc
cmp
test
in
pop
xchg
add
test
adc
pop
loope
aas
inc
xor
or
and
mov
aas
js
lods
xor
xchg
dec
cdq
test
push
pop
pop
pop
cmps
enter
(bad)
inc
ins
std
iret
pop
push
push
cli
std
add
and
or
mov
movs
pusha
inc
gs
test
push
clc
clc
xchg
shl
pop
xchg
mov
shl
int3
xchg
xchg
ror
not
mov
mov
mov
mov
mov
xchg
cwde
sbb
cmp
mov
mov
into
cli
imul
hlt
pop
(bad)
fidivr
adc
test
adc
ins
(bad)
push
jo
scas
cmp
hlt
jo
jmp
int3
mov
mov
add
adc
push
lds
xchg
adc
jecxz
ret
bound
sub
xlat
jecxz
out
mov
inc
aad
aaa
push
ret
ror
test
ret
add
call
jns
verw
mov
shl
(bad)
adc
sar
clc
shl
push
mov
jno
xchg
div
(bad)
jnp
ror
dec
push
cmp
repz
mov
mov
sub
mov
xor
pop
inc
xchg
scas
into
shl
push
sbb
or
jecxz
cwde
push
lds
mov
add
shl
call
ror
les
dec
mov
and
xchg
imul
div
loope
dec
(bad)
mov
ror
pop
push
mov
sbb
retf
jmp
xchg
and
cmp
fnstenv
aam
repz
ja
and
inc
jne
sub
shl
aaa
(bad)
adc
jo
repnz
rcr
push
movs
sbb
inc
(bad)
inc
cmc
mov
ja
xchg
inc
mov
mov
xor
icebp
xrelease
sbb
mov
xor
sahf
xor
retf
pop
push
enter
icebp
inc
pop
stos
jb
mov
mov
es
out
xor
repnz
sub
sub
dec
adc
pop
inc
xchg
hlt
mov
add
sub
bound
or
cld
stc
mov
xchg
fdiv
jnp
cmp
pop
add
ror
(bad)
in
ss
test
mov
or
call
imul
(bad)
stos
and
retf
test
inc
push
jmp
inc
fsubrp
jle
xchg
sahf
shr
sbb
sub
add
in
ret
pop
aam
push
outs
jo
add
dec
push
repz
or
test
add
push
jae
mov
aas
vmread
stc
hlt
hlt
mov
call
xlat
and
rcl
leave
fdivr
in
dec
push
push
pop
inc
test
adc
shl
hlt
sbb
and
prefetcht1
cmp
or
mov
test
fdiv
mov
aad
xchg
mov
aad
pop
jge
mov
outs
xlat
pop
ins
cmp
mov
jmp
mov
dec
loopne
xlat
cld
mov
je
scas
pop
nop
jnp
rol
shl
jle
into
xor
fiadd
fdiv
jo
(bad)
rcl
iret
dec
mov
scas
xor
dec
sahf
leave
adc
hlt
mov
fisub
stos
out
inc
add
out
inc
hlt
xlat
sbb
enter
mov
gs
xchg
test
jne
or
sub
pop
mov
out
cmp
add
ret
shl
hlt
ret
or
test
int3
xchg
push
clc
shr
inc
adc
out
test
jns
xor
xor
jae
fisttp
add
push
fmul
sub
push
pusha
or
scas
mov
arpl
rcr
inc
mov
inc
pop
retf
mov
cmp
dec
jmp
jnp
popa
(bad)
cmp
sar
or
cmc
test
test
test
cld
or
call
push
push
jmp
jmp
xor
inc
int3
pop
dec
add
ins
aam
cwde
gs
mov
(bad)
dec
aas
xlat
cmp
xor
cld
dec
dec
add
and
add
mov
inc
stos
out
inc
push
add
rcr
pop
dec
fimul
hlt
sbb
mul
dec
popf
jb
push
push
popf
cwde
jecxz
mov
imul
xor
push
daa
daa
pop
and
ficomp
rcl
sub
sbb
test
or
inc
pop
jle
jb
jno
loop
and
daa
pop
and
fnstcw
(bad)
fdivp
jo
movs
dec
mov
daa
push
icebp
push
(bad)
iret
rcl
mov
mov
adc
in
inc
test
rcl
cmp
mov
mov
in
mov
push
push
push
out
mov
dec
or
sub
lsl
push
xchg
mov
cdq
sub
cmc
mov
loope
add
daa
data16
push
lods
sbb
xchg
and
imul
repz
(bad)
outs
addr16
sub
push
mov
push
sti
stc
repz
cmp
cmovbe
mov
je
inc
iret
pushf
push
mov
sub
mov
push
aas
mov
(bad)
cld
fisubr
adc
inc
xor
fcom
xchg
fs
dec
dec
push
aas
test
mov
shr
pop
and
leave
xchg
jge
mov
sub
cwde
sub
jmp
iret
sbb
mov
(bad)
push
sti
sbb
dec
(bad)
lock
inc
push
loop
fisttp
fsubr
mov
(bad)
ror
clc
(bad)
xor
data16
daa
mov
daa
daa
loopne
daa
lds
pop
pop
cwde
or
inc
ja
pop
and
imul
push
(bad)
cmc
xchg
xor
test
in
inc
push
dec
aad
fwait
mov
ss
pop
xlat
dec
add
fcmovnbe
pop
xchg
daa
xlat
outs
test
mov
fstp
or
and
push
jmp
or
mov
adc
pop
adc
fdiv
xchg
or
xor
adc
(bad)
or
daa
pop
and
les
sub
into
push
iret
pop
in
ror
push
xchg
mov
adc
jmp
jg
xor
into
pop
and
pop
add
(bad)
aaa
or
daa
pop
and
or
sub
ret
sbb
retf
xchg
jmp
inc
add
ficom
mov
mov
cmps
inc
and
adc
xlat
aam
adc
and
jns
ss
pop
das
out
call
repnz
add
fcmovnbe
pop
inc
mov
push
call
cs
jae
test
xchg
adc
mov
leave
adc
dec
xchg
xor
pop
test
fs
cmps
retf
repz
arpl
sahf
fidiv
xchg
daa
daa
pop
and
test
dec
fstp
jmp
popf
pop
or
mov
in
scas
mov
xor
aad
popa
ret
push
xor
(bad)
sub
xlat
dec
ret
xor
or
daa
pop
and
adc
std
pop
mov
jmp
push
sbb
hlt
sub
bound
mov
mov
xor
pop
mov
push
es
jl
pop
das
jmp
sub
sbb
fcomp
popa
retf
scas
pop
retf
pop
das
mov
lea
mov
pop
sbb
shl
adc
pop
test
xchg
fadd
or
adc
push
ror
add
das
dec
mov
sbb
out
hlt
and
iret
or
ins
idiv
sbb
nop
or
test
pop
ss
jo
psubusb
fcom
aam
sbb
mov
add
mov
fiadd
aad
inc
das
adc
aas
push
inc
cdq
gs
pop
mov
or
data16
mov
mov
pop
lods
test
jne
push
xchg
pop
mov
push
sbb
or
xchg
adc
jecxz
stos
or
cdq
sar
or
jecxz
movs
jl
test
sahf
push
arpl
clc
rcl
sbb
xchg
mov
(bad)
lock
int3
hlt
hlt
push
push
xor
cdq
mov
mov
repz
cdq
push
add
mov
or
dec
sub
or
iret
fcomp
pop
and
icebp
arpl
aaa
inc
fwait
or
(bad)
clc
fcmovnbe
push
xchg
mov
xchg
mov
push
iret
hlt
or
sub
mov
xchg
std
hlt
out
mov
clc
adc
int
sti
xchg
imul
retf
popf
je
fcomp
fsub
popf
(bad)
lock
int3
mov
pop
mov
pop
test
xchg
lahf
mov
or
push
not
pushf
mov
jmp
fdiv
sbb
sbb
cmp
sub
or
jae
popf
xchg
dec
jo
adc
fs
mov
or
lahf
std
fist
mov
mov
shl
mov
into
adc
dec
ret
das
jl
fst
inc
dec
retf
mov
test
lea
sbb
fdiv
mov
das
mov
(bad)
hlt
add
jmp
ror
push
in
pop
das
rcl
leave
xchg
pushf
(bad)
jae
jns
dec
ret
jne
in
nop
fistp
fimul
pop
mov
(bad)
clc
adc
fxch
out
mov
cmp
pop
mov
xor
push
xor
cdq
jne
test
lds
mov
adc
jae
pusha
pop
iret
jecxz
add
adc
mov
or
mov
nop
loope
(bad)
cmc
mov
pop
sub
in
fxch
cld
or
push
cmp
mov
push
fisttp
xor
or
cmc
lea
lds
test
mov
loop
mov
jge
jp
push
or
enter
aaa
ins
sahf
adc
push
or
ror
data16
jo
inc
jnp
movs
or
adc
getsec
push
and
hlt
jle
loope
cld
mov
sbb
xor
pop
addr16
ja
inc
sbb
dec
push
mov
sbb
inc
sbb
call
leave
stos
push
test
pop
xor
and
push
xor
xor
leave
sbb
or
fwait
into
sub
inc
add
pop
mov
xor
sbb
or
lods
mov
mov
dec
sbb
push
test
fcmovnu
fcomp
repz
xchg
ins
add
pop
or
mov
adc
sub
xchg
adc
hlt
push
jge
push
data16
sbb
mov
fcomp
pop
and
sbb
popf
pop
pusha
jne
xchg
jo
rcl
sbb
mov
nop
pop
movs
sti
repz
push
or
ss
cmc
add
fcomp
pop
and
mov
push
jnp
data16
adc
fcmovne
sub
add
dec
and
pop
push
pop
cwde
daa
daa
sahf
push
ins
sub
jmp
add
push
push
jge
test
imul
hlt
jo
rcl
cwde
jo
jmp
imul
push
xchg
sbb
jg
and
out
mov
jge
out
rcr
sahf
push
ret
cdq
fsub
fadd
xor
loop
in
xor
repz
and
mov
daa
or
test
imul
in
mov
jl
stos
je
arpl
popf
push
out
cwde
cmp
out
dec
adc
std
int
push
sub
push
pop
add
or
loope
xchg
xor
lea
jno
mov
and
cmp
push
out
jmp
add
shr
iret
push
pusha
xlat
test
in
xchg
xor
lea
pop
call
daa
daa
popa
hlt
rcr
sbb
psubq
push
pop
sub
adc
pop
add
jo
xchg
sub
mov
cs
iret
xchg
mov
ds
repnz
imul
add
xor
in
cmp
loopne
xchg
dec
popf
hlt
push
xchg
fadd
test
std
(bad)
lock
xor
cli
fist
popa
(bad)
mov
lods
or
mov
lods
or
jle
call
(bad)
fucomip
cld
aas
cdq
or
push
sub
xor
xchg
xchg
jge
jbe
aas
cwde
xchg
inc
jo
jecxz
aas
adc
das
stos
loopne
xchg
xchg
nop
sahf
push
ss
das
xchg
fnstcw
repz
jl
jb
add
add
adc
and
popa
xchg
icebp
sbb
xchg
mov
jae
sbb
dec
les
xor
mov
add
lock
inc
push
sbb
iret
fsub
js
mov
jbe
pop
and
xor
pop
iret
push
jge
scas
pusha
adc
in
pop
fld
dec
mov
repnz
shr
in
repz
jmp
pop
out
lea
popa
mov
inc
call
daa
(bad)
mov
out
jecxz
add
xlat
pop
and
daa
push
inc
nop
sahf
push
aam
cmps
cmps
lods
or
mov
cwde
aaa
in
lods
mov
adc
inc
cmp
lea
xchg
iret
out
ins
push
pop
fnstenv
dec
xchg
imul
cmps
iret
xchg
inc
xor
mov
shr
adc
or
cli
inc
aad
sub
inc
mov
das
aas
mov
(bad)
repz
inc
imul
fs
mov
cmps
or
in
cdq
fcomi
sub
outs
repz
cmp
cmps
mov
adc
shr
and
jmp
bound
xor
cmps
loop
dec
lea
sahf
mov
aaa
mov
fs
pop
test
push
xor
sbb
push
mov
add
out
lahf
fld
outs
scas
iret
xchg
ins
add
cmps
dec
mov
ds
sbb
jp
add
jae
mov
ret
lock
mov
cmp
outs
add
std
retf
mov
mov
xor
mov
mov
push
cmc
sbb
fwait
out
cmp
fwait
or
repz
(bad)
imul
mov
je
fs
and
pop
fsubr
(bad)
jmp
cmps
mov
mov
cs
mov
cdq
bnd
pop
inc
xchg
inc
and
icebp
hlt
mov
dec
fs
dec
pusha
jno
mov
mov
ja
dec
hlt
cmp
adc
cmc
add
addr16
add
dec
ss
(bad)
dec
add
mov
cmc
hlt
mov
das
sub
(bad)
xchg
mov
jno
cmc
add
int
fmul
daa
fld
in
in
mov
or
mov
iret
pop
outs
dec
cmc
adc
fst
aad
or
icebp
(bad)
mov
jns
adc
hlt
mov
jg
xchg
jg
inc
mov
test
js
inc
push
jl
fidiv
arpl
jle
je
pop
rcr
mov
outs
in
xchg
inc
hlt
push
test
nop
mov
movs
hlt
repz
add
push
push
sbb
shl
mov
ins
cmps
iret
cdq
push
fwait
jne
push
xchg
ja
adc
mov
and
mov
shr
cdq
ins
(bad)
dec
inc
mov
cmp
jmp
daa
jmp
jne
repnz
hlt
ss
jmp
fxch
or
mov
dec
inc
xchg
cmp
imul
in
jns
imul
scas
iret
cdq
mov
stc
sbb
sub
scas
iret
mov
loop
or
add
cli
push
or
mov
mov
test
dec
nop
mov
or
repnz
fprem1
cmc
cmp
jle
xor
xor
call
scas
shl
repz
jle
ja
pop
in
leave
mov
or
dec
cmc
lock
xchg
pop
mov
pushf
xchg
fistp
cli
adc
shl
pusha
mov
mov
or
adc
or
mov
add
cmp
outs
repnz
mov
dec
ss
(bad)
cmp
mov
repz
jae
fldcw
or
repz
cmps
int
ins
mov
add
sub
outs
into
ret
mov
sar
sbb
push
xchg
mov
in
dec
pop
addr16
dec
jo
xor
dec
mov
add
hlt
loop
xor
push
jno
je
ror
int
and
repz
mov
sar
data16
pop
xchg
cmc
frstor
pusha
call
pop
cmp
adc
daa
daa
pop
and
rcr
call
pop
push
pop
push
add
test
sti
mov
(bad)
ins
jmp
test
mov
mov
xchg
repz
mov
bound
leave
xchg
jp
and
or
and
in
lahf
ret
shl
stc
mov
inc
mov
clc
out
jo
pop
push
cmp
mov
shr
imul
in
pop
xchg
inc
repz
daa
push
popf
cmp
and
xchg
icebp
pop
jl
adc
iret
out
push
lods
mov
imul
and
dec
je
scas
push
cld
inc
push
pop
cwde
daa
daa
daa
jmp
adc
(bad)
xchg
das
in
cmp
daa
pop
and
pop
out
pop
and
dec
ja
jmp
fwait
lods
mov
in
js
repz
push
pop
push
popf
add
push
(bad)
outs
jmp
data16
xchg
push
sbb
sbb
in
cli
add
pushf
jecxz
inc
int
inc
call
mov
retf
stos
adc
or
nop
inc
jo
out
(bad)
inc
out
repz
adc
inc
jge
div
icebp
jo
xchg
ins
enter
pop
adc
mov
mov
out
repz
and
cmc
xor
daa
daa
pop
cwde
pop
mov
gs
test
fimul
and
fcom
xchg
cli
repz
sbb
sbb
ror
mov
shr
enter
aam
dec
imul
jecxz
aam
ret
push
jo
lods
pop
push
sahf
loope
or
jg
jge
pop
pop
ja
pop
xchg
aam
cmc
movs
retf
sbb
sub
mov
pop
cwde
daa
daa
daa
push
inc
sub
mov
jmp
or
pop
xchg
call
not
push
out
(bad)
lds
test
xor
clc
das
lea
sbb
inc
test
stc
jle
jle
stc
pop
imul
add
popa
and
and
addr16
add
jecxz
lods
jmp
adc
js
xchg
ins
xchg
push
js
inc
jb
xchg
mov
push
adc
xchg
cwde
loop
fs
mov
mov
fld
add
fsubr
xor
xchg
push
push
mov
add
and
inc
pop
lds
je
jb
sti
adc
fnstsw
in
push
xchg
mov
iret
call
mov
sub
imul
cmc
leave
fs
pop
mov
push
scas
iret
pop
adc
push
cmp
and
adc
call
retf
aaa
std
push
movs
iret
out
test
imul
leave
xor
mov
xor
cmp
out
nop
xor
push
xor
repz
dec
nop
fstp
pop
inc
mov
pop
pop
leave
push
dec
je
xchg
push
add
repz
repnz
rcl
hlt
fnstenv
adc
add
xchg
dec
or
int3
push
fnstsw
cmp
scas
mov
jo
leave
jge
icebp
inc
mov
call
repz
jle
pop
popf
xor
xlat
outs
xchg
inc
pop
and
fcomp
rcl
dec
mov
push
popa
movs
out
jne
sub
cmp
jge
or
pusha
stos
jmp
and
jmp
fadd
xor
daa
mov
ret
push
popa
jmp
test
add
mov
jmp
xor
stos
sub
adc
mov
shr
loopne
retf
push
cmp
and
dec
dec
sti
in
sti
push
adc
push
cld
cmp
repz
push
add
fstp
jl
adc
jne
test
push
add
mov
cmp
push
and
sub
push
outs
dec
sbb
add
jecxz
int
test
data16
cmp
and
inc
mov
add
std
inc
lea
inc
xor
xchg
mov
push
aas
ds
cmc
out
in
mov
hlt
div
adc
paddw
pop
pop
and
and
adc
pop
imul
mov
lock
imul
idiv
xchg
inc
adc
clc
ja
mov
jle
mov
loopne
adc
test
int3
adc
addr16
mov
in
in
retf
repnz
aam
outs
sahf
daa
mov
in
sbb
loopne
jp
push
xchg
fs
pop
ins
outs
out
jnp
cmps
inc
inc
repnz
pop
dec
push
adc
sbb
pop
pop
ss
and
inc
popa
push
dec
jle
ins
sub
or
and
mov
int
(bad)
xor
push
int
and
sub
es
and
xchg
in
cs
mov
aad
addr16
sub
or
daa
push
leave
data16
or
dec
retf
adc
(bad)
cmc
rcl
(bad)
fcmovu
pusha
jge
test
je
mov
call
jl
mov
jb
sub
enter
push
mov
rcl
call
xchg
add
push
push
push
xchg
cmp
repz
mov
icebp
scas
(bad)
hlt
jg
dec
js
jle
cs
test
bnd
repz
cmc
dec
and
sahf
mov
pop
aam
cmp
repz
add
push
aam
repnz
repz
fadd
xchg
push
jl
sti
mov
neg
xchg
cli
iret
jmp
test
call
xchg
or
mov
out
dec
mov
push
mov
ja
pop
jns
cdq
sub
mov
inc
or
pop
mov
lods
retf
mov
scas
pop
push
mov
icebp
fnstenv
pop
jl
hlt
ins
pop
pop
scas
xor
xchg
xchg
inc
hlt
mov
mov
jmp
xchg
scas
psubd
and
mov
mul
test
mov
dec
push
and
fiadd
sahf
cmp
adc
add
jbe
fiadd
mov
jecxz
cli
push
sti
cmp
jmp
int3
cs
ja
in
xor
inc
hlt
hlt
mov
mov
enter
mov
xchg
adc
or
stc
cld
add
arpl
or
pop
call
mov
fidiv
mov
vmovlpd
enter
imul
jo
test
aam
xchg
cmc
hlt
mov
fs
hlt
in
adc
(bad)
and
fs
xchg
mov
cdq
imul
cdq
dec
or
mov
stos
or
movs
ja
jb
(bad)
cmc
mov
sbb
jmp
not
mov
mov
fs
nop
inc
repz
retf
jmp
and
pop
sub
retf
jp
das
add
aad
push
ret
mov
jmp
not
mov
mov
jnp
ror
jae
je
cmp
in
and
mov
push
adc
add
dec
loopne
ficomp
and
fist
adc
shl
repz
jmp
mov
pop
add
imul
inc
xchg
push
pop
ja
in
push
xchg
inc
mov
and
icebp
add
call
fwait
lods
mov
sbb
popa
mov
dec
ret
in
xchg
hlt
ja
loop
sbb
jae
pop
popf
test
mov
ret
nop
mov
add
pop
mov
dec
hlt
outs
mov
repnz
xchg
test
repnz
mov
pop
outs
leave
test
inc
xchg
sti
mov
or
(bad)
fdivrp
dec
cli
test
pop
adc
pop
das
mov
outs
xchg
lock
and
jmp
dec
fisttp
mov
pop
aam
fsub
scas
ret
out
hlt
lock
not
mov
outs
mov
and
inc
cmp
out
cmp
test
test
sbb
or
pop
push
mov
xor
jg
es
adc
or
xchg
inc
mov
movups
sti
jg
test
pop
inc
jmp
xlat
and
push
in
mov
les
add
es
or
add
(bad)
xchg
hlt
icebp
cmp
ret
jmp
dec
or
xor
aad
jg
mov
add
sbb
xchg
mov
push
mov
in
fcmovne
jae
jns
test
push
pop
lods
jo
div
hlt
ret
push
mov
in
push
mov
cmp
(bad)
xor
test
sbb
push
hlt
enter
push
shr
das
xchg
sbb
cs
inc
hlt
hlt
mov
xchg
mov
cmp
push
pop
or
inc
push
mov
shr
hlt
inc
lea
retf
(bad)
int
rol
jle
dec
hlt
hlt
mov
and
aaa
jp
mov
mov
push
pop
clc
hlt
inc
and
cli
jo
test
mul
clc
hlt
mov
adc
xor
or
push
test
fld
add
fwait
pushf
dec
shl
add
push
(bad)
jnp
repnz
and
mov
test
mov
nop
cmp
rcr
mov
test
dec
test
cmp
test
(bad)
cmp
mov
pop
or
test
xchg
push
fdiv
dec
jo
inc
add
mov
test
mov
call
or
jns
dec
xor
add
fiadd
mov
xor
in
mov
push
mov
movs
mov
cmp
(bad)
cwde
icebp
imul
xchg
cs
mov
hlt
hlt
mov
pop
hlt
fdecstp
outs
sub
mov
dec
dec
adc
imul
dec
(bad)
mov
ret
out
mov
mov
jmp
pop
outs
push
stc
adc
xchg
push
mov
lea
pop
leave
inc
mov
lock
outs
cs
fwait
xlat
mov
dec
out
inc
cld
push
or
or
mov
icebp
repz
pop
cmp
mov
hlt
(bad)
fwait
bound
push
leave
sub
retf
jmp
dec
ret
sbb
mov
or
jl
neg
add
cmps
nop/reserved
mov
inc
hlt
mov
ins
shr
(bad)
dec
fs
cdq
(bad)
or
add
xor
sbb
push
fld
mov
retf
popf
stos
sbb
xor
fist
hlt
hlt
sbb
clc
or
cli
add
jno
scas
mov
iret
js
retf
adc
push
repz
hlt
xor
mov
or
push
push
adc
test
inc
out
push
jnp
push
dec
hlt
hlt
mov
and
je
ret
mov
mov
cld
mov
mov
and
cmp
jge
(bad)
loop
push
sti
pop
into
into
sbb
out
hlt
hlt
enter
test
mov
pop
dec
mov
sahf
add
fidiv
sbb
push
sub
ss
cmp
test
scas
inc
mov
enter
(bad)
ret
imul
mov
xchg
aam
jle
sti
push
(bad)
add
push
cmp
in
push
mov
int3
ins
out
pop
xor
fild
shr
lock
dec
or
(bad)
cld
repnz
or
pop
xchg
cmps
rol
mov
mov
mov
lea
jo
repz
cmc
xchg
mov
repnz
cmp
or
push
push
out
repz
mov
sbb
sbb
enter
xlat
in
mov
test
pop
fs
xchg
jmp
repz
xlat
lods
rol
mov
dec
repnz
mov
lea
jmp
cs
dec
test
mov
in
call
cwde
(bad)
aaa
in
arpl
repz
push
mov
in
cmps
out
add
add
mov
popa
nop
sbb
xchg
dec
xchg
xor
add
mov
mov
call
mov
mov
or
enter
sub
in
(bad)
cmc
inc
rcl
and
es
xchg
test
int
icebp
repz
or
push
xchg
out
mov
(bad)
fdiv
mov
and
cs
adc
mov
sbb
pop
push
and
test
mov
xor
lock
js
mov
adc
pop
jmp
mov
ds
retf
ja
adc
scas
xor
and
mov
sbb
clc
push
nop
aam
mov
aas
or
mov
cmps
add
jns
repnz
(bad)
sub
jnp
outs
mov
mov
out
dec
(bad)
mov
xchg
mov
das
(bad)
iret
push
xchg
data16
or
xchg
pop
jl
mov
mov
aad
push
jnp
out
inc
(bad)
sti
jmp
and
and
push
pusha
inc
jl
mov
nop
or
cld
hlt
hlt
cwde
aam
sbb
cld
mov
add
ret
imul
aad
sub
test
jp
or
das
push
pop
je
mov
adc
inc
jmp
hlt
sub
hlt
jl
loop
mov
in
cwde
test
leave
pop
mov
xlat
mov
dec
cmps
pop
jbe
sub
mov
call
loop
mov
loop
adc
and
add
dec
std
hlt
adc
sub
ds
mov
push
les
jno
outs
cmp
jo
nop
push
push
les
sbb
jno
or
cmp
sub
and
or
icebp
inc
cli
neg
dec
ret
std
mov
aaa
inc
je
push
and
xor
popa
xchg
or
ins
(bad)
cmp
mov
in
aad
jecxz
push
or
rol
out
stos
cmp
iret
dec
sbb
fisubr
mul
inc
aaa
mov
jle
cwde
test
repnz
les
outs
fdivr
add
mov
out
dec
sbb
out
jno
add
loopne
ror
jg
sub
outs
jnp
popf
mov
int
icebp
or
jge
mov
scas
push
in
xor
pop
pop
jecxz
mov
mov
das
sbb
push
mov
cmp
pop
jecxz
mov
outs
add
mov
inc
or
xchg
inc
mov
xor
dec
push
sub
mov
push
mov
stc
sti
add
out
push
and
sub
ss
mov
inc
jl
mov
nop
or
(bad)
hlt
hlt
cwde
aam
jo
out
push
sahf
jae
call
aaa
daa
bound
push
in
hlt
hlt
xor
mov
cmp
and
addr16
es
loope
hlt
or
add
push
jno
ds
in
sar
cld
sbb
mov
repz
mov
shl
mov
add
xchg
iret
das
xchg
xchg
loopne
and
out
repz
pop
in
aas
daa
daa
popa
pop
and
push
jbe
popa
push
inc
mov
inc
xor
jmp
inc
nop
daa
daa
daa
xlat
pop
sar
sahf
push
sbb
xchg
(bad)
mov
cwde
jg
push
inc
(bad)
jmp
xor
push
outs
jne
aad
mov
gs
mov
xor
jb
shl
sbb
jle
cs
xchg
js
jecxz
jbe
xchg
lea
outs
add
push
(bad)
cdq
outs
xchg
push
dec
enter
cmp
pop
jbe
and
mov
dec
stos
sub
jle
push
sub
sar
test
in
call
jb
daa
daa
daa
push
inc
nop
daa
daa
daa
xlat
pop
mov
(bad)
int3
arpl
es
and
and
dec
cmp
xchg
neg
scas
xrelease
or
or
ret
cmp
call
xor
mov
xor
jbe
repz
(bad)
sbb
cli
int
rcl
mov
sbb
and
fiadd
mov
dec
cdq
in
pusha
lods
xchg
push
or
xacquire
sbb
xor
daa
daa
push
inc
sub
popf
call
fsub
add
sub
add
mov
xchg
icebp
bound
xor
add
aam
aad
jo
aad
push
leave
mov
add
jae
jns
dec
xchg
ret
scas
mov
push
jno
cmp
repz
test
sbb
mov
ret
loopne
das
jmp
mov
ja
ins
mul
popa
mov
aam
int
jbe
lahf
xor
adc
inc
xchg
xchg
xor
pop
mov
xchg
add
pop
fsub
js
ins
rol
or
outs
fnstenv
push
xor
aaa
mov
push
(bad)
pop
and
mov
mov
push
imul
(bad)
xchg
xor
jo
popa
push
ss
xchg
pusha
mov
es
fs
hlt
hlt
mov
icebp
jo
imul
retf
sbb
jo
push
mov
fistp
out
mov
and
jl
aam
push
and
arpl
jmp
xchg
mov
test
mov
js
dec
and
repz
push
jnp
sbb
push
add
stc
and
push
dec
mov
jbe
push
add
cmp
add
or
and
stc
or
xor
or
push
mov
inc
loop
je
sar
imul
lea
test
xchg
cdq
retf
add
push
dec
mov
repz
mov
adc
add
shr
mov
cli
inc
mov
pop
cmps
adc
or
dec
add
cwde
rol
rol
xor
adc
mov
pop
sbb
into
sahf
xor
or
jns
mov
adc
loop
jl
arpl
sbb
fcomp
fcom
sbb
inc
sbb
jmp
jle
je
inc
in
(bad)
jbe
iret
adc
xchg
fsub
out
xchg
jns
add
cmp
repz
inc
nop
daa
daa
daa
xlat
pop
jno
push
jl
jge
fcomp
call
ins
cdq
popa
add
hlt
hlt
add
fs
mov
push
mov
out
sub
xchg
mov
cwde
loop
mov
test
jge
mov
fild
mov
or
mov
pop
cdq
add
stos
jno
add
aaa
pop
aam
xchg
inc
xlat
pop
mov
les
or
je
enter
jg
xchg
cmps
fxch
jge
aad
scas
adc
or
mov
out
lahf
dec
rol
dec
adc
loop
(bad)
cld
xor
xchg
jp
pop
hlt
imul
gs
push
add
fild
mov
push
mov
pop
jae
xchg
in
pusha
cs
dec
jb
dec
data16
xchg
sbb
repz
call
jno
fcos
adc
jecxz
mov
icebp
test
loop
iret
mov
ror
or
and
xchg
push
cmp
in
retf
out
mov
out
mov
pop
pop
pop
int3
retf
pop
in
int
mov
test
popa
xchg
sbb
int
mov
cmp
mov
jl
ror
push
lods
fcmovnb
pop
rcl
leave
dec
jnp
shr
xchg
add
aas
jno
outs
icebp
repz
out
ds
scas
(bad)
nop
xchg
sbb
adc
pop
jecxz
mov
mov
out
ss
int3
adc
dec
mov
ror
cmp
loop
xchg
mov
addr16
je
outs
imul
nop
mov
inc
in
ficomp
jmp
out
retf
push
mov
mov
or
ret
movs
add
hlt
hlt
pop
hlt
fs
xchg
cwde
imul
gs
cwde
push
sbb
test
jge
jl
and
test
test
rcr
out
repz
add
dec
cmc
xchg
xor
out
mov
adc
stos
sbb
mov
cld
jg
add
inc
aaa
mov
cmp
fs
dec
aad
mov
or
outs
mov
mov
shr
push
and
adc
(bad)
jl
xchg
test
ret
sub
mov
sub
je
ror
lahf
scas
lds
in
div
or
popw
sub
or
mov
pushf
(bad)
je
mov
or
lea
outs
repz
pop
xchg
add
fcomp
shl
(bad)
xor
push
push
hlt
sub
pop
cli
lods
outs
xchg
cmc
ins
scas
repz
xchg
dec
repz
dec
and
daa
daa
xlat
pop
adc
inc
push
sub
jbe
push
test
push
(bad)
mov
imul
dec
lods
out
add
mov
add
adc
jmp
mov
loop
jge
test
daa
daa
daa
push
and
push
sub
sar
je
mov
mov
out
addr16
push
repz
mov
je
mov
or
or
arpl
xchg
cmc
xchg
and
push
leave
loopne
(bad)
mov
xchg
hlt
dec
cs
jmp
add
fisttp
popf
pop
sbb
mov
jnp
repz
add
bound
xchg
rol
ins
aas
sbb
xchg
pop
adc
pusha
mov
pop
jae
xchg
or
lea
cmp
aam
mov
cmp
adc
inc
lods
jne
add
xor
mov
repz
jge
leave
cmc
xchg
retf
adc
je
add
mov
shl
push
leave
fmulp
push
int3
out
mov
jnp
lods
mulps
dec
repz
lahf
adc
iret
mov
retf
adc
cmp
sub
loop
aam
js
test
in
inc
movs
cs
xor
jecxz
sbb
hlt
mov
aas
mov
repnz
aad
imul
shl
mov
cmovns
sahf
ret
outs
aam
data16
sbb
inc
mov
dec
xor
lds
xrelease
fnstcw
and
hlt
or
adc
add
test
mov
sbb
inc
dec
ror
je
iret
xor
push
or
mov
push
push
lods
push
push
stos
out
jmp
dec
or
adc
jle
(bad)
hlt
push
iret
push
xchg
push
push
or
loop
fbld
leave
push
or
jmp
(bad)
xchg
iret
arpl
add
xlat
mov
pop
out
sahf
clc
adc
xor
adc
push
cmp
clc
dec
repz
std
pop
aaa
aas
and
das
and
repnz
imul
push
cmp
pop
cmc
hlt
hlt
call
sub
call
mov
cld
lea
int
push
aas
push
inc
push
outs
int3
cmc
add
mov
sbb
push
lea
xor
outs
pop
pop
out
push
mov
je
ins
xor
mov
addr16
push
mov
push
icebp
xchg
mov
push
aas
cli
pop
adc
mov
or
push
popf
pop
or
pusha
push
loope
pop
loope
mov
stos
or
in
ror
outs
mov
je
xor
jmp
mov
movs
xor
shl
div
hlt
push
cwde
push
(bad)
fld
repz
retf
adc
add
adc
rol
fistp
test
repz
in
dec
outs
idiv
scas
or
push
cwde
pop
sub
lods
pop
in
xor
scas
mov
icebp
cmc
aas
mov
cwde
add
test
pusha
sbb
fld
pushf
adc
sub
loope
leave
sub
push
or
or
xchg
inc
hlt
jb
mov
mov
out
sbb
xchg
fmul
push
inc
mov
mov
xchg
iret
leave
ins
fist
data16
mov
fcomi
adc
jo
xchg
iret
ret
add
iret
jae
add
xchg
inc
pop
es
add
bound
imul
loope
aam
sar
aas
loop
in
dec
push
sub
dec
out
call
pop
adc
sbb
push
push
iret
sti
int3
adc
jo
xchg
call
iret
dec
(bad)
cmc
jne
push
cmp
iret
adc
sbb
jo
push
mov
xchg
mov
shl
repz
mov
push
pop
popf
lahf
test
add
in
pop
pop
(bad)
dec
add
push
sbb
sbb
jo
repz
ror
dec
repz
cwde
jmp
mov
jmp
mov
jge
xchg
in
add
push
fldenv
test
add
jno
push
add
mov
sbb
out
push
lods
shl
pop
shl
jo
rcr
mov
mov
aam
shl
lds
ss
fst
add
test
sub
dec
adc
sahf
mov
cmp
push
iret
or
jne
test
xchg
outs
xchg
pop
outs
xchg
fsubr
cwde
je
aas
mov
and
shl
xlat
xor
push
mov
push
mov
fiadd
retf
xor
push
aad
out
push
fldcw
iret
jmp
cmc
jp
fbld
pop
je
mov
xchg
je
adc
mov
mov
push
jno
hlt
push
sahf
(bad)
jg
xchg
xchg
lds
push
jle
fdiv
aam
outs
push
mov
in
cmps
mov
inc
mov
jb
repz
(bad)
repz
loop
push
cli
mov
xor
imul
xlat
adc
mov
mov
repnz
lea
jb
mul
mov
mov
ins
pop
pusha
daa
scas
sub
mov
les
jbe
inc
hlt
jb
cmp
cdq
lods
in
js
or
push
loopne
or
adc
and
stc
pop
mov
lods
lea
test
xchg
pusha
cli
jl
pop
xchg
fld
add
mov
mov
jecxz
test
mul
inc
jmp
enter
ss
xor
sub
push
js
push
loopne
push
xchg
jo
xchg
mov
push
adc
xchg
xor
sbb
dec
scas
jmp
jmp
jb
call
aad
pop
cwde
daa
daa
daa
push
inc
nop
daa
daa
sahf
call
pusha
sbb
out
adc
pop
mov
cmc
mov
or
lea
daa
xlat
pop
xchg
add
sahf
sub
pcmpgtd
dec
shl
jo
in
or
push
in
clc
inc
pop
add
xchg
jo
cmps
iret
lahf
imul
jge
dec
repz
fadd
mov
daa
aad
ror
sti
and
xlat
add
daa
pop
and
jl
call
sbb
inc
xchg
dec
daa
daa
sahf
push
ins
pop
jb
sti
add
in
pop
fld
jge
jo
icebp
jb
jecxz
jmp
sub
loope
sahf
int
daa
fwait
adc
or
push
nop
inc
mov
push
daa
pop
xchg
add
fcomp
fcom
mov
cmp
and
hlt
hlt
mov
jns
inc
dec
cmp
test
push
aad
jecxz
inc
aad
out
data16
sbb
stos
(bad)
or
test
iret
cdq
outs
iret
popf
cwde
lea
adc
(bad)
(bad)
xchg
or
push
aam
sti
mov
push
stc
push
jle
dec
scas
iret
xchg
ins
mov
loope
cmp
and
sbb
jo
sub
xchg
aas
popf
in
xchg
out
repz
mov
mov
out
xor
pop
pop
rcl
(bad)
int
enter
sahf
lods
jg
mov
add
sub
sub
sub
or
mov
test
outs
xchg
repz
clc
iret
shl
mov
fsubr
cmp
xchg
inc
jo
fstp
out
ror
sub
imul
adc
xchg
add
mov
mov
gs
fadd
xchg
xlat
inc
inc
sbb
push
add
cmps
ror
sub
sub
sbb
jo
enter
inc
mov
loopne
ror
dec
cmps
iret
xchg
fisub
aad
lods
sbb
jge
test
add
out
cmc
push
xor
adc
popa
mov
inc
outs
icebp
adc
iret
xchg
dec
add
repz
push
add
jb
(bad)
cmp
xor
shr
scas
(bad)
out
pop
jae
jle
cmp
lock
mov
push
mov
icebp
and
pop
stc
cmps
push
aam
repz
and
add
fadd
daa
daa
pop
and
jecxz
mov
jge
fwait
in
or
or
test
cmps
iret
(bad)
call
mov
adc
std
fpatan
imul
bound
mov
iret
push
mov
fistp
loop
jp
fwait
loopne
mov
repz
mov
ins
mov
out
cmp
xlat
push
or
ficomp
lods
jo
xor
xchg
aas
jno
cld
bnd
mov
add
jnp
outs
retf
cwde
sbb
push
shl
mov
jae
(bad)
mov
mov
pop
pop
fs
xacquire
xchg
pop
push
dec
push
repnz
test
(bad)
in
pop
hlt
cmp
lock
lea
jg
repnz
fucomi
icebp
xrelease
inc
mov
xchg
jle
xchg
icebp
repz
jge
(bad)
pop
mov
mov
rcl
movs
out
(bad)
fwait
mul
mov
mov
shr
push
add
pop
fs
icebp
xchg
test
stc
dec
xor
mov
xor
mov
adc
mov
push
retf
add
sbb
or
mov
test
push
jns
in
mov
mov
sbb
mov
fs
dec
test
iret
popa
rcr
mov
or
xor
ret
test
dec
xor
(bad)
cmc
jmp
xchg
mov
jg
(bad)
std
cmps
xlat
sub
mov
jbe
into
nop
push
inc
out
repz
(bad)
div
xchg
or
inc
dec
in
xchg
fwait
jne
add
data16
fcomp
enter
adc
out
(bad)
cmc
movs
xchg
pusha
icebp
mov
call
mov
push
ins
nop
or
cmc
hlt
hlt
cwde
aad
cli
push
mov
(bad)
xor
es
push
mov
data16
mov
repz
xchg
mov
adc
fcomip
hlt
push
fwait
mov
into
in
test
ret
xchg
pop
stos
or
or
in
jmp
cmp
fiadd
or
mov
jne
mov
rcl
dec
xchg
dec
xchg
xchg
inc
hlt
xor
dec
pop
stos
or
lods
push
push
bound
loop
push
in
je
mov
fiadd
pop
jo
retf
push
push
mov
add
xor
jne
and
lods
pop
dec
mov
cmp
or
in
outs
aaa
test
xchg
iret
or
push
(bad)
fmul
out
mov
nop
inc
in
or
repz
mov
dec
iret
pop
lods
sbb
fistp
out
scas
xchg
inc
push
test
or
xlat
xor
push
in
cli
jecxz
add
adc
cmps
adc
xor
add
cmp
fsubr
iret
test
and
and
jno
mov
mov
push
xor
adc
and
aaa
ja
or
(bad)
out
cwde
mov
(bad)
jmp
jnp
add
xchg
nop
dec
cmps
add
adc
fisttp
adc
hlt
(bad)
jb
in
rol
test
in
aam
out
mov
xchg
lea
ins
nop
ror
sub
js
push
aas
jno
xor
pop
cdq
and
mov
(bad)
call
xchg
scas
jnp
je
or
pop
stos
pop
dec
nop
adc
div
hlt
inc
out
adc
or
hlt
idiv
push
addr16
fsub
mov
or
fmul
xchg
or
mov
or
and
mov
mov
call
lds
(bad)
xchg
fcomip
push
aas
jno
cld
repnz
add
in
fcomp
or
xchg
cmp
mov
(bad)
loop
rol
sbb
lods
pop
and
sub
cmp
lea
jb
jbe
jne
in
and
scas
mov
ins
and
jae
call
icebp
push
sbb
and
in
lea
aas
jno
hlt
repnz
repnz
push
push
std
outs
pushf
add
xor
call
hlt
add
data16
sbb
fcom
repnz
ins
aam
jl
mov
mov
jno
test
add
js
shl
hlt
adc
outs
inc
or
push
cmc
popa
adc
repz
xchg
sar
imul
ficomp
mov
add
clc
(bad)
loop
(bad)
iret
(bad)
push
test
dec
jmp
leave
jo
jae
xchg
iret
retf
or
sahf
inc
repz
sbb
mov
rol
push
jge
or
xchg
cmc
dec
sbb
jecxz
dec
dec
popa
add
outs
mov
mov
mov
imul
mov
or
clc
adc
les
mov
push
add
mov
or
adc
repz
fnstcw
fnsetpm(287
adc
inc
cmps
cmps
test
mov
stos
rcr
jmp
aas
sbb
aad
iret
or
mov
or
add
loope
pop
enter
sub
lea
cmc
iret
push
xor
jmp
fs
jmp
pop
es
mov
adc
mov
add
pop
es
je
(bad)
mov
lods
jo
scas
fld
mov
repnz
mov
dec
and
cmps
mov
loop
pop
hlt
or
dec
jp
sub
mov
fdivp
xchg
push
push
cwde
(bad)
std
mov
loope
loop
enter
or
pusha
lahf
cmp
dec
add
mov
dec
hlt
push
data16
add
std
out
push
into
imul
push
or
dec
xor
mov
sbb
hlt
hlt
push
out
iret
sbb
dec
lds
in
mov
push
lahf
cmp
into
jecxz
xchg
inc
cwde
inc
hlt
jb
xchg
popf
xor
rcr
aas
retf
nop
cmp
fwait
adc
inc
sbb
or
push
jmp
jb
push
(bad)
fstp
sbb
enter
movs
in
cld
cwde
mov
push
leave
push
mov
mov
xchg
dec
rcr
(bad)
in
add
add
in
pop
aas
je
or
add
cmps
add
cmp
push
outs
cmps
cli
add
and
leave
pop
xor
mov
loopne
jl
out
hlt
hlt
or
sbb
rep
hlt
push
or
bound
movs
nop
adc
cli
hlt
hlt
push
fnstsw
arpl
add
mov
lds
xchg
cli
cld
or
jge
ret
xor
lahf
fcom
xchg
dec
add
mov
je
sbb
or
inc
and
xchg
push
outs
sbb
add
mov
mov
mov
and
lea
cmps
cld
out
in
cmp
in
sbb
addr16
(bad)
mov
xchg
leave
aas
ja
pop
dec
adc
data16
repz
fsub
scas
(bad)
or
out
mov
repnz
lahf
aad
das
cmps
pop
push
mov
and
fdivr
hlt
hlt
cwde
aad
cld
push
mov
test
or
dec
inc
dec
or
scas
iret
fisttp
mov
add
or
retf
mov
out
(bad)
in
fdivr
les
gs
or
pop
in
test
jmp
hlt
hlt
jb
push
popa
cdq
push
je
ror
in
and
mov
inc
mov
imul
(bad)
hlt
jb
sbb
scas
mov
cdq
add
sbb
pop
mov
in
test
xchg
cwde
sti
jmp
js
loop
(bad)
arpl
mov
or
xor
repnz
or
mov
pusha
cmc
in
push
inc
or
xchg
imul
jmp
dec
push
dec
jb
jecxz
add
in
dec
gs
cmp
aas
jno
shl
repz
aas
hlt
cmp
call
aaa
push
std
std
pop
dec
into
mov
xor
add
adc
test
push
mov
push
sti
out
lods
dec
in
mov
(bad)
(bad)
fs
mov
(bad)
jl
inc
repz
aas
jno
shl
repz
push
call
or
clc
mov
dec
addr16
lea
addr16
jge
mov
or
ss
mov
cs
loopne
lds
cld
sbb
(bad)
aas
mov
mov
mov
xor
iret
lds
fmulp
or
and
push
push
dec
add
jp
je
sahf
std
hlt
hlt
push
xchg
ins
hlt
stos
inc
test
sub
sbb
mov
xchg
rcl
out
push
(bad)
mov
jl
pop
push
or
in
xor
add
enter
int3
int
push
mov
(bad)
out
aas
add
pop
cmp
jbe
jmp
mov
add
sbb
iret
xchg
js
add
or
add
cmp
jle
or
in
pushf
mov
aas
adc
and
iret
adc
lds
test
imul
jge
pop
scas
iret
popf
sub
push
sti
or
js
in
add
add
xchg
push
mov
pop
mov
sti
adc
call
sub
loope
push
adc
mov
repnz
stos
std
mov
clc
sub
sti
bound
repz
(bad)
dec
loope
out
mov
fcom
nop
inc
mov
outs
sbb
mov
mov
push
jg
ds
test
hlt
hlt
push
xchg
push
test
fadd
adc
imul
dec
pushf
(bad)
cmp
cmc
adc
repz
stc
sahf
or
repz
xor
xor
cwde
fisubr
mov
pop
clc
adc
out
iret
dec
stos
ja
mov
les
lods
dec
pop
scas
dec
rcl
pushf
cmp
and
mov
clc
and
sbb
iret
or
inc
repz
cmp
fiadd
mov
imul
inc
sti
sbb
mov
mov
popa
fs
test
(bad)
hlt
add
retf
lock
add
mov
rcl
in
